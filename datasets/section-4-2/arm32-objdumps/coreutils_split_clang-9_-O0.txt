
../repos/coreutils/src/split:     file format elf32-littlearm


Disassembly of section .init:

0001136c <.init>:
   1136c:	push	{r3, lr}
   11370:	bl	1177c <__assert_fail@plt+0x48>
   11374:	pop	{r3, pc}

Disassembly of section .plt:

00011378 <fdopen@plt-0x14>:
   11378:	push	{lr}		; (str lr, [sp, #-4]!)
   1137c:	ldr	lr, [pc, #4]	; 11388 <fdopen@plt-0x4>
   11380:	add	lr, pc, lr
   11384:	ldr	pc, [lr, #8]!
   11388:	andeq	r2, r2, r8, ror ip

0001138c <fdopen@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #139264	; 0x22000
   11394:	ldr	pc, [ip, #3192]!	; 0xc78

00011398 <calloc@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #139264	; 0x22000
   113a0:	ldr	pc, [ip, #3184]!	; 0xc70

000113a4 <fputs_unlocked@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #139264	; 0x22000
   113ac:	ldr	pc, [ip, #3176]!	; 0xc68

000113b0 <raise@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #139264	; 0x22000
   113b8:	ldr	pc, [ip, #3168]!	; 0xc60

000113bc <strcmp@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #139264	; 0x22000
   113c4:	ldr	pc, [ip, #3160]!	; 0xc58

000113c8 <strtol@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #139264	; 0x22000
   113d0:	ldr	pc, [ip, #3152]!	; 0xc50

000113d4 <printf@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #139264	; 0x22000
   113dc:	ldr	pc, [ip, #3144]!	; 0xc48

000113e0 <read@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #139264	; 0x22000
   113e8:	ldr	pc, [ip, #3136]!	; 0xc40

000113ec <fflush@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #139264	; 0x22000
   113f4:	ldr	pc, [ip, #3128]!	; 0xc38

000113f8 <sigprocmask@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #139264	; 0x22000
   11400:	ldr	pc, [ip, #3120]!	; 0xc30

00011404 <memmove@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #139264	; 0x22000
   1140c:	ldr	pc, [ip, #3112]!	; 0xc28

00011410 <free@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #139264	; 0x22000
   11418:	ldr	pc, [ip, #3104]!	; 0xc20

0001141c <_exit@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #139264	; 0x22000
   11424:	ldr	pc, [ip, #3096]!	; 0xc18

00011428 <memcpy@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #139264	; 0x22000
   11430:	ldr	pc, [ip, #3088]!	; 0xc10

00011434 <mbsinit@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #139264	; 0x22000
   1143c:	ldr	pc, [ip, #3080]!	; 0xc08

00011440 <ftruncate64@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #139264	; 0x22000
   11448:	ldr	pc, [ip, #3072]!	; 0xc00

0001144c <fwrite_unlocked@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #139264	; 0x22000
   11454:	ldr	pc, [ip, #3064]!	; 0xbf8

00011458 <memcmp@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #139264	; 0x22000
   11460:	ldr	pc, [ip, #3056]!	; 0xbf0

00011464 <dup2@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #139264	; 0x22000
   1146c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011470 <realloc@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #139264	; 0x22000
   11478:	ldr	pc, [ip, #3040]!	; 0xbe0

0001147c <textdomain@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #139264	; 0x22000
   11484:	ldr	pc, [ip, #3032]!	; 0xbd8

00011488 <rawmemchr@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #139264	; 0x22000
   11490:	ldr	pc, [ip, #3024]!	; 0xbd0

00011494 <iswprint@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #139264	; 0x22000
   1149c:	ldr	pc, [ip, #3016]!	; 0xbc8

000114a0 <__fxstat64@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #139264	; 0x22000
   114a8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114ac <sigaction@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #139264	; 0x22000
   114b4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114b8 <lseek64@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #139264	; 0x22000
   114c0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114c4 <waitpid@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #139264	; 0x22000
   114cc:	ldr	pc, [ip, #2984]!	; 0xba8

000114d0 <__ctype_get_mb_cur_max@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #139264	; 0x22000
   114d8:	ldr	pc, [ip, #2976]!	; 0xba0

000114dc <strcpy@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #139264	; 0x22000
   114e4:	ldr	pc, [ip, #2968]!	; 0xb98

000114e8 <__fpending@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #139264	; 0x22000
   114f0:	ldr	pc, [ip, #2960]!	; 0xb90

000114f4 <ferror_unlocked@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #139264	; 0x22000
   114fc:	ldr	pc, [ip, #2952]!	; 0xb88

00011500 <mbrtowc@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #139264	; 0x22000
   11508:	ldr	pc, [ip, #2944]!	; 0xb80

0001150c <error@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #139264	; 0x22000
   11514:	ldr	pc, [ip, #2936]!	; 0xb78

00011518 <open64@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #139264	; 0x22000
   11520:	ldr	pc, [ip, #2928]!	; 0xb70

00011524 <getenv@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #139264	; 0x22000
   1152c:	ldr	pc, [ip, #2920]!	; 0xb68

00011530 <malloc@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #139264	; 0x22000
   11538:	ldr	pc, [ip, #2912]!	; 0xb60

0001153c <sigaddset@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #139264	; 0x22000
   11544:	ldr	pc, [ip, #2904]!	; 0xb58

00011548 <__libc_start_main@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #139264	; 0x22000
   11550:	ldr	pc, [ip, #2896]!	; 0xb50

00011554 <__freading@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #139264	; 0x22000
   1155c:	ldr	pc, [ip, #2888]!	; 0xb48

00011560 <__gmon_start__@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #139264	; 0x22000
   11568:	ldr	pc, [ip, #2880]!	; 0xb40

0001156c <getopt_long@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #139264	; 0x22000
   11574:	ldr	pc, [ip, #2872]!	; 0xb38

00011578 <__ctype_b_loc@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #139264	; 0x22000
   11580:	ldr	pc, [ip, #2864]!	; 0xb30

00011584 <exit@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #139264	; 0x22000
   1158c:	ldr	pc, [ip, #2856]!	; 0xb28

00011590 <gettext@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #139264	; 0x22000
   11598:	ldr	pc, [ip, #2848]!	; 0xb20

0001159c <strlen@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #139264	; 0x22000
   115a4:	ldr	pc, [ip, #2840]!	; 0xb18

000115a8 <__libc_current_sigrtmax@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #139264	; 0x22000
   115b0:	ldr	pc, [ip, #2832]!	; 0xb10

000115b4 <strchr@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #139264	; 0x22000
   115bc:	ldr	pc, [ip, #2824]!	; 0xb08

000115c0 <setenv@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #139264	; 0x22000
   115c8:	ldr	pc, [ip, #2816]!	; 0xb00

000115cc <memrchr@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #139264	; 0x22000
   115d4:	ldr	pc, [ip, #2808]!	; 0xaf8

000115d8 <fprintf@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #139264	; 0x22000
   115e0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115e4 <getpagesize@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #139264	; 0x22000
   115ec:	ldr	pc, [ip, #2792]!	; 0xae8

000115f0 <__errno_location@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #139264	; 0x22000
   115f8:	ldr	pc, [ip, #2784]!	; 0xae0

000115fc <__cxa_atexit@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #139264	; 0x22000
   11604:	ldr	pc, [ip, #2776]!	; 0xad8

00011608 <memset@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #139264	; 0x22000
   11610:	ldr	pc, [ip, #2768]!	; 0xad0

00011614 <write@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #139264	; 0x22000
   1161c:	ldr	pc, [ip, #2760]!	; 0xac8

00011620 <fileno@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #139264	; 0x22000
   11628:	ldr	pc, [ip, #2752]!	; 0xac0

0001162c <strtoumax@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #139264	; 0x22000
   11634:	ldr	pc, [ip, #2744]!	; 0xab8

00011638 <memchr@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #139264	; 0x22000
   11640:	ldr	pc, [ip, #2736]!	; 0xab0

00011644 <fclose@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #139264	; 0x22000
   1164c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011650 <pipe@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #139264	; 0x22000
   11658:	ldr	pc, [ip, #2720]!	; 0xaa0

0001165c <fseeko64@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #139264	; 0x22000
   11664:	ldr	pc, [ip, #2712]!	; 0xa98

00011668 <fcntl64@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #139264	; 0x22000
   11670:	ldr	pc, [ip, #2704]!	; 0xa90

00011674 <setlocale@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #139264	; 0x22000
   1167c:	ldr	pc, [ip, #2696]!	; 0xa88

00011680 <sigemptyset@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #139264	; 0x22000
   11688:	ldr	pc, [ip, #2688]!	; 0xa80

0001168c <fork@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #139264	; 0x22000
   11694:	ldr	pc, [ip, #2680]!	; 0xa78

00011698 <execl@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #139264	; 0x22000
   116a0:	ldr	pc, [ip, #2672]!	; 0xa70

000116a4 <strrchr@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #139264	; 0x22000
   116ac:	ldr	pc, [ip, #2664]!	; 0xa68

000116b0 <nl_langinfo@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #139264	; 0x22000
   116b8:	ldr	pc, [ip, #2656]!	; 0xa60

000116bc <sprintf@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #139264	; 0x22000
   116c4:	ldr	pc, [ip, #2648]!	; 0xa58

000116c8 <clearerr_unlocked@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #139264	; 0x22000
   116d0:	ldr	pc, [ip, #2640]!	; 0xa50

000116d4 <bindtextdomain@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #139264	; 0x22000
   116dc:	ldr	pc, [ip, #2632]!	; 0xa48

000116e0 <aligned_alloc@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #139264	; 0x22000
   116e8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ec <__libc_current_sigrtmin@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #139264	; 0x22000
   116f4:	ldr	pc, [ip, #2616]!	; 0xa38

000116f8 <fputs@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #139264	; 0x22000
   11700:	ldr	pc, [ip, #2608]!	; 0xa30

00011704 <strncmp@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #139264	; 0x22000
   1170c:	ldr	pc, [ip, #2600]!	; 0xa28

00011710 <abort@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #139264	; 0x22000
   11718:	ldr	pc, [ip, #2592]!	; 0xa20

0001171c <close@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #139264	; 0x22000
   11724:	ldr	pc, [ip, #2584]!	; 0xa18

00011728 <strspn@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #139264	; 0x22000
   11730:	ldr	pc, [ip, #2576]!	; 0xa10

00011734 <__assert_fail@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #139264	; 0x22000
   1173c:	ldr	pc, [ip, #2568]!	; 0xa08

Disassembly of section .text:

00011740 <.text>:
   11740:	mov	fp, #0
   11744:	mov	lr, #0
   11748:	pop	{r1}		; (ldr r1, [sp], #4)
   1174c:	mov	r2, sp
   11750:	push	{r2}		; (str r2, [sp, #-4]!)
   11754:	push	{r0}		; (str r0, [sp, #-4]!)
   11758:	ldr	ip, [pc, #16]	; 11770 <__assert_fail@plt+0x3c>
   1175c:	push	{ip}		; (str ip, [sp, #-4]!)
   11760:	ldr	r0, [pc, #12]	; 11774 <__assert_fail@plt+0x40>
   11764:	ldr	r3, [pc, #12]	; 11778 <__assert_fail@plt+0x44>
   11768:	bl	11548 <__libc_start_main@plt>
   1176c:	bl	11710 <abort@plt>
   11770:	andeq	r2, r2, r4, lsl r7
   11774:	andeq	r1, r1, r8, ror #23
   11778:			; <UNDEFINED> instruction: 0x000226b4
   1177c:	ldr	r3, [pc, #20]	; 11798 <__assert_fail@plt+0x64>
   11780:	ldr	r2, [pc, #20]	; 1179c <__assert_fail@plt+0x68>
   11784:	add	r3, pc, r3
   11788:	ldr	r2, [r3, r2]
   1178c:	cmp	r2, #0
   11790:	bxeq	lr
   11794:	b	11560 <__gmon_start__@plt>
   11798:	andeq	r2, r2, r4, ror r8
   1179c:	andeq	r0, r0, r8, asr #2
   117a0:	ldr	r0, [pc, #24]	; 117c0 <__assert_fail@plt+0x8c>
   117a4:	ldr	r3, [pc, #24]	; 117c4 <__assert_fail@plt+0x90>
   117a8:	cmp	r3, r0
   117ac:	bxeq	lr
   117b0:	ldr	r3, [pc, #16]	; 117c8 <__assert_fail@plt+0x94>
   117b4:	cmp	r3, #0
   117b8:	bxeq	lr
   117bc:	bx	r3
   117c0:	andeq	r4, r3, r0, asr r3
   117c4:	andeq	r4, r3, r0, asr r3
   117c8:	andeq	r0, r0, r0
   117cc:	ldr	r0, [pc, #36]	; 117f8 <__assert_fail@plt+0xc4>
   117d0:	ldr	r1, [pc, #36]	; 117fc <__assert_fail@plt+0xc8>
   117d4:	sub	r1, r1, r0
   117d8:	asr	r1, r1, #2
   117dc:	add	r1, r1, r1, lsr #31
   117e0:	asrs	r1, r1, #1
   117e4:	bxeq	lr
   117e8:	ldr	r3, [pc, #16]	; 11800 <__assert_fail@plt+0xcc>
   117ec:	cmp	r3, #0
   117f0:	bxeq	lr
   117f4:	bx	r3
   117f8:	andeq	r4, r3, r0, asr r3
   117fc:	andeq	r4, r3, r0, asr r3
   11800:	andeq	r0, r0, r0
   11804:	push	{r4, lr}
   11808:	ldr	r4, [pc, #24]	; 11828 <__assert_fail@plt+0xf4>
   1180c:	ldrb	r3, [r4]
   11810:	cmp	r3, #0
   11814:	popne	{r4, pc}
   11818:	bl	117a0 <__assert_fail@plt+0x6c>
   1181c:	mov	r3, #1
   11820:	strb	r3, [r4]
   11824:	pop	{r4, pc}
   11828:	andeq	r4, r3, ip, ror #6
   1182c:	b	117cc <__assert_fail@plt+0x98>
   11830:	push	{fp, lr}
   11834:	mov	fp, sp
   11838:	sub	sp, sp, #48	; 0x30
   1183c:	str	r0, [fp, #-4]
   11840:	ldr	r0, [fp, #-4]
   11844:	cmp	r0, #0
   11848:	beq	11894 <__assert_fail@plt+0x160>
   1184c:	b	11850 <__assert_fail@plt+0x11c>
   11850:	movw	r0, #17248	; 0x4360
   11854:	movt	r0, #3
   11858:	ldr	r0, [r0]
   1185c:	movw	r1, #10060	; 0x274c
   11860:	movt	r1, #2
   11864:	str	r0, [fp, #-8]
   11868:	mov	r0, r1
   1186c:	bl	11590 <gettext@plt>
   11870:	movw	r1, #17712	; 0x4530
   11874:	movt	r1, #3
   11878:	ldr	r2, [r1]
   1187c:	ldr	r1, [fp, #-8]
   11880:	str	r0, [fp, #-12]
   11884:	mov	r0, r1
   11888:	ldr	r1, [fp, #-12]
   1188c:	bl	115d8 <fprintf@plt>
   11890:	b	119bc <__assert_fail@plt+0x288>
   11894:	movw	r0, #10099	; 0x2773
   11898:	movt	r0, #2
   1189c:	bl	11590 <gettext@plt>
   118a0:	movw	r1, #17712	; 0x4530
   118a4:	movt	r1, #3
   118a8:	ldr	r1, [r1]
   118ac:	bl	113d4 <printf@plt>
   118b0:	movw	r1, #10138	; 0x279a
   118b4:	movt	r1, #2
   118b8:	str	r0, [fp, #-16]
   118bc:	mov	r0, r1
   118c0:	bl	11590 <gettext@plt>
   118c4:	movw	r1, #17252	; 0x4364
   118c8:	movt	r1, #3
   118cc:	ldr	r1, [r1]
   118d0:	bl	113a4 <fputs_unlocked@plt>
   118d4:	str	r0, [fp, #-20]	; 0xffffffec
   118d8:	bl	119c4 <__assert_fail@plt+0x290>
   118dc:	bl	119ec <__assert_fail@plt+0x2b8>
   118e0:	movw	r0, #17252	; 0x4364
   118e4:	movt	r0, #3
   118e8:	ldr	r0, [r0]
   118ec:	movw	r1, #10244	; 0x2804
   118f0:	movt	r1, #2
   118f4:	str	r0, [sp, #24]
   118f8:	mov	r0, r1
   118fc:	bl	11590 <gettext@plt>
   11900:	ldr	r1, [sp, #24]
   11904:	str	r0, [sp, #20]
   11908:	mov	r0, r1
   1190c:	ldr	r1, [sp, #20]
   11910:	movw	r2, #2
   11914:	bl	115d8 <fprintf@plt>
   11918:	movw	r1, #11334	; 0x2c46
   1191c:	movt	r1, #2
   11920:	str	r0, [sp, #16]
   11924:	mov	r0, r1
   11928:	bl	11590 <gettext@plt>
   1192c:	movw	r1, #17252	; 0x4364
   11930:	movt	r1, #3
   11934:	ldr	r1, [r1]
   11938:	bl	113a4 <fputs_unlocked@plt>
   1193c:	movw	r1, #11447	; 0x2cb7
   11940:	movt	r1, #2
   11944:	str	r0, [sp, #12]
   11948:	mov	r0, r1
   1194c:	bl	11590 <gettext@plt>
   11950:	movw	r1, #17252	; 0x4364
   11954:	movt	r1, #3
   11958:	ldr	r1, [r1]
   1195c:	bl	113a4 <fputs_unlocked@plt>
   11960:	movw	r1, #11492	; 0x2ce4
   11964:	movt	r1, #2
   11968:	str	r0, [sp, #8]
   1196c:	mov	r0, r1
   11970:	bl	11590 <gettext@plt>
   11974:	movw	r1, #17252	; 0x4364
   11978:	movt	r1, #3
   1197c:	ldr	r1, [r1]
   11980:	bl	113a4 <fputs_unlocked@plt>
   11984:	str	r0, [sp, #4]
   11988:	bl	11a14 <__assert_fail@plt+0x2e0>
   1198c:	movw	r0, #11546	; 0x2d1a
   11990:	movt	r0, #2
   11994:	bl	11590 <gettext@plt>
   11998:	movw	r1, #17252	; 0x4364
   1199c:	movt	r1, #3
   119a0:	ldr	r1, [r1]
   119a4:	bl	113a4 <fputs_unlocked@plt>
   119a8:	movw	r1, #11886	; 0x2e6e
   119ac:	movt	r1, #2
   119b0:	str	r0, [sp]
   119b4:	mov	r0, r1
   119b8:	bl	11a3c <__assert_fail@plt+0x308>
   119bc:	ldr	r0, [fp, #-4]
   119c0:	bl	11584 <exit@plt>
   119c4:	push	{fp, lr}
   119c8:	mov	fp, sp
   119cc:	movw	r0, #12655	; 0x316f
   119d0:	movt	r0, #2
   119d4:	bl	11590 <gettext@plt>
   119d8:	movw	r1, #17252	; 0x4364
   119dc:	movt	r1, #3
   119e0:	ldr	r1, [r1]
   119e4:	bl	113a4 <fputs_unlocked@plt>
   119e8:	pop	{fp, pc}
   119ec:	push	{fp, lr}
   119f0:	mov	fp, sp
   119f4:	movw	r0, #12711	; 0x31a7
   119f8:	movt	r0, #2
   119fc:	bl	11590 <gettext@plt>
   11a00:	movw	r1, #17252	; 0x4364
   11a04:	movt	r1, #3
   11a08:	ldr	r1, [r1]
   11a0c:	bl	113a4 <fputs_unlocked@plt>
   11a10:	pop	{fp, pc}
   11a14:	push	{fp, lr}
   11a18:	mov	fp, sp
   11a1c:	movw	r0, #12786	; 0x31f2
   11a20:	movt	r0, #2
   11a24:	bl	11590 <gettext@plt>
   11a28:	movw	r1, #17252	; 0x4364
   11a2c:	movt	r1, #3
   11a30:	ldr	r1, [r1]
   11a34:	bl	113a4 <fputs_unlocked@plt>
   11a38:	pop	{fp, pc}
   11a3c:	push	{fp, lr}
   11a40:	mov	fp, sp
   11a44:	sub	sp, sp, #88	; 0x58
   11a48:	add	r1, sp, #28
   11a4c:	movw	r2, #14616	; 0x3918
   11a50:	movt	r2, #2
   11a54:	str	r0, [fp, #-4]
   11a58:	mov	r0, r1
   11a5c:	str	r1, [sp, #12]
   11a60:	mov	r1, r2
   11a64:	movw	r2, #56	; 0x38
   11a68:	bl	11428 <memcpy@plt>
   11a6c:	ldr	r0, [fp, #-4]
   11a70:	str	r0, [sp, #24]
   11a74:	ldr	r0, [sp, #12]
   11a78:	str	r0, [sp, #20]
   11a7c:	ldr	r0, [sp, #20]
   11a80:	ldr	r0, [r0]
   11a84:	movw	r1, #0
   11a88:	cmp	r0, r1
   11a8c:	movw	r0, #0
   11a90:	str	r0, [sp, #8]
   11a94:	beq	11ac0 <__assert_fail@plt+0x38c>
   11a98:	ldr	r0, [fp, #-4]
   11a9c:	ldr	r1, [sp, #20]
   11aa0:	ldr	r1, [r1]
   11aa4:	bl	113bc <strcmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	movw	r0, #0
   11ab0:	moveq	r0, #1
   11ab4:	mvn	r1, #0
   11ab8:	eor	r0, r0, r1
   11abc:	str	r0, [sp, #8]
   11ac0:	ldr	r0, [sp, #8]
   11ac4:	tst	r0, #1
   11ac8:	beq	11adc <__assert_fail@plt+0x3a8>
   11acc:	ldr	r0, [sp, #20]
   11ad0:	add	r0, r0, #8
   11ad4:	str	r0, [sp, #20]
   11ad8:	b	11a7c <__assert_fail@plt+0x348>
   11adc:	ldr	r0, [sp, #20]
   11ae0:	ldr	r0, [r0, #4]
   11ae4:	movw	r1, #0
   11ae8:	cmp	r0, r1
   11aec:	beq	11afc <__assert_fail@plt+0x3c8>
   11af0:	ldr	r0, [sp, #20]
   11af4:	ldr	r0, [r0, #4]
   11af8:	str	r0, [sp, #24]
   11afc:	movw	r0, #13093	; 0x3325
   11b00:	movt	r0, #2
   11b04:	bl	11590 <gettext@plt>
   11b08:	movw	r1, #12403	; 0x3073
   11b0c:	movt	r1, #2
   11b10:	movw	r2, #13116	; 0x333c
   11b14:	movt	r2, #2
   11b18:	bl	113d4 <printf@plt>
   11b1c:	movw	r1, #5
   11b20:	str	r0, [sp, #4]
   11b24:	mov	r0, r1
   11b28:	movw	r1, #0
   11b2c:	bl	11674 <setlocale@plt>
   11b30:	str	r0, [sp, #16]
   11b34:	ldr	r0, [sp, #16]
   11b38:	movw	r1, #0
   11b3c:	cmp	r0, r1
   11b40:	beq	11b7c <__assert_fail@plt+0x448>
   11b44:	ldr	r0, [sp, #16]
   11b48:	movw	r1, #13156	; 0x3364
   11b4c:	movt	r1, #2
   11b50:	movw	r2, #3
   11b54:	bl	11704 <strncmp@plt>
   11b58:	cmp	r0, #0
   11b5c:	beq	11b7c <__assert_fail@plt+0x448>
   11b60:	movw	r0, #13160	; 0x3368
   11b64:	movt	r0, #2
   11b68:	bl	11590 <gettext@plt>
   11b6c:	movw	r1, #17252	; 0x4364
   11b70:	movt	r1, #3
   11b74:	ldr	r1, [r1]
   11b78:	bl	113a4 <fputs_unlocked@plt>
   11b7c:	movw	r0, #13231	; 0x33af
   11b80:	movt	r0, #2
   11b84:	bl	11590 <gettext@plt>
   11b88:	ldr	r2, [fp, #-4]
   11b8c:	movw	r1, #13116	; 0x333c
   11b90:	movt	r1, #2
   11b94:	bl	113d4 <printf@plt>
   11b98:	movw	r1, #13258	; 0x33ca
   11b9c:	movt	r1, #2
   11ba0:	str	r0, [sp]
   11ba4:	mov	r0, r1
   11ba8:	bl	11590 <gettext@plt>
   11bac:	ldr	r1, [sp, #24]
   11bb0:	ldr	r2, [sp, #24]
   11bb4:	ldr	r3, [fp, #-4]
   11bb8:	cmp	r2, r3
   11bbc:	movw	r2, #0
   11bc0:	moveq	r2, #1
   11bc4:	tst	r2, #1
   11bc8:	movw	r2, #11333	; 0x2c45
   11bcc:	movt	r2, #2
   11bd0:	movw	r3, #13026	; 0x32e2
   11bd4:	movt	r3, #2
   11bd8:	movne	r2, r3
   11bdc:	bl	113d4 <printf@plt>
   11be0:	mov	sp, fp
   11be4:	pop	{fp, pc}
   11be8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11bec:	add	fp, sp, #24
   11bf0:	sub	sp, sp, #672	; 0x2a0
   11bf4:	mov	r2, #0
   11bf8:	str	r2, [fp, #-28]	; 0xffffffe4
   11bfc:	str	r0, [fp, #-32]	; 0xffffffe0
   11c00:	str	r1, [fp, #-36]	; 0xffffffdc
   11c04:	str	r2, [fp, #-40]	; 0xffffffd8
   11c08:	str	r2, [fp, #-44]	; 0xffffffd4
   11c0c:	str	r2, [fp, #-292]	; 0xfffffedc
   11c10:	bl	115e4 <getpagesize@plt>
   11c14:	str	r0, [fp, #-48]	; 0xffffffd0
   11c18:	ldr	r0, [fp, #-292]	; 0xfffffedc
   11c1c:	str	r0, [fp, #-52]	; 0xffffffcc
   11c20:	str	r0, [fp, #-56]	; 0xffffffc8
   11c24:	str	r0, [fp, #-60]	; 0xffffffc4
   11c28:	str	r0, [fp, #-64]	; 0xffffffc0
   11c2c:	str	r0, [fp, #-72]	; 0xffffffb8
   11c30:	mvn	r1, #-2147483648	; 0x80000000
   11c34:	str	r1, [fp, #-76]	; 0xffffffb4
   11c38:	mvn	r1, #0
   11c3c:	str	r1, [fp, #-80]	; 0xffffffb0
   11c40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11c44:	ldr	r0, [r1]
   11c48:	bl	17814 <__assert_fail@plt+0x60e0>
   11c4c:	movw	r0, #6
   11c50:	movw	r1, #11333	; 0x2c45
   11c54:	movt	r1, #2
   11c58:	bl	11674 <setlocale@plt>
   11c5c:	movw	r1, #12407	; 0x3077
   11c60:	movt	r1, #2
   11c64:	str	r0, [fp, #-296]	; 0xfffffed8
   11c68:	mov	r0, r1
   11c6c:	movw	r1, #11892	; 0x2e74
   11c70:	movt	r1, #2
   11c74:	bl	116d4 <bindtextdomain@plt>
   11c78:	movw	r1, #12407	; 0x3077
   11c7c:	movt	r1, #2
   11c80:	str	r0, [fp, #-300]	; 0xfffffed4
   11c84:	mov	r0, r1
   11c88:	bl	1147c <textdomain@plt>
   11c8c:	movw	r1, #28936	; 0x7108
   11c90:	movt	r1, #1
   11c94:	str	r0, [fp, #-304]	; 0xfffffed0
   11c98:	mov	r0, r1
   11c9c:	bl	22718 <__assert_fail@plt+0x10fe4>
   11ca0:	movw	r1, #14753	; 0x39a1
   11ca4:	movt	r1, #2
   11ca8:	str	r0, [fp, #-308]	; 0xfffffecc
   11cac:	mov	r0, r1
   11cb0:	bl	13194 <__assert_fail@plt+0x1a60>
   11cb4:	movw	r1, #17264	; 0x4370
   11cb8:	movt	r1, #3
   11cbc:	str	r0, [r1]
   11cc0:	movw	r0, #12332	; 0x302c
   11cc4:	movt	r0, #2
   11cc8:	bl	13194 <__assert_fail@plt+0x1a60>
   11ccc:	movw	r1, #17268	; 0x4374
   11cd0:	movt	r1, #3
   11cd4:	str	r0, [r1]
   11cd8:	movw	r0, #17240	; 0x4358
   11cdc:	movt	r0, #3
   11ce0:	ldr	r0, [r0]
   11ce4:	cmp	r0, #0
   11ce8:	beq	11d00 <__assert_fail@plt+0x5cc>
   11cec:	movw	r0, #17240	; 0x4358
   11cf0:	movt	r0, #3
   11cf4:	ldr	r0, [r0]
   11cf8:	str	r0, [fp, #-312]	; 0xfffffec8
   11cfc:	b	11d0c <__assert_fail@plt+0x5d8>
   11d00:	movw	r0, #1
   11d04:	str	r0, [fp, #-312]	; 0xfffffec8
   11d08:	b	11d0c <__assert_fail@plt+0x5d8>
   11d0c:	ldr	r0, [fp, #-312]	; 0xfffffec8
   11d10:	str	r0, [fp, #-84]	; 0xffffffac
   11d14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11d1c:	movw	r2, #11916	; 0x2e8c
   11d20:	movt	r2, #2
   11d24:	movw	r3, #14344	; 0x3808
   11d28:	movt	r3, #2
   11d2c:	movw	ip, #0
   11d30:	str	ip, [sp]
   11d34:	bl	1156c <getopt_long@plt>
   11d38:	str	r0, [fp, #-68]	; 0xffffffbc
   11d3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11d40:	cmn	r0, #1
   11d44:	bne	11d4c <__assert_fail@plt+0x618>
   11d48:	b	128f0 <__assert_fail@plt+0x11bc>
   11d4c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11d50:	cmn	r0, #3
   11d54:	str	r0, [fp, #-316]	; 0xfffffec4
   11d58:	beq	12890 <__assert_fail@plt+0x115c>
   11d5c:	b	11d60 <__assert_fail@plt+0x62c>
   11d60:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11d64:	cmn	r0, #2
   11d68:	beq	12888 <__assert_fail@plt+0x1154>
   11d6c:	b	11d70 <__assert_fail@plt+0x63c>
   11d70:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11d74:	sub	r1, r0, #48	; 0x30
   11d78:	cmp	r1, #10
   11d7c:	bcc	124a0 <__assert_fail@plt+0xd6c>
   11d80:	b	11d84 <__assert_fail@plt+0x650>
   11d84:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11d88:	cmp	r0, #67	; 0x43
   11d8c:	beq	120c8 <__assert_fail@plt+0x994>
   11d90:	b	11d94 <__assert_fail@plt+0x660>
   11d94:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11d98:	cmp	r0, #97	; 0x61
   11d9c:	beq	11e70 <__assert_fail@plt+0x73c>
   11da0:	b	11da4 <__assert_fail@plt+0x670>
   11da4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11da8:	cmp	r0, #98	; 0x62
   11dac:	beq	11f5c <__assert_fail@plt+0x828>
   11db0:	b	11db4 <__assert_fail@plt+0x680>
   11db4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11db8:	cmp	r0, #100	; 0x64
   11dbc:	beq	12648 <__assert_fail@plt+0xf14>
   11dc0:	b	11dc4 <__assert_fail@plt+0x690>
   11dc4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11dc8:	cmp	r0, #101	; 0x65
   11dcc:	beq	127d0 <__assert_fail@plt+0x109c>
   11dd0:	b	11dd4 <__assert_fail@plt+0x6a0>
   11dd4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11dd8:	cmp	r0, #108	; 0x6c
   11ddc:	beq	12010 <__assert_fail@plt+0x8dc>
   11de0:	b	11de4 <__assert_fail@plt+0x6b0>
   11de4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11de8:	cmp	r0, #110	; 0x6e
   11dec:	beq	12180 <__assert_fail@plt+0xa4c>
   11df0:	b	11df4 <__assert_fail@plt+0x6c0>
   11df4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11df8:	cmp	r0, #116	; 0x74
   11dfc:	beq	1236c <__assert_fail@plt+0xc38>
   11e00:	b	11e04 <__assert_fail@plt+0x6d0>
   11e04:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e08:	cmp	r0, #117	; 0x75
   11e0c:	beq	12358 <__assert_fail@plt+0xc24>
   11e10:	b	11e14 <__assert_fail@plt+0x6e0>
   11e14:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e18:	cmp	r0, #120	; 0x78
   11e1c:	beq	12648 <__assert_fail@plt+0xf14>
   11e20:	b	11e24 <__assert_fail@plt+0x6f0>
   11e24:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e28:	cmp	r0, #256	; 0x100
   11e2c:	beq	12874 <__assert_fail@plt+0x1140>
   11e30:	b	11e34 <__assert_fail@plt+0x700>
   11e34:	movw	r0, #257	; 0x101
   11e38:	ldr	r1, [fp, #-316]	; 0xfffffec4
   11e3c:	cmp	r1, r0
   11e40:	beq	127e4 <__assert_fail@plt+0x10b0>
   11e44:	b	11e48 <__assert_fail@plt+0x714>
   11e48:	movw	r0, #258	; 0x102
   11e4c:	ldr	r1, [fp, #-316]	; 0xfffffec4
   11e50:	cmp	r1, r0
   11e54:	beq	12800 <__assert_fail@plt+0x10cc>
   11e58:	b	11e5c <__assert_fail@plt+0x728>
   11e5c:	movw	r0, #259	; 0x103
   11e60:	ldr	r1, [fp, #-316]	; 0xfffffec4
   11e64:	cmp	r1, r0
   11e68:	beq	11ed8 <__assert_fail@plt+0x7a4>
   11e6c:	b	128e4 <__assert_fail@plt+0x11b0>
   11e70:	movw	r0, #17256	; 0x4368
   11e74:	movt	r0, #3
   11e78:	ldr	r0, [r0]
   11e7c:	movw	r1, #11943	; 0x2ea7
   11e80:	movt	r1, #2
   11e84:	str	r0, [fp, #-320]	; 0xfffffec0
   11e88:	mov	r0, r1
   11e8c:	bl	11590 <gettext@plt>
   11e90:	mov	r1, sp
   11e94:	mov	r2, #0
   11e98:	str	r2, [r1, #16]
   11e9c:	str	r0, [r1, #12]
   11ea0:	movw	r0, #11333	; 0x2c45
   11ea4:	movt	r0, #2
   11ea8:	str	r0, [r1, #8]
   11eac:	str	r2, [r1, #4]
   11eb0:	mvn	r0, #-1073741824	; 0xc0000000
   11eb4:	str	r0, [r1]
   11eb8:	ldr	r0, [fp, #-320]	; 0xfffffec0
   11ebc:	str	r2, [fp, #-324]	; 0xfffffebc
   11ec0:	ldr	r3, [fp, #-324]	; 0xfffffebc
   11ec4:	bl	1de2c <__assert_fail@plt+0xc6f8>
   11ec8:	movw	r2, #17272	; 0x4378
   11ecc:	movt	r2, #3
   11ed0:	str	r0, [r2]
   11ed4:	b	128ec <__assert_fail@plt+0x11b8>
   11ed8:	movw	r0, #17256	; 0x4368
   11edc:	movt	r0, #3
   11ee0:	ldr	r0, [r0]
   11ee4:	bl	16f84 <__assert_fail@plt+0x5850>
   11ee8:	movw	r1, #17256	; 0x4368
   11eec:	movt	r1, #3
   11ef0:	ldr	r1, [r1]
   11ef4:	cmp	r0, r1
   11ef8:	beq	11f40 <__assert_fail@plt+0x80c>
   11efc:	movw	r0, #11965	; 0x2ebd
   11f00:	movt	r0, #2
   11f04:	bl	11590 <gettext@plt>
   11f08:	movw	r1, #17256	; 0x4368
   11f0c:	movt	r1, #3
   11f10:	ldr	r1, [r1]
   11f14:	str	r0, [fp, #-328]	; 0xfffffeb8
   11f18:	mov	r0, r1
   11f1c:	bl	19e70 <__assert_fail@plt+0x873c>
   11f20:	movw	r1, #0
   11f24:	str	r0, [fp, #-332]	; 0xfffffeb4
   11f28:	mov	r0, r1
   11f2c:	ldr	r2, [fp, #-328]	; 0xfffffeb8
   11f30:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   11f34:	bl	1150c <error@plt>
   11f38:	movw	r0, #1
   11f3c:	bl	11830 <__assert_fail@plt+0xfc>
   11f40:	movw	r0, #17256	; 0x4368
   11f44:	movt	r0, #3
   11f48:	ldr	r0, [r0]
   11f4c:	movw	r1, #17276	; 0x437c
   11f50:	movt	r1, #3
   11f54:	str	r0, [r1]
   11f58:	b	128ec <__assert_fail@plt+0x11b8>
   11f5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f60:	cmp	r0, #0
   11f64:	beq	11f94 <__assert_fail@plt+0x860>
   11f68:	b	11f6c <__assert_fail@plt+0x838>
   11f6c:	movw	r0, #12013	; 0x2eed
   11f70:	movt	r0, #2
   11f74:	bl	11590 <gettext@plt>
   11f78:	movw	r1, #0
   11f7c:	str	r0, [fp, #-336]	; 0xfffffeb0
   11f80:	mov	r0, r1
   11f84:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   11f88:	bl	1150c <error@plt>
   11f8c:	movw	r0, #1
   11f90:	bl	11830 <__assert_fail@plt+0xfc>
   11f94:	mov	r0, #1
   11f98:	str	r0, [fp, #-40]	; 0xffffffd8
   11f9c:	movw	r1, #17256	; 0x4368
   11fa0:	movt	r1, #3
   11fa4:	ldr	r1, [r1]
   11fa8:	movw	r2, #12047	; 0x2f0f
   11fac:	movt	r2, #2
   11fb0:	str	r0, [fp, #-340]	; 0xfffffeac
   11fb4:	mov	r0, r2
   11fb8:	str	r1, [fp, #-344]	; 0xfffffea8
   11fbc:	bl	11590 <gettext@plt>
   11fc0:	mov	r1, sp
   11fc4:	mov	r2, #0
   11fc8:	str	r2, [r1, #16]
   11fcc:	str	r0, [r1, #12]
   11fd0:	movw	r0, #14328	; 0x37f8
   11fd4:	movt	r0, #2
   11fd8:	str	r0, [r1, #8]
   11fdc:	mvn	r0, #-2147483648	; 0x80000000
   11fe0:	str	r0, [r1, #4]
   11fe4:	mvn	r0, #0
   11fe8:	str	r0, [r1]
   11fec:	ldr	r0, [fp, #-344]	; 0xfffffea8
   11ff0:	ldr	r1, [fp, #-340]	; 0xfffffeac
   11ff4:	str	r2, [sp, #348]	; 0x15c
   11ff8:	mov	r2, r1
   11ffc:	ldr	r3, [sp, #348]	; 0x15c
   12000:	bl	1de2c <__assert_fail@plt+0xc6f8>
   12004:	str	r1, [fp, #-60]	; 0xffffffc4
   12008:	str	r0, [fp, #-64]	; 0xffffffc0
   1200c:	b	128ec <__assert_fail@plt+0x11b8>
   12010:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12014:	cmp	r0, #0
   12018:	beq	12048 <__assert_fail@plt+0x914>
   1201c:	b	12020 <__assert_fail@plt+0x8ec>
   12020:	movw	r0, #12013	; 0x2eed
   12024:	movt	r0, #2
   12028:	bl	11590 <gettext@plt>
   1202c:	movw	r1, #0
   12030:	str	r0, [sp, #344]	; 0x158
   12034:	mov	r0, r1
   12038:	ldr	r2, [sp, #344]	; 0x158
   1203c:	bl	1150c <error@plt>
   12040:	movw	r0, #1
   12044:	bl	11830 <__assert_fail@plt+0xfc>
   12048:	mov	r0, #3
   1204c:	str	r0, [fp, #-40]	; 0xffffffd8
   12050:	movw	r0, #17256	; 0x4368
   12054:	movt	r0, #3
   12058:	ldr	r0, [r0]
   1205c:	movw	r1, #12071	; 0x2f27
   12060:	movt	r1, #2
   12064:	str	r0, [sp, #340]	; 0x154
   12068:	mov	r0, r1
   1206c:	bl	11590 <gettext@plt>
   12070:	mov	r1, sp
   12074:	mov	r2, #0
   12078:	str	r2, [r1, #16]
   1207c:	str	r0, [r1, #12]
   12080:	movw	r0, #11333	; 0x2c45
   12084:	movt	r0, #2
   12088:	str	r0, [r1, #8]
   1208c:	mvn	r0, #0
   12090:	str	r0, [r1, #4]
   12094:	str	r0, [r1]
   12098:	mov	r0, #1
   1209c:	ldr	r1, [sp, #340]	; 0x154
   120a0:	str	r0, [sp, #336]	; 0x150
   120a4:	mov	r0, r1
   120a8:	ldr	r3, [sp, #336]	; 0x150
   120ac:	str	r2, [sp, #332]	; 0x14c
   120b0:	mov	r2, r3
   120b4:	ldr	r3, [sp, #332]	; 0x14c
   120b8:	bl	1de2c <__assert_fail@plt+0xc6f8>
   120bc:	str	r1, [fp, #-60]	; 0xffffffc4
   120c0:	str	r0, [fp, #-64]	; 0xffffffc0
   120c4:	b	128ec <__assert_fail@plt+0x11b8>
   120c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   120cc:	cmp	r0, #0
   120d0:	beq	12100 <__assert_fail@plt+0x9cc>
   120d4:	b	120d8 <__assert_fail@plt+0x9a4>
   120d8:	movw	r0, #12013	; 0x2eed
   120dc:	movt	r0, #2
   120e0:	bl	11590 <gettext@plt>
   120e4:	movw	r1, #0
   120e8:	str	r0, [sp, #328]	; 0x148
   120ec:	mov	r0, r1
   120f0:	ldr	r2, [sp, #328]	; 0x148
   120f4:	bl	1150c <error@plt>
   120f8:	movw	r0, #1
   120fc:	bl	11830 <__assert_fail@plt+0xfc>
   12100:	mov	r0, #2
   12104:	str	r0, [fp, #-40]	; 0xffffffd8
   12108:	movw	r0, #17256	; 0x4368
   1210c:	movt	r0, #3
   12110:	ldr	r0, [r0]
   12114:	movw	r1, #12047	; 0x2f0f
   12118:	movt	r1, #2
   1211c:	str	r0, [sp, #324]	; 0x144
   12120:	mov	r0, r1
   12124:	bl	11590 <gettext@plt>
   12128:	mov	r1, sp
   1212c:	mov	r2, #0
   12130:	str	r2, [r1, #16]
   12134:	str	r0, [r1, #12]
   12138:	movw	r0, #14328	; 0x37f8
   1213c:	movt	r0, #2
   12140:	str	r0, [r1, #8]
   12144:	str	r2, [r1, #4]
   12148:	mvn	r0, #0
   1214c:	str	r0, [r1]
   12150:	mov	r0, #1
   12154:	ldr	r1, [sp, #324]	; 0x144
   12158:	str	r0, [sp, #320]	; 0x140
   1215c:	mov	r0, r1
   12160:	ldr	r3, [sp, #320]	; 0x140
   12164:	str	r2, [sp, #316]	; 0x13c
   12168:	mov	r2, r3
   1216c:	ldr	r3, [sp, #316]	; 0x13c
   12170:	bl	1de2c <__assert_fail@plt+0xc6f8>
   12174:	str	r1, [fp, #-60]	; 0xffffffc4
   12178:	str	r0, [fp, #-64]	; 0xffffffc0
   1217c:	b	128ec <__assert_fail@plt+0x11b8>
   12180:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12184:	cmp	r0, #0
   12188:	beq	121b8 <__assert_fail@plt+0xa84>
   1218c:	b	12190 <__assert_fail@plt+0xa5c>
   12190:	movw	r0, #12013	; 0x2eed
   12194:	movt	r0, #2
   12198:	bl	11590 <gettext@plt>
   1219c:	movw	r1, #0
   121a0:	str	r0, [sp, #312]	; 0x138
   121a4:	mov	r0, r1
   121a8:	ldr	r2, [sp, #312]	; 0x138
   121ac:	bl	1150c <error@plt>
   121b0:	movw	r0, #1
   121b4:	bl	11830 <__assert_fail@plt+0xfc>
   121b8:	b	121bc <__assert_fail@plt+0xa88>
   121bc:	bl	11578 <__ctype_b_loc@plt>
   121c0:	ldr	r0, [r0]
   121c4:	movw	r1, #17256	; 0x4368
   121c8:	movt	r1, #3
   121cc:	ldr	r1, [r1]
   121d0:	ldrb	r1, [r1]
   121d4:	str	r0, [sp, #308]	; 0x134
   121d8:	mov	r0, r1
   121dc:	bl	131a8 <__assert_fail@plt+0x1a74>
   121e0:	mov	r1, r0
   121e4:	ldr	r2, [sp, #308]	; 0x134
   121e8:	add	r0, r2, r0, lsl #1
   121ec:	ldrh	r0, [r0]
   121f0:	and	r0, r0, #8192	; 0x2000
   121f4:	cmp	r0, #0
   121f8:	beq	12214 <__assert_fail@plt+0xae0>
   121fc:	movw	r0, #17256	; 0x4368
   12200:	movt	r0, #3
   12204:	ldr	r1, [r0]
   12208:	add	r1, r1, #1
   1220c:	str	r1, [r0]
   12210:	b	121bc <__assert_fail@plt+0xa88>
   12214:	movw	r0, #17256	; 0x4368
   12218:	movt	r0, #3
   1221c:	ldr	r0, [r0]
   12220:	movw	r1, #12095	; 0x2f3f
   12224:	movt	r1, #2
   12228:	movw	r2, #2
   1222c:	bl	11704 <strncmp@plt>
   12230:	cmp	r0, #0
   12234:	bne	12258 <__assert_fail@plt+0xb24>
   12238:	movw	r0, #7
   1223c:	str	r0, [fp, #-40]	; 0xffffffd8
   12240:	movw	r0, #17256	; 0x4368
   12244:	movt	r0, #3
   12248:	ldr	r1, [r0]
   1224c:	add	r1, r1, #2
   12250:	str	r1, [r0]
   12254:	b	122a8 <__assert_fail@plt+0xb74>
   12258:	movw	r0, #17256	; 0x4368
   1225c:	movt	r0, #3
   12260:	ldr	r0, [r0]
   12264:	movw	r1, #12098	; 0x2f42
   12268:	movt	r1, #2
   1226c:	movw	r2, #2
   12270:	bl	11704 <strncmp@plt>
   12274:	cmp	r0, #0
   12278:	bne	1229c <__assert_fail@plt+0xb68>
   1227c:	movw	r0, #6
   12280:	str	r0, [fp, #-40]	; 0xffffffd8
   12284:	movw	r0, #17256	; 0x4368
   12288:	movt	r0, #3
   1228c:	ldr	r1, [r0]
   12290:	add	r1, r1, #2
   12294:	str	r1, [r0]
   12298:	b	122a4 <__assert_fail@plt+0xb70>
   1229c:	movw	r0, #5
   122a0:	str	r0, [fp, #-40]	; 0xffffffd8
   122a4:	b	122a8 <__assert_fail@plt+0xb74>
   122a8:	movw	r0, #17256	; 0x4368
   122ac:	movt	r0, #3
   122b0:	ldr	r0, [r0]
   122b4:	movw	r1, #47	; 0x2f
   122b8:	bl	115b4 <strchr@plt>
   122bc:	str	r0, [fp, #-88]	; 0xffffffa8
   122c0:	movw	r1, #0
   122c4:	cmp	r0, r1
   122c8:	beq	122e0 <__assert_fail@plt+0xbac>
   122cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   122d0:	sub	r0, fp, #56	; 0x38
   122d4:	sub	r1, fp, #64	; 0x40
   122d8:	bl	131bc <__assert_fail@plt+0x1a88>
   122dc:	b	12354 <__assert_fail@plt+0xc20>
   122e0:	movw	r0, #17256	; 0x4368
   122e4:	movt	r0, #3
   122e8:	ldr	r0, [r0]
   122ec:	movw	r1, #12101	; 0x2f45
   122f0:	movt	r1, #2
   122f4:	str	r0, [sp, #304]	; 0x130
   122f8:	mov	r0, r1
   122fc:	bl	11590 <gettext@plt>
   12300:	mov	r1, sp
   12304:	mov	r2, #0
   12308:	str	r2, [r1, #16]
   1230c:	str	r0, [r1, #12]
   12310:	movw	r0, #11333	; 0x2c45
   12314:	movt	r0, #2
   12318:	str	r0, [r1, #8]
   1231c:	mvn	r0, #0
   12320:	str	r0, [r1, #4]
   12324:	str	r0, [r1]
   12328:	mov	r0, #1
   1232c:	ldr	r1, [sp, #304]	; 0x130
   12330:	str	r0, [sp, #300]	; 0x12c
   12334:	mov	r0, r1
   12338:	ldr	r3, [sp, #300]	; 0x12c
   1233c:	str	r2, [sp, #296]	; 0x128
   12340:	mov	r2, r3
   12344:	ldr	r3, [sp, #296]	; 0x128
   12348:	bl	1de2c <__assert_fail@plt+0xc6f8>
   1234c:	str	r1, [fp, #-60]	; 0xffffffc4
   12350:	str	r0, [fp, #-64]	; 0xffffffc0
   12354:	b	128ec <__assert_fail@plt+0x11b8>
   12358:	movw	r0, #17280	; 0x4380
   1235c:	movt	r0, #3
   12360:	movw	r1, #1
   12364:	strb	r1, [r0]
   12368:	b	128ec <__assert_fail@plt+0x11b8>
   1236c:	movw	r0, #17256	; 0x4368
   12370:	movt	r0, #3
   12374:	ldr	r0, [r0]
   12378:	ldrb	r0, [r0]
   1237c:	strb	r0, [fp, #-89]	; 0xffffffa7
   12380:	ldrsb	r0, [fp, #-89]	; 0xffffffa7
   12384:	cmp	r0, #0
   12388:	bne	123b0 <__assert_fail@plt+0xc7c>
   1238c:	movw	r0, #12126	; 0x2f5e
   12390:	movt	r0, #2
   12394:	bl	11590 <gettext@plt>
   12398:	movw	r1, #1
   1239c:	str	r0, [sp, #292]	; 0x124
   123a0:	mov	r0, r1
   123a4:	movw	r1, #0
   123a8:	ldr	r2, [sp, #292]	; 0x124
   123ac:	bl	1150c <error@plt>
   123b0:	movw	r0, #17256	; 0x4368
   123b4:	movt	r0, #3
   123b8:	ldr	r0, [r0]
   123bc:	ldrsb	r0, [r0, #1]
   123c0:	cmp	r0, #0
   123c4:	beq	12438 <__assert_fail@plt+0xd04>
   123c8:	movw	r0, #17256	; 0x4368
   123cc:	movt	r0, #3
   123d0:	ldr	r0, [r0]
   123d4:	movw	r1, #12149	; 0x2f75
   123d8:	movt	r1, #2
   123dc:	bl	113bc <strcmp@plt>
   123e0:	cmp	r0, #0
   123e4:	bne	123f4 <__assert_fail@plt+0xcc0>
   123e8:	movw	r0, #0
   123ec:	strb	r0, [fp, #-89]	; 0xffffffa7
   123f0:	b	12434 <__assert_fail@plt+0xd00>
   123f4:	movw	r0, #12152	; 0x2f78
   123f8:	movt	r0, #2
   123fc:	bl	11590 <gettext@plt>
   12400:	movw	r1, #17256	; 0x4368
   12404:	movt	r1, #3
   12408:	ldr	r1, [r1]
   1240c:	str	r0, [sp, #288]	; 0x120
   12410:	mov	r0, r1
   12414:	bl	19e70 <__assert_fail@plt+0x873c>
   12418:	movw	r1, #1
   1241c:	str	r0, [sp, #284]	; 0x11c
   12420:	mov	r0, r1
   12424:	movw	r1, #0
   12428:	ldr	r2, [sp, #288]	; 0x120
   1242c:	ldr	r3, [sp, #284]	; 0x11c
   12430:	bl	1150c <error@plt>
   12434:	b	12438 <__assert_fail@plt+0xd04>
   12438:	movw	r0, #16724	; 0x4154
   1243c:	movt	r0, #3
   12440:	ldr	r0, [r0]
   12444:	movw	r1, #0
   12448:	cmp	r1, r0
   1244c:	bgt	1248c <__assert_fail@plt+0xd58>
   12450:	ldrb	r0, [fp, #-89]	; 0xffffffa7
   12454:	movw	r1, #16724	; 0x4154
   12458:	movt	r1, #3
   1245c:	ldr	r1, [r1]
   12460:	cmp	r0, r1
   12464:	beq	1248c <__assert_fail@plt+0xd58>
   12468:	movw	r0, #12181	; 0x2f95
   1246c:	movt	r0, #2
   12470:	bl	11590 <gettext@plt>
   12474:	movw	r1, #1
   12478:	str	r0, [sp, #280]	; 0x118
   1247c:	mov	r0, r1
   12480:	movw	r1, #0
   12484:	ldr	r2, [sp, #280]	; 0x118
   12488:	bl	1150c <error@plt>
   1248c:	ldrb	r0, [fp, #-89]	; 0xffffffa7
   12490:	movw	r1, #16724	; 0x4154
   12494:	movt	r1, #3
   12498:	str	r0, [r1]
   1249c:	b	128ec <__assert_fail@plt+0x11b8>
   124a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   124a4:	cmp	r0, #0
   124a8:	bne	124c0 <__assert_fail@plt+0xd8c>
   124ac:	mov	r0, #4
   124b0:	str	r0, [fp, #-40]	; 0xffffffd8
   124b4:	mov	r0, #0
   124b8:	str	r0, [fp, #-60]	; 0xffffffc4
   124bc:	str	r0, [fp, #-64]	; 0xffffffc0
   124c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   124c4:	cmp	r0, #0
   124c8:	beq	12504 <__assert_fail@plt+0xdd0>
   124cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   124d0:	cmp	r0, #4
   124d4:	beq	12504 <__assert_fail@plt+0xdd0>
   124d8:	b	124dc <__assert_fail@plt+0xda8>
   124dc:	movw	r0, #12013	; 0x2eed
   124e0:	movt	r0, #2
   124e4:	bl	11590 <gettext@plt>
   124e8:	movw	r1, #0
   124ec:	str	r0, [sp, #276]	; 0x114
   124f0:	mov	r0, r1
   124f4:	ldr	r2, [sp, #276]	; 0x114
   124f8:	bl	1150c <error@plt>
   124fc:	movw	r0, #1
   12500:	bl	11830 <__assert_fail@plt+0xfc>
   12504:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12508:	cmp	r0, #0
   1250c:	beq	1252c <__assert_fail@plt+0xdf8>
   12510:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12514:	ldr	r1, [fp, #-84]	; 0xffffffac
   12518:	cmp	r0, r1
   1251c:	beq	1252c <__assert_fail@plt+0xdf8>
   12520:	mov	r0, #0
   12524:	str	r0, [fp, #-60]	; 0xffffffc4
   12528:	str	r0, [fp, #-64]	; 0xffffffc0
   1252c:	ldr	r0, [fp, #-84]	; 0xffffffac
   12530:	str	r0, [fp, #-72]	; 0xffffffb8
   12534:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12538:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1253c:	movw	r2, #39321	; 0x9999
   12540:	movt	r2, #39321	; 0x9999
   12544:	subs	r0, r2, r0
   12548:	movw	r2, #39321	; 0x9999
   1254c:	movt	r2, #6553	; 0x1999
   12550:	sbcs	r1, r2, r1
   12554:	bcc	12594 <__assert_fail@plt+0xe60>
   12558:	b	1255c <__assert_fail@plt+0xe28>
   1255c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12560:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12564:	mov	r2, #10
   12568:	umull	r2, r3, r0, r2
   1256c:	add	ip, r1, r1, lsl #2
   12570:	add	r3, r3, ip, lsl #1
   12574:	ldr	ip, [fp, #-68]	; 0xffffffbc
   12578:	sub	ip, ip, #48	; 0x30
   1257c:	adds	r2, r2, ip
   12580:	adc	r3, r3, ip, asr #31
   12584:	subs	r0, r2, r0
   12588:	sbcs	r1, r3, r1
   1258c:	bcs	125a0 <__assert_fail@plt+0xe6c>
   12590:	b	12594 <__assert_fail@plt+0xe60>
   12594:	movw	r0, #0
   12598:	str	r0, [sp, #272]	; 0x110
   1259c:	b	125d8 <__assert_fail@plt+0xea4>
   125a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   125a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   125a8:	mov	r2, #10
   125ac:	umull	r0, r2, r0, r2
   125b0:	add	r1, r1, r1, lsl #2
   125b4:	add	r1, r2, r1, lsl #1
   125b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   125bc:	sub	r2, r2, #48	; 0x30
   125c0:	adds	r0, r0, r2
   125c4:	adc	r1, r1, r2, asr #31
   125c8:	str	r0, [fp, #-64]	; 0xffffffc0
   125cc:	str	r1, [fp, #-60]	; 0xffffffc4
   125d0:	movw	r0, #1
   125d4:	str	r0, [sp, #272]	; 0x110
   125d8:	ldr	r0, [sp, #272]	; 0x110
   125dc:	cmp	r0, #0
   125e0:	bne	12644 <__assert_fail@plt+0xf10>
   125e4:	sub	r2, fp, #110	; 0x6e
   125e8:	movw	r0, #12221	; 0x2fbd
   125ec:	movt	r0, #2
   125f0:	str	r2, [sp, #268]	; 0x10c
   125f4:	bl	11590 <gettext@plt>
   125f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   125fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12600:	str	r0, [sp, #264]	; 0x108
   12604:	mov	r0, r1
   12608:	mov	r1, r2
   1260c:	ldr	r2, [sp, #268]	; 0x10c
   12610:	bl	176e4 <__assert_fail@plt+0x5fb0>
   12614:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12618:	movw	r2, #1
   1261c:	str	r0, [sp, #260]	; 0x104
   12620:	mov	r0, r2
   12624:	movw	r2, #0
   12628:	str	r1, [sp, #256]	; 0x100
   1262c:	mov	r1, r2
   12630:	ldr	r2, [sp, #264]	; 0x108
   12634:	ldr	r3, [sp, #260]	; 0x104
   12638:	ldr	ip, [sp, #256]	; 0x100
   1263c:	str	ip, [sp]
   12640:	bl	1150c <error@plt>
   12644:	b	128ec <__assert_fail@plt+0x11b8>
   12648:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1264c:	cmp	r0, #100	; 0x64
   12650:	bne	1266c <__assert_fail@plt+0xf38>
   12654:	movw	r0, #16728	; 0x4158
   12658:	movt	r0, #3
   1265c:	movw	r1, #12261	; 0x2fe5
   12660:	movt	r1, #2
   12664:	str	r1, [r0]
   12668:	b	12680 <__assert_fail@plt+0xf4c>
   1266c:	movw	r0, #16728	; 0x4158
   12670:	movt	r0, #3
   12674:	movw	r1, #12272	; 0x2ff0
   12678:	movt	r1, #2
   1267c:	str	r1, [r0]
   12680:	movw	r0, #17256	; 0x4368
   12684:	movt	r0, #3
   12688:	ldr	r0, [r0]
   1268c:	movw	r1, #0
   12690:	cmp	r0, r1
   12694:	beq	127cc <__assert_fail@plt+0x1098>
   12698:	movw	r0, #17256	; 0x4368
   1269c:	movt	r0, #3
   126a0:	ldr	r1, [r0]
   126a4:	str	r0, [sp, #252]	; 0xfc
   126a8:	mov	r0, r1
   126ac:	bl	1159c <strlen@plt>
   126b0:	ldr	r1, [sp, #252]	; 0xfc
   126b4:	ldr	r2, [r1]
   126b8:	movw	r3, #16728	; 0x4158
   126bc:	movt	r3, #3
   126c0:	ldr	r1, [r3]
   126c4:	str	r0, [sp, #248]	; 0xf8
   126c8:	mov	r0, r2
   126cc:	bl	11728 <strspn@plt>
   126d0:	ldr	r1, [sp, #248]	; 0xf8
   126d4:	cmp	r1, r0
   126d8:	beq	12748 <__assert_fail@plt+0x1014>
   126dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   126e0:	cmp	r0, #100	; 0x64
   126e4:	bne	126fc <__assert_fail@plt+0xfc8>
   126e8:	movw	r0, #12289	; 0x3001
   126ec:	movt	r0, #2
   126f0:	bl	11590 <gettext@plt>
   126f4:	str	r0, [sp, #244]	; 0xf4
   126f8:	b	1270c <__assert_fail@plt+0xfd8>
   126fc:	movw	r0, #12334	; 0x302e
   12700:	movt	r0, #2
   12704:	bl	11590 <gettext@plt>
   12708:	str	r0, [sp, #244]	; 0xf4
   1270c:	ldr	r0, [sp, #244]	; 0xf4
   12710:	movw	r1, #17256	; 0x4368
   12714:	movt	r1, #3
   12718:	ldr	r1, [r1]
   1271c:	str	r0, [sp, #240]	; 0xf0
   12720:	mov	r0, r1
   12724:	bl	19e70 <__assert_fail@plt+0x873c>
   12728:	movw	r1, #0
   1272c:	str	r0, [sp, #236]	; 0xec
   12730:	mov	r0, r1
   12734:	ldr	r2, [sp, #240]	; 0xf0
   12738:	ldr	r3, [sp, #236]	; 0xec
   1273c:	bl	1150c <error@plt>
   12740:	movw	r0, #1
   12744:	bl	11830 <__assert_fail@plt+0xfc>
   12748:	b	1274c <__assert_fail@plt+0x1018>
   1274c:	movw	r0, #17256	; 0x4368
   12750:	movt	r0, #3
   12754:	ldr	r0, [r0]
   12758:	ldrb	r0, [r0]
   1275c:	cmp	r0, #48	; 0x30
   12760:	movw	r0, #0
   12764:	str	r0, [sp, #232]	; 0xe8
   12768:	bne	1278c <__assert_fail@plt+0x1058>
   1276c:	movw	r0, #17256	; 0x4368
   12770:	movt	r0, #3
   12774:	ldr	r0, [r0]
   12778:	ldrb	r0, [r0, #1]
   1277c:	cmp	r0, #0
   12780:	movw	r0, #0
   12784:	movne	r0, #1
   12788:	str	r0, [sp, #232]	; 0xe8
   1278c:	ldr	r0, [sp, #232]	; 0xe8
   12790:	tst	r0, #1
   12794:	beq	127b0 <__assert_fail@plt+0x107c>
   12798:	movw	r0, #17256	; 0x4368
   1279c:	movt	r0, #3
   127a0:	ldr	r1, [r0]
   127a4:	add	r1, r1, #1
   127a8:	str	r1, [r0]
   127ac:	b	1274c <__assert_fail@plt+0x1018>
   127b0:	movw	r0, #17256	; 0x4368
   127b4:	movt	r0, #3
   127b8:	ldr	r0, [r0]
   127bc:	movw	r1, #17284	; 0x4384
   127c0:	movt	r1, #3
   127c4:	str	r0, [r1]
   127c8:	b	127cc <__assert_fail@plt+0x1098>
   127cc:	b	128ec <__assert_fail@plt+0x11b8>
   127d0:	movw	r0, #17288	; 0x4388
   127d4:	movt	r0, #3
   127d8:	movw	r1, #1
   127dc:	strb	r1, [r0]
   127e0:	b	128ec <__assert_fail@plt+0x11b8>
   127e4:	movw	r0, #17256	; 0x4368
   127e8:	movt	r0, #3
   127ec:	ldr	r0, [r0]
   127f0:	movw	r1, #17292	; 0x438c
   127f4:	movt	r1, #3
   127f8:	str	r0, [r1]
   127fc:	b	128ec <__assert_fail@plt+0x11b8>
   12800:	movw	r0, #17256	; 0x4368
   12804:	movt	r0, #3
   12808:	ldr	r0, [r0]
   1280c:	movw	r1, #12381	; 0x305d
   12810:	movt	r1, #2
   12814:	str	r0, [sp, #228]	; 0xe4
   12818:	mov	r0, r1
   1281c:	bl	11590 <gettext@plt>
   12820:	mov	r1, sp
   12824:	mov	r2, #0
   12828:	str	r2, [r1, #16]
   1282c:	str	r0, [r1, #12]
   12830:	movw	r0, #14328	; 0x37f8
   12834:	movt	r0, #2
   12838:	str	r0, [r1, #8]
   1283c:	str	r2, [r1, #4]
   12840:	mvn	r0, #-2147483647	; 0x80000001
   12844:	str	r0, [r1]
   12848:	mov	r0, #1
   1284c:	ldr	r1, [sp, #228]	; 0xe4
   12850:	str	r0, [sp, #224]	; 0xe0
   12854:	mov	r0, r1
   12858:	ldr	r3, [sp, #224]	; 0xe0
   1285c:	str	r2, [sp, #220]	; 0xdc
   12860:	mov	r2, r3
   12864:	ldr	r3, [sp, #220]	; 0xdc
   12868:	bl	1de2c <__assert_fail@plt+0xc6f8>
   1286c:	str	r0, [fp, #-44]	; 0xffffffd4
   12870:	b	128ec <__assert_fail@plt+0x11b8>
   12874:	movw	r0, #17296	; 0x4390
   12878:	movt	r0, #3
   1287c:	movw	r1, #1
   12880:	strb	r1, [r0]
   12884:	b	128ec <__assert_fail@plt+0x11b8>
   12888:	movw	r0, #0
   1288c:	bl	11830 <__assert_fail@plt+0xfc>
   12890:	movw	r0, #17252	; 0x4364
   12894:	movt	r0, #3
   12898:	ldr	r0, [r0]
   1289c:	movw	r1, #16740	; 0x4164
   128a0:	movt	r1, #3
   128a4:	ldr	r3, [r1]
   128a8:	movw	r1, #11886	; 0x2e6e
   128ac:	movt	r1, #2
   128b0:	movw	r2, #12403	; 0x3073
   128b4:	movt	r2, #2
   128b8:	movw	ip, #12417	; 0x3081
   128bc:	movt	ip, #2
   128c0:	str	ip, [sp]
   128c4:	movw	ip, #12435	; 0x3093
   128c8:	movt	ip, #2
   128cc:	str	ip, [sp, #4]
   128d0:	movw	ip, #0
   128d4:	str	ip, [sp, #8]
   128d8:	bl	1acb0 <__assert_fail@plt+0x957c>
   128dc:	movw	r0, #0
   128e0:	bl	11584 <exit@plt>
   128e4:	movw	r0, #1
   128e8:	bl	11830 <__assert_fail@plt+0xfc>
   128ec:	b	11cd8 <__assert_fail@plt+0x5a4>
   128f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   128f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   128f8:	orr	r0, r0, r1
   128fc:	cmp	r0, #0
   12900:	beq	12948 <__assert_fail@plt+0x1214>
   12904:	b	12908 <__assert_fail@plt+0x11d4>
   12908:	movw	r0, #17292	; 0x438c
   1290c:	movt	r0, #3
   12910:	ldr	r0, [r0]
   12914:	movw	r1, #0
   12918:	cmp	r0, r1
   1291c:	beq	12948 <__assert_fail@plt+0x1214>
   12920:	movw	r0, #12455	; 0x30a7
   12924:	movt	r0, #2
   12928:	bl	11590 <gettext@plt>
   1292c:	movw	r1, #0
   12930:	str	r0, [sp, #216]	; 0xd8
   12934:	mov	r0, r1
   12938:	ldr	r2, [sp, #216]	; 0xd8
   1293c:	bl	1150c <error@plt>
   12940:	movw	r0, #1
   12944:	bl	11830 <__assert_fail@plt+0xfc>
   12948:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1294c:	cmp	r0, #0
   12950:	bne	1296c <__assert_fail@plt+0x1238>
   12954:	mov	r0, #3
   12958:	str	r0, [fp, #-40]	; 0xffffffd8
   1295c:	mov	r0, #0
   12960:	str	r0, [fp, #-60]	; 0xffffffc4
   12964:	mov	r0, #1000	; 0x3e8
   12968:	str	r0, [fp, #-64]	; 0xffffffc0
   1296c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12970:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12974:	orr	r0, r0, r1
   12978:	cmp	r0, #0
   1297c:	bne	129d0 <__assert_fail@plt+0x129c>
   12980:	b	12984 <__assert_fail@plt+0x1250>
   12984:	movw	r0, #12071	; 0x2f27
   12988:	movt	r0, #2
   1298c:	bl	11590 <gettext@plt>
   12990:	movw	r1, #14855	; 0x3a07
   12994:	movt	r1, #2
   12998:	str	r0, [sp, #212]	; 0xd4
   1299c:	mov	r0, r1
   129a0:	bl	19e70 <__assert_fail@plt+0x873c>
   129a4:	movw	r1, #0
   129a8:	str	r0, [sp, #208]	; 0xd0
   129ac:	mov	r0, r1
   129b0:	movw	r2, #12509	; 0x30dd
   129b4:	movt	r2, #2
   129b8:	ldr	r3, [sp, #212]	; 0xd4
   129bc:	ldr	ip, [sp, #208]	; 0xd0
   129c0:	str	ip, [sp]
   129c4:	bl	1150c <error@plt>
   129c8:	movw	r0, #1
   129cc:	bl	11830 <__assert_fail@plt+0xfc>
   129d0:	movw	r0, #16724	; 0x4154
   129d4:	movt	r0, #3
   129d8:	ldr	r0, [r0]
   129dc:	cmp	r0, #0
   129e0:	bge	129f4 <__assert_fail@plt+0x12c0>
   129e4:	movw	r0, #16724	; 0x4154
   129e8:	movt	r0, #3
   129ec:	movw	r1, #10
   129f0:	str	r1, [r0]
   129f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   129f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   129fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12a00:	bl	132f4 <__assert_fail@plt+0x1bc0>
   12a04:	movw	r0, #17240	; 0x4358
   12a08:	movt	r0, #3
   12a0c:	ldr	r0, [r0]
   12a10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a14:	cmp	r0, r1
   12a18:	bge	12a48 <__assert_fail@plt+0x1314>
   12a1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a20:	movw	r1, #17240	; 0x4358
   12a24:	movt	r1, #3
   12a28:	ldr	r2, [r1]
   12a2c:	add	r3, r2, #1
   12a30:	str	r3, [r1]
   12a34:	add	r0, r0, r2, lsl #2
   12a38:	ldr	r0, [r0]
   12a3c:	movw	r1, #17264	; 0x4370
   12a40:	movt	r1, #3
   12a44:	str	r0, [r1]
   12a48:	movw	r0, #17240	; 0x4358
   12a4c:	movt	r0, #3
   12a50:	ldr	r0, [r0]
   12a54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a58:	cmp	r0, r1
   12a5c:	bge	12a8c <__assert_fail@plt+0x1358>
   12a60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a64:	movw	r1, #17240	; 0x4358
   12a68:	movt	r1, #3
   12a6c:	ldr	r2, [r1]
   12a70:	add	r3, r2, #1
   12a74:	str	r3, [r1]
   12a78:	add	r0, r0, r2, lsl #2
   12a7c:	ldr	r0, [r0]
   12a80:	movw	r1, #17268	; 0x4374
   12a84:	movt	r1, #3
   12a88:	str	r0, [r1]
   12a8c:	movw	r0, #17240	; 0x4358
   12a90:	movt	r0, #3
   12a94:	ldr	r0, [r0]
   12a98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a9c:	cmp	r0, r1
   12aa0:	bge	12af4 <__assert_fail@plt+0x13c0>
   12aa4:	movw	r0, #12516	; 0x30e4
   12aa8:	movt	r0, #2
   12aac:	bl	11590 <gettext@plt>
   12ab0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12ab4:	movw	r2, #17240	; 0x4358
   12ab8:	movt	r2, #3
   12abc:	ldr	r2, [r2]
   12ac0:	add	r1, r1, r2, lsl #2
   12ac4:	ldr	r1, [r1]
   12ac8:	str	r0, [sp, #204]	; 0xcc
   12acc:	mov	r0, r1
   12ad0:	bl	19e70 <__assert_fail@plt+0x873c>
   12ad4:	movw	r1, #0
   12ad8:	str	r0, [sp, #200]	; 0xc8
   12adc:	mov	r0, r1
   12ae0:	ldr	r2, [sp, #204]	; 0xcc
   12ae4:	ldr	r3, [sp, #200]	; 0xc8
   12ae8:	bl	1150c <error@plt>
   12aec:	movw	r0, #1
   12af0:	bl	11830 <__assert_fail@plt+0xfc>
   12af4:	movw	r0, #17284	; 0x4384
   12af8:	movt	r0, #3
   12afc:	ldr	r0, [r0]
   12b00:	movw	r1, #0
   12b04:	cmp	r0, r1
   12b08:	beq	12b58 <__assert_fail@plt+0x1424>
   12b0c:	movw	r0, #17284	; 0x4384
   12b10:	movt	r0, #3
   12b14:	ldr	r0, [r0]
   12b18:	bl	1159c <strlen@plt>
   12b1c:	movw	r1, #17272	; 0x4378
   12b20:	movt	r1, #3
   12b24:	ldr	r1, [r1]
   12b28:	cmp	r0, r1
   12b2c:	bls	12b58 <__assert_fail@plt+0x1424>
   12b30:	movw	r0, #12533	; 0x30f5
   12b34:	movt	r0, #2
   12b38:	bl	11590 <gettext@plt>
   12b3c:	movw	r1, #0
   12b40:	str	r0, [sp, #196]	; 0xc4
   12b44:	mov	r0, r1
   12b48:	ldr	r2, [sp, #196]	; 0xc4
   12b4c:	bl	1150c <error@plt>
   12b50:	movw	r0, #1
   12b54:	bl	11830 <__assert_fail@plt+0xfc>
   12b58:	movw	r0, #17264	; 0x4370
   12b5c:	movt	r0, #3
   12b60:	ldr	r0, [r0]
   12b64:	movw	r1, #14753	; 0x39a1
   12b68:	movt	r1, #2
   12b6c:	bl	113bc <strcmp@plt>
   12b70:	cmp	r0, #0
   12b74:	beq	12bf0 <__assert_fail@plt+0x14bc>
   12b78:	movw	r0, #17264	; 0x4370
   12b7c:	movt	r0, #3
   12b80:	ldr	r1, [r0]
   12b84:	movw	r0, #0
   12b88:	str	r0, [sp, #192]	; 0xc0
   12b8c:	ldr	r2, [sp, #192]	; 0xc0
   12b90:	ldr	r3, [sp, #192]	; 0xc0
   12b94:	bl	17394 <__assert_fail@plt+0x5c60>
   12b98:	cmp	r0, #0
   12b9c:	bge	12bf0 <__assert_fail@plt+0x14bc>
   12ba0:	bl	115f0 <__errno_location@plt>
   12ba4:	ldr	r1, [r0]
   12ba8:	movw	r0, #12597	; 0x3135
   12bac:	movt	r0, #2
   12bb0:	str	r1, [sp, #188]	; 0xbc
   12bb4:	bl	11590 <gettext@plt>
   12bb8:	movw	r1, #17264	; 0x4370
   12bbc:	movt	r1, #3
   12bc0:	ldr	r1, [r1]
   12bc4:	movw	r2, #4
   12bc8:	str	r0, [sp, #184]	; 0xb8
   12bcc:	mov	r0, r2
   12bd0:	bl	19ad8 <__assert_fail@plt+0x83a4>
   12bd4:	movw	r1, #1
   12bd8:	str	r0, [sp, #180]	; 0xb4
   12bdc:	mov	r0, r1
   12be0:	ldr	r1, [sp, #188]	; 0xbc
   12be4:	ldr	r2, [sp, #184]	; 0xb8
   12be8:	ldr	r3, [sp, #180]	; 0xb4
   12bec:	bl	1150c <error@plt>
   12bf0:	movw	r0, #0
   12bf4:	str	r0, [sp, #176]	; 0xb0
   12bf8:	ldr	r1, [sp, #176]	; 0xb0
   12bfc:	bl	1dc08 <__assert_fail@plt+0xc4d4>
   12c00:	movw	r0, #0
   12c04:	movw	r1, #17304	; 0x4398
   12c08:	movt	r1, #3
   12c0c:	bl	22730 <__assert_fail@plt+0x10ffc>
   12c10:	cmp	r0, #0
   12c14:	beq	12c60 <__assert_fail@plt+0x152c>
   12c18:	bl	115f0 <__errno_location@plt>
   12c1c:	ldr	r1, [r0]
   12c20:	movw	r0, #17264	; 0x4370
   12c24:	movt	r0, #3
   12c28:	ldr	r2, [r0]
   12c2c:	movw	r0, #0
   12c30:	movw	r3, #3
   12c34:	str	r1, [sp, #172]	; 0xac
   12c38:	mov	r1, r3
   12c3c:	bl	19c2c <__assert_fail@plt+0x84f8>
   12c40:	movw	r1, #1
   12c44:	str	r0, [sp, #168]	; 0xa8
   12c48:	mov	r0, r1
   12c4c:	ldr	r1, [sp, #172]	; 0xac
   12c50:	movw	r2, #14290	; 0x37d2
   12c54:	movt	r2, #2
   12c58:	ldr	r3, [sp, #168]	; 0xa8
   12c5c:	bl	1150c <error@plt>
   12c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c64:	cmp	r0, #0
   12c68:	movw	r0, #0
   12c6c:	movne	r0, #1
   12c70:	mvn	r1, #0
   12c74:	eor	r0, r0, r1
   12c78:	eor	r0, r0, r1
   12c7c:	and	r0, r0, #1
   12c80:	strb	r0, [fp, #-111]	; 0xffffff91
   12c84:	ldrb	r0, [fp, #-111]	; 0xffffff91
   12c88:	tst	r0, #1
   12c8c:	bne	12d04 <__assert_fail@plt+0x15d0>
   12c90:	movw	r0, #17304	; 0x4398
   12c94:	movt	r0, #3
   12c98:	add	r1, r0, #16
   12c9c:	mov	r2, sp
   12ca0:	movw	r3, #88	; 0x58
   12ca4:	str	r0, [sp, #164]	; 0xa4
   12ca8:	str	r3, [sp, #160]	; 0xa0
   12cac:	str	r1, [sp, #156]	; 0x9c
   12cb0:	str	r2, [sp, #152]	; 0x98
   12cb4:	ldr	r0, [sp, #152]	; 0x98
   12cb8:	ldr	r1, [sp, #156]	; 0x9c
   12cbc:	ldr	r2, [sp, #160]	; 0xa0
   12cc0:	vld1.32	{d16}, [r1]!
   12cc4:	vst1.32	{d16}, [r0]!
   12cc8:	subs	r2, r2, #8
   12ccc:	str	r0, [sp, #152]	; 0x98
   12cd0:	str	r1, [sp, #156]	; 0x9c
   12cd4:	str	r2, [sp, #160]	; 0xa0
   12cd8:	bne	12cb4 <__assert_fail@plt+0x1580>
   12cdc:	ldr	r0, [sp, #164]	; 0xa4
   12ce0:	ldr	r0, [r0]
   12ce4:	ldr	r1, [sp, #164]	; 0xa4
   12ce8:	ldr	r1, [r1, #4]
   12cec:	ldr	r2, [sp, #164]	; 0xa4
   12cf0:	ldr	r2, [r2, #8]
   12cf4:	ldr	r3, [sp, #164]	; 0xa4
   12cf8:	ldr	r3, [r3, #12]
   12cfc:	bl	13588 <__assert_fail@plt+0x1e54>
   12d00:	str	r0, [fp, #-44]	; 0xffffffd4
   12d04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12d08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d0c:	add	r1, r1, #1
   12d10:	bl	1ad94 <__assert_fail@plt+0x9660>
   12d14:	str	r0, [fp, #-116]	; 0xffffff8c
   12d18:	mvn	r0, #0
   12d1c:	str	r0, [fp, #-120]	; 0xffffff88
   12d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d24:	cmp	r0, #5
   12d28:	beq	12d38 <__assert_fail@plt+0x1604>
   12d2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d30:	cmp	r0, #6
   12d34:	bne	12ed0 <__assert_fail@plt+0x179c>
   12d38:	ldr	r2, [fp, #-116]	; 0xffffff8c
   12d3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12d40:	movw	r1, #17304	; 0x4398
   12d44:	movt	r1, #3
   12d48:	mov	r0, #0
   12d4c:	bl	13728 <__assert_fail@plt+0x1ff4>
   12d50:	str	r1, [fp, #-76]	; 0xffffffb4
   12d54:	str	r0, [fp, #-80]	; 0xffffffb0
   12d58:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d5c:	cmn	r0, #1
   12d60:	bgt	12dbc <__assert_fail@plt+0x1688>
   12d64:	b	12d68 <__assert_fail@plt+0x1634>
   12d68:	bl	115f0 <__errno_location@plt>
   12d6c:	ldr	r1, [r0]
   12d70:	movw	r0, #12624	; 0x3150
   12d74:	movt	r0, #2
   12d78:	str	r1, [sp, #148]	; 0x94
   12d7c:	bl	11590 <gettext@plt>
   12d80:	movw	r1, #17264	; 0x4370
   12d84:	movt	r1, #3
   12d88:	ldr	r2, [r1]
   12d8c:	movw	r1, #0
   12d90:	str	r0, [sp, #144]	; 0x90
   12d94:	mov	r0, r1
   12d98:	movw	r1, #3
   12d9c:	bl	19c2c <__assert_fail@plt+0x84f8>
   12da0:	movw	r1, #1
   12da4:	str	r0, [sp, #140]	; 0x8c
   12da8:	mov	r0, r1
   12dac:	ldr	r1, [sp, #148]	; 0x94
   12db0:	ldr	r2, [sp, #144]	; 0x90
   12db4:	ldr	r3, [sp, #140]	; 0x8c
   12db8:	bl	1150c <error@plt>
   12dbc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12dc0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12dc4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12dc8:	subs	r0, r0, r2
   12dcc:	sbcs	r1, r1, r2, asr #31
   12dd0:	bge	12dec <__assert_fail@plt+0x16b8>
   12dd4:	b	12dd8 <__assert_fail@plt+0x16a4>
   12dd8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12ddc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12de0:	str	r0, [sp, #136]	; 0x88
   12de4:	str	r1, [sp, #132]	; 0x84
   12de8:	b	12e00 <__assert_fail@plt+0x16cc>
   12dec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12df0:	asr	r1, r0, #31
   12df4:	str	r0, [sp, #136]	; 0x88
   12df8:	str	r1, [sp, #132]	; 0x84
   12dfc:	b	12e00 <__assert_fail@plt+0x16cc>
   12e00:	ldr	r0, [sp, #132]	; 0x84
   12e04:	ldr	r1, [sp, #136]	; 0x88
   12e08:	str	r1, [fp, #-120]	; 0xffffff88
   12e0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12e10:	cmn	r1, #1
   12e14:	bgt	12e78 <__assert_fail@plt+0x1744>
   12e18:	b	12e1c <__assert_fail@plt+0x16e8>
   12e1c:	sub	r2, fp, #141	; 0x8d
   12e20:	movw	r0, #12101	; 0x2f45
   12e24:	movt	r0, #2
   12e28:	str	r2, [sp, #128]	; 0x80
   12e2c:	bl	11590 <gettext@plt>
   12e30:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12e34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12e38:	str	r0, [sp, #124]	; 0x7c
   12e3c:	mov	r0, r1
   12e40:	mov	r1, r2
   12e44:	ldr	r2, [sp, #128]	; 0x80
   12e48:	bl	176e4 <__assert_fail@plt+0x5fb0>
   12e4c:	bl	19e70 <__assert_fail@plt+0x873c>
   12e50:	movw	r1, #1
   12e54:	str	r0, [sp, #120]	; 0x78
   12e58:	mov	r0, r1
   12e5c:	movw	r1, #75	; 0x4b
   12e60:	movw	r2, #12509	; 0x30dd
   12e64:	movt	r2, #2
   12e68:	ldr	r3, [sp, #124]	; 0x7c
   12e6c:	ldr	ip, [sp, #120]	; 0x78
   12e70:	str	ip, [sp]
   12e74:	bl	1150c <error@plt>
   12e78:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12e7c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12e80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12e84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12e88:	subs	r0, r2, r0
   12e8c:	sbcs	r1, r3, r1
   12e90:	bcs	12eac <__assert_fail@plt+0x1778>
   12e94:	b	12e98 <__assert_fail@plt+0x1764>
   12e98:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12e9c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12ea0:	str	r0, [sp, #116]	; 0x74
   12ea4:	str	r1, [sp, #112]	; 0x70
   12ea8:	b	12ec0 <__assert_fail@plt+0x178c>
   12eac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12eb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12eb4:	str	r0, [sp, #116]	; 0x74
   12eb8:	str	r1, [sp, #112]	; 0x70
   12ebc:	b	12ec0 <__assert_fail@plt+0x178c>
   12ec0:	ldr	r0, [sp, #112]	; 0x70
   12ec4:	ldr	r1, [sp, #116]	; 0x74
   12ec8:	str	r1, [fp, #-80]	; 0xffffffb0
   12ecc:	str	r0, [fp, #-76]	; 0xffffffb4
   12ed0:	movw	r0, #17292	; 0x438c
   12ed4:	movt	r0, #3
   12ed8:	ldr	r0, [r0]
   12edc:	movw	r1, #0
   12ee0:	cmp	r0, r1
   12ee4:	beq	12f44 <__assert_fail@plt+0x1810>
   12ee8:	movw	r0, #17408	; 0x4400
   12eec:	movt	r0, #3
   12ef0:	bl	11680 <sigemptyset@plt>
   12ef4:	movw	r1, #13
   12ef8:	str	r0, [sp, #108]	; 0x6c
   12efc:	mov	r0, r1
   12f00:	movw	r1, #0
   12f04:	sub	r2, fp, #284	; 0x11c
   12f08:	bl	114ac <sigaction@plt>
   12f0c:	ldr	r1, [fp, #-284]	; 0xfffffee4
   12f10:	movw	r2, #1
   12f14:	cmp	r1, r2
   12f18:	beq	12f2c <__assert_fail@plt+0x17f8>
   12f1c:	movw	r0, #17408	; 0x4400
   12f20:	movt	r0, #3
   12f24:	movw	r1, #13
   12f28:	bl	1153c <sigaddset@plt>
   12f2c:	movw	r0, #0
   12f30:	movw	r1, #17408	; 0x4400
   12f34:	movt	r1, #3
   12f38:	movw	r2, #17536	; 0x4480
   12f3c:	movt	r2, #3
   12f40:	bl	113f8 <sigprocmask@plt>
   12f44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f48:	sub	r0, r0, #1
   12f4c:	cmp	r0, #6
   12f50:	str	r0, [sp, #104]	; 0x68
   12f54:	bhi	13100 <__assert_fail@plt+0x19cc>
   12f58:	add	r0, pc, #8
   12f5c:	ldr	r1, [sp, #104]	; 0x68
   12f60:	ldr	r0, [r0, r1, lsl #2]
   12f64:	mov	pc, r0
   12f68:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12f6c:	andeq	r2, r1, ip, asr #31
   12f70:	andeq	r2, r1, r4, lsl #31
   12f74:	andeq	r2, r1, r4, lsl #31
   12f78:	andeq	r2, r1, r4, ror #31
   12f7c:	andeq	r3, r1, r8, lsl #1
   12f80:	andeq	r3, r1, ip, asr #1
   12f84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12f88:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12f8c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   12f90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12f94:	bl	13a5c <__assert_fail@plt+0x2328>
   12f98:	b	13104 <__assert_fail@plt+0x19d0>
   12f9c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fa0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12fa4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   12fa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12fac:	mov	ip, sp
   12fb0:	mov	lr, #0
   12fb4:	str	lr, [ip, #12]
   12fb8:	str	lr, [ip, #8]
   12fbc:	mvn	lr, #0
   12fc0:	str	lr, [ip]
   12fc4:	bl	13c24 <__assert_fail@plt+0x24f0>
   12fc8:	b	13104 <__assert_fail@plt+0x19d0>
   12fcc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fd0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12fd4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   12fd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12fdc:	bl	13fdc <__assert_fail@plt+0x28a8>
   12fe0:	b	13104 <__assert_fail@plt+0x19d0>
   12fe4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12fe8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12fec:	orr	r0, r0, r1
   12ff0:	cmp	r0, #0
   12ff4:	bne	13044 <__assert_fail@plt+0x1910>
   12ff8:	b	12ffc <__assert_fail@plt+0x18c8>
   12ffc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13000:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13004:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13008:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1300c:	str	r2, [sp, #100]	; 0x64
   13010:	str	r3, [sp, #96]	; 0x60
   13014:	bl	22540 <__assert_fail@plt+0x10e0c>
   13018:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1301c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13020:	ldr	ip, [fp, #-120]	; 0xffffff88
   13024:	mov	lr, sp
   13028:	ldr	r4, [sp, #96]	; 0x60
   1302c:	str	r4, [lr, #12]
   13030:	ldr	r5, [sp, #100]	; 0x64
   13034:	str	r5, [lr, #8]
   13038:	str	ip, [lr]
   1303c:	bl	13c24 <__assert_fail@plt+0x24f0>
   13040:	b	13084 <__assert_fail@plt+0x1950>
   13044:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13048:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1304c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13050:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13054:	ldr	ip, [fp, #-116]	; 0xffffff8c
   13058:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1305c:	ldr	r4, [fp, #-120]	; 0xffffff88
   13060:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13064:	ldr	r6, [fp, #-76]	; 0xffffffb4
   13068:	mov	r7, sp
   1306c:	str	r6, [r7, #20]
   13070:	str	r5, [r7, #16]
   13074:	str	r4, [r7, #8]
   13078:	str	lr, [r7, #4]
   1307c:	str	ip, [r7]
   13080:	bl	144dc <__assert_fail@plt+0x2da8>
   13084:	b	13104 <__assert_fail@plt+0x19d0>
   13088:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1308c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13090:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13094:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13098:	ldr	ip, [fp, #-116]	; 0xffffff8c
   1309c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   130a0:	ldr	r4, [fp, #-120]	; 0xffffff88
   130a4:	ldr	r5, [fp, #-80]	; 0xffffffb0
   130a8:	ldr	r6, [fp, #-76]	; 0xffffffb4
   130ac:	mov	r7, sp
   130b0:	str	r6, [r7, #20]
   130b4:	str	r5, [r7, #16]
   130b8:	str	r4, [r7, #8]
   130bc:	str	lr, [r7, #4]
   130c0:	str	ip, [r7]
   130c4:	bl	1494c <__assert_fail@plt+0x3218>
   130c8:	b	13104 <__assert_fail@plt+0x19d0>
   130cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   130d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   130d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   130d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   130dc:	ldr	ip, [fp, #-116]	; 0xffffff8c
   130e0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   130e4:	mov	r4, sp
   130e8:	sub	r5, fp, #288	; 0x120
   130ec:	str	r5, [r4, #8]
   130f0:	str	lr, [r4, #4]
   130f4:	str	ip, [r4]
   130f8:	bl	15204 <__assert_fail@plt+0x3ad0>
   130fc:	b	13104 <__assert_fail@plt+0x19d0>
   13100:	bl	11710 <abort@plt>
   13104:	movw	r0, #0
   13108:	bl	1171c <close@plt>
   1310c:	cmp	r0, #0
   13110:	beq	1315c <__assert_fail@plt+0x1a28>
   13114:	bl	115f0 <__errno_location@plt>
   13118:	ldr	r1, [r0]
   1311c:	movw	r0, #17264	; 0x4370
   13120:	movt	r0, #3
   13124:	ldr	r2, [r0]
   13128:	movw	r0, #0
   1312c:	movw	r3, #3
   13130:	str	r1, [sp, #92]	; 0x5c
   13134:	mov	r1, r3
   13138:	bl	19c2c <__assert_fail@plt+0x84f8>
   1313c:	movw	r1, #1
   13140:	str	r0, [sp, #88]	; 0x58
   13144:	mov	r0, r1
   13148:	ldr	r1, [sp, #92]	; 0x5c
   1314c:	movw	r2, #14290	; 0x37d2
   13150:	movt	r2, #2
   13154:	ldr	r3, [sp, #88]	; 0x58
   13158:	bl	1150c <error@plt>
   1315c:	movw	r0, #16732	; 0x415c
   13160:	movt	r0, #3
   13164:	ldr	r1, [r0]
   13168:	movw	r0, #17664	; 0x4500
   1316c:	movt	r0, #3
   13170:	ldr	r2, [r0]
   13174:	movw	r0, #17668	; 0x4504
   13178:	movt	r0, #3
   1317c:	ldr	r3, [r0]
   13180:	movw	r0, #0
   13184:	bl	159d8 <__assert_fail@plt+0x42a4>
   13188:	movw	r0, #0
   1318c:	sub	sp, fp, #24
   13190:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13194:	sub	sp, sp, #4
   13198:	str	r0, [sp]
   1319c:	ldr	r0, [sp]
   131a0:	add	sp, sp, #4
   131a4:	bx	lr
   131a8:	sub	sp, sp, #4
   131ac:	strb	r0, [sp, #3]
   131b0:	ldrb	r0, [sp, #3]
   131b4:	add	sp, sp, #4
   131b8:	bx	lr
   131bc:	push	{fp, lr}
   131c0:	mov	fp, sp
   131c4:	sub	sp, sp, #64	; 0x40
   131c8:	str	r0, [fp, #-4]
   131cc:	str	r1, [fp, #-8]
   131d0:	str	r2, [fp, #-12]
   131d4:	ldr	r0, [fp, #-12]
   131d8:	add	r0, r0, #1
   131dc:	movw	r1, #12101	; 0x2f45
   131e0:	movt	r1, #2
   131e4:	str	r0, [fp, #-16]
   131e8:	mov	r0, r1
   131ec:	bl	11590 <gettext@plt>
   131f0:	mov	r1, sp
   131f4:	mov	r2, #0
   131f8:	str	r2, [r1, #16]
   131fc:	str	r0, [r1, #12]
   13200:	movw	r0, #11333	; 0x2c45
   13204:	movt	r0, #2
   13208:	str	r0, [r1, #8]
   1320c:	mvn	r0, #0
   13210:	str	r0, [r1, #4]
   13214:	str	r0, [r1]
   13218:	mov	r0, #1
   1321c:	ldr	r1, [fp, #-16]
   13220:	str	r0, [fp, #-20]	; 0xffffffec
   13224:	mov	r0, r1
   13228:	ldr	r3, [fp, #-20]	; 0xffffffec
   1322c:	str	r2, [fp, #-24]	; 0xffffffe8
   13230:	mov	r2, r3
   13234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13238:	bl	1de2c <__assert_fail@plt+0xc6f8>
   1323c:	ldr	r2, [fp, #-8]
   13240:	str	r1, [r2, #4]
   13244:	str	r0, [r2]
   13248:	ldr	r0, [fp, #-12]
   1324c:	movw	r1, #17256	; 0x4368
   13250:	movt	r1, #3
   13254:	ldr	r1, [r1]
   13258:	cmp	r0, r1
   1325c:	beq	132ec <__assert_fail@plt+0x1bb8>
   13260:	ldr	r0, [fp, #-12]
   13264:	mov	r1, #0
   13268:	strb	r1, [r0]
   1326c:	movw	r0, #17256	; 0x4368
   13270:	movt	r0, #3
   13274:	ldr	r0, [r0]
   13278:	ldr	r2, [fp, #-8]
   1327c:	ldr	r3, [r2]
   13280:	ldr	r2, [r2, #4]
   13284:	movw	ip, #13451	; 0x348b
   13288:	movt	ip, #2
   1328c:	str	r0, [fp, #-28]	; 0xffffffe4
   13290:	mov	r0, ip
   13294:	str	r1, [sp, #32]
   13298:	str	r3, [sp, #28]
   1329c:	str	r2, [sp, #24]
   132a0:	bl	11590 <gettext@plt>
   132a4:	mov	r1, sp
   132a8:	ldr	r2, [sp, #32]
   132ac:	str	r2, [r1, #16]
   132b0:	str	r0, [r1, #12]
   132b4:	movw	r0, #11333	; 0x2c45
   132b8:	movt	r0, #2
   132bc:	str	r0, [r1, #8]
   132c0:	ldr	r0, [sp, #24]
   132c4:	str	r0, [r1, #4]
   132c8:	ldr	r0, [sp, #28]
   132cc:	str	r0, [r1]
   132d0:	mov	r2, #1
   132d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   132d8:	ldr	r3, [sp, #32]
   132dc:	bl	1de2c <__assert_fail@plt+0xc6f8>
   132e0:	ldr	r2, [fp, #-4]
   132e4:	str	r1, [r2, #4]
   132e8:	str	r0, [r2]
   132ec:	mov	sp, fp
   132f0:	pop	{fp, pc}
   132f4:	push	{fp, lr}
   132f8:	mov	fp, sp
   132fc:	sub	sp, sp, #72	; 0x48
   13300:	str	r0, [fp, #-8]
   13304:	str	r1, [fp, #-4]
   13308:	str	r2, [fp, #-12]
   1330c:	mov	r0, #0
   13310:	str	r0, [fp, #-20]	; 0xffffffec
   13314:	str	r0, [fp, #-24]	; 0xffffffe8
   13318:	movw	r0, #17284	; 0x4384
   1331c:	movt	r0, #3
   13320:	ldr	r0, [r0]
   13324:	movw	r1, #0
   13328:	cmp	r0, r1
   1332c:	beq	13340 <__assert_fail@plt+0x1c0c>
   13330:	movw	r0, #16736	; 0x4160
   13334:	movt	r0, #3
   13338:	movw	r1, #0
   1333c:	strb	r1, [r0]
   13340:	ldr	r0, [fp, #-12]
   13344:	cmp	r0, #5
   13348:	beq	13364 <__assert_fail@plt+0x1c30>
   1334c:	ldr	r0, [fp, #-12]
   13350:	cmp	r0, #6
   13354:	beq	13364 <__assert_fail@plt+0x1c30>
   13358:	ldr	r0, [fp, #-12]
   1335c:	cmp	r0, #7
   13360:	bne	134a4 <__assert_fail@plt+0x1d70>
   13364:	ldr	r0, [fp, #-8]
   13368:	ldr	r1, [fp, #-4]
   1336c:	subs	r0, r0, #1
   13370:	sbc	r1, r1, #0
   13374:	str	r0, [fp, #-32]	; 0xffffffe0
   13378:	str	r1, [fp, #-28]	; 0xffffffe4
   1337c:	movw	r0, #17284	; 0x4384
   13380:	movt	r0, #3
   13384:	ldr	r0, [r0]
   13388:	movw	r1, #0
   1338c:	cmp	r0, r1
   13390:	beq	1343c <__assert_fail@plt+0x1d08>
   13394:	movw	r0, #17284	; 0x4384
   13398:	movt	r0, #3
   1339c:	ldr	r0, [r0]
   133a0:	movw	r1, #0
   133a4:	movw	r2, #10
   133a8:	add	r3, sp, #32
   133ac:	movw	ip, #11333	; 0x2c45
   133b0:	movt	ip, #2
   133b4:	str	ip, [sp]
   133b8:	bl	1deb4 <__assert_fail@plt+0xc780>
   133bc:	str	r0, [sp, #28]
   133c0:	ldr	r0, [sp, #28]
   133c4:	cmp	r0, #0
   133c8:	bne	13438 <__assert_fail@plt+0x1d04>
   133cc:	ldr	r0, [sp, #32]
   133d0:	ldr	r1, [sp, #36]	; 0x24
   133d4:	ldr	r2, [fp, #-8]
   133d8:	ldr	r3, [fp, #-4]
   133dc:	mvn	r3, r3
   133e0:	mvn	r2, r2
   133e4:	subs	r0, r2, r0
   133e8:	sbcs	r1, r3, r1
   133ec:	bcc	13438 <__assert_fail@plt+0x1d04>
   133f0:	b	133f4 <__assert_fail@plt+0x1cc0>
   133f4:	ldr	r0, [sp, #32]
   133f8:	ldr	r1, [sp, #36]	; 0x24
   133fc:	ldr	r2, [fp, #-8]
   13400:	ldr	r3, [fp, #-4]
   13404:	subs	r0, r0, r2
   13408:	sbcs	r1, r1, r3
   1340c:	bcs	13434 <__assert_fail@plt+0x1d00>
   13410:	b	13414 <__assert_fail@plt+0x1ce0>
   13414:	ldr	r0, [sp, #32]
   13418:	ldr	r1, [sp, #36]	; 0x24
   1341c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13424:	adds	r0, r2, r0
   13428:	adc	r1, r3, r1
   1342c:	str	r0, [fp, #-32]	; 0xffffffe0
   13430:	str	r1, [fp, #-28]	; 0xffffffe4
   13434:	b	13438 <__assert_fail@plt+0x1d04>
   13438:	b	1343c <__assert_fail@plt+0x1d08>
   1343c:	movw	r0, #16728	; 0x4158
   13440:	movt	r0, #3
   13444:	ldr	r0, [r0]
   13448:	bl	1159c <strlen@plt>
   1344c:	str	r0, [sp, #24]
   13450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13454:	ldr	r1, [fp, #-20]	; 0xffffffec
   13458:	adds	r0, r0, #1
   1345c:	adc	r1, r1, #0
   13460:	str	r0, [fp, #-24]	; 0xffffffe8
   13464:	str	r1, [fp, #-20]	; 0xffffffec
   13468:	ldr	r2, [sp, #24]
   1346c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13474:	mov	r3, #0
   13478:	bl	22540 <__assert_fail@plt+0x10e0c>
   1347c:	str	r1, [fp, #-28]	; 0xffffffe4
   13480:	str	r0, [fp, #-32]	; 0xffffffe0
   13484:	orr	r0, r0, r1
   13488:	cmp	r0, #0
   1348c:	bne	13450 <__assert_fail@plt+0x1d1c>
   13490:	b	13494 <__assert_fail@plt+0x1d60>
   13494:	movw	r0, #16736	; 0x4160
   13498:	movt	r0, #3
   1349c:	movw	r1, #0
   134a0:	strb	r1, [r0]
   134a4:	movw	r0, #17272	; 0x4378
   134a8:	movt	r0, #3
   134ac:	ldr	r0, [r0]
   134b0:	cmp	r0, #0
   134b4:	beq	1352c <__assert_fail@plt+0x1df8>
   134b8:	movw	r0, #17272	; 0x4378
   134bc:	movt	r0, #3
   134c0:	ldr	r0, [r0]
   134c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   134cc:	subs	r0, r0, r1
   134d0:	rscs	r1, r2, #0
   134d4:	bcs	13518 <__assert_fail@plt+0x1de4>
   134d8:	b	134dc <__assert_fail@plt+0x1da8>
   134dc:	movw	r0, #13499	; 0x34bb
   134e0:	movt	r0, #2
   134e4:	bl	11590 <gettext@plt>
   134e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   134f0:	mov	r3, sp
   134f4:	str	r2, [r3, #4]
   134f8:	str	r1, [r3]
   134fc:	mov	r1, #1
   13500:	mov	r2, #0
   13504:	str	r0, [sp, #20]
   13508:	mov	r0, r1
   1350c:	mov	r1, r2
   13510:	ldr	r2, [sp, #20]
   13514:	bl	1150c <error@plt>
   13518:	movw	r0, #16736	; 0x4160
   1351c:	movt	r0, #3
   13520:	movw	r1, #0
   13524:	strb	r1, [r0]
   13528:	b	13580 <__assert_fail@plt+0x1e4c>
   1352c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13530:	ldr	r1, [fp, #-20]	; 0xffffffec
   13534:	rsbs	r0, r0, #1
   13538:	rscs	r1, r1, #0
   1353c:	bcc	13558 <__assert_fail@plt+0x1e24>
   13540:	b	13544 <__assert_fail@plt+0x1e10>
   13544:	mov	r0, #0
   13548:	mov	r1, #2
   1354c:	str	r1, [sp, #16]
   13550:	str	r0, [sp, #12]
   13554:	b	1356c <__assert_fail@plt+0x1e38>
   13558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1355c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13560:	str	r0, [sp, #16]
   13564:	str	r1, [sp, #12]
   13568:	b	1356c <__assert_fail@plt+0x1e38>
   1356c:	ldr	r0, [sp, #12]
   13570:	ldr	r1, [sp, #16]
   13574:	movw	r2, #17272	; 0x4378
   13578:	movt	r2, #3
   1357c:	str	r1, [r2]
   13580:	mov	sp, fp
   13584:	pop	{fp, pc}
   13588:	sub	sp, sp, #16
   1358c:	sub	sp, sp, #32
   13590:	str	r3, [sp, #44]	; 0x2c
   13594:	str	r2, [sp, #40]	; 0x28
   13598:	str	r1, [sp, #36]	; 0x24
   1359c:	str	r0, [sp, #32]
   135a0:	add	r0, sp, #32
   135a4:	ldr	r1, [r0, #56]	; 0x38
   135a8:	movw	r2, #0
   135ac:	cmp	r2, r1
   135b0:	str	r0, [sp, #28]
   135b4:	bge	135d8 <__assert_fail@plt+0x1ea4>
   135b8:	ldr	r0, [sp, #28]
   135bc:	ldr	r1, [r0, #56]	; 0x38
   135c0:	cmp	r1, #536870912	; 0x20000000
   135c4:	bhi	135d8 <__assert_fail@plt+0x1ea4>
   135c8:	ldr	r0, [sp, #28]
   135cc:	ldr	r1, [r0, #56]	; 0x38
   135d0:	str	r1, [sp, #24]
   135d4:	b	135e4 <__assert_fail@plt+0x1eb0>
   135d8:	movw	r0, #512	; 0x200
   135dc:	str	r0, [sp, #24]
   135e0:	b	135e4 <__assert_fail@plt+0x1eb0>
   135e4:	ldr	r0, [sp, #24]
   135e8:	ldr	r1, [pc, #304]	; 13720 <__assert_fail@plt+0x1fec>
   135ec:	cmp	r1, r0
   135f0:	ble	13600 <__assert_fail@plt+0x1ecc>
   135f4:	ldr	r0, [pc, #292]	; 13720 <__assert_fail@plt+0x1fec>
   135f8:	str	r0, [sp, #20]
   135fc:	b	13648 <__assert_fail@plt+0x1f14>
   13600:	ldr	r0, [sp, #28]
   13604:	ldr	r1, [r0, #56]	; 0x38
   13608:	movw	r2, #0
   1360c:	cmp	r2, r1
   13610:	bge	13634 <__assert_fail@plt+0x1f00>
   13614:	ldr	r0, [sp, #28]
   13618:	ldr	r1, [r0, #56]	; 0x38
   1361c:	cmp	r1, #536870912	; 0x20000000
   13620:	bhi	13634 <__assert_fail@plt+0x1f00>
   13624:	ldr	r0, [sp, #28]
   13628:	ldr	r1, [r0, #56]	; 0x38
   1362c:	str	r1, [sp, #16]
   13630:	b	13640 <__assert_fail@plt+0x1f0c>
   13634:	movw	r0, #512	; 0x200
   13638:	str	r0, [sp, #16]
   1363c:	b	13640 <__assert_fail@plt+0x1f0c>
   13640:	ldr	r0, [sp, #16]
   13644:	str	r0, [sp, #20]
   13648:	ldr	r0, [sp, #20]
   1364c:	ldr	r1, [pc, #208]	; 13724 <__assert_fail@plt+0x1ff0>
   13650:	cmp	r1, r0
   13654:	bcs	13664 <__assert_fail@plt+0x1f30>
   13658:	ldr	r0, [pc, #196]	; 13724 <__assert_fail@plt+0x1ff0>
   1365c:	str	r0, [sp, #12]
   13660:	b	13710 <__assert_fail@plt+0x1fdc>
   13664:	ldr	r0, [sp, #28]
   13668:	ldr	r1, [r0, #56]	; 0x38
   1366c:	movw	r2, #0
   13670:	cmp	r2, r1
   13674:	bge	13698 <__assert_fail@plt+0x1f64>
   13678:	ldr	r0, [sp, #28]
   1367c:	ldr	r1, [r0, #56]	; 0x38
   13680:	cmp	r1, #536870912	; 0x20000000
   13684:	bhi	13698 <__assert_fail@plt+0x1f64>
   13688:	ldr	r0, [sp, #28]
   1368c:	ldr	r1, [r0, #56]	; 0x38
   13690:	str	r1, [sp, #8]
   13694:	b	136a4 <__assert_fail@plt+0x1f70>
   13698:	movw	r0, #512	; 0x200
   1369c:	str	r0, [sp, #8]
   136a0:	b	136a4 <__assert_fail@plt+0x1f70>
   136a4:	ldr	r0, [sp, #8]
   136a8:	ldr	r1, [pc, #112]	; 13720 <__assert_fail@plt+0x1fec>
   136ac:	cmp	r1, r0
   136b0:	ble	136c0 <__assert_fail@plt+0x1f8c>
   136b4:	ldr	r0, [pc, #100]	; 13720 <__assert_fail@plt+0x1fec>
   136b8:	str	r0, [sp, #4]
   136bc:	b	13708 <__assert_fail@plt+0x1fd4>
   136c0:	ldr	r0, [sp, #28]
   136c4:	ldr	r1, [r0, #56]	; 0x38
   136c8:	movw	r2, #0
   136cc:	cmp	r2, r1
   136d0:	bge	136f4 <__assert_fail@plt+0x1fc0>
   136d4:	ldr	r0, [sp, #28]
   136d8:	ldr	r1, [r0, #56]	; 0x38
   136dc:	cmp	r1, #536870912	; 0x20000000
   136e0:	bhi	136f4 <__assert_fail@plt+0x1fc0>
   136e4:	ldr	r0, [sp, #28]
   136e8:	ldr	r1, [r0, #56]	; 0x38
   136ec:	str	r1, [sp]
   136f0:	b	13700 <__assert_fail@plt+0x1fcc>
   136f4:	movw	r0, #512	; 0x200
   136f8:	str	r0, [sp]
   136fc:	b	13700 <__assert_fail@plt+0x1fcc>
   13700:	ldr	r0, [sp]
   13704:	str	r0, [sp, #4]
   13708:	ldr	r0, [sp, #4]
   1370c:	str	r0, [sp, #12]
   13710:	ldr	r0, [sp, #12]
   13714:	add	sp, sp, #32
   13718:	add	sp, sp, #16
   1371c:	bx	lr
   13720:	andeq	r0, r2, r0
   13724:	andmi	r0, r0, r0
   13728:	push	{fp, lr}
   1372c:	mov	fp, sp
   13730:	sub	sp, sp, #64	; 0x40
   13734:	str	r0, [fp, #-12]
   13738:	str	r1, [fp, #-16]
   1373c:	str	r2, [fp, #-20]	; 0xffffffec
   13740:	str	r3, [fp, #-24]	; 0xffffffe8
   13744:	ldr	r0, [fp, #-12]
   13748:	mov	r1, sp
   1374c:	mov	r2, #1
   13750:	str	r2, [r1]
   13754:	mov	r1, #0
   13758:	mov	r2, r1
   1375c:	mov	r3, r1
   13760:	bl	114b8 <lseek64@plt>
   13764:	str	r1, [sp, #36]	; 0x24
   13768:	str	r0, [sp, #32]
   1376c:	ldr	r0, [sp, #36]	; 0x24
   13770:	cmn	r0, #1
   13774:	bgt	137a8 <__assert_fail@plt+0x2074>
   13778:	b	1377c <__assert_fail@plt+0x2048>
   1377c:	bl	115f0 <__errno_location@plt>
   13780:	ldr	r0, [r0]
   13784:	cmp	r0, #29
   13788:	bne	13798 <__assert_fail@plt+0x2064>
   1378c:	bl	115f0 <__errno_location@plt>
   13790:	movw	r1, #0
   13794:	str	r1, [r0]
   13798:	mvn	r0, #0
   1379c:	str	r0, [fp, #-4]
   137a0:	str	r0, [fp, #-8]
   137a4:	b	13a4c <__assert_fail@plt+0x2318>
   137a8:	mov	r0, #0
   137ac:	str	r0, [sp, #28]
   137b0:	str	r0, [sp, #24]
   137b4:	ldr	r0, [fp, #-12]
   137b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   137bc:	ldr	r2, [sp, #24]
   137c0:	add	r1, r1, r2
   137c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137c8:	sub	r2, r3, r2
   137cc:	bl	19fa8 <__assert_fail@plt+0x8874>
   137d0:	str	r0, [sp, #20]
   137d4:	ldr	r0, [sp, #20]
   137d8:	cmp	r0, #0
   137dc:	bne	137f4 <__assert_fail@plt+0x20c0>
   137e0:	ldr	r0, [sp, #24]
   137e4:	ldr	r1, [sp, #28]
   137e8:	str	r1, [fp, #-4]
   137ec:	str	r0, [fp, #-8]
   137f0:	b	13a4c <__assert_fail@plt+0x2318>
   137f4:	ldr	r0, [sp, #20]
   137f8:	cmn	r0, #1
   137fc:	bne	13810 <__assert_fail@plt+0x20dc>
   13800:	mvn	r0, #0
   13804:	str	r0, [fp, #-4]
   13808:	str	r0, [fp, #-8]
   1380c:	b	13a4c <__assert_fail@plt+0x2318>
   13810:	ldr	r0, [sp, #20]
   13814:	ldr	r1, [sp, #24]
   13818:	ldr	r2, [sp, #28]
   1381c:	adds	r0, r1, r0
   13820:	adc	r1, r2, #0
   13824:	str	r0, [sp, #24]
   13828:	str	r1, [sp, #28]
   1382c:	ldr	r0, [sp, #24]
   13830:	ldr	r1, [sp, #28]
   13834:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13838:	subs	r0, r0, r2
   1383c:	sbcs	r1, r1, #0
   13840:	blt	137b4 <__assert_fail@plt+0x2080>
   13844:	b	13848 <__assert_fail@plt+0x2114>
   13848:	ldr	r0, [fp, #-16]
   1384c:	ldr	r1, [r0, #48]	; 0x30
   13850:	ldr	r0, [r0, #52]	; 0x34
   13854:	orr	r0, r1, r0
   13858:	cmp	r0, #0
   1385c:	bne	13880 <__assert_fail@plt+0x214c>
   13860:	b	13864 <__assert_fail@plt+0x2130>
   13864:	bl	115f0 <__errno_location@plt>
   13868:	mov	r1, #75	; 0x4b
   1386c:	str	r1, [r0]
   13870:	mvn	r0, #0
   13874:	str	r0, [fp, #-4]
   13878:	str	r0, [fp, #-8]
   1387c:	b	13a4c <__assert_fail@plt+0x2318>
   13880:	ldr	r0, [sp, #24]
   13884:	ldr	r1, [sp, #28]
   13888:	ldr	r2, [sp, #32]
   1388c:	ldr	r3, [sp, #36]	; 0x24
   13890:	adds	r0, r2, r0
   13894:	adc	r1, r3, r1
   13898:	str	r0, [sp, #32]
   1389c:	str	r1, [sp, #36]	; 0x24
   138a0:	ldr	r0, [fp, #-16]
   138a4:	bl	15da4 <__assert_fail@plt+0x4670>
   138a8:	tst	r0, #1
   138ac:	beq	138ec <__assert_fail@plt+0x21b8>
   138b0:	ldr	r0, [sp, #32]
   138b4:	ldr	r1, [sp, #36]	; 0x24
   138b8:	ldr	r2, [fp, #-16]
   138bc:	ldr	r3, [r2, #48]	; 0x30
   138c0:	ldr	r2, [r2, #52]	; 0x34
   138c4:	subs	r0, r3, r0
   138c8:	sbcs	r1, r2, r1
   138cc:	blt	138ec <__assert_fail@plt+0x21b8>
   138d0:	b	138d4 <__assert_fail@plt+0x21a0>
   138d4:	ldr	r0, [fp, #-16]
   138d8:	ldr	r1, [r0, #48]	; 0x30
   138dc:	ldr	r0, [r0, #52]	; 0x34
   138e0:	str	r0, [sp, #12]
   138e4:	str	r1, [sp, #8]
   138e8:	b	139cc <__assert_fail@plt+0x2298>
   138ec:	ldr	r0, [fp, #-12]
   138f0:	mov	r1, sp
   138f4:	mov	r2, #2
   138f8:	str	r2, [r1]
   138fc:	mov	r1, #0
   13900:	mov	r2, r1
   13904:	mov	r3, r1
   13908:	bl	114b8 <lseek64@plt>
   1390c:	str	r1, [sp, #12]
   13910:	str	r0, [sp, #8]
   13914:	ldr	r0, [sp, #12]
   13918:	cmn	r0, #1
   1391c:	bgt	13934 <__assert_fail@plt+0x2200>
   13920:	b	13924 <__assert_fail@plt+0x21f0>
   13924:	mvn	r0, #0
   13928:	str	r0, [fp, #-4]
   1392c:	str	r0, [fp, #-8]
   13930:	b	13a4c <__assert_fail@plt+0x2318>
   13934:	ldr	r0, [sp, #8]
   13938:	ldr	r1, [sp, #12]
   1393c:	ldr	r2, [sp, #32]
   13940:	ldr	r3, [sp, #36]	; 0x24
   13944:	eor	r1, r1, r3
   13948:	eor	r0, r0, r2
   1394c:	orr	r0, r0, r1
   13950:	cmp	r0, #0
   13954:	beq	139c8 <__assert_fail@plt+0x2294>
   13958:	b	1395c <__assert_fail@plt+0x2228>
   1395c:	ldr	r0, [fp, #-12]
   13960:	ldr	r2, [sp, #32]
   13964:	ldr	r3, [sp, #36]	; 0x24
   13968:	mov	r1, sp
   1396c:	mov	ip, #0
   13970:	str	ip, [r1]
   13974:	bl	114b8 <lseek64@plt>
   13978:	cmn	r1, #1
   1397c:	bgt	13994 <__assert_fail@plt+0x2260>
   13980:	b	13984 <__assert_fail@plt+0x2250>
   13984:	mvn	r0, #0
   13988:	str	r0, [fp, #-4]
   1398c:	str	r0, [fp, #-8]
   13990:	b	13a4c <__assert_fail@plt+0x2318>
   13994:	ldr	r0, [sp, #8]
   13998:	ldr	r1, [sp, #12]
   1399c:	ldr	r2, [sp, #32]
   139a0:	ldr	r3, [sp, #36]	; 0x24
   139a4:	subs	r0, r0, r2
   139a8:	sbcs	r1, r1, r3
   139ac:	bge	139c4 <__assert_fail@plt+0x2290>
   139b0:	b	139b4 <__assert_fail@plt+0x2280>
   139b4:	ldr	r0, [sp, #32]
   139b8:	ldr	r1, [sp, #36]	; 0x24
   139bc:	str	r1, [sp, #12]
   139c0:	str	r0, [sp, #8]
   139c4:	b	139c8 <__assert_fail@plt+0x2294>
   139c8:	b	139cc <__assert_fail@plt+0x2298>
   139cc:	ldr	r0, [sp, #8]
   139d0:	ldr	r1, [sp, #12]
   139d4:	ldr	r2, [sp, #32]
   139d8:	ldr	r3, [sp, #36]	; 0x24
   139dc:	subs	r0, r0, r2
   139e0:	sbc	r1, r1, r3
   139e4:	ldr	r2, [sp, #24]
   139e8:	ldr	r3, [sp, #28]
   139ec:	adds	r0, r2, r0
   139f0:	adc	r1, r3, r1
   139f4:	str	r0, [sp, #24]
   139f8:	str	r1, [sp, #28]
   139fc:	ldr	r0, [sp, #24]
   13a00:	ldr	r1, [sp, #28]
   13a04:	mvn	r2, #-2147483648	; 0x80000000
   13a08:	eor	r1, r1, r2
   13a0c:	mvn	r0, r0
   13a10:	orr	r0, r0, r1
   13a14:	cmp	r0, #0
   13a18:	bne	13a3c <__assert_fail@plt+0x2308>
   13a1c:	b	13a20 <__assert_fail@plt+0x22ec>
   13a20:	bl	115f0 <__errno_location@plt>
   13a24:	mov	r1, #75	; 0x4b
   13a28:	str	r1, [r0]
   13a2c:	mvn	r0, #0
   13a30:	str	r0, [fp, #-4]
   13a34:	str	r0, [fp, #-8]
   13a38:	b	13a4c <__assert_fail@plt+0x2318>
   13a3c:	ldr	r0, [sp, #24]
   13a40:	ldr	r1, [sp, #28]
   13a44:	str	r1, [fp, #-4]
   13a48:	str	r0, [fp, #-8]
   13a4c:	ldr	r0, [fp, #-8]
   13a50:	ldr	r1, [fp, #-4]
   13a54:	mov	sp, fp
   13a58:	pop	{fp, pc}
   13a5c:	push	{fp, lr}
   13a60:	mov	fp, sp
   13a64:	sub	sp, sp, #64	; 0x40
   13a68:	str	r0, [fp, #-8]
   13a6c:	str	r1, [fp, #-4]
   13a70:	str	r2, [fp, #-12]
   13a74:	str	r3, [fp, #-16]
   13a78:	mov	r0, #1
   13a7c:	strb	r0, [sp, #31]
   13a80:	mov	r0, #0
   13a84:	str	r0, [sp, #20]
   13a88:	str	r0, [sp, #16]
   13a8c:	ldr	r1, [fp, #-12]
   13a90:	ldr	r2, [fp, #-16]
   13a94:	movw	r0, #0
   13a98:	bl	19fa8 <__assert_fail@plt+0x8874>
   13a9c:	str	r0, [fp, #-20]	; 0xffffffec
   13aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aa4:	cmn	r0, #1
   13aa8:	bne	13af4 <__assert_fail@plt+0x23c0>
   13aac:	bl	115f0 <__errno_location@plt>
   13ab0:	ldr	r1, [r0]
   13ab4:	movw	r0, #17264	; 0x4370
   13ab8:	movt	r0, #3
   13abc:	ldr	r2, [r0]
   13ac0:	movw	r0, #0
   13ac4:	movw	r3, #3
   13ac8:	str	r1, [sp, #8]
   13acc:	mov	r1, r3
   13ad0:	bl	19c2c <__assert_fail@plt+0x84f8>
   13ad4:	movw	r1, #1
   13ad8:	str	r0, [sp, #4]
   13adc:	mov	r0, r1
   13ae0:	ldr	r1, [sp, #8]
   13ae4:	movw	r2, #14290	; 0x37d2
   13ae8:	movt	r2, #2
   13aec:	ldr	r3, [sp, #4]
   13af0:	bl	1150c <error@plt>
   13af4:	ldr	r0, [fp, #-12]
   13af8:	str	r0, [fp, #-28]	; 0xffffffe4
   13afc:	str	r0, [fp, #-24]	; 0xffffffe8
   13b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b04:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b08:	add	r0, r0, r1
   13b0c:	str	r0, [sp, #32]
   13b10:	movw	r0, #16724	; 0x4154
   13b14:	movt	r0, #3
   13b18:	ldr	r0, [r0]
   13b1c:	ldr	r1, [sp, #32]
   13b20:	strb	r0, [r1]
   13b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b28:	movw	r1, #16724	; 0x4154
   13b2c:	movt	r1, #3
   13b30:	ldr	r1, [r1]
   13b34:	bl	11488 <rawmemchr@plt>
   13b38:	str	r0, [fp, #-24]	; 0xffffffe8
   13b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b40:	ldr	r1, [sp, #32]
   13b44:	cmp	r0, r1
   13b48:	bne	13b8c <__assert_fail@plt+0x2458>
   13b4c:	ldr	r0, [sp, #32]
   13b50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b54:	cmp	r0, r1
   13b58:	beq	13b88 <__assert_fail@plt+0x2454>
   13b5c:	ldr	r0, [sp, #32]
   13b60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b64:	sub	r0, r0, r1
   13b68:	str	r0, [sp, #12]
   13b6c:	ldrb	r0, [sp, #31]
   13b70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b74:	ldr	r2, [sp, #12]
   13b78:	and	r0, r0, #1
   13b7c:	bl	15e24 <__assert_fail@plt+0x46f0>
   13b80:	movw	r1, #0
   13b84:	strb	r1, [sp, #31]
   13b88:	b	13c0c <__assert_fail@plt+0x24d8>
   13b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b90:	add	r0, r0, #1
   13b94:	str	r0, [fp, #-24]	; 0xffffffe8
   13b98:	ldr	r0, [sp, #16]
   13b9c:	ldr	r1, [sp, #20]
   13ba0:	adds	r0, r0, #1
   13ba4:	adc	r1, r1, #0
   13ba8:	str	r0, [sp, #16]
   13bac:	str	r1, [sp, #20]
   13bb0:	ldr	r2, [fp, #-8]
   13bb4:	ldr	r3, [fp, #-4]
   13bb8:	subs	r0, r0, r2
   13bbc:	sbcs	r1, r1, r3
   13bc0:	bcc	13c08 <__assert_fail@plt+0x24d4>
   13bc4:	b	13bc8 <__assert_fail@plt+0x2494>
   13bc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13bd0:	sub	r2, r1, r0
   13bd4:	ldrb	r1, [sp, #31]
   13bd8:	and	r1, r1, #1
   13bdc:	str	r0, [sp]
   13be0:	mov	r0, r1
   13be4:	ldr	r1, [sp]
   13be8:	bl	15e24 <__assert_fail@plt+0x46f0>
   13bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13bf0:	str	r1, [fp, #-28]	; 0xffffffe4
   13bf4:	mov	r1, #1
   13bf8:	strb	r1, [sp, #31]
   13bfc:	mov	r1, #0
   13c00:	str	r1, [sp, #20]
   13c04:	str	r1, [sp, #16]
   13c08:	b	13b24 <__assert_fail@plt+0x23f0>
   13c0c:	b	13c10 <__assert_fail@plt+0x24dc>
   13c10:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c14:	cmp	r0, #0
   13c18:	bne	13a8c <__assert_fail@plt+0x2358>
   13c1c:	mov	sp, fp
   13c20:	pop	{fp, pc}
   13c24:	push	{r4, sl, fp, lr}
   13c28:	add	fp, sp, #8
   13c2c:	sub	sp, sp, #80	; 0x50
   13c30:	ldr	ip, [fp, #20]
   13c34:	ldr	lr, [fp, #16]
   13c38:	ldr	r4, [fp, #8]
   13c3c:	str	r0, [fp, #-16]
   13c40:	str	r1, [fp, #-12]
   13c44:	str	r2, [fp, #-20]	; 0xffffffec
   13c48:	str	r3, [fp, #-24]	; 0xffffffe8
   13c4c:	str	ip, [fp, #-28]	; 0xffffffe4
   13c50:	str	lr, [fp, #-32]	; 0xffffffe0
   13c54:	mov	r0, #1
   13c58:	strb	r0, [fp, #-37]	; 0xffffffdb
   13c5c:	strb	r0, [fp, #-38]	; 0xffffffda
   13c60:	ldr	r0, [fp, #-16]
   13c64:	ldr	r1, [fp, #-12]
   13c68:	str	r1, [sp, #44]	; 0x2c
   13c6c:	str	r0, [sp, #40]	; 0x28
   13c70:	mov	r0, #0
   13c74:	str	r0, [sp, #36]	; 0x24
   13c78:	str	r0, [sp, #32]
   13c7c:	ldr	r0, [fp, #8]
   13c80:	cmn	r0, #1
   13c84:	beq	13cb8 <__assert_fail@plt+0x2584>
   13c88:	ldr	r0, [fp, #8]
   13c8c:	str	r0, [fp, #-36]	; 0xffffffdc
   13c90:	mvn	r0, #0
   13c94:	str	r0, [fp, #8]
   13c98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ca0:	cmp	r0, r1
   13ca4:	movw	r0, #0
   13ca8:	movcc	r0, #1
   13cac:	and	r0, r0, #1
   13cb0:	strb	r0, [sp, #31]
   13cb4:	b	13d88 <__assert_fail@plt+0x2654>
   13cb8:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13cbc:	tst	r0, #1
   13cc0:	bne	13d08 <__assert_fail@plt+0x25d4>
   13cc4:	ldr	r2, [sp, #40]	; 0x28
   13cc8:	ldr	r3, [sp, #44]	; 0x2c
   13ccc:	mov	r0, sp
   13cd0:	mov	r1, #1
   13cd4:	str	r1, [r0]
   13cd8:	mov	r0, #0
   13cdc:	bl	114b8 <lseek64@plt>
   13ce0:	and	r0, r0, r1
   13ce4:	cmn	r0, #1
   13ce8:	beq	13d08 <__assert_fail@plt+0x25d4>
   13cec:	b	13cf0 <__assert_fail@plt+0x25bc>
   13cf0:	ldr	r0, [fp, #-16]
   13cf4:	ldr	r1, [fp, #-12]
   13cf8:	str	r1, [sp, #44]	; 0x2c
   13cfc:	str	r0, [sp, #40]	; 0x28
   13d00:	movw	r0, #1
   13d04:	strb	r0, [fp, #-37]	; 0xffffffdb
   13d08:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13d10:	movw	r0, #0
   13d14:	bl	19fa8 <__assert_fail@plt+0x8874>
   13d18:	str	r0, [fp, #-36]	; 0xffffffdc
   13d1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d20:	cmn	r0, #1
   13d24:	bne	13d70 <__assert_fail@plt+0x263c>
   13d28:	bl	115f0 <__errno_location@plt>
   13d2c:	ldr	r1, [r0]
   13d30:	movw	r0, #17264	; 0x4370
   13d34:	movt	r0, #3
   13d38:	ldr	r2, [r0]
   13d3c:	movw	r0, #0
   13d40:	movw	r3, #3
   13d44:	str	r1, [sp, #20]
   13d48:	mov	r1, r3
   13d4c:	bl	19c2c <__assert_fail@plt+0x84f8>
   13d50:	movw	r1, #1
   13d54:	str	r0, [sp, #16]
   13d58:	mov	r0, r1
   13d5c:	ldr	r1, [sp, #20]
   13d60:	movw	r2, #14290	; 0x37d2
   13d64:	movt	r2, #2
   13d68:	ldr	r3, [sp, #16]
   13d6c:	bl	1150c <error@plt>
   13d70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d74:	cmp	r0, #0
   13d78:	movw	r0, #0
   13d7c:	moveq	r0, #1
   13d80:	and	r0, r0, #1
   13d84:	strb	r0, [sp, #31]
   13d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d8c:	str	r0, [sp, #24]
   13d90:	ldr	r0, [sp, #40]	; 0x28
   13d94:	ldr	r1, [sp, #44]	; 0x2c
   13d98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13d9c:	subs	r0, r2, r0
   13da0:	rscs	r1, r1, #0
   13da4:	bcc	13eb0 <__assert_fail@plt+0x277c>
   13da8:	b	13dac <__assert_fail@plt+0x2678>
   13dac:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13db0:	tst	r0, #1
   13db4:	bne	13dc4 <__assert_fail@plt+0x2690>
   13db8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13dbc:	tst	r0, #1
   13dc0:	beq	13de0 <__assert_fail@plt+0x26ac>
   13dc4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13dc8:	ldr	r1, [sp, #24]
   13dcc:	ldr	r2, [sp, #40]	; 0x28
   13dd0:	and	r0, r0, #1
   13dd4:	bl	15e24 <__assert_fail@plt+0x46f0>
   13dd8:	and	r0, r0, #1
   13ddc:	strb	r0, [fp, #-38]	; 0xffffffda
   13de0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13de4:	and	r0, r0, #1
   13de8:	ldr	r1, [sp, #32]
   13dec:	ldr	r2, [sp, #36]	; 0x24
   13df0:	adds	r0, r1, r0
   13df4:	adc	r1, r2, #0
   13df8:	str	r0, [sp, #32]
   13dfc:	str	r1, [sp, #36]	; 0x24
   13e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e08:	orr	r0, r0, r1
   13e0c:	mov	r1, #1
   13e10:	cmp	r0, #0
   13e14:	str	r1, [sp, #12]
   13e18:	beq	13e44 <__assert_fail@plt+0x2710>
   13e1c:	b	13e20 <__assert_fail@plt+0x26ec>
   13e20:	ldr	r0, [sp, #32]
   13e24:	ldr	r1, [sp, #36]	; 0x24
   13e28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e30:	subs	r0, r0, r2
   13e34:	sbcs	r1, r1, r3
   13e38:	mov	r2, #0
   13e3c:	movwcc	r2, #1
   13e40:	str	r2, [sp, #12]
   13e44:	ldr	r0, [sp, #12]
   13e48:	and	r0, r0, #1
   13e4c:	strb	r0, [fp, #-37]	; 0xffffffdb
   13e50:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13e54:	tst	r0, #1
   13e58:	bne	13e7c <__assert_fail@plt+0x2748>
   13e5c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13e60:	tst	r0, #1
   13e64:	bne	13e7c <__assert_fail@plt+0x2748>
   13e68:	movw	r0, #0
   13e6c:	str	r0, [fp, #-36]	; 0xffffffdc
   13e70:	movw	r0, #1
   13e74:	strb	r0, [sp, #31]
   13e78:	b	13eb0 <__assert_fail@plt+0x277c>
   13e7c:	ldr	r0, [sp, #40]	; 0x28
   13e80:	ldr	r1, [sp, #24]
   13e84:	add	r0, r1, r0
   13e88:	str	r0, [sp, #24]
   13e8c:	ldr	r0, [sp, #40]	; 0x28
   13e90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13e94:	sub	r0, r1, r0
   13e98:	str	r0, [fp, #-36]	; 0xffffffdc
   13e9c:	ldr	r0, [fp, #-16]
   13ea0:	ldr	r1, [fp, #-12]
   13ea4:	str	r1, [sp, #44]	; 0x2c
   13ea8:	str	r0, [sp, #40]	; 0x28
   13eac:	b	13d90 <__assert_fail@plt+0x265c>
   13eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13eb4:	cmp	r0, #0
   13eb8:	beq	13f6c <__assert_fail@plt+0x2838>
   13ebc:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13ec0:	tst	r0, #1
   13ec4:	bne	13ed4 <__assert_fail@plt+0x27a0>
   13ec8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13ecc:	tst	r0, #1
   13ed0:	beq	13ef0 <__assert_fail@plt+0x27bc>
   13ed4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13ed8:	ldr	r1, [sp, #24]
   13edc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13ee0:	and	r0, r0, #1
   13ee4:	bl	15e24 <__assert_fail@plt+0x46f0>
   13ee8:	and	r0, r0, #1
   13eec:	strb	r0, [fp, #-38]	; 0xffffffda
   13ef0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13ef4:	and	r0, r0, #1
   13ef8:	ldr	r1, [sp, #32]
   13efc:	ldr	r2, [sp, #36]	; 0x24
   13f00:	adds	r0, r1, r0
   13f04:	adc	r1, r2, #0
   13f08:	str	r0, [sp, #32]
   13f0c:	str	r1, [sp, #36]	; 0x24
   13f10:	movw	r0, #0
   13f14:	strb	r0, [fp, #-37]	; 0xffffffdb
   13f18:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13f1c:	tst	r0, #1
   13f20:	bne	13f50 <__assert_fail@plt+0x281c>
   13f24:	ldr	r0, [sp, #32]
   13f28:	ldr	r1, [sp, #36]	; 0x24
   13f2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f34:	eor	r1, r1, r3
   13f38:	eor	r0, r0, r2
   13f3c:	orr	r0, r0, r1
   13f40:	cmp	r0, #0
   13f44:	bne	13f50 <__assert_fail@plt+0x281c>
   13f48:	b	13f4c <__assert_fail@plt+0x2818>
   13f4c:	b	13f84 <__assert_fail@plt+0x2850>
   13f50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f54:	ldr	r1, [sp, #40]	; 0x28
   13f58:	ldr	r2, [sp, #44]	; 0x2c
   13f5c:	subs	r0, r1, r0
   13f60:	sbc	r1, r2, #0
   13f64:	str	r0, [sp, #40]	; 0x28
   13f68:	str	r1, [sp, #44]	; 0x2c
   13f6c:	b	13f70 <__assert_fail@plt+0x283c>
   13f70:	ldrb	r0, [sp, #31]
   13f74:	mvn	r1, #0
   13f78:	eor	r0, r0, r1
   13f7c:	tst	r0, #1
   13f80:	bne	13c7c <__assert_fail@plt+0x2548>
   13f84:	b	13f88 <__assert_fail@plt+0x2854>
   13f88:	ldr	r0, [sp, #32]
   13f8c:	ldr	r1, [sp, #36]	; 0x24
   13f90:	adds	r2, r0, #1
   13f94:	adc	r3, r1, #0
   13f98:	str	r2, [sp, #32]
   13f9c:	str	r3, [sp, #36]	; 0x24
   13fa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fa8:	subs	r0, r0, r2
   13fac:	sbcs	r1, r1, r3
   13fb0:	bcs	13fd4 <__assert_fail@plt+0x28a0>
   13fb4:	b	13fb8 <__assert_fail@plt+0x2884>
   13fb8:	movw	r0, #1
   13fbc:	and	r0, r0, #1
   13fc0:	movw	r1, #0
   13fc4:	str	r1, [sp, #8]
   13fc8:	ldr	r2, [sp, #8]
   13fcc:	bl	15e24 <__assert_fail@plt+0x46f0>
   13fd0:	b	13f88 <__assert_fail@plt+0x2854>
   13fd4:	sub	sp, fp, #8
   13fd8:	pop	{r4, sl, fp, pc}
   13fdc:	push	{fp, lr}
   13fe0:	mov	fp, sp
   13fe4:	sub	sp, sp, #96	; 0x60
   13fe8:	str	r0, [fp, #-8]
   13fec:	str	r1, [fp, #-4]
   13ff0:	str	r2, [fp, #-12]
   13ff4:	str	r3, [fp, #-16]
   13ff8:	mov	r0, #0
   13ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   14000:	str	r0, [fp, #-32]	; 0xffffffe0
   14004:	movw	r0, #0
   14008:	str	r0, [fp, #-36]	; 0xffffffdc
   1400c:	str	r0, [fp, #-40]	; 0xffffffd8
   14010:	str	r0, [fp, #-44]	; 0xffffffd4
   14014:	movw	r0, #0
   14018:	strb	r0, [fp, #-45]	; 0xffffffd3
   1401c:	ldr	r1, [fp, #-12]
   14020:	ldr	r2, [fp, #-16]
   14024:	movw	r0, #0
   14028:	bl	19fa8 <__assert_fail@plt+0x8874>
   1402c:	str	r0, [fp, #-20]	; 0xffffffec
   14030:	ldr	r0, [fp, #-20]	; 0xffffffec
   14034:	cmn	r0, #1
   14038:	bne	14084 <__assert_fail@plt+0x2950>
   1403c:	bl	115f0 <__errno_location@plt>
   14040:	ldr	r1, [r0]
   14044:	movw	r0, #17264	; 0x4370
   14048:	movt	r0, #3
   1404c:	ldr	r2, [r0]
   14050:	movw	r0, #0
   14054:	movw	r3, #3
   14058:	str	r1, [sp, #12]
   1405c:	mov	r1, r3
   14060:	bl	19c2c <__assert_fail@plt+0x84f8>
   14064:	movw	r1, #1
   14068:	str	r0, [sp, #8]
   1406c:	mov	r0, r1
   14070:	ldr	r1, [sp, #12]
   14074:	movw	r2, #14290	; 0x37d2
   14078:	movt	r2, #2
   1407c:	ldr	r3, [sp, #8]
   14080:	bl	1150c <error@plt>
   14084:	ldr	r0, [fp, #-20]	; 0xffffffec
   14088:	str	r0, [sp, #44]	; 0x2c
   1408c:	ldr	r0, [fp, #-12]
   14090:	str	r0, [sp, #40]	; 0x28
   14094:	ldr	r0, [sp, #44]	; 0x2c
   14098:	cmp	r0, #0
   1409c:	beq	1448c <__assert_fail@plt+0x2d58>
   140a0:	mov	r0, #0
   140a4:	str	r0, [sp, #36]	; 0x24
   140a8:	str	r0, [sp, #32]
   140ac:	ldr	r0, [fp, #-8]
   140b0:	ldr	r1, [fp, #-4]
   140b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140bc:	subs	r0, r0, r2
   140c0:	sbc	r1, r1, r3
   140c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   140c8:	subs	r0, r0, r2
   140cc:	sbc	r1, r1, #0
   140d0:	ldr	r2, [sp, #44]	; 0x2c
   140d4:	subs	r0, r2, r0
   140d8:	rscs	r1, r1, #0
   140dc:	bcc	14134 <__assert_fail@plt+0x2a00>
   140e0:	b	140e4 <__assert_fail@plt+0x29b0>
   140e4:	ldr	r0, [fp, #-8]
   140e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   140ec:	sub	r0, r0, r1
   140f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   140f4:	sub	r0, r0, r1
   140f8:	str	r0, [sp, #36]	; 0x24
   140fc:	ldr	r0, [sp, #40]	; 0x28
   14100:	ldr	r1, [sp, #36]	; 0x24
   14104:	add	r0, r0, r1
   14108:	mvn	r1, #0
   1410c:	add	r0, r0, r1
   14110:	str	r0, [sp, #32]
   14114:	ldr	r0, [sp, #40]	; 0x28
   14118:	movw	r1, #16724	; 0x4154
   1411c:	movt	r1, #3
   14120:	ldr	r1, [r1]
   14124:	ldr	r2, [sp, #36]	; 0x24
   14128:	bl	115cc <memrchr@plt>
   1412c:	str	r0, [sp, #28]
   14130:	b	14150 <__assert_fail@plt+0x2a1c>
   14134:	ldr	r0, [sp, #40]	; 0x28
   14138:	movw	r1, #16724	; 0x4154
   1413c:	movt	r1, #3
   14140:	ldr	r1, [r1]
   14144:	ldr	r2, [sp, #44]	; 0x2c
   14148:	bl	115cc <memrchr@plt>
   1414c:	str	r0, [sp, #28]
   14150:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14154:	cmp	r0, #0
   14158:	beq	141f0 <__assert_fail@plt+0x2abc>
   1415c:	ldr	r0, [sp, #28]
   14160:	movw	r1, #0
   14164:	cmp	r0, r1
   14168:	bne	14184 <__assert_fail@plt+0x2a50>
   1416c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14170:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14174:	orr	r0, r0, r1
   14178:	cmp	r0, #0
   1417c:	bne	141f0 <__assert_fail@plt+0x2abc>
   14180:	b	14184 <__assert_fail@plt+0x2a50>
   14184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14188:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1418c:	orr	r0, r0, r1
   14190:	clz	r0, r0
   14194:	lsr	r0, r0, #5
   14198:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1419c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   141a0:	bl	15e24 <__assert_fail@plt+0x46f0>
   141a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   141a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   141ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   141b0:	adds	r1, r2, r1
   141b4:	adc	r2, r3, #0
   141b8:	str	r1, [fp, #-32]	; 0xffffffe0
   141bc:	str	r2, [fp, #-28]	; 0xffffffe4
   141c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   141c4:	ldr	r2, [fp, #-16]
   141c8:	cmp	r1, r2
   141cc:	bls	141e0 <__assert_fail@plt+0x2aac>
   141d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   141d4:	ldr	r1, [fp, #-16]
   141d8:	bl	1af14 <__assert_fail@plt+0x97e0>
   141dc:	str	r0, [fp, #-40]	; 0xffffffd8
   141e0:	movw	r0, #0
   141e4:	str	r0, [fp, #-36]	; 0xffffffdc
   141e8:	ldr	r0, [fp, #-16]
   141ec:	str	r0, [fp, #-44]	; 0xffffffd4
   141f0:	ldr	r0, [sp, #28]
   141f4:	movw	r1, #0
   141f8:	cmp	r0, r1
   141fc:	beq	1429c <__assert_fail@plt+0x2b68>
   14200:	mov	r0, #1
   14204:	strb	r0, [fp, #-45]	; 0xffffffd3
   14208:	ldr	r0, [sp, #28]
   1420c:	ldr	r1, [sp, #40]	; 0x28
   14210:	sub	r0, r0, r1
   14214:	add	r0, r0, #1
   14218:	str	r0, [sp, #24]
   1421c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14224:	orr	r0, r0, r1
   14228:	clz	r0, r0
   1422c:	lsr	r0, r0, #5
   14230:	ldr	r1, [sp, #40]	; 0x28
   14234:	ldr	r2, [sp, #24]
   14238:	bl	15e24 <__assert_fail@plt+0x46f0>
   1423c:	ldr	r1, [sp, #24]
   14240:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14248:	adds	r1, r2, r1
   1424c:	adc	r2, r3, #0
   14250:	str	r1, [fp, #-32]	; 0xffffffe0
   14254:	str	r2, [fp, #-28]	; 0xffffffe4
   14258:	ldr	r1, [sp, #24]
   1425c:	ldr	r2, [sp, #44]	; 0x2c
   14260:	sub	r1, r2, r1
   14264:	str	r1, [sp, #44]	; 0x2c
   14268:	ldr	r1, [sp, #24]
   1426c:	ldr	r2, [sp, #40]	; 0x28
   14270:	add	r1, r2, r1
   14274:	str	r1, [sp, #40]	; 0x28
   14278:	ldr	r1, [sp, #32]
   1427c:	movw	r2, #0
   14280:	cmp	r1, r2
   14284:	beq	14298 <__assert_fail@plt+0x2b64>
   14288:	ldr	r0, [sp, #24]
   1428c:	ldr	r1, [sp, #36]	; 0x24
   14290:	sub	r0, r1, r0
   14294:	str	r0, [sp, #36]	; 0x24
   14298:	b	1429c <__assert_fail@plt+0x2b68>
   1429c:	ldr	r0, [sp, #44]	; 0x2c
   142a0:	cmp	r0, #0
   142a4:	beq	14360 <__assert_fail@plt+0x2c2c>
   142a8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   142ac:	tst	r0, #1
   142b0:	bne	14360 <__assert_fail@plt+0x2c2c>
   142b4:	ldr	r0, [sp, #32]
   142b8:	movw	r1, #0
   142bc:	cmp	r0, r1
   142c0:	beq	142d0 <__assert_fail@plt+0x2b9c>
   142c4:	ldr	r0, [sp, #36]	; 0x24
   142c8:	str	r0, [sp, #4]
   142cc:	b	142d8 <__assert_fail@plt+0x2ba4>
   142d0:	ldr	r0, [sp, #44]	; 0x2c
   142d4:	str	r0, [sp, #4]
   142d8:	ldr	r0, [sp, #4]
   142dc:	str	r0, [sp, #20]
   142e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142e8:	orr	r0, r0, r1
   142ec:	clz	r0, r0
   142f0:	lsr	r0, r0, #5
   142f4:	ldr	r1, [sp, #40]	; 0x28
   142f8:	ldr	r2, [sp, #20]
   142fc:	bl	15e24 <__assert_fail@plt+0x46f0>
   14300:	ldr	r1, [sp, #20]
   14304:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14308:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1430c:	adds	r1, r2, r1
   14310:	adc	r2, r3, #0
   14314:	str	r1, [fp, #-32]	; 0xffffffe0
   14318:	str	r2, [fp, #-28]	; 0xffffffe4
   1431c:	ldr	r1, [sp, #20]
   14320:	ldr	r2, [sp, #44]	; 0x2c
   14324:	sub	r1, r2, r1
   14328:	str	r1, [sp, #44]	; 0x2c
   1432c:	ldr	r1, [sp, #20]
   14330:	ldr	r2, [sp, #40]	; 0x28
   14334:	add	r1, r2, r1
   14338:	str	r1, [sp, #40]	; 0x28
   1433c:	ldr	r1, [sp, #32]
   14340:	movw	r2, #0
   14344:	cmp	r1, r2
   14348:	beq	1435c <__assert_fail@plt+0x2c28>
   1434c:	ldr	r0, [sp, #20]
   14350:	ldr	r1, [sp, #36]	; 0x24
   14354:	sub	r0, r1, r0
   14358:	str	r0, [sp, #36]	; 0x24
   1435c:	b	14360 <__assert_fail@plt+0x2c2c>
   14360:	ldr	r0, [sp, #32]
   14364:	movw	r1, #0
   14368:	cmp	r0, r1
   1436c:	beq	1437c <__assert_fail@plt+0x2c48>
   14370:	ldr	r0, [sp, #36]	; 0x24
   14374:	cmp	r0, #0
   14378:	bne	14398 <__assert_fail@plt+0x2c64>
   1437c:	ldr	r0, [sp, #32]
   14380:	movw	r1, #0
   14384:	cmp	r0, r1
   14388:	bne	14464 <__assert_fail@plt+0x2d30>
   1438c:	ldr	r0, [sp, #44]	; 0x2c
   14390:	cmp	r0, #0
   14394:	beq	14464 <__assert_fail@plt+0x2d30>
   14398:	ldr	r0, [sp, #32]
   1439c:	movw	r1, #0
   143a0:	cmp	r0, r1
   143a4:	beq	143b4 <__assert_fail@plt+0x2c80>
   143a8:	ldr	r0, [sp, #36]	; 0x24
   143ac:	str	r0, [sp]
   143b0:	b	143bc <__assert_fail@plt+0x2c88>
   143b4:	ldr	r0, [sp, #44]	; 0x2c
   143b8:	str	r0, [sp]
   143bc:	ldr	r0, [sp]
   143c0:	str	r0, [sp, #16]
   143c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   143cc:	sub	r0, r0, r1
   143d0:	ldr	r1, [sp, #16]
   143d4:	cmp	r0, r1
   143d8:	bcs	1441c <__assert_fail@plt+0x2ce8>
   143dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143e0:	ldr	r1, [fp, #-16]
   143e4:	mvn	r2, #0
   143e8:	sub	r1, r2, r1
   143ec:	cmp	r0, r1
   143f0:	bhi	14408 <__assert_fail@plt+0x2cd4>
   143f4:	ldr	r0, [fp, #-16]
   143f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143fc:	add	r0, r1, r0
   14400:	str	r0, [fp, #-44]	; 0xffffffd4
   14404:	b	1440c <__assert_fail@plt+0x2cd8>
   14408:	bl	1dbb4 <__assert_fail@plt+0xc480>
   1440c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14410:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14414:	bl	1af14 <__assert_fail@plt+0x97e0>
   14418:	str	r0, [fp, #-40]	; 0xffffffd8
   1441c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14420:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14424:	add	r0, r0, r1
   14428:	ldr	r1, [sp, #40]	; 0x28
   1442c:	ldr	r2, [sp, #16]
   14430:	bl	11428 <memcpy@plt>
   14434:	ldr	r0, [sp, #16]
   14438:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1443c:	add	r0, r1, r0
   14440:	str	r0, [fp, #-36]	; 0xffffffdc
   14444:	ldr	r0, [sp, #16]
   14448:	ldr	r1, [sp, #44]	; 0x2c
   1444c:	sub	r0, r1, r0
   14450:	str	r0, [sp, #44]	; 0x2c
   14454:	ldr	r0, [sp, #16]
   14458:	ldr	r1, [sp, #40]	; 0x28
   1445c:	add	r0, r1, r0
   14460:	str	r0, [sp, #40]	; 0x28
   14464:	ldr	r0, [sp, #32]
   14468:	movw	r1, #0
   1446c:	cmp	r0, r1
   14470:	beq	14488 <__assert_fail@plt+0x2d54>
   14474:	mov	r0, #0
   14478:	str	r0, [fp, #-28]	; 0xffffffe4
   1447c:	str	r0, [fp, #-32]	; 0xffffffe0
   14480:	movw	r0, #0
   14484:	strb	r0, [fp, #-45]	; 0xffffffd3
   14488:	b	14094 <__assert_fail@plt+0x2960>
   1448c:	b	14490 <__assert_fail@plt+0x2d5c>
   14490:	ldr	r0, [fp, #-20]	; 0xffffffec
   14494:	cmp	r0, #0
   14498:	bne	1401c <__assert_fail@plt+0x28e8>
   1449c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   144a0:	cmp	r0, #0
   144a4:	beq	144cc <__assert_fail@plt+0x2d98>
   144a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144b0:	orr	r0, r0, r1
   144b4:	clz	r0, r0
   144b8:	lsr	r0, r0, #5
   144bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   144c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   144c4:	and	r0, r0, #1
   144c8:	bl	15e24 <__assert_fail@plt+0x46f0>
   144cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144d0:	bl	174e8 <__assert_fail@plt+0x5db4>
   144d4:	mov	sp, fp
   144d8:	pop	{fp, pc}
   144dc:	push	{r4, r5, r6, sl, fp, lr}
   144e0:	add	fp, sp, #16
   144e4:	sub	sp, sp, #112	; 0x70
   144e8:	ldr	ip, [fp, #28]
   144ec:	ldr	lr, [fp, #24]
   144f0:	ldr	r4, [fp, #16]
   144f4:	ldr	r5, [fp, #12]
   144f8:	ldr	r6, [fp, #8]
   144fc:	str	r0, [fp, #-24]	; 0xffffffe8
   14500:	str	r1, [fp, #-20]	; 0xffffffec
   14504:	str	r3, [fp, #-28]	; 0xffffffe4
   14508:	str	r2, [fp, #-32]	; 0xffffffe0
   1450c:	str	ip, [fp, #-36]	; 0xffffffdc
   14510:	str	lr, [fp, #-40]	; 0xffffffd8
   14514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14518:	ldr	r1, [fp, #-20]	; 0xffffffec
   1451c:	orr	r0, r0, r1
   14520:	cmp	r0, #0
   14524:	beq	14588 <__assert_fail@plt+0x2e54>
   14528:	b	1452c <__assert_fail@plt+0x2df8>
   1452c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14530:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14534:	orr	r0, r0, r1
   14538:	cmp	r0, #0
   1453c:	beq	14588 <__assert_fail@plt+0x2e54>
   14540:	b	14544 <__assert_fail@plt+0x2e10>
   14544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1454c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14550:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14554:	subs	r0, r2, r0
   14558:	sbcs	r1, r3, r1
   1455c:	bcc	14588 <__assert_fail@plt+0x2e54>
   14560:	b	14564 <__assert_fail@plt+0x2e30>
   14564:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1456c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14570:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14574:	subs	r0, r2, r0
   14578:	sbcs	r1, r3, r1
   1457c:	bcc	14588 <__assert_fail@plt+0x2e54>
   14580:	b	14584 <__assert_fail@plt+0x2e50>
   14584:	b	145a8 <__assert_fail@plt+0x2e74>
   14588:	movw	r0, #13981	; 0x369d
   1458c:	movt	r0, #2
   14590:	movw	r1, #13551	; 0x34ef
   14594:	movt	r1, #2
   14598:	movw	r2, #996	; 0x3e4
   1459c:	movw	r3, #14016	; 0x36c0
   145a0:	movt	r3, #2
   145a4:	bl	11734 <__assert_fail@plt>
   145a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   145b0:	subs	r0, r0, #1
   145b4:	sbc	r1, r1, #0
   145b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   145bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   145c0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   145c4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   145c8:	str	r0, [sp, #64]	; 0x40
   145cc:	mov	r0, r2
   145d0:	str	r1, [sp, #60]	; 0x3c
   145d4:	mov	r1, r3
   145d8:	mov	r2, ip
   145dc:	mov	r3, lr
   145e0:	bl	22540 <__assert_fail@plt+0x10e0c>
   145e4:	ldr	r2, [sp, #64]	; 0x40
   145e8:	umull	r3, ip, r2, r0
   145ec:	mla	r1, r2, r1, ip
   145f0:	ldr	ip, [sp, #60]	; 0x3c
   145f4:	mla	r0, ip, r0, r1
   145f8:	str	r3, [fp, #-48]	; 0xffffffd0
   145fc:	str	r0, [fp, #-44]	; 0xffffffd4
   14600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14604:	ldr	r1, [fp, #-20]	; 0xffffffec
   14608:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1460c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14610:	eor	r1, r1, ip
   14614:	eor	r0, r0, r3
   14618:	orr	r0, r0, r1
   1461c:	cmp	r0, #0
   14620:	bne	1463c <__assert_fail@plt+0x2f08>
   14624:	b	14628 <__assert_fail@plt+0x2ef4>
   14628:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1462c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14630:	str	r0, [sp, #56]	; 0x38
   14634:	str	r1, [sp, #52]	; 0x34
   14638:	b	14690 <__assert_fail@plt+0x2f5c>
   1463c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14640:	ldr	r1, [fp, #-20]	; 0xffffffec
   14644:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14648:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1464c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14650:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14654:	str	r0, [sp, #48]	; 0x30
   14658:	mov	r0, r2
   1465c:	str	r1, [sp, #44]	; 0x2c
   14660:	mov	r1, r3
   14664:	mov	r2, ip
   14668:	mov	r3, lr
   1466c:	bl	22540 <__assert_fail@plt+0x10e0c>
   14670:	ldr	r2, [sp, #48]	; 0x30
   14674:	umull	r3, ip, r2, r0
   14678:	mla	r1, r2, r1, ip
   1467c:	ldr	ip, [sp, #44]	; 0x2c
   14680:	mla	r0, ip, r0, r1
   14684:	str	r3, [sp, #56]	; 0x38
   14688:	str	r0, [sp, #52]	; 0x34
   1468c:	b	14690 <__assert_fail@plt+0x2f5c>
   14690:	ldr	r0, [sp, #52]	; 0x34
   14694:	ldr	r1, [sp, #56]	; 0x38
   14698:	str	r1, [fp, #-56]	; 0xffffffc8
   1469c:	str	r0, [fp, #-52]	; 0xffffffcc
   146a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   146a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146a8:	ldr	r2, [fp, #16]
   146ac:	subs	r0, r0, r2
   146b0:	sbcs	r1, r1, #0
   146b4:	bge	146f4 <__assert_fail@plt+0x2fc0>
   146b8:	b	146bc <__assert_fail@plt+0x2f88>
   146bc:	ldr	r0, [fp, #8]
   146c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   146c4:	add	r2, r0, r1
   146c8:	ldr	r3, [fp, #16]
   146cc:	sub	r1, r3, r1
   146d0:	str	r1, [sp, #40]	; 0x28
   146d4:	mov	r1, r2
   146d8:	ldr	r2, [sp, #40]	; 0x28
   146dc:	bl	11404 <memmove@plt>
   146e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   146e4:	ldr	r2, [fp, #16]
   146e8:	sub	r1, r2, r1
   146ec:	str	r1, [fp, #16]
   146f0:	b	14778 <__assert_fail@plt+0x3044>
   146f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   146f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146fc:	ldr	r2, [fp, #16]
   14700:	subs	r2, r0, r2
   14704:	sbc	r3, r1, #0
   14708:	mov	r0, sp
   1470c:	mov	r1, #1
   14710:	str	r1, [r0]
   14714:	mov	r0, #0
   14718:	bl	114b8 <lseek64@plt>
   1471c:	cmn	r1, #1
   14720:	bgt	14770 <__assert_fail@plt+0x303c>
   14724:	b	14728 <__assert_fail@plt+0x2ff4>
   14728:	bl	115f0 <__errno_location@plt>
   1472c:	ldr	r1, [r0]
   14730:	movw	r0, #17264	; 0x4370
   14734:	movt	r0, #3
   14738:	ldr	r2, [r0]
   1473c:	movw	r0, #0
   14740:	movw	r3, #3
   14744:	str	r1, [sp, #36]	; 0x24
   14748:	mov	r1, r3
   1474c:	bl	19c2c <__assert_fail@plt+0x84f8>
   14750:	movw	r1, #1
   14754:	str	r0, [sp, #32]
   14758:	mov	r0, r1
   1475c:	ldr	r1, [sp, #36]	; 0x24
   14760:	movw	r2, #14290	; 0x37d2
   14764:	movt	r2, #2
   14768:	ldr	r3, [sp, #32]
   1476c:	bl	1150c <error@plt>
   14770:	mvn	r0, #0
   14774:	str	r0, [fp, #16]
   14778:	b	1477c <__assert_fail@plt+0x3048>
   1477c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14780:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14784:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14788:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1478c:	subs	r0, r0, r2
   14790:	sbcs	r1, r1, r3
   14794:	bge	14944 <__assert_fail@plt+0x3210>
   14798:	b	1479c <__assert_fail@plt+0x3068>
   1479c:	ldr	r0, [fp, #16]
   147a0:	cmn	r0, #1
   147a4:	beq	147bc <__assert_fail@plt+0x3088>
   147a8:	ldr	r0, [fp, #16]
   147ac:	str	r0, [fp, #-60]	; 0xffffffc4
   147b0:	mvn	r0, #0
   147b4:	str	r0, [fp, #16]
   147b8:	b	14828 <__assert_fail@plt+0x30f4>
   147bc:	ldr	r1, [fp, #8]
   147c0:	ldr	r2, [fp, #12]
   147c4:	movw	r0, #0
   147c8:	bl	19fa8 <__assert_fail@plt+0x8874>
   147cc:	str	r0, [fp, #-60]	; 0xffffffc4
   147d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   147d4:	cmn	r0, #1
   147d8:	bne	14824 <__assert_fail@plt+0x30f0>
   147dc:	bl	115f0 <__errno_location@plt>
   147e0:	ldr	r1, [r0]
   147e4:	movw	r0, #17264	; 0x4370
   147e8:	movt	r0, #3
   147ec:	ldr	r2, [r0]
   147f0:	movw	r0, #0
   147f4:	movw	r3, #3
   147f8:	str	r1, [sp, #28]
   147fc:	mov	r1, r3
   14800:	bl	19c2c <__assert_fail@plt+0x84f8>
   14804:	movw	r1, #1
   14808:	str	r0, [sp, #24]
   1480c:	mov	r0, r1
   14810:	ldr	r1, [sp, #28]
   14814:	movw	r2, #14290	; 0x37d2
   14818:	movt	r2, #2
   1481c:	ldr	r3, [sp, #24]
   14820:	bl	1150c <error@plt>
   14824:	b	14828 <__assert_fail@plt+0x30f4>
   14828:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1482c:	cmp	r0, #0
   14830:	bne	14838 <__assert_fail@plt+0x3104>
   14834:	b	14944 <__assert_fail@plt+0x3210>
   14838:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1483c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14840:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14844:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14848:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1484c:	subs	r1, r1, r3
   14850:	sbc	r2, r2, ip
   14854:	subs	r0, r0, r1
   14858:	rscs	r1, r2, #0
   1485c:	bge	14878 <__assert_fail@plt+0x3144>
   14860:	b	14864 <__assert_fail@plt+0x3130>
   14864:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14868:	mov	r1, #0
   1486c:	str	r0, [sp, #20]
   14870:	str	r1, [sp, #16]
   14874:	b	1489c <__assert_fail@plt+0x3168>
   14878:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1487c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14880:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14884:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14888:	subs	r0, r0, r2
   1488c:	sbc	r1, r1, r3
   14890:	str	r0, [sp, #20]
   14894:	str	r1, [sp, #16]
   14898:	b	1489c <__assert_fail@plt+0x3168>
   1489c:	ldr	r0, [sp, #16]
   148a0:	ldr	r1, [sp, #20]
   148a4:	str	r1, [fp, #-60]	; 0xffffffc4
   148a8:	ldr	r1, [fp, #8]
   148ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   148b0:	movw	r3, #1
   148b4:	str	r0, [sp, #12]
   148b8:	mov	r0, r3
   148bc:	bl	17630 <__assert_fail@plt+0x5efc>
   148c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   148c4:	cmp	r0, r1
   148c8:	beq	14924 <__assert_fail@plt+0x31f0>
   148cc:	bl	115f0 <__errno_location@plt>
   148d0:	ldr	r0, [r0]
   148d4:	bl	16bf4 <__assert_fail@plt+0x54c0>
   148d8:	tst	r0, #1
   148dc:	bne	14924 <__assert_fail@plt+0x31f0>
   148e0:	bl	115f0 <__errno_location@plt>
   148e4:	ldr	r1, [r0]
   148e8:	movw	r0, #0
   148ec:	movw	r2, #3
   148f0:	str	r1, [sp, #8]
   148f4:	mov	r1, r2
   148f8:	movw	r2, #14753	; 0x39a1
   148fc:	movt	r2, #2
   14900:	bl	19c2c <__assert_fail@plt+0x84f8>
   14904:	movw	r1, #1
   14908:	str	r0, [sp, #4]
   1490c:	mov	r0, r1
   14910:	ldr	r1, [sp, #8]
   14914:	movw	r2, #14290	; 0x37d2
   14918:	movt	r2, #2
   1491c:	ldr	r3, [sp, #4]
   14920:	bl	1150c <error@plt>
   14924:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14928:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1492c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14930:	adds	r0, r1, r0
   14934:	adc	r1, r2, #0
   14938:	str	r0, [fp, #-48]	; 0xffffffd0
   1493c:	str	r1, [fp, #-44]	; 0xffffffd4
   14940:	b	1477c <__assert_fail@plt+0x3048>
   14944:	sub	sp, fp, #16
   14948:	pop	{r4, r5, r6, sl, fp, pc}
   1494c:	push	{r4, r5, r6, sl, fp, lr}
   14950:	add	fp, sp, #16
   14954:	sub	sp, sp, #200	; 0xc8
   14958:	ldr	ip, [fp, #28]
   1495c:	ldr	lr, [fp, #24]
   14960:	ldr	r4, [fp, #16]
   14964:	ldr	r5, [fp, #12]
   14968:	ldr	r6, [fp, #8]
   1496c:	str	r0, [fp, #-24]	; 0xffffffe8
   14970:	str	r1, [fp, #-20]	; 0xffffffec
   14974:	str	r3, [fp, #-28]	; 0xffffffe4
   14978:	str	r2, [fp, #-32]	; 0xffffffe0
   1497c:	str	ip, [fp, #-36]	; 0xffffffdc
   14980:	str	lr, [fp, #-40]	; 0xffffffd8
   14984:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14988:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1498c:	orr	r0, r0, r1
   14990:	cmp	r0, #0
   14994:	beq	149e0 <__assert_fail@plt+0x32ac>
   14998:	b	1499c <__assert_fail@plt+0x3268>
   1499c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   149a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   149a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   149ac:	subs	r0, r2, r0
   149b0:	sbcs	r1, r3, r1
   149b4:	bcc	149e0 <__assert_fail@plt+0x32ac>
   149b8:	b	149bc <__assert_fail@plt+0x3288>
   149bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   149c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   149cc:	subs	r0, r2, r0
   149d0:	sbcs	r1, r3, r1
   149d4:	bcc	149e0 <__assert_fail@plt+0x32ac>
   149d8:	b	149dc <__assert_fail@plt+0x32a8>
   149dc:	b	14a00 <__assert_fail@plt+0x32cc>
   149e0:	movw	r0, #13986	; 0x36a2
   149e4:	movt	r0, #2
   149e8:	movw	r1, #13551	; 0x34ef
   149ec:	movt	r1, #2
   149f0:	movw	r2, #867	; 0x363
   149f4:	movw	r3, #14094	; 0x370e
   149f8:	movt	r3, #2
   149fc:	bl	11734 <__assert_fail@plt>
   14a00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14a10:	bl	22540 <__assert_fail@plt+0x10e0c>
   14a14:	str	r1, [fp, #-44]	; 0xffffffd4
   14a18:	str	r0, [fp, #-48]	; 0xffffffd0
   14a1c:	mov	r0, #0
   14a20:	str	r0, [fp, #-52]	; 0xffffffcc
   14a24:	mov	r1, #1
   14a28:	str	r1, [fp, #-56]	; 0xffffffc8
   14a2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14a30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14a34:	subs	r2, r2, #1
   14a38:	sbc	r3, r3, #0
   14a3c:	str	r2, [fp, #-64]	; 0xffffffc0
   14a40:	str	r3, [fp, #-60]	; 0xffffffc4
   14a44:	str	r0, [fp, #-68]	; 0xffffffbc
   14a48:	str	r0, [fp, #-72]	; 0xffffffb8
   14a4c:	strb	r1, [fp, #-73]	; 0xffffffb7
   14a50:	strb	r0, [fp, #-74]	; 0xffffffb6
   14a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a58:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a5c:	subs	r0, r0, #2
   14a60:	sbcs	r1, r1, #0
   14a64:	bcc	14bcc <__assert_fail@plt+0x3498>
   14a68:	b	14a6c <__assert_fail@plt+0x3338>
   14a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a70:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a74:	subs	r0, r0, #1
   14a78:	sbc	r1, r1, #0
   14a7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14a80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14a84:	umull	ip, lr, r0, r2
   14a88:	mla	r0, r0, r3, lr
   14a8c:	mla	r0, r1, r2, r0
   14a90:	subs	r1, ip, #1
   14a94:	sbc	r0, r0, #0
   14a98:	str	r1, [fp, #-88]	; 0xffffffa8
   14a9c:	str	r0, [fp, #-84]	; 0xffffffac
   14aa0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14aa4:	ldr	r1, [fp, #-84]	; 0xffffffac
   14aa8:	ldr	r2, [fp, #16]
   14aac:	subs	r0, r0, r2
   14ab0:	sbcs	r1, r1, #0
   14ab4:	bge	14af4 <__assert_fail@plt+0x33c0>
   14ab8:	b	14abc <__assert_fail@plt+0x3388>
   14abc:	ldr	r0, [fp, #8]
   14ac0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14ac4:	add	r2, r0, r1
   14ac8:	ldr	r3, [fp, #16]
   14acc:	sub	r1, r3, r1
   14ad0:	str	r1, [sp, #88]	; 0x58
   14ad4:	mov	r1, r2
   14ad8:	ldr	r2, [sp, #88]	; 0x58
   14adc:	bl	11404 <memmove@plt>
   14ae0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14ae4:	ldr	r2, [fp, #16]
   14ae8:	sub	r1, r2, r1
   14aec:	str	r1, [fp, #16]
   14af0:	b	14b78 <__assert_fail@plt+0x3444>
   14af4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14af8:	ldr	r1, [fp, #-84]	; 0xffffffac
   14afc:	ldr	r2, [fp, #16]
   14b00:	subs	r2, r0, r2
   14b04:	sbc	r3, r1, #0
   14b08:	mov	r0, sp
   14b0c:	mov	r1, #1
   14b10:	str	r1, [r0]
   14b14:	mov	r0, #0
   14b18:	bl	114b8 <lseek64@plt>
   14b1c:	cmn	r1, #1
   14b20:	bgt	14b70 <__assert_fail@plt+0x343c>
   14b24:	b	14b28 <__assert_fail@plt+0x33f4>
   14b28:	bl	115f0 <__errno_location@plt>
   14b2c:	ldr	r1, [r0]
   14b30:	movw	r0, #17264	; 0x4370
   14b34:	movt	r0, #3
   14b38:	ldr	r2, [r0]
   14b3c:	movw	r0, #0
   14b40:	movw	r3, #3
   14b44:	str	r1, [sp, #84]	; 0x54
   14b48:	mov	r1, r3
   14b4c:	bl	19c2c <__assert_fail@plt+0x84f8>
   14b50:	movw	r1, #1
   14b54:	str	r0, [sp, #80]	; 0x50
   14b58:	mov	r0, r1
   14b5c:	ldr	r1, [sp, #84]	; 0x54
   14b60:	movw	r2, #14290	; 0x37d2
   14b64:	movt	r2, #2
   14b68:	ldr	r3, [sp, #80]	; 0x50
   14b6c:	bl	1150c <error@plt>
   14b70:	mvn	r0, #0
   14b74:	str	r0, [fp, #16]
   14b78:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14b7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14b80:	str	r1, [fp, #-68]	; 0xffffffbc
   14b84:	str	r0, [fp, #-72]	; 0xffffffb8
   14b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b90:	subs	r0, r0, #1
   14b94:	sbc	r1, r1, #0
   14b98:	str	r0, [fp, #-56]	; 0xffffffc8
   14b9c:	str	r1, [fp, #-52]	; 0xffffffcc
   14ba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ba4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14ba8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14bac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14bb0:	umull	ip, lr, r0, r2
   14bb4:	mla	r0, r0, r3, lr
   14bb8:	mla	r0, r1, r2, r0
   14bbc:	subs	r1, ip, #1
   14bc0:	sbc	r0, r0, #0
   14bc4:	str	r1, [fp, #-64]	; 0xffffffc0
   14bc8:	str	r0, [fp, #-60]	; 0xffffffc4
   14bcc:	b	14bd0 <__assert_fail@plt+0x349c>
   14bd0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14bd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14bd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14bdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14be0:	subs	r0, r0, r2
   14be4:	sbcs	r1, r1, r3
   14be8:	bge	15158 <__assert_fail@plt+0x3a24>
   14bec:	b	14bf0 <__assert_fail@plt+0x34bc>
   14bf0:	ldr	r0, [fp, #8]
   14bf4:	str	r0, [fp, #-92]	; 0xffffffa4
   14bf8:	ldr	r0, [fp, #16]
   14bfc:	cmn	r0, #1
   14c00:	beq	14c18 <__assert_fail@plt+0x34e4>
   14c04:	ldr	r0, [fp, #16]
   14c08:	str	r0, [fp, #-100]	; 0xffffff9c
   14c0c:	mvn	r0, #0
   14c10:	str	r0, [fp, #16]
   14c14:	b	14c84 <__assert_fail@plt+0x3550>
   14c18:	ldr	r1, [fp, #8]
   14c1c:	ldr	r2, [fp, #12]
   14c20:	movw	r0, #0
   14c24:	bl	19fa8 <__assert_fail@plt+0x8874>
   14c28:	str	r0, [fp, #-100]	; 0xffffff9c
   14c2c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14c30:	cmn	r0, #1
   14c34:	bne	14c80 <__assert_fail@plt+0x354c>
   14c38:	bl	115f0 <__errno_location@plt>
   14c3c:	ldr	r1, [r0]
   14c40:	movw	r0, #17264	; 0x4370
   14c44:	movt	r0, #3
   14c48:	ldr	r2, [r0]
   14c4c:	movw	r0, #0
   14c50:	movw	r3, #3
   14c54:	str	r1, [sp, #76]	; 0x4c
   14c58:	mov	r1, r3
   14c5c:	bl	19c2c <__assert_fail@plt+0x84f8>
   14c60:	movw	r1, #1
   14c64:	str	r0, [sp, #72]	; 0x48
   14c68:	mov	r0, r1
   14c6c:	ldr	r1, [sp, #76]	; 0x4c
   14c70:	movw	r2, #14290	; 0x37d2
   14c74:	movt	r2, #2
   14c78:	ldr	r3, [sp, #72]	; 0x48
   14c7c:	bl	1150c <error@plt>
   14c80:	b	14c84 <__assert_fail@plt+0x3550>
   14c84:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14c88:	cmp	r0, #0
   14c8c:	bne	14c94 <__assert_fail@plt+0x3560>
   14c90:	b	15158 <__assert_fail@plt+0x3a24>
   14c94:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14c98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14ca0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14ca4:	ldr	ip, [fp, #-68]	; 0xffffffbc
   14ca8:	subs	r1, r1, r3
   14cac:	sbc	r2, r2, ip
   14cb0:	subs	r0, r0, r1
   14cb4:	rscs	r1, r2, #0
   14cb8:	bge	14cd4 <__assert_fail@plt+0x35a0>
   14cbc:	b	14cc0 <__assert_fail@plt+0x358c>
   14cc0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14cc4:	mov	r1, #0
   14cc8:	str	r0, [sp, #68]	; 0x44
   14ccc:	str	r1, [sp, #64]	; 0x40
   14cd0:	b	14cf8 <__assert_fail@plt+0x35c4>
   14cd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14cdc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14ce0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14ce4:	subs	r0, r0, r2
   14ce8:	sbc	r1, r1, r3
   14cec:	str	r0, [sp, #68]	; 0x44
   14cf0:	str	r1, [sp, #64]	; 0x40
   14cf4:	b	14cf8 <__assert_fail@plt+0x35c4>
   14cf8:	ldr	r0, [sp, #64]	; 0x40
   14cfc:	ldr	r1, [sp, #68]	; 0x44
   14d00:	str	r1, [fp, #-100]	; 0xffffff9c
   14d04:	movw	r1, #0
   14d08:	strb	r1, [fp, #-74]	; 0xffffffb6
   14d0c:	ldr	r1, [fp, #8]
   14d10:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14d14:	add	r1, r1, r2
   14d18:	str	r1, [fp, #-96]	; 0xffffffa0
   14d1c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14d20:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14d24:	cmp	r0, r1
   14d28:	beq	15154 <__assert_fail@plt+0x3a20>
   14d2c:	mov	r0, #0
   14d30:	strb	r0, [fp, #-105]	; 0xffffff97
   14d34:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14d38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14d3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14d40:	ldr	ip, [fp, #-72]	; 0xffffffb8
   14d44:	ldr	lr, [fp, #-68]	; 0xffffffbc
   14d48:	subs	r2, r2, ip
   14d4c:	sbc	r3, r3, lr
   14d50:	cmn	r3, #1
   14d54:	str	r0, [sp, #60]	; 0x3c
   14d58:	str	r1, [sp, #56]	; 0x38
   14d5c:	bgt	14d78 <__assert_fail@plt+0x3644>
   14d60:	b	14d64 <__assert_fail@plt+0x3630>
   14d64:	mov	r0, #0
   14d68:	mov	r1, r0
   14d6c:	str	r1, [sp, #52]	; 0x34
   14d70:	str	r0, [sp, #48]	; 0x30
   14d74:	b	14d9c <__assert_fail@plt+0x3668>
   14d78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14d7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14d80:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14d84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14d88:	subs	r0, r0, r2
   14d8c:	sbc	r1, r1, r3
   14d90:	str	r0, [sp, #52]	; 0x34
   14d94:	str	r1, [sp, #48]	; 0x30
   14d98:	b	14d9c <__assert_fail@plt+0x3668>
   14d9c:	ldr	r0, [sp, #48]	; 0x30
   14da0:	ldr	r1, [sp, #52]	; 0x34
   14da4:	ldr	r2, [sp, #56]	; 0x38
   14da8:	subs	r1, r2, r1
   14dac:	ldr	r3, [sp, #60]	; 0x3c
   14db0:	sbcs	r0, r3, r0
   14db4:	bge	14dd0 <__assert_fail@plt+0x369c>
   14db8:	b	14dbc <__assert_fail@plt+0x3688>
   14dbc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14dc0:	mov	r1, #0
   14dc4:	str	r0, [sp, #44]	; 0x2c
   14dc8:	str	r1, [sp, #40]	; 0x28
   14dcc:	b	14e40 <__assert_fail@plt+0x370c>
   14dd0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14dd4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14dd8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14ddc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14de0:	subs	r0, r0, r2
   14de4:	sbc	r1, r1, r3
   14de8:	cmn	r1, #1
   14dec:	bgt	14e08 <__assert_fail@plt+0x36d4>
   14df0:	b	14df4 <__assert_fail@plt+0x36c0>
   14df4:	mov	r0, #0
   14df8:	mov	r1, r0
   14dfc:	str	r1, [sp, #36]	; 0x24
   14e00:	str	r0, [sp, #32]
   14e04:	b	14e2c <__assert_fail@plt+0x36f8>
   14e08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14e0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14e10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14e14:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14e18:	subs	r0, r0, r2
   14e1c:	sbc	r1, r1, r3
   14e20:	str	r0, [sp, #36]	; 0x24
   14e24:	str	r1, [sp, #32]
   14e28:	b	14e2c <__assert_fail@plt+0x36f8>
   14e2c:	ldr	r0, [sp, #32]
   14e30:	ldr	r1, [sp, #36]	; 0x24
   14e34:	str	r1, [sp, #44]	; 0x2c
   14e38:	str	r0, [sp, #40]	; 0x28
   14e3c:	b	14e40 <__assert_fail@plt+0x370c>
   14e40:	ldr	r0, [sp, #40]	; 0x28
   14e44:	ldr	r1, [sp, #44]	; 0x2c
   14e48:	str	r1, [sp, #96]	; 0x60
   14e4c:	str	r0, [sp, #100]	; 0x64
   14e50:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14e54:	ldr	r1, [sp, #96]	; 0x60
   14e58:	add	r0, r0, r1
   14e5c:	movw	r2, #16724	; 0x4154
   14e60:	movt	r2, #3
   14e64:	ldr	r2, [r2]
   14e68:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14e6c:	sub	r1, r3, r1
   14e70:	str	r1, [sp, #28]
   14e74:	mov	r1, r2
   14e78:	ldr	r2, [sp, #28]
   14e7c:	bl	11638 <memchr@plt>
   14e80:	str	r0, [sp, #92]	; 0x5c
   14e84:	ldr	r0, [sp, #92]	; 0x5c
   14e88:	movw	r1, #0
   14e8c:	cmp	r0, r1
   14e90:	beq	14eac <__assert_fail@plt+0x3778>
   14e94:	ldr	r0, [sp, #92]	; 0x5c
   14e98:	add	r0, r0, #1
   14e9c:	str	r0, [sp, #92]	; 0x5c
   14ea0:	movw	r0, #1
   14ea4:	strb	r0, [fp, #-105]	; 0xffffff97
   14ea8:	b	14eb4 <__assert_fail@plt+0x3780>
   14eac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14eb0:	str	r0, [sp, #92]	; 0x5c
   14eb4:	ldr	r0, [sp, #92]	; 0x5c
   14eb8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14ebc:	sub	r0, r0, r1
   14ec0:	str	r0, [fp, #-104]	; 0xffffff98
   14ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ec8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ecc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14ed0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14ed4:	eor	r1, r1, r3
   14ed8:	eor	r0, r0, r2
   14edc:	orr	r0, r0, r1
   14ee0:	cmp	r0, #0
   14ee4:	bne	14f44 <__assert_fail@plt+0x3810>
   14ee8:	b	14eec <__assert_fail@plt+0x37b8>
   14eec:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14ef0:	ldr	r2, [fp, #-104]	; 0xffffff98
   14ef4:	movw	r0, #1
   14ef8:	bl	17630 <__assert_fail@plt+0x5efc>
   14efc:	ldr	r1, [fp, #-104]	; 0xffffff98
   14f00:	cmp	r0, r1
   14f04:	beq	14f40 <__assert_fail@plt+0x380c>
   14f08:	bl	115f0 <__errno_location@plt>
   14f0c:	ldr	r1, [r0]
   14f10:	movw	r0, #14170	; 0x375a
   14f14:	movt	r0, #2
   14f18:	str	r1, [sp, #24]
   14f1c:	bl	11590 <gettext@plt>
   14f20:	movw	r1, #1
   14f24:	str	r0, [sp, #20]
   14f28:	mov	r0, r1
   14f2c:	ldr	r1, [sp, #24]
   14f30:	movw	r2, #14290	; 0x37d2
   14f34:	movt	r2, #2
   14f38:	ldr	r3, [sp, #20]
   14f3c:	bl	1150c <error@plt>
   14f40:	b	14f74 <__assert_fail@plt+0x3840>
   14f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f48:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f4c:	orr	r0, r0, r1
   14f50:	cmp	r0, #0
   14f54:	bne	14f70 <__assert_fail@plt+0x383c>
   14f58:	b	14f5c <__assert_fail@plt+0x3828>
   14f5c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14f60:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14f64:	ldr	r2, [fp, #-104]	; 0xffffff98
   14f68:	and	r0, r0, #1
   14f6c:	bl	15e24 <__assert_fail@plt+0x46f0>
   14f70:	b	14f74 <__assert_fail@plt+0x3840>
   14f74:	ldr	r0, [fp, #-104]	; 0xffffff98
   14f78:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14f7c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14f80:	adds	r0, r1, r0
   14f84:	adc	r1, r2, #0
   14f88:	str	r0, [fp, #-72]	; 0xffffffb8
   14f8c:	str	r1, [fp, #-68]	; 0xffffffbc
   14f90:	ldr	r0, [fp, #-104]	; 0xffffff98
   14f94:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14f98:	add	r0, r1, r0
   14f9c:	str	r0, [fp, #-92]	; 0xffffffa4
   14fa0:	ldr	r0, [fp, #-104]	; 0xffffff98
   14fa4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14fa8:	sub	r0, r1, r0
   14fac:	str	r0, [fp, #-100]	; 0xffffff9c
   14fb0:	ldrb	r0, [fp, #-105]	; 0xffffff97
   14fb4:	and	r0, r0, #1
   14fb8:	strb	r0, [fp, #-73]	; 0xffffffb7
   14fbc:	ldrb	r0, [fp, #-105]	; 0xffffff97
   14fc0:	tst	r0, #1
   14fc4:	movw	r0, #1
   14fc8:	str	r0, [sp, #16]
   14fcc:	bne	14ffc <__assert_fail@plt+0x38c8>
   14fd0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14fd4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14fd8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14fdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14fe0:	subs	r2, r2, #1
   14fe4:	sbc	r3, r3, #0
   14fe8:	subs	r0, r2, r0
   14fec:	sbcs	r1, r3, r1
   14ff0:	mov	r2, #0
   14ff4:	movwge	r2, #1
   14ff8:	str	r2, [sp, #16]
   14ffc:	ldr	r0, [sp, #16]
   15000:	tst	r0, #1
   15004:	beq	15150 <__assert_fail@plt+0x3a1c>
   15008:	ldrb	r0, [fp, #-105]	; 0xffffff97
   1500c:	tst	r0, #1
   15010:	bne	15030 <__assert_fail@plt+0x38fc>
   15014:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15018:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1501c:	cmp	r0, r1
   15020:	bne	15030 <__assert_fail@plt+0x38fc>
   15024:	movw	r0, #1
   15028:	strb	r0, [fp, #-74]	; 0xffffffb6
   1502c:	b	15150 <__assert_fail@plt+0x3a1c>
   15030:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15034:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15038:	adds	r0, r0, #1
   1503c:	adc	r1, r1, #0
   15040:	str	r0, [fp, #-56]	; 0xffffffc8
   15044:	str	r1, [fp, #-52]	; 0xffffffcc
   15048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1504c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15050:	orr	r0, r0, r1
   15054:	cmp	r0, #0
   15058:	beq	15084 <__assert_fail@plt+0x3950>
   1505c:	b	15060 <__assert_fail@plt+0x392c>
   15060:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15064:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1506c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15070:	subs	r0, r2, r0
   15074:	sbcs	r1, r3, r1
   15078:	bcs	15084 <__assert_fail@plt+0x3950>
   1507c:	b	15080 <__assert_fail@plt+0x394c>
   15080:	b	151fc <__assert_fail@plt+0x3ac8>
   15084:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15088:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1508c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15090:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15094:	eor	r1, r1, r3
   15098:	eor	r0, r0, r2
   1509c:	orr	r0, r0, r1
   150a0:	cmp	r0, #0
   150a4:	bne	150c8 <__assert_fail@plt+0x3994>
   150a8:	b	150ac <__assert_fail@plt+0x3978>
   150ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   150b4:	subs	r0, r0, #1
   150b8:	sbc	r1, r1, #0
   150bc:	str	r0, [fp, #-64]	; 0xffffffc0
   150c0:	str	r1, [fp, #-60]	; 0xffffffc4
   150c4:	b	150e8 <__assert_fail@plt+0x39b4>
   150c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   150cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   150d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   150d8:	adds	r0, r2, r0
   150dc:	adc	r1, r3, r1
   150e0:	str	r0, [fp, #-64]	; 0xffffffc0
   150e4:	str	r1, [fp, #-60]	; 0xffffffc4
   150e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   150ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
   150f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   150f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   150f8:	subs	r2, r2, #1
   150fc:	sbc	r3, r3, #0
   15100:	subs	r0, r2, r0
   15104:	sbcs	r1, r3, r1
   15108:	blt	15144 <__assert_fail@plt+0x3a10>
   1510c:	b	15110 <__assert_fail@plt+0x39dc>
   15110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15114:	ldr	r1, [fp, #-20]	; 0xffffffec
   15118:	orr	r0, r0, r1
   1511c:	cmp	r0, #0
   15120:	bne	15140 <__assert_fail@plt+0x3a0c>
   15124:	b	15128 <__assert_fail@plt+0x39f4>
   15128:	movw	r0, #1
   1512c:	and	r0, r0, #1
   15130:	movw	r1, #0
   15134:	str	r1, [sp, #12]
   15138:	ldr	r2, [sp, #12]
   1513c:	bl	15e24 <__assert_fail@plt+0x46f0>
   15140:	b	1514c <__assert_fail@plt+0x3a18>
   15144:	movw	r0, #0
   15148:	strb	r0, [fp, #-105]	; 0xffffff97
   1514c:	b	14fbc <__assert_fail@plt+0x3888>
   15150:	b	14d1c <__assert_fail@plt+0x35e8>
   15154:	b	14bd0 <__assert_fail@plt+0x349c>
   15158:	ldrb	r0, [fp, #-74]	; 0xffffffb6
   1515c:	tst	r0, #1
   15160:	beq	1517c <__assert_fail@plt+0x3a48>
   15164:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15168:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1516c:	adds	r0, r0, #1
   15170:	adc	r1, r1, #0
   15174:	str	r0, [fp, #-56]	; 0xffffffc8
   15178:	str	r1, [fp, #-52]	; 0xffffffcc
   1517c:	b	15180 <__assert_fail@plt+0x3a4c>
   15180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15184:	ldr	r1, [fp, #-20]	; 0xffffffec
   15188:	orr	r0, r0, r1
   1518c:	mov	r1, #0
   15190:	cmp	r0, #0
   15194:	str	r1, [sp, #8]
   15198:	bne	151d4 <__assert_fail@plt+0x3aa0>
   1519c:	b	151a0 <__assert_fail@plt+0x3a6c>
   151a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   151a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   151a8:	adds	r2, r0, #1
   151ac:	adc	r3, r1, #0
   151b0:	str	r2, [fp, #-56]	; 0xffffffc8
   151b4:	str	r3, [fp, #-52]	; 0xffffffcc
   151b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   151c0:	subs	r0, r2, r0
   151c4:	sbcs	r1, r3, r1
   151c8:	mov	r2, #0
   151cc:	movwcs	r2, #1
   151d0:	str	r2, [sp, #8]
   151d4:	ldr	r0, [sp, #8]
   151d8:	tst	r0, #1
   151dc:	beq	151fc <__assert_fail@plt+0x3ac8>
   151e0:	movw	r0, #1
   151e4:	and	r0, r0, #1
   151e8:	movw	r1, #0
   151ec:	str	r1, [sp, #4]
   151f0:	ldr	r2, [sp, #4]
   151f4:	bl	15e24 <__assert_fail@plt+0x46f0>
   151f8:	b	15180 <__assert_fail@plt+0x3a4c>
   151fc:	sub	sp, fp, #16
   15200:	pop	{r4, r5, r6, sl, fp, pc}
   15204:	push	{r4, sl, fp, lr}
   15208:	add	fp, sp, #8
   1520c:	sub	sp, sp, #136	; 0x88
   15210:	ldr	ip, [fp, #16]
   15214:	ldr	lr, [fp, #12]
   15218:	ldr	r4, [fp, #8]
   1521c:	str	r0, [fp, #-16]
   15220:	str	r1, [fp, #-12]
   15224:	str	r3, [fp, #-20]	; 0xffffffec
   15228:	str	r2, [fp, #-24]	; 0xffffffe8
   1522c:	mov	r0, #0
   15230:	strb	r0, [fp, #-25]	; 0xffffffe7
   15234:	strb	r0, [fp, #-26]	; 0xffffffe6
   15238:	ldr	r0, [fp, #-16]
   1523c:	ldr	r1, [fp, #-12]
   15240:	orr	r0, r0, r1
   15244:	cmp	r0, #0
   15248:	beq	15264 <__assert_fail@plt+0x3b30>
   1524c:	b	15250 <__assert_fail@plt+0x3b1c>
   15250:	mov	r0, #0
   15254:	str	r0, [fp, #-44]	; 0xffffffd4
   15258:	mov	r0, #1
   1525c:	str	r0, [fp, #-48]	; 0xffffffd0
   15260:	b	15330 <__assert_fail@plt+0x3bfc>
   15264:	ldr	r0, [fp, #-20]	; 0xffffffec
   15268:	cmp	r0, #0
   1526c:	beq	15278 <__assert_fail@plt+0x3b44>
   15270:	b	15274 <__assert_fail@plt+0x3b40>
   15274:	bl	1dbb4 <__assert_fail@plt+0xc480>
   15278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1527c:	movw	r1, #16
   15280:	bl	1afd4 <__assert_fail@plt+0x98a0>
   15284:	ldr	r1, [fp, #16]
   15288:	str	r0, [r1]
   1528c:	str	r0, [fp, #-36]	; 0xffffffdc
   15290:	movw	r0, #0
   15294:	str	r0, [fp, #-32]	; 0xffffffe0
   15298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1529c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   152a4:	subs	r0, r0, r1
   152a8:	rscs	r1, r2, #0
   152ac:	bcs	15320 <__assert_fail@plt+0x3bec>
   152b0:	b	152b4 <__assert_fail@plt+0x3b80>
   152b4:	bl	15fdc <__assert_fail@plt+0x48a8>
   152b8:	movw	r0, #17668	; 0x4504
   152bc:	movt	r0, #3
   152c0:	ldr	r0, [r0]
   152c4:	bl	1db7c <__assert_fail@plt+0xc448>
   152c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   152cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   152d0:	str	r0, [r1, r2, lsl #4]
   152d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   152dc:	add	r0, r0, r1, lsl #4
   152e0:	mvn	r1, #0
   152e4:	str	r1, [r0, #4]
   152e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   152f0:	add	r0, r0, r1, lsl #4
   152f4:	mov	r1, #0
   152f8:	str	r1, [r0, #8]
   152fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15300:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15304:	add	r0, r0, r1, lsl #4
   15308:	movw	r1, #0
   1530c:	str	r1, [r0, #12]
   15310:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15314:	add	r0, r0, #1
   15318:	str	r0, [fp, #-32]	; 0xffffffe0
   1531c:	b	15298 <__assert_fail@plt+0x3b64>
   15320:	movw	r0, #0
   15324:	str	r0, [fp, #-32]	; 0xffffffe0
   15328:	movw	r0, #0
   1532c:	strb	r0, [fp, #-27]	; 0xffffffe5
   15330:	b	15334 <__assert_fail@plt+0x3c00>
   15334:	ldr	r0, [fp, #8]
   15338:	str	r0, [fp, #-52]	; 0xffffffcc
   1533c:	ldr	r1, [fp, #8]
   15340:	ldr	r2, [fp, #12]
   15344:	movw	r0, #0
   15348:	bl	19fa8 <__assert_fail@plt+0x8874>
   1534c:	str	r0, [fp, #-60]	; 0xffffffc4
   15350:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15354:	cmn	r0, #1
   15358:	bne	153a4 <__assert_fail@plt+0x3c70>
   1535c:	bl	115f0 <__errno_location@plt>
   15360:	ldr	r1, [r0]
   15364:	movw	r0, #17264	; 0x4370
   15368:	movt	r0, #3
   1536c:	ldr	r2, [r0]
   15370:	movw	r0, #0
   15374:	movw	r3, #3
   15378:	str	r1, [sp, #64]	; 0x40
   1537c:	mov	r1, r3
   15380:	bl	19c2c <__assert_fail@plt+0x84f8>
   15384:	movw	r1, #1
   15388:	str	r0, [sp, #60]	; 0x3c
   1538c:	mov	r0, r1
   15390:	ldr	r1, [sp, #64]	; 0x40
   15394:	movw	r2, #14290	; 0x37d2
   15398:	movt	r2, #2
   1539c:	ldr	r3, [sp, #60]	; 0x3c
   153a0:	bl	1150c <error@plt>
   153a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   153a8:	cmp	r0, #0
   153ac:	bne	153b4 <__assert_fail@plt+0x3c80>
   153b0:	b	15888 <__assert_fail@plt+0x4154>
   153b4:	b	153b8 <__assert_fail@plt+0x3c84>
   153b8:	ldr	r0, [fp, #8]
   153bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   153c0:	add	r0, r0, r1
   153c4:	str	r0, [fp, #-56]	; 0xffffffc8
   153c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   153cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   153d0:	cmp	r0, r1
   153d4:	beq	15884 <__assert_fail@plt+0x4150>
   153d8:	movw	r0, #0
   153dc:	strb	r0, [fp, #-65]	; 0xffffffbf
   153e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   153e4:	movw	r1, #16724	; 0x4154
   153e8:	movt	r1, #3
   153ec:	ldr	r1, [r1]
   153f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   153f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   153f8:	sub	r2, r2, r3
   153fc:	bl	11638 <memchr@plt>
   15400:	str	r0, [sp, #72]	; 0x48
   15404:	ldr	r0, [sp, #72]	; 0x48
   15408:	movw	r1, #0
   1540c:	cmp	r0, r1
   15410:	beq	1542c <__assert_fail@plt+0x3cf8>
   15414:	ldr	r0, [sp, #72]	; 0x48
   15418:	add	r0, r0, #1
   1541c:	str	r0, [sp, #72]	; 0x48
   15420:	movw	r0, #1
   15424:	strb	r0, [fp, #-65]	; 0xffffffbf
   15428:	b	15434 <__assert_fail@plt+0x3d00>
   1542c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15430:	str	r0, [sp, #72]	; 0x48
   15434:	ldr	r0, [sp, #72]	; 0x48
   15438:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1543c:	sub	r0, r0, r1
   15440:	str	r0, [fp, #-64]	; 0xffffffc0
   15444:	ldr	r0, [fp, #-16]
   15448:	ldr	r1, [fp, #-12]
   1544c:	orr	r0, r0, r1
   15450:	cmp	r0, #0
   15454:	beq	15600 <__assert_fail@plt+0x3ecc>
   15458:	b	1545c <__assert_fail@plt+0x3d28>
   1545c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15460:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15464:	ldr	r2, [fp, #-16]
   15468:	ldr	r3, [fp, #-12]
   1546c:	eor	r1, r1, r3
   15470:	eor	r0, r0, r2
   15474:	orr	r0, r0, r1
   15478:	cmp	r0, #0
   1547c:	bne	154f0 <__assert_fail@plt+0x3dbc>
   15480:	b	15484 <__assert_fail@plt+0x3d50>
   15484:	movw	r0, #17280	; 0x4380
   15488:	movt	r0, #3
   1548c:	ldrb	r0, [r0]
   15490:	tst	r0, #1
   15494:	beq	154f0 <__assert_fail@plt+0x3dbc>
   15498:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1549c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   154a0:	movw	r0, #1
   154a4:	bl	17630 <__assert_fail@plt+0x5efc>
   154a8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   154ac:	cmp	r0, r1
   154b0:	beq	154ec <__assert_fail@plt+0x3db8>
   154b4:	bl	115f0 <__errno_location@plt>
   154b8:	ldr	r1, [r0]
   154bc:	movw	r0, #14170	; 0x375a
   154c0:	movt	r0, #2
   154c4:	str	r1, [sp, #56]	; 0x38
   154c8:	bl	11590 <gettext@plt>
   154cc:	movw	r1, #1
   154d0:	str	r0, [sp, #52]	; 0x34
   154d4:	mov	r0, r1
   154d8:	ldr	r1, [sp, #56]	; 0x38
   154dc:	movw	r2, #14290	; 0x37d2
   154e0:	movt	r2, #2
   154e4:	ldr	r3, [sp, #52]	; 0x34
   154e8:	bl	1150c <error@plt>
   154ec:	b	15588 <__assert_fail@plt+0x3e54>
   154f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   154f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154f8:	ldr	r2, [fp, #-16]
   154fc:	ldr	r3, [fp, #-12]
   15500:	eor	r1, r1, r3
   15504:	eor	r0, r0, r2
   15508:	orr	r0, r0, r1
   1550c:	cmp	r0, #0
   15510:	bne	15584 <__assert_fail@plt+0x3e50>
   15514:	b	15518 <__assert_fail@plt+0x3de4>
   15518:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1551c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15520:	movw	r2, #17252	; 0x4364
   15524:	movt	r2, #3
   15528:	ldr	r3, [r2]
   1552c:	movw	r2, #1
   15530:	bl	1144c <fwrite_unlocked@plt>
   15534:	cmp	r0, #1
   15538:	beq	15584 <__assert_fail@plt+0x3e50>
   1553c:	movw	r0, #17252	; 0x4364
   15540:	movt	r0, #3
   15544:	ldr	r0, [r0]
   15548:	bl	116c8 <clearerr_unlocked@plt>
   1554c:	bl	115f0 <__errno_location@plt>
   15550:	ldr	r1, [r0]
   15554:	movw	r0, #14170	; 0x375a
   15558:	movt	r0, #2
   1555c:	str	r1, [sp, #48]	; 0x30
   15560:	bl	11590 <gettext@plt>
   15564:	movw	r1, #1
   15568:	str	r0, [sp, #44]	; 0x2c
   1556c:	mov	r0, r1
   15570:	ldr	r1, [sp, #48]	; 0x30
   15574:	movw	r2, #14290	; 0x37d2
   15578:	movt	r2, #2
   1557c:	ldr	r3, [sp, #44]	; 0x2c
   15580:	bl	1150c <error@plt>
   15584:	b	15588 <__assert_fail@plt+0x3e54>
   15588:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1558c:	tst	r0, #1
   15590:	beq	155fc <__assert_fail@plt+0x3ec8>
   15594:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15598:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1559c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   155a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   155a4:	eor	r1, r1, r3
   155a8:	eor	r0, r0, r2
   155ac:	orr	r0, r0, r1
   155b0:	cmp	r0, #0
   155b4:	bne	155d0 <__assert_fail@plt+0x3e9c>
   155b8:	b	155bc <__assert_fail@plt+0x3e88>
   155bc:	mov	r0, #0
   155c0:	mov	r1, #1
   155c4:	str	r1, [sp, #40]	; 0x28
   155c8:	str	r0, [sp, #36]	; 0x24
   155cc:	b	155ec <__assert_fail@plt+0x3eb8>
   155d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155d8:	adds	r0, r0, #1
   155dc:	adc	r1, r1, #0
   155e0:	str	r0, [sp, #40]	; 0x28
   155e4:	str	r1, [sp, #36]	; 0x24
   155e8:	b	155ec <__assert_fail@plt+0x3eb8>
   155ec:	ldr	r0, [sp, #36]	; 0x24
   155f0:	ldr	r1, [sp, #40]	; 0x28
   155f4:	str	r1, [fp, #-48]	; 0xffffffd0
   155f8:	str	r0, [fp, #-44]	; 0xffffffd4
   155fc:	b	15878 <__assert_fail@plt+0x4144>
   15600:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15604:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1560c:	bl	16c40 <__assert_fail@plt+0x550c>
   15610:	and	r0, r0, #1
   15614:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   15618:	and	r1, r1, #1
   1561c:	orr	r0, r1, r0
   15620:	cmp	r0, #0
   15624:	movw	r0, #0
   15628:	movne	r0, #1
   1562c:	and	r0, r0, #1
   15630:	strb	r0, [fp, #-27]	; 0xffffffe5
   15634:	movw	r0, #17280	; 0x4380
   15638:	movt	r0, #3
   1563c:	ldrb	r0, [r0]
   15640:	tst	r0, #1
   15644:	beq	156d4 <__assert_fail@plt+0x3fa0>
   15648:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1564c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15650:	add	r0, r0, r1, lsl #4
   15654:	ldr	r0, [r0, #4]
   15658:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1565c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15660:	bl	17630 <__assert_fail@plt+0x5efc>
   15664:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15668:	cmp	r0, r1
   1566c:	beq	156d0 <__assert_fail@plt+0x3f9c>
   15670:	bl	115f0 <__errno_location@plt>
   15674:	ldr	r0, [r0]
   15678:	bl	16bf4 <__assert_fail@plt+0x54c0>
   1567c:	tst	r0, #1
   15680:	bne	156d0 <__assert_fail@plt+0x3f9c>
   15684:	bl	115f0 <__errno_location@plt>
   15688:	ldr	r1, [r0]
   1568c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15690:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15694:	add	r0, r0, r2, lsl #4
   15698:	ldr	r2, [r0]
   1569c:	movw	r0, #0
   156a0:	movw	r3, #3
   156a4:	str	r1, [sp, #32]
   156a8:	mov	r1, r3
   156ac:	bl	19c2c <__assert_fail@plt+0x84f8>
   156b0:	movw	r1, #1
   156b4:	str	r0, [sp, #28]
   156b8:	mov	r0, r1
   156bc:	ldr	r1, [sp, #32]
   156c0:	movw	r2, #14290	; 0x37d2
   156c4:	movt	r2, #2
   156c8:	ldr	r3, [sp, #28]
   156cc:	bl	1150c <error@plt>
   156d0:	b	15760 <__assert_fail@plt+0x402c>
   156d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   156d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   156dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   156e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   156e4:	add	r2, r2, r3, lsl #4
   156e8:	ldr	r3, [r2, #8]
   156ec:	movw	r2, #1
   156f0:	bl	1144c <fwrite_unlocked@plt>
   156f4:	cmp	r0, #1
   156f8:	beq	1575c <__assert_fail@plt+0x4028>
   156fc:	bl	115f0 <__errno_location@plt>
   15700:	ldr	r0, [r0]
   15704:	bl	16bf4 <__assert_fail@plt+0x54c0>
   15708:	tst	r0, #1
   1570c:	bne	1575c <__assert_fail@plt+0x4028>
   15710:	bl	115f0 <__errno_location@plt>
   15714:	ldr	r1, [r0]
   15718:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1571c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15720:	add	r0, r0, r2, lsl #4
   15724:	ldr	r2, [r0]
   15728:	movw	r0, #0
   1572c:	movw	r3, #3
   15730:	str	r1, [sp, #24]
   15734:	mov	r1, r3
   15738:	bl	19c2c <__assert_fail@plt+0x84f8>
   1573c:	movw	r1, #1
   15740:	str	r0, [sp, #20]
   15744:	mov	r0, r1
   15748:	ldr	r1, [sp, #24]
   1574c:	movw	r2, #14290	; 0x37d2
   15750:	movt	r2, #2
   15754:	ldr	r3, [sp, #20]
   15758:	bl	1150c <error@plt>
   1575c:	b	15760 <__assert_fail@plt+0x402c>
   15760:	bl	115f0 <__errno_location@plt>
   15764:	ldr	r0, [r0]
   15768:	bl	16bf4 <__assert_fail@plt+0x54c0>
   1576c:	tst	r0, #1
   15770:	bne	1577c <__assert_fail@plt+0x4048>
   15774:	movw	r0, #1
   15778:	strb	r0, [fp, #-26]	; 0xffffffe6
   1577c:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   15780:	tst	r0, #1
   15784:	beq	15818 <__assert_fail@plt+0x40e4>
   15788:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1578c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15790:	add	r0, r0, r1, lsl #4
   15794:	ldr	r0, [r0, #8]
   15798:	bl	17228 <__assert_fail@plt+0x5af4>
   1579c:	cmp	r0, #0
   157a0:	beq	157f0 <__assert_fail@plt+0x40bc>
   157a4:	bl	115f0 <__errno_location@plt>
   157a8:	ldr	r1, [r0]
   157ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   157b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   157b4:	add	r0, r0, r2, lsl #4
   157b8:	ldr	r2, [r0]
   157bc:	movw	r0, #0
   157c0:	movw	r3, #3
   157c4:	str	r1, [sp, #16]
   157c8:	mov	r1, r3
   157cc:	bl	19c2c <__assert_fail@plt+0x84f8>
   157d0:	movw	r1, #1
   157d4:	str	r0, [sp, #12]
   157d8:	mov	r0, r1
   157dc:	ldr	r1, [sp, #16]
   157e0:	movw	r2, #14290	; 0x37d2
   157e4:	movt	r2, #2
   157e8:	ldr	r3, [sp, #12]
   157ec:	bl	1150c <error@plt>
   157f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   157f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   157f8:	add	r0, r0, r1, lsl #4
   157fc:	mov	r1, #0
   15800:	str	r1, [r0, #8]
   15804:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15808:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1580c:	add	r0, r0, r1, lsl #4
   15810:	mvn	r1, #1
   15814:	str	r1, [r0, #4]
   15818:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1581c:	tst	r0, #1
   15820:	beq	15874 <__assert_fail@plt+0x4140>
   15824:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15828:	add	r0, r0, #1
   1582c:	str	r0, [fp, #-32]	; 0xffffffe0
   15830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15834:	ldr	r2, [fp, #-20]	; 0xffffffec
   15838:	eor	r0, r0, r1
   1583c:	orr	r0, r0, r2
   15840:	cmp	r0, #0
   15844:	bne	15874 <__assert_fail@plt+0x4140>
   15848:	b	1584c <__assert_fail@plt+0x4118>
   1584c:	movw	r0, #1
   15850:	strb	r0, [fp, #-25]	; 0xffffffe7
   15854:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   15858:	tst	r0, #1
   1585c:	bne	15864 <__assert_fail@plt+0x4130>
   15860:	b	1588c <__assert_fail@plt+0x4158>
   15864:	movw	r0, #0
   15868:	strb	r0, [fp, #-26]	; 0xffffffe6
   1586c:	movw	r0, #0
   15870:	str	r0, [fp, #-32]	; 0xffffffe0
   15874:	b	15878 <__assert_fail@plt+0x4144>
   15878:	ldr	r0, [sp, #72]	; 0x48
   1587c:	str	r0, [fp, #-52]	; 0xffffffcc
   15880:	b	153c8 <__assert_fail@plt+0x3c94>
   15884:	b	15334 <__assert_fail@plt+0x3c00>
   15888:	b	1588c <__assert_fail@plt+0x4158>
   1588c:	ldr	r0, [fp, #-16]
   15890:	ldr	r1, [fp, #-12]
   15894:	orr	r0, r0, r1
   15898:	cmp	r0, #0
   1589c:	bne	159d0 <__assert_fail@plt+0x429c>
   158a0:	b	158a4 <__assert_fail@plt+0x4170>
   158a4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   158a8:	tst	r0, #1
   158ac:	beq	158c4 <__assert_fail@plt+0x4190>
   158b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   158b8:	str	r0, [sp, #8]
   158bc:	str	r1, [sp, #4]
   158c0:	b	158d8 <__assert_fail@plt+0x41a4>
   158c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158c8:	mov	r1, #0
   158cc:	str	r0, [sp, #8]
   158d0:	str	r1, [sp, #4]
   158d4:	b	158d8 <__assert_fail@plt+0x41a4>
   158d8:	ldr	r0, [sp, #4]
   158dc:	ldr	r1, [sp, #8]
   158e0:	str	r1, [sp, #68]	; 0x44
   158e4:	movw	r1, #0
   158e8:	str	r1, [fp, #-32]	; 0xffffffe0
   158ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   158f8:	subs	r0, r0, r1
   158fc:	rscs	r1, r2, #0
   15900:	bcs	159cc <__assert_fail@plt+0x4298>
   15904:	b	15908 <__assert_fail@plt+0x41d4>
   15908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1590c:	ldr	r1, [sp, #68]	; 0x44
   15910:	cmp	r0, r1
   15914:	bcc	15960 <__assert_fail@plt+0x422c>
   15918:	movw	r0, #17288	; 0x4388
   1591c:	movt	r0, #3
   15920:	ldrb	r0, [r0]
   15924:	tst	r0, #1
   15928:	bne	15960 <__assert_fail@plt+0x422c>
   1592c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15930:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15934:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15938:	bl	16c40 <__assert_fail@plt+0x550c>
   1593c:	and	r0, r0, #1
   15940:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   15944:	and	r1, r1, #1
   15948:	orr	r0, r1, r0
   1594c:	cmp	r0, #0
   15950:	movw	r0, #0
   15954:	movne	r0, #1
   15958:	and	r0, r0, #1
   1595c:	strb	r0, [fp, #-27]	; 0xffffffe5
   15960:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15964:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15968:	add	r0, r0, r1, lsl #4
   1596c:	ldr	r0, [r0, #4]
   15970:	cmp	r0, #0
   15974:	blt	159a8 <__assert_fail@plt+0x4274>
   15978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1597c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15980:	add	r0, r0, r1, lsl #4
   15984:	ldr	r1, [r0, #4]
   15988:	ldr	r2, [r0, #8]
   1598c:	ldr	r3, [r0, #12]
   15990:	ldr	r0, [r0]
   15994:	str	r0, [sp]
   15998:	mov	r0, r2
   1599c:	mov	r2, r3
   159a0:	ldr	r3, [sp]
   159a4:	bl	159d8 <__assert_fail@plt+0x42a4>
   159a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   159ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   159b0:	add	r0, r0, r1, lsl #4
   159b4:	mvn	r1, #1
   159b8:	str	r1, [r0, #4]
   159bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159c0:	add	r0, r0, #1
   159c4:	str	r0, [fp, #-32]	; 0xffffffe0
   159c8:	b	158ec <__assert_fail@plt+0x41b8>
   159cc:	b	159d0 <__assert_fail@plt+0x429c>
   159d0:	sub	sp, fp, #8
   159d4:	pop	{r4, sl, fp, pc}
   159d8:	push	{r4, sl, fp, lr}
   159dc:	add	fp, sp, #8
   159e0:	sub	sp, sp, #136	; 0x88
   159e4:	str	r0, [fp, #-12]
   159e8:	str	r1, [fp, #-16]
   159ec:	str	r2, [fp, #-20]	; 0xffffffec
   159f0:	str	r3, [fp, #-24]	; 0xffffffe8
   159f4:	ldr	r0, [fp, #-12]
   159f8:	movw	r1, #0
   159fc:	cmp	r0, r1
   15a00:	beq	15a68 <__assert_fail@plt+0x4334>
   15a04:	ldr	r0, [fp, #-12]
   15a08:	bl	17228 <__assert_fail@plt+0x5af4>
   15a0c:	cmp	r0, #0
   15a10:	beq	15a68 <__assert_fail@plt+0x4334>
   15a14:	bl	115f0 <__errno_location@plt>
   15a18:	ldr	r0, [r0]
   15a1c:	bl	16bf4 <__assert_fail@plt+0x54c0>
   15a20:	tst	r0, #1
   15a24:	bne	15a68 <__assert_fail@plt+0x4334>
   15a28:	bl	115f0 <__errno_location@plt>
   15a2c:	ldr	r1, [r0]
   15a30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a34:	movw	r0, #0
   15a38:	movw	r3, #3
   15a3c:	str	r1, [fp, #-64]	; 0xffffffc0
   15a40:	mov	r1, r3
   15a44:	bl	19c2c <__assert_fail@plt+0x84f8>
   15a48:	movw	r1, #1
   15a4c:	str	r0, [fp, #-68]	; 0xffffffbc
   15a50:	mov	r0, r1
   15a54:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15a58:	movw	r2, #14290	; 0x37d2
   15a5c:	movt	r2, #2
   15a60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a64:	bl	1150c <error@plt>
   15a68:	ldr	r0, [fp, #-16]
   15a6c:	cmp	r0, #0
   15a70:	blt	15b68 <__assert_fail@plt+0x4434>
   15a74:	ldr	r0, [fp, #-12]
   15a78:	movw	r1, #0
   15a7c:	cmp	r0, r1
   15a80:	bne	15ad4 <__assert_fail@plt+0x43a0>
   15a84:	ldr	r0, [fp, #-16]
   15a88:	bl	1171c <close@plt>
   15a8c:	cmp	r0, #0
   15a90:	bge	15ad4 <__assert_fail@plt+0x43a0>
   15a94:	bl	115f0 <__errno_location@plt>
   15a98:	ldr	r1, [r0]
   15a9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15aa0:	movw	r0, #0
   15aa4:	movw	r3, #3
   15aa8:	str	r1, [sp, #72]	; 0x48
   15aac:	mov	r1, r3
   15ab0:	bl	19c2c <__assert_fail@plt+0x84f8>
   15ab4:	movw	r1, #1
   15ab8:	str	r0, [sp, #68]	; 0x44
   15abc:	mov	r0, r1
   15ac0:	ldr	r1, [sp, #72]	; 0x48
   15ac4:	movw	r2, #14290	; 0x37d2
   15ac8:	movt	r2, #2
   15acc:	ldr	r3, [sp, #68]	; 0x44
   15ad0:	bl	1150c <error@plt>
   15ad4:	movw	r0, #0
   15ad8:	str	r0, [fp, #-28]	; 0xffffffe4
   15adc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ae0:	movw	r1, #17692	; 0x451c
   15ae4:	movt	r1, #3
   15ae8:	ldr	r1, [r1]
   15aec:	cmp	r0, r1
   15af0:	bcs	15b64 <__assert_fail@plt+0x4430>
   15af4:	movw	r0, #17696	; 0x4520
   15af8:	movt	r0, #3
   15afc:	ldr	r0, [r0]
   15b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b04:	add	r0, r0, r1, lsl #2
   15b08:	ldr	r0, [r0]
   15b0c:	ldr	r1, [fp, #-16]
   15b10:	cmp	r0, r1
   15b14:	bne	15b50 <__assert_fail@plt+0x441c>
   15b18:	movw	r0, #17696	; 0x4520
   15b1c:	movt	r0, #3
   15b20:	ldr	r1, [r0]
   15b24:	movw	r2, #17692	; 0x451c
   15b28:	movt	r2, #3
   15b2c:	ldr	r3, [r2]
   15b30:	sub	r3, r3, #1
   15b34:	str	r3, [r2]
   15b38:	ldr	r1, [r1, r3, lsl #2]
   15b3c:	ldr	r0, [r0]
   15b40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15b44:	add	r0, r0, r2, lsl #2
   15b48:	str	r1, [r0]
   15b4c:	b	15b64 <__assert_fail@plt+0x4430>
   15b50:	b	15b54 <__assert_fail@plt+0x4420>
   15b54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15b58:	add	r0, r0, #1
   15b5c:	str	r0, [fp, #-28]	; 0xffffffe4
   15b60:	b	15adc <__assert_fail@plt+0x43a8>
   15b64:	b	15b68 <__assert_fail@plt+0x4434>
   15b68:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b6c:	cmp	r0, #0
   15b70:	ble	15d9c <__assert_fail@plt+0x4668>
   15b74:	movw	r0, #0
   15b78:	str	r0, [fp, #-32]	; 0xffffffe0
   15b7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b80:	str	r0, [sp, #64]	; 0x40
   15b84:	mov	r0, r1
   15b88:	sub	r1, fp, #32
   15b8c:	ldr	r2, [sp, #64]	; 0x40
   15b90:	bl	114c4 <waitpid@plt>
   15b94:	cmn	r0, #1
   15b98:	bne	15bdc <__assert_fail@plt+0x44a8>
   15b9c:	bl	115f0 <__errno_location@plt>
   15ba0:	ldr	r0, [r0]
   15ba4:	cmp	r0, #10
   15ba8:	beq	15bdc <__assert_fail@plt+0x44a8>
   15bac:	bl	115f0 <__errno_location@plt>
   15bb0:	ldr	r1, [r0]
   15bb4:	movw	r0, #14184	; 0x3768
   15bb8:	movt	r0, #2
   15bbc:	str	r1, [sp, #60]	; 0x3c
   15bc0:	bl	11590 <gettext@plt>
   15bc4:	movw	r1, #1
   15bc8:	str	r0, [sp, #56]	; 0x38
   15bcc:	mov	r0, r1
   15bd0:	ldr	r1, [sp, #60]	; 0x3c
   15bd4:	ldr	r2, [sp, #56]	; 0x38
   15bd8:	bl	1150c <error@plt>
   15bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15be0:	and	r0, r0, #127	; 0x7f
   15be4:	add	r0, r0, #1
   15be8:	sxtb	r0, r0
   15bec:	asr	r0, r0, #1
   15bf0:	cmp	r0, #0
   15bf4:	ble	15cbc <__assert_fail@plt+0x4588>
   15bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bfc:	and	r0, r0, #127	; 0x7f
   15c00:	str	r0, [fp, #-36]	; 0xffffffdc
   15c04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c08:	cmp	r0, #13
   15c0c:	beq	15cb8 <__assert_fail@plt+0x4584>
   15c10:	sub	r1, fp, #55	; 0x37
   15c14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c18:	bl	1a380 <__assert_fail@plt+0x8c4c>
   15c1c:	cmp	r0, #0
   15c20:	beq	15c38 <__assert_fail@plt+0x4504>
   15c24:	sub	r0, fp, #55	; 0x37
   15c28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15c2c:	movw	r1, #14210	; 0x3782
   15c30:	movt	r1, #2
   15c34:	bl	116bc <sprintf@plt>
   15c38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c3c:	add	r0, r0, #128	; 0x80
   15c40:	movw	r1, #14213	; 0x3785
   15c44:	movt	r1, #2
   15c48:	str	r0, [sp, #52]	; 0x34
   15c4c:	mov	r0, r1
   15c50:	bl	11590 <gettext@plt>
   15c54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c58:	movw	r1, #0
   15c5c:	str	r0, [sp, #48]	; 0x30
   15c60:	mov	r0, r1
   15c64:	movw	r1, #3
   15c68:	bl	19c2c <__assert_fail@plt+0x84f8>
   15c6c:	sub	r1, fp, #55	; 0x37
   15c70:	movw	r2, #17292	; 0x438c
   15c74:	movt	r2, #3
   15c78:	ldr	r2, [r2]
   15c7c:	ldr	r3, [sp, #52]	; 0x34
   15c80:	str	r0, [sp, #44]	; 0x2c
   15c84:	mov	r0, r3
   15c88:	movw	ip, #0
   15c8c:	str	r1, [sp, #40]	; 0x28
   15c90:	mov	r1, ip
   15c94:	ldr	ip, [sp, #48]	; 0x30
   15c98:	str	r2, [sp, #36]	; 0x24
   15c9c:	mov	r2, ip
   15ca0:	ldr	r3, [sp, #44]	; 0x2c
   15ca4:	ldr	lr, [sp, #40]	; 0x28
   15ca8:	str	lr, [sp]
   15cac:	ldr	r4, [sp, #36]	; 0x24
   15cb0:	str	r4, [sp, #4]
   15cb4:	bl	1150c <error@plt>
   15cb8:	b	15d98 <__assert_fail@plt+0x4664>
   15cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cc0:	and	r0, r0, #127	; 0x7f
   15cc4:	cmp	r0, #0
   15cc8:	bne	15d68 <__assert_fail@plt+0x4634>
   15ccc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cd0:	and	r0, r0, #65280	; 0xff00
   15cd4:	asr	r0, r0, #8
   15cd8:	str	r0, [fp, #-60]	; 0xffffffc4
   15cdc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15ce0:	cmp	r0, #0
   15ce4:	beq	15d64 <__assert_fail@plt+0x4630>
   15ce8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15cec:	movw	r1, #14254	; 0x37ae
   15cf0:	movt	r1, #2
   15cf4:	str	r0, [sp, #32]
   15cf8:	mov	r0, r1
   15cfc:	bl	11590 <gettext@plt>
   15d00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d04:	movw	r1, #0
   15d08:	str	r0, [sp, #28]
   15d0c:	mov	r0, r1
   15d10:	movw	r1, #3
   15d14:	bl	19c2c <__assert_fail@plt+0x84f8>
   15d18:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15d1c:	movw	r2, #17292	; 0x438c
   15d20:	movt	r2, #3
   15d24:	ldr	r2, [r2]
   15d28:	ldr	r3, [sp, #32]
   15d2c:	str	r0, [sp, #24]
   15d30:	mov	r0, r3
   15d34:	movw	ip, #0
   15d38:	str	r1, [sp, #20]
   15d3c:	mov	r1, ip
   15d40:	ldr	ip, [sp, #28]
   15d44:	str	r2, [sp, #16]
   15d48:	mov	r2, ip
   15d4c:	ldr	r3, [sp, #24]
   15d50:	ldr	lr, [sp, #20]
   15d54:	str	lr, [sp]
   15d58:	ldr	r4, [sp, #16]
   15d5c:	str	r4, [sp, #4]
   15d60:	bl	1150c <error@plt>
   15d64:	b	15d94 <__assert_fail@plt+0x4660>
   15d68:	movw	r0, #14293	; 0x37d5
   15d6c:	movt	r0, #2
   15d70:	bl	11590 <gettext@plt>
   15d74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15d78:	add	r3, r1, #0
   15d7c:	movw	r1, #1
   15d80:	str	r0, [sp, #12]
   15d84:	mov	r0, r1
   15d88:	movw	r1, #0
   15d8c:	ldr	r2, [sp, #12]
   15d90:	bl	1150c <error@plt>
   15d94:	b	15d98 <__assert_fail@plt+0x4664>
   15d98:	b	15d9c <__assert_fail@plt+0x4668>
   15d9c:	sub	sp, fp, #8
   15da0:	pop	{r4, sl, fp, pc}
   15da4:	sub	sp, sp, #8
   15da8:	str	r0, [sp, #4]
   15dac:	ldr	r0, [sp, #4]
   15db0:	ldr	r0, [r0, #16]
   15db4:	and	r0, r0, #61440	; 0xf000
   15db8:	cmp	r0, #32768	; 0x8000
   15dbc:	movw	r0, #1
   15dc0:	str	r0, [sp]
   15dc4:	beq	15e14 <__assert_fail@plt+0x46e0>
   15dc8:	ldr	r0, [sp, #4]
   15dcc:	ldr	r0, [r0, #16]
   15dd0:	and	r0, r0, #61440	; 0xf000
   15dd4:	cmp	r0, #40960	; 0xa000
   15dd8:	movw	r0, #1
   15ddc:	str	r0, [sp]
   15de0:	beq	15e14 <__assert_fail@plt+0x46e0>
   15de4:	ldr	r0, [sp, #4]
   15de8:	ldr	r0, [r0, #16]
   15dec:	ldr	r1, [sp, #4]
   15df0:	ldr	r1, [r1, #16]
   15df4:	sub	r0, r0, r1
   15df8:	cmp	r0, #0
   15dfc:	movw	r0, #1
   15e00:	str	r0, [sp]
   15e04:	bne	15e14 <__assert_fail@plt+0x46e0>
   15e08:	movw	r0, #0
   15e0c:	str	r0, [sp]
   15e10:	b	15e14 <__assert_fail@plt+0x46e0>
   15e14:	ldr	r0, [sp]
   15e18:	and	r0, r0, #1
   15e1c:	add	sp, sp, #8
   15e20:	bx	lr
   15e24:	push	{fp, lr}
   15e28:	mov	fp, sp
   15e2c:	sub	sp, sp, #32
   15e30:	and	r0, r0, #1
   15e34:	strb	r0, [fp, #-2]
   15e38:	str	r1, [fp, #-8]
   15e3c:	str	r2, [fp, #-12]
   15e40:	ldrb	r0, [fp, #-2]
   15e44:	tst	r0, #1
   15e48:	beq	15f30 <__assert_fail@plt+0x47fc>
   15e4c:	ldr	r0, [fp, #-8]
   15e50:	movw	r1, #0
   15e54:	cmp	r0, r1
   15e58:	bne	15e8c <__assert_fail@plt+0x4758>
   15e5c:	ldr	r0, [fp, #-12]
   15e60:	cmp	r0, #0
   15e64:	bne	15e8c <__assert_fail@plt+0x4758>
   15e68:	movw	r0, #17288	; 0x4388
   15e6c:	movt	r0, #3
   15e70:	ldrb	r0, [r0]
   15e74:	tst	r0, #1
   15e78:	beq	15e8c <__assert_fail@plt+0x4758>
   15e7c:	movw	r0, #1
   15e80:	and	r0, r0, #1
   15e84:	strb	r0, [fp, #-1]
   15e88:	b	15fcc <__assert_fail@plt+0x4898>
   15e8c:	movw	r0, #16732	; 0x415c
   15e90:	movt	r0, #3
   15e94:	ldr	r1, [r0]
   15e98:	movw	r0, #17664	; 0x4500
   15e9c:	movt	r0, #3
   15ea0:	ldr	r2, [r0]
   15ea4:	movw	r0, #17668	; 0x4504
   15ea8:	movt	r0, #3
   15eac:	ldr	r3, [r0]
   15eb0:	movw	r0, #0
   15eb4:	bl	159d8 <__assert_fail@plt+0x42a4>
   15eb8:	bl	15fdc <__assert_fail@plt+0x48a8>
   15ebc:	movw	r0, #17668	; 0x4504
   15ec0:	movt	r0, #3
   15ec4:	ldr	r0, [r0]
   15ec8:	bl	16560 <__assert_fail@plt+0x4e2c>
   15ecc:	movw	r1, #16732	; 0x415c
   15ed0:	movt	r1, #3
   15ed4:	str	r0, [r1]
   15ed8:	ldr	r0, [r1]
   15edc:	cmp	r0, #0
   15ee0:	bge	15f2c <__assert_fail@plt+0x47f8>
   15ee4:	bl	115f0 <__errno_location@plt>
   15ee8:	ldr	r1, [r0]
   15eec:	movw	r0, #17668	; 0x4504
   15ef0:	movt	r0, #3
   15ef4:	ldr	r2, [r0]
   15ef8:	movw	r0, #0
   15efc:	movw	r3, #3
   15f00:	str	r1, [sp, #16]
   15f04:	mov	r1, r3
   15f08:	bl	19c2c <__assert_fail@plt+0x84f8>
   15f0c:	movw	r1, #1
   15f10:	str	r0, [sp, #12]
   15f14:	mov	r0, r1
   15f18:	ldr	r1, [sp, #16]
   15f1c:	movw	r2, #14290	; 0x37d2
   15f20:	movt	r2, #2
   15f24:	ldr	r3, [sp, #12]
   15f28:	bl	1150c <error@plt>
   15f2c:	b	15f30 <__assert_fail@plt+0x47fc>
   15f30:	movw	r0, #16732	; 0x415c
   15f34:	movt	r0, #3
   15f38:	ldr	r0, [r0]
   15f3c:	ldr	r1, [fp, #-8]
   15f40:	ldr	r2, [fp, #-12]
   15f44:	bl	17630 <__assert_fail@plt+0x5efc>
   15f48:	ldr	r1, [fp, #-12]
   15f4c:	cmp	r0, r1
   15f50:	bne	15f64 <__assert_fail@plt+0x4830>
   15f54:	movw	r0, #1
   15f58:	and	r0, r0, #1
   15f5c:	strb	r0, [fp, #-1]
   15f60:	b	15fcc <__assert_fail@plt+0x4898>
   15f64:	bl	115f0 <__errno_location@plt>
   15f68:	ldr	r0, [r0]
   15f6c:	bl	16bf4 <__assert_fail@plt+0x54c0>
   15f70:	tst	r0, #1
   15f74:	bne	15fc0 <__assert_fail@plt+0x488c>
   15f78:	bl	115f0 <__errno_location@plt>
   15f7c:	ldr	r1, [r0]
   15f80:	movw	r0, #17668	; 0x4504
   15f84:	movt	r0, #3
   15f88:	ldr	r2, [r0]
   15f8c:	movw	r0, #0
   15f90:	movw	r3, #3
   15f94:	str	r1, [sp, #8]
   15f98:	mov	r1, r3
   15f9c:	bl	19c2c <__assert_fail@plt+0x84f8>
   15fa0:	movw	r1, #1
   15fa4:	str	r0, [sp, #4]
   15fa8:	mov	r0, r1
   15fac:	ldr	r1, [sp, #8]
   15fb0:	movw	r2, #14290	; 0x37d2
   15fb4:	movt	r2, #2
   15fb8:	ldr	r3, [sp, #4]
   15fbc:	bl	1150c <error@plt>
   15fc0:	movw	r0, #0
   15fc4:	and	r0, r0, #1
   15fc8:	strb	r0, [fp, #-1]
   15fcc:	ldrb	r0, [fp, #-1]
   15fd0:	and	r0, r0, #1
   15fd4:	mov	sp, fp
   15fd8:	pop	{fp, pc}
   15fdc:	push	{fp, lr}
   15fe0:	mov	fp, sp
   15fe4:	sub	sp, sp, #32
   15fe8:	movw	r0, #17668	; 0x4504
   15fec:	movt	r0, #3
   15ff0:	ldr	r0, [r0]
   15ff4:	movw	r1, #0
   15ff8:	cmp	r0, r1
   15ffc:	bne	163e0 <__assert_fail@plt+0x4cac>
   16000:	b	16004 <__assert_fail@plt+0x48d0>
   16004:	movw	r0, #17680	; 0x4510
   16008:	movt	r0, #3
   1600c:	ldr	r0, [r0]
   16010:	cmp	r0, #0
   16014:	movw	r0, #0
   16018:	movne	r0, #1
   1601c:	mvn	r1, #0
   16020:	eor	r0, r0, r1
   16024:	eor	r0, r0, r1
   16028:	and	r0, r0, #1
   1602c:	strb	r0, [fp, #-1]
   16030:	ldrb	r0, [fp, #-1]
   16034:	tst	r0, #1
   16038:	bne	160d8 <__assert_fail@plt+0x49a4>
   1603c:	movw	r0, #17268	; 0x4374
   16040:	movt	r0, #3
   16044:	ldr	r0, [r0]
   16048:	bl	1159c <strlen@plt>
   1604c:	movw	r1, #17676	; 0x450c
   16050:	movt	r1, #3
   16054:	str	r0, [r1]
   16058:	movw	r0, #17276	; 0x437c
   1605c:	movt	r0, #3
   16060:	ldr	r0, [r0]
   16064:	movw	r1, #0
   16068:	cmp	r0, r1
   1606c:	beq	16088 <__assert_fail@plt+0x4954>
   16070:	movw	r0, #17276	; 0x437c
   16074:	movt	r0, #3
   16078:	ldr	r0, [r0]
   1607c:	bl	1159c <strlen@plt>
   16080:	str	r0, [sp, #12]
   16084:	b	16094 <__assert_fail@plt+0x4960>
   16088:	movw	r0, #0
   1608c:	str	r0, [sp, #12]
   16090:	b	16094 <__assert_fail@plt+0x4960>
   16094:	ldr	r0, [sp, #12]
   16098:	movw	r1, #17684	; 0x4514
   1609c:	movt	r1, #3
   160a0:	str	r0, [r1]
   160a4:	movw	r0, #17676	; 0x450c
   160a8:	movt	r0, #3
   160ac:	ldr	r0, [r0]
   160b0:	movw	r2, #17272	; 0x4378
   160b4:	movt	r2, #3
   160b8:	ldr	r2, [r2]
   160bc:	add	r0, r0, r2
   160c0:	ldr	r1, [r1]
   160c4:	add	r0, r0, r1
   160c8:	movw	r1, #17680	; 0x4510
   160cc:	movt	r1, #3
   160d0:	str	r0, [r1]
   160d4:	b	16100 <__assert_fail@plt+0x49cc>
   160d8:	movw	r0, #17680	; 0x4510
   160dc:	movt	r0, #3
   160e0:	ldr	r1, [r0]
   160e4:	add	r1, r1, #2
   160e8:	str	r1, [r0]
   160ec:	movw	r0, #17272	; 0x4378
   160f0:	movt	r0, #3
   160f4:	ldr	r1, [r0]
   160f8:	add	r1, r1, #1
   160fc:	str	r1, [r0]
   16100:	movw	r0, #17680	; 0x4510
   16104:	movt	r0, #3
   16108:	ldr	r0, [r0]
   1610c:	add	r0, r0, #1
   16110:	movw	r1, #17676	; 0x450c
   16114:	movt	r1, #3
   16118:	ldr	r1, [r1]
   1611c:	cmp	r0, r1
   16120:	bcs	16128 <__assert_fail@plt+0x49f4>
   16124:	bl	1dbb4 <__assert_fail@plt+0xc480>
   16128:	movw	r0, #17668	; 0x4504
   1612c:	movt	r0, #3
   16130:	ldr	r0, [r0]
   16134:	movw	r1, #17680	; 0x4510
   16138:	movt	r1, #3
   1613c:	ldr	r1, [r1]
   16140:	add	r1, r1, #1
   16144:	bl	1af14 <__assert_fail@plt+0x97e0>
   16148:	movw	r1, #17668	; 0x4504
   1614c:	movt	r1, #3
   16150:	str	r0, [r1]
   16154:	ldrb	r0, [fp, #-1]
   16158:	tst	r0, #1
   1615c:	bne	1618c <__assert_fail@plt+0x4a58>
   16160:	movw	r0, #17668	; 0x4504
   16164:	movt	r0, #3
   16168:	ldr	r0, [r0]
   1616c:	movw	r1, #17268	; 0x4374
   16170:	movt	r1, #3
   16174:	ldr	r1, [r1]
   16178:	movw	r2, #17676	; 0x450c
   1617c:	movt	r2, #3
   16180:	ldr	r2, [r2]
   16184:	bl	11428 <memcpy@plt>
   16188:	b	161dc <__assert_fail@plt+0x4aa8>
   1618c:	movw	r0, #16728	; 0x4158
   16190:	movt	r0, #3
   16194:	ldr	r0, [r0]
   16198:	movw	r1, #17672	; 0x4508
   1619c:	movt	r1, #3
   161a0:	ldr	r1, [r1]
   161a4:	ldr	r1, [r1]
   161a8:	add	r0, r0, r1
   161ac:	ldrb	r0, [r0]
   161b0:	movw	r1, #17668	; 0x4504
   161b4:	movt	r1, #3
   161b8:	ldr	r1, [r1]
   161bc:	movw	r2, #17676	; 0x450c
   161c0:	movt	r2, #3
   161c4:	ldr	r3, [r2]
   161c8:	add	r1, r1, r3
   161cc:	strb	r0, [r1]
   161d0:	ldr	r0, [r2]
   161d4:	add	r0, r0, #1
   161d8:	str	r0, [r2]
   161dc:	movw	r0, #17668	; 0x4504
   161e0:	movt	r0, #3
   161e4:	ldr	r0, [r0]
   161e8:	movw	r1, #17676	; 0x450c
   161ec:	movt	r1, #3
   161f0:	ldr	r1, [r1]
   161f4:	add	r0, r0, r1
   161f8:	movw	r1, #17688	; 0x4518
   161fc:	movt	r1, #3
   16200:	str	r0, [r1]
   16204:	ldr	r0, [r1]
   16208:	movw	r1, #16728	; 0x4158
   1620c:	movt	r1, #3
   16210:	ldr	r1, [r1]
   16214:	ldrb	r1, [r1]
   16218:	movw	r2, #17272	; 0x4378
   1621c:	movt	r2, #3
   16220:	ldr	r2, [r2]
   16224:	and	r1, r1, #255	; 0xff
   16228:	bl	11608 <memset@plt>
   1622c:	movw	r0, #17276	; 0x437c
   16230:	movt	r0, #3
   16234:	ldr	r0, [r0]
   16238:	movw	r1, #0
   1623c:	cmp	r0, r1
   16240:	beq	1627c <__assert_fail@plt+0x4b48>
   16244:	movw	r0, #17688	; 0x4518
   16248:	movt	r0, #3
   1624c:	ldr	r0, [r0]
   16250:	movw	r1, #17272	; 0x4378
   16254:	movt	r1, #3
   16258:	ldr	r1, [r1]
   1625c:	add	r0, r0, r1
   16260:	movw	r1, #17276	; 0x437c
   16264:	movt	r1, #3
   16268:	ldr	r1, [r1]
   1626c:	movw	r2, #17684	; 0x4514
   16270:	movt	r2, #3
   16274:	ldr	r2, [r2]
   16278:	bl	11428 <memcpy@plt>
   1627c:	movw	r0, #17668	; 0x4504
   16280:	movt	r0, #3
   16284:	ldr	r0, [r0]
   16288:	movw	r1, #17680	; 0x4510
   1628c:	movt	r1, #3
   16290:	ldr	r1, [r1]
   16294:	add	r0, r0, r1
   16298:	movw	r1, #0
   1629c:	strb	r1, [r0]
   162a0:	movw	r0, #17672	; 0x4508
   162a4:	movt	r0, #3
   162a8:	ldr	r0, [r0]
   162ac:	bl	174e8 <__assert_fail@plt+0x5db4>
   162b0:	movw	r0, #17272	; 0x4378
   162b4:	movt	r0, #3
   162b8:	ldr	r0, [r0]
   162bc:	movw	r1, #4
   162c0:	bl	1da38 <__assert_fail@plt+0xc304>
   162c4:	movw	r1, #17672	; 0x4508
   162c8:	movt	r1, #3
   162cc:	str	r0, [r1]
   162d0:	movw	r0, #17284	; 0x4384
   162d4:	movt	r0, #3
   162d8:	ldr	r0, [r0]
   162dc:	movw	r1, #0
   162e0:	cmp	r0, r1
   162e4:	beq	163dc <__assert_fail@plt+0x4ca8>
   162e8:	ldrb	r0, [fp, #-1]
   162ec:	tst	r0, #1
   162f0:	bne	162f8 <__assert_fail@plt+0x4bc4>
   162f4:	b	16318 <__assert_fail@plt+0x4be4>
   162f8:	movw	r0, #13543	; 0x34e7
   162fc:	movt	r0, #2
   16300:	movw	r1, #13551	; 0x34ef
   16304:	movt	r1, #2
   16308:	movw	r2, #409	; 0x199
   1630c:	movw	r3, #13563	; 0x34fb
   16310:	movt	r3, #2
   16314:	bl	11734 <__assert_fail@plt>
   16318:	movw	r0, #17284	; 0x4384
   1631c:	movt	r0, #3
   16320:	ldr	r1, [r0]
   16324:	str	r0, [sp, #8]
   16328:	mov	r0, r1
   1632c:	bl	1159c <strlen@plt>
   16330:	str	r0, [fp, #-8]
   16334:	movw	r0, #17688	; 0x4518
   16338:	movt	r0, #3
   1633c:	ldr	r0, [r0]
   16340:	movw	r1, #17272	; 0x4378
   16344:	movt	r1, #3
   16348:	ldr	r2, [r1]
   1634c:	add	r0, r0, r2
   16350:	ldr	r2, [fp, #-8]
   16354:	sub	r0, r0, r2
   16358:	ldr	r3, [sp, #8]
   1635c:	ldr	ip, [r3]
   16360:	str	r1, [sp, #4]
   16364:	mov	r1, ip
   16368:	bl	11428 <memcpy@plt>
   1636c:	movw	r1, #17672	; 0x4508
   16370:	movt	r1, #3
   16374:	ldr	r1, [r1]
   16378:	ldr	r2, [sp, #4]
   1637c:	ldr	r3, [r2]
   16380:	add	r1, r1, r3, lsl #2
   16384:	str	r1, [fp, #-12]
   16388:	ldr	r0, [fp, #-8]
   1638c:	mvn	r1, #0
   16390:	add	r1, r0, r1
   16394:	str	r1, [fp, #-8]
   16398:	cmp	r0, #0
   1639c:	beq	163d8 <__assert_fail@plt+0x4ca4>
   163a0:	movw	r0, #17284	; 0x4384
   163a4:	movt	r0, #3
   163a8:	ldr	r0, [r0]
   163ac:	ldr	r1, [fp, #-8]
   163b0:	add	r0, r0, r1
   163b4:	ldrb	r0, [r0]
   163b8:	sub	r0, r0, #48	; 0x30
   163bc:	ldr	r1, [fp, #-12]
   163c0:	mvn	r2, #3
   163c4:	add	r3, r1, r2
   163c8:	str	r3, [fp, #-12]
   163cc:	add	r1, r1, r2
   163d0:	str	r0, [r1]
   163d4:	b	16388 <__assert_fail@plt+0x4c54>
   163d8:	b	163dc <__assert_fail@plt+0x4ca8>
   163dc:	b	16558 <__assert_fail@plt+0x4e24>
   163e0:	movw	r0, #17272	; 0x4378
   163e4:	movt	r0, #3
   163e8:	ldr	r0, [r0]
   163ec:	str	r0, [sp, #16]
   163f0:	ldr	r0, [sp, #16]
   163f4:	mvn	r1, #0
   163f8:	add	r1, r0, r1
   163fc:	str	r1, [sp, #16]
   16400:	cmp	r0, #0
   16404:	beq	16534 <__assert_fail@plt+0x4e00>
   16408:	movw	r0, #17672	; 0x4508
   1640c:	movt	r0, #3
   16410:	ldr	r0, [r0]
   16414:	ldr	r1, [sp, #16]
   16418:	add	r0, r0, r1, lsl #2
   1641c:	ldr	r1, [r0]
   16420:	add	r1, r1, #1
   16424:	str	r1, [r0]
   16428:	movw	r0, #16736	; 0x4160
   1642c:	movt	r0, #3
   16430:	ldrb	r0, [r0]
   16434:	tst	r0, #1
   16438:	beq	1647c <__assert_fail@plt+0x4d48>
   1643c:	ldr	r0, [sp, #16]
   16440:	cmp	r0, #0
   16444:	bne	1647c <__assert_fail@plt+0x4d48>
   16448:	movw	r0, #16728	; 0x4158
   1644c:	movt	r0, #3
   16450:	ldr	r0, [r0]
   16454:	movw	r1, #17672	; 0x4508
   16458:	movt	r1, #3
   1645c:	ldr	r1, [r1]
   16460:	ldr	r1, [r1]
   16464:	add	r1, r1, #1
   16468:	add	r0, r0, r1
   1646c:	ldrsb	r0, [r0]
   16470:	cmp	r0, #0
   16474:	bne	1647c <__assert_fail@plt+0x4d48>
   16478:	b	16004 <__assert_fail@plt+0x48d0>
   1647c:	movw	r0, #16728	; 0x4158
   16480:	movt	r0, #3
   16484:	ldr	r0, [r0]
   16488:	movw	r1, #17672	; 0x4508
   1648c:	movt	r1, #3
   16490:	ldr	r1, [r1]
   16494:	ldr	r2, [sp, #16]
   16498:	add	r1, r1, r2, lsl #2
   1649c:	ldr	r1, [r1]
   164a0:	add	r0, r0, r1
   164a4:	ldrb	r0, [r0]
   164a8:	movw	r1, #17688	; 0x4518
   164ac:	movt	r1, #3
   164b0:	ldr	r2, [r1]
   164b4:	ldr	r3, [sp, #16]
   164b8:	add	r2, r2, r3
   164bc:	strb	r0, [r2]
   164c0:	ldr	r0, [r1]
   164c4:	ldr	r1, [sp, #16]
   164c8:	add	r0, r0, r1
   164cc:	ldrsb	r0, [r0]
   164d0:	cmp	r0, #0
   164d4:	beq	164dc <__assert_fail@plt+0x4da8>
   164d8:	b	16558 <__assert_fail@plt+0x4e24>
   164dc:	movw	r0, #17672	; 0x4508
   164e0:	movt	r0, #3
   164e4:	ldr	r1, [r0]
   164e8:	ldr	r2, [sp, #16]
   164ec:	mov	r3, #0
   164f0:	str	r3, [r1, r2, lsl #2]
   164f4:	movw	r1, #16728	; 0x4158
   164f8:	movt	r1, #3
   164fc:	ldr	r1, [r1]
   16500:	ldr	r0, [r0]
   16504:	ldr	r2, [sp, #16]
   16508:	add	r0, r0, r2, lsl #2
   1650c:	ldr	r0, [r0]
   16510:	add	r0, r1, r0
   16514:	ldrb	r0, [r0]
   16518:	movw	r1, #17688	; 0x4518
   1651c:	movt	r1, #3
   16520:	ldr	r1, [r1]
   16524:	ldr	r2, [sp, #16]
   16528:	add	r1, r1, r2
   1652c:	strb	r0, [r1]
   16530:	b	163f0 <__assert_fail@plt+0x4cbc>
   16534:	movw	r0, #13589	; 0x3515
   16538:	movt	r0, #2
   1653c:	bl	11590 <gettext@plt>
   16540:	movw	r1, #1
   16544:	str	r0, [sp]
   16548:	mov	r0, r1
   1654c:	movw	r1, #0
   16550:	ldr	r2, [sp]
   16554:	bl	1150c <error@plt>
   16558:	mov	sp, fp
   1655c:	pop	{fp, pc}
   16560:	push	{r4, r5, fp, lr}
   16564:	add	fp, sp, #8
   16568:	sub	sp, sp, #296	; 0x128
   1656c:	str	r0, [fp, #-16]
   16570:	movw	r0, #17292	; 0x438c
   16574:	movt	r0, #3
   16578:	ldr	r0, [r0]
   1657c:	movw	r1, #0
   16580:	cmp	r0, r1
   16584:	bne	167a4 <__assert_fail@plt+0x5070>
   16588:	movw	r0, #17296	; 0x4390
   1658c:	movt	r0, #3
   16590:	ldrb	r0, [r0]
   16594:	tst	r0, #1
   16598:	beq	165e8 <__assert_fail@plt+0x4eb4>
   1659c:	movw	r0, #17252	; 0x4364
   165a0:	movt	r0, #3
   165a4:	ldr	r0, [r0]
   165a8:	movw	r1, #13620	; 0x3534
   165ac:	movt	r1, #2
   165b0:	str	r0, [sp, #152]	; 0x98
   165b4:	mov	r0, r1
   165b8:	bl	11590 <gettext@plt>
   165bc:	ldr	r1, [fp, #-16]
   165c0:	movw	r2, #4
   165c4:	str	r0, [sp, #148]	; 0x94
   165c8:	mov	r0, r2
   165cc:	bl	19ad8 <__assert_fail@plt+0x83a4>
   165d0:	ldr	r1, [sp, #152]	; 0x98
   165d4:	str	r0, [sp, #144]	; 0x90
   165d8:	mov	r0, r1
   165dc:	ldr	r1, [sp, #148]	; 0x94
   165e0:	ldr	r2, [sp, #144]	; 0x90
   165e4:	bl	115d8 <fprintf@plt>
   165e8:	ldr	r0, [fp, #-16]
   165ec:	movw	r1, #65	; 0x41
   165f0:	movw	r2, #438	; 0x1b6
   165f4:	bl	17314 <__assert_fail@plt+0x5be0>
   165f8:	str	r0, [fp, #-20]	; 0xffffffec
   165fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16600:	cmp	r0, #0
   16604:	bge	16614 <__assert_fail@plt+0x4ee0>
   16608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1660c:	str	r0, [fp, #-12]
   16610:	b	16be8 <__assert_fail@plt+0x54b4>
   16614:	ldr	r0, [fp, #-20]	; 0xffffffec
   16618:	sub	r1, fp, #128	; 0x80
   1661c:	bl	22730 <__assert_fail@plt+0x10ffc>
   16620:	cmp	r0, #0
   16624:	beq	16670 <__assert_fail@plt+0x4f3c>
   16628:	bl	115f0 <__errno_location@plt>
   1662c:	ldr	r1, [r0]
   16630:	movw	r0, #13638	; 0x3546
   16634:	movt	r0, #2
   16638:	str	r1, [sp, #140]	; 0x8c
   1663c:	bl	11590 <gettext@plt>
   16640:	ldr	r1, [fp, #-16]
   16644:	movw	r2, #4
   16648:	str	r0, [sp, #136]	; 0x88
   1664c:	mov	r0, r2
   16650:	bl	19ad8 <__assert_fail@plt+0x83a4>
   16654:	movw	r1, #1
   16658:	str	r0, [sp, #132]	; 0x84
   1665c:	mov	r0, r1
   16660:	ldr	r1, [sp, #140]	; 0x8c
   16664:	ldr	r2, [sp, #136]	; 0x88
   16668:	ldr	r3, [sp, #132]	; 0x84
   1666c:	bl	1150c <error@plt>
   16670:	movw	r0, #17304	; 0x4398
   16674:	movt	r0, #3
   16678:	ldr	r1, [r0, #96]	; 0x60
   1667c:	ldr	r0, [r0, #100]	; 0x64
   16680:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16684:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16688:	eor	r0, r0, r3
   1668c:	eor	r1, r1, r2
   16690:	orr	r0, r1, r0
   16694:	cmp	r0, #0
   16698:	bne	1670c <__assert_fail@plt+0x4fd8>
   1669c:	b	166a0 <__assert_fail@plt+0x4f6c>
   166a0:	movw	r0, #17304	; 0x4398
   166a4:	movt	r0, #3
   166a8:	ldr	r1, [r0]
   166ac:	ldr	r0, [r0, #4]
   166b0:	ldr	r2, [fp, #-128]	; 0xffffff80
   166b4:	ldr	r3, [fp, #-124]	; 0xffffff84
   166b8:	eor	r0, r0, r3
   166bc:	eor	r1, r1, r2
   166c0:	orr	r0, r1, r0
   166c4:	cmp	r0, #0
   166c8:	bne	1670c <__assert_fail@plt+0x4fd8>
   166cc:	b	166d0 <__assert_fail@plt+0x4f9c>
   166d0:	movw	r0, #13656	; 0x3558
   166d4:	movt	r0, #2
   166d8:	bl	11590 <gettext@plt>
   166dc:	ldr	r1, [fp, #-16]
   166e0:	movw	r2, #4
   166e4:	str	r0, [sp, #128]	; 0x80
   166e8:	mov	r0, r2
   166ec:	bl	19ad8 <__assert_fail@plt+0x83a4>
   166f0:	movw	r1, #1
   166f4:	str	r0, [sp, #124]	; 0x7c
   166f8:	mov	r0, r1
   166fc:	movw	r1, #0
   16700:	ldr	r2, [sp, #128]	; 0x80
   16704:	ldr	r3, [sp, #124]	; 0x7c
   16708:	bl	1150c <error@plt>
   1670c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16710:	mov	r1, #0
   16714:	mov	r2, r1
   16718:	mov	r3, r1
   1671c:	bl	11440 <ftruncate64@plt>
   16720:	cmp	r0, #0
   16724:	beq	16798 <__assert_fail@plt+0x5064>
   16728:	ldr	r0, [fp, #-112]	; 0xffffff90
   1672c:	and	r0, r0, #61440	; 0xf000
   16730:	cmp	r0, #32768	; 0x8000
   16734:	beq	1674c <__assert_fail@plt+0x5018>
   16738:	ldr	r0, [fp, #-112]	; 0xffffff90
   1673c:	ldr	r1, [fp, #-112]	; 0xffffff90
   16740:	sub	r0, r0, r1
   16744:	cmp	r0, #0
   16748:	beq	16798 <__assert_fail@plt+0x5064>
   1674c:	bl	115f0 <__errno_location@plt>
   16750:	ldr	r1, [r0]
   16754:	movw	r0, #13691	; 0x357b
   16758:	movt	r0, #2
   1675c:	str	r1, [sp, #120]	; 0x78
   16760:	bl	11590 <gettext@plt>
   16764:	ldr	r2, [fp, #-16]
   16768:	movw	r1, #0
   1676c:	str	r0, [sp, #116]	; 0x74
   16770:	mov	r0, r1
   16774:	movw	r1, #3
   16778:	bl	19c2c <__assert_fail@plt+0x84f8>
   1677c:	movw	r1, #1
   16780:	str	r0, [sp, #112]	; 0x70
   16784:	mov	r0, r1
   16788:	ldr	r1, [sp, #120]	; 0x78
   1678c:	ldr	r2, [sp, #116]	; 0x74
   16790:	ldr	r3, [sp, #112]	; 0x70
   16794:	bl	1150c <error@plt>
   16798:	ldr	r0, [fp, #-20]	; 0xffffffec
   1679c:	str	r0, [fp, #-12]
   167a0:	b	16be8 <__assert_fail@plt+0x54b4>
   167a4:	movw	r0, #13712	; 0x3590
   167a8:	movt	r0, #2
   167ac:	bl	11524 <getenv@plt>
   167b0:	str	r0, [fp, #-144]	; 0xffffff70
   167b4:	ldr	r0, [fp, #-144]	; 0xffffff70
   167b8:	movw	r1, #0
   167bc:	cmp	r0, r1
   167c0:	bne	167d0 <__assert_fail@plt+0x509c>
   167c4:	movw	r0, #13718	; 0x3596
   167c8:	movt	r0, #2
   167cc:	str	r0, [fp, #-144]	; 0xffffff70
   167d0:	ldr	r1, [fp, #-16]
   167d4:	movw	r0, #13726	; 0x359e
   167d8:	movt	r0, #2
   167dc:	movw	r2, #1
   167e0:	bl	115c0 <setenv@plt>
   167e4:	cmp	r0, #0
   167e8:	beq	1681c <__assert_fail@plt+0x50e8>
   167ec:	bl	115f0 <__errno_location@plt>
   167f0:	ldr	r1, [r0]
   167f4:	movw	r0, #13731	; 0x35a3
   167f8:	movt	r0, #2
   167fc:	str	r1, [sp, #108]	; 0x6c
   16800:	bl	11590 <gettext@plt>
   16804:	movw	r1, #1
   16808:	str	r0, [sp, #104]	; 0x68
   1680c:	mov	r0, r1
   16810:	ldr	r1, [sp, #108]	; 0x6c
   16814:	ldr	r2, [sp, #104]	; 0x68
   16818:	bl	1150c <error@plt>
   1681c:	movw	r0, #17296	; 0x4390
   16820:	movt	r0, #3
   16824:	ldrb	r0, [r0]
   16828:	tst	r0, #1
   1682c:	beq	16880 <__assert_fail@plt+0x514c>
   16830:	movw	r0, #17252	; 0x4364
   16834:	movt	r0, #3
   16838:	ldr	r0, [r0]
   1683c:	movw	r1, #13771	; 0x35cb
   16840:	movt	r1, #2
   16844:	str	r0, [sp, #100]	; 0x64
   16848:	mov	r0, r1
   1684c:	bl	11590 <gettext@plt>
   16850:	ldr	r2, [fp, #-16]
   16854:	movw	r1, #0
   16858:	str	r0, [sp, #96]	; 0x60
   1685c:	mov	r0, r1
   16860:	movw	r1, #3
   16864:	bl	19c2c <__assert_fail@plt+0x84f8>
   16868:	ldr	r1, [sp, #100]	; 0x64
   1686c:	str	r0, [sp, #92]	; 0x5c
   16870:	mov	r0, r1
   16874:	ldr	r1, [sp, #96]	; 0x60
   16878:	ldr	r2, [sp, #92]	; 0x5c
   1687c:	bl	115d8 <fprintf@plt>
   16880:	sub	r0, fp, #136	; 0x88
   16884:	bl	11650 <pipe@plt>
   16888:	cmp	r0, #0
   1688c:	beq	168c0 <__assert_fail@plt+0x518c>
   16890:	bl	115f0 <__errno_location@plt>
   16894:	ldr	r1, [r0]
   16898:	movw	r0, #13795	; 0x35e3
   1689c:	movt	r0, #2
   168a0:	str	r1, [sp, #88]	; 0x58
   168a4:	bl	11590 <gettext@plt>
   168a8:	movw	r1, #1
   168ac:	str	r0, [sp, #84]	; 0x54
   168b0:	mov	r0, r1
   168b4:	ldr	r1, [sp, #88]	; 0x58
   168b8:	ldr	r2, [sp, #84]	; 0x54
   168bc:	bl	1150c <error@plt>
   168c0:	bl	1168c <fork@plt>
   168c4:	str	r0, [fp, #-140]	; 0xffffff74
   168c8:	ldr	r0, [fp, #-140]	; 0xffffff74
   168cc:	cmp	r0, #0
   168d0:	bne	16ae0 <__assert_fail@plt+0x53ac>
   168d4:	movw	r0, #0
   168d8:	str	r0, [fp, #-148]	; 0xffffff6c
   168dc:	ldr	r0, [fp, #-148]	; 0xffffff6c
   168e0:	movw	r1, #17692	; 0x451c
   168e4:	movt	r1, #3
   168e8:	ldr	r1, [r1]
   168ec:	cmp	r0, r1
   168f0:	bcs	1695c <__assert_fail@plt+0x5228>
   168f4:	movw	r0, #17696	; 0x4520
   168f8:	movt	r0, #3
   168fc:	ldr	r0, [r0]
   16900:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16904:	add	r0, r0, r1, lsl #2
   16908:	ldr	r0, [r0]
   1690c:	bl	1171c <close@plt>
   16910:	cmp	r0, #0
   16914:	beq	16948 <__assert_fail@plt+0x5214>
   16918:	bl	115f0 <__errno_location@plt>
   1691c:	ldr	r1, [r0]
   16920:	movw	r0, #13817	; 0x35f9
   16924:	movt	r0, #2
   16928:	str	r1, [sp, #80]	; 0x50
   1692c:	bl	11590 <gettext@plt>
   16930:	movw	r1, #1
   16934:	str	r0, [sp, #76]	; 0x4c
   16938:	mov	r0, r1
   1693c:	ldr	r1, [sp, #80]	; 0x50
   16940:	ldr	r2, [sp, #76]	; 0x4c
   16944:	bl	1150c <error@plt>
   16948:	b	1694c <__assert_fail@plt+0x5218>
   1694c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16950:	add	r0, r0, #1
   16954:	str	r0, [fp, #-148]	; 0xffffff6c
   16958:	b	168dc <__assert_fail@plt+0x51a8>
   1695c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16960:	bl	1171c <close@plt>
   16964:	cmp	r0, #0
   16968:	beq	1699c <__assert_fail@plt+0x5268>
   1696c:	bl	115f0 <__errno_location@plt>
   16970:	ldr	r1, [r0]
   16974:	movw	r0, #13836	; 0x360c
   16978:	movt	r0, #2
   1697c:	str	r1, [sp, #72]	; 0x48
   16980:	bl	11590 <gettext@plt>
   16984:	movw	r1, #1
   16988:	str	r0, [sp, #68]	; 0x44
   1698c:	mov	r0, r1
   16990:	ldr	r1, [sp, #72]	; 0x48
   16994:	ldr	r2, [sp, #68]	; 0x44
   16998:	bl	1150c <error@plt>
   1699c:	ldr	r0, [fp, #-136]	; 0xffffff78
   169a0:	cmp	r0, #0
   169a4:	beq	16a30 <__assert_fail@plt+0x52fc>
   169a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   169ac:	movw	r1, #0
   169b0:	bl	11464 <dup2@plt>
   169b4:	cmp	r0, #0
   169b8:	beq	169ec <__assert_fail@plt+0x52b8>
   169bc:	bl	115f0 <__errno_location@plt>
   169c0:	ldr	r1, [r0]
   169c4:	movw	r0, #13856	; 0x3620
   169c8:	movt	r0, #2
   169cc:	str	r1, [sp, #64]	; 0x40
   169d0:	bl	11590 <gettext@plt>
   169d4:	movw	r1, #1
   169d8:	str	r0, [sp, #60]	; 0x3c
   169dc:	mov	r0, r1
   169e0:	ldr	r1, [sp, #64]	; 0x40
   169e4:	ldr	r2, [sp, #60]	; 0x3c
   169e8:	bl	1150c <error@plt>
   169ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   169f0:	bl	1171c <close@plt>
   169f4:	cmp	r0, #0
   169f8:	beq	16a2c <__assert_fail@plt+0x52f8>
   169fc:	bl	115f0 <__errno_location@plt>
   16a00:	ldr	r1, [r0]
   16a04:	movw	r0, #13874	; 0x3632
   16a08:	movt	r0, #2
   16a0c:	str	r1, [sp, #56]	; 0x38
   16a10:	bl	11590 <gettext@plt>
   16a14:	movw	r1, #1
   16a18:	str	r0, [sp, #52]	; 0x34
   16a1c:	mov	r0, r1
   16a20:	ldr	r1, [sp, #56]	; 0x38
   16a24:	ldr	r2, [sp, #52]	; 0x34
   16a28:	bl	1150c <error@plt>
   16a2c:	b	16a30 <__assert_fail@plt+0x52fc>
   16a30:	movw	r0, #2
   16a34:	movw	r1, #17536	; 0x4480
   16a38:	movt	r1, #3
   16a3c:	movw	r2, #0
   16a40:	bl	113f8 <sigprocmask@plt>
   16a44:	ldr	r1, [fp, #-144]	; 0xffffff70
   16a48:	ldr	r2, [fp, #-144]	; 0xffffff70
   16a4c:	str	r0, [sp, #48]	; 0x30
   16a50:	mov	r0, r2
   16a54:	str	r1, [sp, #44]	; 0x2c
   16a58:	bl	16f84 <__assert_fail@plt+0x5850>
   16a5c:	movw	r1, #17292	; 0x438c
   16a60:	movt	r1, #3
   16a64:	ldr	r3, [r1]
   16a68:	ldr	r1, [sp, #44]	; 0x2c
   16a6c:	str	r0, [sp, #40]	; 0x28
   16a70:	mov	r0, r1
   16a74:	ldr	r1, [sp, #40]	; 0x28
   16a78:	movw	r2, #13893	; 0x3645
   16a7c:	movt	r2, #2
   16a80:	movw	ip, #0
   16a84:	str	ip, [sp]
   16a88:	bl	11698 <execl@plt>
   16a8c:	str	r0, [sp, #36]	; 0x24
   16a90:	bl	115f0 <__errno_location@plt>
   16a94:	ldr	r1, [r0]
   16a98:	movw	r0, #13896	; 0x3648
   16a9c:	movt	r0, #2
   16aa0:	str	r1, [sp, #32]
   16aa4:	bl	11590 <gettext@plt>
   16aa8:	ldr	r3, [fp, #-144]	; 0xffffff70
   16aac:	movw	r1, #17292	; 0x438c
   16ab0:	movt	r1, #3
   16ab4:	ldr	r1, [r1]
   16ab8:	movw	r2, #1
   16abc:	str	r0, [sp, #28]
   16ac0:	mov	r0, r2
   16ac4:	ldr	r2, [sp, #32]
   16ac8:	str	r1, [sp, #24]
   16acc:	mov	r1, r2
   16ad0:	ldr	r2, [sp, #28]
   16ad4:	ldr	ip, [sp, #24]
   16ad8:	str	ip, [sp]
   16adc:	bl	1150c <error@plt>
   16ae0:	ldr	r0, [fp, #-140]	; 0xffffff74
   16ae4:	cmn	r0, #1
   16ae8:	bne	16b1c <__assert_fail@plt+0x53e8>
   16aec:	bl	115f0 <__errno_location@plt>
   16af0:	ldr	r1, [r0]
   16af4:	movw	r0, #13930	; 0x366a
   16af8:	movt	r0, #2
   16afc:	str	r1, [sp, #20]
   16b00:	bl	11590 <gettext@plt>
   16b04:	movw	r1, #1
   16b08:	str	r0, [sp, #16]
   16b0c:	mov	r0, r1
   16b10:	ldr	r1, [sp, #20]
   16b14:	ldr	r2, [sp, #16]
   16b18:	bl	1150c <error@plt>
   16b1c:	ldr	r0, [fp, #-136]	; 0xffffff78
   16b20:	bl	1171c <close@plt>
   16b24:	cmp	r0, #0
   16b28:	beq	16b5c <__assert_fail@plt+0x5428>
   16b2c:	bl	115f0 <__errno_location@plt>
   16b30:	ldr	r1, [r0]
   16b34:	movw	r0, #13954	; 0x3682
   16b38:	movt	r0, #2
   16b3c:	str	r1, [sp, #12]
   16b40:	bl	11590 <gettext@plt>
   16b44:	movw	r1, #1
   16b48:	str	r0, [sp, #8]
   16b4c:	mov	r0, r1
   16b50:	ldr	r1, [sp, #12]
   16b54:	ldr	r2, [sp, #8]
   16b58:	bl	1150c <error@plt>
   16b5c:	ldr	r0, [fp, #-140]	; 0xffffff74
   16b60:	movw	r1, #17664	; 0x4500
   16b64:	movt	r1, #3
   16b68:	str	r0, [r1]
   16b6c:	movw	r0, #17692	; 0x451c
   16b70:	movt	r0, #3
   16b74:	ldr	r0, [r0]
   16b78:	movw	r1, #17700	; 0x4524
   16b7c:	movt	r1, #3
   16b80:	ldr	r1, [r1]
   16b84:	cmp	r0, r1
   16b88:	bne	16bb4 <__assert_fail@plt+0x5480>
   16b8c:	movw	r0, #17696	; 0x4520
   16b90:	movt	r0, #3
   16b94:	ldr	r0, [r0]
   16b98:	movw	r1, #17700	; 0x4524
   16b9c:	movt	r1, #3
   16ba0:	movw	r2, #4
   16ba4:	bl	1b058 <__assert_fail@plt+0x9924>
   16ba8:	movw	r1, #17696	; 0x4520
   16bac:	movt	r1, #3
   16bb0:	str	r0, [r1]
   16bb4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16bb8:	movw	r1, #17696	; 0x4520
   16bbc:	movt	r1, #3
   16bc0:	ldr	r1, [r1]
   16bc4:	movw	r2, #17692	; 0x451c
   16bc8:	movt	r2, #3
   16bcc:	ldr	r3, [r2]
   16bd0:	add	ip, r3, #1
   16bd4:	str	ip, [r2]
   16bd8:	add	r1, r1, r3, lsl #2
   16bdc:	str	r0, [r1]
   16be0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16be4:	str	r0, [fp, #-12]
   16be8:	ldr	r0, [fp, #-12]
   16bec:	sub	sp, fp, #8
   16bf0:	pop	{r4, r5, fp, pc}
   16bf4:	sub	sp, sp, #8
   16bf8:	str	r0, [sp, #4]
   16bfc:	movw	r0, #17292	; 0x438c
   16c00:	movt	r0, #3
   16c04:	ldr	r0, [r0]
   16c08:	movw	r1, #0
   16c0c:	cmp	r0, r1
   16c10:	movw	r0, #0
   16c14:	str	r0, [sp]
   16c18:	beq	16c30 <__assert_fail@plt+0x54fc>
   16c1c:	ldr	r0, [sp, #4]
   16c20:	cmp	r0, #32
   16c24:	movw	r0, #0
   16c28:	moveq	r0, #1
   16c2c:	str	r0, [sp]
   16c30:	ldr	r0, [sp]
   16c34:	and	r0, r0, #1
   16c38:	add	sp, sp, #8
   16c3c:	bx	lr
   16c40:	push	{fp, lr}
   16c44:	mov	fp, sp
   16c48:	sub	sp, sp, #64	; 0x40
   16c4c:	str	r0, [fp, #-4]
   16c50:	str	r1, [fp, #-8]
   16c54:	str	r2, [fp, #-12]
   16c58:	mov	r0, #0
   16c5c:	strb	r0, [fp, #-13]
   16c60:	ldr	r0, [fp, #-4]
   16c64:	ldr	r1, [fp, #-8]
   16c68:	add	r0, r0, r1, lsl #4
   16c6c:	ldr	r0, [r0, #4]
   16c70:	cmn	r0, #1
   16c74:	bgt	16f74 <__assert_fail@plt+0x5840>
   16c78:	ldr	r0, [fp, #-8]
   16c7c:	cmp	r0, #0
   16c80:	beq	16c94 <__assert_fail@plt+0x5560>
   16c84:	ldr	r0, [fp, #-8]
   16c88:	sub	r0, r0, #1
   16c8c:	str	r0, [fp, #-28]	; 0xffffffe4
   16c90:	b	16ca0 <__assert_fail@plt+0x556c>
   16c94:	ldr	r0, [fp, #-12]
   16c98:	sub	r0, r0, #1
   16c9c:	str	r0, [fp, #-28]	; 0xffffffe4
   16ca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16ca4:	str	r0, [fp, #-24]	; 0xffffffe8
   16ca8:	ldr	r0, [fp, #-4]
   16cac:	ldr	r1, [fp, #-8]
   16cb0:	add	r0, r0, r1, lsl #4
   16cb4:	ldr	r0, [r0, #4]
   16cb8:	cmn	r0, #1
   16cbc:	bne	16cdc <__assert_fail@plt+0x55a8>
   16cc0:	ldr	r0, [fp, #-4]
   16cc4:	ldr	r1, [fp, #-8]
   16cc8:	add	r0, r0, r1, lsl #4
   16ccc:	ldr	r0, [r0]
   16cd0:	bl	16560 <__assert_fail@plt+0x4e2c>
   16cd4:	str	r0, [fp, #-20]	; 0xffffffec
   16cd8:	b	16cf8 <__assert_fail@plt+0x55c4>
   16cdc:	ldr	r0, [fp, #-4]
   16ce0:	ldr	r1, [fp, #-8]
   16ce4:	add	r0, r0, r1, lsl #4
   16ce8:	ldr	r0, [r0]
   16cec:	movw	r1, #3073	; 0xc01
   16cf0:	bl	17314 <__assert_fail@plt+0x5be0>
   16cf4:	str	r0, [fp, #-20]	; 0xffffffec
   16cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cfc:	mvn	r1, #0
   16d00:	cmp	r1, r0
   16d04:	bge	16d0c <__assert_fail@plt+0x55d8>
   16d08:	b	16ebc <__assert_fail@plt+0x5788>
   16d0c:	bl	115f0 <__errno_location@plt>
   16d10:	ldr	r0, [r0]
   16d14:	cmp	r0, #24
   16d18:	beq	16d78 <__assert_fail@plt+0x5644>
   16d1c:	bl	115f0 <__errno_location@plt>
   16d20:	ldr	r0, [r0]
   16d24:	cmp	r0, #23
   16d28:	beq	16d78 <__assert_fail@plt+0x5644>
   16d2c:	bl	115f0 <__errno_location@plt>
   16d30:	ldr	r1, [r0]
   16d34:	ldr	r0, [fp, #-4]
   16d38:	ldr	r2, [fp, #-8]
   16d3c:	add	r0, r0, r2, lsl #4
   16d40:	ldr	r2, [r0]
   16d44:	movw	r0, #0
   16d48:	movw	r3, #3
   16d4c:	str	r1, [sp, #32]
   16d50:	mov	r1, r3
   16d54:	bl	19c2c <__assert_fail@plt+0x84f8>
   16d58:	movw	r1, #1
   16d5c:	str	r0, [sp, #28]
   16d60:	mov	r0, r1
   16d64:	ldr	r1, [sp, #32]
   16d68:	movw	r2, #14290	; 0x37d2
   16d6c:	movt	r2, #2
   16d70:	ldr	r3, [sp, #28]
   16d74:	bl	1150c <error@plt>
   16d78:	movw	r0, #1
   16d7c:	strb	r0, [fp, #-13]
   16d80:	ldr	r0, [fp, #-4]
   16d84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d88:	add	r0, r0, r1, lsl #4
   16d8c:	ldr	r0, [r0, #4]
   16d90:	cmp	r0, #0
   16d94:	bge	16e28 <__assert_fail@plt+0x56f4>
   16d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d9c:	cmp	r0, #0
   16da0:	beq	16db4 <__assert_fail@plt+0x5680>
   16da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16da8:	sub	r0, r0, #1
   16dac:	str	r0, [sp, #24]
   16db0:	b	16dc0 <__assert_fail@plt+0x568c>
   16db4:	ldr	r0, [fp, #-12]
   16db8:	sub	r0, r0, #1
   16dbc:	str	r0, [sp, #24]
   16dc0:	ldr	r0, [sp, #24]
   16dc4:	str	r0, [fp, #-24]	; 0xffffffe8
   16dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dcc:	ldr	r1, [fp, #-8]
   16dd0:	cmp	r0, r1
   16dd4:	bne	16e24 <__assert_fail@plt+0x56f0>
   16dd8:	bl	115f0 <__errno_location@plt>
   16ddc:	ldr	r1, [r0]
   16de0:	ldr	r0, [fp, #-4]
   16de4:	ldr	r2, [fp, #-8]
   16de8:	add	r0, r0, r2, lsl #4
   16dec:	ldr	r2, [r0]
   16df0:	movw	r0, #0
   16df4:	movw	r3, #3
   16df8:	str	r1, [sp, #20]
   16dfc:	mov	r1, r3
   16e00:	bl	19c2c <__assert_fail@plt+0x84f8>
   16e04:	movw	r1, #1
   16e08:	str	r0, [sp, #16]
   16e0c:	mov	r0, r1
   16e10:	ldr	r1, [sp, #20]
   16e14:	movw	r2, #14290	; 0x37d2
   16e18:	movt	r2, #2
   16e1c:	ldr	r3, [sp, #16]
   16e20:	bl	1150c <error@plt>
   16e24:	b	16d80 <__assert_fail@plt+0x564c>
   16e28:	ldr	r0, [fp, #-4]
   16e2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e30:	add	r0, r0, r1, lsl #4
   16e34:	ldr	r0, [r0, #8]
   16e38:	bl	17228 <__assert_fail@plt+0x5af4>
   16e3c:	cmp	r0, #0
   16e40:	beq	16e90 <__assert_fail@plt+0x575c>
   16e44:	bl	115f0 <__errno_location@plt>
   16e48:	ldr	r1, [r0]
   16e4c:	ldr	r0, [fp, #-4]
   16e50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e54:	add	r0, r0, r2, lsl #4
   16e58:	ldr	r2, [r0]
   16e5c:	movw	r0, #0
   16e60:	movw	r3, #3
   16e64:	str	r1, [sp, #12]
   16e68:	mov	r1, r3
   16e6c:	bl	19c2c <__assert_fail@plt+0x84f8>
   16e70:	movw	r1, #1
   16e74:	str	r0, [sp, #8]
   16e78:	mov	r0, r1
   16e7c:	ldr	r1, [sp, #12]
   16e80:	movw	r2, #14290	; 0x37d2
   16e84:	movt	r2, #2
   16e88:	ldr	r3, [sp, #8]
   16e8c:	bl	1150c <error@plt>
   16e90:	ldr	r0, [fp, #-4]
   16e94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e98:	add	r0, r0, r1, lsl #4
   16e9c:	mov	r1, #0
   16ea0:	str	r1, [r0, #8]
   16ea4:	ldr	r0, [fp, #-4]
   16ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16eac:	add	r0, r0, r1, lsl #4
   16eb0:	mvn	r1, #1
   16eb4:	str	r1, [r0, #4]
   16eb8:	b	16ca8 <__assert_fail@plt+0x5574>
   16ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ec0:	ldr	r1, [fp, #-4]
   16ec4:	ldr	r2, [fp, #-8]
   16ec8:	add	r1, r1, r2, lsl #4
   16ecc:	str	r0, [r1, #4]
   16ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ed4:	movw	r1, #14182	; 0x3766
   16ed8:	movt	r1, #2
   16edc:	bl	1138c <fdopen@plt>
   16ee0:	ldr	r1, [fp, #-4]
   16ee4:	ldr	r2, [fp, #-8]
   16ee8:	add	r1, r1, r2, lsl #4
   16eec:	str	r0, [r1, #8]
   16ef0:	movw	r1, #0
   16ef4:	cmp	r0, r1
   16ef8:	bne	16f48 <__assert_fail@plt+0x5814>
   16efc:	bl	115f0 <__errno_location@plt>
   16f00:	ldr	r1, [r0]
   16f04:	ldr	r0, [fp, #-4]
   16f08:	ldr	r2, [fp, #-8]
   16f0c:	add	r0, r0, r2, lsl #4
   16f10:	ldr	r2, [r0]
   16f14:	movw	r0, #0
   16f18:	movw	r3, #3
   16f1c:	str	r1, [sp, #4]
   16f20:	mov	r1, r3
   16f24:	bl	19c2c <__assert_fail@plt+0x84f8>
   16f28:	movw	r1, #1
   16f2c:	str	r0, [sp]
   16f30:	mov	r0, r1
   16f34:	ldr	r1, [sp, #4]
   16f38:	movw	r2, #14290	; 0x37d2
   16f3c:	movt	r2, #2
   16f40:	ldr	r3, [sp]
   16f44:	bl	1150c <error@plt>
   16f48:	movw	r0, #17664	; 0x4500
   16f4c:	movt	r0, #3
   16f50:	ldr	r0, [r0]
   16f54:	ldr	r1, [fp, #-4]
   16f58:	ldr	r2, [fp, #-8]
   16f5c:	add	r1, r1, r2, lsl #4
   16f60:	str	r0, [r1, #12]
   16f64:	movw	r0, #17664	; 0x4500
   16f68:	movt	r0, #3
   16f6c:	movw	r1, #0
   16f70:	str	r1, [r0]
   16f74:	ldrb	r0, [fp, #-13]
   16f78:	and	r0, r0, #1
   16f7c:	mov	sp, fp
   16f80:	pop	{fp, pc}
   16f84:	sub	sp, sp, #16
   16f88:	str	r0, [sp, #12]
   16f8c:	ldr	r0, [sp, #12]
   16f90:	str	r0, [sp, #8]
   16f94:	movw	r0, #0
   16f98:	strb	r0, [sp, #3]
   16f9c:	ldr	r0, [sp, #8]
   16fa0:	ldrb	r0, [r0]
   16fa4:	cmp	r0, #47	; 0x2f
   16fa8:	bne	16fbc <__assert_fail@plt+0x5888>
   16fac:	ldr	r0, [sp, #8]
   16fb0:	add	r0, r0, #1
   16fb4:	str	r0, [sp, #8]
   16fb8:	b	16f9c <__assert_fail@plt+0x5868>
   16fbc:	ldr	r0, [sp, #8]
   16fc0:	str	r0, [sp, #4]
   16fc4:	ldr	r0, [sp, #4]
   16fc8:	ldrsb	r0, [r0]
   16fcc:	cmp	r0, #0
   16fd0:	beq	17024 <__assert_fail@plt+0x58f0>
   16fd4:	ldr	r0, [sp, #4]
   16fd8:	ldrb	r0, [r0]
   16fdc:	cmp	r0, #47	; 0x2f
   16fe0:	bne	16ff0 <__assert_fail@plt+0x58bc>
   16fe4:	movw	r0, #1
   16fe8:	strb	r0, [sp, #3]
   16fec:	b	17010 <__assert_fail@plt+0x58dc>
   16ff0:	ldrb	r0, [sp, #3]
   16ff4:	tst	r0, #1
   16ff8:	beq	1700c <__assert_fail@plt+0x58d8>
   16ffc:	ldr	r0, [sp, #4]
   17000:	str	r0, [sp, #8]
   17004:	movw	r0, #0
   17008:	strb	r0, [sp, #3]
   1700c:	b	17010 <__assert_fail@plt+0x58dc>
   17010:	b	17014 <__assert_fail@plt+0x58e0>
   17014:	ldr	r0, [sp, #4]
   17018:	add	r0, r0, #1
   1701c:	str	r0, [sp, #4]
   17020:	b	16fc4 <__assert_fail@plt+0x5890>
   17024:	ldr	r0, [sp, #8]
   17028:	add	sp, sp, #16
   1702c:	bx	lr
   17030:	push	{fp, lr}
   17034:	mov	fp, sp
   17038:	sub	sp, sp, #16
   1703c:	str	r0, [fp, #-4]
   17040:	movw	r0, #0
   17044:	str	r0, [sp, #4]
   17048:	ldr	r0, [fp, #-4]
   1704c:	bl	1159c <strlen@plt>
   17050:	str	r0, [sp, #8]
   17054:	ldr	r0, [sp, #8]
   17058:	movw	r1, #1
   1705c:	cmp	r1, r0
   17060:	movw	r0, #0
   17064:	str	r0, [sp]
   17068:	bcs	17090 <__assert_fail@plt+0x595c>
   1706c:	ldr	r0, [fp, #-4]
   17070:	ldr	r1, [sp, #8]
   17074:	sub	r1, r1, #1
   17078:	add	r0, r0, r1
   1707c:	ldrb	r0, [r0]
   17080:	cmp	r0, #47	; 0x2f
   17084:	movw	r0, #0
   17088:	moveq	r0, #1
   1708c:	str	r0, [sp]
   17090:	ldr	r0, [sp]
   17094:	tst	r0, #1
   17098:	beq	170b4 <__assert_fail@plt+0x5980>
   1709c:	b	170a0 <__assert_fail@plt+0x596c>
   170a0:	ldr	r0, [sp, #8]
   170a4:	mvn	r1, #0
   170a8:	add	r0, r0, r1
   170ac:	str	r0, [sp, #8]
   170b0:	b	17054 <__assert_fail@plt+0x5920>
   170b4:	ldr	r0, [sp, #8]
   170b8:	mov	sp, fp
   170bc:	pop	{fp, pc}
   170c0:	sub	sp, sp, #4
   170c4:	str	r0, [sp]
   170c8:	ldr	r0, [sp]
   170cc:	movw	r1, #17704	; 0x4528
   170d0:	movt	r1, #3
   170d4:	str	r0, [r1]
   170d8:	add	sp, sp, #4
   170dc:	bx	lr
   170e0:	sub	sp, sp, #4
   170e4:	and	r0, r0, #1
   170e8:	strb	r0, [sp, #3]
   170ec:	ldrb	r0, [sp, #3]
   170f0:	and	r0, r0, #1
   170f4:	movw	r1, #17708	; 0x452c
   170f8:	movt	r1, #3
   170fc:	strb	r0, [r1]
   17100:	add	sp, sp, #4
   17104:	bx	lr
   17108:	push	{fp, lr}
   1710c:	mov	fp, sp
   17110:	sub	sp, sp, #24
   17114:	movw	r0, #17252	; 0x4364
   17118:	movt	r0, #3
   1711c:	ldr	r0, [r0]
   17120:	bl	2013c <__assert_fail@plt+0xea08>
   17124:	cmp	r0, #0
   17128:	beq	171f8 <__assert_fail@plt+0x5ac4>
   1712c:	movw	r0, #17708	; 0x452c
   17130:	movt	r0, #3
   17134:	ldrb	r0, [r0]
   17138:	tst	r0, #1
   1713c:	beq	17150 <__assert_fail@plt+0x5a1c>
   17140:	bl	115f0 <__errno_location@plt>
   17144:	ldr	r0, [r0]
   17148:	cmp	r0, #32
   1714c:	beq	171f8 <__assert_fail@plt+0x5ac4>
   17150:	movw	r0, #14170	; 0x375a
   17154:	movt	r0, #2
   17158:	bl	11590 <gettext@plt>
   1715c:	str	r0, [fp, #-4]
   17160:	movw	r0, #17704	; 0x4528
   17164:	movt	r0, #3
   17168:	ldr	r0, [r0]
   1716c:	movw	r1, #0
   17170:	cmp	r0, r1
   17174:	beq	171cc <__assert_fail@plt+0x5a98>
   17178:	bl	115f0 <__errno_location@plt>
   1717c:	ldr	r1, [r0]
   17180:	movw	r0, #17704	; 0x4528
   17184:	movt	r0, #3
   17188:	ldr	r0, [r0]
   1718c:	str	r1, [fp, #-8]
   17190:	bl	19bd4 <__assert_fail@plt+0x84a0>
   17194:	ldr	r1, [fp, #-4]
   17198:	movw	r2, #0
   1719c:	str	r0, [sp, #12]
   171a0:	mov	r0, r2
   171a4:	ldr	r2, [fp, #-8]
   171a8:	str	r1, [sp, #8]
   171ac:	mov	r1, r2
   171b0:	movw	r2, #12509	; 0x30dd
   171b4:	movt	r2, #2
   171b8:	ldr	r3, [sp, #12]
   171bc:	ldr	ip, [sp, #8]
   171c0:	str	ip, [sp]
   171c4:	bl	1150c <error@plt>
   171c8:	b	171e8 <__assert_fail@plt+0x5ab4>
   171cc:	bl	115f0 <__errno_location@plt>
   171d0:	ldr	r1, [r0]
   171d4:	ldr	r3, [fp, #-4]
   171d8:	movw	r0, #0
   171dc:	movw	r2, #14290	; 0x37d2
   171e0:	movt	r2, #2
   171e4:	bl	1150c <error@plt>
   171e8:	movw	r0, #16744	; 0x4168
   171ec:	movt	r0, #3
   171f0:	ldr	r0, [r0]
   171f4:	bl	1141c <_exit@plt>
   171f8:	movw	r0, #17248	; 0x4360
   171fc:	movt	r0, #3
   17200:	ldr	r0, [r0]
   17204:	bl	2013c <__assert_fail@plt+0xea08>
   17208:	cmp	r0, #0
   1720c:	beq	17220 <__assert_fail@plt+0x5aec>
   17210:	movw	r0, #16744	; 0x4168
   17214:	movt	r0, #3
   17218:	ldr	r0, [r0]
   1721c:	bl	1141c <_exit@plt>
   17220:	mov	sp, fp
   17224:	pop	{fp, pc}
   17228:	push	{fp, lr}
   1722c:	mov	fp, sp
   17230:	sub	sp, sp, #32
   17234:	str	r0, [fp, #-8]
   17238:	movw	r0, #0
   1723c:	str	r0, [fp, #-12]
   17240:	str	r0, [sp, #12]
   17244:	ldr	r0, [fp, #-8]
   17248:	bl	11620 <fileno@plt>
   1724c:	str	r0, [sp, #16]
   17250:	ldr	r0, [sp, #16]
   17254:	cmp	r0, #0
   17258:	bge	1726c <__assert_fail@plt+0x5b38>
   1725c:	ldr	r0, [fp, #-8]
   17260:	bl	11644 <fclose@plt>
   17264:	str	r0, [fp, #-4]
   17268:	b	17308 <__assert_fail@plt+0x5bd4>
   1726c:	ldr	r0, [fp, #-8]
   17270:	bl	11554 <__freading@plt>
   17274:	cmp	r0, #0
   17278:	beq	172b0 <__assert_fail@plt+0x5b7c>
   1727c:	ldr	r0, [fp, #-8]
   17280:	bl	11620 <fileno@plt>
   17284:	mov	r1, sp
   17288:	mov	r2, #1
   1728c:	str	r2, [r1]
   17290:	mov	r1, #0
   17294:	mov	r2, r1
   17298:	mov	r3, r1
   1729c:	bl	114b8 <lseek64@plt>
   172a0:	and	r0, r0, r1
   172a4:	cmn	r0, #1
   172a8:	beq	172cc <__assert_fail@plt+0x5b98>
   172ac:	b	172b0 <__assert_fail@plt+0x5b7c>
   172b0:	ldr	r0, [fp, #-8]
   172b4:	bl	1743c <__assert_fail@plt+0x5d08>
   172b8:	cmp	r0, #0
   172bc:	beq	172cc <__assert_fail@plt+0x5b98>
   172c0:	bl	115f0 <__errno_location@plt>
   172c4:	ldr	r0, [r0]
   172c8:	str	r0, [fp, #-12]
   172cc:	ldr	r0, [fp, #-8]
   172d0:	bl	11644 <fclose@plt>
   172d4:	str	r0, [sp, #12]
   172d8:	ldr	r0, [fp, #-12]
   172dc:	cmp	r0, #0
   172e0:	beq	17300 <__assert_fail@plt+0x5bcc>
   172e4:	ldr	r0, [fp, #-12]
   172e8:	str	r0, [sp, #8]
   172ec:	bl	115f0 <__errno_location@plt>
   172f0:	ldr	r1, [sp, #8]
   172f4:	str	r1, [r0]
   172f8:	mvn	r0, #0
   172fc:	str	r0, [sp, #12]
   17300:	ldr	r0, [sp, #12]
   17304:	str	r0, [fp, #-4]
   17308:	ldr	r0, [fp, #-4]
   1730c:	mov	sp, fp
   17310:	pop	{fp, pc}
   17314:	sub	sp, sp, #8
   17318:	push	{fp, lr}
   1731c:	mov	fp, sp
   17320:	sub	sp, sp, #16
   17324:	str	r3, [fp, #12]
   17328:	str	r2, [fp, #8]
   1732c:	str	r0, [fp, #-4]
   17330:	str	r1, [sp, #8]
   17334:	movw	r0, #0
   17338:	str	r0, [sp, #4]
   1733c:	ldr	r0, [sp, #8]
   17340:	and	r0, r0, #64	; 0x40
   17344:	cmp	r0, #0
   17348:	beq	17370 <__assert_fail@plt+0x5c3c>
   1734c:	mov	r0, sp
   17350:	mov	r1, r0
   17354:	add	r2, fp, #8
   17358:	str	r2, [r1]
   1735c:	ldr	r1, [sp]
   17360:	add	r2, r1, #4
   17364:	str	r2, [sp]
   17368:	ldr	r1, [r1]
   1736c:	str	r1, [sp, #4]
   17370:	ldr	r0, [fp, #-4]
   17374:	ldr	r1, [sp, #8]
   17378:	ldr	r2, [sp, #4]
   1737c:	bl	11518 <open64@plt>
   17380:	bl	1a4f4 <__assert_fail@plt+0x8dc0>
   17384:	mov	sp, fp
   17388:	pop	{fp, lr}
   1738c:	add	sp, sp, #8
   17390:	bx	lr
   17394:	push	{fp, lr}
   17398:	mov	fp, sp
   1739c:	sub	sp, sp, #40	; 0x28
   173a0:	str	r0, [fp, #-8]
   173a4:	str	r1, [fp, #-12]
   173a8:	str	r2, [fp, #-16]
   173ac:	str	r3, [sp, #20]
   173b0:	ldr	r0, [fp, #-12]
   173b4:	ldr	r1, [fp, #-16]
   173b8:	ldr	r2, [sp, #20]
   173bc:	bl	11518 <open64@plt>
   173c0:	str	r0, [sp, #16]
   173c4:	ldr	r0, [sp, #16]
   173c8:	ldr	r1, [fp, #-8]
   173cc:	cmp	r0, r1
   173d0:	beq	173e0 <__assert_fail@plt+0x5cac>
   173d4:	ldr	r0, [sp, #16]
   173d8:	cmp	r0, #0
   173dc:	bge	173ec <__assert_fail@plt+0x5cb8>
   173e0:	ldr	r0, [sp, #16]
   173e4:	str	r0, [fp, #-4]
   173e8:	b	17430 <__assert_fail@plt+0x5cfc>
   173ec:	ldr	r0, [sp, #16]
   173f0:	ldr	r1, [fp, #-8]
   173f4:	bl	11464 <dup2@plt>
   173f8:	str	r0, [sp, #12]
   173fc:	bl	115f0 <__errno_location@plt>
   17400:	ldr	r0, [r0]
   17404:	str	r0, [sp, #8]
   17408:	ldr	r0, [sp, #16]
   1740c:	bl	1171c <close@plt>
   17410:	ldr	r1, [sp, #8]
   17414:	str	r0, [sp, #4]
   17418:	str	r1, [sp]
   1741c:	bl	115f0 <__errno_location@plt>
   17420:	ldr	r1, [sp]
   17424:	str	r1, [r0]
   17428:	ldr	r0, [sp, #12]
   1742c:	str	r0, [fp, #-4]
   17430:	ldr	r0, [fp, #-4]
   17434:	mov	sp, fp
   17438:	pop	{fp, pc}
   1743c:	push	{fp, lr}
   17440:	mov	fp, sp
   17444:	sub	sp, sp, #8
   17448:	str	r0, [sp]
   1744c:	ldr	r0, [sp]
   17450:	movw	r1, #0
   17454:	cmp	r0, r1
   17458:	beq	1746c <__assert_fail@plt+0x5d38>
   1745c:	ldr	r0, [sp]
   17460:	bl	11554 <__freading@plt>
   17464:	cmp	r0, #0
   17468:	bne	1747c <__assert_fail@plt+0x5d48>
   1746c:	ldr	r0, [sp]
   17470:	bl	113ec <fflush@plt>
   17474:	str	r0, [sp, #4]
   17478:	b	17490 <__assert_fail@plt+0x5d5c>
   1747c:	ldr	r0, [sp]
   17480:	bl	1749c <__assert_fail@plt+0x5d68>
   17484:	ldr	r0, [sp]
   17488:	bl	113ec <fflush@plt>
   1748c:	str	r0, [sp, #4]
   17490:	ldr	r0, [sp, #4]
   17494:	mov	sp, fp
   17498:	pop	{fp, pc}
   1749c:	push	{fp, lr}
   174a0:	mov	fp, sp
   174a4:	sub	sp, sp, #8
   174a8:	str	r0, [sp, #4]
   174ac:	ldr	r0, [sp, #4]
   174b0:	ldr	r0, [r0]
   174b4:	and	r0, r0, #256	; 0x100
   174b8:	cmp	r0, #0
   174bc:	beq	174e0 <__assert_fail@plt+0x5dac>
   174c0:	ldr	r0, [sp, #4]
   174c4:	mov	r1, sp
   174c8:	mov	r2, #1
   174cc:	str	r2, [r1]
   174d0:	mov	r1, #0
   174d4:	mov	r2, r1
   174d8:	mov	r3, r1
   174dc:	bl	17528 <__assert_fail@plt+0x5df4>
   174e0:	mov	sp, fp
   174e4:	pop	{fp, pc}
   174e8:	push	{fp, lr}
   174ec:	mov	fp, sp
   174f0:	sub	sp, sp, #16
   174f4:	str	r0, [fp, #-4]
   174f8:	bl	115f0 <__errno_location@plt>
   174fc:	ldr	r0, [r0]
   17500:	str	r0, [sp, #8]
   17504:	ldr	r0, [fp, #-4]
   17508:	bl	11410 <free@plt>
   1750c:	ldr	r0, [sp, #8]
   17510:	str	r0, [sp, #4]
   17514:	bl	115f0 <__errno_location@plt>
   17518:	ldr	r1, [sp, #4]
   1751c:	str	r1, [r0]
   17520:	mov	sp, fp
   17524:	pop	{fp, pc}
   17528:	push	{fp, lr}
   1752c:	mov	fp, sp
   17530:	sub	sp, sp, #32
   17534:	ldr	r1, [fp, #8]
   17538:	str	r0, [fp, #-8]
   1753c:	str	r3, [sp, #20]
   17540:	str	r2, [sp, #16]
   17544:	ldr	r0, [fp, #-8]
   17548:	ldr	r0, [r0, #8]
   1754c:	ldr	r2, [fp, #-8]
   17550:	ldr	r2, [r2, #4]
   17554:	cmp	r0, r2
   17558:	bne	17604 <__assert_fail@plt+0x5ed0>
   1755c:	ldr	r0, [fp, #-8]
   17560:	ldr	r0, [r0, #20]
   17564:	ldr	r1, [fp, #-8]
   17568:	ldr	r1, [r1, #16]
   1756c:	cmp	r0, r1
   17570:	bne	17604 <__assert_fail@plt+0x5ed0>
   17574:	ldr	r0, [fp, #-8]
   17578:	ldr	r0, [r0, #36]	; 0x24
   1757c:	movw	r1, #0
   17580:	cmp	r0, r1
   17584:	bne	17604 <__assert_fail@plt+0x5ed0>
   17588:	ldr	r0, [fp, #-8]
   1758c:	bl	11620 <fileno@plt>
   17590:	ldr	r2, [sp, #16]
   17594:	ldr	r3, [sp, #20]
   17598:	ldr	r1, [fp, #8]
   1759c:	mov	ip, sp
   175a0:	str	r1, [ip]
   175a4:	bl	114b8 <lseek64@plt>
   175a8:	str	r1, [sp, #12]
   175ac:	str	r0, [sp, #8]
   175b0:	ldr	r0, [sp, #8]
   175b4:	ldr	r1, [sp, #12]
   175b8:	and	r0, r0, r1
   175bc:	cmn	r0, #1
   175c0:	bne	175d4 <__assert_fail@plt+0x5ea0>
   175c4:	b	175c8 <__assert_fail@plt+0x5e94>
   175c8:	mvn	r0, #0
   175cc:	str	r0, [fp, #-4]
   175d0:	b	17624 <__assert_fail@plt+0x5ef0>
   175d4:	ldr	r0, [fp, #-8]
   175d8:	ldr	r1, [r0]
   175dc:	bic	r1, r1, #16
   175e0:	str	r1, [r0]
   175e4:	ldr	r0, [sp, #8]
   175e8:	ldr	r1, [sp, #12]
   175ec:	ldr	r2, [fp, #-8]
   175f0:	str	r1, [r2, #84]	; 0x54
   175f4:	str	r0, [r2, #80]	; 0x50
   175f8:	movw	r0, #0
   175fc:	str	r0, [fp, #-4]
   17600:	b	17624 <__assert_fail@plt+0x5ef0>
   17604:	ldr	r0, [fp, #-8]
   17608:	ldr	r2, [sp, #16]
   1760c:	ldr	r3, [sp, #20]
   17610:	ldr	r1, [fp, #8]
   17614:	mov	ip, sp
   17618:	str	r1, [ip]
   1761c:	bl	1165c <fseeko64@plt>
   17620:	str	r0, [fp, #-4]
   17624:	ldr	r0, [fp, #-4]
   17628:	mov	sp, fp
   1762c:	pop	{fp, pc}
   17630:	push	{fp, lr}
   17634:	mov	fp, sp
   17638:	sub	sp, sp, #24
   1763c:	str	r0, [fp, #-4]
   17640:	str	r1, [fp, #-8]
   17644:	str	r2, [sp, #12]
   17648:	movw	r0, #0
   1764c:	str	r0, [sp, #8]
   17650:	ldr	r0, [fp, #-8]
   17654:	str	r0, [sp, #4]
   17658:	ldr	r0, [sp, #12]
   1765c:	cmp	r0, #0
   17660:	bls	176d8 <__assert_fail@plt+0x5fa4>
   17664:	ldr	r0, [fp, #-4]
   17668:	ldr	r1, [sp, #4]
   1766c:	ldr	r2, [sp, #12]
   17670:	bl	1a058 <__assert_fail@plt+0x8924>
   17674:	str	r0, [sp]
   17678:	ldr	r0, [sp]
   1767c:	cmn	r0, #1
   17680:	bne	17688 <__assert_fail@plt+0x5f54>
   17684:	b	176d8 <__assert_fail@plt+0x5fa4>
   17688:	ldr	r0, [sp]
   1768c:	cmp	r0, #0
   17690:	bne	176a4 <__assert_fail@plt+0x5f70>
   17694:	bl	115f0 <__errno_location@plt>
   17698:	movw	r1, #28
   1769c:	str	r1, [r0]
   176a0:	b	176d8 <__assert_fail@plt+0x5fa4>
   176a4:	ldr	r0, [sp]
   176a8:	ldr	r1, [sp, #8]
   176ac:	add	r0, r1, r0
   176b0:	str	r0, [sp, #8]
   176b4:	ldr	r0, [sp]
   176b8:	ldr	r1, [sp, #4]
   176bc:	add	r0, r1, r0
   176c0:	str	r0, [sp, #4]
   176c4:	ldr	r0, [sp]
   176c8:	ldr	r1, [sp, #12]
   176cc:	sub	r0, r1, r0
   176d0:	str	r0, [sp, #12]
   176d4:	b	17658 <__assert_fail@plt+0x5f24>
   176d8:	ldr	r0, [sp, #8]
   176dc:	mov	sp, fp
   176e0:	pop	{fp, pc}
   176e4:	push	{fp, lr}
   176e8:	mov	fp, sp
   176ec:	sub	sp, sp, #16
   176f0:	str	r0, [sp, #8]
   176f4:	str	r1, [sp, #12]
   176f8:	str	r2, [sp, #4]
   176fc:	ldr	r0, [sp, #4]
   17700:	add	r0, r0, #20
   17704:	str	r0, [sp]
   17708:	ldr	r0, [sp]
   1770c:	mov	r1, #0
   17710:	strb	r1, [r0]
   17714:	mov	r0, #1
   17718:	cmp	r0, #0
   1771c:	bne	177a4 <__assert_fail@plt+0x6070>
   17720:	b	17724 <__assert_fail@plt+0x5ff0>
   17724:	b	17728 <__assert_fail@plt+0x5ff4>
   17728:	ldr	r0, [sp, #8]
   1772c:	ldr	r1, [sp, #12]
   17730:	mov	r2, #10
   17734:	mov	r3, #0
   17738:	bl	22540 <__assert_fail@plt+0x10e0c>
   1773c:	rsb	r2, r2, #48	; 0x30
   17740:	ldr	r3, [sp]
   17744:	mvn	ip, #0
   17748:	add	lr, r3, ip
   1774c:	str	lr, [sp]
   17750:	add	r3, r3, ip
   17754:	strb	r2, [r3]
   17758:	ldr	r0, [sp, #8]
   1775c:	ldr	r1, [sp, #12]
   17760:	mov	r2, #10
   17764:	mov	r3, #0
   17768:	bl	22540 <__assert_fail@plt+0x10e0c>
   1776c:	str	r1, [sp, #12]
   17770:	str	r0, [sp, #8]
   17774:	orr	r0, r0, r1
   17778:	cmp	r0, #0
   1777c:	bne	17728 <__assert_fail@plt+0x5ff4>
   17780:	b	17784 <__assert_fail@plt+0x6050>
   17784:	ldr	r0, [sp]
   17788:	mvn	r1, #0
   1778c:	add	r2, r0, r1
   17790:	str	r2, [sp]
   17794:	add	r0, r0, r1
   17798:	movw	r1, #45	; 0x2d
   1779c:	strb	r1, [r0]
   177a0:	b	17808 <__assert_fail@plt+0x60d4>
   177a4:	b	177a8 <__assert_fail@plt+0x6074>
   177a8:	ldr	r0, [sp, #8]
   177ac:	ldr	r1, [sp, #12]
   177b0:	mov	r2, #10
   177b4:	mov	r3, #0
   177b8:	bl	22540 <__assert_fail@plt+0x10e0c>
   177bc:	orr	r2, r2, #48	; 0x30
   177c0:	ldr	r3, [sp]
   177c4:	mvn	ip, #0
   177c8:	add	lr, r3, ip
   177cc:	str	lr, [sp]
   177d0:	add	r3, r3, ip
   177d4:	strb	r2, [r3]
   177d8:	ldr	r0, [sp, #8]
   177dc:	ldr	r1, [sp, #12]
   177e0:	mov	r2, #10
   177e4:	mov	r3, #0
   177e8:	bl	22540 <__assert_fail@plt+0x10e0c>
   177ec:	str	r1, [sp, #12]
   177f0:	str	r0, [sp, #8]
   177f4:	orr	r0, r0, r1
   177f8:	cmp	r0, #0
   177fc:	bne	177a8 <__assert_fail@plt+0x6074>
   17800:	b	17804 <__assert_fail@plt+0x60d0>
   17804:	b	17808 <__assert_fail@plt+0x60d4>
   17808:	ldr	r0, [sp]
   1780c:	mov	sp, fp
   17810:	pop	{fp, pc}
   17814:	push	{fp, lr}
   17818:	mov	fp, sp
   1781c:	sub	sp, sp, #24
   17820:	str	r0, [fp, #-4]
   17824:	ldr	r0, [fp, #-4]
   17828:	movw	r1, #0
   1782c:	cmp	r0, r1
   17830:	bne	17854 <__assert_fail@plt+0x6120>
   17834:	movw	r0, #17248	; 0x4360
   17838:	movt	r0, #3
   1783c:	ldr	r1, [r0]
   17840:	movw	r0, #14687	; 0x395f
   17844:	movt	r0, #2
   17848:	bl	116f8 <fputs@plt>
   1784c:	str	r0, [sp, #8]
   17850:	bl	11710 <abort@plt>
   17854:	ldr	r0, [fp, #-4]
   17858:	movw	r1, #47	; 0x2f
   1785c:	bl	116a4 <strrchr@plt>
   17860:	str	r0, [fp, #-8]
   17864:	ldr	r0, [fp, #-8]
   17868:	movw	r1, #0
   1786c:	cmp	r0, r1
   17870:	beq	17884 <__assert_fail@plt+0x6150>
   17874:	ldr	r0, [fp, #-8]
   17878:	add	r0, r0, #1
   1787c:	str	r0, [sp, #4]
   17880:	b	1788c <__assert_fail@plt+0x6158>
   17884:	ldr	r0, [fp, #-4]
   17888:	str	r0, [sp, #4]
   1788c:	ldr	r0, [sp, #4]
   17890:	str	r0, [sp, #12]
   17894:	ldr	r0, [sp, #12]
   17898:	ldr	r1, [fp, #-4]
   1789c:	sub	r0, r0, r1
   178a0:	cmp	r0, #7
   178a4:	blt	17910 <__assert_fail@plt+0x61dc>
   178a8:	ldr	r0, [sp, #12]
   178ac:	mvn	r1, #6
   178b0:	add	r0, r0, r1
   178b4:	movw	r1, #14743	; 0x3997
   178b8:	movt	r1, #2
   178bc:	movw	r2, #7
   178c0:	bl	11704 <strncmp@plt>
   178c4:	cmp	r0, #0
   178c8:	bne	17910 <__assert_fail@plt+0x61dc>
   178cc:	ldr	r0, [sp, #12]
   178d0:	str	r0, [fp, #-4]
   178d4:	ldr	r0, [sp, #12]
   178d8:	movw	r1, #14751	; 0x399f
   178dc:	movt	r1, #2
   178e0:	movw	r2, #3
   178e4:	bl	11704 <strncmp@plt>
   178e8:	cmp	r0, #0
   178ec:	bne	1790c <__assert_fail@plt+0x61d8>
   178f0:	ldr	r0, [sp, #12]
   178f4:	add	r0, r0, #3
   178f8:	str	r0, [fp, #-4]
   178fc:	ldr	r0, [fp, #-4]
   17900:	movw	r1, #17232	; 0x4350
   17904:	movt	r1, #3
   17908:	str	r0, [r1]
   1790c:	b	17910 <__assert_fail@plt+0x61dc>
   17910:	ldr	r0, [fp, #-4]
   17914:	movw	r1, #17712	; 0x4530
   17918:	movt	r1, #3
   1791c:	str	r0, [r1]
   17920:	ldr	r0, [fp, #-4]
   17924:	movw	r1, #17236	; 0x4354
   17928:	movt	r1, #3
   1792c:	str	r0, [r1]
   17930:	mov	sp, fp
   17934:	pop	{fp, pc}
   17938:	push	{fp, lr}
   1793c:	mov	fp, sp
   17940:	sub	sp, sp, #24
   17944:	str	r0, [fp, #-4]
   17948:	bl	115f0 <__errno_location@plt>
   1794c:	ldr	r0, [r0]
   17950:	str	r0, [fp, #-8]
   17954:	ldr	r0, [fp, #-4]
   17958:	movw	r1, #0
   1795c:	cmp	r0, r1
   17960:	beq	17970 <__assert_fail@plt+0x623c>
   17964:	ldr	r0, [fp, #-4]
   17968:	str	r0, [sp, #8]
   1796c:	b	17980 <__assert_fail@plt+0x624c>
   17970:	movw	r0, #17716	; 0x4534
   17974:	movt	r0, #3
   17978:	str	r0, [sp, #8]
   1797c:	b	17980 <__assert_fail@plt+0x624c>
   17980:	ldr	r0, [sp, #8]
   17984:	movw	r1, #48	; 0x30
   17988:	bl	1dab4 <__assert_fail@plt+0xc380>
   1798c:	str	r0, [sp, #12]
   17990:	ldr	r0, [fp, #-8]
   17994:	str	r0, [sp, #4]
   17998:	bl	115f0 <__errno_location@plt>
   1799c:	ldr	r1, [sp, #4]
   179a0:	str	r1, [r0]
   179a4:	ldr	r0, [sp, #12]
   179a8:	mov	sp, fp
   179ac:	pop	{fp, pc}
   179b0:	sub	sp, sp, #8
   179b4:	str	r0, [sp, #4]
   179b8:	ldr	r0, [sp, #4]
   179bc:	movw	r1, #0
   179c0:	cmp	r0, r1
   179c4:	beq	179d4 <__assert_fail@plt+0x62a0>
   179c8:	ldr	r0, [sp, #4]
   179cc:	str	r0, [sp]
   179d0:	b	179e4 <__assert_fail@plt+0x62b0>
   179d4:	movw	r0, #17716	; 0x4534
   179d8:	movt	r0, #3
   179dc:	str	r0, [sp]
   179e0:	b	179e4 <__assert_fail@plt+0x62b0>
   179e4:	ldr	r0, [sp]
   179e8:	ldr	r0, [r0]
   179ec:	add	sp, sp, #8
   179f0:	bx	lr
   179f4:	sub	sp, sp, #16
   179f8:	str	r0, [sp, #12]
   179fc:	str	r1, [sp, #8]
   17a00:	ldr	r0, [sp, #8]
   17a04:	ldr	r1, [sp, #12]
   17a08:	movw	r2, #0
   17a0c:	cmp	r1, r2
   17a10:	str	r0, [sp, #4]
   17a14:	beq	17a24 <__assert_fail@plt+0x62f0>
   17a18:	ldr	r0, [sp, #12]
   17a1c:	str	r0, [sp]
   17a20:	b	17a34 <__assert_fail@plt+0x6300>
   17a24:	movw	r0, #17716	; 0x4534
   17a28:	movt	r0, #3
   17a2c:	str	r0, [sp]
   17a30:	b	17a34 <__assert_fail@plt+0x6300>
   17a34:	ldr	r0, [sp]
   17a38:	ldr	r1, [sp, #4]
   17a3c:	str	r1, [r0]
   17a40:	add	sp, sp, #16
   17a44:	bx	lr
   17a48:	sub	sp, sp, #32
   17a4c:	str	r0, [sp, #28]
   17a50:	strb	r1, [sp, #27]
   17a54:	str	r2, [sp, #20]
   17a58:	ldrb	r0, [sp, #27]
   17a5c:	strb	r0, [sp, #19]
   17a60:	ldr	r0, [sp, #28]
   17a64:	movw	r1, #0
   17a68:	cmp	r0, r1
   17a6c:	beq	17a7c <__assert_fail@plt+0x6348>
   17a70:	ldr	r0, [sp, #28]
   17a74:	str	r0, [sp]
   17a78:	b	17a8c <__assert_fail@plt+0x6358>
   17a7c:	movw	r0, #17716	; 0x4534
   17a80:	movt	r0, #3
   17a84:	str	r0, [sp]
   17a88:	b	17a8c <__assert_fail@plt+0x6358>
   17a8c:	ldr	r0, [sp]
   17a90:	add	r0, r0, #8
   17a94:	ldrb	r1, [sp, #19]
   17a98:	lsr	r1, r1, #5
   17a9c:	add	r0, r0, r1, lsl #2
   17aa0:	str	r0, [sp, #12]
   17aa4:	ldrb	r0, [sp, #19]
   17aa8:	and	r0, r0, #31
   17aac:	str	r0, [sp, #8]
   17ab0:	ldr	r0, [sp, #12]
   17ab4:	ldr	r0, [r0]
   17ab8:	ldr	r1, [sp, #8]
   17abc:	lsr	r0, r0, r1
   17ac0:	and	r0, r0, #1
   17ac4:	str	r0, [sp, #4]
   17ac8:	ldr	r0, [sp, #20]
   17acc:	and	r0, r0, #1
   17ad0:	ldr	r1, [sp, #4]
   17ad4:	eor	r0, r0, r1
   17ad8:	ldr	r1, [sp, #8]
   17adc:	lsl	r0, r0, r1
   17ae0:	ldr	r1, [sp, #12]
   17ae4:	ldr	r2, [r1]
   17ae8:	eor	r0, r2, r0
   17aec:	str	r0, [r1]
   17af0:	ldr	r0, [sp, #4]
   17af4:	add	sp, sp, #32
   17af8:	bx	lr
   17afc:	sub	sp, sp, #12
   17b00:	str	r0, [sp, #8]
   17b04:	str	r1, [sp, #4]
   17b08:	ldr	r0, [sp, #8]
   17b0c:	movw	r1, #0
   17b10:	cmp	r0, r1
   17b14:	bne	17b24 <__assert_fail@plt+0x63f0>
   17b18:	movw	r0, #17716	; 0x4534
   17b1c:	movt	r0, #3
   17b20:	str	r0, [sp, #8]
   17b24:	ldr	r0, [sp, #8]
   17b28:	ldr	r0, [r0, #4]
   17b2c:	str	r0, [sp]
   17b30:	ldr	r0, [sp, #4]
   17b34:	ldr	r1, [sp, #8]
   17b38:	str	r0, [r1, #4]
   17b3c:	ldr	r0, [sp]
   17b40:	add	sp, sp, #12
   17b44:	bx	lr
   17b48:	push	{fp, lr}
   17b4c:	mov	fp, sp
   17b50:	sub	sp, sp, #16
   17b54:	str	r0, [fp, #-4]
   17b58:	str	r1, [sp, #8]
   17b5c:	str	r2, [sp, #4]
   17b60:	ldr	r0, [fp, #-4]
   17b64:	movw	r1, #0
   17b68:	cmp	r0, r1
   17b6c:	bne	17b7c <__assert_fail@plt+0x6448>
   17b70:	movw	r0, #17716	; 0x4534
   17b74:	movt	r0, #3
   17b78:	str	r0, [fp, #-4]
   17b7c:	ldr	r0, [fp, #-4]
   17b80:	movw	r1, #10
   17b84:	str	r1, [r0]
   17b88:	ldr	r0, [sp, #8]
   17b8c:	movw	r1, #0
   17b90:	cmp	r0, r1
   17b94:	beq	17ba8 <__assert_fail@plt+0x6474>
   17b98:	ldr	r0, [sp, #4]
   17b9c:	movw	r1, #0
   17ba0:	cmp	r0, r1
   17ba4:	bne	17bac <__assert_fail@plt+0x6478>
   17ba8:	bl	11710 <abort@plt>
   17bac:	ldr	r0, [sp, #8]
   17bb0:	ldr	r1, [fp, #-4]
   17bb4:	str	r0, [r1, #40]	; 0x28
   17bb8:	ldr	r0, [sp, #4]
   17bbc:	ldr	r1, [fp, #-4]
   17bc0:	str	r0, [r1, #44]	; 0x2c
   17bc4:	mov	sp, fp
   17bc8:	pop	{fp, pc}
   17bcc:	push	{r4, r5, r6, sl, fp, lr}
   17bd0:	add	fp, sp, #16
   17bd4:	sub	sp, sp, #56	; 0x38
   17bd8:	ldr	ip, [fp, #8]
   17bdc:	str	r0, [fp, #-20]	; 0xffffffec
   17be0:	str	r1, [fp, #-24]	; 0xffffffe8
   17be4:	str	r2, [fp, #-28]	; 0xffffffe4
   17be8:	str	r3, [fp, #-32]	; 0xffffffe0
   17bec:	ldr	r0, [fp, #8]
   17bf0:	movw	r1, #0
   17bf4:	cmp	r0, r1
   17bf8:	beq	17c08 <__assert_fail@plt+0x64d4>
   17bfc:	ldr	r0, [fp, #8]
   17c00:	str	r0, [sp, #24]
   17c04:	b	17c18 <__assert_fail@plt+0x64e4>
   17c08:	movw	r0, #17716	; 0x4534
   17c0c:	movt	r0, #3
   17c10:	str	r0, [sp, #24]
   17c14:	b	17c18 <__assert_fail@plt+0x64e4>
   17c18:	ldr	r0, [sp, #24]
   17c1c:	str	r0, [sp, #36]	; 0x24
   17c20:	bl	115f0 <__errno_location@plt>
   17c24:	ldr	r0, [r0]
   17c28:	str	r0, [sp, #32]
   17c2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c3c:	ldr	ip, [sp, #36]	; 0x24
   17c40:	ldr	ip, [ip]
   17c44:	ldr	lr, [sp, #36]	; 0x24
   17c48:	ldr	lr, [lr, #4]
   17c4c:	ldr	r4, [sp, #36]	; 0x24
   17c50:	add	r4, r4, #8
   17c54:	ldr	r5, [sp, #36]	; 0x24
   17c58:	ldr	r5, [r5, #40]	; 0x28
   17c5c:	ldr	r6, [sp, #36]	; 0x24
   17c60:	ldr	r6, [r6, #44]	; 0x2c
   17c64:	str	ip, [sp]
   17c68:	str	lr, [sp, #4]
   17c6c:	str	r4, [sp, #8]
   17c70:	str	r5, [sp, #12]
   17c74:	str	r6, [sp, #16]
   17c78:	bl	17ca0 <__assert_fail@plt+0x656c>
   17c7c:	str	r0, [sp, #28]
   17c80:	ldr	r0, [sp, #32]
   17c84:	str	r0, [sp, #20]
   17c88:	bl	115f0 <__errno_location@plt>
   17c8c:	ldr	r1, [sp, #20]
   17c90:	str	r1, [r0]
   17c94:	ldr	r0, [sp, #28]
   17c98:	sub	sp, fp, #16
   17c9c:	pop	{r4, r5, r6, sl, fp, pc}
   17ca0:	push	{r4, r5, r6, sl, fp, lr}
   17ca4:	add	fp, sp, #16
   17ca8:	sub	sp, sp, #160	; 0xa0
   17cac:	ldr	ip, [fp, #24]
   17cb0:	ldr	lr, [fp, #20]
   17cb4:	ldr	r4, [fp, #16]
   17cb8:	ldr	r5, [fp, #12]
   17cbc:	ldr	r6, [fp, #8]
   17cc0:	str	r0, [fp, #-24]	; 0xffffffe8
   17cc4:	str	r1, [fp, #-28]	; 0xffffffe4
   17cc8:	str	r2, [fp, #-32]	; 0xffffffe0
   17ccc:	str	r3, [fp, #-36]	; 0xffffffdc
   17cd0:	movw	r0, #0
   17cd4:	str	r0, [fp, #-44]	; 0xffffffd4
   17cd8:	str	r0, [fp, #-48]	; 0xffffffd0
   17cdc:	str	r0, [fp, #-52]	; 0xffffffcc
   17ce0:	str	r0, [fp, #-56]	; 0xffffffc8
   17ce4:	movw	r0, #0
   17ce8:	strb	r0, [fp, #-57]	; 0xffffffc7
   17cec:	str	ip, [sp, #72]	; 0x48
   17cf0:	str	lr, [sp, #68]	; 0x44
   17cf4:	str	r4, [sp, #64]	; 0x40
   17cf8:	str	r5, [sp, #60]	; 0x3c
   17cfc:	str	r6, [sp, #56]	; 0x38
   17d00:	bl	114d0 <__ctype_get_mb_cur_max@plt>
   17d04:	cmp	r0, #1
   17d08:	movw	r0, #0
   17d0c:	moveq	r0, #1
   17d10:	and	r0, r0, #1
   17d14:	strb	r0, [fp, #-58]	; 0xffffffc6
   17d18:	ldr	r0, [fp, #12]
   17d1c:	and	r0, r0, #2
   17d20:	cmp	r0, #0
   17d24:	movw	r0, #0
   17d28:	movne	r0, #1
   17d2c:	and	r0, r0, #1
   17d30:	strb	r0, [fp, #-59]	; 0xffffffc5
   17d34:	movw	r0, #0
   17d38:	strb	r0, [fp, #-60]	; 0xffffffc4
   17d3c:	strb	r0, [fp, #-61]	; 0xffffffc3
   17d40:	movw	r0, #1
   17d44:	strb	r0, [fp, #-62]	; 0xffffffc2
   17d48:	ldr	r0, [fp, #8]
   17d4c:	cmp	r0, #10
   17d50:	str	r0, [sp, #52]	; 0x34
   17d54:	bhi	17f7c <__assert_fail@plt+0x6848>
   17d58:	add	r0, pc, #8
   17d5c:	ldr	r1, [sp, #52]	; 0x34
   17d60:	ldr	r0, [r0, r1, lsl #2]
   17d64:	mov	pc, r0
   17d68:	andeq	r7, r1, r0, ror pc
   17d6c:	andeq	r7, r1, ip, ror #29
   17d70:	andeq	r7, r1, ip, lsl #30
   17d74:	andeq	r7, r1, r4, ror #29
   17d78:	strdeq	r7, [r1], -r4
   17d7c:	andeq	r7, r1, r4, lsr #27
   17d80:	muleq	r1, r4, sp
   17d84:	andeq	r7, r1, r8, lsl #28
   17d88:	andeq	r7, r1, ip, lsl lr
   17d8c:	andeq	r7, r1, ip, lsl lr
   17d90:	andeq	r7, r1, ip, lsl lr
   17d94:	movw	r0, #5
   17d98:	str	r0, [fp, #8]
   17d9c:	movw	r0, #1
   17da0:	strb	r0, [fp, #-59]	; 0xffffffc5
   17da4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17da8:	tst	r0, #1
   17dac:	bne	17de8 <__assert_fail@plt+0x66b4>
   17db0:	b	17db4 <__assert_fail@plt+0x6680>
   17db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17db8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17dbc:	cmp	r0, r1
   17dc0:	bcs	17dd8 <__assert_fail@plt+0x66a4>
   17dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17dcc:	add	r0, r0, r1
   17dd0:	movw	r1, #34	; 0x22
   17dd4:	strb	r1, [r0]
   17dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ddc:	add	r0, r0, #1
   17de0:	str	r0, [fp, #-44]	; 0xffffffd4
   17de4:	b	17de8 <__assert_fail@plt+0x66b4>
   17de8:	movw	r0, #1
   17dec:	strb	r0, [fp, #-57]	; 0xffffffc7
   17df0:	movw	r0, #13928	; 0x3668
   17df4:	movt	r0, #2
   17df8:	str	r0, [fp, #-52]	; 0xffffffcc
   17dfc:	movw	r0, #1
   17e00:	str	r0, [fp, #-56]	; 0xffffffc8
   17e04:	b	17f80 <__assert_fail@plt+0x684c>
   17e08:	movw	r0, #1
   17e0c:	strb	r0, [fp, #-57]	; 0xffffffc7
   17e10:	movw	r0, #0
   17e14:	strb	r0, [fp, #-59]	; 0xffffffc5
   17e18:	b	17f80 <__assert_fail@plt+0x684c>
   17e1c:	ldr	r0, [fp, #8]
   17e20:	cmp	r0, #10
   17e24:	beq	17e50 <__assert_fail@plt+0x671c>
   17e28:	ldr	r1, [fp, #8]
   17e2c:	movw	r0, #14831	; 0x39ef
   17e30:	movt	r0, #2
   17e34:	bl	19e94 <__assert_fail@plt+0x8760>
   17e38:	str	r0, [fp, #20]
   17e3c:	ldr	r1, [fp, #8]
   17e40:	movw	r0, #14833	; 0x39f1
   17e44:	movt	r0, #2
   17e48:	bl	19e94 <__assert_fail@plt+0x8760>
   17e4c:	str	r0, [fp, #24]
   17e50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17e54:	tst	r0, #1
   17e58:	bne	17ec4 <__assert_fail@plt+0x6790>
   17e5c:	ldr	r0, [fp, #20]
   17e60:	str	r0, [fp, #-52]	; 0xffffffcc
   17e64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17e68:	ldrsb	r0, [r0]
   17e6c:	cmp	r0, #0
   17e70:	beq	17ec0 <__assert_fail@plt+0x678c>
   17e74:	b	17e78 <__assert_fail@plt+0x6744>
   17e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e80:	cmp	r0, r1
   17e84:	bcs	17ea0 <__assert_fail@plt+0x676c>
   17e88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17e8c:	ldrb	r0, [r0]
   17e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e94:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17e98:	add	r1, r1, r2
   17e9c:	strb	r0, [r1]
   17ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ea4:	add	r0, r0, #1
   17ea8:	str	r0, [fp, #-44]	; 0xffffffd4
   17eac:	b	17eb0 <__assert_fail@plt+0x677c>
   17eb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17eb4:	add	r0, r0, #1
   17eb8:	str	r0, [fp, #-52]	; 0xffffffcc
   17ebc:	b	17e64 <__assert_fail@plt+0x6730>
   17ec0:	b	17ec4 <__assert_fail@plt+0x6790>
   17ec4:	movw	r0, #1
   17ec8:	strb	r0, [fp, #-57]	; 0xffffffc7
   17ecc:	ldr	r0, [fp, #24]
   17ed0:	str	r0, [fp, #-52]	; 0xffffffcc
   17ed4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17ed8:	bl	1159c <strlen@plt>
   17edc:	str	r0, [fp, #-56]	; 0xffffffc8
   17ee0:	b	17f80 <__assert_fail@plt+0x684c>
   17ee4:	movw	r0, #1
   17ee8:	strb	r0, [fp, #-57]	; 0xffffffc7
   17eec:	movw	r0, #1
   17ef0:	strb	r0, [fp, #-59]	; 0xffffffc5
   17ef4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17ef8:	tst	r0, #1
   17efc:	bne	17f08 <__assert_fail@plt+0x67d4>
   17f00:	movw	r0, #1
   17f04:	strb	r0, [fp, #-57]	; 0xffffffc7
   17f08:	b	17f0c <__assert_fail@plt+0x67d8>
   17f0c:	movw	r0, #2
   17f10:	str	r0, [fp, #8]
   17f14:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17f18:	tst	r0, #1
   17f1c:	bne	17f58 <__assert_fail@plt+0x6824>
   17f20:	b	17f24 <__assert_fail@plt+0x67f0>
   17f24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17f2c:	cmp	r0, r1
   17f30:	bcs	17f48 <__assert_fail@plt+0x6814>
   17f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17f3c:	add	r0, r0, r1
   17f40:	movw	r1, #39	; 0x27
   17f44:	strb	r1, [r0]
   17f48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f4c:	add	r0, r0, #1
   17f50:	str	r0, [fp, #-44]	; 0xffffffd4
   17f54:	b	17f58 <__assert_fail@plt+0x6824>
   17f58:	movw	r0, #14833	; 0x39f1
   17f5c:	movt	r0, #2
   17f60:	str	r0, [fp, #-52]	; 0xffffffcc
   17f64:	movw	r0, #1
   17f68:	str	r0, [fp, #-56]	; 0xffffffc8
   17f6c:	b	17f80 <__assert_fail@plt+0x684c>
   17f70:	movw	r0, #0
   17f74:	strb	r0, [fp, #-59]	; 0xffffffc5
   17f78:	b	17f80 <__assert_fail@plt+0x684c>
   17f7c:	bl	11710 <abort@plt>
   17f80:	movw	r0, #0
   17f84:	str	r0, [fp, #-40]	; 0xffffffd8
   17f88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f8c:	cmn	r0, #1
   17f90:	bne	17fbc <__assert_fail@plt+0x6888>
   17f94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f9c:	add	r0, r0, r1
   17fa0:	ldrb	r0, [r0]
   17fa4:	cmp	r0, #0
   17fa8:	movw	r0, #0
   17fac:	moveq	r0, #1
   17fb0:	and	r0, r0, #1
   17fb4:	str	r0, [sp, #48]	; 0x30
   17fb8:	b	17fd8 <__assert_fail@plt+0x68a4>
   17fbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17fc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17fc4:	cmp	r0, r1
   17fc8:	movw	r0, #0
   17fcc:	moveq	r0, #1
   17fd0:	and	r0, r0, #1
   17fd4:	str	r0, [sp, #48]	; 0x30
   17fd8:	ldr	r0, [sp, #48]	; 0x30
   17fdc:	cmp	r0, #0
   17fe0:	movw	r0, #0
   17fe4:	movne	r0, #1
   17fe8:	mvn	r1, #0
   17fec:	eor	r0, r0, r1
   17ff0:	tst	r0, #1
   17ff4:	beq	191e0 <__assert_fail@plt+0x7aac>
   17ff8:	movw	r0, #0
   17ffc:	strb	r0, [fp, #-65]	; 0xffffffbf
   18000:	strb	r0, [fp, #-66]	; 0xffffffbe
   18004:	strb	r0, [fp, #-67]	; 0xffffffbd
   18008:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1800c:	tst	r0, #1
   18010:	beq	180bc <__assert_fail@plt+0x6988>
   18014:	ldr	r0, [fp, #8]
   18018:	cmp	r0, #2
   1801c:	beq	180bc <__assert_fail@plt+0x6988>
   18020:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18024:	cmp	r0, #0
   18028:	beq	180bc <__assert_fail@plt+0x6988>
   1802c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18030:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18034:	add	r0, r0, r1
   18038:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1803c:	cmn	r1, #1
   18040:	str	r0, [sp, #44]	; 0x2c
   18044:	bne	1806c <__assert_fail@plt+0x6938>
   18048:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1804c:	movw	r1, #1
   18050:	cmp	r1, r0
   18054:	bcs	1806c <__assert_fail@plt+0x6938>
   18058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1805c:	bl	1159c <strlen@plt>
   18060:	str	r0, [fp, #-36]	; 0xffffffdc
   18064:	str	r0, [sp, #40]	; 0x28
   18068:	b	18074 <__assert_fail@plt+0x6940>
   1806c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18070:	str	r0, [sp, #40]	; 0x28
   18074:	ldr	r0, [sp, #40]	; 0x28
   18078:	ldr	r1, [sp, #44]	; 0x2c
   1807c:	cmp	r1, r0
   18080:	bhi	180bc <__assert_fail@plt+0x6988>
   18084:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18088:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1808c:	add	r0, r0, r1
   18090:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18094:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18098:	bl	11458 <memcmp@plt>
   1809c:	cmp	r0, #0
   180a0:	bne	180bc <__assert_fail@plt+0x6988>
   180a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   180a8:	tst	r0, #1
   180ac:	beq	180b4 <__assert_fail@plt+0x6980>
   180b0:	b	19360 <__assert_fail@plt+0x7c2c>
   180b4:	movw	r0, #1
   180b8:	strb	r0, [fp, #-65]	; 0xffffffbf
   180bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   180c4:	ldrb	r0, [r0, r1]
   180c8:	strb	r0, [fp, #-63]	; 0xffffffc1
   180cc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   180d0:	mov	r1, r0
   180d4:	cmp	r0, #126	; 0x7e
   180d8:	str	r1, [sp, #36]	; 0x24
   180dc:	bhi	1894c <__assert_fail@plt+0x7218>
   180e0:	add	r0, pc, #8
   180e4:	ldr	r1, [sp, #36]	; 0x24
   180e8:	ldr	r0, [r0, r1, lsl #2]
   180ec:	mov	pc, r0
   180f0:	andeq	r8, r1, ip, ror #5
   180f4:	andeq	r8, r1, ip, asr #18
   180f8:	andeq	r8, r1, ip, asr #18
   180fc:	andeq	r8, r1, ip, asr #18
   18100:	andeq	r8, r1, ip, asr #18
   18104:	andeq	r8, r1, ip, asr #18
   18108:	andeq	r8, r1, ip, asr #18
   1810c:	strdeq	r8, [r1], -r4
   18110:	andeq	r8, r1, r0, lsl #14
   18114:	andeq	r8, r1, r0, lsr r7
   18118:	andeq	r8, r1, r8, lsl r7
   1811c:	andeq	r8, r1, ip, lsr r7
   18120:	andeq	r8, r1, ip, lsl #14
   18124:	andeq	r8, r1, r4, lsr #14
   18128:	andeq	r8, r1, ip, asr #18
   1812c:	andeq	r8, r1, ip, asr #18
   18130:	andeq	r8, r1, ip, asr #18
   18134:	andeq	r8, r1, ip, asr #18
   18138:	andeq	r8, r1, ip, asr #18
   1813c:	andeq	r8, r1, ip, asr #18
   18140:	andeq	r8, r1, ip, asr #18
   18144:	andeq	r8, r1, ip, asr #18
   18148:	andeq	r8, r1, ip, asr #18
   1814c:	andeq	r8, r1, ip, asr #18
   18150:	andeq	r8, r1, ip, asr #18
   18154:	andeq	r8, r1, ip, asr #18
   18158:	andeq	r8, r1, ip, asr #18
   1815c:	andeq	r8, r1, ip, asr #18
   18160:	andeq	r8, r1, ip, asr #18
   18164:	andeq	r8, r1, ip, asr #18
   18168:	andeq	r8, r1, ip, asr #18
   1816c:	andeq	r8, r1, ip, asr #18
   18170:	andeq	r8, r1, r0, lsr #16
   18174:	andeq	r8, r1, r8, lsr #16
   18178:	andeq	r8, r1, r8, lsr #16
   1817c:	andeq	r8, r1, ip, lsl #16
   18180:	andeq	r8, r1, r8, lsr #16
   18184:	andeq	r8, r1, r0, asr #18
   18188:	andeq	r8, r1, r8, lsr #16
   1818c:	andeq	r8, r1, r8, asr #16
   18190:	andeq	r8, r1, r8, lsr #16
   18194:	andeq	r8, r1, r8, lsr #16
   18198:	andeq	r8, r1, r8, lsr #16
   1819c:	andeq	r8, r1, r0, asr #18
   181a0:	andeq	r8, r1, r0, asr #18
   181a4:	andeq	r8, r1, r0, asr #18
   181a8:	andeq	r8, r1, r0, asr #18
   181ac:	andeq	r8, r1, r0, asr #18
   181b0:	andeq	r8, r1, r0, asr #18
   181b4:	andeq	r8, r1, r0, asr #18
   181b8:	andeq	r8, r1, r0, asr #18
   181bc:	andeq	r8, r1, r0, asr #18
   181c0:	andeq	r8, r1, r0, asr #18
   181c4:	andeq	r8, r1, r0, asr #18
   181c8:	andeq	r8, r1, r0, asr #18
   181cc:	andeq	r8, r1, r0, asr #18
   181d0:	andeq	r8, r1, r0, asr #18
   181d4:	andeq	r8, r1, r0, asr #18
   181d8:	andeq	r8, r1, r0, asr #18
   181dc:	andeq	r8, r1, r8, lsr #16
   181e0:	andeq	r8, r1, r8, lsr #16
   181e4:	andeq	r8, r1, r8, lsr #16
   181e8:	andeq	r8, r1, r8, lsr #16
   181ec:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   181f0:	andeq	r8, r1, ip, asr #18
   181f4:	andeq	r8, r1, r0, asr #18
   181f8:	andeq	r8, r1, r0, asr #18
   181fc:	andeq	r8, r1, r0, asr #18
   18200:	andeq	r8, r1, r0, asr #18
   18204:	andeq	r8, r1, r0, asr #18
   18208:	andeq	r8, r1, r0, asr #18
   1820c:	andeq	r8, r1, r0, asr #18
   18210:	andeq	r8, r1, r0, asr #18
   18214:	andeq	r8, r1, r0, asr #18
   18218:	andeq	r8, r1, r0, asr #18
   1821c:	andeq	r8, r1, r0, asr #18
   18220:	andeq	r8, r1, r0, asr #18
   18224:	andeq	r8, r1, r0, asr #18
   18228:	andeq	r8, r1, r0, asr #18
   1822c:	andeq	r8, r1, r0, asr #18
   18230:	andeq	r8, r1, r0, asr #18
   18234:	andeq	r8, r1, r0, asr #18
   18238:	andeq	r8, r1, r0, asr #18
   1823c:	andeq	r8, r1, r0, asr #18
   18240:	andeq	r8, r1, r0, asr #18
   18244:	andeq	r8, r1, r0, asr #18
   18248:	andeq	r8, r1, r0, asr #18
   1824c:	andeq	r8, r1, r0, asr #18
   18250:	andeq	r8, r1, r0, asr #18
   18254:	andeq	r8, r1, r0, asr #18
   18258:	andeq	r8, r1, r0, asr #18
   1825c:	andeq	r8, r1, r8, lsr #16
   18260:	andeq	r8, r1, r8, asr #14
   18264:	andeq	r8, r1, r0, asr #18
   18268:	andeq	r8, r1, r8, lsr #16
   1826c:	andeq	r8, r1, r0, asr #18
   18270:	andeq	r8, r1, r8, lsr #16
   18274:	andeq	r8, r1, r0, asr #18
   18278:	andeq	r8, r1, r0, asr #18
   1827c:	andeq	r8, r1, r0, asr #18
   18280:	andeq	r8, r1, r0, asr #18
   18284:	andeq	r8, r1, r0, asr #18
   18288:	andeq	r8, r1, r0, asr #18
   1828c:	andeq	r8, r1, r0, asr #18
   18290:	andeq	r8, r1, r0, asr #18
   18294:	andeq	r8, r1, r0, asr #18
   18298:	andeq	r8, r1, r0, asr #18
   1829c:	andeq	r8, r1, r0, asr #18
   182a0:	andeq	r8, r1, r0, asr #18
   182a4:	andeq	r8, r1, r0, asr #18
   182a8:	andeq	r8, r1, r0, asr #18
   182ac:	andeq	r8, r1, r0, asr #18
   182b0:	andeq	r8, r1, r0, asr #18
   182b4:	andeq	r8, r1, r0, asr #18
   182b8:	andeq	r8, r1, r0, asr #18
   182bc:	andeq	r8, r1, r0, asr #18
   182c0:	andeq	r8, r1, r0, asr #18
   182c4:	andeq	r8, r1, r0, asr #18
   182c8:	andeq	r8, r1, r0, asr #18
   182cc:	andeq	r8, r1, r0, asr #18
   182d0:	andeq	r8, r1, r0, asr #18
   182d4:	andeq	r8, r1, r0, asr #18
   182d8:	andeq	r8, r1, r0, asr #18
   182dc:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   182e0:	andeq	r8, r1, r8, lsr #16
   182e4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   182e8:	andeq	r8, r1, ip, lsl #16
   182ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   182f0:	tst	r0, #1
   182f4:	beq	184dc <__assert_fail@plt+0x6da8>
   182f8:	b	182fc <__assert_fail@plt+0x6bc8>
   182fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18300:	tst	r0, #1
   18304:	beq	1830c <__assert_fail@plt+0x6bd8>
   18308:	b	19360 <__assert_fail@plt+0x7c2c>
   1830c:	movw	r0, #1
   18310:	strb	r0, [fp, #-66]	; 0xffffffbe
   18314:	ldr	r0, [fp, #8]
   18318:	cmp	r0, #2
   1831c:	bne	183d0 <__assert_fail@plt+0x6c9c>
   18320:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   18324:	tst	r0, #1
   18328:	bne	183d0 <__assert_fail@plt+0x6c9c>
   1832c:	b	18330 <__assert_fail@plt+0x6bfc>
   18330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18338:	cmp	r0, r1
   1833c:	bcs	18354 <__assert_fail@plt+0x6c20>
   18340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18344:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18348:	add	r0, r0, r1
   1834c:	movw	r1, #39	; 0x27
   18350:	strb	r1, [r0]
   18354:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18358:	add	r0, r0, #1
   1835c:	str	r0, [fp, #-44]	; 0xffffffd4
   18360:	b	18364 <__assert_fail@plt+0x6c30>
   18364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1836c:	cmp	r0, r1
   18370:	bcs	18388 <__assert_fail@plt+0x6c54>
   18374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1837c:	add	r0, r0, r1
   18380:	movw	r1, #36	; 0x24
   18384:	strb	r1, [r0]
   18388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1838c:	add	r0, r0, #1
   18390:	str	r0, [fp, #-44]	; 0xffffffd4
   18394:	b	18398 <__assert_fail@plt+0x6c64>
   18398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1839c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   183a0:	cmp	r0, r1
   183a4:	bcs	183bc <__assert_fail@plt+0x6c88>
   183a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   183b0:	add	r0, r0, r1
   183b4:	movw	r1, #39	; 0x27
   183b8:	strb	r1, [r0]
   183bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   183c0:	add	r0, r0, #1
   183c4:	str	r0, [fp, #-44]	; 0xffffffd4
   183c8:	movw	r0, #1
   183cc:	strb	r0, [fp, #-60]	; 0xffffffc4
   183d0:	b	183d4 <__assert_fail@plt+0x6ca0>
   183d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   183d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   183dc:	cmp	r0, r1
   183e0:	bcs	183f8 <__assert_fail@plt+0x6cc4>
   183e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   183ec:	add	r0, r0, r1
   183f0:	movw	r1, #92	; 0x5c
   183f4:	strb	r1, [r0]
   183f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   183fc:	add	r0, r0, #1
   18400:	str	r0, [fp, #-44]	; 0xffffffd4
   18404:	b	18408 <__assert_fail@plt+0x6cd4>
   18408:	ldr	r0, [fp, #8]
   1840c:	cmp	r0, #2
   18410:	beq	184d0 <__assert_fail@plt+0x6d9c>
   18414:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18418:	add	r0, r0, #1
   1841c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18420:	cmp	r0, r1
   18424:	bcs	184d0 <__assert_fail@plt+0x6d9c>
   18428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1842c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18430:	add	r1, r1, #1
   18434:	add	r0, r0, r1
   18438:	ldrb	r0, [r0]
   1843c:	movw	r1, #48	; 0x30
   18440:	cmp	r1, r0
   18444:	bgt	184d0 <__assert_fail@plt+0x6d9c>
   18448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1844c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18450:	add	r1, r1, #1
   18454:	add	r0, r0, r1
   18458:	ldrb	r0, [r0]
   1845c:	cmp	r0, #57	; 0x39
   18460:	bgt	184d0 <__assert_fail@plt+0x6d9c>
   18464:	b	18468 <__assert_fail@plt+0x6d34>
   18468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1846c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18470:	cmp	r0, r1
   18474:	bcs	1848c <__assert_fail@plt+0x6d58>
   18478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1847c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18480:	add	r0, r0, r1
   18484:	movw	r1, #48	; 0x30
   18488:	strb	r1, [r0]
   1848c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18490:	add	r0, r0, #1
   18494:	str	r0, [fp, #-44]	; 0xffffffd4
   18498:	b	1849c <__assert_fail@plt+0x6d68>
   1849c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   184a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   184a4:	cmp	r0, r1
   184a8:	bcs	184c0 <__assert_fail@plt+0x6d8c>
   184ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   184b4:	add	r0, r0, r1
   184b8:	movw	r1, #48	; 0x30
   184bc:	strb	r1, [r0]
   184c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   184c4:	add	r0, r0, #1
   184c8:	str	r0, [fp, #-44]	; 0xffffffd4
   184cc:	b	184d0 <__assert_fail@plt+0x6d9c>
   184d0:	movw	r0, #48	; 0x30
   184d4:	strb	r0, [fp, #-63]	; 0xffffffc1
   184d8:	b	184f4 <__assert_fail@plt+0x6dc0>
   184dc:	ldr	r0, [fp, #12]
   184e0:	and	r0, r0, #1
   184e4:	cmp	r0, #0
   184e8:	beq	184f0 <__assert_fail@plt+0x6dbc>
   184ec:	b	191d0 <__assert_fail@plt+0x7a9c>
   184f0:	b	184f4 <__assert_fail@plt+0x6dc0>
   184f4:	b	18f6c <__assert_fail@plt+0x7838>
   184f8:	ldr	r0, [fp, #8]
   184fc:	cmp	r0, #2
   18500:	str	r0, [sp, #32]
   18504:	beq	1851c <__assert_fail@plt+0x6de8>
   18508:	b	1850c <__assert_fail@plt+0x6dd8>
   1850c:	ldr	r0, [sp, #32]
   18510:	cmp	r0, #5
   18514:	beq	18530 <__assert_fail@plt+0x6dfc>
   18518:	b	186ec <__assert_fail@plt+0x6fb8>
   1851c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18520:	tst	r0, #1
   18524:	beq	1852c <__assert_fail@plt+0x6df8>
   18528:	b	19360 <__assert_fail@plt+0x7c2c>
   1852c:	b	186f0 <__assert_fail@plt+0x6fbc>
   18530:	ldr	r0, [fp, #12]
   18534:	and	r0, r0, #4
   18538:	cmp	r0, #0
   1853c:	beq	186e8 <__assert_fail@plt+0x6fb4>
   18540:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18544:	add	r0, r0, #2
   18548:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1854c:	cmp	r0, r1
   18550:	bcs	186e8 <__assert_fail@plt+0x6fb4>
   18554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18558:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1855c:	add	r1, r1, #1
   18560:	add	r0, r0, r1
   18564:	ldrb	r0, [r0]
   18568:	cmp	r0, #63	; 0x3f
   1856c:	bne	186e8 <__assert_fail@plt+0x6fb4>
   18570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18574:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18578:	add	r0, r1, r0
   1857c:	ldrb	r0, [r0, #2]
   18580:	mov	r1, r0
   18584:	cmp	r0, #33	; 0x21
   18588:	str	r1, [sp, #28]
   1858c:	beq	185dc <__assert_fail@plt+0x6ea8>
   18590:	b	18594 <__assert_fail@plt+0x6e60>
   18594:	ldr	r0, [sp, #28]
   18598:	sub	r1, r0, #39	; 0x27
   1859c:	cmp	r1, #3
   185a0:	bcc	185dc <__assert_fail@plt+0x6ea8>
   185a4:	b	185a8 <__assert_fail@plt+0x6e74>
   185a8:	ldr	r0, [sp, #28]
   185ac:	cmp	r0, #45	; 0x2d
   185b0:	beq	185dc <__assert_fail@plt+0x6ea8>
   185b4:	b	185b8 <__assert_fail@plt+0x6e84>
   185b8:	ldr	r0, [sp, #28]
   185bc:	cmp	r0, #47	; 0x2f
   185c0:	beq	185dc <__assert_fail@plt+0x6ea8>
   185c4:	b	185c8 <__assert_fail@plt+0x6e94>
   185c8:	ldr	r0, [sp, #28]
   185cc:	sub	r1, r0, #60	; 0x3c
   185d0:	cmp	r1, #2
   185d4:	bhi	186e0 <__assert_fail@plt+0x6fac>
   185d8:	b	185dc <__assert_fail@plt+0x6ea8>
   185dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   185e0:	tst	r0, #1
   185e4:	beq	185ec <__assert_fail@plt+0x6eb8>
   185e8:	b	19360 <__assert_fail@plt+0x7c2c>
   185ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   185f4:	add	r1, r1, #2
   185f8:	add	r0, r0, r1
   185fc:	ldrb	r0, [r0]
   18600:	strb	r0, [fp, #-63]	; 0xffffffc1
   18604:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18608:	add	r0, r0, #2
   1860c:	str	r0, [fp, #-40]	; 0xffffffd8
   18610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18614:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18618:	cmp	r0, r1
   1861c:	bcs	18634 <__assert_fail@plt+0x6f00>
   18620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18624:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18628:	add	r0, r0, r1
   1862c:	movw	r1, #63	; 0x3f
   18630:	strb	r1, [r0]
   18634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18638:	add	r0, r0, #1
   1863c:	str	r0, [fp, #-44]	; 0xffffffd4
   18640:	b	18644 <__assert_fail@plt+0x6f10>
   18644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18648:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1864c:	cmp	r0, r1
   18650:	bcs	18668 <__assert_fail@plt+0x6f34>
   18654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18658:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1865c:	add	r0, r0, r1
   18660:	movw	r1, #34	; 0x22
   18664:	strb	r1, [r0]
   18668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1866c:	add	r0, r0, #1
   18670:	str	r0, [fp, #-44]	; 0xffffffd4
   18674:	b	18678 <__assert_fail@plt+0x6f44>
   18678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1867c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18680:	cmp	r0, r1
   18684:	bcs	1869c <__assert_fail@plt+0x6f68>
   18688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1868c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18690:	add	r0, r0, r1
   18694:	movw	r1, #34	; 0x22
   18698:	strb	r1, [r0]
   1869c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   186a0:	add	r0, r0, #1
   186a4:	str	r0, [fp, #-44]	; 0xffffffd4
   186a8:	b	186ac <__assert_fail@plt+0x6f78>
   186ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   186b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   186b4:	cmp	r0, r1
   186b8:	bcs	186d0 <__assert_fail@plt+0x6f9c>
   186bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   186c4:	add	r0, r0, r1
   186c8:	movw	r1, #63	; 0x3f
   186cc:	strb	r1, [r0]
   186d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   186d4:	add	r0, r0, #1
   186d8:	str	r0, [fp, #-44]	; 0xffffffd4
   186dc:	b	186e4 <__assert_fail@plt+0x6fb0>
   186e0:	b	186e4 <__assert_fail@plt+0x6fb0>
   186e4:	b	186e8 <__assert_fail@plt+0x6fb4>
   186e8:	b	186f0 <__assert_fail@plt+0x6fbc>
   186ec:	b	186f0 <__assert_fail@plt+0x6fbc>
   186f0:	b	18f6c <__assert_fail@plt+0x7838>
   186f4:	movw	r0, #97	; 0x61
   186f8:	strb	r0, [fp, #-64]	; 0xffffffc0
   186fc:	b	187bc <__assert_fail@plt+0x7088>
   18700:	movw	r0, #98	; 0x62
   18704:	strb	r0, [fp, #-64]	; 0xffffffc0
   18708:	b	187bc <__assert_fail@plt+0x7088>
   1870c:	movw	r0, #102	; 0x66
   18710:	strb	r0, [fp, #-64]	; 0xffffffc0
   18714:	b	187bc <__assert_fail@plt+0x7088>
   18718:	movw	r0, #110	; 0x6e
   1871c:	strb	r0, [fp, #-64]	; 0xffffffc0
   18720:	b	1879c <__assert_fail@plt+0x7068>
   18724:	movw	r0, #114	; 0x72
   18728:	strb	r0, [fp, #-64]	; 0xffffffc0
   1872c:	b	1879c <__assert_fail@plt+0x7068>
   18730:	movw	r0, #116	; 0x74
   18734:	strb	r0, [fp, #-64]	; 0xffffffc0
   18738:	b	1879c <__assert_fail@plt+0x7068>
   1873c:	movw	r0, #118	; 0x76
   18740:	strb	r0, [fp, #-64]	; 0xffffffc0
   18744:	b	187bc <__assert_fail@plt+0x7088>
   18748:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1874c:	strb	r0, [fp, #-64]	; 0xffffffc0
   18750:	ldr	r0, [fp, #8]
   18754:	cmp	r0, #2
   18758:	bne	18770 <__assert_fail@plt+0x703c>
   1875c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18760:	tst	r0, #1
   18764:	beq	1876c <__assert_fail@plt+0x7038>
   18768:	b	19360 <__assert_fail@plt+0x7c2c>
   1876c:	b	190f4 <__assert_fail@plt+0x79c0>
   18770:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18774:	tst	r0, #1
   18778:	beq	18798 <__assert_fail@plt+0x7064>
   1877c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18780:	tst	r0, #1
   18784:	beq	18798 <__assert_fail@plt+0x7064>
   18788:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1878c:	cmp	r0, #0
   18790:	beq	18798 <__assert_fail@plt+0x7064>
   18794:	b	190f4 <__assert_fail@plt+0x79c0>
   18798:	b	1879c <__assert_fail@plt+0x7068>
   1879c:	ldr	r0, [fp, #8]
   187a0:	cmp	r0, #2
   187a4:	bne	187b8 <__assert_fail@plt+0x7084>
   187a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   187ac:	tst	r0, #1
   187b0:	beq	187b8 <__assert_fail@plt+0x7084>
   187b4:	b	19360 <__assert_fail@plt+0x7c2c>
   187b8:	b	187bc <__assert_fail@plt+0x7088>
   187bc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   187c0:	tst	r0, #1
   187c4:	beq	187d4 <__assert_fail@plt+0x70a0>
   187c8:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   187cc:	strb	r0, [fp, #-63]	; 0xffffffc1
   187d0:	b	18fe0 <__assert_fail@plt+0x78ac>
   187d4:	b	18f6c <__assert_fail@plt+0x7838>
   187d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   187dc:	cmn	r0, #1
   187e0:	bne	187f8 <__assert_fail@plt+0x70c4>
   187e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187e8:	ldrb	r0, [r0, #1]
   187ec:	cmp	r0, #0
   187f0:	beq	18808 <__assert_fail@plt+0x70d4>
   187f4:	b	18804 <__assert_fail@plt+0x70d0>
   187f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   187fc:	cmp	r0, #1
   18800:	beq	18808 <__assert_fail@plt+0x70d4>
   18804:	b	18f6c <__assert_fail@plt+0x7838>
   18808:	b	1880c <__assert_fail@plt+0x70d8>
   1880c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18810:	cmp	r0, #0
   18814:	beq	1881c <__assert_fail@plt+0x70e8>
   18818:	b	18f6c <__assert_fail@plt+0x7838>
   1881c:	b	18820 <__assert_fail@plt+0x70ec>
   18820:	movw	r0, #1
   18824:	strb	r0, [fp, #-67]	; 0xffffffbd
   18828:	ldr	r0, [fp, #8]
   1882c:	cmp	r0, #2
   18830:	bne	18844 <__assert_fail@plt+0x7110>
   18834:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18838:	tst	r0, #1
   1883c:	beq	18844 <__assert_fail@plt+0x7110>
   18840:	b	19360 <__assert_fail@plt+0x7c2c>
   18844:	b	18f6c <__assert_fail@plt+0x7838>
   18848:	movw	r0, #1
   1884c:	strb	r0, [fp, #-61]	; 0xffffffc3
   18850:	strb	r0, [fp, #-67]	; 0xffffffbd
   18854:	ldr	r0, [fp, #8]
   18858:	cmp	r0, #2
   1885c:	bne	1893c <__assert_fail@plt+0x7208>
   18860:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18864:	tst	r0, #1
   18868:	beq	18870 <__assert_fail@plt+0x713c>
   1886c:	b	19360 <__assert_fail@plt+0x7c2c>
   18870:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18874:	cmp	r0, #0
   18878:	beq	18898 <__assert_fail@plt+0x7164>
   1887c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18880:	cmp	r0, #0
   18884:	bne	18898 <__assert_fail@plt+0x7164>
   18888:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1888c:	str	r0, [fp, #-48]	; 0xffffffd0
   18890:	movw	r0, #0
   18894:	str	r0, [fp, #-28]	; 0xffffffe4
   18898:	b	1889c <__assert_fail@plt+0x7168>
   1889c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   188a4:	cmp	r0, r1
   188a8:	bcs	188c0 <__assert_fail@plt+0x718c>
   188ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   188b4:	add	r0, r0, r1
   188b8:	movw	r1, #39	; 0x27
   188bc:	strb	r1, [r0]
   188c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188c4:	add	r0, r0, #1
   188c8:	str	r0, [fp, #-44]	; 0xffffffd4
   188cc:	b	188d0 <__assert_fail@plt+0x719c>
   188d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   188d8:	cmp	r0, r1
   188dc:	bcs	188f4 <__assert_fail@plt+0x71c0>
   188e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   188e8:	add	r0, r0, r1
   188ec:	movw	r1, #92	; 0x5c
   188f0:	strb	r1, [r0]
   188f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188f8:	add	r0, r0, #1
   188fc:	str	r0, [fp, #-44]	; 0xffffffd4
   18900:	b	18904 <__assert_fail@plt+0x71d0>
   18904:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18908:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1890c:	cmp	r0, r1
   18910:	bcs	18928 <__assert_fail@plt+0x71f4>
   18914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18918:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1891c:	add	r0, r0, r1
   18920:	movw	r1, #39	; 0x27
   18924:	strb	r1, [r0]
   18928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1892c:	add	r0, r0, #1
   18930:	str	r0, [fp, #-44]	; 0xffffffd4
   18934:	movw	r0, #0
   18938:	strb	r0, [fp, #-60]	; 0xffffffc4
   1893c:	b	18f6c <__assert_fail@plt+0x7838>
   18940:	movw	r0, #1
   18944:	strb	r0, [fp, #-67]	; 0xffffffbd
   18948:	b	18f6c <__assert_fail@plt+0x7838>
   1894c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   18950:	tst	r0, #1
   18954:	beq	18994 <__assert_fail@plt+0x7260>
   18958:	mov	r0, #1
   1895c:	str	r0, [fp, #-72]	; 0xffffffb8
   18960:	bl	11578 <__ctype_b_loc@plt>
   18964:	ldr	r0, [r0]
   18968:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1896c:	mov	r2, r1
   18970:	add	r0, r0, r1, lsl #1
   18974:	ldrh	r0, [r0]
   18978:	and	r0, r0, #16384	; 0x4000
   1897c:	cmp	r0, #0
   18980:	movw	r0, #0
   18984:	movne	r0, #1
   18988:	and	r0, r0, #1
   1898c:	strb	r0, [fp, #-73]	; 0xffffffb7
   18990:	b	18c20 <__assert_fail@plt+0x74ec>
   18994:	sub	r0, fp, #84	; 0x54
   18998:	movw	r1, #0
   1899c:	and	r1, r1, #255	; 0xff
   189a0:	movw	r2, #8
   189a4:	bl	11608 <memset@plt>
   189a8:	movw	r0, #0
   189ac:	str	r0, [fp, #-72]	; 0xffffffb8
   189b0:	movw	r0, #1
   189b4:	strb	r0, [fp, #-73]	; 0xffffffb7
   189b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189bc:	cmn	r0, #1
   189c0:	bne	189d0 <__assert_fail@plt+0x729c>
   189c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189c8:	bl	1159c <strlen@plt>
   189cc:	str	r0, [fp, #-36]	; 0xffffffdc
   189d0:	b	189d4 <__assert_fail@plt+0x72a0>
   189d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   189dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   189e0:	add	r1, r1, r2
   189e4:	add	r1, r0, r1
   189e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   189f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   189f4:	add	r2, r2, r3
   189f8:	sub	r2, r0, r2
   189fc:	add	r0, sp, #88	; 0x58
   18a00:	sub	r3, fp, #84	; 0x54
   18a04:	bl	2043c <__assert_fail@plt+0xed08>
   18a08:	str	r0, [sp, #84]	; 0x54
   18a0c:	ldr	r0, [sp, #84]	; 0x54
   18a10:	cmp	r0, #0
   18a14:	bne	18a1c <__assert_fail@plt+0x72e8>
   18a18:	b	18c1c <__assert_fail@plt+0x74e8>
   18a1c:	ldr	r0, [sp, #84]	; 0x54
   18a20:	cmn	r0, #1
   18a24:	bne	18a34 <__assert_fail@plt+0x7300>
   18a28:	movw	r0, #0
   18a2c:	strb	r0, [fp, #-73]	; 0xffffffb7
   18a30:	b	18c1c <__assert_fail@plt+0x74e8>
   18a34:	ldr	r0, [sp, #84]	; 0x54
   18a38:	cmn	r0, #2
   18a3c:	bne	18ab0 <__assert_fail@plt+0x737c>
   18a40:	movw	r0, #0
   18a44:	strb	r0, [fp, #-73]	; 0xffffffb7
   18a48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a4c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18a50:	add	r0, r0, r1
   18a54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a58:	cmp	r0, r1
   18a5c:	movw	r0, #0
   18a60:	str	r0, [sp, #24]
   18a64:	bcs	18a90 <__assert_fail@plt+0x735c>
   18a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18a74:	add	r1, r1, r2
   18a78:	add	r0, r0, r1
   18a7c:	ldrb	r0, [r0]
   18a80:	cmp	r0, #0
   18a84:	movw	r0, #0
   18a88:	movne	r0, #1
   18a8c:	str	r0, [sp, #24]
   18a90:	ldr	r0, [sp, #24]
   18a94:	tst	r0, #1
   18a98:	beq	18aac <__assert_fail@plt+0x7378>
   18a9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18aa0:	add	r0, r0, #1
   18aa4:	str	r0, [fp, #-72]	; 0xffffffb8
   18aa8:	b	18a48 <__assert_fail@plt+0x7314>
   18aac:	b	18c1c <__assert_fail@plt+0x74e8>
   18ab0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18ab4:	tst	r0, #1
   18ab8:	beq	18bc4 <__assert_fail@plt+0x7490>
   18abc:	ldr	r0, [fp, #8]
   18ac0:	cmp	r0, #2
   18ac4:	bne	18bc4 <__assert_fail@plt+0x7490>
   18ac8:	movw	r0, #1
   18acc:	str	r0, [sp, #80]	; 0x50
   18ad0:	ldr	r0, [sp, #80]	; 0x50
   18ad4:	ldr	r1, [sp, #84]	; 0x54
   18ad8:	cmp	r0, r1
   18adc:	bcs	18bc0 <__assert_fail@plt+0x748c>
   18ae0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ae4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ae8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18aec:	add	r1, r1, r2
   18af0:	ldr	r2, [sp, #80]	; 0x50
   18af4:	add	r1, r1, r2
   18af8:	ldrb	r0, [r0, r1]
   18afc:	sub	r0, r0, #91	; 0x5b
   18b00:	cmp	r0, #33	; 0x21
   18b04:	str	r0, [sp, #20]
   18b08:	bhi	18ba8 <__assert_fail@plt+0x7474>
   18b0c:	add	r0, pc, #8
   18b10:	ldr	r1, [sp, #20]
   18b14:	ldr	r0, [r0, r1, lsl #2]
   18b18:	mov	pc, r0
   18b1c:	andeq	r8, r1, r4, lsr #23
   18b20:	andeq	r8, r1, r4, lsr #23
   18b24:	andeq	r8, r1, r8, lsr #23
   18b28:	andeq	r8, r1, r4, lsr #23
   18b2c:	andeq	r8, r1, r8, lsr #23
   18b30:	andeq	r8, r1, r4, lsr #23
   18b34:	andeq	r8, r1, r8, lsr #23
   18b38:	andeq	r8, r1, r8, lsr #23
   18b3c:	andeq	r8, r1, r8, lsr #23
   18b40:	andeq	r8, r1, r8, lsr #23
   18b44:	andeq	r8, r1, r8, lsr #23
   18b48:	andeq	r8, r1, r8, lsr #23
   18b4c:	andeq	r8, r1, r8, lsr #23
   18b50:	andeq	r8, r1, r8, lsr #23
   18b54:	andeq	r8, r1, r8, lsr #23
   18b58:	andeq	r8, r1, r8, lsr #23
   18b5c:	andeq	r8, r1, r8, lsr #23
   18b60:	andeq	r8, r1, r8, lsr #23
   18b64:	andeq	r8, r1, r8, lsr #23
   18b68:	andeq	r8, r1, r8, lsr #23
   18b6c:	andeq	r8, r1, r8, lsr #23
   18b70:	andeq	r8, r1, r8, lsr #23
   18b74:	andeq	r8, r1, r8, lsr #23
   18b78:	andeq	r8, r1, r8, lsr #23
   18b7c:	andeq	r8, r1, r8, lsr #23
   18b80:	andeq	r8, r1, r8, lsr #23
   18b84:	andeq	r8, r1, r8, lsr #23
   18b88:	andeq	r8, r1, r8, lsr #23
   18b8c:	andeq	r8, r1, r8, lsr #23
   18b90:	andeq	r8, r1, r8, lsr #23
   18b94:	andeq	r8, r1, r8, lsr #23
   18b98:	andeq	r8, r1, r8, lsr #23
   18b9c:	andeq	r8, r1, r8, lsr #23
   18ba0:	andeq	r8, r1, r4, lsr #23
   18ba4:	b	19360 <__assert_fail@plt+0x7c2c>
   18ba8:	b	18bac <__assert_fail@plt+0x7478>
   18bac:	b	18bb0 <__assert_fail@plt+0x747c>
   18bb0:	ldr	r0, [sp, #80]	; 0x50
   18bb4:	add	r0, r0, #1
   18bb8:	str	r0, [sp, #80]	; 0x50
   18bbc:	b	18ad0 <__assert_fail@plt+0x739c>
   18bc0:	b	18bc4 <__assert_fail@plt+0x7490>
   18bc4:	ldr	r0, [sp, #88]	; 0x58
   18bc8:	bl	11494 <iswprint@plt>
   18bcc:	cmp	r0, #0
   18bd0:	bne	18bdc <__assert_fail@plt+0x74a8>
   18bd4:	movw	r0, #0
   18bd8:	strb	r0, [fp, #-73]	; 0xffffffb7
   18bdc:	ldr	r0, [sp, #84]	; 0x54
   18be0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18be4:	add	r0, r1, r0
   18be8:	str	r0, [fp, #-72]	; 0xffffffb8
   18bec:	b	18bf0 <__assert_fail@plt+0x74bc>
   18bf0:	b	18bf4 <__assert_fail@plt+0x74c0>
   18bf4:	b	18bf8 <__assert_fail@plt+0x74c4>
   18bf8:	sub	r0, fp, #84	; 0x54
   18bfc:	bl	11434 <mbsinit@plt>
   18c00:	cmp	r0, #0
   18c04:	movw	r0, #0
   18c08:	movne	r0, #1
   18c0c:	mvn	r1, #0
   18c10:	eor	r0, r0, r1
   18c14:	tst	r0, #1
   18c18:	bne	189d4 <__assert_fail@plt+0x72a0>
   18c1c:	b	18c20 <__assert_fail@plt+0x74ec>
   18c20:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   18c24:	and	r0, r0, #1
   18c28:	strb	r0, [fp, #-67]	; 0xffffffbd
   18c2c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18c30:	movw	r1, #1
   18c34:	cmp	r1, r0
   18c38:	bcc	18c54 <__assert_fail@plt+0x7520>
   18c3c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18c40:	tst	r0, #1
   18c44:	beq	18f68 <__assert_fail@plt+0x7834>
   18c48:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   18c4c:	tst	r0, #1
   18c50:	bne	18f68 <__assert_fail@plt+0x7834>
   18c54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c58:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18c5c:	add	r0, r0, r1
   18c60:	str	r0, [sp, #76]	; 0x4c
   18c64:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18c68:	tst	r0, #1
   18c6c:	beq	18e1c <__assert_fail@plt+0x76e8>
   18c70:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   18c74:	tst	r0, #1
   18c78:	bne	18e1c <__assert_fail@plt+0x76e8>
   18c7c:	b	18c80 <__assert_fail@plt+0x754c>
   18c80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18c84:	tst	r0, #1
   18c88:	beq	18c90 <__assert_fail@plt+0x755c>
   18c8c:	b	19360 <__assert_fail@plt+0x7c2c>
   18c90:	movw	r0, #1
   18c94:	strb	r0, [fp, #-66]	; 0xffffffbe
   18c98:	ldr	r0, [fp, #8]
   18c9c:	cmp	r0, #2
   18ca0:	bne	18d54 <__assert_fail@plt+0x7620>
   18ca4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   18ca8:	tst	r0, #1
   18cac:	bne	18d54 <__assert_fail@plt+0x7620>
   18cb0:	b	18cb4 <__assert_fail@plt+0x7580>
   18cb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18cb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18cbc:	cmp	r0, r1
   18cc0:	bcs	18cd8 <__assert_fail@plt+0x75a4>
   18cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ccc:	add	r0, r0, r1
   18cd0:	movw	r1, #39	; 0x27
   18cd4:	strb	r1, [r0]
   18cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18cdc:	add	r0, r0, #1
   18ce0:	str	r0, [fp, #-44]	; 0xffffffd4
   18ce4:	b	18ce8 <__assert_fail@plt+0x75b4>
   18ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18cf0:	cmp	r0, r1
   18cf4:	bcs	18d0c <__assert_fail@plt+0x75d8>
   18cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d00:	add	r0, r0, r1
   18d04:	movw	r1, #36	; 0x24
   18d08:	strb	r1, [r0]
   18d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d10:	add	r0, r0, #1
   18d14:	str	r0, [fp, #-44]	; 0xffffffd4
   18d18:	b	18d1c <__assert_fail@plt+0x75e8>
   18d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d24:	cmp	r0, r1
   18d28:	bcs	18d40 <__assert_fail@plt+0x760c>
   18d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d34:	add	r0, r0, r1
   18d38:	movw	r1, #39	; 0x27
   18d3c:	strb	r1, [r0]
   18d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d44:	add	r0, r0, #1
   18d48:	str	r0, [fp, #-44]	; 0xffffffd4
   18d4c:	movw	r0, #1
   18d50:	strb	r0, [fp, #-60]	; 0xffffffc4
   18d54:	b	18d58 <__assert_fail@plt+0x7624>
   18d58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d60:	cmp	r0, r1
   18d64:	bcs	18d7c <__assert_fail@plt+0x7648>
   18d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d70:	add	r0, r0, r1
   18d74:	movw	r1, #92	; 0x5c
   18d78:	strb	r1, [r0]
   18d7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d80:	add	r0, r0, #1
   18d84:	str	r0, [fp, #-44]	; 0xffffffd4
   18d88:	b	18d8c <__assert_fail@plt+0x7658>
   18d8c:	b	18d90 <__assert_fail@plt+0x765c>
   18d90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d98:	cmp	r0, r1
   18d9c:	bcs	18dbc <__assert_fail@plt+0x7688>
   18da0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18da4:	asr	r0, r0, #6
   18da8:	add	r0, r0, #48	; 0x30
   18dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18db0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18db4:	add	r1, r1, r2
   18db8:	strb	r0, [r1]
   18dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18dc0:	add	r0, r0, #1
   18dc4:	str	r0, [fp, #-44]	; 0xffffffd4
   18dc8:	b	18dcc <__assert_fail@plt+0x7698>
   18dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18dd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18dd4:	cmp	r0, r1
   18dd8:	bcs	18dfc <__assert_fail@plt+0x76c8>
   18ddc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18de0:	asr	r0, r0, #3
   18de4:	and	r0, r0, #7
   18de8:	add	r0, r0, #48	; 0x30
   18dec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18df0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18df4:	add	r1, r1, r2
   18df8:	strb	r0, [r1]
   18dfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e00:	add	r0, r0, #1
   18e04:	str	r0, [fp, #-44]	; 0xffffffd4
   18e08:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18e0c:	and	r0, r0, #7
   18e10:	add	r0, r0, #48	; 0x30
   18e14:	strb	r0, [fp, #-63]	; 0xffffffc1
   18e18:	b	18e68 <__assert_fail@plt+0x7734>
   18e1c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   18e20:	tst	r0, #1
   18e24:	beq	18e64 <__assert_fail@plt+0x7730>
   18e28:	b	18e2c <__assert_fail@plt+0x76f8>
   18e2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e34:	cmp	r0, r1
   18e38:	bcs	18e50 <__assert_fail@plt+0x771c>
   18e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18e44:	add	r0, r0, r1
   18e48:	movw	r1, #92	; 0x5c
   18e4c:	strb	r1, [r0]
   18e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e54:	add	r0, r0, #1
   18e58:	str	r0, [fp, #-44]	; 0xffffffd4
   18e5c:	movw	r0, #0
   18e60:	strb	r0, [fp, #-65]	; 0xffffffbf
   18e64:	b	18e68 <__assert_fail@plt+0x7734>
   18e68:	ldr	r0, [sp, #76]	; 0x4c
   18e6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e70:	add	r1, r1, #1
   18e74:	cmp	r0, r1
   18e78:	bhi	18e80 <__assert_fail@plt+0x774c>
   18e7c:	b	18f64 <__assert_fail@plt+0x7830>
   18e80:	b	18e84 <__assert_fail@plt+0x7750>
   18e84:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   18e88:	tst	r0, #1
   18e8c:	beq	18f0c <__assert_fail@plt+0x77d8>
   18e90:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   18e94:	tst	r0, #1
   18e98:	bne	18f0c <__assert_fail@plt+0x77d8>
   18e9c:	b	18ea0 <__assert_fail@plt+0x776c>
   18ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ea8:	cmp	r0, r1
   18eac:	bcs	18ec4 <__assert_fail@plt+0x7790>
   18eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18eb8:	add	r0, r0, r1
   18ebc:	movw	r1, #39	; 0x27
   18ec0:	strb	r1, [r0]
   18ec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ec8:	add	r0, r0, #1
   18ecc:	str	r0, [fp, #-44]	; 0xffffffd4
   18ed0:	b	18ed4 <__assert_fail@plt+0x77a0>
   18ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18edc:	cmp	r0, r1
   18ee0:	bcs	18ef8 <__assert_fail@plt+0x77c4>
   18ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ee8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18eec:	add	r0, r0, r1
   18ef0:	movw	r1, #39	; 0x27
   18ef4:	strb	r1, [r0]
   18ef8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18efc:	add	r0, r0, #1
   18f00:	str	r0, [fp, #-44]	; 0xffffffd4
   18f04:	movw	r0, #0
   18f08:	strb	r0, [fp, #-60]	; 0xffffffc4
   18f0c:	b	18f10 <__assert_fail@plt+0x77dc>
   18f10:	b	18f14 <__assert_fail@plt+0x77e0>
   18f14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18f1c:	cmp	r0, r1
   18f20:	bcs	18f38 <__assert_fail@plt+0x7804>
   18f24:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18f28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18f30:	add	r1, r1, r2
   18f34:	strb	r0, [r1]
   18f38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f3c:	add	r0, r0, #1
   18f40:	str	r0, [fp, #-44]	; 0xffffffd4
   18f44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f4c:	add	r1, r1, #1
   18f50:	str	r1, [fp, #-40]	; 0xffffffd8
   18f54:	add	r0, r0, r1
   18f58:	ldrb	r0, [r0]
   18f5c:	strb	r0, [fp, #-63]	; 0xffffffc1
   18f60:	b	18c64 <__assert_fail@plt+0x7530>
   18f64:	b	190f4 <__assert_fail@plt+0x79c0>
   18f68:	b	18f6c <__assert_fail@plt+0x7838>
   18f6c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18f70:	tst	r0, #1
   18f74:	beq	18f84 <__assert_fail@plt+0x7850>
   18f78:	ldr	r0, [fp, #8]
   18f7c:	cmp	r0, #2
   18f80:	bne	18f90 <__assert_fail@plt+0x785c>
   18f84:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18f88:	tst	r0, #1
   18f8c:	beq	18fcc <__assert_fail@plt+0x7898>
   18f90:	ldr	r0, [fp, #16]
   18f94:	movw	r1, #0
   18f98:	cmp	r0, r1
   18f9c:	beq	18fcc <__assert_fail@plt+0x7898>
   18fa0:	ldr	r0, [fp, #16]
   18fa4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   18fa8:	lsr	r1, r1, #5
   18fac:	add	r0, r0, r1, lsl #2
   18fb0:	ldr	r0, [r0]
   18fb4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   18fb8:	and	r1, r1, #31
   18fbc:	lsr	r0, r0, r1
   18fc0:	and	r0, r0, #1
   18fc4:	cmp	r0, #0
   18fc8:	bne	18fdc <__assert_fail@plt+0x78a8>
   18fcc:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   18fd0:	tst	r0, #1
   18fd4:	bne	18fdc <__assert_fail@plt+0x78a8>
   18fd8:	b	190f4 <__assert_fail@plt+0x79c0>
   18fdc:	b	18fe0 <__assert_fail@plt+0x78ac>
   18fe0:	b	18fe4 <__assert_fail@plt+0x78b0>
   18fe4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18fe8:	tst	r0, #1
   18fec:	beq	18ff4 <__assert_fail@plt+0x78c0>
   18ff0:	b	19360 <__assert_fail@plt+0x7c2c>
   18ff4:	movw	r0, #1
   18ff8:	strb	r0, [fp, #-66]	; 0xffffffbe
   18ffc:	ldr	r0, [fp, #8]
   19000:	cmp	r0, #2
   19004:	bne	190b8 <__assert_fail@plt+0x7984>
   19008:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1900c:	tst	r0, #1
   19010:	bne	190b8 <__assert_fail@plt+0x7984>
   19014:	b	19018 <__assert_fail@plt+0x78e4>
   19018:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1901c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19020:	cmp	r0, r1
   19024:	bcs	1903c <__assert_fail@plt+0x7908>
   19028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1902c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19030:	add	r0, r0, r1
   19034:	movw	r1, #39	; 0x27
   19038:	strb	r1, [r0]
   1903c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19040:	add	r0, r0, #1
   19044:	str	r0, [fp, #-44]	; 0xffffffd4
   19048:	b	1904c <__assert_fail@plt+0x7918>
   1904c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19050:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19054:	cmp	r0, r1
   19058:	bcs	19070 <__assert_fail@plt+0x793c>
   1905c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19060:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19064:	add	r0, r0, r1
   19068:	movw	r1, #36	; 0x24
   1906c:	strb	r1, [r0]
   19070:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19074:	add	r0, r0, #1
   19078:	str	r0, [fp, #-44]	; 0xffffffd4
   1907c:	b	19080 <__assert_fail@plt+0x794c>
   19080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19084:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19088:	cmp	r0, r1
   1908c:	bcs	190a4 <__assert_fail@plt+0x7970>
   19090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19094:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19098:	add	r0, r0, r1
   1909c:	movw	r1, #39	; 0x27
   190a0:	strb	r1, [r0]
   190a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190a8:	add	r0, r0, #1
   190ac:	str	r0, [fp, #-44]	; 0xffffffd4
   190b0:	movw	r0, #1
   190b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   190b8:	b	190bc <__assert_fail@plt+0x7988>
   190bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   190c4:	cmp	r0, r1
   190c8:	bcs	190e0 <__assert_fail@plt+0x79ac>
   190cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190d4:	add	r0, r0, r1
   190d8:	movw	r1, #92	; 0x5c
   190dc:	strb	r1, [r0]
   190e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190e4:	add	r0, r0, #1
   190e8:	str	r0, [fp, #-44]	; 0xffffffd4
   190ec:	b	190f0 <__assert_fail@plt+0x79bc>
   190f0:	b	190f4 <__assert_fail@plt+0x79c0>
   190f4:	b	190f8 <__assert_fail@plt+0x79c4>
   190f8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   190fc:	tst	r0, #1
   19100:	beq	19180 <__assert_fail@plt+0x7a4c>
   19104:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   19108:	tst	r0, #1
   1910c:	bne	19180 <__assert_fail@plt+0x7a4c>
   19110:	b	19114 <__assert_fail@plt+0x79e0>
   19114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1911c:	cmp	r0, r1
   19120:	bcs	19138 <__assert_fail@plt+0x7a04>
   19124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1912c:	add	r0, r0, r1
   19130:	movw	r1, #39	; 0x27
   19134:	strb	r1, [r0]
   19138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1913c:	add	r0, r0, #1
   19140:	str	r0, [fp, #-44]	; 0xffffffd4
   19144:	b	19148 <__assert_fail@plt+0x7a14>
   19148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1914c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19150:	cmp	r0, r1
   19154:	bcs	1916c <__assert_fail@plt+0x7a38>
   19158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1915c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19160:	add	r0, r0, r1
   19164:	movw	r1, #39	; 0x27
   19168:	strb	r1, [r0]
   1916c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19170:	add	r0, r0, #1
   19174:	str	r0, [fp, #-44]	; 0xffffffd4
   19178:	movw	r0, #0
   1917c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19180:	b	19184 <__assert_fail@plt+0x7a50>
   19184:	b	19188 <__assert_fail@plt+0x7a54>
   19188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1918c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19190:	cmp	r0, r1
   19194:	bcs	191ac <__assert_fail@plt+0x7a78>
   19198:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1919c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   191a4:	add	r1, r1, r2
   191a8:	strb	r0, [r1]
   191ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   191b0:	add	r0, r0, #1
   191b4:	str	r0, [fp, #-44]	; 0xffffffd4
   191b8:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   191bc:	tst	r0, #1
   191c0:	bne	191cc <__assert_fail@plt+0x7a98>
   191c4:	movw	r0, #0
   191c8:	strb	r0, [fp, #-62]	; 0xffffffc2
   191cc:	b	191d0 <__assert_fail@plt+0x7a9c>
   191d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191d4:	add	r0, r0, #1
   191d8:	str	r0, [fp, #-40]	; 0xffffffd8
   191dc:	b	17f88 <__assert_fail@plt+0x6854>
   191e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   191e4:	cmp	r0, #0
   191e8:	bne	19208 <__assert_fail@plt+0x7ad4>
   191ec:	ldr	r0, [fp, #8]
   191f0:	cmp	r0, #2
   191f4:	bne	19208 <__assert_fail@plt+0x7ad4>
   191f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   191fc:	tst	r0, #1
   19200:	beq	19208 <__assert_fail@plt+0x7ad4>
   19204:	b	19360 <__assert_fail@plt+0x7c2c>
   19208:	ldr	r0, [fp, #8]
   1920c:	cmp	r0, #2
   19210:	bne	192b0 <__assert_fail@plt+0x7b7c>
   19214:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19218:	tst	r0, #1
   1921c:	bne	192b0 <__assert_fail@plt+0x7b7c>
   19220:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   19224:	tst	r0, #1
   19228:	beq	192b0 <__assert_fail@plt+0x7b7c>
   1922c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   19230:	tst	r0, #1
   19234:	beq	1927c <__assert_fail@plt+0x7b48>
   19238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1923c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19240:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19248:	ldr	ip, [fp, #12]
   1924c:	ldr	lr, [fp, #16]
   19250:	ldr	r4, [fp, #20]
   19254:	ldr	r5, [fp, #24]
   19258:	movw	r6, #5
   1925c:	str	r6, [sp]
   19260:	str	ip, [sp, #4]
   19264:	str	lr, [sp, #8]
   19268:	str	r4, [sp, #12]
   1926c:	str	r5, [sp, #16]
   19270:	bl	17ca0 <__assert_fail@plt+0x656c>
   19274:	str	r0, [fp, #-20]	; 0xffffffec
   19278:	b	193c8 <__assert_fail@plt+0x7c94>
   1927c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19280:	cmp	r0, #0
   19284:	bne	192a8 <__assert_fail@plt+0x7b74>
   19288:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1928c:	cmp	r0, #0
   19290:	beq	192a8 <__assert_fail@plt+0x7b74>
   19294:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19298:	str	r0, [fp, #-28]	; 0xffffffe4
   1929c:	movw	r0, #0
   192a0:	str	r0, [fp, #-44]	; 0xffffffd4
   192a4:	b	17d48 <__assert_fail@plt+0x6614>
   192a8:	b	192ac <__assert_fail@plt+0x7b78>
   192ac:	b	192b0 <__assert_fail@plt+0x7b7c>
   192b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   192b4:	movw	r1, #0
   192b8:	cmp	r0, r1
   192bc:	beq	19330 <__assert_fail@plt+0x7bfc>
   192c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   192c4:	tst	r0, #1
   192c8:	bne	19330 <__assert_fail@plt+0x7bfc>
   192cc:	b	192d0 <__assert_fail@plt+0x7b9c>
   192d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   192d4:	ldrsb	r0, [r0]
   192d8:	cmp	r0, #0
   192dc:	beq	1932c <__assert_fail@plt+0x7bf8>
   192e0:	b	192e4 <__assert_fail@plt+0x7bb0>
   192e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   192e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192ec:	cmp	r0, r1
   192f0:	bcs	1930c <__assert_fail@plt+0x7bd8>
   192f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   192f8:	ldrb	r0, [r0]
   192fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19300:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19304:	add	r1, r1, r2
   19308:	strb	r0, [r1]
   1930c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19310:	add	r0, r0, #1
   19314:	str	r0, [fp, #-44]	; 0xffffffd4
   19318:	b	1931c <__assert_fail@plt+0x7be8>
   1931c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19320:	add	r0, r0, #1
   19324:	str	r0, [fp, #-52]	; 0xffffffcc
   19328:	b	192d0 <__assert_fail@plt+0x7b9c>
   1932c:	b	19330 <__assert_fail@plt+0x7bfc>
   19330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19338:	cmp	r0, r1
   1933c:	bcs	19354 <__assert_fail@plt+0x7c20>
   19340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19344:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19348:	add	r0, r0, r1
   1934c:	movw	r1, #0
   19350:	strb	r1, [r0]
   19354:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19358:	str	r0, [fp, #-20]	; 0xffffffec
   1935c:	b	193c8 <__assert_fail@plt+0x7c94>
   19360:	ldr	r0, [fp, #8]
   19364:	cmp	r0, #2
   19368:	bne	19380 <__assert_fail@plt+0x7c4c>
   1936c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19370:	tst	r0, #1
   19374:	beq	19380 <__assert_fail@plt+0x7c4c>
   19378:	movw	r0, #4
   1937c:	str	r0, [fp, #8]
   19380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19384:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19388:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1938c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19390:	ldr	ip, [fp, #8]
   19394:	ldr	lr, [fp, #12]
   19398:	mvn	r4, #2
   1939c:	and	lr, lr, r4
   193a0:	ldr	r4, [fp, #20]
   193a4:	ldr	r5, [fp, #24]
   193a8:	str	ip, [sp]
   193ac:	str	lr, [sp, #4]
   193b0:	movw	ip, #0
   193b4:	str	ip, [sp, #8]
   193b8:	str	r4, [sp, #12]
   193bc:	str	r5, [sp, #16]
   193c0:	bl	17ca0 <__assert_fail@plt+0x656c>
   193c4:	str	r0, [fp, #-20]	; 0xffffffec
   193c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   193cc:	sub	sp, fp, #16
   193d0:	pop	{r4, r5, r6, sl, fp, pc}
   193d4:	push	{fp, lr}
   193d8:	mov	fp, sp
   193dc:	sub	sp, sp, #16
   193e0:	str	r0, [fp, #-4]
   193e4:	str	r1, [sp, #8]
   193e8:	str	r2, [sp, #4]
   193ec:	ldr	r0, [fp, #-4]
   193f0:	ldr	r1, [sp, #8]
   193f4:	ldr	r3, [sp, #4]
   193f8:	movw	r2, #0
   193fc:	bl	19408 <__assert_fail@plt+0x7cd4>
   19400:	mov	sp, fp
   19404:	pop	{fp, pc}
   19408:	push	{r4, r5, r6, sl, fp, lr}
   1940c:	add	fp, sp, #16
   19410:	sub	sp, sp, #80	; 0x50
   19414:	str	r0, [fp, #-20]	; 0xffffffec
   19418:	str	r1, [fp, #-24]	; 0xffffffe8
   1941c:	str	r2, [fp, #-28]	; 0xffffffe4
   19420:	str	r3, [fp, #-32]	; 0xffffffe0
   19424:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19428:	movw	r1, #0
   1942c:	cmp	r0, r1
   19430:	beq	19440 <__assert_fail@plt+0x7d0c>
   19434:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19438:	str	r0, [sp, #40]	; 0x28
   1943c:	b	19450 <__assert_fail@plt+0x7d1c>
   19440:	movw	r0, #17716	; 0x4534
   19444:	movt	r0, #3
   19448:	str	r0, [sp, #40]	; 0x28
   1944c:	b	19450 <__assert_fail@plt+0x7d1c>
   19450:	ldr	r0, [sp, #40]	; 0x28
   19454:	str	r0, [fp, #-36]	; 0xffffffdc
   19458:	bl	115f0 <__errno_location@plt>
   1945c:	ldr	r0, [r0]
   19460:	str	r0, [fp, #-40]	; 0xffffffd8
   19464:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19468:	ldr	r0, [r0, #4]
   1946c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19470:	movw	r2, #0
   19474:	cmp	r1, r2
   19478:	movw	r1, #0
   1947c:	movne	r1, #1
   19480:	tst	r1, #1
   19484:	mov	r1, r2
   19488:	moveq	r1, #1
   1948c:	orr	r0, r0, r1
   19490:	str	r0, [fp, #-44]	; 0xffffffd4
   19494:	ldr	r0, [fp, #-20]	; 0xffffffec
   19498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1949c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   194a0:	ldr	r1, [r1]
   194a4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   194a8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   194ac:	add	lr, lr, #8
   194b0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   194b4:	ldr	r4, [r4, #40]	; 0x28
   194b8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   194bc:	ldr	r5, [r5, #44]	; 0x2c
   194c0:	str	r0, [sp, #36]	; 0x24
   194c4:	mov	r0, r2
   194c8:	str	r1, [sp, #32]
   194cc:	mov	r1, r2
   194d0:	ldr	r2, [sp, #36]	; 0x24
   194d4:	ldr	r6, [sp, #32]
   194d8:	str	r6, [sp]
   194dc:	str	ip, [sp, #4]
   194e0:	str	lr, [sp, #8]
   194e4:	str	r4, [sp, #12]
   194e8:	str	r5, [sp, #16]
   194ec:	bl	17ca0 <__assert_fail@plt+0x656c>
   194f0:	add	r0, r0, #1
   194f4:	str	r0, [sp, #48]	; 0x30
   194f8:	ldr	r0, [sp, #48]	; 0x30
   194fc:	bl	1aef4 <__assert_fail@plt+0x97c0>
   19500:	str	r0, [sp, #44]	; 0x2c
   19504:	ldr	r0, [sp, #44]	; 0x2c
   19508:	ldr	r1, [sp, #48]	; 0x30
   1950c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19514:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19518:	ldr	ip, [ip]
   1951c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   19520:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19524:	add	r4, r4, #8
   19528:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1952c:	ldr	r5, [r5, #40]	; 0x28
   19530:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19534:	ldr	r6, [r6, #44]	; 0x2c
   19538:	str	ip, [sp]
   1953c:	str	lr, [sp, #4]
   19540:	str	r4, [sp, #8]
   19544:	str	r5, [sp, #12]
   19548:	str	r6, [sp, #16]
   1954c:	bl	17ca0 <__assert_fail@plt+0x656c>
   19550:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19554:	str	r0, [sp, #28]
   19558:	str	r1, [sp, #24]
   1955c:	bl	115f0 <__errno_location@plt>
   19560:	ldr	r1, [sp, #24]
   19564:	str	r1, [r0]
   19568:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1956c:	movw	r2, #0
   19570:	cmp	r0, r2
   19574:	beq	19588 <__assert_fail@plt+0x7e54>
   19578:	ldr	r0, [sp, #48]	; 0x30
   1957c:	sub	r0, r0, #1
   19580:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19584:	str	r0, [r1]
   19588:	ldr	r0, [sp, #44]	; 0x2c
   1958c:	sub	sp, fp, #16
   19590:	pop	{r4, r5, r6, sl, fp, pc}
   19594:	push	{fp, lr}
   19598:	mov	fp, sp
   1959c:	sub	sp, sp, #8
   195a0:	movw	r0, #16748	; 0x416c
   195a4:	movt	r0, #3
   195a8:	ldr	r0, [r0]
   195ac:	str	r0, [sp, #4]
   195b0:	movw	r0, #1
   195b4:	str	r0, [sp]
   195b8:	ldr	r0, [sp]
   195bc:	movw	r1, #16752	; 0x4170
   195c0:	movt	r1, #3
   195c4:	ldr	r1, [r1]
   195c8:	cmp	r0, r1
   195cc:	bge	195f4 <__assert_fail@plt+0x7ec0>
   195d0:	ldr	r0, [sp, #4]
   195d4:	ldr	r1, [sp]
   195d8:	add	r0, r0, r1, lsl #3
   195dc:	ldr	r0, [r0, #4]
   195e0:	bl	174e8 <__assert_fail@plt+0x5db4>
   195e4:	ldr	r0, [sp]
   195e8:	add	r0, r0, #1
   195ec:	str	r0, [sp]
   195f0:	b	195b8 <__assert_fail@plt+0x7e84>
   195f4:	ldr	r0, [sp, #4]
   195f8:	ldr	r0, [r0, #4]
   195fc:	movw	r1, #17764	; 0x4564
   19600:	movt	r1, #3
   19604:	cmp	r0, r1
   19608:	beq	19634 <__assert_fail@plt+0x7f00>
   1960c:	ldr	r0, [sp, #4]
   19610:	ldr	r0, [r0, #4]
   19614:	bl	174e8 <__assert_fail@plt+0x5db4>
   19618:	movw	r0, #256	; 0x100
   1961c:	movw	r1, #16756	; 0x4174
   19620:	movt	r1, #3
   19624:	str	r0, [r1]
   19628:	movw	r0, #17764	; 0x4564
   1962c:	movt	r0, #3
   19630:	str	r0, [r1, #4]
   19634:	ldr	r0, [sp, #4]
   19638:	movw	r1, #16756	; 0x4174
   1963c:	movt	r1, #3
   19640:	cmp	r0, r1
   19644:	beq	19664 <__assert_fail@plt+0x7f30>
   19648:	ldr	r0, [sp, #4]
   1964c:	bl	174e8 <__assert_fail@plt+0x5db4>
   19650:	movw	r0, #16748	; 0x416c
   19654:	movt	r0, #3
   19658:	movw	r1, #16756	; 0x4174
   1965c:	movt	r1, #3
   19660:	str	r1, [r0]
   19664:	movw	r0, #16752	; 0x4170
   19668:	movt	r0, #3
   1966c:	movw	r1, #1
   19670:	str	r1, [r0]
   19674:	mov	sp, fp
   19678:	pop	{fp, pc}
   1967c:	push	{fp, lr}
   19680:	mov	fp, sp
   19684:	sub	sp, sp, #8
   19688:	str	r0, [sp, #4]
   1968c:	str	r1, [sp]
   19690:	ldr	r0, [sp, #4]
   19694:	ldr	r1, [sp]
   19698:	mvn	r2, #0
   1969c:	movw	r3, #17716	; 0x4534
   196a0:	movt	r3, #3
   196a4:	bl	196b0 <__assert_fail@plt+0x7f7c>
   196a8:	mov	sp, fp
   196ac:	pop	{fp, pc}
   196b0:	push	{r4, r5, r6, sl, fp, lr}
   196b4:	add	fp, sp, #16
   196b8:	sub	sp, sp, #80	; 0x50
   196bc:	str	r0, [fp, #-20]	; 0xffffffec
   196c0:	str	r1, [fp, #-24]	; 0xffffffe8
   196c4:	str	r2, [fp, #-28]	; 0xffffffe4
   196c8:	str	r3, [fp, #-32]	; 0xffffffe0
   196cc:	bl	115f0 <__errno_location@plt>
   196d0:	ldr	r1, [pc, #672]	; 19978 <__assert_fail@plt+0x8244>
   196d4:	ldr	r0, [r0]
   196d8:	str	r0, [fp, #-36]	; 0xffffffdc
   196dc:	movw	r0, #16748	; 0x416c
   196e0:	movt	r0, #3
   196e4:	ldr	r0, [r0]
   196e8:	str	r0, [fp, #-40]	; 0xffffffd8
   196ec:	str	r1, [fp, #-44]	; 0xffffffd4
   196f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   196f4:	movw	r1, #0
   196f8:	cmp	r1, r0
   196fc:	bgt	19710 <__assert_fail@plt+0x7fdc>
   19700:	ldr	r0, [fp, #-20]	; 0xffffffec
   19704:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19708:	cmp	r0, r1
   1970c:	blt	19714 <__assert_fail@plt+0x7fe0>
   19710:	bl	11710 <abort@plt>
   19714:	movw	r0, #16752	; 0x4170
   19718:	movt	r0, #3
   1971c:	ldr	r0, [r0]
   19720:	ldr	r1, [fp, #-20]	; 0xffffffec
   19724:	cmp	r0, r1
   19728:	bgt	19820 <__assert_fail@plt+0x80ec>
   1972c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19730:	movw	r1, #16756	; 0x4174
   19734:	movt	r1, #3
   19738:	cmp	r0, r1
   1973c:	movw	r0, #0
   19740:	moveq	r0, #1
   19744:	and	r0, r0, #1
   19748:	strb	r0, [fp, #-45]	; 0xffffffd3
   1974c:	movw	r0, #16752	; 0x4170
   19750:	movt	r0, #3
   19754:	ldr	r0, [r0]
   19758:	str	r0, [sp, #44]	; 0x2c
   1975c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   19760:	tst	r0, #1
   19764:	beq	19774 <__assert_fail@plt+0x8040>
   19768:	movw	r0, #0
   1976c:	str	r0, [sp, #24]
   19770:	b	1977c <__assert_fail@plt+0x8048>
   19774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19778:	str	r0, [sp, #24]
   1977c:	ldr	r0, [sp, #24]
   19780:	ldr	r1, [fp, #-20]	; 0xffffffec
   19784:	movw	r2, #16752	; 0x4170
   19788:	movt	r2, #3
   1978c:	ldr	r2, [r2]
   19790:	sub	r1, r1, r2
   19794:	add	r2, r1, #1
   19798:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1979c:	add	r1, sp, #44	; 0x2c
   197a0:	movw	ip, #8
   197a4:	str	ip, [sp]
   197a8:	bl	1b130 <__assert_fail@plt+0x99fc>
   197ac:	str	r0, [fp, #-40]	; 0xffffffd8
   197b0:	movw	r1, #16748	; 0x416c
   197b4:	movt	r1, #3
   197b8:	str	r0, [r1]
   197bc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   197c0:	tst	r0, #1
   197c4:	beq	197e4 <__assert_fail@plt+0x80b0>
   197c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   197cc:	movw	r1, #16756	; 0x4174
   197d0:	movt	r1, #3
   197d4:	ldr	r2, [r1]
   197d8:	str	r2, [r0]
   197dc:	ldr	r1, [r1, #4]
   197e0:	str	r1, [r0, #4]
   197e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   197e8:	movw	r1, #16752	; 0x4170
   197ec:	movt	r1, #3
   197f0:	ldr	r1, [r1]
   197f4:	add	r0, r0, r1, lsl #3
   197f8:	ldr	r2, [sp, #44]	; 0x2c
   197fc:	sub	r1, r2, r1
   19800:	lsl	r2, r1, #3
   19804:	movw	r1, #0
   19808:	and	r1, r1, #255	; 0xff
   1980c:	bl	11608 <memset@plt>
   19810:	ldr	r0, [sp, #44]	; 0x2c
   19814:	movw	r1, #16752	; 0x4170
   19818:	movt	r1, #3
   1981c:	str	r0, [r1]
   19820:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19824:	ldr	r1, [fp, #-20]	; 0xffffffec
   19828:	ldr	r0, [r0, r1, lsl #3]
   1982c:	str	r0, [sp, #40]	; 0x28
   19830:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19834:	ldr	r1, [fp, #-20]	; 0xffffffec
   19838:	add	r0, r0, r1, lsl #3
   1983c:	ldr	r0, [r0, #4]
   19840:	str	r0, [sp, #36]	; 0x24
   19844:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19848:	ldr	r0, [r0, #4]
   1984c:	orr	r0, r0, #1
   19850:	str	r0, [sp, #32]
   19854:	ldr	r0, [sp, #36]	; 0x24
   19858:	ldr	r1, [sp, #40]	; 0x28
   1985c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19860:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19864:	ldr	ip, [fp, #-32]	; 0xffffffe0
   19868:	ldr	ip, [ip]
   1986c:	ldr	lr, [sp, #32]
   19870:	ldr	r4, [fp, #-32]	; 0xffffffe0
   19874:	add	r4, r4, #8
   19878:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1987c:	ldr	r5, [r5, #40]	; 0x28
   19880:	ldr	r6, [fp, #-32]	; 0xffffffe0
   19884:	ldr	r6, [r6, #44]	; 0x2c
   19888:	str	ip, [sp]
   1988c:	str	lr, [sp, #4]
   19890:	str	r4, [sp, #8]
   19894:	str	r5, [sp, #12]
   19898:	str	r6, [sp, #16]
   1989c:	bl	17ca0 <__assert_fail@plt+0x656c>
   198a0:	str	r0, [sp, #28]
   198a4:	ldr	r0, [sp, #40]	; 0x28
   198a8:	ldr	r1, [sp, #28]
   198ac:	cmp	r0, r1
   198b0:	bhi	19958 <__assert_fail@plt+0x8224>
   198b4:	ldr	r0, [sp, #28]
   198b8:	add	r0, r0, #1
   198bc:	str	r0, [sp, #40]	; 0x28
   198c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   198c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   198c8:	add	r1, r1, r2, lsl #3
   198cc:	str	r0, [r1]
   198d0:	ldr	r0, [sp, #36]	; 0x24
   198d4:	movw	r1, #17764	; 0x4564
   198d8:	movt	r1, #3
   198dc:	cmp	r0, r1
   198e0:	beq	198ec <__assert_fail@plt+0x81b8>
   198e4:	ldr	r0, [sp, #36]	; 0x24
   198e8:	bl	174e8 <__assert_fail@plt+0x5db4>
   198ec:	ldr	r0, [sp, #40]	; 0x28
   198f0:	bl	1aef4 <__assert_fail@plt+0x97c0>
   198f4:	mov	r1, r0
   198f8:	str	r0, [sp, #36]	; 0x24
   198fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19900:	ldr	r2, [fp, #-20]	; 0xffffffec
   19904:	add	r0, r0, r2, lsl #3
   19908:	str	r1, [r0, #4]
   1990c:	ldr	r0, [sp, #36]	; 0x24
   19910:	ldr	r1, [sp, #40]	; 0x28
   19914:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19918:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1991c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   19920:	ldr	ip, [ip]
   19924:	ldr	lr, [sp, #32]
   19928:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1992c:	add	r4, r4, #8
   19930:	ldr	r5, [fp, #-32]	; 0xffffffe0
   19934:	ldr	r5, [r5, #40]	; 0x28
   19938:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1993c:	ldr	r6, [r6, #44]	; 0x2c
   19940:	str	ip, [sp]
   19944:	str	lr, [sp, #4]
   19948:	str	r4, [sp, #8]
   1994c:	str	r5, [sp, #12]
   19950:	str	r6, [sp, #16]
   19954:	bl	17ca0 <__assert_fail@plt+0x656c>
   19958:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1995c:	str	r0, [sp, #20]
   19960:	bl	115f0 <__errno_location@plt>
   19964:	ldr	r1, [sp, #20]
   19968:	str	r1, [r0]
   1996c:	ldr	r0, [sp, #36]	; 0x24
   19970:	sub	sp, fp, #16
   19974:	pop	{r4, r5, r6, sl, fp, pc}
   19978:	svcvc	0x00ffffff
   1997c:	push	{fp, lr}
   19980:	mov	fp, sp
   19984:	sub	sp, sp, #16
   19988:	str	r0, [fp, #-4]
   1998c:	str	r1, [sp, #8]
   19990:	str	r2, [sp, #4]
   19994:	ldr	r0, [fp, #-4]
   19998:	ldr	r1, [sp, #8]
   1999c:	ldr	r2, [sp, #4]
   199a0:	movw	r3, #17716	; 0x4534
   199a4:	movt	r3, #3
   199a8:	bl	196b0 <__assert_fail@plt+0x7f7c>
   199ac:	mov	sp, fp
   199b0:	pop	{fp, pc}
   199b4:	push	{fp, lr}
   199b8:	mov	fp, sp
   199bc:	sub	sp, sp, #8
   199c0:	str	r0, [sp, #4]
   199c4:	ldr	r1, [sp, #4]
   199c8:	movw	r0, #0
   199cc:	bl	1967c <__assert_fail@plt+0x7f48>
   199d0:	mov	sp, fp
   199d4:	pop	{fp, pc}
   199d8:	push	{fp, lr}
   199dc:	mov	fp, sp
   199e0:	sub	sp, sp, #8
   199e4:	str	r0, [sp, #4]
   199e8:	str	r1, [sp]
   199ec:	ldr	r1, [sp, #4]
   199f0:	ldr	r2, [sp]
   199f4:	movw	r0, #0
   199f8:	bl	1997c <__assert_fail@plt+0x8248>
   199fc:	mov	sp, fp
   19a00:	pop	{fp, pc}
   19a04:	push	{fp, lr}
   19a08:	mov	fp, sp
   19a0c:	sub	sp, sp, #64	; 0x40
   19a10:	str	r0, [fp, #-4]
   19a14:	str	r1, [fp, #-8]
   19a18:	str	r2, [fp, #-12]
   19a1c:	ldr	r1, [fp, #-8]
   19a20:	add	r0, sp, #4
   19a24:	bl	19a44 <__assert_fail@plt+0x8310>
   19a28:	ldr	r0, [fp, #-4]
   19a2c:	ldr	r1, [fp, #-12]
   19a30:	mvn	r2, #0
   19a34:	add	r3, sp, #4
   19a38:	bl	196b0 <__assert_fail@plt+0x7f7c>
   19a3c:	mov	sp, fp
   19a40:	pop	{fp, pc}
   19a44:	push	{fp, lr}
   19a48:	mov	fp, sp
   19a4c:	sub	sp, sp, #8
   19a50:	str	r1, [sp, #4]
   19a54:	mov	r1, r0
   19a58:	str	r0, [sp]
   19a5c:	mov	r0, r1
   19a60:	movw	r1, #0
   19a64:	and	r1, r1, #255	; 0xff
   19a68:	movw	r2, #48	; 0x30
   19a6c:	bl	11608 <memset@plt>
   19a70:	ldr	r0, [sp, #4]
   19a74:	cmp	r0, #10
   19a78:	bne	19a80 <__assert_fail@plt+0x834c>
   19a7c:	bl	11710 <abort@plt>
   19a80:	ldr	r0, [sp, #4]
   19a84:	ldr	r1, [sp]
   19a88:	str	r0, [r1]
   19a8c:	mov	sp, fp
   19a90:	pop	{fp, pc}
   19a94:	push	{fp, lr}
   19a98:	mov	fp, sp
   19a9c:	sub	sp, sp, #64	; 0x40
   19aa0:	str	r0, [fp, #-4]
   19aa4:	str	r1, [fp, #-8]
   19aa8:	str	r2, [fp, #-12]
   19aac:	str	r3, [fp, #-16]
   19ab0:	ldr	r1, [fp, #-8]
   19ab4:	mov	r0, sp
   19ab8:	bl	19a44 <__assert_fail@plt+0x8310>
   19abc:	ldr	r0, [fp, #-4]
   19ac0:	ldr	r1, [fp, #-12]
   19ac4:	ldr	r2, [fp, #-16]
   19ac8:	mov	r3, sp
   19acc:	bl	196b0 <__assert_fail@plt+0x7f7c>
   19ad0:	mov	sp, fp
   19ad4:	pop	{fp, pc}
   19ad8:	push	{fp, lr}
   19adc:	mov	fp, sp
   19ae0:	sub	sp, sp, #8
   19ae4:	str	r0, [sp, #4]
   19ae8:	str	r1, [sp]
   19aec:	ldr	r1, [sp, #4]
   19af0:	ldr	r2, [sp]
   19af4:	movw	r0, #0
   19af8:	bl	19a04 <__assert_fail@plt+0x82d0>
   19afc:	mov	sp, fp
   19b00:	pop	{fp, pc}
   19b04:	push	{fp, lr}
   19b08:	mov	fp, sp
   19b0c:	sub	sp, sp, #16
   19b10:	str	r0, [fp, #-4]
   19b14:	str	r1, [sp, #8]
   19b18:	str	r2, [sp, #4]
   19b1c:	ldr	r1, [fp, #-4]
   19b20:	ldr	r2, [sp, #8]
   19b24:	ldr	r3, [sp, #4]
   19b28:	movw	r0, #0
   19b2c:	bl	19a94 <__assert_fail@plt+0x8360>
   19b30:	mov	sp, fp
   19b34:	pop	{fp, pc}
   19b38:	push	{fp, lr}
   19b3c:	mov	fp, sp
   19b40:	sub	sp, sp, #72	; 0x48
   19b44:	movw	r3, #17716	; 0x4534
   19b48:	movt	r3, #3
   19b4c:	str	r0, [fp, #-4]
   19b50:	str	r1, [fp, #-8]
   19b54:	strb	r2, [fp, #-9]
   19b58:	add	r0, sp, #12
   19b5c:	mov	r1, r0
   19b60:	str	r0, [sp, #8]
   19b64:	mov	r0, r1
   19b68:	mov	r1, r3
   19b6c:	movw	r2, #48	; 0x30
   19b70:	bl	11428 <memcpy@plt>
   19b74:	ldr	r0, [sp, #8]
   19b78:	ldrb	r1, [fp, #-9]
   19b7c:	movw	r2, #1
   19b80:	bl	17a48 <__assert_fail@plt+0x6314>
   19b84:	ldr	r1, [fp, #-4]
   19b88:	ldr	r2, [fp, #-8]
   19b8c:	movw	r3, #0
   19b90:	str	r0, [sp, #4]
   19b94:	mov	r0, r3
   19b98:	add	r3, sp, #12
   19b9c:	bl	196b0 <__assert_fail@plt+0x7f7c>
   19ba0:	mov	sp, fp
   19ba4:	pop	{fp, pc}
   19ba8:	push	{fp, lr}
   19bac:	mov	fp, sp
   19bb0:	sub	sp, sp, #8
   19bb4:	str	r0, [sp, #4]
   19bb8:	strb	r1, [sp, #3]
   19bbc:	ldr	r0, [sp, #4]
   19bc0:	mvn	r1, #0
   19bc4:	ldrb	r2, [sp, #3]
   19bc8:	bl	19b38 <__assert_fail@plt+0x8404>
   19bcc:	mov	sp, fp
   19bd0:	pop	{fp, pc}
   19bd4:	push	{fp, lr}
   19bd8:	mov	fp, sp
   19bdc:	sub	sp, sp, #8
   19be0:	str	r0, [sp, #4]
   19be4:	ldr	r0, [sp, #4]
   19be8:	movw	r1, #58	; 0x3a
   19bec:	and	r1, r1, #255	; 0xff
   19bf0:	bl	19ba8 <__assert_fail@plt+0x8474>
   19bf4:	mov	sp, fp
   19bf8:	pop	{fp, pc}
   19bfc:	push	{fp, lr}
   19c00:	mov	fp, sp
   19c04:	sub	sp, sp, #8
   19c08:	str	r0, [sp, #4]
   19c0c:	str	r1, [sp]
   19c10:	ldr	r0, [sp, #4]
   19c14:	ldr	r1, [sp]
   19c18:	movw	r2, #58	; 0x3a
   19c1c:	and	r2, r2, #255	; 0xff
   19c20:	bl	19b38 <__assert_fail@plt+0x8404>
   19c24:	mov	sp, fp
   19c28:	pop	{fp, pc}
   19c2c:	push	{fp, lr}
   19c30:	mov	fp, sp
   19c34:	sub	sp, sp, #120	; 0x78
   19c38:	str	r0, [fp, #-4]
   19c3c:	str	r1, [fp, #-8]
   19c40:	str	r2, [fp, #-12]
   19c44:	ldr	r1, [fp, #-8]
   19c48:	add	r0, sp, #12
   19c4c:	bl	19a44 <__assert_fail@plt+0x8310>
   19c50:	add	r0, sp, #60	; 0x3c
   19c54:	mov	r1, r0
   19c58:	add	r2, sp, #12
   19c5c:	str	r0, [sp, #8]
   19c60:	mov	r0, r1
   19c64:	mov	r1, r2
   19c68:	movw	r2, #48	; 0x30
   19c6c:	bl	11428 <memcpy@plt>
   19c70:	ldr	r0, [sp, #8]
   19c74:	movw	r1, #58	; 0x3a
   19c78:	and	r1, r1, #255	; 0xff
   19c7c:	movw	r2, #1
   19c80:	bl	17a48 <__assert_fail@plt+0x6314>
   19c84:	ldr	r1, [fp, #-4]
   19c88:	ldr	r2, [fp, #-12]
   19c8c:	str	r0, [sp, #4]
   19c90:	mov	r0, r1
   19c94:	mov	r1, r2
   19c98:	mvn	r2, #0
   19c9c:	add	r3, sp, #60	; 0x3c
   19ca0:	bl	196b0 <__assert_fail@plt+0x7f7c>
   19ca4:	mov	sp, fp
   19ca8:	pop	{fp, pc}
   19cac:	push	{fp, lr}
   19cb0:	mov	fp, sp
   19cb4:	sub	sp, sp, #24
   19cb8:	str	r0, [fp, #-4]
   19cbc:	str	r1, [fp, #-8]
   19cc0:	str	r2, [sp, #12]
   19cc4:	str	r3, [sp, #8]
   19cc8:	ldr	r0, [fp, #-4]
   19ccc:	ldr	r1, [fp, #-8]
   19cd0:	ldr	r2, [sp, #12]
   19cd4:	ldr	r3, [sp, #8]
   19cd8:	mvn	ip, #0
   19cdc:	str	ip, [sp]
   19ce0:	bl	19cec <__assert_fail@plt+0x85b8>
   19ce4:	mov	sp, fp
   19ce8:	pop	{fp, pc}
   19cec:	push	{fp, lr}
   19cf0:	mov	fp, sp
   19cf4:	sub	sp, sp, #72	; 0x48
   19cf8:	ldr	ip, [fp, #8]
   19cfc:	movw	lr, #17716	; 0x4534
   19d00:	movt	lr, #3
   19d04:	str	r0, [fp, #-4]
   19d08:	str	r1, [fp, #-8]
   19d0c:	str	r2, [fp, #-12]
   19d10:	str	r3, [fp, #-16]
   19d14:	add	r0, sp, #8
   19d18:	mov	r1, r0
   19d1c:	str	r0, [sp, #4]
   19d20:	mov	r0, r1
   19d24:	mov	r1, lr
   19d28:	movw	r2, #48	; 0x30
   19d2c:	str	ip, [sp]
   19d30:	bl	11428 <memcpy@plt>
   19d34:	ldr	r1, [fp, #-8]
   19d38:	ldr	r2, [fp, #-12]
   19d3c:	ldr	r0, [sp, #4]
   19d40:	bl	17b48 <__assert_fail@plt+0x6414>
   19d44:	ldr	r0, [fp, #-4]
   19d48:	ldr	r1, [fp, #-16]
   19d4c:	ldr	r2, [fp, #8]
   19d50:	add	r3, sp, #8
   19d54:	bl	196b0 <__assert_fail@plt+0x7f7c>
   19d58:	mov	sp, fp
   19d5c:	pop	{fp, pc}
   19d60:	push	{fp, lr}
   19d64:	mov	fp, sp
   19d68:	sub	sp, sp, #16
   19d6c:	str	r0, [fp, #-4]
   19d70:	str	r1, [sp, #8]
   19d74:	str	r2, [sp, #4]
   19d78:	ldr	r1, [fp, #-4]
   19d7c:	ldr	r2, [sp, #8]
   19d80:	ldr	r3, [sp, #4]
   19d84:	movw	r0, #0
   19d88:	bl	19cac <__assert_fail@plt+0x8578>
   19d8c:	mov	sp, fp
   19d90:	pop	{fp, pc}
   19d94:	push	{fp, lr}
   19d98:	mov	fp, sp
   19d9c:	sub	sp, sp, #24
   19da0:	str	r0, [fp, #-4]
   19da4:	str	r1, [fp, #-8]
   19da8:	str	r2, [sp, #12]
   19dac:	str	r3, [sp, #8]
   19db0:	ldr	r1, [fp, #-4]
   19db4:	ldr	r2, [fp, #-8]
   19db8:	ldr	r3, [sp, #12]
   19dbc:	ldr	r0, [sp, #8]
   19dc0:	movw	ip, #0
   19dc4:	str	r0, [sp, #4]
   19dc8:	mov	r0, ip
   19dcc:	ldr	ip, [sp, #4]
   19dd0:	str	ip, [sp]
   19dd4:	bl	19cec <__assert_fail@plt+0x85b8>
   19dd8:	mov	sp, fp
   19ddc:	pop	{fp, pc}
   19de0:	push	{fp, lr}
   19de4:	mov	fp, sp
   19de8:	sub	sp, sp, #16
   19dec:	str	r0, [fp, #-4]
   19df0:	str	r1, [sp, #8]
   19df4:	str	r2, [sp, #4]
   19df8:	ldr	r0, [fp, #-4]
   19dfc:	ldr	r1, [sp, #8]
   19e00:	ldr	r2, [sp, #4]
   19e04:	movw	r3, #16764	; 0x417c
   19e08:	movt	r3, #3
   19e0c:	bl	196b0 <__assert_fail@plt+0x7f7c>
   19e10:	mov	sp, fp
   19e14:	pop	{fp, pc}
   19e18:	push	{fp, lr}
   19e1c:	mov	fp, sp
   19e20:	sub	sp, sp, #8
   19e24:	str	r0, [sp, #4]
   19e28:	str	r1, [sp]
   19e2c:	ldr	r1, [sp, #4]
   19e30:	ldr	r2, [sp]
   19e34:	movw	r0, #0
   19e38:	bl	19de0 <__assert_fail@plt+0x86ac>
   19e3c:	mov	sp, fp
   19e40:	pop	{fp, pc}
   19e44:	push	{fp, lr}
   19e48:	mov	fp, sp
   19e4c:	sub	sp, sp, #8
   19e50:	str	r0, [sp, #4]
   19e54:	str	r1, [sp]
   19e58:	ldr	r0, [sp, #4]
   19e5c:	ldr	r1, [sp]
   19e60:	mvn	r2, #0
   19e64:	bl	19de0 <__assert_fail@plt+0x86ac>
   19e68:	mov	sp, fp
   19e6c:	pop	{fp, pc}
   19e70:	push	{fp, lr}
   19e74:	mov	fp, sp
   19e78:	sub	sp, sp, #8
   19e7c:	str	r0, [sp, #4]
   19e80:	ldr	r1, [sp, #4]
   19e84:	movw	r0, #0
   19e88:	bl	19e44 <__assert_fail@plt+0x8710>
   19e8c:	mov	sp, fp
   19e90:	pop	{fp, pc}
   19e94:	push	{fp, lr}
   19e98:	mov	fp, sp
   19e9c:	sub	sp, sp, #24
   19ea0:	str	r0, [fp, #-8]
   19ea4:	str	r1, [sp, #12]
   19ea8:	ldr	r0, [fp, #-8]
   19eac:	bl	11590 <gettext@plt>
   19eb0:	str	r0, [sp, #8]
   19eb4:	ldr	r0, [sp, #8]
   19eb8:	ldr	r1, [fp, #-8]
   19ebc:	cmp	r0, r1
   19ec0:	beq	19ed0 <__assert_fail@plt+0x879c>
   19ec4:	ldr	r0, [sp, #8]
   19ec8:	str	r0, [fp, #-4]
   19ecc:	b	19f9c <__assert_fail@plt+0x8868>
   19ed0:	bl	203e0 <__assert_fail@plt+0xecac>
   19ed4:	str	r0, [sp, #4]
   19ed8:	ldr	r0, [sp, #4]
   19edc:	movw	r1, #14835	; 0x39f3
   19ee0:	movt	r1, #2
   19ee4:	bl	20084 <__assert_fail@plt+0xe950>
   19ee8:	cmp	r0, #0
   19eec:	bne	19f24 <__assert_fail@plt+0x87f0>
   19ef0:	ldr	r0, [fp, #-8]
   19ef4:	ldrb	r0, [r0]
   19ef8:	cmp	r0, #96	; 0x60
   19efc:	movw	r0, #0
   19f00:	moveq	r0, #1
   19f04:	tst	r0, #1
   19f08:	movw	r0, #14845	; 0x39fd
   19f0c:	movt	r0, #2
   19f10:	movw	r1, #14841	; 0x39f9
   19f14:	movt	r1, #2
   19f18:	movne	r0, r1
   19f1c:	str	r0, [fp, #-4]
   19f20:	b	19f9c <__assert_fail@plt+0x8868>
   19f24:	ldr	r0, [sp, #4]
   19f28:	movw	r1, #14849	; 0x3a01
   19f2c:	movt	r1, #2
   19f30:	bl	20084 <__assert_fail@plt+0xe950>
   19f34:	cmp	r0, #0
   19f38:	bne	19f70 <__assert_fail@plt+0x883c>
   19f3c:	ldr	r0, [fp, #-8]
   19f40:	ldrb	r0, [r0]
   19f44:	cmp	r0, #96	; 0x60
   19f48:	movw	r0, #0
   19f4c:	moveq	r0, #1
   19f50:	tst	r0, #1
   19f54:	movw	r0, #14861	; 0x3a0d
   19f58:	movt	r0, #2
   19f5c:	movw	r1, #14857	; 0x3a09
   19f60:	movt	r1, #2
   19f64:	movne	r0, r1
   19f68:	str	r0, [fp, #-4]
   19f6c:	b	19f9c <__assert_fail@plt+0x8868>
   19f70:	ldr	r0, [sp, #12]
   19f74:	cmp	r0, #9
   19f78:	movw	r0, #0
   19f7c:	moveq	r0, #1
   19f80:	tst	r0, #1
   19f84:	movw	r0, #14833	; 0x39f1
   19f88:	movt	r0, #2
   19f8c:	movw	r1, #13928	; 0x3668
   19f90:	movt	r1, #2
   19f94:	movne	r0, r1
   19f98:	str	r0, [fp, #-4]
   19f9c:	ldr	r0, [fp, #-4]
   19fa0:	mov	sp, fp
   19fa4:	pop	{fp, pc}
   19fa8:	push	{fp, lr}
   19fac:	mov	fp, sp
   19fb0:	sub	sp, sp, #24
   19fb4:	str	r0, [fp, #-8]
   19fb8:	str	r1, [sp, #12]
   19fbc:	str	r2, [sp, #8]
   19fc0:	ldr	r0, [fp, #-8]
   19fc4:	ldr	r1, [sp, #12]
   19fc8:	ldr	r2, [sp, #8]
   19fcc:	bl	113e0 <read@plt>
   19fd0:	str	r0, [sp, #4]
   19fd4:	ldr	r0, [sp, #4]
   19fd8:	movw	r1, #0
   19fdc:	cmp	r1, r0
   19fe0:	bgt	19ff0 <__assert_fail@plt+0x88bc>
   19fe4:	ldr	r0, [sp, #4]
   19fe8:	str	r0, [fp, #-4]
   19fec:	b	1a048 <__assert_fail@plt+0x8914>
   19ff0:	bl	115f0 <__errno_location@plt>
   19ff4:	ldr	r0, [r0]
   19ff8:	cmp	r0, #4
   19ffc:	bne	1a004 <__assert_fail@plt+0x88d0>
   1a000:	b	19fc0 <__assert_fail@plt+0x888c>
   1a004:	bl	115f0 <__errno_location@plt>
   1a008:	ldr	r0, [r0]
   1a00c:	cmp	r0, #22
   1a010:	bne	1a030 <__assert_fail@plt+0x88fc>
   1a014:	ldr	r0, [pc, #56]	; 1a054 <__assert_fail@plt+0x8920>
   1a018:	ldr	r1, [sp, #8]
   1a01c:	cmp	r0, r1
   1a020:	bcs	1a030 <__assert_fail@plt+0x88fc>
   1a024:	ldr	r0, [pc, #40]	; 1a054 <__assert_fail@plt+0x8920>
   1a028:	str	r0, [sp, #8]
   1a02c:	b	1a03c <__assert_fail@plt+0x8908>
   1a030:	ldr	r0, [sp, #4]
   1a034:	str	r0, [fp, #-4]
   1a038:	b	1a048 <__assert_fail@plt+0x8914>
   1a03c:	b	1a040 <__assert_fail@plt+0x890c>
   1a040:	b	1a044 <__assert_fail@plt+0x8910>
   1a044:	b	19fc0 <__assert_fail@plt+0x888c>
   1a048:	ldr	r0, [fp, #-4]
   1a04c:	mov	sp, fp
   1a050:	pop	{fp, pc}
   1a054:	svcvc	0x00f00000	; IMB
   1a058:	push	{fp, lr}
   1a05c:	mov	fp, sp
   1a060:	sub	sp, sp, #24
   1a064:	str	r0, [fp, #-8]
   1a068:	str	r1, [sp, #12]
   1a06c:	str	r2, [sp, #8]
   1a070:	ldr	r0, [fp, #-8]
   1a074:	ldr	r1, [sp, #12]
   1a078:	ldr	r2, [sp, #8]
   1a07c:	bl	11614 <write@plt>
   1a080:	str	r0, [sp, #4]
   1a084:	ldr	r0, [sp, #4]
   1a088:	movw	r1, #0
   1a08c:	cmp	r1, r0
   1a090:	bgt	1a0a0 <__assert_fail@plt+0x896c>
   1a094:	ldr	r0, [sp, #4]
   1a098:	str	r0, [fp, #-4]
   1a09c:	b	1a0f8 <__assert_fail@plt+0x89c4>
   1a0a0:	bl	115f0 <__errno_location@plt>
   1a0a4:	ldr	r0, [r0]
   1a0a8:	cmp	r0, #4
   1a0ac:	bne	1a0b4 <__assert_fail@plt+0x8980>
   1a0b0:	b	1a070 <__assert_fail@plt+0x893c>
   1a0b4:	bl	115f0 <__errno_location@plt>
   1a0b8:	ldr	r0, [r0]
   1a0bc:	cmp	r0, #22
   1a0c0:	bne	1a0e0 <__assert_fail@plt+0x89ac>
   1a0c4:	ldr	r0, [pc, #56]	; 1a104 <__assert_fail@plt+0x89d0>
   1a0c8:	ldr	r1, [sp, #8]
   1a0cc:	cmp	r0, r1
   1a0d0:	bcs	1a0e0 <__assert_fail@plt+0x89ac>
   1a0d4:	ldr	r0, [pc, #40]	; 1a104 <__assert_fail@plt+0x89d0>
   1a0d8:	str	r0, [sp, #8]
   1a0dc:	b	1a0ec <__assert_fail@plt+0x89b8>
   1a0e0:	ldr	r0, [sp, #4]
   1a0e4:	str	r0, [fp, #-4]
   1a0e8:	b	1a0f8 <__assert_fail@plt+0x89c4>
   1a0ec:	b	1a0f0 <__assert_fail@plt+0x89bc>
   1a0f0:	b	1a0f4 <__assert_fail@plt+0x89c0>
   1a0f4:	b	1a070 <__assert_fail@plt+0x893c>
   1a0f8:	ldr	r0, [fp, #-4]
   1a0fc:	mov	sp, fp
   1a100:	pop	{fp, pc}
   1a104:	svcvc	0x00f00000	; IMB
   1a108:	push	{fp, lr}
   1a10c:	mov	fp, sp
   1a110:	sub	sp, sp, #8
   1a114:	str	r0, [sp, #4]
   1a118:	str	r1, [sp]
   1a11c:	ldr	r0, [sp, #4]
   1a120:	bl	1a154 <__assert_fail@plt+0x8a20>
   1a124:	ldr	r1, [sp]
   1a128:	str	r0, [r1]
   1a12c:	ldr	r0, [sp]
   1a130:	ldr	r0, [r0]
   1a134:	cmp	r0, #0
   1a138:	movw	r0, #0
   1a13c:	movlt	r0, #1
   1a140:	tst	r0, #1
   1a144:	mvn	r0, #0
   1a148:	moveq	r0, #0
   1a14c:	mov	sp, fp
   1a150:	pop	{fp, pc}
   1a154:	push	{fp, lr}
   1a158:	mov	fp, sp
   1a15c:	sub	sp, sp, #40	; 0x28
   1a160:	str	r0, [fp, #-8]
   1a164:	ldr	r0, [fp, #-8]
   1a168:	ldrb	r0, [r0]
   1a16c:	sub	r0, r0, #48	; 0x30
   1a170:	cmp	r0, #9
   1a174:	bhi	1a1b8 <__assert_fail@plt+0x8a84>
   1a178:	ldr	r0, [fp, #-8]
   1a17c:	sub	r1, fp, #12
   1a180:	movw	r2, #10
   1a184:	bl	113c8 <strtol@plt>
   1a188:	str	r0, [fp, #-16]
   1a18c:	ldr	r0, [fp, #-12]
   1a190:	ldrsb	r0, [r0]
   1a194:	cmp	r0, #0
   1a198:	bne	1a1b4 <__assert_fail@plt+0x8a80>
   1a19c:	ldr	r0, [fp, #-16]
   1a1a0:	cmp	r0, #64	; 0x40
   1a1a4:	bgt	1a1b4 <__assert_fail@plt+0x8a80>
   1a1a8:	ldr	r0, [fp, #-16]
   1a1ac:	str	r0, [fp, #-4]
   1a1b0:	b	1a374 <__assert_fail@plt+0x8c40>
   1a1b4:	b	1a36c <__assert_fail@plt+0x8c38>
   1a1b8:	movw	r0, #0
   1a1bc:	str	r0, [sp, #20]
   1a1c0:	ldr	r0, [sp, #20]
   1a1c4:	cmp	r0, #35	; 0x23
   1a1c8:	bcs	1a230 <__assert_fail@plt+0x8afc>
   1a1cc:	ldr	r0, [sp, #20]
   1a1d0:	movw	r1, #12
   1a1d4:	mul	r0, r0, r1
   1a1d8:	movw	r1, #16812	; 0x41ac
   1a1dc:	movt	r1, #3
   1a1e0:	add	r0, r1, r0
   1a1e4:	add	r0, r0, #4
   1a1e8:	ldr	r1, [fp, #-8]
   1a1ec:	bl	113bc <strcmp@plt>
   1a1f0:	cmp	r0, #0
   1a1f4:	bne	1a21c <__assert_fail@plt+0x8ae8>
   1a1f8:	ldr	r0, [sp, #20]
   1a1fc:	movw	r1, #12
   1a200:	mul	r0, r0, r1
   1a204:	movw	r1, #16812	; 0x41ac
   1a208:	movt	r1, #3
   1a20c:	add	r0, r1, r0
   1a210:	ldr	r0, [r0]
   1a214:	str	r0, [fp, #-4]
   1a218:	b	1a374 <__assert_fail@plt+0x8c40>
   1a21c:	b	1a220 <__assert_fail@plt+0x8aec>
   1a220:	ldr	r0, [sp, #20]
   1a224:	add	r0, r0, #1
   1a228:	str	r0, [sp, #20]
   1a22c:	b	1a1c0 <__assert_fail@plt+0x8a8c>
   1a230:	bl	116ec <__libc_current_sigrtmin@plt>
   1a234:	str	r0, [sp, #12]
   1a238:	bl	115a8 <__libc_current_sigrtmax@plt>
   1a23c:	str	r0, [sp, #8]
   1a240:	ldr	r0, [sp, #12]
   1a244:	movw	r1, #0
   1a248:	cmp	r1, r0
   1a24c:	bge	1a2d4 <__assert_fail@plt+0x8ba0>
   1a250:	ldr	r0, [fp, #-8]
   1a254:	movw	r1, #14948	; 0x3a64
   1a258:	movt	r1, #2
   1a25c:	movw	r2, #5
   1a260:	bl	11704 <strncmp@plt>
   1a264:	cmp	r0, #0
   1a268:	bne	1a2d4 <__assert_fail@plt+0x8ba0>
   1a26c:	ldr	r0, [fp, #-8]
   1a270:	add	r0, r0, #5
   1a274:	add	r1, sp, #16
   1a278:	movw	r2, #10
   1a27c:	bl	113c8 <strtol@plt>
   1a280:	str	r0, [sp, #4]
   1a284:	ldr	r0, [sp, #16]
   1a288:	ldrsb	r0, [r0]
   1a28c:	cmp	r0, #0
   1a290:	bne	1a2d0 <__assert_fail@plt+0x8b9c>
   1a294:	ldr	r0, [sp, #4]
   1a298:	movw	r1, #0
   1a29c:	cmp	r1, r0
   1a2a0:	bgt	1a2d0 <__assert_fail@plt+0x8b9c>
   1a2a4:	ldr	r0, [sp, #4]
   1a2a8:	ldr	r1, [sp, #8]
   1a2ac:	ldr	r2, [sp, #12]
   1a2b0:	sub	r1, r1, r2
   1a2b4:	cmp	r0, r1
   1a2b8:	bgt	1a2d0 <__assert_fail@plt+0x8b9c>
   1a2bc:	ldr	r0, [sp, #12]
   1a2c0:	ldr	r1, [sp, #4]
   1a2c4:	add	r0, r0, r1
   1a2c8:	str	r0, [fp, #-4]
   1a2cc:	b	1a374 <__assert_fail@plt+0x8c40>
   1a2d0:	b	1a368 <__assert_fail@plt+0x8c34>
   1a2d4:	ldr	r0, [sp, #8]
   1a2d8:	movw	r1, #0
   1a2dc:	cmp	r1, r0
   1a2e0:	bge	1a364 <__assert_fail@plt+0x8c30>
   1a2e4:	ldr	r0, [fp, #-8]
   1a2e8:	movw	r1, #14954	; 0x3a6a
   1a2ec:	movt	r1, #2
   1a2f0:	movw	r2, #5
   1a2f4:	bl	11704 <strncmp@plt>
   1a2f8:	cmp	r0, #0
   1a2fc:	bne	1a364 <__assert_fail@plt+0x8c30>
   1a300:	ldr	r0, [fp, #-8]
   1a304:	add	r0, r0, #5
   1a308:	add	r1, sp, #16
   1a30c:	movw	r2, #10
   1a310:	bl	113c8 <strtol@plt>
   1a314:	str	r0, [sp]
   1a318:	ldr	r0, [sp, #16]
   1a31c:	ldrsb	r0, [r0]
   1a320:	cmp	r0, #0
   1a324:	bne	1a360 <__assert_fail@plt+0x8c2c>
   1a328:	ldr	r0, [sp, #12]
   1a32c:	ldr	r1, [sp, #8]
   1a330:	sub	r0, r0, r1
   1a334:	ldr	r1, [sp]
   1a338:	cmp	r0, r1
   1a33c:	bgt	1a360 <__assert_fail@plt+0x8c2c>
   1a340:	ldr	r0, [sp]
   1a344:	cmp	r0, #0
   1a348:	bgt	1a360 <__assert_fail@plt+0x8c2c>
   1a34c:	ldr	r0, [sp, #8]
   1a350:	ldr	r1, [sp]
   1a354:	add	r0, r0, r1
   1a358:	str	r0, [fp, #-4]
   1a35c:	b	1a374 <__assert_fail@plt+0x8c40>
   1a360:	b	1a364 <__assert_fail@plt+0x8c30>
   1a364:	b	1a368 <__assert_fail@plt+0x8c34>
   1a368:	b	1a36c <__assert_fail@plt+0x8c38>
   1a36c:	mvn	r0, #0
   1a370:	str	r0, [fp, #-4]
   1a374:	ldr	r0, [fp, #-4]
   1a378:	mov	sp, fp
   1a37c:	pop	{fp, pc}
   1a380:	push	{fp, lr}
   1a384:	mov	fp, sp
   1a388:	sub	sp, sp, #32
   1a38c:	str	r0, [fp, #-8]
   1a390:	str	r1, [fp, #-12]
   1a394:	movw	r0, #0
   1a398:	str	r0, [sp, #16]
   1a39c:	ldr	r0, [sp, #16]
   1a3a0:	cmp	r0, #35	; 0x23
   1a3a4:	bcs	1a414 <__assert_fail@plt+0x8ce0>
   1a3a8:	ldr	r0, [sp, #16]
   1a3ac:	movw	r1, #12
   1a3b0:	mul	r0, r0, r1
   1a3b4:	movw	r1, #16812	; 0x41ac
   1a3b8:	movt	r1, #3
   1a3bc:	add	r0, r1, r0
   1a3c0:	ldr	r0, [r0]
   1a3c4:	ldr	r1, [fp, #-8]
   1a3c8:	cmp	r0, r1
   1a3cc:	bne	1a400 <__assert_fail@plt+0x8ccc>
   1a3d0:	ldr	r0, [fp, #-12]
   1a3d4:	ldr	r1, [sp, #16]
   1a3d8:	movw	r2, #12
   1a3dc:	mul	r1, r1, r2
   1a3e0:	movw	r2, #16812	; 0x41ac
   1a3e4:	movt	r2, #3
   1a3e8:	add	r1, r2, r1
   1a3ec:	add	r1, r1, #4
   1a3f0:	bl	114dc <strcpy@plt>
   1a3f4:	movw	r1, #0
   1a3f8:	str	r1, [fp, #-4]
   1a3fc:	b	1a4e8 <__assert_fail@plt+0x8db4>
   1a400:	b	1a404 <__assert_fail@plt+0x8cd0>
   1a404:	ldr	r0, [sp, #16]
   1a408:	add	r0, r0, #1
   1a40c:	str	r0, [sp, #16]
   1a410:	b	1a39c <__assert_fail@plt+0x8c68>
   1a414:	bl	116ec <__libc_current_sigrtmin@plt>
   1a418:	str	r0, [sp, #12]
   1a41c:	bl	115a8 <__libc_current_sigrtmax@plt>
   1a420:	str	r0, [sp, #8]
   1a424:	ldr	r0, [sp, #12]
   1a428:	ldr	r1, [fp, #-8]
   1a42c:	cmp	r0, r1
   1a430:	bgt	1a444 <__assert_fail@plt+0x8d10>
   1a434:	ldr	r0, [fp, #-8]
   1a438:	ldr	r1, [sp, #8]
   1a43c:	cmp	r0, r1
   1a440:	ble	1a450 <__assert_fail@plt+0x8d1c>
   1a444:	mvn	r0, #0
   1a448:	str	r0, [fp, #-4]
   1a44c:	b	1a4e8 <__assert_fail@plt+0x8db4>
   1a450:	ldr	r0, [fp, #-8]
   1a454:	ldr	r1, [sp, #12]
   1a458:	ldr	r2, [sp, #8]
   1a45c:	ldr	r3, [sp, #12]
   1a460:	sub	r2, r2, r3
   1a464:	movw	r3, #2
   1a468:	sdiv	r2, r2, r3
   1a46c:	add	r1, r1, r2
   1a470:	cmp	r0, r1
   1a474:	bgt	1a494 <__assert_fail@plt+0x8d60>
   1a478:	ldr	r0, [fp, #-12]
   1a47c:	movw	r1, #14948	; 0x3a64
   1a480:	movt	r1, #2
   1a484:	bl	114dc <strcpy@plt>
   1a488:	ldr	r1, [sp, #12]
   1a48c:	str	r1, [sp, #4]
   1a490:	b	1a4ac <__assert_fail@plt+0x8d78>
   1a494:	ldr	r0, [fp, #-12]
   1a498:	movw	r1, #14954	; 0x3a6a
   1a49c:	movt	r1, #2
   1a4a0:	bl	114dc <strcpy@plt>
   1a4a4:	ldr	r1, [sp, #8]
   1a4a8:	str	r1, [sp, #4]
   1a4ac:	ldr	r0, [fp, #-8]
   1a4b0:	ldr	r1, [sp, #4]
   1a4b4:	sub	r0, r0, r1
   1a4b8:	str	r0, [sp]
   1a4bc:	ldr	r0, [sp]
   1a4c0:	cmp	r0, #0
   1a4c4:	beq	1a4e0 <__assert_fail@plt+0x8dac>
   1a4c8:	ldr	r0, [fp, #-12]
   1a4cc:	add	r0, r0, #5
   1a4d0:	ldr	r2, [sp]
   1a4d4:	movw	r1, #14960	; 0x3a70
   1a4d8:	movt	r1, #2
   1a4dc:	bl	116bc <sprintf@plt>
   1a4e0:	movw	r0, #0
   1a4e4:	str	r0, [fp, #-4]
   1a4e8:	ldr	r0, [fp, #-4]
   1a4ec:	mov	sp, fp
   1a4f0:	pop	{fp, pc}
   1a4f4:	push	{fp, lr}
   1a4f8:	mov	fp, sp
   1a4fc:	sub	sp, sp, #24
   1a500:	str	r0, [fp, #-4]
   1a504:	ldr	r0, [fp, #-4]
   1a508:	movw	r1, #0
   1a50c:	cmp	r1, r0
   1a510:	bgt	1a560 <__assert_fail@plt+0x8e2c>
   1a514:	ldr	r0, [fp, #-4]
   1a518:	cmp	r0, #2
   1a51c:	bgt	1a560 <__assert_fail@plt+0x8e2c>
   1a520:	ldr	r0, [fp, #-4]
   1a524:	bl	2182c <__assert_fail@plt+0x100f8>
   1a528:	str	r0, [fp, #-8]
   1a52c:	bl	115f0 <__errno_location@plt>
   1a530:	ldr	r0, [r0]
   1a534:	str	r0, [sp, #12]
   1a538:	ldr	r0, [fp, #-4]
   1a53c:	bl	1171c <close@plt>
   1a540:	ldr	r1, [sp, #12]
   1a544:	str	r0, [sp, #8]
   1a548:	str	r1, [sp, #4]
   1a54c:	bl	115f0 <__errno_location@plt>
   1a550:	ldr	r1, [sp, #4]
   1a554:	str	r1, [r0]
   1a558:	ldr	r0, [fp, #-8]
   1a55c:	str	r0, [fp, #-4]
   1a560:	ldr	r0, [fp, #-4]
   1a564:	mov	sp, fp
   1a568:	pop	{fp, pc}
   1a56c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a570:	add	fp, sp, #28
   1a574:	sub	sp, sp, #196	; 0xc4
   1a578:	ldr	ip, [fp, #12]
   1a57c:	ldr	lr, [fp, #8]
   1a580:	str	r0, [fp, #-32]	; 0xffffffe0
   1a584:	str	r1, [fp, #-36]	; 0xffffffdc
   1a588:	str	r2, [fp, #-40]	; 0xffffffd8
   1a58c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a590:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a594:	movw	r1, #0
   1a598:	cmp	r0, r1
   1a59c:	beq	1a5d0 <__assert_fail@plt+0x8e9c>
   1a5a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a5a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5b0:	movw	ip, #14964	; 0x3a74
   1a5b4:	movt	ip, #2
   1a5b8:	str	r1, [fp, #-48]	; 0xffffffd0
   1a5bc:	mov	r1, ip
   1a5c0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1a5c4:	str	ip, [sp]
   1a5c8:	bl	115d8 <fprintf@plt>
   1a5cc:	b	1a5e8 <__assert_fail@plt+0x8eb4>
   1a5d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a5d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a5dc:	movw	r1, #14976	; 0x3a80
   1a5e0:	movt	r1, #2
   1a5e4:	bl	115d8 <fprintf@plt>
   1a5e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5ec:	movw	r1, #14983	; 0x3a87
   1a5f0:	movt	r1, #2
   1a5f4:	str	r0, [fp, #-52]	; 0xffffffcc
   1a5f8:	mov	r0, r1
   1a5fc:	bl	11590 <gettext@plt>
   1a600:	movw	r1, #15701	; 0x3d55
   1a604:	movt	r1, #2
   1a608:	movw	r3, #2022	; 0x7e6
   1a60c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a610:	str	r0, [fp, #-56]	; 0xffffffc8
   1a614:	mov	r0, r2
   1a618:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a61c:	bl	115d8 <fprintf@plt>
   1a620:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a624:	movw	r2, #11332	; 0x2c44
   1a628:	movt	r2, #2
   1a62c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a630:	mov	r0, r2
   1a634:	str	r2, [fp, #-64]	; 0xffffffc0
   1a638:	bl	113a4 <fputs_unlocked@plt>
   1a63c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a640:	movw	r2, #14987	; 0x3a8b
   1a644:	movt	r2, #2
   1a648:	str	r0, [fp, #-68]	; 0xffffffbc
   1a64c:	mov	r0, r2
   1a650:	str	r1, [fp, #-72]	; 0xffffffb8
   1a654:	bl	11590 <gettext@plt>
   1a658:	movw	r2, #15158	; 0x3b36
   1a65c:	movt	r2, #2
   1a660:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a664:	str	r0, [fp, #-76]	; 0xffffffb4
   1a668:	mov	r0, r1
   1a66c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a670:	bl	115d8 <fprintf@plt>
   1a674:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a678:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a67c:	str	r0, [fp, #-80]	; 0xffffffb0
   1a680:	mov	r0, r2
   1a684:	bl	113a4 <fputs_unlocked@plt>
   1a688:	ldr	r1, [fp, #12]
   1a68c:	cmp	r1, #9
   1a690:	str	r1, [fp, #-84]	; 0xffffffac
   1a694:	bhi	1aab0 <__assert_fail@plt+0x937c>
   1a698:	add	r0, pc, #8
   1a69c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a6a0:	ldr	r0, [r0, r1, lsl #2]
   1a6a4:	mov	pc, r0
   1a6a8:	ldrdeq	sl, [r1], -r0
   1a6ac:	ldrdeq	sl, [r1], -r4
   1a6b0:	andeq	sl, r1, ip, lsl #14
   1a6b4:	andeq	sl, r1, ip, asr #14
   1a6b8:	andeq	sl, r1, r4, lsr #15
   1a6bc:	andeq	sl, r1, r8, lsl #16
   1a6c0:	andeq	sl, r1, r8, ror r8
   1a6c4:	strdeq	sl, [r1], -r4
   1a6c8:	andeq	sl, r1, ip, ror r9
   1a6cc:	andeq	sl, r1, r0, lsl sl
   1a6d0:	b	1ab4c <__assert_fail@plt+0x9418>
   1a6d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6d8:	movw	r1, #15192	; 0x3b58
   1a6dc:	movt	r1, #2
   1a6e0:	str	r0, [fp, #-88]	; 0xffffffa8
   1a6e4:	mov	r0, r1
   1a6e8:	bl	11590 <gettext@plt>
   1a6ec:	ldr	r1, [fp, #8]
   1a6f0:	ldr	r2, [r1]
   1a6f4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a6f8:	str	r0, [fp, #-92]	; 0xffffffa4
   1a6fc:	mov	r0, r1
   1a700:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1a704:	bl	115d8 <fprintf@plt>
   1a708:	b	1ab4c <__assert_fail@plt+0x9418>
   1a70c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a710:	movw	r1, #15208	; 0x3b68
   1a714:	movt	r1, #2
   1a718:	str	r0, [fp, #-96]	; 0xffffffa0
   1a71c:	mov	r0, r1
   1a720:	bl	11590 <gettext@plt>
   1a724:	ldr	r1, [fp, #8]
   1a728:	ldr	r2, [r1]
   1a72c:	ldr	r1, [fp, #8]
   1a730:	ldr	r3, [r1, #4]
   1a734:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a738:	str	r0, [fp, #-100]	; 0xffffff9c
   1a73c:	mov	r0, r1
   1a740:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a744:	bl	115d8 <fprintf@plt>
   1a748:	b	1ab4c <__assert_fail@plt+0x9418>
   1a74c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a750:	movw	r1, #15231	; 0x3b7f
   1a754:	movt	r1, #2
   1a758:	str	r0, [fp, #-104]	; 0xffffff98
   1a75c:	mov	r0, r1
   1a760:	bl	11590 <gettext@plt>
   1a764:	ldr	r1, [fp, #8]
   1a768:	ldr	r2, [r1]
   1a76c:	ldr	r1, [fp, #8]
   1a770:	ldr	r3, [r1, #4]
   1a774:	ldr	r1, [fp, #8]
   1a778:	ldr	r1, [r1, #8]
   1a77c:	ldr	ip, [fp, #-104]	; 0xffffff98
   1a780:	str	r0, [fp, #-108]	; 0xffffff94
   1a784:	mov	r0, ip
   1a788:	ldr	lr, [fp, #-108]	; 0xffffff94
   1a78c:	str	r1, [sp, #112]	; 0x70
   1a790:	mov	r1, lr
   1a794:	ldr	r4, [sp, #112]	; 0x70
   1a798:	str	r4, [sp]
   1a79c:	bl	115d8 <fprintf@plt>
   1a7a0:	b	1ab4c <__assert_fail@plt+0x9418>
   1a7a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7a8:	movw	r1, #15259	; 0x3b9b
   1a7ac:	movt	r1, #2
   1a7b0:	str	r0, [sp, #108]	; 0x6c
   1a7b4:	mov	r0, r1
   1a7b8:	bl	11590 <gettext@plt>
   1a7bc:	ldr	r1, [fp, #8]
   1a7c0:	ldr	r2, [r1]
   1a7c4:	ldr	r1, [fp, #8]
   1a7c8:	ldr	r3, [r1, #4]
   1a7cc:	ldr	r1, [fp, #8]
   1a7d0:	ldr	r1, [r1, #8]
   1a7d4:	ldr	ip, [fp, #8]
   1a7d8:	ldr	ip, [ip, #12]
   1a7dc:	ldr	lr, [sp, #108]	; 0x6c
   1a7e0:	str	r0, [sp, #104]	; 0x68
   1a7e4:	mov	r0, lr
   1a7e8:	ldr	r4, [sp, #104]	; 0x68
   1a7ec:	str	r1, [sp, #100]	; 0x64
   1a7f0:	mov	r1, r4
   1a7f4:	ldr	r5, [sp, #100]	; 0x64
   1a7f8:	str	r5, [sp]
   1a7fc:	str	ip, [sp, #4]
   1a800:	bl	115d8 <fprintf@plt>
   1a804:	b	1ab4c <__assert_fail@plt+0x9418>
   1a808:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a80c:	movw	r1, #15291	; 0x3bbb
   1a810:	movt	r1, #2
   1a814:	str	r0, [sp, #96]	; 0x60
   1a818:	mov	r0, r1
   1a81c:	bl	11590 <gettext@plt>
   1a820:	ldr	r1, [fp, #8]
   1a824:	ldr	r2, [r1]
   1a828:	ldr	r1, [fp, #8]
   1a82c:	ldr	r3, [r1, #4]
   1a830:	ldr	r1, [fp, #8]
   1a834:	ldr	r1, [r1, #8]
   1a838:	ldr	ip, [fp, #8]
   1a83c:	ldr	ip, [ip, #12]
   1a840:	ldr	lr, [fp, #8]
   1a844:	ldr	lr, [lr, #16]
   1a848:	ldr	r4, [sp, #96]	; 0x60
   1a84c:	str	r0, [sp, #92]	; 0x5c
   1a850:	mov	r0, r4
   1a854:	ldr	r5, [sp, #92]	; 0x5c
   1a858:	str	r1, [sp, #88]	; 0x58
   1a85c:	mov	r1, r5
   1a860:	ldr	r6, [sp, #88]	; 0x58
   1a864:	str	r6, [sp]
   1a868:	str	ip, [sp, #4]
   1a86c:	str	lr, [sp, #8]
   1a870:	bl	115d8 <fprintf@plt>
   1a874:	b	1ab4c <__assert_fail@plt+0x9418>
   1a878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a87c:	movw	r1, #15327	; 0x3bdf
   1a880:	movt	r1, #2
   1a884:	str	r0, [sp, #84]	; 0x54
   1a888:	mov	r0, r1
   1a88c:	bl	11590 <gettext@plt>
   1a890:	ldr	r1, [fp, #8]
   1a894:	ldr	r2, [r1]
   1a898:	ldr	r1, [fp, #8]
   1a89c:	ldr	r3, [r1, #4]
   1a8a0:	ldr	r1, [fp, #8]
   1a8a4:	ldr	r1, [r1, #8]
   1a8a8:	ldr	ip, [fp, #8]
   1a8ac:	ldr	ip, [ip, #12]
   1a8b0:	ldr	lr, [fp, #8]
   1a8b4:	ldr	lr, [lr, #16]
   1a8b8:	ldr	r4, [fp, #8]
   1a8bc:	ldr	r4, [r4, #20]
   1a8c0:	ldr	r5, [sp, #84]	; 0x54
   1a8c4:	str	r0, [sp, #80]	; 0x50
   1a8c8:	mov	r0, r5
   1a8cc:	ldr	r6, [sp, #80]	; 0x50
   1a8d0:	str	r1, [sp, #76]	; 0x4c
   1a8d4:	mov	r1, r6
   1a8d8:	ldr	r7, [sp, #76]	; 0x4c
   1a8dc:	str	r7, [sp]
   1a8e0:	str	ip, [sp, #4]
   1a8e4:	str	lr, [sp, #8]
   1a8e8:	str	r4, [sp, #12]
   1a8ec:	bl	115d8 <fprintf@plt>
   1a8f0:	b	1ab4c <__assert_fail@plt+0x9418>
   1a8f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a8f8:	movw	r1, #15367	; 0x3c07
   1a8fc:	movt	r1, #2
   1a900:	str	r0, [sp, #72]	; 0x48
   1a904:	mov	r0, r1
   1a908:	bl	11590 <gettext@plt>
   1a90c:	ldr	r1, [fp, #8]
   1a910:	ldr	r2, [r1]
   1a914:	ldr	r1, [fp, #8]
   1a918:	ldr	r3, [r1, #4]
   1a91c:	ldr	r1, [fp, #8]
   1a920:	ldr	r1, [r1, #8]
   1a924:	ldr	ip, [fp, #8]
   1a928:	ldr	ip, [ip, #12]
   1a92c:	ldr	lr, [fp, #8]
   1a930:	ldr	lr, [lr, #16]
   1a934:	ldr	r4, [fp, #8]
   1a938:	ldr	r4, [r4, #20]
   1a93c:	ldr	r5, [fp, #8]
   1a940:	ldr	r5, [r5, #24]
   1a944:	ldr	r6, [sp, #72]	; 0x48
   1a948:	str	r0, [sp, #68]	; 0x44
   1a94c:	mov	r0, r6
   1a950:	ldr	r7, [sp, #68]	; 0x44
   1a954:	str	r1, [sp, #64]	; 0x40
   1a958:	mov	r1, r7
   1a95c:	ldr	r8, [sp, #64]	; 0x40
   1a960:	str	r8, [sp]
   1a964:	str	ip, [sp, #4]
   1a968:	str	lr, [sp, #8]
   1a96c:	str	r4, [sp, #12]
   1a970:	str	r5, [sp, #16]
   1a974:	bl	115d8 <fprintf@plt>
   1a978:	b	1ab4c <__assert_fail@plt+0x9418>
   1a97c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a980:	movw	r1, #15411	; 0x3c33
   1a984:	movt	r1, #2
   1a988:	str	r0, [sp, #60]	; 0x3c
   1a98c:	mov	r0, r1
   1a990:	bl	11590 <gettext@plt>
   1a994:	ldr	r1, [fp, #8]
   1a998:	ldr	r2, [r1]
   1a99c:	ldr	r1, [fp, #8]
   1a9a0:	ldr	r3, [r1, #4]
   1a9a4:	ldr	r1, [fp, #8]
   1a9a8:	ldr	r1, [r1, #8]
   1a9ac:	ldr	ip, [fp, #8]
   1a9b0:	ldr	ip, [ip, #12]
   1a9b4:	ldr	lr, [fp, #8]
   1a9b8:	ldr	lr, [lr, #16]
   1a9bc:	ldr	r4, [fp, #8]
   1a9c0:	ldr	r4, [r4, #20]
   1a9c4:	ldr	r5, [fp, #8]
   1a9c8:	ldr	r5, [r5, #24]
   1a9cc:	ldr	r6, [fp, #8]
   1a9d0:	ldr	r6, [r6, #28]
   1a9d4:	ldr	r7, [sp, #60]	; 0x3c
   1a9d8:	str	r0, [sp, #56]	; 0x38
   1a9dc:	mov	r0, r7
   1a9e0:	ldr	r8, [sp, #56]	; 0x38
   1a9e4:	str	r1, [sp, #52]	; 0x34
   1a9e8:	mov	r1, r8
   1a9ec:	ldr	r9, [sp, #52]	; 0x34
   1a9f0:	str	r9, [sp]
   1a9f4:	str	ip, [sp, #4]
   1a9f8:	str	lr, [sp, #8]
   1a9fc:	str	r4, [sp, #12]
   1aa00:	str	r5, [sp, #16]
   1aa04:	str	r6, [sp, #20]
   1aa08:	bl	115d8 <fprintf@plt>
   1aa0c:	b	1ab4c <__assert_fail@plt+0x9418>
   1aa10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa14:	movw	r1, #15459	; 0x3c63
   1aa18:	movt	r1, #2
   1aa1c:	str	r0, [sp, #48]	; 0x30
   1aa20:	mov	r0, r1
   1aa24:	bl	11590 <gettext@plt>
   1aa28:	ldr	r1, [fp, #8]
   1aa2c:	ldr	r2, [r1]
   1aa30:	ldr	r1, [fp, #8]
   1aa34:	ldr	r3, [r1, #4]
   1aa38:	ldr	r1, [fp, #8]
   1aa3c:	ldr	r1, [r1, #8]
   1aa40:	ldr	ip, [fp, #8]
   1aa44:	ldr	ip, [ip, #12]
   1aa48:	ldr	lr, [fp, #8]
   1aa4c:	ldr	lr, [lr, #16]
   1aa50:	ldr	r4, [fp, #8]
   1aa54:	ldr	r4, [r4, #20]
   1aa58:	ldr	r5, [fp, #8]
   1aa5c:	ldr	r5, [r5, #24]
   1aa60:	ldr	r6, [fp, #8]
   1aa64:	ldr	r6, [r6, #28]
   1aa68:	ldr	r7, [fp, #8]
   1aa6c:	ldr	r7, [r7, #32]
   1aa70:	ldr	r8, [sp, #48]	; 0x30
   1aa74:	str	r0, [sp, #44]	; 0x2c
   1aa78:	mov	r0, r8
   1aa7c:	ldr	r9, [sp, #44]	; 0x2c
   1aa80:	str	r1, [sp, #40]	; 0x28
   1aa84:	mov	r1, r9
   1aa88:	ldr	sl, [sp, #40]	; 0x28
   1aa8c:	str	sl, [sp]
   1aa90:	str	ip, [sp, #4]
   1aa94:	str	lr, [sp, #8]
   1aa98:	str	r4, [sp, #12]
   1aa9c:	str	r5, [sp, #16]
   1aaa0:	str	r6, [sp, #20]
   1aaa4:	str	r7, [sp, #24]
   1aaa8:	bl	115d8 <fprintf@plt>
   1aaac:	b	1ab4c <__assert_fail@plt+0x9418>
   1aab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aab4:	movw	r1, #15511	; 0x3c97
   1aab8:	movt	r1, #2
   1aabc:	str	r0, [sp, #36]	; 0x24
   1aac0:	mov	r0, r1
   1aac4:	bl	11590 <gettext@plt>
   1aac8:	ldr	r1, [fp, #8]
   1aacc:	ldr	r2, [r1]
   1aad0:	ldr	r1, [fp, #8]
   1aad4:	ldr	r3, [r1, #4]
   1aad8:	ldr	r1, [fp, #8]
   1aadc:	ldr	r1, [r1, #8]
   1aae0:	ldr	ip, [fp, #8]
   1aae4:	ldr	ip, [ip, #12]
   1aae8:	ldr	lr, [fp, #8]
   1aaec:	ldr	lr, [lr, #16]
   1aaf0:	ldr	r4, [fp, #8]
   1aaf4:	ldr	r4, [r4, #20]
   1aaf8:	ldr	r5, [fp, #8]
   1aafc:	ldr	r5, [r5, #24]
   1ab00:	ldr	r6, [fp, #8]
   1ab04:	ldr	r6, [r6, #28]
   1ab08:	ldr	r7, [fp, #8]
   1ab0c:	ldr	r7, [r7, #32]
   1ab10:	ldr	r8, [sp, #36]	; 0x24
   1ab14:	str	r0, [sp, #32]
   1ab18:	mov	r0, r8
   1ab1c:	ldr	r9, [sp, #32]
   1ab20:	str	r1, [sp, #28]
   1ab24:	mov	r1, r9
   1ab28:	ldr	sl, [sp, #28]
   1ab2c:	str	sl, [sp]
   1ab30:	str	ip, [sp, #4]
   1ab34:	str	lr, [sp, #8]
   1ab38:	str	r4, [sp, #12]
   1ab3c:	str	r5, [sp, #16]
   1ab40:	str	r6, [sp, #20]
   1ab44:	str	r7, [sp, #24]
   1ab48:	bl	115d8 <fprintf@plt>
   1ab4c:	sub	sp, fp, #28
   1ab50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab54:	push	{fp, lr}
   1ab58:	mov	fp, sp
   1ab5c:	sub	sp, sp, #32
   1ab60:	ldr	ip, [fp, #8]
   1ab64:	str	r0, [fp, #-4]
   1ab68:	str	r1, [fp, #-8]
   1ab6c:	str	r2, [fp, #-12]
   1ab70:	str	r3, [sp, #16]
   1ab74:	movw	r0, #0
   1ab78:	str	r0, [sp, #12]
   1ab7c:	ldr	r0, [fp, #8]
   1ab80:	ldr	r1, [sp, #12]
   1ab84:	add	r0, r0, r1, lsl #2
   1ab88:	ldr	r0, [r0]
   1ab8c:	movw	r1, #0
   1ab90:	cmp	r0, r1
   1ab94:	beq	1abac <__assert_fail@plt+0x9478>
   1ab98:	b	1ab9c <__assert_fail@plt+0x9468>
   1ab9c:	ldr	r0, [sp, #12]
   1aba0:	add	r0, r0, #1
   1aba4:	str	r0, [sp, #12]
   1aba8:	b	1ab7c <__assert_fail@plt+0x9448>
   1abac:	ldr	r0, [fp, #-4]
   1abb0:	ldr	r1, [fp, #-8]
   1abb4:	ldr	r2, [fp, #-12]
   1abb8:	ldr	r3, [sp, #16]
   1abbc:	ldr	ip, [fp, #8]
   1abc0:	ldr	lr, [sp, #12]
   1abc4:	str	ip, [sp]
   1abc8:	str	lr, [sp, #4]
   1abcc:	bl	1a56c <__assert_fail@plt+0x8e38>
   1abd0:	mov	sp, fp
   1abd4:	pop	{fp, pc}
   1abd8:	push	{fp, lr}
   1abdc:	mov	fp, sp
   1abe0:	sub	sp, sp, #80	; 0x50
   1abe4:	ldr	ip, [fp, #8]
   1abe8:	str	ip, [fp, #-4]
   1abec:	str	r0, [fp, #-8]
   1abf0:	str	r1, [fp, #-12]
   1abf4:	str	r2, [fp, #-16]
   1abf8:	str	r3, [fp, #-20]	; 0xffffffec
   1abfc:	movw	r0, #0
   1ac00:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac08:	cmp	r0, #10
   1ac0c:	movw	r0, #0
   1ac10:	str	r0, [sp, #12]
   1ac14:	bcs	1ac4c <__assert_fail@plt+0x9518>
   1ac18:	ldr	r0, [fp, #-4]
   1ac1c:	add	r1, r0, #4
   1ac20:	str	r1, [fp, #-4]
   1ac24:	ldr	r0, [r0]
   1ac28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac2c:	add	r2, sp, #16
   1ac30:	add	r1, r2, r1, lsl #2
   1ac34:	str	r0, [r1]
   1ac38:	movw	r1, #0
   1ac3c:	cmp	r0, r1
   1ac40:	movw	r0, #0
   1ac44:	movne	r0, #1
   1ac48:	str	r0, [sp, #12]
   1ac4c:	ldr	r0, [sp, #12]
   1ac50:	tst	r0, #1
   1ac54:	beq	1ac6c <__assert_fail@plt+0x9538>
   1ac58:	b	1ac5c <__assert_fail@plt+0x9528>
   1ac5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac60:	add	r0, r0, #1
   1ac64:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac68:	b	1ac04 <__assert_fail@plt+0x94d0>
   1ac6c:	add	r0, sp, #16
   1ac70:	ldr	r1, [fp, #-8]
   1ac74:	ldr	r2, [fp, #-12]
   1ac78:	ldr	r3, [fp, #-16]
   1ac7c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1ac80:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1ac84:	str	r0, [sp, #8]
   1ac88:	mov	r0, r1
   1ac8c:	mov	r1, r2
   1ac90:	mov	r2, r3
   1ac94:	mov	r3, ip
   1ac98:	ldr	ip, [sp, #8]
   1ac9c:	str	ip, [sp]
   1aca0:	str	lr, [sp, #4]
   1aca4:	bl	1a56c <__assert_fail@plt+0x8e38>
   1aca8:	mov	sp, fp
   1acac:	pop	{fp, pc}
   1acb0:	push	{fp, lr}
   1acb4:	mov	fp, sp
   1acb8:	sub	sp, sp, #24
   1acbc:	str	r0, [fp, #-4]
   1acc0:	str	r1, [fp, #-8]
   1acc4:	str	r2, [sp, #12]
   1acc8:	str	r3, [sp, #8]
   1accc:	add	r0, fp, #8
   1acd0:	str	r0, [sp, #4]
   1acd4:	ldr	r0, [fp, #-4]
   1acd8:	ldr	r1, [fp, #-8]
   1acdc:	ldr	r2, [sp, #12]
   1ace0:	ldr	r3, [sp, #8]
   1ace4:	ldr	ip, [sp, #4]
   1ace8:	mov	lr, sp
   1acec:	str	ip, [lr]
   1acf0:	bl	1abd8 <__assert_fail@plt+0x94a4>
   1acf4:	add	r0, sp, #4
   1acf8:	mov	sp, fp
   1acfc:	pop	{fp, pc}
   1ad00:	push	{fp, lr}
   1ad04:	mov	fp, sp
   1ad08:	sub	sp, sp, #16
   1ad0c:	movw	r0, #17252	; 0x4364
   1ad10:	movt	r0, #3
   1ad14:	ldr	r1, [r0]
   1ad18:	movw	r0, #11332	; 0x2c44
   1ad1c:	movt	r0, #2
   1ad20:	bl	113a4 <fputs_unlocked@plt>
   1ad24:	movw	r1, #15571	; 0x3cd3
   1ad28:	movt	r1, #2
   1ad2c:	str	r0, [fp, #-4]
   1ad30:	mov	r0, r1
   1ad34:	bl	11590 <gettext@plt>
   1ad38:	movw	r1, #15591	; 0x3ce7
   1ad3c:	movt	r1, #2
   1ad40:	bl	113d4 <printf@plt>
   1ad44:	movw	r1, #15613	; 0x3cfd
   1ad48:	movt	r1, #2
   1ad4c:	str	r0, [sp, #8]
   1ad50:	mov	r0, r1
   1ad54:	bl	11590 <gettext@plt>
   1ad58:	movw	r1, #12403	; 0x3073
   1ad5c:	movt	r1, #2
   1ad60:	movw	r2, #13116	; 0x333c
   1ad64:	movt	r2, #2
   1ad68:	bl	113d4 <printf@plt>
   1ad6c:	movw	r1, #15633	; 0x3d11
   1ad70:	movt	r1, #2
   1ad74:	str	r0, [sp, #4]
   1ad78:	mov	r0, r1
   1ad7c:	bl	11590 <gettext@plt>
   1ad80:	movw	r1, #15672	; 0x3d38
   1ad84:	movt	r1, #2
   1ad88:	bl	113d4 <printf@plt>
   1ad8c:	mov	sp, fp
   1ad90:	pop	{fp, pc}
   1ad94:	push	{fp, lr}
   1ad98:	mov	fp, sp
   1ad9c:	sub	sp, sp, #16
   1ada0:	str	r0, [fp, #-4]
   1ada4:	str	r1, [sp, #8]
   1ada8:	ldr	r0, [fp, #-4]
   1adac:	ldr	r1, [sp, #8]
   1adb0:	bl	1ffec <__assert_fail@plt+0xe8b8>
   1adb4:	str	r0, [sp, #4]
   1adb8:	ldr	r0, [sp, #4]
   1adbc:	movw	r1, #0
   1adc0:	cmp	r0, r1
   1adc4:	bne	1adcc <__assert_fail@plt+0x9698>
   1adc8:	bl	1dbb4 <__assert_fail@plt+0xc480>
   1adcc:	ldr	r0, [sp, #4]
   1add0:	mov	sp, fp
   1add4:	pop	{fp, pc}
   1add8:	push	{fp, lr}
   1addc:	mov	fp, sp
   1ade0:	sub	sp, sp, #16
   1ade4:	str	r0, [fp, #-4]
   1ade8:	str	r1, [sp, #8]
   1adec:	str	r2, [sp, #4]
   1adf0:	ldr	r0, [fp, #-4]
   1adf4:	ldr	r1, [sp, #8]
   1adf8:	ldr	r2, [sp, #4]
   1adfc:	bl	1ae08 <__assert_fail@plt+0x96d4>
   1ae00:	mov	sp, fp
   1ae04:	pop	{fp, pc}
   1ae08:	push	{fp, lr}
   1ae0c:	mov	fp, sp
   1ae10:	sub	sp, sp, #16
   1ae14:	str	r0, [fp, #-4]
   1ae18:	str	r1, [sp, #8]
   1ae1c:	str	r2, [sp, #4]
   1ae20:	ldr	r0, [fp, #-4]
   1ae24:	ldr	r1, [sp, #8]
   1ae28:	ldr	r2, [sp, #4]
   1ae2c:	bl	204ec <__assert_fail@plt+0xedb8>
   1ae30:	str	r0, [sp]
   1ae34:	ldr	r0, [sp]
   1ae38:	movw	r1, #0
   1ae3c:	cmp	r0, r1
   1ae40:	bne	1ae70 <__assert_fail@plt+0x973c>
   1ae44:	ldr	r0, [fp, #-4]
   1ae48:	movw	r1, #0
   1ae4c:	cmp	r0, r1
   1ae50:	beq	1ae6c <__assert_fail@plt+0x9738>
   1ae54:	ldr	r0, [sp, #8]
   1ae58:	cmp	r0, #0
   1ae5c:	beq	1ae70 <__assert_fail@plt+0x973c>
   1ae60:	ldr	r0, [sp, #4]
   1ae64:	cmp	r0, #0
   1ae68:	beq	1ae70 <__assert_fail@plt+0x973c>
   1ae6c:	bl	1dbb4 <__assert_fail@plt+0xc480>
   1ae70:	ldr	r0, [sp]
   1ae74:	mov	sp, fp
   1ae78:	pop	{fp, pc}
   1ae7c:	push	{fp, lr}
   1ae80:	mov	fp, sp
   1ae84:	sub	sp, sp, #8
   1ae88:	str	r0, [sp, #4]
   1ae8c:	ldr	r0, [sp, #4]
   1ae90:	bl	1feb8 <__assert_fail@plt+0xe784>
   1ae94:	bl	1aea0 <__assert_fail@plt+0x976c>
   1ae98:	mov	sp, fp
   1ae9c:	pop	{fp, pc}
   1aea0:	push	{fp, lr}
   1aea4:	mov	fp, sp
   1aea8:	sub	sp, sp, #8
   1aeac:	str	r0, [sp, #4]
   1aeb0:	ldr	r0, [sp, #4]
   1aeb4:	movw	r1, #0
   1aeb8:	cmp	r0, r1
   1aebc:	bne	1aec4 <__assert_fail@plt+0x9790>
   1aec0:	bl	1dbb4 <__assert_fail@plt+0xc480>
   1aec4:	ldr	r0, [sp, #4]
   1aec8:	mov	sp, fp
   1aecc:	pop	{fp, pc}
   1aed0:	push	{fp, lr}
   1aed4:	mov	fp, sp
   1aed8:	sub	sp, sp, #8
   1aedc:	str	r0, [sp, #4]
   1aee0:	ldr	r0, [sp, #4]
   1aee4:	bl	20228 <__assert_fail@plt+0xeaf4>
   1aee8:	bl	1aea0 <__assert_fail@plt+0x976c>
   1aeec:	mov	sp, fp
   1aef0:	pop	{fp, pc}
   1aef4:	push	{fp, lr}
   1aef8:	mov	fp, sp
   1aefc:	sub	sp, sp, #8
   1af00:	str	r0, [sp, #4]
   1af04:	ldr	r0, [sp, #4]
   1af08:	bl	1ae7c <__assert_fail@plt+0x9748>
   1af0c:	mov	sp, fp
   1af10:	pop	{fp, pc}
   1af14:	push	{fp, lr}
   1af18:	mov	fp, sp
   1af1c:	sub	sp, sp, #16
   1af20:	str	r0, [fp, #-4]
   1af24:	str	r1, [sp, #8]
   1af28:	ldr	r0, [fp, #-4]
   1af2c:	ldr	r1, [sp, #8]
   1af30:	bl	1ff28 <__assert_fail@plt+0xe7f4>
   1af34:	str	r0, [sp, #4]
   1af38:	ldr	r0, [sp, #4]
   1af3c:	movw	r1, #0
   1af40:	cmp	r0, r1
   1af44:	bne	1af68 <__assert_fail@plt+0x9834>
   1af48:	ldr	r0, [fp, #-4]
   1af4c:	movw	r1, #0
   1af50:	cmp	r0, r1
   1af54:	beq	1af64 <__assert_fail@plt+0x9830>
   1af58:	ldr	r0, [sp, #8]
   1af5c:	cmp	r0, #0
   1af60:	beq	1af68 <__assert_fail@plt+0x9834>
   1af64:	bl	1dbb4 <__assert_fail@plt+0xc480>
   1af68:	ldr	r0, [sp, #4]
   1af6c:	mov	sp, fp
   1af70:	pop	{fp, pc}
   1af74:	push	{fp, lr}
   1af78:	mov	fp, sp
   1af7c:	sub	sp, sp, #8
   1af80:	str	r0, [sp, #4]
   1af84:	str	r1, [sp]
   1af88:	ldr	r0, [sp, #4]
   1af8c:	ldr	r1, [sp]
   1af90:	bl	20268 <__assert_fail@plt+0xeb34>
   1af94:	bl	1aea0 <__assert_fail@plt+0x976c>
   1af98:	mov	sp, fp
   1af9c:	pop	{fp, pc}
   1afa0:	push	{fp, lr}
   1afa4:	mov	fp, sp
   1afa8:	sub	sp, sp, #16
   1afac:	str	r0, [fp, #-4]
   1afb0:	str	r1, [sp, #8]
   1afb4:	str	r2, [sp, #4]
   1afb8:	ldr	r0, [fp, #-4]
   1afbc:	ldr	r1, [sp, #8]
   1afc0:	ldr	r2, [sp, #4]
   1afc4:	bl	20360 <__assert_fail@plt+0xec2c>
   1afc8:	bl	1aea0 <__assert_fail@plt+0x976c>
   1afcc:	mov	sp, fp
   1afd0:	pop	{fp, pc}
   1afd4:	push	{fp, lr}
   1afd8:	mov	fp, sp
   1afdc:	sub	sp, sp, #8
   1afe0:	str	r0, [sp, #4]
   1afe4:	str	r1, [sp]
   1afe8:	ldr	r1, [sp, #4]
   1afec:	ldr	r2, [sp]
   1aff0:	movw	r0, #0
   1aff4:	bl	1ae08 <__assert_fail@plt+0x96d4>
   1aff8:	mov	sp, fp
   1affc:	pop	{fp, pc}
   1b000:	push	{fp, lr}
   1b004:	mov	fp, sp
   1b008:	sub	sp, sp, #8
   1b00c:	str	r0, [sp, #4]
   1b010:	str	r1, [sp]
   1b014:	ldr	r1, [sp, #4]
   1b018:	ldr	r2, [sp]
   1b01c:	movw	r0, #0
   1b020:	bl	1afa0 <__assert_fail@plt+0x986c>
   1b024:	mov	sp, fp
   1b028:	pop	{fp, pc}
   1b02c:	push	{fp, lr}
   1b030:	mov	fp, sp
   1b034:	sub	sp, sp, #8
   1b038:	str	r0, [sp, #4]
   1b03c:	str	r1, [sp]
   1b040:	ldr	r0, [sp, #4]
   1b044:	ldr	r1, [sp]
   1b048:	movw	r2, #1
   1b04c:	bl	1b058 <__assert_fail@plt+0x9924>
   1b050:	mov	sp, fp
   1b054:	pop	{fp, pc}
   1b058:	push	{fp, lr}
   1b05c:	mov	fp, sp
   1b060:	sub	sp, sp, #16
   1b064:	str	r0, [fp, #-4]
   1b068:	str	r1, [sp, #8]
   1b06c:	str	r2, [sp, #4]
   1b070:	ldr	r0, [sp, #8]
   1b074:	ldr	r0, [r0]
   1b078:	str	r0, [sp]
   1b07c:	ldr	r0, [fp, #-4]
   1b080:	movw	r1, #0
   1b084:	cmp	r0, r1
   1b088:	bne	1b0d4 <__assert_fail@plt+0x99a0>
   1b08c:	ldr	r0, [sp]
   1b090:	cmp	r0, #0
   1b094:	bne	1b0d0 <__assert_fail@plt+0x999c>
   1b098:	ldr	r0, [sp, #4]
   1b09c:	movw	r1, #64	; 0x40
   1b0a0:	udiv	r0, r1, r0
   1b0a4:	str	r0, [sp]
   1b0a8:	ldr	r0, [sp]
   1b0ac:	cmp	r0, #0
   1b0b0:	movw	r0, #0
   1b0b4:	movne	r0, #1
   1b0b8:	mvn	r1, #0
   1b0bc:	eor	r0, r0, r1
   1b0c0:	and	r0, r0, #1
   1b0c4:	ldr	r1, [sp]
   1b0c8:	add	r0, r1, r0
   1b0cc:	str	r0, [sp]
   1b0d0:	b	1b104 <__assert_fail@plt+0x99d0>
   1b0d4:	ldr	r0, [sp]
   1b0d8:	ldr	r1, [sp]
   1b0dc:	lsr	r1, r1, #1
   1b0e0:	add	r1, r1, #1
   1b0e4:	adds	r0, r0, r1
   1b0e8:	mov	r1, #0
   1b0ec:	adc	r1, r1, #0
   1b0f0:	str	r0, [sp]
   1b0f4:	tst	r1, #1
   1b0f8:	beq	1b100 <__assert_fail@plt+0x99cc>
   1b0fc:	bl	1dbb4 <__assert_fail@plt+0xc480>
   1b100:	b	1b104 <__assert_fail@plt+0x99d0>
   1b104:	ldr	r0, [fp, #-4]
   1b108:	ldr	r1, [sp]
   1b10c:	ldr	r2, [sp, #4]
   1b110:	bl	1ae08 <__assert_fail@plt+0x96d4>
   1b114:	str	r0, [fp, #-4]
   1b118:	ldr	r0, [sp]
   1b11c:	ldr	r1, [sp, #8]
   1b120:	str	r0, [r1]
   1b124:	ldr	r0, [fp, #-4]
   1b128:	mov	sp, fp
   1b12c:	pop	{fp, pc}
   1b130:	push	{fp, lr}
   1b134:	mov	fp, sp
   1b138:	sub	sp, sp, #216	; 0xd8
   1b13c:	ldr	ip, [fp, #8]
   1b140:	str	r0, [fp, #-4]
   1b144:	str	r1, [fp, #-8]
   1b148:	str	r2, [fp, #-12]
   1b14c:	str	r3, [fp, #-16]
   1b150:	ldr	r0, [fp, #-8]
   1b154:	ldr	r0, [r0]
   1b158:	str	r0, [fp, #-20]	; 0xffffffec
   1b15c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b160:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b164:	asr	r1, r1, #1
   1b168:	add	r1, r0, r1
   1b16c:	mov	r2, #1
   1b170:	cmp	r1, r0
   1b174:	movwvc	r2, #0
   1b178:	str	r1, [fp, #-24]	; 0xffffffe8
   1b17c:	tst	r2, #1
   1b180:	beq	1b18c <__assert_fail@plt+0x9a58>
   1b184:	ldr	r0, [pc, #4036]	; 1c150 <__assert_fail@plt+0xaa1c>
   1b188:	str	r0, [fp, #-24]	; 0xffffffe8
   1b18c:	ldr	r0, [fp, #-16]
   1b190:	movw	r1, #0
   1b194:	cmp	r1, r0
   1b198:	bgt	1b1b4 <__assert_fail@plt+0x9a80>
   1b19c:	ldr	r0, [fp, #-16]
   1b1a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b1a4:	cmp	r0, r1
   1b1a8:	bge	1b1b4 <__assert_fail@plt+0x9a80>
   1b1ac:	ldr	r0, [fp, #-16]
   1b1b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b1b4:	b	1b58c <__assert_fail@plt+0x9e58>
   1b1b8:	b	1b1bc <__assert_fail@plt+0x9a88>
   1b1bc:	ldr	r0, [fp, #8]
   1b1c0:	cmp	r0, #0
   1b1c4:	bge	1b2d8 <__assert_fail@plt+0x9ba4>
   1b1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1cc:	cmp	r0, #0
   1b1d0:	bge	1b25c <__assert_fail@plt+0x9b28>
   1b1d4:	b	1b1d8 <__assert_fail@plt+0x9aa4>
   1b1d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1dc:	ldr	r1, [fp, #8]
   1b1e0:	movw	r2, #127	; 0x7f
   1b1e4:	sdiv	r1, r2, r1
   1b1e8:	cmp	r0, r1
   1b1ec:	blt	1b378 <__assert_fail@plt+0x9c44>
   1b1f0:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b1f4:	b	1b1f8 <__assert_fail@plt+0x9ac4>
   1b1f8:	ldr	r0, [pc, #4084]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1b1fc:	ldr	r1, [fp, #8]
   1b200:	cmp	r1, r0
   1b204:	blt	1b21c <__assert_fail@plt+0x9ae8>
   1b208:	b	1b228 <__assert_fail@plt+0x9af4>
   1b20c:	ldr	r0, [fp, #8]
   1b210:	movw	r1, #0
   1b214:	cmp	r1, r0
   1b218:	bge	1b228 <__assert_fail@plt+0x9af4>
   1b21c:	movw	r0, #0
   1b220:	str	r0, [fp, #-36]	; 0xffffffdc
   1b224:	b	1b240 <__assert_fail@plt+0x9b0c>
   1b228:	ldr	r0, [fp, #8]
   1b22c:	movw	r1, #0
   1b230:	sub	r0, r1, r0
   1b234:	movw	r1, #127	; 0x7f
   1b238:	sdiv	r0, r1, r0
   1b23c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b244:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b248:	mvn	r2, #0
   1b24c:	sub	r1, r2, r1
   1b250:	cmp	r0, r1
   1b254:	ble	1b378 <__assert_fail@plt+0x9c44>
   1b258:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b25c:	b	1b260 <__assert_fail@plt+0x9b2c>
   1b260:	b	1b2bc <__assert_fail@plt+0x9b88>
   1b264:	b	1b2bc <__assert_fail@plt+0x9b88>
   1b268:	ldr	r0, [fp, #8]
   1b26c:	cmn	r0, #1
   1b270:	bne	1b2bc <__assert_fail@plt+0x9b88>
   1b274:	b	1b278 <__assert_fail@plt+0x9b44>
   1b278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b27c:	mvn	r1, #127	; 0x7f
   1b280:	add	r0, r0, r1
   1b284:	movw	r1, #0
   1b288:	cmp	r1, r0
   1b28c:	blt	1b378 <__assert_fail@plt+0x9c44>
   1b290:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b298:	movw	r1, #0
   1b29c:	cmp	r1, r0
   1b2a0:	bge	1b390 <__assert_fail@plt+0x9c5c>
   1b2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2a8:	sub	r0, r0, #1
   1b2ac:	movw	r1, #127	; 0x7f
   1b2b0:	cmp	r1, r0
   1b2b4:	blt	1b378 <__assert_fail@plt+0x9c44>
   1b2b8:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b2bc:	ldr	r0, [fp, #8]
   1b2c0:	mvn	r1, #127	; 0x7f
   1b2c4:	sdiv	r0, r1, r0
   1b2c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b2cc:	cmp	r0, r1
   1b2d0:	blt	1b378 <__assert_fail@plt+0x9c44>
   1b2d4:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b2d8:	ldr	r0, [fp, #8]
   1b2dc:	cmp	r0, #0
   1b2e0:	bne	1b2e8 <__assert_fail@plt+0x9bb4>
   1b2e4:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b2e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2ec:	cmp	r0, #0
   1b2f0:	bge	1b360 <__assert_fail@plt+0x9c2c>
   1b2f4:	b	1b2f8 <__assert_fail@plt+0x9bc4>
   1b2f8:	b	1b344 <__assert_fail@plt+0x9c10>
   1b2fc:	b	1b344 <__assert_fail@plt+0x9c10>
   1b300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b304:	cmn	r0, #1
   1b308:	bne	1b344 <__assert_fail@plt+0x9c10>
   1b30c:	b	1b310 <__assert_fail@plt+0x9bdc>
   1b310:	ldr	r0, [fp, #8]
   1b314:	mvn	r1, #127	; 0x7f
   1b318:	add	r0, r0, r1
   1b31c:	movw	r1, #0
   1b320:	cmp	r1, r0
   1b324:	blt	1b378 <__assert_fail@plt+0x9c44>
   1b328:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b32c:	ldr	r0, [fp, #8]
   1b330:	sub	r0, r0, #1
   1b334:	movw	r1, #127	; 0x7f
   1b338:	cmp	r1, r0
   1b33c:	blt	1b378 <__assert_fail@plt+0x9c44>
   1b340:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b348:	mvn	r1, #127	; 0x7f
   1b34c:	sdiv	r0, r1, r0
   1b350:	ldr	r1, [fp, #8]
   1b354:	cmp	r0, r1
   1b358:	blt	1b378 <__assert_fail@plt+0x9c44>
   1b35c:	b	1b390 <__assert_fail@plt+0x9c5c>
   1b360:	ldr	r0, [fp, #8]
   1b364:	movw	r1, #127	; 0x7f
   1b368:	sdiv	r0, r1, r0
   1b36c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b370:	cmp	r0, r1
   1b374:	bge	1b390 <__assert_fail@plt+0x9c5c>
   1b378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b37c:	ldr	r1, [fp, #8]
   1b380:	mul	r0, r0, r1
   1b384:	sxtb	r0, r0
   1b388:	str	r0, [fp, #-28]	; 0xffffffe4
   1b38c:	b	1c554 <__assert_fail@plt+0xae20>
   1b390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b394:	ldr	r1, [fp, #8]
   1b398:	mul	r0, r0, r1
   1b39c:	sxtb	r0, r0
   1b3a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b3a4:	b	1c560 <__assert_fail@plt+0xae2c>
   1b3a8:	ldr	r0, [fp, #8]
   1b3ac:	cmp	r0, #0
   1b3b0:	bge	1b4c0 <__assert_fail@plt+0x9d8c>
   1b3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3b8:	cmp	r0, #0
   1b3bc:	bge	1b448 <__assert_fail@plt+0x9d14>
   1b3c0:	b	1b3c4 <__assert_fail@plt+0x9c90>
   1b3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3c8:	ldr	r1, [fp, #8]
   1b3cc:	movw	r2, #255	; 0xff
   1b3d0:	sdiv	r1, r2, r1
   1b3d4:	cmp	r0, r1
   1b3d8:	blt	1b55c <__assert_fail@plt+0x9e28>
   1b3dc:	b	1b574 <__assert_fail@plt+0x9e40>
   1b3e0:	b	1b3e4 <__assert_fail@plt+0x9cb0>
   1b3e4:	ldr	r0, [pc, #3592]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1b3e8:	ldr	r1, [fp, #8]
   1b3ec:	cmp	r1, r0
   1b3f0:	blt	1b408 <__assert_fail@plt+0x9cd4>
   1b3f4:	b	1b414 <__assert_fail@plt+0x9ce0>
   1b3f8:	ldr	r0, [fp, #8]
   1b3fc:	movw	r1, #0
   1b400:	cmp	r1, r0
   1b404:	bge	1b414 <__assert_fail@plt+0x9ce0>
   1b408:	movw	r0, #0
   1b40c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b410:	b	1b42c <__assert_fail@plt+0x9cf8>
   1b414:	ldr	r0, [fp, #8]
   1b418:	movw	r1, #0
   1b41c:	sub	r0, r1, r0
   1b420:	movw	r1, #255	; 0xff
   1b424:	sdiv	r0, r1, r0
   1b428:	str	r0, [fp, #-40]	; 0xffffffd8
   1b42c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b434:	mvn	r2, #0
   1b438:	sub	r1, r2, r1
   1b43c:	cmp	r0, r1
   1b440:	ble	1b55c <__assert_fail@plt+0x9e28>
   1b444:	b	1b574 <__assert_fail@plt+0x9e40>
   1b448:	b	1b44c <__assert_fail@plt+0x9d18>
   1b44c:	b	1b4a4 <__assert_fail@plt+0x9d70>
   1b450:	b	1b4a4 <__assert_fail@plt+0x9d70>
   1b454:	ldr	r0, [fp, #8]
   1b458:	cmn	r0, #1
   1b45c:	bne	1b4a4 <__assert_fail@plt+0x9d70>
   1b460:	b	1b464 <__assert_fail@plt+0x9d30>
   1b464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b468:	add	r0, r0, #0
   1b46c:	movw	r1, #0
   1b470:	cmp	r1, r0
   1b474:	blt	1b55c <__assert_fail@plt+0x9e28>
   1b478:	b	1b574 <__assert_fail@plt+0x9e40>
   1b47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b480:	movw	r1, #0
   1b484:	cmp	r1, r0
   1b488:	bge	1b574 <__assert_fail@plt+0x9e40>
   1b48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b490:	sub	r0, r0, #1
   1b494:	mvn	r1, #0
   1b498:	cmp	r1, r0
   1b49c:	blt	1b55c <__assert_fail@plt+0x9e28>
   1b4a0:	b	1b574 <__assert_fail@plt+0x9e40>
   1b4a4:	ldr	r0, [fp, #8]
   1b4a8:	movw	r1, #0
   1b4ac:	sdiv	r0, r1, r0
   1b4b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b4b4:	cmp	r0, r1
   1b4b8:	blt	1b55c <__assert_fail@plt+0x9e28>
   1b4bc:	b	1b574 <__assert_fail@plt+0x9e40>
   1b4c0:	ldr	r0, [fp, #8]
   1b4c4:	cmp	r0, #0
   1b4c8:	bne	1b4d0 <__assert_fail@plt+0x9d9c>
   1b4cc:	b	1b574 <__assert_fail@plt+0x9e40>
   1b4d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4d4:	cmp	r0, #0
   1b4d8:	bge	1b544 <__assert_fail@plt+0x9e10>
   1b4dc:	b	1b4e0 <__assert_fail@plt+0x9dac>
   1b4e0:	b	1b528 <__assert_fail@plt+0x9df4>
   1b4e4:	b	1b528 <__assert_fail@plt+0x9df4>
   1b4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4ec:	cmn	r0, #1
   1b4f0:	bne	1b528 <__assert_fail@plt+0x9df4>
   1b4f4:	b	1b4f8 <__assert_fail@plt+0x9dc4>
   1b4f8:	ldr	r0, [fp, #8]
   1b4fc:	add	r0, r0, #0
   1b500:	movw	r1, #0
   1b504:	cmp	r1, r0
   1b508:	blt	1b55c <__assert_fail@plt+0x9e28>
   1b50c:	b	1b574 <__assert_fail@plt+0x9e40>
   1b510:	ldr	r0, [fp, #8]
   1b514:	sub	r0, r0, #1
   1b518:	mvn	r1, #0
   1b51c:	cmp	r1, r0
   1b520:	blt	1b55c <__assert_fail@plt+0x9e28>
   1b524:	b	1b574 <__assert_fail@plt+0x9e40>
   1b528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b52c:	movw	r1, #0
   1b530:	sdiv	r0, r1, r0
   1b534:	ldr	r1, [fp, #8]
   1b538:	cmp	r0, r1
   1b53c:	blt	1b55c <__assert_fail@plt+0x9e28>
   1b540:	b	1b574 <__assert_fail@plt+0x9e40>
   1b544:	ldr	r0, [fp, #8]
   1b548:	movw	r1, #255	; 0xff
   1b54c:	sdiv	r0, r1, r0
   1b550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b554:	cmp	r0, r1
   1b558:	bge	1b574 <__assert_fail@plt+0x9e40>
   1b55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b560:	ldr	r1, [fp, #8]
   1b564:	mul	r0, r0, r1
   1b568:	and	r0, r0, #255	; 0xff
   1b56c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b570:	b	1c554 <__assert_fail@plt+0xae20>
   1b574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b578:	ldr	r1, [fp, #8]
   1b57c:	mul	r0, r0, r1
   1b580:	and	r0, r0, #255	; 0xff
   1b584:	str	r0, [fp, #-28]	; 0xffffffe4
   1b588:	b	1c560 <__assert_fail@plt+0xae2c>
   1b58c:	b	1b964 <__assert_fail@plt+0xa230>
   1b590:	b	1b594 <__assert_fail@plt+0x9e60>
   1b594:	ldr	r0, [fp, #8]
   1b598:	cmp	r0, #0
   1b59c:	bge	1b6b0 <__assert_fail@plt+0x9f7c>
   1b5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5a4:	cmp	r0, #0
   1b5a8:	bge	1b634 <__assert_fail@plt+0x9f00>
   1b5ac:	b	1b5b0 <__assert_fail@plt+0x9e7c>
   1b5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5b4:	ldr	r1, [fp, #8]
   1b5b8:	movw	r2, #32767	; 0x7fff
   1b5bc:	sdiv	r1, r2, r1
   1b5c0:	cmp	r0, r1
   1b5c4:	blt	1b750 <__assert_fail@plt+0xa01c>
   1b5c8:	b	1b768 <__assert_fail@plt+0xa034>
   1b5cc:	b	1b5d0 <__assert_fail@plt+0x9e9c>
   1b5d0:	ldr	r0, [pc, #3100]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1b5d4:	ldr	r1, [fp, #8]
   1b5d8:	cmp	r1, r0
   1b5dc:	blt	1b5f4 <__assert_fail@plt+0x9ec0>
   1b5e0:	b	1b600 <__assert_fail@plt+0x9ecc>
   1b5e4:	ldr	r0, [fp, #8]
   1b5e8:	movw	r1, #0
   1b5ec:	cmp	r1, r0
   1b5f0:	bge	1b600 <__assert_fail@plt+0x9ecc>
   1b5f4:	movw	r0, #0
   1b5f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1b5fc:	b	1b618 <__assert_fail@plt+0x9ee4>
   1b600:	ldr	r0, [fp, #8]
   1b604:	movw	r1, #0
   1b608:	sub	r0, r1, r0
   1b60c:	movw	r1, #32767	; 0x7fff
   1b610:	sdiv	r0, r1, r0
   1b614:	str	r0, [fp, #-44]	; 0xffffffd4
   1b618:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b61c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b620:	mvn	r2, #0
   1b624:	sub	r1, r2, r1
   1b628:	cmp	r0, r1
   1b62c:	ble	1b750 <__assert_fail@plt+0xa01c>
   1b630:	b	1b768 <__assert_fail@plt+0xa034>
   1b634:	b	1b638 <__assert_fail@plt+0x9f04>
   1b638:	b	1b694 <__assert_fail@plt+0x9f60>
   1b63c:	b	1b694 <__assert_fail@plt+0x9f60>
   1b640:	ldr	r0, [fp, #8]
   1b644:	cmn	r0, #1
   1b648:	bne	1b694 <__assert_fail@plt+0x9f60>
   1b64c:	b	1b650 <__assert_fail@plt+0x9f1c>
   1b650:	ldr	r0, [pc, #4068]	; 1c63c <__assert_fail@plt+0xaf08>
   1b654:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b658:	add	r0, r1, r0
   1b65c:	movw	r1, #0
   1b660:	cmp	r1, r0
   1b664:	blt	1b750 <__assert_fail@plt+0xa01c>
   1b668:	b	1b768 <__assert_fail@plt+0xa034>
   1b66c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b670:	movw	r1, #0
   1b674:	cmp	r1, r0
   1b678:	bge	1b768 <__assert_fail@plt+0xa034>
   1b67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b680:	sub	r0, r0, #1
   1b684:	movw	r1, #32767	; 0x7fff
   1b688:	cmp	r1, r0
   1b68c:	blt	1b750 <__assert_fail@plt+0xa01c>
   1b690:	b	1b768 <__assert_fail@plt+0xa034>
   1b694:	ldr	r0, [pc, #4000]	; 1c63c <__assert_fail@plt+0xaf08>
   1b698:	ldr	r1, [fp, #8]
   1b69c:	sdiv	r0, r0, r1
   1b6a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b6a4:	cmp	r0, r1
   1b6a8:	blt	1b750 <__assert_fail@plt+0xa01c>
   1b6ac:	b	1b768 <__assert_fail@plt+0xa034>
   1b6b0:	ldr	r0, [fp, #8]
   1b6b4:	cmp	r0, #0
   1b6b8:	bne	1b6c0 <__assert_fail@plt+0x9f8c>
   1b6bc:	b	1b768 <__assert_fail@plt+0xa034>
   1b6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6c4:	cmp	r0, #0
   1b6c8:	bge	1b738 <__assert_fail@plt+0xa004>
   1b6cc:	b	1b6d0 <__assert_fail@plt+0x9f9c>
   1b6d0:	b	1b71c <__assert_fail@plt+0x9fe8>
   1b6d4:	b	1b71c <__assert_fail@plt+0x9fe8>
   1b6d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6dc:	cmn	r0, #1
   1b6e0:	bne	1b71c <__assert_fail@plt+0x9fe8>
   1b6e4:	b	1b6e8 <__assert_fail@plt+0x9fb4>
   1b6e8:	ldr	r0, [pc, #3916]	; 1c63c <__assert_fail@plt+0xaf08>
   1b6ec:	ldr	r1, [fp, #8]
   1b6f0:	add	r0, r1, r0
   1b6f4:	movw	r1, #0
   1b6f8:	cmp	r1, r0
   1b6fc:	blt	1b750 <__assert_fail@plt+0xa01c>
   1b700:	b	1b768 <__assert_fail@plt+0xa034>
   1b704:	ldr	r0, [fp, #8]
   1b708:	sub	r0, r0, #1
   1b70c:	movw	r1, #32767	; 0x7fff
   1b710:	cmp	r1, r0
   1b714:	blt	1b750 <__assert_fail@plt+0xa01c>
   1b718:	b	1b768 <__assert_fail@plt+0xa034>
   1b71c:	ldr	r0, [pc, #3864]	; 1c63c <__assert_fail@plt+0xaf08>
   1b720:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b724:	sdiv	r0, r0, r1
   1b728:	ldr	r1, [fp, #8]
   1b72c:	cmp	r0, r1
   1b730:	blt	1b750 <__assert_fail@plt+0xa01c>
   1b734:	b	1b768 <__assert_fail@plt+0xa034>
   1b738:	ldr	r0, [fp, #8]
   1b73c:	movw	r1, #32767	; 0x7fff
   1b740:	sdiv	r0, r1, r0
   1b744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b748:	cmp	r0, r1
   1b74c:	bge	1b768 <__assert_fail@plt+0xa034>
   1b750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b754:	ldr	r1, [fp, #8]
   1b758:	mul	r0, r0, r1
   1b75c:	sxth	r0, r0
   1b760:	str	r0, [fp, #-28]	; 0xffffffe4
   1b764:	b	1c554 <__assert_fail@plt+0xae20>
   1b768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b76c:	ldr	r1, [fp, #8]
   1b770:	mul	r0, r0, r1
   1b774:	sxth	r0, r0
   1b778:	str	r0, [fp, #-28]	; 0xffffffe4
   1b77c:	b	1c560 <__assert_fail@plt+0xae2c>
   1b780:	ldr	r0, [fp, #8]
   1b784:	cmp	r0, #0
   1b788:	bge	1b898 <__assert_fail@plt+0xa164>
   1b78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b790:	cmp	r0, #0
   1b794:	bge	1b820 <__assert_fail@plt+0xa0ec>
   1b798:	b	1b79c <__assert_fail@plt+0xa068>
   1b79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7a0:	ldr	r1, [fp, #8]
   1b7a4:	movw	r2, #65535	; 0xffff
   1b7a8:	sdiv	r1, r2, r1
   1b7ac:	cmp	r0, r1
   1b7b0:	blt	1b934 <__assert_fail@plt+0xa200>
   1b7b4:	b	1b94c <__assert_fail@plt+0xa218>
   1b7b8:	b	1b7bc <__assert_fail@plt+0xa088>
   1b7bc:	ldr	r0, [pc, #2608]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1b7c0:	ldr	r1, [fp, #8]
   1b7c4:	cmp	r1, r0
   1b7c8:	blt	1b7e0 <__assert_fail@plt+0xa0ac>
   1b7cc:	b	1b7ec <__assert_fail@plt+0xa0b8>
   1b7d0:	ldr	r0, [fp, #8]
   1b7d4:	movw	r1, #0
   1b7d8:	cmp	r1, r0
   1b7dc:	bge	1b7ec <__assert_fail@plt+0xa0b8>
   1b7e0:	movw	r0, #0
   1b7e4:	str	r0, [fp, #-48]	; 0xffffffd0
   1b7e8:	b	1b804 <__assert_fail@plt+0xa0d0>
   1b7ec:	ldr	r0, [fp, #8]
   1b7f0:	movw	r1, #0
   1b7f4:	sub	r0, r1, r0
   1b7f8:	movw	r1, #65535	; 0xffff
   1b7fc:	sdiv	r0, r1, r0
   1b800:	str	r0, [fp, #-48]	; 0xffffffd0
   1b804:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b80c:	mvn	r2, #0
   1b810:	sub	r1, r2, r1
   1b814:	cmp	r0, r1
   1b818:	ble	1b934 <__assert_fail@plt+0xa200>
   1b81c:	b	1b94c <__assert_fail@plt+0xa218>
   1b820:	b	1b824 <__assert_fail@plt+0xa0f0>
   1b824:	b	1b87c <__assert_fail@plt+0xa148>
   1b828:	b	1b87c <__assert_fail@plt+0xa148>
   1b82c:	ldr	r0, [fp, #8]
   1b830:	cmn	r0, #1
   1b834:	bne	1b87c <__assert_fail@plt+0xa148>
   1b838:	b	1b83c <__assert_fail@plt+0xa108>
   1b83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b840:	add	r0, r0, #0
   1b844:	movw	r1, #0
   1b848:	cmp	r1, r0
   1b84c:	blt	1b934 <__assert_fail@plt+0xa200>
   1b850:	b	1b94c <__assert_fail@plt+0xa218>
   1b854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b858:	movw	r1, #0
   1b85c:	cmp	r1, r0
   1b860:	bge	1b94c <__assert_fail@plt+0xa218>
   1b864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b868:	sub	r0, r0, #1
   1b86c:	mvn	r1, #0
   1b870:	cmp	r1, r0
   1b874:	blt	1b934 <__assert_fail@plt+0xa200>
   1b878:	b	1b94c <__assert_fail@plt+0xa218>
   1b87c:	ldr	r0, [fp, #8]
   1b880:	movw	r1, #0
   1b884:	sdiv	r0, r1, r0
   1b888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b88c:	cmp	r0, r1
   1b890:	blt	1b934 <__assert_fail@plt+0xa200>
   1b894:	b	1b94c <__assert_fail@plt+0xa218>
   1b898:	ldr	r0, [fp, #8]
   1b89c:	cmp	r0, #0
   1b8a0:	bne	1b8a8 <__assert_fail@plt+0xa174>
   1b8a4:	b	1b94c <__assert_fail@plt+0xa218>
   1b8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8ac:	cmp	r0, #0
   1b8b0:	bge	1b91c <__assert_fail@plt+0xa1e8>
   1b8b4:	b	1b8b8 <__assert_fail@plt+0xa184>
   1b8b8:	b	1b900 <__assert_fail@plt+0xa1cc>
   1b8bc:	b	1b900 <__assert_fail@plt+0xa1cc>
   1b8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8c4:	cmn	r0, #1
   1b8c8:	bne	1b900 <__assert_fail@plt+0xa1cc>
   1b8cc:	b	1b8d0 <__assert_fail@plt+0xa19c>
   1b8d0:	ldr	r0, [fp, #8]
   1b8d4:	add	r0, r0, #0
   1b8d8:	movw	r1, #0
   1b8dc:	cmp	r1, r0
   1b8e0:	blt	1b934 <__assert_fail@plt+0xa200>
   1b8e4:	b	1b94c <__assert_fail@plt+0xa218>
   1b8e8:	ldr	r0, [fp, #8]
   1b8ec:	sub	r0, r0, #1
   1b8f0:	mvn	r1, #0
   1b8f4:	cmp	r1, r0
   1b8f8:	blt	1b934 <__assert_fail@plt+0xa200>
   1b8fc:	b	1b94c <__assert_fail@plt+0xa218>
   1b900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b904:	movw	r1, #0
   1b908:	sdiv	r0, r1, r0
   1b90c:	ldr	r1, [fp, #8]
   1b910:	cmp	r0, r1
   1b914:	blt	1b934 <__assert_fail@plt+0xa200>
   1b918:	b	1b94c <__assert_fail@plt+0xa218>
   1b91c:	ldr	r0, [fp, #8]
   1b920:	movw	r1, #65535	; 0xffff
   1b924:	sdiv	r0, r1, r0
   1b928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b92c:	cmp	r0, r1
   1b930:	bge	1b94c <__assert_fail@plt+0xa218>
   1b934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b938:	ldr	r1, [fp, #8]
   1b93c:	mul	r0, r0, r1
   1b940:	uxth	r0, r0
   1b944:	str	r0, [fp, #-28]	; 0xffffffe4
   1b948:	b	1c554 <__assert_fail@plt+0xae20>
   1b94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b950:	ldr	r1, [fp, #8]
   1b954:	mul	r0, r0, r1
   1b958:	uxth	r0, r0
   1b95c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b960:	b	1c560 <__assert_fail@plt+0xae2c>
   1b964:	b	1b968 <__assert_fail@plt+0xa234>
   1b968:	b	1b96c <__assert_fail@plt+0xa238>
   1b96c:	ldr	r0, [fp, #8]
   1b970:	cmp	r0, #0
   1b974:	bge	1ba78 <__assert_fail@plt+0xa344>
   1b978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b97c:	cmp	r0, #0
   1b980:	bge	1ba0c <__assert_fail@plt+0xa2d8>
   1b984:	b	1b988 <__assert_fail@plt+0xa254>
   1b988:	ldr	r0, [pc, #1984]	; 1c150 <__assert_fail@plt+0xaa1c>
   1b98c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b990:	ldr	r2, [fp, #8]
   1b994:	sdiv	r0, r0, r2
   1b998:	cmp	r1, r0
   1b99c:	blt	1bb08 <__assert_fail@plt+0xa3d4>
   1b9a0:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1b9a4:	b	1b9a8 <__assert_fail@plt+0xa274>
   1b9a8:	ldr	r0, [pc, #2116]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1b9ac:	ldr	r1, [fp, #8]
   1b9b0:	cmp	r1, r0
   1b9b4:	blt	1b9cc <__assert_fail@plt+0xa298>
   1b9b8:	b	1b9d8 <__assert_fail@plt+0xa2a4>
   1b9bc:	ldr	r0, [fp, #8]
   1b9c0:	movw	r1, #0
   1b9c4:	cmp	r1, r0
   1b9c8:	bge	1b9d8 <__assert_fail@plt+0xa2a4>
   1b9cc:	movw	r0, #0
   1b9d0:	str	r0, [fp, #-52]	; 0xffffffcc
   1b9d4:	b	1b9f0 <__assert_fail@plt+0xa2bc>
   1b9d8:	ldr	r0, [pc, #1904]	; 1c150 <__assert_fail@plt+0xaa1c>
   1b9dc:	ldr	r1, [fp, #8]
   1b9e0:	movw	r2, #0
   1b9e4:	sub	r1, r2, r1
   1b9e8:	sdiv	r0, r0, r1
   1b9ec:	str	r0, [fp, #-52]	; 0xffffffcc
   1b9f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b9f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b9f8:	mvn	r2, #0
   1b9fc:	sub	r1, r2, r1
   1ba00:	cmp	r0, r1
   1ba04:	ble	1bb08 <__assert_fail@plt+0xa3d4>
   1ba08:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1ba0c:	ldr	r0, [fp, #8]
   1ba10:	cmn	r0, #1
   1ba14:	bne	1ba5c <__assert_fail@plt+0xa328>
   1ba18:	b	1ba1c <__assert_fail@plt+0xa2e8>
   1ba1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba20:	add	r0, r0, #-2147483648	; 0x80000000
   1ba24:	movw	r1, #0
   1ba28:	cmp	r1, r0
   1ba2c:	blt	1bb08 <__assert_fail@plt+0xa3d4>
   1ba30:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1ba34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba38:	movw	r1, #0
   1ba3c:	cmp	r1, r0
   1ba40:	bge	1bb1c <__assert_fail@plt+0xa3e8>
   1ba44:	ldr	r0, [pc, #1796]	; 1c150 <__assert_fail@plt+0xaa1c>
   1ba48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba4c:	sub	r1, r1, #1
   1ba50:	cmp	r0, r1
   1ba54:	blt	1bb08 <__assert_fail@plt+0xa3d4>
   1ba58:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1ba5c:	ldr	r0, [pc, #4080]	; 1ca54 <__assert_fail@plt+0xb320>
   1ba60:	ldr	r1, [fp, #8]
   1ba64:	sdiv	r0, r0, r1
   1ba68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba6c:	cmp	r0, r1
   1ba70:	blt	1bb08 <__assert_fail@plt+0xa3d4>
   1ba74:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1ba78:	ldr	r0, [fp, #8]
   1ba7c:	cmp	r0, #0
   1ba80:	bne	1ba88 <__assert_fail@plt+0xa354>
   1ba84:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1ba88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba8c:	cmp	r0, #0
   1ba90:	bge	1baf0 <__assert_fail@plt+0xa3bc>
   1ba94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba98:	cmn	r0, #1
   1ba9c:	bne	1bad4 <__assert_fail@plt+0xa3a0>
   1baa0:	b	1baa4 <__assert_fail@plt+0xa370>
   1baa4:	ldr	r0, [fp, #8]
   1baa8:	add	r0, r0, #-2147483648	; 0x80000000
   1baac:	movw	r1, #0
   1bab0:	cmp	r1, r0
   1bab4:	blt	1bb08 <__assert_fail@plt+0xa3d4>
   1bab8:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1babc:	ldr	r0, [pc, #1676]	; 1c150 <__assert_fail@plt+0xaa1c>
   1bac0:	ldr	r1, [fp, #8]
   1bac4:	sub	r1, r1, #1
   1bac8:	cmp	r0, r1
   1bacc:	blt	1bb08 <__assert_fail@plt+0xa3d4>
   1bad0:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1bad4:	ldr	r0, [pc, #3960]	; 1ca54 <__assert_fail@plt+0xb320>
   1bad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1badc:	sdiv	r0, r0, r1
   1bae0:	ldr	r1, [fp, #8]
   1bae4:	cmp	r0, r1
   1bae8:	blt	1bb08 <__assert_fail@plt+0xa3d4>
   1baec:	b	1bb1c <__assert_fail@plt+0xa3e8>
   1baf0:	ldr	r0, [pc, #1624]	; 1c150 <__assert_fail@plt+0xaa1c>
   1baf4:	ldr	r1, [fp, #8]
   1baf8:	sdiv	r0, r0, r1
   1bafc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb00:	cmp	r0, r1
   1bb04:	bge	1bb1c <__assert_fail@plt+0xa3e8>
   1bb08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb0c:	ldr	r1, [fp, #8]
   1bb10:	mul	r0, r0, r1
   1bb14:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb18:	b	1c554 <__assert_fail@plt+0xae20>
   1bb1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb20:	ldr	r1, [fp, #8]
   1bb24:	mul	r0, r0, r1
   1bb28:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb2c:	b	1c560 <__assert_fail@plt+0xae2c>
   1bb30:	ldr	r0, [fp, #8]
   1bb34:	cmp	r0, #0
   1bb38:	bge	1bc48 <__assert_fail@plt+0xa514>
   1bb3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb40:	cmp	r0, #0
   1bb44:	bge	1bbd0 <__assert_fail@plt+0xa49c>
   1bb48:	b	1bb68 <__assert_fail@plt+0xa434>
   1bb4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb50:	ldr	r1, [fp, #8]
   1bb54:	mvn	r2, #0
   1bb58:	udiv	r1, r2, r1
   1bb5c:	cmp	r0, r1
   1bb60:	bcc	1bce4 <__assert_fail@plt+0xa5b0>
   1bb64:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bb68:	b	1bb6c <__assert_fail@plt+0xa438>
   1bb6c:	ldr	r0, [pc, #1664]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1bb70:	ldr	r1, [fp, #8]
   1bb74:	cmp	r1, r0
   1bb78:	blt	1bb90 <__assert_fail@plt+0xa45c>
   1bb7c:	b	1bb9c <__assert_fail@plt+0xa468>
   1bb80:	ldr	r0, [fp, #8]
   1bb84:	movw	r1, #0
   1bb88:	cmp	r1, r0
   1bb8c:	bge	1bb9c <__assert_fail@plt+0xa468>
   1bb90:	movw	r0, #1
   1bb94:	str	r0, [fp, #-56]	; 0xffffffc8
   1bb98:	b	1bbb4 <__assert_fail@plt+0xa480>
   1bb9c:	ldr	r0, [fp, #8]
   1bba0:	movw	r1, #0
   1bba4:	sub	r0, r1, r0
   1bba8:	mvn	r1, #0
   1bbac:	udiv	r0, r1, r0
   1bbb0:	str	r0, [fp, #-56]	; 0xffffffc8
   1bbb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bbb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bbbc:	mvn	r2, #0
   1bbc0:	sub	r1, r2, r1
   1bbc4:	cmp	r0, r1
   1bbc8:	bls	1bce4 <__assert_fail@plt+0xa5b0>
   1bbcc:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bbd0:	b	1bbd4 <__assert_fail@plt+0xa4a0>
   1bbd4:	b	1bc2c <__assert_fail@plt+0xa4f8>
   1bbd8:	b	1bc2c <__assert_fail@plt+0xa4f8>
   1bbdc:	ldr	r0, [fp, #8]
   1bbe0:	cmn	r0, #1
   1bbe4:	bne	1bc2c <__assert_fail@plt+0xa4f8>
   1bbe8:	b	1bbec <__assert_fail@plt+0xa4b8>
   1bbec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bbf0:	add	r0, r0, #0
   1bbf4:	movw	r1, #0
   1bbf8:	cmp	r1, r0
   1bbfc:	blt	1bce4 <__assert_fail@plt+0xa5b0>
   1bc00:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc08:	movw	r1, #0
   1bc0c:	cmp	r1, r0
   1bc10:	bge	1bcf8 <__assert_fail@plt+0xa5c4>
   1bc14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc18:	sub	r0, r0, #1
   1bc1c:	mvn	r1, #0
   1bc20:	cmp	r1, r0
   1bc24:	blt	1bce4 <__assert_fail@plt+0xa5b0>
   1bc28:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bc2c:	ldr	r0, [fp, #8]
   1bc30:	movw	r1, #0
   1bc34:	sdiv	r0, r1, r0
   1bc38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bc3c:	cmp	r0, r1
   1bc40:	blt	1bce4 <__assert_fail@plt+0xa5b0>
   1bc44:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bc48:	ldr	r0, [fp, #8]
   1bc4c:	cmp	r0, #0
   1bc50:	bne	1bc58 <__assert_fail@plt+0xa524>
   1bc54:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bc58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc5c:	cmp	r0, #0
   1bc60:	bge	1bccc <__assert_fail@plt+0xa598>
   1bc64:	b	1bc68 <__assert_fail@plt+0xa534>
   1bc68:	b	1bcb0 <__assert_fail@plt+0xa57c>
   1bc6c:	b	1bcb0 <__assert_fail@plt+0xa57c>
   1bc70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc74:	cmn	r0, #1
   1bc78:	bne	1bcb0 <__assert_fail@plt+0xa57c>
   1bc7c:	b	1bc80 <__assert_fail@plt+0xa54c>
   1bc80:	ldr	r0, [fp, #8]
   1bc84:	add	r0, r0, #0
   1bc88:	movw	r1, #0
   1bc8c:	cmp	r1, r0
   1bc90:	blt	1bce4 <__assert_fail@plt+0xa5b0>
   1bc94:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bc98:	ldr	r0, [fp, #8]
   1bc9c:	sub	r0, r0, #1
   1bca0:	mvn	r1, #0
   1bca4:	cmp	r1, r0
   1bca8:	blt	1bce4 <__assert_fail@plt+0xa5b0>
   1bcac:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bcb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bcb4:	movw	r1, #0
   1bcb8:	sdiv	r0, r1, r0
   1bcbc:	ldr	r1, [fp, #8]
   1bcc0:	cmp	r0, r1
   1bcc4:	blt	1bce4 <__assert_fail@plt+0xa5b0>
   1bcc8:	b	1bcf8 <__assert_fail@plt+0xa5c4>
   1bccc:	ldr	r0, [fp, #8]
   1bcd0:	mvn	r1, #0
   1bcd4:	udiv	r0, r1, r0
   1bcd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bcdc:	cmp	r0, r1
   1bce0:	bcs	1bcf8 <__assert_fail@plt+0xa5c4>
   1bce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bce8:	ldr	r1, [fp, #8]
   1bcec:	mul	r0, r0, r1
   1bcf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1bcf4:	b	1c554 <__assert_fail@plt+0xae20>
   1bcf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bcfc:	ldr	r1, [fp, #8]
   1bd00:	mul	r0, r0, r1
   1bd04:	str	r0, [fp, #-28]	; 0xffffffe4
   1bd08:	b	1c560 <__assert_fail@plt+0xae2c>
   1bd0c:	b	1bd10 <__assert_fail@plt+0xa5dc>
   1bd10:	b	1bd14 <__assert_fail@plt+0xa5e0>
   1bd14:	ldr	r0, [fp, #8]
   1bd18:	cmp	r0, #0
   1bd1c:	bge	1be20 <__assert_fail@plt+0xa6ec>
   1bd20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd24:	cmp	r0, #0
   1bd28:	bge	1bdb4 <__assert_fail@plt+0xa680>
   1bd2c:	b	1bd30 <__assert_fail@plt+0xa5fc>
   1bd30:	ldr	r0, [pc, #1048]	; 1c150 <__assert_fail@plt+0xaa1c>
   1bd34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd38:	ldr	r2, [fp, #8]
   1bd3c:	sdiv	r0, r0, r2
   1bd40:	cmp	r1, r0
   1bd44:	blt	1beb0 <__assert_fail@plt+0xa77c>
   1bd48:	b	1bec4 <__assert_fail@plt+0xa790>
   1bd4c:	b	1bd50 <__assert_fail@plt+0xa61c>
   1bd50:	ldr	r0, [pc, #1180]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1bd54:	ldr	r1, [fp, #8]
   1bd58:	cmp	r1, r0
   1bd5c:	blt	1bd74 <__assert_fail@plt+0xa640>
   1bd60:	b	1bd80 <__assert_fail@plt+0xa64c>
   1bd64:	ldr	r0, [fp, #8]
   1bd68:	movw	r1, #0
   1bd6c:	cmp	r1, r0
   1bd70:	bge	1bd80 <__assert_fail@plt+0xa64c>
   1bd74:	movw	r0, #0
   1bd78:	str	r0, [fp, #-60]	; 0xffffffc4
   1bd7c:	b	1bd98 <__assert_fail@plt+0xa664>
   1bd80:	ldr	r0, [pc, #968]	; 1c150 <__assert_fail@plt+0xaa1c>
   1bd84:	ldr	r1, [fp, #8]
   1bd88:	movw	r2, #0
   1bd8c:	sub	r1, r2, r1
   1bd90:	sdiv	r0, r0, r1
   1bd94:	str	r0, [fp, #-60]	; 0xffffffc4
   1bd98:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1bd9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bda0:	mvn	r2, #0
   1bda4:	sub	r1, r2, r1
   1bda8:	cmp	r0, r1
   1bdac:	ble	1beb0 <__assert_fail@plt+0xa77c>
   1bdb0:	b	1bec4 <__assert_fail@plt+0xa790>
   1bdb4:	ldr	r0, [fp, #8]
   1bdb8:	cmn	r0, #1
   1bdbc:	bne	1be04 <__assert_fail@plt+0xa6d0>
   1bdc0:	b	1bdc4 <__assert_fail@plt+0xa690>
   1bdc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bdc8:	add	r0, r0, #-2147483648	; 0x80000000
   1bdcc:	movw	r1, #0
   1bdd0:	cmp	r1, r0
   1bdd4:	blt	1beb0 <__assert_fail@plt+0xa77c>
   1bdd8:	b	1bec4 <__assert_fail@plt+0xa790>
   1bddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bde0:	movw	r1, #0
   1bde4:	cmp	r1, r0
   1bde8:	bge	1bec4 <__assert_fail@plt+0xa790>
   1bdec:	ldr	r0, [pc, #860]	; 1c150 <__assert_fail@plt+0xaa1c>
   1bdf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bdf4:	sub	r1, r1, #1
   1bdf8:	cmp	r0, r1
   1bdfc:	blt	1beb0 <__assert_fail@plt+0xa77c>
   1be00:	b	1bec4 <__assert_fail@plt+0xa790>
   1be04:	ldr	r0, [pc, #3144]	; 1ca54 <__assert_fail@plt+0xb320>
   1be08:	ldr	r1, [fp, #8]
   1be0c:	sdiv	r0, r0, r1
   1be10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be14:	cmp	r0, r1
   1be18:	blt	1beb0 <__assert_fail@plt+0xa77c>
   1be1c:	b	1bec4 <__assert_fail@plt+0xa790>
   1be20:	ldr	r0, [fp, #8]
   1be24:	cmp	r0, #0
   1be28:	bne	1be30 <__assert_fail@plt+0xa6fc>
   1be2c:	b	1bec4 <__assert_fail@plt+0xa790>
   1be30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be34:	cmp	r0, #0
   1be38:	bge	1be98 <__assert_fail@plt+0xa764>
   1be3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be40:	cmn	r0, #1
   1be44:	bne	1be7c <__assert_fail@plt+0xa748>
   1be48:	b	1be4c <__assert_fail@plt+0xa718>
   1be4c:	ldr	r0, [fp, #8]
   1be50:	add	r0, r0, #-2147483648	; 0x80000000
   1be54:	movw	r1, #0
   1be58:	cmp	r1, r0
   1be5c:	blt	1beb0 <__assert_fail@plt+0xa77c>
   1be60:	b	1bec4 <__assert_fail@plt+0xa790>
   1be64:	ldr	r0, [pc, #740]	; 1c150 <__assert_fail@plt+0xaa1c>
   1be68:	ldr	r1, [fp, #8]
   1be6c:	sub	r1, r1, #1
   1be70:	cmp	r0, r1
   1be74:	blt	1beb0 <__assert_fail@plt+0xa77c>
   1be78:	b	1bec4 <__assert_fail@plt+0xa790>
   1be7c:	ldr	r0, [pc, #3024]	; 1ca54 <__assert_fail@plt+0xb320>
   1be80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be84:	sdiv	r0, r0, r1
   1be88:	ldr	r1, [fp, #8]
   1be8c:	cmp	r0, r1
   1be90:	blt	1beb0 <__assert_fail@plt+0xa77c>
   1be94:	b	1bec4 <__assert_fail@plt+0xa790>
   1be98:	ldr	r0, [pc, #688]	; 1c150 <__assert_fail@plt+0xaa1c>
   1be9c:	ldr	r1, [fp, #8]
   1bea0:	sdiv	r0, r0, r1
   1bea4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bea8:	cmp	r0, r1
   1beac:	bge	1bec4 <__assert_fail@plt+0xa790>
   1beb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1beb4:	ldr	r1, [fp, #8]
   1beb8:	mul	r0, r0, r1
   1bebc:	str	r0, [fp, #-28]	; 0xffffffe4
   1bec0:	b	1c554 <__assert_fail@plt+0xae20>
   1bec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bec8:	ldr	r1, [fp, #8]
   1becc:	mul	r0, r0, r1
   1bed0:	str	r0, [fp, #-28]	; 0xffffffe4
   1bed4:	b	1c560 <__assert_fail@plt+0xae2c>
   1bed8:	ldr	r0, [fp, #8]
   1bedc:	cmp	r0, #0
   1bee0:	bge	1bff0 <__assert_fail@plt+0xa8bc>
   1bee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bee8:	cmp	r0, #0
   1beec:	bge	1bf78 <__assert_fail@plt+0xa844>
   1bef0:	b	1bf10 <__assert_fail@plt+0xa7dc>
   1bef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bef8:	ldr	r1, [fp, #8]
   1befc:	mvn	r2, #0
   1bf00:	udiv	r1, r2, r1
   1bf04:	cmp	r0, r1
   1bf08:	bcc	1c08c <__assert_fail@plt+0xa958>
   1bf0c:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1bf10:	b	1bf14 <__assert_fail@plt+0xa7e0>
   1bf14:	ldr	r0, [pc, #728]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1bf18:	ldr	r1, [fp, #8]
   1bf1c:	cmp	r1, r0
   1bf20:	blt	1bf38 <__assert_fail@plt+0xa804>
   1bf24:	b	1bf44 <__assert_fail@plt+0xa810>
   1bf28:	ldr	r0, [fp, #8]
   1bf2c:	movw	r1, #0
   1bf30:	cmp	r1, r0
   1bf34:	bge	1bf44 <__assert_fail@plt+0xa810>
   1bf38:	movw	r0, #1
   1bf3c:	str	r0, [fp, #-64]	; 0xffffffc0
   1bf40:	b	1bf5c <__assert_fail@plt+0xa828>
   1bf44:	ldr	r0, [fp, #8]
   1bf48:	movw	r1, #0
   1bf4c:	sub	r0, r1, r0
   1bf50:	mvn	r1, #0
   1bf54:	udiv	r0, r1, r0
   1bf58:	str	r0, [fp, #-64]	; 0xffffffc0
   1bf5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1bf60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf64:	mvn	r2, #0
   1bf68:	sub	r1, r2, r1
   1bf6c:	cmp	r0, r1
   1bf70:	bls	1c08c <__assert_fail@plt+0xa958>
   1bf74:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1bf78:	b	1bf7c <__assert_fail@plt+0xa848>
   1bf7c:	b	1bfd4 <__assert_fail@plt+0xa8a0>
   1bf80:	b	1bfd4 <__assert_fail@plt+0xa8a0>
   1bf84:	ldr	r0, [fp, #8]
   1bf88:	cmn	r0, #1
   1bf8c:	bne	1bfd4 <__assert_fail@plt+0xa8a0>
   1bf90:	b	1bf94 <__assert_fail@plt+0xa860>
   1bf94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf98:	add	r0, r0, #0
   1bf9c:	movw	r1, #0
   1bfa0:	cmp	r1, r0
   1bfa4:	blt	1c08c <__assert_fail@plt+0xa958>
   1bfa8:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1bfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfb0:	movw	r1, #0
   1bfb4:	cmp	r1, r0
   1bfb8:	bge	1c0a0 <__assert_fail@plt+0xa96c>
   1bfbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfc0:	sub	r0, r0, #1
   1bfc4:	mvn	r1, #0
   1bfc8:	cmp	r1, r0
   1bfcc:	blt	1c08c <__assert_fail@plt+0xa958>
   1bfd0:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1bfd4:	ldr	r0, [fp, #8]
   1bfd8:	movw	r1, #0
   1bfdc:	sdiv	r0, r1, r0
   1bfe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bfe4:	cmp	r0, r1
   1bfe8:	blt	1c08c <__assert_fail@plt+0xa958>
   1bfec:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1bff0:	ldr	r0, [fp, #8]
   1bff4:	cmp	r0, #0
   1bff8:	bne	1c000 <__assert_fail@plt+0xa8cc>
   1bffc:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1c000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c004:	cmp	r0, #0
   1c008:	bge	1c074 <__assert_fail@plt+0xa940>
   1c00c:	b	1c010 <__assert_fail@plt+0xa8dc>
   1c010:	b	1c058 <__assert_fail@plt+0xa924>
   1c014:	b	1c058 <__assert_fail@plt+0xa924>
   1c018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c01c:	cmn	r0, #1
   1c020:	bne	1c058 <__assert_fail@plt+0xa924>
   1c024:	b	1c028 <__assert_fail@plt+0xa8f4>
   1c028:	ldr	r0, [fp, #8]
   1c02c:	add	r0, r0, #0
   1c030:	movw	r1, #0
   1c034:	cmp	r1, r0
   1c038:	blt	1c08c <__assert_fail@plt+0xa958>
   1c03c:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1c040:	ldr	r0, [fp, #8]
   1c044:	sub	r0, r0, #1
   1c048:	mvn	r1, #0
   1c04c:	cmp	r1, r0
   1c050:	blt	1c08c <__assert_fail@plt+0xa958>
   1c054:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1c058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c05c:	movw	r1, #0
   1c060:	sdiv	r0, r1, r0
   1c064:	ldr	r1, [fp, #8]
   1c068:	cmp	r0, r1
   1c06c:	blt	1c08c <__assert_fail@plt+0xa958>
   1c070:	b	1c0a0 <__assert_fail@plt+0xa96c>
   1c074:	ldr	r0, [fp, #8]
   1c078:	mvn	r1, #0
   1c07c:	udiv	r0, r1, r0
   1c080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c084:	cmp	r0, r1
   1c088:	bcs	1c0a0 <__assert_fail@plt+0xa96c>
   1c08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c090:	ldr	r1, [fp, #8]
   1c094:	mul	r0, r0, r1
   1c098:	str	r0, [fp, #-28]	; 0xffffffe4
   1c09c:	b	1c554 <__assert_fail@plt+0xae20>
   1c0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0a4:	ldr	r1, [fp, #8]
   1c0a8:	mul	r0, r0, r1
   1c0ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1c0b0:	b	1c560 <__assert_fail@plt+0xae2c>
   1c0b4:	b	1c0b8 <__assert_fail@plt+0xa984>
   1c0b8:	ldr	r0, [fp, #8]
   1c0bc:	cmp	r0, #0
   1c0c0:	bge	1c230 <__assert_fail@plt+0xaafc>
   1c0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0c8:	cmp	r0, #0
   1c0cc:	bge	1c1a8 <__assert_fail@plt+0xaa74>
   1c0d0:	b	1c0d4 <__assert_fail@plt+0xa9a0>
   1c0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0d8:	ldr	r1, [fp, #8]
   1c0dc:	asr	r3, r1, #31
   1c0e0:	mvn	r2, #0
   1c0e4:	mvn	ip, #-2147483648	; 0x80000000
   1c0e8:	str	r0, [fp, #-68]	; 0xffffffbc
   1c0ec:	mov	r0, r2
   1c0f0:	str	r1, [fp, #-72]	; 0xffffffb8
   1c0f4:	mov	r1, ip
   1c0f8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c0fc:	bl	2246c <__assert_fail@plt+0x10d38>
   1c100:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1c104:	subs	r0, r2, r0
   1c108:	rscs	r1, r1, r2, asr #31
   1c10c:	blt	1c2f8 <__assert_fail@plt+0xabc4>
   1c110:	b	1c30c <__assert_fail@plt+0xabd8>
   1c114:	b	1c118 <__assert_fail@plt+0xa9e4>
   1c118:	ldr	r0, [pc, #212]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1c11c:	ldr	r1, [fp, #8]
   1c120:	cmp	r1, r0
   1c124:	blt	1c13c <__assert_fail@plt+0xaa08>
   1c128:	b	1c154 <__assert_fail@plt+0xaa20>
   1c12c:	ldr	r0, [fp, #8]
   1c130:	movw	r1, #0
   1c134:	cmp	r1, r0
   1c138:	bge	1c154 <__assert_fail@plt+0xaa20>
   1c13c:	mov	r0, #0
   1c140:	mvn	r1, #0
   1c144:	str	r1, [fp, #-76]	; 0xffffffb4
   1c148:	str	r0, [fp, #-80]	; 0xffffffb0
   1c14c:	b	1c188 <__assert_fail@plt+0xaa54>
   1c150:	svcvc	0x00ffffff
   1c154:	ldr	r0, [fp, #8]
   1c158:	rsb	r0, r0, #0
   1c15c:	asr	r3, r0, #31
   1c160:	mvn	r1, #0
   1c164:	mvn	r2, #-2147483648	; 0x80000000
   1c168:	str	r0, [fp, #-84]	; 0xffffffac
   1c16c:	mov	r0, r1
   1c170:	mov	r1, r2
   1c174:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c178:	bl	2246c <__assert_fail@plt+0x10d38>
   1c17c:	str	r0, [fp, #-76]	; 0xffffffb4
   1c180:	str	r1, [fp, #-80]	; 0xffffffb0
   1c184:	b	1c188 <__assert_fail@plt+0xaa54>
   1c188:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c18c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c190:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c194:	mvn	r2, r2
   1c198:	subs	r1, r2, r1
   1c19c:	rscs	r0, r0, r2, asr #31
   1c1a0:	bge	1c2f8 <__assert_fail@plt+0xabc4>
   1c1a4:	b	1c30c <__assert_fail@plt+0xabd8>
   1c1a8:	ldr	r0, [fp, #8]
   1c1ac:	cmn	r0, #1
   1c1b0:	bne	1c1f8 <__assert_fail@plt+0xaac4>
   1c1b4:	b	1c1b8 <__assert_fail@plt+0xaa84>
   1c1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1bc:	mov	r1, #-2147483648	; 0x80000000
   1c1c0:	add	r1, r1, r0, asr #31
   1c1c4:	rsbs	r0, r0, #0
   1c1c8:	rscs	r1, r1, #0
   1c1cc:	blt	1c2f8 <__assert_fail@plt+0xabc4>
   1c1d0:	b	1c30c <__assert_fail@plt+0xabd8>
   1c1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1d8:	movw	r1, #0
   1c1dc:	cmp	r1, r0
   1c1e0:	bge	1c30c <__assert_fail@plt+0xabd8>
   1c1e4:	mov	r0, #0
   1c1e8:	cmp	r0, #0
   1c1ec:	bne	1c2f8 <__assert_fail@plt+0xabc4>
   1c1f0:	b	1c30c <__assert_fail@plt+0xabd8>
   1c1f4:	andhi	r0, r0, r1
   1c1f8:	ldr	r0, [fp, #8]
   1c1fc:	asr	r3, r0, #31
   1c200:	mov	r1, #0
   1c204:	mov	r2, #-2147483648	; 0x80000000
   1c208:	str	r0, [fp, #-88]	; 0xffffffa8
   1c20c:	mov	r0, r1
   1c210:	mov	r1, r2
   1c214:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c218:	bl	2246c <__assert_fail@plt+0x10d38>
   1c21c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c220:	subs	r0, r0, r2
   1c224:	sbcs	r1, r1, r2, asr #31
   1c228:	blt	1c2f8 <__assert_fail@plt+0xabc4>
   1c22c:	b	1c30c <__assert_fail@plt+0xabd8>
   1c230:	ldr	r0, [fp, #8]
   1c234:	cmp	r0, #0
   1c238:	bne	1c240 <__assert_fail@plt+0xab0c>
   1c23c:	b	1c30c <__assert_fail@plt+0xabd8>
   1c240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c244:	cmp	r0, #0
   1c248:	bge	1c2c0 <__assert_fail@plt+0xab8c>
   1c24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c250:	cmn	r0, #1
   1c254:	bne	1c288 <__assert_fail@plt+0xab54>
   1c258:	b	1c25c <__assert_fail@plt+0xab28>
   1c25c:	ldr	r0, [fp, #8]
   1c260:	mov	r1, #-2147483648	; 0x80000000
   1c264:	add	r1, r1, r0, asr #31
   1c268:	rsbs	r0, r0, #0
   1c26c:	rscs	r1, r1, #0
   1c270:	blt	1c2f8 <__assert_fail@plt+0xabc4>
   1c274:	b	1c30c <__assert_fail@plt+0xabd8>
   1c278:	mov	r0, #0
   1c27c:	cmp	r0, #0
   1c280:	bne	1c2f8 <__assert_fail@plt+0xabc4>
   1c284:	b	1c30c <__assert_fail@plt+0xabd8>
   1c288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c28c:	asr	r3, r0, #31
   1c290:	mov	r1, #0
   1c294:	mov	r2, #-2147483648	; 0x80000000
   1c298:	str	r0, [fp, #-92]	; 0xffffffa4
   1c29c:	mov	r0, r1
   1c2a0:	mov	r1, r2
   1c2a4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1c2a8:	bl	2246c <__assert_fail@plt+0x10d38>
   1c2ac:	ldr	r2, [fp, #8]
   1c2b0:	subs	r0, r0, r2
   1c2b4:	sbcs	r1, r1, r2, asr #31
   1c2b8:	blt	1c2f8 <__assert_fail@plt+0xabc4>
   1c2bc:	b	1c30c <__assert_fail@plt+0xabd8>
   1c2c0:	ldr	r0, [fp, #8]
   1c2c4:	asr	r3, r0, #31
   1c2c8:	mvn	r1, #0
   1c2cc:	mvn	r2, #-2147483648	; 0x80000000
   1c2d0:	str	r0, [fp, #-96]	; 0xffffffa0
   1c2d4:	mov	r0, r1
   1c2d8:	mov	r1, r2
   1c2dc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1c2e0:	bl	2246c <__assert_fail@plt+0x10d38>
   1c2e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c2e8:	subs	r0, r0, r2
   1c2ec:	sbcs	r1, r1, r2, asr #31
   1c2f0:	bge	1c30c <__assert_fail@plt+0xabd8>
   1c2f4:	b	1c2f8 <__assert_fail@plt+0xabc4>
   1c2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2fc:	ldr	r1, [fp, #8]
   1c300:	mul	r0, r0, r1
   1c304:	str	r0, [fp, #-28]	; 0xffffffe4
   1c308:	b	1c554 <__assert_fail@plt+0xae20>
   1c30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c310:	ldr	r1, [fp, #8]
   1c314:	mul	r0, r0, r1
   1c318:	str	r0, [fp, #-28]	; 0xffffffe4
   1c31c:	b	1c560 <__assert_fail@plt+0xae2c>
   1c320:	ldr	r0, [fp, #8]
   1c324:	cmp	r0, #0
   1c328:	bge	1c478 <__assert_fail@plt+0xad44>
   1c32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c330:	cmp	r0, #0
   1c334:	bge	1c400 <__assert_fail@plt+0xaccc>
   1c338:	b	1c378 <__assert_fail@plt+0xac44>
   1c33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c340:	ldr	r1, [fp, #8]
   1c344:	asr	r3, r1, #31
   1c348:	mvn	r2, #0
   1c34c:	str	r0, [fp, #-100]	; 0xffffff9c
   1c350:	mov	r0, r2
   1c354:	str	r1, [fp, #-104]	; 0xffffff98
   1c358:	mov	r1, r2
   1c35c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c360:	bl	22540 <__assert_fail@plt+0x10e0c>
   1c364:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1c368:	subs	r0, r2, r0
   1c36c:	rscs	r1, r1, r2, asr #31
   1c370:	bcc	1c52c <__assert_fail@plt+0xadf8>
   1c374:	b	1c540 <__assert_fail@plt+0xae0c>
   1c378:	b	1c37c <__assert_fail@plt+0xac48>
   1c37c:	ldr	r0, [pc, #-400]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1c380:	ldr	r1, [fp, #8]
   1c384:	cmp	r1, r0
   1c388:	blt	1c3a0 <__assert_fail@plt+0xac6c>
   1c38c:	b	1c3b4 <__assert_fail@plt+0xac80>
   1c390:	ldr	r0, [fp, #8]
   1c394:	movw	r1, #0
   1c398:	cmp	r1, r0
   1c39c:	bge	1c3b4 <__assert_fail@plt+0xac80>
   1c3a0:	mov	r0, #1
   1c3a4:	mvn	r1, #0
   1c3a8:	str	r1, [sp, #108]	; 0x6c
   1c3ac:	str	r0, [sp, #104]	; 0x68
   1c3b0:	b	1c3e0 <__assert_fail@plt+0xacac>
   1c3b4:	ldr	r0, [fp, #8]
   1c3b8:	rsb	r0, r0, #0
   1c3bc:	asr	r3, r0, #31
   1c3c0:	mvn	r1, #0
   1c3c4:	str	r0, [sp, #100]	; 0x64
   1c3c8:	mov	r0, r1
   1c3cc:	ldr	r2, [sp, #100]	; 0x64
   1c3d0:	bl	22540 <__assert_fail@plt+0x10e0c>
   1c3d4:	str	r0, [sp, #108]	; 0x6c
   1c3d8:	str	r1, [sp, #104]	; 0x68
   1c3dc:	b	1c3e0 <__assert_fail@plt+0xacac>
   1c3e0:	ldr	r0, [sp, #104]	; 0x68
   1c3e4:	ldr	r1, [sp, #108]	; 0x6c
   1c3e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c3ec:	mvn	r2, r2
   1c3f0:	subs	r1, r2, r1
   1c3f4:	rscs	r0, r0, r2, asr #31
   1c3f8:	bcs	1c52c <__assert_fail@plt+0xadf8>
   1c3fc:	b	1c540 <__assert_fail@plt+0xae0c>
   1c400:	b	1c404 <__assert_fail@plt+0xacd0>
   1c404:	b	1c45c <__assert_fail@plt+0xad28>
   1c408:	b	1c45c <__assert_fail@plt+0xad28>
   1c40c:	ldr	r0, [fp, #8]
   1c410:	cmn	r0, #1
   1c414:	bne	1c45c <__assert_fail@plt+0xad28>
   1c418:	b	1c41c <__assert_fail@plt+0xace8>
   1c41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c420:	add	r0, r0, #0
   1c424:	movw	r1, #0
   1c428:	cmp	r1, r0
   1c42c:	blt	1c52c <__assert_fail@plt+0xadf8>
   1c430:	b	1c540 <__assert_fail@plt+0xae0c>
   1c434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c438:	movw	r1, #0
   1c43c:	cmp	r1, r0
   1c440:	bge	1c540 <__assert_fail@plt+0xae0c>
   1c444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c448:	sub	r0, r0, #1
   1c44c:	mvn	r1, #0
   1c450:	cmp	r1, r0
   1c454:	blt	1c52c <__assert_fail@plt+0xadf8>
   1c458:	b	1c540 <__assert_fail@plt+0xae0c>
   1c45c:	ldr	r0, [fp, #8]
   1c460:	movw	r1, #0
   1c464:	sdiv	r0, r1, r0
   1c468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c46c:	cmp	r0, r1
   1c470:	blt	1c52c <__assert_fail@plt+0xadf8>
   1c474:	b	1c540 <__assert_fail@plt+0xae0c>
   1c478:	ldr	r0, [fp, #8]
   1c47c:	cmp	r0, #0
   1c480:	bne	1c488 <__assert_fail@plt+0xad54>
   1c484:	b	1c540 <__assert_fail@plt+0xae0c>
   1c488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c48c:	cmp	r0, #0
   1c490:	bge	1c4fc <__assert_fail@plt+0xadc8>
   1c494:	b	1c498 <__assert_fail@plt+0xad64>
   1c498:	b	1c4e0 <__assert_fail@plt+0xadac>
   1c49c:	b	1c4e0 <__assert_fail@plt+0xadac>
   1c4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4a4:	cmn	r0, #1
   1c4a8:	bne	1c4e0 <__assert_fail@plt+0xadac>
   1c4ac:	b	1c4b0 <__assert_fail@plt+0xad7c>
   1c4b0:	ldr	r0, [fp, #8]
   1c4b4:	add	r0, r0, #0
   1c4b8:	movw	r1, #0
   1c4bc:	cmp	r1, r0
   1c4c0:	blt	1c52c <__assert_fail@plt+0xadf8>
   1c4c4:	b	1c540 <__assert_fail@plt+0xae0c>
   1c4c8:	ldr	r0, [fp, #8]
   1c4cc:	sub	r0, r0, #1
   1c4d0:	mvn	r1, #0
   1c4d4:	cmp	r1, r0
   1c4d8:	blt	1c52c <__assert_fail@plt+0xadf8>
   1c4dc:	b	1c540 <__assert_fail@plt+0xae0c>
   1c4e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4e4:	movw	r1, #0
   1c4e8:	sdiv	r0, r1, r0
   1c4ec:	ldr	r1, [fp, #8]
   1c4f0:	cmp	r0, r1
   1c4f4:	blt	1c52c <__assert_fail@plt+0xadf8>
   1c4f8:	b	1c540 <__assert_fail@plt+0xae0c>
   1c4fc:	ldr	r0, [fp, #8]
   1c500:	asr	r3, r0, #31
   1c504:	mvn	r1, #0
   1c508:	str	r0, [sp, #96]	; 0x60
   1c50c:	mov	r0, r1
   1c510:	ldr	r2, [sp, #96]	; 0x60
   1c514:	bl	22540 <__assert_fail@plt+0x10e0c>
   1c518:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c51c:	subs	r0, r0, r2
   1c520:	sbcs	r1, r1, r2, asr #31
   1c524:	bcs	1c540 <__assert_fail@plt+0xae0c>
   1c528:	b	1c52c <__assert_fail@plt+0xadf8>
   1c52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c530:	ldr	r1, [fp, #8]
   1c534:	mul	r0, r0, r1
   1c538:	str	r0, [fp, #-28]	; 0xffffffe4
   1c53c:	b	1c554 <__assert_fail@plt+0xae20>
   1c540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c544:	ldr	r1, [fp, #8]
   1c548:	mul	r0, r0, r1
   1c54c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c550:	b	1c560 <__assert_fail@plt+0xae2c>
   1c554:	ldr	r0, [pc, #-1036]	; 1c150 <__assert_fail@plt+0xaa1c>
   1c558:	str	r0, [sp, #92]	; 0x5c
   1c55c:	b	1c580 <__assert_fail@plt+0xae4c>
   1c560:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c564:	cmp	r0, #64	; 0x40
   1c568:	movw	r0, #0
   1c56c:	movlt	r0, #1
   1c570:	tst	r0, #1
   1c574:	movw	r0, #64	; 0x40
   1c578:	moveq	r0, #0
   1c57c:	str	r0, [sp, #92]	; 0x5c
   1c580:	ldr	r0, [sp, #92]	; 0x5c
   1c584:	str	r0, [fp, #-32]	; 0xffffffe0
   1c588:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c58c:	cmp	r0, #0
   1c590:	beq	1c5c0 <__assert_fail@plt+0xae8c>
   1c594:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c598:	ldr	r1, [fp, #8]
   1c59c:	sdiv	r0, r0, r1
   1c5a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c5a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5a8:	mov	r1, r0
   1c5ac:	ldr	r2, [fp, #8]
   1c5b0:	sdiv	r3, r0, r2
   1c5b4:	mls	r0, r3, r2, r0
   1c5b8:	sub	r0, r1, r0
   1c5bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1c5c0:	ldr	r0, [fp, #-4]
   1c5c4:	movw	r1, #0
   1c5c8:	cmp	r0, r1
   1c5cc:	bne	1c5dc <__assert_fail@plt+0xaea8>
   1c5d0:	ldr	r0, [fp, #-8]
   1c5d4:	movw	r1, #0
   1c5d8:	str	r1, [r0]
   1c5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c5e4:	sub	r0, r0, r1
   1c5e8:	ldr	r1, [fp, #-12]
   1c5ec:	cmp	r0, r1
   1c5f0:	bge	1d9dc <__assert_fail@plt+0xc2a8>
   1c5f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c5f8:	ldr	r1, [fp, #-12]
   1c5fc:	add	r1, r0, r1
   1c600:	mov	r2, #1
   1c604:	cmp	r1, r0
   1c608:	movwvc	r2, #0
   1c60c:	str	r1, [fp, #-24]	; 0xffffffe8
   1c610:	tst	r2, #1
   1c614:	bne	1d9d8 <__assert_fail@plt+0xc2a4>
   1c618:	ldr	r0, [fp, #-16]
   1c61c:	movw	r1, #0
   1c620:	cmp	r1, r0
   1c624:	bgt	1c638 <__assert_fail@plt+0xaf04>
   1c628:	ldr	r0, [fp, #-16]
   1c62c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c630:	cmp	r0, r1
   1c634:	blt	1d9d8 <__assert_fail@plt+0xc2a4>
   1c638:	b	1ca14 <__assert_fail@plt+0xb2e0>
   1c63c:			; <UNDEFINED> instruction: 0xffff8000
   1c640:	b	1c644 <__assert_fail@plt+0xaf10>
   1c644:	ldr	r0, [fp, #8]
   1c648:	cmp	r0, #0
   1c64c:	bge	1c760 <__assert_fail@plt+0xb02c>
   1c650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c654:	cmp	r0, #0
   1c658:	bge	1c6e4 <__assert_fail@plt+0xafb0>
   1c65c:	b	1c660 <__assert_fail@plt+0xaf2c>
   1c660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c664:	ldr	r1, [fp, #8]
   1c668:	movw	r2, #127	; 0x7f
   1c66c:	sdiv	r1, r2, r1
   1c670:	cmp	r0, r1
   1c674:	blt	1c800 <__assert_fail@plt+0xb0cc>
   1c678:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c67c:	b	1c680 <__assert_fail@plt+0xaf4c>
   1c680:	ldr	r0, [pc, #-1172]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1c684:	ldr	r1, [fp, #8]
   1c688:	cmp	r1, r0
   1c68c:	blt	1c6a4 <__assert_fail@plt+0xaf70>
   1c690:	b	1c6b0 <__assert_fail@plt+0xaf7c>
   1c694:	ldr	r0, [fp, #8]
   1c698:	movw	r1, #0
   1c69c:	cmp	r1, r0
   1c6a0:	bge	1c6b0 <__assert_fail@plt+0xaf7c>
   1c6a4:	movw	r0, #0
   1c6a8:	str	r0, [sp, #88]	; 0x58
   1c6ac:	b	1c6c8 <__assert_fail@plt+0xaf94>
   1c6b0:	ldr	r0, [fp, #8]
   1c6b4:	movw	r1, #0
   1c6b8:	sub	r0, r1, r0
   1c6bc:	movw	r1, #127	; 0x7f
   1c6c0:	sdiv	r0, r1, r0
   1c6c4:	str	r0, [sp, #88]	; 0x58
   1c6c8:	ldr	r0, [sp, #88]	; 0x58
   1c6cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6d0:	mvn	r2, #0
   1c6d4:	sub	r1, r2, r1
   1c6d8:	cmp	r0, r1
   1c6dc:	ble	1c800 <__assert_fail@plt+0xb0cc>
   1c6e0:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c6e4:	b	1c6e8 <__assert_fail@plt+0xafb4>
   1c6e8:	b	1c744 <__assert_fail@plt+0xb010>
   1c6ec:	b	1c744 <__assert_fail@plt+0xb010>
   1c6f0:	ldr	r0, [fp, #8]
   1c6f4:	cmn	r0, #1
   1c6f8:	bne	1c744 <__assert_fail@plt+0xb010>
   1c6fc:	b	1c700 <__assert_fail@plt+0xafcc>
   1c700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c704:	mvn	r1, #127	; 0x7f
   1c708:	add	r0, r0, r1
   1c70c:	movw	r1, #0
   1c710:	cmp	r1, r0
   1c714:	blt	1c800 <__assert_fail@plt+0xb0cc>
   1c718:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c71c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c720:	movw	r1, #0
   1c724:	cmp	r1, r0
   1c728:	bge	1c818 <__assert_fail@plt+0xb0e4>
   1c72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c730:	sub	r0, r0, #1
   1c734:	movw	r1, #127	; 0x7f
   1c738:	cmp	r1, r0
   1c73c:	blt	1c800 <__assert_fail@plt+0xb0cc>
   1c740:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c744:	ldr	r0, [fp, #8]
   1c748:	mvn	r1, #127	; 0x7f
   1c74c:	sdiv	r0, r1, r0
   1c750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c754:	cmp	r0, r1
   1c758:	blt	1c800 <__assert_fail@plt+0xb0cc>
   1c75c:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c760:	ldr	r0, [fp, #8]
   1c764:	cmp	r0, #0
   1c768:	bne	1c770 <__assert_fail@plt+0xb03c>
   1c76c:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c774:	cmp	r0, #0
   1c778:	bge	1c7e8 <__assert_fail@plt+0xb0b4>
   1c77c:	b	1c780 <__assert_fail@plt+0xb04c>
   1c780:	b	1c7cc <__assert_fail@plt+0xb098>
   1c784:	b	1c7cc <__assert_fail@plt+0xb098>
   1c788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c78c:	cmn	r0, #1
   1c790:	bne	1c7cc <__assert_fail@plt+0xb098>
   1c794:	b	1c798 <__assert_fail@plt+0xb064>
   1c798:	ldr	r0, [fp, #8]
   1c79c:	mvn	r1, #127	; 0x7f
   1c7a0:	add	r0, r0, r1
   1c7a4:	movw	r1, #0
   1c7a8:	cmp	r1, r0
   1c7ac:	blt	1c800 <__assert_fail@plt+0xb0cc>
   1c7b0:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c7b4:	ldr	r0, [fp, #8]
   1c7b8:	sub	r0, r0, #1
   1c7bc:	movw	r1, #127	; 0x7f
   1c7c0:	cmp	r1, r0
   1c7c4:	blt	1c800 <__assert_fail@plt+0xb0cc>
   1c7c8:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7d0:	mvn	r1, #127	; 0x7f
   1c7d4:	sdiv	r0, r1, r0
   1c7d8:	ldr	r1, [fp, #8]
   1c7dc:	cmp	r0, r1
   1c7e0:	blt	1c800 <__assert_fail@plt+0xb0cc>
   1c7e4:	b	1c818 <__assert_fail@plt+0xb0e4>
   1c7e8:	ldr	r0, [fp, #8]
   1c7ec:	movw	r1, #127	; 0x7f
   1c7f0:	sdiv	r0, r1, r0
   1c7f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c7f8:	cmp	r0, r1
   1c7fc:	bge	1c818 <__assert_fail@plt+0xb0e4>
   1c800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c804:	ldr	r1, [fp, #8]
   1c808:	mul	r0, r0, r1
   1c80c:	sxtb	r0, r0
   1c810:	str	r0, [fp, #-28]	; 0xffffffe4
   1c814:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1c818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c81c:	ldr	r1, [fp, #8]
   1c820:	mul	r0, r0, r1
   1c824:	sxtb	r0, r0
   1c828:	str	r0, [fp, #-28]	; 0xffffffe4
   1c82c:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1c830:	ldr	r0, [fp, #8]
   1c834:	cmp	r0, #0
   1c838:	bge	1c948 <__assert_fail@plt+0xb214>
   1c83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c840:	cmp	r0, #0
   1c844:	bge	1c8d0 <__assert_fail@plt+0xb19c>
   1c848:	b	1c84c <__assert_fail@plt+0xb118>
   1c84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c850:	ldr	r1, [fp, #8]
   1c854:	movw	r2, #255	; 0xff
   1c858:	sdiv	r1, r2, r1
   1c85c:	cmp	r0, r1
   1c860:	blt	1c9e4 <__assert_fail@plt+0xb2b0>
   1c864:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c868:	b	1c86c <__assert_fail@plt+0xb138>
   1c86c:	ldr	r0, [pc, #-1664]	; 1c1f4 <__assert_fail@plt+0xaac0>
   1c870:	ldr	r1, [fp, #8]
   1c874:	cmp	r1, r0
   1c878:	blt	1c890 <__assert_fail@plt+0xb15c>
   1c87c:	b	1c89c <__assert_fail@plt+0xb168>
   1c880:	ldr	r0, [fp, #8]
   1c884:	movw	r1, #0
   1c888:	cmp	r1, r0
   1c88c:	bge	1c89c <__assert_fail@plt+0xb168>
   1c890:	movw	r0, #0
   1c894:	str	r0, [sp, #84]	; 0x54
   1c898:	b	1c8b4 <__assert_fail@plt+0xb180>
   1c89c:	ldr	r0, [fp, #8]
   1c8a0:	movw	r1, #0
   1c8a4:	sub	r0, r1, r0
   1c8a8:	movw	r1, #255	; 0xff
   1c8ac:	sdiv	r0, r1, r0
   1c8b0:	str	r0, [sp, #84]	; 0x54
   1c8b4:	ldr	r0, [sp, #84]	; 0x54
   1c8b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8bc:	mvn	r2, #0
   1c8c0:	sub	r1, r2, r1
   1c8c4:	cmp	r0, r1
   1c8c8:	ble	1c9e4 <__assert_fail@plt+0xb2b0>
   1c8cc:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c8d0:	b	1c8d4 <__assert_fail@plt+0xb1a0>
   1c8d4:	b	1c92c <__assert_fail@plt+0xb1f8>
   1c8d8:	b	1c92c <__assert_fail@plt+0xb1f8>
   1c8dc:	ldr	r0, [fp, #8]
   1c8e0:	cmn	r0, #1
   1c8e4:	bne	1c92c <__assert_fail@plt+0xb1f8>
   1c8e8:	b	1c8ec <__assert_fail@plt+0xb1b8>
   1c8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8f0:	add	r0, r0, #0
   1c8f4:	movw	r1, #0
   1c8f8:	cmp	r1, r0
   1c8fc:	blt	1c9e4 <__assert_fail@plt+0xb2b0>
   1c900:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c908:	movw	r1, #0
   1c90c:	cmp	r1, r0
   1c910:	bge	1c9fc <__assert_fail@plt+0xb2c8>
   1c914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c918:	sub	r0, r0, #1
   1c91c:	mvn	r1, #0
   1c920:	cmp	r1, r0
   1c924:	blt	1c9e4 <__assert_fail@plt+0xb2b0>
   1c928:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c92c:	ldr	r0, [fp, #8]
   1c930:	movw	r1, #0
   1c934:	sdiv	r0, r1, r0
   1c938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c93c:	cmp	r0, r1
   1c940:	blt	1c9e4 <__assert_fail@plt+0xb2b0>
   1c944:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c948:	ldr	r0, [fp, #8]
   1c94c:	cmp	r0, #0
   1c950:	bne	1c958 <__assert_fail@plt+0xb224>
   1c954:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c95c:	cmp	r0, #0
   1c960:	bge	1c9cc <__assert_fail@plt+0xb298>
   1c964:	b	1c968 <__assert_fail@plt+0xb234>
   1c968:	b	1c9b0 <__assert_fail@plt+0xb27c>
   1c96c:	b	1c9b0 <__assert_fail@plt+0xb27c>
   1c970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c974:	cmn	r0, #1
   1c978:	bne	1c9b0 <__assert_fail@plt+0xb27c>
   1c97c:	b	1c980 <__assert_fail@plt+0xb24c>
   1c980:	ldr	r0, [fp, #8]
   1c984:	add	r0, r0, #0
   1c988:	movw	r1, #0
   1c98c:	cmp	r1, r0
   1c990:	blt	1c9e4 <__assert_fail@plt+0xb2b0>
   1c994:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c998:	ldr	r0, [fp, #8]
   1c99c:	sub	r0, r0, #1
   1c9a0:	mvn	r1, #0
   1c9a4:	cmp	r1, r0
   1c9a8:	blt	1c9e4 <__assert_fail@plt+0xb2b0>
   1c9ac:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9b4:	movw	r1, #0
   1c9b8:	sdiv	r0, r1, r0
   1c9bc:	ldr	r1, [fp, #8]
   1c9c0:	cmp	r0, r1
   1c9c4:	blt	1c9e4 <__assert_fail@plt+0xb2b0>
   1c9c8:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c9cc:	ldr	r0, [fp, #8]
   1c9d0:	movw	r1, #255	; 0xff
   1c9d4:	sdiv	r0, r1, r0
   1c9d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9dc:	cmp	r0, r1
   1c9e0:	bge	1c9fc <__assert_fail@plt+0xb2c8>
   1c9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9e8:	ldr	r1, [fp, #8]
   1c9ec:	mul	r0, r0, r1
   1c9f0:	and	r0, r0, #255	; 0xff
   1c9f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c9f8:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1c9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca00:	ldr	r1, [fp, #8]
   1ca04:	mul	r0, r0, r1
   1ca08:	and	r0, r0, #255	; 0xff
   1ca0c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca10:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1ca14:	b	1cdf0 <__assert_fail@plt+0xb6bc>
   1ca18:	b	1ca1c <__assert_fail@plt+0xb2e8>
   1ca1c:	ldr	r0, [fp, #8]
   1ca20:	cmp	r0, #0
   1ca24:	bge	1cb3c <__assert_fail@plt+0xb408>
   1ca28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca2c:	cmp	r0, #0
   1ca30:	bge	1cac0 <__assert_fail@plt+0xb38c>
   1ca34:	b	1ca38 <__assert_fail@plt+0xb304>
   1ca38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca3c:	ldr	r1, [fp, #8]
   1ca40:	movw	r2, #32767	; 0x7fff
   1ca44:	sdiv	r1, r2, r1
   1ca48:	cmp	r0, r1
   1ca4c:	blt	1cbdc <__assert_fail@plt+0xb4a8>
   1ca50:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1ca54:	andhi	r0, r0, r0
   1ca58:	b	1ca5c <__assert_fail@plt+0xb328>
   1ca5c:	ldr	r0, [pc, #4004]	; 1da08 <__assert_fail@plt+0xc2d4>
   1ca60:	ldr	r1, [fp, #8]
   1ca64:	cmp	r1, r0
   1ca68:	blt	1ca80 <__assert_fail@plt+0xb34c>
   1ca6c:	b	1ca8c <__assert_fail@plt+0xb358>
   1ca70:	ldr	r0, [fp, #8]
   1ca74:	movw	r1, #0
   1ca78:	cmp	r1, r0
   1ca7c:	bge	1ca8c <__assert_fail@plt+0xb358>
   1ca80:	movw	r0, #0
   1ca84:	str	r0, [sp, #80]	; 0x50
   1ca88:	b	1caa4 <__assert_fail@plt+0xb370>
   1ca8c:	ldr	r0, [fp, #8]
   1ca90:	movw	r1, #0
   1ca94:	sub	r0, r1, r0
   1ca98:	movw	r1, #32767	; 0x7fff
   1ca9c:	sdiv	r0, r1, r0
   1caa0:	str	r0, [sp, #80]	; 0x50
   1caa4:	ldr	r0, [sp, #80]	; 0x50
   1caa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1caac:	mvn	r2, #0
   1cab0:	sub	r1, r2, r1
   1cab4:	cmp	r0, r1
   1cab8:	ble	1cbdc <__assert_fail@plt+0xb4a8>
   1cabc:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1cac0:	b	1cac4 <__assert_fail@plt+0xb390>
   1cac4:	b	1cb20 <__assert_fail@plt+0xb3ec>
   1cac8:	b	1cb20 <__assert_fail@plt+0xb3ec>
   1cacc:	ldr	r0, [fp, #8]
   1cad0:	cmn	r0, #1
   1cad4:	bne	1cb20 <__assert_fail@plt+0xb3ec>
   1cad8:	b	1cadc <__assert_fail@plt+0xb3a8>
   1cadc:	ldr	r0, [pc, #3884]	; 1da10 <__assert_fail@plt+0xc2dc>
   1cae0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cae4:	add	r0, r1, r0
   1cae8:	movw	r1, #0
   1caec:	cmp	r1, r0
   1caf0:	blt	1cbdc <__assert_fail@plt+0xb4a8>
   1caf4:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1caf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cafc:	movw	r1, #0
   1cb00:	cmp	r1, r0
   1cb04:	bge	1cbf4 <__assert_fail@plt+0xb4c0>
   1cb08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb0c:	sub	r0, r0, #1
   1cb10:	movw	r1, #32767	; 0x7fff
   1cb14:	cmp	r1, r0
   1cb18:	blt	1cbdc <__assert_fail@plt+0xb4a8>
   1cb1c:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1cb20:	ldr	r0, [pc, #3816]	; 1da10 <__assert_fail@plt+0xc2dc>
   1cb24:	ldr	r1, [fp, #8]
   1cb28:	sdiv	r0, r0, r1
   1cb2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb30:	cmp	r0, r1
   1cb34:	blt	1cbdc <__assert_fail@plt+0xb4a8>
   1cb38:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1cb3c:	ldr	r0, [fp, #8]
   1cb40:	cmp	r0, #0
   1cb44:	bne	1cb4c <__assert_fail@plt+0xb418>
   1cb48:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1cb4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb50:	cmp	r0, #0
   1cb54:	bge	1cbc4 <__assert_fail@plt+0xb490>
   1cb58:	b	1cb5c <__assert_fail@plt+0xb428>
   1cb5c:	b	1cba8 <__assert_fail@plt+0xb474>
   1cb60:	b	1cba8 <__assert_fail@plt+0xb474>
   1cb64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb68:	cmn	r0, #1
   1cb6c:	bne	1cba8 <__assert_fail@plt+0xb474>
   1cb70:	b	1cb74 <__assert_fail@plt+0xb440>
   1cb74:	ldr	r0, [pc, #3732]	; 1da10 <__assert_fail@plt+0xc2dc>
   1cb78:	ldr	r1, [fp, #8]
   1cb7c:	add	r0, r1, r0
   1cb80:	movw	r1, #0
   1cb84:	cmp	r1, r0
   1cb88:	blt	1cbdc <__assert_fail@plt+0xb4a8>
   1cb8c:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1cb90:	ldr	r0, [fp, #8]
   1cb94:	sub	r0, r0, #1
   1cb98:	movw	r1, #32767	; 0x7fff
   1cb9c:	cmp	r1, r0
   1cba0:	blt	1cbdc <__assert_fail@plt+0xb4a8>
   1cba4:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1cba8:	ldr	r0, [pc, #3680]	; 1da10 <__assert_fail@plt+0xc2dc>
   1cbac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cbb0:	sdiv	r0, r0, r1
   1cbb4:	ldr	r1, [fp, #8]
   1cbb8:	cmp	r0, r1
   1cbbc:	blt	1cbdc <__assert_fail@plt+0xb4a8>
   1cbc0:	b	1cbf4 <__assert_fail@plt+0xb4c0>
   1cbc4:	ldr	r0, [fp, #8]
   1cbc8:	movw	r1, #32767	; 0x7fff
   1cbcc:	sdiv	r0, r1, r0
   1cbd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cbd4:	cmp	r0, r1
   1cbd8:	bge	1cbf4 <__assert_fail@plt+0xb4c0>
   1cbdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbe0:	ldr	r1, [fp, #8]
   1cbe4:	mul	r0, r0, r1
   1cbe8:	sxth	r0, r0
   1cbec:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbf0:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1cbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbf8:	ldr	r1, [fp, #8]
   1cbfc:	mul	r0, r0, r1
   1cc00:	sxth	r0, r0
   1cc04:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc08:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1cc0c:	ldr	r0, [fp, #8]
   1cc10:	cmp	r0, #0
   1cc14:	bge	1cd24 <__assert_fail@plt+0xb5f0>
   1cc18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc1c:	cmp	r0, #0
   1cc20:	bge	1ccac <__assert_fail@plt+0xb578>
   1cc24:	b	1cc28 <__assert_fail@plt+0xb4f4>
   1cc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc2c:	ldr	r1, [fp, #8]
   1cc30:	movw	r2, #65535	; 0xffff
   1cc34:	sdiv	r1, r2, r1
   1cc38:	cmp	r0, r1
   1cc3c:	blt	1cdc0 <__assert_fail@plt+0xb68c>
   1cc40:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cc44:	b	1cc48 <__assert_fail@plt+0xb514>
   1cc48:	ldr	r0, [pc, #3512]	; 1da08 <__assert_fail@plt+0xc2d4>
   1cc4c:	ldr	r1, [fp, #8]
   1cc50:	cmp	r1, r0
   1cc54:	blt	1cc6c <__assert_fail@plt+0xb538>
   1cc58:	b	1cc78 <__assert_fail@plt+0xb544>
   1cc5c:	ldr	r0, [fp, #8]
   1cc60:	movw	r1, #0
   1cc64:	cmp	r1, r0
   1cc68:	bge	1cc78 <__assert_fail@plt+0xb544>
   1cc6c:	movw	r0, #0
   1cc70:	str	r0, [sp, #76]	; 0x4c
   1cc74:	b	1cc90 <__assert_fail@plt+0xb55c>
   1cc78:	ldr	r0, [fp, #8]
   1cc7c:	movw	r1, #0
   1cc80:	sub	r0, r1, r0
   1cc84:	movw	r1, #65535	; 0xffff
   1cc88:	sdiv	r0, r1, r0
   1cc8c:	str	r0, [sp, #76]	; 0x4c
   1cc90:	ldr	r0, [sp, #76]	; 0x4c
   1cc94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc98:	mvn	r2, #0
   1cc9c:	sub	r1, r2, r1
   1cca0:	cmp	r0, r1
   1cca4:	ble	1cdc0 <__assert_fail@plt+0xb68c>
   1cca8:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1ccac:	b	1ccb0 <__assert_fail@plt+0xb57c>
   1ccb0:	b	1cd08 <__assert_fail@plt+0xb5d4>
   1ccb4:	b	1cd08 <__assert_fail@plt+0xb5d4>
   1ccb8:	ldr	r0, [fp, #8]
   1ccbc:	cmn	r0, #1
   1ccc0:	bne	1cd08 <__assert_fail@plt+0xb5d4>
   1ccc4:	b	1ccc8 <__assert_fail@plt+0xb594>
   1ccc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cccc:	add	r0, r0, #0
   1ccd0:	movw	r1, #0
   1ccd4:	cmp	r1, r0
   1ccd8:	blt	1cdc0 <__assert_fail@plt+0xb68c>
   1ccdc:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cce4:	movw	r1, #0
   1cce8:	cmp	r1, r0
   1ccec:	bge	1cdd8 <__assert_fail@plt+0xb6a4>
   1ccf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccf4:	sub	r0, r0, #1
   1ccf8:	mvn	r1, #0
   1ccfc:	cmp	r1, r0
   1cd00:	blt	1cdc0 <__assert_fail@plt+0xb68c>
   1cd04:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cd08:	ldr	r0, [fp, #8]
   1cd0c:	movw	r1, #0
   1cd10:	sdiv	r0, r1, r0
   1cd14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd18:	cmp	r0, r1
   1cd1c:	blt	1cdc0 <__assert_fail@plt+0xb68c>
   1cd20:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cd24:	ldr	r0, [fp, #8]
   1cd28:	cmp	r0, #0
   1cd2c:	bne	1cd34 <__assert_fail@plt+0xb600>
   1cd30:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cd34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd38:	cmp	r0, #0
   1cd3c:	bge	1cda8 <__assert_fail@plt+0xb674>
   1cd40:	b	1cd44 <__assert_fail@plt+0xb610>
   1cd44:	b	1cd8c <__assert_fail@plt+0xb658>
   1cd48:	b	1cd8c <__assert_fail@plt+0xb658>
   1cd4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd50:	cmn	r0, #1
   1cd54:	bne	1cd8c <__assert_fail@plt+0xb658>
   1cd58:	b	1cd5c <__assert_fail@plt+0xb628>
   1cd5c:	ldr	r0, [fp, #8]
   1cd60:	add	r0, r0, #0
   1cd64:	movw	r1, #0
   1cd68:	cmp	r1, r0
   1cd6c:	blt	1cdc0 <__assert_fail@plt+0xb68c>
   1cd70:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cd74:	ldr	r0, [fp, #8]
   1cd78:	sub	r0, r0, #1
   1cd7c:	mvn	r1, #0
   1cd80:	cmp	r1, r0
   1cd84:	blt	1cdc0 <__assert_fail@plt+0xb68c>
   1cd88:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cd8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd90:	movw	r1, #0
   1cd94:	sdiv	r0, r1, r0
   1cd98:	ldr	r1, [fp, #8]
   1cd9c:	cmp	r0, r1
   1cda0:	blt	1cdc0 <__assert_fail@plt+0xb68c>
   1cda4:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cda8:	ldr	r0, [fp, #8]
   1cdac:	movw	r1, #65535	; 0xffff
   1cdb0:	sdiv	r0, r1, r0
   1cdb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdb8:	cmp	r0, r1
   1cdbc:	bge	1cdd8 <__assert_fail@plt+0xb6a4>
   1cdc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdc4:	ldr	r1, [fp, #8]
   1cdc8:	mul	r0, r0, r1
   1cdcc:	uxth	r0, r0
   1cdd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdd4:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1cdd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cddc:	ldr	r1, [fp, #8]
   1cde0:	mul	r0, r0, r1
   1cde4:	uxth	r0, r0
   1cde8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdec:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1cdf0:	b	1cdf4 <__assert_fail@plt+0xb6c0>
   1cdf4:	b	1cdf8 <__assert_fail@plt+0xb6c4>
   1cdf8:	ldr	r0, [fp, #8]
   1cdfc:	cmp	r0, #0
   1ce00:	bge	1cf04 <__assert_fail@plt+0xb7d0>
   1ce04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce08:	cmp	r0, #0
   1ce0c:	bge	1ce98 <__assert_fail@plt+0xb764>
   1ce10:	b	1ce14 <__assert_fail@plt+0xb6e0>
   1ce14:	ldr	r0, [pc, #3048]	; 1da04 <__assert_fail@plt+0xc2d0>
   1ce18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce1c:	ldr	r2, [fp, #8]
   1ce20:	sdiv	r0, r0, r2
   1ce24:	cmp	r1, r0
   1ce28:	blt	1cf94 <__assert_fail@plt+0xb860>
   1ce2c:	b	1cfa8 <__assert_fail@plt+0xb874>
   1ce30:	b	1ce34 <__assert_fail@plt+0xb700>
   1ce34:	ldr	r0, [pc, #3020]	; 1da08 <__assert_fail@plt+0xc2d4>
   1ce38:	ldr	r1, [fp, #8]
   1ce3c:	cmp	r1, r0
   1ce40:	blt	1ce58 <__assert_fail@plt+0xb724>
   1ce44:	b	1ce64 <__assert_fail@plt+0xb730>
   1ce48:	ldr	r0, [fp, #8]
   1ce4c:	movw	r1, #0
   1ce50:	cmp	r1, r0
   1ce54:	bge	1ce64 <__assert_fail@plt+0xb730>
   1ce58:	movw	r0, #0
   1ce5c:	str	r0, [sp, #72]	; 0x48
   1ce60:	b	1ce7c <__assert_fail@plt+0xb748>
   1ce64:	ldr	r0, [pc, #2968]	; 1da04 <__assert_fail@plt+0xc2d0>
   1ce68:	ldr	r1, [fp, #8]
   1ce6c:	movw	r2, #0
   1ce70:	sub	r1, r2, r1
   1ce74:	sdiv	r0, r0, r1
   1ce78:	str	r0, [sp, #72]	; 0x48
   1ce7c:	ldr	r0, [sp, #72]	; 0x48
   1ce80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce84:	mvn	r2, #0
   1ce88:	sub	r1, r2, r1
   1ce8c:	cmp	r0, r1
   1ce90:	ble	1cf94 <__assert_fail@plt+0xb860>
   1ce94:	b	1cfa8 <__assert_fail@plt+0xb874>
   1ce98:	ldr	r0, [fp, #8]
   1ce9c:	cmn	r0, #1
   1cea0:	bne	1cee8 <__assert_fail@plt+0xb7b4>
   1cea4:	b	1cea8 <__assert_fail@plt+0xb774>
   1cea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceac:	add	r0, r0, #-2147483648	; 0x80000000
   1ceb0:	movw	r1, #0
   1ceb4:	cmp	r1, r0
   1ceb8:	blt	1cf94 <__assert_fail@plt+0xb860>
   1cebc:	b	1cfa8 <__assert_fail@plt+0xb874>
   1cec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cec4:	movw	r1, #0
   1cec8:	cmp	r1, r0
   1cecc:	bge	1cfa8 <__assert_fail@plt+0xb874>
   1ced0:	ldr	r0, [pc, #2860]	; 1da04 <__assert_fail@plt+0xc2d0>
   1ced4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ced8:	sub	r1, r1, #1
   1cedc:	cmp	r0, r1
   1cee0:	blt	1cf94 <__assert_fail@plt+0xb860>
   1cee4:	b	1cfa8 <__assert_fail@plt+0xb874>
   1cee8:	ldr	r0, [pc, #2844]	; 1da0c <__assert_fail@plt+0xc2d8>
   1ceec:	ldr	r1, [fp, #8]
   1cef0:	sdiv	r0, r0, r1
   1cef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cef8:	cmp	r0, r1
   1cefc:	blt	1cf94 <__assert_fail@plt+0xb860>
   1cf00:	b	1cfa8 <__assert_fail@plt+0xb874>
   1cf04:	ldr	r0, [fp, #8]
   1cf08:	cmp	r0, #0
   1cf0c:	bne	1cf14 <__assert_fail@plt+0xb7e0>
   1cf10:	b	1cfa8 <__assert_fail@plt+0xb874>
   1cf14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf18:	cmp	r0, #0
   1cf1c:	bge	1cf7c <__assert_fail@plt+0xb848>
   1cf20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf24:	cmn	r0, #1
   1cf28:	bne	1cf60 <__assert_fail@plt+0xb82c>
   1cf2c:	b	1cf30 <__assert_fail@plt+0xb7fc>
   1cf30:	ldr	r0, [fp, #8]
   1cf34:	add	r0, r0, #-2147483648	; 0x80000000
   1cf38:	movw	r1, #0
   1cf3c:	cmp	r1, r0
   1cf40:	blt	1cf94 <__assert_fail@plt+0xb860>
   1cf44:	b	1cfa8 <__assert_fail@plt+0xb874>
   1cf48:	ldr	r0, [pc, #2740]	; 1da04 <__assert_fail@plt+0xc2d0>
   1cf4c:	ldr	r1, [fp, #8]
   1cf50:	sub	r1, r1, #1
   1cf54:	cmp	r0, r1
   1cf58:	blt	1cf94 <__assert_fail@plt+0xb860>
   1cf5c:	b	1cfa8 <__assert_fail@plt+0xb874>
   1cf60:	ldr	r0, [pc, #2724]	; 1da0c <__assert_fail@plt+0xc2d8>
   1cf64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf68:	sdiv	r0, r0, r1
   1cf6c:	ldr	r1, [fp, #8]
   1cf70:	cmp	r0, r1
   1cf74:	blt	1cf94 <__assert_fail@plt+0xb860>
   1cf78:	b	1cfa8 <__assert_fail@plt+0xb874>
   1cf7c:	ldr	r0, [pc, #2688]	; 1da04 <__assert_fail@plt+0xc2d0>
   1cf80:	ldr	r1, [fp, #8]
   1cf84:	sdiv	r0, r0, r1
   1cf88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf8c:	cmp	r0, r1
   1cf90:	bge	1cfa8 <__assert_fail@plt+0xb874>
   1cf94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf98:	ldr	r1, [fp, #8]
   1cf9c:	mul	r0, r0, r1
   1cfa0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfa4:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1cfa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfac:	ldr	r1, [fp, #8]
   1cfb0:	mul	r0, r0, r1
   1cfb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfb8:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1cfbc:	ldr	r0, [fp, #8]
   1cfc0:	cmp	r0, #0
   1cfc4:	bge	1d0d4 <__assert_fail@plt+0xb9a0>
   1cfc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfcc:	cmp	r0, #0
   1cfd0:	bge	1d05c <__assert_fail@plt+0xb928>
   1cfd4:	b	1cff4 <__assert_fail@plt+0xb8c0>
   1cfd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfdc:	ldr	r1, [fp, #8]
   1cfe0:	mvn	r2, #0
   1cfe4:	udiv	r1, r2, r1
   1cfe8:	cmp	r0, r1
   1cfec:	bcc	1d170 <__assert_fail@plt+0xba3c>
   1cff0:	b	1d184 <__assert_fail@plt+0xba50>
   1cff4:	b	1cff8 <__assert_fail@plt+0xb8c4>
   1cff8:	ldr	r0, [pc, #2568]	; 1da08 <__assert_fail@plt+0xc2d4>
   1cffc:	ldr	r1, [fp, #8]
   1d000:	cmp	r1, r0
   1d004:	blt	1d01c <__assert_fail@plt+0xb8e8>
   1d008:	b	1d028 <__assert_fail@plt+0xb8f4>
   1d00c:	ldr	r0, [fp, #8]
   1d010:	movw	r1, #0
   1d014:	cmp	r1, r0
   1d018:	bge	1d028 <__assert_fail@plt+0xb8f4>
   1d01c:	movw	r0, #1
   1d020:	str	r0, [sp, #68]	; 0x44
   1d024:	b	1d040 <__assert_fail@plt+0xb90c>
   1d028:	ldr	r0, [fp, #8]
   1d02c:	movw	r1, #0
   1d030:	sub	r0, r1, r0
   1d034:	mvn	r1, #0
   1d038:	udiv	r0, r1, r0
   1d03c:	str	r0, [sp, #68]	; 0x44
   1d040:	ldr	r0, [sp, #68]	; 0x44
   1d044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d048:	mvn	r2, #0
   1d04c:	sub	r1, r2, r1
   1d050:	cmp	r0, r1
   1d054:	bls	1d170 <__assert_fail@plt+0xba3c>
   1d058:	b	1d184 <__assert_fail@plt+0xba50>
   1d05c:	b	1d060 <__assert_fail@plt+0xb92c>
   1d060:	b	1d0b8 <__assert_fail@plt+0xb984>
   1d064:	b	1d0b8 <__assert_fail@plt+0xb984>
   1d068:	ldr	r0, [fp, #8]
   1d06c:	cmn	r0, #1
   1d070:	bne	1d0b8 <__assert_fail@plt+0xb984>
   1d074:	b	1d078 <__assert_fail@plt+0xb944>
   1d078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d07c:	add	r0, r0, #0
   1d080:	movw	r1, #0
   1d084:	cmp	r1, r0
   1d088:	blt	1d170 <__assert_fail@plt+0xba3c>
   1d08c:	b	1d184 <__assert_fail@plt+0xba50>
   1d090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d094:	movw	r1, #0
   1d098:	cmp	r1, r0
   1d09c:	bge	1d184 <__assert_fail@plt+0xba50>
   1d0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0a4:	sub	r0, r0, #1
   1d0a8:	mvn	r1, #0
   1d0ac:	cmp	r1, r0
   1d0b0:	blt	1d170 <__assert_fail@plt+0xba3c>
   1d0b4:	b	1d184 <__assert_fail@plt+0xba50>
   1d0b8:	ldr	r0, [fp, #8]
   1d0bc:	movw	r1, #0
   1d0c0:	sdiv	r0, r1, r0
   1d0c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0c8:	cmp	r0, r1
   1d0cc:	blt	1d170 <__assert_fail@plt+0xba3c>
   1d0d0:	b	1d184 <__assert_fail@plt+0xba50>
   1d0d4:	ldr	r0, [fp, #8]
   1d0d8:	cmp	r0, #0
   1d0dc:	bne	1d0e4 <__assert_fail@plt+0xb9b0>
   1d0e0:	b	1d184 <__assert_fail@plt+0xba50>
   1d0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e8:	cmp	r0, #0
   1d0ec:	bge	1d158 <__assert_fail@plt+0xba24>
   1d0f0:	b	1d0f4 <__assert_fail@plt+0xb9c0>
   1d0f4:	b	1d13c <__assert_fail@plt+0xba08>
   1d0f8:	b	1d13c <__assert_fail@plt+0xba08>
   1d0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d100:	cmn	r0, #1
   1d104:	bne	1d13c <__assert_fail@plt+0xba08>
   1d108:	b	1d10c <__assert_fail@plt+0xb9d8>
   1d10c:	ldr	r0, [fp, #8]
   1d110:	add	r0, r0, #0
   1d114:	movw	r1, #0
   1d118:	cmp	r1, r0
   1d11c:	blt	1d170 <__assert_fail@plt+0xba3c>
   1d120:	b	1d184 <__assert_fail@plt+0xba50>
   1d124:	ldr	r0, [fp, #8]
   1d128:	sub	r0, r0, #1
   1d12c:	mvn	r1, #0
   1d130:	cmp	r1, r0
   1d134:	blt	1d170 <__assert_fail@plt+0xba3c>
   1d138:	b	1d184 <__assert_fail@plt+0xba50>
   1d13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d140:	movw	r1, #0
   1d144:	sdiv	r0, r1, r0
   1d148:	ldr	r1, [fp, #8]
   1d14c:	cmp	r0, r1
   1d150:	blt	1d170 <__assert_fail@plt+0xba3c>
   1d154:	b	1d184 <__assert_fail@plt+0xba50>
   1d158:	ldr	r0, [fp, #8]
   1d15c:	mvn	r1, #0
   1d160:	udiv	r0, r1, r0
   1d164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d168:	cmp	r0, r1
   1d16c:	bcs	1d184 <__assert_fail@plt+0xba50>
   1d170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d174:	ldr	r1, [fp, #8]
   1d178:	mul	r0, r0, r1
   1d17c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d180:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1d184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d188:	ldr	r1, [fp, #8]
   1d18c:	mul	r0, r0, r1
   1d190:	str	r0, [fp, #-28]	; 0xffffffe4
   1d194:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1d198:	b	1d19c <__assert_fail@plt+0xba68>
   1d19c:	b	1d1a0 <__assert_fail@plt+0xba6c>
   1d1a0:	ldr	r0, [fp, #8]
   1d1a4:	cmp	r0, #0
   1d1a8:	bge	1d2ac <__assert_fail@plt+0xbb78>
   1d1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1b0:	cmp	r0, #0
   1d1b4:	bge	1d240 <__assert_fail@plt+0xbb0c>
   1d1b8:	b	1d1bc <__assert_fail@plt+0xba88>
   1d1bc:	ldr	r0, [pc, #2112]	; 1da04 <__assert_fail@plt+0xc2d0>
   1d1c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1c4:	ldr	r2, [fp, #8]
   1d1c8:	sdiv	r0, r0, r2
   1d1cc:	cmp	r1, r0
   1d1d0:	blt	1d33c <__assert_fail@plt+0xbc08>
   1d1d4:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d1d8:	b	1d1dc <__assert_fail@plt+0xbaa8>
   1d1dc:	ldr	r0, [pc, #2084]	; 1da08 <__assert_fail@plt+0xc2d4>
   1d1e0:	ldr	r1, [fp, #8]
   1d1e4:	cmp	r1, r0
   1d1e8:	blt	1d200 <__assert_fail@plt+0xbacc>
   1d1ec:	b	1d20c <__assert_fail@plt+0xbad8>
   1d1f0:	ldr	r0, [fp, #8]
   1d1f4:	movw	r1, #0
   1d1f8:	cmp	r1, r0
   1d1fc:	bge	1d20c <__assert_fail@plt+0xbad8>
   1d200:	movw	r0, #0
   1d204:	str	r0, [sp, #64]	; 0x40
   1d208:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d20c:	ldr	r0, [pc, #2032]	; 1da04 <__assert_fail@plt+0xc2d0>
   1d210:	ldr	r1, [fp, #8]
   1d214:	movw	r2, #0
   1d218:	sub	r1, r2, r1
   1d21c:	sdiv	r0, r0, r1
   1d220:	str	r0, [sp, #64]	; 0x40
   1d224:	ldr	r0, [sp, #64]	; 0x40
   1d228:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d22c:	mvn	r2, #0
   1d230:	sub	r1, r2, r1
   1d234:	cmp	r0, r1
   1d238:	ble	1d33c <__assert_fail@plt+0xbc08>
   1d23c:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d240:	ldr	r0, [fp, #8]
   1d244:	cmn	r0, #1
   1d248:	bne	1d290 <__assert_fail@plt+0xbb5c>
   1d24c:	b	1d250 <__assert_fail@plt+0xbb1c>
   1d250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d254:	add	r0, r0, #-2147483648	; 0x80000000
   1d258:	movw	r1, #0
   1d25c:	cmp	r1, r0
   1d260:	blt	1d33c <__assert_fail@plt+0xbc08>
   1d264:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d26c:	movw	r1, #0
   1d270:	cmp	r1, r0
   1d274:	bge	1d350 <__assert_fail@plt+0xbc1c>
   1d278:	ldr	r0, [pc, #1924]	; 1da04 <__assert_fail@plt+0xc2d0>
   1d27c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d280:	sub	r1, r1, #1
   1d284:	cmp	r0, r1
   1d288:	blt	1d33c <__assert_fail@plt+0xbc08>
   1d28c:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d290:	ldr	r0, [pc, #1908]	; 1da0c <__assert_fail@plt+0xc2d8>
   1d294:	ldr	r1, [fp, #8]
   1d298:	sdiv	r0, r0, r1
   1d29c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2a0:	cmp	r0, r1
   1d2a4:	blt	1d33c <__assert_fail@plt+0xbc08>
   1d2a8:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d2ac:	ldr	r0, [fp, #8]
   1d2b0:	cmp	r0, #0
   1d2b4:	bne	1d2bc <__assert_fail@plt+0xbb88>
   1d2b8:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d2bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2c0:	cmp	r0, #0
   1d2c4:	bge	1d324 <__assert_fail@plt+0xbbf0>
   1d2c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2cc:	cmn	r0, #1
   1d2d0:	bne	1d308 <__assert_fail@plt+0xbbd4>
   1d2d4:	b	1d2d8 <__assert_fail@plt+0xbba4>
   1d2d8:	ldr	r0, [fp, #8]
   1d2dc:	add	r0, r0, #-2147483648	; 0x80000000
   1d2e0:	movw	r1, #0
   1d2e4:	cmp	r1, r0
   1d2e8:	blt	1d33c <__assert_fail@plt+0xbc08>
   1d2ec:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d2f0:	ldr	r0, [pc, #1804]	; 1da04 <__assert_fail@plt+0xc2d0>
   1d2f4:	ldr	r1, [fp, #8]
   1d2f8:	sub	r1, r1, #1
   1d2fc:	cmp	r0, r1
   1d300:	blt	1d33c <__assert_fail@plt+0xbc08>
   1d304:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d308:	ldr	r0, [pc, #1788]	; 1da0c <__assert_fail@plt+0xc2d8>
   1d30c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d310:	sdiv	r0, r0, r1
   1d314:	ldr	r1, [fp, #8]
   1d318:	cmp	r0, r1
   1d31c:	blt	1d33c <__assert_fail@plt+0xbc08>
   1d320:	b	1d350 <__assert_fail@plt+0xbc1c>
   1d324:	ldr	r0, [pc, #1752]	; 1da04 <__assert_fail@plt+0xc2d0>
   1d328:	ldr	r1, [fp, #8]
   1d32c:	sdiv	r0, r0, r1
   1d330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d334:	cmp	r0, r1
   1d338:	bge	1d350 <__assert_fail@plt+0xbc1c>
   1d33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d340:	ldr	r1, [fp, #8]
   1d344:	mul	r0, r0, r1
   1d348:	str	r0, [fp, #-28]	; 0xffffffe4
   1d34c:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1d350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d354:	ldr	r1, [fp, #8]
   1d358:	mul	r0, r0, r1
   1d35c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d360:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1d364:	ldr	r0, [fp, #8]
   1d368:	cmp	r0, #0
   1d36c:	bge	1d47c <__assert_fail@plt+0xbd48>
   1d370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d374:	cmp	r0, #0
   1d378:	bge	1d404 <__assert_fail@plt+0xbcd0>
   1d37c:	b	1d39c <__assert_fail@plt+0xbc68>
   1d380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d384:	ldr	r1, [fp, #8]
   1d388:	mvn	r2, #0
   1d38c:	udiv	r1, r2, r1
   1d390:	cmp	r0, r1
   1d394:	bcc	1d518 <__assert_fail@plt+0xbde4>
   1d398:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d39c:	b	1d3a0 <__assert_fail@plt+0xbc6c>
   1d3a0:	ldr	r0, [pc, #1632]	; 1da08 <__assert_fail@plt+0xc2d4>
   1d3a4:	ldr	r1, [fp, #8]
   1d3a8:	cmp	r1, r0
   1d3ac:	blt	1d3c4 <__assert_fail@plt+0xbc90>
   1d3b0:	b	1d3d0 <__assert_fail@plt+0xbc9c>
   1d3b4:	ldr	r0, [fp, #8]
   1d3b8:	movw	r1, #0
   1d3bc:	cmp	r1, r0
   1d3c0:	bge	1d3d0 <__assert_fail@plt+0xbc9c>
   1d3c4:	movw	r0, #1
   1d3c8:	str	r0, [sp, #60]	; 0x3c
   1d3cc:	b	1d3e8 <__assert_fail@plt+0xbcb4>
   1d3d0:	ldr	r0, [fp, #8]
   1d3d4:	movw	r1, #0
   1d3d8:	sub	r0, r1, r0
   1d3dc:	mvn	r1, #0
   1d3e0:	udiv	r0, r1, r0
   1d3e4:	str	r0, [sp, #60]	; 0x3c
   1d3e8:	ldr	r0, [sp, #60]	; 0x3c
   1d3ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3f0:	mvn	r2, #0
   1d3f4:	sub	r1, r2, r1
   1d3f8:	cmp	r0, r1
   1d3fc:	bls	1d518 <__assert_fail@plt+0xbde4>
   1d400:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d404:	b	1d408 <__assert_fail@plt+0xbcd4>
   1d408:	b	1d460 <__assert_fail@plt+0xbd2c>
   1d40c:	b	1d460 <__assert_fail@plt+0xbd2c>
   1d410:	ldr	r0, [fp, #8]
   1d414:	cmn	r0, #1
   1d418:	bne	1d460 <__assert_fail@plt+0xbd2c>
   1d41c:	b	1d420 <__assert_fail@plt+0xbcec>
   1d420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d424:	add	r0, r0, #0
   1d428:	movw	r1, #0
   1d42c:	cmp	r1, r0
   1d430:	blt	1d518 <__assert_fail@plt+0xbde4>
   1d434:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d43c:	movw	r1, #0
   1d440:	cmp	r1, r0
   1d444:	bge	1d52c <__assert_fail@plt+0xbdf8>
   1d448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d44c:	sub	r0, r0, #1
   1d450:	mvn	r1, #0
   1d454:	cmp	r1, r0
   1d458:	blt	1d518 <__assert_fail@plt+0xbde4>
   1d45c:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d460:	ldr	r0, [fp, #8]
   1d464:	movw	r1, #0
   1d468:	sdiv	r0, r1, r0
   1d46c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d470:	cmp	r0, r1
   1d474:	blt	1d518 <__assert_fail@plt+0xbde4>
   1d478:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d47c:	ldr	r0, [fp, #8]
   1d480:	cmp	r0, #0
   1d484:	bne	1d48c <__assert_fail@plt+0xbd58>
   1d488:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d490:	cmp	r0, #0
   1d494:	bge	1d500 <__assert_fail@plt+0xbdcc>
   1d498:	b	1d49c <__assert_fail@plt+0xbd68>
   1d49c:	b	1d4e4 <__assert_fail@plt+0xbdb0>
   1d4a0:	b	1d4e4 <__assert_fail@plt+0xbdb0>
   1d4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4a8:	cmn	r0, #1
   1d4ac:	bne	1d4e4 <__assert_fail@plt+0xbdb0>
   1d4b0:	b	1d4b4 <__assert_fail@plt+0xbd80>
   1d4b4:	ldr	r0, [fp, #8]
   1d4b8:	add	r0, r0, #0
   1d4bc:	movw	r1, #0
   1d4c0:	cmp	r1, r0
   1d4c4:	blt	1d518 <__assert_fail@plt+0xbde4>
   1d4c8:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d4cc:	ldr	r0, [fp, #8]
   1d4d0:	sub	r0, r0, #1
   1d4d4:	mvn	r1, #0
   1d4d8:	cmp	r1, r0
   1d4dc:	blt	1d518 <__assert_fail@plt+0xbde4>
   1d4e0:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4e8:	movw	r1, #0
   1d4ec:	sdiv	r0, r1, r0
   1d4f0:	ldr	r1, [fp, #8]
   1d4f4:	cmp	r0, r1
   1d4f8:	blt	1d518 <__assert_fail@plt+0xbde4>
   1d4fc:	b	1d52c <__assert_fail@plt+0xbdf8>
   1d500:	ldr	r0, [fp, #8]
   1d504:	mvn	r1, #0
   1d508:	udiv	r0, r1, r0
   1d50c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d510:	cmp	r0, r1
   1d514:	bcs	1d52c <__assert_fail@plt+0xbdf8>
   1d518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d51c:	ldr	r1, [fp, #8]
   1d520:	mul	r0, r0, r1
   1d524:	str	r0, [fp, #-28]	; 0xffffffe4
   1d528:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1d52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d530:	ldr	r1, [fp, #8]
   1d534:	mul	r0, r0, r1
   1d538:	str	r0, [fp, #-28]	; 0xffffffe4
   1d53c:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1d540:	b	1d544 <__assert_fail@plt+0xbe10>
   1d544:	ldr	r0, [fp, #8]
   1d548:	cmp	r0, #0
   1d54c:	bge	1d6b4 <__assert_fail@plt+0xbf80>
   1d550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d554:	cmp	r0, #0
   1d558:	bge	1d630 <__assert_fail@plt+0xbefc>
   1d55c:	b	1d560 <__assert_fail@plt+0xbe2c>
   1d560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d564:	ldr	r1, [fp, #8]
   1d568:	asr	r3, r1, #31
   1d56c:	mvn	r2, #0
   1d570:	mvn	ip, #-2147483648	; 0x80000000
   1d574:	str	r0, [sp, #56]	; 0x38
   1d578:	mov	r0, r2
   1d57c:	str	r1, [sp, #52]	; 0x34
   1d580:	mov	r1, ip
   1d584:	ldr	r2, [sp, #52]	; 0x34
   1d588:	bl	2246c <__assert_fail@plt+0x10d38>
   1d58c:	ldr	r2, [sp, #56]	; 0x38
   1d590:	subs	r0, r2, r0
   1d594:	rscs	r1, r1, r2, asr #31
   1d598:	blt	1d77c <__assert_fail@plt+0xc048>
   1d59c:	b	1d790 <__assert_fail@plt+0xc05c>
   1d5a0:	b	1d5a4 <__assert_fail@plt+0xbe70>
   1d5a4:	ldr	r0, [pc, #1116]	; 1da08 <__assert_fail@plt+0xc2d4>
   1d5a8:	ldr	r1, [fp, #8]
   1d5ac:	cmp	r1, r0
   1d5b0:	blt	1d5c8 <__assert_fail@plt+0xbe94>
   1d5b4:	b	1d5dc <__assert_fail@plt+0xbea8>
   1d5b8:	ldr	r0, [fp, #8]
   1d5bc:	movw	r1, #0
   1d5c0:	cmp	r1, r0
   1d5c4:	bge	1d5dc <__assert_fail@plt+0xbea8>
   1d5c8:	mov	r0, #0
   1d5cc:	mvn	r1, #0
   1d5d0:	str	r1, [sp, #48]	; 0x30
   1d5d4:	str	r0, [sp, #44]	; 0x2c
   1d5d8:	b	1d610 <__assert_fail@plt+0xbedc>
   1d5dc:	ldr	r0, [fp, #8]
   1d5e0:	rsb	r0, r0, #0
   1d5e4:	asr	r3, r0, #31
   1d5e8:	mvn	r1, #0
   1d5ec:	mvn	r2, #-2147483648	; 0x80000000
   1d5f0:	str	r0, [sp, #40]	; 0x28
   1d5f4:	mov	r0, r1
   1d5f8:	mov	r1, r2
   1d5fc:	ldr	r2, [sp, #40]	; 0x28
   1d600:	bl	2246c <__assert_fail@plt+0x10d38>
   1d604:	str	r0, [sp, #48]	; 0x30
   1d608:	str	r1, [sp, #44]	; 0x2c
   1d60c:	b	1d610 <__assert_fail@plt+0xbedc>
   1d610:	ldr	r0, [sp, #44]	; 0x2c
   1d614:	ldr	r1, [sp, #48]	; 0x30
   1d618:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d61c:	mvn	r2, r2
   1d620:	subs	r1, r2, r1
   1d624:	rscs	r0, r0, r2, asr #31
   1d628:	bge	1d77c <__assert_fail@plt+0xc048>
   1d62c:	b	1d790 <__assert_fail@plt+0xc05c>
   1d630:	ldr	r0, [fp, #8]
   1d634:	cmn	r0, #1
   1d638:	bne	1d67c <__assert_fail@plt+0xbf48>
   1d63c:	b	1d640 <__assert_fail@plt+0xbf0c>
   1d640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d644:	mov	r1, #-2147483648	; 0x80000000
   1d648:	add	r1, r1, r0, asr #31
   1d64c:	rsbs	r0, r0, #0
   1d650:	rscs	r1, r1, #0
   1d654:	blt	1d77c <__assert_fail@plt+0xc048>
   1d658:	b	1d790 <__assert_fail@plt+0xc05c>
   1d65c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d660:	movw	r1, #0
   1d664:	cmp	r1, r0
   1d668:	bge	1d790 <__assert_fail@plt+0xc05c>
   1d66c:	mov	r0, #0
   1d670:	cmp	r0, #0
   1d674:	bne	1d77c <__assert_fail@plt+0xc048>
   1d678:	b	1d790 <__assert_fail@plt+0xc05c>
   1d67c:	ldr	r0, [fp, #8]
   1d680:	asr	r3, r0, #31
   1d684:	mov	r1, #0
   1d688:	mov	r2, #-2147483648	; 0x80000000
   1d68c:	str	r0, [sp, #36]	; 0x24
   1d690:	mov	r0, r1
   1d694:	mov	r1, r2
   1d698:	ldr	r2, [sp, #36]	; 0x24
   1d69c:	bl	2246c <__assert_fail@plt+0x10d38>
   1d6a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d6a4:	subs	r0, r0, r2
   1d6a8:	sbcs	r1, r1, r2, asr #31
   1d6ac:	blt	1d77c <__assert_fail@plt+0xc048>
   1d6b0:	b	1d790 <__assert_fail@plt+0xc05c>
   1d6b4:	ldr	r0, [fp, #8]
   1d6b8:	cmp	r0, #0
   1d6bc:	bne	1d6c4 <__assert_fail@plt+0xbf90>
   1d6c0:	b	1d790 <__assert_fail@plt+0xc05c>
   1d6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6c8:	cmp	r0, #0
   1d6cc:	bge	1d744 <__assert_fail@plt+0xc010>
   1d6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6d4:	cmn	r0, #1
   1d6d8:	bne	1d70c <__assert_fail@plt+0xbfd8>
   1d6dc:	b	1d6e0 <__assert_fail@plt+0xbfac>
   1d6e0:	ldr	r0, [fp, #8]
   1d6e4:	mov	r1, #-2147483648	; 0x80000000
   1d6e8:	add	r1, r1, r0, asr #31
   1d6ec:	rsbs	r0, r0, #0
   1d6f0:	rscs	r1, r1, #0
   1d6f4:	blt	1d77c <__assert_fail@plt+0xc048>
   1d6f8:	b	1d790 <__assert_fail@plt+0xc05c>
   1d6fc:	mov	r0, #0
   1d700:	cmp	r0, #0
   1d704:	bne	1d77c <__assert_fail@plt+0xc048>
   1d708:	b	1d790 <__assert_fail@plt+0xc05c>
   1d70c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d710:	asr	r3, r0, #31
   1d714:	mov	r1, #0
   1d718:	mov	r2, #-2147483648	; 0x80000000
   1d71c:	str	r0, [sp, #32]
   1d720:	mov	r0, r1
   1d724:	mov	r1, r2
   1d728:	ldr	r2, [sp, #32]
   1d72c:	bl	2246c <__assert_fail@plt+0x10d38>
   1d730:	ldr	r2, [fp, #8]
   1d734:	subs	r0, r0, r2
   1d738:	sbcs	r1, r1, r2, asr #31
   1d73c:	blt	1d77c <__assert_fail@plt+0xc048>
   1d740:	b	1d790 <__assert_fail@plt+0xc05c>
   1d744:	ldr	r0, [fp, #8]
   1d748:	asr	r3, r0, #31
   1d74c:	mvn	r1, #0
   1d750:	mvn	r2, #-2147483648	; 0x80000000
   1d754:	str	r0, [sp, #28]
   1d758:	mov	r0, r1
   1d75c:	mov	r1, r2
   1d760:	ldr	r2, [sp, #28]
   1d764:	bl	2246c <__assert_fail@plt+0x10d38>
   1d768:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d76c:	subs	r0, r0, r2
   1d770:	sbcs	r1, r1, r2, asr #31
   1d774:	bge	1d790 <__assert_fail@plt+0xc05c>
   1d778:	b	1d77c <__assert_fail@plt+0xc048>
   1d77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d780:	ldr	r1, [fp, #8]
   1d784:	mul	r0, r0, r1
   1d788:	str	r0, [fp, #-28]	; 0xffffffe4
   1d78c:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1d790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d794:	ldr	r1, [fp, #8]
   1d798:	mul	r0, r0, r1
   1d79c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7a0:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1d7a4:	ldr	r0, [fp, #8]
   1d7a8:	cmp	r0, #0
   1d7ac:	bge	1d8fc <__assert_fail@plt+0xc1c8>
   1d7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7b4:	cmp	r0, #0
   1d7b8:	bge	1d884 <__assert_fail@plt+0xc150>
   1d7bc:	b	1d7fc <__assert_fail@plt+0xc0c8>
   1d7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7c4:	ldr	r1, [fp, #8]
   1d7c8:	asr	r3, r1, #31
   1d7cc:	mvn	r2, #0
   1d7d0:	str	r0, [sp, #24]
   1d7d4:	mov	r0, r2
   1d7d8:	str	r1, [sp, #20]
   1d7dc:	mov	r1, r2
   1d7e0:	ldr	r2, [sp, #20]
   1d7e4:	bl	22540 <__assert_fail@plt+0x10e0c>
   1d7e8:	ldr	r2, [sp, #24]
   1d7ec:	subs	r0, r2, r0
   1d7f0:	rscs	r1, r1, r2, asr #31
   1d7f4:	bcc	1d9b0 <__assert_fail@plt+0xc27c>
   1d7f8:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d7fc:	b	1d800 <__assert_fail@plt+0xc0cc>
   1d800:	ldr	r0, [pc, #512]	; 1da08 <__assert_fail@plt+0xc2d4>
   1d804:	ldr	r1, [fp, #8]
   1d808:	cmp	r1, r0
   1d80c:	blt	1d824 <__assert_fail@plt+0xc0f0>
   1d810:	b	1d838 <__assert_fail@plt+0xc104>
   1d814:	ldr	r0, [fp, #8]
   1d818:	movw	r1, #0
   1d81c:	cmp	r1, r0
   1d820:	bge	1d838 <__assert_fail@plt+0xc104>
   1d824:	mov	r0, #1
   1d828:	mvn	r1, #0
   1d82c:	str	r1, [sp, #16]
   1d830:	str	r0, [sp, #12]
   1d834:	b	1d864 <__assert_fail@plt+0xc130>
   1d838:	ldr	r0, [fp, #8]
   1d83c:	rsb	r0, r0, #0
   1d840:	asr	r3, r0, #31
   1d844:	mvn	r1, #0
   1d848:	str	r0, [sp, #8]
   1d84c:	mov	r0, r1
   1d850:	ldr	r2, [sp, #8]
   1d854:	bl	22540 <__assert_fail@plt+0x10e0c>
   1d858:	str	r0, [sp, #16]
   1d85c:	str	r1, [sp, #12]
   1d860:	b	1d864 <__assert_fail@plt+0xc130>
   1d864:	ldr	r0, [sp, #12]
   1d868:	ldr	r1, [sp, #16]
   1d86c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d870:	mvn	r2, r2
   1d874:	subs	r1, r2, r1
   1d878:	rscs	r0, r0, r2, asr #31
   1d87c:	bcs	1d9b0 <__assert_fail@plt+0xc27c>
   1d880:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d884:	b	1d888 <__assert_fail@plt+0xc154>
   1d888:	b	1d8e0 <__assert_fail@plt+0xc1ac>
   1d88c:	b	1d8e0 <__assert_fail@plt+0xc1ac>
   1d890:	ldr	r0, [fp, #8]
   1d894:	cmn	r0, #1
   1d898:	bne	1d8e0 <__assert_fail@plt+0xc1ac>
   1d89c:	b	1d8a0 <__assert_fail@plt+0xc16c>
   1d8a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8a4:	add	r0, r0, #0
   1d8a8:	movw	r1, #0
   1d8ac:	cmp	r1, r0
   1d8b0:	blt	1d9b0 <__assert_fail@plt+0xc27c>
   1d8b4:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8bc:	movw	r1, #0
   1d8c0:	cmp	r1, r0
   1d8c4:	bge	1d9c4 <__assert_fail@plt+0xc290>
   1d8c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8cc:	sub	r0, r0, #1
   1d8d0:	mvn	r1, #0
   1d8d4:	cmp	r1, r0
   1d8d8:	blt	1d9b0 <__assert_fail@plt+0xc27c>
   1d8dc:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d8e0:	ldr	r0, [fp, #8]
   1d8e4:	movw	r1, #0
   1d8e8:	sdiv	r0, r1, r0
   1d8ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8f0:	cmp	r0, r1
   1d8f4:	blt	1d9b0 <__assert_fail@plt+0xc27c>
   1d8f8:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d8fc:	ldr	r0, [fp, #8]
   1d900:	cmp	r0, #0
   1d904:	bne	1d90c <__assert_fail@plt+0xc1d8>
   1d908:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d910:	cmp	r0, #0
   1d914:	bge	1d980 <__assert_fail@plt+0xc24c>
   1d918:	b	1d91c <__assert_fail@plt+0xc1e8>
   1d91c:	b	1d964 <__assert_fail@plt+0xc230>
   1d920:	b	1d964 <__assert_fail@plt+0xc230>
   1d924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d928:	cmn	r0, #1
   1d92c:	bne	1d964 <__assert_fail@plt+0xc230>
   1d930:	b	1d934 <__assert_fail@plt+0xc200>
   1d934:	ldr	r0, [fp, #8]
   1d938:	add	r0, r0, #0
   1d93c:	movw	r1, #0
   1d940:	cmp	r1, r0
   1d944:	blt	1d9b0 <__assert_fail@plt+0xc27c>
   1d948:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d94c:	ldr	r0, [fp, #8]
   1d950:	sub	r0, r0, #1
   1d954:	mvn	r1, #0
   1d958:	cmp	r1, r0
   1d95c:	blt	1d9b0 <__assert_fail@plt+0xc27c>
   1d960:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d968:	movw	r1, #0
   1d96c:	sdiv	r0, r1, r0
   1d970:	ldr	r1, [fp, #8]
   1d974:	cmp	r0, r1
   1d978:	blt	1d9b0 <__assert_fail@plt+0xc27c>
   1d97c:	b	1d9c4 <__assert_fail@plt+0xc290>
   1d980:	ldr	r0, [fp, #8]
   1d984:	asr	r3, r0, #31
   1d988:	mvn	r1, #0
   1d98c:	str	r0, [sp, #4]
   1d990:	mov	r0, r1
   1d994:	ldr	r2, [sp, #4]
   1d998:	bl	22540 <__assert_fail@plt+0x10e0c>
   1d99c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d9a0:	subs	r0, r0, r2
   1d9a4:	sbcs	r1, r1, r2, asr #31
   1d9a8:	bcs	1d9c4 <__assert_fail@plt+0xc290>
   1d9ac:	b	1d9b0 <__assert_fail@plt+0xc27c>
   1d9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9b4:	ldr	r1, [fp, #8]
   1d9b8:	mul	r0, r0, r1
   1d9bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d9c0:	b	1d9d8 <__assert_fail@plt+0xc2a4>
   1d9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9c8:	ldr	r1, [fp, #8]
   1d9cc:	mul	r0, r0, r1
   1d9d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d9d4:	b	1d9dc <__assert_fail@plt+0xc2a8>
   1d9d8:	bl	1dbb4 <__assert_fail@plt+0xc480>
   1d9dc:	ldr	r0, [fp, #-4]
   1d9e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d9e4:	bl	1af14 <__assert_fail@plt+0x97e0>
   1d9e8:	str	r0, [fp, #-4]
   1d9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9f0:	ldr	r1, [fp, #-8]
   1d9f4:	str	r0, [r1]
   1d9f8:	ldr	r0, [fp, #-4]
   1d9fc:	mov	sp, fp
   1da00:	pop	{fp, pc}
   1da04:	svcvc	0x00ffffff
   1da08:	andhi	r0, r0, r1
   1da0c:	andhi	r0, r0, r0
   1da10:			; <UNDEFINED> instruction: 0xffff8000
   1da14:	push	{fp, lr}
   1da18:	mov	fp, sp
   1da1c:	sub	sp, sp, #8
   1da20:	str	r0, [sp, #4]
   1da24:	ldr	r0, [sp, #4]
   1da28:	movw	r1, #1
   1da2c:	bl	1da38 <__assert_fail@plt+0xc304>
   1da30:	mov	sp, fp
   1da34:	pop	{fp, pc}
   1da38:	push	{fp, lr}
   1da3c:	mov	fp, sp
   1da40:	sub	sp, sp, #8
   1da44:	str	r0, [sp, #4]
   1da48:	str	r1, [sp]
   1da4c:	ldr	r0, [sp, #4]
   1da50:	ldr	r1, [sp]
   1da54:	bl	1fe1c <__assert_fail@plt+0xe6e8>
   1da58:	bl	1aea0 <__assert_fail@plt+0x976c>
   1da5c:	mov	sp, fp
   1da60:	pop	{fp, pc}
   1da64:	push	{fp, lr}
   1da68:	mov	fp, sp
   1da6c:	sub	sp, sp, #8
   1da70:	str	r0, [sp, #4]
   1da74:	ldr	r0, [sp, #4]
   1da78:	movw	r1, #1
   1da7c:	bl	1da88 <__assert_fail@plt+0xc354>
   1da80:	mov	sp, fp
   1da84:	pop	{fp, pc}
   1da88:	push	{fp, lr}
   1da8c:	mov	fp, sp
   1da90:	sub	sp, sp, #8
   1da94:	str	r0, [sp, #4]
   1da98:	str	r1, [sp]
   1da9c:	ldr	r0, [sp, #4]
   1daa0:	ldr	r1, [sp]
   1daa4:	bl	202d0 <__assert_fail@plt+0xeb9c>
   1daa8:	bl	1aea0 <__assert_fail@plt+0x976c>
   1daac:	mov	sp, fp
   1dab0:	pop	{fp, pc}
   1dab4:	push	{fp, lr}
   1dab8:	mov	fp, sp
   1dabc:	sub	sp, sp, #16
   1dac0:	str	r0, [fp, #-4]
   1dac4:	str	r1, [sp, #8]
   1dac8:	ldr	r0, [sp, #8]
   1dacc:	bl	1ae7c <__assert_fail@plt+0x9748>
   1dad0:	ldr	r1, [fp, #-4]
   1dad4:	ldr	r2, [sp, #8]
   1dad8:	str	r0, [sp, #4]
   1dadc:	bl	11428 <memcpy@plt>
   1dae0:	ldr	r0, [sp, #4]
   1dae4:	mov	sp, fp
   1dae8:	pop	{fp, pc}
   1daec:	push	{fp, lr}
   1daf0:	mov	fp, sp
   1daf4:	sub	sp, sp, #16
   1daf8:	str	r0, [fp, #-4]
   1dafc:	str	r1, [sp, #8]
   1db00:	ldr	r0, [sp, #8]
   1db04:	bl	1aed0 <__assert_fail@plt+0x979c>
   1db08:	ldr	r1, [fp, #-4]
   1db0c:	ldr	r2, [sp, #8]
   1db10:	str	r0, [sp, #4]
   1db14:	bl	11428 <memcpy@plt>
   1db18:	ldr	r0, [sp, #4]
   1db1c:	mov	sp, fp
   1db20:	pop	{fp, pc}
   1db24:	push	{fp, lr}
   1db28:	mov	fp, sp
   1db2c:	sub	sp, sp, #16
   1db30:	str	r0, [fp, #-4]
   1db34:	str	r1, [sp, #8]
   1db38:	ldr	r0, [sp, #8]
   1db3c:	add	r0, r0, #1
   1db40:	bl	1aed0 <__assert_fail@plt+0x979c>
   1db44:	str	r0, [sp, #4]
   1db48:	ldr	r0, [sp, #4]
   1db4c:	ldr	r1, [sp, #8]
   1db50:	add	r0, r0, r1
   1db54:	movw	r1, #0
   1db58:	strb	r1, [r0]
   1db5c:	ldr	r0, [sp, #4]
   1db60:	ldr	r1, [fp, #-4]
   1db64:	ldr	r2, [sp, #8]
   1db68:	str	r0, [sp]
   1db6c:	bl	11428 <memcpy@plt>
   1db70:	ldr	r0, [sp]
   1db74:	mov	sp, fp
   1db78:	pop	{fp, pc}
   1db7c:	push	{fp, lr}
   1db80:	mov	fp, sp
   1db84:	sub	sp, sp, #8
   1db88:	str	r0, [sp, #4]
   1db8c:	ldr	r0, [sp, #4]
   1db90:	ldr	r1, [sp, #4]
   1db94:	str	r0, [sp]
   1db98:	mov	r0, r1
   1db9c:	bl	1159c <strlen@plt>
   1dba0:	add	r1, r0, #1
   1dba4:	ldr	r0, [sp]
   1dba8:	bl	1dab4 <__assert_fail@plt+0xc380>
   1dbac:	mov	sp, fp
   1dbb0:	pop	{fp, pc}
   1dbb4:	push	{fp, lr}
   1dbb8:	mov	fp, sp
   1dbbc:	sub	sp, sp, #8
   1dbc0:	movw	r0, #16744	; 0x4168
   1dbc4:	movt	r0, #3
   1dbc8:	ldr	r0, [r0]
   1dbcc:	movw	r1, #15748	; 0x3d84
   1dbd0:	movt	r1, #2
   1dbd4:	str	r0, [sp, #4]
   1dbd8:	mov	r0, r1
   1dbdc:	bl	11590 <gettext@plt>
   1dbe0:	ldr	r1, [sp, #4]
   1dbe4:	str	r0, [sp]
   1dbe8:	mov	r0, r1
   1dbec:	movw	r1, #0
   1dbf0:	movw	r2, #14290	; 0x37d2
   1dbf4:	movt	r2, #2
   1dbf8:	ldr	r3, [sp]
   1dbfc:	bl	1150c <error@plt>
   1dc00:	bl	11710 <abort@plt>
   1dc04:	bx	lr
   1dc08:	push	{fp, lr}
   1dc0c:	mov	fp, sp
   1dc10:	sub	sp, sp, #8
   1dc14:	str	r0, [sp, #4]
   1dc18:	str	r1, [sp]
   1dc1c:	ldr	r0, [sp, #4]
   1dc20:	ldr	r1, [sp]
   1dc24:	bl	2005c <__assert_fail@plt+0xe928>
   1dc28:	cmp	r0, #0
   1dc2c:	bge	1dc34 <__assert_fail@plt+0xc500>
   1dc30:	bl	1dc04 <__assert_fail@plt+0xc4d0>
   1dc34:	mov	sp, fp
   1dc38:	pop	{fp, pc}
   1dc3c:	push	{r4, r5, r6, sl, fp, lr}
   1dc40:	add	fp, sp, #16
   1dc44:	sub	sp, sp, #88	; 0x58
   1dc48:	ldr	ip, [fp, #12]
   1dc4c:	ldr	lr, [fp, #8]
   1dc50:	ldr	r4, [fp, #24]
   1dc54:	ldr	r5, [fp, #20]
   1dc58:	ldr	r6, [fp, #16]
   1dc5c:	str	r0, [fp, #-20]	; 0xffffffec
   1dc60:	str	r1, [fp, #-24]	; 0xffffffe8
   1dc64:	str	r3, [fp, #-28]	; 0xffffffe4
   1dc68:	str	r2, [fp, #-32]	; 0xffffffe0
   1dc6c:	str	ip, [fp, #-36]	; 0xffffffdc
   1dc70:	str	lr, [fp, #-40]	; 0xffffffd8
   1dc74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dc78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dc7c:	ldr	r1, [fp, #16]
   1dc80:	movw	r3, #0
   1dc84:	str	r1, [sp, #44]	; 0x2c
   1dc88:	mov	r1, r3
   1dc8c:	add	r3, sp, #48	; 0x30
   1dc90:	ldr	ip, [sp, #44]	; 0x2c
   1dc94:	str	ip, [sp]
   1dc98:	str	r4, [sp, #40]	; 0x28
   1dc9c:	str	r5, [sp, #36]	; 0x24
   1dca0:	str	r6, [sp, #32]
   1dca4:	bl	1deb4 <__assert_fail@plt+0xc780>
   1dca8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dcac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dcb0:	cmp	r0, #0
   1dcb4:	bne	1dd3c <__assert_fail@plt+0xc608>
   1dcb8:	ldr	r0, [sp, #48]	; 0x30
   1dcbc:	ldr	r1, [sp, #52]	; 0x34
   1dcc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dcc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dcc8:	subs	r0, r0, r2
   1dccc:	sbcs	r1, r1, r3
   1dcd0:	bcc	1dcf8 <__assert_fail@plt+0xc5c4>
   1dcd4:	b	1dcd8 <__assert_fail@plt+0xc5a4>
   1dcd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dcdc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dce0:	ldr	r2, [sp, #48]	; 0x30
   1dce4:	ldr	r3, [sp, #52]	; 0x34
   1dce8:	subs	r0, r0, r2
   1dcec:	sbcs	r1, r1, r3
   1dcf0:	bcs	1dd38 <__assert_fail@plt+0xc604>
   1dcf4:	b	1dcf8 <__assert_fail@plt+0xc5c4>
   1dcf8:	mov	r0, #1
   1dcfc:	str	r0, [fp, #-44]	; 0xffffffd4
   1dd00:	ldr	r0, [sp, #48]	; 0x30
   1dd04:	ldr	r1, [sp, #52]	; 0x34
   1dd08:	subs	r0, r0, #1073741824	; 0x40000000
   1dd0c:	sbcs	r1, r1, #0
   1dd10:	bcc	1dd28 <__assert_fail@plt+0xc5f4>
   1dd14:	b	1dd18 <__assert_fail@plt+0xc5e4>
   1dd18:	bl	115f0 <__errno_location@plt>
   1dd1c:	movw	r1, #75	; 0x4b
   1dd20:	str	r1, [r0]
   1dd24:	b	1dd34 <__assert_fail@plt+0xc600>
   1dd28:	bl	115f0 <__errno_location@plt>
   1dd2c:	movw	r1, #34	; 0x22
   1dd30:	str	r1, [r0]
   1dd34:	b	1dd38 <__assert_fail@plt+0xc604>
   1dd38:	b	1dd78 <__assert_fail@plt+0xc644>
   1dd3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd40:	cmp	r0, #1
   1dd44:	bne	1dd58 <__assert_fail@plt+0xc624>
   1dd48:	bl	115f0 <__errno_location@plt>
   1dd4c:	movw	r1, #75	; 0x4b
   1dd50:	str	r1, [r0]
   1dd54:	b	1dd74 <__assert_fail@plt+0xc640>
   1dd58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd5c:	cmp	r0, #3
   1dd60:	bne	1dd70 <__assert_fail@plt+0xc63c>
   1dd64:	bl	115f0 <__errno_location@plt>
   1dd68:	movw	r1, #0
   1dd6c:	str	r1, [r0]
   1dd70:	b	1dd74 <__assert_fail@plt+0xc640>
   1dd74:	b	1dd78 <__assert_fail@plt+0xc644>
   1dd78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd7c:	cmp	r0, #0
   1dd80:	beq	1de1c <__assert_fail@plt+0xc6e8>
   1dd84:	ldr	r0, [fp, #24]
   1dd88:	cmp	r0, #0
   1dd8c:	beq	1dd9c <__assert_fail@plt+0xc668>
   1dd90:	ldr	r0, [fp, #24]
   1dd94:	str	r0, [sp, #28]
   1dd98:	b	1dda8 <__assert_fail@plt+0xc674>
   1dd9c:	movw	r0, #1
   1dda0:	str	r0, [sp, #28]
   1dda4:	b	1dda8 <__assert_fail@plt+0xc674>
   1dda8:	ldr	r0, [sp, #28]
   1ddac:	str	r0, [sp, #24]
   1ddb0:	bl	115f0 <__errno_location@plt>
   1ddb4:	ldr	r0, [r0]
   1ddb8:	cmp	r0, #22
   1ddbc:	bne	1ddcc <__assert_fail@plt+0xc698>
   1ddc0:	movw	r0, #0
   1ddc4:	str	r0, [sp, #20]
   1ddc8:	b	1ddd8 <__assert_fail@plt+0xc6a4>
   1ddcc:	bl	115f0 <__errno_location@plt>
   1ddd0:	ldr	r0, [r0]
   1ddd4:	str	r0, [sp, #20]
   1ddd8:	ldr	r0, [sp, #20]
   1dddc:	ldr	r3, [fp, #20]
   1dde0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dde4:	str	r0, [sp, #16]
   1dde8:	mov	r0, r1
   1ddec:	str	r3, [sp, #12]
   1ddf0:	bl	19e70 <__assert_fail@plt+0x873c>
   1ddf4:	ldr	r1, [sp, #24]
   1ddf8:	str	r0, [sp, #8]
   1ddfc:	mov	r0, r1
   1de00:	ldr	r1, [sp, #16]
   1de04:	movw	r2, #12509	; 0x30dd
   1de08:	movt	r2, #2
   1de0c:	ldr	r3, [sp, #12]
   1de10:	ldr	ip, [sp, #8]
   1de14:	str	ip, [sp]
   1de18:	bl	1150c <error@plt>
   1de1c:	ldr	r0, [sp, #48]	; 0x30
   1de20:	ldr	r1, [sp, #52]	; 0x34
   1de24:	sub	sp, fp, #16
   1de28:	pop	{r4, r5, r6, sl, fp, pc}
   1de2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1de30:	add	fp, sp, #24
   1de34:	sub	sp, sp, #56	; 0x38
   1de38:	ldr	r1, [fp, #12]
   1de3c:	ldr	ip, [fp, #8]
   1de40:	ldr	lr, [fp, #24]
   1de44:	ldr	r4, [fp, #20]
   1de48:	ldr	r5, [fp, #16]
   1de4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1de50:	str	r3, [sp, #44]	; 0x2c
   1de54:	str	r2, [sp, #40]	; 0x28
   1de58:	str	r1, [sp, #36]	; 0x24
   1de5c:	str	ip, [sp, #32]
   1de60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1de64:	ldr	r2, [sp, #40]	; 0x28
   1de68:	ldr	r3, [sp, #44]	; 0x2c
   1de6c:	ldr	r1, [sp, #32]
   1de70:	ldr	ip, [sp, #36]	; 0x24
   1de74:	ldr	r6, [fp, #16]
   1de78:	ldr	r7, [fp, #20]
   1de7c:	ldr	r8, [fp, #24]
   1de80:	mov	r9, sp
   1de84:	str	r8, [r9, #16]
   1de88:	str	r7, [r9, #12]
   1de8c:	str	r6, [r9, #8]
   1de90:	str	ip, [r9, #4]
   1de94:	str	r1, [r9]
   1de98:	mov	r1, #10
   1de9c:	str	lr, [sp, #28]
   1dea0:	str	r4, [sp, #24]
   1dea4:	str	r5, [sp, #20]
   1dea8:	bl	1dc3c <__assert_fail@plt+0xc508>
   1deac:	sub	sp, fp, #24
   1deb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1deb4:	push	{fp, lr}
   1deb8:	mov	fp, sp
   1debc:	sub	sp, sp, #80	; 0x50
   1dec0:	ldr	ip, [fp, #8]
   1dec4:	str	r0, [fp, #-8]
   1dec8:	str	r1, [fp, #-12]
   1decc:	str	r2, [fp, #-16]
   1ded0:	str	r3, [fp, #-20]	; 0xffffffec
   1ded4:	movw	r0, #0
   1ded8:	str	r0, [sp, #36]	; 0x24
   1dedc:	ldr	r1, [fp, #-16]
   1dee0:	cmp	r0, r1
   1dee4:	bgt	1def8 <__assert_fail@plt+0xc7c4>
   1dee8:	ldr	r0, [fp, #-16]
   1deec:	cmp	r0, #36	; 0x24
   1def0:	bgt	1def8 <__assert_fail@plt+0xc7c4>
   1def4:	b	1df18 <__assert_fail@plt+0xc7e4>
   1def8:	movw	r0, #15765	; 0x3d95
   1defc:	movt	r0, #2
   1df00:	movw	r1, #15803	; 0x3dbb
   1df04:	movt	r1, #2
   1df08:	movw	r2, #85	; 0x55
   1df0c:	movw	r3, #15819	; 0x3dcb
   1df10:	movt	r3, #2
   1df14:	bl	11734 <__assert_fail@plt>
   1df18:	ldr	r0, [fp, #-12]
   1df1c:	movw	r1, #0
   1df20:	cmp	r0, r1
   1df24:	beq	1df34 <__assert_fail@plt+0xc800>
   1df28:	ldr	r0, [fp, #-12]
   1df2c:	str	r0, [sp, #12]
   1df30:	b	1df40 <__assert_fail@plt+0xc80c>
   1df34:	sub	r0, fp, #24
   1df38:	str	r0, [sp, #12]
   1df3c:	b	1df40 <__assert_fail@plt+0xc80c>
   1df40:	ldr	r0, [sp, #12]
   1df44:	str	r0, [fp, #-28]	; 0xffffffe4
   1df48:	bl	115f0 <__errno_location@plt>
   1df4c:	movw	r1, #0
   1df50:	str	r1, [r0]
   1df54:	ldr	r0, [fp, #-8]
   1df58:	str	r0, [sp, #32]
   1df5c:	ldr	r0, [sp, #32]
   1df60:	ldrb	r0, [r0]
   1df64:	strb	r0, [sp, #31]
   1df68:	bl	11578 <__ctype_b_loc@plt>
   1df6c:	ldr	r0, [r0]
   1df70:	ldrb	r1, [sp, #31]
   1df74:	mov	r2, r1
   1df78:	add	r0, r0, r1, lsl #1
   1df7c:	ldrh	r0, [r0]
   1df80:	and	r0, r0, #8192	; 0x2000
   1df84:	cmp	r0, #0
   1df88:	beq	1dfa4 <__assert_fail@plt+0xc870>
   1df8c:	ldr	r0, [sp, #32]
   1df90:	add	r1, r0, #1
   1df94:	str	r1, [sp, #32]
   1df98:	ldrb	r0, [r0, #1]
   1df9c:	strb	r0, [sp, #31]
   1dfa0:	b	1df68 <__assert_fail@plt+0xc834>
   1dfa4:	ldrb	r0, [sp, #31]
   1dfa8:	cmp	r0, #45	; 0x2d
   1dfac:	bne	1dfbc <__assert_fail@plt+0xc888>
   1dfb0:	movw	r0, #4
   1dfb4:	str	r0, [fp, #-4]
   1dfb8:	b	1e538 <__assert_fail@plt+0xce04>
   1dfbc:	ldr	r0, [fp, #-8]
   1dfc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dfc4:	ldr	r2, [fp, #-16]
   1dfc8:	bl	1162c <strtoumax@plt>
   1dfcc:	str	r1, [sp, #44]	; 0x2c
   1dfd0:	str	r0, [sp, #40]	; 0x28
   1dfd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfd8:	ldr	r0, [r0]
   1dfdc:	ldr	r1, [fp, #-8]
   1dfe0:	cmp	r0, r1
   1dfe4:	bne	1e050 <__assert_fail@plt+0xc91c>
   1dfe8:	ldr	r0, [fp, #8]
   1dfec:	movw	r1, #0
   1dff0:	cmp	r0, r1
   1dff4:	beq	1e040 <__assert_fail@plt+0xc90c>
   1dff8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dffc:	ldr	r0, [r0]
   1e000:	ldrb	r0, [r0]
   1e004:	cmp	r0, #0
   1e008:	beq	1e040 <__assert_fail@plt+0xc90c>
   1e00c:	ldr	r0, [fp, #8]
   1e010:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e014:	ldr	r1, [r1]
   1e018:	ldrb	r1, [r1]
   1e01c:	bl	115b4 <strchr@plt>
   1e020:	movw	r1, #0
   1e024:	cmp	r0, r1
   1e028:	beq	1e040 <__assert_fail@plt+0xc90c>
   1e02c:	mov	r0, #0
   1e030:	str	r0, [sp, #44]	; 0x2c
   1e034:	mov	r0, #1
   1e038:	str	r0, [sp, #40]	; 0x28
   1e03c:	b	1e04c <__assert_fail@plt+0xc918>
   1e040:	movw	r0, #4
   1e044:	str	r0, [fp, #-4]
   1e048:	b	1e538 <__assert_fail@plt+0xce04>
   1e04c:	b	1e088 <__assert_fail@plt+0xc954>
   1e050:	bl	115f0 <__errno_location@plt>
   1e054:	ldr	r0, [r0]
   1e058:	cmp	r0, #0
   1e05c:	beq	1e084 <__assert_fail@plt+0xc950>
   1e060:	bl	115f0 <__errno_location@plt>
   1e064:	ldr	r0, [r0]
   1e068:	cmp	r0, #34	; 0x22
   1e06c:	beq	1e07c <__assert_fail@plt+0xc948>
   1e070:	movw	r0, #4
   1e074:	str	r0, [fp, #-4]
   1e078:	b	1e538 <__assert_fail@plt+0xce04>
   1e07c:	movw	r0, #1
   1e080:	str	r0, [sp, #36]	; 0x24
   1e084:	b	1e088 <__assert_fail@plt+0xc954>
   1e088:	ldr	r0, [fp, #8]
   1e08c:	movw	r1, #0
   1e090:	cmp	r0, r1
   1e094:	bne	1e0b8 <__assert_fail@plt+0xc984>
   1e098:	ldr	r0, [sp, #40]	; 0x28
   1e09c:	ldr	r1, [sp, #44]	; 0x2c
   1e0a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e0a4:	str	r1, [r2, #4]
   1e0a8:	str	r0, [r2]
   1e0ac:	ldr	r0, [sp, #36]	; 0x24
   1e0b0:	str	r0, [fp, #-4]
   1e0b4:	b	1e538 <__assert_fail@plt+0xce04>
   1e0b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e0bc:	ldr	r0, [r0]
   1e0c0:	ldrb	r0, [r0]
   1e0c4:	cmp	r0, #0
   1e0c8:	beq	1e51c <__assert_fail@plt+0xcde8>
   1e0cc:	movw	r0, #1024	; 0x400
   1e0d0:	str	r0, [sp, #24]
   1e0d4:	movw	r0, #1
   1e0d8:	str	r0, [sp, #20]
   1e0dc:	ldr	r0, [fp, #8]
   1e0e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e0e4:	ldr	r1, [r1]
   1e0e8:	ldrb	r1, [r1]
   1e0ec:	bl	115b4 <strchr@plt>
   1e0f0:	movw	r1, #0
   1e0f4:	cmp	r0, r1
   1e0f8:	bne	1e120 <__assert_fail@plt+0xc9ec>
   1e0fc:	ldr	r0, [sp, #40]	; 0x28
   1e100:	ldr	r1, [sp, #44]	; 0x2c
   1e104:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e108:	str	r1, [r2, #4]
   1e10c:	str	r0, [r2]
   1e110:	ldr	r0, [sp, #36]	; 0x24
   1e114:	orr	r0, r0, #2
   1e118:	str	r0, [fp, #-4]
   1e11c:	b	1e538 <__assert_fail@plt+0xce04>
   1e120:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e124:	ldr	r0, [r0]
   1e128:	ldrb	r0, [r0]
   1e12c:	sub	r0, r0, #69	; 0x45
   1e130:	cmp	r0, #47	; 0x2f
   1e134:	str	r0, [sp, #8]
   1e138:	bhi	1e2a4 <__assert_fail@plt+0xcb70>
   1e13c:	add	r0, pc, #8
   1e140:	ldr	r1, [sp, #8]
   1e144:	ldr	r0, [r0, r1, lsl #2]
   1e148:	mov	pc, r0
   1e14c:	andeq	lr, r1, ip, lsl #4
   1e150:	andeq	lr, r1, r4, lsr #5
   1e154:	andeq	lr, r1, ip, lsl #4
   1e158:	andeq	lr, r1, r4, lsr #5
   1e15c:	andeq	lr, r1, r4, lsr #5
   1e160:	andeq	lr, r1, r4, lsr #5
   1e164:	andeq	lr, r1, ip, lsl #4
   1e168:	andeq	lr, r1, r4, lsr #5
   1e16c:	andeq	lr, r1, ip, lsl #4
   1e170:	andeq	lr, r1, r4, lsr #5
   1e174:	andeq	lr, r1, r4, lsr #5
   1e178:	andeq	lr, r1, ip, lsl #4
   1e17c:	andeq	lr, r1, r4, lsr #5
   1e180:	andeq	lr, r1, r4, lsr #5
   1e184:	andeq	lr, r1, r4, lsr #5
   1e188:	andeq	lr, r1, ip, lsl #4
   1e18c:	andeq	lr, r1, r4, lsr #5
   1e190:	andeq	lr, r1, r4, lsr #5
   1e194:	andeq	lr, r1, r4, lsr #5
   1e198:	andeq	lr, r1, r4, lsr #5
   1e19c:	andeq	lr, r1, ip, lsl #4
   1e1a0:	andeq	lr, r1, ip, lsl #4
   1e1a4:	andeq	lr, r1, r4, lsr #5
   1e1a8:	andeq	lr, r1, r4, lsr #5
   1e1ac:	andeq	lr, r1, r4, lsr #5
   1e1b0:	andeq	lr, r1, r4, lsr #5
   1e1b4:	andeq	lr, r1, r4, lsr #5
   1e1b8:	andeq	lr, r1, r4, lsr #5
   1e1bc:	andeq	lr, r1, r4, lsr #5
   1e1c0:	andeq	lr, r1, r4, lsr #5
   1e1c4:	andeq	lr, r1, r4, lsr #5
   1e1c8:	andeq	lr, r1, r4, lsr #5
   1e1cc:	andeq	lr, r1, r4, lsr #5
   1e1d0:	andeq	lr, r1, r4, lsr #5
   1e1d4:	andeq	lr, r1, ip, lsl #4
   1e1d8:	andeq	lr, r1, r4, lsr #5
   1e1dc:	andeq	lr, r1, r4, lsr #5
   1e1e0:	andeq	lr, r1, r4, lsr #5
   1e1e4:	andeq	lr, r1, ip, lsl #4
   1e1e8:	andeq	lr, r1, r4, lsr #5
   1e1ec:	andeq	lr, r1, ip, lsl #4
   1e1f0:	andeq	lr, r1, r4, lsr #5
   1e1f4:	andeq	lr, r1, r4, lsr #5
   1e1f8:	andeq	lr, r1, r4, lsr #5
   1e1fc:	andeq	lr, r1, r4, lsr #5
   1e200:	andeq	lr, r1, r4, lsr #5
   1e204:	andeq	lr, r1, r4, lsr #5
   1e208:	andeq	lr, r1, ip, lsl #4
   1e20c:	ldr	r0, [fp, #8]
   1e210:	movw	r1, #48	; 0x30
   1e214:	bl	115b4 <strchr@plt>
   1e218:	movw	r1, #0
   1e21c:	cmp	r0, r1
   1e220:	beq	1e2a0 <__assert_fail@plt+0xcb6c>
   1e224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e228:	ldr	r0, [r0]
   1e22c:	ldrb	r0, [r0, #1]
   1e230:	mov	r1, r0
   1e234:	cmp	r0, #66	; 0x42
   1e238:	str	r1, [sp, #4]
   1e23c:	beq	1e288 <__assert_fail@plt+0xcb54>
   1e240:	b	1e244 <__assert_fail@plt+0xcb10>
   1e244:	ldr	r0, [sp, #4]
   1e248:	cmp	r0, #68	; 0x44
   1e24c:	beq	1e288 <__assert_fail@plt+0xcb54>
   1e250:	b	1e254 <__assert_fail@plt+0xcb20>
   1e254:	ldr	r0, [sp, #4]
   1e258:	cmp	r0, #105	; 0x69
   1e25c:	bne	1e29c <__assert_fail@plt+0xcb68>
   1e260:	b	1e264 <__assert_fail@plt+0xcb30>
   1e264:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e268:	ldr	r0, [r0]
   1e26c:	ldrb	r0, [r0, #2]
   1e270:	cmp	r0, #66	; 0x42
   1e274:	bne	1e284 <__assert_fail@plt+0xcb50>
   1e278:	ldr	r0, [sp, #20]
   1e27c:	add	r0, r0, #2
   1e280:	str	r0, [sp, #20]
   1e284:	b	1e29c <__assert_fail@plt+0xcb68>
   1e288:	movw	r0, #1000	; 0x3e8
   1e28c:	str	r0, [sp, #24]
   1e290:	ldr	r0, [sp, #20]
   1e294:	add	r0, r0, #1
   1e298:	str	r0, [sp, #20]
   1e29c:	b	1e2a0 <__assert_fail@plt+0xcb6c>
   1e2a0:	b	1e2a4 <__assert_fail@plt+0xcb70>
   1e2a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e2a8:	ldr	r0, [r0]
   1e2ac:	ldrb	r0, [r0]
   1e2b0:	sub	r0, r0, #66	; 0x42
   1e2b4:	cmp	r0, #53	; 0x35
   1e2b8:	str	r0, [sp]
   1e2bc:	bhi	1e4b0 <__assert_fail@plt+0xcd7c>
   1e2c0:	add	r0, pc, #8
   1e2c4:	ldr	r1, [sp]
   1e2c8:	ldr	r0, [r0, r1, lsl #2]
   1e2cc:	mov	pc, r0
   1e2d0:			; <UNDEFINED> instruction: 0x0001e3bc
   1e2d4:			; <UNDEFINED> instruction: 0x0001e4b0
   1e2d8:			; <UNDEFINED> instruction: 0x0001e4b0
   1e2dc:	ldrdeq	lr, [r1], -ip
   1e2e0:			; <UNDEFINED> instruction: 0x0001e4b0
   1e2e4:	strdeq	lr, [r1], -r4
   1e2e8:			; <UNDEFINED> instruction: 0x0001e4b0
   1e2ec:			; <UNDEFINED> instruction: 0x0001e4b0
   1e2f0:			; <UNDEFINED> instruction: 0x0001e4b0
   1e2f4:	andeq	lr, r1, ip, lsl #8
   1e2f8:			; <UNDEFINED> instruction: 0x0001e4b0
   1e2fc:	andeq	lr, r1, r4, lsr #8
   1e300:			; <UNDEFINED> instruction: 0x0001e4b0
   1e304:			; <UNDEFINED> instruction: 0x0001e4b0
   1e308:	andeq	lr, r1, ip, lsr r4
   1e30c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e310:			; <UNDEFINED> instruction: 0x0001e4b0
   1e314:			; <UNDEFINED> instruction: 0x0001e4b0
   1e318:	andeq	lr, r1, r4, asr r4
   1e31c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e320:			; <UNDEFINED> instruction: 0x0001e4b0
   1e324:			; <UNDEFINED> instruction: 0x0001e4b0
   1e328:			; <UNDEFINED> instruction: 0x0001e4b0
   1e32c:	andeq	lr, r1, r0, lsl #9
   1e330:	muleq	r1, r8, r4
   1e334:			; <UNDEFINED> instruction: 0x0001e4b0
   1e338:			; <UNDEFINED> instruction: 0x0001e4b0
   1e33c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e340:			; <UNDEFINED> instruction: 0x0001e4b0
   1e344:			; <UNDEFINED> instruction: 0x0001e4b0
   1e348:			; <UNDEFINED> instruction: 0x0001e4b0
   1e34c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e350:	andeq	lr, r1, r8, lsr #7
   1e354:	ldrdeq	lr, [r1], -r0
   1e358:			; <UNDEFINED> instruction: 0x0001e4b0
   1e35c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e360:			; <UNDEFINED> instruction: 0x0001e4b0
   1e364:	strdeq	lr, [r1], -r4
   1e368:			; <UNDEFINED> instruction: 0x0001e4b0
   1e36c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e370:			; <UNDEFINED> instruction: 0x0001e4b0
   1e374:	andeq	lr, r1, ip, lsl #8
   1e378:			; <UNDEFINED> instruction: 0x0001e4b0
   1e37c:	andeq	lr, r1, r4, lsr #8
   1e380:			; <UNDEFINED> instruction: 0x0001e4b0
   1e384:			; <UNDEFINED> instruction: 0x0001e4b0
   1e388:			; <UNDEFINED> instruction: 0x0001e4b0
   1e38c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e390:			; <UNDEFINED> instruction: 0x0001e4b0
   1e394:			; <UNDEFINED> instruction: 0x0001e4b0
   1e398:	andeq	lr, r1, r4, asr r4
   1e39c:			; <UNDEFINED> instruction: 0x0001e4b0
   1e3a0:			; <UNDEFINED> instruction: 0x0001e4b0
   1e3a4:	andeq	lr, r1, ip, ror #8
   1e3a8:	add	r0, sp, #40	; 0x28
   1e3ac:	movw	r1, #512	; 0x200
   1e3b0:	bl	1e544 <__assert_fail@plt+0xce10>
   1e3b4:	str	r0, [sp, #16]
   1e3b8:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e3bc:	add	r0, sp, #40	; 0x28
   1e3c0:	movw	r1, #1024	; 0x400
   1e3c4:	bl	1e544 <__assert_fail@plt+0xce10>
   1e3c8:	str	r0, [sp, #16]
   1e3cc:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e3d0:	movw	r0, #0
   1e3d4:	str	r0, [sp, #16]
   1e3d8:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e3dc:	ldr	r1, [sp, #24]
   1e3e0:	add	r0, sp, #40	; 0x28
   1e3e4:	movw	r2, #6
   1e3e8:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e3ec:	str	r0, [sp, #16]
   1e3f0:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e3f4:	ldr	r1, [sp, #24]
   1e3f8:	add	r0, sp, #40	; 0x28
   1e3fc:	movw	r2, #3
   1e400:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e404:	str	r0, [sp, #16]
   1e408:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e40c:	ldr	r1, [sp, #24]
   1e410:	add	r0, sp, #40	; 0x28
   1e414:	movw	r2, #1
   1e418:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e41c:	str	r0, [sp, #16]
   1e420:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e424:	ldr	r1, [sp, #24]
   1e428:	add	r0, sp, #40	; 0x28
   1e42c:	movw	r2, #2
   1e430:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e434:	str	r0, [sp, #16]
   1e438:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e43c:	ldr	r1, [sp, #24]
   1e440:	add	r0, sp, #40	; 0x28
   1e444:	movw	r2, #5
   1e448:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e44c:	str	r0, [sp, #16]
   1e450:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e454:	ldr	r1, [sp, #24]
   1e458:	add	r0, sp, #40	; 0x28
   1e45c:	movw	r2, #4
   1e460:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e464:	str	r0, [sp, #16]
   1e468:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e46c:	add	r0, sp, #40	; 0x28
   1e470:	movw	r1, #2
   1e474:	bl	1e544 <__assert_fail@plt+0xce10>
   1e478:	str	r0, [sp, #16]
   1e47c:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e480:	ldr	r1, [sp, #24]
   1e484:	add	r0, sp, #40	; 0x28
   1e488:	movw	r2, #8
   1e48c:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e490:	str	r0, [sp, #16]
   1e494:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e498:	ldr	r1, [sp, #24]
   1e49c:	add	r0, sp, #40	; 0x28
   1e4a0:	movw	r2, #7
   1e4a4:	bl	1fdbc <__assert_fail@plt+0xe688>
   1e4a8:	str	r0, [sp, #16]
   1e4ac:	b	1e4d4 <__assert_fail@plt+0xcda0>
   1e4b0:	ldr	r0, [sp, #40]	; 0x28
   1e4b4:	ldr	r1, [sp, #44]	; 0x2c
   1e4b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e4bc:	str	r1, [r2, #4]
   1e4c0:	str	r0, [r2]
   1e4c4:	ldr	r0, [sp, #36]	; 0x24
   1e4c8:	orr	r0, r0, #2
   1e4cc:	str	r0, [fp, #-4]
   1e4d0:	b	1e538 <__assert_fail@plt+0xce04>
   1e4d4:	ldr	r0, [sp, #16]
   1e4d8:	ldr	r1, [sp, #36]	; 0x24
   1e4dc:	orr	r0, r1, r0
   1e4e0:	str	r0, [sp, #36]	; 0x24
   1e4e4:	ldr	r0, [sp, #20]
   1e4e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e4ec:	ldr	r2, [r1]
   1e4f0:	add	r0, r2, r0
   1e4f4:	str	r0, [r1]
   1e4f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e4fc:	ldr	r0, [r0]
   1e500:	ldrsb	r0, [r0]
   1e504:	cmp	r0, #0
   1e508:	beq	1e518 <__assert_fail@plt+0xcde4>
   1e50c:	ldr	r0, [sp, #36]	; 0x24
   1e510:	orr	r0, r0, #2
   1e514:	str	r0, [sp, #36]	; 0x24
   1e518:	b	1e51c <__assert_fail@plt+0xcde8>
   1e51c:	ldr	r0, [sp, #40]	; 0x28
   1e520:	ldr	r1, [sp, #44]	; 0x2c
   1e524:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e528:	str	r1, [r2, #4]
   1e52c:	str	r0, [r2]
   1e530:	ldr	r0, [sp, #36]	; 0x24
   1e534:	str	r0, [fp, #-4]
   1e538:	ldr	r0, [fp, #-4]
   1e53c:	mov	sp, fp
   1e540:	pop	{fp, pc}
   1e544:	push	{fp, lr}
   1e548:	mov	fp, sp
   1e54c:	sub	sp, sp, #112	; 0x70
   1e550:	str	r0, [fp, #-8]
   1e554:	str	r1, [fp, #-12]
   1e558:	b	1ea08 <__assert_fail@plt+0xd2d4>
   1e55c:	b	1e7d0 <__assert_fail@plt+0xd09c>
   1e560:	ldr	r0, [fp, #-12]
   1e564:	cmp	r0, #0
   1e568:	bge	1e6c0 <__assert_fail@plt+0xcf8c>
   1e56c:	mov	r0, #1
   1e570:	cmp	r0, #0
   1e574:	bne	1e61c <__assert_fail@plt+0xcee8>
   1e578:	b	1e57c <__assert_fail@plt+0xce48>
   1e57c:	b	1e580 <__assert_fail@plt+0xce4c>
   1e580:	ldr	r0, [fp, #-8]
   1e584:	ldr	r1, [r0]
   1e588:	ldr	r0, [r0, #4]
   1e58c:	ldr	r2, [fp, #-12]
   1e590:	mov	r3, #127	; 0x7f
   1e594:	sdiv	r2, r3, r2
   1e598:	subs	r1, r1, r2
   1e59c:	sbcs	r0, r0, r2, asr #31
   1e5a0:	bcc	1e788 <__assert_fail@plt+0xd054>
   1e5a4:	b	1e7ac <__assert_fail@plt+0xd078>
   1e5a8:	b	1e5ac <__assert_fail@plt+0xce78>
   1e5ac:	ldr	r0, [pc, #4076]	; 1f5a0 <__assert_fail@plt+0xde6c>
   1e5b0:	ldr	r1, [fp, #-12]
   1e5b4:	cmp	r1, r0
   1e5b8:	blt	1e5d0 <__assert_fail@plt+0xce9c>
   1e5bc:	b	1e5dc <__assert_fail@plt+0xcea8>
   1e5c0:	ldr	r0, [fp, #-12]
   1e5c4:	movw	r1, #0
   1e5c8:	cmp	r1, r0
   1e5cc:	bge	1e5dc <__assert_fail@plt+0xcea8>
   1e5d0:	movw	r0, #0
   1e5d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e5d8:	b	1e5f4 <__assert_fail@plt+0xcec0>
   1e5dc:	ldr	r0, [fp, #-12]
   1e5e0:	movw	r1, #0
   1e5e4:	sub	r0, r1, r0
   1e5e8:	movw	r1, #127	; 0x7f
   1e5ec:	sdiv	r0, r1, r0
   1e5f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e5f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e5f8:	ldr	r1, [fp, #-8]
   1e5fc:	ldr	r2, [r1]
   1e600:	ldr	r1, [r1, #4]
   1e604:	mvn	r1, r1
   1e608:	mvn	r2, r2
   1e60c:	subs	r2, r2, r0
   1e610:	sbcs	r0, r1, r0, asr #31
   1e614:	bcs	1e788 <__assert_fail@plt+0xd054>
   1e618:	b	1e7ac <__assert_fail@plt+0xd078>
   1e61c:	b	1e620 <__assert_fail@plt+0xceec>
   1e620:	b	1e698 <__assert_fail@plt+0xcf64>
   1e624:	b	1e698 <__assert_fail@plt+0xcf64>
   1e628:	ldr	r0, [fp, #-12]
   1e62c:	cmn	r0, #1
   1e630:	bne	1e698 <__assert_fail@plt+0xcf64>
   1e634:	b	1e658 <__assert_fail@plt+0xcf24>
   1e638:	ldr	r0, [fp, #-8]
   1e63c:	ldr	r1, [r0]
   1e640:	ldr	r0, [r0, #4]
   1e644:	eor	r1, r1, #128	; 0x80
   1e648:	orr	r0, r1, r0
   1e64c:	cmp	r0, #0
   1e650:	bne	1e788 <__assert_fail@plt+0xd054>
   1e654:	b	1e7ac <__assert_fail@plt+0xd078>
   1e658:	ldr	r0, [fp, #-8]
   1e65c:	ldr	r1, [r0]
   1e660:	ldr	r0, [r0, #4]
   1e664:	orr	r0, r1, r0
   1e668:	cmp	r0, #0
   1e66c:	beq	1e7ac <__assert_fail@plt+0xd078>
   1e670:	b	1e674 <__assert_fail@plt+0xcf40>
   1e674:	ldr	r0, [fp, #-8]
   1e678:	ldr	r1, [r0]
   1e67c:	ldr	r0, [r0, #4]
   1e680:	subs	r1, r1, #1
   1e684:	sbc	r0, r0, #0
   1e688:	rsbs	r1, r1, #127	; 0x7f
   1e68c:	rscs	r0, r0, #0
   1e690:	bcc	1e788 <__assert_fail@plt+0xd054>
   1e694:	b	1e7ac <__assert_fail@plt+0xd078>
   1e698:	ldr	r0, [fp, #-12]
   1e69c:	mvn	r1, #127	; 0x7f
   1e6a0:	sdiv	r0, r1, r0
   1e6a4:	ldr	r1, [fp, #-8]
   1e6a8:	ldr	r2, [r1]
   1e6ac:	ldr	r1, [r1, #4]
   1e6b0:	subs	r2, r0, r2
   1e6b4:	rscs	r0, r1, r0, asr #31
   1e6b8:	bcc	1e788 <__assert_fail@plt+0xd054>
   1e6bc:	b	1e7ac <__assert_fail@plt+0xd078>
   1e6c0:	ldr	r0, [fp, #-12]
   1e6c4:	cmp	r0, #0
   1e6c8:	bne	1e6d0 <__assert_fail@plt+0xcf9c>
   1e6cc:	b	1e7ac <__assert_fail@plt+0xd078>
   1e6d0:	mov	r0, #1
   1e6d4:	cmp	r0, #0
   1e6d8:	bne	1e760 <__assert_fail@plt+0xd02c>
   1e6dc:	b	1e6e0 <__assert_fail@plt+0xcfac>
   1e6e0:	ldr	r0, [fp, #-8]
   1e6e4:	ldr	r1, [r0]
   1e6e8:	ldr	r0, [r0, #4]
   1e6ec:	and	r0, r1, r0
   1e6f0:	cmn	r0, #1
   1e6f4:	bne	1e734 <__assert_fail@plt+0xd000>
   1e6f8:	b	1e6fc <__assert_fail@plt+0xcfc8>
   1e6fc:	b	1e700 <__assert_fail@plt+0xcfcc>
   1e700:	ldr	r0, [fp, #-12]
   1e704:	mvn	r1, #127	; 0x7f
   1e708:	add	r0, r0, r1
   1e70c:	movw	r1, #0
   1e710:	cmp	r1, r0
   1e714:	blt	1e788 <__assert_fail@plt+0xd054>
   1e718:	b	1e7ac <__assert_fail@plt+0xd078>
   1e71c:	ldr	r0, [fp, #-12]
   1e720:	sub	r0, r0, #1
   1e724:	movw	r1, #127	; 0x7f
   1e728:	cmp	r1, r0
   1e72c:	blt	1e788 <__assert_fail@plt+0xd054>
   1e730:	b	1e7ac <__assert_fail@plt+0xd078>
   1e734:	ldr	r0, [fp, #-8]
   1e738:	ldr	r2, [r0]
   1e73c:	ldr	r3, [r0, #4]
   1e740:	mvn	r0, #127	; 0x7f
   1e744:	mvn	r1, #0
   1e748:	bl	22540 <__assert_fail@plt+0x10e0c>
   1e74c:	ldr	r2, [fp, #-12]
   1e750:	subs	r0, r0, r2
   1e754:	sbcs	r1, r1, r2, asr #31
   1e758:	bcc	1e788 <__assert_fail@plt+0xd054>
   1e75c:	b	1e7ac <__assert_fail@plt+0xd078>
   1e760:	ldr	r0, [fp, #-12]
   1e764:	mov	r1, #127	; 0x7f
   1e768:	sdiv	r0, r1, r0
   1e76c:	ldr	r1, [fp, #-8]
   1e770:	ldr	r2, [r1]
   1e774:	ldr	r1, [r1, #4]
   1e778:	subs	r2, r0, r2
   1e77c:	rscs	r0, r1, r0, asr #31
   1e780:	bcs	1e7ac <__assert_fail@plt+0xd078>
   1e784:	b	1e788 <__assert_fail@plt+0xd054>
   1e788:	ldr	r0, [fp, #-8]
   1e78c:	ldr	r0, [r0]
   1e790:	ldr	r1, [fp, #-12]
   1e794:	mul	r0, r0, r1
   1e798:	sxtb	r0, r0
   1e79c:	asr	r1, r0, #31
   1e7a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7a4:	str	r1, [fp, #-20]	; 0xffffffec
   1e7a8:	b	1fd70 <__assert_fail@plt+0xe63c>
   1e7ac:	ldr	r0, [fp, #-8]
   1e7b0:	ldr	r0, [r0]
   1e7b4:	ldr	r1, [fp, #-12]
   1e7b8:	mul	r0, r0, r1
   1e7bc:	sxtb	r0, r0
   1e7c0:	asr	r1, r0, #31
   1e7c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7c8:	str	r1, [fp, #-20]	; 0xffffffec
   1e7cc:	b	1fd8c <__assert_fail@plt+0xe658>
   1e7d0:	ldr	r0, [fp, #-12]
   1e7d4:	cmp	r0, #0
   1e7d8:	bge	1e90c <__assert_fail@plt+0xd1d8>
   1e7dc:	mov	r0, #1
   1e7e0:	cmp	r0, #0
   1e7e4:	bne	1e88c <__assert_fail@plt+0xd158>
   1e7e8:	b	1e7ec <__assert_fail@plt+0xd0b8>
   1e7ec:	b	1e7f0 <__assert_fail@plt+0xd0bc>
   1e7f0:	ldr	r0, [fp, #-8]
   1e7f4:	ldr	r1, [r0]
   1e7f8:	ldr	r0, [r0, #4]
   1e7fc:	ldr	r2, [fp, #-12]
   1e800:	mov	r3, #255	; 0xff
   1e804:	sdiv	r2, r3, r2
   1e808:	subs	r1, r1, r2
   1e80c:	sbcs	r0, r0, r2, asr #31
   1e810:	bcc	1e9c0 <__assert_fail@plt+0xd28c>
   1e814:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e818:	b	1e81c <__assert_fail@plt+0xd0e8>
   1e81c:	ldr	r0, [pc, #3452]	; 1f5a0 <__assert_fail@plt+0xde6c>
   1e820:	ldr	r1, [fp, #-12]
   1e824:	cmp	r1, r0
   1e828:	blt	1e840 <__assert_fail@plt+0xd10c>
   1e82c:	b	1e84c <__assert_fail@plt+0xd118>
   1e830:	ldr	r0, [fp, #-12]
   1e834:	movw	r1, #0
   1e838:	cmp	r1, r0
   1e83c:	bge	1e84c <__assert_fail@plt+0xd118>
   1e840:	movw	r0, #0
   1e844:	str	r0, [fp, #-32]	; 0xffffffe0
   1e848:	b	1e864 <__assert_fail@plt+0xd130>
   1e84c:	ldr	r0, [fp, #-12]
   1e850:	movw	r1, #0
   1e854:	sub	r0, r1, r0
   1e858:	movw	r1, #255	; 0xff
   1e85c:	sdiv	r0, r1, r0
   1e860:	str	r0, [fp, #-32]	; 0xffffffe0
   1e864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e868:	ldr	r1, [fp, #-8]
   1e86c:	ldr	r2, [r1]
   1e870:	ldr	r1, [r1, #4]
   1e874:	mvn	r1, r1
   1e878:	mvn	r2, r2
   1e87c:	subs	r2, r2, r0
   1e880:	sbcs	r0, r1, r0, asr #31
   1e884:	bcs	1e9c0 <__assert_fail@plt+0xd28c>
   1e888:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e88c:	b	1e890 <__assert_fail@plt+0xd15c>
   1e890:	b	1e8f0 <__assert_fail@plt+0xd1bc>
   1e894:	b	1e8f0 <__assert_fail@plt+0xd1bc>
   1e898:	ldr	r0, [fp, #-12]
   1e89c:	cmn	r0, #1
   1e8a0:	bne	1e8f0 <__assert_fail@plt+0xd1bc>
   1e8a4:	b	1e8c4 <__assert_fail@plt+0xd190>
   1e8a8:	ldr	r0, [fp, #-8]
   1e8ac:	ldr	r1, [r0]
   1e8b0:	ldr	r0, [r0, #4]
   1e8b4:	orr	r0, r1, r0
   1e8b8:	cmp	r0, #0
   1e8bc:	bne	1e9c0 <__assert_fail@plt+0xd28c>
   1e8c0:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e8c4:	ldr	r0, [fp, #-8]
   1e8c8:	ldr	r1, [r0]
   1e8cc:	ldr	r0, [r0, #4]
   1e8d0:	orr	r0, r1, r0
   1e8d4:	cmp	r0, #0
   1e8d8:	beq	1e9e4 <__assert_fail@plt+0xd2b0>
   1e8dc:	b	1e8e0 <__assert_fail@plt+0xd1ac>
   1e8e0:	mov	r0, #0
   1e8e4:	cmp	r0, #0
   1e8e8:	bne	1e9c0 <__assert_fail@plt+0xd28c>
   1e8ec:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e8f0:	ldr	r0, [fp, #-8]
   1e8f4:	ldr	r1, [r0]
   1e8f8:	ldr	r0, [r0, #4]
   1e8fc:	orr	r0, r1, r0
   1e900:	cmp	r0, #0
   1e904:	bne	1e9c0 <__assert_fail@plt+0xd28c>
   1e908:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e90c:	ldr	r0, [fp, #-12]
   1e910:	cmp	r0, #0
   1e914:	bne	1e91c <__assert_fail@plt+0xd1e8>
   1e918:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e91c:	mov	r0, #1
   1e920:	cmp	r0, #0
   1e924:	bne	1e998 <__assert_fail@plt+0xd264>
   1e928:	b	1e92c <__assert_fail@plt+0xd1f8>
   1e92c:	b	1e934 <__assert_fail@plt+0xd200>
   1e930:	b	1e938 <__assert_fail@plt+0xd204>
   1e934:	b	1e988 <__assert_fail@plt+0xd254>
   1e938:	ldr	r0, [fp, #-8]
   1e93c:	ldr	r1, [r0]
   1e940:	ldr	r0, [r0, #4]
   1e944:	and	r0, r1, r0
   1e948:	cmn	r0, #1
   1e94c:	bne	1e988 <__assert_fail@plt+0xd254>
   1e950:	b	1e954 <__assert_fail@plt+0xd220>
   1e954:	b	1e958 <__assert_fail@plt+0xd224>
   1e958:	ldr	r0, [fp, #-12]
   1e95c:	add	r0, r0, #0
   1e960:	movw	r1, #0
   1e964:	cmp	r1, r0
   1e968:	blt	1e9c0 <__assert_fail@plt+0xd28c>
   1e96c:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e970:	ldr	r0, [fp, #-12]
   1e974:	sub	r0, r0, #1
   1e978:	mvn	r1, #0
   1e97c:	cmp	r1, r0
   1e980:	blt	1e9c0 <__assert_fail@plt+0xd28c>
   1e984:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e988:	ldr	r0, [fp, #-12]
   1e98c:	cmp	r0, #0
   1e990:	bne	1e9c0 <__assert_fail@plt+0xd28c>
   1e994:	b	1e9e4 <__assert_fail@plt+0xd2b0>
   1e998:	ldr	r0, [fp, #-12]
   1e99c:	mov	r1, #255	; 0xff
   1e9a0:	sdiv	r0, r1, r0
   1e9a4:	ldr	r1, [fp, #-8]
   1e9a8:	ldr	r2, [r1]
   1e9ac:	ldr	r1, [r1, #4]
   1e9b0:	subs	r2, r0, r2
   1e9b4:	rscs	r0, r1, r0, asr #31
   1e9b8:	bcs	1e9e4 <__assert_fail@plt+0xd2b0>
   1e9bc:	b	1e9c0 <__assert_fail@plt+0xd28c>
   1e9c0:	ldr	r0, [fp, #-8]
   1e9c4:	ldr	r0, [r0]
   1e9c8:	ldr	r1, [fp, #-12]
   1e9cc:	mul	r0, r0, r1
   1e9d0:	uxtb	r0, r0
   1e9d4:	mov	r1, #0
   1e9d8:	str	r1, [fp, #-20]	; 0xffffffec
   1e9dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1e9e0:	b	1fd70 <__assert_fail@plt+0xe63c>
   1e9e4:	ldr	r0, [fp, #-8]
   1e9e8:	ldr	r0, [r0]
   1e9ec:	ldr	r1, [fp, #-12]
   1e9f0:	mul	r0, r0, r1
   1e9f4:	uxtb	r0, r0
   1e9f8:	mov	r1, #0
   1e9fc:	str	r1, [fp, #-20]	; 0xffffffec
   1ea00:	str	r0, [fp, #-24]	; 0xffffffe8
   1ea04:	b	1fd8c <__assert_fail@plt+0xe658>
   1ea08:	b	1eec8 <__assert_fail@plt+0xd794>
   1ea0c:	b	1ec90 <__assert_fail@plt+0xd55c>
   1ea10:	ldr	r0, [fp, #-12]
   1ea14:	cmp	r0, #0
   1ea18:	bge	1eb7c <__assert_fail@plt+0xd448>
   1ea1c:	mov	r0, #1
   1ea20:	cmp	r0, #0
   1ea24:	bne	1eacc <__assert_fail@plt+0xd398>
   1ea28:	b	1ea2c <__assert_fail@plt+0xd2f8>
   1ea2c:	b	1ea30 <__assert_fail@plt+0xd2fc>
   1ea30:	ldr	r0, [fp, #-8]
   1ea34:	ldr	r1, [r0]
   1ea38:	ldr	r0, [r0, #4]
   1ea3c:	ldr	r2, [fp, #-12]
   1ea40:	movw	r3, #32767	; 0x7fff
   1ea44:	sdiv	r2, r3, r2
   1ea48:	subs	r1, r1, r2
   1ea4c:	sbcs	r0, r0, r2, asr #31
   1ea50:	bcc	1ec48 <__assert_fail@plt+0xd514>
   1ea54:	b	1ec6c <__assert_fail@plt+0xd538>
   1ea58:	b	1ea5c <__assert_fail@plt+0xd328>
   1ea5c:	ldr	r0, [pc, #2876]	; 1f5a0 <__assert_fail@plt+0xde6c>
   1ea60:	ldr	r1, [fp, #-12]
   1ea64:	cmp	r1, r0
   1ea68:	blt	1ea80 <__assert_fail@plt+0xd34c>
   1ea6c:	b	1ea8c <__assert_fail@plt+0xd358>
   1ea70:	ldr	r0, [fp, #-12]
   1ea74:	movw	r1, #0
   1ea78:	cmp	r1, r0
   1ea7c:	bge	1ea8c <__assert_fail@plt+0xd358>
   1ea80:	movw	r0, #0
   1ea84:	str	r0, [fp, #-36]	; 0xffffffdc
   1ea88:	b	1eaa4 <__assert_fail@plt+0xd370>
   1ea8c:	ldr	r0, [fp, #-12]
   1ea90:	movw	r1, #0
   1ea94:	sub	r0, r1, r0
   1ea98:	movw	r1, #32767	; 0x7fff
   1ea9c:	sdiv	r0, r1, r0
   1eaa0:	str	r0, [fp, #-36]	; 0xffffffdc
   1eaa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eaa8:	ldr	r1, [fp, #-8]
   1eaac:	ldr	r2, [r1]
   1eab0:	ldr	r1, [r1, #4]
   1eab4:	mvn	r1, r1
   1eab8:	mvn	r2, r2
   1eabc:	subs	r2, r2, r0
   1eac0:	sbcs	r0, r1, r0, asr #31
   1eac4:	bcs	1ec48 <__assert_fail@plt+0xd514>
   1eac8:	b	1ec6c <__assert_fail@plt+0xd538>
   1eacc:	b	1ead0 <__assert_fail@plt+0xd39c>
   1ead0:	b	1eb50 <__assert_fail@plt+0xd41c>
   1ead4:	b	1eb50 <__assert_fail@plt+0xd41c>
   1ead8:	ldr	r0, [fp, #-12]
   1eadc:	cmn	r0, #1
   1eae0:	bne	1eb50 <__assert_fail@plt+0xd41c>
   1eae4:	b	1eb08 <__assert_fail@plt+0xd3d4>
   1eae8:	ldr	r0, [fp, #-8]
   1eaec:	ldr	r1, [r0]
   1eaf0:	ldr	r0, [r0, #4]
   1eaf4:	eor	r1, r1, #32768	; 0x8000
   1eaf8:	orr	r0, r1, r0
   1eafc:	cmp	r0, #0
   1eb00:	bne	1ec48 <__assert_fail@plt+0xd514>
   1eb04:	b	1ec6c <__assert_fail@plt+0xd538>
   1eb08:	ldr	r0, [fp, #-8]
   1eb0c:	ldr	r1, [r0]
   1eb10:	ldr	r0, [r0, #4]
   1eb14:	orr	r0, r1, r0
   1eb18:	cmp	r0, #0
   1eb1c:	beq	1ec6c <__assert_fail@plt+0xd538>
   1eb20:	b	1eb24 <__assert_fail@plt+0xd3f0>
   1eb24:	ldr	r0, [fp, #-8]
   1eb28:	ldr	r1, [r0]
   1eb2c:	ldr	r0, [r0, #4]
   1eb30:	subs	r1, r1, #1
   1eb34:	sbc	r0, r0, #0
   1eb38:	lsr	r1, r1, #15
   1eb3c:	orr	r1, r1, r0, lsl #17
   1eb40:	orr	r0, r1, r0, lsr #15
   1eb44:	cmp	r0, #0
   1eb48:	bne	1ec48 <__assert_fail@plt+0xd514>
   1eb4c:	b	1ec6c <__assert_fail@plt+0xd538>
   1eb50:	ldr	r0, [fp, #-12]
   1eb54:	movw	r1, #32768	; 0x8000
   1eb58:	movt	r1, #65535	; 0xffff
   1eb5c:	sdiv	r0, r1, r0
   1eb60:	ldr	r1, [fp, #-8]
   1eb64:	ldr	r2, [r1]
   1eb68:	ldr	r1, [r1, #4]
   1eb6c:	subs	r2, r0, r2
   1eb70:	rscs	r0, r1, r0, asr #31
   1eb74:	bcc	1ec48 <__assert_fail@plt+0xd514>
   1eb78:	b	1ec6c <__assert_fail@plt+0xd538>
   1eb7c:	ldr	r0, [fp, #-12]
   1eb80:	cmp	r0, #0
   1eb84:	bne	1eb8c <__assert_fail@plt+0xd458>
   1eb88:	b	1ec6c <__assert_fail@plt+0xd538>
   1eb8c:	mov	r0, #1
   1eb90:	cmp	r0, #0
   1eb94:	bne	1ec20 <__assert_fail@plt+0xd4ec>
   1eb98:	b	1eb9c <__assert_fail@plt+0xd468>
   1eb9c:	ldr	r0, [fp, #-8]
   1eba0:	ldr	r1, [r0]
   1eba4:	ldr	r0, [r0, #4]
   1eba8:	and	r0, r1, r0
   1ebac:	cmn	r0, #1
   1ebb0:	bne	1ebf0 <__assert_fail@plt+0xd4bc>
   1ebb4:	b	1ebb8 <__assert_fail@plt+0xd484>
   1ebb8:	b	1ebbc <__assert_fail@plt+0xd488>
   1ebbc:	ldr	r0, [pc, #4020]	; 1fb78 <__assert_fail@plt+0xe444>
   1ebc0:	ldr	r1, [fp, #-12]
   1ebc4:	add	r0, r1, r0
   1ebc8:	movw	r1, #0
   1ebcc:	cmp	r1, r0
   1ebd0:	blt	1ec48 <__assert_fail@plt+0xd514>
   1ebd4:	b	1ec6c <__assert_fail@plt+0xd538>
   1ebd8:	ldr	r0, [fp, #-12]
   1ebdc:	sub	r0, r0, #1
   1ebe0:	movw	r1, #32767	; 0x7fff
   1ebe4:	cmp	r1, r0
   1ebe8:	blt	1ec48 <__assert_fail@plt+0xd514>
   1ebec:	b	1ec6c <__assert_fail@plt+0xd538>
   1ebf0:	ldr	r0, [fp, #-8]
   1ebf4:	ldr	r2, [r0]
   1ebf8:	ldr	r3, [r0, #4]
   1ebfc:	movw	r0, #32768	; 0x8000
   1ec00:	movt	r0, #65535	; 0xffff
   1ec04:	mvn	r1, #0
   1ec08:	bl	22540 <__assert_fail@plt+0x10e0c>
   1ec0c:	ldr	r2, [fp, #-12]
   1ec10:	subs	r0, r0, r2
   1ec14:	sbcs	r1, r1, r2, asr #31
   1ec18:	bcc	1ec48 <__assert_fail@plt+0xd514>
   1ec1c:	b	1ec6c <__assert_fail@plt+0xd538>
   1ec20:	ldr	r0, [fp, #-12]
   1ec24:	movw	r1, #32767	; 0x7fff
   1ec28:	sdiv	r0, r1, r0
   1ec2c:	ldr	r1, [fp, #-8]
   1ec30:	ldr	r2, [r1]
   1ec34:	ldr	r1, [r1, #4]
   1ec38:	subs	r2, r0, r2
   1ec3c:	rscs	r0, r1, r0, asr #31
   1ec40:	bcs	1ec6c <__assert_fail@plt+0xd538>
   1ec44:	b	1ec48 <__assert_fail@plt+0xd514>
   1ec48:	ldr	r0, [fp, #-8]
   1ec4c:	ldr	r0, [r0]
   1ec50:	ldr	r1, [fp, #-12]
   1ec54:	mul	r0, r0, r1
   1ec58:	sxth	r0, r0
   1ec5c:	asr	r1, r0, #31
   1ec60:	str	r0, [fp, #-24]	; 0xffffffe8
   1ec64:	str	r1, [fp, #-20]	; 0xffffffec
   1ec68:	b	1fd70 <__assert_fail@plt+0xe63c>
   1ec6c:	ldr	r0, [fp, #-8]
   1ec70:	ldr	r0, [r0]
   1ec74:	ldr	r1, [fp, #-12]
   1ec78:	mul	r0, r0, r1
   1ec7c:	sxth	r0, r0
   1ec80:	asr	r1, r0, #31
   1ec84:	str	r0, [fp, #-24]	; 0xffffffe8
   1ec88:	str	r1, [fp, #-20]	; 0xffffffec
   1ec8c:	b	1fd8c <__assert_fail@plt+0xe658>
   1ec90:	ldr	r0, [fp, #-12]
   1ec94:	cmp	r0, #0
   1ec98:	bge	1edcc <__assert_fail@plt+0xd698>
   1ec9c:	mov	r0, #1
   1eca0:	cmp	r0, #0
   1eca4:	bne	1ed4c <__assert_fail@plt+0xd618>
   1eca8:	b	1ecac <__assert_fail@plt+0xd578>
   1ecac:	b	1ecb0 <__assert_fail@plt+0xd57c>
   1ecb0:	ldr	r0, [fp, #-8]
   1ecb4:	ldr	r1, [r0]
   1ecb8:	ldr	r0, [r0, #4]
   1ecbc:	ldr	r2, [fp, #-12]
   1ecc0:	movw	r3, #65535	; 0xffff
   1ecc4:	sdiv	r2, r3, r2
   1ecc8:	subs	r1, r1, r2
   1eccc:	sbcs	r0, r0, r2, asr #31
   1ecd0:	bcc	1ee80 <__assert_fail@plt+0xd74c>
   1ecd4:	b	1eea4 <__assert_fail@plt+0xd770>
   1ecd8:	b	1ecdc <__assert_fail@plt+0xd5a8>
   1ecdc:	ldr	r0, [pc, #2236]	; 1f5a0 <__assert_fail@plt+0xde6c>
   1ece0:	ldr	r1, [fp, #-12]
   1ece4:	cmp	r1, r0
   1ece8:	blt	1ed00 <__assert_fail@plt+0xd5cc>
   1ecec:	b	1ed0c <__assert_fail@plt+0xd5d8>
   1ecf0:	ldr	r0, [fp, #-12]
   1ecf4:	movw	r1, #0
   1ecf8:	cmp	r1, r0
   1ecfc:	bge	1ed0c <__assert_fail@plt+0xd5d8>
   1ed00:	movw	r0, #0
   1ed04:	str	r0, [fp, #-40]	; 0xffffffd8
   1ed08:	b	1ed24 <__assert_fail@plt+0xd5f0>
   1ed0c:	ldr	r0, [fp, #-12]
   1ed10:	movw	r1, #0
   1ed14:	sub	r0, r1, r0
   1ed18:	movw	r1, #65535	; 0xffff
   1ed1c:	sdiv	r0, r1, r0
   1ed20:	str	r0, [fp, #-40]	; 0xffffffd8
   1ed24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ed28:	ldr	r1, [fp, #-8]
   1ed2c:	ldr	r2, [r1]
   1ed30:	ldr	r1, [r1, #4]
   1ed34:	mvn	r1, r1
   1ed38:	mvn	r2, r2
   1ed3c:	subs	r2, r2, r0
   1ed40:	sbcs	r0, r1, r0, asr #31
   1ed44:	bcs	1ee80 <__assert_fail@plt+0xd74c>
   1ed48:	b	1eea4 <__assert_fail@plt+0xd770>
   1ed4c:	b	1ed50 <__assert_fail@plt+0xd61c>
   1ed50:	b	1edb0 <__assert_fail@plt+0xd67c>
   1ed54:	b	1edb0 <__assert_fail@plt+0xd67c>
   1ed58:	ldr	r0, [fp, #-12]
   1ed5c:	cmn	r0, #1
   1ed60:	bne	1edb0 <__assert_fail@plt+0xd67c>
   1ed64:	b	1ed84 <__assert_fail@plt+0xd650>
   1ed68:	ldr	r0, [fp, #-8]
   1ed6c:	ldr	r1, [r0]
   1ed70:	ldr	r0, [r0, #4]
   1ed74:	orr	r0, r1, r0
   1ed78:	cmp	r0, #0
   1ed7c:	bne	1ee80 <__assert_fail@plt+0xd74c>
   1ed80:	b	1eea4 <__assert_fail@plt+0xd770>
   1ed84:	ldr	r0, [fp, #-8]
   1ed88:	ldr	r1, [r0]
   1ed8c:	ldr	r0, [r0, #4]
   1ed90:	orr	r0, r1, r0
   1ed94:	cmp	r0, #0
   1ed98:	beq	1eea4 <__assert_fail@plt+0xd770>
   1ed9c:	b	1eda0 <__assert_fail@plt+0xd66c>
   1eda0:	mov	r0, #0
   1eda4:	cmp	r0, #0
   1eda8:	bne	1ee80 <__assert_fail@plt+0xd74c>
   1edac:	b	1eea4 <__assert_fail@plt+0xd770>
   1edb0:	ldr	r0, [fp, #-8]
   1edb4:	ldr	r1, [r0]
   1edb8:	ldr	r0, [r0, #4]
   1edbc:	orr	r0, r1, r0
   1edc0:	cmp	r0, #0
   1edc4:	bne	1ee80 <__assert_fail@plt+0xd74c>
   1edc8:	b	1eea4 <__assert_fail@plt+0xd770>
   1edcc:	ldr	r0, [fp, #-12]
   1edd0:	cmp	r0, #0
   1edd4:	bne	1eddc <__assert_fail@plt+0xd6a8>
   1edd8:	b	1eea4 <__assert_fail@plt+0xd770>
   1eddc:	mov	r0, #1
   1ede0:	cmp	r0, #0
   1ede4:	bne	1ee58 <__assert_fail@plt+0xd724>
   1ede8:	b	1edec <__assert_fail@plt+0xd6b8>
   1edec:	b	1edf4 <__assert_fail@plt+0xd6c0>
   1edf0:	b	1edf8 <__assert_fail@plt+0xd6c4>
   1edf4:	b	1ee48 <__assert_fail@plt+0xd714>
   1edf8:	ldr	r0, [fp, #-8]
   1edfc:	ldr	r1, [r0]
   1ee00:	ldr	r0, [r0, #4]
   1ee04:	and	r0, r1, r0
   1ee08:	cmn	r0, #1
   1ee0c:	bne	1ee48 <__assert_fail@plt+0xd714>
   1ee10:	b	1ee14 <__assert_fail@plt+0xd6e0>
   1ee14:	b	1ee18 <__assert_fail@plt+0xd6e4>
   1ee18:	ldr	r0, [fp, #-12]
   1ee1c:	add	r0, r0, #0
   1ee20:	movw	r1, #0
   1ee24:	cmp	r1, r0
   1ee28:	blt	1ee80 <__assert_fail@plt+0xd74c>
   1ee2c:	b	1eea4 <__assert_fail@plt+0xd770>
   1ee30:	ldr	r0, [fp, #-12]
   1ee34:	sub	r0, r0, #1
   1ee38:	mvn	r1, #0
   1ee3c:	cmp	r1, r0
   1ee40:	blt	1ee80 <__assert_fail@plt+0xd74c>
   1ee44:	b	1eea4 <__assert_fail@plt+0xd770>
   1ee48:	ldr	r0, [fp, #-12]
   1ee4c:	cmp	r0, #0
   1ee50:	bne	1ee80 <__assert_fail@plt+0xd74c>
   1ee54:	b	1eea4 <__assert_fail@plt+0xd770>
   1ee58:	ldr	r0, [fp, #-12]
   1ee5c:	movw	r1, #65535	; 0xffff
   1ee60:	sdiv	r0, r1, r0
   1ee64:	ldr	r1, [fp, #-8]
   1ee68:	ldr	r2, [r1]
   1ee6c:	ldr	r1, [r1, #4]
   1ee70:	subs	r2, r0, r2
   1ee74:	rscs	r0, r1, r0, asr #31
   1ee78:	bcs	1eea4 <__assert_fail@plt+0xd770>
   1ee7c:	b	1ee80 <__assert_fail@plt+0xd74c>
   1ee80:	ldr	r0, [fp, #-8]
   1ee84:	ldr	r0, [r0]
   1ee88:	ldr	r1, [fp, #-12]
   1ee8c:	mul	r0, r0, r1
   1ee90:	uxth	r0, r0
   1ee94:	mov	r1, #0
   1ee98:	str	r1, [fp, #-20]	; 0xffffffec
   1ee9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1eea0:	b	1fd70 <__assert_fail@plt+0xe63c>
   1eea4:	ldr	r0, [fp, #-8]
   1eea8:	ldr	r0, [r0]
   1eeac:	ldr	r1, [fp, #-12]
   1eeb0:	mul	r0, r0, r1
   1eeb4:	uxth	r0, r0
   1eeb8:	mov	r1, #0
   1eebc:	str	r1, [fp, #-20]	; 0xffffffec
   1eec0:	str	r0, [fp, #-24]	; 0xffffffe8
   1eec4:	b	1fd8c <__assert_fail@plt+0xe658>
   1eec8:	b	1f35c <__assert_fail@plt+0xdc28>
   1eecc:	b	1f12c <__assert_fail@plt+0xd9f8>
   1eed0:	ldr	r0, [fp, #-12]
   1eed4:	cmp	r0, #0
   1eed8:	bge	1f028 <__assert_fail@plt+0xd8f4>
   1eedc:	mov	r0, #1
   1eee0:	cmp	r0, #0
   1eee4:	bne	1ef8c <__assert_fail@plt+0xd858>
   1eee8:	b	1eeec <__assert_fail@plt+0xd7b8>
   1eeec:	b	1eef0 <__assert_fail@plt+0xd7bc>
   1eef0:	ldr	r0, [fp, #-8]
   1eef4:	ldr	r1, [r0]
   1eef8:	ldr	r0, [r0, #4]
   1eefc:	ldr	r2, [fp, #-12]
   1ef00:	mvn	r3, #-2147483648	; 0x80000000
   1ef04:	sdiv	r2, r3, r2
   1ef08:	subs	r1, r1, r2
   1ef0c:	sbcs	r0, r0, r2, asr #31
   1ef10:	bcc	1f0ec <__assert_fail@plt+0xd9b8>
   1ef14:	b	1f10c <__assert_fail@plt+0xd9d8>
   1ef18:	b	1ef1c <__assert_fail@plt+0xd7e8>
   1ef1c:	ldr	r0, [pc, #3728]	; 1fdb4 <__assert_fail@plt+0xe680>
   1ef20:	ldr	r1, [fp, #-12]
   1ef24:	cmp	r1, r0
   1ef28:	blt	1ef40 <__assert_fail@plt+0xd80c>
   1ef2c:	b	1ef4c <__assert_fail@plt+0xd818>
   1ef30:	ldr	r0, [fp, #-12]
   1ef34:	movw	r1, #0
   1ef38:	cmp	r1, r0
   1ef3c:	bge	1ef4c <__assert_fail@plt+0xd818>
   1ef40:	movw	r0, #0
   1ef44:	str	r0, [fp, #-44]	; 0xffffffd4
   1ef48:	b	1ef64 <__assert_fail@plt+0xd830>
   1ef4c:	ldr	r0, [pc, #3684]	; 1fdb8 <__assert_fail@plt+0xe684>
   1ef50:	ldr	r1, [fp, #-12]
   1ef54:	movw	r2, #0
   1ef58:	sub	r1, r2, r1
   1ef5c:	sdiv	r0, r0, r1
   1ef60:	str	r0, [fp, #-44]	; 0xffffffd4
   1ef64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ef68:	ldr	r1, [fp, #-8]
   1ef6c:	ldr	r2, [r1]
   1ef70:	ldr	r1, [r1, #4]
   1ef74:	mvn	r1, r1
   1ef78:	mvn	r2, r2
   1ef7c:	subs	r2, r2, r0
   1ef80:	sbcs	r0, r1, r0, asr #31
   1ef84:	bcs	1f0ec <__assert_fail@plt+0xd9b8>
   1ef88:	b	1f10c <__assert_fail@plt+0xd9d8>
   1ef8c:	ldr	r0, [fp, #-12]
   1ef90:	cmn	r0, #1
   1ef94:	bne	1f000 <__assert_fail@plt+0xd8cc>
   1ef98:	b	1efbc <__assert_fail@plt+0xd888>
   1ef9c:	ldr	r0, [fp, #-8]
   1efa0:	ldr	r1, [r0]
   1efa4:	ldr	r0, [r0, #4]
   1efa8:	eor	r1, r1, #-2147483648	; 0x80000000
   1efac:	orr	r0, r1, r0
   1efb0:	cmp	r0, #0
   1efb4:	bne	1f0ec <__assert_fail@plt+0xd9b8>
   1efb8:	b	1f10c <__assert_fail@plt+0xd9d8>
   1efbc:	ldr	r0, [fp, #-8]
   1efc0:	ldr	r1, [r0]
   1efc4:	ldr	r0, [r0, #4]
   1efc8:	orr	r0, r1, r0
   1efcc:	cmp	r0, #0
   1efd0:	beq	1f10c <__assert_fail@plt+0xd9d8>
   1efd4:	b	1efd8 <__assert_fail@plt+0xd8a4>
   1efd8:	ldr	r0, [fp, #-8]
   1efdc:	ldr	r1, [r0]
   1efe0:	ldr	r0, [r0, #4]
   1efe4:	subs	r1, r1, #1
   1efe8:	sbc	r0, r0, #0
   1efec:	mvn	r2, #-2147483648	; 0x80000000
   1eff0:	subs	r1, r2, r1
   1eff4:	rscs	r0, r0, #0
   1eff8:	bcc	1f0ec <__assert_fail@plt+0xd9b8>
   1effc:	b	1f10c <__assert_fail@plt+0xd9d8>
   1f000:	ldr	r0, [fp, #-12]
   1f004:	mov	r1, #-2147483648	; 0x80000000
   1f008:	sdiv	r0, r1, r0
   1f00c:	ldr	r1, [fp, #-8]
   1f010:	ldr	r2, [r1]
   1f014:	ldr	r1, [r1, #4]
   1f018:	subs	r2, r0, r2
   1f01c:	rscs	r0, r1, r0, asr #31
   1f020:	bcc	1f0ec <__assert_fail@plt+0xd9b8>
   1f024:	b	1f10c <__assert_fail@plt+0xd9d8>
   1f028:	ldr	r0, [fp, #-12]
   1f02c:	cmp	r0, #0
   1f030:	bne	1f038 <__assert_fail@plt+0xd904>
   1f034:	b	1f10c <__assert_fail@plt+0xd9d8>
   1f038:	mov	r0, #1
   1f03c:	cmp	r0, #0
   1f040:	bne	1f0c4 <__assert_fail@plt+0xd990>
   1f044:	b	1f048 <__assert_fail@plt+0xd914>
   1f048:	ldr	r0, [fp, #-8]
   1f04c:	ldr	r1, [r0]
   1f050:	ldr	r0, [r0, #4]
   1f054:	and	r0, r1, r0
   1f058:	cmn	r0, #1
   1f05c:	bne	1f098 <__assert_fail@plt+0xd964>
   1f060:	b	1f064 <__assert_fail@plt+0xd930>
   1f064:	b	1f068 <__assert_fail@plt+0xd934>
   1f068:	ldr	r0, [fp, #-12]
   1f06c:	add	r0, r0, #-2147483648	; 0x80000000
   1f070:	movw	r1, #0
   1f074:	cmp	r1, r0
   1f078:	blt	1f0ec <__assert_fail@plt+0xd9b8>
   1f07c:	b	1f10c <__assert_fail@plt+0xd9d8>
   1f080:	ldr	r0, [pc, #3376]	; 1fdb8 <__assert_fail@plt+0xe684>
   1f084:	ldr	r1, [fp, #-12]
   1f088:	sub	r1, r1, #1
   1f08c:	cmp	r0, r1
   1f090:	blt	1f0ec <__assert_fail@plt+0xd9b8>
   1f094:	b	1f10c <__assert_fail@plt+0xd9d8>
   1f098:	ldr	r0, [fp, #-8]
   1f09c:	ldr	r2, [r0]
   1f0a0:	ldr	r3, [r0, #4]
   1f0a4:	mov	r0, #-2147483648	; 0x80000000
   1f0a8:	mvn	r1, #0
   1f0ac:	bl	22540 <__assert_fail@plt+0x10e0c>
   1f0b0:	ldr	r2, [fp, #-12]
   1f0b4:	subs	r0, r0, r2
   1f0b8:	sbcs	r1, r1, r2, asr #31
   1f0bc:	bcc	1f0ec <__assert_fail@plt+0xd9b8>
   1f0c0:	b	1f10c <__assert_fail@plt+0xd9d8>
   1f0c4:	ldr	r0, [fp, #-12]
   1f0c8:	mvn	r1, #-2147483648	; 0x80000000
   1f0cc:	sdiv	r0, r1, r0
   1f0d0:	ldr	r1, [fp, #-8]
   1f0d4:	ldr	r2, [r1]
   1f0d8:	ldr	r1, [r1, #4]
   1f0dc:	subs	r2, r0, r2
   1f0e0:	rscs	r0, r1, r0, asr #31
   1f0e4:	bcs	1f10c <__assert_fail@plt+0xd9d8>
   1f0e8:	b	1f0ec <__assert_fail@plt+0xd9b8>
   1f0ec:	ldr	r0, [fp, #-8]
   1f0f0:	ldr	r0, [r0]
   1f0f4:	ldr	r1, [fp, #-12]
   1f0f8:	mul	r0, r0, r1
   1f0fc:	asr	r1, r0, #31
   1f100:	str	r0, [fp, #-24]	; 0xffffffe8
   1f104:	str	r1, [fp, #-20]	; 0xffffffec
   1f108:	b	1fd70 <__assert_fail@plt+0xe63c>
   1f10c:	ldr	r0, [fp, #-8]
   1f110:	ldr	r0, [r0]
   1f114:	ldr	r1, [fp, #-12]
   1f118:	mul	r0, r0, r1
   1f11c:	asr	r1, r0, #31
   1f120:	str	r0, [fp, #-24]	; 0xffffffe8
   1f124:	str	r1, [fp, #-20]	; 0xffffffec
   1f128:	b	1fd8c <__assert_fail@plt+0xe658>
   1f12c:	ldr	r0, [fp, #-12]
   1f130:	cmp	r0, #0
   1f134:	bge	1f268 <__assert_fail@plt+0xdb34>
   1f138:	mov	r0, #1
   1f13c:	cmp	r0, #0
   1f140:	bne	1f1e8 <__assert_fail@plt+0xdab4>
   1f144:	b	1f148 <__assert_fail@plt+0xda14>
   1f148:	b	1f174 <__assert_fail@plt+0xda40>
   1f14c:	ldr	r0, [fp, #-8]
   1f150:	ldr	r1, [r0]
   1f154:	ldr	r0, [r0, #4]
   1f158:	ldr	r2, [fp, #-12]
   1f15c:	mvn	r3, #0
   1f160:	udiv	r2, r3, r2
   1f164:	subs	r1, r1, r2
   1f168:	sbcs	r0, r0, #0
   1f16c:	bcc	1f31c <__assert_fail@plt+0xdbe8>
   1f170:	b	1f33c <__assert_fail@plt+0xdc08>
   1f174:	b	1f178 <__assert_fail@plt+0xda44>
   1f178:	ldr	r0, [pc, #3124]	; 1fdb4 <__assert_fail@plt+0xe680>
   1f17c:	ldr	r1, [fp, #-12]
   1f180:	cmp	r1, r0
   1f184:	blt	1f19c <__assert_fail@plt+0xda68>
   1f188:	b	1f1a8 <__assert_fail@plt+0xda74>
   1f18c:	ldr	r0, [fp, #-12]
   1f190:	movw	r1, #0
   1f194:	cmp	r1, r0
   1f198:	bge	1f1a8 <__assert_fail@plt+0xda74>
   1f19c:	movw	r0, #1
   1f1a0:	str	r0, [fp, #-48]	; 0xffffffd0
   1f1a4:	b	1f1c0 <__assert_fail@plt+0xda8c>
   1f1a8:	ldr	r0, [fp, #-12]
   1f1ac:	movw	r1, #0
   1f1b0:	sub	r0, r1, r0
   1f1b4:	mvn	r1, #0
   1f1b8:	udiv	r0, r1, r0
   1f1bc:	str	r0, [fp, #-48]	; 0xffffffd0
   1f1c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f1c4:	ldr	r1, [fp, #-8]
   1f1c8:	ldr	r2, [r1]
   1f1cc:	ldr	r1, [r1, #4]
   1f1d0:	mvn	r1, r1
   1f1d4:	mvn	r2, r2
   1f1d8:	subs	r0, r2, r0
   1f1dc:	sbcs	r1, r1, #0
   1f1e0:	bcs	1f31c <__assert_fail@plt+0xdbe8>
   1f1e4:	b	1f33c <__assert_fail@plt+0xdc08>
   1f1e8:	b	1f1ec <__assert_fail@plt+0xdab8>
   1f1ec:	b	1f24c <__assert_fail@plt+0xdb18>
   1f1f0:	b	1f24c <__assert_fail@plt+0xdb18>
   1f1f4:	ldr	r0, [fp, #-12]
   1f1f8:	cmn	r0, #1
   1f1fc:	bne	1f24c <__assert_fail@plt+0xdb18>
   1f200:	b	1f220 <__assert_fail@plt+0xdaec>
   1f204:	ldr	r0, [fp, #-8]
   1f208:	ldr	r1, [r0]
   1f20c:	ldr	r0, [r0, #4]
   1f210:	orr	r0, r1, r0
   1f214:	cmp	r0, #0
   1f218:	bne	1f31c <__assert_fail@plt+0xdbe8>
   1f21c:	b	1f33c <__assert_fail@plt+0xdc08>
   1f220:	ldr	r0, [fp, #-8]
   1f224:	ldr	r1, [r0]
   1f228:	ldr	r0, [r0, #4]
   1f22c:	orr	r0, r1, r0
   1f230:	cmp	r0, #0
   1f234:	beq	1f33c <__assert_fail@plt+0xdc08>
   1f238:	b	1f23c <__assert_fail@plt+0xdb08>
   1f23c:	mov	r0, #0
   1f240:	cmp	r0, #0
   1f244:	bne	1f31c <__assert_fail@plt+0xdbe8>
   1f248:	b	1f33c <__assert_fail@plt+0xdc08>
   1f24c:	ldr	r0, [fp, #-8]
   1f250:	ldr	r1, [r0]
   1f254:	ldr	r0, [r0, #4]
   1f258:	orr	r0, r1, r0
   1f25c:	cmp	r0, #0
   1f260:	bne	1f31c <__assert_fail@plt+0xdbe8>
   1f264:	b	1f33c <__assert_fail@plt+0xdc08>
   1f268:	ldr	r0, [fp, #-12]
   1f26c:	cmp	r0, #0
   1f270:	bne	1f278 <__assert_fail@plt+0xdb44>
   1f274:	b	1f33c <__assert_fail@plt+0xdc08>
   1f278:	mov	r0, #1
   1f27c:	cmp	r0, #0
   1f280:	bne	1f2f4 <__assert_fail@plt+0xdbc0>
   1f284:	b	1f288 <__assert_fail@plt+0xdb54>
   1f288:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f28c:	b	1f294 <__assert_fail@plt+0xdb60>
   1f290:	b	1f2e4 <__assert_fail@plt+0xdbb0>
   1f294:	ldr	r0, [fp, #-8]
   1f298:	ldr	r1, [r0]
   1f29c:	ldr	r0, [r0, #4]
   1f2a0:	and	r0, r1, r0
   1f2a4:	cmn	r0, #1
   1f2a8:	bne	1f2e4 <__assert_fail@plt+0xdbb0>
   1f2ac:	b	1f2b0 <__assert_fail@plt+0xdb7c>
   1f2b0:	b	1f2b4 <__assert_fail@plt+0xdb80>
   1f2b4:	ldr	r0, [fp, #-12]
   1f2b8:	add	r0, r0, #0
   1f2bc:	movw	r1, #0
   1f2c0:	cmp	r1, r0
   1f2c4:	blt	1f31c <__assert_fail@plt+0xdbe8>
   1f2c8:	b	1f33c <__assert_fail@plt+0xdc08>
   1f2cc:	ldr	r0, [fp, #-12]
   1f2d0:	sub	r0, r0, #1
   1f2d4:	mvn	r1, #0
   1f2d8:	cmp	r1, r0
   1f2dc:	blt	1f31c <__assert_fail@plt+0xdbe8>
   1f2e0:	b	1f33c <__assert_fail@plt+0xdc08>
   1f2e4:	ldr	r0, [fp, #-12]
   1f2e8:	cmp	r0, #0
   1f2ec:	bne	1f31c <__assert_fail@plt+0xdbe8>
   1f2f0:	b	1f33c <__assert_fail@plt+0xdc08>
   1f2f4:	ldr	r0, [fp, #-12]
   1f2f8:	mvn	r1, #0
   1f2fc:	udiv	r0, r1, r0
   1f300:	ldr	r1, [fp, #-8]
   1f304:	ldr	r2, [r1]
   1f308:	ldr	r1, [r1, #4]
   1f30c:	subs	r0, r0, r2
   1f310:	rscs	r1, r1, #0
   1f314:	bcs	1f33c <__assert_fail@plt+0xdc08>
   1f318:	b	1f31c <__assert_fail@plt+0xdbe8>
   1f31c:	ldr	r0, [fp, #-8]
   1f320:	ldr	r0, [r0]
   1f324:	ldr	r1, [fp, #-12]
   1f328:	mul	r0, r0, r1
   1f32c:	mov	r1, #0
   1f330:	str	r1, [fp, #-20]	; 0xffffffec
   1f334:	str	r0, [fp, #-24]	; 0xffffffe8
   1f338:	b	1fd70 <__assert_fail@plt+0xe63c>
   1f33c:	ldr	r0, [fp, #-8]
   1f340:	ldr	r0, [r0]
   1f344:	ldr	r1, [fp, #-12]
   1f348:	mul	r0, r0, r1
   1f34c:	mov	r1, #0
   1f350:	str	r1, [fp, #-20]	; 0xffffffec
   1f354:	str	r0, [fp, #-24]	; 0xffffffe8
   1f358:	b	1fd8c <__assert_fail@plt+0xe658>
   1f35c:	b	1f7f4 <__assert_fail@plt+0xe0c0>
   1f360:	b	1f5c4 <__assert_fail@plt+0xde90>
   1f364:	ldr	r0, [fp, #-12]
   1f368:	cmp	r0, #0
   1f36c:	bge	1f4bc <__assert_fail@plt+0xdd88>
   1f370:	mov	r0, #1
   1f374:	cmp	r0, #0
   1f378:	bne	1f420 <__assert_fail@plt+0xdcec>
   1f37c:	b	1f380 <__assert_fail@plt+0xdc4c>
   1f380:	b	1f384 <__assert_fail@plt+0xdc50>
   1f384:	ldr	r0, [fp, #-8]
   1f388:	ldr	r1, [r0]
   1f38c:	ldr	r0, [r0, #4]
   1f390:	ldr	r2, [fp, #-12]
   1f394:	mvn	r3, #-2147483648	; 0x80000000
   1f398:	sdiv	r2, r3, r2
   1f39c:	subs	r1, r1, r2
   1f3a0:	sbcs	r0, r0, r2, asr #31
   1f3a4:	bcc	1f580 <__assert_fail@plt+0xde4c>
   1f3a8:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f3ac:	b	1f3b0 <__assert_fail@plt+0xdc7c>
   1f3b0:	ldr	r0, [pc, #2556]	; 1fdb4 <__assert_fail@plt+0xe680>
   1f3b4:	ldr	r1, [fp, #-12]
   1f3b8:	cmp	r1, r0
   1f3bc:	blt	1f3d4 <__assert_fail@plt+0xdca0>
   1f3c0:	b	1f3e0 <__assert_fail@plt+0xdcac>
   1f3c4:	ldr	r0, [fp, #-12]
   1f3c8:	movw	r1, #0
   1f3cc:	cmp	r1, r0
   1f3d0:	bge	1f3e0 <__assert_fail@plt+0xdcac>
   1f3d4:	movw	r0, #0
   1f3d8:	str	r0, [fp, #-52]	; 0xffffffcc
   1f3dc:	b	1f3f8 <__assert_fail@plt+0xdcc4>
   1f3e0:	ldr	r0, [pc, #2512]	; 1fdb8 <__assert_fail@plt+0xe684>
   1f3e4:	ldr	r1, [fp, #-12]
   1f3e8:	movw	r2, #0
   1f3ec:	sub	r1, r2, r1
   1f3f0:	sdiv	r0, r0, r1
   1f3f4:	str	r0, [fp, #-52]	; 0xffffffcc
   1f3f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f3fc:	ldr	r1, [fp, #-8]
   1f400:	ldr	r2, [r1]
   1f404:	ldr	r1, [r1, #4]
   1f408:	mvn	r1, r1
   1f40c:	mvn	r2, r2
   1f410:	subs	r2, r2, r0
   1f414:	sbcs	r0, r1, r0, asr #31
   1f418:	bcs	1f580 <__assert_fail@plt+0xde4c>
   1f41c:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f420:	ldr	r0, [fp, #-12]
   1f424:	cmn	r0, #1
   1f428:	bne	1f494 <__assert_fail@plt+0xdd60>
   1f42c:	b	1f450 <__assert_fail@plt+0xdd1c>
   1f430:	ldr	r0, [fp, #-8]
   1f434:	ldr	r1, [r0]
   1f438:	ldr	r0, [r0, #4]
   1f43c:	eor	r1, r1, #-2147483648	; 0x80000000
   1f440:	orr	r0, r1, r0
   1f444:	cmp	r0, #0
   1f448:	bne	1f580 <__assert_fail@plt+0xde4c>
   1f44c:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f450:	ldr	r0, [fp, #-8]
   1f454:	ldr	r1, [r0]
   1f458:	ldr	r0, [r0, #4]
   1f45c:	orr	r0, r1, r0
   1f460:	cmp	r0, #0
   1f464:	beq	1f5a4 <__assert_fail@plt+0xde70>
   1f468:	b	1f46c <__assert_fail@plt+0xdd38>
   1f46c:	ldr	r0, [fp, #-8]
   1f470:	ldr	r1, [r0]
   1f474:	ldr	r0, [r0, #4]
   1f478:	subs	r1, r1, #1
   1f47c:	sbc	r0, r0, #0
   1f480:	mvn	r2, #-2147483648	; 0x80000000
   1f484:	subs	r1, r2, r1
   1f488:	rscs	r0, r0, #0
   1f48c:	bcc	1f580 <__assert_fail@plt+0xde4c>
   1f490:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f494:	ldr	r0, [fp, #-12]
   1f498:	mov	r1, #-2147483648	; 0x80000000
   1f49c:	sdiv	r0, r1, r0
   1f4a0:	ldr	r1, [fp, #-8]
   1f4a4:	ldr	r2, [r1]
   1f4a8:	ldr	r1, [r1, #4]
   1f4ac:	subs	r2, r0, r2
   1f4b0:	rscs	r0, r1, r0, asr #31
   1f4b4:	bcc	1f580 <__assert_fail@plt+0xde4c>
   1f4b8:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f4bc:	ldr	r0, [fp, #-12]
   1f4c0:	cmp	r0, #0
   1f4c4:	bne	1f4cc <__assert_fail@plt+0xdd98>
   1f4c8:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f4cc:	mov	r0, #1
   1f4d0:	cmp	r0, #0
   1f4d4:	bne	1f558 <__assert_fail@plt+0xde24>
   1f4d8:	b	1f4dc <__assert_fail@plt+0xdda8>
   1f4dc:	ldr	r0, [fp, #-8]
   1f4e0:	ldr	r1, [r0]
   1f4e4:	ldr	r0, [r0, #4]
   1f4e8:	and	r0, r1, r0
   1f4ec:	cmn	r0, #1
   1f4f0:	bne	1f52c <__assert_fail@plt+0xddf8>
   1f4f4:	b	1f4f8 <__assert_fail@plt+0xddc4>
   1f4f8:	b	1f4fc <__assert_fail@plt+0xddc8>
   1f4fc:	ldr	r0, [fp, #-12]
   1f500:	add	r0, r0, #-2147483648	; 0x80000000
   1f504:	movw	r1, #0
   1f508:	cmp	r1, r0
   1f50c:	blt	1f580 <__assert_fail@plt+0xde4c>
   1f510:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f514:	ldr	r0, [pc, #2204]	; 1fdb8 <__assert_fail@plt+0xe684>
   1f518:	ldr	r1, [fp, #-12]
   1f51c:	sub	r1, r1, #1
   1f520:	cmp	r0, r1
   1f524:	blt	1f580 <__assert_fail@plt+0xde4c>
   1f528:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f52c:	ldr	r0, [fp, #-8]
   1f530:	ldr	r2, [r0]
   1f534:	ldr	r3, [r0, #4]
   1f538:	mov	r0, #-2147483648	; 0x80000000
   1f53c:	mvn	r1, #0
   1f540:	bl	22540 <__assert_fail@plt+0x10e0c>
   1f544:	ldr	r2, [fp, #-12]
   1f548:	subs	r0, r0, r2
   1f54c:	sbcs	r1, r1, r2, asr #31
   1f550:	bcc	1f580 <__assert_fail@plt+0xde4c>
   1f554:	b	1f5a4 <__assert_fail@plt+0xde70>
   1f558:	ldr	r0, [fp, #-12]
   1f55c:	mvn	r1, #-2147483648	; 0x80000000
   1f560:	sdiv	r0, r1, r0
   1f564:	ldr	r1, [fp, #-8]
   1f568:	ldr	r2, [r1]
   1f56c:	ldr	r1, [r1, #4]
   1f570:	subs	r2, r0, r2
   1f574:	rscs	r0, r1, r0, asr #31
   1f578:	bcs	1f5a4 <__assert_fail@plt+0xde70>
   1f57c:	b	1f580 <__assert_fail@plt+0xde4c>
   1f580:	ldr	r0, [fp, #-8]
   1f584:	ldr	r0, [r0]
   1f588:	ldr	r1, [fp, #-12]
   1f58c:	mul	r0, r0, r1
   1f590:	asr	r1, r0, #31
   1f594:	str	r0, [fp, #-24]	; 0xffffffe8
   1f598:	str	r1, [fp, #-20]	; 0xffffffec
   1f59c:	b	1fd70 <__assert_fail@plt+0xe63c>
   1f5a0:	andhi	r0, r0, r1
   1f5a4:	ldr	r0, [fp, #-8]
   1f5a8:	ldr	r0, [r0]
   1f5ac:	ldr	r1, [fp, #-12]
   1f5b0:	mul	r0, r0, r1
   1f5b4:	asr	r1, r0, #31
   1f5b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f5bc:	str	r1, [fp, #-20]	; 0xffffffec
   1f5c0:	b	1fd8c <__assert_fail@plt+0xe658>
   1f5c4:	ldr	r0, [fp, #-12]
   1f5c8:	cmp	r0, #0
   1f5cc:	bge	1f700 <__assert_fail@plt+0xdfcc>
   1f5d0:	mov	r0, #1
   1f5d4:	cmp	r0, #0
   1f5d8:	bne	1f680 <__assert_fail@plt+0xdf4c>
   1f5dc:	b	1f5e0 <__assert_fail@plt+0xdeac>
   1f5e0:	b	1f60c <__assert_fail@plt+0xded8>
   1f5e4:	ldr	r0, [fp, #-8]
   1f5e8:	ldr	r1, [r0]
   1f5ec:	ldr	r0, [r0, #4]
   1f5f0:	ldr	r2, [fp, #-12]
   1f5f4:	mvn	r3, #0
   1f5f8:	udiv	r2, r3, r2
   1f5fc:	subs	r1, r1, r2
   1f600:	sbcs	r0, r0, #0
   1f604:	bcc	1f7b4 <__assert_fail@plt+0xe080>
   1f608:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f60c:	b	1f610 <__assert_fail@plt+0xdedc>
   1f610:	ldr	r0, [pc, #1948]	; 1fdb4 <__assert_fail@plt+0xe680>
   1f614:	ldr	r1, [fp, #-12]
   1f618:	cmp	r1, r0
   1f61c:	blt	1f634 <__assert_fail@plt+0xdf00>
   1f620:	b	1f640 <__assert_fail@plt+0xdf0c>
   1f624:	ldr	r0, [fp, #-12]
   1f628:	movw	r1, #0
   1f62c:	cmp	r1, r0
   1f630:	bge	1f640 <__assert_fail@plt+0xdf0c>
   1f634:	movw	r0, #1
   1f638:	str	r0, [sp, #56]	; 0x38
   1f63c:	b	1f658 <__assert_fail@plt+0xdf24>
   1f640:	ldr	r0, [fp, #-12]
   1f644:	movw	r1, #0
   1f648:	sub	r0, r1, r0
   1f64c:	mvn	r1, #0
   1f650:	udiv	r0, r1, r0
   1f654:	str	r0, [sp, #56]	; 0x38
   1f658:	ldr	r0, [sp, #56]	; 0x38
   1f65c:	ldr	r1, [fp, #-8]
   1f660:	ldr	r2, [r1]
   1f664:	ldr	r1, [r1, #4]
   1f668:	mvn	r1, r1
   1f66c:	mvn	r2, r2
   1f670:	subs	r0, r2, r0
   1f674:	sbcs	r1, r1, #0
   1f678:	bcs	1f7b4 <__assert_fail@plt+0xe080>
   1f67c:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f680:	b	1f684 <__assert_fail@plt+0xdf50>
   1f684:	b	1f6e4 <__assert_fail@plt+0xdfb0>
   1f688:	b	1f6e4 <__assert_fail@plt+0xdfb0>
   1f68c:	ldr	r0, [fp, #-12]
   1f690:	cmn	r0, #1
   1f694:	bne	1f6e4 <__assert_fail@plt+0xdfb0>
   1f698:	b	1f6b8 <__assert_fail@plt+0xdf84>
   1f69c:	ldr	r0, [fp, #-8]
   1f6a0:	ldr	r1, [r0]
   1f6a4:	ldr	r0, [r0, #4]
   1f6a8:	orr	r0, r1, r0
   1f6ac:	cmp	r0, #0
   1f6b0:	bne	1f7b4 <__assert_fail@plt+0xe080>
   1f6b4:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f6b8:	ldr	r0, [fp, #-8]
   1f6bc:	ldr	r1, [r0]
   1f6c0:	ldr	r0, [r0, #4]
   1f6c4:	orr	r0, r1, r0
   1f6c8:	cmp	r0, #0
   1f6cc:	beq	1f7d4 <__assert_fail@plt+0xe0a0>
   1f6d0:	b	1f6d4 <__assert_fail@plt+0xdfa0>
   1f6d4:	mov	r0, #0
   1f6d8:	cmp	r0, #0
   1f6dc:	bne	1f7b4 <__assert_fail@plt+0xe080>
   1f6e0:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f6e4:	ldr	r0, [fp, #-8]
   1f6e8:	ldr	r1, [r0]
   1f6ec:	ldr	r0, [r0, #4]
   1f6f0:	orr	r0, r1, r0
   1f6f4:	cmp	r0, #0
   1f6f8:	bne	1f7b4 <__assert_fail@plt+0xe080>
   1f6fc:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f700:	ldr	r0, [fp, #-12]
   1f704:	cmp	r0, #0
   1f708:	bne	1f710 <__assert_fail@plt+0xdfdc>
   1f70c:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f710:	mov	r0, #1
   1f714:	cmp	r0, #0
   1f718:	bne	1f78c <__assert_fail@plt+0xe058>
   1f71c:	b	1f720 <__assert_fail@plt+0xdfec>
   1f720:	b	1f728 <__assert_fail@plt+0xdff4>
   1f724:	b	1f72c <__assert_fail@plt+0xdff8>
   1f728:	b	1f77c <__assert_fail@plt+0xe048>
   1f72c:	ldr	r0, [fp, #-8]
   1f730:	ldr	r1, [r0]
   1f734:	ldr	r0, [r0, #4]
   1f738:	and	r0, r1, r0
   1f73c:	cmn	r0, #1
   1f740:	bne	1f77c <__assert_fail@plt+0xe048>
   1f744:	b	1f748 <__assert_fail@plt+0xe014>
   1f748:	b	1f74c <__assert_fail@plt+0xe018>
   1f74c:	ldr	r0, [fp, #-12]
   1f750:	add	r0, r0, #0
   1f754:	movw	r1, #0
   1f758:	cmp	r1, r0
   1f75c:	blt	1f7b4 <__assert_fail@plt+0xe080>
   1f760:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f764:	ldr	r0, [fp, #-12]
   1f768:	sub	r0, r0, #1
   1f76c:	mvn	r1, #0
   1f770:	cmp	r1, r0
   1f774:	blt	1f7b4 <__assert_fail@plt+0xe080>
   1f778:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f77c:	ldr	r0, [fp, #-12]
   1f780:	cmp	r0, #0
   1f784:	bne	1f7b4 <__assert_fail@plt+0xe080>
   1f788:	b	1f7d4 <__assert_fail@plt+0xe0a0>
   1f78c:	ldr	r0, [fp, #-12]
   1f790:	mvn	r1, #0
   1f794:	udiv	r0, r1, r0
   1f798:	ldr	r1, [fp, #-8]
   1f79c:	ldr	r2, [r1]
   1f7a0:	ldr	r1, [r1, #4]
   1f7a4:	subs	r0, r0, r2
   1f7a8:	rscs	r1, r1, #0
   1f7ac:	bcs	1f7d4 <__assert_fail@plt+0xe0a0>
   1f7b0:	b	1f7b4 <__assert_fail@plt+0xe080>
   1f7b4:	ldr	r0, [fp, #-8]
   1f7b8:	ldr	r0, [r0]
   1f7bc:	ldr	r1, [fp, #-12]
   1f7c0:	mul	r0, r0, r1
   1f7c4:	mov	r1, #0
   1f7c8:	str	r1, [fp, #-20]	; 0xffffffec
   1f7cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1f7d0:	b	1fd70 <__assert_fail@plt+0xe63c>
   1f7d4:	ldr	r0, [fp, #-8]
   1f7d8:	ldr	r0, [r0]
   1f7dc:	ldr	r1, [fp, #-12]
   1f7e0:	mul	r0, r0, r1
   1f7e4:	mov	r1, #0
   1f7e8:	str	r1, [fp, #-20]	; 0xffffffec
   1f7ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1f7f0:	b	1fd8c <__assert_fail@plt+0xe658>
   1f7f4:	b	1fad8 <__assert_fail@plt+0xe3a4>
   1f7f8:	ldr	r0, [fp, #-12]
   1f7fc:	cmp	r0, #0
   1f800:	bge	1f9a8 <__assert_fail@plt+0xe274>
   1f804:	mov	r0, #1
   1f808:	cmp	r0, #0
   1f80c:	bne	1f8fc <__assert_fail@plt+0xe1c8>
   1f810:	b	1f814 <__assert_fail@plt+0xe0e0>
   1f814:	b	1f818 <__assert_fail@plt+0xe0e4>
   1f818:	ldr	r0, [fp, #-8]
   1f81c:	ldr	r1, [r0]
   1f820:	ldr	r0, [r0, #4]
   1f824:	ldr	r2, [fp, #-12]
   1f828:	asr	r3, r2, #31
   1f82c:	mvn	ip, #0
   1f830:	mvn	lr, #-2147483648	; 0x80000000
   1f834:	str	r0, [sp, #52]	; 0x34
   1f838:	mov	r0, ip
   1f83c:	str	r1, [sp, #48]	; 0x30
   1f840:	mov	r1, lr
   1f844:	bl	2246c <__assert_fail@plt+0x10d38>
   1f848:	ldr	r2, [sp, #48]	; 0x30
   1f84c:	subs	r0, r2, r0
   1f850:	ldr	r2, [sp, #52]	; 0x34
   1f854:	sbcs	r1, r2, r1
   1f858:	bcc	1fa80 <__assert_fail@plt+0xe34c>
   1f85c:	b	1faac <__assert_fail@plt+0xe378>
   1f860:	b	1f864 <__assert_fail@plt+0xe130>
   1f864:	ldr	r0, [pc, #1352]	; 1fdb4 <__assert_fail@plt+0xe680>
   1f868:	ldr	r1, [fp, #-12]
   1f86c:	cmp	r1, r0
   1f870:	blt	1f888 <__assert_fail@plt+0xe154>
   1f874:	b	1f89c <__assert_fail@plt+0xe168>
   1f878:	ldr	r0, [fp, #-12]
   1f87c:	movw	r1, #0
   1f880:	cmp	r1, r0
   1f884:	bge	1f89c <__assert_fail@plt+0xe168>
   1f888:	mov	r0, #0
   1f88c:	mvn	r1, #0
   1f890:	str	r1, [sp, #44]	; 0x2c
   1f894:	str	r0, [sp, #40]	; 0x28
   1f898:	b	1f8d0 <__assert_fail@plt+0xe19c>
   1f89c:	ldr	r0, [fp, #-12]
   1f8a0:	rsb	r0, r0, #0
   1f8a4:	asr	r3, r0, #31
   1f8a8:	mvn	r1, #0
   1f8ac:	mvn	r2, #-2147483648	; 0x80000000
   1f8b0:	str	r0, [sp, #36]	; 0x24
   1f8b4:	mov	r0, r1
   1f8b8:	mov	r1, r2
   1f8bc:	ldr	r2, [sp, #36]	; 0x24
   1f8c0:	bl	2246c <__assert_fail@plt+0x10d38>
   1f8c4:	str	r0, [sp, #44]	; 0x2c
   1f8c8:	str	r1, [sp, #40]	; 0x28
   1f8cc:	b	1f8d0 <__assert_fail@plt+0xe19c>
   1f8d0:	ldr	r0, [sp, #40]	; 0x28
   1f8d4:	ldr	r1, [sp, #44]	; 0x2c
   1f8d8:	ldr	r2, [fp, #-8]
   1f8dc:	ldr	r3, [r2]
   1f8e0:	ldr	r2, [r2, #4]
   1f8e4:	mvn	r2, r2
   1f8e8:	mvn	r3, r3
   1f8ec:	subs	r1, r3, r1
   1f8f0:	sbcs	r0, r2, r0
   1f8f4:	bcs	1fa80 <__assert_fail@plt+0xe34c>
   1f8f8:	b	1faac <__assert_fail@plt+0xe378>
   1f8fc:	ldr	r0, [fp, #-12]
   1f900:	cmn	r0, #1
   1f904:	bne	1f968 <__assert_fail@plt+0xe234>
   1f908:	b	1f92c <__assert_fail@plt+0xe1f8>
   1f90c:	ldr	r0, [fp, #-8]
   1f910:	ldr	r1, [r0]
   1f914:	ldr	r0, [r0, #4]
   1f918:	eor	r0, r0, #-2147483648	; 0x80000000
   1f91c:	orr	r0, r1, r0
   1f920:	cmp	r0, #0
   1f924:	bne	1fa80 <__assert_fail@plt+0xe34c>
   1f928:	b	1faac <__assert_fail@plt+0xe378>
   1f92c:	ldr	r0, [fp, #-8]
   1f930:	ldr	r1, [r0]
   1f934:	ldr	r0, [r0, #4]
   1f938:	orr	r0, r1, r0
   1f93c:	cmp	r0, #0
   1f940:	beq	1faac <__assert_fail@plt+0xe378>
   1f944:	b	1f948 <__assert_fail@plt+0xe214>
   1f948:	ldr	r0, [fp, #-8]
   1f94c:	ldr	r1, [r0]
   1f950:	ldr	r0, [r0, #4]
   1f954:	subs	r1, r1, #1
   1f958:	sbc	r0, r0, #0
   1f95c:	cmp	r0, #0
   1f960:	bmi	1fa80 <__assert_fail@plt+0xe34c>
   1f964:	b	1faac <__assert_fail@plt+0xe378>
   1f968:	ldr	r0, [fp, #-12]
   1f96c:	asr	r3, r0, #31
   1f970:	mov	r1, #0
   1f974:	mov	r2, #-2147483648	; 0x80000000
   1f978:	str	r0, [sp, #32]
   1f97c:	mov	r0, r1
   1f980:	mov	r1, r2
   1f984:	ldr	r2, [sp, #32]
   1f988:	bl	2246c <__assert_fail@plt+0x10d38>
   1f98c:	ldr	r2, [fp, #-8]
   1f990:	ldr	r3, [r2]
   1f994:	ldr	r2, [r2, #4]
   1f998:	subs	r0, r0, r3
   1f99c:	sbcs	r1, r1, r2
   1f9a0:	bcc	1fa80 <__assert_fail@plt+0xe34c>
   1f9a4:	b	1faac <__assert_fail@plt+0xe378>
   1f9a8:	ldr	r0, [fp, #-12]
   1f9ac:	cmp	r0, #0
   1f9b0:	bne	1f9b8 <__assert_fail@plt+0xe284>
   1f9b4:	b	1faac <__assert_fail@plt+0xe378>
   1f9b8:	mov	r0, #1
   1f9bc:	cmp	r0, #0
   1f9c0:	bne	1fa40 <__assert_fail@plt+0xe30c>
   1f9c4:	b	1f9c8 <__assert_fail@plt+0xe294>
   1f9c8:	ldr	r0, [fp, #-8]
   1f9cc:	ldr	r1, [r0]
   1f9d0:	ldr	r0, [r0, #4]
   1f9d4:	and	r0, r1, r0
   1f9d8:	cmn	r0, #1
   1f9dc:	bne	1fa14 <__assert_fail@plt+0xe2e0>
   1f9e0:	b	1f9e4 <__assert_fail@plt+0xe2b0>
   1f9e4:	b	1f9e8 <__assert_fail@plt+0xe2b4>
   1f9e8:	ldr	r0, [fp, #-12]
   1f9ec:	mov	r1, #-2147483648	; 0x80000000
   1f9f0:	add	r1, r1, r0, asr #31
   1f9f4:	rsbs	r0, r0, #0
   1f9f8:	rscs	r1, r1, #0
   1f9fc:	blt	1fa80 <__assert_fail@plt+0xe34c>
   1fa00:	b	1faac <__assert_fail@plt+0xe378>
   1fa04:	mov	r0, #0
   1fa08:	cmp	r0, #0
   1fa0c:	bne	1fa80 <__assert_fail@plt+0xe34c>
   1fa10:	b	1faac <__assert_fail@plt+0xe378>
   1fa14:	ldr	r0, [fp, #-8]
   1fa18:	ldr	r2, [r0]
   1fa1c:	ldr	r3, [r0, #4]
   1fa20:	mov	r0, #0
   1fa24:	mov	r1, #-2147483648	; 0x80000000
   1fa28:	bl	22540 <__assert_fail@plt+0x10e0c>
   1fa2c:	ldr	r2, [fp, #-12]
   1fa30:	subs	r0, r0, r2
   1fa34:	sbcs	r1, r1, r2, asr #31
   1fa38:	bcc	1fa80 <__assert_fail@plt+0xe34c>
   1fa3c:	b	1faac <__assert_fail@plt+0xe378>
   1fa40:	ldr	r0, [fp, #-12]
   1fa44:	asr	r3, r0, #31
   1fa48:	mvn	r1, #0
   1fa4c:	mvn	r2, #-2147483648	; 0x80000000
   1fa50:	str	r0, [sp, #28]
   1fa54:	mov	r0, r1
   1fa58:	mov	r1, r2
   1fa5c:	ldr	r2, [sp, #28]
   1fa60:	bl	2246c <__assert_fail@plt+0x10d38>
   1fa64:	ldr	r2, [fp, #-8]
   1fa68:	ldr	r3, [r2]
   1fa6c:	ldr	r2, [r2, #4]
   1fa70:	subs	r0, r0, r3
   1fa74:	sbcs	r1, r1, r2
   1fa78:	bcs	1faac <__assert_fail@plt+0xe378>
   1fa7c:	b	1fa80 <__assert_fail@plt+0xe34c>
   1fa80:	ldr	r0, [fp, #-8]
   1fa84:	ldr	r1, [r0]
   1fa88:	ldr	r0, [r0, #4]
   1fa8c:	ldr	r2, [fp, #-12]
   1fa90:	asr	r3, r2, #31
   1fa94:	umull	ip, lr, r1, r2
   1fa98:	mla	r1, r1, r3, lr
   1fa9c:	mla	r0, r0, r2, r1
   1faa0:	str	ip, [fp, #-24]	; 0xffffffe8
   1faa4:	str	r0, [fp, #-20]	; 0xffffffec
   1faa8:	b	1fd70 <__assert_fail@plt+0xe63c>
   1faac:	ldr	r0, [fp, #-8]
   1fab0:	ldr	r1, [r0]
   1fab4:	ldr	r0, [r0, #4]
   1fab8:	ldr	r2, [fp, #-12]
   1fabc:	asr	r3, r2, #31
   1fac0:	umull	ip, lr, r1, r2
   1fac4:	mla	r1, r1, r3, lr
   1fac8:	mla	r0, r0, r2, r1
   1facc:	str	ip, [fp, #-24]	; 0xffffffe8
   1fad0:	str	r0, [fp, #-20]	; 0xffffffec
   1fad4:	b	1fd8c <__assert_fail@plt+0xe658>
   1fad8:	ldr	r0, [fp, #-12]
   1fadc:	cmp	r0, #0
   1fae0:	bge	1fc54 <__assert_fail@plt+0xe520>
   1fae4:	mov	r0, #1
   1fae8:	cmp	r0, #0
   1faec:	bne	1fbd4 <__assert_fail@plt+0xe4a0>
   1faf0:	b	1faf4 <__assert_fail@plt+0xe3c0>
   1faf4:	b	1fb3c <__assert_fail@plt+0xe408>
   1faf8:	ldr	r0, [fp, #-8]
   1fafc:	ldr	r1, [r0]
   1fb00:	ldr	r0, [r0, #4]
   1fb04:	ldr	r2, [fp, #-12]
   1fb08:	asr	r3, r2, #31
   1fb0c:	mvn	ip, #0
   1fb10:	str	r0, [sp, #24]
   1fb14:	mov	r0, ip
   1fb18:	str	r1, [sp, #20]
   1fb1c:	mov	r1, ip
   1fb20:	bl	22540 <__assert_fail@plt+0x10e0c>
   1fb24:	ldr	r2, [sp, #20]
   1fb28:	subs	r0, r2, r0
   1fb2c:	ldr	r2, [sp, #24]
   1fb30:	sbcs	r1, r2, r1
   1fb34:	bcc	1fd18 <__assert_fail@plt+0xe5e4>
   1fb38:	b	1fd44 <__assert_fail@plt+0xe610>
   1fb3c:	b	1fb40 <__assert_fail@plt+0xe40c>
   1fb40:	ldr	r0, [pc, #620]	; 1fdb4 <__assert_fail@plt+0xe680>
   1fb44:	ldr	r1, [fp, #-12]
   1fb48:	cmp	r1, r0
   1fb4c:	blt	1fb64 <__assert_fail@plt+0xe430>
   1fb50:	b	1fb7c <__assert_fail@plt+0xe448>
   1fb54:	ldr	r0, [fp, #-12]
   1fb58:	movw	r1, #0
   1fb5c:	cmp	r1, r0
   1fb60:	bge	1fb7c <__assert_fail@plt+0xe448>
   1fb64:	mov	r0, #1
   1fb68:	mvn	r1, #0
   1fb6c:	str	r1, [sp, #16]
   1fb70:	str	r0, [sp, #12]
   1fb74:	b	1fba8 <__assert_fail@plt+0xe474>
   1fb78:			; <UNDEFINED> instruction: 0xffff8000
   1fb7c:	ldr	r0, [fp, #-12]
   1fb80:	rsb	r0, r0, #0
   1fb84:	asr	r3, r0, #31
   1fb88:	mvn	r1, #0
   1fb8c:	str	r0, [sp, #8]
   1fb90:	mov	r0, r1
   1fb94:	ldr	r2, [sp, #8]
   1fb98:	bl	22540 <__assert_fail@plt+0x10e0c>
   1fb9c:	str	r0, [sp, #16]
   1fba0:	str	r1, [sp, #12]
   1fba4:	b	1fba8 <__assert_fail@plt+0xe474>
   1fba8:	ldr	r0, [sp, #12]
   1fbac:	ldr	r1, [sp, #16]
   1fbb0:	ldr	r2, [fp, #-8]
   1fbb4:	ldr	r3, [r2]
   1fbb8:	ldr	r2, [r2, #4]
   1fbbc:	mvn	r2, r2
   1fbc0:	mvn	r3, r3
   1fbc4:	subs	r1, r3, r1
   1fbc8:	sbcs	r0, r2, r0
   1fbcc:	bcs	1fd18 <__assert_fail@plt+0xe5e4>
   1fbd0:	b	1fd44 <__assert_fail@plt+0xe610>
   1fbd4:	b	1fbd8 <__assert_fail@plt+0xe4a4>
   1fbd8:	b	1fc38 <__assert_fail@plt+0xe504>
   1fbdc:	b	1fc38 <__assert_fail@plt+0xe504>
   1fbe0:	ldr	r0, [fp, #-12]
   1fbe4:	cmn	r0, #1
   1fbe8:	bne	1fc38 <__assert_fail@plt+0xe504>
   1fbec:	b	1fc0c <__assert_fail@plt+0xe4d8>
   1fbf0:	ldr	r0, [fp, #-8]
   1fbf4:	ldr	r1, [r0]
   1fbf8:	ldr	r0, [r0, #4]
   1fbfc:	orr	r0, r1, r0
   1fc00:	cmp	r0, #0
   1fc04:	bne	1fd18 <__assert_fail@plt+0xe5e4>
   1fc08:	b	1fd44 <__assert_fail@plt+0xe610>
   1fc0c:	ldr	r0, [fp, #-8]
   1fc10:	ldr	r1, [r0]
   1fc14:	ldr	r0, [r0, #4]
   1fc18:	orr	r0, r1, r0
   1fc1c:	cmp	r0, #0
   1fc20:	beq	1fd44 <__assert_fail@plt+0xe610>
   1fc24:	b	1fc28 <__assert_fail@plt+0xe4f4>
   1fc28:	mov	r0, #0
   1fc2c:	cmp	r0, #0
   1fc30:	bne	1fd18 <__assert_fail@plt+0xe5e4>
   1fc34:	b	1fd44 <__assert_fail@plt+0xe610>
   1fc38:	ldr	r0, [fp, #-8]
   1fc3c:	ldr	r1, [r0]
   1fc40:	ldr	r0, [r0, #4]
   1fc44:	orr	r0, r1, r0
   1fc48:	cmp	r0, #0
   1fc4c:	bne	1fd18 <__assert_fail@plt+0xe5e4>
   1fc50:	b	1fd44 <__assert_fail@plt+0xe610>
   1fc54:	ldr	r0, [fp, #-12]
   1fc58:	cmp	r0, #0
   1fc5c:	bne	1fc64 <__assert_fail@plt+0xe530>
   1fc60:	b	1fd44 <__assert_fail@plt+0xe610>
   1fc64:	mov	r0, #1
   1fc68:	cmp	r0, #0
   1fc6c:	bne	1fce0 <__assert_fail@plt+0xe5ac>
   1fc70:	b	1fc74 <__assert_fail@plt+0xe540>
   1fc74:	b	1fc7c <__assert_fail@plt+0xe548>
   1fc78:	b	1fc80 <__assert_fail@plt+0xe54c>
   1fc7c:	b	1fcd0 <__assert_fail@plt+0xe59c>
   1fc80:	ldr	r0, [fp, #-8]
   1fc84:	ldr	r1, [r0]
   1fc88:	ldr	r0, [r0, #4]
   1fc8c:	and	r0, r1, r0
   1fc90:	cmn	r0, #1
   1fc94:	bne	1fcd0 <__assert_fail@plt+0xe59c>
   1fc98:	b	1fc9c <__assert_fail@plt+0xe568>
   1fc9c:	b	1fca0 <__assert_fail@plt+0xe56c>
   1fca0:	ldr	r0, [fp, #-12]
   1fca4:	add	r0, r0, #0
   1fca8:	movw	r1, #0
   1fcac:	cmp	r1, r0
   1fcb0:	blt	1fd18 <__assert_fail@plt+0xe5e4>
   1fcb4:	b	1fd44 <__assert_fail@plt+0xe610>
   1fcb8:	ldr	r0, [fp, #-12]
   1fcbc:	sub	r0, r0, #1
   1fcc0:	mvn	r1, #0
   1fcc4:	cmp	r1, r0
   1fcc8:	blt	1fd18 <__assert_fail@plt+0xe5e4>
   1fccc:	b	1fd44 <__assert_fail@plt+0xe610>
   1fcd0:	ldr	r0, [fp, #-12]
   1fcd4:	cmp	r0, #0
   1fcd8:	bne	1fd18 <__assert_fail@plt+0xe5e4>
   1fcdc:	b	1fd44 <__assert_fail@plt+0xe610>
   1fce0:	ldr	r0, [fp, #-12]
   1fce4:	asr	r3, r0, #31
   1fce8:	mvn	r1, #0
   1fcec:	str	r0, [sp, #4]
   1fcf0:	mov	r0, r1
   1fcf4:	ldr	r2, [sp, #4]
   1fcf8:	bl	22540 <__assert_fail@plt+0x10e0c>
   1fcfc:	ldr	r2, [fp, #-8]
   1fd00:	ldr	r3, [r2]
   1fd04:	ldr	r2, [r2, #4]
   1fd08:	subs	r0, r0, r3
   1fd0c:	sbcs	r1, r1, r2
   1fd10:	bcs	1fd44 <__assert_fail@plt+0xe610>
   1fd14:	b	1fd18 <__assert_fail@plt+0xe5e4>
   1fd18:	ldr	r0, [fp, #-8]
   1fd1c:	ldr	r1, [r0]
   1fd20:	ldr	r0, [r0, #4]
   1fd24:	ldr	r2, [fp, #-12]
   1fd28:	asr	r3, r2, #31
   1fd2c:	umull	ip, lr, r1, r2
   1fd30:	mla	r1, r1, r3, lr
   1fd34:	mla	r0, r0, r2, r1
   1fd38:	str	ip, [fp, #-24]	; 0xffffffe8
   1fd3c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd40:	b	1fd70 <__assert_fail@plt+0xe63c>
   1fd44:	ldr	r0, [fp, #-8]
   1fd48:	ldr	r1, [r0]
   1fd4c:	ldr	r0, [r0, #4]
   1fd50:	ldr	r2, [fp, #-12]
   1fd54:	asr	r3, r2, #31
   1fd58:	umull	ip, lr, r1, r2
   1fd5c:	mla	r1, r1, r3, lr
   1fd60:	mla	r0, r0, r2, r1
   1fd64:	str	ip, [fp, #-24]	; 0xffffffe8
   1fd68:	str	r0, [fp, #-20]	; 0xffffffec
   1fd6c:	b	1fd8c <__assert_fail@plt+0xe658>
   1fd70:	ldr	r0, [fp, #-8]
   1fd74:	mvn	r1, #0
   1fd78:	str	r1, [r0, #4]
   1fd7c:	str	r1, [r0]
   1fd80:	movw	r0, #1
   1fd84:	str	r0, [fp, #-4]
   1fd88:	b	1fda8 <__assert_fail@plt+0xe674>
   1fd8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd94:	ldr	r2, [fp, #-8]
   1fd98:	str	r1, [r2, #4]
   1fd9c:	str	r0, [r2]
   1fda0:	movw	r0, #0
   1fda4:	str	r0, [fp, #-4]
   1fda8:	ldr	r0, [fp, #-4]
   1fdac:	mov	sp, fp
   1fdb0:	pop	{fp, pc}
   1fdb4:	andhi	r0, r0, r1
   1fdb8:	svcvc	0x00ffffff
   1fdbc:	push	{fp, lr}
   1fdc0:	mov	fp, sp
   1fdc4:	sub	sp, sp, #16
   1fdc8:	str	r0, [fp, #-4]
   1fdcc:	str	r1, [sp, #8]
   1fdd0:	str	r2, [sp, #4]
   1fdd4:	movw	r0, #0
   1fdd8:	str	r0, [sp]
   1fddc:	ldr	r0, [sp, #4]
   1fde0:	mvn	r1, #0
   1fde4:	add	r1, r0, r1
   1fde8:	str	r1, [sp, #4]
   1fdec:	cmp	r0, #0
   1fdf0:	beq	1fe10 <__assert_fail@plt+0xe6dc>
   1fdf4:	ldr	r0, [fp, #-4]
   1fdf8:	ldr	r1, [sp, #8]
   1fdfc:	bl	1e544 <__assert_fail@plt+0xce10>
   1fe00:	ldr	r1, [sp]
   1fe04:	orr	r0, r1, r0
   1fe08:	str	r0, [sp]
   1fe0c:	b	1fddc <__assert_fail@plt+0xe6a8>
   1fe10:	ldr	r0, [sp]
   1fe14:	mov	sp, fp
   1fe18:	pop	{fp, pc}
   1fe1c:	push	{fp, lr}
   1fe20:	mov	fp, sp
   1fe24:	sub	sp, sp, #16
   1fe28:	str	r0, [sp, #8]
   1fe2c:	str	r1, [sp, #4]
   1fe30:	ldr	r0, [sp, #8]
   1fe34:	cmp	r0, #0
   1fe38:	beq	1fe48 <__assert_fail@plt+0xe714>
   1fe3c:	ldr	r0, [sp, #4]
   1fe40:	cmp	r0, #0
   1fe44:	bne	1fe54 <__assert_fail@plt+0xe720>
   1fe48:	movw	r0, #1
   1fe4c:	str	r0, [sp, #4]
   1fe50:	str	r0, [sp, #8]
   1fe54:	ldr	r0, [sp, #4]
   1fe58:	cmp	r0, #0
   1fe5c:	beq	1fe90 <__assert_fail@plt+0xe75c>
   1fe60:	ldr	r0, [pc, #76]	; 1feb4 <__assert_fail@plt+0xe780>
   1fe64:	ldr	r1, [sp, #4]
   1fe68:	udiv	r0, r0, r1
   1fe6c:	ldr	r1, [sp, #8]
   1fe70:	cmp	r0, r1
   1fe74:	bcs	1fe90 <__assert_fail@plt+0xe75c>
   1fe78:	bl	115f0 <__errno_location@plt>
   1fe7c:	movw	r1, #12
   1fe80:	str	r1, [r0]
   1fe84:	movw	r0, #0
   1fe88:	str	r0, [fp, #-4]
   1fe8c:	b	1fea8 <__assert_fail@plt+0xe774>
   1fe90:	ldr	r0, [sp, #8]
   1fe94:	ldr	r1, [sp, #4]
   1fe98:	bl	11398 <calloc@plt>
   1fe9c:	str	r0, [sp]
   1fea0:	ldr	r0, [sp]
   1fea4:	str	r0, [fp, #-4]
   1fea8:	ldr	r0, [fp, #-4]
   1feac:	mov	sp, fp
   1feb0:	pop	{fp, pc}
   1feb4:	svcvc	0x00ffffff
   1feb8:	push	{fp, lr}
   1febc:	mov	fp, sp
   1fec0:	sub	sp, sp, #16
   1fec4:	str	r0, [sp, #8]
   1fec8:	ldr	r0, [sp, #8]
   1fecc:	cmp	r0, #0
   1fed0:	bne	1fedc <__assert_fail@plt+0xe7a8>
   1fed4:	movw	r0, #1
   1fed8:	str	r0, [sp, #8]
   1fedc:	ldr	r0, [pc, #64]	; 1ff24 <__assert_fail@plt+0xe7f0>
   1fee0:	ldr	r1, [sp, #8]
   1fee4:	cmp	r0, r1
   1fee8:	bcs	1ff04 <__assert_fail@plt+0xe7d0>
   1feec:	bl	115f0 <__errno_location@plt>
   1fef0:	movw	r1, #12
   1fef4:	str	r1, [r0]
   1fef8:	movw	r0, #0
   1fefc:	str	r0, [fp, #-4]
   1ff00:	b	1ff18 <__assert_fail@plt+0xe7e4>
   1ff04:	ldr	r0, [sp, #8]
   1ff08:	bl	11530 <malloc@plt>
   1ff0c:	str	r0, [sp, #4]
   1ff10:	ldr	r0, [sp, #4]
   1ff14:	str	r0, [fp, #-4]
   1ff18:	ldr	r0, [fp, #-4]
   1ff1c:	mov	sp, fp
   1ff20:	pop	{fp, pc}
   1ff24:	svcvc	0x00ffffff
   1ff28:	push	{fp, lr}
   1ff2c:	mov	fp, sp
   1ff30:	sub	sp, sp, #16
   1ff34:	str	r0, [sp, #8]
   1ff38:	str	r1, [sp, #4]
   1ff3c:	ldr	r0, [sp, #8]
   1ff40:	movw	r1, #0
   1ff44:	cmp	r0, r1
   1ff48:	bne	1ff5c <__assert_fail@plt+0xe828>
   1ff4c:	ldr	r0, [sp, #4]
   1ff50:	bl	1feb8 <__assert_fail@plt+0xe784>
   1ff54:	str	r0, [fp, #-4]
   1ff58:	b	1ffbc <__assert_fail@plt+0xe888>
   1ff5c:	ldr	r0, [sp, #4]
   1ff60:	cmp	r0, #0
   1ff64:	bne	1ff7c <__assert_fail@plt+0xe848>
   1ff68:	ldr	r0, [sp, #8]
   1ff6c:	bl	174e8 <__assert_fail@plt+0x5db4>
   1ff70:	movw	r0, #0
   1ff74:	str	r0, [fp, #-4]
   1ff78:	b	1ffbc <__assert_fail@plt+0xe888>
   1ff7c:	ldr	r0, [pc, #68]	; 1ffc8 <__assert_fail@plt+0xe894>
   1ff80:	ldr	r1, [sp, #4]
   1ff84:	cmp	r0, r1
   1ff88:	bcs	1ffa4 <__assert_fail@plt+0xe870>
   1ff8c:	bl	115f0 <__errno_location@plt>
   1ff90:	movw	r1, #12
   1ff94:	str	r1, [r0]
   1ff98:	movw	r0, #0
   1ff9c:	str	r0, [fp, #-4]
   1ffa0:	b	1ffbc <__assert_fail@plt+0xe888>
   1ffa4:	ldr	r0, [sp, #8]
   1ffa8:	ldr	r1, [sp, #4]
   1ffac:	bl	11470 <realloc@plt>
   1ffb0:	str	r0, [sp]
   1ffb4:	ldr	r0, [sp]
   1ffb8:	str	r0, [fp, #-4]
   1ffbc:	ldr	r0, [fp, #-4]
   1ffc0:	mov	sp, fp
   1ffc4:	pop	{fp, pc}
   1ffc8:	svcvc	0x00ffffff
   1ffcc:	push	{fp, lr}
   1ffd0:	mov	fp, sp
   1ffd4:	sub	sp, sp, #8
   1ffd8:	str	r0, [sp, #4]
   1ffdc:	ldr	r0, [sp, #4]
   1ffe0:	bl	174e8 <__assert_fail@plt+0x5db4>
   1ffe4:	mov	sp, fp
   1ffe8:	pop	{fp, pc}
   1ffec:	push	{fp, lr}
   1fff0:	mov	fp, sp
   1fff4:	sub	sp, sp, #8
   1fff8:	str	r0, [sp, #4]
   1fffc:	str	r1, [sp]
   20000:	ldr	r0, [sp, #4]
   20004:	mvn	r1, #0
   20008:	cmp	r1, r0
   2000c:	bcs	20018 <__assert_fail@plt+0xe8e4>
   20010:	mvn	r0, #0
   20014:	str	r0, [sp, #4]
   20018:	ldr	r0, [sp]
   2001c:	mvn	r1, #0
   20020:	cmp	r1, r0
   20024:	bcs	20030 <__assert_fail@plt+0xe8fc>
   20028:	mvn	r0, #0
   2002c:	str	r0, [sp]
   20030:	ldr	r0, [sp, #4]
   20034:	ldr	r1, [sp]
   20038:	bl	116e0 <aligned_alloc@plt>
   2003c:	mov	sp, fp
   20040:	pop	{fp, pc}
   20044:	sub	sp, sp, #8
   20048:	str	r0, [sp, #4]
   2004c:	str	r1, [sp]
   20050:	movw	r0, #0
   20054:	add	sp, sp, #8
   20058:	bx	lr
   2005c:	push	{fp, lr}
   20060:	mov	fp, sp
   20064:	sub	sp, sp, #8
   20068:	str	r0, [sp, #4]
   2006c:	str	r1, [sp]
   20070:	ldr	r0, [sp, #4]
   20074:	ldr	r1, [sp]
   20078:	bl	20044 <__assert_fail@plt+0xe910>
   2007c:	mov	sp, fp
   20080:	pop	{fp, pc}
   20084:	push	{fp, lr}
   20088:	mov	fp, sp
   2008c:	sub	sp, sp, #24
   20090:	str	r0, [fp, #-8]
   20094:	str	r1, [sp, #12]
   20098:	ldr	r0, [fp, #-8]
   2009c:	str	r0, [sp, #8]
   200a0:	ldr	r0, [sp, #12]
   200a4:	str	r0, [sp, #4]
   200a8:	ldr	r0, [sp, #8]
   200ac:	ldr	r1, [sp, #4]
   200b0:	cmp	r0, r1
   200b4:	bne	200c4 <__assert_fail@plt+0xe990>
   200b8:	movw	r0, #0
   200bc:	str	r0, [fp, #-4]
   200c0:	b	20130 <__assert_fail@plt+0xe9fc>
   200c4:	b	200c8 <__assert_fail@plt+0xe994>
   200c8:	ldr	r0, [sp, #8]
   200cc:	ldrb	r0, [r0]
   200d0:	bl	21e0c <__assert_fail@plt+0x106d8>
   200d4:	strb	r0, [sp, #3]
   200d8:	ldr	r0, [sp, #4]
   200dc:	ldrb	r0, [r0]
   200e0:	bl	21e0c <__assert_fail@plt+0x106d8>
   200e4:	strb	r0, [sp, #2]
   200e8:	ldrb	r0, [sp, #3]
   200ec:	cmp	r0, #0
   200f0:	bne	200f8 <__assert_fail@plt+0xe9c4>
   200f4:	b	20120 <__assert_fail@plt+0xe9ec>
   200f8:	ldr	r0, [sp, #8]
   200fc:	add	r0, r0, #1
   20100:	str	r0, [sp, #8]
   20104:	ldr	r0, [sp, #4]
   20108:	add	r0, r0, #1
   2010c:	str	r0, [sp, #4]
   20110:	ldrb	r0, [sp, #3]
   20114:	ldrb	r1, [sp, #2]
   20118:	cmp	r0, r1
   2011c:	beq	200c8 <__assert_fail@plt+0xe994>
   20120:	ldrb	r0, [sp, #3]
   20124:	ldrb	r1, [sp, #2]
   20128:	sub	r0, r0, r1
   2012c:	str	r0, [fp, #-4]
   20130:	ldr	r0, [fp, #-4]
   20134:	mov	sp, fp
   20138:	pop	{fp, pc}
   2013c:	push	{fp, lr}
   20140:	mov	fp, sp
   20144:	sub	sp, sp, #16
   20148:	str	r0, [sp, #8]
   2014c:	ldr	r0, [sp, #8]
   20150:	bl	114e8 <__fpending@plt>
   20154:	cmp	r0, #0
   20158:	movw	r0, #0
   2015c:	movne	r0, #1
   20160:	and	r0, r0, #1
   20164:	strb	r0, [sp, #7]
   20168:	ldr	r0, [sp, #8]
   2016c:	bl	114f4 <ferror_unlocked@plt>
   20170:	cmp	r0, #0
   20174:	movw	r0, #0
   20178:	movne	r0, #1
   2017c:	and	r0, r0, #1
   20180:	strb	r0, [sp, #6]
   20184:	ldr	r0, [sp, #8]
   20188:	bl	17228 <__assert_fail@plt+0x5af4>
   2018c:	cmp	r0, #0
   20190:	movw	r0, #0
   20194:	movne	r0, #1
   20198:	and	r0, r0, #1
   2019c:	strb	r0, [sp, #5]
   201a0:	ldrb	r0, [sp, #6]
   201a4:	tst	r0, #1
   201a8:	bne	201d4 <__assert_fail@plt+0xeaa0>
   201ac:	ldrb	r0, [sp, #5]
   201b0:	tst	r0, #1
   201b4:	beq	201f8 <__assert_fail@plt+0xeac4>
   201b8:	ldrb	r0, [sp, #7]
   201bc:	tst	r0, #1
   201c0:	bne	201d4 <__assert_fail@plt+0xeaa0>
   201c4:	bl	115f0 <__errno_location@plt>
   201c8:	ldr	r0, [r0]
   201cc:	cmp	r0, #9
   201d0:	beq	201f8 <__assert_fail@plt+0xeac4>
   201d4:	ldrb	r0, [sp, #5]
   201d8:	tst	r0, #1
   201dc:	bne	201ec <__assert_fail@plt+0xeab8>
   201e0:	bl	115f0 <__errno_location@plt>
   201e4:	movw	r1, #0
   201e8:	str	r1, [r0]
   201ec:	mvn	r0, #0
   201f0:	str	r0, [fp, #-4]
   201f4:	b	20200 <__assert_fail@plt+0xeacc>
   201f8:	movw	r0, #0
   201fc:	str	r0, [fp, #-4]
   20200:	ldr	r0, [fp, #-4]
   20204:	mov	sp, fp
   20208:	pop	{fp, pc}
   2020c:	push	{fp, lr}
   20210:	mov	fp, sp
   20214:	bl	115f0 <__errno_location@plt>
   20218:	movw	r1, #12
   2021c:	str	r1, [r0]
   20220:	movw	r0, #0
   20224:	pop	{fp, pc}
   20228:	push	{fp, lr}
   2022c:	mov	fp, sp
   20230:	sub	sp, sp, #8
   20234:	str	r0, [sp, #4]
   20238:	ldr	r0, [sp, #4]
   2023c:	cmn	r0, #1
   20240:	bhi	20254 <__assert_fail@plt+0xeb20>
   20244:	ldr	r0, [sp, #4]
   20248:	bl	1feb8 <__assert_fail@plt+0xe784>
   2024c:	str	r0, [sp]
   20250:	b	2025c <__assert_fail@plt+0xeb28>
   20254:	bl	2020c <__assert_fail@plt+0xead8>
   20258:	str	r0, [sp]
   2025c:	ldr	r0, [sp]
   20260:	mov	sp, fp
   20264:	pop	{fp, pc}
   20268:	push	{fp, lr}
   2026c:	mov	fp, sp
   20270:	sub	sp, sp, #16
   20274:	str	r0, [fp, #-4]
   20278:	str	r1, [sp, #8]
   2027c:	ldr	r0, [sp, #8]
   20280:	cmn	r0, #1
   20284:	bhi	202bc <__assert_fail@plt+0xeb88>
   20288:	ldr	r0, [fp, #-4]
   2028c:	ldr	r1, [sp, #8]
   20290:	ldr	r2, [sp, #8]
   20294:	cmp	r2, #0
   20298:	movw	r2, #0
   2029c:	movne	r2, #1
   202a0:	mvn	r3, #0
   202a4:	eor	r2, r2, r3
   202a8:	and	r2, r2, #1
   202ac:	orr	r1, r1, r2
   202b0:	bl	1ff28 <__assert_fail@plt+0xe7f4>
   202b4:	str	r0, [sp, #4]
   202b8:	b	202c4 <__assert_fail@plt+0xeb90>
   202bc:	bl	2020c <__assert_fail@plt+0xead8>
   202c0:	str	r0, [sp, #4]
   202c4:	ldr	r0, [sp, #4]
   202c8:	mov	sp, fp
   202cc:	pop	{fp, pc}
   202d0:	push	{fp, lr}
   202d4:	mov	fp, sp
   202d8:	sub	sp, sp, #16
   202dc:	str	r0, [sp, #8]
   202e0:	str	r1, [sp, #4]
   202e4:	ldr	r0, [sp, #8]
   202e8:	mvn	r1, #0
   202ec:	cmp	r1, r0
   202f0:	bcs	20314 <__assert_fail@plt+0xebe0>
   202f4:	ldr	r0, [sp, #4]
   202f8:	cmp	r0, #0
   202fc:	beq	2030c <__assert_fail@plt+0xebd8>
   20300:	bl	2020c <__assert_fail@plt+0xead8>
   20304:	str	r0, [fp, #-4]
   20308:	b	20354 <__assert_fail@plt+0xec20>
   2030c:	movw	r0, #0
   20310:	str	r0, [sp, #8]
   20314:	ldr	r0, [sp, #4]
   20318:	mvn	r1, #0
   2031c:	cmp	r1, r0
   20320:	bcs	20344 <__assert_fail@plt+0xec10>
   20324:	ldr	r0, [sp, #8]
   20328:	cmp	r0, #0
   2032c:	beq	2033c <__assert_fail@plt+0xec08>
   20330:	bl	2020c <__assert_fail@plt+0xead8>
   20334:	str	r0, [fp, #-4]
   20338:	b	20354 <__assert_fail@plt+0xec20>
   2033c:	movw	r0, #0
   20340:	str	r0, [sp, #4]
   20344:	ldr	r0, [sp, #8]
   20348:	ldr	r1, [sp, #4]
   2034c:	bl	1fe1c <__assert_fail@plt+0xe6e8>
   20350:	str	r0, [fp, #-4]
   20354:	ldr	r0, [fp, #-4]
   20358:	mov	sp, fp
   2035c:	pop	{fp, pc}
   20360:	push	{fp, lr}
   20364:	mov	fp, sp
   20368:	sub	sp, sp, #16
   2036c:	str	r0, [fp, #-4]
   20370:	str	r1, [sp, #8]
   20374:	str	r2, [sp, #4]
   20378:	ldr	r0, [sp, #8]
   2037c:	cmp	r0, #0
   20380:	beq	20390 <__assert_fail@plt+0xec5c>
   20384:	ldr	r0, [sp, #4]
   20388:	cmp	r0, #0
   2038c:	bne	2039c <__assert_fail@plt+0xec68>
   20390:	movw	r0, #1
   20394:	str	r0, [sp, #4]
   20398:	str	r0, [sp, #8]
   2039c:	ldr	r0, [sp, #8]
   203a0:	cmn	r0, #1
   203a4:	bhi	203cc <__assert_fail@plt+0xec98>
   203a8:	ldr	r0, [sp, #4]
   203ac:	cmn	r0, #1
   203b0:	bhi	203cc <__assert_fail@plt+0xec98>
   203b4:	ldr	r0, [fp, #-4]
   203b8:	ldr	r1, [sp, #8]
   203bc:	ldr	r2, [sp, #4]
   203c0:	bl	204ec <__assert_fail@plt+0xedb8>
   203c4:	str	r0, [sp]
   203c8:	b	203d4 <__assert_fail@plt+0xeca0>
   203cc:	bl	2020c <__assert_fail@plt+0xead8>
   203d0:	str	r0, [sp]
   203d4:	ldr	r0, [sp]
   203d8:	mov	sp, fp
   203dc:	pop	{fp, pc}
   203e0:	push	{fp, lr}
   203e4:	mov	fp, sp
   203e8:	sub	sp, sp, #8
   203ec:	movw	r0, #14
   203f0:	bl	116b0 <nl_langinfo@plt>
   203f4:	str	r0, [sp, #4]
   203f8:	ldr	r0, [sp, #4]
   203fc:	movw	r1, #0
   20400:	cmp	r0, r1
   20404:	bne	20414 <__assert_fail@plt+0xece0>
   20408:	movw	r0, #11333	; 0x2c45
   2040c:	movt	r0, #2
   20410:	str	r0, [sp, #4]
   20414:	ldr	r0, [sp, #4]
   20418:	ldrb	r0, [r0]
   2041c:	cmp	r0, #0
   20420:	bne	20430 <__assert_fail@plt+0xecfc>
   20424:	movw	r0, #15898	; 0x3e1a
   20428:	movt	r0, #2
   2042c:	str	r0, [sp, #4]
   20430:	ldr	r0, [sp, #4]
   20434:	mov	sp, fp
   20438:	pop	{fp, pc}
   2043c:	push	{fp, lr}
   20440:	mov	fp, sp
   20444:	sub	sp, sp, #32
   20448:	str	r0, [fp, #-8]
   2044c:	str	r1, [fp, #-12]
   20450:	str	r2, [sp, #16]
   20454:	str	r3, [sp, #12]
   20458:	ldr	r0, [fp, #-8]
   2045c:	movw	r1, #0
   20460:	cmp	r0, r1
   20464:	bne	20470 <__assert_fail@plt+0xed3c>
   20468:	add	r0, sp, #4
   2046c:	str	r0, [fp, #-8]
   20470:	ldr	r0, [fp, #-8]
   20474:	ldr	r1, [fp, #-12]
   20478:	ldr	r2, [sp, #16]
   2047c:	ldr	r3, [sp, #12]
   20480:	bl	11500 <mbrtowc@plt>
   20484:	str	r0, [sp, #8]
   20488:	ldr	r0, [sp, #8]
   2048c:	mvn	r1, #1
   20490:	cmp	r1, r0
   20494:	bhi	204d8 <__assert_fail@plt+0xeda4>
   20498:	ldr	r0, [sp, #16]
   2049c:	cmp	r0, #0
   204a0:	beq	204d8 <__assert_fail@plt+0xeda4>
   204a4:	movw	r0, #0
   204a8:	bl	22274 <__assert_fail@plt+0x10b40>
   204ac:	tst	r0, #1
   204b0:	bne	204d8 <__assert_fail@plt+0xeda4>
   204b4:	ldr	r0, [fp, #-12]
   204b8:	ldrb	r0, [r0]
   204bc:	strb	r0, [sp, #3]
   204c0:	ldrb	r0, [sp, #3]
   204c4:	ldr	r1, [fp, #-8]
   204c8:	str	r0, [r1]
   204cc:	movw	r0, #1
   204d0:	str	r0, [fp, #-4]
   204d4:	b	204e0 <__assert_fail@plt+0xedac>
   204d8:	ldr	r0, [sp, #8]
   204dc:	str	r0, [fp, #-4]
   204e0:	ldr	r0, [fp, #-4]
   204e4:	mov	sp, fp
   204e8:	pop	{fp, pc}
   204ec:	push	{fp, lr}
   204f0:	mov	fp, sp
   204f4:	sub	sp, sp, #96	; 0x60
   204f8:	str	r0, [fp, #-8]
   204fc:	str	r1, [fp, #-12]
   20500:	str	r2, [fp, #-16]
   20504:	b	208bc <__assert_fail@plt+0xf188>
   20508:	b	206dc <__assert_fail@plt+0xefa8>
   2050c:	ldr	r0, [fp, #-16]
   20510:	cmp	r0, #0
   20514:	bcs	20618 <__assert_fail@plt+0xeee4>
   20518:	ldr	r0, [fp, #-12]
   2051c:	cmp	r0, #0
   20520:	bcs	205a8 <__assert_fail@plt+0xee74>
   20524:	b	20544 <__assert_fail@plt+0xee10>
   20528:	ldr	r0, [fp, #-12]
   2052c:	ldr	r1, [fp, #-16]
   20530:	movw	r2, #127	; 0x7f
   20534:	udiv	r1, r2, r1
   20538:	cmp	r0, r1
   2053c:	bcc	206ac <__assert_fail@plt+0xef78>
   20540:	b	206c4 <__assert_fail@plt+0xef90>
   20544:	b	20558 <__assert_fail@plt+0xee24>
   20548:	ldr	r0, [fp, #-16]
   2054c:	cmp	r0, #1
   20550:	bcc	20568 <__assert_fail@plt+0xee34>
   20554:	b	20574 <__assert_fail@plt+0xee40>
   20558:	ldr	r0, [fp, #-16]
   2055c:	movw	r1, #0
   20560:	cmp	r1, r0
   20564:	bcs	20574 <__assert_fail@plt+0xee40>
   20568:	movw	r0, #0
   2056c:	str	r0, [fp, #-24]	; 0xffffffe8
   20570:	b	2058c <__assert_fail@plt+0xee58>
   20574:	ldr	r0, [fp, #-16]
   20578:	movw	r1, #0
   2057c:	sub	r0, r1, r0
   20580:	movw	r1, #127	; 0x7f
   20584:	udiv	r0, r1, r0
   20588:	str	r0, [fp, #-24]	; 0xffffffe8
   2058c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20590:	ldr	r1, [fp, #-12]
   20594:	mvn	r2, #0
   20598:	sub	r1, r2, r1
   2059c:	cmp	r0, r1
   205a0:	bls	206ac <__assert_fail@plt+0xef78>
   205a4:	b	206c4 <__assert_fail@plt+0xef90>
   205a8:	ldr	r0, [fp, #-16]
   205ac:	cmn	r0, #1
   205b0:	bne	205fc <__assert_fail@plt+0xeec8>
   205b4:	b	205d4 <__assert_fail@plt+0xeea0>
   205b8:	ldr	r0, [fp, #-12]
   205bc:	mvn	r1, #127	; 0x7f
   205c0:	add	r0, r0, r1
   205c4:	movw	r1, #0
   205c8:	cmp	r1, r0
   205cc:	bcc	206ac <__assert_fail@plt+0xef78>
   205d0:	b	206c4 <__assert_fail@plt+0xef90>
   205d4:	ldr	r0, [fp, #-12]
   205d8:	movw	r1, #0
   205dc:	cmp	r1, r0
   205e0:	bcs	206c4 <__assert_fail@plt+0xef90>
   205e4:	ldr	r0, [fp, #-12]
   205e8:	sub	r0, r0, #1
   205ec:	movw	r1, #127	; 0x7f
   205f0:	cmp	r1, r0
   205f4:	bcc	206ac <__assert_fail@plt+0xef78>
   205f8:	b	206c4 <__assert_fail@plt+0xef90>
   205fc:	ldr	r0, [fp, #-16]
   20600:	mvn	r1, #127	; 0x7f
   20604:	udiv	r0, r1, r0
   20608:	ldr	r1, [fp, #-12]
   2060c:	cmp	r0, r1
   20610:	bcc	206ac <__assert_fail@plt+0xef78>
   20614:	b	206c4 <__assert_fail@plt+0xef90>
   20618:	ldr	r0, [fp, #-16]
   2061c:	cmp	r0, #0
   20620:	bne	20628 <__assert_fail@plt+0xeef4>
   20624:	b	206c4 <__assert_fail@plt+0xef90>
   20628:	ldr	r0, [fp, #-12]
   2062c:	cmp	r0, #0
   20630:	bcs	20694 <__assert_fail@plt+0xef60>
   20634:	ldr	r0, [fp, #-12]
   20638:	cmn	r0, #1
   2063c:	bne	20678 <__assert_fail@plt+0xef44>
   20640:	b	20660 <__assert_fail@plt+0xef2c>
   20644:	ldr	r0, [fp, #-16]
   20648:	mvn	r1, #127	; 0x7f
   2064c:	add	r0, r0, r1
   20650:	movw	r1, #0
   20654:	cmp	r1, r0
   20658:	bcc	206ac <__assert_fail@plt+0xef78>
   2065c:	b	206c4 <__assert_fail@plt+0xef90>
   20660:	ldr	r0, [fp, #-16]
   20664:	sub	r0, r0, #1
   20668:	movw	r1, #127	; 0x7f
   2066c:	cmp	r1, r0
   20670:	bcc	206ac <__assert_fail@plt+0xef78>
   20674:	b	206c4 <__assert_fail@plt+0xef90>
   20678:	ldr	r0, [fp, #-12]
   2067c:	mvn	r1, #127	; 0x7f
   20680:	udiv	r0, r1, r0
   20684:	ldr	r1, [fp, #-16]
   20688:	cmp	r0, r1
   2068c:	bcc	206ac <__assert_fail@plt+0xef78>
   20690:	b	206c4 <__assert_fail@plt+0xef90>
   20694:	ldr	r0, [fp, #-16]
   20698:	movw	r1, #127	; 0x7f
   2069c:	udiv	r0, r1, r0
   206a0:	ldr	r1, [fp, #-12]
   206a4:	cmp	r0, r1
   206a8:	bcs	206c4 <__assert_fail@plt+0xef90>
   206ac:	ldr	r0, [fp, #-12]
   206b0:	ldr	r1, [fp, #-16]
   206b4:	mul	r0, r0, r1
   206b8:	sxtb	r0, r0
   206bc:	str	r0, [fp, #-20]	; 0xffffffec
   206c0:	b	217ec <__assert_fail@plt+0x100b8>
   206c4:	ldr	r0, [fp, #-12]
   206c8:	ldr	r1, [fp, #-16]
   206cc:	mul	r0, r0, r1
   206d0:	sxtb	r0, r0
   206d4:	str	r0, [fp, #-20]	; 0xffffffec
   206d8:	b	21804 <__assert_fail@plt+0x100d0>
   206dc:	ldr	r0, [fp, #-16]
   206e0:	cmp	r0, #0
   206e4:	bcs	207f0 <__assert_fail@plt+0xf0bc>
   206e8:	ldr	r0, [fp, #-12]
   206ec:	cmp	r0, #0
   206f0:	bcs	20778 <__assert_fail@plt+0xf044>
   206f4:	b	20714 <__assert_fail@plt+0xefe0>
   206f8:	ldr	r0, [fp, #-12]
   206fc:	ldr	r1, [fp, #-16]
   20700:	movw	r2, #255	; 0xff
   20704:	udiv	r1, r2, r1
   20708:	cmp	r0, r1
   2070c:	bcc	2088c <__assert_fail@plt+0xf158>
   20710:	b	208a4 <__assert_fail@plt+0xf170>
   20714:	b	20728 <__assert_fail@plt+0xeff4>
   20718:	ldr	r0, [fp, #-16]
   2071c:	cmp	r0, #1
   20720:	bcc	20738 <__assert_fail@plt+0xf004>
   20724:	b	20744 <__assert_fail@plt+0xf010>
   20728:	ldr	r0, [fp, #-16]
   2072c:	movw	r1, #0
   20730:	cmp	r1, r0
   20734:	bcs	20744 <__assert_fail@plt+0xf010>
   20738:	movw	r0, #0
   2073c:	str	r0, [fp, #-28]	; 0xffffffe4
   20740:	b	2075c <__assert_fail@plt+0xf028>
   20744:	ldr	r0, [fp, #-16]
   20748:	movw	r1, #0
   2074c:	sub	r0, r1, r0
   20750:	movw	r1, #255	; 0xff
   20754:	udiv	r0, r1, r0
   20758:	str	r0, [fp, #-28]	; 0xffffffe4
   2075c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20760:	ldr	r1, [fp, #-12]
   20764:	mvn	r2, #0
   20768:	sub	r1, r2, r1
   2076c:	cmp	r0, r1
   20770:	bls	2088c <__assert_fail@plt+0xf158>
   20774:	b	208a4 <__assert_fail@plt+0xf170>
   20778:	b	20780 <__assert_fail@plt+0xf04c>
   2077c:	b	20784 <__assert_fail@plt+0xf050>
   20780:	b	207d4 <__assert_fail@plt+0xf0a0>
   20784:	ldr	r0, [fp, #-16]
   20788:	cmn	r0, #1
   2078c:	bne	207d4 <__assert_fail@plt+0xf0a0>
   20790:	b	207ac <__assert_fail@plt+0xf078>
   20794:	ldr	r0, [fp, #-12]
   20798:	add	r0, r0, #0
   2079c:	movw	r1, #0
   207a0:	cmp	r1, r0
   207a4:	bcc	2088c <__assert_fail@plt+0xf158>
   207a8:	b	208a4 <__assert_fail@plt+0xf170>
   207ac:	ldr	r0, [fp, #-12]
   207b0:	movw	r1, #0
   207b4:	cmp	r1, r0
   207b8:	bcs	208a4 <__assert_fail@plt+0xf170>
   207bc:	ldr	r0, [fp, #-12]
   207c0:	sub	r0, r0, #1
   207c4:	mvn	r1, #0
   207c8:	cmp	r1, r0
   207cc:	bcc	2088c <__assert_fail@plt+0xf158>
   207d0:	b	208a4 <__assert_fail@plt+0xf170>
   207d4:	ldr	r0, [fp, #-16]
   207d8:	movw	r1, #0
   207dc:	udiv	r0, r1, r0
   207e0:	ldr	r1, [fp, #-12]
   207e4:	cmp	r0, r1
   207e8:	bcc	2088c <__assert_fail@plt+0xf158>
   207ec:	b	208a4 <__assert_fail@plt+0xf170>
   207f0:	ldr	r0, [fp, #-16]
   207f4:	cmp	r0, #0
   207f8:	bne	20800 <__assert_fail@plt+0xf0cc>
   207fc:	b	208a4 <__assert_fail@plt+0xf170>
   20800:	ldr	r0, [fp, #-12]
   20804:	cmp	r0, #0
   20808:	bcs	20874 <__assert_fail@plt+0xf140>
   2080c:	b	20814 <__assert_fail@plt+0xf0e0>
   20810:	b	20818 <__assert_fail@plt+0xf0e4>
   20814:	b	20858 <__assert_fail@plt+0xf124>
   20818:	ldr	r0, [fp, #-12]
   2081c:	cmn	r0, #1
   20820:	bne	20858 <__assert_fail@plt+0xf124>
   20824:	b	20840 <__assert_fail@plt+0xf10c>
   20828:	ldr	r0, [fp, #-16]
   2082c:	add	r0, r0, #0
   20830:	movw	r1, #0
   20834:	cmp	r1, r0
   20838:	bcc	2088c <__assert_fail@plt+0xf158>
   2083c:	b	208a4 <__assert_fail@plt+0xf170>
   20840:	ldr	r0, [fp, #-16]
   20844:	sub	r0, r0, #1
   20848:	mvn	r1, #0
   2084c:	cmp	r1, r0
   20850:	bcc	2088c <__assert_fail@plt+0xf158>
   20854:	b	208a4 <__assert_fail@plt+0xf170>
   20858:	ldr	r0, [fp, #-12]
   2085c:	movw	r1, #0
   20860:	udiv	r0, r1, r0
   20864:	ldr	r1, [fp, #-16]
   20868:	cmp	r0, r1
   2086c:	bcc	2088c <__assert_fail@plt+0xf158>
   20870:	b	208a4 <__assert_fail@plt+0xf170>
   20874:	ldr	r0, [fp, #-16]
   20878:	movw	r1, #255	; 0xff
   2087c:	udiv	r0, r1, r0
   20880:	ldr	r1, [fp, #-12]
   20884:	cmp	r0, r1
   20888:	bcs	208a4 <__assert_fail@plt+0xf170>
   2088c:	ldr	r0, [fp, #-12]
   20890:	ldr	r1, [fp, #-16]
   20894:	mul	r0, r0, r1
   20898:	and	r0, r0, #255	; 0xff
   2089c:	str	r0, [fp, #-20]	; 0xffffffec
   208a0:	b	217ec <__assert_fail@plt+0x100b8>
   208a4:	ldr	r0, [fp, #-12]
   208a8:	ldr	r1, [fp, #-16]
   208ac:	mul	r0, r0, r1
   208b0:	and	r0, r0, #255	; 0xff
   208b4:	str	r0, [fp, #-20]	; 0xffffffec
   208b8:	b	21804 <__assert_fail@plt+0x100d0>
   208bc:	b	20c74 <__assert_fail@plt+0xf540>
   208c0:	b	20a94 <__assert_fail@plt+0xf360>
   208c4:	ldr	r0, [fp, #-16]
   208c8:	cmp	r0, #0
   208cc:	bcs	209d0 <__assert_fail@plt+0xf29c>
   208d0:	ldr	r0, [fp, #-12]
   208d4:	cmp	r0, #0
   208d8:	bcs	20960 <__assert_fail@plt+0xf22c>
   208dc:	b	208fc <__assert_fail@plt+0xf1c8>
   208e0:	ldr	r0, [fp, #-12]
   208e4:	ldr	r1, [fp, #-16]
   208e8:	movw	r2, #32767	; 0x7fff
   208ec:	udiv	r1, r2, r1
   208f0:	cmp	r0, r1
   208f4:	bcc	20a64 <__assert_fail@plt+0xf330>
   208f8:	b	20a7c <__assert_fail@plt+0xf348>
   208fc:	b	20910 <__assert_fail@plt+0xf1dc>
   20900:	ldr	r0, [fp, #-16]
   20904:	cmp	r0, #1
   20908:	bcc	20920 <__assert_fail@plt+0xf1ec>
   2090c:	b	2092c <__assert_fail@plt+0xf1f8>
   20910:	ldr	r0, [fp, #-16]
   20914:	movw	r1, #0
   20918:	cmp	r1, r0
   2091c:	bcs	2092c <__assert_fail@plt+0xf1f8>
   20920:	movw	r0, #0
   20924:	str	r0, [fp, #-32]	; 0xffffffe0
   20928:	b	20944 <__assert_fail@plt+0xf210>
   2092c:	ldr	r0, [fp, #-16]
   20930:	movw	r1, #0
   20934:	sub	r0, r1, r0
   20938:	movw	r1, #32767	; 0x7fff
   2093c:	udiv	r0, r1, r0
   20940:	str	r0, [fp, #-32]	; 0xffffffe0
   20944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20948:	ldr	r1, [fp, #-12]
   2094c:	mvn	r2, #0
   20950:	sub	r1, r2, r1
   20954:	cmp	r0, r1
   20958:	bls	20a64 <__assert_fail@plt+0xf330>
   2095c:	b	20a7c <__assert_fail@plt+0xf348>
   20960:	ldr	r0, [fp, #-16]
   20964:	cmn	r0, #1
   20968:	bne	209b4 <__assert_fail@plt+0xf280>
   2096c:	b	2098c <__assert_fail@plt+0xf258>
   20970:	ldr	r0, [pc, #3760]	; 21828 <__assert_fail@plt+0x100f4>
   20974:	ldr	r1, [fp, #-12]
   20978:	add	r0, r1, r0
   2097c:	movw	r1, #0
   20980:	cmp	r1, r0
   20984:	bcc	20a64 <__assert_fail@plt+0xf330>
   20988:	b	20a7c <__assert_fail@plt+0xf348>
   2098c:	ldr	r0, [fp, #-12]
   20990:	movw	r1, #0
   20994:	cmp	r1, r0
   20998:	bcs	20a7c <__assert_fail@plt+0xf348>
   2099c:	ldr	r0, [fp, #-12]
   209a0:	sub	r0, r0, #1
   209a4:	movw	r1, #32767	; 0x7fff
   209a8:	cmp	r1, r0
   209ac:	bcc	20a64 <__assert_fail@plt+0xf330>
   209b0:	b	20a7c <__assert_fail@plt+0xf348>
   209b4:	ldr	r0, [pc, #3692]	; 21828 <__assert_fail@plt+0x100f4>
   209b8:	ldr	r1, [fp, #-16]
   209bc:	udiv	r0, r0, r1
   209c0:	ldr	r1, [fp, #-12]
   209c4:	cmp	r0, r1
   209c8:	bcc	20a64 <__assert_fail@plt+0xf330>
   209cc:	b	20a7c <__assert_fail@plt+0xf348>
   209d0:	ldr	r0, [fp, #-16]
   209d4:	cmp	r0, #0
   209d8:	bne	209e0 <__assert_fail@plt+0xf2ac>
   209dc:	b	20a7c <__assert_fail@plt+0xf348>
   209e0:	ldr	r0, [fp, #-12]
   209e4:	cmp	r0, #0
   209e8:	bcs	20a4c <__assert_fail@plt+0xf318>
   209ec:	ldr	r0, [fp, #-12]
   209f0:	cmn	r0, #1
   209f4:	bne	20a30 <__assert_fail@plt+0xf2fc>
   209f8:	b	20a18 <__assert_fail@plt+0xf2e4>
   209fc:	ldr	r0, [pc, #3620]	; 21828 <__assert_fail@plt+0x100f4>
   20a00:	ldr	r1, [fp, #-16]
   20a04:	add	r0, r1, r0
   20a08:	movw	r1, #0
   20a0c:	cmp	r1, r0
   20a10:	bcc	20a64 <__assert_fail@plt+0xf330>
   20a14:	b	20a7c <__assert_fail@plt+0xf348>
   20a18:	ldr	r0, [fp, #-16]
   20a1c:	sub	r0, r0, #1
   20a20:	movw	r1, #32767	; 0x7fff
   20a24:	cmp	r1, r0
   20a28:	bcc	20a64 <__assert_fail@plt+0xf330>
   20a2c:	b	20a7c <__assert_fail@plt+0xf348>
   20a30:	ldr	r0, [pc, #3568]	; 21828 <__assert_fail@plt+0x100f4>
   20a34:	ldr	r1, [fp, #-12]
   20a38:	udiv	r0, r0, r1
   20a3c:	ldr	r1, [fp, #-16]
   20a40:	cmp	r0, r1
   20a44:	bcc	20a64 <__assert_fail@plt+0xf330>
   20a48:	b	20a7c <__assert_fail@plt+0xf348>
   20a4c:	ldr	r0, [fp, #-16]
   20a50:	movw	r1, #32767	; 0x7fff
   20a54:	udiv	r0, r1, r0
   20a58:	ldr	r1, [fp, #-12]
   20a5c:	cmp	r0, r1
   20a60:	bcs	20a7c <__assert_fail@plt+0xf348>
   20a64:	ldr	r0, [fp, #-12]
   20a68:	ldr	r1, [fp, #-16]
   20a6c:	mul	r0, r0, r1
   20a70:	sxth	r0, r0
   20a74:	str	r0, [fp, #-20]	; 0xffffffec
   20a78:	b	217ec <__assert_fail@plt+0x100b8>
   20a7c:	ldr	r0, [fp, #-12]
   20a80:	ldr	r1, [fp, #-16]
   20a84:	mul	r0, r0, r1
   20a88:	sxth	r0, r0
   20a8c:	str	r0, [fp, #-20]	; 0xffffffec
   20a90:	b	21804 <__assert_fail@plt+0x100d0>
   20a94:	ldr	r0, [fp, #-16]
   20a98:	cmp	r0, #0
   20a9c:	bcs	20ba8 <__assert_fail@plt+0xf474>
   20aa0:	ldr	r0, [fp, #-12]
   20aa4:	cmp	r0, #0
   20aa8:	bcs	20b30 <__assert_fail@plt+0xf3fc>
   20aac:	b	20acc <__assert_fail@plt+0xf398>
   20ab0:	ldr	r0, [fp, #-12]
   20ab4:	ldr	r1, [fp, #-16]
   20ab8:	movw	r2, #65535	; 0xffff
   20abc:	udiv	r1, r2, r1
   20ac0:	cmp	r0, r1
   20ac4:	bcc	20c44 <__assert_fail@plt+0xf510>
   20ac8:	b	20c5c <__assert_fail@plt+0xf528>
   20acc:	b	20ae0 <__assert_fail@plt+0xf3ac>
   20ad0:	ldr	r0, [fp, #-16]
   20ad4:	cmp	r0, #1
   20ad8:	bcc	20af0 <__assert_fail@plt+0xf3bc>
   20adc:	b	20afc <__assert_fail@plt+0xf3c8>
   20ae0:	ldr	r0, [fp, #-16]
   20ae4:	movw	r1, #0
   20ae8:	cmp	r1, r0
   20aec:	bcs	20afc <__assert_fail@plt+0xf3c8>
   20af0:	movw	r0, #0
   20af4:	str	r0, [fp, #-36]	; 0xffffffdc
   20af8:	b	20b14 <__assert_fail@plt+0xf3e0>
   20afc:	ldr	r0, [fp, #-16]
   20b00:	movw	r1, #0
   20b04:	sub	r0, r1, r0
   20b08:	movw	r1, #65535	; 0xffff
   20b0c:	udiv	r0, r1, r0
   20b10:	str	r0, [fp, #-36]	; 0xffffffdc
   20b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20b18:	ldr	r1, [fp, #-12]
   20b1c:	mvn	r2, #0
   20b20:	sub	r1, r2, r1
   20b24:	cmp	r0, r1
   20b28:	bls	20c44 <__assert_fail@plt+0xf510>
   20b2c:	b	20c5c <__assert_fail@plt+0xf528>
   20b30:	b	20b38 <__assert_fail@plt+0xf404>
   20b34:	b	20b3c <__assert_fail@plt+0xf408>
   20b38:	b	20b8c <__assert_fail@plt+0xf458>
   20b3c:	ldr	r0, [fp, #-16]
   20b40:	cmn	r0, #1
   20b44:	bne	20b8c <__assert_fail@plt+0xf458>
   20b48:	b	20b64 <__assert_fail@plt+0xf430>
   20b4c:	ldr	r0, [fp, #-12]
   20b50:	add	r0, r0, #0
   20b54:	movw	r1, #0
   20b58:	cmp	r1, r0
   20b5c:	bcc	20c44 <__assert_fail@plt+0xf510>
   20b60:	b	20c5c <__assert_fail@plt+0xf528>
   20b64:	ldr	r0, [fp, #-12]
   20b68:	movw	r1, #0
   20b6c:	cmp	r1, r0
   20b70:	bcs	20c5c <__assert_fail@plt+0xf528>
   20b74:	ldr	r0, [fp, #-12]
   20b78:	sub	r0, r0, #1
   20b7c:	mvn	r1, #0
   20b80:	cmp	r1, r0
   20b84:	bcc	20c44 <__assert_fail@plt+0xf510>
   20b88:	b	20c5c <__assert_fail@plt+0xf528>
   20b8c:	ldr	r0, [fp, #-16]
   20b90:	movw	r1, #0
   20b94:	udiv	r0, r1, r0
   20b98:	ldr	r1, [fp, #-12]
   20b9c:	cmp	r0, r1
   20ba0:	bcc	20c44 <__assert_fail@plt+0xf510>
   20ba4:	b	20c5c <__assert_fail@plt+0xf528>
   20ba8:	ldr	r0, [fp, #-16]
   20bac:	cmp	r0, #0
   20bb0:	bne	20bb8 <__assert_fail@plt+0xf484>
   20bb4:	b	20c5c <__assert_fail@plt+0xf528>
   20bb8:	ldr	r0, [fp, #-12]
   20bbc:	cmp	r0, #0
   20bc0:	bcs	20c2c <__assert_fail@plt+0xf4f8>
   20bc4:	b	20bcc <__assert_fail@plt+0xf498>
   20bc8:	b	20bd0 <__assert_fail@plt+0xf49c>
   20bcc:	b	20c10 <__assert_fail@plt+0xf4dc>
   20bd0:	ldr	r0, [fp, #-12]
   20bd4:	cmn	r0, #1
   20bd8:	bne	20c10 <__assert_fail@plt+0xf4dc>
   20bdc:	b	20bf8 <__assert_fail@plt+0xf4c4>
   20be0:	ldr	r0, [fp, #-16]
   20be4:	add	r0, r0, #0
   20be8:	movw	r1, #0
   20bec:	cmp	r1, r0
   20bf0:	bcc	20c44 <__assert_fail@plt+0xf510>
   20bf4:	b	20c5c <__assert_fail@plt+0xf528>
   20bf8:	ldr	r0, [fp, #-16]
   20bfc:	sub	r0, r0, #1
   20c00:	mvn	r1, #0
   20c04:	cmp	r1, r0
   20c08:	bcc	20c44 <__assert_fail@plt+0xf510>
   20c0c:	b	20c5c <__assert_fail@plt+0xf528>
   20c10:	ldr	r0, [fp, #-12]
   20c14:	movw	r1, #0
   20c18:	udiv	r0, r1, r0
   20c1c:	ldr	r1, [fp, #-16]
   20c20:	cmp	r0, r1
   20c24:	bcc	20c44 <__assert_fail@plt+0xf510>
   20c28:	b	20c5c <__assert_fail@plt+0xf528>
   20c2c:	ldr	r0, [fp, #-16]
   20c30:	movw	r1, #65535	; 0xffff
   20c34:	udiv	r0, r1, r0
   20c38:	ldr	r1, [fp, #-12]
   20c3c:	cmp	r0, r1
   20c40:	bcs	20c5c <__assert_fail@plt+0xf528>
   20c44:	ldr	r0, [fp, #-12]
   20c48:	ldr	r1, [fp, #-16]
   20c4c:	mul	r0, r0, r1
   20c50:	uxth	r0, r0
   20c54:	str	r0, [fp, #-20]	; 0xffffffec
   20c58:	b	217ec <__assert_fail@plt+0x100b8>
   20c5c:	ldr	r0, [fp, #-12]
   20c60:	ldr	r1, [fp, #-16]
   20c64:	mul	r0, r0, r1
   20c68:	uxth	r0, r0
   20c6c:	str	r0, [fp, #-20]	; 0xffffffec
   20c70:	b	21804 <__assert_fail@plt+0x100d0>
   20c74:	b	20c78 <__assert_fail@plt+0xf544>
   20c78:	b	20e3c <__assert_fail@plt+0xf708>
   20c7c:	ldr	r0, [fp, #-16]
   20c80:	cmp	r0, #0
   20c84:	bcs	20d84 <__assert_fail@plt+0xf650>
   20c88:	ldr	r0, [fp, #-12]
   20c8c:	cmp	r0, #0
   20c90:	bcs	20d18 <__assert_fail@plt+0xf5e4>
   20c94:	b	20cb4 <__assert_fail@plt+0xf580>
   20c98:	ldr	r0, [pc, #2944]	; 21820 <__assert_fail@plt+0x100ec>
   20c9c:	ldr	r1, [fp, #-12]
   20ca0:	ldr	r2, [fp, #-16]
   20ca4:	udiv	r0, r0, r2
   20ca8:	cmp	r1, r0
   20cac:	bcc	20e14 <__assert_fail@plt+0xf6e0>
   20cb0:	b	20e28 <__assert_fail@plt+0xf6f4>
   20cb4:	b	20cc8 <__assert_fail@plt+0xf594>
   20cb8:	ldr	r0, [fp, #-16]
   20cbc:	cmp	r0, #1
   20cc0:	bcc	20cd8 <__assert_fail@plt+0xf5a4>
   20cc4:	b	20ce4 <__assert_fail@plt+0xf5b0>
   20cc8:	ldr	r0, [fp, #-16]
   20ccc:	movw	r1, #0
   20cd0:	cmp	r1, r0
   20cd4:	bcs	20ce4 <__assert_fail@plt+0xf5b0>
   20cd8:	movw	r0, #0
   20cdc:	str	r0, [fp, #-40]	; 0xffffffd8
   20ce0:	b	20cfc <__assert_fail@plt+0xf5c8>
   20ce4:	ldr	r0, [pc, #2868]	; 21820 <__assert_fail@plt+0x100ec>
   20ce8:	ldr	r1, [fp, #-16]
   20cec:	movw	r2, #0
   20cf0:	sub	r1, r2, r1
   20cf4:	udiv	r0, r0, r1
   20cf8:	str	r0, [fp, #-40]	; 0xffffffd8
   20cfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d00:	ldr	r1, [fp, #-12]
   20d04:	mvn	r2, #0
   20d08:	sub	r1, r2, r1
   20d0c:	cmp	r0, r1
   20d10:	bls	20e14 <__assert_fail@plt+0xf6e0>
   20d14:	b	20e28 <__assert_fail@plt+0xf6f4>
   20d18:	ldr	r0, [fp, #-16]
   20d1c:	cmn	r0, #1
   20d20:	bne	20d68 <__assert_fail@plt+0xf634>
   20d24:	b	20d40 <__assert_fail@plt+0xf60c>
   20d28:	ldr	r0, [fp, #-12]
   20d2c:	add	r0, r0, #-2147483648	; 0x80000000
   20d30:	movw	r1, #0
   20d34:	cmp	r1, r0
   20d38:	bcc	20e14 <__assert_fail@plt+0xf6e0>
   20d3c:	b	20e28 <__assert_fail@plt+0xf6f4>
   20d40:	ldr	r0, [fp, #-12]
   20d44:	movw	r1, #0
   20d48:	cmp	r1, r0
   20d4c:	bcs	20e28 <__assert_fail@plt+0xf6f4>
   20d50:	ldr	r0, [pc, #2760]	; 21820 <__assert_fail@plt+0x100ec>
   20d54:	ldr	r1, [fp, #-12]
   20d58:	sub	r1, r1, #1
   20d5c:	cmp	r0, r1
   20d60:	bcc	20e14 <__assert_fail@plt+0xf6e0>
   20d64:	b	20e28 <__assert_fail@plt+0xf6f4>
   20d68:	ldr	r0, [pc, #2740]	; 21824 <__assert_fail@plt+0x100f0>
   20d6c:	ldr	r1, [fp, #-16]
   20d70:	udiv	r0, r0, r1
   20d74:	ldr	r1, [fp, #-12]
   20d78:	cmp	r0, r1
   20d7c:	bcc	20e14 <__assert_fail@plt+0xf6e0>
   20d80:	b	20e28 <__assert_fail@plt+0xf6f4>
   20d84:	ldr	r0, [fp, #-16]
   20d88:	cmp	r0, #0
   20d8c:	bne	20d94 <__assert_fail@plt+0xf660>
   20d90:	b	20e28 <__assert_fail@plt+0xf6f4>
   20d94:	ldr	r0, [fp, #-12]
   20d98:	cmp	r0, #0
   20d9c:	bcs	20dfc <__assert_fail@plt+0xf6c8>
   20da0:	ldr	r0, [fp, #-12]
   20da4:	cmn	r0, #1
   20da8:	bne	20de0 <__assert_fail@plt+0xf6ac>
   20dac:	b	20dc8 <__assert_fail@plt+0xf694>
   20db0:	ldr	r0, [fp, #-16]
   20db4:	add	r0, r0, #-2147483648	; 0x80000000
   20db8:	movw	r1, #0
   20dbc:	cmp	r1, r0
   20dc0:	bcc	20e14 <__assert_fail@plt+0xf6e0>
   20dc4:	b	20e28 <__assert_fail@plt+0xf6f4>
   20dc8:	ldr	r0, [pc, #2640]	; 21820 <__assert_fail@plt+0x100ec>
   20dcc:	ldr	r1, [fp, #-16]
   20dd0:	sub	r1, r1, #1
   20dd4:	cmp	r0, r1
   20dd8:	bcc	20e14 <__assert_fail@plt+0xf6e0>
   20ddc:	b	20e28 <__assert_fail@plt+0xf6f4>
   20de0:	ldr	r0, [pc, #2620]	; 21824 <__assert_fail@plt+0x100f0>
   20de4:	ldr	r1, [fp, #-12]
   20de8:	udiv	r0, r0, r1
   20dec:	ldr	r1, [fp, #-16]
   20df0:	cmp	r0, r1
   20df4:	bcc	20e14 <__assert_fail@plt+0xf6e0>
   20df8:	b	20e28 <__assert_fail@plt+0xf6f4>
   20dfc:	ldr	r0, [pc, #2588]	; 21820 <__assert_fail@plt+0x100ec>
   20e00:	ldr	r1, [fp, #-16]
   20e04:	udiv	r0, r0, r1
   20e08:	ldr	r1, [fp, #-12]
   20e0c:	cmp	r0, r1
   20e10:	bcs	20e28 <__assert_fail@plt+0xf6f4>
   20e14:	ldr	r0, [fp, #-12]
   20e18:	ldr	r1, [fp, #-16]
   20e1c:	mul	r0, r0, r1
   20e20:	str	r0, [fp, #-20]	; 0xffffffec
   20e24:	b	217ec <__assert_fail@plt+0x100b8>
   20e28:	ldr	r0, [fp, #-12]
   20e2c:	ldr	r1, [fp, #-16]
   20e30:	mul	r0, r0, r1
   20e34:	str	r0, [fp, #-20]	; 0xffffffec
   20e38:	b	21804 <__assert_fail@plt+0x100d0>
   20e3c:	ldr	r0, [fp, #-16]
   20e40:	cmp	r0, #0
   20e44:	bcs	20f50 <__assert_fail@plt+0xf81c>
   20e48:	ldr	r0, [fp, #-12]
   20e4c:	cmp	r0, #0
   20e50:	bcs	20ed8 <__assert_fail@plt+0xf7a4>
   20e54:	b	20e74 <__assert_fail@plt+0xf740>
   20e58:	ldr	r0, [fp, #-12]
   20e5c:	ldr	r1, [fp, #-16]
   20e60:	mvn	r2, #0
   20e64:	udiv	r1, r2, r1
   20e68:	cmp	r0, r1
   20e6c:	bcc	20fec <__assert_fail@plt+0xf8b8>
   20e70:	b	21000 <__assert_fail@plt+0xf8cc>
   20e74:	b	20e88 <__assert_fail@plt+0xf754>
   20e78:	ldr	r0, [fp, #-16]
   20e7c:	cmp	r0, #1
   20e80:	bcc	20e98 <__assert_fail@plt+0xf764>
   20e84:	b	20ea4 <__assert_fail@plt+0xf770>
   20e88:	ldr	r0, [fp, #-16]
   20e8c:	movw	r1, #0
   20e90:	cmp	r1, r0
   20e94:	bcs	20ea4 <__assert_fail@plt+0xf770>
   20e98:	movw	r0, #1
   20e9c:	str	r0, [fp, #-44]	; 0xffffffd4
   20ea0:	b	20ebc <__assert_fail@plt+0xf788>
   20ea4:	ldr	r0, [fp, #-16]
   20ea8:	movw	r1, #0
   20eac:	sub	r0, r1, r0
   20eb0:	mvn	r1, #0
   20eb4:	udiv	r0, r1, r0
   20eb8:	str	r0, [fp, #-44]	; 0xffffffd4
   20ebc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20ec0:	ldr	r1, [fp, #-12]
   20ec4:	mvn	r2, #0
   20ec8:	sub	r1, r2, r1
   20ecc:	cmp	r0, r1
   20ed0:	bls	20fec <__assert_fail@plt+0xf8b8>
   20ed4:	b	21000 <__assert_fail@plt+0xf8cc>
   20ed8:	b	20ee0 <__assert_fail@plt+0xf7ac>
   20edc:	b	20ee4 <__assert_fail@plt+0xf7b0>
   20ee0:	b	20f34 <__assert_fail@plt+0xf800>
   20ee4:	ldr	r0, [fp, #-16]
   20ee8:	cmn	r0, #1
   20eec:	bne	20f34 <__assert_fail@plt+0xf800>
   20ef0:	b	20f0c <__assert_fail@plt+0xf7d8>
   20ef4:	ldr	r0, [fp, #-12]
   20ef8:	add	r0, r0, #0
   20efc:	movw	r1, #0
   20f00:	cmp	r1, r0
   20f04:	bcc	20fec <__assert_fail@plt+0xf8b8>
   20f08:	b	21000 <__assert_fail@plt+0xf8cc>
   20f0c:	ldr	r0, [fp, #-12]
   20f10:	movw	r1, #0
   20f14:	cmp	r1, r0
   20f18:	bcs	21000 <__assert_fail@plt+0xf8cc>
   20f1c:	ldr	r0, [fp, #-12]
   20f20:	sub	r0, r0, #1
   20f24:	mvn	r1, #0
   20f28:	cmp	r1, r0
   20f2c:	bcc	20fec <__assert_fail@plt+0xf8b8>
   20f30:	b	21000 <__assert_fail@plt+0xf8cc>
   20f34:	ldr	r0, [fp, #-16]
   20f38:	movw	r1, #0
   20f3c:	udiv	r0, r1, r0
   20f40:	ldr	r1, [fp, #-12]
   20f44:	cmp	r0, r1
   20f48:	bcc	20fec <__assert_fail@plt+0xf8b8>
   20f4c:	b	21000 <__assert_fail@plt+0xf8cc>
   20f50:	ldr	r0, [fp, #-16]
   20f54:	cmp	r0, #0
   20f58:	bne	20f60 <__assert_fail@plt+0xf82c>
   20f5c:	b	21000 <__assert_fail@plt+0xf8cc>
   20f60:	ldr	r0, [fp, #-12]
   20f64:	cmp	r0, #0
   20f68:	bcs	20fd4 <__assert_fail@plt+0xf8a0>
   20f6c:	b	20f74 <__assert_fail@plt+0xf840>
   20f70:	b	20f78 <__assert_fail@plt+0xf844>
   20f74:	b	20fb8 <__assert_fail@plt+0xf884>
   20f78:	ldr	r0, [fp, #-12]
   20f7c:	cmn	r0, #1
   20f80:	bne	20fb8 <__assert_fail@plt+0xf884>
   20f84:	b	20fa0 <__assert_fail@plt+0xf86c>
   20f88:	ldr	r0, [fp, #-16]
   20f8c:	add	r0, r0, #0
   20f90:	movw	r1, #0
   20f94:	cmp	r1, r0
   20f98:	bcc	20fec <__assert_fail@plt+0xf8b8>
   20f9c:	b	21000 <__assert_fail@plt+0xf8cc>
   20fa0:	ldr	r0, [fp, #-16]
   20fa4:	sub	r0, r0, #1
   20fa8:	mvn	r1, #0
   20fac:	cmp	r1, r0
   20fb0:	bcc	20fec <__assert_fail@plt+0xf8b8>
   20fb4:	b	21000 <__assert_fail@plt+0xf8cc>
   20fb8:	ldr	r0, [fp, #-12]
   20fbc:	movw	r1, #0
   20fc0:	udiv	r0, r1, r0
   20fc4:	ldr	r1, [fp, #-16]
   20fc8:	cmp	r0, r1
   20fcc:	bcc	20fec <__assert_fail@plt+0xf8b8>
   20fd0:	b	21000 <__assert_fail@plt+0xf8cc>
   20fd4:	ldr	r0, [fp, #-16]
   20fd8:	mvn	r1, #0
   20fdc:	udiv	r0, r1, r0
   20fe0:	ldr	r1, [fp, #-12]
   20fe4:	cmp	r0, r1
   20fe8:	bcs	21000 <__assert_fail@plt+0xf8cc>
   20fec:	ldr	r0, [fp, #-12]
   20ff0:	ldr	r1, [fp, #-16]
   20ff4:	mul	r0, r0, r1
   20ff8:	str	r0, [fp, #-20]	; 0xffffffec
   20ffc:	b	217ec <__assert_fail@plt+0x100b8>
   21000:	ldr	r0, [fp, #-12]
   21004:	ldr	r1, [fp, #-16]
   21008:	mul	r0, r0, r1
   2100c:	str	r0, [fp, #-20]	; 0xffffffec
   21010:	b	21804 <__assert_fail@plt+0x100d0>
   21014:	b	21018 <__assert_fail@plt+0xf8e4>
   21018:	b	211dc <__assert_fail@plt+0xfaa8>
   2101c:	ldr	r0, [fp, #-16]
   21020:	cmp	r0, #0
   21024:	bcs	21124 <__assert_fail@plt+0xf9f0>
   21028:	ldr	r0, [fp, #-12]
   2102c:	cmp	r0, #0
   21030:	bcs	210b8 <__assert_fail@plt+0xf984>
   21034:	b	21054 <__assert_fail@plt+0xf920>
   21038:	ldr	r0, [pc, #2016]	; 21820 <__assert_fail@plt+0x100ec>
   2103c:	ldr	r1, [fp, #-12]
   21040:	ldr	r2, [fp, #-16]
   21044:	udiv	r0, r0, r2
   21048:	cmp	r1, r0
   2104c:	bcc	211b4 <__assert_fail@plt+0xfa80>
   21050:	b	211c8 <__assert_fail@plt+0xfa94>
   21054:	b	21068 <__assert_fail@plt+0xf934>
   21058:	ldr	r0, [fp, #-16]
   2105c:	cmp	r0, #1
   21060:	bcc	21078 <__assert_fail@plt+0xf944>
   21064:	b	21084 <__assert_fail@plt+0xf950>
   21068:	ldr	r0, [fp, #-16]
   2106c:	movw	r1, #0
   21070:	cmp	r1, r0
   21074:	bcs	21084 <__assert_fail@plt+0xf950>
   21078:	movw	r0, #0
   2107c:	str	r0, [sp, #48]	; 0x30
   21080:	b	2109c <__assert_fail@plt+0xf968>
   21084:	ldr	r0, [pc, #1940]	; 21820 <__assert_fail@plt+0x100ec>
   21088:	ldr	r1, [fp, #-16]
   2108c:	movw	r2, #0
   21090:	sub	r1, r2, r1
   21094:	udiv	r0, r0, r1
   21098:	str	r0, [sp, #48]	; 0x30
   2109c:	ldr	r0, [sp, #48]	; 0x30
   210a0:	ldr	r1, [fp, #-12]
   210a4:	mvn	r2, #0
   210a8:	sub	r1, r2, r1
   210ac:	cmp	r0, r1
   210b0:	bls	211b4 <__assert_fail@plt+0xfa80>
   210b4:	b	211c8 <__assert_fail@plt+0xfa94>
   210b8:	ldr	r0, [fp, #-16]
   210bc:	cmn	r0, #1
   210c0:	bne	21108 <__assert_fail@plt+0xf9d4>
   210c4:	b	210e0 <__assert_fail@plt+0xf9ac>
   210c8:	ldr	r0, [fp, #-12]
   210cc:	add	r0, r0, #-2147483648	; 0x80000000
   210d0:	movw	r1, #0
   210d4:	cmp	r1, r0
   210d8:	bcc	211b4 <__assert_fail@plt+0xfa80>
   210dc:	b	211c8 <__assert_fail@plt+0xfa94>
   210e0:	ldr	r0, [fp, #-12]
   210e4:	movw	r1, #0
   210e8:	cmp	r1, r0
   210ec:	bcs	211c8 <__assert_fail@plt+0xfa94>
   210f0:	ldr	r0, [pc, #1832]	; 21820 <__assert_fail@plt+0x100ec>
   210f4:	ldr	r1, [fp, #-12]
   210f8:	sub	r1, r1, #1
   210fc:	cmp	r0, r1
   21100:	bcc	211b4 <__assert_fail@plt+0xfa80>
   21104:	b	211c8 <__assert_fail@plt+0xfa94>
   21108:	ldr	r0, [pc, #1812]	; 21824 <__assert_fail@plt+0x100f0>
   2110c:	ldr	r1, [fp, #-16]
   21110:	udiv	r0, r0, r1
   21114:	ldr	r1, [fp, #-12]
   21118:	cmp	r0, r1
   2111c:	bcc	211b4 <__assert_fail@plt+0xfa80>
   21120:	b	211c8 <__assert_fail@plt+0xfa94>
   21124:	ldr	r0, [fp, #-16]
   21128:	cmp	r0, #0
   2112c:	bne	21134 <__assert_fail@plt+0xfa00>
   21130:	b	211c8 <__assert_fail@plt+0xfa94>
   21134:	ldr	r0, [fp, #-12]
   21138:	cmp	r0, #0
   2113c:	bcs	2119c <__assert_fail@plt+0xfa68>
   21140:	ldr	r0, [fp, #-12]
   21144:	cmn	r0, #1
   21148:	bne	21180 <__assert_fail@plt+0xfa4c>
   2114c:	b	21168 <__assert_fail@plt+0xfa34>
   21150:	ldr	r0, [fp, #-16]
   21154:	add	r0, r0, #-2147483648	; 0x80000000
   21158:	movw	r1, #0
   2115c:	cmp	r1, r0
   21160:	bcc	211b4 <__assert_fail@plt+0xfa80>
   21164:	b	211c8 <__assert_fail@plt+0xfa94>
   21168:	ldr	r0, [pc, #1712]	; 21820 <__assert_fail@plt+0x100ec>
   2116c:	ldr	r1, [fp, #-16]
   21170:	sub	r1, r1, #1
   21174:	cmp	r0, r1
   21178:	bcc	211b4 <__assert_fail@plt+0xfa80>
   2117c:	b	211c8 <__assert_fail@plt+0xfa94>
   21180:	ldr	r0, [pc, #1692]	; 21824 <__assert_fail@plt+0x100f0>
   21184:	ldr	r1, [fp, #-12]
   21188:	udiv	r0, r0, r1
   2118c:	ldr	r1, [fp, #-16]
   21190:	cmp	r0, r1
   21194:	bcc	211b4 <__assert_fail@plt+0xfa80>
   21198:	b	211c8 <__assert_fail@plt+0xfa94>
   2119c:	ldr	r0, [pc, #1660]	; 21820 <__assert_fail@plt+0x100ec>
   211a0:	ldr	r1, [fp, #-16]
   211a4:	udiv	r0, r0, r1
   211a8:	ldr	r1, [fp, #-12]
   211ac:	cmp	r0, r1
   211b0:	bcs	211c8 <__assert_fail@plt+0xfa94>
   211b4:	ldr	r0, [fp, #-12]
   211b8:	ldr	r1, [fp, #-16]
   211bc:	mul	r0, r0, r1
   211c0:	str	r0, [fp, #-20]	; 0xffffffec
   211c4:	b	217ec <__assert_fail@plt+0x100b8>
   211c8:	ldr	r0, [fp, #-12]
   211cc:	ldr	r1, [fp, #-16]
   211d0:	mul	r0, r0, r1
   211d4:	str	r0, [fp, #-20]	; 0xffffffec
   211d8:	b	21804 <__assert_fail@plt+0x100d0>
   211dc:	ldr	r0, [fp, #-16]
   211e0:	cmp	r0, #0
   211e4:	bcs	212f0 <__assert_fail@plt+0xfbbc>
   211e8:	ldr	r0, [fp, #-12]
   211ec:	cmp	r0, #0
   211f0:	bcs	21278 <__assert_fail@plt+0xfb44>
   211f4:	b	21214 <__assert_fail@plt+0xfae0>
   211f8:	ldr	r0, [fp, #-12]
   211fc:	ldr	r1, [fp, #-16]
   21200:	mvn	r2, #0
   21204:	udiv	r1, r2, r1
   21208:	cmp	r0, r1
   2120c:	bcc	2138c <__assert_fail@plt+0xfc58>
   21210:	b	213a0 <__assert_fail@plt+0xfc6c>
   21214:	b	21228 <__assert_fail@plt+0xfaf4>
   21218:	ldr	r0, [fp, #-16]
   2121c:	cmp	r0, #1
   21220:	bcc	21238 <__assert_fail@plt+0xfb04>
   21224:	b	21244 <__assert_fail@plt+0xfb10>
   21228:	ldr	r0, [fp, #-16]
   2122c:	movw	r1, #0
   21230:	cmp	r1, r0
   21234:	bcs	21244 <__assert_fail@plt+0xfb10>
   21238:	movw	r0, #1
   2123c:	str	r0, [sp, #44]	; 0x2c
   21240:	b	2125c <__assert_fail@plt+0xfb28>
   21244:	ldr	r0, [fp, #-16]
   21248:	movw	r1, #0
   2124c:	sub	r0, r1, r0
   21250:	mvn	r1, #0
   21254:	udiv	r0, r1, r0
   21258:	str	r0, [sp, #44]	; 0x2c
   2125c:	ldr	r0, [sp, #44]	; 0x2c
   21260:	ldr	r1, [fp, #-12]
   21264:	mvn	r2, #0
   21268:	sub	r1, r2, r1
   2126c:	cmp	r0, r1
   21270:	bls	2138c <__assert_fail@plt+0xfc58>
   21274:	b	213a0 <__assert_fail@plt+0xfc6c>
   21278:	b	21280 <__assert_fail@plt+0xfb4c>
   2127c:	b	21284 <__assert_fail@plt+0xfb50>
   21280:	b	212d4 <__assert_fail@plt+0xfba0>
   21284:	ldr	r0, [fp, #-16]
   21288:	cmn	r0, #1
   2128c:	bne	212d4 <__assert_fail@plt+0xfba0>
   21290:	b	212ac <__assert_fail@plt+0xfb78>
   21294:	ldr	r0, [fp, #-12]
   21298:	add	r0, r0, #0
   2129c:	movw	r1, #0
   212a0:	cmp	r1, r0
   212a4:	bcc	2138c <__assert_fail@plt+0xfc58>
   212a8:	b	213a0 <__assert_fail@plt+0xfc6c>
   212ac:	ldr	r0, [fp, #-12]
   212b0:	movw	r1, #0
   212b4:	cmp	r1, r0
   212b8:	bcs	213a0 <__assert_fail@plt+0xfc6c>
   212bc:	ldr	r0, [fp, #-12]
   212c0:	sub	r0, r0, #1
   212c4:	mvn	r1, #0
   212c8:	cmp	r1, r0
   212cc:	bcc	2138c <__assert_fail@plt+0xfc58>
   212d0:	b	213a0 <__assert_fail@plt+0xfc6c>
   212d4:	ldr	r0, [fp, #-16]
   212d8:	movw	r1, #0
   212dc:	udiv	r0, r1, r0
   212e0:	ldr	r1, [fp, #-12]
   212e4:	cmp	r0, r1
   212e8:	bcc	2138c <__assert_fail@plt+0xfc58>
   212ec:	b	213a0 <__assert_fail@plt+0xfc6c>
   212f0:	ldr	r0, [fp, #-16]
   212f4:	cmp	r0, #0
   212f8:	bne	21300 <__assert_fail@plt+0xfbcc>
   212fc:	b	213a0 <__assert_fail@plt+0xfc6c>
   21300:	ldr	r0, [fp, #-12]
   21304:	cmp	r0, #0
   21308:	bcs	21374 <__assert_fail@plt+0xfc40>
   2130c:	b	21314 <__assert_fail@plt+0xfbe0>
   21310:	b	21318 <__assert_fail@plt+0xfbe4>
   21314:	b	21358 <__assert_fail@plt+0xfc24>
   21318:	ldr	r0, [fp, #-12]
   2131c:	cmn	r0, #1
   21320:	bne	21358 <__assert_fail@plt+0xfc24>
   21324:	b	21340 <__assert_fail@plt+0xfc0c>
   21328:	ldr	r0, [fp, #-16]
   2132c:	add	r0, r0, #0
   21330:	movw	r1, #0
   21334:	cmp	r1, r0
   21338:	bcc	2138c <__assert_fail@plt+0xfc58>
   2133c:	b	213a0 <__assert_fail@plt+0xfc6c>
   21340:	ldr	r0, [fp, #-16]
   21344:	sub	r0, r0, #1
   21348:	mvn	r1, #0
   2134c:	cmp	r1, r0
   21350:	bcc	2138c <__assert_fail@plt+0xfc58>
   21354:	b	213a0 <__assert_fail@plt+0xfc6c>
   21358:	ldr	r0, [fp, #-12]
   2135c:	movw	r1, #0
   21360:	udiv	r0, r1, r0
   21364:	ldr	r1, [fp, #-16]
   21368:	cmp	r0, r1
   2136c:	bcc	2138c <__assert_fail@plt+0xfc58>
   21370:	b	213a0 <__assert_fail@plt+0xfc6c>
   21374:	ldr	r0, [fp, #-16]
   21378:	mvn	r1, #0
   2137c:	udiv	r0, r1, r0
   21380:	ldr	r1, [fp, #-12]
   21384:	cmp	r0, r1
   21388:	bcs	213a0 <__assert_fail@plt+0xfc6c>
   2138c:	ldr	r0, [fp, #-12]
   21390:	ldr	r1, [fp, #-16]
   21394:	mul	r0, r0, r1
   21398:	str	r0, [fp, #-20]	; 0xffffffec
   2139c:	b	217ec <__assert_fail@plt+0x100b8>
   213a0:	ldr	r0, [fp, #-12]
   213a4:	ldr	r1, [fp, #-16]
   213a8:	mul	r0, r0, r1
   213ac:	str	r0, [fp, #-20]	; 0xffffffec
   213b0:	b	21804 <__assert_fail@plt+0x100d0>
   213b4:	b	215d0 <__assert_fail@plt+0xfe9c>
   213b8:	ldr	r0, [fp, #-16]
   213bc:	cmp	r0, #0
   213c0:	bcs	21500 <__assert_fail@plt+0xfdcc>
   213c4:	ldr	r0, [fp, #-12]
   213c8:	cmp	r0, #0
   213cc:	bcs	2148c <__assert_fail@plt+0xfd58>
   213d0:	b	213d4 <__assert_fail@plt+0xfca0>
   213d4:	ldr	r0, [fp, #-12]
   213d8:	ldr	r2, [fp, #-16]
   213dc:	mvn	r1, #0
   213e0:	mvn	r3, #-2147483648	; 0x80000000
   213e4:	mov	ip, #0
   213e8:	str	r0, [sp, #40]	; 0x28
   213ec:	mov	r0, r1
   213f0:	mov	r1, r3
   213f4:	mov	r3, ip
   213f8:	bl	22540 <__assert_fail@plt+0x10e0c>
   213fc:	ldr	r2, [sp, #40]	; 0x28
   21400:	subs	r0, r2, r0
   21404:	rscs	r1, r1, #0
   21408:	blt	215a8 <__assert_fail@plt+0xfe74>
   2140c:	b	215bc <__assert_fail@plt+0xfe88>
   21410:	b	21424 <__assert_fail@plt+0xfcf0>
   21414:	ldr	r0, [fp, #-16]
   21418:	cmp	r0, #1
   2141c:	bcc	21434 <__assert_fail@plt+0xfd00>
   21420:	b	21448 <__assert_fail@plt+0xfd14>
   21424:	ldr	r0, [fp, #-16]
   21428:	movw	r1, #0
   2142c:	cmp	r1, r0
   21430:	bcs	21448 <__assert_fail@plt+0xfd14>
   21434:	mov	r0, #0
   21438:	mvn	r1, #0
   2143c:	str	r1, [sp, #36]	; 0x24
   21440:	str	r0, [sp, #32]
   21444:	b	2146c <__assert_fail@plt+0xfd38>
   21448:	ldr	r0, [fp, #-16]
   2144c:	rsb	r2, r0, #0
   21450:	mvn	r0, #0
   21454:	mvn	r1, #-2147483648	; 0x80000000
   21458:	mov	r3, #0
   2145c:	bl	22540 <__assert_fail@plt+0x10e0c>
   21460:	str	r0, [sp, #36]	; 0x24
   21464:	str	r1, [sp, #32]
   21468:	b	2146c <__assert_fail@plt+0xfd38>
   2146c:	ldr	r0, [sp, #32]
   21470:	ldr	r1, [sp, #36]	; 0x24
   21474:	ldr	r2, [fp, #-12]
   21478:	mvn	r2, r2
   2147c:	subs	r1, r2, r1
   21480:	rscs	r0, r0, #0
   21484:	bge	215a8 <__assert_fail@plt+0xfe74>
   21488:	b	215bc <__assert_fail@plt+0xfe88>
   2148c:	ldr	r0, [fp, #-16]
   21490:	cmn	r0, #1
   21494:	bne	214d4 <__assert_fail@plt+0xfda0>
   21498:	b	214b4 <__assert_fail@plt+0xfd80>
   2149c:	ldr	r0, [fp, #-12]
   214a0:	rsbs	r0, r0, #0
   214a4:	mov	r1, #0
   214a8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   214ac:	blt	215a8 <__assert_fail@plt+0xfe74>
   214b0:	b	215bc <__assert_fail@plt+0xfe88>
   214b4:	ldr	r0, [fp, #-12]
   214b8:	movw	r1, #0
   214bc:	cmp	r1, r0
   214c0:	bcs	215bc <__assert_fail@plt+0xfe88>
   214c4:	mov	r0, #0
   214c8:	cmp	r0, #0
   214cc:	bne	215a8 <__assert_fail@plt+0xfe74>
   214d0:	b	215bc <__assert_fail@plt+0xfe88>
   214d4:	ldr	r2, [fp, #-16]
   214d8:	mov	r1, #-2147483648	; 0x80000000
   214dc:	mov	r0, #0
   214e0:	str	r0, [sp, #28]
   214e4:	ldr	r3, [sp, #28]
   214e8:	bl	2246c <__assert_fail@plt+0x10d38>
   214ec:	ldr	r2, [fp, #-12]
   214f0:	subs	r0, r0, r2
   214f4:	sbcs	r1, r1, #0
   214f8:	blt	215a8 <__assert_fail@plt+0xfe74>
   214fc:	b	215bc <__assert_fail@plt+0xfe88>
   21500:	ldr	r0, [fp, #-16]
   21504:	cmp	r0, #0
   21508:	bne	21510 <__assert_fail@plt+0xfddc>
   2150c:	b	215bc <__assert_fail@plt+0xfe88>
   21510:	ldr	r0, [fp, #-12]
   21514:	cmp	r0, #0
   21518:	bcs	21580 <__assert_fail@plt+0xfe4c>
   2151c:	ldr	r0, [fp, #-12]
   21520:	cmn	r0, #1
   21524:	bne	21554 <__assert_fail@plt+0xfe20>
   21528:	b	21544 <__assert_fail@plt+0xfe10>
   2152c:	ldr	r0, [fp, #-16]
   21530:	rsbs	r0, r0, #0
   21534:	mov	r1, #0
   21538:	sbcs	r1, r1, #-2147483648	; 0x80000000
   2153c:	blt	215a8 <__assert_fail@plt+0xfe74>
   21540:	b	215bc <__assert_fail@plt+0xfe88>
   21544:	mov	r0, #0
   21548:	cmp	r0, #0
   2154c:	bne	215a8 <__assert_fail@plt+0xfe74>
   21550:	b	215bc <__assert_fail@plt+0xfe88>
   21554:	ldr	r2, [fp, #-12]
   21558:	mov	r1, #-2147483648	; 0x80000000
   2155c:	mov	r0, #0
   21560:	str	r0, [sp, #24]
   21564:	ldr	r3, [sp, #24]
   21568:	bl	2246c <__assert_fail@plt+0x10d38>
   2156c:	ldr	r2, [fp, #-16]
   21570:	subs	r0, r0, r2
   21574:	sbcs	r1, r1, #0
   21578:	blt	215a8 <__assert_fail@plt+0xfe74>
   2157c:	b	215bc <__assert_fail@plt+0xfe88>
   21580:	ldr	r2, [fp, #-16]
   21584:	mvn	r0, #0
   21588:	mvn	r1, #-2147483648	; 0x80000000
   2158c:	mov	r3, #0
   21590:	bl	22540 <__assert_fail@plt+0x10e0c>
   21594:	ldr	r2, [fp, #-12]
   21598:	subs	r0, r0, r2
   2159c:	sbcs	r1, r1, #0
   215a0:	bge	215bc <__assert_fail@plt+0xfe88>
   215a4:	b	215a8 <__assert_fail@plt+0xfe74>
   215a8:	ldr	r0, [fp, #-12]
   215ac:	ldr	r1, [fp, #-16]
   215b0:	mul	r0, r0, r1
   215b4:	str	r0, [fp, #-20]	; 0xffffffec
   215b8:	b	217ec <__assert_fail@plt+0x100b8>
   215bc:	ldr	r0, [fp, #-12]
   215c0:	ldr	r1, [fp, #-16]
   215c4:	mul	r0, r0, r1
   215c8:	str	r0, [fp, #-20]	; 0xffffffec
   215cc:	b	21804 <__assert_fail@plt+0x100d0>
   215d0:	ldr	r0, [fp, #-16]
   215d4:	cmp	r0, #0
   215d8:	bcs	21714 <__assert_fail@plt+0xffe0>
   215dc:	ldr	r0, [fp, #-12]
   215e0:	cmp	r0, #0
   215e4:	bcs	2169c <__assert_fail@plt+0xff68>
   215e8:	b	2161c <__assert_fail@plt+0xfee8>
   215ec:	ldr	r0, [fp, #-12]
   215f0:	ldr	r2, [fp, #-16]
   215f4:	mvn	r1, #0
   215f8:	mov	r3, #0
   215fc:	str	r0, [sp, #20]
   21600:	mov	r0, r1
   21604:	bl	22540 <__assert_fail@plt+0x10e0c>
   21608:	ldr	r2, [sp, #20]
   2160c:	subs	r0, r2, r0
   21610:	rscs	r1, r1, #0
   21614:	bcc	217c4 <__assert_fail@plt+0x10090>
   21618:	b	217d8 <__assert_fail@plt+0x100a4>
   2161c:	b	21630 <__assert_fail@plt+0xfefc>
   21620:	ldr	r0, [fp, #-16]
   21624:	cmp	r0, #1
   21628:	bcc	21640 <__assert_fail@plt+0xff0c>
   2162c:	b	21654 <__assert_fail@plt+0xff20>
   21630:	ldr	r0, [fp, #-16]
   21634:	movw	r1, #0
   21638:	cmp	r1, r0
   2163c:	bcs	21654 <__assert_fail@plt+0xff20>
   21640:	mov	r0, #1
   21644:	mvn	r1, #0
   21648:	str	r1, [sp, #16]
   2164c:	str	r0, [sp, #12]
   21650:	b	2167c <__assert_fail@plt+0xff48>
   21654:	ldr	r0, [fp, #-16]
   21658:	rsb	r2, r0, #0
   2165c:	mvn	r0, #0
   21660:	mov	r3, #0
   21664:	str	r0, [sp, #8]
   21668:	ldr	r1, [sp, #8]
   2166c:	bl	22540 <__assert_fail@plt+0x10e0c>
   21670:	str	r0, [sp, #16]
   21674:	str	r1, [sp, #12]
   21678:	b	2167c <__assert_fail@plt+0xff48>
   2167c:	ldr	r0, [sp, #12]
   21680:	ldr	r1, [sp, #16]
   21684:	ldr	r2, [fp, #-12]
   21688:	mvn	r2, r2
   2168c:	subs	r1, r2, r1
   21690:	rscs	r0, r0, #0
   21694:	bcs	217c4 <__assert_fail@plt+0x10090>
   21698:	b	217d8 <__assert_fail@plt+0x100a4>
   2169c:	b	216a4 <__assert_fail@plt+0xff70>
   216a0:	b	216a8 <__assert_fail@plt+0xff74>
   216a4:	b	216f8 <__assert_fail@plt+0xffc4>
   216a8:	ldr	r0, [fp, #-16]
   216ac:	cmn	r0, #1
   216b0:	bne	216f8 <__assert_fail@plt+0xffc4>
   216b4:	b	216d0 <__assert_fail@plt+0xff9c>
   216b8:	ldr	r0, [fp, #-12]
   216bc:	add	r0, r0, #0
   216c0:	movw	r1, #0
   216c4:	cmp	r1, r0
   216c8:	bcc	217c4 <__assert_fail@plt+0x10090>
   216cc:	b	217d8 <__assert_fail@plt+0x100a4>
   216d0:	ldr	r0, [fp, #-12]
   216d4:	movw	r1, #0
   216d8:	cmp	r1, r0
   216dc:	bcs	217d8 <__assert_fail@plt+0x100a4>
   216e0:	ldr	r0, [fp, #-12]
   216e4:	sub	r0, r0, #1
   216e8:	mvn	r1, #0
   216ec:	cmp	r1, r0
   216f0:	bcc	217c4 <__assert_fail@plt+0x10090>
   216f4:	b	217d8 <__assert_fail@plt+0x100a4>
   216f8:	ldr	r0, [fp, #-16]
   216fc:	movw	r1, #0
   21700:	udiv	r0, r1, r0
   21704:	ldr	r1, [fp, #-12]
   21708:	cmp	r0, r1
   2170c:	bcc	217c4 <__assert_fail@plt+0x10090>
   21710:	b	217d8 <__assert_fail@plt+0x100a4>
   21714:	ldr	r0, [fp, #-16]
   21718:	cmp	r0, #0
   2171c:	bne	21724 <__assert_fail@plt+0xfff0>
   21720:	b	217d8 <__assert_fail@plt+0x100a4>
   21724:	ldr	r0, [fp, #-12]
   21728:	cmp	r0, #0
   2172c:	bcs	21798 <__assert_fail@plt+0x10064>
   21730:	b	21738 <__assert_fail@plt+0x10004>
   21734:	b	2173c <__assert_fail@plt+0x10008>
   21738:	b	2177c <__assert_fail@plt+0x10048>
   2173c:	ldr	r0, [fp, #-12]
   21740:	cmn	r0, #1
   21744:	bne	2177c <__assert_fail@plt+0x10048>
   21748:	b	21764 <__assert_fail@plt+0x10030>
   2174c:	ldr	r0, [fp, #-16]
   21750:	add	r0, r0, #0
   21754:	movw	r1, #0
   21758:	cmp	r1, r0
   2175c:	bcc	217c4 <__assert_fail@plt+0x10090>
   21760:	b	217d8 <__assert_fail@plt+0x100a4>
   21764:	ldr	r0, [fp, #-16]
   21768:	sub	r0, r0, #1
   2176c:	mvn	r1, #0
   21770:	cmp	r1, r0
   21774:	bcc	217c4 <__assert_fail@plt+0x10090>
   21778:	b	217d8 <__assert_fail@plt+0x100a4>
   2177c:	ldr	r0, [fp, #-12]
   21780:	movw	r1, #0
   21784:	udiv	r0, r1, r0
   21788:	ldr	r1, [fp, #-16]
   2178c:	cmp	r0, r1
   21790:	bcc	217c4 <__assert_fail@plt+0x10090>
   21794:	b	217d8 <__assert_fail@plt+0x100a4>
   21798:	ldr	r2, [fp, #-16]
   2179c:	mvn	r0, #0
   217a0:	mov	r3, #0
   217a4:	str	r0, [sp, #4]
   217a8:	ldr	r1, [sp, #4]
   217ac:	bl	22540 <__assert_fail@plt+0x10e0c>
   217b0:	ldr	r2, [fp, #-12]
   217b4:	subs	r0, r0, r2
   217b8:	sbcs	r1, r1, #0
   217bc:	bcs	217d8 <__assert_fail@plt+0x100a4>
   217c0:	b	217c4 <__assert_fail@plt+0x10090>
   217c4:	ldr	r0, [fp, #-12]
   217c8:	ldr	r1, [fp, #-16]
   217cc:	mul	r0, r0, r1
   217d0:	str	r0, [fp, #-20]	; 0xffffffec
   217d4:	b	217ec <__assert_fail@plt+0x100b8>
   217d8:	ldr	r0, [fp, #-12]
   217dc:	ldr	r1, [fp, #-16]
   217e0:	mul	r0, r0, r1
   217e4:	str	r0, [fp, #-20]	; 0xffffffec
   217e8:	b	21804 <__assert_fail@plt+0x100d0>
   217ec:	bl	115f0 <__errno_location@plt>
   217f0:	movw	r1, #12
   217f4:	str	r1, [r0]
   217f8:	movw	r0, #0
   217fc:	str	r0, [fp, #-4]
   21800:	b	21814 <__assert_fail@plt+0x100e0>
   21804:	ldr	r0, [fp, #-8]
   21808:	ldr	r1, [fp, #-20]	; 0xffffffec
   2180c:	bl	1ff28 <__assert_fail@plt+0xe7f4>
   21810:	str	r0, [fp, #-4]
   21814:	ldr	r0, [fp, #-4]
   21818:	mov	sp, fp
   2181c:	pop	{fp, pc}
   21820:	svcvc	0x00ffffff
   21824:	andhi	r0, r0, r0
   21828:			; <UNDEFINED> instruction: 0xffff8000
   2182c:	push	{fp, lr}
   21830:	mov	fp, sp
   21834:	sub	sp, sp, #8
   21838:	str	r0, [sp, #4]
   2183c:	ldr	r0, [sp, #4]
   21840:	movw	r1, #0
   21844:	movw	r2, #3
   21848:	bl	21e94 <__assert_fail@plt+0x10760>
   2184c:	mov	sp, fp
   21850:	pop	{fp, pc}
   21854:	sub	sp, sp, #12
   21858:	str	r0, [sp, #4]
   2185c:	ldr	r0, [sp, #4]
   21860:	sub	r1, r0, #48	; 0x30
   21864:	cmp	r1, #10
   21868:	str	r0, [sp]
   2186c:	bcc	2189c <__assert_fail@plt+0x10168>
   21870:	b	21874 <__assert_fail@plt+0x10140>
   21874:	ldr	r0, [sp]
   21878:	sub	r1, r0, #65	; 0x41
   2187c:	cmp	r1, #26
   21880:	bcc	2189c <__assert_fail@plt+0x10168>
   21884:	b	21888 <__assert_fail@plt+0x10154>
   21888:	ldr	r0, [sp]
   2188c:	sub	r1, r0, #97	; 0x61
   21890:	cmp	r1, #25
   21894:	bhi	218ac <__assert_fail@plt+0x10178>
   21898:	b	2189c <__assert_fail@plt+0x10168>
   2189c:	movw	r0, #1
   218a0:	and	r0, r0, #1
   218a4:	strb	r0, [sp, #11]
   218a8:	b	218b8 <__assert_fail@plt+0x10184>
   218ac:	movw	r0, #0
   218b0:	and	r0, r0, #1
   218b4:	strb	r0, [sp, #11]
   218b8:	ldrb	r0, [sp, #11]
   218bc:	and	r0, r0, #1
   218c0:	add	sp, sp, #12
   218c4:	bx	lr
   218c8:	sub	sp, sp, #12
   218cc:	str	r0, [sp, #4]
   218d0:	ldr	r0, [sp, #4]
   218d4:	sub	r1, r0, #65	; 0x41
   218d8:	cmp	r1, #26
   218dc:	str	r0, [sp]
   218e0:	bcc	218fc <__assert_fail@plt+0x101c8>
   218e4:	b	218e8 <__assert_fail@plt+0x101b4>
   218e8:	ldr	r0, [sp]
   218ec:	sub	r1, r0, #97	; 0x61
   218f0:	cmp	r1, #25
   218f4:	bhi	2190c <__assert_fail@plt+0x101d8>
   218f8:	b	218fc <__assert_fail@plt+0x101c8>
   218fc:	movw	r0, #1
   21900:	and	r0, r0, #1
   21904:	strb	r0, [sp, #11]
   21908:	b	21918 <__assert_fail@plt+0x101e4>
   2190c:	movw	r0, #0
   21910:	and	r0, r0, #1
   21914:	strb	r0, [sp, #11]
   21918:	ldrb	r0, [sp, #11]
   2191c:	and	r0, r0, #1
   21920:	add	sp, sp, #12
   21924:	bx	lr
   21928:	sub	sp, sp, #8
   2192c:	str	r0, [sp]
   21930:	ldr	r0, [sp]
   21934:	cmp	r0, #127	; 0x7f
   21938:	bhi	21950 <__assert_fail@plt+0x1021c>
   2193c:	b	21940 <__assert_fail@plt+0x1020c>
   21940:	movw	r0, #1
   21944:	and	r0, r0, #1
   21948:	strb	r0, [sp, #7]
   2194c:	b	2195c <__assert_fail@plt+0x10228>
   21950:	movw	r0, #0
   21954:	and	r0, r0, #1
   21958:	strb	r0, [sp, #7]
   2195c:	ldrb	r0, [sp, #7]
   21960:	and	r0, r0, #1
   21964:	add	sp, sp, #8
   21968:	bx	lr
   2196c:	sub	sp, sp, #8
   21970:	str	r0, [sp, #4]
   21974:	ldr	r0, [sp, #4]
   21978:	cmp	r0, #32
   2197c:	movw	r0, #1
   21980:	str	r0, [sp]
   21984:	beq	2199c <__assert_fail@plt+0x10268>
   21988:	ldr	r0, [sp, #4]
   2198c:	cmp	r0, #9
   21990:	movw	r0, #0
   21994:	moveq	r0, #1
   21998:	str	r0, [sp]
   2199c:	ldr	r0, [sp]
   219a0:	and	r0, r0, #1
   219a4:	add	sp, sp, #8
   219a8:	bx	lr
   219ac:	sub	sp, sp, #12
   219b0:	str	r0, [sp, #4]
   219b4:	ldr	r0, [sp, #4]
   219b8:	cmp	r0, #32
   219bc:	str	r0, [sp]
   219c0:	bcc	219d8 <__assert_fail@plt+0x102a4>
   219c4:	b	219c8 <__assert_fail@plt+0x10294>
   219c8:	ldr	r0, [sp]
   219cc:	cmp	r0, #127	; 0x7f
   219d0:	bne	219e8 <__assert_fail@plt+0x102b4>
   219d4:	b	219d8 <__assert_fail@plt+0x102a4>
   219d8:	movw	r0, #1
   219dc:	and	r0, r0, #1
   219e0:	strb	r0, [sp, #11]
   219e4:	b	219f4 <__assert_fail@plt+0x102c0>
   219e8:	movw	r0, #0
   219ec:	and	r0, r0, #1
   219f0:	strb	r0, [sp, #11]
   219f4:	ldrb	r0, [sp, #11]
   219f8:	and	r0, r0, #1
   219fc:	add	sp, sp, #12
   21a00:	bx	lr
   21a04:	sub	sp, sp, #8
   21a08:	str	r0, [sp]
   21a0c:	ldr	r0, [sp]
   21a10:	sub	r0, r0, #48	; 0x30
   21a14:	cmp	r0, #9
   21a18:	bhi	21a30 <__assert_fail@plt+0x102fc>
   21a1c:	b	21a20 <__assert_fail@plt+0x102ec>
   21a20:	movw	r0, #1
   21a24:	and	r0, r0, #1
   21a28:	strb	r0, [sp, #7]
   21a2c:	b	21a3c <__assert_fail@plt+0x10308>
   21a30:	movw	r0, #0
   21a34:	and	r0, r0, #1
   21a38:	strb	r0, [sp, #7]
   21a3c:	ldrb	r0, [sp, #7]
   21a40:	and	r0, r0, #1
   21a44:	add	sp, sp, #8
   21a48:	bx	lr
   21a4c:	sub	sp, sp, #8
   21a50:	str	r0, [sp]
   21a54:	ldr	r0, [sp]
   21a58:	sub	r0, r0, #33	; 0x21
   21a5c:	cmp	r0, #93	; 0x5d
   21a60:	bhi	21a78 <__assert_fail@plt+0x10344>
   21a64:	b	21a68 <__assert_fail@plt+0x10334>
   21a68:	movw	r0, #1
   21a6c:	and	r0, r0, #1
   21a70:	strb	r0, [sp, #7]
   21a74:	b	21a84 <__assert_fail@plt+0x10350>
   21a78:	movw	r0, #0
   21a7c:	and	r0, r0, #1
   21a80:	strb	r0, [sp, #7]
   21a84:	ldrb	r0, [sp, #7]
   21a88:	and	r0, r0, #1
   21a8c:	add	sp, sp, #8
   21a90:	bx	lr
   21a94:	sub	sp, sp, #8
   21a98:	str	r0, [sp]
   21a9c:	ldr	r0, [sp]
   21aa0:	sub	r0, r0, #97	; 0x61
   21aa4:	cmp	r0, #25
   21aa8:	bhi	21ac0 <__assert_fail@plt+0x1038c>
   21aac:	b	21ab0 <__assert_fail@plt+0x1037c>
   21ab0:	movw	r0, #1
   21ab4:	and	r0, r0, #1
   21ab8:	strb	r0, [sp, #7]
   21abc:	b	21acc <__assert_fail@plt+0x10398>
   21ac0:	movw	r0, #0
   21ac4:	and	r0, r0, #1
   21ac8:	strb	r0, [sp, #7]
   21acc:	ldrb	r0, [sp, #7]
   21ad0:	and	r0, r0, #1
   21ad4:	add	sp, sp, #8
   21ad8:	bx	lr
   21adc:	sub	sp, sp, #8
   21ae0:	str	r0, [sp]
   21ae4:	ldr	r0, [sp]
   21ae8:	sub	r0, r0, #32
   21aec:	cmp	r0, #94	; 0x5e
   21af0:	bhi	21b08 <__assert_fail@plt+0x103d4>
   21af4:	b	21af8 <__assert_fail@plt+0x103c4>
   21af8:	movw	r0, #1
   21afc:	and	r0, r0, #1
   21b00:	strb	r0, [sp, #7]
   21b04:	b	21b14 <__assert_fail@plt+0x103e0>
   21b08:	movw	r0, #0
   21b0c:	and	r0, r0, #1
   21b10:	strb	r0, [sp, #7]
   21b14:	ldrb	r0, [sp, #7]
   21b18:	and	r0, r0, #1
   21b1c:	add	sp, sp, #8
   21b20:	bx	lr
   21b24:	sub	sp, sp, #12
   21b28:	str	r0, [sp, #4]
   21b2c:	ldr	r0, [sp, #4]
   21b30:	sub	r0, r0, #33	; 0x21
   21b34:	cmp	r0, #93	; 0x5d
   21b38:	str	r0, [sp]
   21b3c:	bhi	21cd8 <__assert_fail@plt+0x105a4>
   21b40:	add	r0, pc, #8
   21b44:	ldr	r1, [sp]
   21b48:	ldr	r0, [r0, r1, lsl #2]
   21b4c:	mov	pc, r0
   21b50:	andeq	r1, r2, r8, asr #25
   21b54:	andeq	r1, r2, r8, asr #25
   21b58:	andeq	r1, r2, r8, asr #25
   21b5c:	andeq	r1, r2, r8, asr #25
   21b60:	andeq	r1, r2, r8, asr #25
   21b64:	andeq	r1, r2, r8, asr #25
   21b68:	andeq	r1, r2, r8, asr #25
   21b6c:	andeq	r1, r2, r8, asr #25
   21b70:	andeq	r1, r2, r8, asr #25
   21b74:	andeq	r1, r2, r8, asr #25
   21b78:	andeq	r1, r2, r8, asr #25
   21b7c:	andeq	r1, r2, r8, asr #25
   21b80:	andeq	r1, r2, r8, asr #25
   21b84:	andeq	r1, r2, r8, asr #25
   21b88:	andeq	r1, r2, r8, asr #25
   21b8c:	ldrdeq	r1, [r2], -r8
   21b90:	ldrdeq	r1, [r2], -r8
   21b94:	ldrdeq	r1, [r2], -r8
   21b98:	ldrdeq	r1, [r2], -r8
   21b9c:	ldrdeq	r1, [r2], -r8
   21ba0:	ldrdeq	r1, [r2], -r8
   21ba4:	ldrdeq	r1, [r2], -r8
   21ba8:	ldrdeq	r1, [r2], -r8
   21bac:	ldrdeq	r1, [r2], -r8
   21bb0:	ldrdeq	r1, [r2], -r8
   21bb4:	andeq	r1, r2, r8, asr #25
   21bb8:	andeq	r1, r2, r8, asr #25
   21bbc:	andeq	r1, r2, r8, asr #25
   21bc0:	andeq	r1, r2, r8, asr #25
   21bc4:	andeq	r1, r2, r8, asr #25
   21bc8:	andeq	r1, r2, r8, asr #25
   21bcc:	andeq	r1, r2, r8, asr #25
   21bd0:	ldrdeq	r1, [r2], -r8
   21bd4:	ldrdeq	r1, [r2], -r8
   21bd8:	ldrdeq	r1, [r2], -r8
   21bdc:	ldrdeq	r1, [r2], -r8
   21be0:	ldrdeq	r1, [r2], -r8
   21be4:	ldrdeq	r1, [r2], -r8
   21be8:	ldrdeq	r1, [r2], -r8
   21bec:	ldrdeq	r1, [r2], -r8
   21bf0:	ldrdeq	r1, [r2], -r8
   21bf4:	ldrdeq	r1, [r2], -r8
   21bf8:	ldrdeq	r1, [r2], -r8
   21bfc:	ldrdeq	r1, [r2], -r8
   21c00:	ldrdeq	r1, [r2], -r8
   21c04:	ldrdeq	r1, [r2], -r8
   21c08:	ldrdeq	r1, [r2], -r8
   21c0c:	ldrdeq	r1, [r2], -r8
   21c10:	ldrdeq	r1, [r2], -r8
   21c14:	ldrdeq	r1, [r2], -r8
   21c18:	ldrdeq	r1, [r2], -r8
   21c1c:	ldrdeq	r1, [r2], -r8
   21c20:	ldrdeq	r1, [r2], -r8
   21c24:	ldrdeq	r1, [r2], -r8
   21c28:	ldrdeq	r1, [r2], -r8
   21c2c:	ldrdeq	r1, [r2], -r8
   21c30:	ldrdeq	r1, [r2], -r8
   21c34:	ldrdeq	r1, [r2], -r8
   21c38:	andeq	r1, r2, r8, asr #25
   21c3c:	andeq	r1, r2, r8, asr #25
   21c40:	andeq	r1, r2, r8, asr #25
   21c44:	andeq	r1, r2, r8, asr #25
   21c48:	andeq	r1, r2, r8, asr #25
   21c4c:	andeq	r1, r2, r8, asr #25
   21c50:	ldrdeq	r1, [r2], -r8
   21c54:	ldrdeq	r1, [r2], -r8
   21c58:	ldrdeq	r1, [r2], -r8
   21c5c:	ldrdeq	r1, [r2], -r8
   21c60:	ldrdeq	r1, [r2], -r8
   21c64:	ldrdeq	r1, [r2], -r8
   21c68:	ldrdeq	r1, [r2], -r8
   21c6c:	ldrdeq	r1, [r2], -r8
   21c70:	ldrdeq	r1, [r2], -r8
   21c74:	ldrdeq	r1, [r2], -r8
   21c78:	ldrdeq	r1, [r2], -r8
   21c7c:	ldrdeq	r1, [r2], -r8
   21c80:	ldrdeq	r1, [r2], -r8
   21c84:	ldrdeq	r1, [r2], -r8
   21c88:	ldrdeq	r1, [r2], -r8
   21c8c:	ldrdeq	r1, [r2], -r8
   21c90:	ldrdeq	r1, [r2], -r8
   21c94:	ldrdeq	r1, [r2], -r8
   21c98:	ldrdeq	r1, [r2], -r8
   21c9c:	ldrdeq	r1, [r2], -r8
   21ca0:	ldrdeq	r1, [r2], -r8
   21ca4:	ldrdeq	r1, [r2], -r8
   21ca8:	ldrdeq	r1, [r2], -r8
   21cac:	ldrdeq	r1, [r2], -r8
   21cb0:	ldrdeq	r1, [r2], -r8
   21cb4:	ldrdeq	r1, [r2], -r8
   21cb8:	andeq	r1, r2, r8, asr #25
   21cbc:	andeq	r1, r2, r8, asr #25
   21cc0:	andeq	r1, r2, r8, asr #25
   21cc4:	andeq	r1, r2, r8, asr #25
   21cc8:	movw	r0, #1
   21ccc:	and	r0, r0, #1
   21cd0:	strb	r0, [sp, #11]
   21cd4:	b	21ce4 <__assert_fail@plt+0x105b0>
   21cd8:	movw	r0, #0
   21cdc:	and	r0, r0, #1
   21ce0:	strb	r0, [sp, #11]
   21ce4:	ldrb	r0, [sp, #11]
   21ce8:	and	r0, r0, #1
   21cec:	add	sp, sp, #12
   21cf0:	bx	lr
   21cf4:	sub	sp, sp, #12
   21cf8:	str	r0, [sp, #4]
   21cfc:	ldr	r0, [sp, #4]
   21d00:	sub	r1, r0, #9
   21d04:	cmp	r1, #5
   21d08:	str	r0, [sp]
   21d0c:	bcc	21d24 <__assert_fail@plt+0x105f0>
   21d10:	b	21d14 <__assert_fail@plt+0x105e0>
   21d14:	ldr	r0, [sp]
   21d18:	cmp	r0, #32
   21d1c:	bne	21d34 <__assert_fail@plt+0x10600>
   21d20:	b	21d24 <__assert_fail@plt+0x105f0>
   21d24:	movw	r0, #1
   21d28:	and	r0, r0, #1
   21d2c:	strb	r0, [sp, #11]
   21d30:	b	21d40 <__assert_fail@plt+0x1060c>
   21d34:	movw	r0, #0
   21d38:	and	r0, r0, #1
   21d3c:	strb	r0, [sp, #11]
   21d40:	ldrb	r0, [sp, #11]
   21d44:	and	r0, r0, #1
   21d48:	add	sp, sp, #12
   21d4c:	bx	lr
   21d50:	sub	sp, sp, #8
   21d54:	str	r0, [sp]
   21d58:	ldr	r0, [sp]
   21d5c:	sub	r0, r0, #65	; 0x41
   21d60:	cmp	r0, #25
   21d64:	bhi	21d7c <__assert_fail@plt+0x10648>
   21d68:	b	21d6c <__assert_fail@plt+0x10638>
   21d6c:	movw	r0, #1
   21d70:	and	r0, r0, #1
   21d74:	strb	r0, [sp, #7]
   21d78:	b	21d88 <__assert_fail@plt+0x10654>
   21d7c:	movw	r0, #0
   21d80:	and	r0, r0, #1
   21d84:	strb	r0, [sp, #7]
   21d88:	ldrb	r0, [sp, #7]
   21d8c:	and	r0, r0, #1
   21d90:	add	sp, sp, #8
   21d94:	bx	lr
   21d98:	sub	sp, sp, #12
   21d9c:	str	r0, [sp, #4]
   21da0:	ldr	r0, [sp, #4]
   21da4:	sub	r1, r0, #48	; 0x30
   21da8:	cmp	r1, #10
   21dac:	str	r0, [sp]
   21db0:	bcc	21de0 <__assert_fail@plt+0x106ac>
   21db4:	b	21db8 <__assert_fail@plt+0x10684>
   21db8:	ldr	r0, [sp]
   21dbc:	sub	r1, r0, #65	; 0x41
   21dc0:	cmp	r1, #6
   21dc4:	bcc	21de0 <__assert_fail@plt+0x106ac>
   21dc8:	b	21dcc <__assert_fail@plt+0x10698>
   21dcc:	ldr	r0, [sp]
   21dd0:	sub	r1, r0, #97	; 0x61
   21dd4:	cmp	r1, #5
   21dd8:	bhi	21df0 <__assert_fail@plt+0x106bc>
   21ddc:	b	21de0 <__assert_fail@plt+0x106ac>
   21de0:	movw	r0, #1
   21de4:	and	r0, r0, #1
   21de8:	strb	r0, [sp, #11]
   21dec:	b	21dfc <__assert_fail@plt+0x106c8>
   21df0:	movw	r0, #0
   21df4:	and	r0, r0, #1
   21df8:	strb	r0, [sp, #11]
   21dfc:	ldrb	r0, [sp, #11]
   21e00:	and	r0, r0, #1
   21e04:	add	sp, sp, #12
   21e08:	bx	lr
   21e0c:	sub	sp, sp, #8
   21e10:	str	r0, [sp]
   21e14:	ldr	r0, [sp]
   21e18:	sub	r0, r0, #65	; 0x41
   21e1c:	cmp	r0, #25
   21e20:	bhi	21e3c <__assert_fail@plt+0x10708>
   21e24:	b	21e28 <__assert_fail@plt+0x106f4>
   21e28:	ldr	r0, [sp]
   21e2c:	sub	r0, r0, #65	; 0x41
   21e30:	add	r0, r0, #97	; 0x61
   21e34:	str	r0, [sp, #4]
   21e38:	b	21e44 <__assert_fail@plt+0x10710>
   21e3c:	ldr	r0, [sp]
   21e40:	str	r0, [sp, #4]
   21e44:	ldr	r0, [sp, #4]
   21e48:	add	sp, sp, #8
   21e4c:	bx	lr
   21e50:	sub	sp, sp, #8
   21e54:	str	r0, [sp]
   21e58:	ldr	r0, [sp]
   21e5c:	sub	r0, r0, #97	; 0x61
   21e60:	cmp	r0, #25
   21e64:	bhi	21e80 <__assert_fail@plt+0x1074c>
   21e68:	b	21e6c <__assert_fail@plt+0x10738>
   21e6c:	ldr	r0, [sp]
   21e70:	sub	r0, r0, #97	; 0x61
   21e74:	add	r0, r0, #65	; 0x41
   21e78:	str	r0, [sp, #4]
   21e7c:	b	21e88 <__assert_fail@plt+0x10754>
   21e80:	ldr	r0, [sp]
   21e84:	str	r0, [sp, #4]
   21e88:	ldr	r0, [sp, #4]
   21e8c:	add	sp, sp, #8
   21e90:	bx	lr
   21e94:	sub	sp, sp, #8
   21e98:	push	{fp, lr}
   21e9c:	mov	fp, sp
   21ea0:	sub	sp, sp, #48	; 0x30
   21ea4:	str	r3, [fp, #12]
   21ea8:	str	r2, [fp, #8]
   21eac:	str	r0, [fp, #-4]
   21eb0:	str	r1, [fp, #-8]
   21eb4:	mvn	r0, #0
   21eb8:	str	r0, [fp, #-16]
   21ebc:	add	r0, fp, #8
   21ec0:	str	r0, [fp, #-12]
   21ec4:	ldr	r0, [fp, #-8]
   21ec8:	cmp	r0, #0
   21ecc:	str	r0, [sp, #12]
   21ed0:	beq	21eec <__assert_fail@plt+0x107b8>
   21ed4:	b	21ed8 <__assert_fail@plt+0x107a4>
   21ed8:	movw	r0, #1030	; 0x406
   21edc:	ldr	r1, [sp, #12]
   21ee0:	cmp	r1, r0
   21ee4:	beq	21f14 <__assert_fail@plt+0x107e0>
   21ee8:	b	21f3c <__assert_fail@plt+0x10808>
   21eec:	ldr	r0, [fp, #-12]
   21ef0:	add	r1, r0, #4
   21ef4:	str	r1, [fp, #-12]
   21ef8:	ldr	r0, [r0]
   21efc:	str	r0, [fp, #-20]	; 0xffffffec
   21f00:	ldr	r0, [fp, #-4]
   21f04:	ldr	r1, [fp, #-20]	; 0xffffffec
   21f08:	bl	220e8 <__assert_fail@plt+0x109b4>
   21f0c:	str	r0, [fp, #-16]
   21f10:	b	220c8 <__assert_fail@plt+0x10994>
   21f14:	ldr	r0, [fp, #-12]
   21f18:	add	r1, r0, #4
   21f1c:	str	r1, [fp, #-12]
   21f20:	ldr	r0, [r0]
   21f24:	str	r0, [sp, #24]
   21f28:	ldr	r0, [fp, #-4]
   21f2c:	ldr	r1, [sp, #24]
   21f30:	bl	2211c <__assert_fail@plt+0x109e8>
   21f34:	str	r0, [fp, #-16]
   21f38:	b	220c8 <__assert_fail@plt+0x10994>
   21f3c:	ldr	r0, [fp, #-8]
   21f40:	cmp	r0, #0
   21f44:	str	r0, [sp, #8]
   21f48:	beq	22070 <__assert_fail@plt+0x1093c>
   21f4c:	b	21f50 <__assert_fail@plt+0x1081c>
   21f50:	ldr	r0, [sp, #8]
   21f54:	cmp	r0, #1
   21f58:	beq	2205c <__assert_fail@plt+0x10928>
   21f5c:	b	21f60 <__assert_fail@plt+0x1082c>
   21f60:	ldr	r0, [sp, #8]
   21f64:	cmp	r0, #2
   21f68:	beq	22070 <__assert_fail@plt+0x1093c>
   21f6c:	b	21f70 <__assert_fail@plt+0x1083c>
   21f70:	ldr	r0, [sp, #8]
   21f74:	cmp	r0, #3
   21f78:	beq	2205c <__assert_fail@plt+0x10928>
   21f7c:	b	21f80 <__assert_fail@plt+0x1084c>
   21f80:	ldr	r0, [sp, #8]
   21f84:	cmp	r0, #4
   21f88:	beq	22070 <__assert_fail@plt+0x1093c>
   21f8c:	b	21f90 <__assert_fail@plt+0x1085c>
   21f90:	ldr	r0, [sp, #8]
   21f94:	cmp	r0, #8
   21f98:	beq	22070 <__assert_fail@plt+0x1093c>
   21f9c:	b	21fa0 <__assert_fail@plt+0x1086c>
   21fa0:	ldr	r0, [sp, #8]
   21fa4:	cmp	r0, #9
   21fa8:	beq	2205c <__assert_fail@plt+0x10928>
   21fac:	b	21fb0 <__assert_fail@plt+0x1087c>
   21fb0:	ldr	r0, [sp, #8]
   21fb4:	cmp	r0, #10
   21fb8:	beq	22070 <__assert_fail@plt+0x1093c>
   21fbc:	b	21fc0 <__assert_fail@plt+0x1088c>
   21fc0:	ldr	r0, [sp, #8]
   21fc4:	cmp	r0, #11
   21fc8:	beq	2205c <__assert_fail@plt+0x10928>
   21fcc:	b	21fd0 <__assert_fail@plt+0x1089c>
   21fd0:	ldr	r0, [sp, #8]
   21fd4:	cmp	r0, #1024	; 0x400
   21fd8:	beq	22070 <__assert_fail@plt+0x1093c>
   21fdc:	b	21fe0 <__assert_fail@plt+0x108ac>
   21fe0:	movw	r0, #1025	; 0x401
   21fe4:	ldr	r1, [sp, #8]
   21fe8:	cmp	r1, r0
   21fec:	beq	2205c <__assert_fail@plt+0x10928>
   21ff0:	b	21ff4 <__assert_fail@plt+0x108c0>
   21ff4:	movw	r0, #1026	; 0x402
   21ff8:	ldr	r1, [sp, #8]
   21ffc:	cmp	r1, r0
   22000:	beq	22070 <__assert_fail@plt+0x1093c>
   22004:	b	22008 <__assert_fail@plt+0x108d4>
   22008:	movw	r0, #1030	; 0x406
   2200c:	ldr	r1, [sp, #8]
   22010:	sub	r0, r1, r0
   22014:	cmp	r0, #2
   22018:	bcc	22070 <__assert_fail@plt+0x1093c>
   2201c:	b	22020 <__assert_fail@plt+0x108ec>
   22020:	movw	r0, #1032	; 0x408
   22024:	ldr	r1, [sp, #8]
   22028:	cmp	r1, r0
   2202c:	beq	2205c <__assert_fail@plt+0x10928>
   22030:	b	22034 <__assert_fail@plt+0x10900>
   22034:	movw	r0, #1033	; 0x409
   22038:	ldr	r1, [sp, #8]
   2203c:	cmp	r1, r0
   22040:	beq	22070 <__assert_fail@plt+0x1093c>
   22044:	b	22048 <__assert_fail@plt+0x10914>
   22048:	movw	r0, #1034	; 0x40a
   2204c:	ldr	r1, [sp, #8]
   22050:	cmp	r1, r0
   22054:	bne	2209c <__assert_fail@plt+0x10968>
   22058:	b	2205c <__assert_fail@plt+0x10928>
   2205c:	ldr	r0, [fp, #-4]
   22060:	ldr	r1, [fp, #-8]
   22064:	bl	11668 <fcntl64@plt>
   22068:	str	r0, [fp, #-16]
   2206c:	b	220c4 <__assert_fail@plt+0x10990>
   22070:	ldr	r0, [fp, #-12]
   22074:	add	r1, r0, #4
   22078:	str	r1, [fp, #-12]
   2207c:	ldr	r0, [r0]
   22080:	str	r0, [sp, #20]
   22084:	ldr	r0, [fp, #-4]
   22088:	ldr	r1, [fp, #-8]
   2208c:	ldr	r2, [sp, #20]
   22090:	bl	11668 <fcntl64@plt>
   22094:	str	r0, [fp, #-16]
   22098:	b	220c4 <__assert_fail@plt+0x10990>
   2209c:	ldr	r0, [fp, #-12]
   220a0:	add	r1, r0, #4
   220a4:	str	r1, [fp, #-12]
   220a8:	ldr	r0, [r0]
   220ac:	str	r0, [sp, #16]
   220b0:	ldr	r0, [fp, #-4]
   220b4:	ldr	r1, [fp, #-8]
   220b8:	ldr	r2, [sp, #16]
   220bc:	bl	11668 <fcntl64@plt>
   220c0:	str	r0, [fp, #-16]
   220c4:	b	220c8 <__assert_fail@plt+0x10994>
   220c8:	sub	r0, fp, #12
   220cc:	ldr	r1, [fp, #-16]
   220d0:	str	r0, [sp, #4]
   220d4:	mov	r0, r1
   220d8:	mov	sp, fp
   220dc:	pop	{fp, lr}
   220e0:	add	sp, sp, #8
   220e4:	bx	lr
   220e8:	push	{fp, lr}
   220ec:	mov	fp, sp
   220f0:	sub	sp, sp, #16
   220f4:	str	r0, [fp, #-4]
   220f8:	str	r1, [sp, #8]
   220fc:	ldr	r0, [fp, #-4]
   22100:	ldr	r2, [sp, #8]
   22104:	movw	r1, #0
   22108:	bl	11668 <fcntl64@plt>
   2210c:	str	r0, [sp, #4]
   22110:	ldr	r0, [sp, #4]
   22114:	mov	sp, fp
   22118:	pop	{fp, pc}
   2211c:	push	{fp, lr}
   22120:	mov	fp, sp
   22124:	sub	sp, sp, #32
   22128:	str	r0, [fp, #-4]
   2212c:	str	r1, [fp, #-8]
   22130:	movw	r0, #18020	; 0x4664
   22134:	movt	r0, #3
   22138:	ldr	r0, [r0]
   2213c:	movw	r1, #0
   22140:	cmp	r1, r0
   22144:	bgt	221c4 <__assert_fail@plt+0x10a90>
   22148:	ldr	r0, [fp, #-4]
   2214c:	ldr	r2, [fp, #-8]
   22150:	movw	r1, #1030	; 0x406
   22154:	bl	11668 <fcntl64@plt>
   22158:	str	r0, [fp, #-12]
   2215c:	ldr	r0, [fp, #-12]
   22160:	movw	r1, #0
   22164:	cmp	r1, r0
   22168:	ble	2217c <__assert_fail@plt+0x10a48>
   2216c:	bl	115f0 <__errno_location@plt>
   22170:	ldr	r0, [r0]
   22174:	cmp	r0, #22
   22178:	beq	22190 <__assert_fail@plt+0x10a5c>
   2217c:	movw	r0, #18020	; 0x4664
   22180:	movt	r0, #3
   22184:	movw	r1, #1
   22188:	str	r1, [r0]
   2218c:	b	221c0 <__assert_fail@plt+0x10a8c>
   22190:	ldr	r0, [fp, #-4]
   22194:	ldr	r1, [fp, #-8]
   22198:	bl	220e8 <__assert_fail@plt+0x109b4>
   2219c:	str	r0, [fp, #-12]
   221a0:	ldr	r0, [fp, #-12]
   221a4:	cmp	r0, #0
   221a8:	blt	221bc <__assert_fail@plt+0x10a88>
   221ac:	movw	r0, #18020	; 0x4664
   221b0:	movt	r0, #3
   221b4:	mvn	r1, #0
   221b8:	str	r1, [r0]
   221bc:	b	221c0 <__assert_fail@plt+0x10a8c>
   221c0:	b	221d4 <__assert_fail@plt+0x10aa0>
   221c4:	ldr	r0, [fp, #-4]
   221c8:	ldr	r1, [fp, #-8]
   221cc:	bl	220e8 <__assert_fail@plt+0x109b4>
   221d0:	str	r0, [fp, #-12]
   221d4:	ldr	r0, [fp, #-12]
   221d8:	movw	r1, #0
   221dc:	cmp	r1, r0
   221e0:	bgt	22268 <__assert_fail@plt+0x10b34>
   221e4:	movw	r0, #18020	; 0x4664
   221e8:	movt	r0, #3
   221ec:	ldr	r0, [r0]
   221f0:	cmn	r0, #1
   221f4:	bne	22268 <__assert_fail@plt+0x10b34>
   221f8:	ldr	r0, [fp, #-12]
   221fc:	movw	r1, #1
   22200:	bl	11668 <fcntl64@plt>
   22204:	str	r0, [sp, #16]
   22208:	ldr	r0, [sp, #16]
   2220c:	cmp	r0, #0
   22210:	blt	22230 <__assert_fail@plt+0x10afc>
   22214:	ldr	r0, [fp, #-12]
   22218:	ldr	r1, [sp, #16]
   2221c:	orr	r2, r1, #1
   22220:	movw	r1, #2
   22224:	bl	11668 <fcntl64@plt>
   22228:	cmn	r0, #1
   2222c:	bne	22264 <__assert_fail@plt+0x10b30>
   22230:	bl	115f0 <__errno_location@plt>
   22234:	ldr	r0, [r0]
   22238:	str	r0, [sp, #12]
   2223c:	ldr	r0, [fp, #-12]
   22240:	bl	1171c <close@plt>
   22244:	ldr	r1, [sp, #12]
   22248:	str	r0, [sp, #8]
   2224c:	str	r1, [sp, #4]
   22250:	bl	115f0 <__errno_location@plt>
   22254:	ldr	r1, [sp, #4]
   22258:	str	r1, [r0]
   2225c:	mvn	r0, #0
   22260:	str	r0, [fp, #-12]
   22264:	b	22268 <__assert_fail@plt+0x10b34>
   22268:	ldr	r0, [fp, #-12]
   2226c:	mov	sp, fp
   22270:	pop	{fp, pc}
   22274:	push	{r4, r5, fp, lr}
   22278:	add	fp, sp, #8
   2227c:	sub	sp, sp, #272	; 0x110
   22280:	add	r1, sp, #7
   22284:	str	r0, [fp, #-16]
   22288:	ldr	r0, [fp, #-16]
   2228c:	movw	r2, #257	; 0x101
   22290:	bl	22310 <__assert_fail@plt+0x10bdc>
   22294:	cmp	r0, #0
   22298:	beq	222ac <__assert_fail@plt+0x10b78>
   2229c:	movw	r0, #0
   222a0:	and	r0, r0, #1
   222a4:	strb	r0, [fp, #-9]
   222a8:	b	22300 <__assert_fail@plt+0x10bcc>
   222ac:	add	r0, sp, #7
   222b0:	movw	r1, #15904	; 0x3e20
   222b4:	movt	r1, #2
   222b8:	bl	113bc <strcmp@plt>
   222bc:	cmp	r0, #0
   222c0:	movw	r0, #1
   222c4:	str	r0, [sp]
   222c8:	beq	222ec <__assert_fail@plt+0x10bb8>
   222cc:	add	r0, sp, #7
   222d0:	movw	r1, #15906	; 0x3e22
   222d4:	movt	r1, #2
   222d8:	bl	113bc <strcmp@plt>
   222dc:	cmp	r0, #0
   222e0:	movw	r0, #0
   222e4:	moveq	r0, #1
   222e8:	str	r0, [sp]
   222ec:	ldr	r0, [sp]
   222f0:	mvn	r1, #0
   222f4:	eor	r0, r0, r1
   222f8:	and	r0, r0, #1
   222fc:	strb	r0, [fp, #-9]
   22300:	ldrb	r0, [fp, #-9]
   22304:	and	r0, r0, #1
   22308:	sub	sp, fp, #8
   2230c:	pop	{r4, r5, fp, pc}
   22310:	push	{fp, lr}
   22314:	mov	fp, sp
   22318:	sub	sp, sp, #16
   2231c:	str	r0, [fp, #-4]
   22320:	str	r1, [sp, #8]
   22324:	str	r2, [sp, #4]
   22328:	ldr	r0, [fp, #-4]
   2232c:	ldr	r1, [sp, #8]
   22330:	ldr	r2, [sp, #4]
   22334:	bl	22340 <__assert_fail@plt+0x10c0c>
   22338:	mov	sp, fp
   2233c:	pop	{fp, pc}
   22340:	push	{fp, lr}
   22344:	mov	fp, sp
   22348:	sub	sp, sp, #24
   2234c:	str	r0, [fp, #-8]
   22350:	str	r1, [sp, #12]
   22354:	str	r2, [sp, #8]
   22358:	ldr	r0, [fp, #-8]
   2235c:	bl	22440 <__assert_fail@plt+0x10d0c>
   22360:	str	r0, [sp, #4]
   22364:	ldr	r0, [sp, #4]
   22368:	movw	r1, #0
   2236c:	cmp	r0, r1
   22370:	bne	22398 <__assert_fail@plt+0x10c64>
   22374:	ldr	r0, [sp, #8]
   22378:	cmp	r0, #0
   2237c:	bls	2238c <__assert_fail@plt+0x10c58>
   22380:	ldr	r0, [sp, #12]
   22384:	movw	r1, #0
   22388:	strb	r1, [r0]
   2238c:	movw	r0, #22
   22390:	str	r0, [fp, #-4]
   22394:	b	22414 <__assert_fail@plt+0x10ce0>
   22398:	ldr	r0, [sp, #4]
   2239c:	bl	1159c <strlen@plt>
   223a0:	str	r0, [sp]
   223a4:	ldr	r0, [sp]
   223a8:	ldr	r1, [sp, #8]
   223ac:	cmp	r0, r1
   223b0:	bcs	223d4 <__assert_fail@plt+0x10ca0>
   223b4:	ldr	r0, [sp, #12]
   223b8:	ldr	r1, [sp, #4]
   223bc:	ldr	r2, [sp]
   223c0:	add	r2, r2, #1
   223c4:	bl	11428 <memcpy@plt>
   223c8:	movw	r0, #0
   223cc:	str	r0, [fp, #-4]
   223d0:	b	22414 <__assert_fail@plt+0x10ce0>
   223d4:	ldr	r0, [sp, #8]
   223d8:	cmp	r0, #0
   223dc:	bls	2240c <__assert_fail@plt+0x10cd8>
   223e0:	ldr	r0, [sp, #12]
   223e4:	ldr	r1, [sp, #4]
   223e8:	ldr	r2, [sp, #8]
   223ec:	sub	r2, r2, #1
   223f0:	bl	11428 <memcpy@plt>
   223f4:	ldr	r0, [sp, #12]
   223f8:	ldr	r1, [sp, #8]
   223fc:	sub	r1, r1, #1
   22400:	add	r0, r0, r1
   22404:	movw	r1, #0
   22408:	strb	r1, [r0]
   2240c:	movw	r0, #34	; 0x22
   22410:	str	r0, [fp, #-4]
   22414:	ldr	r0, [fp, #-4]
   22418:	mov	sp, fp
   2241c:	pop	{fp, pc}
   22420:	push	{fp, lr}
   22424:	mov	fp, sp
   22428:	sub	sp, sp, #8
   2242c:	str	r0, [sp, #4]
   22430:	ldr	r0, [sp, #4]
   22434:	bl	22440 <__assert_fail@plt+0x10d0c>
   22438:	mov	sp, fp
   2243c:	pop	{fp, pc}
   22440:	push	{fp, lr}
   22444:	mov	fp, sp
   22448:	sub	sp, sp, #8
   2244c:	str	r0, [sp, #4]
   22450:	ldr	r0, [sp, #4]
   22454:	movw	r1, #0
   22458:	bl	11674 <setlocale@plt>
   2245c:	str	r0, [sp]
   22460:	ldr	r0, [sp]
   22464:	mov	sp, fp
   22468:	pop	{fp, pc}
   2246c:	cmp	r3, #0
   22470:	cmpeq	r2, #0
   22474:	bne	22498 <__assert_fail@plt+0x10d64>
   22478:	cmp	r1, #0
   2247c:	movlt	r1, #-2147483648	; 0x80000000
   22480:	movlt	r0, #0
   22484:	blt	22494 <__assert_fail@plt+0x10d60>
   22488:	cmpeq	r0, #0
   2248c:	mvnne	r1, #-2147483648	; 0x80000000
   22490:	mvnne	r0, #0
   22494:	b	2257c <__assert_fail@plt+0x10e48>
   22498:	sub	sp, sp, #8
   2249c:	push	{sp, lr}
   224a0:	cmp	r1, #0
   224a4:	blt	224c4 <__assert_fail@plt+0x10d90>
   224a8:	cmp	r3, #0
   224ac:	blt	224f8 <__assert_fail@plt+0x10dc4>
   224b0:	bl	2258c <__assert_fail@plt+0x10e58>
   224b4:	ldr	lr, [sp, #4]
   224b8:	add	sp, sp, #8
   224bc:	pop	{r2, r3}
   224c0:	bx	lr
   224c4:	rsbs	r0, r0, #0
   224c8:	sbc	r1, r1, r1, lsl #1
   224cc:	cmp	r3, #0
   224d0:	blt	2251c <__assert_fail@plt+0x10de8>
   224d4:	bl	2258c <__assert_fail@plt+0x10e58>
   224d8:	ldr	lr, [sp, #4]
   224dc:	add	sp, sp, #8
   224e0:	pop	{r2, r3}
   224e4:	rsbs	r0, r0, #0
   224e8:	sbc	r1, r1, r1, lsl #1
   224ec:	rsbs	r2, r2, #0
   224f0:	sbc	r3, r3, r3, lsl #1
   224f4:	bx	lr
   224f8:	rsbs	r2, r2, #0
   224fc:	sbc	r3, r3, r3, lsl #1
   22500:	bl	2258c <__assert_fail@plt+0x10e58>
   22504:	ldr	lr, [sp, #4]
   22508:	add	sp, sp, #8
   2250c:	pop	{r2, r3}
   22510:	rsbs	r0, r0, #0
   22514:	sbc	r1, r1, r1, lsl #1
   22518:	bx	lr
   2251c:	rsbs	r2, r2, #0
   22520:	sbc	r3, r3, r3, lsl #1
   22524:	bl	2258c <__assert_fail@plt+0x10e58>
   22528:	ldr	lr, [sp, #4]
   2252c:	add	sp, sp, #8
   22530:	pop	{r2, r3}
   22534:	rsbs	r2, r2, #0
   22538:	sbc	r3, r3, r3, lsl #1
   2253c:	bx	lr
   22540:	cmp	r3, #0
   22544:	cmpeq	r2, #0
   22548:	bne	22560 <__assert_fail@plt+0x10e2c>
   2254c:	cmp	r1, #0
   22550:	cmpeq	r0, #0
   22554:	mvnne	r1, #0
   22558:	mvnne	r0, #0
   2255c:	b	2257c <__assert_fail@plt+0x10e48>
   22560:	sub	sp, sp, #8
   22564:	push	{sp, lr}
   22568:	bl	2258c <__assert_fail@plt+0x10e58>
   2256c:	ldr	lr, [sp, #4]
   22570:	add	sp, sp, #8
   22574:	pop	{r2, r3}
   22578:	bx	lr
   2257c:	push	{r1, lr}
   22580:	mov	r0, #8
   22584:	bl	113b0 <raise@plt>
   22588:	pop	{r1, pc}
   2258c:	cmp	r1, r3
   22590:	cmpeq	r0, r2
   22594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22598:	mov	r4, r0
   2259c:	movcc	r0, #0
   225a0:	mov	r5, r1
   225a4:	ldr	lr, [sp, #36]	; 0x24
   225a8:	movcc	r1, r0
   225ac:	bcc	226a8 <__assert_fail@plt+0x10f74>
   225b0:	cmp	r3, #0
   225b4:	clzeq	ip, r2
   225b8:	clzne	ip, r3
   225bc:	addeq	ip, ip, #32
   225c0:	cmp	r5, #0
   225c4:	clzeq	r1, r4
   225c8:	addeq	r1, r1, #32
   225cc:	clzne	r1, r5
   225d0:	sub	ip, ip, r1
   225d4:	sub	sl, ip, #32
   225d8:	lsl	r9, r3, ip
   225dc:	rsb	fp, ip, #32
   225e0:	orr	r9, r9, r2, lsl sl
   225e4:	orr	r9, r9, r2, lsr fp
   225e8:	lsl	r8, r2, ip
   225ec:	cmp	r5, r9
   225f0:	cmpeq	r4, r8
   225f4:	movcc	r0, #0
   225f8:	movcc	r1, r0
   225fc:	bcc	22618 <__assert_fail@plt+0x10ee4>
   22600:	mov	r0, #1
   22604:	subs	r4, r4, r8
   22608:	lsl	r1, r0, sl
   2260c:	orr	r1, r1, r0, lsr fp
   22610:	lsl	r0, r0, ip
   22614:	sbc	r5, r5, r9
   22618:	cmp	ip, #0
   2261c:	beq	226a8 <__assert_fail@plt+0x10f74>
   22620:	lsr	r6, r8, #1
   22624:	orr	r6, r6, r9, lsl #31
   22628:	lsr	r7, r9, #1
   2262c:	mov	r2, ip
   22630:	b	22654 <__assert_fail@plt+0x10f20>
   22634:	subs	r3, r4, r6
   22638:	sbc	r8, r5, r7
   2263c:	adds	r3, r3, r3
   22640:	adc	r8, r8, r8
   22644:	adds	r4, r3, #1
   22648:	adc	r5, r8, #0
   2264c:	subs	r2, r2, #1
   22650:	beq	22670 <__assert_fail@plt+0x10f3c>
   22654:	cmp	r5, r7
   22658:	cmpeq	r4, r6
   2265c:	bcs	22634 <__assert_fail@plt+0x10f00>
   22660:	adds	r4, r4, r4
   22664:	adc	r5, r5, r5
   22668:	subs	r2, r2, #1
   2266c:	bne	22654 <__assert_fail@plt+0x10f20>
   22670:	lsr	r3, r4, ip
   22674:	orr	r3, r3, r5, lsl fp
   22678:	lsr	r2, r5, ip
   2267c:	orr	r3, r3, r5, lsr sl
   22680:	adds	r0, r0, r4
   22684:	mov	r4, r3
   22688:	lsl	r3, r2, ip
   2268c:	orr	r3, r3, r4, lsl sl
   22690:	lsl	ip, r4, ip
   22694:	orr	r3, r3, r4, lsr fp
   22698:	adc	r1, r1, r5
   2269c:	subs	r0, r0, ip
   226a0:	mov	r5, r2
   226a4:	sbc	r1, r1, r3
   226a8:	cmp	lr, #0
   226ac:	strdne	r4, [lr]
   226b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   226b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   226b8:	mov	r7, r0
   226bc:	ldr	r6, [pc, #72]	; 2270c <__assert_fail@plt+0x10fd8>
   226c0:	ldr	r5, [pc, #72]	; 22710 <__assert_fail@plt+0x10fdc>
   226c4:	add	r6, pc, r6
   226c8:	add	r5, pc, r5
   226cc:	sub	r6, r6, r5
   226d0:	mov	r8, r1
   226d4:	mov	r9, r2
   226d8:	bl	1136c <fdopen@plt-0x20>
   226dc:	asrs	r6, r6, #2
   226e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   226e4:	mov	r4, #0
   226e8:	add	r4, r4, #1
   226ec:	ldr	r3, [r5], #4
   226f0:	mov	r2, r9
   226f4:	mov	r1, r8
   226f8:	mov	r0, r7
   226fc:	blx	r3
   22700:	cmp	r6, r4
   22704:	bne	226e8 <__assert_fail@plt+0x10fb4>
   22708:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2270c:	andeq	r1, r1, r0, asr #16
   22710:	andeq	r1, r1, r8, lsr r8
   22714:	bx	lr
   22718:	ldr	r3, [pc, #12]	; 2272c <__assert_fail@plt+0x10ff8>
   2271c:	mov	r1, #0
   22720:	add	r3, pc, r3
   22724:	ldr	r2, [r3]
   22728:	b	115fc <__cxa_atexit@plt>
   2272c:	andeq	r1, r1, r8, lsr #20
   22730:	mov	r2, r1
   22734:	mov	r1, r0
   22738:	mov	r0, #3
   2273c:	b	114a0 <__fxstat64@plt>

Disassembly of section .fini:

00022740 <.fini>:
   22740:	push	{r3, lr}
   22744:	pop	{r3, pc}
