
../repos/coreutils/src/[:     file format elf32-littlearm


Disassembly of section .init:

00010be4 <.init>:
   10be4:	push	{r3, lr}
   10be8:	bl	11070 <__lxstat64@plt+0x214>
   10bec:	pop	{r3, pc}

Disassembly of section .plt:

00010bf0 <calloc@plt-0x14>:
   10bf0:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf4:	ldr	lr, [pc, #4]	; 10c00 <calloc@plt-0x4>
   10bf8:	add	lr, pc, lr
   10bfc:	ldr	pc, [lr, #8]!
   10c00:	andeq	r7, r1, r0, lsl #8

00010c04 <calloc@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #94208	; 0x17000
   10c0c:	ldr	pc, [ip, #1024]!	; 0x400

00010c10 <fputs_unlocked@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #94208	; 0x17000
   10c18:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c1c <raise@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #94208	; 0x17000
   10c24:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c28 <strcmp@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #94208	; 0x17000
   10c30:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c34 <strtol@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #94208	; 0x17000
   10c3c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c40 <fflush@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #94208	; 0x17000
   10c48:	ldr	pc, [ip, #984]!	; 0x3d8

00010c4c <free@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #94208	; 0x17000
   10c54:	ldr	pc, [ip, #976]!	; 0x3d0

00010c58 <_exit@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #94208	; 0x17000
   10c60:	ldr	pc, [ip, #968]!	; 0x3c8

00010c64 <memcpy@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #94208	; 0x17000
   10c6c:	ldr	pc, [ip, #960]!	; 0x3c0

00010c70 <mbsinit@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #94208	; 0x17000
   10c78:	ldr	pc, [ip, #952]!	; 0x3b8

00010c7c <memcmp@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #94208	; 0x17000
   10c84:	ldr	pc, [ip, #944]!	; 0x3b0

00010c88 <fputc_unlocked@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #94208	; 0x17000
   10c90:	ldr	pc, [ip, #936]!	; 0x3a8

00010c94 <dcgettext@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #94208	; 0x17000
   10c9c:	ldr	pc, [ip, #928]!	; 0x3a0

00010ca0 <realloc@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #94208	; 0x17000
   10ca8:	ldr	pc, [ip, #920]!	; 0x398

00010cac <textdomain@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #94208	; 0x17000
   10cb4:	ldr	pc, [ip, #912]!	; 0x390

00010cb8 <geteuid@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #94208	; 0x17000
   10cc0:	ldr	pc, [ip, #904]!	; 0x388

00010cc4 <iswprint@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #94208	; 0x17000
   10ccc:	ldr	pc, [ip, #896]!	; 0x380

00010cd0 <getegid@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #94208	; 0x17000
   10cd8:	ldr	pc, [ip, #888]!	; 0x378

00010cdc <fwrite@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #94208	; 0x17000
   10ce4:	ldr	pc, [ip, #880]!	; 0x370

00010ce8 <lseek64@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #94208	; 0x17000
   10cf0:	ldr	pc, [ip, #872]!	; 0x368

00010cf4 <__ctype_get_mb_cur_max@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #94208	; 0x17000
   10cfc:	ldr	pc, [ip, #864]!	; 0x360

00010d00 <__fpending@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #94208	; 0x17000
   10d08:	ldr	pc, [ip, #856]!	; 0x358

00010d0c <mbrtowc@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #94208	; 0x17000
   10d14:	ldr	pc, [ip, #848]!	; 0x350

00010d18 <error@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #94208	; 0x17000
   10d20:	ldr	pc, [ip, #840]!	; 0x348

00010d24 <malloc@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #94208	; 0x17000
   10d2c:	ldr	pc, [ip, #832]!	; 0x340

00010d30 <error_at_line@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #94208	; 0x17000
   10d38:	ldr	pc, [ip, #824]!	; 0x338

00010d3c <__libc_start_main@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #94208	; 0x17000
   10d44:	ldr	pc, [ip, #816]!	; 0x330

00010d48 <__freading@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #94208	; 0x17000
   10d50:	ldr	pc, [ip, #808]!	; 0x328

00010d54 <__gmon_start__@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #94208	; 0x17000
   10d5c:	ldr	pc, [ip, #800]!	; 0x320

00010d60 <__ctype_b_loc@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #94208	; 0x17000
   10d68:	ldr	pc, [ip, #792]!	; 0x318

00010d6c <exit@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #94208	; 0x17000
   10d74:	ldr	pc, [ip, #784]!	; 0x310

00010d78 <strlen@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #94208	; 0x17000
   10d80:	ldr	pc, [ip, #776]!	; 0x308

00010d84 <__errno_location@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #94208	; 0x17000
   10d8c:	ldr	pc, [ip, #768]!	; 0x300

00010d90 <__cxa_atexit@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #94208	; 0x17000
   10d98:	ldr	pc, [ip, #760]!	; 0x2f8

00010d9c <__vasprintf_chk@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #94208	; 0x17000
   10da4:	ldr	pc, [ip, #752]!	; 0x2f0

00010da8 <memset@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #94208	; 0x17000
   10db0:	ldr	pc, [ip, #744]!	; 0x2e8

00010db4 <__printf_chk@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #94208	; 0x17000
   10dbc:	ldr	pc, [ip, #736]!	; 0x2e0

00010dc0 <fileno@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #94208	; 0x17000
   10dc8:	ldr	pc, [ip, #728]!	; 0x2d8

00010dcc <__fprintf_chk@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #720]!	; 0x2d0

00010dd8 <fclose@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #712]!	; 0x2c8

00010de4 <fseeko64@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #704]!	; 0x2c0

00010df0 <setlocale@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dfc <strrchr@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #688]!	; 0x2b0

00010e08 <nl_langinfo@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #680]!	; 0x2a8

00010e14 <euidaccess@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #672]!	; 0x2a0

00010e20 <bindtextdomain@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #664]!	; 0x298

00010e2c <__xstat64@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #656]!	; 0x290

00010e38 <isatty@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #648]!	; 0x288

00010e44 <strncmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #640]!	; 0x280

00010e50 <abort@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #632]!	; 0x278

00010e5c <__lxstat64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #624]!	; 0x270

Disassembly of section .text:

00010e68 <.text>:
   10e68:	push	{r4, r5, r6, lr}
   10e6c:	mov	r4, r0
   10e70:	sub	sp, sp, #16
   10e74:	ldr	r0, [r1]
   10e78:	mov	r6, r1
   10e7c:	bl	12ac0 <__lxstat64@plt+0x1c64>
   10e80:	ldr	r1, [pc, #360]	; 10ff0 <__lxstat64@plt+0x194>
   10e84:	mov	r0, #6
   10e88:	bl	10df0 <setlocale@plt>
   10e8c:	ldr	r1, [pc, #352]	; 10ff4 <__lxstat64@plt+0x198>
   10e90:	ldr	r0, [pc, #352]	; 10ff8 <__lxstat64@plt+0x19c>
   10e94:	bl	10e20 <bindtextdomain@plt>
   10e98:	ldr	r0, [pc, #344]	; 10ff8 <__lxstat64@plt+0x19c>
   10e9c:	bl	10cac <textdomain@plt>
   10ea0:	ldr	r3, [pc, #340]	; 10ffc <__lxstat64@plt+0x1a0>
   10ea4:	ldr	r5, [pc, #340]	; 11000 <__lxstat64@plt+0x1a4>
   10ea8:	mov	r2, #2
   10eac:	ldr	r0, [pc, #336]	; 11004 <__lxstat64@plt+0x1a8>
   10eb0:	str	r2, [r3]
   10eb4:	bl	16404 <__lxstat64@plt+0x55a8>
   10eb8:	cmp	r4, #2
   10ebc:	str	r6, [r5]
   10ec0:	beq	10f18 <__lxstat64@plt+0xbc>
   10ec4:	cmp	r4, #1
   10ec8:	ble	10f64 <__lxstat64@plt+0x108>
   10ecc:	sub	r3, r4, #-1073741823	; 0xc0000001
   10ed0:	ldr	r1, [pc, #304]	; 11008 <__lxstat64@plt+0x1ac>
   10ed4:	ldr	r0, [r6, r3, lsl #2]
   10ed8:	bl	10c28 <strcmp@plt>
   10edc:	subs	r6, r0, #0
   10ee0:	bne	10f64 <__lxstat64@plt+0x108>
   10ee4:	sub	r2, r4, #1
   10ee8:	mov	r3, #1
   10eec:	sub	r0, r4, #2
   10ef0:	stmib	r5, {r2, r3}
   10ef4:	bl	11f68 <__lxstat64@plt+0x110c>
   10ef8:	ldmib	r5, {r3, r4}
   10efc:	cmp	r4, r3
   10f00:	eoreq	r0, r0, #1
   10f04:	uxtbeq	r4, r0
   10f08:	bne	10fc0 <__lxstat64@plt+0x164>
   10f0c:	mov	r0, r4
   10f10:	add	sp, sp, #16
   10f14:	pop	{r4, r5, r6, pc}
   10f18:	ldr	r6, [r6, #4]
   10f1c:	ldr	r1, [pc, #232]	; 1100c <__lxstat64@plt+0x1b0>
   10f20:	mov	r0, r6
   10f24:	bl	10c28 <strcmp@plt>
   10f28:	cmp	r0, #0
   10f2c:	beq	10fec <__lxstat64@plt+0x190>
   10f30:	ldr	r1, [pc, #216]	; 11010 <__lxstat64@plt+0x1b4>
   10f34:	mov	r0, r6
   10f38:	bl	10c28 <strcmp@plt>
   10f3c:	subs	r4, r0, #0
   10f40:	beq	10f8c <__lxstat64@plt+0x130>
   10f44:	mov	r0, r6
   10f48:	ldr	r1, [pc, #184]	; 11008 <__lxstat64@plt+0x1ac>
   10f4c:	bl	10c28 <strcmp@plt>
   10f50:	cmp	r0, #0
   10f54:	moveq	r4, #1
   10f58:	streq	r4, [r5, #4]
   10f5c:	streq	r4, [r5, #8]
   10f60:	beq	10f0c <__lxstat64@plt+0xb0>
   10f64:	ldr	r1, [pc, #168]	; 11014 <__lxstat64@plt+0x1b8>
   10f68:	mov	r2, #5
   10f6c:	mov	r0, #0
   10f70:	bl	10c94 <dcgettext@plt>
   10f74:	mov	r4, r0
   10f78:	ldr	r0, [pc, #136]	; 11008 <__lxstat64@plt+0x1ac>
   10f7c:	bl	14980 <__lxstat64@plt+0x3b24>
   10f80:	mov	r1, r0
   10f84:	mov	r0, r4
   10f88:	bl	1128c <__lxstat64@plt+0x430>
   10f8c:	ldr	r3, [pc, #132]	; 11018 <__lxstat64@plt+0x1bc>
   10f90:	ldr	r0, [pc, #132]	; 1101c <__lxstat64@plt+0x1c0>
   10f94:	ldr	r1, [pc, #132]	; 11020 <__lxstat64@plt+0x1c4>
   10f98:	ldr	r2, [pc, #132]	; 11024 <__lxstat64@plt+0x1c8>
   10f9c:	str	r4, [sp, #8]
   10fa0:	ldr	r3, [r3]
   10fa4:	ldr	r0, [r0]
   10fa8:	str	r1, [sp, #4]
   10fac:	str	r2, [sp]
   10fb0:	ldr	r1, [pc, #112]	; 11028 <__lxstat64@plt+0x1cc>
   10fb4:	ldr	r2, [pc, #112]	; 1102c <__lxstat64@plt+0x1d0>
   10fb8:	bl	150e8 <__lxstat64@plt+0x428c>
   10fbc:	b	10f0c <__lxstat64@plt+0xb0>
   10fc0:	ldr	r1, [pc, #104]	; 11030 <__lxstat64@plt+0x1d4>
   10fc4:	mov	r0, r6
   10fc8:	mov	r2, #5
   10fcc:	bl	10c94 <dcgettext@plt>
   10fd0:	ldr	r3, [r5]
   10fd4:	mov	r6, r0
   10fd8:	ldr	r0, [r3, r4, lsl #2]
   10fdc:	bl	14980 <__lxstat64@plt+0x3b24>
   10fe0:	mov	r1, r0
   10fe4:	mov	r0, r6
   10fe8:	bl	1128c <__lxstat64@plt+0x430>
   10fec:	bl	1250c <__lxstat64@plt+0x16b0>
   10ff0:	andeq	r6, r1, r8, asr #12
   10ff4:	andeq	r7, r1, r8, asr #6
   10ff8:	andeq	r7, r1, r0, lsr #5
   10ffc:	andeq	r8, r2, r8, ror #1
   11000:	andeq	r8, r2, r4, asr #2
   11004:	andeq	r2, r1, r4, ror r9
   11008:	muleq	r1, ip, r3
   1100c:	andeq	r7, r1, r0, ror #6
   11010:	andeq	r7, r1, r8, ror #6
   11014:	andeq	r7, r1, r0, lsr #7
   11018:	andeq	r8, r2, r4, ror #1
   1101c:	andeq	r8, r2, ip, lsr r1
   11020:	andeq	r7, r1, r4, ror r3
   11024:	andeq	r7, r1, r8, lsl #7
   11028:	andeq	r7, r1, r8, asr r2
   1102c:	muleq	r1, ip, r2
   11030:	andeq	r7, r1, ip, lsr #7
   11034:	mov	fp, #0
   11038:	mov	lr, #0
   1103c:	pop	{r1}		; (ldr r1, [sp], #4)
   11040:	mov	r2, sp
   11044:	push	{r2}		; (str r2, [sp, #-4]!)
   11048:	push	{r0}		; (str r0, [sp, #-4]!)
   1104c:	ldr	ip, [pc, #16]	; 11064 <__lxstat64@plt+0x208>
   11050:	push	{ip}		; (str ip, [sp, #-4]!)
   11054:	ldr	r0, [pc, #12]	; 11068 <__lxstat64@plt+0x20c>
   11058:	ldr	r3, [pc, #12]	; 1106c <__lxstat64@plt+0x210>
   1105c:	bl	10d3c <__libc_start_main@plt>
   11060:	bl	10e50 <abort@plt>
   11064:	andeq	r6, r1, r0, lsl #8
   11068:	andeq	r0, r1, r8, ror #28
   1106c:	andeq	r6, r1, r0, lsr #7
   11070:	ldr	r3, [pc, #20]	; 1108c <__lxstat64@plt+0x230>
   11074:	ldr	r2, [pc, #20]	; 11090 <__lxstat64@plt+0x234>
   11078:	add	r3, pc, r3
   1107c:	ldr	r2, [r3, r2]
   11080:	cmp	r2, #0
   11084:	bxeq	lr
   11088:	b	10d54 <__gmon_start__@plt>
   1108c:	andeq	r6, r1, r0, lsl #31
   11090:	ldrdeq	r0, [r0], -r8
   11094:	ldr	r3, [pc, #28]	; 110b8 <__lxstat64@plt+0x25c>
   11098:	ldr	r0, [pc, #28]	; 110bc <__lxstat64@plt+0x260>
   1109c:	sub	r3, r3, r0
   110a0:	cmp	r3, #6
   110a4:	bxls	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <__lxstat64@plt+0x264>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	r8, r2, pc, lsr #2
   110bc:	andeq	r8, r2, ip, lsr #2
   110c0:	andeq	r0, r0, r0
   110c4:	ldr	r1, [pc, #36]	; 110f0 <__lxstat64@plt+0x294>
   110c8:	ldr	r0, [pc, #36]	; 110f4 <__lxstat64@plt+0x298>
   110cc:	sub	r1, r1, r0
   110d0:	asr	r1, r1, #2
   110d4:	add	r1, r1, r1, lsr #31
   110d8:	asrs	r1, r1, #1
   110dc:	bxeq	lr
   110e0:	ldr	r3, [pc, #16]	; 110f8 <__lxstat64@plt+0x29c>
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andeq	r8, r2, ip, lsr #2
   110f4:	andeq	r8, r2, ip, lsr #2
   110f8:	andeq	r0, r0, r0
   110fc:	push	{r4, lr}
   11100:	ldr	r4, [pc, #24]	; 11120 <__lxstat64@plt+0x2c4>
   11104:	ldrb	r3, [r4]
   11108:	cmp	r3, #0
   1110c:	popne	{r4, pc}
   11110:	bl	11094 <__lxstat64@plt+0x238>
   11114:	mov	r3, #1
   11118:	strb	r3, [r4]
   1111c:	pop	{r4, pc}
   11120:	andeq	r8, r2, r0, asr #2
   11124:	ldr	r0, [pc, #40]	; 11154 <__lxstat64@plt+0x2f8>
   11128:	ldr	r3, [r0]
   1112c:	cmp	r3, #0
   11130:	bne	11138 <__lxstat64@plt+0x2dc>
   11134:	b	110c4 <__lxstat64@plt+0x268>
   11138:	ldr	r3, [pc, #24]	; 11158 <__lxstat64@plt+0x2fc>
   1113c:	cmp	r3, #0
   11140:	beq	11134 <__lxstat64@plt+0x2d8>
   11144:	push	{r4, lr}
   11148:	blx	r3
   1114c:	pop	{r4, lr}
   11150:	b	110c4 <__lxstat64@plt+0x268>
   11154:	andeq	r7, r2, r4, lsl pc
   11158:	andeq	r0, r0, r0
   1115c:	push	{r4, lr}
   11160:	mov	r4, r0
   11164:	ldr	r1, [pc, #240]	; 1125c <__lxstat64@plt+0x400>
   11168:	bl	10c28 <strcmp@plt>
   1116c:	cmp	r0, #0
   11170:	beq	11254 <__lxstat64@plt+0x3f8>
   11174:	ldr	r1, [pc, #228]	; 11260 <__lxstat64@plt+0x404>
   11178:	mov	r0, r4
   1117c:	bl	10c28 <strcmp@plt>
   11180:	cmp	r0, #0
   11184:	beq	11254 <__lxstat64@plt+0x3f8>
   11188:	ldr	r1, [pc, #212]	; 11264 <__lxstat64@plt+0x408>
   1118c:	mov	r0, r4
   11190:	bl	10c28 <strcmp@plt>
   11194:	cmp	r0, #0
   11198:	beq	11254 <__lxstat64@plt+0x3f8>
   1119c:	ldr	r1, [pc, #196]	; 11268 <__lxstat64@plt+0x40c>
   111a0:	mov	r0, r4
   111a4:	bl	10c28 <strcmp@plt>
   111a8:	cmp	r0, #0
   111ac:	beq	11254 <__lxstat64@plt+0x3f8>
   111b0:	ldr	r1, [pc, #180]	; 1126c <__lxstat64@plt+0x410>
   111b4:	mov	r0, r4
   111b8:	bl	10c28 <strcmp@plt>
   111bc:	cmp	r0, #0
   111c0:	beq	11254 <__lxstat64@plt+0x3f8>
   111c4:	ldr	r1, [pc, #164]	; 11270 <__lxstat64@plt+0x414>
   111c8:	mov	r0, r4
   111cc:	bl	10c28 <strcmp@plt>
   111d0:	cmp	r0, #0
   111d4:	beq	11254 <__lxstat64@plt+0x3f8>
   111d8:	ldr	r1, [pc, #148]	; 11274 <__lxstat64@plt+0x418>
   111dc:	mov	r0, r4
   111e0:	bl	10c28 <strcmp@plt>
   111e4:	cmp	r0, #0
   111e8:	beq	11254 <__lxstat64@plt+0x3f8>
   111ec:	ldr	r1, [pc, #132]	; 11278 <__lxstat64@plt+0x41c>
   111f0:	mov	r0, r4
   111f4:	bl	10c28 <strcmp@plt>
   111f8:	cmp	r0, #0
   111fc:	beq	11254 <__lxstat64@plt+0x3f8>
   11200:	ldr	r1, [pc, #116]	; 1127c <__lxstat64@plt+0x420>
   11204:	mov	r0, r4
   11208:	bl	10c28 <strcmp@plt>
   1120c:	cmp	r0, #0
   11210:	beq	11254 <__lxstat64@plt+0x3f8>
   11214:	ldr	r1, [pc, #100]	; 11280 <__lxstat64@plt+0x424>
   11218:	mov	r0, r4
   1121c:	bl	10c28 <strcmp@plt>
   11220:	cmp	r0, #0
   11224:	beq	11254 <__lxstat64@plt+0x3f8>
   11228:	ldr	r1, [pc, #84]	; 11284 <__lxstat64@plt+0x428>
   1122c:	mov	r0, r4
   11230:	bl	10c28 <strcmp@plt>
   11234:	cmp	r0, #0
   11238:	beq	11254 <__lxstat64@plt+0x3f8>
   1123c:	mov	r0, r4
   11240:	ldr	r1, [pc, #64]	; 11288 <__lxstat64@plt+0x42c>
   11244:	bl	10c28 <strcmp@plt>
   11248:	clz	r0, r0
   1124c:	lsr	r0, r0, #5
   11250:	pop	{r4, pc}
   11254:	mov	r0, #1
   11258:	pop	{r4, pc}
   1125c:	andeq	r6, r1, r0, ror #8
   11260:	andeq	r6, r1, r4, ror #8
   11264:	andeq	r6, r1, r8, ror #8
   11268:	andeq	r6, r1, ip, ror #8
   1126c:	andeq	r6, r1, r0, ror r4
   11270:	andeq	r6, r1, r4, ror r4
   11274:	andeq	r6, r1, r8, ror r4
   11278:	andeq	r6, r1, ip, ror r4
   1127c:	andeq	r6, r1, r0, lsl #9
   11280:	andeq	r6, r1, r4, lsl #9
   11284:	andeq	r6, r1, r8, lsl #9
   11288:	andeq	r6, r1, ip, lsl #9
   1128c:	push	{r0, r1, r2, r3}
   11290:	mov	r1, #0
   11294:	push	{lr}		; (str lr, [sp, #-4]!)
   11298:	sub	sp, sp, #12
   1129c:	add	ip, sp, #20
   112a0:	mov	r0, r1
   112a4:	mov	r3, ip
   112a8:	ldr	r2, [sp, #16]
   112ac:	str	ip, [sp, #4]
   112b0:	bl	14ca0 <__lxstat64@plt+0x3e44>
   112b4:	mov	r0, #2
   112b8:	bl	10d6c <exit@plt>
   112bc:	push	{r4, r5, r6, lr}
   112c0:	mov	r4, r0
   112c4:	bl	10d60 <__ctype_b_loc@plt>
   112c8:	mov	r3, r4
   112cc:	ldr	ip, [r0]
   112d0:	ldrb	r2, [r3]
   112d4:	mov	r0, r3
   112d8:	add	r3, r3, #1
   112dc:	lsl	r1, r2, #1
   112e0:	ldrh	r1, [ip, r1]
   112e4:	tst	r1, #1
   112e8:	bne	112d0 <__lxstat64@plt+0x474>
   112ec:	cmp	r2, #43	; 0x2b
   112f0:	moveq	r0, r3
   112f4:	beq	11304 <__lxstat64@plt+0x4a8>
   112f8:	cmp	r2, #45	; 0x2d
   112fc:	movne	r3, r0
   11300:	addeq	r3, r0, #1
   11304:	ldrb	r1, [r3]
   11308:	add	r2, r3, #1
   1130c:	sub	r1, r1, #48	; 0x30
   11310:	cmp	r1, #9
   11314:	bhi	11364 <__lxstat64@plt+0x508>
   11318:	ldrb	r3, [r3, #1]
   1131c:	sub	r1, r3, #48	; 0x30
   11320:	cmp	r1, #9
   11324:	bhi	1134c <__lxstat64@plt+0x4f0>
   11328:	ldrb	r3, [r2, #1]!
   1132c:	sub	r1, r3, #48	; 0x30
   11330:	cmp	r1, #9
   11334:	bls	11328 <__lxstat64@plt+0x4cc>
   11338:	lsl	r1, r3, #1
   1133c:	ldrh	r1, [ip, r1]
   11340:	tst	r1, #1
   11344:	beq	1135c <__lxstat64@plt+0x500>
   11348:	ldrb	r3, [r2, #1]!
   1134c:	lsl	r1, r3, #1
   11350:	ldrh	r1, [ip, r1]
   11354:	tst	r1, #1
   11358:	bne	11348 <__lxstat64@plt+0x4ec>
   1135c:	cmp	r3, #0
   11360:	popeq	{r4, r5, r6, pc}
   11364:	ldr	r1, [pc, #32]	; 1138c <__lxstat64@plt+0x530>
   11368:	mov	r2, #5
   1136c:	mov	r0, #0
   11370:	bl	10c94 <dcgettext@plt>
   11374:	mov	r5, r0
   11378:	mov	r0, r4
   1137c:	bl	14980 <__lxstat64@plt+0x3b24>
   11380:	mov	r1, r0
   11384:	mov	r0, r5
   11388:	bl	1128c <__lxstat64@plt+0x430>
   1138c:	muleq	r1, r0, r4
   11390:	push	{r4, lr}
   11394:	mov	r2, #5
   11398:	ldr	r1, [pc, #40]	; 113c8 <__lxstat64@plt+0x56c>
   1139c:	mov	r0, #0
   113a0:	bl	10c94 <dcgettext@plt>
   113a4:	ldr	r2, [pc, #32]	; 113cc <__lxstat64@plt+0x570>
   113a8:	ldm	r2, {r2, r3}
   113ac:	sub	r3, r3, #-1073741823	; 0xc0000001
   113b0:	mov	r4, r0
   113b4:	ldr	r0, [r2, r3, lsl #2]
   113b8:	bl	14980 <__lxstat64@plt+0x3b24>
   113bc:	mov	r1, r0
   113c0:	mov	r0, r4
   113c4:	bl	1128c <__lxstat64@plt+0x430>
   113c8:	andeq	r6, r1, r4, lsr #9
   113cc:	andeq	r8, r2, r4, asr #2
   113d0:	ldr	r3, [pc, #36]	; 113fc <__lxstat64@plt+0x5a0>
   113d4:	ldmib	r3, {r0, r2}
   113d8:	add	r1, r2, #1
   113dc:	cmp	r1, r0
   113e0:	str	r1, [r3, #8]
   113e4:	bge	113f4 <__lxstat64@plt+0x598>
   113e8:	add	r2, r2, #2
   113ec:	str	r2, [r3, #8]
   113f0:	bx	lr
   113f4:	push	{r4, lr}
   113f8:	bl	11390 <__lxstat64@plt+0x534>
   113fc:	andeq	r8, r2, r4, asr #2
   11400:	push	{r4, r5, r6, r7, r8, r9, lr}
   11404:	subs	r7, r0, #0
   11408:	ldr	r5, [pc, #1196]	; 118bc <__lxstat64@plt+0xa60>
   1140c:	sub	sp, sp, #212	; 0xd4
   11410:	ldr	r4, [r5, #8]
   11414:	ldr	r3, [r5, #4]
   11418:	addne	r4, r4, #1
   1141c:	strne	r4, [r5, #8]
   11420:	sub	r3, r3, #2
   11424:	add	r4, r4, #1
   11428:	cmp	r4, r3
   1142c:	ldr	r6, [r5]
   11430:	bge	114b4 <__lxstat64@plt+0x658>
   11434:	add	r3, r4, #1
   11438:	ldr	r1, [pc, #1152]	; 118c0 <__lxstat64@plt+0xa64>
   1143c:	ldr	r0, [r6, r3, lsl #2]
   11440:	bl	10c28 <strcmp@plt>
   11444:	cmp	r0, #0
   11448:	streq	r4, [r5, #8]
   1144c:	moveq	r8, #1
   11450:	bne	114b4 <__lxstat64@plt+0x658>
   11454:	ldr	r0, [r6, r4, lsl #2]
   11458:	lsl	r4, r4, #2
   1145c:	add	r9, r6, r4
   11460:	ldrb	r3, [r0]
   11464:	cmp	r3, #45	; 0x2d
   11468:	beq	114bc <__lxstat64@plt+0x660>
   1146c:	cmp	r3, #61	; 0x3d
   11470:	beq	115c8 <__lxstat64@plt+0x76c>
   11474:	ldr	r1, [pc, #1096]	; 118c4 <__lxstat64@plt+0xa68>
   11478:	bl	10c28 <strcmp@plt>
   1147c:	cmp	r0, #0
   11480:	bne	11888 <__lxstat64@plt+0xa2c>
   11484:	ldr	r4, [r5, #8]
   11488:	add	r3, r6, r4, lsl #2
   1148c:	ldr	r0, [r6, r4, lsl #2]
   11490:	ldr	r1, [r3, #8]
   11494:	bl	10c28 <strcmp@plt>
   11498:	add	r4, r4, #3
   1149c:	str	r4, [r5, #8]
   114a0:	adds	r7, r0, #0
   114a4:	movne	r7, #1
   114a8:	mov	r0, r7
   114ac:	add	sp, sp, #212	; 0xd4
   114b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   114b4:	mov	r8, #0
   114b8:	b	11454 <__lxstat64@plt+0x5f8>
   114bc:	ldrb	r3, [r0, #1]
   114c0:	cmp	r3, #103	; 0x67
   114c4:	cmpne	r3, #108	; 0x6c
   114c8:	bne	1157c <__lxstat64@plt+0x720>
   114cc:	ldrb	r2, [r0, #2]
   114d0:	cmp	r2, #116	; 0x74
   114d4:	cmpne	r2, #101	; 0x65
   114d8:	bne	1157c <__lxstat64@plt+0x720>
   114dc:	ldrb	r1, [r0, #3]
   114e0:	cmp	r1, #0
   114e4:	bne	11808 <__lxstat64@plt+0x9ac>
   114e8:	cmp	r7, #0
   114ec:	ldr	r0, [r9, #-4]
   114f0:	bne	11824 <__lxstat64@plt+0x9c8>
   114f4:	bl	112bc <__lxstat64@plt+0x460>
   114f8:	mov	r6, r0
   114fc:	ldr	r3, [r5]
   11500:	cmp	r8, #0
   11504:	add	r3, r3, r4
   11508:	beq	11854 <__lxstat64@plt+0x9f8>
   1150c:	ldr	r0, [r3, #8]
   11510:	bl	10d78 <strlen@plt>
   11514:	mov	r1, #0
   11518:	add	r2, sp, #104	; 0x68
   1151c:	bl	12a58 <__lxstat64@plt+0x1bfc>
   11520:	mov	r1, r0
   11524:	mov	r0, r6
   11528:	bl	14998 <__lxstat64@plt+0x3b3c>
   1152c:	ldr	r2, [r5]
   11530:	ldr	r3, [r5, #8]
   11534:	ldr	r2, [r2, r4]
   11538:	add	r3, r3, #3
   1153c:	str	r3, [r5, #8]
   11540:	ldrb	r3, [r2, #1]
   11544:	ldrb	r7, [r2, #2]
   11548:	cmp	r3, #108	; 0x6c
   1154c:	sub	r7, r7, #101	; 0x65
   11550:	clz	r7, r7
   11554:	lsr	r7, r7, #5
   11558:	beq	11864 <__lxstat64@plt+0xa08>
   1155c:	cmp	r3, #103	; 0x67
   11560:	beq	11874 <__lxstat64@plt+0xa18>
   11564:	adds	r0, r0, #0
   11568:	movne	r0, #1
   1156c:	sub	r7, r0, r7
   11570:	clz	r7, r7
   11574:	lsr	r7, r7, #5
   11578:	b	114a8 <__lxstat64@plt+0x64c>
   1157c:	cmp	r3, #101	; 0x65
   11580:	beq	11610 <__lxstat64@plt+0x7b4>
   11584:	cmp	r3, #110	; 0x6e
   11588:	beq	1174c <__lxstat64@plt+0x8f0>
   1158c:	cmp	r3, #111	; 0x6f
   11590:	beq	116a4 <__lxstat64@plt+0x848>
   11594:	cmp	r3, #101	; 0x65
   11598:	ldrbeq	r3, [r0, #2]
   1159c:	beq	1161c <__lxstat64@plt+0x7c0>
   115a0:	ldr	r1, [pc, #800]	; 118c8 <__lxstat64@plt+0xa6c>
   115a4:	mov	r2, #5
   115a8:	mov	r0, #0
   115ac:	bl	10c94 <dcgettext@plt>
   115b0:	mov	r4, r0
   115b4:	ldr	r0, [r9]
   115b8:	bl	14980 <__lxstat64@plt+0x3b24>
   115bc:	mov	r1, r0
   115c0:	mov	r0, r4
   115c4:	bl	1128c <__lxstat64@plt+0x430>
   115c8:	ldrb	r3, [r0, #1]
   115cc:	cmp	r3, #0
   115d0:	beq	115e8 <__lxstat64@plt+0x78c>
   115d4:	cmp	r3, #61	; 0x3d
   115d8:	bne	11474 <__lxstat64@plt+0x618>
   115dc:	ldrb	r3, [r0, #2]
   115e0:	cmp	r3, #0
   115e4:	bne	11474 <__lxstat64@plt+0x618>
   115e8:	ldr	r4, [r5, #8]
   115ec:	add	r3, r6, r4, lsl #2
   115f0:	ldr	r0, [r6, r4, lsl #2]
   115f4:	ldr	r1, [r3, #8]
   115f8:	bl	10c28 <strcmp@plt>
   115fc:	add	r4, r4, #3
   11600:	str	r4, [r5, #8]
   11604:	clz	r7, r0
   11608:	lsr	r7, r7, #5
   1160c:	b	114a8 <__lxstat64@plt+0x64c>
   11610:	ldrb	r3, [r0, #2]
   11614:	cmp	r3, #113	; 0x71
   11618:	beq	1183c <__lxstat64@plt+0x9e0>
   1161c:	cmp	r3, #102	; 0x66
   11620:	bne	115a0 <__lxstat64@plt+0x744>
   11624:	ldrb	r0, [r0, #3]
   11628:	cmp	r0, #0
   1162c:	bne	115a0 <__lxstat64@plt+0x744>
   11630:	ldr	r3, [r5, #8]
   11634:	orrs	r7, r8, r7
   11638:	add	r3, r3, #3
   1163c:	str	r3, [r5, #8]
   11640:	bne	1188c <__lxstat64@plt+0xa30>
   11644:	mov	r2, sp
   11648:	ldr	r1, [r9, #-4]
   1164c:	mov	r0, #3
   11650:	bl	10e2c <__xstat64@plt>
   11654:	cmp	r0, #0
   11658:	bne	114a8 <__lxstat64@plt+0x64c>
   1165c:	ldr	r1, [r9, #4]
   11660:	add	r2, sp, #104	; 0x68
   11664:	mov	r0, #3
   11668:	bl	10e2c <__xstat64@plt>
   1166c:	cmp	r0, #0
   11670:	bne	114a8 <__lxstat64@plt+0x64c>
   11674:	ldrd	r0, [sp]
   11678:	ldrd	r2, [sp, #104]	; 0x68
   1167c:	cmp	r1, r3
   11680:	cmpeq	r0, r2
   11684:	bne	114a8 <__lxstat64@plt+0x64c>
   11688:	ldrd	r0, [sp, #96]	; 0x60
   1168c:	ldrd	r2, [sp, #200]	; 0xc8
   11690:	cmp	r1, r3
   11694:	cmpeq	r0, r2
   11698:	moveq	r7, #1
   1169c:	movne	r7, #0
   116a0:	b	114a8 <__lxstat64@plt+0x64c>
   116a4:	ldrb	r3, [r0, #2]
   116a8:	cmp	r3, #116	; 0x74
   116ac:	bne	115a0 <__lxstat64@plt+0x744>
   116b0:	ldrb	r0, [r0, #3]
   116b4:	cmp	r0, #0
   116b8:	bne	115a0 <__lxstat64@plt+0x744>
   116bc:	ldr	r3, [r5, #8]
   116c0:	orrs	r7, r8, r7
   116c4:	add	r3, r3, #3
   116c8:	str	r3, [r5, #8]
   116cc:	bne	118ac <__lxstat64@plt+0xa50>
   116d0:	add	r2, sp, #104	; 0x68
   116d4:	ldr	r1, [r9, #-4]
   116d8:	mov	r0, #3
   116dc:	bl	10e2c <__xstat64@plt>
   116e0:	add	r2, sp, #104	; 0x68
   116e4:	ldr	r1, [r9, #4]
   116e8:	cmp	r0, #0
   116ec:	mov	r0, #3
   116f0:	bne	11814 <__lxstat64@plt+0x9b8>
   116f4:	ldr	r5, [sp, #184]	; 0xb8
   116f8:	ldr	r4, [sp, #188]	; 0xbc
   116fc:	bl	10e2c <__xstat64@plt>
   11700:	cmp	r0, #0
   11704:	bne	114a8 <__lxstat64@plt+0x64c>
   11708:	ldr	r7, [sp, #184]	; 0xb8
   1170c:	ldr	r2, [sp, #188]	; 0xbc
   11710:	cmp	r5, r7
   11714:	movge	r3, #0
   11718:	movlt	r3, #1
   1171c:	cmp	r5, r7
   11720:	rsble	r3, r3, #0
   11724:	rsbgt	r3, r3, #1
   11728:	cmp	r4, r2
   1172c:	movge	r7, #0
   11730:	movlt	r7, #1
   11734:	cmp	r4, r2
   11738:	rsble	r7, r7, #0
   1173c:	rsbgt	r7, r7, #1
   11740:	add	r7, r7, r3, lsl #1
   11744:	lsr	r7, r7, #31
   11748:	b	114a8 <__lxstat64@plt+0x64c>
   1174c:	ldrb	r2, [r0, #2]
   11750:	cmp	r2, #101	; 0x65
   11754:	beq	1183c <__lxstat64@plt+0x9e0>
   11758:	cmp	r2, #116	; 0x74
   1175c:	bne	115a0 <__lxstat64@plt+0x744>
   11760:	ldrb	r0, [r0, #3]
   11764:	cmp	r0, #0
   11768:	bne	115a0 <__lxstat64@plt+0x744>
   1176c:	ldr	r3, [r5, #8]
   11770:	orrs	r7, r8, r7
   11774:	add	r3, r3, #3
   11778:	str	r3, [r5, #8]
   1177c:	bne	1189c <__lxstat64@plt+0xa40>
   11780:	add	r2, sp, #104	; 0x68
   11784:	ldr	r1, [r9, #-4]
   11788:	mov	r0, #3
   1178c:	bl	10e2c <__xstat64@plt>
   11790:	add	r2, sp, #104	; 0x68
   11794:	ldr	r1, [r9, #4]
   11798:	cmp	r0, #0
   1179c:	mov	r0, #3
   117a0:	bne	1184c <__lxstat64@plt+0x9f0>
   117a4:	ldr	r7, [sp, #184]	; 0xb8
   117a8:	ldr	r4, [sp, #188]	; 0xbc
   117ac:	bl	10e2c <__xstat64@plt>
   117b0:	cmp	r0, #0
   117b4:	movne	r7, #1
   117b8:	bne	114a8 <__lxstat64@plt+0x64c>
   117bc:	ldr	r1, [sp, #184]	; 0xb8
   117c0:	ldr	r2, [sp, #188]	; 0xbc
   117c4:	cmp	r7, r1
   117c8:	movge	r3, #0
   117cc:	movlt	r3, #1
   117d0:	cmp	r7, r1
   117d4:	rsble	r3, r3, #0
   117d8:	rsbgt	r3, r3, #1
   117dc:	cmp	r4, r2
   117e0:	movge	r7, #0
   117e4:	movlt	r7, #1
   117e8:	cmp	r4, r2
   117ec:	rsble	r7, r7, #0
   117f0:	rsbgt	r7, r7, #1
   117f4:	add	r7, r7, r3, lsl #1
   117f8:	cmp	r7, #0
   117fc:	movle	r7, #0
   11800:	movgt	r7, #1
   11804:	b	114a8 <__lxstat64@plt+0x64c>
   11808:	cmp	r3, #110	; 0x6e
   1180c:	bne	1158c <__lxstat64@plt+0x730>
   11810:	b	11758 <__lxstat64@plt+0x8fc>
   11814:	bl	10e2c <__xstat64@plt>
   11818:	cmp	r0, #0
   1181c:	moveq	r7, #1
   11820:	b	114a8 <__lxstat64@plt+0x64c>
   11824:	bl	10d78 <strlen@plt>
   11828:	mov	r2, sp
   1182c:	mov	r1, #0
   11830:	bl	12a58 <__lxstat64@plt+0x1bfc>
   11834:	mov	r6, r0
   11838:	b	114fc <__lxstat64@plt+0x6a0>
   1183c:	ldrb	r3, [r0, #3]
   11840:	cmp	r3, #0
   11844:	beq	114e8 <__lxstat64@plt+0x68c>
   11848:	b	115a0 <__lxstat64@plt+0x744>
   1184c:	bl	10e2c <__xstat64@plt>
   11850:	b	114a8 <__lxstat64@plt+0x64c>
   11854:	ldr	r0, [r3, #4]
   11858:	bl	112bc <__lxstat64@plt+0x460>
   1185c:	mov	r1, r0
   11860:	b	11524 <__lxstat64@plt+0x6c8>
   11864:	cmp	r0, r7
   11868:	movge	r7, #0
   1186c:	movlt	r7, #1
   11870:	b	114a8 <__lxstat64@plt+0x64c>
   11874:	rsb	r7, r7, #0
   11878:	cmp	r0, r7
   1187c:	movle	r7, #0
   11880:	movgt	r7, #1
   11884:	b	114a8 <__lxstat64@plt+0x64c>
   11888:	bl	10e50 <abort@plt>
   1188c:	mov	r2, #5
   11890:	ldr	r1, [pc, #52]	; 118cc <__lxstat64@plt+0xa70>
   11894:	bl	10c94 <dcgettext@plt>
   11898:	bl	1128c <__lxstat64@plt+0x430>
   1189c:	mov	r2, #5
   118a0:	ldr	r1, [pc, #40]	; 118d0 <__lxstat64@plt+0xa74>
   118a4:	bl	10c94 <dcgettext@plt>
   118a8:	bl	1128c <__lxstat64@plt+0x430>
   118ac:	mov	r2, #5
   118b0:	ldr	r1, [pc, #28]	; 118d4 <__lxstat64@plt+0xa78>
   118b4:	bl	10c94 <dcgettext@plt>
   118b8:	bl	1128c <__lxstat64@plt+0x430>
   118bc:	andeq	r8, r2, r4, asr #2
   118c0:	andeq	r6, r1, ip, ror #9
   118c4:	andeq	r6, r1, r4, ror #8
   118c8:	andeq	r6, r1, r8, lsl #10
   118cc:	ldrdeq	r6, [r1], -r8
   118d0:	andeq	r6, r1, r0, asr #9
   118d4:	strdeq	r6, [r1], -r0
   118d8:	push	{r4, r5, r6, lr}
   118dc:	sub	sp, sp, #104	; 0x68
   118e0:	ldr	r4, [pc, #1524]	; 11edc <__lxstat64@plt+0x1080>
   118e4:	ldr	r5, [r4]
   118e8:	ldr	r6, [r4, #8]
   118ec:	ldr	r3, [r5, r6, lsl #2]
   118f0:	ldrb	r3, [r3, #1]
   118f4:	sub	r3, r3, #71	; 0x47
   118f8:	cmp	r3, #51	; 0x33
   118fc:	ldrls	pc, [pc, r3, lsl #2]
   11900:	b	11e68 <__lxstat64@plt+0x100c>
   11904:	andeq	r1, r1, r8, lsl lr
   11908:	andeq	r1, r1, r8, ror #28
   1190c:	andeq	r1, r1, r8, ror #28
   11910:	andeq	r1, r1, r8, ror #28
   11914:	andeq	r1, r1, r8, ror #28
   11918:	ldrdeq	r1, [r1], -ip
   1191c:	andeq	r1, r1, r8, ror #28
   11920:	andeq	r1, r1, r4, ror #26
   11924:	andeq	r1, r1, r0, lsr sp
   11928:	andeq	r1, r1, r8, ror #28
   1192c:	andeq	r1, r1, r8, ror #28
   11930:	andeq	r1, r1, r8, ror #28
   11934:	strdeq	r1, [r1], -r4
   11938:	andeq	r1, r1, r8, ror #28
   1193c:	andeq	r1, r1, r8, ror #28
   11940:	andeq	r1, r1, r8, ror #28
   11944:	andeq	r1, r1, r8, ror #28
   11948:	andeq	r1, r1, r8, ror #28
   1194c:	andeq	r1, r1, r8, ror #28
   11950:	andeq	r1, r1, r8, ror #28
   11954:	andeq	r1, r1, r8, ror #28
   11958:	andeq	r1, r1, r8, ror #28
   1195c:	andeq	r1, r1, r8, ror #28
   11960:	andeq	r1, r1, r8, ror #28
   11964:	andeq	r1, r1, r8, ror #28
   11968:	andeq	r1, r1, r8, ror #28
   1196c:	andeq	r1, r1, r8, ror #28
   11970:			; <UNDEFINED> instruction: 0x00011cb8
   11974:	andeq	r1, r1, ip, ror ip
   11978:	andeq	r1, r1, r0, asr #24
   1197c:	andeq	r1, r1, r8, lsl ip
   11980:	ldrdeq	r1, [r1], -ip
   11984:	andeq	r1, r1, r8, lsr #23
   11988:	ldrdeq	r1, [r1], -ip
   1198c:	andeq	r1, r1, r8, ror #28
   11990:	andeq	r1, r1, r8, ror #28
   11994:	andeq	r1, r1, r4, ror fp
   11998:	andeq	r1, r1, r8, ror #28
   1199c:	andeq	r1, r1, r8, ror #28
   119a0:	andeq	r1, r1, r4, asr fp
   119a4:	andeq	r1, r1, r8, ror #28
   119a8:	andeq	r1, r1, r8, lsl fp
   119ac:	andeq	r1, r1, r8, ror #28
   119b0:	andeq	r1, r1, r8, lsl #22
   119b4:	andeq	r1, r1, ip, asr #21
   119b8:	andeq	r1, r1, ip, ror #20
   119bc:	andeq	r1, r1, r8, lsr sl
   119c0:	andeq	r1, r1, r8, ror #28
   119c4:	andeq	r1, r1, r8, lsr #20
   119c8:	strdeq	r1, [r1], -ip
   119cc:	andeq	r1, r1, r8, ror #28
   119d0:	ldrdeq	r1, [r1], -r4
   119d4:	bl	113d0 <__lxstat64@plt+0x574>
   119d8:	ldr	r3, [r4, #8]
   119dc:	sub	r3, r3, #-1073741823	; 0xc0000001
   119e0:	ldr	r3, [r5, r3, lsl #2]
   119e4:	ldrb	r3, [r3]
   119e8:	clz	r3, r3
   119ec:	lsr	r3, r3, #5
   119f0:	mov	r0, r3
   119f4:	add	sp, sp, #104	; 0x68
   119f8:	pop	{r4, r5, r6, pc}
   119fc:	bl	113d0 <__lxstat64@plt+0x574>
   11a00:	ldr	r3, [r4, #8]
   11a04:	mov	r1, #1
   11a08:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a0c:	ldr	r0, [r5, r3, lsl #2]
   11a10:	bl	10e14 <euidaccess@plt>
   11a14:	clz	r3, r0
   11a18:	lsr	r3, r3, #5
   11a1c:	mov	r0, r3
   11a20:	add	sp, sp, #104	; 0x68
   11a24:	pop	{r4, r5, r6, pc}
   11a28:	bl	113d0 <__lxstat64@plt+0x574>
   11a2c:	ldr	r3, [r4, #8]
   11a30:	mov	r1, #2
   11a34:	b	11a08 <__lxstat64@plt+0xbac>
   11a38:	bl	113d0 <__lxstat64@plt+0x574>
   11a3c:	ldr	r3, [r4, #8]
   11a40:	mov	r2, sp
   11a44:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a48:	mov	r0, #3
   11a4c:	ldr	r1, [r5, r3, lsl #2]
   11a50:	bl	10e2c <__xstat64@plt>
   11a54:	cmp	r0, #0
   11a58:	bne	11d54 <__lxstat64@plt+0xef8>
   11a5c:	ldr	r3, [sp, #16]
   11a60:	lsr	r3, r3, #11
   11a64:	and	r3, r3, #1
   11a68:	b	119f0 <__lxstat64@plt+0xb94>
   11a6c:	bl	113d0 <__lxstat64@plt+0x574>
   11a70:	ldr	r3, [r4, #8]
   11a74:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a78:	ldr	r0, [r5, r3, lsl #2]
   11a7c:	bl	112bc <__lxstat64@plt+0x460>
   11a80:	mov	r5, r0
   11a84:	bl	10d84 <__errno_location@plt>
   11a88:	mov	r1, #0
   11a8c:	mov	r2, #10
   11a90:	mov	r4, r0
   11a94:	mov	r0, r5
   11a98:	str	r1, [r4]
   11a9c:	bl	10c34 <strtol@plt>
   11aa0:	ldr	r3, [r4]
   11aa4:	subs	r3, r3, #34	; 0x22
   11aa8:	movne	r3, #1
   11aac:	cmp	r0, #0
   11ab0:	movlt	r3, #0
   11ab4:	cmp	r3, #0
   11ab8:	beq	119f0 <__lxstat64@plt+0xb94>
   11abc:	bl	10e38 <isatty@plt>
   11ac0:	adds	r3, r0, #0
   11ac4:	movne	r3, #1
   11ac8:	b	119f0 <__lxstat64@plt+0xb94>
   11acc:	bl	113d0 <__lxstat64@plt+0x574>
   11ad0:	ldr	r3, [r4, #8]
   11ad4:	mov	r2, sp
   11ad8:	sub	r3, r3, #-1073741823	; 0xc0000001
   11adc:	mov	r0, #3
   11ae0:	ldr	r1, [r5, r3, lsl #2]
   11ae4:	bl	10e2c <__xstat64@plt>
   11ae8:	cmp	r0, #0
   11aec:	bne	11d54 <__lxstat64@plt+0xef8>
   11af0:	ldrd	r2, [sp, #48]	; 0x30
   11af4:	cmp	r2, #1
   11af8:	sbcs	r3, r3, #0
   11afc:	movge	r3, #1
   11b00:	movlt	r3, #0
   11b04:	b	119f0 <__lxstat64@plt+0xb94>
   11b08:	bl	113d0 <__lxstat64@plt+0x574>
   11b0c:	ldr	r3, [r4, #8]
   11b10:	mov	r1, #4
   11b14:	b	11a08 <__lxstat64@plt+0xbac>
   11b18:	bl	113d0 <__lxstat64@plt+0x574>
   11b1c:	ldr	r3, [r4, #8]
   11b20:	mov	r2, sp
   11b24:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b28:	mov	r0, #3
   11b2c:	ldr	r1, [r5, r3, lsl #2]
   11b30:	bl	10e2c <__xstat64@plt>
   11b34:	cmp	r0, #0
   11b38:	bne	11d54 <__lxstat64@plt+0xef8>
   11b3c:	ldr	r3, [sp, #16]
   11b40:	and	r3, r3, #61440	; 0xf000
   11b44:	sub	r3, r3, #4096	; 0x1000
   11b48:	clz	r3, r3
   11b4c:	lsr	r3, r3, #5
   11b50:	b	119f0 <__lxstat64@plt+0xb94>
   11b54:	bl	113d0 <__lxstat64@plt+0x574>
   11b58:	ldr	r3, [r4, #8]
   11b5c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b60:	ldr	r3, [r5, r3, lsl #2]
   11b64:	ldrb	r3, [r3]
   11b68:	adds	r3, r3, #0
   11b6c:	movne	r3, #1
   11b70:	b	119f0 <__lxstat64@plt+0xb94>
   11b74:	bl	113d0 <__lxstat64@plt+0x574>
   11b78:	ldr	r3, [r4, #8]
   11b7c:	mov	r2, sp
   11b80:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b84:	mov	r0, #3
   11b88:	ldr	r1, [r5, r3, lsl #2]
   11b8c:	bl	10e2c <__xstat64@plt>
   11b90:	cmp	r0, #0
   11b94:	bne	11d54 <__lxstat64@plt+0xef8>
   11b98:	ldr	r3, [sp, #16]
   11b9c:	lsr	r3, r3, #9
   11ba0:	and	r3, r3, #1
   11ba4:	b	119f0 <__lxstat64@plt+0xb94>
   11ba8:	bl	113d0 <__lxstat64@plt+0x574>
   11bac:	ldr	r3, [r4, #8]
   11bb0:	mov	r2, sp
   11bb4:	sub	r3, r3, #-1073741823	; 0xc0000001
   11bb8:	mov	r0, #3
   11bbc:	ldr	r1, [r5, r3, lsl #2]
   11bc0:	bl	10e2c <__xstat64@plt>
   11bc4:	cmp	r0, #0
   11bc8:	bne	11d54 <__lxstat64@plt+0xef8>
   11bcc:	ldr	r3, [sp, #16]
   11bd0:	lsr	r3, r3, #10
   11bd4:	and	r3, r3, #1
   11bd8:	b	119f0 <__lxstat64@plt+0xb94>
   11bdc:	bl	113d0 <__lxstat64@plt+0x574>
   11be0:	ldr	r3, [r4, #8]
   11be4:	mov	r2, sp
   11be8:	sub	r3, r3, #-1073741823	; 0xc0000001
   11bec:	mov	r0, #3
   11bf0:	ldr	r1, [r5, r3, lsl #2]
   11bf4:	bl	10e2c <__xstat64@plt>
   11bf8:	cmp	r0, #0
   11bfc:	bne	11d54 <__lxstat64@plt+0xef8>
   11c00:	ldr	r3, [sp, #16]
   11c04:	and	r3, r3, #61440	; 0xf000
   11c08:	sub	r3, r3, #32768	; 0x8000
   11c0c:	clz	r3, r3
   11c10:	lsr	r3, r3, #5
   11c14:	b	119f0 <__lxstat64@plt+0xb94>
   11c18:	bl	113d0 <__lxstat64@plt+0x574>
   11c1c:	ldr	r3, [r4, #8]
   11c20:	mov	r2, sp
   11c24:	sub	r3, r3, #-1073741823	; 0xc0000001
   11c28:	mov	r0, #3
   11c2c:	ldr	r1, [r5, r3, lsl #2]
   11c30:	bl	10e2c <__xstat64@plt>
   11c34:	clz	r3, r0
   11c38:	lsr	r3, r3, #5
   11c3c:	b	119f0 <__lxstat64@plt+0xb94>
   11c40:	bl	113d0 <__lxstat64@plt+0x574>
   11c44:	ldr	r3, [r4, #8]
   11c48:	mov	r2, sp
   11c4c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11c50:	mov	r0, #3
   11c54:	ldr	r1, [r5, r3, lsl #2]
   11c58:	bl	10e2c <__xstat64@plt>
   11c5c:	cmp	r0, #0
   11c60:	bne	11d54 <__lxstat64@plt+0xef8>
   11c64:	ldr	r3, [sp, #16]
   11c68:	and	r3, r3, #61440	; 0xf000
   11c6c:	sub	r3, r3, #16384	; 0x4000
   11c70:	clz	r3, r3
   11c74:	lsr	r3, r3, #5
   11c78:	b	119f0 <__lxstat64@plt+0xb94>
   11c7c:	bl	113d0 <__lxstat64@plt+0x574>
   11c80:	ldr	r3, [r4, #8]
   11c84:	mov	r2, sp
   11c88:	sub	r3, r3, #-1073741823	; 0xc0000001
   11c8c:	mov	r0, #3
   11c90:	ldr	r1, [r5, r3, lsl #2]
   11c94:	bl	10e2c <__xstat64@plt>
   11c98:	cmp	r0, #0
   11c9c:	bne	11d54 <__lxstat64@plt+0xef8>
   11ca0:	ldr	r3, [sp, #16]
   11ca4:	and	r3, r3, #61440	; 0xf000
   11ca8:	sub	r3, r3, #8192	; 0x2000
   11cac:	clz	r3, r3
   11cb0:	lsr	r3, r3, #5
   11cb4:	b	119f0 <__lxstat64@plt+0xb94>
   11cb8:	bl	113d0 <__lxstat64@plt+0x574>
   11cbc:	ldr	r3, [r4, #8]
   11cc0:	mov	r2, sp
   11cc4:	sub	r3, r3, #-1073741823	; 0xc0000001
   11cc8:	mov	r0, #3
   11ccc:	ldr	r1, [r5, r3, lsl #2]
   11cd0:	bl	10e2c <__xstat64@plt>
   11cd4:	cmp	r0, #0
   11cd8:	bne	11d54 <__lxstat64@plt+0xef8>
   11cdc:	ldr	r3, [sp, #16]
   11ce0:	and	r3, r3, #61440	; 0xf000
   11ce4:	sub	r3, r3, #24576	; 0x6000
   11ce8:	clz	r3, r3
   11cec:	lsr	r3, r3, #5
   11cf0:	b	119f0 <__lxstat64@plt+0xb94>
   11cf4:	bl	113d0 <__lxstat64@plt+0x574>
   11cf8:	ldr	r3, [r4, #8]
   11cfc:	mov	r2, sp
   11d00:	sub	r3, r3, #-1073741823	; 0xc0000001
   11d04:	mov	r0, #3
   11d08:	ldr	r1, [r5, r3, lsl #2]
   11d0c:	bl	10e2c <__xstat64@plt>
   11d10:	cmp	r0, #0
   11d14:	bne	11d54 <__lxstat64@plt+0xef8>
   11d18:	ldr	r3, [sp, #16]
   11d1c:	and	r3, r3, #61440	; 0xf000
   11d20:	sub	r3, r3, #49152	; 0xc000
   11d24:	clz	r3, r3
   11d28:	lsr	r3, r3, #5
   11d2c:	b	119f0 <__lxstat64@plt+0xb94>
   11d30:	bl	113d0 <__lxstat64@plt+0x574>
   11d34:	ldr	r3, [r4, #8]
   11d38:	mov	r2, sp
   11d3c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11d40:	mov	r0, #3
   11d44:	ldr	r1, [r5, r3, lsl #2]
   11d48:	bl	10e2c <__xstat64@plt>
   11d4c:	subs	r4, r0, #0
   11d50:	beq	11e90 <__lxstat64@plt+0x1034>
   11d54:	mov	r3, #0
   11d58:	mov	r0, r3
   11d5c:	add	sp, sp, #104	; 0x68
   11d60:	pop	{r4, r5, r6, pc}
   11d64:	bl	113d0 <__lxstat64@plt+0x574>
   11d68:	ldr	r3, [r4, #8]
   11d6c:	mov	r2, sp
   11d70:	sub	r3, r3, #-1073741823	; 0xc0000001
   11d74:	mov	r0, #3
   11d78:	ldr	r1, [r5, r3, lsl #2]
   11d7c:	bl	10e2c <__xstat64@plt>
   11d80:	cmp	r0, #0
   11d84:	bne	11d54 <__lxstat64@plt+0xef8>
   11d88:	ldr	r3, [sp, #80]	; 0x50
   11d8c:	ldr	ip, [sp, #72]	; 0x48
   11d90:	ldr	r0, [sp, #76]	; 0x4c
   11d94:	cmp	ip, r3
   11d98:	ldr	r1, [sp, #84]	; 0x54
   11d9c:	movle	r2, #0
   11da0:	movgt	r2, #1
   11da4:	cmp	ip, r3
   11da8:	rsbge	r2, r2, #0
   11dac:	rsblt	r2, r2, #1
   11db0:	cmp	r0, r1
   11db4:	movle	r3, #0
   11db8:	movgt	r3, #1
   11dbc:	cmp	r0, r1
   11dc0:	rsbge	r3, r3, #0
   11dc4:	rsblt	r3, r3, #1
   11dc8:	add	r3, r3, r2, lsl #1
   11dcc:	cmp	r3, #0
   11dd0:	movle	r3, #0
   11dd4:	movgt	r3, #1
   11dd8:	b	119f0 <__lxstat64@plt+0xb94>
   11ddc:	bl	113d0 <__lxstat64@plt+0x574>
   11de0:	ldr	r3, [r4, #8]
   11de4:	mov	r2, sp
   11de8:	sub	r3, r3, #-1073741823	; 0xc0000001
   11dec:	mov	r0, #3
   11df0:	ldr	r1, [r5, r3, lsl #2]
   11df4:	bl	10e5c <__lxstat64@plt>
   11df8:	cmp	r0, #0
   11dfc:	bne	11d54 <__lxstat64@plt+0xef8>
   11e00:	ldr	r3, [sp, #16]
   11e04:	and	r3, r3, #61440	; 0xf000
   11e08:	sub	r3, r3, #40960	; 0xa000
   11e0c:	clz	r3, r3
   11e10:	lsr	r3, r3, #5
   11e14:	b	119f0 <__lxstat64@plt+0xb94>
   11e18:	bl	113d0 <__lxstat64@plt+0x574>
   11e1c:	ldr	r3, [r4, #8]
   11e20:	mov	r2, sp
   11e24:	sub	r3, r3, #-1073741823	; 0xc0000001
   11e28:	mov	r0, #3
   11e2c:	ldr	r1, [r5, r3, lsl #2]
   11e30:	bl	10e2c <__xstat64@plt>
   11e34:	subs	r4, r0, #0
   11e38:	bne	11d54 <__lxstat64@plt+0xef8>
   11e3c:	bl	10d84 <__errno_location@plt>
   11e40:	str	r4, [r0]
   11e44:	mov	r5, r0
   11e48:	bl	10cd0 <getegid@plt>
   11e4c:	cmn	r0, #1
   11e50:	beq	11ebc <__lxstat64@plt+0x1060>
   11e54:	ldr	r3, [sp, #28]
   11e58:	sub	r3, r3, r0
   11e5c:	clz	r3, r3
   11e60:	lsr	r3, r3, #5
   11e64:	b	119f0 <__lxstat64@plt+0xb94>
   11e68:	ldr	r1, [pc, #112]	; 11ee0 <__lxstat64@plt+0x1084>
   11e6c:	mov	r2, #5
   11e70:	mov	r0, #0
   11e74:	bl	10c94 <dcgettext@plt>
   11e78:	mov	r4, r0
   11e7c:	ldr	r0, [r5, r6, lsl #2]
   11e80:	bl	14980 <__lxstat64@plt+0x3b24>
   11e84:	mov	r1, r0
   11e88:	mov	r0, r4
   11e8c:	bl	1128c <__lxstat64@plt+0x430>
   11e90:	bl	10d84 <__errno_location@plt>
   11e94:	str	r4, [r0]
   11e98:	mov	r5, r0
   11e9c:	bl	10cb8 <geteuid@plt>
   11ea0:	cmn	r0, #1
   11ea4:	beq	11ecc <__lxstat64@plt+0x1070>
   11ea8:	ldr	r3, [sp, #24]
   11eac:	sub	r3, r3, r0
   11eb0:	clz	r3, r3
   11eb4:	lsr	r3, r3, #5
   11eb8:	b	119f0 <__lxstat64@plt+0xb94>
   11ebc:	ldr	r3, [r5]
   11ec0:	cmp	r3, #0
   11ec4:	bne	11d54 <__lxstat64@plt+0xef8>
   11ec8:	b	11e54 <__lxstat64@plt+0xff8>
   11ecc:	ldr	r3, [r5]
   11ed0:	cmp	r3, #0
   11ed4:	bne	11d54 <__lxstat64@plt+0xef8>
   11ed8:	b	11ea8 <__lxstat64@plt+0x104c>
   11edc:	andeq	r8, r2, r4, asr #2
   11ee0:	andeq	r6, r1, r4, lsr #10
   11ee4:	push	{r4, r5, r6, r7, r8, lr}
   11ee8:	ldr	r6, [pc, #112]	; 11f60 <__lxstat64@plt+0x1104>
   11eec:	ldr	r1, [pc, #112]	; 11f64 <__lxstat64@plt+0x1108>
   11ef0:	ldr	r7, [r6]
   11ef4:	ldr	r4, [r6, #8]
   11ef8:	ldr	r5, [r7, r4, lsl #2]
   11efc:	mov	r0, r5
   11f00:	bl	10c28 <strcmp@plt>
   11f04:	cmp	r0, #0
   11f08:	beq	11f38 <__lxstat64@plt+0x10dc>
   11f0c:	ldrb	r3, [r5]
   11f10:	cmp	r3, #45	; 0x2d
   11f14:	bne	11f5c <__lxstat64@plt+0x1100>
   11f18:	ldrb	r3, [r5, #1]
   11f1c:	cmp	r3, #0
   11f20:	beq	11f5c <__lxstat64@plt+0x1100>
   11f24:	ldrb	r3, [r5, #2]
   11f28:	cmp	r3, #0
   11f2c:	bne	11f5c <__lxstat64@plt+0x1100>
   11f30:	pop	{r4, r5, r6, r7, r8, lr}
   11f34:	b	118d8 <__lxstat64@plt+0xa7c>
   11f38:	lsl	r8, r4, #2
   11f3c:	add	r7, r7, r8
   11f40:	add	r4, r4, #2
   11f44:	ldr	r3, [r7, #4]
   11f48:	str	r4, [r6, #8]
   11f4c:	ldrb	r0, [r3]
   11f50:	clz	r0, r0
   11f54:	lsr	r0, r0, #5
   11f58:	pop	{r4, r5, r6, r7, r8, pc}
   11f5c:	bl	11390 <__lxstat64@plt+0x534>
   11f60:	andeq	r8, r2, r4, asr #2
   11f64:	andeq	r6, r1, r0, asr #10
   11f68:	sub	r3, r0, #1
   11f6c:	push	{r4, r5, r6, r7, r8, lr}
   11f70:	cmp	r3, #3
   11f74:	ldrls	pc, [pc, r3, lsl #2]
   11f78:	b	12010 <__lxstat64@plt+0x11b4>
   11f7c:	andeq	r1, r1, r8, ror #31
   11f80:	andeq	r1, r1, r0, ror #31
   11f84:	ldrdeq	r1, [r1], -r8
   11f88:	andeq	r1, r1, ip, lsl #31
   11f8c:	ldr	r5, [pc, #240]	; 12084 <__lxstat64@plt+0x1228>
   11f90:	ldr	r1, [pc, #240]	; 12088 <__lxstat64@plt+0x122c>
   11f94:	ldr	r4, [r5, #8]
   11f98:	ldr	r6, [r5]
   11f9c:	lsl	r8, r4, #2
   11fa0:	ldr	r7, [r6, r4, lsl #2]
   11fa4:	mov	r0, r7
   11fa8:	bl	10c28 <strcmp@plt>
   11fac:	cmp	r0, #0
   11fb0:	bne	12034 <__lxstat64@plt+0x11d8>
   11fb4:	ldr	r3, [r5, #4]
   11fb8:	add	r4, r4, #1
   11fbc:	cmp	r4, r3
   11fc0:	str	r4, [r5, #8]
   11fc4:	bge	12080 <__lxstat64@plt+0x1224>
   11fc8:	bl	123d8 <__lxstat64@plt+0x157c>
   11fcc:	eor	r0, r0, #1
   11fd0:	uxtb	r0, r0
   11fd4:	pop	{r4, r5, r6, r7, r8, pc}
   11fd8:	pop	{r4, r5, r6, r7, r8, lr}
   11fdc:	b	123d8 <__lxstat64@plt+0x157c>
   11fe0:	pop	{r4, r5, r6, r7, r8, lr}
   11fe4:	b	11ee4 <__lxstat64@plt+0x1088>
   11fe8:	ldr	r3, [pc, #148]	; 12084 <__lxstat64@plt+0x1228>
   11fec:	ldr	r2, [r3, #8]
   11ff0:	ldr	r1, [r3]
   11ff4:	add	r0, r2, #1
   11ff8:	str	r0, [r3, #8]
   11ffc:	ldr	r3, [r1, r2, lsl #2]
   12000:	ldrb	r0, [r3]
   12004:	adds	r0, r0, #0
   12008:	movne	r0, #1
   1200c:	pop	{r4, r5, r6, r7, r8, pc}
   12010:	cmp	r0, #0
   12014:	ble	1207c <__lxstat64@plt+0x1220>
   12018:	ldr	r5, [pc, #100]	; 12084 <__lxstat64@plt+0x1228>
   1201c:	ldr	r4, [r5, #8]
   12020:	ldr	r3, [r5, #4]
   12024:	cmp	r3, r4
   12028:	ble	12080 <__lxstat64@plt+0x1224>
   1202c:	pop	{r4, r5, r6, r7, r8, lr}
   12030:	b	12094 <__lxstat64@plt+0x1238>
   12034:	mov	r0, r7
   12038:	ldr	r1, [pc, #76]	; 1208c <__lxstat64@plt+0x1230>
   1203c:	bl	10c28 <strcmp@plt>
   12040:	cmp	r0, #0
   12044:	bne	12020 <__lxstat64@plt+0x11c4>
   12048:	add	r6, r6, r8
   1204c:	ldr	r1, [pc, #60]	; 12090 <__lxstat64@plt+0x1234>
   12050:	ldr	r0, [r6, #12]
   12054:	bl	10c28 <strcmp@plt>
   12058:	cmp	r0, #0
   1205c:	bne	12020 <__lxstat64@plt+0x11c4>
   12060:	add	r4, r4, #1
   12064:	str	r4, [r5, #8]
   12068:	bl	11ee4 <__lxstat64@plt+0x1088>
   1206c:	ldr	r3, [r5, #8]
   12070:	add	r3, r3, #1
   12074:	str	r3, [r5, #8]
   12078:	pop	{r4, r5, r6, r7, r8, pc}
   1207c:	bl	10e50 <abort@plt>
   12080:	bl	11390 <__lxstat64@plt+0x534>
   12084:	andeq	r8, r2, r4, asr #2
   12088:	andeq	r6, r1, r0, asr #10
   1208c:	andeq	r6, r1, r4, asr #10
   12090:	andeq	r6, r1, r8, asr #10
   12094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12098:	mov	r8, #1
   1209c:	ldr	r9, [pc, #792]	; 123bc <__lxstat64@plt+0x1560>
   120a0:	sub	sp, sp, #12
   120a4:	mov	r3, #0
   120a8:	ldr	r4, [r9, #8]
   120ac:	ldr	r7, [r9, #4]
   120b0:	str	r3, [sp, #4]
   120b4:	cmp	r4, r7
   120b8:	str	r8, [sp]
   120bc:	bge	121ec <__lxstat64@plt+0x1390>
   120c0:	ldr	fp, [r9]
   120c4:	add	r3, fp, r4, lsl #2
   120c8:	ldr	r5, [fp, r4, lsl #2]
   120cc:	ldrb	r6, [r5]
   120d0:	cmp	r6, #33	; 0x21
   120d4:	bne	1237c <__lxstat64@plt+0x1520>
   120d8:	ldrb	r2, [r5, #1]
   120dc:	cmp	r2, #0
   120e0:	bne	12384 <__lxstat64@plt+0x1528>
   120e4:	add	r4, r4, #1
   120e8:	cmp	r4, r7
   120ec:	str	r4, [r9, #8]
   120f0:	bge	121ec <__lxstat64@plt+0x1390>
   120f4:	mov	r0, #0
   120f8:	mov	sl, r8
   120fc:	b	12120 <__lxstat64@plt+0x12c4>
   12100:	ldrb	r2, [r5, #1]
   12104:	cmp	r2, #0
   12108:	bne	12220 <__lxstat64@plt+0x13c4>
   1210c:	add	r4, r4, #1
   12110:	cmp	r4, r7
   12114:	beq	1238c <__lxstat64@plt+0x1530>
   12118:	eor	sl, sl, #1
   1211c:	mov	r0, r8
   12120:	ldr	r5, [r3, #4]!
   12124:	ldrb	r1, [r5]
   12128:	cmp	r1, #33	; 0x21
   1212c:	beq	12100 <__lxstat64@plt+0x12a4>
   12130:	mov	r6, r1
   12134:	cmp	r0, #0
   12138:	strne	r4, [r9, #8]
   1213c:	cmp	r6, #40	; 0x28
   12140:	beq	1222c <__lxstat64@plt+0x13d0>
   12144:	sub	r7, r7, r4
   12148:	cmp	r7, #3
   1214c:	ble	121f0 <__lxstat64@plt+0x1394>
   12150:	ldr	r1, [pc, #616]	; 123c0 <__lxstat64@plt+0x1564>
   12154:	mov	r0, r5
   12158:	bl	10c28 <strcmp@plt>
   1215c:	cmp	r0, #0
   12160:	bne	12178 <__lxstat64@plt+0x131c>
   12164:	add	r3, r4, #2
   12168:	ldr	r0, [fp, r3, lsl #2]
   1216c:	bl	1115c <__lxstat64@plt+0x300>
   12170:	cmp	r0, #0
   12174:	bne	1236c <__lxstat64@plt+0x1510>
   12178:	add	r3, r4, #1
   1217c:	ldr	r0, [fp, r3, lsl #2]
   12180:	bl	1115c <__lxstat64@plt+0x300>
   12184:	cmp	r0, #0
   12188:	bne	12314 <__lxstat64@plt+0x14b8>
   1218c:	cmp	r6, #45	; 0x2d
   12190:	beq	121fc <__lxstat64@plt+0x13a0>
   12194:	adds	r0, r6, #0
   12198:	movne	r0, #1
   1219c:	add	r4, r4, #1
   121a0:	str	r4, [r9, #8]
   121a4:	ldr	r3, [sp]
   121a8:	ldr	r7, [r9, #4]
   121ac:	eor	r2, r0, sl
   121b0:	and	r3, r3, r2
   121b4:	cmp	r7, r4
   121b8:	str	r3, [sp]
   121bc:	ble	12354 <__lxstat64@plt+0x14f8>
   121c0:	ldr	r3, [r9]
   121c4:	ldr	r1, [pc, #504]	; 123c4 <__lxstat64@plt+0x1568>
   121c8:	ldr	r5, [r3, r4, lsl #2]
   121cc:	mov	r0, r5
   121d0:	bl	10c28 <strcmp@plt>
   121d4:	cmp	r0, #0
   121d8:	bne	12324 <__lxstat64@plt+0x14c8>
   121dc:	add	r4, r4, #1
   121e0:	cmp	r4, r7
   121e4:	str	r4, [r9, #8]
   121e8:	blt	120c0 <__lxstat64@plt+0x1264>
   121ec:	bl	11390 <__lxstat64@plt+0x534>
   121f0:	beq	12178 <__lxstat64@plt+0x131c>
   121f4:	cmp	r6, #45	; 0x2d
   121f8:	bne	12194 <__lxstat64@plt+0x1338>
   121fc:	ldrb	r3, [r5, #1]
   12200:	cmp	r3, #0
   12204:	beq	12194 <__lxstat64@plt+0x1338>
   12208:	ldrb	r3, [r5, #2]
   1220c:	cmp	r3, #0
   12210:	bne	12194 <__lxstat64@plt+0x1338>
   12214:	bl	118d8 <__lxstat64@plt+0xa7c>
   12218:	ldr	r4, [r9, #8]
   1221c:	b	121a4 <__lxstat64@plt+0x1348>
   12220:	cmp	r0, #0
   12224:	strne	r4, [r9, #8]
   12228:	b	12144 <__lxstat64@plt+0x12e8>
   1222c:	ldrb	r3, [r5, #1]
   12230:	cmp	r3, #0
   12234:	bne	12144 <__lxstat64@plt+0x12e8>
   12238:	add	r5, r4, #1
   1223c:	cmp	r5, r7
   12240:	str	r5, [r9, #8]
   12244:	bge	121ec <__lxstat64@plt+0x1390>
   12248:	add	r3, r4, #2
   1224c:	cmp	r3, r7
   12250:	movge	r4, #1
   12254:	bge	12290 <__lxstat64@plt+0x1434>
   12258:	sub	r6, r7, #1
   1225c:	sub	r6, r6, r4
   12260:	add	fp, fp, r5, lsl #2
   12264:	mov	r4, #1
   12268:	ldr	r1, [pc, #344]	; 123c8 <__lxstat64@plt+0x156c>
   1226c:	ldr	r0, [fp, #4]!
   12270:	bl	10c28 <strcmp@plt>
   12274:	cmp	r0, #0
   12278:	beq	12290 <__lxstat64@plt+0x1434>
   1227c:	cmp	r4, #4
   12280:	beq	1230c <__lxstat64@plt+0x14b0>
   12284:	add	r4, r4, #1
   12288:	cmp	r6, r4
   1228c:	bne	12268 <__lxstat64@plt+0x140c>
   12290:	mov	r0, r4
   12294:	bl	11f68 <__lxstat64@plt+0x110c>
   12298:	ldr	r4, [r9, #8]
   1229c:	ldr	r3, [r9]
   122a0:	ldr	r3, [r3, r4, lsl #2]
   122a4:	cmp	r3, #0
   122a8:	beq	12394 <__lxstat64@plt+0x1538>
   122ac:	ldrb	r1, [r3]
   122b0:	cmp	r1, #41	; 0x29
   122b4:	bne	122c4 <__lxstat64@plt+0x1468>
   122b8:	ldrb	r3, [r3, #1]
   122bc:	cmp	r3, #0
   122c0:	beq	1219c <__lxstat64@plt+0x1340>
   122c4:	mov	r2, #5
   122c8:	ldr	r1, [pc, #252]	; 123cc <__lxstat64@plt+0x1570>
   122cc:	mov	r0, #0
   122d0:	bl	10c94 <dcgettext@plt>
   122d4:	ldr	r1, [pc, #236]	; 123c8 <__lxstat64@plt+0x156c>
   122d8:	mov	r4, r0
   122dc:	mov	r0, #0
   122e0:	bl	14970 <__lxstat64@plt+0x3b14>
   122e4:	ldr	r2, [r9, #8]
   122e8:	ldr	r3, [r9]
   122ec:	ldr	r1, [r3, r2, lsl #2]
   122f0:	mov	r5, r0
   122f4:	mov	r0, #1
   122f8:	bl	14970 <__lxstat64@plt+0x3b14>
   122fc:	mov	r1, r5
   12300:	mov	r2, r0
   12304:	mov	r0, r4
   12308:	bl	1128c <__lxstat64@plt+0x430>
   1230c:	sub	r4, r7, r5
   12310:	b	12290 <__lxstat64@plt+0x1434>
   12314:	mov	r0, #0
   12318:	bl	11400 <__lxstat64@plt+0x5a4>
   1231c:	ldr	r4, [r9, #8]
   12320:	b	121a4 <__lxstat64@plt+0x1348>
   12324:	mov	r0, r5
   12328:	ldr	r1, [pc, #160]	; 123d0 <__lxstat64@plt+0x1574>
   1232c:	bl	10c28 <strcmp@plt>
   12330:	ldr	sl, [sp]
   12334:	ldr	r3, [sp, #4]
   12338:	orr	r3, r3, sl
   1233c:	str	r3, [sp, #4]
   12340:	cmp	r0, #0
   12344:	bne	12360 <__lxstat64@plt+0x1504>
   12348:	add	r4, r4, #1
   1234c:	str	r4, [r9, #8]
   12350:	b	120b4 <__lxstat64@plt+0x1258>
   12354:	ldm	sp, {r3, sl}
   12358:	orr	r3, r3, sl
   1235c:	str	r3, [sp, #4]
   12360:	ldr	r0, [sp, #4]
   12364:	add	sp, sp, #12
   12368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1236c:	mov	r0, r8
   12370:	bl	11400 <__lxstat64@plt+0x5a4>
   12374:	ldr	r4, [r9, #8]
   12378:	b	121a4 <__lxstat64@plt+0x1348>
   1237c:	mov	sl, #0
   12380:	b	1213c <__lxstat64@plt+0x12e0>
   12384:	mov	sl, #0
   12388:	b	12144 <__lxstat64@plt+0x12e8>
   1238c:	str	r4, [r9, #8]
   12390:	bl	11390 <__lxstat64@plt+0x534>
   12394:	ldr	r1, [pc, #56]	; 123d4 <__lxstat64@plt+0x1578>
   12398:	mov	r0, r3
   1239c:	mov	r2, #5
   123a0:	bl	10c94 <dcgettext@plt>
   123a4:	mov	r4, r0
   123a8:	ldr	r0, [pc, #24]	; 123c8 <__lxstat64@plt+0x156c>
   123ac:	bl	14980 <__lxstat64@plt+0x3b24>
   123b0:	mov	r1, r0
   123b4:	mov	r0, r4
   123b8:	bl	1128c <__lxstat64@plt+0x430>
   123bc:	andeq	r8, r2, r4, asr #2
   123c0:	andeq	r6, r1, ip, ror #9
   123c4:	andeq	r6, r1, r0, ror r5
   123c8:	andeq	r6, r1, r8, asr #10
   123cc:	andeq	r6, r1, r8, asr r5
   123d0:	andeq	r6, r1, r4, ror r5
   123d4:	andeq	r6, r1, ip, asr #10
   123d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   123dc:	ldr	r4, [pc, #268]	; 124f0 <__lxstat64@plt+0x1694>
   123e0:	ldr	r8, [r4, #8]
   123e4:	ldr	r6, [r4]
   123e8:	add	r5, r8, #1
   123ec:	ldr	r7, [r6, r5, lsl #2]
   123f0:	add	r9, r6, r5, lsl #2
   123f4:	mov	r0, r7
   123f8:	bl	1115c <__lxstat64@plt+0x300>
   123fc:	cmp	r0, #0
   12400:	bne	1248c <__lxstat64@plt+0x1630>
   12404:	ldr	sl, [r9, #-4]
   12408:	ldr	r1, [pc, #228]	; 124f4 <__lxstat64@plt+0x1698>
   1240c:	mov	r0, sl
   12410:	bl	10c28 <strcmp@plt>
   12414:	cmp	r0, #0
   12418:	bne	1243c <__lxstat64@plt+0x15e0>
   1241c:	ldr	r3, [r4, #4]
   12420:	str	r5, [r4, #8]
   12424:	cmp	r5, r3
   12428:	bge	124c4 <__lxstat64@plt+0x1668>
   1242c:	bl	11ee4 <__lxstat64@plt+0x1088>
   12430:	eor	r0, r0, #1
   12434:	uxtb	r0, r0
   12438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1243c:	mov	r0, sl
   12440:	ldr	r1, [pc, #176]	; 124f8 <__lxstat64@plt+0x169c>
   12444:	bl	10c28 <strcmp@plt>
   12448:	cmp	r0, #0
   1244c:	beq	12498 <__lxstat64@plt+0x163c>
   12450:	ldr	r1, [pc, #164]	; 124fc <__lxstat64@plt+0x16a0>
   12454:	mov	r0, r7
   12458:	bl	10c28 <strcmp@plt>
   1245c:	cmp	r0, #0
   12460:	beq	12478 <__lxstat64@plt+0x161c>
   12464:	mov	r0, r7
   12468:	ldr	r1, [pc, #144]	; 12500 <__lxstat64@plt+0x16a4>
   1246c:	bl	10c28 <strcmp@plt>
   12470:	cmp	r0, #0
   12474:	bne	124c8 <__lxstat64@plt+0x166c>
   12478:	ldr	r3, [r4, #4]
   1247c:	cmp	r8, r3
   12480:	bge	124c4 <__lxstat64@plt+0x1668>
   12484:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12488:	b	12094 <__lxstat64@plt+0x1238>
   1248c:	mov	r0, #0
   12490:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12494:	b	11400 <__lxstat64@plt+0x5a4>
   12498:	ldr	r0, [r9, #4]
   1249c:	ldr	r1, [pc, #96]	; 12504 <__lxstat64@plt+0x16a8>
   124a0:	bl	10c28 <strcmp@plt>
   124a4:	cmp	r0, #0
   124a8:	bne	12450 <__lxstat64@plt+0x15f4>
   124ac:	ldrb	r0, [r7]
   124b0:	add	r8, r8, #3
   124b4:	str	r8, [r4, #8]
   124b8:	adds	r0, r0, #0
   124bc:	movne	r0, #1
   124c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124c4:	bl	11390 <__lxstat64@plt+0x534>
   124c8:	ldr	r1, [pc, #56]	; 12508 <__lxstat64@plt+0x16ac>
   124cc:	mov	r2, #5
   124d0:	mov	r0, #0
   124d4:	bl	10c94 <dcgettext@plt>
   124d8:	mov	r4, r0
   124dc:	ldr	r0, [r6, r5, lsl #2]
   124e0:	bl	14980 <__lxstat64@plt+0x3b24>
   124e4:	mov	r1, r0
   124e8:	mov	r0, r4
   124ec:	bl	1128c <__lxstat64@plt+0x430>
   124f0:	andeq	r8, r2, r4, asr #2
   124f4:	andeq	r6, r1, r0, asr #10
   124f8:	andeq	r6, r1, r4, asr #10
   124fc:	andeq	r6, r1, r0, ror r5
   12500:	andeq	r6, r1, r4, ror r5
   12504:	andeq	r6, r1, r8, asr #10
   12508:	andeq	r6, r1, r8, ror r5
   1250c:	subs	r5, r0, #0
   12510:	push	{r7, lr}
   12514:	sub	sp, sp, #56	; 0x38
   12518:	beq	12554 <__lxstat64@plt+0x16f8>
   1251c:	ldr	r3, [pc, #940]	; 128d0 <__lxstat64@plt+0x1a74>
   12520:	mov	r2, #5
   12524:	ldr	r1, [pc, #936]	; 128d4 <__lxstat64@plt+0x1a78>
   12528:	mov	r0, #0
   1252c:	ldr	r4, [r3]
   12530:	bl	10c94 <dcgettext@plt>
   12534:	ldr	r3, [pc, #924]	; 128d8 <__lxstat64@plt+0x1a7c>
   12538:	mov	r1, #1
   1253c:	ldr	r3, [r3]
   12540:	mov	r2, r0
   12544:	mov	r0, r4
   12548:	bl	10dcc <__fprintf_chk@plt>
   1254c:	mov	r0, r5
   12550:	bl	10d6c <exit@plt>
   12554:	ldr	r6, [pc, #896]	; 128dc <__lxstat64@plt+0x1a80>
   12558:	mov	r2, #5
   1255c:	ldr	r1, [pc, #892]	; 128e0 <__lxstat64@plt+0x1a84>
   12560:	bl	10c94 <dcgettext@plt>
   12564:	ldr	r1, [r6]
   12568:	bl	10c10 <fputs_unlocked@plt>
   1256c:	mov	r2, #5
   12570:	ldr	r1, [pc, #876]	; 128e4 <__lxstat64@plt+0x1a88>
   12574:	mov	r0, r5
   12578:	bl	10c94 <dcgettext@plt>
   1257c:	ldr	r1, [r6]
   12580:	bl	10c10 <fputs_unlocked@plt>
   12584:	mov	r2, #5
   12588:	ldr	r1, [pc, #856]	; 128e8 <__lxstat64@plt+0x1a8c>
   1258c:	mov	r0, r5
   12590:	bl	10c94 <dcgettext@plt>
   12594:	ldr	r1, [r6]
   12598:	bl	10c10 <fputs_unlocked@plt>
   1259c:	mov	r2, #5
   125a0:	ldr	r1, [pc, #836]	; 128ec <__lxstat64@plt+0x1a90>
   125a4:	mov	r0, r5
   125a8:	bl	10c94 <dcgettext@plt>
   125ac:	ldr	r1, [r6]
   125b0:	bl	10c10 <fputs_unlocked@plt>
   125b4:	mov	r2, #5
   125b8:	ldr	r1, [pc, #816]	; 128f0 <__lxstat64@plt+0x1a94>
   125bc:	mov	r0, r5
   125c0:	bl	10c94 <dcgettext@plt>
   125c4:	ldr	r1, [r6]
   125c8:	bl	10c10 <fputs_unlocked@plt>
   125cc:	mov	r2, #5
   125d0:	ldr	r1, [pc, #796]	; 128f4 <__lxstat64@plt+0x1a98>
   125d4:	mov	r0, r5
   125d8:	bl	10c94 <dcgettext@plt>
   125dc:	ldr	r1, [r6]
   125e0:	bl	10c10 <fputs_unlocked@plt>
   125e4:	mov	r2, #5
   125e8:	ldr	r1, [pc, #776]	; 128f8 <__lxstat64@plt+0x1a9c>
   125ec:	mov	r0, r5
   125f0:	bl	10c94 <dcgettext@plt>
   125f4:	ldr	r1, [r6]
   125f8:	bl	10c10 <fputs_unlocked@plt>
   125fc:	mov	r2, #5
   12600:	ldr	r1, [pc, #756]	; 128fc <__lxstat64@plt+0x1aa0>
   12604:	mov	r0, r5
   12608:	bl	10c94 <dcgettext@plt>
   1260c:	ldr	r1, [r6]
   12610:	bl	10c10 <fputs_unlocked@plt>
   12614:	mov	r2, #5
   12618:	ldr	r1, [pc, #736]	; 12900 <__lxstat64@plt+0x1aa4>
   1261c:	mov	r0, r5
   12620:	bl	10c94 <dcgettext@plt>
   12624:	ldr	r1, [r6]
   12628:	bl	10c10 <fputs_unlocked@plt>
   1262c:	mov	r2, #5
   12630:	ldr	r1, [pc, #716]	; 12904 <__lxstat64@plt+0x1aa8>
   12634:	mov	r0, r5
   12638:	bl	10c94 <dcgettext@plt>
   1263c:	ldr	r1, [r6]
   12640:	bl	10c10 <fputs_unlocked@plt>
   12644:	mov	r2, #5
   12648:	ldr	r1, [pc, #696]	; 12908 <__lxstat64@plt+0x1aac>
   1264c:	mov	r0, r5
   12650:	bl	10c94 <dcgettext@plt>
   12654:	ldr	r1, [r6]
   12658:	bl	10c10 <fputs_unlocked@plt>
   1265c:	mov	r2, #5
   12660:	ldr	r1, [pc, #676]	; 1290c <__lxstat64@plt+0x1ab0>
   12664:	mov	r0, r5
   12668:	bl	10c94 <dcgettext@plt>
   1266c:	ldr	r1, [r6]
   12670:	bl	10c10 <fputs_unlocked@plt>
   12674:	mov	r2, #5
   12678:	ldr	r1, [pc, #656]	; 12910 <__lxstat64@plt+0x1ab4>
   1267c:	mov	r0, r5
   12680:	bl	10c94 <dcgettext@plt>
   12684:	ldr	r1, [r6]
   12688:	bl	10c10 <fputs_unlocked@plt>
   1268c:	mov	r2, #5
   12690:	ldr	r1, [pc, #636]	; 12914 <__lxstat64@plt+0x1ab8>
   12694:	mov	r0, r5
   12698:	bl	10c94 <dcgettext@plt>
   1269c:	ldr	r1, [r6]
   126a0:	bl	10c10 <fputs_unlocked@plt>
   126a4:	mov	r2, #5
   126a8:	ldr	r1, [pc, #616]	; 12918 <__lxstat64@plt+0x1abc>
   126ac:	mov	r0, r5
   126b0:	bl	10c94 <dcgettext@plt>
   126b4:	ldr	r1, [r6]
   126b8:	bl	10c10 <fputs_unlocked@plt>
   126bc:	mov	r2, #5
   126c0:	ldr	r1, [pc, #596]	; 1291c <__lxstat64@plt+0x1ac0>
   126c4:	mov	r0, r5
   126c8:	bl	10c94 <dcgettext@plt>
   126cc:	ldr	r1, [r6]
   126d0:	bl	10c10 <fputs_unlocked@plt>
   126d4:	mov	r2, #5
   126d8:	ldr	r1, [pc, #576]	; 12920 <__lxstat64@plt+0x1ac4>
   126dc:	mov	r0, r5
   126e0:	bl	10c94 <dcgettext@plt>
   126e4:	mov	r2, #5
   126e8:	ldr	r1, [pc, #564]	; 12924 <__lxstat64@plt+0x1ac8>
   126ec:	mov	r4, r0
   126f0:	mov	r0, r5
   126f4:	bl	10c94 <dcgettext@plt>
   126f8:	mov	r1, r4
   126fc:	ldr	r4, [pc, #548]	; 12928 <__lxstat64@plt+0x1acc>
   12700:	mov	r2, r0
   12704:	mov	r0, #1
   12708:	bl	10db4 <__printf_chk@plt>
   1270c:	ldm	r4!, {r0, r1, r2, r3}
   12710:	mov	lr, sp
   12714:	stmia	lr!, {r0, r1, r2, r3}
   12718:	ldm	r4!, {r0, r1, r2, r3}
   1271c:	ldr	ip, [sp]
   12720:	stmia	lr!, {r0, r1, r2, r3}
   12724:	cmp	ip, #0
   12728:	ldm	r4!, {r0, r1, r2, r3}
   1272c:	stmia	lr!, {r0, r1, r2, r3}
   12730:	ldm	r4, {r0, r1}
   12734:	moveq	r4, sp
   12738:	stm	lr, {r0, r1}
   1273c:	beq	1276c <__lxstat64@plt+0x1910>
   12740:	ldr	r7, [pc, #484]	; 1292c <__lxstat64@plt+0x1ad0>
   12744:	mov	r4, sp
   12748:	b	12758 <__lxstat64@plt+0x18fc>
   1274c:	ldr	ip, [r4, #8]!
   12750:	cmp	ip, #0
   12754:	beq	1276c <__lxstat64@plt+0x1910>
   12758:	mov	r1, ip
   1275c:	mov	r0, r7
   12760:	bl	10c28 <strcmp@plt>
   12764:	cmp	r0, #0
   12768:	bne	1274c <__lxstat64@plt+0x18f0>
   1276c:	ldr	r4, [r4, #4]
   12770:	mov	r2, #5
   12774:	cmp	r4, #0
   12778:	ldr	r1, [pc, #432]	; 12930 <__lxstat64@plt+0x1ad4>
   1277c:	beq	12824 <__lxstat64@plt+0x19c8>
   12780:	mov	r0, #0
   12784:	bl	10c94 <dcgettext@plt>
   12788:	ldr	r3, [pc, #420]	; 12934 <__lxstat64@plt+0x1ad8>
   1278c:	ldr	r2, [pc, #420]	; 12938 <__lxstat64@plt+0x1adc>
   12790:	mov	r1, r0
   12794:	mov	r0, #1
   12798:	bl	10db4 <__printf_chk@plt>
   1279c:	mov	r1, #0
   127a0:	mov	r0, #5
   127a4:	bl	10df0 <setlocale@plt>
   127a8:	cmp	r0, #0
   127ac:	ldreq	r7, [pc, #376]	; 1292c <__lxstat64@plt+0x1ad0>
   127b0:	beq	127cc <__lxstat64@plt+0x1970>
   127b4:	mov	r2, #3
   127b8:	ldr	r1, [pc, #380]	; 1293c <__lxstat64@plt+0x1ae0>
   127bc:	bl	10e44 <strncmp@plt>
   127c0:	ldr	r7, [pc, #356]	; 1292c <__lxstat64@plt+0x1ad0>
   127c4:	cmp	r0, #0
   127c8:	bne	128b4 <__lxstat64@plt+0x1a58>
   127cc:	mov	r2, #5
   127d0:	ldr	r1, [pc, #360]	; 12940 <__lxstat64@plt+0x1ae4>
   127d4:	mov	r0, #0
   127d8:	bl	10c94 <dcgettext@plt>
   127dc:	ldr	r3, [pc, #328]	; 1292c <__lxstat64@plt+0x1ad0>
   127e0:	ldr	r2, [pc, #332]	; 12934 <__lxstat64@plt+0x1ad8>
   127e4:	mov	r1, r0
   127e8:	mov	r0, #1
   127ec:	bl	10db4 <__printf_chk@plt>
   127f0:	mov	r2, #5
   127f4:	ldr	r1, [pc, #328]	; 12944 <__lxstat64@plt+0x1ae8>
   127f8:	mov	r0, #0
   127fc:	bl	10c94 <dcgettext@plt>
   12800:	ldr	r2, [pc, #320]	; 12948 <__lxstat64@plt+0x1aec>
   12804:	cmp	r4, r7
   12808:	ldr	r3, [pc, #316]	; 1294c <__lxstat64@plt+0x1af0>
   1280c:	movne	r3, r2
   12810:	mov	r1, r0
   12814:	mov	r2, r4
   12818:	mov	r0, #1
   1281c:	bl	10db4 <__printf_chk@plt>
   12820:	b	1254c <__lxstat64@plt+0x16f0>
   12824:	mov	r0, r4
   12828:	bl	10c94 <dcgettext@plt>
   1282c:	ldr	r3, [pc, #256]	; 12934 <__lxstat64@plt+0x1ad8>
   12830:	ldr	r2, [pc, #256]	; 12938 <__lxstat64@plt+0x1adc>
   12834:	mov	r1, r0
   12838:	mov	r0, #1
   1283c:	bl	10db4 <__printf_chk@plt>
   12840:	mov	r1, r4
   12844:	mov	r0, #5
   12848:	bl	10df0 <setlocale@plt>
   1284c:	cmp	r0, #0
   12850:	beq	12868 <__lxstat64@plt+0x1a0c>
   12854:	mov	r2, #3
   12858:	ldr	r1, [pc, #220]	; 1293c <__lxstat64@plt+0x1ae0>
   1285c:	bl	10e44 <strncmp@plt>
   12860:	cmp	r0, #0
   12864:	bne	128ac <__lxstat64@plt+0x1a50>
   12868:	mov	r2, #5
   1286c:	ldr	r1, [pc, #204]	; 12940 <__lxstat64@plt+0x1ae4>
   12870:	mov	r0, #0
   12874:	bl	10c94 <dcgettext@plt>
   12878:	ldr	r3, [pc, #172]	; 1292c <__lxstat64@plt+0x1ad0>
   1287c:	ldr	r2, [pc, #176]	; 12934 <__lxstat64@plt+0x1ad8>
   12880:	mov	r4, r3
   12884:	mov	r1, r0
   12888:	mov	r0, #1
   1288c:	bl	10db4 <__printf_chk@plt>
   12890:	ldr	r1, [pc, #172]	; 12944 <__lxstat64@plt+0x1ae8>
   12894:	mov	r2, #5
   12898:	mov	r0, #0
   1289c:	bl	10c94 <dcgettext@plt>
   128a0:	ldr	r3, [pc, #164]	; 1294c <__lxstat64@plt+0x1af0>
   128a4:	mov	r1, r0
   128a8:	b	12814 <__lxstat64@plt+0x19b8>
   128ac:	ldr	r7, [pc, #120]	; 1292c <__lxstat64@plt+0x1ad0>
   128b0:	mov	r4, r7
   128b4:	mov	r2, #5
   128b8:	ldr	r1, [pc, #144]	; 12950 <__lxstat64@plt+0x1af4>
   128bc:	mov	r0, #0
   128c0:	bl	10c94 <dcgettext@plt>
   128c4:	ldr	r1, [r6]
   128c8:	bl	10c10 <fputs_unlocked@plt>
   128cc:	b	127cc <__lxstat64@plt+0x1970>
   128d0:	andeq	r8, r2, r8, lsr r1
   128d4:	muleq	r1, r8, r5
   128d8:	andeq	r8, r2, r8, asr r1
   128dc:	andeq	r8, r2, ip, lsr r1
   128e0:	andeq	r6, r1, r0, asr #11
   128e4:	andeq	r6, r1, r8, lsl r6
   128e8:	andeq	r6, r1, ip, asr #12
   128ec:	andeq	r6, r1, ip, ror r6
   128f0:			; <UNDEFINED> instruction: 0x000166b4
   128f4:	andeq	r6, r1, ip, lsr #14
   128f8:	andeq	r6, r1, r8, lsr #16
   128fc:	andeq	r6, r1, r4, lsr #18
   12900:	muleq	r1, ip, sl
   12904:	andeq	r6, r1, ip, asr fp
   12908:	andeq	r6, r1, r8, lsl #24
   1290c:	andeq	r6, r1, ip, lsl sp
   12910:	andeq	r6, r1, r4, lsl #29
   12914:	andeq	r6, r1, r4, lsr #31
   12918:	andeq	r7, r1, r8, lsl #1
   1291c:	andeq	r7, r1, r4, lsl #2
   12920:	andeq	r7, r1, ip, lsl #3
   12924:	andeq	r7, r1, ip, asr #4
   12928:	andeq	r6, r1, r8, lsr #8
   1292c:	andeq	r7, r1, r8, asr r2
   12930:	andeq	r7, r1, ip, asr r2
   12934:	andeq	r7, r1, r4, ror r2
   12938:	muleq	r1, ip, r2
   1293c:	andeq	r7, r1, ip, lsr #5
   12940:	strdeq	r7, [r1], -r8
   12944:	andeq	r7, r1, r4, lsl r3
   12948:	andeq	r6, r1, r8, asr #12
   1294c:	andeq	r7, r1, r4, asr #7
   12950:			; <UNDEFINED> instruction: 0x000172b0
   12954:	ldr	r3, [pc, #4]	; 12960 <__lxstat64@plt+0x1b04>
   12958:	str	r0, [r3]
   1295c:	bx	lr
   12960:	andeq	r8, r2, r0, asr r1
   12964:	ldr	r3, [pc, #4]	; 12970 <__lxstat64@plt+0x1b14>
   12968:	strb	r0, [r3, #4]
   1296c:	bx	lr
   12970:	andeq	r8, r2, r0, asr r1
   12974:	ldr	r3, [pc, #192]	; 12a3c <__lxstat64@plt+0x1be0>
   12978:	push	{r4, r5, r6, lr}
   1297c:	sub	sp, sp, #8
   12980:	ldr	r0, [r3]
   12984:	bl	159a4 <__lxstat64@plt+0x4b48>
   12988:	cmp	r0, #0
   1298c:	beq	129b0 <__lxstat64@plt+0x1b54>
   12990:	ldr	r4, [pc, #168]	; 12a40 <__lxstat64@plt+0x1be4>
   12994:	ldrb	r3, [r4, #4]
   12998:	cmp	r3, #0
   1299c:	beq	129cc <__lxstat64@plt+0x1b70>
   129a0:	bl	10d84 <__errno_location@plt>
   129a4:	ldr	r3, [r0]
   129a8:	cmp	r3, #32
   129ac:	bne	129cc <__lxstat64@plt+0x1b70>
   129b0:	ldr	r3, [pc, #140]	; 12a44 <__lxstat64@plt+0x1be8>
   129b4:	ldr	r0, [r3]
   129b8:	bl	159a4 <__lxstat64@plt+0x4b48>
   129bc:	cmp	r0, #0
   129c0:	bne	12a14 <__lxstat64@plt+0x1bb8>
   129c4:	add	sp, sp, #8
   129c8:	pop	{r4, r5, r6, pc}
   129cc:	mov	r2, #5
   129d0:	ldr	r1, [pc, #112]	; 12a48 <__lxstat64@plt+0x1bec>
   129d4:	mov	r0, #0
   129d8:	bl	10c94 <dcgettext@plt>
   129dc:	ldr	r4, [r4]
   129e0:	cmp	r4, #0
   129e4:	mov	r5, r0
   129e8:	beq	12a20 <__lxstat64@plt+0x1bc4>
   129ec:	bl	10d84 <__errno_location@plt>
   129f0:	ldr	r6, [r0]
   129f4:	mov	r0, r4
   129f8:	bl	147e8 <__lxstat64@plt+0x398c>
   129fc:	mov	r1, r6
   12a00:	str	r5, [sp]
   12a04:	ldr	r2, [pc, #64]	; 12a4c <__lxstat64@plt+0x1bf0>
   12a08:	mov	r3, r0
   12a0c:	mov	r0, #0
   12a10:	bl	10d18 <error@plt>
   12a14:	ldr	r3, [pc, #52]	; 12a50 <__lxstat64@plt+0x1bf4>
   12a18:	ldr	r0, [r3]
   12a1c:	bl	10c58 <_exit@plt>
   12a20:	bl	10d84 <__errno_location@plt>
   12a24:	mov	r3, r5
   12a28:	ldr	r2, [pc, #36]	; 12a54 <__lxstat64@plt+0x1bf8>
   12a2c:	ldr	r1, [r0]
   12a30:	mov	r0, r4
   12a34:	bl	10d18 <error@plt>
   12a38:	b	12a14 <__lxstat64@plt+0x1bb8>
   12a3c:	andeq	r8, r2, ip, lsr r1
   12a40:	andeq	r8, r2, r0, asr r1
   12a44:	andeq	r8, r2, r8, lsr r1
   12a48:	andeq	r7, r1, r8, lsr r4
   12a4c:	andeq	r7, r1, r4, asr #8
   12a50:	andeq	r8, r2, r8, ror #1
   12a54:	andeq	r7, r1, r8, asr #8
   12a58:	push	{r4, r5, r6, r8, r9, lr}
   12a5c:	mov	r4, r0
   12a60:	mov	r5, r1
   12a64:	add	r6, r2, #20
   12a68:	mov	r8, #10
   12a6c:	mov	r9, #0
   12a70:	mov	r3, #0
   12a74:	strb	r3, [r2, #20]
   12a78:	mov	r0, r4
   12a7c:	mov	r1, r5
   12a80:	mov	r2, r8
   12a84:	mov	r3, r9
   12a88:	bl	1622c <__lxstat64@plt+0x53d0>
   12a8c:	mov	r0, r4
   12a90:	mov	r1, r5
   12a94:	mov	r3, r9
   12a98:	add	r2, r2, #48	; 0x30
   12a9c:	strb	r2, [r6, #-1]!
   12aa0:	mov	r2, r8
   12aa4:	bl	1622c <__lxstat64@plt+0x53d0>
   12aa8:	mov	r4, r0
   12aac:	mov	r5, r1
   12ab0:	orrs	r3, r4, r5
   12ab4:	bne	12a78 <__lxstat64@plt+0x1c1c>
   12ab8:	mov	r0, r6
   12abc:	pop	{r4, r5, r6, r8, r9, pc}
   12ac0:	push	{r4, r5, r6, lr}
   12ac4:	subs	r4, r0, #0
   12ac8:	beq	12b3c <__lxstat64@plt+0x1ce0>
   12acc:	mov	r1, #47	; 0x2f
   12ad0:	bl	10dfc <strrchr@plt>
   12ad4:	subs	r5, r0, #0
   12ad8:	beq	12b28 <__lxstat64@plt+0x1ccc>
   12adc:	add	r6, r5, #1
   12ae0:	sub	r3, r6, r4
   12ae4:	cmp	r3, #6
   12ae8:	ble	12b28 <__lxstat64@plt+0x1ccc>
   12aec:	mov	r2, #7
   12af0:	ldr	r1, [pc, #96]	; 12b58 <__lxstat64@plt+0x1cfc>
   12af4:	sub	r0, r5, #6
   12af8:	bl	10e44 <strncmp@plt>
   12afc:	cmp	r0, #0
   12b00:	bne	12b28 <__lxstat64@plt+0x1ccc>
   12b04:	mov	r2, #3
   12b08:	ldr	r1, [pc, #76]	; 12b5c <__lxstat64@plt+0x1d00>
   12b0c:	mov	r0, r6
   12b10:	bl	10e44 <strncmp@plt>
   12b14:	cmp	r0, #0
   12b18:	movne	r4, r6
   12b1c:	ldreq	r3, [pc, #60]	; 12b60 <__lxstat64@plt+0x1d04>
   12b20:	addeq	r4, r5, #4
   12b24:	streq	r4, [r3]
   12b28:	ldr	r2, [pc, #52]	; 12b64 <__lxstat64@plt+0x1d08>
   12b2c:	ldr	r3, [pc, #52]	; 12b68 <__lxstat64@plt+0x1d0c>
   12b30:	str	r4, [r2]
   12b34:	str	r4, [r3]
   12b38:	pop	{r4, r5, r6, pc}
   12b3c:	ldr	r3, [pc, #40]	; 12b6c <__lxstat64@plt+0x1d10>
   12b40:	mov	r2, #55	; 0x37
   12b44:	mov	r1, #1
   12b48:	ldr	r3, [r3]
   12b4c:	ldr	r0, [pc, #28]	; 12b70 <__lxstat64@plt+0x1d14>
   12b50:	bl	10cdc <fwrite@plt>
   12b54:	bl	10e50 <abort@plt>
   12b58:	andeq	r7, r1, r4, lsl #9
   12b5c:	andeq	r7, r1, ip, lsl #9
   12b60:	andeq	r8, r2, r0, lsr r1
   12b64:	andeq	r8, r2, r8, asr r1
   12b68:	andeq	r8, r2, r4, lsr r1
   12b6c:	andeq	r8, r2, r8, lsr r1
   12b70:	andeq	r7, r1, ip, asr #8
   12b74:	push	{r4, r5, r6, lr}
   12b78:	mov	r2, #48	; 0x30
   12b7c:	mov	r4, r1
   12b80:	mov	r1, #0
   12b84:	mov	r5, r0
   12b88:	bl	10da8 <memset@plt>
   12b8c:	cmp	r4, #10
   12b90:	beq	12ba0 <__lxstat64@plt+0x1d44>
   12b94:	str	r4, [r5]
   12b98:	mov	r0, r5
   12b9c:	pop	{r4, r5, r6, pc}
   12ba0:	bl	10e50 <abort@plt>
   12ba4:	push	{r4, r5, r6, lr}
   12ba8:	mov	r4, r0
   12bac:	mov	r5, r1
   12bb0:	bl	15c18 <__lxstat64@plt+0x4dbc>
   12bb4:	ldrb	r3, [r0]
   12bb8:	bic	r3, r3, #32
   12bbc:	cmp	r3, #85	; 0x55
   12bc0:	bne	12c20 <__lxstat64@plt+0x1dc4>
   12bc4:	ldrb	r3, [r0, #1]
   12bc8:	bic	r3, r3, #32
   12bcc:	cmp	r3, #84	; 0x54
   12bd0:	bne	12c5c <__lxstat64@plt+0x1e00>
   12bd4:	ldrb	r3, [r0, #2]
   12bd8:	bic	r3, r3, #32
   12bdc:	cmp	r3, #70	; 0x46
   12be0:	bne	12c5c <__lxstat64@plt+0x1e00>
   12be4:	ldrb	r3, [r0, #3]
   12be8:	cmp	r3, #45	; 0x2d
   12bec:	bne	12c5c <__lxstat64@plt+0x1e00>
   12bf0:	ldrb	r3, [r0, #4]
   12bf4:	cmp	r3, #56	; 0x38
   12bf8:	bne	12c5c <__lxstat64@plt+0x1e00>
   12bfc:	ldrb	r3, [r0, #5]
   12c00:	cmp	r3, #0
   12c04:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c08:	ldrb	r2, [r4]
   12c0c:	ldr	r3, [pc, #152]	; 12cac <__lxstat64@plt+0x1e50>
   12c10:	ldr	r0, [pc, #152]	; 12cb0 <__lxstat64@plt+0x1e54>
   12c14:	cmp	r2, #96	; 0x60
   12c18:	movne	r0, r3
   12c1c:	pop	{r4, r5, r6, pc}
   12c20:	cmp	r3, #71	; 0x47
   12c24:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c28:	ldrb	r3, [r0, #1]
   12c2c:	bic	r3, r3, #32
   12c30:	cmp	r3, #66	; 0x42
   12c34:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c38:	ldrb	r3, [r0, #2]
   12c3c:	cmp	r3, #49	; 0x31
   12c40:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c44:	ldrb	r3, [r0, #3]
   12c48:	cmp	r3, #56	; 0x38
   12c4c:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c50:	ldrb	r3, [r0, #4]
   12c54:	cmp	r3, #48	; 0x30
   12c58:	beq	12c70 <__lxstat64@plt+0x1e14>
   12c5c:	ldr	r3, [pc, #80]	; 12cb4 <__lxstat64@plt+0x1e58>
   12c60:	cmp	r5, #9
   12c64:	ldr	r0, [pc, #76]	; 12cb8 <__lxstat64@plt+0x1e5c>
   12c68:	movne	r0, r3
   12c6c:	pop	{r4, r5, r6, pc}
   12c70:	ldrb	r3, [r0, #5]
   12c74:	cmp	r3, #51	; 0x33
   12c78:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c7c:	ldrb	r3, [r0, #6]
   12c80:	cmp	r3, #48	; 0x30
   12c84:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c88:	ldrb	r3, [r0, #7]
   12c8c:	cmp	r3, #0
   12c90:	bne	12c5c <__lxstat64@plt+0x1e00>
   12c94:	ldrb	r2, [r4]
   12c98:	ldr	r3, [pc, #28]	; 12cbc <__lxstat64@plt+0x1e60>
   12c9c:	ldr	r0, [pc, #28]	; 12cc0 <__lxstat64@plt+0x1e64>
   12ca0:	cmp	r2, #96	; 0x60
   12ca4:	movne	r0, r3
   12ca8:	pop	{r4, r5, r6, pc}
   12cac:	andeq	r7, r1, r8, ror #9
   12cb0:	andeq	r7, r1, r4, ror #9
   12cb4:	strdeq	r7, [r1], -r8
   12cb8:	strdeq	r7, [r1], -r4
   12cbc:	strdeq	r7, [r1], -r0
   12cc0:	andeq	r7, r1, ip, ror #9
   12cc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cc8:	sub	sp, sp, #116	; 0x74
   12ccc:	mov	sl, r0
   12cd0:	str	r3, [sp, #24]
   12cd4:	mov	r3, #1
   12cd8:	mov	r8, r1
   12cdc:	str	r2, [sp, #56]	; 0x38
   12ce0:	str	r3, [sp, #36]	; 0x24
   12ce4:	bl	10cf4 <__ctype_get_mb_cur_max@plt>
   12ce8:	ldr	r3, [sp, #156]	; 0x9c
   12cec:	mov	fp, r8
   12cf0:	mov	r2, #0
   12cf4:	lsr	r3, r3, #1
   12cf8:	and	r3, r3, #1
   12cfc:	str	r2, [sp, #68]	; 0x44
   12d00:	str	r3, [sp, #28]
   12d04:	str	r2, [sp, #40]	; 0x28
   12d08:	str	r2, [sp, #44]	; 0x2c
   12d0c:	str	r2, [sp, #52]	; 0x34
   12d10:	str	r2, [sp, #64]	; 0x40
   12d14:	str	r2, [sp, #72]	; 0x48
   12d18:	str	sl, [sp, #32]
   12d1c:	str	r0, [sp, #76]	; 0x4c
   12d20:	ldr	r3, [sp, #152]	; 0x98
   12d24:	cmp	r3, #10
   12d28:	ldrls	pc, [pc, r3, lsl #2]
   12d2c:	b	13eec <__lxstat64@plt+0x3090>
   12d30:	andeq	r2, r1, ip, asr sp
   12d34:	andeq	r3, r1, r4, asr #32
   12d38:	andeq	r3, r1, r8, rrx
   12d3c:	andeq	r3, r1, ip, lsl #1
   12d40:			; <UNDEFINED> instruction: 0x000131b8
   12d44:	andeq	r3, r1, ip, lsl #3
   12d48:	andeq	r3, r1, r4, ror #2
   12d4c:	andeq	r3, r1, r0, lsr #1
   12d50:	strheq	r3, [r1], -r8
   12d54:	strheq	r3, [r1], -r8
   12d58:	strheq	r3, [r1], -r8
   12d5c:	mov	r3, #0
   12d60:	mov	r7, r3
   12d64:	str	r3, [sp, #28]
   12d68:	ldr	r3, [sp, #44]	; 0x2c
   12d6c:	mov	sl, #0
   12d70:	eor	r3, r3, #1
   12d74:	str	r3, [sp, #60]	; 0x3c
   12d78:	ldr	r3, [sp, #24]
   12d7c:	cmn	r3, #1
   12d80:	beq	132e4 <__lxstat64@plt+0x2488>
   12d84:	ldr	r3, [sp, #24]
   12d88:	subs	r5, r3, sl
   12d8c:	movne	r5, #1
   12d90:	cmp	r5, #0
   12d94:	beq	132fc <__lxstat64@plt+0x24a0>
   12d98:	ldr	r3, [sp, #152]	; 0x98
   12d9c:	ldr	r8, [sp, #44]	; 0x2c
   12da0:	cmp	r3, #2
   12da4:	moveq	r8, #0
   12da8:	andne	r8, r8, #1
   12dac:	ldr	r3, [sp, #52]	; 0x34
   12db0:	adds	r9, r3, #0
   12db4:	movne	r9, #1
   12db8:	ands	r6, r9, r8
   12dbc:	beq	13764 <__lxstat64@plt+0x2908>
   12dc0:	ldr	r2, [sp, #52]	; 0x34
   12dc4:	ldr	r1, [sp, #24]
   12dc8:	cmp	r2, #1
   12dcc:	mov	r3, r2
   12dd0:	movls	r3, #0
   12dd4:	movhi	r3, #1
   12dd8:	cmn	r1, #1
   12ddc:	movne	r3, #0
   12de0:	cmp	r3, #0
   12de4:	add	r4, sl, r2
   12de8:	beq	12df8 <__lxstat64@plt+0x1f9c>
   12dec:	ldr	r0, [sp, #56]	; 0x38
   12df0:	bl	10d78 <strlen@plt>
   12df4:	str	r0, [sp, #24]
   12df8:	ldr	r3, [sp, #24]
   12dfc:	cmp	r3, r4
   12e00:	ldr	r3, [sp, #56]	; 0x38
   12e04:	add	r3, r3, sl
   12e08:	str	r3, [sp, #48]	; 0x30
   12e0c:	bcc	13770 <__lxstat64@plt+0x2914>
   12e10:	mov	r0, r3
   12e14:	ldr	r2, [sp, #52]	; 0x34
   12e18:	ldr	r1, [sp, #64]	; 0x40
   12e1c:	bl	10c7c <memcmp@plt>
   12e20:	cmp	r0, #0
   12e24:	bne	13770 <__lxstat64@plt+0x2914>
   12e28:	ldr	r3, [sp, #28]
   12e2c:	cmp	r3, #0
   12e30:	bne	13fec <__lxstat64@plt+0x3190>
   12e34:	ldr	r3, [sp, #48]	; 0x30
   12e38:	ldrb	r4, [r3]
   12e3c:	cmp	r4, #126	; 0x7e
   12e40:	ldrls	pc, [pc, r4, lsl #2]
   12e44:	b	13704 <__lxstat64@plt+0x28a8>
   12e48:	andeq	r3, r1, r8, lsr #10
   12e4c:	andeq	r3, r1, r4, lsl #14
   12e50:	andeq	r3, r1, r4, lsl #14
   12e54:	andeq	r3, r1, r4, lsl #14
   12e58:	andeq	r3, r1, r4, lsl #14
   12e5c:	andeq	r3, r1, r4, lsl #14
   12e60:	andeq	r3, r1, r4, lsl #14
   12e64:	andeq	r3, r1, ip, lsl #10
   12e68:	strdeq	r3, [r1], -r0
   12e6c:	andeq	r3, r1, ip, ror #13
   12e70:	andeq	r3, r1, r0, asr r4
   12e74:	andeq	r3, r1, r4, lsr r4
   12e78:	andeq	r3, r1, r8, asr #13
   12e7c:	andeq	r3, r1, r4, lsr #13
   12e80:	andeq	r3, r1, r4, lsl #14
   12e84:	andeq	r3, r1, r4, lsl #14
   12e88:	andeq	r3, r1, r4, lsl #14
   12e8c:	andeq	r3, r1, r4, lsl #14
   12e90:	andeq	r3, r1, r4, lsl #14
   12e94:	andeq	r3, r1, r4, lsl #14
   12e98:	andeq	r3, r1, r4, lsl #14
   12e9c:	andeq	r3, r1, r4, lsl #14
   12ea0:	andeq	r3, r1, r4, lsl #14
   12ea4:	andeq	r3, r1, r4, lsl #14
   12ea8:	andeq	r3, r1, r4, lsl #14
   12eac:	andeq	r3, r1, r4, lsl #14
   12eb0:	andeq	r3, r1, r4, lsl #14
   12eb4:	andeq	r3, r1, r4, lsl #14
   12eb8:	andeq	r3, r1, r4, lsl #14
   12ebc:	andeq	r3, r1, r4, lsl #14
   12ec0:	andeq	r3, r1, r4, lsl #14
   12ec4:	andeq	r3, r1, r4, lsl #14
   12ec8:	andeq	r3, r1, r4, ror #13
   12ecc:	andeq	r3, r1, r8, lsl r6
   12ed0:	andeq	r3, r1, r8, lsl r6
   12ed4:	andeq	r3, r1, r8, lsr #4
   12ed8:	andeq	r3, r1, r8, lsl r6
   12edc:			; <UNDEFINED> instruction: 0x000136b0
   12ee0:	andeq	r3, r1, r8, lsl r6
   12ee4:	andeq	r3, r1, r4, lsl #13
   12ee8:	andeq	r3, r1, r8, lsl r6
   12eec:	andeq	r3, r1, r8, lsl r6
   12ef0:	andeq	r3, r1, r8, lsl r6
   12ef4:			; <UNDEFINED> instruction: 0x000136b0
   12ef8:			; <UNDEFINED> instruction: 0x000136b0
   12efc:			; <UNDEFINED> instruction: 0x000136b0
   12f00:			; <UNDEFINED> instruction: 0x000136b0
   12f04:			; <UNDEFINED> instruction: 0x000136b0
   12f08:			; <UNDEFINED> instruction: 0x000136b0
   12f0c:			; <UNDEFINED> instruction: 0x000136b0
   12f10:			; <UNDEFINED> instruction: 0x000136b0
   12f14:			; <UNDEFINED> instruction: 0x000136b0
   12f18:			; <UNDEFINED> instruction: 0x000136b0
   12f1c:			; <UNDEFINED> instruction: 0x000136b0
   12f20:			; <UNDEFINED> instruction: 0x000136b0
   12f24:			; <UNDEFINED> instruction: 0x000136b0
   12f28:			; <UNDEFINED> instruction: 0x000136b0
   12f2c:			; <UNDEFINED> instruction: 0x000136b0
   12f30:			; <UNDEFINED> instruction: 0x000136b0
   12f34:	andeq	r3, r1, r8, lsl r6
   12f38:	andeq	r3, r1, r8, lsl r6
   12f3c:	andeq	r3, r1, r8, lsl r6
   12f40:	andeq	r3, r1, r8, lsl r6
   12f44:	andeq	r3, r1, r4, asr r6
   12f48:	andeq	r3, r1, r4, lsl #14
   12f4c:			; <UNDEFINED> instruction: 0x000136b0
   12f50:			; <UNDEFINED> instruction: 0x000136b0
   12f54:			; <UNDEFINED> instruction: 0x000136b0
   12f58:			; <UNDEFINED> instruction: 0x000136b0
   12f5c:			; <UNDEFINED> instruction: 0x000136b0
   12f60:			; <UNDEFINED> instruction: 0x000136b0
   12f64:			; <UNDEFINED> instruction: 0x000136b0
   12f68:			; <UNDEFINED> instruction: 0x000136b0
   12f6c:			; <UNDEFINED> instruction: 0x000136b0
   12f70:			; <UNDEFINED> instruction: 0x000136b0
   12f74:			; <UNDEFINED> instruction: 0x000136b0
   12f78:			; <UNDEFINED> instruction: 0x000136b0
   12f7c:			; <UNDEFINED> instruction: 0x000136b0
   12f80:			; <UNDEFINED> instruction: 0x000136b0
   12f84:			; <UNDEFINED> instruction: 0x000136b0
   12f88:			; <UNDEFINED> instruction: 0x000136b0
   12f8c:			; <UNDEFINED> instruction: 0x000136b0
   12f90:			; <UNDEFINED> instruction: 0x000136b0
   12f94:			; <UNDEFINED> instruction: 0x000136b0
   12f98:			; <UNDEFINED> instruction: 0x000136b0
   12f9c:			; <UNDEFINED> instruction: 0x000136b0
   12fa0:			; <UNDEFINED> instruction: 0x000136b0
   12fa4:			; <UNDEFINED> instruction: 0x000136b0
   12fa8:			; <UNDEFINED> instruction: 0x000136b0
   12fac:			; <UNDEFINED> instruction: 0x000136b0
   12fb0:			; <UNDEFINED> instruction: 0x000136b0
   12fb4:	andeq	r3, r1, r8, lsl r6
   12fb8:	andeq	r3, r1, r4, ror r3
   12fbc:			; <UNDEFINED> instruction: 0x000136b0
   12fc0:	andeq	r3, r1, r8, lsl r6
   12fc4:			; <UNDEFINED> instruction: 0x000136b0
   12fc8:	andeq	r3, r1, r8, lsl r6
   12fcc:			; <UNDEFINED> instruction: 0x000136b0
   12fd0:			; <UNDEFINED> instruction: 0x000136b0
   12fd4:			; <UNDEFINED> instruction: 0x000136b0
   12fd8:			; <UNDEFINED> instruction: 0x000136b0
   12fdc:			; <UNDEFINED> instruction: 0x000136b0
   12fe0:			; <UNDEFINED> instruction: 0x000136b0
   12fe4:			; <UNDEFINED> instruction: 0x000136b0
   12fe8:			; <UNDEFINED> instruction: 0x000136b0
   12fec:			; <UNDEFINED> instruction: 0x000136b0
   12ff0:			; <UNDEFINED> instruction: 0x000136b0
   12ff4:			; <UNDEFINED> instruction: 0x000136b0
   12ff8:			; <UNDEFINED> instruction: 0x000136b0
   12ffc:			; <UNDEFINED> instruction: 0x000136b0
   13000:			; <UNDEFINED> instruction: 0x000136b0
   13004:			; <UNDEFINED> instruction: 0x000136b0
   13008:			; <UNDEFINED> instruction: 0x000136b0
   1300c:			; <UNDEFINED> instruction: 0x000136b0
   13010:			; <UNDEFINED> instruction: 0x000136b0
   13014:			; <UNDEFINED> instruction: 0x000136b0
   13018:			; <UNDEFINED> instruction: 0x000136b0
   1301c:			; <UNDEFINED> instruction: 0x000136b0
   13020:			; <UNDEFINED> instruction: 0x000136b0
   13024:			; <UNDEFINED> instruction: 0x000136b0
   13028:			; <UNDEFINED> instruction: 0x000136b0
   1302c:			; <UNDEFINED> instruction: 0x000136b0
   13030:			; <UNDEFINED> instruction: 0x000136b0
   13034:	andeq	r3, r1, r8, lsl #4
   13038:	andeq	r3, r1, r8, lsl r6
   1303c:	andeq	r3, r1, r8, lsl #4
   13040:	andeq	r3, r1, r8, lsr #4
   13044:	mov	r3, #1
   13048:	str	r3, [sp, #28]
   1304c:	str	r3, [sp, #52]	; 0x34
   13050:	ldr	r3, [pc, #4000]	; 13ff8 <__lxstat64@plt+0x319c>
   13054:	mov	r7, #0
   13058:	str	r3, [sp, #64]	; 0x40
   1305c:	mov	r3, #2
   13060:	str	r3, [sp, #152]	; 0x98
   13064:	b	12d68 <__lxstat64@plt+0x1f0c>
   13068:	ldr	r3, [sp, #28]
   1306c:	cmp	r3, #0
   13070:	beq	131cc <__lxstat64@plt+0x2370>
   13074:	mov	r3, #1
   13078:	str	r3, [sp, #52]	; 0x34
   1307c:	ldr	r3, [pc, #3956]	; 13ff8 <__lxstat64@plt+0x319c>
   13080:	mov	r7, #0
   13084:	str	r3, [sp, #64]	; 0x40
   13088:	b	12d68 <__lxstat64@plt+0x1f0c>
   1308c:	mov	r3, #1
   13090:	str	r3, [sp, #44]	; 0x2c
   13094:	str	r3, [sp, #52]	; 0x34
   13098:	str	r3, [sp, #28]
   1309c:	b	13050 <__lxstat64@plt+0x21f4>
   130a0:	mov	r3, #0
   130a4:	str	r3, [sp, #28]
   130a8:	mov	r3, #1
   130ac:	str	r3, [sp, #44]	; 0x2c
   130b0:	mov	r7, #0
   130b4:	b	12d68 <__lxstat64@plt+0x1f0c>
   130b8:	ldr	r3, [sp, #152]	; 0x98
   130bc:	cmp	r3, #10
   130c0:	beq	13104 <__lxstat64@plt+0x22a8>
   130c4:	mov	r2, #5
   130c8:	ldr	r1, [pc, #3884]	; 13ffc <__lxstat64@plt+0x31a0>
   130cc:	mov	r0, #0
   130d0:	bl	10c94 <dcgettext@plt>
   130d4:	ldr	r2, [pc, #3872]	; 13ffc <__lxstat64@plt+0x31a0>
   130d8:	cmp	r0, r2
   130dc:	str	r0, [sp, #164]	; 0xa4
   130e0:	beq	140e8 <__lxstat64@plt+0x328c>
   130e4:	mov	r2, #5
   130e8:	ldr	r1, [pc, #3848]	; 13ff8 <__lxstat64@plt+0x319c>
   130ec:	mov	r0, #0
   130f0:	bl	10c94 <dcgettext@plt>
   130f4:	ldr	r2, [pc, #3836]	; 13ff8 <__lxstat64@plt+0x319c>
   130f8:	cmp	r0, r2
   130fc:	str	r0, [sp, #168]	; 0xa8
   13100:	beq	140d8 <__lxstat64@plt+0x327c>
   13104:	ldr	r7, [sp, #28]
   13108:	cmp	r7, #0
   1310c:	movne	r7, #0
   13110:	bne	13144 <__lxstat64@plt+0x22e8>
   13114:	ldr	r3, [sp, #164]	; 0xa4
   13118:	ldrb	r3, [r3]
   1311c:	cmp	r3, #0
   13120:	beq	140f8 <__lxstat64@plt+0x329c>
   13124:	ldr	r2, [sp, #164]	; 0xa4
   13128:	ldr	r1, [sp, #32]
   1312c:	cmp	fp, r7
   13130:	strbhi	r3, [r1, r7]
   13134:	ldrb	r3, [r2, #1]!
   13138:	add	r7, r7, #1
   1313c:	cmp	r3, #0
   13140:	bne	1312c <__lxstat64@plt+0x22d0>
   13144:	ldr	r0, [sp, #168]	; 0xa8
   13148:	bl	10d78 <strlen@plt>
   1314c:	ldr	r3, [sp, #168]	; 0xa8
   13150:	str	r3, [sp, #64]	; 0x40
   13154:	mov	r3, #1
   13158:	str	r3, [sp, #44]	; 0x2c
   1315c:	str	r0, [sp, #52]	; 0x34
   13160:	b	12d68 <__lxstat64@plt+0x1f0c>
   13164:	mov	r3, #1
   13168:	str	r3, [sp, #44]	; 0x2c
   1316c:	str	r3, [sp, #52]	; 0x34
   13170:	str	r3, [sp, #28]
   13174:	ldr	r3, [pc, #3716]	; 14000 <__lxstat64@plt+0x31a4>
   13178:	mov	r7, #0
   1317c:	str	r3, [sp, #64]	; 0x40
   13180:	mov	r3, #5
   13184:	str	r3, [sp, #152]	; 0x98
   13188:	b	12d68 <__lxstat64@plt+0x1f0c>
   1318c:	ldr	r3, [sp, #28]
   13190:	cmp	r3, #0
   13194:	beq	13e94 <__lxstat64@plt+0x3038>
   13198:	ldr	r3, [sp, #28]
   1319c:	mov	r7, #0
   131a0:	str	r3, [sp, #44]	; 0x2c
   131a4:	mov	r3, #1
   131a8:	str	r3, [sp, #52]	; 0x34
   131ac:	ldr	r3, [pc, #3660]	; 14000 <__lxstat64@plt+0x31a4>
   131b0:	str	r3, [sp, #64]	; 0x40
   131b4:	b	12d68 <__lxstat64@plt+0x1f0c>
   131b8:	ldr	r3, [sp, #28]
   131bc:	cmp	r3, #0
   131c0:	mov	r3, #1
   131c4:	streq	r3, [sp, #44]	; 0x2c
   131c8:	bne	1304c <__lxstat64@plt+0x21f0>
   131cc:	cmp	fp, #0
   131d0:	beq	13ec4 <__lxstat64@plt+0x3068>
   131d4:	ldr	r3, [sp, #32]
   131d8:	mov	r2, #39	; 0x27
   131dc:	mov	r7, #1
   131e0:	strb	r2, [r3]
   131e4:	mov	r3, #0
   131e8:	str	r3, [sp, #28]
   131ec:	mov	r3, #1
   131f0:	str	r3, [sp, #52]	; 0x34
   131f4:	ldr	r3, [pc, #3580]	; 13ff8 <__lxstat64@plt+0x319c>
   131f8:	str	r3, [sp, #64]	; 0x40
   131fc:	mov	r3, #2
   13200:	str	r3, [sp, #152]	; 0x98
   13204:	b	12d68 <__lxstat64@plt+0x1f0c>
   13208:	ldr	r3, [sp, #24]
   1320c:	cmn	r3, #1
   13210:	beq	13e28 <__lxstat64@plt+0x2fcc>
   13214:	ldr	r3, [sp, #24]
   13218:	subs	r3, r3, #1
   1321c:	movne	r3, #1
   13220:	cmp	r3, #0
   13224:	bne	13230 <__lxstat64@plt+0x23d4>
   13228:	cmp	sl, #0
   1322c:	beq	1361c <__lxstat64@plt+0x27c0>
   13230:	ldr	r3, [sp, #152]	; 0x98
   13234:	mov	r5, #0
   13238:	sub	r2, r3, #2
   1323c:	mov	r8, r5
   13240:	clz	r2, r2
   13244:	lsr	r2, r2, #5
   13248:	ldr	r3, [sp, #60]	; 0x3c
   1324c:	ldr	r1, [sp, #28]
   13250:	orr	r3, r2, r3
   13254:	eor	r3, r3, #1
   13258:	orr	r3, r1, r3
   1325c:	tst	r3, #255	; 0xff
   13260:	bne	1398c <__lxstat64@plt+0x2b30>
   13264:	cmp	r6, #0
   13268:	bne	133b8 <__lxstat64@plt+0x255c>
   1326c:	ldr	r3, [sp, #40]	; 0x28
   13270:	eor	r8, r8, #1
   13274:	and	r8, r8, r3
   13278:	add	sl, sl, #1
   1327c:	uxtb	r6, r8
   13280:	cmp	r6, #0
   13284:	beq	132b8 <__lxstat64@plt+0x245c>
   13288:	cmp	fp, r7
   1328c:	movhi	r2, #39	; 0x27
   13290:	ldrhi	r3, [sp, #32]
   13294:	strbhi	r2, [r3, r7]
   13298:	add	r3, r7, #1
   1329c:	cmp	fp, r3
   132a0:	movhi	r1, #39	; 0x27
   132a4:	ldrhi	r2, [sp, #32]
   132a8:	add	r7, r7, #2
   132ac:	strbhi	r1, [r2, r3]
   132b0:	mov	r3, #0
   132b4:	str	r3, [sp, #40]	; 0x28
   132b8:	cmp	r7, fp
   132bc:	ldrcc	r3, [sp, #32]
   132c0:	strbcc	r4, [r3, r7]
   132c4:	ldr	r3, [sp, #36]	; 0x24
   132c8:	cmp	r5, #0
   132cc:	moveq	r3, #0
   132d0:	str	r3, [sp, #36]	; 0x24
   132d4:	ldr	r3, [sp, #24]
   132d8:	add	r7, r7, #1
   132dc:	cmn	r3, #1
   132e0:	bne	12d84 <__lxstat64@plt+0x1f28>
   132e4:	ldr	r3, [sp, #56]	; 0x38
   132e8:	ldrb	r5, [r3, sl]
   132ec:	adds	r5, r5, #0
   132f0:	movne	r5, #1
   132f4:	cmp	r5, #0
   132f8:	bne	12d98 <__lxstat64@plt+0x1f3c>
   132fc:	ldr	r3, [sp, #152]	; 0x98
   13300:	ldr	r1, [sp, #28]
   13304:	sub	r3, r3, #2
   13308:	clz	r3, r3
   1330c:	lsr	r3, r3, #5
   13310:	and	r9, r1, r3
   13314:	cmp	r7, #0
   13318:	movne	r2, #0
   1331c:	andeq	r2, r9, #1
   13320:	cmp	r2, #0
   13324:	bne	13d00 <__lxstat64@plt+0x2ea4>
   13328:	eor	r2, r1, #1
   1332c:	ands	r3, r3, r2
   13330:	beq	141bc <__lxstat64@plt+0x3360>
   13334:	ldr	r2, [sp, #68]	; 0x44
   13338:	cmp	r2, #0
   1333c:	beq	141a8 <__lxstat64@plt+0x334c>
   13340:	ldr	r3, [sp, #36]	; 0x24
   13344:	cmp	r3, #0
   13348:	bne	14160 <__lxstat64@plt+0x3304>
   1334c:	ldr	r2, [sp, #72]	; 0x48
   13350:	clz	r3, fp
   13354:	cmp	r2, #0
   13358:	lsr	r3, r3, #5
   1335c:	moveq	r3, #0
   13360:	cmp	r3, #0
   13364:	beq	14100 <__lxstat64@plt+0x32a4>
   13368:	str	r3, [sp, #68]	; 0x44
   1336c:	ldr	fp, [sp, #72]	; 0x48
   13370:	b	12d20 <__lxstat64@plt+0x1ec4>
   13374:	ldr	r3, [sp, #152]	; 0x98
   13378:	cmp	r3, #2
   1337c:	beq	139d0 <__lxstat64@plt+0x2b74>
   13380:	ldr	r3, [sp, #44]	; 0x2c
   13384:	ldr	r2, [sp, #28]
   13388:	and	r2, r3, r2
   1338c:	ands	r2, r9, r2
   13390:	bne	139dc <__lxstat64@plt+0x2b80>
   13394:	mov	r4, #92	; 0x5c
   13398:	mov	r3, r4
   1339c:	ldr	r1, [sp, #44]	; 0x2c
   133a0:	cmp	r1, #0
   133a4:	moveq	r5, #0
   133a8:	moveq	r8, r1
   133ac:	beq	13248 <__lxstat64@plt+0x23ec>
   133b0:	mov	r4, r3
   133b4:	mov	r5, #0
   133b8:	ldr	r3, [sp, #28]
   133bc:	cmp	r3, #0
   133c0:	bne	139c4 <__lxstat64@plt+0x2b68>
   133c4:	ldr	r3, [sp, #40]	; 0x28
   133c8:	eor	r9, r3, #1
   133cc:	and	r9, r9, r2
   133d0:	ands	r9, r9, #255	; 0xff
   133d4:	beq	13418 <__lxstat64@plt+0x25bc>
   133d8:	cmp	fp, r7
   133dc:	movhi	r2, #39	; 0x27
   133e0:	ldrhi	r3, [sp, #32]
   133e4:	str	r9, [sp, #40]	; 0x28
   133e8:	strbhi	r2, [r3, r7]
   133ec:	add	r3, r7, #1
   133f0:	cmp	fp, r3
   133f4:	movhi	r1, #36	; 0x24
   133f8:	ldrhi	r2, [sp, #32]
   133fc:	strbhi	r1, [r2, r3]
   13400:	add	r3, r7, #2
   13404:	cmp	fp, r3
   13408:	add	r7, r7, #3
   1340c:	ldrhi	r2, [sp, #32]
   13410:	movhi	r1, #39	; 0x27
   13414:	strbhi	r1, [r2, r3]
   13418:	cmp	fp, r7
   1341c:	movhi	r2, #92	; 0x5c
   13420:	ldrhi	r3, [sp, #32]
   13424:	add	sl, sl, #1
   13428:	strbhi	r2, [r3, r7]
   1342c:	add	r7, r7, #1
   13430:	b	132b8 <__lxstat64@plt+0x245c>
   13434:	ldr	r3, [sp, #152]	; 0x98
   13438:	mov	r4, #11
   1343c:	sub	r2, r3, #2
   13440:	mov	r3, #118	; 0x76
   13444:	clz	r2, r2
   13448:	lsr	r2, r2, #5
   1344c:	b	1339c <__lxstat64@plt+0x2540>
   13450:	mov	r4, #10
   13454:	mov	r3, #110	; 0x6e
   13458:	ldr	r2, [sp, #152]	; 0x98
   1345c:	ldr	r1, [sp, #28]
   13460:	sub	r2, r2, #2
   13464:	clz	r2, r2
   13468:	lsr	r2, r2, #5
   1346c:	ands	r1, r1, r2
   13470:	beq	1339c <__lxstat64@plt+0x2540>
   13474:	ldr	sl, [sp, #32]
   13478:	mov	r8, fp
   1347c:	mov	r2, r1
   13480:	mov	r3, #2
   13484:	str	r3, [sp, #152]	; 0x98
   13488:	ldr	r9, [sp, #44]	; 0x2c
   1348c:	ldr	r3, [sp, #152]	; 0x98
   13490:	and	r9, r9, r2
   13494:	tst	r9, #255	; 0xff
   13498:	movne	r3, #4
   1349c:	str	r3, [sp, #152]	; 0x98
   134a0:	ldr	r3, [sp, #156]	; 0x9c
   134a4:	mov	ip, #0
   134a8:	bic	r3, r3, #2
   134ac:	str	r3, [sp, #4]
   134b0:	ldr	r3, [sp, #168]	; 0xa8
   134b4:	ldr	r2, [sp, #56]	; 0x38
   134b8:	str	r3, [sp, #16]
   134bc:	ldr	r3, [sp, #164]	; 0xa4
   134c0:	mov	r1, r8
   134c4:	str	r3, [sp, #12]
   134c8:	ldr	r3, [sp, #152]	; 0x98
   134cc:	mov	r0, sl
   134d0:	str	r3, [sp]
   134d4:	str	ip, [sp, #8]
   134d8:	ldr	r3, [sp, #24]
   134dc:	bl	12cc4 <__lxstat64@plt+0x1e68>
   134e0:	mov	fp, r0
   134e4:	mov	r0, fp
   134e8:	add	sp, sp, #116	; 0x74
   134ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134f0:	ldr	r3, [sp, #152]	; 0x98
   134f4:	mov	r4, #8
   134f8:	sub	r2, r3, #2
   134fc:	mov	r3, #98	; 0x62
   13500:	clz	r2, r2
   13504:	lsr	r2, r2, #5
   13508:	b	1339c <__lxstat64@plt+0x2540>
   1350c:	ldr	r3, [sp, #152]	; 0x98
   13510:	mov	r4, #7
   13514:	sub	r2, r3, #2
   13518:	mov	r3, #97	; 0x61
   1351c:	clz	r2, r2
   13520:	lsr	r2, r2, #5
   13524:	b	1339c <__lxstat64@plt+0x2540>
   13528:	ldr	r3, [sp, #44]	; 0x2c
   1352c:	cmp	r3, #0
   13530:	beq	13d14 <__lxstat64@plt+0x2eb8>
   13534:	ldr	r3, [sp, #28]
   13538:	cmp	r3, #0
   1353c:	bne	13fec <__lxstat64@plt+0x3190>
   13540:	ldr	r3, [sp, #152]	; 0x98
   13544:	sub	r2, r3, #2
   13548:	ldr	r3, [sp, #40]	; 0x28
   1354c:	clz	r2, r2
   13550:	eor	r3, r3, #1
   13554:	lsr	r2, r2, #5
   13558:	ands	r3, r2, r3
   1355c:	moveq	r1, r7
   13560:	beq	135a4 <__lxstat64@plt+0x2748>
   13564:	cmp	fp, r7
   13568:	movhi	r0, #39	; 0x27
   1356c:	ldrhi	r1, [sp, #32]
   13570:	str	r3, [sp, #40]	; 0x28
   13574:	strbhi	r0, [r1, r7]
   13578:	add	r1, r7, #1
   1357c:	cmp	fp, r1
   13580:	movhi	ip, #36	; 0x24
   13584:	ldrhi	r0, [sp, #32]
   13588:	strbhi	ip, [r0, r1]
   1358c:	add	r1, r7, #2
   13590:	cmp	fp, r1
   13594:	movhi	ip, #39	; 0x27
   13598:	ldrhi	r0, [sp, #32]
   1359c:	strbhi	ip, [r0, r1]
   135a0:	add	r1, r7, #3
   135a4:	cmp	fp, r1
   135a8:	movhi	r0, #92	; 0x5c
   135ac:	ldrhi	r3, [sp, #32]
   135b0:	add	r7, r1, #1
   135b4:	strbhi	r0, [r3, r1]
   135b8:	cmp	r8, #0
   135bc:	beq	13f00 <__lxstat64@plt+0x30a4>
   135c0:	ldr	r0, [sp, #24]
   135c4:	add	r3, sl, #1
   135c8:	cmp	r3, r0
   135cc:	bcs	13e3c <__lxstat64@plt+0x2fe0>
   135d0:	ldr	r0, [sp, #56]	; 0x38
   135d4:	ldrb	r3, [r0, r3]
   135d8:	sub	r3, r3, #48	; 0x30
   135dc:	cmp	r3, #9
   135e0:	bhi	13e3c <__lxstat64@plt+0x2fe0>
   135e4:	cmp	fp, r7
   135e8:	movhi	r3, #48	; 0x30
   135ec:	ldrhi	r0, [sp, #32]
   135f0:	ldr	r5, [sp, #28]
   135f4:	mov	r4, #48	; 0x30
   135f8:	strbhi	r3, [r0, r7]
   135fc:	add	r3, r1, #2
   13600:	cmp	fp, r3
   13604:	movhi	r0, #48	; 0x30
   13608:	ldrhi	ip, [sp, #32]
   1360c:	add	r7, r1, #3
   13610:	strbhi	r0, [ip, r3]
   13614:	b	13248 <__lxstat64@plt+0x23ec>
   13618:	mov	r5, #0
   1361c:	ldr	r3, [sp, #152]	; 0x98
   13620:	sub	r2, r3, #2
   13624:	ldr	r3, [sp, #28]
   13628:	clz	r2, r2
   1362c:	lsr	r2, r2, #5
   13630:	ands	r8, r3, r2
   13634:	beq	13248 <__lxstat64@plt+0x23ec>
   13638:	mov	r3, r8
   1363c:	mov	r2, r3
   13640:	mov	r3, #2
   13644:	ldr	sl, [sp, #32]
   13648:	mov	r8, fp
   1364c:	str	r3, [sp, #152]	; 0x98
   13650:	b	13488 <__lxstat64@plt+0x262c>
   13654:	ldr	r3, [sp, #152]	; 0x98
   13658:	cmp	r3, #2
   1365c:	beq	13d80 <__lxstat64@plt+0x2f24>
   13660:	cmp	r3, #5
   13664:	beq	13d40 <__lxstat64@plt+0x2ee4>
   13668:	mov	r5, #0
   1366c:	sub	r2, r3, #2
   13670:	mov	r8, r5
   13674:	clz	r2, r2
   13678:	mov	r4, #63	; 0x3f
   1367c:	lsr	r2, r2, #5
   13680:	b	13248 <__lxstat64@plt+0x23ec>
   13684:	ldr	r3, [sp, #152]	; 0x98
   13688:	cmp	r3, #2
   1368c:	beq	13da0 <__lxstat64@plt+0x2f44>
   13690:	mov	r2, #0
   13694:	str	r5, [sp, #68]	; 0x44
   13698:	mov	r8, r2
   1369c:	mov	r4, #39	; 0x27
   136a0:	b	13248 <__lxstat64@plt+0x23ec>
   136a4:	mov	r4, #13
   136a8:	mov	r3, #114	; 0x72
   136ac:	b	13458 <__lxstat64@plt+0x25fc>
   136b0:	ldr	r3, [sp, #152]	; 0x98
   136b4:	mov	r8, #0
   136b8:	sub	r2, r3, #2
   136bc:	clz	r2, r2
   136c0:	lsr	r2, r2, #5
   136c4:	b	13248 <__lxstat64@plt+0x23ec>
   136c8:	ldr	r3, [sp, #152]	; 0x98
   136cc:	mov	r4, #12
   136d0:	sub	r2, r3, #2
   136d4:	mov	r3, #102	; 0x66
   136d8:	clz	r2, r2
   136dc:	lsr	r2, r2, #5
   136e0:	b	1339c <__lxstat64@plt+0x2540>
   136e4:	mov	r5, r6
   136e8:	b	1361c <__lxstat64@plt+0x27c0>
   136ec:	ldr	r3, [sp, #152]	; 0x98
   136f0:	sub	r2, r3, #2
   136f4:	mov	r3, #116	; 0x74
   136f8:	clz	r2, r2
   136fc:	lsr	r2, r2, #5
   13700:	b	1339c <__lxstat64@plt+0x2540>
   13704:	ldr	r8, [sp, #76]	; 0x4c
   13708:	cmp	r8, #1
   1370c:	bne	13bbc <__lxstat64@plt+0x2d60>
   13710:	bl	10d60 <__ctype_b_loc@plt>
   13714:	sxth	r3, r4
   13718:	mov	ip, r8
   1371c:	lsl	r3, r3, #1
   13720:	ldr	r2, [r0]
   13724:	ldrh	r3, [r2, r3]
   13728:	and	r3, r3, #16384	; 0x4000
   1372c:	cmp	r3, #0
   13730:	movne	r5, #1
   13734:	moveq	r5, #0
   13738:	moveq	r3, #1
   1373c:	movne	r3, #0
   13740:	ldr	r2, [sp, #44]	; 0x2c
   13744:	and	r3, r3, r2
   13748:	ands	r8, r3, #255	; 0xff
   1374c:	bne	13a50 <__lxstat64@plt+0x2bf4>
   13750:	ldr	r3, [sp, #152]	; 0x98
   13754:	sub	r2, r3, #2
   13758:	clz	r2, r2
   1375c:	lsr	r2, r2, #5
   13760:	b	13248 <__lxstat64@plt+0x23ec>
   13764:	ldr	r3, [sp, #56]	; 0x38
   13768:	add	r3, r3, sl
   1376c:	str	r3, [sp, #48]	; 0x30
   13770:	ldr	r3, [sp, #48]	; 0x30
   13774:	mov	r6, #0
   13778:	ldrb	r4, [r3]
   1377c:	cmp	r4, #126	; 0x7e
   13780:	ldrls	pc, [pc, r4, lsl #2]
   13784:	b	13704 <__lxstat64@plt+0x28a8>
   13788:	andeq	r3, r1, r8, lsr #10
   1378c:	andeq	r3, r1, r4, lsl #14
   13790:	andeq	r3, r1, r4, lsl #14
   13794:	andeq	r3, r1, r4, lsl #14
   13798:	andeq	r3, r1, r4, lsl #14
   1379c:	andeq	r3, r1, r4, lsl #14
   137a0:	andeq	r3, r1, r4, lsl #14
   137a4:	andeq	r3, r1, ip, lsl #10
   137a8:	strdeq	r3, [r1], -r0
   137ac:	andeq	r3, r1, r4, lsl #19
   137b0:	andeq	r3, r1, r0, asr r4
   137b4:	andeq	r3, r1, r4, lsr r4
   137b8:	andeq	r3, r1, r8, asr #13
   137bc:	andeq	r3, r1, r4, lsr #13
   137c0:	andeq	r3, r1, r4, lsl #14
   137c4:	andeq	r3, r1, r4, lsl #14
   137c8:	andeq	r3, r1, r4, lsl #14
   137cc:	andeq	r3, r1, r4, lsl #14
   137d0:	andeq	r3, r1, r4, lsl #14
   137d4:	andeq	r3, r1, r4, lsl #14
   137d8:	andeq	r3, r1, r4, lsl #14
   137dc:	andeq	r3, r1, r4, lsl #14
   137e0:	andeq	r3, r1, r4, lsl #14
   137e4:	andeq	r3, r1, r4, lsl #14
   137e8:	andeq	r3, r1, r4, lsl #14
   137ec:	andeq	r3, r1, r4, lsl #14
   137f0:	andeq	r3, r1, r4, lsl #14
   137f4:	andeq	r3, r1, r4, lsl #14
   137f8:	andeq	r3, r1, r4, lsl #14
   137fc:	andeq	r3, r1, r4, lsl #14
   13800:	andeq	r3, r1, r4, lsl #14
   13804:	andeq	r3, r1, r4, lsl #14
   13808:	andeq	r3, r1, ip, lsl r6
   1380c:	andeq	r3, r1, r8, lsl r6
   13810:	andeq	r3, r1, r8, lsl r6
   13814:	andeq	r3, r1, r8, lsr #4
   13818:	andeq	r3, r1, r8, lsl r6
   1381c:			; <UNDEFINED> instruction: 0x000136b0
   13820:	andeq	r3, r1, r8, lsl r6
   13824:	andeq	r3, r1, r4, lsl #13
   13828:	andeq	r3, r1, r8, lsl r6
   1382c:	andeq	r3, r1, r8, lsl r6
   13830:	andeq	r3, r1, r8, lsl r6
   13834:			; <UNDEFINED> instruction: 0x000136b0
   13838:			; <UNDEFINED> instruction: 0x000136b0
   1383c:			; <UNDEFINED> instruction: 0x000136b0
   13840:			; <UNDEFINED> instruction: 0x000136b0
   13844:			; <UNDEFINED> instruction: 0x000136b0
   13848:			; <UNDEFINED> instruction: 0x000136b0
   1384c:			; <UNDEFINED> instruction: 0x000136b0
   13850:			; <UNDEFINED> instruction: 0x000136b0
   13854:			; <UNDEFINED> instruction: 0x000136b0
   13858:			; <UNDEFINED> instruction: 0x000136b0
   1385c:			; <UNDEFINED> instruction: 0x000136b0
   13860:			; <UNDEFINED> instruction: 0x000136b0
   13864:			; <UNDEFINED> instruction: 0x000136b0
   13868:			; <UNDEFINED> instruction: 0x000136b0
   1386c:			; <UNDEFINED> instruction: 0x000136b0
   13870:			; <UNDEFINED> instruction: 0x000136b0
   13874:	andeq	r3, r1, r8, lsl r6
   13878:	andeq	r3, r1, r8, lsl r6
   1387c:	andeq	r3, r1, r8, lsl r6
   13880:	andeq	r3, r1, r8, lsl r6
   13884:	andeq	r3, r1, r4, asr r6
   13888:	andeq	r3, r1, r4, lsl #14
   1388c:			; <UNDEFINED> instruction: 0x000136b0
   13890:			; <UNDEFINED> instruction: 0x000136b0
   13894:			; <UNDEFINED> instruction: 0x000136b0
   13898:			; <UNDEFINED> instruction: 0x000136b0
   1389c:			; <UNDEFINED> instruction: 0x000136b0
   138a0:			; <UNDEFINED> instruction: 0x000136b0
   138a4:			; <UNDEFINED> instruction: 0x000136b0
   138a8:			; <UNDEFINED> instruction: 0x000136b0
   138ac:			; <UNDEFINED> instruction: 0x000136b0
   138b0:			; <UNDEFINED> instruction: 0x000136b0
   138b4:			; <UNDEFINED> instruction: 0x000136b0
   138b8:			; <UNDEFINED> instruction: 0x000136b0
   138bc:			; <UNDEFINED> instruction: 0x000136b0
   138c0:			; <UNDEFINED> instruction: 0x000136b0
   138c4:			; <UNDEFINED> instruction: 0x000136b0
   138c8:			; <UNDEFINED> instruction: 0x000136b0
   138cc:			; <UNDEFINED> instruction: 0x000136b0
   138d0:			; <UNDEFINED> instruction: 0x000136b0
   138d4:			; <UNDEFINED> instruction: 0x000136b0
   138d8:			; <UNDEFINED> instruction: 0x000136b0
   138dc:			; <UNDEFINED> instruction: 0x000136b0
   138e0:			; <UNDEFINED> instruction: 0x000136b0
   138e4:			; <UNDEFINED> instruction: 0x000136b0
   138e8:			; <UNDEFINED> instruction: 0x000136b0
   138ec:			; <UNDEFINED> instruction: 0x000136b0
   138f0:			; <UNDEFINED> instruction: 0x000136b0
   138f4:	andeq	r3, r1, r8, lsl r6
   138f8:	andeq	r3, r1, r4, ror r3
   138fc:			; <UNDEFINED> instruction: 0x000136b0
   13900:	andeq	r3, r1, r8, lsl r6
   13904:			; <UNDEFINED> instruction: 0x000136b0
   13908:	andeq	r3, r1, r8, lsl r6
   1390c:			; <UNDEFINED> instruction: 0x000136b0
   13910:			; <UNDEFINED> instruction: 0x000136b0
   13914:			; <UNDEFINED> instruction: 0x000136b0
   13918:			; <UNDEFINED> instruction: 0x000136b0
   1391c:			; <UNDEFINED> instruction: 0x000136b0
   13920:			; <UNDEFINED> instruction: 0x000136b0
   13924:			; <UNDEFINED> instruction: 0x000136b0
   13928:			; <UNDEFINED> instruction: 0x000136b0
   1392c:			; <UNDEFINED> instruction: 0x000136b0
   13930:			; <UNDEFINED> instruction: 0x000136b0
   13934:			; <UNDEFINED> instruction: 0x000136b0
   13938:			; <UNDEFINED> instruction: 0x000136b0
   1393c:			; <UNDEFINED> instruction: 0x000136b0
   13940:			; <UNDEFINED> instruction: 0x000136b0
   13944:			; <UNDEFINED> instruction: 0x000136b0
   13948:			; <UNDEFINED> instruction: 0x000136b0
   1394c:			; <UNDEFINED> instruction: 0x000136b0
   13950:			; <UNDEFINED> instruction: 0x000136b0
   13954:			; <UNDEFINED> instruction: 0x000136b0
   13958:			; <UNDEFINED> instruction: 0x000136b0
   1395c:			; <UNDEFINED> instruction: 0x000136b0
   13960:			; <UNDEFINED> instruction: 0x000136b0
   13964:			; <UNDEFINED> instruction: 0x000136b0
   13968:			; <UNDEFINED> instruction: 0x000136b0
   1396c:			; <UNDEFINED> instruction: 0x000136b0
   13970:			; <UNDEFINED> instruction: 0x000136b0
   13974:	andeq	r3, r1, r8, lsl #4
   13978:	andeq	r3, r1, r8, lsl r6
   1397c:	andeq	r3, r1, r8, lsl #4
   13980:	andeq	r3, r1, r8, lsr #4
   13984:	mov	r3, #116	; 0x74
   13988:	b	13458 <__lxstat64@plt+0x25fc>
   1398c:	ldr	r3, [sp, #160]	; 0xa0
   13990:	cmp	r3, #0
   13994:	beq	13264 <__lxstat64@plt+0x2408>
   13998:	lsr	r3, r4, #5
   1399c:	ldr	r0, [sp, #160]	; 0xa0
   139a0:	uxtb	r3, r3
   139a4:	and	r1, r4, #31
   139a8:	ldr	r0, [r0, r3, lsl #2]
   139ac:	lsr	r3, r0, r1
   139b0:	tst	r3, #1
   139b4:	beq	13264 <__lxstat64@plt+0x2408>
   139b8:	ldr	r3, [sp, #28]
   139bc:	cmp	r3, #0
   139c0:	beq	133c4 <__lxstat64@plt+0x2568>
   139c4:	ldr	sl, [sp, #32]
   139c8:	mov	r8, fp
   139cc:	b	13488 <__lxstat64@plt+0x262c>
   139d0:	ldr	r3, [sp, #28]
   139d4:	cmp	r3, #0
   139d8:	bne	13f2c <__lxstat64@plt+0x30d0>
   139dc:	add	sl, sl, #1
   139e0:	ldr	r6, [sp, #40]	; 0x28
   139e4:	mov	r5, #0
   139e8:	mov	r4, #92	; 0x5c
   139ec:	b	13280 <__lxstat64@plt+0x2424>
   139f0:	cmp	r9, r8
   139f4:	bne	13c64 <__lxstat64@plt+0x2e08>
   139f8:	ldr	r0, [sp, #100]	; 0x64
   139fc:	bl	10cc4 <iswprint@plt>
   13a00:	add	r5, r5, r4
   13a04:	cmp	r0, #0
   13a08:	add	r0, sp, #104	; 0x68
   13a0c:	moveq	r6, #0
   13a10:	bl	10c70 <mbsinit@plt>
   13a14:	cmp	r0, #0
   13a18:	beq	13bf8 <__lxstat64@plt+0x2d9c>
   13a1c:	mov	r2, r6
   13a20:	mov	ip, r5
   13a24:	eor	r5, r2, #1
   13a28:	ldr	r4, [sp, #80]	; 0x50
   13a2c:	ldr	r6, [sp, #84]	; 0x54
   13a30:	ldr	r7, [sp, #88]	; 0x58
   13a34:	uxtb	r5, r5
   13a38:	cmp	ip, #1
   13a3c:	bls	13f3c <__lxstat64@plt+0x30e0>
   13a40:	ldr	r3, [sp, #44]	; 0x2c
   13a44:	and	r8, r3, r5
   13a48:	mov	r5, r2
   13a4c:	uxtb	r8, r8
   13a50:	add	r2, sl, ip
   13a54:	ldr	r0, [sp, #48]	; 0x30
   13a58:	mov	r1, #0
   13a5c:	str	r5, [sp, #48]	; 0x30
   13a60:	ldr	r9, [sp, #28]
   13a64:	ldr	ip, [sp, #40]	; 0x28
   13a68:	ldr	r3, [sp, #32]
   13a6c:	ldr	r5, [sp, #152]	; 0x98
   13a70:	b	13b2c <__lxstat64@plt+0x2cd0>
   13a74:	cmp	r9, #0
   13a78:	bne	13e50 <__lxstat64@plt+0x2ff4>
   13a7c:	eor	r1, ip, #1
   13a80:	cmp	r5, #2
   13a84:	movne	r1, #0
   13a88:	andeq	r1, r1, #1
   13a8c:	cmp	r1, #0
   13a90:	beq	13ac8 <__lxstat64@plt+0x2c6c>
   13a94:	cmp	fp, r7
   13a98:	movhi	ip, #39	; 0x27
   13a9c:	strbhi	ip, [r3, r7]
   13aa0:	add	ip, r7, #1
   13aa4:	cmp	fp, ip
   13aa8:	movhi	lr, #36	; 0x24
   13aac:	strbhi	lr, [r3, ip]
   13ab0:	add	ip, r7, #2
   13ab4:	cmp	fp, ip
   13ab8:	movhi	lr, #39	; 0x27
   13abc:	strbhi	lr, [r3, ip]
   13ac0:	add	r7, r7, #3
   13ac4:	mov	ip, r1
   13ac8:	cmp	fp, r7
   13acc:	movhi	r1, #92	; 0x5c
   13ad0:	strbhi	r1, [r3, r7]
   13ad4:	add	r1, r7, #1
   13ad8:	cmp	fp, r1
   13adc:	lsrhi	lr, r4, #6
   13ae0:	addhi	lr, lr, #48	; 0x30
   13ae4:	strbhi	lr, [r3, r1]
   13ae8:	add	lr, r7, #2
   13aec:	cmp	fp, lr
   13af0:	lsrhi	r1, r4, #3
   13af4:	andhi	r1, r1, #7
   13af8:	addhi	r1, r1, #48	; 0x30
   13afc:	add	sl, sl, #1
   13b00:	strbhi	r1, [r3, lr]
   13b04:	and	r4, r4, #7
   13b08:	cmp	r2, sl
   13b0c:	add	r4, r4, #48	; 0x30
   13b10:	add	r7, r7, #3
   13b14:	bls	13e74 <__lxstat64@plt+0x3018>
   13b18:	mov	r1, r8
   13b1c:	cmp	fp, r7
   13b20:	strbhi	r4, [r3, r7]
   13b24:	ldrb	r4, [r0, #1]!
   13b28:	add	r7, r7, #1
   13b2c:	cmp	r8, #0
   13b30:	bne	13a74 <__lxstat64@plt+0x2c18>
   13b34:	cmp	r6, #0
   13b38:	bne	13b88 <__lxstat64@plt+0x2d2c>
   13b3c:	eor	r6, r1, #1
   13b40:	and	r6, r6, ip
   13b44:	add	sl, sl, #1
   13b48:	cmp	r2, sl
   13b4c:	uxtb	r6, r6
   13b50:	bls	13bb0 <__lxstat64@plt+0x2d54>
   13b54:	cmp	r6, #0
   13b58:	beq	13b1c <__lxstat64@plt+0x2cc0>
   13b5c:	cmp	fp, r7
   13b60:	movhi	ip, #39	; 0x27
   13b64:	strbhi	ip, [r3, r7]
   13b68:	add	ip, r7, #1
   13b6c:	cmp	fp, ip
   13b70:	movhi	lr, #39	; 0x27
   13b74:	strbhi	lr, [r3, ip]
   13b78:	add	r7, r7, #2
   13b7c:	mov	r6, r8
   13b80:	mov	ip, r8
   13b84:	b	13b1c <__lxstat64@plt+0x2cc0>
   13b88:	cmp	fp, r7
   13b8c:	eor	r6, r1, #1
   13b90:	movhi	lr, #92	; 0x5c
   13b94:	and	r6, r6, ip
   13b98:	add	sl, sl, #1
   13b9c:	strbhi	lr, [r3, r7]
   13ba0:	cmp	r2, sl
   13ba4:	add	r7, r7, #1
   13ba8:	uxtb	r6, r6
   13bac:	bhi	13b54 <__lxstat64@plt+0x2cf8>
   13bb0:	str	ip, [sp, #40]	; 0x28
   13bb4:	ldr	r5, [sp, #48]	; 0x30
   13bb8:	b	13280 <__lxstat64@plt+0x2424>
   13bbc:	ldr	r3, [sp, #24]
   13bc0:	cmn	r3, #1
   13bc4:	mov	r3, #0
   13bc8:	str	r3, [sp, #104]	; 0x68
   13bcc:	str	r3, [sp, #108]	; 0x6c
   13bd0:	beq	13ef0 <__lxstat64@plt+0x3094>
   13bd4:	mov	r2, r5
   13bd8:	mov	r3, #0
   13bdc:	str	r7, [sp, #88]	; 0x58
   13be0:	ldr	r7, [sp, #152]	; 0x98
   13be4:	str	r5, [sp, #92]	; 0x5c
   13be8:	str	r6, [sp, #84]	; 0x54
   13bec:	mov	r5, r3
   13bf0:	mov	r6, r2
   13bf4:	str	r4, [sp, #80]	; 0x50
   13bf8:	ldr	r3, [sp, #56]	; 0x38
   13bfc:	add	r9, sl, r5
   13c00:	add	r8, r3, r9
   13c04:	ldr	r3, [sp, #24]
   13c08:	mov	r1, r8
   13c0c:	sub	r2, r3, r9
   13c10:	add	r0, sp, #100	; 0x64
   13c14:	add	r3, sp, #104	; 0x68
   13c18:	bl	15c4c <__lxstat64@plt+0x4df0>
   13c1c:	subs	r4, r0, #0
   13c20:	beq	13fc8 <__lxstat64@plt+0x316c>
   13c24:	cmn	r4, #1
   13c28:	beq	13fa8 <__lxstat64@plt+0x314c>
   13c2c:	cmn	r4, #2
   13c30:	beq	13f48 <__lxstat64@plt+0x30ec>
   13c34:	ldr	r2, [sp, #28]
   13c38:	cmp	r7, #2
   13c3c:	movne	r2, #0
   13c40:	andeq	r2, r2, #1
   13c44:	cmp	r2, #0
   13c48:	beq	139f8 <__lxstat64@plt+0x2b9c>
   13c4c:	cmp	r4, #1
   13c50:	beq	139f8 <__lxstat64@plt+0x2b9c>
   13c54:	sub	r3, r4, #1
   13c58:	add	r9, r3, r9
   13c5c:	ldr	r3, [sp, #56]	; 0x38
   13c60:	add	r9, r3, r9
   13c64:	ldrb	r3, [r8, #1]!
   13c68:	sub	r3, r3, #91	; 0x5b
   13c6c:	cmp	r3, #33	; 0x21
   13c70:	ldrls	pc, [pc, r3, lsl #2]
   13c74:	b	139f0 <__lxstat64@plt+0x2b94>
   13c78:	andeq	r3, r1, r0, lsl #26
   13c7c:	andeq	r3, r1, r0, lsl #26
   13c80:	strdeq	r3, [r1], -r0
   13c84:	andeq	r3, r1, r0, lsl #26
   13c88:	strdeq	r3, [r1], -r0
   13c8c:	andeq	r3, r1, r0, lsl #26
   13c90:	strdeq	r3, [r1], -r0
   13c94:	strdeq	r3, [r1], -r0
   13c98:	strdeq	r3, [r1], -r0
   13c9c:	strdeq	r3, [r1], -r0
   13ca0:	strdeq	r3, [r1], -r0
   13ca4:	strdeq	r3, [r1], -r0
   13ca8:	strdeq	r3, [r1], -r0
   13cac:	strdeq	r3, [r1], -r0
   13cb0:	strdeq	r3, [r1], -r0
   13cb4:	strdeq	r3, [r1], -r0
   13cb8:	strdeq	r3, [r1], -r0
   13cbc:	strdeq	r3, [r1], -r0
   13cc0:	strdeq	r3, [r1], -r0
   13cc4:	strdeq	r3, [r1], -r0
   13cc8:	strdeq	r3, [r1], -r0
   13ccc:	strdeq	r3, [r1], -r0
   13cd0:	strdeq	r3, [r1], -r0
   13cd4:	strdeq	r3, [r1], -r0
   13cd8:	strdeq	r3, [r1], -r0
   13cdc:	strdeq	r3, [r1], -r0
   13ce0:	strdeq	r3, [r1], -r0
   13ce4:	strdeq	r3, [r1], -r0
   13ce8:	strdeq	r3, [r1], -r0
   13cec:	strdeq	r3, [r1], -r0
   13cf0:	strdeq	r3, [r1], -r0
   13cf4:	strdeq	r3, [r1], -r0
   13cf8:	strdeq	r3, [r1], -r0
   13cfc:	andeq	r3, r1, r0, lsl #26
   13d00:	mov	r3, #2
   13d04:	ldr	sl, [sp, #32]
   13d08:	mov	r8, fp
   13d0c:	str	r3, [sp, #152]	; 0x98
   13d10:	b	13488 <__lxstat64@plt+0x262c>
   13d14:	ldr	r3, [sp, #156]	; 0x9c
   13d18:	tst	r3, #1
   13d1c:	bne	13e48 <__lxstat64@plt+0x2fec>
   13d20:	ldr	r3, [sp, #152]	; 0x98
   13d24:	ldr	r4, [sp, #44]	; 0x2c
   13d28:	sub	r2, r3, #2
   13d2c:	mov	r5, #0
   13d30:	clz	r2, r2
   13d34:	mov	r8, r4
   13d38:	lsr	r2, r2, #5
   13d3c:	b	13248 <__lxstat64@plt+0x23ec>
   13d40:	ldr	r3, [sp, #156]	; 0x9c
   13d44:	ands	r9, r3, #4
   13d48:	beq	13e80 <__lxstat64@plt+0x3024>
   13d4c:	ldr	r2, [sp, #24]
   13d50:	add	r3, sl, #2
   13d54:	cmp	r3, r2
   13d58:	bcs	13d6c <__lxstat64@plt+0x2f10>
   13d5c:	ldr	r2, [sp, #48]	; 0x30
   13d60:	ldrb	r4, [r2, #1]
   13d64:	cmp	r4, #63	; 0x3f
   13d68:	beq	14008 <__lxstat64@plt+0x31ac>
   13d6c:	mov	r2, #0
   13d70:	mov	r8, r2
   13d74:	mov	r5, r2
   13d78:	mov	r4, #63	; 0x3f
   13d7c:	b	13248 <__lxstat64@plt+0x23ec>
   13d80:	ldr	r3, [sp, #28]
   13d84:	cmp	r3, #0
   13d88:	bne	140ac <__lxstat64@plt+0x3250>
   13d8c:	mov	r2, r5
   13d90:	mov	r8, r3
   13d94:	mov	r5, #0
   13d98:	mov	r4, #63	; 0x3f
   13d9c:	b	13248 <__lxstat64@plt+0x23ec>
   13da0:	ldr	r3, [sp, #28]
   13da4:	cmp	r3, #0
   13da8:	bne	140ac <__lxstat64@plt+0x3250>
   13dac:	ldr	r2, [sp, #72]	; 0x48
   13db0:	adds	r3, fp, #0
   13db4:	movne	r3, #1
   13db8:	cmp	r2, #0
   13dbc:	movne	r3, #0
   13dc0:	cmp	r3, #0
   13dc4:	strne	fp, [sp, #72]	; 0x48
   13dc8:	movne	fp, #0
   13dcc:	bne	13e08 <__lxstat64@plt+0x2fac>
   13dd0:	cmp	fp, r7
   13dd4:	movhi	r2, #39	; 0x27
   13dd8:	ldrhi	r3, [sp, #32]
   13ddc:	strbhi	r2, [r3, r7]
   13de0:	add	r3, r7, #1
   13de4:	cmp	fp, r3
   13de8:	movhi	r1, #92	; 0x5c
   13dec:	ldrhi	r2, [sp, #32]
   13df0:	strbhi	r1, [r2, r3]
   13df4:	add	r3, r7, #2
   13df8:	cmp	fp, r3
   13dfc:	movhi	r1, #39	; 0x27
   13e00:	ldrhi	r2, [sp, #32]
   13e04:	strbhi	r1, [r2, r3]
   13e08:	ldr	r3, [sp, #28]
   13e0c:	add	r7, r7, #3
   13e10:	mov	r2, r5
   13e14:	mov	r8, r3
   13e18:	str	r5, [sp, #68]	; 0x44
   13e1c:	str	r3, [sp, #40]	; 0x28
   13e20:	mov	r4, #39	; 0x27
   13e24:	b	13248 <__lxstat64@plt+0x23ec>
   13e28:	ldr	r3, [sp, #56]	; 0x38
   13e2c:	ldrb	r3, [r3, #1]
   13e30:	adds	r3, r3, #0
   13e34:	movne	r3, #1
   13e38:	b	13220 <__lxstat64@plt+0x23c4>
   13e3c:	ldr	r5, [sp, #28]
   13e40:	mov	r4, #48	; 0x30
   13e44:	b	13248 <__lxstat64@plt+0x23ec>
   13e48:	add	sl, sl, #1
   13e4c:	b	12d78 <__lxstat64@plt+0x1f1c>
   13e50:	mov	sl, r3
   13e54:	ldr	r3, [sp, #28]
   13e58:	mov	r8, fp
   13e5c:	str	r3, [sp, #44]	; 0x2c
   13e60:	ldr	r3, [sp, #152]	; 0x98
   13e64:	sub	r2, r3, #2
   13e68:	clz	r2, r2
   13e6c:	lsr	r2, r2, #5
   13e70:	b	13488 <__lxstat64@plt+0x262c>
   13e74:	str	ip, [sp, #40]	; 0x28
   13e78:	ldr	r5, [sp, #48]	; 0x30
   13e7c:	b	132b8 <__lxstat64@plt+0x245c>
   13e80:	mov	r2, r9
   13e84:	mov	r8, r9
   13e88:	mov	r5, #0
   13e8c:	mov	r4, #63	; 0x3f
   13e90:	b	13248 <__lxstat64@plt+0x23ec>
   13e94:	cmp	fp, #0
   13e98:	beq	13f10 <__lxstat64@plt+0x30b4>
   13e9c:	ldr	r1, [sp, #32]
   13ea0:	mov	r3, #34	; 0x22
   13ea4:	mov	r2, #1
   13ea8:	strb	r3, [r1]
   13eac:	ldr	r3, [pc, #332]	; 14000 <__lxstat64@plt+0x31a4>
   13eb0:	str	r2, [sp, #52]	; 0x34
   13eb4:	mov	r7, r2
   13eb8:	str	r2, [sp, #44]	; 0x2c
   13ebc:	str	r3, [sp, #64]	; 0x40
   13ec0:	b	12d68 <__lxstat64@plt+0x1f0c>
   13ec4:	ldr	r3, [pc, #300]	; 13ff8 <__lxstat64@plt+0x319c>
   13ec8:	str	r3, [sp, #64]	; 0x40
   13ecc:	mov	r3, #0
   13ed0:	str	r3, [sp, #28]
   13ed4:	mov	r3, #1
   13ed8:	str	r3, [sp, #52]	; 0x34
   13edc:	mov	r7, r3
   13ee0:	mov	r3, #2
   13ee4:	str	r3, [sp, #152]	; 0x98
   13ee8:	b	12d68 <__lxstat64@plt+0x1f0c>
   13eec:	bl	10e50 <abort@plt>
   13ef0:	ldr	r0, [sp, #56]	; 0x38
   13ef4:	bl	10d78 <strlen@plt>
   13ef8:	str	r0, [sp, #24]
   13efc:	b	13bd4 <__lxstat64@plt+0x2d78>
   13f00:	mov	r5, r8
   13f04:	mov	r4, #48	; 0x30
   13f08:	ldr	r8, [sp, #44]	; 0x2c
   13f0c:	b	13248 <__lxstat64@plt+0x23ec>
   13f10:	mov	r3, #1
   13f14:	str	r3, [sp, #52]	; 0x34
   13f18:	mov	r7, r3
   13f1c:	str	r3, [sp, #44]	; 0x2c
   13f20:	ldr	r3, [pc, #216]	; 14000 <__lxstat64@plt+0x31a4>
   13f24:	str	r3, [sp, #64]	; 0x40
   13f28:	b	12d68 <__lxstat64@plt+0x1f0c>
   13f2c:	ldr	sl, [sp, #32]
   13f30:	mov	r8, fp
   13f34:	mov	r2, r3
   13f38:	b	13488 <__lxstat64@plt+0x262c>
   13f3c:	mov	r3, r5
   13f40:	mov	r5, r2
   13f44:	b	13740 <__lxstat64@plt+0x28e4>
   13f48:	ldr	r1, [sp, #24]
   13f4c:	mov	r2, r5
   13f50:	cmp	r1, r9
   13f54:	mov	ip, r5
   13f58:	ldr	r4, [sp, #80]	; 0x50
   13f5c:	ldr	r5, [sp, #92]	; 0x5c
   13f60:	ldr	r6, [sp, #84]	; 0x54
   13f64:	ldr	r7, [sp, #88]	; 0x58
   13f68:	bls	13f9c <__lxstat64@plt+0x3140>
   13f6c:	ldrb	r3, [r8]
   13f70:	cmp	r3, #0
   13f74:	bne	13f88 <__lxstat64@plt+0x312c>
   13f78:	b	13fa0 <__lxstat64@plt+0x3144>
   13f7c:	ldrb	r3, [r8, #1]!
   13f80:	cmp	r3, #0
   13f84:	beq	140a0 <__lxstat64@plt+0x3244>
   13f88:	add	r2, r2, #1
   13f8c:	add	r3, sl, r2
   13f90:	cmp	r1, r3
   13f94:	bhi	13f7c <__lxstat64@plt+0x3120>
   13f98:	mov	ip, r2
   13f9c:	mov	r3, #0
   13fa0:	mov	r2, r3
   13fa4:	b	13a38 <__lxstat64@plt+0x2bdc>
   13fa8:	mov	r3, #0
   13fac:	mov	ip, r5
   13fb0:	ldr	r4, [sp, #80]	; 0x50
   13fb4:	ldr	r5, [sp, #92]	; 0x5c
   13fb8:	ldr	r6, [sp, #84]	; 0x54
   13fbc:	ldr	r7, [sp, #88]	; 0x58
   13fc0:	mov	r2, r3
   13fc4:	b	13a38 <__lxstat64@plt+0x2bdc>
   13fc8:	mov	r3, r6
   13fcc:	mov	ip, r5
   13fd0:	eor	r5, r3, #1
   13fd4:	mov	r2, r6
   13fd8:	ldr	r4, [sp, #80]	; 0x50
   13fdc:	ldr	r6, [sp, #84]	; 0x54
   13fe0:	ldr	r7, [sp, #88]	; 0x58
   13fe4:	uxtb	r5, r5
   13fe8:	b	13a38 <__lxstat64@plt+0x2bdc>
   13fec:	ldr	sl, [sp, #32]
   13ff0:	mov	r8, fp
   13ff4:	b	13e5c <__lxstat64@plt+0x3000>
   13ff8:	strdeq	r7, [r1], -r8
   13ffc:	strdeq	r7, [r1], -ip
   14000:	strdeq	r7, [r1], -r4
   14004:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   14008:	ldr	r2, [sp, #56]	; 0x38
   1400c:	ldrb	r1, [r2, r3]
   14010:	sub	r2, r1, #33	; 0x21
   14014:	uxtb	r2, r2
   14018:	cmp	r2, #29
   1401c:	bhi	140bc <__lxstat64@plt+0x3260>
   14020:	ldr	r0, [pc, #-36]	; 14004 <__lxstat64@plt+0x31a8>
   14024:	mov	ip, #1
   14028:	ands	r2, r0, ip, lsl r2
   1402c:	beq	140cc <__lxstat64@plt+0x3270>
   14030:	ldr	r2, [sp, #28]
   14034:	cmp	r2, #0
   14038:	bne	141cc <__lxstat64@plt+0x3370>
   1403c:	cmp	fp, r7
   14040:	ldr	r8, [sp, #28]
   14044:	ldrhi	r2, [sp, #32]
   14048:	mov	sl, r3
   1404c:	mov	r5, r8
   14050:	strbhi	r4, [r2, r7]
   14054:	add	r2, r7, #1
   14058:	cmp	fp, r2
   1405c:	movhi	r0, #34	; 0x22
   14060:	ldrhi	ip, [sp, #32]
   14064:	mov	r4, r1
   14068:	strbhi	r0, [ip, r2]
   1406c:	add	r2, r7, #2
   14070:	cmp	fp, r2
   14074:	movhi	r0, #34	; 0x22
   14078:	ldrhi	ip, [sp, #32]
   1407c:	strbhi	r0, [ip, r2]
   14080:	add	r2, r7, #3
   14084:	cmp	fp, r2
   14088:	movhi	r0, #63	; 0x3f
   1408c:	ldrhi	ip, [sp, #32]
   14090:	add	r7, r7, #4
   14094:	strbhi	r0, [ip, r2]
   14098:	mov	r2, r8
   1409c:	b	13248 <__lxstat64@plt+0x23ec>
   140a0:	mov	ip, r2
   140a4:	mov	r2, r3
   140a8:	b	13a38 <__lxstat64@plt+0x2bdc>
   140ac:	ldr	sl, [sp, #32]
   140b0:	mov	r8, fp
   140b4:	ldr	r2, [sp, #28]
   140b8:	b	13488 <__lxstat64@plt+0x262c>
   140bc:	mov	r2, #0
   140c0:	mov	r8, r2
   140c4:	mov	r5, r2
   140c8:	b	13248 <__lxstat64@plt+0x23ec>
   140cc:	mov	r8, r2
   140d0:	mov	r5, #0
   140d4:	b	13248 <__lxstat64@plt+0x23ec>
   140d8:	ldr	r1, [sp, #152]	; 0x98
   140dc:	bl	12ba4 <__lxstat64@plt+0x1d48>
   140e0:	str	r0, [sp, #168]	; 0xa8
   140e4:	b	13104 <__lxstat64@plt+0x22a8>
   140e8:	ldr	r1, [sp, #152]	; 0x98
   140ec:	bl	12ba4 <__lxstat64@plt+0x1d48>
   140f0:	str	r0, [sp, #164]	; 0xa4
   140f4:	b	130e4 <__lxstat64@plt+0x2288>
   140f8:	ldr	r7, [sp, #28]
   140fc:	b	13144 <__lxstat64@plt+0x22e8>
   14100:	ldr	sl, [sp, #32]
   14104:	ldr	r2, [sp, #68]	; 0x44
   14108:	mov	r8, fp
   1410c:	mov	fp, r7
   14110:	ldr	r3, [sp, #64]	; 0x40
   14114:	cmp	r3, #0
   14118:	moveq	r2, #0
   1411c:	andne	r2, r2, #1
   14120:	cmp	r2, #0
   14124:	beq	14150 <__lxstat64@plt+0x32f4>
   14128:	mov	r2, r3
   1412c:	ldrb	r3, [r3]
   14130:	cmp	r3, #0
   14134:	beq	14150 <__lxstat64@plt+0x32f4>
   14138:	cmp	r8, fp
   1413c:	strbhi	r3, [sl, fp]
   14140:	ldrb	r3, [r2, #1]!
   14144:	add	fp, fp, #1
   14148:	cmp	r3, #0
   1414c:	bne	14138 <__lxstat64@plt+0x32dc>
   14150:	cmp	r8, fp
   14154:	movhi	r3, #0
   14158:	strbhi	r3, [sl, fp]
   1415c:	b	134e4 <__lxstat64@plt+0x2688>
   14160:	ldr	r3, [sp, #168]	; 0xa8
   14164:	ldr	sl, [sp, #32]
   14168:	str	r3, [sp, #16]
   1416c:	ldr	r3, [sp, #164]	; 0xa4
   14170:	mov	ip, #5
   14174:	str	r3, [sp, #12]
   14178:	ldr	r3, [sp, #160]	; 0xa0
   1417c:	ldr	r2, [sp, #56]	; 0x38
   14180:	str	r3, [sp, #8]
   14184:	ldr	r3, [sp, #156]	; 0x9c
   14188:	ldr	r1, [sp, #72]	; 0x48
   1418c:	str	r3, [sp, #4]
   14190:	mov	r0, sl
   14194:	ldr	r3, [sp, #24]
   14198:	str	ip, [sp]
   1419c:	bl	12cc4 <__lxstat64@plt+0x1e68>
   141a0:	mov	fp, r0
   141a4:	b	134e4 <__lxstat64@plt+0x2688>
   141a8:	mov	r8, fp
   141ac:	ldr	sl, [sp, #32]
   141b0:	mov	fp, r7
   141b4:	mov	r2, r3
   141b8:	b	14110 <__lxstat64@plt+0x32b4>
   141bc:	mov	r8, fp
   141c0:	ldr	sl, [sp, #32]
   141c4:	mov	fp, r7
   141c8:	b	14110 <__lxstat64@plt+0x32b4>
   141cc:	ldr	sl, [sp, #32]
   141d0:	mov	r8, fp
   141d4:	b	134a0 <__lxstat64@plt+0x2644>
   141d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141dc:	sub	sp, sp, #52	; 0x34
   141e0:	mov	r4, r0
   141e4:	mov	r5, r3
   141e8:	mov	sl, r1
   141ec:	mov	fp, r2
   141f0:	bl	10d84 <__errno_location@plt>
   141f4:	ldr	r7, [pc, #412]	; 14398 <__lxstat64@plt+0x353c>
   141f8:	cmn	r4, #-2147483647	; 0x80000001
   141fc:	ldr	r6, [r7]
   14200:	mov	r8, r0
   14204:	movne	r0, #0
   14208:	moveq	r0, #1
   1420c:	ldr	r3, [r8]
   14210:	orrs	r0, r0, r4, lsr #31
   14214:	str	r3, [sp, #24]
   14218:	bne	14394 <__lxstat64@plt+0x3538>
   1421c:	ldr	r2, [r7, #4]
   14220:	cmp	r4, r2
   14224:	blt	14284 <__lxstat64@plt+0x3428>
   14228:	add	r9, r7, #8
   1422c:	cmp	r6, r9
   14230:	str	r2, [sp, #44]	; 0x2c
   14234:	beq	14364 <__lxstat64@plt+0x3508>
   14238:	mov	r3, #8
   1423c:	sub	r2, r4, r2
   14240:	mov	r0, r6
   14244:	str	r3, [sp]
   14248:	add	r2, r2, #1
   1424c:	mvn	r3, #-2147483648	; 0x80000000
   14250:	add	r1, sp, #44	; 0x2c
   14254:	bl	15370 <__lxstat64@plt+0x4514>
   14258:	mov	r6, r0
   1425c:	str	r0, [r7]
   14260:	ldr	r0, [r7, #4]
   14264:	ldr	r2, [sp, #44]	; 0x2c
   14268:	mov	r1, #0
   1426c:	sub	r2, r2, r0
   14270:	add	r0, r6, r0, lsl #3
   14274:	lsl	r2, r2, #3
   14278:	bl	10da8 <memset@plt>
   1427c:	ldr	r3, [sp, #44]	; 0x2c
   14280:	str	r3, [r7, #4]
   14284:	add	r3, r6, r4, lsl #3
   14288:	ldr	r1, [r5, #4]
   1428c:	ldr	r7, [r3, #4]
   14290:	ldr	r9, [r6, r4, lsl #3]
   14294:	ldr	r2, [r5, #40]	; 0x28
   14298:	ldr	ip, [r5, #44]	; 0x2c
   1429c:	add	r0, r5, #8
   142a0:	str	r3, [sp, #28]
   142a4:	ldr	r3, [r5]
   142a8:	orr	r1, r1, #1
   142ac:	mov	lr, r0
   142b0:	str	r1, [sp, #32]
   142b4:	str	r0, [sp, #36]	; 0x24
   142b8:	str	r1, [sp, #4]
   142bc:	str	r2, [sp, #12]
   142c0:	str	r3, [sp]
   142c4:	mov	r0, r7
   142c8:	mov	r1, r9
   142cc:	str	ip, [sp, #16]
   142d0:	str	lr, [sp, #8]
   142d4:	mov	r3, fp
   142d8:	mov	r2, sl
   142dc:	bl	12cc4 <__lxstat64@plt+0x1e68>
   142e0:	cmp	r9, r0
   142e4:	bhi	14350 <__lxstat64@plt+0x34f4>
   142e8:	ldr	r3, [pc, #172]	; 1439c <__lxstat64@plt+0x3540>
   142ec:	add	r9, r0, #1
   142f0:	cmp	r7, r3
   142f4:	str	r9, [r6, r4, lsl #3]
   142f8:	beq	14304 <__lxstat64@plt+0x34a8>
   142fc:	mov	r0, r7
   14300:	bl	15b20 <__lxstat64@plt+0x4cc4>
   14304:	mov	r0, r9
   14308:	bl	1520c <__lxstat64@plt+0x43b0>
   1430c:	ldr	lr, [sp, #28]
   14310:	ldr	ip, [r5, #44]	; 0x2c
   14314:	ldr	r4, [r5, #40]	; 0x28
   14318:	mov	r3, fp
   1431c:	mov	r2, sl
   14320:	mov	r1, r9
   14324:	str	r0, [lr, #4]
   14328:	ldr	lr, [r5]
   1432c:	ldr	r5, [sp, #36]	; 0x24
   14330:	str	ip, [sp, #16]
   14334:	str	r5, [sp, #8]
   14338:	ldr	r5, [sp, #32]
   1433c:	str	r4, [sp, #12]
   14340:	str	r5, [sp, #4]
   14344:	str	lr, [sp]
   14348:	mov	r7, r0
   1434c:	bl	12cc4 <__lxstat64@plt+0x1e68>
   14350:	ldr	r3, [sp, #24]
   14354:	mov	r0, r7
   14358:	str	r3, [r8]
   1435c:	add	sp, sp, #52	; 0x34
   14360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14364:	mov	r3, #8
   14368:	sub	r2, r4, r2
   1436c:	str	r3, [sp]
   14370:	add	r1, sp, #44	; 0x2c
   14374:	add	r2, r2, #1
   14378:	mvn	r3, #-2147483648	; 0x80000000
   1437c:	bl	15370 <__lxstat64@plt+0x4514>
   14380:	mov	r6, r0
   14384:	ldm	r9, {r0, r1}
   14388:	str	r6, [r7]
   1438c:	stm	r6, {r0, r1}
   14390:	b	14260 <__lxstat64@plt+0x3404>
   14394:	bl	10e50 <abort@plt>
   14398:	andeq	r8, r2, ip, ror #1
   1439c:	andeq	r8, r2, ip, asr r1
   143a0:	push	{r4, r5, r6, lr}
   143a4:	mov	r5, r0
   143a8:	bl	10d84 <__errno_location@plt>
   143ac:	cmp	r5, #0
   143b0:	mov	r1, #48	; 0x30
   143b4:	mov	r4, r0
   143b8:	ldr	r0, [pc, #16]	; 143d0 <__lxstat64@plt+0x3574>
   143bc:	ldr	r6, [r4]
   143c0:	movne	r0, r5
   143c4:	bl	1566c <__lxstat64@plt+0x4810>
   143c8:	str	r6, [r4]
   143cc:	pop	{r4, r5, r6, pc}
   143d0:	andeq	r8, r2, ip, asr r2
   143d4:	ldr	r3, [pc, #12]	; 143e8 <__lxstat64@plt+0x358c>
   143d8:	cmp	r0, #0
   143dc:	moveq	r0, r3
   143e0:	ldr	r0, [r0]
   143e4:	bx	lr
   143e8:	andeq	r8, r2, ip, asr r2
   143ec:	ldr	r3, [pc, #12]	; 14400 <__lxstat64@plt+0x35a4>
   143f0:	cmp	r0, #0
   143f4:	moveq	r0, r3
   143f8:	str	r1, [r0]
   143fc:	bx	lr
   14400:	andeq	r8, r2, ip, asr r2
   14404:	ldr	r3, [pc, #52]	; 14440 <__lxstat64@plt+0x35e4>
   14408:	cmp	r0, #0
   1440c:	moveq	r0, r3
   14410:	add	r3, r0, #8
   14414:	push	{lr}		; (str lr, [sp, #-4]!)
   14418:	lsr	lr, r1, #5
   1441c:	and	r1, r1, #31
   14420:	ldr	ip, [r3, lr, lsl #2]
   14424:	lsr	r0, ip, r1
   14428:	eor	r2, r2, r0
   1442c:	and	r2, r2, #1
   14430:	and	r0, r0, #1
   14434:	eor	r1, ip, r2, lsl r1
   14438:	str	r1, [r3, lr, lsl #2]
   1443c:	pop	{pc}		; (ldr pc, [sp], #4)
   14440:	andeq	r8, r2, ip, asr r2
   14444:	ldr	r3, [pc, #16]	; 1445c <__lxstat64@plt+0x3600>
   14448:	cmp	r0, #0
   1444c:	movne	r3, r0
   14450:	ldr	r0, [r3, #4]
   14454:	str	r1, [r3, #4]
   14458:	bx	lr
   1445c:	andeq	r8, r2, ip, asr r2
   14460:	ldr	r3, [pc, #44]	; 14494 <__lxstat64@plt+0x3638>
   14464:	cmp	r0, #0
   14468:	moveq	r0, r3
   1446c:	mov	ip, #10
   14470:	cmp	r2, #0
   14474:	cmpne	r1, #0
   14478:	str	ip, [r0]
   1447c:	beq	1448c <__lxstat64@plt+0x3630>
   14480:	str	r1, [r0, #40]	; 0x28
   14484:	str	r2, [r0, #44]	; 0x2c
   14488:	bx	lr
   1448c:	push	{r4, lr}
   14490:	bl	10e50 <abort@plt>
   14494:	andeq	r8, r2, ip, asr r2
   14498:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1449c:	sub	sp, sp, #24
   144a0:	ldr	ip, [pc, #108]	; 14514 <__lxstat64@plt+0x36b8>
   144a4:	ldr	r4, [sp, #56]	; 0x38
   144a8:	mov	r9, r2
   144ac:	cmp	r4, #0
   144b0:	moveq	r4, ip
   144b4:	mov	sl, r3
   144b8:	mov	r7, r0
   144bc:	mov	r8, r1
   144c0:	bl	10d84 <__errno_location@plt>
   144c4:	ldr	r3, [r4, #44]	; 0x2c
   144c8:	mov	r1, r8
   144cc:	ldr	r6, [r0]
   144d0:	str	r3, [sp, #16]
   144d4:	ldr	r2, [r4, #40]	; 0x28
   144d8:	add	r3, r4, #8
   144dc:	str	r3, [sp, #8]
   144e0:	str	r2, [sp, #12]
   144e4:	ldr	r2, [r4, #4]
   144e8:	mov	r5, r0
   144ec:	str	r2, [sp, #4]
   144f0:	ldr	ip, [r4]
   144f4:	mov	r3, sl
   144f8:	mov	r2, r9
   144fc:	mov	r0, r7
   14500:	str	ip, [sp]
   14504:	bl	12cc4 <__lxstat64@plt+0x1e68>
   14508:	str	r6, [r5]
   1450c:	add	sp, sp, #24
   14510:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14514:	andeq	r8, r2, ip, asr r2
   14518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1451c:	cmp	r3, #0
   14520:	sub	sp, sp, #44	; 0x2c
   14524:	ldr	r4, [pc, #192]	; 145ec <__lxstat64@plt+0x3790>
   14528:	mov	r6, r2
   1452c:	movne	r4, r3
   14530:	mov	r9, r1
   14534:	mov	r8, r0
   14538:	bl	10d84 <__errno_location@plt>
   1453c:	ldr	r3, [r4, #44]	; 0x2c
   14540:	ldr	r5, [r4, #4]
   14544:	add	sl, r4, #8
   14548:	cmp	r6, #0
   1454c:	orreq	r5, r5, #1
   14550:	mov	r1, #0
   14554:	ldr	r2, [r0]
   14558:	str	r3, [sp, #16]
   1455c:	ldr	r3, [r4, #40]	; 0x28
   14560:	stmib	sp, {r5, sl}
   14564:	str	r3, [sp, #12]
   14568:	ldr	r3, [r4]
   1456c:	mov	r7, r0
   14570:	str	r2, [sp, #28]
   14574:	str	r3, [sp]
   14578:	mov	r2, r8
   1457c:	mov	r3, r9
   14580:	mov	r0, r1
   14584:	bl	12cc4 <__lxstat64@plt+0x1e68>
   14588:	add	r1, r0, #1
   1458c:	mov	fp, r0
   14590:	mov	r0, r1
   14594:	str	r1, [sp, #36]	; 0x24
   14598:	bl	1520c <__lxstat64@plt+0x43b0>
   1459c:	ldr	r3, [r4, #44]	; 0x2c
   145a0:	mov	r2, r8
   145a4:	str	r3, [sp, #16]
   145a8:	ldr	r3, [r4, #40]	; 0x28
   145ac:	str	r5, [sp, #4]
   145b0:	str	r3, [sp, #12]
   145b4:	str	sl, [sp, #8]
   145b8:	ldr	ip, [r4]
   145bc:	ldr	r1, [sp, #36]	; 0x24
   145c0:	mov	r3, r9
   145c4:	str	ip, [sp]
   145c8:	str	r0, [sp, #32]
   145cc:	bl	12cc4 <__lxstat64@plt+0x1e68>
   145d0:	ldr	r2, [sp, #28]
   145d4:	cmp	r6, #0
   145d8:	str	r2, [r7]
   145dc:	ldr	r0, [sp, #32]
   145e0:	strne	fp, [r6]
   145e4:	add	sp, sp, #44	; 0x2c
   145e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145ec:	andeq	r8, r2, ip, asr r2
   145f0:	mov	r3, r2
   145f4:	mov	r2, #0
   145f8:	b	14518 <__lxstat64@plt+0x36bc>
   145fc:	push	{r4, r5, r6, r7, r8, lr}
   14600:	ldr	r6, [pc, #116]	; 1467c <__lxstat64@plt+0x3820>
   14604:	ldr	r3, [r6, #4]
   14608:	ldr	r7, [r6]
   1460c:	cmp	r3, #1
   14610:	movgt	r5, r7
   14614:	movgt	r4, #1
   14618:	ble	14638 <__lxstat64@plt+0x37dc>
   1461c:	ldr	r0, [r5, #12]
   14620:	bl	15b20 <__lxstat64@plt+0x4cc4>
   14624:	ldr	r3, [r6, #4]
   14628:	add	r4, r4, #1
   1462c:	cmp	r3, r4
   14630:	add	r5, r5, #8
   14634:	bgt	1461c <__lxstat64@plt+0x37c0>
   14638:	ldr	r0, [r7, #4]
   1463c:	ldr	r4, [pc, #60]	; 14680 <__lxstat64@plt+0x3824>
   14640:	cmp	r0, r4
   14644:	beq	14658 <__lxstat64@plt+0x37fc>
   14648:	bl	15b20 <__lxstat64@plt+0x4cc4>
   1464c:	mov	r3, #256	; 0x100
   14650:	str	r4, [r6, #12]
   14654:	str	r3, [r6, #8]
   14658:	ldr	r4, [pc, #36]	; 14684 <__lxstat64@plt+0x3828>
   1465c:	cmp	r7, r4
   14660:	beq	14670 <__lxstat64@plt+0x3814>
   14664:	mov	r0, r7
   14668:	bl	15b20 <__lxstat64@plt+0x4cc4>
   1466c:	str	r4, [r6]
   14670:	mov	r3, #1
   14674:	str	r3, [r6, #4]
   14678:	pop	{r4, r5, r6, r7, r8, pc}
   1467c:	andeq	r8, r2, ip, ror #1
   14680:	andeq	r8, r2, ip, asr r1
   14684:	strdeq	r8, [r2], -r4
   14688:	ldr	r3, [pc, #4]	; 14694 <__lxstat64@plt+0x3838>
   1468c:	mvn	r2, #0
   14690:	b	141d8 <__lxstat64@plt+0x337c>
   14694:	andeq	r8, r2, ip, asr r2
   14698:	ldr	r3, [pc]	; 146a0 <__lxstat64@plt+0x3844>
   1469c:	b	141d8 <__lxstat64@plt+0x337c>
   146a0:	andeq	r8, r2, ip, asr r2
   146a4:	mov	r1, r0
   146a8:	ldr	r3, [pc, #8]	; 146b8 <__lxstat64@plt+0x385c>
   146ac:	mvn	r2, #0
   146b0:	mov	r0, #0
   146b4:	b	141d8 <__lxstat64@plt+0x337c>
   146b8:	andeq	r8, r2, ip, asr r2
   146bc:	mov	r2, r1
   146c0:	ldr	r3, [pc, #8]	; 146d0 <__lxstat64@plt+0x3874>
   146c4:	mov	r1, r0
   146c8:	mov	r0, #0
   146cc:	b	141d8 <__lxstat64@plt+0x337c>
   146d0:	andeq	r8, r2, ip, asr r2
   146d4:	push	{r4, r5, lr}
   146d8:	sub	sp, sp, #52	; 0x34
   146dc:	mov	r5, r2
   146e0:	mov	r4, r0
   146e4:	mov	r0, sp
   146e8:	bl	12b74 <__lxstat64@plt+0x1d18>
   146ec:	mov	r3, sp
   146f0:	mov	r1, r5
   146f4:	mov	r0, r4
   146f8:	mvn	r2, #0
   146fc:	bl	141d8 <__lxstat64@plt+0x337c>
   14700:	add	sp, sp, #52	; 0x34
   14704:	pop	{r4, r5, pc}
   14708:	push	{r4, r5, r6, lr}
   1470c:	sub	sp, sp, #48	; 0x30
   14710:	mov	r5, r2
   14714:	mov	r6, r3
   14718:	mov	r4, r0
   1471c:	mov	r0, sp
   14720:	bl	12b74 <__lxstat64@plt+0x1d18>
   14724:	mov	r3, sp
   14728:	mov	r2, r6
   1472c:	mov	r1, r5
   14730:	mov	r0, r4
   14734:	bl	141d8 <__lxstat64@plt+0x337c>
   14738:	add	sp, sp, #48	; 0x30
   1473c:	pop	{r4, r5, r6, pc}
   14740:	mov	r2, r1
   14744:	mov	r1, r0
   14748:	mov	r0, #0
   1474c:	b	146d4 <__lxstat64@plt+0x3878>
   14750:	mov	r3, r2
   14754:	mov	r2, r1
   14758:	mov	r1, r0
   1475c:	mov	r0, #0
   14760:	b	14708 <__lxstat64@plt+0x38ac>
   14764:	push	{r4, r5, r6, r7, r8, lr}
   14768:	mov	r7, r0
   1476c:	ldr	lr, [pc, #100]	; 147d8 <__lxstat64@plt+0x397c>
   14770:	mov	r8, r1
   14774:	mov	r4, r2
   14778:	ldm	lr!, {r0, r1, r2, r3}
   1477c:	sub	sp, sp, #48	; 0x30
   14780:	mov	ip, sp
   14784:	lsr	r5, r4, #5
   14788:	stmia	ip!, {r0, r1, r2, r3}
   1478c:	add	r6, sp, #8
   14790:	ldm	lr!, {r0, r1, r2, r3}
   14794:	and	r4, r4, #31
   14798:	stmia	ip!, {r0, r1, r2, r3}
   1479c:	ldm	lr, {r0, r1, r2, r3}
   147a0:	stm	ip, {r0, r1, r2, r3}
   147a4:	mov	r2, r8
   147a8:	ldr	lr, [r6, r5, lsl #2]
   147ac:	mov	r1, r7
   147b0:	mov	r3, sp
   147b4:	lsr	ip, lr, r4
   147b8:	eor	ip, ip, #1
   147bc:	and	ip, ip, #1
   147c0:	mov	r0, #0
   147c4:	eor	r4, lr, ip, lsl r4
   147c8:	str	r4, [r6, r5, lsl #2]
   147cc:	bl	141d8 <__lxstat64@plt+0x337c>
   147d0:	add	sp, sp, #48	; 0x30
   147d4:	pop	{r4, r5, r6, r7, r8, pc}
   147d8:	andeq	r8, r2, ip, asr r2
   147dc:	mov	r2, r1
   147e0:	mvn	r1, #0
   147e4:	b	14764 <__lxstat64@plt+0x3908>
   147e8:	mov	r2, #58	; 0x3a
   147ec:	mvn	r1, #0
   147f0:	b	14764 <__lxstat64@plt+0x3908>
   147f4:	mov	r2, #58	; 0x3a
   147f8:	b	14764 <__lxstat64@plt+0x3908>
   147fc:	push	{r4, r5, r6, r7, lr}
   14800:	sub	sp, sp, #100	; 0x64
   14804:	mov	r6, r0
   14808:	mov	r0, sp
   1480c:	mov	r7, r2
   14810:	bl	12b74 <__lxstat64@plt+0x1d18>
   14814:	mov	ip, sp
   14818:	add	lr, sp, #48	; 0x30
   1481c:	ldm	ip!, {r0, r1, r2, r3}
   14820:	stmia	lr!, {r0, r1, r2, r3}
   14824:	ldm	ip!, {r0, r1, r2, r3}
   14828:	ldr	r5, [sp, #60]	; 0x3c
   1482c:	stmia	lr!, {r0, r1, r2, r3}
   14830:	mvn	r4, r5
   14834:	ldm	ip, {r0, r1, r2, r3}
   14838:	and	ip, r4, #67108864	; 0x4000000
   1483c:	eor	ip, ip, r5
   14840:	str	ip, [sp, #60]	; 0x3c
   14844:	stm	lr, {r0, r1, r2, r3}
   14848:	mov	r1, r7
   1484c:	mov	r0, r6
   14850:	add	r3, sp, #48	; 0x30
   14854:	mvn	r2, #0
   14858:	bl	141d8 <__lxstat64@plt+0x337c>
   1485c:	add	sp, sp, #100	; 0x64
   14860:	pop	{r4, r5, r6, r7, pc}
   14864:	push	{r4, r5, r6, r7, r8, lr}
   14868:	mov	r5, r1
   1486c:	ldr	lr, [pc, #100]	; 148d8 <__lxstat64@plt+0x3a7c>
   14870:	mov	r4, r2
   14874:	mov	r7, r0
   14878:	mov	r8, r3
   1487c:	ldm	lr!, {r0, r1, r2, r3}
   14880:	sub	sp, sp, #48	; 0x30
   14884:	mov	ip, sp
   14888:	mov	r6, #10
   1488c:	stmia	ip!, {r0, r1, r2, r3}
   14890:	cmp	r4, #0
   14894:	cmpne	r5, #0
   14898:	ldm	lr!, {r0, r1, r2, r3}
   1489c:	str	r6, [sp]
   148a0:	stmia	ip!, {r0, r1, r2, r3}
   148a4:	ldm	lr, {r0, r1, r2, r3}
   148a8:	stm	ip, {r0, r1, r2, r3}
   148ac:	beq	148d4 <__lxstat64@plt+0x3a78>
   148b0:	mov	r3, sp
   148b4:	mov	r1, r8
   148b8:	mov	r0, r7
   148bc:	ldr	r2, [sp, #72]	; 0x48
   148c0:	str	r5, [sp, #40]	; 0x28
   148c4:	str	r4, [sp, #44]	; 0x2c
   148c8:	bl	141d8 <__lxstat64@plt+0x337c>
   148cc:	add	sp, sp, #48	; 0x30
   148d0:	pop	{r4, r5, r6, r7, r8, pc}
   148d4:	bl	10e50 <abort@plt>
   148d8:	andeq	r8, r2, ip, asr r2
   148dc:	push	{lr}		; (str lr, [sp, #-4]!)
   148e0:	sub	sp, sp, #12
   148e4:	mvn	ip, #0
   148e8:	str	ip, [sp]
   148ec:	bl	14864 <__lxstat64@plt+0x3a08>
   148f0:	add	sp, sp, #12
   148f4:	pop	{pc}		; (ldr pc, [sp], #4)
   148f8:	push	{lr}		; (str lr, [sp, #-4]!)
   148fc:	sub	sp, sp, #12
   14900:	mvn	ip, #0
   14904:	mov	r3, r2
   14908:	str	ip, [sp]
   1490c:	mov	r2, r1
   14910:	mov	r1, r0
   14914:	mov	r0, #0
   14918:	bl	14864 <__lxstat64@plt+0x3a08>
   1491c:	add	sp, sp, #12
   14920:	pop	{pc}		; (ldr pc, [sp], #4)
   14924:	push	{lr}		; (str lr, [sp, #-4]!)
   14928:	sub	sp, sp, #12
   1492c:	str	r3, [sp]
   14930:	mov	r3, r2
   14934:	mov	r2, r1
   14938:	mov	r1, r0
   1493c:	mov	r0, #0
   14940:	bl	14864 <__lxstat64@plt+0x3a08>
   14944:	add	sp, sp, #12
   14948:	pop	{pc}		; (ldr pc, [sp], #4)
   1494c:	ldr	r3, [pc]	; 14954 <__lxstat64@plt+0x3af8>
   14950:	b	141d8 <__lxstat64@plt+0x337c>
   14954:	strdeq	r8, [r2], -ip
   14958:	mov	r2, r1
   1495c:	ldr	r3, [pc, #8]	; 1496c <__lxstat64@plt+0x3b10>
   14960:	mov	r1, r0
   14964:	mov	r0, #0
   14968:	b	141d8 <__lxstat64@plt+0x337c>
   1496c:	strdeq	r8, [r2], -ip
   14970:	ldr	r3, [pc, #4]	; 1497c <__lxstat64@plt+0x3b20>
   14974:	mvn	r2, #0
   14978:	b	141d8 <__lxstat64@plt+0x337c>
   1497c:	strdeq	r8, [r2], -ip
   14980:	mov	r1, r0
   14984:	ldr	r3, [pc, #8]	; 14994 <__lxstat64@plt+0x3b38>
   14988:	mvn	r2, #0
   1498c:	mov	r0, #0
   14990:	b	141d8 <__lxstat64@plt+0x337c>
   14994:	strdeq	r8, [r2], -ip
   14998:	push	{r4, r5, lr}
   1499c:	mov	r2, r0
   149a0:	ldrb	r3, [r0]
   149a4:	ldrb	r0, [r1]
   149a8:	cmp	r3, #45	; 0x2d
   149ac:	beq	14a0c <__lxstat64@plt+0x3bb0>
   149b0:	cmp	r0, #45	; 0x2d
   149b4:	beq	14a48 <__lxstat64@plt+0x3bec>
   149b8:	cmp	r3, #48	; 0x30
   149bc:	beq	14b10 <__lxstat64@plt+0x3cb4>
   149c0:	cmp	r0, #48	; 0x30
   149c4:	beq	14b08 <__lxstat64@plt+0x3cac>
   149c8:	cmp	r3, r0
   149cc:	subne	r5, r0, #48	; 0x30
   149d0:	subne	r0, r3, r0
   149d4:	subne	r3, r3, #48	; 0x30
   149d8:	bne	14b2c <__lxstat64@plt+0x3cd0>
   149dc:	sub	r3, r3, #48	; 0x30
   149e0:	cmp	r3, #9
   149e4:	bhi	14a04 <__lxstat64@plt+0x3ba8>
   149e8:	ldrb	r3, [r2, #1]!
   149ec:	ldrb	r0, [r1, #1]!
   149f0:	sub	ip, r3, #48	; 0x30
   149f4:	cmp	r3, r0
   149f8:	bne	14b20 <__lxstat64@plt+0x3cc4>
   149fc:	cmp	ip, #9
   14a00:	bls	149e8 <__lxstat64@plt+0x3b8c>
   14a04:	mov	r0, #0
   14a08:	pop	{r4, r5, pc}
   14a0c:	ldrb	ip, [r2, #1]!
   14a10:	cmp	ip, #48	; 0x30
   14a14:	beq	14a0c <__lxstat64@plt+0x3bb0>
   14a18:	cmp	r0, #45	; 0x2d
   14a1c:	beq	14a7c <__lxstat64@plt+0x3c20>
   14a20:	sub	ip, ip, #48	; 0x30
   14a24:	cmp	ip, #9
   14a28:	bls	14b00 <__lxstat64@plt+0x3ca4>
   14a2c:	cmp	r0, #48	; 0x30
   14a30:	beq	14b18 <__lxstat64@plt+0x3cbc>
   14a34:	sub	r0, r0, #48	; 0x30
   14a38:	cmp	r0, #9
   14a3c:	movhi	r0, #0
   14a40:	mvnls	r0, #0
   14a44:	pop	{r4, r5, pc}
   14a48:	ldrb	r0, [r1, #1]!
   14a4c:	cmp	r0, #48	; 0x30
   14a50:	beq	14a48 <__lxstat64@plt+0x3bec>
   14a54:	sub	r0, r0, #48	; 0x30
   14a58:	cmp	r0, #9
   14a5c:	bls	14b80 <__lxstat64@plt+0x3d24>
   14a60:	cmp	r3, #48	; 0x30
   14a64:	beq	14b88 <__lxstat64@plt+0x3d2c>
   14a68:	sub	r3, r3, #48	; 0x30
   14a6c:	cmp	r3, #9
   14a70:	movhi	r0, #0
   14a74:	movls	r0, #1
   14a78:	pop	{r4, r5, pc}
   14a7c:	ldrb	r5, [r1, #1]!
   14a80:	cmp	r5, #48	; 0x30
   14a84:	bne	14a9c <__lxstat64@plt+0x3c40>
   14a88:	b	14a7c <__lxstat64@plt+0x3c20>
   14a8c:	cmp	r3, #9
   14a90:	bhi	14b9c <__lxstat64@plt+0x3d40>
   14a94:	ldrb	ip, [r2, #1]!
   14a98:	ldrb	r5, [r1, #1]!
   14a9c:	cmp	ip, r5
   14aa0:	sub	r3, ip, #48	; 0x30
   14aa4:	beq	14a8c <__lxstat64@plt+0x3c30>
   14aa8:	cmp	r3, #9
   14aac:	bhi	14b9c <__lxstat64@plt+0x3d40>
   14ab0:	mov	lr, r2
   14ab4:	add	lr, lr, #1
   14ab8:	ldrb	r4, [lr]
   14abc:	sub	r0, lr, r2
   14ac0:	sub	r4, r4, #48	; 0x30
   14ac4:	cmp	r4, #9
   14ac8:	bls	14ab4 <__lxstat64@plt+0x3c58>
   14acc:	sub	r3, r5, #48	; 0x30
   14ad0:	cmp	r3, #9
   14ad4:	bhi	14bbc <__lxstat64@plt+0x3d60>
   14ad8:	mov	r2, r1
   14adc:	add	r2, r2, #1
   14ae0:	ldrb	lr, [r2]
   14ae4:	sub	r3, r2, r1
   14ae8:	sub	lr, lr, #48	; 0x30
   14aec:	cmp	lr, #9
   14af0:	bls	14adc <__lxstat64@plt+0x3c80>
   14af4:	cmp	r3, r0
   14af8:	beq	14bb0 <__lxstat64@plt+0x3d54>
   14afc:	bhi	14b80 <__lxstat64@plt+0x3d24>
   14b00:	mvn	r0, #0
   14b04:	pop	{r4, r5, pc}
   14b08:	ldrb	r0, [r1, #1]!
   14b0c:	b	149c0 <__lxstat64@plt+0x3b64>
   14b10:	ldrb	r3, [r2, #1]!
   14b14:	b	149b8 <__lxstat64@plt+0x3b5c>
   14b18:	ldrb	r0, [r1, #1]!
   14b1c:	b	14a2c <__lxstat64@plt+0x3bd0>
   14b20:	sub	r5, r0, #48	; 0x30
   14b24:	sub	r0, r3, r0
   14b28:	mov	r3, ip
   14b2c:	cmp	r3, #9
   14b30:	bhi	14bd4 <__lxstat64@plt+0x3d78>
   14b34:	mov	ip, r2
   14b38:	add	ip, ip, #1
   14b3c:	ldrb	lr, [ip]
   14b40:	sub	r4, ip, r2
   14b44:	sub	lr, lr, #48	; 0x30
   14b48:	cmp	lr, #9
   14b4c:	bls	14b38 <__lxstat64@plt+0x3cdc>
   14b50:	cmp	r5, #9
   14b54:	bhi	14bc8 <__lxstat64@plt+0x3d6c>
   14b58:	mov	r2, r1
   14b5c:	add	r2, r2, #1
   14b60:	ldrb	ip, [r2]
   14b64:	sub	lr, r2, r1
   14b68:	sub	ip, ip, #48	; 0x30
   14b6c:	cmp	ip, #9
   14b70:	bls	14b5c <__lxstat64@plt+0x3d00>
   14b74:	cmp	lr, r4
   14b78:	beq	14b90 <__lxstat64@plt+0x3d34>
   14b7c:	bhi	14b00 <__lxstat64@plt+0x3ca4>
   14b80:	mov	r0, #1
   14b84:	pop	{r4, r5, pc}
   14b88:	ldrb	r3, [r2, #1]!
   14b8c:	b	14a60 <__lxstat64@plt+0x3c04>
   14b90:	cmp	r4, #0
   14b94:	moveq	r0, #0
   14b98:	pop	{r4, r5, pc}
   14b9c:	sub	r3, r5, #48	; 0x30
   14ba0:	cmp	r3, #9
   14ba4:	mov	r0, #0
   14ba8:	bls	14ad8 <__lxstat64@plt+0x3c7c>
   14bac:	pop	{r4, r5, pc}
   14bb0:	cmp	r0, #0
   14bb4:	subne	r0, r5, ip
   14bb8:	pop	{r4, r5, pc}
   14bbc:	adds	r0, r0, #0
   14bc0:	mvnne	r0, #0
   14bc4:	pop	{r4, r5, pc}
   14bc8:	adds	r0, r4, #0
   14bcc:	movne	r0, #1
   14bd0:	pop	{r4, r5, pc}
   14bd4:	cmp	r5, #9
   14bd8:	movls	r4, #0
   14bdc:	bls	14b58 <__lxstat64@plt+0x3cfc>
   14be0:	b	14a04 <__lxstat64@plt+0x3ba8>
   14be4:	push	{r4, r5, r6, r7, r8, lr}
   14be8:	sub	sp, sp, #8
   14bec:	mov	r6, r0
   14bf0:	mov	r7, r1
   14bf4:	ldr	r0, [sp, #32]
   14bf8:	ldr	r1, [sp, #36]	; 0x24
   14bfc:	mov	r5, r2
   14c00:	mov	r8, r3
   14c04:	bl	15830 <__lxstat64@plt+0x49d4>
   14c08:	subs	r4, r0, #0
   14c0c:	beq	14c6c <__lxstat64@plt+0x3e10>
   14c10:	cmp	r5, #0
   14c14:	beq	14c48 <__lxstat64@plt+0x3dec>
   14c18:	ldr	ip, [pc, #120]	; 14c98 <__lxstat64@plt+0x3e3c>
   14c1c:	mov	r0, r6
   14c20:	str	r4, [sp, #4]
   14c24:	mov	r3, r8
   14c28:	mov	r2, r5
   14c2c:	mov	r1, r7
   14c30:	str	ip, [sp]
   14c34:	bl	10d30 <error_at_line@plt>
   14c38:	mov	r0, r4
   14c3c:	add	sp, sp, #8
   14c40:	pop	{r4, r5, r6, r7, r8, lr}
   14c44:	b	15b20 <__lxstat64@plt+0x4cc4>
   14c48:	mov	r0, r6
   14c4c:	mov	r1, r7
   14c50:	mov	r3, r4
   14c54:	ldr	r2, [pc, #60]	; 14c98 <__lxstat64@plt+0x3e3c>
   14c58:	bl	10d18 <error@plt>
   14c5c:	mov	r0, r4
   14c60:	add	sp, sp, #8
   14c64:	pop	{r4, r5, r6, r7, r8, lr}
   14c68:	b	15b20 <__lxstat64@plt+0x4cc4>
   14c6c:	bl	10d84 <__errno_location@plt>
   14c70:	mov	r2, #5
   14c74:	ldr	r1, [pc, #32]	; 14c9c <__lxstat64@plt+0x3e40>
   14c78:	ldr	r5, [r0]
   14c7c:	mov	r0, r4
   14c80:	bl	10c94 <dcgettext@plt>
   14c84:	mov	r1, r5
   14c88:	mov	r2, r0
   14c8c:	mov	r0, r4
   14c90:	bl	10d18 <error@plt>
   14c94:	bl	10e50 <abort@plt>
   14c98:	andeq	r7, r1, r8, asr #8
   14c9c:	andeq	r7, r1, r8, ror #10
   14ca0:	push	{lr}		; (str lr, [sp, #-4]!)
   14ca4:	sub	sp, sp, #12
   14ca8:	str	r3, [sp, #4]
   14cac:	mov	r3, #0
   14cb0:	str	r2, [sp]
   14cb4:	mov	r2, r3
   14cb8:	bl	14be4 <__lxstat64@plt+0x3d88>
   14cbc:	add	sp, sp, #12
   14cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc4:	push	{r4, r5, r6, lr}
   14cc8:	sub	sp, sp, #32
   14ccc:	cmp	r1, #0
   14cd0:	mov	r4, r0
   14cd4:	ldr	r5, [sp, #48]	; 0x30
   14cd8:	ldr	r6, [sp, #52]	; 0x34
   14cdc:	beq	14ff4 <__lxstat64@plt+0x4198>
   14ce0:	stm	sp, {r2, r3}
   14ce4:	mov	r3, r1
   14ce8:	ldr	r2, [pc, #808]	; 15018 <__lxstat64@plt+0x41bc>
   14cec:	mov	r1, #1
   14cf0:	bl	10dcc <__fprintf_chk@plt>
   14cf4:	mov	r2, #5
   14cf8:	ldr	r1, [pc, #796]	; 1501c <__lxstat64@plt+0x41c0>
   14cfc:	mov	r0, #0
   14d00:	bl	10c94 <dcgettext@plt>
   14d04:	ldr	r3, [pc, #788]	; 15020 <__lxstat64@plt+0x41c4>
   14d08:	ldr	r2, [pc, #788]	; 15024 <__lxstat64@plt+0x41c8>
   14d0c:	str	r3, [sp]
   14d10:	mov	r1, #1
   14d14:	mov	r3, r0
   14d18:	mov	r0, r4
   14d1c:	bl	10dcc <__fprintf_chk@plt>
   14d20:	mov	r1, r4
   14d24:	mov	r0, #10
   14d28:	bl	10c88 <fputc_unlocked@plt>
   14d2c:	mov	r2, #5
   14d30:	ldr	r1, [pc, #752]	; 15028 <__lxstat64@plt+0x41cc>
   14d34:	mov	r0, #0
   14d38:	bl	10c94 <dcgettext@plt>
   14d3c:	mov	r1, #1
   14d40:	ldr	r3, [pc, #740]	; 1502c <__lxstat64@plt+0x41d0>
   14d44:	mov	r2, r0
   14d48:	mov	r0, r4
   14d4c:	bl	10dcc <__fprintf_chk@plt>
   14d50:	mov	r1, r4
   14d54:	mov	r0, #10
   14d58:	bl	10c88 <fputc_unlocked@plt>
   14d5c:	cmp	r6, #9
   14d60:	ldrls	pc, [pc, r6, lsl #2]
   14d64:	b	1500c <__lxstat64@plt+0x41b0>
   14d68:	andeq	r4, r1, ip, ror #27
   14d6c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14d70:	andeq	r4, r1, r0, lsr #28
   14d74:	andeq	r4, r1, r4, asr lr
   14d78:	muleq	r1, r0, lr
   14d7c:	andeq	r4, r1, ip, asr #29
   14d80:	andeq	r4, r1, r8, lsl #30
   14d84:	andeq	r4, r1, ip, asr #30
   14d88:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14d8c:	muleq	r1, r0, sp
   14d90:	ldr	r1, [pc, #664]	; 15030 <__lxstat64@plt+0x41d4>
   14d94:	mov	r2, #5
   14d98:	mov	r0, #0
   14d9c:	bl	10c94 <dcgettext@plt>
   14da0:	ldr	ip, [r5, #32]
   14da4:	ldr	r1, [r5, #28]
   14da8:	ldr	r2, [r5, #24]
   14dac:	ldr	r3, [r5]
   14db0:	ldr	r6, [r5, #20]
   14db4:	str	ip, [sp, #28]
   14db8:	ldr	lr, [r5, #16]
   14dbc:	str	r1, [sp, #24]
   14dc0:	ldr	ip, [r5, #12]
   14dc4:	str	r2, [sp, #20]
   14dc8:	ldr	r1, [r5, #8]
   14dcc:	ldr	r2, [r5, #4]
   14dd0:	str	r6, [sp, #16]
   14dd4:	stmib	sp, {r1, ip, lr}
   14dd8:	mov	r1, #1
   14ddc:	str	r2, [sp]
   14de0:	mov	r2, r0
   14de4:	mov	r0, r4
   14de8:	bl	10dcc <__fprintf_chk@plt>
   14dec:	add	sp, sp, #32
   14df0:	pop	{r4, r5, r6, pc}
   14df4:	mov	r2, #5
   14df8:	ldr	r1, [pc, #564]	; 15034 <__lxstat64@plt+0x41d8>
   14dfc:	mov	r0, #0
   14e00:	bl	10c94 <dcgettext@plt>
   14e04:	ldr	r3, [r5]
   14e08:	mov	r1, #1
   14e0c:	mov	r2, r0
   14e10:	mov	r0, r4
   14e14:	add	sp, sp, #32
   14e18:	pop	{r4, r5, r6, lr}
   14e1c:	b	10dcc <__fprintf_chk@plt>
   14e20:	mov	r2, #5
   14e24:	ldr	r1, [pc, #524]	; 15038 <__lxstat64@plt+0x41dc>
   14e28:	mov	r0, #0
   14e2c:	bl	10c94 <dcgettext@plt>
   14e30:	ldr	r2, [r5, #4]
   14e34:	ldr	r3, [r5]
   14e38:	mov	r1, #1
   14e3c:	str	r2, [sp, #48]	; 0x30
   14e40:	mov	r2, r0
   14e44:	mov	r0, r4
   14e48:	add	sp, sp, #32
   14e4c:	pop	{r4, r5, r6, lr}
   14e50:	b	10dcc <__fprintf_chk@plt>
   14e54:	mov	r2, #5
   14e58:	ldr	r1, [pc, #476]	; 1503c <__lxstat64@plt+0x41e0>
   14e5c:	mov	r0, #0
   14e60:	bl	10c94 <dcgettext@plt>
   14e64:	ldr	r1, [r5, #8]
   14e68:	ldr	r2, [r5, #4]
   14e6c:	ldr	r3, [r5]
   14e70:	str	r1, [sp, #52]	; 0x34
   14e74:	str	r2, [sp, #48]	; 0x30
   14e78:	mov	r1, #1
   14e7c:	mov	r2, r0
   14e80:	mov	r0, r4
   14e84:	add	sp, sp, #32
   14e88:	pop	{r4, r5, r6, lr}
   14e8c:	b	10dcc <__fprintf_chk@plt>
   14e90:	mov	r2, #5
   14e94:	ldr	r1, [pc, #420]	; 15040 <__lxstat64@plt+0x41e4>
   14e98:	mov	r0, #0
   14e9c:	bl	10c94 <dcgettext@plt>
   14ea0:	ldr	r1, [r5, #8]
   14ea4:	ldr	ip, [r5, #12]
   14ea8:	ldr	r2, [r5, #4]
   14eac:	ldr	r3, [r5]
   14eb0:	stmib	sp, {r1, ip}
   14eb4:	str	r2, [sp]
   14eb8:	mov	r1, #1
   14ebc:	mov	r2, r0
   14ec0:	mov	r0, r4
   14ec4:	bl	10dcc <__fprintf_chk@plt>
   14ec8:	b	14dec <__lxstat64@plt+0x3f90>
   14ecc:	mov	r2, #5
   14ed0:	ldr	r1, [pc, #364]	; 15044 <__lxstat64@plt+0x41e8>
   14ed4:	mov	r0, #0
   14ed8:	bl	10c94 <dcgettext@plt>
   14edc:	add	r1, r5, #8
   14ee0:	ldr	r2, [r5, #4]
   14ee4:	ldm	r1, {r1, ip, lr}
   14ee8:	ldr	r3, [r5]
   14eec:	str	r2, [sp]
   14ef0:	stmib	sp, {r1, ip, lr}
   14ef4:	mov	r1, #1
   14ef8:	mov	r2, r0
   14efc:	mov	r0, r4
   14f00:	bl	10dcc <__fprintf_chk@plt>
   14f04:	b	14dec <__lxstat64@plt+0x3f90>
   14f08:	mov	r2, #5
   14f0c:	ldr	r1, [pc, #308]	; 15048 <__lxstat64@plt+0x41ec>
   14f10:	mov	r0, #0
   14f14:	bl	10c94 <dcgettext@plt>
   14f18:	add	r1, r5, #8
   14f1c:	ldr	r2, [r5, #4]
   14f20:	ldm	r1, {r1, ip, lr}
   14f24:	ldr	r6, [r5, #20]
   14f28:	ldr	r3, [r5]
   14f2c:	stmib	sp, {r1, ip, lr}
   14f30:	mov	r1, #1
   14f34:	str	r2, [sp]
   14f38:	str	r6, [sp, #16]
   14f3c:	mov	r2, r0
   14f40:	mov	r0, r4
   14f44:	bl	10dcc <__fprintf_chk@plt>
   14f48:	b	14dec <__lxstat64@plt+0x3f90>
   14f4c:	mov	r2, #5
   14f50:	ldr	r1, [pc, #244]	; 1504c <__lxstat64@plt+0x41f0>
   14f54:	mov	r0, #0
   14f58:	bl	10c94 <dcgettext@plt>
   14f5c:	ldr	r2, [r5, #24]
   14f60:	ldr	r3, [r5]
   14f64:	ldr	r6, [r5, #20]
   14f68:	ldr	lr, [r5, #16]
   14f6c:	ldr	ip, [r5, #12]
   14f70:	str	r2, [sp, #20]
   14f74:	ldr	r1, [r5, #8]
   14f78:	ldr	r2, [r5, #4]
   14f7c:	str	r6, [sp, #16]
   14f80:	stmib	sp, {r1, ip, lr}
   14f84:	mov	r1, #1
   14f88:	str	r2, [sp]
   14f8c:	mov	r2, r0
   14f90:	mov	r0, r4
   14f94:	bl	10dcc <__fprintf_chk@plt>
   14f98:	b	14dec <__lxstat64@plt+0x3f90>
   14f9c:	mov	r2, #5
   14fa0:	ldr	r1, [pc, #168]	; 15050 <__lxstat64@plt+0x41f4>
   14fa4:	mov	r0, #0
   14fa8:	bl	10c94 <dcgettext@plt>
   14fac:	ldr	r1, [r5, #28]
   14fb0:	ldr	r2, [r5, #24]
   14fb4:	ldr	r3, [r5]
   14fb8:	ldr	r6, [r5, #20]
   14fbc:	ldr	lr, [r5, #16]
   14fc0:	str	r1, [sp, #24]
   14fc4:	ldr	ip, [r5, #12]
   14fc8:	str	r2, [sp, #20]
   14fcc:	ldr	r1, [r5, #8]
   14fd0:	ldr	r2, [r5, #4]
   14fd4:	str	r6, [sp, #16]
   14fd8:	stmib	sp, {r1, ip, lr}
   14fdc:	mov	r1, #1
   14fe0:	str	r2, [sp]
   14fe4:	mov	r2, r0
   14fe8:	mov	r0, r4
   14fec:	bl	10dcc <__fprintf_chk@plt>
   14ff0:	b	14dec <__lxstat64@plt+0x3f90>
   14ff4:	str	r3, [sp]
   14ff8:	mov	r1, #1
   14ffc:	mov	r3, r2
   15000:	ldr	r2, [pc, #76]	; 15054 <__lxstat64@plt+0x41f8>
   15004:	bl	10dcc <__fprintf_chk@plt>
   15008:	b	14cf4 <__lxstat64@plt+0x3e98>
   1500c:	mov	r2, #5
   15010:	ldr	r1, [pc, #64]	; 15058 <__lxstat64@plt+0x41fc>
   15014:	b	14d98 <__lxstat64@plt+0x3f3c>
   15018:	andeq	r7, r1, r8, lsl #11
   1501c:	muleq	r1, ip, r5
   15020:	andeq	r0, r0, r6, ror #15
   15024:	andeq	r7, r1, r4, ror r8
   15028:	andeq	r7, r1, r0, lsr #11
   1502c:	andeq	r7, r1, ip, asr #12
   15030:	andeq	r7, r1, ip, ror r7
   15034:	andeq	r7, r1, r0, ror r6
   15038:	andeq	r7, r1, r0, lsl #13
   1503c:	muleq	r1, r8, r6
   15040:			; <UNDEFINED> instruction: 0x000176b4
   15044:	ldrdeq	r7, [r1], -r4
   15048:	strdeq	r7, [r1], -r8
   1504c:	andeq	r7, r1, r0, lsr #14
   15050:	andeq	r7, r1, ip, asr #14
   15054:	muleq	r1, r4, r5
   15058:			; <UNDEFINED> instruction: 0x000177b0
   1505c:	push	{r4, r5, lr}
   15060:	sub	sp, sp, #12
   15064:	ldr	r5, [sp, #24]
   15068:	ldr	ip, [r5]
   1506c:	cmp	ip, #0
   15070:	beq	1508c <__lxstat64@plt+0x4230>
   15074:	mov	lr, r5
   15078:	mov	ip, #0
   1507c:	ldr	r4, [lr, #4]!
   15080:	add	ip, ip, #1
   15084:	cmp	r4, #0
   15088:	bne	1507c <__lxstat64@plt+0x4220>
   1508c:	stm	sp, {r5, ip}
   15090:	bl	14cc4 <__lxstat64@plt+0x3e68>
   15094:	add	sp, sp, #12
   15098:	pop	{r4, r5, pc}
   1509c:	push	{r4, r5, lr}
   150a0:	sub	sp, sp, #52	; 0x34
   150a4:	add	r5, sp, #4
   150a8:	ldr	r4, [sp, #64]	; 0x40
   150ac:	mov	ip, #0
   150b0:	sub	r4, r4, #4
   150b4:	ldr	lr, [r4, #4]!
   150b8:	cmp	lr, #0
   150bc:	str	lr, [r5, #4]!
   150c0:	beq	150d0 <__lxstat64@plt+0x4274>
   150c4:	add	ip, ip, #1
   150c8:	cmp	ip, #10
   150cc:	bne	150b4 <__lxstat64@plt+0x4258>
   150d0:	add	lr, sp, #8
   150d4:	str	ip, [sp, #4]
   150d8:	str	lr, [sp]
   150dc:	bl	14cc4 <__lxstat64@plt+0x3e68>
   150e0:	add	sp, sp, #52	; 0x34
   150e4:	pop	{r4, r5, pc}
   150e8:	push	{r3}		; (str r3, [sp, #-4]!)
   150ec:	push	{r4, lr}
   150f0:	sub	sp, sp, #60	; 0x3c
   150f4:	add	lr, sp, #56	; 0x38
   150f8:	add	r3, sp, #72	; 0x48
   150fc:	str	r3, [lr, #-44]!	; 0xffffffd4
   15100:	add	r4, sp, #68	; 0x44
   15104:	mov	r3, #0
   15108:	ldr	ip, [r4, #4]!
   1510c:	cmp	ip, #0
   15110:	str	ip, [lr, #4]!
   15114:	beq	15124 <__lxstat64@plt+0x42c8>
   15118:	add	r3, r3, #1
   1511c:	cmp	r3, #10
   15120:	bne	15108 <__lxstat64@plt+0x42ac>
   15124:	add	ip, sp, #16
   15128:	str	r3, [sp, #4]
   1512c:	str	ip, [sp]
   15130:	ldr	r3, [sp, #68]	; 0x44
   15134:	bl	14cc4 <__lxstat64@plt+0x3e68>
   15138:	add	sp, sp, #60	; 0x3c
   1513c:	pop	{r4, lr}
   15140:	add	sp, sp, #4
   15144:	bx	lr
   15148:	ldr	r3, [pc, #116]	; 151c4 <__lxstat64@plt+0x4368>
   1514c:	push	{r4, lr}
   15150:	mov	r0, #10
   15154:	ldr	r1, [r3]
   15158:	bl	10c88 <fputc_unlocked@plt>
   1515c:	mov	r2, #5
   15160:	ldr	r1, [pc, #96]	; 151c8 <__lxstat64@plt+0x436c>
   15164:	mov	r0, #0
   15168:	bl	10c94 <dcgettext@plt>
   1516c:	ldr	r2, [pc, #88]	; 151cc <__lxstat64@plt+0x4370>
   15170:	mov	r1, r0
   15174:	mov	r0, #1
   15178:	bl	10db4 <__printf_chk@plt>
   1517c:	mov	r2, #5
   15180:	ldr	r1, [pc, #72]	; 151d0 <__lxstat64@plt+0x4374>
   15184:	mov	r0, #0
   15188:	bl	10c94 <dcgettext@plt>
   1518c:	ldr	r3, [pc, #64]	; 151d4 <__lxstat64@plt+0x4378>
   15190:	ldr	r2, [pc, #64]	; 151d8 <__lxstat64@plt+0x437c>
   15194:	mov	r1, r0
   15198:	mov	r0, #1
   1519c:	bl	10db4 <__printf_chk@plt>
   151a0:	mov	r2, #5
   151a4:	ldr	r1, [pc, #48]	; 151dc <__lxstat64@plt+0x4380>
   151a8:	mov	r0, #0
   151ac:	bl	10c94 <dcgettext@plt>
   151b0:	ldr	r2, [pc, #40]	; 151e0 <__lxstat64@plt+0x4384>
   151b4:	pop	{r4, lr}
   151b8:	mov	r1, r0
   151bc:	mov	r0, #1
   151c0:	b	10db4 <__printf_chk@plt>
   151c4:	andeq	r8, r2, ip, lsr r1
   151c8:	andeq	r7, r1, ip, ror #15
   151cc:	andeq	r7, r1, r0, lsl #16
   151d0:	andeq	r7, r1, r8, lsl r8
   151d4:	andeq	r7, r1, r4, ror r2
   151d8:	muleq	r1, ip, r2
   151dc:	andeq	r7, r1, ip, lsr #16
   151e0:	andeq	r7, r1, r4, asr r8
   151e4:	push	{r4, lr}
   151e8:	bl	1591c <__lxstat64@plt+0x4ac0>
   151ec:	cmp	r0, #0
   151f0:	popne	{r4, pc}
   151f4:	bl	1572c <__lxstat64@plt+0x48d0>
   151f8:	push	{r4, lr}
   151fc:	bl	1591c <__lxstat64@plt+0x4ac0>
   15200:	cmp	r0, #0
   15204:	popne	{r4, pc}
   15208:	bl	1572c <__lxstat64@plt+0x48d0>
   1520c:	push	{r4, lr}
   15210:	bl	1591c <__lxstat64@plt+0x4ac0>
   15214:	cmp	r0, #0
   15218:	popne	{r4, pc}
   1521c:	bl	1572c <__lxstat64@plt+0x48d0>
   15220:	push	{r4, r5, r6, lr}
   15224:	mov	r5, r0
   15228:	mov	r4, r1
   1522c:	bl	15948 <__lxstat64@plt+0x4aec>
   15230:	cmp	r0, #0
   15234:	popne	{r4, r5, r6, pc}
   15238:	adds	r4, r4, #0
   1523c:	movne	r4, #1
   15240:	cmp	r5, #0
   15244:	orreq	r4, r4, #1
   15248:	cmp	r4, #0
   1524c:	popeq	{r4, r5, r6, pc}
   15250:	bl	1572c <__lxstat64@plt+0x48d0>
   15254:	push	{r4, lr}
   15258:	cmp	r1, #0
   1525c:	orreq	r1, r1, #1
   15260:	bl	15948 <__lxstat64@plt+0x4aec>
   15264:	cmp	r0, #0
   15268:	popne	{r4, pc}
   1526c:	bl	1572c <__lxstat64@plt+0x48d0>
   15270:	push	{r4, r5, r6, lr}
   15274:	mov	r6, r0
   15278:	mov	r5, r1
   1527c:	mov	r4, r2
   15280:	bl	15ca0 <__lxstat64@plt+0x4e44>
   15284:	cmp	r0, #0
   15288:	popne	{r4, r5, r6, pc}
   1528c:	cmp	r6, #0
   15290:	beq	152a0 <__lxstat64@plt+0x4444>
   15294:	cmp	r5, #0
   15298:	cmpne	r4, #0
   1529c:	popeq	{r4, r5, r6, pc}
   152a0:	bl	1572c <__lxstat64@plt+0x48d0>
   152a4:	b	15270 <__lxstat64@plt+0x4414>
   152a8:	cmp	r2, #0
   152ac:	cmpne	r1, #0
   152b0:	moveq	r2, #1
   152b4:	moveq	r1, r2
   152b8:	push	{r4, lr}
   152bc:	bl	15ca0 <__lxstat64@plt+0x4e44>
   152c0:	cmp	r0, #0
   152c4:	popne	{r4, pc}
   152c8:	bl	1572c <__lxstat64@plt+0x48d0>
   152cc:	mov	r2, r1
   152d0:	mov	r1, r0
   152d4:	mov	r0, #0
   152d8:	b	15270 <__lxstat64@plt+0x4414>
   152dc:	mov	r2, r1
   152e0:	mov	r1, r0
   152e4:	mov	r0, #0
   152e8:	b	152a8 <__lxstat64@plt+0x444c>
   152ec:	push	{r4, r5, r6, lr}
   152f0:	subs	r6, r0, #0
   152f4:	sub	sp, sp, #8
   152f8:	mov	r5, r1
   152fc:	ldr	r4, [r1]
   15300:	beq	1533c <__lxstat64@plt+0x44e0>
   15304:	lsr	r1, r4, #1
   15308:	add	r3, r1, #1
   1530c:	mvn	r3, r3
   15310:	cmp	r4, r3
   15314:	bhi	15338 <__lxstat64@plt+0x44dc>
   15318:	add	r4, r4, #1
   1531c:	add	r4, r4, r1
   15320:	mov	r0, r6
   15324:	mov	r1, r4
   15328:	bl	15270 <__lxstat64@plt+0x4414>
   1532c:	str	r4, [r5]
   15330:	add	sp, sp, #8
   15334:	pop	{r4, r5, r6, pc}
   15338:	bl	1572c <__lxstat64@plt+0x48d0>
   1533c:	cmp	r4, #0
   15340:	bne	15320 <__lxstat64@plt+0x44c4>
   15344:	mov	r1, r2
   15348:	mov	r0, #64	; 0x40
   1534c:	str	r2, [sp, #4]
   15350:	bl	15de0 <__lxstat64@plt+0x4f84>
   15354:	ldr	r2, [sp, #4]
   15358:	cmp	r0, #0
   1535c:	movne	r4, r0
   15360:	addeq	r4, r0, #1
   15364:	b	15320 <__lxstat64@plt+0x44c4>
   15368:	mov	r2, #1
   1536c:	b	152ec <__lxstat64@plt+0x4490>
   15370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15374:	sub	sp, sp, #12
   15378:	ldr	r6, [r1]
   1537c:	mov	sl, r1
   15380:	mov	r9, r0
   15384:	asrs	r4, r6, #1
   15388:	mov	r5, r2
   1538c:	mov	fp, r3
   15390:	ldr	r7, [sp, #48]	; 0x30
   15394:	bmi	15500 <__lxstat64@plt+0x46a4>
   15398:	mvn	r3, #-2147483648	; 0x80000000
   1539c:	sub	r3, r3, r4
   153a0:	cmp	r6, r3
   153a4:	movle	r3, #0
   153a8:	movgt	r3, #1
   153ac:	mvn	r8, fp
   153b0:	cmp	r3, #0
   153b4:	addeq	r4, r4, r6
   153b8:	mvnne	r4, #-2147483648	; 0x80000000
   153bc:	lsr	r8, r8, #31
   153c0:	cmp	fp, r4
   153c4:	movge	r3, #0
   153c8:	andlt	r3, r8, #1
   153cc:	cmp	r3, #0
   153d0:	beq	154b8 <__lxstat64@plt+0x465c>
   153d4:	cmp	r7, #0
   153d8:	blt	15588 <__lxstat64@plt+0x472c>
   153dc:	bne	15580 <__lxstat64@plt+0x4724>
   153e0:	mov	r2, #64	; 0x40
   153e4:	mov	r1, r7
   153e8:	mov	r0, r2
   153ec:	str	r2, [sp, #4]
   153f0:	bl	15fec <__lxstat64@plt+0x5190>
   153f4:	ldr	r2, [sp, #4]
   153f8:	mov	r1, r7
   153fc:	mov	r4, r0
   15400:	mov	r0, r2
   15404:	bl	1620c <__lxstat64@plt+0x53b0>
   15408:	ldr	r2, [sp, #4]
   1540c:	sub	r1, r2, r1
   15410:	cmp	r9, #0
   15414:	sub	r3, r4, r6
   15418:	streq	r9, [sl]
   1541c:	cmp	r3, r5
   15420:	bge	154a4 <__lxstat64@plt+0x4648>
   15424:	cmp	r5, #0
   15428:	blt	15514 <__lxstat64@plt+0x46b8>
   1542c:	cmp	r6, #0
   15430:	blt	15450 <__lxstat64@plt+0x45f4>
   15434:	mvn	r3, #-2147483648	; 0x80000000
   15438:	sub	r3, r3, r5
   1543c:	cmp	r6, r3
   15440:	movle	r3, #0
   15444:	movgt	r3, #1
   15448:	cmp	r3, #0
   1544c:	bne	15610 <__lxstat64@plt+0x47b4>
   15450:	add	r5, r6, r5
   15454:	cmp	fp, r5
   15458:	movge	r8, #0
   1545c:	andlt	r8, r8, #1
   15460:	cmp	r8, #0
   15464:	mov	r4, r5
   15468:	bne	15610 <__lxstat64@plt+0x47b4>
   1546c:	cmp	r7, #0
   15470:	blt	15528 <__lxstat64@plt+0x46cc>
   15474:	beq	154a0 <__lxstat64@plt+0x4644>
   15478:	cmp	r5, #0
   1547c:	blt	155d0 <__lxstat64@plt+0x4774>
   15480:	mov	r1, r7
   15484:	mvn	r0, #-2147483648	; 0x80000000
   15488:	bl	15fec <__lxstat64@plt+0x5190>
   1548c:	cmp	r5, r0
   15490:	movle	r0, #0
   15494:	movgt	r0, #1
   15498:	cmp	r0, #0
   1549c:	bne	15610 <__lxstat64@plt+0x47b4>
   154a0:	mul	r1, r5, r7
   154a4:	mov	r0, r9
   154a8:	bl	15220 <__lxstat64@plt+0x43c4>
   154ac:	str	r4, [sl]
   154b0:	add	sp, sp, #12
   154b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154b8:	cmp	r7, #0
   154bc:	blt	15554 <__lxstat64@plt+0x46f8>
   154c0:	beq	153e0 <__lxstat64@plt+0x4584>
   154c4:	cmp	r4, #0
   154c8:	blt	15590 <__lxstat64@plt+0x4734>
   154cc:	mov	r1, r7
   154d0:	mvn	r0, #-2147483648	; 0x80000000
   154d4:	bl	15fec <__lxstat64@plt+0x5190>
   154d8:	cmp	r0, r4
   154dc:	movge	r0, #0
   154e0:	movlt	r0, #1
   154e4:	cmp	r0, #0
   154e8:	mvnne	r2, #-2147483648	; 0x80000000
   154ec:	bne	153e4 <__lxstat64@plt+0x4588>
   154f0:	mul	r1, r7, r4
   154f4:	cmp	r1, #63	; 0x3f
   154f8:	bgt	15410 <__lxstat64@plt+0x45b4>
   154fc:	b	153e0 <__lxstat64@plt+0x4584>
   15500:	rsb	r3, r4, #-2147483648	; 0x80000000
   15504:	cmp	r6, r3
   15508:	movge	r3, #0
   1550c:	movlt	r3, #1
   15510:	b	153ac <__lxstat64@plt+0x4550>
   15514:	rsb	r3, r5, #-2147483648	; 0x80000000
   15518:	cmp	r6, r3
   1551c:	movge	r3, #0
   15520:	movlt	r3, #1
   15524:	b	15448 <__lxstat64@plt+0x45ec>
   15528:	cmp	r5, #0
   1552c:	blt	155b4 <__lxstat64@plt+0x4758>
   15530:	cmn	r7, #1
   15534:	beq	154a0 <__lxstat64@plt+0x4644>
   15538:	mov	r1, r7
   1553c:	mov	r0, #-2147483648	; 0x80000000
   15540:	bl	15fec <__lxstat64@plt+0x5190>
   15544:	cmp	r5, r0
   15548:	movle	r0, #0
   1554c:	movgt	r0, #1
   15550:	b	15498 <__lxstat64@plt+0x463c>
   15554:	cmp	r4, #0
   15558:	blt	155f4 <__lxstat64@plt+0x4798>
   1555c:	cmn	r7, #1
   15560:	beq	154f0 <__lxstat64@plt+0x4694>
   15564:	mov	r1, r7
   15568:	mov	r0, #-2147483648	; 0x80000000
   1556c:	bl	15fec <__lxstat64@plt+0x5190>
   15570:	cmp	r0, r4
   15574:	movge	r0, #0
   15578:	movlt	r0, #1
   1557c:	b	154e4 <__lxstat64@plt+0x4688>
   15580:	mov	r4, fp
   15584:	b	154cc <__lxstat64@plt+0x4670>
   15588:	mov	r4, fp
   1558c:	b	1555c <__lxstat64@plt+0x4700>
   15590:	cmn	r4, #1
   15594:	beq	154f0 <__lxstat64@plt+0x4694>
   15598:	mov	r1, r4
   1559c:	mov	r0, #-2147483648	; 0x80000000
   155a0:	bl	15fec <__lxstat64@plt+0x5190>
   155a4:	cmp	r7, r0
   155a8:	movle	r0, #0
   155ac:	movgt	r0, #1
   155b0:	b	154e4 <__lxstat64@plt+0x4688>
   155b4:	mov	r1, r7
   155b8:	mvn	r0, #-2147483648	; 0x80000000
   155bc:	bl	15fec <__lxstat64@plt+0x5190>
   155c0:	cmp	r5, r0
   155c4:	movge	r0, #0
   155c8:	movlt	r0, #1
   155cc:	b	15498 <__lxstat64@plt+0x463c>
   155d0:	cmn	r5, #1
   155d4:	beq	154a0 <__lxstat64@plt+0x4644>
   155d8:	mov	r1, r5
   155dc:	mov	r0, #-2147483648	; 0x80000000
   155e0:	bl	15fec <__lxstat64@plt+0x5190>
   155e4:	cmp	r7, r0
   155e8:	movle	r0, #0
   155ec:	movgt	r0, #1
   155f0:	b	15498 <__lxstat64@plt+0x463c>
   155f4:	mov	r1, r7
   155f8:	mvn	r0, #-2147483648	; 0x80000000
   155fc:	bl	15fec <__lxstat64@plt+0x5190>
   15600:	cmp	r0, r4
   15604:	movle	r0, #0
   15608:	movgt	r0, #1
   1560c:	b	154e4 <__lxstat64@plt+0x4688>
   15610:	bl	1572c <__lxstat64@plt+0x48d0>
   15614:	push	{r4, lr}
   15618:	mov	r1, #1
   1561c:	bl	158d4 <__lxstat64@plt+0x4a78>
   15620:	cmp	r0, #0
   15624:	popne	{r4, pc}
   15628:	bl	1572c <__lxstat64@plt+0x48d0>
   1562c:	push	{r4, lr}
   15630:	mov	r1, #1
   15634:	bl	158d4 <__lxstat64@plt+0x4a78>
   15638:	cmp	r0, #0
   1563c:	popne	{r4, pc}
   15640:	bl	1572c <__lxstat64@plt+0x48d0>
   15644:	push	{r4, lr}
   15648:	bl	158d4 <__lxstat64@plt+0x4a78>
   1564c:	cmp	r0, #0
   15650:	popne	{r4, pc}
   15654:	bl	1572c <__lxstat64@plt+0x48d0>
   15658:	push	{r4, lr}
   1565c:	bl	158d4 <__lxstat64@plt+0x4a78>
   15660:	cmp	r0, #0
   15664:	popne	{r4, pc}
   15668:	bl	1572c <__lxstat64@plt+0x48d0>
   1566c:	push	{r4, r5, r6, lr}
   15670:	mov	r6, r0
   15674:	mov	r0, r1
   15678:	mov	r4, r1
   1567c:	bl	1591c <__lxstat64@plt+0x4ac0>
   15680:	subs	r5, r0, #0
   15684:	beq	1569c <__lxstat64@plt+0x4840>
   15688:	mov	r2, r4
   1568c:	mov	r1, r6
   15690:	bl	10c64 <memcpy@plt>
   15694:	mov	r0, r5
   15698:	pop	{r4, r5, r6, pc}
   1569c:	bl	1572c <__lxstat64@plt+0x48d0>
   156a0:	push	{r4, r5, r6, lr}
   156a4:	mov	r6, r0
   156a8:	mov	r0, r1
   156ac:	mov	r4, r1
   156b0:	bl	1591c <__lxstat64@plt+0x4ac0>
   156b4:	subs	r5, r0, #0
   156b8:	beq	156d0 <__lxstat64@plt+0x4874>
   156bc:	mov	r2, r4
   156c0:	mov	r1, r6
   156c4:	bl	10c64 <memcpy@plt>
   156c8:	mov	r0, r5
   156cc:	pop	{r4, r5, r6, pc}
   156d0:	bl	1572c <__lxstat64@plt+0x48d0>
   156d4:	push	{r4, r5, r6, lr}
   156d8:	mov	r6, r0
   156dc:	add	r0, r1, #1
   156e0:	mov	r4, r1
   156e4:	bl	1591c <__lxstat64@plt+0x4ac0>
   156e8:	subs	r5, r0, #0
   156ec:	beq	1570c <__lxstat64@plt+0x48b0>
   156f0:	mov	r3, #0
   156f4:	mov	r1, r6
   156f8:	strb	r3, [r5, r4]
   156fc:	mov	r2, r4
   15700:	bl	10c64 <memcpy@plt>
   15704:	mov	r0, r5
   15708:	pop	{r4, r5, r6, pc}
   1570c:	bl	1572c <__lxstat64@plt+0x48d0>
   15710:	push	{r4, lr}
   15714:	mov	r4, r0
   15718:	bl	10d78 <strlen@plt>
   1571c:	add	r1, r0, #1
   15720:	mov	r0, r4
   15724:	pop	{r4, lr}
   15728:	b	1566c <__lxstat64@plt+0x4810>
   1572c:	ldr	r3, [pc, #44]	; 15760 <__lxstat64@plt+0x4904>
   15730:	push	{r4, lr}
   15734:	mov	r2, #5
   15738:	ldr	r1, [pc, #36]	; 15764 <__lxstat64@plt+0x4908>
   1573c:	mov	r0, #0
   15740:	ldr	r4, [r3]
   15744:	bl	10c94 <dcgettext@plt>
   15748:	ldr	r2, [pc, #24]	; 15768 <__lxstat64@plt+0x490c>
   1574c:	mov	r1, #0
   15750:	mov	r3, r0
   15754:	mov	r0, r4
   15758:	bl	10d18 <error@plt>
   1575c:	bl	10e50 <abort@plt>
   15760:	andeq	r8, r2, r8, ror #1
   15764:	andeq	r7, r1, r4, lsr #17
   15768:	andeq	r7, r1, r8, asr #8
   1576c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15770:	sub	sp, sp, #12
   15774:	subs	r7, r0, #0
   15778:	str	r1, [sp, #4]
   1577c:	beq	1581c <__lxstat64@plt+0x49c0>
   15780:	mov	r9, r1
   15784:	mov	r5, r1
   15788:	mov	r6, r7
   1578c:	mov	r4, #0
   15790:	add	r5, r5, #4
   15794:	str	r5, [sp, #4]
   15798:	ldr	r0, [r5, #-4]
   1579c:	bl	10d78 <strlen@plt>
   157a0:	adds	r4, r0, r4
   157a4:	mvncs	r4, #0
   157a8:	subs	r6, r6, #1
   157ac:	bne	15790 <__lxstat64@plt+0x4934>
   157b0:	cmp	r4, #0
   157b4:	blt	1580c <__lxstat64@plt+0x49b0>
   157b8:	add	r0, r4, #1
   157bc:	bl	151e4 <__lxstat64@plt+0x4388>
   157c0:	sub	r9, r9, #4
   157c4:	mov	r6, r0
   157c8:	mov	r4, r0
   157cc:	ldr	r8, [r9, #4]!
   157d0:	mov	r0, r8
   157d4:	bl	10d78 <strlen@plt>
   157d8:	mov	r1, r8
   157dc:	mov	r5, r0
   157e0:	mov	r2, r0
   157e4:	mov	r0, r4
   157e8:	bl	10c64 <memcpy@plt>
   157ec:	subs	r7, r7, #1
   157f0:	add	r4, r4, r5
   157f4:	bne	157cc <__lxstat64@plt+0x4970>
   157f8:	mov	r3, #0
   157fc:	strb	r3, [r4]
   15800:	mov	r0, r6
   15804:	add	sp, sp, #12
   15808:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1580c:	bl	10d84 <__errno_location@plt>
   15810:	mov	r3, #75	; 0x4b
   15814:	str	r3, [r0]
   15818:	b	15800 <__lxstat64@plt+0x49a4>
   1581c:	mov	r0, #1
   15820:	bl	151e4 <__lxstat64@plt+0x4388>
   15824:	mov	r4, r0
   15828:	mov	r6, r0
   1582c:	b	157f8 <__lxstat64@plt+0x499c>
   15830:	push	{r4, lr}
   15834:	sub	sp, sp, #8
   15838:	ldrb	r4, [r0]
   1583c:	cmp	r4, #0
   15840:	beq	1588c <__lxstat64@plt+0x4a30>
   15844:	cmp	r4, #37	; 0x25
   15848:	bne	1589c <__lxstat64@plt+0x4a40>
   1584c:	ldrb	r3, [r0, #1]
   15850:	cmp	r3, #115	; 0x73
   15854:	bne	1589c <__lxstat64@plt+0x4a40>
   15858:	mov	ip, r0
   1585c:	mov	r4, #0
   15860:	b	1587c <__lxstat64@plt+0x4a20>
   15864:	cmp	lr, #37	; 0x25
   15868:	bne	1589c <__lxstat64@plt+0x4a40>
   1586c:	add	ip, ip, #2
   15870:	ldrb	lr, [ip, #1]
   15874:	cmp	lr, #115	; 0x73
   15878:	bne	1589c <__lxstat64@plt+0x4a40>
   1587c:	ldrb	lr, [ip, #2]
   15880:	add	r4, r4, #1
   15884:	cmp	lr, #0
   15888:	bne	15864 <__lxstat64@plt+0x4a08>
   1588c:	mov	r0, r4
   15890:	bl	1576c <__lxstat64@plt+0x4910>
   15894:	add	sp, sp, #8
   15898:	pop	{r4, pc}
   1589c:	mov	r3, r1
   158a0:	mov	r2, r0
   158a4:	mov	r1, #1
   158a8:	add	r0, sp, #4
   158ac:	bl	10d9c <__vasprintf_chk@plt>
   158b0:	cmp	r0, #0
   158b4:	ldrge	r0, [sp, #4]
   158b8:	bge	15894 <__lxstat64@plt+0x4a38>
   158bc:	bl	10d84 <__errno_location@plt>
   158c0:	ldr	r3, [r0]
   158c4:	cmp	r3, #12
   158c8:	movne	r0, #0
   158cc:	bne	15894 <__lxstat64@plt+0x4a38>
   158d0:	bl	1572c <__lxstat64@plt+0x48d0>
   158d4:	cmp	r1, #0
   158d8:	cmpne	r0, #0
   158dc:	moveq	r1, #1
   158e0:	moveq	r0, r1
   158e4:	umull	r2, r3, r0, r1
   158e8:	adds	r3, r3, #0
   158ec:	movne	r3, #1
   158f0:	cmp	r2, #0
   158f4:	blt	15904 <__lxstat64@plt+0x4aa8>
   158f8:	cmp	r3, #0
   158fc:	bne	15904 <__lxstat64@plt+0x4aa8>
   15900:	b	10c04 <calloc@plt>
   15904:	push	{r4, lr}
   15908:	bl	10d84 <__errno_location@plt>
   1590c:	mov	r3, #12
   15910:	str	r3, [r0]
   15914:	mov	r0, #0
   15918:	pop	{r4, pc}
   1591c:	cmp	r0, #0
   15920:	moveq	r0, #1
   15924:	cmp	r0, #0
   15928:	blt	15930 <__lxstat64@plt+0x4ad4>
   1592c:	b	10d24 <malloc@plt>
   15930:	push	{r4, lr}
   15934:	bl	10d84 <__errno_location@plt>
   15938:	mov	r3, #12
   1593c:	str	r3, [r0]
   15940:	mov	r0, #0
   15944:	pop	{r4, pc}
   15948:	cmp	r0, #0
   1594c:	beq	15970 <__lxstat64@plt+0x4b14>
   15950:	cmp	r1, #0
   15954:	push	{lr}		; (str lr, [sp, #-4]!)
   15958:	sub	sp, sp, #12
   1595c:	beq	15978 <__lxstat64@plt+0x4b1c>
   15960:	blt	15990 <__lxstat64@plt+0x4b34>
   15964:	add	sp, sp, #12
   15968:	pop	{lr}		; (ldr lr, [sp], #4)
   1596c:	b	10ca0 <realloc@plt>
   15970:	mov	r0, r1
   15974:	b	1591c <__lxstat64@plt+0x4ac0>
   15978:	str	r1, [sp, #4]
   1597c:	bl	15b20 <__lxstat64@plt+0x4cc4>
   15980:	ldr	r3, [sp, #4]
   15984:	mov	r0, r3
   15988:	add	sp, sp, #12
   1598c:	pop	{pc}		; (ldr pc, [sp], #4)
   15990:	bl	10d84 <__errno_location@plt>
   15994:	mov	r2, #12
   15998:	mov	r3, #0
   1599c:	str	r2, [r0]
   159a0:	b	15984 <__lxstat64@plt+0x4b28>
   159a4:	push	{r4, r5, r6, lr}
   159a8:	mov	r4, r0
   159ac:	bl	10d00 <__fpending@plt>
   159b0:	ldr	r5, [r4]
   159b4:	and	r5, r5, #32
   159b8:	mov	r6, r0
   159bc:	mov	r0, r4
   159c0:	bl	15a20 <__lxstat64@plt+0x4bc4>
   159c4:	cmp	r5, #0
   159c8:	mov	r4, r0
   159cc:	bne	159ec <__lxstat64@plt+0x4b90>
   159d0:	cmp	r0, #0
   159d4:	beq	159e4 <__lxstat64@plt+0x4b88>
   159d8:	cmp	r6, #0
   159dc:	beq	15a08 <__lxstat64@plt+0x4bac>
   159e0:	mvn	r4, #0
   159e4:	mov	r0, r4
   159e8:	pop	{r4, r5, r6, pc}
   159ec:	cmp	r0, #0
   159f0:	bne	159e0 <__lxstat64@plt+0x4b84>
   159f4:	bl	10d84 <__errno_location@plt>
   159f8:	str	r4, [r0]
   159fc:	mvn	r4, #0
   15a00:	mov	r0, r4
   15a04:	pop	{r4, r5, r6, pc}
   15a08:	bl	10d84 <__errno_location@plt>
   15a0c:	ldr	r4, [r0]
   15a10:	subs	r4, r4, #9
   15a14:	mvnne	r4, #0
   15a18:	mov	r0, r4
   15a1c:	pop	{r4, r5, r6, pc}
   15a20:	push	{r4, r5, lr}
   15a24:	sub	sp, sp, #12
   15a28:	mov	r4, r0
   15a2c:	bl	10dc0 <fileno@plt>
   15a30:	cmp	r0, #0
   15a34:	mov	r0, r4
   15a38:	blt	15ab4 <__lxstat64@plt+0x4c58>
   15a3c:	bl	10d48 <__freading@plt>
   15a40:	cmp	r0, #0
   15a44:	bne	15a80 <__lxstat64@plt+0x4c24>
   15a48:	mov	r0, r4
   15a4c:	bl	15ac0 <__lxstat64@plt+0x4c64>
   15a50:	cmp	r0, #0
   15a54:	beq	15ab0 <__lxstat64@plt+0x4c54>
   15a58:	bl	10d84 <__errno_location@plt>
   15a5c:	mov	r5, r0
   15a60:	mov	r0, r4
   15a64:	ldr	r4, [r5]
   15a68:	bl	10dd8 <fclose@plt>
   15a6c:	cmp	r4, #0
   15a70:	mvnne	r0, #0
   15a74:	strne	r4, [r5]
   15a78:	add	sp, sp, #12
   15a7c:	pop	{r4, r5, pc}
   15a80:	mov	r0, r4
   15a84:	bl	10dc0 <fileno@plt>
   15a88:	mov	r3, #1
   15a8c:	str	r3, [sp]
   15a90:	mov	r2, #0
   15a94:	mov	r3, #0
   15a98:	bl	10ce8 <lseek64@plt>
   15a9c:	mvn	r3, #0
   15aa0:	mvn	r2, #0
   15aa4:	cmp	r1, r3
   15aa8:	cmpeq	r0, r2
   15aac:	bne	15a48 <__lxstat64@plt+0x4bec>
   15ab0:	mov	r0, r4
   15ab4:	add	sp, sp, #12
   15ab8:	pop	{r4, r5, lr}
   15abc:	b	10dd8 <fclose@plt>
   15ac0:	push	{r4, lr}
   15ac4:	subs	r4, r0, #0
   15ac8:	sub	sp, sp, #8
   15acc:	beq	15ae8 <__lxstat64@plt+0x4c8c>
   15ad0:	bl	10d48 <__freading@plt>
   15ad4:	cmp	r0, #0
   15ad8:	beq	15ae8 <__lxstat64@plt+0x4c8c>
   15adc:	ldr	r3, [r4]
   15ae0:	tst	r3, #256	; 0x100
   15ae4:	bne	15af8 <__lxstat64@plt+0x4c9c>
   15ae8:	mov	r0, r4
   15aec:	add	sp, sp, #8
   15af0:	pop	{r4, lr}
   15af4:	b	10c40 <fflush@plt>
   15af8:	mov	r3, #1
   15afc:	str	r3, [sp]
   15b00:	mov	r2, #0
   15b04:	mov	r3, #0
   15b08:	mov	r0, r4
   15b0c:	bl	15b78 <__lxstat64@plt+0x4d1c>
   15b10:	mov	r0, r4
   15b14:	add	sp, sp, #8
   15b18:	pop	{r4, lr}
   15b1c:	b	10c40 <fflush@plt>
   15b20:	push	{r4, r5, lr}
   15b24:	sub	sp, sp, #12
   15b28:	mov	r5, r0
   15b2c:	bl	10d84 <__errno_location@plt>
   15b30:	mov	r2, #0
   15b34:	mov	r4, r0
   15b38:	ldr	r3, [r0]
   15b3c:	str	r2, [r4]
   15b40:	mov	r0, r5
   15b44:	str	r3, [sp]
   15b48:	str	r3, [sp, #4]
   15b4c:	bl	10c4c <free@plt>
   15b50:	ldr	r3, [r4]
   15b54:	add	r2, sp, #8
   15b58:	cmp	r3, #0
   15b5c:	moveq	r3, #4
   15b60:	movne	r3, #0
   15b64:	add	r3, r2, r3
   15b68:	ldr	r3, [r3, #-8]
   15b6c:	str	r3, [r4]
   15b70:	add	sp, sp, #12
   15b74:	pop	{r4, r5, pc}
   15b78:	push	{r4, r5, r6, r7, r8, lr}
   15b7c:	sub	sp, sp, #8
   15b80:	ldmib	r0, {ip, lr}
   15b84:	mov	r4, r0
   15b88:	ldr	r5, [sp, #32]
   15b8c:	cmp	lr, ip
   15b90:	beq	15ba8 <__lxstat64@plt+0x4d4c>
   15b94:	str	r5, [sp, #32]
   15b98:	mov	r0, r4
   15b9c:	add	sp, sp, #8
   15ba0:	pop	{r4, r5, r6, r7, r8, lr}
   15ba4:	b	10de4 <fseeko64@plt>
   15ba8:	ldr	lr, [r0, #20]
   15bac:	ldr	ip, [r0, #16]
   15bb0:	cmp	lr, ip
   15bb4:	bne	15b94 <__lxstat64@plt+0x4d38>
   15bb8:	ldr	r8, [r0, #36]	; 0x24
   15bbc:	cmp	r8, #0
   15bc0:	bne	15b94 <__lxstat64@plt+0x4d38>
   15bc4:	mov	r6, r2
   15bc8:	mov	r7, r3
   15bcc:	bl	10dc0 <fileno@plt>
   15bd0:	mov	r2, r6
   15bd4:	mov	r3, r7
   15bd8:	str	r5, [sp]
   15bdc:	bl	10ce8 <lseek64@plt>
   15be0:	mvn	r3, #0
   15be4:	mvn	r2, #0
   15be8:	cmp	r1, r3
   15bec:	cmpeq	r0, r2
   15bf0:	beq	15c10 <__lxstat64@plt+0x4db4>
   15bf4:	ldr	r3, [r4]
   15bf8:	strd	r0, [r4, #80]	; 0x50
   15bfc:	mov	r0, r8
   15c00:	bic	r3, r3, #16
   15c04:	str	r3, [r4]
   15c08:	add	sp, sp, #8
   15c0c:	pop	{r4, r5, r6, r7, r8, pc}
   15c10:	mvn	r0, #0
   15c14:	b	15c08 <__lxstat64@plt+0x4dac>
   15c18:	push	{r4, lr}
   15c1c:	mov	r0, #14
   15c20:	bl	10e08 <nl_langinfo@plt>
   15c24:	cmp	r0, #0
   15c28:	beq	15c40 <__lxstat64@plt+0x4de4>
   15c2c:	ldrb	r2, [r0]
   15c30:	ldr	r3, [pc, #16]	; 15c48 <__lxstat64@plt+0x4dec>
   15c34:	cmp	r2, #0
   15c38:	moveq	r0, r3
   15c3c:	pop	{r4, pc}
   15c40:	ldr	r0, [pc]	; 15c48 <__lxstat64@plt+0x4dec>
   15c44:	pop	{r4, pc}
   15c48:			; <UNDEFINED> instruction: 0x000178b8
   15c4c:	push	{r4, r5, r6, r7, lr}
   15c50:	subs	r6, r0, #0
   15c54:	sub	sp, sp, #12
   15c58:	addeq	r6, sp, #4
   15c5c:	mov	r0, r6
   15c60:	mov	r5, r2
   15c64:	mov	r7, r1
   15c68:	bl	10d0c <mbrtowc@plt>
   15c6c:	cmp	r5, #0
   15c70:	cmnne	r0, #3
   15c74:	mov	r4, r0
   15c78:	bls	15c94 <__lxstat64@plt+0x4e38>
   15c7c:	mov	r0, #0
   15c80:	bl	15cec <__lxstat64@plt+0x4e90>
   15c84:	cmp	r0, #0
   15c88:	moveq	r4, #1
   15c8c:	ldrbeq	r3, [r7]
   15c90:	streq	r3, [r6]
   15c94:	mov	r0, r4
   15c98:	add	sp, sp, #12
   15c9c:	pop	{r4, r5, r6, r7, pc}
   15ca0:	push	{r4, r5, r6, lr}
   15ca4:	subs	r4, r2, #0
   15ca8:	mov	r6, r0
   15cac:	mov	r5, r1
   15cb0:	beq	15cdc <__lxstat64@plt+0x4e80>
   15cb4:	mov	r1, r4
   15cb8:	mvn	r0, #0
   15cbc:	bl	15de0 <__lxstat64@plt+0x4f84>
   15cc0:	cmp	r0, r5
   15cc4:	bcs	15cdc <__lxstat64@plt+0x4e80>
   15cc8:	bl	10d84 <__errno_location@plt>
   15ccc:	mov	r3, #12
   15cd0:	str	r3, [r0]
   15cd4:	mov	r0, #0
   15cd8:	pop	{r4, r5, r6, pc}
   15cdc:	mul	r1, r5, r4
   15ce0:	mov	r0, r6
   15ce4:	pop	{r4, r5, r6, lr}
   15ce8:	b	15948 <__lxstat64@plt+0x4aec>
   15cec:	push	{lr}		; (str lr, [sp, #-4]!)
   15cf0:	sub	sp, sp, #268	; 0x10c
   15cf4:	add	r1, sp, #4
   15cf8:	ldr	r2, [pc, #60]	; 15d3c <__lxstat64@plt+0x4ee0>
   15cfc:	bl	15d48 <__lxstat64@plt+0x4eec>
   15d00:	cmp	r0, #0
   15d04:	movne	r0, #0
   15d08:	bne	15d34 <__lxstat64@plt+0x4ed8>
   15d0c:	ldr	r1, [pc, #44]	; 15d40 <__lxstat64@plt+0x4ee4>
   15d10:	add	r0, sp, #4
   15d14:	bl	10c28 <strcmp@plt>
   15d18:	cmp	r0, #0
   15d1c:	beq	15d34 <__lxstat64@plt+0x4ed8>
   15d20:	add	r0, sp, #4
   15d24:	ldr	r1, [pc, #24]	; 15d44 <__lxstat64@plt+0x4ee8>
   15d28:	bl	10c28 <strcmp@plt>
   15d2c:	adds	r0, r0, #0
   15d30:	movne	r0, #1
   15d34:	add	sp, sp, #268	; 0x10c
   15d38:	pop	{pc}		; (ldr pc, [sp], #4)
   15d3c:	andeq	r0, r0, r1, lsl #2
   15d40:	andeq	r7, r1, r0, asr #17
   15d44:	andeq	r7, r1, r4, asr #17
   15d48:	push	{r4, r5, r6, lr}
   15d4c:	mov	r5, r1
   15d50:	mov	r1, #0
   15d54:	mov	r4, r2
   15d58:	bl	10df0 <setlocale@plt>
   15d5c:	subs	r6, r0, #0
   15d60:	beq	15dbc <__lxstat64@plt+0x4f60>
   15d64:	bl	10d78 <strlen@plt>
   15d68:	cmp	r4, r0
   15d6c:	bhi	15da4 <__lxstat64@plt+0x4f48>
   15d70:	cmp	r4, #0
   15d74:	bne	15d80 <__lxstat64@plt+0x4f24>
   15d78:	mov	r0, #34	; 0x22
   15d7c:	pop	{r4, r5, r6, pc}
   15d80:	sub	r4, r4, #1
   15d84:	mov	r1, r6
   15d88:	mov	r2, r4
   15d8c:	mov	r0, r5
   15d90:	bl	10c64 <memcpy@plt>
   15d94:	mov	r3, #0
   15d98:	strb	r3, [r5, r4]
   15d9c:	mov	r0, #34	; 0x22
   15da0:	pop	{r4, r5, r6, pc}
   15da4:	add	r2, r0, #1
   15da8:	mov	r1, r6
   15dac:	mov	r0, r5
   15db0:	bl	10c64 <memcpy@plt>
   15db4:	mov	r0, #0
   15db8:	pop	{r4, r5, r6, pc}
   15dbc:	cmp	r4, #0
   15dc0:	beq	15dd0 <__lxstat64@plt+0x4f74>
   15dc4:	strb	r6, [r5]
   15dc8:	mov	r0, #22
   15dcc:	pop	{r4, r5, r6, pc}
   15dd0:	mov	r0, #22
   15dd4:	pop	{r4, r5, r6, pc}
   15dd8:	mov	r1, #0
   15ddc:	b	10df0 <setlocale@plt>
   15de0:	subs	r2, r1, #1
   15de4:	bxeq	lr
   15de8:	bcc	15fc0 <__lxstat64@plt+0x5164>
   15dec:	cmp	r0, r1
   15df0:	bls	15fa4 <__lxstat64@plt+0x5148>
   15df4:	tst	r1, r2
   15df8:	beq	15fb0 <__lxstat64@plt+0x5154>
   15dfc:	clz	r3, r0
   15e00:	clz	r2, r1
   15e04:	sub	r3, r2, r3
   15e08:	rsbs	r3, r3, #31
   15e0c:	addne	r3, r3, r3, lsl #1
   15e10:	mov	r2, #0
   15e14:	addne	pc, pc, r3, lsl #2
   15e18:	nop			; (mov r0, r0)
   15e1c:	cmp	r0, r1, lsl #31
   15e20:	adc	r2, r2, r2
   15e24:	subcs	r0, r0, r1, lsl #31
   15e28:	cmp	r0, r1, lsl #30
   15e2c:	adc	r2, r2, r2
   15e30:	subcs	r0, r0, r1, lsl #30
   15e34:	cmp	r0, r1, lsl #29
   15e38:	adc	r2, r2, r2
   15e3c:	subcs	r0, r0, r1, lsl #29
   15e40:	cmp	r0, r1, lsl #28
   15e44:	adc	r2, r2, r2
   15e48:	subcs	r0, r0, r1, lsl #28
   15e4c:	cmp	r0, r1, lsl #27
   15e50:	adc	r2, r2, r2
   15e54:	subcs	r0, r0, r1, lsl #27
   15e58:	cmp	r0, r1, lsl #26
   15e5c:	adc	r2, r2, r2
   15e60:	subcs	r0, r0, r1, lsl #26
   15e64:	cmp	r0, r1, lsl #25
   15e68:	adc	r2, r2, r2
   15e6c:	subcs	r0, r0, r1, lsl #25
   15e70:	cmp	r0, r1, lsl #24
   15e74:	adc	r2, r2, r2
   15e78:	subcs	r0, r0, r1, lsl #24
   15e7c:	cmp	r0, r1, lsl #23
   15e80:	adc	r2, r2, r2
   15e84:	subcs	r0, r0, r1, lsl #23
   15e88:	cmp	r0, r1, lsl #22
   15e8c:	adc	r2, r2, r2
   15e90:	subcs	r0, r0, r1, lsl #22
   15e94:	cmp	r0, r1, lsl #21
   15e98:	adc	r2, r2, r2
   15e9c:	subcs	r0, r0, r1, lsl #21
   15ea0:	cmp	r0, r1, lsl #20
   15ea4:	adc	r2, r2, r2
   15ea8:	subcs	r0, r0, r1, lsl #20
   15eac:	cmp	r0, r1, lsl #19
   15eb0:	adc	r2, r2, r2
   15eb4:	subcs	r0, r0, r1, lsl #19
   15eb8:	cmp	r0, r1, lsl #18
   15ebc:	adc	r2, r2, r2
   15ec0:	subcs	r0, r0, r1, lsl #18
   15ec4:	cmp	r0, r1, lsl #17
   15ec8:	adc	r2, r2, r2
   15ecc:	subcs	r0, r0, r1, lsl #17
   15ed0:	cmp	r0, r1, lsl #16
   15ed4:	adc	r2, r2, r2
   15ed8:	subcs	r0, r0, r1, lsl #16
   15edc:	cmp	r0, r1, lsl #15
   15ee0:	adc	r2, r2, r2
   15ee4:	subcs	r0, r0, r1, lsl #15
   15ee8:	cmp	r0, r1, lsl #14
   15eec:	adc	r2, r2, r2
   15ef0:	subcs	r0, r0, r1, lsl #14
   15ef4:	cmp	r0, r1, lsl #13
   15ef8:	adc	r2, r2, r2
   15efc:	subcs	r0, r0, r1, lsl #13
   15f00:	cmp	r0, r1, lsl #12
   15f04:	adc	r2, r2, r2
   15f08:	subcs	r0, r0, r1, lsl #12
   15f0c:	cmp	r0, r1, lsl #11
   15f10:	adc	r2, r2, r2
   15f14:	subcs	r0, r0, r1, lsl #11
   15f18:	cmp	r0, r1, lsl #10
   15f1c:	adc	r2, r2, r2
   15f20:	subcs	r0, r0, r1, lsl #10
   15f24:	cmp	r0, r1, lsl #9
   15f28:	adc	r2, r2, r2
   15f2c:	subcs	r0, r0, r1, lsl #9
   15f30:	cmp	r0, r1, lsl #8
   15f34:	adc	r2, r2, r2
   15f38:	subcs	r0, r0, r1, lsl #8
   15f3c:	cmp	r0, r1, lsl #7
   15f40:	adc	r2, r2, r2
   15f44:	subcs	r0, r0, r1, lsl #7
   15f48:	cmp	r0, r1, lsl #6
   15f4c:	adc	r2, r2, r2
   15f50:	subcs	r0, r0, r1, lsl #6
   15f54:	cmp	r0, r1, lsl #5
   15f58:	adc	r2, r2, r2
   15f5c:	subcs	r0, r0, r1, lsl #5
   15f60:	cmp	r0, r1, lsl #4
   15f64:	adc	r2, r2, r2
   15f68:	subcs	r0, r0, r1, lsl #4
   15f6c:	cmp	r0, r1, lsl #3
   15f70:	adc	r2, r2, r2
   15f74:	subcs	r0, r0, r1, lsl #3
   15f78:	cmp	r0, r1, lsl #2
   15f7c:	adc	r2, r2, r2
   15f80:	subcs	r0, r0, r1, lsl #2
   15f84:	cmp	r0, r1, lsl #1
   15f88:	adc	r2, r2, r2
   15f8c:	subcs	r0, r0, r1, lsl #1
   15f90:	cmp	r0, r1
   15f94:	adc	r2, r2, r2
   15f98:	subcs	r0, r0, r1
   15f9c:	mov	r0, r2
   15fa0:	bx	lr
   15fa4:	moveq	r0, #1
   15fa8:	movne	r0, #0
   15fac:	bx	lr
   15fb0:	clz	r2, r1
   15fb4:	rsb	r2, r2, #31
   15fb8:	lsr	r0, r0, r2
   15fbc:	bx	lr
   15fc0:	cmp	r0, #0
   15fc4:	mvnne	r0, #0
   15fc8:	b	16268 <__lxstat64@plt+0x540c>
   15fcc:	cmp	r1, #0
   15fd0:	beq	15fc0 <__lxstat64@plt+0x5164>
   15fd4:	push	{r0, r1, lr}
   15fd8:	bl	15de0 <__lxstat64@plt+0x4f84>
   15fdc:	pop	{r1, r2, lr}
   15fe0:	mul	r3, r2, r0
   15fe4:	sub	r1, r1, r3
   15fe8:	bx	lr
   15fec:	cmp	r1, #0
   15ff0:	beq	161fc <__lxstat64@plt+0x53a0>
   15ff4:	eor	ip, r0, r1
   15ff8:	rsbmi	r1, r1, #0
   15ffc:	subs	r2, r1, #1
   16000:	beq	161c8 <__lxstat64@plt+0x536c>
   16004:	movs	r3, r0
   16008:	rsbmi	r3, r0, #0
   1600c:	cmp	r3, r1
   16010:	bls	161d4 <__lxstat64@plt+0x5378>
   16014:	tst	r1, r2
   16018:	beq	161e4 <__lxstat64@plt+0x5388>
   1601c:	clz	r2, r3
   16020:	clz	r0, r1
   16024:	sub	r2, r0, r2
   16028:	rsbs	r2, r2, #31
   1602c:	addne	r2, r2, r2, lsl #1
   16030:	mov	r0, #0
   16034:	addne	pc, pc, r2, lsl #2
   16038:	nop			; (mov r0, r0)
   1603c:	cmp	r3, r1, lsl #31
   16040:	adc	r0, r0, r0
   16044:	subcs	r3, r3, r1, lsl #31
   16048:	cmp	r3, r1, lsl #30
   1604c:	adc	r0, r0, r0
   16050:	subcs	r3, r3, r1, lsl #30
   16054:	cmp	r3, r1, lsl #29
   16058:	adc	r0, r0, r0
   1605c:	subcs	r3, r3, r1, lsl #29
   16060:	cmp	r3, r1, lsl #28
   16064:	adc	r0, r0, r0
   16068:	subcs	r3, r3, r1, lsl #28
   1606c:	cmp	r3, r1, lsl #27
   16070:	adc	r0, r0, r0
   16074:	subcs	r3, r3, r1, lsl #27
   16078:	cmp	r3, r1, lsl #26
   1607c:	adc	r0, r0, r0
   16080:	subcs	r3, r3, r1, lsl #26
   16084:	cmp	r3, r1, lsl #25
   16088:	adc	r0, r0, r0
   1608c:	subcs	r3, r3, r1, lsl #25
   16090:	cmp	r3, r1, lsl #24
   16094:	adc	r0, r0, r0
   16098:	subcs	r3, r3, r1, lsl #24
   1609c:	cmp	r3, r1, lsl #23
   160a0:	adc	r0, r0, r0
   160a4:	subcs	r3, r3, r1, lsl #23
   160a8:	cmp	r3, r1, lsl #22
   160ac:	adc	r0, r0, r0
   160b0:	subcs	r3, r3, r1, lsl #22
   160b4:	cmp	r3, r1, lsl #21
   160b8:	adc	r0, r0, r0
   160bc:	subcs	r3, r3, r1, lsl #21
   160c0:	cmp	r3, r1, lsl #20
   160c4:	adc	r0, r0, r0
   160c8:	subcs	r3, r3, r1, lsl #20
   160cc:	cmp	r3, r1, lsl #19
   160d0:	adc	r0, r0, r0
   160d4:	subcs	r3, r3, r1, lsl #19
   160d8:	cmp	r3, r1, lsl #18
   160dc:	adc	r0, r0, r0
   160e0:	subcs	r3, r3, r1, lsl #18
   160e4:	cmp	r3, r1, lsl #17
   160e8:	adc	r0, r0, r0
   160ec:	subcs	r3, r3, r1, lsl #17
   160f0:	cmp	r3, r1, lsl #16
   160f4:	adc	r0, r0, r0
   160f8:	subcs	r3, r3, r1, lsl #16
   160fc:	cmp	r3, r1, lsl #15
   16100:	adc	r0, r0, r0
   16104:	subcs	r3, r3, r1, lsl #15
   16108:	cmp	r3, r1, lsl #14
   1610c:	adc	r0, r0, r0
   16110:	subcs	r3, r3, r1, lsl #14
   16114:	cmp	r3, r1, lsl #13
   16118:	adc	r0, r0, r0
   1611c:	subcs	r3, r3, r1, lsl #13
   16120:	cmp	r3, r1, lsl #12
   16124:	adc	r0, r0, r0
   16128:	subcs	r3, r3, r1, lsl #12
   1612c:	cmp	r3, r1, lsl #11
   16130:	adc	r0, r0, r0
   16134:	subcs	r3, r3, r1, lsl #11
   16138:	cmp	r3, r1, lsl #10
   1613c:	adc	r0, r0, r0
   16140:	subcs	r3, r3, r1, lsl #10
   16144:	cmp	r3, r1, lsl #9
   16148:	adc	r0, r0, r0
   1614c:	subcs	r3, r3, r1, lsl #9
   16150:	cmp	r3, r1, lsl #8
   16154:	adc	r0, r0, r0
   16158:	subcs	r3, r3, r1, lsl #8
   1615c:	cmp	r3, r1, lsl #7
   16160:	adc	r0, r0, r0
   16164:	subcs	r3, r3, r1, lsl #7
   16168:	cmp	r3, r1, lsl #6
   1616c:	adc	r0, r0, r0
   16170:	subcs	r3, r3, r1, lsl #6
   16174:	cmp	r3, r1, lsl #5
   16178:	adc	r0, r0, r0
   1617c:	subcs	r3, r3, r1, lsl #5
   16180:	cmp	r3, r1, lsl #4
   16184:	adc	r0, r0, r0
   16188:	subcs	r3, r3, r1, lsl #4
   1618c:	cmp	r3, r1, lsl #3
   16190:	adc	r0, r0, r0
   16194:	subcs	r3, r3, r1, lsl #3
   16198:	cmp	r3, r1, lsl #2
   1619c:	adc	r0, r0, r0
   161a0:	subcs	r3, r3, r1, lsl #2
   161a4:	cmp	r3, r1, lsl #1
   161a8:	adc	r0, r0, r0
   161ac:	subcs	r3, r3, r1, lsl #1
   161b0:	cmp	r3, r1
   161b4:	adc	r0, r0, r0
   161b8:	subcs	r3, r3, r1
   161bc:	cmp	ip, #0
   161c0:	rsbmi	r0, r0, #0
   161c4:	bx	lr
   161c8:	teq	ip, r0
   161cc:	rsbmi	r0, r0, #0
   161d0:	bx	lr
   161d4:	movcc	r0, #0
   161d8:	asreq	r0, ip, #31
   161dc:	orreq	r0, r0, #1
   161e0:	bx	lr
   161e4:	clz	r2, r1
   161e8:	rsb	r2, r2, #31
   161ec:	cmp	ip, #0
   161f0:	lsr	r0, r3, r2
   161f4:	rsbmi	r0, r0, #0
   161f8:	bx	lr
   161fc:	cmp	r0, #0
   16200:	mvngt	r0, #-2147483648	; 0x80000000
   16204:	movlt	r0, #-2147483648	; 0x80000000
   16208:	b	16268 <__lxstat64@plt+0x540c>
   1620c:	cmp	r1, #0
   16210:	beq	161fc <__lxstat64@plt+0x53a0>
   16214:	push	{r0, r1, lr}
   16218:	bl	15ff4 <__lxstat64@plt+0x5198>
   1621c:	pop	{r1, r2, lr}
   16220:	mul	r3, r2, r0
   16224:	sub	r1, r1, r3
   16228:	bx	lr
   1622c:	cmp	r3, #0
   16230:	cmpeq	r2, #0
   16234:	bne	1624c <__lxstat64@plt+0x53f0>
   16238:	cmp	r1, #0
   1623c:	cmpeq	r0, #0
   16240:	mvnne	r1, #0
   16244:	mvnne	r0, #0
   16248:	b	16268 <__lxstat64@plt+0x540c>
   1624c:	sub	sp, sp, #8
   16250:	push	{sp, lr}
   16254:	bl	16278 <__lxstat64@plt+0x541c>
   16258:	ldr	lr, [sp, #4]
   1625c:	add	sp, sp, #8
   16260:	pop	{r2, r3}
   16264:	bx	lr
   16268:	push	{r1, lr}
   1626c:	mov	r0, #8
   16270:	bl	10c1c <raise@plt>
   16274:	pop	{r1, pc}
   16278:	cmp	r1, r3
   1627c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16280:	cmpeq	r0, r2
   16284:	mov	r4, r0
   16288:	mov	r5, r1
   1628c:	ldr	r9, [sp, #28]
   16290:	movcc	r0, #0
   16294:	movcc	r1, #0
   16298:	bcc	16390 <__lxstat64@plt+0x5534>
   1629c:	cmp	r3, #0
   162a0:	clzeq	ip, r2
   162a4:	clzne	ip, r3
   162a8:	addeq	ip, ip, #32
   162ac:	cmp	r5, #0
   162b0:	clzeq	r1, r4
   162b4:	addeq	r1, r1, #32
   162b8:	clzne	r1, r5
   162bc:	sub	ip, ip, r1
   162c0:	sub	lr, ip, #32
   162c4:	lsl	r7, r3, ip
   162c8:	rsb	r8, ip, #32
   162cc:	orr	r7, r7, r2, lsl lr
   162d0:	orr	r7, r7, r2, lsr r8
   162d4:	lsl	r6, r2, ip
   162d8:	cmp	r5, r7
   162dc:	cmpeq	r4, r6
   162e0:	movcc	r0, #0
   162e4:	movcc	r1, #0
   162e8:	bcc	16304 <__lxstat64@plt+0x54a8>
   162ec:	mov	r3, #1
   162f0:	subs	r4, r4, r6
   162f4:	lsl	r1, r3, lr
   162f8:	lsl	r0, r3, ip
   162fc:	orr	r1, r1, r3, lsr r8
   16300:	sbc	r5, r5, r7
   16304:	cmp	ip, #0
   16308:	beq	16390 <__lxstat64@plt+0x5534>
   1630c:	lsrs	r3, r7, #1
   16310:	rrx	r2, r6
   16314:	mov	r6, ip
   16318:	b	1633c <__lxstat64@plt+0x54e0>
   1631c:	subs	r4, r4, r2
   16320:	sbc	r5, r5, r3
   16324:	adds	r4, r4, r4
   16328:	adc	r5, r5, r5
   1632c:	adds	r4, r4, #1
   16330:	adc	r5, r5, #0
   16334:	subs	r6, r6, #1
   16338:	beq	16358 <__lxstat64@plt+0x54fc>
   1633c:	cmp	r5, r3
   16340:	cmpeq	r4, r2
   16344:	bcs	1631c <__lxstat64@plt+0x54c0>
   16348:	adds	r4, r4, r4
   1634c:	adc	r5, r5, r5
   16350:	subs	r6, r6, #1
   16354:	bne	1633c <__lxstat64@plt+0x54e0>
   16358:	lsr	r6, r4, ip
   1635c:	lsr	r7, r5, ip
   16360:	orr	r6, r6, r5, lsl r8
   16364:	adds	r2, r0, r4
   16368:	orr	r6, r6, r5, lsr lr
   1636c:	adc	r3, r1, r5
   16370:	lsl	r1, r7, ip
   16374:	orr	r1, r1, r6, lsl lr
   16378:	lsl	r0, r6, ip
   1637c:	orr	r1, r1, r6, lsr r8
   16380:	subs	r0, r2, r0
   16384:	mov	r4, r6
   16388:	mov	r5, r7
   1638c:	sbc	r1, r3, r1
   16390:	cmp	r9, #0
   16394:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   16398:	strd	r4, [r9]
   1639c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   163a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   163a4:	mov	r7, r0
   163a8:	ldr	r6, [pc, #72]	; 163f8 <__lxstat64@plt+0x559c>
   163ac:	ldr	r5, [pc, #72]	; 163fc <__lxstat64@plt+0x55a0>
   163b0:	add	r6, pc, r6
   163b4:	add	r5, pc, r5
   163b8:	sub	r6, r6, r5
   163bc:	mov	r8, r1
   163c0:	mov	r9, r2
   163c4:	bl	10be4 <calloc@plt-0x20>
   163c8:	asrs	r6, r6, #2
   163cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   163d0:	mov	r4, #0
   163d4:	add	r4, r4, #1
   163d8:	ldr	r3, [r5], #4
   163dc:	mov	r2, r9
   163e0:	mov	r1, r8
   163e4:	mov	r0, r7
   163e8:	blx	r3
   163ec:	cmp	r6, r4
   163f0:	bne	163d4 <__lxstat64@plt+0x5578>
   163f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   163f8:	andeq	r1, r1, r8, asr fp
   163fc:	andeq	r1, r1, r0, asr fp
   16400:	bx	lr
   16404:	ldr	r3, [pc, #12]	; 16418 <__lxstat64@plt+0x55bc>
   16408:	mov	r1, #0
   1640c:	add	r3, pc, r3
   16410:	ldr	r2, [r3]
   16414:	b	10d90 <__cxa_atexit@plt>
   16418:	andeq	r1, r1, ip, asr #25

Disassembly of section .fini:

0001641c <.fini>:
   1641c:	push	{r3, lr}
   16420:	pop	{r3, pc}
