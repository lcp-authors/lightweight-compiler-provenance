
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000007a0 <_init>:
 7a0:	push	{r3, lr}
 7a4:	bl	874 <call_weak_fn>
 7a8:	pop	{r3, pc}

Disassembly of section .plt:

000007ac <.plt>:
 7ac:	push	{lr}		; (str lr, [sp, #-4]!)
 7b0:	ldr	lr, [pc, #4]	; 7bc <.plt+0x10>
 7b4:	add	lr, pc, lr
 7b8:	ldr	pc, [lr, #8]!
 7bc:	.word	0x00011844

000007c0 <__cxa_finalize@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2116]!	; 0x844

000007cc <sendto_one@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2108]!	; 0x83c

000007d8 <user_mode@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2100]!	; 0x834

000007e4 <sendto_realops_snomask@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2092]!	; 0x82c

000007f0 <find_umode_slot@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2084]!	; 0x824

000007fc <rb_free_rb_dlink_node@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2076]!	; 0x81c

00000808 <__gmon_start__@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2068]!	; 0x814

00000814 <rb_make_rb_dlink_node@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2060]!	; 0x80c

00000820 <sendto_one_numeric@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2052]!	; 0x804

0000082c <find_person@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2044]!	; 0x7fc

00000838 <sendto_one_notice@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2036]!	; 0x7f4

00000844 <find_named_person@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000850 <privilegeset_in_set@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #2020]!	; 0x7e4

0000085c <__assert_fail@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #2012]!	; 0x7dc

00000868 <construct_umodebuf@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000874 <call_weak_fn>:
     874:	ldr	r3, [pc, #20]	; 890 <call_weak_fn+0x1c>
     878:	ldr	r2, [pc, #20]	; 894 <call_weak_fn+0x20>
     87c:	add	r3, pc, r3
     880:	ldr	r2, [r3, r2]
     884:	cmp	r2, #0
     888:	bxeq	lr
     88c:	b	808 <__gmon_start__@plt>
     890:	.word	0x0001177c
     894:	.word	0x00000054

00000898 <deregister_tm_clones>:
     898:	ldr	r0, [pc, #44]	; 8cc <deregister_tm_clones+0x34>
     89c:	ldr	r3, [pc, #44]	; 8d0 <deregister_tm_clones+0x38>
     8a0:	add	r0, pc, r0
     8a4:	add	r3, pc, r3
     8a8:	cmp	r3, r0
     8ac:	ldr	r3, [pc, #32]	; 8d4 <deregister_tm_clones+0x3c>
     8b0:	add	r3, pc, r3
     8b4:	bxeq	lr
     8b8:	ldr	r2, [pc, #24]	; 8d8 <deregister_tm_clones+0x40>
     8bc:	ldr	r3, [r3, r2]
     8c0:	cmp	r3, #0
     8c4:	bxeq	lr
     8c8:	bx	r3
     8cc:	.word	0x00011888
     8d0:	.word	0x00011884
     8d4:	.word	0x00011748
     8d8:	.word	0x0000004c

000008dc <register_tm_clones>:
     8dc:	ldr	r0, [pc, #56]	; 91c <register_tm_clones+0x40>
     8e0:	ldr	r3, [pc, #56]	; 920 <register_tm_clones+0x44>
     8e4:	add	r0, pc, r0
     8e8:	add	r3, pc, r3
     8ec:	sub	r1, r3, r0
     8f0:	ldr	r3, [pc, #44]	; 924 <register_tm_clones+0x48>
     8f4:	asr	r1, r1, #2
     8f8:	add	r3, pc, r3
     8fc:	add	r1, r1, r1, lsr #31
     900:	asrs	r1, r1, #1
     904:	bxeq	lr
     908:	ldr	r2, [pc, #24]	; 928 <register_tm_clones+0x4c>
     90c:	ldr	r3, [r3, r2]
     910:	cmp	r3, #0
     914:	bxeq	lr
     918:	bx	r3
     91c:	.word	0x00011844
     920:	.word	0x00011840
     924:	.word	0x00011700
     928:	.word	0x0000005c

0000092c <__do_global_dtors_aux>:
     92c:	ldr	r3, [pc, #76]	; 980 <__do_global_dtors_aux+0x54>
     930:	ldr	r2, [pc, #76]	; 984 <__do_global_dtors_aux+0x58>
     934:	add	r3, pc, r3
     938:	add	r2, pc, r2
     93c:	ldrb	r3, [r3]
     940:	cmp	r3, #0
     944:	bxne	lr
     948:	ldr	r3, [pc, #56]	; 988 <__do_global_dtors_aux+0x5c>
     94c:	push	{r4, lr}
     950:	ldr	r3, [r2, r3]
     954:	cmp	r3, #0
     958:	beq	968 <__do_global_dtors_aux+0x3c>
     95c:	ldr	r3, [pc, #40]	; 98c <__do_global_dtors_aux+0x60>
     960:	ldr	r0, [pc, r3]
     964:	bl	7c0 <__cxa_finalize@plt>
     968:	bl	898 <deregister_tm_clones>
     96c:	ldr	r3, [pc, #28]	; 990 <__do_global_dtors_aux+0x64>
     970:	mov	r2, #1
     974:	add	r3, pc, r3
     978:	strb	r2, [r3]
     97c:	pop	{r4, pc}
     980:	.word	0x000117f4
     984:	.word	0x000116c0
     988:	.word	0x00000048
     98c:	.word	0x000116fc
     990:	.word	0x000117b4

00000994 <frame_dummy>:
     994:	b	8dc <register_tm_clones>

00000998 <h_hdl_stats_request>:
     998:	push	{r4, r5, r6, r7, fp, lr}
     99c:	add	fp, sp, #16
     9a0:	sub	sp, sp, #8
     9a4:	mov	r4, r0
     9a8:	ldr	r0, [r0, #8]
     9ac:	cmp	r0, #112	; 0x70
     9b0:	bne	a48 <h_hdl_stats_request+0xb0>
     9b4:	ldr	r7, [pc, #148]	; a50 <h_hdl_stats_request+0xb8>
     9b8:	mov	r5, #0
     9bc:	ldr	r7, [pc, r7]
     9c0:	cmp	r7, #0
     9c4:	beq	a28 <h_hdl_stats_request+0x90>
     9c8:	ldr	r6, [pc, #132]	; a54 <h_hdl_stats_request+0xbc>
     9cc:	add	r6, pc, r6
     9d0:	ldr	r1, [r7]
     9d4:	ldr	r0, [r1, #24]
     9d8:	ldr	r0, [r0, #24]
     9dc:	cmp	r0, #0
     9e0:	beq	9f4 <h_hdl_stats_request+0x5c>
     9e4:	ldr	r7, [r7, #8]
     9e8:	cmp	r7, #0
     9ec:	bne	9d0 <h_hdl_stats_request+0x38>
     9f0:	b	a28 <h_hdl_stats_request+0x90>
     9f4:	ldr	r0, [r4]
     9f8:	add	r2, r1, #163	; 0xa3
     9fc:	add	r3, r1, #152	; 0x98
     a00:	str	r3, [sp]
     a04:	str	r2, [sp, #4]
     a08:	add	r3, r1, #88	; 0x58
     a0c:	mov	r1, #249	; 0xf9
     a10:	mov	r2, r6
     a14:	bl	820 <sendto_one_numeric@plt>
     a18:	add	r5, r5, #1
     a1c:	ldr	r7, [r7, #8]
     a20:	cmp	r7, #0
     a24:	bne	9d0 <h_hdl_stats_request+0x38>
     a28:	ldr	r0, [r4]
     a2c:	ldr	r2, [pc, #36]	; a58 <h_hdl_stats_request+0xc0>
     a30:	mov	r1, #249	; 0xf9
     a34:	mov	r3, r5
     a38:	add	r2, pc, r2
     a3c:	bl	820 <sendto_one_numeric@plt>
     a40:	mov	r0, #1
     a44:	str	r0, [r4, #12]
     a48:	sub	sp, fp, #16
     a4c:	pop	{r4, r5, r6, r7, fp, pc}
     a50:	.word	0x00011770
     a54:	.word	0x00000b34
     a58:	.word	0x00000ad6

00000a5c <h_hdl_new_remote_user>:
     a5c:	push	{r4, sl, fp, lr}
     a60:	add	fp, sp, #8
     a64:	mov	r4, r0
     a68:	ldr	r0, [r0, #56]	; 0x38
     a6c:	ldr	r1, [pc, #188]	; b30 <h_hdl_new_remote_user+0xd4>
     a70:	ldr	r1, [pc, r1]
     a74:	ldr	r1, [r1, #288]	; 0x120
     a78:	tst	r1, r0
     a7c:	beq	b0c <h_hdl_new_remote_user+0xb0>
     a80:	ldr	r0, [pc, #172]	; b34 <h_hdl_new_remote_user+0xd8>
     a84:	ldr	r0, [pc, r0]
     a88:	cmp	r0, #0
     a8c:	beq	aa8 <h_hdl_new_remote_user+0x4c>
     a90:	ldr	r1, [r0]
     a94:	cmp	r1, r4
     a98:	popeq	{r4, sl, fp, pc}
     a9c:	ldr	r0, [r0, #8]
     aa0:	cmp	r0, #0
     aa4:	bne	a90 <h_hdl_new_remote_user+0x34>
     aa8:	bl	814 <rb_make_rb_dlink_node@plt>
     aac:	cmp	r0, #0
     ab0:	beq	b10 <h_hdl_new_remote_user+0xb4>
     ab4:	mov	r1, #0
     ab8:	str	r1, [r0, #4]
     abc:	str	r4, [r0]
     ac0:	ldr	r1, [pc, #112]	; b38 <h_hdl_new_remote_user+0xdc>
     ac4:	ldr	r1, [pc, r1]
     ac8:	cmp	r1, #0
     acc:	str	r1, [r0, #8]
     ad0:	beq	ae0 <h_hdl_new_remote_user+0x84>
     ad4:	add	r1, r1, #4
     ad8:	str	r0, [r1]
     adc:	b	af4 <h_hdl_new_remote_user+0x98>
     ae0:	ldr	r1, [pc, #84]	; b3c <h_hdl_new_remote_user+0xe0>
     ae4:	add	r1, pc, r1
     ae8:	ldr	r2, [r1, #4]!
     aec:	cmp	r2, #0
     af0:	streq	r0, [r1]
     af4:	ldr	r1, [pc, #68]	; b40 <h_hdl_new_remote_user+0xe4>
     af8:	add	r1, pc, r1
     afc:	str	r0, [r1]
     b00:	ldr	r0, [r1, #8]
     b04:	add	r0, r0, #1
     b08:	str	r0, [r1, #8]
     b0c:	pop	{r4, sl, fp, pc}
     b10:	ldr	r0, [pc, #44]	; b44 <h_hdl_new_remote_user+0xe8>
     b14:	ldr	r1, [pc, #44]	; b48 <h_hdl_new_remote_user+0xec>
     b18:	ldr	r3, [pc, #44]	; b4c <h_hdl_new_remote_user+0xf0>
     b1c:	mov	r2, #144	; 0x90
     b20:	add	r0, pc, r0
     b24:	add	r1, pc, r1
     b28:	add	r3, pc, r3
     b2c:	bl	85c <__assert_fail@plt>
     b30:	.word	0x000115d8
     b34:	.word	0x000116a8
     b38:	.word	0x00011668
     b3c:	.word	0x00011648
     b40:	.word	0x00011634
     b44:	.word	0x00000a66
     b48:	.word	0x000009fe
     b4c:	.word	0x00000a23

00000b50 <h_hdl_client_exit>:
     b50:	ldr	r0, [r0, #4]
     b54:	b	12dc <recurse_client_exit>

00000b58 <h_hdl_umode_changed>:
     b58:	push	{r4, r5, r6, sl, fp, lr}
     b5c:	add	fp, sp, #16
     b60:	sub	sp, sp, #8
     b64:	ldr	r4, [r0]
     b68:	ldr	r0, [r0, #4]
     b6c:	ldr	r1, [r4, #56]	; 0x38
     b70:	ldr	r6, [pc, #576]	; db8 <h_hdl_umode_changed+0x260>
     b74:	ldr	r6, [pc, r6]
     b78:	eor	r0, r1, r0
     b7c:	ldr	r2, [r6, #288]	; 0x120
     b80:	and	r5, r0, r2
     b84:	tst	r2, r1
     b88:	beq	c1c <h_hdl_umode_changed+0xc4>
     b8c:	ldrb	r0, [r4, #65]	; 0x41
     b90:	tst	r0, #32
     b94:	beq	cc4 <h_hdl_umode_changed+0x16c>
     b98:	ldrh	r0, [r4, #80]	; 0x50
     b9c:	cmp	r0, #64	; 0x40
     ba0:	bne	cc4 <h_hdl_umode_changed+0x16c>
     ba4:	ldr	r0, [r4, #24]
     ba8:	cmp	r0, #0
     bac:	ldrne	r0, [r0, #36]	; 0x24
     bb0:	cmpne	r0, #0
     bb4:	bne	cb0 <h_hdl_umode_changed+0x158>
     bb8:	bic	r0, r1, r2
     bbc:	add	r3, r4, #88	; 0x58
     bc0:	str	r0, [r4, #56]	; 0x38
     bc4:	ldr	r0, [pc, #500]	; dc0 <h_hdl_umode_changed+0x268>
     bc8:	add	r0, pc, r0
     bcc:	str	r0, [sp]
     bd0:	ldr	r0, [pc, #492]	; dc4 <h_hdl_umode_changed+0x26c>
     bd4:	ldr	r0, [pc, r0]
     bd8:	ldr	r1, [pc, #488]	; dc8 <h_hdl_umode_changed+0x270>
     bdc:	add	r2, r0, #88	; 0x58
     be0:	add	r1, pc, r1
     be4:	mov	r0, r4
     be8:	bl	7cc <sendto_one@plt>
     bec:	cmp	r5, #0
     bf0:	bne	cf8 <h_hdl_umode_changed+0x1a0>
     bf4:	ldr	r1, [pc, #464]	; dcc <h_hdl_umode_changed+0x274>
     bf8:	ldr	r1, [pc, r1]
     bfc:	cmp	r1, #0
     c00:	beq	cf8 <h_hdl_umode_changed+0x1a0>
     c04:	ldr	r2, [r1]
     c08:	mov	r0, r1
     c0c:	ldr	r1, [r1, #8]
     c10:	cmp	r2, r4
     c14:	bne	bfc <h_hdl_umode_changed+0xa4>
     c18:	b	c50 <h_hdl_umode_changed+0xf8>
     c1c:	cmp	r5, #0
     c20:	beq	cf8 <h_hdl_umode_changed+0x1a0>
     c24:	cmp	r4, #0
     c28:	beq	d78 <h_hdl_umode_changed+0x220>
     c2c:	ldr	r1, [pc, #436]	; de8 <h_hdl_umode_changed+0x290>
     c30:	ldr	r1, [pc, r1]
     c34:	cmp	r1, #0
     c38:	beq	cf8 <h_hdl_umode_changed+0x1a0>
     c3c:	ldr	r2, [r1]
     c40:	mov	r0, r1
     c44:	ldr	r1, [r1, #8]
     c48:	cmp	r2, r4
     c4c:	bne	c34 <h_hdl_umode_changed+0xdc>
     c50:	ldr	r2, [r0, #4]
     c54:	cmp	r1, #0
     c58:	beq	c68 <h_hdl_umode_changed+0x110>
     c5c:	str	r2, [r1, #4]
     c60:	ldr	r2, [r0, #4]
     c64:	b	c74 <h_hdl_umode_changed+0x11c>
     c68:	ldr	r3, [pc, #352]	; dd0 <h_hdl_umode_changed+0x278>
     c6c:	add	r3, pc, r3
     c70:	str	r2, [r3, #4]
     c74:	ldr	r6, [pc, #344]	; dd4 <h_hdl_umode_changed+0x27c>
     c78:	cmp	r2, #0
     c7c:	add	r6, pc, r6
     c80:	mov	r3, r6
     c84:	addne	r3, r2, #8
     c88:	str	r1, [r3]
     c8c:	mov	r1, #0
     c90:	str	r1, [r0, #4]
     c94:	str	r1, [r0, #8]
     c98:	ldr	r1, [r6, #8]
     c9c:	sub	r1, r1, #1
     ca0:	str	r1, [r6, #8]
     ca4:	sub	sp, fp, #16
     ca8:	pop	{r4, r5, r6, sl, fp, lr}
     cac:	b	7fc <rb_free_rb_dlink_node@plt>
     cb0:	ldr	r1, [pc, #260]	; dbc <h_hdl_umode_changed+0x264>
     cb4:	add	r1, pc, r1
     cb8:	bl	850 <privilegeset_in_set@plt>
     cbc:	cmp	r0, #0
     cc0:	beq	d6c <h_hdl_umode_changed+0x214>
     cc4:	cmp	r5, #0
     cc8:	beq	cf8 <h_hdl_umode_changed+0x1a0>
     ccc:	ldr	r0, [pc, #260]	; dd8 <h_hdl_umode_changed+0x280>
     cd0:	ldr	r0, [pc, r0]
     cd4:	cmp	r0, #0
     cd8:	bne	cec <h_hdl_umode_changed+0x194>
     cdc:	b	d00 <h_hdl_umode_changed+0x1a8>
     ce0:	ldr	r0, [r0, #8]
     ce4:	cmp	r0, #0
     ce8:	beq	d00 <h_hdl_umode_changed+0x1a8>
     cec:	ldr	r1, [r0]
     cf0:	cmp	r1, r4
     cf4:	bne	ce0 <h_hdl_umode_changed+0x188>
     cf8:	sub	sp, fp, #16
     cfc:	pop	{r4, r5, r6, sl, fp, pc}
     d00:	bl	814 <rb_make_rb_dlink_node@plt>
     d04:	cmp	r0, #0
     d08:	beq	d98 <h_hdl_umode_changed+0x240>
     d0c:	mov	r1, #0
     d10:	str	r1, [r0, #4]
     d14:	str	r4, [r0]
     d18:	ldr	r1, [pc, #188]	; ddc <h_hdl_umode_changed+0x284>
     d1c:	ldr	r1, [pc, r1]
     d20:	cmp	r1, #0
     d24:	str	r1, [r0, #8]
     d28:	beq	d38 <h_hdl_umode_changed+0x1e0>
     d2c:	add	r1, r1, #4
     d30:	str	r0, [r1]
     d34:	b	d4c <h_hdl_umode_changed+0x1f4>
     d38:	ldr	r1, [pc, #160]	; de0 <h_hdl_umode_changed+0x288>
     d3c:	add	r1, pc, r1
     d40:	ldr	r2, [r1, #4]!
     d44:	cmp	r2, #0
     d48:	streq	r0, [r1]
     d4c:	ldr	r1, [pc, #144]	; de4 <h_hdl_umode_changed+0x28c>
     d50:	add	r1, pc, r1
     d54:	str	r0, [r1]
     d58:	ldr	r0, [r1, #8]
     d5c:	add	r0, r0, #1
     d60:	str	r0, [r1, #8]
     d64:	sub	sp, fp, #16
     d68:	pop	{r4, r5, r6, sl, fp, pc}
     d6c:	ldr	r1, [r4, #56]	; 0x38
     d70:	ldr	r2, [r6, #288]	; 0x120
     d74:	b	bb8 <h_hdl_umode_changed+0x60>
     d78:	ldr	r0, [pc, #120]	; df8 <h_hdl_umode_changed+0x2a0>
     d7c:	ldr	r1, [pc, #120]	; dfc <h_hdl_umode_changed+0x2a4>
     d80:	ldr	r3, [pc, #120]	; e00 <h_hdl_umode_changed+0x2a8>
     d84:	mov	r2, #288	; 0x120
     d88:	add	r0, pc, r0
     d8c:	add	r1, pc, r1
     d90:	add	r3, pc, r3
     d94:	bl	85c <__assert_fail@plt>
     d98:	ldr	r0, [pc, #76]	; dec <h_hdl_umode_changed+0x294>
     d9c:	ldr	r1, [pc, #76]	; df0 <h_hdl_umode_changed+0x298>
     da0:	ldr	r3, [pc, #76]	; df4 <h_hdl_umode_changed+0x29c>
     da4:	mov	r2, #144	; 0x90
     da8:	add	r0, pc, r0
     dac:	add	r1, pc, r1
     db0:	add	r3, pc, r3
     db4:	bl	85c <__assert_fail@plt>
     db8:	.word	0x000114d4
     dbc:	.word	0x0000090d
     dc0:	.word	0x000009f9
     dc4:	.word	0x00011484
     dc8:	.word	0x00000888
     dcc:	.word	0x00011534
     dd0:	.word	0x000114c0
     dd4:	.word	0x000114b0
     dd8:	.word	0x0001145c
     ddc:	.word	0x00011410
     de0:	.word	0x000113f0
     de4:	.word	0x000113dc
     de8:	.word	0x000114fc
     dec:	.word	0x000007de
     df0:	.word	0x00000776
     df4:	.word	0x0000079b
     df8:	.word	0x000007b6
     dfc:	.word	0x00000796
     e00:	.word	0x00000800

00000e04 <h_hdl_whois>:
     e04:	ldr	r1, [pc, #72]	; e54 <h_hdl_whois+0x50>
     e08:	ldr	r1, [pc, r1]
     e0c:	ldr	r2, [r1, #288]	; 0x120
     e10:	ldr	r1, [r0, #4]
     e14:	ldr	r3, [r1, #56]	; 0x38
     e18:	tst	r2, r3
     e1c:	bxeq	lr
     e20:	ldr	r2, [r1, #24]
     e24:	ldr	r0, [r0]
     e28:	ldr	r2, [r2, #24]
     e2c:	cmp	r2, #0
     e30:	ldrbne	r2, [r2]
     e34:	cmpne	r2, #0
     e38:	bne	e50 <h_hdl_whois+0x4c>
     e3c:	ldr	r2, [pc, #20]	; e58 <h_hdl_whois+0x54>
     e40:	add	r3, r1, #88	; 0x58
     e44:	movw	r1, #310	; 0x136
     e48:	add	r2, pc, r2
     e4c:	b	820 <sendto_one_numeric@plt>
     e50:	bx	lr
     e54:	.word	0x00011240
     e58:	.word	0x0000078a

00000e5c <me_dehelper>:
     e5c:	push	{r4, r5, r6, sl, fp, lr}
     e60:	add	fp, sp, #16
     e64:	sub	sp, sp, #24
     e68:	ldr	r6, [fp, #8]
     e6c:	mov	r5, r2
     e70:	ldr	r0, [r6, #4]
     e74:	bl	82c <find_person@plt>
     e78:	cmp	r0, #0
     e7c:	beq	f24 <me_dehelper+0xc8>
     e80:	mov	r4, r0
     e84:	ldrb	r0, [r0, #65]	; 0x41
     e88:	tst	r0, #32
     e8c:	beq	f1c <me_dehelper+0xc0>
     e90:	ldrh	r0, [r4, #80]	; 0x50
     e94:	cmp	r0, #64	; 0x40
     e98:	bne	f1c <me_dehelper+0xc0>
     e9c:	ldr	r0, [r4, #56]	; 0x38
     ea0:	ldr	r1, [pc, #156]	; f44 <me_dehelper+0xe8>
     ea4:	ldr	r1, [pc, r1]
     ea8:	ldr	r1, [r1, #288]	; 0x120
     eac:	tst	r1, r0
     eb0:	beq	f1c <me_dehelper+0xc0>
     eb4:	add	r6, r4, #88	; 0x58
     eb8:	add	r5, r5, #88	; 0x58
     ebc:	mov	r0, #256	; 0x100
     ec0:	mov	r1, #256	; 0x100
     ec4:	str	r6, [sp]
     ec8:	mov	r3, r5
     ecc:	ldr	r2, [pc, #116]	; f48 <me_dehelper+0xec>
     ed0:	add	r2, pc, r2
     ed4:	bl	7e4 <sendto_realops_snomask@plt>
     ed8:	ldr	r1, [pc, #108]	; f4c <me_dehelper+0xf0>
     edc:	mov	r0, r4
     ee0:	mov	r2, r5
     ee4:	add	r1, pc, r1
     ee8:	bl	838 <sendto_one_notice@plt>
     eec:	str	r6, [sp, #8]
     ef0:	str	r6, [sp, #12]
     ef4:	add	r3, sp, #8
     ef8:	mov	r1, r4
     efc:	mov	r2, #3
     f00:	ldr	r0, [pc, #72]	; f50 <me_dehelper+0xf4>
     f04:	add	r0, pc, r0
     f08:	str	r0, [sp, #16]
     f0c:	mov	r0, #0
     f10:	str	r0, [sp, #20]
     f14:	mov	r0, r4
     f18:	bl	7d8 <user_mode@plt>
     f1c:	sub	sp, fp, #16
     f20:	pop	{r4, r5, r6, sl, fp, pc}
     f24:	ldr	r3, [r6, #4]
     f28:	ldr	r2, [pc, #36]	; f54 <me_dehelper+0xf8>
     f2c:	mov	r0, r5
     f30:	movw	r1, #401	; 0x191
     f34:	add	r2, pc, r2
     f38:	sub	sp, fp, #16
     f3c:	pop	{r4, r5, r6, sl, fp, lr}
     f40:	b	820 <sendto_one_numeric@plt>
     f44:	.word	0x000111a4
     f48:	.word	0x000005f1
     f4c:	.word	0x000005f8
     f50:	.word	0x000005f9
     f54:	.word	0x0000055b

00000f58 <mo_dehelper>:
     f58:	push	{r4, r5, r6, sl, fp, lr}
     f5c:	add	fp, sp, #16
     f60:	sub	sp, sp, #24
     f64:	ldr	r0, [r2, #24]
     f68:	mov	r4, r2
     f6c:	cmp	r0, #0
     f70:	ldrne	r0, [r0, #36]	; 0x24
     f74:	cmpne	r0, #0
     f78:	bne	fb0 <mo_dehelper+0x58>
     f7c:	ldr	r0, [pc, #352]	; 10e4 <mo_dehelper+0x18c>
     f80:	add	r3, r4, #88	; 0x58
     f84:	add	r0, pc, r0
     f88:	str	r0, [sp]
     f8c:	ldr	r0, [pc, #340]	; 10e8 <mo_dehelper+0x190>
     f90:	ldr	r0, [pc, r0]
     f94:	ldr	r1, [pc, #336]	; 10ec <mo_dehelper+0x194>
     f98:	add	r2, r0, #88	; 0x58
     f9c:	add	r1, pc, r1
     fa0:	mov	r0, r4
     fa4:	bl	7cc <sendto_one@plt>
     fa8:	sub	sp, fp, #16
     fac:	pop	{r4, r5, r6, sl, fp, pc}
     fb0:	ldr	r6, [fp, #8]
     fb4:	ldr	r1, [pc, #292]	; 10e0 <mo_dehelper+0x188>
     fb8:	add	r1, pc, r1
     fbc:	bl	850 <privilegeset_in_set@plt>
     fc0:	cmp	r0, #0
     fc4:	beq	f7c <mo_dehelper+0x24>
     fc8:	ldr	r0, [r6, #4]
     fcc:	bl	844 <find_named_person@plt>
     fd0:	cmp	r0, #0
     fd4:	beq	10c0 <mo_dehelper+0x168>
     fd8:	mov	r5, r0
     fdc:	ldrb	r0, [r0, #65]	; 0x41
     fe0:	tst	r0, #32
     fe4:	beq	107c <mo_dehelper+0x124>
     fe8:	ldrh	r0, [r5, #80]	; 0x50
     fec:	cmp	r0, #64	; 0x40
     ff0:	bne	107c <mo_dehelper+0x124>
     ff4:	ldr	r0, [r5, #56]	; 0x38
     ff8:	ldr	r1, [pc, #240]	; 10f0 <mo_dehelper+0x198>
     ffc:	ldr	r1, [pc, r1]
    1000:	ldr	r1, [r1, #288]	; 0x120
    1004:	tst	r1, r0
    1008:	beq	1074 <mo_dehelper+0x11c>
    100c:	add	r6, r5, #88	; 0x58
    1010:	add	r4, r4, #88	; 0x58
    1014:	mov	r0, #256	; 0x100
    1018:	mov	r1, #256	; 0x100
    101c:	str	r6, [sp]
    1020:	mov	r3, r4
    1024:	ldr	r2, [pc, #200]	; 10f4 <mo_dehelper+0x19c>
    1028:	add	r2, pc, r2
    102c:	bl	7e4 <sendto_realops_snomask@plt>
    1030:	ldr	r1, [pc, #192]	; 10f8 <mo_dehelper+0x1a0>
    1034:	mov	r0, r5
    1038:	mov	r2, r4
    103c:	add	r1, pc, r1
    1040:	bl	838 <sendto_one_notice@plt>
    1044:	str	r6, [sp, #8]
    1048:	str	r6, [sp, #12]
    104c:	add	r3, sp, #8
    1050:	mov	r1, r5
    1054:	mov	r2, #3
    1058:	ldr	r0, [pc, #156]	; 10fc <mo_dehelper+0x1a4>
    105c:	add	r0, pc, r0
    1060:	str	r0, [sp, #16]
    1064:	mov	r0, #0
    1068:	str	r0, [sp, #20]
    106c:	mov	r0, r5
    1070:	bl	7d8 <user_mode@plt>
    1074:	sub	sp, fp, #16
    1078:	pop	{r4, r5, r6, sl, fp, pc}
    107c:	mov	r0, r5
    1080:	ldrb	r2, [r4, #396]!	; 0x18c
    1084:	ldrb	r1, [r0, #396]!	; 0x18c
    1088:	cmp	r1, #0
    108c:	ldr	r1, [r5, #32]
    1090:	addeq	r0, r5, #88	; 0x58
    1094:	cmp	r2, #0
    1098:	str	r0, [sp]
    109c:	subeq	r4, r4, #308	; 0x134
    10a0:	mov	r0, r5
    10a4:	mov	r2, r4
    10a8:	add	r3, r1, #88	; 0x58
    10ac:	ldr	r1, [pc, #76]	; 1100 <mo_dehelper+0x1a8>
    10b0:	add	r1, pc, r1
    10b4:	bl	7cc <sendto_one@plt>
    10b8:	sub	sp, fp, #16
    10bc:	pop	{r4, r5, r6, sl, fp, pc}
    10c0:	ldr	r3, [r6, #4]
    10c4:	ldr	r2, [pc, #56]	; 1104 <mo_dehelper+0x1ac>
    10c8:	mov	r0, r4
    10cc:	movw	r1, #401	; 0x191
    10d0:	add	r2, pc, r2
    10d4:	sub	sp, fp, #16
    10d8:	pop	{r4, r5, r6, sl, fp, lr}
    10dc:	b	820 <sendto_one_numeric@plt>
    10e0:	.word	0x000004a2
    10e4:	.word	0x000004db
    10e8:	.word	0x000110c8
    10ec:	.word	0x000004cc
    10f0:	.word	0x0001104c
    10f4:	.word	0x00000499
    10f8:	.word	0x000004a0
    10fc:	.word	0x000004a1
    1100:	.word	0x000003f8
    1104:	.word	0x000003bf

00001108 <_modinit>:
    1108:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    110c:	add	fp, sp, #24
    1110:	bl	7f0 <find_umode_slot@plt>
    1114:	ldr	r4, [pc, #276]	; 1230 <_modinit+0x128>
    1118:	ldr	r4, [pc, r4]
    111c:	str	r0, [r4, #288]	; 0x120
    1120:	bl	868 <construct_umodebuf@plt>
    1124:	ldr	r0, [pc, #264]	; 1234 <_modinit+0x12c>
    1128:	ldr	r0, [pc, r0]
    112c:	ldr	r5, [r0]
    1130:	cmp	r5, #0
    1134:	beq	1208 <_modinit+0x100>
    1138:	ldr	r7, [pc, #248]	; 1238 <_modinit+0x130>
    113c:	mov	r8, #0
    1140:	add	r7, pc, r7
    1144:	ldr	r6, [r5]
    1148:	ldrh	r0, [r6, #80]	; 0x50
    114c:	cmp	r0, #64	; 0x40
    1150:	bne	119c <_modinit+0x94>
    1154:	ldr	r0, [r6, #24]
    1158:	cmp	r0, #0
    115c:	beq	119c <_modinit+0x94>
    1160:	ldr	r0, [r6, #56]	; 0x38
    1164:	ldr	r1, [r4, #288]	; 0x120
    1168:	tst	r1, r0
    116c:	beq	119c <_modinit+0x94>
    1170:	ldr	r0, [pc, #196]	; 123c <_modinit+0x134>
    1174:	ldr	r0, [pc, r0]
    1178:	cmp	r0, #0
    117c:	bne	1190 <_modinit+0x88>
    1180:	b	11ac <_modinit+0xa4>
    1184:	ldr	r0, [r0, #8]
    1188:	cmp	r0, #0
    118c:	beq	11ac <_modinit+0xa4>
    1190:	ldr	r1, [r0]
    1194:	cmp	r1, r6
    1198:	bne	1184 <_modinit+0x7c>
    119c:	ldr	r5, [r5, #8]
    11a0:	cmp	r5, #0
    11a4:	bne	1144 <_modinit+0x3c>
    11a8:	b	1208 <_modinit+0x100>
    11ac:	bl	814 <rb_make_rb_dlink_node@plt>
    11b0:	cmp	r0, #0
    11b4:	beq	1210 <_modinit+0x108>
    11b8:	stm	r0, {r6, r8}
    11bc:	ldr	r1, [pc, #124]	; 1240 <_modinit+0x138>
    11c0:	ldr	r1, [pc, r1]
    11c4:	cmp	r1, #0
    11c8:	str	r1, [r0, #8]
    11cc:	beq	11dc <_modinit+0xd4>
    11d0:	add	r1, r1, #4
    11d4:	str	r0, [r1]
    11d8:	b	11ec <_modinit+0xe4>
    11dc:	mov	r1, r7
    11e0:	ldr	r2, [r1, #4]!
    11e4:	cmp	r2, #0
    11e8:	streq	r0, [r1]
    11ec:	str	r0, [r7]
    11f0:	ldr	r0, [r7, #8]
    11f4:	add	r0, r0, #1
    11f8:	str	r0, [r7, #8]
    11fc:	ldr	r5, [r5, #8]
    1200:	cmp	r5, #0
    1204:	bne	1144 <_modinit+0x3c>
    1208:	mov	r0, #0
    120c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1210:	ldr	r0, [pc, #44]	; 1244 <_modinit+0x13c>
    1214:	ldr	r1, [pc, #44]	; 1248 <_modinit+0x140>
    1218:	ldr	r3, [pc, #44]	; 124c <_modinit+0x144>
    121c:	mov	r2, #144	; 0x90
    1220:	add	r0, pc, r0
    1224:	add	r1, pc, r1
    1228:	add	r3, pc, r3
    122c:	bl	85c <__assert_fail@plt>
    1230:	.word	0x00010f30
    1234:	.word	0x00010f28
    1238:	.word	0x00010fec
    123c:	.word	0x00010fb8
    1240:	.word	0x00010f6c
    1244:	.word	0x00000366
    1248:	.word	0x000002fe
    124c:	.word	0x00000323

00001250 <_moddeinit>:
    1250:	push	{r4, r5, r6, sl, fp, lr}
    1254:	add	fp, sp, #16
    1258:	ldr	r0, [pc, #112]	; 12d0 <_moddeinit+0x80>
    125c:	mov	r4, #0
    1260:	ldr	r0, [pc, r0]
    1264:	str	r4, [r0, #288]	; 0x120
    1268:	bl	868 <construct_umodebuf@plt>
    126c:	ldr	r0, [pc, #96]	; 12d4 <_moddeinit+0x84>
    1270:	ldr	r0, [pc, r0]
    1274:	cmp	r0, #0
    1278:	popeq	{r4, r5, r6, sl, fp, pc}
    127c:	ldr	r5, [pc, #84]	; 12d8 <_moddeinit+0x88>
    1280:	add	r5, pc, r5
    1284:	ldmib	r0, {r1, r6}
    1288:	mov	r2, r5
    128c:	cmp	r6, #0
    1290:	streq	r1, [r5, #4]
    1294:	strne	r1, [r6, #4]
    1298:	ldrne	r1, [r0, #4]
    129c:	cmp	r1, #0
    12a0:	addne	r2, r1, #8
    12a4:	str	r6, [r2]
    12a8:	str	r4, [r0, #4]
    12ac:	str	r4, [r0, #8]
    12b0:	ldr	r1, [r5, #8]
    12b4:	sub	r1, r1, #1
    12b8:	str	r1, [r5, #8]
    12bc:	bl	7fc <rb_free_rb_dlink_node@plt>
    12c0:	cmp	r6, #0
    12c4:	mov	r0, r6
    12c8:	bne	1284 <_moddeinit+0x34>
    12cc:	pop	{r4, r5, r6, sl, fp, pc}
    12d0:	.word	0x00010de8
    12d4:	.word	0x00010ebc
    12d8:	.word	0x00010eac

000012dc <recurse_client_exit>:
    12dc:	push	{r4, r5, fp, lr}
    12e0:	add	fp, sp, #8
    12e4:	mov	r4, r0
    12e8:	ldrh	r0, [r0, #80]	; 0x50
    12ec:	cmp	r0, #32
    12f0:	beq	135c <recurse_client_exit+0x80>
    12f4:	cmp	r0, #64	; 0x40
    12f8:	bne	13a4 <recurse_client_exit+0xc8>
    12fc:	ldr	r0, [r4, #24]
    1300:	cmp	r0, #0
    1304:	beq	13a4 <recurse_client_exit+0xc8>
    1308:	ldr	r0, [r4, #56]	; 0x38
    130c:	ldr	r1, [pc, #216]	; 13ec <recurse_client_exit+0x110>
    1310:	ldr	r1, [pc, r1]
    1314:	ldr	r1, [r1, #288]	; 0x120
    1318:	tst	r1, r0
    131c:	beq	13a4 <recurse_client_exit+0xc8>
    1320:	ldr	r1, [pc, #200]	; 13f0 <recurse_client_exit+0x114>
    1324:	ldr	r1, [pc, r1]
    1328:	cmp	r1, #0
    132c:	popeq	{r4, r5, fp, pc}
    1330:	ldr	r2, [r1]
    1334:	mov	r0, r1
    1338:	ldr	r1, [r1, #8]
    133c:	cmp	r2, r4
    1340:	bne	1328 <recurse_client_exit+0x4c>
    1344:	ldr	r2, [r0, #4]
    1348:	cmp	r1, #0
    134c:	beq	13a8 <recurse_client_exit+0xcc>
    1350:	str	r2, [r1, #4]
    1354:	ldr	r2, [r0, #4]
    1358:	b	13b4 <recurse_client_exit+0xd8>
    135c:	ldr	r0, [r4, #28]
    1360:	ldr	r5, [r0, #48]	; 0x30
    1364:	cmp	r5, #0
    1368:	beq	1384 <recurse_client_exit+0xa8>
    136c:	ldr	r0, [r5]
    1370:	bl	12dc <recurse_client_exit>
    1374:	ldr	r5, [r5, #8]
    1378:	cmp	r5, #0
    137c:	bne	136c <recurse_client_exit+0x90>
    1380:	ldr	r0, [r4, #28]
    1384:	ldr	r4, [r0, #36]	; 0x24
    1388:	cmp	r4, #0
    138c:	beq	13a4 <recurse_client_exit+0xc8>
    1390:	ldr	r0, [r4]
    1394:	bl	12dc <recurse_client_exit>
    1398:	ldr	r4, [r4, #8]
    139c:	cmp	r4, #0
    13a0:	bne	1390 <recurse_client_exit+0xb4>
    13a4:	pop	{r4, r5, fp, pc}
    13a8:	ldr	r3, [pc, #68]	; 13f4 <recurse_client_exit+0x118>
    13ac:	add	r3, pc, r3
    13b0:	str	r2, [r3, #4]
    13b4:	ldr	r5, [pc, #60]	; 13f8 <recurse_client_exit+0x11c>
    13b8:	cmp	r2, #0
    13bc:	add	r5, pc, r5
    13c0:	mov	r3, r5
    13c4:	addne	r3, r2, #8
    13c8:	str	r1, [r3]
    13cc:	mov	r1, #0
    13d0:	str	r1, [r0, #4]
    13d4:	str	r1, [r0, #8]
    13d8:	ldr	r1, [r5, #8]
    13dc:	sub	r1, r1, #1
    13e0:	str	r1, [r5, #8]
    13e4:	pop	{r4, r5, fp, lr}
    13e8:	b	7fc <rb_free_rb_dlink_node@plt>
    13ec:	.word	0x00010d38
    13f0:	.word	0x00010e08
    13f4:	.word	0x00010d80
    13f8:	.word	0x00010d70

Disassembly of section .fini:

000013fc <_fini>:
    13fc:	push	{r3, lr}
    1400:	pop	{r3, pc}
