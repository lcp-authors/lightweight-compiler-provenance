
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

0000208c <.init>:
    208c:	push	{r3, lr}
    2090:	bl	2500 <__assert_fail@plt+0x10>
    2094:	pop	{r3, pc}

Disassembly of section .plt:

00002098 <calloc@plt-0x14>:
    2098:	push	{lr}		; (str lr, [sp, #-4]!)
    209c:	ldr	lr, [pc, #4]	; 20a8 <calloc@plt-0x4>
    20a0:	add	lr, pc, lr
    20a4:	ldr	pc, [lr, #8]!
    20a8:	andeq	r6, r2, r8, asr pc

000020ac <calloc@plt>:
    20ac:	add	ip, pc, #0, 12
    20b0:	add	ip, ip, #155648	; 0x26000
    20b4:	ldr	pc, [ip, #3928]!	; 0xf58

000020b8 <raise@plt>:
    20b8:	add	ip, pc, #0, 12
    20bc:	add	ip, ip, #155648	; 0x26000
    20c0:	ldr	pc, [ip, #3920]!	; 0xf50

000020c4 <btbb_piconet_new@plt>:
    20c4:	add	ip, pc, #0, 12
    20c8:	add	ip, ip, #155648	; 0x26000
    20cc:	ldr	pc, [ip, #3912]!	; 0xf48

000020d0 <gen_hop_pattern@plt>:
    20d0:	add	ip, pc, #0, 12
    20d4:	add	ip, ip, #155648	; 0x26000
    20d8:	ldr	pc, [ip, #3904]!	; 0xf40

000020dc <count_bits@plt>:
    20dc:	add	ip, pc, #0, 12
    20e0:	add	ip, ip, #155648	; 0x26000
    20e4:	ldr	pc, [ip, #3896]!	; 0xf38

000020e8 <__cxa_finalize@plt>:
    20e8:	add	ip, pc, #0, 12
    20ec:	add	ip, ip, #155648	; 0x26000
    20f0:	ldr	pc, [ip, #3888]!	; 0xf30

000020f4 <btbb_get_payload_packed@plt>:
    20f4:	add	ip, pc, #0, 12
    20f8:	add	ip, ip, #155648	; 0x26000
    20fc:	ldr	pc, [ip, #3880]!	; 0xf28

00002100 <printf@plt>:
    2100:	add	ip, pc, #0, 12
    2104:	add	ip, ip, #155648	; 0x26000
    2108:	ldr	pc, [ip, #3872]!	; 0xf20

0000210c <fopen@plt>:
    210c:	add	ip, pc, #0, 12
    2110:	add	ip, ip, #155648	; 0x26000
    2114:	ldr	pc, [ip, #3864]!	; 0xf18

00002118 <lell_packet_is_data@plt>:
    2118:	add	ip, pc, #0, 12
    211c:	add	ip, ip, #155648	; 0x26000
    2120:	ldr	pc, [ip, #3856]!	; 0xf10

00002124 <fflush@plt>:
    2124:	add	ip, pc, #0, 12
    2128:	add	ip, ip, #155648	; 0x26000
    212c:	ldr	pc, [ip, #3848]!	; 0xf08

00002130 <btbb_packet_set_flag@plt>:
    2130:	add	ip, pc, #0, 12
    2134:	add	ip, ip, #155648	; 0x26000
    2138:	ldr	pc, [ip, #3840]!	; 0xf00

0000213c <pcapng_append_interface_option@plt>:
    213c:	add	ip, pc, #0, 12
    2140:	add	ip, ip, #155648	; 0x26000
    2144:	ldr	pc, [ip, #3832]!	; 0xef8

00002148 <free@plt>:
    2148:	add	ip, pc, #0, 12
    214c:	add	ip, ip, #155648	; 0x26000
    2150:	ldr	pc, [ip, #3824]!	; 0xef0

00002154 <btbb_packet_get_modulation@plt>:
    2154:	add	ip, pc, #0, 12
    2158:	add	ip, ip, #155648	; 0x26000
    215c:	ldr	pc, [ip, #3816]!	; 0xee8

00002160 <btbb_packet_get_ac_errors@plt>:
    2160:	add	ip, pc, #0, 12
    2164:	add	ip, ip, #155648	; 0x26000
    2168:	ldr	pc, [ip, #3808]!	; 0xee0

0000216c <memcpy@plt>:
    216c:	add	ip, pc, #0, 12
    2170:	add	ip, ip, #155648	; 0x26000
    2174:	ldr	pc, [ip, #3800]!	; 0xed8

00002178 <btbb_uap_from_header@plt>:
    2178:	add	ip, pc, #0, 12
    217c:	add	ip, ip, #155648	; 0x26000
    2180:	ldr	pc, [ip, #3792]!	; 0xed0

00002184 <btbb_packet_get_flag@plt>:
    2184:	add	ip, pc, #0, 12
    2188:	add	ip, ip, #155648	; 0x26000
    218c:	ldr	pc, [ip, #3784]!	; 0xec8

00002190 <fhs@plt>:
    2190:	add	ip, pc, #0, 12
    2194:	add	ip, ip, #155648	; 0x26000
    2198:	ldr	pc, [ip, #3776]!	; 0xec0

0000219c <EV4@plt>:
    219c:	add	ip, pc, #0, 12
    21a0:	add	ip, ip, #155648	; 0x26000
    21a4:	ldr	pc, [ip, #3768]!	; 0xeb8

000021a8 <btbb_piconet_get_uap@plt>:
    21a8:	add	ip, pc, #0, 12
    21ac:	add	ip, ip, #155648	; 0x26000
    21b0:	ldr	pc, [ip, #3760]!	; 0xeb0

000021b4 <memcmp@plt>:
    21b4:	add	ip, pc, #0, 12
    21b8:	add	ip, ip, #155648	; 0x26000
    21bc:	ldr	pc, [ip, #3752]!	; 0xea8

000021c0 <lell_pcap_close@plt>:
    21c0:	add	ip, pc, #0, 12
    21c4:	add	ip, ip, #155648	; 0x26000
    21c8:	ldr	pc, [ip, #3744]!	; 0xea0

000021cc <btbb_piconet_get_channel_seen@plt>:
    21cc:	add	ip, pc, #0, 12
    21d0:	add	ip, ip, #155648	; 0x26000
    21d4:	ldr	pc, [ip, #3736]!	; 0xe98

000021d8 <btbb_pcap_open@plt>:
    21d8:	add	ip, pc, #0, 12
    21dc:	add	ip, ip, #155648	; 0x26000
    21e0:	ldr	pc, [ip, #3728]!	; 0xe90

000021e4 <btbb_header_present@plt>:
    21e4:	add	ip, pc, #0, 12
    21e8:	add	ip, ip, #155648	; 0x26000
    21ec:	ldr	pc, [ip, #3720]!	; 0xe88

000021f0 <btbb_piconet_get_flag@plt>:
    21f0:	add	ip, pc, #0, 12
    21f4:	add	ip, ip, #155648	; 0x26000
    21f8:	ldr	pc, [ip, #3712]!	; 0xe80

000021fc <pcapng_create@plt>:
    21fc:	add	ip, pc, #0, 12
    2200:	add	ip, ip, #155648	; 0x26000
    2204:	ldr	pc, [ip, #3704]!	; 0xe78

00002208 <DM@plt>:
    2208:	add	ip, pc, #0, 12
    220c:	add	ip, ip, #155648	; 0x26000
    2210:	ldr	pc, [ip, #3696]!	; 0xe70

00002214 <btbb_piconet_set_flag@plt>:
    2214:	add	ip, pc, #0, 12
    2218:	add	ip, ip, #155648	; 0x26000
    221c:	ldr	pc, [ip, #3688]!	; 0xe68

00002220 <HV@plt>:
    2220:	add	ip, pc, #0, 12
    2224:	add	ip, ip, #155648	; 0x26000
    2228:	ldr	pc, [ip, #3680]!	; 0xe60

0000222c <perror@plt>:
    222c:	add	ip, pc, #0, 12
    2230:	add	ip, ip, #155648	; 0x26000
    2234:	ldr	pc, [ip, #3672]!	; 0xe58

00002238 <btbb_piconet_set_channel_seen@plt>:
    2238:	add	ip, pc, #0, 12
    223c:	add	ip, ip, #155648	; 0x26000
    2240:	ldr	pc, [ip, #3664]!	; 0xe50

00002244 <perm_table_init@plt>:
    2244:	add	ip, pc, #0, 12
    2248:	add	ip, ip, #155648	; 0x26000
    224c:	ldr	pc, [ip, #3656]!	; 0xe48

00002250 <btbb_packet_set_uap@plt>:
    2250:	add	ip, pc, #0, 12
    2254:	add	ip, ip, #155648	; 0x26000
    2258:	ldr	pc, [ip, #3648]!	; 0xe40

0000225c <fwrite@plt>:
    225c:	add	ip, pc, #0, 12
    2260:	add	ip, ip, #155648	; 0x26000
    2264:	ldr	pc, [ip, #3640]!	; 0xe38

00002268 <btbb_gen_syncword@plt>:
    2268:	add	ip, pc, #0, 12
    226c:	add	ip, ip, #155648	; 0x26000
    2270:	ldr	pc, [ip, #3632]!	; 0xe30

00002274 <btbb_pcap_close@plt>:
    2274:	add	ip, pc, #0, 12
    2278:	add	ip, ip, #155648	; 0x26000
    227c:	ldr	pc, [ip, #3624]!	; 0xe28

00002280 <crc_check@plt>:
    2280:	add	ip, pc, #0, 12
    2284:	add	ip, ip, #155648	; 0x26000
    2288:	ldr	pc, [ip, #3616]!	; 0xe20

0000228c <btbb_decode@plt>:
    228c:	add	ip, pc, #0, 12
    2290:	add	ip, ip, #155648	; 0x26000
    2294:	ldr	pc, [ip, #3608]!	; 0xe18

00002298 <btbb_winnow@plt>:
    2298:	add	ip, pc, #0, 12
    229c:	add	ip, ip, #155648	; 0x26000
    22a0:	ldr	pc, [ip, #3600]!	; 0xe10

000022a4 <lell_get_adv_type_str@plt>:
    22a4:	add	ip, pc, #0, 12
    22a8:	add	ip, ip, #155648	; 0x26000
    22ac:	ldr	pc, [ip, #3592]!	; 0xe08

000022b0 <get_hop_pattern@plt>:
    22b0:	add	ip, pc, #0, 12
    22b4:	add	ip, ip, #155648	; 0x26000
    22b8:	ldr	pc, [ip, #3584]!	; 0xe00

000022bc <puts@plt>:
    22bc:	add	ip, pc, #0, 12
    22c0:	add	ip, ip, #155648	; 0x26000
    22c4:	ldr	pc, [ip, #3576]!	; 0xdf8

000022c8 <malloc@plt>:
    22c8:	add	ip, pc, #0, 12
    22cc:	add	ip, ip, #155648	; 0x26000
    22d0:	ldr	pc, [ip, #3568]!	; 0xdf0

000022d4 <try_hop@plt>:
    22d4:	add	ip, pc, #0, 12
    22d8:	add	ip, ip, #155648	; 0x26000
    22dc:	ldr	pc, [ip, #3560]!	; 0xde8

000022e0 <btbb_packet_new@plt>:
    22e0:	add	ip, pc, #0, 12
    22e4:	add	ip, ip, #155648	; 0x26000
    22e8:	ldr	pc, [ip, #3552]!	; 0xde0

000022ec <btbb_pcap_dump@plt>:
    22ec:	add	ip, pc, #0, 12
    22f0:	add	ip, ip, #155648	; 0x26000
    22f4:	ldr	pc, [ip, #3544]!	; 0xdd8

000022f8 <__gmon_start__@plt>:
    22f8:	add	ip, pc, #0, 12
    22fc:	add	ip, ip, #155648	; 0x26000
    2300:	ldr	pc, [ip, #3536]!	; 0xdd0

00002304 <open@plt>:
    2304:	add	ip, pc, #0, 12
    2308:	add	ip, ip, #155648	; 0x26000
    230c:	ldr	pc, [ip, #3528]!	; 0xdc8

00002310 <__ctype_b_loc@plt>:
    2310:	add	ip, pc, #0, 12
    2314:	add	ip, ip, #155648	; 0x26000
    2318:	ldr	pc, [ip, #3520]!	; 0xdc0

0000231c <exit@plt>:
    231c:	add	ip, pc, #0, 12
    2320:	add	ip, ip, #155648	; 0x26000
    2324:	ldr	pc, [ip, #3512]!	; 0xdb8

00002328 <btbb_packet_get_payload_length@plt>:
    2328:	add	ip, pc, #0, 12
    232c:	add	ip, ip, #155648	; 0x26000
    2330:	ldr	pc, [ip, #3504]!	; 0xdb0

00002334 <strlen@plt>:
    2334:	add	ip, pc, #0, 12
    2338:	add	ip, ip, #155648	; 0x26000
    233c:	ldr	pc, [ip, #3496]!	; 0xda8

00002340 <btbb_decode_header@plt>:
    2340:	add	ip, pc, #0, 12
    2344:	add	ip, ip, #155648	; 0x26000
    2348:	ldr	pc, [ip, #3488]!	; 0xda0

0000234c <mmap@plt>:
    234c:	add	ip, pc, #0, 12
    2350:	add	ip, ip, #155648	; 0x26000
    2354:	ldr	pc, [ip, #3480]!	; 0xd98

00002358 <btbb_packet_get_header_packed@plt>:
    2358:	add	ip, pc, #0, 12
    235c:	add	ip, ip, #155648	; 0x26000
    2360:	ldr	pc, [ip, #3472]!	; 0xd90

00002364 <lell_pcapng_record_connect_req@plt>:
    2364:	add	ip, pc, #0, 12
    2368:	add	ip, ip, #155648	; 0x26000
    236c:	ldr	pc, [ip, #3464]!	; 0xd88

00002370 <lell_get_channel_k@plt>:
    2370:	add	ip, pc, #0, 12
    2374:	add	ip, ip, #155648	; 0x26000
    2378:	ldr	pc, [ip, #3456]!	; 0xd80

0000237c <fprintf@plt>:
    237c:	add	ip, pc, #0, 12
    2380:	add	ip, ip, #155648	; 0x26000
    2384:	ldr	pc, [ip, #3448]!	; 0xd78

00002388 <getpagesize@plt>:
    2388:	add	ip, pc, #0, 12
    238c:	add	ip, ip, #155648	; 0x26000
    2390:	ldr	pc, [ip, #3440]!	; 0xd70

00002394 <pcapng_append_packet@plt>:
    2394:	add	ip, pc, #0, 12
    2398:	add	ip, ip, #155648	; 0x26000
    239c:	ldr	pc, [ip, #3432]!	; 0xd68

000023a0 <btbb_packet_get_transport@plt>:
    23a0:	add	ip, pc, #0, 12
    23a4:	add	ip, ip, #155648	; 0x26000
    23a8:	ldr	pc, [ip, #3424]!	; 0xd60

000023ac <find_known_lap@plt>:
    23ac:	add	ip, pc, #0, 12
    23b0:	add	ip, ip, #155648	; 0x26000
    23b4:	ldr	pc, [ip, #3416]!	; 0xd58

000023b8 <address_precalc@plt>:
    23b8:	add	ip, pc, #0, 12
    23bc:	add	ip, ip, #155648	; 0x26000
    23c0:	ldr	pc, [ip, #3408]!	; 0xd50

000023c4 <memset@plt>:
    23c4:	add	ip, pc, #0, 12
    23c8:	add	ip, ip, #155648	; 0x26000
    23cc:	ldr	pc, [ip, #3400]!	; 0xd48

000023d0 <putchar@plt>:
    23d0:	add	ip, pc, #0, 12
    23d4:	add	ip, ip, #155648	; 0x26000
    23d8:	ldr	pc, [ip, #3392]!	; 0xd40

000023dc <strncpy@plt>:
    23dc:	add	ip, pc, #0, 12
    23e0:	add	ip, ip, #155648	; 0x26000
    23e4:	ldr	pc, [ip, #3384]!	; 0xd38

000023e8 <EV3@plt>:
    23e8:	add	ip, pc, #0, 12
    23ec:	add	ip, ip, #155648	; 0x26000
    23f0:	ldr	pc, [ip, #3376]!	; 0xd30

000023f4 <btbb_packet_get_lap@plt>:
    23f4:	add	ip, pc, #0, 12
    23f8:	add	ip, ip, #155648	; 0x26000
    23fc:	ldr	pc, [ip, #3368]!	; 0xd28

00002400 <lell_packet_new@plt>:
    2400:	add	ip, pc, #0, 12
    2404:	add	ip, ip, #155648	; 0x26000
    2408:	ldr	pc, [ip, #3360]!	; 0xd20

0000240c <bt_compidtostr@plt>:
    240c:	add	ip, pc, #0, 12
    2410:	add	ip, ip, #155648	; 0x26000
    2414:	ldr	pc, [ip, #3352]!	; 0xd18

00002418 <write@plt>:
    2418:	add	ip, pc, #0, 12
    241c:	add	ip, ip, #155648	; 0x26000
    2420:	ldr	pc, [ip, #3344]!	; 0xd10

00002424 <get_piconet@plt>:
    2424:	add	ip, pc, #0, 12
    2428:	add	ip, ip, #155648	; 0x26000
    242c:	ldr	pc, [ip, #3336]!	; 0xd08

00002430 <perm5@plt>:
    2430:	add	ip, pc, #0, 12
    2434:	add	ip, ip, #155648	; 0x26000
    2438:	ldr	pc, [ip, #3328]!	; 0xd00

0000243c <fclose@plt>:
    243c:	add	ip, pc, #0, 12
    2440:	add	ip, ip, #155648	; 0x26000
    2444:	ldr	pc, [ip, #3320]!	; 0xcf8

00002448 <EV5@plt>:
    2448:	add	ip, pc, #0, 12
    244c:	add	ip, ip, #155648	; 0x26000
    2450:	ldr	pc, [ip, #3312]!	; 0xcf0

00002454 <munmap@plt>:
    2454:	add	ip, pc, #0, 12
    2458:	add	ip, ip, #155648	; 0x26000
    245c:	ldr	pc, [ip, #3304]!	; 0xce8

00002460 <DH@plt>:
    2460:	add	ip, pc, #0, 12
    2464:	add	ip, ip, #155648	; 0x26000
    2468:	ldr	pc, [ip, #3296]!	; 0xce0

0000246c <btbb_packet_get_channel@plt>:
    246c:	add	ip, pc, #0, 12
    2470:	add	ip, ip, #155648	; 0x26000
    2474:	ldr	pc, [ip, #3288]!	; 0xcd8

00002478 <precalc@plt>:
    2478:	add	ip, pc, #0, 12
    247c:	add	ip, ip, #155648	; 0x26000
    2480:	ldr	pc, [ip, #3280]!	; 0xcd0

00002484 <btbb_decode_payload@plt>:
    2484:	add	ip, pc, #0, 12
    2488:	add	ip, ip, #155648	; 0x26000
    248c:	ldr	pc, [ip, #3272]!	; 0xcc8

00002490 <promiscuous_packet_search@plt>:
    2490:	add	ip, pc, #0, 12
    2494:	add	ip, ip, #155648	; 0x26000
    2498:	ldr	pc, [ip, #3264]!	; 0xcc0

0000249c <pcapng_close@plt>:
    249c:	add	ip, pc, #0, 12
    24a0:	add	ip, ip, #155648	; 0x26000
    24a4:	ldr	pc, [ip, #3256]!	; 0xcb8

000024a8 <btbb_print_packet@plt>:
    24a8:	add	ip, pc, #0, 12
    24ac:	add	ip, ip, #155648	; 0x26000
    24b0:	ldr	pc, [ip, #3248]!	; 0xcb0

000024b4 <fast_perm@plt>:
    24b4:	add	ip, pc, #0, 12
    24b8:	add	ip, ip, #155648	; 0x26000
    24bc:	ldr	pc, [ip, #3240]!	; 0xca8

000024c0 <try_clock@plt>:
    24c0:	add	ip, pc, #0, 12
    24c4:	add	ip, ip, #155648	; 0x26000
    24c8:	ldr	pc, [ip, #3232]!	; 0xca0

000024cc <btbb_init_hop_reversal@plt>:
    24cc:	add	ip, pc, #0, 12
    24d0:	add	ip, ip, #155648	; 0x26000
    24d4:	ldr	pc, [ip, #3224]!	; 0xc98

000024d8 <btbb_init_piconet@plt>:
    24d8:	add	ip, pc, #0, 12
    24dc:	add	ip, ip, #155648	; 0x26000
    24e0:	ldr	pc, [ip, #3216]!	; 0xc90

000024e4 <close@plt>:
    24e4:	add	ip, pc, #0, 12
    24e8:	add	ip, ip, #155648	; 0x26000
    24ec:	ldr	pc, [ip, #3208]!	; 0xc88

000024f0 <__assert_fail@plt>:
    24f0:	add	ip, pc, #0, 12
    24f4:	add	ip, ip, #155648	; 0x26000
    24f8:	ldr	pc, [ip, #3200]!	; 0xc80

Disassembly of section .text:

00002500 <btbb_gen_syncword@@Base-0xa50>:
    2500:	ldr	r3, [pc, #20]	; 251c <__assert_fail@plt+0x2c>
    2504:	ldr	r2, [pc, #20]	; 2520 <__assert_fail@plt+0x30>
    2508:	add	r3, pc, r3
    250c:	ldr	r2, [r3, r2]
    2510:	cmp	r2, #0
    2514:	bxeq	lr
    2518:	b	22f8 <__gmon_start__@plt>
    251c:	strdeq	r6, [r2], -r0
    2520:	muleq	r0, r0, r1
    2524:	ldr	r0, [pc, #44]	; 2558 <__assert_fail@plt+0x68>
    2528:	ldr	r3, [pc, #44]	; 255c <__assert_fail@plt+0x6c>
    252c:	add	r0, pc, r0
    2530:	add	r3, pc, r3
    2534:	cmp	r3, r0
    2538:	ldr	r3, [pc, #32]	; 2560 <__assert_fail@plt+0x70>
    253c:	add	r3, pc, r3
    2540:	bxeq	lr
    2544:	ldr	r2, [pc, #24]	; 2564 <__assert_fail@plt+0x74>
    2548:	ldr	r3, [r3, r2]
    254c:	cmp	r3, #0
    2550:	bxeq	lr
    2554:	bx	r3
    2558:	andeq	r6, r2, r0, ror ip
    255c:	andeq	r6, r2, ip, ror #24
    2560:			; <UNDEFINED> instruction: 0x00026abc
    2564:	andeq	r0, r0, r0, lsl #3
    2568:	ldr	r0, [pc, #56]	; 25a8 <__assert_fail@plt+0xb8>
    256c:	ldr	r3, [pc, #56]	; 25ac <__assert_fail@plt+0xbc>
    2570:	add	r0, pc, r0
    2574:	add	r3, pc, r3
    2578:	sub	r1, r3, r0
    257c:	ldr	r3, [pc, #44]	; 25b0 <__assert_fail@plt+0xc0>
    2580:	asr	r1, r1, #2
    2584:	add	r3, pc, r3
    2588:	add	r1, r1, r1, lsr #31
    258c:	asrs	r1, r1, #1
    2590:	bxeq	lr
    2594:	ldr	r2, [pc, #24]	; 25b4 <__assert_fail@plt+0xc4>
    2598:	ldr	r3, [r3, r2]
    259c:	cmp	r3, #0
    25a0:	bxeq	lr
    25a4:	bx	r3
    25a8:	andeq	r6, r2, ip, lsr #24
    25ac:	andeq	r6, r2, r8, lsr #24
    25b0:	andeq	r6, r2, r4, ror sl
    25b4:	muleq	r0, r8, r1
    25b8:	ldr	r3, [pc, #76]	; 260c <__assert_fail@plt+0x11c>
    25bc:	ldr	r2, [pc, #76]	; 2610 <__assert_fail@plt+0x120>
    25c0:	add	r3, pc, r3
    25c4:	add	r2, pc, r2
    25c8:	ldrb	r3, [r3]
    25cc:	cmp	r3, #0
    25d0:	bxne	lr
    25d4:	ldr	r3, [pc, #56]	; 2614 <__assert_fail@plt+0x124>
    25d8:	push	{r4, lr}
    25dc:	ldr	r3, [r2, r3]
    25e0:	cmp	r3, #0
    25e4:	beq	25f4 <__assert_fail@plt+0x104>
    25e8:	ldr	r3, [pc, #40]	; 2618 <__assert_fail@plt+0x128>
    25ec:	ldr	r0, [pc, r3]
    25f0:	bl	20e8 <__cxa_finalize@plt>
    25f4:	bl	2524 <__assert_fail@plt+0x34>
    25f8:	ldr	r3, [pc, #28]	; 261c <__assert_fail@plt+0x12c>
    25fc:	mov	r2, #1
    2600:	add	r3, pc, r3
    2604:	strb	r2, [r3]
    2608:	pop	{r4, pc}
    260c:	ldrdeq	r6, [r2], -ip
    2610:	andeq	r6, r2, r4, lsr sl
    2614:	andeq	r0, r0, ip, ror r1
    2618:	andeq	r6, r2, r8, lsr #23
    261c:	muleq	r2, ip, fp
    2620:	b	2568 <__assert_fail@plt+0x78>
    2624:	ldr	r2, [pc, #136]	; 26b4 <__assert_fail@plt+0x1c4>
    2628:	lsr	ip, r1, #24
    262c:	strd	r4, [sp, #-20]!	; 0xffffffec
    2630:	ldr	r3, [pc, #128]	; 26b8 <__assert_fail@plt+0x1c8>
    2634:	strd	r6, [sp, #8]
    2638:	ubfx	r7, r1, #8, #8
    263c:	str	lr, [sp, #16]
    2640:	and	lr, r1, #255	; 0xff
    2644:	ubfx	r1, r1, #16, #8
    2648:	add	r2, pc, r2
    264c:	add	r6, r2, ip, lsl #3
    2650:	ldr	ip, [r2, ip, lsl #3]
    2654:	add	r2, r2, #2048	; 0x800
    2658:	add	r5, r2, lr, lsl #3
    265c:	add	r3, pc, r3
    2660:	ldr	r4, [r2, lr, lsl #3]
    2664:	sub	lr, r3, #4080	; 0xff0
    2668:	sub	r3, r3, #2032	; 0x7f0
    266c:	add	r3, r3, r1, lsl #3
    2670:	ldr	r2, [r6, #4]
    2674:	add	lr, lr, r7, lsl #3
    2678:	eor	r0, r0, ip
    267c:	ldr	r1, [r5, #4]
    2680:	eor	r0, r0, r4
    2684:	ldmdb	lr, {r4, lr}
    2688:	ldr	ip, [r3, #-8]
    268c:	eor	r2, r2, r1
    2690:	ldr	r1, [r3, #-4]
    2694:	eor	r0, r0, r4
    2698:	eor	r2, r2, lr
    269c:	ldrd	r4, [sp]
    26a0:	eor	r0, r0, ip
    26a4:	ldrd	r6, [sp, #8]
    26a8:	add	sp, sp, #16
    26ac:	eor	r1, r1, r2
    26b0:	pop	{pc}		; (ldr pc, [sp], #4)
    26b4:	andeq	sp, r0, r8, lsr #7
    26b8:	andeq	pc, r0, ip, lsl #7
    26bc:	lsl	r3, r0, #7
    26c0:	asr	ip, r0, #5
    26c4:	orr	r3, r3, r0, lsr #7
    26c8:	asr	r1, r0, #3
    26cc:	and	ip, ip, #2
    26d0:	asr	r2, r0, #1
    26d4:	orr	r3, r3, ip
    26d8:	and	r1, r1, #4
    26dc:	lsl	ip, r0, #1
    26e0:	orr	r3, r3, r1
    26e4:	and	r2, r2, #8
    26e8:	lsl	r1, r0, #3
    26ec:	orr	r3, r3, r2
    26f0:	and	ip, ip, #16
    26f4:	lsl	r2, r0, #5
    26f8:	orr	r3, r3, ip
    26fc:	and	r0, r1, #32
    2700:	orr	r0, r3, r0
    2704:	and	r3, r2, #64	; 0x40
    2708:	orr	r0, r0, r3
    270c:	uxtb	r0, r0
    2710:	bx	lr
    2714:	strd	r4, [sp, #-16]!
    2718:	add	r5, r1, r2
    271c:	mov	r4, #0
    2720:	str	r6, [sp, #8]
    2724:	str	lr, [sp, #12]
    2728:	ldrb	lr, [r0, #2]
    272c:	add	r0, r0, #3
    2730:	ldrb	ip, [r0, #-3]
    2734:	ldrb	r3, [r0, #-2]
    2738:	orr	r6, ip, lr
    273c:	and	ip, ip, lr
    2740:	and	r3, r3, r6
    2744:	orr	r3, r3, ip
    2748:	strb	r3, [r1], #1
    274c:	cmp	r5, r1
    2750:	ldrb	ip, [r0, #-3]
    2754:	ldrb	lr, [r0, #-2]
    2758:	ldrb	r6, [r0, #-1]
    275c:	eor	r3, ip, lr
    2760:	eor	lr, lr, r6
    2764:	eor	ip, ip, r6
    2768:	orr	r3, r3, lr
    276c:	orr	r3, r3, ip
    2770:	add	r4, r4, r3
    2774:	bne	2728 <__assert_fail@plt+0x238>
    2778:	cmp	r4, r2, asr #2
    277c:	ldrd	r4, [sp]
    2780:	ldr	r6, [sp, #8]
    2784:	add	sp, sp, #12
    2788:	movlt	r0, #1
    278c:	movge	r0, #0
    2790:	pop	{pc}		; (ldr pc, [sp], #4)
    2794:	mov	r2, #9
    2798:	tst	r1, #128	; 0x80
    279c:	asr	r3, r0, r2
    27a0:	sub	r2, r2, #1
    27a4:	eorne	r1, r1, #101	; 0x65
    27a8:	cmn	r2, #1
    27ac:	eor	r3, r3, r1, lsr #7
    27b0:	and	r3, r3, #1
    27b4:	orr	r1, r3, r1, lsl #1
    27b8:	uxtb	r1, r1
    27bc:	bne	2798 <__assert_fail@plt+0x2a8>
    27c0:	mov	r0, r1
    27c4:	b	26bc <__assert_fail@plt+0x1cc>
    27c8:	strd	r4, [sp, #-16]!
    27cc:	mov	r4, r0
    27d0:	ldr	r5, [r0, #64]	; 0x40
    27d4:	str	r6, [sp, #8]
    27d8:	add	r6, r0, #68	; 0x44
    27dc:	str	lr, [sp, #12]
    27e0:	ldrb	r0, [r0, #9]
    27e4:	bl	26bc <__assert_fail@plt+0x1cc>
    27e8:	sub	r5, r5, #2
    27ec:	lsl	r0, r0, #8
    27f0:	lsl	r5, r5, #3
    27f4:	uxth	r0, r0
    27f8:	cmp	r5, #0
    27fc:	ble	2844 <__assert_fail@plt+0x354>
    2800:	mov	r2, #0
    2804:	ldrb	r1, [r6, r2]
    2808:	lsr	r3, r0, #1
    280c:	add	r2, r2, #1
    2810:	uxth	r2, r2
    2814:	cmp	r5, r2
    2818:	eor	r0, r0, r1
    281c:	orr	r0, r3, r0, lsl #15
    2820:	sxth	r0, r0
    2824:	ubfx	r3, r0, #5, #11
    2828:	and	r3, r3, #1024	; 0x400
    282c:	eor	r0, r0, r3
    2830:	ubfx	r3, r0, #12, #4
    2834:	and	r3, r3, #8
    2838:	eor	r0, r0, r3
    283c:	uxth	r0, r0
    2840:	bgt	2804 <__assert_fail@plt+0x314>
    2844:	add	r5, r5, #68	; 0x44
    2848:	mov	r2, #0
    284c:	add	r4, r4, r5
    2850:	sub	r1, r4, #1
    2854:	add	lr, r4, #15
    2858:	rsb	r4, r4, #1
    285c:	add	r3, r4, r1
    2860:	ldrb	ip, [r1, #1]!
    2864:	orr	r2, r2, ip, lsl r3
    2868:	cmp	lr, r1
    286c:	uxth	r2, r2
    2870:	bne	285c <__assert_fail@plt+0x36c>
    2874:	sub	r0, r0, r2
    2878:	ldrd	r4, [sp]
    287c:	clz	r0, r0
    2880:	ldr	r6, [sp, #8]
    2884:	add	sp, sp, #12
    2888:	lsr	r0, r0, #5
    288c:	pop	{pc}		; (ldr pc, [sp], #4)
    2890:	movw	r2, #26215	; 0x6667
    2894:	movt	r2, #26214	; 0x6666
    2898:	strd	r4, [sp, #-32]!	; 0xffffffe0
    289c:	strd	r6, [sp, #8]
    28a0:	mov	r6, r1
    28a4:	asr	r3, r1, #31
    28a8:	mov	r5, r0
    28ac:	strd	r8, [sp, #16]
    28b0:	smull	r1, r2, r2, r6
    28b4:	str	sl, [sp, #24]
    28b8:	str	lr, [sp, #28]
    28bc:	rsb	r3, r3, r2, asr #2
    28c0:	add	r3, r3, r3, lsl #2
    28c4:	sub	r3, r6, r3, lsl #1
    28c8:	ands	r3, r3, #255	; 0xff
    28cc:	rsbne	r3, r3, #10
    28d0:	addne	r6, r6, r3
    28d4:	mov	r0, r6
    28d8:	bl	22c8 <malloc@plt>
    28dc:	cmp	r6, #0
    28e0:	ble	2a2c <__assert_fail@plt+0x53c>
    28e4:	ldr	r4, [pc, #500]	; 2ae0 <__assert_fail@plt+0x5f0>
    28e8:	add	lr, r5, #9
    28ec:	sub	r1, r5, #1
    28f0:	rsb	r7, r0, #1
    28f4:	sub	r5, r0, #1
    28f8:	add	r4, pc, r4
    28fc:	add	r4, r4, #8
    2900:	mov	r2, r5
    2904:	mov	r3, r1
    2908:	ldrb	ip, [r3, #1]!
    290c:	cmp	lr, r3
    2910:	strb	ip, [r2, #1]!
    2914:	bne	2908 <__assert_fail@plt+0x418>
    2918:	mov	ip, #0
    291c:	mov	r9, r1
    2920:	mov	r2, ip
    2924:	ldrb	r8, [r9, #1]!
    2928:	orr	ip, ip, r8, lsl r2
    292c:	add	r2, r2, #1
    2930:	cmp	r2, #10
    2934:	uxth	ip, ip
    2938:	bne	2924 <__assert_fail@plt+0x434>
    293c:	mov	r8, #0
    2940:	mov	r2, r8
    2944:	ldrb	r9, [r3, #1]!
    2948:	orr	r8, r8, r9, lsl r2
    294c:	add	r2, r2, #1
    2950:	cmp	r2, #5
    2954:	uxtb	r8, r8
    2958:	bne	2944 <__assert_fail@plt+0x454>
    295c:	mov	sl, #0
    2960:	mov	r3, sl
    2964:	asr	r2, ip, r3
    2968:	lsl	r9, r3, #1
    296c:	add	r3, r3, #1
    2970:	tst	r2, #1
    2974:	ldrhne	r2, [r9, r4]
    2978:	eorne	sl, sl, r2
    297c:	cmp	r3, #10
    2980:	bne	2964 <__assert_fail@plt+0x474>
    2984:	eor	r8, r8, sl, lsr #10
    2988:	sub	r3, r8, #1
    298c:	tst	r3, r8
    2990:	beq	2a14 <__assert_fail@plt+0x524>
    2994:	sub	r8, r8, #7
    2998:	cmp	r8, #24
    299c:	addls	pc, pc, r8, lsl #2
    29a0:	b	2ad4 <__assert_fail@plt+0x5e4>
    29a4:	b	2ac4 <__assert_fail@plt+0x5d4>
    29a8:	b	2ad4 <__assert_fail@plt+0x5e4>
    29ac:	b	2ad4 <__assert_fail@plt+0x5e4>
    29b0:	b	2ad4 <__assert_fail@plt+0x5e4>
    29b4:	b	2ab4 <__assert_fail@plt+0x5c4>
    29b8:	b	2ad4 <__assert_fail@plt+0x5e4>
    29bc:	b	2aa4 <__assert_fail@plt+0x5b4>
    29c0:	b	2a94 <__assert_fail@plt+0x5a4>
    29c4:	b	2ad4 <__assert_fail@plt+0x5e4>
    29c8:	b	2ad4 <__assert_fail@plt+0x5e4>
    29cc:	b	2ad4 <__assert_fail@plt+0x5e4>
    29d0:	b	2ad4 <__assert_fail@plt+0x5e4>
    29d4:	b	2a84 <__assert_fail@plt+0x594>
    29d8:	b	2ad4 <__assert_fail@plt+0x5e4>
    29dc:	b	2a74 <__assert_fail@plt+0x584>
    29e0:	b	2a64 <__assert_fail@plt+0x574>
    29e4:	b	2ad4 <__assert_fail@plt+0x5e4>
    29e8:	b	2ad4 <__assert_fail@plt+0x5e4>
    29ec:	b	2ad4 <__assert_fail@plt+0x5e4>
    29f0:	b	2a54 <__assert_fail@plt+0x564>
    29f4:	b	2ad4 <__assert_fail@plt+0x5e4>
    29f8:	b	2a44 <__assert_fail@plt+0x554>
    29fc:	b	2ad4 <__assert_fail@plt+0x5e4>
    2a00:	b	2ad4 <__assert_fail@plt+0x5e4>
    2a04:	b	2a08 <__assert_fail@plt+0x518>
    2a08:	ldrb	r3, [r5, #9]
    2a0c:	eor	r3, r3, #1
    2a10:	strb	r3, [r5, #9]
    2a14:	add	r5, r5, #10
    2a18:	add	lr, lr, #15
    2a1c:	add	r3, r7, r5
    2a20:	add	r1, r1, #15
    2a24:	cmp	r6, r3
    2a28:	bgt	2900 <__assert_fail@plt+0x410>
    2a2c:	ldrd	r4, [sp]
    2a30:	ldrd	r6, [sp, #8]
    2a34:	ldrd	r8, [sp, #16]
    2a38:	ldr	sl, [sp, #24]
    2a3c:	add	sp, sp, #28
    2a40:	pop	{pc}		; (ldr pc, [sp], #4)
    2a44:	ldrb	r3, [r5, #5]
    2a48:	eor	r3, r3, #1
    2a4c:	strb	r3, [r5, #5]
    2a50:	b	2a14 <__assert_fail@plt+0x524>
    2a54:	ldrb	r3, [r5, #8]
    2a58:	eor	r3, r3, #1
    2a5c:	strb	r3, [r5, #8]
    2a60:	b	2a14 <__assert_fail@plt+0x524>
    2a64:	ldrb	r3, [r5, #2]
    2a68:	eor	r3, r3, #1
    2a6c:	strb	r3, [r5, #2]
    2a70:	b	2a14 <__assert_fail@plt+0x524>
    2a74:	ldrb	r3, [r5, #10]
    2a78:	eor	r3, r3, #1
    2a7c:	strb	r3, [r5, #10]
    2a80:	b	2a14 <__assert_fail@plt+0x524>
    2a84:	ldrb	r3, [r5, #6]
    2a88:	eor	r3, r3, #1
    2a8c:	strb	r3, [r5, #6]
    2a90:	b	2a14 <__assert_fail@plt+0x524>
    2a94:	ldrb	r3, [r5, #4]
    2a98:	eor	r3, r3, #1
    2a9c:	strb	r3, [r5, #4]
    2aa0:	b	2a14 <__assert_fail@plt+0x524>
    2aa4:	ldrb	r3, [r5, #7]
    2aa8:	eor	r3, r3, #1
    2aac:	strb	r3, [r5, #7]
    2ab0:	b	2a14 <__assert_fail@plt+0x524>
    2ab4:	ldrb	r3, [r5, #1]
    2ab8:	eor	r3, r3, #1
    2abc:	strb	r3, [r5, #1]
    2ac0:	b	2a14 <__assert_fail@plt+0x524>
    2ac4:	ldrb	r3, [r5, #3]
    2ac8:	eor	r3, r3, #1
    2acc:	strb	r3, [r5, #3]
    2ad0:	b	2a14 <__assert_fail@plt+0x524>
    2ad4:	bl	2148 <free@plt>
    2ad8:	mov	r0, #0
    2adc:	b	2a2c <__assert_fail@plt+0x53c>
    2ae0:	strdeq	pc, [r0], -r0
    2ae4:	sub	r3, r3, #1
    2ae8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2aec:	cmp	r2, #58	; 0x3a
    2af0:	strd	r6, [sp, #8]
    2af4:	strd	r8, [sp, #16]
    2af8:	strd	sl, [sp, #24]
    2afc:	str	lr, [sp, #32]
    2b00:	sub	sp, sp, #52	; 0x34
    2b04:	str	r3, [sp, #4]
    2b08:	beq	2ba8 <__assert_fail@plt+0x6b8>
    2b0c:	movw	r3, #19995	; 0x4e1b
    2b10:	movt	r3, #65377	; 0xff61
    2b14:	strd	r0, [sp, #8]
    2b18:	mov	r7, r2
    2b1c:	str	r3, [sp, #16]
    2b20:	movw	r3, #29288	; 0x7268
    2b24:	movt	r3, #52347	; 0xcc7b
    2b28:	str	r3, [sp, #20]
    2b2c:	movw	r3, #31161	; 0x79b9
    2b30:	movt	r3, #40503	; 0x9e37
    2b34:	str	r3, [sp, #24]
    2b38:	movw	r3, #47810	; 0xbac2
    2b3c:	movt	r3, #40777	; 0x9f49
    2b40:	str	r3, [sp, #28]
    2b44:	movw	r3, #16649	; 0x4109
    2b48:	movt	r3, #274	; 0x112
    2b4c:	str	r3, [sp, #32]
    2b50:	movw	r3, #8161	; 0x1fe1
    2b54:	movt	r3, #40977	; 0xa011
    2b58:	str	r3, [sp, #36]	; 0x24
    2b5c:	mov	sl, #1
    2b60:	sub	r5, r7, #32
    2b64:	ldr	ip, [sp, #4]
    2b68:	lsl	r5, sl, r5
    2b6c:	rsb	r3, r7, #32
    2b70:	orr	r5, r5, sl, lsr r3
    2b74:	ldrd	r2, [sp, #8]
    2b78:	cmp	ip, #0
    2b7c:	orr	r6, r2, sl, lsl r7
    2b80:	orr	r5, r5, r3
    2b84:	beq	2bc4 <__assert_fail@plt+0x6d4>
    2b88:	add	r7, r7, sl
    2b8c:	mov	r0, r6
    2b90:	mov	r1, r5
    2b94:	mov	r2, r7
    2b98:	mov	r3, ip
    2b9c:	bl	2ae4 <__assert_fail@plt+0x5f4>
    2ba0:	cmp	r7, #58	; 0x3a
    2ba4:	bne	2b5c <__assert_fail@plt+0x66c>
    2ba8:	add	sp, sp, #52	; 0x34
    2bac:	ldrd	r4, [sp]
    2bb0:	ldrd	r6, [sp, #8]
    2bb4:	ldrd	r8, [sp, #16]
    2bb8:	ldrd	sl, [sp, #24]
    2bbc:	add	sp, sp, #32
    2bc0:	pop	{pc}		; (ldr pc, [sp], #4)
    2bc4:	ldr	r3, [sp, #16]
    2bc8:	eor	r0, r6, r3
    2bcc:	ldr	r3, [sp, #20]
    2bd0:	eor	r1, r5, r3
    2bd4:	bl	2624 <__assert_fail@plt+0x134>
    2bd8:	mov	r8, r0
    2bdc:	mov	r0, #48	; 0x30
    2be0:	mov	r9, r1
    2be4:	bl	22c8 <malloc@plt>
    2be8:	ldr	r3, [pc, #860]	; 2f4c <__assert_fail@plt+0xa5c>
    2bec:	mov	r4, r0
    2bf0:	mov	r2, #8
    2bf4:	strd	r8, [r0]
    2bf8:	ldr	r1, [sp, #4]
    2bfc:	str	r6, [r0, #8]
    2c00:	str	r5, [r0, #12]
    2c04:	add	r3, pc, r3
    2c08:	ldr	ip, [r3]
    2c0c:	str	r1, [r0, #24]
    2c10:	str	r0, [r4, #36]	; 0x24
    2c14:	str	r2, [r0, #40]	; 0x28
    2c18:	cmp	ip, #0
    2c1c:	beq	2ebc <__assert_fail@plt+0x9cc>
    2c20:	ldr	r5, [ip, #16]
    2c24:	add	r6, r0, #16
    2c28:	ldr	r3, [r5, #16]
    2c2c:	ldr	r2, [r5, #20]
    2c30:	str	r0, [r3, #8]
    2c34:	sub	r3, r3, r2
    2c38:	str	r3, [r0, #20]
    2c3c:	str	r6, [r5, #16]
    2c40:	ldr	r1, [r5, #12]
    2c44:	movw	r2, #63341	; 0xf76d
    2c48:	movt	r2, #7
    2c4c:	movw	r3, #48887	; 0xbef7
    2c50:	movt	r3, #65261	; 0xfeed
    2c54:	ldr	r8, [sp, #24]
    2c58:	mov	lr, #0
    2c5c:	ldr	sl, [sp, #28]
    2c60:	add	r1, r1, #1
    2c64:	str	r1, [r5, #12]
    2c68:	ldrb	r0, [r4, #4]
    2c6c:	str	r5, [r4, #16]
    2c70:	ldrb	r1, [r4]
    2c74:	ldrb	r9, [r4, #7]
    2c78:	add	r0, r0, r8
    2c7c:	ldrb	r8, [r4, #3]
    2c80:	add	r1, r1, sl
    2c84:	ldrb	sl, [r4, #6]
    2c88:	add	r0, r0, r9, lsl #24
    2c8c:	ldrb	r9, [r4, #2]
    2c90:	add	r1, r1, r8, lsl #24
    2c94:	ldrb	r8, [r4, #5]
    2c98:	add	r0, r0, sl, lsl #16
    2c9c:	ldrb	sl, [r4, #1]
    2ca0:	add	r1, r1, r9, lsl #16
    2ca4:	ldr	ip, [ip, #16]
    2ca8:	add	r0, r0, r8, lsl #8
    2cac:	ldr	r8, [sp, #32]
    2cb0:	add	r1, r1, sl, lsl #8
    2cb4:	ldr	r9, [ip, #4]
    2cb8:	add	fp, r0, r8
    2cbc:	sub	r0, r1, r0
    2cc0:	ldr	r1, [ip]
    2cc4:	eor	r2, r2, r0
    2cc8:	sub	fp, fp, r2
    2ccc:	sub	r3, r3, r2
    2cd0:	eor	fp, fp, r2, lsl #8
    2cd4:	sub	r9, r9, #1
    2cd8:	sub	r3, r3, fp
    2cdc:	sub	r2, r2, fp
    2ce0:	eor	r3, r3, fp, lsr #13
    2ce4:	sub	r2, r2, r3
    2ce8:	sub	fp, fp, r3
    2cec:	eor	r2, r2, r3, lsr #12
    2cf0:	sub	fp, fp, r2
    2cf4:	sub	r3, r3, r2
    2cf8:	eor	fp, fp, r2, lsl #16
    2cfc:	sub	r3, r3, fp
    2d00:	sub	r2, r2, fp
    2d04:	eor	r3, r3, fp, lsr #5
    2d08:	sub	r2, r2, r3
    2d0c:	sub	fp, fp, r3
    2d10:	eor	r2, r2, r3, lsr #3
    2d14:	sub	fp, fp, r2
    2d18:	sub	r3, r3, r2
    2d1c:	eor	r2, fp, r2, lsl #10
    2d20:	sub	r3, r3, r2
    2d24:	eor	r2, r3, r2, lsr #15
    2d28:	and	r9, r9, r2
    2d2c:	add	r9, r9, r9, lsl #1
    2d30:	ldr	r0, [r1, r9, lsl #2]
    2d34:	str	r2, [r4, #44]	; 0x2c
    2d38:	add	r2, r1, r9, lsl #2
    2d3c:	ldr	r3, [r2, #4]
    2d40:	cmp	r0, lr
    2d44:	add	r3, r3, #1
    2d48:	str	r3, [r2, #4]
    2d4c:	ldr	r2, [r2, #8]
    2d50:	str	lr, [r4, #28]
    2d54:	str	r0, [r4, #32]
    2d58:	strne	r6, [r0, #12]
    2d5c:	str	r6, [r1, r9, lsl #2]
    2d60:	add	r2, r2, #1
    2d64:	add	r2, r2, r2, lsl #2
    2d68:	cmp	r3, r2, lsl #1
    2d6c:	bcc	2d7c <__assert_fail@plt+0x88c>
    2d70:	ldr	r3, [r5, #36]	; 0x24
    2d74:	cmp	r3, #1
    2d78:	bne	2d84 <__assert_fail@plt+0x894>
    2d7c:	add	r7, r7, #1
    2d80:	b	2ba0 <__assert_fail@plt+0x6b0>
    2d84:	ldr	r0, [r5, #4]
    2d88:	mov	r1, #1
    2d8c:	add	r0, r0, r0, lsl r1
    2d90:	lsl	r0, r0, #3
    2d94:	bl	20ac <calloc@plt>
    2d98:	subs	r6, r0, #0
    2d9c:	beq	2f44 <__assert_fail@plt+0xa54>
    2da0:	ldmib	r5, {r1, r9}
    2da4:	mov	sl, #0
    2da8:	ldr	r0, [r5, #12]
    2dac:	str	sl, [r5, #28]
    2db0:	lsl	r3, r1, #1
    2db4:	add	r2, r9, #1
    2db8:	sub	fp, r3, #1
    2dbc:	tst	r0, fp
    2dc0:	movne	ip, #1
    2dc4:	moveq	ip, sl
    2dc8:	add	r9, ip, r0, lsr r2
    2dcc:	cmp	r1, sl
    2dd0:	str	r9, [r5, #24]
    2dd4:	beq	2f38 <__assert_fail@plt+0xa48>
    2dd8:	ldr	lr, [r5]
    2ddc:	add	r3, r3, r1
    2de0:	add	r8, lr, r3, lsl #2
    2de4:	str	lr, [sp, #40]	; 0x28
    2de8:	str	r4, [sp, #44]	; 0x2c
    2dec:	ldr	r2, [lr]
    2df0:	cmp	r2, #0
    2df4:	beq	2e54 <__assert_fail@plt+0x964>
    2df8:	ldr	ip, [r2, #16]
    2dfc:	ldr	r3, [r2, #28]
    2e00:	and	r3, r3, fp
    2e04:	add	r3, r3, r3, lsl #1
    2e08:	add	r0, r6, r3, lsl #2
    2e0c:	ldr	r1, [r0, #4]
    2e10:	add	r1, r1, #1
    2e14:	cmp	r9, r1
    2e18:	str	r1, [r0, #4]
    2e1c:	bcs	2e34 <__assert_fail@plt+0x944>
    2e20:	udiv	r1, r1, r9
    2e24:	ldr	r4, [r5, #28]
    2e28:	add	r4, r4, #1
    2e2c:	str	r4, [r5, #28]
    2e30:	str	r1, [r0, #8]
    2e34:	ldr	r1, [r6, r3, lsl #2]
    2e38:	str	sl, [r2, #12]
    2e3c:	cmp	r1, #0
    2e40:	str	r1, [r2, #16]
    2e44:	strne	r2, [r1, #12]
    2e48:	str	r2, [r6, r3, lsl #2]
    2e4c:	subs	r2, ip, #0
    2e50:	bne	2df8 <__assert_fail@plt+0x908>
    2e54:	add	lr, lr, #12
    2e58:	cmp	lr, r8
    2e5c:	bne	2dec <__assert_fail@plt+0x8fc>
    2e60:	ldr	r4, [sp, #44]	; 0x2c
    2e64:	add	r7, r7, #1
    2e68:	ldr	r0, [sp, #40]	; 0x28
    2e6c:	bl	2148 <free@plt>
    2e70:	ldr	r3, [r4, #16]
    2e74:	ldmib	r3, {r1, r2}
    2e78:	str	r6, [r3]
    2e7c:	ldr	r0, [r3, #12]
    2e80:	ldr	ip, [r3, #28]
    2e84:	lsl	r1, r1, #1
    2e88:	add	r2, r2, #1
    2e8c:	stmib	r3, {r1, r2}
    2e90:	cmp	ip, r0, lsr #1
    2e94:	movls	r2, #0
    2e98:	strls	r2, [r3, #32]
    2e9c:	bls	2ba0 <__assert_fail@plt+0x6b0>
    2ea0:	ldr	r2, [r3, #32]
    2ea4:	add	r2, r2, #1
    2ea8:	cmp	r2, #1
    2eac:	str	r2, [r3, #32]
    2eb0:	movhi	r2, #1
    2eb4:	strhi	r2, [r3, #36]	; 0x24
    2eb8:	b	2ba0 <__assert_fail@plt+0x6b0>
    2ebc:	mov	r0, #44	; 0x2c
    2ec0:	str	r1, [r4, #20]
    2ec4:	str	r4, [r3]
    2ec8:	bl	22c8 <malloc@plt>
    2ecc:	cmp	r0, #0
    2ed0:	mov	r5, r0
    2ed4:	str	r0, [r4, #16]
    2ed8:	beq	2f44 <__assert_fail@plt+0xa54>
    2edc:	mov	r2, #0
    2ee0:	mov	r3, #0
    2ee4:	mov	r0, #32
    2ee8:	mov	lr, #5
    2eec:	mov	ip, #16
    2ef0:	add	r6, r4, #16
    2ef4:	mov	r1, sl
    2ef8:	stmib	r5, {r0, lr}
    2efc:	mov	r0, #384	; 0x180
    2f00:	strd	r2, [r5, #12]
    2f04:	str	r6, [r5, #16]
    2f08:	strd	r2, [r5, #20]
    2f0c:	str	ip, [r5, #20]
    2f10:	strd	r2, [r5, #28]
    2f14:	strd	r2, [r5, #36]	; 0x24
    2f18:	bl	20ac <calloc@plt>
    2f1c:	cmp	r0, #0
    2f20:	str	r0, [r5]
    2f24:	beq	2f44 <__assert_fail@plt+0xa54>
    2f28:	ldr	r3, [sp, #36]	; 0x24
    2f2c:	mov	ip, r4
    2f30:	str	r3, [r5, #40]	; 0x28
    2f34:	b	2c40 <__assert_fail@plt+0x750>
    2f38:	ldr	r3, [r5]
    2f3c:	str	r3, [sp, #40]	; 0x28
    2f40:	b	2e64 <__assert_fail@plt+0x974>
    2f44:	mvn	r0, #0
    2f48:	bl	231c <exit@plt>
    2f4c:	muleq	r2, ip, r5

00002f50 <btbb_gen_syncword@@Base>:
    2f50:	ldr	r2, [pc, #88]	; 2fb0 <btbb_gen_syncword@@Base+0x60>
    2f54:	mov	r1, #-1342177278	; 0xb0000002
    2f58:	mov	r3, #0
    2f5c:	strd	r4, [sp, #-12]!
    2f60:	mov	r4, r0
    2f64:	movw	r0, #3710	; 0xe7e
    2f68:	movt	r0, #51074	; 0xc782
    2f6c:	str	lr, [sp, #8]
    2f70:	mov	lr, #8388608	; 0x800000
    2f74:	add	r2, pc, r2
    2f78:	add	r2, r2, #32
    2f7c:	ands	r5, r4, lr, asr r3
    2f80:	add	ip, r2, r3, lsl #3
    2f84:	beq	2f98 <btbb_gen_syncword@@Base+0x48>
    2f88:	ldr	r5, [r2, r3, lsl #3]
    2f8c:	ldr	ip, [ip, #4]
    2f90:	eor	r0, r0, r5
    2f94:	eor	r1, r1, ip
    2f98:	add	r3, r3, #1
    2f9c:	cmp	r3, #24
    2fa0:	bne	2f7c <btbb_gen_syncword@@Base+0x2c>
    2fa4:	ldrd	r4, [sp]
    2fa8:	add	sp, sp, #8
    2fac:	pop	{pc}		; (ldr pc, [sp], #4)
    2fb0:	andeq	lr, r0, r4, ror sl

00002fb4 <btbb_get_release@@Base>:
    2fb4:	ldr	r0, [pc, #4]	; 2fc0 <btbb_get_release@@Base+0xc>
    2fb8:	add	r0, pc, r0
    2fbc:	bx	lr
    2fc0:	muleq	r0, r4, r0

00002fc4 <btbb_get_version@@Base>:
    2fc4:	ldr	r0, [pc, #4]	; 2fd0 <btbb_get_version@@Base+0xc>
    2fc8:	add	r0, pc, r0
    2fcc:	bx	lr
    2fd0:	muleq	r0, r0, r0

00002fd4 <btbb_init@@Base>:
    2fd4:	ldr	r3, [pc, #164]	; 3080 <btbb_init@@Base+0xac>
    2fd8:	cmp	r0, #5
    2fdc:	strd	r4, [sp, #-16]!
    2fe0:	str	r6, [sp, #8]
    2fe4:	str	lr, [sp, #12]
    2fe8:	add	r3, pc, r3
    2fec:	bhi	3054 <btbb_init@@Base+0x80>
    2ff0:	ldr	r2, [pc, #140]	; 3084 <btbb_init@@Base+0xb0>
    2ff4:	adds	r3, r0, #0
    2ff8:	mov	r4, r0
    2ffc:	movne	r3, #1
    3000:	add	r2, pc, r2
    3004:	ldr	r2, [r2]
    3008:	cmp	r2, #0
    300c:	movne	r3, #0
    3010:	cmp	r3, #0
    3014:	bne	302c <btbb_init@@Base+0x58>
    3018:	mov	r0, #0
    301c:	ldrd	r4, [sp]
    3020:	ldr	r6, [sp, #8]
    3024:	add	sp, sp, #12
    3028:	pop	{pc}		; (ldr pc, [sp], #4)
    302c:	mov	r5, #1
    3030:	mov	r3, r5
    3034:	mov	r2, #0
    3038:	add	r5, r5, #1
    303c:	mov	r0, #0
    3040:	mov	r1, #0
    3044:	bl	2ae4 <__assert_fail@plt+0x5f4>
    3048:	cmp	r4, r5
    304c:	bge	3030 <btbb_init@@Base+0x5c>
    3050:	b	3018 <btbb_init@@Base+0x44>
    3054:	ldr	r0, [pc, #44]	; 3088 <btbb_init@@Base+0xb4>
    3058:	ldr	r2, [pc, #44]	; 308c <btbb_init@@Base+0xb8>
    305c:	ldr	r1, [pc, #44]	; 3090 <btbb_init@@Base+0xbc>
    3060:	ldr	r3, [r3, r0]
    3064:	add	r2, pc, r2
    3068:	add	r2, r2, #224	; 0xe0
    306c:	add	r1, pc, r1
    3070:	ldr	r0, [r3]
    3074:	bl	237c <fprintf@plt>
    3078:	mvn	r0, #0
    307c:	b	301c <btbb_init@@Base+0x48>
    3080:	andeq	r6, r2, r0, lsl r0
    3084:	andeq	r6, r2, r0, lsr #3
    3088:	andeq	r0, r0, r4, lsl #3
    308c:	andeq	lr, r0, r4, lsl #19
    3090:	strdeq	lr, [r0], -r0

00003094 <btbb_packet_new@@Base>:
    3094:	strd	r4, [sp, #-16]!
    3098:	mov	r1, #5952	; 0x1740
    309c:	mov	r0, #1
    30a0:	ldr	r5, [pc, #84]	; 30fc <btbb_packet_new@@Base+0x68>
    30a4:	str	r6, [sp, #8]
    30a8:	str	lr, [sp, #12]
    30ac:	bl	20ac <calloc@plt>
    30b0:	subs	r4, r0, #0
    30b4:	add	r5, pc, r5
    30b8:	beq	30d8 <btbb_packet_new@@Base+0x44>
    30bc:	mov	r3, #1
    30c0:	str	r3, [r4]
    30c4:	mov	r0, r4
    30c8:	ldrd	r4, [sp]
    30cc:	ldr	r6, [sp, #8]
    30d0:	add	sp, sp, #12
    30d4:	pop	{pc}		; (ldr pc, [sp], #4)
    30d8:	ldr	r3, [pc, #32]	; 3100 <btbb_packet_new@@Base+0x6c>
    30dc:	mov	r2, #25
    30e0:	mov	r1, #1
    30e4:	ldr	r0, [pc, #24]	; 3104 <btbb_packet_new@@Base+0x70>
    30e8:	ldr	r3, [r5, r3]
    30ec:	add	r0, pc, r0
    30f0:	ldr	r3, [r3]
    30f4:	bl	225c <fwrite@plt>
    30f8:	b	30c4 <btbb_packet_new@@Base+0x30>
    30fc:	andeq	r5, r2, r4, asr #30
    3100:	andeq	r0, r0, r4, lsl #3
    3104:	muleq	r0, r0, pc	; <UNPREDICTABLE>

00003108 <btbb_packet_ref@@Base>:
    3108:	ldr	r3, [r0]
    310c:	add	r3, r3, #1
    3110:	str	r3, [r0]
    3114:	bx	lr

00003118 <btbb_packet_unref@@Base>:
    3118:	ldr	r3, [r0]
    311c:	subs	r3, r3, #1
    3120:	beq	312c <btbb_packet_unref@@Base+0x14>
    3124:	str	r3, [r0]
    3128:	bx	lr
    312c:	b	2148 <free@plt>

00003130 <btbb_packet_get_lap@@Base>:
    3130:	ldr	r0, [r0, #12]
    3134:	bx	lr

00003138 <btbb_packet_get_uap@@Base>:
    3138:	ldrb	r0, [r0, #9]
    313c:	bx	lr

00003140 <btbb_packet_get_nap@@Base>:
    3140:	ldrh	r0, [r0, #10]
    3144:	bx	lr

00003148 <btbb_packet_get_clkn@@Base>:
    3148:	ldr	r0, [r0, #2816]	; 0xb00
    314c:	bx	lr

00003150 <btbb_packet_get_channel@@Base>:
    3150:	ldrb	r0, [r0, #8]
    3154:	bx	lr

00003158 <btbb_packet_set_modulation@@Base>:
    3158:	strb	r1, [r0, #16]
    315c:	bx	lr

00003160 <btbb_packet_get_modulation@@Base>:
    3160:	ldrb	r0, [r0, #16]
    3164:	bx	lr

00003168 <btbb_packet_set_transport@@Base>:
    3168:	strb	r1, [r0, #17]
    316c:	bx	lr

00003170 <btbb_packet_get_transport@@Base>:
    3170:	ldrb	r0, [r0, #17]
    3174:	bx	lr

00003178 <btbb_packet_get_ac_errors@@Base>:
    3178:	ldrb	r0, [r0, #2820]	; 0xb04
    317c:	bx	lr

00003180 <promiscuous_packet_search@@Base>:
    3180:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3184:	add	r5, r0, #56	; 0x38
    3188:	mov	r4, #0
    318c:	strd	r6, [sp, #8]
    3190:	movw	r7, #65480	; 0xffc8
    3194:	movt	r7, #65535	; 0xffff
    3198:	sub	r7, r7, r0
    319c:	strd	r8, [sp, #16]
    31a0:	strd	sl, [sp, #24]
    31a4:	str	lr, [sp, #32]
    31a8:	sub	sp, sp, #60	; 0x3c
    31ac:	add	lr, r0, #62	; 0x3e
    31b0:	add	ip, r7, r5
    31b4:	ldrb	r6, [r5, #1]!
    31b8:	orr	r4, r4, r6, lsl ip
    31bc:	cmp	lr, r5
    31c0:	uxtb	r4, r4
    31c4:	bne	31b0 <promiscuous_packet_search@@Base+0x30>
    31c8:	lsl	r4, r4, #1
    31cc:	cmp	r1, #0
    31d0:	uxtb	r4, r4
    31d4:	ble	34c0 <promiscuous_packet_search@@Base+0x340>
    31d8:	str	r3, [sp, #20]
    31dc:	add	r1, r1, #62	; 0x3e
    31e0:	movw	sl, #65474	; 0xffc2
    31e4:	movt	sl, #65535	; 0xffff
    31e8:	ldr	r3, [pc, #784]	; 3500 <promiscuous_packet_search@@Base+0x380>
    31ec:	add	r8, r0, r1
    31f0:	str	r2, [sp, #44]	; 0x2c
    31f4:	movw	r2, #21756	; 0x54fc
    31f8:	movt	r2, #48076	; 0xbbcc
    31fc:	sub	sl, sl, r0
    3200:	str	r2, [sp, #12]
    3204:	movw	r2, #36246	; 0x8d96
    3208:	movt	r2, #33668	; 0x8384
    320c:	add	r3, pc, r3
    3210:	str	r2, [sp, #16]
    3214:	add	r3, r3, #368	; 0x170
    3218:	str	r3, [sp, #8]
    321c:	movw	r3, #31161	; 0x79b9
    3220:	movt	r3, #40503	; 0x9e37
    3224:	str	r3, [sp, #24]
    3228:	movw	r3, #47810	; 0xbac2
    322c:	movt	r3, #40777	; 0x9f49
    3230:	str	r3, [sp, #28]
    3234:	movw	r3, #63341	; 0xf76d
    3238:	movt	r3, #7
    323c:	str	r3, [sp, #32]
    3240:	movw	r3, #16649	; 0x4109
    3244:	movt	r3, #274	; 0x112
    3248:	str	r3, [sp, #36]	; 0x24
    324c:	movw	r3, #48887	; 0xbef7
    3250:	movt	r3, #65261	; 0xfeed
    3254:	str	r3, [sp, #40]	; 0x28
    3258:	mov	r3, r8
    325c:	b	326c <promiscuous_packet_search@@Base+0xec>
    3260:	cmp	r3, r7
    3264:	mov	lr, r7
    3268:	beq	34c0 <promiscuous_packet_search@@Base+0x340>
    326c:	ldrb	r1, [lr, #1]
    3270:	lsr	r4, r4, #1
    3274:	add	fp, sl, lr
    3278:	add	r7, lr, #1
    327c:	ldr	r2, [pc, #640]	; 3504 <promiscuous_packet_search@@Base+0x384>
    3280:	orr	r4, r4, r1, lsl #6
    3284:	add	r2, pc, r2
    3288:	uxtb	r4, r4
    328c:	add	r2, r2, r4
    3290:	ldrb	r2, [r2, #236]	; 0xec
    3294:	cmp	r2, #1
    3298:	bhi	3260 <promiscuous_packet_search@@Base+0xe0>
    329c:	mov	r0, #0
    32a0:	sub	r2, lr, #63	; 0x3f
    32a4:	mov	r6, r0
    32a8:	rsb	ip, r7, #64	; 0x40
    32ac:	ldrb	r8, [r2, #1]
    32b0:	add	r5, ip, r2
    32b4:	cmp	lr, r2
    32b8:	sub	r1, r5, #32
    32bc:	add	r2, r2, #1
    32c0:	lsl	r1, r8, r1
    32c4:	orr	r0, r0, r8, lsl r5
    32c8:	rsb	r5, r5, #32
    32cc:	orr	r1, r1, r8, lsr r5
    32d0:	orr	r6, r1, r6
    32d4:	bne	32ac <promiscuous_packet_search@@Base+0x12c>
    32d8:	str	r3, [sp, #4]
    32dc:	lsr	r2, r6, #25
    32e0:	bic	r6, r6, #-33554432	; 0xfe000000
    32e4:	ldr	r3, [sp, #8]
    32e8:	ldr	r1, [r3, r2, lsl #3]
    32ec:	add	ip, r3, r2, lsl #3
    32f0:	ldr	r3, [sp, #12]
    32f4:	ldr	r2, [ip, #4]
    32f8:	orr	r0, r0, r1
    32fc:	eor	r0, r0, r3
    3300:	ldr	r3, [sp, #16]
    3304:	orr	r6, r6, r2
    3308:	eor	r1, r6, r3
    330c:	bl	2624 <__assert_fail@plt+0x134>
    3310:	orrs	r3, r0, r1
    3314:	ldr	r3, [sp, #96]	; 0x60
    3318:	mov	r2, #0
    331c:	strb	r2, [r3]
    3320:	ldr	r3, [sp, #4]
    3324:	bne	3344 <promiscuous_packet_search@@Base+0x1c4>
    3328:	ldr	r1, [sp, #20]
    332c:	cmp	r1, r2
    3330:	blt	3260 <promiscuous_packet_search@@Base+0xe0>
    3334:	ldr	r3, [sp, #44]	; 0x2c
    3338:	ubfx	r6, r6, #2, #24
    333c:	str	r6, [r3]
    3340:	b	34c4 <promiscuous_packet_search@@Base+0x344>
    3344:	ldr	r2, [pc, #444]	; 3508 <promiscuous_packet_search@@Base+0x388>
    3348:	strd	r0, [sp, #48]	; 0x30
    334c:	add	r2, pc, r2
    3350:	ldr	r2, [r2]
    3354:	cmp	r2, #0
    3358:	beq	34ec <promiscuous_packet_search@@Base+0x36c>
    335c:	ldr	r8, [r2, #16]
    3360:	bic	lr, r1, #16711680	; 0xff0000
    3364:	bic	ip, r0, #16711680	; 0xff0000
    3368:	bic	lr, lr, #65280	; 0xff00
    336c:	bic	ip, ip, #65280	; 0xff00
    3370:	ldr	r2, [sp, #24]
    3374:	and	r5, r1, #16711680	; 0xff0000
    3378:	add	lr, lr, r2
    337c:	ldr	r2, [sp, #28]
    3380:	add	lr, lr, r5
    3384:	and	r5, r1, #65280	; 0xff00
    3388:	add	lr, lr, r5
    338c:	ldr	r5, [r8]
    3390:	ldr	r1, [r8, #4]
    3394:	add	ip, ip, r2
    3398:	and	r2, r0, #16711680	; 0xff0000
    339c:	add	r2, ip, r2
    33a0:	and	r0, r0, #65280	; 0xff00
    33a4:	add	ip, r2, r0
    33a8:	ldr	r2, [sp, #36]	; 0x24
    33ac:	sub	ip, ip, lr
    33b0:	sub	r1, r1, #1
    33b4:	add	lr, lr, r2
    33b8:	ldr	r2, [sp, #32]
    33bc:	eor	ip, ip, r2
    33c0:	ldr	r2, [sp, #40]	; 0x28
    33c4:	sub	r0, lr, ip
    33c8:	eor	r0, r0, ip, lsl #8
    33cc:	sub	r2, r2, ip
    33d0:	sub	ip, ip, r0
    33d4:	sub	r2, r2, r0
    33d8:	eor	r2, r2, r0, lsr #13
    33dc:	sub	ip, ip, r2
    33e0:	sub	r0, r0, r2
    33e4:	eor	ip, ip, r2, lsr #12
    33e8:	sub	r0, r0, ip
    33ec:	sub	r2, r2, ip
    33f0:	eor	r0, r0, ip, lsl #16
    33f4:	sub	r2, r2, r0
    33f8:	sub	ip, ip, r0
    33fc:	eor	r2, r2, r0, lsr #5
    3400:	sub	ip, ip, r2
    3404:	sub	r0, r0, r2
    3408:	eor	ip, ip, r2, lsr #3
    340c:	sub	r0, r0, ip
    3410:	sub	r2, r2, ip
    3414:	eor	ip, r0, ip, lsl #10
    3418:	sub	r2, r2, ip
    341c:	eor	r2, r2, ip, lsr #15
    3420:	and	r1, r1, r2
    3424:	add	r1, r1, r1, lsl #1
    3428:	ldr	r5, [r5, r1, lsl #2]
    342c:	cmp	r5, #0
    3430:	beq	34ec <promiscuous_packet_search@@Base+0x36c>
    3434:	ldr	r9, [r8, #20]
    3438:	rsb	r9, r9, #0
    343c:	adds	r5, r5, r9
    3440:	beq	34ec <promiscuous_packet_search@@Base+0x36c>
    3444:	add	r8, sp, #48	; 0x30
    3448:	str	r4, [sp, #4]
    344c:	mov	r4, r5
    3450:	mov	r5, r9
    3454:	mov	r9, r3
    3458:	b	3470 <promiscuous_packet_search@@Base+0x2f0>
    345c:	ldr	r3, [r4, #32]
    3460:	cmp	r3, #0
    3464:	beq	34e4 <promiscuous_packet_search@@Base+0x364>
    3468:	adds	r4, r3, r5
    346c:	beq	34e4 <promiscuous_packet_search@@Base+0x364>
    3470:	ldr	r2, [r4, #40]	; 0x28
    3474:	cmp	r2, #8
    3478:	bne	345c <promiscuous_packet_search@@Base+0x2dc>
    347c:	mov	r1, r8
    3480:	ldr	r0, [r4, #36]	; 0x24
    3484:	bl	21b4 <memcmp@plt>
    3488:	cmp	r0, #0
    348c:	bne	345c <promiscuous_packet_search@@Base+0x2dc>
    3490:	ldr	r0, [r4, #8]
    3494:	ldr	r2, [r4, #12]
    3498:	ldr	r4, [sp, #4]
    349c:	str	r9, [sp, #4]
    34a0:	mov	r1, r2
    34a4:	eor	r6, r6, r2
    34a8:	bl	f860 <lell_pcapng_close@@Base+0x7c>
    34ac:	ldr	r3, [sp, #96]	; 0x60
    34b0:	mov	r2, r0
    34b4:	strb	r0, [r3]
    34b8:	ldr	r3, [sp, #4]
    34bc:	b	3328 <promiscuous_packet_search@@Base+0x1a8>
    34c0:	mvn	fp, #0
    34c4:	mov	r0, fp
    34c8:	add	sp, sp, #60	; 0x3c
    34cc:	ldrd	r4, [sp]
    34d0:	ldrd	r6, [sp, #8]
    34d4:	ldrd	r8, [sp, #16]
    34d8:	ldrd	sl, [sp, #24]
    34dc:	add	sp, sp, #32
    34e0:	pop	{pc}		; (ldr pc, [sp], #4)
    34e4:	ldr	r4, [sp, #4]
    34e8:	mov	r3, r9
    34ec:	mvn	r1, #0
    34f0:	mov	r2, #255	; 0xff
    34f4:	ldr	r0, [sp, #96]	; 0x60
    34f8:	strb	r1, [r0]
    34fc:	b	3328 <promiscuous_packet_search@@Base+0x1a8>
    3500:	ldrdeq	lr, [r0], -ip
    3504:	andeq	lr, r0, r4, ror #14
    3508:	andeq	r5, r2, r4, asr lr

0000350c <find_known_lap@@Base>:
    350c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3510:	mov	r5, r1
    3514:	strd	r6, [sp, #8]
    3518:	strd	r8, [sp, #16]
    351c:	mov	r8, r0
    3520:	mov	r0, r2
    3524:	strd	sl, [sp, #24]
    3528:	str	lr, [sp, #32]
    352c:	sub	sp, sp, #12
    3530:	str	r3, [sp]
    3534:	bl	2268 <btbb_gen_syncword@plt>
    3538:	cmp	r5, #0
    353c:	ble	35d8 <find_known_lap@@Base+0xcc>
    3540:	movw	r6, #65473	; 0xffc1
    3544:	movt	r6, #65535	; 0xffff
    3548:	add	fp, r8, #63	; 0x3f
    354c:	sub	r6, r6, r8
    3550:	rsb	r8, r8, #0
    3554:	add	r3, r5, fp
    3558:	mov	r9, r0
    355c:	mov	sl, r1
    3560:	mov	r7, r8
    3564:	str	r3, [sp, #4]
    3568:	mov	r0, #0
    356c:	add	r8, r6, fp
    3570:	mov	r1, r0
    3574:	sub	ip, fp, #64	; 0x40
    3578:	add	lr, r7, #1
    357c:	add	r2, lr, ip
    3580:	ldrb	r4, [ip, #1]!
    3584:	sub	r3, r2, #32
    3588:	lsl	r3, r4, r3
    358c:	cmp	fp, ip
    3590:	orr	r0, r0, r4, lsl r2
    3594:	rsb	r2, r2, #32
    3598:	orr	r3, r3, r4, lsr r2
    359c:	orr	r1, r3, r1
    35a0:	bne	357c <find_known_lap@@Base+0x70>
    35a4:	eor	r0, r0, r9
    35a8:	eor	r1, r1, sl
    35ac:	bl	f860 <lell_pcapng_close@@Base+0x7c>
    35b0:	ldr	r3, [sp]
    35b4:	cmp	r0, r3
    35b8:	ldr	r3, [sp, #48]	; 0x30
    35bc:	strb	r0, [r3]
    35c0:	ble	35fc <find_known_lap@@Base+0xf0>
    35c4:	ldr	r3, [sp, #4]
    35c8:	add	fp, fp, #1
    35cc:	sub	r7, r7, #1
    35d0:	cmp	fp, r3
    35d4:	bne	3568 <find_known_lap@@Base+0x5c>
    35d8:	mvn	r7, #0
    35dc:	mov	r0, r7
    35e0:	add	sp, sp, #12
    35e4:	ldrd	r4, [sp]
    35e8:	ldrd	r6, [sp, #8]
    35ec:	ldrd	r8, [sp, #16]
    35f0:	ldrd	sl, [sp, #24]
    35f4:	add	sp, sp, #32
    35f8:	pop	{pc}		; (ldr pc, [sp], #4)
    35fc:	mov	r7, r8
    3600:	b	35dc <find_known_lap@@Base+0xd0>

00003604 <btbb_packet_set_data@@Base>:
    3604:	strd	r4, [sp, #-16]!
    3608:	movw	r5, #3125	; 0xc35
    360c:	cmp	r2, r5
    3610:	str	r6, [sp, #8]
    3614:	movlt	r5, r2
    3618:	cmp	r2, #0
    361c:	str	lr, [sp, #12]
    3620:	ldr	r6, [sp, #16]
    3624:	ble	3650 <btbb_packet_set_data@@Base+0x4c>
    3628:	add	lr, r0, #2816	; 0xb00
    362c:	sub	ip, r1, #1
    3630:	add	lr, lr, #7
    3634:	ldrb	r4, [ip, #1]
    3638:	add	r2, ip, #2
    363c:	add	ip, ip, #1
    3640:	sub	r2, r2, r1
    3644:	cmp	r5, r2
    3648:	strb	r4, [lr, #1]!
    364c:	bgt	3634 <btbb_packet_set_data@@Base+0x30>
    3650:	lsr	r6, r6, #1
    3654:	movw	r2, #2822	; 0xb06
    3658:	strb	r3, [r0, #8]
    365c:	strh	r5, [r0, r2]
    3660:	str	r6, [r0, #2816]	; 0xb00
    3664:	ldrd	r4, [sp]
    3668:	ldr	r6, [sp, #8]
    366c:	add	sp, sp, #12
    3670:	pop	{pc}		; (ldr pc, [sp], #4)

00003674 <btbb_packet_set_flag@@Base>:
    3674:	ldr	r3, [r0, #4]
    3678:	cmp	r2, #0
    367c:	mov	r2, #1
    3680:	lsl	r1, r2, r1
    3684:	biceq	r3, r3, r1
    3688:	orrne	r3, r3, r1
    368c:	str	r3, [r0, #4]
    3690:	bx	lr

00003694 <btbb_packet_set_uap@@Base>:
    3694:	mov	r2, #1
    3698:	strb	r1, [r0, #9]
    369c:	mov	r1, #2
    36a0:	b	2130 <btbb_packet_set_flag@plt>

000036a4 <btbb_find_ac@@Base>:
    36a4:	str	r4, [sp, #-8]!
    36a8:	cmn	r2, #1
    36ac:	str	lr, [sp, #4]
    36b0:	sub	sp, sp, #24
    36b4:	str	r2, [sp, #12]
    36b8:	beq	3720 <btbb_find_ac@@Base+0x7c>
    36bc:	add	ip, sp, #23
    36c0:	str	ip, [sp]
    36c4:	bl	23ac <find_known_lap@plt>
    36c8:	mov	r4, r0
    36cc:	cmp	r4, #0
    36d0:	blt	370c <btbb_find_ac@@Base+0x68>
    36d4:	ldr	r3, [sp, #32]
    36d8:	ldr	r3, [r3]
    36dc:	cmp	r3, #0
    36e0:	beq	3738 <btbb_find_ac@@Base+0x94>
    36e4:	ldrb	lr, [sp, #23]
    36e8:	mov	r2, #0
    36ec:	mov	r0, r3
    36f0:	mov	r1, r2
    36f4:	ldr	ip, [sp, #12]
    36f8:	str	r2, [r3, #4]
    36fc:	mov	r2, #1
    3700:	str	ip, [r3, #12]
    3704:	strb	lr, [r3, #2820]	; 0xb04
    3708:	bl	2130 <btbb_packet_set_flag@plt>
    370c:	mov	r0, r4
    3710:	add	sp, sp, #24
    3714:	ldr	r4, [sp]
    3718:	add	sp, sp, #4
    371c:	pop	{pc}		; (ldr pc, [sp], #4)
    3720:	add	ip, sp, #23
    3724:	add	r2, sp, #12
    3728:	str	ip, [sp]
    372c:	bl	2490 <promiscuous_packet_search@plt>
    3730:	mov	r4, r0
    3734:	b	36cc <btbb_find_ac@@Base+0x28>
    3738:	bl	22e0 <btbb_packet_new@plt>
    373c:	ldr	r2, [sp, #32]
    3740:	mov	r3, r0
    3744:	str	r0, [r2]
    3748:	b	36e4 <btbb_find_ac@@Base+0x40>

0000374c <btbb_packet_get_flag@@Base>:
    374c:	ldr	r3, [r0, #4]
    3750:	mov	r2, #1
    3754:	ands	r3, r3, r2, lsl r1
    3758:	movne	r0, r2
    375c:	moveq	r0, #0
    3760:	bx	lr
    3764:	ldr	ip, [pc, #204]	; 3838 <btbb_packet_get_flag@@Base+0xec>
    3768:	and	r2, r2, #63	; 0x3f
    376c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3770:	strd	r6, [sp, #8]
    3774:	subs	r7, r3, #0
    3778:	movw	r6, #1033	; 0x409
    377c:	movt	r6, #33026	; 0x8102
    3780:	ldr	r3, [sp, #32]
    3784:	strd	r8, [sp, #16]
    3788:	add	ip, pc, ip
    378c:	str	sl, [sp, #24]
    3790:	add	ip, ip, r2
    3794:	str	lr, [sp, #28]
    3798:	ldrb	r2, [ip, #1392]	; 0x570
    379c:	add	r2, r2, r3
    37a0:	asr	r4, r2, #31
    37a4:	smull	r3, ip, r6, r2
    37a8:	add	ip, ip, r2
    37ac:	rsb	r4, r4, ip, asr #6
    37b0:	rsb	r4, r4, r4, lsl #7
    37b4:	sub	r4, r2, r4
    37b8:	ble	3820 <btbb_packet_get_flag@@Base+0xd4>
    37bc:	ldr	r8, [pc, #120]	; 383c <btbb_packet_get_flag@@Base+0xf0>
    37c0:	sub	r5, r1, #1
    37c4:	mov	r9, r0
    37c8:	add	r7, r5, r7
    37cc:	add	r8, pc, r8
    37d0:	mov	r1, #0
    37d4:	ldr	r0, [sp, #36]	; 0x24
    37d8:	add	r9, r9, #1
    37dc:	bl	2184 <btbb_packet_get_flag@plt>
    37e0:	cmp	r0, #0
    37e4:	add	r3, r8, r4
    37e8:	ldrbne	r1, [r9, #-1]
    37ec:	ldrbne	r3, [r3, #1456]	; 0x5b0
    37f0:	ldrbeq	r1, [r9, #-1]
    37f4:	eorne	r1, r1, r3
    37f8:	add	r3, r4, #1
    37fc:	asr	r4, r3, #31
    3800:	smull	r0, r2, r6, r3
    3804:	strb	r1, [r5, #1]!
    3808:	cmp	r7, r5
    380c:	add	r2, r2, r3
    3810:	rsb	r4, r4, r2, asr #6
    3814:	rsb	r4, r4, r4, lsl #7
    3818:	sub	r4, r3, r4
    381c:	bne	37d0 <btbb_packet_get_flag@@Base+0x84>
    3820:	ldrd	r4, [sp]
    3824:	ldrd	r6, [sp, #8]
    3828:	ldrd	r8, [sp, #16]
    382c:	ldr	sl, [sp, #24]
    3830:	add	sp, sp, #28
    3834:	pop	{pc}		; (ldr pc, [sp], #4)
    3838:	andeq	lr, r0, r0, ror #4
    383c:	andeq	lr, r0, ip, lsl r2
    3840:	cmp	r2, #2
    3844:	strd	r4, [sp, #-20]!	; 0xffffffec
    3848:	mov	r5, r2
    384c:	strd	r6, [sp, #8]
    3850:	mov	r6, r1
    3854:	str	lr, [sp, #16]
    3858:	sub	sp, sp, #12
    385c:	ldr	r4, [sp, #36]	; 0x24
    3860:	beq	3898 <btbb_packet_get_flag@@Base+0x14c>
    3864:	cmp	r3, #7
    3868:	ble	3880 <btbb_packet_get_flag@@Base+0x134>
    386c:	ldr	r2, [sp, #32]
    3870:	cmp	r2, #0
    3874:	beq	3a00 <btbb_packet_get_flag@@Base+0x2b4>
    3878:	cmp	r3, #14
    387c:	bgt	3920 <btbb_packet_get_flag@@Base+0x1d4>
    3880:	mov	r0, #0
    3884:	add	sp, sp, #12
    3888:	ldrd	r4, [sp]
    388c:	ldrd	r6, [sp, #8]
    3890:	add	sp, sp, #16
    3894:	pop	{pc}		; (ldr pc, [sp], #4)
    3898:	cmp	r3, #15
    389c:	ble	3880 <btbb_packet_get_flag@@Base+0x134>
    38a0:	ldr	r2, [sp, #32]
    38a4:	cmp	r2, #0
    38a8:	beq	39e0 <btbb_packet_get_flag@@Base+0x294>
    38ac:	cmp	r3, #29
    38b0:	ble	3880 <btbb_packet_get_flag@@Base+0x134>
    38b4:	mov	r1, #16
    38b8:	bl	2890 <__assert_fail@plt+0x3a0>
    38bc:	subs	r7, r0, #0
    38c0:	beq	3880 <btbb_packet_get_flag@@Base+0x134>
    38c4:	mov	ip, #18
    38c8:	mov	r2, r6
    38cc:	mov	r3, #16
    38d0:	add	r1, r4, #44	; 0x2c
    38d4:	str	ip, [sp]
    38d8:	str	r4, [sp, #4]
    38dc:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    38e0:	mov	r0, r7
    38e4:	bl	2148 <free@plt>
    38e8:	movw	r1, #65490	; 0xffd2
    38ec:	movt	r1, #65535	; 0xffff
    38f0:	sub	r1, r1, r4
    38f4:	add	r2, r4, #46	; 0x2e
    38f8:	add	lr, r4, #56	; 0x38
    38fc:	mov	r3, #0
    3900:	add	r0, r1, r2
    3904:	ldrb	ip, [r2, #1]!
    3908:	orr	r3, r3, ip, lsl r0
    390c:	cmp	lr, r2
    3910:	uxth	r3, r3
    3914:	bne	3900 <btbb_packet_get_flag@@Base+0x1b4>
    3918:	add	r3, r3, #4
    391c:	b	3988 <btbb_packet_get_flag@@Base+0x23c>
    3920:	mov	r1, #8
    3924:	bl	2890 <__assert_fail@plt+0x3a0>
    3928:	subs	r7, r0, #0
    392c:	beq	3880 <btbb_packet_get_flag@@Base+0x134>
    3930:	mov	ip, #18
    3934:	mov	r2, r6
    3938:	mov	r3, #8
    393c:	add	r1, r4, #44	; 0x2c
    3940:	str	ip, [sp]
    3944:	str	r4, [sp, #4]
    3948:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    394c:	mov	r0, r7
    3950:	bl	2148 <free@plt>
    3954:	movw	r1, #65490	; 0xffd2
    3958:	movt	r1, #65535	; 0xffff
    395c:	sub	r1, r1, r4
    3960:	add	r2, r4, #46	; 0x2e
    3964:	add	lr, r4, #51	; 0x33
    3968:	mov	r3, #0
    396c:	add	r0, r1, r2
    3970:	ldrb	ip, [r2, #1]!
    3974:	orr	r3, r3, ip, lsl r0
    3978:	cmp	lr, r2
    397c:	uxtb	r3, r3
    3980:	bne	396c <btbb_packet_get_flag@@Base+0x220>
    3984:	add	r3, r3, #3
    3988:	ldrb	r2, [r4, #18]
    398c:	sub	r2, r2, #3
    3990:	uxtb	r2, r2
    3994:	cmp	r2, #12
    3998:	movhi	r2, #0
    399c:	bhi	39b0 <btbb_packet_get_flag@@Base+0x264>
    39a0:	ldr	r1, [pc, #120]	; 3a20 <btbb_packet_get_flag@@Base+0x2d4>
    39a4:	add	r1, pc, r1
    39a8:	add	r2, r1, r2, lsl #2
    39ac:	ldr	r2, [r2, #1584]	; 0x630
    39b0:	cmp	r2, r3
    39b4:	mov	r0, #1
    39b8:	str	r5, [r4, #40]	; 0x28
    39bc:	movlt	r3, r2
    39c0:	ldrb	ip, [r4, #45]	; 0x2d
    39c4:	ldrb	r2, [r4, #44]	; 0x2c
    39c8:	str	r3, [r4, #64]	; 0x40
    39cc:	ldrb	r1, [r4, #46]	; 0x2e
    39d0:	orr	r3, r2, ip, lsl r0
    39d4:	strb	r3, [r4, #60]	; 0x3c
    39d8:	strb	r1, [r4, #61]	; 0x3d
    39dc:	b	3884 <btbb_packet_get_flag@@Base+0x138>
    39e0:	mov	ip, #18
    39e4:	mov	r2, r1
    39e8:	mov	r3, #16
    39ec:	add	r1, r4, #44	; 0x2c
    39f0:	str	ip, [sp]
    39f4:	str	r4, [sp, #4]
    39f8:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    39fc:	b	38e8 <btbb_packet_get_flag@@Base+0x19c>
    3a00:	mov	ip, #18
    3a04:	mov	r2, r1
    3a08:	mov	r3, #8
    3a0c:	add	r1, r4, #44	; 0x2c
    3a10:	str	ip, [sp]
    3a14:	str	r4, [sp, #4]
    3a18:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    3a1c:	b	3954 <btbb_packet_get_flag@@Base+0x208>
    3a20:	andeq	lr, r0, r4, asr #32

00003a24 <btbb_get_symbols@@Base>:
    3a24:	add	r0, r0, #2816	; 0xb00
    3a28:	add	r0, r0, #8
    3a2c:	bx	lr

00003a30 <btbb_packet_get_payload_length@@Base>:
    3a30:	ldr	r0, [r0, #64]	; 0x40
    3a34:	bx	lr

00003a38 <btbb_get_payload@@Base>:
    3a38:	add	r0, r0, #68	; 0x44
    3a3c:	bx	lr

00003a40 <btbb_get_payload_packed@@Base>:
    3a40:	ldr	r3, [r0, #64]	; 0x40
    3a44:	cmp	r3, #0
    3a48:	ble	3ac4 <btbb_get_payload_packed@@Base+0x84>
    3a4c:	strd	r4, [sp, #-20]!	; 0xffffffec
    3a50:	add	r5, r0, #68	; 0x44
    3a54:	rsb	r5, r5, #0
    3a58:	strd	r6, [sp, #8]
    3a5c:	sub	r6, r1, #1
    3a60:	rsb	r7, r1, #1
    3a64:	str	lr, [sp, #16]
    3a68:	add	lr, r0, #75	; 0x4b
    3a6c:	mvn	r2, r5
    3a70:	mov	r3, #0
    3a74:	add	r4, r5, #1
    3a78:	add	r1, r4, r2
    3a7c:	ldrb	ip, [r2, #1]!
    3a80:	orr	r3, r3, ip, lsl r1
    3a84:	cmp	r2, lr
    3a88:	uxtb	r3, r3
    3a8c:	bne	3a78 <btbb_get_payload_packed@@Base+0x38>
    3a90:	add	r6, r6, #1
    3a94:	sub	r5, r5, #8
    3a98:	mov	r2, r6
    3a9c:	add	lr, lr, #8
    3aa0:	strb	r3, [r2], r7
    3aa4:	ldr	r3, [r0, #64]	; 0x40
    3aa8:	cmp	r3, r2
    3aac:	bgt	3a6c <btbb_get_payload_packed@@Base+0x2c>
    3ab0:	ldrd	r4, [sp]
    3ab4:	mov	r0, r3
    3ab8:	ldrd	r6, [sp, #8]
    3abc:	add	sp, sp, #16
    3ac0:	pop	{pc}		; (ldr pc, [sp], #4)
    3ac4:	mov	r0, r3
    3ac8:	bx	lr

00003acc <btbb_packet_get_type@@Base>:
    3acc:	ldrb	r0, [r0, #18]
    3ad0:	bx	lr

00003ad4 <btbb_packet_get_lt_addr@@Base>:
    3ad4:	ldrb	r0, [r0, #19]
    3ad8:	bx	lr

00003adc <btbb_packet_get_header_flags@@Base>:
    3adc:	ldrb	r0, [r0, #20]
    3ae0:	bx	lr

00003ae4 <btbb_packet_get_hec@@Base>:
    3ae4:	ldrb	r0, [r0, #21]
    3ae8:	bx	lr

00003aec <btbb_packet_get_header_packed@@Base>:
    3aec:	push	{lr}		; (str lr, [sp, #-4]!)
    3af0:	movw	lr, #65515	; 0xffeb
    3af4:	movt	lr, #65535	; 0xffff
    3af8:	add	r3, r0, #21
    3afc:	sub	lr, lr, r0
    3b00:	add	ip, r0, #39	; 0x27
    3b04:	mov	r0, #0
    3b08:	add	r2, lr, r3
    3b0c:	ldrb	r1, [r3, #1]!
    3b10:	cmp	r3, ip
    3b14:	orr	r0, r0, r1, lsl r2
    3b18:	bne	3b08 <btbb_packet_get_header_packed@@Base+0x1c>
    3b1c:	pop	{pc}		; (ldr pc, [sp], #4)

00003b20 <fhs@@Base>:
    3b20:	movw	r3, #2822	; 0xb06
    3b24:	mov	ip, #20
    3b28:	strd	r4, [sp, #-28]!	; 0xffffffe4
    3b2c:	ldrh	r2, [r1, r3]
    3b30:	movw	r3, #361	; 0x169
    3b34:	strd	r6, [sp, #8]
    3b38:	strd	r8, [sp, #16]
    3b3c:	str	lr, [sp, #24]
    3b40:	sub	sp, sp, #12
    3b44:	str	ip, [r1, #64]	; 0x40
    3b48:	cmp	r2, r3
    3b4c:	movls	r6, #1
    3b50:	bhi	3b70 <fhs@@Base+0x50>
    3b54:	mov	r0, r6
    3b58:	add	sp, sp, #12
    3b5c:	ldrd	r4, [sp]
    3b60:	ldrd	r6, [sp, #8]
    3b64:	ldrd	r8, [sp, #16]
    3b68:	add	sp, sp, #24
    3b6c:	pop	{pc}		; (ldr pc, [sp], #4)
    3b70:	mov	r5, r0
    3b74:	add	r0, r1, #2944	; 0xb80
    3b78:	mov	r4, r1
    3b7c:	add	r0, r0, #2
    3b80:	mov	r1, #160	; 0xa0
    3b84:	bl	2890 <__assert_fail@plt+0x3a0>
    3b88:	subs	r8, r0, #0
    3b8c:	moveq	r6, r8
    3b90:	beq	3b54 <fhs@@Base+0x34>
    3b94:	ldr	r3, [r4, #64]	; 0x40
    3b98:	mov	r7, #18
    3b9c:	add	r9, r4, #68	; 0x44
    3ba0:	mov	r2, r5
    3ba4:	mov	r1, r9
    3ba8:	str	r7, [sp]
    3bac:	str	r4, [sp, #4]
    3bb0:	lsl	r3, r3, #3
    3bb4:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    3bb8:	mov	r0, r4
    3bbc:	bl	27c8 <__assert_fail@plt+0x2d8>
    3bc0:	cmp	r0, #0
    3bc4:	moveq	r5, #32
    3bc8:	beq	3bd8 <fhs@@Base+0xb8>
    3bcc:	b	3c0c <fhs@@Base+0xec>
    3bd0:	cmp	r5, #64	; 0x40
    3bd4:	beq	3c1c <fhs@@Base+0xfc>
    3bd8:	ldr	r3, [r4, #64]	; 0x40
    3bdc:	mov	r2, r5
    3be0:	mov	r1, r9
    3be4:	mov	r0, r8
    3be8:	str	r7, [sp]
    3bec:	add	r5, r5, #1
    3bf0:	str	r4, [sp, #4]
    3bf4:	lsl	r3, r3, #3
    3bf8:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    3bfc:	mov	r0, r4
    3c00:	bl	27c8 <__assert_fail@plt+0x2d8>
    3c04:	subs	r6, r0, #0
    3c08:	beq	3bd0 <fhs@@Base+0xb0>
    3c0c:	mov	r0, r8
    3c10:	mov	r6, #1000	; 0x3e8
    3c14:	bl	2148 <free@plt>
    3c18:	b	3b54 <fhs@@Base+0x34>
    3c1c:	mov	r0, r8
    3c20:	bl	2148 <free@plt>
    3c24:	b	3b54 <fhs@@Base+0x34>

00003c28 <DM@@Base>:
    3c28:	movw	r2, #2822	; 0xb06
    3c2c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    3c30:	add	r5, r1, #2944	; 0xb80
    3c34:	ldrh	r2, [r1, r2]
    3c38:	add	r5, r5, #2
    3c3c:	strd	r6, [sp, #8]
    3c40:	strd	r8, [sp, #16]
    3c44:	str	lr, [sp, #24]
    3c48:	sub	sp, sp, #12
    3c4c:	ldrb	r3, [r1, #18]
    3c50:	sub	r8, r2, #122	; 0x7a
    3c54:	sub	r3, r3, #3
    3c58:	cmp	r3, #11
    3c5c:	addls	pc, pc, r3, lsl #2
    3c60:	b	3d2c <DM@@Base+0x104>
    3c64:	b	3c94 <DM@@Base+0x6c>
    3c68:	b	3d2c <DM@@Base+0x104>
    3c6c:	b	3d2c <DM@@Base+0x104>
    3c70:	b	3d2c <DM@@Base+0x104>
    3c74:	b	3d2c <DM@@Base+0x104>
    3c78:	b	3d14 <DM@@Base+0xec>
    3c7c:	b	3d2c <DM@@Base+0x104>
    3c80:	b	3d08 <DM@@Base+0xe0>
    3c84:	b	3d2c <DM@@Base+0x104>
    3c88:	b	3d2c <DM@@Base+0x104>
    3c8c:	b	3d2c <DM@@Base+0x104>
    3c90:	b	3cfc <DM@@Base+0xd4>
    3c94:	mov	r9, #20
    3c98:	mov	r2, #1
    3c9c:	mov	r4, r1
    3ca0:	mov	r6, #1
    3ca4:	mov	r1, r0
    3ca8:	mov	r7, r0
    3cac:	mov	r3, r8
    3cb0:	mov	r0, r5
    3cb4:	str	r6, [sp]
    3cb8:	str	r4, [sp, #4]
    3cbc:	bl	3840 <btbb_packet_get_flag@@Base+0xf4>
    3cc0:	cmp	r0, #0
    3cc4:	beq	3d2c <DM@@Base+0x104>
    3cc8:	ldr	r3, [r4, #64]	; 0x40
    3ccc:	cmp	r3, r9
    3cd0:	bgt	3ce0 <DM@@Base+0xb8>
    3cd4:	lsl	r9, r3, #3
    3cd8:	cmp	r8, r9
    3cdc:	bge	3d34 <DM@@Base+0x10c>
    3ce0:	mov	r0, r6
    3ce4:	add	sp, sp, #12
    3ce8:	ldrd	r4, [sp]
    3cec:	ldrd	r6, [sp, #8]
    3cf0:	ldrd	r8, [sp, #16]
    3cf4:	add	sp, sp, #24
    3cf8:	pop	{pc}		; (ldr pc, [sp], #4)
    3cfc:	mov	r9, #228	; 0xe4
    3d00:	mov	r2, #2
    3d04:	b	3c9c <DM@@Base+0x74>
    3d08:	mov	r9, #125	; 0x7d
    3d0c:	mov	r2, #2
    3d10:	b	3c9c <DM@@Base+0x74>
    3d14:	add	r5, r1, #3024	; 0xbd0
    3d18:	sub	r8, r2, #202	; 0xca
    3d1c:	add	r5, r5, #2
    3d20:	mov	r9, #12
    3d24:	mov	r2, #1
    3d28:	b	3c9c <DM@@Base+0x74>
    3d2c:	mov	r0, #0
    3d30:	b	3ce4 <DM@@Base+0xbc>
    3d34:	mov	r0, r5
    3d38:	mov	r1, r9
    3d3c:	bl	2890 <__assert_fail@plt+0x3a0>
    3d40:	subs	r5, r0, #0
    3d44:	beq	3d2c <DM@@Base+0x104>
    3d48:	mov	ip, #18
    3d4c:	mov	r3, r9
    3d50:	mov	r2, r7
    3d54:	add	r1, r4, #68	; 0x44
    3d58:	str	ip, [sp]
    3d5c:	str	r4, [sp, #4]
    3d60:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    3d64:	mov	r0, r5
    3d68:	bl	2148 <free@plt>
    3d6c:	mov	r0, r4
    3d70:	bl	27c8 <__assert_fail@plt+0x2d8>
    3d74:	cmp	r0, #0
    3d78:	moveq	r0, #2
    3d7c:	movne	r0, #10
    3d80:	b	3ce4 <DM@@Base+0xbc>

00003d84 <DH@@Base>:
    3d84:	strd	r4, [sp, #-24]!	; 0xffffffe8
    3d88:	strd	r6, [sp, #8]
    3d8c:	str	r8, [sp, #16]
    3d90:	str	lr, [sp, #20]
    3d94:	sub	sp, sp, #8
    3d98:	ldrb	r3, [r1, #18]
    3d9c:	sub	r3, r3, #4
    3da0:	cmp	r3, #11
    3da4:	addls	pc, pc, r3, lsl #2
    3da8:	b	3eb0 <DH@@Base+0x12c>
    3dac:	b	3ddc <DH@@Base+0x58>
    3db0:	b	3eb0 <DH@@Base+0x12c>
    3db4:	b	3eb0 <DH@@Base+0x12c>
    3db8:	b	3eb0 <DH@@Base+0x12c>
    3dbc:	b	3eb0 <DH@@Base+0x12c>
    3dc0:	b	3ddc <DH@@Base+0x58>
    3dc4:	b	3eb0 <DH@@Base+0x12c>
    3dc8:	b	3e64 <DH@@Base+0xe0>
    3dcc:	b	3eb0 <DH@@Base+0x12c>
    3dd0:	b	3eb0 <DH@@Base+0x12c>
    3dd4:	b	3eb0 <DH@@Base+0x12c>
    3dd8:	b	3e58 <DH@@Base+0xd4>
    3ddc:	mov	r8, #30
    3de0:	mov	r2, #1
    3de4:	mov	r4, r1
    3de8:	movw	r3, #2822	; 0xb06
    3dec:	add	r7, r1, #2944	; 0xb80
    3df0:	mov	r6, r0
    3df4:	str	r4, [sp, #4]
    3df8:	add	r7, r7, #2
    3dfc:	mov	r1, r6
    3e00:	ldrh	r5, [r4, r3]
    3e04:	mov	r3, #0
    3e08:	mov	r0, r7
    3e0c:	str	r3, [sp]
    3e10:	sub	r5, r5, #122	; 0x7a
    3e14:	mov	r3, r5
    3e18:	bl	3840 <btbb_packet_get_flag@@Base+0xf4>
    3e1c:	cmp	r0, #0
    3e20:	beq	3e40 <DH@@Base+0xbc>
    3e24:	ldr	r3, [r4, #64]	; 0x40
    3e28:	cmp	r3, r8
    3e2c:	bgt	3e3c <DH@@Base+0xb8>
    3e30:	lsl	r3, r3, #3
    3e34:	cmp	r5, r3
    3e38:	bge	3e70 <DH@@Base+0xec>
    3e3c:	mov	r0, #1
    3e40:	add	sp, sp, #8
    3e44:	ldrd	r4, [sp]
    3e48:	ldrd	r6, [sp, #8]
    3e4c:	ldr	r8, [sp, #16]
    3e50:	add	sp, sp, #20
    3e54:	pop	{pc}		; (ldr pc, [sp], #4)
    3e58:	movw	r8, #343	; 0x157
    3e5c:	mov	r2, #2
    3e60:	b	3de4 <DH@@Base+0x60>
    3e64:	mov	r8, #187	; 0xbb
    3e68:	mov	r2, #2
    3e6c:	b	3de4 <DH@@Base+0x60>
    3e70:	mov	r1, #18
    3e74:	mov	r0, r7
    3e78:	mov	r2, r6
    3e7c:	stm	sp, {r1, r4}
    3e80:	add	r1, r4, #68	; 0x44
    3e84:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    3e88:	ldrb	r3, [r4, #18]
    3e8c:	cmp	r3, #9
    3e90:	moveq	r0, #2
    3e94:	beq	3e40 <DH@@Base+0xbc>
    3e98:	mov	r0, r4
    3e9c:	bl	27c8 <__assert_fail@plt+0x2d8>
    3ea0:	cmp	r0, #0
    3ea4:	moveq	r0, #2
    3ea8:	movne	r0, #10
    3eac:	b	3e40 <DH@@Base+0xbc>
    3eb0:	mov	r0, #0
    3eb4:	b	3e40 <DH@@Base+0xbc>

00003eb8 <EV3@@Base>:
    3eb8:	movw	r3, #2822	; 0xb06
    3ebc:	strd	r4, [sp, #-28]!	; 0xffffffe4
    3ec0:	strd	r6, [sp, #8]
    3ec4:	ldrh	r6, [r1, r3]
    3ec8:	mov	r3, #0
    3ecc:	strd	r8, [sp, #16]
    3ed0:	str	lr, [sp, #24]
    3ed4:	sub	sp, sp, #12
    3ed8:	str	r3, [r1, #64]	; 0x40
    3edc:	sub	r6, r6, #122	; 0x7a
    3ee0:	cmp	r6, #7
    3ee4:	ble	3f68 <EV3@@Base+0xb0>
    3ee8:	add	r7, r1, #2944	; 0xb80
    3eec:	mov	r5, r1
    3ef0:	add	r7, r7, #2
    3ef4:	mov	r8, r0
    3ef8:	mov	r1, r3
    3efc:	add	r9, r5, #68	; 0x44
    3f00:	b	3f24 <EV3@@Base+0x6c>
    3f04:	add	r3, r4, #1
    3f08:	cmp	r3, #31
    3f0c:	lsl	r1, r3, #3
    3f10:	str	r3, [r5, #64]	; 0x40
    3f14:	bgt	3f84 <EV3@@Base+0xcc>
    3f18:	add	r3, r1, #7
    3f1c:	cmp	r3, r6
    3f20:	bge	3f68 <EV3@@Base+0xb0>
    3f24:	add	ip, r1, #18
    3f28:	mov	r3, #8
    3f2c:	add	r1, r9, r1
    3f30:	mov	r2, r8
    3f34:	mov	r0, r7
    3f38:	str	ip, [sp]
    3f3c:	str	r5, [sp, #4]
    3f40:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    3f44:	ldr	r4, [r5, #64]	; 0x40
    3f48:	cmp	r4, #2
    3f4c:	ble	3f04 <EV3@@Base+0x4c>
    3f50:	mov	r0, r5
    3f54:	bl	27c8 <__assert_fail@plt+0x2d8>
    3f58:	cmp	r0, #0
    3f5c:	beq	3f04 <EV3@@Base+0x4c>
    3f60:	mov	r0, #10
    3f64:	b	3f6c <EV3@@Base+0xb4>
    3f68:	mov	r0, #1
    3f6c:	add	sp, sp, #12
    3f70:	ldrd	r4, [sp]
    3f74:	ldrd	r6, [sp, #8]
    3f78:	ldrd	r8, [sp, #16]
    3f7c:	add	sp, sp, #24
    3f80:	pop	{pc}		; (ldr pc, [sp], #4)
    3f84:	mov	r0, #2
    3f88:	b	3f6c <EV3@@Base+0xb4>

00003f8c <EV4@@Base>:
    3f8c:	movw	r3, #2822	; 0xb06
    3f90:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3f94:	mov	r5, r1
    3f98:	strd	r6, [sp, #8]
    3f9c:	mov	r6, #0
    3fa0:	strd	r8, [sp, #16]
    3fa4:	add	r9, r1, #2944	; 0xb80
    3fa8:	mov	r7, r6
    3fac:	ldrh	r8, [r1, r3]
    3fb0:	add	r9, r9, #2
    3fb4:	mov	r3, #1
    3fb8:	str	sl, [sp, #24]
    3fbc:	mov	sl, r0
    3fc0:	str	lr, [sp, #28]
    3fc4:	sub	sp, sp, #8
    3fc8:	str	r3, [r1, #64]	; 0x40
    3fcc:	sub	r8, r8, #122	; 0x7a
    3fd0:	add	r3, r7, #14
    3fd4:	cmp	r8, r3
    3fd8:	ble	4080 <EV4@@Base+0xf4>
    3fdc:	mov	r1, #10
    3fe0:	add	r0, r9, r7
    3fe4:	bl	2890 <__assert_fail@plt+0x3a0>
    3fe8:	subs	r4, r0, #0
    3fec:	beq	4088 <EV4@@Base+0xfc>
    3ff0:	add	r2, r6, #18
    3ff4:	add	r1, r5, #68	; 0x44
    3ff8:	add	r1, r1, r6
    3ffc:	mov	r3, #10
    4000:	stm	sp, {r2, r5}
    4004:	mov	r2, sl
    4008:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    400c:	mov	r0, r4
    4010:	bl	2148 <free@plt>
    4014:	ldr	r4, [r5, #64]	; 0x40
    4018:	cmp	r6, r4, lsl #3
    401c:	bge	4030 <EV4@@Base+0xa4>
    4020:	b	4064 <EV4@@Base+0xd8>
    4024:	cmp	r6, r4, lsl #3
    4028:	str	r4, [r5, #64]	; 0x40
    402c:	blt	4064 <EV4@@Base+0xd8>
    4030:	mov	r0, r5
    4034:	add	r4, r4, #1
    4038:	bl	27c8 <__assert_fail@plt+0x2d8>
    403c:	cmp	r0, #0
    4040:	beq	4024 <EV4@@Base+0x98>
    4044:	mov	r0, #10
    4048:	add	sp, sp, #8
    404c:	ldrd	r4, [sp]
    4050:	ldrd	r6, [sp, #8]
    4054:	ldrd	r8, [sp, #16]
    4058:	ldr	sl, [sp, #24]
    405c:	add	sp, sp, #28
    4060:	pop	{pc}		; (ldr pc, [sp], #4)
    4064:	add	r7, r7, #15
    4068:	movw	r3, #1470	; 0x5be
    406c:	cmp	r7, r3
    4070:	add	r6, r6, #10
    4074:	bne	3fd0 <EV4@@Base+0x44>
    4078:	mov	r0, #2
    407c:	b	4048 <EV4@@Base+0xbc>
    4080:	mov	r0, #1
    4084:	b	4048 <EV4@@Base+0xbc>
    4088:	cmp	r7, #44	; 0x2c
    408c:	movle	r0, #0
    4090:	movgt	r0, #1
    4094:	b	4048 <EV4@@Base+0xbc>

00004098 <EV5@@Base>:
    4098:	movw	r3, #2822	; 0xb06
    409c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    40a0:	strd	r6, [sp, #8]
    40a4:	ldrh	r6, [r1, r3]
    40a8:	mov	r3, #0
    40ac:	strd	r8, [sp, #16]
    40b0:	str	lr, [sp, #24]
    40b4:	sub	sp, sp, #12
    40b8:	str	r3, [r1, #64]	; 0x40
    40bc:	sub	r6, r6, #122	; 0x7a
    40c0:	cmp	r6, #7
    40c4:	ble	4148 <EV5@@Base+0xb0>
    40c8:	add	r7, r1, #2944	; 0xb80
    40cc:	mov	r5, r1
    40d0:	add	r7, r7, #2
    40d4:	mov	r8, r0
    40d8:	mov	r1, r3
    40dc:	add	r9, r5, #68	; 0x44
    40e0:	b	4104 <EV5@@Base+0x6c>
    40e4:	add	r3, r4, #1
    40e8:	cmp	r3, #181	; 0xb5
    40ec:	lsl	r1, r3, #3
    40f0:	str	r3, [r5, #64]	; 0x40
    40f4:	bgt	4164 <EV5@@Base+0xcc>
    40f8:	add	r3, r1, #7
    40fc:	cmp	r3, r6
    4100:	bge	4148 <EV5@@Base+0xb0>
    4104:	add	ip, r1, #18
    4108:	mov	r3, #8
    410c:	add	r1, r9, r1
    4110:	mov	r2, r8
    4114:	mov	r0, r7
    4118:	str	ip, [sp]
    411c:	str	r5, [sp, #4]
    4120:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    4124:	ldr	r4, [r5, #64]	; 0x40
    4128:	cmp	r4, #2
    412c:	ble	40e4 <EV5@@Base+0x4c>
    4130:	mov	r0, r5
    4134:	bl	27c8 <__assert_fail@plt+0x2d8>
    4138:	cmp	r0, #0
    413c:	beq	40e4 <EV5@@Base+0x4c>
    4140:	mov	r0, #10
    4144:	b	414c <EV5@@Base+0xb4>
    4148:	mov	r0, #1
    414c:	add	sp, sp, #12
    4150:	ldrd	r4, [sp]
    4154:	ldrd	r6, [sp, #8]
    4158:	ldrd	r8, [sp, #16]
    415c:	add	sp, sp, #24
    4160:	pop	{pc}		; (ldr pc, [sp], #4)
    4164:	mov	r0, #2
    4168:	b	414c <EV5@@Base+0xb4>

0000416c <HV@@Base>:
    416c:	movw	r3, #2822	; 0xb06
    4170:	strd	r4, [sp, #-20]!	; 0xffffffec
    4174:	movw	ip, #361	; 0x169
    4178:	strd	r6, [sp, #8]
    417c:	str	lr, [sp, #16]
    4180:	sub	sp, sp, #92	; 0x5c
    4184:	ldrh	lr, [r1, r3]
    4188:	mov	r3, #0
    418c:	str	r3, [r1, #40]	; 0x28
    4190:	cmp	lr, ip
    4194:	movls	r0, #1
    4198:	strls	r3, [r1, #64]	; 0x40
    419c:	bls	41d0 <HV@@Base+0x64>
    41a0:	mov	r4, r1
    41a4:	ldrb	r1, [r1, #18]
    41a8:	mov	r6, r0
    41ac:	add	r5, r4, #2944	; 0xb80
    41b0:	add	r5, r5, #2
    41b4:	cmp	r1, #6
    41b8:	beq	4268 <HV@@Base+0xfc>
    41bc:	cmp	r1, #7
    41c0:	beq	4240 <HV@@Base+0xd4>
    41c4:	cmp	r1, #5
    41c8:	beq	41e4 <HV@@Base+0x78>
    41cc:	mov	r0, #2
    41d0:	add	sp, sp, #92	; 0x5c
    41d4:	ldrd	r4, [sp]
    41d8:	ldrd	r6, [sp, #8]
    41dc:	add	sp, sp, #16
    41e0:	pop	{pc}		; (ldr pc, [sp], #4)
    41e4:	add	r7, sp, #8
    41e8:	mov	r0, r5
    41ec:	mov	r1, r7
    41f0:	mov	r2, #80	; 0x50
    41f4:	bl	2714 <__assert_fail@plt+0x224>
    41f8:	cmp	r0, #0
    41fc:	beq	41d0 <HV@@Base+0x64>
    4200:	mov	r3, #10
    4204:	mov	r2, #1
    4208:	mov	r0, r4
    420c:	mov	r1, #7
    4210:	str	r3, [r4, #64]	; 0x40
    4214:	bl	2130 <btbb_packet_set_flag@plt>
    4218:	ldr	r3, [r4, #64]	; 0x40
    421c:	mov	ip, #18
    4220:	mov	r2, r6
    4224:	mov	r0, r7
    4228:	add	r1, r4, #68	; 0x44
    422c:	lsl	r3, r3, #3
    4230:	str	ip, [sp]
    4234:	str	r4, [sp, #4]
    4238:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    423c:	b	41cc <HV@@Base+0x60>
    4240:	mov	r3, #30
    4244:	mov	r2, #1
    4248:	mov	r0, r4
    424c:	str	r3, [r4, #64]	; 0x40
    4250:	bl	2130 <btbb_packet_set_flag@plt>
    4254:	mov	ip, #18
    4258:	mov	r2, r6
    425c:	ldr	r3, [r4, #64]	; 0x40
    4260:	mov	r0, r5
    4264:	b	4228 <HV@@Base+0xbc>
    4268:	mov	r0, r5
    426c:	mov	r1, #160	; 0xa0
    4270:	bl	2890 <__assert_fail@plt+0x3a0>
    4274:	subs	r5, r0, #0
    4278:	moveq	r0, r5
    427c:	beq	41d0 <HV@@Base+0x64>
    4280:	mov	r3, #20
    4284:	mov	r2, #1
    4288:	mov	r1, #7
    428c:	mov	r0, r4
    4290:	str	r3, [r4, #64]	; 0x40
    4294:	bl	2130 <btbb_packet_set_flag@plt>
    4298:	ldr	r3, [r4, #64]	; 0x40
    429c:	mov	ip, #18
    42a0:	mov	r2, r6
    42a4:	add	r1, r4, #68	; 0x44
    42a8:	mov	r0, r5
    42ac:	str	ip, [sp]
    42b0:	str	r4, [sp, #4]
    42b4:	lsl	r3, r3, #3
    42b8:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    42bc:	mov	r0, r5
    42c0:	bl	2148 <free@plt>
    42c4:	mov	r0, #2
    42c8:	b	41d0 <HV@@Base+0x64>

000042cc <crc_check@@Base>:
    42cc:	ldrb	r3, [r1, #18]
    42d0:	str	r4, [sp, #-8]!
    42d4:	mov	r4, r1
    42d8:	str	lr, [sp, #4]
    42dc:	sub	r3, r3, #2
    42e0:	cmp	r3, #13
    42e4:	addls	pc, pc, r3, lsl #2
    42e8:	b	43ac <crc_check@@Base+0xe0>
    42ec:	b	4354 <crc_check@@Base+0x88>
    42f0:	b	4384 <crc_check@@Base+0xb8>
    42f4:	b	438c <crc_check@@Base+0xc0>
    42f8:	b	4394 <crc_check@@Base+0xc8>
    42fc:	b	43ac <crc_check@@Base+0xe0>
    4300:	b	439c <crc_check@@Base+0xd0>
    4304:	b	4384 <crc_check@@Base+0xb8>
    4308:	b	43ac <crc_check@@Base+0xe0>
    430c:	b	4384 <crc_check@@Base+0xb8>
    4310:	b	438c <crc_check@@Base+0xc0>
    4314:	b	43a4 <crc_check@@Base+0xd8>
    4318:	b	4324 <crc_check@@Base+0x58>
    431c:	b	4384 <crc_check@@Base+0xb8>
    4320:	b	438c <crc_check@@Base+0xc0>
    4324:	bl	2448 <EV5@plt>
    4328:	cmp	r0, #0
    432c:	bne	4360 <crc_check@@Base+0x94>
    4330:	ldrb	r3, [r4, #18]
    4334:	sub	r0, r3, #2
    4338:	cmp	r3, #5
    433c:	cmpne	r0, #1
    4340:	movhi	r0, #1
    4344:	movls	r0, #0
    4348:	ldr	r4, [sp]
    434c:	add	sp, sp, #4
    4350:	pop	{pc}		; (ldr pc, [sp], #4)
    4354:	bl	2190 <fhs@plt>
    4358:	cmp	r0, #0
    435c:	beq	4330 <crc_check@@Base+0x64>
    4360:	cmp	r0, #1
    4364:	ble	4348 <crc_check@@Base+0x7c>
    4368:	ldrb	r3, [r4, #18]
    436c:	ldr	r4, [sp]
    4370:	add	sp, sp, #4
    4374:	cmp	r3, #13
    4378:	cmpne	r3, #7
    437c:	moveq	r0, #1
    4380:	pop	{pc}		; (ldr pc, [sp], #4)
    4384:	bl	2208 <DM@plt>
    4388:	b	4328 <crc_check@@Base+0x5c>
    438c:	bl	2460 <DH@plt>
    4390:	b	4328 <crc_check@@Base+0x5c>
    4394:	bl	2220 <HV@plt>
    4398:	b	4328 <crc_check@@Base+0x5c>
    439c:	bl	23e8 <EV3@plt>
    43a0:	b	4328 <crc_check@@Base+0x5c>
    43a4:	bl	219c <EV4@plt>
    43a8:	b	4328 <crc_check@@Base+0x5c>
    43ac:	mov	r0, #1
    43b0:	b	4348 <crc_check@@Base+0x7c>

000043b4 <try_clock@@Base>:
    43b4:	strd	r4, [sp, #-20]!	; 0xffffffec
    43b8:	mov	r2, #18
    43bc:	mov	r5, r1
    43c0:	strd	r6, [sp, #8]
    43c4:	mov	r7, r0
    43c8:	add	r0, r1, #2880	; 0xb40
    43cc:	str	lr, [sp, #16]
    43d0:	sub	sp, sp, #52	; 0x34
    43d4:	add	r0, r0, #12
    43d8:	add	r6, sp, #8
    43dc:	mov	r1, r6
    43e0:	bl	2714 <__assert_fail@plt+0x224>
    43e4:	cmp	r0, #0
    43e8:	bne	4400 <try_clock@@Base+0x4c>
    43ec:	add	sp, sp, #52	; 0x34
    43f0:	ldrd	r4, [sp]
    43f4:	ldrd	r6, [sp, #8]
    43f8:	add	sp, sp, #16
    43fc:	pop	{pc}		; (ldr pc, [sp], #4)
    4400:	mov	r4, #0
    4404:	mov	r2, r7
    4408:	mov	r0, r6
    440c:	mov	r3, #18
    4410:	add	r1, sp, #28
    4414:	strd	r4, [sp]
    4418:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    441c:	mov	r0, r4
    4420:	add	r2, sp, #27
    4424:	mov	r3, r4
    4428:	ldrb	r1, [r2, #1]!
    442c:	orr	r0, r0, r1, lsl r3
    4430:	add	r3, r3, #1
    4434:	cmp	r3, #10
    4438:	uxth	r0, r0
    443c:	bne	4428 <try_clock@@Base+0x74>
    4440:	mov	r1, #0
    4444:	add	r2, sp, #37	; 0x25
    4448:	mov	r3, r1
    444c:	ldrb	ip, [r2, #1]!
    4450:	orr	r1, r1, ip, lsl r3
    4454:	add	r3, r3, #1
    4458:	cmp	r3, #8
    445c:	uxtb	r1, r1
    4460:	bne	444c <try_clock@@Base+0x98>
    4464:	bl	2794 <__assert_fail@plt+0x2a4>
    4468:	ldrb	r3, [sp, #33]	; 0x21
    446c:	strb	r0, [r5, #9]
    4470:	ldrb	ip, [sp, #32]
    4474:	ldrb	r1, [sp, #31]
    4478:	lsl	r3, r3, #2
    447c:	ldrb	r2, [sp, #34]	; 0x22
    4480:	orr	r3, r3, ip, lsl #1
    4484:	orr	r3, r3, r1
    4488:	orr	r3, r3, r2, lsl #3
    448c:	strb	r3, [r5, #18]
    4490:	b	43ec <try_clock@@Base+0x38>

00004494 <btbb_decode_header@@Base>:
    4494:	mov	r1, #4
    4498:	strd	r4, [sp, #-16]!
    449c:	mov	r5, r0
    44a0:	str	r6, [sp, #8]
    44a4:	str	lr, [sp, #12]
    44a8:	sub	sp, sp, #32
    44ac:	bl	2184 <btbb_packet_get_flag@plt>
    44b0:	cmp	r0, #0
    44b4:	bne	44d0 <btbb_decode_header@@Base+0x3c>
    44b8:	mov	r0, #0
    44bc:	add	sp, sp, #32
    44c0:	ldrd	r4, [sp]
    44c4:	ldr	r6, [sp, #8]
    44c8:	add	sp, sp, #12
    44cc:	pop	{pc}		; (ldr pc, [sp], #4)
    44d0:	add	r6, sp, #12
    44d4:	add	r0, r5, #2880	; 0xb40
    44d8:	mov	r1, r6
    44dc:	add	r0, r0, #12
    44e0:	mov	r2, #18
    44e4:	bl	2714 <__assert_fail@plt+0x224>
    44e8:	cmp	r0, #0
    44ec:	beq	44b8 <btbb_decode_header@@Base+0x24>
    44f0:	mov	r4, #0
    44f4:	mov	r0, r6
    44f8:	str	r5, [sp, #4]
    44fc:	mov	r3, #18
    4500:	add	r1, r5, #22
    4504:	ldr	r2, [r5, #2816]	; 0xb00
    4508:	str	r4, [sp]
    450c:	bl	3764 <btbb_packet_get_flag@@Base+0x18>
    4510:	movw	ip, #65515	; 0xffeb
    4514:	movt	ip, #65535	; 0xffff
    4518:	mov	r0, r4
    451c:	sub	ip, ip, r5
    4520:	add	r3, r5, #21
    4524:	add	lr, r5, #31
    4528:	add	r2, ip, r3
    452c:	ldrb	r1, [r3, #1]!
    4530:	orr	r0, r0, r1, lsl r2
    4534:	cmp	r3, lr
    4538:	uxth	r0, r0
    453c:	bne	4528 <btbb_decode_header@@Base+0x94>
    4540:	movw	ip, #65505	; 0xffe1
    4544:	movt	ip, #65535	; 0xffff
    4548:	sub	ip, ip, r5
    454c:	add	lr, r5, #39	; 0x27
    4550:	mov	r4, #0
    4554:	add	r2, ip, r3
    4558:	ldrb	r1, [r3, #1]!
    455c:	orr	r1, r4, r1, lsl r2
    4560:	cmp	r3, lr
    4564:	uxtb	r4, r1
    4568:	bne	4554 <btbb_decode_header@@Base+0xc0>
    456c:	mov	r1, r4
    4570:	bl	2794 <__assert_fail@plt+0x2a4>
    4574:	ldrb	r3, [r5, #9]
    4578:	cmp	r3, r0
    457c:	bne	44b8 <btbb_decode_header@@Base+0x24>
    4580:	ldrb	lr, [r5, #23]
    4584:	mov	r3, #0
    4588:	add	r1, r5, #24
    458c:	mov	r2, r3
    4590:	ldrb	r0, [r5, #22]
    4594:	ldrb	ip, [r5, #24]
    4598:	orr	r0, r0, lr, lsl #1
    459c:	orr	r0, r0, ip, lsl #2
    45a0:	strb	r0, [r5, #19]
    45a4:	ldrb	r0, [r1, #1]!
    45a8:	orr	r3, r3, r0, lsl r2
    45ac:	add	r2, r2, #1
    45b0:	cmp	r2, #4
    45b4:	uxtb	r3, r3
    45b8:	bne	45a4 <btbb_decode_header@@Base+0x110>
    45bc:	ldrb	r1, [r5, #30]
    45c0:	mov	r0, #1
    45c4:	strb	r3, [r5, #18]
    45c8:	ldrb	r3, [r5, #29]
    45cc:	strb	r4, [r5, #21]
    45d0:	ldrb	r2, [r5, #31]
    45d4:	orr	r3, r3, r1, lsl r0
    45d8:	orr	r3, r3, r2, lsl #2
    45dc:	strb	r3, [r5, #20]
    45e0:	b	44bc <btbb_decode_header@@Base+0x28>

000045e4 <btbb_decode_payload@@Base>:
    45e4:	strd	r4, [sp, #-16]!
    45e8:	mov	r2, #0
    45ec:	mov	r4, r0
    45f0:	str	r6, [sp, #8]
    45f4:	str	lr, [sp, #12]
    45f8:	ldrb	r3, [r0, #18]
    45fc:	str	r2, [r0, #40]	; 0x28
    4600:	cmp	r3, #15
    4604:	addls	pc, pc, r3, lsl #2
    4608:	b	470c <btbb_decode_payload@@Base+0x128>
    460c:	b	46c0 <btbb_decode_payload@@Base+0xdc>
    4610:	b	46c0 <btbb_decode_payload@@Base+0xdc>
    4614:	b	46f8 <btbb_decode_payload@@Base+0x114>
    4618:	b	4680 <btbb_decode_payload@@Base+0x9c>
    461c:	b	464c <btbb_decode_payload@@Base+0x68>
    4620:	b	46ac <btbb_decode_payload@@Base+0xc8>
    4624:	b	46ac <btbb_decode_payload@@Base+0xc8>
    4628:	b	4694 <btbb_decode_payload@@Base+0xb0>
    462c:	b	4680 <btbb_decode_payload@@Base+0x9c>
    4630:	b	464c <btbb_decode_payload@@Base+0x68>
    4634:	b	4680 <btbb_decode_payload@@Base+0x9c>
    4638:	b	464c <btbb_decode_payload@@Base+0x68>
    463c:	b	46d0 <btbb_decode_payload@@Base+0xec>
    4640:	b	46e4 <btbb_decode_payload@@Base+0x100>
    4644:	b	4680 <btbb_decode_payload@@Base+0x9c>
    4648:	b	464c <btbb_decode_payload@@Base+0x68>
    464c:	mov	r1, r0
    4650:	ldr	r0, [r0, #2816]	; 0xb00
    4654:	bl	2460 <DH@plt>
    4658:	mov	r5, r0
    465c:	mov	r0, r4
    4660:	mov	r2, #1
    4664:	mov	r1, #7
    4668:	bl	2130 <btbb_packet_set_flag@plt>
    466c:	mov	r0, r5
    4670:	ldrd	r4, [sp]
    4674:	ldr	r6, [sp, #8]
    4678:	add	sp, sp, #12
    467c:	pop	{pc}		; (ldr pc, [sp], #4)
    4680:	mov	r1, r0
    4684:	ldr	r0, [r0, #2816]	; 0xb00
    4688:	bl	2208 <DM@plt>
    468c:	mov	r5, r0
    4690:	b	465c <btbb_decode_payload@@Base+0x78>
    4694:	mov	r1, r0
    4698:	ldr	r0, [r0, #2816]	; 0xb00
    469c:	bl	23e8 <EV3@plt>
    46a0:	cmp	r0, #1
    46a4:	mov	r5, r0
    46a8:	bgt	465c <btbb_decode_payload@@Base+0x78>
    46ac:	mov	r1, r4
    46b0:	ldr	r0, [r4, #2816]	; 0xb00
    46b4:	bl	2220 <HV@plt>
    46b8:	mov	r5, r0
    46bc:	b	465c <btbb_decode_payload@@Base+0x78>
    46c0:	mov	r3, #0
    46c4:	mov	r5, #1
    46c8:	str	r3, [r0, #64]	; 0x40
    46cc:	b	465c <btbb_decode_payload@@Base+0x78>
    46d0:	mov	r1, r0
    46d4:	ldr	r0, [r0, #2816]	; 0xb00
    46d8:	bl	219c <EV4@plt>
    46dc:	mov	r5, r0
    46e0:	b	465c <btbb_decode_payload@@Base+0x78>
    46e4:	mov	r1, r0
    46e8:	ldr	r0, [r0, #2816]	; 0xb00
    46ec:	bl	2448 <EV5@plt>
    46f0:	mov	r5, r0
    46f4:	b	465c <btbb_decode_payload@@Base+0x78>
    46f8:	mov	r1, r0
    46fc:	ldr	r0, [r0, #2816]	; 0xb00
    4700:	bl	2190 <fhs@plt>
    4704:	mov	r5, r0
    4708:	b	465c <btbb_decode_payload@@Base+0x78>
    470c:	mov	r5, #0
    4710:	b	465c <btbb_decode_payload@@Base+0x78>

00004714 <btbb_print_packet@@Base>:
    4714:	mov	r1, #7
    4718:	strd	r4, [sp, #-24]!	; 0xffffffe8
    471c:	mov	r4, r0
    4720:	strd	r6, [sp, #8]
    4724:	str	r8, [sp, #16]
    4728:	str	lr, [sp, #20]
    472c:	bl	2184 <btbb_packet_get_flag@plt>
    4730:	cmp	r0, #0
    4734:	bne	474c <btbb_print_packet@@Base+0x38>
    4738:	ldrd	r4, [sp]
    473c:	ldrd	r6, [sp, #8]
    4740:	ldr	r8, [sp, #16]
    4744:	add	sp, sp, #20
    4748:	pop	{pc}		; (ldr pc, [sp], #4)
    474c:	ldr	r3, [pc, #256]	; 4854 <btbb_print_packet@@Base+0x140>
    4750:	ldrb	r2, [r4, #18]
    4754:	ldr	r0, [pc, #252]	; 4858 <btbb_print_packet@@Base+0x144>
    4758:	add	r3, pc, r3
    475c:	ldr	r1, [r3, r2, lsl #2]
    4760:	add	r0, pc, r0
    4764:	bl	2100 <printf@plt>
    4768:	ldr	r3, [r4, #40]	; 0x28
    476c:	cmp	r3, #0
    4770:	bgt	4804 <btbb_print_packet@@Base+0xf0>
    4774:	ldr	r3, [r4, #64]	; 0x40
    4778:	cmp	r3, #0
    477c:	beq	4738 <btbb_print_packet@@Base+0x24>
    4780:	ldr	r0, [pc, #212]	; 485c <btbb_print_packet@@Base+0x148>
    4784:	add	r0, pc, r0
    4788:	bl	2100 <printf@plt>
    478c:	ldr	r3, [r4, #64]	; 0x40
    4790:	cmp	r3, #0
    4794:	ble	47e8 <btbb_print_packet@@Base+0xd4>
    4798:	ldr	r6, [pc, #192]	; 4860 <btbb_print_packet@@Base+0x14c>
    479c:	add	r7, r4, #67	; 0x43
    47a0:	mov	r5, #0
    47a4:	add	r6, pc, r6
    47a8:	mov	r1, #0
    47ac:	mov	r2, r7
    47b0:	mov	r3, r1
    47b4:	ldrb	r0, [r2, #1]!
    47b8:	orr	r1, r1, r0, lsl r3
    47bc:	add	r3, r3, #1
    47c0:	cmp	r3, #8
    47c4:	uxtb	r1, r1
    47c8:	bne	47b4 <btbb_print_packet@@Base+0xa0>
    47cc:	mov	r0, r6
    47d0:	add	r5, r5, #1
    47d4:	bl	2100 <printf@plt>
    47d8:	ldr	r3, [r4, #64]	; 0x40
    47dc:	add	r7, r7, #8
    47e0:	cmp	r5, r3
    47e4:	blt	47a8 <btbb_print_packet@@Base+0x94>
    47e8:	mov	r0, #10
    47ec:	ldrd	r4, [sp]
    47f0:	ldrd	r6, [sp, #8]
    47f4:	ldr	r8, [sp, #16]
    47f8:	ldr	lr, [sp, #20]
    47fc:	add	sp, sp, #24
    4800:	b	23d0 <putchar@plt>
    4804:	ldr	r0, [pc, #88]	; 4864 <btbb_print_packet@@Base+0x150>
    4808:	ldrb	r1, [r4, #19]
    480c:	add	r0, pc, r0
    4810:	bl	2100 <printf@plt>
    4814:	ldr	r0, [pc, #76]	; 4868 <btbb_print_packet@@Base+0x154>
    4818:	ldrb	r1, [r4, #60]	; 0x3c
    481c:	add	r0, pc, r0
    4820:	bl	2100 <printf@plt>
    4824:	ldr	r0, [pc, #64]	; 486c <btbb_print_packet@@Base+0x158>
    4828:	ldrb	r1, [r4, #61]	; 0x3d
    482c:	add	r0, pc, r0
    4830:	bl	2100 <printf@plt>
    4834:	ldr	r0, [pc, #52]	; 4870 <btbb_print_packet@@Base+0x15c>
    4838:	ldr	r1, [r4, #64]	; 0x40
    483c:	add	r0, pc, r0
    4840:	bl	2100 <printf@plt>
    4844:	ldr	r3, [r4, #64]	; 0x40
    4848:	cmp	r3, #0
    484c:	beq	4738 <btbb_print_packet@@Base+0x24>
    4850:	b	4780 <btbb_print_packet@@Base+0x6c>
    4854:			; <UNDEFINED> instruction: 0x000246b8
    4858:	andeq	sp, r0, r8, lsr r9
    485c:	andeq	sp, r0, r0, ror #18
    4860:	andeq	sp, r0, r0, lsr #31
    4864:	muleq	r0, r8, r8
    4868:	muleq	r0, r8, r8
    486c:	muleq	r0, r4, r8
    4870:	muleq	r0, r0, r8

00004874 <btbb_decode@@Base>:
    4874:	mov	r2, #0
    4878:	mov	r1, #7
    487c:	strd	r4, [sp, #-16]!
    4880:	mov	r4, r0
    4884:	str	r6, [sp, #8]
    4888:	str	lr, [sp, #12]
    488c:	bl	2130 <btbb_packet_set_flag@plt>
    4890:	mov	r0, r4
    4894:	bl	2340 <btbb_decode_header@plt>
    4898:	subs	r5, r0, #0
    489c:	bne	48b4 <btbb_decode@@Base+0x40>
    48a0:	mov	r0, r5
    48a4:	ldrd	r4, [sp]
    48a8:	ldr	r6, [sp, #8]
    48ac:	add	sp, sp, #12
    48b0:	pop	{pc}		; (ldr pc, [sp], #4)
    48b4:	mov	r0, r4
    48b8:	bl	2484 <btbb_decode_payload@plt>
    48bc:	subs	r5, r0, #0
    48c0:	ble	48a0 <btbb_decode@@Base+0x2c>
    48c4:	ldr	r0, [pc, #28]	; 48e8 <btbb_decode@@Base+0x74>
    48c8:	mov	r2, r5
    48cc:	ldr	r1, [r4, #2816]	; 0xb00
    48d0:	add	r0, pc, r0
    48d4:	and	r1, r1, #63	; 0x3f
    48d8:	bl	2100 <printf@plt>
    48dc:	mov	r0, r4
    48e0:	bl	24a8 <btbb_print_packet@plt>
    48e4:	b	48a0 <btbb_decode@@Base+0x2c>
    48e8:	andeq	sp, r0, r0, lsr #16

000048ec <tun_format@@Base>:
    48ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
    48f0:	mov	r4, r0
    48f4:	ldr	r0, [r0, #64]	; 0x40
    48f8:	strd	r6, [sp, #8]
    48fc:	str	r8, [sp, #16]
    4900:	str	lr, [sp, #20]
    4904:	add	r0, r0, #9
    4908:	bl	22c8 <malloc@plt>
    490c:	ldrb	r2, [r4, #8]
    4910:	mov	r5, r0
    4914:	mov	r1, #5
    4918:	mov	r0, r4
    491c:	ldr	r3, [r4, #2816]	; 0xb00
    4920:	str	r3, [r5]
    4924:	strb	r2, [r5, #4]
    4928:	bl	2184 <btbb_packet_get_flag@plt>
    492c:	mov	r6, r0
    4930:	mov	r1, #1
    4934:	mov	r0, r4
    4938:	bl	2184 <btbb_packet_get_flag@plt>
    493c:	orr	r0, r6, r0, lsl #1
    4940:	movw	ip, #65515	; 0xffeb
    4944:	movt	ip, #65535	; 0xffff
    4948:	sub	ip, ip, r4
    494c:	add	r3, r4, #21
    4950:	add	lr, r4, #28
    4954:	mov	r2, #0
    4958:	strb	r0, [r5, #5]
    495c:	add	r1, ip, r3
    4960:	ldrb	r0, [r3, #1]!
    4964:	orr	r2, r2, r0, lsl r1
    4968:	cmp	r3, lr
    496c:	uxtb	r2, r2
    4970:	bne	495c <tun_format@@Base+0x70>
    4974:	ldrb	r6, [r4, #30]
    4978:	mov	r3, r4
    497c:	movw	ip, #65505	; 0xffe1
    4980:	movt	ip, #65535	; 0xffff
    4984:	add	lr, r4, #39	; 0x27
    4988:	strb	r2, [r5, #6]
    498c:	ldrb	r1, [r4, #29]
    4990:	sub	ip, ip, r4
    4994:	mov	r2, #0
    4998:	ldrb	r0, [r3, #31]!
    499c:	orr	r1, r1, r6, lsl #1
    49a0:	orr	r1, r1, r0, lsl #2
    49a4:	strb	r1, [r5, #7]
    49a8:	add	r1, ip, r3
    49ac:	ldrb	r0, [r3, #1]!
    49b0:	orr	r2, r2, r0, lsl r1
    49b4:	cmp	lr, r3
    49b8:	uxtb	r2, r2
    49bc:	bne	49a8 <tun_format@@Base+0xbc>
    49c0:	ldr	r3, [r4, #64]	; 0x40
    49c4:	strb	r2, [r5, #8]
    49c8:	cmp	r3, #0
    49cc:	ble	4a20 <tun_format@@Base+0x134>
    49d0:	add	r6, r4, #68	; 0x44
    49d4:	add	r3, r3, #8
    49d8:	add	ip, r4, #75	; 0x4b
    49dc:	add	r7, r5, r3
    49e0:	rsb	r6, r6, #0
    49e4:	add	r4, r5, #8
    49e8:	mvn	r2, r6
    49ec:	mov	r3, #0
    49f0:	add	lr, r6, #1
    49f4:	add	r1, lr, r2
    49f8:	ldrb	r0, [r2, #1]!
    49fc:	orr	r3, r3, r0, lsl r1
    4a00:	cmp	ip, r2
    4a04:	uxtb	r3, r3
    4a08:	bne	49f4 <tun_format@@Base+0x108>
    4a0c:	strb	r3, [r4, #1]!
    4a10:	cmp	r4, r7
    4a14:	sub	r6, r6, #8
    4a18:	add	ip, ip, #8
    4a1c:	bne	49e8 <tun_format@@Base+0xfc>
    4a20:	mov	r0, r5
    4a24:	ldrd	r4, [sp]
    4a28:	ldrd	r6, [sp, #8]
    4a2c:	ldr	r8, [sp, #16]
    4a30:	add	sp, sp, #20
    4a34:	pop	{pc}		; (ldr pc, [sp], #4)

00004a38 <btbb_header_present@@Base>:
    4a38:	movw	r3, #2822	; 0xb06
    4a3c:	ldrh	r3, [r0, r3]
    4a40:	cmp	r3, #121	; 0x79
    4a44:	bls	4ad8 <btbb_header_present@@Base+0xa0>
    4a48:	strd	r4, [sp, #-12]!
    4a4c:	mov	r3, r0
    4a50:	str	lr, [sp, #8]
    4a54:	ldrb	r2, [r0, #2887]	; 0xb47
    4a58:	ldrb	ip, [r0, #2888]	; 0xb48
    4a5c:	ldrb	r4, [r0, #2889]	; 0xb49
    4a60:	clz	lr, r2
    4a64:	ldrb	r1, [r0, #2890]	; 0xb4a
    4a68:	lsr	lr, lr, #5
    4a6c:	ldrb	r5, [r0, #2891]	; 0xb4b
    4a70:	eor	ip, ip, lr
    4a74:	eor	r0, r2, r4
    4a78:	add	r4, r3, #54	; 0x36
    4a7c:	add	r0, ip, r0
    4a80:	eor	r1, r1, lr
    4a84:	add	r1, r1, r0
    4a88:	eor	r0, r2, r5
    4a8c:	add	r0, r0, r1
    4a90:	ldrb	r1, [r3, #2892]	; 0xb4c
    4a94:	add	r3, r3, #3
    4a98:	ldrb	ip, [r3, #2890]	; 0xb4a
    4a9c:	ldrb	lr, [r3, #2891]	; 0xb4b
    4aa0:	cmp	r4, r3
    4aa4:	eor	r2, r1, ip
    4aa8:	eor	ip, ip, lr
    4aac:	eor	r1, r1, lr
    4ab0:	orr	r2, r2, ip
    4ab4:	orr	r2, r2, r1
    4ab8:	add	r0, r0, r2
    4abc:	bne	4a90 <btbb_header_present@@Base+0x58>
    4ac0:	cmp	r0, #4
    4ac4:	ldrd	r4, [sp]
    4ac8:	add	sp, sp, #8
    4acc:	movgt	r0, #0
    4ad0:	movle	r0, #1
    4ad4:	pop	{pc}		; (ldr pc, [sp], #4)
    4ad8:	mov	r0, #0
    4adc:	bx	lr

00004ae0 <lap_from_fhs@@Base>:
    4ae0:	push	{lr}		; (str lr, [sp, #-4]!)
    4ae4:	movw	lr, #65435	; 0xff9b
    4ae8:	movt	lr, #65535	; 0xffff
    4aec:	add	r3, r0, #101	; 0x65
    4af0:	sub	lr, lr, r0
    4af4:	add	ip, r0, #125	; 0x7d
    4af8:	mov	r0, #0
    4afc:	add	r2, lr, r3
    4b00:	ldrb	r1, [r3, #1]!
    4b04:	cmp	r3, ip
    4b08:	orr	r0, r0, r1, lsl r2
    4b0c:	bne	4afc <lap_from_fhs@@Base+0x1c>
    4b10:	pop	{pc}		; (ldr pc, [sp], #4)

00004b14 <uap_from_fhs@@Base>:
    4b14:	push	{lr}		; (str lr, [sp, #-4]!)
    4b18:	movw	lr, #65405	; 0xff7d
    4b1c:	movt	lr, #65535	; 0xffff
    4b20:	add	r3, r0, #131	; 0x83
    4b24:	sub	lr, lr, r0
    4b28:	add	ip, r0, #139	; 0x8b
    4b2c:	mov	r0, #0
    4b30:	add	r2, lr, r3
    4b34:	ldrb	r1, [r3, #1]!
    4b38:	orr	r0, r0, r1, lsl r2
    4b3c:	cmp	r3, ip
    4b40:	uxtb	r0, r0
    4b44:	bne	4b30 <uap_from_fhs@@Base+0x1c>
    4b48:	pop	{pc}		; (ldr pc, [sp], #4)

00004b4c <nap_from_fhs@@Base>:
    4b4c:	push	{lr}		; (str lr, [sp, #-4]!)
    4b50:	movw	lr, #65397	; 0xff75
    4b54:	movt	lr, #65535	; 0xffff
    4b58:	add	r3, r0, #139	; 0x8b
    4b5c:	sub	lr, lr, r0
    4b60:	add	ip, r0, #155	; 0x9b
    4b64:	mov	r0, #0
    4b68:	add	r2, lr, r3
    4b6c:	ldrb	r1, [r3, #1]!
    4b70:	orr	r0, r0, r1, lsl r2
    4b74:	cmp	r3, ip
    4b78:	uxth	r0, r0
    4b7c:	bne	4b68 <nap_from_fhs@@Base+0x1c>
    4b80:	pop	{pc}		; (ldr pc, [sp], #4)

00004b84 <clock_from_fhs@@Base>:
    4b84:	push	{lr}		; (str lr, [sp, #-4]!)
    4b88:	movw	lr, #65354	; 0xff4a
    4b8c:	movt	lr, #65535	; 0xffff
    4b90:	add	r3, r0, #182	; 0xb6
    4b94:	sub	lr, lr, r0
    4b98:	add	ip, r0, #208	; 0xd0
    4b9c:	mov	r0, #0
    4ba0:	add	r2, lr, r3
    4ba4:	ldrb	r1, [r3, #1]!
    4ba8:	cmp	r3, ip
    4bac:	orr	r0, r0, r1, lsl r2
    4bb0:	bne	4ba0 <clock_from_fhs@@Base+0x1c>
    4bb4:	pop	{pc}		; (ldr pc, [sp], #4)

00004bb8 <count_bits@@Base>:
    4bb8:	subs	r3, r0, #0
    4bbc:	beq	4bd8 <count_bits@@Base+0x20>
    4bc0:	mov	r0, #0
    4bc4:	sub	r2, r3, #1
    4bc8:	add	r0, r0, #1
    4bcc:	ands	r3, r2, r3
    4bd0:	bne	4bc4 <count_bits@@Base+0xc>
    4bd4:	bx	lr
    4bd8:	mov	r0, r3
    4bdc:	bx	lr

00004be0 <btbb_piconet_new@@Base>:
    4be0:	movw	r1, #5660	; 0x161c
    4be4:	mov	r0, #1
    4be8:	str	r4, [sp, #-8]!
    4bec:	str	lr, [sp, #4]
    4bf0:	bl	20ac <calloc@plt>
    4bf4:	mov	r3, #1
    4bf8:	ldr	r4, [sp]
    4bfc:	add	sp, sp, #4
    4c00:	str	r3, [r0]
    4c04:	pop	{pc}		; (ldr pc, [sp], #4)

00004c08 <btbb_piconet_ref@@Base>:
    4c08:	ldr	r3, [r0]
    4c0c:	add	r3, r3, #1
    4c10:	str	r3, [r0]
    4c14:	bx	lr

00004c18 <btbb_piconet_unref@@Base>:
    4c18:	ldr	r3, [r0]
    4c1c:	subs	r3, r3, #1
    4c20:	beq	4c2c <btbb_piconet_unref@@Base+0x14>
    4c24:	str	r3, [r0]
    4c28:	bx	lr
    4c2c:	b	2148 <free@plt>

00004c30 <btbb_init_survey@@Base>:
    4c30:	ldr	r3, [pc, #16]	; 4c48 <btbb_init_survey@@Base+0x18>
    4c34:	mov	r2, #1
    4c38:	mov	r0, #0
    4c3c:	add	r3, pc, r3
    4c40:	str	r2, [r3]
    4c44:	bx	lr
    4c48:	andeq	r4, r2, r8, ror #10

00004c4c <btbb_piconet_set_flag@@Base>:
    4c4c:	ldr	r3, [r0, #4]
    4c50:	cmp	r2, #0
    4c54:	mov	r2, #1
    4c58:	lsl	r1, r2, r1
    4c5c:	biceq	r3, r3, r1
    4c60:	orrne	r3, r3, r1
    4c64:	str	r3, [r0, #4]
    4c68:	bx	lr

00004c6c <btbb_init_piconet@@Base>:
    4c6c:	mov	r2, #1
    4c70:	str	r1, [r0, #24]
    4c74:	mov	r1, #3
    4c78:	b	2214 <btbb_piconet_set_flag@plt>

00004c7c <btbb_piconet_get_flag@@Base>:
    4c7c:	ldr	r3, [r0, #4]
    4c80:	mov	r2, #1
    4c84:	ands	r3, r3, r2, lsl r1
    4c88:	movne	r0, r2
    4c8c:	moveq	r0, #0
    4c90:	bx	lr
    4c94:	mov	r1, #9
    4c98:	str	r4, [sp, #-8]!
    4c9c:	mov	r4, r0
    4ca0:	str	lr, [sp, #4]
    4ca4:	bl	21f0 <btbb_piconet_get_flag@plt>
    4ca8:	cmp	r0, #0
    4cac:	bne	4d30 <btbb_piconet_get_flag@@Base+0xb4>
    4cb0:	mov	r0, r4
    4cb4:	mov	r2, #0
    4cb8:	mov	r1, #10
    4cbc:	bl	2214 <btbb_piconet_set_flag@plt>
    4cc0:	mov	r0, r4
    4cc4:	mov	r2, #0
    4cc8:	mov	r1, #9
    4ccc:	bl	2214 <btbb_piconet_set_flag@plt>
    4cd0:	mov	r0, r4
    4cd4:	mov	r2, #0
    4cd8:	mov	r1, #2
    4cdc:	bl	2214 <btbb_piconet_set_flag@plt>
    4ce0:	mov	r0, r4
    4ce4:	mov	r2, #0
    4ce8:	mov	r1, #4
    4cec:	bl	2214 <btbb_piconet_set_flag@plt>
    4cf0:	mov	r2, #0
    4cf4:	mov	r0, r4
    4cf8:	mov	r1, #5
    4cfc:	bl	2214 <btbb_piconet_set_flag@plt>
    4d00:	mov	r3, #0
    4d04:	mov	r1, #12
    4d08:	mov	r0, r4
    4d0c:	str	r3, [r4, #380]	; 0x17c
    4d10:	bl	21f0 <btbb_piconet_get_flag@plt>
    4d14:	mov	r2, r0
    4d18:	mov	r1, #11
    4d1c:	ldr	lr, [sp, #4]
    4d20:	mov	r0, r4
    4d24:	ldr	r4, [sp]
    4d28:	add	sp, sp, #8
    4d2c:	b	2214 <btbb_piconet_set_flag@plt>
    4d30:	ldr	r0, [r4, #32]
    4d34:	bl	2148 <free@plt>
    4d38:	mov	r3, #0
    4d3c:	str	r3, [r4, #372]	; 0x174
    4d40:	b	4cb0 <btbb_piconet_get_flag@@Base+0x34>

00004d44 <btbb_piconet_set_uap@@Base>:
    4d44:	mov	r2, #1
    4d48:	strb	r1, [r0, #28]
    4d4c:	mov	r1, #2
    4d50:	b	2214 <btbb_piconet_set_flag@plt>

00004d54 <btbb_piconet_get_uap@@Base>:
    4d54:	ldrb	r0, [r0, #28]
    4d58:	bx	lr

00004d5c <btbb_piconet_get_lap@@Base>:
    4d5c:	ldr	r0, [r0, #24]
    4d60:	bx	lr

00004d64 <btbb_piconet_get_nap@@Base>:
    4d64:	ldrh	r0, [r0, #30]
    4d68:	bx	lr

00004d6c <btbb_piconet_get_bdaddr@@Base>:
    4d6c:	ldrb	r2, [r0, #28]
    4d70:	ldr	r3, [r0, #24]
    4d74:	ldrh	r1, [r0, #30]
    4d78:	orr	r0, r3, r2, lsl #24
    4d7c:	bx	lr

00004d80 <btbb_piconet_get_clk_offset@@Base>:
    4d80:	add	r0, r0, #4096	; 0x1000
    4d84:	ldr	r0, [r0, #1552]	; 0x610
    4d88:	bx	lr

00004d8c <btbb_piconet_set_clk_offset@@Base>:
    4d8c:	add	r0, r0, #4096	; 0x1000
    4d90:	str	r1, [r0, #1552]	; 0x610
    4d94:	bx	lr

00004d98 <btbb_piconet_get_afh_map@@Base>:
    4d98:	add	r0, r0, #12
    4d9c:	bx	lr

00004da0 <btbb_piconet_set_channel_seen@@Base>:
    4da0:	push	{lr}		; (str lr, [sp, #-4]!)
    4da4:	add	lr, r0, r1, lsr #3
    4da8:	and	r1, r1, #7
    4dac:	ldrb	r2, [lr, #12]
    4db0:	asr	r3, r2, r1
    4db4:	tst	r3, #1
    4db8:	movne	r0, #0
    4dbc:	bne	4de0 <btbb_piconet_set_channel_seen@@Base+0x40>
    4dc0:	mov	r3, #1
    4dc4:	mov	ip, r0
    4dc8:	orr	r1, r2, r3, lsl r1
    4dcc:	mov	r0, r3
    4dd0:	strb	r1, [lr, #12]
    4dd4:	ldrb	r3, [ip, #22]
    4dd8:	add	r3, r3, r0
    4ddc:	strb	r3, [ip, #22]
    4de0:	pop	{pc}		; (ldr pc, [sp], #4)

00004de4 <btbb_piconet_clear_channel_seen@@Base>:
    4de4:	add	ip, r0, r1, lsr #3
    4de8:	and	r1, r1, #7
    4dec:	ldrb	r2, [ip, #12]
    4df0:	asr	r3, r2, r1
    4df4:	ands	r3, r3, #1
    4df8:	beq	4e14 <btbb_piconet_clear_channel_seen@@Base+0x30>
    4dfc:	mov	r3, #1
    4e00:	bic	r1, r2, r3, lsl r1
    4e04:	strb	r1, [ip, #12]
    4e08:	ldrb	r2, [r0, #22]
    4e0c:	sub	r2, r2, #1
    4e10:	strb	r2, [r0, #22]
    4e14:	mov	r0, r3
    4e18:	bx	lr

00004e1c <btbb_piconet_get_channel_seen@@Base>:
    4e1c:	cmp	r1, #78	; 0x4e
    4e20:	bhi	4e3c <btbb_piconet_get_channel_seen@@Base+0x20>
    4e24:	add	r0, r0, r1, lsr #3
    4e28:	and	r1, r1, #7
    4e2c:	ldrb	r0, [r0, #12]
    4e30:	asr	r0, r0, r1
    4e34:	and	r0, r0, #1
    4e38:	bx	lr
    4e3c:	mov	r0, #1
    4e40:	bx	lr

00004e44 <precalc@@Base>:
    4e44:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4e48:	mov	r5, #0
    4e4c:	strd	r6, [sp, #8]
    4e50:	movw	r7, #29865	; 0x74a9
    4e54:	movt	r7, #53092	; 0xcf64
    4e58:	mov	r6, r0
    4e5c:	strd	r8, [sp, #16]
    4e60:	mov	r9, r5
    4e64:	mov	r8, #79	; 0x4f
    4e68:	str	sl, [sp, #24]
    4e6c:	str	lr, [sp, #28]
    4e70:	b	4e80 <precalc@@Base+0x3c>
    4e74:	add	r5, r5, #2
    4e78:	cmp	r5, #158	; 0x9e
    4e7c:	beq	4ed0 <precalc@@Base+0x8c>
    4e80:	umull	r3, r4, r7, r5
    4e84:	mov	r1, #11
    4e88:	mov	r0, r6
    4e8c:	bl	21f0 <btbb_piconet_get_flag@plt>
    4e90:	cmp	r0, #0
    4e94:	add	r3, r6, #56	; 0x38
    4e98:	lsr	r4, r4, #6
    4e9c:	mls	r4, r8, r4, r5
    4ea0:	streq	r4, [r3, r5, lsl #1]
    4ea4:	beq	4e74 <precalc@@Base+0x30>
    4ea8:	mov	r0, r6
    4eac:	uxtb	r1, r4
    4eb0:	bl	21cc <btbb_piconet_get_channel_seen@plt>
    4eb4:	cmp	r0, #0
    4eb8:	add	r3, r9, #14
    4ebc:	add	r5, r5, #2
    4ec0:	addne	r9, r9, #1
    4ec4:	strne	r4, [r6, r3, lsl #2]
    4ec8:	cmp	r5, #158	; 0x9e
    4ecc:	bne	4e80 <precalc@@Base+0x3c>
    4ed0:	ldrd	r4, [sp]
    4ed4:	ldrd	r6, [sp, #8]
    4ed8:	ldrd	r8, [sp, #16]
    4edc:	ldr	sl, [sp, #24]
    4ee0:	add	sp, sp, #28
    4ee4:	pop	{pc}		; (ldr pc, [sp], #4)

00004ee8 <address_precalc@@Base>:
    4ee8:	asr	r3, r0, #7
    4eec:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4ef0:	asr	r2, r0, #6
    4ef4:	strd	r6, [sp, #8]
    4ef8:	asr	ip, r0, #4
    4efc:	and	r3, r3, #64	; 0x40
    4f00:	str	r8, [sp, #16]
    4f04:	asr	r7, r0, #3
    4f08:	str	lr, [sp, #20]
    4f0c:	and	r2, r2, #32
    4f10:	asr	lr, r0, #5
    4f14:	orr	r2, r3, r2
    4f18:	and	r4, ip, #16
    4f1c:	asr	r5, r0, #2
    4f20:	and	r3, r7, #8
    4f24:	and	r6, ip, #8
    4f28:	and	lr, lr, #16
    4f2c:	orr	r4, r4, r3
    4f30:	asr	ip, r0, #1
    4f34:	add	r3, r2, lr
    4f38:	and	r7, r7, #4
    4f3c:	ubfx	r8, r0, #23, #5
    4f40:	add	r3, r3, r6
    4f44:	and	r2, r5, #4
    4f48:	and	lr, ip, #2
    4f4c:	add	r2, r4, r2
    4f50:	ubfx	r4, r0, #19, #4
    4f54:	and	r5, r5, #2
    4f58:	add	r3, r3, r7
    4f5c:	ldrd	r6, [sp, #8]
    4f60:	add	r2, r2, lr
    4f64:	add	r3, r3, r5
    4f68:	ubfx	lr, r0, #10, #9
    4f6c:	and	ip, ip, #1
    4f70:	and	r0, r0, #1
    4f74:	str	r4, [r1, #36]	; 0x24
    4f78:	add	r0, r2, r0
    4f7c:	add	r3, r3, ip
    4f80:	ldrd	r4, [sp]
    4f84:	str	r8, [r1, #44]	; 0x2c
    4f88:	ldr	r8, [sp, #16]
    4f8c:	add	sp, sp, #20
    4f90:	str	r3, [r1, #40]	; 0x28
    4f94:	str	r0, [r1, #48]	; 0x30
    4f98:	str	lr, [r1, #52]	; 0x34
    4f9c:	pop	{pc}		; (ldr pc, [sp], #4)

00004fa0 <perm5@@Base>:
    4fa0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4fa4:	mov	r3, #0
    4fa8:	strd	r6, [sp, #8]
    4fac:	strd	r8, [sp, #16]
    4fb0:	ldr	r9, [pc, #356]	; 511c <perm5@@Base+0x17c>
    4fb4:	str	sl, [sp, #24]
    4fb8:	str	lr, [sp, #28]
    4fbc:	sub	sp, sp, #192	; 0xc0
    4fc0:	add	lr, sp, #136	; 0x88
    4fc4:	add	ip, sp, #80	; 0x50
    4fc8:	add	r8, sp, #20
    4fcc:	add	r9, pc, r9
    4fd0:	ldrd	r4, [r9]
    4fd4:	ldrd	r6, [r9, #64]	; 0x40
    4fd8:	strd	r4, [sp, #80]	; 0x50
    4fdc:	ldrd	r4, [r9, #8]
    4fe0:	strd	r6, [lr, #8]
    4fe4:	ldrd	r6, [r9, #72]	; 0x48
    4fe8:	strd	r4, [ip, #8]
    4fec:	ldrd	r4, [r9, #16]
    4ff0:	strd	r6, [lr, #16]
    4ff4:	ldrd	r6, [r9, #80]	; 0x50
    4ff8:	strd	r4, [ip, #16]
    4ffc:	ldrd	r4, [r9, #24]
    5000:	strd	r6, [lr, #24]
    5004:	ldrd	r6, [r9, #88]	; 0x58
    5008:	strd	r4, [ip, #24]
    500c:	ldrd	r4, [r9, #32]
    5010:	strd	r6, [lr, #32]
    5014:	ldrd	r6, [r9, #96]	; 0x60
    5018:	strd	r4, [ip, #32]
    501c:	ldrd	r4, [r9, #40]	; 0x28
    5020:	strd	r6, [lr, #40]	; 0x28
    5024:	ldrd	r6, [r9, #104]	; 0x68
    5028:	strd	r4, [ip, #40]	; 0x28
    502c:	ldrd	r4, [r9, #56]	; 0x38
    5030:	strd	r6, [lr, #48]	; 0x30
    5034:	ldrd	r6, [r9, #48]	; 0x30
    5038:	strd	r6, [ip, #48]	; 0x30
    503c:	strd	r4, [sp, #136]	; 0x88
    5040:	asr	r4, r2, r3
    5044:	add	r3, r3, #1
    5048:	cmp	r3, #9
    504c:	and	r4, r4, #1
    5050:	str	r4, [r8, #4]!
    5054:	bne	5040 <perm5@@Base+0xa0>
    5058:	add	r4, sp, #56	; 0x38
    505c:	mov	r3, #0
    5060:	asr	r2, r1, r3
    5064:	add	r3, r3, #1
    5068:	cmp	r3, #5
    506c:	and	r2, r2, #1
    5070:	str	r2, [r4, #4]!
    5074:	bne	5060 <perm5@@Base+0xc0>
    5078:	add	r4, sp, #4
    507c:	mov	r3, #0
    5080:	mov	r1, r4
    5084:	asr	r2, r0, r3
    5088:	add	r3, r3, #1
    508c:	cmp	r3, #5
    5090:	and	r2, r2, #1
    5094:	str	r2, [r1], #4
    5098:	bne	5084 <perm5@@Base+0xe4>
    509c:	add	r1, sp, #76	; 0x4c
    50a0:	mov	r0, #14
    50a4:	ldr	r2, [r1], #-4
    50a8:	lsl	r3, r0, #2
    50ac:	add	r5, ip, r3
    50b0:	add	r3, lr, r3
    50b4:	cmp	r2, #0
    50b8:	beq	50e0 <perm5@@Base+0x140>
    50bc:	ldr	r2, [r5, #-4]
    50c0:	add	r5, sp, #192	; 0xc0
    50c4:	ldr	r3, [r3, #-4]
    50c8:	add	r2, r5, r2, lsl #2
    50cc:	add	r3, r5, r3, lsl #2
    50d0:	ldr	r5, [r2, #-188]	; 0xffffff44
    50d4:	ldr	r6, [r3, #-188]	; 0xffffff44
    50d8:	str	r6, [r2, #-188]	; 0xffffff44
    50dc:	str	r5, [r3, #-188]	; 0xffffff44
    50e0:	subs	r0, r0, #1
    50e4:	bne	50a4 <perm5@@Base+0x104>
    50e8:	mov	r3, r0
    50ec:	ldr	r2, [r4], #4
    50f0:	add	r0, r0, r2, lsl r3
    50f4:	add	r3, r3, #1
    50f8:	cmp	r3, #5
    50fc:	bne	50ec <perm5@@Base+0x14c>
    5100:	add	sp, sp, #192	; 0xc0
    5104:	ldrd	r4, [sp]
    5108:	ldrd	r6, [sp, #8]
    510c:	ldrd	r8, [sp, #16]
    5110:	ldr	sl, [sp, #24]
    5114:	add	sp, sp, #28
    5118:	pop	{pc}		; (ldr pc, [sp], #4)
    511c:	strdeq	sp, [r0], -r0

00005120 <perm_table_init@@Base>:
    5120:	ldr	r3, [pc, #164]	; 51cc <perm_table_init@@Base+0xac>
    5124:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5128:	ldr	r2, [pc, #160]	; 51d0 <perm_table_init@@Base+0xb0>
    512c:	strd	r6, [sp, #8]
    5130:	mov	r7, #0
    5134:	strd	r8, [sp, #16]
    5138:	add	r3, pc, r3
    513c:	strd	sl, [sp, #24]
    5140:	str	lr, [sp, #32]
    5144:	sub	sp, sp, #4
    5148:	ldr	r9, [r3, r2]
    514c:	rsb	sl, r9, #-16777216	; 0xff000000
    5150:	rsb	r9, r9, #0
    5154:	add	sl, sl, #16252928	; 0xf80000
    5158:	rsb	r5, r9, #508	; 0x1fc
    515c:	mov	r8, r9
    5160:	add	r5, r5, #3
    5164:	mov	r4, #0
    5168:	mvn	fp, r8
    516c:	add	r6, r8, #1
    5170:	add	r2, r6, fp
    5174:	mov	r1, r4
    5178:	mov	r0, r7
    517c:	bl	2430 <perm5@plt>
    5180:	strb	r0, [fp, #1]!
    5184:	cmp	fp, r5
    5188:	bne	5170 <perm_table_init@@Base+0x50>
    518c:	add	r4, r4, #1
    5190:	sub	r8, r8, #512	; 0x200
    5194:	cmp	r4, #32
    5198:	add	r5, fp, #512	; 0x200
    519c:	bne	5168 <perm_table_init@@Base+0x48>
    51a0:	sub	r9, r9, #16384	; 0x4000
    51a4:	add	r7, r7, #1
    51a8:	cmp	r9, sl
    51ac:	bne	5158 <perm_table_init@@Base+0x38>
    51b0:	add	sp, sp, #4
    51b4:	ldrd	r4, [sp]
    51b8:	ldrd	r6, [sp, #8]
    51bc:	ldrd	r8, [sp, #16]
    51c0:	ldrd	sl, [sp, #24]
    51c4:	add	sp, sp, #32
    51c8:	pop	{pc}		; (ldr pc, [sp], #4)
    51cc:	andeq	r3, r2, r0, asr #29
    51d0:	andeq	r0, r0, r8, lsl #3

000051d4 <fast_perm@@Base>:
    51d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    51d8:	mov	r4, r1
    51dc:	ldr	r5, [pc, #96]	; 5244 <fast_perm@@Base+0x70>
    51e0:	strd	r6, [sp, #8]
    51e4:	mov	r7, r2
    51e8:	ldr	r3, [pc, #88]	; 5248 <fast_perm@@Base+0x74>
    51ec:	str	r8, [sp, #16]
    51f0:	mov	r8, r0
    51f4:	str	lr, [sp, #20]
    51f8:	add	r5, pc, r5
    51fc:	ldr	r6, [r5, r3]
    5200:	ldr	r3, [r6]
    5204:	cmp	r3, #0
    5208:	beq	5234 <fast_perm@@Base+0x60>
    520c:	ldr	r3, [pc, #56]	; 524c <fast_perm@@Base+0x78>
    5210:	add	r4, r4, r8, lsl #5
    5214:	ldr	r8, [sp, #16]
    5218:	ldr	r1, [r5, r3]
    521c:	add	r1, r1, r4, lsl #9
    5220:	ldrd	r4, [sp]
    5224:	ldrb	r0, [r1, r7]
    5228:	ldrd	r6, [sp, #8]
    522c:	add	sp, sp, #20
    5230:	pop	{pc}		; (ldr pc, [sp], #4)
    5234:	bl	2244 <perm_table_init@plt>
    5238:	mov	r3, #1
    523c:	str	r3, [r6]
    5240:	b	520c <fast_perm@@Base+0x38>
    5244:	andeq	r3, r2, r0, lsl #28
    5248:	andeq	r0, r0, ip, lsl #3
    524c:	andeq	r0, r0, r8, lsl #3

00005250 <gen_hop_pattern@@Base>:
    5250:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5254:	strd	r6, [sp, #8]
    5258:	mov	r6, #0
    525c:	strd	sl, [sp, #24]
    5260:	mov	fp, r0
    5264:	movw	sl, #29865	; 0x74a9
    5268:	movt	sl, #53092	; 0xcf64
    526c:	ldr	r0, [pc, #740]	; 5558 <gen_hop_pattern@@Base+0x308>
    5270:	strd	r8, [sp, #16]
    5274:	str	lr, [sp, #32]
    5278:	sub	sp, sp, #68	; 0x44
    527c:	add	r0, pc, r0
    5280:	bl	22bc <puts@plt>
    5284:	mov	r0, #134217728	; 0x8000000
    5288:	bl	22c8 <malloc@plt>
    528c:	str	r0, [fp, #372]	; 0x174
    5290:	mov	r0, fp
    5294:	bl	2478 <precalc@plt>
    5298:	ldrb	r3, [fp, #28]
    529c:	mov	r1, fp
    52a0:	ldr	r0, [fp, #24]
    52a4:	orr	r0, r0, r3, lsl #24
    52a8:	bic	r0, r0, #-268435456	; 0xf0000000
    52ac:	bl	23b8 <address_precalc@plt>
    52b0:	mov	r3, r6
    52b4:	str	r6, [sp, #24]
    52b8:	str	sl, [sp, #28]
    52bc:	mov	sl, fp
    52c0:	mov	fp, r6
    52c4:	lsl	r2, fp, #2
    52c8:	mov	r7, sl
    52cc:	str	fp, [sp, #8]
    52d0:	str	r2, [sp, #16]
    52d4:	mov	r2, #0
    52d8:	str	fp, [sp, #52]	; 0x34
    52dc:	mov	fp, r3
    52e0:	str	r2, [sp, #4]
    52e4:	ldr	r2, [sp, #16]
    52e8:	mov	sl, #0
    52ec:	ldr	r3, [r7, #44]	; 0x2c
    52f0:	str	r2, [sp, #20]
    52f4:	ldr	r2, [sp, #8]
    52f8:	str	r2, [sp, #12]
    52fc:	ldr	r2, [sp, #4]
    5300:	eor	r3, r2, r3
    5304:	str	r3, [sp, #36]	; 0x24
    5308:	ldr	r2, [r7, #48]	; 0x30
    530c:	mov	r8, #0
    5310:	mov	r9, #79	; 0x4f
    5314:	str	sl, [sp, #56]	; 0x38
    5318:	ldr	r3, [sp, #12]
    531c:	ldr	r4, [sp, #20]
    5320:	eor	r2, sl, r2
    5324:	mov	sl, r8
    5328:	mov	r8, r3
    532c:	str	r2, [sp, #40]	; 0x28
    5330:	eor	r2, r2, #31
    5334:	str	r2, [sp, #44]	; 0x2c
    5338:	ldr	r2, [r7, #52]	; 0x34
    533c:	add	r3, r4, #64	; 0x40
    5340:	ldr	r6, [sp, #36]	; 0x24
    5344:	str	r3, [sp, #48]	; 0x30
    5348:	eor	r3, sl, r2
    534c:	str	r3, [sp, #32]
    5350:	ldr	r0, [r7, #36]	; 0x24
    5354:	rsbs	r1, r6, #0
    5358:	and	r5, r6, #31
    535c:	and	r1, r1, #31
    5360:	rsbpl	r5, r1, #0
    5364:	ldr	r2, [sp, #32]
    5368:	ldr	r1, [sp, #40]	; 0x28
    536c:	eor	r5, r5, r0
    5370:	mov	r0, r5
    5374:	bl	24b4 <fast_perm@plt>
    5378:	mov	r2, r0
    537c:	mov	r1, #11
    5380:	mov	r0, r7
    5384:	str	r2, [sp, #60]	; 0x3c
    5388:	bl	21f0 <btbb_piconet_get_flag@plt>
    538c:	cmp	r0, #0
    5390:	ldr	r2, [sp, #60]	; 0x3c
    5394:	beq	5528 <gen_hop_pattern@@Base+0x2d8>
    5398:	ldr	ip, [r7, #40]	; 0x28
    539c:	ldr	r3, [sp, #24]
    53a0:	ldrb	r1, [r7, #22]
    53a4:	add	r2, r2, ip
    53a8:	ldr	r0, [r7, #372]	; 0x174
    53ac:	add	r2, r2, r3
    53b0:	udiv	ip, r2, r1
    53b4:	mls	r2, r1, ip, r2
    53b8:	add	r2, r2, #14
    53bc:	ldr	r2, [r7, r2, lsl #2]
    53c0:	strb	r2, [r0, r4]
    53c4:	mov	r0, r5
    53c8:	ldr	r2, [sp, #32]
    53cc:	ldr	r1, [sp, #44]	; 0x2c
    53d0:	bl	24b4 <fast_perm@plt>
    53d4:	mov	r5, r0
    53d8:	mov	r1, #11
    53dc:	mov	r0, r7
    53e0:	bl	21f0 <btbb_piconet_get_flag@plt>
    53e4:	ldr	r3, [sp, #24]
    53e8:	cmp	r0, #0
    53ec:	add	ip, fp, #32
    53f0:	add	r1, r4, #1
    53f4:	ldr	r2, [r7, #40]	; 0x28
    53f8:	add	lr, r3, #32
    53fc:	beq	54fc <gen_hop_pattern@@Base+0x2ac>
    5400:	ldrb	r0, [r7, #22]
    5404:	add	r5, r5, r2
    5408:	add	r5, r5, lr
    540c:	ldr	ip, [r7, #372]	; 0x174
    5410:	udiv	r2, r5, r0
    5414:	mls	r5, r0, r2, r5
    5418:	add	r5, r5, #14
    541c:	ldr	r2, [r7, r5, lsl #2]
    5420:	strb	r2, [ip, r1]
    5424:	ldr	r3, [sp, #48]	; 0x30
    5428:	add	r4, r4, #2
    542c:	add	r6, r6, #1
    5430:	cmp	r4, r3
    5434:	bne	5350 <gen_hop_pattern@@Base+0x100>
    5438:	ldr	r3, [sp, #28]
    543c:	add	r8, r8, #16
    5440:	add	sl, sl, #1
    5444:	cmp	sl, #512	; 0x200
    5448:	ldrb	r2, [r7, #22]
    544c:	umull	r3, fp, r3, r8
    5450:	lsr	fp, fp, #6
    5454:	mls	fp, r9, fp, r8
    5458:	udiv	r1, fp, r2
    545c:	mls	r3, r2, r1, fp
    5460:	str	r3, [sp, #24]
    5464:	bne	5338 <gen_hop_pattern@@Base+0xe8>
    5468:	ldr	r3, [sp, #20]
    546c:	ldr	sl, [sp, #56]	; 0x38
    5470:	add	r3, r3, #32768	; 0x8000
    5474:	str	r3, [sp, #20]
    5478:	add	sl, sl, #1
    547c:	ldr	r3, [sp, #12]
    5480:	cmp	sl, #32
    5484:	add	r3, r3, #8192	; 0x2000
    5488:	str	r3, [sp, #12]
    548c:	bne	5308 <gen_hop_pattern@@Base+0xb8>
    5490:	ldr	r3, [sp, #4]
    5494:	ldr	r2, [sp, #16]
    5498:	add	r3, r3, #1
    549c:	cmp	r3, #32
    54a0:	str	r3, [sp, #4]
    54a4:	add	r2, r2, #1048576	; 0x100000
    54a8:	ldr	r3, [sp, #8]
    54ac:	str	r2, [sp, #16]
    54b0:	add	r3, r3, #262144	; 0x40000
    54b4:	str	r3, [sp, #8]
    54b8:	bne	52e4 <gen_hop_pattern@@Base+0x94>
    54bc:	mov	r3, fp
    54c0:	ldr	fp, [sp, #52]	; 0x34
    54c4:	mov	sl, r7
    54c8:	add	fp, fp, #8388608	; 0x800000
    54cc:	cmp	fp, #33554432	; 0x2000000
    54d0:	bne	52c4 <gen_hop_pattern@@Base+0x74>
    54d4:	ldr	r0, [pc, #128]	; 555c <gen_hop_pattern@@Base+0x30c>
    54d8:	add	r0, pc, r0
    54dc:	add	sp, sp, #68	; 0x44
    54e0:	ldrd	r4, [sp]
    54e4:	ldrd	r6, [sp, #8]
    54e8:	ldrd	r8, [sp, #16]
    54ec:	ldrd	sl, [sp, #24]
    54f0:	ldr	lr, [sp, #32]
    54f4:	add	sp, sp, #36	; 0x24
    54f8:	b	22bc <puts@plt>
    54fc:	ldr	r3, [sp, #28]
    5500:	add	r5, r5, r2
    5504:	add	r5, r5, ip
    5508:	ldr	r0, [r7, #372]	; 0x174
    550c:	umull	r3, r2, r3, r5
    5510:	lsr	r2, r2, #6
    5514:	mls	r2, r9, r2, r5
    5518:	add	r2, r2, #14
    551c:	ldr	r2, [r7, r2, lsl #2]
    5520:	strb	r2, [r0, r1]
    5524:	b	5424 <gen_hop_pattern@@Base+0x1d4>
    5528:	ldr	r0, [r7, #40]	; 0x28
    552c:	ldr	r3, [sp, #28]
    5530:	ldr	r1, [r7, #372]	; 0x174
    5534:	add	r2, r2, r0
    5538:	add	r0, r2, fp
    553c:	umull	r3, r2, r3, r0
    5540:	lsr	r2, r2, #6
    5544:	mls	r2, r9, r2, r0
    5548:	add	r2, r2, #14
    554c:	ldr	r2, [r7, r2, lsl #2]
    5550:	strb	r2, [r1, r4]
    5554:	b	53c4 <gen_hop_pattern@@Base+0x174>
    5558:			; <UNDEFINED> instruction: 0x0000cfb0
    555c:	andeq	ip, r0, ip, ror sp

00005560 <get_hop_pattern@@Base>:
    5560:	mov	r1, #11
    5564:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5568:	mov	r5, r0
    556c:	strd	r6, [sp, #8]
    5570:	strd	r8, [sp, #16]
    5574:	strd	sl, [sp, #24]
    5578:	str	lr, [sp, #32]
    557c:	sub	sp, sp, #20
    5580:	bl	21f0 <btbb_piconet_get_flag@plt>
    5584:	ldr	r3, [pc, #1244]	; 5a68 <get_hop_pattern@@Base+0x508>
    5588:	ldrb	r6, [r5, #22]
    558c:	ldrb	r2, [r5, #28]
    5590:	add	r3, pc, r3
    5594:	ldr	r4, [r5, #24]
    5598:	orr	r6, r6, r0, lsl #7
    559c:	ldr	r1, [r3, #4]
    55a0:	str	r6, [sp, #12]
    55a4:	orr	r4, r4, r2, lsl #24
    55a8:	cmp	r1, #0
    55ac:	str	r4, [sp, #8]
    55b0:	beq	5720 <get_hop_pattern@@Base+0x1c0>
    55b4:	bic	r2, r4, #16711680	; 0xff0000
    55b8:	movw	r3, #16653	; 0x410d
    55bc:	movt	r3, #274	; 0x112
    55c0:	bic	r2, r2, #65280	; 0xff00
    55c4:	ldr	r1, [r1, #12]
    55c8:	add	r3, r2, r3
    55cc:	and	r2, r4, #16711680	; 0xff0000
    55d0:	add	r3, r3, r2
    55d4:	and	r2, r4, #65280	; 0xff00
    55d8:	add	r3, r3, r2
    55dc:	movw	ip, #63341	; 0xf76d
    55e0:	movt	ip, #7
    55e4:	movw	r2, #47814	; 0xbac6
    55e8:	movt	r2, #40777	; 0x9f49
    55ec:	eor	ip, ip, r3
    55f0:	ldr	r0, [r1, #4]
    55f4:	sub	r2, r2, ip
    55f8:	movw	r3, #48883	; 0xbef3
    55fc:	movt	r3, #65261	; 0xfeed
    5600:	eor	r2, r2, ip, lsl #8
    5604:	sub	r3, r3, ip
    5608:	sub	r3, r3, r2
    560c:	sub	lr, ip, r2
    5610:	ldr	ip, [r1]
    5614:	eor	r3, r3, r2, lsr #13
    5618:	sub	r0, r0, #1
    561c:	sub	lr, lr, r3
    5620:	sub	r2, r2, r3
    5624:	eor	lr, lr, r3, lsr #12
    5628:	sub	r2, r2, lr
    562c:	sub	r3, r3, lr
    5630:	eor	r2, r2, lr, lsl #16
    5634:	sub	r3, r3, r2
    5638:	sub	lr, lr, r2
    563c:	eor	r3, r3, r2, lsr #5
    5640:	sub	lr, lr, r3
    5644:	sub	r2, r2, r3
    5648:	eor	lr, lr, r3, lsr #3
    564c:	sub	r2, r2, lr
    5650:	sub	r3, r3, lr
    5654:	eor	r2, r2, lr, lsl #10
    5658:	sub	r3, r3, r2
    565c:	eor	r3, r3, r2, lsr #15
    5660:	and	r3, r3, r0
    5664:	add	r3, r3, r3, lsl #1
    5668:	ldr	r3, [ip, r3, lsl #2]
    566c:	cmp	r3, #0
    5670:	beq	5720 <get_hop_pattern@@Base+0x1c0>
    5674:	ldr	r2, [r1, #20]
    5678:	rsb	r2, r2, #0
    567c:	b	568c <get_hop_pattern@@Base+0x12c>
    5680:	ldr	r3, [r3, #28]
    5684:	cmp	r3, #0
    5688:	beq	5720 <get_hop_pattern@@Base+0x1c0>
    568c:	adds	r3, r3, r2
    5690:	beq	5720 <get_hop_pattern@@Base+0x1c0>
    5694:	ldr	r1, [r3, #36]	; 0x24
    5698:	cmp	r1, #4
    569c:	bne	5680 <get_hop_pattern@@Base+0x120>
    56a0:	ldr	r1, [r3, #32]
    56a4:	ldrb	r0, [sp, #8]
    56a8:	ldrb	ip, [r1]
    56ac:	cmp	ip, r0
    56b0:	bne	5680 <get_hop_pattern@@Base+0x120>
    56b4:	ldrb	ip, [r1, #1]
    56b8:	add	r1, r1, #1
    56bc:	ldrb	r0, [sp, #9]
    56c0:	cmp	ip, r0
    56c4:	bne	5680 <get_hop_pattern@@Base+0x120>
    56c8:	ldrb	ip, [r1, #1]!
    56cc:	ldrb	r0, [sp, #10]
    56d0:	cmp	ip, r0
    56d4:	bne	5680 <get_hop_pattern@@Base+0x120>
    56d8:	ldrb	r0, [r1, #1]
    56dc:	ldrb	r1, [sp, #11]
    56e0:	cmp	r0, r1
    56e4:	bne	5680 <get_hop_pattern@@Base+0x120>
    56e8:	ldr	r0, [pc, #892]	; 5a6c <get_hop_pattern@@Base+0x50c>
    56ec:	str	r3, [sp, #4]
    56f0:	add	r0, pc, r0
    56f4:	bl	22bc <puts@plt>
    56f8:	ldr	r3, [sp, #4]
    56fc:	ldr	r3, [r3, #8]
    5700:	str	r3, [r5, #372]	; 0x174
    5704:	add	sp, sp, #20
    5708:	ldrd	r4, [sp]
    570c:	ldrd	r6, [sp, #8]
    5710:	ldrd	r8, [sp, #16]
    5714:	ldrd	sl, [sp, #24]
    5718:	add	sp, sp, #32
    571c:	pop	{pc}		; (ldr pc, [sp], #4)
    5720:	mov	r0, r5
    5724:	bl	20d0 <gen_hop_pattern@plt>
    5728:	mov	r0, #48	; 0x30
    572c:	bl	22c8 <malloc@plt>
    5730:	ldr	r3, [pc, #824]	; 5a70 <get_hop_pattern@@Base+0x510>
    5734:	mov	r7, r0
    5738:	mov	ip, #0
    573c:	mov	r2, #4
    5740:	ldr	r0, [r5, #372]	; 0x174
    5744:	stm	r7, {r4, r6}
    5748:	add	r3, pc, r3
    574c:	ldr	r1, [r3, #4]
    5750:	str	r0, [r7, #8]
    5754:	str	ip, [r7, #20]
    5758:	str	r7, [r7, #32]
    575c:	str	r2, [r7, #36]	; 0x24
    5760:	cmp	r1, ip
    5764:	beq	59d0 <get_hop_pattern@@Base+0x470>
    5768:	ldr	r5, [r1, #12]
    576c:	add	r4, r7, #12
    5770:	ldr	r3, [r5, #16]
    5774:	ldr	r2, [r5, #20]
    5778:	str	r7, [r3, #8]
    577c:	sub	r3, r3, r2
    5780:	str	r3, [r7, #16]
    5784:	str	r4, [r5, #16]
    5788:	ldr	r2, [r5, #12]
    578c:	movw	r6, #16653	; 0x410d
    5790:	movt	r6, #274	; 0x112
    5794:	movw	lr, #63341	; 0xf76d
    5798:	movt	lr, #7
    579c:	movw	ip, #47814	; 0xbac6
    57a0:	movt	ip, #40777	; 0x9f49
    57a4:	movw	r3, #48883	; 0xbef3
    57a8:	movt	r3, #65261	; 0xfeed
    57ac:	mov	r0, #0
    57b0:	add	r2, r2, #1
    57b4:	str	r2, [r5, #12]
    57b8:	ldrb	r2, [r7]
    57bc:	str	r5, [r7, #12]
    57c0:	ldrb	r8, [r7, #3]
    57c4:	ldr	r1, [r1, #12]
    57c8:	add	r6, r2, r6
    57cc:	ldrb	r2, [r7, #2]
    57d0:	add	r6, r6, r8, lsl #24
    57d4:	ldrb	r8, [r7, #1]
    57d8:	add	r6, r6, r2, lsl #16
    57dc:	ldm	r1, {r1, r2}
    57e0:	add	r6, r6, r8, lsl #8
    57e4:	eor	lr, lr, r6
    57e8:	sub	ip, ip, lr
    57ec:	sub	r3, r3, lr
    57f0:	eor	ip, ip, lr, lsl #8
    57f4:	sub	r2, r2, #1
    57f8:	sub	r3, r3, ip
    57fc:	sub	lr, lr, ip
    5800:	eor	r3, r3, ip, lsr #13
    5804:	sub	lr, lr, r3
    5808:	sub	ip, ip, r3
    580c:	eor	lr, lr, r3, lsr #12
    5810:	sub	ip, ip, lr
    5814:	sub	r3, r3, lr
    5818:	eor	ip, ip, lr, lsl #16
    581c:	sub	r3, r3, ip
    5820:	sub	lr, lr, ip
    5824:	eor	r3, r3, ip, lsr #5
    5828:	sub	lr, lr, r3
    582c:	sub	ip, ip, r3
    5830:	eor	lr, lr, r3, lsr #3
    5834:	sub	ip, ip, lr
    5838:	sub	r3, r3, lr
    583c:	eor	ip, ip, lr, lsl #10
    5840:	sub	r3, r3, ip
    5844:	eor	r3, r3, ip, lsr #15
    5848:	and	r2, r2, r3
    584c:	add	r2, r2, r2, lsl #1
    5850:	str	r3, [r7, #40]	; 0x28
    5854:	lsl	r3, r2, #2
    5858:	add	r2, r1, r3
    585c:	ldr	lr, [r1, r3]
    5860:	ldr	ip, [r2, #4]
    5864:	cmp	lr, r0
    5868:	add	ip, ip, #1
    586c:	str	ip, [r2, #4]
    5870:	ldr	r2, [r2, #8]
    5874:	str	r0, [r7, #24]
    5878:	str	lr, [r7, #28]
    587c:	strne	r4, [lr, #12]
    5880:	str	r4, [r1, r3]
    5884:	add	r3, r2, #1
    5888:	add	r3, r3, r3, lsl #2
    588c:	cmp	ip, r3, lsl #1
    5890:	bcc	5704 <get_hop_pattern@@Base+0x1a4>
    5894:	ldr	r3, [r5, #36]	; 0x24
    5898:	cmp	r3, #1
    589c:	beq	5704 <get_hop_pattern@@Base+0x1a4>
    58a0:	ldr	r0, [r5, #4]
    58a4:	mov	r1, #1
    58a8:	add	r0, r0, r0, lsl r1
    58ac:	lsl	r0, r0, #3
    58b0:	bl	20ac <calloc@plt>
    58b4:	subs	r4, r0, #0
    58b8:	beq	5a60 <get_hop_pattern@@Base+0x500>
    58bc:	ldr	fp, [r5, #4]
    58c0:	mov	r8, #0
    58c4:	ldr	r2, [r5, #8]
    58c8:	str	r8, [r5, #28]
    58cc:	ldr	r1, [r5, #12]
    58d0:	lsl	r3, fp, #1
    58d4:	sub	r9, r3, #1
    58d8:	add	r2, r2, #1
    58dc:	tst	r1, r9
    58e0:	movne	r6, #1
    58e4:	moveq	r6, r8
    58e8:	add	r6, r6, r1, lsr r2
    58ec:	cmp	fp, r8
    58f0:	str	r6, [r5, #24]
    58f4:	beq	5a54 <get_hop_pattern@@Base+0x4f4>
    58f8:	ldr	r2, [r5]
    58fc:	add	r3, r3, fp
    5900:	add	fp, r2, r3, lsl #2
    5904:	mov	sl, r2
    5908:	str	r2, [sp, #4]
    590c:	ldr	r2, [sl]
    5910:	cmp	r2, #0
    5914:	beq	5974 <get_hop_pattern@@Base+0x414>
    5918:	ldr	ip, [r2, #16]
    591c:	ldr	r3, [r2, #28]
    5920:	and	r3, r3, r9
    5924:	add	r3, r3, r3, lsl #1
    5928:	add	r0, r4, r3, lsl #2
    592c:	ldr	r1, [r0, #4]
    5930:	add	r1, r1, #1
    5934:	cmp	r6, r1
    5938:	str	r1, [r0, #4]
    593c:	bcs	5954 <get_hop_pattern@@Base+0x3f4>
    5940:	udiv	r1, r1, r6
    5944:	ldr	lr, [r5, #28]
    5948:	add	lr, lr, #1
    594c:	str	lr, [r5, #28]
    5950:	str	r1, [r0, #8]
    5954:	ldr	r1, [r4, r3, lsl #2]
    5958:	str	r8, [r2, #12]
    595c:	cmp	r1, #0
    5960:	str	r1, [r2, #16]
    5964:	strne	r2, [r1, #12]
    5968:	str	r2, [r4, r3, lsl #2]
    596c:	subs	r2, ip, #0
    5970:	bne	5918 <get_hop_pattern@@Base+0x3b8>
    5974:	add	sl, sl, #12
    5978:	cmp	fp, sl
    597c:	bne	590c <get_hop_pattern@@Base+0x3ac>
    5980:	ldr	r0, [sp, #4]
    5984:	bl	2148 <free@plt>
    5988:	ldr	r3, [r7, #12]
    598c:	ldmib	r3, {r1, r2, ip}
    5990:	str	r4, [r3]
    5994:	ldr	r0, [r3, #28]
    5998:	lsl	r1, r1, #1
    599c:	add	r2, r2, #1
    59a0:	stmib	r3, {r1, r2}
    59a4:	cmp	r0, ip, lsr #1
    59a8:	movls	r2, #0
    59ac:	strls	r2, [r3, #32]
    59b0:	bls	5704 <get_hop_pattern@@Base+0x1a4>
    59b4:	ldr	r2, [r3, #32]
    59b8:	add	r2, r2, #1
    59bc:	cmp	r2, #1
    59c0:	str	r2, [r3, #32]
    59c4:	movhi	r2, #1
    59c8:	strhi	r2, [r3, #36]	; 0x24
    59cc:	b	5704 <get_hop_pattern@@Base+0x1a4>
    59d0:	mov	r0, #44	; 0x2c
    59d4:	str	r7, [r3, #4]
    59d8:	str	r1, [r7, #16]
    59dc:	bl	22c8 <malloc@plt>
    59e0:	cmp	r0, #0
    59e4:	mov	r5, r0
    59e8:	str	r0, [r7, #12]
    59ec:	beq	5a60 <get_hop_pattern@@Base+0x500>
    59f0:	mov	r0, #0
    59f4:	mov	r1, #0
    59f8:	mov	lr, #32
    59fc:	mov	ip, #5
    5a00:	mov	r2, #12
    5a04:	add	r4, r7, #12
    5a08:	str	lr, [r5, #4]
    5a0c:	str	ip, [r5, #8]
    5a10:	strd	r0, [r5, #12]
    5a14:	str	r4, [r5, #16]
    5a18:	strd	r0, [r5, #20]
    5a1c:	str	r2, [r5, #20]
    5a20:	strd	r0, [r5, #28]
    5a24:	strd	r0, [r5, #36]	; 0x24
    5a28:	mov	r1, #1
    5a2c:	mov	r0, #384	; 0x180
    5a30:	bl	20ac <calloc@plt>
    5a34:	cmp	r0, #0
    5a38:	str	r0, [r5]
    5a3c:	beq	5a60 <get_hop_pattern@@Base+0x500>
    5a40:	movw	r3, #8161	; 0x1fe1
    5a44:	movt	r3, #40977	; 0xa011
    5a48:	mov	r1, r7
    5a4c:	str	r3, [r5, #40]	; 0x28
    5a50:	b	5788 <get_hop_pattern@@Base+0x228>
    5a54:	ldr	r3, [r5]
    5a58:	str	r3, [sp, #4]
    5a5c:	b	5980 <get_hop_pattern@@Base+0x420>
    5a60:	mvn	r0, #0
    5a64:	bl	231c <exit@plt>
    5a68:	andeq	r3, r2, r4, lsl ip
    5a6c:	andeq	ip, r0, r4, lsl #23
    5a70:	andeq	r3, r2, ip, asr sl

00005a74 <btbb_piconet_set_afh_map@@Base>:
    5a74:	mov	r3, #0
    5a78:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5a7c:	mov	r5, r0
    5a80:	add	r4, r0, #12
    5a84:	strd	r6, [sp, #8]
    5a88:	sub	r6, r1, #1
    5a8c:	add	r7, r0, #22
    5a90:	str	r8, [sp, #16]
    5a94:	str	lr, [sp, #20]
    5a98:	strb	r3, [r0, #22]
    5a9c:	ldrb	r3, [r6, #1]!
    5aa0:	mov	r0, r3
    5aa4:	strb	r3, [r4], #1
    5aa8:	bl	20dc <count_bits@plt>
    5aac:	ldrb	r3, [r5, #22]
    5ab0:	cmp	r4, r7
    5ab4:	add	r0, r3, r0
    5ab8:	strb	r0, [r5, #22]
    5abc:	bne	5a9c <btbb_piconet_set_afh_map@@Base+0x28>
    5ac0:	mov	r1, #2
    5ac4:	mov	r0, r5
    5ac8:	bl	21f0 <btbb_piconet_get_flag@plt>
    5acc:	cmp	r0, #0
    5ad0:	bne	5ae8 <btbb_piconet_set_afh_map@@Base+0x74>
    5ad4:	ldrd	r4, [sp]
    5ad8:	ldrd	r6, [sp, #8]
    5adc:	ldr	r8, [sp, #16]
    5ae0:	add	sp, sp, #20
    5ae4:	pop	{pc}		; (ldr pc, [sp], #4)
    5ae8:	mov	r0, r5
    5aec:	ldrd	r4, [sp]
    5af0:	ldrd	r6, [sp, #8]
    5af4:	ldr	r8, [sp, #16]
    5af8:	ldr	lr, [sp, #20]
    5afc:	add	sp, sp, #24
    5b00:	b	22b0 <get_hop_pattern@plt>

00005b04 <single_hop@@Base>:
    5b04:	ldr	r3, [r1, #44]	; 0x2c
    5b08:	ubfx	ip, r0, #1, #1
    5b0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5b10:	mov	r4, r1
    5b14:	movw	r5, #65520	; 0xfff0
    5b18:	movt	r5, #511	; 0x1ff
    5b1c:	ldr	r1, [r1, #48]	; 0x30
    5b20:	and	r5, r5, r0, asr #3
    5b24:	ldr	r2, [r4, #52]	; 0x34
    5b28:	eor	r3, r3, r0, asr #21
    5b2c:	strd	r6, [sp, #8]
    5b30:	str	lr, [sp, #20]
    5b34:	lsl	r6, ip, #5
    5b38:	ldr	lr, [r4, #36]	; 0x24
    5b3c:	add	r3, r3, r0, lsr #2
    5b40:	eor	r1, r1, r0, asr #16
    5b44:	sub	ip, r6, ip
    5b48:	str	r8, [sp, #16]
    5b4c:	eor	r2, r2, r0, asr #7
    5b50:	and	r3, r3, #31
    5b54:	and	r1, r1, #31
    5b58:	eor	r1, r1, ip
    5b5c:	ubfx	r2, r2, #0, #9
    5b60:	eor	r0, r3, lr
    5b64:	bl	24b4 <fast_perm@plt>
    5b68:	mov	r7, r0
    5b6c:	mov	r1, #11
    5b70:	mov	r0, r4
    5b74:	bl	21f0 <btbb_piconet_get_flag@plt>
    5b78:	cmp	r0, #0
    5b7c:	beq	5bc4 <single_hop@@Base+0xc0>
    5b80:	ldrb	r1, [r4, #22]
    5b84:	ldr	r3, [r4, #40]	; 0x28
    5b88:	udiv	r2, r5, r1
    5b8c:	add	r7, r7, r3
    5b90:	mls	r5, r1, r2, r5
    5b94:	add	r6, r5, r6
    5b98:	add	r6, r7, r6
    5b9c:	udiv	r7, r6, r1
    5ba0:	mls	r6, r1, r7, r6
    5ba4:	add	r6, r6, #14
    5ba8:	ldr	r0, [r4, r6, lsl #2]
    5bac:	uxtb	r0, r0
    5bb0:	ldrd	r4, [sp]
    5bb4:	ldrd	r6, [sp, #8]
    5bb8:	ldr	r8, [sp, #16]
    5bbc:	add	sp, sp, #20
    5bc0:	pop	{pc}		; (ldr pc, [sp], #4)
    5bc4:	movw	r3, #29865	; 0x74a9
    5bc8:	movt	r3, #53092	; 0xcf64
    5bcc:	ldr	r0, [r4, #40]	; 0x28
    5bd0:	mov	r1, #79	; 0x4f
    5bd4:	umull	ip, r2, r3, r5
    5bd8:	lsr	r2, r2, #6
    5bdc:	add	r7, r7, r0
    5be0:	mls	r5, r1, r2, r5
    5be4:	add	r6, r5, r6
    5be8:	add	r7, r7, r6
    5bec:	umull	r2, r3, r3, r7
    5bf0:	lsr	r3, r3, #6
    5bf4:	mls	r3, r1, r3, r7
    5bf8:	add	r3, r3, #14
    5bfc:	ldr	r0, [r4, r3, lsl #2]
    5c00:	b	5bac <single_hop@@Base+0xa8>

00005c04 <hop@@Base>:
    5c04:	ldr	r3, [r1, #372]	; 0x174
    5c08:	ldrb	r0, [r3, r0]
    5c0c:	bx	lr

00005c10 <btbb_init_hop_reversal@@Base>:
    5c10:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5c14:	mov	r5, r0
    5c18:	mov	r0, r1
    5c1c:	mov	r4, r1
    5c20:	strd	r6, [sp, #8]
    5c24:	mov	r7, #25
    5c28:	strd	r8, [sp, #16]
    5c2c:	str	sl, [sp, #24]
    5c30:	str	lr, [sp, #28]
    5c34:	bl	22b0 <get_hop_pattern@plt>
    5c38:	cmp	r5, #0
    5c3c:	movw	r3, #15760	; 0x3d90
    5c40:	movt	r3, #3
    5c44:	movw	r0, #15728	; 0x3d70
    5c48:	movt	r0, #10
    5c4c:	moveq	r0, r3
    5c50:	bl	22c8 <malloc@plt>
    5c54:	add	r2, r4, #4096	; 0x1000
    5c58:	ldr	r8, [r4, #8]
    5c5c:	movw	ip, #34079	; 0x851f
    5c60:	movt	ip, #20971	; 0x51eb
    5c64:	mov	r1, #0
    5c68:	ldr	r3, [r2, #1552]	; 0x610
    5c6c:	ldr	r9, [r2, #1556]	; 0x614
    5c70:	str	r0, [r4, #32]
    5c74:	ldrb	r6, [r2, #552]	; 0x228
    5c78:	ldr	lr, [r4, #372]	; 0x174
    5c7c:	add	r3, r3, r9
    5c80:	and	r3, r3, #63	; 0x3f
    5c84:	cmp	r8, #0
    5c88:	ldrb	r2, [lr, r3]
    5c8c:	beq	5ca8 <btbb_init_hop_reversal@@Base+0x98>
    5c90:	add	r9, r2, #24
    5c94:	umull	sl, r2, ip, r9
    5c98:	lsr	r2, r2, #3
    5c9c:	mls	r2, r7, r2, r9
    5ca0:	add	r2, r2, #26
    5ca4:	uxtb	r2, r2
    5ca8:	cmp	r6, r2
    5cac:	streq	r3, [r0, r1, lsl #2]
    5cb0:	add	r3, r3, #64	; 0x40
    5cb4:	addeq	r1, r1, #1
    5cb8:	cmn	r3, #-134217727	; 0xf8000001
    5cbc:	ble	5c84 <btbb_init_hop_reversal@@Base+0x74>
    5cc0:	mov	r6, #0
    5cc4:	mov	r0, r4
    5cc8:	str	r1, [r4, #376]	; 0x178
    5ccc:	mov	r2, #1
    5cd0:	mov	r1, #9
    5cd4:	str	r6, [r4, #388]	; 0x184
    5cd8:	bl	2214 <btbb_piconet_set_flag@plt>
    5cdc:	mov	r2, r6
    5ce0:	mov	r0, r4
    5ce4:	mov	r1, #5
    5ce8:	bl	2214 <btbb_piconet_set_flag@plt>
    5cec:	mov	r2, r5
    5cf0:	mov	r0, r4
    5cf4:	mov	r1, #13
    5cf8:	bl	2214 <btbb_piconet_set_flag@plt>
    5cfc:	ldr	r0, [pc, #36]	; 5d28 <btbb_init_hop_reversal@@Base+0x118>
    5d00:	ldr	r1, [r4, #376]	; 0x178
    5d04:	add	r0, pc, r0
    5d08:	bl	2100 <printf@plt>
    5d0c:	ldrd	r6, [sp, #8]
    5d10:	ldrd	r8, [sp, #16]
    5d14:	ldr	sl, [sp, #24]
    5d18:	ldr	r0, [r4, #376]	; 0x178
    5d1c:	ldrd	r4, [sp]
    5d20:	add	sp, sp, #28
    5d24:	pop	{pc}		; (ldr pc, [sp], #4)
    5d28:	muleq	r0, r4, r5

00005d2c <btbb_winnow@@Base>:
    5d2c:	ldr	r1, [r0, #376]	; 0x178
    5d30:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5d34:	ldr	r2, [r0, #380]	; 0x17c
    5d38:	ldr	r3, [r0, #388]	; 0x184
    5d3c:	mov	r5, r1
    5d40:	strd	r6, [sp, #8]
    5d44:	strd	r8, [sp, #16]
    5d48:	strd	sl, [sp, #24]
    5d4c:	str	lr, [sp, #32]
    5d50:	sub	sp, sp, #12
    5d54:	cmp	r2, r3
    5d58:	ble	5e9c <btbb_winnow@@Base+0x170>
    5d5c:	ldr	r2, [pc, #432]	; 5f14 <btbb_winnow@@Base+0x1e8>
    5d60:	movw	r7, #34079	; 0x851f
    5d64:	movt	r7, #20971	; 0x51eb
    5d68:	mov	r4, r0
    5d6c:	add	r2, pc, r2
    5d70:	str	r2, [sp, #4]
    5d74:	add	r0, r3, #162	; 0xa2
    5d78:	movw	r2, #4648	; 0x1228
    5d7c:	add	r3, r4, r3
    5d80:	cmp	r1, #0
    5d84:	ldr	r6, [r4, r0, lsl #2]
    5d88:	ldrb	r8, [r3, r2]
    5d8c:	ble	5e88 <btbb_winnow@@Base+0x15c>
    5d90:	mov	r5, #0
    5d94:	ldr	ip, [r4, #32]
    5d98:	mov	r2, r5
    5d9c:	ldr	r9, [r4, #372]	; 0x174
    5da0:	sub	lr, ip, #4
    5da4:	ldr	r0, [lr, #4]!
    5da8:	add	r2, r2, #1
    5dac:	ldr	fp, [r4, #8]
    5db0:	add	r3, r0, r6
    5db4:	bic	r3, r3, #-134217728	; 0xf8000000
    5db8:	cmp	fp, #0
    5dbc:	ldrb	r3, [r9, r3]
    5dc0:	beq	5de0 <btbb_winnow@@Base+0xb4>
    5dc4:	add	fp, r3, #24
    5dc8:	umull	sl, r3, r7, fp
    5dcc:	mov	sl, #25
    5dd0:	lsr	r3, r3, #3
    5dd4:	mls	r3, sl, r3, fp
    5dd8:	add	r3, r3, #26
    5ddc:	uxtb	r3, r3
    5de0:	cmp	r8, r3
    5de4:	bne	5df4 <btbb_winnow@@Base+0xc8>
    5de8:	str	r0, [ip, r5, lsl #2]
    5dec:	add	r5, r5, #1
    5df0:	ldr	r1, [r4, #376]	; 0x178
    5df4:	cmp	r2, r1
    5df8:	blt	5da4 <btbb_winnow@@Base+0x78>
    5dfc:	cmp	r5, #1
    5e00:	str	r5, [r4, #376]	; 0x178
    5e04:	beq	5ebc <btbb_winnow@@Base+0x190>
    5e08:	cmp	r5, #0
    5e0c:	beq	5e90 <btbb_winnow@@Base+0x164>
    5e10:	cmp	r5, #1
    5e14:	beq	5e9c <btbb_winnow@@Base+0x170>
    5e18:	ldr	r2, [r4, #380]	; 0x17c
    5e1c:	ldr	r3, [r4, #388]	; 0x184
    5e20:	cmp	r2, #0
    5e24:	bgt	5e40 <btbb_winnow@@Base+0x114>
    5e28:	add	r3, r3, #1
    5e2c:	cmp	r3, r2
    5e30:	str	r3, [r4, #388]	; 0x184
    5e34:	bge	5e9c <btbb_winnow@@Base+0x170>
    5e38:	ldr	r1, [r4, #376]	; 0x178
    5e3c:	b	5d74 <btbb_winnow@@Base+0x48>
    5e40:	sub	r2, r3, #1
    5e44:	movw	ip, #4648	; 0x1228
    5e48:	add	r3, r3, #161	; 0xa1
    5e4c:	add	r2, r4, r2
    5e50:	mov	r1, #12
    5e54:	mov	r0, r4
    5e58:	ldrb	sl, [r2, ip]
    5e5c:	ldr	r9, [r4, r3, lsl #2]
    5e60:	bl	21f0 <btbb_piconet_get_flag@plt>
    5e64:	cmp	r0, #0
    5e68:	bne	5e7c <btbb_winnow@@Base+0x150>
    5e6c:	add	r9, r9, #1
    5e70:	cmp	r9, r6
    5e74:	cmpeq	r8, sl
    5e78:	beq	5ef8 <btbb_winnow@@Base+0x1cc>
    5e7c:	ldr	r2, [r4, #380]	; 0x17c
    5e80:	ldr	r3, [r4, #388]	; 0x184
    5e84:	b	5e28 <btbb_winnow@@Base+0xfc>
    5e88:	mov	r3, #0
    5e8c:	str	r3, [r4, #376]	; 0x178
    5e90:	mov	r0, r4
    5e94:	mov	r5, #0
    5e98:	bl	4c94 <btbb_piconet_get_flag@@Base+0x18>
    5e9c:	mov	r0, r5
    5ea0:	add	sp, sp, #12
    5ea4:	ldrd	r4, [sp]
    5ea8:	ldrd	r6, [sp, #8]
    5eac:	ldrd	r8, [sp, #16]
    5eb0:	ldrd	sl, [sp, #24]
    5eb4:	add	sp, sp, #32
    5eb8:	pop	{pc}		; (ldr pc, [sp], #4)
    5ebc:	add	r2, r4, #4096	; 0x1000
    5ec0:	ldr	r1, [ip]
    5ec4:	ldr	r3, [r2, #1556]	; 0x614
    5ec8:	ldr	r0, [pc, #72]	; 5f18 <btbb_winnow@@Base+0x1ec>
    5ecc:	lsl	r3, r3, #1
    5ed0:	rsb	r3, r3, r1, lsl #1
    5ed4:	add	r0, pc, r0
    5ed8:	str	r3, [r2, #1552]	; 0x610
    5edc:	ldr	r1, [ip]
    5ee0:	bl	2100 <printf@plt>
    5ee4:	mov	r2, r5
    5ee8:	mov	r0, r4
    5eec:	mov	r1, #5
    5ef0:	bl	2214 <btbb_piconet_set_flag@plt>
    5ef4:	b	5e9c <btbb_winnow@@Base+0x170>
    5ef8:	mov	r0, r4
    5efc:	mov	r2, #1
    5f00:	mov	r1, #12
    5f04:	bl	2214 <btbb_piconet_set_flag@plt>
    5f08:	ldr	r0, [sp, #4]
    5f0c:	bl	22bc <puts@plt>
    5f10:	b	5e7c <btbb_winnow@@Base+0x150>
    5f14:	andeq	ip, r0, r8, ror #10
    5f18:	andeq	ip, r0, r4, ror #7

00005f1c <btbb_uap_from_header@@Base>:
    5f1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5f20:	mov	r4, r1
    5f24:	mov	r1, #10
    5f28:	strd	r6, [sp, #8]
    5f2c:	mov	r7, r0
    5f30:	mov	r0, r4
    5f34:	strd	r8, [sp, #16]
    5f38:	strd	sl, [sp, #24]
    5f3c:	str	lr, [sp, #32]
    5f40:	sub	sp, sp, #12
    5f44:	ldr	sl, [r7, #2816]	; 0xb00
    5f48:	bl	21f0 <btbb_piconet_get_flag@plt>
    5f4c:	cmp	r0, #0
    5f50:	mov	r0, r4
    5f54:	addeq	r3, r4, #4096	; 0x1000
    5f58:	streq	sl, [r3, #1556]	; 0x614
    5f5c:	ldrb	r1, [r7, #8]
    5f60:	bl	2238 <btbb_piconet_set_channel_seen@plt>
    5f64:	ldr	r3, [r4, #380]	; 0x17c
    5f68:	cmp	r3, #1000	; 0x3e8
    5f6c:	bge	60a4 <btbb_uap_from_header@@Base+0x188>
    5f70:	add	fp, r4, #4096	; 0x1000
    5f74:	add	ip, r3, #162	; 0xa2
    5f78:	ldr	r2, [fp, #1556]	; 0x614
    5f7c:	add	r0, r4, r3
    5f80:	movw	r1, #4648	; 0x1228
    5f84:	add	r3, r3, #1
    5f88:	mov	r5, #0
    5f8c:	add	r6, r4, #388	; 0x184
    5f90:	str	r5, [sp]
    5f94:	str	r5, [sp, #4]
    5f98:	sub	r2, sl, r2
    5f9c:	str	r2, [r4, ip, lsl #2]
    5fa0:	ldrb	r2, [r7, #8]
    5fa4:	strb	r2, [r0, r1]
    5fa8:	ldr	r2, [r4, #384]	; 0x180
    5fac:	str	r3, [r4, #380]	; 0x17c
    5fb0:	add	r3, r2, #1
    5fb4:	str	r3, [r4, #384]	; 0x180
    5fb8:	b	601c <btbb_uap_from_header@@Base+0x100>
    5fbc:	ldr	r9, [fp, #1556]	; 0x614
    5fc0:	mov	r1, r7
    5fc4:	sub	r9, sl, r9
    5fc8:	add	r9, r9, r5
    5fcc:	and	r9, r9, #63	; 0x3f
    5fd0:	mov	r0, r9
    5fd4:	bl	24c0 <try_clock@plt>
    5fd8:	mov	r8, r0
    5fdc:	mov	r1, #10
    5fe0:	mov	r0, r4
    5fe4:	bl	21f0 <btbb_piconet_get_flag@plt>
    5fe8:	cmp	r0, #0
    5fec:	beq	6040 <btbb_uap_from_header@@Base+0x124>
    5ff0:	ldr	r3, [r6]
    5ff4:	cmp	r8, r3
    5ff8:	beq	6040 <btbb_uap_from_header@@Base+0x124>
    5ffc:	mov	r1, #2
    6000:	mov	r0, r4
    6004:	bl	21f0 <btbb_piconet_get_flag@plt>
    6008:	mvn	r3, #0
    600c:	str	r3, [r6]
    6010:	add	r5, r5, #1
    6014:	cmp	r5, #64	; 0x40
    6018:	beq	60e0 <btbb_uap_from_header@@Base+0x1c4>
    601c:	ldr	r3, [r6, #4]!
    6020:	cmp	r3, #0
    6024:	bge	5fbc <btbb_uap_from_header@@Base+0xa0>
    6028:	mov	r1, #10
    602c:	mov	r0, r4
    6030:	bl	21f0 <btbb_piconet_get_flag@plt>
    6034:	cmp	r0, #0
    6038:	beq	5fbc <btbb_uap_from_header@@Base+0xa0>
    603c:	b	6010 <btbb_uap_from_header@@Base+0xf4>
    6040:	mov	r0, r9
    6044:	mov	r1, r7
    6048:	bl	2280 <crc_check@plt>
    604c:	mov	r9, r0
    6050:	mov	r1, #2
    6054:	mov	r0, r4
    6058:	bl	21f0 <btbb_piconet_get_flag@plt>
    605c:	cmp	r0, #0
    6060:	beq	6070 <btbb_uap_from_header@@Base+0x154>
    6064:	ldrb	r3, [r4, #28]
    6068:	cmp	r3, r8
    606c:	bne	6008 <btbb_uap_from_header@@Base+0xec>
    6070:	add	r9, r9, #1
    6074:	cmp	r9, #3
    6078:	addls	pc, pc, r9, lsl #2
    607c:	b	61b0 <btbb_uap_from_header@@Base+0x294>
    6080:	b	6008 <btbb_uap_from_header@@Base+0xec>
    6084:	b	6008 <btbb_uap_from_header@@Base+0xec>
    6088:	b	6090 <btbb_uap_from_header@@Base+0x174>
    608c:	b	6090 <btbb_uap_from_header@@Base+0x174>
    6090:	ldr	r3, [sp]
    6094:	str	r8, [r6]
    6098:	add	r3, r3, #1
    609c:	stm	sp, {r3, r5}
    60a0:	b	6010 <btbb_uap_from_header@@Base+0xf4>
    60a4:	ldr	r0, [pc, #364]	; 6218 <btbb_uap_from_header@@Base+0x2fc>
    60a8:	mov	r3, #0
    60ac:	str	r3, [sp]
    60b0:	add	r0, pc, r0
    60b4:	bl	22bc <puts@plt>
    60b8:	mov	r0, r4
    60bc:	bl	4c94 <btbb_piconet_get_flag@@Base+0x18>
    60c0:	ldr	r0, [sp]
    60c4:	add	sp, sp, #12
    60c8:	ldrd	r4, [sp]
    60cc:	ldrd	r6, [sp, #8]
    60d0:	ldrd	r8, [sp, #16]
    60d4:	ldrd	sl, [sp, #24]
    60d8:	add	sp, sp, #32
    60dc:	pop	{pc}		; (ldr pc, [sp], #4)
    60e0:	mov	r2, #1
    60e4:	mov	r1, #10
    60e8:	mov	r0, r4
    60ec:	bl	2214 <btbb_piconet_set_flag@plt>
    60f0:	ldr	r3, [sp]
    60f4:	cmp	r3, #1
    60f8:	beq	611c <btbb_uap_from_header@@Base+0x200>
    60fc:	ldr	r3, [sp]
    6100:	cmp	r3, #0
    6104:	movne	r3, #0
    6108:	strne	r3, [sp]
    610c:	bne	60c0 <btbb_uap_from_header@@Base+0x1a4>
    6110:	mov	r0, r4
    6114:	bl	4c94 <btbb_piconet_get_flag@@Base+0x18>
    6118:	b	60c0 <btbb_uap_from_header@@Base+0x1a4>
    611c:	ldr	r5, [sp, #4]
    6120:	mov	r1, #2
    6124:	mov	r0, r4
    6128:	ldr	r3, [fp, #1556]	; 0x614
    612c:	sub	r3, r5, r3
    6130:	and	r3, r3, #63	; 0x3f
    6134:	str	r3, [fp, #1552]	; 0x610
    6138:	bl	21f0 <btbb_piconet_get_flag@plt>
    613c:	cmp	r0, #0
    6140:	bne	6190 <btbb_uap_from_header@@Base+0x274>
    6144:	ldr	r0, [pc, #208]	; 621c <btbb_uap_from_header@@Base+0x300>
    6148:	add	r5, r5, #98	; 0x62
    614c:	ldr	r1, [r4, r5, lsl #2]
    6150:	ldr	r2, [r4, #384]	; 0x180
    6154:	add	r0, pc, r0
    6158:	bl	2100 <printf@plt>
    615c:	ldr	r3, [r4, r5, lsl #2]
    6160:	mov	r2, #1
    6164:	mov	r1, #4
    6168:	mov	r0, r4
    616c:	strb	r3, [r4, #28]
    6170:	bl	2214 <btbb_piconet_set_flag@plt>
    6174:	mov	r2, #1
    6178:	mov	r1, #2
    617c:	mov	r0, r4
    6180:	bl	2214 <btbb_piconet_set_flag@plt>
    6184:	mov	r3, #0
    6188:	str	r3, [r4, #384]	; 0x180
    618c:	b	60c0 <btbb_uap_from_header@@Base+0x1a4>
    6190:	ldr	r0, [pc, #136]	; 6220 <btbb_uap_from_header@@Base+0x304>
    6194:	ldr	r3, [sp, #4]
    6198:	ldr	r2, [r4, #384]	; 0x180
    619c:	add	r0, pc, r0
    61a0:	ldr	r1, [fp, #1552]	; 0x610
    61a4:	add	r5, r3, #98	; 0x62
    61a8:	bl	2100 <printf@plt>
    61ac:	b	615c <btbb_uap_from_header@@Base+0x240>
    61b0:	ldr	r3, [fp, #1556]	; 0x614
    61b4:	mov	r1, #2
    61b8:	mov	r0, r4
    61bc:	sub	r3, r5, r3
    61c0:	and	r3, r3, #63	; 0x3f
    61c4:	str	r3, [fp, #1552]	; 0x610
    61c8:	bl	21f0 <btbb_piconet_get_flag@plt>
    61cc:	cmp	r0, #0
    61d0:	bne	6200 <btbb_uap_from_header@@Base+0x2e4>
    61d4:	ldr	r0, [pc, #72]	; 6224 <btbb_uap_from_header@@Base+0x308>
    61d8:	mov	r1, r8
    61dc:	ldr	r2, [r4, #384]	; 0x180
    61e0:	add	r0, pc, r0
    61e4:	bl	2100 <printf@plt>
    61e8:	mov	r2, #1
    61ec:	mov	r1, #4
    61f0:	strb	r8, [r4, #28]
    61f4:	mov	r0, r4
    61f8:	str	r2, [sp]
    61fc:	b	6170 <btbb_uap_from_header@@Base+0x254>
    6200:	ldr	r0, [pc, #32]	; 6228 <btbb_uap_from_header@@Base+0x30c>
    6204:	ldr	r2, [r4, #384]	; 0x180
    6208:	ldr	r1, [fp, #1552]	; 0x610
    620c:	add	r0, pc, r0
    6210:	bl	2100 <printf@plt>
    6214:	b	61e8 <btbb_uap_from_header@@Base+0x2cc>
    6218:	andeq	ip, r0, r8, asr #4
    621c:	andeq	ip, r0, ip, lsr r2
    6220:	andeq	ip, r0, r0, lsr #4
    6224:	andeq	ip, r0, r0, asr #2
    6228:	andeq	ip, r0, ip, asr #2

0000622c <try_hop@@Base>:
    622c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6230:	mov	r4, r1
    6234:	mov	r5, r0
    6238:	strd	r6, [sp, #8]
    623c:	str	r8, [sp, #16]
    6240:	str	lr, [sp, #20]
    6244:	ldrb	r6, [r1, #28]
    6248:	bl	228c <btbb_decode@plt>
    624c:	mov	r0, r4
    6250:	mov	r1, #9
    6254:	bl	21f0 <btbb_piconet_get_flag@plt>
    6258:	cmp	r0, #0
    625c:	beq	62e4 <try_hop@@Base+0xb8>
    6260:	add	r7, r4, #4096	; 0x1000
    6264:	ldr	r3, [r4, #380]	; 0x17c
    6268:	movw	r1, #4648	; 0x1228
    626c:	ldr	lr, [r7, #1556]	; 0x614
    6270:	ldr	r2, [r5, #2816]	; 0xb00
    6274:	add	r0, r3, #162	; 0xa2
    6278:	add	ip, r4, r3
    627c:	add	r3, r3, #1
    6280:	sub	r2, r2, lr
    6284:	str	r2, [r4, r0, lsl #2]
    6288:	mov	r0, r4
    628c:	ldrb	r2, [r5, #8]
    6290:	strb	r2, [ip, r1]
    6294:	ldr	r2, [r4, #384]	; 0x180
    6298:	str	r3, [r4, #380]	; 0x17c
    629c:	add	r3, r2, #1
    62a0:	str	r3, [r4, #384]	; 0x180
    62a4:	bl	2298 <btbb_winnow@plt>
    62a8:	mov	r1, #5
    62ac:	mov	r0, r4
    62b0:	bl	21f0 <btbb_piconet_get_flag@plt>
    62b4:	cmp	r0, #0
    62b8:	bne	637c <try_hop@@Base+0x150>
    62bc:	mov	r1, #2
    62c0:	mov	r0, r4
    62c4:	bl	21f0 <btbb_piconet_get_flag@plt>
    62c8:	cmp	r0, #0
    62cc:	beq	633c <try_hop@@Base+0x110>
    62d0:	ldrd	r4, [sp]
    62d4:	ldrd	r6, [sp, #8]
    62d8:	ldr	r8, [sp, #16]
    62dc:	add	sp, sp, #20
    62e0:	pop	{pc}		; (ldr pc, [sp], #4)
    62e4:	mov	r1, #4
    62e8:	mov	r0, r4
    62ec:	bl	21f0 <btbb_piconet_get_flag@plt>
    62f0:	subs	r7, r0, #0
    62f4:	mov	r1, r4
    62f8:	mov	r0, r5
    62fc:	beq	6354 <try_hop@@Base+0x128>
    6300:	bl	2178 <btbb_uap_from_header@plt>
    6304:	mov	r1, #5
    6308:	mov	r0, r4
    630c:	bl	21f0 <btbb_piconet_get_flag@plt>
    6310:	cmp	r0, #0
    6314:	beq	62bc <try_hop@@Base+0x90>
    6318:	ldr	r0, [pc, #148]	; 63b4 <try_hop@@Base+0x188>
    631c:	add	r0, pc, r0
    6320:	bl	22bc <puts@plt>
    6324:	ldr	r0, [pc, #140]	; 63b8 <try_hop@@Base+0x18c>
    6328:	add	r3, r4, #4096	; 0x1000
    632c:	ldr	r1, [r3, #1552]	; 0x610
    6330:	add	r0, pc, r0
    6334:	bl	2100 <printf@plt>
    6338:	b	62bc <try_hop@@Base+0x90>
    633c:	mov	r2, #1
    6340:	mov	r1, #2
    6344:	mov	r0, r4
    6348:	bl	2214 <btbb_piconet_set_flag@plt>
    634c:	strb	r6, [r4, #28]
    6350:	b	62d0 <try_hop@@Base+0xa4>
    6354:	bl	2178 <btbb_uap_from_header@plt>
    6358:	cmp	r0, #0
    635c:	beq	62bc <try_hop@@Base+0x90>
    6360:	ldrb	r3, [r4, #28]
    6364:	cmp	r3, r6
    6368:	beq	639c <try_hop@@Base+0x170>
    636c:	ldr	r0, [pc, #72]	; 63bc <try_hop@@Base+0x190>
    6370:	add	r0, pc, r0
    6374:	bl	22bc <puts@plt>
    6378:	b	62bc <try_hop@@Base+0x90>
    637c:	ldr	r0, [pc, #60]	; 63c0 <try_hop@@Base+0x194>
    6380:	add	r0, pc, r0
    6384:	bl	22bc <puts@plt>
    6388:	ldr	r0, [pc, #52]	; 63c4 <try_hop@@Base+0x198>
    638c:	ldr	r1, [r7, #1552]	; 0x610
    6390:	add	r0, pc, r0
    6394:	bl	2100 <printf@plt>
    6398:	b	62bc <try_hop@@Base+0x90>
    639c:	mov	r0, r7
    63a0:	mov	r1, r4
    63a4:	bl	24cc <btbb_init_hop_reversal@plt>
    63a8:	mov	r0, r4
    63ac:	bl	2298 <btbb_winnow@plt>
    63b0:	b	62bc <try_hop@@Base+0x90>
    63b4:	andeq	ip, r0, ip, asr #1
    63b8:	andeq	ip, r0, r4, asr #1
    63bc:	muleq	r0, r8, r0
    63c0:	andeq	ip, r0, r8, rrx
    63c4:	andeq	ip, r0, r4, rrx

000063c8 <btbb_print_afh_map@@Base>:
    63c8:	mov	r1, r0
    63cc:	push	{lr}		; (str lr, [sp, #-4]!)
    63d0:	sub	sp, sp, #36	; 0x24
    63d4:	ldrb	ip, [r1, #21]
    63d8:	ldrb	r3, [r1, #20]
    63dc:	ldrb	r2, [r1, #19]
    63e0:	str	ip, [sp, #24]
    63e4:	ldrb	ip, [r1, #18]
    63e8:	str	r3, [sp, #20]
    63ec:	ldrb	r3, [r1, #17]
    63f0:	str	r2, [sp, #16]
    63f4:	ldrb	r2, [r1, #16]
    63f8:	str	ip, [sp, #12]
    63fc:	ldrb	ip, [r1, #15]
    6400:	str	r3, [sp, #8]
    6404:	ldr	r0, [pc, #32]	; 642c <btbb_print_afh_map@@Base+0x64>
    6408:	ldrb	r3, [r1, #14]
    640c:	str	r2, [sp, #4]
    6410:	ldrb	r2, [r1, #13]
    6414:	str	ip, [sp]
    6418:	add	r0, pc, r0
    641c:	ldrb	r1, [r1, #12]
    6420:	bl	2100 <printf@plt>
    6424:	add	sp, sp, #36	; 0x24
    6428:	pop	{pc}		; (ldr pc, [sp], #4)
    642c:	andeq	ip, r0, r8

00006430 <get_piconet@@Base>:
    6430:	ldr	r3, [pc, #1228]	; 6904 <get_piconet@@Base+0x4d4>
    6434:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6438:	add	r3, pc, r3
    643c:	ldr	r1, [r3, #8]
    6440:	strd	r6, [sp, #8]
    6444:	strd	r8, [sp, #16]
    6448:	strd	sl, [sp, #24]
    644c:	str	lr, [sp, #32]
    6450:	sub	sp, sp, #20
    6454:	cmp	r1, #0
    6458:	str	r0, [sp, #12]
    645c:	beq	65b8 <get_piconet@@Base+0x188>
    6460:	ldrb	r0, [sp, #12]
    6464:	movw	r3, #16653	; 0x410d
    6468:	movt	r3, #274	; 0x112
    646c:	movw	lr, #63341	; 0xf76d
    6470:	movt	lr, #7
    6474:	ldrb	r4, [sp, #15]
    6478:	movw	r2, #47814	; 0xbac6
    647c:	movt	r2, #40777	; 0x9f49
    6480:	ldrb	ip, [sp, #14]
    6484:	add	r3, r0, r3
    6488:	ldrb	r0, [sp, #13]
    648c:	add	r4, r3, r4, lsl #24
    6490:	movw	r3, #48883	; 0xbef3
    6494:	movt	r3, #65261	; 0xfeed
    6498:	ldr	r1, [r1, #8]
    649c:	add	r4, r4, ip, lsl #16
    64a0:	add	r4, r4, r0, lsl #8
    64a4:	eor	lr, lr, r4
    64a8:	ldm	r1, {r0, ip}
    64ac:	sub	r2, r2, lr
    64b0:	sub	r3, r3, lr
    64b4:	eor	r2, r2, lr, lsl #8
    64b8:	sub	r3, r3, r2
    64bc:	sub	lr, lr, r2
    64c0:	eor	r3, r3, r2, lsr #13
    64c4:	sub	ip, ip, #1
    64c8:	sub	lr, lr, r3
    64cc:	sub	r2, r2, r3
    64d0:	eor	lr, lr, r3, lsr #12
    64d4:	sub	r2, r2, lr
    64d8:	sub	r3, r3, lr
    64dc:	eor	r2, r2, lr, lsl #16
    64e0:	sub	r3, r3, r2
    64e4:	sub	lr, lr, r2
    64e8:	eor	r3, r3, r2, lsr #5
    64ec:	sub	lr, lr, r3
    64f0:	sub	r2, r2, r3
    64f4:	eor	lr, lr, r3, lsr #3
    64f8:	sub	r2, r2, lr
    64fc:	sub	r3, r3, lr
    6500:	eor	r2, r2, lr, lsl #10
    6504:	sub	r3, r3, r2
    6508:	eor	r3, r3, r2, lsr #15
    650c:	and	r3, r3, ip
    6510:	add	r3, r3, r3, lsl #1
    6514:	ldr	r3, [r0, r3, lsl #2]
    6518:	cmp	r3, #0
    651c:	beq	65b8 <get_piconet@@Base+0x188>
    6520:	ldr	r2, [r1, #20]
    6524:	rsb	r2, r2, #0
    6528:	b	6538 <get_piconet@@Base+0x108>
    652c:	ldr	r3, [r3, #24]
    6530:	cmp	r3, #0
    6534:	beq	65b8 <get_piconet@@Base+0x188>
    6538:	adds	r3, r3, r2
    653c:	beq	65b8 <get_piconet@@Base+0x188>
    6540:	ldr	r1, [r3, #32]
    6544:	cmp	r1, #4
    6548:	bne	652c <get_piconet@@Base+0xfc>
    654c:	ldr	r1, [r3, #28]
    6550:	ldrb	r0, [sp, #12]
    6554:	ldrb	ip, [r1]
    6558:	cmp	ip, r0
    655c:	bne	652c <get_piconet@@Base+0xfc>
    6560:	ldrb	ip, [r1, #1]
    6564:	add	r1, r1, #1
    6568:	ldrb	r0, [sp, #13]
    656c:	cmp	ip, r0
    6570:	bne	652c <get_piconet@@Base+0xfc>
    6574:	ldrb	ip, [r1, #1]!
    6578:	ldrb	r0, [sp, #14]
    657c:	cmp	ip, r0
    6580:	bne	652c <get_piconet@@Base+0xfc>
    6584:	ldrb	r0, [r1, #1]
    6588:	ldrb	r1, [sp, #15]
    658c:	cmp	r0, r1
    6590:	bne	652c <get_piconet@@Base+0xfc>
    6594:	ldr	r7, [r3, #4]
    6598:	mov	r0, r7
    659c:	add	sp, sp, #20
    65a0:	ldrd	r4, [sp]
    65a4:	ldrd	r6, [sp, #8]
    65a8:	ldrd	r8, [sp, #16]
    65ac:	ldrd	sl, [sp, #24]
    65b0:	add	sp, sp, #32
    65b4:	pop	{pc}		; (ldr pc, [sp], #4)
    65b8:	bl	20c4 <btbb_piconet_new@plt>
    65bc:	ldr	r4, [sp, #12]
    65c0:	mov	r7, r0
    65c4:	mov	r1, r4
    65c8:	bl	24d8 <btbb_init_piconet@plt>
    65cc:	mov	r0, #40	; 0x28
    65d0:	bl	22c8 <malloc@plt>
    65d4:	ldr	r3, [pc, #812]	; 6908 <get_piconet@@Base+0x4d8>
    65d8:	mov	r1, #0
    65dc:	mov	r6, r0
    65e0:	mov	r2, #4
    65e4:	stm	r0, {r4, r7}
    65e8:	str	r1, [r0, #16]
    65ec:	str	r0, [r6, #28]
    65f0:	str	r2, [r0, #32]
    65f4:	add	r3, pc, r3
    65f8:	ldr	r1, [r3, #8]
    65fc:	cmp	r1, #0
    6600:	beq	686c <get_piconet@@Base+0x43c>
    6604:	ldr	r5, [r1, #8]
    6608:	add	r4, r0, #8
    660c:	ldr	r3, [r5, #16]
    6610:	ldr	r2, [r5, #20]
    6614:	str	r0, [r3, #8]
    6618:	sub	r3, r3, r2
    661c:	str	r3, [r0, #12]
    6620:	str	r4, [r5, #16]
    6624:	ldr	r2, [r5, #12]
    6628:	movw	r8, #16653	; 0x410d
    662c:	movt	r8, #274	; 0x112
    6630:	movw	ip, #63341	; 0xf76d
    6634:	movt	ip, #7
    6638:	movw	lr, #47814	; 0xbac6
    663c:	movt	lr, #40777	; 0x9f49
    6640:	movw	r3, #48883	; 0xbef3
    6644:	movt	r3, #65261	; 0xfeed
    6648:	mov	r0, #0
    664c:	add	r2, r2, #1
    6650:	str	r2, [r5, #12]
    6654:	ldrb	r2, [r6]
    6658:	str	r5, [r6, #8]
    665c:	ldrb	r9, [r6, #3]
    6660:	ldr	r1, [r1, #8]
    6664:	add	r8, r2, r8
    6668:	ldrb	r2, [r6, #2]
    666c:	add	r8, r8, r9, lsl #24
    6670:	ldrb	r9, [r6, #1]
    6674:	add	r8, r8, r2, lsl #16
    6678:	ldm	r1, {r1, r2}
    667c:	add	r8, r8, r9, lsl #8
    6680:	eor	ip, ip, r8
    6684:	sub	lr, lr, ip
    6688:	sub	r3, r3, ip
    668c:	eor	lr, lr, ip, lsl #8
    6690:	sub	r2, r2, #1
    6694:	sub	r3, r3, lr
    6698:	sub	ip, ip, lr
    669c:	eor	r3, r3, lr, lsr #13
    66a0:	sub	ip, ip, r3
    66a4:	sub	lr, lr, r3
    66a8:	eor	ip, ip, r3, lsr #12
    66ac:	sub	lr, lr, ip
    66b0:	sub	r3, r3, ip
    66b4:	eor	lr, lr, ip, lsl #16
    66b8:	sub	r3, r3, lr
    66bc:	sub	ip, ip, lr
    66c0:	eor	r3, r3, lr, lsr #5
    66c4:	sub	ip, ip, r3
    66c8:	sub	lr, lr, r3
    66cc:	eor	ip, ip, r3, lsr #3
    66d0:	sub	lr, lr, ip
    66d4:	sub	r3, r3, ip
    66d8:	eor	ip, lr, ip, lsl #10
    66dc:	sub	r3, r3, ip
    66e0:	eor	r3, r3, ip, lsr #15
    66e4:	and	r2, r2, r3
    66e8:	add	r2, r2, r2, lsl #1
    66ec:	str	r3, [r6, #36]	; 0x24
    66f0:	lsl	r3, r2, #2
    66f4:	add	r2, r1, r3
    66f8:	ldr	lr, [r1, r3]
    66fc:	ldr	ip, [r2, #4]
    6700:	cmp	lr, r0
    6704:	add	ip, ip, #1
    6708:	str	ip, [r2, #4]
    670c:	ldr	r2, [r2, #8]
    6710:	str	r0, [r6, #20]
    6714:	str	lr, [r6, #24]
    6718:	strne	r4, [lr, #12]
    671c:	str	r4, [r1, r3]
    6720:	add	r3, r2, #1
    6724:	add	r3, r3, r3, lsl #2
    6728:	cmp	ip, r3, lsl #1
    672c:	bcc	6598 <get_piconet@@Base+0x168>
    6730:	ldr	r3, [r5, #36]	; 0x24
    6734:	cmp	r3, #1
    6738:	beq	6598 <get_piconet@@Base+0x168>
    673c:	ldr	r0, [r5, #4]
    6740:	mov	r1, #1
    6744:	add	r0, r0, r0, lsl r1
    6748:	lsl	r0, r0, #3
    674c:	bl	20ac <calloc@plt>
    6750:	subs	r4, r0, #0
    6754:	beq	68fc <get_piconet@@Base+0x4cc>
    6758:	ldmib	r5, {r1, r2}
    675c:	mov	r9, #0
    6760:	ldr	r0, [r5, #12]
    6764:	lsl	r3, r1, #1
    6768:	add	r2, r2, #1
    676c:	sub	sl, r3, #1
    6770:	tst	r0, sl
    6774:	movne	r8, #1
    6778:	moveq	r8, r9
    677c:	add	r8, r8, r0, lsr r2
    6780:	cmp	r1, r9
    6784:	strd	r8, [r5, #24]
    6788:	beq	68f0 <get_piconet@@Base+0x4c0>
    678c:	ldr	fp, [r5]
    6790:	add	r3, r3, r1
    6794:	add	r3, fp, r3, lsl #2
    6798:	str	r6, [sp, #8]
    679c:	str	fp, [sp, #4]
    67a0:	mov	r6, r3
    67a4:	ldr	r2, [fp]
    67a8:	cmp	r2, #0
    67ac:	beq	680c <get_piconet@@Base+0x3dc>
    67b0:	ldr	ip, [r2, #16]
    67b4:	ldr	r3, [r2, #28]
    67b8:	and	r3, r3, sl
    67bc:	add	r3, r3, r3, lsl #1
    67c0:	add	r0, r4, r3, lsl #2
    67c4:	ldr	r1, [r0, #4]
    67c8:	add	r1, r1, #1
    67cc:	cmp	r8, r1
    67d0:	str	r1, [r0, #4]
    67d4:	bcs	67ec <get_piconet@@Base+0x3bc>
    67d8:	udiv	r1, r1, r8
    67dc:	ldr	lr, [r5, #28]
    67e0:	add	lr, lr, #1
    67e4:	str	lr, [r5, #28]
    67e8:	str	r1, [r0, #8]
    67ec:	ldr	r1, [r4, r3, lsl #2]
    67f0:	str	r9, [r2, #12]
    67f4:	cmp	r1, #0
    67f8:	str	r1, [r2, #16]
    67fc:	strne	r2, [r1, #12]
    6800:	str	r2, [r4, r3, lsl #2]
    6804:	subs	r2, ip, #0
    6808:	bne	67b0 <get_piconet@@Base+0x380>
    680c:	add	fp, fp, #12
    6810:	cmp	r6, fp
    6814:	bne	67a4 <get_piconet@@Base+0x374>
    6818:	ldr	r6, [sp, #8]
    681c:	ldr	r0, [sp, #4]
    6820:	bl	2148 <free@plt>
    6824:	ldr	r3, [r6, #8]
    6828:	ldmib	r3, {r1, r2, ip}
    682c:	str	r4, [r3]
    6830:	ldr	r0, [r3, #28]
    6834:	lsl	r1, r1, #1
    6838:	add	r2, r2, #1
    683c:	stmib	r3, {r1, r2}
    6840:	cmp	r0, ip, lsr #1
    6844:	movls	r2, #0
    6848:	strls	r2, [r3, #32]
    684c:	bls	6598 <get_piconet@@Base+0x168>
    6850:	ldr	r2, [r3, #32]
    6854:	add	r2, r2, #1
    6858:	cmp	r2, #1
    685c:	str	r2, [r3, #32]
    6860:	movhi	r2, #1
    6864:	strhi	r2, [r3, #36]	; 0x24
    6868:	b	6598 <get_piconet@@Base+0x168>
    686c:	mov	r0, #44	; 0x2c
    6870:	str	r1, [r6, #12]
    6874:	str	r6, [r3, #8]
    6878:	bl	22c8 <malloc@plt>
    687c:	cmp	r0, #0
    6880:	mov	r5, r0
    6884:	str	r0, [r6, #8]
    6888:	beq	68fc <get_piconet@@Base+0x4cc>
    688c:	mov	r0, #0
    6890:	mov	r1, #0
    6894:	mov	lr, #32
    6898:	mov	ip, #5
    689c:	mov	r2, #8
    68a0:	add	r4, r6, #8
    68a4:	str	lr, [r5, #4]
    68a8:	str	ip, [r5, #8]
    68ac:	strd	r0, [r5, #12]
    68b0:	str	r4, [r5, #16]
    68b4:	strd	r0, [r5, #20]
    68b8:	str	r2, [r5, #20]
    68bc:	strd	r0, [r5, #28]
    68c0:	strd	r0, [r5, #36]	; 0x24
    68c4:	mov	r1, #1
    68c8:	mov	r0, #384	; 0x180
    68cc:	bl	20ac <calloc@plt>
    68d0:	cmp	r0, #0
    68d4:	str	r0, [r5]
    68d8:	beq	68fc <get_piconet@@Base+0x4cc>
    68dc:	movw	r3, #8161	; 0x1fe1
    68e0:	movt	r3, #40977	; 0xa011
    68e4:	mov	r1, r6
    68e8:	str	r3, [r5, #40]	; 0x28
    68ec:	b	6624 <get_piconet@@Base+0x1f4>
    68f0:	ldr	r3, [r5]
    68f4:	str	r3, [sp, #4]
    68f8:	b	681c <get_piconet@@Base+0x3ec>
    68fc:	mvn	r0, #0
    6900:	bl	231c <exit@plt>
    6904:	andeq	r2, r2, ip, ror #26
    6908:			; <UNDEFINED> instruction: 0x00022bb0

0000690c <btbb_next_survey_result@@Base>:
    690c:	ldr	r2, [pc, #56]	; 694c <btbb_next_survey_result@@Base+0x40>
    6910:	str	r4, [sp, #-8]!
    6914:	add	r2, pc, r2
    6918:	ldr	r4, [r2, #8]
    691c:	str	lr, [sp, #4]
    6920:	cmp	r4, #0
    6924:	beq	693c <btbb_next_survey_result@@Base+0x30>
    6928:	ldr	r1, [r4, #16]
    692c:	mov	r0, r4
    6930:	ldr	r4, [r4, #4]
    6934:	str	r1, [r2, #8]
    6938:	bl	2148 <free@plt>
    693c:	mov	r0, r4
    6940:	ldr	r4, [sp]
    6944:	add	sp, sp, #4
    6948:	pop	{pc}		; (ldr pc, [sp], #4)
    694c:	muleq	r2, r0, r8

00006950 <btbb_process_packet@@Base>:
    6950:	ldr	r3, [pc, #400]	; 6ae8 <btbb_process_packet@@Base+0x198>
    6954:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6958:	mov	r5, r0
    695c:	strd	r6, [sp, #8]
    6960:	str	r8, [sp, #16]
    6964:	str	lr, [sp, #20]
    6968:	add	r3, pc, r3
    696c:	ldr	r7, [r3]
    6970:	cmp	r7, #0
    6974:	bne	69c0 <btbb_process_packet@@Base+0x70>
    6978:	cmp	r1, #0
    697c:	mov	r4, r1
    6980:	beq	69a4 <btbb_process_packet@@Base+0x54>
    6984:	ldrb	r1, [r0, #8]
    6988:	mov	r0, r4
    698c:	bl	2238 <btbb_piconet_set_channel_seen@plt>
    6990:	mov	r1, #3
    6994:	mov	r0, r4
    6998:	bl	21f0 <btbb_piconet_get_flag@plt>
    699c:	cmp	r0, #0
    69a0:	bne	6a08 <btbb_process_packet@@Base+0xb8>
    69a4:	mov	r6, #0
    69a8:	mov	r0, r6
    69ac:	ldrd	r4, [sp]
    69b0:	ldrd	r6, [sp, #8]
    69b4:	ldr	r8, [sp, #16]
    69b8:	add	sp, sp, #20
    69bc:	pop	{pc}		; (ldr pc, [sp], #4)
    69c0:	bl	23f4 <btbb_packet_get_lap@plt>
    69c4:	bl	2424 <get_piconet@plt>
    69c8:	ldrb	r1, [r5, #8]
    69cc:	mov	r4, r0
    69d0:	bl	2238 <btbb_piconet_set_channel_seen@plt>
    69d4:	mov	r0, r5
    69d8:	bl	21e4 <btbb_header_present@plt>
    69dc:	cmp	r0, #0
    69e0:	beq	69a4 <btbb_process_packet@@Base+0x54>
    69e4:	mov	r1, #2
    69e8:	mov	r0, r4
    69ec:	bl	21f0 <btbb_piconet_get_flag@plt>
    69f0:	subs	r6, r0, #0
    69f4:	bne	69a4 <btbb_process_packet@@Base+0x54>
    69f8:	mov	r1, r4
    69fc:	mov	r0, r5
    6a00:	bl	2178 <btbb_uap_from_header@plt>
    6a04:	b	69a8 <btbb_process_packet@@Base+0x58>
    6a08:	mov	r0, r5
    6a0c:	bl	21e4 <btbb_header_present@plt>
    6a10:	cmp	r0, #0
    6a14:	beq	69a4 <btbb_process_packet@@Base+0x54>
    6a18:	mov	r1, #14
    6a1c:	mov	r0, r4
    6a20:	bl	21f0 <btbb_piconet_get_flag@plt>
    6a24:	subs	r6, r0, #0
    6a28:	mov	r0, r4
    6a2c:	beq	6a80 <btbb_process_packet@@Base+0x130>
    6a30:	bl	21a8 <btbb_piconet_get_uap@plt>
    6a34:	mov	r1, r0
    6a38:	mov	r0, r5
    6a3c:	bl	2250 <btbb_packet_set_uap@plt>
    6a40:	mov	r2, #1
    6a44:	mov	r1, #4
    6a48:	mov	r0, r5
    6a4c:	bl	2130 <btbb_packet_set_flag@plt>
    6a50:	mov	r2, #1
    6a54:	mov	r1, #5
    6a58:	mov	r0, r5
    6a5c:	bl	2130 <btbb_packet_set_flag@plt>
    6a60:	mov	r0, r5
    6a64:	bl	228c <btbb_decode@plt>
    6a68:	subs	r6, r0, #0
    6a6c:	beq	6ad8 <btbb_process_packet@@Base+0x188>
    6a70:	mov	r0, r5
    6a74:	mov	r6, r7
    6a78:	bl	24a8 <btbb_print_packet@plt>
    6a7c:	b	69a8 <btbb_process_packet@@Base+0x58>
    6a80:	bl	21a8 <btbb_piconet_get_uap@plt>
    6a84:	cmp	r0, #0
    6a88:	beq	69f8 <btbb_process_packet@@Base+0xa8>
    6a8c:	mov	r0, r5
    6a90:	mov	r1, r4
    6a94:	bl	22d4 <try_hop@plt>
    6a98:	mov	r1, #4
    6a9c:	mov	r0, r4
    6aa0:	bl	21f0 <btbb_piconet_get_flag@plt>
    6aa4:	cmp	r0, #0
    6aa8:	beq	69a4 <btbb_process_packet@@Base+0x54>
    6aac:	mov	r1, #5
    6ab0:	mov	r0, r4
    6ab4:	bl	21f0 <btbb_piconet_get_flag@plt>
    6ab8:	cmp	r0, #0
    6abc:	beq	69a4 <btbb_process_packet@@Base+0x54>
    6ac0:	mov	r0, r4
    6ac4:	mov	r2, #1
    6ac8:	mov	r1, #14
    6acc:	mvn	r6, #0
    6ad0:	bl	2214 <btbb_piconet_set_flag@plt>
    6ad4:	b	69a8 <btbb_process_packet@@Base+0x58>
    6ad8:	ldr	r0, [pc, #12]	; 6aec <btbb_process_packet@@Base+0x19c>
    6adc:	add	r0, pc, r0
    6ae0:	bl	22bc <puts@plt>
    6ae4:	b	69a8 <btbb_process_packet@@Base+0x58>
    6ae8:	andeq	r2, r2, ip, lsr r8
    6aec:	andeq	fp, r0, ip, ror r9
    6af0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6af4:	mov	r2, #256	; 0x100
    6af8:	ldr	r4, [pc, #1068]	; 6f2c <btbb_process_packet@@Base+0x5dc>
    6afc:	strd	r6, [sp, #8]
    6b00:	mov	r6, r0
    6b04:	strd	r8, [sp, #16]
    6b08:	uxtb	r7, r6
    6b0c:	strd	sl, [sp, #24]
    6b10:	str	lr, [sp, #32]
    6b14:	sub	sp, sp, #580	; 0x244
    6b18:	add	r4, pc, r4
    6b1c:	add	r0, sp, #64	; 0x40
    6b20:	mov	r1, r4
    6b24:	mov	r8, sp
    6b28:	bl	216c <memcpy@plt>
    6b2c:	add	r1, r4, #256	; 0x100
    6b30:	mov	r2, #256	; 0x100
    6b34:	add	r0, sp, #320	; 0x140
    6b38:	bl	216c <memcpy@plt>
    6b3c:	lsr	r2, r6, #8
    6b40:	add	r3, sp, #576	; 0x240
    6b44:	tst	r6, #1
    6b48:	add	r3, r3, r7
    6b4c:	add	r1, sp, #576	; 0x240
    6b50:	lsr	r0, r6, #16
    6b54:	ldrbne	ip, [r3, #-256]	; 0xffffff00
    6b58:	add	lr, sp, #576	; 0x240
    6b5c:	ldrbeq	ip, [r3, #-512]	; 0xfffffe00
    6b60:	uxtb	r3, r2
    6b64:	tst	r6, #128	; 0x80
    6b68:	add	r1, r1, r3
    6b6c:	ldrbne	r9, [r1, #-256]	; 0xffffff00
    6b70:	ldrbeq	r9, [r1, #-512]	; 0xfffffe00
    6b74:	tst	r2, #128	; 0x80
    6b78:	uxtb	r1, r0
    6b7c:	add	r2, sp, #576	; 0x240
    6b80:	add	r2, r2, r1
    6b84:	add	ip, ip, r9
    6b88:	ldrbne	r9, [r2, #-256]	; 0xffffff00
    6b8c:	ldrbeq	r9, [r2, #-512]	; 0xfffffe00
    6b90:	lsr	r2, r6, #24
    6b94:	tst	r0, #128	; 0x80
    6b98:	uxtb	r0, r2
    6b9c:	add	r2, lr, r2
    6ba0:	ldr	lr, [pc, #904]	; 6f30 <btbb_process_packet@@Base+0x5e0>
    6ba4:	add	ip, r9, ip
    6ba8:	ldrbne	r9, [r2, #-256]	; 0xffffff00
    6bac:	ldrbeq	r9, [r2, #-512]	; 0xfffffe00
    6bb0:	add	lr, pc, lr
    6bb4:	add	r2, sp, #576	; 0x240
    6bb8:	add	lr, lr, #512	; 0x200
    6bbc:	add	sl, r2, r0, lsr #2
    6bc0:	ldrd	r4, [lr, #16]
    6bc4:	add	r9, r9, ip
    6bc8:	movw	ip, #48854	; 0xbed6
    6bcc:	movt	ip, #36489	; 0x8e89
    6bd0:	cmp	r9, #24
    6bd4:	subgt	r9, r9, #24
    6bd8:	movle	r9, #0
    6bdc:	strd	r4, [r8, #16]
    6be0:	cmp	r7, r3
    6be4:	cmpeq	r7, r1
    6be8:	ldrd	r4, [lr, #40]	; 0x28
    6bec:	moveq	r3, #1
    6bf0:	movne	r3, #0
    6bf4:	cmp	r7, r0
    6bf8:	movne	r7, #0
    6bfc:	andeq	r7, r3, #1
    6c00:	ldrd	r0, [lr]
    6c04:	cmp	r6, ip
    6c08:	eor	ip, ip, r6
    6c0c:	ldrd	r2, [lr, #8]
    6c10:	strd	r0, [r8]
    6c14:	ldrd	r0, [lr, #24]
    6c18:	strd	r2, [r8, #8]
    6c1c:	ldrd	r2, [lr, #32]
    6c20:	strd	r0, [r8, #24]
    6c24:	ldrd	r0, [lr, #48]	; 0x30
    6c28:	strd	r2, [r8, #32]
    6c2c:	ldrd	r2, [lr, #56]	; 0x38
    6c30:	strd	r4, [r8, #40]	; 0x28
    6c34:	strd	r0, [r8, #48]	; 0x30
    6c38:	moveq	r0, #1
    6c3c:	movne	r0, #0
    6c40:	strd	r2, [r8, #56]	; 0x38
    6c44:	ldrb	r3, [sl, #-576]	; 0xfffffdc0
    6c48:	rsb	r3, r3, #1
    6c4c:	add	r9, r3, r9
    6c50:	add	r9, r7, r9
    6c54:	add	r0, r0, r9
    6c58:	beq	6c7c <btbb_process_packet@@Base+0x32c>
    6c5c:	mov	r3, #0
    6c60:	sub	r2, ip, #1
    6c64:	add	r3, r3, #1
    6c68:	ands	ip, ip, r2
    6c6c:	uxtb	r3, r3
    6c70:	bne	6c60 <btbb_process_packet@@Base+0x310>
    6c74:	cmp	r3, #1
    6c78:	addeq	r0, r0, #1
    6c7c:	mov	r2, #0
    6c80:	movw	sl, #1793	; 0x701
    6c84:	movw	r9, #3587	; 0xe03
    6c88:	movw	r8, #3580	; 0xdfc
    6c8c:	movw	r7, #3326	; 0xcfe
    6c90:	movw	r5, #3329	; 0xd01
    6c94:	movw	r4, #2563	; 0xa03
    6c98:	movw	lr, #2036	; 0x7f4
    6c9c:	movw	ip, #1790	; 0x6fe
    6ca0:	movw	r1, #769	; 0x301
    6ca4:	b	6ce4 <btbb_process_packet@@Base+0x394>
    6ca8:	movw	fp, #766	; 0x2fe
    6cac:	cmp	r3, fp
    6cb0:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6cb4:	movw	fp, #257	; 0x101
    6cb8:	cmp	r3, fp
    6cbc:	bls	6e14 <btbb_process_packet@@Base+0x4c4>
    6cc0:	cmp	r3, #512	; 0x200
    6cc4:	bcs	6de0 <btbb_process_packet@@Base+0x490>
    6cc8:	cmp	r3, #508	; 0x1fc
    6ccc:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6cd0:	cmp	r3, #384	; 0x180
    6cd4:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6cd8:	add	r2, r2, #4
    6cdc:	cmp	r2, #24
    6ce0:	beq	6d44 <btbb_process_packet@@Base+0x3f4>
    6ce4:	lsr	r3, r6, r2
    6ce8:	ubfx	r3, r3, #0, #12
    6cec:	cmp	r3, sl
    6cf0:	bhi	6dac <btbb_process_packet@@Base+0x45c>
    6cf4:	cmp	r3, ip
    6cf8:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6cfc:	cmp	r3, r1
    6d00:	bls	6ca8 <btbb_process_packet@@Base+0x358>
    6d04:	movw	fp, #1281	; 0x501
    6d08:	cmp	r3, fp
    6d0c:	bhi	6d88 <btbb_process_packet@@Base+0x438>
    6d10:	movw	fp, #1278	; 0x4fe
    6d14:	cmp	r3, fp
    6d18:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6d1c:	cmp	r3, #1024	; 0x400
    6d20:	bhi	6d60 <btbb_process_packet@@Base+0x410>
    6d24:	cmp	r3, #1016	; 0x3f8
    6d28:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6d2c:	cmp	r3, #896	; 0x380
    6d30:	bne	6cd8 <btbb_process_packet@@Base+0x388>
    6d34:	add	r0, r0, #1
    6d38:	add	r2, r2, #4
    6d3c:	cmp	r2, #24
    6d40:	bne	6ce4 <btbb_process_packet@@Base+0x394>
    6d44:	add	sp, sp, #580	; 0x244
    6d48:	ldrd	r4, [sp]
    6d4c:	ldrd	r6, [sp, #8]
    6d50:	ldrd	r8, [sp, #16]
    6d54:	ldrd	sl, [sp, #24]
    6d58:	add	sp, sp, #32
    6d5c:	pop	{pc}		; (ldr pc, [sp], #4)
    6d60:	movw	fp, #1026	; 0x402
    6d64:	cmp	r3, fp
    6d68:	bcc	6cd8 <btbb_process_packet@@Base+0x388>
    6d6c:	movw	fp, #1031	; 0x407
    6d70:	cmp	r3, fp
    6d74:	bls	6d34 <btbb_process_packet@@Base+0x3e4>
    6d78:	cmp	r3, #1152	; 0x480
    6d7c:	bne	6cd8 <btbb_process_packet@@Base+0x388>
    6d80:	add	r0, r0, #1
    6d84:	b	6d38 <btbb_process_packet@@Base+0x3e8>
    6d88:	cmp	r3, #1536	; 0x600
    6d8c:	bcs	6df8 <btbb_process_packet@@Base+0x4a8>
    6d90:	movw	fp, #1532	; 0x5fc
    6d94:	cmp	r3, fp
    6d98:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6d9c:	cmp	r3, #1408	; 0x580
    6da0:	bne	6cd8 <btbb_process_packet@@Base+0x388>
    6da4:	add	r0, r0, #1
    6da8:	b	6d38 <btbb_process_packet@@Base+0x3e8>
    6dac:	cmp	r3, #2944	; 0xb80
    6db0:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6db4:	bhi	6e78 <btbb_process_packet@@Base+0x528>
    6db8:	cmp	r3, #2432	; 0x980
    6dbc:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6dc0:	bhi	6e54 <btbb_process_packet@@Base+0x504>
    6dc4:	cmp	r3, #2064	; 0x810
    6dc8:	bcs	6e34 <btbb_process_packet@@Base+0x4e4>
    6dcc:	cmp	r3, lr
    6dd0:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6dd4:	cmp	r3, #1920	; 0x780
    6dd8:	bne	6cd8 <btbb_process_packet@@Base+0x388>
    6ddc:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6de0:	bls	6cd8 <btbb_process_packet@@Base+0x388>
    6de4:	cmp	r3, #516	; 0x204
    6de8:	bcc	6d34 <btbb_process_packet@@Base+0x3e4>
    6dec:	cmp	r3, #640	; 0x280
    6df0:	bne	6cd8 <btbb_process_packet@@Base+0x388>
    6df4:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6df8:	bls	6cd8 <btbb_process_packet@@Base+0x388>
    6dfc:	movw	fp, #1539	; 0x603
    6e00:	cmp	r3, fp
    6e04:	bls	6d34 <btbb_process_packet@@Base+0x3e4>
    6e08:	cmp	r3, #1664	; 0x680
    6e0c:	bne	6cd8 <btbb_process_packet@@Base+0x388>
    6e10:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6e14:	cmp	r3, #254	; 0xfe
    6e18:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6e1c:	cmp	r3, #31
    6e20:	bls	6d34 <btbb_process_packet@@Base+0x3e4>
    6e24:	sub	r3, r3, #127	; 0x7f
    6e28:	cmp	r3, #1
    6e2c:	bhi	6cd8 <btbb_process_packet@@Base+0x388>
    6e30:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6e34:	cmp	r3, #2176	; 0x880
    6e38:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6e3c:	bcc	6cd8 <btbb_process_packet@@Base+0x388>
    6e40:	sub	r3, r3, #2288	; 0x8f0
    6e44:	sub	r3, r3, #14
    6e48:	cmp	r3, #3
    6e4c:	bhi	6cd8 <btbb_process_packet@@Base+0x388>
    6e50:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6e54:	cmp	r3, r4
    6e58:	bhi	6eb0 <btbb_process_packet@@Base+0x560>
    6e5c:	cmp	r3, #2560	; 0xa00
    6e60:	bhi	6d34 <btbb_process_packet@@Base+0x3e4>
    6e64:	sub	r3, r3, #2544	; 0x9f0
    6e68:	sub	r3, r3, #12
    6e6c:	cmp	r3, #3
    6e70:	bhi	6cd8 <btbb_process_packet@@Base+0x388>
    6e74:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6e78:	cmp	r3, r9
    6e7c:	bhi	6ee4 <btbb_process_packet@@Base+0x594>
    6e80:	cmp	r3, r8
    6e84:	bcs	6d34 <btbb_process_packet@@Base+0x3e4>
    6e88:	cmp	r3, #3200	; 0xc80
    6e8c:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6e90:	bls	6ed0 <btbb_process_packet@@Base+0x580>
    6e94:	cmp	r3, r7
    6e98:	bcc	6cd8 <btbb_process_packet@@Base+0x388>
    6e9c:	cmp	r3, r5
    6ea0:	bls	6d34 <btbb_process_packet@@Base+0x3e4>
    6ea4:	cmp	r3, #3456	; 0xd80
    6ea8:	bne	6cd8 <btbb_process_packet@@Base+0x388>
    6eac:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6eb0:	cmp	r3, #2688	; 0xa80
    6eb4:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6eb8:	bcc	6cd8 <btbb_process_packet@@Base+0x388>
    6ebc:	sub	r3, r3, #2800	; 0xaf0
    6ec0:	sub	r3, r3, #14
    6ec4:	cmp	r3, #3
    6ec8:	bhi	6cd8 <btbb_process_packet@@Base+0x388>
    6ecc:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6ed0:	sub	r3, r3, #3056	; 0xbf0
    6ed4:	sub	r3, r3, #8
    6ed8:	cmp	r3, #15
    6edc:	bhi	6cd8 <btbb_process_packet@@Base+0x388>
    6ee0:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6ee4:	cmp	r3, #3968	; 0xf80
    6ee8:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6eec:	bhi	6f10 <btbb_process_packet@@Base+0x5c0>
    6ef0:	cmp	r3, #3712	; 0xe80
    6ef4:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6ef8:	bcc	6cd8 <btbb_process_packet@@Base+0x388>
    6efc:	sub	r3, r3, #3824	; 0xef0
    6f00:	sub	r3, r3, #14
    6f04:	cmp	r3, #3
    6f08:	bhi	6cd8 <btbb_process_packet@@Base+0x388>
    6f0c:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6f10:	cmp	r3, #4064	; 0xfe0
    6f14:	beq	6d34 <btbb_process_packet@@Base+0x3e4>
    6f18:	bcc	6cd8 <btbb_process_packet@@Base+0x388>
    6f1c:	sub	r3, r3, #4080	; 0xff0
    6f20:	cmp	r3, #15
    6f24:	bhi	6cd8 <btbb_process_packet@@Base+0x388>
    6f28:	b	6d34 <btbb_process_packet@@Base+0x3e4>
    6f2c:	andeq	fp, r0, r8, asr r9
    6f30:	andeq	fp, r0, r0, asr #17
    6f34:	mov	ip, r1
    6f38:	mov	r1, r0
    6f3c:	ldr	r0, [pc, #128]	; 6fc4 <btbb_process_packet@@Base+0x674>
    6f40:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6f44:	add	r5, ip, r2
    6f48:	strd	r6, [sp, #8]
    6f4c:	mov	r7, r3
    6f50:	ldr	r6, [pc, #112]	; 6fc8 <btbb_process_packet@@Base+0x678>
    6f54:	str	r8, [sp, #16]
    6f58:	str	lr, [sp, #20]
    6f5c:	add	lr, r2, #5
    6f60:	add	r0, pc, r0
    6f64:	ldrb	r2, [ip, lr]
    6f68:	add	r4, ip, lr
    6f6c:	add	r6, pc, r6
    6f70:	bl	2100 <printf@plt>
    6f74:	ldrb	r1, [r4, #-1]!
    6f78:	mov	r0, r6
    6f7c:	bl	2100 <printf@plt>
    6f80:	cmp	r4, r5
    6f84:	bne	6f74 <btbb_process_packet@@Base+0x624>
    6f88:	cmp	r7, #0
    6f8c:	bne	6fb8 <btbb_process_packet@@Base+0x668>
    6f90:	ldr	r1, [pc, #52]	; 6fcc <btbb_process_packet@@Base+0x67c>
    6f94:	add	r1, pc, r1
    6f98:	ldr	r0, [pc, #48]	; 6fd0 <btbb_process_packet@@Base+0x680>
    6f9c:	ldrd	r4, [sp]
    6fa0:	ldrd	r6, [sp, #8]
    6fa4:	add	r0, pc, r0
    6fa8:	ldr	r8, [sp, #16]
    6fac:	ldr	lr, [sp, #20]
    6fb0:	add	sp, sp, #24
    6fb4:	b	2100 <printf@plt>
    6fb8:	ldr	r1, [pc, #20]	; 6fd4 <btbb_process_packet@@Base+0x684>
    6fbc:	add	r1, pc, r1
    6fc0:	b	6f98 <btbb_process_packet@@Base+0x648>
    6fc4:	andeq	fp, r0, r0, ror #14
    6fc8:	andeq	fp, r0, r0, ror #14
    6fcc:	andeq	fp, r0, r4, lsr #14
    6fd0:	andeq	fp, r0, r0, lsr r7
    6fd4:	strdeq	fp, [r0], -r4
    6fd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6fdc:	strd	r6, [sp, #8]
    6fe0:	strd	r8, [sp, #16]
    6fe4:	subs	r8, r1, #0
    6fe8:	strd	sl, [sp, #24]
    6fec:	str	lr, [sp, #32]
    6ff0:	vpush	{d8}
    6ff4:	sub	sp, sp, #44	; 0x2c
    6ff8:	ble	7130 <btbb_process_packet@@Base+0x7e0>
    6ffc:	ldrb	r4, [r0]
    7000:	mov	r7, r0
    7004:	add	r5, r4, #1
    7008:	cmp	r5, r8
    700c:	bgt	7658 <btbb_process_packet@@Base+0xd08>
    7010:	cmp	r4, #0
    7014:	beq	7694 <btbb_process_packet@@Base+0xd44>
    7018:	ldr	r3, [pc, #920]	; 73b8 <btbb_process_packet@@Base+0xa68>
    701c:	mov	r6, #0
    7020:	mov	sl, #1
    7024:	ldr	r9, [pc, #912]	; 73bc <btbb_process_packet@@Base+0xa6c>
    7028:	str	r6, [sp, #4]
    702c:	vldr	d8, [pc, #892]	; 73b0 <btbb_process_packet@@Base+0xa60>
    7030:	add	r3, pc, r3
    7034:	str	r3, [sp, #8]
    7038:	add	r9, pc, r9
    703c:	ldr	r3, [pc, #892]	; 73c0 <btbb_process_packet@@Base+0xa70>
    7040:	add	r3, pc, r3
    7044:	str	r3, [sp, #12]
    7048:	b	70bc <btbb_process_packet@@Base+0x76c>
    704c:	cmp	fp, #9
    7050:	beq	7344 <btbb_process_packet@@Base+0x9f4>
    7054:	cmp	fp, #10
    7058:	bne	72f0 <btbb_process_packet@@Base+0x9a0>
    705c:	ldr	r0, [pc, #864]	; 73c4 <btbb_process_packet@@Base+0xa74>
    7060:	add	r0, pc, r0
    7064:	bl	22bc <puts@plt>
    7068:	ldr	r0, [pc, #856]	; 73c8 <btbb_process_packet@@Base+0xa78>
    706c:	add	r0, pc, r0
    7070:	bl	2100 <printf@plt>
    7074:	cmp	r4, #2
    7078:	beq	76c0 <btbb_process_packet@@Base+0xd70>
    707c:	ldr	r0, [pc, #840]	; 73cc <btbb_process_packet@@Base+0xa7c>
    7080:	sub	r1, r4, #1
    7084:	add	r0, pc, r0
    7088:	bl	2100 <printf@plt>
    708c:	cmp	r8, r5
    7090:	ble	7130 <btbb_process_packet@@Base+0x7e0>
    7094:	ldrb	r4, [r7, r5]
    7098:	add	sl, r5, #1
    709c:	str	r5, [sp, #4]
    70a0:	add	r3, r4, sl
    70a4:	cmp	r3, r8
    70a8:	bgt	765c <btbb_process_packet@@Base+0xd0c>
    70ac:	cmp	r4, #0
    70b0:	mov	r6, r5
    70b4:	beq	7694 <btbb_process_packet@@Base+0xd44>
    70b8:	mov	r5, r3
    70bc:	ldrb	fp, [r7, sl]
    70c0:	ldr	r0, [sp, #8]
    70c4:	mov	r1, fp
    70c8:	bl	2100 <printf@plt>
    70cc:	cmp	fp, #7
    70d0:	beq	7460 <btbb_process_packet@@Base+0xb10>
    70d4:	bls	7150 <btbb_process_packet@@Base+0x800>
    70d8:	cmp	fp, #18
    70dc:	beq	72ac <btbb_process_packet@@Base+0x95c>
    70e0:	bls	704c <btbb_process_packet@@Base+0x6fc>
    70e4:	cmp	fp, #22
    70e8:	beq	75c0 <btbb_process_packet@@Base+0xc70>
    70ec:	cmp	fp, #255	; 0xff
    70f0:	bne	72f0 <btbb_process_packet@@Base+0x9a0>
    70f4:	ldr	r6, [pc, #724]	; 73d0 <btbb_process_packet@@Base+0xa80>
    70f8:	ldr	r0, [pc, #724]	; 73d4 <btbb_process_packet@@Base+0xa84>
    70fc:	add	r6, pc, r6
    7100:	add	r0, pc, r0
    7104:	bl	22bc <puts@plt>
    7108:	mov	r0, r6
    710c:	bl	2100 <printf@plt>
    7110:	cmp	r4, #2
    7114:	bgt	7738 <btbb_process_packet@@Base+0xde8>
    7118:	ldr	r0, [pc, #696]	; 73d8 <btbb_process_packet@@Base+0xa88>
    711c:	sub	r1, r4, #1
    7120:	add	r0, pc, r0
    7124:	bl	2100 <printf@plt>
    7128:	cmp	r8, r5
    712c:	bgt	7094 <btbb_process_packet@@Base+0x744>
    7130:	add	sp, sp, #44	; 0x2c
    7134:	vpop	{d8}
    7138:	ldrd	r4, [sp]
    713c:	ldrd	r6, [sp, #8]
    7140:	ldrd	r8, [sp, #16]
    7144:	ldrd	sl, [sp, #24]
    7148:	add	sp, sp, #32
    714c:	pop	{pc}		; (ldr pc, [sp], #4)
    7150:	cmp	fp, #2
    7154:	beq	7254 <btbb_process_packet@@Base+0x904>
    7158:	bls	7198 <btbb_process_packet@@Base+0x848>
    715c:	cmp	fp, #3
    7160:	beq	72e0 <btbb_process_packet@@Base+0x990>
    7164:	cmp	fp, #6
    7168:	bne	72f0 <btbb_process_packet@@Base+0x9a0>
    716c:	ldr	r0, [pc, #616]	; 73dc <btbb_process_packet@@Base+0xa8c>
    7170:	sub	r4, r4, #1
    7174:	add	r0, pc, r0
    7178:	bl	22bc <puts@plt>
    717c:	ands	r3, r4, #15
    7180:	beq	7478 <btbb_process_packet@@Base+0xb28>
    7184:	ldr	r0, [pc, #596]	; 73e0 <btbb_process_packet@@Base+0xa90>
    7188:	mov	r1, r4
    718c:	add	r0, pc, r0
    7190:	bl	2100 <printf@plt>
    7194:	b	708c <btbb_process_packet@@Base+0x73c>
    7198:	cmp	fp, #1
    719c:	bne	72f0 <btbb_process_packet@@Base+0x9a0>
    71a0:	ldr	r0, [pc, #572]	; 73e4 <btbb_process_packet@@Base+0xa94>
    71a4:	mov	r6, #7
    71a8:	ldr	r4, [pc, #568]	; 73e8 <btbb_process_packet@@Base+0xa98>
    71ac:	add	r0, pc, r0
    71b0:	bl	22bc <puts@plt>
    71b4:	ldr	r0, [pc, #560]	; 73ec <btbb_process_packet@@Base+0xa9c>
    71b8:	add	r4, pc, r4
    71bc:	add	r0, pc, r0
    71c0:	bl	2100 <printf@plt>
    71c4:	ldr	r3, [sp, #4]
    71c8:	add	fp, r3, #2
    71cc:	add	fp, r7, fp
    71d0:	ldrb	r1, [fp]
    71d4:	mov	r0, r4
    71d8:	asr	r1, r1, r6
    71dc:	sub	r6, r6, #1
    71e0:	and	r1, r1, #1
    71e4:	bl	2100 <printf@plt>
    71e8:	cmn	r6, #1
    71ec:	bne	71d0 <btbb_process_packet@@Base+0x880>
    71f0:	ldr	r6, [pc, #504]	; 73f0 <btbb_process_packet@@Base+0xaa0>
    71f4:	mov	r0, #10
    71f8:	mov	sl, #0
    71fc:	bl	23d0 <putchar@plt>
    7200:	ldr	r4, [pc, #492]	; 73f4 <btbb_process_packet@@Base+0xaa4>
    7204:	add	r6, pc, r6
    7208:	add	r4, pc, r4
    720c:	b	721c <btbb_process_packet@@Base+0x8cc>
    7210:	add	sl, sl, #1
    7214:	cmp	sl, #8
    7218:	beq	7248 <btbb_process_packet@@Base+0x8f8>
    721c:	ldrb	r3, [fp]
    7220:	asr	r3, r3, sl
    7224:	tst	r3, #1
    7228:	beq	7210 <btbb_process_packet@@Base+0x8c0>
    722c:	mov	r0, r6
    7230:	bl	2100 <printf@plt>
    7234:	ldr	r0, [r4, sl, lsl #2]
    7238:	add	sl, sl, #1
    723c:	bl	22bc <puts@plt>
    7240:	cmp	sl, #8
    7244:	bne	721c <btbb_process_packet@@Base+0x8cc>
    7248:	mov	r0, #10
    724c:	bl	23d0 <putchar@plt>
    7250:	b	708c <btbb_process_packet@@Base+0x73c>
    7254:	ldr	r0, [pc, #412]	; 73f8 <btbb_process_packet@@Base+0xaa8>
    7258:	add	r0, pc, r0
    725c:	bl	22bc <puts@plt>
    7260:	sub	r3, r4, #1
    7264:	tst	r3, #1
    7268:	bne	708c <btbb_process_packet@@Base+0x73c>
    726c:	cmp	r3, #0
    7270:	beq	708c <btbb_process_packet@@Base+0x73c>
    7274:	ldr	sl, [pc, #384]	; 73fc <btbb_process_packet@@Base+0xaac>
    7278:	sub	r3, r4, #2
    727c:	add	r4, r7, #2
    7280:	add	r4, r4, r6
    7284:	bic	r3, r3, #1
    7288:	add	r4, r4, r3
    728c:	add	r6, r7, r6
    7290:	add	sl, pc, sl
    7294:	ldrh	r1, [r6, #2]!
    7298:	mov	r0, sl
    729c:	bl	2100 <printf@plt>
    72a0:	cmp	r4, r6
    72a4:	bne	7294 <btbb_process_packet@@Base+0x944>
    72a8:	b	708c <btbb_process_packet@@Base+0x73c>
    72ac:	ldr	r0, [pc, #332]	; 7400 <btbb_process_packet@@Base+0xab0>
    72b0:	add	r0, pc, r0
    72b4:	bl	22bc <puts@plt>
    72b8:	ldr	r0, [pc, #324]	; 7404 <btbb_process_packet@@Base+0xab4>
    72bc:	add	r0, pc, r0
    72c0:	bl	2100 <printf@plt>
    72c4:	cmp	r4, #5
    72c8:	beq	76dc <btbb_process_packet@@Base+0xd8c>
    72cc:	ldr	r0, [pc, #308]	; 7408 <btbb_process_packet@@Base+0xab8>
    72d0:	sub	r1, r4, #1
    72d4:	add	r0, pc, r0
    72d8:	bl	2100 <printf@plt>
    72dc:	b	708c <btbb_process_packet@@Base+0x73c>
    72e0:	ldr	r0, [pc, #292]	; 740c <btbb_process_packet@@Base+0xabc>
    72e4:	add	r0, pc, r0
    72e8:	bl	22bc <puts@plt>
    72ec:	b	7260 <btbb_process_packet@@Base+0x910>
    72f0:	mov	r0, #10
    72f4:	bl	23d0 <putchar@plt>
    72f8:	ldr	r0, [pc, #272]	; 7410 <btbb_process_packet@@Base+0xac0>
    72fc:	add	r0, pc, r0
    7300:	bl	2100 <printf@plt>
    7304:	cmp	r4, #1
    7308:	beq	7248 <btbb_process_packet@@Base+0x8f8>
    730c:	ldr	r6, [pc, #256]	; 7414 <btbb_process_packet@@Base+0xac4>
    7310:	add	r4, r4, sl
    7314:	add	sl, sl, #1
    7318:	add	r4, r7, r4
    731c:	add	sl, r7, sl
    7320:	add	r6, pc, r6
    7324:	ldrb	r1, [sl], #1
    7328:	mov	r0, r6
    732c:	bl	2100 <printf@plt>
    7330:	cmp	r4, sl
    7334:	bne	7324 <btbb_process_packet@@Base+0x9d4>
    7338:	mov	r0, #10
    733c:	bl	23d0 <putchar@plt>
    7340:	b	708c <btbb_process_packet@@Base+0x73c>
    7344:	ldr	r0, [pc, #204]	; 7418 <btbb_process_packet@@Base+0xac8>
    7348:	add	r0, pc, r0
    734c:	bl	22bc <puts@plt>
    7350:	ldr	r0, [pc, #196]	; 741c <btbb_process_packet@@Base+0xacc>
    7354:	add	r0, pc, r0
    7358:	bl	2100 <printf@plt>
    735c:	cmp	r4, #1
    7360:	beq	7248 <btbb_process_packet@@Base+0x8f8>
    7364:	add	r4, r4, sl
    7368:	add	sl, sl, #1
    736c:	bl	2310 <__ctype_b_loc@plt>
    7370:	mov	r6, r0
    7374:	add	r4, r7, r4
    7378:	add	sl, r7, sl
    737c:	ldrb	r0, [sl], #1
    7380:	ldr	r2, [r6]
    7384:	lsl	r3, r0, #1
    7388:	ldrh	r3, [r2, r3]
    738c:	tst	r3, #16384	; 0x4000
    7390:	moveq	r0, #46	; 0x2e
    7394:	bl	23d0 <putchar@plt>
    7398:	cmp	r4, sl
    739c:	bne	737c <btbb_process_packet@@Base+0xa2c>
    73a0:	mov	r0, #10
    73a4:	bl	23d0 <putchar@plt>
    73a8:	b	708c <btbb_process_packet@@Base+0x73c>
    73ac:	nop	{0}
    73b0:	andeq	r0, r0, r0
    73b4:	svccc	0x00f40000
    73b8:	andeq	fp, r0, r8, lsl #14
    73bc:	ldrdeq	fp, [r0], -r4
    73c0:	andeq	fp, r0, r0, lsr #14
    73c4:	strdeq	fp, [r0], -r8
    73c8:	strdeq	fp, [r0], -r4
    73cc:	strdeq	fp, [r0], -r0
    73d0:	andeq	fp, r0, r4, ror #12
    73d4:	andeq	fp, r0, r0, asr #16
    73d8:	strdeq	fp, [r0], -ip
    73dc:	andeq	fp, r0, r0, asr r6
    73e0:	andeq	fp, r0, r8, lsl #13
    73e4:	andeq	fp, r0, r0, lsr #11
    73e8:	andeq	fp, r0, r0, lsr #11
    73ec:	andeq	fp, r0, r4, lsr #11
    73f0:	andeq	fp, r0, r8, asr r5
    73f4:	andeq	r1, r2, r8, asr #24
    73f8:	andeq	fp, r0, r4, lsl r5
    73fc:	andeq	fp, r0, r0, lsr #10
    7400:	andeq	fp, r0, r4, ror #11
    7404:	andeq	fp, r0, r4, lsr #9
    7408:	strdeq	fp, [r0], -ip
    740c:			; <UNDEFINED> instruction: 0x0000b4b0
    7410:	andeq	fp, r0, r4, ror #8
    7414:	andeq	fp, r0, r4, lsr #8
    7418:	strdeq	fp, [r0], -r8
    741c:	andeq	fp, r0, ip, lsl #8
    7420:	andeq	fp, r0, r8, lsl #7
    7424:	andeq	fp, r0, ip, ror #6
    7428:	andeq	fp, r0, ip, lsr #6
    742c:	muleq	r0, r0, r1
    7430:	andeq	fp, r0, r0, lsl r3
    7434:	andeq	fp, r0, r8, lsr #2
    7438:	andeq	fp, r0, ip, ror #5
    743c:	ldrdeq	fp, [r0], -r0
    7440:	muleq	r0, r0, r0
    7444:	andeq	fp, r0, r4, asr #32
    7448:	muleq	r0, ip, r1
    744c:	andeq	fp, r0, ip, asr #3
    7450:	andeq	fp, r0, r8, lsr #3
    7454:	andeq	fp, r0, r8, lsl #4
    7458:	andeq	fp, r0, r4, lsl #4
    745c:			; <UNDEFINED> instruction: 0x0000afb4
    7460:	ldr	r0, [pc, #-72]	; 7420 <btbb_process_packet@@Base+0xad0>
    7464:	sub	r4, r4, #1
    7468:	add	r0, pc, r0
    746c:	bl	22bc <puts@plt>
    7470:	ands	r3, r4, #15
    7474:	bne	7184 <btbb_process_packet@@Base+0x834>
    7478:	cmp	r4, #0
    747c:	beq	708c <btbb_process_packet@@Base+0x73c>
    7480:	ldr	r1, [pc, #-100]	; 7424 <btbb_process_packet@@Base+0xad4>
    7484:	add	r2, r7, r6
    7488:	add	r6, r6, #2
    748c:	mov	fp, r4
    7490:	add	r6, r7, r6
    7494:	str	r5, [sp, #20]
    7498:	ldrb	r2, [r2, #2]
    749c:	mov	r4, r3
    74a0:	add	r1, pc, r1
    74a4:	str	r1, [sp, #16]
    74a8:	strb	r2, [sp, #39]	; 0x27
    74ac:	add	r4, r4, #1
    74b0:	cmp	fp, r4
    74b4:	beq	75b8 <btbb_process_packet@@Base+0xc68>
    74b8:	ldrb	r0, [r6, #1]!
    74bc:	and	r2, r4, #15
    74c0:	add	r3, sp, #24
    74c4:	mvn	r1, r2
    74c8:	cmp	r2, #15
    74cc:	add	r2, r1, #16
    74d0:	strb	r0, [r3, r2]
    74d4:	bne	74ac <btbb_process_packet@@Base+0xb5c>
    74d8:	ldr	r0, [sp, #12]
    74dc:	add	r5, sp, #33	; 0x21
    74e0:	add	sl, sp, #39	; 0x27
    74e4:	bl	2100 <printf@plt>
    74e8:	ldrb	r1, [sp, #24]
    74ec:	mov	r0, r9
    74f0:	bl	2100 <printf@plt>
    74f4:	ldrb	r1, [sp, #25]
    74f8:	mov	r0, r9
    74fc:	bl	2100 <printf@plt>
    7500:	ldrb	r1, [sp, #26]
    7504:	mov	r0, r9
    7508:	bl	2100 <printf@plt>
    750c:	ldrb	r1, [sp, #27]
    7510:	mov	r0, r9
    7514:	bl	2100 <printf@plt>
    7518:	mov	r0, #45	; 0x2d
    751c:	bl	23d0 <putchar@plt>
    7520:	ldrb	r1, [sp, #28]
    7524:	mov	r0, r9
    7528:	bl	2100 <printf@plt>
    752c:	ldrb	r1, [sp, #29]
    7530:	mov	r0, r9
    7534:	bl	2100 <printf@plt>
    7538:	mov	r0, #45	; 0x2d
    753c:	bl	23d0 <putchar@plt>
    7540:	ldrb	r1, [sp, #30]
    7544:	mov	r0, r9
    7548:	bl	2100 <printf@plt>
    754c:	ldrb	r1, [sp, #31]
    7550:	mov	r0, r9
    7554:	bl	2100 <printf@plt>
    7558:	mov	r0, #45	; 0x2d
    755c:	bl	23d0 <putchar@plt>
    7560:	ldrb	r1, [sp, #32]
    7564:	mov	r0, r9
    7568:	bl	2100 <printf@plt>
    756c:	ldrb	r1, [sp, #33]	; 0x21
    7570:	mov	r0, r9
    7574:	bl	2100 <printf@plt>
    7578:	mov	r0, #45	; 0x2d
    757c:	bl	23d0 <putchar@plt>
    7580:	str	r4, [sp, #4]
    7584:	mov	r4, r5
    7588:	ldr	r5, [sp, #16]
    758c:	mov	r0, r5
    7590:	ldrb	r1, [r4, #1]!
    7594:	bl	2100 <printf@plt>
    7598:	cmp	sl, r4
    759c:	bne	758c <btbb_process_packet@@Base+0xc3c>
    75a0:	ldr	r4, [sp, #4]
    75a4:	mov	r0, #10
    75a8:	bl	23d0 <putchar@plt>
    75ac:	add	r4, r4, #1
    75b0:	cmp	fp, r4
    75b4:	bne	74b8 <btbb_process_packet@@Base+0xb68>
    75b8:	ldr	r5, [sp, #20]
    75bc:	b	708c <btbb_process_packet@@Base+0x73c>
    75c0:	ldr	r0, [pc, #-416]	; 7428 <btbb_process_packet@@Base+0xad8>
    75c4:	add	r0, pc, r0
    75c8:	bl	22bc <puts@plt>
    75cc:	ldr	r0, [pc, #-424]	; 742c <btbb_process_packet@@Base+0xadc>
    75d0:	add	r0, pc, r0
    75d4:	bl	2100 <printf@plt>
    75d8:	cmp	r4, #2
    75dc:	ble	7644 <btbb_process_packet@@Base+0xcf4>
    75e0:	ldr	r3, [sp, #4]
    75e4:	ldr	r0, [pc, #-444]	; 7430 <btbb_process_packet@@Base+0xae0>
    75e8:	add	fp, r7, r3
    75ec:	ldrb	r1, [fp, #3]
    75f0:	add	r0, pc, r0
    75f4:	ldrb	r3, [fp, #2]
    75f8:	orr	r1, r3, r1, lsl #8
    75fc:	bl	2100 <printf@plt>
    7600:	cmp	r4, #3
    7604:	beq	7248 <btbb_process_packet@@Base+0x8f8>
    7608:	ldr	fp, [pc, #-476]	; 7434 <btbb_process_packet@@Base+0xae4>
    760c:	add	r6, r7, sl
    7610:	add	sl, sl, #3
    7614:	add	sl, r7, sl
    7618:	ldr	r0, [pc, #-488]	; 7438 <btbb_process_packet@@Base+0xae8>
    761c:	add	fp, pc, fp
    7620:	add	r0, pc, r0
    7624:	bl	2100 <printf@plt>
    7628:	ldrb	r1, [sl], #1
    762c:	mov	r0, fp
    7630:	bl	2100 <printf@plt>
    7634:	sub	r3, sl, r6
    7638:	cmp	r4, r3
    763c:	bgt	7628 <btbb_process_packet@@Base+0xcd8>
    7640:	b	7248 <btbb_process_packet@@Base+0x8f8>
    7644:	ldr	r0, [pc, #-528]	; 743c <btbb_process_packet@@Base+0xaec>
    7648:	sub	r1, r4, #1
    764c:	add	r0, pc, r0
    7650:	bl	2100 <printf@plt>
    7654:	b	708c <btbb_process_packet@@Base+0x73c>
    7658:	mov	sl, #1
    765c:	ldr	r0, [pc, #-548]	; 7440 <btbb_process_packet@@Base+0xaf0>
    7660:	mov	r3, r8
    7664:	mov	r2, r4
    7668:	mov	r1, sl
    766c:	add	r0, pc, r0
    7670:	add	sp, sp, #44	; 0x2c
    7674:	vpop	{d8}
    7678:	ldrd	r4, [sp]
    767c:	ldrd	r6, [sp, #8]
    7680:	ldrd	r8, [sp, #16]
    7684:	ldrd	sl, [sp, #24]
    7688:	ldr	lr, [sp, #32]
    768c:	add	sp, sp, #36	; 0x24
    7690:	b	2100 <printf@plt>
    7694:	ldr	r0, [pc, #-600]	; 7444 <btbb_process_packet@@Base+0xaf4>
    7698:	add	r0, pc, r0
    769c:	add	sp, sp, #44	; 0x2c
    76a0:	vpop	{d8}
    76a4:	ldrd	r4, [sp]
    76a8:	ldrd	r6, [sp, #8]
    76ac:	ldrd	r8, [sp, #16]
    76b0:	ldrd	sl, [sp, #24]
    76b4:	ldr	lr, [sp, #32]
    76b8:	add	sp, sp, #36	; 0x24
    76bc:	b	22bc <puts@plt>
    76c0:	ldr	r3, [sp, #4]
    76c4:	ldr	r0, [pc, #-644]	; 7448 <btbb_process_packet@@Base+0xaf8>
    76c8:	add	fp, r7, r3
    76cc:	ldrb	r1, [fp, #2]
    76d0:	add	r0, pc, r0
    76d4:	bl	2100 <printf@plt>
    76d8:	b	708c <btbb_process_packet@@Base+0x73c>
    76dc:	ldr	r3, [sp, #4]
    76e0:	ldr	r0, [pc, #-668]	; 744c <btbb_process_packet@@Base+0xafc>
    76e4:	add	fp, r7, r3
    76e8:	ldrb	r2, [fp, #3]
    76ec:	add	r0, pc, r0
    76f0:	ldrb	r3, [fp, #2]
    76f4:	orr	r3, r3, r2, lsl #8
    76f8:	vmov	s15, r3
    76fc:	vcvt.f64.s32	d7, s15
    7700:	vmul.f64	d7, d7, d8
    7704:	vmov	r2, r3, d7
    7708:	bl	2100 <printf@plt>
    770c:	ldrb	r2, [fp, #5]
    7710:	ldrb	r3, [fp, #4]
    7714:	ldr	r0, [pc, #-716]	; 7450 <btbb_process_packet@@Base+0xb00>
    7718:	orr	r3, r3, r2, lsl #8
    771c:	add	r0, pc, r0
    7720:	vmov	s15, r3
    7724:	vcvt.f64.s32	d7, s15
    7728:	vmul.f64	d7, d7, d8
    772c:	vmov	r2, r3, d7
    7730:	bl	2100 <printf@plt>
    7734:	b	708c <btbb_process_packet@@Base+0x73c>
    7738:	ldr	r3, [sp, #4]
    773c:	add	fp, r7, r3
    7740:	ldrb	r3, [fp, #2]
    7744:	ldrb	r0, [fp, #3]
    7748:	orr	r0, r3, r0, lsl #8
    774c:	bl	240c <bt_compidtostr@plt>
    7750:	mov	r1, r0
    7754:	ldr	r0, [pc, #-776]	; 7454 <btbb_process_packet@@Base+0xb04>
    7758:	add	r0, pc, r0
    775c:	bl	2100 <printf@plt>
    7760:	mov	r0, r6
    7764:	bl	2100 <printf@plt>
    7768:	ldr	r0, [pc, #-792]	; 7458 <btbb_process_packet@@Base+0xb08>
    776c:	add	r0, pc, r0
    7770:	bl	2100 <printf@plt>
    7774:	cmp	r4, #3
    7778:	beq	7248 <btbb_process_packet@@Base+0x8f8>
    777c:	ldr	r6, [pc, #-808]	; 745c <btbb_process_packet@@Base+0xb0c>
    7780:	add	r4, r4, sl
    7784:	add	sl, sl, #3
    7788:	add	r4, r7, r4
    778c:	add	sl, r7, sl
    7790:	add	r6, pc, r6
    7794:	ldrb	r1, [sl], #1
    7798:	mov	r0, r6
    779c:	bl	2100 <printf@plt>
    77a0:	cmp	r4, sl
    77a4:	bne	7794 <btbb_process_packet@@Base+0xe44>
    77a8:	mov	r0, #10
    77ac:	bl	23d0 <putchar@plt>
    77b0:	b	708c <btbb_process_packet@@Base+0x73c>

000077b4 <lell_packet_new@@Base>:
    77b4:	mov	r1, #104	; 0x68
    77b8:	mov	r0, #1
    77bc:	str	r4, [sp, #-8]!
    77c0:	str	lr, [sp, #4]
    77c4:	bl	20ac <calloc@plt>
    77c8:	mov	r3, #1
    77cc:	ldr	r4, [sp]
    77d0:	add	sp, sp, #4
    77d4:	str	r3, [r0, #96]	; 0x60
    77d8:	pop	{pc}		; (ldr pc, [sp], #4)

000077dc <lell_packet_ref@@Base>:
    77dc:	ldr	r3, [r0, #96]	; 0x60
    77e0:	add	r3, r3, #1
    77e4:	str	r3, [r0, #96]	; 0x60
    77e8:	bx	lr

000077ec <lell_packet_unref@@Base>:
    77ec:	ldr	r3, [r0, #96]	; 0x60
    77f0:	subs	r3, r3, #1
    77f4:	beq	7800 <lell_packet_unref@@Base+0x14>
    77f8:	str	r3, [r0, #96]	; 0x60
    77fc:	bx	lr
    7800:	b	2148 <free@plt>

00007804 <lell_packet_is_data@@Base>:
    7804:	ldrb	r0, [r0, #68]	; 0x44
    7808:	cmp	r0, #36	; 0x24
    780c:	movhi	r0, #0
    7810:	movls	r0, #1
    7814:	bx	lr

00007818 <lell_allocate_and_decode@@Base>:
    7818:	strd	r4, [sp, #-24]!	; 0xffffffe8
    781c:	mov	r4, r0
    7820:	mov	r5, r1
    7824:	strd	r6, [sp, #8]
    7828:	mov	r6, r3
    782c:	mov	r7, r2
    7830:	str	r8, [sp, #16]
    7834:	str	lr, [sp, #20]
    7838:	bl	2400 <lell_packet_new@plt>
    783c:	mov	lr, r0
    7840:	mov	ip, r4
    7844:	str	r0, [r6]
    7848:	add	r4, r4, #64	; 0x40
    784c:	ldr	r0, [ip]
    7850:	add	ip, ip, #16
    7854:	add	lr, lr, #16
    7858:	ldr	r1, [ip, #-12]
    785c:	ldr	r2, [ip, #-8]
    7860:	ldr	r3, [ip, #-4]
    7864:	cmp	ip, r4
    7868:	str	r0, [lr, #-16]
    786c:	str	r1, [lr, #-12]
    7870:	str	r2, [lr, #-8]
    7874:	str	r3, [lr, #-4]
    7878:	bne	784c <lell_allocate_and_decode@@Base+0x34>
    787c:	movw	r3, #2402	; 0x962
    7880:	ldr	r1, [r6]
    7884:	cmp	r5, r3
    7888:	beq	79dc <lell_allocate_and_decode@@Base+0x1c4>
    788c:	movw	r3, #2425	; 0x979
    7890:	cmp	r5, r3
    7894:	bhi	7974 <lell_allocate_and_decode@@Base+0x15c>
    7898:	sub	r5, r5, #2400	; 0x960
    789c:	sub	r3, r5, #4
    78a0:	add	r3, r3, r3, lsr #31
    78a4:	ubfx	r3, r3, #1, #8
    78a8:	sub	r5, r5, #2
    78ac:	ldr	r2, [r1]
    78b0:	mov	r0, r1
    78b4:	add	r5, r5, r5, lsr #31
    78b8:	asr	r5, r5, #1
    78bc:	str	r2, [r1, #64]	; 0x40
    78c0:	strb	r3, [r1, #68]	; 0x44
    78c4:	strb	r5, [r1, #69]	; 0x45
    78c8:	str	r7, [r1, #76]	; 0x4c
    78cc:	bl	2118 <lell_packet_is_data@plt>
    78d0:	cmp	r0, #0
    78d4:	bne	79a8 <lell_allocate_and_decode@@Base+0x190>
    78d8:	ldr	ip, [r6]
    78dc:	movw	r4, #48854	; 0xbed6
    78e0:	movt	r4, #36489	; 0x8e89
    78e4:	ldr	r3, [ip, #64]	; 0x40
    78e8:	ldrb	r2, [ip, #4]
    78ec:	ldrb	lr, [ip, #100]	; 0x64
    78f0:	sub	r1, r3, r4
    78f4:	ldrb	r5, [ip, #5]
    78f8:	clz	r1, r1
    78fc:	lsr	r1, r1, #5
    7900:	and	r6, r2, #15
    7904:	ubfx	r7, r2, #6, #1
    7908:	bfi	lr, r1, #0, #1
    790c:	strb	r6, [ip, #80]	; 0x50
    7910:	lsr	r1, r2, #7
    7914:	and	r5, r5, #63	; 0x3f
    7918:	ands	r2, lr, #1
    791c:	str	r5, [ip, #72]	; 0x48
    7920:	str	r7, [ip, #84]	; 0x54
    7924:	str	r1, [ip, #88]	; 0x58
    7928:	strb	lr, [ip, #100]	; 0x64
    792c:	bne	795c <lell_allocate_and_decode@@Base+0x144>
    7930:	cmp	r3, r4
    7934:	eor	r3, r3, r4
    7938:	beq	7a00 <lell_allocate_and_decode@@Base+0x1e8>
    793c:	sub	r1, r3, #1
    7940:	add	r2, r2, #1
    7944:	ands	r3, r3, r1
    7948:	uxtb	r2, r2
    794c:	bne	793c <lell_allocate_and_decode@@Base+0x124>
    7950:	cmp	r2, #1
    7954:	movne	r0, #32
    7958:	moveq	r0, #1
    795c:	str	r0, [ip, #92]	; 0x5c
    7960:	ldrd	r4, [sp]
    7964:	ldrd	r6, [sp, #8]
    7968:	ldr	r8, [sp, #16]
    796c:	add	sp, sp, #20
    7970:	pop	{pc}		; (ldr pc, [sp], #4)
    7974:	movw	r3, #2426	; 0x97a
    7978:	cmp	r5, r3
    797c:	beq	79f4 <lell_allocate_and_decode@@Base+0x1dc>
    7980:	cmp	r5, #2480	; 0x9b0
    7984:	bcs	79e8 <lell_allocate_and_decode@@Base+0x1d0>
    7988:	sub	r3, r5, #2416	; 0x970
    798c:	sub	r5, r5, #2400	; 0x960
    7990:	sub	r3, r3, #12
    7994:	add	r3, r3, r3, lsr #31
    7998:	asr	r3, r3, #1
    799c:	add	r3, r3, #11
    79a0:	uxtb	r3, r3
    79a4:	b	78a8 <lell_allocate_and_decode@@Base+0x90>
    79a8:	ldr	r4, [r6]
    79ac:	ldrb	r3, [r4, #5]
    79b0:	ldr	r0, [r4, #64]	; 0x40
    79b4:	and	r3, r3, #31
    79b8:	str	r3, [r4, #72]	; 0x48
    79bc:	bl	6af0 <btbb_process_packet@@Base+0x1a0>
    79c0:	ldrb	r2, [r4, #100]	; 0x64
    79c4:	clz	r3, r0
    79c8:	lsr	r3, r3, #5
    79cc:	str	r0, [r4, #92]	; 0x5c
    79d0:	bfi	r2, r3, #0, #1
    79d4:	strb	r2, [r4, #100]	; 0x64
    79d8:	b	7960 <lell_allocate_and_decode@@Base+0x148>
    79dc:	mov	r3, #37	; 0x25
    79e0:	mov	r5, #2
    79e4:	b	78a8 <lell_allocate_and_decode@@Base+0x90>
    79e8:	sub	r5, r5, #2400	; 0x960
    79ec:	mov	r3, #39	; 0x27
    79f0:	b	78a8 <lell_allocate_and_decode@@Base+0x90>
    79f4:	mov	r3, #38	; 0x26
    79f8:	mov	r5, #26
    79fc:	b	78a8 <lell_allocate_and_decode@@Base+0x90>
    7a00:	mov	r0, #32
    7a04:	b	795c <lell_allocate_and_decode@@Base+0x144>

00007a08 <lell_get_access_address@@Base>:
    7a08:	ldr	r0, [r0, #64]	; 0x40
    7a0c:	bx	lr

00007a10 <lell_get_access_address_offenses@@Base>:
    7a10:	ldr	r0, [r0, #92]	; 0x5c
    7a14:	bx	lr

00007a18 <lell_get_channel_index@@Base>:
    7a18:	ldrb	r0, [r0, #68]	; 0x44
    7a1c:	bx	lr

00007a20 <lell_get_channel_k@@Base>:
    7a20:	ldrb	r0, [r0, #69]	; 0x45
    7a24:	bx	lr

00007a28 <lell_get_adv_type_str@@Base>:
    7a28:	str	r4, [sp, #-8]!
    7a2c:	mov	r4, r0
    7a30:	str	lr, [sp, #4]
    7a34:	bl	2118 <lell_packet_is_data@plt>
    7a38:	cmp	r0, #0
    7a3c:	movne	r0, #0
    7a40:	bne	7a58 <lell_get_adv_type_str@@Base+0x30>
    7a44:	ldrb	r3, [r4, #80]	; 0x50
    7a48:	cmp	r3, #6
    7a4c:	bls	7a64 <lell_get_adv_type_str@@Base+0x3c>
    7a50:	ldr	r0, [pc, #40]	; 7a80 <lell_get_adv_type_str@@Base+0x58>
    7a54:	add	r0, pc, r0
    7a58:	ldr	r4, [sp]
    7a5c:	add	sp, sp, #4
    7a60:	pop	{pc}		; (ldr pc, [sp], #4)
    7a64:	ldr	r2, [pc, #24]	; 7a84 <lell_get_adv_type_str@@Base+0x5c>
    7a68:	ldr	r4, [sp]
    7a6c:	add	sp, sp, #4
    7a70:	add	r2, pc, r2
    7a74:	add	r3, r2, r3, lsl #2
    7a78:	ldr	r0, [r3, #32]
    7a7c:	pop	{pc}		; (ldr pc, [sp], #4)
    7a80:	andeq	sl, r0, r4, lsr #30
    7a84:	andeq	r1, r2, r0, ror #7

00007a88 <lell_print@@Base>:
    7a88:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7a8c:	mov	r4, r0
    7a90:	strd	r6, [sp, #8]
    7a94:	str	r8, [sp, #16]
    7a98:	str	lr, [sp, #20]
    7a9c:	bl	2118 <lell_packet_is_data@plt>
    7aa0:	cmp	r0, #0
    7aa4:	ldrb	r3, [r4, #100]	; 0x64
    7aa8:	beq	7be4 <lell_print@@Base+0x15c>
    7aac:	ldrb	r5, [r4, #4]
    7ab0:	tst	r3, #1
    7ab4:	ldr	r1, [r4, #64]	; 0x40
    7ab8:	and	r5, r5, #3
    7abc:	bne	7c68 <lell_print@@Base+0x1e0>
    7ac0:	ldr	r2, [pc, #1220]	; 7f8c <lell_print@@Base+0x504>
    7ac4:	add	r2, pc, r2
    7ac8:	ldr	r0, [pc, #1216]	; 7f90 <lell_print@@Base+0x508>
    7acc:	ldr	r3, [r4, #72]	; 0x48
    7ad0:	ldr	r6, [pc, #1212]	; 7f94 <lell_print@@Base+0x50c>
    7ad4:	add	r0, pc, r0
    7ad8:	bl	2100 <printf@plt>
    7adc:	ldr	r0, [pc, #1204]	; 7f98 <lell_print@@Base+0x510>
    7ae0:	ldrb	r1, [r4, #68]	; 0x44
    7ae4:	add	r6, pc, r6
    7ae8:	add	r0, pc, r0
    7aec:	bl	2100 <printf@plt>
    7af0:	ldr	r0, [pc, #1188]	; 7f9c <lell_print@@Base+0x514>
    7af4:	add	r3, r6, r5, lsl #2
    7af8:	mov	r1, r5
    7afc:	ldr	r2, [r3, #60]	; 0x3c
    7b00:	add	r0, pc, r0
    7b04:	bl	2100 <printf@plt>
    7b08:	ldrb	r1, [r4, #4]
    7b0c:	ldr	r0, [pc, #1164]	; 7fa0 <lell_print@@Base+0x518>
    7b10:	ubfx	r3, r1, #4, #1
    7b14:	ubfx	r2, r1, #3, #1
    7b18:	add	r0, pc, r0
    7b1c:	ubfx	r1, r1, #2, #1
    7b20:	bl	2100 <printf@plt>
    7b24:	cmp	r5, #3
    7b28:	beq	7f64 <lell_print@@Base+0x4dc>
    7b2c:	mov	r0, #10
    7b30:	bl	23d0 <putchar@plt>
    7b34:	ldr	r0, [pc, #1128]	; 7fa4 <lell_print@@Base+0x51c>
    7b38:	add	r0, pc, r0
    7b3c:	bl	2100 <printf@plt>
    7b40:	ldr	r3, [r4, #72]	; 0x48
    7b44:	cmp	r3, #0
    7b48:	ble	7b84 <lell_print@@Base+0xfc>
    7b4c:	ldr	r7, [pc, #1108]	; 7fa8 <lell_print@@Base+0x520>
    7b50:	add	r5, r4, #5
    7b54:	add	r7, pc, r7
    7b58:	ldrb	r1, [r5, #1]
    7b5c:	mov	r0, r7
    7b60:	add	r6, r5, #1
    7b64:	bl	2100 <printf@plt>
    7b68:	ldr	r2, [r4, #72]	; 0x48
    7b6c:	add	r3, r5, #2
    7b70:	mov	r5, r6
    7b74:	sub	r3, r3, r4
    7b78:	add	r2, r2, #5
    7b7c:	cmp	r2, r3
    7b80:	bge	7b58 <lell_print@@Base+0xd0>
    7b84:	mov	r0, #10
    7b88:	ldr	r6, [pc, #1052]	; 7fac <lell_print@@Base+0x524>
    7b8c:	mov	r5, #0
    7b90:	bl	23d0 <putchar@plt>
    7b94:	ldr	r0, [pc, #1044]	; 7fb0 <lell_print@@Base+0x528>
    7b98:	add	r6, pc, r6
    7b9c:	add	r0, pc, r0
    7ba0:	bl	2100 <printf@plt>
    7ba4:	ldr	r2, [r4, #72]	; 0x48
    7ba8:	add	r3, r4, r5
    7bac:	mov	r0, r6
    7bb0:	add	r5, r5, #1
    7bb4:	add	r3, r3, r2
    7bb8:	ldrb	r1, [r3, #6]
    7bbc:	bl	2100 <printf@plt>
    7bc0:	cmp	r5, #3
    7bc4:	bne	7ba4 <lell_print@@Base+0x11c>
    7bc8:	mov	r0, #10
    7bcc:	ldrd	r4, [sp]
    7bd0:	ldrd	r6, [sp, #8]
    7bd4:	ldr	r8, [sp, #16]
    7bd8:	ldr	lr, [sp, #20]
    7bdc:	add	sp, sp, #24
    7be0:	b	23d0 <putchar@plt>
    7be4:	tst	r3, #1
    7be8:	ldr	r1, [r4, #64]	; 0x40
    7bec:	bne	7c5c <lell_print@@Base+0x1d4>
    7bf0:	ldr	r2, [pc, #956]	; 7fb4 <lell_print@@Base+0x52c>
    7bf4:	add	r2, pc, r2
    7bf8:	ldr	r0, [pc, #952]	; 7fb8 <lell_print@@Base+0x530>
    7bfc:	ldr	r3, [r4, #72]	; 0x48
    7c00:	add	r0, pc, r0
    7c04:	bl	2100 <printf@plt>
    7c08:	ldr	r0, [pc, #940]	; 7fbc <lell_print@@Base+0x534>
    7c0c:	ldrb	r1, [r4, #68]	; 0x44
    7c10:	add	r0, pc, r0
    7c14:	bl	2100 <printf@plt>
    7c18:	mov	r0, r4
    7c1c:	bl	22a4 <lell_get_adv_type_str@plt>
    7c20:	mov	r1, r0
    7c24:	ldr	r0, [pc, #916]	; 7fc0 <lell_print@@Base+0x538>
    7c28:	add	r0, pc, r0
    7c2c:	bl	2100 <printf@plt>
    7c30:	ldrb	r3, [r4, #80]	; 0x50
    7c34:	cmp	r3, #6
    7c38:	addls	pc, pc, r3, lsl #2
    7c3c:	b	7b2c <lell_print@@Base+0xa4>
    7c40:	b	7eb8 <lell_print@@Base+0x430>
    7c44:	b	7f30 <lell_print@@Base+0x4a8>
    7c48:	b	7eb8 <lell_print@@Base+0x430>
    7c4c:	b	7e84 <lell_print@@Base+0x3fc>
    7c50:	b	7e00 <lell_print@@Base+0x378>
    7c54:	b	7c74 <lell_print@@Base+0x1ec>
    7c58:	b	7eb8 <lell_print@@Base+0x430>
    7c5c:	ldr	r2, [pc, #864]	; 7fc4 <lell_print@@Base+0x53c>
    7c60:	add	r2, pc, r2
    7c64:	b	7bf8 <lell_print@@Base+0x170>
    7c68:	ldr	r2, [pc, #856]	; 7fc8 <lell_print@@Base+0x540>
    7c6c:	add	r2, pc, r2
    7c70:	b	7ac8 <lell_print@@Base+0x40>
    7c74:	ldr	r0, [pc, #848]	; 7fcc <lell_print@@Base+0x544>
    7c78:	mov	r2, #6
    7c7c:	mov	r1, r4
    7c80:	add	r5, r4, #34	; 0x22
    7c84:	add	r7, r4, #39	; 0x27
    7c88:	ldr	r3, [r4, #84]	; 0x54
    7c8c:	ldr	r6, [pc, #828]	; 7fd0 <lell_print@@Base+0x548>
    7c90:	add	r0, pc, r0
    7c94:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7c98:	ldr	r0, [pc, #820]	; 7fd4 <lell_print@@Base+0x54c>
    7c9c:	mov	r2, #12
    7ca0:	mov	r1, r4
    7ca4:	ldr	r3, [r4, #88]	; 0x58
    7ca8:	add	r6, pc, r6
    7cac:	add	r0, pc, r0
    7cb0:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7cb4:	ldr	r1, [pc, #796]	; 7fd8 <lell_print@@Base+0x550>
    7cb8:	ldr	r0, [pc, #796]	; 7fdc <lell_print@@Base+0x554>
    7cbc:	ldr	r2, [r4, #18]
    7cc0:	add	r1, pc, r1
    7cc4:	add	r0, pc, r0
    7cc8:	bl	2100 <printf@plt>
    7ccc:	ldrb	r3, [r4, #23]
    7cd0:	ldrb	r0, [r4, #24]
    7cd4:	ldrb	r2, [r4, #22]
    7cd8:	lsl	r3, r3, #8
    7cdc:	ldr	r1, [pc, #764]	; 7fe0 <lell_print@@Base+0x558>
    7ce0:	orr	r3, r3, r0, lsl #16
    7ce4:	ldr	r0, [pc, #760]	; 7fe4 <lell_print@@Base+0x55c>
    7ce8:	orr	r2, r3, r2
    7cec:	add	r1, pc, r1
    7cf0:	add	r0, pc, r0
    7cf4:	bl	2100 <printf@plt>
    7cf8:	ldrb	r3, [r4, #25]
    7cfc:	ldr	r1, [pc, #740]	; 7fe8 <lell_print@@Base+0x560>
    7d00:	ldr	r0, [pc, #740]	; 7fec <lell_print@@Base+0x564>
    7d04:	mov	r2, r3
    7d08:	add	r1, pc, r1
    7d0c:	add	r0, pc, r0
    7d10:	bl	2100 <printf@plt>
    7d14:	ldrb	r2, [r4, #27]
    7d18:	mov	r0, r6
    7d1c:	ldrb	r3, [r4, #26]
    7d20:	ldr	r1, [pc, #712]	; 7ff0 <lell_print@@Base+0x568>
    7d24:	orr	r3, r3, r2, lsl #8
    7d28:	add	r1, pc, r1
    7d2c:	mov	r2, r3
    7d30:	bl	2100 <printf@plt>
    7d34:	ldrb	r2, [r4, #29]
    7d38:	mov	r0, r6
    7d3c:	ldrb	r3, [r4, #28]
    7d40:	ldr	r1, [pc, #684]	; 7ff4 <lell_print@@Base+0x56c>
    7d44:	orr	r3, r3, r2, lsl #8
    7d48:	add	r1, pc, r1
    7d4c:	mov	r2, r3
    7d50:	bl	2100 <printf@plt>
    7d54:	ldrb	r2, [r4, #31]
    7d58:	mov	r0, r6
    7d5c:	ldrb	r3, [r4, #30]
    7d60:	ldr	r1, [pc, #656]	; 7ff8 <lell_print@@Base+0x570>
    7d64:	orr	r3, r3, r2, lsl #8
    7d68:	add	r1, pc, r1
    7d6c:	mov	r2, r3
    7d70:	bl	2100 <printf@plt>
    7d74:	ldrb	r2, [r4, #33]	; 0x21
    7d78:	mov	r0, r6
    7d7c:	ldrb	r3, [r4, #32]
    7d80:	ldr	r1, [pc, #628]	; 7ffc <lell_print@@Base+0x574>
    7d84:	ldr	r6, [pc, #628]	; 8000 <lell_print@@Base+0x578>
    7d88:	orr	r3, r3, r2, lsl #8
    7d8c:	add	r1, pc, r1
    7d90:	mov	r2, r3
    7d94:	bl	2100 <printf@plt>
    7d98:	ldr	r0, [pc, #612]	; 8004 <lell_print@@Base+0x57c>
    7d9c:	add	r6, pc, r6
    7da0:	add	r0, pc, r0
    7da4:	bl	2100 <printf@plt>
    7da8:	ldrb	r1, [r5], #1
    7dac:	mov	r0, r6
    7db0:	bl	2100 <printf@plt>
    7db4:	cmp	r5, r7
    7db8:	bne	7da8 <lell_print@@Base+0x320>
    7dbc:	mov	r0, #10
    7dc0:	bl	23d0 <putchar@plt>
    7dc4:	ldrb	r1, [r4, #39]	; 0x27
    7dc8:	ldr	r0, [pc, #568]	; 8008 <lell_print@@Base+0x580>
    7dcc:	and	r1, r1, #31
    7dd0:	add	r0, pc, r0
    7dd4:	bl	2100 <printf@plt>
    7dd8:	ldrb	r1, [r4, #39]	; 0x27
    7ddc:	ldr	r3, [pc, #552]	; 800c <lell_print@@Base+0x584>
    7de0:	ldr	r0, [pc, #552]	; 8010 <lell_print@@Base+0x588>
    7de4:	lsr	r1, r1, #5
    7de8:	add	r3, pc, r3
    7dec:	add	r3, r3, r1, lsl #2
    7df0:	add	r0, pc, r0
    7df4:	ldr	r2, [r3, #160]	; 0xa0
    7df8:	bl	2100 <printf@plt>
    7dfc:	b	7b2c <lell_print@@Base+0xa4>
    7e00:	ldr	r0, [pc, #524]	; 8014 <lell_print@@Base+0x58c>
    7e04:	mov	r2, #6
    7e08:	mov	r1, r4
    7e0c:	ldr	r3, [r4, #84]	; 0x54
    7e10:	add	r0, pc, r0
    7e14:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7e18:	ldr	r0, [pc, #504]	; 8018 <lell_print@@Base+0x590>
    7e1c:	add	r0, pc, r0
    7e20:	bl	2100 <printf@plt>
    7e24:	ldr	r3, [r4, #72]	; 0x48
    7e28:	cmp	r3, #6
    7e2c:	ble	7e68 <lell_print@@Base+0x3e0>
    7e30:	ldr	r7, [pc, #484]	; 801c <lell_print@@Base+0x594>
    7e34:	add	r5, r4, #11
    7e38:	add	r7, pc, r7
    7e3c:	ldrb	r1, [r5, #1]
    7e40:	mov	r0, r7
    7e44:	add	r6, r5, #1
    7e48:	bl	2100 <printf@plt>
    7e4c:	ldr	r2, [r4, #72]	; 0x48
    7e50:	sub	r3, r5, #10
    7e54:	mov	r5, r6
    7e58:	sub	r3, r3, r4
    7e5c:	sub	r2, r2, #6
    7e60:	cmp	r2, r3
    7e64:	bgt	7e3c <lell_print@@Base+0x3b4>
    7e68:	mov	r0, #10
    7e6c:	bl	23d0 <putchar@plt>
    7e70:	ldr	r1, [r4, #72]	; 0x48
    7e74:	add	r0, r4, #12
    7e78:	sub	r1, r1, #6
    7e7c:	bl	6fd8 <btbb_process_packet@@Base+0x688>
    7e80:	b	7b2c <lell_print@@Base+0xa4>
    7e84:	ldr	r0, [pc, #404]	; 8020 <lell_print@@Base+0x598>
    7e88:	mov	r1, r4
    7e8c:	mov	r2, #6
    7e90:	ldr	r3, [r4, #84]	; 0x54
    7e94:	add	r0, pc, r0
    7e98:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7e9c:	ldr	r0, [pc, #384]	; 8024 <lell_print@@Base+0x59c>
    7ea0:	mov	r2, #12
    7ea4:	mov	r1, r4
    7ea8:	ldr	r3, [r4, #88]	; 0x58
    7eac:	add	r0, pc, r0
    7eb0:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7eb4:	b	7b2c <lell_print@@Base+0xa4>
    7eb8:	ldr	r0, [pc, #360]	; 8028 <lell_print@@Base+0x5a0>
    7ebc:	mov	r2, #6
    7ec0:	mov	r1, r4
    7ec4:	ldr	r3, [r4, #84]	; 0x54
    7ec8:	add	r0, pc, r0
    7ecc:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7ed0:	ldr	r3, [r4, #72]	; 0x48
    7ed4:	cmp	r3, #6
    7ed8:	ble	7b2c <lell_print@@Base+0xa4>
    7edc:	ldr	r0, [pc, #328]	; 802c <lell_print@@Base+0x5a4>
    7ee0:	add	r0, pc, r0
    7ee4:	bl	2100 <printf@plt>
    7ee8:	ldr	r3, [r4, #72]	; 0x48
    7eec:	cmp	r3, #6
    7ef0:	ble	7e68 <lell_print@@Base+0x3e0>
    7ef4:	ldr	r7, [pc, #308]	; 8030 <lell_print@@Base+0x5a8>
    7ef8:	add	r5, r4, #11
    7efc:	add	r7, pc, r7
    7f00:	ldrb	r1, [r5, #1]
    7f04:	mov	r0, r7
    7f08:	add	r6, r5, #1
    7f0c:	bl	2100 <printf@plt>
    7f10:	ldr	r2, [r4, #72]	; 0x48
    7f14:	sub	r3, r5, #10
    7f18:	mov	r5, r6
    7f1c:	sub	r3, r3, r4
    7f20:	sub	r2, r2, #6
    7f24:	cmp	r2, r3
    7f28:	bgt	7f00 <lell_print@@Base+0x478>
    7f2c:	b	7e68 <lell_print@@Base+0x3e0>
    7f30:	ldr	r0, [pc, #252]	; 8034 <lell_print@@Base+0x5ac>
    7f34:	mov	r1, r4
    7f38:	mov	r2, #6
    7f3c:	ldr	r3, [r4, #84]	; 0x54
    7f40:	add	r0, pc, r0
    7f44:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7f48:	ldr	r0, [pc, #232]	; 8038 <lell_print@@Base+0x5b0>
    7f4c:	mov	r2, #12
    7f50:	mov	r1, r4
    7f54:	ldr	r3, [r4, #88]	; 0x58
    7f58:	add	r0, pc, r0
    7f5c:	bl	6f34 <btbb_process_packet@@Base+0x5e4>
    7f60:	b	7b2c <lell_print@@Base+0xa4>
    7f64:	ldrb	r3, [r4, #6]
    7f68:	ldr	r0, [pc, #204]	; 803c <lell_print@@Base+0x5b4>
    7f6c:	cmp	r3, #20
    7f70:	mov	r1, r3
    7f74:	movge	r3, #20
    7f78:	add	r6, r6, r3, lsl #2
    7f7c:	add	r0, pc, r0
    7f80:	ldr	r2, [r6, #76]	; 0x4c
    7f84:	bl	2100 <printf@plt>
    7f88:	b	7b2c <lell_print@@Base+0xa4>
    7f8c:	andeq	sl, r0, r4, asr #29
    7f90:			; <UNDEFINED> instruction: 0x0000aebc
    7f94:	andeq	r1, r2, ip, ror #6
    7f98:	andeq	sl, r0, ip, asr #29
    7f9c:	andeq	sl, r0, ip, asr #29
    7fa0:	andeq	sl, r0, r8, asr #29
    7fa4:	andeq	fp, r0, r4, lsl r0
    7fa8:	strdeq	sl, [r0], -r0
    7fac:	andeq	sl, r0, ip, lsr #23
    7fb0:			; <UNDEFINED> instruction: 0x0000afbc
    7fb4:	muleq	r0, r4, sp
    7fb8:	andeq	sl, r0, r8, lsl lr
    7fbc:	andeq	sl, r0, r4, lsr #27
    7fc0:	andeq	sl, r0, r8, lsl lr
    7fc4:	andeq	sl, r0, r0, lsr #26
    7fc8:	andeq	sl, r0, r4, lsl sp
    7fcc:	ldrdeq	sl, [r0], -r8
    7fd0:	andeq	sl, r0, ip, lsr lr
    7fd4:	andeq	sl, r0, r4, lsr #27
    7fd8:	andeq	sl, r0, ip, asr #27
    7fdc:	ldrdeq	sl, [r0], -r0
    7fe0:			; <UNDEFINED> instruction: 0x0000adb4
    7fe4:			; <UNDEFINED> instruction: 0x0000adbc
    7fe8:			; <UNDEFINED> instruction: 0x0000adb0
    7fec:			; <UNDEFINED> instruction: 0x0000adb8
    7ff0:			; <UNDEFINED> instruction: 0x0000adb0
    7ff4:			; <UNDEFINED> instruction: 0x0000adb0
    7ff8:	muleq	r0, ip, sp
    7ffc:	andeq	sl, r0, r4, lsl #27
    8000:	andeq	sl, r0, r8, lsr #19
    8004:	andeq	sl, r0, ip, ror sp
    8008:	andeq	sl, r0, r8, asr sp
    800c:	andeq	r1, r2, r8, rrx
    8010:	andeq	sl, r0, r8, asr #26
    8014:	andeq	sl, r0, r0, asr #24
    8018:	andeq	sl, r0, ip, asr ip
    801c:	andeq	sl, r0, ip, lsl #18
    8020:	ldrdeq	sl, [r0], -ip
    8024:	andeq	sl, r0, r4, lsr #23
    8028:	andeq	sl, r0, r8, lsl #23
    802c:	andeq	sl, r0, r8, ror fp
    8030:	andeq	sl, r0, r8, asr #16
    8034:	andeq	sl, r0, r0, lsl fp
    8038:	andeq	sl, r0, r0, lsl fp
    803c:	andeq	sl, r0, r4, lsl #21

00008040 <bt_compidtostr@@Base>:
    8040:	movw	r3, #519	; 0x207
    8044:	cmp	r0, r3
    8048:	beq	e174 <bt_compidtostr@@Base+0x6134>
    804c:	cmp	r0, #520	; 0x208
    8050:	bcs	80d8 <bt_compidtostr@@Base+0x98>
    8054:	movw	r3, #259	; 0x103
    8058:	cmp	r0, r3
    805c:	beq	e168 <bt_compidtostr@@Base+0x6128>
    8060:	cmp	r0, #260	; 0x104
    8064:	bcs	86e4 <bt_compidtostr@@Base+0x6a4>
    8068:	cmp	r0, #129	; 0x81
    806c:	beq	dbc0 <bt_compidtostr@@Base+0x5b80>
    8070:	bhi	8298 <bt_compidtostr@@Base+0x258>
    8074:	cmp	r0, #64	; 0x40
    8078:	beq	dbb4 <bt_compidtostr@@Base+0x5b74>
    807c:	bhi	82fc <bt_compidtostr@@Base+0x2bc>
    8080:	cmp	r0, #31
    8084:	beq	dadc <bt_compidtostr@@Base+0x5a9c>
    8088:	bls	825c <bt_compidtostr@@Base+0x21c>
    808c:	cmp	r0, #47	; 0x2f
    8090:	beq	d9f8 <bt_compidtostr@@Base+0x59b8>
    8094:	bls	81d8 <bt_compidtostr@@Base+0x198>
    8098:	cmp	r0, #55	; 0x37
    809c:	beq	d8f0 <bt_compidtostr@@Base+0x58b0>
    80a0:	bls	81b4 <bt_compidtostr@@Base+0x174>
    80a4:	cmp	r0, #59	; 0x3b
    80a8:	beq	d5cc <bt_compidtostr@@Base+0x558c>
    80ac:	bls	819c <bt_compidtostr@@Base+0x15c>
    80b0:	cmp	r0, #61	; 0x3d
    80b4:	beq	cfa8 <bt_compidtostr@@Base+0x4f68>
    80b8:	bcc	cac8 <bt_compidtostr@@Base+0x4a88>
    80bc:	cmp	r0, #62	; 0x3e
    80c0:	beq	af54 <bt_compidtostr@@Base+0x2f14>
    80c4:	cmp	r0, #63	; 0x3f
    80c8:	bne	8190 <bt_compidtostr@@Base+0x150>
    80cc:	ldr	r0, [pc, #4080]	; 90c4 <bt_compidtostr@@Base+0x1084>
    80d0:	add	r0, pc, r0
    80d4:	bx	lr
    80d8:	movw	r3, #779	; 0x30b
    80dc:	cmp	r0, r3
    80e0:	beq	e15c <bt_compidtostr@@Base+0x611c>
    80e4:	cmp	r0, #780	; 0x30c
    80e8:	bcs	9d54 <bt_compidtostr@@Base+0x1d14>
    80ec:	movw	r3, #649	; 0x289
    80f0:	cmp	r0, r3
    80f4:	beq	e150 <bt_compidtostr@@Base+0x6110>
    80f8:	bhi	9cd4 <bt_compidtostr@@Base+0x1c94>
    80fc:	cmp	r0, #584	; 0x248
    8100:	beq	db60 <bt_compidtostr@@Base+0x5b20>
    8104:	bhi	9948 <bt_compidtostr@@Base+0x1908>
    8108:	movw	r3, #551	; 0x227
    810c:	cmp	r0, r3
    8110:	beq	db54 <bt_compidtostr@@Base+0x5b14>
    8114:	cmp	r0, #552	; 0x228
    8118:	bcc	98f0 <bt_compidtostr@@Base+0x18b0>
    811c:	movw	r3, #567	; 0x237
    8120:	cmp	r0, r3
    8124:	beq	da10 <bt_compidtostr@@Base+0x59d0>
    8128:	cmp	r0, #568	; 0x238
    812c:	bcc	a828 <bt_compidtostr@@Base+0x27e8>
    8130:	movw	r3, #575	; 0x23f
    8134:	cmp	r0, r3
    8138:	beq	d878 <bt_compidtostr@@Base+0x5838>
    813c:	cmp	r0, #576	; 0x240
    8140:	bcc	a7f8 <bt_compidtostr@@Base+0x27b8>
    8144:	movw	r3, #579	; 0x243
    8148:	cmp	r0, r3
    814c:	beq	d56c <bt_compidtostr@@Base+0x552c>
    8150:	cmp	r0, #580	; 0x244
    8154:	bcc	a8d4 <bt_compidtostr@@Base+0x2894>
    8158:	movw	r3, #581	; 0x245
    815c:	cmp	r0, r3
    8160:	beq	d008 <bt_compidtostr@@Base+0x4fc8>
    8164:	cmp	r0, #580	; 0x244
    8168:	bls	c360 <bt_compidtostr@@Base+0x4320>
    816c:	movw	r3, #582	; 0x246
    8170:	cmp	r0, r3
    8174:	beq	c354 <bt_compidtostr@@Base+0x4314>
    8178:	movw	r3, #583	; 0x247
    817c:	cmp	r0, r3
    8180:	bne	9614 <bt_compidtostr@@Base+0x15d4>
    8184:	ldr	r0, [pc, #3900]	; 90c8 <bt_compidtostr@@Base+0x1088>
    8188:	add	r0, pc, r0
    818c:	bx	lr
    8190:	ldr	r0, [pc, #3892]	; 90cc <bt_compidtostr@@Base+0x108c>
    8194:	add	r0, pc, r0
    8198:	bx	lr
    819c:	cmp	r0, #57	; 0x39
    81a0:	beq	c36c <bt_compidtostr@@Base+0x432c>
    81a4:	bhi	c348 <bt_compidtostr@@Base+0x4308>
    81a8:	ldr	r0, [pc, #3872]	; 90d0 <bt_compidtostr@@Base+0x1090>
    81ac:	add	r0, pc, r0
    81b0:	bx	lr
    81b4:	cmp	r0, #51	; 0x33
    81b8:	beq	d50c <bt_compidtostr@@Base+0x54cc>
    81bc:	bls	8208 <bt_compidtostr@@Base+0x1c8>
    81c0:	cmp	r0, #53	; 0x35
    81c4:	beq	c384 <bt_compidtostr@@Base+0x4344>
    81c8:	bhi	c33c <bt_compidtostr@@Base+0x42fc>
    81cc:	ldr	r0, [pc, #3840]	; 90d4 <bt_compidtostr@@Base+0x1094>
    81d0:	add	r0, pc, r0
    81d4:	bx	lr
    81d8:	cmp	r0, #39	; 0x27
    81dc:	beq	d764 <bt_compidtostr@@Base+0x5724>
    81e0:	bls	8238 <bt_compidtostr@@Base+0x1f8>
    81e4:	cmp	r0, #43	; 0x2b
    81e8:	beq	d020 <bt_compidtostr@@Base+0x4fe0>
    81ec:	bls	8220 <bt_compidtostr@@Base+0x1e0>
    81f0:	cmp	r0, #45	; 0x2d
    81f4:	beq	c3fc <bt_compidtostr@@Base+0x43bc>
    81f8:	bhi	c330 <bt_compidtostr@@Base+0x42f0>
    81fc:	ldr	r0, [pc, #3796]	; 90d8 <bt_compidtostr@@Base+0x1098>
    8200:	add	r0, pc, r0
    8204:	bx	lr
    8208:	cmp	r0, #49	; 0x31
    820c:	beq	c3f0 <bt_compidtostr@@Base+0x43b0>
    8210:	bhi	c324 <bt_compidtostr@@Base+0x42e4>
    8214:	ldr	r0, [pc, #3776]	; 90dc <bt_compidtostr@@Base+0x109c>
    8218:	add	r0, pc, r0
    821c:	bx	lr
    8220:	cmp	r0, #41	; 0x29
    8224:	beq	c3e4 <bt_compidtostr@@Base+0x43a4>
    8228:	bhi	c318 <bt_compidtostr@@Base+0x42d8>
    822c:	ldr	r0, [pc, #3756]	; 90e0 <bt_compidtostr@@Base+0x10a0>
    8230:	add	r0, pc, r0
    8234:	bx	lr
    8238:	cmp	r0, #35	; 0x23
    823c:	beq	d518 <bt_compidtostr@@Base+0x54d8>
    8240:	bls	8354 <bt_compidtostr@@Base+0x314>
    8244:	cmp	r0, #37	; 0x25
    8248:	beq	c378 <bt_compidtostr@@Base+0x4338>
    824c:	bhi	c30c <bt_compidtostr@@Base+0x42cc>
    8250:	ldr	r0, [pc, #3724]	; 90e4 <bt_compidtostr@@Base+0x10a4>
    8254:	add	r0, pc, r0
    8258:	bx	lr
    825c:	cmp	r0, #15
    8260:	beq	d920 <bt_compidtostr@@Base+0x58e0>
    8264:	bls	8ccc <bt_compidtostr@@Base+0xc8c>
    8268:	cmp	r0, #23
    826c:	beq	d620 <bt_compidtostr@@Base+0x55e0>
    8270:	bls	8ca8 <bt_compidtostr@@Base+0xc68>
    8274:	cmp	r0, #27
    8278:	beq	d554 <bt_compidtostr@@Base+0x5514>
    827c:	bls	8788 <bt_compidtostr@@Base+0x748>
    8280:	cmp	r0, #29
    8284:	beq	c414 <bt_compidtostr@@Base+0x43d4>
    8288:	bhi	c300 <bt_compidtostr@@Base+0x42c0>
    828c:	ldr	r0, [pc, #3668]	; 90e8 <bt_compidtostr@@Base+0x10a8>
    8290:	add	r0, pc, r0
    8294:	bx	lr
    8298:	cmp	r0, #194	; 0xc2
    829c:	beq	db6c <bt_compidtostr@@Base+0x5b2c>
    82a0:	bhi	866c <bt_compidtostr@@Base+0x62c>
    82a4:	cmp	r0, #161	; 0xa1
    82a8:	beq	daa0 <bt_compidtostr@@Base+0x5a60>
    82ac:	bls	8630 <bt_compidtostr@@Base+0x5f0>
    82b0:	cmp	r0, #177	; 0xb1
    82b4:	beq	da94 <bt_compidtostr@@Base+0x5a54>
    82b8:	bls	85ac <bt_compidtostr@@Base+0x56c>
    82bc:	cmp	r0, #185	; 0xb9
    82c0:	beq	d89c <bt_compidtostr@@Base+0x585c>
    82c4:	bls	8588 <bt_compidtostr@@Base+0x548>
    82c8:	cmp	r0, #189	; 0xbd
    82cc:	beq	d584 <bt_compidtostr@@Base+0x5544>
    82d0:	bls	83f0 <bt_compidtostr@@Base+0x3b0>
    82d4:	cmp	r0, #191	; 0xbf
    82d8:	beq	d014 <bt_compidtostr@@Base+0x4fd4>
    82dc:	bcc	c408 <bt_compidtostr@@Base+0x43c8>
    82e0:	cmp	r0, #192	; 0xc0
    82e4:	beq	c2f4 <bt_compidtostr@@Base+0x42b4>
    82e8:	cmp	r0, #193	; 0xc1
    82ec:	bne	83e4 <bt_compidtostr@@Base+0x3a4>
    82f0:	ldr	r0, [pc, #3572]	; 90ec <bt_compidtostr@@Base+0x10ac>
    82f4:	add	r0, pc, r0
    82f8:	bx	lr
    82fc:	cmp	r0, #96	; 0x60
    8300:	beq	db48 <bt_compidtostr@@Base+0x5b08>
    8304:	bls	8408 <bt_compidtostr@@Base+0x3c8>
    8308:	cmp	r0, #112	; 0x70
    830c:	beq	da88 <bt_compidtostr@@Base+0x5a48>
    8310:	bls	83b4 <bt_compidtostr@@Base+0x374>
    8314:	cmp	r0, #120	; 0x78
    8318:	beq	d890 <bt_compidtostr@@Base+0x5850>
    831c:	bls	8390 <bt_compidtostr@@Base+0x350>
    8320:	cmp	r0, #124	; 0x7c
    8324:	beq	d59c <bt_compidtostr@@Base+0x555c>
    8328:	bls	8378 <bt_compidtostr@@Base+0x338>
    832c:	cmp	r0, #126	; 0x7e
    8330:	beq	cff0 <bt_compidtostr@@Base+0x4fb0>
    8334:	bcc	c474 <bt_compidtostr@@Base+0x4434>
    8338:	cmp	r0, #127	; 0x7f
    833c:	beq	c2e8 <bt_compidtostr@@Base+0x42a8>
    8340:	cmp	r0, #128	; 0x80
    8344:	bne	836c <bt_compidtostr@@Base+0x32c>
    8348:	ldr	r0, [pc, #3488]	; 90f0 <bt_compidtostr@@Base+0x10b0>
    834c:	add	r0, pc, r0
    8350:	bx	lr
    8354:	cmp	r0, #33	; 0x21
    8358:	beq	c468 <bt_compidtostr@@Base+0x4428>
    835c:	bhi	c2dc <bt_compidtostr@@Base+0x429c>
    8360:	ldr	r0, [pc, #3468]	; 90f4 <bt_compidtostr@@Base+0x10b4>
    8364:	add	r0, pc, r0
    8368:	bx	lr
    836c:	ldr	r0, [pc, #3460]	; 90f8 <bt_compidtostr@@Base+0x10b8>
    8370:	add	r0, pc, r0
    8374:	bx	lr
    8378:	cmp	r0, #122	; 0x7a
    837c:	beq	c48c <bt_compidtostr@@Base+0x444c>
    8380:	bhi	c2d0 <bt_compidtostr@@Base+0x4290>
    8384:	ldr	r0, [pc, #3440]	; 90fc <bt_compidtostr@@Base+0x10bc>
    8388:	add	r0, pc, r0
    838c:	bx	lr
    8390:	cmp	r0, #116	; 0x74
    8394:	beq	d488 <bt_compidtostr@@Base+0x5448>
    8398:	bls	8444 <bt_compidtostr@@Base+0x404>
    839c:	cmp	r0, #118	; 0x76
    83a0:	beq	c498 <bt_compidtostr@@Base+0x4458>
    83a4:	bhi	c2c4 <bt_compidtostr@@Base+0x4284>
    83a8:	ldr	r0, [pc, #3408]	; 9100 <bt_compidtostr@@Base+0x10c0>
    83ac:	add	r0, pc, r0
    83b0:	bx	lr
    83b4:	cmp	r0, #104	; 0x68
    83b8:	beq	d788 <bt_compidtostr@@Base+0x5748>
    83bc:	bls	8534 <bt_compidtostr@@Base+0x4f4>
    83c0:	cmp	r0, #108	; 0x6c
    83c4:	beq	d470 <bt_compidtostr@@Base+0x5430>
    83c8:	bls	851c <bt_compidtostr@@Base+0x4dc>
    83cc:	cmp	r0, #110	; 0x6e
    83d0:	beq	c480 <bt_compidtostr@@Base+0x4440>
    83d4:	bhi	c2b8 <bt_compidtostr@@Base+0x4278>
    83d8:	ldr	r0, [pc, #3364]	; 9104 <bt_compidtostr@@Base+0x10c4>
    83dc:	add	r0, pc, r0
    83e0:	bx	lr
    83e4:	ldr	r0, [pc, #3356]	; 9108 <bt_compidtostr@@Base+0x10c8>
    83e8:	add	r0, pc, r0
    83ec:	bx	lr
    83f0:	cmp	r0, #187	; 0xbb
    83f4:	beq	c4bc <bt_compidtostr@@Base+0x447c>
    83f8:	bhi	c2ac <bt_compidtostr@@Base+0x426c>
    83fc:	ldr	r0, [pc, #3336]	; 910c <bt_compidtostr@@Base+0x10cc>
    8400:	add	r0, pc, r0
    8404:	bx	lr
    8408:	cmp	r0, #80	; 0x50
    840c:	beq	d974 <bt_compidtostr@@Base+0x5934>
    8410:	bls	8498 <bt_compidtostr@@Base+0x458>
    8414:	cmp	r0, #88	; 0x58
    8418:	beq	d7f4 <bt_compidtostr@@Base+0x57b4>
    841c:	bls	8474 <bt_compidtostr@@Base+0x434>
    8420:	cmp	r0, #92	; 0x5c
    8424:	beq	d410 <bt_compidtostr@@Base+0x53d0>
    8428:	bls	845c <bt_compidtostr@@Base+0x41c>
    842c:	cmp	r0, #94	; 0x5e
    8430:	beq	c4e0 <bt_compidtostr@@Base+0x44a0>
    8434:	bhi	c2a0 <bt_compidtostr@@Base+0x4260>
    8438:	ldr	r0, [pc, #3280]	; 9110 <bt_compidtostr@@Base+0x10d0>
    843c:	add	r0, pc, r0
    8440:	bx	lr
    8444:	cmp	r0, #114	; 0x72
    8448:	beq	c4d4 <bt_compidtostr@@Base+0x4494>
    844c:	bhi	c294 <bt_compidtostr@@Base+0x4254>
    8450:	ldr	r0, [pc, #3260]	; 9114 <bt_compidtostr@@Base+0x10d4>
    8454:	add	r0, pc, r0
    8458:	bx	lr
    845c:	cmp	r0, #90	; 0x5a
    8460:	beq	c4c8 <bt_compidtostr@@Base+0x4488>
    8464:	bhi	c288 <bt_compidtostr@@Base+0x4248>
    8468:	ldr	r0, [pc, #3240]	; 9118 <bt_compidtostr@@Base+0x10d8>
    846c:	add	r0, pc, r0
    8470:	bx	lr
    8474:	cmp	r0, #84	; 0x54
    8478:	beq	d428 <bt_compidtostr@@Base+0x53e8>
    847c:	bls	84c8 <bt_compidtostr@@Base+0x488>
    8480:	cmp	r0, #86	; 0x56
    8484:	beq	c4b0 <bt_compidtostr@@Base+0x4470>
    8488:	bhi	c27c <bt_compidtostr@@Base+0x423c>
    848c:	ldr	r0, [pc, #3208]	; 911c <bt_compidtostr@@Base+0x10dc>
    8490:	add	r0, pc, r0
    8494:	bx	lr
    8498:	cmp	r0, #72	; 0x48
    849c:	beq	d77c <bt_compidtostr@@Base+0x573c>
    84a0:	bls	84f8 <bt_compidtostr@@Base+0x4b8>
    84a4:	cmp	r0, #76	; 0x4c
    84a8:	beq	d548 <bt_compidtostr@@Base+0x5508>
    84ac:	bls	84e0 <bt_compidtostr@@Base+0x4a0>
    84b0:	cmp	r0, #78	; 0x4e
    84b4:	beq	c438 <bt_compidtostr@@Base+0x43f8>
    84b8:	bhi	c270 <bt_compidtostr@@Base+0x4230>
    84bc:	ldr	r0, [pc, #3164]	; 9120 <bt_compidtostr@@Base+0x10e0>
    84c0:	add	r0, pc, r0
    84c4:	bx	lr
    84c8:	cmp	r0, #82	; 0x52
    84cc:	beq	c42c <bt_compidtostr@@Base+0x43ec>
    84d0:	bhi	c264 <bt_compidtostr@@Base+0x4224>
    84d4:	ldr	r0, [pc, #3144]	; 9124 <bt_compidtostr@@Base+0x10e4>
    84d8:	add	r0, pc, r0
    84dc:	bx	lr
    84e0:	cmp	r0, #74	; 0x4a
    84e4:	beq	c420 <bt_compidtostr@@Base+0x43e0>
    84e8:	bhi	c258 <bt_compidtostr@@Base+0x4218>
    84ec:	ldr	r0, [pc, #3124]	; 9128 <bt_compidtostr@@Base+0x10e8>
    84f0:	add	r0, pc, r0
    84f4:	bx	lr
    84f8:	cmp	r0, #68	; 0x44
    84fc:	beq	d434 <bt_compidtostr@@Base+0x53f4>
    8500:	bls	8558 <bt_compidtostr@@Base+0x518>
    8504:	cmp	r0, #70	; 0x46
    8508:	beq	c4a4 <bt_compidtostr@@Base+0x4464>
    850c:	bhi	c24c <bt_compidtostr@@Base+0x420c>
    8510:	ldr	r0, [pc, #3092]	; 912c <bt_compidtostr@@Base+0x10ec>
    8514:	add	r0, pc, r0
    8518:	bx	lr
    851c:	cmp	r0, #106	; 0x6a
    8520:	beq	c45c <bt_compidtostr@@Base+0x441c>
    8524:	bhi	c240 <bt_compidtostr@@Base+0x4200>
    8528:	ldr	r0, [pc, #3072]	; 9130 <bt_compidtostr@@Base+0x10f0>
    852c:	add	r0, pc, r0
    8530:	bx	lr
    8534:	cmp	r0, #100	; 0x64
    8538:	beq	d47c <bt_compidtostr@@Base+0x543c>
    853c:	bls	8570 <bt_compidtostr@@Base+0x530>
    8540:	cmp	r0, #102	; 0x66
    8544:	beq	c444 <bt_compidtostr@@Base+0x4404>
    8548:	bhi	c234 <bt_compidtostr@@Base+0x41f4>
    854c:	ldr	r0, [pc, #3040]	; 9134 <bt_compidtostr@@Base+0x10f4>
    8550:	add	r0, pc, r0
    8554:	bx	lr
    8558:	cmp	r0, #66	; 0x42
    855c:	beq	c450 <bt_compidtostr@@Base+0x4410>
    8560:	bhi	c228 <bt_compidtostr@@Base+0x41e8>
    8564:	ldr	r0, [pc, #3020]	; 9138 <bt_compidtostr@@Base+0x10f8>
    8568:	add	r0, pc, r0
    856c:	bx	lr
    8570:	cmp	r0, #98	; 0x62
    8574:	beq	c3a8 <bt_compidtostr@@Base+0x4368>
    8578:	bhi	c21c <bt_compidtostr@@Base+0x41dc>
    857c:	ldr	r0, [pc, #3000]	; 913c <bt_compidtostr@@Base+0x10fc>
    8580:	add	r0, pc, r0
    8584:	bx	lr
    8588:	cmp	r0, #181	; 0xb5
    858c:	beq	d530 <bt_compidtostr@@Base+0x54f0>
    8590:	bls	85dc <bt_compidtostr@@Base+0x59c>
    8594:	cmp	r0, #183	; 0xb7
    8598:	beq	c3d8 <bt_compidtostr@@Base+0x4398>
    859c:	bhi	c210 <bt_compidtostr@@Base+0x41d0>
    85a0:	ldr	r0, [pc, #2968]	; 9140 <bt_compidtostr@@Base+0x1100>
    85a4:	add	r0, pc, r0
    85a8:	bx	lr
    85ac:	cmp	r0, #169	; 0xa9
    85b0:	beq	d770 <bt_compidtostr@@Base+0x5730>
    85b4:	bls	860c <bt_compidtostr@@Base+0x5cc>
    85b8:	cmp	r0, #173	; 0xad
    85bc:	beq	d524 <bt_compidtostr@@Base+0x54e4>
    85c0:	bls	85f4 <bt_compidtostr@@Base+0x5b4>
    85c4:	cmp	r0, #175	; 0xaf
    85c8:	beq	c3cc <bt_compidtostr@@Base+0x438c>
    85cc:	bhi	c204 <bt_compidtostr@@Base+0x41c4>
    85d0:	ldr	r0, [pc, #2924]	; 9144 <bt_compidtostr@@Base+0x1104>
    85d4:	add	r0, pc, r0
    85d8:	bx	lr
    85dc:	cmp	r0, #179	; 0xb3
    85e0:	beq	c3c0 <bt_compidtostr@@Base+0x4380>
    85e4:	bhi	c1f8 <bt_compidtostr@@Base+0x41b8>
    85e8:	ldr	r0, [pc, #2904]	; 9148 <bt_compidtostr@@Base+0x1108>
    85ec:	add	r0, pc, r0
    85f0:	bx	lr
    85f4:	cmp	r0, #171	; 0xab
    85f8:	beq	c3b4 <bt_compidtostr@@Base+0x4374>
    85fc:	bhi	c1ec <bt_compidtostr@@Base+0x41ac>
    8600:	ldr	r0, [pc, #2884]	; 914c <bt_compidtostr@@Base+0x110c>
    8604:	add	r0, pc, r0
    8608:	bx	lr
    860c:	cmp	r0, #165	; 0xa5
    8610:	beq	d53c <bt_compidtostr@@Base+0x54fc>
    8614:	bls	86cc <bt_compidtostr@@Base+0x68c>
    8618:	cmp	r0, #167	; 0xa7
    861c:	beq	c39c <bt_compidtostr@@Base+0x435c>
    8620:	bhi	c1e0 <bt_compidtostr@@Base+0x41a0>
    8624:	ldr	r0, [pc, #2852]	; 9150 <bt_compidtostr@@Base+0x1110>
    8628:	add	r0, pc, r0
    862c:	bx	lr
    8630:	cmp	r0, #145	; 0x91
    8634:	beq	d9d4 <bt_compidtostr@@Base+0x5994>
    8638:	bls	9644 <bt_compidtostr@@Base+0x1604>
    863c:	cmp	r0, #153	; 0x99
    8640:	beq	d818 <bt_compidtostr@@Base+0x57d8>
    8644:	bls	9620 <bt_compidtostr@@Base+0x15e0>
    8648:	cmp	r0, #157	; 0x9d
    864c:	beq	d500 <bt_compidtostr@@Base+0x54c0>
    8650:	bls	96c8 <bt_compidtostr@@Base+0x1688>
    8654:	cmp	r0, #159	; 0x9f
    8658:	beq	c390 <bt_compidtostr@@Base+0x4350>
    865c:	bhi	c1d4 <bt_compidtostr@@Base+0x4194>
    8660:	ldr	r0, [pc, #2796]	; 9154 <bt_compidtostr@@Base+0x1114>
    8664:	add	r0, pc, r0
    8668:	bx	lr
    866c:	cmp	r0, #226	; 0xe2
    8670:	beq	daf4 <bt_compidtostr@@Base+0x5ab4>
    8674:	bls	9770 <bt_compidtostr@@Base+0x1730>
    8678:	cmp	r0, #242	; 0xf2
    867c:	beq	da1c <bt_compidtostr@@Base+0x59dc>
    8680:	bls	9740 <bt_compidtostr@@Base+0x1700>
    8684:	cmp	r0, #250	; 0xfa
    8688:	beq	d884 <bt_compidtostr@@Base+0x5844>
    868c:	bls	971c <bt_compidtostr@@Base+0x16dc>
    8690:	cmp	r0, #254	; 0xfe
    8694:	beq	d590 <bt_compidtostr@@Base+0x5550>
    8698:	bls	9704 <bt_compidtostr@@Base+0x16c4>
    869c:	cmp	r0, #256	; 0x100
    86a0:	beq	cfd8 <bt_compidtostr@@Base+0x4f98>
    86a4:	bcc	c60c <bt_compidtostr@@Base+0x45cc>
    86a8:	movw	r3, #257	; 0x101
    86ac:	cmp	r0, r3
    86b0:	beq	c1c8 <bt_compidtostr@@Base+0x4188>
    86b4:	movw	r3, #258	; 0x102
    86b8:	cmp	r0, r3
    86bc:	bne	96e0 <bt_compidtostr@@Base+0x16a0>
    86c0:	ldr	r0, [pc, #2704]	; 9158 <bt_compidtostr@@Base+0x1118>
    86c4:	add	r0, pc, r0
    86c8:	bx	lr
    86cc:	cmp	r0, #163	; 0xa3
    86d0:	beq	c5f4 <bt_compidtostr@@Base+0x45b4>
    86d4:	bhi	c1bc <bt_compidtostr@@Base+0x417c>
    86d8:	ldr	r0, [pc, #2684]	; 915c <bt_compidtostr@@Base+0x111c>
    86dc:	add	r0, pc, r0
    86e0:	bx	lr
    86e4:	movw	r3, #389	; 0x185
    86e8:	cmp	r0, r3
    86ec:	beq	e138 <bt_compidtostr@@Base+0x60f8>
    86f0:	bhi	8a8c <bt_compidtostr@@Base+0xa4c>
    86f4:	cmp	r0, #324	; 0x144
    86f8:	beq	db9c <bt_compidtostr@@Base+0x5b5c>
    86fc:	bhi	8a2c <bt_compidtostr@@Base+0x9ec>
    8700:	movw	r3, #291	; 0x123
    8704:	cmp	r0, r3
    8708:	beq	dae8 <bt_compidtostr@@Base+0x5aa8>
    870c:	cmp	r0, #292	; 0x124
    8710:	bcc	883c <bt_compidtostr@@Base+0x7fc>
    8714:	movw	r3, #307	; 0x133
    8718:	cmp	r0, r3
    871c:	beq	da7c <bt_compidtostr@@Base+0x5a3c>
    8720:	cmp	r0, #308	; 0x134
    8724:	bcc	87f8 <bt_compidtostr@@Base+0x7b8>
    8728:	movw	r3, #315	; 0x13b
    872c:	cmp	r0, r3
    8730:	beq	d86c <bt_compidtostr@@Base+0x582c>
    8734:	cmp	r0, #316	; 0x13c
    8738:	bcc	87c8 <bt_compidtostr@@Base+0x788>
    873c:	movw	r3, #319	; 0x13f
    8740:	cmp	r0, r3
    8744:	beq	d5b4 <bt_compidtostr@@Base+0x5574>
    8748:	cmp	r0, #320	; 0x140
    874c:	bcc	87ac <bt_compidtostr@@Base+0x76c>
    8750:	movw	r3, #321	; 0x141
    8754:	cmp	r0, r3
    8758:	beq	cfcc <bt_compidtostr@@Base+0x4f8c>
    875c:	cmp	r0, #320	; 0x140
    8760:	bls	c624 <bt_compidtostr@@Base+0x45e4>
    8764:	movw	r3, #322	; 0x142
    8768:	cmp	r0, r3
    876c:	beq	c1b0 <bt_compidtostr@@Base+0x4170>
    8770:	movw	r3, #323	; 0x143
    8774:	cmp	r0, r3
    8778:	bne	87a0 <bt_compidtostr@@Base+0x760>
    877c:	ldr	r0, [pc, #2524]	; 9160 <bt_compidtostr@@Base+0x1120>
    8780:	add	r0, pc, r0
    8784:	bx	lr
    8788:	cmp	r0, #25
    878c:	beq	c618 <bt_compidtostr@@Base+0x45d8>
    8790:	bhi	c1a4 <bt_compidtostr@@Base+0x4164>
    8794:	ldr	r0, [pc, #2504]	; 9164 <bt_compidtostr@@Base+0x1124>
    8798:	add	r0, pc, r0
    879c:	bx	lr
    87a0:	ldr	r0, [pc, #2496]	; 9168 <bt_compidtostr@@Base+0x1128>
    87a4:	add	r0, pc, r0
    87a8:	bx	lr
    87ac:	movw	r3, #317	; 0x13d
    87b0:	cmp	r0, r3
    87b4:	beq	c600 <bt_compidtostr@@Base+0x45c0>
    87b8:	bhi	c198 <bt_compidtostr@@Base+0x4158>
    87bc:	ldr	r0, [pc, #2472]	; 916c <bt_compidtostr@@Base+0x112c>
    87c0:	add	r0, pc, r0
    87c4:	bx	lr
    87c8:	movw	r3, #311	; 0x137
    87cc:	cmp	r0, r3
    87d0:	beq	d440 <bt_compidtostr@@Base+0x5400>
    87d4:	cmp	r0, #312	; 0x138
    87d8:	bcc	8894 <bt_compidtostr@@Base+0x854>
    87dc:	movw	r3, #313	; 0x139
    87e0:	cmp	r0, r3
    87e4:	beq	c504 <bt_compidtostr@@Base+0x44c4>
    87e8:	bhi	c18c <bt_compidtostr@@Base+0x414c>
    87ec:	ldr	r0, [pc, #2428]	; 9170 <bt_compidtostr@@Base+0x1130>
    87f0:	add	r0, pc, r0
    87f4:	bx	lr
    87f8:	movw	r3, #299	; 0x12b
    87fc:	cmp	r0, r3
    8800:	beq	d848 <bt_compidtostr@@Base+0x5808>
    8804:	cmp	r0, #300	; 0x12c
    8808:	bcc	89c4 <bt_compidtostr@@Base+0x984>
    880c:	movw	r3, #303	; 0x12f
    8810:	cmp	r0, r3
    8814:	beq	d41c <bt_compidtostr@@Base+0x53dc>
    8818:	cmp	r0, #304	; 0x130
    881c:	bcc	89a8 <bt_compidtostr@@Base+0x968>
    8820:	movw	r3, #305	; 0x131
    8824:	cmp	r0, r3
    8828:	beq	c4f8 <bt_compidtostr@@Base+0x44b8>
    882c:	bhi	c180 <bt_compidtostr@@Base+0x4140>
    8830:	ldr	r0, [pc, #2364]	; 9174 <bt_compidtostr@@Base+0x1134>
    8834:	add	r0, pc, r0
    8838:	bx	lr
    883c:	movw	r3, #275	; 0x113
    8840:	cmp	r0, r3
    8844:	beq	d9b0 <bt_compidtostr@@Base+0x5970>
    8848:	cmp	r0, #276	; 0x114
    884c:	bcc	88fc <bt_compidtostr@@Base+0x8bc>
    8850:	movw	r3, #283	; 0x11b
    8854:	cmp	r0, r3
    8858:	beq	d800 <bt_compidtostr@@Base+0x57c0>
    885c:	cmp	r0, #284	; 0x11c
    8860:	bcc	88cc <bt_compidtostr@@Base+0x88c>
    8864:	movw	r3, #287	; 0x11f
    8868:	cmp	r0, r3
    886c:	beq	d4a0 <bt_compidtostr@@Base+0x5460>
    8870:	cmp	r0, #288	; 0x120
    8874:	bcc	88b0 <bt_compidtostr@@Base+0x870>
    8878:	movw	r3, #289	; 0x121
    887c:	cmp	r0, r3
    8880:	beq	c4ec <bt_compidtostr@@Base+0x44ac>
    8884:	bhi	c174 <bt_compidtostr@@Base+0x4134>
    8888:	ldr	r0, [pc, #2280]	; 9178 <bt_compidtostr@@Base+0x1138>
    888c:	add	r0, pc, r0
    8890:	bx	lr
    8894:	movw	r3, #309	; 0x135
    8898:	cmp	r0, r3
    889c:	beq	c528 <bt_compidtostr@@Base+0x44e8>
    88a0:	bhi	c168 <bt_compidtostr@@Base+0x4128>
    88a4:	ldr	r0, [pc, #2256]	; 917c <bt_compidtostr@@Base+0x113c>
    88a8:	add	r0, pc, r0
    88ac:	bx	lr
    88b0:	movw	r3, #285	; 0x11d
    88b4:	cmp	r0, r3
    88b8:	beq	c51c <bt_compidtostr@@Base+0x44dc>
    88bc:	bhi	c15c <bt_compidtostr@@Base+0x411c>
    88c0:	ldr	r0, [pc, #2232]	; 9180 <bt_compidtostr@@Base+0x1140>
    88c4:	add	r0, pc, r0
    88c8:	bx	lr
    88cc:	movw	r3, #279	; 0x117
    88d0:	cmp	r0, r3
    88d4:	beq	d4f4 <bt_compidtostr@@Base+0x54b4>
    88d8:	cmp	r0, #280	; 0x118
    88dc:	bcc	8940 <bt_compidtostr@@Base+0x900>
    88e0:	movw	r3, #281	; 0x119
    88e4:	cmp	r0, r3
    88e8:	beq	c54c <bt_compidtostr@@Base+0x450c>
    88ec:	bhi	c150 <bt_compidtostr@@Base+0x4110>
    88f0:	ldr	r0, [pc, #2188]	; 9184 <bt_compidtostr@@Base+0x1144>
    88f4:	add	r0, pc, r0
    88f8:	bx	lr
    88fc:	movw	r3, #267	; 0x10b
    8900:	cmp	r0, r3
    8904:	beq	d794 <bt_compidtostr@@Base+0x5754>
    8908:	cmp	r0, #268	; 0x10c
    890c:	bcc	8978 <bt_compidtostr@@Base+0x938>
    8910:	movw	r3, #271	; 0x10f
    8914:	cmp	r0, r3
    8918:	beq	d494 <bt_compidtostr@@Base+0x5454>
    891c:	cmp	r0, #272	; 0x110
    8920:	bcc	895c <bt_compidtostr@@Base+0x91c>
    8924:	movw	r3, #273	; 0x111
    8928:	cmp	r0, r3
    892c:	beq	c534 <bt_compidtostr@@Base+0x44f4>
    8930:	bhi	c144 <bt_compidtostr@@Base+0x4104>
    8934:	ldr	r0, [pc, #2124]	; 9188 <bt_compidtostr@@Base+0x1148>
    8938:	add	r0, pc, r0
    893c:	bx	lr
    8940:	movw	r3, #277	; 0x115
    8944:	cmp	r0, r3
    8948:	beq	c540 <bt_compidtostr@@Base+0x4500>
    894c:	bhi	c138 <bt_compidtostr@@Base+0x40f8>
    8950:	ldr	r0, [pc, #2100]	; 918c <bt_compidtostr@@Base+0x114c>
    8954:	add	r0, pc, r0
    8958:	bx	lr
    895c:	movw	r3, #269	; 0x10d
    8960:	cmp	r0, r3
    8964:	beq	c57c <bt_compidtostr@@Base+0x453c>
    8968:	bhi	c12c <bt_compidtostr@@Base+0x40ec>
    896c:	ldr	r0, [pc, #2076]	; 9190 <bt_compidtostr@@Base+0x1150>
    8970:	add	r0, pc, r0
    8974:	bx	lr
    8978:	movw	r3, #263	; 0x107
    897c:	cmp	r0, r3
    8980:	beq	d4dc <bt_compidtostr@@Base+0x549c>
    8984:	cmp	r0, #264	; 0x108
    8988:	bcc	89f4 <bt_compidtostr@@Base+0x9b4>
    898c:	movw	r3, #265	; 0x109
    8990:	cmp	r0, r3
    8994:	beq	c594 <bt_compidtostr@@Base+0x4554>
    8998:	bhi	c120 <bt_compidtostr@@Base+0x40e0>
    899c:	ldr	r0, [pc, #2032]	; 9194 <bt_compidtostr@@Base+0x1154>
    89a0:	add	r0, pc, r0
    89a4:	bx	lr
    89a8:	movw	r3, #301	; 0x12d
    89ac:	cmp	r0, r3
    89b0:	beq	c588 <bt_compidtostr@@Base+0x4548>
    89b4:	bhi	c114 <bt_compidtostr@@Base+0x40d4>
    89b8:	ldr	r0, [pc, #2008]	; 9198 <bt_compidtostr@@Base+0x1158>
    89bc:	add	r0, pc, r0
    89c0:	bx	lr
    89c4:	movw	r3, #295	; 0x127
    89c8:	cmp	r0, r3
    89cc:	beq	d4e8 <bt_compidtostr@@Base+0x54a8>
    89d0:	cmp	r0, #296	; 0x128
    89d4:	bcc	8a10 <bt_compidtostr@@Base+0x9d0>
    89d8:	movw	r3, #297	; 0x129
    89dc:	cmp	r0, r3
    89e0:	beq	c570 <bt_compidtostr@@Base+0x4530>
    89e4:	bhi	c108 <bt_compidtostr@@Base+0x40c8>
    89e8:	ldr	r0, [pc, #1964]	; 919c <bt_compidtostr@@Base+0x115c>
    89ec:	add	r0, pc, r0
    89f0:	bx	lr
    89f4:	movw	r3, #261	; 0x105
    89f8:	cmp	r0, r3
    89fc:	beq	c564 <bt_compidtostr@@Base+0x4524>
    8a00:	bhi	c0fc <bt_compidtostr@@Base+0x40bc>
    8a04:	ldr	r0, [pc, #1940]	; 91a0 <bt_compidtostr@@Base+0x1160>
    8a08:	add	r0, pc, r0
    8a0c:	bx	lr
    8a10:	movw	r3, #293	; 0x125
    8a14:	cmp	r0, r3
    8a18:	beq	c558 <bt_compidtostr@@Base+0x4518>
    8a1c:	bhi	c0f0 <bt_compidtostr@@Base+0x40b0>
    8a20:	ldr	r0, [pc, #1916]	; 91a4 <bt_compidtostr@@Base+0x1164>
    8a24:	add	r0, pc, r0
    8a28:	bx	lr
    8a2c:	cmp	r0, #356	; 0x164
    8a30:	beq	db18 <bt_compidtostr@@Base+0x5ad8>
    8a34:	bls	93e0 <bt_compidtostr@@Base+0x13a0>
    8a38:	cmp	r0, #372	; 0x174
    8a3c:	beq	da28 <bt_compidtostr@@Base+0x59e8>
    8a40:	bls	8c74 <bt_compidtostr@@Base+0xc34>
    8a44:	cmp	r0, #380	; 0x17c
    8a48:	beq	d8b4 <bt_compidtostr@@Base+0x5874>
    8a4c:	bls	8de4 <bt_compidtostr@@Base+0xda4>
    8a50:	cmp	r0, #384	; 0x180
    8a54:	beq	d5a8 <bt_compidtostr@@Base+0x5568>
    8a58:	bls	8dc8 <bt_compidtostr@@Base+0xd88>
    8a5c:	movw	r3, #386	; 0x182
    8a60:	cmp	r0, r3
    8a64:	beq	cfe4 <bt_compidtostr@@Base+0x4fa4>
    8a68:	bcc	c510 <bt_compidtostr@@Base+0x44d0>
    8a6c:	movw	r3, #387	; 0x183
    8a70:	cmp	r0, r3
    8a74:	beq	c0e4 <bt_compidtostr@@Base+0x40a4>
    8a78:	cmp	r0, #388	; 0x184
    8a7c:	bne	8b0c <bt_compidtostr@@Base+0xacc>
    8a80:	ldr	r0, [pc, #1824]	; 91a8 <bt_compidtostr@@Base+0x1168>
    8a84:	add	r0, pc, r0
    8a88:	bx	lr
    8a8c:	movw	r3, #454	; 0x1c6
    8a90:	cmp	r0, r3
    8a94:	beq	db84 <bt_compidtostr@@Base+0x5b44>
    8a98:	bhi	8e0c <bt_compidtostr@@Base+0xdcc>
    8a9c:	movw	r3, #421	; 0x1a5
    8aa0:	cmp	r0, r3
    8aa4:	beq	db30 <bt_compidtostr@@Base+0x5af0>
    8aa8:	bls	8c24 <bt_compidtostr@@Base+0xbe4>
    8aac:	movw	r3, #437	; 0x1b5
    8ab0:	cmp	r0, r3
    8ab4:	beq	da34 <bt_compidtostr@@Base+0x59f4>
    8ab8:	bls	8b74 <bt_compidtostr@@Base+0xb34>
    8abc:	movw	r3, #445	; 0x1bd
    8ac0:	cmp	r0, r3
    8ac4:	beq	d8a8 <bt_compidtostr@@Base+0x5868>
    8ac8:	bls	8b44 <bt_compidtostr@@Base+0xb04>
    8acc:	movw	r3, #449	; 0x1c1
    8ad0:	cmp	r0, r3
    8ad4:	beq	d578 <bt_compidtostr@@Base+0x5538>
    8ad8:	bls	8b24 <bt_compidtostr@@Base+0xae4>
    8adc:	movw	r3, #451	; 0x1c3
    8ae0:	cmp	r0, r3
    8ae4:	beq	cffc <bt_compidtostr@@Base+0x4fbc>
    8ae8:	bcc	c5c4 <bt_compidtostr@@Base+0x4584>
    8aec:	cmp	r0, #452	; 0x1c4
    8af0:	beq	c0d8 <bt_compidtostr@@Base+0x4098>
    8af4:	movw	r3, #453	; 0x1c5
    8af8:	cmp	r0, r3
    8afc:	bne	8b18 <bt_compidtostr@@Base+0xad8>
    8b00:	ldr	r0, [pc, #1700]	; 91ac <bt_compidtostr@@Base+0x116c>
    8b04:	add	r0, pc, r0
    8b08:	bx	lr
    8b0c:	ldr	r0, [pc, #1692]	; 91b0 <bt_compidtostr@@Base+0x1170>
    8b10:	add	r0, pc, r0
    8b14:	bx	lr
    8b18:	ldr	r0, [pc, #1684]	; 91b4 <bt_compidtostr@@Base+0x1174>
    8b1c:	add	r0, pc, r0
    8b20:	bx	lr
    8b24:	movw	r3, #447	; 0x1bf
    8b28:	cmp	r0, r3
    8b2c:	beq	c5b8 <bt_compidtostr@@Base+0x4578>
    8b30:	cmp	r0, #448	; 0x1c0
    8b34:	bcs	c0cc <bt_compidtostr@@Base+0x408c>
    8b38:	ldr	r0, [pc, #1656]	; 91b8 <bt_compidtostr@@Base+0x1178>
    8b3c:	add	r0, pc, r0
    8b40:	bx	lr
    8b44:	movw	r3, #441	; 0x1b9
    8b48:	cmp	r0, r3
    8b4c:	beq	d4c4 <bt_compidtostr@@Base+0x5484>
    8b50:	bls	8bb4 <bt_compidtostr@@Base+0xb74>
    8b54:	movw	r3, #443	; 0x1bb
    8b58:	cmp	r0, r3
    8b5c:	beq	c5e8 <bt_compidtostr@@Base+0x45a8>
    8b60:	cmp	r0, #444	; 0x1bc
    8b64:	bcs	c0c0 <bt_compidtostr@@Base+0x4080>
    8b68:	ldr	r0, [pc, #1612]	; 91bc <bt_compidtostr@@Base+0x117c>
    8b6c:	add	r0, pc, r0
    8b70:	bx	lr
    8b74:	movw	r3, #429	; 0x1ad
    8b78:	cmp	r0, r3
    8b7c:	beq	d80c <bt_compidtostr@@Base+0x57cc>
    8b80:	bls	8bf4 <bt_compidtostr@@Base+0xbb4>
    8b84:	movw	r3, #433	; 0x1b1
    8b88:	cmp	r0, r3
    8b8c:	beq	d4ac <bt_compidtostr@@Base+0x546c>
    8b90:	bls	8bd4 <bt_compidtostr@@Base+0xb94>
    8b94:	movw	r3, #435	; 0x1b3
    8b98:	cmp	r0, r3
    8b9c:	beq	c5d0 <bt_compidtostr@@Base+0x4590>
    8ba0:	cmp	r0, #436	; 0x1b4
    8ba4:	bcs	c0b4 <bt_compidtostr@@Base+0x4074>
    8ba8:	ldr	r0, [pc, #1552]	; 91c0 <bt_compidtostr@@Base+0x1180>
    8bac:	add	r0, pc, r0
    8bb0:	bx	lr
    8bb4:	movw	r3, #439	; 0x1b7
    8bb8:	cmp	r0, r3
    8bbc:	beq	c5dc <bt_compidtostr@@Base+0x459c>
    8bc0:	cmp	r0, #440	; 0x1b8
    8bc4:	bcs	c0a8 <bt_compidtostr@@Base+0x4068>
    8bc8:	ldr	r0, [pc, #1524]	; 91c4 <bt_compidtostr@@Base+0x1184>
    8bcc:	add	r0, pc, r0
    8bd0:	bx	lr
    8bd4:	movw	r3, #431	; 0x1af
    8bd8:	cmp	r0, r3
    8bdc:	beq	c5a0 <bt_compidtostr@@Base+0x4560>
    8be0:	cmp	r0, #432	; 0x1b0
    8be4:	bcs	c09c <bt_compidtostr@@Base+0x405c>
    8be8:	ldr	r0, [pc, #1496]	; 91c8 <bt_compidtostr@@Base+0x1188>
    8bec:	add	r0, pc, r0
    8bf0:	bx	lr
    8bf4:	movw	r3, #425	; 0x1a9
    8bf8:	cmp	r0, r3
    8bfc:	beq	d4d0 <bt_compidtostr@@Base+0x5490>
    8c00:	bls	8e7c <bt_compidtostr@@Base+0xe3c>
    8c04:	movw	r3, #427	; 0x1ab
    8c08:	cmp	r0, r3
    8c0c:	beq	c810 <bt_compidtostr@@Base+0x47d0>
    8c10:	cmp	r0, #428	; 0x1ac
    8c14:	bcs	c090 <bt_compidtostr@@Base+0x4050>
    8c18:	ldr	r0, [pc, #1452]	; 91cc <bt_compidtostr@@Base+0x118c>
    8c1c:	add	r0, pc, r0
    8c20:	bx	lr
    8c24:	movw	r3, #405	; 0x195
    8c28:	cmp	r0, r3
    8c2c:	beq	d998 <bt_compidtostr@@Base+0x5958>
    8c30:	bls	9548 <bt_compidtostr@@Base+0x1508>
    8c34:	movw	r3, #413	; 0x19d
    8c38:	cmp	r0, r3
    8c3c:	beq	d6d4 <bt_compidtostr@@Base+0x5694>
    8c40:	bls	9518 <bt_compidtostr@@Base+0x14d8>
    8c44:	movw	r3, #417	; 0x1a1
    8c48:	cmp	r0, r3
    8c4c:	beq	d4b8 <bt_compidtostr@@Base+0x5478>
    8c50:	bls	9420 <bt_compidtostr@@Base+0x13e0>
    8c54:	movw	r3, #419	; 0x1a3
    8c58:	cmp	r0, r3
    8c5c:	beq	c5ac <bt_compidtostr@@Base+0x456c>
    8c60:	cmp	r0, #420	; 0x1a4
    8c64:	bcs	c084 <bt_compidtostr@@Base+0x4044>
    8c68:	ldr	r0, [pc, #1376]	; 91d0 <bt_compidtostr@@Base+0x1190>
    8c6c:	add	r0, pc, r0
    8c70:	bx	lr
    8c74:	cmp	r0, #364	; 0x16c
    8c78:	beq	d6e0 <bt_compidtostr@@Base+0x56a0>
    8c7c:	bls	8d6c <bt_compidtostr@@Base+0xd2c>
    8c80:	cmp	r0, #368	; 0x170
    8c84:	beq	d2f0 <bt_compidtostr@@Base+0x52b0>
    8c88:	bls	8d50 <bt_compidtostr@@Base+0xd10>
    8c8c:	movw	r3, #370	; 0x172
    8c90:	cmp	r0, r3
    8c94:	beq	c7ec <bt_compidtostr@@Base+0x47ac>
    8c98:	bhi	c078 <bt_compidtostr@@Base+0x4038>
    8c9c:	ldr	r0, [pc, #1328]	; 91d4 <bt_compidtostr@@Base+0x1194>
    8ca0:	add	r0, pc, r0
    8ca4:	bx	lr
    8ca8:	cmp	r0, #19
    8cac:	beq	d338 <bt_compidtostr@@Base+0x52f8>
    8cb0:	bls	8cfc <bt_compidtostr@@Base+0xcbc>
    8cb4:	cmp	r0, #21
    8cb8:	beq	c7e0 <bt_compidtostr@@Base+0x47a0>
    8cbc:	bhi	c06c <bt_compidtostr@@Base+0x402c>
    8cc0:	ldr	r0, [pc, #1296]	; 91d8 <bt_compidtostr@@Base+0x1198>
    8cc4:	add	r0, pc, r0
    8cc8:	bx	lr
    8ccc:	cmp	r0, #7
    8cd0:	beq	d728 <bt_compidtostr@@Base+0x56e8>
    8cd4:	bls	8d2c <bt_compidtostr@@Base+0xcec>
    8cd8:	cmp	r0, #11
    8cdc:	beq	d2cc <bt_compidtostr@@Base+0x528c>
    8ce0:	bls	8d14 <bt_compidtostr@@Base+0xcd4>
    8ce4:	cmp	r0, #13
    8ce8:	beq	c804 <bt_compidtostr@@Base+0x47c4>
    8cec:	bhi	c060 <bt_compidtostr@@Base+0x4020>
    8cf0:	ldr	r0, [pc, #1252]	; 91dc <bt_compidtostr@@Base+0x119c>
    8cf4:	add	r0, pc, r0
    8cf8:	bx	lr
    8cfc:	cmp	r0, #17
    8d00:	beq	c7f8 <bt_compidtostr@@Base+0x47b8>
    8d04:	bhi	c054 <bt_compidtostr@@Base+0x4014>
    8d08:	ldr	r0, [pc, #1232]	; 91e0 <bt_compidtostr@@Base+0x11a0>
    8d0c:	add	r0, pc, r0
    8d10:	bx	lr
    8d14:	cmp	r0, #9
    8d18:	beq	c828 <bt_compidtostr@@Base+0x47e8>
    8d1c:	bhi	c048 <bt_compidtostr@@Base+0x4008>
    8d20:	ldr	r0, [pc, #1212]	; 91e4 <bt_compidtostr@@Base+0x11a4>
    8d24:	add	r0, pc, r0
    8d28:	bx	lr
    8d2c:	cmp	r0, #3
    8d30:	beq	d2e4 <bt_compidtostr@@Base+0x52a4>
    8d34:	bls	8d94 <bt_compidtostr@@Base+0xd54>
    8d38:	cmp	r0, #5
    8d3c:	beq	c834 <bt_compidtostr@@Base+0x47f4>
    8d40:	bhi	c03c <bt_compidtostr@@Base+0x3ffc>
    8d44:	ldr	r0, [pc, #1180]	; 91e8 <bt_compidtostr@@Base+0x11a8>
    8d48:	add	r0, pc, r0
    8d4c:	bx	lr
    8d50:	movw	r3, #366	; 0x16e
    8d54:	cmp	r0, r3
    8d58:	beq	c81c <bt_compidtostr@@Base+0x47dc>
    8d5c:	bhi	c030 <bt_compidtostr@@Base+0x3ff0>
    8d60:	ldr	r0, [pc, #1156]	; 91ec <bt_compidtostr@@Base+0x11ac>
    8d64:	add	r0, pc, r0
    8d68:	bx	lr
    8d6c:	cmp	r0, #360	; 0x168
    8d70:	beq	d308 <bt_compidtostr@@Base+0x52c8>
    8d74:	bls	8dac <bt_compidtostr@@Base+0xd6c>
    8d78:	movw	r3, #362	; 0x16a
    8d7c:	cmp	r0, r3
    8d80:	beq	c8dc <bt_compidtostr@@Base+0x489c>
    8d84:	bhi	c024 <bt_compidtostr@@Base+0x3fe4>
    8d88:	ldr	r0, [pc, #1120]	; 91f0 <bt_compidtostr@@Base+0x11b0>
    8d8c:	add	r0, pc, r0
    8d90:	bx	lr
    8d94:	cmp	r0, #1
    8d98:	beq	c8d0 <bt_compidtostr@@Base+0x4890>
    8d9c:	bhi	c018 <bt_compidtostr@@Base+0x3fd8>
    8da0:	ldr	r0, [pc, #1100]	; 91f4 <bt_compidtostr@@Base+0x11b4>
    8da4:	add	r0, pc, r0
    8da8:	bx	lr
    8dac:	movw	r3, #358	; 0x166
    8db0:	cmp	r0, r3
    8db4:	beq	c8c4 <bt_compidtostr@@Base+0x4884>
    8db8:	bhi	c00c <bt_compidtostr@@Base+0x3fcc>
    8dbc:	ldr	r0, [pc, #1076]	; 91f8 <bt_compidtostr@@Base+0x11b8>
    8dc0:	add	r0, pc, r0
    8dc4:	bx	lr
    8dc8:	movw	r3, #382	; 0x17e
    8dcc:	cmp	r0, r3
    8dd0:	beq	c8f4 <bt_compidtostr@@Base+0x48b4>
    8dd4:	bhi	c000 <bt_compidtostr@@Base+0x3fc0>
    8dd8:	ldr	r0, [pc, #1052]	; 91fc <bt_compidtostr@@Base+0x11bc>
    8ddc:	add	r0, pc, r0
    8de0:	bx	lr
    8de4:	cmp	r0, #376	; 0x178
    8de8:	beq	d2fc <bt_compidtostr@@Base+0x52bc>
    8dec:	bls	8e9c <bt_compidtostr@@Base+0xe5c>
    8df0:	movw	r3, #378	; 0x17a
    8df4:	cmp	r0, r3
    8df8:	beq	c8e8 <bt_compidtostr@@Base+0x48a8>
    8dfc:	bhi	bff4 <bt_compidtostr@@Base+0x3fb4>
    8e00:	ldr	r0, [pc, #1016]	; 9200 <bt_compidtostr@@Base+0x11c0>
    8e04:	add	r0, pc, r0
    8e08:	bx	lr
    8e0c:	movw	r3, #486	; 0x1e6
    8e10:	cmp	r0, r3
    8e14:	beq	db0c <bt_compidtostr@@Base+0x5acc>
    8e18:	bls	8f3c <bt_compidtostr@@Base+0xefc>
    8e1c:	movw	r3, #502	; 0x1f6
    8e20:	cmp	r0, r3
    8e24:	beq	da64 <bt_compidtostr@@Base+0x5a24>
    8e28:	bls	8f04 <bt_compidtostr@@Base+0xec4>
    8e2c:	movw	r3, #510	; 0x1fe
    8e30:	cmp	r0, r3
    8e34:	beq	d8fc <bt_compidtostr@@Base+0x58bc>
    8e38:	bls	8edc <bt_compidtostr@@Base+0xe9c>
    8e3c:	movw	r3, #514	; 0x202
    8e40:	cmp	r0, r3
    8e44:	beq	d5e4 <bt_compidtostr@@Base+0x55a4>
    8e48:	bls	8ec4 <bt_compidtostr@@Base+0xe84>
    8e4c:	cmp	r0, #516	; 0x204
    8e50:	beq	cfb4 <bt_compidtostr@@Base+0x4f74>
    8e54:	bcc	c93c <bt_compidtostr@@Base+0x48fc>
    8e58:	movw	r3, #517	; 0x205
    8e5c:	cmp	r0, r3
    8e60:	beq	bfe8 <bt_compidtostr@@Base+0x3fa8>
    8e64:	movw	r3, #518	; 0x206
    8e68:	cmp	r0, r3
    8e6c:	bne	8eb8 <bt_compidtostr@@Base+0xe78>
    8e70:	ldr	r0, [pc, #908]	; 9204 <bt_compidtostr@@Base+0x11c4>
    8e74:	add	r0, pc, r0
    8e78:	bx	lr
    8e7c:	movw	r3, #423	; 0x1a7
    8e80:	cmp	r0, r3
    8e84:	beq	c930 <bt_compidtostr@@Base+0x48f0>
    8e88:	cmp	r0, #424	; 0x1a8
    8e8c:	bcs	bfdc <bt_compidtostr@@Base+0x3f9c>
    8e90:	ldr	r0, [pc, #880]	; 9208 <bt_compidtostr@@Base+0x11c8>
    8e94:	add	r0, pc, r0
    8e98:	bx	lr
    8e9c:	movw	r3, #374	; 0x176
    8ea0:	cmp	r0, r3
    8ea4:	beq	c954 <bt_compidtostr@@Base+0x4914>
    8ea8:	bhi	bfd0 <bt_compidtostr@@Base+0x3f90>
    8eac:	ldr	r0, [pc, #856]	; 920c <bt_compidtostr@@Base+0x11cc>
    8eb0:	add	r0, pc, r0
    8eb4:	bx	lr
    8eb8:	ldr	r0, [pc, #848]	; 9210 <bt_compidtostr@@Base+0x11d0>
    8ebc:	add	r0, pc, r0
    8ec0:	bx	lr
    8ec4:	cmp	r0, #512	; 0x200
    8ec8:	beq	c948 <bt_compidtostr@@Base+0x4908>
    8ecc:	bhi	bfc4 <bt_compidtostr@@Base+0x3f84>
    8ed0:	ldr	r0, [pc, #828]	; 9214 <bt_compidtostr@@Base+0x11d4>
    8ed4:	add	r0, pc, r0
    8ed8:	bx	lr
    8edc:	movw	r3, #506	; 0x1fa
    8ee0:	cmp	r0, r3
    8ee4:	beq	d230 <bt_compidtostr@@Base+0x51f0>
    8ee8:	bls	8f84 <bt_compidtostr@@Base+0xf44>
    8eec:	cmp	r0, #508	; 0x1fc
    8ef0:	beq	c978 <bt_compidtostr@@Base+0x4938>
    8ef4:	bhi	bfb8 <bt_compidtostr@@Base+0x3f78>
    8ef8:	ldr	r0, [pc, #792]	; 9218 <bt_compidtostr@@Base+0x11d8>
    8efc:	add	r0, pc, r0
    8f00:	bx	lr
    8f04:	movw	r3, #494	; 0x1ee
    8f08:	cmp	r0, r3
    8f0c:	beq	d650 <bt_compidtostr@@Base+0x5610>
    8f10:	bls	9084 <bt_compidtostr@@Base+0x1044>
    8f14:	movw	r3, #498	; 0x1f2
    8f18:	cmp	r0, r3
    8f1c:	beq	d218 <bt_compidtostr@@Base+0x51d8>
    8f20:	bls	906c <bt_compidtostr@@Base+0x102c>
    8f24:	cmp	r0, #500	; 0x1f4
    8f28:	beq	c90c <bt_compidtostr@@Base+0x48cc>
    8f2c:	bhi	bfac <bt_compidtostr@@Base+0x3f6c>
    8f30:	ldr	r0, [pc, #740]	; 921c <bt_compidtostr@@Base+0x11dc>
    8f34:	add	r0, pc, r0
    8f38:	bx	lr
    8f3c:	movw	r3, #470	; 0x1d6
    8f40:	cmp	r0, r3
    8f44:	beq	d95c <bt_compidtostr@@Base+0x591c>
    8f48:	bls	8fdc <bt_compidtostr@@Base+0xf9c>
    8f4c:	movw	r3, #478	; 0x1de
    8f50:	cmp	r0, r3
    8f54:	beq	d83c <bt_compidtostr@@Base+0x57fc>
    8f58:	bls	8fb4 <bt_compidtostr@@Base+0xf74>
    8f5c:	movw	r3, #482	; 0x1e2
    8f60:	cmp	r0, r3
    8f64:	beq	d224 <bt_compidtostr@@Base+0x51e4>
    8f68:	bls	8f9c <bt_compidtostr@@Base+0xf5c>
    8f6c:	cmp	r0, #484	; 0x1e4
    8f70:	beq	c924 <bt_compidtostr@@Base+0x48e4>
    8f74:	bhi	bfa0 <bt_compidtostr@@Base+0x3f60>
    8f78:	ldr	r0, [pc, #672]	; 9220 <bt_compidtostr@@Base+0x11e0>
    8f7c:	add	r0, pc, r0
    8f80:	bx	lr
    8f84:	cmp	r0, #504	; 0x1f8
    8f88:	beq	c918 <bt_compidtostr@@Base+0x48d8>
    8f8c:	bhi	bf94 <bt_compidtostr@@Base+0x3f54>
    8f90:	ldr	r0, [pc, #652]	; 9224 <bt_compidtostr@@Base+0x11e4>
    8f94:	add	r0, pc, r0
    8f98:	bx	lr
    8f9c:	cmp	r0, #480	; 0x1e0
    8fa0:	beq	c900 <bt_compidtostr@@Base+0x48c0>
    8fa4:	bhi	bf88 <bt_compidtostr@@Base+0x3f48>
    8fa8:	ldr	r0, [pc, #632]	; 9228 <bt_compidtostr@@Base+0x11e8>
    8fac:	add	r0, pc, r0
    8fb0:	bx	lr
    8fb4:	movw	r3, #474	; 0x1da
    8fb8:	cmp	r0, r3
    8fbc:	beq	d23c <bt_compidtostr@@Base+0x51fc>
    8fc0:	bls	9014 <bt_compidtostr@@Base+0xfd4>
    8fc4:	cmp	r0, #476	; 0x1dc
    8fc8:	beq	c96c <bt_compidtostr@@Base+0x492c>
    8fcc:	bhi	bf7c <bt_compidtostr@@Base+0x3f3c>
    8fd0:	ldr	r0, [pc, #596]	; 922c <bt_compidtostr@@Base+0x11ec>
    8fd4:	add	r0, pc, r0
    8fd8:	bx	lr
    8fdc:	movw	r3, #462	; 0x1ce
    8fe0:	cmp	r0, r3
    8fe4:	beq	d71c <bt_compidtostr@@Base+0x56dc>
    8fe8:	bls	9044 <bt_compidtostr@@Base+0x1004>
    8fec:	movw	r3, #466	; 0x1d2
    8ff0:	cmp	r0, r3
    8ff4:	beq	d2d8 <bt_compidtostr@@Base+0x5298>
    8ff8:	bls	902c <bt_compidtostr@@Base+0xfec>
    8ffc:	cmp	r0, #468	; 0x1d4
    9000:	beq	c858 <bt_compidtostr@@Base+0x4818>
    9004:	bhi	bf70 <bt_compidtostr@@Base+0x3f30>
    9008:	ldr	r0, [pc, #544]	; 9230 <bt_compidtostr@@Base+0x11f0>
    900c:	add	r0, pc, r0
    9010:	bx	lr
    9014:	cmp	r0, #472	; 0x1d8
    9018:	beq	c84c <bt_compidtostr@@Base+0x480c>
    901c:	bhi	bf64 <bt_compidtostr@@Base+0x3f24>
    9020:	ldr	r0, [pc, #524]	; 9234 <bt_compidtostr@@Base+0x11f4>
    9024:	add	r0, pc, r0
    9028:	bx	lr
    902c:	cmp	r0, #464	; 0x1d0
    9030:	beq	c840 <bt_compidtostr@@Base+0x4800>
    9034:	bhi	bf58 <bt_compidtostr@@Base+0x3f18>
    9038:	ldr	r0, [pc, #504]	; 9238 <bt_compidtostr@@Base+0x11f8>
    903c:	add	r0, pc, r0
    9040:	bx	lr
    9044:	movw	r3, #458	; 0x1ca
    9048:	cmp	r0, r3
    904c:	beq	d20c <bt_compidtostr@@Base+0x51cc>
    9050:	bls	90ac <bt_compidtostr@@Base+0x106c>
    9054:	cmp	r0, #460	; 0x1cc
    9058:	beq	c960 <bt_compidtostr@@Base+0x4920>
    905c:	bhi	bf4c <bt_compidtostr@@Base+0x3f0c>
    9060:	ldr	r0, [pc, #468]	; 923c <bt_compidtostr@@Base+0x11fc>
    9064:	add	r0, pc, r0
    9068:	bx	lr
    906c:	cmp	r0, #496	; 0x1f0
    9070:	beq	c87c <bt_compidtostr@@Base+0x483c>
    9074:	bhi	bf40 <bt_compidtostr@@Base+0x3f00>
    9078:	ldr	r0, [pc, #448]	; 9240 <bt_compidtostr@@Base+0x1200>
    907c:	add	r0, pc, r0
    9080:	bx	lr
    9084:	movw	r3, #490	; 0x1ea
    9088:	cmp	r0, r3
    908c:	beq	d320 <bt_compidtostr@@Base+0x52e0>
    9090:	bls	93c8 <bt_compidtostr@@Base+0x1388>
    9094:	cmp	r0, #492	; 0x1ec
    9098:	beq	c864 <bt_compidtostr@@Base+0x4824>
    909c:	bhi	bf34 <bt_compidtostr@@Base+0x3ef4>
    90a0:	ldr	r0, [pc, #412]	; 9244 <bt_compidtostr@@Base+0x1204>
    90a4:	add	r0, pc, r0
    90a8:	bx	lr
    90ac:	cmp	r0, #456	; 0x1c8
    90b0:	beq	c870 <bt_compidtostr@@Base+0x4830>
    90b4:	bhi	bf28 <bt_compidtostr@@Base+0x3ee8>
    90b8:	ldr	r0, [pc, #392]	; 9248 <bt_compidtostr@@Base+0x1208>
    90bc:	add	r0, pc, r0
    90c0:	bx	lr
    90c4:	muleq	r0, ip, r3
    90c8:	muleq	r0, r4, sp
    90cc:	andeq	sl, r0, r8, lsl #27
    90d0:	strdeq	fp, [r0], -r8
    90d4:	andeq	fp, r0, r0, asr r1
    90d8:	andeq	fp, r0, r8, ror r0
    90dc:	strheq	fp, [r0], -ip
    90e0:	andeq	fp, r0, r4
    90e4:	andeq	sl, r0, r0, lsl #31
    90e8:			; <UNDEFINED> instruction: 0x0000aeb8
    90ec:	andeq	fp, r0, r0, ror sp
    90f0:	strdeq	fp, [r0], -r8
    90f4:	andeq	sl, r0, r0, lsr #28
    90f8:	andeq	sl, r0, ip, lsr #23
    90fc:	andeq	fp, r0, ip, lsl r6
    9100:	muleq	r0, ip, r5
    9104:	andeq	fp, r0, r0, asr #9
    9108:	andeq	sl, r0, r4, lsr fp
    910c:			; <UNDEFINED> instruction: 0x0000bbbc
    9110:	andeq	fp, r0, r8, lsl #6
    9114:	muleq	r0, r8, r4
    9118:	andeq	fp, r0, r4, ror #4
    911c:	ldrdeq	fp, [r0], -r4
    9120:	strdeq	fp, [r0], -ip
    9124:	andeq	fp, r0, ip, lsr r1
    9128:	andeq	fp, r0, r0, ror r0
    912c:	strdeq	sl, [r0], -r0
    9130:	andeq	fp, r0, r4, lsl r3
    9134:	andeq	fp, r0, r8, lsr #5
    9138:	andeq	sl, r0, r0, lsr pc
    913c:	andeq	fp, r0, r4, lsr #4
    9140:			; <UNDEFINED> instruction: 0x0000b9b8
    9144:	andeq	fp, r0, r0, ror #17
    9148:	andeq	fp, r0, r8, lsl r9
    914c:	andeq	fp, r0, r8, asr #16
    9150:	ldrdeq	fp, [r0], -r0
    9154:	andeq	fp, r0, ip, ror #13
    9158:			; <UNDEFINED> instruction: 0x0000beb8
    915c:	ldrdeq	fp, [r0], -r0
    9160:	andeq	ip, r0, r0, asr r3
    9164:	andeq	sl, r0, r0, asr r9
    9168:	andeq	sl, r0, r8, ror r7
    916c:	andeq	ip, r0, r0, ror r2
    9170:	strdeq	ip, [r0], -r0
    9174:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    9178:	andeq	fp, r0, r0, ror #30
    917c:	andeq	ip, r0, r8, asr #1
    9180:	strdeq	fp, [r0], -r4
    9184:	andeq	fp, r0, ip, ror #28
    9188:	muleq	r0, r0, sp
    918c:	andeq	fp, r0, ip, asr #27
    9190:	andeq	fp, r0, r0, lsl #26
    9194:	andeq	fp, r0, ip, lsl #25
    9198:	andeq	fp, r0, r8, lsl #30
    919c:	andeq	fp, r0, r4, lsl #29
    91a0:	muleq	r0, ip, fp
    91a4:	andeq	fp, r0, ip, lsl #28
    91a8:	andeq	ip, r0, ip, lsr r5
    91ac:	ldrdeq	ip, [r0], -r0
    91b0:	andeq	sl, r0, ip, lsl #8
    91b4:	andeq	sl, r0, r0, lsl #8
    91b8:	andeq	ip, r0, r8, lsl #18
    91bc:	andeq	ip, r0, ip, ror r8
    91c0:			; <UNDEFINED> instruction: 0x0000c7b8
    91c4:	ldrdeq	ip, [r0], -r4
    91c8:	andeq	ip, r0, r8, lsl r7
    91cc:	andeq	ip, r0, r8, lsl #13
    91d0:			; <UNDEFINED> instruction: 0x0000c5b0
    91d4:	andeq	ip, r0, r8, lsr #3
    91d8:	ldrdeq	sl, [r0], -r4
    91dc:	andeq	sl, r0, ip, ror #5
    91e0:	andeq	sl, r0, r8, asr #6
    91e4:	andeq	sl, r0, ip, ror #4
    91e8:	andeq	sl, r0, ip, lsl r2
    91ec:	andeq	ip, r0, r0, lsr #1
    91f0:	andeq	ip, r0, ip, lsr r0
    91f4:	andeq	sl, r0, r8, lsl #3
    91f8:	andeq	fp, r0, r0, lsr #31
    91fc:	andeq	ip, r0, r4, ror #2
    9200:	strdeq	ip, [r0], -r0
    9204:	muleq	r0, r4, fp
    9208:	ldrdeq	ip, [r0], -r4
    920c:	strdeq	fp, [r0], -ip
    9210:	andeq	sl, r0, r0, rrx
    9214:	andeq	ip, r0, r4, lsr #21
    9218:	andeq	ip, r0, r4, lsl sl
    921c:	andeq	ip, r0, r0, lsr #18
    9220:	andeq	ip, r0, ip, lsl #15
    9224:	andeq	ip, r0, r4, lsl r9
    9228:	andeq	ip, r0, r0, lsr #14
    922c:	andeq	ip, r0, ip, lsl #13
    9230:			; <UNDEFINED> instruction: 0x0000c5b8
    9234:	andeq	ip, r0, r0, ror #11
    9238:	andeq	ip, r0, r0, asr r5
    923c:	andeq	ip, r0, ip, asr #9
    9240:	andeq	ip, r0, r0, lsl #15
    9244:	andeq	ip, r0, r4, lsl #14
    9248:	andeq	ip, r0, r4, lsr r4
    924c:	andeq	ip, r0, r8, lsl #7
    9250:	andeq	fp, r0, r4, ror #17
    9254:	andeq	fp, r0, r4, lsr #27
    9258:	andeq	fp, r0, r4, ror #16
    925c:	strdeq	fp, [r0], -r4
    9260:	andeq	fp, r0, r0, lsr #14
    9264:	andeq	fp, r0, ip, asr #14
    9268:	andeq	fp, r0, ip, lsl #13
    926c:	andeq	fp, r0, r4, lsr #12
    9270:	andeq	fp, r0, r4, asr #24
    9274:	andeq	fp, r0, r4, asr fp
    9278:	andeq	fp, r0, r4, asr r5
    927c:	andeq	fp, r0, r4, ror #22
    9280:	andeq	fp, r0, r4, lsr #21
    9284:	andeq	fp, r0, ip, lsl sl
    9288:	andeq	r9, r0, r4, lsl #18
    928c:	andeq	sl, r0, r4, asr r6
    9290:	andeq	sl, r0, r8, lsr r5
    9294:			; <UNDEFINED> instruction: 0x0000a5b0
    9298:	andeq	sl, r0, r0, lsl #9
    929c:	andeq	sl, r0, ip, lsl r4
    92a0:	andeq	sl, r0, ip, lsl r6
    92a4:	andeq	r9, r0, r8, lsr r8
    92a8:	andeq	sl, r0, ip, ror r3
    92ac:	strdeq	sl, [r0], -r8
    92b0:	andeq	sl, r0, ip, lsl #27
    92b4:	andeq	sl, r0, r0, lsr #25
    92b8:	andeq	sl, r0, r0, lsr #22
    92bc:	andeq	sl, r0, r0, asr #25
    92c0:	andeq	sl, r0, ip, lsr #21
    92c4:	andeq	sl, r0, r0, lsr #20
    92c8:	andeq	sl, r0, r0, lsr r9
    92cc:	andeq	sl, r0, ip, ror #18
    92d0:			; <UNDEFINED> instruction: 0x0000a8b0
    92d4:	andeq	sl, r0, r4, ror #16
    92d8:	andeq	sl, r0, r0, lsl fp
    92dc:	muleq	r0, ip, sl
    92e0:	andeq	sl, r0, ip, asr #15
    92e4:	andeq	sl, r0, r8, lsl sl
    92e8:	andeq	ip, r0, r4, lsl r3
    92ec:	andeq	ip, r0, r8, asr #21
    92f0:	andeq	ip, r0, r0, asr #4
    92f4:	andeq	r9, r0, r4, asr r5
    92f8:	andeq	ip, r0, r4, lsl #20
    92fc:	andeq	ip, r0, r8, ror #18
    9300:	muleq	r0, ip, r8
    9304:	andeq	ip, r0, r4, lsr r7
    9308:	andeq	ip, r0, ip, lsl #17
    930c:			; <UNDEFINED> instruction: 0x0000c6b8
    9310:	andeq	ip, r0, r0, asr #12
    9314:	andeq	ip, r0, r0, lsr #10
    9318:	andeq	ip, r0, r4, ror #10
    931c:	andeq	ip, r0, r8, lsr #9
    9320:	andeq	ip, r0, r0, lsl r4
    9324:	andeq	ip, r0, ip, lsl #14
    9328:	muleq	r0, ip, r6
    932c:	andeq	ip, r0, r0, ror r3
    9330:	andeq	ip, r0, r8, lsl #12
    9334:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    9338:	andeq	fp, r0, r0, asr #29
    933c:	strdeq	fp, [r0], -r4
    9340:	andeq	fp, r0, r0, asr #28
    9344:	andeq	fp, r0, ip, lsr #27
    9348:	andeq	ip, r0, ip, ror ip
    934c:	andeq	sp, r0, r4, lsl r6
    9350:	andeq	fp, r0, ip, lsl ip
    9354:	andeq	r9, r0, r4, lsl #2
    9358:	andeq	sp, r0, r8, ror #10
    935c:	ldrdeq	sp, [r0], -r8
    9360:	andeq	sp, r0, r0, lsl r4
    9364:	andeq	sp, r0, r8, lsr #5
    9368:	ldrdeq	sp, [r0], -r4
    936c:	andeq	sp, r0, r4, lsl r2
    9370:	muleq	r0, r0, r1
    9374:	strheq	sp, [r0], -ip
    9378:	andeq	sp, r0, r8, ror #1
    937c:	andeq	sp, r0, ip, lsl r0
    9380:	andeq	ip, r0, r0, lsr #31
    9384:	andeq	sp, r0, ip, asr #4
    9388:	andeq	sp, r0, r4, asr #3
    938c:	andeq	ip, r0, r0, lsl #30
    9390:	andeq	sp, r0, ip, asr #2
    9394:	andeq	sp, r0, r0, lsr r8
    9398:			; <UNDEFINED> instruction: 0x0000dcbc
    939c:	muleq	r0, r8, sp
    93a0:	andeq	r8, r0, ip, lsl #27
    93a4:	strdeq	sp, [r0], -r0
    93a8:	andeq	sp, r0, r8, ror #22
    93ac:	andeq	sp, r0, ip, ror #20
    93b0:	andeq	sp, r0, r8, lsr #21
    93b4:	strdeq	sp, [r0], -r0
    93b8:	andeq	sp, r0, r0, ror #18
    93bc:	andeq	sp, r0, r4, ror r8
    93c0:	andeq	ip, r0, ip, ror #10
    93c4:	andeq	ip, r0, r0, asr #6
    93c8:	cmp	r0, #488	; 0x1e8
    93cc:	beq	c6fc <bt_compidtostr@@Base+0x46bc>
    93d0:	bhi	bf1c <bt_compidtostr@@Base+0x3edc>
    93d4:	ldr	r0, [pc, #-400]	; 924c <bt_compidtostr@@Base+0x120c>
    93d8:	add	r0, pc, r0
    93dc:	bx	lr
    93e0:	cmp	r0, #340	; 0x154
    93e4:	beq	d938 <bt_compidtostr@@Base+0x58f8>
    93e8:	bls	9484 <bt_compidtostr@@Base+0x1444>
    93ec:	cmp	r0, #348	; 0x15c
    93f0:	beq	d7c4 <bt_compidtostr@@Base+0x5784>
    93f4:	bls	945c <bt_compidtostr@@Base+0x141c>
    93f8:	cmp	r0, #352	; 0x160
    93fc:	beq	d3b0 <bt_compidtostr@@Base+0x5370>
    9400:	bls	9440 <bt_compidtostr@@Base+0x1400>
    9404:	movw	r3, #354	; 0x162
    9408:	cmp	r0, r3
    940c:	beq	c720 <bt_compidtostr@@Base+0x46e0>
    9410:	bhi	bf10 <bt_compidtostr@@Base+0x3ed0>
    9414:	ldr	r0, [pc, #-460]	; 9250 <bt_compidtostr@@Base+0x1210>
    9418:	add	r0, pc, r0
    941c:	bx	lr
    9420:	movw	r3, #415	; 0x19f
    9424:	cmp	r0, r3
    9428:	beq	c714 <bt_compidtostr@@Base+0x46d4>
    942c:	cmp	r0, #416	; 0x1a0
    9430:	bcs	bf04 <bt_compidtostr@@Base+0x3ec4>
    9434:	ldr	r0, [pc, #-488]	; 9254 <bt_compidtostr@@Base+0x1214>
    9438:	add	r0, pc, r0
    943c:	bx	lr
    9440:	movw	r3, #350	; 0x15e
    9444:	cmp	r0, r3
    9448:	beq	c708 <bt_compidtostr@@Base+0x46c8>
    944c:	bhi	bef8 <bt_compidtostr@@Base+0x3eb8>
    9450:	ldr	r0, [pc, #-512]	; 9258 <bt_compidtostr@@Base+0x1218>
    9454:	add	r0, pc, r0
    9458:	bx	lr
    945c:	cmp	r0, #344	; 0x158
    9460:	beq	d380 <bt_compidtostr@@Base+0x5340>
    9464:	bls	94b8 <bt_compidtostr@@Base+0x1478>
    9468:	movw	r3, #346	; 0x15a
    946c:	cmp	r0, r3
    9470:	beq	c75c <bt_compidtostr@@Base+0x471c>
    9474:	bhi	beec <bt_compidtostr@@Base+0x3eac>
    9478:	ldr	r0, [pc, #-548]	; 925c <bt_compidtostr@@Base+0x121c>
    947c:	add	r0, pc, r0
    9480:	bx	lr
    9484:	cmp	r0, #332	; 0x14c
    9488:	beq	d7b8 <bt_compidtostr@@Base+0x5778>
    948c:	bls	94f0 <bt_compidtostr@@Base+0x14b0>
    9490:	cmp	r0, #336	; 0x150
    9494:	beq	d3a4 <bt_compidtostr@@Base+0x5364>
    9498:	bls	94d4 <bt_compidtostr@@Base+0x1494>
    949c:	movw	r3, #338	; 0x152
    94a0:	cmp	r0, r3
    94a4:	beq	c744 <bt_compidtostr@@Base+0x4704>
    94a8:	bhi	bee0 <bt_compidtostr@@Base+0x3ea0>
    94ac:	ldr	r0, [pc, #-596]	; 9260 <bt_compidtostr@@Base+0x1220>
    94b0:	add	r0, pc, r0
    94b4:	bx	lr
    94b8:	movw	r3, #342	; 0x156
    94bc:	cmp	r0, r3
    94c0:	beq	c738 <bt_compidtostr@@Base+0x46f8>
    94c4:	bhi	bed4 <bt_compidtostr@@Base+0x3e94>
    94c8:	ldr	r0, [pc, #-620]	; 9264 <bt_compidtostr@@Base+0x1224>
    94cc:	add	r0, pc, r0
    94d0:	bx	lr
    94d4:	movw	r3, #334	; 0x14e
    94d8:	cmp	r0, r3
    94dc:	beq	c72c <bt_compidtostr@@Base+0x46ec>
    94e0:	bhi	bec8 <bt_compidtostr@@Base+0x3e88>
    94e4:	ldr	r0, [pc, #-644]	; 9268 <bt_compidtostr@@Base+0x1228>
    94e8:	add	r0, pc, r0
    94ec:	bx	lr
    94f0:	cmp	r0, #328	; 0x148
    94f4:	beq	d398 <bt_compidtostr@@Base+0x5358>
    94f8:	bls	9588 <bt_compidtostr@@Base+0x1548>
    94fc:	movw	r3, #330	; 0x14a
    9500:	cmp	r0, r3
    9504:	beq	c750 <bt_compidtostr@@Base+0x4710>
    9508:	bhi	bebc <bt_compidtostr@@Base+0x3e7c>
    950c:	ldr	r0, [pc, #-680]	; 926c <bt_compidtostr@@Base+0x122c>
    9510:	add	r0, pc, r0
    9514:	bx	lr
    9518:	movw	r3, #409	; 0x199
    951c:	cmp	r0, r3
    9520:	beq	d314 <bt_compidtostr@@Base+0x52d4>
    9524:	bls	95a4 <bt_compidtostr@@Base+0x1564>
    9528:	movw	r3, #411	; 0x19b
    952c:	cmp	r0, r3
    9530:	beq	c8a0 <bt_compidtostr@@Base+0x4860>
    9534:	cmp	r0, #412	; 0x19c
    9538:	bcs	beb0 <bt_compidtostr@@Base+0x3e70>
    953c:	ldr	r0, [pc, #-724]	; 9270 <bt_compidtostr@@Base+0x1230>
    9540:	add	r0, pc, r0
    9544:	bx	lr
    9548:	movw	r3, #397	; 0x18d
    954c:	cmp	r0, r3
    9550:	beq	d6ec <bt_compidtostr@@Base+0x56ac>
    9554:	bls	95e4 <bt_compidtostr@@Base+0x15a4>
    9558:	movw	r3, #401	; 0x191
    955c:	cmp	r0, r3
    9560:	beq	d32c <bt_compidtostr@@Base+0x52ec>
    9564:	bls	95c4 <bt_compidtostr@@Base+0x1584>
    9568:	movw	r3, #403	; 0x193
    956c:	cmp	r0, r3
    9570:	beq	c8b8 <bt_compidtostr@@Base+0x4878>
    9574:	cmp	r0, #404	; 0x194
    9578:	bcs	bea4 <bt_compidtostr@@Base+0x3e64>
    957c:	ldr	r0, [pc, #-784]	; 9274 <bt_compidtostr@@Base+0x1234>
    9580:	add	r0, pc, r0
    9584:	bx	lr
    9588:	movw	r3, #326	; 0x146
    958c:	cmp	r0, r3
    9590:	beq	c8ac <bt_compidtostr@@Base+0x486c>
    9594:	bhi	be98 <bt_compidtostr@@Base+0x3e58>
    9598:	ldr	r0, [pc, #-808]	; 9278 <bt_compidtostr@@Base+0x1238>
    959c:	add	r0, pc, r0
    95a0:	bx	lr
    95a4:	movw	r3, #407	; 0x197
    95a8:	cmp	r0, r3
    95ac:	beq	c894 <bt_compidtostr@@Base+0x4854>
    95b0:	cmp	r0, #408	; 0x198
    95b4:	bcs	be8c <bt_compidtostr@@Base+0x3e4c>
    95b8:	ldr	r0, [pc, #-836]	; 927c <bt_compidtostr@@Base+0x123c>
    95bc:	add	r0, pc, r0
    95c0:	bx	lr
    95c4:	movw	r3, #399	; 0x18f
    95c8:	cmp	r0, r3
    95cc:	beq	c888 <bt_compidtostr@@Base+0x4848>
    95d0:	cmp	r0, #400	; 0x190
    95d4:	bcs	be80 <bt_compidtostr@@Base+0x3e40>
    95d8:	ldr	r0, [pc, #-864]	; 9280 <bt_compidtostr@@Base+0x1240>
    95dc:	add	r0, pc, r0
    95e0:	bx	lr
    95e4:	movw	r3, #393	; 0x189
    95e8:	cmp	r0, r3
    95ec:	beq	d35c <bt_compidtostr@@Base+0x531c>
    95f0:	bls	a8f0 <bt_compidtostr@@Base+0x28b0>
    95f4:	movw	r3, #395	; 0x18b
    95f8:	cmp	r0, r3
    95fc:	beq	c78c <bt_compidtostr@@Base+0x474c>
    9600:	cmp	r0, #396	; 0x18c
    9604:	bcs	be74 <bt_compidtostr@@Base+0x3e34>
    9608:	ldr	r0, [pc, #-908]	; 9284 <bt_compidtostr@@Base+0x1244>
    960c:	add	r0, pc, r0
    9610:	bx	lr
    9614:	ldr	r0, [pc, #-916]	; 9288 <bt_compidtostr@@Base+0x1248>
    9618:	add	r0, pc, r0
    961c:	bx	lr
    9620:	cmp	r0, #149	; 0x95
    9624:	beq	d368 <bt_compidtostr@@Base+0x5328>
    9628:	bls	9674 <bt_compidtostr@@Base+0x1634>
    962c:	cmp	r0, #151	; 0x97
    9630:	beq	c780 <bt_compidtostr@@Base+0x4740>
    9634:	bhi	be68 <bt_compidtostr@@Base+0x3e28>
    9638:	ldr	r0, [pc, #-948]	; 928c <bt_compidtostr@@Base+0x124c>
    963c:	add	r0, pc, r0
    9640:	bx	lr
    9644:	cmp	r0, #137	; 0x89
    9648:	beq	d7ac <bt_compidtostr@@Base+0x576c>
    964c:	bls	96a4 <bt_compidtostr@@Base+0x1664>
    9650:	cmp	r0, #141	; 0x8d
    9654:	beq	d374 <bt_compidtostr@@Base+0x5334>
    9658:	bls	968c <bt_compidtostr@@Base+0x164c>
    965c:	cmp	r0, #143	; 0x8f
    9660:	beq	c774 <bt_compidtostr@@Base+0x4734>
    9664:	bhi	be5c <bt_compidtostr@@Base+0x3e1c>
    9668:	ldr	r0, [pc, #-992]	; 9290 <bt_compidtostr@@Base+0x1250>
    966c:	add	r0, pc, r0
    9670:	bx	lr
    9674:	cmp	r0, #147	; 0x93
    9678:	beq	c768 <bt_compidtostr@@Base+0x4728>
    967c:	bhi	be50 <bt_compidtostr@@Base+0x3e10>
    9680:	ldr	r0, [pc, #-1012]	; 9294 <bt_compidtostr@@Base+0x1254>
    9684:	add	r0, pc, r0
    9688:	bx	lr
    968c:	cmp	r0, #139	; 0x8b
    9690:	beq	c7b0 <bt_compidtostr@@Base+0x4770>
    9694:	bhi	be44 <bt_compidtostr@@Base+0x3e04>
    9698:	ldr	r0, [pc, #-1032]	; 9298 <bt_compidtostr@@Base+0x1258>
    969c:	add	r0, pc, r0
    96a0:	bx	lr
    96a4:	cmp	r0, #133	; 0x85
    96a8:	beq	d350 <bt_compidtostr@@Base+0x5310>
    96ac:	bls	96ec <bt_compidtostr@@Base+0x16ac>
    96b0:	cmp	r0, #135	; 0x87
    96b4:	beq	c7a4 <bt_compidtostr@@Base+0x4764>
    96b8:	bhi	be38 <bt_compidtostr@@Base+0x3df8>
    96bc:	ldr	r0, [pc, #-1064]	; 929c <bt_compidtostr@@Base+0x125c>
    96c0:	add	r0, pc, r0
    96c4:	bx	lr
    96c8:	cmp	r0, #155	; 0x9b
    96cc:	beq	c798 <bt_compidtostr@@Base+0x4758>
    96d0:	bhi	be2c <bt_compidtostr@@Base+0x3dec>
    96d4:	ldr	r0, [pc, #-1084]	; 92a0 <bt_compidtostr@@Base+0x1260>
    96d8:	add	r0, pc, r0
    96dc:	bx	lr
    96e0:	ldr	r0, [pc, #-1092]	; 92a4 <bt_compidtostr@@Base+0x1264>
    96e4:	add	r0, pc, r0
    96e8:	bx	lr
    96ec:	cmp	r0, #131	; 0x83
    96f0:	beq	c7d4 <bt_compidtostr@@Base+0x4794>
    96f4:	bhi	be20 <bt_compidtostr@@Base+0x3de0>
    96f8:	ldr	r0, [pc, #-1112]	; 92a8 <bt_compidtostr@@Base+0x1268>
    96fc:	add	r0, pc, r0
    9700:	bx	lr
    9704:	cmp	r0, #252	; 0xfc
    9708:	beq	c7c8 <bt_compidtostr@@Base+0x4788>
    970c:	bhi	be14 <bt_compidtostr@@Base+0x3dd4>
    9710:	ldr	r0, [pc, #-1132]	; 92ac <bt_compidtostr@@Base+0x126c>
    9714:	add	r0, pc, r0
    9718:	bx	lr
    971c:	cmp	r0, #246	; 0xf6
    9720:	beq	d344 <bt_compidtostr@@Base+0x5304>
    9724:	bls	97ac <bt_compidtostr@@Base+0x176c>
    9728:	cmp	r0, #248	; 0xf8
    972c:	beq	c7bc <bt_compidtostr@@Base+0x477c>
    9730:	bhi	be08 <bt_compidtostr@@Base+0x3dc8>
    9734:	ldr	r0, [pc, #-1164]	; 92b0 <bt_compidtostr@@Base+0x1270>
    9738:	add	r0, pc, r0
    973c:	bx	lr
    9740:	cmp	r0, #234	; 0xea
    9744:	beq	d7e8 <bt_compidtostr@@Base+0x57a8>
    9748:	bls	989c <bt_compidtostr@@Base+0x185c>
    974c:	cmp	r0, #238	; 0xee
    9750:	beq	d404 <bt_compidtostr@@Base+0x53c4>
    9754:	bls	9884 <bt_compidtostr@@Base+0x1844>
    9758:	cmp	r0, #240	; 0xf0
    975c:	beq	c630 <bt_compidtostr@@Base+0x45f0>
    9760:	bhi	bdfc <bt_compidtostr@@Base+0x3dbc>
    9764:	ldr	r0, [pc, #-1208]	; 92b4 <bt_compidtostr@@Base+0x1274>
    9768:	add	r0, pc, r0
    976c:	bx	lr
    9770:	cmp	r0, #210	; 0xd2
    9774:	beq	d9bc <bt_compidtostr@@Base+0x597c>
    9778:	bls	9800 <bt_compidtostr@@Base+0x17c0>
    977c:	cmp	r0, #218	; 0xda
    9780:	beq	d854 <bt_compidtostr@@Base+0x5814>
    9784:	bls	97dc <bt_compidtostr@@Base+0x179c>
    9788:	cmp	r0, #222	; 0xde
    978c:	beq	d3f8 <bt_compidtostr@@Base+0x53b8>
    9790:	bls	97c4 <bt_compidtostr@@Base+0x1784>
    9794:	cmp	r0, #224	; 0xe0
    9798:	beq	c648 <bt_compidtostr@@Base+0x4608>
    979c:	bhi	bdf0 <bt_compidtostr@@Base+0x3db0>
    97a0:	ldr	r0, [pc, #-1264]	; 92b8 <bt_compidtostr@@Base+0x1278>
    97a4:	add	r0, pc, r0
    97a8:	bx	lr
    97ac:	cmp	r0, #244	; 0xf4
    97b0:	beq	c63c <bt_compidtostr@@Base+0x45fc>
    97b4:	bhi	bde4 <bt_compidtostr@@Base+0x3da4>
    97b8:	ldr	r0, [pc, #-1284]	; 92bc <bt_compidtostr@@Base+0x127c>
    97bc:	add	r0, pc, r0
    97c0:	bx	lr
    97c4:	cmp	r0, #220	; 0xdc
    97c8:	beq	c678 <bt_compidtostr@@Base+0x4638>
    97cc:	bhi	bdd8 <bt_compidtostr@@Base+0x3d98>
    97d0:	ldr	r0, [pc, #-1304]	; 92c0 <bt_compidtostr@@Base+0x1280>
    97d4:	add	r0, pc, r0
    97d8:	bx	lr
    97dc:	cmp	r0, #214	; 0xd6
    97e0:	beq	d3ec <bt_compidtostr@@Base+0x53ac>
    97e4:	bls	9830 <bt_compidtostr@@Base+0x17f0>
    97e8:	cmp	r0, #216	; 0xd8
    97ec:	beq	c684 <bt_compidtostr@@Base+0x4644>
    97f0:	bhi	bdcc <bt_compidtostr@@Base+0x3d8c>
    97f4:	ldr	r0, [pc, #-1336]	; 92c4 <bt_compidtostr@@Base+0x1284>
    97f8:	add	r0, pc, r0
    97fc:	bx	lr
    9800:	cmp	r0, #202	; 0xca
    9804:	beq	d7d0 <bt_compidtostr@@Base+0x5790>
    9808:	bls	9860 <bt_compidtostr@@Base+0x1820>
    980c:	cmp	r0, #206	; 0xce
    9810:	beq	d3d4 <bt_compidtostr@@Base+0x5394>
    9814:	bls	9848 <bt_compidtostr@@Base+0x1808>
    9818:	cmp	r0, #208	; 0xd0
    981c:	beq	c66c <bt_compidtostr@@Base+0x462c>
    9820:	bhi	bdc0 <bt_compidtostr@@Base+0x3d80>
    9824:	ldr	r0, [pc, #-1380]	; 92c8 <bt_compidtostr@@Base+0x1288>
    9828:	add	r0, pc, r0
    982c:	bx	lr
    9830:	cmp	r0, #212	; 0xd4
    9834:	beq	c660 <bt_compidtostr@@Base+0x4620>
    9838:	bhi	bdb4 <bt_compidtostr@@Base+0x3d74>
    983c:	ldr	r0, [pc, #-1400]	; 92cc <bt_compidtostr@@Base+0x128c>
    9840:	add	r0, pc, r0
    9844:	bx	lr
    9848:	cmp	r0, #204	; 0xcc
    984c:	beq	c654 <bt_compidtostr@@Base+0x4614>
    9850:	bhi	bda8 <bt_compidtostr@@Base+0x3d68>
    9854:	ldr	r0, [pc, #-1420]	; 92d0 <bt_compidtostr@@Base+0x1290>
    9858:	add	r0, pc, r0
    985c:	bx	lr
    9860:	cmp	r0, #198	; 0xc6
    9864:	beq	d3bc <bt_compidtostr@@Base+0x537c>
    9868:	bls	98c0 <bt_compidtostr@@Base+0x1880>
    986c:	cmp	r0, #200	; 0xc8
    9870:	beq	c6c0 <bt_compidtostr@@Base+0x4680>
    9874:	bhi	bd9c <bt_compidtostr@@Base+0x3d5c>
    9878:	ldr	r0, [pc, #-1452]	; 92d4 <bt_compidtostr@@Base+0x1294>
    987c:	add	r0, pc, r0
    9880:	bx	lr
    9884:	cmp	r0, #236	; 0xec
    9888:	beq	c6e4 <bt_compidtostr@@Base+0x46a4>
    988c:	bhi	bd90 <bt_compidtostr@@Base+0x3d50>
    9890:	ldr	r0, [pc, #-1472]	; 92d8 <bt_compidtostr@@Base+0x1298>
    9894:	add	r0, pc, r0
    9898:	bx	lr
    989c:	cmp	r0, #230	; 0xe6
    98a0:	beq	d38c <bt_compidtostr@@Base+0x534c>
    98a4:	bls	98d8 <bt_compidtostr@@Base+0x1898>
    98a8:	cmp	r0, #232	; 0xe8
    98ac:	beq	c6f0 <bt_compidtostr@@Base+0x46b0>
    98b0:	bhi	bd84 <bt_compidtostr@@Base+0x3d44>
    98b4:	ldr	r0, [pc, #-1504]	; 92dc <bt_compidtostr@@Base+0x129c>
    98b8:	add	r0, pc, r0
    98bc:	bx	lr
    98c0:	cmp	r0, #196	; 0xc4
    98c4:	beq	c6d8 <bt_compidtostr@@Base+0x4698>
    98c8:	bhi	bd78 <bt_compidtostr@@Base+0x3d38>
    98cc:	ldr	r0, [pc, #-1524]	; 92e0 <bt_compidtostr@@Base+0x12a0>
    98d0:	add	r0, pc, r0
    98d4:	bx	lr
    98d8:	cmp	r0, #228	; 0xe4
    98dc:	beq	c6cc <bt_compidtostr@@Base+0x468c>
    98e0:	bhi	bd6c <bt_compidtostr@@Base+0x3d2c>
    98e4:	ldr	r0, [pc, #-1544]	; 92e4 <bt_compidtostr@@Base+0x12a4>
    98e8:	add	r0, pc, r0
    98ec:	bx	lr
    98f0:	movw	r3, #535	; 0x217
    98f4:	cmp	r0, r3
    98f8:	beq	d944 <bt_compidtostr@@Base+0x5904>
    98fc:	cmp	r0, #536	; 0x218
    9900:	bcc	9c28 <bt_compidtostr@@Base+0x1be8>
    9904:	movw	r3, #543	; 0x21f
    9908:	cmp	r0, r3
    990c:	beq	d644 <bt_compidtostr@@Base+0x5604>
    9910:	cmp	r0, #544	; 0x220
    9914:	bcc	9bf8 <bt_compidtostr@@Base+0x1bb8>
    9918:	movw	r3, #547	; 0x223
    991c:	cmp	r0, r3
    9920:	beq	d134 <bt_compidtostr@@Base+0x50f4>
    9924:	cmp	r0, #548	; 0x224
    9928:	bcc	99a8 <bt_compidtostr@@Base+0x1968>
    992c:	movw	r3, #549	; 0x225
    9930:	cmp	r0, r3
    9934:	beq	ccfc <bt_compidtostr@@Base+0x4cbc>
    9938:	bhi	bd60 <bt_compidtostr@@Base+0x3d20>
    993c:	ldr	r0, [pc, #-1628]	; 92e8 <bt_compidtostr@@Base+0x12a8>
    9940:	add	r0, pc, r0
    9944:	bx	lr
    9948:	cmp	r0, #616	; 0x268
    994c:	beq	dad0 <bt_compidtostr@@Base+0x5a90>
    9950:	bls	9a48 <bt_compidtostr@@Base+0x1a08>
    9954:	cmp	r0, #632	; 0x278
    9958:	beq	d9ec <bt_compidtostr@@Base+0x59ac>
    995c:	bls	9a14 <bt_compidtostr@@Base+0x19d4>
    9960:	cmp	r0, #640	; 0x280
    9964:	beq	d8cc <bt_compidtostr@@Base+0x588c>
    9968:	bls	99ec <bt_compidtostr@@Base+0x19ac>
    996c:	cmp	r0, #644	; 0x284
    9970:	beq	d5fc <bt_compidtostr@@Base+0x55bc>
    9974:	bls	99d0 <bt_compidtostr@@Base+0x1990>
    9978:	movw	r3, #646	; 0x286
    997c:	cmp	r0, r3
    9980:	beq	cf9c <bt_compidtostr@@Base+0x4f5c>
    9984:	bcc	cd08 <bt_compidtostr@@Base+0x4cc8>
    9988:	movw	r3, #647	; 0x287
    998c:	cmp	r0, r3
    9990:	beq	bd54 <bt_compidtostr@@Base+0x3d14>
    9994:	cmp	r0, #648	; 0x288
    9998:	bne	99c4 <bt_compidtostr@@Base+0x1984>
    999c:	ldr	r0, [pc, #-1720]	; 92ec <bt_compidtostr@@Base+0x12ac>
    99a0:	add	r0, pc, r0
    99a4:	bx	lr
    99a8:	movw	r3, #545	; 0x221
    99ac:	cmp	r0, r3
    99b0:	beq	ccf0 <bt_compidtostr@@Base+0x4cb0>
    99b4:	bhi	bd48 <bt_compidtostr@@Base+0x3d08>
    99b8:	ldr	r0, [pc, #-1744]	; 92f0 <bt_compidtostr@@Base+0x12b0>
    99bc:	add	r0, pc, r0
    99c0:	bx	lr
    99c4:	ldr	r0, [pc, #-1752]	; 92f4 <bt_compidtostr@@Base+0x12b4>
    99c8:	add	r0, pc, r0
    99cc:	bx	lr
    99d0:	movw	r3, #642	; 0x282
    99d4:	cmp	r0, r3
    99d8:	beq	cce4 <bt_compidtostr@@Base+0x4ca4>
    99dc:	bhi	bd3c <bt_compidtostr@@Base+0x3cfc>
    99e0:	ldr	r0, [pc, #-1776]	; 92f8 <bt_compidtostr@@Base+0x12b8>
    99e4:	add	r0, pc, r0
    99e8:	bx	lr
    99ec:	cmp	r0, #636	; 0x27c
    99f0:	beq	d200 <bt_compidtostr@@Base+0x51c0>
    99f4:	bls	9a88 <bt_compidtostr@@Base+0x1a48>
    99f8:	movw	r3, #638	; 0x27e
    99fc:	cmp	r0, r3
    9a00:	beq	ccd8 <bt_compidtostr@@Base+0x4c98>
    9a04:	bhi	bd30 <bt_compidtostr@@Base+0x3cf0>
    9a08:	ldr	r0, [pc, #-1812]	; 92fc <bt_compidtostr@@Base+0x12bc>
    9a0c:	add	r0, pc, r0
    9a10:	bx	lr
    9a14:	cmp	r0, #624	; 0x270
    9a18:	beq	d6a4 <bt_compidtostr@@Base+0x5664>
    9a1c:	bls	9b98 <bt_compidtostr@@Base+0x1b58>
    9a20:	cmp	r0, #628	; 0x274
    9a24:	beq	d104 <bt_compidtostr@@Base+0x50c4>
    9a28:	bls	9b7c <bt_compidtostr@@Base+0x1b3c>
    9a2c:	movw	r3, #630	; 0x276
    9a30:	cmp	r0, r3
    9a34:	beq	cccc <bt_compidtostr@@Base+0x4c8c>
    9a38:	bhi	bd24 <bt_compidtostr@@Base+0x3ce4>
    9a3c:	ldr	r0, [pc, #-1860]	; 9300 <bt_compidtostr@@Base+0x12c0>
    9a40:	add	r0, pc, r0
    9a44:	bx	lr
    9a48:	cmp	r0, #600	; 0x258
    9a4c:	beq	d92c <bt_compidtostr@@Base+0x58ec>
    9a50:	bls	9ae8 <bt_compidtostr@@Base+0x1aa8>
    9a54:	cmp	r0, #608	; 0x260
    9a58:	beq	d7dc <bt_compidtostr@@Base+0x579c>
    9a5c:	bls	9ac0 <bt_compidtostr@@Base+0x1a80>
    9a60:	cmp	r0, #612	; 0x264
    9a64:	beq	d3c8 <bt_compidtostr@@Base+0x5388>
    9a68:	bls	9aa4 <bt_compidtostr@@Base+0x1a64>
    9a6c:	movw	r3, #614	; 0x266
    9a70:	cmp	r0, r3
    9a74:	beq	c6b4 <bt_compidtostr@@Base+0x4674>
    9a78:	bhi	bd18 <bt_compidtostr@@Base+0x3cd8>
    9a7c:	ldr	r0, [pc, #-1920]	; 9304 <bt_compidtostr@@Base+0x12c4>
    9a80:	add	r0, pc, r0
    9a84:	bx	lr
    9a88:	movw	r3, #634	; 0x27a
    9a8c:	cmp	r0, r3
    9a90:	beq	c69c <bt_compidtostr@@Base+0x465c>
    9a94:	bhi	bd0c <bt_compidtostr@@Base+0x3ccc>
    9a98:	ldr	r0, [pc, #-1944]	; 9308 <bt_compidtostr@@Base+0x12c8>
    9a9c:	add	r0, pc, r0
    9aa0:	bx	lr
    9aa4:	movw	r3, #610	; 0x262
    9aa8:	cmp	r0, r3
    9aac:	beq	c690 <bt_compidtostr@@Base+0x4650>
    9ab0:	bhi	bd00 <bt_compidtostr@@Base+0x3cc0>
    9ab4:	ldr	r0, [pc, #-1968]	; 930c <bt_compidtostr@@Base+0x12cc>
    9ab8:	add	r0, pc, r0
    9abc:	bx	lr
    9ac0:	cmp	r0, #604	; 0x25c
    9ac4:	beq	d3e0 <bt_compidtostr@@Base+0x53a0>
    9ac8:	bls	9b1c <bt_compidtostr@@Base+0x1adc>
    9acc:	movw	r3, #606	; 0x25e
    9ad0:	cmp	r0, r3
    9ad4:	beq	c6a8 <bt_compidtostr@@Base+0x4668>
    9ad8:	bhi	bcf4 <bt_compidtostr@@Base+0x3cb4>
    9adc:	ldr	r0, [pc, #-2004]	; 9310 <bt_compidtostr@@Base+0x12d0>
    9ae0:	add	r0, pc, r0
    9ae4:	bx	lr
    9ae8:	cmp	r0, #592	; 0x250
    9aec:	beq	d6b0 <bt_compidtostr@@Base+0x5670>
    9af0:	bls	9b54 <bt_compidtostr@@Base+0x1b14>
    9af4:	cmp	r0, #596	; 0x254
    9af8:	beq	d0c8 <bt_compidtostr@@Base+0x5088>
    9afc:	bls	9b38 <bt_compidtostr@@Base+0x1af8>
    9b00:	movw	r3, #598	; 0x256
    9b04:	cmp	r0, r3
    9b08:	beq	cd5c <bt_compidtostr@@Base+0x4d1c>
    9b0c:	bhi	bce8 <bt_compidtostr@@Base+0x3ca8>
    9b10:	ldr	r0, [pc, #-2052]	; 9314 <bt_compidtostr@@Base+0x12d4>
    9b14:	add	r0, pc, r0
    9b18:	bx	lr
    9b1c:	movw	r3, #602	; 0x25a
    9b20:	cmp	r0, r3
    9b24:	beq	cd50 <bt_compidtostr@@Base+0x4d10>
    9b28:	bhi	bcdc <bt_compidtostr@@Base+0x3c9c>
    9b2c:	ldr	r0, [pc, #-2076]	; 9318 <bt_compidtostr@@Base+0x12d8>
    9b30:	add	r0, pc, r0
    9b34:	bx	lr
    9b38:	movw	r3, #594	; 0x252
    9b3c:	cmp	r0, r3
    9b40:	beq	cd80 <bt_compidtostr@@Base+0x4d40>
    9b44:	bhi	bcd0 <bt_compidtostr@@Base+0x3c90>
    9b48:	ldr	r0, [pc, #-2100]	; 931c <bt_compidtostr@@Base+0x12dc>
    9b4c:	add	r0, pc, r0
    9b50:	bx	lr
    9b54:	cmp	r0, #588	; 0x24c
    9b58:	beq	d0b0 <bt_compidtostr@@Base+0x5070>
    9b5c:	bls	9bc0 <bt_compidtostr@@Base+0x1b80>
    9b60:	movw	r3, #590	; 0x24e
    9b64:	cmp	r0, r3
    9b68:	beq	cd68 <bt_compidtostr@@Base+0x4d28>
    9b6c:	bhi	bcc4 <bt_compidtostr@@Base+0x3c84>
    9b70:	ldr	r0, [pc, #-2136]	; 9320 <bt_compidtostr@@Base+0x12e0>
    9b74:	add	r0, pc, r0
    9b78:	bx	lr
    9b7c:	movw	r3, #626	; 0x272
    9b80:	cmp	r0, r3
    9b84:	beq	cd74 <bt_compidtostr@@Base+0x4d34>
    9b88:	bhi	bcb8 <bt_compidtostr@@Base+0x3c78>
    9b8c:	ldr	r0, [pc, #-2160]	; 9324 <bt_compidtostr@@Base+0x12e4>
    9b90:	add	r0, pc, r0
    9b94:	bx	lr
    9b98:	cmp	r0, #620	; 0x26c
    9b9c:	beq	d0bc <bt_compidtostr@@Base+0x507c>
    9ba0:	bls	9bdc <bt_compidtostr@@Base+0x1b9c>
    9ba4:	movw	r3, #622	; 0x26e
    9ba8:	cmp	r0, r3
    9bac:	beq	cd2c <bt_compidtostr@@Base+0x4cec>
    9bb0:	bhi	bcac <bt_compidtostr@@Base+0x3c6c>
    9bb4:	ldr	r0, [pc, #-2196]	; 9328 <bt_compidtostr@@Base+0x12e8>
    9bb8:	add	r0, pc, r0
    9bbc:	bx	lr
    9bc0:	movw	r3, #586	; 0x24a
    9bc4:	cmp	r0, r3
    9bc8:	beq	cd44 <bt_compidtostr@@Base+0x4d04>
    9bcc:	bhi	bca0 <bt_compidtostr@@Base+0x3c60>
    9bd0:	ldr	r0, [pc, #-2220]	; 932c <bt_compidtostr@@Base+0x12ec>
    9bd4:	add	r0, pc, r0
    9bd8:	bx	lr
    9bdc:	movw	r3, #618	; 0x26a
    9be0:	cmp	r0, r3
    9be4:	beq	cd38 <bt_compidtostr@@Base+0x4cf8>
    9be8:	bhi	bc94 <bt_compidtostr@@Base+0x3c54>
    9bec:	ldr	r0, [pc, #-2244]	; 9330 <bt_compidtostr@@Base+0x12f0>
    9bf0:	add	r0, pc, r0
    9bf4:	bx	lr
    9bf8:	movw	r3, #539	; 0x21b
    9bfc:	cmp	r0, r3
    9c00:	beq	d0d4 <bt_compidtostr@@Base+0x5094>
    9c04:	cmp	r0, #540	; 0x21c
    9c08:	bcc	9c6c <bt_compidtostr@@Base+0x1c2c>
    9c0c:	movw	r3, #541	; 0x21d
    9c10:	cmp	r0, r3
    9c14:	beq	cd20 <bt_compidtostr@@Base+0x4ce0>
    9c18:	bhi	bc88 <bt_compidtostr@@Base+0x3c48>
    9c1c:	ldr	r0, [pc, #-2288]	; 9334 <bt_compidtostr@@Base+0x12f4>
    9c20:	add	r0, pc, r0
    9c24:	bx	lr
    9c28:	movw	r3, #527	; 0x20f
    9c2c:	cmp	r0, r3
    9c30:	beq	d6bc <bt_compidtostr@@Base+0x567c>
    9c34:	cmp	r0, #528	; 0x210
    9c38:	bcc	9ca4 <bt_compidtostr@@Base+0x1c64>
    9c3c:	movw	r3, #531	; 0x213
    9c40:	cmp	r0, r3
    9c44:	beq	d044 <bt_compidtostr@@Base+0x5004>
    9c48:	cmp	r0, #532	; 0x214
    9c4c:	bcc	9c88 <bt_compidtostr@@Base+0x1c48>
    9c50:	movw	r3, #533	; 0x215
    9c54:	cmp	r0, r3
    9c58:	beq	ce34 <bt_compidtostr@@Base+0x4df4>
    9c5c:	bhi	bc7c <bt_compidtostr@@Base+0x3c3c>
    9c60:	ldr	r0, [pc, #-2352]	; 9338 <bt_compidtostr@@Base+0x12f8>
    9c64:	add	r0, pc, r0
    9c68:	bx	lr
    9c6c:	movw	r3, #537	; 0x219
    9c70:	cmp	r0, r3
    9c74:	beq	cd14 <bt_compidtostr@@Base+0x4cd4>
    9c78:	bhi	bc70 <bt_compidtostr@@Base+0x3c30>
    9c7c:	ldr	r0, [pc, #-2376]	; 933c <bt_compidtostr@@Base+0x12fc>
    9c80:	add	r0, pc, r0
    9c84:	bx	lr
    9c88:	movw	r3, #529	; 0x211
    9c8c:	cmp	r0, r3
    9c90:	beq	ce28 <bt_compidtostr@@Base+0x4de8>
    9c94:	bhi	bc64 <bt_compidtostr@@Base+0x3c24>
    9c98:	ldr	r0, [pc, #-2400]	; 9340 <bt_compidtostr@@Base+0x1300>
    9c9c:	add	r0, pc, r0
    9ca0:	bx	lr
    9ca4:	movw	r3, #523	; 0x20b
    9ca8:	cmp	r0, r3
    9cac:	beq	d02c <bt_compidtostr@@Base+0x4fec>
    9cb0:	cmp	r0, #524	; 0x20c
    9cb4:	bcc	9df8 <bt_compidtostr@@Base+0x1db8>
    9cb8:	movw	r3, #525	; 0x20d
    9cbc:	cmp	r0, r3
    9cc0:	beq	ce70 <bt_compidtostr@@Base+0x4e30>
    9cc4:	bhi	bc58 <bt_compidtostr@@Base+0x3c18>
    9cc8:	ldr	r0, [pc, #-2444]	; 9344 <bt_compidtostr@@Base+0x1304>
    9ccc:	add	r0, pc, r0
    9cd0:	bx	lr
    9cd4:	movw	r3, #714	; 0x2ca
    9cd8:	cmp	r0, r3
    9cdc:	beq	db90 <bt_compidtostr@@Base+0x5b50>
    9ce0:	bhi	a368 <bt_compidtostr@@Base+0x2328>
    9ce4:	movw	r3, #681	; 0x2a9
    9ce8:	cmp	r0, r3
    9cec:	beq	dac4 <bt_compidtostr@@Base+0x5a84>
    9cf0:	bls	a318 <bt_compidtostr@@Base+0x22d8>
    9cf4:	movw	r3, #697	; 0x2b9
    9cf8:	cmp	r0, r3
    9cfc:	beq	d9e0 <bt_compidtostr@@Base+0x59a0>
    9d00:	bls	a92c <bt_compidtostr@@Base+0x28ec>
    9d04:	movw	r3, #705	; 0x2c1
    9d08:	cmp	r0, r3
    9d0c:	beq	d860 <bt_compidtostr@@Base+0x5820>
    9d10:	bls	a2e8 <bt_compidtostr@@Base+0x22a8>
    9d14:	movw	r3, #709	; 0x2c5
    9d18:	cmp	r0, r3
    9d1c:	beq	d560 <bt_compidtostr@@Base+0x5520>
    9d20:	bls	a7d8 <bt_compidtostr@@Base+0x2798>
    9d24:	movw	r3, #711	; 0x2c7
    9d28:	cmp	r0, r3
    9d2c:	beq	cf78 <bt_compidtostr@@Base+0x4f38>
    9d30:	bcc	ce64 <bt_compidtostr@@Base+0x4e24>
    9d34:	cmp	r0, #712	; 0x2c8
    9d38:	beq	bc4c <bt_compidtostr@@Base+0x3c0c>
    9d3c:	movw	r3, #713	; 0x2c9
    9d40:	cmp	r0, r3
    9d44:	bne	a7cc <bt_compidtostr@@Base+0x278c>
    9d48:	ldr	r0, [pc, #-2568]	; 9348 <bt_compidtostr@@Base+0x1308>
    9d4c:	add	r0, pc, r0
    9d50:	bx	lr
    9d54:	movw	r3, #909	; 0x38d
    9d58:	cmp	r0, r3
    9d5c:	beq	e144 <bt_compidtostr@@Base+0x6104>
    9d60:	bhi	a100 <bt_compidtostr@@Base+0x20c0>
    9d64:	cmp	r0, #844	; 0x34c
    9d68:	beq	dba8 <bt_compidtostr@@Base+0x5b68>
    9d6c:	bhi	a0a0 <bt_compidtostr@@Base+0x2060>
    9d70:	movw	r3, #811	; 0x32b
    9d74:	cmp	r0, r3
    9d78:	beq	db00 <bt_compidtostr@@Base+0x5ac0>
    9d7c:	cmp	r0, #812	; 0x32c
    9d80:	bcc	9eb0 <bt_compidtostr@@Base+0x1e70>
    9d84:	movw	r3, #827	; 0x33b
    9d88:	cmp	r0, r3
    9d8c:	beq	da40 <bt_compidtostr@@Base+0x5a00>
    9d90:	cmp	r0, #828	; 0x33c
    9d94:	bcc	9e6c <bt_compidtostr@@Base+0x1e2c>
    9d98:	movw	r3, #835	; 0x343
    9d9c:	cmp	r0, r3
    9da0:	beq	d8c0 <bt_compidtostr@@Base+0x5880>
    9da4:	cmp	r0, #836	; 0x344
    9da8:	bcc	9e3c <bt_compidtostr@@Base+0x1dfc>
    9dac:	movw	r3, #839	; 0x347
    9db0:	cmp	r0, r3
    9db4:	beq	d5f0 <bt_compidtostr@@Base+0x55b0>
    9db8:	cmp	r0, #840	; 0x348
    9dbc:	bcc	9e20 <bt_compidtostr@@Base+0x1de0>
    9dc0:	movw	r3, #841	; 0x349
    9dc4:	cmp	r0, r3
    9dc8:	beq	cf6c <bt_compidtostr@@Base+0x4f2c>
    9dcc:	cmp	r0, #840	; 0x348
    9dd0:	bls	ce58 <bt_compidtostr@@Base+0x4e18>
    9dd4:	movw	r3, #842	; 0x34a
    9dd8:	cmp	r0, r3
    9ddc:	beq	bc40 <bt_compidtostr@@Base+0x3c00>
    9de0:	movw	r3, #843	; 0x34b
    9de4:	cmp	r0, r3
    9de8:	bne	9e14 <bt_compidtostr@@Base+0x1dd4>
    9dec:	ldr	r0, [pc, #-2728]	; 934c <bt_compidtostr@@Base+0x130c>
    9df0:	add	r0, pc, r0
    9df4:	bx	lr
    9df8:	movw	r3, #521	; 0x209
    9dfc:	cmp	r0, r3
    9e00:	beq	ce4c <bt_compidtostr@@Base+0x4e0c>
    9e04:	bhi	bc34 <bt_compidtostr@@Base+0x3bf4>
    9e08:	ldr	r0, [pc, #-2752]	; 9350 <bt_compidtostr@@Base+0x1310>
    9e0c:	add	r0, pc, r0
    9e10:	bx	lr
    9e14:	ldr	r0, [pc, #-2760]	; 9354 <bt_compidtostr@@Base+0x1314>
    9e18:	add	r0, pc, r0
    9e1c:	bx	lr
    9e20:	movw	r3, #837	; 0x345
    9e24:	cmp	r0, r3
    9e28:	beq	ce40 <bt_compidtostr@@Base+0x4e00>
    9e2c:	bhi	bc28 <bt_compidtostr@@Base+0x3be8>
    9e30:	ldr	r0, [pc, #-2784]	; 9358 <bt_compidtostr@@Base+0x1318>
    9e34:	add	r0, pc, r0
    9e38:	bx	lr
    9e3c:	movw	r3, #831	; 0x33f
    9e40:	cmp	r0, r3
    9e44:	beq	d08c <bt_compidtostr@@Base+0x504c>
    9e48:	cmp	r0, #832	; 0x340
    9e4c:	bcc	9f08 <bt_compidtostr@@Base+0x1ec8>
    9e50:	movw	r3, #833	; 0x341
    9e54:	cmp	r0, r3
    9e58:	beq	ce7c <bt_compidtostr@@Base+0x4e3c>
    9e5c:	bhi	bc1c <bt_compidtostr@@Base+0x3bdc>
    9e60:	ldr	r0, [pc, #-2828]	; 935c <bt_compidtostr@@Base+0x131c>
    9e64:	add	r0, pc, r0
    9e68:	bx	lr
    9e6c:	movw	r3, #819	; 0x333
    9e70:	cmp	r0, r3
    9e74:	beq	d74c <bt_compidtostr@@Base+0x570c>
    9e78:	cmp	r0, #820	; 0x334
    9e7c:	bcc	a038 <bt_compidtostr@@Base+0x1ff8>
    9e80:	movw	r3, #823	; 0x337
    9e84:	cmp	r0, r3
    9e88:	beq	d074 <bt_compidtostr@@Base+0x5034>
    9e8c:	cmp	r0, #824	; 0x338
    9e90:	bcc	a01c <bt_compidtostr@@Base+0x1fdc>
    9e94:	movw	r3, #825	; 0x339
    9e98:	cmp	r0, r3
    9e9c:	beq	cec4 <bt_compidtostr@@Base+0x4e84>
    9ea0:	bhi	bc10 <bt_compidtostr@@Base+0x3bd0>
    9ea4:	ldr	r0, [pc, #-2892]	; 9360 <bt_compidtostr@@Base+0x1320>
    9ea8:	add	r0, pc, r0
    9eac:	bx	lr
    9eb0:	movw	r3, #795	; 0x31b
    9eb4:	cmp	r0, r3
    9eb8:	beq	d968 <bt_compidtostr@@Base+0x5928>
    9ebc:	cmp	r0, #796	; 0x31c
    9ec0:	bcc	9f70 <bt_compidtostr@@Base+0x1f30>
    9ec4:	movw	r3, #803	; 0x323
    9ec8:	cmp	r0, r3
    9ecc:	beq	d734 <bt_compidtostr@@Base+0x56f4>
    9ed0:	cmp	r0, #804	; 0x324
    9ed4:	bcc	9f40 <bt_compidtostr@@Base+0x1f00>
    9ed8:	movw	r3, #807	; 0x327
    9edc:	cmp	r0, r3
    9ee0:	beq	d254 <bt_compidtostr@@Base+0x5214>
    9ee4:	cmp	r0, #808	; 0x328
    9ee8:	bcc	9f24 <bt_compidtostr@@Base+0x1ee4>
    9eec:	movw	r3, #809	; 0x329
    9ef0:	cmp	r0, r3
    9ef4:	beq	ceac <bt_compidtostr@@Base+0x4e6c>
    9ef8:	bhi	bc04 <bt_compidtostr@@Base+0x3bc4>
    9efc:	ldr	r0, [pc, #-2976]	; 9364 <bt_compidtostr@@Base+0x1324>
    9f00:	add	r0, pc, r0
    9f04:	bx	lr
    9f08:	movw	r3, #829	; 0x33d
    9f0c:	cmp	r0, r3
    9f10:	beq	ceb8 <bt_compidtostr@@Base+0x4e78>
    9f14:	bhi	bbf8 <bt_compidtostr@@Base+0x3bb8>
    9f18:	ldr	r0, [pc, #-3000]	; 9368 <bt_compidtostr@@Base+0x1328>
    9f1c:	add	r0, pc, r0
    9f20:	bx	lr
    9f24:	movw	r3, #805	; 0x325
    9f28:	cmp	r0, r3
    9f2c:	beq	cee8 <bt_compidtostr@@Base+0x4ea8>
    9f30:	bhi	bbec <bt_compidtostr@@Base+0x3bac>
    9f34:	ldr	r0, [pc, #-3024]	; 936c <bt_compidtostr@@Base+0x132c>
    9f38:	add	r0, pc, r0
    9f3c:	bx	lr
    9f40:	movw	r3, #799	; 0x31f
    9f44:	cmp	r0, r3
    9f48:	beq	d248 <bt_compidtostr@@Base+0x5208>
    9f4c:	cmp	r0, #800	; 0x320
    9f50:	bcc	9fb4 <bt_compidtostr@@Base+0x1f74>
    9f54:	movw	r3, #801	; 0x321
    9f58:	cmp	r0, r3
    9f5c:	beq	cedc <bt_compidtostr@@Base+0x4e9c>
    9f60:	bhi	bbe0 <bt_compidtostr@@Base+0x3ba0>
    9f64:	ldr	r0, [pc, #-3068]	; 9370 <bt_compidtostr@@Base+0x1330>
    9f68:	add	r0, pc, r0
    9f6c:	bx	lr
    9f70:	movw	r3, #787	; 0x313
    9f74:	cmp	r0, r3
    9f78:	beq	d740 <bt_compidtostr@@Base+0x5700>
    9f7c:	cmp	r0, #788	; 0x314
    9f80:	bcc	9fec <bt_compidtostr@@Base+0x1fac>
    9f84:	movw	r3, #791	; 0x317
    9f88:	cmp	r0, r3
    9f8c:	beq	d068 <bt_compidtostr@@Base+0x5028>
    9f90:	cmp	r0, #792	; 0x318
    9f94:	bcc	9fd0 <bt_compidtostr@@Base+0x1f90>
    9f98:	movw	r3, #793	; 0x319
    9f9c:	cmp	r0, r3
    9fa0:	beq	ced0 <bt_compidtostr@@Base+0x4e90>
    9fa4:	bhi	bbd4 <bt_compidtostr@@Base+0x3b94>
    9fa8:	ldr	r0, [pc, #-3132]	; 9374 <bt_compidtostr@@Base+0x1334>
    9fac:	add	r0, pc, r0
    9fb0:	bx	lr
    9fb4:	movw	r3, #797	; 0x31d
    9fb8:	cmp	r0, r3
    9fbc:	beq	cf00 <bt_compidtostr@@Base+0x4ec0>
    9fc0:	bhi	b3bc <bt_compidtostr@@Base+0x337c>
    9fc4:	ldr	r0, [pc, #-3156]	; 9378 <bt_compidtostr@@Base+0x1338>
    9fc8:	add	r0, pc, r0
    9fcc:	bx	lr
    9fd0:	movw	r3, #789	; 0x315
    9fd4:	cmp	r0, r3
    9fd8:	beq	cef4 <bt_compidtostr@@Base+0x4eb4>
    9fdc:	bhi	b3b0 <bt_compidtostr@@Base+0x3370>
    9fe0:	ldr	r0, [pc, #-3180]	; 937c <bt_compidtostr@@Base+0x133c>
    9fe4:	add	r0, pc, r0
    9fe8:	bx	lr
    9fec:	movw	r3, #783	; 0x30f
    9ff0:	cmp	r0, r3
    9ff4:	beq	d098 <bt_compidtostr@@Base+0x5058>
    9ff8:	cmp	r0, #784	; 0x310
    9ffc:	bcc	a068 <bt_compidtostr@@Base+0x2028>
    a000:	movw	r3, #785	; 0x311
    a004:	cmp	r0, r3
    a008:	beq	ce94 <bt_compidtostr@@Base+0x4e54>
    a00c:	bhi	b3a4 <bt_compidtostr@@Base+0x3364>
    a010:	ldr	r0, [pc, #-3224]	; 9380 <bt_compidtostr@@Base+0x1340>
    a014:	add	r0, pc, r0
    a018:	bx	lr
    a01c:	movw	r3, #821	; 0x335
    a020:	cmp	r0, r3
    a024:	beq	ce88 <bt_compidtostr@@Base+0x4e48>
    a028:	bhi	b398 <bt_compidtostr@@Base+0x3358>
    a02c:	ldr	r0, [pc, #-3248]	; 9384 <bt_compidtostr@@Base+0x1344>
    a030:	add	r0, pc, r0
    a034:	bx	lr
    a038:	movw	r3, #815	; 0x32f
    a03c:	cmp	r0, r3
    a040:	beq	d080 <bt_compidtostr@@Base+0x5040>
    a044:	cmp	r0, #816	; 0x330
    a048:	bcc	a084 <bt_compidtostr@@Base+0x2044>
    a04c:	movw	r3, #817	; 0x331
    a050:	cmp	r0, r3
    a054:	beq	cd98 <bt_compidtostr@@Base+0x4d58>
    a058:	bhi	b38c <bt_compidtostr@@Base+0x334c>
    a05c:	ldr	r0, [pc, #-3292]	; 9388 <bt_compidtostr@@Base+0x1348>
    a060:	add	r0, pc, r0
    a064:	bx	lr
    a068:	movw	r3, #781	; 0x30d
    a06c:	cmp	r0, r3
    a070:	beq	cd8c <bt_compidtostr@@Base+0x4d4c>
    a074:	bhi	b380 <bt_compidtostr@@Base+0x3340>
    a078:	ldr	r0, [pc, #-3316]	; 938c <bt_compidtostr@@Base+0x134c>
    a07c:	add	r0, pc, r0
    a080:	bx	lr
    a084:	movw	r3, #813	; 0x32d
    a088:	cmp	r0, r3
    a08c:	beq	cda4 <bt_compidtostr@@Base+0x4d64>
    a090:	bhi	b374 <bt_compidtostr@@Base+0x3334>
    a094:	ldr	r0, [pc, #-3340]	; 9390 <bt_compidtostr@@Base+0x1350>
    a098:	add	r0, pc, r0
    a09c:	bx	lr
    a0a0:	cmp	r0, #876	; 0x36c
    a0a4:	beq	daac <bt_compidtostr@@Base+0x5a6c>
    a0a8:	bls	a770 <bt_compidtostr@@Base+0x2730>
    a0ac:	cmp	r0, #892	; 0x37c
    a0b0:	beq	da4c <bt_compidtostr@@Base+0x5a0c>
    a0b4:	bls	a73c <bt_compidtostr@@Base+0x26fc>
    a0b8:	cmp	r0, #900	; 0x384
    a0bc:	beq	d914 <bt_compidtostr@@Base+0x58d4>
    a0c0:	bls	ac88 <bt_compidtostr@@Base+0x2c48>
    a0c4:	cmp	r0, #904	; 0x388
    a0c8:	beq	d614 <bt_compidtostr@@Base+0x55d4>
    a0cc:	bls	aadc <bt_compidtostr@@Base+0x2a9c>
    a0d0:	movw	r3, #906	; 0x38a
    a0d4:	cmp	r0, r3
    a0d8:	beq	cf90 <bt_compidtostr@@Base+0x4f50>
    a0dc:	bcc	cea0 <bt_compidtostr@@Base+0x4e60>
    a0e0:	movw	r3, #907	; 0x38b
    a0e4:	cmp	r0, r3
    a0e8:	beq	b368 <bt_compidtostr@@Base+0x3328>
    a0ec:	cmp	r0, #908	; 0x38c
    a0f0:	bne	a180 <bt_compidtostr@@Base+0x2140>
    a0f4:	ldr	r0, [pc, #-3432]	; 9394 <bt_compidtostr@@Base+0x1354>
    a0f8:	add	r0, pc, r0
    a0fc:	bx	lr
    a100:	movw	r3, #974	; 0x3ce
    a104:	cmp	r0, r3
    a108:	beq	db78 <bt_compidtostr@@Base+0x5b38>
    a10c:	bhi	ac14 <bt_compidtostr@@Base+0x2bd4>
    a110:	movw	r3, #941	; 0x3ad
    a114:	cmp	r0, r3
    a118:	beq	dab8 <bt_compidtostr@@Base+0x5a78>
    a11c:	bls	a298 <bt_compidtostr@@Base+0x2258>
    a120:	movw	r3, #957	; 0x3bd
    a124:	cmp	r0, r3
    a128:	beq	da58 <bt_compidtostr@@Base+0x5a18>
    a12c:	bls	a1e8 <bt_compidtostr@@Base+0x21a8>
    a130:	movw	r3, #965	; 0x3c5
    a134:	cmp	r0, r3
    a138:	beq	d908 <bt_compidtostr@@Base+0x58c8>
    a13c:	bls	a1b8 <bt_compidtostr@@Base+0x2178>
    a140:	movw	r3, #969	; 0x3c9
    a144:	cmp	r0, r3
    a148:	beq	d608 <bt_compidtostr@@Base+0x55c8>
    a14c:	bls	a198 <bt_compidtostr@@Base+0x2158>
    a150:	movw	r3, #971	; 0x3cb
    a154:	cmp	r0, r3
    a158:	beq	cf84 <bt_compidtostr@@Base+0x4f44>
    a15c:	bcc	cdf8 <bt_compidtostr@@Base+0x4db8>
    a160:	cmp	r0, #972	; 0x3cc
    a164:	beq	b35c <bt_compidtostr@@Base+0x331c>
    a168:	movw	r3, #973	; 0x3cd
    a16c:	cmp	r0, r3
    a170:	bne	a18c <bt_compidtostr@@Base+0x214c>
    a174:	ldr	r0, [pc, #-3556]	; 9398 <bt_compidtostr@@Base+0x1358>
    a178:	add	r0, pc, r0
    a17c:	bx	lr
    a180:	ldr	r0, [pc, #-3564]	; 939c <bt_compidtostr@@Base+0x135c>
    a184:	add	r0, pc, r0
    a188:	bx	lr
    a18c:	ldr	r0, [pc, #-3572]	; 93a0 <bt_compidtostr@@Base+0x1360>
    a190:	add	r0, pc, r0
    a194:	bx	lr
    a198:	movw	r3, #967	; 0x3c7
    a19c:	cmp	r0, r3
    a1a0:	beq	cdd4 <bt_compidtostr@@Base+0x4d94>
    a1a4:	cmp	r0, #968	; 0x3c8
    a1a8:	bcs	b350 <bt_compidtostr@@Base+0x3310>
    a1ac:	ldr	r0, [pc, #-3600]	; 93a4 <bt_compidtostr@@Base+0x1364>
    a1b0:	add	r0, pc, r0
    a1b4:	bx	lr
    a1b8:	movw	r3, #961	; 0x3c1
    a1bc:	cmp	r0, r3
    a1c0:	beq	d0a4 <bt_compidtostr@@Base+0x5064>
    a1c4:	bls	a228 <bt_compidtostr@@Base+0x21e8>
    a1c8:	movw	r3, #963	; 0x3c3
    a1cc:	cmp	r0, r3
    a1d0:	beq	ce10 <bt_compidtostr@@Base+0x4dd0>
    a1d4:	cmp	r0, #964	; 0x3c4
    a1d8:	bcs	b344 <bt_compidtostr@@Base+0x3304>
    a1dc:	ldr	r0, [pc, #-3644]	; 93a8 <bt_compidtostr@@Base+0x1368>
    a1e0:	add	r0, pc, r0
    a1e4:	bx	lr
    a1e8:	movw	r3, #949	; 0x3b5
    a1ec:	cmp	r0, r3
    a1f0:	beq	d698 <bt_compidtostr@@Base+0x5658>
    a1f4:	bls	a268 <bt_compidtostr@@Base+0x2228>
    a1f8:	movw	r3, #953	; 0x3b9
    a1fc:	cmp	r0, r3
    a200:	beq	d05c <bt_compidtostr@@Base+0x501c>
    a204:	bls	a248 <bt_compidtostr@@Base+0x2208>
    a208:	movw	r3, #955	; 0x3bb
    a20c:	cmp	r0, r3
    a210:	beq	ce04 <bt_compidtostr@@Base+0x4dc4>
    a214:	cmp	r0, #956	; 0x3bc
    a218:	bcs	b338 <bt_compidtostr@@Base+0x32f8>
    a21c:	ldr	r0, [pc, #-3704]	; 93ac <bt_compidtostr@@Base+0x136c>
    a220:	add	r0, pc, r0
    a224:	bx	lr
    a228:	movw	r3, #959	; 0x3bf
    a22c:	cmp	r0, r3
    a230:	beq	cdec <bt_compidtostr@@Base+0x4dac>
    a234:	cmp	r0, #960	; 0x3c0
    a238:	bcs	b32c <bt_compidtostr@@Base+0x32ec>
    a23c:	ldr	r0, [pc, #-3732]	; 93b0 <bt_compidtostr@@Base+0x1370>
    a240:	add	r0, pc, r0
    a244:	bx	lr
    a248:	movw	r3, #951	; 0x3b7
    a24c:	cmp	r0, r3
    a250:	beq	cde0 <bt_compidtostr@@Base+0x4da0>
    a254:	cmp	r0, #952	; 0x3b8
    a258:	bcs	b320 <bt_compidtostr@@Base+0x32e0>
    a25c:	ldr	r0, [pc, #-3760]	; 93b4 <bt_compidtostr@@Base+0x1374>
    a260:	add	r0, pc, r0
    a264:	bx	lr
    a268:	movw	r3, #945	; 0x3b1
    a26c:	cmp	r0, r3
    a270:	beq	d0f8 <bt_compidtostr@@Base+0x50b8>
    a274:	bls	acb0 <bt_compidtostr@@Base+0x2c70>
    a278:	movw	r3, #947	; 0x3b3
    a27c:	cmp	r0, r3
    a280:	beq	cdbc <bt_compidtostr@@Base+0x4d7c>
    a284:	cmp	r0, #948	; 0x3b4
    a288:	bcs	b314 <bt_compidtostr@@Base+0x32d4>
    a28c:	ldr	r0, [pc, #-3804]	; 93b8 <bt_compidtostr@@Base+0x1378>
    a290:	add	r0, pc, r0
    a294:	bx	lr
    a298:	movw	r3, #925	; 0x39d
    a29c:	cmp	r0, r3
    a2a0:	beq	d950 <bt_compidtostr@@Base+0x5910>
    a2a4:	bls	aa0c <bt_compidtostr@@Base+0x29cc>
    a2a8:	movw	r3, #933	; 0x3a5
    a2ac:	cmp	r0, r3
    a2b0:	beq	d6c8 <bt_compidtostr@@Base+0x5688>
    a2b4:	bls	a9dc <bt_compidtostr@@Base+0x299c>
    a2b8:	movw	r3, #937	; 0x3a9
    a2bc:	cmp	r0, r3
    a2c0:	beq	d0ec <bt_compidtostr@@Base+0x50ac>
    a2c4:	bls	a96c <bt_compidtostr@@Base+0x292c>
    a2c8:	movw	r3, #939	; 0x3ab
    a2cc:	cmp	r0, r3
    a2d0:	beq	cdc8 <bt_compidtostr@@Base+0x4d88>
    a2d4:	cmp	r0, #940	; 0x3ac
    a2d8:	bcs	b308 <bt_compidtostr@@Base+0x32c8>
    a2dc:	ldr	r0, [pc, #-3880]	; 93bc <bt_compidtostr@@Base+0x137c>
    a2e0:	add	r0, pc, r0
    a2e4:	bx	lr
    a2e8:	movw	r3, #701	; 0x2bd
    a2ec:	cmp	r0, r3
    a2f0:	beq	d0e0 <bt_compidtostr@@Base+0x50a0>
    a2f4:	bls	a3d8 <bt_compidtostr@@Base+0x2398>
    a2f8:	movw	r3, #703	; 0x2bf
    a2fc:	cmp	r0, r3
    a300:	beq	cdb0 <bt_compidtostr@@Base+0x4d70>
    a304:	cmp	r0, #704	; 0x2c0
    a308:	bcs	b2fc <bt_compidtostr@@Base+0x32bc>
    a30c:	ldr	r0, [pc, #-3924]	; 93c0 <bt_compidtostr@@Base+0x1380>
    a310:	add	r0, pc, r0
    a314:	bx	lr
    a318:	movw	r3, #665	; 0x299
    a31c:	cmp	r0, r3
    a320:	beq	d980 <bt_compidtostr@@Base+0x5940>
    a324:	bls	a428 <bt_compidtostr@@Base+0x23e8>
    a328:	movw	r3, #673	; 0x2a1
    a32c:	cmp	r0, r3
    a330:	beq	d68c <bt_compidtostr@@Base+0x564c>
    a334:	bls	a3f8 <bt_compidtostr@@Base+0x23b8>
    a338:	movw	r3, #677	; 0x2a5
    a33c:	cmp	r0, r3
    a340:	beq	d050 <bt_compidtostr@@Base+0x5010>
    a344:	bls	a4d8 <bt_compidtostr@@Base+0x2498>
    a348:	movw	r3, #679	; 0x2a7
    a34c:	cmp	r0, r3
    a350:	beq	ce1c <bt_compidtostr@@Base+0x4ddc>
    a354:	cmp	r0, #680	; 0x2a8
    a358:	bcs	b2f0 <bt_compidtostr@@Base+0x32b0>
    a35c:	ldr	r0, [pc, #-4000]	; 93c4 <bt_compidtostr@@Base+0x1384>
    a360:	add	r0, pc, r0
    a364:	bx	lr
    a368:	movw	r3, #746	; 0x2ea
    a36c:	cmp	r0, r3
    a370:	beq	db3c <bt_compidtostr@@Base+0x5afc>
    a374:	bls	a59c <bt_compidtostr@@Base+0x255c>
    a378:	movw	r3, #762	; 0x2fa
    a37c:	cmp	r0, r3
    a380:	beq	da04 <bt_compidtostr@@Base+0x59c4>
    a384:	bls	a564 <bt_compidtostr@@Base+0x2524>
    a388:	movw	r3, #770	; 0x302
    a38c:	cmp	r0, r3
    a390:	beq	d8e4 <bt_compidtostr@@Base+0x58a4>
    a394:	bls	a53c <bt_compidtostr@@Base+0x24fc>
    a398:	movw	r3, #774	; 0x306
    a39c:	cmp	r0, r3
    a3a0:	beq	d5c0 <bt_compidtostr@@Base+0x5580>
    a3a4:	bls	a524 <bt_compidtostr@@Base+0x24e4>
    a3a8:	cmp	r0, #776	; 0x308
    a3ac:	beq	cf60 <bt_compidtostr@@Base+0x4f20>
    a3b0:	bcc	cf18 <bt_compidtostr@@Base+0x4ed8>
    a3b4:	movw	r3, #777	; 0x309
    a3b8:	cmp	r0, r3
    a3bc:	beq	b2e4 <bt_compidtostr@@Base+0x32a4>
    a3c0:	movw	r3, #778	; 0x30a
    a3c4:	cmp	r0, r3
    a3c8:	bne	a4f8 <bt_compidtostr@@Base+0x24b8>
    a3cc:	ldr	r0, [pc, #4084]	; b3c8 <bt_compidtostr@@Base+0x3388>
    a3d0:	add	r0, pc, r0
    a3d4:	bx	lr
    a3d8:	movw	r3, #699	; 0x2bb
    a3dc:	cmp	r0, r3
    a3e0:	beq	cf0c <bt_compidtostr@@Base+0x4ecc>
    a3e4:	cmp	r0, #700	; 0x2bc
    a3e8:	bcs	b2d8 <bt_compidtostr@@Base+0x3298>
    a3ec:	ldr	r0, [pc, #4056]	; b3cc <bt_compidtostr@@Base+0x338c>
    a3f0:	add	r0, pc, r0
    a3f4:	bx	lr
    a3f8:	movw	r3, #669	; 0x29d
    a3fc:	cmp	r0, r3
    a400:	beq	d260 <bt_compidtostr@@Base+0x5220>
    a404:	bls	a468 <bt_compidtostr@@Base+0x2428>
    a408:	movw	r3, #671	; 0x29f
    a40c:	cmp	r0, r3
    a410:	beq	cf54 <bt_compidtostr@@Base+0x4f14>
    a414:	cmp	r0, #672	; 0x2a0
    a418:	bcs	b2cc <bt_compidtostr@@Base+0x328c>
    a41c:	ldr	r0, [pc, #4012]	; b3d0 <bt_compidtostr@@Base+0x3390>
    a420:	add	r0, pc, r0
    a424:	bx	lr
    a428:	movw	r3, #657	; 0x291
    a42c:	cmp	r0, r3
    a430:	beq	d758 <bt_compidtostr@@Base+0x5718>
    a434:	bls	a4a8 <bt_compidtostr@@Base+0x2468>
    a438:	movw	r3, #661	; 0x295
    a43c:	cmp	r0, r3
    a440:	beq	d038 <bt_compidtostr@@Base+0x4ff8>
    a444:	bls	a488 <bt_compidtostr@@Base+0x2448>
    a448:	movw	r3, #663	; 0x297
    a44c:	cmp	r0, r3
    a450:	beq	cf48 <bt_compidtostr@@Base+0x4f08>
    a454:	cmp	r0, #664	; 0x298
    a458:	bcs	b2c0 <bt_compidtostr@@Base+0x3280>
    a45c:	ldr	r0, [pc, #3952]	; b3d4 <bt_compidtostr@@Base+0x3394>
    a460:	add	r0, pc, r0
    a464:	bx	lr
    a468:	movw	r3, #667	; 0x29b
    a46c:	cmp	r0, r3
    a470:	beq	cf3c <bt_compidtostr@@Base+0x4efc>
    a474:	cmp	r0, #668	; 0x29c
    a478:	bcs	b2b4 <bt_compidtostr@@Base+0x3274>
    a47c:	ldr	r0, [pc, #3924]	; b3d8 <bt_compidtostr@@Base+0x3398>
    a480:	add	r0, pc, r0
    a484:	bx	lr
    a488:	movw	r3, #659	; 0x293
    a48c:	cmp	r0, r3
    a490:	beq	cf30 <bt_compidtostr@@Base+0x4ef0>
    a494:	cmp	r0, #660	; 0x294
    a498:	bcs	b2a8 <bt_compidtostr@@Base+0x3268>
    a49c:	ldr	r0, [pc, #3896]	; b3dc <bt_compidtostr@@Base+0x339c>
    a4a0:	add	r0, pc, r0
    a4a4:	bx	lr
    a4a8:	movw	r3, #653	; 0x28d
    a4ac:	cmp	r0, r3
    a4b0:	beq	d26c <bt_compidtostr@@Base+0x522c>
    a4b4:	bls	a504 <bt_compidtostr@@Base+0x24c4>
    a4b8:	movw	r3, #655	; 0x28f
    a4bc:	cmp	r0, r3
    a4c0:	beq	cf24 <bt_compidtostr@@Base+0x4ee4>
    a4c4:	cmp	r0, #656	; 0x290
    a4c8:	bcs	b29c <bt_compidtostr@@Base+0x325c>
    a4cc:	ldr	r0, [pc, #3852]	; b3e0 <bt_compidtostr@@Base+0x33a0>
    a4d0:	add	r0, pc, r0
    a4d4:	bx	lr
    a4d8:	movw	r3, #675	; 0x2a3
    a4dc:	cmp	r0, r3
    a4e0:	beq	cb34 <bt_compidtostr@@Base+0x4af4>
    a4e4:	cmp	r0, #676	; 0x2a4
    a4e8:	bcs	b290 <bt_compidtostr@@Base+0x3250>
    a4ec:	ldr	r0, [pc, #3824]	; b3e4 <bt_compidtostr@@Base+0x33a4>
    a4f0:	add	r0, pc, r0
    a4f4:	bx	lr
    a4f8:	ldr	r0, [pc, #3816]	; b3e8 <bt_compidtostr@@Base+0x33a8>
    a4fc:	add	r0, pc, r0
    a500:	bx	lr
    a504:	movw	r3, #651	; 0x28b
    a508:	cmp	r0, r3
    a50c:	beq	cb28 <bt_compidtostr@@Base+0x4ae8>
    a510:	cmp	r0, #652	; 0x28c
    a514:	bcs	b284 <bt_compidtostr@@Base+0x3244>
    a518:	ldr	r0, [pc, #3788]	; b3ec <bt_compidtostr@@Base+0x33ac>
    a51c:	add	r0, pc, r0
    a520:	bx	lr
    a524:	cmp	r0, #772	; 0x304
    a528:	beq	cb40 <bt_compidtostr@@Base+0x4b00>
    a52c:	bhi	b278 <bt_compidtostr@@Base+0x3238>
    a530:	ldr	r0, [pc, #3768]	; b3f0 <bt_compidtostr@@Base+0x33b0>
    a534:	add	r0, pc, r0
    a538:	bx	lr
    a53c:	movw	r3, #766	; 0x2fe
    a540:	cmp	r0, r3
    a544:	beq	d140 <bt_compidtostr@@Base+0x5100>
    a548:	bls	a5e4 <bt_compidtostr@@Base+0x25a4>
    a54c:	cmp	r0, #768	; 0x300
    a550:	beq	cb10 <bt_compidtostr@@Base+0x4ad0>
    a554:	bhi	b26c <bt_compidtostr@@Base+0x322c>
    a558:	ldr	r0, [pc, #3732]	; b3f4 <bt_compidtostr@@Base+0x33b4>
    a55c:	add	r0, pc, r0
    a560:	bx	lr
    a564:	movw	r3, #754	; 0x2f2
    a568:	cmp	r0, r3
    a56c:	beq	d830 <bt_compidtostr@@Base+0x57f0>
    a570:	bls	a6e4 <bt_compidtostr@@Base+0x26a4>
    a574:	movw	r3, #758	; 0x2f6
    a578:	cmp	r0, r3
    a57c:	beq	d1d0 <bt_compidtostr@@Base+0x5190>
    a580:	bls	a6cc <bt_compidtostr@@Base+0x268c>
    a584:	cmp	r0, #760	; 0x2f8
    a588:	beq	cb04 <bt_compidtostr@@Base+0x4ac4>
    a58c:	bhi	b260 <bt_compidtostr@@Base+0x3220>
    a590:	ldr	r0, [pc, #3680]	; b3f8 <bt_compidtostr@@Base+0x33b8>
    a594:	add	r0, pc, r0
    a598:	bx	lr
    a59c:	movw	r3, #730	; 0x2da
    a5a0:	cmp	r0, r3
    a5a4:	beq	d9c8 <bt_compidtostr@@Base+0x5988>
    a5a8:	bls	a63c <bt_compidtostr@@Base+0x25fc>
    a5ac:	movw	r3, #738	; 0x2e2
    a5b0:	cmp	r0, r3
    a5b4:	beq	d824 <bt_compidtostr@@Base+0x57e4>
    a5b8:	bls	a614 <bt_compidtostr@@Base+0x25d4>
    a5bc:	movw	r3, #742	; 0x2e6
    a5c0:	cmp	r0, r3
    a5c4:	beq	d164 <bt_compidtostr@@Base+0x5124>
    a5c8:	bls	a5fc <bt_compidtostr@@Base+0x25bc>
    a5cc:	cmp	r0, #744	; 0x2e8
    a5d0:	beq	cb64 <bt_compidtostr@@Base+0x4b24>
    a5d4:	bhi	b254 <bt_compidtostr@@Base+0x3214>
    a5d8:	ldr	r0, [pc, #3612]	; b3fc <bt_compidtostr@@Base+0x33bc>
    a5dc:	add	r0, pc, r0
    a5e0:	bx	lr
    a5e4:	cmp	r0, #764	; 0x2fc
    a5e8:	beq	cb58 <bt_compidtostr@@Base+0x4b18>
    a5ec:	bhi	b248 <bt_compidtostr@@Base+0x3208>
    a5f0:	ldr	r0, [pc, #3592]	; b400 <bt_compidtostr@@Base+0x33c0>
    a5f4:	add	r0, pc, r0
    a5f8:	bx	lr
    a5fc:	cmp	r0, #740	; 0x2e4
    a600:	beq	cb4c <bt_compidtostr@@Base+0x4b0c>
    a604:	bhi	b23c <bt_compidtostr@@Base+0x31fc>
    a608:	ldr	r0, [pc, #3572]	; b404 <bt_compidtostr@@Base+0x33c4>
    a60c:	add	r0, pc, r0
    a610:	bx	lr
    a614:	movw	r3, #734	; 0x2de
    a618:	cmp	r0, r3
    a61c:	beq	d14c <bt_compidtostr@@Base+0x510c>
    a620:	bls	a674 <bt_compidtostr@@Base+0x2634>
    a624:	cmp	r0, #736	; 0x2e0
    a628:	beq	cb1c <bt_compidtostr@@Base+0x4adc>
    a62c:	bhi	b230 <bt_compidtostr@@Base+0x31f0>
    a630:	ldr	r0, [pc, #3536]	; b408 <bt_compidtostr@@Base+0x33c8>
    a634:	add	r0, pc, r0
    a638:	bx	lr
    a63c:	movw	r3, #722	; 0x2d2
    a640:	cmp	r0, r3
    a644:	beq	d668 <bt_compidtostr@@Base+0x5628>
    a648:	bls	a6a4 <bt_compidtostr@@Base+0x2664>
    a64c:	movw	r3, #726	; 0x2d6
    a650:	cmp	r0, r3
    a654:	beq	d1ac <bt_compidtostr@@Base+0x516c>
    a658:	bls	a68c <bt_compidtostr@@Base+0x264c>
    a65c:	cmp	r0, #728	; 0x2d8
    a660:	beq	cbf4 <bt_compidtostr@@Base+0x4bb4>
    a664:	bhi	b224 <bt_compidtostr@@Base+0x31e4>
    a668:	ldr	r0, [pc, #3484]	; b40c <bt_compidtostr@@Base+0x33cc>
    a66c:	add	r0, pc, r0
    a670:	bx	lr
    a674:	cmp	r0, #732	; 0x2dc
    a678:	beq	cbe8 <bt_compidtostr@@Base+0x4ba8>
    a67c:	bhi	b218 <bt_compidtostr@@Base+0x31d8>
    a680:	ldr	r0, [pc, #3464]	; b410 <bt_compidtostr@@Base+0x33d0>
    a684:	add	r0, pc, r0
    a688:	bx	lr
    a68c:	cmp	r0, #724	; 0x2d4
    a690:	beq	cc18 <bt_compidtostr@@Base+0x4bd8>
    a694:	bhi	b20c <bt_compidtostr@@Base+0x31cc>
    a698:	ldr	r0, [pc, #3444]	; b414 <bt_compidtostr@@Base+0x33d4>
    a69c:	add	r0, pc, r0
    a6a0:	bx	lr
    a6a4:	movw	r3, #718	; 0x2ce
    a6a8:	cmp	r0, r3
    a6ac:	beq	d1c4 <bt_compidtostr@@Base+0x5184>
    a6b0:	bls	a70c <bt_compidtostr@@Base+0x26cc>
    a6b4:	cmp	r0, #720	; 0x2d0
    a6b8:	beq	cc24 <bt_compidtostr@@Base+0x4be4>
    a6bc:	bhi	b200 <bt_compidtostr@@Base+0x31c0>
    a6c0:	ldr	r0, [pc, #3408]	; b418 <bt_compidtostr@@Base+0x33d8>
    a6c4:	add	r0, pc, r0
    a6c8:	bx	lr
    a6cc:	cmp	r0, #756	; 0x2f4
    a6d0:	beq	cc0c <bt_compidtostr@@Base+0x4bcc>
    a6d4:	bhi	b1f4 <bt_compidtostr@@Base+0x31b4>
    a6d8:	ldr	r0, [pc, #3388]	; b41c <bt_compidtostr@@Base+0x33dc>
    a6dc:	add	r0, pc, r0
    a6e0:	bx	lr
    a6e4:	movw	r3, #750	; 0x2ee
    a6e8:	cmp	r0, r3
    a6ec:	beq	d1b8 <bt_compidtostr@@Base+0x5178>
    a6f0:	bls	a724 <bt_compidtostr@@Base+0x26e4>
    a6f4:	cmp	r0, #752	; 0x2f0
    a6f8:	beq	cc48 <bt_compidtostr@@Base+0x4c08>
    a6fc:	bhi	b1e8 <bt_compidtostr@@Base+0x31a8>
    a700:	ldr	r0, [pc, #3352]	; b420 <bt_compidtostr@@Base+0x33e0>
    a704:	add	r0, pc, r0
    a708:	bx	lr
    a70c:	cmp	r0, #716	; 0x2cc
    a710:	beq	cc3c <bt_compidtostr@@Base+0x4bfc>
    a714:	bhi	b1dc <bt_compidtostr@@Base+0x319c>
    a718:	ldr	r0, [pc, #3332]	; b424 <bt_compidtostr@@Base+0x33e4>
    a71c:	add	r0, pc, r0
    a720:	bx	lr
    a724:	cmp	r0, #748	; 0x2ec
    a728:	beq	cc30 <bt_compidtostr@@Base+0x4bf0>
    a72c:	bhi	b1d0 <bt_compidtostr@@Base+0x3190>
    a730:	ldr	r0, [pc, #3312]	; b428 <bt_compidtostr@@Base+0x33e8>
    a734:	add	r0, pc, r0
    a738:	bx	lr
    a73c:	cmp	r0, #884	; 0x374
    a740:	beq	d65c <bt_compidtostr@@Base+0x561c>
    a744:	bls	aaf8 <bt_compidtostr@@Base+0x2ab8>
    a748:	cmp	r0, #888	; 0x378
    a74c:	beq	d188 <bt_compidtostr@@Base+0x5148>
    a750:	bls	a7b0 <bt_compidtostr@@Base+0x2770>
    a754:	movw	r3, #890	; 0x37a
    a758:	cmp	r0, r3
    a75c:	beq	cc9c <bt_compidtostr@@Base+0x4c5c>
    a760:	bhi	b1c4 <bt_compidtostr@@Base+0x3184>
    a764:	ldr	r0, [pc, #3264]	; b42c <bt_compidtostr@@Base+0x33ec>
    a768:	add	r0, pc, r0
    a76c:	bx	lr
    a770:	cmp	r0, #860	; 0x35c
    a774:	beq	d9a4 <bt_compidtostr@@Base+0x5964>
    a778:	bls	ab80 <bt_compidtostr@@Base+0x2b40>
    a77c:	cmp	r0, #868	; 0x364
    a780:	beq	d62c <bt_compidtostr@@Base+0x55ec>
    a784:	bls	ab58 <bt_compidtostr@@Base+0x2b18>
    a788:	cmp	r0, #872	; 0x368
    a78c:	beq	d194 <bt_compidtostr@@Base+0x5154>
    a790:	bls	ab20 <bt_compidtostr@@Base+0x2ae0>
    a794:	movw	r3, #874	; 0x36a
    a798:	cmp	r0, r3
    a79c:	beq	cc00 <bt_compidtostr@@Base+0x4bc0>
    a7a0:	bhi	b1b8 <bt_compidtostr@@Base+0x3178>
    a7a4:	ldr	r0, [pc, #3204]	; b430 <bt_compidtostr@@Base+0x33f0>
    a7a8:	add	r0, pc, r0
    a7ac:	bx	lr
    a7b0:	movw	r3, #886	; 0x376
    a7b4:	cmp	r0, r3
    a7b8:	beq	cc90 <bt_compidtostr@@Base+0x4c50>
    a7bc:	bhi	b1ac <bt_compidtostr@@Base+0x316c>
    a7c0:	ldr	r0, [pc, #3180]	; b434 <bt_compidtostr@@Base+0x33f4>
    a7c4:	add	r0, pc, r0
    a7c8:	bx	lr
    a7cc:	ldr	r0, [pc, #3172]	; b438 <bt_compidtostr@@Base+0x33f8>
    a7d0:	add	r0, pc, r0
    a7d4:	bx	lr
    a7d8:	movw	r3, #707	; 0x2c3
    a7dc:	cmp	r0, r3
    a7e0:	beq	cc54 <bt_compidtostr@@Base+0x4c14>
    a7e4:	cmp	r0, #708	; 0x2c4
    a7e8:	bcs	b1a0 <bt_compidtostr@@Base+0x3160>
    a7ec:	ldr	r0, [pc, #3144]	; b43c <bt_compidtostr@@Base+0x33fc>
    a7f0:	add	r0, pc, r0
    a7f4:	bx	lr
    a7f8:	movw	r3, #571	; 0x23b
    a7fc:	cmp	r0, r3
    a800:	beq	d11c <bt_compidtostr@@Base+0x50dc>
    a804:	cmp	r0, #572	; 0x23c
    a808:	bcc	a86c <bt_compidtostr@@Base+0x282c>
    a80c:	movw	r3, #573	; 0x23d
    a810:	cmp	r0, r3
    a814:	beq	cc84 <bt_compidtostr@@Base+0x4c44>
    a818:	bhi	b194 <bt_compidtostr@@Base+0x3154>
    a81c:	ldr	r0, [pc, #3100]	; b440 <bt_compidtostr@@Base+0x3400>
    a820:	add	r0, pc, r0
    a824:	bx	lr
    a828:	movw	r3, #559	; 0x22f
    a82c:	cmp	r0, r3
    a830:	beq	d638 <bt_compidtostr@@Base+0x55f8>
    a834:	cmp	r0, #560	; 0x230
    a838:	bcc	a8a4 <bt_compidtostr@@Base+0x2864>
    a83c:	movw	r3, #563	; 0x233
    a840:	cmp	r0, r3
    a844:	beq	d128 <bt_compidtostr@@Base+0x50e8>
    a848:	cmp	r0, #564	; 0x234
    a84c:	bcc	a888 <bt_compidtostr@@Base+0x2848>
    a850:	movw	r3, #565	; 0x235
    a854:	cmp	r0, r3
    a858:	beq	cc78 <bt_compidtostr@@Base+0x4c38>
    a85c:	bhi	b188 <bt_compidtostr@@Base+0x3148>
    a860:	ldr	r0, [pc, #3036]	; b444 <bt_compidtostr@@Base+0x3404>
    a864:	add	r0, pc, r0
    a868:	bx	lr
    a86c:	movw	r3, #569	; 0x239
    a870:	cmp	r0, r3
    a874:	beq	cc6c <bt_compidtostr@@Base+0x4c2c>
    a878:	bhi	b17c <bt_compidtostr@@Base+0x313c>
    a87c:	ldr	r0, [pc, #3012]	; b448 <bt_compidtostr@@Base+0x3408>
    a880:	add	r0, pc, r0
    a884:	bx	lr
    a888:	movw	r3, #561	; 0x231
    a88c:	cmp	r0, r3
    a890:	beq	cc60 <bt_compidtostr@@Base+0x4c20>
    a894:	bhi	b170 <bt_compidtostr@@Base+0x3130>
    a898:	ldr	r0, [pc, #2988]	; b44c <bt_compidtostr@@Base+0x340c>
    a89c:	add	r0, pc, r0
    a8a0:	bx	lr
    a8a4:	movw	r3, #555	; 0x22b
    a8a8:	cmp	r0, r3
    a8ac:	beq	d110 <bt_compidtostr@@Base+0x50d0>
    a8b0:	cmp	r0, #556	; 0x22c
    a8b4:	bcc	a910 <bt_compidtostr@@Base+0x28d0>
    a8b8:	movw	r3, #557	; 0x22d
    a8bc:	cmp	r0, r3
    a8c0:	beq	ccc0 <bt_compidtostr@@Base+0x4c80>
    a8c4:	bhi	b164 <bt_compidtostr@@Base+0x3124>
    a8c8:	ldr	r0, [pc, #2944]	; b450 <bt_compidtostr@@Base+0x3410>
    a8cc:	add	r0, pc, r0
    a8d0:	bx	lr
    a8d4:	movw	r3, #577	; 0x241
    a8d8:	cmp	r0, r3
    a8dc:	beq	ccb4 <bt_compidtostr@@Base+0x4c74>
    a8e0:	bhi	b158 <bt_compidtostr@@Base+0x3118>
    a8e4:	ldr	r0, [pc, #2920]	; b454 <bt_compidtostr@@Base+0x3414>
    a8e8:	add	r0, pc, r0
    a8ec:	bx	lr
    a8f0:	movw	r3, #391	; 0x187
    a8f4:	cmp	r0, r3
    a8f8:	beq	cca8 <bt_compidtostr@@Base+0x4c68>
    a8fc:	cmp	r0, #392	; 0x188
    a900:	bcs	b14c <bt_compidtostr@@Base+0x310c>
    a904:	ldr	r0, [pc, #2892]	; b458 <bt_compidtostr@@Base+0x3418>
    a908:	add	r0, pc, r0
    a90c:	bx	lr
    a910:	movw	r3, #553	; 0x229
    a914:	cmp	r0, r3
    a918:	beq	cb94 <bt_compidtostr@@Base+0x4b54>
    a91c:	bhi	b140 <bt_compidtostr@@Base+0x3100>
    a920:	ldr	r0, [pc, #2868]	; b45c <bt_compidtostr@@Base+0x341c>
    a924:	add	r0, pc, r0
    a928:	bx	lr
    a92c:	movw	r3, #689	; 0x2b1
    a930:	cmp	r0, r3
    a934:	beq	d680 <bt_compidtostr@@Base+0x5640>
    a938:	bls	a9ac <bt_compidtostr@@Base+0x296c>
    a93c:	movw	r3, #693	; 0x2b5
    a940:	cmp	r0, r3
    a944:	beq	d158 <bt_compidtostr@@Base+0x5118>
    a948:	bls	a98c <bt_compidtostr@@Base+0x294c>
    a94c:	movw	r3, #695	; 0x2b7
    a950:	cmp	r0, r3
    a954:	beq	cb88 <bt_compidtostr@@Base+0x4b48>
    a958:	cmp	r0, #696	; 0x2b8
    a95c:	bcs	b134 <bt_compidtostr@@Base+0x30f4>
    a960:	ldr	r0, [pc, #2808]	; b460 <bt_compidtostr@@Base+0x3420>
    a964:	add	r0, pc, r0
    a968:	bx	lr
    a96c:	movw	r3, #935	; 0x3a7
    a970:	cmp	r0, r3
    a974:	beq	cb7c <bt_compidtostr@@Base+0x4b3c>
    a978:	cmp	r0, #936	; 0x3a8
    a97c:	bcs	b128 <bt_compidtostr@@Base+0x30e8>
    a980:	ldr	r0, [pc, #2780]	; b464 <bt_compidtostr@@Base+0x3424>
    a984:	add	r0, pc, r0
    a988:	bx	lr
    a98c:	movw	r3, #691	; 0x2b3
    a990:	cmp	r0, r3
    a994:	beq	cb70 <bt_compidtostr@@Base+0x4b30>
    a998:	cmp	r0, #692	; 0x2b4
    a99c:	bcs	b11c <bt_compidtostr@@Base+0x30dc>
    a9a0:	ldr	r0, [pc, #2752]	; b468 <bt_compidtostr@@Base+0x3428>
    a9a4:	add	r0, pc, r0
    a9a8:	bx	lr
    a9ac:	movw	r3, #685	; 0x2ad
    a9b0:	cmp	r0, r3
    a9b4:	beq	d17c <bt_compidtostr@@Base+0x513c>
    a9b8:	bls	aa4c <bt_compidtostr@@Base+0x2a0c>
    a9bc:	movw	r3, #687	; 0x2af
    a9c0:	cmp	r0, r3
    a9c4:	beq	cba0 <bt_compidtostr@@Base+0x4b60>
    a9c8:	cmp	r0, #688	; 0x2b0
    a9cc:	bcs	b110 <bt_compidtostr@@Base+0x30d0>
    a9d0:	ldr	r0, [pc, #2708]	; b46c <bt_compidtostr@@Base+0x342c>
    a9d4:	add	r0, pc, r0
    a9d8:	bx	lr
    a9dc:	movw	r3, #929	; 0x3a1
    a9e0:	cmp	r0, r3
    a9e4:	beq	d284 <bt_compidtostr@@Base+0x5244>
    a9e8:	bls	aa6c <bt_compidtostr@@Base+0x2a2c>
    a9ec:	movw	r3, #931	; 0x3a3
    a9f0:	cmp	r0, r3
    a9f4:	beq	ca50 <bt_compidtostr@@Base+0x4a10>
    a9f8:	cmp	r0, #932	; 0x3a4
    a9fc:	bcs	b104 <bt_compidtostr@@Base+0x30c4>
    aa00:	ldr	r0, [pc, #2664]	; b470 <bt_compidtostr@@Base+0x3430>
    aa04:	add	r0, pc, r0
    aa08:	bx	lr
    aa0c:	movw	r3, #917	; 0x395
    aa10:	cmp	r0, r3
    aa14:	beq	d710 <bt_compidtostr@@Base+0x56d0>
    aa18:	bls	aaac <bt_compidtostr@@Base+0x2a6c>
    aa1c:	movw	r3, #921	; 0x399
    aa20:	cmp	r0, r3
    aa24:	beq	d29c <bt_compidtostr@@Base+0x525c>
    aa28:	bls	aa8c <bt_compidtostr@@Base+0x2a4c>
    aa2c:	movw	r3, #923	; 0x39b
    aa30:	cmp	r0, r3
    aa34:	beq	ca68 <bt_compidtostr@@Base+0x4a28>
    aa38:	cmp	r0, #924	; 0x39c
    aa3c:	bcs	b0f8 <bt_compidtostr@@Base+0x30b8>
    aa40:	ldr	r0, [pc, #2604]	; b474 <bt_compidtostr@@Base+0x3434>
    aa44:	add	r0, pc, r0
    aa48:	bx	lr
    aa4c:	movw	r3, #683	; 0x2ab
    aa50:	cmp	r0, r3
    aa54:	beq	ca5c <bt_compidtostr@@Base+0x4a1c>
    aa58:	cmp	r0, #684	; 0x2ac
    aa5c:	bcs	b0ec <bt_compidtostr@@Base+0x30ac>
    aa60:	ldr	r0, [pc, #2576]	; b478 <bt_compidtostr@@Base+0x3438>
    aa64:	add	r0, pc, r0
    aa68:	bx	lr
    aa6c:	movw	r3, #927	; 0x39f
    aa70:	cmp	r0, r3
    aa74:	beq	ca44 <bt_compidtostr@@Base+0x4a04>
    aa78:	cmp	r0, #928	; 0x3a0
    aa7c:	bcs	b0e0 <bt_compidtostr@@Base+0x30a0>
    aa80:	ldr	r0, [pc, #2548]	; b47c <bt_compidtostr@@Base+0x343c>
    aa84:	add	r0, pc, r0
    aa88:	bx	lr
    aa8c:	movw	r3, #919	; 0x397
    aa90:	cmp	r0, r3
    aa94:	beq	ca38 <bt_compidtostr@@Base+0x49f8>
    aa98:	cmp	r0, #920	; 0x398
    aa9c:	bcs	b0d4 <bt_compidtostr@@Base+0x3094>
    aaa0:	ldr	r0, [pc, #2520]	; b480 <bt_compidtostr@@Base+0x3440>
    aaa4:	add	r0, pc, r0
    aaa8:	bx	lr
    aaac:	movw	r3, #913	; 0x391
    aab0:	cmp	r0, r3
    aab4:	beq	d1f4 <bt_compidtostr@@Base+0x51b4>
    aab8:	bls	aef0 <bt_compidtostr@@Base+0x2eb0>
    aabc:	movw	r3, #915	; 0x393
    aac0:	cmp	r0, r3
    aac4:	beq	caa4 <bt_compidtostr@@Base+0x4a64>
    aac8:	cmp	r0, #916	; 0x394
    aacc:	bcs	b0c8 <bt_compidtostr@@Base+0x3088>
    aad0:	ldr	r0, [pc, #2476]	; b484 <bt_compidtostr@@Base+0x3444>
    aad4:	add	r0, pc, r0
    aad8:	bx	lr
    aadc:	movw	r3, #902	; 0x386
    aae0:	cmp	r0, r3
    aae4:	beq	ca98 <bt_compidtostr@@Base+0x4a58>
    aae8:	bhi	b0bc <bt_compidtostr@@Base+0x307c>
    aaec:	ldr	r0, [pc, #2452]	; b488 <bt_compidtostr@@Base+0x3448>
    aaf0:	add	r0, pc, r0
    aaf4:	bx	lr
    aaf8:	cmp	r0, #880	; 0x370
    aafc:	beq	d1dc <bt_compidtostr@@Base+0x519c>
    ab00:	bls	ab3c <bt_compidtostr@@Base+0x2afc>
    ab04:	movw	r3, #882	; 0x372
    ab08:	cmp	r0, r3
    ab0c:	beq	ca80 <bt_compidtostr@@Base+0x4a40>
    ab10:	bhi	b0b0 <bt_compidtostr@@Base+0x3070>
    ab14:	ldr	r0, [pc, #2416]	; b48c <bt_compidtostr@@Base+0x344c>
    ab18:	add	r0, pc, r0
    ab1c:	bx	lr
    ab20:	movw	r3, #870	; 0x366
    ab24:	cmp	r0, r3
    ab28:	beq	ca8c <bt_compidtostr@@Base+0x4a4c>
    ab2c:	bhi	b0a4 <bt_compidtostr@@Base+0x3064>
    ab30:	ldr	r0, [pc, #2392]	; b490 <bt_compidtostr@@Base+0x3450>
    ab34:	add	r0, pc, r0
    ab38:	bx	lr
    ab3c:	movw	r3, #878	; 0x36e
    ab40:	cmp	r0, r3
    ab44:	beq	ca74 <bt_compidtostr@@Base+0x4a34>
    ab48:	bhi	b098 <bt_compidtostr@@Base+0x3058>
    ab4c:	ldr	r0, [pc, #2368]	; b494 <bt_compidtostr@@Base+0x3454>
    ab50:	add	r0, pc, r0
    ab54:	bx	lr
    ab58:	cmp	r0, #864	; 0x360
    ab5c:	beq	d1e8 <bt_compidtostr@@Base+0x51a8>
    ab60:	bls	abb4 <bt_compidtostr@@Base+0x2b74>
    ab64:	movw	r3, #866	; 0x362
    ab68:	cmp	r0, r3
    ab6c:	beq	cbdc <bt_compidtostr@@Base+0x4b9c>
    ab70:	bhi	b08c <bt_compidtostr@@Base+0x304c>
    ab74:	ldr	r0, [pc, #2332]	; b498 <bt_compidtostr@@Base+0x3458>
    ab78:	add	r0, pc, r0
    ab7c:	bx	lr
    ab80:	cmp	r0, #852	; 0x354
    ab84:	beq	d674 <bt_compidtostr@@Base+0x5634>
    ab88:	bls	abec <bt_compidtostr@@Base+0x2bac>
    ab8c:	cmp	r0, #856	; 0x358
    ab90:	beq	d170 <bt_compidtostr@@Base+0x5130>
    ab94:	bls	abd0 <bt_compidtostr@@Base+0x2b90>
    ab98:	movw	r3, #858	; 0x35a
    ab9c:	cmp	r0, r3
    aba0:	beq	cbd0 <bt_compidtostr@@Base+0x4b90>
    aba4:	bhi	b080 <bt_compidtostr@@Base+0x3040>
    aba8:	ldr	r0, [pc, #2284]	; b49c <bt_compidtostr@@Base+0x345c>
    abac:	add	r0, pc, r0
    abb0:	bx	lr
    abb4:	movw	r3, #862	; 0x35e
    abb8:	cmp	r0, r3
    abbc:	beq	cbc4 <bt_compidtostr@@Base+0x4b84>
    abc0:	bhi	b074 <bt_compidtostr@@Base+0x3034>
    abc4:	ldr	r0, [pc, #2260]	; b4a0 <bt_compidtostr@@Base+0x3460>
    abc8:	add	r0, pc, r0
    abcc:	bx	lr
    abd0:	movw	r3, #854	; 0x356
    abd4:	cmp	r0, r3
    abd8:	beq	cbb8 <bt_compidtostr@@Base+0x4b78>
    abdc:	bhi	b068 <bt_compidtostr@@Base+0x3028>
    abe0:	ldr	r0, [pc, #2236]	; b4a4 <bt_compidtostr@@Base+0x3464>
    abe4:	add	r0, pc, r0
    abe8:	bx	lr
    abec:	cmp	r0, #848	; 0x350
    abf0:	beq	d1a0 <bt_compidtostr@@Base+0x5160>
    abf4:	bls	af1c <bt_compidtostr@@Base+0x2edc>
    abf8:	movw	r3, #850	; 0x352
    abfc:	cmp	r0, r3
    ac00:	beq	cbac <bt_compidtostr@@Base+0x4b6c>
    ac04:	bhi	b05c <bt_compidtostr@@Base+0x301c>
    ac08:	ldr	r0, [pc, #2200]	; b4a8 <bt_compidtostr@@Base+0x3468>
    ac0c:	add	r0, pc, r0
    ac10:	bx	lr
    ac14:	movw	r3, #1006	; 0x3ee
    ac18:	cmp	r0, r3
    ac1c:	beq	db24 <bt_compidtostr@@Base+0x5ae4>
    ac20:	bls	ad50 <bt_compidtostr@@Base+0x2d10>
    ac24:	movw	r3, #1022	; 0x3fe
    ac28:	cmp	r0, r3
    ac2c:	beq	da70 <bt_compidtostr@@Base+0x5a30>
    ac30:	bls	ad18 <bt_compidtostr@@Base+0x2cd8>
    ac34:	movw	r3, #1030	; 0x406
    ac38:	cmp	r0, r3
    ac3c:	beq	d8d8 <bt_compidtostr@@Base+0x5898>
    ac40:	bls	acec <bt_compidtostr@@Base+0x2cac>
    ac44:	movw	r3, #1034	; 0x40a
    ac48:	cmp	r0, r3
    ac4c:	beq	d5d8 <bt_compidtostr@@Base+0x5598>
    ac50:	bls	acd0 <bt_compidtostr@@Base+0x2c90>
    ac54:	movw	r3, #1036	; 0x40c
    ac58:	cmp	r0, r3
    ac5c:	beq	cfc0 <bt_compidtostr@@Base+0x4f80>
    ac60:	bcc	c9b4 <bt_compidtostr@@Base+0x4974>
    ac64:	movw	r3, #1037	; 0x40d
    ac68:	cmp	r0, r3
    ac6c:	beq	b050 <bt_compidtostr@@Base+0x3010>
    ac70:	movw	r3, #65535	; 0xffff
    ac74:	cmp	r0, r3
    ac78:	bne	af10 <bt_compidtostr@@Base+0x2ed0>
    ac7c:	ldr	r0, [pc, #2088]	; b4ac <bt_compidtostr@@Base+0x346c>
    ac80:	add	r0, pc, r0
    ac84:	bx	lr
    ac88:	cmp	r0, #896	; 0x380
    ac8c:	beq	d2b4 <bt_compidtostr@@Base+0x5274>
    ac90:	bls	af38 <bt_compidtostr@@Base+0x2ef8>
    ac94:	movw	r3, #898	; 0x382
    ac98:	cmp	r0, r3
    ac9c:	beq	c9e4 <bt_compidtostr@@Base+0x49a4>
    aca0:	bhi	b044 <bt_compidtostr@@Base+0x3004>
    aca4:	ldr	r0, [pc, #2052]	; b4b0 <bt_compidtostr@@Base+0x3470>
    aca8:	add	r0, pc, r0
    acac:	bx	lr
    acb0:	movw	r3, #943	; 0x3af
    acb4:	cmp	r0, r3
    acb8:	beq	c9d8 <bt_compidtostr@@Base+0x4998>
    acbc:	cmp	r0, #944	; 0x3b0
    acc0:	bcs	b038 <bt_compidtostr@@Base+0x2ff8>
    acc4:	ldr	r0, [pc, #2024]	; b4b4 <bt_compidtostr@@Base+0x3474>
    acc8:	add	r0, pc, r0
    accc:	bx	lr
    acd0:	movw	r3, #1032	; 0x408
    acd4:	cmp	r0, r3
    acd8:	beq	c9cc <bt_compidtostr@@Base+0x498c>
    acdc:	bhi	b02c <bt_compidtostr@@Base+0x2fec>
    ace0:	ldr	r0, [pc, #2000]	; b4b8 <bt_compidtostr@@Base+0x3478>
    ace4:	add	r0, pc, r0
    ace8:	bx	lr
    acec:	movw	r3, #1026	; 0x402
    acf0:	cmp	r0, r3
    acf4:	beq	d2c0 <bt_compidtostr@@Base+0x5280>
    acf8:	bls	ad98 <bt_compidtostr@@Base+0x2d58>
    acfc:	movw	r3, #1028	; 0x404
    ad00:	cmp	r0, r3
    ad04:	beq	c9c0 <bt_compidtostr@@Base+0x4980>
    ad08:	bhi	b020 <bt_compidtostr@@Base+0x2fe0>
    ad0c:	ldr	r0, [pc, #1960]	; b4bc <bt_compidtostr@@Base+0x347c>
    ad10:	add	r0, pc, r0
    ad14:	bx	lr
    ad18:	movw	r3, #1014	; 0x3f6
    ad1c:	cmp	r0, r3
    ad20:	beq	d704 <bt_compidtostr@@Base+0x56c4>
    ad24:	bls	ae98 <bt_compidtostr@@Base+0x2e58>
    ad28:	movw	r3, #1018	; 0x3fa
    ad2c:	cmp	r0, r3
    ad30:	beq	d278 <bt_compidtostr@@Base+0x5238>
    ad34:	bls	ae80 <bt_compidtostr@@Base+0x2e40>
    ad38:	cmp	r0, #1020	; 0x3fc
    ad3c:	beq	ca2c <bt_compidtostr@@Base+0x49ec>
    ad40:	bhi	b014 <bt_compidtostr@@Base+0x2fd4>
    ad44:	ldr	r0, [pc, #1908]	; b4c0 <bt_compidtostr@@Base+0x3480>
    ad48:	add	r0, pc, r0
    ad4c:	bx	lr
    ad50:	movw	r3, #990	; 0x3de
    ad54:	cmp	r0, r3
    ad58:	beq	d98c <bt_compidtostr@@Base+0x594c>
    ad5c:	bls	adf0 <bt_compidtostr@@Base+0x2db0>
    ad60:	movw	r3, #998	; 0x3e6
    ad64:	cmp	r0, r3
    ad68:	beq	d6f8 <bt_compidtostr@@Base+0x56b8>
    ad6c:	bls	adc8 <bt_compidtostr@@Base+0x2d88>
    ad70:	movw	r3, #1002	; 0x3ea
    ad74:	cmp	r0, r3
    ad78:	beq	d290 <bt_compidtostr@@Base+0x5250>
    ad7c:	bls	adb0 <bt_compidtostr@@Base+0x2d70>
    ad80:	cmp	r0, #1004	; 0x3ec
    ad84:	beq	ca14 <bt_compidtostr@@Base+0x49d4>
    ad88:	bhi	b008 <bt_compidtostr@@Base+0x2fc8>
    ad8c:	ldr	r0, [pc, #1840]	; b4c4 <bt_compidtostr@@Base+0x3484>
    ad90:	add	r0, pc, r0
    ad94:	bx	lr
    ad98:	cmp	r0, #1024	; 0x400
    ad9c:	beq	ca20 <bt_compidtostr@@Base+0x49e0>
    ada0:	bhi	affc <bt_compidtostr@@Base+0x2fbc>
    ada4:	ldr	r0, [pc, #1820]	; b4c8 <bt_compidtostr@@Base+0x3488>
    ada8:	add	r0, pc, r0
    adac:	bx	lr
    adb0:	cmp	r0, #1000	; 0x3e8
    adb4:	beq	c9f0 <bt_compidtostr@@Base+0x49b0>
    adb8:	bhi	aff0 <bt_compidtostr@@Base+0x2fb0>
    adbc:	ldr	r0, [pc, #1800]	; b4cc <bt_compidtostr@@Base+0x348c>
    adc0:	add	r0, pc, r0
    adc4:	bx	lr
    adc8:	movw	r3, #994	; 0x3e2
    adcc:	cmp	r0, r3
    add0:	beq	d2a8 <bt_compidtostr@@Base+0x5268>
    add4:	bls	ae28 <bt_compidtostr@@Base+0x2de8>
    add8:	cmp	r0, #996	; 0x3e4
    addc:	beq	c990 <bt_compidtostr@@Base+0x4950>
    ade0:	bhi	afe4 <bt_compidtostr@@Base+0x2fa4>
    ade4:	ldr	r0, [pc, #1764]	; b4d0 <bt_compidtostr@@Base+0x3490>
    ade8:	add	r0, pc, r0
    adec:	bx	lr
    adf0:	movw	r3, #982	; 0x3d6
    adf4:	cmp	r0, r3
    adf8:	beq	d7a0 <bt_compidtostr@@Base+0x5760>
    adfc:	bls	ae58 <bt_compidtostr@@Base+0x2e18>
    ae00:	movw	r3, #986	; 0x3da
    ae04:	cmp	r0, r3
    ae08:	beq	d44c <bt_compidtostr@@Base+0x540c>
    ae0c:	bls	ae40 <bt_compidtostr@@Base+0x2e00>
    ae10:	cmp	r0, #988	; 0x3dc
    ae14:	beq	c984 <bt_compidtostr@@Base+0x4944>
    ae18:	bhi	afd8 <bt_compidtostr@@Base+0x2f98>
    ae1c:	ldr	r0, [pc, #1712]	; b4d4 <bt_compidtostr@@Base+0x3494>
    ae20:	add	r0, pc, r0
    ae24:	bx	lr
    ae28:	cmp	r0, #992	; 0x3e0
    ae2c:	beq	ca08 <bt_compidtostr@@Base+0x49c8>
    ae30:	bhi	afcc <bt_compidtostr@@Base+0x2f8c>
    ae34:	ldr	r0, [pc, #1692]	; b4d8 <bt_compidtostr@@Base+0x3498>
    ae38:	add	r0, pc, r0
    ae3c:	bx	lr
    ae40:	cmp	r0, #984	; 0x3d8
    ae44:	beq	c9fc <bt_compidtostr@@Base+0x49bc>
    ae48:	bhi	afc0 <bt_compidtostr@@Base+0x2f80>
    ae4c:	ldr	r0, [pc, #1672]	; b4dc <bt_compidtostr@@Base+0x349c>
    ae50:	add	r0, pc, r0
    ae54:	bx	lr
    ae58:	movw	r3, #978	; 0x3d2
    ae5c:	cmp	r0, r3
    ae60:	beq	d458 <bt_compidtostr@@Base+0x5418>
    ae64:	bls	aec0 <bt_compidtostr@@Base+0x2e80>
    ae68:	cmp	r0, #980	; 0x3d4
    ae6c:	beq	c9a8 <bt_compidtostr@@Base+0x4968>
    ae70:	bhi	afb4 <bt_compidtostr@@Base+0x2f74>
    ae74:	ldr	r0, [pc, #1636]	; b4e0 <bt_compidtostr@@Base+0x34a0>
    ae78:	add	r0, pc, r0
    ae7c:	bx	lr
    ae80:	cmp	r0, #1016	; 0x3f8
    ae84:	beq	c99c <bt_compidtostr@@Base+0x495c>
    ae88:	bhi	afa8 <bt_compidtostr@@Base+0x2f68>
    ae8c:	ldr	r0, [pc, #1616]	; b4e4 <bt_compidtostr@@Base+0x34a4>
    ae90:	add	r0, pc, r0
    ae94:	bx	lr
    ae98:	movw	r3, #1010	; 0x3f2
    ae9c:	cmp	r0, r3
    aea0:	beq	d464 <bt_compidtostr@@Base+0x5424>
    aea4:	bls	aed8 <bt_compidtostr@@Base+0x2e98>
    aea8:	cmp	r0, #1012	; 0x3f4
    aeac:	beq	cae0 <bt_compidtostr@@Base+0x4aa0>
    aeb0:	bhi	af9c <bt_compidtostr@@Base+0x2f5c>
    aeb4:	ldr	r0, [pc, #1580]	; b4e8 <bt_compidtostr@@Base+0x34a8>
    aeb8:	add	r0, pc, r0
    aebc:	bx	lr
    aec0:	cmp	r0, #976	; 0x3d0
    aec4:	beq	cad4 <bt_compidtostr@@Base+0x4a94>
    aec8:	bhi	af90 <bt_compidtostr@@Base+0x2f50>
    aecc:	ldr	r0, [pc, #1560]	; b4ec <bt_compidtostr@@Base+0x34ac>
    aed0:	add	r0, pc, r0
    aed4:	bx	lr
    aed8:	cmp	r0, #1008	; 0x3f0
    aedc:	beq	caf8 <bt_compidtostr@@Base+0x4ab8>
    aee0:	bhi	af84 <bt_compidtostr@@Base+0x2f44>
    aee4:	ldr	r0, [pc, #1540]	; b4f0 <bt_compidtostr@@Base+0x34b0>
    aee8:	add	r0, pc, r0
    aeec:	bx	lr
    aef0:	movw	r3, #911	; 0x38f
    aef4:	cmp	r0, r3
    aef8:	beq	caec <bt_compidtostr@@Base+0x4aac>
    aefc:	cmp	r0, #912	; 0x390
    af00:	bcs	af78 <bt_compidtostr@@Base+0x2f38>
    af04:	ldr	r0, [pc, #1512]	; b4f4 <bt_compidtostr@@Base+0x34b4>
    af08:	add	r0, pc, r0
    af0c:	bx	lr
    af10:	ldr	r0, [pc, #1504]	; b4f8 <bt_compidtostr@@Base+0x34b8>
    af14:	add	r0, pc, r0
    af18:	bx	lr
    af1c:	movw	r3, #846	; 0x34e
    af20:	cmp	r0, r3
    af24:	beq	cabc <bt_compidtostr@@Base+0x4a7c>
    af28:	bhi	af6c <bt_compidtostr@@Base+0x2f2c>
    af2c:	ldr	r0, [pc, #1480]	; b4fc <bt_compidtostr@@Base+0x34bc>
    af30:	add	r0, pc, r0
    af34:	bx	lr
    af38:	movw	r3, #894	; 0x37e
    af3c:	cmp	r0, r3
    af40:	beq	cab0 <bt_compidtostr@@Base+0x4a70>
    af44:	bhi	af60 <bt_compidtostr@@Base+0x2f20>
    af48:	ldr	r0, [pc, #1456]	; b500 <bt_compidtostr@@Base+0x34c0>
    af4c:	add	r0, pc, r0
    af50:	bx	lr
    af54:	ldr	r0, [pc, #1448]	; b504 <bt_compidtostr@@Base+0x34c4>
    af58:	add	r0, pc, r0
    af5c:	bx	lr
    af60:	ldr	r0, [pc, #1440]	; b508 <bt_compidtostr@@Base+0x34c8>
    af64:	add	r0, pc, r0
    af68:	bx	lr
    af6c:	ldr	r0, [pc, #1432]	; b50c <bt_compidtostr@@Base+0x34cc>
    af70:	add	r0, pc, r0
    af74:	bx	lr
    af78:	ldr	r0, [pc, #1424]	; b510 <bt_compidtostr@@Base+0x34d0>
    af7c:	add	r0, pc, r0
    af80:	bx	lr
    af84:	ldr	r0, [pc, #1416]	; b514 <bt_compidtostr@@Base+0x34d4>
    af88:	add	r0, pc, r0
    af8c:	bx	lr
    af90:	ldr	r0, [pc, #1408]	; b518 <bt_compidtostr@@Base+0x34d8>
    af94:	add	r0, pc, r0
    af98:	bx	lr
    af9c:	ldr	r0, [pc, #1400]	; b51c <bt_compidtostr@@Base+0x34dc>
    afa0:	add	r0, pc, r0
    afa4:	bx	lr
    afa8:	ldr	r0, [pc, #1392]	; b520 <bt_compidtostr@@Base+0x34e0>
    afac:	add	r0, pc, r0
    afb0:	bx	lr
    afb4:	ldr	r0, [pc, #1384]	; b524 <bt_compidtostr@@Base+0x34e4>
    afb8:	add	r0, pc, r0
    afbc:	bx	lr
    afc0:	ldr	r0, [pc, #1376]	; b528 <bt_compidtostr@@Base+0x34e8>
    afc4:	add	r0, pc, r0
    afc8:	bx	lr
    afcc:	ldr	r0, [pc, #1368]	; b52c <bt_compidtostr@@Base+0x34ec>
    afd0:	add	r0, pc, r0
    afd4:	bx	lr
    afd8:	ldr	r0, [pc, #1360]	; b530 <bt_compidtostr@@Base+0x34f0>
    afdc:	add	r0, pc, r0
    afe0:	bx	lr
    afe4:	ldr	r0, [pc, #1352]	; b534 <bt_compidtostr@@Base+0x34f4>
    afe8:	add	r0, pc, r0
    afec:	bx	lr
    aff0:	ldr	r0, [pc, #1344]	; b538 <bt_compidtostr@@Base+0x34f8>
    aff4:	add	r0, pc, r0
    aff8:	bx	lr
    affc:	ldr	r0, [pc, #1336]	; b53c <bt_compidtostr@@Base+0x34fc>
    b000:	add	r0, pc, r0
    b004:	bx	lr
    b008:	ldr	r0, [pc, #1328]	; b540 <bt_compidtostr@@Base+0x3500>
    b00c:	add	r0, pc, r0
    b010:	bx	lr
    b014:	ldr	r0, [pc, #1320]	; b544 <bt_compidtostr@@Base+0x3504>
    b018:	add	r0, pc, r0
    b01c:	bx	lr
    b020:	ldr	r0, [pc, #1312]	; b548 <bt_compidtostr@@Base+0x3508>
    b024:	add	r0, pc, r0
    b028:	bx	lr
    b02c:	ldr	r0, [pc, #1304]	; b54c <bt_compidtostr@@Base+0x350c>
    b030:	add	r0, pc, r0
    b034:	bx	lr
    b038:	ldr	r0, [pc, #1296]	; b550 <bt_compidtostr@@Base+0x3510>
    b03c:	add	r0, pc, r0
    b040:	bx	lr
    b044:	ldr	r0, [pc, #1288]	; b554 <bt_compidtostr@@Base+0x3514>
    b048:	add	r0, pc, r0
    b04c:	bx	lr
    b050:	ldr	r0, [pc, #1280]	; b558 <bt_compidtostr@@Base+0x3518>
    b054:	add	r0, pc, r0
    b058:	bx	lr
    b05c:	ldr	r0, [pc, #1272]	; b55c <bt_compidtostr@@Base+0x351c>
    b060:	add	r0, pc, r0
    b064:	bx	lr
    b068:	ldr	r0, [pc, #1264]	; b560 <bt_compidtostr@@Base+0x3520>
    b06c:	add	r0, pc, r0
    b070:	bx	lr
    b074:	ldr	r0, [pc, #1256]	; b564 <bt_compidtostr@@Base+0x3524>
    b078:	add	r0, pc, r0
    b07c:	bx	lr
    b080:	ldr	r0, [pc, #1248]	; b568 <bt_compidtostr@@Base+0x3528>
    b084:	add	r0, pc, r0
    b088:	bx	lr
    b08c:	ldr	r0, [pc, #1240]	; b56c <bt_compidtostr@@Base+0x352c>
    b090:	add	r0, pc, r0
    b094:	bx	lr
    b098:	ldr	r0, [pc, #1232]	; b570 <bt_compidtostr@@Base+0x3530>
    b09c:	add	r0, pc, r0
    b0a0:	bx	lr
    b0a4:	ldr	r0, [pc, #1224]	; b574 <bt_compidtostr@@Base+0x3534>
    b0a8:	add	r0, pc, r0
    b0ac:	bx	lr
    b0b0:	ldr	r0, [pc, #1216]	; b578 <bt_compidtostr@@Base+0x3538>
    b0b4:	add	r0, pc, r0
    b0b8:	bx	lr
    b0bc:	ldr	r0, [pc, #1208]	; b57c <bt_compidtostr@@Base+0x353c>
    b0c0:	add	r0, pc, r0
    b0c4:	bx	lr
    b0c8:	ldr	r0, [pc, #1200]	; b580 <bt_compidtostr@@Base+0x3540>
    b0cc:	add	r0, pc, r0
    b0d0:	bx	lr
    b0d4:	ldr	r0, [pc, #1192]	; b584 <bt_compidtostr@@Base+0x3544>
    b0d8:	add	r0, pc, r0
    b0dc:	bx	lr
    b0e0:	ldr	r0, [pc, #1184]	; b588 <bt_compidtostr@@Base+0x3548>
    b0e4:	add	r0, pc, r0
    b0e8:	bx	lr
    b0ec:	ldr	r0, [pc, #1176]	; b58c <bt_compidtostr@@Base+0x354c>
    b0f0:	add	r0, pc, r0
    b0f4:	bx	lr
    b0f8:	ldr	r0, [pc, #1168]	; b590 <bt_compidtostr@@Base+0x3550>
    b0fc:	add	r0, pc, r0
    b100:	bx	lr
    b104:	ldr	r0, [pc, #1160]	; b594 <bt_compidtostr@@Base+0x3554>
    b108:	add	r0, pc, r0
    b10c:	bx	lr
    b110:	ldr	r0, [pc, #1152]	; b598 <bt_compidtostr@@Base+0x3558>
    b114:	add	r0, pc, r0
    b118:	bx	lr
    b11c:	ldr	r0, [pc, #1144]	; b59c <bt_compidtostr@@Base+0x355c>
    b120:	add	r0, pc, r0
    b124:	bx	lr
    b128:	ldr	r0, [pc, #1136]	; b5a0 <bt_compidtostr@@Base+0x3560>
    b12c:	add	r0, pc, r0
    b130:	bx	lr
    b134:	ldr	r0, [pc, #1128]	; b5a4 <bt_compidtostr@@Base+0x3564>
    b138:	add	r0, pc, r0
    b13c:	bx	lr
    b140:	ldr	r0, [pc, #1120]	; b5a8 <bt_compidtostr@@Base+0x3568>
    b144:	add	r0, pc, r0
    b148:	bx	lr
    b14c:	ldr	r0, [pc, #1112]	; b5ac <bt_compidtostr@@Base+0x356c>
    b150:	add	r0, pc, r0
    b154:	bx	lr
    b158:	ldr	r0, [pc, #1104]	; b5b0 <bt_compidtostr@@Base+0x3570>
    b15c:	add	r0, pc, r0
    b160:	bx	lr
    b164:	ldr	r0, [pc, #1096]	; b5b4 <bt_compidtostr@@Base+0x3574>
    b168:	add	r0, pc, r0
    b16c:	bx	lr
    b170:	ldr	r0, [pc, #1088]	; b5b8 <bt_compidtostr@@Base+0x3578>
    b174:	add	r0, pc, r0
    b178:	bx	lr
    b17c:	ldr	r0, [pc, #1080]	; b5bc <bt_compidtostr@@Base+0x357c>
    b180:	add	r0, pc, r0
    b184:	bx	lr
    b188:	ldr	r0, [pc, #1072]	; b5c0 <bt_compidtostr@@Base+0x3580>
    b18c:	add	r0, pc, r0
    b190:	bx	lr
    b194:	ldr	r0, [pc, #1064]	; b5c4 <bt_compidtostr@@Base+0x3584>
    b198:	add	r0, pc, r0
    b19c:	bx	lr
    b1a0:	ldr	r0, [pc, #1056]	; b5c8 <bt_compidtostr@@Base+0x3588>
    b1a4:	add	r0, pc, r0
    b1a8:	bx	lr
    b1ac:	ldr	r0, [pc, #1048]	; b5cc <bt_compidtostr@@Base+0x358c>
    b1b0:	add	r0, pc, r0
    b1b4:	bx	lr
    b1b8:	ldr	r0, [pc, #1040]	; b5d0 <bt_compidtostr@@Base+0x3590>
    b1bc:	add	r0, pc, r0
    b1c0:	bx	lr
    b1c4:	ldr	r0, [pc, #1032]	; b5d4 <bt_compidtostr@@Base+0x3594>
    b1c8:	add	r0, pc, r0
    b1cc:	bx	lr
    b1d0:	ldr	r0, [pc, #1024]	; b5d8 <bt_compidtostr@@Base+0x3598>
    b1d4:	add	r0, pc, r0
    b1d8:	bx	lr
    b1dc:	ldr	r0, [pc, #1016]	; b5dc <bt_compidtostr@@Base+0x359c>
    b1e0:	add	r0, pc, r0
    b1e4:	bx	lr
    b1e8:	ldr	r0, [pc, #1008]	; b5e0 <bt_compidtostr@@Base+0x35a0>
    b1ec:	add	r0, pc, r0
    b1f0:	bx	lr
    b1f4:	ldr	r0, [pc, #1000]	; b5e4 <bt_compidtostr@@Base+0x35a4>
    b1f8:	add	r0, pc, r0
    b1fc:	bx	lr
    b200:	ldr	r0, [pc, #992]	; b5e8 <bt_compidtostr@@Base+0x35a8>
    b204:	add	r0, pc, r0
    b208:	bx	lr
    b20c:	ldr	r0, [pc, #984]	; b5ec <bt_compidtostr@@Base+0x35ac>
    b210:	add	r0, pc, r0
    b214:	bx	lr
    b218:	ldr	r0, [pc, #976]	; b5f0 <bt_compidtostr@@Base+0x35b0>
    b21c:	add	r0, pc, r0
    b220:	bx	lr
    b224:	ldr	r0, [pc, #968]	; b5f4 <bt_compidtostr@@Base+0x35b4>
    b228:	add	r0, pc, r0
    b22c:	bx	lr
    b230:	ldr	r0, [pc, #960]	; b5f8 <bt_compidtostr@@Base+0x35b8>
    b234:	add	r0, pc, r0
    b238:	bx	lr
    b23c:	ldr	r0, [pc, #952]	; b5fc <bt_compidtostr@@Base+0x35bc>
    b240:	add	r0, pc, r0
    b244:	bx	lr
    b248:	ldr	r0, [pc, #944]	; b600 <bt_compidtostr@@Base+0x35c0>
    b24c:	add	r0, pc, r0
    b250:	bx	lr
    b254:	ldr	r0, [pc, #936]	; b604 <bt_compidtostr@@Base+0x35c4>
    b258:	add	r0, pc, r0
    b25c:	bx	lr
    b260:	ldr	r0, [pc, #928]	; b608 <bt_compidtostr@@Base+0x35c8>
    b264:	add	r0, pc, r0
    b268:	bx	lr
    b26c:	ldr	r0, [pc, #920]	; b60c <bt_compidtostr@@Base+0x35cc>
    b270:	add	r0, pc, r0
    b274:	bx	lr
    b278:	ldr	r0, [pc, #912]	; b610 <bt_compidtostr@@Base+0x35d0>
    b27c:	add	r0, pc, r0
    b280:	bx	lr
    b284:	ldr	r0, [pc, #904]	; b614 <bt_compidtostr@@Base+0x35d4>
    b288:	add	r0, pc, r0
    b28c:	bx	lr
    b290:	ldr	r0, [pc, #896]	; b618 <bt_compidtostr@@Base+0x35d8>
    b294:	add	r0, pc, r0
    b298:	bx	lr
    b29c:	ldr	r0, [pc, #888]	; b61c <bt_compidtostr@@Base+0x35dc>
    b2a0:	add	r0, pc, r0
    b2a4:	bx	lr
    b2a8:	ldr	r0, [pc, #880]	; b620 <bt_compidtostr@@Base+0x35e0>
    b2ac:	add	r0, pc, r0
    b2b0:	bx	lr
    b2b4:	ldr	r0, [pc, #872]	; b624 <bt_compidtostr@@Base+0x35e4>
    b2b8:	add	r0, pc, r0
    b2bc:	bx	lr
    b2c0:	ldr	r0, [pc, #864]	; b628 <bt_compidtostr@@Base+0x35e8>
    b2c4:	add	r0, pc, r0
    b2c8:	bx	lr
    b2cc:	ldr	r0, [pc, #856]	; b62c <bt_compidtostr@@Base+0x35ec>
    b2d0:	add	r0, pc, r0
    b2d4:	bx	lr
    b2d8:	ldr	r0, [pc, #848]	; b630 <bt_compidtostr@@Base+0x35f0>
    b2dc:	add	r0, pc, r0
    b2e0:	bx	lr
    b2e4:	ldr	r0, [pc, #840]	; b634 <bt_compidtostr@@Base+0x35f4>
    b2e8:	add	r0, pc, r0
    b2ec:	bx	lr
    b2f0:	ldr	r0, [pc, #832]	; b638 <bt_compidtostr@@Base+0x35f8>
    b2f4:	add	r0, pc, r0
    b2f8:	bx	lr
    b2fc:	ldr	r0, [pc, #824]	; b63c <bt_compidtostr@@Base+0x35fc>
    b300:	add	r0, pc, r0
    b304:	bx	lr
    b308:	ldr	r0, [pc, #816]	; b640 <bt_compidtostr@@Base+0x3600>
    b30c:	add	r0, pc, r0
    b310:	bx	lr
    b314:	ldr	r0, [pc, #808]	; b644 <bt_compidtostr@@Base+0x3604>
    b318:	add	r0, pc, r0
    b31c:	bx	lr
    b320:	ldr	r0, [pc, #800]	; b648 <bt_compidtostr@@Base+0x3608>
    b324:	add	r0, pc, r0
    b328:	bx	lr
    b32c:	ldr	r0, [pc, #792]	; b64c <bt_compidtostr@@Base+0x360c>
    b330:	add	r0, pc, r0
    b334:	bx	lr
    b338:	ldr	r0, [pc, #784]	; b650 <bt_compidtostr@@Base+0x3610>
    b33c:	add	r0, pc, r0
    b340:	bx	lr
    b344:	ldr	r0, [pc, #776]	; b654 <bt_compidtostr@@Base+0x3614>
    b348:	add	r0, pc, r0
    b34c:	bx	lr
    b350:	ldr	r0, [pc, #768]	; b658 <bt_compidtostr@@Base+0x3618>
    b354:	add	r0, pc, r0
    b358:	bx	lr
    b35c:	ldr	r0, [pc, #760]	; b65c <bt_compidtostr@@Base+0x361c>
    b360:	add	r0, pc, r0
    b364:	bx	lr
    b368:	ldr	r0, [pc, #752]	; b660 <bt_compidtostr@@Base+0x3620>
    b36c:	add	r0, pc, r0
    b370:	bx	lr
    b374:	ldr	r0, [pc, #744]	; b664 <bt_compidtostr@@Base+0x3624>
    b378:	add	r0, pc, r0
    b37c:	bx	lr
    b380:	ldr	r0, [pc, #736]	; b668 <bt_compidtostr@@Base+0x3628>
    b384:	add	r0, pc, r0
    b388:	bx	lr
    b38c:	ldr	r0, [pc, #728]	; b66c <bt_compidtostr@@Base+0x362c>
    b390:	add	r0, pc, r0
    b394:	bx	lr
    b398:	ldr	r0, [pc, #720]	; b670 <bt_compidtostr@@Base+0x3630>
    b39c:	add	r0, pc, r0
    b3a0:	bx	lr
    b3a4:	ldr	r0, [pc, #712]	; b674 <bt_compidtostr@@Base+0x3634>
    b3a8:	add	r0, pc, r0
    b3ac:	bx	lr
    b3b0:	ldr	r0, [pc, #704]	; b678 <bt_compidtostr@@Base+0x3638>
    b3b4:	add	r0, pc, r0
    b3b8:	bx	lr
    b3bc:	ldr	r0, [pc, #696]	; b67c <bt_compidtostr@@Base+0x363c>
    b3c0:	add	r0, pc, r0
    b3c4:	bx	lr
    b3c8:	andeq	ip, r0, r4, lsl #23
    b3cc:	andeq	ip, r0, r8, asr #8
    b3d0:			; <UNDEFINED> instruction: 0x0000c1bc
    b3d4:	andeq	ip, r0, r4, ror #1
    b3d8:	andeq	ip, r0, r4, lsl #2
    b3dc:	andeq	ip, r0, ip, rrx
    b3e0:	strdeq	fp, [r0], -r4
    b3e4:	andeq	ip, r0, r8, asr #2
    b3e8:	andeq	r8, r0, r0, lsr #20
    b3ec:	andeq	fp, r0, r4, ror pc
    b3f0:	andeq	ip, r0, r0, lsr #19
    b3f4:	andeq	ip, r0, r4, lsr #18
    b3f8:	andeq	ip, r0, ip, lsl #16
    b3fc:	andeq	ip, r0, ip, ror r6
    b400:	andeq	ip, r0, r8, lsl #16
    b404:	ldrdeq	ip, [r0], -r4
    b408:	andeq	ip, r0, r8, asr r5
    b40c:	andeq	ip, r0, r0, ror #8
    b410:	muleq	r0, r4, r4
    b414:	andeq	ip, r0, r8, ror #7
    b418:	muleq	r0, r8, r3
    b41c:	andeq	ip, r0, r0, lsl #13
    b420:	andeq	ip, r0, ip, lsl #12
    b424:	ldrdeq	ip, [r0], -r0
    b428:	andeq	ip, r0, r8, lsl #11
    b42c:	andeq	sp, r0, r4, lsr #32
    b430:	ldrdeq	ip, [r0], -r0
    b434:	andeq	ip, r0, r4, ror pc
    b438:	andeq	r8, r0, ip, asr #14
    b43c:	andeq	ip, r0, ip, ror #1
    b440:	andeq	fp, r0, r4, asr #12
    b444:	andeq	fp, r0, r0, asr r5
    b448:	andeq	fp, r0, r8, lsl #11
    b44c:			; <UNDEFINED> instruction: 0x0000b4b4
    b450:	andeq	fp, r0, r8, lsr #8
    b454:	andeq	fp, r0, r4, asr #11
    b458:	ldrdeq	sl, [r0], -r0
    b45c:	andeq	fp, r0, ip, ror r3
    b460:	andeq	fp, r0, r0, lsl #29
    b464:	muleq	r0, r8, r1
    b468:	strdeq	fp, [r0], -r0
    b46c:	andeq	fp, r0, ip, ror #26
    b470:	andeq	sp, r0, ip, lsr #1
    b474:			; <UNDEFINED> instruction: 0x0000cfb8
    b478:	andeq	fp, r0, ip, lsl #25
    b47c:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    b480:	andeq	ip, r0, r4, lsl pc
    b484:	andeq	ip, r0, r8, lsr #29
    b488:	muleq	r0, r4, sp
    b48c:	andeq	ip, r0, r0, ror #23
    b490:	andeq	ip, r0, r0, ror #21
    b494:	andeq	ip, r0, r8, ror #22
    b498:	andeq	ip, r0, r4, asr sl
    b49c:	muleq	r0, r4, r9
    b4a0:	ldrdeq	ip, [r0], -r0
    b4a4:	andeq	ip, r0, ip, lsl #18
    b4a8:	andeq	ip, r0, r0, lsl #17
    b4ac:	andeq	sp, r0, r4, asr #13
    b4b0:	andeq	ip, r0, r8, lsl #23
    b4b4:	andeq	ip, r0, r8, asr #29
    b4b8:	andeq	sp, r0, r8, ror #11
    b4bc:	andeq	sp, r0, r0, ror r5
    b4c0:	muleq	r0, r0, r4
    b4c4:	andeq	sp, r0, ip, lsl #6
    b4c8:	andeq	sp, r0, r0, ror r4
    b4cc:	andeq	sp, r0, ip, ror #4
    b4d0:	andeq	sp, r0, r8, lsl #4
    b4d4:	andeq	sp, r0, r8, lsl r1
    b4d8:	andeq	sp, r0, ip, asr #2
    b4dc:	andeq	sp, r0, r8, lsr #1
    b4e0:	andeq	sp, r0, ip, lsr #32
    b4e4:	strdeq	sp, [r0], -r0
    b4e8:	andeq	sp, r0, ip, ror r2
    b4ec:	andeq	ip, r0, ip, lsl #31
    b4f0:	andeq	sp, r0, r0, lsl #4
    b4f4:	andeq	ip, r0, r8, lsr sl
    b4f8:	andeq	r8, r0, r8
    b4fc:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    b500:	andeq	ip, r0, r0, lsr #17
    b504:	strdeq	r8, [r0], -ip
    b508:	andeq	ip, r0, r8, lsr #17
    b50c:	andeq	ip, r0, r8, ror #9
    b510:	andeq	ip, r0, r0, ror #19
    b514:	andeq	sp, r0, ip, ror r1
    b518:	andeq	ip, r0, r0, ror #29
    b51c:			; <UNDEFINED> instruction: 0x0000d1bc
    b520:	strdeq	sp, [r0], -r4
    b524:	andeq	ip, r0, r4, lsl pc
    b528:	andeq	ip, r0, r0, asr pc
    b52c:	strdeq	ip, [r0], -r8
    b530:	andeq	ip, r0, r8, ror pc
    b534:	andeq	sp, r0, r8, lsr #32
    b538:	andeq	sp, r0, r4, ror r0
    b53c:	andeq	sp, r0, r0, asr #4
    b540:	strheq	sp, [r0], -r0
    b544:	ldrdeq	sp, [r0], -ip
    b548:	andeq	sp, r0, r4, lsl #5
    b54c:			; <UNDEFINED> instruction: 0x0000d2bc
    b550:	andeq	ip, r0, r4, lsl #23
    b554:	andeq	ip, r0, r4, lsl r8
    b558:	ldrdeq	sp, [r0], -r0
    b55c:	andeq	ip, r0, ip, asr r4
    b560:			; <UNDEFINED> instruction: 0x0000c4b0
    b564:	andeq	ip, r0, r8, lsr r5
    b568:	strdeq	ip, [r0], -r4
    b56c:	andeq	ip, r0, r0, ror #10
    b570:	andeq	ip, r0, ip, lsr r6
    b574:	andeq	ip, r0, ip, lsr #11
    b578:	andeq	ip, r0, r0, ror #12
    b57c:	andeq	ip, r0, r8, lsl #16
    b580:	andeq	ip, r0, r4, asr #17
    b584:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    b588:	andeq	ip, r0, r4, lsr #19
    b58c:	andeq	fp, r0, ip, lsl r6
    b590:	andeq	ip, r0, r0, lsr r9
    b594:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    b598:	andeq	fp, r0, r8, asr r6
    b59c:	muleq	r0, r0, r6
    b5a0:	andeq	ip, r0, r8, lsl #20
    b5a4:	ldrdeq	fp, [r0], -r8
    b5a8:	andeq	sl, r0, r4, lsl #23
    b5ac:			; <UNDEFINED> instruction: 0x00009eb0
    b5b0:	andeq	sl, r0, r4, ror sp
    b5b4:	andeq	sl, r0, ip, lsr #23
    b5b8:	andeq	sl, r0, r4, lsl #24
    b5bc:	andeq	sl, r0, r0, lsr #25
    b5c0:	andeq	sl, r0, ip, asr ip
    b5c4:	andeq	sl, r0, r8, ror #25
    b5c8:	andeq	fp, r0, ip, ror r7
    b5cc:			; <UNDEFINED> instruction: 0x0000c5bc
    b5d0:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    b5d4:	strdeq	ip, [r0], -r8
    b5d8:	andeq	fp, r0, r0, lsl fp
    b5dc:	andeq	fp, r0, r8, lsr r8
    b5e0:	andeq	fp, r0, r0, asr fp
    b5e4:	andeq	fp, r0, r0, lsl #23
    b5e8:	andeq	fp, r0, r4, ror #16
    b5ec:	muleq	r0, r8, r8
    b5f0:	andeq	fp, r0, r4, lsr r9
    b5f4:	andeq	fp, r0, r8, asr #17
    b5f8:	andeq	fp, r0, ip, lsl #19
    b5fc:	andeq	fp, r0, ip, asr #19
    b600:	strdeq	fp, [r0], -r8
    b604:	andeq	fp, r0, r4, lsr sl
    b608:	andeq	fp, r0, r4, ror #22
    b60c:	andeq	fp, r0, r8, lsr ip
    b610:	andeq	fp, r0, ip, ror ip
    b614:	andeq	fp, r0, r4, lsr #4
    b618:			; <UNDEFINED> instruction: 0x0000b3b8
    b61c:	andeq	fp, r0, r0, asr r2
    b620:	andeq	fp, r0, ip, ror r2
    b624:	strdeq	fp, [r0], -r4
    b628:	muleq	r0, r8, r2
    b62c:	andeq	fp, r0, r8, lsr r3
    b630:	andeq	fp, r0, r8, lsl #11
    b634:	andeq	fp, r0, r0, ror #24
    b638:	andeq	fp, r0, r0, ror #7
    b63c:			; <UNDEFINED> instruction: 0x0000b5b8
    b640:	andeq	ip, r0, r4, ror r8
    b644:	andeq	ip, r0, r4, lsl r9
    b648:	andeq	ip, r0, r0, asr #18
    b64c:	andeq	ip, r0, r8, ror #19
    b650:	muleq	r0, r4, r9
    b654:	andeq	ip, r0, r8, lsr #20
    b658:	andeq	ip, r0, r8, ror sl
    b65c:			; <UNDEFINED> instruction: 0x0000cabc
    b660:			; <UNDEFINED> instruction: 0x0000c5b4
    b664:	muleq	r0, r4, lr
    b668:	andeq	fp, r0, r4, lsl ip
    b66c:	andeq	fp, r0, r8, asr #29
    b670:	andeq	fp, r0, r0, lsl #30
    b674:	andeq	fp, r0, ip, lsr #24
    b678:	andeq	fp, r0, ip, ror ip
    b67c:	andeq	fp, r0, r8, lsl sp
    b680:			; <UNDEFINED> instruction: 0x0000b4bc
    b684:	andeq	fp, r0, ip, lsr r5
    b688:	andeq	fp, r0, ip, ror r5
    b68c:	andeq	fp, r0, r8, lsl r7
    b690:			; <UNDEFINED> instruction: 0x0000b5bc
    b694:			; <UNDEFINED> instruction: 0x0000b6b0
    b698:	andeq	fp, r0, r8, asr #14
    b69c:	muleq	r0, r0, r7
    b6a0:	andeq	r9, r0, r4, lsl lr
    b6a4:			; <UNDEFINED> instruction: 0x0000b7b8
    b6a8:	andeq	sl, r0, r0, asr sp
    b6ac:	andeq	r9, r0, r4, asr lr
    b6b0:	muleq	r0, ip, lr
    b6b4:	andeq	r9, r0, ip, lsl pc
    b6b8:	ldrdeq	r9, [r0], -ip
    b6bc:	andeq	r9, r0, r8, asr #30
    b6c0:	andeq	sl, r0, ip, ror r5
    b6c4:	andeq	sl, r0, r0, asr #5
    b6c8:	andeq	sl, r0, r4, asr #11
    b6cc:	andeq	sl, r0, r4, lsl #12
    b6d0:	strdeq	sl, [r0], -r4
    b6d4:	andeq	sl, r0, r8, asr #6
    b6d8:	strdeq	sl, [r0], -ip
    b6dc:	andeq	sl, r0, ip, ror r3
    b6e0:	andeq	sl, r0, r8, asr r4
    b6e4:	muleq	r0, r4, r4
    b6e8:	andeq	sl, r0, ip, asr #12
    b6ec:	andeq	sl, r0, r4, asr #9
    b6f0:	ldrdeq	sl, [r0], -ip
    b6f4:	andeq	sl, r0, ip, lsl #13
    b6f8:			; <UNDEFINED> instruction: 0x0000a6bc
    b6fc:	ldrdeq	r9, [r0], -ip
    b700:	strdeq	sl, [r0], -ip
    b704:	andeq	r9, r0, r4, lsl pc
    b708:			; <UNDEFINED> instruction: 0x000085b8
    b70c:	andeq	r8, r0, ip, lsr r3
    b710:	strdeq	r8, [r0], -r0
    b714:	andeq	r8, r0, r0, asr #12
    b718:	andeq	r8, r0, r8, asr r3
    b71c:	andeq	r8, r0, ip, ror r3
    b720:	andeq	r8, r0, r8, lsr #8
    b724:			; <UNDEFINED> instruction: 0x000083b0
    b728:	andeq	r8, r0, ip, lsl #9
    b72c:	andeq	r8, r0, r8, asr #9
    b730:			; <UNDEFINED> instruction: 0x000086b8
    b734:	strdeq	r8, [r0], -r0
    b738:	andeq	r8, r0, ip, lsr #12
    b73c:	andeq	r8, r0, r4, ror #13
    b740:	andeq	r8, r0, r8, lsl r7
    b744:	muleq	r0, r0, ip
    b748:	andeq	r7, r0, r0, lsl #30
    b74c:	andeq	r7, r0, r8, asr #25
    b750:	strdeq	r7, [r0], -ip
    b754:	andeq	r7, r0, r0, lsl lr
    b758:	muleq	r0, r0, sp
    b75c:	andeq	r7, r0, r0, asr lr
    b760:	andeq	r9, r0, r8, ror #3
    b764:	andeq	r9, r0, r0, lsr #4
    b768:			; <UNDEFINED> instruction: 0x000092b4
    b76c:	andeq	r8, r0, r0, ror ip
    b770:	andeq	r9, r0, r4, asr r2
    b774:	andeq	r9, r0, r8, lsl #6
    b778:	muleq	r0, r8, ip
    b77c:	andeq	r8, r0, r0, ror #25
    b780:	andeq	r8, r0, r8, asr sp
    b784:	andeq	r8, r0, r4, lsl sp
    b788:	muleq	r0, ip, sp
    b78c:	andeq	r8, r0, r8, ror #27
    b790:	andeq	r9, r0, ip, ror #5
    b794:	andeq	r8, r0, r4, lsl #28
    b798:	andeq	r9, r0, r8, asr r8
    b79c:	andeq	r9, r0, r8, ror #11
    b7a0:	andeq	r9, r0, r4, lsr #17
    b7a4:	andeq	r9, r0, r4, ror #17
    b7a8:	andeq	r9, r0, r0, lsl #12
    b7ac:	andeq	r9, r0, ip, asr #12
    b7b0:	andeq	r9, r0, r8, asr #13
    b7b4:	andeq	r9, r0, r0, ror r6
    b7b8:	andeq	r9, r0, r4, lsl #14
    b7bc:	andeq	r9, r0, r0, ror #14
    b7c0:	andeq	r9, r0, ip, asr r9
    b7c4:	andeq	r9, r0, r8, lsl #15
    b7c8:	ldrdeq	r9, [r0], -r4
    b7cc:	andeq	r9, r0, ip, ror r9
    b7d0:	strdeq	r9, [r0], -r8
    b7d4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b7d8:			; <UNDEFINED> instruction: 0x000092b0
    b7dc:	andeq	r9, r0, r8, lsl #20
    b7e0:	andeq	r8, r0, r0, lsr pc
    b7e4:	andeq	r8, r0, r4, asr pc
    b7e8:	muleq	r0, r4, sp
    b7ec:	andeq	r6, r0, r0, lsr pc
    b7f0:	andeq	r8, r0, r8, asr #27
    b7f4:	andeq	r8, r0, ip, ror #27
    b7f8:	andeq	r6, r0, ip, lsr pc
    b7fc:	andeq	r6, r0, ip, ror #30
    b800:	andeq	r7, r0, r0, lsr #32
    b804:	andeq	r6, r0, r4, lsr #31
    b808:	andeq	r7, r0, r8, asr r0
    b80c:	andeq	r8, r0, r0, lsl lr
    b810:			; <UNDEFINED> instruction: 0x000091b0
    b814:	andeq	r9, r0, ip, lsr r2
    b818:	muleq	r0, r4, r2
    b81c:	andeq	r9, r0, r4, lsr #6
    b820:	andeq	r9, r0, r4, asr #5
    b824:	andeq	r9, r0, ip, asr r3
    b828:			; <UNDEFINED> instruction: 0x000093b0
    b82c:	andeq	r9, r0, r0, ror #7
    b830:	andeq	r8, r0, r8, asr #29
    b834:	andeq	r8, r0, r0, asr r7
    b838:	strdeq	r8, [r0], -r0
    b83c:	andeq	r8, r0, ip, lsl #15
    b840:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b844:	andeq	r8, r0, r0, lsr r5
    b848:	andeq	r8, r0, ip, ror #10
    b84c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b850:	andeq	r8, r0, r8, lsr #11
    b854:	andeq	r8, r0, r0, asr #12
    b858:	andeq	r8, r0, ip, ror #12
    b85c:	andeq	r8, r0, r0, lsr r8
    b860:	muleq	r0, ip, r6
    b864:	andeq	r8, r0, r8, asr #15
    b868:	andeq	r8, r0, r8, ror r8
    b86c:	andeq	r8, r0, r4, asr #17
    b870:	andeq	r6, r0, r4, ror pc
    b874:	andeq	r8, r0, r8, lsl #18
    b878:	andeq	r7, r0, r8, lsl ip
    b87c:	andeq	r8, r0, r4, lsr #7
    b880:	muleq	r0, r8, fp
    b884:	andeq	r7, r0, ip, lsr ip
    b888:	muleq	r0, r0, ip
    b88c:	andeq	r7, r0, r4, lsr sp
    b890:	andeq	r7, r0, r4, asr #25
    b894:	andeq	r7, r0, r8, ror #26
    b898:	andeq	r7, r0, ip, lsr #11
    b89c:			; <UNDEFINED> instruction: 0x000072bc
    b8a0:	andeq	r7, r0, r8, ror #11
    b8a4:	andeq	r7, r0, r4, lsr #12
    b8a8:	andeq	r7, r0, r4, ror #5
    b8ac:	andeq	r7, r0, r4, lsr r3
    b8b0:	ldrdeq	r7, [r0], -r8
    b8b4:	andeq	r7, r0, ip, ror r3
    b8b8:	andeq	r7, r0, ip, lsl r4
    b8bc:	andeq	r7, r0, ip, ror r4
    b8c0:	muleq	r0, r0, r6
    b8c4:	ldrdeq	r7, [r0], -ip
    b8c8:	andeq	r7, r0, r4, asr #26
    b8cc:	andeq	r7, r0, r4, lsl r6
    b8d0:			; <UNDEFINED> instruction: 0x000076bc
    b8d4:	strdeq	r7, [r0], -r8
    b8d8:	andeq	r6, r0, r4, asr #29
    b8dc:	andeq	r7, r0, r8, asr #14
    b8e0:	andeq	r7, r0, ip, asr #26
    b8e4:	andeq	r6, r0, r8, ror #28
    b8e8:	andeq	r6, r0, r4, lsl #30
    b8ec:	andeq	r6, r0, r8, lsr pc
    b8f0:	ldrdeq	r6, [r0], -r0
    b8f4:	andeq	r6, r0, r8, ror pc
    b8f8:	andeq	r7, r0, ip, lsr #32
    b8fc:	andeq	r7, r0, r4, lsl #1
    b900:	andeq	r9, r0, ip, lsr #23
    b904:	andeq	r9, r0, r4, lsl #23
    b908:	andeq	r7, r0, ip, lsr r0
    b90c:	andeq	r6, r0, r0, ror #28
    b910:	andeq	r6, r0, r8, asr #31
    b914:	ldrdeq	r7, [r0], -r0
    b918:	andeq	r7, r0, ip, ror #20
    b91c:	andeq	r7, r0, r0, lsl r4
    b920:	andeq	r7, r0, r4, lsr #21
    b924:	andeq	r7, r0, ip, asr #22
    b928:	strdeq	r7, [r0], -r4
    b92c:	muleq	r0, r4, fp
    b930:	andeq	r6, r0, r0, ror #28
    b934:	strdeq	r6, [r0], -r4
    b938:	muleq	r0, r8, lr
    b93c:	andeq	r7, r0, ip, lsl #24
    b940:	andeq	r6, r0, r8, asr #26
    b944:	andeq	r7, r0, r0, asr r1
    b948:	andeq	r7, r0, r0, lsl #4
    b94c:	andeq	r7, r0, r0, lsr #3
    b950:	andeq	r7, r0, r8, asr #7
    b954:	andeq	r7, r0, r0, ror r0
    b958:	strdeq	r7, [r0], -r8
    b95c:	andeq	r6, r0, r8, lsr #26
    b960:	andeq	r7, r0, ip, ror r5
    b964:	andeq	r7, r0, r8, lsr #8
    b968:	andeq	r7, r0, r0, lsr #10
    b96c:	andeq	r7, r0, ip, asr #9
    b970:	andeq	r7, r0, ip, ror r0
    b974:	andeq	r7, r0, r4, asr #3
    b978:	andeq	r7, r0, r8, lsl fp
    b97c:	andeq	r7, r0, r0, lsr #4
    b980:	andeq	r7, r0, r4, lsr #8
    b984:	andeq	r7, r0, r4, lsl #5
    b988:	andeq	r8, r0, r8, lsl #6
    b98c:	andeq	r8, r0, ip, lsr #8
    b990:	andeq	r8, r0, r4, ror #9
    b994:	andeq	r8, r0, ip, ror #20
    b998:	andeq	r8, r0, r0, lsr #5
    b99c:	andeq	r8, r0, r0, ror #8
    b9a0:	andeq	r8, r0, r8, lsr #3
    b9a4:	andeq	r8, r0, r4, ror #3
    b9a8:	andeq	r8, r0, r8, lsr #4
    b9ac:	andeq	r8, r0, r0, ror #5
    b9b0:	andeq	r8, r0, ip, asr r0
    b9b4:	andeq	r8, r0, r0, lsl r3
    b9b8:	andeq	r8, r0, r8, lsl #2
    b9bc:	andeq	r8, r0, r0, asr r3
    b9c0:	strheq	r8, [r0], -r4
    b9c4:	andeq	r8, r0, r4, ror sp
    b9c8:	andeq	r8, r0, r0, lsl #25
    b9cc:	muleq	r0, ip, lr
    b9d0:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b9d4:	muleq	r0, ip, sp
    b9d8:	ldrdeq	r8, [r0], -r4
    b9dc:	andeq	r8, r0, r0, lsl lr
    b9e0:	ldrdeq	r7, [r0], -r0
    b9e4:	andeq	r8, r0, ip, asr #8
    b9e8:	andeq	r7, r0, r4, lsr pc
    b9ec:	andeq	r6, r0, r0, ror #21
    b9f0:	andeq	r8, r0, r0, ror #8
    b9f4:	andeq	r7, r0, r8, ror #27
    b9f8:	andeq	r7, r0, r0, asr lr
    b9fc:	muleq	r0, r0, ip
    ba00:			; <UNDEFINED> instruction: 0x00007abc
    ba04:	andeq	r7, r0, r0, ror fp
    ba08:	strdeq	r7, [r0], -r4
    ba0c:	andeq	r7, r0, r4, lsl ip
    ba10:	andeq	r7, r0, ip, lsr #23
    ba14:	andeq	r9, r0, r8, ror #21
    ba18:	andeq	r9, r0, ip, lsr #25
    ba1c:	muleq	r0, r0, sl
    ba20:	andeq	r9, r0, ip, lsl #22
    ba24:	andeq	r7, r0, r8, lsr #20
    ba28:	andeq	r7, r0, r4, asr #24
    ba2c:	andeq	r7, r0, ip, asr #19
    ba30:	ldrdeq	r7, [r0], -r4
    ba34:	andeq	r7, r0, r0, ror ip
    ba38:	andeq	r9, r0, r0, ror r0
    ba3c:			; <UNDEFINED> instruction: 0x000085bc
    ba40:	andeq	r8, r0, ip, asr #21
    ba44:	andeq	r8, r0, r0, ror #11
    ba48:	andeq	r8, r0, ip, ror #8
    ba4c:	andeq	r8, r0, r4, ror #9
    ba50:	muleq	r0, r0, r4
    ba54:	strdeq	r8, [r0], -r0
    ba58:	andeq	r8, r0, r0, lsr #10
    ba5c:	ldrdeq	r7, [r0], -ip
    ba60:	andeq	r7, r0, ip, lsr r4
    ba64:	andeq	r7, r0, r4, lsr #10
    ba68:			; <UNDEFINED> instruction: 0x000088b8
    ba6c:	andeq	r7, r0, r0, ror #10
    ba70:	andeq	r7, r0, r0, asr #6
    ba74:	andeq	r7, r0, r0, ror r3
    ba78:	andeq	r7, r0, ip, lsl sp
    ba7c:	andeq	r7, r0, r0, asr sp
    ba80:	andeq	r7, r0, r0, asr #5
    ba84:	ldrdeq	r6, [r0], -r4
    ba88:	andeq	r8, r0, r4, ror r6
    ba8c:	andeq	r6, r0, ip, ror #16
    ba90:	andeq	r6, r0, r8, ror #15
    ba94:	andeq	r8, r0, ip, lsr #21
    ba98:	strdeq	r8, [r0], -r4
    ba9c:	andeq	r6, r0, r0, ror r7
    baa0:	andeq	r6, r0, ip, lsr r7
    baa4:	andeq	r8, r0, ip, asr #26
    baa8:	andeq	r8, r0, ip, asr #27
    baac:	andeq	r8, r0, r8, ror sp
    bab0:	andeq	r8, r0, ip, asr #30
    bab4:	andeq	r8, r0, ip, lsl #25
    bab8:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    babc:	andeq	r8, r0, r4, lsl #16
    bac0:	muleq	r0, ip, r8
    bac4:	andeq	r8, r0, r8, lsl #18
    bac8:	andeq	r8, r0, r4, asr r2
    bacc:	andeq	r8, r0, r8, lsr #16
    bad0:	andeq	r8, r0, ip, asr #9
    bad4:	andeq	fp, r0, r0, lsl #21
    bad8:	strdeq	r8, [r0], -r4
    badc:	andeq	r8, r0, r8, lsr #12
    bae0:	andeq	r8, r0, r4, asr r6
    bae4:	ldrdeq	r8, [r0], -ip
    bae8:	andeq	r8, r0, ip, asr pc
    baec:	andeq	r8, r0, r0, lsr #31
    baf0:	strdeq	r8, [r0], -r0
    baf4:	andeq	r8, r0, r4, asr #18
    baf8:	muleq	r0, r8, r0
    bafc:	andeq	r9, r0, ip, asr #32
    bb00:	andeq	r8, r0, r8, ror #10
    bb04:	ldrdeq	r8, [r0], -ip
    bb08:	andeq	r8, r0, r4, lsl #26
    bb0c:	andeq	r8, r0, r8, lsr #31
    bb10:	andeq	fp, r0, r0, asr #11
    bb14:	andeq	fp, r0, r0, ror r6
    bb18:	strdeq	fp, [r0], -r0
    bb1c:	andeq	fp, r0, r0, lsl r5
    bb20:	andeq	fp, r0, r8, asr #18
    bb24:	ldrdeq	fp, [r0], -r4
    bb28:	andeq	fp, r0, ip, lsl #18
    bb2c:	andeq	fp, r0, r4, asr #3
    bb30:	andeq	sl, r0, ip, asr lr
    bb34:	andeq	fp, r0, r0, asr r6
    bb38:	andeq	fp, r0, r4, lsl #10
    bb3c:	muleq	r0, r0, r5
    bb40:	muleq	r0, r4, r6
    bb44:	andeq	fp, r0, r0, lsl #16
    bb48:			; <UNDEFINED> instruction: 0x0000b7b4
    bb4c:	andeq	sl, r0, r8, lsl #31
    bb50:	andeq	fp, r0, ip, lsr #32
    bb54:	andeq	fp, r0, r0, ror r0
    bb58:	muleq	r0, ip, ip
    bb5c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    bb60:	andeq	sl, r0, r0, asr ip
    bb64:	andeq	sl, r0, ip, ror ip
    bb68:	muleq	r0, r8, fp
    bb6c:	andeq	sl, r0, ip, lsl lr
    bb70:	ldrdeq	sl, [r0], -r8
    bb74:	andeq	sl, r0, r8, asr #26
    bb78:	andeq	sl, r0, r8, lsl #19
    bb7c:	andeq	r6, r0, r4, asr #18
    bb80:	muleq	r0, r0, r3
    bb84:	andeq	fp, r0, r0, ror #12
    bb88:	andeq	sl, r0, r0, ror #28
    bb8c:	andeq	fp, r0, r0, lsl #12
    bb90:			; <UNDEFINED> instruction: 0x0000a2b0
    bb94:	andeq	sl, r0, r4, lsl #7
    bb98:	andeq	sl, r0, r8, lsl #1
    bb9c:	andeq	r9, r0, r0, ror r9
    bba0:	andeq	r9, r0, ip, lsl #22
    bba4:	andeq	sl, r0, r4, lsr #7
    bba8:	andeq	sl, r0, ip, lsr #1
    bbac:			; <UNDEFINED> instruction: 0x0000a2bc
    bbb0:	andeq	sl, r0, r8, lsl #2
    bbb4:	andeq	r9, r0, ip, lsr #24
    bbb8:	andeq	sl, r0, r8, lsr #31
    bbbc:	andeq	r9, r0, ip, ror #24
    bbc0:	andeq	r9, r0, ip, lsl r1
    bbc4:			; <UNDEFINED> instruction: 0x00009bb0
    bbc8:	andeq	sl, r0, r8, ror #17
    bbcc:	andeq	sl, r0, r8, asr #18
    bbd0:	ldrdeq	sl, [r0], -r4
    bbd4:	ldr	r0, [pc, #-1372]	; b680 <bt_compidtostr@@Base+0x3640>
    bbd8:	add	r0, pc, r0
    bbdc:	bx	lr
    bbe0:	ldr	r0, [pc, #-1380]	; b684 <bt_compidtostr@@Base+0x3644>
    bbe4:	add	r0, pc, r0
    bbe8:	bx	lr
    bbec:	ldr	r0, [pc, #-1388]	; b688 <bt_compidtostr@@Base+0x3648>
    bbf0:	add	r0, pc, r0
    bbf4:	bx	lr
    bbf8:	ldr	r0, [pc, #-1396]	; b68c <bt_compidtostr@@Base+0x364c>
    bbfc:	add	r0, pc, r0
    bc00:	bx	lr
    bc04:	ldr	r0, [pc, #-1404]	; b690 <bt_compidtostr@@Base+0x3650>
    bc08:	add	r0, pc, r0
    bc0c:	bx	lr
    bc10:	ldr	r0, [pc, #-1412]	; b694 <bt_compidtostr@@Base+0x3654>
    bc14:	add	r0, pc, r0
    bc18:	bx	lr
    bc1c:	ldr	r0, [pc, #-1420]	; b698 <bt_compidtostr@@Base+0x3658>
    bc20:	add	r0, pc, r0
    bc24:	bx	lr
    bc28:	ldr	r0, [pc, #-1428]	; b69c <bt_compidtostr@@Base+0x365c>
    bc2c:	add	r0, pc, r0
    bc30:	bx	lr
    bc34:	ldr	r0, [pc, #-1436]	; b6a0 <bt_compidtostr@@Base+0x3660>
    bc38:	add	r0, pc, r0
    bc3c:	bx	lr
    bc40:	ldr	r0, [pc, #-1444]	; b6a4 <bt_compidtostr@@Base+0x3664>
    bc44:	add	r0, pc, r0
    bc48:	bx	lr
    bc4c:	ldr	r0, [pc, #-1452]	; b6a8 <bt_compidtostr@@Base+0x3668>
    bc50:	add	r0, pc, r0
    bc54:	bx	lr
    bc58:	ldr	r0, [pc, #-1460]	; b6ac <bt_compidtostr@@Base+0x366c>
    bc5c:	add	r0, pc, r0
    bc60:	bx	lr
    bc64:	ldr	r0, [pc, #-1468]	; b6b0 <bt_compidtostr@@Base+0x3670>
    bc68:	add	r0, pc, r0
    bc6c:	bx	lr
    bc70:	ldr	r0, [pc, #-1476]	; b6b4 <bt_compidtostr@@Base+0x3674>
    bc74:	add	r0, pc, r0
    bc78:	bx	lr
    bc7c:	ldr	r0, [pc, #-1484]	; b6b8 <bt_compidtostr@@Base+0x3678>
    bc80:	add	r0, pc, r0
    bc84:	bx	lr
    bc88:	ldr	r0, [pc, #-1492]	; b6bc <bt_compidtostr@@Base+0x367c>
    bc8c:	add	r0, pc, r0
    bc90:	bx	lr
    bc94:	ldr	r0, [pc, #-1500]	; b6c0 <bt_compidtostr@@Base+0x3680>
    bc98:	add	r0, pc, r0
    bc9c:	bx	lr
    bca0:	ldr	r0, [pc, #-1508]	; b6c4 <bt_compidtostr@@Base+0x3684>
    bca4:	add	r0, pc, r0
    bca8:	bx	lr
    bcac:	ldr	r0, [pc, #-1516]	; b6c8 <bt_compidtostr@@Base+0x3688>
    bcb0:	add	r0, pc, r0
    bcb4:	bx	lr
    bcb8:	ldr	r0, [pc, #-1524]	; b6cc <bt_compidtostr@@Base+0x368c>
    bcbc:	add	r0, pc, r0
    bcc0:	bx	lr
    bcc4:	ldr	r0, [pc, #-1532]	; b6d0 <bt_compidtostr@@Base+0x3690>
    bcc8:	add	r0, pc, r0
    bccc:	bx	lr
    bcd0:	ldr	r0, [pc, #-1540]	; b6d4 <bt_compidtostr@@Base+0x3694>
    bcd4:	add	r0, pc, r0
    bcd8:	bx	lr
    bcdc:	ldr	r0, [pc, #-1548]	; b6d8 <bt_compidtostr@@Base+0x3698>
    bce0:	add	r0, pc, r0
    bce4:	bx	lr
    bce8:	ldr	r0, [pc, #-1556]	; b6dc <bt_compidtostr@@Base+0x369c>
    bcec:	add	r0, pc, r0
    bcf0:	bx	lr
    bcf4:	ldr	r0, [pc, #-1564]	; b6e0 <bt_compidtostr@@Base+0x36a0>
    bcf8:	add	r0, pc, r0
    bcfc:	bx	lr
    bd00:	ldr	r0, [pc, #-1572]	; b6e4 <bt_compidtostr@@Base+0x36a4>
    bd04:	add	r0, pc, r0
    bd08:	bx	lr
    bd0c:	ldr	r0, [pc, #-1580]	; b6e8 <bt_compidtostr@@Base+0x36a8>
    bd10:	add	r0, pc, r0
    bd14:	bx	lr
    bd18:	ldr	r0, [pc, #-1588]	; b6ec <bt_compidtostr@@Base+0x36ac>
    bd1c:	add	r0, pc, r0
    bd20:	bx	lr
    bd24:	ldr	r0, [pc, #-1596]	; b6f0 <bt_compidtostr@@Base+0x36b0>
    bd28:	add	r0, pc, r0
    bd2c:	bx	lr
    bd30:	ldr	r0, [pc, #-1604]	; b6f4 <bt_compidtostr@@Base+0x36b4>
    bd34:	add	r0, pc, r0
    bd38:	bx	lr
    bd3c:	ldr	r0, [pc, #-1612]	; b6f8 <bt_compidtostr@@Base+0x36b8>
    bd40:	add	r0, pc, r0
    bd44:	bx	lr
    bd48:	ldr	r0, [pc, #-1620]	; b6fc <bt_compidtostr@@Base+0x36bc>
    bd4c:	add	r0, pc, r0
    bd50:	bx	lr
    bd54:	ldr	r0, [pc, #-1628]	; b700 <bt_compidtostr@@Base+0x36c0>
    bd58:	add	r0, pc, r0
    bd5c:	bx	lr
    bd60:	ldr	r0, [pc, #-1636]	; b704 <bt_compidtostr@@Base+0x36c4>
    bd64:	add	r0, pc, r0
    bd68:	bx	lr
    bd6c:	ldr	r0, [pc, #-1644]	; b708 <bt_compidtostr@@Base+0x36c8>
    bd70:	add	r0, pc, r0
    bd74:	bx	lr
    bd78:	ldr	r0, [pc, #-1652]	; b70c <bt_compidtostr@@Base+0x36cc>
    bd7c:	add	r0, pc, r0
    bd80:	bx	lr
    bd84:	ldr	r0, [pc, #-1660]	; b710 <bt_compidtostr@@Base+0x36d0>
    bd88:	add	r0, pc, r0
    bd8c:	bx	lr
    bd90:	ldr	r0, [pc, #-1668]	; b714 <bt_compidtostr@@Base+0x36d4>
    bd94:	add	r0, pc, r0
    bd98:	bx	lr
    bd9c:	ldr	r0, [pc, #-1676]	; b718 <bt_compidtostr@@Base+0x36d8>
    bda0:	add	r0, pc, r0
    bda4:	bx	lr
    bda8:	ldr	r0, [pc, #-1684]	; b71c <bt_compidtostr@@Base+0x36dc>
    bdac:	add	r0, pc, r0
    bdb0:	bx	lr
    bdb4:	ldr	r0, [pc, #-1692]	; b720 <bt_compidtostr@@Base+0x36e0>
    bdb8:	add	r0, pc, r0
    bdbc:	bx	lr
    bdc0:	ldr	r0, [pc, #-1700]	; b724 <bt_compidtostr@@Base+0x36e4>
    bdc4:	add	r0, pc, r0
    bdc8:	bx	lr
    bdcc:	ldr	r0, [pc, #-1708]	; b728 <bt_compidtostr@@Base+0x36e8>
    bdd0:	add	r0, pc, r0
    bdd4:	bx	lr
    bdd8:	ldr	r0, [pc, #-1716]	; b72c <bt_compidtostr@@Base+0x36ec>
    bddc:	add	r0, pc, r0
    bde0:	bx	lr
    bde4:	ldr	r0, [pc, #-1724]	; b730 <bt_compidtostr@@Base+0x36f0>
    bde8:	add	r0, pc, r0
    bdec:	bx	lr
    bdf0:	ldr	r0, [pc, #-1732]	; b734 <bt_compidtostr@@Base+0x36f4>
    bdf4:	add	r0, pc, r0
    bdf8:	bx	lr
    bdfc:	ldr	r0, [pc, #-1740]	; b738 <bt_compidtostr@@Base+0x36f8>
    be00:	add	r0, pc, r0
    be04:	bx	lr
    be08:	ldr	r0, [pc, #-1748]	; b73c <bt_compidtostr@@Base+0x36fc>
    be0c:	add	r0, pc, r0
    be10:	bx	lr
    be14:	ldr	r0, [pc, #-1756]	; b740 <bt_compidtostr@@Base+0x3700>
    be18:	add	r0, pc, r0
    be1c:	bx	lr
    be20:	ldr	r0, [pc, #-1764]	; b744 <bt_compidtostr@@Base+0x3704>
    be24:	add	r0, pc, r0
    be28:	bx	lr
    be2c:	ldr	r0, [pc, #-1772]	; b748 <bt_compidtostr@@Base+0x3708>
    be30:	add	r0, pc, r0
    be34:	bx	lr
    be38:	ldr	r0, [pc, #-1780]	; b74c <bt_compidtostr@@Base+0x370c>
    be3c:	add	r0, pc, r0
    be40:	bx	lr
    be44:	ldr	r0, [pc, #-1788]	; b750 <bt_compidtostr@@Base+0x3710>
    be48:	add	r0, pc, r0
    be4c:	bx	lr
    be50:	ldr	r0, [pc, #-1796]	; b754 <bt_compidtostr@@Base+0x3714>
    be54:	add	r0, pc, r0
    be58:	bx	lr
    be5c:	ldr	r0, [pc, #-1804]	; b758 <bt_compidtostr@@Base+0x3718>
    be60:	add	r0, pc, r0
    be64:	bx	lr
    be68:	ldr	r0, [pc, #-1812]	; b75c <bt_compidtostr@@Base+0x371c>
    be6c:	add	r0, pc, r0
    be70:	bx	lr
    be74:	ldr	r0, [pc, #-1820]	; b760 <bt_compidtostr@@Base+0x3720>
    be78:	add	r0, pc, r0
    be7c:	bx	lr
    be80:	ldr	r0, [pc, #-1828]	; b764 <bt_compidtostr@@Base+0x3724>
    be84:	add	r0, pc, r0
    be88:	bx	lr
    be8c:	ldr	r0, [pc, #-1836]	; b768 <bt_compidtostr@@Base+0x3728>
    be90:	add	r0, pc, r0
    be94:	bx	lr
    be98:	ldr	r0, [pc, #-1844]	; b76c <bt_compidtostr@@Base+0x372c>
    be9c:	add	r0, pc, r0
    bea0:	bx	lr
    bea4:	ldr	r0, [pc, #-1852]	; b770 <bt_compidtostr@@Base+0x3730>
    bea8:	add	r0, pc, r0
    beac:	bx	lr
    beb0:	ldr	r0, [pc, #-1860]	; b774 <bt_compidtostr@@Base+0x3734>
    beb4:	add	r0, pc, r0
    beb8:	bx	lr
    bebc:	ldr	r0, [pc, #-1868]	; b778 <bt_compidtostr@@Base+0x3738>
    bec0:	add	r0, pc, r0
    bec4:	bx	lr
    bec8:	ldr	r0, [pc, #-1876]	; b77c <bt_compidtostr@@Base+0x373c>
    becc:	add	r0, pc, r0
    bed0:	bx	lr
    bed4:	ldr	r0, [pc, #-1884]	; b780 <bt_compidtostr@@Base+0x3740>
    bed8:	add	r0, pc, r0
    bedc:	bx	lr
    bee0:	ldr	r0, [pc, #-1892]	; b784 <bt_compidtostr@@Base+0x3744>
    bee4:	add	r0, pc, r0
    bee8:	bx	lr
    beec:	ldr	r0, [pc, #-1900]	; b788 <bt_compidtostr@@Base+0x3748>
    bef0:	add	r0, pc, r0
    bef4:	bx	lr
    bef8:	ldr	r0, [pc, #-1908]	; b78c <bt_compidtostr@@Base+0x374c>
    befc:	add	r0, pc, r0
    bf00:	bx	lr
    bf04:	ldr	r0, [pc, #-1916]	; b790 <bt_compidtostr@@Base+0x3750>
    bf08:	add	r0, pc, r0
    bf0c:	bx	lr
    bf10:	ldr	r0, [pc, #-1924]	; b794 <bt_compidtostr@@Base+0x3754>
    bf14:	add	r0, pc, r0
    bf18:	bx	lr
    bf1c:	ldr	r0, [pc, #-1932]	; b798 <bt_compidtostr@@Base+0x3758>
    bf20:	add	r0, pc, r0
    bf24:	bx	lr
    bf28:	ldr	r0, [pc, #-1940]	; b79c <bt_compidtostr@@Base+0x375c>
    bf2c:	add	r0, pc, r0
    bf30:	bx	lr
    bf34:	ldr	r0, [pc, #-1948]	; b7a0 <bt_compidtostr@@Base+0x3760>
    bf38:	add	r0, pc, r0
    bf3c:	bx	lr
    bf40:	ldr	r0, [pc, #-1956]	; b7a4 <bt_compidtostr@@Base+0x3764>
    bf44:	add	r0, pc, r0
    bf48:	bx	lr
    bf4c:	ldr	r0, [pc, #-1964]	; b7a8 <bt_compidtostr@@Base+0x3768>
    bf50:	add	r0, pc, r0
    bf54:	bx	lr
    bf58:	ldr	r0, [pc, #-1972]	; b7ac <bt_compidtostr@@Base+0x376c>
    bf5c:	add	r0, pc, r0
    bf60:	bx	lr
    bf64:	ldr	r0, [pc, #-1980]	; b7b0 <bt_compidtostr@@Base+0x3770>
    bf68:	add	r0, pc, r0
    bf6c:	bx	lr
    bf70:	ldr	r0, [pc, #-1988]	; b7b4 <bt_compidtostr@@Base+0x3774>
    bf74:	add	r0, pc, r0
    bf78:	bx	lr
    bf7c:	ldr	r0, [pc, #-1996]	; b7b8 <bt_compidtostr@@Base+0x3778>
    bf80:	add	r0, pc, r0
    bf84:	bx	lr
    bf88:	ldr	r0, [pc, #-2004]	; b7bc <bt_compidtostr@@Base+0x377c>
    bf8c:	add	r0, pc, r0
    bf90:	bx	lr
    bf94:	ldr	r0, [pc, #-2012]	; b7c0 <bt_compidtostr@@Base+0x3780>
    bf98:	add	r0, pc, r0
    bf9c:	bx	lr
    bfa0:	ldr	r0, [pc, #-2020]	; b7c4 <bt_compidtostr@@Base+0x3784>
    bfa4:	add	r0, pc, r0
    bfa8:	bx	lr
    bfac:	ldr	r0, [pc, #-2028]	; b7c8 <bt_compidtostr@@Base+0x3788>
    bfb0:	add	r0, pc, r0
    bfb4:	bx	lr
    bfb8:	ldr	r0, [pc, #-2036]	; b7cc <bt_compidtostr@@Base+0x378c>
    bfbc:	add	r0, pc, r0
    bfc0:	bx	lr
    bfc4:	ldr	r0, [pc, #-2044]	; b7d0 <bt_compidtostr@@Base+0x3790>
    bfc8:	add	r0, pc, r0
    bfcc:	bx	lr
    bfd0:	ldr	r0, [pc, #-2052]	; b7d4 <bt_compidtostr@@Base+0x3794>
    bfd4:	add	r0, pc, r0
    bfd8:	bx	lr
    bfdc:	ldr	r0, [pc, #-2060]	; b7d8 <bt_compidtostr@@Base+0x3798>
    bfe0:	add	r0, pc, r0
    bfe4:	bx	lr
    bfe8:	ldr	r0, [pc, #-2068]	; b7dc <bt_compidtostr@@Base+0x379c>
    bfec:	add	r0, pc, r0
    bff0:	bx	lr
    bff4:	ldr	r0, [pc, #-2076]	; b7e0 <bt_compidtostr@@Base+0x37a0>
    bff8:	add	r0, pc, r0
    bffc:	bx	lr
    c000:	ldr	r0, [pc, #-2084]	; b7e4 <bt_compidtostr@@Base+0x37a4>
    c004:	add	r0, pc, r0
    c008:	bx	lr
    c00c:	ldr	r0, [pc, #-2092]	; b7e8 <bt_compidtostr@@Base+0x37a8>
    c010:	add	r0, pc, r0
    c014:	bx	lr
    c018:	ldr	r0, [pc, #-2100]	; b7ec <bt_compidtostr@@Base+0x37ac>
    c01c:	add	r0, pc, r0
    c020:	bx	lr
    c024:	ldr	r0, [pc, #-2108]	; b7f0 <bt_compidtostr@@Base+0x37b0>
    c028:	add	r0, pc, r0
    c02c:	bx	lr
    c030:	ldr	r0, [pc, #-2116]	; b7f4 <bt_compidtostr@@Base+0x37b4>
    c034:	add	r0, pc, r0
    c038:	bx	lr
    c03c:	ldr	r0, [pc, #-2124]	; b7f8 <bt_compidtostr@@Base+0x37b8>
    c040:	add	r0, pc, r0
    c044:	bx	lr
    c048:	ldr	r0, [pc, #-2132]	; b7fc <bt_compidtostr@@Base+0x37bc>
    c04c:	add	r0, pc, r0
    c050:	bx	lr
    c054:	ldr	r0, [pc, #-2140]	; b800 <bt_compidtostr@@Base+0x37c0>
    c058:	add	r0, pc, r0
    c05c:	bx	lr
    c060:	ldr	r0, [pc, #-2148]	; b804 <bt_compidtostr@@Base+0x37c4>
    c064:	add	r0, pc, r0
    c068:	bx	lr
    c06c:	ldr	r0, [pc, #-2156]	; b808 <bt_compidtostr@@Base+0x37c8>
    c070:	add	r0, pc, r0
    c074:	bx	lr
    c078:	ldr	r0, [pc, #-2164]	; b80c <bt_compidtostr@@Base+0x37cc>
    c07c:	add	r0, pc, r0
    c080:	bx	lr
    c084:	ldr	r0, [pc, #-2172]	; b810 <bt_compidtostr@@Base+0x37d0>
    c088:	add	r0, pc, r0
    c08c:	bx	lr
    c090:	ldr	r0, [pc, #-2180]	; b814 <bt_compidtostr@@Base+0x37d4>
    c094:	add	r0, pc, r0
    c098:	bx	lr
    c09c:	ldr	r0, [pc, #-2188]	; b818 <bt_compidtostr@@Base+0x37d8>
    c0a0:	add	r0, pc, r0
    c0a4:	bx	lr
    c0a8:	ldr	r0, [pc, #-2196]	; b81c <bt_compidtostr@@Base+0x37dc>
    c0ac:	add	r0, pc, r0
    c0b0:	bx	lr
    c0b4:	ldr	r0, [pc, #-2204]	; b820 <bt_compidtostr@@Base+0x37e0>
    c0b8:	add	r0, pc, r0
    c0bc:	bx	lr
    c0c0:	ldr	r0, [pc, #-2212]	; b824 <bt_compidtostr@@Base+0x37e4>
    c0c4:	add	r0, pc, r0
    c0c8:	bx	lr
    c0cc:	ldr	r0, [pc, #-2220]	; b828 <bt_compidtostr@@Base+0x37e8>
    c0d0:	add	r0, pc, r0
    c0d4:	bx	lr
    c0d8:	ldr	r0, [pc, #-2228]	; b82c <bt_compidtostr@@Base+0x37ec>
    c0dc:	add	r0, pc, r0
    c0e0:	bx	lr
    c0e4:	ldr	r0, [pc, #-2236]	; b830 <bt_compidtostr@@Base+0x37f0>
    c0e8:	add	r0, pc, r0
    c0ec:	bx	lr
    c0f0:	ldr	r0, [pc, #-2244]	; b834 <bt_compidtostr@@Base+0x37f4>
    c0f4:	add	r0, pc, r0
    c0f8:	bx	lr
    c0fc:	ldr	r0, [pc, #-2252]	; b838 <bt_compidtostr@@Base+0x37f8>
    c100:	add	r0, pc, r0
    c104:	bx	lr
    c108:	ldr	r0, [pc, #-2260]	; b83c <bt_compidtostr@@Base+0x37fc>
    c10c:	add	r0, pc, r0
    c110:	bx	lr
    c114:	ldr	r0, [pc, #-2268]	; b840 <bt_compidtostr@@Base+0x3800>
    c118:	add	r0, pc, r0
    c11c:	bx	lr
    c120:	ldr	r0, [pc, #-2276]	; b844 <bt_compidtostr@@Base+0x3804>
    c124:	add	r0, pc, r0
    c128:	bx	lr
    c12c:	ldr	r0, [pc, #-2284]	; b848 <bt_compidtostr@@Base+0x3808>
    c130:	add	r0, pc, r0
    c134:	bx	lr
    c138:	ldr	r0, [pc, #-2292]	; b84c <bt_compidtostr@@Base+0x380c>
    c13c:	add	r0, pc, r0
    c140:	bx	lr
    c144:	ldr	r0, [pc, #-2300]	; b850 <bt_compidtostr@@Base+0x3810>
    c148:	add	r0, pc, r0
    c14c:	bx	lr
    c150:	ldr	r0, [pc, #-2308]	; b854 <bt_compidtostr@@Base+0x3814>
    c154:	add	r0, pc, r0
    c158:	bx	lr
    c15c:	ldr	r0, [pc, #-2316]	; b858 <bt_compidtostr@@Base+0x3818>
    c160:	add	r0, pc, r0
    c164:	bx	lr
    c168:	ldr	r0, [pc, #-2324]	; b85c <bt_compidtostr@@Base+0x381c>
    c16c:	add	r0, pc, r0
    c170:	bx	lr
    c174:	ldr	r0, [pc, #-2332]	; b860 <bt_compidtostr@@Base+0x3820>
    c178:	add	r0, pc, r0
    c17c:	bx	lr
    c180:	ldr	r0, [pc, #-2340]	; b864 <bt_compidtostr@@Base+0x3824>
    c184:	add	r0, pc, r0
    c188:	bx	lr
    c18c:	ldr	r0, [pc, #-2348]	; b868 <bt_compidtostr@@Base+0x3828>
    c190:	add	r0, pc, r0
    c194:	bx	lr
    c198:	ldr	r0, [pc, #-2356]	; b86c <bt_compidtostr@@Base+0x382c>
    c19c:	add	r0, pc, r0
    c1a0:	bx	lr
    c1a4:	ldr	r0, [pc, #-2364]	; b870 <bt_compidtostr@@Base+0x3830>
    c1a8:	add	r0, pc, r0
    c1ac:	bx	lr
    c1b0:	ldr	r0, [pc, #-2372]	; b874 <bt_compidtostr@@Base+0x3834>
    c1b4:	add	r0, pc, r0
    c1b8:	bx	lr
    c1bc:	ldr	r0, [pc, #-2380]	; b878 <bt_compidtostr@@Base+0x3838>
    c1c0:	add	r0, pc, r0
    c1c4:	bx	lr
    c1c8:	ldr	r0, [pc, #-2388]	; b87c <bt_compidtostr@@Base+0x383c>
    c1cc:	add	r0, pc, r0
    c1d0:	bx	lr
    c1d4:	ldr	r0, [pc, #-2396]	; b880 <bt_compidtostr@@Base+0x3840>
    c1d8:	add	r0, pc, r0
    c1dc:	bx	lr
    c1e0:	ldr	r0, [pc, #-2404]	; b884 <bt_compidtostr@@Base+0x3844>
    c1e4:	add	r0, pc, r0
    c1e8:	bx	lr
    c1ec:	ldr	r0, [pc, #-2412]	; b888 <bt_compidtostr@@Base+0x3848>
    c1f0:	add	r0, pc, r0
    c1f4:	bx	lr
    c1f8:	ldr	r0, [pc, #-2420]	; b88c <bt_compidtostr@@Base+0x384c>
    c1fc:	add	r0, pc, r0
    c200:	bx	lr
    c204:	ldr	r0, [pc, #-2428]	; b890 <bt_compidtostr@@Base+0x3850>
    c208:	add	r0, pc, r0
    c20c:	bx	lr
    c210:	ldr	r0, [pc, #-2436]	; b894 <bt_compidtostr@@Base+0x3854>
    c214:	add	r0, pc, r0
    c218:	bx	lr
    c21c:	ldr	r0, [pc, #-2444]	; b898 <bt_compidtostr@@Base+0x3858>
    c220:	add	r0, pc, r0
    c224:	bx	lr
    c228:	ldr	r0, [pc, #-2452]	; b89c <bt_compidtostr@@Base+0x385c>
    c22c:	add	r0, pc, r0
    c230:	bx	lr
    c234:	ldr	r0, [pc, #-2460]	; b8a0 <bt_compidtostr@@Base+0x3860>
    c238:	add	r0, pc, r0
    c23c:	bx	lr
    c240:	ldr	r0, [pc, #-2468]	; b8a4 <bt_compidtostr@@Base+0x3864>
    c244:	add	r0, pc, r0
    c248:	bx	lr
    c24c:	ldr	r0, [pc, #-2476]	; b8a8 <bt_compidtostr@@Base+0x3868>
    c250:	add	r0, pc, r0
    c254:	bx	lr
    c258:	ldr	r0, [pc, #-2484]	; b8ac <bt_compidtostr@@Base+0x386c>
    c25c:	add	r0, pc, r0
    c260:	bx	lr
    c264:	ldr	r0, [pc, #-2492]	; b8b0 <bt_compidtostr@@Base+0x3870>
    c268:	add	r0, pc, r0
    c26c:	bx	lr
    c270:	ldr	r0, [pc, #-2500]	; b8b4 <bt_compidtostr@@Base+0x3874>
    c274:	add	r0, pc, r0
    c278:	bx	lr
    c27c:	ldr	r0, [pc, #-2508]	; b8b8 <bt_compidtostr@@Base+0x3878>
    c280:	add	r0, pc, r0
    c284:	bx	lr
    c288:	ldr	r0, [pc, #-2516]	; b8bc <bt_compidtostr@@Base+0x387c>
    c28c:	add	r0, pc, r0
    c290:	bx	lr
    c294:	ldr	r0, [pc, #-2524]	; b8c0 <bt_compidtostr@@Base+0x3880>
    c298:	add	r0, pc, r0
    c29c:	bx	lr
    c2a0:	ldr	r0, [pc, #-2532]	; b8c4 <bt_compidtostr@@Base+0x3884>
    c2a4:	add	r0, pc, r0
    c2a8:	bx	lr
    c2ac:	ldr	r0, [pc, #-2540]	; b8c8 <bt_compidtostr@@Base+0x3888>
    c2b0:	add	r0, pc, r0
    c2b4:	bx	lr
    c2b8:	ldr	r0, [pc, #-2548]	; b8cc <bt_compidtostr@@Base+0x388c>
    c2bc:	add	r0, pc, r0
    c2c0:	bx	lr
    c2c4:	ldr	r0, [pc, #-2556]	; b8d0 <bt_compidtostr@@Base+0x3890>
    c2c8:	add	r0, pc, r0
    c2cc:	bx	lr
    c2d0:	ldr	r0, [pc, #-2564]	; b8d4 <bt_compidtostr@@Base+0x3894>
    c2d4:	add	r0, pc, r0
    c2d8:	bx	lr
    c2dc:	ldr	r0, [pc, #-2572]	; b8d8 <bt_compidtostr@@Base+0x3898>
    c2e0:	add	r0, pc, r0
    c2e4:	bx	lr
    c2e8:	ldr	r0, [pc, #-2580]	; b8dc <bt_compidtostr@@Base+0x389c>
    c2ec:	add	r0, pc, r0
    c2f0:	bx	lr
    c2f4:	ldr	r0, [pc, #-2588]	; b8e0 <bt_compidtostr@@Base+0x38a0>
    c2f8:	add	r0, pc, r0
    c2fc:	bx	lr
    c300:	ldr	r0, [pc, #-2596]	; b8e4 <bt_compidtostr@@Base+0x38a4>
    c304:	add	r0, pc, r0
    c308:	bx	lr
    c30c:	ldr	r0, [pc, #-2604]	; b8e8 <bt_compidtostr@@Base+0x38a8>
    c310:	add	r0, pc, r0
    c314:	bx	lr
    c318:	ldr	r0, [pc, #-2612]	; b8ec <bt_compidtostr@@Base+0x38ac>
    c31c:	add	r0, pc, r0
    c320:	bx	lr
    c324:	ldr	r0, [pc, #-2620]	; b8f0 <bt_compidtostr@@Base+0x38b0>
    c328:	add	r0, pc, r0
    c32c:	bx	lr
    c330:	ldr	r0, [pc, #-2628]	; b8f4 <bt_compidtostr@@Base+0x38b4>
    c334:	add	r0, pc, r0
    c338:	bx	lr
    c33c:	ldr	r0, [pc, #-2636]	; b8f8 <bt_compidtostr@@Base+0x38b8>
    c340:	add	r0, pc, r0
    c344:	bx	lr
    c348:	ldr	r0, [pc, #-2644]	; b8fc <bt_compidtostr@@Base+0x38bc>
    c34c:	add	r0, pc, r0
    c350:	bx	lr
    c354:	ldr	r0, [pc, #-2652]	; b900 <bt_compidtostr@@Base+0x38c0>
    c358:	add	r0, pc, r0
    c35c:	bx	lr
    c360:	ldr	r0, [pc, #-2660]	; b904 <bt_compidtostr@@Base+0x38c4>
    c364:	add	r0, pc, r0
    c368:	bx	lr
    c36c:	ldr	r0, [pc, #-2668]	; b908 <bt_compidtostr@@Base+0x38c8>
    c370:	add	r0, pc, r0
    c374:	bx	lr
    c378:	ldr	r0, [pc, #-2676]	; b90c <bt_compidtostr@@Base+0x38cc>
    c37c:	add	r0, pc, r0
    c380:	bx	lr
    c384:	ldr	r0, [pc, #-2684]	; b910 <bt_compidtostr@@Base+0x38d0>
    c388:	add	r0, pc, r0
    c38c:	bx	lr
    c390:	ldr	r0, [pc, #-2692]	; b914 <bt_compidtostr@@Base+0x38d4>
    c394:	add	r0, pc, r0
    c398:	bx	lr
    c39c:	ldr	r0, [pc, #-2700]	; b918 <bt_compidtostr@@Base+0x38d8>
    c3a0:	add	r0, pc, r0
    c3a4:	bx	lr
    c3a8:	ldr	r0, [pc, #-2708]	; b91c <bt_compidtostr@@Base+0x38dc>
    c3ac:	add	r0, pc, r0
    c3b0:	bx	lr
    c3b4:	ldr	r0, [pc, #-2716]	; b920 <bt_compidtostr@@Base+0x38e0>
    c3b8:	add	r0, pc, r0
    c3bc:	bx	lr
    c3c0:	ldr	r0, [pc, #-2724]	; b924 <bt_compidtostr@@Base+0x38e4>
    c3c4:	add	r0, pc, r0
    c3c8:	bx	lr
    c3cc:	ldr	r0, [pc, #-2732]	; b928 <bt_compidtostr@@Base+0x38e8>
    c3d0:	add	r0, pc, r0
    c3d4:	bx	lr
    c3d8:	ldr	r0, [pc, #-2740]	; b92c <bt_compidtostr@@Base+0x38ec>
    c3dc:	add	r0, pc, r0
    c3e0:	bx	lr
    c3e4:	ldr	r0, [pc, #-2748]	; b930 <bt_compidtostr@@Base+0x38f0>
    c3e8:	add	r0, pc, r0
    c3ec:	bx	lr
    c3f0:	ldr	r0, [pc, #-2756]	; b934 <bt_compidtostr@@Base+0x38f4>
    c3f4:	add	r0, pc, r0
    c3f8:	bx	lr
    c3fc:	ldr	r0, [pc, #-2764]	; b938 <bt_compidtostr@@Base+0x38f8>
    c400:	add	r0, pc, r0
    c404:	bx	lr
    c408:	ldr	r0, [pc, #-2772]	; b93c <bt_compidtostr@@Base+0x38fc>
    c40c:	add	r0, pc, r0
    c410:	bx	lr
    c414:	ldr	r0, [pc, #-2780]	; b940 <bt_compidtostr@@Base+0x3900>
    c418:	add	r0, pc, r0
    c41c:	bx	lr
    c420:	ldr	r0, [pc, #-2788]	; b944 <bt_compidtostr@@Base+0x3904>
    c424:	add	r0, pc, r0
    c428:	bx	lr
    c42c:	ldr	r0, [pc, #-2796]	; b948 <bt_compidtostr@@Base+0x3908>
    c430:	add	r0, pc, r0
    c434:	bx	lr
    c438:	ldr	r0, [pc, #-2804]	; b94c <bt_compidtostr@@Base+0x390c>
    c43c:	add	r0, pc, r0
    c440:	bx	lr
    c444:	ldr	r0, [pc, #-2812]	; b950 <bt_compidtostr@@Base+0x3910>
    c448:	add	r0, pc, r0
    c44c:	bx	lr
    c450:	ldr	r0, [pc, #-2820]	; b954 <bt_compidtostr@@Base+0x3914>
    c454:	add	r0, pc, r0
    c458:	bx	lr
    c45c:	ldr	r0, [pc, #-2828]	; b958 <bt_compidtostr@@Base+0x3918>
    c460:	add	r0, pc, r0
    c464:	bx	lr
    c468:	ldr	r0, [pc, #-2836]	; b95c <bt_compidtostr@@Base+0x391c>
    c46c:	add	r0, pc, r0
    c470:	bx	lr
    c474:	ldr	r0, [pc, #-2844]	; b960 <bt_compidtostr@@Base+0x3920>
    c478:	add	r0, pc, r0
    c47c:	bx	lr
    c480:	ldr	r0, [pc, #-2852]	; b964 <bt_compidtostr@@Base+0x3924>
    c484:	add	r0, pc, r0
    c488:	bx	lr
    c48c:	ldr	r0, [pc, #-2860]	; b968 <bt_compidtostr@@Base+0x3928>
    c490:	add	r0, pc, r0
    c494:	bx	lr
    c498:	ldr	r0, [pc, #-2868]	; b96c <bt_compidtostr@@Base+0x392c>
    c49c:	add	r0, pc, r0
    c4a0:	bx	lr
    c4a4:	ldr	r0, [pc, #-2876]	; b970 <bt_compidtostr@@Base+0x3930>
    c4a8:	add	r0, pc, r0
    c4ac:	bx	lr
    c4b0:	ldr	r0, [pc, #-2884]	; b974 <bt_compidtostr@@Base+0x3934>
    c4b4:	add	r0, pc, r0
    c4b8:	bx	lr
    c4bc:	ldr	r0, [pc, #-2892]	; b978 <bt_compidtostr@@Base+0x3938>
    c4c0:	add	r0, pc, r0
    c4c4:	bx	lr
    c4c8:	ldr	r0, [pc, #-2900]	; b97c <bt_compidtostr@@Base+0x393c>
    c4cc:	add	r0, pc, r0
    c4d0:	bx	lr
    c4d4:	ldr	r0, [pc, #-2908]	; b980 <bt_compidtostr@@Base+0x3940>
    c4d8:	add	r0, pc, r0
    c4dc:	bx	lr
    c4e0:	ldr	r0, [pc, #-2916]	; b984 <bt_compidtostr@@Base+0x3944>
    c4e4:	add	r0, pc, r0
    c4e8:	bx	lr
    c4ec:	ldr	r0, [pc, #-2924]	; b988 <bt_compidtostr@@Base+0x3948>
    c4f0:	add	r0, pc, r0
    c4f4:	bx	lr
    c4f8:	ldr	r0, [pc, #-2932]	; b98c <bt_compidtostr@@Base+0x394c>
    c4fc:	add	r0, pc, r0
    c500:	bx	lr
    c504:	ldr	r0, [pc, #-2940]	; b990 <bt_compidtostr@@Base+0x3950>
    c508:	add	r0, pc, r0
    c50c:	bx	lr
    c510:	ldr	r0, [pc, #-2948]	; b994 <bt_compidtostr@@Base+0x3954>
    c514:	add	r0, pc, r0
    c518:	bx	lr
    c51c:	ldr	r0, [pc, #-2956]	; b998 <bt_compidtostr@@Base+0x3958>
    c520:	add	r0, pc, r0
    c524:	bx	lr
    c528:	ldr	r0, [pc, #-2964]	; b99c <bt_compidtostr@@Base+0x395c>
    c52c:	add	r0, pc, r0
    c530:	bx	lr
    c534:	ldr	r0, [pc, #-2972]	; b9a0 <bt_compidtostr@@Base+0x3960>
    c538:	add	r0, pc, r0
    c53c:	bx	lr
    c540:	ldr	r0, [pc, #-2980]	; b9a4 <bt_compidtostr@@Base+0x3964>
    c544:	add	r0, pc, r0
    c548:	bx	lr
    c54c:	ldr	r0, [pc, #-2988]	; b9a8 <bt_compidtostr@@Base+0x3968>
    c550:	add	r0, pc, r0
    c554:	bx	lr
    c558:	ldr	r0, [pc, #-2996]	; b9ac <bt_compidtostr@@Base+0x396c>
    c55c:	add	r0, pc, r0
    c560:	bx	lr
    c564:	ldr	r0, [pc, #-3004]	; b9b0 <bt_compidtostr@@Base+0x3970>
    c568:	add	r0, pc, r0
    c56c:	bx	lr
    c570:	ldr	r0, [pc, #-3012]	; b9b4 <bt_compidtostr@@Base+0x3974>
    c574:	add	r0, pc, r0
    c578:	bx	lr
    c57c:	ldr	r0, [pc, #-3020]	; b9b8 <bt_compidtostr@@Base+0x3978>
    c580:	add	r0, pc, r0
    c584:	bx	lr
    c588:	ldr	r0, [pc, #-3028]	; b9bc <bt_compidtostr@@Base+0x397c>
    c58c:	add	r0, pc, r0
    c590:	bx	lr
    c594:	ldr	r0, [pc, #-3036]	; b9c0 <bt_compidtostr@@Base+0x3980>
    c598:	add	r0, pc, r0
    c59c:	bx	lr
    c5a0:	ldr	r0, [pc, #-3044]	; b9c4 <bt_compidtostr@@Base+0x3984>
    c5a4:	add	r0, pc, r0
    c5a8:	bx	lr
    c5ac:	ldr	r0, [pc, #-3052]	; b9c8 <bt_compidtostr@@Base+0x3988>
    c5b0:	add	r0, pc, r0
    c5b4:	bx	lr
    c5b8:	ldr	r0, [pc, #-3060]	; b9cc <bt_compidtostr@@Base+0x398c>
    c5bc:	add	r0, pc, r0
    c5c0:	bx	lr
    c5c4:	ldr	r0, [pc, #-3068]	; b9d0 <bt_compidtostr@@Base+0x3990>
    c5c8:	add	r0, pc, r0
    c5cc:	bx	lr
    c5d0:	ldr	r0, [pc, #-3076]	; b9d4 <bt_compidtostr@@Base+0x3994>
    c5d4:	add	r0, pc, r0
    c5d8:	bx	lr
    c5dc:	ldr	r0, [pc, #-3084]	; b9d8 <bt_compidtostr@@Base+0x3998>
    c5e0:	add	r0, pc, r0
    c5e4:	bx	lr
    c5e8:	ldr	r0, [pc, #-3092]	; b9dc <bt_compidtostr@@Base+0x399c>
    c5ec:	add	r0, pc, r0
    c5f0:	bx	lr
    c5f4:	ldr	r0, [pc, #-3100]	; b9e0 <bt_compidtostr@@Base+0x39a0>
    c5f8:	add	r0, pc, r0
    c5fc:	bx	lr
    c600:	ldr	r0, [pc, #-3108]	; b9e4 <bt_compidtostr@@Base+0x39a4>
    c604:	add	r0, pc, r0
    c608:	bx	lr
    c60c:	ldr	r0, [pc, #-3116]	; b9e8 <bt_compidtostr@@Base+0x39a8>
    c610:	add	r0, pc, r0
    c614:	bx	lr
    c618:	ldr	r0, [pc, #-3124]	; b9ec <bt_compidtostr@@Base+0x39ac>
    c61c:	add	r0, pc, r0
    c620:	bx	lr
    c624:	ldr	r0, [pc, #-3132]	; b9f0 <bt_compidtostr@@Base+0x39b0>
    c628:	add	r0, pc, r0
    c62c:	bx	lr
    c630:	ldr	r0, [pc, #-3140]	; b9f4 <bt_compidtostr@@Base+0x39b4>
    c634:	add	r0, pc, r0
    c638:	bx	lr
    c63c:	ldr	r0, [pc, #-3148]	; b9f8 <bt_compidtostr@@Base+0x39b8>
    c640:	add	r0, pc, r0
    c644:	bx	lr
    c648:	ldr	r0, [pc, #-3156]	; b9fc <bt_compidtostr@@Base+0x39bc>
    c64c:	add	r0, pc, r0
    c650:	bx	lr
    c654:	ldr	r0, [pc, #-3164]	; ba00 <bt_compidtostr@@Base+0x39c0>
    c658:	add	r0, pc, r0
    c65c:	bx	lr
    c660:	ldr	r0, [pc, #-3172]	; ba04 <bt_compidtostr@@Base+0x39c4>
    c664:	add	r0, pc, r0
    c668:	bx	lr
    c66c:	ldr	r0, [pc, #-3180]	; ba08 <bt_compidtostr@@Base+0x39c8>
    c670:	add	r0, pc, r0
    c674:	bx	lr
    c678:	ldr	r0, [pc, #-3188]	; ba0c <bt_compidtostr@@Base+0x39cc>
    c67c:	add	r0, pc, r0
    c680:	bx	lr
    c684:	ldr	r0, [pc, #-3196]	; ba10 <bt_compidtostr@@Base+0x39d0>
    c688:	add	r0, pc, r0
    c68c:	bx	lr
    c690:	ldr	r0, [pc, #-3204]	; ba14 <bt_compidtostr@@Base+0x39d4>
    c694:	add	r0, pc, r0
    c698:	bx	lr
    c69c:	ldr	r0, [pc, #-3212]	; ba18 <bt_compidtostr@@Base+0x39d8>
    c6a0:	add	r0, pc, r0
    c6a4:	bx	lr
    c6a8:	ldr	r0, [pc, #-3220]	; ba1c <bt_compidtostr@@Base+0x39dc>
    c6ac:	add	r0, pc, r0
    c6b0:	bx	lr
    c6b4:	ldr	r0, [pc, #-3228]	; ba20 <bt_compidtostr@@Base+0x39e0>
    c6b8:	add	r0, pc, r0
    c6bc:	bx	lr
    c6c0:	ldr	r0, [pc, #-3236]	; ba24 <bt_compidtostr@@Base+0x39e4>
    c6c4:	add	r0, pc, r0
    c6c8:	bx	lr
    c6cc:	ldr	r0, [pc, #-3244]	; ba28 <bt_compidtostr@@Base+0x39e8>
    c6d0:	add	r0, pc, r0
    c6d4:	bx	lr
    c6d8:	ldr	r0, [pc, #-3252]	; ba2c <bt_compidtostr@@Base+0x39ec>
    c6dc:	add	r0, pc, r0
    c6e0:	bx	lr
    c6e4:	ldr	r0, [pc, #-3260]	; ba30 <bt_compidtostr@@Base+0x39f0>
    c6e8:	add	r0, pc, r0
    c6ec:	bx	lr
    c6f0:	ldr	r0, [pc, #-3268]	; ba34 <bt_compidtostr@@Base+0x39f4>
    c6f4:	add	r0, pc, r0
    c6f8:	bx	lr
    c6fc:	ldr	r0, [pc, #-3276]	; ba38 <bt_compidtostr@@Base+0x39f8>
    c700:	add	r0, pc, r0
    c704:	bx	lr
    c708:	ldr	r0, [pc, #-3284]	; ba3c <bt_compidtostr@@Base+0x39fc>
    c70c:	add	r0, pc, r0
    c710:	bx	lr
    c714:	ldr	r0, [pc, #-3292]	; ba40 <bt_compidtostr@@Base+0x3a00>
    c718:	add	r0, pc, r0
    c71c:	bx	lr
    c720:	ldr	r0, [pc, #-3300]	; ba44 <bt_compidtostr@@Base+0x3a04>
    c724:	add	r0, pc, r0
    c728:	bx	lr
    c72c:	ldr	r0, [pc, #-3308]	; ba48 <bt_compidtostr@@Base+0x3a08>
    c730:	add	r0, pc, r0
    c734:	bx	lr
    c738:	ldr	r0, [pc, #-3316]	; ba4c <bt_compidtostr@@Base+0x3a0c>
    c73c:	add	r0, pc, r0
    c740:	bx	lr
    c744:	ldr	r0, [pc, #-3324]	; ba50 <bt_compidtostr@@Base+0x3a10>
    c748:	add	r0, pc, r0
    c74c:	bx	lr
    c750:	ldr	r0, [pc, #-3332]	; ba54 <bt_compidtostr@@Base+0x3a14>
    c754:	add	r0, pc, r0
    c758:	bx	lr
    c75c:	ldr	r0, [pc, #-3340]	; ba58 <bt_compidtostr@@Base+0x3a18>
    c760:	add	r0, pc, r0
    c764:	bx	lr
    c768:	ldr	r0, [pc, #-3348]	; ba5c <bt_compidtostr@@Base+0x3a1c>
    c76c:	add	r0, pc, r0
    c770:	bx	lr
    c774:	ldr	r0, [pc, #-3356]	; ba60 <bt_compidtostr@@Base+0x3a20>
    c778:	add	r0, pc, r0
    c77c:	bx	lr
    c780:	ldr	r0, [pc, #-3364]	; ba64 <bt_compidtostr@@Base+0x3a24>
    c784:	add	r0, pc, r0
    c788:	bx	lr
    c78c:	ldr	r0, [pc, #-3372]	; ba68 <bt_compidtostr@@Base+0x3a28>
    c790:	add	r0, pc, r0
    c794:	bx	lr
    c798:	ldr	r0, [pc, #-3380]	; ba6c <bt_compidtostr@@Base+0x3a2c>
    c79c:	add	r0, pc, r0
    c7a0:	bx	lr
    c7a4:	ldr	r0, [pc, #-3388]	; ba70 <bt_compidtostr@@Base+0x3a30>
    c7a8:	add	r0, pc, r0
    c7ac:	bx	lr
    c7b0:	ldr	r0, [pc, #-3396]	; ba74 <bt_compidtostr@@Base+0x3a34>
    c7b4:	add	r0, pc, r0
    c7b8:	bx	lr
    c7bc:	ldr	r0, [pc, #-3404]	; ba78 <bt_compidtostr@@Base+0x3a38>
    c7c0:	add	r0, pc, r0
    c7c4:	bx	lr
    c7c8:	ldr	r0, [pc, #-3412]	; ba7c <bt_compidtostr@@Base+0x3a3c>
    c7cc:	add	r0, pc, r0
    c7d0:	bx	lr
    c7d4:	ldr	r0, [pc, #-3420]	; ba80 <bt_compidtostr@@Base+0x3a40>
    c7d8:	add	r0, pc, r0
    c7dc:	bx	lr
    c7e0:	ldr	r0, [pc, #-3428]	; ba84 <bt_compidtostr@@Base+0x3a44>
    c7e4:	add	r0, pc, r0
    c7e8:	bx	lr
    c7ec:	ldr	r0, [pc, #-3436]	; ba88 <bt_compidtostr@@Base+0x3a48>
    c7f0:	add	r0, pc, r0
    c7f4:	bx	lr
    c7f8:	ldr	r0, [pc, #-3444]	; ba8c <bt_compidtostr@@Base+0x3a4c>
    c7fc:	add	r0, pc, r0
    c800:	bx	lr
    c804:	ldr	r0, [pc, #-3452]	; ba90 <bt_compidtostr@@Base+0x3a50>
    c808:	add	r0, pc, r0
    c80c:	bx	lr
    c810:	ldr	r0, [pc, #-3460]	; ba94 <bt_compidtostr@@Base+0x3a54>
    c814:	add	r0, pc, r0
    c818:	bx	lr
    c81c:	ldr	r0, [pc, #-3468]	; ba98 <bt_compidtostr@@Base+0x3a58>
    c820:	add	r0, pc, r0
    c824:	bx	lr
    c828:	ldr	r0, [pc, #-3476]	; ba9c <bt_compidtostr@@Base+0x3a5c>
    c82c:	add	r0, pc, r0
    c830:	bx	lr
    c834:	ldr	r0, [pc, #-3484]	; baa0 <bt_compidtostr@@Base+0x3a60>
    c838:	add	r0, pc, r0
    c83c:	bx	lr
    c840:	ldr	r0, [pc, #-3492]	; baa4 <bt_compidtostr@@Base+0x3a64>
    c844:	add	r0, pc, r0
    c848:	bx	lr
    c84c:	ldr	r0, [pc, #-3500]	; baa8 <bt_compidtostr@@Base+0x3a68>
    c850:	add	r0, pc, r0
    c854:	bx	lr
    c858:	ldr	r0, [pc, #-3508]	; baac <bt_compidtostr@@Base+0x3a6c>
    c85c:	add	r0, pc, r0
    c860:	bx	lr
    c864:	ldr	r0, [pc, #-3516]	; bab0 <bt_compidtostr@@Base+0x3a70>
    c868:	add	r0, pc, r0
    c86c:	bx	lr
    c870:	ldr	r0, [pc, #-3524]	; bab4 <bt_compidtostr@@Base+0x3a74>
    c874:	add	r0, pc, r0
    c878:	bx	lr
    c87c:	ldr	r0, [pc, #-3532]	; bab8 <bt_compidtostr@@Base+0x3a78>
    c880:	add	r0, pc, r0
    c884:	bx	lr
    c888:	ldr	r0, [pc, #-3540]	; babc <bt_compidtostr@@Base+0x3a7c>
    c88c:	add	r0, pc, r0
    c890:	bx	lr
    c894:	ldr	r0, [pc, #-3548]	; bac0 <bt_compidtostr@@Base+0x3a80>
    c898:	add	r0, pc, r0
    c89c:	bx	lr
    c8a0:	ldr	r0, [pc, #-3556]	; bac4 <bt_compidtostr@@Base+0x3a84>
    c8a4:	add	r0, pc, r0
    c8a8:	bx	lr
    c8ac:	ldr	r0, [pc, #-3564]	; bac8 <bt_compidtostr@@Base+0x3a88>
    c8b0:	add	r0, pc, r0
    c8b4:	bx	lr
    c8b8:	ldr	r0, [pc, #-3572]	; bacc <bt_compidtostr@@Base+0x3a8c>
    c8bc:	add	r0, pc, r0
    c8c0:	bx	lr
    c8c4:	ldr	r0, [pc, #-3580]	; bad0 <bt_compidtostr@@Base+0x3a90>
    c8c8:	add	r0, pc, r0
    c8cc:	bx	lr
    c8d0:	ldr	r0, [pc, #-3588]	; bad4 <bt_compidtostr@@Base+0x3a94>
    c8d4:	add	r0, pc, r0
    c8d8:	bx	lr
    c8dc:	ldr	r0, [pc, #-3596]	; bad8 <bt_compidtostr@@Base+0x3a98>
    c8e0:	add	r0, pc, r0
    c8e4:	bx	lr
    c8e8:	ldr	r0, [pc, #-3604]	; badc <bt_compidtostr@@Base+0x3a9c>
    c8ec:	add	r0, pc, r0
    c8f0:	bx	lr
    c8f4:	ldr	r0, [pc, #-3612]	; bae0 <bt_compidtostr@@Base+0x3aa0>
    c8f8:	add	r0, pc, r0
    c8fc:	bx	lr
    c900:	ldr	r0, [pc, #-3620]	; bae4 <bt_compidtostr@@Base+0x3aa4>
    c904:	add	r0, pc, r0
    c908:	bx	lr
    c90c:	ldr	r0, [pc, #-3628]	; bae8 <bt_compidtostr@@Base+0x3aa8>
    c910:	add	r0, pc, r0
    c914:	bx	lr
    c918:	ldr	r0, [pc, #-3636]	; baec <bt_compidtostr@@Base+0x3aac>
    c91c:	add	r0, pc, r0
    c920:	bx	lr
    c924:	ldr	r0, [pc, #-3644]	; baf0 <bt_compidtostr@@Base+0x3ab0>
    c928:	add	r0, pc, r0
    c92c:	bx	lr
    c930:	ldr	r0, [pc, #-3652]	; baf4 <bt_compidtostr@@Base+0x3ab4>
    c934:	add	r0, pc, r0
    c938:	bx	lr
    c93c:	ldr	r0, [pc, #-3660]	; baf8 <bt_compidtostr@@Base+0x3ab8>
    c940:	add	r0, pc, r0
    c944:	bx	lr
    c948:	ldr	r0, [pc, #-3668]	; bafc <bt_compidtostr@@Base+0x3abc>
    c94c:	add	r0, pc, r0
    c950:	bx	lr
    c954:	ldr	r0, [pc, #-3676]	; bb00 <bt_compidtostr@@Base+0x3ac0>
    c958:	add	r0, pc, r0
    c95c:	bx	lr
    c960:	ldr	r0, [pc, #-3684]	; bb04 <bt_compidtostr@@Base+0x3ac4>
    c964:	add	r0, pc, r0
    c968:	bx	lr
    c96c:	ldr	r0, [pc, #-3692]	; bb08 <bt_compidtostr@@Base+0x3ac8>
    c970:	add	r0, pc, r0
    c974:	bx	lr
    c978:	ldr	r0, [pc, #-3700]	; bb0c <bt_compidtostr@@Base+0x3acc>
    c97c:	add	r0, pc, r0
    c980:	bx	lr
    c984:	ldr	r0, [pc, #-3708]	; bb10 <bt_compidtostr@@Base+0x3ad0>
    c988:	add	r0, pc, r0
    c98c:	bx	lr
    c990:	ldr	r0, [pc, #-3716]	; bb14 <bt_compidtostr@@Base+0x3ad4>
    c994:	add	r0, pc, r0
    c998:	bx	lr
    c99c:	ldr	r0, [pc, #-3724]	; bb18 <bt_compidtostr@@Base+0x3ad8>
    c9a0:	add	r0, pc, r0
    c9a4:	bx	lr
    c9a8:	ldr	r0, [pc, #-3732]	; bb1c <bt_compidtostr@@Base+0x3adc>
    c9ac:	add	r0, pc, r0
    c9b0:	bx	lr
    c9b4:	ldr	r0, [pc, #-3740]	; bb20 <bt_compidtostr@@Base+0x3ae0>
    c9b8:	add	r0, pc, r0
    c9bc:	bx	lr
    c9c0:	ldr	r0, [pc, #-3748]	; bb24 <bt_compidtostr@@Base+0x3ae4>
    c9c4:	add	r0, pc, r0
    c9c8:	bx	lr
    c9cc:	ldr	r0, [pc, #-3756]	; bb28 <bt_compidtostr@@Base+0x3ae8>
    c9d0:	add	r0, pc, r0
    c9d4:	bx	lr
    c9d8:	ldr	r0, [pc, #-3764]	; bb2c <bt_compidtostr@@Base+0x3aec>
    c9dc:	add	r0, pc, r0
    c9e0:	bx	lr
    c9e4:	ldr	r0, [pc, #-3772]	; bb30 <bt_compidtostr@@Base+0x3af0>
    c9e8:	add	r0, pc, r0
    c9ec:	bx	lr
    c9f0:	ldr	r0, [pc, #-3780]	; bb34 <bt_compidtostr@@Base+0x3af4>
    c9f4:	add	r0, pc, r0
    c9f8:	bx	lr
    c9fc:	ldr	r0, [pc, #-3788]	; bb38 <bt_compidtostr@@Base+0x3af8>
    ca00:	add	r0, pc, r0
    ca04:	bx	lr
    ca08:	ldr	r0, [pc, #-3796]	; bb3c <bt_compidtostr@@Base+0x3afc>
    ca0c:	add	r0, pc, r0
    ca10:	bx	lr
    ca14:	ldr	r0, [pc, #-3804]	; bb40 <bt_compidtostr@@Base+0x3b00>
    ca18:	add	r0, pc, r0
    ca1c:	bx	lr
    ca20:	ldr	r0, [pc, #-3812]	; bb44 <bt_compidtostr@@Base+0x3b04>
    ca24:	add	r0, pc, r0
    ca28:	bx	lr
    ca2c:	ldr	r0, [pc, #-3820]	; bb48 <bt_compidtostr@@Base+0x3b08>
    ca30:	add	r0, pc, r0
    ca34:	bx	lr
    ca38:	ldr	r0, [pc, #-3828]	; bb4c <bt_compidtostr@@Base+0x3b0c>
    ca3c:	add	r0, pc, r0
    ca40:	bx	lr
    ca44:	ldr	r0, [pc, #-3836]	; bb50 <bt_compidtostr@@Base+0x3b10>
    ca48:	add	r0, pc, r0
    ca4c:	bx	lr
    ca50:	ldr	r0, [pc, #-3844]	; bb54 <bt_compidtostr@@Base+0x3b14>
    ca54:	add	r0, pc, r0
    ca58:	bx	lr
    ca5c:	ldr	r0, [pc, #-3852]	; bb58 <bt_compidtostr@@Base+0x3b18>
    ca60:	add	r0, pc, r0
    ca64:	bx	lr
    ca68:	ldr	r0, [pc, #-3860]	; bb5c <bt_compidtostr@@Base+0x3b1c>
    ca6c:	add	r0, pc, r0
    ca70:	bx	lr
    ca74:	ldr	r0, [pc, #-3868]	; bb60 <bt_compidtostr@@Base+0x3b20>
    ca78:	add	r0, pc, r0
    ca7c:	bx	lr
    ca80:	ldr	r0, [pc, #-3876]	; bb64 <bt_compidtostr@@Base+0x3b24>
    ca84:	add	r0, pc, r0
    ca88:	bx	lr
    ca8c:	ldr	r0, [pc, #-3884]	; bb68 <bt_compidtostr@@Base+0x3b28>
    ca90:	add	r0, pc, r0
    ca94:	bx	lr
    ca98:	ldr	r0, [pc, #-3892]	; bb6c <bt_compidtostr@@Base+0x3b2c>
    ca9c:	add	r0, pc, r0
    caa0:	bx	lr
    caa4:	ldr	r0, [pc, #-3900]	; bb70 <bt_compidtostr@@Base+0x3b30>
    caa8:	add	r0, pc, r0
    caac:	bx	lr
    cab0:	ldr	r0, [pc, #-3908]	; bb74 <bt_compidtostr@@Base+0x3b34>
    cab4:	add	r0, pc, r0
    cab8:	bx	lr
    cabc:	ldr	r0, [pc, #-3916]	; bb78 <bt_compidtostr@@Base+0x3b38>
    cac0:	add	r0, pc, r0
    cac4:	bx	lr
    cac8:	ldr	r0, [pc, #-3924]	; bb7c <bt_compidtostr@@Base+0x3b3c>
    cacc:	add	r0, pc, r0
    cad0:	bx	lr
    cad4:	ldr	r0, [pc, #-3932]	; bb80 <bt_compidtostr@@Base+0x3b40>
    cad8:	add	r0, pc, r0
    cadc:	bx	lr
    cae0:	ldr	r0, [pc, #-3940]	; bb84 <bt_compidtostr@@Base+0x3b44>
    cae4:	add	r0, pc, r0
    cae8:	bx	lr
    caec:	ldr	r0, [pc, #-3948]	; bb88 <bt_compidtostr@@Base+0x3b48>
    caf0:	add	r0, pc, r0
    caf4:	bx	lr
    caf8:	ldr	r0, [pc, #-3956]	; bb8c <bt_compidtostr@@Base+0x3b4c>
    cafc:	add	r0, pc, r0
    cb00:	bx	lr
    cb04:	ldr	r0, [pc, #-3964]	; bb90 <bt_compidtostr@@Base+0x3b50>
    cb08:	add	r0, pc, r0
    cb0c:	bx	lr
    cb10:	ldr	r0, [pc, #-3972]	; bb94 <bt_compidtostr@@Base+0x3b54>
    cb14:	add	r0, pc, r0
    cb18:	bx	lr
    cb1c:	ldr	r0, [pc, #-3980]	; bb98 <bt_compidtostr@@Base+0x3b58>
    cb20:	add	r0, pc, r0
    cb24:	bx	lr
    cb28:	ldr	r0, [pc, #-3988]	; bb9c <bt_compidtostr@@Base+0x3b5c>
    cb2c:	add	r0, pc, r0
    cb30:	bx	lr
    cb34:	ldr	r0, [pc, #-3996]	; bba0 <bt_compidtostr@@Base+0x3b60>
    cb38:	add	r0, pc, r0
    cb3c:	bx	lr
    cb40:	ldr	r0, [pc, #-4004]	; bba4 <bt_compidtostr@@Base+0x3b64>
    cb44:	add	r0, pc, r0
    cb48:	bx	lr
    cb4c:	ldr	r0, [pc, #-4012]	; bba8 <bt_compidtostr@@Base+0x3b68>
    cb50:	add	r0, pc, r0
    cb54:	bx	lr
    cb58:	ldr	r0, [pc, #-4020]	; bbac <bt_compidtostr@@Base+0x3b6c>
    cb5c:	add	r0, pc, r0
    cb60:	bx	lr
    cb64:	ldr	r0, [pc, #-4028]	; bbb0 <bt_compidtostr@@Base+0x3b70>
    cb68:	add	r0, pc, r0
    cb6c:	bx	lr
    cb70:	ldr	r0, [pc, #-4036]	; bbb4 <bt_compidtostr@@Base+0x3b74>
    cb74:	add	r0, pc, r0
    cb78:	bx	lr
    cb7c:	ldr	r0, [pc, #-4044]	; bbb8 <bt_compidtostr@@Base+0x3b78>
    cb80:	add	r0, pc, r0
    cb84:	bx	lr
    cb88:	ldr	r0, [pc, #-4052]	; bbbc <bt_compidtostr@@Base+0x3b7c>
    cb8c:	add	r0, pc, r0
    cb90:	bx	lr
    cb94:	ldr	r0, [pc, #-4060]	; bbc0 <bt_compidtostr@@Base+0x3b80>
    cb98:	add	r0, pc, r0
    cb9c:	bx	lr
    cba0:	ldr	r0, [pc, #-4068]	; bbc4 <bt_compidtostr@@Base+0x3b84>
    cba4:	add	r0, pc, r0
    cba8:	bx	lr
    cbac:	ldr	r0, [pc, #-4076]	; bbc8 <bt_compidtostr@@Base+0x3b88>
    cbb0:	add	r0, pc, r0
    cbb4:	bx	lr
    cbb8:	ldr	r0, [pc, #-4084]	; bbcc <bt_compidtostr@@Base+0x3b8c>
    cbbc:	add	r0, pc, r0
    cbc0:	bx	lr
    cbc4:	ldr	r0, [pc, #-4092]	; bbd0 <bt_compidtostr@@Base+0x3b90>
    cbc8:	add	r0, pc, r0
    cbcc:	bx	lr
    cbd0:	ldr	r0, [pc, #4084]	; dbcc <bt_compidtostr@@Base+0x5b8c>
    cbd4:	add	r0, pc, r0
    cbd8:	bx	lr
    cbdc:	ldr	r0, [pc, #4076]	; dbd0 <bt_compidtostr@@Base+0x5b90>
    cbe0:	add	r0, pc, r0
    cbe4:	bx	lr
    cbe8:	ldr	r0, [pc, #4068]	; dbd4 <bt_compidtostr@@Base+0x5b94>
    cbec:	add	r0, pc, r0
    cbf0:	bx	lr
    cbf4:	ldr	r0, [pc, #4060]	; dbd8 <bt_compidtostr@@Base+0x5b98>
    cbf8:	add	r0, pc, r0
    cbfc:	bx	lr
    cc00:	ldr	r0, [pc, #4052]	; dbdc <bt_compidtostr@@Base+0x5b9c>
    cc04:	add	r0, pc, r0
    cc08:	bx	lr
    cc0c:	ldr	r0, [pc, #4044]	; dbe0 <bt_compidtostr@@Base+0x5ba0>
    cc10:	add	r0, pc, r0
    cc14:	bx	lr
    cc18:	ldr	r0, [pc, #4036]	; dbe4 <bt_compidtostr@@Base+0x5ba4>
    cc1c:	add	r0, pc, r0
    cc20:	bx	lr
    cc24:	ldr	r0, [pc, #4028]	; dbe8 <bt_compidtostr@@Base+0x5ba8>
    cc28:	add	r0, pc, r0
    cc2c:	bx	lr
    cc30:	ldr	r0, [pc, #4020]	; dbec <bt_compidtostr@@Base+0x5bac>
    cc34:	add	r0, pc, r0
    cc38:	bx	lr
    cc3c:	ldr	r0, [pc, #4012]	; dbf0 <bt_compidtostr@@Base+0x5bb0>
    cc40:	add	r0, pc, r0
    cc44:	bx	lr
    cc48:	ldr	r0, [pc, #4004]	; dbf4 <bt_compidtostr@@Base+0x5bb4>
    cc4c:	add	r0, pc, r0
    cc50:	bx	lr
    cc54:	ldr	r0, [pc, #3996]	; dbf8 <bt_compidtostr@@Base+0x5bb8>
    cc58:	add	r0, pc, r0
    cc5c:	bx	lr
    cc60:	ldr	r0, [pc, #3988]	; dbfc <bt_compidtostr@@Base+0x5bbc>
    cc64:	add	r0, pc, r0
    cc68:	bx	lr
    cc6c:	ldr	r0, [pc, #3980]	; dc00 <bt_compidtostr@@Base+0x5bc0>
    cc70:	add	r0, pc, r0
    cc74:	bx	lr
    cc78:	ldr	r0, [pc, #3972]	; dc04 <bt_compidtostr@@Base+0x5bc4>
    cc7c:	add	r0, pc, r0
    cc80:	bx	lr
    cc84:	ldr	r0, [pc, #3964]	; dc08 <bt_compidtostr@@Base+0x5bc8>
    cc88:	add	r0, pc, r0
    cc8c:	bx	lr
    cc90:	ldr	r0, [pc, #3956]	; dc0c <bt_compidtostr@@Base+0x5bcc>
    cc94:	add	r0, pc, r0
    cc98:	bx	lr
    cc9c:	ldr	r0, [pc, #3948]	; dc10 <bt_compidtostr@@Base+0x5bd0>
    cca0:	add	r0, pc, r0
    cca4:	bx	lr
    cca8:	ldr	r0, [pc, #3940]	; dc14 <bt_compidtostr@@Base+0x5bd4>
    ccac:	add	r0, pc, r0
    ccb0:	bx	lr
    ccb4:	ldr	r0, [pc, #3932]	; dc18 <bt_compidtostr@@Base+0x5bd8>
    ccb8:	add	r0, pc, r0
    ccbc:	bx	lr
    ccc0:	ldr	r0, [pc, #3924]	; dc1c <bt_compidtostr@@Base+0x5bdc>
    ccc4:	add	r0, pc, r0
    ccc8:	bx	lr
    cccc:	ldr	r0, [pc, #3916]	; dc20 <bt_compidtostr@@Base+0x5be0>
    ccd0:	add	r0, pc, r0
    ccd4:	bx	lr
    ccd8:	ldr	r0, [pc, #3908]	; dc24 <bt_compidtostr@@Base+0x5be4>
    ccdc:	add	r0, pc, r0
    cce0:	bx	lr
    cce4:	ldr	r0, [pc, #3900]	; dc28 <bt_compidtostr@@Base+0x5be8>
    cce8:	add	r0, pc, r0
    ccec:	bx	lr
    ccf0:	ldr	r0, [pc, #3892]	; dc2c <bt_compidtostr@@Base+0x5bec>
    ccf4:	add	r0, pc, r0
    ccf8:	bx	lr
    ccfc:	ldr	r0, [pc, #3884]	; dc30 <bt_compidtostr@@Base+0x5bf0>
    cd00:	add	r0, pc, r0
    cd04:	bx	lr
    cd08:	ldr	r0, [pc, #3876]	; dc34 <bt_compidtostr@@Base+0x5bf4>
    cd0c:	add	r0, pc, r0
    cd10:	bx	lr
    cd14:	ldr	r0, [pc, #3868]	; dc38 <bt_compidtostr@@Base+0x5bf8>
    cd18:	add	r0, pc, r0
    cd1c:	bx	lr
    cd20:	ldr	r0, [pc, #3860]	; dc3c <bt_compidtostr@@Base+0x5bfc>
    cd24:	add	r0, pc, r0
    cd28:	bx	lr
    cd2c:	ldr	r0, [pc, #3852]	; dc40 <bt_compidtostr@@Base+0x5c00>
    cd30:	add	r0, pc, r0
    cd34:	bx	lr
    cd38:	ldr	r0, [pc, #3844]	; dc44 <bt_compidtostr@@Base+0x5c04>
    cd3c:	add	r0, pc, r0
    cd40:	bx	lr
    cd44:	ldr	r0, [pc, #3836]	; dc48 <bt_compidtostr@@Base+0x5c08>
    cd48:	add	r0, pc, r0
    cd4c:	bx	lr
    cd50:	ldr	r0, [pc, #3828]	; dc4c <bt_compidtostr@@Base+0x5c0c>
    cd54:	add	r0, pc, r0
    cd58:	bx	lr
    cd5c:	ldr	r0, [pc, #3820]	; dc50 <bt_compidtostr@@Base+0x5c10>
    cd60:	add	r0, pc, r0
    cd64:	bx	lr
    cd68:	ldr	r0, [pc, #3812]	; dc54 <bt_compidtostr@@Base+0x5c14>
    cd6c:	add	r0, pc, r0
    cd70:	bx	lr
    cd74:	ldr	r0, [pc, #3804]	; dc58 <bt_compidtostr@@Base+0x5c18>
    cd78:	add	r0, pc, r0
    cd7c:	bx	lr
    cd80:	ldr	r0, [pc, #3796]	; dc5c <bt_compidtostr@@Base+0x5c1c>
    cd84:	add	r0, pc, r0
    cd88:	bx	lr
    cd8c:	ldr	r0, [pc, #3788]	; dc60 <bt_compidtostr@@Base+0x5c20>
    cd90:	add	r0, pc, r0
    cd94:	bx	lr
    cd98:	ldr	r0, [pc, #3780]	; dc64 <bt_compidtostr@@Base+0x5c24>
    cd9c:	add	r0, pc, r0
    cda0:	bx	lr
    cda4:	ldr	r0, [pc, #3772]	; dc68 <bt_compidtostr@@Base+0x5c28>
    cda8:	add	r0, pc, r0
    cdac:	bx	lr
    cdb0:	ldr	r0, [pc, #3764]	; dc6c <bt_compidtostr@@Base+0x5c2c>
    cdb4:	add	r0, pc, r0
    cdb8:	bx	lr
    cdbc:	ldr	r0, [pc, #3756]	; dc70 <bt_compidtostr@@Base+0x5c30>
    cdc0:	add	r0, pc, r0
    cdc4:	bx	lr
    cdc8:	ldr	r0, [pc, #3748]	; dc74 <bt_compidtostr@@Base+0x5c34>
    cdcc:	add	r0, pc, r0
    cdd0:	bx	lr
    cdd4:	ldr	r0, [pc, #3740]	; dc78 <bt_compidtostr@@Base+0x5c38>
    cdd8:	add	r0, pc, r0
    cddc:	bx	lr
    cde0:	ldr	r0, [pc, #3732]	; dc7c <bt_compidtostr@@Base+0x5c3c>
    cde4:	add	r0, pc, r0
    cde8:	bx	lr
    cdec:	ldr	r0, [pc, #3724]	; dc80 <bt_compidtostr@@Base+0x5c40>
    cdf0:	add	r0, pc, r0
    cdf4:	bx	lr
    cdf8:	ldr	r0, [pc, #3716]	; dc84 <bt_compidtostr@@Base+0x5c44>
    cdfc:	add	r0, pc, r0
    ce00:	bx	lr
    ce04:	ldr	r0, [pc, #3708]	; dc88 <bt_compidtostr@@Base+0x5c48>
    ce08:	add	r0, pc, r0
    ce0c:	bx	lr
    ce10:	ldr	r0, [pc, #3700]	; dc8c <bt_compidtostr@@Base+0x5c4c>
    ce14:	add	r0, pc, r0
    ce18:	bx	lr
    ce1c:	ldr	r0, [pc, #3692]	; dc90 <bt_compidtostr@@Base+0x5c50>
    ce20:	add	r0, pc, r0
    ce24:	bx	lr
    ce28:	ldr	r0, [pc, #3684]	; dc94 <bt_compidtostr@@Base+0x5c54>
    ce2c:	add	r0, pc, r0
    ce30:	bx	lr
    ce34:	ldr	r0, [pc, #3676]	; dc98 <bt_compidtostr@@Base+0x5c58>
    ce38:	add	r0, pc, r0
    ce3c:	bx	lr
    ce40:	ldr	r0, [pc, #3668]	; dc9c <bt_compidtostr@@Base+0x5c5c>
    ce44:	add	r0, pc, r0
    ce48:	bx	lr
    ce4c:	ldr	r0, [pc, #3660]	; dca0 <bt_compidtostr@@Base+0x5c60>
    ce50:	add	r0, pc, r0
    ce54:	bx	lr
    ce58:	ldr	r0, [pc, #3652]	; dca4 <bt_compidtostr@@Base+0x5c64>
    ce5c:	add	r0, pc, r0
    ce60:	bx	lr
    ce64:	ldr	r0, [pc, #3644]	; dca8 <bt_compidtostr@@Base+0x5c68>
    ce68:	add	r0, pc, r0
    ce6c:	bx	lr
    ce70:	ldr	r0, [pc, #3636]	; dcac <bt_compidtostr@@Base+0x5c6c>
    ce74:	add	r0, pc, r0
    ce78:	bx	lr
    ce7c:	ldr	r0, [pc, #3628]	; dcb0 <bt_compidtostr@@Base+0x5c70>
    ce80:	add	r0, pc, r0
    ce84:	bx	lr
    ce88:	ldr	r0, [pc, #3620]	; dcb4 <bt_compidtostr@@Base+0x5c74>
    ce8c:	add	r0, pc, r0
    ce90:	bx	lr
    ce94:	ldr	r0, [pc, #3612]	; dcb8 <bt_compidtostr@@Base+0x5c78>
    ce98:	add	r0, pc, r0
    ce9c:	bx	lr
    cea0:	ldr	r0, [pc, #3604]	; dcbc <bt_compidtostr@@Base+0x5c7c>
    cea4:	add	r0, pc, r0
    cea8:	bx	lr
    ceac:	ldr	r0, [pc, #3596]	; dcc0 <bt_compidtostr@@Base+0x5c80>
    ceb0:	add	r0, pc, r0
    ceb4:	bx	lr
    ceb8:	ldr	r0, [pc, #3588]	; dcc4 <bt_compidtostr@@Base+0x5c84>
    cebc:	add	r0, pc, r0
    cec0:	bx	lr
    cec4:	ldr	r0, [pc, #3580]	; dcc8 <bt_compidtostr@@Base+0x5c88>
    cec8:	add	r0, pc, r0
    cecc:	bx	lr
    ced0:	ldr	r0, [pc, #3572]	; dccc <bt_compidtostr@@Base+0x5c8c>
    ced4:	add	r0, pc, r0
    ced8:	bx	lr
    cedc:	ldr	r0, [pc, #3564]	; dcd0 <bt_compidtostr@@Base+0x5c90>
    cee0:	add	r0, pc, r0
    cee4:	bx	lr
    cee8:	ldr	r0, [pc, #3556]	; dcd4 <bt_compidtostr@@Base+0x5c94>
    ceec:	add	r0, pc, r0
    cef0:	bx	lr
    cef4:	ldr	r0, [pc, #3548]	; dcd8 <bt_compidtostr@@Base+0x5c98>
    cef8:	add	r0, pc, r0
    cefc:	bx	lr
    cf00:	ldr	r0, [pc, #3540]	; dcdc <bt_compidtostr@@Base+0x5c9c>
    cf04:	add	r0, pc, r0
    cf08:	bx	lr
    cf0c:	ldr	r0, [pc, #3532]	; dce0 <bt_compidtostr@@Base+0x5ca0>
    cf10:	add	r0, pc, r0
    cf14:	bx	lr
    cf18:	ldr	r0, [pc, #3524]	; dce4 <bt_compidtostr@@Base+0x5ca4>
    cf1c:	add	r0, pc, r0
    cf20:	bx	lr
    cf24:	ldr	r0, [pc, #3516]	; dce8 <bt_compidtostr@@Base+0x5ca8>
    cf28:	add	r0, pc, r0
    cf2c:	bx	lr
    cf30:	ldr	r0, [pc, #3508]	; dcec <bt_compidtostr@@Base+0x5cac>
    cf34:	add	r0, pc, r0
    cf38:	bx	lr
    cf3c:	ldr	r0, [pc, #3500]	; dcf0 <bt_compidtostr@@Base+0x5cb0>
    cf40:	add	r0, pc, r0
    cf44:	bx	lr
    cf48:	ldr	r0, [pc, #3492]	; dcf4 <bt_compidtostr@@Base+0x5cb4>
    cf4c:	add	r0, pc, r0
    cf50:	bx	lr
    cf54:	ldr	r0, [pc, #3484]	; dcf8 <bt_compidtostr@@Base+0x5cb8>
    cf58:	add	r0, pc, r0
    cf5c:	bx	lr
    cf60:	ldr	r0, [pc, #3476]	; dcfc <bt_compidtostr@@Base+0x5cbc>
    cf64:	add	r0, pc, r0
    cf68:	bx	lr
    cf6c:	ldr	r0, [pc, #3468]	; dd00 <bt_compidtostr@@Base+0x5cc0>
    cf70:	add	r0, pc, r0
    cf74:	bx	lr
    cf78:	ldr	r0, [pc, #3460]	; dd04 <bt_compidtostr@@Base+0x5cc4>
    cf7c:	add	r0, pc, r0
    cf80:	bx	lr
    cf84:	ldr	r0, [pc, #3452]	; dd08 <bt_compidtostr@@Base+0x5cc8>
    cf88:	add	r0, pc, r0
    cf8c:	bx	lr
    cf90:	ldr	r0, [pc, #3444]	; dd0c <bt_compidtostr@@Base+0x5ccc>
    cf94:	add	r0, pc, r0
    cf98:	bx	lr
    cf9c:	ldr	r0, [pc, #3436]	; dd10 <bt_compidtostr@@Base+0x5cd0>
    cfa0:	add	r0, pc, r0
    cfa4:	bx	lr
    cfa8:	ldr	r0, [pc, #3428]	; dd14 <bt_compidtostr@@Base+0x5cd4>
    cfac:	add	r0, pc, r0
    cfb0:	bx	lr
    cfb4:	ldr	r0, [pc, #3420]	; dd18 <bt_compidtostr@@Base+0x5cd8>
    cfb8:	add	r0, pc, r0
    cfbc:	bx	lr
    cfc0:	ldr	r0, [pc, #3412]	; dd1c <bt_compidtostr@@Base+0x5cdc>
    cfc4:	add	r0, pc, r0
    cfc8:	bx	lr
    cfcc:	ldr	r0, [pc, #3404]	; dd20 <bt_compidtostr@@Base+0x5ce0>
    cfd0:	add	r0, pc, r0
    cfd4:	bx	lr
    cfd8:	ldr	r0, [pc, #3396]	; dd24 <bt_compidtostr@@Base+0x5ce4>
    cfdc:	add	r0, pc, r0
    cfe0:	bx	lr
    cfe4:	ldr	r0, [pc, #3388]	; dd28 <bt_compidtostr@@Base+0x5ce8>
    cfe8:	add	r0, pc, r0
    cfec:	bx	lr
    cff0:	ldr	r0, [pc, #3380]	; dd2c <bt_compidtostr@@Base+0x5cec>
    cff4:	add	r0, pc, r0
    cff8:	bx	lr
    cffc:	ldr	r0, [pc, #3372]	; dd30 <bt_compidtostr@@Base+0x5cf0>
    d000:	add	r0, pc, r0
    d004:	bx	lr
    d008:	ldr	r0, [pc, #3364]	; dd34 <bt_compidtostr@@Base+0x5cf4>
    d00c:	add	r0, pc, r0
    d010:	bx	lr
    d014:	ldr	r0, [pc, #3356]	; dd38 <bt_compidtostr@@Base+0x5cf8>
    d018:	add	r0, pc, r0
    d01c:	bx	lr
    d020:	ldr	r0, [pc, #3348]	; dd3c <bt_compidtostr@@Base+0x5cfc>
    d024:	add	r0, pc, r0
    d028:	bx	lr
    d02c:	ldr	r0, [pc, #3340]	; dd40 <bt_compidtostr@@Base+0x5d00>
    d030:	add	r0, pc, r0
    d034:	bx	lr
    d038:	ldr	r0, [pc, #3332]	; dd44 <bt_compidtostr@@Base+0x5d04>
    d03c:	add	r0, pc, r0
    d040:	bx	lr
    d044:	ldr	r0, [pc, #3324]	; dd48 <bt_compidtostr@@Base+0x5d08>
    d048:	add	r0, pc, r0
    d04c:	bx	lr
    d050:	ldr	r0, [pc, #3316]	; dd4c <bt_compidtostr@@Base+0x5d0c>
    d054:	add	r0, pc, r0
    d058:	bx	lr
    d05c:	ldr	r0, [pc, #3308]	; dd50 <bt_compidtostr@@Base+0x5d10>
    d060:	add	r0, pc, r0
    d064:	bx	lr
    d068:	ldr	r0, [pc, #3300]	; dd54 <bt_compidtostr@@Base+0x5d14>
    d06c:	add	r0, pc, r0
    d070:	bx	lr
    d074:	ldr	r0, [pc, #3292]	; dd58 <bt_compidtostr@@Base+0x5d18>
    d078:	add	r0, pc, r0
    d07c:	bx	lr
    d080:	ldr	r0, [pc, #3284]	; dd5c <bt_compidtostr@@Base+0x5d1c>
    d084:	add	r0, pc, r0
    d088:	bx	lr
    d08c:	ldr	r0, [pc, #3276]	; dd60 <bt_compidtostr@@Base+0x5d20>
    d090:	add	r0, pc, r0
    d094:	bx	lr
    d098:	ldr	r0, [pc, #3268]	; dd64 <bt_compidtostr@@Base+0x5d24>
    d09c:	add	r0, pc, r0
    d0a0:	bx	lr
    d0a4:	ldr	r0, [pc, #3260]	; dd68 <bt_compidtostr@@Base+0x5d28>
    d0a8:	add	r0, pc, r0
    d0ac:	bx	lr
    d0b0:	ldr	r0, [pc, #3252]	; dd6c <bt_compidtostr@@Base+0x5d2c>
    d0b4:	add	r0, pc, r0
    d0b8:	bx	lr
    d0bc:	ldr	r0, [pc, #3244]	; dd70 <bt_compidtostr@@Base+0x5d30>
    d0c0:	add	r0, pc, r0
    d0c4:	bx	lr
    d0c8:	ldr	r0, [pc, #3236]	; dd74 <bt_compidtostr@@Base+0x5d34>
    d0cc:	add	r0, pc, r0
    d0d0:	bx	lr
    d0d4:	ldr	r0, [pc, #3228]	; dd78 <bt_compidtostr@@Base+0x5d38>
    d0d8:	add	r0, pc, r0
    d0dc:	bx	lr
    d0e0:	ldr	r0, [pc, #3220]	; dd7c <bt_compidtostr@@Base+0x5d3c>
    d0e4:	add	r0, pc, r0
    d0e8:	bx	lr
    d0ec:	ldr	r0, [pc, #3212]	; dd80 <bt_compidtostr@@Base+0x5d40>
    d0f0:	add	r0, pc, r0
    d0f4:	bx	lr
    d0f8:	ldr	r0, [pc, #3204]	; dd84 <bt_compidtostr@@Base+0x5d44>
    d0fc:	add	r0, pc, r0
    d100:	bx	lr
    d104:	ldr	r0, [pc, #3196]	; dd88 <bt_compidtostr@@Base+0x5d48>
    d108:	add	r0, pc, r0
    d10c:	bx	lr
    d110:	ldr	r0, [pc, #3188]	; dd8c <bt_compidtostr@@Base+0x5d4c>
    d114:	add	r0, pc, r0
    d118:	bx	lr
    d11c:	ldr	r0, [pc, #3180]	; dd90 <bt_compidtostr@@Base+0x5d50>
    d120:	add	r0, pc, r0
    d124:	bx	lr
    d128:	ldr	r0, [pc, #3172]	; dd94 <bt_compidtostr@@Base+0x5d54>
    d12c:	add	r0, pc, r0
    d130:	bx	lr
    d134:	ldr	r0, [pc, #3164]	; dd98 <bt_compidtostr@@Base+0x5d58>
    d138:	add	r0, pc, r0
    d13c:	bx	lr
    d140:	ldr	r0, [pc, #3156]	; dd9c <bt_compidtostr@@Base+0x5d5c>
    d144:	add	r0, pc, r0
    d148:	bx	lr
    d14c:	ldr	r0, [pc, #3148]	; dda0 <bt_compidtostr@@Base+0x5d60>
    d150:	add	r0, pc, r0
    d154:	bx	lr
    d158:	ldr	r0, [pc, #3140]	; dda4 <bt_compidtostr@@Base+0x5d64>
    d15c:	add	r0, pc, r0
    d160:	bx	lr
    d164:	ldr	r0, [pc, #3132]	; dda8 <bt_compidtostr@@Base+0x5d68>
    d168:	add	r0, pc, r0
    d16c:	bx	lr
    d170:	ldr	r0, [pc, #3124]	; ddac <bt_compidtostr@@Base+0x5d6c>
    d174:	add	r0, pc, r0
    d178:	bx	lr
    d17c:	ldr	r0, [pc, #3116]	; ddb0 <bt_compidtostr@@Base+0x5d70>
    d180:	add	r0, pc, r0
    d184:	bx	lr
    d188:	ldr	r0, [pc, #3108]	; ddb4 <bt_compidtostr@@Base+0x5d74>
    d18c:	add	r0, pc, r0
    d190:	bx	lr
    d194:	ldr	r0, [pc, #3100]	; ddb8 <bt_compidtostr@@Base+0x5d78>
    d198:	add	r0, pc, r0
    d19c:	bx	lr
    d1a0:	ldr	r0, [pc, #3092]	; ddbc <bt_compidtostr@@Base+0x5d7c>
    d1a4:	add	r0, pc, r0
    d1a8:	bx	lr
    d1ac:	ldr	r0, [pc, #3084]	; ddc0 <bt_compidtostr@@Base+0x5d80>
    d1b0:	add	r0, pc, r0
    d1b4:	bx	lr
    d1b8:	ldr	r0, [pc, #3076]	; ddc4 <bt_compidtostr@@Base+0x5d84>
    d1bc:	add	r0, pc, r0
    d1c0:	bx	lr
    d1c4:	ldr	r0, [pc, #3068]	; ddc8 <bt_compidtostr@@Base+0x5d88>
    d1c8:	add	r0, pc, r0
    d1cc:	bx	lr
    d1d0:	ldr	r0, [pc, #3060]	; ddcc <bt_compidtostr@@Base+0x5d8c>
    d1d4:	add	r0, pc, r0
    d1d8:	bx	lr
    d1dc:	ldr	r0, [pc, #3052]	; ddd0 <bt_compidtostr@@Base+0x5d90>
    d1e0:	add	r0, pc, r0
    d1e4:	bx	lr
    d1e8:	ldr	r0, [pc, #3044]	; ddd4 <bt_compidtostr@@Base+0x5d94>
    d1ec:	add	r0, pc, r0
    d1f0:	bx	lr
    d1f4:	ldr	r0, [pc, #3036]	; ddd8 <bt_compidtostr@@Base+0x5d98>
    d1f8:	add	r0, pc, r0
    d1fc:	bx	lr
    d200:	ldr	r0, [pc, #3028]	; dddc <bt_compidtostr@@Base+0x5d9c>
    d204:	add	r0, pc, r0
    d208:	bx	lr
    d20c:	ldr	r0, [pc, #3020]	; dde0 <bt_compidtostr@@Base+0x5da0>
    d210:	add	r0, pc, r0
    d214:	bx	lr
    d218:	ldr	r0, [pc, #3012]	; dde4 <bt_compidtostr@@Base+0x5da4>
    d21c:	add	r0, pc, r0
    d220:	bx	lr
    d224:	ldr	r0, [pc, #3004]	; dde8 <bt_compidtostr@@Base+0x5da8>
    d228:	add	r0, pc, r0
    d22c:	bx	lr
    d230:	ldr	r0, [pc, #2996]	; ddec <bt_compidtostr@@Base+0x5dac>
    d234:	add	r0, pc, r0
    d238:	bx	lr
    d23c:	ldr	r0, [pc, #2988]	; ddf0 <bt_compidtostr@@Base+0x5db0>
    d240:	add	r0, pc, r0
    d244:	bx	lr
    d248:	ldr	r0, [pc, #2980]	; ddf4 <bt_compidtostr@@Base+0x5db4>
    d24c:	add	r0, pc, r0
    d250:	bx	lr
    d254:	ldr	r0, [pc, #2972]	; ddf8 <bt_compidtostr@@Base+0x5db8>
    d258:	add	r0, pc, r0
    d25c:	bx	lr
    d260:	ldr	r0, [pc, #2964]	; ddfc <bt_compidtostr@@Base+0x5dbc>
    d264:	add	r0, pc, r0
    d268:	bx	lr
    d26c:	ldr	r0, [pc, #2956]	; de00 <bt_compidtostr@@Base+0x5dc0>
    d270:	add	r0, pc, r0
    d274:	bx	lr
    d278:	ldr	r0, [pc, #2948]	; de04 <bt_compidtostr@@Base+0x5dc4>
    d27c:	add	r0, pc, r0
    d280:	bx	lr
    d284:	ldr	r0, [pc, #2940]	; de08 <bt_compidtostr@@Base+0x5dc8>
    d288:	add	r0, pc, r0
    d28c:	bx	lr
    d290:	ldr	r0, [pc, #2932]	; de0c <bt_compidtostr@@Base+0x5dcc>
    d294:	add	r0, pc, r0
    d298:	bx	lr
    d29c:	ldr	r0, [pc, #2924]	; de10 <bt_compidtostr@@Base+0x5dd0>
    d2a0:	add	r0, pc, r0
    d2a4:	bx	lr
    d2a8:	ldr	r0, [pc, #2916]	; de14 <bt_compidtostr@@Base+0x5dd4>
    d2ac:	add	r0, pc, r0
    d2b0:	bx	lr
    d2b4:	ldr	r0, [pc, #2908]	; de18 <bt_compidtostr@@Base+0x5dd8>
    d2b8:	add	r0, pc, r0
    d2bc:	bx	lr
    d2c0:	ldr	r0, [pc, #2900]	; de1c <bt_compidtostr@@Base+0x5ddc>
    d2c4:	add	r0, pc, r0
    d2c8:	bx	lr
    d2cc:	ldr	r0, [pc, #2892]	; de20 <bt_compidtostr@@Base+0x5de0>
    d2d0:	add	r0, pc, r0
    d2d4:	bx	lr
    d2d8:	ldr	r0, [pc, #2884]	; de24 <bt_compidtostr@@Base+0x5de4>
    d2dc:	add	r0, pc, r0
    d2e0:	bx	lr
    d2e4:	ldr	r0, [pc, #2876]	; de28 <bt_compidtostr@@Base+0x5de8>
    d2e8:	add	r0, pc, r0
    d2ec:	bx	lr
    d2f0:	ldr	r0, [pc, #2868]	; de2c <bt_compidtostr@@Base+0x5dec>
    d2f4:	add	r0, pc, r0
    d2f8:	bx	lr
    d2fc:	ldr	r0, [pc, #2860]	; de30 <bt_compidtostr@@Base+0x5df0>
    d300:	add	r0, pc, r0
    d304:	bx	lr
    d308:	ldr	r0, [pc, #2852]	; de34 <bt_compidtostr@@Base+0x5df4>
    d30c:	add	r0, pc, r0
    d310:	bx	lr
    d314:	ldr	r0, [pc, #2844]	; de38 <bt_compidtostr@@Base+0x5df8>
    d318:	add	r0, pc, r0
    d31c:	bx	lr
    d320:	ldr	r0, [pc, #2836]	; de3c <bt_compidtostr@@Base+0x5dfc>
    d324:	add	r0, pc, r0
    d328:	bx	lr
    d32c:	ldr	r0, [pc, #2828]	; de40 <bt_compidtostr@@Base+0x5e00>
    d330:	add	r0, pc, r0
    d334:	bx	lr
    d338:	ldr	r0, [pc, #2820]	; de44 <bt_compidtostr@@Base+0x5e04>
    d33c:	add	r0, pc, r0
    d340:	bx	lr
    d344:	ldr	r0, [pc, #2812]	; de48 <bt_compidtostr@@Base+0x5e08>
    d348:	add	r0, pc, r0
    d34c:	bx	lr
    d350:	ldr	r0, [pc, #2804]	; de4c <bt_compidtostr@@Base+0x5e0c>
    d354:	add	r0, pc, r0
    d358:	bx	lr
    d35c:	ldr	r0, [pc, #2796]	; de50 <bt_compidtostr@@Base+0x5e10>
    d360:	add	r0, pc, r0
    d364:	bx	lr
    d368:	ldr	r0, [pc, #2788]	; de54 <bt_compidtostr@@Base+0x5e14>
    d36c:	add	r0, pc, r0
    d370:	bx	lr
    d374:	ldr	r0, [pc, #2780]	; de58 <bt_compidtostr@@Base+0x5e18>
    d378:	add	r0, pc, r0
    d37c:	bx	lr
    d380:	ldr	r0, [pc, #2772]	; de5c <bt_compidtostr@@Base+0x5e1c>
    d384:	add	r0, pc, r0
    d388:	bx	lr
    d38c:	ldr	r0, [pc, #2764]	; de60 <bt_compidtostr@@Base+0x5e20>
    d390:	add	r0, pc, r0
    d394:	bx	lr
    d398:	ldr	r0, [pc, #2756]	; de64 <bt_compidtostr@@Base+0x5e24>
    d39c:	add	r0, pc, r0
    d3a0:	bx	lr
    d3a4:	ldr	r0, [pc, #2748]	; de68 <bt_compidtostr@@Base+0x5e28>
    d3a8:	add	r0, pc, r0
    d3ac:	bx	lr
    d3b0:	ldr	r0, [pc, #2740]	; de6c <bt_compidtostr@@Base+0x5e2c>
    d3b4:	add	r0, pc, r0
    d3b8:	bx	lr
    d3bc:	ldr	r0, [pc, #2732]	; de70 <bt_compidtostr@@Base+0x5e30>
    d3c0:	add	r0, pc, r0
    d3c4:	bx	lr
    d3c8:	ldr	r0, [pc, #2724]	; de74 <bt_compidtostr@@Base+0x5e34>
    d3cc:	add	r0, pc, r0
    d3d0:	bx	lr
    d3d4:	ldr	r0, [pc, #2716]	; de78 <bt_compidtostr@@Base+0x5e38>
    d3d8:	add	r0, pc, r0
    d3dc:	bx	lr
    d3e0:	ldr	r0, [pc, #2708]	; de7c <bt_compidtostr@@Base+0x5e3c>
    d3e4:	add	r0, pc, r0
    d3e8:	bx	lr
    d3ec:	ldr	r0, [pc, #2700]	; de80 <bt_compidtostr@@Base+0x5e40>
    d3f0:	add	r0, pc, r0
    d3f4:	bx	lr
    d3f8:	ldr	r0, [pc, #2692]	; de84 <bt_compidtostr@@Base+0x5e44>
    d3fc:	add	r0, pc, r0
    d400:	bx	lr
    d404:	ldr	r0, [pc, #2684]	; de88 <bt_compidtostr@@Base+0x5e48>
    d408:	add	r0, pc, r0
    d40c:	bx	lr
    d410:	ldr	r0, [pc, #2676]	; de8c <bt_compidtostr@@Base+0x5e4c>
    d414:	add	r0, pc, r0
    d418:	bx	lr
    d41c:	ldr	r0, [pc, #2668]	; de90 <bt_compidtostr@@Base+0x5e50>
    d420:	add	r0, pc, r0
    d424:	bx	lr
    d428:	ldr	r0, [pc, #2660]	; de94 <bt_compidtostr@@Base+0x5e54>
    d42c:	add	r0, pc, r0
    d430:	bx	lr
    d434:	ldr	r0, [pc, #2652]	; de98 <bt_compidtostr@@Base+0x5e58>
    d438:	add	r0, pc, r0
    d43c:	bx	lr
    d440:	ldr	r0, [pc, #2644]	; de9c <bt_compidtostr@@Base+0x5e5c>
    d444:	add	r0, pc, r0
    d448:	bx	lr
    d44c:	ldr	r0, [pc, #2636]	; dea0 <bt_compidtostr@@Base+0x5e60>
    d450:	add	r0, pc, r0
    d454:	bx	lr
    d458:	ldr	r0, [pc, #2628]	; dea4 <bt_compidtostr@@Base+0x5e64>
    d45c:	add	r0, pc, r0
    d460:	bx	lr
    d464:	ldr	r0, [pc, #2620]	; dea8 <bt_compidtostr@@Base+0x5e68>
    d468:	add	r0, pc, r0
    d46c:	bx	lr
    d470:	ldr	r0, [pc, #2612]	; deac <bt_compidtostr@@Base+0x5e6c>
    d474:	add	r0, pc, r0
    d478:	bx	lr
    d47c:	ldr	r0, [pc, #2604]	; deb0 <bt_compidtostr@@Base+0x5e70>
    d480:	add	r0, pc, r0
    d484:	bx	lr
    d488:	ldr	r0, [pc, #2596]	; deb4 <bt_compidtostr@@Base+0x5e74>
    d48c:	add	r0, pc, r0
    d490:	bx	lr
    d494:	ldr	r0, [pc, #2588]	; deb8 <bt_compidtostr@@Base+0x5e78>
    d498:	add	r0, pc, r0
    d49c:	bx	lr
    d4a0:	ldr	r0, [pc, #2580]	; debc <bt_compidtostr@@Base+0x5e7c>
    d4a4:	add	r0, pc, r0
    d4a8:	bx	lr
    d4ac:	ldr	r0, [pc, #2572]	; dec0 <bt_compidtostr@@Base+0x5e80>
    d4b0:	add	r0, pc, r0
    d4b4:	bx	lr
    d4b8:	ldr	r0, [pc, #2564]	; dec4 <bt_compidtostr@@Base+0x5e84>
    d4bc:	add	r0, pc, r0
    d4c0:	bx	lr
    d4c4:	ldr	r0, [pc, #2556]	; dec8 <bt_compidtostr@@Base+0x5e88>
    d4c8:	add	r0, pc, r0
    d4cc:	bx	lr
    d4d0:	ldr	r0, [pc, #2548]	; decc <bt_compidtostr@@Base+0x5e8c>
    d4d4:	add	r0, pc, r0
    d4d8:	bx	lr
    d4dc:	ldr	r0, [pc, #2540]	; ded0 <bt_compidtostr@@Base+0x5e90>
    d4e0:	add	r0, pc, r0
    d4e4:	bx	lr
    d4e8:	ldr	r0, [pc, #2532]	; ded4 <bt_compidtostr@@Base+0x5e94>
    d4ec:	add	r0, pc, r0
    d4f0:	bx	lr
    d4f4:	ldr	r0, [pc, #2524]	; ded8 <bt_compidtostr@@Base+0x5e98>
    d4f8:	add	r0, pc, r0
    d4fc:	bx	lr
    d500:	ldr	r0, [pc, #2516]	; dedc <bt_compidtostr@@Base+0x5e9c>
    d504:	add	r0, pc, r0
    d508:	bx	lr
    d50c:	ldr	r0, [pc, #2508]	; dee0 <bt_compidtostr@@Base+0x5ea0>
    d510:	add	r0, pc, r0
    d514:	bx	lr
    d518:	ldr	r0, [pc, #2500]	; dee4 <bt_compidtostr@@Base+0x5ea4>
    d51c:	add	r0, pc, r0
    d520:	bx	lr
    d524:	ldr	r0, [pc, #2492]	; dee8 <bt_compidtostr@@Base+0x5ea8>
    d528:	add	r0, pc, r0
    d52c:	bx	lr
    d530:	ldr	r0, [pc, #2484]	; deec <bt_compidtostr@@Base+0x5eac>
    d534:	add	r0, pc, r0
    d538:	bx	lr
    d53c:	ldr	r0, [pc, #2476]	; def0 <bt_compidtostr@@Base+0x5eb0>
    d540:	add	r0, pc, r0
    d544:	bx	lr
    d548:	ldr	r0, [pc, #2468]	; def4 <bt_compidtostr@@Base+0x5eb4>
    d54c:	add	r0, pc, r0
    d550:	bx	lr
    d554:	ldr	r0, [pc, #2460]	; def8 <bt_compidtostr@@Base+0x5eb8>
    d558:	add	r0, pc, r0
    d55c:	bx	lr
    d560:	ldr	r0, [pc, #2452]	; defc <bt_compidtostr@@Base+0x5ebc>
    d564:	add	r0, pc, r0
    d568:	bx	lr
    d56c:	ldr	r0, [pc, #2444]	; df00 <bt_compidtostr@@Base+0x5ec0>
    d570:	add	r0, pc, r0
    d574:	bx	lr
    d578:	ldr	r0, [pc, #2436]	; df04 <bt_compidtostr@@Base+0x5ec4>
    d57c:	add	r0, pc, r0
    d580:	bx	lr
    d584:	ldr	r0, [pc, #2428]	; df08 <bt_compidtostr@@Base+0x5ec8>
    d588:	add	r0, pc, r0
    d58c:	bx	lr
    d590:	ldr	r0, [pc, #2420]	; df0c <bt_compidtostr@@Base+0x5ecc>
    d594:	add	r0, pc, r0
    d598:	bx	lr
    d59c:	ldr	r0, [pc, #2412]	; df10 <bt_compidtostr@@Base+0x5ed0>
    d5a0:	add	r0, pc, r0
    d5a4:	bx	lr
    d5a8:	ldr	r0, [pc, #2404]	; df14 <bt_compidtostr@@Base+0x5ed4>
    d5ac:	add	r0, pc, r0
    d5b0:	bx	lr
    d5b4:	ldr	r0, [pc, #2396]	; df18 <bt_compidtostr@@Base+0x5ed8>
    d5b8:	add	r0, pc, r0
    d5bc:	bx	lr
    d5c0:	ldr	r0, [pc, #2388]	; df1c <bt_compidtostr@@Base+0x5edc>
    d5c4:	add	r0, pc, r0
    d5c8:	bx	lr
    d5cc:	ldr	r0, [pc, #2380]	; df20 <bt_compidtostr@@Base+0x5ee0>
    d5d0:	add	r0, pc, r0
    d5d4:	bx	lr
    d5d8:	ldr	r0, [pc, #2372]	; df24 <bt_compidtostr@@Base+0x5ee4>
    d5dc:	add	r0, pc, r0
    d5e0:	bx	lr
    d5e4:	ldr	r0, [pc, #2364]	; df28 <bt_compidtostr@@Base+0x5ee8>
    d5e8:	add	r0, pc, r0
    d5ec:	bx	lr
    d5f0:	ldr	r0, [pc, #2356]	; df2c <bt_compidtostr@@Base+0x5eec>
    d5f4:	add	r0, pc, r0
    d5f8:	bx	lr
    d5fc:	ldr	r0, [pc, #2348]	; df30 <bt_compidtostr@@Base+0x5ef0>
    d600:	add	r0, pc, r0
    d604:	bx	lr
    d608:	ldr	r0, [pc, #2340]	; df34 <bt_compidtostr@@Base+0x5ef4>
    d60c:	add	r0, pc, r0
    d610:	bx	lr
    d614:	ldr	r0, [pc, #2332]	; df38 <bt_compidtostr@@Base+0x5ef8>
    d618:	add	r0, pc, r0
    d61c:	bx	lr
    d620:	ldr	r0, [pc, #2324]	; df3c <bt_compidtostr@@Base+0x5efc>
    d624:	add	r0, pc, r0
    d628:	bx	lr
    d62c:	ldr	r0, [pc, #2316]	; df40 <bt_compidtostr@@Base+0x5f00>
    d630:	add	r0, pc, r0
    d634:	bx	lr
    d638:	ldr	r0, [pc, #2308]	; df44 <bt_compidtostr@@Base+0x5f04>
    d63c:	add	r0, pc, r0
    d640:	bx	lr
    d644:	ldr	r0, [pc, #2300]	; df48 <bt_compidtostr@@Base+0x5f08>
    d648:	add	r0, pc, r0
    d64c:	bx	lr
    d650:	ldr	r0, [pc, #2292]	; df4c <bt_compidtostr@@Base+0x5f0c>
    d654:	add	r0, pc, r0
    d658:	bx	lr
    d65c:	ldr	r0, [pc, #2284]	; df50 <bt_compidtostr@@Base+0x5f10>
    d660:	add	r0, pc, r0
    d664:	bx	lr
    d668:	ldr	r0, [pc, #2276]	; df54 <bt_compidtostr@@Base+0x5f14>
    d66c:	add	r0, pc, r0
    d670:	bx	lr
    d674:	ldr	r0, [pc, #2268]	; df58 <bt_compidtostr@@Base+0x5f18>
    d678:	add	r0, pc, r0
    d67c:	bx	lr
    d680:	ldr	r0, [pc, #2260]	; df5c <bt_compidtostr@@Base+0x5f1c>
    d684:	add	r0, pc, r0
    d688:	bx	lr
    d68c:	ldr	r0, [pc, #2252]	; df60 <bt_compidtostr@@Base+0x5f20>
    d690:	add	r0, pc, r0
    d694:	bx	lr
    d698:	ldr	r0, [pc, #2244]	; df64 <bt_compidtostr@@Base+0x5f24>
    d69c:	add	r0, pc, r0
    d6a0:	bx	lr
    d6a4:	ldr	r0, [pc, #2236]	; df68 <bt_compidtostr@@Base+0x5f28>
    d6a8:	add	r0, pc, r0
    d6ac:	bx	lr
    d6b0:	ldr	r0, [pc, #2228]	; df6c <bt_compidtostr@@Base+0x5f2c>
    d6b4:	add	r0, pc, r0
    d6b8:	bx	lr
    d6bc:	ldr	r0, [pc, #2220]	; df70 <bt_compidtostr@@Base+0x5f30>
    d6c0:	add	r0, pc, r0
    d6c4:	bx	lr
    d6c8:	ldr	r0, [pc, #2212]	; df74 <bt_compidtostr@@Base+0x5f34>
    d6cc:	add	r0, pc, r0
    d6d0:	bx	lr
    d6d4:	ldr	r0, [pc, #2204]	; df78 <bt_compidtostr@@Base+0x5f38>
    d6d8:	add	r0, pc, r0
    d6dc:	bx	lr
    d6e0:	ldr	r0, [pc, #2196]	; df7c <bt_compidtostr@@Base+0x5f3c>
    d6e4:	add	r0, pc, r0
    d6e8:	bx	lr
    d6ec:	ldr	r0, [pc, #2188]	; df80 <bt_compidtostr@@Base+0x5f40>
    d6f0:	add	r0, pc, r0
    d6f4:	bx	lr
    d6f8:	ldr	r0, [pc, #2180]	; df84 <bt_compidtostr@@Base+0x5f44>
    d6fc:	add	r0, pc, r0
    d700:	bx	lr
    d704:	ldr	r0, [pc, #2172]	; df88 <bt_compidtostr@@Base+0x5f48>
    d708:	add	r0, pc, r0
    d70c:	bx	lr
    d710:	ldr	r0, [pc, #2164]	; df8c <bt_compidtostr@@Base+0x5f4c>
    d714:	add	r0, pc, r0
    d718:	bx	lr
    d71c:	ldr	r0, [pc, #2156]	; df90 <bt_compidtostr@@Base+0x5f50>
    d720:	add	r0, pc, r0
    d724:	bx	lr
    d728:	ldr	r0, [pc, #2148]	; df94 <bt_compidtostr@@Base+0x5f54>
    d72c:	add	r0, pc, r0
    d730:	bx	lr
    d734:	ldr	r0, [pc, #2140]	; df98 <bt_compidtostr@@Base+0x5f58>
    d738:	add	r0, pc, r0
    d73c:	bx	lr
    d740:	ldr	r0, [pc, #2132]	; df9c <bt_compidtostr@@Base+0x5f5c>
    d744:	add	r0, pc, r0
    d748:	bx	lr
    d74c:	ldr	r0, [pc, #2124]	; dfa0 <bt_compidtostr@@Base+0x5f60>
    d750:	add	r0, pc, r0
    d754:	bx	lr
    d758:	ldr	r0, [pc, #2116]	; dfa4 <bt_compidtostr@@Base+0x5f64>
    d75c:	add	r0, pc, r0
    d760:	bx	lr
    d764:	ldr	r0, [pc, #2108]	; dfa8 <bt_compidtostr@@Base+0x5f68>
    d768:	add	r0, pc, r0
    d76c:	bx	lr
    d770:	ldr	r0, [pc, #2100]	; dfac <bt_compidtostr@@Base+0x5f6c>
    d774:	add	r0, pc, r0
    d778:	bx	lr
    d77c:	ldr	r0, [pc, #2092]	; dfb0 <bt_compidtostr@@Base+0x5f70>
    d780:	add	r0, pc, r0
    d784:	bx	lr
    d788:	ldr	r0, [pc, #2084]	; dfb4 <bt_compidtostr@@Base+0x5f74>
    d78c:	add	r0, pc, r0
    d790:	bx	lr
    d794:	ldr	r0, [pc, #2076]	; dfb8 <bt_compidtostr@@Base+0x5f78>
    d798:	add	r0, pc, r0
    d79c:	bx	lr
    d7a0:	ldr	r0, [pc, #2068]	; dfbc <bt_compidtostr@@Base+0x5f7c>
    d7a4:	add	r0, pc, r0
    d7a8:	bx	lr
    d7ac:	ldr	r0, [pc, #2060]	; dfc0 <bt_compidtostr@@Base+0x5f80>
    d7b0:	add	r0, pc, r0
    d7b4:	bx	lr
    d7b8:	ldr	r0, [pc, #2052]	; dfc4 <bt_compidtostr@@Base+0x5f84>
    d7bc:	add	r0, pc, r0
    d7c0:	bx	lr
    d7c4:	ldr	r0, [pc, #2044]	; dfc8 <bt_compidtostr@@Base+0x5f88>
    d7c8:	add	r0, pc, r0
    d7cc:	bx	lr
    d7d0:	ldr	r0, [pc, #2036]	; dfcc <bt_compidtostr@@Base+0x5f8c>
    d7d4:	add	r0, pc, r0
    d7d8:	bx	lr
    d7dc:	ldr	r0, [pc, #2028]	; dfd0 <bt_compidtostr@@Base+0x5f90>
    d7e0:	add	r0, pc, r0
    d7e4:	bx	lr
    d7e8:	ldr	r0, [pc, #2020]	; dfd4 <bt_compidtostr@@Base+0x5f94>
    d7ec:	add	r0, pc, r0
    d7f0:	bx	lr
    d7f4:	ldr	r0, [pc, #2012]	; dfd8 <bt_compidtostr@@Base+0x5f98>
    d7f8:	add	r0, pc, r0
    d7fc:	bx	lr
    d800:	ldr	r0, [pc, #2004]	; dfdc <bt_compidtostr@@Base+0x5f9c>
    d804:	add	r0, pc, r0
    d808:	bx	lr
    d80c:	ldr	r0, [pc, #1996]	; dfe0 <bt_compidtostr@@Base+0x5fa0>
    d810:	add	r0, pc, r0
    d814:	bx	lr
    d818:	ldr	r0, [pc, #1988]	; dfe4 <bt_compidtostr@@Base+0x5fa4>
    d81c:	add	r0, pc, r0
    d820:	bx	lr
    d824:	ldr	r0, [pc, #1980]	; dfe8 <bt_compidtostr@@Base+0x5fa8>
    d828:	add	r0, pc, r0
    d82c:	bx	lr
    d830:	ldr	r0, [pc, #1972]	; dfec <bt_compidtostr@@Base+0x5fac>
    d834:	add	r0, pc, r0
    d838:	bx	lr
    d83c:	ldr	r0, [pc, #1964]	; dff0 <bt_compidtostr@@Base+0x5fb0>
    d840:	add	r0, pc, r0
    d844:	bx	lr
    d848:	ldr	r0, [pc, #1956]	; dff4 <bt_compidtostr@@Base+0x5fb4>
    d84c:	add	r0, pc, r0
    d850:	bx	lr
    d854:	ldr	r0, [pc, #1948]	; dff8 <bt_compidtostr@@Base+0x5fb8>
    d858:	add	r0, pc, r0
    d85c:	bx	lr
    d860:	ldr	r0, [pc, #1940]	; dffc <bt_compidtostr@@Base+0x5fbc>
    d864:	add	r0, pc, r0
    d868:	bx	lr
    d86c:	ldr	r0, [pc, #1932]	; e000 <bt_compidtostr@@Base+0x5fc0>
    d870:	add	r0, pc, r0
    d874:	bx	lr
    d878:	ldr	r0, [pc, #1924]	; e004 <bt_compidtostr@@Base+0x5fc4>
    d87c:	add	r0, pc, r0
    d880:	bx	lr
    d884:	ldr	r0, [pc, #1916]	; e008 <bt_compidtostr@@Base+0x5fc8>
    d888:	add	r0, pc, r0
    d88c:	bx	lr
    d890:	ldr	r0, [pc, #1908]	; e00c <bt_compidtostr@@Base+0x5fcc>
    d894:	add	r0, pc, r0
    d898:	bx	lr
    d89c:	ldr	r0, [pc, #1900]	; e010 <bt_compidtostr@@Base+0x5fd0>
    d8a0:	add	r0, pc, r0
    d8a4:	bx	lr
    d8a8:	ldr	r0, [pc, #1892]	; e014 <bt_compidtostr@@Base+0x5fd4>
    d8ac:	add	r0, pc, r0
    d8b0:	bx	lr
    d8b4:	ldr	r0, [pc, #1884]	; e018 <bt_compidtostr@@Base+0x5fd8>
    d8b8:	add	r0, pc, r0
    d8bc:	bx	lr
    d8c0:	ldr	r0, [pc, #1876]	; e01c <bt_compidtostr@@Base+0x5fdc>
    d8c4:	add	r0, pc, r0
    d8c8:	bx	lr
    d8cc:	ldr	r0, [pc, #1868]	; e020 <bt_compidtostr@@Base+0x5fe0>
    d8d0:	add	r0, pc, r0
    d8d4:	bx	lr
    d8d8:	ldr	r0, [pc, #1860]	; e024 <bt_compidtostr@@Base+0x5fe4>
    d8dc:	add	r0, pc, r0
    d8e0:	bx	lr
    d8e4:	ldr	r0, [pc, #1852]	; e028 <bt_compidtostr@@Base+0x5fe8>
    d8e8:	add	r0, pc, r0
    d8ec:	bx	lr
    d8f0:	ldr	r0, [pc, #1844]	; e02c <bt_compidtostr@@Base+0x5fec>
    d8f4:	add	r0, pc, r0
    d8f8:	bx	lr
    d8fc:	ldr	r0, [pc, #1836]	; e030 <bt_compidtostr@@Base+0x5ff0>
    d900:	add	r0, pc, r0
    d904:	bx	lr
    d908:	ldr	r0, [pc, #1828]	; e034 <bt_compidtostr@@Base+0x5ff4>
    d90c:	add	r0, pc, r0
    d910:	bx	lr
    d914:	ldr	r0, [pc, #1820]	; e038 <bt_compidtostr@@Base+0x5ff8>
    d918:	add	r0, pc, r0
    d91c:	bx	lr
    d920:	ldr	r0, [pc, #1812]	; e03c <bt_compidtostr@@Base+0x5ffc>
    d924:	add	r0, pc, r0
    d928:	bx	lr
    d92c:	ldr	r0, [pc, #1804]	; e040 <bt_compidtostr@@Base+0x6000>
    d930:	add	r0, pc, r0
    d934:	bx	lr
    d938:	ldr	r0, [pc, #1796]	; e044 <bt_compidtostr@@Base+0x6004>
    d93c:	add	r0, pc, r0
    d940:	bx	lr
    d944:	ldr	r0, [pc, #1788]	; e048 <bt_compidtostr@@Base+0x6008>
    d948:	add	r0, pc, r0
    d94c:	bx	lr
    d950:	ldr	r0, [pc, #1780]	; e04c <bt_compidtostr@@Base+0x600c>
    d954:	add	r0, pc, r0
    d958:	bx	lr
    d95c:	ldr	r0, [pc, #1772]	; e050 <bt_compidtostr@@Base+0x6010>
    d960:	add	r0, pc, r0
    d964:	bx	lr
    d968:	ldr	r0, [pc, #1764]	; e054 <bt_compidtostr@@Base+0x6014>
    d96c:	add	r0, pc, r0
    d970:	bx	lr
    d974:	ldr	r0, [pc, #1756]	; e058 <bt_compidtostr@@Base+0x6018>
    d978:	add	r0, pc, r0
    d97c:	bx	lr
    d980:	ldr	r0, [pc, #1748]	; e05c <bt_compidtostr@@Base+0x601c>
    d984:	add	r0, pc, r0
    d988:	bx	lr
    d98c:	ldr	r0, [pc, #1740]	; e060 <bt_compidtostr@@Base+0x6020>
    d990:	add	r0, pc, r0
    d994:	bx	lr
    d998:	ldr	r0, [pc, #1732]	; e064 <bt_compidtostr@@Base+0x6024>
    d99c:	add	r0, pc, r0
    d9a0:	bx	lr
    d9a4:	ldr	r0, [pc, #1724]	; e068 <bt_compidtostr@@Base+0x6028>
    d9a8:	add	r0, pc, r0
    d9ac:	bx	lr
    d9b0:	ldr	r0, [pc, #1716]	; e06c <bt_compidtostr@@Base+0x602c>
    d9b4:	add	r0, pc, r0
    d9b8:	bx	lr
    d9bc:	ldr	r0, [pc, #1708]	; e070 <bt_compidtostr@@Base+0x6030>
    d9c0:	add	r0, pc, r0
    d9c4:	bx	lr
    d9c8:	ldr	r0, [pc, #1700]	; e074 <bt_compidtostr@@Base+0x6034>
    d9cc:	add	r0, pc, r0
    d9d0:	bx	lr
    d9d4:	ldr	r0, [pc, #1692]	; e078 <bt_compidtostr@@Base+0x6038>
    d9d8:	add	r0, pc, r0
    d9dc:	bx	lr
    d9e0:	ldr	r0, [pc, #1684]	; e07c <bt_compidtostr@@Base+0x603c>
    d9e4:	add	r0, pc, r0
    d9e8:	bx	lr
    d9ec:	ldr	r0, [pc, #1676]	; e080 <bt_compidtostr@@Base+0x6040>
    d9f0:	add	r0, pc, r0
    d9f4:	bx	lr
    d9f8:	ldr	r0, [pc, #1668]	; e084 <bt_compidtostr@@Base+0x6044>
    d9fc:	add	r0, pc, r0
    da00:	bx	lr
    da04:	ldr	r0, [pc, #1660]	; e088 <bt_compidtostr@@Base+0x6048>
    da08:	add	r0, pc, r0
    da0c:	bx	lr
    da10:	ldr	r0, [pc, #1652]	; e08c <bt_compidtostr@@Base+0x604c>
    da14:	add	r0, pc, r0
    da18:	bx	lr
    da1c:	ldr	r0, [pc, #1644]	; e090 <bt_compidtostr@@Base+0x6050>
    da20:	add	r0, pc, r0
    da24:	bx	lr
    da28:	ldr	r0, [pc, #1636]	; e094 <bt_compidtostr@@Base+0x6054>
    da2c:	add	r0, pc, r0
    da30:	bx	lr
    da34:	ldr	r0, [pc, #1628]	; e098 <bt_compidtostr@@Base+0x6058>
    da38:	add	r0, pc, r0
    da3c:	bx	lr
    da40:	ldr	r0, [pc, #1620]	; e09c <bt_compidtostr@@Base+0x605c>
    da44:	add	r0, pc, r0
    da48:	bx	lr
    da4c:	ldr	r0, [pc, #1612]	; e0a0 <bt_compidtostr@@Base+0x6060>
    da50:	add	r0, pc, r0
    da54:	bx	lr
    da58:	ldr	r0, [pc, #1604]	; e0a4 <bt_compidtostr@@Base+0x6064>
    da5c:	add	r0, pc, r0
    da60:	bx	lr
    da64:	ldr	r0, [pc, #1596]	; e0a8 <bt_compidtostr@@Base+0x6068>
    da68:	add	r0, pc, r0
    da6c:	bx	lr
    da70:	ldr	r0, [pc, #1588]	; e0ac <bt_compidtostr@@Base+0x606c>
    da74:	add	r0, pc, r0
    da78:	bx	lr
    da7c:	ldr	r0, [pc, #1580]	; e0b0 <bt_compidtostr@@Base+0x6070>
    da80:	add	r0, pc, r0
    da84:	bx	lr
    da88:	ldr	r0, [pc, #1572]	; e0b4 <bt_compidtostr@@Base+0x6074>
    da8c:	add	r0, pc, r0
    da90:	bx	lr
    da94:	ldr	r0, [pc, #1564]	; e0b8 <bt_compidtostr@@Base+0x6078>
    da98:	add	r0, pc, r0
    da9c:	bx	lr
    daa0:	ldr	r0, [pc, #1556]	; e0bc <bt_compidtostr@@Base+0x607c>
    daa4:	add	r0, pc, r0
    daa8:	bx	lr
    daac:	ldr	r0, [pc, #1548]	; e0c0 <bt_compidtostr@@Base+0x6080>
    dab0:	add	r0, pc, r0
    dab4:	bx	lr
    dab8:	ldr	r0, [pc, #1540]	; e0c4 <bt_compidtostr@@Base+0x6084>
    dabc:	add	r0, pc, r0
    dac0:	bx	lr
    dac4:	ldr	r0, [pc, #1532]	; e0c8 <bt_compidtostr@@Base+0x6088>
    dac8:	add	r0, pc, r0
    dacc:	bx	lr
    dad0:	ldr	r0, [pc, #1524]	; e0cc <bt_compidtostr@@Base+0x608c>
    dad4:	add	r0, pc, r0
    dad8:	bx	lr
    dadc:	ldr	r0, [pc, #1516]	; e0d0 <bt_compidtostr@@Base+0x6090>
    dae0:	add	r0, pc, r0
    dae4:	bx	lr
    dae8:	ldr	r0, [pc, #1508]	; e0d4 <bt_compidtostr@@Base+0x6094>
    daec:	add	r0, pc, r0
    daf0:	bx	lr
    daf4:	ldr	r0, [pc, #1500]	; e0d8 <bt_compidtostr@@Base+0x6098>
    daf8:	add	r0, pc, r0
    dafc:	bx	lr
    db00:	ldr	r0, [pc, #1492]	; e0dc <bt_compidtostr@@Base+0x609c>
    db04:	add	r0, pc, r0
    db08:	bx	lr
    db0c:	ldr	r0, [pc, #1484]	; e0e0 <bt_compidtostr@@Base+0x60a0>
    db10:	add	r0, pc, r0
    db14:	bx	lr
    db18:	ldr	r0, [pc, #1476]	; e0e4 <bt_compidtostr@@Base+0x60a4>
    db1c:	add	r0, pc, r0
    db20:	bx	lr
    db24:	ldr	r0, [pc, #1468]	; e0e8 <bt_compidtostr@@Base+0x60a8>
    db28:	add	r0, pc, r0
    db2c:	bx	lr
    db30:	ldr	r0, [pc, #1460]	; e0ec <bt_compidtostr@@Base+0x60ac>
    db34:	add	r0, pc, r0
    db38:	bx	lr
    db3c:	ldr	r0, [pc, #1452]	; e0f0 <bt_compidtostr@@Base+0x60b0>
    db40:	add	r0, pc, r0
    db44:	bx	lr
    db48:	ldr	r0, [pc, #1444]	; e0f4 <bt_compidtostr@@Base+0x60b4>
    db4c:	add	r0, pc, r0
    db50:	bx	lr
    db54:	ldr	r0, [pc, #1436]	; e0f8 <bt_compidtostr@@Base+0x60b8>
    db58:	add	r0, pc, r0
    db5c:	bx	lr
    db60:	ldr	r0, [pc, #1428]	; e0fc <bt_compidtostr@@Base+0x60bc>
    db64:	add	r0, pc, r0
    db68:	bx	lr
    db6c:	ldr	r0, [pc, #1420]	; e100 <bt_compidtostr@@Base+0x60c0>
    db70:	add	r0, pc, r0
    db74:	bx	lr
    db78:	ldr	r0, [pc, #1412]	; e104 <bt_compidtostr@@Base+0x60c4>
    db7c:	add	r0, pc, r0
    db80:	bx	lr
    db84:	ldr	r0, [pc, #1404]	; e108 <bt_compidtostr@@Base+0x60c8>
    db88:	add	r0, pc, r0
    db8c:	bx	lr
    db90:	ldr	r0, [pc, #1396]	; e10c <bt_compidtostr@@Base+0x60cc>
    db94:	add	r0, pc, r0
    db98:	bx	lr
    db9c:	ldr	r0, [pc, #1388]	; e110 <bt_compidtostr@@Base+0x60d0>
    dba0:	add	r0, pc, r0
    dba4:	bx	lr
    dba8:	ldr	r0, [pc, #1380]	; e114 <bt_compidtostr@@Base+0x60d4>
    dbac:	add	r0, pc, r0
    dbb0:	bx	lr
    dbb4:	ldr	r0, [pc, #1372]	; e118 <bt_compidtostr@@Base+0x60d8>
    dbb8:	add	r0, pc, r0
    dbbc:	bx	lr
    dbc0:	ldr	r0, [pc, #1364]	; e11c <bt_compidtostr@@Base+0x60dc>
    dbc4:	add	r0, pc, r0
    dbc8:	bx	lr
    dbcc:	andeq	sl, r0, r4, lsl #19
    dbd0:	strdeq	sl, [r0], -ip
    dbd4:	andeq	r9, r0, r8, asr #30
    dbd8:	strdeq	r9, [r0], -r0
    dbdc:	andeq	sl, r0, r0, lsl #21
    dbe0:	andeq	sl, r0, ip, asr r1
    dbe4:	andeq	r9, r0, r0, lsl #29
    dbe8:	andeq	r9, r0, ip, lsr lr
    dbec:	muleq	r0, ip, r0
    dbf0:	andeq	r9, r0, r0, asr #27
    dbf4:	ldrdeq	sl, [r0], -ip
    dbf8:	muleq	r0, ip, ip
    dbfc:	andeq	r9, r0, ip, lsl #2
    dc00:	andeq	r9, r0, r4, lsr #3
    dc04:	andeq	r9, r0, r0, ror #2
    dc08:	andeq	r9, r0, r8, ror #3
    dc0c:			; <UNDEFINED> instruction: 0x0000aab0
    dc10:	andeq	sl, r0, r8, lsl fp
    dc14:	andeq	r8, r0, r0, asr #6
    dc18:	andeq	r9, r0, ip, lsl #4
    dc1c:	andeq	r9, r0, r8, asr #32
    dc20:	andeq	r9, r0, r4, lsl r6
    dc24:	ldrdeq	r9, [r0], -r4
    dc28:	andeq	r9, r0, r8, lsl #14
    dc2c:	andeq	r8, r0, ip, lsl pc
    dc30:	andeq	r8, r0, r0, ror #30
    dc34:	andeq	r9, r0, ip, lsl r7
    dc38:	andeq	r8, r0, r8, ror #28
    dc3c:	andeq	r8, r0, r8, lsr #29
    dc40:	andeq	r9, r0, r4, lsr r5
    dc44:	ldrdeq	r9, [r0], -r0
    dc48:	andeq	r9, r0, r0, lsl r2
    dc4c:	andeq	r9, r0, r8, asr #6
    dc50:	strdeq	r9, [r0], -r4
    dc54:	andeq	r9, r0, r0, lsr r2
    dc58:	andeq	r9, r0, r0, lsr r5
    dc5c:	andeq	r9, r0, r4, lsl #5
    dc60:	strdeq	sl, [r0], -r8
    dc64:	andeq	sl, r0, r0, lsr #9
    dc68:	andeq	sl, r0, r0, asr r4
    dc6c:	andeq	r9, r0, r8, ror #21
    dc70:	andeq	sl, r0, ip, asr #28
    dc74:	muleq	r0, r8, sp
    dc78:	ldrdeq	sl, [r0], -r4
    dc7c:	andeq	sl, r0, r4, ror lr
    dc80:	andeq	sl, r0, r0, lsl pc
    dc84:	strdeq	sl, [r0], -r4
    dc88:			; <UNDEFINED> instruction: 0x0000aeb0
    dc8c:	andeq	sl, r0, r4, asr #30
    dc90:	muleq	r0, r4, r8
    dc94:			; <UNDEFINED> instruction: 0x00008cb8
    dc98:	andeq	r8, r0, ip, lsl #26
    dc9c:	andeq	sl, r0, r4, ror #10
    dca0:	andeq	r8, r0, r8, ror #23
    dca4:	muleq	r0, r0, r5
    dca8:	andeq	r9, r0, r8, lsl #22
    dcac:	andeq	r8, r0, r0, lsr #24
    dcb0:	andeq	sl, r0, ip, asr #9
    dcb4:	andeq	sl, r0, r0, lsl #8
    dcb8:	andeq	sl, r0, r0, lsr r1
    dcbc:	andeq	sl, r0, r0, asr sl
    dcc0:	andeq	sl, r0, r8, lsl #6
    dcc4:	andeq	sl, r0, r0, asr #8
    dcc8:	andeq	r9, r0, r4, ror #13
    dccc:	andeq	sl, r0, ip, lsr #3
    dcd0:	andeq	sl, r0, r4, lsr r2
    dcd4:	andeq	sl, r0, ip, ror #4
    dcd8:	andeq	sl, r0, ip, lsl r1
    dcdc:	andeq	sl, r0, r4, asr #3
    dce0:	andeq	r9, r0, r4, asr #18
    dce4:	andeq	sl, r0, r0
    dce8:	andeq	r9, r0, ip, lsr #11
    dcec:	andeq	r9, r0, r8, ror #11
    dcf0:	andeq	r9, r0, r4, asr r6
    dcf4:	andeq	r9, r0, r0, lsl #12
    dcf8:	muleq	r0, r8, r6
    dcfc:	ldrdeq	r9, [r0], -r4
    dd00:	andeq	sl, r0, r4, lsl #9
    dd04:	andeq	r9, r0, r4, lsl #20
    dd08:	andeq	sl, r0, r8, lsl #29
    dd0c:	andeq	sl, r0, r8, ror r9
    dd10:	andeq	r9, r0, r4, lsr #9
    dd14:	muleq	r0, r8, r4
    dd18:	andeq	r8, r0, ip, lsr #20
    dd1c:	andeq	fp, r0, ip, asr #6
    dd20:	ldrdeq	r7, [r0], -ip
    dd24:	andeq	r7, r0, ip, ror r5
    dd28:			; <UNDEFINED> instruction: 0x00007fb8
    dd2c:	andeq	r6, r0, ip, lsl sl
    dd30:			; <UNDEFINED> instruction: 0x000084b4
    dd34:	andeq	r8, r0, r8, ror #29
    dd38:	andeq	r7, r0, r0, lsl r0
    dd3c:	andeq	r6, r0, ip, asr #4
    dd40:	andeq	r8, r0, ip, lsr #20
    dd44:	strdeq	r9, [r0], -r8
    dd48:	ldrdeq	r8, [r0], -r0
    dd4c:	andeq	r9, r0, r0, lsl r6
    dd50:	andeq	sl, r0, r4, lsl ip
    dd54:	andeq	r9, r0, r0, ror #31
    dd58:	andeq	sl, r0, ip, lsr #4
    dd5c:	muleq	r0, r4, r1
    dd60:	muleq	r0, r0, r2
    dd64:	andeq	r9, r0, r8, lsl #30
    dd68:	andeq	sl, r0, r4, lsl #25
    dd6c:			; <UNDEFINED> instruction: 0x00008ebc
    dd70:	andeq	r9, r0, r8, ror r1
    dd74:	andeq	r8, r0, ip, asr pc
    dd78:	ldrdeq	r8, [r0], -r0
    dd7c:	andeq	r9, r0, ip, lsl #15
    dd80:	andeq	sl, r0, r4, asr sl
    dd84:	ldrdeq	sl, [r0], -r4
    dd88:	andeq	r9, r0, r4, asr #3
    dd8c:	ldrdeq	r8, [r0], -r0
    dd90:	andeq	r8, r0, r4, lsl sp
    dd94:	andeq	r8, r0, r4, ror #24
    dd98:	andeq	r8, r0, r0, lsl #22
    dd9c:	andeq	r9, r0, r0, lsl sp
    dda0:	andeq	r9, r0, r4, lsr #20
    dda4:	andeq	r9, r0, r4, ror #12
    dda8:	andeq	r9, r0, r8, ror #21
    ddac:			; <UNDEFINED> instruction: 0x0000a3bc
    ddb0:	andeq	r9, r0, ip, lsr #11
    ddb4:	andeq	sl, r0, ip, ror #11
    ddb8:	ldrdeq	sl, [r0], -r0
    ddbc:	ldrdeq	sl, [r0], -r0
    ddc0:	andeq	r9, r0, ip, lsl #18
    ddc4:	andeq	r9, r0, r8, lsr fp
    ddc8:	andeq	r9, r0, r4, ror #16
    ddcc:			; <UNDEFINED> instruction: 0x00009bb8
    ddd0:	andeq	sl, r0, r4, lsl #10
    ddd4:	andeq	sl, r0, ip, asr #7
    ddd8:	andeq	sl, r0, r4, ror r7
    dddc:	andeq	r9, r0, r0, ror #2
    dde0:	andeq	r8, r0, ip, lsl #6
    dde4:	andeq	r8, r0, ip, lsr #12
    dde8:	ldrdeq	r8, [r0], -r0
    ddec:	ldrdeq	r8, [r0], -r0
    ddf0:	andeq	r8, r0, r4, lsl #8
    ddf4:	muleq	r0, r8, lr
    ddf8:	andeq	r9, r0, ip, lsr pc
    ddfc:	andeq	r9, r0, r4, ror #6
    de00:	andeq	r9, r0, ip, asr #4
    de04:	andeq	sl, r0, r0, asr #30
    de08:	andeq	sl, r0, r8, lsl r8
    de0c:	strdeq	sl, [r0], -ip
    de10:	andeq	sl, r0, r8, asr #14
    de14:	andeq	sl, r0, r8, lsr sp
    de18:	andeq	sl, r0, r0, ror #10
    de1c:	andeq	sl, r0, r0, lsr #31
    de20:	andeq	r5, r0, r0, lsl #26
    de24:	ldrdeq	r8, [r0], -r4
    de28:	andeq	r5, r0, r0, ror ip
    de2c:	andeq	r7, r0, ip, lsr fp
    de30:	ldrdeq	r7, [r0], -r8
    de34:	andeq	r7, r0, ip, lsr #21
    de38:	andeq	r7, r0, r8, asr lr
    de3c:	andeq	r8, r0, r0, ror #8
    de40:	muleq	r0, r4, sp
    de44:	andeq	r5, r0, r8, asr #26
    de48:	andeq	r7, r0, r8, ror #2
    de4c:	andeq	r6, r0, r4, ror r7
    de50:	andeq	r7, r0, ip, lsr #25
    de54:	andeq	r6, r0, r0, lsl r9
    de58:	andeq	r6, r0, ip, lsl r8
    de5c:	ldrdeq	r7, [r0], -ip
    de60:			; <UNDEFINED> instruction: 0x00006fb8
    de64:	andeq	r7, r0, r4, lsl #15
    de68:	andeq	r7, r0, r4, lsl r8
    de6c:	andeq	r7, r0, r0, asr #18
    de70:	andeq	r6, r0, r4, lsl sp
    de74:	ldrdeq	r8, [r0], -ip
    de78:	andeq	r6, r0, ip, ror #26
    de7c:	andeq	r8, r0, r8, lsl sp
    de80:	andeq	r6, r0, r0, lsl lr
    de84:			; <UNDEFINED> instruction: 0x00006ebc
    de88:	andeq	r6, r0, r0, ror #31
    de8c:	andeq	r6, r0, r4, lsl r3
    de90:	ldrdeq	r7, [r0], -ip
    de94:	andeq	r6, r0, r4, lsr #4
    de98:	strheq	r6, [r0], -ip
    de9c:	andeq	r7, r0, r4, lsl #11
    dea0:	ldrdeq	sl, [r0], -r8
    dea4:	andeq	sl, r0, r8, lsr #20
    dea8:			; <UNDEFINED> instruction: 0x0000acb8
    deac:	andeq	r6, r0, r8, lsl #8
    deb0:	andeq	r6, r0, ip, asr r3
    deb4:			; <UNDEFINED> instruction: 0x000064b0
    deb8:	andeq	r7, r0, ip, lsl #4
    debc:	andeq	r7, r0, r8, lsr r3
    dec0:	andeq	r7, r0, r0, lsr #29
    dec4:	andeq	r7, r0, r8, asr sp
    dec8:	andeq	r7, r0, r4, lsl pc
    decc:	andeq	r7, r0, r4, asr #27
    ded0:	andeq	r7, r0, r0, lsr r1
    ded4:	andeq	r7, r0, r8, ror #6
    ded8:	andeq	r7, r0, r0, asr r2
    dedc:	andeq	r6, r0, ip, lsr r8
    dee0:	andeq	r5, r0, r4, lsl #28
    dee4:	muleq	r0, r8, ip
    dee8:	andeq	r6, r0, r0, ror r9
    deec:	andeq	r6, r0, r8, lsl sl
    def0:	andeq	r6, r0, r4, lsr #17
    def4:	andeq	r6, r0, r4, rrx
    def8:	ldrdeq	r5, [r0], -r4
    defc:	ldrdeq	r9, [r0], -r4
    df00:	andeq	r8, r0, ip, ror #18
    df04:	andeq	r7, r0, r4, lsl pc
    df08:	andeq	r6, r0, ip, ror sl
    df0c:	andeq	r5, r0, r8, asr r7
    df10:	andeq	r6, r0, r4, asr #8
    df14:			; <UNDEFINED> instruction: 0x000079b8
    df18:			; <UNDEFINED> instruction: 0x000074b4
    df1c:	andeq	r9, r0, r0, asr #18
    df20:	andeq	r5, r0, ip, lsr #28
    df24:	andeq	sl, r0, r8, lsl sp
    df28:	andeq	r8, r0, r4, ror #7
    df2c:	andeq	r9, r0, r4, ror #27
    df30:	andeq	r8, r0, r4, lsl lr
    df34:	ldrdeq	sl, [r0], -r4
    df38:	andeq	sl, r0, r4, asr #5
    df3c:			; <UNDEFINED> instruction: 0x00005ab8
    df40:	andeq	r9, r0, ip, asr #31
    df44:	andeq	r8, r0, r4, ror #13
    df48:	muleq	r0, r8, r5
    df4c:	muleq	r0, r8, r1
    df50:	andeq	sl, r0, r4, asr #1
    df54:	andeq	r9, r0, ip, lsl #8
    df58:	andeq	r9, r0, r0, ror #28
    df5c:	andeq	r9, r0, r4, lsl #2
    df60:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    df64:	andeq	sl, r0, r4, lsr #11
    df68:	andeq	r8, r0, r0, ror #23
    df6c:	andeq	r8, r0, r8, lsr #18
    df70:	andeq	r8, r0, ip, lsl #8
    df74:	andeq	sl, r0, r8, lsr #8
    df78:	strdeq	r7, [r0], -r8
    df7c:	andeq	r7, r0, r4, lsl r7
    df80:	andeq	r7, r0, r8, ror r9
    df84:	andeq	sl, r0, ip, lsl r9
    df88:	andeq	sl, r0, r0, ror #20
    df8c:	muleq	r0, r8, r2
    df90:	andeq	r7, r0, r0, asr lr
    df94:	andeq	r5, r0, ip, asr r8
    df98:	strdeq	r9, [r0], -ip
    df9c:	andeq	r9, r0, ip, lsr #17
    dfa0:	andeq	r9, r0, r0, lsr #22
    dfa4:	andeq	r8, r0, r0, lsr #27
    dfa8:			; <UNDEFINED> instruction: 0x00005abc
    dfac:	andeq	r6, r0, r0, asr #13
    dfb0:	andeq	r5, r0, r0, asr #27
    dfb4:	andeq	r6, r0, r4, lsr #1
    dfb8:	andeq	r6, r0, ip, asr #29
    dfbc:	andeq	sl, r0, r0, asr #14
    dfc0:	andeq	r6, r0, ip, asr r3
    dfc4:	andeq	r7, r0, r8, lsr #7
    dfc8:	andeq	r7, r0, r0, ror #9
    dfcc:	andeq	r6, r0, ip, lsr #18
    dfd0:	andeq	r8, r0, r8, lsl #19
    dfd4:	muleq	r0, ip, fp
    dfd8:	andeq	r5, r0, ip, asr #29
    dfdc:	andeq	r6, r0, r4, lsr #31
    dfe0:	ldrdeq	r7, [r0], -r8
    dfe4:			; <UNDEFINED> instruction: 0x000064b0
    dfe8:	andeq	r9, r0, ip, lsr #7
    dfec:	andeq	r9, r0, ip, lsl r5
    dff0:	andeq	r7, r0, ip, ror #28
    dff4:	andeq	r7, r0, r0, ror r0
    dff8:	andeq	r6, r0, ip, lsl sl
    dffc:	andeq	r9, r0, r4, rrx
    e000:			; <UNDEFINED> instruction: 0x000071b4
    e004:	andeq	r8, r0, r8, lsl r6
    e008:	andeq	r6, r0, r4, ror ip
    e00c:	andeq	r6, r0, r4, lsl #2
    e010:	andeq	r6, r0, r4, lsl #14
    e014:	andeq	r7, r0, r4, lsl #23
    e018:	andeq	r7, r0, ip, ror r6
    e01c:			; <UNDEFINED> instruction: 0x00009ab8
    e020:	andeq	r8, r0, r4, lsl #22
    e024:	andeq	sl, r0, r8, ror #19
    e028:	ldrdeq	r9, [r0], -r8
    e02c:	muleq	r0, r8, sl
    e030:	andeq	r8, r0, ip, asr r0
    e034:	andeq	sl, r0, ip, ror r4
    e038:	andeq	r9, r0, r8, asr pc
    e03c:	andeq	r5, r0, r8, lsl r7
    e040:	andeq	r8, r0, r8, asr r7
    e044:	andeq	r7, r0, r8, asr #5
    e048:	andeq	r8, r0, ip, lsl r2
    e04c:	andeq	sl, r0, ip, ror #1
    e050:	muleq	r0, r0, ip
    e054:	andeq	r9, r0, ip, lsr r7
    e058:	andeq	r5, r0, ip, lsl #25
    e05c:	andeq	r8, r0, r4, ror #23
    e060:	andeq	sl, r0, r0, ror #11
    e064:	andeq	r7, r0, ip, ror r7
    e068:	ldrdeq	r9, [r0], -ip
    e06c:	andeq	r6, r0, r8, asr #26
    e070:	ldrdeq	r6, [r0], -r0
    e074:	andeq	r9, r0, r0, asr #2
    e078:	andeq	r6, r0, r4, lsr r2
    e07c:	andeq	r8, r0, r0, asr #28
    e080:	andeq	r8, r0, r0, lsr #18
    e084:	andeq	r5, r0, r0, asr #17
    e088:	andeq	r9, r0, r0, ror #7
    e08c:	andeq	r8, r0, r4, ror #7
    e090:	andeq	r6, r0, r8, lsr #20
    e094:	andeq	r7, r0, r0, ror r4
    e098:	andeq	r7, r0, r8, asr r9
    e09c:	muleq	r0, r4, r8
    e0a0:	andeq	r9, r0, r4, lsl #27
    e0a4:	andeq	sl, r0, r4, lsl #5
    e0a8:	andeq	r7, r0, r4, lsr lr
    e0ac:	muleq	r0, r8, r7
    e0b0:	ldrdeq	r6, [r0], -r8
    e0b4:	andeq	r5, r0, r0, asr lr
    e0b8:	andeq	r6, r0, r0, asr r4
    e0bc:	strdeq	r6, [r0], -r0
    e0c0:	andeq	r9, r0, r0, lsl #24
    e0c4:	ldrdeq	sl, [r0], -r0
    e0c8:	andeq	r8, r0, ip, lsl ip
    e0cc:	andeq	r8, r0, ip, lsl r7
    e0d0:	muleq	r0, r8, r6
    e0d4:	andeq	r6, r0, r8, lsr sp
    e0d8:	strdeq	r6, [r0], -r8
    e0dc:	ldrdeq	r9, [r0], -r8
    e0e0:	andeq	r7, r0, r0, lsr ip
    e0e4:	andeq	r7, r0, r0, lsl r2
    e0e8:	andeq	sl, r0, ip, lsr #11
    e0ec:	andeq	r7, r0, ip, lsl r7
    e0f0:	andeq	r9, r0, ip, ror #2
    e0f4:	andeq	r5, r0, r4, asr #24
    e0f8:	andeq	r8, r0, r0, lsr r1
    e0fc:	andeq	r8, r0, r8, asr #7
    e100:	andeq	r6, r0, r0, lsr #10
    e104:	ldrdeq	sl, [r0], -r0
    e108:	andeq	r7, r0, r8, asr r9
    e10c:	andeq	r8, r0, r4, asr #28
    e110:	andeq	r6, r0, r0, asr #30
    e114:	andeq	r9, r0, r8, ror #16
    e118:	andeq	r5, r0, r8, asr #17
    e11c:	andeq	r5, r0, r4, lsr #29
    e120:	andeq	r6, r0, ip, lsl #29
    e124:	andeq	r9, r0, ip, ror #15
    e128:	andeq	r8, r0, r0, lsr r3
    e12c:	strdeq	r8, [r0], -ip
    e130:	andeq	r6, r0, r4, lsr #8
    e134:	andeq	r7, r0, r4, lsr #17
    e138:	ldr	r0, [pc, #-32]	; e120 <bt_compidtostr@@Base+0x60e0>
    e13c:	add	r0, pc, r0
    e140:	bx	lr
    e144:	ldr	r0, [pc, #-40]	; e124 <bt_compidtostr@@Base+0x60e4>
    e148:	add	r0, pc, r0
    e14c:	bx	lr
    e150:	ldr	r0, [pc, #-48]	; e128 <bt_compidtostr@@Base+0x60e8>
    e154:	add	r0, pc, r0
    e158:	bx	lr
    e15c:	ldr	r0, [pc, #-56]	; e12c <bt_compidtostr@@Base+0x60ec>
    e160:	add	r0, pc, r0
    e164:	bx	lr
    e168:	ldr	r0, [pc, #-64]	; e130 <bt_compidtostr@@Base+0x60f0>
    e16c:	add	r0, pc, r0
    e170:	bx	lr
    e174:	ldr	r0, [pc, #-72]	; e134 <bt_compidtostr@@Base+0x60f4>
    e178:	add	r0, pc, r0
    e17c:	bx	lr

0000e180 <btbb_pcap_open@@Base>:
    e180:	str	r4, [sp, #-8]!
    e184:	mov	r3, #0
    e188:	mov	ip, #2
    e18c:	movt	ip, #4
    e190:	str	lr, [sp, #4]
    e194:	sub	sp, sp, #24
    e198:	movw	lr, #15437	; 0x3c4d
    e19c:	movt	lr, #41394	; 0xa1b2
    e1a0:	str	r1, [sp, #20]
    e1a4:	ldr	r1, [pc, #72]	; e1f4 <btbb_pcap_open@@Base+0x74>
    e1a8:	str	lr, [sp]
    e1ac:	str	ip, [sp, #4]
    e1b0:	str	r3, [sp, #8]
    e1b4:	str	r3, [sp, #12]
    e1b8:	add	r1, pc, r1
    e1bc:	str	r2, [sp, #16]
    e1c0:	bl	210c <fopen@plt>
    e1c4:	subs	r4, r0, #0
    e1c8:	beq	e1e0 <btbb_pcap_open@@Base+0x60>
    e1cc:	mov	r3, r4
    e1d0:	mov	r2, #1
    e1d4:	mov	r1, #24
    e1d8:	mov	r0, sp
    e1dc:	bl	225c <fwrite@plt>
    e1e0:	mov	r0, r4
    e1e4:	add	sp, sp, #24
    e1e8:	ldr	r4, [sp]
    e1ec:	add	sp, sp, #4
    e1f0:	pop	{pc}		; (ldr pc, [sp], #4)
    e1f4:			; <UNDEFINED> instruction: 0x0000a1b0

0000e1f8 <btbb_pcap_dump@@Base>:
    e1f8:	mov	r3, r0
    e1fc:	strd	r4, [sp, #-16]!
    e200:	mov	r4, r0
    e204:	mov	r5, r1
    e208:	mov	r0, r1
    e20c:	str	r6, [sp, #8]
    e210:	mov	r1, #16
    e214:	mov	r6, r2
    e218:	str	lr, [sp, #12]
    e21c:	mov	r2, #1
    e220:	bl	225c <fwrite@plt>
    e224:	mov	r3, r4
    e228:	ldr	r1, [r5, #8]
    e22c:	mov	r0, r6
    e230:	mov	r2, #1
    e234:	bl	225c <fwrite@plt>
    e238:	mov	r0, r4
    e23c:	ldrd	r4, [sp]
    e240:	ldr	r6, [sp, #8]
    e244:	ldr	lr, [sp, #12]
    e248:	add	sp, sp, #16
    e24c:	b	2124 <fflush@plt>

0000e250 <btbb_pcap_append_packet@@Base>:
    e250:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e254:	cmp	r0, #0
    e258:	strd	r6, [sp, #8]
    e25c:	strd	r8, [sp, #16]
    e260:	strd	sl, [sp, #24]
    e264:	add	fp, sp, #32
    e268:	str	lr, [sp, #32]
    e26c:	sub	sp, sp, #484	; 0x1e4
    e270:	ldrsb	r8, [fp, #4]
    e274:	ldrsb	sl, [fp, #8]
    e278:	ldrb	r9, [fp, #16]
    e27c:	beq	e43c <btbb_pcap_append_packet@@Base+0x1ec>
    e280:	mov	r7, r3
    e284:	ldr	r3, [r0]
    e288:	cmp	r3, #0
    e28c:	beq	e43c <btbb_pcap_append_packet@@Base+0x1ec>
    e290:	mov	r6, r2
    e294:	ldr	r2, [fp, #12]
    e298:	cmp	sl, r8
    e29c:	movlt	r3, #7
    e2a0:	movge	r3, #3
    e2a4:	str	r0, [fp, #-516]	; 0xfffffdfc
    e2a8:	ldr	r0, [fp, #20]
    e2ac:	sub	r4, fp, #476	; 0x1dc
    e2b0:	str	sp, [fp, #-492]	; 0xfffffe14
    e2b4:	cmn	r2, #1
    e2b8:	orrne	r3, r3, #16
    e2bc:	cmp	r9, #255	; 0xff
    e2c0:	orrne	r3, r3, #128	; 0x80
    e2c4:	uxth	r3, r3
    e2c8:	str	r3, [fp, #-496]	; 0xfffffe10
    e2cc:	bl	2328 <btbb_packet_get_payload_length@plt>
    e2d0:	add	r3, r0, #7
    e2d4:	mov	r5, r0
    e2d8:	ldr	r0, [fp, #20]
    e2dc:	bic	r3, r3, #7
    e2e0:	sub	sp, sp, r3
    e2e4:	mov	r1, sp
    e2e8:	bl	20f4 <btbb_get_payload_packed@plt>
    e2ec:	cmp	r5, #400	; 0x190
    e2f0:	ldr	r0, [fp, #20]
    e2f4:	movcc	r2, r5
    e2f8:	movcs	r2, #400	; 0x190
    e2fc:	str	r2, [fp, #-480]	; 0xfffffe20
    e300:	bl	246c <btbb_packet_get_channel@plt>
    e304:	str	r0, [fp, #-500]	; 0xfffffe0c
    e308:	ldr	r0, [fp, #20]
    e30c:	bl	2160 <btbb_packet_get_ac_errors@plt>
    e310:	str	r0, [fp, #-504]	; 0xfffffe08
    e314:	ldr	r0, [fp, #20]
    e318:	bl	23a0 <btbb_packet_get_transport@plt>
    e31c:	str	r0, [fp, #-508]	; 0xfffffe04
    e320:	ldr	r0, [fp, #20]
    e324:	bl	2154 <btbb_packet_get_modulation@plt>
    e328:	str	r0, [fp, #-512]	; 0xfffffe00
    e32c:	ldr	r0, [fp, #20]
    e330:	bl	23f4 <btbb_packet_get_lap@plt>
    e334:	str	r0, [fp, #-484]	; 0xfffffe1c
    e338:	ldr	r0, [fp, #20]
    e33c:	bl	2358 <btbb_packet_get_header_packed@plt>
    e340:	add	r3, pc, #256	; 0x100
    e344:	ldrd	r2, [r3]
    e348:	mov	r1, r7
    e34c:	str	r0, [fp, #-488]	; 0xfffffe18
    e350:	mov	r0, r6
    e354:	bl	f814 <lell_pcapng_close@@Base+0x30>
    e358:	ldr	r2, [fp, #-480]	; 0xfffffe20
    e35c:	mov	r1, r7
    e360:	str	r0, [fp, #-476]	; 0xfffffe24
    e364:	mov	r0, r6
    e368:	add	r7, r2, #22
    e36c:	add	r3, pc, #212	; 0xd4
    e370:	ldrd	r2, [r3]
    e374:	bl	f814 <lell_pcapng_close@@Base+0x30>
    e378:	ldr	ip, [fp, #-508]	; 0xfffffe04
    e37c:	str	r2, [fp, #-472]	; 0xfffffe28
    e380:	ldr	r1, [fp, #12]
    e384:	str	r7, [fp, #-468]	; 0xfffffe2c
    e388:	ldr	r0, [fp, #-488]	; 0xfffffe18
    e38c:	str	r7, [fp, #-464]	; 0xfffffe30
    e390:	strb	r8, [fp, #-459]	; 0xfffffe35
    e394:	bic	r3, r1, #-16777216	; 0xff000000
    e398:	ldr	r1, [fp, #-512]	; 0xfffffe00
    e39c:	orr	r3, r3, r9, lsl #24
    e3a0:	strb	sl, [fp, #-458]	; 0xfffffe36
    e3a4:	str	r3, [fp, #-448]	; 0xfffffe40
    e3a8:	orr	r6, r1, ip, lsl #4
    e3ac:	ldr	ip, [fp, #-500]	; 0xfffffe0c
    e3b0:	mov	r1, #0
    e3b4:	cmp	r5, r1
    e3b8:	ldr	r5, [fp, #-496]	; 0xfffffe10
    e3bc:	str	r0, [fp, #-444]	; 0xfffffe44
    e3c0:	strh	r1, [r4, #22]
    e3c4:	strb	ip, [fp, #-460]	; 0xfffffe34
    e3c8:	ldr	ip, [fp, #-504]	; 0xfffffe08
    e3cc:	strb	r6, [fp, #-456]	; 0xfffffe38
    e3d0:	strb	r1, [fp, #-455]	; 0xfffffe39
    e3d4:	strh	r5, [r4, #36]	; 0x24
    e3d8:	strb	ip, [fp, #-457]	; 0xfffffe37
    e3dc:	ldr	ip, [fp, #-484]	; 0xfffffe1c
    e3e0:	str	ip, [fp, #-452]	; 0xfffffe3c
    e3e4:	bne	e420 <btbb_pcap_append_packet@@Base+0x1d0>
    e3e8:	ldr	r3, [fp, #-516]	; 0xfffffdfc
    e3ec:	mov	r1, r4
    e3f0:	sub	r2, fp, #460	; 0x1cc
    e3f4:	ldr	r0, [r3]
    e3f8:	bl	22ec <btbb_pcap_dump@plt>
    e3fc:	ldr	sp, [fp, #-492]	; 0xfffffe14
    e400:	mov	r0, #0
    e404:	sub	sp, fp, #32
    e408:	ldrd	r4, [sp]
    e40c:	ldrd	r6, [sp, #8]
    e410:	ldrd	r8, [sp, #16]
    e414:	ldrd	sl, [sp, #24]
    e418:	add	sp, sp, #32
    e41c:	pop	{pc}		; (ldr pc, [sp], #4)
    e420:	mov	r1, sp
    e424:	add	r0, r4, #38	; 0x26
    e428:	ldr	r2, [fp, #-480]	; 0xfffffe20
    e42c:	bl	216c <memcpy@plt>
    e430:	orr	r3, r5, #32
    e434:	strh	r3, [r4, #36]	; 0x24
    e438:	b	e3e8 <btbb_pcap_append_packet@@Base+0x198>
    e43c:	mvn	r0, #0
    e440:	b	e404 <btbb_pcap_append_packet@@Base+0x1b4>
    e444:	nop	{0}
    e448:	blcc	fe6c0c50 <perm_table@@Base+0xfe697a94>
    e44c:	andeq	r0, r0, r0

0000e450 <btbb_pcap_close@@Base>:
    e450:	str	r4, [sp, #-8]!
    e454:	subs	r4, r0, #0
    e458:	mvneq	r0, #0
    e45c:	str	lr, [sp, #4]
    e460:	beq	e480 <btbb_pcap_close@@Base+0x30>
    e464:	ldr	r0, [r4]
    e468:	cmp	r0, #0
    e46c:	beq	e474 <btbb_pcap_close@@Base+0x24>
    e470:	bl	243c <fclose@plt>
    e474:	mov	r0, r4
    e478:	bl	2148 <free@plt>
    e47c:	mov	r0, #0
    e480:	ldr	r4, [sp]
    e484:	add	sp, sp, #4
    e488:	pop	{pc}		; (ldr pc, [sp], #4)

0000e48c <btbb_pcap_create_file@@Base>:
    e48c:	strd	r4, [sp, #-16]!
    e490:	mov	r5, r0
    e494:	mov	r0, #4
    e498:	str	r6, [sp, #8]
    e49c:	mov	r6, r1
    e4a0:	mov	r1, #1
    e4a4:	str	lr, [sp, #12]
    e4a8:	bl	20ac <calloc@plt>
    e4ac:	subs	r4, r0, #0
    e4b0:	beq	e4ec <btbb_pcap_create_file@@Base+0x60>
    e4b4:	mov	r0, r5
    e4b8:	mov	r2, #400	; 0x190
    e4bc:	mov	r1, #255	; 0xff
    e4c0:	bl	21d8 <btbb_pcap_open@plt>
    e4c4:	cmp	r0, #0
    e4c8:	str	r0, [r4]
    e4cc:	beq	e4fc <btbb_pcap_create_file@@Base+0x70>
    e4d0:	mov	r5, #0
    e4d4:	str	r4, [r6]
    e4d8:	mov	r0, r5
    e4dc:	ldrd	r4, [sp]
    e4e0:	ldr	r6, [sp, #8]
    e4e4:	add	sp, sp, #12
    e4e8:	pop	{pc}		; (ldr pc, [sp], #4)
    e4ec:	mvn	r5, #2
    e4f0:	mov	r0, r4
    e4f4:	bl	2274 <btbb_pcap_close@plt>
    e4f8:	b	e4d8 <btbb_pcap_create_file@@Base+0x4c>
    e4fc:	ldr	r0, [pc, #12]	; e510 <btbb_pcap_create_file@@Base+0x84>
    e500:	mvn	r5, #1
    e504:	add	r0, pc, r0
    e508:	bl	222c <perror@plt>
    e50c:	b	e4f0 <btbb_pcap_create_file@@Base+0x64>
    e510:	andeq	r9, r0, r8, ror #28

0000e514 <lell_pcap_append_packet@@Base>:
    e514:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e518:	cmp	r0, #0
    e51c:	strd	r6, [sp, #8]
    e520:	strd	r8, [sp, #16]
    e524:	strd	sl, [sp, #24]
    e528:	str	lr, [sp, #32]
    e52c:	sub	sp, sp, #308	; 0x134
    e530:	add	r1, sp, #344	; 0x158
    e534:	ldr	r4, [sp, #356]	; 0x164
    e538:	ldrsb	sl, [r1]
    e53c:	add	r1, sp, #348	; 0x15c
    e540:	ldrsb	r9, [r1]
    e544:	beq	e654 <lell_pcap_append_packet@@Base+0x140>
    e548:	ldr	r1, [r0]
    e54c:	cmp	r1, #0
    e550:	beq	e654 <lell_pcap_append_packet@@Base+0x140>
    e554:	ldr	r1, [r0, #4]
    e558:	cmp	r1, #256	; 0x100
    e55c:	bne	e654 <lell_pcap_append_packet@@Base+0x140>
    e560:	cmp	r9, sl
    e564:	str	r0, [sp, #12]
    e568:	mov	r0, r4
    e56c:	mov	r6, r2
    e570:	mov	r7, r3
    e574:	movlt	fp, #39	; 0x27
    e578:	movge	fp, #35	; 0x23
    e57c:	bl	2118 <lell_packet_is_data@plt>
    e580:	ldr	r8, [r4, #72]	; 0x48
    e584:	cmp	r0, #0
    e588:	mov	r1, r7
    e58c:	orreq	fp, fp, #16
    e590:	mov	r0, r6
    e594:	ldrb	ip, [r4, #69]	; 0x45
    e598:	add	r3, pc, #192	; 0xc0
    e59c:	ldrd	r2, [r3]
    e5a0:	add	r5, r8, #9
    e5a4:	add	r8, r8, #19
    e5a8:	cmp	r5, #255	; 0xff
    e5ac:	movcs	r5, #255	; 0xff
    e5b0:	str	ip, [sp, #4]
    e5b4:	bl	f814 <lell_pcapng_close@@Base+0x30>
    e5b8:	ldrb	r3, [r4, #92]	; 0x5c
    e5bc:	mov	r1, r7
    e5c0:	str	r3, [sp, #8]
    e5c4:	add	r3, pc, #148	; 0x94
    e5c8:	ldrd	r2, [r3]
    e5cc:	str	r0, [sp, #20]
    e5d0:	mov	r0, r6
    e5d4:	bl	f814 <lell_pcapng_close@@Base+0x30>
    e5d8:	add	r3, r5, #10
    e5dc:	ldr	ip, [sp, #4]
    e5e0:	mov	r1, r4
    e5e4:	add	r0, sp, #46	; 0x2e
    e5e8:	str	r2, [sp, #24]
    e5ec:	mov	r2, r5
    e5f0:	str	r8, [sp, #28]
    e5f4:	add	r4, sp, #20
    e5f8:	str	r3, [sp, #32]
    e5fc:	ldr	r3, [sp, #8]
    e600:	strb	ip, [sp, #36]	; 0x24
    e604:	strb	sl, [sp, #37]	; 0x25
    e608:	strb	r9, [sp, #38]	; 0x26
    e60c:	strb	r3, [sp, #39]	; 0x27
    e610:	ldr	r3, [sp, #352]	; 0x160
    e614:	strh	fp, [sp, #44]	; 0x2c
    e618:	str	r3, [sp, #40]	; 0x28
    e61c:	bl	216c <memcpy@plt>
    e620:	ldr	r3, [sp, #12]
    e624:	mov	r1, r4
    e628:	add	r2, sp, #36	; 0x24
    e62c:	ldr	r0, [r3]
    e630:	bl	22ec <btbb_pcap_dump@plt>
    e634:	mov	r0, #0
    e638:	add	sp, sp, #308	; 0x134
    e63c:	ldrd	r4, [sp]
    e640:	ldrd	r6, [sp, #8]
    e644:	ldrd	r8, [sp, #16]
    e648:	ldrd	sl, [sp, #24]
    e64c:	add	sp, sp, #32
    e650:	pop	{pc}		; (ldr pc, [sp], #4)
    e654:	mvn	r0, #0
    e658:	b	e638 <lell_pcap_append_packet@@Base+0x124>
    e65c:	nop	{0}
    e660:	blcc	fe6c0e68 <perm_table@@Base+0xfe697cac>
    e664:	andeq	r0, r0, r0

0000e668 <lell_pcap_append_ppi_packet@@Base>:
    e668:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e66c:	subs	r5, r0, #0
    e670:	strd	r6, [sp, #8]
    e674:	strd	r8, [sp, #16]
    e678:	strd	sl, [sp, #24]
    e67c:	str	lr, [sp, #32]
    e680:	sub	sp, sp, #316	; 0x13c
    e684:	add	r1, sp, #356	; 0x164
    e688:	ldrb	r0, [sp, #368]	; 0x170
    e68c:	ldrsb	r9, [r1]
    e690:	add	r1, sp, #360	; 0x168
    e694:	ldrsb	sl, [r1]
    e698:	add	r1, sp, #364	; 0x16c
    e69c:	str	r0, [sp, #12]
    e6a0:	ldrsb	r1, [r1]
    e6a4:	ldrb	fp, [sp, #352]	; 0x160
    e6a8:	ldr	r7, [sp, #372]	; 0x174
    e6ac:	str	r1, [sp, #8]
    e6b0:	beq	e7bc <lell_pcap_append_ppi_packet@@Base+0x154>
    e6b4:	ldr	r1, [r5]
    e6b8:	cmp	r1, #0
    e6bc:	beq	e7bc <lell_pcap_append_ppi_packet@@Base+0x154>
    e6c0:	ldr	r1, [r5, #4]
    e6c4:	cmp	r1, #192	; 0xc0
    e6c8:	bne	e7bc <lell_pcap_append_ppi_packet@@Base+0x154>
    e6cc:	mov	r0, r7
    e6d0:	strd	r2, [sp]
    e6d4:	bl	2370 <lell_get_channel_k@plt>
    e6d8:	ldr	r8, [r7, #72]	; 0x48
    e6dc:	add	r4, r0, #1200	; 0x4b0
    e6e0:	add	r4, r4, #1
    e6e4:	add	r3, pc, #220	; 0xdc
    e6e8:	ldrd	r2, [r3]
    e6ec:	lsl	r4, r4, #1
    e6f0:	ldrd	r0, [sp]
    e6f4:	add	r6, r8, #9
    e6f8:	add	r8, r8, #33	; 0x21
    e6fc:	cmp	r6, #255	; 0xff
    e700:	movcs	r6, #255	; 0xff
    e704:	bl	f814 <lell_pcapng_close@@Base+0x30>
    e708:	add	r3, pc, #184	; 0xb8
    e70c:	ldrd	r2, [r3]
    e710:	str	r0, [sp, #16]
    e714:	ldrd	r0, [sp]
    e718:	bl	f814 <lell_pcapng_close@@Base+0x30>
    e71c:	ldrb	r3, [r5, #8]
    e720:	add	r0, r6, #24
    e724:	mov	lr, #147	; 0x93
    e728:	str	r2, [sp, #20]
    e72c:	movw	ip, #30006	; 0x7536
    e730:	movt	ip, #12
    e734:	ldr	r2, [r7, #76]	; 0x4c
    e738:	mov	r1, r7
    e73c:	str	r0, [sp, #24]
    e740:	mov	r0, #1572864	; 0x180000
    e744:	str	r8, [sp, #28]
    e748:	str	r0, [sp, #32]
    e74c:	add	r0, sp, #56	; 0x38
    e750:	strb	r3, [sp, #44]	; 0x2c
    e754:	ldr	r3, [sp, #8]
    e758:	str	lr, [sp, #36]	; 0x24
    e75c:	str	r2, [sp, #48]	; 0x30
    e760:	mov	r2, r6
    e764:	add	r6, sp, #16
    e768:	str	ip, [sp, #40]	; 0x28
    e76c:	strh	r4, [sp, #45]	; 0x2d
    e770:	strb	fp, [sp, #47]	; 0x2f
    e774:	strb	r3, [sp, #54]	; 0x36
    e778:	ldr	r3, [sp, #12]
    e77c:	strb	sl, [sp, #52]	; 0x34
    e780:	strb	r9, [sp, #53]	; 0x35
    e784:	strb	r3, [sp, #55]	; 0x37
    e788:	bl	216c <memcpy@plt>
    e78c:	mov	r1, r6
    e790:	add	r2, sp, #32
    e794:	ldr	r0, [r5]
    e798:	bl	22ec <btbb_pcap_dump@plt>
    e79c:	mov	r0, #0
    e7a0:	add	sp, sp, #316	; 0x13c
    e7a4:	ldrd	r4, [sp]
    e7a8:	ldrd	r6, [sp, #8]
    e7ac:	ldrd	r8, [sp, #16]
    e7b0:	ldrd	sl, [sp, #24]
    e7b4:	add	sp, sp, #32
    e7b8:	pop	{pc}		; (ldr pc, [sp], #4)
    e7bc:	mvn	r0, #0
    e7c0:	b	e7a0 <lell_pcap_append_ppi_packet@@Base+0x138>
    e7c4:	nop	{0}
    e7c8:	blcc	fe6c0fd0 <perm_table@@Base+0xfe697e14>
    e7cc:	andeq	r0, r0, r0

0000e7d0 <lell_pcap_close@@Base>:
    e7d0:	str	r4, [sp, #-8]!
    e7d4:	subs	r4, r0, #0
    e7d8:	mvneq	r0, #0
    e7dc:	str	lr, [sp, #4]
    e7e0:	beq	e800 <lell_pcap_close@@Base+0x30>
    e7e4:	ldr	r0, [r4]
    e7e8:	cmp	r0, #0
    e7ec:	beq	e7f4 <lell_pcap_close@@Base+0x24>
    e7f0:	bl	243c <fclose@plt>
    e7f4:	mov	r0, r4
    e7f8:	bl	2148 <free@plt>
    e7fc:	mov	r0, #0
    e800:	ldr	r4, [sp]
    e804:	add	sp, sp, #4
    e808:	pop	{pc}		; (ldr pc, [sp], #4)
    e80c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    e810:	mov	r5, r1
    e814:	mov	r1, #1
    e818:	strd	r6, [sp, #8]
    e81c:	mov	r6, r0
    e820:	mov	r0, #12
    e824:	mov	r7, r2
    e828:	str	r8, [sp, #16]
    e82c:	str	lr, [sp, #20]
    e830:	bl	20ac <calloc@plt>
    e834:	subs	r4, r0, #0
    e838:	beq	e87c <lell_pcap_close@@Base+0xac>
    e83c:	mov	r0, r6
    e840:	mov	r2, #400	; 0x190
    e844:	mov	r1, r5
    e848:	bl	21d8 <btbb_pcap_open@plt>
    e84c:	cmp	r0, #0
    e850:	str	r0, [r4]
    e854:	beq	e88c <lell_pcap_close@@Base+0xbc>
    e858:	mov	r6, #0
    e85c:	str	r4, [r7]
    e860:	str	r5, [r4, #4]
    e864:	mov	r0, r6
    e868:	ldrd	r4, [sp]
    e86c:	ldrd	r6, [sp, #8]
    e870:	ldr	r8, [sp, #16]
    e874:	add	sp, sp, #20
    e878:	pop	{pc}		; (ldr pc, [sp], #4)
    e87c:	mvn	r6, #2
    e880:	mov	r0, r4
    e884:	bl	21c0 <lell_pcap_close@plt>
    e888:	b	e864 <lell_pcap_close@@Base+0x94>
    e88c:	mvn	r6, #1
    e890:	b	e880 <lell_pcap_close@@Base+0xb0>

0000e894 <lell_pcap_create_file@@Base>:
    e894:	mov	r2, r1
    e898:	mov	r1, #256	; 0x100
    e89c:	b	e80c <lell_pcap_close@@Base+0x3c>

0000e8a0 <lell_pcap_ppi_create_file@@Base>:
    e8a0:	strd	r4, [sp, #-16]!
    e8a4:	mov	r4, r1
    e8a8:	mov	r1, #192	; 0xc0
    e8ac:	mov	r5, r2
    e8b0:	str	r6, [sp, #8]
    e8b4:	str	lr, [sp, #12]
    e8b8:	bl	e80c <lell_pcap_close@@Base+0x3c>
    e8bc:	cmp	r0, #0
    e8c0:	ldreq	r3, [r5]
    e8c4:	strbeq	r4, [r3, #8]
    e8c8:	ldrd	r4, [sp]
    e8cc:	ldr	r6, [sp, #8]
    e8d0:	add	sp, sp, #12
    e8d4:	pop	{pc}		; (ldr pc, [sp], #4)

0000e8d8 <pcapng_append_section_option@@Base>:
    e8d8:	strd	r4, [sp, #-16]!
    e8dc:	subs	r4, r0, #0
    e8e0:	str	r6, [sp, #8]
    e8e4:	str	lr, [sp, #12]
    e8e8:	beq	e92c <pcapng_append_section_option@@Base+0x54>
    e8ec:	ldr	r2, [r4]
    e8f0:	cmn	r2, #1
    e8f4:	beq	e92c <pcapng_append_section_option@@Base+0x54>
    e8f8:	ldr	r2, [r4, #4]
    e8fc:	sub	ip, r2, #1
    e900:	cmn	ip, #3
    e904:	bhi	e918 <pcapng_append_section_option@@Base+0x40>
    e908:	ldr	ip, [r4, #12]
    e90c:	cmp	ip, #0
    e910:	cmpne	r1, #0
    e914:	bne	e940 <pcapng_append_section_option@@Base+0x68>
    e918:	ldrd	r4, [sp]
    e91c:	mov	r0, #5
    e920:	ldr	r6, [sp, #8]
    e924:	add	sp, sp, #12
    e928:	pop	{pc}		; (ldr pc, [sp], #4)
    e92c:	ldrd	r4, [sp]
    e930:	mov	r0, #1
    e934:	ldr	r6, [sp, #8]
    e938:	add	sp, sp, #12
    e93c:	pop	{pc}		; (ldr pc, [sp], #4)
    e940:	ldrh	r5, [r1, #2]
    e944:	add	r0, r2, ip
    e948:	add	r2, r5, #4
    e94c:	bl	216c <memcpy@plt>
    e950:	ldr	r2, [r4, #8]
    e954:	add	r3, r5, #7
    e958:	mov	r0, #0
    e95c:	bic	r3, r3, #3
    e960:	ldr	ip, [r4, #12]
    e964:	ldr	r1, [pc, #48]	; e99c <pcapng_append_section_option@@Base+0xc4>
    e968:	sub	r2, r2, #12
    e96c:	add	r3, r3, ip
    e970:	ldr	ip, [r4, #4]
    e974:	sub	r2, r2, r3
    e978:	add	r1, pc, r1
    e97c:	str	r3, [r4, #12]
    e980:	strh	r2, [r1, #2]
    e984:	ldr	r2, [r1]
    e988:	str	r2, [ip, r3]
    e98c:	ldrd	r4, [sp]
    e990:	ldr	r6, [sp, #8]
    e994:	add	sp, sp, #12
    e998:	pop	{pc}		; (ldr pc, [sp], #4)
    e99c:	andeq	sl, r1, r0, lsr #16

0000e9a0 <pcapng_append_interface_option@@Base>:
    e9a0:	strd	r4, [sp, #-16]!
    e9a4:	subs	r4, r0, #0
    e9a8:	str	r6, [sp, #8]
    e9ac:	str	lr, [sp, #12]
    e9b0:	beq	e9f4 <pcapng_append_interface_option@@Base+0x54>
    e9b4:	ldr	r2, [r4]
    e9b8:	cmn	r2, #1
    e9bc:	beq	e9f4 <pcapng_append_interface_option@@Base+0x54>
    e9c0:	ldr	r2, [r4, #16]
    e9c4:	sub	ip, r2, #1
    e9c8:	cmn	ip, #3
    e9cc:	bhi	e9e0 <pcapng_append_interface_option@@Base+0x40>
    e9d0:	ldr	ip, [r4, #24]
    e9d4:	cmp	ip, #0
    e9d8:	cmpne	r1, #0
    e9dc:	bne	ea08 <pcapng_append_interface_option@@Base+0x68>
    e9e0:	ldrd	r4, [sp]
    e9e4:	mov	r0, #5
    e9e8:	ldr	r6, [sp, #8]
    e9ec:	add	sp, sp, #12
    e9f0:	pop	{pc}		; (ldr pc, [sp], #4)
    e9f4:	ldrd	r4, [sp]
    e9f8:	mov	r0, #1
    e9fc:	ldr	r6, [sp, #8]
    ea00:	add	sp, sp, #12
    ea04:	pop	{pc}		; (ldr pc, [sp], #4)
    ea08:	ldrh	r5, [r1, #2]
    ea0c:	add	r0, r2, ip
    ea10:	add	r2, r5, #4
    ea14:	bl	216c <memcpy@plt>
    ea18:	ldr	r2, [r4, #20]
    ea1c:	add	r3, r5, #7
    ea20:	mov	r0, #0
    ea24:	bic	r3, r3, #3
    ea28:	ldr	ip, [r4, #24]
    ea2c:	ldr	r1, [pc, #48]	; ea64 <pcapng_append_interface_option@@Base+0xc4>
    ea30:	sub	r2, r2, #12
    ea34:	add	r3, r3, ip
    ea38:	ldr	ip, [r4, #16]
    ea3c:	sub	r2, r2, r3
    ea40:	add	r1, pc, r1
    ea44:	str	r3, [r4, #24]
    ea48:	strh	r2, [r1, #2]
    ea4c:	ldr	r2, [r1]
    ea50:	str	r2, [ip, r3]
    ea54:	ldrd	r4, [sp]
    ea58:	ldr	r6, [sp, #8]
    ea5c:	add	sp, sp, #12
    ea60:	pop	{pc}		; (ldr pc, [sp], #4)
    ea64:	andeq	sl, r1, r8, asr r7

0000ea68 <pcapng_append_packet@@Base>:
    ea68:	strd	r4, [sp, #-24]!	; 0xffffffe8
    ea6c:	subs	r4, r0, #0
    ea70:	strd	r6, [sp, #8]
    ea74:	str	r8, [sp, #16]
    ea78:	str	lr, [sp, #20]
    ea7c:	beq	ea8c <pcapng_append_packet@@Base+0x24>
    ea80:	ldr	r0, [r4]
    ea84:	cmn	r0, #1
    ea88:	bne	eaa4 <pcapng_append_packet@@Base+0x3c>
    ea8c:	mov	r0, #1
    ea90:	ldrd	r4, [sp]
    ea94:	ldrd	r6, [sp, #8]
    ea98:	ldr	r8, [sp, #16]
    ea9c:	add	sp, sp, #20
    eaa0:	pop	{pc}		; (ldr pc, [sp], #4)
    eaa4:	ldr	r5, [r1, #4]
    eaa8:	mov	r2, r5
    eaac:	bl	2418 <write@plt>
    eab0:	cmn	r0, #1
    eab4:	moveq	r0, #0
    eab8:	beq	ea90 <pcapng_append_packet@@Base+0x28>
    eabc:	ldr	r1, [r4, #4]
    eac0:	mov	r0, #0
    eac4:	ldr	r6, [r1, #16]
    eac8:	ldr	r7, [r1, #20]
    eacc:	adds	r2, r6, r5
    ead0:	adc	r3, r7, #0
    ead4:	str	r2, [r1, #16]
    ead8:	str	r3, [r1, #20]
    eadc:	b	ea90 <pcapng_append_packet@@Base+0x28>

0000eae0 <pcapng_close@@Base>:
    eae0:	str	r4, [sp, #-8]!
    eae4:	mov	r4, r0
    eae8:	ldr	r0, [r0, #16]
    eaec:	str	lr, [sp, #4]
    eaf0:	sub	r3, r0, #1
    eaf4:	cmn	r3, #3
    eaf8:	bls	eb38 <pcapng_close@@Base+0x58>
    eafc:	ldr	r0, [r4, #4]
    eb00:	sub	r3, r0, #1
    eb04:	cmn	r3, #3
    eb08:	bls	eb2c <pcapng_close@@Base+0x4c>
    eb0c:	ldr	r0, [r4]
    eb10:	cmn	r0, #1
    eb14:	beq	eb1c <pcapng_close@@Base+0x3c>
    eb18:	bl	24e4 <close@plt>
    eb1c:	ldr	r4, [sp]
    eb20:	add	sp, sp, #4
    eb24:	mov	r0, #0
    eb28:	pop	{pc}		; (ldr pc, [sp], #4)
    eb2c:	ldr	r1, [r4, #8]
    eb30:	bl	2454 <munmap@plt>
    eb34:	b	eb0c <pcapng_close@@Base+0x2c>
    eb38:	ldr	r1, [r4, #20]
    eb3c:	bl	2454 <munmap@plt>
    eb40:	b	eafc <pcapng_close@@Base+0x1c>

0000eb44 <pcapng_create@@Base>:
    eb44:	mov	ip, #0
    eb48:	strd	r4, [sp, #-36]!	; 0xffffffdc
    eb4c:	mov	r5, r0
    eb50:	strd	r6, [sp, #8]
    eb54:	mov	r7, r2
    eb58:	mov	r2, #432	; 0x1b0
    eb5c:	strd	r8, [sp, #16]
    eb60:	strd	sl, [sp, #24]
    eb64:	str	lr, [sp, #32]
    eb68:	sub	sp, sp, #44	; 0x2c
    eb6c:	str	ip, [r0, #4]
    eb70:	str	ip, [r0, #8]
    eb74:	str	ip, [r0, #12]
    eb78:	str	ip, [r0, #16]
    eb7c:	str	ip, [r0, #20]
    eb80:	str	ip, [r0, #24]
    eb84:	ldrh	r0, [sp, #80]	; 0x50
    eb88:	str	r3, [sp, #8]
    eb8c:	ldr	sl, [sp, #88]	; 0x58
    eb90:	str	r0, [sp, #12]
    eb94:	mov	r0, r1
    eb98:	mov	r1, #194	; 0xc2
    eb9c:	bl	2304 <open@plt>
    eba0:	cmn	r0, #1
    eba4:	str	r0, [r5]
    eba8:	bne	ebd8 <pcapng_create@@Base+0x94>
    ebac:	mov	r4, #6
    ebb0:	mov	r0, r5
    ebb4:	bl	249c <pcapng_close@plt>
    ebb8:	mov	r0, r4
    ebbc:	add	sp, sp, #44	; 0x2c
    ebc0:	ldrd	r4, [sp]
    ebc4:	ldrd	r6, [sp, #8]
    ebc8:	ldrd	r8, [sp, #16]
    ebcc:	ldrd	sl, [sp, #24]
    ebd0:	add	sp, sp, #32
    ebd4:	pop	{pc}		; (ldr pc, [sp], #4)
    ebd8:	ldr	r3, [pc, #1124]	; f044 <pcapng_create@@Base+0x500>
    ebdc:	add	fp, sp, #16
    ebe0:	mov	r2, #24
    ebe4:	mov	r1, fp
    ebe8:	str	r2, [r5, #8]
    ebec:	add	r3, pc, r3
    ebf0:	ldrd	r8, [r3]
    ebf4:	strd	r8, [sp, #16]
    ebf8:	ldrd	r8, [r3, #8]
    ebfc:	strd	r8, [fp, #8]
    ec00:	ldrd	r8, [r3, #16]
    ec04:	strd	r8, [fp, #16]
    ec08:	bl	2418 <write@plt>
    ec0c:	cmp	r7, #0
    ec10:	cmnne	r0, #1
    ec14:	mov	r4, r0
    ec18:	beq	f034 <pcapng_create@@Base+0x4f0>
    ec1c:	ldrh	r3, [r7]
    ec20:	cmp	r3, #0
    ec24:	beq	f00c <pcapng_create@@Base+0x4c8>
    ec28:	ldrh	r3, [r7, #2]
    ec2c:	cmp	r3, #0
    ec30:	beq	f00c <pcapng_create@@Base+0x4c8>
    ec34:	ldr	r6, [pc, #1036]	; f048 <pcapng_create@@Base+0x504>
    ec38:	mov	r9, sl
    ec3c:	add	r6, pc, r6
    ec40:	add	r6, r6, #24
    ec44:	add	sl, r3, #3
    ec48:	add	r2, r3, #4
    ec4c:	ldr	r0, [r5]
    ec50:	bic	sl, sl, #3
    ec54:	mov	r1, r7
    ec58:	sub	r8, sl, r3
    ec5c:	bl	2418 <write@plt>
    ec60:	adds	r3, r0, #1
    ec64:	movne	r3, #1
    ec68:	cmp	r8, #0
    ec6c:	cmnne	r0, #1
    ec70:	beq	eca0 <pcapng_create@@Base+0x15c>
    ec74:	mov	r2, #1
    ec78:	mov	r1, r6
    ec7c:	ldr	r0, [r5]
    ec80:	bl	2418 <write@plt>
    ec84:	adds	r3, r0, #1
    ec88:	movne	r3, #1
    ec8c:	subs	r8, r8, #1
    ec90:	movne	r2, r3
    ec94:	moveq	r2, #0
    ec98:	cmp	r2, #0
    ec9c:	bne	ec74 <pcapng_create@@Base+0x130>
    eca0:	ldr	r2, [r5, #8]
    eca4:	add	r1, sl, #4
    eca8:	adds	r7, r7, r1
    ecac:	moveq	r3, #0
    ecb0:	cmp	r3, #0
    ecb4:	add	r3, r2, #4
    ecb8:	add	sl, r3, sl
    ecbc:	str	sl, [r5, #8]
    ecc0:	beq	eff0 <pcapng_create@@Base+0x4ac>
    ecc4:	ldrh	r3, [r7]
    ecc8:	cmp	r3, #0
    eccc:	beq	ecdc <pcapng_create@@Base+0x198>
    ecd0:	ldrh	r3, [r7, #2]
    ecd4:	cmp	r3, #0
    ecd8:	bne	ec44 <pcapng_create@@Base+0x100>
    ecdc:	mov	r8, sl
    ece0:	mov	r4, r0
    ece4:	mov	sl, r9
    ece8:	str	r8, [r5, #12]
    ecec:	bl	2388 <getpagesize@plt>
    ecf0:	ldr	r3, [sp, #8]
    ecf4:	mov	r6, r0
    ecf8:	add	r1, r3, #3
    ecfc:	add	r1, r1, r8
    ed00:	add	r1, r1, r0
    ed04:	udiv	r1, r1, r0
    ed08:	mul	r1, r0, r1
    ed0c:	subs	r8, r1, r8
    ed10:	str	r1, [r5, #8]
    ed14:	beq	ed60 <pcapng_create@@Base+0x21c>
    ed18:	ldr	r7, [pc, #812]	; f04c <pcapng_create@@Base+0x508>
    ed1c:	mov	r9, sl
    ed20:	add	r7, pc, r7
    ed24:	add	r7, r7, #24
    ed28:	mov	r2, #1
    ed2c:	mov	r1, r7
    ed30:	ldr	r0, [r5]
    ed34:	bl	2418 <write@plt>
    ed38:	subs	r8, r8, #1
    ed3c:	movne	r2, #1
    ed40:	moveq	r2, #0
    ed44:	adds	r3, r0, #1
    ed48:	movne	r3, #1
    ed4c:	tst	r2, r3
    ed50:	bne	ed28 <pcapng_create@@Base+0x1e4>
    ed54:	ldr	r1, [r5, #8]
    ed58:	mov	r4, r0
    ed5c:	mov	sl, r9
    ed60:	mov	r2, #0
    ed64:	mov	r3, #1
    ed68:	ldr	ip, [r5]
    ed6c:	mov	r0, r2
    ed70:	str	ip, [sp]
    ed74:	str	r2, [sp, #4]
    ed78:	mov	r2, #3
    ed7c:	bl	234c <mmap@plt>
    ed80:	cmn	r4, #1
    ed84:	str	r0, [r5, #4]
    ed88:	beq	ebac <pcapng_create@@Base+0x68>
    ed8c:	cmn	r0, #1
    ed90:	beq	efd4 <pcapng_create@@Base+0x490>
    ed94:	ldr	r3, [sp, #84]	; 0x54
    ed98:	mov	r2, #16
    ed9c:	mov	r8, #0
    eda0:	mov	r9, #0
    eda4:	mov	r1, fp
    eda8:	str	r2, [r5, #20]
    edac:	ldr	r0, [r5]
    edb0:	strd	r8, [sp, #20]
    edb4:	str	r3, [sp, #28]
    edb8:	mov	r3, #1
    edbc:	str	r3, [sp, #16]
    edc0:	ldr	r3, [sp, #12]
    edc4:	strh	r3, [sp, #24]
    edc8:	bl	2418 <write@plt>
    edcc:	cmp	sl, #0
    edd0:	cmnne	r0, #1
    edd4:	beq	efdc <pcapng_create@@Base+0x498>
    edd8:	ldrh	r3, [sl]
    eddc:	cmp	r3, #0
    ede0:	beq	f03c <pcapng_create@@Base+0x4f8>
    ede4:	ldrh	r4, [sl, #2]
    ede8:	cmp	r4, #0
    edec:	beq	f03c <pcapng_create@@Base+0x4f8>
    edf0:	ldr	r7, [pc, #600]	; f050 <pcapng_create@@Base+0x50c>
    edf4:	mov	r9, sl
    edf8:	add	r7, pc, r7
    edfc:	add	r7, r7, #24
    ee00:	add	r8, r4, #3
    ee04:	add	r2, r4, #4
    ee08:	ldr	r0, [r5]
    ee0c:	mov	r1, r9
    ee10:	bic	r8, r8, #3
    ee14:	bl	2418 <write@plt>
    ee18:	adds	r3, r0, #1
    ee1c:	sub	r4, r8, r4
    ee20:	movne	r3, #1
    ee24:	cmp	r4, #0
    ee28:	cmnne	r0, #1
    ee2c:	beq	ee5c <pcapng_create@@Base+0x318>
    ee30:	mov	r2, #1
    ee34:	mov	r1, r7
    ee38:	ldr	r0, [r5]
    ee3c:	bl	2418 <write@plt>
    ee40:	adds	r3, r0, #1
    ee44:	movne	r3, #1
    ee48:	subs	r4, r4, #1
    ee4c:	movne	r2, r3
    ee50:	moveq	r2, #0
    ee54:	cmp	r2, #0
    ee58:	bne	ee30 <pcapng_create@@Base+0x2ec>
    ee5c:	ldr	r2, [r5, #20]
    ee60:	add	r1, r8, #4
    ee64:	adds	r9, r9, r1
    ee68:	moveq	r3, #0
    ee6c:	cmp	r3, #0
    ee70:	add	r3, r2, #4
    ee74:	add	r8, r3, r8
    ee78:	str	r8, [r5, #20]
    ee7c:	beq	efe0 <pcapng_create@@Base+0x49c>
    ee80:	ldrh	r3, [r9]
    ee84:	cmp	r3, #0
    ee88:	beq	ee98 <pcapng_create@@Base+0x354>
    ee8c:	ldrh	r4, [r9, #2]
    ee90:	cmp	r4, #0
    ee94:	bne	ee00 <pcapng_create@@Base+0x2bc>
    ee98:	str	r8, [r5, #24]
    ee9c:	ldr	r3, [sp, #92]	; 0x5c
    eea0:	add	r1, r3, #3
    eea4:	ldr	r3, [r5]
    eea8:	add	r1, r1, r6
    eeac:	add	r1, r1, r8
    eeb0:	udiv	r1, r1, r6
    eeb4:	mul	r1, r6, r1
    eeb8:	subs	r8, r1, r8
    eebc:	str	r1, [r5, #20]
    eec0:	beq	f014 <pcapng_create@@Base+0x4d0>
    eec4:	ldr	r7, [pc, #392]	; f054 <pcapng_create@@Base+0x510>
    eec8:	mov	r0, r3
    eecc:	add	r7, pc, r7
    eed0:	add	r7, r7, #24
    eed4:	b	eedc <pcapng_create@@Base+0x398>
    eed8:	ldr	r0, [r5]
    eedc:	mov	r2, #1
    eee0:	mov	r1, r7
    eee4:	bl	2418 <write@plt>
    eee8:	subs	r8, r8, #1
    eeec:	movne	r3, #1
    eef0:	moveq	r3, #0
    eef4:	adds	r2, r0, #1
    eef8:	movne	r2, #1
    eefc:	ands	r3, r3, r2
    ef00:	bne	eed8 <pcapng_create@@Base+0x394>
    ef04:	ldr	r1, [r5]
    ef08:	mov	r6, r0
    ef0c:	mov	r2, #3
    ef10:	mov	r0, r3
    ef14:	mov	r3, #1
    ef18:	ldr	ip, [r5, #8]
    ef1c:	str	r1, [sp]
    ef20:	ldr	r1, [r5, #20]
    ef24:	str	ip, [sp, #4]
    ef28:	bl	234c <mmap@plt>
    ef2c:	cmn	r6, #1
    ef30:	str	r0, [r5, #16]
    ef34:	beq	ebac <pcapng_create@@Base+0x68>
    ef38:	cmn	r0, #1
    ef3c:	beq	efd4 <pcapng_create@@Base+0x490>
    ef40:	ldr	r2, [pc, #272]	; f058 <pcapng_create@@Base+0x514>
    ef44:	mov	r1, #0
    ef48:	mov	r4, r1
    ef4c:	ldr	r3, [r5, #8]
    ef50:	ldr	ip, [r5, #4]
    ef54:	add	r2, pc, r2
    ef58:	ldr	r0, [r5, #12]
    ef5c:	sub	r3, r3, #12
    ef60:	sub	r3, r3, r0
    ef64:	strh	r3, [r2, #2]
    ef68:	ldr	r3, [r2]
    ef6c:	str	r3, [ip, r0]
    ef70:	ldr	ip, [r5, #4]
    ef74:	ldr	r0, [r5, #8]
    ef78:	bic	r3, r0, #3
    ef7c:	str	r0, [ip, #4]
    ef80:	add	r3, ip, r3
    ef84:	ldr	ip, [r5, #16]
    ef88:	str	r0, [r3, #-4]
    ef8c:	ldr	r3, [r5, #20]
    ef90:	ldr	r0, [r5, #24]
    ef94:	sub	r3, r3, #12
    ef98:	sub	r3, r3, r0
    ef9c:	strh	r3, [r2, #2]
    efa0:	ldr	r3, [r2]
    efa4:	str	r3, [ip, r0]
    efa8:	ldr	r0, [r5, #4]
    efac:	ldr	r2, [r5, #20]
    efb0:	ldr	ip, [r5, #16]
    efb4:	bic	r3, r2, #3
    efb8:	add	r3, ip, r3
    efbc:	str	r2, [ip, #4]
    efc0:	str	r2, [r3, #-4]
    efc4:	ldr	r3, [r5, #20]
    efc8:	str	r3, [r0, #16]
    efcc:	str	r1, [r0, #20]
    efd0:	b	ebb8 <pcapng_create@@Base+0x74>
    efd4:	mov	r4, #7
    efd8:	b	ebb0 <pcapng_create@@Base+0x6c>
    efdc:	ldr	r8, [r5, #20]
    efe0:	cmn	r0, #1
    efe4:	str	r8, [r5, #24]
    efe8:	bne	ee9c <pcapng_create@@Base+0x358>
    efec:	b	ebac <pcapng_create@@Base+0x68>
    eff0:	mov	r8, sl
    eff4:	mov	r4, r0
    eff8:	mov	sl, r9
    effc:	cmn	r4, #1
    f000:	str	r8, [r5, #12]
    f004:	beq	ebac <pcapng_create@@Base+0x68>
    f008:	b	ecec <pcapng_create@@Base+0x1a8>
    f00c:	ldr	r8, [r5, #8]
    f010:	b	ece8 <pcapng_create@@Base+0x1a4>
    f014:	ldr	ip, [r5, #8]
    f018:	mov	r0, r8
    f01c:	mov	r2, #3
    f020:	stm	sp, {r3, ip}
    f024:	mov	r3, #1
    f028:	bl	234c <mmap@plt>
    f02c:	str	r0, [r5, #16]
    f030:	b	ef38 <pcapng_create@@Base+0x3f4>
    f034:	ldr	r8, [r5, #8]
    f038:	b	effc <pcapng_create@@Base+0x4b8>
    f03c:	ldr	r8, [r5, #20]
    f040:	b	ee98 <pcapng_create@@Base+0x354>
    f044:	andeq	r9, r0, ip, lsl #15
    f048:	andeq	r9, r0, ip, lsr r7
    f04c:	andeq	r9, r0, r8, asr r6
    f050:	andeq	r9, r0, r0, lsl #11
    f054:	andeq	r9, r0, ip, lsr #9
    f058:	andeq	sl, r1, r4, asr #4
    f05c:	push	{lr}		; (str lr, [sp, #-4]!)
    f060:	sub	sp, sp, #12
    f064:	adds	ip, r1, #0
    f068:	mov	r2, #0
    f06c:	movne	ip, #1
    f070:	b	f098 <pcapng_create@@Base+0x554>
    f074:	ldrh	r3, [r1]
    f078:	mov	r2, #1
    f07c:	cmp	r3, #0
    f080:	beq	f0b8 <pcapng_create@@Base+0x574>
    f084:	ldrh	lr, [r1, #2]
    f088:	cmp	lr, #0
    f08c:	beq	f0b8 <pcapng_create@@Base+0x574>
    f090:	cmp	r3, #9
    f094:	bne	f0e4 <pcapng_create@@Base+0x5a0>
    f098:	eor	r3, r2, #1
    f09c:	ands	r3, ip, r3
    f0a0:	bne	f074 <pcapng_create@@Base+0x530>
    f0a4:	cmp	r2, #0
    f0a8:	movne	r0, r3
    f0ac:	beq	f0b8 <pcapng_create@@Base+0x574>
    f0b0:	add	sp, sp, #12
    f0b4:	pop	{pc}		; (ldr pc, [sp], #4)
    f0b8:	ldr	r2, [pc, #56]	; f0f8 <pcapng_create@@Base+0x5b4>
    f0bc:	mov	r3, sp
    f0c0:	mov	r1, r3
    f0c4:	add	r2, pc, r2
    f0c8:	ldr	ip, [r2]
    f0cc:	ldrb	r2, [r2, #4]
    f0d0:	str	ip, [sp]
    f0d4:	strb	r2, [r3, #4]
    f0d8:	bl	213c <pcapng_append_interface_option@plt>
    f0dc:	add	sp, sp, #12
    f0e0:	pop	{pc}		; (ldr pc, [sp], #4)
    f0e4:	add	r3, lr, #3
    f0e8:	bic	r3, r3, #3
    f0ec:	add	r3, r3, #4
    f0f0:	add	r1, r1, r3
    f0f4:	b	f064 <pcapng_create@@Base+0x520>
    f0f8:	ldrdeq	r9, [r0], -r0

0000f0fc <btbb_pcapng_create_file@@Base>:
    f0fc:	strd	r4, [sp, #-28]!	; 0xffffffe4
    f100:	mov	r4, r1
    f104:	strd	r6, [sp, #8]
    f108:	mov	r7, r2
    f10c:	strd	r8, [sp, #16]
    f110:	mov	r9, r0
    f114:	mov	r0, #28
    f118:	ldr	r8, [pc, #240]	; f210 <btbb_pcapng_create_file@@Base+0x114>
    f11c:	str	lr, [sp, #24]
    f120:	sub	sp, sp, #284	; 0x11c
    f124:	bl	22c8 <malloc@plt>
    f128:	subs	r6, r0, #0
    f12c:	add	r8, pc, r8
    f130:	beq	f208 <btbb_pcapng_create_file@@Base+0x10c>
    f134:	add	r5, sp, #20
    f138:	mov	r2, #260	; 0x104
    f13c:	mov	r0, r5
    f140:	mov	r1, #0
    f144:	bl	23c4 <memset@plt>
    f148:	mov	r3, #3
    f14c:	cmp	r4, #0
    f150:	strh	r3, [r5]
    f154:	beq	f180 <btbb_pcapng_create_file@@Base+0x84>
    f158:	add	r3, sp, #24
    f15c:	mov	r1, r4
    f160:	mov	r0, r3
    f164:	mov	r2, #256	; 0x100
    f168:	bl	23dc <strncpy@plt>
    f16c:	mov	r2, #0
    f170:	mov	r4, r5
    f174:	strb	r2, [sp, #279]	; 0x117
    f178:	bl	2334 <strlen@plt>
    f17c:	strh	r0, [r5, #2]
    f180:	bl	2388 <getpagesize@plt>
    f184:	ldr	r2, [pc, #136]	; f214 <btbb_pcapng_create_file@@Base+0x118>
    f188:	mov	ip, r0
    f18c:	mov	lr, #255	; 0xff
    f190:	mov	r0, #400	; 0x190
    f194:	mov	r1, r9
    f198:	mov	r3, ip
    f19c:	ldr	r2, [r8, r2]
    f1a0:	str	lr, [sp]
    f1a4:	stmib	sp, {r0, r4, ip}
    f1a8:	mov	r0, r6
    f1ac:	bl	21fc <pcapng_create@plt>
    f1b0:	cmp	r0, #0
    f1b4:	rsbne	r4, r0, #0
    f1b8:	beq	f1e0 <btbb_pcapng_create_file@@Base+0xe4>
    f1bc:	mov	r0, r6
    f1c0:	bl	2148 <free@plt>
    f1c4:	mov	r0, r4
    f1c8:	add	sp, sp, #284	; 0x11c
    f1cc:	ldrd	r4, [sp]
    f1d0:	ldrd	r6, [sp, #8]
    f1d4:	ldrd	r8, [sp, #16]
    f1d8:	add	sp, sp, #24
    f1dc:	pop	{pc}		; (ldr pc, [sp], #4)
    f1e0:	mov	r1, r4
    f1e4:	mov	r0, r6
    f1e8:	bl	f05c <pcapng_create@@Base+0x518>
    f1ec:	subs	r4, r0, #0
    f1f0:	streq	r6, [r7]
    f1f4:	beq	f1c4 <btbb_pcapng_create_file@@Base+0xc8>
    f1f8:	mov	r0, r6
    f1fc:	rsb	r4, r4, #0
    f200:	bl	249c <pcapng_close@plt>
    f204:	b	f1bc <btbb_pcapng_create_file@@Base+0xc0>
    f208:	mvn	r4, #4
    f20c:	b	f1c4 <btbb_pcapng_create_file@@Base+0xc8>
    f210:	andeq	r9, r1, ip, asr #29
    f214:	muleq	r0, r4, r1

0000f218 <btbb_pcapng_append_packet@@Base>:
    f218:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f21c:	strd	r6, [sp, #8]
    f220:	strd	r8, [sp, #16]
    f224:	strd	sl, [sp, #24]
    f228:	add	fp, sp, #32
    f22c:	str	lr, [sp, #32]
    f230:	sub	sp, sp, #492	; 0x1ec
    f234:	sub	r6, fp, #488	; 0x1e8
    f238:	ldrsb	r9, [fp, #4]
    f23c:	str	r0, [fp, #-524]	; 0xfffffdf4
    f240:	ldrsb	r8, [fp, #8]
    f244:	str	r2, [fp, #-508]	; 0xfffffe04
    f248:	ldr	r5, [fp, #12]
    f24c:	str	r3, [fp, #-520]	; 0xfffffdf8
    f250:	ldrb	sl, [fp, #16]
    f254:	cmp	r8, r9
    f258:	movlt	r2, #7
    f25c:	movge	r2, #3
    f260:	ldr	r0, [fp, #20]
    f264:	cmn	r5, #1
    f268:	bic	r5, r5, #-16777216	; 0xff000000
    f26c:	orrne	r2, r2, #16
    f270:	cmp	sl, #255	; 0xff
    f274:	orr	r5, r5, sl, lsl #24
    f278:	orrne	r2, r2, #128	; 0x80
    f27c:	uxth	r3, r2
    f280:	str	r3, [fp, #-496]	; 0xfffffe10
    f284:	bl	2328 <btbb_packet_get_payload_length@plt>
    f288:	add	r2, r0, #7
    f28c:	mov	r4, r0
    f290:	ldr	r0, [fp, #20]
    f294:	bic	r2, r2, #7
    f298:	sub	sp, sp, r2
    f29c:	mov	r1, sp
    f2a0:	bl	20f4 <btbb_get_payload_packed@plt>
    f2a4:	cmp	r4, #400	; 0x190
    f2a8:	ldr	r0, [fp, #20]
    f2ac:	movge	r4, #400	; 0x190
    f2b0:	bl	246c <btbb_packet_get_channel@plt>
    f2b4:	str	r0, [fp, #-500]	; 0xfffffe0c
    f2b8:	ldr	r0, [fp, #20]
    f2bc:	bl	2160 <btbb_packet_get_ac_errors@plt>
    f2c0:	str	r0, [fp, #-504]	; 0xfffffe08
    f2c4:	ldr	r0, [fp, #20]
    f2c8:	bl	23a0 <btbb_packet_get_transport@plt>
    f2cc:	mov	r1, r0
    f2d0:	ldr	r0, [fp, #20]
    f2d4:	str	r1, [fp, #-516]	; 0xfffffdfc
    f2d8:	bl	2154 <btbb_packet_get_modulation@plt>
    f2dc:	mov	r7, r0
    f2e0:	ldr	r0, [fp, #20]
    f2e4:	bl	23f4 <btbb_packet_get_lap@plt>
    f2e8:	mov	r2, r0
    f2ec:	ldr	r0, [fp, #20]
    f2f0:	str	r2, [fp, #-512]	; 0xfffffe00
    f2f4:	bl	2358 <btbb_packet_get_header_packed@plt>
    f2f8:	ldr	r3, [fp, #-520]	; 0xfffffdf8
    f2fc:	mov	ip, #6
    f300:	cmp	r4, #0
    f304:	ldr	r2, [fp, #-508]	; 0xfffffe04
    f308:	str	ip, [fp, #-488]	; 0xfffffe18
    f30c:	ldr	r1, [fp, #-516]	; 0xfffffdfc
    f310:	str	r3, [fp, #-476]	; 0xfffffe24
    f314:	mov	r3, #0
    f318:	strb	r9, [fp, #-459]	; 0xfffffe35
    f31c:	str	r3, [fp, #-480]	; 0xfffffe20
    f320:	str	r2, [fp, #-472]	; 0xfffffe28
    f324:	ldr	r2, [fp, #-500]	; 0xfffffe0c
    f328:	orr	r7, r7, r1, lsl #4
    f32c:	add	r1, r4, #61	; 0x3d
    f330:	strh	r3, [r6, #34]	; 0x22
    f334:	bic	sl, r1, #3
    f338:	add	r1, r4, #22
    f33c:	strb	r3, [fp, #-455]	; 0xfffffe39
    f340:	ldr	r3, [fp, #-496]	; 0xfffffe10
    f344:	str	sl, [fp, #-484]	; 0xfffffe1c
    f348:	str	r1, [fp, #-468]	; 0xfffffe2c
    f34c:	strb	r2, [fp, #-460]	; 0xfffffe34
    f350:	ldr	r2, [fp, #-504]	; 0xfffffe08
    f354:	str	r1, [fp, #-464]	; 0xfffffe30
    f358:	strb	r8, [fp, #-458]	; 0xfffffe36
    f35c:	str	r5, [fp, #-448]	; 0xfffffe40
    f360:	str	r0, [fp, #-444]	; 0xfffffe44
    f364:	strb	r2, [fp, #-457]	; 0xfffffe37
    f368:	ldr	r2, [fp, #-512]	; 0xfffffe00
    f36c:	strb	r7, [fp, #-456]	; 0xfffffe38
    f370:	strh	r3, [r6, #48]	; 0x30
    f374:	str	r2, [fp, #-452]	; 0xfffffe3c
    f378:	beq	f3a0 <btbb_pcapng_append_packet@@Base+0x188>
    f37c:	cmp	r4, #400	; 0x190
    f380:	bhi	f3e0 <btbb_pcapng_append_packet@@Base+0x1c8>
    f384:	mov	r2, r4
    f388:	mov	r1, sp
    f38c:	add	r0, r6, #50	; 0x32
    f390:	bl	216c <memcpy@plt>
    f394:	ldr	r3, [fp, #-496]	; 0xfffffe10
    f398:	orr	r3, r3, #32
    f39c:	strh	r3, [r6, #48]	; 0x30
    f3a0:	sub	r3, fp, #36	; 0x24
    f3a4:	mov	r2, #0
    f3a8:	ldr	r0, [fp, #-524]	; 0xfffffdf4
    f3ac:	add	r3, r3, sl
    f3b0:	mov	r1, r6
    f3b4:	str	r2, [r3, #-460]	; 0xfffffe34
    f3b8:	str	sl, [r3, #-456]	; 0xfffffe38
    f3bc:	bl	2394 <pcapng_append_packet@plt>
    f3c0:	rsb	r0, r0, #0
    f3c4:	sub	sp, fp, #32
    f3c8:	ldrd	r4, [sp]
    f3cc:	ldrd	r6, [sp, #8]
    f3d0:	ldrd	r8, [sp, #16]
    f3d4:	ldrd	sl, [sp, #24]
    f3d8:	add	sp, sp, #32
    f3dc:	pop	{pc}		; (ldr pc, [sp], #4)
    f3e0:	ldr	r3, [pc, #28]	; f404 <btbb_pcapng_append_packet@@Base+0x1ec>
    f3e4:	mov	r2, #221	; 0xdd
    f3e8:	ldr	r1, [pc, #24]	; f408 <btbb_pcapng_append_packet@@Base+0x1f0>
    f3ec:	ldr	r0, [pc, #24]	; f40c <btbb_pcapng_append_packet@@Base+0x1f4>
    f3f0:	add	r3, pc, r3
    f3f4:	add	r3, r3, #8
    f3f8:	add	r1, pc, r1
    f3fc:	add	r0, pc, r0
    f400:	bl	24f0 <__assert_fail@plt>
    f404:	andeq	r8, r0, r4, lsr #31
    f408:	strdeq	r8, [r0], -r0
    f40c:	andeq	r9, r0, ip, lsr r0

0000f410 <btbb_pcapng_record_bdaddr@@Base>:
    f410:	str	r4, [sp, #-8]!
    f414:	lsr	r4, r3, #8
    f418:	movw	ip, #54080	; 0xd340
    f41c:	movt	ip, #12
    f420:	str	lr, [sp, #4]
    f424:	sub	sp, sp, #16
    f428:	ldrb	lr, [sp, #24]
    f42c:	add	r1, sp, #4
    f430:	str	ip, [sp, #4]
    f434:	str	r2, [sp, #8]
    f438:	ldrb	r2, [sp, #28]
    f43c:	strb	r3, [sp, #12]
    f440:	strb	r4, [sp, #13]
    f444:	strb	lr, [sp, #14]
    f448:	strb	r2, [sp, #15]
    f44c:	bl	213c <pcapng_append_interface_option@plt>
    f450:	rsb	r0, r0, #0
    f454:	add	sp, sp, #16
    f458:	ldr	r4, [sp]
    f45c:	add	sp, sp, #4
    f460:	pop	{pc}		; (ldr pc, [sp], #4)

0000f464 <btbb_pcapng_record_btclock@@Base>:
    f464:	push	{lr}		; (str lr, [sp, #-4]!)
    f468:	sub	sp, sp, #28
    f46c:	movw	r3, #54081	; 0xd341
    f470:	movt	r3, #24
    f474:	ldr	lr, [sp, #32]
    f478:	mov	r1, sp
    f47c:	ldr	ip, [sp, #36]	; 0x24
    f480:	stm	sp, {r3, lr}
    f484:	str	r2, [sp, #12]
    f488:	ldrd	r2, [sp, #40]	; 0x28
    f48c:	str	ip, [sp, #8]
    f490:	strd	r2, [sp, #16]
    f494:	bl	213c <pcapng_append_interface_option@plt>
    f498:	rsb	r0, r0, #0
    f49c:	add	sp, sp, #28
    f4a0:	pop	{pc}		; (ldr pc, [sp], #4)

0000f4a4 <btbb_pcapng_close@@Base>:
    f4a4:	str	r4, [sp, #-8]!
    f4a8:	mov	r4, r0
    f4ac:	str	lr, [sp, #4]
    f4b0:	bl	249c <pcapng_close@plt>
    f4b4:	cmp	r4, #0
    f4b8:	beq	f4c4 <btbb_pcapng_close@@Base+0x20>
    f4bc:	mov	r0, r4
    f4c0:	bl	2148 <free@plt>
    f4c4:	ldr	r4, [sp]
    f4c8:	add	sp, sp, #4
    f4cc:	mvn	r0, #0
    f4d0:	pop	{pc}		; (ldr pc, [sp], #4)

0000f4d4 <lell_pcapng_create_file@@Base>:
    f4d4:	strd	r4, [sp, #-28]!	; 0xffffffe4
    f4d8:	mov	r4, r1
    f4dc:	strd	r6, [sp, #8]
    f4e0:	mov	r7, r2
    f4e4:	strd	r8, [sp, #16]
    f4e8:	mov	r9, r0
    f4ec:	mov	r0, #28
    f4f0:	ldr	r8, [pc, #240]	; f5e8 <lell_pcapng_create_file@@Base+0x114>
    f4f4:	str	lr, [sp, #24]
    f4f8:	sub	sp, sp, #284	; 0x11c
    f4fc:	bl	22c8 <malloc@plt>
    f500:	subs	r6, r0, #0
    f504:	add	r8, pc, r8
    f508:	beq	f5e0 <lell_pcapng_create_file@@Base+0x10c>
    f50c:	add	r5, sp, #20
    f510:	mov	r2, #260	; 0x104
    f514:	mov	r0, r5
    f518:	mov	r1, #0
    f51c:	bl	23c4 <memset@plt>
    f520:	mov	r3, #3
    f524:	cmp	r4, #0
    f528:	strh	r3, [r5]
    f52c:	beq	f558 <lell_pcapng_create_file@@Base+0x84>
    f530:	add	r3, sp, #24
    f534:	mov	r1, r4
    f538:	mov	r0, r3
    f53c:	mov	r2, #256	; 0x100
    f540:	bl	23dc <strncpy@plt>
    f544:	mov	r2, #0
    f548:	mov	r4, r5
    f54c:	strb	r2, [sp, #279]	; 0x117
    f550:	bl	2334 <strlen@plt>
    f554:	strh	r0, [r5, #2]
    f558:	bl	2388 <getpagesize@plt>
    f55c:	ldr	r2, [pc, #136]	; f5ec <lell_pcapng_create_file@@Base+0x118>
    f560:	mov	ip, r0
    f564:	mov	lr, #256	; 0x100
    f568:	mov	r0, #64	; 0x40
    f56c:	mov	r1, r9
    f570:	mov	r3, ip
    f574:	ldr	r2, [r8, r2]
    f578:	str	lr, [sp]
    f57c:	stmib	sp, {r0, r4, ip}
    f580:	mov	r0, r6
    f584:	bl	21fc <pcapng_create@plt>
    f588:	cmp	r0, #0
    f58c:	rsbne	r4, r0, #0
    f590:	beq	f5b8 <lell_pcapng_create_file@@Base+0xe4>
    f594:	mov	r0, r6
    f598:	bl	2148 <free@plt>
    f59c:	mov	r0, r4
    f5a0:	add	sp, sp, #284	; 0x11c
    f5a4:	ldrd	r4, [sp]
    f5a8:	ldrd	r6, [sp, #8]
    f5ac:	ldrd	r8, [sp, #16]
    f5b0:	add	sp, sp, #24
    f5b4:	pop	{pc}		; (ldr pc, [sp], #4)
    f5b8:	mov	r1, r4
    f5bc:	mov	r0, r6
    f5c0:	bl	f05c <pcapng_create@@Base+0x518>
    f5c4:	subs	r4, r0, #0
    f5c8:	streq	r6, [r7]
    f5cc:	beq	f59c <lell_pcapng_create_file@@Base+0xc8>
    f5d0:	mov	r0, r6
    f5d4:	rsb	r4, r4, #0
    f5d8:	bl	249c <pcapng_close@plt>
    f5dc:	b	f594 <lell_pcapng_create_file@@Base+0xc0>
    f5e0:	mvn	r4, #4
    f5e4:	b	f59c <lell_pcapng_create_file@@Base+0xc8>
    f5e8:	strdeq	r9, [r1], -r4
    f5ec:	muleq	r0, r4, r1

0000f5f0 <lell_pcapng_record_connect_req@@Base>:
    f5f0:	str	r4, [sp, #-8]!
    f5f4:	movw	r4, #54144	; 0xd380
    f5f8:	movt	r4, #46	; 0x2e
    f5fc:	str	lr, [sp, #4]
    f600:	sub	sp, sp, #48	; 0x30
    f604:	ldr	ip, [sp, #56]	; 0x38
    f608:	mov	r1, sp
    f60c:	str	r4, [sp]
    f610:	strd	r2, [sp, #4]
    f614:	ldr	r4, [ip]
    f618:	ldr	r2, [ip, #4]
    f61c:	ldr	r3, [ip, #8]
    f620:	str	r4, [sp, #12]
    f624:	ldr	r4, [ip, #12]
    f628:	strd	r2, [sp, #16]
    f62c:	ldr	r2, [ip, #16]
    f630:	str	r4, [sp, #24]
    f634:	ldr	r3, [ip, #20]
    f638:	ldr	r4, [ip, #24]
    f63c:	strd	r2, [sp, #28]
    f640:	ldr	r2, [ip, #28]
    f644:	str	r4, [sp, #36]	; 0x24
    f648:	ldrh	r3, [ip, #32]
    f64c:	str	r2, [sp, #40]	; 0x28
    f650:	strh	r3, [sp, #44]	; 0x2c
    f654:	bl	213c <pcapng_append_interface_option@plt>
    f658:	rsb	r0, r0, #0
    f65c:	add	sp, sp, #48	; 0x30
    f660:	ldr	r4, [sp]
    f664:	add	sp, sp, #4
    f668:	pop	{pc}		; (ldr pc, [sp], #4)

0000f66c <lell_pcapng_append_packet@@Base>:
    f66c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f670:	strd	r6, [sp, #8]
    f674:	strd	r8, [sp, #16]
    f678:	mov	r9, r0
    f67c:	strd	sl, [sp, #24]
    f680:	mov	sl, r3
    f684:	mov	fp, r2
    f688:	str	lr, [sp, #32]
    f68c:	sub	sp, sp, #316	; 0x13c
    f690:	ldr	r4, [sp, #364]	; 0x16c
    f694:	add	r3, sp, #352	; 0x160
    f698:	ldrsb	r8, [r3]
    f69c:	add	r3, sp, #356	; 0x164
    f6a0:	ldrsb	r7, [r3]
    f6a4:	mov	r0, r4
    f6a8:	bl	2118 <lell_packet_is_data@plt>
    f6ac:	ldr	r3, [r4, #72]	; 0x48
    f6b0:	cmp	r7, r8
    f6b4:	ldrb	r1, [r4, #69]	; 0x45
    f6b8:	movlt	ip, #39	; 0x27
    f6bc:	movge	ip, #35	; 0x23
    f6c0:	cmp	r0, #0
    f6c4:	ldrb	lr, [r4, #92]	; 0x5c
    f6c8:	add	r2, r3, #9
    f6cc:	orreq	ip, ip, #16
    f6d0:	add	r5, r3, #58	; 0x3a
    f6d4:	cmp	r2, #255	; 0xff
    f6d8:	uxth	ip, ip
    f6dc:	bic	r5, r5, #3
    f6e0:	add	r0, r3, #19
    f6e4:	bhi	f7b4 <lell_pcapng_append_packet@@Base+0x148>
    f6e8:	mov	r3, #0
    f6ec:	mov	r6, #6
    f6f0:	str	r0, [sp, #28]
    f6f4:	str	r0, [sp, #32]
    f6f8:	add	r0, sp, #46	; 0x2e
    f6fc:	str	r3, [sp, #16]
    f700:	ldr	r3, [sp, #360]	; 0x168
    f704:	strb	r1, [sp, #36]	; 0x24
    f708:	mov	r1, r4
    f70c:	str	r6, [sp, #8]
    f710:	add	r6, sp, #8
    f714:	str	r5, [sp, #12]
    f718:	strd	sl, [sp, #20]
    f71c:	strb	r8, [sp, #37]	; 0x25
    f720:	strb	r7, [sp, #38]	; 0x26
    f724:	strb	lr, [sp, #39]	; 0x27
    f728:	str	r3, [sp, #40]	; 0x28
    f72c:	strh	ip, [sp, #44]	; 0x2c
    f730:	bl	216c <memcpy@plt>
    f734:	add	r3, sp, #312	; 0x138
    f738:	mov	r1, r6
    f73c:	add	r2, r3, r5
    f740:	mov	r3, #0
    f744:	mov	r0, r9
    f748:	str	r3, [r2, #-312]	; 0xfffffec8
    f74c:	str	r5, [r2, #-308]	; 0xfffffecc
    f750:	bl	2394 <pcapng_append_packet@plt>
    f754:	rsb	r5, r0, #0
    f758:	cmp	r5, #0
    f75c:	beq	f780 <lell_pcapng_append_packet@@Base+0x114>
    f760:	mov	r0, r5
    f764:	add	sp, sp, #316	; 0x13c
    f768:	ldrd	r4, [sp]
    f76c:	ldrd	r6, [sp, #8]
    f770:	ldrd	r8, [sp, #16]
    f774:	ldrd	sl, [sp, #24]
    f778:	add	sp, sp, #32
    f77c:	pop	{pc}		; (ldr pc, [sp], #4)
    f780:	mov	r0, r4
    f784:	bl	2118 <lell_packet_is_data@plt>
    f788:	cmp	r0, #0
    f78c:	bne	f760 <lell_pcapng_append_packet@@Base+0xf4>
    f790:	ldrb	r3, [r4, #80]	; 0x50
    f794:	cmp	r3, #5
    f798:	bne	f760 <lell_pcapng_append_packet@@Base+0xf4>
    f79c:	mov	r2, fp
    f7a0:	mov	r3, sl
    f7a4:	str	r4, [sp]
    f7a8:	mov	r0, r9
    f7ac:	bl	2364 <lell_pcapng_record_connect_req@plt>
    f7b0:	b	f760 <lell_pcapng_append_packet@@Base+0xf4>
    f7b4:	ldr	r3, [pc, #28]	; f7d8 <lell_pcapng_append_packet@@Base+0x16c>
    f7b8:	movw	r2, #441	; 0x1b9
    f7bc:	ldr	r1, [pc, #24]	; f7dc <lell_pcapng_append_packet@@Base+0x170>
    f7c0:	ldr	r0, [pc, #24]	; f7e0 <lell_pcapng_append_packet@@Base+0x174>
    f7c4:	add	r3, pc, r3
    f7c8:	add	r3, r3, #40	; 0x28
    f7cc:	add	r1, pc, r1
    f7d0:	add	r0, pc, r0
    f7d4:	bl	24f0 <__assert_fail@plt>
    f7d8:	ldrdeq	r8, [r0], -r0
    f7dc:	andeq	r8, r0, ip, lsl ip
    f7e0:	andeq	r8, r0, r0, lsr #25

0000f7e4 <lell_pcapng_close@@Base>:
    f7e4:	str	r4, [sp, #-8]!
    f7e8:	mov	r4, r0
    f7ec:	str	lr, [sp, #4]
    f7f0:	bl	249c <pcapng_close@plt>
    f7f4:	cmp	r4, #0
    f7f8:	beq	f804 <lell_pcapng_close@@Base+0x20>
    f7fc:	mov	r0, r4
    f800:	bl	2148 <free@plt>
    f804:	ldr	r4, [sp]
    f808:	add	sp, sp, #4
    f80c:	mvn	r0, #0
    f810:	pop	{pc}		; (ldr pc, [sp], #4)
    f814:	cmp	r3, #0
    f818:	cmpeq	r2, #0
    f81c:	bne	f834 <lell_pcapng_close@@Base+0x50>
    f820:	cmp	r1, #0
    f824:	cmpeq	r0, #0
    f828:	mvnne	r1, #0
    f82c:	mvnne	r0, #0
    f830:	b	f850 <lell_pcapng_close@@Base+0x6c>
    f834:	sub	sp, sp, #8
    f838:	push	{sp, lr}
    f83c:	bl	f8c4 <lell_pcapng_close@@Base+0xe0>
    f840:	ldr	lr, [sp, #4]
    f844:	add	sp, sp, #8
    f848:	pop	{r2, r3}
    f84c:	bx	lr
    f850:	push	{r1, lr}
    f854:	mov	r0, #8
    f858:	bl	20b8 <raise@plt>
    f85c:	pop	{r1, pc}
    f860:	ldr	ip, [pc, #80]	; f8b8 <lell_pcapng_close@@Base+0xd4>
    f864:	ldr	r2, [pc, #80]	; f8bc <lell_pcapng_close@@Base+0xd8>
    f868:	and	r3, ip, r0, lsr #1
    f86c:	and	ip, ip, r1, lsr #1
    f870:	sub	ip, r1, ip
    f874:	sub	r0, r0, r3
    f878:	and	r3, r0, r2
    f87c:	and	r1, ip, r2
    f880:	and	r0, r2, r0, lsr #2
    f884:	and	r2, r2, ip, lsr #2
    f888:	add	r3, r3, r0
    f88c:	add	r1, r1, r2
    f890:	ldr	r0, [pc, #40]	; f8c0 <lell_pcapng_close@@Base+0xdc>
    f894:	add	r1, r1, r1, lsr #4
    f898:	add	r3, r3, r3, lsr #4
    f89c:	and	r3, r3, r0
    f8a0:	and	r0, r0, r1
    f8a4:	add	r0, r0, r3
    f8a8:	add	r0, r0, r0, lsl #8
    f8ac:	add	r0, r0, r0, lsl #16
    f8b0:	lsr	r0, r0, #24
    f8b4:	bx	lr
    f8b8:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
    f8bc:	teqcc	r3, #-872415232	; 0xcc000000
    f8c0:	svceq	0x000f0f0f
    f8c4:	cmp	r1, r3
    f8c8:	cmpeq	r0, r2
    f8cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f8d0:	mov	r4, r0
    f8d4:	movcc	r0, #0
    f8d8:	mov	r5, r1
    f8dc:	ldr	lr, [sp, #36]	; 0x24
    f8e0:	movcc	r1, r0
    f8e4:	bcc	f9e0 <lell_pcapng_close@@Base+0x1fc>
    f8e8:	cmp	r3, #0
    f8ec:	clzeq	ip, r2
    f8f0:	clzne	ip, r3
    f8f4:	addeq	ip, ip, #32
    f8f8:	cmp	r5, #0
    f8fc:	clzeq	r1, r4
    f900:	addeq	r1, r1, #32
    f904:	clzne	r1, r5
    f908:	sub	ip, ip, r1
    f90c:	sub	sl, ip, #32
    f910:	lsl	r9, r3, ip
    f914:	rsb	fp, ip, #32
    f918:	orr	r9, r9, r2, lsl sl
    f91c:	orr	r9, r9, r2, lsr fp
    f920:	lsl	r8, r2, ip
    f924:	cmp	r5, r9
    f928:	cmpeq	r4, r8
    f92c:	movcc	r0, #0
    f930:	movcc	r1, r0
    f934:	bcc	f950 <lell_pcapng_close@@Base+0x16c>
    f938:	mov	r0, #1
    f93c:	subs	r4, r4, r8
    f940:	lsl	r1, r0, sl
    f944:	orr	r1, r1, r0, lsr fp
    f948:	lsl	r0, r0, ip
    f94c:	sbc	r5, r5, r9
    f950:	cmp	ip, #0
    f954:	beq	f9e0 <lell_pcapng_close@@Base+0x1fc>
    f958:	lsr	r6, r8, #1
    f95c:	orr	r6, r6, r9, lsl #31
    f960:	lsr	r7, r9, #1
    f964:	mov	r2, ip
    f968:	b	f98c <lell_pcapng_close@@Base+0x1a8>
    f96c:	subs	r3, r4, r6
    f970:	sbc	r8, r5, r7
    f974:	adds	r3, r3, r3
    f978:	adc	r8, r8, r8
    f97c:	adds	r4, r3, #1
    f980:	adc	r5, r8, #0
    f984:	subs	r2, r2, #1
    f988:	beq	f9a8 <lell_pcapng_close@@Base+0x1c4>
    f98c:	cmp	r5, r7
    f990:	cmpeq	r4, r6
    f994:	bcs	f96c <lell_pcapng_close@@Base+0x188>
    f998:	adds	r4, r4, r4
    f99c:	adc	r5, r5, r5
    f9a0:	subs	r2, r2, #1
    f9a4:	bne	f98c <lell_pcapng_close@@Base+0x1a8>
    f9a8:	lsr	r3, r4, ip
    f9ac:	orr	r3, r3, r5, lsl fp
    f9b0:	lsr	r2, r5, ip
    f9b4:	orr	r3, r3, r5, lsr sl
    f9b8:	adds	r0, r0, r4
    f9bc:	mov	r4, r3
    f9c0:	lsl	r3, r2, ip
    f9c4:	orr	r3, r3, r4, lsl sl
    f9c8:	lsl	ip, r4, ip
    f9cc:	orr	r3, r3, r4, lsr fp
    f9d0:	adc	r1, r1, r5
    f9d4:	subs	r0, r0, ip
    f9d8:	mov	r5, r2
    f9dc:	sbc	r1, r1, r3
    f9e0:	cmp	lr, #0
    f9e4:	strdne	r4, [lr]
    f9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

0000f9ec <.fini>:
    f9ec:	push	{r3, lr}
    f9f0:	pop	{r3, pc}
