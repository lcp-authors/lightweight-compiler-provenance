
../repos/coreutils/src/yes:     file format elf32-littlearm


Disassembly of section .init:

00010af4 <.init>:
   10af4:	push	{r3, lr}
   10af8:	bl	10d60 <abort@plt+0x48>
   10afc:	pop	{r3, pc}

Disassembly of section .plt:

00010b00 <calloc@plt-0x14>:
   10b00:	push	{lr}		; (str lr, [sp, #-4]!)
   10b04:	ldr	lr, [pc, #4]	; 10b10 <calloc@plt-0x4>
   10b08:	add	lr, pc, lr
   10b0c:	ldr	pc, [lr, #8]!
   10b10:	strdeq	r5, [r1], -r0

00010b14 <calloc@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #86016	; 0x15000
   10b1c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b20 <fputs_unlocked@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #86016	; 0x15000
   10b28:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b2c <raise@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #86016	; 0x15000
   10b34:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b38 <strcmp@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #86016	; 0x15000
   10b40:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b44 <fflush@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #86016	; 0x15000
   10b4c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b50 <free@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #86016	; 0x15000
   10b58:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b5c <_exit@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #86016	; 0x15000
   10b64:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b68 <memcpy@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #86016	; 0x15000
   10b70:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b74 <mbsinit@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #86016	; 0x15000
   10b7c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b80 <memcmp@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #86016	; 0x15000
   10b88:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b8c <fputc_unlocked@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #86016	; 0x15000
   10b94:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b98 <dcgettext@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #86016	; 0x15000
   10ba0:	ldr	pc, [ip, #1176]!	; 0x498

00010ba4 <realloc@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #86016	; 0x15000
   10bac:	ldr	pc, [ip, #1168]!	; 0x490

00010bb0 <textdomain@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #86016	; 0x15000
   10bb8:	ldr	pc, [ip, #1160]!	; 0x488

00010bbc <iswprint@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #86016	; 0x15000
   10bc4:	ldr	pc, [ip, #1152]!	; 0x480

00010bc8 <fwrite@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #86016	; 0x15000
   10bd0:	ldr	pc, [ip, #1144]!	; 0x478

00010bd4 <lseek64@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #86016	; 0x15000
   10bdc:	ldr	pc, [ip, #1136]!	; 0x470

00010be0 <__ctype_get_mb_cur_max@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #86016	; 0x15000
   10be8:	ldr	pc, [ip, #1128]!	; 0x468

00010bec <__fpending@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #86016	; 0x15000
   10bf4:	ldr	pc, [ip, #1120]!	; 0x460

00010bf8 <mbrtowc@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #86016	; 0x15000
   10c00:	ldr	pc, [ip, #1112]!	; 0x458

00010c04 <error@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #86016	; 0x15000
   10c0c:	ldr	pc, [ip, #1104]!	; 0x450

00010c10 <malloc@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #86016	; 0x15000
   10c18:	ldr	pc, [ip, #1096]!	; 0x448

00010c1c <__libc_start_main@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #86016	; 0x15000
   10c24:	ldr	pc, [ip, #1088]!	; 0x440

00010c28 <__freading@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #86016	; 0x15000
   10c30:	ldr	pc, [ip, #1080]!	; 0x438

00010c34 <__gmon_start__@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #86016	; 0x15000
   10c3c:	ldr	pc, [ip, #1072]!	; 0x430

00010c40 <getopt_long@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #86016	; 0x15000
   10c48:	ldr	pc, [ip, #1064]!	; 0x428

00010c4c <__ctype_b_loc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #86016	; 0x15000
   10c54:	ldr	pc, [ip, #1056]!	; 0x420

00010c58 <exit@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #86016	; 0x15000
   10c60:	ldr	pc, [ip, #1048]!	; 0x418

00010c64 <strlen@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #86016	; 0x15000
   10c6c:	ldr	pc, [ip, #1040]!	; 0x410

00010c70 <__errno_location@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #86016	; 0x15000
   10c78:	ldr	pc, [ip, #1032]!	; 0x408

00010c7c <__cxa_atexit@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #86016	; 0x15000
   10c84:	ldr	pc, [ip, #1024]!	; 0x400

00010c88 <memset@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c94 <__printf_chk@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #1008]!	; 0x3f0

00010ca0 <write@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #1000]!	; 0x3e8

00010cac <fileno@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #992]!	; 0x3e0

00010cb8 <__fprintf_chk@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #984]!	; 0x3d8

00010cc4 <fclose@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #976]!	; 0x3d0

00010cd0 <fseeko64@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #968]!	; 0x3c8

00010cdc <setlocale@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #960]!	; 0x3c0

00010ce8 <strrchr@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #952]!	; 0x3b8

00010cf4 <nl_langinfo@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #944]!	; 0x3b0

00010d00 <bindtextdomain@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #936]!	; 0x3a8

00010d0c <strncmp@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #928]!	; 0x3a0

00010d18 <abort@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #920]!	; 0x398

Disassembly of section .text:

00010d24 <.text>:
   10d24:	mov	fp, #0
   10d28:	mov	lr, #0
   10d2c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d30:	mov	r2, sp
   10d34:	push	{r2}		; (str r2, [sp, #-4]!)
   10d38:	push	{r0}		; (str r0, [sp, #-4]!)
   10d3c:	ldr	ip, [pc, #16]	; 10d54 <abort@plt+0x3c>
   10d40:	push	{ip}		; (str ip, [sp, #-4]!)
   10d44:	ldr	r0, [pc, #12]	; 10d58 <abort@plt+0x40>
   10d48:	ldr	r3, [pc, #12]	; 10d5c <abort@plt+0x44>
   10d4c:	bl	10c1c <__libc_start_main@plt>
   10d50:	bl	10d18 <abort@plt>
   10d54:			; <UNDEFINED> instruction: 0x000147b8
   10d58:	andeq	r1, r1, ip, asr r1
   10d5c:	andeq	r4, r1, r8, asr r7
   10d60:	ldr	r3, [pc, #20]	; 10d7c <abort@plt+0x64>
   10d64:	ldr	r2, [pc, #20]	; 10d80 <abort@plt+0x68>
   10d68:	add	r3, pc, r3
   10d6c:	ldr	r2, [r3, r2]
   10d70:	cmp	r2, #0
   10d74:	bxeq	lr
   10d78:	b	10c34 <__gmon_start__@plt>
   10d7c:	muleq	r1, r0, r2
   10d80:	strheq	r0, [r0], -ip
   10d84:	ldr	r3, [pc, #28]	; 10da8 <abort@plt+0x90>
   10d88:	ldr	r0, [pc, #28]	; 10dac <abort@plt+0x94>
   10d8c:	sub	r3, r3, r0
   10d90:	cmp	r3, #6
   10d94:	bxls	lr
   10d98:	ldr	r3, [pc, #16]	; 10db0 <abort@plt+0x98>
   10d9c:	cmp	r3, #0
   10da0:	bxeq	lr
   10da4:	bx	r3
   10da8:	andeq	r6, r2, r3, lsl r1
   10dac:	andeq	r6, r2, r0, lsl r1
   10db0:	andeq	r0, r0, r0
   10db4:	ldr	r1, [pc, #36]	; 10de0 <abort@plt+0xc8>
   10db8:	ldr	r0, [pc, #36]	; 10de4 <abort@plt+0xcc>
   10dbc:	sub	r1, r1, r0
   10dc0:	asr	r1, r1, #2
   10dc4:	add	r1, r1, r1, lsr #31
   10dc8:	asrs	r1, r1, #1
   10dcc:	bxeq	lr
   10dd0:	ldr	r3, [pc, #16]	; 10de8 <abort@plt+0xd0>
   10dd4:	cmp	r3, #0
   10dd8:	bxeq	lr
   10ddc:	bx	r3
   10de0:	andeq	r6, r2, r0, lsl r1
   10de4:	andeq	r6, r2, r0, lsl r1
   10de8:	andeq	r0, r0, r0
   10dec:	push	{r4, lr}
   10df0:	ldr	r4, [pc, #24]	; 10e10 <abort@plt+0xf8>
   10df4:	ldrb	r3, [r4]
   10df8:	cmp	r3, #0
   10dfc:	popne	{r4, pc}
   10e00:	bl	10d84 <abort@plt+0x6c>
   10e04:	mov	r3, #1
   10e08:	strb	r3, [r4]
   10e0c:	pop	{r4, pc}
   10e10:	andeq	r6, r2, ip, lsr #2
   10e14:	ldr	r0, [pc, #40]	; 10e44 <abort@plt+0x12c>
   10e18:	ldr	r3, [r0]
   10e1c:	cmp	r3, #0
   10e20:	bne	10e28 <abort@plt+0x110>
   10e24:	b	10db4 <abort@plt+0x9c>
   10e28:	ldr	r3, [pc, #24]	; 10e48 <abort@plt+0x130>
   10e2c:	cmp	r3, #0
   10e30:	beq	10e24 <abort@plt+0x10c>
   10e34:	push	{r4, lr}
   10e38:	blx	r3
   10e3c:	pop	{r4, lr}
   10e40:	b	10db4 <abort@plt+0x9c>
   10e44:	andeq	r5, r2, r4, lsl pc
   10e48:	andeq	r0, r0, r0
   10e4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e50:	sub	sp, sp, #60	; 0x3c
   10e54:	subs	r6, r0, #0
   10e58:	beq	10e94 <abort@plt+0x17c>
   10e5c:	ldr	r3, [pc, #684]	; 11110 <abort@plt+0x3f8>
   10e60:	ldr	r4, [r3]
   10e64:	mov	r2, #5
   10e68:	ldr	r1, [pc, #676]	; 11114 <abort@plt+0x3fc>
   10e6c:	mov	r0, #0
   10e70:	bl	10b98 <dcgettext@plt>
   10e74:	ldr	r3, [pc, #668]	; 11118 <abort@plt+0x400>
   10e78:	ldr	r3, [r3]
   10e7c:	mov	r2, r0
   10e80:	mov	r1, #1
   10e84:	mov	r0, r4
   10e88:	bl	10cb8 <__fprintf_chk@plt>
   10e8c:	mov	r0, r6
   10e90:	bl	10c58 <exit@plt>
   10e94:	mov	r2, #5
   10e98:	ldr	r1, [pc, #636]	; 1111c <abort@plt+0x404>
   10e9c:	mov	r0, #0
   10ea0:	bl	10b98 <dcgettext@plt>
   10ea4:	ldr	r3, [pc, #620]	; 11118 <abort@plt+0x400>
   10ea8:	ldr	r2, [r3]
   10eac:	mov	r3, r2
   10eb0:	mov	r1, r0
   10eb4:	mov	r0, #1
   10eb8:	bl	10c94 <__printf_chk@plt>
   10ebc:	mov	r2, #5
   10ec0:	ldr	r1, [pc, #600]	; 11120 <abort@plt+0x408>
   10ec4:	mov	r0, #0
   10ec8:	bl	10b98 <dcgettext@plt>
   10ecc:	ldr	r4, [pc, #592]	; 11124 <abort@plt+0x40c>
   10ed0:	ldr	r1, [r4]
   10ed4:	bl	10b20 <fputs_unlocked@plt>
   10ed8:	mov	r2, #5
   10edc:	ldr	r1, [pc, #580]	; 11128 <abort@plt+0x410>
   10ee0:	mov	r0, #0
   10ee4:	bl	10b98 <dcgettext@plt>
   10ee8:	ldr	r1, [r4]
   10eec:	bl	10b20 <fputs_unlocked@plt>
   10ef0:	mov	r2, #5
   10ef4:	ldr	r1, [pc, #560]	; 1112c <abort@plt+0x414>
   10ef8:	mov	r0, #0
   10efc:	bl	10b98 <dcgettext@plt>
   10f00:	ldr	r1, [r4]
   10f04:	bl	10b20 <fputs_unlocked@plt>
   10f08:	mov	ip, sp
   10f0c:	ldr	lr, [pc, #540]	; 11130 <abort@plt+0x418>
   10f10:	ldm	lr!, {r0, r1, r2, r3}
   10f14:	stmia	ip!, {r0, r1, r2, r3}
   10f18:	ldm	lr!, {r0, r1, r2, r3}
   10f1c:	stmia	ip!, {r0, r1, r2, r3}
   10f20:	ldm	lr!, {r0, r1, r2, r3}
   10f24:	stmia	ip!, {r0, r1, r2, r3}
   10f28:	ldm	lr, {r0, r1}
   10f2c:	stm	ip, {r0, r1}
   10f30:	ldr	r1, [sp]
   10f34:	cmp	r1, #0
   10f38:	moveq	r4, sp
   10f3c:	beq	10f64 <abort@plt+0x24c>
   10f40:	mov	r4, sp
   10f44:	ldr	r5, [pc, #488]	; 11134 <abort@plt+0x41c>
   10f48:	mov	r0, r5
   10f4c:	bl	10b38 <strcmp@plt>
   10f50:	cmp	r0, #0
   10f54:	beq	10f64 <abort@plt+0x24c>
   10f58:	ldr	r1, [r4, #8]!
   10f5c:	cmp	r1, #0
   10f60:	bne	10f48 <abort@plt+0x230>
   10f64:	ldr	r4, [r4, #4]
   10f68:	cmp	r4, #0
   10f6c:	beq	11080 <abort@plt+0x368>
   10f70:	mov	r2, #5
   10f74:	ldr	r1, [pc, #444]	; 11138 <abort@plt+0x420>
   10f78:	mov	r0, #0
   10f7c:	bl	10b98 <dcgettext@plt>
   10f80:	ldr	r3, [pc, #436]	; 1113c <abort@plt+0x424>
   10f84:	ldr	r2, [pc, #436]	; 11140 <abort@plt+0x428>
   10f88:	mov	r1, r0
   10f8c:	mov	r0, #1
   10f90:	bl	10c94 <__printf_chk@plt>
   10f94:	mov	r1, #0
   10f98:	mov	r0, #5
   10f9c:	bl	10cdc <setlocale@plt>
   10fa0:	cmp	r0, #0
   10fa4:	beq	10fbc <abort@plt+0x2a4>
   10fa8:	mov	r2, #3
   10fac:	ldr	r1, [pc, #400]	; 11144 <abort@plt+0x42c>
   10fb0:	bl	10d0c <strncmp@plt>
   10fb4:	cmp	r0, #0
   10fb8:	bne	1101c <abort@plt+0x304>
   10fbc:	mov	r2, #5
   10fc0:	ldr	r1, [pc, #384]	; 11148 <abort@plt+0x430>
   10fc4:	mov	r0, #0
   10fc8:	bl	10b98 <dcgettext@plt>
   10fcc:	ldr	r5, [pc, #352]	; 11134 <abort@plt+0x41c>
   10fd0:	mov	r3, r5
   10fd4:	ldr	r2, [pc, #352]	; 1113c <abort@plt+0x424>
   10fd8:	mov	r1, r0
   10fdc:	mov	r0, #1
   10fe0:	bl	10c94 <__printf_chk@plt>
   10fe4:	mov	r2, #5
   10fe8:	ldr	r1, [pc, #348]	; 1114c <abort@plt+0x434>
   10fec:	mov	r0, #0
   10ff0:	bl	10b98 <dcgettext@plt>
   10ff4:	mov	r1, r0
   10ff8:	ldr	r2, [pc, #336]	; 11150 <abort@plt+0x438>
   10ffc:	ldr	r3, [pc, #336]	; 11154 <abort@plt+0x43c>
   11000:	cmp	r4, r5
   11004:	movne	r3, r2
   11008:	mov	r2, r4
   1100c:	mov	r0, #1
   11010:	bl	10c94 <__printf_chk@plt>
   11014:	b	10e8c <abort@plt+0x174>
   11018:	ldr	r4, [pc, #276]	; 11134 <abort@plt+0x41c>
   1101c:	mov	r2, #5
   11020:	ldr	r1, [pc, #304]	; 11158 <abort@plt+0x440>
   11024:	mov	r0, #0
   11028:	bl	10b98 <dcgettext@plt>
   1102c:	ldr	r3, [pc, #240]	; 11124 <abort@plt+0x40c>
   11030:	ldr	r1, [r3]
   11034:	bl	10b20 <fputs_unlocked@plt>
   11038:	b	10fbc <abort@plt+0x2a4>
   1103c:	mov	r2, #5
   11040:	ldr	r1, [pc, #256]	; 11148 <abort@plt+0x430>
   11044:	mov	r0, #0
   11048:	bl	10b98 <dcgettext@plt>
   1104c:	ldr	r4, [pc, #224]	; 11134 <abort@plt+0x41c>
   11050:	mov	r3, r4
   11054:	ldr	r2, [pc, #224]	; 1113c <abort@plt+0x424>
   11058:	mov	r1, r0
   1105c:	mov	r0, #1
   11060:	bl	10c94 <__printf_chk@plt>
   11064:	mov	r2, #5
   11068:	ldr	r1, [pc, #220]	; 1114c <abort@plt+0x434>
   1106c:	mov	r0, #0
   11070:	bl	10b98 <dcgettext@plt>
   11074:	mov	r1, r0
   11078:	ldr	r3, [pc, #212]	; 11154 <abort@plt+0x43c>
   1107c:	b	11008 <abort@plt+0x2f0>
   11080:	mov	r2, #5
   11084:	ldr	r1, [pc, #172]	; 11138 <abort@plt+0x420>
   11088:	mov	r0, #0
   1108c:	bl	10b98 <dcgettext@plt>
   11090:	ldr	r3, [pc, #164]	; 1113c <abort@plt+0x424>
   11094:	ldr	r2, [pc, #164]	; 11140 <abort@plt+0x428>
   11098:	mov	r1, r0
   1109c:	mov	r0, #1
   110a0:	bl	10c94 <__printf_chk@plt>
   110a4:	mov	r1, #0
   110a8:	mov	r0, #5
   110ac:	bl	10cdc <setlocale@plt>
   110b0:	cmp	r0, #0
   110b4:	beq	1103c <abort@plt+0x324>
   110b8:	mov	r2, #3
   110bc:	ldr	r1, [pc, #128]	; 11144 <abort@plt+0x42c>
   110c0:	bl	10d0c <strncmp@plt>
   110c4:	cmp	r0, #0
   110c8:	bne	11018 <abort@plt+0x300>
   110cc:	mov	r2, #5
   110d0:	ldr	r1, [pc, #112]	; 11148 <abort@plt+0x430>
   110d4:	mov	r0, #0
   110d8:	bl	10b98 <dcgettext@plt>
   110dc:	ldr	r4, [pc, #80]	; 11134 <abort@plt+0x41c>
   110e0:	mov	r3, r4
   110e4:	ldr	r2, [pc, #80]	; 1113c <abort@plt+0x424>
   110e8:	mov	r1, r0
   110ec:	mov	r0, #1
   110f0:	bl	10c94 <__printf_chk@plt>
   110f4:	mov	r2, #5
   110f8:	ldr	r1, [pc, #76]	; 1114c <abort@plt+0x434>
   110fc:	mov	r0, #0
   11100:	bl	10b98 <dcgettext@plt>
   11104:	mov	r1, r0
   11108:	ldr	r3, [pc, #68]	; 11154 <abort@plt+0x43c>
   1110c:	b	11008 <abort@plt+0x2f0>
   11110:	andeq	r6, r2, r0, lsr #2
   11114:	andeq	r4, r1, ip, lsl r8
   11118:	andeq	r6, r2, r8, lsr r1
   1111c:	andeq	r4, r1, r4, asr #16
   11120:	andeq	r4, r1, ip, ror #16
   11124:	andeq	r6, r2, r4, lsr #2
   11128:			; <UNDEFINED> instruction: 0x000148b0
   1112c:	andeq	r4, r1, r0, ror #17
   11130:	andeq	r4, r1, r0, ror #15
   11134:	andeq	r4, r1, r8, lsl r8
   11138:	andeq	r4, r1, r8, lsl r9
   1113c:	andeq	r4, r1, r0, lsr r9
   11140:	andeq	r4, r1, r8, asr r9
   11144:	andeq	r4, r1, r8, ror #18
   11148:			; <UNDEFINED> instruction: 0x000149b4
   1114c:	ldrdeq	r4, [r1], -r0
   11150:	andeq	r4, r1, ip, lsr #17
   11154:	andeq	r4, r1, r8, asr #20
   11158:	andeq	r4, r1, ip, ror #18
   1115c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11160:	sub	sp, sp, #28
   11164:	mov	r4, r0
   11168:	mov	r6, r1
   1116c:	ldr	r0, [r1]
   11170:	bl	11688 <abort@plt+0x970>
   11174:	ldr	r1, [pc, #468]	; 11350 <abort@plt+0x638>
   11178:	mov	r0, #6
   1117c:	bl	10cdc <setlocale@plt>
   11180:	ldr	r5, [pc, #460]	; 11354 <abort@plt+0x63c>
   11184:	ldr	r1, [pc, #460]	; 11358 <abort@plt+0x640>
   11188:	mov	r0, r5
   1118c:	bl	10d00 <bindtextdomain@plt>
   11190:	mov	r0, r5
   11194:	bl	10bb0 <textdomain@plt>
   11198:	ldr	r0, [pc, #444]	; 1135c <abort@plt+0x644>
   1119c:	bl	147bc <abort@plt+0x3aa4>
   111a0:	mov	r3, #0
   111a4:	str	r3, [sp, #16]
   111a8:	ldr	r3, [pc, #432]	; 11360 <abort@plt+0x648>
   111ac:	str	r3, [sp, #12]
   111b0:	ldr	r3, [pc, #428]	; 11364 <abort@plt+0x64c>
   111b4:	str	r3, [sp, #8]
   111b8:	mov	r3, #1
   111bc:	str	r3, [sp, #4]
   111c0:	ldr	r3, [pc, #416]	; 11368 <abort@plt+0x650>
   111c4:	ldr	r3, [r3]
   111c8:	str	r3, [sp]
   111cc:	ldr	r3, [pc, #408]	; 1136c <abort@plt+0x654>
   111d0:	ldr	r2, [pc, #408]	; 11370 <abort@plt+0x658>
   111d4:	mov	r1, r6
   111d8:	mov	r0, r4
   111dc:	bl	115b8 <abort@plt+0x8a0>
   111e0:	ldr	r3, [pc, #396]	; 11374 <abort@plt+0x65c>
   111e4:	ldr	r9, [r3]
   111e8:	add	r7, r6, r9, lsl #2
   111ec:	add	fp, r6, r4, lsl #2
   111f0:	cmp	r4, r9
   111f4:	ldreq	r3, [pc, #380]	; 11378 <abort@plt+0x660>
   111f8:	streq	r3, [r6, r4, lsl #2]
   111fc:	addeq	fp, fp, #4
   11200:	mov	r5, r7
   11204:	mov	r8, #1
   11208:	mov	sl, #0
   1120c:	ldr	r4, [r5], #4
   11210:	mov	r0, r4
   11214:	bl	10c64 <strlen@plt>
   11218:	add	r0, r0, #1
   1121c:	add	sl, sl, r0
   11220:	cmp	fp, r5
   11224:	bls	11334 <abort@plt+0x61c>
   11228:	add	r4, r4, r0
   1122c:	ldr	r3, [r5]
   11230:	cmp	r3, r4
   11234:	movne	r8, #0
   11238:	b	1120c <abort@plt+0x4f4>
   1123c:	mov	r8, #0
   11240:	mov	sl, #8192	; 0x2000
   11244:	mov	r0, sl
   11248:	bl	137e4 <abort@plt+0x2acc>
   1124c:	mov	r6, r0
   11250:	b	11348 <abort@plt+0x630>
   11254:	add	r4, r5, r4
   11258:	add	r5, r4, #1
   1125c:	add	r3, r6, r4
   11260:	mov	r2, #32
   11264:	strb	r2, [r6, r4]
   11268:	cmp	fp, r7
   1126c:	bls	1129c <abort@plt+0x584>
   11270:	ldr	r9, [r7], #4
   11274:	mov	r0, r9
   11278:	bl	10c64 <strlen@plt>
   1127c:	mov	r4, r0
   11280:	cmp	r8, #0
   11284:	bne	11254 <abort@plt+0x53c>
   11288:	mov	r2, r0
   1128c:	mov	r1, r9
   11290:	add	r0, r6, r5
   11294:	bl	10b68 <memcpy@plt>
   11298:	b	11254 <abort@plt+0x53c>
   1129c:	mov	r2, #10
   112a0:	strb	r2, [r3]
   112a4:	mov	r1, r5
   112a8:	mov	r0, sl
   112ac:	bl	142fc <abort@plt+0x35e4>
   112b0:	mov	r8, r0
   112b4:	subs	r4, r0, #1
   112b8:	beq	112e8 <abort@plt+0x5d0>
   112bc:	add	r7, r6, r5
   112c0:	mov	r2, r5
   112c4:	mov	r1, r6
   112c8:	mov	r0, r7
   112cc:	bl	10b68 <memcpy@plt>
   112d0:	add	r7, r7, r5
   112d4:	subs	r4, r4, #1
   112d8:	bne	112c0 <abort@plt+0x5a8>
   112dc:	sub	r8, r8, #2
   112e0:	mul	r8, r5, r8
   112e4:	add	r5, r8, r5, lsl #1
   112e8:	mov	r4, #1
   112ec:	mov	r2, r5
   112f0:	mov	r1, r6
   112f4:	mov	r0, r4
   112f8:	bl	11494 <abort@plt+0x77c>
   112fc:	cmp	r0, r5
   11300:	beq	112ec <abort@plt+0x5d4>
   11304:	bl	10c70 <__errno_location@plt>
   11308:	ldr	r4, [r0]
   1130c:	mov	r2, #5
   11310:	ldr	r1, [pc, #100]	; 1137c <abort@plt+0x664>
   11314:	mov	r0, #0
   11318:	bl	10b98 <dcgettext@plt>
   1131c:	mov	r2, r0
   11320:	mov	r1, r4
   11324:	mov	r0, #0
   11328:	bl	10c04 <error@plt>
   1132c:	mov	r0, #1
   11330:	bl	10c58 <exit@plt>
   11334:	cmp	sl, #4096	; 0x1000
   11338:	bls	1123c <abort@plt+0x524>
   1133c:	cmp	r8, #0
   11340:	beq	11244 <abort@plt+0x52c>
   11344:	ldr	r6, [r6, r9, lsl #2]
   11348:	mov	r5, #0
   1134c:	b	11270 <abort@plt+0x558>
   11350:	andeq	r4, r1, ip, lsr #17
   11354:	andeq	r4, r1, ip, asr r9
   11358:	andeq	r4, r1, r4, lsl #20
   1135c:	andeq	r1, r1, r0, lsr #7
   11360:	andeq	r4, r1, ip, lsl sl
   11364:	andeq	r0, r1, ip, asr #28
   11368:	andeq	r6, r2, r8, asr #1
   1136c:	andeq	r4, r1, r8, asr r9
   11370:	andeq	r4, r1, r8, lsl r8
   11374:	andeq	r6, r2, r8, lsl r1
   11378:	andeq	r4, r1, ip, lsr #20
   1137c:	andeq	r4, r1, r0, lsr sl
   11380:	ldr	r3, [pc, #4]	; 1138c <abort@plt+0x674>
   11384:	str	r0, [r3]
   11388:	bx	lr
   1138c:	andeq	r6, r2, r0, lsr r1
   11390:	ldr	r3, [pc, #4]	; 1139c <abort@plt+0x684>
   11394:	strb	r0, [r3, #4]
   11398:	bx	lr
   1139c:	andeq	r6, r2, r0, lsr r1
   113a0:	push	{r4, r5, r6, lr}
   113a4:	sub	sp, sp, #8
   113a8:	ldr	r3, [pc, #200]	; 11478 <abort@plt+0x760>
   113ac:	ldr	r0, [r3]
   113b0:	bl	13e98 <abort@plt+0x3180>
   113b4:	cmp	r0, #0
   113b8:	beq	113dc <abort@plt+0x6c4>
   113bc:	ldr	r3, [pc, #184]	; 1147c <abort@plt+0x764>
   113c0:	ldrb	r3, [r3, #4]
   113c4:	cmp	r3, #0
   113c8:	beq	113f8 <abort@plt+0x6e0>
   113cc:	bl	10c70 <__errno_location@plt>
   113d0:	ldr	r3, [r0]
   113d4:	cmp	r3, #32
   113d8:	bne	113f8 <abort@plt+0x6e0>
   113dc:	ldr	r3, [pc, #156]	; 11480 <abort@plt+0x768>
   113e0:	ldr	r0, [r3]
   113e4:	bl	13e98 <abort@plt+0x3180>
   113e8:	cmp	r0, #0
   113ec:	bne	1146c <abort@plt+0x754>
   113f0:	add	sp, sp, #8
   113f4:	pop	{r4, r5, r6, pc}
   113f8:	mov	r2, #5
   113fc:	ldr	r1, [pc, #128]	; 11484 <abort@plt+0x76c>
   11400:	mov	r0, #0
   11404:	bl	10b98 <dcgettext@plt>
   11408:	mov	r4, r0
   1140c:	ldr	r3, [pc, #104]	; 1147c <abort@plt+0x764>
   11410:	ldr	r5, [r3]
   11414:	cmp	r5, #0
   11418:	beq	11450 <abort@plt+0x738>
   1141c:	bl	10c70 <__errno_location@plt>
   11420:	ldr	r6, [r0]
   11424:	mov	r0, r5
   11428:	bl	13050 <abort@plt+0x2338>
   1142c:	str	r4, [sp]
   11430:	mov	r3, r0
   11434:	ldr	r2, [pc, #76]	; 11488 <abort@plt+0x770>
   11438:	mov	r1, r6
   1143c:	mov	r0, #0
   11440:	bl	10c04 <error@plt>
   11444:	ldr	r3, [pc, #64]	; 1148c <abort@plt+0x774>
   11448:	ldr	r0, [r3]
   1144c:	bl	10b5c <_exit@plt>
   11450:	bl	10c70 <__errno_location@plt>
   11454:	mov	r3, r4
   11458:	ldr	r2, [pc, #48]	; 11490 <abort@plt+0x778>
   1145c:	ldr	r1, [r0]
   11460:	mov	r0, #0
   11464:	bl	10c04 <error@plt>
   11468:	b	11444 <abort@plt+0x72c>
   1146c:	ldr	r3, [pc, #24]	; 1148c <abort@plt+0x774>
   11470:	ldr	r0, [r3]
   11474:	bl	10b5c <_exit@plt>
   11478:	andeq	r6, r2, r4, lsr #2
   1147c:	andeq	r6, r2, r0, lsr r1
   11480:	andeq	r6, r2, r0, lsr #2
   11484:			; <UNDEFINED> instruction: 0x00014abc
   11488:	andeq	r4, r1, r8, asr #21
   1148c:	andeq	r6, r2, ip, asr #1
   11490:	andeq	r4, r1, ip, asr #21
   11494:	push	{r4, r5, r6, r7, r8, lr}
   11498:	subs	r4, r2, #0
   1149c:	beq	114f4 <abort@plt+0x7dc>
   114a0:	mov	r7, r0
   114a4:	mov	r5, r1
   114a8:	mov	r6, #0
   114ac:	mov	r2, r4
   114b0:	mov	r1, r5
   114b4:	mov	r0, r7
   114b8:	bl	131ec <abort@plt+0x24d4>
   114bc:	cmn	r0, #1
   114c0:	beq	114ec <abort@plt+0x7d4>
   114c4:	cmp	r0, #0
   114c8:	beq	114e0 <abort@plt+0x7c8>
   114cc:	add	r6, r6, r0
   114d0:	add	r5, r5, r0
   114d4:	subs	r4, r4, r0
   114d8:	bne	114ac <abort@plt+0x794>
   114dc:	b	114ec <abort@plt+0x7d4>
   114e0:	bl	10c70 <__errno_location@plt>
   114e4:	mov	r3, #28
   114e8:	str	r3, [r0]
   114ec:	mov	r0, r6
   114f0:	pop	{r4, r5, r6, r7, r8, pc}
   114f4:	mov	r6, r4
   114f8:	b	114ec <abort@plt+0x7d4>
   114fc:	push	{r4, r5, r6, lr}
   11500:	sub	sp, sp, #16
   11504:	ldr	ip, [pc, #152]	; 115a4 <abort@plt+0x88c>
   11508:	ldr	r4, [ip]
   1150c:	mov	lr, #0
   11510:	str	lr, [ip]
   11514:	cmp	r0, #2
   11518:	beq	11538 <abort@plt+0x820>
   1151c:	ldr	r3, [pc, #128]	; 115a4 <abort@plt+0x88c>
   11520:	str	r4, [r3]
   11524:	mov	r2, #0
   11528:	ldr	r3, [pc, #120]	; 115a8 <abort@plt+0x890>
   1152c:	str	r2, [r3]
   11530:	add	sp, sp, #16
   11534:	pop	{r4, r5, r6, pc}
   11538:	mov	r6, r3
   1153c:	mov	r5, r2
   11540:	str	lr, [sp]
   11544:	ldr	r3, [pc, #96]	; 115ac <abort@plt+0x894>
   11548:	ldr	r2, [pc, #96]	; 115b0 <abort@plt+0x898>
   1154c:	bl	10c40 <getopt_long@plt>
   11550:	cmn	r0, #1
   11554:	beq	1151c <abort@plt+0x804>
   11558:	cmp	r0, #104	; 0x68
   1155c:	beq	11594 <abort@plt+0x87c>
   11560:	cmp	r0, #118	; 0x76
   11564:	bne	1151c <abort@plt+0x804>
   11568:	add	r3, sp, #40	; 0x28
   1156c:	str	r3, [sp, #12]
   11570:	ldr	r2, [pc, #60]	; 115b4 <abort@plt+0x89c>
   11574:	ldr	r0, [r2]
   11578:	str	r3, [sp]
   1157c:	ldr	r3, [sp, #32]
   11580:	mov	r2, r6
   11584:	mov	r1, r5
   11588:	bl	136cc <abort@plt+0x29b4>
   1158c:	mov	r0, #0
   11590:	bl	10c58 <exit@plt>
   11594:	mov	r0, #0
   11598:	ldr	r3, [sp, #36]	; 0x24
   1159c:	blx	r3
   115a0:	b	1151c <abort@plt+0x804>
   115a4:	andeq	r6, r2, r8, lsr #2
   115a8:	andeq	r6, r2, r8, lsl r1
   115ac:	ldrdeq	r4, [r1], -r0
   115b0:	andeq	r4, r1, r0, lsl #22
   115b4:	andeq	r6, r2, r4, lsr #2
   115b8:	push	{r4, r5, r6, lr}
   115bc:	sub	sp, sp, #16
   115c0:	mov	r5, r2
   115c4:	mov	r6, r3
   115c8:	ldr	r3, [pc, #160]	; 11670 <abort@plt+0x958>
   115cc:	ldr	r4, [r3]
   115d0:	mov	r2, #1
   115d4:	str	r2, [r3]
   115d8:	mov	r3, #0
   115dc:	str	r3, [sp]
   115e0:	ldr	r3, [pc, #140]	; 11674 <abort@plt+0x95c>
   115e4:	ldr	ip, [pc, #140]	; 11678 <abort@plt+0x960>
   115e8:	ldr	r2, [pc, #140]	; 1167c <abort@plt+0x964>
   115ec:	ldrb	lr, [sp, #36]	; 0x24
   115f0:	cmp	lr, #0
   115f4:	moveq	r2, ip
   115f8:	bl	10c40 <getopt_long@plt>
   115fc:	cmn	r0, #1
   11600:	beq	11634 <abort@plt+0x91c>
   11604:	cmp	r0, #104	; 0x68
   11608:	beq	11628 <abort@plt+0x910>
   1160c:	cmp	r0, #118	; 0x76
   11610:	beq	11644 <abort@plt+0x92c>
   11614:	ldr	r3, [pc, #100]	; 11680 <abort@plt+0x968>
   11618:	ldr	r0, [r3]
   1161c:	ldr	r3, [sp, #40]	; 0x28
   11620:	blx	r3
   11624:	b	11634 <abort@plt+0x91c>
   11628:	mov	r0, #0
   1162c:	ldr	r3, [sp, #40]	; 0x28
   11630:	blx	r3
   11634:	ldr	r3, [pc, #52]	; 11670 <abort@plt+0x958>
   11638:	str	r4, [r3]
   1163c:	add	sp, sp, #16
   11640:	pop	{r4, r5, r6, pc}
   11644:	add	r3, sp, #44	; 0x2c
   11648:	str	r3, [sp, #12]
   1164c:	ldr	r2, [pc, #48]	; 11684 <abort@plt+0x96c>
   11650:	ldr	r0, [r2]
   11654:	str	r3, [sp]
   11658:	ldr	r3, [sp, #32]
   1165c:	mov	r2, r6
   11660:	mov	r1, r5
   11664:	bl	136cc <abort@plt+0x29b4>
   11668:	mov	r0, #0
   1166c:	bl	10c58 <exit@plt>
   11670:	andeq	r6, r2, r8, lsr #2
   11674:	ldrdeq	r4, [r1], -r0
   11678:	andeq	r4, r1, r0, lsl #22
   1167c:	andeq	r4, r1, ip, lsr #17
   11680:	andeq	r6, r2, ip, asr #1
   11684:	andeq	r6, r2, r4, lsr #2
   11688:	push	{r4, r5, r6, lr}
   1168c:	subs	r4, r0, #0
   11690:	beq	11708 <abort@plt+0x9f0>
   11694:	mov	r1, #47	; 0x2f
   11698:	mov	r0, r4
   1169c:	bl	10ce8 <strrchr@plt>
   116a0:	cmp	r0, #0
   116a4:	addne	r5, r0, #1
   116a8:	moveq	r5, r4
   116ac:	sub	r3, r5, r4
   116b0:	cmp	r3, #6
   116b4:	ble	116f4 <abort@plt+0x9dc>
   116b8:	mov	r2, #7
   116bc:	ldr	r1, [pc, #96]	; 11724 <abort@plt+0xa0c>
   116c0:	sub	r0, r5, #7
   116c4:	bl	10d0c <strncmp@plt>
   116c8:	cmp	r0, #0
   116cc:	bne	116f4 <abort@plt+0x9dc>
   116d0:	mov	r2, #3
   116d4:	ldr	r1, [pc, #76]	; 11728 <abort@plt+0xa10>
   116d8:	mov	r0, r5
   116dc:	bl	10d0c <strncmp@plt>
   116e0:	cmp	r0, #0
   116e4:	addeq	r4, r5, #3
   116e8:	ldreq	r3, [pc, #60]	; 1172c <abort@plt+0xa14>
   116ec:	streq	r4, [r3]
   116f0:	movne	r4, r5
   116f4:	ldr	r3, [pc, #52]	; 11730 <abort@plt+0xa18>
   116f8:	str	r4, [r3]
   116fc:	ldr	r3, [pc, #48]	; 11734 <abort@plt+0xa1c>
   11700:	str	r4, [r3]
   11704:	pop	{r4, r5, r6, pc}
   11708:	ldr	r3, [pc, #40]	; 11738 <abort@plt+0xa20>
   1170c:	ldr	r3, [r3]
   11710:	mov	r2, #55	; 0x37
   11714:	mov	r1, #1
   11718:	ldr	r0, [pc, #28]	; 1173c <abort@plt+0xa24>
   1171c:	bl	10bc8 <fwrite@plt>
   11720:	bl	10d18 <abort@plt>
   11724:	andeq	r4, r1, ip, asr #22
   11728:	andeq	r4, r1, r4, asr fp
   1172c:	andeq	r6, r2, r0, lsl r1
   11730:	andeq	r6, r2, r8, lsr r1
   11734:	andeq	r6, r2, r4, lsl r1
   11738:	andeq	r6, r2, r0, lsr #2
   1173c:	andeq	r4, r1, r4, lsl fp
   11740:	push	{r4, r5, r6, lr}
   11744:	mov	r5, r0
   11748:	mov	r4, r1
   1174c:	mov	r2, #48	; 0x30
   11750:	mov	r1, #0
   11754:	bl	10c88 <memset@plt>
   11758:	cmp	r4, #10
   1175c:	beq	1176c <abort@plt+0xa54>
   11760:	str	r4, [r5]
   11764:	mov	r0, r5
   11768:	pop	{r4, r5, r6, pc}
   1176c:	bl	10d18 <abort@plt>
   11770:	push	{r4, r5, r6, lr}
   11774:	mov	r4, r0
   11778:	mov	r5, r1
   1177c:	mov	r2, #5
   11780:	mov	r1, r0
   11784:	mov	r0, #0
   11788:	bl	10b98 <dcgettext@plt>
   1178c:	cmp	r4, r0
   11790:	popne	{r4, r5, r6, pc}
   11794:	bl	1411c <abort@plt+0x3404>
   11798:	ldrb	r3, [r0]
   1179c:	bic	r3, r3, #32
   117a0:	cmp	r3, #85	; 0x55
   117a4:	beq	11820 <abort@plt+0xb08>
   117a8:	cmp	r3, #71	; 0x47
   117ac:	bne	1187c <abort@plt+0xb64>
   117b0:	ldrb	r3, [r0, #1]
   117b4:	bic	r3, r3, #32
   117b8:	cmp	r3, #66	; 0x42
   117bc:	bne	1187c <abort@plt+0xb64>
   117c0:	ldrb	r3, [r0, #2]
   117c4:	cmp	r3, #49	; 0x31
   117c8:	bne	1187c <abort@plt+0xb64>
   117cc:	ldrb	r3, [r0, #3]
   117d0:	cmp	r3, #56	; 0x38
   117d4:	bne	1187c <abort@plt+0xb64>
   117d8:	ldrb	r3, [r0, #4]
   117dc:	cmp	r3, #48	; 0x30
   117e0:	bne	1187c <abort@plt+0xb64>
   117e4:	ldrb	r3, [r0, #5]
   117e8:	cmp	r3, #51	; 0x33
   117ec:	bne	1187c <abort@plt+0xb64>
   117f0:	ldrb	r3, [r0, #6]
   117f4:	cmp	r3, #48	; 0x30
   117f8:	bne	1187c <abort@plt+0xb64>
   117fc:	ldrb	r3, [r0, #7]
   11800:	cmp	r3, #0
   11804:	bne	1187c <abort@plt+0xb64>
   11808:	ldrb	r2, [r4]
   1180c:	ldr	r3, [pc, #124]	; 11890 <abort@plt+0xb78>
   11810:	ldr	r0, [pc, #124]	; 11894 <abort@plt+0xb7c>
   11814:	cmp	r2, #96	; 0x60
   11818:	movne	r0, r3
   1181c:	pop	{r4, r5, r6, pc}
   11820:	ldrb	r3, [r0, #1]
   11824:	bic	r3, r3, #32
   11828:	cmp	r3, #84	; 0x54
   1182c:	bne	1187c <abort@plt+0xb64>
   11830:	ldrb	r3, [r0, #2]
   11834:	bic	r3, r3, #32
   11838:	cmp	r3, #70	; 0x46
   1183c:	bne	1187c <abort@plt+0xb64>
   11840:	ldrb	r3, [r0, #3]
   11844:	cmp	r3, #45	; 0x2d
   11848:	bne	1187c <abort@plt+0xb64>
   1184c:	ldrb	r3, [r0, #4]
   11850:	cmp	r3, #56	; 0x38
   11854:	bne	1187c <abort@plt+0xb64>
   11858:	ldrb	r3, [r0, #5]
   1185c:	cmp	r3, #0
   11860:	bne	1187c <abort@plt+0xb64>
   11864:	ldrb	r2, [r4]
   11868:	ldr	r3, [pc, #40]	; 11898 <abort@plt+0xb80>
   1186c:	ldr	r0, [pc, #40]	; 1189c <abort@plt+0xb84>
   11870:	cmp	r2, #96	; 0x60
   11874:	movne	r0, r3
   11878:	pop	{r4, r5, r6, pc}
   1187c:	ldr	r3, [pc, #28]	; 118a0 <abort@plt+0xb88>
   11880:	ldr	r0, [pc, #28]	; 118a4 <abort@plt+0xb8c>
   11884:	cmp	r5, #9
   11888:	movne	r0, r3
   1188c:	pop	{r4, r5, r6, pc}
   11890:			; <UNDEFINED> instruction: 0x00014bb0
   11894:			; <UNDEFINED> instruction: 0x00014bbc
   11898:	andeq	r4, r1, ip, lsr #23
   1189c:	andeq	r4, r1, r0, asr #23
   118a0:			; <UNDEFINED> instruction: 0x00014bb4
   118a4:			; <UNDEFINED> instruction: 0x00014bb8
   118a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118ac:	sub	sp, sp, #116	; 0x74
   118b0:	str	r0, [sp, #36]	; 0x24
   118b4:	mov	sl, r1
   118b8:	str	r2, [sp, #52]	; 0x34
   118bc:	str	r3, [sp, #28]
   118c0:	ldr	r8, [sp, #152]	; 0x98
   118c4:	bl	10be0 <__ctype_get_mb_cur_max@plt>
   118c8:	str	r0, [sp, #84]	; 0x54
   118cc:	ldr	r3, [sp, #156]	; 0x9c
   118d0:	lsr	r3, r3, #1
   118d4:	and	r3, r3, #1
   118d8:	str	r3, [sp, #32]
   118dc:	mov	r3, #1
   118e0:	str	r3, [sp, #40]	; 0x28
   118e4:	mov	r3, #0
   118e8:	str	r3, [sp, #80]	; 0x50
   118ec:	str	r3, [sp, #44]	; 0x2c
   118f0:	str	r3, [sp, #48]	; 0x30
   118f4:	str	r3, [sp, #60]	; 0x3c
   118f8:	str	r3, [sp, #72]	; 0x48
   118fc:	str	r3, [sp, #76]	; 0x4c
   11900:	mov	r7, sl
   11904:	mov	sl, r8
   11908:	cmp	sl, #10
   1190c:	ldrls	pc, [pc, sl, lsl #2]
   11910:	b	11ac8 <abort@plt+0xdb0>
   11914:	andeq	r1, r1, r8, ror r9
   11918:	andeq	r1, r1, r8, asr #18
   1191c:	andeq	r1, r1, r4, lsr #21
   11920:	andeq	r1, r1, r0, asr #18
   11924:	andeq	r1, r1, r8, asr sl
   11928:	andeq	r1, r1, r8, lsl #19
   1192c:	strdeq	r2, [r1], -r4
   11930:	andeq	r1, r1, ip, asr #21
   11934:	andeq	r1, r1, r4, asr #19
   11938:	andeq	r1, r1, r4, asr #19
   1193c:	andeq	r1, r1, r4, asr #19
   11940:	mov	r3, #1
   11944:	str	r3, [sp, #48]	; 0x30
   11948:	mov	r3, #1
   1194c:	str	r3, [sp, #32]
   11950:	str	r3, [sp, #60]	; 0x3c
   11954:	ldr	r3, [pc, #4068]	; 12940 <abort@plt+0x1c28>
   11958:	str	r3, [sp, #72]	; 0x48
   1195c:	mov	fp, #0
   11960:	mov	sl, #2
   11964:	mov	r6, #0
   11968:	ldr	r3, [sp, #48]	; 0x30
   1196c:	eor	r3, r3, #1
   11970:	str	r3, [sp, #68]	; 0x44
   11974:	b	1225c <abort@plt+0x1544>
   11978:	mov	r3, #0
   1197c:	str	r3, [sp, #32]
   11980:	mov	fp, r3
   11984:	b	11964 <abort@plt+0xc4c>
   11988:	ldr	r3, [sp, #32]
   1198c:	cmp	r3, #0
   11990:	bne	11ae4 <abort@plt+0xdcc>
   11994:	cmp	r7, #0
   11998:	beq	11b04 <abort@plt+0xdec>
   1199c:	ldr	r3, [sp, #36]	; 0x24
   119a0:	mov	r2, #34	; 0x22
   119a4:	strb	r2, [r3]
   119a8:	mov	r3, #1
   119ac:	str	r3, [sp, #48]	; 0x30
   119b0:	str	r3, [sp, #60]	; 0x3c
   119b4:	ldr	r3, [pc, #3980]	; 12948 <abort@plt+0x1c30>
   119b8:	str	r3, [sp, #72]	; 0x48
   119bc:	mov	fp, #1
   119c0:	b	11964 <abort@plt+0xc4c>
   119c4:	cmp	sl, #10
   119c8:	beq	119ec <abort@plt+0xcd4>
   119cc:	mov	r1, sl
   119d0:	ldr	r0, [pc, #3948]	; 12944 <abort@plt+0x1c2c>
   119d4:	bl	11770 <abort@plt+0xa58>
   119d8:	str	r0, [sp, #164]	; 0xa4
   119dc:	mov	r1, sl
   119e0:	ldr	r0, [pc, #3928]	; 12940 <abort@plt+0x1c28>
   119e4:	bl	11770 <abort@plt+0xa58>
   119e8:	str	r0, [sp, #168]	; 0xa8
   119ec:	ldr	r3, [sp, #32]
   119f0:	cmp	r3, #0
   119f4:	movne	fp, #0
   119f8:	bne	11a30 <abort@plt+0xd18>
   119fc:	ldr	r3, [sp, #164]	; 0xa4
   11a00:	ldrb	r3, [r3]
   11a04:	cmp	r3, #0
   11a08:	beq	11a50 <abort@plt+0xd38>
   11a0c:	ldr	r2, [sp, #164]	; 0xa4
   11a10:	mov	fp, #0
   11a14:	ldr	r1, [sp, #36]	; 0x24
   11a18:	cmp	r7, fp
   11a1c:	strbhi	r3, [r1, fp]
   11a20:	add	fp, fp, #1
   11a24:	ldrb	r3, [r2, #1]!
   11a28:	cmp	r3, #0
   11a2c:	bne	11a18 <abort@plt+0xd00>
   11a30:	ldr	r0, [sp, #168]	; 0xa8
   11a34:	bl	10c64 <strlen@plt>
   11a38:	str	r0, [sp, #60]	; 0x3c
   11a3c:	ldr	r3, [sp, #168]	; 0xa8
   11a40:	str	r3, [sp, #72]	; 0x48
   11a44:	mov	r3, #1
   11a48:	str	r3, [sp, #48]	; 0x30
   11a4c:	b	11964 <abort@plt+0xc4c>
   11a50:	mov	fp, #0
   11a54:	b	11a30 <abort@plt+0xd18>
   11a58:	ldr	r3, [sp, #32]
   11a5c:	cmp	r3, #0
   11a60:	bne	11b20 <abort@plt+0xe08>
   11a64:	mov	r3, #1
   11a68:	str	r3, [sp, #48]	; 0x30
   11a6c:	cmp	r7, #0
   11a70:	beq	11b3c <abort@plt+0xe24>
   11a74:	ldr	r3, [sp, #36]	; 0x24
   11a78:	mov	r2, #39	; 0x27
   11a7c:	strb	r2, [r3]
   11a80:	mov	r3, #0
   11a84:	str	r3, [sp, #32]
   11a88:	mov	r3, #1
   11a8c:	str	r3, [sp, #60]	; 0x3c
   11a90:	ldr	r3, [pc, #3752]	; 12940 <abort@plt+0x1c28>
   11a94:	str	r3, [sp, #72]	; 0x48
   11a98:	mov	fp, #1
   11a9c:	mov	sl, #2
   11aa0:	b	11964 <abort@plt+0xc4c>
   11aa4:	ldr	r3, [sp, #32]
   11aa8:	cmp	r3, #0
   11aac:	beq	11a6c <abort@plt+0xd54>
   11ab0:	mov	r3, #1
   11ab4:	str	r3, [sp, #60]	; 0x3c
   11ab8:	ldr	r3, [pc, #3712]	; 12940 <abort@plt+0x1c28>
   11abc:	str	r3, [sp, #72]	; 0x48
   11ac0:	mov	fp, #0
   11ac4:	b	11964 <abort@plt+0xc4c>
   11ac8:	bl	10d18 <abort@plt>
   11acc:	mov	r3, #0
   11ad0:	str	r3, [sp, #32]
   11ad4:	mov	r3, #1
   11ad8:	str	r3, [sp, #48]	; 0x30
   11adc:	mov	fp, #0
   11ae0:	b	11964 <abort@plt+0xc4c>
   11ae4:	ldr	r3, [sp, #32]
   11ae8:	str	r3, [sp, #48]	; 0x30
   11aec:	mov	r3, #1
   11af0:	str	r3, [sp, #60]	; 0x3c
   11af4:	ldr	r3, [pc, #3660]	; 12948 <abort@plt+0x1c30>
   11af8:	str	r3, [sp, #72]	; 0x48
   11afc:	mov	fp, #0
   11b00:	b	11964 <abort@plt+0xc4c>
   11b04:	mov	r3, #1
   11b08:	str	r3, [sp, #48]	; 0x30
   11b0c:	str	r3, [sp, #60]	; 0x3c
   11b10:	ldr	r3, [pc, #3632]	; 12948 <abort@plt+0x1c30>
   11b14:	str	r3, [sp, #72]	; 0x48
   11b18:	mov	fp, #1
   11b1c:	b	11964 <abort@plt+0xc4c>
   11b20:	mov	r3, #1
   11b24:	str	r3, [sp, #60]	; 0x3c
   11b28:	ldr	r3, [pc, #3600]	; 12940 <abort@plt+0x1c28>
   11b2c:	str	r3, [sp, #72]	; 0x48
   11b30:	mov	fp, #0
   11b34:	mov	sl, #2
   11b38:	b	11964 <abort@plt+0xc4c>
   11b3c:	mov	r3, #0
   11b40:	str	r3, [sp, #32]
   11b44:	mov	r3, #1
   11b48:	str	r3, [sp, #60]	; 0x3c
   11b4c:	ldr	r3, [pc, #3564]	; 12940 <abort@plt+0x1c28>
   11b50:	str	r3, [sp, #72]	; 0x48
   11b54:	mov	fp, #1
   11b58:	mov	sl, #2
   11b5c:	b	11964 <abort@plt+0xc4c>
   11b60:	mov	r3, #0
   11b64:	str	r3, [sp, #56]	; 0x38
   11b68:	ldr	r3, [sp, #52]	; 0x34
   11b6c:	add	r2, r3, r6
   11b70:	str	r2, [sp, #64]	; 0x40
   11b74:	ldrb	r4, [r3, r6]
   11b78:	cmp	r4, #126	; 0x7e
   11b7c:	ldrls	pc, [pc, r4, lsl #2]
   11b80:	b	123bc <abort@plt+0x16a4>
   11b84:	muleq	r1, ip, sp
   11b88:			; <UNDEFINED> instruction: 0x000123bc
   11b8c:			; <UNDEFINED> instruction: 0x000123bc
   11b90:			; <UNDEFINED> instruction: 0x000123bc
   11b94:			; <UNDEFINED> instruction: 0x000123bc
   11b98:			; <UNDEFINED> instruction: 0x000123bc
   11b9c:			; <UNDEFINED> instruction: 0x000123bc
   11ba0:	strdeq	r2, [r1], -r8
   11ba4:	muleq	r1, r4, sp
   11ba8:	strheq	r2, [r1], -r0
   11bac:	andeq	r2, r1, r8, lsr #1
   11bb0:	andeq	r2, r1, r8, lsl r0
   11bb4:	andeq	r2, r1, r0, lsl r0
   11bb8:	andeq	r1, r1, ip, lsl #27
   11bbc:			; <UNDEFINED> instruction: 0x000123bc
   11bc0:			; <UNDEFINED> instruction: 0x000123bc
   11bc4:			; <UNDEFINED> instruction: 0x000123bc
   11bc8:			; <UNDEFINED> instruction: 0x000123bc
   11bcc:			; <UNDEFINED> instruction: 0x000123bc
   11bd0:			; <UNDEFINED> instruction: 0x000123bc
   11bd4:			; <UNDEFINED> instruction: 0x000123bc
   11bd8:			; <UNDEFINED> instruction: 0x000123bc
   11bdc:			; <UNDEFINED> instruction: 0x000123bc
   11be0:			; <UNDEFINED> instruction: 0x000123bc
   11be4:			; <UNDEFINED> instruction: 0x000123bc
   11be8:			; <UNDEFINED> instruction: 0x000123bc
   11bec:			; <UNDEFINED> instruction: 0x000123bc
   11bf0:			; <UNDEFINED> instruction: 0x000123bc
   11bf4:			; <UNDEFINED> instruction: 0x000123bc
   11bf8:			; <UNDEFINED> instruction: 0x000123bc
   11bfc:			; <UNDEFINED> instruction: 0x000123bc
   11c00:			; <UNDEFINED> instruction: 0x000123bc
   11c04:	andeq	r2, r1, ip, asr #2
   11c08:	andeq	r2, r1, r8, asr #2
   11c0c:	andeq	r2, r1, r8, asr #2
   11c10:	andeq	r2, r1, r0, lsr #2
   11c14:	andeq	r2, r1, r8, asr #2
   11c18:	muleq	r1, r0, r7
   11c1c:	andeq	r2, r1, r8, asr #2
   11c20:	andeq	r2, r1, r0, lsr #6
   11c24:	andeq	r2, r1, r8, asr #2
   11c28:	andeq	r2, r1, r8, asr #2
   11c2c:	andeq	r2, r1, r8, asr #2
   11c30:	muleq	r1, r0, r7
   11c34:	muleq	r1, r0, r7
   11c38:	muleq	r1, r0, r7
   11c3c:	muleq	r1, r0, r7
   11c40:	muleq	r1, r0, r7
   11c44:	muleq	r1, r0, r7
   11c48:	muleq	r1, r0, r7
   11c4c:	muleq	r1, r0, r7
   11c50:	muleq	r1, r0, r7
   11c54:	muleq	r1, r0, r7
   11c58:	muleq	r1, r0, r7
   11c5c:	muleq	r1, r0, r7
   11c60:	muleq	r1, r0, r7
   11c64:	muleq	r1, r0, r7
   11c68:	muleq	r1, r0, r7
   11c6c:	muleq	r1, r0, r7
   11c70:	andeq	r2, r1, r8, asr #2
   11c74:	andeq	r2, r1, r8, asr #2
   11c78:	andeq	r2, r1, r8, asr #2
   11c7c:	andeq	r2, r1, r8, asr #2
   11c80:	andeq	r1, r1, r4, lsr #29
   11c84:			; <UNDEFINED> instruction: 0x000123bc
   11c88:	muleq	r1, r0, r7
   11c8c:	muleq	r1, r0, r7
   11c90:	muleq	r1, r0, r7
   11c94:	muleq	r1, r0, r7
   11c98:	muleq	r1, r0, r7
   11c9c:	muleq	r1, r0, r7
   11ca0:	muleq	r1, r0, r7
   11ca4:	muleq	r1, r0, r7
   11ca8:	muleq	r1, r0, r7
   11cac:	muleq	r1, r0, r7
   11cb0:	muleq	r1, r0, r7
   11cb4:	muleq	r1, r0, r7
   11cb8:	muleq	r1, r0, r7
   11cbc:	muleq	r1, r0, r7
   11cc0:	muleq	r1, r0, r7
   11cc4:	muleq	r1, r0, r7
   11cc8:	muleq	r1, r0, r7
   11ccc:	muleq	r1, r0, r7
   11cd0:	muleq	r1, r0, r7
   11cd4:	muleq	r1, r0, r7
   11cd8:	muleq	r1, r0, r7
   11cdc:	muleq	r1, r0, r7
   11ce0:	muleq	r1, r0, r7
   11ce4:	muleq	r1, r0, r7
   11ce8:	muleq	r1, r0, r7
   11cec:	muleq	r1, r0, r7
   11cf0:	andeq	r2, r1, r8, asr #2
   11cf4:	andeq	r2, r1, r0, lsr #32
   11cf8:	muleq	r1, r0, r7
   11cfc:	andeq	r2, r1, r8, asr #2
   11d00:	muleq	r1, r0, r7
   11d04:	andeq	r2, r1, r8, asr #2
   11d08:	muleq	r1, r0, r7
   11d0c:	muleq	r1, r0, r7
   11d10:	muleq	r1, r0, r7
   11d14:	muleq	r1, r0, r7
   11d18:	muleq	r1, r0, r7
   11d1c:	muleq	r1, r0, r7
   11d20:	muleq	r1, r0, r7
   11d24:	muleq	r1, r0, r7
   11d28:	muleq	r1, r0, r7
   11d2c:	muleq	r1, r0, r7
   11d30:	muleq	r1, r0, r7
   11d34:	muleq	r1, r0, r7
   11d38:	muleq	r1, r0, r7
   11d3c:	muleq	r1, r0, r7
   11d40:	muleq	r1, r0, r7
   11d44:	muleq	r1, r0, r7
   11d48:	muleq	r1, r0, r7
   11d4c:	muleq	r1, r0, r7
   11d50:	muleq	r1, r0, r7
   11d54:	muleq	r1, r0, r7
   11d58:	muleq	r1, r0, r7
   11d5c:	muleq	r1, r0, r7
   11d60:	muleq	r1, r0, r7
   11d64:	muleq	r1, r0, r7
   11d68:	muleq	r1, r0, r7
   11d6c:	muleq	r1, r0, r7
   11d70:	andeq	r2, r1, r0, lsl #2
   11d74:	andeq	r2, r1, r8, asr #2
   11d78:	andeq	r2, r1, r0, lsl #2
   11d7c:	andeq	r2, r1, r0, lsr #2
   11d80:	mov	r3, #0
   11d84:	str	r3, [sp, #56]	; 0x38
   11d88:	b	11b68 <abort@plt+0xe50>
   11d8c:	mov	r3, #114	; 0x72
   11d90:	b	120b4 <abort@plt+0x139c>
   11d94:	mov	r3, #98	; 0x62
   11d98:	b	120cc <abort@plt+0x13b4>
   11d9c:	ldr	r3, [sp, #48]	; 0x30
   11da0:	cmp	r3, #0
   11da4:	beq	11e8c <abort@plt+0x1174>
   11da8:	ldr	r3, [sp, #32]
   11dac:	cmp	r3, #0
   11db0:	bne	12914 <abort@plt+0x1bfc>
   11db4:	ldr	r3, [sp, #44]	; 0x2c
   11db8:	eor	r3, r3, #1
   11dbc:	cmp	sl, #2
   11dc0:	movne	r3, #0
   11dc4:	andeq	r3, r3, #1
   11dc8:	cmp	r3, #0
   11dcc:	moveq	r2, fp
   11dd0:	beq	11e14 <abort@plt+0x10fc>
   11dd4:	cmp	r7, fp
   11dd8:	ldrhi	r2, [sp, #36]	; 0x24
   11ddc:	movhi	r1, #39	; 0x27
   11de0:	strbhi	r1, [r2, fp]
   11de4:	add	r2, fp, #1
   11de8:	cmp	r7, r2
   11dec:	ldrhi	r1, [sp, #36]	; 0x24
   11df0:	movhi	r0, #36	; 0x24
   11df4:	strbhi	r0, [r1, r2]
   11df8:	add	r2, fp, #2
   11dfc:	cmp	r7, r2
   11e00:	ldrhi	r1, [sp, #36]	; 0x24
   11e04:	movhi	r0, #39	; 0x27
   11e08:	strbhi	r0, [r1, r2]
   11e0c:	add	r2, fp, #3
   11e10:	str	r3, [sp, #44]	; 0x2c
   11e14:	cmp	r7, r2
   11e18:	ldrhi	r3, [sp, #36]	; 0x24
   11e1c:	movhi	r1, #92	; 0x5c
   11e20:	strbhi	r1, [r3, r2]
   11e24:	add	fp, r2, #1
   11e28:	cmp	r5, #0
   11e2c:	beq	12798 <abort@plt+0x1a80>
   11e30:	add	r3, r6, #1
   11e34:	ldr	r1, [sp, #28]
   11e38:	cmp	r1, r3
   11e3c:	bls	127a8 <abort@plt+0x1a90>
   11e40:	ldr	r1, [sp, #52]	; 0x34
   11e44:	ldrb	r3, [r1, r3]
   11e48:	sub	r3, r3, #48	; 0x30
   11e4c:	uxtb	r3, r3
   11e50:	cmp	r3, #9
   11e54:	bhi	127b4 <abort@plt+0x1a9c>
   11e58:	cmp	r7, fp
   11e5c:	movhi	r3, #48	; 0x30
   11e60:	ldrhi	r1, [sp, #36]	; 0x24
   11e64:	strbhi	r3, [r1, fp]
   11e68:	add	r3, r2, #2
   11e6c:	cmp	r7, r3
   11e70:	movhi	r1, #48	; 0x30
   11e74:	ldrhi	r0, [sp, #36]	; 0x24
   11e78:	strbhi	r1, [r0, r3]
   11e7c:	add	fp, r2, #3
   11e80:	ldr	r8, [sp, #32]
   11e84:	mov	r4, #48	; 0x30
   11e88:	b	12164 <abort@plt+0x144c>
   11e8c:	ldr	r3, [sp, #156]	; 0x9c
   11e90:	tst	r3, #1
   11e94:	bne	12258 <abort@plt+0x1540>
   11e98:	ldr	r5, [sp, #48]	; 0x30
   11e9c:	mov	r8, r5
   11ea0:	b	12164 <abort@plt+0x144c>
   11ea4:	cmp	sl, #2
   11ea8:	beq	11ec0 <abort@plt+0x11a8>
   11eac:	cmp	sl, #5
   11eb0:	beq	11ed8 <abort@plt+0x11c0>
   11eb4:	mov	r8, #0
   11eb8:	mov	r5, r8
   11ebc:	b	12164 <abort@plt+0x144c>
   11ec0:	ldr	r3, [sp, #32]
   11ec4:	cmp	r3, #0
   11ec8:	bne	12928 <abort@plt+0x1c10>
   11ecc:	mov	r8, r3
   11ed0:	mov	r5, r3
   11ed4:	b	12164 <abort@plt+0x144c>
   11ed8:	ldr	r3, [sp, #156]	; 0x9c
   11edc:	tst	r3, #4
   11ee0:	beq	127c0 <abort@plt+0x1aa8>
   11ee4:	add	r3, r6, #2
   11ee8:	ldr	r2, [sp, #28]
   11eec:	cmp	r2, r3
   11ef0:	bls	127cc <abort@plt+0x1ab4>
   11ef4:	ldr	r2, [sp, #52]	; 0x34
   11ef8:	add	r2, r2, r6
   11efc:	ldrb	r2, [r2, #1]
   11f00:	cmp	r2, #63	; 0x3f
   11f04:	movne	r8, #0
   11f08:	movne	r5, r8
   11f0c:	bne	12164 <abort@plt+0x144c>
   11f10:	ldr	r2, [sp, #52]	; 0x34
   11f14:	ldrb	r2, [r2, r3]
   11f18:	sub	r1, r2, #33	; 0x21
   11f1c:	cmp	r1, #29
   11f20:	ldrls	pc, [pc, r1, lsl #2]
   11f24:	b	127d8 <abort@plt+0x1ac0>
   11f28:	andeq	r1, r1, r0, lsr #31
   11f2c:	ldrdeq	r2, [r1], -r8
   11f30:	ldrdeq	r2, [r1], -r8
   11f34:	ldrdeq	r2, [r1], -r8
   11f38:	ldrdeq	r2, [r1], -r8
   11f3c:	ldrdeq	r2, [r1], -r8
   11f40:	andeq	r1, r1, r0, lsr #31
   11f44:	andeq	r1, r1, r0, lsr #31
   11f48:	andeq	r1, r1, r0, lsr #31
   11f4c:	ldrdeq	r2, [r1], -r8
   11f50:	ldrdeq	r2, [r1], -r8
   11f54:	ldrdeq	r2, [r1], -r8
   11f58:	andeq	r1, r1, r0, lsr #31
   11f5c:	ldrdeq	r2, [r1], -r8
   11f60:	andeq	r1, r1, r0, lsr #31
   11f64:	ldrdeq	r2, [r1], -r8
   11f68:	ldrdeq	r2, [r1], -r8
   11f6c:	ldrdeq	r2, [r1], -r8
   11f70:	ldrdeq	r2, [r1], -r8
   11f74:	ldrdeq	r2, [r1], -r8
   11f78:	ldrdeq	r2, [r1], -r8
   11f7c:	ldrdeq	r2, [r1], -r8
   11f80:	ldrdeq	r2, [r1], -r8
   11f84:	ldrdeq	r2, [r1], -r8
   11f88:	ldrdeq	r2, [r1], -r8
   11f8c:	ldrdeq	r2, [r1], -r8
   11f90:	ldrdeq	r2, [r1], -r8
   11f94:	andeq	r1, r1, r0, lsr #31
   11f98:	andeq	r1, r1, r0, lsr #31
   11f9c:	andeq	r1, r1, r0, lsr #31
   11fa0:	ldr	r1, [sp, #32]
   11fa4:	cmp	r1, #0
   11fa8:	bne	129e8 <abort@plt+0x1cd0>
   11fac:	cmp	r7, fp
   11fb0:	movhi	r1, #63	; 0x3f
   11fb4:	ldrhi	r0, [sp, #36]	; 0x24
   11fb8:	strbhi	r1, [r0, fp]
   11fbc:	add	r1, fp, #1
   11fc0:	cmp	r7, r1
   11fc4:	ldrhi	r0, [sp, #36]	; 0x24
   11fc8:	movhi	ip, #34	; 0x22
   11fcc:	strbhi	ip, [r0, r1]
   11fd0:	add	r1, fp, #2
   11fd4:	cmp	r7, r1
   11fd8:	ldrhi	r0, [sp, #36]	; 0x24
   11fdc:	movhi	ip, #34	; 0x22
   11fe0:	strbhi	ip, [r0, r1]
   11fe4:	add	r1, fp, #3
   11fe8:	cmp	r7, r1
   11fec:	movhi	r0, #63	; 0x3f
   11ff0:	ldrhi	ip, [sp, #36]	; 0x24
   11ff4:	strbhi	r0, [ip, r1]
   11ff8:	add	fp, fp, #4
   11ffc:	ldr	r5, [sp, #32]
   12000:	mov	r8, r5
   12004:	mov	r4, r2
   12008:	mov	r6, r3
   1200c:	b	12164 <abort@plt+0x144c>
   12010:	mov	r3, #102	; 0x66
   12014:	b	120cc <abort@plt+0x13b4>
   12018:	mov	r3, #118	; 0x76
   1201c:	b	120cc <abort@plt+0x13b4>
   12020:	cmp	sl, #2
   12024:	beq	12090 <abort@plt+0x1378>
   12028:	ldr	r3, [sp, #48]	; 0x30
   1202c:	ldr	r2, [sp, #32]
   12030:	and	r3, r3, r2
   12034:	tst	r9, r3
   12038:	moveq	r3, r4
   1203c:	beq	120cc <abort@plt+0x13b4>
   12040:	mov	r8, #0
   12044:	mov	r5, r8
   12048:	eor	r5, r5, #1
   1204c:	ldr	r3, [sp, #44]	; 0x2c
   12050:	and	r5, r5, r3
   12054:	tst	r5, #255	; 0xff
   12058:	beq	12238 <abort@plt+0x1520>
   1205c:	cmp	r7, fp
   12060:	ldrhi	r3, [sp, #36]	; 0x24
   12064:	movhi	r2, #39	; 0x27
   12068:	strbhi	r2, [r3, fp]
   1206c:	add	r3, fp, #1
   12070:	cmp	r7, r3
   12074:	ldrhi	r2, [sp, #36]	; 0x24
   12078:	movhi	r1, #39	; 0x27
   1207c:	strbhi	r1, [r2, r3]
   12080:	add	fp, fp, #2
   12084:	mov	r3, #0
   12088:	str	r3, [sp, #44]	; 0x2c
   1208c:	b	12238 <abort@plt+0x1520>
   12090:	ldr	r3, [sp, #32]
   12094:	cmp	r3, #0
   12098:	bne	12934 <abort@plt+0x1c1c>
   1209c:	mov	r8, r3
   120a0:	mov	r5, r3
   120a4:	b	12048 <abort@plt+0x1330>
   120a8:	mov	r3, #110	; 0x6e
   120ac:	b	120b4 <abort@plt+0x139c>
   120b0:	mov	r3, #116	; 0x74
   120b4:	ldr	r2, [sp, #32]
   120b8:	cmp	sl, #2
   120bc:	movne	r2, #0
   120c0:	andeq	r2, r2, #1
   120c4:	cmp	r2, #0
   120c8:	bne	120ec <abort@plt+0x13d4>
   120cc:	ldr	r2, [sp, #48]	; 0x30
   120d0:	cmp	r2, #0
   120d4:	moveq	r8, r2
   120d8:	moveq	r5, r2
   120dc:	beq	12164 <abort@plt+0x144c>
   120e0:	mov	r4, r3
   120e4:	mov	r8, #0
   120e8:	b	121bc <abort@plt+0x14a4>
   120ec:	mov	r8, sl
   120f0:	mov	sl, r7
   120f4:	b	12960 <abort@plt+0x1c48>
   120f8:	mov	r3, #97	; 0x61
   120fc:	b	120cc <abort@plt+0x13b4>
   12100:	ldr	r3, [sp, #28]
   12104:	cmn	r3, #1
   12108:	beq	12134 <abort@plt+0x141c>
   1210c:	ldr	r3, [sp, #28]
   12110:	subs	r3, r3, #1
   12114:	movne	r3, #1
   12118:	cmp	r3, #0
   1211c:	bne	127e4 <abort@plt+0x1acc>
   12120:	cmp	r6, #0
   12124:	beq	1214c <abort@plt+0x1434>
   12128:	mov	r8, #0
   1212c:	mov	r5, r8
   12130:	b	12164 <abort@plt+0x144c>
   12134:	ldr	r3, [sp, #52]	; 0x34
   12138:	ldrb	r3, [r3, #1]
   1213c:	adds	r3, r3, #0
   12140:	movne	r3, #1
   12144:	b	12118 <abort@plt+0x1400>
   12148:	mov	r8, #0
   1214c:	ldr	r5, [sp, #32]
   12150:	cmp	sl, #2
   12154:	movne	r5, #0
   12158:	andeq	r5, r5, #1
   1215c:	cmp	r5, #0
   12160:	bne	12314 <abort@plt+0x15fc>
   12164:	ldr	r3, [sp, #68]	; 0x44
   12168:	cmp	sl, #2
   1216c:	orreq	r3, r3, #1
   12170:	eor	r3, r3, #1
   12174:	ldr	r2, [sp, #32]
   12178:	orr	r3, r2, r3
   1217c:	tst	r3, #255	; 0xff
   12180:	beq	121b0 <abort@plt+0x1498>
   12184:	ldr	r3, [sp, #160]	; 0xa0
   12188:	cmp	r3, #0
   1218c:	beq	121b0 <abort@plt+0x1498>
   12190:	lsr	r2, r4, #5
   12194:	uxtb	r2, r2
   12198:	and	r3, r4, #31
   1219c:	ldr	r1, [sp, #160]	; 0xa0
   121a0:	ldr	r2, [r1, r2, lsl #2]
   121a4:	lsr	r3, r2, r3
   121a8:	tst	r3, #1
   121ac:	bne	121bc <abort@plt+0x14a4>
   121b0:	ldr	r3, [sp, #56]	; 0x38
   121b4:	cmp	r3, #0
   121b8:	beq	12048 <abort@plt+0x1330>
   121bc:	ldr	r3, [sp, #32]
   121c0:	cmp	r3, #0
   121c4:	bne	129d0 <abort@plt+0x1cb8>
   121c8:	ldr	r3, [sp, #44]	; 0x2c
   121cc:	eor	r3, r3, #1
   121d0:	cmp	sl, #2
   121d4:	movne	r3, #0
   121d8:	andeq	r3, r3, #1
   121dc:	cmp	r3, #0
   121e0:	beq	12224 <abort@plt+0x150c>
   121e4:	cmp	r7, fp
   121e8:	ldrhi	r2, [sp, #36]	; 0x24
   121ec:	movhi	r1, #39	; 0x27
   121f0:	strbhi	r1, [r2, fp]
   121f4:	add	r2, fp, #1
   121f8:	cmp	r7, r2
   121fc:	ldrhi	r1, [sp, #36]	; 0x24
   12200:	movhi	r0, #36	; 0x24
   12204:	strbhi	r0, [r1, r2]
   12208:	add	r2, fp, #2
   1220c:	cmp	r7, r2
   12210:	ldrhi	r1, [sp, #36]	; 0x24
   12214:	movhi	r0, #39	; 0x27
   12218:	strbhi	r0, [r1, r2]
   1221c:	add	fp, fp, #3
   12220:	str	r3, [sp, #44]	; 0x2c
   12224:	cmp	r7, fp
   12228:	ldrhi	r3, [sp, #36]	; 0x24
   1222c:	movhi	r2, #92	; 0x5c
   12230:	strbhi	r2, [r3, fp]
   12234:	add	fp, fp, #1
   12238:	cmp	fp, r7
   1223c:	ldrcc	r3, [sp, #36]	; 0x24
   12240:	strbcc	r4, [r3, fp]
   12244:	add	fp, fp, #1
   12248:	ldr	r3, [sp, #40]	; 0x28
   1224c:	cmp	r8, #0
   12250:	moveq	r3, #0
   12254:	str	r3, [sp, #40]	; 0x28
   12258:	add	r6, r6, #1
   1225c:	ldr	r3, [sp, #28]
   12260:	cmn	r3, #1
   12264:	beq	127f0 <abort@plt+0x1ad8>
   12268:	ldr	r3, [sp, #28]
   1226c:	subs	r8, r3, r6
   12270:	movne	r8, #1
   12274:	cmp	r8, #0
   12278:	beq	12804 <abort@plt+0x1aec>
   1227c:	ldr	r5, [sp, #48]	; 0x30
   12280:	cmp	sl, #2
   12284:	moveq	r5, #0
   12288:	andne	r5, r5, #1
   1228c:	ldr	r3, [sp, #60]	; 0x3c
   12290:	adds	r9, r3, #0
   12294:	movne	r9, #1
   12298:	ands	r2, r5, r9
   1229c:	str	r2, [sp, #56]	; 0x38
   122a0:	beq	11b68 <abort@plt+0xe50>
   122a4:	add	r4, r6, r3
   122a8:	ldr	r2, [sp, #28]
   122ac:	cmp	r3, #1
   122b0:	movls	r3, #0
   122b4:	movhi	r3, #1
   122b8:	cmn	r2, #1
   122bc:	movne	r3, #0
   122c0:	cmp	r3, #0
   122c4:	beq	122d4 <abort@plt+0x15bc>
   122c8:	ldr	r0, [sp, #52]	; 0x34
   122cc:	bl	10c64 <strlen@plt>
   122d0:	str	r0, [sp, #28]
   122d4:	ldr	r3, [sp, #28]
   122d8:	cmp	r3, r4
   122dc:	bcc	11b60 <abort@plt+0xe48>
   122e0:	ldr	r2, [sp, #60]	; 0x3c
   122e4:	ldr	r1, [sp, #72]	; 0x48
   122e8:	ldr	r3, [sp, #52]	; 0x34
   122ec:	add	r0, r3, r6
   122f0:	bl	10b80 <memcmp@plt>
   122f4:	cmp	r0, #0
   122f8:	bne	11d80 <abort@plt+0x1068>
   122fc:	ldr	r3, [sp, #32]
   12300:	cmp	r3, #0
   12304:	beq	11b68 <abort@plt+0xe50>
   12308:	mov	r8, sl
   1230c:	mov	sl, r7
   12310:	b	12960 <abort@plt+0x1c48>
   12314:	mov	r8, sl
   12318:	mov	sl, r7
   1231c:	b	12960 <abort@plt+0x1c48>
   12320:	cmp	sl, #2
   12324:	strne	r8, [sp, #80]	; 0x50
   12328:	movne	r5, #0
   1232c:	bne	12164 <abort@plt+0x144c>
   12330:	ldr	r3, [sp, #32]
   12334:	cmp	r3, #0
   12338:	bne	1294c <abort@plt+0x1c34>
   1233c:	ldr	r2, [sp, #76]	; 0x4c
   12340:	adds	r3, r7, #0
   12344:	movne	r3, #1
   12348:	cmp	r2, #0
   1234c:	movne	r3, #0
   12350:	cmp	r3, #0
   12354:	movne	r3, #0
   12358:	bne	12388 <abort@plt+0x1670>
   1235c:	cmp	r7, fp
   12360:	ldrhi	r3, [sp, #36]	; 0x24
   12364:	movhi	r2, #39	; 0x27
   12368:	strbhi	r2, [r3, fp]
   1236c:	add	r3, fp, #1
   12370:	cmp	r7, r3
   12374:	ldrhi	r2, [sp, #36]	; 0x24
   12378:	movhi	r1, #92	; 0x5c
   1237c:	strbhi	r1, [r2, r3]
   12380:	mov	r3, r7
   12384:	ldr	r7, [sp, #76]	; 0x4c
   12388:	add	r2, fp, #2
   1238c:	cmp	r2, r3
   12390:	ldrcc	r1, [sp, #36]	; 0x24
   12394:	movcc	r0, #39	; 0x27
   12398:	strbcc	r0, [r1, r2]
   1239c:	add	fp, fp, #3
   123a0:	ldr	r2, [sp, #32]
   123a4:	mov	r5, r2
   123a8:	str	r8, [sp, #80]	; 0x50
   123ac:	str	r2, [sp, #44]	; 0x2c
   123b0:	str	r7, [sp, #76]	; 0x4c
   123b4:	mov	r7, r3
   123b8:	b	12164 <abort@plt+0x144c>
   123bc:	ldr	r5, [sp, #84]	; 0x54
   123c0:	cmp	r5, #1
   123c4:	beq	123f4 <abort@plt+0x16dc>
   123c8:	mov	r3, #0
   123cc:	str	r3, [sp, #104]	; 0x68
   123d0:	str	r3, [sp, #108]	; 0x6c
   123d4:	ldr	r3, [sp, #28]
   123d8:	cmn	r3, #1
   123dc:	beq	12428 <abort@plt+0x1710>
   123e0:	mov	r3, #0
   123e4:	str	r4, [sp, #88]	; 0x58
   123e8:	str	fp, [sp, #92]	; 0x5c
   123ec:	mov	fp, r3
   123f0:	b	12550 <abort@plt+0x1838>
   123f4:	bl	10c4c <__ctype_b_loc@plt>
   123f8:	ldr	r2, [r0]
   123fc:	lsl	r3, r4, #1
   12400:	ldrh	r8, [r2, r3]
   12404:	lsr	r8, r8, #14
   12408:	and	r8, r8, #1
   1240c:	mov	r2, r5
   12410:	eor	r5, r8, #1
   12414:	ldr	r3, [sp, #48]	; 0x30
   12418:	and	r5, r5, r3
   1241c:	ands	r5, r5, #255	; 0xff
   12420:	beq	12164 <abort@plt+0x144c>
   12424:	b	125e8 <abort@plt+0x18d0>
   12428:	ldr	r0, [sp, #52]	; 0x34
   1242c:	bl	10c64 <strlen@plt>
   12430:	str	r0, [sp, #28]
   12434:	b	123e0 <abort@plt+0x16c8>
   12438:	mov	r2, fp
   1243c:	mov	r1, r4
   12440:	ldr	r4, [sp, #88]	; 0x58
   12444:	ldr	fp, [sp, #92]	; 0x5c
   12448:	ldr	r0, [sp, #28]
   1244c:	cmp	r0, r5
   12450:	bls	1261c <abort@plt+0x1904>
   12454:	ldrb	r3, [r1]
   12458:	cmp	r3, #0
   1245c:	beq	12624 <abort@plt+0x190c>
   12460:	mov	r3, r1
   12464:	add	r2, r2, #1
   12468:	add	r1, r6, r2
   1246c:	cmp	r0, r1
   12470:	bls	1262c <abort@plt+0x1914>
   12474:	ldrb	r1, [r3, #1]!
   12478:	cmp	r1, #0
   1247c:	bne	12464 <abort@plt+0x174c>
   12480:	mov	r8, #0
   12484:	b	125e0 <abort@plt+0x18c8>
   12488:	cmp	r4, r5
   1248c:	beq	1252c <abort@plt+0x1814>
   12490:	ldrb	r3, [r4, #1]!
   12494:	sub	r3, r3, #91	; 0x5b
   12498:	cmp	r3, #33	; 0x21
   1249c:	ldrls	pc, [pc, r3, lsl #2]
   124a0:	b	12488 <abort@plt+0x1770>
   124a4:	andeq	r2, r1, r8, asr r9
   124a8:	andeq	r2, r1, r8, asr r9
   124ac:	andeq	r2, r1, r8, lsl #9
   124b0:	andeq	r2, r1, r8, asr r9
   124b4:	andeq	r2, r1, r8, lsl #9
   124b8:	andeq	r2, r1, r8, asr r9
   124bc:	andeq	r2, r1, r8, lsl #9
   124c0:	andeq	r2, r1, r8, lsl #9
   124c4:	andeq	r2, r1, r8, lsl #9
   124c8:	andeq	r2, r1, r8, lsl #9
   124cc:	andeq	r2, r1, r8, lsl #9
   124d0:	andeq	r2, r1, r8, lsl #9
   124d4:	andeq	r2, r1, r8, lsl #9
   124d8:	andeq	r2, r1, r8, lsl #9
   124dc:	andeq	r2, r1, r8, lsl #9
   124e0:	andeq	r2, r1, r8, lsl #9
   124e4:	andeq	r2, r1, r8, lsl #9
   124e8:	andeq	r2, r1, r8, lsl #9
   124ec:	andeq	r2, r1, r8, lsl #9
   124f0:	andeq	r2, r1, r8, lsl #9
   124f4:	andeq	r2, r1, r8, lsl #9
   124f8:	andeq	r2, r1, r8, lsl #9
   124fc:	andeq	r2, r1, r8, lsl #9
   12500:	andeq	r2, r1, r8, lsl #9
   12504:	andeq	r2, r1, r8, lsl #9
   12508:	andeq	r2, r1, r8, lsl #9
   1250c:	andeq	r2, r1, r8, lsl #9
   12510:	andeq	r2, r1, r8, lsl #9
   12514:	andeq	r2, r1, r8, lsl #9
   12518:	andeq	r2, r1, r8, lsl #9
   1251c:	andeq	r2, r1, r8, lsl #9
   12520:	andeq	r2, r1, r8, lsl #9
   12524:	andeq	r2, r1, r8, lsl #9
   12528:	andeq	r2, r1, r8, asr r9
   1252c:	ldr	r0, [sp, #100]	; 0x64
   12530:	bl	10bbc <iswprint@plt>
   12534:	cmp	r0, #0
   12538:	moveq	r8, #0
   1253c:	add	fp, fp, r9
   12540:	add	r0, sp, #104	; 0x68
   12544:	bl	10b74 <mbsinit@plt>
   12548:	cmp	r0, #0
   1254c:	bne	125c0 <abort@plt+0x18a8>
   12550:	add	r5, r6, fp
   12554:	ldr	r3, [sp, #52]	; 0x34
   12558:	add	r4, r3, r5
   1255c:	add	r3, sp, #104	; 0x68
   12560:	ldr	r2, [sp, #28]
   12564:	sub	r2, r2, r5
   12568:	mov	r1, r4
   1256c:	add	r0, sp, #100	; 0x64
   12570:	bl	14150 <abort@plt+0x3438>
   12574:	subs	r9, r0, #0
   12578:	beq	12634 <abort@plt+0x191c>
   1257c:	cmn	r9, #1
   12580:	beq	125d0 <abort@plt+0x18b8>
   12584:	cmn	r9, #2
   12588:	beq	12438 <abort@plt+0x1720>
   1258c:	ldr	r3, [sp, #32]
   12590:	cmp	sl, #2
   12594:	movne	r3, #0
   12598:	andeq	r3, r3, #1
   1259c:	cmp	r3, #0
   125a0:	beq	1252c <abort@plt+0x1814>
   125a4:	cmp	r9, #1
   125a8:	bls	1252c <abort@plt+0x1814>
   125ac:	sub	r3, r9, #1
   125b0:	add	r5, r3, r5
   125b4:	ldr	r3, [sp, #52]	; 0x34
   125b8:	add	r5, r3, r5
   125bc:	b	12490 <abort@plt+0x1778>
   125c0:	ldr	r4, [sp, #88]	; 0x58
   125c4:	mov	r2, fp
   125c8:	ldr	fp, [sp, #92]	; 0x5c
   125cc:	b	125e0 <abort@plt+0x18c8>
   125d0:	ldr	r4, [sp, #88]	; 0x58
   125d4:	mov	r2, fp
   125d8:	ldr	fp, [sp, #92]	; 0x5c
   125dc:	mov	r8, #0
   125e0:	cmp	r2, #1
   125e4:	bls	12410 <abort@plt+0x16f8>
   125e8:	add	r1, r6, r2
   125ec:	ldr	ip, [sp, #64]	; 0x40
   125f0:	mov	r5, #0
   125f4:	eor	r3, r8, #1
   125f8:	ldr	r2, [sp, #48]	; 0x30
   125fc:	and	r3, r3, r2
   12600:	uxtb	r3, r3
   12604:	ldr	r9, [sp, #32]
   12608:	ldr	lr, [sp, #44]	; 0x2c
   1260c:	ldr	r2, [sp, #56]	; 0x38
   12610:	str	r8, [sp, #56]	; 0x38
   12614:	ldr	r0, [sp, #36]	; 0x24
   12618:	b	126b4 <abort@plt+0x199c>
   1261c:	mov	r8, #0
   12620:	b	125e0 <abort@plt+0x18c8>
   12624:	mov	r8, #0
   12628:	b	125e0 <abort@plt+0x18c8>
   1262c:	mov	r8, #0
   12630:	b	125e0 <abort@plt+0x18c8>
   12634:	ldr	r4, [sp, #88]	; 0x58
   12638:	mov	r2, fp
   1263c:	ldr	fp, [sp, #92]	; 0x5c
   12640:	b	125e0 <abort@plt+0x18c8>
   12644:	cmp	r2, #0
   12648:	beq	1265c <abort@plt+0x1944>
   1264c:	cmp	r7, fp
   12650:	movhi	r2, #92	; 0x5c
   12654:	strbhi	r2, [r0, fp]
   12658:	add	fp, fp, #1
   1265c:	add	r8, r6, #1
   12660:	cmp	r1, r8
   12664:	bls	1276c <abort@plt+0x1a54>
   12668:	eor	r2, r5, #1
   1266c:	and	r2, r2, lr
   12670:	ands	r2, r2, #255	; 0xff
   12674:	beq	12788 <abort@plt+0x1a70>
   12678:	cmp	r7, fp
   1267c:	movhi	r2, #39	; 0x27
   12680:	strbhi	r2, [r0, fp]
   12684:	add	r2, fp, #1
   12688:	cmp	r7, r2
   1268c:	movhi	lr, #39	; 0x27
   12690:	strbhi	lr, [r0, r2]
   12694:	add	fp, fp, #2
   12698:	mov	r6, r8
   1269c:	mov	r2, r3
   126a0:	mov	lr, r3
   126a4:	cmp	r7, fp
   126a8:	strbhi	r4, [r0, fp]
   126ac:	add	fp, fp, #1
   126b0:	ldrb	r4, [ip, #1]!
   126b4:	cmp	r3, #0
   126b8:	beq	12644 <abort@plt+0x192c>
   126bc:	cmp	r9, #0
   126c0:	bne	129c4 <abort@plt+0x1cac>
   126c4:	eor	r5, lr, #1
   126c8:	cmp	sl, #2
   126cc:	movne	r5, #0
   126d0:	andeq	r5, r5, #1
   126d4:	cmp	r5, #0
   126d8:	beq	12710 <abort@plt+0x19f8>
   126dc:	cmp	r7, fp
   126e0:	movhi	lr, #39	; 0x27
   126e4:	strbhi	lr, [r0, fp]
   126e8:	add	lr, fp, #1
   126ec:	cmp	r7, lr
   126f0:	movhi	r8, #36	; 0x24
   126f4:	strbhi	r8, [r0, lr]
   126f8:	add	lr, fp, #2
   126fc:	cmp	r7, lr
   12700:	movhi	r8, #39	; 0x27
   12704:	strbhi	r8, [r0, lr]
   12708:	add	fp, fp, #3
   1270c:	mov	lr, r5
   12710:	cmp	r7, fp
   12714:	movhi	r5, #92	; 0x5c
   12718:	strbhi	r5, [r0, fp]
   1271c:	add	r5, fp, #1
   12720:	cmp	r7, r5
   12724:	lsrhi	r8, r4, #6
   12728:	addhi	r8, r8, #48	; 0x30
   1272c:	strbhi	r8, [r0, r5]
   12730:	add	r8, fp, #2
   12734:	cmp	r7, r8
   12738:	lsrhi	r5, r4, #3
   1273c:	andhi	r5, r5, #7
   12740:	addhi	r5, r5, #48	; 0x30
   12744:	strbhi	r5, [r0, r8]
   12748:	add	fp, fp, #3
   1274c:	and	r4, r4, #7
   12750:	add	r4, r4, #48	; 0x30
   12754:	add	r5, r6, #1
   12758:	cmp	r1, r5
   1275c:	bls	12778 <abort@plt+0x1a60>
   12760:	mov	r6, r5
   12764:	mov	r5, r3
   12768:	b	126a4 <abort@plt+0x198c>
   1276c:	str	lr, [sp, #44]	; 0x2c
   12770:	ldr	r8, [sp, #56]	; 0x38
   12774:	b	12048 <abort@plt+0x1330>
   12778:	str	lr, [sp, #44]	; 0x2c
   1277c:	ldr	r8, [sp, #56]	; 0x38
   12780:	mov	r5, r3
   12784:	b	12048 <abort@plt+0x1330>
   12788:	mov	r6, r8
   1278c:	b	126a4 <abort@plt+0x198c>
   12790:	mov	r5, #0
   12794:	b	12164 <abort@plt+0x144c>
   12798:	mov	r8, r5
   1279c:	ldr	r5, [sp, #48]	; 0x30
   127a0:	mov	r4, #48	; 0x30
   127a4:	b	12164 <abort@plt+0x144c>
   127a8:	ldr	r8, [sp, #32]
   127ac:	mov	r4, #48	; 0x30
   127b0:	b	12164 <abort@plt+0x144c>
   127b4:	ldr	r8, [sp, #32]
   127b8:	mov	r4, #48	; 0x30
   127bc:	b	12164 <abort@plt+0x144c>
   127c0:	mov	r8, #0
   127c4:	mov	r5, r8
   127c8:	b	12164 <abort@plt+0x144c>
   127cc:	mov	r8, #0
   127d0:	mov	r5, r8
   127d4:	b	12164 <abort@plt+0x144c>
   127d8:	mov	r8, #0
   127dc:	mov	r5, r8
   127e0:	b	12164 <abort@plt+0x144c>
   127e4:	mov	r8, #0
   127e8:	mov	r5, r8
   127ec:	b	12164 <abort@plt+0x144c>
   127f0:	ldr	r3, [sp, #52]	; 0x34
   127f4:	ldrb	r8, [r3, r6]
   127f8:	adds	r8, r8, #0
   127fc:	movne	r8, #1
   12800:	b	12274 <abort@plt+0x155c>
   12804:	cmp	sl, #2
   12808:	movne	r3, #0
   1280c:	moveq	r3, #1
   12810:	ldr	r1, [sp, #32]
   12814:	mov	r2, r1
   12818:	and	r2, r2, r3
   1281c:	cmp	fp, #0
   12820:	movne	r2, #0
   12824:	andeq	r2, r2, #1
   12828:	cmp	r2, #0
   1282c:	bne	129dc <abort@plt+0x1cc4>
   12830:	eor	r2, r1, #1
   12834:	and	r3, r3, r2
   12838:	ldr	r1, [sp, #80]	; 0x50
   1283c:	tst	r1, r3
   12840:	beq	128b8 <abort@plt+0x1ba0>
   12844:	ldr	r3, [sp, #40]	; 0x28
   12848:	cmp	r3, #0
   1284c:	bne	12874 <abort@plt+0x1b5c>
   12850:	ldr	r1, [sp, #76]	; 0x4c
   12854:	clz	r3, r7
   12858:	lsr	r3, r3, #5
   1285c:	cmp	r1, #0
   12860:	moveq	r3, #0
   12864:	cmp	r3, #0
   12868:	beq	128b8 <abort@plt+0x1ba0>
   1286c:	ldr	r7, [sp, #76]	; 0x4c
   12870:	b	11908 <abort@plt+0xbf0>
   12874:	ldr	r3, [sp, #168]	; 0xa8
   12878:	str	r3, [sp, #16]
   1287c:	ldr	r3, [sp, #164]	; 0xa4
   12880:	str	r3, [sp, #12]
   12884:	ldr	r3, [sp, #160]	; 0xa0
   12888:	str	r3, [sp, #8]
   1288c:	ldr	r3, [sp, #156]	; 0x9c
   12890:	str	r3, [sp, #4]
   12894:	mov	r3, #5
   12898:	str	r3, [sp]
   1289c:	ldr	r3, [sp, #28]
   128a0:	ldr	r2, [sp, #52]	; 0x34
   128a4:	ldr	r1, [sp, #76]	; 0x4c
   128a8:	ldr	r0, [sp, #36]	; 0x24
   128ac:	bl	118a8 <abort@plt+0xb90>
   128b0:	mov	fp, r0
   128b4:	b	129b8 <abort@plt+0x1ca0>
   128b8:	mov	sl, r7
   128bc:	ldr	r3, [sp, #72]	; 0x48
   128c0:	cmp	r3, #0
   128c4:	moveq	r2, #0
   128c8:	andne	r2, r2, #1
   128cc:	cmp	r2, #0
   128d0:	beq	12900 <abort@plt+0x1be8>
   128d4:	mov	r2, r3
   128d8:	ldrb	r3, [r3]
   128dc:	cmp	r3, #0
   128e0:	beq	12900 <abort@plt+0x1be8>
   128e4:	ldr	r1, [sp, #36]	; 0x24
   128e8:	cmp	sl, fp
   128ec:	strbhi	r3, [r1, fp]
   128f0:	add	fp, fp, #1
   128f4:	ldrb	r3, [r2, #1]!
   128f8:	cmp	r3, #0
   128fc:	bne	128e8 <abort@plt+0x1bd0>
   12900:	cmp	sl, fp
   12904:	movhi	r3, #0
   12908:	ldrhi	r2, [sp, #36]	; 0x24
   1290c:	strbhi	r3, [r2, fp]
   12910:	b	129b8 <abort@plt+0x1ca0>
   12914:	mov	r8, sl
   12918:	mov	sl, r7
   1291c:	ldr	r3, [sp, #32]
   12920:	str	r3, [sp, #48]	; 0x30
   12924:	b	12960 <abort@plt+0x1c48>
   12928:	mov	r8, sl
   1292c:	mov	sl, r7
   12930:	b	12960 <abort@plt+0x1c48>
   12934:	mov	r8, sl
   12938:	mov	sl, r7
   1293c:	b	12960 <abort@plt+0x1c48>
   12940:			; <UNDEFINED> instruction: 0x00014bb4
   12944:	andeq	r4, r1, r4, asr #23
   12948:			; <UNDEFINED> instruction: 0x00014bb8
   1294c:	mov	r8, sl
   12950:	mov	sl, r7
   12954:	b	12960 <abort@plt+0x1c48>
   12958:	mov	r8, sl
   1295c:	mov	sl, r7
   12960:	ldr	r3, [sp, #48]	; 0x30
   12964:	cmp	r8, #2
   12968:	movne	r3, #0
   1296c:	andeq	r3, r3, #1
   12970:	cmp	r3, #0
   12974:	movne	r8, #4
   12978:	ldr	r3, [sp, #168]	; 0xa8
   1297c:	str	r3, [sp, #16]
   12980:	ldr	r3, [sp, #164]	; 0xa4
   12984:	str	r3, [sp, #12]
   12988:	mov	r3, #0
   1298c:	str	r3, [sp, #8]
   12990:	ldr	r3, [sp, #156]	; 0x9c
   12994:	bic	r3, r3, #2
   12998:	str	r3, [sp, #4]
   1299c:	str	r8, [sp]
   129a0:	ldr	r3, [sp, #28]
   129a4:	ldr	r2, [sp, #52]	; 0x34
   129a8:	mov	r1, sl
   129ac:	ldr	r0, [sp, #36]	; 0x24
   129b0:	bl	118a8 <abort@plt+0xb90>
   129b4:	mov	fp, r0
   129b8:	mov	r0, fp
   129bc:	add	sp, sp, #116	; 0x74
   129c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129c4:	mov	r8, sl
   129c8:	mov	sl, r7
   129cc:	b	12960 <abort@plt+0x1c48>
   129d0:	mov	r8, sl
   129d4:	mov	sl, r7
   129d8:	b	12960 <abort@plt+0x1c48>
   129dc:	mov	r8, sl
   129e0:	mov	sl, r7
   129e4:	b	12960 <abort@plt+0x1c48>
   129e8:	mov	r8, sl
   129ec:	mov	sl, r7
   129f0:	b	12978 <abort@plt+0x1c60>
   129f4:	mov	r3, #1
   129f8:	str	r3, [sp, #32]
   129fc:	str	r3, [sp, #48]	; 0x30
   12a00:	str	r3, [sp, #60]	; 0x3c
   12a04:	ldr	r3, [pc, #-196]	; 12948 <abort@plt+0x1c30>
   12a08:	str	r3, [sp, #72]	; 0x48
   12a0c:	mov	fp, #0
   12a10:	mov	sl, #5
   12a14:	b	11964 <abort@plt+0xc4c>
   12a18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a1c:	sub	sp, sp, #52	; 0x34
   12a20:	mov	r5, r0
   12a24:	str	r1, [sp, #24]
   12a28:	str	r2, [sp, #28]
   12a2c:	mov	r4, r3
   12a30:	bl	10c70 <__errno_location@plt>
   12a34:	str	r0, [sp, #32]
   12a38:	ldr	r3, [r0]
   12a3c:	str	r3, [sp, #36]	; 0x24
   12a40:	ldr	r3, [pc, #396]	; 12bd4 <abort@plt+0x1ebc>
   12a44:	ldr	r6, [r3]
   12a48:	cmn	r5, #-2147483647	; 0x80000001
   12a4c:	movne	r3, #0
   12a50:	moveq	r3, #1
   12a54:	orrs	r3, r3, r5, lsr #31
   12a58:	bne	12b98 <abort@plt+0x1e80>
   12a5c:	ldr	r3, [pc, #368]	; 12bd4 <abort@plt+0x1ebc>
   12a60:	ldr	r2, [r3, #4]
   12a64:	cmp	r5, r2
   12a68:	blt	12ad0 <abort@plt+0x1db8>
   12a6c:	str	r2, [sp, #44]	; 0x2c
   12a70:	add	r3, r3, #8
   12a74:	cmp	r6, r3
   12a78:	beq	12b9c <abort@plt+0x1e84>
   12a7c:	sub	r2, r5, r2
   12a80:	mov	r3, #8
   12a84:	str	r3, [sp]
   12a88:	mvn	r3, #-2147483648	; 0x80000000
   12a8c:	add	r2, r2, #1
   12a90:	add	r1, sp, #44	; 0x2c
   12a94:	mov	r0, r6
   12a98:	bl	13990 <abort@plt+0x2c78>
   12a9c:	mov	r6, r0
   12aa0:	ldr	r3, [pc, #300]	; 12bd4 <abort@plt+0x1ebc>
   12aa4:	str	r0, [r3]
   12aa8:	ldr	r7, [pc, #292]	; 12bd4 <abort@plt+0x1ebc>
   12aac:	ldr	r0, [r7, #4]
   12ab0:	ldr	r2, [sp, #44]	; 0x2c
   12ab4:	sub	r2, r2, r0
   12ab8:	lsl	r2, r2, #3
   12abc:	mov	r1, #0
   12ac0:	add	r0, r6, r0, lsl #3
   12ac4:	bl	10c88 <memset@plt>
   12ac8:	ldr	r3, [sp, #44]	; 0x2c
   12acc:	str	r3, [r7, #4]
   12ad0:	add	fp, r6, r5, lsl #3
   12ad4:	ldr	r8, [r6, r5, lsl #3]
   12ad8:	ldr	r7, [fp, #4]
   12adc:	ldr	r9, [r4, #4]
   12ae0:	orr	r9, r9, #1
   12ae4:	add	sl, r4, #8
   12ae8:	ldr	r3, [r4, #44]	; 0x2c
   12aec:	str	r3, [sp, #16]
   12af0:	ldr	r3, [r4, #40]	; 0x28
   12af4:	str	r3, [sp, #12]
   12af8:	str	sl, [sp, #8]
   12afc:	str	r9, [sp, #4]
   12b00:	ldr	r3, [r4]
   12b04:	str	r3, [sp]
   12b08:	ldr	r3, [sp, #28]
   12b0c:	ldr	r2, [sp, #24]
   12b10:	mov	r1, r8
   12b14:	mov	r0, r7
   12b18:	bl	118a8 <abort@plt+0xb90>
   12b1c:	cmp	r8, r0
   12b20:	bhi	12b80 <abort@plt+0x1e68>
   12b24:	add	r8, r0, #1
   12b28:	str	r8, [r6, r5, lsl #3]
   12b2c:	ldr	r3, [pc, #164]	; 12bd8 <abort@plt+0x1ec0>
   12b30:	cmp	r7, r3
   12b34:	beq	12b40 <abort@plt+0x1e28>
   12b38:	mov	r0, r7
   12b3c:	bl	1401c <abort@plt+0x3304>
   12b40:	mov	r0, r8
   12b44:	bl	1380c <abort@plt+0x2af4>
   12b48:	mov	r7, r0
   12b4c:	str	r0, [fp, #4]
   12b50:	ldr	r3, [r4, #44]	; 0x2c
   12b54:	str	r3, [sp, #16]
   12b58:	ldr	r3, [r4, #40]	; 0x28
   12b5c:	str	r3, [sp, #12]
   12b60:	str	sl, [sp, #8]
   12b64:	str	r9, [sp, #4]
   12b68:	ldr	r3, [r4]
   12b6c:	str	r3, [sp]
   12b70:	ldr	r3, [sp, #28]
   12b74:	ldr	r2, [sp, #24]
   12b78:	mov	r1, r8
   12b7c:	bl	118a8 <abort@plt+0xb90>
   12b80:	ldr	r3, [sp, #32]
   12b84:	ldr	r2, [sp, #36]	; 0x24
   12b88:	str	r2, [r3]
   12b8c:	mov	r0, r7
   12b90:	add	sp, sp, #52	; 0x34
   12b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b98:	bl	10d18 <abort@plt>
   12b9c:	sub	r2, r5, r2
   12ba0:	mov	r3, #8
   12ba4:	str	r3, [sp]
   12ba8:	mvn	r3, #-2147483648	; 0x80000000
   12bac:	add	r2, r2, #1
   12bb0:	add	r1, sp, #44	; 0x2c
   12bb4:	mov	r0, #0
   12bb8:	bl	13990 <abort@plt+0x2c78>
   12bbc:	mov	r6, r0
   12bc0:	ldr	r3, [pc, #12]	; 12bd4 <abort@plt+0x1ebc>
   12bc4:	str	r0, [r3], #8
   12bc8:	ldm	r3, {r0, r1}
   12bcc:	stm	r6, {r0, r1}
   12bd0:	b	12aa8 <abort@plt+0x1d90>
   12bd4:	ldrdeq	r6, [r2], -r0
   12bd8:	andeq	r6, r2, ip, lsr r1
   12bdc:	push	{r4, r5, r6, lr}
   12be0:	mov	r4, r0
   12be4:	bl	10c70 <__errno_location@plt>
   12be8:	mov	r5, r0
   12bec:	ldr	r6, [r0]
   12bf0:	cmp	r4, #0
   12bf4:	ldr	r3, [pc, #20]	; 12c10 <abort@plt+0x1ef8>
   12bf8:	moveq	r4, r3
   12bfc:	mov	r1, #48	; 0x30
   12c00:	mov	r0, r4
   12c04:	bl	13cf8 <abort@plt+0x2fe0>
   12c08:	str	r6, [r5]
   12c0c:	pop	{r4, r5, r6, pc}
   12c10:	andeq	r6, r2, ip, lsr r2
   12c14:	subs	r3, r0, #0
   12c18:	ldr	r2, [pc, #8]	; 12c28 <abort@plt+0x1f10>
   12c1c:	moveq	r3, r2
   12c20:	ldr	r0, [r3]
   12c24:	bx	lr
   12c28:	andeq	r6, r2, ip, lsr r2
   12c2c:	subs	r3, r0, #0
   12c30:	ldr	r2, [pc, #8]	; 12c40 <abort@plt+0x1f28>
   12c34:	moveq	r3, r2
   12c38:	str	r1, [r3]
   12c3c:	bx	lr
   12c40:	andeq	r6, r2, ip, lsr r2
   12c44:	push	{lr}		; (str lr, [sp, #-4]!)
   12c48:	subs	r3, r0, #0
   12c4c:	ldr	r0, [pc, #44]	; 12c80 <abort@plt+0x1f68>
   12c50:	moveq	r3, r0
   12c54:	add	r3, r3, #8
   12c58:	lsr	lr, r1, #5
   12c5c:	and	r1, r1, #31
   12c60:	ldr	ip, [r3, lr, lsl #2]
   12c64:	lsr	r0, ip, r1
   12c68:	eor	r2, r2, r0
   12c6c:	and	r2, r2, #1
   12c70:	eor	r1, ip, r2, lsl r1
   12c74:	str	r1, [r3, lr, lsl #2]
   12c78:	and	r0, r0, #1
   12c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c80:	andeq	r6, r2, ip, lsr r2
   12c84:	subs	r3, r0, #0
   12c88:	ldr	r2, [pc, #12]	; 12c9c <abort@plt+0x1f84>
   12c8c:	moveq	r3, r2
   12c90:	ldr	r0, [r3, #4]
   12c94:	str	r1, [r3, #4]
   12c98:	bx	lr
   12c9c:	andeq	r6, r2, ip, lsr r2
   12ca0:	subs	r3, r0, #0
   12ca4:	ldr	r0, [pc, #40]	; 12cd4 <abort@plt+0x1fbc>
   12ca8:	moveq	r3, r0
   12cac:	mov	r0, #10
   12cb0:	str	r0, [r3]
   12cb4:	cmp	r2, #0
   12cb8:	cmpne	r1, #0
   12cbc:	beq	12ccc <abort@plt+0x1fb4>
   12cc0:	str	r1, [r3, #40]	; 0x28
   12cc4:	str	r2, [r3, #44]	; 0x2c
   12cc8:	bx	lr
   12ccc:	push	{r4, lr}
   12cd0:	bl	10d18 <abort@plt>
   12cd4:	andeq	r6, r2, ip, lsr r2
   12cd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12cdc:	sub	sp, sp, #24
   12ce0:	mov	r7, r0
   12ce4:	mov	r8, r1
   12ce8:	mov	r9, r2
   12cec:	mov	sl, r3
   12cf0:	ldr	r4, [sp, #56]	; 0x38
   12cf4:	cmp	r4, #0
   12cf8:	ldr	r3, [pc, #84]	; 12d54 <abort@plt+0x203c>
   12cfc:	moveq	r4, r3
   12d00:	bl	10c70 <__errno_location@plt>
   12d04:	mov	r5, r0
   12d08:	ldr	r6, [r0]
   12d0c:	ldr	r3, [r4, #44]	; 0x2c
   12d10:	str	r3, [sp, #16]
   12d14:	ldr	r3, [r4, #40]	; 0x28
   12d18:	str	r3, [sp, #12]
   12d1c:	add	r3, r4, #8
   12d20:	str	r3, [sp, #8]
   12d24:	ldr	r3, [r4, #4]
   12d28:	str	r3, [sp, #4]
   12d2c:	ldr	r3, [r4]
   12d30:	str	r3, [sp]
   12d34:	mov	r3, sl
   12d38:	mov	r2, r9
   12d3c:	mov	r1, r8
   12d40:	mov	r0, r7
   12d44:	bl	118a8 <abort@plt+0xb90>
   12d48:	str	r6, [r5]
   12d4c:	add	sp, sp, #24
   12d50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d54:	andeq	r6, r2, ip, lsr r2
   12d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d5c:	sub	sp, sp, #44	; 0x2c
   12d60:	str	r0, [sp, #28]
   12d64:	str	r1, [sp, #32]
   12d68:	mov	r6, r2
   12d6c:	subs	r4, r3, #0
   12d70:	ldr	r3, [pc, #172]	; 12e24 <abort@plt+0x210c>
   12d74:	moveq	r4, r3
   12d78:	bl	10c70 <__errno_location@plt>
   12d7c:	mov	r7, r0
   12d80:	ldr	fp, [r0]
   12d84:	ldr	r5, [r4, #4]
   12d88:	cmp	r6, #0
   12d8c:	orreq	r5, r5, #1
   12d90:	add	r9, r4, #8
   12d94:	ldr	r3, [r4, #44]	; 0x2c
   12d98:	str	r3, [sp, #16]
   12d9c:	ldr	r3, [r4, #40]	; 0x28
   12da0:	str	r3, [sp, #12]
   12da4:	str	r9, [sp, #8]
   12da8:	str	r5, [sp, #4]
   12dac:	ldr	r3, [r4]
   12db0:	str	r3, [sp]
   12db4:	ldr	r3, [sp, #32]
   12db8:	ldr	r2, [sp, #28]
   12dbc:	mov	r1, #0
   12dc0:	mov	r0, r1
   12dc4:	bl	118a8 <abort@plt+0xb90>
   12dc8:	mov	sl, r0
   12dcc:	add	r8, r0, #1
   12dd0:	mov	r0, r8
   12dd4:	bl	1380c <abort@plt+0x2af4>
   12dd8:	str	r0, [sp, #36]	; 0x24
   12ddc:	ldr	r3, [r4, #44]	; 0x2c
   12de0:	str	r3, [sp, #16]
   12de4:	ldr	r3, [r4, #40]	; 0x28
   12de8:	str	r3, [sp, #12]
   12dec:	str	r9, [sp, #8]
   12df0:	str	r5, [sp, #4]
   12df4:	ldr	r3, [r4]
   12df8:	str	r3, [sp]
   12dfc:	ldr	r3, [sp, #32]
   12e00:	ldr	r2, [sp, #28]
   12e04:	mov	r1, r8
   12e08:	bl	118a8 <abort@plt+0xb90>
   12e0c:	str	fp, [r7]
   12e10:	cmp	r6, #0
   12e14:	strne	sl, [r6]
   12e18:	ldr	r0, [sp, #36]	; 0x24
   12e1c:	add	sp, sp, #44	; 0x2c
   12e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e24:	andeq	r6, r2, ip, lsr r2
   12e28:	push	{r4, lr}
   12e2c:	mov	r3, r2
   12e30:	mov	r2, #0
   12e34:	bl	12d58 <abort@plt+0x2040>
   12e38:	pop	{r4, pc}
   12e3c:	push	{r4, r5, r6, r7, r8, lr}
   12e40:	ldr	r3, [pc, #140]	; 12ed4 <abort@plt+0x21bc>
   12e44:	ldr	r7, [r3]
   12e48:	ldr	r3, [r3, #4]
   12e4c:	cmp	r3, #1
   12e50:	ble	12e7c <abort@plt+0x2164>
   12e54:	mov	r5, r7
   12e58:	mov	r4, #1
   12e5c:	ldr	r6, [pc, #112]	; 12ed4 <abort@plt+0x21bc>
   12e60:	ldr	r0, [r5, #12]
   12e64:	bl	1401c <abort@plt+0x3304>
   12e68:	add	r4, r4, #1
   12e6c:	add	r5, r5, #8
   12e70:	ldr	r3, [r6, #4]
   12e74:	cmp	r3, r4
   12e78:	bgt	12e60 <abort@plt+0x2148>
   12e7c:	ldr	r0, [r7, #4]
   12e80:	ldr	r3, [pc, #80]	; 12ed8 <abort@plt+0x21c0>
   12e84:	cmp	r0, r3
   12e88:	beq	12ea4 <abort@plt+0x218c>
   12e8c:	bl	1401c <abort@plt+0x3304>
   12e90:	ldr	r3, [pc, #60]	; 12ed4 <abort@plt+0x21bc>
   12e94:	mov	r2, #256	; 0x100
   12e98:	str	r2, [r3, #8]
   12e9c:	ldr	r2, [pc, #52]	; 12ed8 <abort@plt+0x21c0>
   12ea0:	str	r2, [r3, #12]
   12ea4:	ldr	r3, [pc, #48]	; 12edc <abort@plt+0x21c4>
   12ea8:	cmp	r7, r3
   12eac:	beq	12ec4 <abort@plt+0x21ac>
   12eb0:	mov	r0, r7
   12eb4:	bl	1401c <abort@plt+0x3304>
   12eb8:	ldr	r3, [pc, #20]	; 12ed4 <abort@plt+0x21bc>
   12ebc:	add	r2, r3, #8
   12ec0:	str	r2, [r3]
   12ec4:	mov	r2, #1
   12ec8:	ldr	r3, [pc, #4]	; 12ed4 <abort@plt+0x21bc>
   12ecc:	str	r2, [r3, #4]
   12ed0:	pop	{r4, r5, r6, r7, r8, pc}
   12ed4:	ldrdeq	r6, [r2], -r0
   12ed8:	andeq	r6, r2, ip, lsr r1
   12edc:	ldrdeq	r6, [r2], -r8
   12ee0:	push	{r4, lr}
   12ee4:	ldr	r3, [pc, #8]	; 12ef4 <abort@plt+0x21dc>
   12ee8:	mvn	r2, #0
   12eec:	bl	12a18 <abort@plt+0x1d00>
   12ef0:	pop	{r4, pc}
   12ef4:	andeq	r6, r2, ip, lsr r2
   12ef8:	push	{r4, lr}
   12efc:	ldr	r3, [pc, #4]	; 12f08 <abort@plt+0x21f0>
   12f00:	bl	12a18 <abort@plt+0x1d00>
   12f04:	pop	{r4, pc}
   12f08:	andeq	r6, r2, ip, lsr r2
   12f0c:	push	{r4, lr}
   12f10:	mov	r1, r0
   12f14:	mov	r0, #0
   12f18:	bl	12ee0 <abort@plt+0x21c8>
   12f1c:	pop	{r4, pc}
   12f20:	push	{r4, lr}
   12f24:	mov	r2, r1
   12f28:	mov	r1, r0
   12f2c:	mov	r0, #0
   12f30:	bl	12ef8 <abort@plt+0x21e0>
   12f34:	pop	{r4, pc}
   12f38:	push	{r4, r5, lr}
   12f3c:	sub	sp, sp, #52	; 0x34
   12f40:	mov	r4, r0
   12f44:	mov	r5, r2
   12f48:	mov	r0, sp
   12f4c:	bl	11740 <abort@plt+0xa28>
   12f50:	mov	r3, sp
   12f54:	mvn	r2, #0
   12f58:	mov	r1, r5
   12f5c:	mov	r0, r4
   12f60:	bl	12a18 <abort@plt+0x1d00>
   12f64:	add	sp, sp, #52	; 0x34
   12f68:	pop	{r4, r5, pc}
   12f6c:	push	{r4, r5, r6, lr}
   12f70:	sub	sp, sp, #48	; 0x30
   12f74:	mov	r4, r0
   12f78:	mov	r5, r2
   12f7c:	mov	r6, r3
   12f80:	mov	r0, sp
   12f84:	bl	11740 <abort@plt+0xa28>
   12f88:	mov	r3, sp
   12f8c:	mov	r2, r6
   12f90:	mov	r1, r5
   12f94:	mov	r0, r4
   12f98:	bl	12a18 <abort@plt+0x1d00>
   12f9c:	add	sp, sp, #48	; 0x30
   12fa0:	pop	{r4, r5, r6, pc}
   12fa4:	push	{r4, lr}
   12fa8:	mov	r2, r1
   12fac:	mov	r1, r0
   12fb0:	mov	r0, #0
   12fb4:	bl	12f38 <abort@plt+0x2220>
   12fb8:	pop	{r4, pc}
   12fbc:	push	{r4, lr}
   12fc0:	mov	r3, r2
   12fc4:	mov	r2, r1
   12fc8:	mov	r1, r0
   12fcc:	mov	r0, #0
   12fd0:	bl	12f6c <abort@plt+0x2254>
   12fd4:	pop	{r4, pc}
   12fd8:	push	{r4, r5, r6, lr}
   12fdc:	sub	sp, sp, #48	; 0x30
   12fe0:	mov	r4, r0
   12fe4:	mov	r5, r1
   12fe8:	mov	r6, r2
   12fec:	mov	ip, sp
   12ff0:	ldr	lr, [pc, #64]	; 13038 <abort@plt+0x2320>
   12ff4:	ldm	lr!, {r0, r1, r2, r3}
   12ff8:	stmia	ip!, {r0, r1, r2, r3}
   12ffc:	ldm	lr!, {r0, r1, r2, r3}
   13000:	stmia	ip!, {r0, r1, r2, r3}
   13004:	ldm	lr, {r0, r1, r2, r3}
   13008:	stm	ip, {r0, r1, r2, r3}
   1300c:	mov	r2, #1
   13010:	mov	r1, r6
   13014:	mov	r0, sp
   13018:	bl	12c44 <abort@plt+0x1f2c>
   1301c:	mov	r3, sp
   13020:	mov	r2, r5
   13024:	mov	r1, r4
   13028:	mov	r0, #0
   1302c:	bl	12a18 <abort@plt+0x1d00>
   13030:	add	sp, sp, #48	; 0x30
   13034:	pop	{r4, r5, r6, pc}
   13038:	andeq	r6, r2, ip, lsr r2
   1303c:	push	{r4, lr}
   13040:	mov	r2, r1
   13044:	mvn	r1, #0
   13048:	bl	12fd8 <abort@plt+0x22c0>
   1304c:	pop	{r4, pc}
   13050:	push	{r4, lr}
   13054:	mov	r1, #58	; 0x3a
   13058:	bl	1303c <abort@plt+0x2324>
   1305c:	pop	{r4, pc}
   13060:	push	{r4, lr}
   13064:	mov	r2, #58	; 0x3a
   13068:	bl	12fd8 <abort@plt+0x22c0>
   1306c:	pop	{r4, pc}
   13070:	push	{r4, r5, lr}
   13074:	sub	sp, sp, #100	; 0x64
   13078:	mov	r4, r0
   1307c:	mov	r5, r2
   13080:	mov	r0, sp
   13084:	bl	11740 <abort@plt+0xa28>
   13088:	add	lr, sp, #48	; 0x30
   1308c:	mov	ip, sp
   13090:	ldm	ip!, {r0, r1, r2, r3}
   13094:	stmia	lr!, {r0, r1, r2, r3}
   13098:	ldm	ip!, {r0, r1, r2, r3}
   1309c:	stmia	lr!, {r0, r1, r2, r3}
   130a0:	ldm	ip, {r0, r1, r2, r3}
   130a4:	stm	lr, {r0, r1, r2, r3}
   130a8:	mov	r2, #1
   130ac:	mov	r1, #58	; 0x3a
   130b0:	add	r0, sp, #48	; 0x30
   130b4:	bl	12c44 <abort@plt+0x1f2c>
   130b8:	add	r3, sp, #48	; 0x30
   130bc:	mvn	r2, #0
   130c0:	mov	r1, r5
   130c4:	mov	r0, r4
   130c8:	bl	12a18 <abort@plt+0x1d00>
   130cc:	add	sp, sp, #100	; 0x64
   130d0:	pop	{r4, r5, pc}
   130d4:	push	{r4, r5, r6, r7, lr}
   130d8:	sub	sp, sp, #52	; 0x34
   130dc:	mov	r4, r0
   130e0:	mov	r6, r1
   130e4:	mov	r7, r2
   130e8:	mov	r5, r3
   130ec:	mov	ip, sp
   130f0:	ldr	lr, [pc, #64]	; 13138 <abort@plt+0x2420>
   130f4:	ldm	lr!, {r0, r1, r2, r3}
   130f8:	stmia	ip!, {r0, r1, r2, r3}
   130fc:	ldm	lr!, {r0, r1, r2, r3}
   13100:	stmia	ip!, {r0, r1, r2, r3}
   13104:	ldm	lr, {r0, r1, r2, r3}
   13108:	stm	ip, {r0, r1, r2, r3}
   1310c:	mov	r2, r7
   13110:	mov	r1, r6
   13114:	mov	r0, sp
   13118:	bl	12ca0 <abort@plt+0x1f88>
   1311c:	mov	r3, sp
   13120:	ldr	r2, [sp, #72]	; 0x48
   13124:	mov	r1, r5
   13128:	mov	r0, r4
   1312c:	bl	12a18 <abort@plt+0x1d00>
   13130:	add	sp, sp, #52	; 0x34
   13134:	pop	{r4, r5, r6, r7, pc}
   13138:	andeq	r6, r2, ip, lsr r2
   1313c:	push	{lr}		; (str lr, [sp, #-4]!)
   13140:	sub	sp, sp, #12
   13144:	mvn	ip, #0
   13148:	str	ip, [sp]
   1314c:	bl	130d4 <abort@plt+0x23bc>
   13150:	add	sp, sp, #12
   13154:	pop	{pc}		; (ldr pc, [sp], #4)
   13158:	push	{r4, lr}
   1315c:	mov	r3, r2
   13160:	mov	r2, r1
   13164:	mov	r1, r0
   13168:	mov	r0, #0
   1316c:	bl	1313c <abort@plt+0x2424>
   13170:	pop	{r4, pc}
   13174:	push	{lr}		; (str lr, [sp, #-4]!)
   13178:	sub	sp, sp, #12
   1317c:	str	r3, [sp]
   13180:	mov	r3, r2
   13184:	mov	r2, r1
   13188:	mov	r1, r0
   1318c:	mov	r0, #0
   13190:	bl	130d4 <abort@plt+0x23bc>
   13194:	add	sp, sp, #12
   13198:	pop	{pc}		; (ldr pc, [sp], #4)
   1319c:	push	{r4, lr}
   131a0:	ldr	r3, [pc, #4]	; 131ac <abort@plt+0x2494>
   131a4:	bl	12a18 <abort@plt+0x1d00>
   131a8:	pop	{r4, pc}
   131ac:	andeq	r6, r2, r0, ror #1
   131b0:	push	{r4, lr}
   131b4:	mov	r2, r1
   131b8:	mov	r1, r0
   131bc:	mov	r0, #0
   131c0:	bl	1319c <abort@plt+0x2484>
   131c4:	pop	{r4, pc}
   131c8:	push	{r4, lr}
   131cc:	mvn	r2, #0
   131d0:	bl	1319c <abort@plt+0x2484>
   131d4:	pop	{r4, pc}
   131d8:	push	{r4, lr}
   131dc:	mov	r1, r0
   131e0:	mov	r0, #0
   131e4:	bl	131c8 <abort@plt+0x24b0>
   131e8:	pop	{r4, pc}
   131ec:	push	{r4, r5, r6, r7, r8, lr}
   131f0:	mov	r8, r0
   131f4:	mov	r7, r1
   131f8:	mov	r4, r2
   131fc:	ldr	r5, [pc, #88]	; 1325c <abort@plt+0x2544>
   13200:	b	13208 <abort@plt+0x24f0>
   13204:	mov	r4, r5
   13208:	mov	r2, r4
   1320c:	mov	r1, r7
   13210:	mov	r0, r8
   13214:	bl	10ca0 <write@plt>
   13218:	subs	r6, r0, #0
   1321c:	bge	13254 <abort@plt+0x253c>
   13220:	bl	10c70 <__errno_location@plt>
   13224:	ldr	r3, [r0]
   13228:	cmp	r3, #4
   1322c:	beq	13208 <abort@plt+0x24f0>
   13230:	cmp	r4, r5
   13234:	movls	r4, #0
   13238:	movhi	r4, #1
   1323c:	cmp	r3, #22
   13240:	movne	r4, #0
   13244:	cmp	r4, #0
   13248:	bne	13204 <abort@plt+0x24ec>
   1324c:	mov	r0, r6
   13250:	pop	{r4, r5, r6, r7, r8, pc}
   13254:	mov	r0, r6
   13258:	pop	{r4, r5, r6, r7, r8, pc}
   1325c:	svcvc	0x00f00000	; IMB
   13260:	push	{r4, r5, r6, lr}
   13264:	sub	sp, sp, #32
   13268:	mov	r4, r0
   1326c:	ldr	r5, [sp, #48]	; 0x30
   13270:	ldr	r6, [sp, #52]	; 0x34
   13274:	cmp	r1, #0
   13278:	beq	13330 <abort@plt+0x2618>
   1327c:	str	r3, [sp, #4]
   13280:	str	r2, [sp]
   13284:	mov	r3, r1
   13288:	ldr	r2, [pc, #940]	; 1363c <abort@plt+0x2924>
   1328c:	mov	r1, #1
   13290:	bl	10cb8 <__fprintf_chk@plt>
   13294:	mov	r2, #5
   13298:	ldr	r1, [pc, #928]	; 13640 <abort@plt+0x2928>
   1329c:	mov	r0, #0
   132a0:	bl	10b98 <dcgettext@plt>
   132a4:	ldr	r3, [pc, #920]	; 13644 <abort@plt+0x292c>
   132a8:	str	r3, [sp]
   132ac:	mov	r3, r0
   132b0:	ldr	r2, [pc, #912]	; 13648 <abort@plt+0x2930>
   132b4:	mov	r1, #1
   132b8:	mov	r0, r4
   132bc:	bl	10cb8 <__fprintf_chk@plt>
   132c0:	mov	r1, r4
   132c4:	mov	r0, #10
   132c8:	bl	10b8c <fputc_unlocked@plt>
   132cc:	mov	r2, #5
   132d0:	ldr	r1, [pc, #884]	; 1364c <abort@plt+0x2934>
   132d4:	mov	r0, #0
   132d8:	bl	10b98 <dcgettext@plt>
   132dc:	ldr	r3, [pc, #876]	; 13650 <abort@plt+0x2938>
   132e0:	mov	r2, r0
   132e4:	mov	r1, #1
   132e8:	mov	r0, r4
   132ec:	bl	10cb8 <__fprintf_chk@plt>
   132f0:	mov	r1, r4
   132f4:	mov	r0, #10
   132f8:	bl	10b8c <fputc_unlocked@plt>
   132fc:	cmp	r6, #9
   13300:	ldrls	pc, [pc, r6, lsl #2]
   13304:	b	135d4 <abort@plt+0x28bc>
   13308:	andeq	r3, r1, ip, ror #6
   1330c:	andeq	r3, r1, r8, asr #6
   13310:	andeq	r3, r1, r4, ror r3
   13314:	andeq	r3, r1, r4, lsr #7
   13318:	ldrdeq	r3, [r1], -ip
   1331c:	andeq	r3, r1, ip, lsl r4
   13320:	andeq	r3, r1, r4, ror #8
   13324:			; <UNDEFINED> instruction: 0x000134b4
   13328:	andeq	r3, r1, ip, lsl #10
   1332c:	andeq	r3, r1, ip, ror #10
   13330:	str	r3, [sp]
   13334:	mov	r3, r2
   13338:	ldr	r2, [pc, #788]	; 13654 <abort@plt+0x293c>
   1333c:	mov	r1, #1
   13340:	bl	10cb8 <__fprintf_chk@plt>
   13344:	b	13294 <abort@plt+0x257c>
   13348:	mov	r2, #5
   1334c:	ldr	r1, [pc, #772]	; 13658 <abort@plt+0x2940>
   13350:	mov	r0, #0
   13354:	bl	10b98 <dcgettext@plt>
   13358:	ldr	r3, [r5]
   1335c:	mov	r2, r0
   13360:	mov	r1, #1
   13364:	mov	r0, r4
   13368:	bl	10cb8 <__fprintf_chk@plt>
   1336c:	add	sp, sp, #32
   13370:	pop	{r4, r5, r6, pc}
   13374:	mov	r2, #5
   13378:	ldr	r1, [pc, #732]	; 1365c <abort@plt+0x2944>
   1337c:	mov	r0, #0
   13380:	bl	10b98 <dcgettext@plt>
   13384:	ldr	r3, [r5]
   13388:	ldr	r2, [r5, #4]
   1338c:	str	r2, [sp]
   13390:	mov	r2, r0
   13394:	mov	r1, #1
   13398:	mov	r0, r4
   1339c:	bl	10cb8 <__fprintf_chk@plt>
   133a0:	b	1336c <abort@plt+0x2654>
   133a4:	mov	r2, #5
   133a8:	ldr	r1, [pc, #688]	; 13660 <abort@plt+0x2948>
   133ac:	mov	r0, #0
   133b0:	bl	10b98 <dcgettext@plt>
   133b4:	ldr	r3, [r5]
   133b8:	ldr	r2, [r5, #8]
   133bc:	str	r2, [sp, #4]
   133c0:	ldr	r2, [r5, #4]
   133c4:	str	r2, [sp]
   133c8:	mov	r2, r0
   133cc:	mov	r1, #1
   133d0:	mov	r0, r4
   133d4:	bl	10cb8 <__fprintf_chk@plt>
   133d8:	b	1336c <abort@plt+0x2654>
   133dc:	mov	r2, #5
   133e0:	ldr	r1, [pc, #636]	; 13664 <abort@plt+0x294c>
   133e4:	mov	r0, #0
   133e8:	bl	10b98 <dcgettext@plt>
   133ec:	ldr	r3, [r5]
   133f0:	ldr	r2, [r5, #12]
   133f4:	str	r2, [sp, #8]
   133f8:	ldr	r2, [r5, #8]
   133fc:	str	r2, [sp, #4]
   13400:	ldr	r2, [r5, #4]
   13404:	str	r2, [sp]
   13408:	mov	r2, r0
   1340c:	mov	r1, #1
   13410:	mov	r0, r4
   13414:	bl	10cb8 <__fprintf_chk@plt>
   13418:	b	1336c <abort@plt+0x2654>
   1341c:	mov	r2, #5
   13420:	ldr	r1, [pc, #576]	; 13668 <abort@plt+0x2950>
   13424:	mov	r0, #0
   13428:	bl	10b98 <dcgettext@plt>
   1342c:	ldr	r3, [r5]
   13430:	ldr	r2, [r5, #16]
   13434:	str	r2, [sp, #12]
   13438:	ldr	r2, [r5, #12]
   1343c:	str	r2, [sp, #8]
   13440:	ldr	r2, [r5, #8]
   13444:	str	r2, [sp, #4]
   13448:	ldr	r2, [r5, #4]
   1344c:	str	r2, [sp]
   13450:	mov	r2, r0
   13454:	mov	r1, #1
   13458:	mov	r0, r4
   1345c:	bl	10cb8 <__fprintf_chk@plt>
   13460:	b	1336c <abort@plt+0x2654>
   13464:	mov	r2, #5
   13468:	ldr	r1, [pc, #508]	; 1366c <abort@plt+0x2954>
   1346c:	mov	r0, #0
   13470:	bl	10b98 <dcgettext@plt>
   13474:	ldr	r3, [r5]
   13478:	ldr	r2, [r5, #20]
   1347c:	str	r2, [sp, #16]
   13480:	ldr	r2, [r5, #16]
   13484:	str	r2, [sp, #12]
   13488:	ldr	r2, [r5, #12]
   1348c:	str	r2, [sp, #8]
   13490:	ldr	r2, [r5, #8]
   13494:	str	r2, [sp, #4]
   13498:	ldr	r2, [r5, #4]
   1349c:	str	r2, [sp]
   134a0:	mov	r2, r0
   134a4:	mov	r1, #1
   134a8:	mov	r0, r4
   134ac:	bl	10cb8 <__fprintf_chk@plt>
   134b0:	b	1336c <abort@plt+0x2654>
   134b4:	mov	r2, #5
   134b8:	ldr	r1, [pc, #432]	; 13670 <abort@plt+0x2958>
   134bc:	mov	r0, #0
   134c0:	bl	10b98 <dcgettext@plt>
   134c4:	ldr	r3, [r5]
   134c8:	ldr	r2, [r5, #24]
   134cc:	str	r2, [sp, #20]
   134d0:	ldr	r2, [r5, #20]
   134d4:	str	r2, [sp, #16]
   134d8:	ldr	r2, [r5, #16]
   134dc:	str	r2, [sp, #12]
   134e0:	ldr	r2, [r5, #12]
   134e4:	str	r2, [sp, #8]
   134e8:	ldr	r2, [r5, #8]
   134ec:	str	r2, [sp, #4]
   134f0:	ldr	r2, [r5, #4]
   134f4:	str	r2, [sp]
   134f8:	mov	r2, r0
   134fc:	mov	r1, #1
   13500:	mov	r0, r4
   13504:	bl	10cb8 <__fprintf_chk@plt>
   13508:	b	1336c <abort@plt+0x2654>
   1350c:	mov	r2, #5
   13510:	ldr	r1, [pc, #348]	; 13674 <abort@plt+0x295c>
   13514:	mov	r0, #0
   13518:	bl	10b98 <dcgettext@plt>
   1351c:	ldr	r3, [r5]
   13520:	ldr	r2, [r5, #28]
   13524:	str	r2, [sp, #24]
   13528:	ldr	r2, [r5, #24]
   1352c:	str	r2, [sp, #20]
   13530:	ldr	r2, [r5, #20]
   13534:	str	r2, [sp, #16]
   13538:	ldr	r2, [r5, #16]
   1353c:	str	r2, [sp, #12]
   13540:	ldr	r2, [r5, #12]
   13544:	str	r2, [sp, #8]
   13548:	ldr	r2, [r5, #8]
   1354c:	str	r2, [sp, #4]
   13550:	ldr	r2, [r5, #4]
   13554:	str	r2, [sp]
   13558:	mov	r2, r0
   1355c:	mov	r1, #1
   13560:	mov	r0, r4
   13564:	bl	10cb8 <__fprintf_chk@plt>
   13568:	b	1336c <abort@plt+0x2654>
   1356c:	mov	r2, #5
   13570:	ldr	r1, [pc, #256]	; 13678 <abort@plt+0x2960>
   13574:	mov	r0, #0
   13578:	bl	10b98 <dcgettext@plt>
   1357c:	ldr	r3, [r5]
   13580:	ldr	r2, [r5, #32]
   13584:	str	r2, [sp, #28]
   13588:	ldr	r2, [r5, #28]
   1358c:	str	r2, [sp, #24]
   13590:	ldr	r2, [r5, #24]
   13594:	str	r2, [sp, #20]
   13598:	ldr	r2, [r5, #20]
   1359c:	str	r2, [sp, #16]
   135a0:	ldr	r2, [r5, #16]
   135a4:	str	r2, [sp, #12]
   135a8:	ldr	r2, [r5, #12]
   135ac:	str	r2, [sp, #8]
   135b0:	ldr	r2, [r5, #8]
   135b4:	str	r2, [sp, #4]
   135b8:	ldr	r2, [r5, #4]
   135bc:	str	r2, [sp]
   135c0:	mov	r2, r0
   135c4:	mov	r1, #1
   135c8:	mov	r0, r4
   135cc:	bl	10cb8 <__fprintf_chk@plt>
   135d0:	b	1336c <abort@plt+0x2654>
   135d4:	mov	r2, #5
   135d8:	ldr	r1, [pc, #156]	; 1367c <abort@plt+0x2964>
   135dc:	mov	r0, #0
   135e0:	bl	10b98 <dcgettext@plt>
   135e4:	ldr	r3, [r5]
   135e8:	ldr	r2, [r5, #32]
   135ec:	str	r2, [sp, #28]
   135f0:	ldr	r2, [r5, #28]
   135f4:	str	r2, [sp, #24]
   135f8:	ldr	r2, [r5, #24]
   135fc:	str	r2, [sp, #20]
   13600:	ldr	r2, [r5, #20]
   13604:	str	r2, [sp, #16]
   13608:	ldr	r2, [r5, #16]
   1360c:	str	r2, [sp, #12]
   13610:	ldr	r2, [r5, #12]
   13614:	str	r2, [sp, #8]
   13618:	ldr	r2, [r5, #8]
   1361c:	str	r2, [sp, #4]
   13620:	ldr	r2, [r5, #4]
   13624:	str	r2, [sp]
   13628:	mov	r2, r0
   1362c:	mov	r1, #1
   13630:	mov	r0, r4
   13634:	bl	10cb8 <__fprintf_chk@plt>
   13638:	b	1336c <abort@plt+0x2654>
   1363c:	andeq	r4, r1, r0, lsr ip
   13640:	andeq	r4, r1, r4, asr #24
   13644:	andeq	r0, r0, r6, ror #15
   13648:	andeq	r4, r1, ip, lsl pc
   1364c:	andeq	r4, r1, r8, asr #24
   13650:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13654:	andeq	r4, r1, ip, lsr ip
   13658:	andeq	r4, r1, r8, lsl sp
   1365c:	andeq	r4, r1, r8, lsr #26
   13660:	andeq	r4, r1, r0, asr #26
   13664:	andeq	r4, r1, ip, asr sp
   13668:	andeq	r4, r1, ip, ror sp
   1366c:	andeq	r4, r1, r0, lsr #27
   13670:	andeq	r4, r1, r8, asr #27
   13674:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13678:	andeq	r4, r1, r4, lsr #28
   1367c:	andeq	r4, r1, r8, asr lr
   13680:	push	{r4, r5, lr}
   13684:	sub	sp, sp, #12
   13688:	ldr	r5, [sp, #24]
   1368c:	ldr	ip, [r5]
   13690:	cmp	ip, #0
   13694:	beq	136c4 <abort@plt+0x29ac>
   13698:	mov	lr, r5
   1369c:	mov	ip, #0
   136a0:	add	ip, ip, #1
   136a4:	ldr	r4, [lr, #4]!
   136a8:	cmp	r4, #0
   136ac:	bne	136a0 <abort@plt+0x2988>
   136b0:	str	ip, [sp, #4]
   136b4:	str	r5, [sp]
   136b8:	bl	13260 <abort@plt+0x2548>
   136bc:	add	sp, sp, #12
   136c0:	pop	{r4, r5, pc}
   136c4:	mov	ip, #0
   136c8:	b	136b0 <abort@plt+0x2998>
   136cc:	push	{r4, r5, lr}
   136d0:	sub	sp, sp, #52	; 0x34
   136d4:	ldr	r4, [sp, #64]	; 0x40
   136d8:	sub	r4, r4, #4
   136dc:	add	r5, sp, #4
   136e0:	mov	ip, #0
   136e4:	ldr	lr, [r4, #4]!
   136e8:	str	lr, [r5, #4]!
   136ec:	cmp	lr, #0
   136f0:	beq	13700 <abort@plt+0x29e8>
   136f4:	add	ip, ip, #1
   136f8:	cmp	ip, #10
   136fc:	bne	136e4 <abort@plt+0x29cc>
   13700:	str	ip, [sp, #4]
   13704:	add	ip, sp, #8
   13708:	str	ip, [sp]
   1370c:	bl	13260 <abort@plt+0x2548>
   13710:	add	sp, sp, #52	; 0x34
   13714:	pop	{r4, r5, pc}
   13718:	push	{r3}		; (str r3, [sp, #-4]!)
   1371c:	push	{lr}		; (str lr, [sp, #-4]!)
   13720:	sub	sp, sp, #16
   13724:	add	r3, sp, #24
   13728:	str	r3, [sp, #12]
   1372c:	str	r3, [sp]
   13730:	ldr	r3, [sp, #20]
   13734:	bl	136cc <abort@plt+0x29b4>
   13738:	add	sp, sp, #16
   1373c:	pop	{lr}		; (ldr lr, [sp], #4)
   13740:	add	sp, sp, #4
   13744:	bx	lr
   13748:	push	{r4, lr}
   1374c:	ldr	r3, [pc, #112]	; 137c4 <abort@plt+0x2aac>
   13750:	ldr	r1, [r3]
   13754:	mov	r0, #10
   13758:	bl	10b8c <fputc_unlocked@plt>
   1375c:	mov	r2, #5
   13760:	ldr	r1, [pc, #96]	; 137c8 <abort@plt+0x2ab0>
   13764:	mov	r0, #0
   13768:	bl	10b98 <dcgettext@plt>
   1376c:	ldr	r2, [pc, #88]	; 137cc <abort@plt+0x2ab4>
   13770:	mov	r1, r0
   13774:	mov	r0, #1
   13778:	bl	10c94 <__printf_chk@plt>
   1377c:	mov	r2, #5
   13780:	ldr	r1, [pc, #72]	; 137d0 <abort@plt+0x2ab8>
   13784:	mov	r0, #0
   13788:	bl	10b98 <dcgettext@plt>
   1378c:	ldr	r3, [pc, #64]	; 137d4 <abort@plt+0x2abc>
   13790:	ldr	r2, [pc, #64]	; 137d8 <abort@plt+0x2ac0>
   13794:	mov	r1, r0
   13798:	mov	r0, #1
   1379c:	bl	10c94 <__printf_chk@plt>
   137a0:	mov	r2, #5
   137a4:	ldr	r1, [pc, #48]	; 137dc <abort@plt+0x2ac4>
   137a8:	mov	r0, #0
   137ac:	bl	10b98 <dcgettext@plt>
   137b0:	ldr	r2, [pc, #40]	; 137e0 <abort@plt+0x2ac8>
   137b4:	mov	r1, r0
   137b8:	mov	r0, #1
   137bc:	bl	10c94 <__printf_chk@plt>
   137c0:	pop	{r4, pc}
   137c4:	andeq	r6, r2, r4, lsr #2
   137c8:	muleq	r1, r4, lr
   137cc:	andeq	r4, r1, r8, lsr #29
   137d0:	andeq	r4, r1, r0, asr #29
   137d4:	andeq	r4, r1, r0, lsr r9
   137d8:	andeq	r4, r1, r8, asr r9
   137dc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   137e0:	strdeq	r4, [r1], -ip
   137e4:	push	{r4, lr}
   137e8:	bl	13e18 <abort@plt+0x3100>
   137ec:	cmp	r0, #0
   137f0:	popne	{r4, pc}
   137f4:	bl	13d88 <abort@plt+0x3070>
   137f8:	push	{r4, lr}
   137fc:	bl	13e18 <abort@plt+0x3100>
   13800:	cmp	r0, #0
   13804:	popne	{r4, pc}
   13808:	bl	13d88 <abort@plt+0x3070>
   1380c:	push	{r4, lr}
   13810:	bl	137e4 <abort@plt+0x2acc>
   13814:	pop	{r4, pc}
   13818:	push	{r4, r5, r6, lr}
   1381c:	mov	r5, r0
   13820:	mov	r4, r1
   13824:	bl	13e48 <abort@plt+0x3130>
   13828:	cmp	r0, #0
   1382c:	popne	{r4, r5, r6, pc}
   13830:	adds	r4, r4, #0
   13834:	movne	r4, #1
   13838:	cmp	r5, #0
   1383c:	orreq	r4, r4, #1
   13840:	cmp	r4, #0
   13844:	popeq	{r4, r5, r6, pc}
   13848:	bl	13d88 <abort@plt+0x3070>
   1384c:	push	{r4, lr}
   13850:	cmp	r1, #0
   13854:	orreq	r1, r1, #1
   13858:	bl	13e48 <abort@plt+0x3130>
   1385c:	cmp	r0, #0
   13860:	popne	{r4, pc}
   13864:	bl	13d88 <abort@plt+0x3070>
   13868:	push	{r4, r5, r6, lr}
   1386c:	mov	r6, r0
   13870:	mov	r5, r1
   13874:	mov	r4, r2
   13878:	bl	141a8 <abort@plt+0x3490>
   1387c:	cmp	r0, #0
   13880:	popne	{r4, r5, r6, pc}
   13884:	cmp	r6, #0
   13888:	beq	13898 <abort@plt+0x2b80>
   1388c:	cmp	r5, #0
   13890:	cmpne	r4, #0
   13894:	popeq	{r4, r5, r6, pc}
   13898:	bl	13d88 <abort@plt+0x3070>
   1389c:	push	{r4, lr}
   138a0:	bl	13868 <abort@plt+0x2b50>
   138a4:	pop	{r4, pc}
   138a8:	push	{r4, lr}
   138ac:	mov	ip, r1
   138b0:	mov	r3, r2
   138b4:	cmp	r2, #0
   138b8:	cmpne	r1, #0
   138bc:	moveq	r3, #1
   138c0:	moveq	ip, r3
   138c4:	mov	r2, r3
   138c8:	mov	r1, ip
   138cc:	bl	141a8 <abort@plt+0x3490>
   138d0:	cmp	r0, #0
   138d4:	popne	{r4, pc}
   138d8:	bl	13d88 <abort@plt+0x3070>
   138dc:	push	{r4, lr}
   138e0:	mov	r2, r1
   138e4:	mov	r1, r0
   138e8:	mov	r0, #0
   138ec:	bl	13868 <abort@plt+0x2b50>
   138f0:	pop	{r4, pc}
   138f4:	push	{r4, lr}
   138f8:	mov	r2, r1
   138fc:	mov	r1, r0
   13900:	mov	r0, #0
   13904:	bl	138a8 <abort@plt+0x2b90>
   13908:	pop	{r4, pc}
   1390c:	push	{r4, r5, r6, r7, r8, lr}
   13910:	mov	r5, r1
   13914:	mov	r6, r2
   13918:	ldr	r4, [r1]
   1391c:	subs	r7, r0, #0
   13920:	beq	1393c <abort@plt+0x2c24>
   13924:	lsr	r2, r4, #1
   13928:	add	r3, r2, #1
   1392c:	mvn	r3, r3
   13930:	cmp	r4, r3
   13934:	bls	13960 <abort@plt+0x2c48>
   13938:	bl	13d88 <abort@plt+0x3070>
   1393c:	cmp	r4, #0
   13940:	bne	13968 <abort@plt+0x2c50>
   13944:	mov	r1, r2
   13948:	mov	r0, #64	; 0x40
   1394c:	bl	142fc <abort@plt+0x35e4>
   13950:	cmp	r0, #0
   13954:	movne	r4, r0
   13958:	addeq	r4, r0, #1
   1395c:	b	13968 <abort@plt+0x2c50>
   13960:	add	r4, r4, #1
   13964:	add	r4, r4, r2
   13968:	mov	r2, r6
   1396c:	mov	r1, r4
   13970:	mov	r0, r7
   13974:	bl	13868 <abort@plt+0x2b50>
   13978:	str	r4, [r5]
   1397c:	pop	{r4, r5, r6, r7, r8, pc}
   13980:	push	{r4, lr}
   13984:	mov	r2, #1
   13988:	bl	1390c <abort@plt+0x2bf4>
   1398c:	pop	{r4, pc}
   13990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13994:	sub	sp, sp, #12
   13998:	mov	fp, r0
   1399c:	mov	sl, r1
   139a0:	mov	r9, r2
   139a4:	mov	r7, r3
   139a8:	ldr	r6, [sp, #48]	; 0x30
   139ac:	ldr	r5, [r1]
   139b0:	asrs	r4, r5, #1
   139b4:	bmi	13b10 <abort@plt+0x2df8>
   139b8:	cmp	r5, #0
   139bc:	blt	13b24 <abort@plt+0x2e0c>
   139c0:	mvn	r3, #-2147483648	; 0x80000000
   139c4:	sub	r3, r3, r4
   139c8:	cmp	r5, r3
   139cc:	movle	r3, #0
   139d0:	movgt	r3, #1
   139d4:	cmp	r3, #0
   139d8:	addeq	r4, r4, r5
   139dc:	mvnne	r4, #-2147483648	; 0x80000000
   139e0:	mvn	r8, r7
   139e4:	lsr	r8, r8, #31
   139e8:	cmp	r7, r4
   139ec:	movge	r3, #0
   139f0:	andlt	r3, r8, #1
   139f4:	cmp	r3, #0
   139f8:	movne	r4, r7
   139fc:	cmp	r6, #0
   13a00:	blt	13b38 <abort@plt+0x2e20>
   13a04:	cmp	r6, #0
   13a08:	beq	13be4 <abort@plt+0x2ecc>
   13a0c:	cmp	r4, #0
   13a10:	blt	13b94 <abort@plt+0x2e7c>
   13a14:	mov	r1, r6
   13a18:	mvn	r0, #-2147483648	; 0x80000000
   13a1c:	bl	14508 <abort@plt+0x37f0>
   13a20:	cmp	r0, r4
   13a24:	movge	r0, #0
   13a28:	movlt	r0, #1
   13a2c:	cmp	r0, #0
   13a30:	mvnne	r3, #-2147483648	; 0x80000000
   13a34:	strne	r3, [sp, #4]
   13a38:	beq	13bcc <abort@plt+0x2eb4>
   13a3c:	mov	r1, r6
   13a40:	ldr	r0, [sp, #4]
   13a44:	bl	14508 <abort@plt+0x37f0>
   13a48:	mov	r4, r0
   13a4c:	mov	r1, r6
   13a50:	ldr	r0, [sp, #4]
   13a54:	bl	14728 <abort@plt+0x3a10>
   13a58:	ldr	r3, [sp, #4]
   13a5c:	sub	r1, r3, r1
   13a60:	cmp	fp, #0
   13a64:	moveq	r3, #0
   13a68:	streq	r3, [sl]
   13a6c:	sub	r3, r4, r5
   13a70:	cmp	r3, r9
   13a74:	bge	13afc <abort@plt+0x2de4>
   13a78:	cmp	r9, #0
   13a7c:	blt	13bf0 <abort@plt+0x2ed8>
   13a80:	cmp	r5, #0
   13a84:	blt	13c04 <abort@plt+0x2eec>
   13a88:	mvn	r3, #-2147483648	; 0x80000000
   13a8c:	sub	r3, r3, r9
   13a90:	cmp	r5, r3
   13a94:	movle	r3, #0
   13a98:	movgt	r3, #1
   13a9c:	cmp	r3, #0
   13aa0:	bne	13cac <abort@plt+0x2f94>
   13aa4:	add	r5, r5, r9
   13aa8:	mov	r4, r5
   13aac:	cmp	r7, r5
   13ab0:	movge	r7, #0
   13ab4:	andlt	r7, r8, #1
   13ab8:	cmp	r7, #0
   13abc:	bne	13cac <abort@plt+0x2f94>
   13ac0:	cmp	r6, #0
   13ac4:	blt	13c18 <abort@plt+0x2f00>
   13ac8:	cmp	r6, #0
   13acc:	beq	13af8 <abort@plt+0x2de0>
   13ad0:	cmp	r5, #0
   13ad4:	blt	13c74 <abort@plt+0x2f5c>
   13ad8:	mov	r1, r6
   13adc:	mvn	r0, #-2147483648	; 0x80000000
   13ae0:	bl	14508 <abort@plt+0x37f0>
   13ae4:	cmp	r5, r0
   13ae8:	movle	r0, #0
   13aec:	movgt	r0, #1
   13af0:	cmp	r0, #0
   13af4:	bne	13cac <abort@plt+0x2f94>
   13af8:	mul	r1, r5, r6
   13afc:	mov	r0, fp
   13b00:	bl	13818 <abort@plt+0x2b00>
   13b04:	str	r4, [sl]
   13b08:	add	sp, sp, #12
   13b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b10:	rsb	r3, r4, #-2147483648	; 0x80000000
   13b14:	cmp	r5, r3
   13b18:	movge	r3, #0
   13b1c:	movlt	r3, #1
   13b20:	b	139d4 <abort@plt+0x2cbc>
   13b24:	rsb	r3, r5, #-2147483648	; 0x80000000
   13b28:	cmp	r4, r3
   13b2c:	movge	r3, #0
   13b30:	movlt	r3, #1
   13b34:	b	139d4 <abort@plt+0x2cbc>
   13b38:	cmp	r4, #0
   13b3c:	blt	13b64 <abort@plt+0x2e4c>
   13b40:	cmn	r6, #1
   13b44:	beq	13b80 <abort@plt+0x2e68>
   13b48:	mov	r1, r6
   13b4c:	mov	r0, #-2147483648	; 0x80000000
   13b50:	bl	14508 <abort@plt+0x37f0>
   13b54:	cmp	r0, r4
   13b58:	movge	r0, #0
   13b5c:	movlt	r0, #1
   13b60:	b	13a2c <abort@plt+0x2d14>
   13b64:	mov	r1, r6
   13b68:	mvn	r0, #-2147483648	; 0x80000000
   13b6c:	bl	14508 <abort@plt+0x37f0>
   13b70:	cmp	r0, r4
   13b74:	movle	r0, #0
   13b78:	movgt	r0, #1
   13b7c:	b	13a2c <abort@plt+0x2d14>
   13b80:	add	r0, r4, #-2147483648	; 0x80000000
   13b84:	cmp	r0, #0
   13b88:	movle	r0, #0
   13b8c:	movgt	r0, #1
   13b90:	b	13a2c <abort@plt+0x2d14>
   13b94:	cmn	r4, #1
   13b98:	beq	13bb8 <abort@plt+0x2ea0>
   13b9c:	mov	r1, r4
   13ba0:	mov	r0, #-2147483648	; 0x80000000
   13ba4:	bl	14508 <abort@plt+0x37f0>
   13ba8:	cmp	r6, r0
   13bac:	movle	r0, #0
   13bb0:	movgt	r0, #1
   13bb4:	b	13a2c <abort@plt+0x2d14>
   13bb8:	add	r0, r6, #-2147483648	; 0x80000000
   13bbc:	cmp	r0, #0
   13bc0:	movle	r0, #0
   13bc4:	movgt	r0, #1
   13bc8:	b	13a2c <abort@plt+0x2d14>
   13bcc:	mul	r1, r6, r4
   13bd0:	cmp	r1, #63	; 0x3f
   13bd4:	movle	r3, #64	; 0x40
   13bd8:	strle	r3, [sp, #4]
   13bdc:	bgt	13a60 <abort@plt+0x2d48>
   13be0:	b	13a3c <abort@plt+0x2d24>
   13be4:	mov	r3, #64	; 0x40
   13be8:	str	r3, [sp, #4]
   13bec:	b	13a3c <abort@plt+0x2d24>
   13bf0:	rsb	r3, r9, #-2147483648	; 0x80000000
   13bf4:	cmp	r5, r3
   13bf8:	movge	r3, #0
   13bfc:	movlt	r3, #1
   13c00:	b	13a9c <abort@plt+0x2d84>
   13c04:	rsb	r3, r5, #-2147483648	; 0x80000000
   13c08:	cmp	r9, r3
   13c0c:	movge	r3, #0
   13c10:	movlt	r3, #1
   13c14:	b	13a9c <abort@plt+0x2d84>
   13c18:	cmp	r5, #0
   13c1c:	blt	13c44 <abort@plt+0x2f2c>
   13c20:	cmn	r6, #1
   13c24:	beq	13c60 <abort@plt+0x2f48>
   13c28:	mov	r1, r6
   13c2c:	mov	r0, #-2147483648	; 0x80000000
   13c30:	bl	14508 <abort@plt+0x37f0>
   13c34:	cmp	r5, r0
   13c38:	movle	r0, #0
   13c3c:	movgt	r0, #1
   13c40:	b	13af0 <abort@plt+0x2dd8>
   13c44:	mov	r1, r6
   13c48:	mvn	r0, #-2147483648	; 0x80000000
   13c4c:	bl	14508 <abort@plt+0x37f0>
   13c50:	cmp	r5, r0
   13c54:	movge	r0, #0
   13c58:	movlt	r0, #1
   13c5c:	b	13af0 <abort@plt+0x2dd8>
   13c60:	add	r0, r5, #-2147483648	; 0x80000000
   13c64:	cmp	r0, #0
   13c68:	movle	r0, #0
   13c6c:	movgt	r0, #1
   13c70:	b	13af0 <abort@plt+0x2dd8>
   13c74:	cmn	r5, #1
   13c78:	beq	13c98 <abort@plt+0x2f80>
   13c7c:	mov	r1, r5
   13c80:	mov	r0, #-2147483648	; 0x80000000
   13c84:	bl	14508 <abort@plt+0x37f0>
   13c88:	cmp	r6, r0
   13c8c:	movle	r0, #0
   13c90:	movgt	r0, #1
   13c94:	b	13af0 <abort@plt+0x2dd8>
   13c98:	add	r0, r6, #-2147483648	; 0x80000000
   13c9c:	cmp	r0, #0
   13ca0:	movle	r0, #0
   13ca4:	movgt	r0, #1
   13ca8:	b	13af0 <abort@plt+0x2dd8>
   13cac:	bl	13d88 <abort@plt+0x3070>
   13cb0:	push	{r4, lr}
   13cb4:	bl	13dc8 <abort@plt+0x30b0>
   13cb8:	cmp	r0, #0
   13cbc:	popne	{r4, pc}
   13cc0:	bl	13d88 <abort@plt+0x3070>
   13cc4:	push	{r4, lr}
   13cc8:	mov	r1, #1
   13ccc:	bl	13cb0 <abort@plt+0x2f98>
   13cd0:	pop	{r4, pc}
   13cd4:	push	{r4, lr}
   13cd8:	bl	13dc8 <abort@plt+0x30b0>
   13cdc:	cmp	r0, #0
   13ce0:	popne	{r4, pc}
   13ce4:	bl	13d88 <abort@plt+0x3070>
   13ce8:	push	{r4, lr}
   13cec:	mov	r1, #1
   13cf0:	bl	13cd4 <abort@plt+0x2fbc>
   13cf4:	pop	{r4, pc}
   13cf8:	push	{r4, r5, r6, lr}
   13cfc:	mov	r5, r0
   13d00:	mov	r4, r1
   13d04:	mov	r0, r1
   13d08:	bl	137e4 <abort@plt+0x2acc>
   13d0c:	mov	r2, r4
   13d10:	mov	r1, r5
   13d14:	bl	10b68 <memcpy@plt>
   13d18:	pop	{r4, r5, r6, pc}
   13d1c:	push	{r4, r5, r6, lr}
   13d20:	mov	r5, r0
   13d24:	mov	r4, r1
   13d28:	mov	r0, r1
   13d2c:	bl	137f8 <abort@plt+0x2ae0>
   13d30:	mov	r2, r4
   13d34:	mov	r1, r5
   13d38:	bl	10b68 <memcpy@plt>
   13d3c:	pop	{r4, r5, r6, pc}
   13d40:	push	{r4, r5, r6, lr}
   13d44:	mov	r5, r0
   13d48:	mov	r4, r1
   13d4c:	add	r0, r1, #1
   13d50:	bl	137f8 <abort@plt+0x2ae0>
   13d54:	mov	r2, #0
   13d58:	strb	r2, [r0, r4]
   13d5c:	mov	r2, r4
   13d60:	mov	r1, r5
   13d64:	bl	10b68 <memcpy@plt>
   13d68:	pop	{r4, r5, r6, pc}
   13d6c:	push	{r4, lr}
   13d70:	mov	r4, r0
   13d74:	bl	10c64 <strlen@plt>
   13d78:	add	r1, r0, #1
   13d7c:	mov	r0, r4
   13d80:	bl	13cf8 <abort@plt+0x2fe0>
   13d84:	pop	{r4, pc}
   13d88:	push	{r4, lr}
   13d8c:	ldr	r3, [pc, #40]	; 13dbc <abort@plt+0x30a4>
   13d90:	ldr	r4, [r3]
   13d94:	mov	r2, #5
   13d98:	ldr	r1, [pc, #32]	; 13dc0 <abort@plt+0x30a8>
   13d9c:	mov	r0, #0
   13da0:	bl	10b98 <dcgettext@plt>
   13da4:	mov	r3, r0
   13da8:	ldr	r2, [pc, #20]	; 13dc4 <abort@plt+0x30ac>
   13dac:	mov	r1, #0
   13db0:	mov	r0, r4
   13db4:	bl	10c04 <error@plt>
   13db8:	bl	10d18 <abort@plt>
   13dbc:	andeq	r6, r2, ip, asr #1
   13dc0:	andeq	r4, r1, ip, asr #30
   13dc4:	andeq	r4, r1, ip, asr #21
   13dc8:	push	{r4, lr}
   13dcc:	mov	r2, r0
   13dd0:	mov	r3, r1
   13dd4:	cmp	r1, #0
   13dd8:	cmpne	r0, #0
   13ddc:	moveq	r3, #1
   13de0:	moveq	r2, r3
   13de4:	umull	r0, r1, r2, r3
   13de8:	cmp	r0, #0
   13dec:	cmpge	r1, #0
   13df0:	bne	13e04 <abort@plt+0x30ec>
   13df4:	mov	r1, r3
   13df8:	mov	r0, r2
   13dfc:	bl	10b14 <calloc@plt>
   13e00:	pop	{r4, pc}
   13e04:	bl	10c70 <__errno_location@plt>
   13e08:	mov	r3, #12
   13e0c:	str	r3, [r0]
   13e10:	mov	r0, #0
   13e14:	pop	{r4, pc}
   13e18:	push	{r4, lr}
   13e1c:	cmp	r0, #0
   13e20:	moveq	r0, #1
   13e24:	cmp	r0, #0
   13e28:	blt	13e34 <abort@plt+0x311c>
   13e2c:	bl	10c10 <malloc@plt>
   13e30:	pop	{r4, pc}
   13e34:	bl	10c70 <__errno_location@plt>
   13e38:	mov	r3, #12
   13e3c:	str	r3, [r0]
   13e40:	mov	r0, #0
   13e44:	pop	{r4, pc}
   13e48:	push	{r4, lr}
   13e4c:	cmp	r0, #0
   13e50:	beq	13e6c <abort@plt+0x3154>
   13e54:	cmp	r1, #0
   13e58:	beq	13e78 <abort@plt+0x3160>
   13e5c:	cmp	r1, #0
   13e60:	blt	13e84 <abort@plt+0x316c>
   13e64:	bl	10ba4 <realloc@plt>
   13e68:	pop	{r4, pc}
   13e6c:	mov	r0, r1
   13e70:	bl	13e18 <abort@plt+0x3100>
   13e74:	pop	{r4, pc}
   13e78:	bl	1401c <abort@plt+0x3304>
   13e7c:	mov	r0, #0
   13e80:	pop	{r4, pc}
   13e84:	bl	10c70 <__errno_location@plt>
   13e88:	mov	r3, #12
   13e8c:	str	r3, [r0]
   13e90:	mov	r0, #0
   13e94:	pop	{r4, pc}
   13e98:	push	{r4, r5, r6, lr}
   13e9c:	mov	r5, r0
   13ea0:	bl	10bec <__fpending@plt>
   13ea4:	mov	r6, r0
   13ea8:	ldr	r4, [r5]
   13eac:	and	r4, r4, #32
   13eb0:	mov	r0, r5
   13eb4:	bl	13f10 <abort@plt+0x31f8>
   13eb8:	cmp	r4, #0
   13ebc:	bne	13ee4 <abort@plt+0x31cc>
   13ec0:	cmp	r0, #0
   13ec4:	popeq	{r4, r5, r6, pc}
   13ec8:	cmp	r6, #0
   13ecc:	bne	13f00 <abort@plt+0x31e8>
   13ed0:	bl	10c70 <__errno_location@plt>
   13ed4:	ldr	r0, [r0]
   13ed8:	subs	r0, r0, #9
   13edc:	mvnne	r0, #0
   13ee0:	pop	{r4, r5, r6, pc}
   13ee4:	cmp	r0, #0
   13ee8:	bne	13f08 <abort@plt+0x31f0>
   13eec:	bl	10c70 <__errno_location@plt>
   13ef0:	mov	r3, #0
   13ef4:	str	r3, [r0]
   13ef8:	mvn	r0, #0
   13efc:	pop	{r4, r5, r6, pc}
   13f00:	mvn	r0, #0
   13f04:	pop	{r4, r5, r6, pc}
   13f08:	mvn	r0, #0
   13f0c:	pop	{r4, r5, r6, pc}
   13f10:	push	{r4, r5, r6, lr}
   13f14:	sub	sp, sp, #8
   13f18:	mov	r4, r0
   13f1c:	bl	10cac <fileno@plt>
   13f20:	cmp	r0, #0
   13f24:	blt	13f9c <abort@plt+0x3284>
   13f28:	mov	r0, r4
   13f2c:	bl	10c28 <__freading@plt>
   13f30:	cmp	r0, #0
   13f34:	beq	13f68 <abort@plt+0x3250>
   13f38:	mov	r0, r4
   13f3c:	bl	10cac <fileno@plt>
   13f40:	mov	r3, #1
   13f44:	str	r3, [sp]
   13f48:	mov	r2, #0
   13f4c:	mov	r3, #0
   13f50:	bl	10bd4 <lseek64@plt>
   13f54:	mvn	r2, #0
   13f58:	mvn	r3, #0
   13f5c:	cmp	r1, r3
   13f60:	cmpeq	r0, r2
   13f64:	beq	13fa8 <abort@plt+0x3290>
   13f68:	mov	r0, r4
   13f6c:	bl	13fb8 <abort@plt+0x32a0>
   13f70:	cmp	r0, #0
   13f74:	beq	13fa8 <abort@plt+0x3290>
   13f78:	bl	10c70 <__errno_location@plt>
   13f7c:	mov	r5, r0
   13f80:	ldr	r6, [r0]
   13f84:	mov	r0, r4
   13f88:	bl	10cc4 <fclose@plt>
   13f8c:	cmp	r6, #0
   13f90:	strne	r6, [r5]
   13f94:	mvnne	r0, #0
   13f98:	b	13fb0 <abort@plt+0x3298>
   13f9c:	mov	r0, r4
   13fa0:	bl	10cc4 <fclose@plt>
   13fa4:	b	13fb0 <abort@plt+0x3298>
   13fa8:	mov	r0, r4
   13fac:	bl	10cc4 <fclose@plt>
   13fb0:	add	sp, sp, #8
   13fb4:	pop	{r4, r5, r6, pc}
   13fb8:	push	{r4, lr}
   13fbc:	sub	sp, sp, #8
   13fc0:	subs	r4, r0, #0
   13fc4:	beq	13fd8 <abort@plt+0x32c0>
   13fc8:	mov	r0, r4
   13fcc:	bl	10c28 <__freading@plt>
   13fd0:	cmp	r0, #0
   13fd4:	bne	13fe8 <abort@plt+0x32d0>
   13fd8:	mov	r0, r4
   13fdc:	bl	10b44 <fflush@plt>
   13fe0:	add	sp, sp, #8
   13fe4:	pop	{r4, pc}
   13fe8:	ldr	r3, [r4]
   13fec:	tst	r3, #256	; 0x100
   13ff0:	bne	14000 <abort@plt+0x32e8>
   13ff4:	mov	r0, r4
   13ff8:	bl	10b44 <fflush@plt>
   13ffc:	b	13fe0 <abort@plt+0x32c8>
   14000:	mov	r3, #1
   14004:	str	r3, [sp]
   14008:	mov	r2, #0
   1400c:	mov	r3, #0
   14010:	mov	r0, r4
   14014:	bl	14074 <abort@plt+0x335c>
   14018:	b	13ff4 <abort@plt+0x32dc>
   1401c:	push	{r4, r5, lr}
   14020:	sub	sp, sp, #12
   14024:	mov	r5, r0
   14028:	bl	10c70 <__errno_location@plt>
   1402c:	mov	r4, r0
   14030:	ldr	r3, [r0]
   14034:	str	r3, [sp]
   14038:	str	r3, [sp, #4]
   1403c:	mov	r3, #0
   14040:	str	r3, [r0]
   14044:	mov	r0, r5
   14048:	bl	10b50 <free@plt>
   1404c:	ldr	r3, [r4]
   14050:	cmp	r3, #0
   14054:	moveq	r3, #4
   14058:	movne	r3, #0
   1405c:	add	r2, sp, #8
   14060:	add	r3, r2, r3
   14064:	ldr	r3, [r3, #-8]
   14068:	str	r3, [r4]
   1406c:	add	sp, sp, #12
   14070:	pop	{r4, r5, pc}
   14074:	push	{r4, r5, r6, r7, lr}
   14078:	sub	sp, sp, #12
   1407c:	mov	r4, r0
   14080:	mov	r6, r2
   14084:	mov	r7, r3
   14088:	ldr	r5, [sp, #32]
   1408c:	ldr	r2, [r0, #8]
   14090:	ldr	r3, [r0, #4]
   14094:	cmp	r2, r3
   14098:	beq	140b8 <abort@plt+0x33a0>
   1409c:	str	r5, [sp]
   140a0:	mov	r2, r6
   140a4:	mov	r3, r7
   140a8:	mov	r0, r4
   140ac:	bl	10cd0 <fseeko64@plt>
   140b0:	add	sp, sp, #12
   140b4:	pop	{r4, r5, r6, r7, pc}
   140b8:	ldr	r2, [r0, #20]
   140bc:	ldr	r3, [r0, #16]
   140c0:	cmp	r2, r3
   140c4:	bne	1409c <abort@plt+0x3384>
   140c8:	ldr	r3, [r0, #36]	; 0x24
   140cc:	cmp	r3, #0
   140d0:	bne	1409c <abort@plt+0x3384>
   140d4:	bl	10cac <fileno@plt>
   140d8:	str	r5, [sp]
   140dc:	mov	r2, r6
   140e0:	mov	r3, r7
   140e4:	bl	10bd4 <lseek64@plt>
   140e8:	mvn	r2, #0
   140ec:	mvn	r3, #0
   140f0:	cmp	r1, r3
   140f4:	cmpeq	r0, r2
   140f8:	beq	14114 <abort@plt+0x33fc>
   140fc:	ldr	r3, [r4]
   14100:	bic	r3, r3, #16
   14104:	str	r3, [r4]
   14108:	strd	r0, [r4, #80]	; 0x50
   1410c:	mov	r0, #0
   14110:	b	140b0 <abort@plt+0x3398>
   14114:	mvn	r0, #0
   14118:	b	140b0 <abort@plt+0x3398>
   1411c:	push	{r4, lr}
   14120:	mov	r0, #14
   14124:	bl	10cf4 <nl_langinfo@plt>
   14128:	cmp	r0, #0
   1412c:	beq	14144 <abort@plt+0x342c>
   14130:	ldrb	r2, [r0]
   14134:	ldr	r3, [pc, #16]	; 1414c <abort@plt+0x3434>
   14138:	cmp	r2, #0
   1413c:	moveq	r0, r3
   14140:	pop	{r4, pc}
   14144:	ldr	r0, [pc]	; 1414c <abort@plt+0x3434>
   14148:	pop	{r4, pc}
   1414c:	andeq	r4, r1, r0, ror #30
   14150:	push	{r4, r5, r6, r7, lr}
   14154:	sub	sp, sp, #12
   14158:	mov	r7, r1
   1415c:	mov	r5, r2
   14160:	subs	r6, r0, #0
   14164:	addeq	r6, sp, #4
   14168:	mov	r0, r6
   1416c:	bl	10bf8 <mbrtowc@plt>
   14170:	mov	r4, r0
   14174:	cmp	r5, #0
   14178:	cmnne	r0, #3
   1417c:	bhi	1418c <abort@plt+0x3474>
   14180:	mov	r0, r4
   14184:	add	sp, sp, #12
   14188:	pop	{r4, r5, r6, r7, pc}
   1418c:	mov	r0, #0
   14190:	bl	141f4 <abort@plt+0x34dc>
   14194:	cmp	r0, #0
   14198:	ldrbeq	r3, [r7]
   1419c:	streq	r3, [r6]
   141a0:	moveq	r4, #1
   141a4:	b	14180 <abort@plt+0x3468>
   141a8:	push	{r4, r5, r6, lr}
   141ac:	mov	r6, r0
   141b0:	mov	r5, r1
   141b4:	subs	r4, r2, #0
   141b8:	beq	141e4 <abort@plt+0x34cc>
   141bc:	mov	r1, r4
   141c0:	mvn	r0, #0
   141c4:	bl	142fc <abort@plt+0x35e4>
   141c8:	cmp	r0, r5
   141cc:	bcs	141e4 <abort@plt+0x34cc>
   141d0:	bl	10c70 <__errno_location@plt>
   141d4:	mov	r3, #12
   141d8:	str	r3, [r0]
   141dc:	mov	r0, #0
   141e0:	pop	{r4, r5, r6, pc}
   141e4:	mul	r1, r5, r4
   141e8:	mov	r0, r6
   141ec:	bl	13e48 <abort@plt+0x3130>
   141f0:	pop	{r4, r5, r6, pc}
   141f4:	push	{lr}		; (str lr, [sp, #-4]!)
   141f8:	sub	sp, sp, #268	; 0x10c
   141fc:	ldr	r2, [pc, #68]	; 14248 <abort@plt+0x3530>
   14200:	add	r1, sp, #4
   14204:	bl	14254 <abort@plt+0x353c>
   14208:	cmp	r0, #0
   1420c:	movne	r0, #0
   14210:	bne	14240 <abort@plt+0x3528>
   14214:	ldr	r1, [pc, #48]	; 1424c <abort@plt+0x3534>
   14218:	add	r0, sp, #4
   1421c:	bl	10b38 <strcmp@plt>
   14220:	cmp	r0, #0
   14224:	moveq	r0, #0
   14228:	beq	14240 <abort@plt+0x3528>
   1422c:	ldr	r1, [pc, #28]	; 14250 <abort@plt+0x3538>
   14230:	add	r0, sp, #4
   14234:	bl	10b38 <strcmp@plt>
   14238:	adds	r0, r0, #0
   1423c:	movne	r0, #1
   14240:	add	sp, sp, #268	; 0x10c
   14244:	pop	{pc}		; (ldr pc, [sp], #4)
   14248:	andeq	r0, r0, r1, lsl #2
   1424c:	andeq	r4, r1, r8, ror #30
   14250:	andeq	r4, r1, ip, ror #30
   14254:	push	{r4, r5, r6, lr}
   14258:	mov	r6, r1
   1425c:	mov	r4, r2
   14260:	mov	r1, #0
   14264:	bl	10cdc <setlocale@plt>
   14268:	subs	r5, r0, #0
   1426c:	beq	14290 <abort@plt+0x3578>
   14270:	mov	r0, r5
   14274:	bl	10c64 <strlen@plt>
   14278:	cmp	r4, r0
   1427c:	bhi	142a8 <abort@plt+0x3590>
   14280:	cmp	r4, #0
   14284:	bne	142c0 <abort@plt+0x35a8>
   14288:	mov	r0, #34	; 0x22
   1428c:	pop	{r4, r5, r6, pc}
   14290:	cmp	r4, #0
   14294:	beq	142e4 <abort@plt+0x35cc>
   14298:	mov	r3, #0
   1429c:	strb	r3, [r6]
   142a0:	mov	r0, #22
   142a4:	pop	{r4, r5, r6, pc}
   142a8:	add	r2, r0, #1
   142ac:	mov	r1, r5
   142b0:	mov	r0, r6
   142b4:	bl	10b68 <memcpy@plt>
   142b8:	mov	r0, #0
   142bc:	pop	{r4, r5, r6, pc}
   142c0:	sub	r4, r4, #1
   142c4:	mov	r2, r4
   142c8:	mov	r1, r5
   142cc:	mov	r0, r6
   142d0:	bl	10b68 <memcpy@plt>
   142d4:	mov	r3, #0
   142d8:	strb	r3, [r6, r4]
   142dc:	mov	r0, #34	; 0x22
   142e0:	pop	{r4, r5, r6, pc}
   142e4:	mov	r0, #22
   142e8:	pop	{r4, r5, r6, pc}
   142ec:	push	{r4, lr}
   142f0:	mov	r1, #0
   142f4:	bl	10cdc <setlocale@plt>
   142f8:	pop	{r4, pc}
   142fc:	subs	r2, r1, #1
   14300:	bxeq	lr
   14304:	bcc	144dc <abort@plt+0x37c4>
   14308:	cmp	r0, r1
   1430c:	bls	144c0 <abort@plt+0x37a8>
   14310:	tst	r1, r2
   14314:	beq	144cc <abort@plt+0x37b4>
   14318:	clz	r3, r0
   1431c:	clz	r2, r1
   14320:	sub	r3, r2, r3
   14324:	rsbs	r3, r3, #31
   14328:	addne	r3, r3, r3, lsl #1
   1432c:	mov	r2, #0
   14330:	addne	pc, pc, r3, lsl #2
   14334:	nop			; (mov r0, r0)
   14338:	cmp	r0, r1, lsl #31
   1433c:	adc	r2, r2, r2
   14340:	subcs	r0, r0, r1, lsl #31
   14344:	cmp	r0, r1, lsl #30
   14348:	adc	r2, r2, r2
   1434c:	subcs	r0, r0, r1, lsl #30
   14350:	cmp	r0, r1, lsl #29
   14354:	adc	r2, r2, r2
   14358:	subcs	r0, r0, r1, lsl #29
   1435c:	cmp	r0, r1, lsl #28
   14360:	adc	r2, r2, r2
   14364:	subcs	r0, r0, r1, lsl #28
   14368:	cmp	r0, r1, lsl #27
   1436c:	adc	r2, r2, r2
   14370:	subcs	r0, r0, r1, lsl #27
   14374:	cmp	r0, r1, lsl #26
   14378:	adc	r2, r2, r2
   1437c:	subcs	r0, r0, r1, lsl #26
   14380:	cmp	r0, r1, lsl #25
   14384:	adc	r2, r2, r2
   14388:	subcs	r0, r0, r1, lsl #25
   1438c:	cmp	r0, r1, lsl #24
   14390:	adc	r2, r2, r2
   14394:	subcs	r0, r0, r1, lsl #24
   14398:	cmp	r0, r1, lsl #23
   1439c:	adc	r2, r2, r2
   143a0:	subcs	r0, r0, r1, lsl #23
   143a4:	cmp	r0, r1, lsl #22
   143a8:	adc	r2, r2, r2
   143ac:	subcs	r0, r0, r1, lsl #22
   143b0:	cmp	r0, r1, lsl #21
   143b4:	adc	r2, r2, r2
   143b8:	subcs	r0, r0, r1, lsl #21
   143bc:	cmp	r0, r1, lsl #20
   143c0:	adc	r2, r2, r2
   143c4:	subcs	r0, r0, r1, lsl #20
   143c8:	cmp	r0, r1, lsl #19
   143cc:	adc	r2, r2, r2
   143d0:	subcs	r0, r0, r1, lsl #19
   143d4:	cmp	r0, r1, lsl #18
   143d8:	adc	r2, r2, r2
   143dc:	subcs	r0, r0, r1, lsl #18
   143e0:	cmp	r0, r1, lsl #17
   143e4:	adc	r2, r2, r2
   143e8:	subcs	r0, r0, r1, lsl #17
   143ec:	cmp	r0, r1, lsl #16
   143f0:	adc	r2, r2, r2
   143f4:	subcs	r0, r0, r1, lsl #16
   143f8:	cmp	r0, r1, lsl #15
   143fc:	adc	r2, r2, r2
   14400:	subcs	r0, r0, r1, lsl #15
   14404:	cmp	r0, r1, lsl #14
   14408:	adc	r2, r2, r2
   1440c:	subcs	r0, r0, r1, lsl #14
   14410:	cmp	r0, r1, lsl #13
   14414:	adc	r2, r2, r2
   14418:	subcs	r0, r0, r1, lsl #13
   1441c:	cmp	r0, r1, lsl #12
   14420:	adc	r2, r2, r2
   14424:	subcs	r0, r0, r1, lsl #12
   14428:	cmp	r0, r1, lsl #11
   1442c:	adc	r2, r2, r2
   14430:	subcs	r0, r0, r1, lsl #11
   14434:	cmp	r0, r1, lsl #10
   14438:	adc	r2, r2, r2
   1443c:	subcs	r0, r0, r1, lsl #10
   14440:	cmp	r0, r1, lsl #9
   14444:	adc	r2, r2, r2
   14448:	subcs	r0, r0, r1, lsl #9
   1444c:	cmp	r0, r1, lsl #8
   14450:	adc	r2, r2, r2
   14454:	subcs	r0, r0, r1, lsl #8
   14458:	cmp	r0, r1, lsl #7
   1445c:	adc	r2, r2, r2
   14460:	subcs	r0, r0, r1, lsl #7
   14464:	cmp	r0, r1, lsl #6
   14468:	adc	r2, r2, r2
   1446c:	subcs	r0, r0, r1, lsl #6
   14470:	cmp	r0, r1, lsl #5
   14474:	adc	r2, r2, r2
   14478:	subcs	r0, r0, r1, lsl #5
   1447c:	cmp	r0, r1, lsl #4
   14480:	adc	r2, r2, r2
   14484:	subcs	r0, r0, r1, lsl #4
   14488:	cmp	r0, r1, lsl #3
   1448c:	adc	r2, r2, r2
   14490:	subcs	r0, r0, r1, lsl #3
   14494:	cmp	r0, r1, lsl #2
   14498:	adc	r2, r2, r2
   1449c:	subcs	r0, r0, r1, lsl #2
   144a0:	cmp	r0, r1, lsl #1
   144a4:	adc	r2, r2, r2
   144a8:	subcs	r0, r0, r1, lsl #1
   144ac:	cmp	r0, r1
   144b0:	adc	r2, r2, r2
   144b4:	subcs	r0, r0, r1
   144b8:	mov	r0, r2
   144bc:	bx	lr
   144c0:	moveq	r0, #1
   144c4:	movne	r0, #0
   144c8:	bx	lr
   144cc:	clz	r2, r1
   144d0:	rsb	r2, r2, #31
   144d4:	lsr	r0, r0, r2
   144d8:	bx	lr
   144dc:	cmp	r0, #0
   144e0:	mvnne	r0, #0
   144e4:	b	14748 <abort@plt+0x3a30>
   144e8:	cmp	r1, #0
   144ec:	beq	144dc <abort@plt+0x37c4>
   144f0:	push	{r0, r1, lr}
   144f4:	bl	142fc <abort@plt+0x35e4>
   144f8:	pop	{r1, r2, lr}
   144fc:	mul	r3, r2, r0
   14500:	sub	r1, r1, r3
   14504:	bx	lr
   14508:	cmp	r1, #0
   1450c:	beq	14718 <abort@plt+0x3a00>
   14510:	eor	ip, r0, r1
   14514:	rsbmi	r1, r1, #0
   14518:	subs	r2, r1, #1
   1451c:	beq	146e4 <abort@plt+0x39cc>
   14520:	movs	r3, r0
   14524:	rsbmi	r3, r0, #0
   14528:	cmp	r3, r1
   1452c:	bls	146f0 <abort@plt+0x39d8>
   14530:	tst	r1, r2
   14534:	beq	14700 <abort@plt+0x39e8>
   14538:	clz	r2, r3
   1453c:	clz	r0, r1
   14540:	sub	r2, r0, r2
   14544:	rsbs	r2, r2, #31
   14548:	addne	r2, r2, r2, lsl #1
   1454c:	mov	r0, #0
   14550:	addne	pc, pc, r2, lsl #2
   14554:	nop			; (mov r0, r0)
   14558:	cmp	r3, r1, lsl #31
   1455c:	adc	r0, r0, r0
   14560:	subcs	r3, r3, r1, lsl #31
   14564:	cmp	r3, r1, lsl #30
   14568:	adc	r0, r0, r0
   1456c:	subcs	r3, r3, r1, lsl #30
   14570:	cmp	r3, r1, lsl #29
   14574:	adc	r0, r0, r0
   14578:	subcs	r3, r3, r1, lsl #29
   1457c:	cmp	r3, r1, lsl #28
   14580:	adc	r0, r0, r0
   14584:	subcs	r3, r3, r1, lsl #28
   14588:	cmp	r3, r1, lsl #27
   1458c:	adc	r0, r0, r0
   14590:	subcs	r3, r3, r1, lsl #27
   14594:	cmp	r3, r1, lsl #26
   14598:	adc	r0, r0, r0
   1459c:	subcs	r3, r3, r1, lsl #26
   145a0:	cmp	r3, r1, lsl #25
   145a4:	adc	r0, r0, r0
   145a8:	subcs	r3, r3, r1, lsl #25
   145ac:	cmp	r3, r1, lsl #24
   145b0:	adc	r0, r0, r0
   145b4:	subcs	r3, r3, r1, lsl #24
   145b8:	cmp	r3, r1, lsl #23
   145bc:	adc	r0, r0, r0
   145c0:	subcs	r3, r3, r1, lsl #23
   145c4:	cmp	r3, r1, lsl #22
   145c8:	adc	r0, r0, r0
   145cc:	subcs	r3, r3, r1, lsl #22
   145d0:	cmp	r3, r1, lsl #21
   145d4:	adc	r0, r0, r0
   145d8:	subcs	r3, r3, r1, lsl #21
   145dc:	cmp	r3, r1, lsl #20
   145e0:	adc	r0, r0, r0
   145e4:	subcs	r3, r3, r1, lsl #20
   145e8:	cmp	r3, r1, lsl #19
   145ec:	adc	r0, r0, r0
   145f0:	subcs	r3, r3, r1, lsl #19
   145f4:	cmp	r3, r1, lsl #18
   145f8:	adc	r0, r0, r0
   145fc:	subcs	r3, r3, r1, lsl #18
   14600:	cmp	r3, r1, lsl #17
   14604:	adc	r0, r0, r0
   14608:	subcs	r3, r3, r1, lsl #17
   1460c:	cmp	r3, r1, lsl #16
   14610:	adc	r0, r0, r0
   14614:	subcs	r3, r3, r1, lsl #16
   14618:	cmp	r3, r1, lsl #15
   1461c:	adc	r0, r0, r0
   14620:	subcs	r3, r3, r1, lsl #15
   14624:	cmp	r3, r1, lsl #14
   14628:	adc	r0, r0, r0
   1462c:	subcs	r3, r3, r1, lsl #14
   14630:	cmp	r3, r1, lsl #13
   14634:	adc	r0, r0, r0
   14638:	subcs	r3, r3, r1, lsl #13
   1463c:	cmp	r3, r1, lsl #12
   14640:	adc	r0, r0, r0
   14644:	subcs	r3, r3, r1, lsl #12
   14648:	cmp	r3, r1, lsl #11
   1464c:	adc	r0, r0, r0
   14650:	subcs	r3, r3, r1, lsl #11
   14654:	cmp	r3, r1, lsl #10
   14658:	adc	r0, r0, r0
   1465c:	subcs	r3, r3, r1, lsl #10
   14660:	cmp	r3, r1, lsl #9
   14664:	adc	r0, r0, r0
   14668:	subcs	r3, r3, r1, lsl #9
   1466c:	cmp	r3, r1, lsl #8
   14670:	adc	r0, r0, r0
   14674:	subcs	r3, r3, r1, lsl #8
   14678:	cmp	r3, r1, lsl #7
   1467c:	adc	r0, r0, r0
   14680:	subcs	r3, r3, r1, lsl #7
   14684:	cmp	r3, r1, lsl #6
   14688:	adc	r0, r0, r0
   1468c:	subcs	r3, r3, r1, lsl #6
   14690:	cmp	r3, r1, lsl #5
   14694:	adc	r0, r0, r0
   14698:	subcs	r3, r3, r1, lsl #5
   1469c:	cmp	r3, r1, lsl #4
   146a0:	adc	r0, r0, r0
   146a4:	subcs	r3, r3, r1, lsl #4
   146a8:	cmp	r3, r1, lsl #3
   146ac:	adc	r0, r0, r0
   146b0:	subcs	r3, r3, r1, lsl #3
   146b4:	cmp	r3, r1, lsl #2
   146b8:	adc	r0, r0, r0
   146bc:	subcs	r3, r3, r1, lsl #2
   146c0:	cmp	r3, r1, lsl #1
   146c4:	adc	r0, r0, r0
   146c8:	subcs	r3, r3, r1, lsl #1
   146cc:	cmp	r3, r1
   146d0:	adc	r0, r0, r0
   146d4:	subcs	r3, r3, r1
   146d8:	cmp	ip, #0
   146dc:	rsbmi	r0, r0, #0
   146e0:	bx	lr
   146e4:	teq	ip, r0
   146e8:	rsbmi	r0, r0, #0
   146ec:	bx	lr
   146f0:	movcc	r0, #0
   146f4:	asreq	r0, ip, #31
   146f8:	orreq	r0, r0, #1
   146fc:	bx	lr
   14700:	clz	r2, r1
   14704:	rsb	r2, r2, #31
   14708:	cmp	ip, #0
   1470c:	lsr	r0, r3, r2
   14710:	rsbmi	r0, r0, #0
   14714:	bx	lr
   14718:	cmp	r0, #0
   1471c:	mvngt	r0, #-2147483648	; 0x80000000
   14720:	movlt	r0, #-2147483648	; 0x80000000
   14724:	b	14748 <abort@plt+0x3a30>
   14728:	cmp	r1, #0
   1472c:	beq	14718 <abort@plt+0x3a00>
   14730:	push	{r0, r1, lr}
   14734:	bl	14510 <abort@plt+0x37f8>
   14738:	pop	{r1, r2, lr}
   1473c:	mul	r3, r2, r0
   14740:	sub	r1, r1, r3
   14744:	bx	lr
   14748:	push	{r1, lr}
   1474c:	mov	r0, #8
   14750:	bl	10b2c <raise@plt>
   14754:	pop	{r1, pc}
   14758:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1475c:	mov	r7, r0
   14760:	ldr	r6, [pc, #72]	; 147b0 <abort@plt+0x3a98>
   14764:	ldr	r5, [pc, #72]	; 147b4 <abort@plt+0x3a9c>
   14768:	add	r6, pc, r6
   1476c:	add	r5, pc, r5
   14770:	sub	r6, r6, r5
   14774:	mov	r8, r1
   14778:	mov	r9, r2
   1477c:	bl	10af4 <calloc@plt-0x20>
   14780:	asrs	r6, r6, #2
   14784:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14788:	mov	r4, #0
   1478c:	add	r4, r4, #1
   14790:	ldr	r3, [r5], #4
   14794:	mov	r2, r9
   14798:	mov	r1, r8
   1479c:	mov	r0, r7
   147a0:	blx	r3
   147a4:	cmp	r6, r4
   147a8:	bne	1478c <abort@plt+0x3a74>
   147ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147b0:	andeq	r1, r1, r0, lsr #15
   147b4:	muleq	r1, r8, r7
   147b8:	bx	lr
   147bc:	ldr	r3, [pc, #12]	; 147d0 <abort@plt+0x3ab8>
   147c0:	mov	r1, #0
   147c4:	add	r3, pc, r3
   147c8:	ldr	r2, [r3]
   147cc:	b	10c7c <__cxa_atexit@plt>
   147d0:	strdeq	r1, [r1], -r8

Disassembly of section .fini:

000147d4 <.fini>:
   147d4:	push	{r3, lr}
   147d8:	pop	{r3, pc}
