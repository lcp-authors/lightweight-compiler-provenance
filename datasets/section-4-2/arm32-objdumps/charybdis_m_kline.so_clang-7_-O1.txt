
../repos/charybdis/modules/.libs/m_kline.so:     file format elf32-littlearm


Disassembly of section .init:

00000d44 <_init>:
 d44:	push	{r3, lr}
 d48:	bl	f68 <call_weak_fn>
 d4c:	pop	{r3, pc}

Disassembly of section .plt:

00000d50 <.plt>:
 d50:	push	{lr}		; (str lr, [sp, #-4]!)
 d54:	ldr	lr, [pc, #4]	; d60 <.plt+0x10>
 d58:	add	lr, pc, lr
 d5c:	ldr	pc, [lr, #8]!
 d60:	.word	0x000132a0

00000d64 <propagate_generic@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #672]!	; 0x2a0

00000d70 <make_conf@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #664]!	; 0x298

00000d7c <parse_netmask_strict@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #656]!	; 0x290

00000d88 <rb_current_time@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #648]!	; 0x288

00000d94 <__cxa_finalize@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #640]!	; 0x280

00000da0 <sendto_one@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #77824	; 0x13000
 da8:	ldr	pc, [ip, #632]!	; 0x278

00000dac <find_conf_by_address@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #77824	; 0x13000
 db4:	ldr	pc, [ip, #624]!	; 0x270

00000db8 <add_temp_kline@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #77824	; 0x13000
 dc0:	ldr	pc, [ip, #616]!	; 0x268

00000dc4 <replace_old_ban@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #77824	; 0x13000
 dcc:	ldr	pc, [ip, #608]!	; 0x260

00000dd0 <rb_outofmemory@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #77824	; 0x13000
 dd8:	ldr	pc, [ip, #600]!	; 0x258

00000ddc <operhash_delete@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #77824	; 0x13000
 de4:	ldr	pc, [ip, #592]!	; 0x250

00000de8 <sendto_realops_snomask@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #77824	; 0x13000
 df0:	ldr	pc, [ip, #584]!	; 0x248

00000df4 <bandb_add@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #77824	; 0x13000
 dfc:	ldr	pc, [ip, #576]!	; 0x240

00000e00 <deactivate_conf@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #77824	; 0x13000
 e08:	ldr	pc, [ip, #568]!	; 0x238

00000e0c <get_oper_name@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #77824	; 0x13000
 e14:	ldr	pc, [ip, #560]!	; 0x230

00000e18 <rb_free_rb_dlink_node@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #77824	; 0x13000
 e20:	ldr	pc, [ip, #552]!	; 0x228

00000e24 <cluster_generic@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #77824	; 0x13000
 e2c:	ldr	pc, [ip, #544]!	; 0x220

00000e30 <operhash_add@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #77824	; 0x13000
 e38:	ldr	pc, [ip, #536]!	; 0x218

00000e3c <check_one_kline@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #77824	; 0x13000
 e44:	ldr	pc, [ip, #528]!	; 0x210

00000e48 <strcpy@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #77824	; 0x13000
 e50:	ldr	pc, [ip, #520]!	; 0x208

00000e54 <sendto_server@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #77824	; 0x13000
 e5c:	ldr	pc, [ip, #512]!	; 0x200

00000e60 <rb_set_time@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #77824	; 0x13000
 e68:	ldr	pc, [ip, #504]!	; 0x1f8

00000e6c <valid_wild_card@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #77824	; 0x13000
 e74:	ldr	pc, [ip, #496]!	; 0x1f0

00000e78 <malloc@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #77824	; 0x13000
 e80:	ldr	pc, [ip, #488]!	; 0x1e8

00000e84 <add_conf_by_address@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #77824	; 0x13000
 e8c:	ldr	pc, [ip, #480]!	; 0x1e0

00000e90 <__gmon_start__@plt>:
 e90:	add	ip, pc, #0, 12
 e94:	add	ip, ip, #77824	; 0x13000
 e98:	ldr	pc, [ip, #472]!	; 0x1d8

00000e9c <rb_make_rb_dlink_node@plt>:
 e9c:	add	ip, pc, #0, 12
 ea0:	add	ip, ip, #77824	; 0x13000
 ea4:	ldr	pc, [ip, #464]!	; 0x1d0

00000ea8 <strlen@plt>:
 ea8:	add	ip, pc, #0, 12
 eac:	add	ip, ip, #77824	; 0x13000
 eb0:	ldr	pc, [ip, #456]!	; 0x1c8

00000eb4 <strchr@plt>:
 eb4:	add	ip, pc, #0, 12
 eb8:	add	ip, ip, #77824	; 0x13000
 ebc:	ldr	pc, [ip, #448]!	; 0x1c0

00000ec0 <delete_one_address_conf@plt>:
 ec0:	add	ip, pc, #0, 12
 ec4:	add	ip, ip, #77824	; 0x13000
 ec8:	ldr	pc, [ip, #440]!	; 0x1b8

00000ecc <ilog@plt>:
 ecc:	add	ip, pc, #0, 12
 ed0:	add	ip, ip, #77824	; 0x13000
 ed4:	ldr	pc, [ip, #432]!	; 0x1b0

00000ed8 <match@plt>:
 ed8:	add	ip, pc, #0, 12
 edc:	add	ip, ip, #77824	; 0x13000
 ee0:	ldr	pc, [ip, #424]!	; 0x1a8

00000ee4 <valid_temp_time@plt>:
 ee4:	add	ip, pc, #0, 12
 ee8:	add	ip, ip, #77824	; 0x13000
 eec:	ldr	pc, [ip, #416]!	; 0x1a0

00000ef0 <remove_reject_mask@plt>:
 ef0:	add	ip, pc, #0, 12
 ef4:	add	ip, ip, #77824	; 0x13000
 ef8:	ldr	pc, [ip, #408]!	; 0x198

00000efc <sendto_one_notice@plt>:
 efc:	add	ip, pc, #0, 12
 f00:	add	ip, ip, #77824	; 0x13000
 f04:	ldr	pc, [ip, #400]!	; 0x190

00000f08 <bandb_del@plt>:
 f08:	add	ip, pc, #0, 12
 f0c:	add	ip, ip, #77824	; 0x13000
 f10:	ldr	pc, [ip, #392]!	; 0x188

00000f14 <atoi@plt>:
 f14:	add	ip, pc, #0, 12
 f18:	add	ip, ip, #77824	; 0x13000
 f1c:	ldr	pc, [ip, #384]!	; 0x180

00000f20 <find_exact_conf_by_address@plt>:
 f20:	add	ip, pc, #0, 12
 f24:	add	ip, ip, #77824	; 0x13000
 f28:	ldr	pc, [ip, #376]!	; 0x178

00000f2c <rb_strlcpy@plt>:
 f2c:	add	ip, pc, #0, 12
 f30:	add	ip, ip, #77824	; 0x13000
 f34:	ldr	pc, [ip, #368]!	; 0x170

00000f38 <find_shared_conf@plt>:
 f38:	add	ip, pc, #0, 12
 f3c:	add	ip, ip, #77824	; 0x13000
 f40:	ldr	pc, [ip, #360]!	; 0x168

00000f44 <privilegeset_in_set@plt>:
 f44:	add	ip, pc, #0, 12
 f48:	add	ip, ip, #77824	; 0x13000
 f4c:	ldr	pc, [ip, #352]!	; 0x160

00000f50 <irccmp@plt>:
 f50:	add	ip, pc, #0, 12
 f54:	add	ip, ip, #77824	; 0x13000
 f58:	ldr	pc, [ip, #344]!	; 0x158

00000f5c <__assert_fail@plt>:
 f5c:	add	ip, pc, #0, 12
 f60:	add	ip, ip, #77824	; 0x13000
 f64:	ldr	pc, [ip, #336]!	; 0x150

Disassembly of section .text:

00000f68 <call_weak_fn>:
     f68:	ldr	r3, [pc, #20]	; f84 <call_weak_fn+0x1c>
     f6c:	ldr	r2, [pc, #20]	; f88 <call_weak_fn+0x20>
     f70:	add	r3, pc, r3
     f74:	ldr	r2, [r3, r2]
     f78:	cmp	r2, #0
     f7c:	bxeq	lr
     f80:	b	e90 <__gmon_start__@plt>
     f84:	.word	0x00013088
     f88:	.word	0x000000d0

00000f8c <deregister_tm_clones>:
     f8c:	ldr	r0, [pc, #44]	; fc0 <deregister_tm_clones+0x34>
     f90:	ldr	r3, [pc, #44]	; fc4 <deregister_tm_clones+0x38>
     f94:	add	r0, pc, r0
     f98:	add	r3, pc, r3
     f9c:	cmp	r3, r0
     fa0:	ldr	r3, [pc, #32]	; fc8 <deregister_tm_clones+0x3c>
     fa4:	add	r3, pc, r3
     fa8:	bxeq	lr
     fac:	ldr	r2, [pc, #24]	; fcc <deregister_tm_clones+0x40>
     fb0:	ldr	r3, [r3, r2]
     fb4:	cmp	r3, #0
     fb8:	bxeq	lr
     fbc:	bx	r3
     fc0:	.word	0x00013210
     fc4:	.word	0x0001320c
     fc8:	.word	0x00013054
     fcc:	.word	0x000000c0

00000fd0 <register_tm_clones>:
     fd0:	ldr	r0, [pc, #56]	; 1010 <register_tm_clones+0x40>
     fd4:	ldr	r3, [pc, #56]	; 1014 <register_tm_clones+0x44>
     fd8:	add	r0, pc, r0
     fdc:	add	r3, pc, r3
     fe0:	sub	r1, r3, r0
     fe4:	ldr	r3, [pc, #44]	; 1018 <register_tm_clones+0x48>
     fe8:	asr	r1, r1, #2
     fec:	add	r3, pc, r3
     ff0:	add	r1, r1, r1, lsr #31
     ff4:	asrs	r1, r1, #1
     ff8:	bxeq	lr
     ffc:	ldr	r2, [pc, #24]	; 101c <register_tm_clones+0x4c>
    1000:	ldr	r3, [r3, r2]
    1004:	cmp	r3, #0
    1008:	bxeq	lr
    100c:	bx	r3
    1010:	.word	0x000131cc
    1014:	.word	0x000131c8
    1018:	.word	0x0001300c
    101c:	.word	0x000000e0

00001020 <__do_global_dtors_aux>:
    1020:	ldr	r3, [pc, #76]	; 1074 <__do_global_dtors_aux+0x54>
    1024:	ldr	r2, [pc, #76]	; 1078 <__do_global_dtors_aux+0x58>
    1028:	add	r3, pc, r3
    102c:	add	r2, pc, r2
    1030:	ldrb	r3, [r3]
    1034:	cmp	r3, #0
    1038:	bxne	lr
    103c:	ldr	r3, [pc, #56]	; 107c <__do_global_dtors_aux+0x5c>
    1040:	push	{r4, lr}
    1044:	ldr	r3, [r2, r3]
    1048:	cmp	r3, #0
    104c:	beq	105c <__do_global_dtors_aux+0x3c>
    1050:	ldr	r3, [pc, #40]	; 1080 <__do_global_dtors_aux+0x60>
    1054:	ldr	r0, [pc, r3]
    1058:	bl	d94 <__cxa_finalize@plt>
    105c:	bl	f8c <deregister_tm_clones>
    1060:	ldr	r3, [pc, #28]	; 1084 <__do_global_dtors_aux+0x64>
    1064:	mov	r2, #1
    1068:	add	r3, pc, r3
    106c:	strb	r2, [r3]
    1070:	pop	{r4, pc}
    1074:	.word	0x0001317c
    1078:	.word	0x00012fcc
    107c:	.word	0x000000b8
    1080:	.word	0x00013090
    1084:	.word	0x0001313c

00001088 <frame_dummy>:
    1088:	b	fd0 <register_tm_clones>

0000108c <ms_kline>:
    108c:	push	{r4, r5, r6, r7, fp, lr}
    1090:	add	fp, sp, #16
    1094:	sub	sp, sp, #24
    1098:	mov	r6, r3
    109c:	mov	r4, r2
    10a0:	ldr	r7, [fp, #8]
    10a4:	ldr	r0, [r7, #8]
    10a8:	bl	f14 <atoi@plt>
    10ac:	cmp	r6, #6
    10b0:	blt	10cc <ms_kline+0x40>
    10b4:	mov	r5, r0
    10b8:	ldr	r0, [r7, #20]
    10bc:	cmp	r0, #0
    10c0:	ldrbne	r1, [r0]
    10c4:	cmpne	r1, #0
    10c8:	bne	10d4 <ms_kline+0x48>
    10cc:	sub	sp, fp, #16
    10d0:	pop	{r4, r5, r6, r7, fp, pc}
    10d4:	ldr	r1, [pc, #140]	; 1168 <ms_kline+0xdc>
    10d8:	ldr	r1, [pc, r1]
    10dc:	ldr	r3, [r1]
    10e0:	ldr	r2, [r7, #4]
    10e4:	ldr	ip, [r7, #12]
    10e8:	ldr	r6, [r7, #16]
    10ec:	ldr	r1, [pc, #120]	; 116c <ms_kline+0xe0>
    10f0:	add	r1, pc, r1
    10f4:	stm	sp, {r1, r5, ip}
    10f8:	str	r6, [sp, #12]
    10fc:	str	r0, [sp, #16]
    1100:	ldr	r1, [pc, #104]	; 1170 <ms_kline+0xe4>
    1104:	add	r1, pc, r1
    1108:	mov	r0, r4
    110c:	bl	d64 <propagate_generic@plt>
    1110:	ldr	r0, [r7, #4]
    1114:	ldr	r1, [pc, #88]	; 1174 <ms_kline+0xe8>
    1118:	ldr	r1, [pc, r1]
    111c:	add	r1, r1, #88	; 0x58
    1120:	bl	ed8 <match@plt>
    1124:	cmp	r0, #0
    1128:	beq	10cc <ms_kline+0x40>
    112c:	ldrh	r0, [r4, #80]	; 0x50
    1130:	cmp	r0, #64	; 0x40
    1134:	bne	10cc <ms_kline+0x40>
    1138:	ldr	r0, [r4, #24]
    113c:	cmp	r0, #0
    1140:	beq	10cc <ms_kline+0x40>
    1144:	ldr	r2, [r7, #12]
    1148:	ldr	r3, [r7, #16]
    114c:	ldr	r0, [r7, #20]
    1150:	str	r0, [sp]
    1154:	mov	r0, r4
    1158:	mov	r1, r5
    115c:	bl	24a0 <handle_remote_kline>
    1160:	sub	sp, fp, #16
    1164:	pop	{r4, r5, r6, r7, fp, pc}
    1168:	.word	0x00012ff8
    116c:	.word	0x00001b7d
    1170:	.word	0x00001aba
    1174:	.word	0x00012fc4

00001178 <me_kline>:
    1178:	push	{r4, r5, fp, lr}
    117c:	add	fp, sp, #8
    1180:	sub	sp, sp, #8
    1184:	ldrh	r0, [r2, #80]	; 0x50
    1188:	cmp	r0, #64	; 0x40
    118c:	bne	11c8 <me_kline+0x50>
    1190:	mov	r4, r2
    1194:	ldr	r0, [r2, #24]
    1198:	cmp	r0, #0
    119c:	beq	11c8 <me_kline+0x50>
    11a0:	ldr	r5, [fp, #8]
    11a4:	ldr	r0, [r5, #4]
    11a8:	bl	f14 <atoi@plt>
    11ac:	mov	r1, r0
    11b0:	ldr	r2, [r5, #8]
    11b4:	ldr	r3, [r5, #12]
    11b8:	ldr	r0, [r5, #16]
    11bc:	str	r0, [sp]
    11c0:	mov	r0, r4
    11c4:	bl	24a0 <handle_remote_kline>
    11c8:	sub	sp, fp, #8
    11cc:	pop	{r4, r5, fp, pc}

000011d0 <mo_kline>:
    11d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    11d4:	add	fp, sp, #28
    11d8:	sub	sp, sp, #100	; 0x64
    11dc:	mov	r4, r2
    11e0:	ldr	r0, [r2, #24]
    11e4:	ldr	r1, [pc, #1216]	; 16ac <mo_kline+0x4dc>
    11e8:	ldr	r1, [pc, r1]
    11ec:	ldr	r8, [r1, #324]	; 0x144
    11f0:	cmp	r8, #0
    11f4:	mov	r5, r8
    11f8:	movwne	r5, #1
    11fc:	cmp	r0, #0
    1200:	ldrne	r0, [r0, #36]	; 0x24
    1204:	cmpne	r0, #0
    1208:	bne	1248 <mo_kline+0x78>
    120c:	sub	sp, sp, #8
    1210:	ldr	r0, [pc, #1180]	; 16b4 <mo_kline+0x4e4>
    1214:	add	r0, pc, r0
    1218:	str	r0, [sp]
    121c:	add	r3, r4, #88	; 0x58
    1220:	ldr	r0, [pc, #1168]	; 16b8 <mo_kline+0x4e8>
    1224:	ldr	r0, [pc, r0]
    1228:	add	r2, r0, #88	; 0x58
    122c:	ldr	r1, [pc, #1160]	; 16bc <mo_kline+0x4ec>
    1230:	add	r1, pc, r1
    1234:	mov	r0, r4
    1238:	bl	da0 <sendto_one@plt>
    123c:	add	sp, sp, #8
    1240:	sub	sp, fp, #28
    1244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1248:	mov	r7, r3
    124c:	ldr	r1, [pc, #1116]	; 16b0 <mo_kline+0x4e0>
    1250:	add	r1, pc, r1
    1254:	bl	f44 <privilegeset_in_set@plt>
    1258:	cmp	r0, #0
    125c:	beq	120c <mo_kline+0x3c>
    1260:	str	r5, [fp, #-116]	; 0xffffff8c
    1264:	sub	r0, fp, #110	; 0x6e
    1268:	add	sl, r0, #1
    126c:	ldr	r9, [fp, #8]
    1270:	ldr	r0, [r9, #4]
    1274:	bl	ee4 <valid_temp_time@plt>
    1278:	mov	r6, r0
    127c:	cmn	r0, #1
    1280:	movle	r6, #0
    1284:	mov	r5, #1
    1288:	movwgt	r5, #2
    128c:	ldr	r1, [r9, r5, lsl #2]
    1290:	sub	r2, fp, #44	; 0x2c
    1294:	mov	r0, r4
    1298:	mov	r3, sl
    129c:	bl	1b60 <find_user_host>
    12a0:	cmp	r0, #0
    12a4:	beq	16a4 <mo_kline+0x4d4>
    12a8:	str	sl, [fp, #-120]	; 0xffffff88
    12ac:	str	r6, [fp, #-124]	; 0xffffff84
    12b0:	ldrb	r0, [fp, #-109]	; 0xffffff93
    12b4:	cmp	r0, #58	; 0x3a
    12b8:	moveq	r0, #48	; 0x30
    12bc:	strbeq	r0, [fp, #-110]	; 0xffffff92
    12c0:	subeq	r0, fp, #110	; 0x6e
    12c4:	streq	r0, [fp, #-120]	; 0xffffff88
    12c8:	add	sl, r5, #3
    12cc:	add	r6, r5, #1
    12d0:	mov	r9, #0
    12d4:	cmp	sl, r7
    12d8:	bgt	12f8 <mo_kline+0x128>
    12dc:	ldr	r0, [fp, #8]
    12e0:	ldr	r0, [r0, r6, lsl #2]
    12e4:	ldr	r1, [pc, #980]	; 16c0 <mo_kline+0x4f0>
    12e8:	add	r1, pc, r1
    12ec:	bl	f50 <irccmp@plt>
    12f0:	cmp	r0, #0
    12f4:	beq	1344 <mo_kline+0x174>
    12f8:	cmp	r6, r7
    12fc:	bge	1318 <mo_kline+0x148>
    1300:	ldr	r0, [fp, #8]
    1304:	ldr	r7, [r0, r6, lsl #2]
    1308:	cmp	r7, #0
    130c:	ldrbne	r0, [r7]
    1310:	cmpne	r0, #0
    1314:	bne	1368 <mo_kline+0x198>
    1318:	sub	sp, sp, #8
    131c:	ldr	r0, [pc, #936]	; 16cc <mo_kline+0x4fc>
    1320:	add	r0, pc, r0
    1324:	str	r0, [sp]
    1328:	add	r3, r4, #88	; 0x58
    132c:	ldr	r0, [pc, #924]	; 16d0 <mo_kline+0x500>
    1330:	ldr	r0, [pc, r0]
    1334:	add	r2, r0, #88	; 0x58
    1338:	ldr	r1, [pc, #916]	; 16d4 <mo_kline+0x504>
    133c:	add	r1, pc, r1
    1340:	b	1234 <mo_kline+0x64>
    1344:	ldr	r0, [r4, #24]
    1348:	cmp	r0, #0
    134c:	ldrne	r0, [r0, #36]	; 0x24
    1350:	cmpne	r0, #0
    1354:	bne	1444 <mo_kline+0x274>
    1358:	sub	sp, sp, #8
    135c:	ldr	r0, [pc, #868]	; 16c8 <mo_kline+0x4f8>
    1360:	add	r0, pc, r0
    1364:	b	1218 <mo_kline+0x48>
    1368:	mov	r0, r7
    136c:	bl	ea8 <strlen@plt>
    1370:	add	r0, r0, #8
    1374:	bic	r0, r0, #7
    1378:	sub	r5, sp, r0
    137c:	mov	sp, r5
    1380:	mov	r0, r5
    1384:	mov	r1, r7
    1388:	bl	e48 <strcpy@plt>
    138c:	ldr	r6, [fp, #-120]	; 0xffffff88
    1390:	mov	r0, r6
    1394:	mov	r1, #0
    1398:	mov	r2, #0
    139c:	bl	d7c <parse_netmask_strict@plt>
    13a0:	cmp	r0, #0
    13a4:	beq	1424 <mo_kline+0x254>
    13a8:	cmp	r9, #0
    13ac:	beq	1474 <mo_kline+0x2a4>
    13b0:	ldr	r0, [pc, #804]	; 16dc <mo_kline+0x50c>
    13b4:	ldr	r0, [pc, r0]
    13b8:	ldr	r3, [r0]
    13bc:	sub	sp, sp, #24
    13c0:	ldr	r0, [pc, #792]	; 16e0 <mo_kline+0x510>
    13c4:	add	r0, pc, r0
    13c8:	str	r0, [sp]
    13cc:	ldr	r7, [fp, #-124]	; 0xffffff84
    13d0:	str	r7, [sp, #4]
    13d4:	sub	r0, fp, #44	; 0x2c
    13d8:	str	r0, [sp, #8]
    13dc:	str	r6, [sp, #12]
    13e0:	str	r5, [sp, #16]
    13e4:	ldr	r1, [pc, #760]	; 16e4 <mo_kline+0x514>
    13e8:	add	r1, pc, r1
    13ec:	mov	r0, r4
    13f0:	mov	r2, r9
    13f4:	bl	d64 <propagate_generic@plt>
    13f8:	add	sp, sp, #24
    13fc:	ldr	r0, [pc, #740]	; 16e8 <mo_kline+0x518>
    1400:	ldr	r0, [pc, r0]
    1404:	add	r1, r0, #88	; 0x58
    1408:	mov	r0, r9
    140c:	bl	ed8 <match@plt>
    1410:	mov	r1, #0
    1414:	str	r1, [fp, #-116]	; 0xffffff8c
    1418:	cmp	r0, #0
    141c:	bne	14e0 <mo_kline+0x310>
    1420:	b	16a4 <mo_kline+0x4d4>
    1424:	ldr	r1, [pc, #684]	; 16d8 <mo_kline+0x508>
    1428:	add	r1, pc, r1
    142c:	sub	r2, fp, #44	; 0x2c
    1430:	mov	r0, r4
    1434:	mov	r3, r6
    1438:	bl	efc <sendto_one_notice@plt>
    143c:	sub	sp, fp, #28
    1440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1444:	ldr	r1, [pc, #632]	; 16c4 <mo_kline+0x4f4>
    1448:	add	r1, pc, r1
    144c:	bl	f44 <privilegeset_in_set@plt>
    1450:	cmp	r0, #0
    1454:	beq	1358 <mo_kline+0x188>
    1458:	ldr	r0, [fp, #8]
    145c:	add	r0, r0, r5, lsl #2
    1460:	ldr	r9, [r0, #8]
    1464:	mov	r6, sl
    1468:	cmp	r6, r7
    146c:	blt	1300 <mo_kline+0x130>
    1470:	b	1318 <mo_kline+0x148>
    1474:	ldr	r0, [pc, #624]	; 16ec <mo_kline+0x51c>
    1478:	ldr	r0, [pc, r0]
    147c:	ldr	r0, [r0, #8]
    1480:	cmp	r0, #0
    1484:	ldr	r7, [fp, #-124]	; 0xffffff84
    1488:	beq	14e0 <mo_kline+0x310>
    148c:	cmp	r8, #0
    1490:	bne	14e0 <mo_kline+0x310>
    1494:	ldr	r0, [pc, #596]	; 16f0 <mo_kline+0x520>
    1498:	ldr	r0, [pc, r0]
    149c:	ldr	r3, [r0]
    14a0:	sub	sp, sp, #24
    14a4:	ldr	r0, [pc, #584]	; 16f4 <mo_kline+0x524>
    14a8:	add	r0, pc, r0
    14ac:	stm	sp, {r0, r7}
    14b0:	sub	r0, fp, #44	; 0x2c
    14b4:	str	r0, [sp, #8]
    14b8:	str	r6, [sp, #12]
    14bc:	str	r5, [sp, #16]
    14c0:	mov	r2, #2
    14c4:	cmp	r7, #0
    14c8:	movwgt	r2, #1
    14cc:	ldr	r1, [pc, #548]	; 16f8 <mo_kline+0x528>
    14d0:	add	r1, pc, r1
    14d4:	mov	r0, r4
    14d8:	bl	e24 <cluster_generic@plt>
    14dc:	add	sp, sp, #24
    14e0:	sub	r1, fp, #44	; 0x2c
    14e4:	mov	r0, r4
    14e8:	mov	r2, r6
    14ec:	bl	1c6c <valid_user_host>
    14f0:	cmp	r0, #0
    14f4:	beq	16a4 <mo_kline+0x4d4>
    14f8:	sub	r0, fp, #44	; 0x2c
    14fc:	mov	r1, r6
    1500:	bl	e6c <valid_wild_card@plt>
    1504:	cmp	r0, #0
    1508:	beq	1540 <mo_kline+0x370>
    150c:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1510:	eor	r0, r0, #1
    1514:	cmp	r7, #0
    1518:	mov	r1, r7
    151c:	movwne	r1, #1
    1520:	orrs	r0, r1, r0
    1524:	bne	1564 <mo_kline+0x394>
    1528:	ldr	r1, [pc, #468]	; 1704 <mo_kline+0x534>
    152c:	add	r1, pc, r1
    1530:	mov	r0, r4
    1534:	bl	efc <sendto_one_notice@plt>
    1538:	sub	sp, fp, #28
    153c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1540:	ldr	r0, [pc, #436]	; 16fc <mo_kline+0x52c>
    1544:	ldr	r0, [pc, r0]
    1548:	ldr	r2, [r0, #236]	; 0xec
    154c:	ldr	r1, [pc, #428]	; 1700 <mo_kline+0x530>
    1550:	add	r1, pc, r1
    1554:	mov	r0, r4
    1558:	bl	efc <sendto_one_notice@plt>
    155c:	sub	sp, fp, #28
    1560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1564:	sub	r1, fp, #44	; 0x2c
    1568:	mov	r0, r4
    156c:	mov	r2, r6
    1570:	mov	r3, r7
    1574:	bl	1cf0 <already_placed_kline>
    1578:	cmp	r0, #0
    157c:	bne	16a4 <mo_kline+0x4d4>
    1580:	bl	e60 <rb_set_time@plt>
    1584:	bl	d70 <make_conf@plt>
    1588:	mov	sl, r0
    158c:	mov	r0, #64	; 0x40
    1590:	str	r0, [sl]
    1594:	bl	d88 <rb_current_time@plt>
    1598:	str	r0, [sl, #40]	; 0x28
    159c:	mov	r0, r6
    15a0:	bl	1e50 <rb_strdup>
    15a4:	str	r0, [sl, #16]
    15a8:	sub	r0, fp, #44	; 0x2c
    15ac:	bl	1e50 <rb_strdup>
    15b0:	mov	r8, #0
    15b4:	str	r0, [sl, #28]
    15b8:	str	r8, [sl, #32]
    15bc:	mov	r0, r4
    15c0:	bl	e0c <get_oper_name@plt>
    15c4:	bl	e30 <operhash_add@plt>
    15c8:	str	r0, [sl, #12]
    15cc:	mov	r0, r5
    15d0:	bl	ea8 <strlen@plt>
    15d4:	movw	r1, #391	; 0x187
    15d8:	cmp	r0, r1
    15dc:	movcs	r0, #0
    15e0:	strbcs	r0, [r5, #390]	; 0x186
    15e4:	mov	r0, r5
    15e8:	mov	r1, #124	; 0x7c
    15ec:	bl	eb4 <strchr@plt>
    15f0:	cmp	r0, #0
    15f4:	ldr	r9, [fp, #-116]	; 0xffffff8c
    15f8:	beq	1624 <mo_kline+0x454>
    15fc:	mov	r6, r0
    1600:	mov	r0, #0
    1604:	strb	r0, [r6]
    1608:	ldrb	r0, [r6, #1]!
    160c:	cmp	r0, #0
    1610:	beq	1620 <mo_kline+0x450>
    1614:	mov	r0, r6
    1618:	bl	1e50 <rb_strdup>
    161c:	str	r0, [sl, #24]
    1620:	mov	r8, r6
    1624:	mov	r0, r5
    1628:	bl	1e50 <rb_strdup>
    162c:	str	r0, [sl, #20]
    1630:	cmp	r9, #0
    1634:	beq	165c <mo_kline+0x48c>
    1638:	sub	sp, sp, #8
    163c:	str	r7, [sp]
    1640:	mov	r0, r4
    1644:	mov	r1, sl
    1648:	mov	r2, r5
    164c:	mov	r3, r8
    1650:	bl	1e88 <apply_prop_kline>
    1654:	add	sp, sp, #8
    1658:	b	169c <mo_kline+0x4cc>
    165c:	cmp	r7, #1
    1660:	blt	1688 <mo_kline+0x4b8>
    1664:	sub	sp, sp, #8
    1668:	str	r7, [sp]
    166c:	mov	r0, r4
    1670:	mov	r1, sl
    1674:	mov	r2, r5
    1678:	mov	r3, r8
    167c:	bl	20e8 <apply_tkline>
    1680:	add	sp, sp, #8
    1684:	b	169c <mo_kline+0x4cc>
    1688:	mov	r0, r4
    168c:	mov	r1, sl
    1690:	mov	r2, r5
    1694:	mov	r3, r8
    1698:	bl	2274 <apply_kline>
    169c:	mov	r0, sl
    16a0:	bl	e3c <check_one_kline@plt>
    16a4:	sub	sp, fp, #28
    16a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    16ac:	.word	0x00012ef8
    16b0:	.word	0x00001974
    16b4:	.word	0x000019b5
    16b8:	.word	0x00012eb8
    16bc:	.word	0x0000199f
    16c0:	.word	0x0000190e
    16c4:	.word	0x000017b1
    16c8:	.word	0x0000189e
    16cc:	.word	0x0000189e
    16d0:	.word	0x00012dac
    16d4:	.word	0x000018cc
    16d8:	.word	0x00001805
    16dc:	.word	0x00012d1c
    16e0:	.word	0x000018a9
    16e4:	.word	0x000017d6
    16e8:	.word	0x00012cdc
    16ec:	.word	0x00012c54
    16f0:	.word	0x00012c38
    16f4:	.word	0x000017d2
    16f8:	.word	0x000016ee
    16fc:	.word	0x00012b9c
    1700:	.word	0x00001738
    1704:	.word	0x000017a3

00001708 <ms_unkline>:
    1708:	push	{r4, r5, r6, sl, fp, lr}
    170c:	add	fp, sp, #16
    1710:	sub	sp, sp, #16
    1714:	mov	r6, r2
    1718:	ldr	r0, [pc, #136]	; 17a8 <ms_unkline+0xa0>
    171c:	ldr	r0, [pc, r0]
    1720:	ldr	r3, [r0]
    1724:	ldr	r5, [fp, #8]
    1728:	ldr	r2, [r5, #4]
    172c:	ldr	r0, [r5, #8]
    1730:	ldr	r1, [r5, #12]
    1734:	ldr	r4, [pc, #112]	; 17ac <ms_unkline+0xa4>
    1738:	add	r4, pc, r4
    173c:	str	r4, [sp]
    1740:	stmib	sp, {r0, r1}
    1744:	ldr	r1, [pc, #100]	; 17b0 <ms_unkline+0xa8>
    1748:	add	r1, pc, r1
    174c:	mov	r0, r6
    1750:	bl	d64 <propagate_generic@plt>
    1754:	ldr	r0, [r5, #4]
    1758:	ldr	r1, [pc, #84]	; 17b4 <ms_unkline+0xac>
    175c:	ldr	r1, [pc, r1]
    1760:	add	r1, r1, #88	; 0x58
    1764:	bl	ed8 <match@plt>
    1768:	cmp	r0, #0
    176c:	beq	17a0 <ms_unkline+0x98>
    1770:	ldrh	r0, [r6, #80]	; 0x50
    1774:	cmp	r0, #64	; 0x40
    1778:	bne	17a0 <ms_unkline+0x98>
    177c:	ldr	r0, [r6, #24]
    1780:	cmp	r0, #0
    1784:	beq	17a0 <ms_unkline+0x98>
    1788:	ldr	r1, [r5, #8]
    178c:	ldr	r2, [r5, #12]
    1790:	mov	r0, r6
    1794:	sub	sp, fp, #16
    1798:	pop	{r4, r5, r6, sl, fp, lr}
    179c:	b	2b08 <handle_remote_unkline>
    17a0:	sub	sp, fp, #16
    17a4:	pop	{r4, r5, r6, sl, fp, pc}
    17a8:	.word	0x00012998
    17ac:	.word	0x0000182d
    17b0:	.word	0x00001474
    17b4:	.word	0x00012980

000017b8 <me_unkline>:
    17b8:	ldrh	r0, [r2, #80]	; 0x50
    17bc:	cmp	r0, #64	; 0x40
    17c0:	bxne	lr
    17c4:	ldr	r0, [r2, #24]
    17c8:	cmp	r0, #0
    17cc:	beq	17e4 <me_unkline+0x2c>
    17d0:	ldr	r0, [sp]
    17d4:	ldmib	r0, {r1, r3}
    17d8:	mov	r0, r2
    17dc:	mov	r2, r3
    17e0:	b	2b08 <handle_remote_unkline>
    17e4:	bx	lr

000017e8 <mo_unkline>:
    17e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    17ec:	add	fp, sp, #24
    17f0:	sub	sp, sp, #8
    17f4:	mov	r7, r3
    17f8:	mov	r4, r2
    17fc:	mov	r0, #42	; 0x2a
    1800:	strh	r0, [fp, #-26]	; 0xffffffe6
    1804:	ldr	r8, [fp, #8]
    1808:	ldr	r6, [r8, #4]
    180c:	mov	r0, r6
    1810:	bl	ea8 <strlen@plt>
    1814:	add	r0, r0, #8
    1818:	bic	r0, r0, #7
    181c:	sub	r5, sp, r0
    1820:	mov	sp, r5
    1824:	mov	r0, r5
    1828:	mov	r1, r6
    182c:	bl	e48 <strcpy@plt>
    1830:	ldr	r0, [r4, #24]
    1834:	cmp	r0, #0
    1838:	ldrne	r0, [r0, #36]	; 0x24
    183c:	cmpne	r0, #0
    1840:	bne	1880 <mo_unkline+0x98>
    1844:	sub	sp, sp, #8
    1848:	ldr	r0, [pc, #712]	; 1b18 <mo_unkline+0x330>
    184c:	add	r0, pc, r0
    1850:	str	r0, [sp]
    1854:	add	r3, r4, #88	; 0x58
    1858:	ldr	r0, [pc, #700]	; 1b1c <mo_unkline+0x334>
    185c:	ldr	r0, [pc, r0]
    1860:	add	r2, r0, #88	; 0x58
    1864:	ldr	r1, [pc, #692]	; 1b20 <mo_unkline+0x338>
    1868:	add	r1, pc, r1
    186c:	mov	r0, r4
    1870:	bl	da0 <sendto_one@plt>
    1874:	add	sp, sp, #8
    1878:	sub	sp, fp, #24
    187c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1880:	ldr	r1, [pc, #652]	; 1b14 <mo_unkline+0x32c>
    1884:	add	r1, pc, r1
    1888:	bl	f44 <privilegeset_in_set@plt>
    188c:	cmp	r0, #0
    1890:	beq	1844 <mo_unkline+0x5c>
    1894:	mov	r0, r5
    1898:	mov	r1, #64	; 0x40
    189c:	bl	eb4 <strchr@plt>
    18a0:	cmp	r0, #0
    18a4:	beq	18e0 <mo_unkline+0xf8>
    18a8:	mov	r1, #0
    18ac:	strb	r1, [r0]
    18b0:	ldrb	r1, [r5]
    18b4:	sub	r2, fp, #26
    18b8:	cmp	r1, #0
    18bc:	mov	r6, r5
    18c0:	moveq	r6, r2
    18c4:	ldrb	r1, [r0, #1]!
    18c8:	cmp	r1, #0
    18cc:	moveq	r0, r2
    18d0:	mov	r5, r0
    18d4:	cmp	r7, #4
    18d8:	bge	1920 <mo_unkline+0x138>
    18dc:	b	1938 <mo_unkline+0x150>
    18e0:	ldrb	r0, [r5]
    18e4:	sub	r6, fp, #26
    18e8:	cmp	r0, #42	; 0x2a
    18ec:	beq	1918 <mo_unkline+0x130>
    18f0:	mov	r0, r5
    18f4:	mov	r1, #46	; 0x2e
    18f8:	bl	eb4 <strchr@plt>
    18fc:	cmp	r0, #0
    1900:	bne	1918 <mo_unkline+0x130>
    1904:	mov	r0, r5
    1908:	mov	r1, #58	; 0x3a
    190c:	bl	eb4 <strchr@plt>
    1910:	cmp	r0, #0
    1914:	beq	1afc <mo_unkline+0x314>
    1918:	cmp	r7, #4
    191c:	blt	1938 <mo_unkline+0x150>
    1920:	ldr	r0, [r8, #8]
    1924:	ldr	r1, [pc, #508]	; 1b28 <mo_unkline+0x340>
    1928:	add	r1, pc, r1
    192c:	bl	f50 <irccmp@plt>
    1930:	cmp	r0, #0
    1934:	beq	1a24 <mo_unkline+0x23c>
    1938:	mov	r0, r5
    193c:	mov	r1, #64	; 0x40
    1940:	mov	r2, r6
    1944:	bl	f20 <find_exact_conf_by_address@plt>
    1948:	mov	r7, r0
    194c:	cmp	r0, #0
    1950:	beq	197c <mo_unkline+0x194>
    1954:	ldr	r1, [r7, #44]	; 0x2c
    1958:	mov	r0, #1
    195c:	cmp	r1, #0
    1960:	bne	19d4 <mo_unkline+0x1ec>
    1964:	ldr	r1, [pc, #472]	; 1b44 <mo_unkline+0x35c>
    1968:	ldr	r1, [pc, r1]
    196c:	ldr	r1, [r1, #8]
    1970:	cmp	r1, #0
    1974:	bne	1990 <mo_unkline+0x1a8>
    1978:	b	19d4 <mo_unkline+0x1ec>
    197c:	ldr	r0, [pc, #452]	; 1b48 <mo_unkline+0x360>
    1980:	ldr	r0, [pc, r0]
    1984:	ldr	r0, [r0, #8]
    1988:	cmp	r0, #0
    198c:	beq	1adc <mo_unkline+0x2f4>
    1990:	ldr	r0, [pc, #436]	; 1b4c <mo_unkline+0x364>
    1994:	ldr	r0, [pc, r0]
    1998:	ldr	r3, [r0]
    199c:	sub	sp, sp, #16
    19a0:	ldr	r0, [pc, #424]	; 1b50 <mo_unkline+0x368>
    19a4:	add	r0, pc, r0
    19a8:	stm	sp, {r0, r6}
    19ac:	str	r5, [sp, #8]
    19b0:	ldr	r1, [pc, #412]	; 1b54 <mo_unkline+0x36c>
    19b4:	add	r1, pc, r1
    19b8:	mov	r0, r4
    19bc:	mov	r2, #4
    19c0:	bl	e24 <cluster_generic@plt>
    19c4:	add	sp, sp, #16
    19c8:	mov	r0, #1
    19cc:	cmp	r7, #0
    19d0:	beq	1adc <mo_unkline+0x2f4>
    19d4:	ldr	r1, [r7, #44]	; 0x2c
    19d8:	cmp	r1, #0
    19dc:	beq	19fc <mo_unkline+0x214>
    19e0:	cmp	r0, #0
    19e4:	beq	1a48 <mo_unkline+0x260>
    19e8:	mov	r0, r4
    19ec:	mov	r1, r7
    19f0:	bl	2674 <remove_prop_kline>
    19f4:	sub	sp, fp, #24
    19f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    19fc:	mov	r0, r4
    1a00:	mov	r1, r7
    1a04:	bl	27f8 <remove_temp_kline>
    1a08:	cmp	r0, #0
    1a0c:	bne	1a1c <mo_unkline+0x234>
    1a10:	mov	r0, r4
    1a14:	mov	r1, r7
    1a18:	bl	291c <remove_permkline_match>
    1a1c:	sub	sp, fp, #24
    1a20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1a24:	ldr	r0, [r4, #24]
    1a28:	cmp	r0, #0
    1a2c:	ldrne	r0, [r0, #36]	; 0x24
    1a30:	cmpne	r0, #0
    1a34:	bne	1a54 <mo_unkline+0x26c>
    1a38:	sub	sp, sp, #8
    1a3c:	ldr	r0, [pc, #236]	; 1b30 <mo_unkline+0x348>
    1a40:	add	r0, pc, r0
    1a44:	b	1850 <mo_unkline+0x68>
    1a48:	ldr	r1, [pc, #268]	; 1b5c <mo_unkline+0x374>
    1a4c:	add	r1, pc, r1
    1a50:	b	1ae4 <mo_unkline+0x2fc>
    1a54:	ldr	r1, [pc, #208]	; 1b2c <mo_unkline+0x344>
    1a58:	add	r1, pc, r1
    1a5c:	bl	f44 <privilegeset_in_set@plt>
    1a60:	cmp	r0, #0
    1a64:	beq	1a38 <mo_unkline+0x250>
    1a68:	ldr	r2, [r8, #12]
    1a6c:	ldr	r0, [pc, #192]	; 1b34 <mo_unkline+0x34c>
    1a70:	ldr	r0, [pc, r0]
    1a74:	ldr	r3, [r0]
    1a78:	sub	sp, sp, #16
    1a7c:	ldr	r0, [pc, #180]	; 1b38 <mo_unkline+0x350>
    1a80:	add	r0, pc, r0
    1a84:	stm	sp, {r0, r6}
    1a88:	str	r5, [sp, #8]
    1a8c:	ldr	r1, [pc, #168]	; 1b3c <mo_unkline+0x354>
    1a90:	add	r1, pc, r1
    1a94:	mov	r0, r4
    1a98:	bl	d64 <propagate_generic@plt>
    1a9c:	add	sp, sp, #16
    1aa0:	ldr	r0, [r8, #12]
    1aa4:	ldr	r1, [pc, #148]	; 1b40 <mo_unkline+0x358>
    1aa8:	ldr	r1, [pc, r1]
    1aac:	add	r1, r1, #88	; 0x58
    1ab0:	bl	ed8 <match@plt>
    1ab4:	cmp	r0, #0
    1ab8:	beq	1a1c <mo_unkline+0x234>
    1abc:	mov	r0, r5
    1ac0:	mov	r1, #64	; 0x40
    1ac4:	mov	r2, r6
    1ac8:	bl	f20 <find_exact_conf_by_address@plt>
    1acc:	mov	r7, r0
    1ad0:	mov	r0, #0
    1ad4:	cmp	r7, #0
    1ad8:	bne	19d4 <mo_unkline+0x1ec>
    1adc:	ldr	r1, [pc, #116]	; 1b58 <mo_unkline+0x370>
    1ae0:	add	r1, pc, r1
    1ae4:	mov	r0, r4
    1ae8:	mov	r2, r6
    1aec:	mov	r3, r5
    1af0:	bl	efc <sendto_one_notice@plt>
    1af4:	sub	sp, fp, #24
    1af8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1afc:	ldr	r1, [pc, #32]	; 1b24 <mo_unkline+0x33c>
    1b00:	add	r1, pc, r1
    1b04:	mov	r0, r4
    1b08:	bl	efc <sendto_one_notice@plt>
    1b0c:	sub	sp, fp, #24
    1b10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1b14:	.word	0x00001734
    1b18:	.word	0x00001771
    1b1c:	.word	0x00012880
    1b20:	.word	0x00001367
    1b24:	.word	0x000014c5
    1b28:	.word	0x000012ce
    1b2c:	.word	0x000011a1
    1b30:	.word	0x000011be
    1b34:	.word	0x00012644
    1b38:	.word	0x000014e5
    1b3c:	.word	0x0000112c
    1b40:	.word	0x00012634
    1b44:	.word	0x00012764
    1b48:	.word	0x0001274c
    1b4c:	.word	0x00012720
    1b50:	.word	0x000015c1
    1b54:	.word	0x00001208
    1b58:	.word	0x000014f9
    1b5c:	.word	0x000015a2

00001b60 <find_user_host>:
    1b60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1b64:	add	fp, sp, #24
    1b68:	mov	r5, r3
    1b6c:	mov	r6, r2
    1b70:	mov	r7, r1
    1b74:	mov	r8, r0
    1b78:	mov	r0, r1
    1b7c:	mov	r1, #64	; 0x40
    1b80:	bl	eb4 <strchr@plt>
    1b84:	cmp	r0, #0
    1b88:	beq	1bb8 <find_user_host+0x58>
    1b8c:	mov	r4, r0
    1b90:	mov	r0, #0
    1b94:	strb	r0, [r4], #1
    1b98:	ldrb	r0, [r7]
    1b9c:	cmp	r0, #0
    1ba0:	beq	1bf4 <find_user_host+0x94>
    1ba4:	mov	r0, r6
    1ba8:	mov	r1, r7
    1bac:	mov	r2, #11
    1bb0:	bl	f2c <rb_strlcpy@plt>
    1bb4:	b	1bfc <find_user_host+0x9c>
    1bb8:	mov	r0, r7
    1bbc:	mov	r1, #46	; 0x2e
    1bc0:	bl	eb4 <strchr@plt>
    1bc4:	cmp	r0, #0
    1bc8:	bne	1be0 <find_user_host+0x80>
    1bcc:	mov	r0, r7
    1bd0:	mov	r1, #58	; 0x3a
    1bd4:	bl	eb4 <strchr@plt>
    1bd8:	cmp	r0, #0
    1bdc:	beq	1c58 <find_user_host+0xf8>
    1be0:	mov	r0, #42	; 0x2a
    1be4:	strh	r0, [r6]
    1be8:	mov	r0, r5
    1bec:	mov	r1, r7
    1bf0:	b	1c10 <find_user_host+0xb0>
    1bf4:	mov	r0, #42	; 0x2a
    1bf8:	strh	r0, [r6]
    1bfc:	ldrb	r0, [r4]
    1c00:	cmp	r0, #0
    1c04:	beq	1c1c <find_user_host+0xbc>
    1c08:	mov	r0, r5
    1c0c:	mov	r1, r4
    1c10:	mov	r2, #64	; 0x40
    1c14:	bl	f2c <rb_strlcpy@plt>
    1c18:	b	1c24 <find_user_host+0xc4>
    1c1c:	mov	r0, #42	; 0x2a
    1c20:	strh	r0, [r5]
    1c24:	ldrb	r0, [r6]
    1c28:	cmp	r0, #58	; 0x3a
    1c2c:	beq	1c40 <find_user_host+0xe0>
    1c30:	ldrb	r1, [r5]
    1c34:	mov	r0, #1
    1c38:	cmp	r1, #58	; 0x3a
    1c3c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
    1c40:	ldr	r1, [pc, #32]	; 1c68 <find_user_host+0x108>
    1c44:	add	r1, pc, r1
    1c48:	mov	r0, r8
    1c4c:	bl	efc <sendto_one_notice@plt>
    1c50:	mov	r0, #0
    1c54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1c58:	ldr	r1, [pc, #4]	; 1c64 <find_user_host+0x104>
    1c5c:	add	r1, pc, r1
    1c60:	b	1c48 <find_user_host+0xe8>
    1c64:	.word	0x00001096
    1c68:	.word	0x000010d2

00001c6c <valid_user_host>:
    1c6c:	push	{r4, r5, r6, sl, fp, lr}
    1c70:	add	fp, sp, #16
    1c74:	mov	r5, r2
    1c78:	mov	r6, r1
    1c7c:	mov	r4, r0
    1c80:	mov	r0, r2
    1c84:	mov	r1, #35	; 0x23
    1c88:	bl	eb4 <strchr@plt>
    1c8c:	cmp	r0, #0
    1c90:	bne	1cd4 <valid_user_host+0x68>
    1c94:	mov	r0, r6
    1c98:	mov	r1, #35	; 0x23
    1c9c:	bl	eb4 <strchr@plt>
    1ca0:	cmp	r0, #0
    1ca4:	bne	1cd4 <valid_user_host+0x68>
    1ca8:	mov	r0, r6
    1cac:	mov	r1, #33	; 0x21
    1cb0:	bl	eb4 <strchr@plt>
    1cb4:	cmp	r0, #0
    1cb8:	bne	1cd4 <valid_user_host+0x68>
    1cbc:	mov	r0, r5
    1cc0:	mov	r1, #64	; 0x40
    1cc4:	bl	eb4 <strchr@plt>
    1cc8:	cmp	r0, #0
    1ccc:	moveq	r0, #1
    1cd0:	popeq	{r4, r5, r6, sl, fp, pc}
    1cd4:	ldr	r1, [pc, #16]	; 1cec <valid_user_host+0x80>
    1cd8:	add	r1, pc, r1
    1cdc:	mov	r0, r4
    1ce0:	bl	efc <sendto_one_notice@plt>
    1ce4:	mov	r0, #0
    1ce8:	pop	{r4, r5, r6, sl, fp, pc}
    1cec:	.word	0x0000103e

00001cf0 <already_placed_kline>:
    1cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1cf4:	add	fp, sp, #28
    1cf8:	sub	sp, sp, #148	; 0x94
    1cfc:	mov	r9, r3
    1d00:	mov	r4, r2
    1d04:	mov	sl, r1
    1d08:	mov	r8, r0
    1d0c:	mov	r0, r2
    1d10:	mov	r1, #64	; 0x40
    1d14:	mov	r2, sl
    1d18:	bl	f20 <find_exact_conf_by_address@plt>
    1d1c:	mov	r7, r0
    1d20:	cmp	r0, #0
    1d24:	bne	1dd0 <already_placed_kline+0xe0>
    1d28:	ldr	r0, [pc, #276]	; 1e44 <already_placed_kline+0x154>
    1d2c:	ldr	r0, [pc, r0]
    1d30:	ldr	r0, [r0, #140]	; 0x8c
    1d34:	cmp	r0, #0
    1d38:	beq	1dd0 <already_placed_kline+0xe0>
    1d3c:	mov	r6, #0
    1d40:	str	r6, [sp, #16]
    1d44:	add	r7, sp, #20
    1d48:	add	r2, sp, #16
    1d4c:	mov	r0, r4
    1d50:	mov	r1, r7
    1d54:	bl	d7c <parse_netmask_strict@plt>
    1d58:	cmp	r0, #2
    1d5c:	beq	1d6c <already_placed_kline+0x7c>
    1d60:	cmp	r0, #3
    1d64:	movne	r7, #0
    1d68:	moveq	r0, #10
    1d6c:	mov	r1, #64	; 0x40
    1d70:	str	r1, [sp]
    1d74:	stmib	sp, {r0, sl}
    1d78:	str	r6, [sp, #12]
    1d7c:	mov	r0, r4
    1d80:	mov	r1, #0
    1d84:	mov	r2, #0
    1d88:	mov	r3, r7
    1d8c:	bl	dac <find_conf_by_address@plt>
    1d90:	cmp	r0, #0
    1d94:	beq	1e38 <already_placed_kline+0x148>
    1d98:	mov	r7, r0
    1d9c:	ldr	r0, [r0, #16]
    1da0:	mov	r1, #47	; 0x2f
    1da4:	bl	eb4 <strchr@plt>
    1da8:	ldr	r5, [sp, #16]
    1dac:	cmp	r5, #1
    1db0:	blt	1dd8 <already_placed_kline+0xe8>
    1db4:	cmp	r0, #0
    1db8:	beq	1e38 <already_placed_kline+0x148>
    1dbc:	add	r0, r0, #1
    1dc0:	bl	f14 <atoi@plt>
    1dc4:	cmp	r5, r0
    1dc8:	bge	1dd8 <already_placed_kline+0xe8>
    1dcc:	b	1e38 <already_placed_kline+0x148>
    1dd0:	cmp	r7, #0
    1dd4:	beq	1e34 <already_placed_kline+0x144>
    1dd8:	cmp	r9, #0
    1ddc:	bne	1df0 <already_placed_kline+0x100>
    1de0:	ldrb	r0, [r7, #6]
    1de4:	mov	r6, #0
    1de8:	tst	r0, #128	; 0x80
    1dec:	bne	1e38 <already_placed_kline+0x148>
    1df0:	ldr	r0, [r7, #16]
    1df4:	ldr	r1, [r7, #20]
    1df8:	ldr	r2, [r7, #28]
    1dfc:	ldr	r3, [pc, #68]	; 1e48 <already_placed_kline+0x158>
    1e00:	add	r3, pc, r3
    1e04:	cmp	r1, #0
    1e08:	movne	r3, r1
    1e0c:	str	r2, [sp]
    1e10:	stmib	sp, {r0, r3}
    1e14:	ldr	r1, [pc, #48]	; 1e4c <already_placed_kline+0x15c>
    1e18:	add	r1, pc, r1
    1e1c:	mov	r0, r8
    1e20:	mov	r2, sl
    1e24:	mov	r3, r4
    1e28:	bl	efc <sendto_one_notice@plt>
    1e2c:	mov	r6, #1
    1e30:	b	1e38 <already_placed_kline+0x148>
    1e34:	mov	r6, #0
    1e38:	mov	r0, r6
    1e3c:	sub	sp, fp, #28
    1e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e44:	.word	0x000123b4
    1e48:	.word	0x00000f26
    1e4c:	.word	0x00000f1a

00001e50 <rb_strdup>:
    1e50:	push	{r4, r5, fp, lr}
    1e54:	add	fp, sp, #8
    1e58:	mov	r4, r0
    1e5c:	bl	ea8 <strlen@plt>
    1e60:	add	r0, r0, #1
    1e64:	bl	e78 <malloc@plt>
    1e68:	cmp	r0, #0
    1e6c:	beq	1e84 <rb_strdup+0x34>
    1e70:	mov	r5, r0
    1e74:	mov	r1, r4
    1e78:	bl	e48 <strcpy@plt>
    1e7c:	mov	r0, r5
    1e80:	pop	{r4, r5, fp, pc}
    1e84:	bl	dd0 <rb_outofmemory@plt>

00001e88 <apply_prop_kline>:
    1e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e8c:	add	fp, sp, #28
    1e90:	sub	sp, sp, #44	; 0x2c
    1e94:	mov	r9, r3
    1e98:	mov	r8, r2
    1e9c:	mov	r7, r1
    1ea0:	mov	sl, r0
    1ea4:	ldr	r0, [r1, #4]
    1ea8:	orr	r0, r0, #8912896	; 0x880000
    1eac:	str	r0, [r1, #4]
    1eb0:	ldr	r5, [fp, #8]
    1eb4:	bl	d88 <rb_current_time@plt>
    1eb8:	add	r0, r0, r5
    1ebc:	str	r0, [r7, #36]	; 0x24
    1ec0:	str	r0, [r7, #44]	; 0x2c
    1ec4:	mov	r0, r7
    1ec8:	bl	dc4 <replace_old_ban@plt>
    1ecc:	bl	e9c <rb_make_rb_dlink_node@plt>
    1ed0:	mov	r1, r0
    1ed4:	mov	r0, r7
    1ed8:	bl	23dc <rb_dlinkAdd>
    1edc:	ldr	r0, [r7, #16]
    1ee0:	ldr	r2, [r7, #28]
    1ee4:	str	r7, [sp]
    1ee8:	mov	r1, #64	; 0x40
    1eec:	mov	r3, #0
    1ef0:	bl	e84 <add_conf_by_address@plt>
    1ef4:	cmp	r9, #0
    1ef8:	ldrbne	r0, [r9]
    1efc:	cmpne	r0, #0
    1f00:	bne	1f78 <apply_prop_kline+0xf0>
    1f04:	mov	r0, sl
    1f08:	bl	e0c <get_oper_name@plt>
    1f0c:	mov	r3, r0
    1f10:	ldr	r0, [r7, #16]
    1f14:	ldr	r1, [r7, #28]
    1f18:	movw	r2, #34953	; 0x8889
    1f1c:	movt	r2, #34952	; 0x8888
    1f20:	smmla	r2, r5, r2, r5
    1f24:	asr	r4, r2, #5
    1f28:	add	r4, r4, r2, lsr #31
    1f2c:	str	r4, [sp]
    1f30:	str	r1, [sp, #4]
    1f34:	str	r0, [sp, #8]
    1f38:	str	r8, [sp, #12]
    1f3c:	ldr	r2, [pc, #380]	; 20c0 <apply_prop_kline+0x238>
    1f40:	add	r2, pc, r2
    1f44:	mov	r0, #256	; 0x100
    1f48:	mov	r1, #0
    1f4c:	bl	de8 <sendto_realops_snomask@plt>
    1f50:	mov	r0, sl
    1f54:	bl	e0c <get_oper_name@plt>
    1f58:	mov	r2, r0
    1f5c:	ldr	r0, [r7, #16]
    1f60:	ldr	r1, [r7, #28]
    1f64:	str	r1, [sp]
    1f68:	stmib	sp, {r0, r8}
    1f6c:	ldr	r1, [pc, #336]	; 20c4 <apply_prop_kline+0x23c>
    1f70:	add	r1, pc, r1
    1f74:	b	1fe8 <apply_prop_kline+0x160>
    1f78:	mov	r0, sl
    1f7c:	bl	e0c <get_oper_name@plt>
    1f80:	mov	r3, r0
    1f84:	ldr	r0, [r7, #16]
    1f88:	ldr	r1, [r7, #28]
    1f8c:	movw	r2, #34953	; 0x8889
    1f90:	movt	r2, #34952	; 0x8888
    1f94:	smmla	r2, r5, r2, r5
    1f98:	asr	r4, r2, #5
    1f9c:	add	r4, r4, r2, lsr #31
    1fa0:	str	r4, [sp]
    1fa4:	str	r1, [sp, #4]
    1fa8:	add	r1, sp, #8
    1fac:	stm	r1, {r0, r8, r9}
    1fb0:	ldr	r2, [pc, #272]	; 20c8 <apply_prop_kline+0x240>
    1fb4:	add	r2, pc, r2
    1fb8:	mov	r0, #256	; 0x100
    1fbc:	mov	r1, #0
    1fc0:	bl	de8 <sendto_realops_snomask@plt>
    1fc4:	mov	r0, sl
    1fc8:	bl	e0c <get_oper_name@plt>
    1fcc:	mov	r2, r0
    1fd0:	ldr	r0, [r7, #16]
    1fd4:	ldr	r1, [r7, #28]
    1fd8:	str	r1, [sp]
    1fdc:	stmib	sp, {r0, r8, r9}
    1fe0:	ldr	r1, [pc, #228]	; 20cc <apply_prop_kline+0x244>
    1fe4:	add	r1, pc, r1
    1fe8:	mov	r0, #7
    1fec:	mov	r3, r4
    1ff0:	bl	ecc <ilog@plt>
    1ff4:	ldr	r0, [r7, #16]
    1ff8:	ldr	r3, [r7, #28]
    1ffc:	str	r0, [sp]
    2000:	movw	r0, #34953	; 0x8889
    2004:	movt	r0, #34952	; 0x8888
    2008:	smmla	r0, r5, r0, r5
    200c:	asr	r1, r0, #5
    2010:	add	r2, r1, r0, lsr #31
    2014:	ldr	r1, [pc, #180]	; 20d0 <apply_prop_kline+0x248>
    2018:	add	r1, pc, r1
    201c:	mov	r0, sl
    2020:	bl	efc <sendto_one_notice@plt>
    2024:	ldr	r0, [pc, #168]	; 20d4 <apply_prop_kline+0x24c>
    2028:	ldr	r0, [pc, r0]
    202c:	ldr	ip, [r0]
    2030:	ldr	r1, [pc, #160]	; 20d8 <apply_prop_kline+0x250>
    2034:	ldr	r1, [pc, r1]
    2038:	ldr	lr, [r1]
    203c:	add	r4, r7, #36	; 0x24
    2040:	ldm	r4, {r2, r3, r4}
    2044:	ldr	r5, [r7, #16]
    2048:	ldr	r7, [r7, #28]
    204c:	ldr	r0, [pc, #136]	; 20dc <apply_prop_kline+0x254>
    2050:	add	r0, pc, r0
    2054:	cmp	r9, #0
    2058:	mov	r6, r0
    205c:	movne	r6, r9
    2060:	ldr	r1, [pc, #120]	; 20e0 <apply_prop_kline+0x258>
    2064:	add	r1, pc, r1
    2068:	cmp	r9, #0
    206c:	moveq	r1, r0
    2070:	str	r1, [sp, #32]
    2074:	str	r6, [sp, #36]	; 0x24
    2078:	add	r0, sl, #396	; 0x18c
    207c:	ldr	r1, [pc, #96]	; 20e4 <apply_prop_kline+0x25c>
    2080:	add	r1, pc, r1
    2084:	sub	r4, r4, r3
    2088:	sub	r2, r2, r3
    208c:	str	r1, [sp]
    2090:	stmib	sp, {r0, r7}
    2094:	str	r5, [sp, #12]
    2098:	str	r3, [sp, #16]
    209c:	add	r0, sp, #20
    20a0:	stm	r0, {r2, r4, r8}
    20a4:	orr	r2, ip, lr
    20a8:	mov	r0, #0
    20ac:	mov	r1, #0
    20b0:	mov	r3, #0
    20b4:	bl	e54 <sendto_server@plt>
    20b8:	sub	sp, fp, #28
    20bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    20c0:	.word	0x00000e1b
    20c4:	.word	0x00000e1b
    20c8:	.word	0x00000de8
    20cc:	.word	0x00000deb
    20d0:	.word	0x00000dcb
    20d4:	.word	0x0001209c
    20d8:	.word	0x0001208c
    20dc:	.word	0x00001089
    20e0:	.word	0x00000dc8
    20e4:	.word	0x00000d88

000020e8 <apply_tkline>:
    20e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    20ec:	add	fp, sp, #24
    20f0:	sub	sp, sp, #24
    20f4:	mov	r7, r3
    20f8:	mov	r6, r2
    20fc:	mov	r5, r1
    2100:	mov	r4, r0
    2104:	ldr	r9, [fp, #8]
    2108:	bl	d88 <rb_current_time@plt>
    210c:	add	r0, r0, r9
    2110:	str	r0, [r5, #36]	; 0x24
    2114:	mov	r0, r5
    2118:	bl	db8 <add_temp_kline@plt>
    211c:	cmp	r7, #0
    2120:	ldrbne	r0, [r7]
    2124:	cmpne	r0, #0
    2128:	bne	21a8 <apply_tkline+0xc0>
    212c:	mov	r0, r4
    2130:	bl	e0c <get_oper_name@plt>
    2134:	mov	r3, r0
    2138:	ldr	r0, [r5, #16]
    213c:	ldr	r1, [r5, #28]
    2140:	movw	r2, #34953	; 0x8889
    2144:	movt	r2, #34952	; 0x8888
    2148:	smmla	r2, r9, r2, r9
    214c:	asr	r7, r2, #5
    2150:	add	r7, r7, r2, lsr #31
    2154:	str	r7, [sp]
    2158:	str	r1, [sp, #4]
    215c:	str	r0, [sp, #8]
    2160:	str	r6, [sp, #12]
    2164:	ldr	r2, [pc, #244]	; 2260 <apply_tkline+0x178>
    2168:	add	r2, pc, r2
    216c:	mov	r0, #256	; 0x100
    2170:	mov	r1, #0
    2174:	bl	de8 <sendto_realops_snomask@plt>
    2178:	mov	r0, r4
    217c:	bl	e0c <get_oper_name@plt>
    2180:	mov	r2, r0
    2184:	ldr	r0, [r5, #16]
    2188:	ldr	r1, [r5, #28]
    218c:	str	r1, [sp]
    2190:	stmib	sp, {r0, r6}
    2194:	ldr	r1, [pc, #200]	; 2264 <apply_tkline+0x17c>
    2198:	add	r1, pc, r1
    219c:	mov	r0, #7
    21a0:	mov	r3, r7
    21a4:	b	2224 <apply_tkline+0x13c>
    21a8:	mov	r0, r4
    21ac:	bl	e0c <get_oper_name@plt>
    21b0:	mov	ip, r0
    21b4:	ldr	r0, [r5, #16]
    21b8:	ldr	r1, [r5, #28]
    21bc:	movw	r2, #34953	; 0x8889
    21c0:	movt	r2, #34952	; 0x8888
    21c4:	smmla	r2, r9, r2, r9
    21c8:	asr	r3, r2, #5
    21cc:	add	r8, r3, r2, lsr #31
    21d0:	str	r8, [sp]
    21d4:	str	r1, [sp, #4]
    21d8:	add	r1, sp, #8
    21dc:	stm	r1, {r0, r6, r7}
    21e0:	ldr	r2, [pc, #128]	; 2268 <apply_tkline+0x180>
    21e4:	add	r2, pc, r2
    21e8:	mov	r0, #256	; 0x100
    21ec:	mov	r1, #0
    21f0:	mov	r3, ip
    21f4:	bl	de8 <sendto_realops_snomask@plt>
    21f8:	mov	r0, r4
    21fc:	bl	e0c <get_oper_name@plt>
    2200:	mov	r2, r0
    2204:	ldr	r0, [r5, #16]
    2208:	ldr	r1, [r5, #28]
    220c:	str	r1, [sp]
    2210:	stmib	sp, {r0, r6, r7}
    2214:	ldr	r1, [pc, #80]	; 226c <apply_tkline+0x184>
    2218:	add	r1, pc, r1
    221c:	mov	r0, #7
    2220:	mov	r3, r8
    2224:	bl	ecc <ilog@plt>
    2228:	ldr	r0, [r5, #16]
    222c:	ldr	r3, [r5, #28]
    2230:	str	r0, [sp]
    2234:	movw	r0, #34953	; 0x8889
    2238:	movt	r0, #34952	; 0x8888
    223c:	smmla	r0, r9, r0, r9
    2240:	asr	r1, r0, #5
    2244:	add	r2, r1, r0, lsr #31
    2248:	ldr	r1, [pc, #32]	; 2270 <apply_tkline+0x188>
    224c:	add	r1, pc, r1
    2250:	mov	r0, r4
    2254:	bl	efc <sendto_one_notice@plt>
    2258:	sub	sp, fp, #24
    225c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2260:	.word	0x00000d41
    2264:	.word	0x00000bf3
    2268:	.word	0x00000cf8
    226c:	.word	0x00000bb7
    2270:	.word	0x00000cc6

00002274 <apply_kline>:
    2274:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2278:	add	fp, sp, #24
    227c:	sub	sp, sp, #16
    2280:	mov	r7, r3
    2284:	mov	r6, r2
    2288:	mov	r5, r1
    228c:	mov	r4, r0
    2290:	ldr	r0, [r1, #16]
    2294:	ldr	r2, [r1, #28]
    2298:	str	r1, [sp]
    229c:	mov	r8, #0
    22a0:	mov	r1, #64	; 0x40
    22a4:	mov	r3, #0
    22a8:	bl	e84 <add_conf_by_address@plt>
    22ac:	ldr	r3, [r5, #16]
    22b0:	ldr	r2, [r5, #28]
    22b4:	cmp	r7, #0
    22b8:	beq	233c <apply_kline+0xc8>
    22bc:	ldrb	r0, [r7]
    22c0:	cmp	r0, #0
    22c4:	movne	r0, r7
    22c8:	str	r6, [sp]
    22cc:	stmib	sp, {r0, r8}
    22d0:	mov	r0, #0
    22d4:	mov	r1, r4
    22d8:	bl	df4 <bandb_add@plt>
    22dc:	ldrb	r0, [r7]
    22e0:	cmp	r0, #0
    22e4:	beq	2350 <apply_kline+0xdc>
    22e8:	mov	r0, r4
    22ec:	bl	e0c <get_oper_name@plt>
    22f0:	mov	r3, r0
    22f4:	ldr	r0, [r5, #16]
    22f8:	ldr	r1, [r5, #28]
    22fc:	str	r1, [sp]
    2300:	stmib	sp, {r0, r6, r7}
    2304:	ldr	r2, [pc, #188]	; 23c8 <apply_kline+0x154>
    2308:	add	r2, pc, r2
    230c:	mov	r0, #256	; 0x100
    2310:	mov	r1, #0
    2314:	bl	de8 <sendto_realops_snomask@plt>
    2318:	mov	r0, r4
    231c:	bl	e0c <get_oper_name@plt>
    2320:	mov	r2, r0
    2324:	ldr	r0, [r5, #16]
    2328:	ldr	r3, [r5, #28]
    232c:	stm	sp, {r0, r6, r7}
    2330:	ldr	r1, [pc, #148]	; 23cc <apply_kline+0x158>
    2334:	add	r1, pc, r1
    2338:	b	23a0 <apply_kline+0x12c>
    233c:	stm	sp, {r6, r8}
    2340:	str	r8, [sp, #8]
    2344:	mov	r0, #0
    2348:	mov	r1, r4
    234c:	bl	df4 <bandb_add@plt>
    2350:	mov	r0, r4
    2354:	bl	e0c <get_oper_name@plt>
    2358:	mov	r3, r0
    235c:	ldr	r0, [r5, #16]
    2360:	ldr	r1, [r5, #28]
    2364:	str	r1, [sp]
    2368:	stmib	sp, {r0, r6}
    236c:	ldr	r2, [pc, #92]	; 23d0 <apply_kline+0x15c>
    2370:	add	r2, pc, r2
    2374:	mov	r0, #256	; 0x100
    2378:	mov	r1, #0
    237c:	bl	de8 <sendto_realops_snomask@plt>
    2380:	mov	r0, r4
    2384:	bl	e0c <get_oper_name@plt>
    2388:	mov	r2, r0
    238c:	ldr	r0, [r5, #16]
    2390:	ldr	r3, [r5, #28]
    2394:	stm	sp, {r0, r6}
    2398:	ldr	r1, [pc, #52]	; 23d4 <apply_kline+0x160>
    239c:	add	r1, pc, r1
    23a0:	mov	r0, #7
    23a4:	bl	ecc <ilog@plt>
    23a8:	ldr	r3, [r5, #16]
    23ac:	ldr	r2, [r5, #28]
    23b0:	ldr	r1, [pc, #32]	; 23d8 <apply_kline+0x164>
    23b4:	add	r1, pc, r1
    23b8:	mov	r0, r4
    23bc:	sub	sp, fp, #24
    23c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    23c4:	b	efc <sendto_one_notice@plt>
    23c8:	.word	0x00000c63
    23cc:	.word	0x00000c5b
    23d0:	.word	0x00000bca
    23d4:	.word	0x00000bbf
    23d8:	.word	0x00000bee

000023dc <rb_dlinkAdd>:
    23dc:	push	{fp, lr}
    23e0:	mov	fp, sp
    23e4:	cmp	r0, #0
    23e8:	beq	2444 <rb_dlinkAdd+0x68>
    23ec:	cmp	r1, #0
    23f0:	beq	2464 <rb_dlinkAdd+0x88>
    23f4:	mov	r2, #0
    23f8:	stm	r1, {r0, r2}
    23fc:	ldr	r0, [pc, #128]	; 2484 <rb_dlinkAdd+0xa8>
    2400:	ldr	r0, [pc, r0]
    2404:	ldr	r2, [r0]
    2408:	str	r2, [r1, #8]
    240c:	cmp	r2, #0
    2410:	beq	2420 <rb_dlinkAdd+0x44>
    2414:	add	r2, r2, #4
    2418:	str	r1, [r2]
    241c:	b	2430 <rb_dlinkAdd+0x54>
    2420:	mov	r2, r0
    2424:	ldr	r3, [r2, #4]!
    2428:	cmp	r3, #0
    242c:	streq	r1, [r2]
    2430:	str	r1, [r0]
    2434:	ldr	r1, [r0, #8]
    2438:	add	r1, r1, #1
    243c:	str	r1, [r0, #8]
    2440:	pop	{fp, pc}
    2444:	ldr	r0, [pc, #60]	; 2488 <rb_dlinkAdd+0xac>
    2448:	add	r0, pc, r0
    244c:	ldr	r1, [pc, #56]	; 248c <rb_dlinkAdd+0xb0>
    2450:	add	r1, pc, r1
    2454:	ldr	r3, [pc, #52]	; 2490 <rb_dlinkAdd+0xb4>
    2458:	add	r3, pc, r3
    245c:	mov	r2, #143	; 0x8f
    2460:	bl	f5c <__assert_fail@plt>
    2464:	ldr	r0, [pc, #40]	; 2494 <rb_dlinkAdd+0xb8>
    2468:	add	r0, pc, r0
    246c:	ldr	r1, [pc, #36]	; 2498 <rb_dlinkAdd+0xbc>
    2470:	add	r1, pc, r1
    2474:	ldr	r3, [pc, #32]	; 249c <rb_dlinkAdd+0xc0>
    2478:	add	r3, pc, r3
    247c:	mov	r2, #144	; 0x90
    2480:	bl	f5c <__assert_fail@plt>
    2484:	.word	0x00011cbc
    2488:	.word	0x000009e6
    248c:	.word	0x000009eb
    2490:	.word	0x000009ff
    2494:	.word	0x00000a2a
    2498:	.word	0x000009cb
    249c:	.word	0x000009df

000024a0 <handle_remote_kline>:
    24a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    24a4:	add	fp, sp, #28
    24a8:	sub	sp, sp, #4
    24ac:	mov	sl, r3
    24b0:	mov	r5, r2
    24b4:	mov	r9, r1
    24b8:	mov	r4, r0
    24bc:	ldr	r7, [fp, #8]
    24c0:	mov	r0, r7
    24c4:	bl	ea8 <strlen@plt>
    24c8:	add	r0, r0, #8
    24cc:	bic	r0, r0, #7
    24d0:	sub	r6, sp, r0
    24d4:	mov	sp, r6
    24d8:	mov	r0, r6
    24dc:	mov	r1, r7
    24e0:	bl	e48 <strcpy@plt>
    24e4:	mov	r3, #2
    24e8:	cmp	r9, #0
    24ec:	movwgt	r3, #1
    24f0:	ldr	r2, [r4, #32]
    24f4:	add	r0, r4, #152	; 0x98
    24f8:	add	r1, r4, #163	; 0xa3
    24fc:	add	r2, r2, #88	; 0x58
    2500:	bl	f38 <find_shared_conf@plt>
    2504:	cmp	r0, #0
    2508:	beq	2664 <handle_remote_kline+0x1c4>
    250c:	mov	r0, r4
    2510:	mov	r1, r5
    2514:	mov	r2, sl
    2518:	bl	1c6c <valid_user_host>
    251c:	cmp	r0, #0
    2520:	beq	2664 <handle_remote_kline+0x1c4>
    2524:	mov	r0, r5
    2528:	mov	r1, sl
    252c:	bl	e6c <valid_wild_card@plt>
    2530:	cmp	r0, #0
    2534:	beq	25e8 <handle_remote_kline+0x148>
    2538:	mov	r0, r4
    253c:	mov	r1, r5
    2540:	mov	r2, sl
    2544:	mov	r3, r9
    2548:	bl	1cf0 <already_placed_kline>
    254c:	cmp	r0, #0
    2550:	bne	2664 <handle_remote_kline+0x1c4>
    2554:	bl	d70 <make_conf@plt>
    2558:	mov	r8, r0
    255c:	mov	r0, #64	; 0x40
    2560:	str	r0, [r8]
    2564:	bl	d88 <rb_current_time@plt>
    2568:	str	r0, [r8, #40]	; 0x28
    256c:	mov	r0, r5
    2570:	bl	1e50 <rb_strdup>
    2574:	str	r0, [r8, #28]
    2578:	mov	r0, sl
    257c:	bl	1e50 <rb_strdup>
    2580:	str	r0, [r8, #16]
    2584:	mov	r0, r4
    2588:	bl	e0c <get_oper_name@plt>
    258c:	bl	e30 <operhash_add@plt>
    2590:	str	r0, [r8, #12]
    2594:	mov	r0, r6
    2598:	bl	ea8 <strlen@plt>
    259c:	movw	r1, #391	; 0x187
    25a0:	cmp	r0, r1
    25a4:	movcs	r0, #0
    25a8:	strbcs	r0, [r6, #390]	; 0x186
    25ac:	mov	r0, r6
    25b0:	mov	r1, #124	; 0x7c
    25b4:	bl	eb4 <strchr@plt>
    25b8:	cmp	r0, #0
    25bc:	beq	260c <handle_remote_kline+0x16c>
    25c0:	mov	r5, r0
    25c4:	mov	r0, #0
    25c8:	strb	r0, [r5]
    25cc:	ldrb	r0, [r5, #1]!
    25d0:	cmp	r0, #0
    25d4:	beq	2610 <handle_remote_kline+0x170>
    25d8:	mov	r0, r5
    25dc:	bl	1e50 <rb_strdup>
    25e0:	str	r0, [r8, #24]
    25e4:	b	2610 <handle_remote_kline+0x170>
    25e8:	ldr	r0, [pc, #124]	; 266c <handle_remote_kline+0x1cc>
    25ec:	ldr	r0, [pc, r0]
    25f0:	ldr	r2, [r0, #236]	; 0xec
    25f4:	ldr	r1, [pc, #116]	; 2670 <handle_remote_kline+0x1d0>
    25f8:	add	r1, pc, r1
    25fc:	mov	r0, r4
    2600:	bl	efc <sendto_one_notice@plt>
    2604:	sub	sp, fp, #28
    2608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    260c:	mov	r5, #0
    2610:	mov	r0, r6
    2614:	bl	1e50 <rb_strdup>
    2618:	str	r0, [r8, #20]
    261c:	cmp	r9, #1
    2620:	blt	2648 <handle_remote_kline+0x1a8>
    2624:	sub	sp, sp, #8
    2628:	str	r9, [sp]
    262c:	mov	r0, r4
    2630:	mov	r1, r8
    2634:	mov	r2, r6
    2638:	mov	r3, r5
    263c:	bl	20e8 <apply_tkline>
    2640:	add	sp, sp, #8
    2644:	b	265c <handle_remote_kline+0x1bc>
    2648:	mov	r0, r4
    264c:	mov	r1, r8
    2650:	mov	r2, r6
    2654:	mov	r3, r5
    2658:	bl	2274 <apply_kline>
    265c:	mov	r0, r8
    2660:	bl	e3c <check_one_kline@plt>
    2664:	sub	sp, fp, #28
    2668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    266c:	.word	0x00011af4
    2670:	.word	0x00000690

00002674 <remove_prop_kline>:
    2674:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2678:	add	fp, sp, #28
    267c:	sub	sp, sp, #28
    2680:	mov	r4, r1
    2684:	mov	r6, r0
    2688:	mov	r0, r1
    268c:	bl	29d8 <rb_dlinkFind>
    2690:	cmp	r0, #0
    2694:	subeq	sp, fp, #28
    2698:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    269c:	mov	r9, r0
    26a0:	ldr	r3, [r4, #16]
    26a4:	ldr	r2, [r4, #28]
    26a8:	ldr	r1, [pc, #304]	; 27e0 <remove_prop_kline+0x16c>
    26ac:	add	r1, pc, r1
    26b0:	mov	r0, r6
    26b4:	bl	efc <sendto_one_notice@plt>
    26b8:	mov	r0, r6
    26bc:	bl	e0c <get_oper_name@plt>
    26c0:	mov	r3, r0
    26c4:	ldr	r0, [r4, #16]
    26c8:	ldr	r1, [r4, #28]
    26cc:	str	r1, [sp]
    26d0:	str	r0, [sp, #4]
    26d4:	mov	r8, #0
    26d8:	ldr	r2, [pc, #260]	; 27e4 <remove_prop_kline+0x170>
    26dc:	add	r2, pc, r2
    26e0:	mov	r0, #256	; 0x100
    26e4:	mov	r1, #0
    26e8:	bl	de8 <sendto_realops_snomask@plt>
    26ec:	mov	r0, r6
    26f0:	bl	e0c <get_oper_name@plt>
    26f4:	mov	r2, r0
    26f8:	ldr	r0, [r4, #16]
    26fc:	ldr	r3, [r4, #28]
    2700:	str	r0, [sp]
    2704:	ldr	r1, [pc, #220]	; 27e8 <remove_prop_kline+0x174>
    2708:	add	r1, pc, r1
    270c:	mov	r0, #7
    2710:	bl	ecc <ilog@plt>
    2714:	bl	d88 <rb_current_time@plt>
    2718:	mov	sl, r0
    271c:	ldr	r0, [r4, #12]
    2720:	ldr	r1, [r4, #40]	; 0x28
    2724:	cmp	r1, sl
    2728:	mov	r2, sl
    272c:	addge	r2, r1, #1
    2730:	str	r2, [r4, #36]	; 0x24
    2734:	str	r2, [r4, #40]	; 0x28
    2738:	bl	ddc <operhash_delete@plt>
    273c:	mov	r0, r6
    2740:	bl	e0c <get_oper_name@plt>
    2744:	bl	e30 <operhash_add@plt>
    2748:	str	r0, [r4, #12]
    274c:	ldr	r0, [r4, #4]
    2750:	ldr	ip, [r4, #16]
    2754:	ldr	r2, [r4, #28]
    2758:	ldr	r3, [r4, #40]	; 0x28
    275c:	ldr	r5, [r4, #44]	; 0x2c
    2760:	orr	r0, r0, #8912896	; 0x880000
    2764:	str	r0, [r4, #4]
    2768:	sub	r0, r5, r3
    276c:	ldr	r5, [pc, #120]	; 27ec <remove_prop_kline+0x178>
    2770:	ldr	r5, [pc, r5]
    2774:	ldr	r5, [r5]
    2778:	ldr	r7, [pc, #112]	; 27f0 <remove_prop_kline+0x17c>
    277c:	ldr	r7, [pc, r7]
    2780:	ldr	r7, [r7]
    2784:	add	r6, r6, #396	; 0x18c
    2788:	ldr	r1, [pc, #100]	; 27f4 <remove_prop_kline+0x180>
    278c:	add	r1, pc, r1
    2790:	stm	sp, {r1, r6}
    2794:	str	r2, [sp, #8]
    2798:	str	ip, [sp, #12]
    279c:	str	r3, [sp, #16]
    27a0:	str	r8, [sp, #20]
    27a4:	str	r0, [sp, #24]
    27a8:	orr	r2, r5, r7
    27ac:	mov	r0, #0
    27b0:	mov	r1, #0
    27b4:	mov	r3, #0
    27b8:	bl	e54 <sendto_server@plt>
    27bc:	ldr	r1, [r4, #16]
    27c0:	ldr	r0, [r4, #28]
    27c4:	bl	ef0 <remove_reject_mask@plt>
    27c8:	mov	r0, r4
    27cc:	mov	r1, r9
    27d0:	mov	r2, sl
    27d4:	sub	sp, fp, #28
    27d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    27dc:	b	e00 <deactivate_conf@plt>
    27e0:	.word	0x00000979
    27e4:	.word	0x00000970
    27e8:	.word	0x00000972
    27ec:	.word	0x00011954
    27f0:	.word	0x00011944
    27f4:	.word	0x000008fa

000027f8 <remove_temp_kline>:
    27f8:	push	{r4, r5, r6, r7, fp, lr}
    27fc:	add	fp, sp, #16
    2800:	sub	sp, sp, #8
    2804:	mov	r4, r1
    2808:	mov	r7, r0
    280c:	mov	r0, #0
    2810:	ldr	r1, [pc, #244]	; 290c <remove_temp_kline+0x114>
    2814:	ldr	r1, [pc, r1]
    2818:	add	r2, r0, r0, lsl #1
    281c:	mov	r6, r1
    2820:	ldr	r5, [r6, r2, lsl #2]!
    2824:	cmp	r5, #0
    2828:	bne	283c <remove_temp_kline+0x44>
    282c:	b	284c <remove_temp_kline+0x54>
    2830:	ldr	r5, [r5, #8]
    2834:	cmp	r5, #0
    2838:	beq	284c <remove_temp_kline+0x54>
    283c:	ldr	r2, [r5]
    2840:	cmp	r2, r4
    2844:	bne	2830 <remove_temp_kline+0x38>
    2848:	b	2864 <remove_temp_kline+0x6c>
    284c:	add	r0, r0, #1
    2850:	cmp	r0, #4
    2854:	bcc	2818 <remove_temp_kline+0x20>
    2858:	mov	r0, #0
    285c:	sub	sp, fp, #16
    2860:	pop	{r4, r5, r6, r7, fp, pc}
    2864:	ldr	r3, [r4, #16]
    2868:	ldr	r2, [r4, #28]
    286c:	ldr	r1, [pc, #156]	; 2910 <remove_temp_kline+0x118>
    2870:	add	r1, pc, r1
    2874:	mov	r0, r7
    2878:	bl	efc <sendto_one_notice@plt>
    287c:	mov	r0, r7
    2880:	bl	e0c <get_oper_name@plt>
    2884:	mov	r3, r0
    2888:	ldr	r0, [r4, #16]
    288c:	ldr	r1, [r4, #28]
    2890:	str	r1, [sp]
    2894:	str	r0, [sp, #4]
    2898:	ldr	r2, [pc, #116]	; 2914 <remove_temp_kline+0x11c>
    289c:	add	r2, pc, r2
    28a0:	mov	r0, #256	; 0x100
    28a4:	mov	r1, #0
    28a8:	bl	de8 <sendto_realops_snomask@plt>
    28ac:	mov	r0, r7
    28b0:	bl	e0c <get_oper_name@plt>
    28b4:	mov	r2, r0
    28b8:	ldr	r0, [r4, #16]
    28bc:	ldr	r3, [r4, #28]
    28c0:	str	r0, [sp]
    28c4:	ldr	r1, [pc, #76]	; 2918 <remove_temp_kline+0x120>
    28c8:	add	r1, pc, r1
    28cc:	mov	r0, #7
    28d0:	bl	ecc <ilog@plt>
    28d4:	mov	r0, r5
    28d8:	mov	r1, r6
    28dc:	bl	2a50 <rb_dlinkDelete>
    28e0:	mov	r0, r5
    28e4:	bl	e18 <rb_free_rb_dlink_node@plt>
    28e8:	ldr	r1, [r4, #16]
    28ec:	ldr	r0, [r4, #28]
    28f0:	bl	ef0 <remove_reject_mask@plt>
    28f4:	ldr	r0, [r4, #16]
    28f8:	mov	r1, r4
    28fc:	bl	ec0 <delete_one_address_conf@plt>
    2900:	mov	r0, #1
    2904:	sub	sp, fp, #16
    2908:	pop	{r4, r5, r6, r7, fp, pc}
    290c:	.word	0x000118c0
    2910:	.word	0x0000086a
    2914:	.word	0x00000868
    2918:	.word	0x000007b2

0000291c <remove_permkline_match>:
    291c:	push	{r4, r5, fp, lr}
    2920:	add	fp, sp, #8
    2924:	sub	sp, sp, #8
    2928:	mov	r4, r1
    292c:	mov	r5, r0
    2930:	ldr	r3, [r1, #16]
    2934:	ldr	r2, [r1, #28]
    2938:	ldr	r1, [pc, #140]	; 29cc <remove_permkline_match+0xb0>
    293c:	add	r1, pc, r1
    2940:	bl	efc <sendto_one_notice@plt>
    2944:	mov	r0, r5
    2948:	bl	e0c <get_oper_name@plt>
    294c:	mov	r3, r0
    2950:	ldr	r0, [r4, #16]
    2954:	ldr	r1, [r4, #28]
    2958:	str	r1, [sp]
    295c:	str	r0, [sp, #4]
    2960:	ldr	r2, [pc, #104]	; 29d0 <remove_permkline_match+0xb4>
    2964:	add	r2, pc, r2
    2968:	mov	r0, #256	; 0x100
    296c:	mov	r1, #0
    2970:	bl	de8 <sendto_realops_snomask@plt>
    2974:	mov	r0, r5
    2978:	bl	e0c <get_oper_name@plt>
    297c:	mov	r2, r0
    2980:	ldr	r0, [r4, #16]
    2984:	ldr	r3, [r4, #28]
    2988:	str	r0, [sp]
    298c:	ldr	r1, [pc, #64]	; 29d4 <remove_permkline_match+0xb8>
    2990:	add	r1, pc, r1
    2994:	mov	r0, #7
    2998:	bl	ecc <ilog@plt>
    299c:	ldr	r1, [r4, #16]
    29a0:	ldr	r0, [r4, #28]
    29a4:	bl	ef0 <remove_reject_mask@plt>
    29a8:	ldr	r2, [r4, #16]
    29ac:	ldr	r1, [r4, #28]
    29b0:	mov	r0, #0
    29b4:	bl	f08 <bandb_del@plt>
    29b8:	ldr	r0, [r4, #16]
    29bc:	mov	r1, r4
    29c0:	sub	sp, fp, #8
    29c4:	pop	{r4, r5, fp, lr}
    29c8:	b	ec0 <delete_one_address_conf@plt>
    29cc:	.word	0x0000082f
    29d0:	.word	0x00000826
    29d4:	.word	0x000006ea

000029d8 <rb_dlinkFind>:
    29d8:	cmp	r0, #0
    29dc:	beq	2a18 <rb_dlinkFind+0x40>
    29e0:	mov	r1, r0
    29e4:	ldr	r0, [pc, #84]	; 2a40 <rb_dlinkFind+0x68>
    29e8:	ldr	r0, [pc, r0]
    29ec:	ldr	r2, [r0]
    29f0:	mov	r0, #0
    29f4:	b	29fc <rb_dlinkFind+0x24>
    29f8:	ldr	r2, [r2, #8]
    29fc:	cmp	r2, #0
    2a00:	bxeq	lr
    2a04:	ldr	r3, [r2]
    2a08:	cmp	r3, r1
    2a0c:	bne	29f8 <rb_dlinkFind+0x20>
    2a10:	mov	r0, r2
    2a14:	bx	lr
    2a18:	push	{fp, lr}
    2a1c:	mov	fp, sp
    2a20:	ldr	r0, [pc, #28]	; 2a44 <rb_dlinkFind+0x6c>
    2a24:	add	r0, pc, r0
    2a28:	ldr	r1, [pc, #24]	; 2a48 <rb_dlinkFind+0x70>
    2a2c:	add	r1, pc, r1
    2a30:	ldr	r3, [pc, #20]	; 2a4c <rb_dlinkFind+0x74>
    2a34:	add	r3, pc, r3
    2a38:	movw	r2, #311	; 0x137
    2a3c:	bl	f5c <__assert_fail@plt>
    2a40:	.word	0x000116d4
    2a44:	.word	0x0000040a
    2a48:	.word	0x0000040f
    2a4c:	.word	0x00000671

00002a50 <rb_dlinkDelete>:
    2a50:	push	{fp, lr}
    2a54:	mov	fp, sp
    2a58:	cmp	r0, #0
    2a5c:	beq	2ab0 <rb_dlinkDelete+0x60>
    2a60:	cmp	r1, #0
    2a64:	beq	2ad0 <rb_dlinkDelete+0x80>
    2a68:	ldr	ip, [r0, #4]
    2a6c:	ldr	r3, [r0, #8]
    2a70:	add	r2, r3, #4
    2a74:	cmp	r3, #0
    2a78:	addeq	r2, r1, #4
    2a7c:	str	ip, [r2]
    2a80:	ldmib	r0, {r2, ip}
    2a84:	cmp	r2, #0
    2a88:	mov	r3, r1
    2a8c:	addne	r3, r2, #8
    2a90:	str	ip, [r3]
    2a94:	mov	r2, #0
    2a98:	str	r2, [r0, #4]
    2a9c:	str	r2, [r0, #8]
    2aa0:	ldr	r0, [r1, #8]
    2aa4:	sub	r0, r0, #1
    2aa8:	str	r0, [r1, #8]
    2aac:	pop	{fp, pc}
    2ab0:	ldr	r0, [pc, #56]	; 2af0 <rb_dlinkDelete+0xa0>
    2ab4:	add	r0, pc, r0
    2ab8:	ldr	r1, [pc, #52]	; 2af4 <rb_dlinkDelete+0xa4>
    2abc:	add	r1, pc, r1
    2ac0:	ldr	r3, [pc, #48]	; 2af8 <rb_dlinkDelete+0xa8>
    2ac4:	add	r3, pc, r3
    2ac8:	mov	r2, #235	; 0xeb
    2acc:	bl	f5c <__assert_fail@plt>
    2ad0:	ldr	r0, [pc, #36]	; 2afc <rb_dlinkDelete+0xac>
    2ad4:	add	r0, pc, r0
    2ad8:	ldr	r1, [pc, #32]	; 2b00 <rb_dlinkDelete+0xb0>
    2adc:	add	r1, pc, r1
    2ae0:	ldr	r3, [pc, #28]	; 2b04 <rb_dlinkDelete+0xb4>
    2ae4:	add	r3, pc, r3
    2ae8:	mov	r2, #236	; 0xec
    2aec:	bl	f5c <__assert_fail@plt>
    2af0:	.word	0x000003de
    2af4:	.word	0x0000037f
    2af8:	.word	0x00000671
    2afc:	.word	0x000003c8
    2b00:	.word	0x0000035f
    2b04:	.word	0x00000651

00002b08 <handle_remote_unkline>:
    2b08:	push	{r4, r5, r6, r7, fp, lr}
    2b0c:	add	fp, sp, #16
    2b10:	mov	r5, r2
    2b14:	mov	r6, r1
    2b18:	mov	r4, r0
    2b1c:	ldr	r2, [r0, #32]
    2b20:	add	r0, r0, #152	; 0x98
    2b24:	add	r1, r4, #163	; 0xa3
    2b28:	add	r2, r2, #88	; 0x58
    2b2c:	mov	r3, #4
    2b30:	bl	f38 <find_shared_conf@plt>
    2b34:	cmp	r0, #0
    2b38:	popeq	{r4, r5, r6, r7, fp, pc}
    2b3c:	mov	r0, r5
    2b40:	mov	r1, #64	; 0x40
    2b44:	mov	r2, r6
    2b48:	bl	f20 <find_exact_conf_by_address@plt>
    2b4c:	cmp	r0, #0
    2b50:	beq	2b70 <handle_remote_unkline+0x68>
    2b54:	mov	r7, r0
    2b58:	ldr	r0, [r0, #44]	; 0x2c
    2b5c:	cmp	r0, #0
    2b60:	beq	2b8c <handle_remote_unkline+0x84>
    2b64:	ldr	r1, [pc, #76]	; 2bb8 <handle_remote_unkline+0xb0>
    2b68:	add	r1, pc, r1
    2b6c:	b	2b78 <handle_remote_unkline+0x70>
    2b70:	ldr	r1, [pc, #60]	; 2bb4 <handle_remote_unkline+0xac>
    2b74:	add	r1, pc, r1
    2b78:	mov	r0, r4
    2b7c:	mov	r2, r6
    2b80:	mov	r3, r5
    2b84:	pop	{r4, r5, r6, r7, fp, lr}
    2b88:	b	efc <sendto_one_notice@plt>
    2b8c:	mov	r0, r4
    2b90:	mov	r1, r7
    2b94:	bl	27f8 <remove_temp_kline>
    2b98:	cmp	r0, #0
    2b9c:	beq	2ba4 <handle_remote_unkline+0x9c>
    2ba0:	pop	{r4, r5, r6, r7, fp, pc}
    2ba4:	mov	r0, r4
    2ba8:	mov	r1, r7
    2bac:	pop	{r4, r5, r6, r7, fp, lr}
    2bb0:	b	291c <remove_permkline_match>
    2bb4:	.word	0x00000465
    2bb8:	.word	0x00000486

Disassembly of section .fini:

00002bbc <_fini>:
    2bbc:	push	{r3, lr}
    2bc0:	pop	{r3, pc}
