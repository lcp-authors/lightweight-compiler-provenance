
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010e68 <.init>:
   10e68:	push	{r3, lr}
   10e6c:	bl	10f90 <_start@@Base+0x3c>
   10e70:	pop	{r3, pc}

Disassembly of section .plt:

00010e74 <calloc@plt-0x14>:
   10e74:	push	{lr}		; (str lr, [sp, #-4]!)
   10e78:	ldr	lr, [pc, #4]	; 10e84 <calloc@plt-0x4>
   10e7c:	add	lr, pc, lr
   10e80:	ldr	pc, [lr, #8]!
   10e84:	andeq	r2, r1, ip, ror r1

00010e88 <calloc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #380]!	; 0x17c

00010e94 <strcmp@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #372]!	; 0x174

00010ea0 <printf@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #364]!	; 0x16c

00010eac <__isoc99_fscanf@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #356]!	; 0x164

00010eb8 <fopen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #348]!	; 0x15c

00010ec4 <free@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #340]!	; 0x154

00010ed0 <memcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #332]!	; 0x14c

00010edc <realloc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #324]!	; 0x144

00010ee8 <strcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #316]!	; 0x13c

00010ef4 <puts@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #308]!	; 0x134

00010f00 <malloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #300]!	; 0x12c

00010f0c <__libc_start_main@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #292]!	; 0x124

00010f18 <__gmon_start__@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #284]!	; 0x11c

00010f24 <strlen@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #276]!	; 0x114

00010f30 <putchar@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #268]!	; 0x10c

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #260]!	; 0x104

00010f48 <abort@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #252]!	; 0xfc

Disassembly of section .text:

00010f54 <_start@@Base>:
   10f54:	mov	fp, #0
   10f58:	mov	lr, #0
   10f5c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f60:	mov	r2, sp
   10f64:	push	{r2}		; (str r2, [sp, #-4]!)
   10f68:	push	{r0}		; (str r0, [sp, #-4]!)
   10f6c:	ldr	ip, [pc, #16]	; 10f84 <_start@@Base+0x30>
   10f70:	push	{ip}		; (str ip, [sp, #-4]!)
   10f74:	ldr	r0, [pc, #12]	; 10f88 <_start@@Base+0x34>
   10f78:	ldr	r3, [pc, #12]	; 10f8c <_start@@Base+0x38>
   10f7c:	bl	10f0c <__libc_start_main@plt>
   10f80:	bl	10f48 <abort@plt>
   10f84:	andeq	r2, r1, ip, ror r6
   10f88:	strdeq	r1, [r1], -r4
   10f8c:	andeq	r2, r1, ip, lsl r6
   10f90:	ldr	r3, [pc, #20]	; 10fac <_start@@Base+0x58>
   10f94:	ldr	r2, [pc, #20]	; 10fb0 <_start@@Base+0x5c>
   10f98:	add	r3, pc, r3
   10f9c:	ldr	r2, [r3, r2]
   10fa0:	cmp	r2, #0
   10fa4:	bxeq	lr
   10fa8:	b	10f18 <__gmon_start__@plt>
   10fac:	andeq	r2, r1, r0, rrx
   10fb0:	andeq	r0, r0, r0, asr r0
   10fb4:	ldr	r0, [pc, #24]	; 10fd4 <_start@@Base+0x80>
   10fb8:	ldr	r3, [pc, #24]	; 10fd8 <_start@@Base+0x84>
   10fbc:	cmp	r3, r0
   10fc0:	bxeq	lr
   10fc4:	ldr	r3, [pc, #16]	; 10fdc <_start@@Base+0x88>
   10fc8:	cmp	r3, #0
   10fcc:	bxeq	lr
   10fd0:	bx	r3
   10fd4:	andeq	r3, r2, ip, asr r0
   10fd8:	andeq	r3, r2, ip, asr r0
   10fdc:	andeq	r0, r0, r0
   10fe0:	ldr	r0, [pc, #36]	; 1100c <_start@@Base+0xb8>
   10fe4:	ldr	r1, [pc, #36]	; 11010 <_start@@Base+0xbc>
   10fe8:	sub	r1, r1, r0
   10fec:	asr	r1, r1, #2
   10ff0:	add	r1, r1, r1, lsr #31
   10ff4:	asrs	r1, r1, #1
   10ff8:	bxeq	lr
   10ffc:	ldr	r3, [pc, #16]	; 11014 <_start@@Base+0xc0>
   11000:	cmp	r3, #0
   11004:	bxeq	lr
   11008:	bx	r3
   1100c:	andeq	r3, r2, ip, asr r0
   11010:	andeq	r3, r2, ip, asr r0
   11014:	andeq	r0, r0, r0
   11018:	push	{r4, lr}
   1101c:	ldr	r4, [pc, #24]	; 1103c <_start@@Base+0xe8>
   11020:	ldrb	r3, [r4]
   11024:	cmp	r3, #0
   11028:	popne	{r4, pc}
   1102c:	bl	10fb4 <_start@@Base+0x60>
   11030:	mov	r3, #1
   11034:	strb	r3, [r4]
   11038:	pop	{r4, pc}
   1103c:	andeq	r3, r2, ip, asr r0
   11040:	b	10fe0 <_start@@Base+0x8c>

00011044 <crescente@@Base>:
   11044:	str	r4, [sp, #-8]!
   11048:	str	lr, [sp, #4]
   1104c:	subs	r4, r0, #0
   11050:	beq	11074 <crescente@@Base+0x30>
   11054:	ldr	r0, [r4, #4]
   11058:	bl	11044 <crescente@@Base>
   1105c:	ldr	r1, [r4]
   11060:	movw	r0, #10296	; 0x2838
   11064:	movt	r0, #1
   11068:	bl	10ea0 <printf@plt>
   1106c:	ldr	r0, [r4, #8]
   11070:	bl	11044 <crescente@@Base>
   11074:	ldr	r4, [sp]
   11078:	add	sp, sp, #4
   1107c:	pop	{pc}		; (ldr pc, [sp], #4)

00011080 <decrescente@@Base>:
   11080:	str	r4, [sp, #-8]!
   11084:	str	lr, [sp, #4]
   11088:	subs	r4, r0, #0
   1108c:	beq	110b0 <decrescente@@Base+0x30>
   11090:	ldr	r0, [r4, #8]
   11094:	bl	11080 <decrescente@@Base>
   11098:	ldr	r1, [r4]
   1109c:	movw	r0, #10296	; 0x2838
   110a0:	movt	r0, #1
   110a4:	bl	10ea0 <printf@plt>
   110a8:	ldr	r0, [r4, #4]
   110ac:	bl	11080 <decrescente@@Base>
   110b0:	ldr	r4, [sp]
   110b4:	add	sp, sp, #4
   110b8:	pop	{pc}		; (ldr pc, [sp], #4)

000110bc <avl_imprime_ord@@Base>:
   110bc:	str	r4, [sp, #-8]!
   110c0:	str	lr, [sp, #4]
   110c4:	cmp	r1, #0
   110c8:	blt	110e0 <avl_imprime_ord@@Base+0x24>
   110cc:	ldr	r0, [r0]
   110d0:	bl	11044 <crescente@@Base>
   110d4:	ldr	r4, [sp]
   110d8:	add	sp, sp, #4
   110dc:	pop	{pc}		; (ldr pc, [sp], #4)
   110e0:	ldr	r0, [r0]
   110e4:	bl	11080 <decrescente@@Base>
   110e8:	b	110d4 <avl_imprime_ord@@Base+0x18>

000110ec <valida_passwds@@Base>:
   110ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   110f0:	strd	r6, [sp, #8]
   110f4:	strd	r8, [sp, #16]
   110f8:	str	lr, [sp, #24]
   110fc:	sub	sp, sp, #60	; 0x3c
   11100:	mov	r5, r0
   11104:	mov	r8, r1
   11108:	mov	r7, r2
   1110c:	movw	r1, #9484	; 0x250c
   11110:	movt	r1, #1
   11114:	mov	r0, #10
   11118:	bl	11f44 <tabela_nova@@Base>
   1111c:	mov	r6, r0
   11120:	movw	r4, #10300	; 0x283c
   11124:	movt	r4, #1
   11128:	mov	r3, sp
   1112c:	add	r2, sp, #28
   11130:	mov	r1, r4
   11134:	mov	r0, r5
   11138:	bl	10eac <__isoc99_fscanf@plt>
   1113c:	cmp	r0, #2
   11140:	bne	11158 <valida_passwds@@Base+0x6c>
   11144:	mov	r2, sp
   11148:	add	r1, sp, #28
   1114c:	mov	r0, r6
   11150:	bl	1206c <tabela_adiciona@@Base>
   11154:	b	11128 <valida_passwds@@Base+0x3c>
   11158:	ldr	r4, [r8]
   1115c:	ldr	r5, [r7]
   11160:	cmp	r4, #0
   11164:	cmpne	r5, #0
   11168:	beq	111cc <valida_passwds@@Base+0xe0>
   1116c:	movw	r7, #10308	; 0x2844
   11170:	movt	r7, #1
   11174:	movw	r9, #10360	; 0x2878
   11178:	movt	r9, #1
   1117c:	movw	r8, #10332	; 0x285c
   11180:	movt	r8, #1
   11184:	ldr	r2, [r5]
   11188:	ldr	r1, [r4]
   1118c:	mov	r0, r7
   11190:	bl	10ea0 <printf@plt>
   11194:	ldr	r1, [r4]
   11198:	mov	r0, r6
   1119c:	bl	1224c <tabela_valor@@Base>
   111a0:	ldr	r1, [r5]
   111a4:	bl	10e94 <strcmp@plt>
   111a8:	cmp	r0, #0
   111ac:	moveq	r0, r8
   111b0:	movne	r0, r9
   111b4:	bl	10ef4 <puts@plt>
   111b8:	ldr	r4, [r4, #4]
   111bc:	ldr	r5, [r5, #4]
   111c0:	cmp	r4, #0
   111c4:	cmpne	r5, #0
   111c8:	bne	11184 <valida_passwds@@Base+0x98>
   111cc:	mov	r0, r6
   111d0:	bl	122fc <tabela_esvazia@@Base>
   111d4:	mov	r0, r6
   111d8:	bl	10ec4 <free@plt>
   111dc:	add	sp, sp, #60	; 0x3c
   111e0:	ldrd	r4, [sp]
   111e4:	ldrd	r6, [sp, #8]
   111e8:	ldrd	r8, [sp, #16]
   111ec:	add	sp, sp, #24
   111f0:	pop	{pc}		; (ldr pc, [sp], #4)

000111f4 <main@@Base>:
   111f4:	strd	r4, [sp, #-16]!
   111f8:	str	r6, [sp, #8]
   111fc:	str	lr, [sp, #12]
   11200:	sub	sp, sp, #376	; 0x178
   11204:	movw	r3, #9868	; 0x268c
   11208:	movt	r3, #1
   1120c:	ldrd	r0, [r3]
   11210:	strd	r0, [sp, #76]	; 0x4c
   11214:	ldrd	r0, [r3, #8]
   11218:	strd	r0, [sp, #84]	; 0x54
   1121c:	ldrd	r0, [r3, #16]
   11220:	strd	r0, [sp, #92]	; 0x5c
   11224:	ldrd	r0, [r3, #24]
   11228:	strd	r0, [sp, #100]	; 0x64
   1122c:	ldrd	r0, [r3, #32]
   11230:	strd	r0, [sp, #108]	; 0x6c
   11234:	ldrd	r0, [r3, #40]	; 0x28
   11238:	strd	r0, [sp, #116]	; 0x74
   1123c:	ldr	r3, [r3, #48]	; 0x30
   11240:	str	r3, [sp, #124]	; 0x7c
   11244:	movw	r0, #10384	; 0x2890
   11248:	movt	r0, #1
   1124c:	bl	10ef4 <puts@plt>
   11250:	bl	113b8 <avl_nova@@Base>
   11254:	mov	r5, r0
   11258:	add	r4, sp, #76	; 0x4c
   1125c:	add	r6, sp, #128	; 0x80
   11260:	mov	r1, r4
   11264:	mov	r0, r5
   11268:	bl	11788 <avl_insere@@Base>
   1126c:	add	r4, r4, #4
   11270:	cmp	r4, r6
   11274:	bne	11260 <main@@Base+0x6c>
   11278:	movw	r0, #10404	; 0x28a4
   1127c:	movt	r0, #1
   11280:	bl	10ea0 <printf@plt>
   11284:	ldr	r0, [r5]
   11288:	bl	11ab4 <avl_imprime@@Base>
   1128c:	movw	r0, #10424	; 0x28b8
   11290:	movt	r0, #1
   11294:	bl	10ea0 <printf@plt>
   11298:	ldr	r0, [r5]
   1129c:	bl	11044 <crescente@@Base>
   112a0:	movw	r0, #10456	; 0x28d8
   112a4:	movt	r0, #1
   112a8:	bl	10ef4 <puts@plt>
   112ac:	movw	r4, #9868	; 0x268c
   112b0:	movt	r4, #1
   112b4:	mov	r2, #300	; 0x12c
   112b8:	add	r1, r4, #52	; 0x34
   112bc:	add	r0, sp, #76	; 0x4c
   112c0:	bl	10ed0 <memcpy@plt>
   112c4:	mov	r2, #75	; 0x4b
   112c8:	add	r1, r4, #352	; 0x160
   112cc:	mov	r0, sp
   112d0:	bl	10ed0 <memcpy@plt>
   112d4:	movw	r0, #10460	; 0x28dc
   112d8:	movt	r0, #1
   112dc:	bl	10ef4 <puts@plt>
   112e0:	movw	r1, #10480	; 0x28f0
   112e4:	movt	r1, #1
   112e8:	movw	r0, #10484	; 0x28f4
   112ec:	movt	r0, #1
   112f0:	bl	10eb8 <fopen@plt>
   112f4:	subs	r6, r0, #0
   112f8:	beq	113a4 <main@@Base+0x1b0>
   112fc:	bl	11b54 <lista_nova@@Base>
   11300:	mov	r5, r0
   11304:	mov	r2, #0
   11308:	add	r1, sp, #76	; 0x4c
   1130c:	bl	11c0c <lista_insere@@Base>
   11310:	mov	r2, #0
   11314:	add	r1, sp, #176	; 0xb0
   11318:	mov	r0, r5
   1131c:	bl	11c0c <lista_insere@@Base>
   11320:	mov	r2, #0
   11324:	add	r1, sp, #276	; 0x114
   11328:	mov	r0, r5
   1132c:	bl	11c0c <lista_insere@@Base>
   11330:	bl	11b54 <lista_nova@@Base>
   11334:	mov	r4, r0
   11338:	mov	r2, #0
   1133c:	mov	r1, sp
   11340:	bl	11c0c <lista_insere@@Base>
   11344:	mov	r2, #0
   11348:	add	r1, sp, #25
   1134c:	mov	r0, r4
   11350:	bl	11c0c <lista_insere@@Base>
   11354:	mov	r2, #0
   11358:	add	r1, sp, #50	; 0x32
   1135c:	mov	r0, r4
   11360:	bl	11c0c <lista_insere@@Base>
   11364:	mov	r2, r4
   11368:	mov	r1, r5
   1136c:	mov	r0, r6
   11370:	bl	110ec <valida_passwds@@Base>
   11374:	mov	r0, r5
   11378:	bl	11b88 <lista_apaga@@Base>
   1137c:	mov	r0, r4
   11380:	bl	11b88 <lista_apaga@@Base>
   11384:	mov	r0, r6
   11388:	bl	10f3c <fclose@plt>
   1138c:	mov	r0, #0
   11390:	add	sp, sp, #376	; 0x178
   11394:	ldrd	r4, [sp]
   11398:	ldr	r6, [sp, #8]
   1139c:	add	sp, sp, #12
   113a0:	pop	{pc}		; (ldr pc, [sp], #4)
   113a4:	movw	r0, #10500	; 0x2904
   113a8:	movt	r0, #1
   113ac:	bl	10ef4 <puts@plt>
   113b0:	mvn	r0, #0
   113b4:	b	11390 <main@@Base+0x19c>

000113b8 <avl_nova@@Base>:
   113b8:	str	r4, [sp, #-8]!
   113bc:	str	lr, [sp, #4]
   113c0:	mov	r0, #4
   113c4:	bl	10f00 <malloc@plt>
   113c8:	cmp	r0, #0
   113cc:	movne	r3, #0
   113d0:	strne	r3, [r0]
   113d4:	ldr	r4, [sp]
   113d8:	add	sp, sp, #4
   113dc:	pop	{pc}		; (ldr pc, [sp], #4)

000113e0 <avl_min@@Base>:
   113e0:	cmp	r0, #0
   113e4:	bne	113f0 <avl_min@@Base+0x10>
   113e8:	bx	lr
   113ec:	mov	r0, r3
   113f0:	ldr	r3, [r0, #4]
   113f4:	cmp	r3, #0
   113f8:	bne	113ec <avl_min@@Base+0xc>
   113fc:	ldr	r0, [r0]
   11400:	bx	lr

00011404 <avl_max@@Base>:
   11404:	cmp	r0, #0
   11408:	bne	11414 <avl_max@@Base+0x10>
   1140c:	bx	lr
   11410:	mov	r0, r3
   11414:	ldr	r3, [r0, #8]
   11418:	cmp	r3, #0
   1141c:	bne	11410 <avl_max@@Base+0xc>
   11420:	ldr	r0, [r0]
   11424:	bx	lr

00011428 <avl_altura@@Base>:
   11428:	cmp	r0, #0
   1142c:	ldrne	r0, [r0, #12]
   11430:	mvneq	r0, #0
   11434:	bx	lr

00011438 <max@@Base>:
   11438:	cmp	r1, r0
   1143c:	movge	r0, r1
   11440:	bx	lr

00011444 <avl_novo_no@@Base>:
   11444:	strd	r4, [sp, #-16]!
   11448:	str	r6, [sp, #8]
   1144c:	str	lr, [sp, #12]
   11450:	mov	r5, r0
   11454:	mov	r0, #16
   11458:	bl	10f00 <malloc@plt>
   1145c:	mov	r4, r0
   11460:	mov	r0, r5
   11464:	bl	10f24 <strlen@plt>
   11468:	add	r0, r0, #1
   1146c:	bl	10f00 <malloc@plt>
   11470:	str	r0, [r4]
   11474:	mov	r1, r5
   11478:	bl	10ee8 <strcpy@plt>
   1147c:	mov	r3, #0
   11480:	str	r3, [r4, #4]
   11484:	str	r3, [r4, #8]
   11488:	str	r3, [r4, #12]
   1148c:	mov	r0, r4
   11490:	ldrd	r4, [sp]
   11494:	ldr	r6, [sp, #8]
   11498:	add	sp, sp, #12
   1149c:	pop	{pc}		; (ldr pc, [sp], #4)

000114a0 <roda_direita@@Base>:
   114a0:	ldr	r3, [r0, #4]
   114a4:	ldr	r2, [r3, #8]
   114a8:	str	r0, [r3, #8]
   114ac:	str	r2, [r0, #4]
   114b0:	cmp	r2, #0
   114b4:	ldrne	r1, [r2, #12]
   114b8:	mvneq	r1, #0
   114bc:	ldr	r2, [r0, #8]
   114c0:	cmp	r2, #0
   114c4:	ldrne	r2, [r2, #12]
   114c8:	mvneq	r2, #0
   114cc:	cmp	r2, r1
   114d0:	movlt	r2, r1
   114d4:	add	r2, r2, #1
   114d8:	str	r2, [r0, #12]
   114dc:	ldr	r2, [r3, #4]
   114e0:	cmp	r2, #0
   114e4:	ldrne	r1, [r2, #12]
   114e8:	mvneq	r1, #0
   114ec:	ldr	r2, [r3, #8]
   114f0:	cmp	r2, #0
   114f4:	ldrne	r2, [r2, #12]
   114f8:	mvneq	r2, #0
   114fc:	cmp	r2, r1
   11500:	movlt	r2, r1
   11504:	add	r2, r2, #1
   11508:	str	r2, [r3, #12]
   1150c:	mov	r0, r3
   11510:	bx	lr

00011514 <roda_esquerda@@Base>:
   11514:	ldr	r3, [r0, #8]
   11518:	ldr	r1, [r3, #4]
   1151c:	str	r0, [r3, #4]
   11520:	str	r1, [r0, #8]
   11524:	ldr	r2, [r0, #4]
   11528:	cmp	r2, #0
   1152c:	ldrne	ip, [r2, #12]
   11530:	mvneq	ip, #0
   11534:	cmp	r1, #0
   11538:	ldrne	r2, [r1, #12]
   1153c:	mvneq	r2, #0
   11540:	cmp	r2, ip
   11544:	movlt	r2, ip
   11548:	add	r2, r2, #1
   1154c:	str	r2, [r0, #12]
   11550:	ldr	r2, [r3, #4]
   11554:	cmp	r2, #0
   11558:	ldrne	r1, [r2, #12]
   1155c:	mvneq	r1, #0
   11560:	ldr	r2, [r3, #8]
   11564:	cmp	r2, #0
   11568:	ldrne	r2, [r2, #12]
   1156c:	mvneq	r2, #0
   11570:	cmp	r2, r1
   11574:	movlt	r2, r1
   11578:	add	r2, r2, #1
   1157c:	str	r2, [r3, #12]
   11580:	mov	r0, r3
   11584:	bx	lr

00011588 <calc_balanceamento@@Base>:
   11588:	cmp	r0, #0
   1158c:	beq	115b8 <calc_balanceamento@@Base+0x30>
   11590:	ldr	r3, [r0, #8]
   11594:	cmp	r3, #0
   11598:	ldrne	r3, [r3, #12]
   1159c:	mvneq	r3, #0
   115a0:	ldr	r2, [r0, #4]
   115a4:	cmp	r2, #0
   115a8:	ldrne	r0, [r2, #12]
   115ac:	mvneq	r0, #0
   115b0:	sub	r0, r3, r0
   115b4:	bx	lr
   115b8:	mov	r0, #0
   115bc:	bx	lr

000115c0 <avl_pesquisa_impl@@Base>:
   115c0:	strd	r4, [sp, #-16]!
   115c4:	str	r6, [sp, #8]
   115c8:	str	lr, [sp, #12]
   115cc:	subs	r4, r0, #0
   115d0:	beq	115f4 <avl_pesquisa_impl@@Base+0x34>
   115d4:	mov	r5, r1
   115d8:	ldr	r1, [r4]
   115dc:	mov	r0, r5
   115e0:	bl	10e94 <strcmp@plt>
   115e4:	cmp	r0, #0
   115e8:	blt	11608 <avl_pesquisa_impl@@Base+0x48>
   115ec:	cmp	r0, #0
   115f0:	bgt	1161c <avl_pesquisa_impl@@Base+0x5c>
   115f4:	mov	r0, r4
   115f8:	ldrd	r4, [sp]
   115fc:	ldr	r6, [sp, #8]
   11600:	add	sp, sp, #12
   11604:	pop	{pc}		; (ldr pc, [sp], #4)
   11608:	mov	r1, r5
   1160c:	ldr	r0, [r4, #4]
   11610:	bl	115c0 <avl_pesquisa_impl@@Base>
   11614:	mov	r4, r0
   11618:	b	115f4 <avl_pesquisa_impl@@Base+0x34>
   1161c:	mov	r1, r5
   11620:	ldr	r0, [r4, #8]
   11624:	bl	115c0 <avl_pesquisa_impl@@Base>
   11628:	mov	r4, r0
   1162c:	b	115f4 <avl_pesquisa_impl@@Base+0x34>

00011630 <avl_pesquisa@@Base>:
   11630:	cmp	r1, #0
   11634:	cmpne	r0, #0
   11638:	beq	11658 <avl_pesquisa@@Base+0x28>
   1163c:	str	r4, [sp, #-8]!
   11640:	str	lr, [sp, #4]
   11644:	ldr	r0, [r0]
   11648:	bl	115c0 <avl_pesquisa_impl@@Base>
   1164c:	ldr	r4, [sp]
   11650:	add	sp, sp, #4
   11654:	pop	{pc}		; (ldr pc, [sp], #4)
   11658:	mov	r0, #0
   1165c:	bx	lr

00011660 <avl_insere_impl@@Base>:
   11660:	strd	r4, [sp, #-16]!
   11664:	str	r6, [sp, #8]
   11668:	str	lr, [sp, #12]
   1166c:	mov	r5, r1
   11670:	subs	r4, r0, #0
   11674:	beq	11710 <avl_insere_impl@@Base+0xb0>
   11678:	ldr	r1, [r4]
   1167c:	mov	r0, r5
   11680:	bl	10e94 <strcmp@plt>
   11684:	cmp	r0, #0
   11688:	blt	1171c <avl_insere_impl@@Base+0xbc>
   1168c:	cmp	r0, #0
   11690:	movle	r0, r4
   11694:	ble	11700 <avl_insere_impl@@Base+0xa0>
   11698:	mov	r1, r5
   1169c:	ldr	r0, [r4, #8]
   116a0:	bl	11660 <avl_insere_impl@@Base>
   116a4:	str	r0, [r4, #8]
   116a8:	ldr	r6, [r4, #4]
   116ac:	cmp	r6, #0
   116b0:	ldrne	r2, [r6, #12]
   116b4:	mvneq	r2, #0
   116b8:	ldr	r5, [r4, #8]
   116bc:	cmp	r5, #0
   116c0:	ldrne	r3, [r5, #12]
   116c4:	mvneq	r3, #0
   116c8:	cmp	r3, r2
   116cc:	movlt	r3, r2
   116d0:	add	r3, r3, #1
   116d4:	str	r3, [r4, #12]
   116d8:	mov	r0, r4
   116dc:	bl	11588 <calc_balanceamento@@Base>
   116e0:	cmp	r0, #1
   116e4:	ble	11748 <avl_insere_impl@@Base+0xe8>
   116e8:	mov	r0, r5
   116ec:	bl	11588 <calc_balanceamento@@Base>
   116f0:	cmp	r0, #0
   116f4:	blt	11730 <avl_insere_impl@@Base+0xd0>
   116f8:	mov	r0, r4
   116fc:	bl	11514 <roda_esquerda@@Base>
   11700:	ldrd	r4, [sp]
   11704:	ldr	r6, [sp, #8]
   11708:	add	sp, sp, #12
   1170c:	pop	{pc}		; (ldr pc, [sp], #4)
   11710:	mov	r0, r1
   11714:	bl	11444 <avl_novo_no@@Base>
   11718:	b	11700 <avl_insere_impl@@Base+0xa0>
   1171c:	mov	r1, r5
   11720:	ldr	r0, [r4, #4]
   11724:	bl	11660 <avl_insere_impl@@Base>
   11728:	str	r0, [r4, #4]
   1172c:	b	116a8 <avl_insere_impl@@Base+0x48>
   11730:	mov	r0, r5
   11734:	bl	114a0 <roda_direita@@Base>
   11738:	str	r0, [r4, #8]
   1173c:	mov	r0, r4
   11740:	bl	11514 <roda_esquerda@@Base>
   11744:	b	11700 <avl_insere_impl@@Base+0xa0>
   11748:	cmn	r0, #1
   1174c:	movge	r0, r4
   11750:	bge	11700 <avl_insere_impl@@Base+0xa0>
   11754:	mov	r0, r6
   11758:	bl	11588 <calc_balanceamento@@Base>
   1175c:	cmp	r0, #0
   11760:	ble	1177c <avl_insere_impl@@Base+0x11c>
   11764:	mov	r0, r6
   11768:	bl	11514 <roda_esquerda@@Base>
   1176c:	str	r0, [r4, #4]
   11770:	mov	r0, r4
   11774:	bl	114a0 <roda_direita@@Base>
   11778:	b	11700 <avl_insere_impl@@Base+0xa0>
   1177c:	mov	r0, r4
   11780:	bl	114a0 <roda_direita@@Base>
   11784:	b	11700 <avl_insere_impl@@Base+0xa0>

00011788 <avl_insere@@Base>:
   11788:	cmp	r1, #0
   1178c:	cmpne	r0, #0
   11790:	beq	117bc <avl_insere@@Base+0x34>
   11794:	str	r4, [sp, #-8]!
   11798:	str	lr, [sp, #4]
   1179c:	mov	r4, r0
   117a0:	ldr	r0, [r0]
   117a4:	bl	11660 <avl_insere_impl@@Base>
   117a8:	str	r0, [r4]
   117ac:	mov	r0, #0
   117b0:	ldr	r4, [sp]
   117b4:	add	sp, sp, #4
   117b8:	pop	{pc}		; (ldr pc, [sp], #4)
   117bc:	mvn	r0, #0
   117c0:	bx	lr

000117c4 <avl_no_valormin@@Base>:
   117c4:	b	117cc <avl_no_valormin@@Base+0x8>
   117c8:	mov	r0, r3
   117cc:	ldr	r3, [r0, #4]
   117d0:	cmp	r3, #0
   117d4:	bne	117c8 <avl_no_valormin@@Base+0x4>
   117d8:	bx	lr

000117dc <avl_no_valormax@@Base>:
   117dc:	b	117e4 <avl_no_valormax@@Base+0x8>
   117e0:	mov	r0, r3
   117e4:	ldr	r3, [r0, #8]
   117e8:	cmp	r3, #0
   117ec:	bne	117e0 <avl_no_valormax@@Base+0x4>
   117f0:	bx	lr

000117f4 <avl_remove_impl@@Base>:
   117f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   117f8:	strd	r6, [sp, #8]
   117fc:	str	r8, [sp, #16]
   11800:	str	lr, [sp, #20]
   11804:	subs	r4, r0, #0
   11808:	moveq	r5, r4
   1180c:	beq	11918 <avl_remove_impl@@Base+0x124>
   11810:	mov	r5, r1
   11814:	ldr	r7, [r4]
   11818:	mov	r1, r7
   1181c:	mov	r0, r5
   11820:	bl	10e94 <strcmp@plt>
   11824:	cmp	r0, #0
   11828:	blt	11898 <avl_remove_impl@@Base+0xa4>
   1182c:	cmp	r0, #0
   11830:	bgt	118ac <avl_remove_impl@@Base+0xb8>
   11834:	ldr	r5, [r4, #4]
   11838:	cmp	r5, #0
   1183c:	beq	11930 <avl_remove_impl@@Base+0x13c>
   11840:	ldr	r6, [r4, #8]
   11844:	cmp	r6, #0
   11848:	bne	11954 <avl_remove_impl@@Base+0x160>
   1184c:	ldr	r0, [r5]
   11850:	bl	10f24 <strlen@plt>
   11854:	add	r1, r0, #1
   11858:	mov	r0, r7
   1185c:	bl	10edc <realloc@plt>
   11860:	str	r0, [r4]
   11864:	ldr	r1, [r5]
   11868:	bl	10ee8 <strcpy@plt>
   1186c:	ldr	r3, [r5, #4]
   11870:	str	r3, [r4, #4]
   11874:	ldr	r3, [r5, #8]
   11878:	str	r3, [r4, #8]
   1187c:	ldr	r3, [r5, #12]
   11880:	str	r3, [r4, #12]
   11884:	ldr	r0, [r5]
   11888:	bl	10ec4 <free@plt>
   1188c:	mov	r0, r5
   11890:	bl	10ec4 <free@plt>
   11894:	b	118bc <avl_remove_impl@@Base+0xc8>
   11898:	mov	r1, r5
   1189c:	ldr	r0, [r4, #4]
   118a0:	bl	117f4 <avl_remove_impl@@Base>
   118a4:	str	r0, [r4, #4]
   118a8:	b	118bc <avl_remove_impl@@Base+0xc8>
   118ac:	mov	r1, r5
   118b0:	ldr	r0, [r4, #8]
   118b4:	bl	117f4 <avl_remove_impl@@Base>
   118b8:	str	r0, [r4, #8]
   118bc:	ldr	r6, [r4, #4]
   118c0:	cmp	r6, #0
   118c4:	ldrne	r2, [r6, #12]
   118c8:	mvneq	r2, #0
   118cc:	ldr	r5, [r4, #8]
   118d0:	cmp	r5, #0
   118d4:	ldrne	r3, [r5, #12]
   118d8:	mvneq	r3, #0
   118dc:	cmp	r3, r2
   118e0:	movlt	r3, r2
   118e4:	add	r3, r3, #1
   118e8:	str	r3, [r4, #12]
   118ec:	mov	r0, r4
   118f0:	bl	11588 <calc_balanceamento@@Base>
   118f4:	cmp	r0, #1
   118f8:	ble	119b0 <avl_remove_impl@@Base+0x1bc>
   118fc:	mov	r0, r5
   11900:	bl	11588 <calc_balanceamento@@Base>
   11904:	cmp	r0, #0
   11908:	blt	11994 <avl_remove_impl@@Base+0x1a0>
   1190c:	mov	r0, r4
   11910:	bl	11514 <roda_esquerda@@Base>
   11914:	mov	r5, r0
   11918:	mov	r0, r5
   1191c:	ldrd	r4, [sp]
   11920:	ldrd	r6, [sp, #8]
   11924:	ldr	r8, [sp, #16]
   11928:	add	sp, sp, #20
   1192c:	pop	{pc}		; (ldr pc, [sp], #4)
   11930:	ldr	r5, [r4, #8]
   11934:	cmp	r5, #0
   11938:	bne	1184c <avl_remove_impl@@Base+0x58>
   1193c:	ldr	r0, [r4]
   11940:	bl	10ec4 <free@plt>
   11944:	mov	r0, r4
   11948:	bl	10ec4 <free@plt>
   1194c:	b	11918 <avl_remove_impl@@Base+0x124>
   11950:	mov	r6, r3
   11954:	ldr	r3, [r6, #4]
   11958:	cmp	r3, #0
   1195c:	bne	11950 <avl_remove_impl@@Base+0x15c>
   11960:	ldr	r0, [r6]
   11964:	bl	10f24 <strlen@plt>
   11968:	add	r1, r0, #1
   1196c:	mov	r0, r7
   11970:	bl	10edc <realloc@plt>
   11974:	str	r0, [r4]
   11978:	ldr	r1, [r6]
   1197c:	bl	10ee8 <strcpy@plt>
   11980:	ldr	r1, [r6]
   11984:	ldr	r0, [r4, #8]
   11988:	bl	117f4 <avl_remove_impl@@Base>
   1198c:	str	r0, [r4, #8]
   11990:	b	118bc <avl_remove_impl@@Base+0xc8>
   11994:	mov	r0, r5
   11998:	bl	114a0 <roda_direita@@Base>
   1199c:	str	r0, [r4, #8]
   119a0:	mov	r0, r4
   119a4:	bl	11514 <roda_esquerda@@Base>
   119a8:	mov	r5, r0
   119ac:	b	11918 <avl_remove_impl@@Base+0x124>
   119b0:	cmn	r0, #1
   119b4:	movge	r5, r4
   119b8:	bge	11918 <avl_remove_impl@@Base+0x124>
   119bc:	mov	r0, r6
   119c0:	bl	11588 <calc_balanceamento@@Base>
   119c4:	cmp	r0, #0
   119c8:	ble	119e8 <avl_remove_impl@@Base+0x1f4>
   119cc:	mov	r0, r6
   119d0:	bl	11514 <roda_esquerda@@Base>
   119d4:	str	r0, [r4, #4]
   119d8:	mov	r0, r4
   119dc:	bl	114a0 <roda_direita@@Base>
   119e0:	mov	r5, r0
   119e4:	b	11918 <avl_remove_impl@@Base+0x124>
   119e8:	mov	r0, r4
   119ec:	bl	114a0 <roda_direita@@Base>
   119f0:	mov	r5, r0
   119f4:	b	11918 <avl_remove_impl@@Base+0x124>

000119f8 <avl_apaga@@Base>:
   119f8:	str	r4, [sp, #-8]!
   119fc:	str	lr, [sp, #4]
   11a00:	subs	r4, r0, #0
   11a04:	beq	11a30 <avl_apaga@@Base+0x38>
   11a08:	ldr	r0, [r4]
   11a0c:	cmp	r0, #0
   11a10:	beq	11a28 <avl_apaga@@Base+0x30>
   11a14:	ldr	r1, [r0]
   11a18:	bl	117f4 <avl_remove_impl@@Base>
   11a1c:	str	r0, [r4]
   11a20:	cmp	r0, #0
   11a24:	bne	11a14 <avl_apaga@@Base+0x1c>
   11a28:	mov	r0, r4
   11a2c:	bl	10ec4 <free@plt>
   11a30:	ldr	r4, [sp]
   11a34:	add	sp, sp, #4
   11a38:	pop	{pc}		; (ldr pc, [sp], #4)

00011a3c <avl_remove@@Base>:
   11a3c:	cmp	r1, #0
   11a40:	cmpne	r0, #0
   11a44:	beq	11a70 <avl_remove@@Base+0x34>
   11a48:	str	r4, [sp, #-8]!
   11a4c:	str	lr, [sp, #4]
   11a50:	mov	r4, r0
   11a54:	ldr	r0, [r0]
   11a58:	bl	117f4 <avl_remove_impl@@Base>
   11a5c:	str	r0, [r4]
   11a60:	mov	r0, #0
   11a64:	ldr	r4, [sp]
   11a68:	add	sp, sp, #4
   11a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a70:	mvn	r0, #0
   11a74:	bx	lr

00011a78 <avl_preordem_impl@@Base>:
   11a78:	str	r4, [sp, #-8]!
   11a7c:	str	lr, [sp, #4]
   11a80:	subs	r4, r0, #0
   11a84:	beq	11aa8 <avl_preordem_impl@@Base+0x30>
   11a88:	ldr	r1, [r4]
   11a8c:	movw	r0, #10296	; 0x2838
   11a90:	movt	r0, #1
   11a94:	bl	10ea0 <printf@plt>
   11a98:	ldr	r0, [r4, #4]
   11a9c:	bl	11a78 <avl_preordem_impl@@Base>
   11aa0:	ldr	r0, [r4, #8]
   11aa4:	bl	11a78 <avl_preordem_impl@@Base>
   11aa8:	ldr	r4, [sp]
   11aac:	add	sp, sp, #4
   11ab0:	pop	{pc}		; (ldr pc, [sp], #4)

00011ab4 <avl_imprime@@Base>:
   11ab4:	cmp	r0, #0
   11ab8:	bxeq	lr
   11abc:	str	r4, [sp, #-8]!
   11ac0:	str	lr, [sp, #4]
   11ac4:	bl	11a78 <avl_preordem_impl@@Base>
   11ac8:	mov	r0, #10
   11acc:	bl	10f30 <putchar@plt>
   11ad0:	ldr	r4, [sp]
   11ad4:	add	sp, sp, #4
   11ad8:	pop	{pc}		; (ldr pc, [sp], #4)

00011adc <novo_str@@Base>:
   11adc:	strd	r4, [sp, #-16]!
   11ae0:	str	r6, [sp, #8]
   11ae4:	str	lr, [sp, #12]
   11ae8:	mov	r6, r0
   11aec:	mov	r0, #12
   11af0:	bl	10f00 <malloc@plt>
   11af4:	subs	r4, r0, #0
   11af8:	beq	11b30 <novo_str@@Base+0x54>
   11afc:	mov	r0, r6
   11b00:	bl	10f24 <strlen@plt>
   11b04:	add	r0, r0, #1
   11b08:	bl	10f00 <malloc@plt>
   11b0c:	mov	r5, r0
   11b10:	str	r0, [r4]
   11b14:	cmp	r0, #0
   11b18:	beq	11b44 <novo_str@@Base+0x68>
   11b1c:	mov	r1, r6
   11b20:	bl	10ee8 <strcpy@plt>
   11b24:	mov	r3, #0
   11b28:	str	r3, [r4, #4]
   11b2c:	str	r3, [r4, #8]
   11b30:	mov	r0, r4
   11b34:	ldrd	r4, [sp]
   11b38:	ldr	r6, [sp, #8]
   11b3c:	add	sp, sp, #12
   11b40:	pop	{pc}		; (ldr pc, [sp], #4)
   11b44:	mov	r0, r4
   11b48:	bl	10ec4 <free@plt>
   11b4c:	mov	r4, r5
   11b50:	b	11b30 <novo_str@@Base+0x54>

00011b54 <lista_nova@@Base>:
   11b54:	str	r4, [sp, #-8]!
   11b58:	str	lr, [sp, #4]
   11b5c:	mov	r0, #12
   11b60:	bl	10f00 <malloc@plt>
   11b64:	cmp	r0, #0
   11b68:	beq	11b7c <lista_nova@@Base+0x28>
   11b6c:	mov	r3, #0
   11b70:	str	r3, [r0]
   11b74:	str	r3, [r0, #4]
   11b78:	str	r3, [r0, #8]
   11b7c:	ldr	r4, [sp]
   11b80:	add	sp, sp, #4
   11b84:	pop	{pc}		; (ldr pc, [sp], #4)

00011b88 <lista_apaga@@Base>:
   11b88:	strd	r4, [sp, #-16]!
   11b8c:	str	r6, [sp, #8]
   11b90:	str	lr, [sp, #12]
   11b94:	subs	r5, r0, #0
   11b98:	beq	11bd4 <lista_apaga@@Base+0x4c>
   11b9c:	ldr	r4, [r5]
   11ba0:	cmp	r4, #0
   11ba4:	beq	11bcc <lista_apaga@@Base+0x44>
   11ba8:	ldr	r3, [r4, #4]
   11bac:	str	r3, [r5]
   11bb0:	ldr	r0, [r4]
   11bb4:	bl	10ec4 <free@plt>
   11bb8:	mov	r0, r4
   11bbc:	bl	10ec4 <free@plt>
   11bc0:	ldr	r4, [r5]
   11bc4:	cmp	r4, #0
   11bc8:	bne	11ba8 <lista_apaga@@Base+0x20>
   11bcc:	mov	r0, r5
   11bd0:	bl	10ec4 <free@plt>
   11bd4:	ldrd	r4, [sp]
   11bd8:	ldr	r6, [sp, #8]
   11bdc:	add	sp, sp, #12
   11be0:	pop	{pc}		; (ldr pc, [sp], #4)

00011be4 <lista_tamanho@@Base>:
   11be4:	cmp	r0, #0
   11be8:	ldrne	r0, [r0, #8]
   11bec:	mvneq	r0, #0
   11bf0:	bx	lr

00011bf4 <lista_inicio@@Base>:
   11bf4:	cmp	r0, #0
   11bf8:	ldrne	r0, [r0]
   11bfc:	bx	lr

00011c00 <lista_fim@@Base>:
   11c00:	cmp	r0, #0
   11c04:	ldrne	r0, [r0, #4]
   11c08:	bx	lr

00011c0c <lista_insere@@Base>:
   11c0c:	cmp	r1, #0
   11c10:	cmpne	r0, #0
   11c14:	beq	11cc4 <lista_insere@@Base+0xb8>
   11c18:	strd	r4, [sp, #-16]!
   11c1c:	str	r6, [sp, #8]
   11c20:	str	lr, [sp, #12]
   11c24:	mov	r5, r0
   11c28:	mov	r0, r1
   11c2c:	mov	r4, r2
   11c30:	bl	11adc <novo_str@@Base>
   11c34:	cmp	r0, #0
   11c38:	beq	11c74 <lista_insere@@Base+0x68>
   11c3c:	ldr	r3, [r5, #8]
   11c40:	add	r3, r3, #1
   11c44:	str	r3, [r5, #8]
   11c48:	cmp	r4, #0
   11c4c:	beq	11c84 <lista_insere@@Base+0x78>
   11c50:	ldr	r3, [r5]
   11c54:	cmp	r3, r4
   11c58:	beq	11cb0 <lista_insere@@Base+0xa4>
   11c5c:	ldr	r3, [r4, #8]
   11c60:	str	r3, [r0, #8]
   11c64:	str	r4, [r0, #4]
   11c68:	ldr	r3, [r4, #8]
   11c6c:	str	r0, [r3, #4]
   11c70:	str	r0, [r4, #8]
   11c74:	ldrd	r4, [sp]
   11c78:	ldr	r6, [sp, #8]
   11c7c:	add	sp, sp, #12
   11c80:	pop	{pc}		; (ldr pc, [sp], #4)
   11c84:	ldr	r3, [r5]
   11c88:	cmp	r3, #0
   11c8c:	streq	r0, [r5, #4]
   11c90:	streq	r0, [r5]
   11c94:	beq	11c74 <lista_insere@@Base+0x68>
   11c98:	ldr	r3, [r5, #4]
   11c9c:	str	r3, [r0, #8]
   11ca0:	ldr	r3, [r5, #4]
   11ca4:	str	r0, [r3, #4]
   11ca8:	str	r0, [r5, #4]
   11cac:	b	11c74 <lista_insere@@Base+0x68>
   11cb0:	str	r4, [r0, #4]
   11cb4:	ldr	r3, [r5]
   11cb8:	str	r0, [r3, #8]
   11cbc:	str	r0, [r5]
   11cc0:	b	11c74 <lista_insere@@Base+0x68>
   11cc4:	mov	r0, #0
   11cc8:	bx	lr

00011ccc <lista_remove@@Base>:
   11ccc:	strd	r4, [sp, #-16]!
   11cd0:	str	r6, [sp, #8]
   11cd4:	str	lr, [sp, #12]
   11cd8:	cmp	r1, #0
   11cdc:	cmpne	r0, #0
   11ce0:	moveq	r5, #0
   11ce4:	beq	11d3c <lista_remove@@Base+0x70>
   11ce8:	mov	r4, r1
   11cec:	ldr	r2, [r0, #8]
   11cf0:	sub	r2, r2, #1
   11cf4:	str	r2, [r0, #8]
   11cf8:	ldr	r2, [r1, #8]
   11cfc:	cmp	r2, #0
   11d00:	ldrne	r1, [r1, #4]
   11d04:	strne	r1, [r2, #4]
   11d08:	ldreq	r2, [r4, #4]
   11d0c:	streq	r2, [r0]
   11d10:	ldr	r2, [r4, #4]
   11d14:	cmp	r2, #0
   11d18:	ldrne	r1, [r4, #8]
   11d1c:	strne	r1, [r2, #8]
   11d20:	ldreq	r2, [r4, #8]
   11d24:	streq	r2, [r0, #4]
   11d28:	ldr	r5, [r4, #4]
   11d2c:	ldr	r0, [r4]
   11d30:	bl	10ec4 <free@plt>
   11d34:	mov	r0, r4
   11d38:	bl	10ec4 <free@plt>
   11d3c:	mov	r0, r5
   11d40:	ldrd	r4, [sp]
   11d44:	ldr	r6, [sp, #8]
   11d48:	add	sp, sp, #12
   11d4c:	pop	{pc}		; (ldr pc, [sp], #4)

00011d50 <lista_pesquisa@@Base>:
   11d50:	strd	r4, [sp, #-16]!
   11d54:	str	r6, [sp, #8]
   11d58:	str	lr, [sp, #12]
   11d5c:	cmp	r1, #0
   11d60:	cmpne	r0, #0
   11d64:	moveq	r4, #0
   11d68:	beq	11db0 <lista_pesquisa@@Base+0x60>
   11d6c:	mov	r5, r1
   11d70:	cmp	r2, #1
   11d74:	movhi	r4, #0
   11d78:	bhi	11db0 <lista_pesquisa@@Base+0x60>
   11d7c:	cmp	r2, #0
   11d80:	bne	11dc4 <lista_pesquisa@@Base+0x74>
   11d84:	ldr	r4, [r0]
   11d88:	cmp	r4, #0
   11d8c:	beq	11db0 <lista_pesquisa@@Base+0x60>
   11d90:	mov	r1, r5
   11d94:	ldr	r0, [r4]
   11d98:	bl	10e94 <strcmp@plt>
   11d9c:	cmp	r0, #0
   11da0:	beq	11db0 <lista_pesquisa@@Base+0x60>
   11da4:	ldr	r4, [r4, #4]
   11da8:	cmp	r4, #0
   11dac:	bne	11d90 <lista_pesquisa@@Base+0x40>
   11db0:	mov	r0, r4
   11db4:	ldrd	r4, [sp]
   11db8:	ldr	r6, [sp, #8]
   11dbc:	add	sp, sp, #12
   11dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc4:	ldr	r4, [r0, #4]
   11dc8:	cmp	r4, #0
   11dcc:	beq	11db0 <lista_pesquisa@@Base+0x60>
   11dd0:	mov	r1, r5
   11dd4:	ldr	r0, [r4]
   11dd8:	bl	10e94 <strcmp@plt>
   11ddc:	cmp	r0, #0
   11de0:	beq	11db0 <lista_pesquisa@@Base+0x60>
   11de4:	ldr	r4, [r4, #8]
   11de8:	cmp	r4, #0
   11dec:	bne	11dd0 <lista_pesquisa@@Base+0x80>
   11df0:	b	11db0 <lista_pesquisa@@Base+0x60>

00011df4 <lista_ordena@@Base>:
   11df4:	subs	r3, r0, #0
   11df8:	beq	11e84 <lista_ordena@@Base+0x90>
   11dfc:	ldr	r0, [r3, #8]
   11e00:	cmp	r0, #0
   11e04:	bxeq	lr
   11e08:	strd	r4, [sp, #-16]!
   11e0c:	str	r6, [sp, #8]
   11e10:	str	lr, [sp, #12]
   11e14:	ldr	r6, [r3]
   11e18:	ldr	r4, [r6, #4]
   11e1c:	cmp	r4, #0
   11e20:	moveq	r0, #0
   11e24:	bne	11e3c <lista_ordena@@Base+0x48>
   11e28:	b	11e90 <lista_ordena@@Base+0x9c>
   11e2c:	ldr	r6, [r6, #4]
   11e30:	ldr	r4, [r6, #4]
   11e34:	cmp	r4, #0
   11e38:	beq	11e8c <lista_ordena@@Base+0x98>
   11e3c:	cmp	r4, #0
   11e40:	movne	r5, r6
   11e44:	beq	11e2c <lista_ordena@@Base+0x38>
   11e48:	ldr	r1, [r5]
   11e4c:	ldr	r0, [r4]
   11e50:	bl	10e94 <strcmp@plt>
   11e54:	cmp	r0, #0
   11e58:	movlt	r5, r4
   11e5c:	ldr	r4, [r4, #4]
   11e60:	cmp	r4, #0
   11e64:	bne	11e48 <lista_ordena@@Base+0x54>
   11e68:	cmp	r5, r6
   11e6c:	beq	11e2c <lista_ordena@@Base+0x38>
   11e70:	ldr	r3, [r6]
   11e74:	ldr	r2, [r5]
   11e78:	str	r2, [r6]
   11e7c:	str	r3, [r5]
   11e80:	b	11e2c <lista_ordena@@Base+0x38>
   11e84:	mvn	r0, #0
   11e88:	bx	lr
   11e8c:	mov	r0, #0
   11e90:	ldrd	r4, [sp]
   11e94:	ldr	r6, [sp, #8]
   11e98:	add	sp, sp, #12
   11e9c:	pop	{pc}		; (ldr pc, [sp], #4)

00011ea0 <lista_inverte@@Base>:
   11ea0:	subs	r1, r0, #0
   11ea4:	beq	11f34 <lista_inverte@@Base+0x94>
   11ea8:	ldr	r2, [r1, #8]
   11eac:	cmp	r2, #1
   11eb0:	ble	11f3c <lista_inverte@@Base+0x9c>
   11eb4:	ldr	r3, [r1]
   11eb8:	ldr	r3, [r3, #4]
   11ebc:	cmp	r2, #2
   11ec0:	ble	11f08 <lista_inverte@@Base+0x68>
   11ec4:	mov	r0, #0
   11ec8:	ldr	ip, [r3, #8]
   11ecc:	ldr	r2, [r3, #4]
   11ed0:	str	r2, [ip, #4]
   11ed4:	ldr	ip, [r3, #8]
   11ed8:	str	ip, [r2, #8]
   11edc:	ldr	ip, [r3, #4]
   11ee0:	ldr	r2, [r1]
   11ee4:	str	r2, [r3, #4]
   11ee8:	str	r3, [r2, #8]
   11eec:	str	r3, [r1]
   11ef0:	add	r0, r0, #1
   11ef4:	mov	r3, ip
   11ef8:	ldr	r2, [r1, #8]
   11efc:	sub	r2, r2, #2
   11f00:	cmp	r2, r0
   11f04:	bgt	11ec8 <lista_inverte@@Base+0x28>
   11f08:	ldr	r3, [r1, #4]
   11f0c:	ldr	r2, [r3, #8]
   11f10:	str	r2, [r1, #4]
   11f14:	mov	r0, #0
   11f18:	str	r0, [r2, #4]
   11f1c:	str	r0, [r3, #8]
   11f20:	ldr	r2, [r1]
   11f24:	str	r2, [r3, #4]
   11f28:	str	r3, [r2, #8]
   11f2c:	str	r3, [r1]
   11f30:	bx	lr
   11f34:	mvn	r0, #0
   11f38:	bx	lr
   11f3c:	mov	r0, #0
   11f40:	bx	lr

00011f44 <tabela_nova@@Base>:
   11f44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11f48:	strd	r6, [sp, #8]
   11f4c:	str	r8, [sp, #16]
   11f50:	str	lr, [sp, #20]
   11f54:	subs	r5, r0, #0
   11f58:	movle	r3, #1
   11f5c:	movgt	r3, #0
   11f60:	mov	r6, r1
   11f64:	cmp	r1, #0
   11f68:	movne	r1, r3
   11f6c:	moveq	r1, #1
   11f70:	cmp	r1, #0
   11f74:	movne	r4, #0
   11f78:	bne	11fb0 <tabela_nova@@Base+0x6c>
   11f7c:	mov	r0, #12
   11f80:	bl	10f00 <malloc@plt>
   11f84:	subs	r4, r0, #0
   11f88:	beq	11fb0 <tabela_nova@@Base+0x6c>
   11f8c:	mov	r1, #4
   11f90:	mov	r0, r5
   11f94:	bl	10e88 <calloc@plt>
   11f98:	mov	r7, r0
   11f9c:	str	r0, [r4, #4]
   11fa0:	cmp	r0, #0
   11fa4:	strne	r5, [r4, #8]
   11fa8:	strne	r6, [r4]
   11fac:	beq	11fc8 <tabela_nova@@Base+0x84>
   11fb0:	mov	r0, r4
   11fb4:	ldrd	r4, [sp]
   11fb8:	ldrd	r6, [sp, #8]
   11fbc:	ldr	r8, [sp, #16]
   11fc0:	add	sp, sp, #20
   11fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   11fc8:	mov	r0, r4
   11fcc:	bl	10ec4 <free@plt>
   11fd0:	mov	r4, r7
   11fd4:	b	11fb0 <tabela_nova@@Base+0x6c>

00011fd8 <tabela_apaga@@Base>:
   11fd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11fdc:	strd	r6, [sp, #8]
   11fe0:	str	r8, [sp, #16]
   11fe4:	str	lr, [sp, #20]
   11fe8:	subs	r7, r0, #0
   11fec:	beq	12058 <tabela_apaga@@Base+0x80>
   11ff0:	ldr	r3, [r7, #8]
   11ff4:	cmp	r3, #0
   11ff8:	ble	12048 <tabela_apaga@@Base+0x70>
   11ffc:	mov	r6, #0
   12000:	b	12014 <tabela_apaga@@Base+0x3c>
   12004:	add	r6, r6, #1
   12008:	ldr	r3, [r7, #8]
   1200c:	cmp	r3, r6
   12010:	ble	12048 <tabela_apaga@@Base+0x70>
   12014:	ldr	r3, [r7, #4]
   12018:	ldr	r4, [r3, r6, lsl #2]
   1201c:	cmp	r4, #0
   12020:	beq	12004 <tabela_apaga@@Base+0x2c>
   12024:	ldr	r5, [r4, #4]
   12028:	ldr	r0, [r4]
   1202c:	bl	10ec4 <free@plt>
   12030:	mov	r0, r4
   12034:	bl	10ec4 <free@plt>
   12038:	mov	r4, r5
   1203c:	cmp	r5, #0
   12040:	bne	12024 <tabela_apaga@@Base+0x4c>
   12044:	b	12004 <tabela_apaga@@Base+0x2c>
   12048:	ldr	r0, [r7, #4]
   1204c:	bl	10ec4 <free@plt>
   12050:	mov	r0, r7
   12054:	bl	10ec4 <free@plt>
   12058:	ldrd	r4, [sp]
   1205c:	ldrd	r6, [sp, #8]
   12060:	ldr	r8, [sp, #16]
   12064:	add	sp, sp, #20
   12068:	pop	{pc}		; (ldr pc, [sp], #4)

0001206c <tabela_adiciona@@Base>:
   1206c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12070:	strd	r6, [sp, #8]
   12074:	strd	r8, [sp, #16]
   12078:	str	sl, [sp, #24]
   1207c:	str	lr, [sp, #28]
   12080:	mov	r8, r2
   12084:	clz	r2, r2
   12088:	lsr	r2, r2, #5
   1208c:	cmp	r1, #0
   12090:	moveq	r2, #1
   12094:	cmp	r0, #0
   12098:	moveq	r2, #1
   1209c:	cmp	r2, #0
   120a0:	bne	12144 <tabela_adiciona@@Base+0xd8>
   120a4:	mov	r6, r1
   120a8:	mov	r4, r0
   120ac:	ldr	r3, [r0]
   120b0:	ldr	r1, [r0, #8]
   120b4:	mov	r0, r6
   120b8:	blx	r3
   120bc:	mov	r9, r0
   120c0:	ldr	sl, [r4, #4]
   120c4:	ldr	r4, [sl, r0, lsl #2]
   120c8:	cmp	r4, #0
   120cc:	beq	120f4 <tabela_adiciona@@Base+0x88>
   120d0:	ldr	r5, [r4]
   120d4:	mov	r1, r6
   120d8:	mov	r0, r5
   120dc:	bl	10e94 <strcmp@plt>
   120e0:	subs	r7, r0, #0
   120e4:	beq	1215c <tabela_adiciona@@Base+0xf0>
   120e8:	ldr	r4, [r4, #4]
   120ec:	cmp	r4, #0
   120f0:	bne	120d0 <tabela_adiciona@@Base+0x64>
   120f4:	mov	r0, #8
   120f8:	bl	10f00 <malloc@plt>
   120fc:	subs	r5, r0, #0
   12100:	beq	12154 <tabela_adiciona@@Base+0xe8>
   12104:	mov	r0, #125	; 0x7d
   12108:	bl	10f00 <malloc@plt>
   1210c:	mov	r4, r0
   12110:	str	r0, [r5]
   12114:	cmp	r0, #0
   12118:	beq	1214c <tabela_adiciona@@Base+0xe0>
   1211c:	mov	r1, r6
   12120:	bl	10ee8 <strcpy@plt>
   12124:	mov	r1, r8
   12128:	add	r0, r4, #25
   1212c:	bl	10ee8 <strcpy@plt>
   12130:	ldr	r3, [sl, r9, lsl #2]
   12134:	str	r3, [r5, #4]
   12138:	str	r5, [sl, r9, lsl #2]
   1213c:	mov	r7, #0
   12140:	b	12168 <tabela_adiciona@@Base+0xfc>
   12144:	mvn	r7, #1
   12148:	b	12168 <tabela_adiciona@@Base+0xfc>
   1214c:	mvn	r7, #1
   12150:	b	12168 <tabela_adiciona@@Base+0xfc>
   12154:	mvn	r7, #1
   12158:	b	12168 <tabela_adiciona@@Base+0xfc>
   1215c:	mov	r1, r8
   12160:	add	r0, r5, #25
   12164:	bl	10ee8 <strcpy@plt>
   12168:	mov	r0, r7
   1216c:	ldrd	r4, [sp]
   12170:	ldrd	r6, [sp, #8]
   12174:	ldrd	r8, [sp, #16]
   12178:	ldr	sl, [sp, #24]
   1217c:	add	sp, sp, #28
   12180:	pop	{pc}		; (ldr pc, [sp], #4)

00012184 <tabela_remove@@Base>:
   12184:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12188:	strd	r6, [sp, #8]
   1218c:	strd	r8, [sp, #16]
   12190:	str	sl, [sp, #24]
   12194:	str	lr, [sp, #28]
   12198:	subs	r4, r0, #0
   1219c:	beq	1223c <tabela_remove@@Base+0xb8>
   121a0:	mov	r5, r1
   121a4:	ldr	r3, [r4]
   121a8:	ldr	r1, [r4, #8]
   121ac:	mov	r0, r5
   121b0:	blx	r3
   121b4:	mov	r9, r0
   121b8:	ldr	r8, [r4, #4]
   121bc:	ldr	r4, [r8, r0, lsl #2]
   121c0:	cmp	r4, #0
   121c4:	beq	12244 <tabela_remove@@Base+0xc0>
   121c8:	mov	r7, #0
   121cc:	b	121d4 <tabela_remove@@Base+0x50>
   121d0:	mov	r4, r3
   121d4:	mov	r1, r5
   121d8:	ldr	r0, [r4]
   121dc:	bl	10e94 <strcmp@plt>
   121e0:	subs	r6, r0, #0
   121e4:	beq	12200 <tabela_remove@@Base+0x7c>
   121e8:	ldr	r3, [r4, #4]
   121ec:	mov	r7, r4
   121f0:	cmp	r3, #0
   121f4:	bne	121d0 <tabela_remove@@Base+0x4c>
   121f8:	mvn	r6, #2
   121fc:	b	12220 <tabela_remove@@Base+0x9c>
   12200:	cmp	r7, #0
   12204:	ldr	r3, [r4, #4]
   12208:	strne	r3, [r7, #4]
   1220c:	streq	r3, [r8, r9, lsl #2]
   12210:	ldr	r0, [r4]
   12214:	bl	10ec4 <free@plt>
   12218:	mov	r0, r4
   1221c:	bl	10ec4 <free@plt>
   12220:	mov	r0, r6
   12224:	ldrd	r4, [sp]
   12228:	ldrd	r6, [sp, #8]
   1222c:	ldrd	r8, [sp, #16]
   12230:	ldr	sl, [sp, #24]
   12234:	add	sp, sp, #28
   12238:	pop	{pc}		; (ldr pc, [sp], #4)
   1223c:	mvn	r6, #1
   12240:	b	12220 <tabela_remove@@Base+0x9c>
   12244:	mvn	r6, #2
   12248:	b	12220 <tabela_remove@@Base+0x9c>

0001224c <tabela_valor@@Base>:
   1224c:	strd	r4, [sp, #-16]!
   12250:	str	r6, [sp, #8]
   12254:	str	lr, [sp, #12]
   12258:	subs	r4, r0, #0
   1225c:	beq	122b0 <tabela_valor@@Base+0x64>
   12260:	mov	r6, r1
   12264:	ldr	r3, [r4]
   12268:	ldr	r1, [r4, #8]
   1226c:	mov	r0, r6
   12270:	blx	r3
   12274:	ldr	r3, [r4, #4]
   12278:	ldr	r4, [r3, r0, lsl #2]
   1227c:	cmp	r4, #0
   12280:	beq	122b0 <tabela_valor@@Base+0x64>
   12284:	ldr	r5, [r4]
   12288:	mov	r1, r6
   1228c:	mov	r0, r5
   12290:	bl	10e94 <strcmp@plt>
   12294:	cmp	r0, #0
   12298:	beq	122ac <tabela_valor@@Base+0x60>
   1229c:	ldr	r4, [r4, #4]
   122a0:	cmp	r4, #0
   122a4:	bne	12284 <tabela_valor@@Base+0x38>
   122a8:	b	122b0 <tabela_valor@@Base+0x64>
   122ac:	add	r4, r5, #25
   122b0:	mov	r0, r4
   122b4:	ldrd	r4, [sp]
   122b8:	ldr	r6, [sp, #8]
   122bc:	add	sp, sp, #12
   122c0:	pop	{pc}		; (ldr pc, [sp], #4)

000122c4 <tabela_existe@@Base>:
   122c4:	cmp	r0, #0
   122c8:	cmpne	r1, #0
   122cc:	beq	122f4 <tabela_existe@@Base+0x30>
   122d0:	str	r4, [sp, #-8]!
   122d4:	str	lr, [sp, #4]
   122d8:	bl	1224c <tabela_valor@@Base>
   122dc:	cmp	r0, #0
   122e0:	movne	r0, #1
   122e4:	mvneq	r0, #2
   122e8:	ldr	r4, [sp]
   122ec:	add	sp, sp, #4
   122f0:	pop	{pc}		; (ldr pc, [sp], #4)
   122f4:	mvn	r0, #1
   122f8:	bx	lr

000122fc <tabela_esvazia@@Base>:
   122fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12300:	strd	r6, [sp, #8]
   12304:	strd	r8, [sp, #16]
   12308:	str	sl, [sp, #24]
   1230c:	str	lr, [sp, #28]
   12310:	subs	r7, r0, #0
   12314:	beq	1239c <tabela_esvazia@@Base+0xa0>
   12318:	ldr	r3, [r7, #8]
   1231c:	cmp	r3, #0
   12320:	ble	123a4 <tabela_esvazia@@Base+0xa8>
   12324:	mov	r6, #0
   12328:	mov	r9, r6
   1232c:	b	12348 <tabela_esvazia@@Base+0x4c>
   12330:	ldr	r3, [r7, #4]
   12334:	str	r9, [r3, r8]
   12338:	add	r6, r6, #1
   1233c:	ldr	r3, [r7, #8]
   12340:	cmp	r3, r6
   12344:	ble	12380 <tabela_esvazia@@Base+0x84>
   12348:	lsl	r8, r6, #2
   1234c:	ldr	r3, [r7, #4]
   12350:	ldr	r4, [r3, r6, lsl #2]
   12354:	cmp	r4, #0
   12358:	beq	12330 <tabela_esvazia@@Base+0x34>
   1235c:	ldr	r5, [r4, #4]
   12360:	ldr	r0, [r4]
   12364:	bl	10ec4 <free@plt>
   12368:	mov	r0, r4
   1236c:	bl	10ec4 <free@plt>
   12370:	mov	r4, r5
   12374:	cmp	r5, #0
   12378:	bne	1235c <tabela_esvazia@@Base+0x60>
   1237c:	b	12330 <tabela_esvazia@@Base+0x34>
   12380:	mov	r0, #0
   12384:	ldrd	r4, [sp]
   12388:	ldrd	r6, [sp, #8]
   1238c:	ldrd	r8, [sp, #16]
   12390:	ldr	sl, [sp, #24]
   12394:	add	sp, sp, #28
   12398:	pop	{pc}		; (ldr pc, [sp], #4)
   1239c:	mvn	r0, #1
   123a0:	b	12384 <tabela_esvazia@@Base+0x88>
   123a4:	mov	r0, #0
   123a8:	b	12384 <tabela_esvazia@@Base+0x88>

000123ac <tabela_numelementos@@Base>:
   123ac:	cmp	r0, #0
   123b0:	beq	123fc <tabela_numelementos@@Base+0x50>
   123b4:	ldr	r1, [r0, #8]
   123b8:	cmp	r1, #0
   123bc:	ble	12404 <tabela_numelementos@@Base+0x58>
   123c0:	ldr	r2, [r0, #4]
   123c4:	add	r1, r2, r1, lsl #2
   123c8:	mov	r0, #0
   123cc:	b	123d8 <tabela_numelementos@@Base+0x2c>
   123d0:	cmp	r2, r1
   123d4:	beq	123f8 <tabela_numelementos@@Base+0x4c>
   123d8:	ldr	r3, [r2], #4
   123dc:	cmp	r3, #0
   123e0:	beq	123d0 <tabela_numelementos@@Base+0x24>
   123e4:	ldr	r3, [r3, #4]
   123e8:	add	r0, r0, #1
   123ec:	cmp	r3, #0
   123f0:	bne	123e4 <tabela_numelementos@@Base+0x38>
   123f4:	b	123d0 <tabela_numelementos@@Base+0x24>
   123f8:	bx	lr
   123fc:	mvn	r0, #1
   12400:	bx	lr
   12404:	mov	r0, #0
   12408:	bx	lr

0001240c <tabela_elementos@@Base>:
   1240c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12410:	strd	r6, [sp, #8]
   12414:	strd	r8, [sp, #16]
   12418:	strd	sl, [sp, #24]
   1241c:	str	lr, [sp, #32]
   12420:	sub	sp, sp, #4
   12424:	mov	r9, r0
   12428:	mov	r4, r1
   1242c:	bl	123ac <tabela_numelementos@@Base>
   12430:	str	r0, [r4]
   12434:	cmp	r0, #0
   12438:	movle	fp, #0
   1243c:	ble	124b8 <tabela_elementos@@Base+0xac>
   12440:	mov	r3, #125	; 0x7d
   12444:	mul	r0, r3, r0
   12448:	bl	10f00 <malloc@plt>
   1244c:	subs	fp, r0, #0
   12450:	beq	124b8 <tabela_elementos@@Base+0xac>
   12454:	ldr	sl, [r9, #8]
   12458:	cmp	sl, #0
   1245c:	ble	124b8 <tabela_elementos@@Base+0xac>
   12460:	mov	r6, #0
   12464:	mov	r8, r6
   12468:	mov	r7, #125	; 0x7d
   1246c:	b	1247c <tabela_elementos@@Base+0x70>
   12470:	add	r8, r8, #1
   12474:	cmp	r8, sl
   12478:	beq	124b8 <tabela_elementos@@Base+0xac>
   1247c:	ldr	r3, [r9, #4]
   12480:	ldr	r4, [r3, r8, lsl #2]
   12484:	cmp	r4, #0
   12488:	beq	12470 <tabela_elementos@@Base+0x64>
   1248c:	mla	r5, r7, r6, fp
   12490:	add	r6, r6, #1
   12494:	mov	r2, r7
   12498:	ldr	r1, [r4]
   1249c:	mov	r0, r5
   124a0:	bl	10ed0 <memcpy@plt>
   124a4:	ldr	r4, [r4, #4]
   124a8:	add	r5, r5, #125	; 0x7d
   124ac:	cmp	r4, #0
   124b0:	bne	12490 <tabela_elementos@@Base+0x84>
   124b4:	b	12470 <tabela_elementos@@Base+0x64>
   124b8:	mov	r0, fp
   124bc:	add	sp, sp, #4
   124c0:	ldrd	r4, [sp]
   124c4:	ldrd	r6, [sp, #8]
   124c8:	ldrd	r8, [sp, #16]
   124cc:	ldrd	sl, [sp, #24]
   124d0:	add	sp, sp, #32
   124d4:	pop	{pc}		; (ldr pc, [sp], #4)

000124d8 <hash_krm@@Base>:
   124d8:	ldrb	r3, [r0]
   124dc:	cmp	r3, #0
   124e0:	beq	12504 <hash_krm@@Base+0x2c>
   124e4:	mov	r2, #7
   124e8:	add	r2, r2, r3
   124ec:	ldrb	r3, [r0, #1]!
   124f0:	cmp	r3, #0
   124f4:	bne	124e8 <hash_krm@@Base+0x10>
   124f8:	udiv	r0, r2, r1
   124fc:	mls	r0, r1, r0, r2
   12500:	bx	lr
   12504:	mov	r2, #7
   12508:	b	124f8 <hash_krm@@Base+0x20>

0001250c <hash_djbm@@Base>:
   1250c:	ldrb	r2, [r0]
   12510:	cmp	r2, #0
   12514:	beq	1253c <hash_djbm@@Base+0x30>
   12518:	movw	r3, #5347	; 0x14e3
   1251c:	rsb	r3, r3, r3, lsl #5
   12520:	eor	r3, r3, r2
   12524:	ldrb	r2, [r0, #1]!
   12528:	cmp	r2, #0
   1252c:	bne	1251c <hash_djbm@@Base+0x10>
   12530:	udiv	r0, r3, r1
   12534:	mls	r0, r1, r0, r3
   12538:	bx	lr
   1253c:	movw	r3, #5347	; 0x14e3
   12540:	b	12530 <hash_djbm@@Base+0x24>

00012544 <mostraTabela@@Base>:
   12544:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12548:	strd	r6, [sp, #8]
   1254c:	strd	r8, [sp, #16]
   12550:	str	sl, [sp, #24]
   12554:	str	lr, [sp, #28]
   12558:	mov	r7, r0
   1255c:	bl	123ac <tabela_numelementos@@Base>
   12560:	mov	r1, r0
   12564:	movw	r0, #10536	; 0x2928
   12568:	movt	r0, #1
   1256c:	bl	10ea0 <printf@plt>
   12570:	ldr	r3, [r7, #8]
   12574:	cmp	r3, #0
   12578:	ble	125fc <mostraTabela@@Base+0xb8>
   1257c:	mov	r5, #0
   12580:	movw	r8, #10572	; 0x294c
   12584:	movt	r8, #1
   12588:	movw	r6, #10580	; 0x2954
   1258c:	movt	r6, #1
   12590:	mov	r9, #10
   12594:	b	125b0 <mostraTabela@@Base+0x6c>
   12598:	mov	r0, r9
   1259c:	bl	10f30 <putchar@plt>
   125a0:	add	r5, r5, #1
   125a4:	ldr	r3, [r7, #8]
   125a8:	cmp	r3, r5
   125ac:	ble	125fc <mostraTabela@@Base+0xb8>
   125b0:	ldr	r3, [r7, #4]
   125b4:	ldr	r3, [r3, r5, lsl #2]
   125b8:	cmp	r3, #0
   125bc:	beq	125a0 <mostraTabela@@Base+0x5c>
   125c0:	mov	r1, r5
   125c4:	mov	r0, r8
   125c8:	bl	10ea0 <printf@plt>
   125cc:	ldr	r3, [r7, #4]
   125d0:	ldr	r4, [r3, r5, lsl #2]
   125d4:	cmp	r4, #0
   125d8:	beq	12598 <mostraTabela@@Base+0x54>
   125dc:	ldr	r1, [r4]
   125e0:	add	r2, r1, #25
   125e4:	mov	r0, r6
   125e8:	bl	10ea0 <printf@plt>
   125ec:	ldr	r4, [r4, #4]
   125f0:	cmp	r4, #0
   125f4:	bne	125dc <mostraTabela@@Base+0x98>
   125f8:	b	12598 <mostraTabela@@Base+0x54>
   125fc:	mov	r0, #10
   12600:	bl	10f30 <putchar@plt>
   12604:	ldrd	r4, [sp]
   12608:	ldrd	r6, [sp, #8]
   1260c:	ldrd	r8, [sp, #16]
   12610:	ldr	sl, [sp, #24]
   12614:	add	sp, sp, #28
   12618:	pop	{pc}		; (ldr pc, [sp], #4)

0001261c <__libc_csu_init@@Base>:
   1261c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12620:	mov	r7, r0
   12624:	ldr	r6, [pc, #72]	; 12674 <__libc_csu_init@@Base+0x58>
   12628:	ldr	r5, [pc, #72]	; 12678 <__libc_csu_init@@Base+0x5c>
   1262c:	add	r6, pc, r6
   12630:	add	r5, pc, r5
   12634:	sub	r6, r6, r5
   12638:	mov	r8, r1
   1263c:	mov	r9, r2
   12640:	bl	10e68 <calloc@plt-0x20>
   12644:	asrs	r6, r6, #2
   12648:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1264c:	mov	r4, #0
   12650:	add	r4, r4, #1
   12654:	ldr	r3, [r5], #4
   12658:	mov	r2, r9
   1265c:	mov	r1, r8
   12660:	mov	r0, r7
   12664:	blx	r3
   12668:	cmp	r6, r4
   1266c:	bne	12650 <__libc_csu_init@@Base+0x34>
   12670:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12674:	andeq	r0, r1, r0, ror #17
   12678:	ldrdeq	r0, [r1], -r8

0001267c <__libc_csu_fini@@Base>:
   1267c:	bx	lr

Disassembly of section .fini:

00012680 <.fini>:
   12680:	push	{r3, lr}
   12684:	pop	{r3, pc}
