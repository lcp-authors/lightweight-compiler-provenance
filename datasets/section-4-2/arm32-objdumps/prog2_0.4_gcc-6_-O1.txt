
../repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

000105e4 <.init>:
   105e4:	push	{r3, lr}
   105e8:	bl	10694 <_start@@Base+0x3c>
   105ec:	pop	{r3, pc}

Disassembly of section .plt:

000105f0 <printf@plt-0x14>:
   105f0:	push	{lr}		; (str lr, [sp, #-4]!)
   105f4:	ldr	lr, [pc, #4]	; 10600 <printf@plt-0x4>
   105f8:	add	lr, pc, lr
   105fc:	ldr	pc, [lr, #8]!
   10600:	andeq	r0, r1, r0, lsl #20

00010604 <printf@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #16, 20	; 0x10000
   1060c:	ldr	pc, [ip, #2560]!	; 0xa00

00010610 <puts@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #16, 20	; 0x10000
   10618:	ldr	pc, [ip, #2552]!	; 0x9f8

0001061c <malloc@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #16, 20	; 0x10000
   10624:	ldr	pc, [ip, #2544]!	; 0x9f0

00010628 <__libc_start_main@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2536]!	; 0x9e8

00010634 <__gmon_start__@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2528]!	; 0x9e0

00010640 <__isoc99_scanf@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2520]!	; 0x9d8

0001064c <abort@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2512]!	; 0x9d0

Disassembly of section .text:

00010658 <_start@@Base>:
   10658:	mov	fp, #0
   1065c:	mov	lr, #0
   10660:	pop	{r1}		; (ldr r1, [sp], #4)
   10664:	mov	r2, sp
   10668:	push	{r2}		; (str r2, [sp, #-4]!)
   1066c:	push	{r0}		; (str r0, [sp, #-4]!)
   10670:	ldr	ip, [pc, #16]	; 10688 <_start@@Base+0x30>
   10674:	push	{ip}		; (str ip, [sp, #-4]!)
   10678:	ldr	r0, [pc, #12]	; 1068c <_start@@Base+0x34>
   1067c:	ldr	r3, [pc, #12]	; 10690 <_start@@Base+0x38>
   10680:	bl	10628 <__libc_start_main@plt>
   10684:	bl	1064c <abort@plt>
   10688:	andeq	r0, r1, ip, asr r9
   1068c:	andeq	r0, r1, r0, ror #15
   10690:	strdeq	r0, [r1], -ip
   10694:	ldr	r3, [pc, #20]	; 106b0 <_start@@Base+0x58>
   10698:	ldr	r2, [pc, #20]	; 106b4 <_start@@Base+0x5c>
   1069c:	add	r3, pc, r3
   106a0:	ldr	r2, [r3, r2]
   106a4:	cmp	r2, #0
   106a8:	bxeq	lr
   106ac:	b	10634 <__gmon_start__@plt>
   106b0:	andeq	r0, r1, ip, asr r9
   106b4:	andeq	r0, r0, r8, lsr #32
   106b8:	ldr	r3, [pc, #28]	; 106dc <_start@@Base+0x84>
   106bc:	ldr	r0, [pc, #28]	; 106e0 <_start@@Base+0x88>
   106c0:	sub	r3, r3, r0
   106c4:	cmp	r3, #6
   106c8:	bxls	lr
   106cc:	ldr	r3, [pc, #16]	; 106e4 <_start@@Base+0x8c>
   106d0:	cmp	r3, #0
   106d4:	bxeq	lr
   106d8:	bx	r3
   106dc:	andeq	r1, r2, r7, lsr r0
   106e0:	andeq	r1, r2, r4, lsr r0
   106e4:	andeq	r0, r0, r0
   106e8:	ldr	r1, [pc, #36]	; 10714 <_start@@Base+0xbc>
   106ec:	ldr	r0, [pc, #36]	; 10718 <_start@@Base+0xc0>
   106f0:	sub	r1, r1, r0
   106f4:	asr	r1, r1, #2
   106f8:	add	r1, r1, r1, lsr #31
   106fc:	asrs	r1, r1, #1
   10700:	bxeq	lr
   10704:	ldr	r3, [pc, #16]	; 1071c <_start@@Base+0xc4>
   10708:	cmp	r3, #0
   1070c:	bxeq	lr
   10710:	bx	r3
   10714:	andeq	r1, r2, r4, lsr r0
   10718:	andeq	r1, r2, r4, lsr r0
   1071c:	andeq	r0, r0, r0
   10720:	push	{r4, lr}
   10724:	ldr	r4, [pc, #24]	; 10744 <_start@@Base+0xec>
   10728:	ldrb	r3, [r4]
   1072c:	cmp	r3, #0
   10730:	popne	{r4, pc}
   10734:	bl	106b8 <_start@@Base+0x60>
   10738:	mov	r3, #1
   1073c:	strb	r3, [r4]
   10740:	pop	{r4, pc}
   10744:	andeq	r1, r2, r4, lsr r0
   10748:	ldr	r0, [pc, #40]	; 10778 <_start@@Base+0x120>
   1074c:	ldr	r3, [r0]
   10750:	cmp	r3, #0
   10754:	bne	1075c <_start@@Base+0x104>
   10758:	b	106e8 <_start@@Base+0x90>
   1075c:	ldr	r3, [pc, #24]	; 1077c <_start@@Base+0x124>
   10760:	cmp	r3, #0
   10764:	beq	10758 <_start@@Base+0x100>
   10768:	push	{r4, lr}
   1076c:	blx	r3
   10770:	pop	{r4, lr}
   10774:	b	106e8 <_start@@Base+0x90>
   10778:	andeq	r0, r2, r4, lsl pc
   1077c:	andeq	r0, r0, r0

00010780 <ordenado@@Base>:
   10780:	ldr	r3, [r0]
   10784:	cmp	r1, #1
   10788:	ble	107c8 <ordenado@@Base+0x48>
   1078c:	ldr	ip, [r0, #4]
   10790:	cmp	r3, ip
   10794:	bgt	107d0 <ordenado@@Base+0x50>
   10798:	add	r0, r0, #4
   1079c:	mov	r3, #1
   107a0:	add	r3, r3, #1
   107a4:	cmp	r1, r3
   107a8:	beq	107c0 <ordenado@@Base+0x40>
   107ac:	ldr	r2, [r0, #4]!
   107b0:	cmp	r2, ip
   107b4:	blt	107d8 <ordenado@@Base+0x58>
   107b8:	mov	ip, r2
   107bc:	b	107a0 <ordenado@@Base+0x20>
   107c0:	mov	r0, #1
   107c4:	bx	lr
   107c8:	mov	r0, #1
   107cc:	bx	lr
   107d0:	mov	r0, #0
   107d4:	bx	lr
   107d8:	mov	r0, #0
   107dc:	bx	lr

000107e0 <main@@Base>:
   107e0:	push	{r4, r5, r6, r7, r8, lr}
   107e4:	sub	sp, sp, #8
   107e8:	ldr	r0, [pc, #236]	; 108dc <main@@Base+0xfc>
   107ec:	bl	10604 <printf@plt>
   107f0:	add	r1, sp, #4
   107f4:	ldr	r0, [pc, #228]	; 108e0 <main@@Base+0x100>
   107f8:	bl	10640 <__isoc99_scanf@plt>
   107fc:	ldr	r3, [sp, #4]
   10800:	cmp	r3, #100	; 0x64
   10804:	bgt	108bc <main@@Base+0xdc>
   10808:	ldr	r0, [sp, #4]
   1080c:	lsl	r0, r0, #2
   10810:	bl	1061c <malloc@plt>
   10814:	mov	r7, r0
   10818:	ldr	r1, [sp, #4]
   1081c:	cmp	r1, #0
   10820:	ble	10860 <main@@Base+0x80>
   10824:	mov	r5, r0
   10828:	mov	r4, #0
   1082c:	ldr	r8, [pc, #176]	; 108e4 <main@@Base+0x104>
   10830:	ldr	r6, [pc, #168]	; 108e0 <main@@Base+0x100>
   10834:	add	r4, r4, #1
   10838:	mov	r1, r4
   1083c:	mov	r0, r8
   10840:	bl	10604 <printf@plt>
   10844:	mov	r1, r5
   10848:	mov	r0, r6
   1084c:	bl	10640 <__isoc99_scanf@plt>
   10850:	ldr	r1, [sp, #4]
   10854:	add	r5, r5, #4
   10858:	cmp	r1, r4
   1085c:	bgt	10834 <main@@Base+0x54>
   10860:	mov	r0, r7
   10864:	bl	10780 <ordenado@@Base>
   10868:	cmp	r0, #0
   1086c:	beq	108d0 <main@@Base+0xf0>
   10870:	ldr	r0, [pc, #112]	; 108e8 <main@@Base+0x108>
   10874:	bl	10604 <printf@plt>
   10878:	ldr	r5, [sp, #4]
   1087c:	sub	r4, r5, #1
   10880:	cmp	r4, #0
   10884:	ble	108a4 <main@@Base+0xc4>
   10888:	add	r5, r7, r5, lsl #2
   1088c:	ldr	r6, [pc, #88]	; 108ec <main@@Base+0x10c>
   10890:	ldr	r1, [r5, #-4]!
   10894:	mov	r0, r6
   10898:	bl	10604 <printf@plt>
   1089c:	subs	r4, r4, #1
   108a0:	bne	10890 <main@@Base+0xb0>
   108a4:	ldr	r1, [r7, r4, lsl #2]
   108a8:	ldr	r0, [pc, #64]	; 108f0 <main@@Base+0x110>
   108ac:	bl	10604 <printf@plt>
   108b0:	mov	r0, #0
   108b4:	add	sp, sp, #8
   108b8:	pop	{r4, r5, r6, r7, r8, pc}
   108bc:	ldr	r0, [pc, #48]	; 108f4 <main@@Base+0x114>
   108c0:	bl	10604 <printf@plt>
   108c4:	mov	r3, #100	; 0x64
   108c8:	str	r3, [sp, #4]
   108cc:	b	10808 <main@@Base+0x28>
   108d0:	ldr	r0, [pc, #32]	; 108f8 <main@@Base+0x118>
   108d4:	bl	10610 <puts@plt>
   108d8:	b	108b0 <main@@Base+0xd0>
   108dc:	andeq	r0, r1, ip, ror #18
   108e0:	muleq	r1, r0, r9
   108e4:	andeq	r0, r1, r4, asr #19
   108e8:	ldrdeq	r0, [r1], -ip
   108ec:	andeq	r0, r1, r0, lsr #20
   108f0:	andeq	r0, r1, r4, lsr #20
   108f4:	muleq	r1, r4, r9
   108f8:	andeq	r0, r1, ip, lsr #20

000108fc <__libc_csu_init@@Base>:
   108fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10900:	mov	r7, r0
   10904:	ldr	r6, [pc, #72]	; 10954 <__libc_csu_init@@Base+0x58>
   10908:	ldr	r5, [pc, #72]	; 10958 <__libc_csu_init@@Base+0x5c>
   1090c:	add	r6, pc, r6
   10910:	add	r5, pc, r5
   10914:	sub	r6, r6, r5
   10918:	mov	r8, r1
   1091c:	mov	r9, r2
   10920:	bl	105e4 <printf@plt-0x20>
   10924:	asrs	r6, r6, #2
   10928:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1092c:	mov	r4, #0
   10930:	add	r4, r4, #1
   10934:	ldr	r3, [r5], #4
   10938:	mov	r2, r9
   1093c:	mov	r1, r8
   10940:	mov	r0, r7
   10944:	blx	r3
   10948:	cmp	r6, r4
   1094c:	bne	10930 <__libc_csu_init@@Base+0x34>
   10950:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10954:	strdeq	r0, [r1], -ip
   10958:	strdeq	r0, [r1], -r4

0001095c <__libc_csu_fini@@Base>:
   1095c:	bx	lr

Disassembly of section .fini:

00010960 <.fini>:
   10960:	push	{r3, lr}
   10964:	pop	{r3, pc}
