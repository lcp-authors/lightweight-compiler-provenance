
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

000004e8 <_init>:
 4e8:	push	{r3, lr}
 4ec:	bl	580 <call_weak_fn>
 4f0:	pop	{r3, pc}

Disassembly of section .plt:

000004f4 <.plt>:
 4f4:	push	{lr}		; (str lr, [sp, #-4]!)
 4f8:	ldr	lr, [pc, #4]	; 504 <.plt+0x10>
 4fc:	add	lr, pc, lr
 500:	ldr	pc, [lr, #8]!
 504:	.word	0x00010afc

00000508 <__cxa_finalize@plt>:
 508:	add	ip, pc, #0, 12
 50c:	add	ip, ip, #16, 20	; 0x10000
 510:	ldr	pc, [ip, #2812]!	; 0xafc

00000514 <strtol@plt>:
 514:	add	ip, pc, #0, 12
 518:	add	ip, ip, #16, 20	; 0x10000
 51c:	ldr	pc, [ip, #2804]!	; 0xaf4

00000520 <rb_outofmemory@plt>:
 520:	add	ip, pc, #0, 12
 524:	add	ip, ip, #16, 20	; 0x10000
 528:	ldr	pc, [ip, #2796]!	; 0xaec

0000052c <strcpy@plt>:
 52c:	add	ip, pc, #0, 12
 530:	add	ip, ip, #16, 20	; 0x10000
 534:	ldr	pc, [ip, #2788]!	; 0xae4

00000538 <malloc@plt>:
 538:	add	ip, pc, #0, 12
 53c:	add	ip, ip, #16, 20	; 0x10000
 540:	ldr	pc, [ip, #2780]!	; 0xadc

00000544 <__gmon_start__@plt>:
 544:	add	ip, pc, #0, 12
 548:	add	ip, ip, #16, 20	; 0x10000
 54c:	ldr	pc, [ip, #2772]!	; 0xad4

00000550 <strlen@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2764]!	; 0xacc

0000055c <strchr@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2756]!	; 0xac4

00000568 <rb_strlcpy@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2748]!	; 0xabc

00000574 <irccmp@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2740]!	; 0xab4

Disassembly of section .text:

00000580 <call_weak_fn>:
 580:	ldr	r3, [pc, #20]	; 59c <call_weak_fn+0x1c>
 584:	ldr	r2, [pc, #20]	; 5a0 <call_weak_fn+0x20>
 588:	add	r3, pc, r3
 58c:	ldr	r2, [r3, r2]
 590:	cmp	r2, #0
 594:	bxeq	lr
 598:	b	544 <__gmon_start__@plt>
 59c:	.word	0x00010a70
 5a0:	.word	0x00000040

000005a4 <deregister_tm_clones>:
 5a4:	ldr	r0, [pc, #44]	; 5d8 <deregister_tm_clones+0x34>
 5a8:	ldr	r3, [pc, #44]	; 5dc <deregister_tm_clones+0x38>
 5ac:	add	r0, pc, r0
 5b0:	add	r3, pc, r3
 5b4:	cmp	r3, r0
 5b8:	ldr	r3, [pc, #32]	; 5e0 <deregister_tm_clones+0x3c>
 5bc:	add	r3, pc, r3
 5c0:	bxeq	lr
 5c4:	ldr	r2, [pc, #24]	; 5e4 <deregister_tm_clones+0x40>
 5c8:	ldr	r3, [r3, r2]
 5cc:	cmp	r3, #0
 5d0:	bxeq	lr
 5d4:	bx	r3
 5d8:	.word	0x00010b10
 5dc:	.word	0x00010b0c
 5e0:	.word	0x00010a3c
 5e4:	.word	0x00000038

000005e8 <register_tm_clones>:
 5e8:	ldr	r0, [pc, #56]	; 628 <register_tm_clones+0x40>
 5ec:	ldr	r3, [pc, #56]	; 62c <register_tm_clones+0x44>
 5f0:	add	r0, pc, r0
 5f4:	add	r3, pc, r3
 5f8:	sub	r1, r3, r0
 5fc:	ldr	r3, [pc, #44]	; 630 <register_tm_clones+0x48>
 600:	asr	r1, r1, #2
 604:	add	r3, pc, r3
 608:	add	r1, r1, r1, lsr #31
 60c:	asrs	r1, r1, #1
 610:	bxeq	lr
 614:	ldr	r2, [pc, #24]	; 634 <register_tm_clones+0x4c>
 618:	ldr	r3, [r3, r2]
 61c:	cmp	r3, #0
 620:	bxeq	lr
 624:	bx	r3
 628:	.word	0x00010acc
 62c:	.word	0x00010ac8
 630:	.word	0x000109f4
 634:	.word	0x00000048

00000638 <__do_global_dtors_aux>:
 638:	ldr	r3, [pc, #76]	; 68c <__do_global_dtors_aux+0x54>
 63c:	ldr	r2, [pc, #76]	; 690 <__do_global_dtors_aux+0x58>
 640:	add	r3, pc, r3
 644:	add	r2, pc, r2
 648:	ldrb	r3, [r3]
 64c:	cmp	r3, #0
 650:	bxne	lr
 654:	ldr	r3, [pc, #56]	; 694 <__do_global_dtors_aux+0x5c>
 658:	push	{r4, lr}
 65c:	ldr	r3, [r2, r3]
 660:	cmp	r3, #0
 664:	beq	674 <__do_global_dtors_aux+0x3c>
 668:	ldr	r3, [pc, #40]	; 698 <__do_global_dtors_aux+0x60>
 66c:	ldr	r0, [pc, r3]
 670:	bl	508 <__cxa_finalize@plt>
 674:	bl	5a4 <deregister_tm_clones>
 678:	ldr	r3, [pc, #28]	; 69c <__do_global_dtors_aux+0x64>
 67c:	mov	r2, #1
 680:	add	r3, pc, r3
 684:	strb	r2, [r3]
 688:	pop	{r4, pc}
 68c:	.word	0x00010a7c
 690:	.word	0x000109b4
 694:	.word	0x00000034
 698:	.word	0x000109d8
 69c:	.word	0x00010a3c

000006a0 <frame_dummy>:
 6a0:	b	5e8 <register_tm_clones>

000006a4 <mr_pass>:
 6a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
 6a8:	strd	r6, [sp, #8]
 6ac:	strd	r8, [sp, #16]
 6b0:	strd	sl, [sp, #24]
 6b4:	str	lr, [sp, #32]
 6b8:	add	fp, sp, #32
 6bc:	sub	sp, sp, #4
 6c0:	mov	r5, r1
 6c4:	mov	r8, r3
 6c8:	ldr	r6, [fp, #4]
 6cc:	ldr	r7, [pc, #596]	; 928 <mr_pass+0x284>
 6d0:	add	r7, pc, r7
 6d4:	ldr	r4, [r6, #4]
 6d8:	mov	r0, r4
 6dc:	bl	550 <strlen@plt>
 6e0:	add	r0, r0, #8
 6e4:	bic	r0, r0, #7
 6e8:	sub	sp, sp, r0
 6ec:	mov	r9, sp
 6f0:	mov	r1, r4
 6f4:	mov	r0, r9
 6f8:	bl	52c <strcpy@plt>
 6fc:	ldr	r4, [r5, #432]	; 0x1b0
 700:	ldr	r3, [r4, #276]	; 0x114
 704:	cmp	r3, #0
 708:	beq	728 <mr_pass+0x84>
 70c:	sub	sp, fp, #32
 710:	ldrd	r4, [sp]
 714:	ldrd	r6, [sp, #8]
 718:	ldrd	r8, [sp, #16]
 71c:	ldrd	sl, [sp, #24]
 720:	add	sp, sp, #32
 724:	pop	{pc}		; (ldr pc, [sp], #4)
 728:	ldr	r3, [r4, #280]	; 0x118
 72c:	cmp	r3, #0
 730:	bne	70c <mr_pass+0x68>
 734:	mov	r1, #58	; 0x3a
 738:	mov	r0, r9
 73c:	bl	55c <strchr@plt>
 740:	cmp	r0, #0
 744:	beq	8f0 <mr_pass+0x24c>
 748:	mov	r3, #0
 74c:	strb	r3, [r0]
 750:	ldrb	r3, [r0, #1]
 754:	cmp	r3, #0
 758:	moveq	r3, #0
 75c:	streq	r3, [r4, #276]	; 0x114
 760:	bne	88c <mr_pass+0x1e8>
 764:	ldrb	r3, [r9]
 768:	cmp	r3, #0
 76c:	bne	8c0 <mr_pass+0x21c>
 770:	cmp	r8, #2
 774:	ble	70c <mr_pass+0x68>
 778:	ldr	r3, [r5, #24]
 77c:	cmp	r3, #0
 780:	bne	70c <mr_pass+0x68>
 784:	ldr	r3, [r5, #436]	; 0x1b4
 788:	cmp	r3, #0
 78c:	beq	70c <mr_pass+0x68>
 790:	ldr	r1, [pc, #404]	; 92c <mr_pass+0x288>
 794:	add	r1, pc, r1
 798:	ldr	r0, [r6, #8]
 79c:	bl	574 <irccmp@plt>
 7a0:	cmp	r0, #0
 7a4:	bne	7b8 <mr_pass+0x114>
 7a8:	ldr	r3, [r5, #52]	; 0x34
 7ac:	cmp	r3, #0
 7b0:	moveq	r3, #268435456	; 0x10000000
 7b4:	streq	r3, [r5, #52]	; 0x34
 7b8:	cmp	r8, #5
 7bc:	bne	70c <mr_pass+0x68>
 7c0:	mov	r2, #10
 7c4:	mov	r1, #0
 7c8:	ldr	r0, [r6, #12]
 7cc:	bl	514 <strtol@plt>
 7d0:	cmp	r0, #5
 7d4:	ble	70c <mr_pass+0x68>
 7d8:	ldr	r3, [r6, #16]
 7dc:	ldr	r2, [pc, #332]	; 930 <mr_pass+0x28c>
 7e0:	ldr	r2, [r7, r2]
 7e4:	ldrb	r1, [r3]
 7e8:	ldr	r2, [r2, r1, lsl #2]
 7ec:	tst	r2, #16
 7f0:	beq	70c <mr_pass+0x68>
 7f4:	ldr	r2, [pc, #308]	; 930 <mr_pass+0x28c>
 7f8:	ldr	r1, [r7, r2]
 7fc:	ldrb	r0, [r3, #1]
 800:	mov	r2, #16
 804:	movt	r2, #1
 808:	ldr	r1, [r1, r0, lsl #2]
 80c:	tst	r2, r1
 810:	beq	70c <mr_pass+0x68>
 814:	ldr	r2, [pc, #276]	; 930 <mr_pass+0x28c>
 818:	ldr	r1, [r7, r2]
 81c:	ldrb	r0, [r3, #2]
 820:	mov	r2, #16
 824:	movt	r2, #1
 828:	ldr	r1, [r1, r0, lsl #2]
 82c:	tst	r2, r1
 830:	beq	70c <mr_pass+0x68>
 834:	ldrb	r3, [r3, #3]
 838:	cmp	r3, #0
 83c:	bne	70c <mr_pass+0x68>
 840:	ldr	r3, [r5, #436]	; 0x1b4
 844:	cmn	r3, #260	; 0x104
 848:	beq	858 <mr_pass+0x1b4>
 84c:	ldrb	r3, [r3, #260]	; 0x104
 850:	cmp	r3, #0
 854:	bne	70c <mr_pass+0x68>
 858:	ldr	r2, [r5, #432]	; 0x1b0
 85c:	ldr	r3, [pc, #208]	; 934 <mr_pass+0x290>
 860:	ldr	r1, [r7, r3]
 864:	ldr	r3, [r2, #296]	; 0x128
 868:	ldr	r1, [r1]
 86c:	orr	r3, r3, r1
 870:	str	r3, [r2, #296]	; 0x128
 874:	ldr	r0, [r5, #436]	; 0x1b4
 878:	mov	r2, #10
 87c:	ldr	r1, [r6, #16]
 880:	add	r0, r0, #260	; 0x104
 884:	bl	568 <rb_strlcpy@plt>
 888:	b	70c <mr_pass+0x68>
 88c:	add	r4, r0, #1
 890:	mov	r0, #128	; 0x80
 894:	bl	538 <malloc@plt>
 898:	subs	sl, r0, #0
 89c:	beq	8bc <mr_pass+0x218>
 8a0:	mov	r2, #128	; 0x80
 8a4:	mov	r1, r4
 8a8:	mov	r0, sl
 8ac:	bl	568 <rb_strlcpy@plt>
 8b0:	ldr	r3, [r5, #432]	; 0x1b0
 8b4:	str	sl, [r3, #276]	; 0x114
 8b8:	b	764 <mr_pass+0xc0>
 8bc:	bl	520 <rb_outofmemory@plt>
 8c0:	ldr	sl, [r5, #432]	; 0x1b0
 8c4:	mov	r0, #128	; 0x80
 8c8:	bl	538 <malloc@plt>
 8cc:	subs	r4, r0, #0
 8d0:	beq	8ec <mr_pass+0x248>
 8d4:	mov	r2, #128	; 0x80
 8d8:	mov	r1, r9
 8dc:	mov	r0, r4
 8e0:	bl	568 <rb_strlcpy@plt>
 8e4:	str	r4, [sl, #280]	; 0x118
 8e8:	b	770 <mr_pass+0xcc>
 8ec:	bl	520 <rb_outofmemory@plt>
 8f0:	ldrb	r3, [r9]
 8f4:	cmp	r3, #0
 8f8:	beq	770 <mr_pass+0xcc>
 8fc:	mov	r0, #128	; 0x80
 900:	bl	538 <malloc@plt>
 904:	subs	r4, r0, #0
 908:	beq	8bc <mr_pass+0x218>
 90c:	mov	r2, #128	; 0x80
 910:	mov	r1, r9
 914:	mov	r0, r4
 918:	bl	568 <rb_strlcpy@plt>
 91c:	ldr	r3, [r5, #432]	; 0x1b0
 920:	str	r4, [r3, #276]	; 0x114
 924:	b	770 <mr_pass+0xcc>
 928:	.word	0x00010928
 92c:	.word	0x000001e4
 930:	.word	0x00000044
 934:	.word	0x0000003c

Disassembly of section .fini:

00000938 <_fini>:
 938:	push	{r3, lr}
 93c:	pop	{r3, pc}
