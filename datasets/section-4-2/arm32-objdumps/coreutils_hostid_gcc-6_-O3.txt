
../repos/coreutils/src/hostid:     file format elf32-littlearm


Disassembly of section .init:

00010afc <.init>:
   10afc:	push	{r3, lr}
   10b00:	bl	10e84 <abort@plt+0x164>
   10b04:	pop	{r3, pc}

Disassembly of section .plt:

00010b08 <calloc@plt-0x14>:
   10b08:	push	{lr}		; (str lr, [sp, #-4]!)
   10b0c:	ldr	lr, [pc, #4]	; 10b18 <calloc@plt-0x4>
   10b10:	add	lr, pc, lr
   10b14:	ldr	pc, [lr, #8]!
   10b18:	andeq	r7, r1, r8, ror #9

00010b1c <calloc@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #94208	; 0x17000
   10b24:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b28 <fputs_unlocked@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #94208	; 0x17000
   10b30:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b34 <raise@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #94208	; 0x17000
   10b3c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #94208	; 0x17000
   10b48:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b4c <fflush@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #94208	; 0x17000
   10b54:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b58 <free@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #94208	; 0x17000
   10b60:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b64 <_exit@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #94208	; 0x17000
   10b6c:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b70 <memcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #94208	; 0x17000
   10b78:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b7c <mbsinit@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #94208	; 0x17000
   10b84:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b88 <gethostid@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #94208	; 0x17000
   10b90:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b94 <memcmp@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #94208	; 0x17000
   10b9c:	ldr	pc, [ip, #1176]!	; 0x498

00010ba0 <fputc_unlocked@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #94208	; 0x17000
   10ba8:	ldr	pc, [ip, #1168]!	; 0x490

00010bac <dcgettext@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #94208	; 0x17000
   10bb4:	ldr	pc, [ip, #1160]!	; 0x488

00010bb8 <realloc@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #94208	; 0x17000
   10bc0:	ldr	pc, [ip, #1152]!	; 0x480

00010bc4 <textdomain@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #94208	; 0x17000
   10bcc:	ldr	pc, [ip, #1144]!	; 0x478

00010bd0 <iswprint@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #94208	; 0x17000
   10bd8:	ldr	pc, [ip, #1136]!	; 0x470

00010bdc <fwrite@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #94208	; 0x17000
   10be4:	ldr	pc, [ip, #1128]!	; 0x468

00010be8 <lseek64@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #94208	; 0x17000
   10bf0:	ldr	pc, [ip, #1120]!	; 0x460

00010bf4 <__ctype_get_mb_cur_max@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #94208	; 0x17000
   10bfc:	ldr	pc, [ip, #1112]!	; 0x458

00010c00 <__fpending@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #94208	; 0x17000
   10c08:	ldr	pc, [ip, #1104]!	; 0x450

00010c0c <mbrtowc@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #94208	; 0x17000
   10c14:	ldr	pc, [ip, #1096]!	; 0x448

00010c18 <error@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #94208	; 0x17000
   10c20:	ldr	pc, [ip, #1088]!	; 0x440

00010c24 <malloc@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #94208	; 0x17000
   10c2c:	ldr	pc, [ip, #1080]!	; 0x438

00010c30 <__libc_start_main@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #94208	; 0x17000
   10c38:	ldr	pc, [ip, #1072]!	; 0x430

00010c3c <__freading@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #94208	; 0x17000
   10c44:	ldr	pc, [ip, #1064]!	; 0x428

00010c48 <__gmon_start__@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #94208	; 0x17000
   10c50:	ldr	pc, [ip, #1056]!	; 0x420

00010c54 <getopt_long@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #1048]!	; 0x418

00010c60 <__ctype_b_loc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #1040]!	; 0x410

00010c6c <exit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #1032]!	; 0x408

00010c78 <strlen@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #1024]!	; 0x400

00010c84 <__errno_location@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c90 <__cxa_atexit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c9c <memset@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #1000]!	; 0x3e8

00010ca8 <__printf_chk@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #992]!	; 0x3e0

00010cb4 <fileno@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #984]!	; 0x3d8

00010cc0 <__fprintf_chk@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #976]!	; 0x3d0

00010ccc <fclose@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cd8 <fseeko64@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #960]!	; 0x3c0

00010ce4 <setlocale@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #952]!	; 0x3b8

00010cf0 <strrchr@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cfc <nl_langinfo@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #936]!	; 0x3a8

00010d08 <bindtextdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #928]!	; 0x3a0

00010d14 <strncmp@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #920]!	; 0x398

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #912]!	; 0x390

Disassembly of section .text:

00010d2c <.text>:
   10d2c:	push	{r4, r5, r6, r7, r8, lr}
   10d30:	mov	r7, r0
   10d34:	sub	sp, sp, #24
   10d38:	ldr	r0, [r1]
   10d3c:	mov	r5, r1
   10d40:	bl	114b0 <abort@plt+0x790>
   10d44:	ldr	r1, [pc, #204]	; 10e18 <abort@plt+0xf8>
   10d48:	mov	r0, #6
   10d4c:	bl	10ce4 <setlocale@plt>
   10d50:	ldr	r1, [pc, #196]	; 10e1c <abort@plt+0xfc>
   10d54:	ldr	r0, [pc, #196]	; 10e20 <abort@plt+0x100>
   10d58:	bl	10d08 <bindtextdomain@plt>
   10d5c:	ldr	r0, [pc, #188]	; 10e20 <abort@plt+0x100>
   10d60:	bl	10bc4 <textdomain@plt>
   10d64:	ldr	r0, [pc, #184]	; 10e24 <abort@plt+0x104>
   10d68:	bl	16f8c <abort@plt+0x626c>
   10d6c:	ldr	r1, [pc, #180]	; 10e28 <abort@plt+0x108>
   10d70:	ldr	r2, [pc, #180]	; 10e2c <abort@plt+0x10c>
   10d74:	ldr	r3, [pc, #180]	; 10e30 <abort@plt+0x110>
   10d78:	ldr	r1, [r1]
   10d7c:	ldr	r8, [pc, #176]	; 10e34 <abort@plt+0x114>
   10d80:	mov	r4, #0
   10d84:	mov	r6, #1
   10d88:	str	r1, [sp]
   10d8c:	str	r2, [sp, #12]
   10d90:	str	r3, [sp, #8]
   10d94:	mov	r1, r5
   10d98:	ldr	r3, [pc, #152]	; 10e38 <abort@plt+0x118>
   10d9c:	mov	r0, r7
   10da0:	str	r4, [sp, #16]
   10da4:	str	r6, [sp, #4]
   10da8:	ldr	r2, [pc, #140]	; 10e3c <abort@plt+0x11c>
   10dac:	bl	113d8 <abort@plt+0x6b8>
   10db0:	ldr	r3, [r8]
   10db4:	cmp	r7, r3
   10db8:	bgt	10ddc <abort@plt+0xbc>
   10dbc:	bl	10b88 <gethostid@plt>
   10dc0:	ldr	r1, [pc, #120]	; 10e40 <abort@plt+0x120>
   10dc4:	mov	r2, r0
   10dc8:	mov	r0, r6
   10dcc:	bl	10ca8 <__printf_chk@plt>
   10dd0:	mov	r0, r4
   10dd4:	add	sp, sp, #24
   10dd8:	pop	{r4, r5, r6, r7, r8, pc}
   10ddc:	mov	r2, #5
   10de0:	ldr	r1, [pc, #92]	; 10e44 <abort@plt+0x124>
   10de4:	mov	r0, r4
   10de8:	bl	10bac <dcgettext@plt>
   10dec:	ldr	r3, [r8]
   10df0:	mov	r7, r0
   10df4:	ldr	r0, [r5, r3, lsl #2]
   10df8:	bl	1537c <abort@plt+0x465c>
   10dfc:	mov	r2, r7
   10e00:	mov	r1, r4
   10e04:	mov	r3, r0
   10e08:	mov	r0, r4
   10e0c:	bl	10c18 <error@plt>
   10e10:	mov	r0, r6
   10e14:	bl	10f70 <abort@plt+0x250>
   10e18:	andeq	r7, r1, r0, ror r0
   10e1c:	andeq	r7, r1, r8, asr #3
   10e20:	andeq	r7, r1, r0, lsr #2
   10e24:	andeq	r1, r1, ip, lsr r2
   10e28:	andeq	r8, r2, r8, asr #1
   10e2c:	andeq	r7, r1, r0, ror #3
   10e30:	andeq	r0, r1, r0, ror pc
   10e34:	andeq	r8, r2, r8, lsl r1
   10e38:	andeq	r7, r1, ip, lsl r1
   10e3c:	andeq	r6, r1, r8, ror #31
   10e40:	andeq	r7, r1, r4, lsl #4
   10e44:	strdeq	r7, [r1], -r0
   10e48:	mov	fp, #0
   10e4c:	mov	lr, #0
   10e50:	pop	{r1}		; (ldr r1, [sp], #4)
   10e54:	mov	r2, sp
   10e58:	push	{r2}		; (str r2, [sp, #-4]!)
   10e5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10e60:	ldr	ip, [pc, #16]	; 10e78 <abort@plt+0x158>
   10e64:	push	{ip}		; (str ip, [sp, #-4]!)
   10e68:	ldr	r0, [pc, #12]	; 10e7c <abort@plt+0x15c>
   10e6c:	ldr	r3, [pc, #12]	; 10e80 <abort@plt+0x160>
   10e70:	bl	10c30 <__libc_start_main@plt>
   10e74:	bl	10d20 <abort@plt>
   10e78:	andeq	r6, r1, r8, lsl #31
   10e7c:	andeq	r0, r1, ip, lsr #26
   10e80:	andeq	r6, r1, r8, lsr #30
   10e84:	ldr	r3, [pc, #20]	; 10ea0 <abort@plt+0x180>
   10e88:	ldr	r2, [pc, #20]	; 10ea4 <abort@plt+0x184>
   10e8c:	add	r3, pc, r3
   10e90:	ldr	r2, [r3, r2]
   10e94:	cmp	r2, #0
   10e98:	bxeq	lr
   10e9c:	b	10c48 <__gmon_start__@plt>
   10ea0:	andeq	r7, r1, ip, ror #2
   10ea4:	strheq	r0, [r0], -ip
   10ea8:	ldr	r3, [pc, #28]	; 10ecc <abort@plt+0x1ac>
   10eac:	ldr	r0, [pc, #28]	; 10ed0 <abort@plt+0x1b0>
   10eb0:	sub	r3, r3, r0
   10eb4:	cmp	r3, #6
   10eb8:	bxls	lr
   10ebc:	ldr	r3, [pc, #16]	; 10ed4 <abort@plt+0x1b4>
   10ec0:	cmp	r3, #0
   10ec4:	bxeq	lr
   10ec8:	bx	r3
   10ecc:	andeq	r8, r2, r3, lsl r1
   10ed0:	andeq	r8, r2, r0, lsl r1
   10ed4:	andeq	r0, r0, r0
   10ed8:	ldr	r1, [pc, #36]	; 10f04 <abort@plt+0x1e4>
   10edc:	ldr	r0, [pc, #36]	; 10f08 <abort@plt+0x1e8>
   10ee0:	sub	r1, r1, r0
   10ee4:	asr	r1, r1, #2
   10ee8:	add	r1, r1, r1, lsr #31
   10eec:	asrs	r1, r1, #1
   10ef0:	bxeq	lr
   10ef4:	ldr	r3, [pc, #16]	; 10f0c <abort@plt+0x1ec>
   10ef8:	cmp	r3, #0
   10efc:	bxeq	lr
   10f00:	bx	r3
   10f04:	andeq	r8, r2, r0, lsl r1
   10f08:	andeq	r8, r2, r0, lsl r1
   10f0c:	andeq	r0, r0, r0
   10f10:	push	{r4, lr}
   10f14:	ldr	r4, [pc, #24]	; 10f34 <abort@plt+0x214>
   10f18:	ldrb	r3, [r4]
   10f1c:	cmp	r3, #0
   10f20:	popne	{r4, pc}
   10f24:	bl	10ea8 <abort@plt+0x188>
   10f28:	mov	r3, #1
   10f2c:	strb	r3, [r4]
   10f30:	pop	{r4, pc}
   10f34:	andeq	r8, r2, ip, lsr #2
   10f38:	ldr	r0, [pc, #40]	; 10f68 <abort@plt+0x248>
   10f3c:	ldr	r3, [r0]
   10f40:	cmp	r3, #0
   10f44:	bne	10f4c <abort@plt+0x22c>
   10f48:	b	10ed8 <abort@plt+0x1b8>
   10f4c:	ldr	r3, [pc, #24]	; 10f6c <abort@plt+0x24c>
   10f50:	cmp	r3, #0
   10f54:	beq	10f48 <abort@plt+0x228>
   10f58:	push	{r4, lr}
   10f5c:	blx	r3
   10f60:	pop	{r4, lr}
   10f64:	b	10ed8 <abort@plt+0x1b8>
   10f68:	andeq	r7, r2, r4, lsl pc
   10f6c:	andeq	r0, r0, r0
   10f70:	subs	r6, r0, #0
   10f74:	push	{r7, lr}
   10f78:	sub	sp, sp, #56	; 0x38
   10f7c:	beq	10fb8 <abort@plt+0x298>
   10f80:	ldr	r3, [pc, #588]	; 111d4 <abort@plt+0x4b4>
   10f84:	mov	r2, #5
   10f88:	ldr	r1, [pc, #584]	; 111d8 <abort@plt+0x4b8>
   10f8c:	mov	r0, #0
   10f90:	ldr	r4, [r3]
   10f94:	bl	10bac <dcgettext@plt>
   10f98:	ldr	r3, [pc, #572]	; 111dc <abort@plt+0x4bc>
   10f9c:	mov	r1, #1
   10fa0:	ldr	r3, [r3]
   10fa4:	mov	r2, r0
   10fa8:	mov	r0, r4
   10fac:	bl	10cc0 <__fprintf_chk@plt>
   10fb0:	mov	r0, r6
   10fb4:	bl	10c6c <exit@plt>
   10fb8:	mov	r2, #5
   10fbc:	ldr	r1, [pc, #540]	; 111e0 <abort@plt+0x4c0>
   10fc0:	bl	10bac <dcgettext@plt>
   10fc4:	ldr	r3, [pc, #528]	; 111dc <abort@plt+0x4bc>
   10fc8:	ldr	r7, [pc, #532]	; 111e4 <abort@plt+0x4c4>
   10fcc:	ldr	r4, [pc, #532]	; 111e8 <abort@plt+0x4c8>
   10fd0:	ldr	r2, [r3]
   10fd4:	mov	r1, r0
   10fd8:	mov	r0, #1
   10fdc:	bl	10ca8 <__printf_chk@plt>
   10fe0:	mov	r2, #5
   10fe4:	ldr	r1, [pc, #512]	; 111ec <abort@plt+0x4cc>
   10fe8:	mov	r0, r6
   10fec:	bl	10bac <dcgettext@plt>
   10ff0:	ldr	r1, [r7]
   10ff4:	bl	10b28 <fputs_unlocked@plt>
   10ff8:	mov	r2, #5
   10ffc:	ldr	r1, [pc, #492]	; 111f0 <abort@plt+0x4d0>
   11000:	mov	r0, r6
   11004:	bl	10bac <dcgettext@plt>
   11008:	ldr	r1, [r7]
   1100c:	bl	10b28 <fputs_unlocked@plt>
   11010:	ldm	r4!, {r0, r1, r2, r3}
   11014:	mov	lr, sp
   11018:	stmia	lr!, {r0, r1, r2, r3}
   1101c:	ldm	r4!, {r0, r1, r2, r3}
   11020:	ldr	ip, [sp]
   11024:	stmia	lr!, {r0, r1, r2, r3}
   11028:	cmp	ip, #0
   1102c:	ldm	r4!, {r0, r1, r2, r3}
   11030:	stmia	lr!, {r0, r1, r2, r3}
   11034:	ldm	r4, {r0, r1}
   11038:	moveq	r4, sp
   1103c:	stm	lr, {r0, r1}
   11040:	beq	11070 <abort@plt+0x350>
   11044:	ldr	r5, [pc, #424]	; 111f4 <abort@plt+0x4d4>
   11048:	mov	r4, sp
   1104c:	b	1105c <abort@plt+0x33c>
   11050:	ldr	ip, [r4, #8]!
   11054:	cmp	ip, #0
   11058:	beq	11070 <abort@plt+0x350>
   1105c:	mov	r1, ip
   11060:	mov	r0, r5
   11064:	bl	10b40 <strcmp@plt>
   11068:	cmp	r0, #0
   1106c:	bne	11050 <abort@plt+0x330>
   11070:	ldr	r4, [r4, #4]
   11074:	mov	r2, #5
   11078:	cmp	r4, #0
   1107c:	ldr	r1, [pc, #372]	; 111f8 <abort@plt+0x4d8>
   11080:	beq	11128 <abort@plt+0x408>
   11084:	mov	r0, #0
   11088:	bl	10bac <dcgettext@plt>
   1108c:	ldr	r3, [pc, #360]	; 111fc <abort@plt+0x4dc>
   11090:	ldr	r2, [pc, #360]	; 11200 <abort@plt+0x4e0>
   11094:	mov	r1, r0
   11098:	mov	r0, #1
   1109c:	bl	10ca8 <__printf_chk@plt>
   110a0:	mov	r1, #0
   110a4:	mov	r0, #5
   110a8:	bl	10ce4 <setlocale@plt>
   110ac:	cmp	r0, #0
   110b0:	ldreq	r5, [pc, #316]	; 111f4 <abort@plt+0x4d4>
   110b4:	beq	110d0 <abort@plt+0x3b0>
   110b8:	mov	r2, #3
   110bc:	ldr	r1, [pc, #320]	; 11204 <abort@plt+0x4e4>
   110c0:	bl	10d14 <strncmp@plt>
   110c4:	ldr	r5, [pc, #296]	; 111f4 <abort@plt+0x4d4>
   110c8:	cmp	r0, #0
   110cc:	bne	111b8 <abort@plt+0x498>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #300]	; 11208 <abort@plt+0x4e8>
   110d8:	mov	r0, #0
   110dc:	bl	10bac <dcgettext@plt>
   110e0:	ldr	r3, [pc, #268]	; 111f4 <abort@plt+0x4d4>
   110e4:	ldr	r2, [pc, #272]	; 111fc <abort@plt+0x4dc>
   110e8:	mov	r1, r0
   110ec:	mov	r0, #1
   110f0:	bl	10ca8 <__printf_chk@plt>
   110f4:	mov	r2, #5
   110f8:	ldr	r1, [pc, #268]	; 1120c <abort@plt+0x4ec>
   110fc:	mov	r0, #0
   11100:	bl	10bac <dcgettext@plt>
   11104:	ldr	r2, [pc, #260]	; 11210 <abort@plt+0x4f0>
   11108:	cmp	r4, r5
   1110c:	ldr	r3, [pc, #256]	; 11214 <abort@plt+0x4f4>
   11110:	movne	r3, r2
   11114:	mov	r1, r0
   11118:	mov	r2, r4
   1111c:	mov	r0, #1
   11120:	bl	10ca8 <__printf_chk@plt>
   11124:	b	10fb0 <abort@plt+0x290>
   11128:	mov	r0, r4
   1112c:	bl	10bac <dcgettext@plt>
   11130:	ldr	r3, [pc, #196]	; 111fc <abort@plt+0x4dc>
   11134:	ldr	r2, [pc, #196]	; 11200 <abort@plt+0x4e0>
   11138:	mov	r1, r0
   1113c:	mov	r0, #1
   11140:	bl	10ca8 <__printf_chk@plt>
   11144:	mov	r1, r4
   11148:	mov	r0, #5
   1114c:	bl	10ce4 <setlocale@plt>
   11150:	cmp	r0, #0
   11154:	beq	1116c <abort@plt+0x44c>
   11158:	mov	r2, #3
   1115c:	ldr	r1, [pc, #160]	; 11204 <abort@plt+0x4e4>
   11160:	bl	10d14 <strncmp@plt>
   11164:	cmp	r0, #0
   11168:	bne	111b0 <abort@plt+0x490>
   1116c:	mov	r2, #5
   11170:	ldr	r1, [pc, #144]	; 11208 <abort@plt+0x4e8>
   11174:	mov	r0, #0
   11178:	bl	10bac <dcgettext@plt>
   1117c:	ldr	r3, [pc, #112]	; 111f4 <abort@plt+0x4d4>
   11180:	ldr	r2, [pc, #116]	; 111fc <abort@plt+0x4dc>
   11184:	mov	r4, r3
   11188:	mov	r1, r0
   1118c:	mov	r0, #1
   11190:	bl	10ca8 <__printf_chk@plt>
   11194:	ldr	r1, [pc, #112]	; 1120c <abort@plt+0x4ec>
   11198:	mov	r2, #5
   1119c:	mov	r0, #0
   111a0:	bl	10bac <dcgettext@plt>
   111a4:	ldr	r3, [pc, #104]	; 11214 <abort@plt+0x4f4>
   111a8:	mov	r1, r0
   111ac:	b	11118 <abort@plt+0x3f8>
   111b0:	ldr	r5, [pc, #60]	; 111f4 <abort@plt+0x4d4>
   111b4:	mov	r4, r5
   111b8:	mov	r2, #5
   111bc:	ldr	r1, [pc, #84]	; 11218 <abort@plt+0x4f8>
   111c0:	mov	r0, #0
   111c4:	bl	10bac <dcgettext@plt>
   111c8:	ldr	r1, [r7]
   111cc:	bl	10b28 <fputs_unlocked@plt>
   111d0:	b	110d0 <abort@plt+0x3b0>
   111d4:	andeq	r8, r2, r0, lsr #2
   111d8:	strdeq	r6, [r1], -r0
   111dc:	andeq	r8, r2, r8, lsr r1
   111e0:	andeq	r7, r1, r8, lsl r0
   111e4:	andeq	r8, r2, r4, lsr #2
   111e8:			; <UNDEFINED> instruction: 0x00016fb0
   111ec:	andeq	r7, r1, r4, ror r0
   111f0:	andeq	r7, r1, r4, lsr #1
   111f4:	andeq	r6, r1, r8, ror #31
   111f8:	ldrdeq	r7, [r1], -ip
   111fc:	strdeq	r7, [r1], -r4
   11200:	andeq	r7, r1, ip, lsl r1
   11204:	andeq	r7, r1, ip, lsr #2
   11208:	andeq	r7, r1, r8, ror r1
   1120c:	muleq	r1, r4, r1
   11210:	andeq	r7, r1, r0, ror r0
   11214:	andeq	r7, r1, r4, lsl r2
   11218:	andeq	r7, r1, r0, lsr r1
   1121c:	ldr	r3, [pc, #4]	; 11228 <abort@plt+0x508>
   11220:	str	r0, [r3]
   11224:	bx	lr
   11228:	andeq	r8, r2, r0, lsr r1
   1122c:	ldr	r3, [pc, #4]	; 11238 <abort@plt+0x518>
   11230:	strb	r0, [r3, #4]
   11234:	bx	lr
   11238:	andeq	r8, r2, r0, lsr r1
   1123c:	ldr	r3, [pc, #192]	; 11304 <abort@plt+0x5e4>
   11240:	push	{r4, r5, r6, lr}
   11244:	sub	sp, sp, #8
   11248:	ldr	r0, [r3]
   1124c:	bl	16690 <abort@plt+0x5970>
   11250:	cmp	r0, #0
   11254:	beq	11278 <abort@plt+0x558>
   11258:	ldr	r4, [pc, #168]	; 11308 <abort@plt+0x5e8>
   1125c:	ldrb	r3, [r4, #4]
   11260:	cmp	r3, #0
   11264:	beq	11294 <abort@plt+0x574>
   11268:	bl	10c84 <__errno_location@plt>
   1126c:	ldr	r3, [r0]
   11270:	cmp	r3, #32
   11274:	bne	11294 <abort@plt+0x574>
   11278:	ldr	r3, [pc, #140]	; 1130c <abort@plt+0x5ec>
   1127c:	ldr	r0, [r3]
   11280:	bl	16690 <abort@plt+0x5970>
   11284:	cmp	r0, #0
   11288:	bne	112dc <abort@plt+0x5bc>
   1128c:	add	sp, sp, #8
   11290:	pop	{r4, r5, r6, pc}
   11294:	mov	r2, #5
   11298:	ldr	r1, [pc, #112]	; 11310 <abort@plt+0x5f0>
   1129c:	mov	r0, #0
   112a0:	bl	10bac <dcgettext@plt>
   112a4:	ldr	r4, [r4]
   112a8:	cmp	r4, #0
   112ac:	mov	r5, r0
   112b0:	beq	112e8 <abort@plt+0x5c8>
   112b4:	bl	10c84 <__errno_location@plt>
   112b8:	ldr	r6, [r0]
   112bc:	mov	r0, r4
   112c0:	bl	1411c <abort@plt+0x33fc>
   112c4:	mov	r1, r6
   112c8:	str	r5, [sp]
   112cc:	ldr	r2, [pc, #64]	; 11314 <abort@plt+0x5f4>
   112d0:	mov	r3, r0
   112d4:	mov	r0, #0
   112d8:	bl	10c18 <error@plt>
   112dc:	ldr	r3, [pc, #52]	; 11318 <abort@plt+0x5f8>
   112e0:	ldr	r0, [r3]
   112e4:	bl	10b64 <_exit@plt>
   112e8:	bl	10c84 <__errno_location@plt>
   112ec:	mov	r3, r5
   112f0:	ldr	r2, [pc, #36]	; 1131c <abort@plt+0x5fc>
   112f4:	ldr	r1, [r0]
   112f8:	mov	r0, r4
   112fc:	bl	10c18 <error@plt>
   11300:	b	112dc <abort@plt+0x5bc>
   11304:	andeq	r8, r2, r4, lsr #2
   11308:	andeq	r8, r2, r0, lsr r1
   1130c:	andeq	r8, r2, r0, lsr #2
   11310:	andeq	r7, r1, r8, lsl #5
   11314:	muleq	r1, r4, r2
   11318:	andeq	r8, r2, ip, asr #1
   1131c:	muleq	r1, r8, r2
   11320:	push	{r4, r5, r6, r7, r8, lr}
   11324:	cmp	r0, #2
   11328:	ldr	r4, [pc, #148]	; 113c4 <abort@plt+0x6a4>
   1132c:	mov	r5, #0
   11330:	sub	sp, sp, #16
   11334:	ldr	r6, [r4]
   11338:	str	r5, [r4]
   1133c:	beq	11358 <abort@plt+0x638>
   11340:	ldr	r3, [pc, #128]	; 113c8 <abort@plt+0x6a8>
   11344:	mov	r2, #0
   11348:	str	r6, [r4]
   1134c:	str	r2, [r3]
   11350:	add	sp, sp, #16
   11354:	pop	{r4, r5, r6, r7, r8, pc}
   11358:	mov	r8, r3
   1135c:	mov	r7, r2
   11360:	str	r5, [sp]
   11364:	ldr	r3, [pc, #96]	; 113cc <abort@plt+0x6ac>
   11368:	ldr	r2, [pc, #96]	; 113d0 <abort@plt+0x6b0>
   1136c:	bl	10c54 <getopt_long@plt>
   11370:	cmn	r0, #1
   11374:	beq	11340 <abort@plt+0x620>
   11378:	cmp	r0, #104	; 0x68
   1137c:	beq	113b4 <abort@plt+0x694>
   11380:	cmp	r0, #118	; 0x76
   11384:	bne	11340 <abort@plt+0x620>
   11388:	ldr	r3, [pc, #68]	; 113d4 <abort@plt+0x6b4>
   1138c:	add	ip, sp, #48	; 0x30
   11390:	mov	r2, r8
   11394:	ldr	r0, [r3]
   11398:	mov	r1, r7
   1139c:	str	ip, [sp]
   113a0:	ldr	r3, [sp, #40]	; 0x28
   113a4:	str	ip, [sp, #12]
   113a8:	bl	158d4 <abort@plt+0x4bb4>
   113ac:	mov	r0, r5
   113b0:	bl	10c6c <exit@plt>
   113b4:	mov	r0, r5
   113b8:	ldr	r3, [sp, #44]	; 0x2c
   113bc:	blx	r3
   113c0:	b	11340 <abort@plt+0x620>
   113c4:	andeq	r8, r2, r8, lsr #2
   113c8:	andeq	r8, r2, r8, lsl r1
   113cc:	muleq	r1, ip, r2
   113d0:	andeq	r7, r1, ip, asr #5
   113d4:	andeq	r8, r2, r4, lsr #2
   113d8:	push	{r4, r5, r6, r7, r8, lr}
   113dc:	sub	sp, sp, #16
   113e0:	ldr	r5, [pc, #176]	; 11498 <abort@plt+0x778>
   113e4:	ldrb	r8, [sp, #44]	; 0x2c
   113e8:	ldr	r4, [pc, #172]	; 1149c <abort@plt+0x77c>
   113ec:	ldr	lr, [pc, #172]	; 114a0 <abort@plt+0x780>
   113f0:	cmp	r8, #0
   113f4:	mov	r6, r2
   113f8:	movne	r2, r5
   113fc:	mov	r5, #0
   11400:	mov	ip, #1
   11404:	moveq	r2, lr
   11408:	mov	r7, r3
   1140c:	str	r5, [sp]
   11410:	ldr	r3, [pc, #140]	; 114a4 <abort@plt+0x784>
   11414:	ldr	r8, [r4]
   11418:	str	ip, [r4]
   1141c:	bl	10c54 <getopt_long@plt>
   11420:	cmn	r0, #1
   11424:	beq	11474 <abort@plt+0x754>
   11428:	cmp	r0, #104	; 0x68
   1142c:	beq	11480 <abort@plt+0x760>
   11430:	cmp	r0, #118	; 0x76
   11434:	bne	11464 <abort@plt+0x744>
   11438:	ldr	r3, [pc, #104]	; 114a8 <abort@plt+0x788>
   1143c:	add	ip, sp, #52	; 0x34
   11440:	mov	r2, r7
   11444:	ldr	r0, [r3]
   11448:	mov	r1, r6
   1144c:	str	ip, [sp]
   11450:	ldr	r3, [sp, #40]	; 0x28
   11454:	str	ip, [sp, #12]
   11458:	bl	158d4 <abort@plt+0x4bb4>
   1145c:	mov	r0, r5
   11460:	bl	10c6c <exit@plt>
   11464:	ldr	r3, [pc, #64]	; 114ac <abort@plt+0x78c>
   11468:	ldr	r0, [r3]
   1146c:	ldr	r3, [sp, #48]	; 0x30
   11470:	blx	r3
   11474:	str	r8, [r4]
   11478:	add	sp, sp, #16
   1147c:	pop	{r4, r5, r6, r7, r8, pc}
   11480:	mov	r0, r5
   11484:	ldr	r3, [sp, #48]	; 0x30
   11488:	blx	r3
   1148c:	str	r8, [r4]
   11490:	add	sp, sp, #16
   11494:	pop	{r4, r5, r6, r7, r8, pc}
   11498:	andeq	r7, r1, r0, ror r0
   1149c:	andeq	r8, r2, r8, lsr #2
   114a0:	andeq	r7, r1, ip, asr #5
   114a4:	muleq	r1, ip, r2
   114a8:	andeq	r8, r2, r4, lsr #2
   114ac:	andeq	r8, r2, ip, asr #1
   114b0:	push	{r4, r5, r6, lr}
   114b4:	subs	r4, r0, #0
   114b8:	beq	1152c <abort@plt+0x80c>
   114bc:	mov	r1, #47	; 0x2f
   114c0:	bl	10cf0 <strrchr@plt>
   114c4:	subs	r5, r0, #0
   114c8:	beq	11518 <abort@plt+0x7f8>
   114cc:	add	r6, r5, #1
   114d0:	sub	r3, r6, r4
   114d4:	cmp	r3, #6
   114d8:	ble	11518 <abort@plt+0x7f8>
   114dc:	mov	r2, #7
   114e0:	ldr	r1, [pc, #96]	; 11548 <abort@plt+0x828>
   114e4:	sub	r0, r5, #6
   114e8:	bl	10d14 <strncmp@plt>
   114ec:	cmp	r0, #0
   114f0:	bne	11518 <abort@plt+0x7f8>
   114f4:	mov	r2, #3
   114f8:	ldr	r1, [pc, #76]	; 1154c <abort@plt+0x82c>
   114fc:	mov	r0, r6
   11500:	bl	10d14 <strncmp@plt>
   11504:	cmp	r0, #0
   11508:	movne	r4, r6
   1150c:	ldreq	r3, [pc, #60]	; 11550 <abort@plt+0x830>
   11510:	addeq	r4, r5, #4
   11514:	streq	r4, [r3]
   11518:	ldr	r2, [pc, #52]	; 11554 <abort@plt+0x834>
   1151c:	ldr	r3, [pc, #52]	; 11558 <abort@plt+0x838>
   11520:	str	r4, [r2]
   11524:	str	r4, [r3]
   11528:	pop	{r4, r5, r6, pc}
   1152c:	ldr	r3, [pc, #40]	; 1155c <abort@plt+0x83c>
   11530:	mov	r2, #55	; 0x37
   11534:	mov	r1, #1
   11538:	ldr	r3, [r3]
   1153c:	ldr	r0, [pc, #28]	; 11560 <abort@plt+0x840>
   11540:	bl	10bdc <fwrite@plt>
   11544:	bl	10d20 <abort@plt>
   11548:	andeq	r7, r1, r8, lsl r3
   1154c:	andeq	r7, r1, r0, lsr #6
   11550:	andeq	r8, r2, r0, lsl r1
   11554:	andeq	r8, r2, r8, lsr r1
   11558:	andeq	r8, r2, r4, lsl r1
   1155c:	andeq	r8, r2, r0, lsr #2
   11560:	andeq	r7, r1, r0, ror #5
   11564:	push	{r4, r5, r6, lr}
   11568:	mov	r4, r0
   1156c:	mov	r5, r1
   11570:	bl	16904 <abort@plt+0x5be4>
   11574:	ldrb	r3, [r0]
   11578:	bic	r3, r3, #32
   1157c:	cmp	r3, #85	; 0x55
   11580:	bne	115e0 <abort@plt+0x8c0>
   11584:	ldrb	r3, [r0, #1]
   11588:	bic	r3, r3, #32
   1158c:	cmp	r3, #84	; 0x54
   11590:	bne	1161c <abort@plt+0x8fc>
   11594:	ldrb	r3, [r0, #2]
   11598:	bic	r3, r3, #32
   1159c:	cmp	r3, #70	; 0x46
   115a0:	bne	1161c <abort@plt+0x8fc>
   115a4:	ldrb	r3, [r0, #3]
   115a8:	cmp	r3, #45	; 0x2d
   115ac:	bne	1161c <abort@plt+0x8fc>
   115b0:	ldrb	r3, [r0, #4]
   115b4:	cmp	r3, #56	; 0x38
   115b8:	bne	1161c <abort@plt+0x8fc>
   115bc:	ldrb	r3, [r0, #5]
   115c0:	cmp	r3, #0
   115c4:	bne	1161c <abort@plt+0x8fc>
   115c8:	ldrb	r2, [r4]
   115cc:	ldr	r3, [pc, #152]	; 1166c <abort@plt+0x94c>
   115d0:	ldr	r0, [pc, #152]	; 11670 <abort@plt+0x950>
   115d4:	cmp	r2, #96	; 0x60
   115d8:	movne	r0, r3
   115dc:	pop	{r4, r5, r6, pc}
   115e0:	cmp	r3, #71	; 0x47
   115e4:	bne	1161c <abort@plt+0x8fc>
   115e8:	ldrb	r3, [r0, #1]
   115ec:	bic	r3, r3, #32
   115f0:	cmp	r3, #66	; 0x42
   115f4:	bne	1161c <abort@plt+0x8fc>
   115f8:	ldrb	r3, [r0, #2]
   115fc:	cmp	r3, #49	; 0x31
   11600:	bne	1161c <abort@plt+0x8fc>
   11604:	ldrb	r3, [r0, #3]
   11608:	cmp	r3, #56	; 0x38
   1160c:	bne	1161c <abort@plt+0x8fc>
   11610:	ldrb	r3, [r0, #4]
   11614:	cmp	r3, #48	; 0x30
   11618:	beq	11630 <abort@plt+0x910>
   1161c:	ldr	r3, [pc, #80]	; 11674 <abort@plt+0x954>
   11620:	cmp	r5, #9
   11624:	ldr	r0, [pc, #76]	; 11678 <abort@plt+0x958>
   11628:	movne	r0, r3
   1162c:	pop	{r4, r5, r6, pc}
   11630:	ldrb	r3, [r0, #5]
   11634:	cmp	r3, #51	; 0x33
   11638:	bne	1161c <abort@plt+0x8fc>
   1163c:	ldrb	r3, [r0, #6]
   11640:	cmp	r3, #48	; 0x30
   11644:	bne	1161c <abort@plt+0x8fc>
   11648:	ldrb	r3, [r0, #7]
   1164c:	cmp	r3, #0
   11650:	bne	1161c <abort@plt+0x8fc>
   11654:	ldrb	r2, [r4]
   11658:	ldr	r3, [pc, #28]	; 1167c <abort@plt+0x95c>
   1165c:	ldr	r0, [pc, #28]	; 11680 <abort@plt+0x960>
   11660:	cmp	r2, #96	; 0x60
   11664:	movne	r0, r3
   11668:	pop	{r4, r5, r6, pc}
   1166c:	andeq	r7, r1, ip, ror r3
   11670:	andeq	r7, r1, r8, ror r3
   11674:	andeq	r7, r1, ip, lsl #7
   11678:	andeq	r7, r1, r8, lsl #7
   1167c:	andeq	r7, r1, r4, lsl #7
   11680:	andeq	r7, r1, r0, lsl #7
   11684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11688:	sub	sp, sp, #140	; 0x8c
   1168c:	mov	r9, r1
   11690:	str	r3, [sp, #24]
   11694:	mov	r3, #1
   11698:	mov	sl, r0
   1169c:	str	r2, [sp, #44]	; 0x2c
   116a0:	str	r3, [sp, #28]
   116a4:	bl	10bf4 <__ctype_get_mb_cur_max@plt>
   116a8:	ldr	r3, [sp, #180]	; 0xb4
   116ac:	mov	fp, r9
   116b0:	mov	r9, sl
   116b4:	lsr	r3, r3, #1
   116b8:	and	r3, r3, #1
   116bc:	str	r3, [sp, #40]	; 0x28
   116c0:	ldr	r3, [sp, #180]	; 0xb4
   116c4:	mov	r2, #0
   116c8:	and	r3, r3, #4
   116cc:	str	r3, [sp, #100]	; 0x64
   116d0:	ldr	r3, [sp, #180]	; 0xb4
   116d4:	str	r2, [sp, #76]	; 0x4c
   116d8:	and	r3, r3, #1
   116dc:	str	r3, [sp, #96]	; 0x60
   116e0:	str	r2, [sp, #36]	; 0x24
   116e4:	str	r2, [sp, #56]	; 0x38
   116e8:	str	r2, [sp, #68]	; 0x44
   116ec:	str	r2, [sp, #72]	; 0x48
   116f0:	str	r2, [sp, #84]	; 0x54
   116f4:	str	r0, [sp, #80]	; 0x50
   116f8:	ldr	r3, [sp, #176]	; 0xb0
   116fc:	cmp	r3, #10
   11700:	ldrls	pc, [pc, r3, lsl #2]
   11704:	b	128dc <abort@plt+0x1bbc>
   11708:	andeq	r1, r1, r4, lsr r7
   1170c:	andeq	r1, r1, r4, asr sl
   11710:	andeq	r1, r1, ip, lsr #23
   11714:	andeq	r1, r1, r8, lsl #21
   11718:	andeq	r1, r1, r0, lsl #24
   1171c:	andeq	r1, r1, r0, ror #23
   11720:	andeq	r1, r1, r8, lsr #21
   11724:	andeq	r1, r1, ip, asr #21
   11728:	strdeq	r1, [r1], -r4
   1172c:	strdeq	r1, [r1], -r4
   11730:	strdeq	r1, [r1], -r4
   11734:	mov	r3, #0
   11738:	ldr	r1, [sp, #56]	; 0x38
   1173c:	ldr	r2, [sp, #176]	; 0xb0
   11740:	ldr	lr, [sp, #176]	; 0xb0
   11744:	mov	r8, r3
   11748:	mov	ip, r3
   1174c:	str	r3, [sp, #40]	; 0x28
   11750:	mov	r3, r1
   11754:	cmp	r2, #2
   11758:	moveq	r3, #0
   1175c:	andne	r3, r3, #1
   11760:	mov	r0, r3
   11764:	str	r3, [sp, #92]	; 0x5c
   11768:	ldr	r3, [sp, #68]	; 0x44
   1176c:	sub	lr, lr, #2
   11770:	adds	r2, r3, #0
   11774:	movne	r2, #1
   11778:	and	r3, r1, ip
   1177c:	and	r3, r2, r3
   11780:	clz	lr, lr
   11784:	str	r3, [sp, #88]	; 0x58
   11788:	lsr	lr, lr, #5
   1178c:	mov	r3, ip
   11790:	and	r3, r3, lr
   11794:	mov	sl, #0
   11798:	and	r0, r2, r0
   1179c:	str	r3, [sp, #64]	; 0x40
   117a0:	eor	r3, r1, #1
   117a4:	str	lr, [sp, #52]	; 0x34
   117a8:	str	r0, [sp, #48]	; 0x30
   117ac:	str	r3, [sp, #60]	; 0x3c
   117b0:	ldr	r3, [sp, #24]
   117b4:	cmn	r3, #1
   117b8:	beq	11ce8 <abort@plt+0xfc8>
   117bc:	subs	r7, r3, sl
   117c0:	movne	r7, #1
   117c4:	cmp	r7, #0
   117c8:	beq	11d00 <abort@plt+0xfe0>
   117cc:	ldr	r3, [sp, #48]	; 0x30
   117d0:	cmp	r3, #0
   117d4:	beq	1206c <abort@plt+0x134c>
   117d8:	ldr	r2, [sp, #68]	; 0x44
   117dc:	ldr	r1, [sp, #24]
   117e0:	cmp	r2, #1
   117e4:	mov	r3, r2
   117e8:	movls	r3, #0
   117ec:	movhi	r3, #1
   117f0:	cmn	r1, #1
   117f4:	movne	r3, #0
   117f8:	cmp	r3, #0
   117fc:	add	r4, sl, r2
   11800:	beq	11810 <abort@plt+0xaf0>
   11804:	ldr	r0, [sp, #44]	; 0x2c
   11808:	bl	10c78 <strlen@plt>
   1180c:	str	r0, [sp, #24]
   11810:	ldr	r3, [sp, #24]
   11814:	cmp	r3, r4
   11818:	ldr	r3, [sp, #44]	; 0x2c
   1181c:	add	r5, r3, sl
   11820:	bcc	12074 <abort@plt+0x1354>
   11824:	mov	r0, r5
   11828:	ldr	r2, [sp, #68]	; 0x44
   1182c:	ldr	r1, [sp, #72]	; 0x48
   11830:	bl	10b94 <memcmp@plt>
   11834:	cmp	r0, #0
   11838:	bne	12074 <abort@plt+0x1354>
   1183c:	ldr	r3, [sp, #40]	; 0x28
   11840:	cmp	r3, #0
   11844:	bne	12a30 <abort@plt+0x1d10>
   11848:	ldrb	r4, [r5]
   1184c:	cmp	r4, #126	; 0x7e
   11850:	ldrls	pc, [pc, r4, lsl #2]
   11854:	b	1296c <abort@plt+0x1c4c>
   11858:	andeq	r1, r1, ip, lsr #30
   1185c:	andeq	r2, r1, ip, ror #18
   11860:	andeq	r2, r1, ip, ror #18
   11864:	andeq	r2, r1, ip, ror #18
   11868:	andeq	r2, r1, ip, ror #18
   1186c:	andeq	r2, r1, ip, ror #18
   11870:	andeq	r2, r1, ip, ror #18
   11874:	andeq	r1, r1, r8, lsl pc
   11878:	andeq	r1, r1, r4, lsl #30
   1187c:	andeq	r1, r1, r0, ror #29
   11880:	andeq	r1, r1, r0, asr #29
   11884:	strdeq	r1, [r1], -r0
   11888:	andeq	r1, r1, r8, lsr #28
   1188c:	andeq	r2, r1, ip, asr r0
   11890:	andeq	r2, r1, ip, ror #18
   11894:	andeq	r2, r1, ip, ror #18
   11898:	andeq	r2, r1, ip, ror #18
   1189c:	andeq	r2, r1, ip, ror #18
   118a0:	andeq	r2, r1, ip, ror #18
   118a4:	andeq	r2, r1, ip, ror #18
   118a8:	andeq	r2, r1, ip, ror #18
   118ac:	andeq	r2, r1, ip, ror #18
   118b0:	andeq	r2, r1, ip, ror #18
   118b4:	andeq	r2, r1, ip, ror #18
   118b8:	andeq	r2, r1, ip, ror #18
   118bc:	andeq	r2, r1, ip, ror #18
   118c0:	andeq	r2, r1, ip, ror #18
   118c4:	andeq	r2, r1, ip, ror #18
   118c8:	andeq	r2, r1, ip, ror #18
   118cc:	andeq	r2, r1, ip, ror #18
   118d0:	andeq	r2, r1, ip, ror #18
   118d4:	andeq	r2, r1, ip, ror #18
   118d8:	andeq	r2, r1, ip, asr #32
   118dc:	andeq	r2, r1, ip, lsr #32
   118e0:	andeq	r2, r1, ip, lsr #32
   118e4:	andeq	r2, r1, ip
   118e8:	andeq	r2, r1, ip, lsr #32
   118ec:	andeq	r1, r1, r8, lsl lr
   118f0:	andeq	r2, r1, ip, lsr #32
   118f4:	strdeq	r1, [r1], -r4
   118f8:	andeq	r2, r1, ip, lsr #32
   118fc:	andeq	r2, r1, ip, lsr #32
   11900:	andeq	r2, r1, ip, lsr #32
   11904:	andeq	r1, r1, r8, lsl lr
   11908:	andeq	r1, r1, r8, lsl lr
   1190c:	andeq	r1, r1, r8, lsl lr
   11910:	andeq	r1, r1, r8, lsl lr
   11914:	andeq	r1, r1, r8, lsl lr
   11918:	andeq	r1, r1, r8, lsl lr
   1191c:	andeq	r1, r1, r8, lsl lr
   11920:	andeq	r1, r1, r8, lsl lr
   11924:	andeq	r1, r1, r8, lsl lr
   11928:	andeq	r1, r1, r8, lsl lr
   1192c:	andeq	r1, r1, r8, lsl lr
   11930:	andeq	r1, r1, r8, lsl lr
   11934:	andeq	r1, r1, r8, lsl lr
   11938:	andeq	r1, r1, r8, lsl lr
   1193c:	andeq	r1, r1, r8, lsl lr
   11940:	andeq	r1, r1, r8, lsl lr
   11944:	andeq	r2, r1, ip, lsr #32
   11948:	andeq	r2, r1, ip, lsr #32
   1194c:	andeq	r2, r1, ip, lsr #32
   11950:	andeq	r2, r1, ip, lsr #32
   11954:	andeq	r1, r1, r4, lsr #27
   11958:	andeq	r2, r1, ip, ror #18
   1195c:	andeq	r1, r1, r8, lsl lr
   11960:	andeq	r1, r1, r8, lsl lr
   11964:	andeq	r1, r1, r8, lsl lr
   11968:	andeq	r1, r1, r8, lsl lr
   1196c:	andeq	r1, r1, r8, lsl lr
   11970:	andeq	r1, r1, r8, lsl lr
   11974:	andeq	r1, r1, r8, lsl lr
   11978:	andeq	r1, r1, r8, lsl lr
   1197c:	andeq	r1, r1, r8, lsl lr
   11980:	andeq	r1, r1, r8, lsl lr
   11984:	andeq	r1, r1, r8, lsl lr
   11988:	andeq	r1, r1, r8, lsl lr
   1198c:	andeq	r1, r1, r8, lsl lr
   11990:	andeq	r1, r1, r8, lsl lr
   11994:	andeq	r1, r1, r8, lsl lr
   11998:	andeq	r1, r1, r8, lsl lr
   1199c:	andeq	r1, r1, r8, lsl lr
   119a0:	andeq	r1, r1, r8, lsl lr
   119a4:	andeq	r1, r1, r8, lsl lr
   119a8:	andeq	r1, r1, r8, lsl lr
   119ac:	andeq	r1, r1, r8, lsl lr
   119b0:	andeq	r1, r1, r8, lsl lr
   119b4:	andeq	r1, r1, r8, lsl lr
   119b8:	andeq	r1, r1, r8, lsl lr
   119bc:	andeq	r1, r1, r8, lsl lr
   119c0:	andeq	r1, r1, r8, lsl lr
   119c4:	andeq	r2, r1, ip, lsr #32
   119c8:	andeq	r1, r1, r0, ror sp
   119cc:	andeq	r1, r1, r8, lsl lr
   119d0:	andeq	r2, r1, ip, lsr #32
   119d4:	andeq	r1, r1, r8, lsl lr
   119d8:	andeq	r2, r1, ip, lsr #32
   119dc:	andeq	r1, r1, r8, lsl lr
   119e0:	andeq	r1, r1, r8, lsl lr
   119e4:	andeq	r1, r1, r8, lsl lr
   119e8:	andeq	r1, r1, r8, lsl lr
   119ec:	andeq	r1, r1, r8, lsl lr
   119f0:	andeq	r1, r1, r8, lsl lr
   119f4:	andeq	r1, r1, r8, lsl lr
   119f8:	andeq	r1, r1, r8, lsl lr
   119fc:	andeq	r1, r1, r8, lsl lr
   11a00:	andeq	r1, r1, r8, lsl lr
   11a04:	andeq	r1, r1, r8, lsl lr
   11a08:	andeq	r1, r1, r8, lsl lr
   11a0c:	andeq	r1, r1, r8, lsl lr
   11a10:	andeq	r1, r1, r8, lsl lr
   11a14:	andeq	r1, r1, r8, lsl lr
   11a18:	andeq	r1, r1, r8, lsl lr
   11a1c:	andeq	r1, r1, r8, lsl lr
   11a20:	andeq	r1, r1, r8, lsl lr
   11a24:	andeq	r1, r1, r8, lsl lr
   11a28:	andeq	r1, r1, r8, lsl lr
   11a2c:	andeq	r1, r1, r8, lsl lr
   11a30:	andeq	r1, r1, r8, lsl lr
   11a34:	andeq	r1, r1, r8, lsl lr
   11a38:	andeq	r1, r1, r8, lsl lr
   11a3c:	andeq	r1, r1, r8, lsl lr
   11a40:	andeq	r1, r1, r8, lsl lr
   11a44:	andeq	r1, r1, r8, lsr #24
   11a48:	andeq	r2, r1, ip, lsr #32
   11a4c:	andeq	r1, r1, r8, lsr #24
   11a50:	andeq	r2, r1, ip
   11a54:	mov	r3, #1
   11a58:	str	r3, [sp, #40]	; 0x28
   11a5c:	str	r3, [sp, #68]	; 0x44
   11a60:	mov	r8, #0
   11a64:	ldr	r3, [pc, #4056]	; 12a44 <abort@plt+0x1d24>
   11a68:	str	r3, [sp, #72]	; 0x48
   11a6c:	mov	r3, #2
   11a70:	str	r3, [sp, #176]	; 0xb0
   11a74:	ldr	r1, [sp, #56]	; 0x38
   11a78:	mov	r2, r3
   11a7c:	ldr	ip, [sp, #40]	; 0x28
   11a80:	mov	lr, r3
   11a84:	b	11750 <abort@plt+0xa30>
   11a88:	mov	r3, #1
   11a8c:	str	r3, [sp, #56]	; 0x38
   11a90:	str	r3, [sp, #68]	; 0x44
   11a94:	str	r3, [sp, #40]	; 0x28
   11a98:	ldr	r3, [pc, #4004]	; 12a44 <abort@plt+0x1d24>
   11a9c:	mov	r8, #0
   11aa0:	str	r3, [sp, #72]	; 0x48
   11aa4:	b	11a6c <abort@plt+0xd4c>
   11aa8:	mov	r3, #1
   11aac:	str	r3, [sp, #56]	; 0x38
   11ab0:	str	r3, [sp, #68]	; 0x44
   11ab4:	str	r3, [sp, #40]	; 0x28
   11ab8:	ldr	r3, [pc, #3976]	; 12a48 <abort@plt+0x1d28>
   11abc:	mov	r8, #0
   11ac0:	str	r3, [sp, #72]	; 0x48
   11ac4:	mov	r3, #5
   11ac8:	b	11a70 <abort@plt+0xd50>
   11acc:	mov	r3, #0
   11ad0:	str	r3, [sp, #40]	; 0x28
   11ad4:	mov	r3, #1
   11ad8:	str	r3, [sp, #56]	; 0x38
   11adc:	mov	r8, #0
   11ae0:	mov	r1, r3
   11ae4:	ldr	r2, [sp, #176]	; 0xb0
   11ae8:	ldr	ip, [sp, #40]	; 0x28
   11aec:	ldr	lr, [sp, #176]	; 0xb0
   11af0:	b	11750 <abort@plt+0xa30>
   11af4:	ldr	r3, [sp, #176]	; 0xb0
   11af8:	cmp	r3, #10
   11afc:	beq	11b40 <abort@plt+0xe20>
   11b00:	mov	r2, #5
   11b04:	ldr	r1, [pc, #3904]	; 12a4c <abort@plt+0x1d2c>
   11b08:	mov	r0, #0
   11b0c:	bl	10bac <dcgettext@plt>
   11b10:	ldr	r2, [pc, #3892]	; 12a4c <abort@plt+0x1d2c>
   11b14:	cmp	r0, r2
   11b18:	str	r0, [sp, #188]	; 0xbc
   11b1c:	beq	12bd8 <abort@plt+0x1eb8>
   11b20:	mov	r2, #5
   11b24:	ldr	r1, [pc, #3864]	; 12a44 <abort@plt+0x1d24>
   11b28:	mov	r0, #0
   11b2c:	bl	10bac <dcgettext@plt>
   11b30:	ldr	r2, [pc, #3852]	; 12a44 <abort@plt+0x1d24>
   11b34:	cmp	r0, r2
   11b38:	str	r0, [sp, #192]	; 0xc0
   11b3c:	beq	12bc8 <abort@plt+0x1ea8>
   11b40:	ldr	r8, [sp, #40]	; 0x28
   11b44:	cmp	r8, #0
   11b48:	movne	r8, #0
   11b4c:	bne	11b7c <abort@plt+0xe5c>
   11b50:	ldr	r3, [sp, #188]	; 0xbc
   11b54:	ldrb	r3, [r3]
   11b58:	cmp	r3, #0
   11b5c:	beq	11b7c <abort@plt+0xe5c>
   11b60:	ldr	r2, [sp, #188]	; 0xbc
   11b64:	cmp	fp, r8
   11b68:	strbhi	r3, [r9, r8]
   11b6c:	ldrb	r3, [r2, #1]!
   11b70:	add	r8, r8, #1
   11b74:	cmp	r3, #0
   11b78:	bne	11b64 <abort@plt+0xe44>
   11b7c:	ldr	r0, [sp, #192]	; 0xc0
   11b80:	bl	10c78 <strlen@plt>
   11b84:	ldr	r3, [sp, #192]	; 0xc0
   11b88:	ldr	r2, [sp, #176]	; 0xb0
   11b8c:	str	r3, [sp, #72]	; 0x48
   11b90:	mov	r3, #1
   11b94:	str	r3, [sp, #56]	; 0x38
   11b98:	mov	r1, r3
   11b9c:	ldr	ip, [sp, #40]	; 0x28
   11ba0:	ldr	lr, [sp, #176]	; 0xb0
   11ba4:	str	r0, [sp, #68]	; 0x44
   11ba8:	b	11750 <abort@plt+0xa30>
   11bac:	ldr	r3, [sp, #40]	; 0x28
   11bb0:	cmp	r3, #0
   11bb4:	beq	1285c <abort@plt+0x1b3c>
   11bb8:	mov	r3, #1
   11bbc:	str	r3, [sp, #68]	; 0x44
   11bc0:	ldr	r3, [pc, #3708]	; 12a44 <abort@plt+0x1d24>
   11bc4:	str	r3, [sp, #72]	; 0x48
   11bc8:	mov	r8, #0
   11bcc:	ldr	r1, [sp, #56]	; 0x38
   11bd0:	ldr	r2, [sp, #176]	; 0xb0
   11bd4:	ldr	ip, [sp, #40]	; 0x28
   11bd8:	ldr	lr, [sp, #176]	; 0xb0
   11bdc:	b	11750 <abort@plt+0xa30>
   11be0:	ldr	r3, [sp, #40]	; 0x28
   11be4:	cmp	r3, #0
   11be8:	beq	128e0 <abort@plt+0x1bc0>
   11bec:	str	r3, [sp, #56]	; 0x38
   11bf0:	mov	r3, #1
   11bf4:	str	r3, [sp, #68]	; 0x44
   11bf8:	ldr	r3, [pc, #3656]	; 12a48 <abort@plt+0x1d28>
   11bfc:	b	11bc4 <abort@plt+0xea4>
   11c00:	ldr	r3, [sp, #40]	; 0x28
   11c04:	cmp	r3, #0
   11c08:	mov	r3, #1
   11c0c:	streq	r3, [sp, #56]	; 0x38
   11c10:	beq	1285c <abort@plt+0x1b3c>
   11c14:	str	r3, [sp, #68]	; 0x44
   11c18:	ldr	r3, [pc, #3620]	; 12a44 <abort@plt+0x1d24>
   11c1c:	mov	r8, #0
   11c20:	str	r3, [sp, #72]	; 0x48
   11c24:	b	11a6c <abort@plt+0xd4c>
   11c28:	ldr	r3, [sp, #24]
   11c2c:	ldr	r6, [sp, #48]	; 0x30
   11c30:	cmn	r3, #1
   11c34:	beq	12290 <abort@plt+0x1570>
   11c38:	subs	r3, r3, #1
   11c3c:	movne	r3, #1
   11c40:	cmp	r3, #0
   11c44:	beq	12010 <abort@plt+0x12f0>
   11c48:	ldr	r1, [sp, #52]	; 0x34
   11c4c:	mov	r7, r3
   11c50:	mov	r3, #0
   11c54:	str	r3, [sp, #32]
   11c58:	ldr	r3, [sp, #60]	; 0x3c
   11c5c:	orr	r2, r1, r3
   11c60:	ldr	r3, [sp, #40]	; 0x28
   11c64:	eor	r2, r2, #1
   11c68:	orr	r2, r3, r2
   11c6c:	tst	r2, #255	; 0xff
   11c70:	bne	12594 <abort@plt+0x1874>
   11c74:	cmp	r6, #0
   11c78:	bne	11e54 <abort@plt+0x1134>
   11c7c:	ldr	r3, [sp, #36]	; 0x24
   11c80:	add	sl, sl, #1
   11c84:	and	r3, r3, r7
   11c88:	uxtb	r6, r3
   11c8c:	cmp	r6, #0
   11c90:	beq	11cbc <abort@plt+0xf9c>
   11c94:	cmp	fp, r8
   11c98:	movhi	r3, #39	; 0x27
   11c9c:	strbhi	r3, [r9, r8]
   11ca0:	add	r3, r8, #1
   11ca4:	cmp	fp, r3
   11ca8:	movhi	r2, #39	; 0x27
   11cac:	add	r8, r8, #2
   11cb0:	strbhi	r2, [r9, r3]
   11cb4:	mov	r3, #0
   11cb8:	str	r3, [sp, #36]	; 0x24
   11cbc:	ldr	r2, [sp, #32]
   11cc0:	cmp	r8, fp
   11cc4:	ldr	r3, [sp, #28]
   11cc8:	strbcc	r4, [r9, r8]
   11ccc:	cmp	r2, #0
   11cd0:	moveq	r3, #0
   11cd4:	str	r3, [sp, #28]
   11cd8:	ldr	r3, [sp, #24]
   11cdc:	add	r8, r8, #1
   11ce0:	cmn	r3, #1
   11ce4:	bne	117bc <abort@plt+0xa9c>
   11ce8:	ldr	r3, [sp, #44]	; 0x2c
   11cec:	ldrb	r3, [r3, sl]
   11cf0:	adds	r7, r3, #0
   11cf4:	movne	r7, #1
   11cf8:	cmp	r7, #0
   11cfc:	bne	117cc <abort@plt+0xaac>
   11d00:	ldr	r3, [sp, #64]	; 0x40
   11d04:	cmp	r8, #0
   11d08:	movne	r3, #0
   11d0c:	andeq	r3, r3, #1
   11d10:	cmp	r3, #0
   11d14:	str	r3, [sp, #64]	; 0x40
   11d18:	bne	127bc <abort@plt+0x1a9c>
   11d1c:	ldr	r3, [sp, #40]	; 0x28
   11d20:	ldr	r2, [sp, #52]	; 0x34
   11d24:	eor	r3, r3, #1
   11d28:	ands	r2, r2, r3
   11d2c:	beq	12be8 <abort@plt+0x1ec8>
   11d30:	ldr	r3, [sp, #76]	; 0x4c
   11d34:	cmp	r3, #0
   11d38:	beq	12bb8 <abort@plt+0x1e98>
   11d3c:	ldr	r3, [sp, #28]
   11d40:	cmp	r3, #0
   11d44:	bne	12b74 <abort@plt+0x1e54>
   11d48:	ldr	r2, [sp, #84]	; 0x54
   11d4c:	clz	r3, fp
   11d50:	cmp	r2, #0
   11d54:	lsr	r3, r3, #5
   11d58:	moveq	r3, #0
   11d5c:	cmp	r3, #0
   11d60:	beq	12b14 <abort@plt+0x1df4>
   11d64:	mov	fp, r2
   11d68:	str	r3, [sp, #76]	; 0x4c
   11d6c:	b	116f8 <abort@plt+0x9d8>
   11d70:	ldr	r3, [sp, #176]	; 0xb0
   11d74:	ldr	r6, [sp, #48]	; 0x30
   11d78:	cmp	r3, #2
   11d7c:	beq	122b4 <abort@plt+0x1594>
   11d80:	ldr	r3, [sp, #88]	; 0x58
   11d84:	cmp	r3, #0
   11d88:	beq	12838 <abort@plt+0x1b18>
   11d8c:	mov	r3, #0
   11d90:	add	sl, sl, #1
   11d94:	ldr	r6, [sp, #36]	; 0x24
   11d98:	str	r3, [sp, #32]
   11d9c:	mov	r4, #92	; 0x5c
   11da0:	b	11c8c <abort@plt+0xf6c>
   11da4:	ldr	r3, [sp, #176]	; 0xb0
   11da8:	ldr	r6, [sp, #48]	; 0x30
   11dac:	cmp	r3, #2
   11db0:	beq	122e4 <abort@plt+0x15c4>
   11db4:	cmp	r3, #5
   11db8:	bne	12848 <abort@plt+0x1b28>
   11dbc:	ldr	r3, [sp, #100]	; 0x64
   11dc0:	cmp	r3, #0
   11dc4:	beq	128ac <abort@plt+0x1b8c>
   11dc8:	ldr	r2, [sp, #24]
   11dcc:	add	r3, sl, #2
   11dd0:	cmp	r2, r3
   11dd4:	bls	11de4 <abort@plt+0x10c4>
   11dd8:	ldrb	r4, [r5, #1]
   11ddc:	cmp	r4, #63	; 0x3f
   11de0:	beq	12a54 <abort@plt+0x1d34>
   11de4:	mov	r1, #0
   11de8:	str	r1, [sp, #32]
   11dec:	mov	r4, #63	; 0x3f
   11df0:	b	11c58 <abort@plt+0xf38>
   11df4:	ldr	r3, [sp, #176]	; 0xb0
   11df8:	ldr	r6, [sp, #48]	; 0x30
   11dfc:	cmp	r3, #2
   11e00:	beq	12310 <abort@plt+0x15f0>
   11e04:	str	r7, [sp, #32]
   11e08:	str	r7, [sp, #76]	; 0x4c
   11e0c:	mov	r1, #0
   11e10:	mov	r4, #39	; 0x27
   11e14:	b	11c58 <abort@plt+0xf38>
   11e18:	ldr	r6, [sp, #48]	; 0x30
   11e1c:	ldr	r1, [sp, #52]	; 0x34
   11e20:	str	r7, [sp, #32]
   11e24:	b	11c58 <abort@plt+0xf38>
   11e28:	ldr	r6, [sp, #48]	; 0x30
   11e2c:	ldr	r1, [sp, #52]	; 0x34
   11e30:	mov	r4, #12
   11e34:	mov	r3, #102	; 0x66
   11e38:	ldr	r2, [sp, #56]	; 0x38
   11e3c:	cmp	r2, #0
   11e40:	streq	r2, [sp, #32]
   11e44:	beq	11c58 <abort@plt+0xf38>
   11e48:	mov	r4, r3
   11e4c:	mov	r3, #0
   11e50:	str	r3, [sp, #32]
   11e54:	ldr	r3, [sp, #40]	; 0x28
   11e58:	cmp	r3, #0
   11e5c:	bne	125cc <abort@plt+0x18ac>
   11e60:	ldr	r3, [sp, #36]	; 0x24
   11e64:	eor	r3, r3, #1
   11e68:	and	r3, r3, r1
   11e6c:	ands	r3, r3, #255	; 0xff
   11e70:	beq	11ea8 <abort@plt+0x1188>
   11e74:	cmp	fp, r8
   11e78:	movhi	r2, #39	; 0x27
   11e7c:	strbhi	r2, [r9, r8]
   11e80:	add	r2, r8, #1
   11e84:	cmp	fp, r2
   11e88:	movhi	r1, #36	; 0x24
   11e8c:	strbhi	r1, [r9, r2]
   11e90:	add	r2, r8, #2
   11e94:	cmp	fp, r2
   11e98:	add	r8, r8, #3
   11e9c:	movhi	r1, #39	; 0x27
   11ea0:	strbhi	r1, [r9, r2]
   11ea4:	str	r3, [sp, #36]	; 0x24
   11ea8:	cmp	fp, r8
   11eac:	movhi	r3, #92	; 0x5c
   11eb0:	strbhi	r3, [r9, r8]
   11eb4:	add	sl, sl, #1
   11eb8:	add	r8, r8, #1
   11ebc:	b	11cbc <abort@plt+0xf9c>
   11ec0:	ldr	r6, [sp, #48]	; 0x30
   11ec4:	mov	r4, #10
   11ec8:	mov	r3, #110	; 0x6e
   11ecc:	ldr	r2, [sp, #64]	; 0x40
   11ed0:	cmp	r2, #0
   11ed4:	bne	12954 <abort@plt+0x1c34>
   11ed8:	ldr	r1, [sp, #52]	; 0x34
   11edc:	b	11e38 <abort@plt+0x1118>
   11ee0:	ldr	r6, [sp, #48]	; 0x30
   11ee4:	ldr	r1, [sp, #52]	; 0x34
   11ee8:	mov	r3, #116	; 0x74
   11eec:	b	11e38 <abort@plt+0x1118>
   11ef0:	ldr	r6, [sp, #48]	; 0x30
   11ef4:	ldr	r1, [sp, #52]	; 0x34
   11ef8:	mov	r4, #11
   11efc:	mov	r3, #118	; 0x76
   11f00:	b	11e38 <abort@plt+0x1118>
   11f04:	ldr	r6, [sp, #48]	; 0x30
   11f08:	ldr	r1, [sp, #52]	; 0x34
   11f0c:	mov	r4, #8
   11f10:	mov	r3, #98	; 0x62
   11f14:	b	11e38 <abort@plt+0x1118>
   11f18:	ldr	r6, [sp, #48]	; 0x30
   11f1c:	ldr	r1, [sp, #52]	; 0x34
   11f20:	mov	r4, #7
   11f24:	mov	r3, #97	; 0x61
   11f28:	b	11e38 <abort@plt+0x1118>
   11f2c:	ldr	r3, [sp, #56]	; 0x38
   11f30:	ldr	r6, [sp, #48]	; 0x30
   11f34:	cmp	r3, #0
   11f38:	beq	123fc <abort@plt+0x16dc>
   11f3c:	ldr	r3, [sp, #40]	; 0x28
   11f40:	cmp	r3, #0
   11f44:	bne	12a30 <abort@plt+0x1d10>
   11f48:	ldr	r3, [sp, #36]	; 0x24
   11f4c:	ldr	r2, [sp, #52]	; 0x34
   11f50:	eor	r3, r3, #1
   11f54:	ands	r3, r2, r3
   11f58:	moveq	r2, r8
   11f5c:	beq	11f94 <abort@plt+0x1274>
   11f60:	cmp	fp, r8
   11f64:	movhi	r2, #39	; 0x27
   11f68:	strbhi	r2, [r9, r8]
   11f6c:	add	r2, r8, #1
   11f70:	cmp	fp, r2
   11f74:	movhi	r1, #36	; 0x24
   11f78:	strbhi	r1, [r9, r2]
   11f7c:	add	r2, r8, #2
   11f80:	cmp	fp, r2
   11f84:	movhi	r1, #39	; 0x27
   11f88:	strbhi	r1, [r9, r2]
   11f8c:	add	r2, r8, #3
   11f90:	str	r3, [sp, #36]	; 0x24
   11f94:	cmp	fp, r2
   11f98:	movhi	r3, #92	; 0x5c
   11f9c:	strbhi	r3, [r9, r2]
   11fa0:	ldr	r3, [sp, #92]	; 0x5c
   11fa4:	add	r8, r2, #1
   11fa8:	cmp	r3, #0
   11fac:	beq	12930 <abort@plt+0x1c10>
   11fb0:	ldr	r1, [sp, #24]
   11fb4:	add	r3, sl, #1
   11fb8:	cmp	r1, r3
   11fbc:	bls	11ff4 <abort@plt+0x12d4>
   11fc0:	ldr	r1, [sp, #44]	; 0x2c
   11fc4:	ldrb	r3, [r1, r3]
   11fc8:	sub	r3, r3, #48	; 0x30
   11fcc:	cmp	r3, #9
   11fd0:	bhi	11ff4 <abort@plt+0x12d4>
   11fd4:	cmp	fp, r8
   11fd8:	movhi	r3, #48	; 0x30
   11fdc:	strbhi	r3, [r9, r8]
   11fe0:	add	r3, r2, #2
   11fe4:	cmp	fp, r3
   11fe8:	add	r8, r2, #3
   11fec:	movhi	r1, #48	; 0x30
   11ff0:	strbhi	r1, [r9, r3]
   11ff4:	ldr	r3, [sp, #40]	; 0x28
   11ff8:	ldr	r1, [sp, #52]	; 0x34
   11ffc:	mov	r7, r3
   12000:	str	r3, [sp, #32]
   12004:	mov	r4, #48	; 0x30
   12008:	b	11c58 <abort@plt+0xf38>
   1200c:	ldr	r6, [sp, #48]	; 0x30
   12010:	cmp	sl, #0
   12014:	streq	r7, [sp, #32]
   12018:	beq	12038 <abort@plt+0x1318>
   1201c:	mov	r3, #0
   12020:	ldr	r1, [sp, #52]	; 0x34
   12024:	str	r3, [sp, #32]
   12028:	b	11c58 <abort@plt+0xf38>
   1202c:	ldr	r6, [sp, #48]	; 0x30
   12030:	mov	r3, #0
   12034:	str	r3, [sp, #32]
   12038:	ldr	r3, [sp, #64]	; 0x40
   1203c:	cmp	r3, #0
   12040:	bne	127bc <abort@plt+0x1a9c>
   12044:	ldr	r1, [sp, #52]	; 0x34
   12048:	b	11c58 <abort@plt+0xf38>
   1204c:	ldr	r3, [sp, #48]	; 0x30
   12050:	mov	r6, r3
   12054:	str	r3, [sp, #32]
   12058:	b	12038 <abort@plt+0x1318>
   1205c:	ldr	r6, [sp, #48]	; 0x30
   12060:	mov	r4, #13
   12064:	mov	r3, #114	; 0x72
   12068:	b	11ecc <abort@plt+0x11ac>
   1206c:	ldr	r3, [sp, #44]	; 0x2c
   12070:	add	r5, r3, sl
   12074:	ldrb	r4, [r5]
   12078:	cmp	r4, #126	; 0x7e
   1207c:	ldrls	pc, [pc, r4, lsl #2]
   12080:	b	1241c <abort@plt+0x16fc>
   12084:	andeq	r2, r1, ip, ror #7
   12088:	andeq	r2, r1, ip, lsl r4
   1208c:	andeq	r2, r1, ip, lsl r4
   12090:	andeq	r2, r1, ip, lsl r4
   12094:	andeq	r2, r1, ip, lsl r4
   12098:	andeq	r2, r1, ip, lsl r4
   1209c:	andeq	r2, r1, ip, lsl r4
   120a0:	andeq	r2, r1, r4, ror #7
   120a4:	ldrdeq	r2, [r1], -ip
   120a8:	ldrdeq	r2, [r1], -r0
   120ac:	andeq	r2, r1, r8, asr #7
   120b0:	andeq	r2, r1, r0, asr #7
   120b4:			; <UNDEFINED> instruction: 0x000123b8
   120b8:			; <UNDEFINED> instruction: 0x000123b0
   120bc:	andeq	r2, r1, ip, lsl r4
   120c0:	andeq	r2, r1, ip, lsl r4
   120c4:	andeq	r2, r1, ip, lsl r4
   120c8:	andeq	r2, r1, ip, lsl r4
   120cc:	andeq	r2, r1, ip, lsl r4
   120d0:	andeq	r2, r1, ip, lsl r4
   120d4:	andeq	r2, r1, ip, lsl r4
   120d8:	andeq	r2, r1, ip, lsl r4
   120dc:	andeq	r2, r1, ip, lsl r4
   120e0:	andeq	r2, r1, ip, lsl r4
   120e4:	andeq	r2, r1, ip, lsl r4
   120e8:	andeq	r2, r1, ip, lsl r4
   120ec:	andeq	r2, r1, ip, lsl r4
   120f0:	andeq	r2, r1, ip, lsl r4
   120f4:	andeq	r2, r1, ip, lsl r4
   120f8:	andeq	r2, r1, ip, lsl r4
   120fc:	andeq	r2, r1, ip, lsl r4
   12100:	andeq	r2, r1, ip, lsl r4
   12104:	andeq	r2, r1, r4, lsr #7
   12108:	muleq	r1, ip, r3
   1210c:	muleq	r1, ip, r3
   12110:	muleq	r1, r4, r3
   12114:	muleq	r1, ip, r3
   12118:	andeq	r2, r1, ip, lsl #7
   1211c:	muleq	r1, ip, r3
   12120:	andeq	r2, r1, r0, lsl #6
   12124:	muleq	r1, ip, r3
   12128:	muleq	r1, ip, r3
   1212c:	muleq	r1, ip, r3
   12130:	andeq	r2, r1, ip, lsl #7
   12134:	andeq	r2, r1, ip, lsl #7
   12138:	andeq	r2, r1, ip, lsl #7
   1213c:	andeq	r2, r1, ip, lsl #7
   12140:	andeq	r2, r1, ip, lsl #7
   12144:	andeq	r2, r1, ip, lsl #7
   12148:	andeq	r2, r1, ip, lsl #7
   1214c:	andeq	r2, r1, ip, lsl #7
   12150:	andeq	r2, r1, ip, lsl #7
   12154:	andeq	r2, r1, ip, lsl #7
   12158:	andeq	r2, r1, ip, lsl #7
   1215c:	andeq	r2, r1, ip, lsl #7
   12160:	andeq	r2, r1, ip, lsl #7
   12164:	andeq	r2, r1, ip, lsl #7
   12168:	andeq	r2, r1, ip, lsl #7
   1216c:	andeq	r2, r1, ip, lsl #7
   12170:	muleq	r1, ip, r3
   12174:	muleq	r1, ip, r3
   12178:	muleq	r1, ip, r3
   1217c:	muleq	r1, ip, r3
   12180:	ldrdeq	r2, [r1], -r4
   12184:	andeq	r2, r1, ip, lsl r4
   12188:	andeq	r2, r1, ip, lsl #7
   1218c:	andeq	r2, r1, ip, lsl #7
   12190:	andeq	r2, r1, ip, lsl #7
   12194:	andeq	r2, r1, ip, lsl #7
   12198:	andeq	r2, r1, ip, lsl #7
   1219c:	andeq	r2, r1, ip, lsl #7
   121a0:	andeq	r2, r1, ip, lsl #7
   121a4:	andeq	r2, r1, ip, lsl #7
   121a8:	andeq	r2, r1, ip, lsl #7
   121ac:	andeq	r2, r1, ip, lsl #7
   121b0:	andeq	r2, r1, ip, lsl #7
   121b4:	andeq	r2, r1, ip, lsl #7
   121b8:	andeq	r2, r1, ip, lsl #7
   121bc:	andeq	r2, r1, ip, lsl #7
   121c0:	andeq	r2, r1, ip, lsl #7
   121c4:	andeq	r2, r1, ip, lsl #7
   121c8:	andeq	r2, r1, ip, lsl #7
   121cc:	andeq	r2, r1, ip, lsl #7
   121d0:	andeq	r2, r1, ip, lsl #7
   121d4:	andeq	r2, r1, ip, lsl #7
   121d8:	andeq	r2, r1, ip, lsl #7
   121dc:	andeq	r2, r1, ip, lsl #7
   121e0:	andeq	r2, r1, ip, lsl #7
   121e4:	andeq	r2, r1, ip, lsl #7
   121e8:	andeq	r2, r1, ip, lsl #7
   121ec:	andeq	r2, r1, ip, lsl #7
   121f0:	muleq	r1, ip, r3
   121f4:	andeq	r2, r1, r4, lsr #5
   121f8:	andeq	r2, r1, ip, lsl #7
   121fc:	muleq	r1, ip, r3
   12200:	andeq	r2, r1, ip, lsl #7
   12204:	muleq	r1, ip, r3
   12208:	andeq	r2, r1, ip, lsl #7
   1220c:	andeq	r2, r1, ip, lsl #7
   12210:	andeq	r2, r1, ip, lsl #7
   12214:	andeq	r2, r1, ip, lsl #7
   12218:	andeq	r2, r1, ip, lsl #7
   1221c:	andeq	r2, r1, ip, lsl #7
   12220:	andeq	r2, r1, ip, lsl #7
   12224:	andeq	r2, r1, ip, lsl #7
   12228:	andeq	r2, r1, ip, lsl #7
   1222c:	andeq	r2, r1, ip, lsl #7
   12230:	andeq	r2, r1, ip, lsl #7
   12234:	andeq	r2, r1, ip, lsl #7
   12238:	andeq	r2, r1, ip, lsl #7
   1223c:	andeq	r2, r1, ip, lsl #7
   12240:	andeq	r2, r1, ip, lsl #7
   12244:	andeq	r2, r1, ip, lsl #7
   12248:	andeq	r2, r1, ip, lsl #7
   1224c:	andeq	r2, r1, ip, lsl #7
   12250:	andeq	r2, r1, ip, lsl #7
   12254:	andeq	r2, r1, ip, lsl #7
   12258:	andeq	r2, r1, ip, lsl #7
   1225c:	andeq	r2, r1, ip, lsl #7
   12260:	andeq	r2, r1, ip, lsl #7
   12264:	andeq	r2, r1, ip, lsl #7
   12268:	andeq	r2, r1, ip, lsl #7
   1226c:	andeq	r2, r1, ip, lsl #7
   12270:	andeq	r2, r1, r0, lsl #5
   12274:	muleq	r1, ip, r3
   12278:	andeq	r2, r1, r0, lsl #5
   1227c:	muleq	r1, r4, r3
   12280:	ldr	r3, [sp, #24]
   12284:	mov	r6, #0
   12288:	cmn	r3, #1
   1228c:	bne	11c38 <abort@plt+0xf18>
   12290:	ldr	r3, [sp, #44]	; 0x2c
   12294:	ldrb	r3, [r3, #1]
   12298:	adds	r3, r3, #0
   1229c:	movne	r3, #1
   122a0:	b	11c40 <abort@plt+0xf20>
   122a4:	ldr	r3, [sp, #176]	; 0xb0
   122a8:	mov	r6, #0
   122ac:	cmp	r3, #2
   122b0:	bne	11d80 <abort@plt+0x1060>
   122b4:	ldr	r3, [sp, #64]	; 0x40
   122b8:	cmp	r3, #0
   122bc:	bne	12af4 <abort@plt+0x1dd4>
   122c0:	add	sl, sl, #1
   122c4:	ldr	r6, [sp, #36]	; 0x24
   122c8:	str	r3, [sp, #32]
   122cc:	mov	r4, #92	; 0x5c
   122d0:	b	11c8c <abort@plt+0xf6c>
   122d4:	ldr	r3, [sp, #176]	; 0xb0
   122d8:	mov	r6, #0
   122dc:	cmp	r3, #2
   122e0:	bne	11db4 <abort@plt+0x1094>
   122e4:	ldr	r3, [sp, #40]	; 0x28
   122e8:	cmp	r3, #0
   122ec:	bne	125d0 <abort@plt+0x18b0>
   122f0:	mov	r1, r7
   122f4:	str	r3, [sp, #32]
   122f8:	mov	r4, #63	; 0x3f
   122fc:	b	11c58 <abort@plt+0xf38>
   12300:	ldr	r3, [sp, #176]	; 0xb0
   12304:	mov	r6, #0
   12308:	cmp	r3, #2
   1230c:	bne	11e04 <abort@plt+0x10e4>
   12310:	ldr	r3, [sp, #64]	; 0x40
   12314:	cmp	r3, #0
   12318:	bne	12af4 <abort@plt+0x1dd4>
   1231c:	ldr	r2, [sp, #84]	; 0x54
   12320:	adds	r3, fp, #0
   12324:	movne	r3, #1
   12328:	cmp	r2, #0
   1232c:	movne	r3, #0
   12330:	cmp	r3, #0
   12334:	strne	fp, [sp, #84]	; 0x54
   12338:	movne	fp, #0
   1233c:	bne	1236c <abort@plt+0x164c>
   12340:	cmp	fp, r8
   12344:	movhi	r3, #39	; 0x27
   12348:	strbhi	r3, [r9, r8]
   1234c:	add	r3, r8, #1
   12350:	cmp	fp, r3
   12354:	movhi	r2, #92	; 0x5c
   12358:	strbhi	r2, [r9, r3]
   1235c:	add	r3, r8, #2
   12360:	cmp	fp, r3
   12364:	movhi	r2, #39	; 0x27
   12368:	strbhi	r2, [r9, r3]
   1236c:	ldr	r3, [sp, #64]	; 0x40
   12370:	add	r8, r8, #3
   12374:	mov	r1, r7
   12378:	str	r7, [sp, #32]
   1237c:	str	r7, [sp, #76]	; 0x4c
   12380:	str	r3, [sp, #36]	; 0x24
   12384:	mov	r4, #39	; 0x27
   12388:	b	11c58 <abort@plt+0xf38>
   1238c:	mov	r6, #0
   12390:	b	11e1c <abort@plt+0x10fc>
   12394:	mov	r6, #0
   12398:	b	12010 <abort@plt+0x12f0>
   1239c:	mov	r6, #0
   123a0:	b	12030 <abort@plt+0x1310>
   123a4:	str	r7, [sp, #32]
   123a8:	mov	r6, #0
   123ac:	b	12038 <abort@plt+0x1318>
   123b0:	mov	r6, #0
   123b4:	b	12060 <abort@plt+0x1340>
   123b8:	mov	r6, #0
   123bc:	b	11e2c <abort@plt+0x110c>
   123c0:	mov	r6, #0
   123c4:	b	11ef4 <abort@plt+0x11d4>
   123c8:	mov	r6, #0
   123cc:	b	11ec4 <abort@plt+0x11a4>
   123d0:	mov	r6, #0
   123d4:	mov	r3, #116	; 0x74
   123d8:	b	11ecc <abort@plt+0x11ac>
   123dc:	mov	r6, #0
   123e0:	b	11f08 <abort@plt+0x11e8>
   123e4:	mov	r6, #0
   123e8:	b	11f1c <abort@plt+0x11fc>
   123ec:	ldr	r3, [sp, #56]	; 0x38
   123f0:	mov	r6, #0
   123f4:	cmp	r3, #0
   123f8:	bne	11f3c <abort@plt+0x121c>
   123fc:	ldr	r3, [sp, #96]	; 0x60
   12400:	cmp	r3, #0
   12404:	addne	sl, sl, #1
   12408:	bne	117b0 <abort@plt+0xa90>
   1240c:	ldr	r1, [sp, #52]	; 0x34
   12410:	str	r3, [sp, #32]
   12414:	mov	r4, r3
   12418:	b	11c58 <abort@plt+0xf38>
   1241c:	mov	r6, #0
   12420:	ldr	r3, [sp, #80]	; 0x50
   12424:	cmp	r3, #1
   12428:	bne	12618 <abort@plt+0x18f8>
   1242c:	bl	10c60 <__ctype_b_loc@plt>
   12430:	ldr	r2, [sp, #80]	; 0x50
   12434:	sxth	r3, r4
   12438:	mov	r1, r2
   1243c:	lsl	r3, r3, #1
   12440:	ldr	r2, [r0]
   12444:	ldrh	r3, [r2, r3]
   12448:	and	r3, r3, #16384	; 0x4000
   1244c:	cmp	r3, #0
   12450:	movne	r3, #1
   12454:	moveq	r3, #0
   12458:	str	r3, [sp, #32]
   1245c:	moveq	r3, #1
   12460:	movne	r3, #0
   12464:	ldr	r2, [sp, #56]	; 0x38
   12468:	and	r3, r3, r2
   1246c:	ands	r3, r3, #255	; 0xff
   12470:	beq	12044 <abort@plt+0x1324>
   12474:	add	r1, sl, r1
   12478:	mov	r0, #0
   1247c:	ldr	r7, [sp, #40]	; 0x28
   12480:	ldr	r2, [sp, #36]	; 0x24
   12484:	ldr	lr, [sp, #52]	; 0x34
   12488:	b	12538 <abort@plt+0x1818>
   1248c:	cmp	r7, #0
   12490:	bne	1288c <abort@plt+0x1b6c>
   12494:	eor	r0, r2, #1
   12498:	ands	r0, lr, r0
   1249c:	beq	124d4 <abort@plt+0x17b4>
   124a0:	cmp	fp, r8
   124a4:	movhi	r2, #39	; 0x27
   124a8:	strbhi	r2, [r9, r8]
   124ac:	add	r2, r8, #1
   124b0:	cmp	fp, r2
   124b4:	movhi	ip, #36	; 0x24
   124b8:	strbhi	ip, [r9, r2]
   124bc:	add	r2, r8, #2
   124c0:	cmp	fp, r2
   124c4:	movhi	ip, #39	; 0x27
   124c8:	strbhi	ip, [r9, r2]
   124cc:	add	r8, r8, #3
   124d0:	mov	r2, r0
   124d4:	cmp	fp, r8
   124d8:	movhi	r0, #92	; 0x5c
   124dc:	strbhi	r0, [r9, r8]
   124e0:	add	r0, r8, #1
   124e4:	cmp	fp, r0
   124e8:	lsrhi	ip, r4, #6
   124ec:	addhi	ip, ip, #48	; 0x30
   124f0:	strbhi	ip, [r9, r0]
   124f4:	add	ip, r8, #2
   124f8:	cmp	fp, ip
   124fc:	lsrhi	r0, r4, #3
   12500:	andhi	r0, r0, #7
   12504:	addhi	r0, r0, #48	; 0x30
   12508:	add	sl, sl, #1
   1250c:	strbhi	r0, [r9, ip]
   12510:	and	r4, r4, #7
   12514:	cmp	sl, r1
   12518:	add	r4, r4, #48	; 0x30
   1251c:	add	r8, r8, #3
   12520:	bcs	128a4 <abort@plt+0x1b84>
   12524:	mov	r0, r3
   12528:	cmp	fp, r8
   1252c:	strbhi	r4, [r9, r8]
   12530:	ldrb	r4, [r5, #1]!
   12534:	add	r8, r8, #1
   12538:	cmp	r3, #0
   1253c:	bne	1248c <abort@plt+0x176c>
   12540:	cmp	r6, #0
   12544:	bne	125e8 <abort@plt+0x18c8>
   12548:	eor	r6, r0, #1
   1254c:	and	r6, r6, r2
   12550:	add	sl, sl, #1
   12554:	cmp	r1, sl
   12558:	uxtb	r6, r6
   1255c:	bls	12610 <abort@plt+0x18f0>
   12560:	cmp	r6, #0
   12564:	beq	12528 <abort@plt+0x1808>
   12568:	cmp	fp, r8
   1256c:	movhi	r2, #39	; 0x27
   12570:	strbhi	r2, [r9, r8]
   12574:	add	r2, r8, #1
   12578:	cmp	fp, r2
   1257c:	movhi	ip, #39	; 0x27
   12580:	strbhi	ip, [r9, r2]
   12584:	add	r8, r8, #2
   12588:	mov	r6, r3
   1258c:	mov	r2, r3
   12590:	b	12528 <abort@plt+0x1808>
   12594:	ldr	r3, [sp, #184]	; 0xb8
   12598:	cmp	r3, #0
   1259c:	beq	11c74 <abort@plt+0xf54>
   125a0:	lsr	r2, r4, #5
   125a4:	mov	r0, r3
   125a8:	uxtb	r2, r2
   125ac:	and	r3, r4, #31
   125b0:	ldr	r2, [r0, r2, lsl #2]
   125b4:	lsr	r3, r2, r3
   125b8:	tst	r3, #1
   125bc:	beq	11c74 <abort@plt+0xf54>
   125c0:	ldr	r3, [sp, #40]	; 0x28
   125c4:	cmp	r3, #0
   125c8:	beq	11e60 <abort@plt+0x1140>
   125cc:	mov	r3, r1
   125d0:	str	r3, [sp, #64]	; 0x40
   125d4:	mov	sl, r9
   125d8:	ldr	r3, [sp, #56]	; 0x38
   125dc:	mov	r9, fp
   125e0:	ldr	r2, [sp, #64]	; 0x40
   125e4:	b	127d4 <abort@plt+0x1ab4>
   125e8:	cmp	fp, r8
   125ec:	eor	r6, r0, #1
   125f0:	movhi	ip, #92	; 0x5c
   125f4:	and	r6, r6, r2
   125f8:	add	sl, sl, #1
   125fc:	strbhi	ip, [r9, r8]
   12600:	cmp	r1, sl
   12604:	add	r8, r8, #1
   12608:	uxtb	r6, r6
   1260c:	bhi	12560 <abort@plt+0x1840>
   12610:	str	r2, [sp, #36]	; 0x24
   12614:	b	11c8c <abort@plt+0xf6c>
   12618:	ldr	r3, [sp, #24]
   1261c:	cmn	r3, #1
   12620:	mov	r3, #0
   12624:	str	r3, [sp, #128]	; 0x80
   12628:	str	r3, [sp, #132]	; 0x84
   1262c:	beq	12920 <abort@plt+0x1c00>
   12630:	mov	r2, r7
   12634:	mov	r3, #0
   12638:	str	r7, [sp, #104]	; 0x68
   1263c:	str	r5, [sp, #116]	; 0x74
   12640:	mov	r7, r3
   12644:	mov	r5, r2
   12648:	str	r4, [sp, #32]
   1264c:	str	r6, [sp, #108]	; 0x6c
   12650:	str	r8, [sp, #112]	; 0x70
   12654:	ldr	r3, [sp, #44]	; 0x2c
   12658:	add	r6, sl, r7
   1265c:	add	r4, r3, r6
   12660:	ldr	r3, [sp, #24]
   12664:	mov	r1, r4
   12668:	sub	r2, r3, r6
   1266c:	add	r0, sp, #124	; 0x7c
   12670:	add	r3, sp, #128	; 0x80
   12674:	bl	16938 <abort@plt+0x5c18>
   12678:	subs	r8, r0, #0
   1267c:	beq	12a04 <abort@plt+0x1ce4>
   12680:	cmn	r8, #1
   12684:	beq	129dc <abort@plt+0x1cbc>
   12688:	cmn	r8, #2
   1268c:	beq	12974 <abort@plt+0x1c54>
   12690:	ldr	r3, [sp, #64]	; 0x40
   12694:	cmp	r3, #0
   12698:	beq	12758 <abort@plt+0x1a38>
   1269c:	cmp	r8, #1
   126a0:	beq	12758 <abort@plt+0x1a38>
   126a4:	sub	r3, r8, #1
   126a8:	add	r6, r3, r6
   126ac:	ldr	r3, [sp, #44]	; 0x2c
   126b0:	add	r6, r3, r6
   126b4:	ldrb	r3, [r4, #1]!
   126b8:	sub	r3, r3, #91	; 0x5b
   126bc:	cmp	r3, #33	; 0x21
   126c0:	ldrls	pc, [pc, r3, lsl #2]
   126c4:	b	12750 <abort@plt+0x1a30>
   126c8:			; <UNDEFINED> instruction: 0x000127bc
   126cc:			; <UNDEFINED> instruction: 0x000127bc
   126d0:	andeq	r2, r1, r0, asr r7
   126d4:			; <UNDEFINED> instruction: 0x000127bc
   126d8:	andeq	r2, r1, r0, asr r7
   126dc:			; <UNDEFINED> instruction: 0x000127bc
   126e0:	andeq	r2, r1, r0, asr r7
   126e4:	andeq	r2, r1, r0, asr r7
   126e8:	andeq	r2, r1, r0, asr r7
   126ec:	andeq	r2, r1, r0, asr r7
   126f0:	andeq	r2, r1, r0, asr r7
   126f4:	andeq	r2, r1, r0, asr r7
   126f8:	andeq	r2, r1, r0, asr r7
   126fc:	andeq	r2, r1, r0, asr r7
   12700:	andeq	r2, r1, r0, asr r7
   12704:	andeq	r2, r1, r0, asr r7
   12708:	andeq	r2, r1, r0, asr r7
   1270c:	andeq	r2, r1, r0, asr r7
   12710:	andeq	r2, r1, r0, asr r7
   12714:	andeq	r2, r1, r0, asr r7
   12718:	andeq	r2, r1, r0, asr r7
   1271c:	andeq	r2, r1, r0, asr r7
   12720:	andeq	r2, r1, r0, asr r7
   12724:	andeq	r2, r1, r0, asr r7
   12728:	andeq	r2, r1, r0, asr r7
   1272c:	andeq	r2, r1, r0, asr r7
   12730:	andeq	r2, r1, r0, asr r7
   12734:	andeq	r2, r1, r0, asr r7
   12738:	andeq	r2, r1, r0, asr r7
   1273c:	andeq	r2, r1, r0, asr r7
   12740:	andeq	r2, r1, r0, asr r7
   12744:	andeq	r2, r1, r0, asr r7
   12748:	andeq	r2, r1, r0, asr r7
   1274c:			; <UNDEFINED> instruction: 0x000127bc
   12750:	cmp	r6, r4
   12754:	bne	126b4 <abort@plt+0x1994>
   12758:	ldr	r0, [sp, #124]	; 0x7c
   1275c:	bl	10bd0 <iswprint@plt>
   12760:	add	r7, r7, r8
   12764:	cmp	r0, #0
   12768:	add	r0, sp, #128	; 0x80
   1276c:	moveq	r5, #0
   12770:	bl	10b7c <mbsinit@plt>
   12774:	cmp	r0, #0
   12778:	beq	12654 <abort@plt+0x1934>
   1277c:	ldr	r4, [sp, #32]
   12780:	str	r5, [sp, #32]
   12784:	ldr	r3, [sp, #32]
   12788:	mov	r1, r7
   1278c:	eor	r3, r3, #1
   12790:	ldr	r7, [sp, #104]	; 0x68
   12794:	ldr	r6, [sp, #108]	; 0x6c
   12798:	ldr	r8, [sp, #112]	; 0x70
   1279c:	ldr	r5, [sp, #116]	; 0x74
   127a0:	uxtb	r3, r3
   127a4:	cmp	r1, #1
   127a8:	bls	12464 <abort@plt+0x1744>
   127ac:	ldr	r2, [sp, #56]	; 0x38
   127b0:	and	r3, r3, r2
   127b4:	uxtb	r3, r3
   127b8:	b	12474 <abort@plt+0x1754>
   127bc:	mov	r3, #2
   127c0:	str	r3, [sp, #176]	; 0xb0
   127c4:	ldr	r2, [sp, #64]	; 0x40
   127c8:	ldr	r3, [sp, #56]	; 0x38
   127cc:	mov	sl, r9
   127d0:	mov	r9, fp
   127d4:	and	r3, r3, r2
   127d8:	tst	r3, #255	; 0xff
   127dc:	ldr	r3, [sp, #176]	; 0xb0
   127e0:	movne	r3, #4
   127e4:	str	r3, [sp, #176]	; 0xb0
   127e8:	ldr	r3, [sp, #180]	; 0xb4
   127ec:	mov	ip, #0
   127f0:	bic	r3, r3, #2
   127f4:	str	r3, [sp, #4]
   127f8:	ldr	r3, [sp, #192]	; 0xc0
   127fc:	ldr	r2, [sp, #44]	; 0x2c
   12800:	str	r3, [sp, #16]
   12804:	ldr	r3, [sp, #188]	; 0xbc
   12808:	mov	r1, r9
   1280c:	str	r3, [sp, #12]
   12810:	ldr	r3, [sp, #176]	; 0xb0
   12814:	mov	r0, sl
   12818:	str	r3, [sp]
   1281c:	str	ip, [sp, #8]
   12820:	ldr	r3, [sp, #24]
   12824:	bl	11684 <abort@plt+0x964>
   12828:	mov	fp, r0
   1282c:	mov	r0, fp
   12830:	add	sp, sp, #140	; 0x8c
   12834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12838:	mov	r4, #92	; 0x5c
   1283c:	mov	r1, #0
   12840:	mov	r3, r4
   12844:	b	11e38 <abort@plt+0x1118>
   12848:	mov	r3, #0
   1284c:	ldr	r1, [sp, #52]	; 0x34
   12850:	str	r3, [sp, #32]
   12854:	mov	r4, #63	; 0x3f
   12858:	b	11c58 <abort@plt+0xf38>
   1285c:	cmp	fp, #0
   12860:	beq	128bc <abort@plt+0x1b9c>
   12864:	mov	r3, #39	; 0x27
   12868:	strb	r3, [r9]
   1286c:	mov	r3, #0
   12870:	str	r3, [sp, #40]	; 0x28
   12874:	mov	r3, #1
   12878:	str	r3, [sp, #68]	; 0x44
   1287c:	ldr	r3, [pc, #448]	; 12a44 <abort@plt+0x1d24>
   12880:	mov	r8, #1
   12884:	str	r3, [sp, #72]	; 0x48
   12888:	b	11a6c <abort@plt+0xd4c>
   1288c:	ldr	r3, [sp, #40]	; 0x28
   12890:	mov	sl, r9
   12894:	str	r3, [sp, #56]	; 0x38
   12898:	mov	r9, fp
   1289c:	ldr	r2, [sp, #64]	; 0x40
   128a0:	b	127d4 <abort@plt+0x1ab4>
   128a4:	str	r2, [sp, #36]	; 0x24
   128a8:	b	11cbc <abort@plt+0xf9c>
   128ac:	mov	r1, #0
   128b0:	str	r3, [sp, #32]
   128b4:	mov	r4, #63	; 0x3f
   128b8:	b	11c58 <abort@plt+0xf38>
   128bc:	ldr	r3, [pc, #384]	; 12a44 <abort@plt+0x1d24>
   128c0:	str	r3, [sp, #72]	; 0x48
   128c4:	mov	r3, #0
   128c8:	str	r3, [sp, #40]	; 0x28
   128cc:	mov	r3, #1
   128d0:	str	r3, [sp, #68]	; 0x44
   128d4:	mov	r8, r3
   128d8:	b	11a6c <abort@plt+0xd4c>
   128dc:	bl	10d20 <abort@plt>
   128e0:	cmp	fp, #0
   128e4:	beq	12944 <abort@plt+0x1c24>
   128e8:	mov	r2, #1
   128ec:	mov	r3, #34	; 0x22
   128f0:	strb	r3, [r9]
   128f4:	mov	r8, r2
   128f8:	mov	r3, r2
   128fc:	str	r2, [sp, #68]	; 0x44
   12900:	str	r3, [sp, #56]	; 0x38
   12904:	ldr	r3, [pc, #316]	; 12a48 <abort@plt+0x1d28>
   12908:	ldr	r1, [sp, #56]	; 0x38
   1290c:	str	r3, [sp, #72]	; 0x48
   12910:	ldr	r2, [sp, #176]	; 0xb0
   12914:	ldr	ip, [sp, #40]	; 0x28
   12918:	ldr	lr, [sp, #176]	; 0xb0
   1291c:	b	11750 <abort@plt+0xa30>
   12920:	ldr	r0, [sp, #44]	; 0x2c
   12924:	bl	10c78 <strlen@plt>
   12928:	str	r0, [sp, #24]
   1292c:	b	12630 <abort@plt+0x1910>
   12930:	mov	r7, #0
   12934:	ldr	r1, [sp, #52]	; 0x34
   12938:	str	r3, [sp, #32]
   1293c:	mov	r4, #48	; 0x30
   12940:	b	11c58 <abort@plt+0xf38>
   12944:	mov	r3, #1
   12948:	str	r3, [sp, #68]	; 0x44
   1294c:	mov	r8, r3
   12950:	b	12900 <abort@plt+0x1be0>
   12954:	mov	r3, #2
   12958:	mov	sl, r9
   1295c:	str	r3, [sp, #176]	; 0xb0
   12960:	mov	r9, fp
   12964:	ldr	r3, [sp, #56]	; 0x38
   12968:	b	127d4 <abort@plt+0x1ab4>
   1296c:	ldr	r6, [sp, #48]	; 0x30
   12970:	b	12420 <abort@plt+0x1700>
   12974:	ldr	r0, [sp, #24]
   12978:	mov	ip, r6
   1297c:	cmp	r0, ip
   12980:	mov	r1, r7
   12984:	mov	r2, r4
   12988:	ldr	r7, [sp, #104]	; 0x68
   1298c:	ldr	r4, [sp, #32]
   12990:	ldr	r6, [sp, #108]	; 0x6c
   12994:	ldr	r8, [sp, #112]	; 0x70
   12998:	ldr	r5, [sp, #116]	; 0x74
   1299c:	bls	129cc <abort@plt+0x1cac>
   129a0:	ldrb	r3, [r2]
   129a4:	cmp	r3, #0
   129a8:	bne	129bc <abort@plt+0x1c9c>
   129ac:	b	12adc <abort@plt+0x1dbc>
   129b0:	ldrb	r3, [r2, #1]!
   129b4:	cmp	r3, #0
   129b8:	beq	12adc <abort@plt+0x1dbc>
   129bc:	add	r1, r1, #1
   129c0:	add	r3, sl, r1
   129c4:	cmp	r0, r3
   129c8:	bhi	129b0 <abort@plt+0x1c90>
   129cc:	mov	r2, #0
   129d0:	mov	r3, r7
   129d4:	str	r2, [sp, #32]
   129d8:	b	127a4 <abort@plt+0x1a84>
   129dc:	mov	r1, r7
   129e0:	ldr	r7, [sp, #104]	; 0x68
   129e4:	mov	r2, #0
   129e8:	ldr	r4, [sp, #32]
   129ec:	ldr	r6, [sp, #108]	; 0x6c
   129f0:	ldr	r8, [sp, #112]	; 0x70
   129f4:	ldr	r5, [sp, #116]	; 0x74
   129f8:	mov	r3, r7
   129fc:	str	r2, [sp, #32]
   12a00:	b	127a4 <abort@plt+0x1a84>
   12a04:	mov	r3, r5
   12a08:	eor	r3, r3, #1
   12a0c:	ldr	r4, [sp, #32]
   12a10:	mov	r1, r7
   12a14:	str	r5, [sp, #32]
   12a18:	ldr	r7, [sp, #104]	; 0x68
   12a1c:	ldr	r6, [sp, #108]	; 0x6c
   12a20:	ldr	r8, [sp, #112]	; 0x70
   12a24:	ldr	r5, [sp, #116]	; 0x74
   12a28:	uxtb	r3, r3
   12a2c:	b	127a4 <abort@plt+0x1a84>
   12a30:	mov	sl, r9
   12a34:	str	r3, [sp, #56]	; 0x38
   12a38:	mov	r9, fp
   12a3c:	ldr	r2, [sp, #64]	; 0x40
   12a40:	b	127d4 <abort@plt+0x1ab4>
   12a44:	andeq	r7, r1, ip, lsl #7
   12a48:	andeq	r7, r1, r8, lsl #7
   12a4c:	muleq	r1, r0, r3
   12a50:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12a54:	ldr	r2, [sp, #44]	; 0x2c
   12a58:	ldrb	r1, [r2, r3]
   12a5c:	sub	r2, r1, #33	; 0x21
   12a60:	uxtb	r2, r2
   12a64:	cmp	r2, #29
   12a68:	bhi	12ae8 <abort@plt+0x1dc8>
   12a6c:	ldr	r0, [pc, #-36]	; 12a50 <abort@plt+0x1d30>
   12a70:	mov	ip, #1
   12a74:	ands	r2, r0, ip, lsl r2
   12a78:	beq	12b08 <abort@plt+0x1de8>
   12a7c:	ldr	r2, [sp, #40]	; 0x28
   12a80:	cmp	r2, #0
   12a84:	bne	12bfc <abort@plt+0x1edc>
   12a88:	add	r2, r8, #1
   12a8c:	cmp	fp, r8
   12a90:	strbhi	r4, [r9, r8]
   12a94:	cmp	fp, r2
   12a98:	movhi	r0, #34	; 0x22
   12a9c:	strbhi	r0, [r9, r2]
   12aa0:	add	r2, r8, #2
   12aa4:	cmp	fp, r2
   12aa8:	movhi	r0, #34	; 0x22
   12aac:	strbhi	r0, [r9, r2]
   12ab0:	add	r2, r8, #3
   12ab4:	cmp	fp, r2
   12ab8:	mov	sl, r3
   12abc:	ldr	r3, [sp, #40]	; 0x28
   12ac0:	movhi	r0, #63	; 0x3f
   12ac4:	mov	r4, r1
   12ac8:	strbhi	r0, [r9, r2]
   12acc:	add	r8, r8, #4
   12ad0:	mov	r1, r3
   12ad4:	str	r3, [sp, #32]
   12ad8:	b	11c58 <abort@plt+0xf38>
   12adc:	str	r3, [sp, #32]
   12ae0:	mov	r3, r7
   12ae4:	b	127a4 <abort@plt+0x1a84>
   12ae8:	mov	r1, #0
   12aec:	str	r1, [sp, #32]
   12af0:	b	11c58 <abort@plt+0xf38>
   12af4:	mov	sl, r9
   12af8:	ldr	r3, [sp, #56]	; 0x38
   12afc:	mov	r9, fp
   12b00:	ldr	r2, [sp, #64]	; 0x40
   12b04:	b	127d4 <abort@plt+0x1ab4>
   12b08:	str	r2, [sp, #32]
   12b0c:	mov	r1, #0
   12b10:	b	11c58 <abort@plt+0xf38>
   12b14:	ldr	r2, [sp, #76]	; 0x4c
   12b18:	mov	sl, r9
   12b1c:	mov	r9, fp
   12b20:	mov	fp, r8
   12b24:	ldr	r1, [sp, #72]	; 0x48
   12b28:	cmp	r1, #0
   12b2c:	moveq	r3, #0
   12b30:	andne	r3, r2, #1
   12b34:	cmp	r3, #0
   12b38:	beq	12b64 <abort@plt+0x1e44>
   12b3c:	ldrb	r3, [r1]
   12b40:	cmp	r3, #0
   12b44:	beq	12b64 <abort@plt+0x1e44>
   12b48:	mov	r2, r1
   12b4c:	cmp	r9, fp
   12b50:	strbhi	r3, [sl, fp]
   12b54:	ldrb	r3, [r2, #1]!
   12b58:	add	fp, fp, #1
   12b5c:	cmp	r3, #0
   12b60:	bne	12b4c <abort@plt+0x1e2c>
   12b64:	cmp	r9, fp
   12b68:	movhi	r3, #0
   12b6c:	strbhi	r3, [sl, fp]
   12b70:	b	1282c <abort@plt+0x1b0c>
   12b74:	ldr	r3, [sp, #192]	; 0xc0
   12b78:	mov	ip, #5
   12b7c:	str	r3, [sp, #16]
   12b80:	ldr	r3, [sp, #188]	; 0xbc
   12b84:	ldr	r2, [sp, #44]	; 0x2c
   12b88:	str	r3, [sp, #12]
   12b8c:	ldr	r3, [sp, #184]	; 0xb8
   12b90:	ldr	r1, [sp, #84]	; 0x54
   12b94:	str	r3, [sp, #8]
   12b98:	ldr	r3, [sp, #180]	; 0xb4
   12b9c:	mov	r0, r9
   12ba0:	str	r3, [sp, #4]
   12ba4:	str	ip, [sp]
   12ba8:	ldr	r3, [sp, #24]
   12bac:	bl	11684 <abort@plt+0x964>
   12bb0:	mov	fp, r0
   12bb4:	b	1282c <abort@plt+0x1b0c>
   12bb8:	mov	sl, r9
   12bbc:	mov	r9, fp
   12bc0:	mov	fp, r8
   12bc4:	b	12b24 <abort@plt+0x1e04>
   12bc8:	ldr	r1, [sp, #176]	; 0xb0
   12bcc:	bl	11564 <abort@plt+0x844>
   12bd0:	str	r0, [sp, #192]	; 0xc0
   12bd4:	b	11b40 <abort@plt+0xe20>
   12bd8:	ldr	r1, [sp, #176]	; 0xb0
   12bdc:	bl	11564 <abort@plt+0x844>
   12be0:	str	r0, [sp, #188]	; 0xbc
   12be4:	b	11b20 <abort@plt+0xe00>
   12be8:	mov	sl, r9
   12bec:	mov	r2, r3
   12bf0:	mov	r9, fp
   12bf4:	mov	fp, r8
   12bf8:	b	12b24 <abort@plt+0x1e04>
   12bfc:	mov	sl, r9
   12c00:	mov	r9, fp
   12c04:	b	127e8 <abort@plt+0x1ac8>
   12c08:	push	{r4, r5, r6, lr}
   12c0c:	mov	r5, r0
   12c10:	bl	10c84 <__errno_location@plt>
   12c14:	cmp	r5, #0
   12c18:	mov	r1, #48	; 0x30
   12c1c:	mov	r4, r0
   12c20:	ldr	r0, [pc, #16]	; 12c38 <abort@plt+0x1f18>
   12c24:	ldr	r6, [r4]
   12c28:	movne	r0, r5
   12c2c:	bl	164a4 <abort@plt+0x5784>
   12c30:	str	r6, [r4]
   12c34:	pop	{r4, r5, r6, pc}
   12c38:	andeq	r8, r2, ip, lsr r1
   12c3c:	ldr	r3, [pc, #12]	; 12c50 <abort@plt+0x1f30>
   12c40:	cmp	r0, #0
   12c44:	moveq	r0, r3
   12c48:	ldr	r0, [r0]
   12c4c:	bx	lr
   12c50:	andeq	r8, r2, ip, lsr r1
   12c54:	ldr	r3, [pc, #12]	; 12c68 <abort@plt+0x1f48>
   12c58:	cmp	r0, #0
   12c5c:	moveq	r0, r3
   12c60:	str	r1, [r0]
   12c64:	bx	lr
   12c68:	andeq	r8, r2, ip, lsr r1
   12c6c:	ldr	r3, [pc, #52]	; 12ca8 <abort@plt+0x1f88>
   12c70:	cmp	r0, #0
   12c74:	moveq	r0, r3
   12c78:	add	r3, r0, #8
   12c7c:	push	{lr}		; (str lr, [sp, #-4]!)
   12c80:	lsr	lr, r1, #5
   12c84:	and	r1, r1, #31
   12c88:	ldr	ip, [r3, lr, lsl #2]
   12c8c:	lsr	r0, ip, r1
   12c90:	eor	r2, r2, r0
   12c94:	and	r2, r2, #1
   12c98:	and	r0, r0, #1
   12c9c:	eor	r1, ip, r2, lsl r1
   12ca0:	str	r1, [r3, lr, lsl #2]
   12ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ca8:	andeq	r8, r2, ip, lsr r1
   12cac:	ldr	r3, [pc, #16]	; 12cc4 <abort@plt+0x1fa4>
   12cb0:	cmp	r0, #0
   12cb4:	movne	r3, r0
   12cb8:	ldr	r0, [r3, #4]
   12cbc:	str	r1, [r3, #4]
   12cc0:	bx	lr
   12cc4:	andeq	r8, r2, ip, lsr r1
   12cc8:	ldr	r3, [pc, #44]	; 12cfc <abort@plt+0x1fdc>
   12ccc:	cmp	r0, #0
   12cd0:	moveq	r0, r3
   12cd4:	mov	ip, #10
   12cd8:	cmp	r2, #0
   12cdc:	cmpne	r1, #0
   12ce0:	str	ip, [r0]
   12ce4:	beq	12cf4 <abort@plt+0x1fd4>
   12ce8:	str	r1, [r0, #40]	; 0x28
   12cec:	str	r2, [r0, #44]	; 0x2c
   12cf0:	bx	lr
   12cf4:	push	{r4, lr}
   12cf8:	bl	10d20 <abort@plt>
   12cfc:	andeq	r8, r2, ip, lsr r1
   12d00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d04:	sub	sp, sp, #24
   12d08:	ldr	ip, [pc, #108]	; 12d7c <abort@plt+0x205c>
   12d0c:	ldr	r4, [sp, #56]	; 0x38
   12d10:	mov	r9, r2
   12d14:	cmp	r4, #0
   12d18:	moveq	r4, ip
   12d1c:	mov	sl, r3
   12d20:	mov	r7, r0
   12d24:	mov	r8, r1
   12d28:	bl	10c84 <__errno_location@plt>
   12d2c:	ldr	r3, [r4, #44]	; 0x2c
   12d30:	mov	r1, r8
   12d34:	ldr	r6, [r0]
   12d38:	str	r3, [sp, #16]
   12d3c:	ldr	r2, [r4, #40]	; 0x28
   12d40:	add	r3, r4, #8
   12d44:	str	r3, [sp, #8]
   12d48:	str	r2, [sp, #12]
   12d4c:	ldr	r2, [r4, #4]
   12d50:	mov	r5, r0
   12d54:	str	r2, [sp, #4]
   12d58:	ldr	ip, [r4]
   12d5c:	mov	r3, sl
   12d60:	mov	r2, r9
   12d64:	mov	r0, r7
   12d68:	str	ip, [sp]
   12d6c:	bl	11684 <abort@plt+0x964>
   12d70:	str	r6, [r5]
   12d74:	add	sp, sp, #24
   12d78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d7c:	andeq	r8, r2, ip, lsr r1
   12d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d84:	cmp	r2, #0
   12d88:	sub	sp, sp, #36	; 0x24
   12d8c:	ldr	r4, [pc, #164]	; 12e38 <abort@plt+0x2118>
   12d90:	mov	r8, r1
   12d94:	movne	r4, r2
   12d98:	mov	r7, r0
   12d9c:	bl	10c84 <__errno_location@plt>
   12da0:	ldr	r3, [r4, #44]	; 0x2c
   12da4:	ldr	r5, [r4, #4]
   12da8:	add	r9, r4, #8
   12dac:	orr	r5, r5, #1
   12db0:	mov	r1, #0
   12db4:	mov	r2, r7
   12db8:	ldr	fp, [r0]
   12dbc:	str	r3, [sp, #16]
   12dc0:	ldr	r3, [r4, #40]	; 0x28
   12dc4:	stmib	sp, {r5, r9}
   12dc8:	str	r3, [sp, #12]
   12dcc:	ldr	r3, [r4]
   12dd0:	mov	r6, r0
   12dd4:	str	r3, [sp]
   12dd8:	mov	r0, r1
   12ddc:	mov	r3, r8
   12de0:	bl	11684 <abort@plt+0x964>
   12de4:	add	r1, r0, #1
   12de8:	mov	r0, r1
   12dec:	str	r1, [sp, #28]
   12df0:	bl	15f60 <abort@plt+0x5240>
   12df4:	ldr	r3, [r4, #44]	; 0x2c
   12df8:	ldr	r1, [sp, #28]
   12dfc:	str	r3, [sp, #16]
   12e00:	ldr	r3, [r4, #40]	; 0x28
   12e04:	str	r5, [sp, #4]
   12e08:	str	r3, [sp, #12]
   12e0c:	str	r9, [sp, #8]
   12e10:	ldr	ip, [r4]
   12e14:	mov	r3, r8
   12e18:	mov	r2, r7
   12e1c:	str	ip, [sp]
   12e20:	mov	sl, r0
   12e24:	bl	11684 <abort@plt+0x964>
   12e28:	mov	r0, sl
   12e2c:	str	fp, [r6]
   12e30:	add	sp, sp, #36	; 0x24
   12e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e38:	andeq	r8, r2, ip, lsr r1
   12e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e40:	cmp	r3, #0
   12e44:	sub	sp, sp, #44	; 0x2c
   12e48:	ldr	r4, [pc, #192]	; 12f10 <abort@plt+0x21f0>
   12e4c:	mov	r6, r2
   12e50:	movne	r4, r3
   12e54:	mov	r9, r1
   12e58:	mov	r8, r0
   12e5c:	bl	10c84 <__errno_location@plt>
   12e60:	ldr	r3, [r4, #44]	; 0x2c
   12e64:	ldr	r5, [r4, #4]
   12e68:	add	sl, r4, #8
   12e6c:	cmp	r6, #0
   12e70:	orreq	r5, r5, #1
   12e74:	mov	r1, #0
   12e78:	ldr	r2, [r0]
   12e7c:	str	r3, [sp, #16]
   12e80:	ldr	r3, [r4, #40]	; 0x28
   12e84:	stmib	sp, {r5, sl}
   12e88:	str	r3, [sp, #12]
   12e8c:	ldr	r3, [r4]
   12e90:	mov	r7, r0
   12e94:	str	r2, [sp, #28]
   12e98:	str	r3, [sp]
   12e9c:	mov	r2, r8
   12ea0:	mov	r3, r9
   12ea4:	mov	r0, r1
   12ea8:	bl	11684 <abort@plt+0x964>
   12eac:	add	r1, r0, #1
   12eb0:	mov	fp, r0
   12eb4:	mov	r0, r1
   12eb8:	str	r1, [sp, #36]	; 0x24
   12ebc:	bl	15f60 <abort@plt+0x5240>
   12ec0:	ldr	r3, [r4, #44]	; 0x2c
   12ec4:	mov	r2, r8
   12ec8:	str	r3, [sp, #16]
   12ecc:	ldr	r3, [r4, #40]	; 0x28
   12ed0:	str	r5, [sp, #4]
   12ed4:	str	r3, [sp, #12]
   12ed8:	str	sl, [sp, #8]
   12edc:	ldr	ip, [r4]
   12ee0:	ldr	r1, [sp, #36]	; 0x24
   12ee4:	mov	r3, r9
   12ee8:	str	ip, [sp]
   12eec:	str	r0, [sp, #32]
   12ef0:	bl	11684 <abort@plt+0x964>
   12ef4:	ldr	r2, [sp, #28]
   12ef8:	cmp	r6, #0
   12efc:	str	r2, [r7]
   12f00:	ldr	r0, [sp, #32]
   12f04:	strne	fp, [r6]
   12f08:	add	sp, sp, #44	; 0x2c
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f10:	andeq	r8, r2, ip, lsr r1
   12f14:	push	{r4, r5, r6, r7, r8, lr}
   12f18:	ldr	r6, [pc, #116]	; 12f94 <abort@plt+0x2274>
   12f1c:	ldr	r3, [r6, #4]
   12f20:	ldr	r7, [r6]
   12f24:	cmp	r3, #1
   12f28:	movgt	r5, r7
   12f2c:	movgt	r4, #1
   12f30:	ble	12f50 <abort@plt+0x2230>
   12f34:	ldr	r0, [r5, #12]
   12f38:	bl	1680c <abort@plt+0x5aec>
   12f3c:	ldr	r3, [r6, #4]
   12f40:	add	r4, r4, #1
   12f44:	cmp	r3, r4
   12f48:	add	r5, r5, #8
   12f4c:	bgt	12f34 <abort@plt+0x2214>
   12f50:	ldr	r0, [r7, #4]
   12f54:	ldr	r4, [pc, #60]	; 12f98 <abort@plt+0x2278>
   12f58:	cmp	r0, r4
   12f5c:	beq	12f70 <abort@plt+0x2250>
   12f60:	bl	1680c <abort@plt+0x5aec>
   12f64:	mov	r3, #256	; 0x100
   12f68:	str	r4, [r6, #12]
   12f6c:	str	r3, [r6, #8]
   12f70:	ldr	r4, [pc, #36]	; 12f9c <abort@plt+0x227c>
   12f74:	cmp	r7, r4
   12f78:	beq	12f88 <abort@plt+0x2268>
   12f7c:	mov	r0, r7
   12f80:	bl	1680c <abort@plt+0x5aec>
   12f84:	str	r4, [r6]
   12f88:	mov	r3, #1
   12f8c:	str	r3, [r6, #4]
   12f90:	pop	{r4, r5, r6, r7, r8, pc}
   12f94:	ldrdeq	r8, [r2], -r0
   12f98:	andeq	r8, r2, ip, ror #2
   12f9c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   12fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fa4:	sub	sp, sp, #44	; 0x2c
   12fa8:	mov	r5, r0
   12fac:	mov	sl, r1
   12fb0:	bl	10c84 <__errno_location@plt>
   12fb4:	ldr	r4, [pc, #400]	; 1314c <abort@plt+0x242c>
   12fb8:	cmn	r5, #-2147483647	; 0x80000001
   12fbc:	ldr	r6, [r4]
   12fc0:	mov	r8, r0
   12fc4:	movne	r0, #0
   12fc8:	moveq	r0, #1
   12fcc:	ldr	r3, [r8]
   12fd0:	orrs	r0, r0, r5, lsr #31
   12fd4:	str	r3, [sp, #24]
   12fd8:	bne	13148 <abort@plt+0x2428>
   12fdc:	ldr	r2, [r4, #4]
   12fe0:	cmp	r5, r2
   12fe4:	blt	13044 <abort@plt+0x2324>
   12fe8:	add	r7, r4, #8
   12fec:	cmp	r6, r7
   12ff0:	str	r2, [sp, #36]	; 0x24
   12ff4:	beq	13118 <abort@plt+0x23f8>
   12ff8:	mov	r3, #8
   12ffc:	sub	r2, r5, r2
   13000:	mov	r0, r6
   13004:	str	r3, [sp]
   13008:	add	r2, r2, #1
   1300c:	mvn	r3, #-2147483648	; 0x80000000
   13010:	add	r1, sp, #36	; 0x24
   13014:	bl	1617c <abort@plt+0x545c>
   13018:	mov	r6, r0
   1301c:	str	r0, [r4]
   13020:	ldr	r0, [r4, #4]
   13024:	ldr	r2, [sp, #36]	; 0x24
   13028:	mov	r1, #0
   1302c:	sub	r2, r2, r0
   13030:	add	r0, r6, r0, lsl #3
   13034:	lsl	r2, r2, #3
   13038:	bl	10c9c <memset@plt>
   1303c:	ldr	r3, [sp, #36]	; 0x24
   13040:	str	r3, [r4, #4]
   13044:	ldr	r4, [pc, #260]	; 13150 <abort@plt+0x2430>
   13048:	add	fp, r6, r5, lsl #3
   1304c:	ldr	r9, [r6, r5, lsl #3]
   13050:	ldr	r0, [r4, #4]
   13054:	ldr	r3, [r4]
   13058:	ldr	r7, [fp, #4]
   1305c:	ldr	r1, [r4, #44]	; 0x2c
   13060:	ldr	r2, [r4, #40]	; 0x28
   13064:	orr	r0, r0, #1
   13068:	str	r3, [sp]
   1306c:	add	r3, r4, #8
   13070:	str	r0, [sp, #28]
   13074:	str	r0, [sp, #4]
   13078:	str	r1, [sp, #16]
   1307c:	str	r2, [sp, #12]
   13080:	str	r3, [sp, #8]
   13084:	mov	r0, r7
   13088:	mov	r1, r9
   1308c:	mvn	r3, #0
   13090:	mov	r2, sl
   13094:	bl	11684 <abort@plt+0x964>
   13098:	cmp	r9, r0
   1309c:	bhi	13104 <abort@plt+0x23e4>
   130a0:	add	r3, r4, #48	; 0x30
   130a4:	add	r9, r0, #1
   130a8:	cmp	r7, r3
   130ac:	str	r9, [r6, r5, lsl #3]
   130b0:	beq	130bc <abort@plt+0x239c>
   130b4:	mov	r0, r7
   130b8:	bl	1680c <abort@plt+0x5aec>
   130bc:	mov	r0, r9
   130c0:	bl	15f60 <abort@plt+0x5240>
   130c4:	ldr	ip, [r4, #44]	; 0x2c
   130c8:	ldr	r3, [r4]
   130cc:	ldr	lr, [r4, #40]	; 0x28
   130d0:	ldr	r4, [pc, #124]	; 13154 <abort@plt+0x2434>
   130d4:	mov	r2, sl
   130d8:	mov	r1, r9
   130dc:	str	r0, [fp, #4]
   130e0:	str	r4, [sp, #8]
   130e4:	ldr	r4, [sp, #28]
   130e8:	str	r3, [sp]
   130ec:	str	r4, [sp, #4]
   130f0:	str	ip, [sp, #16]
   130f4:	str	lr, [sp, #12]
   130f8:	mvn	r3, #0
   130fc:	mov	r7, r0
   13100:	bl	11684 <abort@plt+0x964>
   13104:	ldr	r3, [sp, #24]
   13108:	mov	r0, r7
   1310c:	str	r3, [r8]
   13110:	add	sp, sp, #44	; 0x2c
   13114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13118:	mov	r3, #8
   1311c:	sub	r2, r5, r2
   13120:	str	r3, [sp]
   13124:	add	r1, sp, #36	; 0x24
   13128:	add	r2, r2, #1
   1312c:	mvn	r3, #-2147483648	; 0x80000000
   13130:	bl	1617c <abort@plt+0x545c>
   13134:	mov	r6, r0
   13138:	ldm	r7, {r0, r1}
   1313c:	str	r6, [r4]
   13140:	stm	r6, {r0, r1}
   13144:	b	13020 <abort@plt+0x2300>
   13148:	bl	10d20 <abort@plt>
   1314c:	ldrdeq	r8, [r2], -r0
   13150:	andeq	r8, r2, ip, lsr r1
   13154:	andeq	r8, r2, r4, asr #2
   13158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1315c:	sub	sp, sp, #52	; 0x34
   13160:	mov	r5, r0
   13164:	mov	sl, r1
   13168:	mov	fp, r2
   1316c:	bl	10c84 <__errno_location@plt>
   13170:	ldr	r4, [pc, #408]	; 13310 <abort@plt+0x25f0>
   13174:	cmn	r5, #-2147483647	; 0x80000001
   13178:	ldr	r6, [r4]
   1317c:	mov	r8, r0
   13180:	movne	r0, #0
   13184:	moveq	r0, #1
   13188:	ldr	r3, [r8]
   1318c:	orrs	r0, r0, r5, lsr #31
   13190:	str	r3, [sp, #28]
   13194:	bne	1330c <abort@plt+0x25ec>
   13198:	ldr	r2, [r4, #4]
   1319c:	cmp	r5, r2
   131a0:	blt	13200 <abort@plt+0x24e0>
   131a4:	add	r7, r4, #8
   131a8:	cmp	r6, r7
   131ac:	str	r2, [sp, #44]	; 0x2c
   131b0:	beq	132dc <abort@plt+0x25bc>
   131b4:	mov	r3, #8
   131b8:	sub	r2, r5, r2
   131bc:	mov	r0, r6
   131c0:	str	r3, [sp]
   131c4:	add	r2, r2, #1
   131c8:	mvn	r3, #-2147483648	; 0x80000000
   131cc:	add	r1, sp, #44	; 0x2c
   131d0:	bl	1617c <abort@plt+0x545c>
   131d4:	mov	r6, r0
   131d8:	str	r0, [r4]
   131dc:	ldr	r0, [r4, #4]
   131e0:	ldr	r2, [sp, #44]	; 0x2c
   131e4:	mov	r1, #0
   131e8:	sub	r2, r2, r0
   131ec:	add	r0, r6, r0, lsl #3
   131f0:	lsl	r2, r2, #3
   131f4:	bl	10c9c <memset@plt>
   131f8:	ldr	r3, [sp, #44]	; 0x2c
   131fc:	str	r3, [r4, #4]
   13200:	ldr	r4, [pc, #268]	; 13314 <abort@plt+0x25f4>
   13204:	add	r3, r6, r5, lsl #3
   13208:	str	r3, [sp, #32]
   1320c:	ldr	r7, [r3, #4]
   13210:	ldr	r0, [r4, #4]
   13214:	ldr	r3, [r4]
   13218:	ldr	r9, [r6, r5, lsl #3]
   1321c:	ldr	r1, [r4, #44]	; 0x2c
   13220:	ldr	r2, [r4, #40]	; 0x28
   13224:	orr	r0, r0, #1
   13228:	str	r3, [sp]
   1322c:	add	r3, r4, #8
   13230:	str	r0, [sp, #36]	; 0x24
   13234:	str	r0, [sp, #4]
   13238:	str	r1, [sp, #16]
   1323c:	str	r2, [sp, #12]
   13240:	str	r3, [sp, #8]
   13244:	mov	r0, r7
   13248:	mov	r1, r9
   1324c:	mov	r3, fp
   13250:	mov	r2, sl
   13254:	bl	11684 <abort@plt+0x964>
   13258:	cmp	r9, r0
   1325c:	bhi	132c8 <abort@plt+0x25a8>
   13260:	add	r3, r4, #48	; 0x30
   13264:	add	r9, r0, #1
   13268:	cmp	r7, r3
   1326c:	str	r9, [r6, r5, lsl #3]
   13270:	beq	1327c <abort@plt+0x255c>
   13274:	mov	r0, r7
   13278:	bl	1680c <abort@plt+0x5aec>
   1327c:	mov	r0, r9
   13280:	bl	15f60 <abort@plt+0x5240>
   13284:	ldr	ip, [sp, #32]
   13288:	ldr	lr, [r4, #44]	; 0x2c
   1328c:	ldr	r5, [r4, #40]	; 0x28
   13290:	mov	r3, fp
   13294:	mov	r2, sl
   13298:	mov	r1, r9
   1329c:	str	r0, [ip, #4]
   132a0:	ldr	ip, [r4]
   132a4:	ldr	r4, [pc, #108]	; 13318 <abort@plt+0x25f8>
   132a8:	str	lr, [sp, #16]
   132ac:	str	r4, [sp, #8]
   132b0:	ldr	r4, [sp, #36]	; 0x24
   132b4:	str	r5, [sp, #12]
   132b8:	str	r4, [sp, #4]
   132bc:	str	ip, [sp]
   132c0:	mov	r7, r0
   132c4:	bl	11684 <abort@plt+0x964>
   132c8:	ldr	r3, [sp, #28]
   132cc:	mov	r0, r7
   132d0:	str	r3, [r8]
   132d4:	add	sp, sp, #52	; 0x34
   132d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132dc:	mov	r3, #8
   132e0:	sub	r2, r5, r2
   132e4:	str	r3, [sp]
   132e8:	add	r1, sp, #44	; 0x2c
   132ec:	add	r2, r2, #1
   132f0:	mvn	r3, #-2147483648	; 0x80000000
   132f4:	bl	1617c <abort@plt+0x545c>
   132f8:	mov	r6, r0
   132fc:	ldm	r7, {r0, r1}
   13300:	str	r6, [r4]
   13304:	stm	r6, {r0, r1}
   13308:	b	131dc <abort@plt+0x24bc>
   1330c:	bl	10d20 <abort@plt>
   13310:	ldrdeq	r8, [r2], -r0
   13314:	andeq	r8, r2, ip, lsr r1
   13318:	andeq	r8, r2, r4, asr #2
   1331c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13320:	sub	sp, sp, #44	; 0x2c
   13324:	mov	sl, r0
   13328:	bl	10c84 <__errno_location@plt>
   1332c:	ldr	r4, [pc, #352]	; 13494 <abort@plt+0x2774>
   13330:	ldr	r2, [r4, #4]
   13334:	ldr	r5, [r4]
   13338:	cmp	r2, #0
   1333c:	ldr	r3, [r0]
   13340:	mov	r8, r0
   13344:	str	r3, [sp, #28]
   13348:	bgt	133a4 <abort@plt+0x2684>
   1334c:	add	r6, r4, #8
   13350:	cmp	r5, r6
   13354:	str	r2, [sp, #36]	; 0x24
   13358:	beq	13464 <abort@plt+0x2744>
   1335c:	mov	r3, #8
   13360:	mov	r0, r5
   13364:	str	r3, [sp]
   13368:	rsb	r2, r2, #1
   1336c:	mvn	r3, #-2147483648	; 0x80000000
   13370:	add	r1, sp, #36	; 0x24
   13374:	bl	1617c <abort@plt+0x545c>
   13378:	mov	r5, r0
   1337c:	str	r0, [r4]
   13380:	ldr	r0, [r4, #4]
   13384:	ldr	r2, [sp, #36]	; 0x24
   13388:	mov	r1, #0
   1338c:	sub	r2, r2, r0
   13390:	add	r0, r5, r0, lsl #3
   13394:	lsl	r2, r2, #3
   13398:	bl	10c9c <memset@plt>
   1339c:	ldr	r3, [sp, #36]	; 0x24
   133a0:	str	r3, [r4, #4]
   133a4:	ldr	r4, [pc, #236]	; 13498 <abort@plt+0x2778>
   133a8:	ldr	r9, [r5]
   133ac:	ldr	r6, [r5, #4]
   133b0:	ldr	r7, [r4, #4]
   133b4:	ldr	r1, [r4, #44]	; 0x2c
   133b8:	ldr	r2, [r4, #40]	; 0x28
   133bc:	ldr	r3, [r4]
   133c0:	orr	r7, r7, #1
   133c4:	add	fp, r4, #8
   133c8:	str	r1, [sp, #16]
   133cc:	str	r2, [sp, #12]
   133d0:	str	r3, [sp]
   133d4:	str	r7, [sp, #4]
   133d8:	str	fp, [sp, #8]
   133dc:	mov	r1, r9
   133e0:	mov	r0, r6
   133e4:	mvn	r3, #0
   133e8:	mov	r2, sl
   133ec:	bl	11684 <abort@plt+0x964>
   133f0:	cmp	r9, r0
   133f4:	bhi	13450 <abort@plt+0x2730>
   133f8:	add	r3, r4, #48	; 0x30
   133fc:	add	r9, r0, #1
   13400:	cmp	r6, r3
   13404:	str	r9, [r5]
   13408:	beq	13414 <abort@plt+0x26f4>
   1340c:	mov	r0, r6
   13410:	bl	1680c <abort@plt+0x5aec>
   13414:	mov	r0, r9
   13418:	bl	15f60 <abort@plt+0x5240>
   1341c:	ldr	ip, [r4, #44]	; 0x2c
   13420:	ldr	r3, [r4]
   13424:	ldr	lr, [r4, #40]	; 0x28
   13428:	mov	r2, sl
   1342c:	mov	r1, r9
   13430:	str	r0, [r5, #4]
   13434:	str	r3, [sp]
   13438:	stmib	sp, {r7, fp}
   1343c:	str	ip, [sp, #16]
   13440:	str	lr, [sp, #12]
   13444:	mvn	r3, #0
   13448:	mov	r6, r0
   1344c:	bl	11684 <abort@plt+0x964>
   13450:	ldr	r3, [sp, #28]
   13454:	mov	r0, r6
   13458:	str	r3, [r8]
   1345c:	add	sp, sp, #44	; 0x2c
   13460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13464:	mov	r3, #8
   13468:	str	r3, [sp]
   1346c:	add	r1, sp, #36	; 0x24
   13470:	rsb	r2, r2, #1
   13474:	mvn	r3, #-2147483648	; 0x80000000
   13478:	mov	r0, #0
   1347c:	bl	1617c <abort@plt+0x545c>
   13480:	mov	r5, r0
   13484:	ldm	r6, {r0, r1}
   13488:	str	r5, [r4]
   1348c:	stm	r5, {r0, r1}
   13490:	b	13380 <abort@plt+0x2660>
   13494:	ldrdeq	r8, [r2], -r0
   13498:	andeq	r8, r2, ip, lsr r1
   1349c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a0:	sub	sp, sp, #44	; 0x2c
   134a4:	mov	r9, r0
   134a8:	mov	sl, r1
   134ac:	bl	10c84 <__errno_location@plt>
   134b0:	ldr	r4, [pc, #364]	; 13624 <abort@plt+0x2904>
   134b4:	ldr	r2, [r4, #4]
   134b8:	ldr	r5, [r4]
   134bc:	cmp	r2, #0
   134c0:	ldr	r3, [r0]
   134c4:	mov	r7, r0
   134c8:	str	r3, [sp, #24]
   134cc:	bgt	13528 <abort@plt+0x2808>
   134d0:	add	r6, r4, #8
   134d4:	cmp	r5, r6
   134d8:	str	r2, [sp, #36]	; 0x24
   134dc:	beq	135f4 <abort@plt+0x28d4>
   134e0:	mov	r3, #8
   134e4:	mov	r0, r5
   134e8:	str	r3, [sp]
   134ec:	rsb	r2, r2, #1
   134f0:	mvn	r3, #-2147483648	; 0x80000000
   134f4:	add	r1, sp, #36	; 0x24
   134f8:	bl	1617c <abort@plt+0x545c>
   134fc:	mov	r5, r0
   13500:	str	r0, [r4]
   13504:	ldr	r0, [r4, #4]
   13508:	ldr	r2, [sp, #36]	; 0x24
   1350c:	mov	r1, #0
   13510:	sub	r2, r2, r0
   13514:	add	r0, r5, r0, lsl #3
   13518:	lsl	r2, r2, #3
   1351c:	bl	10c9c <memset@plt>
   13520:	ldr	r3, [sp, #36]	; 0x24
   13524:	str	r3, [r4, #4]
   13528:	ldr	r4, [pc, #248]	; 13628 <abort@plt+0x2908>
   1352c:	ldr	r8, [r5]
   13530:	ldr	r6, [r5, #4]
   13534:	ldr	r0, [r4, #4]
   13538:	ldr	r1, [r4, #44]	; 0x2c
   1353c:	ldr	r2, [r4, #40]	; 0x28
   13540:	ldr	r3, [r4]
   13544:	orr	r0, r0, #1
   13548:	add	fp, r4, #8
   1354c:	str	r0, [sp, #28]
   13550:	str	r0, [sp, #4]
   13554:	str	r1, [sp, #16]
   13558:	str	r2, [sp, #12]
   1355c:	str	r3, [sp]
   13560:	str	fp, [sp, #8]
   13564:	mov	r1, r8
   13568:	mov	r0, r6
   1356c:	mov	r3, sl
   13570:	mov	r2, r9
   13574:	bl	11684 <abort@plt+0x964>
   13578:	cmp	r8, r0
   1357c:	bhi	135e0 <abort@plt+0x28c0>
   13580:	add	r3, r4, #48	; 0x30
   13584:	add	r8, r0, #1
   13588:	cmp	r6, r3
   1358c:	str	r8, [r5]
   13590:	beq	1359c <abort@plt+0x287c>
   13594:	mov	r0, r6
   13598:	bl	1680c <abort@plt+0x5aec>
   1359c:	mov	r0, r8
   135a0:	bl	15f60 <abort@plt+0x5240>
   135a4:	ldr	lr, [r4, #44]	; 0x2c
   135a8:	ldr	ip, [r4]
   135ac:	mov	r3, sl
   135b0:	mov	r2, r9
   135b4:	mov	r1, r8
   135b8:	str	r0, [r5, #4]
   135bc:	ldr	r5, [r4, #40]	; 0x28
   135c0:	ldr	r4, [sp, #28]
   135c4:	str	fp, [sp, #8]
   135c8:	str	r4, [sp, #4]
   135cc:	str	lr, [sp, #16]
   135d0:	str	r5, [sp, #12]
   135d4:	str	ip, [sp]
   135d8:	mov	r6, r0
   135dc:	bl	11684 <abort@plt+0x964>
   135e0:	ldr	r3, [sp, #24]
   135e4:	mov	r0, r6
   135e8:	str	r3, [r7]
   135ec:	add	sp, sp, #44	; 0x2c
   135f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135f4:	mov	r3, #8
   135f8:	str	r3, [sp]
   135fc:	add	r1, sp, #36	; 0x24
   13600:	rsb	r2, r2, #1
   13604:	mvn	r3, #-2147483648	; 0x80000000
   13608:	mov	r0, #0
   1360c:	bl	1617c <abort@plt+0x545c>
   13610:	mov	r5, r0
   13614:	ldm	r6, {r0, r1}
   13618:	str	r5, [r4]
   1361c:	stm	r5, {r0, r1}
   13620:	b	13504 <abort@plt+0x27e4>
   13624:	ldrdeq	r8, [r2], -r0
   13628:	andeq	r8, r2, ip, lsr r1
   1362c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13630:	sub	sp, sp, #132	; 0x84
   13634:	mov	r5, r1
   13638:	mov	r4, r0
   1363c:	mov	r9, r2
   13640:	add	r0, sp, #80	; 0x50
   13644:	mov	r2, #48	; 0x30
   13648:	mov	r1, #0
   1364c:	bl	10c9c <memset@plt>
   13650:	cmp	r5, #10
   13654:	beq	1380c <abort@plt+0x2aec>
   13658:	add	lr, sp, #80	; 0x50
   1365c:	str	r5, [sp, #80]	; 0x50
   13660:	ldm	lr!, {r0, r1, r2, r3}
   13664:	add	ip, sp, #32
   13668:	ldr	r6, [pc, #416]	; 13810 <abort@plt+0x2af0>
   1366c:	stmia	ip!, {r0, r1, r2, r3}
   13670:	ldm	lr!, {r0, r1, r2, r3}
   13674:	stmia	ip!, {r0, r1, r2, r3}
   13678:	ldm	lr, {r0, r1, r2, r3}
   1367c:	stm	ip, {r0, r1, r2, r3}
   13680:	bl	10c84 <__errno_location@plt>
   13684:	cmn	r4, #-2147483647	; 0x80000001
   13688:	ldr	r5, [r6]
   1368c:	mov	r7, r0
   13690:	movne	r0, #0
   13694:	moveq	r0, #1
   13698:	ldr	r3, [r7]
   1369c:	orrs	r0, r0, r4, lsr #31
   136a0:	str	r3, [sp, #24]
   136a4:	bne	1380c <abort@plt+0x2aec>
   136a8:	ldr	r2, [r6, #4]
   136ac:	cmp	r4, r2
   136b0:	blt	13710 <abort@plt+0x29f0>
   136b4:	add	r8, r6, #8
   136b8:	cmp	r5, r8
   136bc:	str	r2, [sp, #80]	; 0x50
   136c0:	beq	137dc <abort@plt+0x2abc>
   136c4:	mov	r3, #8
   136c8:	sub	r2, r4, r2
   136cc:	mov	r0, r5
   136d0:	str	r3, [sp]
   136d4:	add	r2, r2, #1
   136d8:	add	r1, sp, #80	; 0x50
   136dc:	mvn	r3, #-2147483648	; 0x80000000
   136e0:	bl	1617c <abort@plt+0x545c>
   136e4:	mov	r5, r0
   136e8:	str	r0, [r6]
   136ec:	ldr	r0, [r6, #4]
   136f0:	ldr	r2, [sp, #80]	; 0x50
   136f4:	mov	r1, #0
   136f8:	sub	r2, r2, r0
   136fc:	add	r0, r5, r0, lsl #3
   13700:	lsl	r2, r2, #3
   13704:	bl	10c9c <memset@plt>
   13708:	ldr	r3, [sp, #80]	; 0x50
   1370c:	str	r3, [r6, #4]
   13710:	add	fp, r5, r4, lsl #3
   13714:	ldr	r1, [sp, #36]	; 0x24
   13718:	ldr	r8, [r5, r4, lsl #3]
   1371c:	ldr	r6, [fp, #4]
   13720:	ldr	r2, [sp, #72]	; 0x48
   13724:	ldr	r3, [sp, #32]
   13728:	ldr	ip, [sp, #76]	; 0x4c
   1372c:	orr	r1, r1, #1
   13730:	add	sl, sp, #40	; 0x28
   13734:	str	r1, [sp, #28]
   13738:	str	r1, [sp, #4]
   1373c:	str	r2, [sp, #12]
   13740:	str	r3, [sp]
   13744:	mov	r0, r6
   13748:	mov	r1, r8
   1374c:	str	ip, [sp, #16]
   13750:	str	sl, [sp, #8]
   13754:	mvn	r3, #0
   13758:	mov	r2, r9
   1375c:	bl	11684 <abort@plt+0x964>
   13760:	cmp	r8, r0
   13764:	bhi	137c8 <abort@plt+0x2aa8>
   13768:	ldr	r3, [pc, #164]	; 13814 <abort@plt+0x2af4>
   1376c:	add	r8, r0, #1
   13770:	cmp	r6, r3
   13774:	str	r8, [r5, r4, lsl #3]
   13778:	beq	13784 <abort@plt+0x2a64>
   1377c:	mov	r0, r6
   13780:	bl	1680c <abort@plt+0x5aec>
   13784:	mov	r0, r8
   13788:	bl	15f60 <abort@plt+0x5240>
   1378c:	ldr	lr, [sp, #76]	; 0x4c
   13790:	ldr	r3, [sp, #32]
   13794:	ldr	ip, [sp, #72]	; 0x48
   13798:	ldr	r4, [sp, #28]
   1379c:	mov	r2, r9
   137a0:	mov	r1, r8
   137a4:	str	r0, [fp, #4]
   137a8:	str	r3, [sp]
   137ac:	str	sl, [sp, #8]
   137b0:	str	r4, [sp, #4]
   137b4:	str	lr, [sp, #16]
   137b8:	str	ip, [sp, #12]
   137bc:	mvn	r3, #0
   137c0:	mov	r6, r0
   137c4:	bl	11684 <abort@plt+0x964>
   137c8:	ldr	r3, [sp, #24]
   137cc:	mov	r0, r6
   137d0:	str	r3, [r7]
   137d4:	add	sp, sp, #132	; 0x84
   137d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137dc:	mov	r3, #8
   137e0:	sub	r2, r4, r2
   137e4:	add	r1, sp, #80	; 0x50
   137e8:	str	r3, [sp]
   137ec:	add	r2, r2, #1
   137f0:	mvn	r3, #-2147483648	; 0x80000000
   137f4:	bl	1617c <abort@plt+0x545c>
   137f8:	mov	r5, r0
   137fc:	ldm	r8, {r0, r1}
   13800:	str	r5, [r6]
   13804:	stm	r5, {r0, r1}
   13808:	b	136ec <abort@plt+0x29cc>
   1380c:	bl	10d20 <abort@plt>
   13810:	ldrdeq	r8, [r2], -r0
   13814:	andeq	r8, r2, ip, ror #2
   13818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1381c:	sub	sp, sp, #132	; 0x84
   13820:	mov	r5, r1
   13824:	mov	r4, r0
   13828:	mov	r9, r2
   1382c:	add	r0, sp, #80	; 0x50
   13830:	mov	r2, #48	; 0x30
   13834:	mov	r1, #0
   13838:	mov	sl, r3
   1383c:	bl	10c9c <memset@plt>
   13840:	cmp	r5, #10
   13844:	beq	13a00 <abort@plt+0x2ce0>
   13848:	add	lr, sp, #80	; 0x50
   1384c:	str	r5, [sp, #80]	; 0x50
   13850:	ldm	lr!, {r0, r1, r2, r3}
   13854:	add	ip, sp, #32
   13858:	ldr	r6, [pc, #420]	; 13a04 <abort@plt+0x2ce4>
   1385c:	stmia	ip!, {r0, r1, r2, r3}
   13860:	ldm	lr!, {r0, r1, r2, r3}
   13864:	stmia	ip!, {r0, r1, r2, r3}
   13868:	ldm	lr, {r0, r1, r2, r3}
   1386c:	stm	ip, {r0, r1, r2, r3}
   13870:	bl	10c84 <__errno_location@plt>
   13874:	cmn	r4, #-2147483647	; 0x80000001
   13878:	ldr	r5, [r6]
   1387c:	mov	r7, r0
   13880:	movne	r0, #0
   13884:	moveq	r0, #1
   13888:	ldr	r3, [r7]
   1388c:	orrs	r0, r0, r4, lsr #31
   13890:	str	r3, [sp, #24]
   13894:	bne	13a00 <abort@plt+0x2ce0>
   13898:	ldr	r2, [r6, #4]
   1389c:	cmp	r4, r2
   138a0:	blt	13900 <abort@plt+0x2be0>
   138a4:	add	r8, r6, #8
   138a8:	cmp	r5, r8
   138ac:	str	r2, [sp, #80]	; 0x50
   138b0:	beq	139d0 <abort@plt+0x2cb0>
   138b4:	mov	r3, #8
   138b8:	sub	r2, r4, r2
   138bc:	mov	r0, r5
   138c0:	str	r3, [sp]
   138c4:	add	r2, r2, #1
   138c8:	add	r1, sp, #80	; 0x50
   138cc:	mvn	r3, #-2147483648	; 0x80000000
   138d0:	bl	1617c <abort@plt+0x545c>
   138d4:	mov	r5, r0
   138d8:	str	r0, [r6]
   138dc:	ldr	r0, [r6, #4]
   138e0:	ldr	r2, [sp, #80]	; 0x50
   138e4:	mov	r1, #0
   138e8:	sub	r2, r2, r0
   138ec:	add	r0, r5, r0, lsl #3
   138f0:	lsl	r2, r2, #3
   138f4:	bl	10c9c <memset@plt>
   138f8:	ldr	r3, [sp, #80]	; 0x50
   138fc:	str	r3, [r6, #4]
   13900:	add	fp, r5, r4, lsl #3
   13904:	ldr	r3, [sp, #32]
   13908:	ldr	r1, [sp, #36]	; 0x24
   1390c:	ldr	r8, [r5, r4, lsl #3]
   13910:	ldr	r6, [fp, #4]
   13914:	ldr	r2, [sp, #72]	; 0x48
   13918:	ldr	ip, [sp, #76]	; 0x4c
   1391c:	orr	r1, r1, #1
   13920:	str	r3, [sp]
   13924:	add	r3, sp, #40	; 0x28
   13928:	str	r1, [sp, #28]
   1392c:	str	r1, [sp, #4]
   13930:	str	r2, [sp, #12]
   13934:	str	r3, [sp, #8]
   13938:	mov	r0, r6
   1393c:	mov	r1, r8
   13940:	str	ip, [sp, #16]
   13944:	mov	r3, sl
   13948:	mov	r2, r9
   1394c:	bl	11684 <abort@plt+0x964>
   13950:	cmp	r8, r0
   13954:	bhi	139bc <abort@plt+0x2c9c>
   13958:	ldr	r3, [pc, #168]	; 13a08 <abort@plt+0x2ce8>
   1395c:	add	r8, r0, #1
   13960:	cmp	r6, r3
   13964:	str	r8, [r5, r4, lsl #3]
   13968:	beq	13974 <abort@plt+0x2c54>
   1396c:	mov	r0, r6
   13970:	bl	1680c <abort@plt+0x5aec>
   13974:	mov	r0, r8
   13978:	bl	15f60 <abort@plt+0x5240>
   1397c:	add	lr, sp, #40	; 0x28
   13980:	ldr	ip, [sp, #76]	; 0x4c
   13984:	ldr	r4, [sp, #72]	; 0x48
   13988:	ldr	r5, [sp, #28]
   1398c:	mov	r3, sl
   13990:	mov	r2, r9
   13994:	mov	r1, r8
   13998:	str	r0, [fp, #4]
   1399c:	str	lr, [sp, #8]
   139a0:	ldr	lr, [sp, #32]
   139a4:	str	r5, [sp, #4]
   139a8:	str	ip, [sp, #16]
   139ac:	str	r4, [sp, #12]
   139b0:	str	lr, [sp]
   139b4:	mov	r6, r0
   139b8:	bl	11684 <abort@plt+0x964>
   139bc:	ldr	r3, [sp, #24]
   139c0:	mov	r0, r6
   139c4:	str	r3, [r7]
   139c8:	add	sp, sp, #132	; 0x84
   139cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139d0:	mov	r3, #8
   139d4:	sub	r2, r4, r2
   139d8:	add	r1, sp, #80	; 0x50
   139dc:	str	r3, [sp]
   139e0:	add	r2, r2, #1
   139e4:	mvn	r3, #-2147483648	; 0x80000000
   139e8:	bl	1617c <abort@plt+0x545c>
   139ec:	mov	r5, r0
   139f0:	ldm	r8, {r0, r1}
   139f4:	str	r5, [r6]
   139f8:	stm	r5, {r0, r1}
   139fc:	b	138dc <abort@plt+0x2bbc>
   13a00:	bl	10d20 <abort@plt>
   13a04:	ldrdeq	r8, [r2], -r0
   13a08:	andeq	r8, r2, ip, ror #2
   13a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a10:	sub	sp, sp, #124	; 0x7c
   13a14:	mov	r4, r0
   13a18:	mov	r9, r1
   13a1c:	add	r0, sp, #72	; 0x48
   13a20:	mov	r2, #48	; 0x30
   13a24:	mov	r1, #0
   13a28:	bl	10c9c <memset@plt>
   13a2c:	cmp	r4, #10
   13a30:	beq	13bbc <abort@plt+0x2e9c>
   13a34:	add	lr, sp, #72	; 0x48
   13a38:	str	r4, [sp, #72]	; 0x48
   13a3c:	ldm	lr!, {r0, r1, r2, r3}
   13a40:	add	ip, sp, #24
   13a44:	ldr	r5, [pc, #372]	; 13bc0 <abort@plt+0x2ea0>
   13a48:	stmia	ip!, {r0, r1, r2, r3}
   13a4c:	ldm	lr!, {r0, r1, r2, r3}
   13a50:	stmia	ip!, {r0, r1, r2, r3}
   13a54:	ldm	lr, {r0, r1, r2, r3}
   13a58:	stm	ip, {r0, r1, r2, r3}
   13a5c:	bl	10c84 <__errno_location@plt>
   13a60:	ldr	r2, [r5, #4]
   13a64:	ldr	r4, [r5]
   13a68:	cmp	r2, #0
   13a6c:	mov	r7, r0
   13a70:	ldr	fp, [r0]
   13a74:	bgt	13ad0 <abort@plt+0x2db0>
   13a78:	add	r6, r5, #8
   13a7c:	cmp	r4, r6
   13a80:	str	r2, [sp, #72]	; 0x48
   13a84:	beq	13b8c <abort@plt+0x2e6c>
   13a88:	mov	r3, #8
   13a8c:	mov	r0, r4
   13a90:	str	r3, [sp]
   13a94:	rsb	r2, r2, #1
   13a98:	add	r1, sp, #72	; 0x48
   13a9c:	mvn	r3, #-2147483648	; 0x80000000
   13aa0:	bl	1617c <abort@plt+0x545c>
   13aa4:	mov	r4, r0
   13aa8:	str	r0, [r5]
   13aac:	ldr	r0, [r5, #4]
   13ab0:	ldr	r2, [sp, #72]	; 0x48
   13ab4:	mov	r1, #0
   13ab8:	sub	r2, r2, r0
   13abc:	add	r0, r4, r0, lsl #3
   13ac0:	lsl	r2, r2, #3
   13ac4:	bl	10c9c <memset@plt>
   13ac8:	ldr	r3, [sp, #72]	; 0x48
   13acc:	str	r3, [r5, #4]
   13ad0:	ldr	r6, [sp, #28]
   13ad4:	ldr	r8, [r4]
   13ad8:	ldr	r5, [r4, #4]
   13adc:	ldr	r2, [sp, #64]	; 0x40
   13ae0:	ldr	r3, [sp, #24]
   13ae4:	ldr	ip, [sp, #68]	; 0x44
   13ae8:	orr	r6, r6, #1
   13aec:	add	sl, sp, #32
   13af0:	str	r2, [sp, #12]
   13af4:	str	r3, [sp]
   13af8:	str	r6, [sp, #4]
   13afc:	mov	r1, r8
   13b00:	mov	r0, r5
   13b04:	str	ip, [sp, #16]
   13b08:	str	sl, [sp, #8]
   13b0c:	mvn	r3, #0
   13b10:	mov	r2, r9
   13b14:	bl	11684 <abort@plt+0x964>
   13b18:	cmp	r8, r0
   13b1c:	bhi	13b7c <abort@plt+0x2e5c>
   13b20:	ldr	r3, [pc, #156]	; 13bc4 <abort@plt+0x2ea4>
   13b24:	add	r8, r0, #1
   13b28:	cmp	r5, r3
   13b2c:	str	r8, [r4]
   13b30:	beq	13b3c <abort@plt+0x2e1c>
   13b34:	mov	r0, r5
   13b38:	bl	1680c <abort@plt+0x5aec>
   13b3c:	mov	r0, r8
   13b40:	bl	15f60 <abort@plt+0x5240>
   13b44:	ldr	lr, [sp, #68]	; 0x44
   13b48:	ldr	r3, [sp, #24]
   13b4c:	ldr	ip, [sp, #64]	; 0x40
   13b50:	mov	r2, r9
   13b54:	mov	r1, r8
   13b58:	str	r0, [r4, #4]
   13b5c:	str	r3, [sp]
   13b60:	str	sl, [sp, #8]
   13b64:	str	r6, [sp, #4]
   13b68:	str	lr, [sp, #16]
   13b6c:	str	ip, [sp, #12]
   13b70:	mvn	r3, #0
   13b74:	mov	r5, r0
   13b78:	bl	11684 <abort@plt+0x964>
   13b7c:	mov	r0, r5
   13b80:	str	fp, [r7]
   13b84:	add	sp, sp, #124	; 0x7c
   13b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b8c:	mov	r3, #8
   13b90:	add	r1, sp, #72	; 0x48
   13b94:	str	r3, [sp]
   13b98:	rsb	r2, r2, #1
   13b9c:	mvn	r3, #-2147483648	; 0x80000000
   13ba0:	mov	r0, #0
   13ba4:	bl	1617c <abort@plt+0x545c>
   13ba8:	mov	r4, r0
   13bac:	ldm	r6, {r0, r1}
   13bb0:	str	r4, [r5]
   13bb4:	stm	r4, {r0, r1}
   13bb8:	b	13aac <abort@plt+0x2d8c>
   13bbc:	bl	10d20 <abort@plt>
   13bc0:	ldrdeq	r8, [r2], -r0
   13bc4:	andeq	r8, r2, ip, ror #2
   13bc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bcc:	sub	sp, sp, #132	; 0x84
   13bd0:	mov	r4, r0
   13bd4:	mov	r9, r1
   13bd8:	mov	sl, r2
   13bdc:	add	r0, sp, #80	; 0x50
   13be0:	mov	r2, #48	; 0x30
   13be4:	mov	r1, #0
   13be8:	bl	10c9c <memset@plt>
   13bec:	cmp	r4, #10
   13bf0:	beq	13d84 <abort@plt+0x3064>
   13bf4:	add	lr, sp, #80	; 0x50
   13bf8:	str	r4, [sp, #80]	; 0x50
   13bfc:	ldm	lr!, {r0, r1, r2, r3}
   13c00:	add	ip, sp, #32
   13c04:	ldr	r5, [pc, #380]	; 13d88 <abort@plt+0x3068>
   13c08:	stmia	ip!, {r0, r1, r2, r3}
   13c0c:	ldm	lr!, {r0, r1, r2, r3}
   13c10:	stmia	ip!, {r0, r1, r2, r3}
   13c14:	ldm	lr, {r0, r1, r2, r3}
   13c18:	stm	ip, {r0, r1, r2, r3}
   13c1c:	bl	10c84 <__errno_location@plt>
   13c20:	ldr	r2, [r5, #4]
   13c24:	ldr	r4, [r5]
   13c28:	cmp	r2, #0
   13c2c:	ldr	r3, [r0]
   13c30:	mov	r7, r0
   13c34:	str	r3, [sp, #28]
   13c38:	bgt	13c94 <abort@plt+0x2f74>
   13c3c:	add	r6, r5, #8
   13c40:	cmp	r4, r6
   13c44:	str	r2, [sp, #80]	; 0x50
   13c48:	beq	13d54 <abort@plt+0x3034>
   13c4c:	mov	r3, #8
   13c50:	mov	r0, r4
   13c54:	str	r3, [sp]
   13c58:	rsb	r2, r2, #1
   13c5c:	add	r1, sp, #80	; 0x50
   13c60:	mvn	r3, #-2147483648	; 0x80000000
   13c64:	bl	1617c <abort@plt+0x545c>
   13c68:	mov	r4, r0
   13c6c:	str	r0, [r5]
   13c70:	ldr	r0, [r5, #4]
   13c74:	ldr	r2, [sp, #80]	; 0x50
   13c78:	mov	r1, #0
   13c7c:	sub	r2, r2, r0
   13c80:	add	r0, r4, r0, lsl #3
   13c84:	lsl	r2, r2, #3
   13c88:	bl	10c9c <memset@plt>
   13c8c:	ldr	r3, [sp, #80]	; 0x50
   13c90:	str	r3, [r5, #4]
   13c94:	ldr	r6, [sp, #36]	; 0x24
   13c98:	ldr	r8, [r4]
   13c9c:	ldr	r5, [r4, #4]
   13ca0:	ldr	r2, [sp, #72]	; 0x48
   13ca4:	ldr	r3, [sp, #32]
   13ca8:	ldr	ip, [sp, #76]	; 0x4c
   13cac:	orr	r6, r6, #1
   13cb0:	add	fp, sp, #40	; 0x28
   13cb4:	str	r2, [sp, #12]
   13cb8:	str	r3, [sp]
   13cbc:	str	r6, [sp, #4]
   13cc0:	mov	r1, r8
   13cc4:	mov	r0, r5
   13cc8:	str	ip, [sp, #16]
   13ccc:	str	fp, [sp, #8]
   13cd0:	mov	r3, sl
   13cd4:	mov	r2, r9
   13cd8:	bl	11684 <abort@plt+0x964>
   13cdc:	cmp	r8, r0
   13ce0:	bhi	13d40 <abort@plt+0x3020>
   13ce4:	ldr	r3, [pc, #160]	; 13d8c <abort@plt+0x306c>
   13ce8:	add	r8, r0, #1
   13cec:	cmp	r5, r3
   13cf0:	str	r8, [r4]
   13cf4:	beq	13d00 <abort@plt+0x2fe0>
   13cf8:	mov	r0, r5
   13cfc:	bl	1680c <abort@plt+0x5aec>
   13d00:	mov	r0, r8
   13d04:	bl	15f60 <abort@plt+0x5240>
   13d08:	ldr	ip, [sp, #76]	; 0x4c
   13d0c:	ldr	lr, [sp, #32]
   13d10:	mov	r3, sl
   13d14:	mov	r2, r9
   13d18:	mov	r1, r8
   13d1c:	str	r0, [r4, #4]
   13d20:	ldr	r4, [sp, #72]	; 0x48
   13d24:	str	fp, [sp, #8]
   13d28:	str	r6, [sp, #4]
   13d2c:	str	ip, [sp, #16]
   13d30:	str	r4, [sp, #12]
   13d34:	str	lr, [sp]
   13d38:	mov	r5, r0
   13d3c:	bl	11684 <abort@plt+0x964>
   13d40:	ldr	r3, [sp, #28]
   13d44:	mov	r0, r5
   13d48:	str	r3, [r7]
   13d4c:	add	sp, sp, #132	; 0x84
   13d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d54:	mov	r3, #8
   13d58:	add	r1, sp, #80	; 0x50
   13d5c:	str	r3, [sp]
   13d60:	rsb	r2, r2, #1
   13d64:	mvn	r3, #-2147483648	; 0x80000000
   13d68:	mov	r0, #0
   13d6c:	bl	1617c <abort@plt+0x545c>
   13d70:	mov	r4, r0
   13d74:	ldm	r6, {r0, r1}
   13d78:	str	r4, [r5]
   13d7c:	stm	r4, {r0, r1}
   13d80:	b	13c70 <abort@plt+0x2f50>
   13d84:	bl	10d20 <abort@plt>
   13d88:	ldrdeq	r8, [r2], -r0
   13d8c:	andeq	r8, r2, ip, ror #2
   13d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d94:	mov	r4, r2
   13d98:	ldr	lr, [pc, #432]	; 13f50 <abort@plt+0x3230>
   13d9c:	mov	sl, r0
   13da0:	mov	fp, r1
   13da4:	ldm	lr!, {r0, r1, r2, r3}
   13da8:	sub	sp, sp, #92	; 0x5c
   13dac:	add	ip, sp, #40	; 0x28
   13db0:	lsr	r7, r4, #5
   13db4:	stmia	ip!, {r0, r1, r2, r3}
   13db8:	add	r6, sp, #48	; 0x30
   13dbc:	ldm	lr!, {r0, r1, r2, r3}
   13dc0:	and	r4, r4, #31
   13dc4:	ldr	r5, [pc, #392]	; 13f54 <abort@plt+0x3234>
   13dc8:	stmia	ip!, {r0, r1, r2, r3}
   13dcc:	ldm	lr, {r0, r1, r2, r3}
   13dd0:	stm	ip, {r0, r1, r2, r3}
   13dd4:	ldr	r2, [r6, r7, lsl #2]
   13dd8:	lsr	r3, r2, r4
   13ddc:	eor	r3, r3, #1
   13de0:	and	r3, r3, #1
   13de4:	eor	r4, r2, r3, lsl r4
   13de8:	str	r4, [r6, r7, lsl #2]
   13dec:	bl	10c84 <__errno_location@plt>
   13df0:	ldr	r2, [r5, #4]
   13df4:	ldr	r4, [r5]
   13df8:	cmp	r2, #0
   13dfc:	ldr	r3, [r0]
   13e00:	mov	r8, r0
   13e04:	str	r3, [sp, #28]
   13e08:	bgt	13e64 <abort@plt+0x3144>
   13e0c:	add	r7, r5, #8
   13e10:	cmp	r4, r7
   13e14:	str	r2, [sp, #36]	; 0x24
   13e18:	beq	13f20 <abort@plt+0x3200>
   13e1c:	mov	r3, #8
   13e20:	mov	r0, r4
   13e24:	str	r3, [sp]
   13e28:	rsb	r2, r2, #1
   13e2c:	mvn	r3, #-2147483648	; 0x80000000
   13e30:	add	r1, sp, #36	; 0x24
   13e34:	bl	1617c <abort@plt+0x545c>
   13e38:	mov	r4, r0
   13e3c:	str	r0, [r5]
   13e40:	ldr	r0, [r5, #4]
   13e44:	ldr	r2, [sp, #36]	; 0x24
   13e48:	mov	r1, #0
   13e4c:	sub	r2, r2, r0
   13e50:	add	r0, r4, r0, lsl #3
   13e54:	lsl	r2, r2, #3
   13e58:	bl	10c9c <memset@plt>
   13e5c:	ldr	r3, [sp, #36]	; 0x24
   13e60:	str	r3, [r5, #4]
   13e64:	ldr	r7, [sp, #44]	; 0x2c
   13e68:	ldr	r9, [r4]
   13e6c:	ldr	r5, [r4, #4]
   13e70:	ldr	r2, [sp, #80]	; 0x50
   13e74:	ldr	r3, [sp, #40]	; 0x28
   13e78:	ldr	ip, [sp, #84]	; 0x54
   13e7c:	orr	r7, r7, #1
   13e80:	str	r2, [sp, #12]
   13e84:	str	r3, [sp]
   13e88:	str	r7, [sp, #4]
   13e8c:	str	r6, [sp, #8]
   13e90:	mov	r1, r9
   13e94:	mov	r0, r5
   13e98:	str	ip, [sp, #16]
   13e9c:	mov	r3, fp
   13ea0:	mov	r2, sl
   13ea4:	bl	11684 <abort@plt+0x964>
   13ea8:	cmp	r9, r0
   13eac:	bhi	13f0c <abort@plt+0x31ec>
   13eb0:	ldr	r3, [pc, #160]	; 13f58 <abort@plt+0x3238>
   13eb4:	add	r9, r0, #1
   13eb8:	cmp	r5, r3
   13ebc:	str	r9, [r4]
   13ec0:	beq	13ecc <abort@plt+0x31ac>
   13ec4:	mov	r0, r5
   13ec8:	bl	1680c <abort@plt+0x5aec>
   13ecc:	mov	r0, r9
   13ed0:	bl	15f60 <abort@plt+0x5240>
   13ed4:	ldr	ip, [sp, #84]	; 0x54
   13ed8:	ldr	lr, [sp, #40]	; 0x28
   13edc:	mov	r3, fp
   13ee0:	mov	r2, sl
   13ee4:	mov	r1, r9
   13ee8:	str	r0, [r4, #4]
   13eec:	ldr	r4, [sp, #80]	; 0x50
   13ef0:	str	r6, [sp, #8]
   13ef4:	str	r7, [sp, #4]
   13ef8:	str	ip, [sp, #16]
   13efc:	str	r4, [sp, #12]
   13f00:	str	lr, [sp]
   13f04:	mov	r5, r0
   13f08:	bl	11684 <abort@plt+0x964>
   13f0c:	ldr	r3, [sp, #28]
   13f10:	mov	r0, r5
   13f14:	str	r3, [r8]
   13f18:	add	sp, sp, #92	; 0x5c
   13f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f20:	mov	r3, #8
   13f24:	str	r3, [sp]
   13f28:	add	r1, sp, #36	; 0x24
   13f2c:	rsb	r2, r2, #1
   13f30:	mvn	r3, #-2147483648	; 0x80000000
   13f34:	mov	r0, #0
   13f38:	bl	1617c <abort@plt+0x545c>
   13f3c:	mov	r4, r0
   13f40:	ldm	r7, {r0, r1}
   13f44:	str	r4, [r5]
   13f48:	stm	r4, {r0, r1}
   13f4c:	b	13e40 <abort@plt+0x3120>
   13f50:	andeq	r8, r2, ip, lsr r1
   13f54:	ldrdeq	r8, [r2], -r0
   13f58:	andeq	r8, r2, ip, ror #2
   13f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f60:	mov	r4, r1
   13f64:	ldr	lr, [pc, #420]	; 14110 <abort@plt+0x33f0>
   13f68:	mov	r6, r0
   13f6c:	sub	sp, sp, #84	; 0x54
   13f70:	ldm	lr!, {r0, r1, r2, r3}
   13f74:	add	ip, sp, #32
   13f78:	lsr	r8, r4, #5
   13f7c:	add	r5, sp, #40	; 0x28
   13f80:	stmia	ip!, {r0, r1, r2, r3}
   13f84:	and	r4, r4, #31
   13f88:	ldm	lr!, {r0, r1, r2, r3}
   13f8c:	ldr	r7, [pc, #384]	; 14114 <abort@plt+0x33f4>
   13f90:	stmia	ip!, {r0, r1, r2, r3}
   13f94:	ldm	lr, {r0, r1, r2, r3}
   13f98:	stm	ip, {r0, r1, r2, r3}
   13f9c:	ldr	r2, [r5, r8, lsl #2]
   13fa0:	lsr	r3, r2, r4
   13fa4:	eor	r3, r3, #1
   13fa8:	and	r3, r3, #1
   13fac:	eor	r4, r2, r3, lsl r4
   13fb0:	str	r4, [r5, r8, lsl #2]
   13fb4:	bl	10c84 <__errno_location@plt>
   13fb8:	ldr	r2, [r7, #4]
   13fbc:	ldr	r4, [r7]
   13fc0:	cmp	r2, #0
   13fc4:	mov	r9, r0
   13fc8:	ldr	sl, [r0]
   13fcc:	bgt	14028 <abort@plt+0x3308>
   13fd0:	add	r8, r7, #8
   13fd4:	cmp	r4, r8
   13fd8:	str	r2, [sp, #28]
   13fdc:	beq	140e0 <abort@plt+0x33c0>
   13fe0:	mov	r3, #8
   13fe4:	mov	r0, r4
   13fe8:	str	r3, [sp]
   13fec:	rsb	r2, r2, #1
   13ff0:	mvn	r3, #-2147483648	; 0x80000000
   13ff4:	add	r1, sp, #28
   13ff8:	bl	1617c <abort@plt+0x545c>
   13ffc:	mov	r4, r0
   14000:	str	r0, [r7]
   14004:	ldr	r0, [r7, #4]
   14008:	ldr	r2, [sp, #28]
   1400c:	mov	r1, #0
   14010:	sub	r2, r2, r0
   14014:	add	r0, r4, r0, lsl #3
   14018:	lsl	r2, r2, #3
   1401c:	bl	10c9c <memset@plt>
   14020:	ldr	r3, [sp, #28]
   14024:	str	r3, [r7, #4]
   14028:	ldr	r8, [sp, #36]	; 0x24
   1402c:	ldr	fp, [r4]
   14030:	ldr	r7, [r4, #4]
   14034:	ldr	r2, [sp, #72]	; 0x48
   14038:	ldr	r3, [sp, #32]
   1403c:	ldr	ip, [sp, #76]	; 0x4c
   14040:	orr	r8, r8, #1
   14044:	str	r2, [sp, #12]
   14048:	str	r3, [sp]
   1404c:	str	r8, [sp, #4]
   14050:	str	r5, [sp, #8]
   14054:	mov	r1, fp
   14058:	mov	r0, r7
   1405c:	str	ip, [sp, #16]
   14060:	mvn	r3, #0
   14064:	mov	r2, r6
   14068:	bl	11684 <abort@plt+0x964>
   1406c:	cmp	fp, r0
   14070:	bhi	140d0 <abort@plt+0x33b0>
   14074:	ldr	r3, [pc, #156]	; 14118 <abort@plt+0x33f8>
   14078:	add	fp, r0, #1
   1407c:	cmp	r7, r3
   14080:	str	fp, [r4]
   14084:	beq	14090 <abort@plt+0x3370>
   14088:	mov	r0, r7
   1408c:	bl	1680c <abort@plt+0x5aec>
   14090:	mov	r0, fp
   14094:	bl	15f60 <abort@plt+0x5240>
   14098:	ldr	lr, [sp, #76]	; 0x4c
   1409c:	ldr	r3, [sp, #32]
   140a0:	ldr	ip, [sp, #72]	; 0x48
   140a4:	mov	r2, r6
   140a8:	mov	r1, fp
   140ac:	str	r0, [r4, #4]
   140b0:	str	r3, [sp]
   140b4:	str	r5, [sp, #8]
   140b8:	str	r8, [sp, #4]
   140bc:	str	lr, [sp, #16]
   140c0:	str	ip, [sp, #12]
   140c4:	mvn	r3, #0
   140c8:	mov	r7, r0
   140cc:	bl	11684 <abort@plt+0x964>
   140d0:	mov	r0, r7
   140d4:	str	sl, [r9]
   140d8:	add	sp, sp, #84	; 0x54
   140dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140e0:	mov	r3, #8
   140e4:	str	r3, [sp]
   140e8:	add	r1, sp, #28
   140ec:	rsb	r2, r2, #1
   140f0:	mvn	r3, #-2147483648	; 0x80000000
   140f4:	mov	r0, #0
   140f8:	bl	1617c <abort@plt+0x545c>
   140fc:	mov	r4, r0
   14100:	ldm	r8, {r0, r1}
   14104:	str	r4, [r7]
   14108:	stm	r4, {r0, r1}
   1410c:	b	14004 <abort@plt+0x32e4>
   14110:	andeq	r8, r2, ip, lsr r1
   14114:	ldrdeq	r8, [r2], -r0
   14118:	andeq	r8, r2, ip, ror #2
   1411c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14120:	mov	r6, r0
   14124:	ldr	lr, [pc, #404]	; 142c0 <abort@plt+0x35a0>
   14128:	sub	sp, sp, #84	; 0x54
   1412c:	add	ip, sp, #32
   14130:	ldm	lr!, {r0, r1, r2, r3}
   14134:	ldr	r5, [pc, #392]	; 142c4 <abort@plt+0x35a4>
   14138:	stmia	ip!, {r0, r1, r2, r3}
   1413c:	ldm	lr!, {r0, r1, r2, r3}
   14140:	ldr	r4, [sp, #44]	; 0x2c
   14144:	stmia	ip!, {r0, r1, r2, r3}
   14148:	ldm	lr, {r0, r1, r2, r3}
   1414c:	mvn	lr, r4
   14150:	and	lr, lr, #67108864	; 0x4000000
   14154:	eor	lr, lr, r4
   14158:	stm	ip, {r0, r1, r2, r3}
   1415c:	str	lr, [sp, #44]	; 0x2c
   14160:	bl	10c84 <__errno_location@plt>
   14164:	ldr	r2, [r5, #4]
   14168:	ldr	r4, [r5]
   1416c:	cmp	r2, #0
   14170:	mov	r8, r0
   14174:	ldr	sl, [r0]
   14178:	bgt	141d4 <abort@plt+0x34b4>
   1417c:	add	r7, r5, #8
   14180:	cmp	r4, r7
   14184:	str	r2, [sp, #28]
   14188:	beq	14290 <abort@plt+0x3570>
   1418c:	mov	r3, #8
   14190:	mov	r0, r4
   14194:	str	r3, [sp]
   14198:	rsb	r2, r2, #1
   1419c:	mvn	r3, #-2147483648	; 0x80000000
   141a0:	add	r1, sp, #28
   141a4:	bl	1617c <abort@plt+0x545c>
   141a8:	mov	r4, r0
   141ac:	str	r0, [r5]
   141b0:	ldr	r0, [r5, #4]
   141b4:	ldr	r2, [sp, #28]
   141b8:	mov	r1, #0
   141bc:	sub	r2, r2, r0
   141c0:	add	r0, r4, r0, lsl #3
   141c4:	lsl	r2, r2, #3
   141c8:	bl	10c9c <memset@plt>
   141cc:	ldr	r3, [sp, #28]
   141d0:	str	r3, [r5, #4]
   141d4:	ldr	r7, [sp, #36]	; 0x24
   141d8:	ldr	r9, [r4]
   141dc:	ldr	r5, [r4, #4]
   141e0:	ldr	r2, [sp, #72]	; 0x48
   141e4:	ldr	r3, [sp, #32]
   141e8:	ldr	ip, [sp, #76]	; 0x4c
   141ec:	orr	r7, r7, #1
   141f0:	add	fp, sp, #40	; 0x28
   141f4:	str	r2, [sp, #12]
   141f8:	str	r3, [sp]
   141fc:	str	r7, [sp, #4]
   14200:	mov	r1, r9
   14204:	mov	r0, r5
   14208:	str	ip, [sp, #16]
   1420c:	str	fp, [sp, #8]
   14210:	mvn	r3, #0
   14214:	mov	r2, r6
   14218:	bl	11684 <abort@plt+0x964>
   1421c:	cmp	r9, r0
   14220:	bhi	14280 <abort@plt+0x3560>
   14224:	ldr	r3, [pc, #156]	; 142c8 <abort@plt+0x35a8>
   14228:	add	r9, r0, #1
   1422c:	cmp	r5, r3
   14230:	str	r9, [r4]
   14234:	beq	14240 <abort@plt+0x3520>
   14238:	mov	r0, r5
   1423c:	bl	1680c <abort@plt+0x5aec>
   14240:	mov	r0, r9
   14244:	bl	15f60 <abort@plt+0x5240>
   14248:	ldr	lr, [sp, #76]	; 0x4c
   1424c:	ldr	r3, [sp, #32]
   14250:	ldr	ip, [sp, #72]	; 0x48
   14254:	mov	r2, r6
   14258:	mov	r1, r9
   1425c:	str	r0, [r4, #4]
   14260:	str	r3, [sp]
   14264:	str	fp, [sp, #8]
   14268:	str	r7, [sp, #4]
   1426c:	str	lr, [sp, #16]
   14270:	str	ip, [sp, #12]
   14274:	mvn	r3, #0
   14278:	mov	r5, r0
   1427c:	bl	11684 <abort@plt+0x964>
   14280:	mov	r0, r5
   14284:	str	sl, [r8]
   14288:	add	sp, sp, #84	; 0x54
   1428c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14290:	mov	r3, #8
   14294:	str	r3, [sp]
   14298:	add	r1, sp, #28
   1429c:	rsb	r2, r2, #1
   142a0:	mvn	r3, #-2147483648	; 0x80000000
   142a4:	mov	r0, #0
   142a8:	bl	1617c <abort@plt+0x545c>
   142ac:	mov	r4, r0
   142b0:	ldm	r7, {r0, r1}
   142b4:	str	r4, [r5]
   142b8:	stm	r4, {r0, r1}
   142bc:	b	141b0 <abort@plt+0x3490>
   142c0:	andeq	r8, r2, ip, lsr r1
   142c4:	ldrdeq	r8, [r2], -r0
   142c8:	andeq	r8, r2, ip, ror #2
   142cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142d0:	mov	r9, r0
   142d4:	ldr	lr, [pc, #416]	; 1447c <abort@plt+0x375c>
   142d8:	mov	sl, r1
   142dc:	sub	sp, sp, #92	; 0x5c
   142e0:	ldm	lr!, {r0, r1, r2, r3}
   142e4:	add	ip, sp, #40	; 0x28
   142e8:	ldr	r5, [pc, #400]	; 14480 <abort@plt+0x3760>
   142ec:	stmia	ip!, {r0, r1, r2, r3}
   142f0:	ldm	lr!, {r0, r1, r2, r3}
   142f4:	ldr	r4, [sp, #52]	; 0x34
   142f8:	stmia	ip!, {r0, r1, r2, r3}
   142fc:	ldm	lr, {r0, r1, r2, r3}
   14300:	mvn	lr, r4
   14304:	and	lr, lr, #67108864	; 0x4000000
   14308:	eor	lr, lr, r4
   1430c:	stm	ip, {r0, r1, r2, r3}
   14310:	str	lr, [sp, #52]	; 0x34
   14314:	bl	10c84 <__errno_location@plt>
   14318:	ldr	r2, [r5, #4]
   1431c:	ldr	r4, [r5]
   14320:	cmp	r2, #0
   14324:	ldr	r3, [r0]
   14328:	mov	r7, r0
   1432c:	str	r3, [sp, #28]
   14330:	bgt	1438c <abort@plt+0x366c>
   14334:	add	r6, r5, #8
   14338:	cmp	r4, r6
   1433c:	str	r2, [sp, #36]	; 0x24
   14340:	beq	1444c <abort@plt+0x372c>
   14344:	mov	r3, #8
   14348:	mov	r0, r4
   1434c:	str	r3, [sp]
   14350:	rsb	r2, r2, #1
   14354:	mvn	r3, #-2147483648	; 0x80000000
   14358:	add	r1, sp, #36	; 0x24
   1435c:	bl	1617c <abort@plt+0x545c>
   14360:	mov	r4, r0
   14364:	str	r0, [r5]
   14368:	ldr	r0, [r5, #4]
   1436c:	ldr	r2, [sp, #36]	; 0x24
   14370:	mov	r1, #0
   14374:	sub	r2, r2, r0
   14378:	add	r0, r4, r0, lsl #3
   1437c:	lsl	r2, r2, #3
   14380:	bl	10c9c <memset@plt>
   14384:	ldr	r3, [sp, #36]	; 0x24
   14388:	str	r3, [r5, #4]
   1438c:	ldr	r6, [sp, #44]	; 0x2c
   14390:	ldr	r8, [r4]
   14394:	ldr	r5, [r4, #4]
   14398:	ldr	r2, [sp, #80]	; 0x50
   1439c:	ldr	r3, [sp, #40]	; 0x28
   143a0:	ldr	ip, [sp, #84]	; 0x54
   143a4:	orr	r6, r6, #1
   143a8:	add	fp, sp, #48	; 0x30
   143ac:	str	r2, [sp, #12]
   143b0:	str	r3, [sp]
   143b4:	str	r6, [sp, #4]
   143b8:	mov	r1, r8
   143bc:	mov	r0, r5
   143c0:	str	ip, [sp, #16]
   143c4:	str	fp, [sp, #8]
   143c8:	mov	r3, sl
   143cc:	mov	r2, r9
   143d0:	bl	11684 <abort@plt+0x964>
   143d4:	cmp	r8, r0
   143d8:	bhi	14438 <abort@plt+0x3718>
   143dc:	ldr	r3, [pc, #160]	; 14484 <abort@plt+0x3764>
   143e0:	add	r8, r0, #1
   143e4:	cmp	r5, r3
   143e8:	str	r8, [r4]
   143ec:	beq	143f8 <abort@plt+0x36d8>
   143f0:	mov	r0, r5
   143f4:	bl	1680c <abort@plt+0x5aec>
   143f8:	mov	r0, r8
   143fc:	bl	15f60 <abort@plt+0x5240>
   14400:	ldr	ip, [sp, #84]	; 0x54
   14404:	ldr	lr, [sp, #40]	; 0x28
   14408:	mov	r3, sl
   1440c:	mov	r2, r9
   14410:	mov	r1, r8
   14414:	str	r0, [r4, #4]
   14418:	ldr	r4, [sp, #80]	; 0x50
   1441c:	str	fp, [sp, #8]
   14420:	str	r6, [sp, #4]
   14424:	str	ip, [sp, #16]
   14428:	str	r4, [sp, #12]
   1442c:	str	lr, [sp]
   14430:	mov	r5, r0
   14434:	bl	11684 <abort@plt+0x964>
   14438:	ldr	r3, [sp, #28]
   1443c:	mov	r0, r5
   14440:	str	r3, [r7]
   14444:	add	sp, sp, #92	; 0x5c
   14448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1444c:	mov	r3, #8
   14450:	str	r3, [sp]
   14454:	add	r1, sp, #36	; 0x24
   14458:	rsb	r2, r2, #1
   1445c:	mvn	r3, #-2147483648	; 0x80000000
   14460:	mov	r0, #0
   14464:	bl	1617c <abort@plt+0x545c>
   14468:	mov	r4, r0
   1446c:	ldm	r6, {r0, r1}
   14470:	str	r4, [r5]
   14474:	stm	r4, {r0, r1}
   14478:	b	14368 <abort@plt+0x3648>
   1447c:	andeq	r8, r2, ip, lsr r1
   14480:	ldrdeq	r8, [r2], -r0
   14484:	andeq	r8, r2, ip, ror #2
   14488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1448c:	sub	sp, sp, #180	; 0xb4
   14490:	mov	r6, r1
   14494:	mov	r4, r0
   14498:	mov	r9, r2
   1449c:	add	r0, sp, #80	; 0x50
   144a0:	mov	r2, #48	; 0x30
   144a4:	mov	r1, #0
   144a8:	bl	10c9c <memset@plt>
   144ac:	cmp	r6, #10
   144b0:	beq	14690 <abort@plt+0x3970>
   144b4:	add	r5, sp, #80	; 0x50
   144b8:	str	r6, [sp, #80]	; 0x50
   144bc:	ldm	r5!, {r0, r1, r2, r3}
   144c0:	add	ip, sp, #128	; 0x80
   144c4:	mov	r7, ip
   144c8:	add	lr, sp, #32
   144cc:	stmia	ip!, {r0, r1, r2, r3}
   144d0:	mov	r8, #67108864	; 0x4000000
   144d4:	ldm	r5!, {r0, r1, r2, r3}
   144d8:	ldr	r6, [pc, #436]	; 14694 <abort@plt+0x3974>
   144dc:	stmia	ip!, {r0, r1, r2, r3}
   144e0:	ldm	r5, {r0, r1, r2, r3}
   144e4:	stm	ip, {r0, r1, r2, r3}
   144e8:	ldm	r7!, {r0, r1, r2, r3}
   144ec:	stmia	lr!, {r0, r1, r2, r3}
   144f0:	ldm	r7!, {r0, r1, r2, r3}
   144f4:	str	r8, [sp, #44]	; 0x2c
   144f8:	stmia	lr!, {r0, r1, r2, r3}
   144fc:	ldm	ip, {r0, r1, r2, r3}
   14500:	stm	lr, {r0, r1, r2, r3}
   14504:	bl	10c84 <__errno_location@plt>
   14508:	cmn	r4, #-2147483647	; 0x80000001
   1450c:	ldr	r5, [r6]
   14510:	mov	r7, r0
   14514:	movne	r0, #0
   14518:	moveq	r0, #1
   1451c:	ldr	r3, [r7]
   14520:	orrs	r0, r0, r4, lsr #31
   14524:	str	r3, [sp, #24]
   14528:	bne	14690 <abort@plt+0x3970>
   1452c:	ldr	r2, [r6, #4]
   14530:	cmp	r4, r2
   14534:	blt	14594 <abort@plt+0x3874>
   14538:	add	r8, r6, #8
   1453c:	cmp	r5, r8
   14540:	str	r2, [sp, #80]	; 0x50
   14544:	beq	14660 <abort@plt+0x3940>
   14548:	mov	r3, #8
   1454c:	sub	r2, r4, r2
   14550:	mov	r0, r5
   14554:	str	r3, [sp]
   14558:	add	r2, r2, #1
   1455c:	add	r1, sp, #80	; 0x50
   14560:	mvn	r3, #-2147483648	; 0x80000000
   14564:	bl	1617c <abort@plt+0x545c>
   14568:	mov	r5, r0
   1456c:	str	r0, [r6]
   14570:	ldr	r0, [r6, #4]
   14574:	ldr	r2, [sp, #80]	; 0x50
   14578:	mov	r1, #0
   1457c:	sub	r2, r2, r0
   14580:	add	r0, r5, r0, lsl #3
   14584:	lsl	r2, r2, #3
   14588:	bl	10c9c <memset@plt>
   1458c:	ldr	r3, [sp, #80]	; 0x50
   14590:	str	r3, [r6, #4]
   14594:	add	fp, r5, r4, lsl #3
   14598:	ldr	r1, [sp, #36]	; 0x24
   1459c:	ldr	r8, [r5, r4, lsl #3]
   145a0:	ldr	r6, [fp, #4]
   145a4:	ldr	r2, [sp, #72]	; 0x48
   145a8:	ldr	r3, [sp, #32]
   145ac:	ldr	ip, [sp, #76]	; 0x4c
   145b0:	orr	r1, r1, #1
   145b4:	add	sl, sp, #40	; 0x28
   145b8:	str	r1, [sp, #28]
   145bc:	str	r1, [sp, #4]
   145c0:	str	r2, [sp, #12]
   145c4:	str	r3, [sp]
   145c8:	mov	r0, r6
   145cc:	mov	r1, r8
   145d0:	str	ip, [sp, #16]
   145d4:	str	sl, [sp, #8]
   145d8:	mvn	r3, #0
   145dc:	mov	r2, r9
   145e0:	bl	11684 <abort@plt+0x964>
   145e4:	cmp	r8, r0
   145e8:	bhi	1464c <abort@plt+0x392c>
   145ec:	ldr	r3, [pc, #164]	; 14698 <abort@plt+0x3978>
   145f0:	add	r8, r0, #1
   145f4:	cmp	r6, r3
   145f8:	str	r8, [r5, r4, lsl #3]
   145fc:	beq	14608 <abort@plt+0x38e8>
   14600:	mov	r0, r6
   14604:	bl	1680c <abort@plt+0x5aec>
   14608:	mov	r0, r8
   1460c:	bl	15f60 <abort@plt+0x5240>
   14610:	ldr	lr, [sp, #76]	; 0x4c
   14614:	ldr	r3, [sp, #32]
   14618:	ldr	ip, [sp, #72]	; 0x48
   1461c:	ldr	r4, [sp, #28]
   14620:	mov	r2, r9
   14624:	mov	r1, r8
   14628:	str	r0, [fp, #4]
   1462c:	str	r3, [sp]
   14630:	str	sl, [sp, #8]
   14634:	str	r4, [sp, #4]
   14638:	str	lr, [sp, #16]
   1463c:	str	ip, [sp, #12]
   14640:	mvn	r3, #0
   14644:	mov	r6, r0
   14648:	bl	11684 <abort@plt+0x964>
   1464c:	ldr	r3, [sp, #24]
   14650:	mov	r0, r6
   14654:	str	r3, [r7]
   14658:	add	sp, sp, #180	; 0xb4
   1465c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14660:	mov	r3, #8
   14664:	sub	r2, r4, r2
   14668:	add	r1, sp, #80	; 0x50
   1466c:	str	r3, [sp]
   14670:	add	r2, r2, #1
   14674:	mvn	r3, #-2147483648	; 0x80000000
   14678:	bl	1617c <abort@plt+0x545c>
   1467c:	mov	r5, r0
   14680:	ldm	r8, {r0, r1}
   14684:	str	r5, [r6]
   14688:	stm	r5, {r0, r1}
   1468c:	b	14570 <abort@plt+0x3850>
   14690:	bl	10d20 <abort@plt>
   14694:	ldrdeq	r8, [r2], -r0
   14698:	andeq	r8, r2, ip, ror #2
   1469c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146a0:	mov	r7, r1
   146a4:	ldr	lr, [pc, #492]	; 14898 <abort@plt+0x3b78>
   146a8:	mov	r8, r2
   146ac:	mov	r4, r0
   146b0:	mov	fp, r3
   146b4:	ldm	lr!, {r0, r1, r2, r3}
   146b8:	sub	sp, sp, #100	; 0x64
   146bc:	add	ip, sp, #48	; 0x30
   146c0:	mov	sl, #10
   146c4:	stmia	ip!, {r0, r1, r2, r3}
   146c8:	cmp	r8, #0
   146cc:	cmpne	r7, #0
   146d0:	ldm	lr!, {r0, r1, r2, r3}
   146d4:	str	sl, [sp, #48]	; 0x30
   146d8:	stmia	ip!, {r0, r1, r2, r3}
   146dc:	ldm	lr, {r0, r1, r2, r3}
   146e0:	stm	ip, {r0, r1, r2, r3}
   146e4:	beq	14894 <abort@plt+0x3b74>
   146e8:	str	r7, [sp, #88]	; 0x58
   146ec:	str	r8, [sp, #92]	; 0x5c
   146f0:	bl	10c84 <__errno_location@plt>
   146f4:	ldr	r6, [pc, #416]	; 1489c <abort@plt+0x3b7c>
   146f8:	cmn	r4, #-2147483647	; 0x80000001
   146fc:	ldr	r5, [r6]
   14700:	mov	r9, r0
   14704:	movne	r0, #0
   14708:	moveq	r0, #1
   1470c:	ldr	r3, [r9]
   14710:	orrs	r0, r0, r4, lsr #31
   14714:	str	r3, [sp, #28]
   14718:	bne	14894 <abort@plt+0x3b74>
   1471c:	ldr	r2, [r6, #4]
   14720:	cmp	r4, r2
   14724:	movlt	r3, sl
   14728:	blt	14794 <abort@plt+0x3a74>
   1472c:	add	r7, r6, #8
   14730:	cmp	r5, r7
   14734:	str	r2, [sp, #44]	; 0x2c
   14738:	beq	14864 <abort@plt+0x3b44>
   1473c:	mov	r3, #8
   14740:	sub	r2, r4, r2
   14744:	mov	r0, r5
   14748:	str	r3, [sp]
   1474c:	add	r2, r2, #1
   14750:	mvn	r3, #-2147483648	; 0x80000000
   14754:	add	r1, sp, #44	; 0x2c
   14758:	bl	1617c <abort@plt+0x545c>
   1475c:	mov	r5, r0
   14760:	str	r0, [r6]
   14764:	ldr	r0, [r6, #4]
   14768:	ldr	r2, [sp, #44]	; 0x2c
   1476c:	mov	r1, #0
   14770:	sub	r2, r2, r0
   14774:	add	r0, r5, r0, lsl #3
   14778:	lsl	r2, r2, #3
   1477c:	bl	10c9c <memset@plt>
   14780:	ldr	r3, [sp, #48]	; 0x30
   14784:	ldr	r7, [sp, #88]	; 0x58
   14788:	ldr	r8, [sp, #92]	; 0x5c
   1478c:	ldr	r2, [sp, #44]	; 0x2c
   14790:	str	r2, [r6, #4]
   14794:	add	r2, r5, r4, lsl #3
   14798:	mov	r1, r2
   1479c:	str	r2, [sp, #32]
   147a0:	ldr	r2, [sp, #52]	; 0x34
   147a4:	ldr	r6, [r1, #4]
   147a8:	ldr	sl, [r5, r4, lsl #3]
   147ac:	orr	r2, r2, #1
   147b0:	str	r3, [sp]
   147b4:	add	r3, sp, #56	; 0x38
   147b8:	str	r2, [sp, #36]	; 0x24
   147bc:	str	r2, [sp, #4]
   147c0:	str	r3, [sp, #8]
   147c4:	mov	r0, r6
   147c8:	str	r8, [sp, #16]
   147cc:	str	r7, [sp, #12]
   147d0:	mov	r1, sl
   147d4:	mvn	r3, #0
   147d8:	mov	r2, fp
   147dc:	bl	11684 <abort@plt+0x964>
   147e0:	cmp	sl, r0
   147e4:	bhi	14850 <abort@plt+0x3b30>
   147e8:	ldr	r3, [pc, #176]	; 148a0 <abort@plt+0x3b80>
   147ec:	add	r7, r0, #1
   147f0:	cmp	r6, r3
   147f4:	str	r7, [r5, r4, lsl #3]
   147f8:	beq	14804 <abort@plt+0x3ae4>
   147fc:	mov	r0, r6
   14800:	bl	1680c <abort@plt+0x5aec>
   14804:	mov	r0, r7
   14808:	bl	15f60 <abort@plt+0x5240>
   1480c:	ldr	r3, [sp, #32]
   14810:	ldr	lr, [sp, #92]	; 0x5c
   14814:	ldr	ip, [sp, #88]	; 0x58
   14818:	ldr	r4, [sp, #36]	; 0x24
   1481c:	mov	r2, fp
   14820:	mov	r1, r7
   14824:	str	r0, [r3, #4]
   14828:	add	r3, sp, #56	; 0x38
   1482c:	str	r3, [sp, #8]
   14830:	ldr	r3, [sp, #48]	; 0x30
   14834:	str	r4, [sp, #4]
   14838:	str	r3, [sp]
   1483c:	str	lr, [sp, #16]
   14840:	str	ip, [sp, #12]
   14844:	mvn	r3, #0
   14848:	mov	r6, r0
   1484c:	bl	11684 <abort@plt+0x964>
   14850:	ldr	r3, [sp, #28]
   14854:	mov	r0, r6
   14858:	str	r3, [r9]
   1485c:	add	sp, sp, #100	; 0x64
   14860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14864:	mov	r3, #8
   14868:	sub	r2, r4, r2
   1486c:	str	r3, [sp]
   14870:	add	r1, sp, #44	; 0x2c
   14874:	add	r2, r2, #1
   14878:	mvn	r3, #-2147483648	; 0x80000000
   1487c:	bl	1617c <abort@plt+0x545c>
   14880:	mov	r5, r0
   14884:	ldm	r7, {r0, r1}
   14888:	str	r5, [r6]
   1488c:	stm	r5, {r0, r1}
   14890:	b	14764 <abort@plt+0x3a44>
   14894:	bl	10d20 <abort@plt>
   14898:	andeq	r8, r2, ip, lsr r1
   1489c:	ldrdeq	r8, [r2], -r0
   148a0:	andeq	r8, r2, ip, ror #2
   148a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148a8:	mov	r7, r1
   148ac:	ldr	lr, [pc, #492]	; 14aa0 <abort@plt+0x3d80>
   148b0:	mov	r8, r2
   148b4:	mov	r4, r0
   148b8:	mov	fp, r3
   148bc:	ldm	lr!, {r0, r1, r2, r3}
   148c0:	sub	sp, sp, #100	; 0x64
   148c4:	add	ip, sp, #48	; 0x30
   148c8:	mov	sl, #10
   148cc:	stmia	ip!, {r0, r1, r2, r3}
   148d0:	cmp	r8, #0
   148d4:	cmpne	r7, #0
   148d8:	ldm	lr!, {r0, r1, r2, r3}
   148dc:	str	sl, [sp, #48]	; 0x30
   148e0:	stmia	ip!, {r0, r1, r2, r3}
   148e4:	ldm	lr, {r0, r1, r2, r3}
   148e8:	stm	ip, {r0, r1, r2, r3}
   148ec:	beq	14a9c <abort@plt+0x3d7c>
   148f0:	str	r7, [sp, #88]	; 0x58
   148f4:	str	r8, [sp, #92]	; 0x5c
   148f8:	bl	10c84 <__errno_location@plt>
   148fc:	ldr	r6, [pc, #416]	; 14aa4 <abort@plt+0x3d84>
   14900:	cmn	r4, #-2147483647	; 0x80000001
   14904:	ldr	r5, [r6]
   14908:	mov	r9, r0
   1490c:	movne	r0, #0
   14910:	moveq	r0, #1
   14914:	ldr	r3, [r9]
   14918:	orrs	r0, r0, r4, lsr #31
   1491c:	str	r3, [sp, #28]
   14920:	bne	14a9c <abort@plt+0x3d7c>
   14924:	ldr	r2, [r6, #4]
   14928:	cmp	r4, r2
   1492c:	movlt	r3, sl
   14930:	blt	1499c <abort@plt+0x3c7c>
   14934:	add	r7, r6, #8
   14938:	cmp	r5, r7
   1493c:	str	r2, [sp, #44]	; 0x2c
   14940:	beq	14a6c <abort@plt+0x3d4c>
   14944:	mov	r3, #8
   14948:	sub	r2, r4, r2
   1494c:	mov	r0, r5
   14950:	str	r3, [sp]
   14954:	add	r2, r2, #1
   14958:	mvn	r3, #-2147483648	; 0x80000000
   1495c:	add	r1, sp, #44	; 0x2c
   14960:	bl	1617c <abort@plt+0x545c>
   14964:	mov	r5, r0
   14968:	str	r0, [r6]
   1496c:	ldr	r0, [r6, #4]
   14970:	ldr	r2, [sp, #44]	; 0x2c
   14974:	mov	r1, #0
   14978:	sub	r2, r2, r0
   1497c:	add	r0, r5, r0, lsl #3
   14980:	lsl	r2, r2, #3
   14984:	bl	10c9c <memset@plt>
   14988:	ldr	r3, [sp, #48]	; 0x30
   1498c:	ldr	r7, [sp, #88]	; 0x58
   14990:	ldr	r8, [sp, #92]	; 0x5c
   14994:	ldr	r2, [sp, #44]	; 0x2c
   14998:	str	r2, [r6, #4]
   1499c:	add	r2, r5, r4, lsl #3
   149a0:	mov	r1, r2
   149a4:	str	r2, [sp, #32]
   149a8:	ldr	r2, [sp, #52]	; 0x34
   149ac:	ldr	r6, [r1, #4]
   149b0:	ldr	sl, [r5, r4, lsl #3]
   149b4:	orr	r2, r2, #1
   149b8:	str	r3, [sp]
   149bc:	add	r3, sp, #56	; 0x38
   149c0:	str	r2, [sp, #36]	; 0x24
   149c4:	str	r2, [sp, #4]
   149c8:	str	r3, [sp, #8]
   149cc:	mov	r0, r6
   149d0:	str	r8, [sp, #16]
   149d4:	str	r7, [sp, #12]
   149d8:	mov	r1, sl
   149dc:	ldr	r3, [sp, #136]	; 0x88
   149e0:	mov	r2, fp
   149e4:	bl	11684 <abort@plt+0x964>
   149e8:	cmp	sl, r0
   149ec:	bhi	14a58 <abort@plt+0x3d38>
   149f0:	ldr	r3, [pc, #176]	; 14aa8 <abort@plt+0x3d88>
   149f4:	add	r7, r0, #1
   149f8:	cmp	r6, r3
   149fc:	str	r7, [r5, r4, lsl #3]
   14a00:	beq	14a0c <abort@plt+0x3cec>
   14a04:	mov	r0, r6
   14a08:	bl	1680c <abort@plt+0x5aec>
   14a0c:	mov	r0, r7
   14a10:	bl	15f60 <abort@plt+0x5240>
   14a14:	ldr	r3, [sp, #32]
   14a18:	ldr	lr, [sp, #92]	; 0x5c
   14a1c:	ldr	ip, [sp, #88]	; 0x58
   14a20:	ldr	r4, [sp, #36]	; 0x24
   14a24:	mov	r2, fp
   14a28:	mov	r1, r7
   14a2c:	str	r0, [r3, #4]
   14a30:	add	r3, sp, #56	; 0x38
   14a34:	str	r3, [sp, #8]
   14a38:	ldr	r3, [sp, #48]	; 0x30
   14a3c:	str	r4, [sp, #4]
   14a40:	str	r3, [sp]
   14a44:	str	lr, [sp, #16]
   14a48:	str	ip, [sp, #12]
   14a4c:	ldr	r3, [sp, #136]	; 0x88
   14a50:	mov	r6, r0
   14a54:	bl	11684 <abort@plt+0x964>
   14a58:	ldr	r3, [sp, #28]
   14a5c:	mov	r0, r6
   14a60:	str	r3, [r9]
   14a64:	add	sp, sp, #100	; 0x64
   14a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a6c:	mov	r3, #8
   14a70:	sub	r2, r4, r2
   14a74:	str	r3, [sp]
   14a78:	add	r1, sp, #44	; 0x2c
   14a7c:	add	r2, r2, #1
   14a80:	mvn	r3, #-2147483648	; 0x80000000
   14a84:	bl	1617c <abort@plt+0x545c>
   14a88:	mov	r5, r0
   14a8c:	ldm	r7, {r0, r1}
   14a90:	str	r5, [r6]
   14a94:	stm	r5, {r0, r1}
   14a98:	b	1496c <abort@plt+0x3c4c>
   14a9c:	bl	10d20 <abort@plt>
   14aa0:	andeq	r8, r2, ip, lsr r1
   14aa4:	ldrdeq	r8, [r2], -r0
   14aa8:	andeq	r8, r2, ip, ror #2
   14aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ab0:	mov	r5, r0
   14ab4:	ldr	lr, [pc, #452]	; 14c80 <abort@plt+0x3f60>
   14ab8:	mov	r6, r1
   14abc:	mov	sl, r2
   14ac0:	ldm	lr!, {r0, r1, r2, r3}
   14ac4:	sub	sp, sp, #92	; 0x5c
   14ac8:	add	ip, sp, #40	; 0x28
   14acc:	cmp	r6, #0
   14ad0:	cmpne	r5, #0
   14ad4:	stmia	ip!, {r0, r1, r2, r3}
   14ad8:	mov	r9, #10
   14adc:	ldm	lr!, {r0, r1, r2, r3}
   14ae0:	moveq	fp, #1
   14ae4:	movne	fp, #0
   14ae8:	str	r9, [sp, #40]	; 0x28
   14aec:	stmia	ip!, {r0, r1, r2, r3}
   14af0:	ldm	lr, {r0, r1, r2, r3}
   14af4:	stm	ip, {r0, r1, r2, r3}
   14af8:	beq	14c7c <abort@plt+0x3f5c>
   14afc:	str	r5, [sp, #80]	; 0x50
   14b00:	str	r6, [sp, #84]	; 0x54
   14b04:	bl	10c84 <__errno_location@plt>
   14b08:	ldr	r7, [pc, #372]	; 14c84 <abort@plt+0x3f64>
   14b0c:	ldr	r2, [r7, #4]
   14b10:	ldr	r4, [r7]
   14b14:	cmp	r2, #0
   14b18:	ldr	r3, [r0]
   14b1c:	mov	r8, r0
   14b20:	str	r3, [sp, #24]
   14b24:	movgt	r3, r9
   14b28:	bgt	14b90 <abort@plt+0x3e70>
   14b2c:	add	r5, r7, #8
   14b30:	cmp	r4, r5
   14b34:	str	r2, [sp, #36]	; 0x24
   14b38:	beq	14c4c <abort@plt+0x3f2c>
   14b3c:	mov	r3, #8
   14b40:	mov	r0, r4
   14b44:	str	r3, [sp]
   14b48:	rsb	r2, r2, #1
   14b4c:	mvn	r3, #-2147483648	; 0x80000000
   14b50:	add	r1, sp, #36	; 0x24
   14b54:	bl	1617c <abort@plt+0x545c>
   14b58:	mov	r4, r0
   14b5c:	str	r0, [r7]
   14b60:	ldr	r0, [r7, #4]
   14b64:	ldr	r2, [sp, #36]	; 0x24
   14b68:	mov	r1, #0
   14b6c:	sub	r2, r2, r0
   14b70:	add	r0, r4, r0, lsl #3
   14b74:	lsl	r2, r2, #3
   14b78:	bl	10c9c <memset@plt>
   14b7c:	ldr	r3, [sp, #40]	; 0x28
   14b80:	ldr	r5, [sp, #80]	; 0x50
   14b84:	ldr	r6, [sp, #84]	; 0x54
   14b88:	ldr	r2, [sp, #36]	; 0x24
   14b8c:	str	r2, [r7, #4]
   14b90:	ldr	r2, [sp, #44]	; 0x2c
   14b94:	ldr	r9, [r4]
   14b98:	ldr	r7, [r4, #4]
   14b9c:	orr	r2, r2, #1
   14ba0:	add	fp, sp, #48	; 0x30
   14ba4:	str	r2, [sp, #28]
   14ba8:	str	r2, [sp, #4]
   14bac:	str	r3, [sp]
   14bb0:	str	r6, [sp, #16]
   14bb4:	str	r5, [sp, #12]
   14bb8:	mov	r1, r9
   14bbc:	mov	r0, r7
   14bc0:	str	fp, [sp, #8]
   14bc4:	mvn	r3, #0
   14bc8:	mov	r2, sl
   14bcc:	bl	11684 <abort@plt+0x964>
   14bd0:	cmp	r9, r0
   14bd4:	bhi	14c38 <abort@plt+0x3f18>
   14bd8:	ldr	r3, [pc, #168]	; 14c88 <abort@plt+0x3f68>
   14bdc:	add	r5, r0, #1
   14be0:	cmp	r7, r3
   14be4:	str	r5, [r4]
   14be8:	beq	14bf4 <abort@plt+0x3ed4>
   14bec:	mov	r0, r7
   14bf0:	bl	1680c <abort@plt+0x5aec>
   14bf4:	mov	r0, r5
   14bf8:	bl	15f60 <abort@plt+0x5240>
   14bfc:	ldr	lr, [sp, #84]	; 0x54
   14c00:	ldr	r3, [sp, #40]	; 0x28
   14c04:	ldr	ip, [sp, #80]	; 0x50
   14c08:	mov	r2, sl
   14c0c:	mov	r1, r5
   14c10:	str	r0, [r4, #4]
   14c14:	ldr	r4, [sp, #28]
   14c18:	str	r3, [sp]
   14c1c:	str	fp, [sp, #8]
   14c20:	str	r4, [sp, #4]
   14c24:	str	lr, [sp, #16]
   14c28:	str	ip, [sp, #12]
   14c2c:	mvn	r3, #0
   14c30:	mov	r7, r0
   14c34:	bl	11684 <abort@plt+0x964>
   14c38:	ldr	r3, [sp, #24]
   14c3c:	mov	r0, r7
   14c40:	str	r3, [r8]
   14c44:	add	sp, sp, #92	; 0x5c
   14c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c4c:	mov	r3, #8
   14c50:	str	r3, [sp]
   14c54:	add	r1, sp, #36	; 0x24
   14c58:	rsb	r2, r2, #1
   14c5c:	mov	r0, fp
   14c60:	mvn	r3, #-2147483648	; 0x80000000
   14c64:	bl	1617c <abort@plt+0x545c>
   14c68:	mov	r4, r0
   14c6c:	ldm	r5, {r0, r1}
   14c70:	str	r4, [r7]
   14c74:	stm	r4, {r0, r1}
   14c78:	b	14b60 <abort@plt+0x3e40>
   14c7c:	bl	10d20 <abort@plt>
   14c80:	andeq	r8, r2, ip, lsr r1
   14c84:	ldrdeq	r8, [r2], -r0
   14c88:	andeq	r8, r2, ip, ror #2
   14c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c90:	mov	r5, r0
   14c94:	ldr	lr, [pc, #464]	; 14e6c <abort@plt+0x414c>
   14c98:	mov	r6, r1
   14c9c:	mov	sl, r2
   14ca0:	mov	fp, r3
   14ca4:	ldm	lr!, {r0, r1, r2, r3}
   14ca8:	sub	sp, sp, #92	; 0x5c
   14cac:	add	ip, sp, #40	; 0x28
   14cb0:	cmp	r6, #0
   14cb4:	cmpne	r5, #0
   14cb8:	stmia	ip!, {r0, r1, r2, r3}
   14cbc:	moveq	r4, #1
   14cc0:	ldm	lr!, {r0, r1, r2, r3}
   14cc4:	movne	r4, #0
   14cc8:	mov	r9, #10
   14ccc:	str	r4, [sp, #28]
   14cd0:	stmia	ip!, {r0, r1, r2, r3}
   14cd4:	ldm	lr, {r0, r1, r2, r3}
   14cd8:	str	r9, [sp, #40]	; 0x28
   14cdc:	stm	ip, {r0, r1, r2, r3}
   14ce0:	beq	14e68 <abort@plt+0x4148>
   14ce4:	str	r5, [sp, #80]	; 0x50
   14ce8:	str	r6, [sp, #84]	; 0x54
   14cec:	bl	10c84 <__errno_location@plt>
   14cf0:	ldr	r7, [pc, #376]	; 14e70 <abort@plt+0x4150>
   14cf4:	ldr	r2, [r7, #4]
   14cf8:	ldr	r4, [r7]
   14cfc:	cmp	r2, #0
   14d00:	ldr	r3, [r0]
   14d04:	mov	r8, r0
   14d08:	str	r3, [sp, #24]
   14d0c:	movgt	r3, r9
   14d10:	bgt	14d78 <abort@plt+0x4058>
   14d14:	add	r5, r7, #8
   14d18:	cmp	r4, r5
   14d1c:	str	r2, [sp, #36]	; 0x24
   14d20:	beq	14e38 <abort@plt+0x4118>
   14d24:	mov	r3, #8
   14d28:	mov	r0, r4
   14d2c:	str	r3, [sp]
   14d30:	rsb	r2, r2, #1
   14d34:	mvn	r3, #-2147483648	; 0x80000000
   14d38:	add	r1, sp, #36	; 0x24
   14d3c:	bl	1617c <abort@plt+0x545c>
   14d40:	mov	r4, r0
   14d44:	str	r0, [r7]
   14d48:	ldr	r0, [r7, #4]
   14d4c:	ldr	r2, [sp, #36]	; 0x24
   14d50:	mov	r1, #0
   14d54:	sub	r2, r2, r0
   14d58:	add	r0, r4, r0, lsl #3
   14d5c:	lsl	r2, r2, #3
   14d60:	bl	10c9c <memset@plt>
   14d64:	ldr	r3, [sp, #40]	; 0x28
   14d68:	ldr	r5, [sp, #80]	; 0x50
   14d6c:	ldr	r6, [sp, #84]	; 0x54
   14d70:	ldr	r2, [sp, #36]	; 0x24
   14d74:	str	r2, [r7, #4]
   14d78:	ldr	r2, [sp, #44]	; 0x2c
   14d7c:	ldr	r9, [r4]
   14d80:	ldr	r7, [r4, #4]
   14d84:	orr	r2, r2, #1
   14d88:	str	r3, [sp]
   14d8c:	add	r3, sp, #48	; 0x30
   14d90:	str	r2, [sp, #28]
   14d94:	str	r2, [sp, #4]
   14d98:	str	r3, [sp, #8]
   14d9c:	str	r6, [sp, #16]
   14da0:	str	r5, [sp, #12]
   14da4:	mov	r1, r9
   14da8:	mov	r0, r7
   14dac:	mov	r3, fp
   14db0:	mov	r2, sl
   14db4:	bl	11684 <abort@plt+0x964>
   14db8:	cmp	r9, r0
   14dbc:	bhi	14e24 <abort@plt+0x4104>
   14dc0:	ldr	r3, [pc, #172]	; 14e74 <abort@plt+0x4154>
   14dc4:	add	r5, r0, #1
   14dc8:	cmp	r7, r3
   14dcc:	str	r5, [r4]
   14dd0:	beq	14ddc <abort@plt+0x40bc>
   14dd4:	mov	r0, r7
   14dd8:	bl	1680c <abort@plt+0x5aec>
   14ddc:	mov	r0, r5
   14de0:	bl	15f60 <abort@plt+0x5240>
   14de4:	add	lr, sp, #48	; 0x30
   14de8:	ldr	ip, [sp, #84]	; 0x54
   14dec:	mov	r1, r5
   14df0:	ldr	r5, [sp, #28]
   14df4:	mov	r3, fp
   14df8:	mov	r2, sl
   14dfc:	str	r0, [r4, #4]
   14e00:	ldr	r4, [sp, #80]	; 0x50
   14e04:	str	lr, [sp, #8]
   14e08:	ldr	lr, [sp, #40]	; 0x28
   14e0c:	str	r5, [sp, #4]
   14e10:	str	ip, [sp, #16]
   14e14:	str	r4, [sp, #12]
   14e18:	str	lr, [sp]
   14e1c:	mov	r7, r0
   14e20:	bl	11684 <abort@plt+0x964>
   14e24:	ldr	r3, [sp, #24]
   14e28:	mov	r0, r7
   14e2c:	str	r3, [r8]
   14e30:	add	sp, sp, #92	; 0x5c
   14e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e38:	mov	r3, #8
   14e3c:	str	r3, [sp]
   14e40:	add	r1, sp, #36	; 0x24
   14e44:	rsb	r2, r2, #1
   14e48:	ldr	r0, [sp, #28]
   14e4c:	mvn	r3, #-2147483648	; 0x80000000
   14e50:	bl	1617c <abort@plt+0x545c>
   14e54:	mov	r4, r0
   14e58:	ldm	r5, {r0, r1}
   14e5c:	str	r4, [r7]
   14e60:	stm	r4, {r0, r1}
   14e64:	b	14d48 <abort@plt+0x4028>
   14e68:	bl	10d20 <abort@plt>
   14e6c:	andeq	r8, r2, ip, lsr r1
   14e70:	ldrdeq	r8, [r2], -r0
   14e74:	andeq	r8, r2, ip, ror #2
   14e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e7c:	sub	sp, sp, #52	; 0x34
   14e80:	mov	r5, r0
   14e84:	mov	sl, r1
   14e88:	mov	fp, r2
   14e8c:	bl	10c84 <__errno_location@plt>
   14e90:	ldr	r4, [pc, #404]	; 1502c <abort@plt+0x430c>
   14e94:	cmn	r5, #-2147483647	; 0x80000001
   14e98:	ldr	r6, [r4]
   14e9c:	mov	r8, r0
   14ea0:	movne	r0, #0
   14ea4:	moveq	r0, #1
   14ea8:	ldr	r3, [r8]
   14eac:	orrs	r0, r0, r5, lsr #31
   14eb0:	str	r3, [sp, #28]
   14eb4:	bne	15028 <abort@plt+0x4308>
   14eb8:	ldr	r2, [r4, #4]
   14ebc:	cmp	r5, r2
   14ec0:	blt	14f20 <abort@plt+0x4200>
   14ec4:	add	r7, r4, #8
   14ec8:	cmp	r6, r7
   14ecc:	str	r2, [sp, #44]	; 0x2c
   14ed0:	beq	14ff8 <abort@plt+0x42d8>
   14ed4:	mov	r3, #8
   14ed8:	sub	r2, r5, r2
   14edc:	mov	r0, r6
   14ee0:	str	r3, [sp]
   14ee4:	add	r2, r2, #1
   14ee8:	mvn	r3, #-2147483648	; 0x80000000
   14eec:	add	r1, sp, #44	; 0x2c
   14ef0:	bl	1617c <abort@plt+0x545c>
   14ef4:	mov	r6, r0
   14ef8:	str	r0, [r4]
   14efc:	ldr	r0, [r4, #4]
   14f00:	ldr	r2, [sp, #44]	; 0x2c
   14f04:	mov	r1, #0
   14f08:	sub	r2, r2, r0
   14f0c:	add	r0, r6, r0, lsl #3
   14f10:	lsl	r2, r2, #3
   14f14:	bl	10c9c <memset@plt>
   14f18:	ldr	r3, [sp, #44]	; 0x2c
   14f1c:	str	r3, [r4, #4]
   14f20:	ldr	r2, [r4, #56]	; 0x38
   14f24:	add	r3, r6, r5, lsl #3
   14f28:	ldr	r1, [r4, #20]
   14f2c:	ldr	r7, [r3, #4]
   14f30:	ldr	r9, [r6, r5, lsl #3]
   14f34:	ldr	ip, [r4, #60]	; 0x3c
   14f38:	str	r3, [sp, #32]
   14f3c:	ldr	r3, [r4, #16]
   14f40:	str	r2, [sp, #12]
   14f44:	ldr	r2, [pc, #228]	; 15030 <abort@plt+0x4310>
   14f48:	orr	r1, r1, #1
   14f4c:	str	r1, [sp, #36]	; 0x24
   14f50:	str	r1, [sp, #4]
   14f54:	str	r2, [sp, #8]
   14f58:	str	r3, [sp]
   14f5c:	mov	r0, r7
   14f60:	mov	r1, r9
   14f64:	str	ip, [sp, #16]
   14f68:	mov	r3, fp
   14f6c:	mov	r2, sl
   14f70:	bl	11684 <abort@plt+0x964>
   14f74:	cmp	r9, r0
   14f78:	bhi	14fe4 <abort@plt+0x42c4>
   14f7c:	ldr	r3, [pc, #176]	; 15034 <abort@plt+0x4314>
   14f80:	add	r9, r0, #1
   14f84:	cmp	r7, r3
   14f88:	str	r9, [r6, r5, lsl #3]
   14f8c:	beq	14f98 <abort@plt+0x4278>
   14f90:	mov	r0, r7
   14f94:	bl	1680c <abort@plt+0x5aec>
   14f98:	mov	r0, r9
   14f9c:	bl	15f60 <abort@plt+0x5240>
   14fa0:	ldr	ip, [sp, #32]
   14fa4:	ldr	lr, [r4, #60]	; 0x3c
   14fa8:	ldr	r5, [r4, #56]	; 0x38
   14fac:	mov	r3, fp
   14fb0:	mov	r2, sl
   14fb4:	mov	r1, r9
   14fb8:	str	r0, [ip, #4]
   14fbc:	ldr	ip, [r4, #16]
   14fc0:	ldr	r4, [pc, #104]	; 15030 <abort@plt+0x4310>
   14fc4:	str	lr, [sp, #16]
   14fc8:	str	r4, [sp, #8]
   14fcc:	ldr	r4, [sp, #36]	; 0x24
   14fd0:	str	r5, [sp, #12]
   14fd4:	str	r4, [sp, #4]
   14fd8:	str	ip, [sp]
   14fdc:	mov	r7, r0
   14fe0:	bl	11684 <abort@plt+0x964>
   14fe4:	ldr	r3, [sp, #28]
   14fe8:	mov	r0, r7
   14fec:	str	r3, [r8]
   14ff0:	add	sp, sp, #52	; 0x34
   14ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ff8:	mov	r3, #8
   14ffc:	sub	r2, r5, r2
   15000:	str	r3, [sp]
   15004:	add	r1, sp, #44	; 0x2c
   15008:	add	r2, r2, #1
   1500c:	mvn	r3, #-2147483648	; 0x80000000
   15010:	bl	1617c <abort@plt+0x545c>
   15014:	mov	r6, r0
   15018:	ldm	r7, {r0, r1}
   1501c:	str	r6, [r4]
   15020:	stm	r6, {r0, r1}
   15024:	b	14efc <abort@plt+0x41dc>
   15028:	bl	10d20 <abort@plt>
   1502c:	ldrdeq	r8, [r2], -r0
   15030:	andeq	r8, r2, r8, ror #1
   15034:	andeq	r8, r2, ip, ror #2
   15038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1503c:	sub	sp, sp, #44	; 0x2c
   15040:	mov	r9, r0
   15044:	mov	sl, r1
   15048:	bl	10c84 <__errno_location@plt>
   1504c:	ldr	r4, [pc, #360]	; 151bc <abort@plt+0x449c>
   15050:	ldr	r2, [r4, #4]
   15054:	ldr	r5, [r4]
   15058:	cmp	r2, #0
   1505c:	ldr	r3, [r0]
   15060:	mov	r7, r0
   15064:	str	r3, [sp, #24]
   15068:	bgt	150c4 <abort@plt+0x43a4>
   1506c:	add	r6, r4, #8
   15070:	cmp	r5, r6
   15074:	str	r2, [sp, #36]	; 0x24
   15078:	beq	1518c <abort@plt+0x446c>
   1507c:	mov	r3, #8
   15080:	mov	r0, r5
   15084:	str	r3, [sp]
   15088:	rsb	r2, r2, #1
   1508c:	mvn	r3, #-2147483648	; 0x80000000
   15090:	add	r1, sp, #36	; 0x24
   15094:	bl	1617c <abort@plt+0x545c>
   15098:	mov	r5, r0
   1509c:	str	r0, [r4]
   150a0:	ldr	r0, [r4, #4]
   150a4:	ldr	r2, [sp, #36]	; 0x24
   150a8:	mov	r1, #0
   150ac:	sub	r2, r2, r0
   150b0:	add	r0, r5, r0, lsl #3
   150b4:	lsl	r2, r2, #3
   150b8:	bl	10c9c <memset@plt>
   150bc:	ldr	r3, [sp, #36]	; 0x24
   150c0:	str	r3, [r4, #4]
   150c4:	ldr	r1, [r4, #20]
   150c8:	ldr	r8, [r5]
   150cc:	ldr	r6, [r5, #4]
   150d0:	ldr	r2, [r4, #56]	; 0x38
   150d4:	ldr	r3, [r4, #16]
   150d8:	ldr	ip, [r4, #60]	; 0x3c
   150dc:	ldr	fp, [pc, #220]	; 151c0 <abort@plt+0x44a0>
   150e0:	orr	r1, r1, #1
   150e4:	str	r1, [sp, #28]
   150e8:	str	r1, [sp, #4]
   150ec:	str	r2, [sp, #12]
   150f0:	str	r3, [sp]
   150f4:	mov	r1, r8
   150f8:	mov	r0, r6
   150fc:	str	ip, [sp, #16]
   15100:	str	fp, [sp, #8]
   15104:	mov	r3, sl
   15108:	mov	r2, r9
   1510c:	bl	11684 <abort@plt+0x964>
   15110:	cmp	r8, r0
   15114:	bhi	15178 <abort@plt+0x4458>
   15118:	ldr	r3, [pc, #164]	; 151c4 <abort@plt+0x44a4>
   1511c:	add	r8, r0, #1
   15120:	cmp	r6, r3
   15124:	str	r8, [r5]
   15128:	beq	15134 <abort@plt+0x4414>
   1512c:	mov	r0, r6
   15130:	bl	1680c <abort@plt+0x5aec>
   15134:	mov	r0, r8
   15138:	bl	15f60 <abort@plt+0x5240>
   1513c:	ldr	lr, [r4, #60]	; 0x3c
   15140:	ldr	ip, [r4, #16]
   15144:	mov	r3, sl
   15148:	mov	r2, r9
   1514c:	mov	r1, r8
   15150:	str	r0, [r5, #4]
   15154:	ldr	r5, [r4, #56]	; 0x38
   15158:	ldr	r4, [sp, #28]
   1515c:	str	fp, [sp, #8]
   15160:	str	r4, [sp, #4]
   15164:	str	lr, [sp, #16]
   15168:	str	r5, [sp, #12]
   1516c:	str	ip, [sp]
   15170:	mov	r6, r0
   15174:	bl	11684 <abort@plt+0x964>
   15178:	ldr	r3, [sp, #24]
   1517c:	mov	r0, r6
   15180:	str	r3, [r7]
   15184:	add	sp, sp, #44	; 0x2c
   15188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1518c:	mov	r3, #8
   15190:	str	r3, [sp]
   15194:	add	r1, sp, #36	; 0x24
   15198:	rsb	r2, r2, #1
   1519c:	mvn	r3, #-2147483648	; 0x80000000
   151a0:	mov	r0, #0
   151a4:	bl	1617c <abort@plt+0x545c>
   151a8:	mov	r5, r0
   151ac:	ldm	r6, {r0, r1}
   151b0:	str	r5, [r4]
   151b4:	stm	r5, {r0, r1}
   151b8:	b	150a0 <abort@plt+0x4380>
   151bc:	ldrdeq	r8, [r2], -r0
   151c0:	andeq	r8, r2, r8, ror #1
   151c4:	andeq	r8, r2, ip, ror #2
   151c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151cc:	sub	sp, sp, #44	; 0x2c
   151d0:	mov	r5, r0
   151d4:	mov	sl, r1
   151d8:	bl	10c84 <__errno_location@plt>
   151dc:	ldr	r4, [pc, #396]	; 15370 <abort@plt+0x4650>
   151e0:	cmn	r5, #-2147483647	; 0x80000001
   151e4:	ldr	r6, [r4]
   151e8:	mov	r8, r0
   151ec:	movne	r0, #0
   151f0:	moveq	r0, #1
   151f4:	ldr	r3, [r8]
   151f8:	orrs	r0, r0, r5, lsr #31
   151fc:	str	r3, [sp, #24]
   15200:	bne	1536c <abort@plt+0x464c>
   15204:	ldr	r2, [r4, #4]
   15208:	cmp	r5, r2
   1520c:	blt	1526c <abort@plt+0x454c>
   15210:	add	r7, r4, #8
   15214:	cmp	r6, r7
   15218:	str	r2, [sp, #36]	; 0x24
   1521c:	beq	1533c <abort@plt+0x461c>
   15220:	mov	r3, #8
   15224:	sub	r2, r5, r2
   15228:	mov	r0, r6
   1522c:	str	r3, [sp]
   15230:	add	r2, r2, #1
   15234:	mvn	r3, #-2147483648	; 0x80000000
   15238:	add	r1, sp, #36	; 0x24
   1523c:	bl	1617c <abort@plt+0x545c>
   15240:	mov	r6, r0
   15244:	str	r0, [r4]
   15248:	ldr	r0, [r4, #4]
   1524c:	ldr	r2, [sp, #36]	; 0x24
   15250:	mov	r1, #0
   15254:	sub	r2, r2, r0
   15258:	add	r0, r6, r0, lsl #3
   1525c:	lsl	r2, r2, #3
   15260:	bl	10c9c <memset@plt>
   15264:	ldr	r3, [sp, #36]	; 0x24
   15268:	str	r3, [r4, #4]
   1526c:	ldr	r2, [r4, #56]	; 0x38
   15270:	add	fp, r6, r5, lsl #3
   15274:	ldr	r1, [r4, #20]
   15278:	ldr	r9, [r6, r5, lsl #3]
   1527c:	ldr	r7, [fp, #4]
   15280:	ldr	r3, [r4, #16]
   15284:	ldr	ip, [r4, #60]	; 0x3c
   15288:	str	r2, [sp, #12]
   1528c:	ldr	r2, [pc, #224]	; 15374 <abort@plt+0x4654>
   15290:	orr	r1, r1, #1
   15294:	str	r1, [sp, #28]
   15298:	str	r1, [sp, #4]
   1529c:	str	r2, [sp, #8]
   152a0:	str	r3, [sp]
   152a4:	mov	r0, r7
   152a8:	mov	r1, r9
   152ac:	str	ip, [sp, #16]
   152b0:	mvn	r3, #0
   152b4:	mov	r2, sl
   152b8:	bl	11684 <abort@plt+0x964>
   152bc:	cmp	r9, r0
   152c0:	bhi	15328 <abort@plt+0x4608>
   152c4:	ldr	r3, [pc, #172]	; 15378 <abort@plt+0x4658>
   152c8:	add	r9, r0, #1
   152cc:	cmp	r7, r3
   152d0:	str	r9, [r6, r5, lsl #3]
   152d4:	beq	152e0 <abort@plt+0x45c0>
   152d8:	mov	r0, r7
   152dc:	bl	1680c <abort@plt+0x5aec>
   152e0:	mov	r0, r9
   152e4:	bl	15f60 <abort@plt+0x5240>
   152e8:	ldr	ip, [r4, #60]	; 0x3c
   152ec:	ldr	r3, [r4, #16]
   152f0:	ldr	lr, [r4, #56]	; 0x38
   152f4:	ldr	r4, [pc, #120]	; 15374 <abort@plt+0x4654>
   152f8:	mov	r2, sl
   152fc:	mov	r1, r9
   15300:	str	r0, [fp, #4]
   15304:	str	r4, [sp, #8]
   15308:	ldr	r4, [sp, #28]
   1530c:	str	r3, [sp]
   15310:	str	r4, [sp, #4]
   15314:	str	ip, [sp, #16]
   15318:	str	lr, [sp, #12]
   1531c:	mvn	r3, #0
   15320:	mov	r7, r0
   15324:	bl	11684 <abort@plt+0x964>
   15328:	ldr	r3, [sp, #24]
   1532c:	mov	r0, r7
   15330:	str	r3, [r8]
   15334:	add	sp, sp, #44	; 0x2c
   15338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1533c:	mov	r3, #8
   15340:	sub	r2, r5, r2
   15344:	str	r3, [sp]
   15348:	add	r1, sp, #36	; 0x24
   1534c:	add	r2, r2, #1
   15350:	mvn	r3, #-2147483648	; 0x80000000
   15354:	bl	1617c <abort@plt+0x545c>
   15358:	mov	r6, r0
   1535c:	ldm	r7, {r0, r1}
   15360:	str	r6, [r4]
   15364:	stm	r6, {r0, r1}
   15368:	b	15248 <abort@plt+0x4528>
   1536c:	bl	10d20 <abort@plt>
   15370:	ldrdeq	r8, [r2], -r0
   15374:	andeq	r8, r2, r8, ror #1
   15378:	andeq	r8, r2, ip, ror #2
   1537c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15380:	sub	sp, sp, #44	; 0x2c
   15384:	mov	sl, r0
   15388:	bl	10c84 <__errno_location@plt>
   1538c:	ldr	r4, [pc, #348]	; 154f0 <abort@plt+0x47d0>
   15390:	ldr	r2, [r4, #4]
   15394:	ldr	r5, [r4]
   15398:	cmp	r2, #0
   1539c:	ldr	r3, [r0]
   153a0:	mov	r8, r0
   153a4:	str	r3, [sp, #28]
   153a8:	bgt	15404 <abort@plt+0x46e4>
   153ac:	add	r6, r4, #8
   153b0:	cmp	r5, r6
   153b4:	str	r2, [sp, #36]	; 0x24
   153b8:	beq	154c0 <abort@plt+0x47a0>
   153bc:	mov	r3, #8
   153c0:	mov	r0, r5
   153c4:	str	r3, [sp]
   153c8:	rsb	r2, r2, #1
   153cc:	mvn	r3, #-2147483648	; 0x80000000
   153d0:	add	r1, sp, #36	; 0x24
   153d4:	bl	1617c <abort@plt+0x545c>
   153d8:	mov	r5, r0
   153dc:	str	r0, [r4]
   153e0:	ldr	r0, [r4, #4]
   153e4:	ldr	r2, [sp, #36]	; 0x24
   153e8:	mov	r1, #0
   153ec:	sub	r2, r2, r0
   153f0:	add	r0, r5, r0, lsl #3
   153f4:	lsl	r2, r2, #3
   153f8:	bl	10c9c <memset@plt>
   153fc:	ldr	r3, [sp, #36]	; 0x24
   15400:	str	r3, [r4, #4]
   15404:	ldr	r7, [r4, #20]
   15408:	ldr	r9, [r5]
   1540c:	ldr	r6, [r5, #4]
   15410:	ldr	r2, [r4, #56]	; 0x38
   15414:	ldr	r3, [r4, #16]
   15418:	ldr	ip, [r4, #60]	; 0x3c
   1541c:	ldr	fp, [pc, #208]	; 154f4 <abort@plt+0x47d4>
   15420:	orr	r7, r7, #1
   15424:	str	r2, [sp, #12]
   15428:	str	r3, [sp]
   1542c:	str	r7, [sp, #4]
   15430:	mov	r1, r9
   15434:	mov	r0, r6
   15438:	str	ip, [sp, #16]
   1543c:	str	fp, [sp, #8]
   15440:	mvn	r3, #0
   15444:	mov	r2, sl
   15448:	bl	11684 <abort@plt+0x964>
   1544c:	cmp	r9, r0
   15450:	bhi	154ac <abort@plt+0x478c>
   15454:	ldr	r3, [pc, #156]	; 154f8 <abort@plt+0x47d8>
   15458:	add	r9, r0, #1
   1545c:	cmp	r6, r3
   15460:	str	r9, [r5]
   15464:	beq	15470 <abort@plt+0x4750>
   15468:	mov	r0, r6
   1546c:	bl	1680c <abort@plt+0x5aec>
   15470:	mov	r0, r9
   15474:	bl	15f60 <abort@plt+0x5240>
   15478:	ldr	ip, [r4, #60]	; 0x3c
   1547c:	ldr	r3, [r4, #16]
   15480:	ldr	lr, [r4, #56]	; 0x38
   15484:	mov	r2, sl
   15488:	mov	r1, r9
   1548c:	str	r0, [r5, #4]
   15490:	str	r3, [sp]
   15494:	stmib	sp, {r7, fp}
   15498:	str	ip, [sp, #16]
   1549c:	str	lr, [sp, #12]
   154a0:	mvn	r3, #0
   154a4:	mov	r6, r0
   154a8:	bl	11684 <abort@plt+0x964>
   154ac:	ldr	r3, [sp, #28]
   154b0:	mov	r0, r6
   154b4:	str	r3, [r8]
   154b8:	add	sp, sp, #44	; 0x2c
   154bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154c0:	mov	r3, #8
   154c4:	str	r3, [sp]
   154c8:	add	r1, sp, #36	; 0x24
   154cc:	rsb	r2, r2, #1
   154d0:	mvn	r3, #-2147483648	; 0x80000000
   154d4:	mov	r0, #0
   154d8:	bl	1617c <abort@plt+0x545c>
   154dc:	mov	r5, r0
   154e0:	ldm	r6, {r0, r1}
   154e4:	str	r5, [r4]
   154e8:	stm	r5, {r0, r1}
   154ec:	b	153e0 <abort@plt+0x46c0>
   154f0:	ldrdeq	r8, [r2], -r0
   154f4:	andeq	r8, r2, r8, ror #1
   154f8:	andeq	r8, r2, ip, ror #2
   154fc:	push	{r4, r5, r6, lr}
   15500:	sub	sp, sp, #32
   15504:	cmp	r1, #0
   15508:	mov	r4, r0
   1550c:	ldr	r5, [sp, #48]	; 0x30
   15510:	ldr	r6, [sp, #52]	; 0x34
   15514:	beq	1582c <abort@plt+0x4b0c>
   15518:	stm	sp, {r2, r3}
   1551c:	mov	r3, r1
   15520:	ldr	r2, [pc, #808]	; 15850 <abort@plt+0x4b30>
   15524:	mov	r1, #1
   15528:	bl	10cc0 <__fprintf_chk@plt>
   1552c:	mov	r2, #5
   15530:	ldr	r1, [pc, #796]	; 15854 <abort@plt+0x4b34>
   15534:	mov	r0, #0
   15538:	bl	10bac <dcgettext@plt>
   1553c:	ldr	r3, [pc, #788]	; 15858 <abort@plt+0x4b38>
   15540:	ldr	r2, [pc, #788]	; 1585c <abort@plt+0x4b3c>
   15544:	str	r3, [sp]
   15548:	mov	r1, #1
   1554c:	mov	r3, r0
   15550:	mov	r0, r4
   15554:	bl	10cc0 <__fprintf_chk@plt>
   15558:	mov	r1, r4
   1555c:	mov	r0, #10
   15560:	bl	10ba0 <fputc_unlocked@plt>
   15564:	mov	r2, #5
   15568:	ldr	r1, [pc, #752]	; 15860 <abort@plt+0x4b40>
   1556c:	mov	r0, #0
   15570:	bl	10bac <dcgettext@plt>
   15574:	mov	r1, #1
   15578:	ldr	r3, [pc, #740]	; 15864 <abort@plt+0x4b44>
   1557c:	mov	r2, r0
   15580:	mov	r0, r4
   15584:	bl	10cc0 <__fprintf_chk@plt>
   15588:	mov	r1, r4
   1558c:	mov	r0, #10
   15590:	bl	10ba0 <fputc_unlocked@plt>
   15594:	cmp	r6, #9
   15598:	ldrls	pc, [pc, r6, lsl #2]
   1559c:	b	15844 <abort@plt+0x4b24>
   155a0:	andeq	r5, r1, r4, lsr #12
   155a4:	andeq	r5, r1, ip, lsr #12
   155a8:	andeq	r5, r1, r8, asr r6
   155ac:	andeq	r5, r1, ip, lsl #13
   155b0:	andeq	r5, r1, r8, asr #13
   155b4:	andeq	r5, r1, r4, lsl #14
   155b8:	andeq	r5, r1, r0, asr #14
   155bc:	andeq	r5, r1, r4, lsl #15
   155c0:	ldrdeq	r5, [r1], -r4
   155c4:	andeq	r5, r1, r8, asr #11
   155c8:	ldr	r1, [pc, #664]	; 15868 <abort@plt+0x4b48>
   155cc:	mov	r2, #5
   155d0:	mov	r0, #0
   155d4:	bl	10bac <dcgettext@plt>
   155d8:	ldr	ip, [r5, #32]
   155dc:	ldr	r1, [r5, #28]
   155e0:	ldr	r2, [r5, #24]
   155e4:	ldr	r3, [r5]
   155e8:	ldr	r6, [r5, #20]
   155ec:	str	ip, [sp, #28]
   155f0:	ldr	lr, [r5, #16]
   155f4:	str	r1, [sp, #24]
   155f8:	ldr	ip, [r5, #12]
   155fc:	str	r2, [sp, #20]
   15600:	ldr	r1, [r5, #8]
   15604:	ldr	r2, [r5, #4]
   15608:	str	r6, [sp, #16]
   1560c:	stmib	sp, {r1, ip, lr}
   15610:	mov	r1, #1
   15614:	str	r2, [sp]
   15618:	mov	r2, r0
   1561c:	mov	r0, r4
   15620:	bl	10cc0 <__fprintf_chk@plt>
   15624:	add	sp, sp, #32
   15628:	pop	{r4, r5, r6, pc}
   1562c:	mov	r2, #5
   15630:	ldr	r1, [pc, #564]	; 1586c <abort@plt+0x4b4c>
   15634:	mov	r0, #0
   15638:	bl	10bac <dcgettext@plt>
   1563c:	ldr	r3, [r5]
   15640:	mov	r1, #1
   15644:	mov	r2, r0
   15648:	mov	r0, r4
   1564c:	add	sp, sp, #32
   15650:	pop	{r4, r5, r6, lr}
   15654:	b	10cc0 <__fprintf_chk@plt>
   15658:	mov	r2, #5
   1565c:	ldr	r1, [pc, #524]	; 15870 <abort@plt+0x4b50>
   15660:	mov	r0, #0
   15664:	bl	10bac <dcgettext@plt>
   15668:	ldr	r2, [r5, #4]
   1566c:	ldr	r3, [r5]
   15670:	mov	r1, #1
   15674:	str	r2, [sp, #48]	; 0x30
   15678:	mov	r2, r0
   1567c:	mov	r0, r4
   15680:	add	sp, sp, #32
   15684:	pop	{r4, r5, r6, lr}
   15688:	b	10cc0 <__fprintf_chk@plt>
   1568c:	mov	r2, #5
   15690:	ldr	r1, [pc, #476]	; 15874 <abort@plt+0x4b54>
   15694:	mov	r0, #0
   15698:	bl	10bac <dcgettext@plt>
   1569c:	ldr	r1, [r5, #8]
   156a0:	ldr	r2, [r5, #4]
   156a4:	ldr	r3, [r5]
   156a8:	str	r1, [sp, #52]	; 0x34
   156ac:	str	r2, [sp, #48]	; 0x30
   156b0:	mov	r1, #1
   156b4:	mov	r2, r0
   156b8:	mov	r0, r4
   156bc:	add	sp, sp, #32
   156c0:	pop	{r4, r5, r6, lr}
   156c4:	b	10cc0 <__fprintf_chk@plt>
   156c8:	mov	r2, #5
   156cc:	ldr	r1, [pc, #420]	; 15878 <abort@plt+0x4b58>
   156d0:	mov	r0, #0
   156d4:	bl	10bac <dcgettext@plt>
   156d8:	ldr	r1, [r5, #8]
   156dc:	ldr	ip, [r5, #12]
   156e0:	ldr	r2, [r5, #4]
   156e4:	ldr	r3, [r5]
   156e8:	stmib	sp, {r1, ip}
   156ec:	str	r2, [sp]
   156f0:	mov	r1, #1
   156f4:	mov	r2, r0
   156f8:	mov	r0, r4
   156fc:	bl	10cc0 <__fprintf_chk@plt>
   15700:	b	15624 <abort@plt+0x4904>
   15704:	mov	r2, #5
   15708:	ldr	r1, [pc, #364]	; 1587c <abort@plt+0x4b5c>
   1570c:	mov	r0, #0
   15710:	bl	10bac <dcgettext@plt>
   15714:	add	r1, r5, #8
   15718:	ldr	r2, [r5, #4]
   1571c:	ldm	r1, {r1, ip, lr}
   15720:	ldr	r3, [r5]
   15724:	str	r2, [sp]
   15728:	stmib	sp, {r1, ip, lr}
   1572c:	mov	r1, #1
   15730:	mov	r2, r0
   15734:	mov	r0, r4
   15738:	bl	10cc0 <__fprintf_chk@plt>
   1573c:	b	15624 <abort@plt+0x4904>
   15740:	mov	r2, #5
   15744:	ldr	r1, [pc, #308]	; 15880 <abort@plt+0x4b60>
   15748:	mov	r0, #0
   1574c:	bl	10bac <dcgettext@plt>
   15750:	add	r1, r5, #8
   15754:	ldr	r2, [r5, #4]
   15758:	ldm	r1, {r1, ip, lr}
   1575c:	ldr	r6, [r5, #20]
   15760:	ldr	r3, [r5]
   15764:	stmib	sp, {r1, ip, lr}
   15768:	mov	r1, #1
   1576c:	str	r2, [sp]
   15770:	str	r6, [sp, #16]
   15774:	mov	r2, r0
   15778:	mov	r0, r4
   1577c:	bl	10cc0 <__fprintf_chk@plt>
   15780:	b	15624 <abort@plt+0x4904>
   15784:	mov	r2, #5
   15788:	ldr	r1, [pc, #244]	; 15884 <abort@plt+0x4b64>
   1578c:	mov	r0, #0
   15790:	bl	10bac <dcgettext@plt>
   15794:	ldr	r2, [r5, #24]
   15798:	ldr	r3, [r5]
   1579c:	ldr	r6, [r5, #20]
   157a0:	ldr	lr, [r5, #16]
   157a4:	ldr	ip, [r5, #12]
   157a8:	str	r2, [sp, #20]
   157ac:	ldr	r1, [r5, #8]
   157b0:	ldr	r2, [r5, #4]
   157b4:	str	r6, [sp, #16]
   157b8:	stmib	sp, {r1, ip, lr}
   157bc:	mov	r1, #1
   157c0:	str	r2, [sp]
   157c4:	mov	r2, r0
   157c8:	mov	r0, r4
   157cc:	bl	10cc0 <__fprintf_chk@plt>
   157d0:	b	15624 <abort@plt+0x4904>
   157d4:	mov	r2, #5
   157d8:	ldr	r1, [pc, #168]	; 15888 <abort@plt+0x4b68>
   157dc:	mov	r0, #0
   157e0:	bl	10bac <dcgettext@plt>
   157e4:	ldr	r1, [r5, #28]
   157e8:	ldr	r2, [r5, #24]
   157ec:	ldr	r3, [r5]
   157f0:	ldr	r6, [r5, #20]
   157f4:	ldr	lr, [r5, #16]
   157f8:	str	r1, [sp, #24]
   157fc:	ldr	ip, [r5, #12]
   15800:	str	r2, [sp, #20]
   15804:	ldr	r1, [r5, #8]
   15808:	ldr	r2, [r5, #4]
   1580c:	str	r6, [sp, #16]
   15810:	stmib	sp, {r1, ip, lr}
   15814:	mov	r1, #1
   15818:	str	r2, [sp]
   1581c:	mov	r2, r0
   15820:	mov	r0, r4
   15824:	bl	10cc0 <__fprintf_chk@plt>
   15828:	b	15624 <abort@plt+0x4904>
   1582c:	str	r3, [sp]
   15830:	mov	r1, #1
   15834:	mov	r3, r2
   15838:	ldr	r2, [pc, #76]	; 1588c <abort@plt+0x4b6c>
   1583c:	bl	10cc0 <__fprintf_chk@plt>
   15840:	b	1552c <abort@plt+0x480c>
   15844:	mov	r2, #5
   15848:	ldr	r1, [pc, #64]	; 15890 <abort@plt+0x4b70>
   1584c:	b	155d0 <abort@plt+0x48b0>
   15850:	strdeq	r7, [r1], -ip
   15854:	andeq	r7, r1, r0, lsl r4
   15858:	andeq	r0, r0, r6, ror #15
   1585c:	andeq	r7, r1, r8, ror #13
   15860:	andeq	r7, r1, r4, lsl r4
   15864:	andeq	r7, r1, r0, asr #9
   15868:	strdeq	r7, [r1], -r0
   1586c:	andeq	r7, r1, r4, ror #9
   15870:	strdeq	r7, [r1], -r4
   15874:	andeq	r7, r1, ip, lsl #10
   15878:	andeq	r7, r1, r8, lsr #10
   1587c:	andeq	r7, r1, r8, asr #10
   15880:	andeq	r7, r1, ip, ror #10
   15884:	muleq	r1, r4, r5
   15888:	andeq	r7, r1, r0, asr #11
   1588c:	andeq	r7, r1, r8, lsl #8
   15890:	andeq	r7, r1, r4, lsr #12
   15894:	push	{r4, r5, lr}
   15898:	sub	sp, sp, #12
   1589c:	ldr	r5, [sp, #24]
   158a0:	ldr	ip, [r5]
   158a4:	cmp	ip, #0
   158a8:	beq	158c4 <abort@plt+0x4ba4>
   158ac:	mov	lr, r5
   158b0:	mov	ip, #0
   158b4:	ldr	r4, [lr, #4]!
   158b8:	add	ip, ip, #1
   158bc:	cmp	r4, #0
   158c0:	bne	158b4 <abort@plt+0x4b94>
   158c4:	stm	sp, {r5, ip}
   158c8:	bl	154fc <abort@plt+0x47dc>
   158cc:	add	sp, sp, #12
   158d0:	pop	{r4, r5, pc}
   158d4:	push	{r4, r5, lr}
   158d8:	sub	sp, sp, #76	; 0x4c
   158dc:	mov	r5, r0
   158e0:	ldr	ip, [sp, #88]	; 0x58
   158e4:	ldr	r0, [ip]
   158e8:	cmp	r0, #0
   158ec:	str	r0, [sp, #32]
   158f0:	beq	15cc4 <abort@plt+0x4fa4>
   158f4:	ldr	r0, [ip, #4]
   158f8:	cmp	r0, #0
   158fc:	str	r0, [sp, #36]	; 0x24
   15900:	beq	15ccc <abort@plt+0x4fac>
   15904:	ldr	r0, [ip, #8]
   15908:	cmp	r0, #0
   1590c:	str	r0, [sp, #40]	; 0x28
   15910:	beq	15cd4 <abort@plt+0x4fb4>
   15914:	ldr	r0, [ip, #12]
   15918:	cmp	r0, #0
   1591c:	str	r0, [sp, #44]	; 0x2c
   15920:	beq	15cdc <abort@plt+0x4fbc>
   15924:	ldr	r0, [ip, #16]
   15928:	cmp	r0, #0
   1592c:	str	r0, [sp, #48]	; 0x30
   15930:	beq	15ce4 <abort@plt+0x4fc4>
   15934:	ldr	r0, [ip, #20]
   15938:	cmp	r0, #0
   1593c:	str	r0, [sp, #52]	; 0x34
   15940:	beq	15cec <abort@plt+0x4fcc>
   15944:	ldr	r0, [ip, #24]
   15948:	cmp	r0, #0
   1594c:	str	r0, [sp, #56]	; 0x38
   15950:	beq	15cf4 <abort@plt+0x4fd4>
   15954:	ldr	r0, [ip, #28]
   15958:	cmp	r0, #0
   1595c:	str	r0, [sp, #60]	; 0x3c
   15960:	beq	15cfc <abort@plt+0x4fdc>
   15964:	ldr	r0, [ip, #32]
   15968:	cmp	r0, #0
   1596c:	str	r0, [sp, #64]	; 0x40
   15970:	beq	15d04 <abort@plt+0x4fe4>
   15974:	ldr	r0, [ip, #36]	; 0x24
   15978:	cmp	r0, #0
   1597c:	movne	r4, #10
   15980:	moveq	r4, #9
   15984:	cmp	r1, #0
   15988:	beq	15c9c <abort@plt+0x4f7c>
   1598c:	stm	sp, {r2, r3}
   15990:	mov	r0, r5
   15994:	mov	r3, r1
   15998:	ldr	r2, [pc, #876]	; 15d0c <abort@plt+0x4fec>
   1599c:	mov	r1, #1
   159a0:	bl	10cc0 <__fprintf_chk@plt>
   159a4:	mov	r2, #5
   159a8:	ldr	r1, [pc, #864]	; 15d10 <abort@plt+0x4ff0>
   159ac:	mov	r0, #0
   159b0:	bl	10bac <dcgettext@plt>
   159b4:	ldr	r3, [pc, #856]	; 15d14 <abort@plt+0x4ff4>
   159b8:	ldr	r2, [pc, #856]	; 15d18 <abort@plt+0x4ff8>
   159bc:	str	r3, [sp]
   159c0:	mov	r1, #1
   159c4:	mov	r3, r0
   159c8:	mov	r0, r5
   159cc:	bl	10cc0 <__fprintf_chk@plt>
   159d0:	mov	r1, r5
   159d4:	mov	r0, #10
   159d8:	bl	10ba0 <fputc_unlocked@plt>
   159dc:	mov	r2, #5
   159e0:	ldr	r1, [pc, #820]	; 15d1c <abort@plt+0x4ffc>
   159e4:	mov	r0, #0
   159e8:	bl	10bac <dcgettext@plt>
   159ec:	mov	r1, #1
   159f0:	ldr	r3, [pc, #808]	; 15d20 <abort@plt+0x5000>
   159f4:	mov	r2, r0
   159f8:	mov	r0, r5
   159fc:	bl	10cc0 <__fprintf_chk@plt>
   15a00:	mov	r1, r5
   15a04:	mov	r0, #10
   15a08:	bl	10ba0 <fputc_unlocked@plt>
   15a0c:	cmp	r4, #9
   15a10:	ldrls	pc, [pc, r4, lsl #2]
   15a14:	b	15cb8 <abort@plt+0x4f98>
   15a18:	muleq	r1, ip, sl
   15a1c:	andeq	r5, r1, r4, lsr #21
   15a20:	ldrdeq	r5, [r1], -r0
   15a24:	andeq	r5, r1, r4, lsl #22
   15a28:	andeq	r5, r1, ip, lsr fp
   15a2c:	andeq	r5, r1, r8, ror fp
   15a30:			; <UNDEFINED> instruction: 0x00015bb4
   15a34:	strdeq	r5, [r1], -r8
   15a38:	andeq	r5, r1, r4, asr #24
   15a3c:	andeq	r5, r1, r0, asr #20
   15a40:	ldr	r1, [pc, #732]	; 15d24 <abort@plt+0x5004>
   15a44:	mov	r2, #5
   15a48:	mov	r0, #0
   15a4c:	bl	10bac <dcgettext@plt>
   15a50:	ldr	ip, [sp, #64]	; 0x40
   15a54:	ldr	r1, [sp, #60]	; 0x3c
   15a58:	ldr	r2, [sp, #56]	; 0x38
   15a5c:	ldr	lr, [sp, #48]	; 0x30
   15a60:	str	ip, [sp, #28]
   15a64:	str	r1, [sp, #24]
   15a68:	ldr	ip, [sp, #44]	; 0x2c
   15a6c:	ldr	r1, [sp, #40]	; 0x28
   15a70:	ldr	r4, [sp, #52]	; 0x34
   15a74:	str	r2, [sp, #20]
   15a78:	ldr	r2, [sp, #36]	; 0x24
   15a7c:	stmib	sp, {r1, ip, lr}
   15a80:	mov	r1, #1
   15a84:	str	r2, [sp]
   15a88:	ldr	r3, [sp, #32]
   15a8c:	str	r4, [sp, #16]
   15a90:	mov	r2, r0
   15a94:	mov	r0, r5
   15a98:	bl	10cc0 <__fprintf_chk@plt>
   15a9c:	add	sp, sp, #76	; 0x4c
   15aa0:	pop	{r4, r5, pc}
   15aa4:	mov	r2, #5
   15aa8:	ldr	r1, [pc, #632]	; 15d28 <abort@plt+0x5008>
   15aac:	mov	r0, #0
   15ab0:	bl	10bac <dcgettext@plt>
   15ab4:	ldr	r3, [sp, #32]
   15ab8:	mov	r1, #1
   15abc:	mov	r2, r0
   15ac0:	mov	r0, r5
   15ac4:	add	sp, sp, #76	; 0x4c
   15ac8:	pop	{r4, r5, lr}
   15acc:	b	10cc0 <__fprintf_chk@plt>
   15ad0:	mov	r2, #5
   15ad4:	ldr	r1, [pc, #592]	; 15d2c <abort@plt+0x500c>
   15ad8:	mov	r0, #0
   15adc:	bl	10bac <dcgettext@plt>
   15ae0:	ldr	r2, [sp, #36]	; 0x24
   15ae4:	ldr	r3, [sp, #32]
   15ae8:	str	r2, [sp, #88]	; 0x58
   15aec:	mov	r1, #1
   15af0:	mov	r2, r0
   15af4:	mov	r0, r5
   15af8:	add	sp, sp, #76	; 0x4c
   15afc:	pop	{r4, r5, lr}
   15b00:	b	10cc0 <__fprintf_chk@plt>
   15b04:	mov	r2, #5
   15b08:	ldr	r1, [pc, #544]	; 15d30 <abort@plt+0x5010>
   15b0c:	mov	r0, #0
   15b10:	bl	10bac <dcgettext@plt>
   15b14:	ldr	r1, [sp, #40]	; 0x28
   15b18:	ldr	r2, [sp, #36]	; 0x24
   15b1c:	str	r1, [sp, #4]
   15b20:	str	r2, [sp]
   15b24:	ldr	r3, [sp, #32]
   15b28:	mov	r1, #1
   15b2c:	mov	r2, r0
   15b30:	mov	r0, r5
   15b34:	bl	10cc0 <__fprintf_chk@plt>
   15b38:	b	15a9c <abort@plt+0x4d7c>
   15b3c:	mov	r2, #5
   15b40:	ldr	r1, [pc, #492]	; 15d34 <abort@plt+0x5014>
   15b44:	mov	r0, #0
   15b48:	bl	10bac <dcgettext@plt>
   15b4c:	ldr	r1, [sp, #40]	; 0x28
   15b50:	ldr	ip, [sp, #44]	; 0x2c
   15b54:	ldr	r2, [sp, #36]	; 0x24
   15b58:	ldr	r3, [sp, #32]
   15b5c:	stmib	sp, {r1, ip}
   15b60:	str	r2, [sp]
   15b64:	mov	r1, #1
   15b68:	mov	r2, r0
   15b6c:	mov	r0, r5
   15b70:	bl	10cc0 <__fprintf_chk@plt>
   15b74:	b	15a9c <abort@plt+0x4d7c>
   15b78:	mov	r2, #5
   15b7c:	ldr	r1, [pc, #436]	; 15d38 <abort@plt+0x5018>
   15b80:	mov	r0, #0
   15b84:	bl	10bac <dcgettext@plt>
   15b88:	add	r1, sp, #40	; 0x28
   15b8c:	ldr	r2, [sp, #36]	; 0x24
   15b90:	ldm	r1, {r1, ip, lr}
   15b94:	ldr	r3, [sp, #32]
   15b98:	str	r2, [sp]
   15b9c:	stmib	sp, {r1, ip, lr}
   15ba0:	mov	r1, #1
   15ba4:	mov	r2, r0
   15ba8:	mov	r0, r5
   15bac:	bl	10cc0 <__fprintf_chk@plt>
   15bb0:	b	15a9c <abort@plt+0x4d7c>
   15bb4:	mov	r2, #5
   15bb8:	ldr	r1, [pc, #380]	; 15d3c <abort@plt+0x501c>
   15bbc:	mov	r0, #0
   15bc0:	bl	10bac <dcgettext@plt>
   15bc4:	add	r1, sp, #40	; 0x28
   15bc8:	ldr	r2, [sp, #36]	; 0x24
   15bcc:	ldm	r1, {r1, ip, lr}
   15bd0:	ldr	r4, [sp, #52]	; 0x34
   15bd4:	str	r2, [sp]
   15bd8:	stmib	sp, {r1, ip, lr}
   15bdc:	mov	r1, #1
   15be0:	ldr	r3, [sp, #32]
   15be4:	str	r4, [sp, #16]
   15be8:	mov	r2, r0
   15bec:	mov	r0, r5
   15bf0:	bl	10cc0 <__fprintf_chk@plt>
   15bf4:	b	15a9c <abort@plt+0x4d7c>
   15bf8:	mov	r2, #5
   15bfc:	ldr	r1, [pc, #316]	; 15d40 <abort@plt+0x5020>
   15c00:	mov	r0, #0
   15c04:	bl	10bac <dcgettext@plt>
   15c08:	add	r1, sp, #40	; 0x28
   15c0c:	ldr	r2, [sp, #56]	; 0x38
   15c10:	ldm	r1, {r1, ip, lr}
   15c14:	ldr	r4, [sp, #52]	; 0x34
   15c18:	str	r2, [sp, #20]
   15c1c:	ldr	r2, [sp, #36]	; 0x24
   15c20:	stmib	sp, {r1, ip, lr}
   15c24:	mov	r1, #1
   15c28:	str	r2, [sp]
   15c2c:	ldr	r3, [sp, #32]
   15c30:	str	r4, [sp, #16]
   15c34:	mov	r2, r0
   15c38:	mov	r0, r5
   15c3c:	bl	10cc0 <__fprintf_chk@plt>
   15c40:	b	15a9c <abort@plt+0x4d7c>
   15c44:	mov	r2, #5
   15c48:	ldr	r1, [pc, #244]	; 15d44 <abort@plt+0x5024>
   15c4c:	mov	r0, #0
   15c50:	bl	10bac <dcgettext@plt>
   15c54:	ldr	r1, [sp, #60]	; 0x3c
   15c58:	ldr	r2, [sp, #56]	; 0x38
   15c5c:	ldr	lr, [sp, #48]	; 0x30
   15c60:	ldr	ip, [sp, #44]	; 0x2c
   15c64:	str	r1, [sp, #24]
   15c68:	ldr	r1, [sp, #40]	; 0x28
   15c6c:	ldr	r4, [sp, #52]	; 0x34
   15c70:	str	r2, [sp, #20]
   15c74:	ldr	r2, [sp, #36]	; 0x24
   15c78:	stmib	sp, {r1, ip, lr}
   15c7c:	mov	r1, #1
   15c80:	str	r2, [sp]
   15c84:	ldr	r3, [sp, #32]
   15c88:	str	r4, [sp, #16]
   15c8c:	mov	r2, r0
   15c90:	mov	r0, r5
   15c94:	bl	10cc0 <__fprintf_chk@plt>
   15c98:	b	15a9c <abort@plt+0x4d7c>
   15c9c:	str	r3, [sp]
   15ca0:	mov	r1, #1
   15ca4:	mov	r3, r2
   15ca8:	mov	r0, r5
   15cac:	ldr	r2, [pc, #148]	; 15d48 <abort@plt+0x5028>
   15cb0:	bl	10cc0 <__fprintf_chk@plt>
   15cb4:	b	159a4 <abort@plt+0x4c84>
   15cb8:	mov	r2, #5
   15cbc:	ldr	r1, [pc, #136]	; 15d4c <abort@plt+0x502c>
   15cc0:	b	15a48 <abort@plt+0x4d28>
   15cc4:	mov	r4, r0
   15cc8:	b	15984 <abort@plt+0x4c64>
   15ccc:	mov	r4, #1
   15cd0:	b	15984 <abort@plt+0x4c64>
   15cd4:	mov	r4, #2
   15cd8:	b	15984 <abort@plt+0x4c64>
   15cdc:	mov	r4, #3
   15ce0:	b	15984 <abort@plt+0x4c64>
   15ce4:	mov	r4, #4
   15ce8:	b	15984 <abort@plt+0x4c64>
   15cec:	mov	r4, #5
   15cf0:	b	15984 <abort@plt+0x4c64>
   15cf4:	mov	r4, #6
   15cf8:	b	15984 <abort@plt+0x4c64>
   15cfc:	mov	r4, #7
   15d00:	b	15984 <abort@plt+0x4c64>
   15d04:	mov	r4, #8
   15d08:	b	15984 <abort@plt+0x4c64>
   15d0c:	strdeq	r7, [r1], -ip
   15d10:	andeq	r7, r1, r0, lsl r4
   15d14:	andeq	r0, r0, r6, ror #15
   15d18:	andeq	r7, r1, r8, ror #13
   15d1c:	andeq	r7, r1, r4, lsl r4
   15d20:	andeq	r7, r1, r0, asr #9
   15d24:	strdeq	r7, [r1], -r0
   15d28:	andeq	r7, r1, r4, ror #9
   15d2c:	strdeq	r7, [r1], -r4
   15d30:	andeq	r7, r1, ip, lsl #10
   15d34:	andeq	r7, r1, r8, lsr #10
   15d38:	andeq	r7, r1, r8, asr #10
   15d3c:	andeq	r7, r1, ip, ror #10
   15d40:	muleq	r1, r4, r5
   15d44:	andeq	r7, r1, r0, asr #11
   15d48:	andeq	r7, r1, r8, lsl #8
   15d4c:	andeq	r7, r1, r4, lsr #12
   15d50:	push	{r3}		; (str r3, [sp, #-4]!)
   15d54:	push	{lr}		; (str lr, [sp, #-4]!)
   15d58:	sub	sp, sp, #56	; 0x38
   15d5c:	add	r3, sp, #64	; 0x40
   15d60:	ldr	ip, [sp, #64]	; 0x40
   15d64:	str	r3, [sp, #12]
   15d68:	cmp	ip, #0
   15d6c:	str	ip, [sp, #16]
   15d70:	beq	15e08 <abort@plt+0x50e8>
   15d74:	ldr	ip, [sp, #68]	; 0x44
   15d78:	cmp	ip, #0
   15d7c:	str	ip, [sp, #20]
   15d80:	beq	15e28 <abort@plt+0x5108>
   15d84:	ldr	ip, [sp, #72]	; 0x48
   15d88:	cmp	ip, #0
   15d8c:	str	ip, [sp, #24]
   15d90:	beq	15e30 <abort@plt+0x5110>
   15d94:	ldr	ip, [sp, #76]	; 0x4c
   15d98:	cmp	ip, #0
   15d9c:	str	ip, [sp, #28]
   15da0:	beq	15e38 <abort@plt+0x5118>
   15da4:	ldr	ip, [sp, #80]	; 0x50
   15da8:	cmp	ip, #0
   15dac:	str	ip, [sp, #32]
   15db0:	beq	15e40 <abort@plt+0x5120>
   15db4:	ldr	ip, [sp, #84]	; 0x54
   15db8:	cmp	ip, #0
   15dbc:	str	ip, [sp, #36]	; 0x24
   15dc0:	beq	15e48 <abort@plt+0x5128>
   15dc4:	ldr	ip, [sp, #88]	; 0x58
   15dc8:	cmp	ip, #0
   15dcc:	str	ip, [sp, #40]	; 0x28
   15dd0:	beq	15e50 <abort@plt+0x5130>
   15dd4:	ldr	ip, [sp, #92]	; 0x5c
   15dd8:	cmp	ip, #0
   15ddc:	str	ip, [sp, #44]	; 0x2c
   15de0:	beq	15e58 <abort@plt+0x5138>
   15de4:	ldr	ip, [sp, #96]	; 0x60
   15de8:	cmp	ip, #0
   15dec:	str	ip, [sp, #48]	; 0x30
   15df0:	beq	15e60 <abort@plt+0x5140>
   15df4:	ldr	ip, [sp, #100]	; 0x64
   15df8:	cmp	ip, #0
   15dfc:	str	ip, [sp, #52]	; 0x34
   15e00:	movne	ip, #10
   15e04:	moveq	ip, #9
   15e08:	add	r3, sp, #16
   15e0c:	stm	sp, {r3, ip}
   15e10:	ldr	r3, [sp, #60]	; 0x3c
   15e14:	bl	154fc <abort@plt+0x47dc>
   15e18:	add	sp, sp, #56	; 0x38
   15e1c:	pop	{lr}		; (ldr lr, [sp], #4)
   15e20:	add	sp, sp, #4
   15e24:	bx	lr
   15e28:	mov	ip, #1
   15e2c:	b	15e08 <abort@plt+0x50e8>
   15e30:	mov	ip, #2
   15e34:	b	15e08 <abort@plt+0x50e8>
   15e38:	mov	ip, #3
   15e3c:	b	15e08 <abort@plt+0x50e8>
   15e40:	mov	ip, #4
   15e44:	b	15e08 <abort@plt+0x50e8>
   15e48:	mov	ip, #5
   15e4c:	b	15e08 <abort@plt+0x50e8>
   15e50:	mov	ip, #6
   15e54:	b	15e08 <abort@plt+0x50e8>
   15e58:	mov	ip, #7
   15e5c:	b	15e08 <abort@plt+0x50e8>
   15e60:	mov	ip, #8
   15e64:	b	15e08 <abort@plt+0x50e8>
   15e68:	ldr	r3, [pc, #116]	; 15ee4 <abort@plt+0x51c4>
   15e6c:	push	{r4, lr}
   15e70:	mov	r0, #10
   15e74:	ldr	r1, [r3]
   15e78:	bl	10ba0 <fputc_unlocked@plt>
   15e7c:	mov	r2, #5
   15e80:	ldr	r1, [pc, #96]	; 15ee8 <abort@plt+0x51c8>
   15e84:	mov	r0, #0
   15e88:	bl	10bac <dcgettext@plt>
   15e8c:	ldr	r2, [pc, #88]	; 15eec <abort@plt+0x51cc>
   15e90:	mov	r1, r0
   15e94:	mov	r0, #1
   15e98:	bl	10ca8 <__printf_chk@plt>
   15e9c:	mov	r2, #5
   15ea0:	ldr	r1, [pc, #72]	; 15ef0 <abort@plt+0x51d0>
   15ea4:	mov	r0, #0
   15ea8:	bl	10bac <dcgettext@plt>
   15eac:	ldr	r3, [pc, #64]	; 15ef4 <abort@plt+0x51d4>
   15eb0:	ldr	r2, [pc, #64]	; 15ef8 <abort@plt+0x51d8>
   15eb4:	mov	r1, r0
   15eb8:	mov	r0, #1
   15ebc:	bl	10ca8 <__printf_chk@plt>
   15ec0:	mov	r2, #5
   15ec4:	ldr	r1, [pc, #48]	; 15efc <abort@plt+0x51dc>
   15ec8:	mov	r0, #0
   15ecc:	bl	10bac <dcgettext@plt>
   15ed0:	ldr	r2, [pc, #40]	; 15f00 <abort@plt+0x51e0>
   15ed4:	pop	{r4, lr}
   15ed8:	mov	r1, r0
   15edc:	mov	r0, #1
   15ee0:	b	10ca8 <__printf_chk@plt>
   15ee4:	andeq	r8, r2, r4, lsr #2
   15ee8:	andeq	r7, r1, r0, ror #12
   15eec:	andeq	r7, r1, r4, ror r6
   15ef0:	andeq	r7, r1, ip, lsl #13
   15ef4:	strdeq	r7, [r1], -r4
   15ef8:	andeq	r7, r1, ip, lsl r1
   15efc:	andeq	r7, r1, r0, lsr #13
   15f00:	andeq	r7, r1, r8, asr #13
   15f04:	push	{r4, r5, r6, lr}
   15f08:	mov	r6, r0
   15f0c:	mov	r5, r1
   15f10:	mov	r4, r2
   15f14:	bl	1698c <abort@plt+0x5c6c>
   15f18:	cmp	r0, #0
   15f1c:	popne	{r4, r5, r6, pc}
   15f20:	cmp	r6, #0
   15f24:	beq	15f34 <abort@plt+0x5214>
   15f28:	cmp	r5, #0
   15f2c:	cmpne	r4, #0
   15f30:	popeq	{r4, r5, r6, pc}
   15f34:	bl	16580 <abort@plt+0x5860>
   15f38:	push	{r4, lr}
   15f3c:	bl	16608 <abort@plt+0x58e8>
   15f40:	cmp	r0, #0
   15f44:	popne	{r4, pc}
   15f48:	bl	16580 <abort@plt+0x5860>
   15f4c:	push	{r4, lr}
   15f50:	bl	16608 <abort@plt+0x58e8>
   15f54:	cmp	r0, #0
   15f58:	popne	{r4, pc}
   15f5c:	bl	16580 <abort@plt+0x5860>
   15f60:	push	{r4, lr}
   15f64:	bl	16608 <abort@plt+0x58e8>
   15f68:	cmp	r0, #0
   15f6c:	popne	{r4, pc}
   15f70:	bl	16580 <abort@plt+0x5860>
   15f74:	push	{r4, r5, r6, lr}
   15f78:	mov	r5, r0
   15f7c:	mov	r4, r1
   15f80:	bl	16634 <abort@plt+0x5914>
   15f84:	cmp	r0, #0
   15f88:	popne	{r4, r5, r6, pc}
   15f8c:	adds	r4, r4, #0
   15f90:	movne	r4, #1
   15f94:	cmp	r5, #0
   15f98:	orreq	r4, r4, #1
   15f9c:	cmp	r4, #0
   15fa0:	popeq	{r4, r5, r6, pc}
   15fa4:	bl	16580 <abort@plt+0x5860>
   15fa8:	push	{r4, lr}
   15fac:	cmp	r1, #0
   15fb0:	orreq	r1, r1, #1
   15fb4:	bl	16634 <abort@plt+0x5914>
   15fb8:	cmp	r0, #0
   15fbc:	popne	{r4, pc}
   15fc0:	bl	16580 <abort@plt+0x5860>
   15fc4:	push	{r4, r5, r6, lr}
   15fc8:	mov	r6, r0
   15fcc:	mov	r5, r1
   15fd0:	mov	r4, r2
   15fd4:	bl	1698c <abort@plt+0x5c6c>
   15fd8:	cmp	r0, #0
   15fdc:	popne	{r4, r5, r6, pc}
   15fe0:	cmp	r6, #0
   15fe4:	beq	15ff4 <abort@plt+0x52d4>
   15fe8:	cmp	r5, #0
   15fec:	cmpne	r4, #0
   15ff0:	popeq	{r4, r5, r6, pc}
   15ff4:	bl	16580 <abort@plt+0x5860>
   15ff8:	cmp	r2, #0
   15ffc:	cmpne	r1, #0
   16000:	moveq	r2, #1
   16004:	moveq	r1, r2
   16008:	push	{r4, lr}
   1600c:	bl	1698c <abort@plt+0x5c6c>
   16010:	cmp	r0, #0
   16014:	popne	{r4, pc}
   16018:	bl	16580 <abort@plt+0x5860>
   1601c:	push	{r4, lr}
   16020:	mov	r2, r1
   16024:	mov	r1, r0
   16028:	mov	r0, #0
   1602c:	bl	1698c <abort@plt+0x5c6c>
   16030:	cmp	r0, #0
   16034:	popne	{r4, pc}
   16038:	bl	16580 <abort@plt+0x5860>
   1603c:	cmp	r1, #0
   16040:	cmpne	r0, #0
   16044:	moveq	r2, #1
   16048:	movne	r2, r1
   1604c:	moveq	r1, r2
   16050:	movne	r1, r0
   16054:	push	{r4, lr}
   16058:	mov	r0, #0
   1605c:	bl	1698c <abort@plt+0x5c6c>
   16060:	cmp	r0, #0
   16064:	popne	{r4, pc}
   16068:	bl	16580 <abort@plt+0x5860>
   1606c:	cmp	r0, #0
   16070:	push	{r4, r5, r6, lr}
   16074:	mov	r5, r1
   16078:	ldr	r4, [r1]
   1607c:	beq	160b8 <abort@plt+0x5398>
   16080:	lsr	r2, r4, #1
   16084:	add	r3, r2, #1
   16088:	mvn	r3, r3
   1608c:	cmp	r4, r3
   16090:	bhi	160d4 <abort@plt+0x53b4>
   16094:	add	r4, r4, #1
   16098:	add	r4, r4, r2
   1609c:	mov	r1, r4
   160a0:	mov	r2, #1
   160a4:	bl	1698c <abort@plt+0x5c6c>
   160a8:	cmp	r0, #0
   160ac:	beq	160d8 <abort@plt+0x53b8>
   160b0:	str	r4, [r5]
   160b4:	pop	{r4, r5, r6, pc}
   160b8:	cmp	r4, #0
   160bc:	moveq	r4, #64	; 0x40
   160c0:	mov	r1, r4
   160c4:	mov	r2, #1
   160c8:	bl	1698c <abort@plt+0x5c6c>
   160cc:	cmp	r0, #0
   160d0:	bne	160b0 <abort@plt+0x5390>
   160d4:	bl	16580 <abort@plt+0x5860>
   160d8:	cmp	r4, #0
   160dc:	bne	160d4 <abort@plt+0x53b4>
   160e0:	str	r4, [r5]
   160e4:	pop	{r4, r5, r6, pc}
   160e8:	cmp	r0, #0
   160ec:	push	{r4, r5, r6, lr}
   160f0:	mov	r5, r1
   160f4:	ldr	r4, [r1]
   160f8:	mov	r6, r2
   160fc:	beq	16140 <abort@plt+0x5420>
   16100:	lsr	r1, r4, #1
   16104:	add	r3, r1, #1
   16108:	mvn	r3, r3
   1610c:	cmp	r4, r3
   16110:	bhi	16178 <abort@plt+0x5458>
   16114:	add	r4, r4, #1
   16118:	add	r4, r4, r1
   1611c:	mov	r1, r4
   16120:	bl	1698c <abort@plt+0x5c6c>
   16124:	cmp	r0, #0
   16128:	bne	16138 <abort@plt+0x5418>
   1612c:	cmp	r4, #0
   16130:	cmpne	r6, #0
   16134:	bne	16178 <abort@plt+0x5458>
   16138:	str	r4, [r5]
   1613c:	pop	{r4, r5, r6, pc}
   16140:	cmp	r4, #0
   16144:	bne	16160 <abort@plt+0x5440>
   16148:	mov	r1, r2
   1614c:	mov	r0, #64	; 0x40
   16150:	bl	16acc <abort@plt+0x5dac>
   16154:	cmp	r0, #0
   16158:	movne	r4, r0
   1615c:	addeq	r4, r0, #1
   16160:	mov	r2, r6
   16164:	mov	r1, r4
   16168:	mov	r0, #0
   1616c:	bl	1698c <abort@plt+0x5c6c>
   16170:	cmp	r0, #0
   16174:	bne	16138 <abort@plt+0x5418>
   16178:	bl	16580 <abort@plt+0x5860>
   1617c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16180:	sub	sp, sp, #12
   16184:	ldr	r6, [r1]
   16188:	mov	r8, r1
   1618c:	mov	r9, r0
   16190:	asrs	r4, r6, #1
   16194:	mov	sl, r2
   16198:	mov	fp, r3
   1619c:	ldr	r7, [sp, #48]	; 0x30
   161a0:	bmi	1631c <abort@plt+0x55fc>
   161a4:	mvn	r1, #-2147483648	; 0x80000000
   161a8:	sub	r1, r1, r4
   161ac:	cmp	r6, r1
   161b0:	movle	r1, #0
   161b4:	movgt	r1, #1
   161b8:	mvn	r3, fp
   161bc:	cmp	r1, #0
   161c0:	addeq	r4, r4, r6
   161c4:	mvnne	r4, #-2147483648	; 0x80000000
   161c8:	lsr	r3, r3, #31
   161cc:	cmp	fp, r4
   161d0:	movge	r2, #0
   161d4:	andlt	r2, r3, #1
   161d8:	cmp	r2, #0
   161dc:	beq	162cc <abort@plt+0x55ac>
   161e0:	cmp	r7, #0
   161e4:	blt	163b4 <abort@plt+0x5694>
   161e8:	bne	163ac <abort@plt+0x568c>
   161ec:	mov	r5, #64	; 0x40
   161f0:	mov	r1, r7
   161f4:	mov	r0, r5
   161f8:	str	r3, [sp, #4]
   161fc:	bl	16cd8 <abort@plt+0x5fb8>
   16200:	mov	r1, r7
   16204:	mov	r4, r0
   16208:	mov	r0, r5
   1620c:	bl	16ef8 <abort@plt+0x61d8>
   16210:	ldr	r3, [sp, #4]
   16214:	sub	r5, r5, r1
   16218:	cmp	r9, #0
   1621c:	sub	r2, r4, r6
   16220:	streq	r9, [r8]
   16224:	cmp	r2, sl
   16228:	bge	162ac <abort@plt+0x558c>
   1622c:	cmp	sl, #0
   16230:	blt	1634c <abort@plt+0x562c>
   16234:	cmp	r6, #0
   16238:	blt	16258 <abort@plt+0x5538>
   1623c:	mvn	r2, #-2147483648	; 0x80000000
   16240:	sub	r2, r2, sl
   16244:	cmp	r6, r2
   16248:	movle	r2, #0
   1624c:	movgt	r2, #1
   16250:	cmp	r2, #0
   16254:	bne	16348 <abort@plt+0x5628>
   16258:	add	r6, r6, sl
   1625c:	cmp	fp, r6
   16260:	movge	r3, #0
   16264:	andlt	r3, r3, #1
   16268:	cmp	r3, #0
   1626c:	mov	r4, r6
   16270:	bne	16348 <abort@plt+0x5628>
   16274:	cmp	r7, #0
   16278:	blt	16360 <abort@plt+0x5640>
   1627c:	beq	162a8 <abort@plt+0x5588>
   16280:	cmp	r6, #0
   16284:	blt	16404 <abort@plt+0x56e4>
   16288:	mov	r1, r7
   1628c:	mvn	r0, #-2147483648	; 0x80000000
   16290:	bl	16cd8 <abort@plt+0x5fb8>
   16294:	cmp	r6, r0
   16298:	movle	r0, #0
   1629c:	movgt	r0, #1
   162a0:	cmp	r0, #0
   162a4:	bne	16348 <abort@plt+0x5628>
   162a8:	mul	r5, r6, r7
   162ac:	mov	r1, r5
   162b0:	mov	r0, r9
   162b4:	bl	16634 <abort@plt+0x5914>
   162b8:	cmp	r0, #0
   162bc:	beq	16330 <abort@plt+0x5610>
   162c0:	str	r4, [r8]
   162c4:	add	sp, sp, #12
   162c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162cc:	cmp	r7, #0
   162d0:	blt	1638c <abort@plt+0x566c>
   162d4:	beq	161ec <abort@plt+0x54cc>
   162d8:	cmp	r4, #0
   162dc:	blt	163bc <abort@plt+0x569c>
   162e0:	mov	r1, r7
   162e4:	mvn	r0, #-2147483648	; 0x80000000
   162e8:	str	r3, [sp, #4]
   162ec:	bl	16cd8 <abort@plt+0x5fb8>
   162f0:	ldr	r3, [sp, #4]
   162f4:	cmp	r0, r4
   162f8:	movge	r0, #0
   162fc:	movlt	r0, #1
   16300:	cmp	r0, #0
   16304:	mvnne	r5, #-2147483648	; 0x80000000
   16308:	bne	161f0 <abort@plt+0x54d0>
   1630c:	mul	r5, r7, r4
   16310:	cmp	r5, #63	; 0x3f
   16314:	bgt	16218 <abort@plt+0x54f8>
   16318:	b	161ec <abort@plt+0x54cc>
   1631c:	rsb	r1, r4, #-2147483648	; 0x80000000
   16320:	cmp	r6, r1
   16324:	movge	r1, #0
   16328:	movlt	r1, #1
   1632c:	b	161b8 <abort@plt+0x5498>
   16330:	adds	r5, r5, #0
   16334:	movne	r5, #1
   16338:	cmp	r9, #0
   1633c:	orreq	r5, r5, #1
   16340:	cmp	r5, #0
   16344:	beq	162c0 <abort@plt+0x55a0>
   16348:	bl	16580 <abort@plt+0x5860>
   1634c:	rsb	r2, sl, #-2147483648	; 0x80000000
   16350:	cmp	r6, r2
   16354:	movge	r2, #0
   16358:	movlt	r2, #1
   1635c:	b	16250 <abort@plt+0x5530>
   16360:	cmp	r6, #0
   16364:	blt	163e8 <abort@plt+0x56c8>
   16368:	cmn	r7, #1
   1636c:	beq	162a8 <abort@plt+0x5588>
   16370:	mov	r1, r7
   16374:	mov	r0, #-2147483648	; 0x80000000
   16378:	bl	16cd8 <abort@plt+0x5fb8>
   1637c:	cmp	r6, r0
   16380:	movle	r0, #0
   16384:	movgt	r0, #1
   16388:	b	162a0 <abort@plt+0x5580>
   1638c:	cmp	r4, #0
   16390:	blt	16428 <abort@plt+0x5708>
   16394:	cmn	r7, #1
   16398:	beq	1630c <abort@plt+0x55ec>
   1639c:	str	r3, [sp, #4]
   163a0:	mov	r1, r7
   163a4:	mov	r0, #-2147483648	; 0x80000000
   163a8:	b	162ec <abort@plt+0x55cc>
   163ac:	mov	r4, fp
   163b0:	b	162e0 <abort@plt+0x55c0>
   163b4:	mov	r4, fp
   163b8:	b	16394 <abort@plt+0x5674>
   163bc:	cmn	r4, #1
   163c0:	beq	1630c <abort@plt+0x55ec>
   163c4:	mov	r1, r4
   163c8:	mov	r0, #-2147483648	; 0x80000000
   163cc:	str	r3, [sp, #4]
   163d0:	bl	16cd8 <abort@plt+0x5fb8>
   163d4:	ldr	r3, [sp, #4]
   163d8:	cmp	r7, r0
   163dc:	movle	r0, #0
   163e0:	movgt	r0, #1
   163e4:	b	16300 <abort@plt+0x55e0>
   163e8:	mov	r1, r7
   163ec:	mvn	r0, #-2147483648	; 0x80000000
   163f0:	bl	16cd8 <abort@plt+0x5fb8>
   163f4:	cmp	r6, r0
   163f8:	movge	r0, #0
   163fc:	movlt	r0, #1
   16400:	b	162a0 <abort@plt+0x5580>
   16404:	cmn	r6, #1
   16408:	beq	162a8 <abort@plt+0x5588>
   1640c:	mov	r1, r6
   16410:	mov	r0, #-2147483648	; 0x80000000
   16414:	bl	16cd8 <abort@plt+0x5fb8>
   16418:	cmp	r7, r0
   1641c:	movle	r0, #0
   16420:	movgt	r0, #1
   16424:	b	162a0 <abort@plt+0x5580>
   16428:	mov	r1, r7
   1642c:	mvn	r0, #-2147483648	; 0x80000000
   16430:	str	r3, [sp, #4]
   16434:	bl	16cd8 <abort@plt+0x5fb8>
   16438:	ldr	r3, [sp, #4]
   1643c:	cmp	r0, r4
   16440:	movle	r0, #0
   16444:	movgt	r0, #1
   16448:	b	16300 <abort@plt+0x55e0>
   1644c:	push	{r4, lr}
   16450:	mov	r1, #1
   16454:	bl	165c0 <abort@plt+0x58a0>
   16458:	cmp	r0, #0
   1645c:	popne	{r4, pc}
   16460:	bl	16580 <abort@plt+0x5860>
   16464:	push	{r4, lr}
   16468:	mov	r1, #1
   1646c:	bl	165c0 <abort@plt+0x58a0>
   16470:	cmp	r0, #0
   16474:	popne	{r4, pc}
   16478:	bl	16580 <abort@plt+0x5860>
   1647c:	push	{r4, lr}
   16480:	bl	165c0 <abort@plt+0x58a0>
   16484:	cmp	r0, #0
   16488:	popne	{r4, pc}
   1648c:	bl	16580 <abort@plt+0x5860>
   16490:	push	{r4, lr}
   16494:	bl	165c0 <abort@plt+0x58a0>
   16498:	cmp	r0, #0
   1649c:	popne	{r4, pc}
   164a0:	bl	16580 <abort@plt+0x5860>
   164a4:	push	{r4, r5, r6, lr}
   164a8:	mov	r6, r0
   164ac:	mov	r0, r1
   164b0:	mov	r4, r1
   164b4:	bl	16608 <abort@plt+0x58e8>
   164b8:	subs	r5, r0, #0
   164bc:	beq	164d4 <abort@plt+0x57b4>
   164c0:	mov	r2, r4
   164c4:	mov	r1, r6
   164c8:	bl	10b70 <memcpy@plt>
   164cc:	mov	r0, r5
   164d0:	pop	{r4, r5, r6, pc}
   164d4:	bl	16580 <abort@plt+0x5860>
   164d8:	push	{r4, r5, r6, lr}
   164dc:	mov	r6, r0
   164e0:	mov	r0, r1
   164e4:	mov	r4, r1
   164e8:	bl	16608 <abort@plt+0x58e8>
   164ec:	subs	r5, r0, #0
   164f0:	beq	16508 <abort@plt+0x57e8>
   164f4:	mov	r2, r4
   164f8:	mov	r1, r6
   164fc:	bl	10b70 <memcpy@plt>
   16500:	mov	r0, r5
   16504:	pop	{r4, r5, r6, pc}
   16508:	bl	16580 <abort@plt+0x5860>
   1650c:	push	{r4, r5, r6, lr}
   16510:	mov	r6, r0
   16514:	add	r0, r1, #1
   16518:	mov	r4, r1
   1651c:	bl	16608 <abort@plt+0x58e8>
   16520:	subs	r5, r0, #0
   16524:	beq	16544 <abort@plt+0x5824>
   16528:	mov	r3, #0
   1652c:	mov	r1, r6
   16530:	strb	r3, [r5, r4]
   16534:	mov	r2, r4
   16538:	bl	10b70 <memcpy@plt>
   1653c:	mov	r0, r5
   16540:	pop	{r4, r5, r6, pc}
   16544:	bl	16580 <abort@plt+0x5860>
   16548:	push	{r4, r5, r6, lr}
   1654c:	mov	r6, r0
   16550:	bl	10c78 <strlen@plt>
   16554:	add	r4, r0, #1
   16558:	mov	r0, r4
   1655c:	bl	16608 <abort@plt+0x58e8>
   16560:	subs	r5, r0, #0
   16564:	beq	1657c <abort@plt+0x585c>
   16568:	mov	r2, r4
   1656c:	mov	r1, r6
   16570:	bl	10b70 <memcpy@plt>
   16574:	mov	r0, r5
   16578:	pop	{r4, r5, r6, pc}
   1657c:	bl	16580 <abort@plt+0x5860>
   16580:	ldr	r3, [pc, #44]	; 165b4 <abort@plt+0x5894>
   16584:	push	{r4, lr}
   16588:	mov	r2, #5
   1658c:	ldr	r1, [pc, #36]	; 165b8 <abort@plt+0x5898>
   16590:	mov	r0, #0
   16594:	ldr	r4, [r3]
   16598:	bl	10bac <dcgettext@plt>
   1659c:	ldr	r2, [pc, #24]	; 165bc <abort@plt+0x589c>
   165a0:	mov	r1, #0
   165a4:	mov	r3, r0
   165a8:	mov	r0, r4
   165ac:	bl	10c18 <error@plt>
   165b0:	bl	10d20 <abort@plt>
   165b4:	andeq	r8, r2, ip, asr #1
   165b8:	andeq	r7, r1, r8, lsl r7
   165bc:	muleq	r1, r8, r2
   165c0:	cmp	r1, #0
   165c4:	cmpne	r0, #0
   165c8:	moveq	r1, #1
   165cc:	moveq	r0, r1
   165d0:	umull	r2, r3, r0, r1
   165d4:	adds	r3, r3, #0
   165d8:	movne	r3, #1
   165dc:	cmp	r2, #0
   165e0:	blt	165f0 <abort@plt+0x58d0>
   165e4:	cmp	r3, #0
   165e8:	bne	165f0 <abort@plt+0x58d0>
   165ec:	b	10b1c <calloc@plt>
   165f0:	push	{r4, lr}
   165f4:	bl	10c84 <__errno_location@plt>
   165f8:	mov	r3, #12
   165fc:	str	r3, [r0]
   16600:	mov	r0, #0
   16604:	pop	{r4, pc}
   16608:	cmp	r0, #0
   1660c:	moveq	r0, #1
   16610:	cmp	r0, #0
   16614:	blt	1661c <abort@plt+0x58fc>
   16618:	b	10c24 <malloc@plt>
   1661c:	push	{r4, lr}
   16620:	bl	10c84 <__errno_location@plt>
   16624:	mov	r3, #12
   16628:	str	r3, [r0]
   1662c:	mov	r0, #0
   16630:	pop	{r4, pc}
   16634:	cmp	r0, #0
   16638:	beq	1665c <abort@plt+0x593c>
   1663c:	cmp	r1, #0
   16640:	push	{lr}		; (str lr, [sp, #-4]!)
   16644:	sub	sp, sp, #12
   16648:	beq	16664 <abort@plt+0x5944>
   1664c:	blt	1667c <abort@plt+0x595c>
   16650:	add	sp, sp, #12
   16654:	pop	{lr}		; (ldr lr, [sp], #4)
   16658:	b	10bb8 <realloc@plt>
   1665c:	mov	r0, r1
   16660:	b	16608 <abort@plt+0x58e8>
   16664:	str	r1, [sp, #4]
   16668:	bl	1680c <abort@plt+0x5aec>
   1666c:	ldr	r3, [sp, #4]
   16670:	mov	r0, r3
   16674:	add	sp, sp, #12
   16678:	pop	{pc}		; (ldr pc, [sp], #4)
   1667c:	bl	10c84 <__errno_location@plt>
   16680:	mov	r2, #12
   16684:	mov	r3, #0
   16688:	str	r2, [r0]
   1668c:	b	16670 <abort@plt+0x5950>
   16690:	push	{r4, r5, r6, lr}
   16694:	mov	r4, r0
   16698:	bl	10c00 <__fpending@plt>
   1669c:	ldr	r5, [r4]
   166a0:	and	r5, r5, #32
   166a4:	mov	r6, r0
   166a8:	mov	r0, r4
   166ac:	bl	1670c <abort@plt+0x59ec>
   166b0:	cmp	r5, #0
   166b4:	mov	r4, r0
   166b8:	bne	166d8 <abort@plt+0x59b8>
   166bc:	cmp	r0, #0
   166c0:	beq	166d0 <abort@plt+0x59b0>
   166c4:	cmp	r6, #0
   166c8:	beq	166f4 <abort@plt+0x59d4>
   166cc:	mvn	r4, #0
   166d0:	mov	r0, r4
   166d4:	pop	{r4, r5, r6, pc}
   166d8:	cmp	r0, #0
   166dc:	bne	166cc <abort@plt+0x59ac>
   166e0:	bl	10c84 <__errno_location@plt>
   166e4:	str	r4, [r0]
   166e8:	mvn	r4, #0
   166ec:	mov	r0, r4
   166f0:	pop	{r4, r5, r6, pc}
   166f4:	bl	10c84 <__errno_location@plt>
   166f8:	ldr	r4, [r0]
   166fc:	subs	r4, r4, #9
   16700:	mvnne	r4, #0
   16704:	mov	r0, r4
   16708:	pop	{r4, r5, r6, pc}
   1670c:	push	{r4, r5, lr}
   16710:	sub	sp, sp, #12
   16714:	mov	r4, r0
   16718:	bl	10cb4 <fileno@plt>
   1671c:	cmp	r0, #0
   16720:	mov	r0, r4
   16724:	blt	167a0 <abort@plt+0x5a80>
   16728:	bl	10c3c <__freading@plt>
   1672c:	cmp	r0, #0
   16730:	bne	1676c <abort@plt+0x5a4c>
   16734:	mov	r0, r4
   16738:	bl	167ac <abort@plt+0x5a8c>
   1673c:	cmp	r0, #0
   16740:	beq	1679c <abort@plt+0x5a7c>
   16744:	bl	10c84 <__errno_location@plt>
   16748:	mov	r5, r0
   1674c:	mov	r0, r4
   16750:	ldr	r4, [r5]
   16754:	bl	10ccc <fclose@plt>
   16758:	cmp	r4, #0
   1675c:	mvnne	r0, #0
   16760:	strne	r4, [r5]
   16764:	add	sp, sp, #12
   16768:	pop	{r4, r5, pc}
   1676c:	mov	r0, r4
   16770:	bl	10cb4 <fileno@plt>
   16774:	mov	r3, #1
   16778:	str	r3, [sp]
   1677c:	mov	r2, #0
   16780:	mov	r3, #0
   16784:	bl	10be8 <lseek64@plt>
   16788:	mvn	r3, #0
   1678c:	mvn	r2, #0
   16790:	cmp	r1, r3
   16794:	cmpeq	r0, r2
   16798:	bne	16734 <abort@plt+0x5a14>
   1679c:	mov	r0, r4
   167a0:	add	sp, sp, #12
   167a4:	pop	{r4, r5, lr}
   167a8:	b	10ccc <fclose@plt>
   167ac:	push	{r4, lr}
   167b0:	subs	r4, r0, #0
   167b4:	sub	sp, sp, #8
   167b8:	beq	167d4 <abort@plt+0x5ab4>
   167bc:	bl	10c3c <__freading@plt>
   167c0:	cmp	r0, #0
   167c4:	beq	167d4 <abort@plt+0x5ab4>
   167c8:	ldr	r3, [r4]
   167cc:	tst	r3, #256	; 0x100
   167d0:	bne	167e4 <abort@plt+0x5ac4>
   167d4:	mov	r0, r4
   167d8:	add	sp, sp, #8
   167dc:	pop	{r4, lr}
   167e0:	b	10b4c <fflush@plt>
   167e4:	mov	r3, #1
   167e8:	str	r3, [sp]
   167ec:	mov	r2, #0
   167f0:	mov	r3, #0
   167f4:	mov	r0, r4
   167f8:	bl	16864 <abort@plt+0x5b44>
   167fc:	mov	r0, r4
   16800:	add	sp, sp, #8
   16804:	pop	{r4, lr}
   16808:	b	10b4c <fflush@plt>
   1680c:	push	{r4, r5, lr}
   16810:	sub	sp, sp, #12
   16814:	mov	r5, r0
   16818:	bl	10c84 <__errno_location@plt>
   1681c:	mov	r2, #0
   16820:	mov	r4, r0
   16824:	ldr	r3, [r0]
   16828:	str	r2, [r4]
   1682c:	mov	r0, r5
   16830:	str	r3, [sp]
   16834:	str	r3, [sp, #4]
   16838:	bl	10b58 <free@plt>
   1683c:	ldr	r3, [r4]
   16840:	add	r2, sp, #8
   16844:	cmp	r3, #0
   16848:	moveq	r3, #4
   1684c:	movne	r3, #0
   16850:	add	r3, r2, r3
   16854:	ldr	r3, [r3, #-8]
   16858:	str	r3, [r4]
   1685c:	add	sp, sp, #12
   16860:	pop	{r4, r5, pc}
   16864:	push	{r4, r5, r6, r7, r8, lr}
   16868:	sub	sp, sp, #8
   1686c:	ldmib	r0, {ip, lr}
   16870:	mov	r4, r0
   16874:	ldr	r5, [sp, #32]
   16878:	cmp	lr, ip
   1687c:	beq	16894 <abort@plt+0x5b74>
   16880:	str	r5, [sp, #32]
   16884:	mov	r0, r4
   16888:	add	sp, sp, #8
   1688c:	pop	{r4, r5, r6, r7, r8, lr}
   16890:	b	10cd8 <fseeko64@plt>
   16894:	ldr	lr, [r0, #20]
   16898:	ldr	ip, [r0, #16]
   1689c:	cmp	lr, ip
   168a0:	bne	16880 <abort@plt+0x5b60>
   168a4:	ldr	r8, [r0, #36]	; 0x24
   168a8:	cmp	r8, #0
   168ac:	bne	16880 <abort@plt+0x5b60>
   168b0:	mov	r6, r2
   168b4:	mov	r7, r3
   168b8:	bl	10cb4 <fileno@plt>
   168bc:	mov	r2, r6
   168c0:	mov	r3, r7
   168c4:	str	r5, [sp]
   168c8:	bl	10be8 <lseek64@plt>
   168cc:	mvn	r3, #0
   168d0:	mvn	r2, #0
   168d4:	cmp	r1, r3
   168d8:	cmpeq	r0, r2
   168dc:	beq	168fc <abort@plt+0x5bdc>
   168e0:	ldr	r3, [r4]
   168e4:	strd	r0, [r4, #80]	; 0x50
   168e8:	mov	r0, r8
   168ec:	bic	r3, r3, #16
   168f0:	str	r3, [r4]
   168f4:	add	sp, sp, #8
   168f8:	pop	{r4, r5, r6, r7, r8, pc}
   168fc:	mvn	r0, #0
   16900:	b	168f4 <abort@plt+0x5bd4>
   16904:	push	{r4, lr}
   16908:	mov	r0, #14
   1690c:	bl	10cfc <nl_langinfo@plt>
   16910:	cmp	r0, #0
   16914:	beq	1692c <abort@plt+0x5c0c>
   16918:	ldrb	r2, [r0]
   1691c:	ldr	r3, [pc, #16]	; 16934 <abort@plt+0x5c14>
   16920:	cmp	r2, #0
   16924:	moveq	r0, r3
   16928:	pop	{r4, pc}
   1692c:	ldr	r0, [pc]	; 16934 <abort@plt+0x5c14>
   16930:	pop	{r4, pc}
   16934:	andeq	r7, r1, ip, lsr #14
   16938:	push	{r4, r5, r6, r7, lr}
   1693c:	subs	r6, r0, #0
   16940:	sub	sp, sp, #12
   16944:	addeq	r6, sp, #4
   16948:	mov	r0, r6
   1694c:	mov	r5, r2
   16950:	mov	r7, r1
   16954:	bl	10c0c <mbrtowc@plt>
   16958:	cmp	r5, #0
   1695c:	cmnne	r0, #3
   16960:	mov	r4, r0
   16964:	bls	16980 <abort@plt+0x5c60>
   16968:	mov	r0, #0
   1696c:	bl	169d8 <abort@plt+0x5cb8>
   16970:	cmp	r0, #0
   16974:	moveq	r4, #1
   16978:	ldrbeq	r3, [r7]
   1697c:	streq	r3, [r6]
   16980:	mov	r0, r4
   16984:	add	sp, sp, #12
   16988:	pop	{r4, r5, r6, r7, pc}
   1698c:	push	{r4, r5, r6, lr}
   16990:	subs	r4, r2, #0
   16994:	mov	r6, r0
   16998:	mov	r5, r1
   1699c:	beq	169c8 <abort@plt+0x5ca8>
   169a0:	mov	r1, r4
   169a4:	mvn	r0, #0
   169a8:	bl	16acc <abort@plt+0x5dac>
   169ac:	cmp	r0, r5
   169b0:	bcs	169c8 <abort@plt+0x5ca8>
   169b4:	bl	10c84 <__errno_location@plt>
   169b8:	mov	r3, #12
   169bc:	str	r3, [r0]
   169c0:	mov	r0, #0
   169c4:	pop	{r4, r5, r6, pc}
   169c8:	mul	r1, r5, r4
   169cc:	mov	r0, r6
   169d0:	pop	{r4, r5, r6, lr}
   169d4:	b	16634 <abort@plt+0x5914>
   169d8:	push	{lr}		; (str lr, [sp, #-4]!)
   169dc:	sub	sp, sp, #268	; 0x10c
   169e0:	add	r1, sp, #4
   169e4:	ldr	r2, [pc, #60]	; 16a28 <abort@plt+0x5d08>
   169e8:	bl	16a34 <abort@plt+0x5d14>
   169ec:	cmp	r0, #0
   169f0:	movne	r0, #0
   169f4:	bne	16a20 <abort@plt+0x5d00>
   169f8:	ldr	r1, [pc, #44]	; 16a2c <abort@plt+0x5d0c>
   169fc:	add	r0, sp, #4
   16a00:	bl	10b40 <strcmp@plt>
   16a04:	cmp	r0, #0
   16a08:	beq	16a20 <abort@plt+0x5d00>
   16a0c:	add	r0, sp, #4
   16a10:	ldr	r1, [pc, #24]	; 16a30 <abort@plt+0x5d10>
   16a14:	bl	10b40 <strcmp@plt>
   16a18:	adds	r0, r0, #0
   16a1c:	movne	r0, #1
   16a20:	add	sp, sp, #268	; 0x10c
   16a24:	pop	{pc}		; (ldr pc, [sp], #4)
   16a28:	andeq	r0, r0, r1, lsl #2
   16a2c:	andeq	r7, r1, r4, lsr r7
   16a30:	andeq	r7, r1, r8, lsr r7
   16a34:	push	{r4, r5, r6, lr}
   16a38:	mov	r5, r1
   16a3c:	mov	r1, #0
   16a40:	mov	r4, r2
   16a44:	bl	10ce4 <setlocale@plt>
   16a48:	subs	r6, r0, #0
   16a4c:	beq	16aa8 <abort@plt+0x5d88>
   16a50:	bl	10c78 <strlen@plt>
   16a54:	cmp	r4, r0
   16a58:	bhi	16a90 <abort@plt+0x5d70>
   16a5c:	cmp	r4, #0
   16a60:	bne	16a6c <abort@plt+0x5d4c>
   16a64:	mov	r0, #34	; 0x22
   16a68:	pop	{r4, r5, r6, pc}
   16a6c:	sub	r4, r4, #1
   16a70:	mov	r1, r6
   16a74:	mov	r2, r4
   16a78:	mov	r0, r5
   16a7c:	bl	10b70 <memcpy@plt>
   16a80:	mov	r3, #0
   16a84:	strb	r3, [r5, r4]
   16a88:	mov	r0, #34	; 0x22
   16a8c:	pop	{r4, r5, r6, pc}
   16a90:	add	r2, r0, #1
   16a94:	mov	r1, r6
   16a98:	mov	r0, r5
   16a9c:	bl	10b70 <memcpy@plt>
   16aa0:	mov	r0, #0
   16aa4:	pop	{r4, r5, r6, pc}
   16aa8:	cmp	r4, #0
   16aac:	beq	16abc <abort@plt+0x5d9c>
   16ab0:	strb	r6, [r5]
   16ab4:	mov	r0, #22
   16ab8:	pop	{r4, r5, r6, pc}
   16abc:	mov	r0, #22
   16ac0:	pop	{r4, r5, r6, pc}
   16ac4:	mov	r1, #0
   16ac8:	b	10ce4 <setlocale@plt>
   16acc:	subs	r2, r1, #1
   16ad0:	bxeq	lr
   16ad4:	bcc	16cac <abort@plt+0x5f8c>
   16ad8:	cmp	r0, r1
   16adc:	bls	16c90 <abort@plt+0x5f70>
   16ae0:	tst	r1, r2
   16ae4:	beq	16c9c <abort@plt+0x5f7c>
   16ae8:	clz	r3, r0
   16aec:	clz	r2, r1
   16af0:	sub	r3, r2, r3
   16af4:	rsbs	r3, r3, #31
   16af8:	addne	r3, r3, r3, lsl #1
   16afc:	mov	r2, #0
   16b00:	addne	pc, pc, r3, lsl #2
   16b04:	nop			; (mov r0, r0)
   16b08:	cmp	r0, r1, lsl #31
   16b0c:	adc	r2, r2, r2
   16b10:	subcs	r0, r0, r1, lsl #31
   16b14:	cmp	r0, r1, lsl #30
   16b18:	adc	r2, r2, r2
   16b1c:	subcs	r0, r0, r1, lsl #30
   16b20:	cmp	r0, r1, lsl #29
   16b24:	adc	r2, r2, r2
   16b28:	subcs	r0, r0, r1, lsl #29
   16b2c:	cmp	r0, r1, lsl #28
   16b30:	adc	r2, r2, r2
   16b34:	subcs	r0, r0, r1, lsl #28
   16b38:	cmp	r0, r1, lsl #27
   16b3c:	adc	r2, r2, r2
   16b40:	subcs	r0, r0, r1, lsl #27
   16b44:	cmp	r0, r1, lsl #26
   16b48:	adc	r2, r2, r2
   16b4c:	subcs	r0, r0, r1, lsl #26
   16b50:	cmp	r0, r1, lsl #25
   16b54:	adc	r2, r2, r2
   16b58:	subcs	r0, r0, r1, lsl #25
   16b5c:	cmp	r0, r1, lsl #24
   16b60:	adc	r2, r2, r2
   16b64:	subcs	r0, r0, r1, lsl #24
   16b68:	cmp	r0, r1, lsl #23
   16b6c:	adc	r2, r2, r2
   16b70:	subcs	r0, r0, r1, lsl #23
   16b74:	cmp	r0, r1, lsl #22
   16b78:	adc	r2, r2, r2
   16b7c:	subcs	r0, r0, r1, lsl #22
   16b80:	cmp	r0, r1, lsl #21
   16b84:	adc	r2, r2, r2
   16b88:	subcs	r0, r0, r1, lsl #21
   16b8c:	cmp	r0, r1, lsl #20
   16b90:	adc	r2, r2, r2
   16b94:	subcs	r0, r0, r1, lsl #20
   16b98:	cmp	r0, r1, lsl #19
   16b9c:	adc	r2, r2, r2
   16ba0:	subcs	r0, r0, r1, lsl #19
   16ba4:	cmp	r0, r1, lsl #18
   16ba8:	adc	r2, r2, r2
   16bac:	subcs	r0, r0, r1, lsl #18
   16bb0:	cmp	r0, r1, lsl #17
   16bb4:	adc	r2, r2, r2
   16bb8:	subcs	r0, r0, r1, lsl #17
   16bbc:	cmp	r0, r1, lsl #16
   16bc0:	adc	r2, r2, r2
   16bc4:	subcs	r0, r0, r1, lsl #16
   16bc8:	cmp	r0, r1, lsl #15
   16bcc:	adc	r2, r2, r2
   16bd0:	subcs	r0, r0, r1, lsl #15
   16bd4:	cmp	r0, r1, lsl #14
   16bd8:	adc	r2, r2, r2
   16bdc:	subcs	r0, r0, r1, lsl #14
   16be0:	cmp	r0, r1, lsl #13
   16be4:	adc	r2, r2, r2
   16be8:	subcs	r0, r0, r1, lsl #13
   16bec:	cmp	r0, r1, lsl #12
   16bf0:	adc	r2, r2, r2
   16bf4:	subcs	r0, r0, r1, lsl #12
   16bf8:	cmp	r0, r1, lsl #11
   16bfc:	adc	r2, r2, r2
   16c00:	subcs	r0, r0, r1, lsl #11
   16c04:	cmp	r0, r1, lsl #10
   16c08:	adc	r2, r2, r2
   16c0c:	subcs	r0, r0, r1, lsl #10
   16c10:	cmp	r0, r1, lsl #9
   16c14:	adc	r2, r2, r2
   16c18:	subcs	r0, r0, r1, lsl #9
   16c1c:	cmp	r0, r1, lsl #8
   16c20:	adc	r2, r2, r2
   16c24:	subcs	r0, r0, r1, lsl #8
   16c28:	cmp	r0, r1, lsl #7
   16c2c:	adc	r2, r2, r2
   16c30:	subcs	r0, r0, r1, lsl #7
   16c34:	cmp	r0, r1, lsl #6
   16c38:	adc	r2, r2, r2
   16c3c:	subcs	r0, r0, r1, lsl #6
   16c40:	cmp	r0, r1, lsl #5
   16c44:	adc	r2, r2, r2
   16c48:	subcs	r0, r0, r1, lsl #5
   16c4c:	cmp	r0, r1, lsl #4
   16c50:	adc	r2, r2, r2
   16c54:	subcs	r0, r0, r1, lsl #4
   16c58:	cmp	r0, r1, lsl #3
   16c5c:	adc	r2, r2, r2
   16c60:	subcs	r0, r0, r1, lsl #3
   16c64:	cmp	r0, r1, lsl #2
   16c68:	adc	r2, r2, r2
   16c6c:	subcs	r0, r0, r1, lsl #2
   16c70:	cmp	r0, r1, lsl #1
   16c74:	adc	r2, r2, r2
   16c78:	subcs	r0, r0, r1, lsl #1
   16c7c:	cmp	r0, r1
   16c80:	adc	r2, r2, r2
   16c84:	subcs	r0, r0, r1
   16c88:	mov	r0, r2
   16c8c:	bx	lr
   16c90:	moveq	r0, #1
   16c94:	movne	r0, #0
   16c98:	bx	lr
   16c9c:	clz	r2, r1
   16ca0:	rsb	r2, r2, #31
   16ca4:	lsr	r0, r0, r2
   16ca8:	bx	lr
   16cac:	cmp	r0, #0
   16cb0:	mvnne	r0, #0
   16cb4:	b	16f18 <abort@plt+0x61f8>
   16cb8:	cmp	r1, #0
   16cbc:	beq	16cac <abort@plt+0x5f8c>
   16cc0:	push	{r0, r1, lr}
   16cc4:	bl	16acc <abort@plt+0x5dac>
   16cc8:	pop	{r1, r2, lr}
   16ccc:	mul	r3, r2, r0
   16cd0:	sub	r1, r1, r3
   16cd4:	bx	lr
   16cd8:	cmp	r1, #0
   16cdc:	beq	16ee8 <abort@plt+0x61c8>
   16ce0:	eor	ip, r0, r1
   16ce4:	rsbmi	r1, r1, #0
   16ce8:	subs	r2, r1, #1
   16cec:	beq	16eb4 <abort@plt+0x6194>
   16cf0:	movs	r3, r0
   16cf4:	rsbmi	r3, r0, #0
   16cf8:	cmp	r3, r1
   16cfc:	bls	16ec0 <abort@plt+0x61a0>
   16d00:	tst	r1, r2
   16d04:	beq	16ed0 <abort@plt+0x61b0>
   16d08:	clz	r2, r3
   16d0c:	clz	r0, r1
   16d10:	sub	r2, r0, r2
   16d14:	rsbs	r2, r2, #31
   16d18:	addne	r2, r2, r2, lsl #1
   16d1c:	mov	r0, #0
   16d20:	addne	pc, pc, r2, lsl #2
   16d24:	nop			; (mov r0, r0)
   16d28:	cmp	r3, r1, lsl #31
   16d2c:	adc	r0, r0, r0
   16d30:	subcs	r3, r3, r1, lsl #31
   16d34:	cmp	r3, r1, lsl #30
   16d38:	adc	r0, r0, r0
   16d3c:	subcs	r3, r3, r1, lsl #30
   16d40:	cmp	r3, r1, lsl #29
   16d44:	adc	r0, r0, r0
   16d48:	subcs	r3, r3, r1, lsl #29
   16d4c:	cmp	r3, r1, lsl #28
   16d50:	adc	r0, r0, r0
   16d54:	subcs	r3, r3, r1, lsl #28
   16d58:	cmp	r3, r1, lsl #27
   16d5c:	adc	r0, r0, r0
   16d60:	subcs	r3, r3, r1, lsl #27
   16d64:	cmp	r3, r1, lsl #26
   16d68:	adc	r0, r0, r0
   16d6c:	subcs	r3, r3, r1, lsl #26
   16d70:	cmp	r3, r1, lsl #25
   16d74:	adc	r0, r0, r0
   16d78:	subcs	r3, r3, r1, lsl #25
   16d7c:	cmp	r3, r1, lsl #24
   16d80:	adc	r0, r0, r0
   16d84:	subcs	r3, r3, r1, lsl #24
   16d88:	cmp	r3, r1, lsl #23
   16d8c:	adc	r0, r0, r0
   16d90:	subcs	r3, r3, r1, lsl #23
   16d94:	cmp	r3, r1, lsl #22
   16d98:	adc	r0, r0, r0
   16d9c:	subcs	r3, r3, r1, lsl #22
   16da0:	cmp	r3, r1, lsl #21
   16da4:	adc	r0, r0, r0
   16da8:	subcs	r3, r3, r1, lsl #21
   16dac:	cmp	r3, r1, lsl #20
   16db0:	adc	r0, r0, r0
   16db4:	subcs	r3, r3, r1, lsl #20
   16db8:	cmp	r3, r1, lsl #19
   16dbc:	adc	r0, r0, r0
   16dc0:	subcs	r3, r3, r1, lsl #19
   16dc4:	cmp	r3, r1, lsl #18
   16dc8:	adc	r0, r0, r0
   16dcc:	subcs	r3, r3, r1, lsl #18
   16dd0:	cmp	r3, r1, lsl #17
   16dd4:	adc	r0, r0, r0
   16dd8:	subcs	r3, r3, r1, lsl #17
   16ddc:	cmp	r3, r1, lsl #16
   16de0:	adc	r0, r0, r0
   16de4:	subcs	r3, r3, r1, lsl #16
   16de8:	cmp	r3, r1, lsl #15
   16dec:	adc	r0, r0, r0
   16df0:	subcs	r3, r3, r1, lsl #15
   16df4:	cmp	r3, r1, lsl #14
   16df8:	adc	r0, r0, r0
   16dfc:	subcs	r3, r3, r1, lsl #14
   16e00:	cmp	r3, r1, lsl #13
   16e04:	adc	r0, r0, r0
   16e08:	subcs	r3, r3, r1, lsl #13
   16e0c:	cmp	r3, r1, lsl #12
   16e10:	adc	r0, r0, r0
   16e14:	subcs	r3, r3, r1, lsl #12
   16e18:	cmp	r3, r1, lsl #11
   16e1c:	adc	r0, r0, r0
   16e20:	subcs	r3, r3, r1, lsl #11
   16e24:	cmp	r3, r1, lsl #10
   16e28:	adc	r0, r0, r0
   16e2c:	subcs	r3, r3, r1, lsl #10
   16e30:	cmp	r3, r1, lsl #9
   16e34:	adc	r0, r0, r0
   16e38:	subcs	r3, r3, r1, lsl #9
   16e3c:	cmp	r3, r1, lsl #8
   16e40:	adc	r0, r0, r0
   16e44:	subcs	r3, r3, r1, lsl #8
   16e48:	cmp	r3, r1, lsl #7
   16e4c:	adc	r0, r0, r0
   16e50:	subcs	r3, r3, r1, lsl #7
   16e54:	cmp	r3, r1, lsl #6
   16e58:	adc	r0, r0, r0
   16e5c:	subcs	r3, r3, r1, lsl #6
   16e60:	cmp	r3, r1, lsl #5
   16e64:	adc	r0, r0, r0
   16e68:	subcs	r3, r3, r1, lsl #5
   16e6c:	cmp	r3, r1, lsl #4
   16e70:	adc	r0, r0, r0
   16e74:	subcs	r3, r3, r1, lsl #4
   16e78:	cmp	r3, r1, lsl #3
   16e7c:	adc	r0, r0, r0
   16e80:	subcs	r3, r3, r1, lsl #3
   16e84:	cmp	r3, r1, lsl #2
   16e88:	adc	r0, r0, r0
   16e8c:	subcs	r3, r3, r1, lsl #2
   16e90:	cmp	r3, r1, lsl #1
   16e94:	adc	r0, r0, r0
   16e98:	subcs	r3, r3, r1, lsl #1
   16e9c:	cmp	r3, r1
   16ea0:	adc	r0, r0, r0
   16ea4:	subcs	r3, r3, r1
   16ea8:	cmp	ip, #0
   16eac:	rsbmi	r0, r0, #0
   16eb0:	bx	lr
   16eb4:	teq	ip, r0
   16eb8:	rsbmi	r0, r0, #0
   16ebc:	bx	lr
   16ec0:	movcc	r0, #0
   16ec4:	asreq	r0, ip, #31
   16ec8:	orreq	r0, r0, #1
   16ecc:	bx	lr
   16ed0:	clz	r2, r1
   16ed4:	rsb	r2, r2, #31
   16ed8:	cmp	ip, #0
   16edc:	lsr	r0, r3, r2
   16ee0:	rsbmi	r0, r0, #0
   16ee4:	bx	lr
   16ee8:	cmp	r0, #0
   16eec:	mvngt	r0, #-2147483648	; 0x80000000
   16ef0:	movlt	r0, #-2147483648	; 0x80000000
   16ef4:	b	16f18 <abort@plt+0x61f8>
   16ef8:	cmp	r1, #0
   16efc:	beq	16ee8 <abort@plt+0x61c8>
   16f00:	push	{r0, r1, lr}
   16f04:	bl	16ce0 <abort@plt+0x5fc0>
   16f08:	pop	{r1, r2, lr}
   16f0c:	mul	r3, r2, r0
   16f10:	sub	r1, r1, r3
   16f14:	bx	lr
   16f18:	push	{r1, lr}
   16f1c:	mov	r0, #8
   16f20:	bl	10b34 <raise@plt>
   16f24:	pop	{r1, pc}
   16f28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f2c:	mov	r7, r0
   16f30:	ldr	r6, [pc, #72]	; 16f80 <abort@plt+0x6260>
   16f34:	ldr	r5, [pc, #72]	; 16f84 <abort@plt+0x6264>
   16f38:	add	r6, pc, r6
   16f3c:	add	r5, pc, r5
   16f40:	sub	r6, r6, r5
   16f44:	mov	r8, r1
   16f48:	mov	r9, r2
   16f4c:	bl	10afc <calloc@plt-0x20>
   16f50:	asrs	r6, r6, #2
   16f54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f58:	mov	r4, #0
   16f5c:	add	r4, r4, #1
   16f60:	ldr	r3, [r5], #4
   16f64:	mov	r2, r9
   16f68:	mov	r1, r8
   16f6c:	mov	r0, r7
   16f70:	blx	r3
   16f74:	cmp	r6, r4
   16f78:	bne	16f5c <abort@plt+0x623c>
   16f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f80:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   16f84:	andeq	r0, r1, r8, asr #31
   16f88:	bx	lr
   16f8c:	ldr	r3, [pc, #12]	; 16fa0 <abort@plt+0x6280>
   16f90:	mov	r1, #0
   16f94:	add	r3, pc, r3
   16f98:	ldr	r2, [r3]
   16f9c:	b	10c90 <__cxa_atexit@plt>
   16fa0:	andeq	r1, r1, r8, lsr #2

Disassembly of section .fini:

00016fa4 <.fini>:
   16fa4:	push	{r3, lr}
   16fa8:	pop	{r3, pc}
