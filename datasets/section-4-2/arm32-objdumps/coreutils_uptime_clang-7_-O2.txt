
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00011168 <.init>:
   11168:	push	{r3, lr}
   1116c:	bl	114f4 <dcngettext@plt+0x48>
   11170:	pop	{r3, pc}

Disassembly of section .plt:

00011174 <calloc@plt-0x14>:
   11174:	push	{lr}		; (str lr, [sp, #-4]!)
   11178:	ldr	lr, [pc, #4]	; 11184 <calloc@plt-0x4>
   1117c:	add	lr, pc, lr
   11180:	ldr	pc, [lr, #8]!
   11184:	andeq	r6, r1, ip, ror lr

00011188 <calloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3708]!	; 0xe7c

00011194 <fputs_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3700]!	; 0xe74

000111a0 <gmtime_r@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #90112	; 0x16000
   111a8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111ac <strcmp@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #90112	; 0x16000
   111b4:	ldr	pc, [ip, #3684]!	; 0xe64

000111b8 <mktime@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #90112	; 0x16000
   111c0:	ldr	pc, [ip, #3676]!	; 0xe5c

000111c4 <fflush@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #90112	; 0x16000
   111cc:	ldr	pc, [ip, #3668]!	; 0xe54

000111d0 <utmpxname@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #90112	; 0x16000
   111d8:	ldr	pc, [ip, #3660]!	; 0xe4c

000111dc <free@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #90112	; 0x16000
   111e4:	ldr	pc, [ip, #3652]!	; 0xe44

000111e8 <_exit@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3644]!	; 0xe3c

000111f4 <memcpy@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3636]!	; 0xe34

00011200 <mbsinit@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3628]!	; 0xe2c

0001120c <time@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3620]!	; 0xe24

00011218 <memcmp@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3612]!	; 0xe1c

00011224 <dcgettext@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3604]!	; 0xe14

00011230 <setutxent@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3596]!	; 0xe0c

0001123c <realloc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3588]!	; 0xe04

00011248 <localtime_r@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3580]!	; 0xdfc

00011254 <textdomain@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011260 <iswprint@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3564]!	; 0xdec

0001126c <tzset@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3556]!	; 0xde4

00011278 <fwrite@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3548]!	; 0xddc

00011284 <lseek64@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011290 <__ctype_get_mb_cur_max@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3532]!	; 0xdcc

0001129c <__fpending@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3524]!	; 0xdc4

000112a8 <mbrtowc@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3516]!	; 0xdbc

000112b4 <error@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3508]!	; 0xdb4

000112c0 <getenv@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3500]!	; 0xdac

000112cc <malloc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3492]!	; 0xda4

000112d8 <__libc_start_main@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112e4 <strftime@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3476]!	; 0xd94

000112f0 <__freading@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112fc <localtime@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3460]!	; 0xd84

00011308 <__ctype_tolower_loc@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3452]!	; 0xd7c

00011314 <__ctype_toupper_loc@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3444]!	; 0xd74

00011320 <__gmon_start__@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3436]!	; 0xd6c

0001132c <getopt_long@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3428]!	; 0xd64

00011338 <kill@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3420]!	; 0xd5c

00011344 <__ctype_b_loc@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3412]!	; 0xd54

00011350 <exit@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3404]!	; 0xd4c

0001135c <strlen@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3396]!	; 0xd44

00011368 <setenv@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3388]!	; 0xd3c

00011374 <__errno_location@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3380]!	; 0xd34

00011380 <__cxa_atexit@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3372]!	; 0xd2c

0001138c <memset@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3364]!	; 0xd24

00011398 <strncpy@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3356]!	; 0xd1c

000113a4 <__printf_chk@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3348]!	; 0xd14

000113b0 <fileno@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3340]!	; 0xd0c

000113bc <__fprintf_chk@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3332]!	; 0xd04

000113c8 <fclose@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113d4 <fseeko64@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3316]!	; 0xcf4

000113e0 <getloadavg@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3308]!	; 0xcec

000113ec <strtod_l@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3300]!	; 0xce4

000113f8 <endutxent@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3292]!	; 0xcdc

00011404 <__overflow@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3284]!	; 0xcd4

00011410 <setlocale@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3276]!	; 0xccc

0001141c <strrchr@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3268]!	; 0xcc4

00011428 <nl_langinfo@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3260]!	; 0xcbc

00011434 <fputc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011440 <newlocale@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3244]!	; 0xcac

0001144c <timegm@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3236]!	; 0xca4

00011458 <fopen64@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3228]!	; 0xc9c

00011464 <fgets_unlocked@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3220]!	; 0xc94

00011470 <bindtextdomain@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3212]!	; 0xc8c

0001147c <unsetenv@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3204]!	; 0xc84

00011488 <strncmp@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3196]!	; 0xc7c

00011494 <abort@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #90112	; 0x16000
   1149c:	ldr	pc, [ip, #3188]!	; 0xc74

000114a0 <getutxent@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #90112	; 0x16000
   114a8:	ldr	pc, [ip, #3180]!	; 0xc6c

000114ac <dcngettext@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #90112	; 0x16000
   114b4:	ldr	pc, [ip, #3172]!	; 0xc64

Disassembly of section .text:

000114b8 <.text>:
   114b8:	mov	fp, #0
   114bc:	mov	lr, #0
   114c0:	pop	{r1}		; (ldr r1, [sp], #4)
   114c4:	mov	r2, sp
   114c8:	push	{r2}		; (str r2, [sp, #-4]!)
   114cc:	push	{r0}		; (str r0, [sp, #-4]!)
   114d0:	ldr	ip, [pc, #16]	; 114e8 <dcngettext@plt+0x3c>
   114d4:	push	{ip}		; (str ip, [sp, #-4]!)
   114d8:	ldr	r0, [pc, #12]	; 114ec <dcngettext@plt+0x40>
   114dc:	ldr	r3, [pc, #12]	; 114f0 <dcngettext@plt+0x44>
   114e0:	bl	112d8 <__libc_start_main@plt>
   114e4:	bl	11494 <abort@plt>
   114e8:	andeq	r7, r1, r8, lsl r1
   114ec:	andeq	r1, r1, r0, asr #16
   114f0:	strheq	r7, [r1], -r8
   114f4:	ldr	r3, [pc, #20]	; 11510 <dcngettext@plt+0x64>
   114f8:	ldr	r2, [pc, #20]	; 11514 <dcngettext@plt+0x68>
   114fc:	add	r3, pc, r3
   11500:	ldr	r2, [r3, r2]
   11504:	cmp	r2, #0
   11508:	bxeq	lr
   1150c:	b	11320 <__gmon_start__@plt>
   11510:	strdeq	r6, [r1], -ip
   11514:	andeq	r0, r0, ip, lsl r1
   11518:	ldr	r0, [pc, #24]	; 11538 <dcngettext@plt+0x8c>
   1151c:	ldr	r3, [pc, #24]	; 1153c <dcngettext@plt+0x90>
   11520:	cmp	r3, r0
   11524:	bxeq	lr
   11528:	ldr	r3, [pc, #16]	; 11540 <dcngettext@plt+0x94>
   1152c:	cmp	r3, #0
   11530:	bxeq	lr
   11534:	bx	r3
   11538:	andeq	r8, r2, r0, ror r1
   1153c:	andeq	r8, r2, r0, ror r1
   11540:	andeq	r0, r0, r0
   11544:	ldr	r0, [pc, #36]	; 11570 <dcngettext@plt+0xc4>
   11548:	ldr	r1, [pc, #36]	; 11574 <dcngettext@plt+0xc8>
   1154c:	sub	r1, r1, r0
   11550:	asr	r1, r1, #2
   11554:	add	r1, r1, r1, lsr #31
   11558:	asrs	r1, r1, #1
   1155c:	bxeq	lr
   11560:	ldr	r3, [pc, #16]	; 11578 <dcngettext@plt+0xcc>
   11564:	cmp	r3, #0
   11568:	bxeq	lr
   1156c:	bx	r3
   11570:	andeq	r8, r2, r0, ror r1
   11574:	andeq	r8, r2, r0, ror r1
   11578:	andeq	r0, r0, r0
   1157c:	push	{r4, lr}
   11580:	ldr	r4, [pc, #24]	; 115a0 <dcngettext@plt+0xf4>
   11584:	ldrb	r3, [r4]
   11588:	cmp	r3, #0
   1158c:	popne	{r4, pc}
   11590:	bl	11518 <dcngettext@plt+0x6c>
   11594:	mov	r3, #1
   11598:	strb	r3, [r4]
   1159c:	pop	{r4, pc}
   115a0:	andeq	r8, r2, ip, lsl #3
   115a4:	b	11544 <dcngettext@plt+0x98>
   115a8:	push	{fp, lr}
   115ac:	mov	fp, sp
   115b0:	sub	sp, sp, #56	; 0x38
   115b4:	mov	r4, r0
   115b8:	cmp	r0, #0
   115bc:	bne	117fc <dcngettext@plt+0x350>
   115c0:	movw	r1, #29035	; 0x716b
   115c4:	mov	r0, #0
   115c8:	mov	r2, #5
   115cc:	movt	r1, #1
   115d0:	bl	11224 <dcgettext@plt>
   115d4:	mov	r1, r0
   115d8:	movw	r0, #33180	; 0x819c
   115dc:	movt	r0, #2
   115e0:	ldr	r2, [r0]
   115e4:	mov	r0, #1
   115e8:	bl	113a4 <__printf_chk@plt>
   115ec:	movw	r1, #29065	; 0x7189
   115f0:	mov	r0, #0
   115f4:	mov	r2, #5
   115f8:	movt	r1, #1
   115fc:	bl	11224 <dcgettext@plt>
   11600:	mov	r1, r0
   11604:	mov	r0, #1
   11608:	bl	113a4 <__printf_chk@plt>
   1160c:	movw	r1, #29250	; 0x7242
   11610:	mov	r0, #0
   11614:	mov	r2, #5
   11618:	movt	r1, #1
   1161c:	bl	11224 <dcgettext@plt>
   11620:	mov	r1, r0
   11624:	mov	r0, #1
   11628:	bl	113a4 <__printf_chk@plt>
   1162c:	movw	r1, #29334	; 0x7296
   11630:	mov	r0, #0
   11634:	mov	r2, #5
   11638:	movt	r1, #1
   1163c:	bl	11224 <dcgettext@plt>
   11640:	movw	r2, #29393	; 0x72d1
   11644:	movw	r3, #29407	; 0x72df
   11648:	mov	r1, r0
   1164c:	mov	r0, #1
   11650:	movt	r2, #1
   11654:	movt	r3, #1
   11658:	bl	113a4 <__printf_chk@plt>
   1165c:	movw	r1, #29421	; 0x72ed
   11660:	mov	r0, #0
   11664:	mov	r2, #5
   11668:	movt	r1, #1
   1166c:	bl	11224 <dcgettext@plt>
   11670:	movw	r7, #33156	; 0x8184
   11674:	movt	r7, #2
   11678:	ldr	r1, [r7]
   1167c:	bl	11194 <fputs_unlocked@plt>
   11680:	movw	r1, #29466	; 0x731a
   11684:	mov	r0, #0
   11688:	mov	r2, #5
   1168c:	movt	r1, #1
   11690:	bl	11224 <dcgettext@plt>
   11694:	ldr	r1, [r7]
   11698:	bl	11194 <fputs_unlocked@plt>
   1169c:	movw	r0, #30128	; 0x75b0
   116a0:	mov	r2, #48	; 0x30
   116a4:	mov	r6, sp
   116a8:	movw	r5, #29937	; 0x74f1
   116ac:	movt	r0, #1
   116b0:	movt	r5, #1
   116b4:	add	r1, r0, #32
   116b8:	add	r3, r0, #16
   116bc:	vld1.64	{d18-d19}, [r0], r2
   116c0:	vld1.64	{d16-d17}, [r1]
   116c4:	vld1.64	{d20-d21}, [r3]
   116c8:	add	r1, r6, #32
   116cc:	vldr	d22, [r0]
   116d0:	add	r0, r6, #16
   116d4:	vst1.64	{d16-d17}, [r1]
   116d8:	movw	r1, #29620	; 0x73b4
   116dc:	vst1.64	{d20-d21}, [r0]
   116e0:	mov	r0, r6
   116e4:	vst1.64	{d18-d19}, [r0], r2
   116e8:	movt	r1, #1
   116ec:	vstr	d22, [r0]
   116f0:	mov	r0, r5
   116f4:	bl	111ac <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	ldrne	r1, [r6, #8]!
   11700:	cmpne	r1, #0
   11704:	bne	116f0 <dcngettext@plt+0x244>
   11708:	ldr	r6, [r6, #4]
   1170c:	movw	r1, #29715	; 0x7413
   11710:	mov	r0, #0
   11714:	mov	r2, #5
   11718:	movt	r1, #1
   1171c:	bl	11224 <dcgettext@plt>
   11720:	movw	r2, #29544	; 0x7368
   11724:	movw	r3, #29738	; 0x742a
   11728:	mov	r1, r0
   1172c:	mov	r0, #1
   11730:	movt	r2, #1
   11734:	movt	r3, #1
   11738:	bl	113a4 <__printf_chk@plt>
   1173c:	cmp	r6, #0
   11740:	mov	r0, #5
   11744:	mov	r1, #0
   11748:	moveq	r6, r5
   1174c:	bl	11410 <setlocale@plt>
   11750:	cmp	r0, #0
   11754:	beq	1178c <dcngettext@plt+0x2e0>
   11758:	movw	r1, #29778	; 0x7452
   1175c:	mov	r2, #3
   11760:	movt	r1, #1
   11764:	bl	11488 <strncmp@plt>
   11768:	cmp	r0, #0
   1176c:	beq	1178c <dcngettext@plt+0x2e0>
   11770:	movw	r1, #29782	; 0x7456
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	movt	r1, #1
   11780:	bl	11224 <dcgettext@plt>
   11784:	ldr	r1, [r7]
   11788:	bl	11194 <fputs_unlocked@plt>
   1178c:	movw	r1, #29853	; 0x749d
   11790:	mov	r0, #0
   11794:	mov	r2, #5
   11798:	movt	r1, #1
   1179c:	bl	11224 <dcgettext@plt>
   117a0:	movw	r2, #29738	; 0x742a
   117a4:	mov	r1, r0
   117a8:	mov	r0, #1
   117ac:	mov	r3, r5
   117b0:	movt	r2, #1
   117b4:	bl	113a4 <__printf_chk@plt>
   117b8:	movw	r1, #29880	; 0x74b8
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	movt	r1, #1
   117c8:	bl	11224 <dcgettext@plt>
   117cc:	movw	r3, #29392	; 0x72d0
   117d0:	mov	r1, r0
   117d4:	movw	r0, #29648	; 0x73d0
   117d8:	cmp	r6, r5
   117dc:	mov	r2, r6
   117e0:	movt	r0, #1
   117e4:	movt	r3, #1
   117e8:	moveq	r3, r0
   117ec:	mov	r0, #1
   117f0:	bl	113a4 <__printf_chk@plt>
   117f4:	mov	r0, r4
   117f8:	bl	11350 <exit@plt>
   117fc:	movw	r0, #33152	; 0x8180
   11800:	movw	r1, #28996	; 0x7144
   11804:	mov	r2, #5
   11808:	movt	r0, #2
   1180c:	movt	r1, #1
   11810:	ldr	r5, [r0]
   11814:	mov	r0, #0
   11818:	bl	11224 <dcgettext@plt>
   1181c:	mov	r2, r0
   11820:	movw	r0, #33180	; 0x819c
   11824:	mov	r1, #1
   11828:	movt	r0, #2
   1182c:	ldr	r3, [r0]
   11830:	mov	r0, r5
   11834:	bl	113bc <__fprintf_chk@plt>
   11838:	mov	r0, r4
   1183c:	bl	11350 <exit@plt>
   11840:	push	{r4, r5, r6, sl, fp, lr}
   11844:	add	fp, sp, #16
   11848:	sub	sp, sp, #32
   1184c:	mov	r5, r0
   11850:	ldr	r0, [r1]
   11854:	mov	r4, r1
   11858:	bl	13be4 <dcngettext@plt+0x2738>
   1185c:	movw	r1, #29392	; 0x72d0
   11860:	mov	r0, #6
   11864:	movt	r1, #1
   11868:	bl	11410 <setlocale@plt>
   1186c:	movw	r6, #29548	; 0x736c
   11870:	movw	r1, #29520	; 0x7350
   11874:	movt	r6, #1
   11878:	movt	r1, #1
   1187c:	mov	r0, r6
   11880:	bl	11470 <bindtextdomain@plt>
   11884:	mov	r0, r6
   11888:	bl	11254 <textdomain@plt>
   1188c:	movw	r0, #7744	; 0x1e40
   11890:	movt	r0, #1
   11894:	bl	1711c <dcngettext@plt+0x5c70>
   11898:	movw	r0, #33064	; 0x8128
   1189c:	movw	r3, #29575	; 0x7387
   118a0:	movw	r1, #5544	; 0x15a8
   118a4:	mov	r2, #1
   118a8:	movw	lr, #29591	; 0x7397
   118ac:	movw	r6, #29558	; 0x7376
   118b0:	mov	ip, #0
   118b4:	movt	r0, #2
   118b8:	movt	r3, #1
   118bc:	movt	r1, #1
   118c0:	movt	lr, #1
   118c4:	movt	r6, #1
   118c8:	ldr	r0, [r0]
   118cc:	stm	sp, {r0, r2}
   118d0:	movw	r2, #29937	; 0x74f1
   118d4:	str	r3, [sp, #16]
   118d8:	movw	r3, #29544	; 0x7368
   118dc:	str	r1, [sp, #8]
   118e0:	mov	r0, r5
   118e4:	mov	r1, r4
   118e8:	str	r6, [sp, #12]
   118ec:	str	lr, [sp, #20]
   118f0:	str	ip, [sp, #24]
   118f4:	movt	r2, #1
   118f8:	movt	r3, #1
   118fc:	bl	13b1c <dcngettext@plt+0x2670>
   11900:	movw	r6, #33144	; 0x8178
   11904:	movt	r6, #2
   11908:	ldr	r0, [r6]
   1190c:	sub	r1, r5, r0
   11910:	cmp	r1, #1
   11914:	beq	11930 <dcngettext@plt+0x484>
   11918:	cmp	r1, #0
   1191c:	bne	1193c <dcngettext@plt+0x490>
   11920:	movw	r0, #29393	; 0x72d1
   11924:	mov	r1, #1
   11928:	movt	r0, #1
   1192c:	bl	11980 <dcngettext@plt+0x4d4>
   11930:	ldr	r0, [r4, r0, lsl #2]
   11934:	mov	r1, #0
   11938:	bl	11980 <dcngettext@plt+0x4d4>
   1193c:	movw	r1, #29603	; 0x73a3
   11940:	mov	r0, #0
   11944:	mov	r2, #5
   11948:	movt	r1, #1
   1194c:	bl	11224 <dcgettext@plt>
   11950:	mov	r5, r0
   11954:	ldr	r0, [r6]
   11958:	add	r0, r4, r0, lsl #2
   1195c:	ldr	r0, [r0, #4]
   11960:	bl	15818 <dcngettext@plt+0x436c>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	mov	r1, #0
   11970:	mov	r2, r5
   11974:	bl	112b4 <error@plt>
   11978:	mov	r0, #1
   1197c:	bl	115a8 <dcngettext@plt+0xfc>
   11980:	push	{fp, lr}
   11984:	mov	fp, sp
   11988:	sub	sp, sp, #8
   1198c:	mov	r4, r0
   11990:	mov	r0, #0
   11994:	mov	r3, r1
   11998:	add	r1, sp, #4
   1199c:	mov	r2, sp
   119a0:	str	r0, [sp]
   119a4:	mov	r0, r4
   119a8:	bl	159b8 <dcngettext@plt+0x450c>
   119ac:	cmp	r0, #0
   119b0:	bne	119c8 <dcngettext@plt+0x51c>
   119b4:	ldr	r1, [sp]
   119b8:	ldr	r0, [sp, #4]
   119bc:	bl	119f8 <dcngettext@plt+0x54c>
   119c0:	mov	r0, #0
   119c4:	bl	11350 <exit@plt>
   119c8:	bl	11374 <__errno_location@plt>
   119cc:	ldr	r5, [r0]
   119d0:	mov	r0, #0
   119d4:	mov	r1, #3
   119d8:	mov	r2, r4
   119dc:	bl	1556c <dcngettext@plt+0x40c0>
   119e0:	movw	r2, #30217	; 0x7609
   119e4:	mov	r3, r0
   119e8:	mov	r0, #1
   119ec:	mov	r1, r5
   119f0:	movt	r2, #1
   119f4:	bl	112b4 <error@plt>
   119f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   119fc:	add	fp, sp, #24
   11a00:	sub	sp, sp, #16
   11a04:	sub	sp, sp, #8192	; 0x2000
   11a08:	mov	r5, r1
   11a0c:	movw	r1, #30082	; 0x7582
   11a10:	mov	r6, r0
   11a14:	movw	r0, #29931	; 0x74eb
   11a18:	movt	r0, #1
   11a1c:	movt	r1, #1
   11a20:	bl	11458 <fopen64@plt>
   11a24:	mov	r7, #0
   11a28:	cmp	r0, #0
   11a2c:	mov	r9, #0
   11a30:	beq	11aa8 <dcngettext@plt+0x5fc>
   11a34:	mov	r4, r0
   11a38:	add	r8, sp, #8
   11a3c:	mov	r1, #8192	; 0x2000
   11a40:	mov	r0, r8
   11a44:	mov	r2, r4
   11a48:	bl	11464 <fgets_unlocked@plt>
   11a4c:	mov	r9, #0
   11a50:	cmp	r0, r8
   11a54:	bne	11aa0 <dcngettext@plt+0x5f4>
   11a58:	sub	r1, fp, #32
   11a5c:	mov	r0, r8
   11a60:	bl	11db8 <dcngettext@plt+0x90c>
   11a64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a68:	cmp	r8, r0
   11a6c:	beq	11a9c <dcngettext@plt+0x5f0>
   11a70:	vldr	d16, [pc, #824]	; 11db0 <dcngettext@plt+0x904>
   11a74:	vcvt.s32.f64	s2, d0
   11a78:	mvn	r0, #0
   11a7c:	vmov	r9, s2
   11a80:	vcmpe.f64	d0, d16
   11a84:	vmrs	APSR_nzcv, fpscr
   11a88:	vcmpe.f64	d0, #0.0
   11a8c:	movpl	r9, r0
   11a90:	vmrs	APSR_nzcv, fpscr
   11a94:	movlt	r9, r0
   11a98:	b	11aa0 <dcngettext@plt+0x5f4>
   11a9c:	mov	r9, #0
   11aa0:	mov	r0, r4
   11aa4:	bl	11f28 <dcngettext@plt+0xa7c>
   11aa8:	cmp	r6, #0
   11aac:	mov	r4, #0
   11ab0:	beq	11af8 <dcngettext@plt+0x64c>
   11ab4:	mov	r4, #0
   11ab8:	mov	r7, #0
   11abc:	ldrb	r0, [r5, #44]	; 0x2c
   11ac0:	ldrh	r1, [r5]
   11ac4:	sub	r6, r6, #1
   11ac8:	cmp	r0, #0
   11acc:	sub	r2, r1, #7
   11ad0:	movwne	r0, #1
   11ad4:	cmp	r1, #2
   11ad8:	clz	r2, r2
   11adc:	ldreq	r7, [r5, #340]	; 0x154
   11ae0:	lsr	r2, r2, #5
   11ae4:	add	r5, r5, #384	; 0x180
   11ae8:	cmp	r6, #0
   11aec:	and	r0, r2, r0
   11af0:	add	r4, r4, r0
   11af4:	bne	11abc <dcngettext@plt+0x610>
   11af8:	mov	r0, #0
   11afc:	bl	1120c <time@plt>
   11b00:	cmp	r9, #0
   11b04:	str	r0, [fp, #-32]	; 0xffffffe0
   11b08:	bne	11b18 <dcngettext@plt+0x66c>
   11b0c:	cmp	r7, #0
   11b10:	beq	11d84 <dcngettext@plt+0x8d8>
   11b14:	sub	r9, r0, r7
   11b18:	sub	r0, fp, #32
   11b1c:	bl	112fc <localtime@plt>
   11b20:	cmp	r0, #0
   11b24:	beq	11c10 <dcngettext@plt+0x764>
   11b28:	mov	r5, r0
   11b2c:	movw	r0, #33156	; 0x8184
   11b30:	movw	r1, #29967	; 0x750f
   11b34:	mov	r2, #5
   11b38:	mov	r7, #0
   11b3c:	movt	r0, #2
   11b40:	movt	r1, #1
   11b44:	ldr	r6, [r0]
   11b48:	mov	r0, #0
   11b4c:	bl	11224 <dcgettext@plt>
   11b50:	mov	r1, r0
   11b54:	mov	r0, r6
   11b58:	mov	r2, r5
   11b5c:	mov	r3, #0
   11b60:	str	r7, [sp]
   11b64:	bl	12020 <dcngettext@plt+0xb74>
   11b68:	cmn	r9, #1
   11b6c:	beq	11c38 <dcngettext@plt+0x78c>
   11b70:	movw	r0, #17671	; 0x4507
   11b74:	movt	r0, #49710	; 0xc22e
   11b78:	smmla	r0, r9, r0, r9
   11b7c:	asr	r1, r0, #16
   11b80:	add	r6, r1, r0, lsr #31
   11b84:	movw	r0, #44672	; 0xae80
   11b88:	movw	r1, #46021	; 0xb3c5
   11b8c:	movt	r0, #65534	; 0xfffe
   11b90:	movt	r1, #37282	; 0x91a2
   11b94:	mla	r0, r6, r0, r9
   11b98:	smmla	r1, r0, r1, r0
   11b9c:	asr	r2, r1, #11
   11ba0:	add	r5, r2, r1, lsr #31
   11ba4:	movw	r1, #61936	; 0xf1f0
   11ba8:	movt	r1, #65535	; 0xffff
   11bac:	mla	r0, r5, r1, r0
   11bb0:	movw	r1, #34953	; 0x8889
   11bb4:	movt	r1, #34952	; 0x8888
   11bb8:	smmla	r0, r0, r1, r0
   11bbc:	asr	r1, r0, #5
   11bc0:	add	r8, r1, r0, lsr #31
   11bc4:	movw	r0, #20864	; 0x5180
   11bc8:	movt	r0, #1
   11bcc:	cmp	r9, r0
   11bd0:	blt	11c5c <dcngettext@plt+0x7b0>
   11bd4:	movw	r1, #30012	; 0x753c
   11bd8:	movw	r2, #30035	; 0x7553
   11bdc:	mov	r0, #5
   11be0:	mov	r3, r6
   11be4:	str	r0, [sp]
   11be8:	movt	r1, #1
   11bec:	movt	r2, #1
   11bf0:	mov	r0, #0
   11bf4:	bl	114ac <dcngettext@plt>
   11bf8:	mov	r1, r0
   11bfc:	str	r8, [sp]
   11c00:	mov	r0, #1
   11c04:	mov	r2, r6
   11c08:	mov	r3, r5
   11c0c:	b	11c80 <dcngettext@plt+0x7d4>
   11c10:	movw	r1, #29979	; 0x751b
   11c14:	mov	r0, #0
   11c18:	mov	r2, #5
   11c1c:	movt	r1, #1
   11c20:	bl	11224 <dcgettext@plt>
   11c24:	mov	r1, r0
   11c28:	mov	r0, #1
   11c2c:	bl	113a4 <__printf_chk@plt>
   11c30:	cmn	r9, #1
   11c34:	bne	11b70 <dcngettext@plt+0x6c4>
   11c38:	movw	r1, #29990	; 0x7526
   11c3c:	mov	r0, #0
   11c40:	mov	r2, #5
   11c44:	movt	r1, #1
   11c48:	bl	11224 <dcgettext@plt>
   11c4c:	mov	r1, r0
   11c50:	mov	r0, #1
   11c54:	bl	113a4 <__printf_chk@plt>
   11c58:	b	11c84 <dcngettext@plt+0x7d8>
   11c5c:	movw	r1, #30059	; 0x756b
   11c60:	mov	r0, #0
   11c64:	mov	r2, #5
   11c68:	movt	r1, #1
   11c6c:	bl	11224 <dcgettext@plt>
   11c70:	mov	r1, r0
   11c74:	mov	r0, #1
   11c78:	mov	r2, r5
   11c7c:	mov	r3, r8
   11c80:	bl	113a4 <__printf_chk@plt>
   11c84:	movw	r1, #30075	; 0x757b
   11c88:	movw	r2, #30084	; 0x7584
   11c8c:	mov	r0, #5
   11c90:	mov	r3, r4
   11c94:	str	r0, [sp]
   11c98:	movt	r1, #1
   11c9c:	movt	r2, #1
   11ca0:	mov	r0, #0
   11ca4:	bl	114ac <dcngettext@plt>
   11ca8:	mov	r1, r0
   11cac:	mov	r0, #1
   11cb0:	mov	r2, r4
   11cb4:	bl	113a4 <__printf_chk@plt>
   11cb8:	add	r0, sp, #8
   11cbc:	mov	r1, #3
   11cc0:	bl	113e0 <getloadavg@plt>
   11cc4:	cmn	r0, #1
   11cc8:	beq	11d40 <dcngettext@plt+0x894>
   11ccc:	mov	r4, r0
   11cd0:	cmp	r0, #1
   11cd4:	blt	11d6c <dcngettext@plt+0x8c0>
   11cd8:	movw	r1, #30094	; 0x758e
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	11224 <dcgettext@plt>
   11cec:	vldr	d16, [sp, #8]
   11cf0:	mov	r1, r0
   11cf4:	mov	r0, #1
   11cf8:	vmov	r2, r3, d16
   11cfc:	bl	113a4 <__printf_chk@plt>
   11d00:	cmp	r4, #1
   11d04:	beq	11d40 <dcngettext@plt+0x894>
   11d08:	vldr	d16, [sp, #16]
   11d0c:	movw	r1, #30116	; 0x75a4
   11d10:	mov	r0, #1
   11d14:	movt	r1, #1
   11d18:	vmov	r2, r3, d16
   11d1c:	bl	113a4 <__printf_chk@plt>
   11d20:	cmp	r4, #3
   11d24:	blt	11d40 <dcngettext@plt+0x894>
   11d28:	vldr	d16, [sp, #24]
   11d2c:	movw	r1, #30116	; 0x75a4
   11d30:	mov	r0, #1
   11d34:	movt	r1, #1
   11d38:	vmov	r2, r3, d16
   11d3c:	bl	113a4 <__printf_chk@plt>
   11d40:	movw	r0, #33156	; 0x8184
   11d44:	movt	r0, #2
   11d48:	ldr	r0, [r0]
   11d4c:	ldr	r1, [r0, #20]
   11d50:	ldr	r2, [r0, #24]
   11d54:	cmp	r1, r2
   11d58:	bcs	11d74 <dcngettext@plt+0x8c8>
   11d5c:	add	r2, r1, #1
   11d60:	str	r2, [r0, #20]
   11d64:	mov	r0, #10
   11d68:	strb	r0, [r1]
   11d6c:	sub	sp, fp, #24
   11d70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d74:	mov	r1, #10
   11d78:	bl	11404 <__overflow@plt>
   11d7c:	sub	sp, fp, #24
   11d80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d84:	bl	11374 <__errno_location@plt>
   11d88:	ldr	r4, [r0]
   11d8c:	movw	r1, #29944	; 0x74f8
   11d90:	mov	r0, #0
   11d94:	mov	r2, #5
   11d98:	movt	r1, #1
   11d9c:	bl	11224 <dcgettext@plt>
   11da0:	mov	r2, r0
   11da4:	mov	r0, #1
   11da8:	mov	r1, r4
   11dac:	bl	112b4 <error@plt>
   11db0:			; <UNDEFINED> instruction: 0xffc00000
   11db4:	ldrshmi	pc, [pc, #255]	; 11ebb <dcngettext@plt+0xa0f>	; <UNPREDICTABLE>
   11db8:	push	{r4, r5, r6, sl, fp, lr}
   11dbc:	add	fp, sp, #16
   11dc0:	movw	r6, #33168	; 0x8190
   11dc4:	mov	r5, r0
   11dc8:	mov	r4, r1
   11dcc:	movt	r6, #2
   11dd0:	ldr	r0, [r6]
   11dd4:	cmp	r0, #0
   11dd8:	bne	11df4 <dcngettext@plt+0x948>
   11ddc:	movw	r1, #30199	; 0x75f7
   11de0:	movw	r0, #8127	; 0x1fbf
   11de4:	mov	r2, #0
   11de8:	movt	r1, #1
   11dec:	bl	11440 <newlocale@plt>
   11df0:	str	r0, [r6]
   11df4:	ldr	r2, [r6]
   11df8:	cmp	r2, #0
   11dfc:	beq	11e10 <dcngettext@plt+0x964>
   11e00:	mov	r0, r5
   11e04:	mov	r1, r4
   11e08:	pop	{r4, r5, r6, sl, fp, lr}
   11e0c:	b	113ec <strtod_l@plt>
   11e10:	cmp	r4, #0
   11e14:	vmov.i32	d0, #0	; 0x00000000
   11e18:	strne	r5, [r4]
   11e1c:	pop	{r4, r5, r6, sl, fp, pc}
   11e20:	movw	r1, #33172	; 0x8194
   11e24:	movt	r1, #2
   11e28:	str	r0, [r1]
   11e2c:	bx	lr
   11e30:	movw	r1, #33176	; 0x8198
   11e34:	movt	r1, #2
   11e38:	strb	r0, [r1]
   11e3c:	bx	lr
   11e40:	push	{r4, r5, r6, sl, fp, lr}
   11e44:	add	fp, sp, #16
   11e48:	sub	sp, sp, #8
   11e4c:	movw	r0, #33156	; 0x8184
   11e50:	movt	r0, #2
   11e54:	ldr	r0, [r0]
   11e58:	bl	16e30 <dcngettext@plt+0x5984>
   11e5c:	cmp	r0, #0
   11e60:	beq	11e88 <dcngettext@plt+0x9dc>
   11e64:	movw	r0, #33176	; 0x8198
   11e68:	movt	r0, #2
   11e6c:	ldrb	r0, [r0]
   11e70:	cmp	r0, #0
   11e74:	beq	11ea8 <dcngettext@plt+0x9fc>
   11e78:	bl	11374 <__errno_location@plt>
   11e7c:	ldr	r0, [r0]
   11e80:	cmp	r0, #32
   11e84:	bne	11ea8 <dcngettext@plt+0x9fc>
   11e88:	movw	r0, #33152	; 0x8180
   11e8c:	movt	r0, #2
   11e90:	ldr	r0, [r0]
   11e94:	bl	16e30 <dcngettext@plt+0x5984>
   11e98:	cmp	r0, #0
   11e9c:	subeq	sp, fp, #16
   11ea0:	popeq	{r4, r5, r6, sl, fp, pc}
   11ea4:	b	11f18 <dcngettext@plt+0xa6c>
   11ea8:	movw	r1, #30201	; 0x75f9
   11eac:	mov	r0, #0
   11eb0:	mov	r2, #5
   11eb4:	movt	r1, #1
   11eb8:	bl	11224 <dcgettext@plt>
   11ebc:	mov	r4, r0
   11ec0:	movw	r0, #33172	; 0x8194
   11ec4:	movt	r0, #2
   11ec8:	ldr	r6, [r0]
   11ecc:	bl	11374 <__errno_location@plt>
   11ed0:	ldr	r5, [r0]
   11ed4:	cmp	r6, #0
   11ed8:	bne	11ef4 <dcngettext@plt+0xa48>
   11edc:	movw	r2, #30217	; 0x7609
   11ee0:	mov	r0, #0
   11ee4:	mov	r1, r5
   11ee8:	mov	r3, r4
   11eec:	movt	r2, #1
   11ef0:	b	11f14 <dcngettext@plt+0xa68>
   11ef4:	mov	r0, r6
   11ef8:	bl	15490 <dcngettext@plt+0x3fe4>
   11efc:	movw	r2, #30213	; 0x7605
   11f00:	mov	r3, r0
   11f04:	str	r4, [sp]
   11f08:	mov	r0, #0
   11f0c:	mov	r1, r5
   11f10:	movt	r2, #1
   11f14:	bl	112b4 <error@plt>
   11f18:	movw	r0, #33068	; 0x812c
   11f1c:	movt	r0, #2
   11f20:	ldr	r0, [r0]
   11f24:	bl	111e8 <_exit@plt>
   11f28:	push	{r4, r5, r6, sl, fp, lr}
   11f2c:	add	fp, sp, #16
   11f30:	sub	sp, sp, #8
   11f34:	mov	r4, r0
   11f38:	bl	113b0 <fileno@plt>
   11f3c:	cmn	r0, #1
   11f40:	ble	11fb4 <dcngettext@plt+0xb08>
   11f44:	mov	r0, r4
   11f48:	bl	112f0 <__freading@plt>
   11f4c:	cmp	r0, #0
   11f50:	beq	11f7c <dcngettext@plt+0xad0>
   11f54:	mov	r0, r4
   11f58:	bl	113b0 <fileno@plt>
   11f5c:	mov	r1, #1
   11f60:	mov	r2, #0
   11f64:	mov	r3, #0
   11f68:	str	r1, [sp]
   11f6c:	bl	11284 <lseek64@plt>
   11f70:	and	r0, r0, r1
   11f74:	cmn	r0, #1
   11f78:	beq	11fb4 <dcngettext@plt+0xb08>
   11f7c:	mov	r0, r4
   11f80:	bl	11fc4 <dcngettext@plt+0xb18>
   11f84:	cmp	r0, #0
   11f88:	beq	11fb4 <dcngettext@plt+0xb08>
   11f8c:	bl	11374 <__errno_location@plt>
   11f90:	ldr	r6, [r0]
   11f94:	mov	r5, r0
   11f98:	mov	r0, r4
   11f9c:	bl	113c8 <fclose@plt>
   11fa0:	cmp	r6, #0
   11fa4:	strne	r6, [r5]
   11fa8:	mvnne	r0, #0
   11fac:	sub	sp, fp, #16
   11fb0:	pop	{r4, r5, r6, sl, fp, pc}
   11fb4:	mov	r0, r4
   11fb8:	sub	sp, fp, #16
   11fbc:	pop	{r4, r5, r6, sl, fp, lr}
   11fc0:	b	113c8 <fclose@plt>
   11fc4:	push	{r4, sl, fp, lr}
   11fc8:	add	fp, sp, #8
   11fcc:	sub	sp, sp, #8
   11fd0:	mov	r4, r0
   11fd4:	cmp	r0, #0
   11fd8:	beq	11ff4 <dcngettext@plt+0xb48>
   11fdc:	mov	r0, r4
   11fe0:	bl	112f0 <__freading@plt>
   11fe4:	cmp	r0, #0
   11fe8:	ldrbne	r0, [r4, #1]
   11fec:	tstne	r0, #1
   11ff0:	bne	12004 <dcngettext@plt+0xb58>
   11ff4:	mov	r0, r4
   11ff8:	sub	sp, fp, #8
   11ffc:	pop	{r4, sl, fp, lr}
   12000:	b	111c4 <fflush@plt>
   12004:	mov	r0, #1
   12008:	mov	r2, #0
   1200c:	mov	r3, #0
   12010:	str	r0, [sp]
   12014:	mov	r0, r4
   12018:	bl	139c8 <dcngettext@plt+0x251c>
   1201c:	b	11ff4 <dcngettext@plt+0xb48>
   12020:	push	{fp, lr}
   12024:	mov	fp, sp
   12028:	sub	sp, sp, #16
   1202c:	str	r3, [sp, #8]
   12030:	mvn	r3, #0
   12034:	str	r3, [sp, #4]
   12038:	mov	r3, #0
   1203c:	str	r3, [sp]
   12040:	ldr	r3, [fp, #8]
   12044:	str	r3, [sp, #12]
   12048:	mov	r3, #0
   1204c:	bl	12058 <dcngettext@plt+0xbac>
   12050:	mov	sp, fp
   12054:	pop	{fp, pc}
   12058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1205c:	add	fp, sp, #28
   12060:	sub	sp, sp, #124	; 0x7c
   12064:	sub	sp, sp, #1024	; 0x400
   12068:	str	r3, [sp, #80]	; 0x50
   1206c:	mov	r4, r2
   12070:	mov	sl, r1
   12074:	mov	r7, r0
   12078:	bl	11374 <__errno_location@plt>
   1207c:	mov	r2, r4
   12080:	movw	r3, #29392	; 0x72d0
   12084:	str	r0, [sp, #56]	; 0x38
   12088:	ldr	r1, [r2, #8]!
   1208c:	movt	r3, #1
   12090:	cmp	r1, #0
   12094:	mov	r6, r1
   12098:	movweq	r6, #12
   1209c:	cmp	r1, #12
   120a0:	subgt	r6, r1, #12
   120a4:	ldr	r1, [r2, #32]
   120a8:	cmp	r1, #0
   120ac:	movne	r3, r1
   120b0:	ldr	r1, [r0]
   120b4:	str	r3, [sp, #44]	; 0x2c
   120b8:	ldrb	r3, [sl]
   120bc:	str	r1, [sp, #52]	; 0x34
   120c0:	cmp	r3, #0
   120c4:	beq	1212c <dcngettext@plt+0xc80>
   120c8:	sub	r0, fp, #46	; 0x2e
   120cc:	mvn	r1, #13
   120d0:	str	r6, [sp, #32]
   120d4:	ldr	r6, [fp, #12]
   120d8:	mov	lr, #0
   120dc:	str	r2, [sp, #36]	; 0x24
   120e0:	str	r4, [sp, #68]	; 0x44
   120e4:	str	r7, [sp, #88]	; 0x58
   120e8:	sub	r1, r1, r0
   120ec:	str	r1, [sp, #24]
   120f0:	add	r1, r0, #13
   120f4:	add	r0, r0, #14
   120f8:	str	r1, [sp, #20]
   120fc:	add	r1, sp, #96	; 0x60
   12100:	str	r0, [sp, #60]	; 0x3c
   12104:	add	r1, r1, #1
   12108:	str	r1, [sp, #40]	; 0x28
   1210c:	add	r1, r4, #12
   12110:	str	r1, [sp, #28]
   12114:	sub	r1, fp, #51	; 0x33
   12118:	add	r2, r1, #3
   1211c:	add	r0, r1, #2
   12120:	str	r2, [sp, #48]	; 0x30
   12124:	str	r0, [sp, #64]	; 0x40
   12128:	b	1213c <dcngettext@plt+0xc90>
   1212c:	mov	lr, #0
   12130:	b	13994 <dcngettext@plt+0x24e8>
   12134:	mov	r8, #3
   12138:	b	13624 <dcngettext@plt+0x2178>
   1213c:	uxtb	r1, r3
   12140:	mov	r8, sl
   12144:	cmp	r1, #37	; 0x25
   12148:	bne	12160 <dcngettext@plt+0xcb4>
   1214c:	ldr	ip, [sp, #80]	; 0x50
   12150:	mov	r0, #0
   12154:	mov	r7, #0
   12158:	mov	sl, r8
   1215c:	b	12250 <dcngettext@plt+0xda4>
   12160:	bic	r1, r6, r6, asr #31
   12164:	mov	r5, #1
   12168:	mvn	r2, lr
   1216c:	cmp	r1, #1
   12170:	movhi	r5, r1
   12174:	cmp	r5, r2
   12178:	bcs	139a4 <dcngettext@plt+0x24f8>
   1217c:	cmp	r7, #0
   12180:	beq	121cc <dcngettext@plt+0xd20>
   12184:	cmp	r1, #2
   12188:	bcc	121b8 <dcngettext@plt+0xd0c>
   1218c:	mov	r9, lr
   12190:	sub	r4, r1, #1
   12194:	mov	r6, #0
   12198:	mov	r0, #32
   1219c:	mov	r1, r7
   121a0:	bl	11434 <fputc@plt>
   121a4:	add	r6, r6, #1
   121a8:	cmp	r6, r4
   121ac:	bcc	12198 <dcngettext@plt+0xcec>
   121b0:	ldrb	r3, [r8]
   121b4:	mov	lr, r9
   121b8:	uxtb	r0, r3
   121bc:	mov	r1, r7
   121c0:	mov	r4, lr
   121c4:	bl	11434 <fputc@plt>
   121c8:	mov	lr, r4
   121cc:	add	lr, r5, lr
   121d0:	mov	sl, r8
   121d4:	b	13984 <dcngettext@plt+0x24d8>
   121d8:	mov	r0, #1
   121dc:	b	12250 <dcngettext@plt+0xda4>
   121e0:	add	r1, r1, #1
   121e4:	add	sl, sl, #1
   121e8:	mov	r7, r9
   121ec:	ldrb	r9, [sl]
   121f0:	sub	r2, r9, #35	; 0x23
   121f4:	cmp	r2, #13
   121f8:	bhi	1223c <dcngettext@plt+0xd90>
   121fc:	add	r3, pc, #0
   12200:	ldr	pc, [r3, r2, lsl #2]
   12204:	ldrdeq	r2, [r1], -r8
   12208:	andeq	r2, r1, ip, asr r2
   1220c:	andeq	r2, r1, ip, asr r2
   12210:	andeq	r2, r1, ip, asr r2
   12214:	andeq	r2, r1, ip, asr r2
   12218:	andeq	r2, r1, ip, asr r2
   1221c:	andeq	r2, r1, ip, asr r2
   12220:	andeq	r2, r1, ip, asr r2
   12224:	andeq	r2, r1, r0, ror #3
   12228:	andeq	r2, r1, ip, asr r2
   1222c:	andeq	r2, r1, r0, ror #3
   12230:	andeq	r2, r1, ip, asr r2
   12234:	andeq	r2, r1, ip, asr r2
   12238:	andeq	r2, r1, r0, ror #3
   1223c:	cmp	r9, #95	; 0x5f
   12240:	beq	121e0 <dcngettext@plt+0xd34>
   12244:	cmp	r9, #94	; 0x5e
   12248:	bne	1225c <dcngettext@plt+0xdb0>
   1224c:	mov	ip, #1
   12250:	add	r1, sl, #2
   12254:	add	sl, sl, #1
   12258:	b	121ec <dcngettext@plt+0xd40>
   1225c:	sub	r2, r9, #48	; 0x30
   12260:	cmp	r2, #9
   12264:	bhi	122f0 <dcngettext@plt+0xe44>
   12268:	movw	r5, #52428	; 0xcccc
   1226c:	mov	r4, lr
   12270:	mov	lr, ip
   12274:	mov	ip, r7
   12278:	mov	r6, #0
   1227c:	mov	r7, #-2147483648	; 0x80000000
   12280:	str	r0, [sp, #76]	; 0x4c
   12284:	movt	r5, #3276	; 0xccc
   12288:	cmn	r6, #1
   1228c:	ble	1229c <dcngettext@plt+0xdf0>
   12290:	cmp	r6, r5
   12294:	bgt	122ac <dcngettext@plt+0xe00>
   12298:	b	122b4 <dcngettext@plt+0xe08>
   1229c:	beq	122b4 <dcngettext@plt+0xe08>
   122a0:	sdiv	r2, r7, r6
   122a4:	cmp	r2, #10
   122a8:	bge	122b4 <dcngettext@plt+0xe08>
   122ac:	mvn	r6, #-2147483648	; 0x80000000
   122b0:	b	122cc <dcngettext@plt+0xe20>
   122b4:	add	r2, r6, r6, lsl #2
   122b8:	lsl	r3, r2, #1
   122bc:	uxtab	r0, r3, r9
   122c0:	sub	r6, r0, #48	; 0x30
   122c4:	cmp	r6, r2, lsl #1
   122c8:	mvnvs	r6, #-2147483648	; 0x80000000
   122cc:	ldrb	r9, [r1], #1
   122d0:	sub	r2, r9, #48	; 0x30
   122d4:	cmp	r2, #10
   122d8:	bcc	12288 <dcngettext@plt+0xddc>
   122dc:	ldr	r0, [sp, #76]	; 0x4c
   122e0:	mov	r7, ip
   122e4:	mov	ip, lr
   122e8:	sub	sl, r1, #1
   122ec:	mov	lr, r4
   122f0:	cmp	r9, #79	; 0x4f
   122f4:	cmpne	r9, #69	; 0x45
   122f8:	bne	1230c <dcngettext@plt+0xe60>
   122fc:	ldrb	r1, [sl, #1]!
   12300:	cmp	r1, #122	; 0x7a
   12304:	bls	1231c <dcngettext@plt+0xe70>
   12308:	b	13148 <dcngettext@plt+0x1c9c>
   1230c:	mov	r1, r9
   12310:	mov	r9, #0
   12314:	cmp	r1, #122	; 0x7a
   12318:	bhi	13148 <dcngettext@plt+0x1c9c>
   1231c:	str	r7, [sp, #92]	; 0x5c
   12320:	movw	r5, #30238	; 0x761e
   12324:	add	r2, pc, #12
   12328:	mov	r7, #0
   1232c:	mvn	r3, #0
   12330:	movt	r5, #1
   12334:	ldr	pc, [r2, r1, lsl #2]
   12338:	andeq	r2, r1, r0, lsr r6
   1233c:	andeq	r3, r1, r4, asr #2
   12340:	andeq	r3, r1, r4, asr #2
   12344:	andeq	r3, r1, r4, asr #2
   12348:	andeq	r3, r1, r4, asr #2
   1234c:	andeq	r3, r1, r4, asr #2
   12350:	andeq	r3, r1, r4, asr #2
   12354:	andeq	r3, r1, r4, asr #2
   12358:	andeq	r3, r1, r4, asr #2
   1235c:	andeq	r3, r1, r4, asr #2
   12360:	andeq	r3, r1, r4, asr #2
   12364:	andeq	r3, r1, r4, asr #2
   12368:	andeq	r3, r1, r4, asr #2
   1236c:	andeq	r3, r1, r4, asr #2
   12370:	andeq	r3, r1, r4, asr #2
   12374:	andeq	r3, r1, r4, asr #2
   12378:	andeq	r3, r1, r4, asr #2
   1237c:	andeq	r3, r1, r4, asr #2
   12380:	andeq	r3, r1, r4, asr #2
   12384:	andeq	r3, r1, r4, asr #2
   12388:	andeq	r3, r1, r4, asr #2
   1238c:	andeq	r3, r1, r4, asr #2
   12390:	andeq	r3, r1, r4, asr #2
   12394:	andeq	r3, r1, r4, asr #2
   12398:	andeq	r3, r1, r4, asr #2
   1239c:	andeq	r3, r1, r4, asr #2
   123a0:	andeq	r3, r1, r4, asr #2
   123a4:	andeq	r3, r1, r4, asr #2
   123a8:	andeq	r3, r1, r4, asr #2
   123ac:	andeq	r3, r1, r4, asr #2
   123b0:	andeq	r3, r1, r4, asr #2
   123b4:	andeq	r3, r1, r4, asr #2
   123b8:	andeq	r3, r1, r4, asr #2
   123bc:	andeq	r3, r1, r4, asr #2
   123c0:	andeq	r3, r1, r4, asr #2
   123c4:	andeq	r3, r1, r4, asr #2
   123c8:	andeq	r3, r1, r4, asr #2
   123cc:	andeq	r2, r1, ip, lsr r6
   123d0:	andeq	r3, r1, r4, asr #2
   123d4:	andeq	r3, r1, r4, asr #2
   123d8:	andeq	r3, r1, r4, asr #2
   123dc:	andeq	r3, r1, r4, asr #2
   123e0:	andeq	r3, r1, r4, asr #2
   123e4:	andeq	r3, r1, r4, asr #2
   123e8:	andeq	r3, r1, r4, asr #2
   123ec:	andeq	r3, r1, r4, asr #2
   123f0:	andeq	r3, r1, r4, asr #2
   123f4:	andeq	r3, r1, r4, asr #2
   123f8:	andeq	r3, r1, r4, asr #2
   123fc:	andeq	r3, r1, r4, asr #2
   12400:	andeq	r3, r1, r4, asr #2
   12404:	andeq	r3, r1, r4, asr #2
   12408:	andeq	r3, r1, r4, asr #2
   1240c:	andeq	r3, r1, r4, asr #2
   12410:	andeq	r3, r1, r4, asr #2
   12414:	andeq	r3, r1, r4, asr #2
   12418:	andeq	r3, r1, r4, asr #2
   1241c:	andeq	r3, r1, r4, asr #2
   12420:			; <UNDEFINED> instruction: 0x000126bc
   12424:	andeq	r3, r1, r4, asr #2
   12428:	andeq	r3, r1, r4, asr #2
   1242c:	andeq	r3, r1, r4, asr #2
   12430:	andeq	r3, r1, r4, asr #2
   12434:	andeq	r3, r1, r4, asr #2
   12438:	andeq	r3, r1, r4, asr #2
   1243c:	andeq	r2, r1, r4, lsr r7
   12440:	andeq	r2, r1, ip, asr #14
   12444:	andeq	r2, r1, r4, ror #14
   12448:	andeq	r2, r1, r8, ror r7
   1244c:	andeq	r3, r1, r4, asr #2
   12450:	andeq	r2, r1, ip, lsl #15
   12454:	andeq	r2, r1, r4, lsr #10
   12458:	andeq	r2, r1, r0, asr #15
   1245c:	ldrdeq	r2, [r1], -r0
   12460:	andeq	r3, r1, r4, asr #2
   12464:	andeq	r3, r1, r4, asr #2
   12468:	andeq	r3, r1, r4, asr #2
   1246c:	andeq	r2, r1, r4, ror #15
   12470:	strdeq	r2, [r1], -ip
   12474:	andeq	r3, r1, r4, asr #2
   12478:	andeq	r2, r1, r4, lsr r9
   1247c:	andeq	r3, r1, r4, asr #2
   12480:	andeq	r2, r1, r4, ror #18
   12484:	andeq	r2, r1, ip, asr #18
   12488:	andeq	r2, r1, ip, asr r9
   1248c:	andeq	r2, r1, r0, lsr #20
   12490:	andeq	r2, r1, r4, lsr #10
   12494:	andeq	r2, r1, r0, asr sl
   12498:	andeq	r2, r1, r4, lsr #21
   1249c:			; <UNDEFINED> instruction: 0x00012ab8
   124a0:	strdeq	r2, [r1], -r8
   124a4:	andeq	r3, r1, r4, asr #2
   124a8:	andeq	r3, r1, r4, asr #2
   124ac:	andeq	r3, r1, r4, asr #2
   124b0:	andeq	r3, r1, r4, asr #2
   124b4:	andeq	r3, r1, r4, asr #2
   124b8:	andeq	r3, r1, r4, asr #2
   124bc:	andeq	r2, r1, r8, lsl #23
   124c0:	andeq	r2, r1, ip, lsl r6
   124c4:	andeq	r2, r1, r0, lsr #23
   124c8:			; <UNDEFINED> instruction: 0x00012bb4
   124cc:	andeq	r2, r1, ip, asr #23
   124d0:	andeq	r3, r1, r4, asr #2
   124d4:	andeq	r2, r1, r4, lsr #10
   124d8:	andeq	r2, r1, ip, lsl r6
   124dc:	andeq	r3, r1, r4, asr #2
   124e0:	ldrdeq	r2, [r1], -ip
   124e4:	strdeq	r2, [r1], -ip
   124e8:	andeq	r2, r1, r4, lsl ip
   124ec:	andeq	r2, r1, r8, ror #29
   124f0:	andeq	r2, r1, r4, lsl pc
   124f4:	andeq	r3, r1, r4, asr #2
   124f8:	andeq	r2, r1, r8, lsr r9
   124fc:	andeq	r2, r1, r8, lsl #31
   12500:	muleq	r1, r8, sp
   12504:	andeq	r2, r1, ip, lsr #31
   12508:	andeq	r3, r1, r4, ror r0
   1250c:	andeq	r3, r1, r8, ror #1
   12510:	andeq	r3, r1, r4, asr #2
   12514:	andeq	r3, r1, r0, lsr #2
   12518:	andeq	r3, r1, ip, lsr r1
   1251c:	andeq	r3, r1, r8, asr r2
   12520:	andeq	r2, r1, r0, ror #13
   12524:	cmp	r9, #69	; 0x45
   12528:	beq	13144 <dcngettext@plt+0x1c98>
   1252c:	ldr	r2, [sp, #68]	; 0x44
   12530:	str	lr, [sp, #84]	; 0x54
   12534:	movw	r0, #9363	; 0x2493
   12538:	str	ip, [sp, #72]	; 0x48
   1253c:	movt	r0, #37449	; 0x9249
   12540:	ldr	r5, [r2, #28]
   12544:	ldr	r8, [r2, #24]
   12548:	ldr	lr, [r2, #20]
   1254c:	movw	r2, #382	; 0x17e
   12550:	add	r2, r5, r2
   12554:	cmp	lr, #0
   12558:	sub	r2, r2, r8
   1255c:	smmla	r4, r2, r0, r2
   12560:	asr	r7, r4, #2
   12564:	add	r4, r7, r4, lsr #31
   12568:	rsb	r4, r4, r4, lsl #3
   1256c:	sub	r2, r4, r2
   12570:	mvn	r4, #99	; 0x63
   12574:	add	r2, r5, r2
   12578:	movwlt	r4, #300	; 0x12c
   1257c:	add	r2, r2, #3
   12580:	add	r4, r4, lr
   12584:	cmn	r2, #1
   12588:	ble	133d4 <dcngettext@plt+0x1f28>
   1258c:	movw	r7, #365	; 0x16d
   12590:	tst	r4, #3
   12594:	bne	125d8 <dcngettext@plt+0x112c>
   12598:	movw	r7, #34079	; 0x851f
   1259c:	mov	ip, #100	; 0x64
   125a0:	movt	r7, #20971	; 0x51eb
   125a4:	smmul	r7, r4, r7
   125a8:	asr	r3, r7, #5
   125ac:	add	r3, r3, r7, lsr #31
   125b0:	mls	ip, r3, ip, r4
   125b4:	asr	r3, r7, #7
   125b8:	add	r3, r3, r7, lsr #31
   125bc:	mov	r7, #400	; 0x190
   125c0:	mls	r3, r3, r7, r4
   125c4:	movw	r7, #365	; 0x16d
   125c8:	cmp	r3, #0
   125cc:	movweq	r7, #366	; 0x16e
   125d0:	cmp	ip, #0
   125d4:	movwne	r7, #366	; 0x16e
   125d8:	add	r3, r8, r7
   125dc:	movw	r7, #382	; 0x17e
   125e0:	add	r7, r5, r7
   125e4:	mov	r5, r0
   125e8:	sub	r3, r7, r3
   125ec:	smmla	r3, r3, r0, r3
   125f0:	asr	r7, r3, #2
   125f4:	add	r3, r7, r3, lsr #31
   125f8:	movw	r7, #379	; 0x17b
   125fc:	rsb	r3, r3, r3, lsl #3
   12600:	add	r3, r3, r8
   12604:	sub	r3, r3, r7
   12608:	mov	r7, #1
   1260c:	cmn	r3, #1
   12610:	movgt	r2, r3
   12614:	eor	r3, r7, r3, lsr #31
   12618:	b	13454 <dcngettext@plt+0x1fa8>
   1261c:	orr	ip, r0, ip
   12620:	mov	r7, #0
   12624:	cmp	r9, #69	; 0x45
   12628:	bne	12d98 <dcngettext@plt+0x18ec>
   1262c:	b	13144 <dcngettext@plt+0x1c98>
   12630:	ldr	r7, [sp, #92]	; 0x5c
   12634:	sub	r9, sl, #1
   12638:	b	1314c <dcngettext@plt+0x1ca0>
   1263c:	ldr	r7, [sp, #92]	; 0x5c
   12640:	sub	r9, sl, #1
   12644:	cmp	r9, r8
   12648:	bne	1314c <dcngettext@plt+0x1ca0>
   1264c:	subs	r0, r7, #45	; 0x2d
   12650:	mvn	r1, lr
   12654:	bicne	r0, r6, r6, asr #31
   12658:	cmp	r0, #1
   1265c:	mov	r5, r0
   12660:	movls	r5, #1
   12664:	cmp	r5, r1
   12668:	bcs	139a4 <dcngettext@plt+0x24f8>
   1266c:	ldr	r1, [sp, #88]	; 0x58
   12670:	cmp	r1, #0
   12674:	beq	1397c <dcngettext@plt+0x24d0>
   12678:	ldr	r7, [sp, #88]	; 0x58
   1267c:	mov	r4, lr
   12680:	cmp	r0, #2
   12684:	bcc	1396c <dcngettext@plt+0x24c0>
   12688:	ldr	r1, [sp, #92]	; 0x5c
   1268c:	sub	r6, r0, #1
   12690:	uxtb	r1, r1
   12694:	cmp	r1, #43	; 0x2b
   12698:	cmpne	r1, #48	; 0x30
   1269c:	bne	13954 <dcngettext@plt+0x24a8>
   126a0:	ldr	r7, [sp, #88]	; 0x58
   126a4:	mov	r0, #48	; 0x30
   126a8:	mov	r1, r7
   126ac:	bl	11434 <fputc@plt>
   126b0:	subs	r6, r6, #1
   126b4:	bne	126a4 <dcngettext@plt+0x11f8>
   126b8:	b	1396c <dcngettext@plt+0x24c0>
   126bc:	mov	r7, #1
   126c0:	b	126c8 <dcngettext@plt+0x121c>
   126c4:	add	r7, r7, #1
   126c8:	ldrb	r2, [sl, r7]
   126cc:	cmp	r2, #58	; 0x3a
   126d0:	beq	126c4 <dcngettext@plt+0x1218>
   126d4:	cmp	r2, #122	; 0x7a
   126d8:	bne	13144 <dcngettext@plt+0x1c98>
   126dc:	add	sl, sl, r7
   126e0:	ldr	r3, [sp, #68]	; 0x44
   126e4:	ldr	r2, [r3, #32]
   126e8:	cmp	r2, #0
   126ec:	blt	134b8 <dcngettext@plt+0x200c>
   126f0:	ldr	r2, [r3, #36]	; 0x24
   126f4:	str	lr, [sp, #84]	; 0x54
   126f8:	str	ip, [sp, #72]	; 0x48
   126fc:	cmp	r2, #0
   12700:	blt	135b0 <dcngettext@plt+0x2104>
   12704:	mov	ip, #0
   12708:	bne	135b4 <dcngettext@plt+0x2108>
   1270c:	ldr	r3, [sp, #44]	; 0x2c
   12710:	ldrb	r3, [r3]
   12714:	sub	r3, r3, #45	; 0x2d
   12718:	clz	r3, r3
   1271c:	lsr	ip, r3, #5
   12720:	cmp	r7, #3
   12724:	bls	135bc <dcngettext@plt+0x2110>
   12728:	ldr	lr, [sp, #84]	; 0x54
   1272c:	ldr	ip, [sp, #72]	; 0x48
   12730:	b	13144 <dcngettext@plt+0x1c98>
   12734:	cmp	r9, #0
   12738:	bne	13144 <dcngettext@plt+0x1c98>
   1273c:	orr	ip, r0, ip
   12740:	mov	r7, #0
   12744:	mov	r1, #65	; 0x41
   12748:	b	12d98 <dcngettext@plt+0x18ec>
   1274c:	cmp	r9, #69	; 0x45
   12750:	beq	13144 <dcngettext@plt+0x1c98>
   12754:	orr	ip, r0, ip
   12758:	mov	r7, #0
   1275c:	mov	r1, #66	; 0x42
   12760:	b	12d98 <dcngettext@plt+0x18ec>
   12764:	cmp	r9, #69	; 0x45
   12768:	bne	134c0 <dcngettext@plt+0x2014>
   1276c:	mov	r7, #0
   12770:	mov	r1, #67	; 0x43
   12774:	b	12d98 <dcngettext@plt+0x18ec>
   12778:	cmp	r9, #0
   1277c:	bne	13144 <dcngettext@plt+0x1c98>
   12780:	movw	r5, #30220	; 0x760c
   12784:	movt	r5, #1
   12788:	b	12964 <dcngettext@plt+0x14b8>
   1278c:	cmp	r9, #0
   12790:	bne	13144 <dcngettext@plt+0x1c98>
   12794:	ldr	r0, [sp, #92]	; 0x5c
   12798:	movw	r5, #30229	; 0x7615
   1279c:	movt	r5, #1
   127a0:	cmp	r0, #0
   127a4:	bne	136a4 <dcngettext@plt+0x21f8>
   127a8:	cmp	r6, #0
   127ac:	bge	136a4 <dcngettext@plt+0x21f8>
   127b0:	mov	r0, #43	; 0x2b
   127b4:	mov	r3, #4
   127b8:	str	r0, [sp, #92]	; 0x5c
   127bc:	b	12964 <dcngettext@plt+0x14b8>
   127c0:	cmp	r9, #69	; 0x45
   127c4:	beq	13144 <dcngettext@plt+0x1c98>
   127c8:	ldr	r2, [sp, #36]	; 0x24
   127cc:	b	12bc0 <dcngettext@plt+0x1714>
   127d0:	cmp	r9, #69	; 0x45
   127d4:	beq	13144 <dcngettext@plt+0x1c98>
   127d8:	ldr	r3, [sp, #32]
   127dc:	str	ip, [sp, #72]	; 0x48
   127e0:	b	12c34 <dcngettext@plt+0x1788>
   127e4:	cmp	r9, #69	; 0x45
   127e8:	beq	13144 <dcngettext@plt+0x1c98>
   127ec:	ldr	r2, [sp, #68]	; 0x44
   127f0:	str	ip, [sp, #72]	; 0x48
   127f4:	ldr	r3, [r2, #4]
   127f8:	b	12c34 <dcngettext@plt+0x1788>
   127fc:	cmp	r9, #69	; 0x45
   12800:	beq	13144 <dcngettext@plt+0x1c98>
   12804:	ldr	r2, [fp, #20]
   12808:	cmp	r6, #1
   1280c:	mov	r7, #0
   12810:	mov	r0, #8
   12814:	str	lr, [sp, #84]	; 0x54
   12818:	movwlt	r6, #9
   1281c:	b	1283c <dcngettext@plt+0x1390>
   12820:	movw	r1, #26215	; 0x6667
   12824:	sub	r0, r0, #1
   12828:	sub	r7, r7, #1
   1282c:	movt	r1, #26214	; 0x6666
   12830:	smmul	r1, r2, r1
   12834:	asr	r2, r1, #2
   12838:	add	r2, r2, r1, lsr #31
   1283c:	add	r1, r7, #9
   12840:	cmp	r6, r1
   12844:	blt	12820 <dcngettext@plt+0x1374>
   12848:	movw	r3, #26215	; 0x6667
   1284c:	cmp	r1, #2
   12850:	movt	r3, #26214	; 0x6666
   12854:	blt	12874 <dcngettext@plt+0x13c8>
   12858:	smmul	r5, r2, r3
   1285c:	asr	r4, r5, #2
   12860:	add	r5, r4, r5, lsr #31
   12864:	add	r5, r5, r5, lsl #2
   12868:	sub	r5, r2, r5, lsl #1
   1286c:	cmp	r5, #0
   12870:	beq	12820 <dcngettext@plt+0x1374>
   12874:	mov	lr, ip
   12878:	cmp	r1, #1
   1287c:	sub	ip, fp, #46	; 0x2e
   12880:	blt	128b8 <dcngettext@plt+0x140c>
   12884:	smmul	r5, r2, r3
   12888:	asr	r4, r5, #2
   1288c:	add	r5, r4, r5, lsr #31
   12890:	add	r4, r5, r5, lsl #2
   12894:	sub	r2, r2, r4, lsl #1
   12898:	add	r2, r2, #48	; 0x30
   1289c:	strb	r2, [ip, r0]
   128a0:	sub	r2, r0, #1
   128a4:	add	r0, r0, #1
   128a8:	cmp	r0, #1
   128ac:	mov	r0, r2
   128b0:	mov	r2, r5
   128b4:	bgt	12884 <dcngettext@plt+0x13d8>
   128b8:	ldr	r0, [sp, #92]	; 0x5c
   128bc:	cmp	r0, #0
   128c0:	movweq	r0, #48	; 0x30
   128c4:	str	r0, [sp, #92]	; 0x5c
   128c8:	ldr	r0, [sp, #84]	; 0x54
   128cc:	mvn	r0, r0
   128d0:	cmp	r1, r0
   128d4:	bcs	139a4 <dcngettext@plt+0x24f8>
   128d8:	ldr	r0, [sp, #88]	; 0x58
   128dc:	cmp	r0, #0
   128e0:	beq	13774 <dcngettext@plt+0x22c8>
   128e4:	tst	lr, #1
   128e8:	beq	13764 <dcngettext@plt+0x22b8>
   128ec:	ldr	r8, [sp, #88]	; 0x58
   128f0:	cmn	r7, #9
   128f4:	sub	r0, fp, #46	; 0x2e
   128f8:	beq	13774 <dcngettext@plt+0x22c8>
   128fc:	mov	r4, #0
   12900:	mov	r9, r0
   12904:	bl	11314 <__ctype_toupper_loc@plt>
   12908:	mov	r5, r0
   1290c:	ldrb	r0, [r9, -r4]
   12910:	ldr	r1, [r5]
   12914:	ldr	r0, [r1, r0, lsl #2]
   12918:	mov	r1, r8
   1291c:	bl	11434 <fputc@plt>
   12920:	sub	r4, r4, #1
   12924:	add	r0, r7, r4
   12928:	cmn	r0, #9
   1292c:	bne	1290c <dcngettext@plt+0x1460>
   12930:	b	13774 <dcngettext@plt+0x22c8>
   12934:	mov	r7, #1
   12938:	eor	r1, r0, #1
   1293c:	orr	r7, r0, r7
   12940:	and	ip, ip, r1
   12944:	mov	r1, #112	; 0x70
   12948:	b	12d98 <dcngettext@plt+0x18ec>
   1294c:	cmp	r9, #69	; 0x45
   12950:	beq	13144 <dcngettext@plt+0x1c98>
   12954:	ldr	r2, [sp, #68]	; 0x44
   12958:	b	12bc0 <dcngettext@plt+0x1714>
   1295c:	movw	r5, #30244	; 0x7624
   12960:	movt	r5, #1
   12964:	ldr	r0, [sp, #92]	; 0x5c
   12968:	str	r3, [sp, #76]	; 0x4c
   1296c:	and	r4, ip, #1
   12970:	mov	r1, r5
   12974:	mov	r9, lr
   12978:	stm	sp, {r0, r3}
   1297c:	mov	r7, r0
   12980:	ldr	r0, [fp, #16]
   12984:	mov	r3, r4
   12988:	ldr	r2, [sp, #68]	; 0x44
   1298c:	str	r0, [sp, #8]
   12990:	ldr	r0, [fp, #20]
   12994:	str	r0, [sp, #12]
   12998:	mov	r0, #0
   1299c:	bl	12058 <dcngettext@plt+0xbac>
   129a0:	subs	r1, r7, #45	; 0x2d
   129a4:	mvn	r2, r9
   129a8:	movne	r1, r6
   129ac:	cmp	r6, #0
   129b0:	mov	r6, r0
   129b4:	movwlt	r1, #0
   129b8:	cmp	r1, r0
   129bc:	movhi	r6, r1
   129c0:	cmp	r6, r2
   129c4:	bcs	139a4 <dcngettext@plt+0x24f8>
   129c8:	ldr	r2, [sp, #88]	; 0x58
   129cc:	mov	lr, r9
   129d0:	cmp	r2, #0
   129d4:	beq	13698 <dcngettext@plt+0x21ec>
   129d8:	ldr	r8, [sp, #88]	; 0x58
   129dc:	cmp	r1, r0
   129e0:	str	r4, [sp, #72]	; 0x48
   129e4:	bls	13660 <dcngettext@plt+0x21b4>
   129e8:	sub	r7, r1, r0
   129ec:	ldr	r0, [sp, #92]	; 0x5c
   129f0:	cmp	r0, #43	; 0x2b
   129f4:	cmpne	r0, #48	; 0x30
   129f8:	bne	13640 <dcngettext@plt+0x2194>
   129fc:	ldr	r8, [sp, #88]	; 0x58
   12a00:	cmp	r7, #0
   12a04:	beq	13660 <dcngettext@plt+0x21b4>
   12a08:	mov	r0, #48	; 0x30
   12a0c:	mov	r1, r8
   12a10:	bl	11434 <fputc@plt>
   12a14:	subs	r7, r7, #1
   12a18:	bne	12a08 <dcngettext@plt+0x155c>
   12a1c:	b	13660 <dcngettext@plt+0x21b4>
   12a20:	cmp	r9, #69	; 0x45
   12a24:	beq	13144 <dcngettext@plt+0x1c98>
   12a28:	ldr	r3, [sp, #68]	; 0x44
   12a2c:	str	ip, [sp, #72]	; 0x48
   12a30:	ldr	r2, [r3, #24]
   12a34:	ldr	r3, [r3, #28]
   12a38:	add	r3, r3, #7
   12a3c:	sub	r2, r3, r2
   12a40:	movw	r3, #9363	; 0x2493
   12a44:	movt	r3, #37449	; 0x9249
   12a48:	smmla	r2, r2, r3, r2
   12a4c:	b	12a98 <dcngettext@plt+0x15ec>
   12a50:	cmp	r9, #69	; 0x45
   12a54:	beq	13144 <dcngettext@plt+0x1c98>
   12a58:	ldr	r3, [sp, #68]	; 0x44
   12a5c:	str	ip, [sp, #72]	; 0x48
   12a60:	movw	ip, #9363	; 0x2493
   12a64:	mov	r7, lr
   12a68:	movt	ip, #37449	; 0x9249
   12a6c:	ldr	r2, [r3, #24]
   12a70:	ldr	r3, [r3, #28]
   12a74:	add	r2, r2, #6
   12a78:	smmla	r5, r2, ip, r2
   12a7c:	asr	r4, r5, #2
   12a80:	add	r5, r4, r5, lsr #31
   12a84:	rsb	r5, r5, r5, lsl #3
   12a88:	sub	r2, r5, r2
   12a8c:	add	r2, r3, r2
   12a90:	add	r2, r2, #7
   12a94:	smmla	r2, r2, ip, r2
   12a98:	asr	r3, r2, #2
   12a9c:	add	r3, r3, r2, lsr #31
   12aa0:	b	12c34 <dcngettext@plt+0x1788>
   12aa4:	cmp	r9, #79	; 0x4f
   12aa8:	beq	13144 <dcngettext@plt+0x1c98>
   12aac:	mov	r7, #0
   12ab0:	mov	r1, #88	; 0x58
   12ab4:	b	12d98 <dcngettext@plt+0x18ec>
   12ab8:	cmp	r9, #69	; 0x45
   12abc:	beq	13634 <dcngettext@plt+0x2188>
   12ac0:	cmp	r9, #79	; 0x4f
   12ac4:	beq	13144 <dcngettext@plt+0x1c98>
   12ac8:	ldr	r2, [sp, #68]	; 0x44
   12acc:	movw	r3, #63636	; 0xf894
   12ad0:	str	ip, [sp, #72]	; 0x48
   12ad4:	mov	ip, #0
   12ad8:	mov	r8, #4
   12adc:	movt	r3, #65535	; 0xffff
   12ae0:	ldr	r2, [r2, #20]
   12ae4:	cmp	r2, r3
   12ae8:	movw	r3, #1900	; 0x76c
   12aec:	movwlt	ip, #1
   12af0:	add	r3, r2, r3
   12af4:	b	136e4 <dcngettext@plt+0x2238>
   12af8:	str	r0, [sp, #76]	; 0x4c
   12afc:	ldr	r0, [sp, #92]	; 0x5c
   12b00:	str	ip, [sp, #72]	; 0x48
   12b04:	mov	r8, lr
   12b08:	subs	r4, r0, #45	; 0x2d
   12b0c:	ldr	r0, [sp, #44]	; 0x2c
   12b10:	bicne	r4, r6, r6, asr #31
   12b14:	bl	1135c <strlen@plt>
   12b18:	cmp	r4, r0
   12b1c:	mov	r9, r0
   12b20:	mov	r5, r0
   12b24:	mvn	r0, r8
   12b28:	str	r8, [sp, #84]	; 0x54
   12b2c:	movhi	r9, r4
   12b30:	cmp	r9, r0
   12b34:	bcs	139a4 <dcngettext@plt+0x24f8>
   12b38:	ldr	r7, [sp, #88]	; 0x58
   12b3c:	cmp	r7, #0
   12b40:	beq	138e4 <dcngettext@plt+0x2438>
   12b44:	cmp	r4, r5
   12b48:	bls	1383c <dcngettext@plt+0x2390>
   12b4c:	ldr	r0, [sp, #92]	; 0x5c
   12b50:	sub	r6, r4, r5
   12b54:	uxtb	r0, r0
   12b58:	cmp	r0, #43	; 0x2b
   12b5c:	cmpne	r0, #48	; 0x30
   12b60:	bne	1381c <dcngettext@plt+0x2370>
   12b64:	ldr	r4, [sp, #88]	; 0x58
   12b68:	cmp	r6, #0
   12b6c:	beq	1383c <dcngettext@plt+0x2390>
   12b70:	mov	r0, #48	; 0x30
   12b74:	mov	r1, r4
   12b78:	bl	11434 <fputc@plt>
   12b7c:	subs	r6, r6, #1
   12b80:	bne	12b70 <dcngettext@plt+0x16c4>
   12b84:	b	1383c <dcngettext@plt+0x2390>
   12b88:	cmp	r9, #0
   12b8c:	bne	13144 <dcngettext@plt+0x1c98>
   12b90:	orr	ip, r0, ip
   12b94:	mov	r7, #0
   12b98:	mov	r1, #97	; 0x61
   12b9c:	b	12d98 <dcngettext@plt+0x18ec>
   12ba0:	cmp	r9, #79	; 0x4f
   12ba4:	beq	13144 <dcngettext@plt+0x1c98>
   12ba8:	mov	r7, #0
   12bac:	mov	r1, #99	; 0x63
   12bb0:	b	12d98 <dcngettext@plt+0x18ec>
   12bb4:	cmp	r9, #69	; 0x45
   12bb8:	beq	13144 <dcngettext@plt+0x1c98>
   12bbc:	ldr	r2, [sp, #28]
   12bc0:	str	ip, [sp, #72]	; 0x48
   12bc4:	ldr	r3, [r2]
   12bc8:	b	12c34 <dcngettext@plt+0x1788>
   12bcc:	ldr	r2, [sp, #28]
   12bd0:	cmp	r9, #69	; 0x45
   12bd4:	bne	12c08 <dcngettext@plt+0x175c>
   12bd8:	b	13144 <dcngettext@plt+0x1c98>
   12bdc:	cmp	r9, #69	; 0x45
   12be0:	beq	13144 <dcngettext@plt+0x1c98>
   12be4:	ldr	r2, [sp, #68]	; 0x44
   12be8:	str	ip, [sp, #72]	; 0x48
   12bec:	mov	ip, #0
   12bf0:	mov	r8, #3
   12bf4:	ldr	r2, [r2, #28]
   12bf8:	b	12f04 <dcngettext@plt+0x1a58>
   12bfc:	ldr	r2, [sp, #36]	; 0x24
   12c00:	cmp	r9, #69	; 0x45
   12c04:	beq	13144 <dcngettext@plt+0x1c98>
   12c08:	ldr	r3, [r2]
   12c0c:	ldr	r7, [sp, #92]	; 0x5c
   12c10:	b	12c24 <dcngettext@plt+0x1778>
   12c14:	ldr	r3, [sp, #32]
   12c18:	ldr	r7, [sp, #92]	; 0x5c
   12c1c:	cmp	r9, #69	; 0x45
   12c20:	beq	13148 <dcngettext@plt+0x1c9c>
   12c24:	cmp	r7, #0
   12c28:	str	ip, [sp, #72]	; 0x48
   12c2c:	movweq	r7, #95	; 0x5f
   12c30:	str	r7, [sp, #92]	; 0x5c
   12c34:	mov	r8, #2
   12c38:	lsr	ip, r3, #31
   12c3c:	cmp	ip, #0
   12c40:	mov	r2, #0
   12c44:	mov	r0, #0
   12c48:	movwne	ip, #1
   12c4c:	cmp	r9, #79	; 0x4f
   12c50:	moveq	r7, #0
   12c54:	cmpeq	ip, #0
   12c58:	beq	12d94 <dcngettext@plt+0x18e8>
   12c5c:	ldr	r5, [sp, #60]	; 0x3c
   12c60:	ldr	r7, [sp, #92]	; 0x5c
   12c64:	cmp	ip, #0
   12c68:	rsbne	r3, r3, #0
   12c6c:	tst	r2, #1
   12c70:	asr	r2, r2, #1
   12c74:	movne	r1, #58	; 0x3a
   12c78:	strbne	r1, [r5, #-1]!
   12c7c:	movw	r1, #52429	; 0xcccd
   12c80:	cmp	r3, #9
   12c84:	movt	r1, #52428	; 0xcccc
   12c88:	umull	r4, r1, r3, r1
   12c8c:	lsr	r4, r1, #3
   12c90:	add	r1, r4, r4, lsl #2
   12c94:	sub	r1, r3, r1, lsl #1
   12c98:	mov	r3, r4
   12c9c:	orr	r1, r1, #48	; 0x30
   12ca0:	strb	r1, [r5, #-1]!
   12ca4:	bhi	12c6c <dcngettext@plt+0x17c0>
   12ca8:	cmp	r2, #0
   12cac:	mov	r3, r4
   12cb0:	bne	12c6c <dcngettext@plt+0x17c0>
   12cb4:	cmp	r6, #0
   12cb8:	movge	r8, r6
   12cbc:	cmp	r0, #0
   12cc0:	movwne	r0, #43	; 0x2b
   12cc4:	cmp	r7, #0
   12cc8:	movweq	r7, #48	; 0x30
   12ccc:	mov	r3, r7
   12cd0:	ldr	r1, [sp, #60]	; 0x3c
   12cd4:	cmp	ip, #0
   12cd8:	mov	r2, r8
   12cdc:	movwne	r0, #45	; 0x2d
   12ce0:	cmp	r0, #0
   12ce4:	subne	r2, r2, #1
   12ce8:	sub	r9, r1, r5
   12cec:	sub	r7, r2, r9
   12cf0:	cmp	r7, #1
   12cf4:	movwlt	r7, #0
   12cf8:	subs	r6, r3, #45	; 0x2d
   12cfc:	moveq	r7, r6
   12d00:	cmp	r0, #0
   12d04:	beq	12e74 <dcngettext@plt+0x19c8>
   12d08:	str	r9, [sp, #92]	; 0x5c
   12d0c:	mov	r9, r3
   12d10:	cmp	r3, #95	; 0x5f
   12d14:	bne	12d60 <dcngettext@plt+0x18b4>
   12d18:	str	r8, [sp, #76]	; 0x4c
   12d1c:	ldr	r8, [sp, #88]	; 0x58
   12d20:	str	r0, [sp, #16]
   12d24:	str	lr, [sp, #84]	; 0x54
   12d28:	cmp	r8, #0
   12d2c:	cmpne	r7, #0
   12d30:	beq	12d4c <dcngettext@plt+0x18a0>
   12d34:	mov	r4, r7
   12d38:	mov	r0, #32
   12d3c:	mov	r1, r8
   12d40:	bl	11434 <fputc@plt>
   12d44:	subs	r4, r4, #1
   12d48:	bne	12d38 <dcngettext@plt+0x188c>
   12d4c:	ldr	r8, [sp, #76]	; 0x4c
   12d50:	ldr	lr, [sp, #84]	; 0x54
   12d54:	ldr	r0, [sp, #16]
   12d58:	sub	r8, r8, r7
   12d5c:	add	lr, r7, lr
   12d60:	mov	r7, r9
   12d64:	ldr	r9, [sp, #92]	; 0x5c
   12d68:	cmn	lr, #3
   12d6c:	bhi	139a4 <dcngettext@plt+0x24f8>
   12d70:	ldr	r1, [sp, #88]	; 0x58
   12d74:	cmp	r1, #0
   12d78:	beq	12d88 <dcngettext@plt+0x18dc>
   12d7c:	mov	r4, lr
   12d80:	bl	11434 <fputc@plt>
   12d84:	mov	lr, r4
   12d88:	sub	r8, r8, #1
   12d8c:	add	lr, lr, #1
   12d90:	b	12e78 <dcngettext@plt+0x19cc>
   12d94:	ldr	ip, [sp, #72]	; 0x48
   12d98:	movw	r2, #9504	; 0x2520
   12d9c:	cmp	r9, #0
   12da0:	ldr	r3, [sp, #68]	; 0x44
   12da4:	mov	r0, #0
   12da8:	mov	r4, lr
   12dac:	str	ip, [sp, #72]	; 0x48
   12db0:	strh	r2, [fp, #-51]	; 0xffffffcd
   12db4:	ldr	r2, [sp, #64]	; 0x40
   12db8:	strbne	r9, [fp, #-49]	; 0xffffffcf
   12dbc:	ldrne	r2, [sp, #48]	; 0x30
   12dc0:	strb	r0, [r2, #1]
   12dc4:	strb	r1, [r2]
   12dc8:	add	r0, sp, #96	; 0x60
   12dcc:	sub	r2, fp, #51	; 0x33
   12dd0:	mov	r1, #1024	; 0x400
   12dd4:	bl	112e4 <strftime@plt>
   12dd8:	cmp	r0, #0
   12ddc:	beq	12e68 <dcngettext@plt+0x19bc>
   12de0:	mov	r2, r0
   12de4:	ldr	r0, [sp, #92]	; 0x5c
   12de8:	mvn	r1, r4
   12dec:	sub	r5, r2, #1
   12df0:	mov	r9, r5
   12df4:	subs	r0, r0, #45	; 0x2d
   12df8:	movne	r0, r6
   12dfc:	cmp	r6, #0
   12e00:	movwlt	r0, #0
   12e04:	cmp	r0, r5
   12e08:	movhi	r9, r0
   12e0c:	cmp	r9, r1
   12e10:	bcs	139a4 <dcngettext@plt+0x24f8>
   12e14:	ldr	r6, [sp, #88]	; 0x58
   12e18:	str	r4, [sp, #84]	; 0x54
   12e1c:	cmp	r6, #0
   12e20:	beq	133c4 <dcngettext@plt+0x1f18>
   12e24:	cmp	r0, r5
   12e28:	str	r2, [sp, #76]	; 0x4c
   12e2c:	bls	13318 <dcngettext@plt+0x1e6c>
   12e30:	sub	r8, r0, r5
   12e34:	ldr	r0, [sp, #92]	; 0x5c
   12e38:	cmp	r0, #43	; 0x2b
   12e3c:	cmpne	r0, #48	; 0x30
   12e40:	bne	132f8 <dcngettext@plt+0x1e4c>
   12e44:	ldr	r4, [sp, #88]	; 0x58
   12e48:	cmp	r8, #0
   12e4c:	beq	13318 <dcngettext@plt+0x1e6c>
   12e50:	mov	r0, #48	; 0x30
   12e54:	mov	r1, r4
   12e58:	bl	11434 <fputc@plt>
   12e5c:	subs	r8, r8, #1
   12e60:	bne	12e50 <dcngettext@plt+0x19a4>
   12e64:	b	13318 <dcngettext@plt+0x1e6c>
   12e68:	ldr	r7, [sp, #88]	; 0x58
   12e6c:	mov	lr, r4
   12e70:	b	13984 <dcngettext@plt+0x24d8>
   12e74:	mov	r7, r3
   12e78:	cmp	r7, #45	; 0x2d
   12e7c:	mvn	r0, lr
   12e80:	bicne	r6, r8, r8, asr #31
   12e84:	mov	r8, r9
   12e88:	cmp	r6, r9
   12e8c:	movhi	r8, r6
   12e90:	cmp	r8, r0
   12e94:	bcs	139a4 <dcngettext@plt+0x24f8>
   12e98:	mov	r0, r7
   12e9c:	ldr	r7, [sp, #88]	; 0x58
   12ea0:	str	lr, [sp, #84]	; 0x54
   12ea4:	cmp	r7, #0
   12ea8:	beq	132ec <dcngettext@plt+0x1e40>
   12eac:	cmp	r6, r9
   12eb0:	bls	1328c <dcngettext@plt+0x1de0>
   12eb4:	cmp	r0, #43	; 0x2b
   12eb8:	sub	r6, r6, r9
   12ebc:	cmpne	r0, #48	; 0x30
   12ec0:	bne	1326c <dcngettext@plt+0x1dc0>
   12ec4:	ldr	r4, [sp, #88]	; 0x58
   12ec8:	cmp	r6, #0
   12ecc:	beq	1328c <dcngettext@plt+0x1de0>
   12ed0:	mov	r0, #48	; 0x30
   12ed4:	mov	r1, r4
   12ed8:	bl	11434 <fputc@plt>
   12edc:	subs	r6, r6, #1
   12ee0:	bne	12ed0 <dcngettext@plt+0x1a24>
   12ee4:	b	1328c <dcngettext@plt+0x1de0>
   12ee8:	cmp	r9, #69	; 0x45
   12eec:	beq	13144 <dcngettext@plt+0x1c98>
   12ef0:	ldr	r2, [sp, #68]	; 0x44
   12ef4:	str	ip, [sp, #72]	; 0x48
   12ef8:	mov	ip, #0
   12efc:	mov	r8, #2
   12f00:	ldr	r2, [r2, #16]
   12f04:	cmn	r2, #1
   12f08:	add	r3, r2, #1
   12f0c:	movwlt	ip, #1
   12f10:	b	12c3c <dcngettext@plt+0x1790>
   12f14:	ldr	r0, [sp, #92]	; 0x5c
   12f18:	mvn	r1, lr
   12f1c:	subs	r0, r0, #45	; 0x2d
   12f20:	bicne	r0, r6, r6, asr #31
   12f24:	cmp	r0, #1
   12f28:	mov	r5, r0
   12f2c:	movls	r5, #1
   12f30:	cmp	r5, r1
   12f34:	bcs	139a4 <dcngettext@plt+0x24f8>
   12f38:	ldr	r1, [sp, #88]	; 0x58
   12f3c:	cmp	r1, #0
   12f40:	beq	1397c <dcngettext@plt+0x24d0>
   12f44:	ldr	r7, [sp, #88]	; 0x58
   12f48:	mov	r4, lr
   12f4c:	cmp	r0, #2
   12f50:	bcc	13908 <dcngettext@plt+0x245c>
   12f54:	ldr	r1, [sp, #92]	; 0x5c
   12f58:	sub	r6, r0, #1
   12f5c:	uxtb	r1, r1
   12f60:	cmp	r1, #43	; 0x2b
   12f64:	cmpne	r1, #48	; 0x30
   12f68:	bne	138f0 <dcngettext@plt+0x2444>
   12f6c:	ldr	r7, [sp, #88]	; 0x58
   12f70:	mov	r0, #48	; 0x30
   12f74:	mov	r1, r7
   12f78:	bl	11434 <fputc@plt>
   12f7c:	subs	r6, r6, #1
   12f80:	bne	12f70 <dcngettext@plt+0x1ac4>
   12f84:	b	13908 <dcngettext@plt+0x245c>
   12f88:	ldr	r2, [sp, #68]	; 0x44
   12f8c:	mov	r3, #11
   12f90:	mov	r8, #1
   12f94:	str	ip, [sp, #72]	; 0x48
   12f98:	mov	ip, #0
   12f9c:	ldr	r2, [r2, #16]
   12fa0:	mul	r2, r2, r3
   12fa4:	add	r3, r8, r2, asr #5
   12fa8:	b	12c3c <dcngettext@plt+0x1790>
   12fac:	ldr	r2, [sp, #68]	; 0x44
   12fb0:	mov	r0, #28
   12fb4:	add	r1, sp, #96	; 0x60
   12fb8:	str	ip, [sp, #72]	; 0x48
   12fbc:	str	lr, [sp, #84]	; 0x54
   12fc0:	mov	r4, r1
   12fc4:	mov	r3, r2
   12fc8:	add	r2, r2, #16
   12fcc:	vld1.32	{d16-d17}, [r3], r0
   12fd0:	vld1.32	{d18-d19}, [r2]
   12fd4:	add	r2, r1, #16
   12fd8:	vld1.32	{d20-d21}, [r3]
   12fdc:	vst1.64	{d16-d17}, [r4], r0
   12fe0:	mvn	r0, #0
   12fe4:	vst1.64	{d18-d19}, [r2]
   12fe8:	vst1.32	{d20-d21}, [r4]
   12fec:	str	r0, [r4]
   12ff0:	ldr	r0, [fp, #16]
   12ff4:	bl	15f70 <dcngettext@plt+0x4ac4>
   12ff8:	ldr	r1, [r4]
   12ffc:	cmp	r1, #0
   13000:	blt	139c0 <dcngettext@plt+0x2514>
   13004:	ldr	r1, [sp, #20]
   13008:	lsr	ip, r0, #31
   1300c:	mov	r2, r0
   13010:	movw	r3, #26215	; 0x6667
   13014:	cmp	r0, #0
   13018:	movt	r3, #26214	; 0x6666
   1301c:	smmul	r3, r2, r3
   13020:	asr	r7, r3, #2
   13024:	add	r3, r7, r3, lsr #31
   13028:	add	r7, r3, r3, lsl #2
   1302c:	sub	r7, r2, r7, lsl #1
   13030:	add	r2, r2, #9
   13034:	rsblt	r7, r7, #0
   13038:	cmp	r2, #18
   1303c:	mov	r2, r3
   13040:	add	r7, r7, #48	; 0x30
   13044:	strb	r7, [r1], #-1
   13048:	bhi	13010 <dcngettext@plt+0x1b64>
   1304c:	ldr	r3, [sp, #92]	; 0x5c
   13050:	ldr	lr, [sp, #84]	; 0x54
   13054:	cmp	r6, #0
   13058:	add	r5, r1, #1
   1305c:	mov	r0, #0
   13060:	movwlt	r6, #1
   13064:	mov	r8, r6
   13068:	cmp	r3, #0
   1306c:	movweq	r3, #48	; 0x30
   13070:	b	12cd0 <dcngettext@plt+0x1824>
   13074:	ldr	r0, [sp, #92]	; 0x5c
   13078:	mvn	r1, lr
   1307c:	subs	r0, r0, #45	; 0x2d
   13080:	bicne	r0, r6, r6, asr #31
   13084:	cmp	r0, #1
   13088:	mov	r5, r0
   1308c:	movls	r5, #1
   13090:	cmp	r5, r1
   13094:	bcs	139a4 <dcngettext@plt+0x24f8>
   13098:	ldr	r1, [sp, #88]	; 0x58
   1309c:	cmp	r1, #0
   130a0:	beq	1397c <dcngettext@plt+0x24d0>
   130a4:	ldr	r7, [sp, #88]	; 0x58
   130a8:	mov	r4, lr
   130ac:	cmp	r0, #2
   130b0:	bcc	13928 <dcngettext@plt+0x247c>
   130b4:	ldr	r1, [sp, #92]	; 0x5c
   130b8:	sub	r6, r0, #1
   130bc:	uxtb	r1, r1
   130c0:	cmp	r1, #43	; 0x2b
   130c4:	cmpne	r1, #48	; 0x30
   130c8:	bne	13910 <dcngettext@plt+0x2464>
   130cc:	ldr	r7, [sp, #88]	; 0x58
   130d0:	mov	r0, #48	; 0x30
   130d4:	mov	r1, r7
   130d8:	bl	11434 <fputc@plt>
   130dc:	subs	r6, r6, #1
   130e0:	bne	130d0 <dcngettext@plt+0x1c24>
   130e4:	b	13928 <dcngettext@plt+0x247c>
   130e8:	ldr	r2, [sp, #68]	; 0x44
   130ec:	movw	r3, #9363	; 0x2493
   130f0:	str	ip, [sp, #72]	; 0x48
   130f4:	mov	r8, #1
   130f8:	movt	r3, #37449	; 0x9249
   130fc:	ldr	r2, [r2, #24]
   13100:	add	r2, r2, #6
   13104:	smmla	r3, r2, r3, r2
   13108:	asr	r7, r3, #2
   1310c:	add	r3, r7, r3, lsr #31
   13110:	rsb	r3, r3, r3, lsl #3
   13114:	sub	r2, r2, r3
   13118:	add	r3, r2, #1
   1311c:	b	12c38 <dcngettext@plt+0x178c>
   13120:	cmp	r9, #69	; 0x45
   13124:	beq	13144 <dcngettext@plt+0x1c98>
   13128:	ldr	r2, [sp, #68]	; 0x44
   1312c:	str	ip, [sp, #72]	; 0x48
   13130:	mov	r8, #1
   13134:	ldr	r3, [r2, #24]
   13138:	b	12c38 <dcngettext@plt+0x178c>
   1313c:	cmp	r9, #79	; 0x4f
   13140:	bne	13518 <dcngettext@plt+0x206c>
   13144:	ldr	r7, [sp, #92]	; 0x5c
   13148:	mov	r9, sl
   1314c:	subs	r0, r7, #45	; 0x2d
   13150:	sub	r1, r9, r8
   13154:	add	r5, r1, #1
   13158:	bicne	r0, r6, r6, asr #31
   1315c:	mvn	r1, lr
   13160:	cmp	r0, r5
   13164:	mov	r6, r5
   13168:	movhi	r6, r0
   1316c:	cmp	r6, r1
   13170:	bcs	139a4 <dcngettext@plt+0x24f8>
   13174:	mov	r1, r7
   13178:	ldr	r7, [sp, #88]	; 0x58
   1317c:	str	lr, [sp, #84]	; 0x54
   13180:	cmp	r7, #0
   13184:	beq	13248 <dcngettext@plt+0x1d9c>
   13188:	mov	sl, ip
   1318c:	cmp	r0, r5
   13190:	bls	131ec <dcngettext@plt+0x1d40>
   13194:	sub	r7, r0, r5
   13198:	uxtb	r0, r1
   1319c:	cmp	r0, #43	; 0x2b
   131a0:	cmpne	r0, #48	; 0x30
   131a4:	bne	131cc <dcngettext@plt+0x1d20>
   131a8:	ldr	r4, [sp, #88]	; 0x58
   131ac:	cmp	r7, #0
   131b0:	beq	131ec <dcngettext@plt+0x1d40>
   131b4:	mov	r0, #48	; 0x30
   131b8:	mov	r1, r4
   131bc:	bl	11434 <fputc@plt>
   131c0:	subs	r7, r7, #1
   131c4:	bne	131b4 <dcngettext@plt+0x1d08>
   131c8:	b	131ec <dcngettext@plt+0x1d40>
   131cc:	ldr	r4, [sp, #88]	; 0x58
   131d0:	cmp	r7, #0
   131d4:	beq	131ec <dcngettext@plt+0x1d40>
   131d8:	mov	r0, #32
   131dc:	mov	r1, r4
   131e0:	bl	11434 <fputc@plt>
   131e4:	subs	r7, r7, #1
   131e8:	bne	131d8 <dcngettext@plt+0x1d2c>
   131ec:	tst	sl, #1
   131f0:	beq	13230 <dcngettext@plt+0x1d84>
   131f4:	ldr	r7, [sp, #88]	; 0x58
   131f8:	cmp	r5, #0
   131fc:	beq	13248 <dcngettext@plt+0x1d9c>
   13200:	sub	r0, r8, #1
   13204:	sub	r4, r0, r9
   13208:	bl	11314 <__ctype_toupper_loc@plt>
   1320c:	mov	r5, r0
   13210:	ldrb	r0, [r8], #1
   13214:	ldr	r1, [r5]
   13218:	ldr	r0, [r1, r0, lsl #2]
   1321c:	mov	r1, r7
   13220:	bl	11434 <fputc@plt>
   13224:	adds	r4, r4, #1
   13228:	bne	13210 <dcngettext@plt+0x1d64>
   1322c:	b	13248 <dcngettext@plt+0x1d9c>
   13230:	ldr	r7, [sp, #88]	; 0x58
   13234:	mov	r0, r8
   13238:	mov	r1, r5
   1323c:	mov	r2, #1
   13240:	mov	r3, r7
   13244:	bl	11278 <fwrite@plt>
   13248:	ldr	lr, [sp, #84]	; 0x54
   1324c:	mov	sl, r9
   13250:	add	lr, r6, lr
   13254:	b	13984 <dcngettext@plt+0x24d8>
   13258:	cmp	r9, #69	; 0x45
   1325c:	bne	13524 <dcngettext@plt+0x2078>
   13260:	mov	r7, #0
   13264:	mov	r1, #121	; 0x79
   13268:	b	12d98 <dcngettext@plt+0x18ec>
   1326c:	ldr	r4, [sp, #88]	; 0x58
   13270:	cmp	r6, #0
   13274:	beq	1328c <dcngettext@plt+0x1de0>
   13278:	mov	r0, #32
   1327c:	mov	r1, r4
   13280:	bl	11434 <fputc@plt>
   13284:	subs	r6, r6, #1
   13288:	bne	13278 <dcngettext@plt+0x1dcc>
   1328c:	ldr	r0, [sp, #72]	; 0x48
   13290:	tst	r0, #1
   13294:	beq	132d4 <dcngettext@plt+0x1e28>
   13298:	ldr	r7, [sp, #88]	; 0x58
   1329c:	cmp	r9, #0
   132a0:	beq	132ec <dcngettext@plt+0x1e40>
   132a4:	ldr	r0, [sp, #24]
   132a8:	add	r4, r0, r5
   132ac:	bl	11314 <__ctype_toupper_loc@plt>
   132b0:	mov	r6, r0
   132b4:	ldrb	r0, [r5], #1
   132b8:	ldr	r1, [r6]
   132bc:	ldr	r0, [r1, r0, lsl #2]
   132c0:	mov	r1, r7
   132c4:	bl	11434 <fputc@plt>
   132c8:	adds	r4, r4, #1
   132cc:	bne	132b4 <dcngettext@plt+0x1e08>
   132d0:	b	132ec <dcngettext@plt+0x1e40>
   132d4:	ldr	r7, [sp, #88]	; 0x58
   132d8:	mov	r0, r5
   132dc:	mov	r1, r9
   132e0:	mov	r2, #1
   132e4:	mov	r3, r7
   132e8:	bl	11278 <fwrite@plt>
   132ec:	ldr	lr, [sp, #84]	; 0x54
   132f0:	add	lr, r8, lr
   132f4:	b	13984 <dcngettext@plt+0x24d8>
   132f8:	ldr	r4, [sp, #88]	; 0x58
   132fc:	cmp	r8, #0
   13300:	beq	13318 <dcngettext@plt+0x1e6c>
   13304:	mov	r0, #32
   13308:	mov	r1, r4
   1330c:	bl	11434 <fputc@plt>
   13310:	subs	r8, r8, #1
   13314:	bne	13304 <dcngettext@plt+0x1e58>
   13318:	tst	r7, #1
   1331c:	beq	13360 <dcngettext@plt+0x1eb4>
   13320:	ldr	r6, [sp, #88]	; 0x58
   13324:	ldr	r0, [sp, #76]	; 0x4c
   13328:	cmp	r5, #0
   1332c:	beq	133c4 <dcngettext@plt+0x1f18>
   13330:	rsb	r4, r0, #1
   13334:	bl	11308 <__ctype_tolower_loc@plt>
   13338:	ldr	r7, [sp, #40]	; 0x28
   1333c:	mov	r5, r0
   13340:	ldrb	r0, [r7], #1
   13344:	ldr	r1, [r5]
   13348:	ldr	r0, [r1, r0, lsl #2]
   1334c:	mov	r1, r6
   13350:	bl	11434 <fputc@plt>
   13354:	adds	r4, r4, #1
   13358:	bne	13340 <dcngettext@plt+0x1e94>
   1335c:	b	133c4 <dcngettext@plt+0x1f18>
   13360:	ldr	r0, [sp, #72]	; 0x48
   13364:	tst	r0, #1
   13368:	ldr	r0, [sp, #76]	; 0x4c
   1336c:	beq	133ac <dcngettext@plt+0x1f00>
   13370:	ldr	r6, [sp, #88]	; 0x58
   13374:	cmp	r5, #0
   13378:	beq	133c4 <dcngettext@plt+0x1f18>
   1337c:	rsb	r4, r0, #1
   13380:	bl	11314 <__ctype_toupper_loc@plt>
   13384:	ldr	r7, [sp, #40]	; 0x28
   13388:	mov	r5, r0
   1338c:	ldrb	r0, [r7], #1
   13390:	ldr	r1, [r5]
   13394:	ldr	r0, [r1, r0, lsl #2]
   13398:	mov	r1, r6
   1339c:	bl	11434 <fputc@plt>
   133a0:	adds	r4, r4, #1
   133a4:	bne	1338c <dcngettext@plt+0x1ee0>
   133a8:	b	133c4 <dcngettext@plt+0x1f18>
   133ac:	ldr	r6, [sp, #88]	; 0x58
   133b0:	ldr	r0, [sp, #40]	; 0x28
   133b4:	mov	r1, r5
   133b8:	mov	r2, #1
   133bc:	mov	r3, r6
   133c0:	bl	11278 <fwrite@plt>
   133c4:	ldr	lr, [sp, #84]	; 0x54
   133c8:	mov	r7, r6
   133cc:	add	lr, r9, lr
   133d0:	b	13984 <dcngettext@plt+0x24d8>
   133d4:	sub	r2, r4, #1
   133d8:	movw	r4, #365	; 0x16d
   133dc:	tst	r2, #3
   133e0:	bne	13424 <dcngettext@plt+0x1f78>
   133e4:	movw	r4, #34079	; 0x851f
   133e8:	movt	r4, #20971	; 0x51eb
   133ec:	smmul	r4, r2, r4
   133f0:	asr	r7, r4, #5
   133f4:	add	r3, r7, r4, lsr #31
   133f8:	mov	r7, #100	; 0x64
   133fc:	mls	r3, r3, r7, r2
   13400:	asr	r7, r4, #7
   13404:	add	r4, r7, r4, lsr #31
   13408:	mov	r7, #400	; 0x190
   1340c:	mls	r2, r4, r7, r2
   13410:	movw	r4, #365	; 0x16d
   13414:	cmp	r2, #0
   13418:	movweq	r4, #366	; 0x16e
   1341c:	cmp	r3, #0
   13420:	movwne	r4, #366	; 0x16e
   13424:	add	r2, r4, r5
   13428:	movw	r4, #382	; 0x17e
   1342c:	mov	r5, r0
   13430:	sub	r3, r4, r8
   13434:	add	r2, r3, r2
   13438:	smmla	r2, r2, r0, r2
   1343c:	asr	r4, r2, #2
   13440:	add	r2, r4, r2, lsr #31
   13444:	rsb	r2, r2, r2, lsl #3
   13448:	sub	r2, r2, r3
   1344c:	mvn	r3, #0
   13450:	add	r2, r2, #3
   13454:	ldr	r4, [sp, #84]	; 0x54
   13458:	ldr	r0, [sp, #92]	; 0x5c
   1345c:	cmp	r1, #71	; 0x47
   13460:	beq	13564 <dcngettext@plt+0x20b8>
   13464:	cmp	r1, #103	; 0x67
   13468:	bne	13594 <dcngettext@plt+0x20e8>
   1346c:	movw	r2, #34079	; 0x851f
   13470:	mov	r8, #2
   13474:	mov	ip, #0
   13478:	movt	r2, #20971	; 0x51eb
   1347c:	smmul	r7, lr, r2
   13480:	asr	r5, r7, #5
   13484:	add	r7, r5, r7, lsr #31
   13488:	mov	r5, #100	; 0x64
   1348c:	mls	r7, r7, r5, lr
   13490:	add	r7, r3, r7
   13494:	smmul	r2, r7, r2
   13498:	asr	r4, r2, #5
   1349c:	add	r2, r4, r2, lsr #31
   134a0:	mls	r2, r2, r5, r7
   134a4:	cmn	r2, #1
   134a8:	ble	136b0 <dcngettext@plt+0x2204>
   134ac:	ldr	lr, [sp, #84]	; 0x54
   134b0:	mov	r3, r2
   134b4:	b	136e4 <dcngettext@plt+0x2238>
   134b8:	ldr	r7, [sp, #88]	; 0x58
   134bc:	b	13984 <dcngettext@plt+0x24d8>
   134c0:	ldr	r2, [sp, #68]	; 0x44
   134c4:	movw	r7, #63636	; 0xf894
   134c8:	mov	r3, #0
   134cc:	mvn	r5, #98	; 0x62
   134d0:	str	ip, [sp, #72]	; 0x48
   134d4:	mov	ip, #0
   134d8:	mov	r8, #2
   134dc:	movt	r7, #65535	; 0xffff
   134e0:	ldr	r2, [r2, #20]
   134e4:	cmp	r2, r7
   134e8:	movwge	r3, #1
   134ec:	cmp	r2, r7
   134f0:	and	r3, r3, r2, lsr #31
   134f4:	movwlt	ip, #1
   134f8:	smlabb	r3, r3, r5, r2
   134fc:	movw	r5, #34079	; 0x851f
   13500:	movt	r5, #20971	; 0x51eb
   13504:	smmul	r3, r3, r5
   13508:	asr	r5, r3, #5
   1350c:	add	r3, r5, r3, lsr #31
   13510:	add	r3, r3, #19
   13514:	b	136e4 <dcngettext@plt+0x2238>
   13518:	mov	r7, #0
   1351c:	mov	r1, #120	; 0x78
   13520:	b	12d98 <dcngettext@plt+0x18ec>
   13524:	ldr	r2, [sp, #68]	; 0x44
   13528:	movw	r3, #34079	; 0x851f
   1352c:	str	ip, [sp, #72]	; 0x48
   13530:	mov	r8, #2
   13534:	mov	ip, #0
   13538:	movt	r3, #20971	; 0x51eb
   1353c:	ldr	r2, [r2, #20]
   13540:	smmul	r3, r2, r3
   13544:	asr	r7, r3, #5
   13548:	add	r3, r7, r3, lsr #31
   1354c:	mov	r7, #100	; 0x64
   13550:	mls	r7, r3, r7, r2
   13554:	cmn	r7, #1
   13558:	ble	136d0 <dcngettext@plt+0x2224>
   1355c:	mov	r3, r7
   13560:	b	136e4 <dcngettext@plt+0x2238>
   13564:	movw	r2, #63636	; 0xf894
   13568:	mov	ip, #0
   1356c:	mov	r8, #4
   13570:	movt	r2, #65535	; 0xffff
   13574:	sub	r2, r2, r3
   13578:	cmp	lr, r2
   1357c:	add	r2, lr, r3
   13580:	movw	r3, #1900	; 0x76c
   13584:	mov	lr, r4
   13588:	movwlt	ip, #1
   1358c:	add	r3, r2, r3
   13590:	b	136e8 <dcngettext@plt+0x223c>
   13594:	smmla	r2, r2, r5, r2
   13598:	mov	r8, #2
   1359c:	mov	lr, r4
   135a0:	asr	r3, r2, #2
   135a4:	add	r2, r3, r2, lsr #31
   135a8:	add	r3, r2, #1
   135ac:	b	12c38 <dcngettext@plt+0x178c>
   135b0:	mov	ip, #1
   135b4:	cmp	r7, #3
   135b8:	bhi	12728 <dcngettext@plt+0x127c>
   135bc:	movw	r3, #34953	; 0x8889
   135c0:	movt	r3, #34952	; 0x8888
   135c4:	smmla	r5, r2, r3, r2
   135c8:	asr	r4, r5, #5
   135cc:	add	r4, r4, r5, lsr #31
   135d0:	smmla	r3, r4, r3, r4
   135d4:	asr	r5, r3, #5
   135d8:	add	r3, r5, r3, lsr #31
   135dc:	rsb	r3, r3, r3, lsl #4
   135e0:	sub	lr, r4, r3, lsl #2
   135e4:	movw	r3, #46021	; 0xb3c5
   135e8:	rsb	r4, r4, r4, lsl #4
   135ec:	movt	r3, #37282	; 0x91a2
   135f0:	smmla	r3, r2, r3, r2
   135f4:	sub	r2, r2, r4, lsl #2
   135f8:	add	r4, pc, #8
   135fc:	asr	r5, r3, #11
   13600:	add	r3, r5, r3, lsr #31
   13604:	ldr	pc, [r4, r7, lsl #2]
   13608:	andeq	r3, r1, r8, lsl r6
   1360c:	andeq	r3, r1, r8, lsr r9
   13610:	andeq	r3, r1, r0, asr #14
   13614:	andeq	r3, r1, r8, lsr r7
   13618:	mov	r2, #100	; 0x64
   1361c:	mov	r8, #5
   13620:	mla	r3, r3, r2, lr
   13624:	ldr	lr, [sp, #84]	; 0x54
   13628:	mov	r0, #1
   1362c:	mov	r2, #0
   13630:	b	12c4c <dcngettext@plt+0x17a0>
   13634:	mov	r7, #0
   13638:	mov	r1, #89	; 0x59
   1363c:	b	12d98 <dcngettext@plt+0x18ec>
   13640:	ldr	r8, [sp, #88]	; 0x58
   13644:	cmp	r7, #0
   13648:	beq	13660 <dcngettext@plt+0x21b4>
   1364c:	mov	r0, #32
   13650:	mov	r1, r8
   13654:	bl	11434 <fputc@plt>
   13658:	subs	r7, r7, #1
   1365c:	bne	1364c <dcngettext@plt+0x21a0>
   13660:	ldr	r0, [sp, #92]	; 0x5c
   13664:	ldr	r2, [sp, #68]	; 0x44
   13668:	ldr	r3, [sp, #72]	; 0x48
   1366c:	mov	r1, r5
   13670:	str	r0, [sp]
   13674:	ldr	r0, [sp, #76]	; 0x4c
   13678:	str	r0, [sp, #4]
   1367c:	ldr	r0, [fp, #16]
   13680:	str	r0, [sp, #8]
   13684:	ldr	r0, [fp, #20]
   13688:	str	r0, [sp, #12]
   1368c:	mov	r0, r8
   13690:	bl	12058 <dcngettext@plt+0xbac>
   13694:	mov	lr, r9
   13698:	ldr	r7, [sp, #88]	; 0x58
   1369c:	add	lr, r6, lr
   136a0:	b	13984 <dcngettext@plt+0x24d8>
   136a4:	sub	r0, r6, #6
   136a8:	bic	r3, r0, r0, asr #31
   136ac:	b	12964 <dcngettext@plt+0x14b8>
   136b0:	movw	r4, #63636	; 0xf894
   136b4:	movt	r4, #65535	; 0xffff
   136b8:	sub	r4, r4, r3
   136bc:	add	r3, r2, #100	; 0x64
   136c0:	cmp	lr, r4
   136c4:	ldr	lr, [sp, #84]	; 0x54
   136c8:	rsblt	r3, r2, #0
   136cc:	b	136e4 <dcngettext@plt+0x2238>
   136d0:	movw	r5, #63636	; 0xf894
   136d4:	add	r3, r7, #100	; 0x64
   136d8:	movt	r5, #65535	; 0xffff
   136dc:	cmp	r2, r5
   136e0:	rsblt	r3, r7, #0
   136e4:	ldr	r0, [sp, #92]	; 0x5c
   136e8:	ldr	r2, [fp, #8]
   136ec:	cmp	r0, #0
   136f0:	moveq	r0, r2
   136f4:	mov	r2, #0
   136f8:	mov	r4, r0
   136fc:	str	r0, [sp, #92]	; 0x5c
   13700:	cmp	r0, #43	; 0x2b
   13704:	mov	r0, #0
   13708:	bne	12c4c <dcngettext@plt+0x17a0>
   1370c:	cmp	r8, r6
   13710:	mov	r5, #0
   13714:	movw	r4, #9999	; 0x270f
   13718:	mov	r7, #0
   1371c:	movwlt	r5, #1
   13720:	cmp	r8, #2
   13724:	movweq	r4, #99	; 0x63
   13728:	cmp	r4, r3
   1372c:	movwcc	r7, #1
   13730:	orr	r0, r5, r7
   13734:	b	12c4c <dcngettext@plt+0x17a0>
   13738:	cmp	r2, #0
   1373c:	beq	13930 <dcngettext@plt+0x2484>
   13740:	movw	r4, #10000	; 0x2710
   13744:	mov	r8, #9
   13748:	mov	r0, #1
   1374c:	mla	r2, r3, r4, r2
   13750:	mov	r3, #100	; 0x64
   13754:	mla	r3, lr, r3, r2
   13758:	ldr	lr, [sp, #84]	; 0x54
   1375c:	mov	r2, #20
   13760:	b	12c4c <dcngettext@plt+0x17a0>
   13764:	ldr	r3, [sp, #88]	; 0x58
   13768:	sub	r0, fp, #46	; 0x2e
   1376c:	mov	r2, #1
   13770:	bl	11278 <fwrite@plt>
   13774:	ldr	r0, [sp, #92]	; 0x5c
   13778:	ldr	r1, [sp, #84]	; 0x54
   1377c:	mov	r5, #0
   13780:	cmp	r0, #45	; 0x2d
   13784:	subne	r0, r6, #9
   13788:	subne	r0, r0, r7
   1378c:	bicne	r5, r0, r0, asr #31
   13790:	mvn	r0, #9
   13794:	sub	r0, r0, r1
   13798:	sub	r0, r0, r7
   1379c:	cmp	r5, r0
   137a0:	bcs	139a4 <dcngettext@plt+0x24f8>
   137a4:	ldr	r6, [sp, #88]	; 0x58
   137a8:	cmp	r6, #0
   137ac:	cmpne	r5, #0
   137b0:	bne	137cc <dcngettext@plt+0x2320>
   137b4:	ldr	r0, [sp, #84]	; 0x54
   137b8:	add	r0, r5, r0
   137bc:	add	r0, r0, r7
   137c0:	mov	r7, r6
   137c4:	add	lr, r0, #9
   137c8:	b	13984 <dcngettext@plt+0x24d8>
   137cc:	ldr	r0, [sp, #92]	; 0x5c
   137d0:	uxtb	r0, r0
   137d4:	cmp	r0, #43	; 0x2b
   137d8:	beq	137e8 <dcngettext@plt+0x233c>
   137dc:	cmp	r0, #48	; 0x30
   137e0:	mov	r4, r5
   137e4:	bne	13804 <dcngettext@plt+0x2358>
   137e8:	mov	r4, r5
   137ec:	mov	r0, #48	; 0x30
   137f0:	mov	r1, r6
   137f4:	bl	11434 <fputc@plt>
   137f8:	subs	r4, r4, #1
   137fc:	bne	137ec <dcngettext@plt+0x2340>
   13800:	b	137b4 <dcngettext@plt+0x2308>
   13804:	mov	r0, #32
   13808:	mov	r1, r6
   1380c:	bl	11434 <fputc@plt>
   13810:	subs	r4, r4, #1
   13814:	bne	13804 <dcngettext@plt+0x2358>
   13818:	b	137b4 <dcngettext@plt+0x2308>
   1381c:	ldr	r4, [sp, #88]	; 0x58
   13820:	cmp	r6, #0
   13824:	beq	1383c <dcngettext@plt+0x2390>
   13828:	mov	r0, #32
   1382c:	mov	r1, r4
   13830:	bl	11434 <fputc@plt>
   13834:	subs	r6, r6, #1
   13838:	bne	13828 <dcngettext@plt+0x237c>
   1383c:	ldr	r0, [sp, #76]	; 0x4c
   13840:	tst	r0, #1
   13844:	beq	13880 <dcngettext@plt+0x23d4>
   13848:	ldr	r7, [sp, #88]	; 0x58
   1384c:	cmp	r5, #0
   13850:	beq	138e4 <dcngettext@plt+0x2438>
   13854:	bl	11308 <__ctype_tolower_loc@plt>
   13858:	ldr	r4, [sp, #44]	; 0x2c
   1385c:	mov	r6, r0
   13860:	ldrb	r0, [r4], #1
   13864:	ldr	r1, [r6]
   13868:	ldr	r0, [r1, r0, lsl #2]
   1386c:	mov	r1, r7
   13870:	bl	11434 <fputc@plt>
   13874:	subs	r5, r5, #1
   13878:	bne	13860 <dcngettext@plt+0x23b4>
   1387c:	b	138e4 <dcngettext@plt+0x2438>
   13880:	ldr	r1, [sp, #72]	; 0x48
   13884:	eor	r0, r0, #1
   13888:	and	r0, r1, r0
   1388c:	tst	r0, #1
   13890:	beq	138cc <dcngettext@plt+0x2420>
   13894:	ldr	r7, [sp, #88]	; 0x58
   13898:	cmp	r5, #0
   1389c:	beq	138e4 <dcngettext@plt+0x2438>
   138a0:	bl	11314 <__ctype_toupper_loc@plt>
   138a4:	ldr	r4, [sp, #44]	; 0x2c
   138a8:	mov	r6, r0
   138ac:	ldrb	r0, [r4], #1
   138b0:	ldr	r1, [r6]
   138b4:	ldr	r0, [r1, r0, lsl #2]
   138b8:	mov	r1, r7
   138bc:	bl	11434 <fputc@plt>
   138c0:	subs	r5, r5, #1
   138c4:	bne	138ac <dcngettext@plt+0x2400>
   138c8:	b	138e4 <dcngettext@plt+0x2438>
   138cc:	ldr	r7, [sp, #88]	; 0x58
   138d0:	ldr	r0, [sp, #44]	; 0x2c
   138d4:	mov	r1, r5
   138d8:	mov	r2, #1
   138dc:	mov	r3, r7
   138e0:	bl	11278 <fwrite@plt>
   138e4:	ldr	lr, [sp, #84]	; 0x54
   138e8:	add	lr, r9, lr
   138ec:	b	13984 <dcngettext@plt+0x24d8>
   138f0:	ldr	r7, [sp, #88]	; 0x58
   138f4:	mov	r0, #32
   138f8:	mov	r1, r7
   138fc:	bl	11434 <fputc@plt>
   13900:	subs	r6, r6, #1
   13904:	bne	138f4 <dcngettext@plt+0x2448>
   13908:	mov	r0, #10
   1390c:	b	13970 <dcngettext@plt+0x24c4>
   13910:	ldr	r7, [sp, #88]	; 0x58
   13914:	mov	r0, #32
   13918:	mov	r1, r7
   1391c:	bl	11434 <fputc@plt>
   13920:	subs	r6, r6, #1
   13924:	bne	13914 <dcngettext@plt+0x2468>
   13928:	mov	r0, #9
   1392c:	b	13970 <dcngettext@plt+0x24c4>
   13930:	cmp	lr, #0
   13934:	beq	12134 <dcngettext@plt+0xc88>
   13938:	mov	r2, #100	; 0x64
   1393c:	mov	r8, #6
   13940:	mov	r0, #1
   13944:	mla	r3, r3, r2, lr
   13948:	ldr	lr, [sp, #84]	; 0x54
   1394c:	mov	r2, #4
   13950:	b	12c4c <dcngettext@plt+0x17a0>
   13954:	ldr	r7, [sp, #88]	; 0x58
   13958:	mov	r0, #32
   1395c:	mov	r1, r7
   13960:	bl	11434 <fputc@plt>
   13964:	subs	r6, r6, #1
   13968:	bne	13958 <dcngettext@plt+0x24ac>
   1396c:	ldrb	r0, [sl]
   13970:	mov	r1, r7
   13974:	bl	11434 <fputc@plt>
   13978:	mov	lr, r4
   1397c:	ldr	r7, [sp, #88]	; 0x58
   13980:	add	lr, r5, lr
   13984:	ldrb	r3, [sl, #1]!
   13988:	mvn	r6, #0
   1398c:	cmp	r3, #0
   13990:	bne	1213c <dcngettext@plt+0xc90>
   13994:	ldr	r0, [sp, #56]	; 0x38
   13998:	ldr	r1, [sp, #52]	; 0x34
   1399c:	str	r1, [r0]
   139a0:	b	139b4 <dcngettext@plt+0x2508>
   139a4:	mov	r0, #34	; 0x22
   139a8:	ldr	r1, [sp, #56]	; 0x38
   139ac:	mov	lr, #0
   139b0:	str	r0, [r1]
   139b4:	mov	r0, lr
   139b8:	sub	sp, fp, #28
   139bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139c0:	mov	r0, #75	; 0x4b
   139c4:	b	139a8 <dcngettext@plt+0x24fc>
   139c8:	push	{r4, r5, r6, r7, fp, lr}
   139cc:	add	fp, sp, #16
   139d0:	sub	sp, sp, #8
   139d4:	mov	r4, r0
   139d8:	ldr	r0, [r0, #4]
   139dc:	mov	r5, r3
   139e0:	mov	r6, r2
   139e4:	ldr	r1, [r4, #8]
   139e8:	cmp	r1, r0
   139ec:	bne	13a08 <dcngettext@plt+0x255c>
   139f0:	ldrd	r0, [r4, #16]
   139f4:	cmp	r1, r0
   139f8:	bne	13a08 <dcngettext@plt+0x255c>
   139fc:	ldr	r0, [r4, #36]	; 0x24
   13a00:	cmp	r0, #0
   13a04:	beq	13a20 <dcngettext@plt+0x2574>
   13a08:	mov	r0, r4
   13a0c:	mov	r2, r6
   13a10:	mov	r3, r5
   13a14:	sub	sp, fp, #16
   13a18:	pop	{r4, r5, r6, r7, fp, lr}
   13a1c:	b	113d4 <fseeko64@plt>
   13a20:	ldr	r7, [fp, #8]
   13a24:	mov	r0, r4
   13a28:	bl	113b0 <fileno@plt>
   13a2c:	mov	r2, r6
   13a30:	mov	r3, r5
   13a34:	str	r7, [sp]
   13a38:	bl	11284 <lseek64@plt>
   13a3c:	and	r2, r0, r1
   13a40:	cmn	r2, #1
   13a44:	mvneq	r0, #0
   13a48:	subeq	sp, fp, #16
   13a4c:	popeq	{r4, r5, r6, r7, fp, pc}
   13a50:	strd	r0, [r4, #80]	; 0x50
   13a54:	ldr	r0, [r4]
   13a58:	bic	r0, r0, #16
   13a5c:	str	r0, [r4]
   13a60:	mov	r0, #0
   13a64:	sub	sp, fp, #16
   13a68:	pop	{r4, r5, r6, r7, fp, pc}
   13a6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a70:	add	fp, sp, #24
   13a74:	sub	sp, sp, #8
   13a78:	movw	r6, #33160	; 0x8188
   13a7c:	mov	r4, #0
   13a80:	cmp	r0, #2
   13a84:	movt	r6, #2
   13a88:	ldr	r7, [r6]
   13a8c:	str	r4, [r6]
   13a90:	bne	13b04 <dcngettext@plt+0x2658>
   13a94:	mov	r8, r3
   13a98:	movw	r3, #30268	; 0x763c
   13a9c:	mov	r5, r2
   13aa0:	movw	r2, #30253	; 0x762d
   13aa4:	mov	r0, #2
   13aa8:	str	r4, [sp]
   13aac:	movt	r2, #1
   13ab0:	movt	r3, #1
   13ab4:	bl	1132c <getopt_long@plt>
   13ab8:	cmp	r0, #104	; 0x68
   13abc:	beq	13af8 <dcngettext@plt+0x264c>
   13ac0:	cmp	r0, #118	; 0x76
   13ac4:	bne	13b04 <dcngettext@plt+0x2658>
   13ac8:	movw	r0, #33156	; 0x8184
   13acc:	ldr	r3, [fp, #8]
   13ad0:	add	r1, fp, #16
   13ad4:	mov	r2, r8
   13ad8:	movt	r0, #2
   13adc:	str	r1, [sp, #4]
   13ae0:	str	r1, [sp]
   13ae4:	mov	r1, r5
   13ae8:	ldr	r0, [r0]
   13aec:	bl	1646c <dcngettext@plt+0x4fc0>
   13af0:	mov	r0, #0
   13af4:	bl	11350 <exit@plt>
   13af8:	ldr	r1, [fp, #12]
   13afc:	mov	r0, #0
   13b00:	blx	r1
   13b04:	movw	r0, #33144	; 0x8178
   13b08:	str	r7, [r6]
   13b0c:	movt	r0, #2
   13b10:	str	r4, [r0]
   13b14:	sub	sp, fp, #24
   13b18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b20:	add	fp, sp, #24
   13b24:	sub	sp, sp, #8
   13b28:	movw	r6, #33160	; 0x8188
   13b2c:	mov	r8, r3
   13b30:	ldr	r3, [fp, #12]
   13b34:	mov	r5, r2
   13b38:	mov	r2, #1
   13b3c:	movw	r4, #29392	; 0x72d0
   13b40:	movt	r6, #2
   13b44:	movt	r4, #1
   13b48:	ldr	r7, [r6]
   13b4c:	str	r2, [r6]
   13b50:	mov	r2, #0
   13b54:	str	r2, [sp]
   13b58:	movw	r2, #30253	; 0x762d
   13b5c:	cmp	r3, #0
   13b60:	movt	r2, #1
   13b64:	movw	r3, #30268	; 0x763c
   13b68:	movne	r2, r4
   13b6c:	movt	r3, #1
   13b70:	bl	1132c <getopt_long@plt>
   13b74:	cmn	r0, #1
   13b78:	beq	13ba8 <dcngettext@plt+0x26fc>
   13b7c:	ldr	r1, [fp, #16]
   13b80:	cmp	r0, #104	; 0x68
   13b84:	beq	13ba0 <dcngettext@plt+0x26f4>
   13b88:	cmp	r0, #118	; 0x76
   13b8c:	beq	13bb4 <dcngettext@plt+0x2708>
   13b90:	movw	r0, #33068	; 0x812c
   13b94:	movt	r0, #2
   13b98:	ldr	r0, [r0]
   13b9c:	b	13ba4 <dcngettext@plt+0x26f8>
   13ba0:	mov	r0, #0
   13ba4:	blx	r1
   13ba8:	str	r7, [r6]
   13bac:	sub	sp, fp, #24
   13bb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13bb4:	movw	r0, #33156	; 0x8184
   13bb8:	ldr	r3, [fp, #8]
   13bbc:	add	r1, fp, #20
   13bc0:	mov	r2, r8
   13bc4:	movt	r0, #2
   13bc8:	str	r1, [sp, #4]
   13bcc:	str	r1, [sp]
   13bd0:	mov	r1, r5
   13bd4:	ldr	r0, [r0]
   13bd8:	bl	1646c <dcngettext@plt+0x4fc0>
   13bdc:	mov	r0, #0
   13be0:	bl	11350 <exit@plt>
   13be4:	push	{r4, r5, fp, lr}
   13be8:	add	fp, sp, #8
   13bec:	cmp	r0, #0
   13bf0:	beq	13c84 <dcngettext@plt+0x27d8>
   13bf4:	mov	r1, #47	; 0x2f
   13bf8:	mov	r4, r0
   13bfc:	bl	1141c <strrchr@plt>
   13c00:	cmp	r0, #0
   13c04:	mov	r5, r4
   13c08:	addne	r5, r0, #1
   13c0c:	sub	r0, r5, r4
   13c10:	cmp	r0, #7
   13c14:	blt	13c68 <dcngettext@plt+0x27bc>
   13c18:	movw	r1, #30372	; 0x76a4
   13c1c:	sub	r0, r5, #7
   13c20:	mov	r2, #7
   13c24:	movt	r1, #1
   13c28:	bl	11488 <strncmp@plt>
   13c2c:	cmp	r0, #0
   13c30:	bne	13c68 <dcngettext@plt+0x27bc>
   13c34:	movw	r1, #30380	; 0x76ac
   13c38:	mov	r0, r5
   13c3c:	mov	r2, #3
   13c40:	movt	r1, #1
   13c44:	bl	11488 <strncmp@plt>
   13c48:	cmp	r0, #0
   13c4c:	beq	13c58 <dcngettext@plt+0x27ac>
   13c50:	mov	r4, r5
   13c54:	b	13c68 <dcngettext@plt+0x27bc>
   13c58:	movw	r0, #33136	; 0x8170
   13c5c:	add	r4, r5, #3
   13c60:	movt	r0, #2
   13c64:	str	r4, [r0]
   13c68:	movw	r0, #33140	; 0x8174
   13c6c:	movt	r0, #2
   13c70:	str	r4, [r0]
   13c74:	movw	r0, #33180	; 0x819c
   13c78:	movt	r0, #2
   13c7c:	str	r4, [r0]
   13c80:	pop	{r4, r5, fp, pc}
   13c84:	movw	r0, #33152	; 0x8180
   13c88:	mov	r1, #55	; 0x37
   13c8c:	mov	r2, #1
   13c90:	movt	r0, #2
   13c94:	ldr	r3, [r0]
   13c98:	movw	r0, #30316	; 0x766c
   13c9c:	movt	r0, #1
   13ca0:	bl	11278 <fwrite@plt>
   13ca4:	bl	11494 <abort@plt>
   13ca8:	push	{r4, r5, r6, sl, fp, lr}
   13cac:	add	fp, sp, #16
   13cb0:	mov	r4, r0
   13cb4:	movw	r0, #33184	; 0x81a0
   13cb8:	movt	r0, #2
   13cbc:	cmp	r4, #0
   13cc0:	moveq	r4, r0
   13cc4:	bl	11374 <__errno_location@plt>
   13cc8:	ldr	r6, [r0]
   13ccc:	mov	r5, r0
   13cd0:	mov	r0, r4
   13cd4:	mov	r1, #48	; 0x30
   13cd8:	bl	16c14 <dcngettext@plt+0x5768>
   13cdc:	str	r6, [r5]
   13ce0:	pop	{r4, r5, r6, sl, fp, pc}
   13ce4:	movw	r1, #33184	; 0x81a0
   13ce8:	cmp	r0, #0
   13cec:	movt	r1, #2
   13cf0:	movne	r1, r0
   13cf4:	ldr	r0, [r1]
   13cf8:	bx	lr
   13cfc:	movw	r2, #33184	; 0x81a0
   13d00:	cmp	r0, #0
   13d04:	movt	r2, #2
   13d08:	movne	r2, r0
   13d0c:	str	r1, [r2]
   13d10:	bx	lr
   13d14:	movw	r3, #33184	; 0x81a0
   13d18:	cmp	r0, #0
   13d1c:	movt	r3, #2
   13d20:	movne	r3, r0
   13d24:	ubfx	r0, r1, #5, #3
   13d28:	and	r1, r1, #31
   13d2c:	add	r0, r3, r0, lsl #2
   13d30:	ldr	r3, [r0, #8]
   13d34:	eor	r2, r2, r3, lsr r1
   13d38:	and	r2, r2, #1
   13d3c:	eor	r2, r3, r2, lsl r1
   13d40:	str	r2, [r0, #8]
   13d44:	mov	r0, #1
   13d48:	and	r0, r0, r3, lsr r1
   13d4c:	bx	lr
   13d50:	movw	r2, #33184	; 0x81a0
   13d54:	cmp	r0, #0
   13d58:	movt	r2, #2
   13d5c:	movne	r2, r0
   13d60:	ldr	r0, [r2, #4]
   13d64:	str	r1, [r2, #4]
   13d68:	bx	lr
   13d6c:	movw	r3, #33184	; 0x81a0
   13d70:	cmp	r0, #0
   13d74:	movt	r3, #2
   13d78:	movne	r3, r0
   13d7c:	cmp	r1, #0
   13d80:	mov	r0, #10
   13d84:	cmpne	r2, #0
   13d88:	str	r0, [r3]
   13d8c:	bne	13d9c <dcngettext@plt+0x28f0>
   13d90:	push	{fp, lr}
   13d94:	mov	fp, sp
   13d98:	bl	11494 <abort@plt>
   13d9c:	str	r1, [r3, #40]	; 0x28
   13da0:	str	r2, [r3, #44]	; 0x2c
   13da4:	bx	lr
   13da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dac:	add	fp, sp, #28
   13db0:	sub	sp, sp, #20
   13db4:	mov	r7, r0
   13db8:	ldr	r0, [fp, #8]
   13dbc:	movw	r5, #33184	; 0x81a0
   13dc0:	mov	r8, r3
   13dc4:	mov	r9, r2
   13dc8:	mov	sl, r1
   13dcc:	movt	r5, #2
   13dd0:	cmp	r0, #0
   13dd4:	movne	r5, r0
   13dd8:	bl	11374 <__errno_location@plt>
   13ddc:	mov	r4, r0
   13de0:	ldm	r5, {r0, r1}
   13de4:	ldr	r2, [r5, #40]	; 0x28
   13de8:	ldr	r3, [r5, #44]	; 0x2c
   13dec:	add	r5, r5, #8
   13df0:	ldr	r6, [r4]
   13df4:	stm	sp, {r0, r1, r5}
   13df8:	str	r2, [sp, #12]
   13dfc:	str	r3, [sp, #16]
   13e00:	mov	r0, r7
   13e04:	mov	r1, sl
   13e08:	mov	r2, r9
   13e0c:	mov	r3, r8
   13e10:	bl	13e20 <dcngettext@plt+0x2974>
   13e14:	str	r6, [r4]
   13e18:	sub	sp, fp, #28
   13e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e24:	add	fp, sp, #28
   13e28:	sub	sp, sp, #156	; 0x9c
   13e2c:	str	r0, [sp, #80]	; 0x50
   13e30:	ldr	r0, [fp, #12]
   13e34:	mov	r6, r1
   13e38:	mov	r9, r3
   13e3c:	str	r2, [fp, #-84]	; 0xffffffac
   13e40:	and	r1, r0, #4
   13e44:	str	r1, [sp, #32]
   13e48:	and	r1, r0, #1
   13e4c:	str	r1, [sp, #36]	; 0x24
   13e50:	ubfx	r4, r0, #1, #1
   13e54:	bl	11290 <__ctype_get_mb_cur_max@plt>
   13e58:	str	r0, [sp, #40]	; 0x28
   13e5c:	ldr	r0, [fp, #24]
   13e60:	ldr	r7, [fp, #8]
   13e64:	mov	r1, #0
   13e68:	mov	r5, #1
   13e6c:	str	r1, [fp, #-56]	; 0xffffffc8
   13e70:	mov	r1, #0
   13e74:	str	r1, [sp, #60]	; 0x3c
   13e78:	str	r0, [sp, #76]	; 0x4c
   13e7c:	ldr	r0, [fp, #20]
   13e80:	str	r0, [sp, #72]	; 0x48
   13e84:	mov	r0, #0
   13e88:	str	r0, [sp, #56]	; 0x38
   13e8c:	mov	r0, #0
   13e90:	str	r0, [sp, #92]	; 0x5c
   13e94:	mov	r0, #0
   13e98:	str	r0, [fp, #-76]	; 0xffffffb4
   13e9c:	mov	r0, #0
   13ea0:	cmp	r7, #10
   13ea4:	bhi	14e24 <dcngettext@plt+0x3978>
   13ea8:	add	r1, pc, #28
   13eac:	mov	sl, r6
   13eb0:	ldr	r6, [sp, #80]	; 0x50
   13eb4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13eb8:	mov	r8, #0
   13ebc:	mov	r2, #1
   13ec0:	mov	r3, #0
   13ec4:	mov	lr, r9
   13ec8:	ldr	pc, [r1, r7, lsl #2]
   13ecc:			; <UNDEFINED> instruction: 0x00013fb0
   13ed0:	ldrdeq	r3, [r1], -ip
   13ed4:	andeq	r3, r1, r0, lsr #31
   13ed8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13edc:	ldrdeq	r3, [r1], -r0
   13ee0:	andeq	r4, r1, r4, lsr #32
   13ee4:	andeq	r3, r1, r0, asr #31
   13ee8:	andeq	r4, r1, r0, lsl #1
   13eec:	strdeq	r3, [r1], -r8
   13ef0:	strdeq	r3, [r1], -r8
   13ef4:	andeq	r3, r1, r0, lsr #30
   13ef8:	movw	r0, #30464	; 0x7700
   13efc:	mov	r1, r7
   13f00:	movt	r0, #1
   13f04:	bl	15830 <dcngettext@plt+0x4384>
   13f08:	str	r0, [sp, #72]	; 0x48
   13f0c:	movw	r0, #30466	; 0x7702
   13f10:	mov	r1, r7
   13f14:	movt	r0, #1
   13f18:	bl	15830 <dcngettext@plt+0x4384>
   13f1c:	str	r0, [sp, #76]	; 0x4c
   13f20:	str	r5, [fp, #-48]	; 0xffffffd0
   13f24:	mov	r8, #0
   13f28:	mov	r5, r7
   13f2c:	tst	r4, #1
   13f30:	bne	13f68 <dcngettext@plt+0x2abc>
   13f34:	ldr	r0, [sp, #72]	; 0x48
   13f38:	ldrb	r0, [r0]
   13f3c:	cmp	r0, #0
   13f40:	beq	13f68 <dcngettext@plt+0x2abc>
   13f44:	ldr	r1, [sp, #72]	; 0x48
   13f48:	mov	r8, #0
   13f4c:	add	r1, r1, #1
   13f50:	cmp	r8, sl
   13f54:	strbcc	r0, [r6, r8]
   13f58:	ldrb	r0, [r1, r8]
   13f5c:	add	r8, r8, #1
   13f60:	cmp	r0, #0
   13f64:	bne	13f50 <dcngettext@plt+0x2aa4>
   13f68:	ldr	r7, [sp, #76]	; 0x4c
   13f6c:	mov	r0, r7
   13f70:	bl	1135c <strlen@plt>
   13f74:	str	r7, [sp, #92]	; 0x5c
   13f78:	mov	r7, r5
   13f7c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f80:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13f84:	str	r0, [fp, #-76]	; 0xffffffb4
   13f88:	mov	r2, #1
   13f8c:	mov	r3, r4
   13f90:	mov	lr, r9
   13f94:	b	14080 <dcngettext@plt+0x2bd4>
   13f98:	mov	r0, #1
   13f9c:	b	13fdc <dcngettext@plt+0x2b30>
   13fa0:	tst	r4, #1
   13fa4:	bne	13fdc <dcngettext@plt+0x2b30>
   13fa8:	mov	r2, r0
   13fac:	b	14004 <dcngettext@plt+0x2b58>
   13fb0:	mov	r7, #0
   13fb4:	mov	r8, #0
   13fb8:	mov	r2, r0
   13fbc:	b	1407c <dcngettext@plt+0x2bd0>
   13fc0:	mov	r0, #1
   13fc4:	mov	r8, #0
   13fc8:	mov	r7, #5
   13fcc:	b	14038 <dcngettext@plt+0x2b8c>
   13fd0:	mov	r2, #1
   13fd4:	tst	r4, #1
   13fd8:	beq	14004 <dcngettext@plt+0x2b58>
   13fdc:	mov	r1, #1
   13fe0:	mov	r8, #0
   13fe4:	mov	r7, #2
   13fe8:	mov	r2, r0
   13fec:	mov	r3, #1
   13ff0:	str	r1, [fp, #-76]	; 0xffffffb4
   13ff4:	movw	r1, #30466	; 0x7702
   13ff8:	movt	r1, #1
   13ffc:	str	r1, [sp, #92]	; 0x5c
   14000:	b	14080 <dcngettext@plt+0x2bd4>
   14004:	cmp	sl, #0
   14008:	mov	r8, #1
   1400c:	mov	r7, #2
   14010:	movne	r0, #39	; 0x27
   14014:	strbne	r0, [r6]
   14018:	movw	r0, #30466	; 0x7702
   1401c:	movt	r0, #1
   14020:	b	14070 <dcngettext@plt+0x2bc4>
   14024:	mov	r7, #5
   14028:	tst	r4, #1
   1402c:	beq	14054 <dcngettext@plt+0x2ba8>
   14030:	mov	r0, #1
   14034:	mov	r8, #0
   14038:	str	r0, [fp, #-76]	; 0xffffffb4
   1403c:	movw	r0, #30462	; 0x76fe
   14040:	mov	r2, #1
   14044:	mov	r3, #1
   14048:	movt	r0, #1
   1404c:	str	r0, [sp, #92]	; 0x5c
   14050:	b	14080 <dcngettext@plt+0x2bd4>
   14054:	cmp	sl, #0
   14058:	mov	r8, #1
   1405c:	mov	r2, #1
   14060:	movne	r0, #34	; 0x22
   14064:	strbne	r0, [r6]
   14068:	movw	r0, #30462	; 0x76fe
   1406c:	movt	r0, #1
   14070:	str	r0, [sp, #92]	; 0x5c
   14074:	mov	r0, #1
   14078:	str	r0, [fp, #-76]	; 0xffffffb4
   1407c:	mov	r3, #0
   14080:	ldr	r0, [fp, #16]
   14084:	str	r3, [fp, #-72]	; 0xffffffb8
   14088:	str	r7, [fp, #-64]	; 0xffffffc0
   1408c:	str	r2, [sp, #84]	; 0x54
   14090:	cmp	r0, #0
   14094:	movwne	r0, #1
   14098:	and	r0, r0, r3
   1409c:	str	r0, [fp, #-88]	; 0xffffffa8
   140a0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   140a4:	cmp	r0, #0
   140a8:	movwne	r0, #1
   140ac:	subs	r4, r7, #2
   140b0:	mov	r7, #0
   140b4:	and	r1, r0, r3
   140b8:	str	r4, [fp, #-80]	; 0xffffffb0
   140bc:	and	r1, r2, r1
   140c0:	str	r1, [sp, #48]	; 0x30
   140c4:	clz	r1, r4
   140c8:	lsr	r1, r1, #5
   140cc:	and	r1, r1, r3
   140d0:	eor	r3, r3, #1
   140d4:	str	r1, [sp, #64]	; 0x40
   140d8:	mov	r1, r4
   140dc:	str	r3, [sp, #88]	; 0x58
   140e0:	movwne	r1, #1
   140e4:	orr	r3, r1, r3
   140e8:	and	r1, r1, r2
   140ec:	and	r0, r0, r1
   140f0:	str	r3, [sp, #68]	; 0x44
   140f4:	str	r1, [fp, #-68]	; 0xffffffbc
   140f8:	str	r0, [fp, #-60]	; 0xffffffc4
   140fc:	eor	r0, r2, #1
   14100:	str	r0, [sp, #52]	; 0x34
   14104:	cmn	lr, #1
   14108:	beq	14118 <dcngettext@plt+0x2c6c>
   1410c:	cmp	r7, lr
   14110:	bne	14124 <dcngettext@plt+0x2c78>
   14114:	b	14c4c <dcngettext@plt+0x37a0>
   14118:	ldrb	r0, [ip, r7]
   1411c:	cmp	r0, #0
   14120:	beq	14c54 <dcngettext@plt+0x37a8>
   14124:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14128:	mov	r9, #0
   1412c:	str	r5, [fp, #-48]	; 0xffffffd0
   14130:	cmp	r0, #0
   14134:	beq	14168 <dcngettext@plt+0x2cbc>
   14138:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1413c:	add	r4, r7, r0
   14140:	cmp	r0, #2
   14144:	bcc	14160 <dcngettext@plt+0x2cb4>
   14148:	cmn	lr, #1
   1414c:	bne	14160 <dcngettext@plt+0x2cb4>
   14150:	mov	r0, ip
   14154:	bl	1135c <strlen@plt>
   14158:	ldr	ip, [fp, #-84]	; 0xffffffac
   1415c:	mov	lr, r0
   14160:	cmp	r4, lr
   14164:	bls	14170 <dcngettext@plt+0x2cc4>
   14168:	mov	r0, #0
   1416c:	b	141b0 <dcngettext@plt+0x2d04>
   14170:	ldr	r1, [sp, #92]	; 0x5c
   14174:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14178:	add	r0, ip, r7
   1417c:	mov	r4, lr
   14180:	bl	11218 <memcmp@plt>
   14184:	ldr	r2, [sp, #88]	; 0x58
   14188:	cmp	r0, #0
   1418c:	mov	r1, r0
   14190:	movwne	r1, #1
   14194:	orr	r1, r1, r2
   14198:	tst	r1, #1
   1419c:	beq	14ce4 <dcngettext@plt+0x3838>
   141a0:	ldr	ip, [fp, #-84]	; 0xffffffac
   141a4:	clz	r0, r0
   141a8:	mov	lr, r4
   141ac:	lsr	r0, r0, #5
   141b0:	str	r0, [fp, #-52]	; 0xffffffcc
   141b4:	ldrb	r5, [ip, r7]
   141b8:	cmp	r5, #126	; 0x7e
   141bc:	bhi	14574 <dcngettext@plt+0x30c8>
   141c0:	add	r3, pc, #16
   141c4:	mov	r4, #1
   141c8:	mov	r2, #110	; 0x6e
   141cc:	mov	r0, #97	; 0x61
   141d0:	mov	r1, #0
   141d4:	ldr	pc, [r3, r5, lsl #2]
   141d8:	andeq	r4, r1, r0, ror r4
   141dc:	andeq	r4, r1, r4, ror r5
   141e0:	andeq	r4, r1, r4, ror r5
   141e4:	andeq	r4, r1, r4, ror r5
   141e8:	andeq	r4, r1, r4, ror r5
   141ec:	andeq	r4, r1, r4, ror r5
   141f0:	andeq	r4, r1, r4, ror r5
   141f4:	andeq	r4, r1, r8, lsr #12
   141f8:	andeq	r4, r1, r0, asr r4
   141fc:	andeq	r4, r1, r8, asr #8
   14200:	andeq	r4, r1, ip, asr r4
   14204:	ldrdeq	r4, [r1], -ip
   14208:	andeq	r4, r1, r0, asr #8
   1420c:	andeq	r4, r1, r8, asr r4
   14210:	andeq	r4, r1, r4, ror r5
   14214:	andeq	r4, r1, r4, ror r5
   14218:	andeq	r4, r1, r4, ror r5
   1421c:	andeq	r4, r1, r4, ror r5
   14220:	andeq	r4, r1, r4, ror r5
   14224:	andeq	r4, r1, r4, ror r5
   14228:	andeq	r4, r1, r4, ror r5
   1422c:	andeq	r4, r1, r4, ror r5
   14230:	andeq	r4, r1, r4, ror r5
   14234:	andeq	r4, r1, r4, ror r5
   14238:	andeq	r4, r1, r4, ror r5
   1423c:	andeq	r4, r1, r4, ror r5
   14240:	andeq	r4, r1, r4, ror r5
   14244:	andeq	r4, r1, r4, ror r5
   14248:	andeq	r4, r1, r4, ror r5
   1424c:	andeq	r4, r1, r4, ror r5
   14250:	andeq	r4, r1, r4, ror r5
   14254:	andeq	r4, r1, r4, ror r5
   14258:	andeq	r4, r1, r0, ror #11
   1425c:	andeq	r4, r1, r4, ror #11
   14260:	andeq	r4, r1, r4, ror #11
   14264:	andeq	r4, r1, r8, ror #7
   14268:	andeq	r4, r1, r4, ror #11
   1426c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14270:	andeq	r4, r1, r4, ror #11
   14274:	andeq	r4, r1, r4, ror #9
   14278:	andeq	r4, r1, r4, ror #11
   1427c:	andeq	r4, r1, r4, ror #11
   14280:	andeq	r4, r1, r4, ror #11
   14284:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14288:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1428c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14290:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14294:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14298:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1429c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142a0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142a4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142a8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142b0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142b4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142b8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142bc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142c0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142c4:	andeq	r4, r1, r4, ror #11
   142c8:	andeq	r4, r1, r4, ror #11
   142cc:	andeq	r4, r1, r4, ror #11
   142d0:	andeq	r4, r1, r4, ror #11
   142d4:			; <UNDEFINED> instruction: 0x000144b0
   142d8:	andeq	r4, r1, r4, ror r5
   142dc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142e0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142e4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142e8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142ec:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142f0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142f4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142f8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142fc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14300:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14304:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14308:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1430c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14310:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14314:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14318:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1431c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14320:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14324:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14328:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1432c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14330:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14334:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14338:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1433c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14340:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14344:	andeq	r4, r1, r4, ror #11
   14348:	andeq	r4, r1, ip, lsl r4
   1434c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14350:	andeq	r4, r1, r4, ror #11
   14354:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14358:	andeq	r4, r1, r4, ror #11
   1435c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14360:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14364:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14368:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1436c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14370:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14374:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14378:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1437c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14380:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14384:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14388:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1438c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14390:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14394:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14398:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1439c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143a0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143a4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143a8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143b0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143b4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143b8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143bc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143c0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143c4:	strdeq	r4, [r1], -ip
   143c8:	andeq	r4, r1, r4, ror #11
   143cc:	strdeq	r4, [r1], -ip
   143d0:	andeq	r4, r1, r8, ror #7
   143d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143d8:	cmp	r0, #0
   143dc:	beq	1463c <dcngettext@plt+0x3190>
   143e0:	ldr	r0, [fp, #16]
   143e4:	b	14640 <dcngettext@plt+0x3194>
   143e8:	mov	r4, #0
   143ec:	cmp	r7, #0
   143f0:	beq	145e0 <dcngettext@plt+0x3134>
   143f4:	mov	r9, #0
   143f8:	b	143d4 <dcngettext@plt+0x2f28>
   143fc:	mov	r4, #0
   14400:	cmn	lr, #1
   14404:	beq	145c4 <dcngettext@plt+0x3118>
   14408:	cmp	r7, #0
   1440c:	bne	143f4 <dcngettext@plt+0x2f48>
   14410:	cmp	lr, #1
   14414:	beq	145e0 <dcngettext@plt+0x3134>
   14418:	b	143f4 <dcngettext@plt+0x2f48>
   1441c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14420:	cmp	r0, #2
   14424:	bne	14604 <dcngettext@plt+0x3158>
   14428:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1442c:	tst	r0, #1
   14430:	bne	14d00 <dcngettext@plt+0x3854>
   14434:	mov	r9, #0
   14438:	mov	r0, #92	; 0x5c
   1443c:	b	14618 <dcngettext@plt+0x316c>
   14440:	mov	r0, #102	; 0x66
   14444:	b	14628 <dcngettext@plt+0x317c>
   14448:	mov	r2, #116	; 0x74
   1444c:	b	1445c <dcngettext@plt+0x2fb0>
   14450:	mov	r0, #98	; 0x62
   14454:	b	14628 <dcngettext@plt+0x317c>
   14458:	mov	r2, #114	; 0x72
   1445c:	ldr	r0, [sp, #68]	; 0x44
   14460:	tst	r0, #1
   14464:	mov	r0, r2
   14468:	bne	14628 <dcngettext@plt+0x317c>
   1446c:	b	14d00 <dcngettext@plt+0x3854>
   14470:	ldr	r0, [sp, #84]	; 0x54
   14474:	tst	r0, #1
   14478:	beq	14718 <dcngettext@plt+0x326c>
   1447c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14480:	tst	r0, #1
   14484:	bne	14e10 <dcngettext@plt+0x3964>
   14488:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1448c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14490:	cmp	r0, #2
   14494:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14498:	movwne	r0, #1
   1449c:	orr	r0, r0, r2
   144a0:	tst	r0, #1
   144a4:	beq	14ae8 <dcngettext@plt+0x363c>
   144a8:	mov	r0, r8
   144ac:	b	14b1c <dcngettext@plt+0x3670>
   144b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   144b4:	mov	r9, #0
   144b8:	mov	r5, #63	; 0x3f
   144bc:	cmp	r0, #5
   144c0:	beq	148cc <dcngettext@plt+0x3420>
   144c4:	cmp	r0, #2
   144c8:	bne	14970 <dcngettext@plt+0x34c4>
   144cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   144d0:	tst	r0, #1
   144d4:	beq	14974 <dcngettext@plt+0x34c8>
   144d8:	b	14d00 <dcngettext@plt+0x3854>
   144dc:	mov	r0, #118	; 0x76
   144e0:	b	14628 <dcngettext@plt+0x317c>
   144e4:	mov	r0, #1
   144e8:	mov	r5, #39	; 0x27
   144ec:	str	r0, [sp, #60]	; 0x3c
   144f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   144f4:	cmp	r0, #2
   144f8:	bne	1456c <dcngettext@plt+0x30c0>
   144fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14500:	tst	r0, #1
   14504:	bne	14d00 <dcngettext@plt+0x3854>
   14508:	ldr	r2, [sp, #56]	; 0x38
   1450c:	clz	r1, sl
   14510:	mov	r9, #0
   14514:	lsr	r1, r1, #5
   14518:	cmp	r2, #0
   1451c:	mov	r0, r2
   14520:	movwne	r0, #1
   14524:	orrs	r0, r0, r1
   14528:	moveq	r2, sl
   1452c:	moveq	sl, r0
   14530:	cmp	r8, sl
   14534:	str	r2, [sp, #56]	; 0x38
   14538:	movcc	r0, #39	; 0x27
   1453c:	strbcc	r0, [r6, r8]
   14540:	add	r0, r8, #1
   14544:	cmp	r0, sl
   14548:	movcc	r1, #92	; 0x5c
   1454c:	strbcc	r1, [r6, r0]
   14550:	add	r0, r8, #2
   14554:	add	r8, r8, #3
   14558:	cmp	r0, sl
   1455c:	movcc	r1, #39	; 0x27
   14560:	strbcc	r1, [r6, r0]
   14564:	mov	r0, #0
   14568:	str	r0, [fp, #-56]	; 0xffffffc8
   1456c:	mov	r4, #1
   14570:	b	143d4 <dcngettext@plt+0x2f28>
   14574:	ldr	r0, [sp, #40]	; 0x28
   14578:	cmp	r0, #1
   1457c:	bne	14744 <dcngettext@plt+0x3298>
   14580:	str	lr, [sp, #28]
   14584:	bl	11344 <__ctype_b_loc@plt>
   14588:	ldr	r0, [r0]
   1458c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14590:	mov	r1, #1
   14594:	add	r0, r0, r5, lsl #1
   14598:	ldrb	r0, [r0, #1]
   1459c:	ubfx	r4, r0, #6, #1
   145a0:	ldr	r0, [sp, #52]	; 0x34
   145a4:	mov	r2, r1
   145a8:	cmp	r1, #1
   145ac:	orr	r0, r4, r0
   145b0:	bhi	1497c <dcngettext@plt+0x34d0>
   145b4:	tst	r0, #1
   145b8:	beq	1497c <dcngettext@plt+0x34d0>
   145bc:	ldr	lr, [sp, #28]
   145c0:	b	143d4 <dcngettext@plt+0x2f28>
   145c4:	cmp	r7, #0
   145c8:	ldrbeq	r0, [ip, #1]
   145cc:	cmpeq	r0, #0
   145d0:	beq	145e0 <dcngettext@plt+0x3134>
   145d4:	mvn	lr, #0
   145d8:	mov	r9, #0
   145dc:	b	143d4 <dcngettext@plt+0x2f28>
   145e0:	mov	r1, #1
   145e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   145e8:	cmp	r0, #2
   145ec:	bne	145fc <dcngettext@plt+0x3150>
   145f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   145f4:	tst	r0, #1
   145f8:	bne	14d00 <dcngettext@plt+0x3854>
   145fc:	mov	r4, r1
   14600:	b	143d4 <dcngettext@plt+0x2f28>
   14604:	ldr	r1, [sp, #48]	; 0x30
   14608:	mov	r9, #0
   1460c:	mov	r0, #92	; 0x5c
   14610:	cmp	r1, #0
   14614:	beq	14628 <dcngettext@plt+0x317c>
   14618:	mov	r4, #0
   1461c:	cmp	r9, #0
   14620:	beq	14bb4 <dcngettext@plt+0x3708>
   14624:	b	14bf0 <dcngettext@plt+0x3744>
   14628:	ldr	r1, [sp, #84]	; 0x54
   1462c:	mov	r4, #0
   14630:	mov	r9, #0
   14634:	tst	r1, #1
   14638:	bne	14678 <dcngettext@plt+0x31cc>
   1463c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14640:	cmp	r0, #0
   14644:	mov	r0, r5
   14648:	beq	1466c <dcngettext@plt+0x31c0>
   1464c:	ldr	r1, [fp, #16]
   14650:	ubfx	r0, r5, #5, #3
   14654:	mov	r2, #1
   14658:	ldr	r0, [r1, r0, lsl #2]
   1465c:	and	r1, r5, #31
   14660:	tst	r0, r2, lsl r1
   14664:	mov	r0, r5
   14668:	bne	14678 <dcngettext@plt+0x31cc>
   1466c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14670:	cmp	r1, #0
   14674:	beq	14bac <dcngettext@plt+0x3700>
   14678:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1467c:	tst	r1, #1
   14680:	bne	14cd8 <dcngettext@plt+0x382c>
   14684:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14688:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1468c:	cmp	r1, #2
   14690:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14694:	movwne	r1, #1
   14698:	orr	r1, r1, r2
   1469c:	tst	r1, #1
   146a0:	beq	146ac <dcngettext@plt+0x3200>
   146a4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   146a8:	b	146e8 <dcngettext@plt+0x323c>
   146ac:	cmp	r8, sl
   146b0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   146b4:	movcc	r1, #39	; 0x27
   146b8:	strbcc	r1, [r6, r8]
   146bc:	add	r1, r8, #1
   146c0:	cmp	r1, sl
   146c4:	movcc	r2, #36	; 0x24
   146c8:	strbcc	r2, [r6, r1]
   146cc:	add	r1, r8, #2
   146d0:	add	r8, r8, #3
   146d4:	cmp	r1, sl
   146d8:	movcc	r2, #39	; 0x27
   146dc:	strbcc	r2, [r6, r1]
   146e0:	mov	r1, #1
   146e4:	str	r1, [fp, #-56]	; 0xffffffc8
   146e8:	cmp	r8, sl
   146ec:	movcc	r1, #92	; 0x5c
   146f0:	strbcc	r1, [r6, r8]
   146f4:	add	r8, r8, #1
   146f8:	cmp	r8, sl
   146fc:	and	r5, r5, r4
   14700:	add	r7, r7, #1
   14704:	strbcc	r0, [r6, r8]
   14708:	add	r8, r8, #1
   1470c:	cmn	lr, #1
   14710:	bne	1410c <dcngettext@plt+0x2c60>
   14714:	b	14118 <dcngettext@plt+0x2c6c>
   14718:	ldr	r0, [sp, #36]	; 0x24
   1471c:	mov	r4, #0
   14720:	mov	r9, #0
   14724:	mov	r5, #0
   14728:	cmp	r0, #0
   1472c:	beq	1463c <dcngettext@plt+0x3190>
   14730:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14734:	add	r7, r7, #1
   14738:	cmn	lr, #1
   1473c:	bne	1410c <dcngettext@plt+0x2c60>
   14740:	b	14118 <dcngettext@plt+0x2c6c>
   14744:	mov	r0, #0
   14748:	cmn	lr, #1
   1474c:	str	r0, [fp, #-36]	; 0xffffffdc
   14750:	str	r0, [fp, #-40]	; 0xffffffd8
   14754:	bne	14768 <dcngettext@plt+0x32bc>
   14758:	mov	r0, ip
   1475c:	bl	1135c <strlen@plt>
   14760:	ldr	ip, [fp, #-84]	; 0xffffffac
   14764:	mov	lr, r0
   14768:	add	r0, ip, r7
   1476c:	mov	r4, #1
   14770:	mov	r6, #0
   14774:	str	lr, [sp, #28]
   14778:	str	r0, [sp, #24]
   1477c:	sub	r0, fp, #40	; 0x28
   14780:	mov	r3, r0
   14784:	str	r6, [sp, #44]	; 0x2c
   14788:	add	r6, r6, r7
   1478c:	sub	r0, fp, #44	; 0x2c
   14790:	add	r1, ip, r6
   14794:	sub	r2, lr, r6
   14798:	bl	16f14 <dcngettext@plt+0x5a68>
   1479c:	cmp	r0, #0
   147a0:	beq	14c38 <dcngettext@plt+0x378c>
   147a4:	cmn	r0, #1
   147a8:	beq	14bf8 <dcngettext@plt+0x374c>
   147ac:	ldr	lr, [sp, #28]
   147b0:	cmn	r0, #2
   147b4:	beq	14c00 <dcngettext@plt+0x3754>
   147b8:	ldr	r2, [sp, #64]	; 0x40
   147bc:	cmp	r0, #2
   147c0:	mov	r1, #0
   147c4:	movwcc	r1, #1
   147c8:	eor	r2, r2, #1
   147cc:	orrs	r1, r2, r1
   147d0:	bne	14890 <dcngettext@plt+0x33e4>
   147d4:	ldr	r1, [sp, #44]	; 0x2c
   147d8:	ldr	r2, [sp, #24]
   147dc:	add	r1, r2, r1
   147e0:	mov	r2, #1
   147e4:	ldrb	r3, [r1, r2]
   147e8:	sub	r3, r3, #91	; 0x5b
   147ec:	cmp	r3, #33	; 0x21
   147f0:	bhi	14884 <dcngettext@plt+0x33d8>
   147f4:	add	r6, pc, #0
   147f8:	ldr	pc, [r6, r3, lsl #2]
   147fc:	strdeq	r4, [r1], -r8
   14800:	strdeq	r4, [r1], -r8
   14804:	andeq	r4, r1, r4, lsl #17
   14808:	strdeq	r4, [r1], -r8
   1480c:	andeq	r4, r1, r4, lsl #17
   14810:	strdeq	r4, [r1], -r8
   14814:	andeq	r4, r1, r4, lsl #17
   14818:	andeq	r4, r1, r4, lsl #17
   1481c:	andeq	r4, r1, r4, lsl #17
   14820:	andeq	r4, r1, r4, lsl #17
   14824:	andeq	r4, r1, r4, lsl #17
   14828:	andeq	r4, r1, r4, lsl #17
   1482c:	andeq	r4, r1, r4, lsl #17
   14830:	andeq	r4, r1, r4, lsl #17
   14834:	andeq	r4, r1, r4, lsl #17
   14838:	andeq	r4, r1, r4, lsl #17
   1483c:	andeq	r4, r1, r4, lsl #17
   14840:	andeq	r4, r1, r4, lsl #17
   14844:	andeq	r4, r1, r4, lsl #17
   14848:	andeq	r4, r1, r4, lsl #17
   1484c:	andeq	r4, r1, r4, lsl #17
   14850:	andeq	r4, r1, r4, lsl #17
   14854:	andeq	r4, r1, r4, lsl #17
   14858:	andeq	r4, r1, r4, lsl #17
   1485c:	andeq	r4, r1, r4, lsl #17
   14860:	andeq	r4, r1, r4, lsl #17
   14864:	andeq	r4, r1, r4, lsl #17
   14868:	andeq	r4, r1, r4, lsl #17
   1486c:	andeq	r4, r1, r4, lsl #17
   14870:	andeq	r4, r1, r4, lsl #17
   14874:	andeq	r4, r1, r4, lsl #17
   14878:	andeq	r4, r1, r4, lsl #17
   1487c:	andeq	r4, r1, r4, lsl #17
   14880:	strdeq	r4, [r1], -r8
   14884:	add	r2, r2, #1
   14888:	cmp	r2, r0
   1488c:	bcc	147e4 <dcngettext@plt+0x3338>
   14890:	ldr	r6, [sp, #44]	; 0x2c
   14894:	add	r6, r0, r6
   14898:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1489c:	bl	11260 <iswprint@plt>
   148a0:	cmp	r0, #0
   148a4:	movwne	r0, #1
   148a8:	and	r4, r4, r0
   148ac:	sub	r0, fp, #40	; 0x28
   148b0:	bl	11200 <mbsinit@plt>
   148b4:	ldr	lr, [sp, #28]
   148b8:	ldr	ip, [fp, #-84]	; 0xffffffac
   148bc:	sub	r3, fp, #40	; 0x28
   148c0:	cmp	r0, #0
   148c4:	beq	14784 <dcngettext@plt+0x32d8>
   148c8:	b	14c40 <dcngettext@plt+0x3794>
   148cc:	ldr	r0, [sp, #32]
   148d0:	cmp	r0, #0
   148d4:	beq	14970 <dcngettext@plt+0x34c4>
   148d8:	add	r0, r7, #2
   148dc:	cmp	r0, lr
   148e0:	bcs	14970 <dcngettext@plt+0x34c4>
   148e4:	add	r1, ip, r7
   148e8:	ldrb	r1, [r1, #1]
   148ec:	cmp	r1, #63	; 0x3f
   148f0:	bne	14970 <dcngettext@plt+0x34c4>
   148f4:	ldrb	r5, [ip, r0]
   148f8:	sub	r1, r5, #33	; 0x21
   148fc:	cmp	r1, #29
   14900:	bhi	14970 <dcngettext@plt+0x34c4>
   14904:	movw	r3, #20929	; 0x51c1
   14908:	mov	r2, #1
   1490c:	movt	r3, #14336	; 0x3800
   14910:	tst	r3, r2, lsl r1
   14914:	beq	14970 <dcngettext@plt+0x34c4>
   14918:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1491c:	tst	r1, #1
   14920:	bne	14e18 <dcngettext@plt+0x396c>
   14924:	cmp	r8, sl
   14928:	mov	r7, r0
   1492c:	mov	r4, #0
   14930:	movcc	r1, #63	; 0x3f
   14934:	strbcc	r1, [r6, r8]
   14938:	add	r1, r8, #1
   1493c:	cmp	r1, sl
   14940:	movcc	r2, #34	; 0x22
   14944:	strbcc	r2, [r6, r1]
   14948:	add	r1, r8, #2
   1494c:	cmp	r1, sl
   14950:	movcc	r2, #34	; 0x22
   14954:	strbcc	r2, [r6, r1]
   14958:	add	r1, r8, #3
   1495c:	add	r8, r8, #4
   14960:	cmp	r1, sl
   14964:	movcc	r2, #63	; 0x3f
   14968:	strbcc	r2, [r6, r1]
   1496c:	b	143d4 <dcngettext@plt+0x2f28>
   14970:	mov	r5, #63	; 0x3f
   14974:	mov	r4, #0
   14978:	b	143d4 <dcngettext@plt+0x2f28>
   1497c:	add	r1, r2, r7
   14980:	ldr	lr, [sp, #28]
   14984:	mov	r3, #0
   14988:	str	r1, [sp, #44]	; 0x2c
   1498c:	add	r1, r7, #1
   14990:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14994:	tst	r0, #1
   14998:	bne	14a6c <dcngettext@plt+0x35c0>
   1499c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   149a0:	tst	r2, #1
   149a4:	bne	14d60 <dcngettext@plt+0x38b4>
   149a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   149ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   149b0:	cmp	r7, #2
   149b4:	movwne	r3, #1
   149b8:	orr	r3, r3, r2
   149bc:	tst	r3, #1
   149c0:	bne	149fc <dcngettext@plt+0x3550>
   149c4:	cmp	r8, sl
   149c8:	add	r3, r8, #1
   149cc:	movcc	r2, #39	; 0x27
   149d0:	strbcc	r2, [r6, r8]
   149d4:	cmp	r3, sl
   149d8:	movcc	r2, #36	; 0x24
   149dc:	strbcc	r2, [r6, r3]
   149e0:	add	r3, r8, #2
   149e4:	add	r8, r8, #3
   149e8:	cmp	r3, sl
   149ec:	movcc	r2, #39	; 0x27
   149f0:	strbcc	r2, [r6, r3]
   149f4:	mov	r2, #1
   149f8:	str	r2, [fp, #-56]	; 0xffffffc8
   149fc:	cmp	r8, sl
   14a00:	movcc	r3, #92	; 0x5c
   14a04:	strbcc	r3, [r6, r8]
   14a08:	add	r3, r8, #1
   14a0c:	cmp	r3, sl
   14a10:	andcc	r7, r5, #192	; 0xc0
   14a14:	movcc	r2, #48	; 0x30
   14a18:	orrcc	r7, r2, r7, lsr #6
   14a1c:	strbcc	r7, [r6, r3]
   14a20:	add	r3, r8, #2
   14a24:	add	r8, r8, #3
   14a28:	cmp	r3, sl
   14a2c:	lsrcc	r7, r5, #3
   14a30:	movcc	r2, #6
   14a34:	bficc	r7, r2, #3, #29
   14a38:	mov	r2, #6
   14a3c:	strbcc	r7, [r6, r3]
   14a40:	bfi	r5, r2, #3, #29
   14a44:	mov	r3, #1
   14a48:	b	14a90 <dcngettext@plt+0x35e4>
   14a4c:	cmp	r8, sl
   14a50:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14a54:	strbcc	r5, [r6, r8]
   14a58:	add	r8, r8, #1
   14a5c:	ldrb	r5, [ip, r1]
   14a60:	add	r1, r1, #1
   14a64:	tst	r0, #1
   14a68:	beq	1499c <dcngettext@plt+0x34f0>
   14a6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14a70:	tst	r2, #1
   14a74:	beq	14a88 <dcngettext@plt+0x35dc>
   14a78:	cmp	r8, sl
   14a7c:	movcc	r7, #92	; 0x5c
   14a80:	strbcc	r7, [r6, r8]
   14a84:	add	r8, r8, #1
   14a88:	mov	r2, #0
   14a8c:	str	r2, [fp, #-52]	; 0xffffffcc
   14a90:	ldr	r2, [sp, #44]	; 0x2c
   14a94:	and	r9, r3, #1
   14a98:	cmp	r2, r1
   14a9c:	bls	14b9c <dcngettext@plt+0x36f0>
   14aa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14aa4:	cmp	r9, #0
   14aa8:	movwne	r9, #1
   14aac:	mvn	r7, r2
   14ab0:	orr	r7, r7, r9
   14ab4:	tst	r7, #1
   14ab8:	bne	14a4c <dcngettext@plt+0x35a0>
   14abc:	cmp	r8, sl
   14ac0:	movcc	r7, #39	; 0x27
   14ac4:	strbcc	r7, [r6, r8]
   14ac8:	add	r7, r8, #1
   14acc:	add	r8, r8, #2
   14ad0:	cmp	r7, sl
   14ad4:	movcc	r2, #39	; 0x27
   14ad8:	strbcc	r2, [r6, r7]
   14adc:	mov	r2, #0
   14ae0:	str	r2, [fp, #-56]	; 0xffffffc8
   14ae4:	b	14a4c <dcngettext@plt+0x35a0>
   14ae8:	cmp	r8, sl
   14aec:	mov	r2, #1
   14af0:	movcc	r0, #39	; 0x27
   14af4:	strbcc	r0, [r6, r8]
   14af8:	add	r0, r8, #1
   14afc:	cmp	r0, sl
   14b00:	movcc	r1, #36	; 0x24
   14b04:	strbcc	r1, [r6, r0]
   14b08:	add	r0, r8, #2
   14b0c:	cmp	r0, sl
   14b10:	movcc	r1, #39	; 0x27
   14b14:	strbcc	r1, [r6, r0]
   14b18:	add	r0, r8, #3
   14b1c:	cmp	r0, sl
   14b20:	add	r8, r0, #1
   14b24:	str	r2, [fp, #-56]	; 0xffffffc8
   14b28:	movcc	r1, #92	; 0x5c
   14b2c:	strbcc	r1, [r6, r0]
   14b30:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14b34:	cmp	r1, #2
   14b38:	beq	14b8c <dcngettext@plt+0x36e0>
   14b3c:	add	r1, r7, #1
   14b40:	mov	r4, #0
   14b44:	mov	r9, #1
   14b48:	mov	r5, #48	; 0x30
   14b4c:	cmp	r1, lr
   14b50:	bcs	143d4 <dcngettext@plt+0x2f28>
   14b54:	ldrb	r1, [ip, r1]
   14b58:	sub	r1, r1, #48	; 0x30
   14b5c:	uxtb	r1, r1
   14b60:	cmp	r1, #9
   14b64:	bhi	143d4 <dcngettext@plt+0x2f28>
   14b68:	cmp	r8, sl
   14b6c:	movcc	r1, #48	; 0x30
   14b70:	strbcc	r1, [r6, r8]
   14b74:	add	r1, r0, #2
   14b78:	add	r8, r0, #3
   14b7c:	cmp	r1, sl
   14b80:	movcc	r2, #48	; 0x30
   14b84:	strbcc	r2, [r6, r1]
   14b88:	b	143d4 <dcngettext@plt+0x2f28>
   14b8c:	mov	r0, #48	; 0x30
   14b90:	mov	r9, #1
   14b94:	mov	r4, #0
   14b98:	b	1466c <dcngettext@plt+0x31c0>
   14b9c:	cmp	r9, #0
   14ba0:	sub	r7, r1, #1
   14ba4:	mov	r0, r5
   14ba8:	movwne	r9, #1
   14bac:	cmp	r9, #0
   14bb0:	bne	14bf0 <dcngettext@plt+0x3744>
   14bb4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14bb8:	tst	r1, #1
   14bbc:	beq	14bf0 <dcngettext@plt+0x3744>
   14bc0:	cmp	r8, sl
   14bc4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14bc8:	movcc	r1, #39	; 0x27
   14bcc:	strbcc	r1, [r6, r8]
   14bd0:	add	r1, r8, #1
   14bd4:	add	r8, r8, #2
   14bd8:	cmp	r1, sl
   14bdc:	movcc	r2, #39	; 0x27
   14be0:	strbcc	r2, [r6, r1]
   14be4:	mov	r1, #0
   14be8:	str	r1, [fp, #-56]	; 0xffffffc8
   14bec:	b	146f8 <dcngettext@plt+0x324c>
   14bf0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14bf4:	b	146f8 <dcngettext@plt+0x324c>
   14bf8:	mov	r4, #0
   14bfc:	b	14c38 <dcngettext@plt+0x378c>
   14c00:	mov	r4, #0
   14c04:	cmp	lr, r6
   14c08:	bls	14c38 <dcngettext@plt+0x378c>
   14c0c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c10:	ldr	r6, [sp, #44]	; 0x2c
   14c14:	ldr	r0, [sp, #24]
   14c18:	ldrb	r0, [r0, r6]
   14c1c:	cmp	r0, #0
   14c20:	beq	14c40 <dcngettext@plt+0x3794>
   14c24:	add	r6, r6, #1
   14c28:	add	r0, r7, r6
   14c2c:	cmp	r0, lr
   14c30:	bcc	14c14 <dcngettext@plt+0x3768>
   14c34:	b	14c40 <dcngettext@plt+0x3794>
   14c38:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c3c:	ldr	r6, [sp, #44]	; 0x2c
   14c40:	mov	r1, r6
   14c44:	ldr	r6, [sp, #80]	; 0x50
   14c48:	b	145a0 <dcngettext@plt+0x30f4>
   14c4c:	mov	lr, r7
   14c50:	b	14c58 <dcngettext@plt+0x37ac>
   14c54:	mvn	lr, #0
   14c58:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14c5c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14c60:	eor	r0, r7, #2
   14c64:	orr	r0, r0, r8
   14c68:	clz	r0, r0
   14c6c:	lsr	r0, r0, #5
   14c70:	tst	r1, r0
   14c74:	bne	14d00 <dcngettext@plt+0x3854>
   14c78:	mov	r0, r1
   14c7c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14c80:	cmp	r7, #2
   14c84:	movwne	r1, #1
   14c88:	orr	r0, r0, r1
   14c8c:	tst	r0, #1
   14c90:	ldreq	r0, [sp, #60]	; 0x3c
   14c94:	eoreq	r0, r0, #1
   14c98:	tsteq	r0, #1
   14c9c:	bne	14dac <dcngettext@plt+0x3900>
   14ca0:	mov	r9, lr
   14ca4:	tst	r5, #1
   14ca8:	bne	14d68 <dcngettext@plt+0x38bc>
   14cac:	ldr	r6, [sp, #56]	; 0x38
   14cb0:	mov	r4, #0
   14cb4:	cmp	r6, #0
   14cb8:	beq	14da4 <dcngettext@plt+0x38f8>
   14cbc:	ldr	r0, [sp, #84]	; 0x54
   14cc0:	mov	r1, #0
   14cc4:	cmp	sl, #0
   14cc8:	mov	r5, #0
   14ccc:	str	r1, [fp, #-72]	; 0xffffffb8
   14cd0:	beq	13ea0 <dcngettext@plt+0x29f4>
   14cd4:	b	14dac <dcngettext@plt+0x3900>
   14cd8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14cdc:	ldr	r2, [sp, #84]	; 0x54
   14ce0:	b	14d08 <dcngettext@plt+0x385c>
   14ce4:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ce8:	mov	r2, #1
   14cec:	mov	lr, r4
   14cf0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14cf4:	b	14d08 <dcngettext@plt+0x385c>
   14cf8:	ldr	r6, [sp, #80]	; 0x50
   14cfc:	ldr	ip, [fp, #-84]	; 0xffffffac
   14d00:	ldr	r2, [sp, #84]	; 0x54
   14d04:	mov	r7, #2
   14d08:	mov	r0, #0
   14d0c:	ldr	r1, [fp, #12]
   14d10:	tst	r2, #1
   14d14:	mov	r2, r7
   14d18:	mov	r3, lr
   14d1c:	str	r0, [sp, #8]
   14d20:	ldr	r0, [sp, #72]	; 0x48
   14d24:	movwne	r2, #4
   14d28:	cmp	r7, #2
   14d2c:	movne	r2, r7
   14d30:	str	r2, [sp]
   14d34:	mov	r2, ip
   14d38:	bic	r1, r1, #2
   14d3c:	str	r0, [sp, #12]
   14d40:	ldr	r0, [sp, #76]	; 0x4c
   14d44:	str	r1, [sp, #4]
   14d48:	mov	r1, sl
   14d4c:	str	r0, [sp, #16]
   14d50:	mov	r0, r6
   14d54:	bl	13e20 <dcngettext@plt+0x2974>
   14d58:	mov	r8, r0
   14d5c:	b	14e04 <dcngettext@plt+0x3958>
   14d60:	ldr	r2, [sp, #84]	; 0x54
   14d64:	b	14d08 <dcngettext@plt+0x385c>
   14d68:	mov	r0, #5
   14d6c:	ldr	r1, [sp, #56]	; 0x38
   14d70:	ldr	r2, [fp, #-84]	; 0xffffffac
   14d74:	mov	r3, r9
   14d78:	str	r0, [sp]
   14d7c:	ldr	r0, [fp, #12]
   14d80:	str	r0, [sp, #4]
   14d84:	ldr	r0, [fp, #16]
   14d88:	str	r0, [sp, #8]
   14d8c:	ldr	r0, [sp, #72]	; 0x48
   14d90:	str	r0, [sp, #12]
   14d94:	ldr	r0, [sp, #76]	; 0x4c
   14d98:	str	r0, [sp, #16]
   14d9c:	ldr	r0, [sp, #80]	; 0x50
   14da0:	b	14d54 <dcngettext@plt+0x38a8>
   14da4:	mov	r0, #0
   14da8:	str	r0, [fp, #-72]	; 0xffffffb8
   14dac:	ldr	r1, [sp, #92]	; 0x5c
   14db0:	cmp	r1, #0
   14db4:	beq	14df4 <dcngettext@plt+0x3948>
   14db8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14dbc:	ldr	r2, [sp, #80]	; 0x50
   14dc0:	tst	r0, #1
   14dc4:	bne	14df8 <dcngettext@plt+0x394c>
   14dc8:	ldrb	r0, [r1]
   14dcc:	cmp	r0, #0
   14dd0:	beq	14df8 <dcngettext@plt+0x394c>
   14dd4:	add	r1, r1, #1
   14dd8:	cmp	r8, sl
   14ddc:	strbcc	r0, [r2, r8]
   14de0:	add	r8, r8, #1
   14de4:	ldrb	r0, [r1], #1
   14de8:	cmp	r0, #0
   14dec:	bne	14dd8 <dcngettext@plt+0x392c>
   14df0:	b	14df8 <dcngettext@plt+0x394c>
   14df4:	ldr	r2, [sp, #80]	; 0x50
   14df8:	cmp	r8, sl
   14dfc:	movcc	r0, #0
   14e00:	strbcc	r0, [r2, r8]
   14e04:	mov	r0, r8
   14e08:	sub	sp, fp, #28
   14e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e10:	mov	r2, #1
   14e14:	b	14cf0 <dcngettext@plt+0x3844>
   14e18:	ldr	r2, [sp, #84]	; 0x54
   14e1c:	mov	r7, #5
   14e20:	b	14d08 <dcngettext@plt+0x385c>
   14e24:	bl	11494 <abort@plt>
   14e28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e2c:	add	fp, sp, #28
   14e30:	sub	sp, sp, #28
   14e34:	movw	r5, #33184	; 0x81a0
   14e38:	cmp	r2, #0
   14e3c:	mov	r4, r1
   14e40:	mov	r7, r0
   14e44:	str	r0, [sp, #20]
   14e48:	movt	r5, #2
   14e4c:	movne	r5, r2
   14e50:	bl	11374 <__errno_location@plt>
   14e54:	mov	sl, r0
   14e58:	ldm	r5, {r0, r1}
   14e5c:	ldr	r2, [r5, #40]	; 0x28
   14e60:	ldr	r3, [r5, #44]	; 0x2c
   14e64:	add	r9, r5, #8
   14e68:	ldr	r6, [sl]
   14e6c:	orr	r8, r1, #1
   14e70:	mov	r1, #0
   14e74:	str	r6, [sp, #24]
   14e78:	stm	sp, {r0, r8, r9}
   14e7c:	str	r2, [sp, #12]
   14e80:	str	r3, [sp, #16]
   14e84:	mov	r0, #0
   14e88:	mov	r2, r7
   14e8c:	mov	r3, r4
   14e90:	mov	r6, r4
   14e94:	bl	13e20 <dcngettext@plt+0x2974>
   14e98:	add	r7, r0, #1
   14e9c:	mov	r0, r7
   14ea0:	bl	167e4 <dcngettext@plt+0x5338>
   14ea4:	mov	r4, r0
   14ea8:	ldr	r0, [r5]
   14eac:	ldr	r2, [r5, #44]	; 0x2c
   14eb0:	ldr	r1, [r5, #40]	; 0x28
   14eb4:	mov	r3, r6
   14eb8:	stm	sp, {r0, r8, r9}
   14ebc:	str	r2, [sp, #16]
   14ec0:	str	r1, [sp, #12]
   14ec4:	mov	r0, r4
   14ec8:	mov	r1, r7
   14ecc:	ldr	r2, [sp, #20]
   14ed0:	bl	13e20 <dcngettext@plt+0x2974>
   14ed4:	ldr	r0, [sp, #24]
   14ed8:	str	r0, [sl]
   14edc:	mov	r0, r4
   14ee0:	sub	sp, fp, #28
   14ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14eec:	add	fp, sp, #28
   14ef0:	sub	sp, sp, #36	; 0x24
   14ef4:	movw	r8, #33184	; 0x81a0
   14ef8:	cmp	r3, #0
   14efc:	mov	r4, r2
   14f00:	str	r2, [sp, #24]
   14f04:	mov	r5, r1
   14f08:	mov	r6, r0
   14f0c:	str	r0, [sp, #20]
   14f10:	movt	r8, #2
   14f14:	movne	r8, r3
   14f18:	bl	11374 <__errno_location@plt>
   14f1c:	str	r0, [sp, #28]
   14f20:	cmp	r4, #0
   14f24:	add	sl, r8, #8
   14f28:	ldm	r8, {r3, r9}
   14f2c:	ldr	r7, [r0]
   14f30:	ldr	r1, [r8, #40]	; 0x28
   14f34:	ldr	r2, [r8, #44]	; 0x2c
   14f38:	mov	r0, #0
   14f3c:	orreq	r9, r9, #1
   14f40:	str	r7, [sp, #32]
   14f44:	mov	r7, r5
   14f48:	stm	sp, {r3, r9, sl}
   14f4c:	str	r1, [sp, #12]
   14f50:	str	r2, [sp, #16]
   14f54:	mov	r1, #0
   14f58:	mov	r2, r6
   14f5c:	mov	r3, r5
   14f60:	bl	13e20 <dcngettext@plt+0x2974>
   14f64:	add	r4, r0, #1
   14f68:	mov	r5, r0
   14f6c:	mov	r0, r4
   14f70:	bl	167e4 <dcngettext@plt+0x5338>
   14f74:	mov	r6, r0
   14f78:	ldr	r0, [r8]
   14f7c:	ldr	r2, [r8, #44]	; 0x2c
   14f80:	ldr	r1, [r8, #40]	; 0x28
   14f84:	mov	r3, r7
   14f88:	stm	sp, {r0, r9, sl}
   14f8c:	str	r2, [sp, #16]
   14f90:	str	r1, [sp, #12]
   14f94:	mov	r0, r6
   14f98:	mov	r1, r4
   14f9c:	ldr	r2, [sp, #20]
   14fa0:	bl	13e20 <dcngettext@plt+0x2974>
   14fa4:	ldr	r0, [sp, #24]
   14fa8:	ldr	r1, [sp, #32]
   14fac:	ldr	r2, [sp, #28]
   14fb0:	cmp	r0, #0
   14fb4:	str	r1, [r2]
   14fb8:	strne	r5, [r0]
   14fbc:	mov	r0, r6
   14fc0:	sub	sp, fp, #28
   14fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14fcc:	add	fp, sp, #24
   14fd0:	movw	r5, #33076	; 0x8134
   14fd4:	movw	r8, #33072	; 0x8130
   14fd8:	movt	r5, #2
   14fdc:	movt	r8, #2
   14fe0:	ldr	r0, [r5]
   14fe4:	ldr	r4, [r8]
   14fe8:	cmp	r0, #2
   14fec:	blt	15018 <dcngettext@plt+0x3b6c>
   14ff0:	add	r7, r4, #12
   14ff4:	mov	r6, #0
   14ff8:	ldr	r0, [r7, r6, lsl #3]
   14ffc:	bl	16eb4 <dcngettext@plt+0x5a08>
   15000:	ldr	r1, [r5]
   15004:	add	r2, r6, #2
   15008:	add	r0, r6, #1
   1500c:	mov	r6, r0
   15010:	cmp	r2, r1
   15014:	blt	14ff8 <dcngettext@plt+0x3b4c>
   15018:	ldr	r0, [r4, #4]
   1501c:	movw	r7, #33232	; 0x81d0
   15020:	movt	r7, #2
   15024:	cmp	r0, r7
   15028:	beq	15040 <dcngettext@plt+0x3b94>
   1502c:	bl	16eb4 <dcngettext@plt+0x5a08>
   15030:	movw	r0, #33080	; 0x8138
   15034:	mov	r6, #256	; 0x100
   15038:	movt	r0, #2
   1503c:	strd	r6, [r0]
   15040:	movw	r6, #33080	; 0x8138
   15044:	movt	r6, #2
   15048:	cmp	r4, r6
   1504c:	beq	1505c <dcngettext@plt+0x3bb0>
   15050:	mov	r0, r4
   15054:	bl	16eb4 <dcngettext@plt+0x5a08>
   15058:	str	r6, [r8]
   1505c:	mov	r0, #1
   15060:	str	r0, [r5]
   15064:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15068:	movw	r3, #33184	; 0x81a0
   1506c:	mvn	r2, #0
   15070:	movt	r3, #2
   15074:	b	15078 <dcngettext@plt+0x3bcc>
   15078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1507c:	add	fp, sp, #28
   15080:	sub	sp, sp, #44	; 0x2c
   15084:	mov	r7, r3
   15088:	str	r2, [sp, #36]	; 0x24
   1508c:	str	r1, [sp, #32]
   15090:	mov	r5, r0
   15094:	bl	11374 <__errno_location@plt>
   15098:	cmp	r5, #0
   1509c:	blt	15208 <dcngettext@plt+0x3d5c>
   150a0:	cmn	r5, #-2147483647	; 0x80000001
   150a4:	beq	15208 <dcngettext@plt+0x3d5c>
   150a8:	movw	r8, #33076	; 0x8134
   150ac:	movw	r4, #33072	; 0x8130
   150b0:	str	r0, [sp, #28]
   150b4:	ldr	r0, [r0]
   150b8:	movt	r8, #2
   150bc:	movt	r4, #2
   150c0:	ldr	r1, [r8]
   150c4:	ldr	r6, [r4]
   150c8:	str	r0, [sp, #24]
   150cc:	cmp	r1, r5
   150d0:	ble	150dc <dcngettext@plt+0x3c30>
   150d4:	mov	sl, r6
   150d8:	b	15144 <dcngettext@plt+0x3c98>
   150dc:	movw	r9, #33080	; 0x8138
   150e0:	mov	r0, #8
   150e4:	add	r2, r5, #1
   150e8:	str	r1, [fp, #-32]	; 0xffffffe0
   150ec:	mvn	r3, #-2147483648	; 0x80000000
   150f0:	movt	r9, #2
   150f4:	str	r0, [sp]
   150f8:	sub	r2, r2, r1
   150fc:	sub	r1, fp, #32
   15100:	subs	r0, r6, r9
   15104:	movne	r0, r6
   15108:	bl	169e4 <dcngettext@plt+0x5538>
   1510c:	cmp	r6, r9
   15110:	mov	sl, r0
   15114:	str	r0, [r4]
   15118:	ldrdeq	r0, [r9]
   1511c:	stmeq	sl, {r0, r1}
   15120:	ldr	r1, [r8]
   15124:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15128:	add	r0, sl, r1, lsl #3
   1512c:	sub	r1, r2, r1
   15130:	lsl	r2, r1, #3
   15134:	mov	r1, #0
   15138:	bl	1138c <memset@plt>
   1513c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15140:	str	r0, [r8]
   15144:	mov	r9, sl
   15148:	ldr	r6, [r9, r5, lsl #3]!
   1514c:	ldr	r4, [r9, #4]!
   15150:	ldm	r7, {r0, r1}
   15154:	ldr	r2, [r7, #40]	; 0x28
   15158:	ldr	r3, [r7, #44]	; 0x2c
   1515c:	orr	r8, r1, #1
   15160:	add	r1, r7, #8
   15164:	stm	sp, {r0, r8}
   15168:	add	r0, sp, #8
   1516c:	str	r1, [sp, #20]
   15170:	stm	r0, {r1, r2, r3}
   15174:	mov	r0, r4
   15178:	mov	r1, r6
   1517c:	ldr	r2, [sp, #32]
   15180:	ldr	r3, [sp, #36]	; 0x24
   15184:	bl	13e20 <dcngettext@plt+0x2974>
   15188:	cmp	r6, r0
   1518c:	bhi	151f0 <dcngettext@plt+0x3d44>
   15190:	add	r6, r0, #1
   15194:	movw	r0, #33232	; 0x81d0
   15198:	movt	r0, #2
   1519c:	str	r6, [sl, r5, lsl #3]
   151a0:	cmp	r4, r0
   151a4:	beq	151b0 <dcngettext@plt+0x3d04>
   151a8:	mov	r0, r4
   151ac:	bl	16eb4 <dcngettext@plt+0x5a08>
   151b0:	mov	r0, r6
   151b4:	bl	167e4 <dcngettext@plt+0x5338>
   151b8:	str	r0, [r9]
   151bc:	mov	r4, r0
   151c0:	add	r3, sp, #8
   151c4:	ldr	r0, [r7]
   151c8:	ldr	r1, [r7, #40]	; 0x28
   151cc:	ldr	r2, [r7, #44]	; 0x2c
   151d0:	stm	sp, {r0, r8}
   151d4:	ldr	r0, [sp, #20]
   151d8:	stm	r3, {r0, r1, r2}
   151dc:	mov	r0, r4
   151e0:	mov	r1, r6
   151e4:	ldr	r2, [sp, #32]
   151e8:	ldr	r3, [sp, #36]	; 0x24
   151ec:	bl	13e20 <dcngettext@plt+0x2974>
   151f0:	ldr	r0, [sp, #28]
   151f4:	ldr	r1, [sp, #24]
   151f8:	str	r1, [r0]
   151fc:	mov	r0, r4
   15200:	sub	sp, fp, #28
   15204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15208:	bl	11494 <abort@plt>
   1520c:	movw	r3, #33184	; 0x81a0
   15210:	movt	r3, #2
   15214:	b	15078 <dcngettext@plt+0x3bcc>
   15218:	movw	r3, #33184	; 0x81a0
   1521c:	mov	r1, r0
   15220:	mov	r0, #0
   15224:	mvn	r2, #0
   15228:	movt	r3, #2
   1522c:	b	15078 <dcngettext@plt+0x3bcc>
   15230:	movw	r3, #33184	; 0x81a0
   15234:	mov	r2, r1
   15238:	mov	r1, r0
   1523c:	mov	r0, #0
   15240:	movt	r3, #2
   15244:	b	15078 <dcngettext@plt+0x3bcc>
   15248:	push	{fp, lr}
   1524c:	mov	fp, sp
   15250:	sub	sp, sp, #48	; 0x30
   15254:	vmov.i32	q8, #0	; 0x00000000
   15258:	mov	ip, #32
   1525c:	mov	r3, sp
   15260:	mov	lr, r2
   15264:	cmp	r1, #10
   15268:	add	r2, r3, #16
   1526c:	vst1.64	{d16-d17}, [r3], ip
   15270:	vst1.64	{d16-d17}, [r3]
   15274:	vst1.64	{d16-d17}, [r2]
   15278:	beq	15298 <dcngettext@plt+0x3dec>
   1527c:	str	r1, [sp]
   15280:	mov	r3, sp
   15284:	mov	r1, lr
   15288:	mvn	r2, #0
   1528c:	bl	15078 <dcngettext@plt+0x3bcc>
   15290:	mov	sp, fp
   15294:	pop	{fp, pc}
   15298:	bl	11494 <abort@plt>
   1529c:	push	{r4, sl, fp, lr}
   152a0:	add	fp, sp, #8
   152a4:	sub	sp, sp, #48	; 0x30
   152a8:	mov	ip, r3
   152ac:	mov	r3, sp
   152b0:	vmov.i32	q8, #0	; 0x00000000
   152b4:	mov	lr, #32
   152b8:	cmp	r1, #10
   152bc:	add	r4, r3, #16
   152c0:	vst1.64	{d16-d17}, [r3], lr
   152c4:	vst1.64	{d16-d17}, [r3]
   152c8:	vst1.64	{d16-d17}, [r4]
   152cc:	beq	152ec <dcngettext@plt+0x3e40>
   152d0:	str	r1, [sp]
   152d4:	mov	r1, r2
   152d8:	mov	r3, sp
   152dc:	mov	r2, ip
   152e0:	bl	15078 <dcngettext@plt+0x3bcc>
   152e4:	sub	sp, fp, #8
   152e8:	pop	{r4, sl, fp, pc}
   152ec:	bl	11494 <abort@plt>
   152f0:	push	{fp, lr}
   152f4:	mov	fp, sp
   152f8:	sub	sp, sp, #48	; 0x30
   152fc:	mov	r3, sp
   15300:	vmov.i32	q8, #0	; 0x00000000
   15304:	mov	ip, #32
   15308:	cmp	r0, #10
   1530c:	add	r2, r3, #16
   15310:	vst1.64	{d16-d17}, [r3], ip
   15314:	vst1.64	{d16-d17}, [r3]
   15318:	vst1.64	{d16-d17}, [r2]
   1531c:	beq	1533c <dcngettext@plt+0x3e90>
   15320:	str	r0, [sp]
   15324:	mov	r3, sp
   15328:	mov	r0, #0
   1532c:	mvn	r2, #0
   15330:	bl	15078 <dcngettext@plt+0x3bcc>
   15334:	mov	sp, fp
   15338:	pop	{fp, pc}
   1533c:	bl	11494 <abort@plt>
   15340:	push	{fp, lr}
   15344:	mov	fp, sp
   15348:	sub	sp, sp, #48	; 0x30
   1534c:	mov	r3, sp
   15350:	vmov.i32	q8, #0	; 0x00000000
   15354:	mov	ip, #32
   15358:	cmp	r0, #10
   1535c:	add	lr, r3, #16
   15360:	vst1.64	{d16-d17}, [r3], ip
   15364:	vst1.64	{d16-d17}, [r3]
   15368:	vst1.64	{d16-d17}, [lr]
   1536c:	beq	15388 <dcngettext@plt+0x3edc>
   15370:	str	r0, [sp]
   15374:	mov	r3, sp
   15378:	mov	r0, #0
   1537c:	bl	15078 <dcngettext@plt+0x3bcc>
   15380:	mov	sp, fp
   15384:	pop	{fp, pc}
   15388:	bl	11494 <abort@plt>
   1538c:	push	{r4, sl, fp, lr}
   15390:	add	fp, sp, #8
   15394:	sub	sp, sp, #48	; 0x30
   15398:	mov	lr, r0
   1539c:	movw	r0, #33184	; 0x81a0
   153a0:	mov	r3, #32
   153a4:	mov	ip, r1
   153a8:	mov	r4, #1
   153ac:	movt	r0, #2
   153b0:	add	r1, r0, #16
   153b4:	vld1.64	{d16-d17}, [r0], r3
   153b8:	mov	r3, sp
   153bc:	vld1.64	{d18-d19}, [r1]
   153c0:	add	r1, r3, #16
   153c4:	vld1.64	{d20-d21}, [r0]
   153c8:	add	r0, r3, #32
   153cc:	vst1.64	{d18-d19}, [r1]
   153d0:	mov	r1, r3
   153d4:	vst1.64	{d20-d21}, [r0]
   153d8:	mov	r0, #28
   153dc:	and	r0, r0, r2, lsr #3
   153e0:	and	r2, r2, #31
   153e4:	vst1.64	{d16-d17}, [r1], r0
   153e8:	ldr	r0, [r1, #8]
   153ec:	bic	r4, r4, r0, lsr r2
   153f0:	eor	r0, r0, r4, lsl r2
   153f4:	mov	r2, ip
   153f8:	str	r0, [r1, #8]
   153fc:	mov	r0, #0
   15400:	mov	r1, lr
   15404:	bl	15078 <dcngettext@plt+0x3bcc>
   15408:	sub	sp, fp, #8
   1540c:	pop	{r4, sl, fp, pc}
   15410:	push	{fp, lr}
   15414:	mov	fp, sp
   15418:	sub	sp, sp, #48	; 0x30
   1541c:	mov	ip, r0
   15420:	movw	r0, #33184	; 0x81a0
   15424:	mov	r3, #32
   15428:	movt	r0, #2
   1542c:	add	r2, r0, #16
   15430:	vld1.64	{d16-d17}, [r0], r3
   15434:	mov	r3, sp
   15438:	vld1.64	{d18-d19}, [r2]
   1543c:	add	r2, r3, #16
   15440:	vld1.64	{d20-d21}, [r0]
   15444:	add	r0, r3, #32
   15448:	vst1.64	{d18-d19}, [r2]
   1544c:	mov	r2, r3
   15450:	vst1.64	{d20-d21}, [r0]
   15454:	mov	r0, #28
   15458:	and	r0, r0, r1, lsr #3
   1545c:	and	r1, r1, #31
   15460:	vst1.64	{d16-d17}, [r2], r0
   15464:	mov	r0, #1
   15468:	ldr	lr, [r2, #8]
   1546c:	bic	r0, r0, lr, lsr r1
   15470:	eor	r0, lr, r0, lsl r1
   15474:	mov	r1, ip
   15478:	str	r0, [r2, #8]
   1547c:	mov	r0, #0
   15480:	mvn	r2, #0
   15484:	bl	15078 <dcngettext@plt+0x3bcc>
   15488:	mov	sp, fp
   1548c:	pop	{fp, pc}
   15490:	push	{fp, lr}
   15494:	mov	fp, sp
   15498:	sub	sp, sp, #48	; 0x30
   1549c:	movw	r2, #33184	; 0x81a0
   154a0:	mov	r3, #32
   154a4:	mov	r1, r0
   154a8:	movt	r2, #2
   154ac:	add	r0, r2, #16
   154b0:	vld1.64	{d16-d17}, [r2], r3
   154b4:	mov	r3, sp
   154b8:	vld1.64	{d18-d19}, [r0]
   154bc:	add	r0, r3, #16
   154c0:	vld1.64	{d20-d21}, [r2]
   154c4:	mov	r2, r3
   154c8:	vst1.64	{d18-d19}, [r0]
   154cc:	add	r0, r3, #32
   154d0:	vst1.64	{d20-d21}, [r0]
   154d4:	mov	r0, #12
   154d8:	vst1.64	{d16-d17}, [r2], r0
   154dc:	ldr	r0, [r2]
   154e0:	orr	r0, r0, #67108864	; 0x4000000
   154e4:	str	r0, [r2]
   154e8:	mov	r0, #0
   154ec:	mvn	r2, #0
   154f0:	bl	15078 <dcngettext@plt+0x3bcc>
   154f4:	mov	sp, fp
   154f8:	pop	{fp, pc}
   154fc:	push	{fp, lr}
   15500:	mov	fp, sp
   15504:	sub	sp, sp, #48	; 0x30
   15508:	mov	ip, r1
   1550c:	mov	r1, r0
   15510:	movw	r0, #33184	; 0x81a0
   15514:	mov	r3, #32
   15518:	movt	r0, #2
   1551c:	add	r2, r0, #16
   15520:	vld1.64	{d16-d17}, [r0], r3
   15524:	mov	r3, sp
   15528:	vld1.64	{d18-d19}, [r2]
   1552c:	add	r2, r3, #16
   15530:	vld1.64	{d20-d21}, [r0]
   15534:	add	r0, r3, #32
   15538:	vst1.64	{d18-d19}, [r2]
   1553c:	mov	r2, r3
   15540:	vst1.64	{d20-d21}, [r0]
   15544:	mov	r0, #12
   15548:	vst1.64	{d16-d17}, [r2], r0
   1554c:	ldr	r0, [r2]
   15550:	orr	r0, r0, #67108864	; 0x4000000
   15554:	str	r0, [r2]
   15558:	mov	r0, #0
   1555c:	mov	r2, ip
   15560:	bl	15078 <dcngettext@plt+0x3bcc>
   15564:	mov	sp, fp
   15568:	pop	{fp, pc}
   1556c:	push	{r4, sl, fp, lr}
   15570:	add	fp, sp, #8
   15574:	sub	sp, sp, #96	; 0x60
   15578:	mov	ip, r2
   1557c:	mov	r2, sp
   15580:	vmov.i32	q8, #0	; 0x00000000
   15584:	mov	r4, #28
   15588:	cmp	r1, #10
   1558c:	mov	r3, r2
   15590:	add	lr, r2, #16
   15594:	vst1.64	{d16-d17}, [r3], r4
   15598:	vst1.64	{d16-d17}, [lr]
   1559c:	vst1.32	{d16-d17}, [r3]
   155a0:	beq	155f0 <dcngettext@plt+0x4144>
   155a4:	vld1.64	{d16-d17}, [r2], r4
   155a8:	vld1.64	{d18-d19}, [lr]
   155ac:	add	r3, sp, #48	; 0x30
   155b0:	add	r4, r3, #4
   155b4:	vld1.32	{d20-d21}, [r2]
   155b8:	add	r2, r3, #20
   155bc:	vst1.32	{d16-d17}, [r4]
   155c0:	vst1.32	{d18-d19}, [r2]
   155c4:	add	r2, r3, #32
   155c8:	vst1.32	{d20-d21}, [r2]
   155cc:	str	r1, [sp, #48]	; 0x30
   155d0:	mvn	r2, #0
   155d4:	ldr	r1, [sp, #60]	; 0x3c
   155d8:	orr	r1, r1, #67108864	; 0x4000000
   155dc:	str	r1, [sp, #60]	; 0x3c
   155e0:	mov	r1, ip
   155e4:	bl	15078 <dcngettext@plt+0x3bcc>
   155e8:	sub	sp, fp, #8
   155ec:	pop	{r4, sl, fp, pc}
   155f0:	bl	11494 <abort@plt>
   155f4:	push	{r4, r5, fp, lr}
   155f8:	add	fp, sp, #8
   155fc:	sub	sp, sp, #48	; 0x30
   15600:	mov	ip, r3
   15604:	movw	r3, #33184	; 0x81a0
   15608:	mov	lr, #32
   1560c:	cmp	r1, #0
   15610:	mov	r5, sp
   15614:	movt	r3, #2
   15618:	cmpne	r2, #0
   1561c:	add	r4, r3, #16
   15620:	vld1.64	{d16-d17}, [r3], lr
   15624:	vld1.64	{d18-d19}, [r4]
   15628:	add	r4, r5, #16
   1562c:	vld1.64	{d20-d21}, [r3]
   15630:	vst1.64	{d16-d17}, [r5], lr
   15634:	mov	r3, #10
   15638:	vst1.64	{d18-d19}, [r4]
   1563c:	vst1.64	{d20-d21}, [r5]
   15640:	str	r3, [sp]
   15644:	bne	1564c <dcngettext@plt+0x41a0>
   15648:	bl	11494 <abort@plt>
   1564c:	str	r2, [sp, #44]	; 0x2c
   15650:	str	r1, [sp, #40]	; 0x28
   15654:	mov	r3, sp
   15658:	mov	r1, ip
   1565c:	mvn	r2, #0
   15660:	bl	15078 <dcngettext@plt+0x3bcc>
   15664:	sub	sp, fp, #8
   15668:	pop	{r4, r5, fp, pc}
   1566c:	push	{r4, r5, fp, lr}
   15670:	add	fp, sp, #8
   15674:	sub	sp, sp, #48	; 0x30
   15678:	mov	lr, r3
   1567c:	movw	r3, #33184	; 0x81a0
   15680:	mov	ip, #32
   15684:	cmp	r1, #0
   15688:	mov	r5, sp
   1568c:	movt	r3, #2
   15690:	cmpne	r2, #0
   15694:	add	r4, r3, #16
   15698:	vld1.64	{d16-d17}, [r3], ip
   1569c:	vld1.64	{d18-d19}, [r4]
   156a0:	add	r4, r5, #16
   156a4:	vld1.64	{d20-d21}, [r3]
   156a8:	vst1.64	{d16-d17}, [r5], ip
   156ac:	mov	r3, #10
   156b0:	vst1.64	{d18-d19}, [r4]
   156b4:	vst1.64	{d20-d21}, [r5]
   156b8:	str	r3, [sp]
   156bc:	bne	156c4 <dcngettext@plt+0x4218>
   156c0:	bl	11494 <abort@plt>
   156c4:	ldr	ip, [fp, #8]
   156c8:	str	r2, [sp, #44]	; 0x2c
   156cc:	str	r1, [sp, #40]	; 0x28
   156d0:	mov	r3, sp
   156d4:	mov	r1, lr
   156d8:	mov	r2, ip
   156dc:	bl	15078 <dcngettext@plt+0x3bcc>
   156e0:	sub	sp, fp, #8
   156e4:	pop	{r4, r5, fp, pc}
   156e8:	push	{r4, sl, fp, lr}
   156ec:	add	fp, sp, #8
   156f0:	sub	sp, sp, #48	; 0x30
   156f4:	mov	ip, r2
   156f8:	movw	r2, #33184	; 0x81a0
   156fc:	mov	lr, #32
   15700:	cmp	r0, #0
   15704:	mov	r4, sp
   15708:	movt	r2, #2
   1570c:	cmpne	r1, #0
   15710:	add	r3, r2, #16
   15714:	vld1.64	{d16-d17}, [r2], lr
   15718:	vld1.64	{d18-d19}, [r3]
   1571c:	add	r3, r4, #16
   15720:	vld1.64	{d20-d21}, [r2]
   15724:	vst1.64	{d16-d17}, [r4], lr
   15728:	mov	r2, #10
   1572c:	vst1.64	{d18-d19}, [r3]
   15730:	vst1.64	{d20-d21}, [r4]
   15734:	str	r2, [sp]
   15738:	bne	15740 <dcngettext@plt+0x4294>
   1573c:	bl	11494 <abort@plt>
   15740:	str	r1, [sp, #44]	; 0x2c
   15744:	str	r0, [sp, #40]	; 0x28
   15748:	mov	r3, sp
   1574c:	mov	r0, #0
   15750:	mov	r1, ip
   15754:	mvn	r2, #0
   15758:	bl	15078 <dcngettext@plt+0x3bcc>
   1575c:	sub	sp, fp, #8
   15760:	pop	{r4, sl, fp, pc}
   15764:	push	{r4, r5, fp, lr}
   15768:	add	fp, sp, #8
   1576c:	sub	sp, sp, #48	; 0x30
   15770:	mov	lr, r2
   15774:	movw	r2, #33184	; 0x81a0
   15778:	mov	ip, r3
   1577c:	mov	r3, #32
   15780:	cmp	r0, #0
   15784:	mov	r5, sp
   15788:	movt	r2, #2
   1578c:	cmpne	r1, #0
   15790:	add	r4, r2, #16
   15794:	vld1.64	{d16-d17}, [r2], r3
   15798:	vld1.64	{d18-d19}, [r4]
   1579c:	add	r4, r5, #16
   157a0:	vld1.64	{d20-d21}, [r2]
   157a4:	vst1.64	{d16-d17}, [r5], r3
   157a8:	mov	r2, #10
   157ac:	vst1.64	{d18-d19}, [r4]
   157b0:	vst1.64	{d20-d21}, [r5]
   157b4:	str	r2, [sp]
   157b8:	bne	157c0 <dcngettext@plt+0x4314>
   157bc:	bl	11494 <abort@plt>
   157c0:	str	r1, [sp, #44]	; 0x2c
   157c4:	str	r0, [sp, #40]	; 0x28
   157c8:	mov	r3, sp
   157cc:	mov	r0, #0
   157d0:	mov	r1, lr
   157d4:	mov	r2, ip
   157d8:	bl	15078 <dcngettext@plt+0x3bcc>
   157dc:	sub	sp, fp, #8
   157e0:	pop	{r4, r5, fp, pc}
   157e4:	movw	r3, #33088	; 0x8140
   157e8:	movt	r3, #2
   157ec:	b	15078 <dcngettext@plt+0x3bcc>
   157f0:	movw	r3, #33088	; 0x8140
   157f4:	mov	r2, r1
   157f8:	mov	r1, r0
   157fc:	mov	r0, #0
   15800:	movt	r3, #2
   15804:	b	15078 <dcngettext@plt+0x3bcc>
   15808:	movw	r3, #33088	; 0x8140
   1580c:	mvn	r2, #0
   15810:	movt	r3, #2
   15814:	b	15078 <dcngettext@plt+0x3bcc>
   15818:	movw	r3, #33088	; 0x8140
   1581c:	mov	r1, r0
   15820:	mov	r0, #0
   15824:	mvn	r2, #0
   15828:	movt	r3, #2
   1582c:	b	15078 <dcngettext@plt+0x3bcc>
   15830:	push	{r4, r5, fp, lr}
   15834:	add	fp, sp, #8
   15838:	mov	r5, r0
   1583c:	mov	r4, r1
   15840:	mov	r0, #0
   15844:	mov	r2, #5
   15848:	mov	r1, r5
   1584c:	bl	11224 <dcgettext@plt>
   15850:	cmp	r0, r5
   15854:	popne	{r4, r5, fp, pc}
   15858:	bl	16edc <dcngettext@plt+0x5a30>
   1585c:	ldrb	r1, [r0]
   15860:	and	r1, r1, #223	; 0xdf
   15864:	cmp	r1, #71	; 0x47
   15868:	beq	158d0 <dcngettext@plt+0x4424>
   1586c:	cmp	r1, #85	; 0x55
   15870:	bne	158f4 <dcngettext@plt+0x4448>
   15874:	ldrb	r1, [r0, #1]
   15878:	and	r1, r1, #223	; 0xdf
   1587c:	cmp	r1, #84	; 0x54
   15880:	bne	158f4 <dcngettext@plt+0x4448>
   15884:	ldrb	r1, [r0, #2]
   15888:	and	r1, r1, #223	; 0xdf
   1588c:	cmp	r1, #70	; 0x46
   15890:	ldrbeq	r1, [r0, #3]
   15894:	cmpeq	r1, #45	; 0x2d
   15898:	bne	158f4 <dcngettext@plt+0x4448>
   1589c:	ldrb	r1, [r0, #4]
   158a0:	cmp	r1, #56	; 0x38
   158a4:	ldrbeq	r0, [r0, #5]
   158a8:	cmpeq	r0, #0
   158ac:	bne	158f4 <dcngettext@plt+0x4448>
   158b0:	ldrb	r1, [r5]
   158b4:	movw	r2, #30468	; 0x7704
   158b8:	movw	r0, #30472	; 0x7708
   158bc:	movt	r2, #1
   158c0:	movt	r0, #1
   158c4:	cmp	r1, #96	; 0x60
   158c8:	moveq	r0, r2
   158cc:	pop	{r4, r5, fp, pc}
   158d0:	ldrb	r1, [r0, #1]
   158d4:	and	r1, r1, #223	; 0xdf
   158d8:	cmp	r1, #66	; 0x42
   158dc:	bne	158f4 <dcngettext@plt+0x4448>
   158e0:	ldrb	r1, [r0, #2]
   158e4:	cmp	r1, #49	; 0x31
   158e8:	ldrbeq	r1, [r0, #3]
   158ec:	cmpeq	r1, #56	; 0x38
   158f0:	beq	15910 <dcngettext@plt+0x4464>
   158f4:	movw	r1, #30462	; 0x76fe
   158f8:	movw	r0, #30466	; 0x7702
   158fc:	cmp	r4, #9
   15900:	movt	r1, #1
   15904:	movt	r0, #1
   15908:	moveq	r0, r1
   1590c:	pop	{r4, r5, fp, pc}
   15910:	ldrb	r1, [r0, #4]
   15914:	cmp	r1, #48	; 0x30
   15918:	ldrbeq	r1, [r0, #5]
   1591c:	cmpeq	r1, #51	; 0x33
   15920:	bne	158f4 <dcngettext@plt+0x4448>
   15924:	ldrb	r1, [r0, #6]
   15928:	cmp	r1, #48	; 0x30
   1592c:	ldrbeq	r0, [r0, #7]
   15930:	cmpeq	r0, #0
   15934:	bne	158f4 <dcngettext@plt+0x4448>
   15938:	ldrb	r1, [r5]
   1593c:	movw	r2, #30476	; 0x770c
   15940:	movw	r0, #30480	; 0x7710
   15944:	movt	r2, #1
   15948:	movt	r0, #1
   1594c:	b	158c4 <dcngettext@plt+0x4418>
   15950:	push	{r4, r5, fp, lr}
   15954:	add	fp, sp, #8
   15958:	mov	r5, r0
   1595c:	mov	r0, #33	; 0x21
   15960:	bl	167b4 <dcngettext@plt+0x5308>
   15964:	add	r1, r5, #44	; 0x2c
   15968:	mov	r2, #32
   1596c:	mov	r4, r0
   15970:	bl	11398 <strncpy@plt>
   15974:	mov	r5, #0
   15978:	mov	r0, r4
   1597c:	strb	r5, [r4, #32]
   15980:	bl	1135c <strlen@plt>
   15984:	cmp	r0, #1
   15988:	blt	159b0 <dcngettext@plt+0x4504>
   1598c:	add	r1, r4, r0
   15990:	mov	r0, r1
   15994:	ldrb	r2, [r0, #-1]!
   15998:	cmp	r2, #32
   1599c:	bne	159b0 <dcngettext@plt+0x4504>
   159a0:	strb	r5, [r1, #-1]
   159a4:	cmp	r4, r0
   159a8:	mov	r1, r0
   159ac:	bcc	15994 <dcngettext@plt+0x44e8>
   159b0:	mov	r0, r4
   159b4:	pop	{r4, r5, fp, pc}
   159b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159bc:	add	fp, sp, #28
   159c0:	sub	sp, sp, #20
   159c4:	mov	r6, #0
   159c8:	mov	r5, r3
   159cc:	str	r2, [sp, #12]
   159d0:	str	r1, [sp, #8]
   159d4:	str	r6, [sp, #16]
   159d8:	bl	111d0 <utmpxname@plt>
   159dc:	bl	11230 <setutxent@plt>
   159e0:	bl	114a0 <getutxent@plt>
   159e4:	cmp	r0, #0
   159e8:	beq	15ac4 <dcngettext@plt+0x4618>
   159ec:	mov	r4, r0
   159f0:	and	r7, r5, #1
   159f4:	and	r8, r5, #2
   159f8:	mov	r5, #0
   159fc:	mov	r9, #384	; 0x180
   15a00:	add	sl, sp, #16
   15a04:	mov	r6, #0
   15a08:	ldrb	r0, [r4, #44]	; 0x2c
   15a0c:	cmp	r0, #0
   15a10:	mov	r0, #0
   15a14:	ldrhne	r0, [r4]
   15a18:	subne	r0, r0, #7
   15a1c:	clzne	r0, r0
   15a20:	lsrne	r0, r0, #5
   15a24:	cmp	r8, #0
   15a28:	beq	15a34 <dcngettext@plt+0x4588>
   15a2c:	cmp	r0, #0
   15a30:	beq	15ab0 <dcngettext@plt+0x4604>
   15a34:	cmp	r7, #0
   15a38:	beq	15a70 <dcngettext@plt+0x45c4>
   15a3c:	eors	r0, r0, #1
   15a40:	bne	15a70 <dcngettext@plt+0x45c4>
   15a44:	ldr	r0, [r4, #4]
   15a48:	cmp	r0, #1
   15a4c:	blt	15a70 <dcngettext@plt+0x45c4>
   15a50:	mov	r1, #0
   15a54:	bl	11338 <kill@plt>
   15a58:	cmn	r0, #1
   15a5c:	bgt	15a70 <dcngettext@plt+0x45c4>
   15a60:	bl	11374 <__errno_location@plt>
   15a64:	ldr	r0, [r0]
   15a68:	cmp	r0, #3
   15a6c:	beq	15ab0 <dcngettext@plt+0x4604>
   15a70:	ldr	r0, [sp, #16]
   15a74:	cmp	r5, r0
   15a78:	bne	15a98 <dcngettext@plt+0x45ec>
   15a7c:	mov	r0, r6
   15a80:	mov	r1, sl
   15a84:	mov	r2, #1
   15a88:	mvn	r3, #0
   15a8c:	str	r9, [sp]
   15a90:	bl	169e4 <dcngettext@plt+0x5538>
   15a94:	mov	r6, r0
   15a98:	add	r0, r5, r5, lsl #1
   15a9c:	mov	r1, r4
   15aa0:	mov	r2, #384	; 0x180
   15aa4:	add	r0, r6, r0, lsl #7
   15aa8:	bl	111f4 <memcpy@plt>
   15aac:	add	r5, r5, #1
   15ab0:	bl	114a0 <getutxent@plt>
   15ab4:	mov	r4, r0
   15ab8:	cmp	r0, #0
   15abc:	bne	15a08 <dcngettext@plt+0x455c>
   15ac0:	b	15ac8 <dcngettext@plt+0x461c>
   15ac4:	mov	r5, #0
   15ac8:	bl	113f8 <endutxent@plt>
   15acc:	ldr	r0, [sp, #8]
   15ad0:	str	r5, [r0]
   15ad4:	ldr	r0, [sp, #12]
   15ad8:	str	r6, [r0]
   15adc:	mov	r0, #0
   15ae0:	sub	sp, fp, #28
   15ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ae8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15aec:	add	fp, sp, #24
   15af0:	mov	r4, r0
   15af4:	cmp	r0, #0
   15af8:	beq	15b1c <dcngettext@plt+0x4670>
   15afc:	mov	r0, r4
   15b00:	bl	1135c <strlen@plt>
   15b04:	add	r5, r0, #1
   15b08:	cmp	r5, #58	; 0x3a
   15b0c:	bls	15b20 <dcngettext@plt+0x4674>
   15b10:	add	r0, r0, #10
   15b14:	bic	r0, r0, #3
   15b18:	b	15b24 <dcngettext@plt+0x4678>
   15b1c:	mov	r5, #0
   15b20:	mov	r0, #64	; 0x40
   15b24:	bl	16dac <dcngettext@plt+0x5900>
   15b28:	mov	r6, r0
   15b2c:	cmp	r0, #0
   15b30:	beq	15b6c <dcngettext@plt+0x46c0>
   15b34:	cmp	r4, #0
   15b38:	mov	r0, r4
   15b3c:	mov	r8, #0
   15b40:	mov	r7, r6
   15b44:	movwne	r0, #1
   15b48:	str	r8, [r6]
   15b4c:	strb	r0, [r6, #4]
   15b50:	strb	r8, [r7, #5]!
   15b54:	beq	15b6c <dcngettext@plt+0x46c0>
   15b58:	mov	r0, r7
   15b5c:	mov	r1, r4
   15b60:	mov	r2, r5
   15b64:	bl	111f4 <memcpy@plt>
   15b68:	strb	r8, [r7, r5]
   15b6c:	mov	r0, r6
   15b70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b74:	push	{r4, sl, fp, lr}
   15b78:	add	fp, sp, #8
   15b7c:	cmp	r0, #2
   15b80:	popcc	{r4, sl, fp, pc}
   15b84:	ldr	r4, [r0]
   15b88:	bl	16eb4 <dcngettext@plt+0x5a08>
   15b8c:	cmp	r4, #0
   15b90:	mov	r0, r4
   15b94:	bne	15b84 <dcngettext@plt+0x46d8>
   15b98:	pop	{r4, sl, fp, pc}
   15b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ba0:	add	fp, sp, #28
   15ba4:	sub	sp, sp, #4
   15ba8:	mov	sl, r2
   15bac:	mov	r7, r1
   15bb0:	cmp	r0, #0
   15bb4:	beq	15c84 <dcngettext@plt+0x47d8>
   15bb8:	mov	r6, r0
   15bbc:	bl	15cc0 <dcngettext@plt+0x4814>
   15bc0:	cmp	r0, #0
   15bc4:	moveq	r0, #0
   15bc8:	subeq	sp, fp, #28
   15bcc:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bd0:	mov	r4, r0
   15bd4:	mov	r0, r7
   15bd8:	mov	r1, sl
   15bdc:	bl	11248 <localtime_r@plt>
   15be0:	mov	r7, #1
   15be4:	cmp	r0, #0
   15be8:	mov	r9, #1
   15bec:	beq	15c00 <dcngettext@plt+0x4754>
   15bf0:	mov	r0, r6
   15bf4:	mov	r1, sl
   15bf8:	bl	15e0c <dcngettext@plt+0x4960>
   15bfc:	eor	r9, r0, #1
   15c00:	cmp	r4, #1
   15c04:	beq	15c68 <dcngettext@plt+0x47bc>
   15c08:	bl	11374 <__errno_location@plt>
   15c0c:	mov	r6, r0
   15c10:	ldr	r8, [r0]
   15c14:	ldrb	r0, [r4, #4]
   15c18:	cmp	r0, #0
   15c1c:	beq	15c98 <dcngettext@plt+0x47ec>
   15c20:	movw	r0, #30568	; 0x7768
   15c24:	add	r1, r4, #5
   15c28:	mov	r2, #1
   15c2c:	movt	r0, #1
   15c30:	bl	11368 <setenv@plt>
   15c34:	cmp	r0, #0
   15c38:	beq	15cac <dcngettext@plt+0x4800>
   15c3c:	ldr	r8, [r6]
   15c40:	mov	r7, #0
   15c44:	cmp	r4, #2
   15c48:	bcc	15c64 <dcngettext@plt+0x47b8>
   15c4c:	ldr	r5, [r4]
   15c50:	mov	r0, r4
   15c54:	bl	16eb4 <dcngettext@plt+0x5a08>
   15c58:	cmp	r5, #0
   15c5c:	mov	r4, r5
   15c60:	bne	15c4c <dcngettext@plt+0x47a0>
   15c64:	str	r8, [r6]
   15c68:	cmp	r7, #0
   15c6c:	moveq	sl, r7
   15c70:	cmp	r9, #0
   15c74:	movwne	sl, #0
   15c78:	mov	r0, sl
   15c7c:	sub	sp, fp, #28
   15c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c84:	mov	r0, r7
   15c88:	mov	r1, sl
   15c8c:	sub	sp, fp, #28
   15c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c94:	b	111a0 <gmtime_r@plt>
   15c98:	movw	r0, #30568	; 0x7768
   15c9c:	movt	r0, #1
   15ca0:	bl	1147c <unsetenv@plt>
   15ca4:	cmp	r0, #0
   15ca8:	bne	15c3c <dcngettext@plt+0x4790>
   15cac:	bl	1126c <tzset@plt>
   15cb0:	mov	r7, #1
   15cb4:	cmp	r4, #2
   15cb8:	bcs	15c4c <dcngettext@plt+0x47a0>
   15cbc:	b	15c64 <dcngettext@plt+0x47b8>
   15cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cc4:	add	fp, sp, #28
   15cc8:	sub	sp, sp, #4
   15ccc:	mov	r4, r0
   15cd0:	movw	r0, #30568	; 0x7768
   15cd4:	movt	r0, #1
   15cd8:	bl	112c0 <getenv@plt>
   15cdc:	mov	r6, r0
   15ce0:	ldrb	r0, [r4, #4]
   15ce4:	cmp	r6, #0
   15ce8:	beq	15d2c <dcngettext@plt+0x4880>
   15cec:	cmp	r0, #0
   15cf0:	beq	15d08 <dcngettext@plt+0x485c>
   15cf4:	add	r0, r4, #5
   15cf8:	mov	r1, r6
   15cfc:	bl	111ac <strcmp@plt>
   15d00:	cmp	r0, #0
   15d04:	beq	15de0 <dcngettext@plt+0x4934>
   15d08:	mov	r0, r6
   15d0c:	bl	1135c <strlen@plt>
   15d10:	add	r8, r0, #1
   15d14:	mov	r9, #1
   15d18:	cmp	r8, #58	; 0x3a
   15d1c:	bls	15d3c <dcngettext@plt+0x4890>
   15d20:	add	r0, r0, #10
   15d24:	bic	r0, r0, #3
   15d28:	b	15d40 <dcngettext@plt+0x4894>
   15d2c:	mov	r9, #0
   15d30:	cmp	r0, #0
   15d34:	mov	r8, #0
   15d38:	beq	15de0 <dcngettext@plt+0x4934>
   15d3c:	mov	r0, #64	; 0x40
   15d40:	bl	16dac <dcngettext@plt+0x5900>
   15d44:	cmp	r0, #0
   15d48:	beq	15dd8 <dcngettext@plt+0x492c>
   15d4c:	mov	sl, #0
   15d50:	mov	r7, r0
   15d54:	strb	r9, [r0, #4]
   15d58:	mov	r5, r0
   15d5c:	cmp	r9, #0
   15d60:	str	sl, [r0]
   15d64:	strb	sl, [r7, #5]!
   15d68:	beq	15d80 <dcngettext@plt+0x48d4>
   15d6c:	mov	r0, r7
   15d70:	mov	r1, r6
   15d74:	mov	r2, r8
   15d78:	bl	111f4 <memcpy@plt>
   15d7c:	strb	sl, [r7, r8]
   15d80:	ldrb	r0, [r4, #4]
   15d84:	cmp	r0, #0
   15d88:	beq	15de8 <dcngettext@plt+0x493c>
   15d8c:	movw	r0, #30568	; 0x7768
   15d90:	add	r1, r4, #5
   15d94:	mov	r2, #1
   15d98:	movt	r0, #1
   15d9c:	bl	11368 <setenv@plt>
   15da0:	cmp	r0, #0
   15da4:	beq	15dfc <dcngettext@plt+0x4950>
   15da8:	bl	11374 <__errno_location@plt>
   15dac:	ldr	r6, [r0]
   15db0:	mov	r4, r0
   15db4:	cmp	r5, #2
   15db8:	bcc	15dd4 <dcngettext@plt+0x4928>
   15dbc:	ldr	r7, [r5]
   15dc0:	mov	r0, r5
   15dc4:	bl	16eb4 <dcngettext@plt+0x5a08>
   15dc8:	cmp	r7, #0
   15dcc:	mov	r5, r7
   15dd0:	bne	15dbc <dcngettext@plt+0x4910>
   15dd4:	str	r6, [r4]
   15dd8:	mov	r5, #0
   15ddc:	b	15e00 <dcngettext@plt+0x4954>
   15de0:	mov	r5, #1
   15de4:	b	15e00 <dcngettext@plt+0x4954>
   15de8:	movw	r0, #30568	; 0x7768
   15dec:	movt	r0, #1
   15df0:	bl	1147c <unsetenv@plt>
   15df4:	cmp	r0, #0
   15df8:	bne	15da8 <dcngettext@plt+0x48fc>
   15dfc:	bl	1126c <tzset@plt>
   15e00:	mov	r0, r5
   15e04:	sub	sp, fp, #28
   15e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e10:	add	fp, sp, #28
   15e14:	sub	sp, sp, #4
   15e18:	ldr	r7, [r1, #40]	; 0x28
   15e1c:	mov	r8, #1
   15e20:	cmp	r7, #0
   15e24:	beq	15ec8 <dcngettext@plt+0x4a1c>
   15e28:	mov	r5, r1
   15e2c:	mov	r6, r0
   15e30:	cmp	r7, r1
   15e34:	bcc	15e44 <dcngettext@plt+0x4998>
   15e38:	add	r0, r5, #44	; 0x2c
   15e3c:	cmp	r7, r0
   15e40:	bcc	15ec8 <dcngettext@plt+0x4a1c>
   15e44:	ldrb	r0, [r7]
   15e48:	cmp	r0, #0
   15e4c:	beq	15ebc <dcngettext@plt+0x4a10>
   15e50:	add	r4, r6, #5
   15e54:	b	15e68 <dcngettext@plt+0x49bc>
   15e58:	ldr	r0, [r6]
   15e5c:	cmp	r0, #0
   15e60:	addne	r4, r0, #5
   15e64:	movne	r6, r0
   15e68:	mov	r0, r4
   15e6c:	mov	r1, r7
   15e70:	bl	111ac <strcmp@plt>
   15e74:	cmp	r0, #0
   15e78:	beq	15ec4 <dcngettext@plt+0x4a18>
   15e7c:	ldrb	r0, [r4]
   15e80:	cmp	r0, #0
   15e84:	bne	15ea0 <dcngettext@plt+0x49f4>
   15e88:	add	r0, r6, #5
   15e8c:	cmp	r4, r0
   15e90:	bne	15ed4 <dcngettext@plt+0x4a28>
   15e94:	ldrb	r0, [r6, #4]
   15e98:	cmp	r0, #0
   15e9c:	beq	15ed4 <dcngettext@plt+0x4a28>
   15ea0:	mov	r0, r4
   15ea4:	bl	1135c <strlen@plt>
   15ea8:	add	r4, r4, r0
   15eac:	ldrb	r0, [r4, #1]!
   15eb0:	cmp	r0, #0
   15eb4:	bne	15e68 <dcngettext@plt+0x49bc>
   15eb8:	b	15e58 <dcngettext@plt+0x49ac>
   15ebc:	movw	r4, #29392	; 0x72d0
   15ec0:	movt	r4, #1
   15ec4:	str	r4, [r5, #40]	; 0x28
   15ec8:	mov	r0, r8
   15ecc:	sub	sp, fp, #28
   15ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ed4:	add	r0, r6, #64	; 0x40
   15ed8:	sub	sl, r0, r4
   15edc:	mov	r0, r7
   15ee0:	bl	1135c <strlen@plt>
   15ee4:	add	r9, r0, #1
   15ee8:	cmp	r9, sl
   15eec:	bge	15f0c <dcngettext@plt+0x4a60>
   15ef0:	mov	r0, r4
   15ef4:	mov	r1, r7
   15ef8:	mov	r2, r9
   15efc:	bl	111f4 <memcpy@plt>
   15f00:	mov	r0, #0
   15f04:	strb	r0, [r4, r9]
   15f08:	b	15ec4 <dcngettext@plt+0x4a18>
   15f0c:	add	r0, r0, #10
   15f10:	cmp	r9, #59	; 0x3b
   15f14:	bic	r0, r0, #3
   15f18:	movwcc	r0, #64	; 0x40
   15f1c:	bl	16dac <dcngettext@plt+0x5900>
   15f20:	cmp	r0, #0
   15f24:	beq	15f64 <dcngettext@plt+0x4ab8>
   15f28:	mov	sl, r0
   15f2c:	mov	r0, #0
   15f30:	mov	r1, r7
   15f34:	mov	r2, r9
   15f38:	str	r0, [sl]
   15f3c:	mov	r0, #1
   15f40:	add	r4, sl, #5
   15f44:	strh	r0, [sl, #4]
   15f48:	mov	r0, r4
   15f4c:	bl	111f4 <memcpy@plt>
   15f50:	mov	r0, #0
   15f54:	strb	r0, [r4, r9]
   15f58:	str	sl, [r6]
   15f5c:	strb	r0, [sl, #4]
   15f60:	b	15ec4 <dcngettext@plt+0x4a18>
   15f64:	mov	r8, #0
   15f68:	str	r8, [r6]
   15f6c:	b	15ec8 <dcngettext@plt+0x4a1c>
   15f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f74:	add	fp, sp, #28
   15f78:	sub	sp, sp, #52	; 0x34
   15f7c:	mov	r4, r1
   15f80:	cmp	r0, #0
   15f84:	beq	16090 <dcngettext@plt+0x4be4>
   15f88:	mov	r6, r0
   15f8c:	bl	15cc0 <dcngettext@plt+0x4814>
   15f90:	cmp	r0, #0
   15f94:	beq	16088 <dcngettext@plt+0x4bdc>
   15f98:	mov	r8, r0
   15f9c:	mov	r0, #32
   15fa0:	mov	r1, r4
   15fa4:	add	r5, sp, #8
   15fa8:	vld1.32	{d16-d17}, [r1], r0
   15fac:	mov	r2, r5
   15fb0:	vst1.32	{d16-d17}, [r2], r0
   15fb4:	ldr	r0, [r4, #16]
   15fb8:	ldr	r3, [r4, #20]
   15fbc:	str	r0, [sp, #24]
   15fc0:	mvn	r0, #0
   15fc4:	str	r0, [sp, #36]	; 0x24
   15fc8:	str	r3, [sp, #28]
   15fcc:	ldr	r0, [r1]
   15fd0:	str	r0, [r2]
   15fd4:	mov	r0, r5
   15fd8:	bl	111b8 <mktime@plt>
   15fdc:	mov	r9, r0
   15fe0:	ldr	r0, [sp, #36]	; 0x24
   15fe4:	mov	sl, #1
   15fe8:	mov	r1, #1
   15fec:	cmp	r0, #0
   15ff0:	blt	16004 <dcngettext@plt+0x4b58>
   15ff4:	add	r1, sp, #8
   15ff8:	mov	r0, r6
   15ffc:	bl	15e0c <dcngettext@plt+0x4960>
   16000:	eor	r1, r0, #1
   16004:	cmp	r8, #1
   16008:	beq	1607c <dcngettext@plt+0x4bd0>
   1600c:	str	r1, [sp, #4]
   16010:	bl	11374 <__errno_location@plt>
   16014:	mov	r6, r0
   16018:	ldr	r7, [r0]
   1601c:	ldrb	r0, [r8, #4]
   16020:	cmp	r0, #0
   16024:	beq	160d0 <dcngettext@plt+0x4c24>
   16028:	movw	r0, #30568	; 0x7768
   1602c:	add	r1, r8, #5
   16030:	mov	r2, #1
   16034:	movt	r0, #1
   16038:	bl	11368 <setenv@plt>
   1603c:	cmp	r0, #0
   16040:	beq	160e4 <dcngettext@plt+0x4c38>
   16044:	ldr	r0, [r6]
   16048:	mov	sl, #0
   1604c:	str	r0, [sp]
   16050:	cmp	r8, #2
   16054:	bcc	16070 <dcngettext@plt+0x4bc4>
   16058:	ldr	r7, [r8]
   1605c:	mov	r0, r8
   16060:	bl	16eb4 <dcngettext@plt+0x5a08>
   16064:	cmp	r7, #0
   16068:	mov	r8, r7
   1606c:	bne	16058 <dcngettext@plt+0x4bac>
   16070:	ldr	r0, [sp]
   16074:	ldr	r1, [sp, #4]
   16078:	str	r0, [r6]
   1607c:	eor	r0, sl, #1
   16080:	orrs	r0, r1, r0
   16084:	beq	160a0 <dcngettext@plt+0x4bf4>
   16088:	mvn	r9, #0
   1608c:	b	160c4 <dcngettext@plt+0x4c18>
   16090:	mov	r0, r4
   16094:	sub	sp, fp, #28
   16098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1609c:	b	1144c <timegm@plt>
   160a0:	mov	r0, #28
   160a4:	add	r1, r5, #16
   160a8:	vld1.32	{d16-d17}, [r5], r0
   160ac:	vld1.64	{d18-d19}, [r1]
   160b0:	add	r1, r4, #16
   160b4:	vld1.32	{d20-d21}, [r5]
   160b8:	vst1.32	{d16-d17}, [r4], r0
   160bc:	vst1.32	{d18-d19}, [r1]
   160c0:	vst1.32	{d20-d21}, [r4]
   160c4:	mov	r0, r9
   160c8:	sub	sp, fp, #28
   160cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160d0:	movw	r0, #30568	; 0x7768
   160d4:	movt	r0, #1
   160d8:	bl	1147c <unsetenv@plt>
   160dc:	cmp	r0, #0
   160e0:	bne	16044 <dcngettext@plt+0x4b98>
   160e4:	str	r7, [sp]
   160e8:	bl	1126c <tzset@plt>
   160ec:	mov	sl, #1
   160f0:	cmp	r8, #2
   160f4:	bcs	16058 <dcngettext@plt+0x4bac>
   160f8:	b	16070 <dcngettext@plt+0x4bc4>
   160fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16100:	add	fp, sp, #24
   16104:	sub	sp, sp, #32
   16108:	ldr	r6, [fp, #12]
   1610c:	ldr	r7, [fp, #8]
   16110:	mov	r4, r2
   16114:	mov	r8, r0
   16118:	cmp	r1, #0
   1611c:	beq	16144 <dcngettext@plt+0x4c98>
   16120:	movw	r2, #30571	; 0x776b
   16124:	mov	r5, r1
   16128:	str	r3, [sp, #4]
   1612c:	str	r4, [sp]
   16130:	mov	r0, r8
   16134:	mov	r1, #1
   16138:	movt	r2, #1
   1613c:	mov	r3, r5
   16140:	b	1615c <dcngettext@plt+0x4cb0>
   16144:	movw	r2, #30583	; 0x7777
   16148:	str	r3, [sp]
   1614c:	mov	r0, r8
   16150:	mov	r1, #1
   16154:	mov	r3, r4
   16158:	movt	r2, #1
   1615c:	bl	113bc <__fprintf_chk@plt>
   16160:	movw	r1, #30590	; 0x777e
   16164:	mov	r0, #0
   16168:	mov	r2, #5
   1616c:	movt	r1, #1
   16170:	bl	11224 <dcgettext@plt>
   16174:	movw	r2, #31308	; 0x7a4c
   16178:	mov	r3, r0
   1617c:	movw	r0, #2022	; 0x7e6
   16180:	mov	r1, #1
   16184:	str	r0, [sp]
   16188:	movt	r2, #1
   1618c:	mov	r0, r8
   16190:	bl	113bc <__fprintf_chk@plt>
   16194:	movw	r4, #29391	; 0x72cf
   16198:	mov	r1, r8
   1619c:	movt	r4, #1
   161a0:	mov	r0, r4
   161a4:	bl	11194 <fputs_unlocked@plt>
   161a8:	movw	r1, #30594	; 0x7782
   161ac:	mov	r0, #0
   161b0:	mov	r2, #5
   161b4:	movt	r1, #1
   161b8:	bl	11224 <dcgettext@plt>
   161bc:	movw	r3, #30765	; 0x782d
   161c0:	mov	r2, r0
   161c4:	mov	r0, r8
   161c8:	mov	r1, #1
   161cc:	movt	r3, #1
   161d0:	bl	113bc <__fprintf_chk@plt>
   161d4:	mov	r0, r4
   161d8:	mov	r1, r8
   161dc:	bl	11194 <fputs_unlocked@plt>
   161e0:	cmp	r6, #9
   161e4:	bhi	16220 <dcngettext@plt+0x4d74>
   161e8:	add	r0, pc, #0
   161ec:	ldr	pc, [r0, r6, lsl #2]
   161f0:	andeq	r6, r1, r8, lsl r2
   161f4:	andeq	r6, r1, ip, lsr #4
   161f8:	andeq	r6, r1, ip, asr r2
   161fc:	andeq	r6, r1, r4, lsl #5
   16200:	andeq	r6, r1, ip, lsr #5
   16204:	ldrdeq	r6, [r1], -r4
   16208:	strdeq	r6, [r1], -ip
   1620c:	andeq	r6, r1, r4, lsr r3
   16210:	ldrdeq	r6, [r1], -r4
   16214:	andeq	r6, r1, ip, ror r3
   16218:	sub	sp, fp, #24
   1621c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16220:	movw	r1, #31118	; 0x798e
   16224:	movt	r1, #1
   16228:	b	16384 <dcngettext@plt+0x4ed8>
   1622c:	movw	r1, #30799	; 0x784f
   16230:	mov	r0, #0
   16234:	mov	r2, #5
   16238:	movt	r1, #1
   1623c:	bl	11224 <dcgettext@plt>
   16240:	ldr	r3, [r7]
   16244:	mov	r2, r0
   16248:	mov	r0, r8
   1624c:	mov	r1, #1
   16250:	sub	sp, fp, #24
   16254:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16258:	b	113bc <__fprintf_chk@plt>
   1625c:	movw	r1, #30815	; 0x785f
   16260:	mov	r0, #0
   16264:	mov	r2, #5
   16268:	movt	r1, #1
   1626c:	bl	11224 <dcgettext@plt>
   16270:	mov	r2, r0
   16274:	ldr	r3, [r7]
   16278:	ldr	r0, [r7, #4]
   1627c:	str	r0, [sp]
   16280:	b	16370 <dcngettext@plt+0x4ec4>
   16284:	movw	r1, #30838	; 0x7876
   16288:	mov	r0, #0
   1628c:	mov	r2, #5
   16290:	movt	r1, #1
   16294:	bl	11224 <dcgettext@plt>
   16298:	ldr	r3, [r7]
   1629c:	mov	r2, r0
   162a0:	ldmib	r7, {r0, r1}
   162a4:	stm	sp, {r0, r1}
   162a8:	b	16370 <dcngettext@plt+0x4ec4>
   162ac:	movw	r1, #30866	; 0x7892
   162b0:	mov	r0, #0
   162b4:	mov	r2, #5
   162b8:	movt	r1, #1
   162bc:	bl	11224 <dcgettext@plt>
   162c0:	ldr	r3, [r7]
   162c4:	mov	r2, r0
   162c8:	ldmib	r7, {r0, r1, r7}
   162cc:	stm	sp, {r0, r1, r7}
   162d0:	b	16370 <dcngettext@plt+0x4ec4>
   162d4:	movw	r1, #30898	; 0x78b2
   162d8:	mov	r0, #0
   162dc:	mov	r2, #5
   162e0:	movt	r1, #1
   162e4:	bl	11224 <dcgettext@plt>
   162e8:	ldr	r3, [r7]
   162ec:	mov	r2, r0
   162f0:	ldmib	r7, {r0, r1, r6, r7}
   162f4:	stm	sp, {r0, r1, r6, r7}
   162f8:	b	16370 <dcngettext@plt+0x4ec4>
   162fc:	movw	r1, #30934	; 0x78d6
   16300:	mov	r0, #0
   16304:	mov	r2, #5
   16308:	movt	r1, #1
   1630c:	bl	11224 <dcgettext@plt>
   16310:	ldr	r3, [r7]
   16314:	mov	r2, r0
   16318:	ldmib	r7, {r0, r1, r6}
   1631c:	ldr	r5, [r7, #16]
   16320:	ldr	r7, [r7, #20]
   16324:	stm	sp, {r0, r1, r6}
   16328:	str	r5, [sp, #12]
   1632c:	str	r7, [sp, #16]
   16330:	b	16370 <dcngettext@plt+0x4ec4>
   16334:	movw	r1, #30974	; 0x78fe
   16338:	mov	r0, #0
   1633c:	mov	r2, #5
   16340:	movt	r1, #1
   16344:	bl	11224 <dcgettext@plt>
   16348:	ldr	r3, [r7]
   1634c:	mov	r2, r0
   16350:	ldmib	r7, {r0, r1, r6}
   16354:	ldr	r5, [r7, #16]
   16358:	ldr	r4, [r7, #20]
   1635c:	ldr	r7, [r7, #24]
   16360:	stm	sp, {r0, r1, r6}
   16364:	str	r5, [sp, #12]
   16368:	str	r4, [sp, #16]
   1636c:	str	r7, [sp, #20]
   16370:	mov	r0, r8
   16374:	mov	r1, #1
   16378:	b	16424 <dcngettext@plt+0x4f78>
   1637c:	movw	r1, #31066	; 0x795a
   16380:	movt	r1, #1
   16384:	mov	r0, #0
   16388:	mov	r2, #5
   1638c:	bl	11224 <dcgettext@plt>
   16390:	mov	ip, r0
   16394:	ldr	r3, [r7]
   16398:	ldr	r0, [r7, #4]
   1639c:	ldr	r1, [r7, #8]
   163a0:	ldr	r6, [r7, #12]
   163a4:	ldr	r5, [r7, #16]
   163a8:	ldr	r4, [r7, #20]
   163ac:	ldr	r2, [r7, #24]
   163b0:	ldr	lr, [r7, #28]
   163b4:	ldr	r7, [r7, #32]
   163b8:	stm	sp, {r0, r1, r6}
   163bc:	str	r5, [sp, #12]
   163c0:	str	r4, [sp, #16]
   163c4:	str	r2, [sp, #20]
   163c8:	str	lr, [sp, #24]
   163cc:	str	r7, [sp, #28]
   163d0:	b	16418 <dcngettext@plt+0x4f6c>
   163d4:	movw	r1, #31018	; 0x792a
   163d8:	mov	r0, #0
   163dc:	mov	r2, #5
   163e0:	movt	r1, #1
   163e4:	bl	11224 <dcgettext@plt>
   163e8:	mov	ip, r0
   163ec:	ldr	r3, [r7]
   163f0:	ldmib	r7, {r0, r1, r6}
   163f4:	ldr	r5, [r7, #16]
   163f8:	ldr	r4, [r7, #20]
   163fc:	ldr	r2, [r7, #24]
   16400:	ldr	r7, [r7, #28]
   16404:	stm	sp, {r0, r1, r6}
   16408:	str	r5, [sp, #12]
   1640c:	str	r4, [sp, #16]
   16410:	str	r2, [sp, #20]
   16414:	str	r7, [sp, #24]
   16418:	mov	r0, r8
   1641c:	mov	r1, #1
   16420:	mov	r2, ip
   16424:	bl	113bc <__fprintf_chk@plt>
   16428:	sub	sp, fp, #24
   1642c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16430:	push	{r4, sl, fp, lr}
   16434:	add	fp, sp, #8
   16438:	sub	sp, sp, #8
   1643c:	ldr	ip, [fp, #8]
   16440:	mov	lr, #0
   16444:	ldr	r4, [ip, lr, lsl #2]
   16448:	add	lr, lr, #1
   1644c:	cmp	r4, #0
   16450:	bne	16444 <dcngettext@plt+0x4f98>
   16454:	sub	r4, lr, #1
   16458:	str	ip, [sp]
   1645c:	str	r4, [sp, #4]
   16460:	bl	160fc <dcngettext@plt+0x4c50>
   16464:	sub	sp, fp, #8
   16468:	pop	{r4, sl, fp, pc}
   1646c:	push	{fp, lr}
   16470:	mov	fp, sp
   16474:	sub	sp, sp, #48	; 0x30
   16478:	ldr	ip, [fp, #8]
   1647c:	ldr	lr, [ip]
   16480:	cmp	lr, #0
   16484:	str	lr, [sp, #8]
   16488:	beq	16524 <dcngettext@plt+0x5078>
   1648c:	ldr	lr, [ip, #4]
   16490:	cmp	lr, #0
   16494:	str	lr, [sp, #12]
   16498:	beq	1652c <dcngettext@plt+0x5080>
   1649c:	ldr	lr, [ip, #8]
   164a0:	cmp	lr, #0
   164a4:	str	lr, [sp, #16]
   164a8:	beq	16534 <dcngettext@plt+0x5088>
   164ac:	ldr	lr, [ip, #12]
   164b0:	cmp	lr, #0
   164b4:	str	lr, [sp, #20]
   164b8:	beq	1653c <dcngettext@plt+0x5090>
   164bc:	ldr	lr, [ip, #16]
   164c0:	cmp	lr, #0
   164c4:	str	lr, [sp, #24]
   164c8:	beq	16544 <dcngettext@plt+0x5098>
   164cc:	ldr	lr, [ip, #20]
   164d0:	cmp	lr, #0
   164d4:	str	lr, [sp, #28]
   164d8:	beq	1654c <dcngettext@plt+0x50a0>
   164dc:	ldr	lr, [ip, #24]
   164e0:	cmp	lr, #0
   164e4:	str	lr, [sp, #32]
   164e8:	beq	16554 <dcngettext@plt+0x50a8>
   164ec:	ldr	lr, [ip, #28]
   164f0:	cmp	lr, #0
   164f4:	str	lr, [sp, #36]	; 0x24
   164f8:	beq	1655c <dcngettext@plt+0x50b0>
   164fc:	ldr	lr, [ip, #32]
   16500:	cmp	lr, #0
   16504:	str	lr, [sp, #40]	; 0x28
   16508:	beq	16564 <dcngettext@plt+0x50b8>
   1650c:	ldr	lr, [ip, #36]	; 0x24
   16510:	mov	ip, #10
   16514:	cmp	lr, #0
   16518:	str	lr, [sp, #44]	; 0x2c
   1651c:	movweq	ip, #9
   16520:	b	16568 <dcngettext@plt+0x50bc>
   16524:	mov	ip, #0
   16528:	b	16568 <dcngettext@plt+0x50bc>
   1652c:	mov	ip, #1
   16530:	b	16568 <dcngettext@plt+0x50bc>
   16534:	mov	ip, #2
   16538:	b	16568 <dcngettext@plt+0x50bc>
   1653c:	mov	ip, #3
   16540:	b	16568 <dcngettext@plt+0x50bc>
   16544:	mov	ip, #4
   16548:	b	16568 <dcngettext@plt+0x50bc>
   1654c:	mov	ip, #5
   16550:	b	16568 <dcngettext@plt+0x50bc>
   16554:	mov	ip, #6
   16558:	b	16568 <dcngettext@plt+0x50bc>
   1655c:	mov	ip, #7
   16560:	b	16568 <dcngettext@plt+0x50bc>
   16564:	mov	ip, #8
   16568:	add	lr, sp, #8
   1656c:	str	ip, [sp, #4]
   16570:	str	lr, [sp]
   16574:	bl	160fc <dcngettext@plt+0x4c50>
   16578:	mov	sp, fp
   1657c:	pop	{fp, pc}
   16580:	push	{fp, lr}
   16584:	mov	fp, sp
   16588:	sub	sp, sp, #56	; 0x38
   1658c:	add	ip, fp, #8
   16590:	str	ip, [sp, #12]
   16594:	ldr	lr, [fp, #8]
   16598:	cmp	lr, #0
   1659c:	str	lr, [sp, #16]
   165a0:	beq	1663c <dcngettext@plt+0x5190>
   165a4:	ldr	lr, [ip, #4]
   165a8:	cmp	lr, #0
   165ac:	str	lr, [sp, #20]
   165b0:	beq	16644 <dcngettext@plt+0x5198>
   165b4:	ldr	lr, [ip, #8]
   165b8:	cmp	lr, #0
   165bc:	str	lr, [sp, #24]
   165c0:	beq	1664c <dcngettext@plt+0x51a0>
   165c4:	ldr	lr, [ip, #12]
   165c8:	cmp	lr, #0
   165cc:	str	lr, [sp, #28]
   165d0:	beq	16654 <dcngettext@plt+0x51a8>
   165d4:	ldr	lr, [ip, #16]
   165d8:	cmp	lr, #0
   165dc:	str	lr, [sp, #32]
   165e0:	beq	1665c <dcngettext@plt+0x51b0>
   165e4:	ldr	lr, [ip, #20]
   165e8:	cmp	lr, #0
   165ec:	str	lr, [sp, #36]	; 0x24
   165f0:	beq	16664 <dcngettext@plt+0x51b8>
   165f4:	ldr	lr, [ip, #24]
   165f8:	cmp	lr, #0
   165fc:	str	lr, [sp, #40]	; 0x28
   16600:	beq	1666c <dcngettext@plt+0x51c0>
   16604:	ldr	lr, [ip, #28]
   16608:	cmp	lr, #0
   1660c:	str	lr, [sp, #44]	; 0x2c
   16610:	beq	16674 <dcngettext@plt+0x51c8>
   16614:	ldr	lr, [ip, #32]
   16618:	cmp	lr, #0
   1661c:	str	lr, [sp, #48]	; 0x30
   16620:	beq	1667c <dcngettext@plt+0x51d0>
   16624:	ldr	lr, [ip, #36]	; 0x24
   16628:	mov	ip, #10
   1662c:	cmp	lr, #0
   16630:	str	lr, [sp, #52]	; 0x34
   16634:	movweq	ip, #9
   16638:	b	16680 <dcngettext@plt+0x51d4>
   1663c:	mov	ip, #0
   16640:	b	16680 <dcngettext@plt+0x51d4>
   16644:	mov	ip, #1
   16648:	b	16680 <dcngettext@plt+0x51d4>
   1664c:	mov	ip, #2
   16650:	b	16680 <dcngettext@plt+0x51d4>
   16654:	mov	ip, #3
   16658:	b	16680 <dcngettext@plt+0x51d4>
   1665c:	mov	ip, #4
   16660:	b	16680 <dcngettext@plt+0x51d4>
   16664:	mov	ip, #5
   16668:	b	16680 <dcngettext@plt+0x51d4>
   1666c:	mov	ip, #6
   16670:	b	16680 <dcngettext@plt+0x51d4>
   16674:	mov	ip, #7
   16678:	b	16680 <dcngettext@plt+0x51d4>
   1667c:	mov	ip, #8
   16680:	add	lr, sp, #16
   16684:	str	ip, [sp, #4]
   16688:	str	lr, [sp]
   1668c:	bl	160fc <dcngettext@plt+0x4c50>
   16690:	mov	sp, fp
   16694:	pop	{fp, pc}
   16698:	push	{fp, lr}
   1669c:	mov	fp, sp
   166a0:	movw	r0, #33156	; 0x8184
   166a4:	movt	r0, #2
   166a8:	ldr	r1, [r0]
   166ac:	movw	r0, #29391	; 0x72cf
   166b0:	movt	r0, #1
   166b4:	bl	11194 <fputs_unlocked@plt>
   166b8:	movw	r1, #31178	; 0x79ca
   166bc:	mov	r0, #0
   166c0:	mov	r2, #5
   166c4:	movt	r1, #1
   166c8:	bl	11224 <dcgettext@plt>
   166cc:	movw	r2, #31198	; 0x79de
   166d0:	mov	r1, r0
   166d4:	mov	r0, #1
   166d8:	movt	r2, #1
   166dc:	bl	113a4 <__printf_chk@plt>
   166e0:	movw	r1, #31220	; 0x79f4
   166e4:	mov	r0, #0
   166e8:	mov	r2, #5
   166ec:	movt	r1, #1
   166f0:	bl	11224 <dcgettext@plt>
   166f4:	movw	r2, #29544	; 0x7368
   166f8:	movw	r3, #29738	; 0x742a
   166fc:	mov	r1, r0
   16700:	mov	r0, #1
   16704:	movt	r2, #1
   16708:	movt	r3, #1
   1670c:	bl	113a4 <__printf_chk@plt>
   16710:	movw	r1, #31240	; 0x7a08
   16714:	mov	r0, #0
   16718:	mov	r2, #5
   1671c:	movt	r1, #1
   16720:	bl	11224 <dcgettext@plt>
   16724:	movw	r2, #31279	; 0x7a2f
   16728:	mov	r1, r0
   1672c:	mov	r0, #1
   16730:	movt	r2, #1
   16734:	pop	{fp, lr}
   16738:	b	113a4 <__printf_chk@plt>
   1673c:	push	{r4, r5, r6, sl, fp, lr}
   16740:	add	fp, sp, #16
   16744:	mov	r4, r2
   16748:	mov	r5, r1
   1674c:	mov	r6, r0
   16750:	bl	16f74 <dcngettext@plt+0x5ac8>
   16754:	cmp	r0, #0
   16758:	popne	{r4, r5, r6, sl, fp, pc}
   1675c:	cmp	r6, #0
   16760:	beq	16774 <dcngettext@plt+0x52c8>
   16764:	cmp	r5, #0
   16768:	cmpne	r4, #0
   1676c:	bne	16774 <dcngettext@plt+0x52c8>
   16770:	pop	{r4, r5, r6, sl, fp, pc}
   16774:	bl	16d14 <dcngettext@plt+0x5868>
   16778:	push	{r4, r5, r6, sl, fp, lr}
   1677c:	add	fp, sp, #16
   16780:	mov	r4, r2
   16784:	mov	r5, r1
   16788:	mov	r6, r0
   1678c:	bl	16f74 <dcngettext@plt+0x5ac8>
   16790:	cmp	r0, #0
   16794:	popne	{r4, r5, r6, sl, fp, pc}
   16798:	cmp	r6, #0
   1679c:	beq	167b0 <dcngettext@plt+0x5304>
   167a0:	cmp	r5, #0
   167a4:	cmpne	r4, #0
   167a8:	bne	167b0 <dcngettext@plt+0x5304>
   167ac:	pop	{r4, r5, r6, sl, fp, pc}
   167b0:	bl	16d14 <dcngettext@plt+0x5868>
   167b4:	push	{fp, lr}
   167b8:	mov	fp, sp
   167bc:	bl	16dac <dcngettext@plt+0x5900>
   167c0:	cmp	r0, #0
   167c4:	popne	{fp, pc}
   167c8:	bl	16d14 <dcngettext@plt+0x5868>
   167cc:	push	{fp, lr}
   167d0:	mov	fp, sp
   167d4:	bl	16dac <dcngettext@plt+0x5900>
   167d8:	cmp	r0, #0
   167dc:	popne	{fp, pc}
   167e0:	bl	16d14 <dcngettext@plt+0x5868>
   167e4:	push	{fp, lr}
   167e8:	mov	fp, sp
   167ec:	bl	16dac <dcngettext@plt+0x5900>
   167f0:	cmp	r0, #0
   167f4:	popne	{fp, pc}
   167f8:	bl	16d14 <dcngettext@plt+0x5868>
   167fc:	push	{r4, r5, fp, lr}
   16800:	add	fp, sp, #8
   16804:	mov	r4, r1
   16808:	mov	r5, r0
   1680c:	bl	16ddc <dcngettext@plt+0x5930>
   16810:	cmp	r0, #0
   16814:	popne	{r4, r5, fp, pc}
   16818:	cmp	r5, #0
   1681c:	beq	1682c <dcngettext@plt+0x5380>
   16820:	cmp	r4, #0
   16824:	bne	1682c <dcngettext@plt+0x5380>
   16828:	pop	{r4, r5, fp, pc}
   1682c:	bl	16d14 <dcngettext@plt+0x5868>
   16830:	push	{fp, lr}
   16834:	mov	fp, sp
   16838:	cmp	r1, #0
   1683c:	orreq	r1, r1, #1
   16840:	bl	16ddc <dcngettext@plt+0x5930>
   16844:	cmp	r0, #0
   16848:	popne	{fp, pc}
   1684c:	bl	16d14 <dcngettext@plt+0x5868>
   16850:	push	{fp, lr}
   16854:	mov	fp, sp
   16858:	clz	r3, r2
   1685c:	lsr	ip, r3, #5
   16860:	clz	r3, r1
   16864:	lsr	r3, r3, #5
   16868:	orrs	r3, r3, ip
   1686c:	movwne	r1, #1
   16870:	movwne	r2, #1
   16874:	bl	16f74 <dcngettext@plt+0x5ac8>
   16878:	cmp	r0, #0
   1687c:	popne	{fp, pc}
   16880:	bl	16d14 <dcngettext@plt+0x5868>
   16884:	push	{fp, lr}
   16888:	mov	fp, sp
   1688c:	mov	r2, r1
   16890:	mov	r1, r0
   16894:	mov	r0, #0
   16898:	bl	16f74 <dcngettext@plt+0x5ac8>
   1689c:	cmp	r0, #0
   168a0:	popne	{fp, pc}
   168a4:	bl	16d14 <dcngettext@plt+0x5868>
   168a8:	push	{fp, lr}
   168ac:	mov	fp, sp
   168b0:	mov	r2, r1
   168b4:	mov	r1, r0
   168b8:	clz	r0, r2
   168bc:	clz	r3, r1
   168c0:	lsr	r0, r0, #5
   168c4:	lsr	r3, r3, #5
   168c8:	orrs	r0, r3, r0
   168cc:	movwne	r1, #1
   168d0:	movwne	r2, #1
   168d4:	mov	r0, #0
   168d8:	bl	16f74 <dcngettext@plt+0x5ac8>
   168dc:	cmp	r0, #0
   168e0:	popne	{fp, pc}
   168e4:	bl	16d14 <dcngettext@plt+0x5868>
   168e8:	push	{r4, r5, r6, sl, fp, lr}
   168ec:	add	fp, sp, #16
   168f0:	ldr	r5, [r1]
   168f4:	mov	r4, r1
   168f8:	mov	r6, r0
   168fc:	cmp	r0, #0
   16900:	beq	16918 <dcngettext@plt+0x546c>
   16904:	mov	r0, #1
   16908:	add	r0, r0, r5, lsr #1
   1690c:	adds	r5, r5, r0
   16910:	bcc	16920 <dcngettext@plt+0x5474>
   16914:	b	1695c <dcngettext@plt+0x54b0>
   16918:	cmp	r5, #0
   1691c:	movweq	r5, #64	; 0x40
   16920:	mov	r0, r6
   16924:	mov	r1, r5
   16928:	mov	r2, #1
   1692c:	bl	16f74 <dcngettext@plt+0x5ac8>
   16930:	cmp	r5, #0
   16934:	mov	r1, r5
   16938:	movwne	r1, #1
   1693c:	cmp	r0, #0
   16940:	bne	16954 <dcngettext@plt+0x54a8>
   16944:	clz	r2, r6
   16948:	lsr	r2, r2, #5
   1694c:	orrs	r1, r2, r1
   16950:	bne	1695c <dcngettext@plt+0x54b0>
   16954:	str	r5, [r4]
   16958:	pop	{r4, r5, r6, sl, fp, pc}
   1695c:	bl	16d14 <dcngettext@plt+0x5868>
   16960:	push	{r4, r5, r6, r7, fp, lr}
   16964:	add	fp, sp, #16
   16968:	ldr	r5, [r1]
   1696c:	mov	r6, r2
   16970:	mov	r4, r1
   16974:	mov	r7, r0
   16978:	cmp	r0, #0
   1697c:	beq	16994 <dcngettext@plt+0x54e8>
   16980:	mov	r0, #1
   16984:	add	r0, r0, r5, lsr #1
   16988:	adds	r5, r5, r0
   1698c:	bcc	169ac <dcngettext@plt+0x5500>
   16990:	b	169e0 <dcngettext@plt+0x5534>
   16994:	cmp	r5, #0
   16998:	bne	169ac <dcngettext@plt+0x5500>
   1699c:	mov	r0, #64	; 0x40
   169a0:	cmp	r6, #64	; 0x40
   169a4:	udiv	r5, r0, r6
   169a8:	addhi	r5, r5, #1
   169ac:	mov	r0, r7
   169b0:	mov	r1, r5
   169b4:	mov	r2, r6
   169b8:	bl	16f74 <dcngettext@plt+0x5ac8>
   169bc:	cmp	r0, #0
   169c0:	bne	169d8 <dcngettext@plt+0x552c>
   169c4:	cmp	r7, #0
   169c8:	beq	169e0 <dcngettext@plt+0x5534>
   169cc:	cmp	r6, #0
   169d0:	cmpne	r5, #0
   169d4:	bne	169e0 <dcngettext@plt+0x5534>
   169d8:	str	r5, [r4]
   169dc:	pop	{r4, r5, r6, r7, fp, pc}
   169e0:	bl	16d14 <dcngettext@plt+0x5868>
   169e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   169e8:	add	fp, sp, #24
   169ec:	mov	r8, r1
   169f0:	ldr	r1, [r1]
   169f4:	mov	r5, r0
   169f8:	add	r0, r1, r1, asr #1
   169fc:	cmp	r0, r1
   16a00:	mvnvs	r0, #-2147483648	; 0x80000000
   16a04:	cmp	r0, r3
   16a08:	mov	r7, r0
   16a0c:	movgt	r7, r3
   16a10:	cmn	r3, #1
   16a14:	movle	r7, r0
   16a18:	ldr	r0, [fp, #8]
   16a1c:	cmn	r0, #1
   16a20:	ble	16a48 <dcngettext@plt+0x559c>
   16a24:	cmp	r0, #0
   16a28:	beq	16a9c <dcngettext@plt+0x55f0>
   16a2c:	cmn	r7, #1
   16a30:	ble	16a70 <dcngettext@plt+0x55c4>
   16a34:	mvn	r4, #-2147483648	; 0x80000000
   16a38:	udiv	r6, r4, r0
   16a3c:	cmp	r6, r7
   16a40:	bge	16a9c <dcngettext@plt+0x55f0>
   16a44:	b	16aac <dcngettext@plt+0x5600>
   16a48:	cmn	r7, #1
   16a4c:	ble	16a8c <dcngettext@plt+0x55e0>
   16a50:	cmn	r0, #1
   16a54:	beq	16a9c <dcngettext@plt+0x55f0>
   16a58:	mov	r6, #-2147483648	; 0x80000000
   16a5c:	mvn	r4, #-2147483648	; 0x80000000
   16a60:	sdiv	r6, r6, r0
   16a64:	cmp	r6, r7
   16a68:	bge	16a9c <dcngettext@plt+0x55f0>
   16a6c:	b	16aac <dcngettext@plt+0x5600>
   16a70:	beq	16a9c <dcngettext@plt+0x55f0>
   16a74:	mov	r6, #-2147483648	; 0x80000000
   16a78:	mvn	r4, #-2147483648	; 0x80000000
   16a7c:	sdiv	r6, r6, r7
   16a80:	cmp	r6, r0
   16a84:	bge	16a9c <dcngettext@plt+0x55f0>
   16a88:	b	16aac <dcngettext@plt+0x5600>
   16a8c:	mvn	r4, #-2147483648	; 0x80000000
   16a90:	sdiv	r6, r4, r0
   16a94:	cmp	r7, r6
   16a98:	blt	16aac <dcngettext@plt+0x5600>
   16a9c:	mul	r6, r7, r0
   16aa0:	mov	r4, #64	; 0x40
   16aa4:	cmp	r6, #63	; 0x3f
   16aa8:	bgt	16ab4 <dcngettext@plt+0x5608>
   16aac:	sdiv	r7, r4, r0
   16ab0:	mul	r6, r7, r0
   16ab4:	cmp	r5, #0
   16ab8:	moveq	r4, #0
   16abc:	streq	r4, [r8]
   16ac0:	sub	r4, r7, r1
   16ac4:	cmp	r4, r2
   16ac8:	bge	16b74 <dcngettext@plt+0x56c8>
   16acc:	add	r7, r1, r2
   16ad0:	mov	r6, #0
   16ad4:	mov	r2, #0
   16ad8:	cmp	r7, r3
   16adc:	movwgt	r6, #1
   16ae0:	cmn	r3, #1
   16ae4:	movwgt	r2, #1
   16ae8:	cmp	r7, r1
   16aec:	bvs	16ba8 <dcngettext@plt+0x56fc>
   16af0:	ands	r1, r2, r6
   16af4:	bne	16ba8 <dcngettext@plt+0x56fc>
   16af8:	cmn	r0, #1
   16afc:	ble	16b24 <dcngettext@plt+0x5678>
   16b00:	cmp	r0, #0
   16b04:	beq	16b70 <dcngettext@plt+0x56c4>
   16b08:	cmn	r7, #1
   16b0c:	ble	16b48 <dcngettext@plt+0x569c>
   16b10:	mvn	r1, #-2147483648	; 0x80000000
   16b14:	udiv	r1, r1, r0
   16b18:	cmp	r1, r7
   16b1c:	bge	16b70 <dcngettext@plt+0x56c4>
   16b20:	b	16ba8 <dcngettext@plt+0x56fc>
   16b24:	cmn	r7, #1
   16b28:	ble	16b60 <dcngettext@plt+0x56b4>
   16b2c:	cmn	r0, #1
   16b30:	beq	16b70 <dcngettext@plt+0x56c4>
   16b34:	mov	r1, #-2147483648	; 0x80000000
   16b38:	sdiv	r1, r1, r0
   16b3c:	cmp	r1, r7
   16b40:	bge	16b70 <dcngettext@plt+0x56c4>
   16b44:	b	16ba8 <dcngettext@plt+0x56fc>
   16b48:	beq	16b70 <dcngettext@plt+0x56c4>
   16b4c:	mov	r1, #-2147483648	; 0x80000000
   16b50:	sdiv	r1, r1, r7
   16b54:	cmp	r1, r0
   16b58:	bge	16b70 <dcngettext@plt+0x56c4>
   16b5c:	b	16ba8 <dcngettext@plt+0x56fc>
   16b60:	mvn	r1, #-2147483648	; 0x80000000
   16b64:	sdiv	r1, r1, r0
   16b68:	cmp	r7, r1
   16b6c:	blt	16ba8 <dcngettext@plt+0x56fc>
   16b70:	mul	r6, r7, r0
   16b74:	mov	r0, r5
   16b78:	mov	r1, r6
   16b7c:	bl	16ddc <dcngettext@plt+0x5930>
   16b80:	cmp	r6, #0
   16b84:	movwne	r6, #1
   16b88:	cmp	r0, #0
   16b8c:	bne	16ba0 <dcngettext@plt+0x56f4>
   16b90:	clz	r1, r5
   16b94:	lsr	r1, r1, #5
   16b98:	orrs	r1, r1, r6
   16b9c:	bne	16ba8 <dcngettext@plt+0x56fc>
   16ba0:	str	r7, [r8]
   16ba4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ba8:	bl	16d14 <dcngettext@plt+0x5868>
   16bac:	push	{fp, lr}
   16bb0:	mov	fp, sp
   16bb4:	mov	r1, #1
   16bb8:	bl	16d58 <dcngettext@plt+0x58ac>
   16bbc:	cmp	r0, #0
   16bc0:	popne	{fp, pc}
   16bc4:	bl	16d14 <dcngettext@plt+0x5868>
   16bc8:	push	{fp, lr}
   16bcc:	mov	fp, sp
   16bd0:	bl	16d58 <dcngettext@plt+0x58ac>
   16bd4:	cmp	r0, #0
   16bd8:	popne	{fp, pc}
   16bdc:	bl	16d14 <dcngettext@plt+0x5868>
   16be0:	push	{fp, lr}
   16be4:	mov	fp, sp
   16be8:	mov	r1, #1
   16bec:	bl	16d58 <dcngettext@plt+0x58ac>
   16bf0:	cmp	r0, #0
   16bf4:	popne	{fp, pc}
   16bf8:	bl	16d14 <dcngettext@plt+0x5868>
   16bfc:	push	{fp, lr}
   16c00:	mov	fp, sp
   16c04:	bl	16d58 <dcngettext@plt+0x58ac>
   16c08:	cmp	r0, #0
   16c0c:	popne	{fp, pc}
   16c10:	bl	16d14 <dcngettext@plt+0x5868>
   16c14:	push	{r4, r5, r6, sl, fp, lr}
   16c18:	add	fp, sp, #16
   16c1c:	mov	r5, r0
   16c20:	mov	r0, r1
   16c24:	mov	r4, r1
   16c28:	bl	16dac <dcngettext@plt+0x5900>
   16c2c:	cmp	r0, #0
   16c30:	beq	16c4c <dcngettext@plt+0x57a0>
   16c34:	mov	r1, r5
   16c38:	mov	r2, r4
   16c3c:	mov	r6, r0
   16c40:	bl	111f4 <memcpy@plt>
   16c44:	mov	r0, r6
   16c48:	pop	{r4, r5, r6, sl, fp, pc}
   16c4c:	bl	16d14 <dcngettext@plt+0x5868>
   16c50:	push	{r4, r5, r6, sl, fp, lr}
   16c54:	add	fp, sp, #16
   16c58:	mov	r5, r0
   16c5c:	mov	r0, r1
   16c60:	mov	r4, r1
   16c64:	bl	16dac <dcngettext@plt+0x5900>
   16c68:	cmp	r0, #0
   16c6c:	beq	16c88 <dcngettext@plt+0x57dc>
   16c70:	mov	r1, r5
   16c74:	mov	r2, r4
   16c78:	mov	r6, r0
   16c7c:	bl	111f4 <memcpy@plt>
   16c80:	mov	r0, r6
   16c84:	pop	{r4, r5, r6, sl, fp, pc}
   16c88:	bl	16d14 <dcngettext@plt+0x5868>
   16c8c:	push	{r4, r5, r6, sl, fp, lr}
   16c90:	add	fp, sp, #16
   16c94:	mov	r5, r0
   16c98:	add	r0, r1, #1
   16c9c:	mov	r4, r1
   16ca0:	bl	16dac <dcngettext@plt+0x5900>
   16ca4:	cmp	r0, #0
   16ca8:	beq	16cd0 <dcngettext@plt+0x5824>
   16cac:	mov	r6, r0
   16cb0:	mov	r0, #0
   16cb4:	mov	r1, r5
   16cb8:	mov	r2, r4
   16cbc:	strb	r0, [r6, r4]
   16cc0:	mov	r0, r6
   16cc4:	bl	111f4 <memcpy@plt>
   16cc8:	mov	r0, r6
   16ccc:	pop	{r4, r5, r6, sl, fp, pc}
   16cd0:	bl	16d14 <dcngettext@plt+0x5868>
   16cd4:	push	{r4, r5, r6, sl, fp, lr}
   16cd8:	add	fp, sp, #16
   16cdc:	mov	r4, r0
   16ce0:	bl	1135c <strlen@plt>
   16ce4:	add	r5, r0, #1
   16ce8:	mov	r0, r5
   16cec:	bl	16dac <dcngettext@plt+0x5900>
   16cf0:	cmp	r0, #0
   16cf4:	beq	16d10 <dcngettext@plt+0x5864>
   16cf8:	mov	r1, r4
   16cfc:	mov	r2, r5
   16d00:	mov	r6, r0
   16d04:	bl	111f4 <memcpy@plt>
   16d08:	mov	r0, r6
   16d0c:	pop	{r4, r5, r6, sl, fp, pc}
   16d10:	bl	16d14 <dcngettext@plt+0x5868>
   16d14:	push	{fp, lr}
   16d18:	mov	fp, sp
   16d1c:	movw	r0, #33068	; 0x812c
   16d20:	movw	r1, #31355	; 0x7a7b
   16d24:	mov	r2, #5
   16d28:	movt	r0, #2
   16d2c:	movt	r1, #1
   16d30:	ldr	r4, [r0]
   16d34:	mov	r0, #0
   16d38:	bl	11224 <dcgettext@plt>
   16d3c:	movw	r2, #30217	; 0x7609
   16d40:	mov	r3, r0
   16d44:	mov	r0, r4
   16d48:	mov	r1, #0
   16d4c:	movt	r2, #1
   16d50:	bl	112b4 <error@plt>
   16d54:	bl	11494 <abort@plt>
   16d58:	clz	r2, r1
   16d5c:	clz	r3, r0
   16d60:	lsr	r2, r2, #5
   16d64:	lsr	r3, r3, #5
   16d68:	orrs	r2, r3, r2
   16d6c:	movwne	r1, #1
   16d70:	movwne	r0, #1
   16d74:	cmp	r1, #0
   16d78:	beq	16da8 <dcngettext@plt+0x58fc>
   16d7c:	mvn	r2, #-2147483648	; 0x80000000
   16d80:	udiv	r2, r2, r1
   16d84:	cmp	r2, r0
   16d88:	bcs	16da8 <dcngettext@plt+0x58fc>
   16d8c:	push	{fp, lr}
   16d90:	mov	fp, sp
   16d94:	bl	11374 <__errno_location@plt>
   16d98:	mov	r1, #12
   16d9c:	str	r1, [r0]
   16da0:	mov	r0, #0
   16da4:	pop	{fp, pc}
   16da8:	b	11188 <calloc@plt>
   16dac:	cmp	r0, #0
   16db0:	movweq	r0, #1
   16db4:	cmn	r0, #1
   16db8:	ble	16dc0 <dcngettext@plt+0x5914>
   16dbc:	b	112cc <malloc@plt>
   16dc0:	push	{fp, lr}
   16dc4:	mov	fp, sp
   16dc8:	bl	11374 <__errno_location@plt>
   16dcc:	mov	r1, #12
   16dd0:	str	r1, [r0]
   16dd4:	mov	r0, #0
   16dd8:	pop	{fp, pc}
   16ddc:	push	{fp, lr}
   16de0:	mov	fp, sp
   16de4:	cmp	r0, #0
   16de8:	beq	16e04 <dcngettext@plt+0x5958>
   16dec:	cmp	r1, #0
   16df0:	beq	16e10 <dcngettext@plt+0x5964>
   16df4:	cmn	r1, #1
   16df8:	ble	16e1c <dcngettext@plt+0x5970>
   16dfc:	pop	{fp, lr}
   16e00:	b	1123c <realloc@plt>
   16e04:	mov	r0, r1
   16e08:	pop	{fp, lr}
   16e0c:	b	16dac <dcngettext@plt+0x5900>
   16e10:	bl	16eb4 <dcngettext@plt+0x5a08>
   16e14:	mov	r0, #0
   16e18:	pop	{fp, pc}
   16e1c:	bl	11374 <__errno_location@plt>
   16e20:	mov	r1, #12
   16e24:	str	r1, [r0]
   16e28:	mov	r0, #0
   16e2c:	pop	{fp, pc}
   16e30:	push	{r4, r5, r6, sl, fp, lr}
   16e34:	add	fp, sp, #16
   16e38:	mov	r4, r0
   16e3c:	bl	1129c <__fpending@plt>
   16e40:	ldr	r6, [r4]
   16e44:	mov	r5, r0
   16e48:	mov	r0, r4
   16e4c:	bl	11f28 <dcngettext@plt+0xa7c>
   16e50:	tst	r6, #32
   16e54:	bne	16e8c <dcngettext@plt+0x59e0>
   16e58:	cmp	r0, #0
   16e5c:	mov	r4, r0
   16e60:	mvnne	r4, #0
   16e64:	cmp	r5, #0
   16e68:	bne	16e98 <dcngettext@plt+0x59ec>
   16e6c:	cmp	r0, #0
   16e70:	beq	16e98 <dcngettext@plt+0x59ec>
   16e74:	bl	11374 <__errno_location@plt>
   16e78:	ldr	r0, [r0]
   16e7c:	subs	r4, r0, #9
   16e80:	mvnne	r4, #0
   16e84:	mov	r0, r4
   16e88:	pop	{r4, r5, r6, sl, fp, pc}
   16e8c:	mvn	r4, #0
   16e90:	cmp	r0, #0
   16e94:	beq	16ea0 <dcngettext@plt+0x59f4>
   16e98:	mov	r0, r4
   16e9c:	pop	{r4, r5, r6, sl, fp, pc}
   16ea0:	bl	11374 <__errno_location@plt>
   16ea4:	mov	r1, #0
   16ea8:	str	r1, [r0]
   16eac:	mov	r0, r4
   16eb0:	pop	{r4, r5, r6, sl, fp, pc}
   16eb4:	push	{r4, r5, r6, sl, fp, lr}
   16eb8:	add	fp, sp, #16
   16ebc:	mov	r4, r0
   16ec0:	bl	11374 <__errno_location@plt>
   16ec4:	ldr	r6, [r0]
   16ec8:	mov	r5, r0
   16ecc:	mov	r0, r4
   16ed0:	bl	111dc <free@plt>
   16ed4:	str	r6, [r5]
   16ed8:	pop	{r4, r5, r6, sl, fp, pc}
   16edc:	push	{fp, lr}
   16ee0:	mov	fp, sp
   16ee4:	mov	r0, #14
   16ee8:	bl	11428 <nl_langinfo@plt>
   16eec:	movw	r1, #29392	; 0x72d0
   16ef0:	cmp	r0, #0
   16ef4:	movt	r1, #1
   16ef8:	movne	r1, r0
   16efc:	movw	r0, #31372	; 0x7a8c
   16f00:	ldrb	r2, [r1]
   16f04:	movt	r0, #1
   16f08:	cmp	r2, #0
   16f0c:	movne	r0, r1
   16f10:	pop	{fp, pc}
   16f14:	push	{r4, r5, r6, r7, fp, lr}
   16f18:	add	fp, sp, #16
   16f1c:	sub	sp, sp, #8
   16f20:	add	r5, sp, #4
   16f24:	cmp	r0, #0
   16f28:	mov	r7, r2
   16f2c:	mov	r4, r1
   16f30:	movne	r5, r0
   16f34:	mov	r0, r5
   16f38:	bl	112a8 <mbrtowc@plt>
   16f3c:	mov	r6, r0
   16f40:	cmp	r7, #0
   16f44:	beq	16f68 <dcngettext@plt+0x5abc>
   16f48:	cmn	r6, #2
   16f4c:	bcc	16f68 <dcngettext@plt+0x5abc>
   16f50:	mov	r0, #0
   16f54:	bl	16fb0 <dcngettext@plt+0x5b04>
   16f58:	cmp	r0, #0
   16f5c:	ldrbeq	r0, [r4]
   16f60:	moveq	r6, #1
   16f64:	streq	r0, [r5]
   16f68:	mov	r0, r6
   16f6c:	sub	sp, fp, #16
   16f70:	pop	{r4, r5, r6, r7, fp, pc}
   16f74:	cmp	r2, #0
   16f78:	beq	16fa8 <dcngettext@plt+0x5afc>
   16f7c:	mvn	r3, #0
   16f80:	udiv	r3, r3, r2
   16f84:	cmp	r3, r1
   16f88:	bcs	16fa8 <dcngettext@plt+0x5afc>
   16f8c:	push	{fp, lr}
   16f90:	mov	fp, sp
   16f94:	bl	11374 <__errno_location@plt>
   16f98:	mov	r1, #12
   16f9c:	str	r1, [r0]
   16fa0:	mov	r0, #0
   16fa4:	pop	{fp, pc}
   16fa8:	mul	r1, r2, r1
   16fac:	b	16ddc <dcngettext@plt+0x5930>
   16fb0:	push	{r4, sl, fp, lr}
   16fb4:	add	fp, sp, #8
   16fb8:	sub	sp, sp, #264	; 0x108
   16fbc:	add	r1, sp, #7
   16fc0:	movw	r2, #257	; 0x101
   16fc4:	bl	17014 <dcngettext@plt+0x5b68>
   16fc8:	mov	r4, #0
   16fcc:	cmp	r0, #0
   16fd0:	bne	17008 <dcngettext@plt+0x5b5c>
   16fd4:	movw	r1, #30199	; 0x75f7
   16fd8:	add	r0, sp, #7
   16fdc:	movt	r1, #1
   16fe0:	bl	111ac <strcmp@plt>
   16fe4:	cmp	r0, #0
   16fe8:	beq	17008 <dcngettext@plt+0x5b5c>
   16fec:	movw	r1, #31378	; 0x7a92
   16ff0:	add	r0, sp, #7
   16ff4:	movt	r1, #1
   16ff8:	bl	111ac <strcmp@plt>
   16ffc:	mov	r4, r0
   17000:	cmp	r0, #0
   17004:	movwne	r4, #1
   17008:	mov	r0, r4
   1700c:	sub	sp, fp, #8
   17010:	pop	{r4, sl, fp, pc}
   17014:	push	{r4, r5, r6, r7, fp, lr}
   17018:	add	fp, sp, #16
   1701c:	mov	r4, r1
   17020:	mov	r1, #0
   17024:	mov	r6, r2
   17028:	bl	11410 <setlocale@plt>
   1702c:	cmp	r0, #0
   17030:	beq	17060 <dcngettext@plt+0x5bb4>
   17034:	mov	r7, r0
   17038:	bl	1135c <strlen@plt>
   1703c:	cmp	r0, r6
   17040:	bcs	17080 <dcngettext@plt+0x5bd4>
   17044:	add	r2, r0, #1
   17048:	mov	r0, r4
   1704c:	mov	r1, r7
   17050:	bl	111f4 <memcpy@plt>
   17054:	mov	r5, #0
   17058:	mov	r0, r5
   1705c:	pop	{r4, r5, r6, r7, fp, pc}
   17060:	cmp	r6, #0
   17064:	mov	r5, #22
   17068:	movne	r0, #0
   1706c:	strbne	r0, [r4]
   17070:	movne	r0, r5
   17074:	popne	{r4, r5, r6, r7, fp, pc}
   17078:	mov	r0, r5
   1707c:	pop	{r4, r5, r6, r7, fp, pc}
   17080:	mov	r5, #34	; 0x22
   17084:	cmp	r6, #0
   17088:	beq	170a8 <dcngettext@plt+0x5bfc>
   1708c:	sub	r6, r6, #1
   17090:	mov	r0, r4
   17094:	mov	r1, r7
   17098:	mov	r2, r6
   1709c:	bl	111f4 <memcpy@plt>
   170a0:	mov	r0, #0
   170a4:	strb	r0, [r4, r6]
   170a8:	mov	r0, r5
   170ac:	pop	{r4, r5, r6, r7, fp, pc}
   170b0:	mov	r1, #0
   170b4:	b	11410 <setlocale@plt>
   170b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   170bc:	mov	r7, r0
   170c0:	ldr	r6, [pc, #72]	; 17110 <dcngettext@plt+0x5c64>
   170c4:	ldr	r5, [pc, #72]	; 17114 <dcngettext@plt+0x5c68>
   170c8:	add	r6, pc, r6
   170cc:	add	r5, pc, r5
   170d0:	sub	r6, r6, r5
   170d4:	mov	r8, r1
   170d8:	mov	r9, r2
   170dc:	bl	11168 <calloc@plt-0x20>
   170e0:	asrs	r6, r6, #2
   170e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   170e8:	mov	r4, #0
   170ec:	add	r4, r4, #1
   170f0:	ldr	r3, [r5], #4
   170f4:	mov	r2, r9
   170f8:	mov	r1, r8
   170fc:	mov	r0, r7
   17100:	blx	r3
   17104:	cmp	r6, r4
   17108:	bne	170ec <dcngettext@plt+0x5c40>
   1710c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17110:	andeq	r0, r1, ip, lsr lr
   17114:	andeq	r0, r1, r4, lsr lr
   17118:	bx	lr
   1711c:	ldr	r3, [pc, #12]	; 17130 <dcngettext@plt+0x5c84>
   17120:	mov	r1, #0
   17124:	add	r3, pc, r3
   17128:	ldr	r2, [r3]
   1712c:	b	11380 <__cxa_atexit@plt>
   17130:	strdeq	r0, [r1], -r8

Disassembly of section .fini:

00017134 <.fini>:
   17134:	push	{r3, lr}
   17138:	pop	{r3, pc}
