
../repos/coreutils/src/mktemp:     file format elf32-littlearm


Disassembly of section .init:

00010e14 <.init>:
   10e14:	push	{r3, lr}
   10e18:	bl	110ec <__mempcpy_chk@plt+0x48>
   10e1c:	pop	{r3, pc}

Disassembly of section .plt:

00010e20 <calloc@plt-0x14>:
   10e20:	push	{lr}		; (str lr, [sp, #-4]!)
   10e24:	ldr	lr, [pc, #4]	; 10e30 <calloc@plt-0x4>
   10e28:	add	lr, pc, lr
   10e2c:	ldr	pc, [lr, #8]!
   10e30:	ldrdeq	r6, [r1], -r0

00010e34 <calloc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e40 <fputs_unlocked@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #456]!	; 0x1c8

00010e4c <raise@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #448]!	; 0x1c0

00010e58 <strcmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #440]!	; 0x1b8

00010e64 <fflush@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #432]!	; 0x1b0

00010e70 <free@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #424]!	; 0x1a8

00010e7c <clock_gettime@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #416]!	; 0x1a0

00010e88 <_exit@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #408]!	; 0x198

00010e94 <memcpy@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #400]!	; 0x190

00010ea0 <mbsinit@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #392]!	; 0x188

00010eac <dcgettext@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #384]!	; 0x180

00010eb8 <realloc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #376]!	; 0x178

00010ec4 <textdomain@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #368]!	; 0x170

00010ed0 <iswprint@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #360]!	; 0x168

00010edc <fwrite@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #352]!	; 0x160

00010ee8 <lseek64@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #344]!	; 0x158

00010ef4 <__ctype_get_mb_cur_max@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #336]!	; 0x150

00010f00 <__fpending@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #328]!	; 0x148

00010f0c <mbrtowc@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #320]!	; 0x140

00010f18 <error@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #312]!	; 0x138

00010f24 <open64@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #304]!	; 0x130

00010f30 <getenv@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #296]!	; 0x128

00010f3c <puts@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #288]!	; 0x120

00010f48 <malloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #280]!	; 0x118

00010f54 <__libc_start_main@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #272]!	; 0x110

00010f60 <__freading@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #264]!	; 0x108

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #256]!	; 0x100

00010f78 <getopt_long@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #248]!	; 0xf8

00010f84 <__ctype_b_loc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #240]!	; 0xf0

00010f90 <exit@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #232]!	; 0xe8

00010f9c <bcmp@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #224]!	; 0xe0

00010fa8 <strlen@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #216]!	; 0xd8

00010fb4 <__errno_location@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #208]!	; 0xd0

00010fc0 <__cxa_atexit@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #200]!	; 0xc8

00010fcc <mkdir@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #192]!	; 0xc0

00010fd8 <memset@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #184]!	; 0xb8

00010fe4 <__printf_chk@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #176]!	; 0xb0

00010ff0 <fileno@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #168]!	; 0xa8

00010ffc <__fprintf_chk@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #160]!	; 0xa0

00011008 <fclose@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #152]!	; 0x98

00011014 <fseeko64@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #144]!	; 0x90

00011020 <setlocale@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #136]!	; 0x88

0001102c <strrchr@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #128]!	; 0x80

00011038 <nl_langinfo@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #90112	; 0x16000
   11040:	ldr	pc, [ip, #120]!	; 0x78

00011044 <remove@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #112]!	; 0x70

00011050 <bindtextdomain@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #104]!	; 0x68

0001105c <getrandom@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #96]!	; 0x60

00011068 <strncmp@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #88]!	; 0x58

00011074 <abort@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #80]!	; 0x50

00011080 <close@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #72]!	; 0x48

0001108c <__lxstat64@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #64]!	; 0x40

00011098 <strspn@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #56]!	; 0x38

000110a4 <__mempcpy_chk@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #48]!	; 0x30

Disassembly of section .text:

000110b0 <.text>:
   110b0:	mov	fp, #0
   110b4:	mov	lr, #0
   110b8:	pop	{r1}		; (ldr r1, [sp], #4)
   110bc:	mov	r2, sp
   110c0:	push	{r2}		; (str r2, [sp, #-4]!)
   110c4:	push	{r0}		; (str r0, [sp, #-4]!)
   110c8:	ldr	ip, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0x3c>
   110cc:	push	{ip}		; (str ip, [sp, #-4]!)
   110d0:	ldr	r0, [pc, #12]	; 110e4 <__mempcpy_chk@plt+0x40>
   110d4:	ldr	r3, [pc, #12]	; 110e8 <__mempcpy_chk@plt+0x44>
   110d8:	bl	10f54 <__libc_start_main@plt>
   110dc:	bl	11074 <abort@plt>
   110e0:	ldrdeq	r5, [r1], -r8
   110e4:	andeq	r1, r1, r0, lsl #9
   110e8:	andeq	r5, r1, r8, ror r2
   110ec:	ldr	r3, [pc, #20]	; 11108 <__mempcpy_chk@plt+0x64>
   110f0:	ldr	r2, [pc, #20]	; 1110c <__mempcpy_chk@plt+0x68>
   110f4:	add	r3, pc, r3
   110f8:	ldr	r2, [r3, r2]
   110fc:	cmp	r2, #0
   11100:	bxeq	lr
   11104:	b	10f6c <__gmon_start__@plt>
   11108:	andeq	r5, r1, r4, lsl #30
   1110c:	andeq	r0, r0, r0, ror #1
   11110:	ldr	r0, [pc, #24]	; 11130 <__mempcpy_chk@plt+0x8c>
   11114:	ldr	r3, [pc, #24]	; 11134 <__mempcpy_chk@plt+0x90>
   11118:	cmp	r3, r0
   1111c:	bxeq	lr
   11120:	ldr	r3, [pc, #16]	; 11138 <__mempcpy_chk@plt+0x94>
   11124:	cmp	r3, #0
   11128:	bxeq	lr
   1112c:	bx	r3
   11130:	andeq	r7, r2, r8, lsr r1
   11134:	andeq	r7, r2, r8, lsr r1
   11138:	andeq	r0, r0, r0
   1113c:	ldr	r0, [pc, #36]	; 11168 <__mempcpy_chk@plt+0xc4>
   11140:	ldr	r1, [pc, #36]	; 1116c <__mempcpy_chk@plt+0xc8>
   11144:	sub	r1, r1, r0
   11148:	asr	r1, r1, #2
   1114c:	add	r1, r1, r1, lsr #31
   11150:	asrs	r1, r1, #1
   11154:	bxeq	lr
   11158:	ldr	r3, [pc, #16]	; 11170 <__mempcpy_chk@plt+0xcc>
   1115c:	cmp	r3, #0
   11160:	bxeq	lr
   11164:	bx	r3
   11168:	andeq	r7, r2, r8, lsr r1
   1116c:	andeq	r7, r2, r8, lsr r1
   11170:	andeq	r0, r0, r0
   11174:	push	{r4, lr}
   11178:	ldr	r4, [pc, #24]	; 11198 <__mempcpy_chk@plt+0xf4>
   1117c:	ldrb	r3, [r4]
   11180:	cmp	r3, #0
   11184:	popne	{r4, pc}
   11188:	bl	11110 <__mempcpy_chk@plt+0x6c>
   1118c:	mov	r3, #1
   11190:	strb	r3, [r4]
   11194:	pop	{r4, pc}
   11198:	andeq	r7, r2, r4, asr r1
   1119c:	b	1113c <__mempcpy_chk@plt+0x98>
   111a0:	push	{fp, lr}
   111a4:	mov	fp, sp
   111a8:	sub	sp, sp, #56	; 0x38
   111ac:	mov	r4, r0
   111b0:	cmp	r0, #0
   111b4:	bne	1143c <__mempcpy_chk@plt+0x398>
   111b8:	movw	r1, #21291	; 0x532b
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	movt	r1, #1
   111c8:	bl	10eac <dcgettext@plt>
   111cc:	mov	r1, r0
   111d0:	movw	r0, #29024	; 0x7160
   111d4:	movt	r0, #2
   111d8:	ldr	r2, [r0]
   111dc:	mov	r0, #1
   111e0:	bl	10fe4 <__printf_chk@plt>
   111e4:	movw	r1, #21325	; 0x534d
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	movt	r1, #1
   111f4:	bl	10eac <dcgettext@plt>
   111f8:	movw	r7, #29004	; 0x714c
   111fc:	movt	r7, #2
   11200:	ldr	r1, [r7]
   11204:	bl	10e40 <fputs_unlocked@plt>
   11208:	movw	r1, #21536	; 0x5420
   1120c:	mov	r0, #0
   11210:	mov	r2, #5
   11214:	movt	r1, #1
   11218:	bl	10eac <dcgettext@plt>
   1121c:	ldr	r1, [r7]
   11220:	bl	10e40 <fputs_unlocked@plt>
   11224:	ldr	r1, [r7]
   11228:	movw	r0, #23394	; 0x5b62
   1122c:	movt	r0, #1
   11230:	bl	10e40 <fputs_unlocked@plt>
   11234:	movw	r1, #21610	; 0x546a
   11238:	mov	r0, #0
   1123c:	mov	r2, #5
   11240:	movt	r1, #1
   11244:	bl	10eac <dcgettext@plt>
   11248:	ldr	r1, [r7]
   1124c:	bl	10e40 <fputs_unlocked@plt>
   11250:	movw	r1, #21814	; 0x5536
   11254:	mov	r0, #0
   11258:	mov	r2, #5
   1125c:	movt	r1, #1
   11260:	bl	10eac <dcgettext@plt>
   11264:	ldr	r1, [r7]
   11268:	bl	10e40 <fputs_unlocked@plt>
   1126c:	movw	r1, #21970	; 0x55d2
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10eac <dcgettext@plt>
   11280:	ldr	r1, [r7]
   11284:	bl	10e40 <fputs_unlocked@plt>
   11288:	movw	r1, #22333	; 0x573d
   1128c:	mov	r0, #0
   11290:	mov	r2, #5
   11294:	movt	r1, #1
   11298:	bl	10eac <dcgettext@plt>
   1129c:	ldr	r1, [r7]
   112a0:	bl	10e40 <fputs_unlocked@plt>
   112a4:	movw	r1, #22558	; 0x581e
   112a8:	mov	r0, #0
   112ac:	mov	r2, #5
   112b0:	movt	r1, #1
   112b4:	bl	10eac <dcgettext@plt>
   112b8:	ldr	r1, [r7]
   112bc:	bl	10e40 <fputs_unlocked@plt>
   112c0:	movw	r1, #22603	; 0x584b
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10eac <dcgettext@plt>
   112d4:	ldr	r1, [r7]
   112d8:	bl	10e40 <fputs_unlocked@plt>
   112dc:	movw	r0, #23592	; 0x5c28
   112e0:	mov	r2, #48	; 0x30
   112e4:	mov	r6, sp
   112e8:	movw	r5, #22657	; 0x5881
   112ec:	movt	r0, #1
   112f0:	movt	r5, #1
   112f4:	add	r1, r0, #32
   112f8:	add	r3, r0, #16
   112fc:	vld1.64	{d18-d19}, [r0], r2
   11300:	vld1.64	{d16-d17}, [r1]
   11304:	vld1.64	{d20-d21}, [r3]
   11308:	vldr	d22, [r0]
   1130c:	add	r1, r6, #32
   11310:	add	r0, r6, #16
   11314:	vst1.64	{d16-d17}, [r1]
   11318:	movw	r1, #23085	; 0x5a2d
   1131c:	vst1.64	{d20-d21}, [r0]
   11320:	mov	r0, r6
   11324:	movt	r1, #1
   11328:	vst1.64	{d18-d19}, [r0], r2
   1132c:	vstr	d22, [r0]
   11330:	mov	r0, r5
   11334:	bl	10e58 <strcmp@plt>
   11338:	cmp	r0, #0
   1133c:	ldrne	r1, [r6, #8]!
   11340:	cmpne	r1, #0
   11344:	bne	11330 <__mempcpy_chk@plt+0x28c>
   11348:	movw	r1, #23180	; 0x5a8c
   1134c:	ldr	r6, [r6, #4]
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10eac <dcgettext@plt>
   11360:	movw	r2, #22696	; 0x58a8
   11364:	movw	r3, #23203	; 0x5aa3
   11368:	mov	r1, r0
   1136c:	mov	r0, #1
   11370:	movt	r2, #1
   11374:	movt	r3, #1
   11378:	bl	10fe4 <__printf_chk@plt>
   1137c:	cmp	r6, #0
   11380:	mov	r0, #5
   11384:	mov	r1, #0
   11388:	moveq	r6, r5
   1138c:	bl	11020 <setlocale@plt>
   11390:	cmp	r0, #0
   11394:	beq	113cc <__mempcpy_chk@plt+0x328>
   11398:	movw	r1, #23243	; 0x5acb
   1139c:	mov	r2, #3
   113a0:	movt	r1, #1
   113a4:	bl	11068 <strncmp@plt>
   113a8:	cmp	r0, #0
   113ac:	beq	113cc <__mempcpy_chk@plt+0x328>
   113b0:	movw	r1, #23247	; 0x5acf
   113b4:	mov	r0, #0
   113b8:	mov	r2, #5
   113bc:	movt	r1, #1
   113c0:	bl	10eac <dcgettext@plt>
   113c4:	ldr	r1, [r7]
   113c8:	bl	10e40 <fputs_unlocked@plt>
   113cc:	movw	r1, #23318	; 0x5b16
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	movt	r1, #1
   113dc:	bl	10eac <dcgettext@plt>
   113e0:	movw	r2, #23203	; 0x5aa3
   113e4:	mov	r1, r0
   113e8:	mov	r0, #1
   113ec:	mov	r3, r5
   113f0:	movt	r2, #1
   113f4:	bl	10fe4 <__printf_chk@plt>
   113f8:	movw	r1, #23345	; 0x5b31
   113fc:	mov	r0, #0
   11400:	mov	r2, #5
   11404:	movt	r1, #1
   11408:	bl	10eac <dcgettext@plt>
   1140c:	mov	r1, r0
   11410:	movw	r0, #23113	; 0x5a49
   11414:	movw	r3, #23395	; 0x5b63
   11418:	cmp	r6, r5
   1141c:	mov	r2, r6
   11420:	movt	r0, #1
   11424:	movt	r3, #1
   11428:	moveq	r3, r0
   1142c:	mov	r0, #1
   11430:	bl	10fe4 <__printf_chk@plt>
   11434:	mov	r0, r4
   11438:	bl	10f90 <exit@plt>
   1143c:	movw	r0, #29000	; 0x7148
   11440:	movw	r1, #21252	; 0x5304
   11444:	mov	r2, #5
   11448:	movt	r0, #2
   1144c:	movt	r1, #1
   11450:	ldr	r5, [r0]
   11454:	mov	r0, #0
   11458:	bl	10eac <dcgettext@plt>
   1145c:	mov	r2, r0
   11460:	movw	r0, #29024	; 0x7160
   11464:	mov	r1, #1
   11468:	movt	r0, #2
   1146c:	ldr	r3, [r0]
   11470:	mov	r0, r5
   11474:	bl	10ffc <__fprintf_chk@plt>
   11478:	mov	r0, r4
   1147c:	bl	10f90 <exit@plt>
   11480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11484:	add	fp, sp, #28
   11488:	sub	sp, sp, #36	; 0x24
   1148c:	mov	r5, r0
   11490:	ldr	r0, [r1]
   11494:	mov	r4, r1
   11498:	bl	12070 <__mempcpy_chk@plt+0xfcc>
   1149c:	movw	r1, #23395	; 0x5b63
   114a0:	mov	r0, #6
   114a4:	movt	r1, #1
   114a8:	bl	11020 <setlocale@plt>
   114ac:	movw	r6, #22700	; 0x58ac
   114b0:	movw	r1, #22664	; 0x5888
   114b4:	movt	r6, #1
   114b8:	movt	r1, #1
   114bc:	mov	r0, r6
   114c0:	bl	11050 <bindtextdomain@plt>
   114c4:	mov	r0, r6
   114c8:	bl	10ec4 <textdomain@plt>
   114cc:	movw	r0, #7004	; 0x1b5c
   114d0:	movt	r0, #1
   114d4:	bl	152dc <__mempcpy_chk@plt+0x4238>
   114d8:	mov	r0, #0
   114dc:	movw	r7, #22688	; 0x58a0
   114e0:	movw	r6, #23464	; 0x5ba8
   114e4:	mov	r1, #0
   114e8:	mov	r9, #0
   114ec:	mov	r8, #0
   114f0:	str	r0, [sp, #24]
   114f4:	mov	r0, #0
   114f8:	movt	r7, #1
   114fc:	movt	r6, #1
   11500:	str	r1, [sp, #20]
   11504:	str	r0, [sp, #16]
   11508:	mov	r0, #0
   1150c:	str	r0, [sp, #28]
   11510:	mov	r0, #0
   11514:	str	r0, [sp, #32]
   11518:	mov	r0, #0
   1151c:	b	11534 <__mempcpy_chk@plt+0x490>
   11520:	mov	r0, #1
   11524:	str	r0, [sp, #16]
   11528:	mov	r0, #1
   1152c:	str	r0, [sp, #32]
   11530:	mov	r0, sl
   11534:	mov	sl, r0
   11538:	mov	r0, r5
   1153c:	mov	r1, r4
   11540:	mov	r2, r7
   11544:	mov	r3, r6
   11548:	str	r9, [sp]
   1154c:	bl	10f78 <getopt_long@plt>
   11550:	cmp	r0, #85	; 0x55
   11554:	ble	11634 <__mempcpy_chk@plt+0x590>
   11558:	sub	r1, r0, #86	; 0x56
   1155c:	cmp	r1, #31
   11560:	bhi	11610 <__mempcpy_chk@plt+0x56c>
   11564:	add	r2, pc, #4
   11568:	mov	r0, #1
   1156c:	ldr	pc, [r2, r1, lsl #2]
   11570:	andeq	r1, r1, r4, asr #20
   11574:	andeq	r1, r1, r8, lsr #21
   11578:	andeq	r1, r1, r8, lsr #21
   1157c:	andeq	r1, r1, r8, lsr #21
   11580:	andeq	r1, r1, r8, lsr #21
   11584:	andeq	r1, r1, r8, lsr #21
   11588:	andeq	r1, r1, r8, lsr #21
   1158c:	andeq	r1, r1, r8, lsr #21
   11590:	andeq	r1, r1, r8, lsr #21
   11594:	andeq	r1, r1, r8, lsr #21
   11598:	andeq	r1, r1, r8, lsr #21
   1159c:	andeq	r1, r1, r8, lsr #21
   115a0:	andeq	r1, r1, r8, lsr #21
   115a4:	andeq	r1, r1, r8, lsr #21
   115a8:	strdeq	r1, [r1], -r0
   115ac:	andeq	r1, r1, r8, lsr #21
   115b0:	andeq	r1, r1, r8, lsr #21
   115b4:	andeq	r1, r1, r8, lsr #21
   115b8:	andeq	r1, r1, r8, lsr #21
   115bc:	andeq	r1, r1, r8, lsr #21
   115c0:	andeq	r1, r1, r8, lsr #21
   115c4:	andeq	r1, r1, r8, lsr #21
   115c8:	andeq	r1, r1, r8, lsr #21
   115cc:	andeq	r1, r1, r8, lsr #21
   115d0:	andeq	r1, r1, r8, lsr #21
   115d4:	andeq	r1, r1, r8, lsr #21
   115d8:	strdeq	r1, [r1], -ip
   115dc:	andeq	r1, r1, r4, lsr r5
   115e0:	andeq	r1, r1, r8, lsr #21
   115e4:	andeq	r1, r1, r8, lsr #21
   115e8:	andeq	r1, r1, r0, lsr #10
   115ec:	andeq	r1, r1, r8, lsr #12
   115f0:	mov	r0, #1
   115f4:	str	r0, [sp, #24]
   115f8:	b	11530 <__mempcpy_chk@plt+0x48c>
   115fc:	movw	r0, #29008	; 0x7150
   11600:	movt	r0, #2
   11604:	ldr	r0, [r0]
   11608:	str	r0, [sp, #20]
   1160c:	b	11528 <__mempcpy_chk@plt+0x484>
   11610:	cmp	r0, #256	; 0x100
   11614:	bne	11aa8 <__mempcpy_chk@plt+0xa04>
   11618:	movw	r0, #29008	; 0x7150
   1161c:	movt	r0, #2
   11620:	ldr	r8, [r0]
   11624:	b	11530 <__mempcpy_chk@plt+0x48c>
   11628:	mov	r0, #1
   1162c:	str	r0, [sp, #28]
   11630:	b	11530 <__mempcpy_chk@plt+0x48c>
   11634:	cmn	r0, #1
   11638:	bne	11a3c <__mempcpy_chk@plt+0x998>
   1163c:	movw	r0, #28992	; 0x7140
   11640:	movt	r0, #2
   11644:	ldr	r0, [r0]
   11648:	sub	r1, r5, r0
   1164c:	cmp	r1, #2
   11650:	bcs	11af0 <__mempcpy_chk@plt+0xa4c>
   11654:	cmp	r1, #0
   11658:	beq	116d4 <__mempcpy_chk@plt+0x630>
   1165c:	ldr	r6, [r4, r0, lsl #2]
   11660:	cmp	r8, #0
   11664:	beq	116ec <__mempcpy_chk@plt+0x648>
   11668:	mov	r0, r6
   1166c:	bl	10fa8 <strlen@plt>
   11670:	cmp	r0, #0
   11674:	beq	11ae4 <__mempcpy_chk@plt+0xa40>
   11678:	mov	r7, r0
   1167c:	add	r0, r0, r6
   11680:	ldrb	r0, [r0, #-1]
   11684:	cmp	r0, #88	; 0x58
   11688:	bne	11ae4 <__mempcpy_chk@plt+0xa40>
   1168c:	mov	r0, r8
   11690:	bl	10fa8 <strlen@plt>
   11694:	add	r5, r0, #1
   11698:	mov	r9, r0
   1169c:	add	r0, r5, r7
   116a0:	bl	148f8 <__mempcpy_chk@plt+0x3854>
   116a4:	mov	r1, r6
   116a8:	mov	r2, r7
   116ac:	mov	r4, r0
   116b0:	bl	10e94 <memcpy@plt>
   116b4:	add	r6, r4, r7
   116b8:	mov	r1, r8
   116bc:	mov	r2, r5
   116c0:	mov	r0, r6
   116c4:	bl	10e94 <memcpy@plt>
   116c8:	cmp	r9, #0
   116cc:	bne	11730 <__mempcpy_chk@plt+0x68c>
   116d0:	b	11740 <__mempcpy_chk@plt+0x69c>
   116d4:	movw	r6, #23447	; 0x5b97
   116d8:	mov	r0, #1
   116dc:	movt	r6, #1
   116e0:	str	r0, [sp, #32]
   116e4:	cmp	r8, #0
   116e8:	bne	11668 <__mempcpy_chk@plt+0x5c4>
   116ec:	mov	r0, r6
   116f0:	bl	14dcc <__mempcpy_chk@plt+0x3d28>
   116f4:	mov	r1, #88	; 0x58
   116f8:	mov	r4, r0
   116fc:	bl	1102c <strrchr@plt>
   11700:	cmp	r0, #0
   11704:	beq	11710 <__mempcpy_chk@plt+0x66c>
   11708:	add	r6, r0, #1
   1170c:	b	1171c <__mempcpy_chk@plt+0x678>
   11710:	mov	r0, r4
   11714:	bl	10fa8 <strlen@plt>
   11718:	add	r6, r4, r0
   1171c:	mov	r0, r6
   11720:	bl	10fa8 <strlen@plt>
   11724:	mov	r9, r0
   11728:	cmp	r9, #0
   1172c:	beq	11740 <__mempcpy_chk@plt+0x69c>
   11730:	mov	r0, r6
   11734:	bl	11ba0 <__mempcpy_chk@plt+0xafc>
   11738:	cmp	r0, r6
   1173c:	bne	11b1c <__mempcpy_chk@plt+0xa78>
   11740:	subs	r0, r6, r4
   11744:	beq	11ab0 <__mempcpy_chk@plt+0xa0c>
   11748:	sub	r0, r4, r6
   1174c:	sub	r1, r6, #1
   11750:	mov	r5, #0
   11754:	ldrb	r2, [r1, -r5]
   11758:	cmp	r2, #88	; 0x58
   1175c:	bne	1176c <__mempcpy_chk@plt+0x6c8>
   11760:	add	r5, r5, #1
   11764:	adds	r2, r0, r5
   11768:	bne	11754 <__mempcpy_chk@plt+0x6b0>
   1176c:	cmp	r5, #2
   11770:	bls	11ab0 <__mempcpy_chk@plt+0xa0c>
   11774:	ldr	r0, [sp, #32]
   11778:	tst	r0, #1
   1177c:	beq	117f0 <__mempcpy_chk@plt+0x74c>
   11780:	ldr	r0, [sp, #16]
   11784:	tst	r0, #1
   11788:	beq	117f8 <__mempcpy_chk@plt+0x754>
   1178c:	movw	r0, #22869	; 0x5955
   11790:	movt	r0, #1
   11794:	bl	10f30 <getenv@plt>
   11798:	ldr	r1, [sp, #20]
   1179c:	cmp	r0, #0
   117a0:	beq	117b4 <__mempcpy_chk@plt+0x710>
   117a4:	mov	r6, r0
   117a8:	ldrb	r0, [r0]
   117ac:	cmp	r0, #0
   117b0:	bne	117d4 <__mempcpy_chk@plt+0x730>
   117b4:	cmp	r1, #0
   117b8:	beq	117cc <__mempcpy_chk@plt+0x728>
   117bc:	ldrb	r0, [r1]
   117c0:	mov	r6, r1
   117c4:	cmp	r0, #0
   117c8:	bne	117d4 <__mempcpy_chk@plt+0x730>
   117cc:	movw	r6, #22876	; 0x595c
   117d0:	movt	r6, #1
   117d4:	mov	r0, r4
   117d8:	bl	11ba0 <__mempcpy_chk@plt+0xafc>
   117dc:	cmp	r0, r4
   117e0:	beq	11850 <__mempcpy_chk@plt+0x7ac>
   117e4:	movw	r1, #22881	; 0x5961
   117e8:	movt	r1, #1
   117ec:	b	11ab8 <__mempcpy_chk@plt+0xa14>
   117f0:	mov	r6, r4
   117f4:	b	1186c <__mempcpy_chk@plt+0x7c8>
   117f8:	ldr	r6, [sp, #20]
   117fc:	cmp	r6, #0
   11800:	beq	11810 <__mempcpy_chk@plt+0x76c>
   11804:	ldrb	r0, [r6]
   11808:	cmp	r0, #0
   1180c:	bne	11844 <__mempcpy_chk@plt+0x7a0>
   11810:	movw	r0, #22869	; 0x5955
   11814:	movt	r0, #1
   11818:	bl	10f30 <getenv@plt>
   1181c:	cmp	r0, #0
   11820:	beq	1183c <__mempcpy_chk@plt+0x798>
   11824:	ldrb	r1, [r0]
   11828:	movw	r6, #22876	; 0x595c
   1182c:	movt	r6, #1
   11830:	cmp	r1, #0
   11834:	movne	r6, r0
   11838:	b	11844 <__mempcpy_chk@plt+0x7a0>
   1183c:	movw	r6, #22876	; 0x595c
   11840:	movt	r6, #1
   11844:	ldrb	r0, [r4]
   11848:	cmp	r0, #47	; 0x2f
   1184c:	beq	11b50 <__mempcpy_chk@plt+0xaac>
   11850:	mov	r0, r6
   11854:	mov	r1, r4
   11858:	mov	r2, #0
   1185c:	bl	11ea8 <__mempcpy_chk@plt+0xe04>
   11860:	mov	r6, r0
   11864:	mov	r0, r4
   11868:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   1186c:	mov	r0, r6
   11870:	bl	14dcc <__mempcpy_chk@plt+0x3d28>
   11874:	mov	r4, r0
   11878:	ldr	r0, [sp, #24]
   1187c:	tst	r0, #1
   11880:	beq	11900 <__mempcpy_chk@plt+0x85c>
   11884:	str	r5, [sp]
   11888:	ldr	r5, [sp, #28]
   1188c:	mov	r3, #1
   11890:	mov	r0, r4
   11894:	mov	r1, r9
   11898:	mov	r2, #0
   1189c:	mov	r7, #1
   118a0:	tst	r5, #1
   118a4:	movwne	r3, #2
   118a8:	bl	13e10 <__mempcpy_chk@plt+0x2d6c>
   118ac:	clz	r0, r0
   118b0:	lsr	r0, r0, #5
   118b4:	orr	r1, sl, r0
   118b8:	tst	r1, #1
   118bc:	bne	11968 <__mempcpy_chk@plt+0x8c4>
   118c0:	bl	10fb4 <__errno_location@plt>
   118c4:	movw	r1, #22992	; 0x59d0
   118c8:	ldr	r4, [r0]
   118cc:	mov	r0, #0
   118d0:	mov	r2, #5
   118d4:	movt	r1, #1
   118d8:	bl	10eac <dcgettext@plt>
   118dc:	mov	r5, r0
   118e0:	mov	r0, r6
   118e4:	bl	13cc4 <__mempcpy_chk@plt+0x2c20>
   118e8:	mov	r3, r0
   118ec:	mov	r0, #0
   118f0:	mov	r1, r4
   118f4:	mov	r2, r5
   118f8:	bl	10f18 <error@plt>
   118fc:	b	11a30 <__mempcpy_chk@plt+0x98c>
   11900:	str	r5, [sp]
   11904:	ldr	r5, [sp, #28]
   11908:	mov	r0, r4
   1190c:	mov	r1, r9
   11910:	mov	r2, #0
   11914:	ands	r3, r5, #1
   11918:	movwne	r3, #2
   1191c:	bl	13e10 <__mempcpy_chk@plt+0x2d6c>
   11920:	cmp	r0, #0
   11924:	bmi	11940 <__mempcpy_chk@plt+0x89c>
   11928:	tst	r5, #1
   1192c:	beq	11950 <__mempcpy_chk@plt+0x8ac>
   11930:	mov	r0, r4
   11934:	bl	10f3c <puts@plt>
   11938:	mov	r7, #0
   1193c:	b	11a30 <__mempcpy_chk@plt+0x98c>
   11940:	mov	r7, #1
   11944:	tst	sl, #1
   11948:	beq	119f0 <__mempcpy_chk@plt+0x94c>
   1194c:	b	11a30 <__mempcpy_chk@plt+0x98c>
   11950:	bl	11080 <close@plt>
   11954:	clz	r0, r0
   11958:	lsr	r0, r0, #5
   1195c:	orr	r1, sl, r0
   11960:	tst	r1, #1
   11964:	beq	119f0 <__mempcpy_chk@plt+0x94c>
   11968:	mov	r7, #1
   1196c:	cmp	r0, #0
   11970:	beq	11a30 <__mempcpy_chk@plt+0x98c>
   11974:	mov	r0, r4
   11978:	bl	10f3c <puts@plt>
   1197c:	mov	r7, #0
   11980:	tst	r5, #1
   11984:	bne	11a30 <__mempcpy_chk@plt+0x98c>
   11988:	movw	r0, #29013	; 0x7155
   1198c:	mov	r1, #1
   11990:	movt	r0, #2
   11994:	strb	r1, [r0]
   11998:	movw	r0, #29004	; 0x714c
   1199c:	movt	r0, #2
   119a0:	ldr	r0, [r0]
   119a4:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   119a8:	cmp	r0, #0
   119ac:	beq	11a30 <__mempcpy_chk@plt+0x98c>
   119b0:	bl	10fb4 <__errno_location@plt>
   119b4:	ldr	r5, [r0]
   119b8:	mov	r0, r4
   119bc:	bl	11044 <remove@plt>
   119c0:	tst	sl, #1
   119c4:	bne	11a2c <__mempcpy_chk@plt+0x988>
   119c8:	movw	r1, #23073	; 0x5a21
   119cc:	mov	r0, #0
   119d0:	mov	r2, #5
   119d4:	movt	r1, #1
   119d8:	bl	10eac <dcgettext@plt>
   119dc:	mov	r2, r0
   119e0:	mov	r0, #0
   119e4:	mov	r1, r5
   119e8:	bl	10f18 <error@plt>
   119ec:	b	11a2c <__mempcpy_chk@plt+0x988>
   119f0:	bl	10fb4 <__errno_location@plt>
   119f4:	movw	r1, #23035	; 0x59fb
   119f8:	ldr	r4, [r0]
   119fc:	mov	r0, #0
   11a00:	mov	r2, #5
   11a04:	movt	r1, #1
   11a08:	bl	10eac <dcgettext@plt>
   11a0c:	mov	r5, r0
   11a10:	mov	r0, r6
   11a14:	bl	13cc4 <__mempcpy_chk@plt+0x2c20>
   11a18:	mov	r3, r0
   11a1c:	mov	r0, #0
   11a20:	mov	r1, r4
   11a24:	mov	r2, r5
   11a28:	bl	10f18 <error@plt>
   11a2c:	mov	r7, #1
   11a30:	mov	r0, r7
   11a34:	sub	sp, fp, #28
   11a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a3c:	cmn	r0, #3
   11a40:	bne	11a98 <__mempcpy_chk@plt+0x9f4>
   11a44:	movw	r0, #28912	; 0x70f0
   11a48:	movw	r2, #22723	; 0x58c3
   11a4c:	mov	r1, #0
   11a50:	movw	r7, #22710	; 0x58b6
   11a54:	movt	r0, #2
   11a58:	movt	r2, #1
   11a5c:	str	r1, [sp, #8]
   11a60:	movw	r1, #22657	; 0x5881
   11a64:	movt	r7, #1
   11a68:	movt	r1, #1
   11a6c:	ldr	r3, [r0]
   11a70:	movw	r0, #29004	; 0x714c
   11a74:	str	r2, [sp, #4]
   11a78:	movw	r2, #22696	; 0x58a8
   11a7c:	str	r7, [sp]
   11a80:	movt	r0, #2
   11a84:	movt	r2, #1
   11a88:	ldr	r0, [r0]
   11a8c:	bl	14694 <__mempcpy_chk@plt+0x35f0>
   11a90:	mov	r0, #0
   11a94:	bl	10f90 <exit@plt>
   11a98:	cmn	r0, #2
   11a9c:	bne	11aa8 <__mempcpy_chk@plt+0xa04>
   11aa0:	mov	r0, #0
   11aa4:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11aa8:	mov	r0, #1
   11aac:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11ab0:	movw	r1, #22842	; 0x593a
   11ab4:	movt	r1, #1
   11ab8:	mov	r0, #0
   11abc:	mov	r2, #5
   11ac0:	bl	10eac <dcgettext@plt>
   11ac4:	mov	r5, r0
   11ac8:	mov	r0, r4
   11acc:	bl	13cc4 <__mempcpy_chk@plt+0x2c20>
   11ad0:	mov	r3, r0
   11ad4:	mov	r0, #1
   11ad8:	mov	r1, #0
   11adc:	mov	r2, r5
   11ae0:	bl	10f18 <error@plt>
   11ae4:	movw	r1, #22753	; 0x58e1
   11ae8:	movt	r1, #1
   11aec:	b	11b24 <__mempcpy_chk@plt+0xa80>
   11af0:	movw	r1, #22734	; 0x58ce
   11af4:	mov	r0, #0
   11af8:	mov	r2, #5
   11afc:	movt	r1, #1
   11b00:	bl	10eac <dcgettext@plt>
   11b04:	mov	r2, r0
   11b08:	mov	r0, #0
   11b0c:	mov	r1, #0
   11b10:	bl	10f18 <error@plt>
   11b14:	mov	r0, #1
   11b18:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11b1c:	movw	r1, #22794	; 0x590a
   11b20:	movt	r1, #1
   11b24:	mov	r0, #0
   11b28:	mov	r2, #5
   11b2c:	bl	10eac <dcgettext@plt>
   11b30:	mov	r4, r0
   11b34:	mov	r0, r6
   11b38:	bl	13cc4 <__mempcpy_chk@plt+0x2c20>
   11b3c:	mov	r3, r0
   11b40:	mov	r0, #1
   11b44:	mov	r1, #0
   11b48:	mov	r2, r4
   11b4c:	bl	10f18 <error@plt>
   11b50:	movw	r1, #22932	; 0x5994
   11b54:	movt	r1, #1
   11b58:	b	11ab8 <__mempcpy_chk@plt+0xa14>
   11b5c:	push	{fp, lr}
   11b60:	mov	fp, sp
   11b64:	movw	r0, #29013	; 0x7155
   11b68:	movt	r0, #2
   11b6c:	ldrb	r0, [r0]
   11b70:	cmp	r0, #0
   11b74:	beq	11b98 <__mempcpy_chk@plt+0xaf4>
   11b78:	movw	r0, #29000	; 0x7148
   11b7c:	movt	r0, #2
   11b80:	ldr	r0, [r0]
   11b84:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   11b88:	cmp	r0, #0
   11b8c:	popeq	{fp, pc}
   11b90:	mov	r0, #1
   11b94:	bl	10e88 <_exit@plt>
   11b98:	pop	{fp, lr}
   11b9c:	b	11cc8 <__mempcpy_chk@plt+0xc24>
   11ba0:	sub	r0, r0, #1
   11ba4:	ldrb	r3, [r0, #1]!
   11ba8:	cmp	r3, #47	; 0x2f
   11bac:	beq	11ba4 <__mempcpy_chk@plt+0xb00>
   11bb0:	mov	r2, #0
   11bb4:	mov	r1, r0
   11bb8:	b	11bc4 <__mempcpy_chk@plt+0xb20>
   11bbc:	ldrb	r3, [r1, #1]!
   11bc0:	mov	r2, #1
   11bc4:	uxtb	r3, r3
   11bc8:	cmp	r3, #47	; 0x2f
   11bcc:	beq	11bbc <__mempcpy_chk@plt+0xb18>
   11bd0:	cmp	r3, #0
   11bd4:	bxeq	lr
   11bd8:	tst	r2, #1
   11bdc:	mov	r2, #0
   11be0:	movne	r0, r1
   11be4:	ldrb	r3, [r1, #1]!
   11be8:	b	11bc4 <__mempcpy_chk@plt+0xb20>
   11bec:	push	{r4, sl, fp, lr}
   11bf0:	add	fp, sp, #8
   11bf4:	mov	r4, r0
   11bf8:	bl	10fa8 <strlen@plt>
   11bfc:	mov	r1, r0
   11c00:	sub	r2, r4, #1
   11c04:	mov	r0, r1
   11c08:	cmp	r1, #2
   11c0c:	bcc	11c20 <__mempcpy_chk@plt+0xb7c>
   11c10:	ldrb	r3, [r2, r0]
   11c14:	sub	r1, r0, #1
   11c18:	cmp	r3, #47	; 0x2f
   11c1c:	beq	11c04 <__mempcpy_chk@plt+0xb60>
   11c20:	pop	{r4, sl, fp, pc}
   11c24:	push	{r4, r5, r6, sl, fp, lr}
   11c28:	add	fp, sp, #16
   11c2c:	mov	r4, r0
   11c30:	bl	10f00 <__fpending@plt>
   11c34:	ldr	r6, [r4]
   11c38:	mov	r5, r0
   11c3c:	mov	r0, r4
   11c40:	bl	11db0 <__mempcpy_chk@plt+0xd0c>
   11c44:	tst	r6, #32
   11c48:	bne	11c80 <__mempcpy_chk@plt+0xbdc>
   11c4c:	cmp	r0, #0
   11c50:	mov	r4, r0
   11c54:	mvnne	r4, #0
   11c58:	cmp	r5, #0
   11c5c:	bne	11c8c <__mempcpy_chk@plt+0xbe8>
   11c60:	cmp	r0, #0
   11c64:	beq	11c8c <__mempcpy_chk@plt+0xbe8>
   11c68:	bl	10fb4 <__errno_location@plt>
   11c6c:	ldr	r0, [r0]
   11c70:	subs	r4, r0, #9
   11c74:	mvnne	r4, #0
   11c78:	mov	r0, r4
   11c7c:	pop	{r4, r5, r6, sl, fp, pc}
   11c80:	mvn	r4, #0
   11c84:	cmp	r0, #0
   11c88:	beq	11c94 <__mempcpy_chk@plt+0xbf0>
   11c8c:	mov	r0, r4
   11c90:	pop	{r4, r5, r6, sl, fp, pc}
   11c94:	bl	10fb4 <__errno_location@plt>
   11c98:	mov	r1, #0
   11c9c:	str	r1, [r0]
   11ca0:	mov	r0, r4
   11ca4:	pop	{r4, r5, r6, sl, fp, pc}
   11ca8:	movw	r1, #29016	; 0x7158
   11cac:	movt	r1, #2
   11cb0:	str	r0, [r1]
   11cb4:	bx	lr
   11cb8:	movw	r1, #29020	; 0x715c
   11cbc:	movt	r1, #2
   11cc0:	strb	r0, [r1]
   11cc4:	bx	lr
   11cc8:	push	{r4, r5, r6, sl, fp, lr}
   11ccc:	add	fp, sp, #16
   11cd0:	sub	sp, sp, #8
   11cd4:	movw	r0, #29004	; 0x714c
   11cd8:	movt	r0, #2
   11cdc:	ldr	r0, [r0]
   11ce0:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   11ce4:	cmp	r0, #0
   11ce8:	beq	11d10 <__mempcpy_chk@plt+0xc6c>
   11cec:	movw	r0, #29020	; 0x715c
   11cf0:	movt	r0, #2
   11cf4:	ldrb	r0, [r0]
   11cf8:	cmp	r0, #0
   11cfc:	beq	11d30 <__mempcpy_chk@plt+0xc8c>
   11d00:	bl	10fb4 <__errno_location@plt>
   11d04:	ldr	r0, [r0]
   11d08:	cmp	r0, #32
   11d0c:	bne	11d30 <__mempcpy_chk@plt+0xc8c>
   11d10:	movw	r0, #29000	; 0x7148
   11d14:	movt	r0, #2
   11d18:	ldr	r0, [r0]
   11d1c:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   11d20:	cmp	r0, #0
   11d24:	subeq	sp, fp, #16
   11d28:	popeq	{r4, r5, r6, sl, fp, pc}
   11d2c:	b	11da0 <__mempcpy_chk@plt+0xcfc>
   11d30:	movw	r1, #23073	; 0x5a21
   11d34:	mov	r0, #0
   11d38:	mov	r2, #5
   11d3c:	movt	r1, #1
   11d40:	bl	10eac <dcgettext@plt>
   11d44:	mov	r4, r0
   11d48:	movw	r0, #29016	; 0x7158
   11d4c:	movt	r0, #2
   11d50:	ldr	r6, [r0]
   11d54:	bl	10fb4 <__errno_location@plt>
   11d58:	ldr	r5, [r0]
   11d5c:	cmp	r6, #0
   11d60:	bne	11d7c <__mempcpy_chk@plt+0xcd8>
   11d64:	movw	r2, #23667	; 0x5c73
   11d68:	mov	r0, #0
   11d6c:	mov	r1, r5
   11d70:	mov	r3, r4
   11d74:	movt	r2, #1
   11d78:	b	11d9c <__mempcpy_chk@plt+0xcf8>
   11d7c:	mov	r0, r6
   11d80:	bl	1393c <__mempcpy_chk@plt+0x2898>
   11d84:	movw	r2, #23663	; 0x5c6f
   11d88:	mov	r3, r0
   11d8c:	str	r4, [sp]
   11d90:	mov	r0, #0
   11d94:	mov	r1, r5
   11d98:	movt	r2, #1
   11d9c:	bl	10f18 <error@plt>
   11da0:	movw	r0, #28916	; 0x70f4
   11da4:	movt	r0, #2
   11da8:	ldr	r0, [r0]
   11dac:	bl	10e88 <_exit@plt>
   11db0:	push	{r4, r5, r6, sl, fp, lr}
   11db4:	add	fp, sp, #16
   11db8:	sub	sp, sp, #8
   11dbc:	mov	r4, r0
   11dc0:	bl	10ff0 <fileno@plt>
   11dc4:	cmn	r0, #1
   11dc8:	ble	11e3c <__mempcpy_chk@plt+0xd98>
   11dcc:	mov	r0, r4
   11dd0:	bl	10f60 <__freading@plt>
   11dd4:	cmp	r0, #0
   11dd8:	beq	11e04 <__mempcpy_chk@plt+0xd60>
   11ddc:	mov	r0, r4
   11de0:	bl	10ff0 <fileno@plt>
   11de4:	mov	r1, #1
   11de8:	mov	r2, #0
   11dec:	mov	r3, #0
   11df0:	str	r1, [sp]
   11df4:	bl	10ee8 <lseek64@plt>
   11df8:	and	r0, r0, r1
   11dfc:	cmn	r0, #1
   11e00:	beq	11e3c <__mempcpy_chk@plt+0xd98>
   11e04:	mov	r0, r4
   11e08:	bl	11e4c <__mempcpy_chk@plt+0xda8>
   11e0c:	cmp	r0, #0
   11e10:	beq	11e3c <__mempcpy_chk@plt+0xd98>
   11e14:	bl	10fb4 <__errno_location@plt>
   11e18:	ldr	r6, [r0]
   11e1c:	mov	r5, r0
   11e20:	mov	r0, r4
   11e24:	bl	11008 <fclose@plt>
   11e28:	cmp	r6, #0
   11e2c:	strne	r6, [r5]
   11e30:	mvnne	r0, #0
   11e34:	sub	sp, fp, #16
   11e38:	pop	{r4, r5, r6, sl, fp, pc}
   11e3c:	mov	r0, r4
   11e40:	sub	sp, fp, #16
   11e44:	pop	{r4, r5, r6, sl, fp, lr}
   11e48:	b	11008 <fclose@plt>
   11e4c:	push	{r4, sl, fp, lr}
   11e50:	add	fp, sp, #8
   11e54:	sub	sp, sp, #8
   11e58:	mov	r4, r0
   11e5c:	cmp	r0, #0
   11e60:	beq	11e98 <__mempcpy_chk@plt+0xdf4>
   11e64:	mov	r0, r4
   11e68:	bl	10f60 <__freading@plt>
   11e6c:	cmp	r0, #0
   11e70:	beq	11e98 <__mempcpy_chk@plt+0xdf4>
   11e74:	ldrb	r0, [r4, #1]
   11e78:	tst	r0, #1
   11e7c:	beq	11e98 <__mempcpy_chk@plt+0xdf4>
   11e80:	mov	r0, #1
   11e84:	mov	r2, #0
   11e88:	mov	r3, #0
   11e8c:	str	r0, [sp]
   11e90:	mov	r0, r4
   11e94:	bl	11fc8 <__mempcpy_chk@plt+0xf24>
   11e98:	mov	r0, r4
   11e9c:	sub	sp, fp, #8
   11ea0:	pop	{r4, sl, fp, lr}
   11ea4:	b	10e64 <fflush@plt>
   11ea8:	push	{fp, lr}
   11eac:	mov	fp, sp
   11eb0:	bl	11ec0 <__mempcpy_chk@plt+0xe1c>
   11eb4:	cmp	r0, #0
   11eb8:	popne	{fp, pc}
   11ebc:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   11ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ec4:	add	fp, sp, #28
   11ec8:	push	{r2}		; (str r2, [sp, #-4]!)
   11ecc:	mov	sl, r1
   11ed0:	mov	r7, r0
   11ed4:	bl	11ba0 <__mempcpy_chk@plt+0xafc>
   11ed8:	sub	r4, r0, r7
   11edc:	bl	11bec <__mempcpy_chk@plt+0xb48>
   11ee0:	mov	r6, r0
   11ee4:	add	r5, r4, r0
   11ee8:	mov	r0, sl
   11eec:	bl	10fa8 <strlen@plt>
   11ef0:	mov	r9, r0
   11ef4:	cmp	r6, #0
   11ef8:	beq	11f20 <__mempcpy_chk@plt+0xe7c>
   11efc:	add	r0, r5, r7
   11f00:	mov	r4, #0
   11f04:	ldrb	r0, [r0, #-1]
   11f08:	cmp	r0, #47	; 0x2f
   11f0c:	beq	11f30 <__mempcpy_chk@plt+0xe8c>
   11f10:	ldrb	r0, [sl]
   11f14:	subs	r4, r0, #47	; 0x2f
   11f18:	movwne	r4, #47	; 0x2f
   11f1c:	b	11f30 <__mempcpy_chk@plt+0xe8c>
   11f20:	ldrb	r0, [sl]
   11f24:	mov	r4, #0
   11f28:	cmp	r0, #47	; 0x2f
   11f2c:	movweq	r4, #46	; 0x2e
   11f30:	uxtb	r8, r4
   11f34:	add	r0, r9, r5
   11f38:	cmp	r8, #0
   11f3c:	movwne	r8, #1
   11f40:	add	r0, r0, r8
   11f44:	add	r0, r0, #1
   11f48:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   11f4c:	mov	r6, r0
   11f50:	cmp	r0, #0
   11f54:	beq	11f94 <__mempcpy_chk@plt+0xef0>
   11f58:	mov	r0, r6
   11f5c:	mov	r1, r7
   11f60:	mov	r2, r5
   11f64:	mvn	r3, #0
   11f68:	bl	110a4 <__mempcpy_chk@plt>
   11f6c:	ldr	r1, [sp]
   11f70:	strb	r4, [r0], r8
   11f74:	mov	r2, r9
   11f78:	mvn	r3, #0
   11f7c:	cmp	r1, #0
   11f80:	strne	r0, [r1]
   11f84:	mov	r1, sl
   11f88:	bl	110a4 <__mempcpy_chk@plt>
   11f8c:	mov	r1, #0
   11f90:	strb	r1, [r0]
   11f94:	mov	r0, r6
   11f98:	sub	sp, fp, #28
   11f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fa0:	push	{r4, r5, r6, sl, fp, lr}
   11fa4:	add	fp, sp, #16
   11fa8:	mov	r4, r0
   11fac:	bl	10fb4 <__errno_location@plt>
   11fb0:	ldr	r6, [r0]
   11fb4:	mov	r5, r0
   11fb8:	mov	r0, r4
   11fbc:	bl	10e70 <free@plt>
   11fc0:	str	r6, [r5]
   11fc4:	pop	{r4, r5, r6, sl, fp, pc}
   11fc8:	push	{r4, r5, r6, r7, fp, lr}
   11fcc:	add	fp, sp, #16
   11fd0:	sub	sp, sp, #8
   11fd4:	mov	r4, r0
   11fd8:	ldr	r0, [r0, #4]
   11fdc:	mov	r5, r3
   11fe0:	mov	r6, r2
   11fe4:	ldr	r1, [r4, #8]
   11fe8:	cmp	r1, r0
   11fec:	bne	12008 <__mempcpy_chk@plt+0xf64>
   11ff0:	ldrd	r0, [r4, #16]
   11ff4:	cmp	r1, r0
   11ff8:	bne	12008 <__mempcpy_chk@plt+0xf64>
   11ffc:	ldr	r0, [r4, #36]	; 0x24
   12000:	cmp	r0, #0
   12004:	beq	12020 <__mempcpy_chk@plt+0xf7c>
   12008:	mov	r0, r4
   1200c:	mov	r2, r6
   12010:	mov	r3, r5
   12014:	sub	sp, fp, #16
   12018:	pop	{r4, r5, r6, r7, fp, lr}
   1201c:	b	11014 <fseeko64@plt>
   12020:	ldr	r7, [fp, #8]
   12024:	mov	r0, r4
   12028:	bl	10ff0 <fileno@plt>
   1202c:	mov	r2, r6
   12030:	mov	r3, r5
   12034:	str	r7, [sp]
   12038:	bl	10ee8 <lseek64@plt>
   1203c:	and	r2, r0, r1
   12040:	cmn	r2, #1
   12044:	beq	12064 <__mempcpy_chk@plt+0xfc0>
   12048:	strd	r0, [r4, #80]	; 0x50
   1204c:	ldr	r0, [r4]
   12050:	bic	r0, r0, #16
   12054:	str	r0, [r4]
   12058:	mov	r0, #0
   1205c:	sub	sp, fp, #16
   12060:	pop	{r4, r5, r6, r7, fp, pc}
   12064:	mvn	r0, #0
   12068:	sub	sp, fp, #16
   1206c:	pop	{r4, r5, r6, r7, fp, pc}
   12070:	push	{r4, r5, fp, lr}
   12074:	add	fp, sp, #8
   12078:	cmp	r0, #0
   1207c:	beq	12110 <__mempcpy_chk@plt+0x106c>
   12080:	mov	r1, #47	; 0x2f
   12084:	mov	r4, r0
   12088:	bl	1102c <strrchr@plt>
   1208c:	cmp	r0, #0
   12090:	mov	r5, r4
   12094:	addne	r5, r0, #1
   12098:	sub	r0, r5, r4
   1209c:	cmp	r0, #7
   120a0:	blt	120f4 <__mempcpy_chk@plt+0x1050>
   120a4:	movw	r1, #23726	; 0x5cae
   120a8:	sub	r0, r5, #7
   120ac:	mov	r2, #7
   120b0:	movt	r1, #1
   120b4:	bl	11068 <strncmp@plt>
   120b8:	cmp	r0, #0
   120bc:	bne	120f4 <__mempcpy_chk@plt+0x1050>
   120c0:	movw	r1, #23734	; 0x5cb6
   120c4:	mov	r0, r5
   120c8:	mov	r2, #3
   120cc:	movt	r1, #1
   120d0:	bl	11068 <strncmp@plt>
   120d4:	cmp	r0, #0
   120d8:	beq	120e4 <__mempcpy_chk@plt+0x1040>
   120dc:	mov	r4, r5
   120e0:	b	120f4 <__mempcpy_chk@plt+0x1050>
   120e4:	movw	r0, #28984	; 0x7138
   120e8:	add	r4, r5, #3
   120ec:	movt	r0, #2
   120f0:	str	r4, [r0]
   120f4:	movw	r0, #28988	; 0x713c
   120f8:	movt	r0, #2
   120fc:	str	r4, [r0]
   12100:	movw	r0, #29024	; 0x7160
   12104:	movt	r0, #2
   12108:	str	r4, [r0]
   1210c:	pop	{r4, r5, fp, pc}
   12110:	movw	r0, #29000	; 0x7148
   12114:	mov	r1, #55	; 0x37
   12118:	mov	r2, #1
   1211c:	movt	r0, #2
   12120:	ldr	r3, [r0]
   12124:	movw	r0, #23670	; 0x5c76
   12128:	movt	r0, #1
   1212c:	bl	10edc <fwrite@plt>
   12130:	bl	11074 <abort@plt>
   12134:	push	{r4, r5, r6, sl, fp, lr}
   12138:	add	fp, sp, #16
   1213c:	mov	r4, r0
   12140:	movw	r0, #29032	; 0x7168
   12144:	movt	r0, #2
   12148:	cmp	r4, #0
   1214c:	moveq	r4, r0
   12150:	bl	10fb4 <__errno_location@plt>
   12154:	ldr	r6, [r0]
   12158:	mov	r5, r0
   1215c:	mov	r0, r4
   12160:	mov	r1, #48	; 0x30
   12164:	bl	14d28 <__mempcpy_chk@plt+0x3c84>
   12168:	str	r6, [r5]
   1216c:	pop	{r4, r5, r6, sl, fp, pc}
   12170:	movw	r1, #29032	; 0x7168
   12174:	cmp	r0, #0
   12178:	movt	r1, #2
   1217c:	movne	r1, r0
   12180:	ldr	r0, [r1]
   12184:	bx	lr
   12188:	movw	r2, #29032	; 0x7168
   1218c:	cmp	r0, #0
   12190:	movt	r2, #2
   12194:	movne	r2, r0
   12198:	str	r1, [r2]
   1219c:	bx	lr
   121a0:	movw	r3, #29032	; 0x7168
   121a4:	cmp	r0, #0
   121a8:	and	r2, r2, #1
   121ac:	movt	r3, #2
   121b0:	movne	r3, r0
   121b4:	ubfx	r0, r1, #5, #3
   121b8:	and	r1, r1, #31
   121bc:	add	ip, r3, r0, lsl #2
   121c0:	mov	r0, #1
   121c4:	ldr	r3, [ip, #8]
   121c8:	and	r0, r0, r3, lsr r1
   121cc:	eor	r2, r0, r2
   121d0:	eor	r1, r3, r2, lsl r1
   121d4:	str	r1, [ip, #8]
   121d8:	bx	lr
   121dc:	movw	r2, #29032	; 0x7168
   121e0:	cmp	r0, #0
   121e4:	movt	r2, #2
   121e8:	movne	r2, r0
   121ec:	ldr	r0, [r2, #4]
   121f0:	str	r1, [r2, #4]
   121f4:	bx	lr
   121f8:	push	{fp, lr}
   121fc:	mov	fp, sp
   12200:	movw	r3, #29032	; 0x7168
   12204:	cmp	r0, #0
   12208:	movt	r3, #2
   1220c:	movne	r3, r0
   12210:	cmp	r1, #0
   12214:	mov	r0, #10
   12218:	cmpne	r2, #0
   1221c:	str	r0, [r3]
   12220:	bne	12228 <__mempcpy_chk@plt+0x1184>
   12224:	bl	11074 <abort@plt>
   12228:	str	r1, [r3, #40]	; 0x28
   1222c:	str	r2, [r3, #44]	; 0x2c
   12230:	pop	{fp, pc}
   12234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12238:	add	fp, sp, #28
   1223c:	sub	sp, sp, #20
   12240:	mov	r7, r0
   12244:	ldr	r0, [fp, #8]
   12248:	movw	r5, #29032	; 0x7168
   1224c:	mov	r8, r3
   12250:	mov	r9, r2
   12254:	mov	sl, r1
   12258:	movt	r5, #2
   1225c:	cmp	r0, #0
   12260:	movne	r5, r0
   12264:	bl	10fb4 <__errno_location@plt>
   12268:	ldr	r2, [r5, #40]	; 0x28
   1226c:	ldr	r3, [r5, #44]	; 0x2c
   12270:	mov	r4, r0
   12274:	ldm	r5, {r0, r1}
   12278:	add	r5, r5, #8
   1227c:	ldr	r6, [r4]
   12280:	stm	sp, {r0, r1, r5}
   12284:	mov	r0, r7
   12288:	mov	r1, sl
   1228c:	str	r2, [sp, #12]
   12290:	str	r3, [sp, #16]
   12294:	mov	r2, r9
   12298:	mov	r3, r8
   1229c:	bl	122ac <__mempcpy_chk@plt+0x1208>
   122a0:	str	r6, [r4]
   122a4:	sub	sp, fp, #28
   122a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122b0:	add	fp, sp, #28
   122b4:	sub	sp, sp, #156	; 0x9c
   122b8:	mov	r5, r0
   122bc:	add	r0, r2, #1
   122c0:	mov	r6, r1
   122c4:	mov	sl, r3
   122c8:	str	r2, [fp, #-80]	; 0xffffffb0
   122cc:	str	r0, [sp, #72]	; 0x48
   122d0:	ldr	r0, [fp, #12]
   122d4:	and	r1, r0, #1
   122d8:	str	r1, [sp, #36]	; 0x24
   122dc:	and	r1, r0, #4
   122e0:	str	r1, [sp, #32]
   122e4:	ubfx	r9, r0, #1, #1
   122e8:	bl	10ef4 <__ctype_get_mb_cur_max@plt>
   122ec:	str	r0, [sp, #40]	; 0x28
   122f0:	ldr	r0, [fp, #24]
   122f4:	ldr	r7, [fp, #8]
   122f8:	mov	r1, #0
   122fc:	str	r5, [fp, #-84]	; 0xffffffac
   12300:	str	r1, [fp, #-56]	; 0xffffffc8
   12304:	mov	r1, #0
   12308:	str	r1, [sp, #60]	; 0x3c
   1230c:	mov	r1, #1
   12310:	str	r1, [fp, #-48]	; 0xffffffd0
   12314:	str	r0, [sp, #80]	; 0x50
   12318:	ldr	r0, [fp, #20]
   1231c:	str	r0, [sp, #76]	; 0x4c
   12320:	mov	r0, #0
   12324:	str	r0, [sp, #56]	; 0x38
   12328:	mov	r0, #0
   1232c:	str	r0, [fp, #-88]	; 0xffffffa8
   12330:	mov	r0, #0
   12334:	str	r0, [fp, #-72]	; 0xffffffb8
   12338:	mov	r0, #0
   1233c:	cmp	r7, #10
   12340:	bhi	132d4 <__mempcpy_chk@plt+0x2230>
   12344:	add	r1, pc, #24
   12348:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1234c:	mov	r4, r6
   12350:	mov	r8, #0
   12354:	mov	r2, #1
   12358:	mov	r3, #0
   1235c:	mov	lr, sl
   12360:	ldr	pc, [r1, r7, lsl #2]
   12364:	andeq	r2, r1, r8, lsr #8
   12368:	andeq	r2, r1, ip, ror r4
   1236c:	andeq	r2, r1, ip, lsr r4
   12370:	andeq	r2, r1, r0, lsr #8
   12374:	andeq	r2, r1, r0, ror r4
   12378:	andeq	r2, r1, r4, lsr #9
   1237c:	andeq	r2, r1, ip, asr #8
   12380:	andeq	r2, r1, r8, lsr #10
   12384:	muleq	r1, r0, r3
   12388:	muleq	r1, r0, r3
   1238c:			; <UNDEFINED> instruction: 0x000123b8
   12390:	movw	r0, #23818	; 0x5d0a
   12394:	mov	r1, r7
   12398:	movt	r0, #1
   1239c:	bl	13cdc <__mempcpy_chk@plt+0x2c38>
   123a0:	str	r0, [sp, #76]	; 0x4c
   123a4:	movw	r0, #23820	; 0x5d0c
   123a8:	mov	r1, r7
   123ac:	movt	r0, #1
   123b0:	bl	13cdc <__mempcpy_chk@plt+0x2c38>
   123b4:	str	r0, [sp, #80]	; 0x50
   123b8:	mov	r8, #0
   123bc:	tst	r9, #1
   123c0:	bne	123f8 <__mempcpy_chk@plt+0x1354>
   123c4:	ldr	r0, [sp, #76]	; 0x4c
   123c8:	ldrb	r0, [r0]
   123cc:	cmp	r0, #0
   123d0:	beq	123f8 <__mempcpy_chk@plt+0x1354>
   123d4:	ldr	r1, [sp, #76]	; 0x4c
   123d8:	mov	r8, #0
   123dc:	add	r1, r1, #1
   123e0:	cmp	r8, r4
   123e4:	strbcc	r0, [r5, r8]
   123e8:	ldrb	r0, [r1, r8]
   123ec:	add	r8, r8, #1
   123f0:	cmp	r0, #0
   123f4:	bne	123e0 <__mempcpy_chk@plt+0x133c>
   123f8:	ldr	r6, [sp, #80]	; 0x50
   123fc:	mov	r0, r6
   12400:	bl	10fa8 <strlen@plt>
   12404:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12408:	str	r0, [fp, #-72]	; 0xffffffb8
   1240c:	str	r6, [fp, #-88]	; 0xffffffa8
   12410:	mov	r2, #1
   12414:	mov	r3, r9
   12418:	mov	lr, sl
   1241c:	b	12528 <__mempcpy_chk@plt+0x1484>
   12420:	mov	r0, #1
   12424:	b	1247c <__mempcpy_chk@plt+0x13d8>
   12428:	mov	r7, #0
   1242c:	mov	r8, #0
   12430:	mov	r2, r0
   12434:	mov	r3, #0
   12438:	b	12528 <__mempcpy_chk@plt+0x1484>
   1243c:	tst	r9, #1
   12440:	bne	1247c <__mempcpy_chk@plt+0x13d8>
   12444:	mov	r2, r0
   12448:	b	124d4 <__mempcpy_chk@plt+0x1430>
   1244c:	mov	r0, #1
   12450:	mov	r8, #0
   12454:	mov	r7, #5
   12458:	mov	r2, #1
   1245c:	str	r0, [fp, #-72]	; 0xffffffb8
   12460:	movw	r0, #23816	; 0x5d08
   12464:	movt	r0, #1
   12468:	str	r0, [fp, #-88]	; 0xffffffa8
   1246c:	b	1249c <__mempcpy_chk@plt+0x13f8>
   12470:	mov	r2, #1
   12474:	tst	r9, #1
   12478:	beq	124d4 <__mempcpy_chk@plt+0x1430>
   1247c:	mov	r1, #1
   12480:	mov	r8, #0
   12484:	mov	r7, #2
   12488:	mov	r2, r0
   1248c:	str	r1, [fp, #-72]	; 0xffffffb8
   12490:	movw	r1, #23820	; 0x5d0c
   12494:	movt	r1, #1
   12498:	str	r1, [fp, #-88]	; 0xffffffa8
   1249c:	mov	r3, #1
   124a0:	b	12528 <__mempcpy_chk@plt+0x1484>
   124a4:	tst	r9, #1
   124a8:	beq	124f8 <__mempcpy_chk@plt+0x1454>
   124ac:	mov	r0, #1
   124b0:	mov	r8, #0
   124b4:	mov	r2, #1
   124b8:	mov	r3, #1
   124bc:	mov	r7, #5
   124c0:	str	r0, [fp, #-72]	; 0xffffffb8
   124c4:	movw	r0, #23816	; 0x5d08
   124c8:	movt	r0, #1
   124cc:	str	r0, [fp, #-88]	; 0xffffffa8
   124d0:	b	12528 <__mempcpy_chk@plt+0x1484>
   124d4:	cmp	r4, #0
   124d8:	mov	r8, #1
   124dc:	mov	r3, #0
   124e0:	mov	r7, #2
   124e4:	movne	r0, #39	; 0x27
   124e8:	strbne	r0, [r5]
   124ec:	movw	r0, #23820	; 0x5d0c
   124f0:	movt	r0, #1
   124f4:	b	1251c <__mempcpy_chk@plt+0x1478>
   124f8:	cmp	r4, #0
   124fc:	mov	r8, #1
   12500:	mov	r2, #1
   12504:	mov	r7, #5
   12508:	mov	r3, #0
   1250c:	movne	r0, #34	; 0x22
   12510:	strbne	r0, [r5]
   12514:	movw	r0, #23816	; 0x5d08
   12518:	movt	r0, #1
   1251c:	str	r0, [fp, #-88]	; 0xffffffa8
   12520:	mov	r0, #1
   12524:	str	r0, [fp, #-72]	; 0xffffffb8
   12528:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1252c:	eor	r6, r3, #1
   12530:	str	r7, [fp, #-68]	; 0xffffffbc
   12534:	str	r3, [fp, #-76]	; 0xffffffb4
   12538:	str	r2, [sp, #84]	; 0x54
   1253c:	str	r6, [sp, #92]	; 0x5c
   12540:	cmp	r0, #0
   12544:	movwne	r0, #1
   12548:	and	r1, r0, r3
   1254c:	and	r1, r2, r1
   12550:	str	r1, [sp, #48]	; 0x30
   12554:	sub	r1, r7, #2
   12558:	clz	r1, r1
   1255c:	lsr	r1, r1, #5
   12560:	and	r1, r1, r3
   12564:	str	r1, [sp, #64]	; 0x40
   12568:	subs	r1, r7, #2
   1256c:	mov	r7, #0
   12570:	movwne	r1, #1
   12574:	orr	r6, r1, r6
   12578:	and	r1, r1, r2
   1257c:	and	r0, r0, r1
   12580:	str	r6, [sp, #68]	; 0x44
   12584:	str	r0, [fp, #-60]	; 0xffffffc4
   12588:	orr	r0, r1, r3
   1258c:	ldr	r1, [fp, #16]
   12590:	eor	r0, r0, #1
   12594:	clz	r1, r1
   12598:	lsr	r1, r1, #5
   1259c:	orr	r0, r1, r0
   125a0:	str	r0, [fp, #-64]	; 0xffffffc0
   125a4:	eor	r0, r2, #1
   125a8:	str	r0, [sp, #52]	; 0x34
   125ac:	cmn	lr, #1
   125b0:	beq	125c0 <__mempcpy_chk@plt+0x151c>
   125b4:	cmp	r7, lr
   125b8:	bne	125cc <__mempcpy_chk@plt+0x1528>
   125bc:	b	13114 <__mempcpy_chk@plt+0x2070>
   125c0:	ldrb	r0, [ip, r7]
   125c4:	cmp	r0, #0
   125c8:	beq	1311c <__mempcpy_chk@plt+0x2078>
   125cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   125d0:	mov	sl, #0
   125d4:	cmp	r0, #0
   125d8:	beq	12610 <__mempcpy_chk@plt+0x156c>
   125dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   125e0:	add	r5, r7, r0
   125e4:	cmp	r0, #2
   125e8:	bcc	12604 <__mempcpy_chk@plt+0x1560>
   125ec:	cmn	lr, #1
   125f0:	bne	12604 <__mempcpy_chk@plt+0x1560>
   125f4:	mov	r0, ip
   125f8:	bl	10fa8 <strlen@plt>
   125fc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12600:	mov	lr, r0
   12604:	cmp	r5, lr
   12608:	bls	12618 <__mempcpy_chk@plt+0x1574>
   1260c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12610:	mov	r0, #0
   12614:	b	12664 <__mempcpy_chk@plt+0x15c0>
   12618:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1261c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12620:	add	r0, ip, r7
   12624:	mov	r6, r4
   12628:	mov	r4, lr
   1262c:	bl	10f9c <bcmp@plt>
   12630:	ldr	r2, [sp, #92]	; 0x5c
   12634:	cmp	r0, #0
   12638:	ldr	r5, [fp, #-84]	; 0xffffffac
   1263c:	mov	r1, r0
   12640:	movwne	r1, #1
   12644:	orr	r1, r1, r2
   12648:	tst	r1, #1
   1264c:	beq	131a4 <__mempcpy_chk@plt+0x2100>
   12650:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12654:	clz	r0, r0
   12658:	mov	lr, r4
   1265c:	mov	r4, r6
   12660:	lsr	r0, r0, #5
   12664:	str	r0, [fp, #-52]	; 0xffffffcc
   12668:	ldrb	r6, [ip, r7]
   1266c:	cmp	r6, #126	; 0x7e
   12670:	bhi	12ba0 <__mempcpy_chk@plt+0x1afc>
   12674:	add	r3, pc, #16
   12678:	mov	r9, #1
   1267c:	mov	r2, #110	; 0x6e
   12680:	mov	r0, #97	; 0x61
   12684:	mov	r1, #0
   12688:	ldr	pc, [r3, r6, lsl #2]
   1268c:	andeq	r2, r1, r0, lsl #20
   12690:	andeq	r2, r1, r0, lsr #23
   12694:	andeq	r2, r1, r0, lsr #23
   12698:	andeq	r2, r1, r0, lsr #23
   1269c:	andeq	r2, r1, r0, lsr #23
   126a0:	andeq	r2, r1, r0, lsr #23
   126a4:	andeq	r2, r1, r0, lsr #23
   126a8:	andeq	r2, r1, ip, ror ip
   126ac:	andeq	r2, r1, r0, ror #19
   126b0:	ldrdeq	r2, [r1], -r8
   126b4:	andeq	r2, r1, ip, ror #19
   126b8:	andeq	r2, r1, r8, lsl #22
   126bc:	ldrdeq	r2, [r1], -r0
   126c0:	andeq	r2, r1, r8, ror #19
   126c4:	andeq	r2, r1, r0, lsr #23
   126c8:	andeq	r2, r1, r0, lsr #23
   126cc:	andeq	r2, r1, r0, lsr #23
   126d0:	andeq	r2, r1, r0, lsr #23
   126d4:	andeq	r2, r1, r0, lsr #23
   126d8:	andeq	r2, r1, r0, lsr #23
   126dc:	andeq	r2, r1, r0, lsr #23
   126e0:	andeq	r2, r1, r0, lsr #23
   126e4:	andeq	r2, r1, r0, lsr #23
   126e8:	andeq	r2, r1, r0, lsr #23
   126ec:	andeq	r2, r1, r0, lsr #23
   126f0:	andeq	r2, r1, r0, lsr #23
   126f4:	andeq	r2, r1, r0, lsr #23
   126f8:	andeq	r2, r1, r0, lsr #23
   126fc:	andeq	r2, r1, r0, lsr #23
   12700:	andeq	r2, r1, r0, lsr #23
   12704:	andeq	r2, r1, r0, lsr #23
   12708:	andeq	r2, r1, r0, lsr #23
   1270c:	andeq	r2, r1, r4, lsl #19
   12710:	andeq	r2, r1, r8, lsl #19
   12714:	andeq	r2, r1, r8, lsl #19
   12718:	andeq	r2, r1, r0, ror r9
   1271c:	andeq	r2, r1, r8, lsl #19
   12720:	andeq	r2, r1, r8, lsl #17
   12724:	andeq	r2, r1, r8, lsl #19
   12728:	andeq	r2, r1, r0, lsl fp
   1272c:	andeq	r2, r1, r8, lsl #19
   12730:	andeq	r2, r1, r8, lsl #19
   12734:	andeq	r2, r1, r8, lsl #19
   12738:	andeq	r2, r1, r8, lsl #17
   1273c:	andeq	r2, r1, r8, lsl #17
   12740:	andeq	r2, r1, r8, lsl #17
   12744:	andeq	r2, r1, r8, lsl #17
   12748:	andeq	r2, r1, r8, lsl #17
   1274c:	andeq	r2, r1, r8, lsl #17
   12750:	andeq	r2, r1, r8, lsl #17
   12754:	andeq	r2, r1, r8, lsl #17
   12758:	andeq	r2, r1, r8, lsl #17
   1275c:	andeq	r2, r1, r8, lsl #17
   12760:	andeq	r2, r1, r8, lsl #17
   12764:	andeq	r2, r1, r8, lsl #17
   12768:	andeq	r2, r1, r8, lsl #17
   1276c:	andeq	r2, r1, r8, lsl #17
   12770:	andeq	r2, r1, r8, lsl #17
   12774:	andeq	r2, r1, r8, lsl #17
   12778:	andeq	r2, r1, r8, lsl #19
   1277c:	andeq	r2, r1, r8, lsl #19
   12780:	andeq	r2, r1, r8, lsl #19
   12784:	andeq	r2, r1, r8, lsl #19
   12788:	ldrdeq	r2, [r1], -r8
   1278c:	andeq	r2, r1, r0, lsr #23
   12790:	andeq	r2, r1, r8, lsl #17
   12794:	andeq	r2, r1, r8, lsl #17
   12798:	andeq	r2, r1, r8, lsl #17
   1279c:	andeq	r2, r1, r8, lsl #17
   127a0:	andeq	r2, r1, r8, lsl #17
   127a4:	andeq	r2, r1, r8, lsl #17
   127a8:	andeq	r2, r1, r8, lsl #17
   127ac:	andeq	r2, r1, r8, lsl #17
   127b0:	andeq	r2, r1, r8, lsl #17
   127b4:	andeq	r2, r1, r8, lsl #17
   127b8:	andeq	r2, r1, r8, lsl #17
   127bc:	andeq	r2, r1, r8, lsl #17
   127c0:	andeq	r2, r1, r8, lsl #17
   127c4:	andeq	r2, r1, r8, lsl #17
   127c8:	andeq	r2, r1, r8, lsl #17
   127cc:	andeq	r2, r1, r8, lsl #17
   127d0:	andeq	r2, r1, r8, lsl #17
   127d4:	andeq	r2, r1, r8, lsl #17
   127d8:	andeq	r2, r1, r8, lsl #17
   127dc:	andeq	r2, r1, r8, lsl #17
   127e0:	andeq	r2, r1, r8, lsl #17
   127e4:	andeq	r2, r1, r8, lsl #17
   127e8:	andeq	r2, r1, r8, lsl #17
   127ec:	andeq	r2, r1, r8, lsl #17
   127f0:	andeq	r2, r1, r8, lsl #17
   127f4:	andeq	r2, r1, r8, lsl #17
   127f8:	andeq	r2, r1, r8, lsl #19
   127fc:			; <UNDEFINED> instruction: 0x000129b0
   12800:	andeq	r2, r1, r8, lsl #17
   12804:	andeq	r2, r1, r8, lsl #19
   12808:	andeq	r2, r1, r8, lsl #17
   1280c:	andeq	r2, r1, r8, lsl #19
   12810:	andeq	r2, r1, r8, lsl #17
   12814:	andeq	r2, r1, r8, lsl #17
   12818:	andeq	r2, r1, r8, lsl #17
   1281c:	andeq	r2, r1, r8, lsl #17
   12820:	andeq	r2, r1, r8, lsl #17
   12824:	andeq	r2, r1, r8, lsl #17
   12828:	andeq	r2, r1, r8, lsl #17
   1282c:	andeq	r2, r1, r8, lsl #17
   12830:	andeq	r2, r1, r8, lsl #17
   12834:	andeq	r2, r1, r8, lsl #17
   12838:	andeq	r2, r1, r8, lsl #17
   1283c:	andeq	r2, r1, r8, lsl #17
   12840:	andeq	r2, r1, r8, lsl #17
   12844:	andeq	r2, r1, r8, lsl #17
   12848:	andeq	r2, r1, r8, lsl #17
   1284c:	andeq	r2, r1, r8, lsl #17
   12850:	andeq	r2, r1, r8, lsl #17
   12854:	andeq	r2, r1, r8, lsl #17
   12858:	andeq	r2, r1, r8, lsl #17
   1285c:	andeq	r2, r1, r8, lsl #17
   12860:	andeq	r2, r1, r8, lsl #17
   12864:	andeq	r2, r1, r8, lsl #17
   12868:	andeq	r2, r1, r8, lsl #17
   1286c:	andeq	r2, r1, r8, lsl #17
   12870:	andeq	r2, r1, r8, lsl #17
   12874:	andeq	r2, r1, r8, lsl #17
   12878:	andeq	r2, r1, r4, asr #18
   1287c:	andeq	r2, r1, r8, lsl #19
   12880:	andeq	r2, r1, r4, asr #18
   12884:	andeq	r2, r1, r0, ror r9
   12888:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1288c:	tst	r0, #1
   12890:	bne	128bc <__mempcpy_chk@plt+0x1818>
   12894:	ldr	r1, [fp, #16]
   12898:	ubfx	r0, r6, #5, #3
   1289c:	mov	r2, #1
   128a0:	ldr	r0, [r1, r0, lsl #2]
   128a4:	and	r1, r6, #31
   128a8:	tst	r0, r2, lsl r1
   128ac:	beq	128bc <__mempcpy_chk@plt+0x1818>
   128b0:	mov	r0, r6
   128b4:	mov	r1, r9
   128b8:	b	128d0 <__mempcpy_chk@plt+0x182c>
   128bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   128c0:	mov	r1, r9
   128c4:	cmp	r0, #0
   128c8:	mov	r0, r6
   128cc:	beq	12c10 <__mempcpy_chk@plt+0x1b6c>
   128d0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   128d4:	tst	r2, #1
   128d8:	bne	131e0 <__mempcpy_chk@plt+0x213c>
   128dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   128e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   128e4:	subs	r2, r2, #2
   128e8:	movwne	r2, #1
   128ec:	orr	r2, r2, r3
   128f0:	tst	r2, #1
   128f4:	bne	12930 <__mempcpy_chk@plt+0x188c>
   128f8:	cmp	r8, r4
   128fc:	movcc	r2, #39	; 0x27
   12900:	strbcc	r2, [r5, r8]
   12904:	add	r2, r8, #1
   12908:	cmp	r2, r4
   1290c:	movcc	r3, #36	; 0x24
   12910:	strbcc	r3, [r5, r2]
   12914:	add	r2, r8, #2
   12918:	add	r8, r8, #3
   1291c:	cmp	r2, r4
   12920:	movcc	r3, #39	; 0x27
   12924:	strbcc	r3, [r5, r2]
   12928:	mov	r2, #1
   1292c:	str	r2, [fp, #-56]	; 0xffffffc8
   12930:	cmp	r8, r4
   12934:	movcc	r2, #92	; 0x5c
   12938:	strbcc	r2, [r5, r8]
   1293c:	add	r8, r8, #1
   12940:	b	12c54 <__mempcpy_chk@plt+0x1bb0>
   12944:	cmp	lr, #1
   12948:	beq	12970 <__mempcpy_chk@plt+0x18cc>
   1294c:	mov	r9, #0
   12950:	cmn	lr, #1
   12954:	bne	1297c <__mempcpy_chk@plt+0x18d8>
   12958:	ldrb	r0, [ip, #1]
   1295c:	cmp	r0, #0
   12960:	beq	12970 <__mempcpy_chk@plt+0x18cc>
   12964:	mvn	lr, #0
   12968:	mov	sl, #0
   1296c:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12970:	mov	r9, #0
   12974:	cmp	r7, #0
   12978:	beq	12984 <__mempcpy_chk@plt+0x18e0>
   1297c:	mov	sl, #0
   12980:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12984:	mov	r1, #1
   12988:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1298c:	cmp	r0, #2
   12990:	bne	129a8 <__mempcpy_chk@plt+0x1904>
   12994:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12998:	mov	r9, r1
   1299c:	tst	r0, #1
   129a0:	beq	12888 <__mempcpy_chk@plt+0x17e4>
   129a4:	b	131e0 <__mempcpy_chk@plt+0x213c>
   129a8:	mov	r9, r1
   129ac:	b	12888 <__mempcpy_chk@plt+0x17e4>
   129b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   129b4:	cmp	r0, #2
   129b8:	bne	12bf4 <__mempcpy_chk@plt+0x1b50>
   129bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   129c0:	tst	r0, #1
   129c4:	bne	131e0 <__mempcpy_chk@plt+0x213c>
   129c8:	mov	sl, #0
   129cc:	b	12c08 <__mempcpy_chk@plt+0x1b64>
   129d0:	mov	r0, #102	; 0x66
   129d4:	b	12c7c <__mempcpy_chk@plt+0x1bd8>
   129d8:	mov	r2, #116	; 0x74
   129dc:	b	129ec <__mempcpy_chk@plt+0x1948>
   129e0:	mov	r0, #98	; 0x62
   129e4:	b	12c7c <__mempcpy_chk@plt+0x1bd8>
   129e8:	mov	r2, #114	; 0x72
   129ec:	ldr	r0, [sp, #68]	; 0x44
   129f0:	tst	r0, #1
   129f4:	mov	r0, r2
   129f8:	bne	12c7c <__mempcpy_chk@plt+0x1bd8>
   129fc:	b	131e0 <__mempcpy_chk@plt+0x213c>
   12a00:	ldr	r0, [sp, #84]	; 0x54
   12a04:	tst	r0, #1
   12a08:	beq	12c98 <__mempcpy_chk@plt+0x1bf4>
   12a0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12a10:	tst	r0, #1
   12a14:	bne	132cc <__mempcpy_chk@plt+0x2228>
   12a18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a1c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12a20:	subs	r0, r0, #2
   12a24:	movwne	r0, #1
   12a28:	orr	r0, r0, r1
   12a2c:	tst	r0, #1
   12a30:	bne	12a6c <__mempcpy_chk@plt+0x19c8>
   12a34:	cmp	r8, r4
   12a38:	movcc	r0, #39	; 0x27
   12a3c:	strbcc	r0, [r5, r8]
   12a40:	add	r0, r8, #1
   12a44:	cmp	r0, r4
   12a48:	movcc	r1, #36	; 0x24
   12a4c:	strbcc	r1, [r5, r0]
   12a50:	add	r0, r8, #2
   12a54:	add	r8, r8, #3
   12a58:	cmp	r0, r4
   12a5c:	movcc	r1, #39	; 0x27
   12a60:	strbcc	r1, [r5, r0]
   12a64:	mov	r0, #1
   12a68:	str	r0, [fp, #-56]	; 0xffffffc8
   12a6c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12a70:	cmp	r8, r4
   12a74:	mov	r9, #0
   12a78:	mov	sl, #1
   12a7c:	mov	r6, #48	; 0x30
   12a80:	movcc	r0, #92	; 0x5c
   12a84:	strbcc	r0, [r5, r8]
   12a88:	add	r0, r8, #1
   12a8c:	cmp	r1, #2
   12a90:	beq	12e60 <__mempcpy_chk@plt+0x1dbc>
   12a94:	add	r1, r7, #1
   12a98:	cmp	r1, lr
   12a9c:	bcs	12e60 <__mempcpy_chk@plt+0x1dbc>
   12aa0:	ldrb	r1, [ip, r1]
   12aa4:	sub	r1, r1, #48	; 0x30
   12aa8:	uxtb	r1, r1
   12aac:	cmp	r1, #9
   12ab0:	bhi	12e60 <__mempcpy_chk@plt+0x1dbc>
   12ab4:	cmp	r0, r4
   12ab8:	movcc	r1, #48	; 0x30
   12abc:	strbcc	r1, [r5, r0]
   12ac0:	add	r0, r8, #2
   12ac4:	add	r8, r8, #3
   12ac8:	cmp	r0, r4
   12acc:	movcc	r1, #48	; 0x30
   12ad0:	strbcc	r1, [r5, r0]
   12ad4:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12ad8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12adc:	mov	sl, #0
   12ae0:	mov	r6, #63	; 0x3f
   12ae4:	cmp	r0, #5
   12ae8:	beq	12e68 <__mempcpy_chk@plt+0x1dc4>
   12aec:	cmp	r0, #2
   12af0:	bne	12f10 <__mempcpy_chk@plt+0x1e6c>
   12af4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12af8:	mov	r9, #0
   12afc:	tst	r0, #1
   12b00:	beq	12888 <__mempcpy_chk@plt+0x17e4>
   12b04:	b	131e0 <__mempcpy_chk@plt+0x213c>
   12b08:	mov	r0, #118	; 0x76
   12b0c:	b	12c7c <__mempcpy_chk@plt+0x1bd8>
   12b10:	mov	r0, #1
   12b14:	mov	r6, #39	; 0x27
   12b18:	str	r0, [sp, #60]	; 0x3c
   12b1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b20:	cmp	r0, #2
   12b24:	bne	12cb4 <__mempcpy_chk@plt+0x1c10>
   12b28:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b2c:	tst	r0, #1
   12b30:	bne	131e0 <__mempcpy_chk@plt+0x213c>
   12b34:	ldr	r2, [sp, #56]	; 0x38
   12b38:	clz	r1, r4
   12b3c:	mov	sl, #0
   12b40:	mov	r9, #1
   12b44:	lsr	r1, r1, #5
   12b48:	cmp	r2, #0
   12b4c:	mov	r0, r2
   12b50:	movwne	r0, #1
   12b54:	orrs	r0, r0, r1
   12b58:	moveq	r2, r4
   12b5c:	moveq	r4, r0
   12b60:	cmp	r8, r4
   12b64:	str	r2, [sp, #56]	; 0x38
   12b68:	movcc	r0, #39	; 0x27
   12b6c:	strbcc	r0, [r5, r8]
   12b70:	add	r0, r8, #1
   12b74:	cmp	r0, r4
   12b78:	movcc	r1, #92	; 0x5c
   12b7c:	strbcc	r1, [r5, r0]
   12b80:	add	r0, r8, #2
   12b84:	add	r8, r8, #3
   12b88:	cmp	r0, r4
   12b8c:	movcc	r1, #39	; 0x27
   12b90:	strbcc	r1, [r5, r0]
   12b94:	mov	r0, #0
   12b98:	str	r0, [fp, #-56]	; 0xffffffc8
   12b9c:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12ba0:	ldr	r0, [sp, #40]	; 0x28
   12ba4:	str	r4, [sp, #88]	; 0x58
   12ba8:	cmp	r0, #1
   12bac:	bne	12cbc <__mempcpy_chk@plt+0x1c18>
   12bb0:	str	lr, [sp, #28]
   12bb4:	bl	10f84 <__ctype_b_loc@plt>
   12bb8:	ldr	r0, [r0]
   12bbc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12bc0:	mov	r2, #1
   12bc4:	add	r0, r0, r6, lsl #1
   12bc8:	ldrb	r0, [r0, #1]
   12bcc:	ubfx	r9, r0, #6, #1
   12bd0:	ldr	r0, [sp, #52]	; 0x34
   12bd4:	cmp	r2, #1
   12bd8:	orr	r0, r9, r0
   12bdc:	bhi	12f18 <__mempcpy_chk@plt+0x1e74>
   12be0:	tst	r0, #1
   12be4:	beq	12f18 <__mempcpy_chk@plt+0x1e74>
   12be8:	ldr	lr, [sp, #28]
   12bec:	ldr	r4, [sp, #88]	; 0x58
   12bf0:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12bf4:	ldr	r1, [sp, #48]	; 0x30
   12bf8:	mov	sl, #0
   12bfc:	mov	r0, #92	; 0x5c
   12c00:	cmp	r1, #0
   12c04:	beq	12c7c <__mempcpy_chk@plt+0x1bd8>
   12c08:	mov	r6, #92	; 0x5c
   12c0c:	mov	r9, #0
   12c10:	cmp	sl, #0
   12c14:	bne	12c4c <__mempcpy_chk@plt+0x1ba8>
   12c18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12c1c:	tst	r0, #1
   12c20:	beq	12c4c <__mempcpy_chk@plt+0x1ba8>
   12c24:	cmp	r8, r4
   12c28:	movcc	r0, #39	; 0x27
   12c2c:	strbcc	r0, [r5, r8]
   12c30:	add	r0, r8, #1
   12c34:	add	r8, r8, #2
   12c38:	cmp	r0, r4
   12c3c:	movcc	r1, #39	; 0x27
   12c40:	strbcc	r1, [r5, r0]
   12c44:	mov	r0, #0
   12c48:	str	r0, [fp, #-56]	; 0xffffffc8
   12c4c:	mov	r1, r9
   12c50:	mov	r0, r6
   12c54:	cmp	r8, r4
   12c58:	strbcc	r0, [r5, r8]
   12c5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12c60:	add	r8, r8, #1
   12c64:	and	r0, r0, r1
   12c68:	str	r0, [fp, #-48]	; 0xffffffd0
   12c6c:	add	r7, r7, #1
   12c70:	cmn	lr, #1
   12c74:	bne	125b4 <__mempcpy_chk@plt+0x1510>
   12c78:	b	125c0 <__mempcpy_chk@plt+0x151c>
   12c7c:	ldr	r1, [sp, #84]	; 0x54
   12c80:	mov	sl, #0
   12c84:	mov	r9, #0
   12c88:	tst	r1, #1
   12c8c:	mov	r1, #0
   12c90:	beq	12888 <__mempcpy_chk@plt+0x17e4>
   12c94:	b	128d0 <__mempcpy_chk@plt+0x182c>
   12c98:	ldr	r0, [sp, #36]	; 0x24
   12c9c:	mov	r6, #0
   12ca0:	mov	sl, #0
   12ca4:	mov	r9, #0
   12ca8:	cmp	r0, #0
   12cac:	beq	12888 <__mempcpy_chk@plt+0x17e4>
   12cb0:	b	12c6c <__mempcpy_chk@plt+0x1bc8>
   12cb4:	mov	r9, #1
   12cb8:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12cbc:	mov	r0, #0
   12cc0:	cmn	lr, #1
   12cc4:	sub	r4, fp, #40	; 0x28
   12cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   12ccc:	str	r0, [fp, #-40]	; 0xffffffd8
   12cd0:	bne	12ce4 <__mempcpy_chk@plt+0x1c40>
   12cd4:	mov	r0, ip
   12cd8:	bl	10fa8 <strlen@plt>
   12cdc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12ce0:	mov	lr, r0
   12ce4:	ldr	r0, [sp, #72]	; 0x48
   12ce8:	mov	r9, #1
   12cec:	mov	r2, #0
   12cf0:	str	lr, [sp, #28]
   12cf4:	add	r0, r0, r7
   12cf8:	str	r0, [sp, #20]
   12cfc:	b	12d40 <__mempcpy_chk@plt+0x1c9c>
   12d00:	ldr	r5, [sp, #44]	; 0x2c
   12d04:	add	r5, r0, r5
   12d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d0c:	bl	10ed0 <iswprint@plt>
   12d10:	cmp	r0, #0
   12d14:	sub	r4, fp, #40	; 0x28
   12d18:	movwne	r0, #1
   12d1c:	and	r9, r9, r0
   12d20:	mov	r0, r4
   12d24:	bl	10ea0 <mbsinit@plt>
   12d28:	mov	r2, r5
   12d2c:	ldr	lr, [sp, #28]
   12d30:	ldr	r5, [fp, #-84]	; 0xffffffac
   12d34:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12d38:	cmp	r0, #0
   12d3c:	bne	12bd0 <__mempcpy_chk@plt+0x1b2c>
   12d40:	add	r0, r2, r7
   12d44:	str	r2, [sp, #44]	; 0x2c
   12d48:	mov	r3, r4
   12d4c:	add	r1, ip, r0
   12d50:	str	r0, [sp, #24]
   12d54:	sub	r2, lr, r0
   12d58:	sub	r0, fp, #44	; 0x2c
   12d5c:	bl	14f58 <__mempcpy_chk@plt+0x3eb4>
   12d60:	cmp	r0, #0
   12d64:	beq	13108 <__mempcpy_chk@plt+0x2064>
   12d68:	cmn	r0, #1
   12d6c:	beq	130c4 <__mempcpy_chk@plt+0x2020>
   12d70:	ldr	lr, [sp, #28]
   12d74:	cmn	r0, #2
   12d78:	beq	130cc <__mempcpy_chk@plt+0x2028>
   12d7c:	ldr	r2, [sp, #64]	; 0x40
   12d80:	ldr	r4, [sp, #88]	; 0x58
   12d84:	ldr	ip, [sp, #84]	; 0x54
   12d88:	cmp	r0, #2
   12d8c:	mov	r1, #0
   12d90:	movwcc	r1, #1
   12d94:	eor	r2, r2, #1
   12d98:	orrs	r1, r2, r1
   12d9c:	bne	12d00 <__mempcpy_chk@plt+0x1c5c>
   12da0:	ldr	r1, [sp, #44]	; 0x2c
   12da4:	ldr	r2, [sp, #20]
   12da8:	add	r1, r2, r1
   12dac:	sub	r2, r0, #1
   12db0:	b	12dc0 <__mempcpy_chk@plt+0x1d1c>
   12db4:	add	r1, r1, #1
   12db8:	subs	r2, r2, #1
   12dbc:	beq	12d00 <__mempcpy_chk@plt+0x1c5c>
   12dc0:	ldrb	r3, [r1]
   12dc4:	sub	r3, r3, #91	; 0x5b
   12dc8:	cmp	r3, #33	; 0x21
   12dcc:	bhi	12db4 <__mempcpy_chk@plt+0x1d10>
   12dd0:	add	r5, pc, #0
   12dd4:	ldr	pc, [r5, r3, lsl #2]
   12dd8:			; <UNDEFINED> instruction: 0x000131bc
   12ddc:			; <UNDEFINED> instruction: 0x000131bc
   12de0:			; <UNDEFINED> instruction: 0x00012db4
   12de4:			; <UNDEFINED> instruction: 0x000131bc
   12de8:			; <UNDEFINED> instruction: 0x00012db4
   12dec:			; <UNDEFINED> instruction: 0x000131bc
   12df0:			; <UNDEFINED> instruction: 0x00012db4
   12df4:			; <UNDEFINED> instruction: 0x00012db4
   12df8:			; <UNDEFINED> instruction: 0x00012db4
   12dfc:			; <UNDEFINED> instruction: 0x00012db4
   12e00:			; <UNDEFINED> instruction: 0x00012db4
   12e04:			; <UNDEFINED> instruction: 0x00012db4
   12e08:			; <UNDEFINED> instruction: 0x00012db4
   12e0c:			; <UNDEFINED> instruction: 0x00012db4
   12e10:			; <UNDEFINED> instruction: 0x00012db4
   12e14:			; <UNDEFINED> instruction: 0x00012db4
   12e18:			; <UNDEFINED> instruction: 0x00012db4
   12e1c:			; <UNDEFINED> instruction: 0x00012db4
   12e20:			; <UNDEFINED> instruction: 0x00012db4
   12e24:			; <UNDEFINED> instruction: 0x00012db4
   12e28:			; <UNDEFINED> instruction: 0x00012db4
   12e2c:			; <UNDEFINED> instruction: 0x00012db4
   12e30:			; <UNDEFINED> instruction: 0x00012db4
   12e34:			; <UNDEFINED> instruction: 0x00012db4
   12e38:			; <UNDEFINED> instruction: 0x00012db4
   12e3c:			; <UNDEFINED> instruction: 0x00012db4
   12e40:			; <UNDEFINED> instruction: 0x00012db4
   12e44:			; <UNDEFINED> instruction: 0x00012db4
   12e48:			; <UNDEFINED> instruction: 0x00012db4
   12e4c:			; <UNDEFINED> instruction: 0x00012db4
   12e50:			; <UNDEFINED> instruction: 0x00012db4
   12e54:			; <UNDEFINED> instruction: 0x00012db4
   12e58:			; <UNDEFINED> instruction: 0x00012db4
   12e5c:			; <UNDEFINED> instruction: 0x000131bc
   12e60:	mov	r8, r0
   12e64:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12e68:	ldr	r0, [sp, #32]
   12e6c:	cmp	r0, #0
   12e70:	beq	12f10 <__mempcpy_chk@plt+0x1e6c>
   12e74:	add	r0, r7, #2
   12e78:	cmp	r0, lr
   12e7c:	bcs	12f10 <__mempcpy_chk@plt+0x1e6c>
   12e80:	add	r1, r7, ip
   12e84:	ldrb	r1, [r1, #1]
   12e88:	cmp	r1, #63	; 0x3f
   12e8c:	bne	12f10 <__mempcpy_chk@plt+0x1e6c>
   12e90:	ldrb	r9, [ip, r0]
   12e94:	sub	r2, r9, #33	; 0x21
   12e98:	cmp	r2, #29
   12e9c:	bhi	12f10 <__mempcpy_chk@plt+0x1e6c>
   12ea0:	movw	r1, #20929	; 0x51c1
   12ea4:	mov	r3, #1
   12ea8:	movt	r1, #14336	; 0x3800
   12eac:	tst	r1, r3, lsl r2
   12eb0:	beq	12f10 <__mempcpy_chk@plt+0x1e6c>
   12eb4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12eb8:	tst	r1, #1
   12ebc:	bne	131e0 <__mempcpy_chk@plt+0x213c>
   12ec0:	cmp	r8, r4
   12ec4:	add	r2, r8, #1
   12ec8:	mov	r6, r9
   12ecc:	mov	r7, r0
   12ed0:	mov	r9, #0
   12ed4:	movcc	r1, #63	; 0x3f
   12ed8:	strbcc	r1, [r5, r8]
   12edc:	cmp	r2, r4
   12ee0:	movcc	r1, #34	; 0x22
   12ee4:	strbcc	r1, [r5, r2]
   12ee8:	add	r2, r8, #2
   12eec:	cmp	r2, r4
   12ef0:	movcc	r1, #34	; 0x22
   12ef4:	strbcc	r1, [r5, r2]
   12ef8:	add	r2, r8, #3
   12efc:	add	r8, r8, #4
   12f00:	cmp	r2, r4
   12f04:	movcc	r1, #63	; 0x3f
   12f08:	strbcc	r1, [r5, r2]
   12f0c:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12f10:	mov	r9, #0
   12f14:	b	12888 <__mempcpy_chk@plt+0x17e4>
   12f18:	ldr	lr, [sp, #28]
   12f1c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   12f20:	add	r1, r2, r7
   12f24:	mov	r2, #0
   12f28:	str	r1, [sp, #44]	; 0x2c
   12f2c:	tst	r0, #1
   12f30:	bne	1304c <__mempcpy_chk@plt+0x1fa8>
   12f34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12f38:	tst	r1, #1
   12f3c:	bne	131dc <__mempcpy_chk@plt+0x2138>
   12f40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12f44:	subs	r2, r1, #2
   12f48:	movwne	r2, #1
   12f4c:	orr	r2, r2, r4
   12f50:	tst	r2, #1
   12f54:	bne	12f98 <__mempcpy_chk@plt+0x1ef4>
   12f58:	ldr	r1, [sp, #88]	; 0x58
   12f5c:	add	r2, r8, #1
   12f60:	mov	r4, #1
   12f64:	cmp	r8, r1
   12f68:	movcc	r1, #39	; 0x27
   12f6c:	strbcc	r1, [r5, r8]
   12f70:	ldr	r1, [sp, #88]	; 0x58
   12f74:	cmp	r2, r1
   12f78:	movcc	r1, #36	; 0x24
   12f7c:	strbcc	r1, [r5, r2]
   12f80:	ldr	r1, [sp, #88]	; 0x58
   12f84:	add	r2, r8, #2
   12f88:	add	r8, r8, #3
   12f8c:	cmp	r2, r1
   12f90:	movcc	r1, #39	; 0x27
   12f94:	strbcc	r1, [r5, r2]
   12f98:	ldr	r1, [sp, #88]	; 0x58
   12f9c:	add	r2, r8, #1
   12fa0:	cmp	r8, r1
   12fa4:	movcc	r1, #92	; 0x5c
   12fa8:	strbcc	r1, [r5, r8]
   12fac:	ldr	r1, [sp, #88]	; 0x58
   12fb0:	cmp	r2, r1
   12fb4:	bcs	12fc8 <__mempcpy_chk@plt+0x1f24>
   12fb8:	uxtb	r3, r6
   12fbc:	mov	r1, #48	; 0x30
   12fc0:	orr	r3, r1, r3, lsr #6
   12fc4:	strb	r3, [r5, r2]
   12fc8:	ldr	r1, [sp, #88]	; 0x58
   12fcc:	add	r2, r8, #2
   12fd0:	add	r8, r8, #3
   12fd4:	cmp	r2, r1
   12fd8:	lsrcc	r3, r6, #3
   12fdc:	movcc	r1, #6
   12fe0:	bficc	r3, r1, #3, #29
   12fe4:	mov	r1, #6
   12fe8:	bfi	r6, r1, #3, #29
   12fec:	strbcc	r3, [r5, r2]
   12ff0:	mov	r2, #1
   12ff4:	b	13074 <__mempcpy_chk@plt+0x1fd0>
   12ff8:	ldr	r1, [sp, #88]	; 0x58
   12ffc:	ldr	r5, [fp, #-84]	; 0xffffffac
   13000:	ldr	r4, [sp, #88]	; 0x58
   13004:	cmp	r8, r1
   13008:	movcc	r1, #39	; 0x27
   1300c:	strbcc	r1, [r5, r8]
   13010:	add	r1, r8, #1
   13014:	add	r8, r8, #2
   13018:	cmp	r1, r4
   1301c:	movcc	r4, #39	; 0x27
   13020:	strbcc	r4, [r5, r1]
   13024:	mov	r4, #0
   13028:	ldr	r1, [sp, #88]	; 0x58
   1302c:	cmp	r8, r1
   13030:	ldr	r1, [sp, #72]	; 0x48
   13034:	strbcc	r6, [r5, r8]
   13038:	add	r8, r8, #1
   1303c:	ldrb	r6, [r1, r7]
   13040:	mov	r7, r3
   13044:	tst	r0, #1
   13048:	beq	12f34 <__mempcpy_chk@plt+0x1e90>
   1304c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13050:	tst	r1, #1
   13054:	beq	1306c <__mempcpy_chk@plt+0x1fc8>
   13058:	ldr	r1, [sp, #88]	; 0x58
   1305c:	cmp	r8, r1
   13060:	movcc	r1, #92	; 0x5c
   13064:	strbcc	r1, [r5, r8]
   13068:	add	r8, r8, #1
   1306c:	mov	r1, #0
   13070:	str	r1, [fp, #-52]	; 0xffffffcc
   13074:	ldr	r1, [sp, #44]	; 0x2c
   13078:	add	r3, r7, #1
   1307c:	and	sl, r2, #1
   13080:	cmp	r1, r3
   13084:	bls	130a8 <__mempcpy_chk@plt+0x2004>
   13088:	cmp	sl, #0
   1308c:	mvn	r5, r4
   13090:	movwne	sl, #1
   13094:	orr	r5, r5, sl
   13098:	tst	r5, #1
   1309c:	beq	12ff8 <__mempcpy_chk@plt+0x1f54>
   130a0:	ldr	r5, [fp, #-84]	; 0xffffffac
   130a4:	b	13028 <__mempcpy_chk@plt+0x1f84>
   130a8:	str	r4, [fp, #-56]	; 0xffffffc8
   130ac:	ldr	r4, [sp, #88]	; 0x58
   130b0:	cmp	sl, #0
   130b4:	movwne	sl, #1
   130b8:	cmp	sl, #0
   130bc:	beq	12c18 <__mempcpy_chk@plt+0x1b74>
   130c0:	b	12c4c <__mempcpy_chk@plt+0x1ba8>
   130c4:	mov	r9, #0
   130c8:	b	13108 <__mempcpy_chk@plt+0x2064>
   130cc:	ldr	r0, [sp, #24]
   130d0:	mov	r9, #0
   130d4:	cmp	lr, r0
   130d8:	bls	13108 <__mempcpy_chk@plt+0x2064>
   130dc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   130e0:	ldr	r2, [sp, #44]	; 0x2c
   130e4:	add	r0, ip, r7
   130e8:	ldrb	r1, [r0, r2]
   130ec:	cmp	r1, #0
   130f0:	beq	12bd0 <__mempcpy_chk@plt+0x1b2c>
   130f4:	add	r2, r2, #1
   130f8:	add	r1, r7, r2
   130fc:	cmp	r1, lr
   13100:	bcc	130e8 <__mempcpy_chk@plt+0x2044>
   13104:	b	12bd0 <__mempcpy_chk@plt+0x1b2c>
   13108:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1310c:	ldr	r2, [sp, #44]	; 0x2c
   13110:	b	12bd0 <__mempcpy_chk@plt+0x1b2c>
   13114:	mov	lr, r7
   13118:	b	13120 <__mempcpy_chk@plt+0x207c>
   1311c:	mvn	lr, #0
   13120:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13124:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13128:	eor	r0, r1, #2
   1312c:	orr	r0, r0, r8
   13130:	clz	r0, r0
   13134:	lsr	r0, r0, #5
   13138:	tst	r2, r0
   1313c:	bne	131e0 <__mempcpy_chk@plt+0x213c>
   13140:	subs	r0, r1, #2
   13144:	movwne	r0, #1
   13148:	orr	r0, r2, r0
   1314c:	tst	r0, #1
   13150:	ldreq	r0, [sp, #60]	; 0x3c
   13154:	eoreq	r0, r0, #1
   13158:	tsteq	r0, #1
   1315c:	bne	13274 <__mempcpy_chk@plt+0x21d0>
   13160:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13164:	mov	sl, lr
   13168:	tst	r0, #1
   1316c:	bne	13240 <__mempcpy_chk@plt+0x219c>
   13170:	ldr	r6, [sp, #56]	; 0x38
   13174:	mov	r9, #0
   13178:	cmp	r6, #0
   1317c:	beq	1326c <__mempcpy_chk@plt+0x21c8>
   13180:	ldr	r0, [sp, #84]	; 0x54
   13184:	mov	r1, #0
   13188:	mov	r7, #2
   1318c:	cmp	r4, #0
   13190:	str	r1, [fp, #-48]	; 0xffffffd0
   13194:	mov	r1, #0
   13198:	str	r1, [fp, #-76]	; 0xffffffb4
   1319c:	beq	1233c <__mempcpy_chk@plt+0x1298>
   131a0:	b	13274 <__mempcpy_chk@plt+0x21d0>
   131a4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   131a8:	ldr	r1, [fp, #12]
   131ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   131b0:	mov	lr, r4
   131b4:	mov	r4, r6
   131b8:	b	13200 <__mempcpy_chk@plt+0x215c>
   131bc:	tst	ip, #1
   131c0:	ldr	r5, [fp, #-84]	; 0xffffffac
   131c4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   131c8:	ldr	r1, [fp, #12]
   131cc:	mov	r0, #2
   131d0:	movwne	r0, #4
   131d4:	mov	r2, r0
   131d8:	b	13200 <__mempcpy_chk@plt+0x215c>
   131dc:	ldr	r4, [sp, #88]	; 0x58
   131e0:	ldr	r1, [sp, #84]	; 0x54
   131e4:	mov	r0, #2
   131e8:	tst	r1, #1
   131ec:	movwne	r0, #4
   131f0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   131f4:	ldr	r1, [fp, #12]
   131f8:	cmp	r2, #2
   131fc:	moveq	r2, r0
   13200:	mov	r0, #0
   13204:	bic	r1, r1, #2
   13208:	str	r2, [sp]
   1320c:	mov	r2, ip
   13210:	mov	r3, lr
   13214:	str	r0, [sp, #8]
   13218:	ldr	r0, [sp, #76]	; 0x4c
   1321c:	str	r1, [sp, #4]
   13220:	mov	r1, r4
   13224:	str	r0, [sp, #12]
   13228:	ldr	r0, [sp, #80]	; 0x50
   1322c:	str	r0, [sp, #16]
   13230:	mov	r0, r5
   13234:	bl	122ac <__mempcpy_chk@plt+0x1208>
   13238:	mov	r8, r0
   1323c:	b	132c0 <__mempcpy_chk@plt+0x221c>
   13240:	mov	r0, #5
   13244:	ldr	r1, [sp, #56]	; 0x38
   13248:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1324c:	mov	r3, sl
   13250:	str	r0, [sp]
   13254:	ldr	r0, [fp, #12]
   13258:	str	r0, [sp, #4]
   1325c:	ldr	r0, [fp, #16]
   13260:	str	r0, [sp, #8]
   13264:	ldr	r0, [sp, #76]	; 0x4c
   13268:	b	13224 <__mempcpy_chk@plt+0x2180>
   1326c:	mov	r0, #0
   13270:	str	r0, [fp, #-76]	; 0xffffffb4
   13274:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13278:	cmp	r1, #0
   1327c:	beq	132b4 <__mempcpy_chk@plt+0x2210>
   13280:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13284:	tst	r0, #1
   13288:	bne	132b4 <__mempcpy_chk@plt+0x2210>
   1328c:	ldrb	r0, [r1]
   13290:	cmp	r0, #0
   13294:	beq	132b4 <__mempcpy_chk@plt+0x2210>
   13298:	add	r1, r1, #1
   1329c:	cmp	r8, r4
   132a0:	strbcc	r0, [r5, r8]
   132a4:	add	r8, r8, #1
   132a8:	ldrb	r0, [r1], #1
   132ac:	cmp	r0, #0
   132b0:	bne	1329c <__mempcpy_chk@plt+0x21f8>
   132b4:	cmp	r8, r4
   132b8:	movcc	r0, #0
   132bc:	strbcc	r0, [r5, r8]
   132c0:	mov	r0, r8
   132c4:	sub	sp, fp, #28
   132c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132cc:	mov	r0, #4
   132d0:	b	131f0 <__mempcpy_chk@plt+0x214c>
   132d4:	bl	11074 <abort@plt>
   132d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132dc:	add	fp, sp, #28
   132e0:	sub	sp, sp, #28
   132e4:	movw	r5, #29032	; 0x7168
   132e8:	cmp	r2, #0
   132ec:	mov	r4, r1
   132f0:	mov	r7, r0
   132f4:	str	r0, [sp, #20]
   132f8:	movt	r5, #2
   132fc:	movne	r5, r2
   13300:	bl	10fb4 <__errno_location@plt>
   13304:	mov	sl, r0
   13308:	ldr	r2, [r5, #40]	; 0x28
   1330c:	ldr	r3, [r5, #44]	; 0x2c
   13310:	ldm	r5, {r0, r1}
   13314:	orr	r8, r1, #1
   13318:	add	r9, r5, #8
   1331c:	mov	r1, #0
   13320:	ldr	r6, [sl]
   13324:	stm	sp, {r0, r8, r9}
   13328:	mov	r0, #0
   1332c:	str	r2, [sp, #12]
   13330:	str	r3, [sp, #16]
   13334:	mov	r2, r7
   13338:	mov	r3, r4
   1333c:	str	r6, [sp, #24]
   13340:	mov	r6, r4
   13344:	bl	122ac <__mempcpy_chk@plt+0x1208>
   13348:	add	r7, r0, #1
   1334c:	mov	r0, r7
   13350:	bl	148f8 <__mempcpy_chk@plt+0x3854>
   13354:	mov	r4, r0
   13358:	ldr	r0, [r5]
   1335c:	ldr	r2, [r5, #44]	; 0x2c
   13360:	ldr	r1, [r5, #40]	; 0x28
   13364:	mov	r3, r6
   13368:	stm	sp, {r0, r8, r9}
   1336c:	str	r2, [sp, #16]
   13370:	ldr	r2, [sp, #20]
   13374:	str	r1, [sp, #12]
   13378:	mov	r0, r4
   1337c:	mov	r1, r7
   13380:	bl	122ac <__mempcpy_chk@plt+0x1208>
   13384:	ldr	r0, [sp, #24]
   13388:	str	r0, [sl]
   1338c:	mov	r0, r4
   13390:	sub	sp, fp, #28
   13394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1339c:	add	fp, sp, #28
   133a0:	sub	sp, sp, #36	; 0x24
   133a4:	movw	r8, #29032	; 0x7168
   133a8:	cmp	r3, #0
   133ac:	mov	r4, r2
   133b0:	str	r2, [sp, #24]
   133b4:	mov	r5, r1
   133b8:	mov	r6, r0
   133bc:	str	r0, [sp, #20]
   133c0:	movt	r8, #2
   133c4:	movne	r8, r3
   133c8:	bl	10fb4 <__errno_location@plt>
   133cc:	str	r0, [sp, #28]
   133d0:	ldr	r1, [r8, #40]	; 0x28
   133d4:	ldr	r2, [r8, #44]	; 0x2c
   133d8:	ldr	r7, [r0]
   133dc:	cmp	r4, #0
   133e0:	add	sl, r8, #8
   133e4:	mov	r0, #0
   133e8:	ldm	r8, {r3, r9}
   133ec:	orreq	r9, r9, #1
   133f0:	stm	sp, {r3, r9, sl}
   133f4:	str	r1, [sp, #12]
   133f8:	str	r2, [sp, #16]
   133fc:	mov	r1, #0
   13400:	mov	r2, r6
   13404:	mov	r3, r5
   13408:	str	r7, [sp, #32]
   1340c:	mov	r7, r5
   13410:	bl	122ac <__mempcpy_chk@plt+0x1208>
   13414:	add	r4, r0, #1
   13418:	mov	r5, r0
   1341c:	mov	r0, r4
   13420:	bl	148f8 <__mempcpy_chk@plt+0x3854>
   13424:	mov	r6, r0
   13428:	ldr	r0, [r8]
   1342c:	ldr	r2, [r8, #44]	; 0x2c
   13430:	ldr	r1, [r8, #40]	; 0x28
   13434:	mov	r3, r7
   13438:	stm	sp, {r0, r9, sl}
   1343c:	str	r2, [sp, #16]
   13440:	ldr	r2, [sp, #20]
   13444:	str	r1, [sp, #12]
   13448:	mov	r0, r6
   1344c:	mov	r1, r4
   13450:	bl	122ac <__mempcpy_chk@plt+0x1208>
   13454:	ldr	r0, [sp, #24]
   13458:	ldr	r1, [sp, #32]
   1345c:	ldr	r2, [sp, #28]
   13460:	cmp	r0, #0
   13464:	str	r1, [r2]
   13468:	strne	r5, [r0]
   1346c:	mov	r0, r6
   13470:	sub	sp, fp, #28
   13474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13478:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1347c:	add	fp, sp, #24
   13480:	movw	r5, #28924	; 0x70fc
   13484:	movw	r8, #28920	; 0x70f8
   13488:	movt	r5, #2
   1348c:	movt	r8, #2
   13490:	ldr	r0, [r5]
   13494:	ldr	r4, [r8]
   13498:	cmp	r0, #2
   1349c:	blt	134c8 <__mempcpy_chk@plt+0x2424>
   134a0:	add	r7, r4, #12
   134a4:	mov	r6, #0
   134a8:	ldr	r0, [r7, r6, lsl #3]
   134ac:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   134b0:	ldr	r1, [r5]
   134b4:	add	r2, r6, #2
   134b8:	add	r0, r6, #1
   134bc:	mov	r6, r0
   134c0:	cmp	r2, r1
   134c4:	blt	134a8 <__mempcpy_chk@plt+0x2404>
   134c8:	ldr	r0, [r4, #4]
   134cc:	movw	r9, #29080	; 0x7198
   134d0:	movw	r7, #28928	; 0x7100
   134d4:	movt	r9, #2
   134d8:	movt	r7, #2
   134dc:	cmp	r0, r9
   134e0:	beq	134f0 <__mempcpy_chk@plt+0x244c>
   134e4:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   134e8:	mov	r0, #256	; 0x100
   134ec:	stm	r7, {r0, r9}
   134f0:	cmp	r4, r7
   134f4:	beq	13504 <__mempcpy_chk@plt+0x2460>
   134f8:	mov	r0, r4
   134fc:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   13500:	str	r7, [r8]
   13504:	mov	r0, #1
   13508:	str	r0, [r5]
   1350c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13510:	movw	r3, #29032	; 0x7168
   13514:	mvn	r2, #0
   13518:	movt	r3, #2
   1351c:	b	13520 <__mempcpy_chk@plt+0x247c>
   13520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13524:	add	fp, sp, #28
   13528:	sub	sp, sp, #44	; 0x2c
   1352c:	mov	r7, r3
   13530:	str	r2, [sp, #36]	; 0x24
   13534:	str	r1, [sp, #32]
   13538:	mov	r5, r0
   1353c:	bl	10fb4 <__errno_location@plt>
   13540:	cmp	r5, #0
   13544:	bmi	136b4 <__mempcpy_chk@plt+0x2610>
   13548:	cmn	r5, #-2147483647	; 0x80000001
   1354c:	beq	136b4 <__mempcpy_chk@plt+0x2610>
   13550:	movw	r8, #28924	; 0x70fc
   13554:	movw	r4, #28920	; 0x70f8
   13558:	str	r0, [sp, #28]
   1355c:	ldr	r0, [r0]
   13560:	movt	r8, #2
   13564:	movt	r4, #2
   13568:	ldr	r1, [r8]
   1356c:	ldr	r6, [r4]
   13570:	str	r0, [sp, #24]
   13574:	cmp	r1, r5
   13578:	ble	13584 <__mempcpy_chk@plt+0x24e0>
   1357c:	mov	sl, r6
   13580:	b	135f0 <__mempcpy_chk@plt+0x254c>
   13584:	movw	r9, #28928	; 0x7100
   13588:	mov	r0, #8
   1358c:	str	r1, [fp, #-32]	; 0xffffffe0
   13590:	sub	r1, r5, r1
   13594:	mvn	r3, #-2147483648	; 0x80000000
   13598:	movt	r9, #2
   1359c:	str	r0, [sp]
   135a0:	add	r2, r1, #1
   135a4:	sub	r1, fp, #32
   135a8:	subs	r0, r6, r9
   135ac:	movne	r0, r6
   135b0:	bl	14af8 <__mempcpy_chk@plt+0x3a54>
   135b4:	mov	sl, r0
   135b8:	cmp	r6, r9
   135bc:	str	r0, [r4]
   135c0:	bne	135cc <__mempcpy_chk@plt+0x2528>
   135c4:	ldrd	r0, [r9]
   135c8:	stm	sl, {r0, r1}
   135cc:	ldr	r1, [r8]
   135d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   135d4:	add	r0, sl, r1, lsl #3
   135d8:	sub	r1, r2, r1
   135dc:	lsl	r2, r1, #3
   135e0:	mov	r1, #0
   135e4:	bl	10fd8 <memset@plt>
   135e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135ec:	str	r0, [r8]
   135f0:	mov	r9, sl
   135f4:	ldm	r7, {r0, r1}
   135f8:	orr	r8, r1, #1
   135fc:	add	r1, r7, #8
   13600:	ldr	r2, [r7, #40]	; 0x28
   13604:	ldr	r3, [r7, #44]	; 0x2c
   13608:	ldr	r6, [r9, r5, lsl #3]!
   1360c:	str	r1, [sp, #20]
   13610:	ldr	r4, [r9, #4]!
   13614:	stm	sp, {r0, r8}
   13618:	add	r0, sp, #8
   1361c:	stm	r0, {r1, r2, r3}
   13620:	ldr	r2, [sp, #32]
   13624:	ldr	r3, [sp, #36]	; 0x24
   13628:	mov	r1, r6
   1362c:	mov	r0, r4
   13630:	bl	122ac <__mempcpy_chk@plt+0x1208>
   13634:	cmp	r6, r0
   13638:	bhi	1369c <__mempcpy_chk@plt+0x25f8>
   1363c:	add	r6, r0, #1
   13640:	movw	r0, #29080	; 0x7198
   13644:	movt	r0, #2
   13648:	str	r6, [sl, r5, lsl #3]
   1364c:	cmp	r4, r0
   13650:	beq	1365c <__mempcpy_chk@plt+0x25b8>
   13654:	mov	r0, r4
   13658:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   1365c:	mov	r0, r6
   13660:	bl	148f8 <__mempcpy_chk@plt+0x3854>
   13664:	str	r0, [r9]
   13668:	mov	r4, r0
   1366c:	add	r3, sp, #8
   13670:	ldr	r0, [r7]
   13674:	ldr	r1, [r7, #40]	; 0x28
   13678:	ldr	r2, [r7, #44]	; 0x2c
   1367c:	stm	sp, {r0, r8}
   13680:	ldr	r0, [sp, #20]
   13684:	stm	r3, {r0, r1, r2}
   13688:	ldr	r2, [sp, #32]
   1368c:	ldr	r3, [sp, #36]	; 0x24
   13690:	mov	r0, r4
   13694:	mov	r1, r6
   13698:	bl	122ac <__mempcpy_chk@plt+0x1208>
   1369c:	ldr	r0, [sp, #28]
   136a0:	ldr	r1, [sp, #24]
   136a4:	str	r1, [r0]
   136a8:	mov	r0, r4
   136ac:	sub	sp, fp, #28
   136b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136b4:	bl	11074 <abort@plt>
   136b8:	movw	r3, #29032	; 0x7168
   136bc:	movt	r3, #2
   136c0:	b	13520 <__mempcpy_chk@plt+0x247c>
   136c4:	movw	r3, #29032	; 0x7168
   136c8:	mov	r1, r0
   136cc:	mov	r0, #0
   136d0:	mvn	r2, #0
   136d4:	movt	r3, #2
   136d8:	b	13520 <__mempcpy_chk@plt+0x247c>
   136dc:	movw	r3, #29032	; 0x7168
   136e0:	mov	r2, r1
   136e4:	mov	r1, r0
   136e8:	mov	r0, #0
   136ec:	movt	r3, #2
   136f0:	b	13520 <__mempcpy_chk@plt+0x247c>
   136f4:	push	{fp, lr}
   136f8:	mov	fp, sp
   136fc:	sub	sp, sp, #48	; 0x30
   13700:	vmov.i32	q8, #0	; 0x00000000
   13704:	mov	ip, #32
   13708:	mov	r3, sp
   1370c:	mov	lr, r2
   13710:	cmp	r1, #10
   13714:	add	r2, r3, #16
   13718:	vst1.64	{d16-d17}, [r3], ip
   1371c:	vst1.64	{d16-d17}, [r2]
   13720:	vst1.64	{d16-d17}, [r3]
   13724:	beq	13744 <__mempcpy_chk@plt+0x26a0>
   13728:	str	r1, [sp]
   1372c:	mov	r3, sp
   13730:	mov	r1, lr
   13734:	mvn	r2, #0
   13738:	bl	13520 <__mempcpy_chk@plt+0x247c>
   1373c:	mov	sp, fp
   13740:	pop	{fp, pc}
   13744:	bl	11074 <abort@plt>
   13748:	push	{r4, sl, fp, lr}
   1374c:	add	fp, sp, #8
   13750:	sub	sp, sp, #48	; 0x30
   13754:	vmov.i32	q8, #0	; 0x00000000
   13758:	mov	ip, r3
   1375c:	mov	r3, sp
   13760:	mov	lr, #32
   13764:	cmp	r1, #10
   13768:	add	r4, r3, #16
   1376c:	vst1.64	{d16-d17}, [r3], lr
   13770:	vst1.64	{d16-d17}, [r4]
   13774:	vst1.64	{d16-d17}, [r3]
   13778:	beq	13798 <__mempcpy_chk@plt+0x26f4>
   1377c:	str	r1, [sp]
   13780:	mov	r1, r2
   13784:	mov	r3, sp
   13788:	mov	r2, ip
   1378c:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13790:	sub	sp, fp, #8
   13794:	pop	{r4, sl, fp, pc}
   13798:	bl	11074 <abort@plt>
   1379c:	push	{fp, lr}
   137a0:	mov	fp, sp
   137a4:	sub	sp, sp, #48	; 0x30
   137a8:	vmov.i32	q8, #0	; 0x00000000
   137ac:	mov	r3, sp
   137b0:	mov	ip, #32
   137b4:	cmp	r0, #10
   137b8:	add	r2, r3, #16
   137bc:	vst1.64	{d16-d17}, [r3], ip
   137c0:	vst1.64	{d16-d17}, [r2]
   137c4:	vst1.64	{d16-d17}, [r3]
   137c8:	beq	137e8 <__mempcpy_chk@plt+0x2744>
   137cc:	str	r0, [sp]
   137d0:	mov	r3, sp
   137d4:	mov	r0, #0
   137d8:	mvn	r2, #0
   137dc:	bl	13520 <__mempcpy_chk@plt+0x247c>
   137e0:	mov	sp, fp
   137e4:	pop	{fp, pc}
   137e8:	bl	11074 <abort@plt>
   137ec:	push	{fp, lr}
   137f0:	mov	fp, sp
   137f4:	sub	sp, sp, #48	; 0x30
   137f8:	vmov.i32	q8, #0	; 0x00000000
   137fc:	mov	r3, sp
   13800:	mov	ip, #32
   13804:	cmp	r0, #10
   13808:	add	lr, r3, #16
   1380c:	vst1.64	{d16-d17}, [r3], ip
   13810:	vst1.64	{d16-d17}, [lr]
   13814:	vst1.64	{d16-d17}, [r3]
   13818:	beq	13834 <__mempcpy_chk@plt+0x2790>
   1381c:	str	r0, [sp]
   13820:	mov	r3, sp
   13824:	mov	r0, #0
   13828:	bl	13520 <__mempcpy_chk@plt+0x247c>
   1382c:	mov	sp, fp
   13830:	pop	{fp, pc}
   13834:	bl	11074 <abort@plt>
   13838:	push	{r4, sl, fp, lr}
   1383c:	add	fp, sp, #8
   13840:	sub	sp, sp, #48	; 0x30
   13844:	mov	lr, r0
   13848:	movw	r0, #29032	; 0x7168
   1384c:	mov	ip, r1
   13850:	mov	r1, #32
   13854:	mov	r4, #1
   13858:	movt	r0, #2
   1385c:	add	r3, r0, #16
   13860:	vld1.64	{d16-d17}, [r0], r1
   13864:	vld1.64	{d20-d21}, [r0]
   13868:	vld1.64	{d18-d19}, [r3]
   1386c:	mov	r3, sp
   13870:	add	r0, r3, #32
   13874:	add	r1, r3, #16
   13878:	vst1.64	{d20-d21}, [r0]
   1387c:	mov	r0, #28
   13880:	vst1.64	{d18-d19}, [r1]
   13884:	mov	r1, r3
   13888:	and	r0, r0, r2, lsr #3
   1388c:	and	r2, r2, #31
   13890:	vst1.64	{d16-d17}, [r1], r0
   13894:	ldr	r0, [r1, #8]
   13898:	bic	r4, r4, r0, lsr r2
   1389c:	eor	r0, r0, r4, lsl r2
   138a0:	mov	r2, ip
   138a4:	str	r0, [r1, #8]
   138a8:	mov	r0, #0
   138ac:	mov	r1, lr
   138b0:	bl	13520 <__mempcpy_chk@plt+0x247c>
   138b4:	sub	sp, fp, #8
   138b8:	pop	{r4, sl, fp, pc}
   138bc:	push	{fp, lr}
   138c0:	mov	fp, sp
   138c4:	sub	sp, sp, #48	; 0x30
   138c8:	mov	ip, r0
   138cc:	movw	r0, #29032	; 0x7168
   138d0:	mov	r2, #32
   138d4:	movt	r0, #2
   138d8:	add	r3, r0, #16
   138dc:	vld1.64	{d16-d17}, [r0], r2
   138e0:	vld1.64	{d20-d21}, [r0]
   138e4:	vld1.64	{d18-d19}, [r3]
   138e8:	mov	r3, sp
   138ec:	add	r0, r3, #32
   138f0:	add	r2, r3, #16
   138f4:	vst1.64	{d20-d21}, [r0]
   138f8:	mov	r0, #28
   138fc:	vst1.64	{d18-d19}, [r2]
   13900:	mov	r2, r3
   13904:	and	r0, r0, r1, lsr #3
   13908:	and	r1, r1, #31
   1390c:	vst1.64	{d16-d17}, [r2], r0
   13910:	mov	r0, #1
   13914:	ldr	lr, [r2, #8]
   13918:	bic	r0, r0, lr, lsr r1
   1391c:	eor	r0, lr, r0, lsl r1
   13920:	mov	r1, ip
   13924:	str	r0, [r2, #8]
   13928:	mov	r0, #0
   1392c:	mvn	r2, #0
   13930:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13934:	mov	sp, fp
   13938:	pop	{fp, pc}
   1393c:	push	{fp, lr}
   13940:	mov	fp, sp
   13944:	sub	sp, sp, #48	; 0x30
   13948:	mov	r1, r0
   1394c:	movw	r0, #29032	; 0x7168
   13950:	mov	r3, #32
   13954:	movt	r0, #2
   13958:	add	r2, r0, #16
   1395c:	vld1.64	{d16-d17}, [r0], r3
   13960:	mov	r3, sp
   13964:	vld1.64	{d18-d19}, [r2]
   13968:	vld1.64	{d20-d21}, [r0]
   1396c:	add	r2, r3, #16
   13970:	add	r0, r3, #32
   13974:	vst1.64	{d18-d19}, [r2]
   13978:	vst1.64	{d20-d21}, [r0]
   1397c:	mov	r0, #12
   13980:	mov	r2, r3
   13984:	vst1.64	{d16-d17}, [r2], r0
   13988:	ldr	r0, [r2]
   1398c:	orr	r0, r0, #67108864	; 0x4000000
   13990:	str	r0, [r2]
   13994:	mov	r0, #0
   13998:	mvn	r2, #0
   1399c:	bl	13520 <__mempcpy_chk@plt+0x247c>
   139a0:	mov	sp, fp
   139a4:	pop	{fp, pc}
   139a8:	push	{fp, lr}
   139ac:	mov	fp, sp
   139b0:	sub	sp, sp, #48	; 0x30
   139b4:	mov	ip, r1
   139b8:	mov	r1, r0
   139bc:	movw	r0, #29032	; 0x7168
   139c0:	mov	r2, #32
   139c4:	movt	r0, #2
   139c8:	add	r3, r0, #16
   139cc:	vld1.64	{d16-d17}, [r0], r2
   139d0:	vld1.64	{d18-d19}, [r3]
   139d4:	vld1.64	{d20-d21}, [r0]
   139d8:	mov	r3, sp
   139dc:	add	r2, r3, #16
   139e0:	add	r0, r3, #32
   139e4:	vst1.64	{d18-d19}, [r2]
   139e8:	vst1.64	{d20-d21}, [r0]
   139ec:	mov	r0, #12
   139f0:	mov	r2, r3
   139f4:	vst1.64	{d16-d17}, [r2], r0
   139f8:	ldr	r0, [r2]
   139fc:	orr	r0, r0, #67108864	; 0x4000000
   13a00:	str	r0, [r2]
   13a04:	mov	r0, #0
   13a08:	mov	r2, ip
   13a0c:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13a10:	mov	sp, fp
   13a14:	pop	{fp, pc}
   13a18:	push	{r4, sl, fp, lr}
   13a1c:	add	fp, sp, #8
   13a20:	sub	sp, sp, #96	; 0x60
   13a24:	vmov.i32	q8, #0	; 0x00000000
   13a28:	mov	ip, r2
   13a2c:	mov	r2, sp
   13a30:	mov	r4, #28
   13a34:	cmp	r1, #10
   13a38:	mov	r3, r2
   13a3c:	add	lr, r2, #16
   13a40:	vst1.64	{d16-d17}, [r3], r4
   13a44:	vst1.64	{d16-d17}, [lr]
   13a48:	vst1.32	{d16-d17}, [r3]
   13a4c:	beq	13a9c <__mempcpy_chk@plt+0x29f8>
   13a50:	vld1.64	{d16-d17}, [r2], r4
   13a54:	vld1.64	{d18-d19}, [lr]
   13a58:	add	r3, sp, #48	; 0x30
   13a5c:	vld1.32	{d20-d21}, [r2]
   13a60:	add	r2, r3, #20
   13a64:	add	r4, r3, #4
   13a68:	vst1.32	{d18-d19}, [r2]
   13a6c:	add	r2, r3, #32
   13a70:	vst1.32	{d16-d17}, [r4]
   13a74:	vst1.32	{d20-d21}, [r2]
   13a78:	str	r1, [sp, #48]	; 0x30
   13a7c:	mvn	r2, #0
   13a80:	ldr	r1, [sp, #60]	; 0x3c
   13a84:	orr	r1, r1, #67108864	; 0x4000000
   13a88:	str	r1, [sp, #60]	; 0x3c
   13a8c:	mov	r1, ip
   13a90:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13a94:	sub	sp, fp, #8
   13a98:	pop	{r4, sl, fp, pc}
   13a9c:	bl	11074 <abort@plt>
   13aa0:	push	{r4, r5, r6, sl, fp, lr}
   13aa4:	add	fp, sp, #16
   13aa8:	sub	sp, sp, #48	; 0x30
   13aac:	mov	ip, r3
   13ab0:	movw	r3, #29032	; 0x7168
   13ab4:	mov	r6, #32
   13ab8:	cmp	r1, #0
   13abc:	mov	r4, sp
   13ac0:	movt	r3, #2
   13ac4:	cmpne	r2, #0
   13ac8:	add	r5, r4, #16
   13acc:	add	lr, r3, #16
   13ad0:	vld1.64	{d16-d17}, [r3], r6
   13ad4:	vld1.64	{d18-d19}, [lr]
   13ad8:	vld1.64	{d20-d21}, [r3]
   13adc:	mov	r3, #10
   13ae0:	vst1.64	{d16-d17}, [r4], r6
   13ae4:	vst1.64	{d18-d19}, [r5]
   13ae8:	vst1.64	{d20-d21}, [r4]
   13aec:	str	r3, [sp]
   13af0:	bne	13af8 <__mempcpy_chk@plt+0x2a54>
   13af4:	bl	11074 <abort@plt>
   13af8:	str	r2, [sp, #44]	; 0x2c
   13afc:	str	r1, [sp, #40]	; 0x28
   13b00:	mov	r3, sp
   13b04:	mov	r1, ip
   13b08:	mvn	r2, #0
   13b0c:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13b10:	sub	sp, fp, #16
   13b14:	pop	{r4, r5, r6, sl, fp, pc}
   13b18:	push	{r4, r5, r6, sl, fp, lr}
   13b1c:	add	fp, sp, #16
   13b20:	sub	sp, sp, #48	; 0x30
   13b24:	mov	lr, r3
   13b28:	movw	r3, #29032	; 0x7168
   13b2c:	mov	r6, #32
   13b30:	cmp	r1, #0
   13b34:	mov	r4, sp
   13b38:	movt	r3, #2
   13b3c:	cmpne	r2, #0
   13b40:	add	r5, r4, #16
   13b44:	add	ip, r3, #16
   13b48:	vld1.64	{d16-d17}, [r3], r6
   13b4c:	vld1.64	{d18-d19}, [ip]
   13b50:	vld1.64	{d20-d21}, [r3]
   13b54:	mov	r3, #10
   13b58:	vst1.64	{d16-d17}, [r4], r6
   13b5c:	vst1.64	{d18-d19}, [r5]
   13b60:	vst1.64	{d20-d21}, [r4]
   13b64:	str	r3, [sp]
   13b68:	bne	13b70 <__mempcpy_chk@plt+0x2acc>
   13b6c:	bl	11074 <abort@plt>
   13b70:	ldr	ip, [fp, #8]
   13b74:	str	r2, [sp, #44]	; 0x2c
   13b78:	str	r1, [sp, #40]	; 0x28
   13b7c:	mov	r3, sp
   13b80:	mov	r1, lr
   13b84:	mov	r2, ip
   13b88:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13b8c:	sub	sp, fp, #16
   13b90:	pop	{r4, r5, r6, sl, fp, pc}
   13b94:	push	{r4, sl, fp, lr}
   13b98:	add	fp, sp, #8
   13b9c:	sub	sp, sp, #48	; 0x30
   13ba0:	movw	r3, #29032	; 0x7168
   13ba4:	mov	lr, #32
   13ba8:	mov	ip, r2
   13bac:	cmp	r0, #0
   13bb0:	movt	r3, #2
   13bb4:	cmpne	r1, #0
   13bb8:	add	r2, r3, #16
   13bbc:	vld1.64	{d16-d17}, [r3], lr
   13bc0:	vld1.64	{d20-d21}, [r3]
   13bc4:	vld1.64	{d18-d19}, [r2]
   13bc8:	mov	r2, sp
   13bcc:	add	r4, r2, #16
   13bd0:	vst1.64	{d16-d17}, [r2], lr
   13bd4:	vst1.64	{d20-d21}, [r2]
   13bd8:	mov	r2, #10
   13bdc:	vst1.64	{d18-d19}, [r4]
   13be0:	str	r2, [sp]
   13be4:	bne	13bec <__mempcpy_chk@plt+0x2b48>
   13be8:	bl	11074 <abort@plt>
   13bec:	str	r1, [sp, #44]	; 0x2c
   13bf0:	str	r0, [sp, #40]	; 0x28
   13bf4:	mov	r3, sp
   13bf8:	mov	r0, #0
   13bfc:	mov	r1, ip
   13c00:	mvn	r2, #0
   13c04:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13c08:	sub	sp, fp, #8
   13c0c:	pop	{r4, sl, fp, pc}
   13c10:	push	{r4, r5, fp, lr}
   13c14:	add	fp, sp, #8
   13c18:	sub	sp, sp, #48	; 0x30
   13c1c:	mov	ip, r3
   13c20:	movw	r3, #29032	; 0x7168
   13c24:	mov	r4, #32
   13c28:	mov	lr, r2
   13c2c:	cmp	r0, #0
   13c30:	movt	r3, #2
   13c34:	cmpne	r1, #0
   13c38:	add	r2, r3, #16
   13c3c:	vld1.64	{d16-d17}, [r3], r4
   13c40:	vld1.64	{d20-d21}, [r3]
   13c44:	vld1.64	{d18-d19}, [r2]
   13c48:	mov	r2, sp
   13c4c:	add	r5, r2, #16
   13c50:	vst1.64	{d16-d17}, [r2], r4
   13c54:	vst1.64	{d20-d21}, [r2]
   13c58:	mov	r2, #10
   13c5c:	vst1.64	{d18-d19}, [r5]
   13c60:	str	r2, [sp]
   13c64:	bne	13c6c <__mempcpy_chk@plt+0x2bc8>
   13c68:	bl	11074 <abort@plt>
   13c6c:	str	r1, [sp, #44]	; 0x2c
   13c70:	str	r0, [sp, #40]	; 0x28
   13c74:	mov	r3, sp
   13c78:	mov	r0, #0
   13c7c:	mov	r1, lr
   13c80:	mov	r2, ip
   13c84:	bl	13520 <__mempcpy_chk@plt+0x247c>
   13c88:	sub	sp, fp, #8
   13c8c:	pop	{r4, r5, fp, pc}
   13c90:	movw	r3, #28936	; 0x7108
   13c94:	movt	r3, #2
   13c98:	b	13520 <__mempcpy_chk@plt+0x247c>
   13c9c:	movw	r3, #28936	; 0x7108
   13ca0:	mov	r2, r1
   13ca4:	mov	r1, r0
   13ca8:	mov	r0, #0
   13cac:	movt	r3, #2
   13cb0:	b	13520 <__mempcpy_chk@plt+0x247c>
   13cb4:	movw	r3, #28936	; 0x7108
   13cb8:	mvn	r2, #0
   13cbc:	movt	r3, #2
   13cc0:	b	13520 <__mempcpy_chk@plt+0x247c>
   13cc4:	movw	r3, #28936	; 0x7108
   13cc8:	mov	r1, r0
   13ccc:	mov	r0, #0
   13cd0:	mvn	r2, #0
   13cd4:	movt	r3, #2
   13cd8:	b	13520 <__mempcpy_chk@plt+0x247c>
   13cdc:	push	{r4, r5, fp, lr}
   13ce0:	add	fp, sp, #8
   13ce4:	mov	r5, r0
   13ce8:	mov	r4, r1
   13cec:	mov	r0, #0
   13cf0:	mov	r2, #5
   13cf4:	mov	r1, r5
   13cf8:	bl	10eac <dcgettext@plt>
   13cfc:	cmp	r0, r5
   13d00:	popne	{r4, r5, fp, pc}
   13d04:	bl	14f20 <__mempcpy_chk@plt+0x3e7c>
   13d08:	ldrb	r1, [r0]
   13d0c:	and	r1, r1, #223	; 0xdf
   13d10:	cmp	r1, #71	; 0x47
   13d14:	beq	13d7c <__mempcpy_chk@plt+0x2cd8>
   13d18:	cmp	r1, #85	; 0x55
   13d1c:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d20:	ldrb	r1, [r0, #1]
   13d24:	and	r1, r1, #223	; 0xdf
   13d28:	cmp	r1, #84	; 0x54
   13d2c:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d30:	ldrb	r1, [r0, #2]
   13d34:	and	r1, r1, #223	; 0xdf
   13d38:	cmp	r1, #70	; 0x46
   13d3c:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d40:	ldrb	r1, [r0, #3]
   13d44:	cmp	r1, #45	; 0x2d
   13d48:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d4c:	ldrb	r1, [r0, #4]
   13d50:	cmp	r1, #56	; 0x38
   13d54:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d58:	ldrb	r0, [r0, #5]
   13d5c:	cmp	r0, #0
   13d60:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d64:	ldrb	r1, [r5]
   13d68:	movw	r2, #23822	; 0x5d0e
   13d6c:	movw	r0, #23826	; 0x5d12
   13d70:	movt	r2, #1
   13d74:	movt	r0, #1
   13d78:	b	13e04 <__mempcpy_chk@plt+0x2d60>
   13d7c:	ldrb	r1, [r0, #1]
   13d80:	and	r1, r1, #223	; 0xdf
   13d84:	cmp	r1, #66	; 0x42
   13d88:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d8c:	ldrb	r1, [r0, #2]
   13d90:	cmp	r1, #49	; 0x31
   13d94:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13d98:	ldrb	r1, [r0, #3]
   13d9c:	cmp	r1, #56	; 0x38
   13da0:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13da4:	ldrb	r1, [r0, #4]
   13da8:	cmp	r1, #48	; 0x30
   13dac:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13db0:	ldrb	r1, [r0, #5]
   13db4:	cmp	r1, #51	; 0x33
   13db8:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13dbc:	ldrb	r1, [r0, #6]
   13dc0:	cmp	r1, #48	; 0x30
   13dc4:	bne	13dd4 <__mempcpy_chk@plt+0x2d30>
   13dc8:	ldrb	r0, [r0, #7]
   13dcc:	cmp	r0, #0
   13dd0:	beq	13df0 <__mempcpy_chk@plt+0x2d4c>
   13dd4:	movw	r1, #23816	; 0x5d08
   13dd8:	movw	r0, #23820	; 0x5d0c
   13ddc:	cmp	r4, #9
   13de0:	movt	r1, #1
   13de4:	movt	r0, #1
   13de8:	moveq	r0, r1
   13dec:	pop	{r4, r5, fp, pc}
   13df0:	ldrb	r1, [r5]
   13df4:	movw	r2, #23830	; 0x5d16
   13df8:	movw	r0, #23834	; 0x5d1a
   13dfc:	movt	r2, #1
   13e00:	movt	r0, #1
   13e04:	cmp	r1, #96	; 0x60
   13e08:	moveq	r0, r2
   13e0c:	pop	{r4, r5, fp, pc}
   13e10:	push	{fp, lr}
   13e14:	mov	fp, sp
   13e18:	sub	sp, sp, #8
   13e1c:	str	r2, [sp, #4]
   13e20:	ldr	r2, [fp, #8]
   13e24:	str	r2, [sp]
   13e28:	movw	r2, #23924	; 0x5d74
   13e2c:	movt	r2, #1
   13e30:	ldr	r3, [r2, r3, lsl #2]
   13e34:	add	r2, sp, #4
   13e38:	bl	13eb4 <__mempcpy_chk@plt+0x2e10>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}
   13e44:	ldr	r1, [r1]
   13e48:	mov	r2, #384	; 0x180
   13e4c:	orr	r1, r1, #194	; 0xc2
   13e50:	bic	r1, r1, #1
   13e54:	b	10f24 <open64@plt>
   13e58:	mov	r1, #448	; 0x1c0
   13e5c:	b	10fcc <mkdir@plt>
   13e60:	push	{r4, sl, fp, lr}
   13e64:	add	fp, sp, #8
   13e68:	sub	sp, sp, #104	; 0x68
   13e6c:	mov	r1, r0
   13e70:	mov	r2, sp
   13e74:	mov	r0, #3
   13e78:	bl	1108c <__lxstat64@plt>
   13e7c:	mov	r4, r0
   13e80:	bl	10fb4 <__errno_location@plt>
   13e84:	cmp	r4, #0
   13e88:	beq	13e98 <__mempcpy_chk@plt+0x2df4>
   13e8c:	ldr	r1, [r0]
   13e90:	cmp	r1, #75	; 0x4b
   13e94:	bne	13ea0 <__mempcpy_chk@plt+0x2dfc>
   13e98:	mov	r1, #17
   13e9c:	str	r1, [r0]
   13ea0:	ldr	r0, [r0]
   13ea4:	subs	r0, r0, #2
   13ea8:	mvnne	r0, #0
   13eac:	sub	sp, fp, #8
   13eb0:	pop	{r4, sl, fp, pc}
   13eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eb8:	add	fp, sp, #28
   13ebc:	sub	sp, sp, #68	; 0x44
   13ec0:	mov	r5, r3
   13ec4:	mov	r9, r2
   13ec8:	mov	r4, r1
   13ecc:	mov	r7, r0
   13ed0:	bl	10fb4 <__errno_location@plt>
   13ed4:	str	r0, [sp, #20]
   13ed8:	ldr	sl, [r0]
   13edc:	mov	r0, #0
   13ee0:	str	r0, [sp, #44]	; 0x2c
   13ee4:	add	r0, sp, #40	; 0x28
   13ee8:	lsr	r0, r0, #3
   13eec:	str	r0, [sp, #40]	; 0x28
   13ef0:	ldr	r0, [fp, #8]
   13ef4:	add	r6, r0, r4
   13ef8:	mov	r0, r7
   13efc:	bl	10fa8 <strlen@plt>
   13f00:	mvn	r8, #0
   13f04:	mov	r4, #22
   13f08:	cmp	r0, r6
   13f0c:	bcc	141a0 <__mempcpy_chk@plt+0x30fc>
   13f10:	sub	r0, r0, r6
   13f14:	movw	r1, #22792	; 0x5908
   13f18:	add	r6, r7, r0
   13f1c:	movt	r1, #1
   13f20:	mov	r0, r6
   13f24:	bl	11098 <strspn@plt>
   13f28:	ldr	r1, [fp, #8]
   13f2c:	cmp	r0, r1
   13f30:	bcc	141a0 <__mempcpy_chk@plt+0x30fc>
   13f34:	movw	r0, #15968	; 0x3e60
   13f38:	movw	r4, #39131	; 0x98db
   13f3c:	str	r6, [sp, #32]
   13f40:	movw	r6, #21503	; 0x53ff
   13f44:	mov	r3, #0
   13f48:	mov	r2, #0
   13f4c:	str	sl, [sp, #4]
   13f50:	str	r7, [sp, #8]
   13f54:	str	r5, [sp, #16]
   13f58:	str	r9, [sp, #12]
   13f5c:	movt	r0, #1
   13f60:	movt	r4, #62617	; 0xf499
   13f64:	movt	r6, #2727	; 0xaa7
   13f68:	sub	r0, r5, r0
   13f6c:	clz	r0, r0
   13f70:	lsr	r0, r0, #5
   13f74:	str	r0, [sp, #28]
   13f78:	cmp	r1, #0
   13f7c:	str	r2, [sp, #24]
   13f80:	beq	1413c <__mempcpy_chk@plt+0x3098>
   13f84:	mov	sl, #0
   13f88:	sub	r5, fp, #40	; 0x28
   13f8c:	b	13fe4 <__mempcpy_chk@plt+0x2f40>
   13f90:	str	r3, [sp, #36]	; 0x24
   13f94:	mov	r0, r8
   13f98:	mov	r1, r9
   13f9c:	mov	r2, #62	; 0x3e
   13fa0:	mov	r3, #0
   13fa4:	bl	15104 <__mempcpy_chk@plt+0x4060>
   13fa8:	rsb	r2, r0, r0, lsl #5
   13fac:	movw	r3, #23936	; 0x5d80
   13fb0:	movt	r3, #1
   13fb4:	sub	r2, r8, r2, lsl #1
   13fb8:	ldrb	r2, [r3, r2]
   13fbc:	ldr	r3, [sp, #32]
   13fc0:	strb	r2, [r3, sl]
   13fc4:	ldr	r3, [sp, #36]	; 0x24
   13fc8:	str	r0, [sp, #40]	; 0x28
   13fcc:	ldr	r0, [fp, #8]
   13fd0:	add	sl, sl, #1
   13fd4:	str	r1, [sp, #44]	; 0x2c
   13fd8:	sub	r3, r3, #1
   13fdc:	cmp	sl, r0
   13fe0:	beq	1413c <__mempcpy_chk@plt+0x3098>
   13fe4:	ldr	r8, [sp, #40]	; 0x28
   13fe8:	ldr	r9, [sp, #44]	; 0x2c
   13fec:	cmp	r3, #0
   13ff0:	bne	13f90 <__mempcpy_chk@plt+0x2eec>
   13ff4:	ldr	r0, [sp, #28]
   13ff8:	tst	r0, #1
   13ffc:	beq	14024 <__mempcpy_chk@plt+0x2f80>
   14000:	mov	r0, r5
   14004:	mov	r1, #8
   14008:	mov	r2, #1
   1400c:	bl	1105c <getrandom@plt>
   14010:	cmp	r0, #8
   14014:	bne	14024 <__mempcpy_chk@plt+0x2f80>
   14018:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1401c:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14020:	b	1406c <__mempcpy_chk@plt+0x2fc8>
   14024:	mov	r0, #1
   14028:	add	r1, sp, #48	; 0x30
   1402c:	bl	10e7c <clock_gettime@plt>
   14030:	ldr	r0, [sp, #52]	; 0x34
   14034:	movw	r2, #45309	; 0xb0fd
   14038:	movw	r7, #12006	; 0x2ee6
   1403c:	movt	r2, #34736	; 0x87b0
   14040:	movt	r7, #10171	; 0x27bb
   14044:	mov	ip, r2
   14048:	eor	r1, r8, r0
   1404c:	eor	r0, r9, r0, asr #31
   14050:	umull	r2, r3, r1, r2
   14054:	mul	r0, r0, ip
   14058:	mla	r1, r1, r7, r3
   1405c:	movw	r3, #62253	; 0xf32d
   14060:	movt	r3, #46340	; 0xb504
   14064:	adds	r8, r2, r3
   14068:	adc	r9, r1, r0
   1406c:	subs	r0, r6, r8
   14070:	str	r8, [sp, #40]	; 0x28
   14074:	str	r9, [sp, #44]	; 0x2c
   14078:	sbcs	r0, r4, r9
   1407c:	bcs	14128 <__mempcpy_chk@plt+0x3084>
   14080:	mov	r0, #10
   14084:	str	r0, [sp, #36]	; 0x24
   14088:	mov	r0, #1
   1408c:	str	r0, [sp, #28]
   14090:	b	14104 <__mempcpy_chk@plt+0x3060>
   14094:	mov	r0, #1
   14098:	add	r1, sp, #48	; 0x30
   1409c:	bl	10e7c <clock_gettime@plt>
   140a0:	ldr	r0, [sp, #52]	; 0x34
   140a4:	movw	r2, #45309	; 0xb0fd
   140a8:	mov	r7, r6
   140ac:	mov	r6, r4
   140b0:	movw	r4, #12006	; 0x2ee6
   140b4:	movt	r2, #34736	; 0x87b0
   140b8:	movt	r4, #10171	; 0x27bb
   140bc:	mov	r5, r2
   140c0:	eor	r1, r8, r0
   140c4:	eor	r0, r9, r0, asr #31
   140c8:	umull	r2, r3, r1, r2
   140cc:	mul	r0, r0, r5
   140d0:	sub	r5, fp, #40	; 0x28
   140d4:	mla	r1, r1, r4, r3
   140d8:	movw	r3, #62253	; 0xf32d
   140dc:	mov	r4, r6
   140e0:	mov	r6, r7
   140e4:	movt	r3, #46340	; 0xb504
   140e8:	adds	r8, r2, r3
   140ec:	adc	r9, r1, r0
   140f0:	subs	r0, r6, r8
   140f4:	str	r8, [sp, #40]	; 0x28
   140f8:	str	r9, [sp, #44]	; 0x2c
   140fc:	sbcs	r0, r4, r9
   14100:	bcs	13f94 <__mempcpy_chk@plt+0x2ef0>
   14104:	mov	r0, r5
   14108:	mov	r1, #8
   1410c:	mov	r2, #1
   14110:	bl	1105c <getrandom@plt>
   14114:	cmp	r0, #8
   14118:	bne	14094 <__mempcpy_chk@plt+0x2ff0>
   1411c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   14120:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14124:	b	140f0 <__mempcpy_chk@plt+0x304c>
   14128:	mov	r0, #10
   1412c:	str	r0, [sp, #36]	; 0x24
   14130:	mov	r0, #1
   14134:	str	r0, [sp, #28]
   14138:	b	13f94 <__mempcpy_chk@plt+0x2ef0>
   1413c:	ldr	r9, [sp, #12]
   14140:	ldr	r0, [sp, #8]
   14144:	ldr	r5, [sp, #16]
   14148:	mov	r7, r3
   1414c:	mov	r1, r9
   14150:	blx	r5
   14154:	cmn	r0, #1
   14158:	bgt	14198 <__mempcpy_chk@plt+0x30f4>
   1415c:	ldr	r0, [sp, #20]
   14160:	ldr	r0, [r0]
   14164:	cmp	r0, #17
   14168:	bne	141b4 <__mempcpy_chk@plt+0x3110>
   1416c:	ldr	r2, [sp, #24]
   14170:	movw	r0, #41720	; 0xa2f8
   14174:	ldr	r1, [fp, #8]
   14178:	mov	r3, r7
   1417c:	movt	r0, #3
   14180:	add	r2, r2, #1
   14184:	cmp	r2, r0
   14188:	bne	13f78 <__mempcpy_chk@plt+0x2ed4>
   1418c:	mvn	r8, #0
   14190:	mov	r4, #17
   14194:	b	141a0 <__mempcpy_chk@plt+0x30fc>
   14198:	ldr	r4, [sp, #4]
   1419c:	mov	r8, r0
   141a0:	ldr	r0, [sp, #20]
   141a4:	str	r4, [r0]
   141a8:	mov	r0, r8
   141ac:	sub	sp, fp, #28
   141b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141b4:	mvn	r8, #0
   141b8:	b	141a8 <__mempcpy_chk@plt+0x3104>
   141bc:	push	{fp, lr}
   141c0:	mov	fp, sp
   141c4:	sub	sp, sp, #8
   141c8:	str	r2, [sp, #4]
   141cc:	mov	r2, #6
   141d0:	str	r2, [sp]
   141d4:	movw	r2, #23924	; 0x5d74
   141d8:	movt	r2, #1
   141dc:	ldr	r3, [r2, r3, lsl #2]
   141e0:	add	r2, sp, #4
   141e4:	bl	13eb4 <__mempcpy_chk@plt+0x2e10>
   141e8:	mov	sp, fp
   141ec:	pop	{fp, pc}
   141f0:	push	{fp, lr}
   141f4:	mov	fp, sp
   141f8:	sub	sp, sp, #8
   141fc:	mov	ip, #6
   14200:	str	ip, [sp]
   14204:	bl	13eb4 <__mempcpy_chk@plt+0x2e10>
   14208:	mov	sp, fp
   1420c:	pop	{fp, pc}
   14210:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14214:	add	fp, sp, #24
   14218:	sub	sp, sp, #32
   1421c:	ldr	r6, [fp, #12]
   14220:	ldr	r7, [fp, #8]
   14224:	mov	r4, r2
   14228:	mov	r8, r0
   1422c:	cmp	r1, #0
   14230:	beq	14258 <__mempcpy_chk@plt+0x31b4>
   14234:	movw	r2, #23999	; 0x5dbf
   14238:	mov	r5, r1
   1423c:	str	r3, [sp, #4]
   14240:	str	r4, [sp]
   14244:	mov	r0, r8
   14248:	mov	r1, #1
   1424c:	movt	r2, #1
   14250:	mov	r3, r5
   14254:	b	14270 <__mempcpy_chk@plt+0x31cc>
   14258:	movw	r2, #24011	; 0x5dcb
   1425c:	str	r3, [sp]
   14260:	mov	r0, r8
   14264:	mov	r1, #1
   14268:	mov	r3, r4
   1426c:	movt	r2, #1
   14270:	bl	10ffc <__fprintf_chk@plt>
   14274:	movw	r1, #24018	; 0x5dd2
   14278:	mov	r0, #0
   1427c:	mov	r2, #5
   14280:	movt	r1, #1
   14284:	bl	10eac <dcgettext@plt>
   14288:	movw	r2, #24736	; 0x60a0
   1428c:	mov	r3, r0
   14290:	movw	r0, #2022	; 0x7e6
   14294:	mov	r1, #1
   14298:	movt	r2, #1
   1429c:	str	r0, [sp]
   142a0:	mov	r0, r8
   142a4:	bl	10ffc <__fprintf_chk@plt>
   142a8:	movw	r4, #23394	; 0x5b62
   142ac:	mov	r1, r8
   142b0:	movt	r4, #1
   142b4:	mov	r0, r4
   142b8:	bl	10e40 <fputs_unlocked@plt>
   142bc:	movw	r1, #24022	; 0x5dd6
   142c0:	mov	r0, #0
   142c4:	mov	r2, #5
   142c8:	movt	r1, #1
   142cc:	bl	10eac <dcgettext@plt>
   142d0:	movw	r3, #24193	; 0x5e81
   142d4:	mov	r2, r0
   142d8:	mov	r0, r8
   142dc:	mov	r1, #1
   142e0:	movt	r3, #1
   142e4:	bl	10ffc <__fprintf_chk@plt>
   142e8:	mov	r0, r4
   142ec:	mov	r1, r8
   142f0:	bl	10e40 <fputs_unlocked@plt>
   142f4:	cmp	r6, #9
   142f8:	bhi	14334 <__mempcpy_chk@plt+0x3290>
   142fc:	add	r0, pc, #0
   14300:	ldr	pc, [r0, r6, lsl #2]
   14304:	andeq	r4, r1, ip, lsr #6
   14308:	andeq	r4, r1, r0, asr #6
   1430c:	andeq	r4, r1, r0, ror r3
   14310:	muleq	r1, r8, r3
   14314:	andeq	r4, r1, r0, asr #7
   14318:	andeq	r4, r1, r8, ror #7
   1431c:	andeq	r4, r1, r0, lsl r4
   14320:	andeq	r4, r1, r8, asr #8
   14324:	andeq	r4, r1, r8, ror #9
   14328:	muleq	r1, r0, r4
   1432c:	sub	sp, fp, #24
   14330:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14334:	movw	r1, #24546	; 0x5fe2
   14338:	movt	r1, #1
   1433c:	b	14498 <__mempcpy_chk@plt+0x33f4>
   14340:	movw	r1, #24227	; 0x5ea3
   14344:	mov	r0, #0
   14348:	mov	r2, #5
   1434c:	movt	r1, #1
   14350:	bl	10eac <dcgettext@plt>
   14354:	ldr	r3, [r7]
   14358:	mov	r2, r0
   1435c:	mov	r0, r8
   14360:	mov	r1, #1
   14364:	sub	sp, fp, #24
   14368:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1436c:	b	10ffc <__fprintf_chk@plt>
   14370:	movw	r1, #24243	; 0x5eb3
   14374:	mov	r0, #0
   14378:	mov	r2, #5
   1437c:	movt	r1, #1
   14380:	bl	10eac <dcgettext@plt>
   14384:	mov	r2, r0
   14388:	ldr	r3, [r7]
   1438c:	ldr	r0, [r7, #4]
   14390:	str	r0, [sp]
   14394:	b	14484 <__mempcpy_chk@plt+0x33e0>
   14398:	movw	r1, #24266	; 0x5eca
   1439c:	mov	r0, #0
   143a0:	mov	r2, #5
   143a4:	movt	r1, #1
   143a8:	bl	10eac <dcgettext@plt>
   143ac:	mov	r2, r0
   143b0:	ldr	r3, [r7]
   143b4:	ldmib	r7, {r0, r1}
   143b8:	stm	sp, {r0, r1}
   143bc:	b	14484 <__mempcpy_chk@plt+0x33e0>
   143c0:	movw	r1, #24294	; 0x5ee6
   143c4:	mov	r0, #0
   143c8:	mov	r2, #5
   143cc:	movt	r1, #1
   143d0:	bl	10eac <dcgettext@plt>
   143d4:	ldr	r3, [r7]
   143d8:	mov	r2, r0
   143dc:	ldmib	r7, {r0, r1, r7}
   143e0:	stm	sp, {r0, r1, r7}
   143e4:	b	14484 <__mempcpy_chk@plt+0x33e0>
   143e8:	movw	r1, #24326	; 0x5f06
   143ec:	mov	r0, #0
   143f0:	mov	r2, #5
   143f4:	movt	r1, #1
   143f8:	bl	10eac <dcgettext@plt>
   143fc:	ldr	r3, [r7]
   14400:	mov	r2, r0
   14404:	ldmib	r7, {r0, r1, r6, r7}
   14408:	stm	sp, {r0, r1, r6, r7}
   1440c:	b	14484 <__mempcpy_chk@plt+0x33e0>
   14410:	movw	r1, #24362	; 0x5f2a
   14414:	mov	r0, #0
   14418:	mov	r2, #5
   1441c:	movt	r1, #1
   14420:	bl	10eac <dcgettext@plt>
   14424:	mov	r2, r0
   14428:	ldr	r3, [r7]
   1442c:	ldmib	r7, {r0, r1, r6}
   14430:	ldr	r5, [r7, #16]
   14434:	ldr	r7, [r7, #20]
   14438:	stm	sp, {r0, r1, r6}
   1443c:	str	r5, [sp, #12]
   14440:	str	r7, [sp, #16]
   14444:	b	14484 <__mempcpy_chk@plt+0x33e0>
   14448:	movw	r1, #24402	; 0x5f52
   1444c:	mov	r0, #0
   14450:	mov	r2, #5
   14454:	movt	r1, #1
   14458:	bl	10eac <dcgettext@plt>
   1445c:	mov	r2, r0
   14460:	ldr	r3, [r7]
   14464:	ldmib	r7, {r0, r1, r6}
   14468:	ldr	r5, [r7, #16]
   1446c:	ldr	r4, [r7, #20]
   14470:	ldr	r7, [r7, #24]
   14474:	stm	sp, {r0, r1, r6}
   14478:	str	r5, [sp, #12]
   1447c:	str	r4, [sp, #16]
   14480:	str	r7, [sp, #20]
   14484:	mov	r0, r8
   14488:	mov	r1, #1
   1448c:	b	14538 <__mempcpy_chk@plt+0x3494>
   14490:	movw	r1, #24494	; 0x5fae
   14494:	movt	r1, #1
   14498:	mov	r0, #0
   1449c:	mov	r2, #5
   144a0:	bl	10eac <dcgettext@plt>
   144a4:	mov	ip, r0
   144a8:	ldr	r3, [r7]
   144ac:	ldr	r0, [r7, #4]
   144b0:	ldr	r1, [r7, #8]
   144b4:	ldr	r6, [r7, #12]
   144b8:	ldr	r5, [r7, #16]
   144bc:	ldr	r4, [r7, #20]
   144c0:	ldr	r2, [r7, #24]
   144c4:	ldr	lr, [r7, #28]
   144c8:	ldr	r7, [r7, #32]
   144cc:	stm	sp, {r0, r1, r6}
   144d0:	str	r5, [sp, #12]
   144d4:	str	r4, [sp, #16]
   144d8:	str	r2, [sp, #20]
   144dc:	str	lr, [sp, #24]
   144e0:	str	r7, [sp, #28]
   144e4:	b	1452c <__mempcpy_chk@plt+0x3488>
   144e8:	movw	r1, #24446	; 0x5f7e
   144ec:	mov	r0, #0
   144f0:	mov	r2, #5
   144f4:	movt	r1, #1
   144f8:	bl	10eac <dcgettext@plt>
   144fc:	mov	ip, r0
   14500:	ldr	r3, [r7]
   14504:	ldmib	r7, {r0, r1, r6}
   14508:	ldr	r5, [r7, #16]
   1450c:	ldr	r4, [r7, #20]
   14510:	ldr	r2, [r7, #24]
   14514:	ldr	r7, [r7, #28]
   14518:	stm	sp, {r0, r1, r6}
   1451c:	str	r5, [sp, #12]
   14520:	str	r4, [sp, #16]
   14524:	str	r2, [sp, #20]
   14528:	str	r7, [sp, #24]
   1452c:	mov	r0, r8
   14530:	mov	r1, #1
   14534:	mov	r2, ip
   14538:	bl	10ffc <__fprintf_chk@plt>
   1453c:	sub	sp, fp, #24
   14540:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14544:	push	{r4, sl, fp, lr}
   14548:	add	fp, sp, #8
   1454c:	sub	sp, sp, #8
   14550:	ldr	ip, [fp, #8]
   14554:	mov	lr, #0
   14558:	ldr	r4, [ip, lr, lsl #2]
   1455c:	add	lr, lr, #1
   14560:	cmp	r4, #0
   14564:	bne	14558 <__mempcpy_chk@plt+0x34b4>
   14568:	sub	r4, lr, #1
   1456c:	str	ip, [sp]
   14570:	str	r4, [sp, #4]
   14574:	bl	14210 <__mempcpy_chk@plt+0x316c>
   14578:	sub	sp, fp, #8
   1457c:	pop	{r4, sl, fp, pc}
   14580:	push	{fp, lr}
   14584:	mov	fp, sp
   14588:	sub	sp, sp, #48	; 0x30
   1458c:	ldr	ip, [fp, #8]
   14590:	ldr	lr, [ip]
   14594:	cmp	lr, #0
   14598:	str	lr, [sp, #8]
   1459c:	beq	14638 <__mempcpy_chk@plt+0x3594>
   145a0:	ldr	lr, [ip, #4]
   145a4:	cmp	lr, #0
   145a8:	str	lr, [sp, #12]
   145ac:	beq	14640 <__mempcpy_chk@plt+0x359c>
   145b0:	ldr	lr, [ip, #8]
   145b4:	cmp	lr, #0
   145b8:	str	lr, [sp, #16]
   145bc:	beq	14648 <__mempcpy_chk@plt+0x35a4>
   145c0:	ldr	lr, [ip, #12]
   145c4:	cmp	lr, #0
   145c8:	str	lr, [sp, #20]
   145cc:	beq	14650 <__mempcpy_chk@plt+0x35ac>
   145d0:	ldr	lr, [ip, #16]
   145d4:	cmp	lr, #0
   145d8:	str	lr, [sp, #24]
   145dc:	beq	14658 <__mempcpy_chk@plt+0x35b4>
   145e0:	ldr	lr, [ip, #20]
   145e4:	cmp	lr, #0
   145e8:	str	lr, [sp, #28]
   145ec:	beq	14660 <__mempcpy_chk@plt+0x35bc>
   145f0:	ldr	lr, [ip, #24]
   145f4:	cmp	lr, #0
   145f8:	str	lr, [sp, #32]
   145fc:	beq	14668 <__mempcpy_chk@plt+0x35c4>
   14600:	ldr	lr, [ip, #28]
   14604:	cmp	lr, #0
   14608:	str	lr, [sp, #36]	; 0x24
   1460c:	beq	14670 <__mempcpy_chk@plt+0x35cc>
   14610:	ldr	lr, [ip, #32]
   14614:	cmp	lr, #0
   14618:	str	lr, [sp, #40]	; 0x28
   1461c:	beq	14678 <__mempcpy_chk@plt+0x35d4>
   14620:	ldr	lr, [ip, #36]	; 0x24
   14624:	mov	ip, #10
   14628:	cmp	lr, #0
   1462c:	str	lr, [sp, #44]	; 0x2c
   14630:	movweq	ip, #9
   14634:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14638:	mov	ip, #0
   1463c:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14640:	mov	ip, #1
   14644:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14648:	mov	ip, #2
   1464c:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14650:	mov	ip, #3
   14654:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14658:	mov	ip, #4
   1465c:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14660:	mov	ip, #5
   14664:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14668:	mov	ip, #6
   1466c:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14670:	mov	ip, #7
   14674:	b	1467c <__mempcpy_chk@plt+0x35d8>
   14678:	mov	ip, #8
   1467c:	add	lr, sp, #8
   14680:	str	ip, [sp, #4]
   14684:	str	lr, [sp]
   14688:	bl	14210 <__mempcpy_chk@plt+0x316c>
   1468c:	mov	sp, fp
   14690:	pop	{fp, pc}
   14694:	push	{fp, lr}
   14698:	mov	fp, sp
   1469c:	sub	sp, sp, #56	; 0x38
   146a0:	add	ip, fp, #8
   146a4:	str	ip, [sp, #12]
   146a8:	ldr	lr, [fp, #8]
   146ac:	cmp	lr, #0
   146b0:	str	lr, [sp, #16]
   146b4:	beq	14750 <__mempcpy_chk@plt+0x36ac>
   146b8:	ldr	lr, [ip, #4]
   146bc:	cmp	lr, #0
   146c0:	str	lr, [sp, #20]
   146c4:	beq	14758 <__mempcpy_chk@plt+0x36b4>
   146c8:	ldr	lr, [ip, #8]
   146cc:	cmp	lr, #0
   146d0:	str	lr, [sp, #24]
   146d4:	beq	14760 <__mempcpy_chk@plt+0x36bc>
   146d8:	ldr	lr, [ip, #12]
   146dc:	cmp	lr, #0
   146e0:	str	lr, [sp, #28]
   146e4:	beq	14768 <__mempcpy_chk@plt+0x36c4>
   146e8:	ldr	lr, [ip, #16]
   146ec:	cmp	lr, #0
   146f0:	str	lr, [sp, #32]
   146f4:	beq	14770 <__mempcpy_chk@plt+0x36cc>
   146f8:	ldr	lr, [ip, #20]
   146fc:	cmp	lr, #0
   14700:	str	lr, [sp, #36]	; 0x24
   14704:	beq	14778 <__mempcpy_chk@plt+0x36d4>
   14708:	ldr	lr, [ip, #24]
   1470c:	cmp	lr, #0
   14710:	str	lr, [sp, #40]	; 0x28
   14714:	beq	14780 <__mempcpy_chk@plt+0x36dc>
   14718:	ldr	lr, [ip, #28]
   1471c:	cmp	lr, #0
   14720:	str	lr, [sp, #44]	; 0x2c
   14724:	beq	14788 <__mempcpy_chk@plt+0x36e4>
   14728:	ldr	lr, [ip, #32]
   1472c:	cmp	lr, #0
   14730:	str	lr, [sp, #48]	; 0x30
   14734:	beq	14790 <__mempcpy_chk@plt+0x36ec>
   14738:	ldr	lr, [ip, #36]	; 0x24
   1473c:	mov	ip, #10
   14740:	cmp	lr, #0
   14744:	str	lr, [sp, #52]	; 0x34
   14748:	movweq	ip, #9
   1474c:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14750:	mov	ip, #0
   14754:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14758:	mov	ip, #1
   1475c:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14760:	mov	ip, #2
   14764:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14768:	mov	ip, #3
   1476c:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14770:	mov	ip, #4
   14774:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14778:	mov	ip, #5
   1477c:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14780:	mov	ip, #6
   14784:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14788:	mov	ip, #7
   1478c:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14790:	mov	ip, #8
   14794:	add	lr, sp, #16
   14798:	str	ip, [sp, #4]
   1479c:	str	lr, [sp]
   147a0:	bl	14210 <__mempcpy_chk@plt+0x316c>
   147a4:	mov	sp, fp
   147a8:	pop	{fp, pc}
   147ac:	push	{fp, lr}
   147b0:	mov	fp, sp
   147b4:	movw	r0, #29004	; 0x714c
   147b8:	movt	r0, #2
   147bc:	ldr	r1, [r0]
   147c0:	movw	r0, #23394	; 0x5b62
   147c4:	movt	r0, #1
   147c8:	bl	10e40 <fputs_unlocked@plt>
   147cc:	movw	r1, #24606	; 0x601e
   147d0:	mov	r0, #0
   147d4:	mov	r2, #5
   147d8:	movt	r1, #1
   147dc:	bl	10eac <dcgettext@plt>
   147e0:	movw	r2, #24626	; 0x6032
   147e4:	mov	r1, r0
   147e8:	mov	r0, #1
   147ec:	movt	r2, #1
   147f0:	bl	10fe4 <__printf_chk@plt>
   147f4:	movw	r1, #24648	; 0x6048
   147f8:	mov	r0, #0
   147fc:	mov	r2, #5
   14800:	movt	r1, #1
   14804:	bl	10eac <dcgettext@plt>
   14808:	movw	r2, #22696	; 0x58a8
   1480c:	movw	r3, #23203	; 0x5aa3
   14810:	mov	r1, r0
   14814:	mov	r0, #1
   14818:	movt	r2, #1
   1481c:	movt	r3, #1
   14820:	bl	10fe4 <__printf_chk@plt>
   14824:	movw	r1, #24668	; 0x605c
   14828:	mov	r0, #0
   1482c:	mov	r2, #5
   14830:	movt	r1, #1
   14834:	bl	10eac <dcgettext@plt>
   14838:	movw	r2, #24707	; 0x6083
   1483c:	mov	r1, r0
   14840:	mov	r0, #1
   14844:	movt	r2, #1
   14848:	pop	{fp, lr}
   1484c:	b	10fe4 <__printf_chk@plt>
   14850:	push	{r4, r5, r6, sl, fp, lr}
   14854:	add	fp, sp, #16
   14858:	mov	r4, r2
   1485c:	mov	r5, r1
   14860:	mov	r6, r0
   14864:	bl	14fbc <__mempcpy_chk@plt+0x3f18>
   14868:	cmp	r0, #0
   1486c:	popne	{r4, r5, r6, sl, fp, pc}
   14870:	cmp	r6, #0
   14874:	beq	14888 <__mempcpy_chk@plt+0x37e4>
   14878:	cmp	r5, #0
   1487c:	cmpne	r4, #0
   14880:	bne	14888 <__mempcpy_chk@plt+0x37e4>
   14884:	pop	{r4, r5, r6, sl, fp, pc}
   14888:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   1488c:	push	{r4, r5, r6, sl, fp, lr}
   14890:	add	fp, sp, #16
   14894:	mov	r4, r2
   14898:	mov	r5, r1
   1489c:	mov	r6, r0
   148a0:	bl	14fbc <__mempcpy_chk@plt+0x3f18>
   148a4:	cmp	r0, #0
   148a8:	popne	{r4, r5, r6, sl, fp, pc}
   148ac:	cmp	r6, #0
   148b0:	beq	148c4 <__mempcpy_chk@plt+0x3820>
   148b4:	cmp	r5, #0
   148b8:	cmpne	r4, #0
   148bc:	bne	148c4 <__mempcpy_chk@plt+0x3820>
   148c0:	pop	{r4, r5, r6, sl, fp, pc}
   148c4:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   148c8:	push	{fp, lr}
   148cc:	mov	fp, sp
   148d0:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   148d4:	cmp	r0, #0
   148d8:	popne	{fp, pc}
   148dc:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   148e0:	push	{fp, lr}
   148e4:	mov	fp, sp
   148e8:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   148ec:	cmp	r0, #0
   148f0:	popne	{fp, pc}
   148f4:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   148f8:	push	{fp, lr}
   148fc:	mov	fp, sp
   14900:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   14904:	cmp	r0, #0
   14908:	popne	{fp, pc}
   1490c:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14910:	push	{r4, r5, fp, lr}
   14914:	add	fp, sp, #8
   14918:	mov	r4, r1
   1491c:	mov	r5, r0
   14920:	bl	14ecc <__mempcpy_chk@plt+0x3e28>
   14924:	cmp	r0, #0
   14928:	popne	{r4, r5, fp, pc}
   1492c:	cmp	r5, #0
   14930:	beq	14940 <__mempcpy_chk@plt+0x389c>
   14934:	cmp	r4, #0
   14938:	bne	14940 <__mempcpy_chk@plt+0x389c>
   1493c:	pop	{r4, r5, fp, pc}
   14940:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14944:	push	{fp, lr}
   14948:	mov	fp, sp
   1494c:	cmp	r1, #0
   14950:	orreq	r1, r1, #1
   14954:	bl	14ecc <__mempcpy_chk@plt+0x3e28>
   14958:	cmp	r0, #0
   1495c:	popne	{fp, pc}
   14960:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14964:	push	{fp, lr}
   14968:	mov	fp, sp
   1496c:	clz	r3, r2
   14970:	lsr	ip, r3, #5
   14974:	clz	r3, r1
   14978:	lsr	r3, r3, #5
   1497c:	orrs	r3, r3, ip
   14980:	movwne	r1, #1
   14984:	movwne	r2, #1
   14988:	bl	14fbc <__mempcpy_chk@plt+0x3f18>
   1498c:	cmp	r0, #0
   14990:	popne	{fp, pc}
   14994:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14998:	push	{fp, lr}
   1499c:	mov	fp, sp
   149a0:	mov	r2, r1
   149a4:	mov	r1, r0
   149a8:	mov	r0, #0
   149ac:	bl	14fbc <__mempcpy_chk@plt+0x3f18>
   149b0:	cmp	r0, #0
   149b4:	popne	{fp, pc}
   149b8:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   149bc:	push	{fp, lr}
   149c0:	mov	fp, sp
   149c4:	mov	r2, r1
   149c8:	mov	r1, r0
   149cc:	clz	r0, r2
   149d0:	clz	r3, r1
   149d4:	lsr	r0, r0, #5
   149d8:	lsr	r3, r3, #5
   149dc:	orrs	r0, r3, r0
   149e0:	mov	r0, #0
   149e4:	movwne	r1, #1
   149e8:	movwne	r2, #1
   149ec:	bl	14fbc <__mempcpy_chk@plt+0x3f18>
   149f0:	cmp	r0, #0
   149f4:	popne	{fp, pc}
   149f8:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   149fc:	push	{r4, r5, r6, sl, fp, lr}
   14a00:	add	fp, sp, #16
   14a04:	ldr	r5, [r1]
   14a08:	mov	r4, r1
   14a0c:	mov	r6, r0
   14a10:	cmp	r0, #0
   14a14:	beq	14a2c <__mempcpy_chk@plt+0x3988>
   14a18:	mov	r0, #1
   14a1c:	add	r0, r0, r5, lsr #1
   14a20:	adds	r5, r5, r0
   14a24:	bcc	14a34 <__mempcpy_chk@plt+0x3990>
   14a28:	b	14a70 <__mempcpy_chk@plt+0x39cc>
   14a2c:	cmp	r5, #0
   14a30:	movweq	r5, #64	; 0x40
   14a34:	mov	r0, r6
   14a38:	mov	r1, r5
   14a3c:	mov	r2, #1
   14a40:	bl	14fbc <__mempcpy_chk@plt+0x3f18>
   14a44:	cmp	r5, #0
   14a48:	mov	r1, r5
   14a4c:	movwne	r1, #1
   14a50:	cmp	r0, #0
   14a54:	bne	14a68 <__mempcpy_chk@plt+0x39c4>
   14a58:	clz	r2, r6
   14a5c:	lsr	r2, r2, #5
   14a60:	orrs	r1, r2, r1
   14a64:	bne	14a70 <__mempcpy_chk@plt+0x39cc>
   14a68:	str	r5, [r4]
   14a6c:	pop	{r4, r5, r6, sl, fp, pc}
   14a70:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14a74:	push	{r4, r5, r6, r7, fp, lr}
   14a78:	add	fp, sp, #16
   14a7c:	ldr	r5, [r1]
   14a80:	mov	r6, r2
   14a84:	mov	r4, r1
   14a88:	mov	r7, r0
   14a8c:	cmp	r0, #0
   14a90:	beq	14aa8 <__mempcpy_chk@plt+0x3a04>
   14a94:	mov	r0, #1
   14a98:	add	r0, r0, r5, lsr #1
   14a9c:	adds	r5, r5, r0
   14aa0:	bcc	14ac0 <__mempcpy_chk@plt+0x3a1c>
   14aa4:	b	14af4 <__mempcpy_chk@plt+0x3a50>
   14aa8:	cmp	r5, #0
   14aac:	bne	14ac0 <__mempcpy_chk@plt+0x3a1c>
   14ab0:	mov	r0, #64	; 0x40
   14ab4:	cmp	r6, #64	; 0x40
   14ab8:	udiv	r5, r0, r6
   14abc:	addhi	r5, r5, #1
   14ac0:	mov	r0, r7
   14ac4:	mov	r1, r5
   14ac8:	mov	r2, r6
   14acc:	bl	14fbc <__mempcpy_chk@plt+0x3f18>
   14ad0:	cmp	r0, #0
   14ad4:	bne	14aec <__mempcpy_chk@plt+0x3a48>
   14ad8:	cmp	r7, #0
   14adc:	beq	14af4 <__mempcpy_chk@plt+0x3a50>
   14ae0:	cmp	r6, #0
   14ae4:	cmpne	r5, #0
   14ae8:	bne	14af4 <__mempcpy_chk@plt+0x3a50>
   14aec:	str	r5, [r4]
   14af0:	pop	{r4, r5, r6, r7, fp, pc}
   14af4:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14af8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14afc:	add	fp, sp, #24
   14b00:	mov	r8, r1
   14b04:	ldr	r1, [r1]
   14b08:	mov	r5, r0
   14b0c:	add	r0, r1, r1, asr #1
   14b10:	cmp	r0, r1
   14b14:	mvnvs	r0, #-2147483648	; 0x80000000
   14b18:	cmp	r0, r3
   14b1c:	mov	r7, r0
   14b20:	movgt	r7, r3
   14b24:	cmn	r3, #1
   14b28:	movle	r7, r0
   14b2c:	ldr	r0, [fp, #8]
   14b30:	cmn	r0, #1
   14b34:	ble	14b5c <__mempcpy_chk@plt+0x3ab8>
   14b38:	cmp	r0, #0
   14b3c:	beq	14bb0 <__mempcpy_chk@plt+0x3b0c>
   14b40:	cmn	r7, #1
   14b44:	ble	14b84 <__mempcpy_chk@plt+0x3ae0>
   14b48:	mvn	r4, #-2147483648	; 0x80000000
   14b4c:	udiv	r6, r4, r0
   14b50:	cmp	r6, r7
   14b54:	bge	14bb0 <__mempcpy_chk@plt+0x3b0c>
   14b58:	b	14bc0 <__mempcpy_chk@plt+0x3b1c>
   14b5c:	cmn	r7, #1
   14b60:	ble	14ba0 <__mempcpy_chk@plt+0x3afc>
   14b64:	cmn	r0, #1
   14b68:	beq	14bb0 <__mempcpy_chk@plt+0x3b0c>
   14b6c:	mov	r6, #-2147483648	; 0x80000000
   14b70:	mvn	r4, #-2147483648	; 0x80000000
   14b74:	sdiv	r6, r6, r0
   14b78:	cmp	r6, r7
   14b7c:	bge	14bb0 <__mempcpy_chk@plt+0x3b0c>
   14b80:	b	14bc0 <__mempcpy_chk@plt+0x3b1c>
   14b84:	beq	14bb0 <__mempcpy_chk@plt+0x3b0c>
   14b88:	mov	r6, #-2147483648	; 0x80000000
   14b8c:	mvn	r4, #-2147483648	; 0x80000000
   14b90:	sdiv	r6, r6, r7
   14b94:	cmp	r6, r0
   14b98:	bge	14bb0 <__mempcpy_chk@plt+0x3b0c>
   14b9c:	b	14bc0 <__mempcpy_chk@plt+0x3b1c>
   14ba0:	mvn	r4, #-2147483648	; 0x80000000
   14ba4:	sdiv	r6, r4, r0
   14ba8:	cmp	r7, r6
   14bac:	blt	14bc0 <__mempcpy_chk@plt+0x3b1c>
   14bb0:	mul	r6, r7, r0
   14bb4:	mov	r4, #64	; 0x40
   14bb8:	cmp	r6, #63	; 0x3f
   14bbc:	bgt	14bc8 <__mempcpy_chk@plt+0x3b24>
   14bc0:	sdiv	r7, r4, r0
   14bc4:	mul	r6, r7, r0
   14bc8:	cmp	r5, #0
   14bcc:	moveq	r4, #0
   14bd0:	streq	r4, [r8]
   14bd4:	sub	r4, r7, r1
   14bd8:	cmp	r4, r2
   14bdc:	bge	14c88 <__mempcpy_chk@plt+0x3be4>
   14be0:	add	r7, r1, r2
   14be4:	mov	r6, #0
   14be8:	mov	r2, #0
   14bec:	cmp	r7, r3
   14bf0:	movwgt	r6, #1
   14bf4:	cmn	r3, #1
   14bf8:	movwgt	r2, #1
   14bfc:	cmp	r7, r1
   14c00:	bvs	14cbc <__mempcpy_chk@plt+0x3c18>
   14c04:	ands	r1, r2, r6
   14c08:	bne	14cbc <__mempcpy_chk@plt+0x3c18>
   14c0c:	cmn	r0, #1
   14c10:	ble	14c38 <__mempcpy_chk@plt+0x3b94>
   14c14:	cmp	r0, #0
   14c18:	beq	14c84 <__mempcpy_chk@plt+0x3be0>
   14c1c:	cmn	r7, #1
   14c20:	ble	14c5c <__mempcpy_chk@plt+0x3bb8>
   14c24:	mvn	r1, #-2147483648	; 0x80000000
   14c28:	udiv	r1, r1, r0
   14c2c:	cmp	r1, r7
   14c30:	bge	14c84 <__mempcpy_chk@plt+0x3be0>
   14c34:	b	14cbc <__mempcpy_chk@plt+0x3c18>
   14c38:	cmn	r7, #1
   14c3c:	ble	14c74 <__mempcpy_chk@plt+0x3bd0>
   14c40:	cmn	r0, #1
   14c44:	beq	14c84 <__mempcpy_chk@plt+0x3be0>
   14c48:	mov	r1, #-2147483648	; 0x80000000
   14c4c:	sdiv	r1, r1, r0
   14c50:	cmp	r1, r7
   14c54:	bge	14c84 <__mempcpy_chk@plt+0x3be0>
   14c58:	b	14cbc <__mempcpy_chk@plt+0x3c18>
   14c5c:	beq	14c84 <__mempcpy_chk@plt+0x3be0>
   14c60:	mov	r1, #-2147483648	; 0x80000000
   14c64:	sdiv	r1, r1, r7
   14c68:	cmp	r1, r0
   14c6c:	bge	14c84 <__mempcpy_chk@plt+0x3be0>
   14c70:	b	14cbc <__mempcpy_chk@plt+0x3c18>
   14c74:	mvn	r1, #-2147483648	; 0x80000000
   14c78:	sdiv	r1, r1, r0
   14c7c:	cmp	r7, r1
   14c80:	blt	14cbc <__mempcpy_chk@plt+0x3c18>
   14c84:	mul	r6, r7, r0
   14c88:	mov	r0, r5
   14c8c:	mov	r1, r6
   14c90:	bl	14ecc <__mempcpy_chk@plt+0x3e28>
   14c94:	cmp	r6, #0
   14c98:	movwne	r6, #1
   14c9c:	cmp	r0, #0
   14ca0:	bne	14cb4 <__mempcpy_chk@plt+0x3c10>
   14ca4:	clz	r1, r5
   14ca8:	lsr	r1, r1, #5
   14cac:	orrs	r1, r1, r6
   14cb0:	bne	14cbc <__mempcpy_chk@plt+0x3c18>
   14cb4:	str	r7, [r8]
   14cb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cbc:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	mov	r1, #1
   14ccc:	bl	14e48 <__mempcpy_chk@plt+0x3da4>
   14cd0:	cmp	r0, #0
   14cd4:	popne	{fp, pc}
   14cd8:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14cdc:	push	{fp, lr}
   14ce0:	mov	fp, sp
   14ce4:	bl	14e48 <__mempcpy_chk@plt+0x3da4>
   14ce8:	cmp	r0, #0
   14cec:	popne	{fp, pc}
   14cf0:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14cf4:	push	{fp, lr}
   14cf8:	mov	fp, sp
   14cfc:	mov	r1, #1
   14d00:	bl	14e48 <__mempcpy_chk@plt+0x3da4>
   14d04:	cmp	r0, #0
   14d08:	popne	{fp, pc}
   14d0c:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14d10:	push	{fp, lr}
   14d14:	mov	fp, sp
   14d18:	bl	14e48 <__mempcpy_chk@plt+0x3da4>
   14d1c:	cmp	r0, #0
   14d20:	popne	{fp, pc}
   14d24:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14d28:	push	{r4, r5, fp, lr}
   14d2c:	add	fp, sp, #8
   14d30:	mov	r5, r0
   14d34:	mov	r0, r1
   14d38:	mov	r4, r1
   14d3c:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   14d40:	cmp	r0, #0
   14d44:	beq	14d58 <__mempcpy_chk@plt+0x3cb4>
   14d48:	mov	r1, r5
   14d4c:	mov	r2, r4
   14d50:	pop	{r4, r5, fp, lr}
   14d54:	b	10e94 <memcpy@plt>
   14d58:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14d5c:	push	{r4, r5, fp, lr}
   14d60:	add	fp, sp, #8
   14d64:	mov	r5, r0
   14d68:	mov	r0, r1
   14d6c:	mov	r4, r1
   14d70:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   14d74:	cmp	r0, #0
   14d78:	beq	14d8c <__mempcpy_chk@plt+0x3ce8>
   14d7c:	mov	r1, r5
   14d80:	mov	r2, r4
   14d84:	pop	{r4, r5, fp, lr}
   14d88:	b	10e94 <memcpy@plt>
   14d8c:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14d90:	push	{r4, r5, fp, lr}
   14d94:	add	fp, sp, #8
   14d98:	mov	r5, r0
   14d9c:	add	r0, r1, #1
   14da0:	mov	r4, r1
   14da4:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   14da8:	cmp	r0, #0
   14dac:	beq	14dc8 <__mempcpy_chk@plt+0x3d24>
   14db0:	mov	r1, #0
   14db4:	mov	r2, r4
   14db8:	strb	r1, [r0, r4]
   14dbc:	mov	r1, r5
   14dc0:	pop	{r4, r5, fp, lr}
   14dc4:	b	10e94 <memcpy@plt>
   14dc8:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14dcc:	push	{r4, r5, fp, lr}
   14dd0:	add	fp, sp, #8
   14dd4:	mov	r4, r0
   14dd8:	bl	10fa8 <strlen@plt>
   14ddc:	add	r5, r0, #1
   14de0:	mov	r0, r5
   14de4:	bl	14e9c <__mempcpy_chk@plt+0x3df8>
   14de8:	cmp	r0, #0
   14dec:	beq	14e00 <__mempcpy_chk@plt+0x3d5c>
   14df0:	mov	r1, r4
   14df4:	mov	r2, r5
   14df8:	pop	{r4, r5, fp, lr}
   14dfc:	b	10e94 <memcpy@plt>
   14e00:	bl	14e04 <__mempcpy_chk@plt+0x3d60>
   14e04:	push	{fp, lr}
   14e08:	mov	fp, sp
   14e0c:	movw	r0, #28916	; 0x70f4
   14e10:	movw	r1, #24783	; 0x60cf
   14e14:	mov	r2, #5
   14e18:	movt	r0, #2
   14e1c:	movt	r1, #1
   14e20:	ldr	r4, [r0]
   14e24:	mov	r0, #0
   14e28:	bl	10eac <dcgettext@plt>
   14e2c:	movw	r2, #23667	; 0x5c73
   14e30:	mov	r3, r0
   14e34:	mov	r0, r4
   14e38:	mov	r1, #0
   14e3c:	movt	r2, #1
   14e40:	bl	10f18 <error@plt>
   14e44:	bl	11074 <abort@plt>
   14e48:	clz	r2, r1
   14e4c:	clz	r3, r0
   14e50:	lsr	r2, r2, #5
   14e54:	lsr	r3, r3, #5
   14e58:	orrs	r2, r3, r2
   14e5c:	movwne	r1, #1
   14e60:	movwne	r0, #1
   14e64:	cmp	r1, #0
   14e68:	beq	14e98 <__mempcpy_chk@plt+0x3df4>
   14e6c:	mvn	r2, #-2147483648	; 0x80000000
   14e70:	udiv	r2, r2, r1
   14e74:	cmp	r2, r0
   14e78:	bcs	14e98 <__mempcpy_chk@plt+0x3df4>
   14e7c:	push	{fp, lr}
   14e80:	mov	fp, sp
   14e84:	bl	10fb4 <__errno_location@plt>
   14e88:	mov	r1, #12
   14e8c:	str	r1, [r0]
   14e90:	mov	r0, #0
   14e94:	pop	{fp, pc}
   14e98:	b	10e34 <calloc@plt>
   14e9c:	cmp	r0, #0
   14ea0:	movweq	r0, #1
   14ea4:	cmn	r0, #1
   14ea8:	ble	14eb0 <__mempcpy_chk@plt+0x3e0c>
   14eac:	b	10f48 <malloc@plt>
   14eb0:	push	{fp, lr}
   14eb4:	mov	fp, sp
   14eb8:	bl	10fb4 <__errno_location@plt>
   14ebc:	mov	r1, #12
   14ec0:	str	r1, [r0]
   14ec4:	mov	r0, #0
   14ec8:	pop	{fp, pc}
   14ecc:	push	{fp, lr}
   14ed0:	mov	fp, sp
   14ed4:	cmp	r0, #0
   14ed8:	beq	14ef4 <__mempcpy_chk@plt+0x3e50>
   14edc:	cmp	r1, #0
   14ee0:	beq	14f00 <__mempcpy_chk@plt+0x3e5c>
   14ee4:	cmn	r1, #1
   14ee8:	ble	14f0c <__mempcpy_chk@plt+0x3e68>
   14eec:	pop	{fp, lr}
   14ef0:	b	10eb8 <realloc@plt>
   14ef4:	mov	r0, r1
   14ef8:	pop	{fp, lr}
   14efc:	b	14e9c <__mempcpy_chk@plt+0x3df8>
   14f00:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   14f04:	mov	r0, #0
   14f08:	pop	{fp, pc}
   14f0c:	bl	10fb4 <__errno_location@plt>
   14f10:	mov	r1, #12
   14f14:	str	r1, [r0]
   14f18:	mov	r0, #0
   14f1c:	pop	{fp, pc}
   14f20:	push	{fp, lr}
   14f24:	mov	fp, sp
   14f28:	mov	r0, #14
   14f2c:	bl	11038 <nl_langinfo@plt>
   14f30:	movw	r1, #23395	; 0x5b63
   14f34:	cmp	r0, #0
   14f38:	movt	r1, #1
   14f3c:	movne	r1, r0
   14f40:	movw	r0, #24800	; 0x60e0
   14f44:	ldrb	r2, [r1]
   14f48:	movt	r0, #1
   14f4c:	cmp	r2, #0
   14f50:	movne	r0, r1
   14f54:	pop	{fp, pc}
   14f58:	push	{r4, r5, r6, r7, fp, lr}
   14f5c:	add	fp, sp, #16
   14f60:	sub	sp, sp, #8
   14f64:	cmp	r0, #0
   14f68:	add	r5, sp, #4
   14f6c:	mov	r7, r2
   14f70:	mov	r4, r1
   14f74:	movne	r5, r0
   14f78:	mov	r0, r5
   14f7c:	bl	10f0c <mbrtowc@plt>
   14f80:	mov	r6, r0
   14f84:	cmp	r7, #0
   14f88:	beq	14fb0 <__mempcpy_chk@plt+0x3f0c>
   14f8c:	cmn	r6, #2
   14f90:	bcc	14fb0 <__mempcpy_chk@plt+0x3f0c>
   14f94:	mov	r0, #0
   14f98:	bl	14ff8 <__mempcpy_chk@plt+0x3f54>
   14f9c:	cmp	r0, #0
   14fa0:	bne	14fb0 <__mempcpy_chk@plt+0x3f0c>
   14fa4:	ldrb	r0, [r4]
   14fa8:	mov	r6, #1
   14fac:	str	r0, [r5]
   14fb0:	mov	r0, r6
   14fb4:	sub	sp, fp, #16
   14fb8:	pop	{r4, r5, r6, r7, fp, pc}
   14fbc:	cmp	r2, #0
   14fc0:	beq	14ff0 <__mempcpy_chk@plt+0x3f4c>
   14fc4:	mvn	r3, #0
   14fc8:	udiv	r3, r3, r2
   14fcc:	cmp	r3, r1
   14fd0:	bcs	14ff0 <__mempcpy_chk@plt+0x3f4c>
   14fd4:	push	{fp, lr}
   14fd8:	mov	fp, sp
   14fdc:	bl	10fb4 <__errno_location@plt>
   14fe0:	mov	r1, #12
   14fe4:	str	r1, [r0]
   14fe8:	mov	r0, #0
   14fec:	pop	{fp, pc}
   14ff0:	mul	r1, r2, r1
   14ff4:	b	14ecc <__mempcpy_chk@plt+0x3e28>
   14ff8:	push	{r4, sl, fp, lr}
   14ffc:	add	fp, sp, #8
   15000:	sub	sp, sp, #264	; 0x108
   15004:	add	r1, sp, #7
   15008:	movw	r2, #257	; 0x101
   1500c:	bl	15064 <__mempcpy_chk@plt+0x3fc0>
   15010:	mov	r4, #0
   15014:	cmp	r0, #0
   15018:	bne	15058 <__mempcpy_chk@plt+0x3fb4>
   1501c:	movw	r1, #24806	; 0x60e6
   15020:	add	r0, sp, #7
   15024:	mov	r2, #2
   15028:	movt	r1, #1
   1502c:	bl	10f9c <bcmp@plt>
   15030:	cmp	r0, #0
   15034:	beq	15058 <__mempcpy_chk@plt+0x3fb4>
   15038:	movw	r1, #24808	; 0x60e8
   1503c:	add	r0, sp, #7
   15040:	mov	r2, #6
   15044:	movt	r1, #1
   15048:	bl	10f9c <bcmp@plt>
   1504c:	cmp	r0, #0
   15050:	mov	r4, r0
   15054:	movwne	r4, #1
   15058:	mov	r0, r4
   1505c:	sub	sp, fp, #8
   15060:	pop	{r4, sl, fp, pc}
   15064:	push	{r4, r5, r6, r7, fp, lr}
   15068:	add	fp, sp, #16
   1506c:	mov	r4, r1
   15070:	mov	r1, #0
   15074:	mov	r6, r2
   15078:	bl	11020 <setlocale@plt>
   1507c:	cmp	r0, #0
   15080:	beq	150b0 <__mempcpy_chk@plt+0x400c>
   15084:	mov	r7, r0
   15088:	bl	10fa8 <strlen@plt>
   1508c:	cmp	r0, r6
   15090:	bcs	150cc <__mempcpy_chk@plt+0x4028>
   15094:	add	r2, r0, #1
   15098:	mov	r0, r4
   1509c:	mov	r1, r7
   150a0:	bl	10e94 <memcpy@plt>
   150a4:	mov	r5, #0
   150a8:	mov	r0, r5
   150ac:	pop	{r4, r5, r6, r7, fp, pc}
   150b0:	mov	r5, #22
   150b4:	cmp	r6, #0
   150b8:	beq	150f4 <__mempcpy_chk@plt+0x4050>
   150bc:	mov	r0, #0
   150c0:	strb	r0, [r4]
   150c4:	mov	r0, r5
   150c8:	pop	{r4, r5, r6, r7, fp, pc}
   150cc:	mov	r5, #34	; 0x22
   150d0:	cmp	r6, #0
   150d4:	beq	150f4 <__mempcpy_chk@plt+0x4050>
   150d8:	sub	r6, r6, #1
   150dc:	mov	r0, r4
   150e0:	mov	r1, r7
   150e4:	mov	r2, r6
   150e8:	bl	10e94 <memcpy@plt>
   150ec:	mov	r0, #0
   150f0:	strb	r0, [r4, r6]
   150f4:	mov	r0, r5
   150f8:	pop	{r4, r5, r6, r7, fp, pc}
   150fc:	mov	r1, #0
   15100:	b	11020 <setlocale@plt>
   15104:	cmp	r3, #0
   15108:	cmpeq	r2, #0
   1510c:	bne	15124 <__mempcpy_chk@plt+0x4080>
   15110:	cmp	r1, #0
   15114:	cmpeq	r0, #0
   15118:	mvnne	r1, #0
   1511c:	mvnne	r0, #0
   15120:	b	15140 <__mempcpy_chk@plt+0x409c>
   15124:	sub	sp, sp, #8
   15128:	push	{sp, lr}
   1512c:	bl	15150 <__mempcpy_chk@plt+0x40ac>
   15130:	ldr	lr, [sp, #4]
   15134:	add	sp, sp, #8
   15138:	pop	{r2, r3}
   1513c:	bx	lr
   15140:	push	{r1, lr}
   15144:	mov	r0, #8
   15148:	bl	10e4c <raise@plt>
   1514c:	pop	{r1, pc}
   15150:	cmp	r1, r3
   15154:	cmpeq	r0, r2
   15158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1515c:	mov	r4, r0
   15160:	movcc	r0, #0
   15164:	mov	r5, r1
   15168:	ldr	lr, [sp, #36]	; 0x24
   1516c:	movcc	r1, r0
   15170:	bcc	1526c <__mempcpy_chk@plt+0x41c8>
   15174:	cmp	r3, #0
   15178:	clzeq	ip, r2
   1517c:	clzne	ip, r3
   15180:	addeq	ip, ip, #32
   15184:	cmp	r5, #0
   15188:	clzeq	r1, r4
   1518c:	addeq	r1, r1, #32
   15190:	clzne	r1, r5
   15194:	sub	ip, ip, r1
   15198:	sub	sl, ip, #32
   1519c:	lsl	r9, r3, ip
   151a0:	rsb	fp, ip, #32
   151a4:	orr	r9, r9, r2, lsl sl
   151a8:	orr	r9, r9, r2, lsr fp
   151ac:	lsl	r8, r2, ip
   151b0:	cmp	r5, r9
   151b4:	cmpeq	r4, r8
   151b8:	movcc	r0, #0
   151bc:	movcc	r1, r0
   151c0:	bcc	151dc <__mempcpy_chk@plt+0x4138>
   151c4:	mov	r0, #1
   151c8:	subs	r4, r4, r8
   151cc:	lsl	r1, r0, sl
   151d0:	orr	r1, r1, r0, lsr fp
   151d4:	lsl	r0, r0, ip
   151d8:	sbc	r5, r5, r9
   151dc:	cmp	ip, #0
   151e0:	beq	1526c <__mempcpy_chk@plt+0x41c8>
   151e4:	lsr	r6, r8, #1
   151e8:	orr	r6, r6, r9, lsl #31
   151ec:	lsr	r7, r9, #1
   151f0:	mov	r2, ip
   151f4:	b	15218 <__mempcpy_chk@plt+0x4174>
   151f8:	subs	r3, r4, r6
   151fc:	sbc	r8, r5, r7
   15200:	adds	r3, r3, r3
   15204:	adc	r8, r8, r8
   15208:	adds	r4, r3, #1
   1520c:	adc	r5, r8, #0
   15210:	subs	r2, r2, #1
   15214:	beq	15234 <__mempcpy_chk@plt+0x4190>
   15218:	cmp	r5, r7
   1521c:	cmpeq	r4, r6
   15220:	bcs	151f8 <__mempcpy_chk@plt+0x4154>
   15224:	adds	r4, r4, r4
   15228:	adc	r5, r5, r5
   1522c:	subs	r2, r2, #1
   15230:	bne	15218 <__mempcpy_chk@plt+0x4174>
   15234:	lsr	r3, r4, ip
   15238:	orr	r3, r3, r5, lsl fp
   1523c:	lsr	r2, r5, ip
   15240:	orr	r3, r3, r5, lsr sl
   15244:	adds	r0, r0, r4
   15248:	mov	r4, r3
   1524c:	lsl	r3, r2, ip
   15250:	orr	r3, r3, r4, lsl sl
   15254:	lsl	ip, r4, ip
   15258:	orr	r3, r3, r4, lsr fp
   1525c:	adc	r1, r1, r5
   15260:	subs	r0, r0, ip
   15264:	mov	r5, r2
   15268:	sbc	r1, r1, r3
   1526c:	cmp	lr, #0
   15270:	strdne	r4, [lr]
   15274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15278:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1527c:	mov	r7, r0
   15280:	ldr	r6, [pc, #72]	; 152d0 <__mempcpy_chk@plt+0x422c>
   15284:	ldr	r5, [pc, #72]	; 152d4 <__mempcpy_chk@plt+0x4230>
   15288:	add	r6, pc, r6
   1528c:	add	r5, pc, r5
   15290:	sub	r6, r6, r5
   15294:	mov	r8, r1
   15298:	mov	r9, r2
   1529c:	bl	10e14 <calloc@plt-0x20>
   152a0:	asrs	r6, r6, #2
   152a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   152a8:	mov	r4, #0
   152ac:	add	r4, r4, #1
   152b0:	ldr	r3, [r5], #4
   152b4:	mov	r2, r9
   152b8:	mov	r1, r8
   152bc:	mov	r0, r7
   152c0:	blx	r3
   152c4:	cmp	r6, r4
   152c8:	bne	152ac <__mempcpy_chk@plt+0x4208>
   152cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152d0:	andeq	r1, r1, ip, ror ip
   152d4:	andeq	r1, r1, r4, ror ip
   152d8:	bx	lr
   152dc:	ldr	r3, [pc, #12]	; 152f0 <__mempcpy_chk@plt+0x424c>
   152e0:	mov	r1, #0
   152e4:	add	r3, pc, r3
   152e8:	ldr	r2, [r3]
   152ec:	b	10fc0 <__cxa_atexit@plt>
   152f0:	andeq	r1, r1, r0, lsl #28

Disassembly of section .fini:

000152f4 <.fini>:
   152f4:	push	{r3, lr}
   152f8:	pop	{r3, pc}
