
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

000110a0 <.init>:
   110a0:	push	{r3, lr}
   110a4:	bl	111ec <_start@@Base+0x3c>
   110a8:	pop	{r3, pc}

Disassembly of section .plt:

000110ac <calloc@plt-0x14>:
   110ac:	push	{lr}		; (str lr, [sp, #-4]!)
   110b0:	ldr	lr, [pc, #4]	; 110bc <calloc@plt-0x4>
   110b4:	add	lr, pc, lr
   110b8:	ldr	pc, [lr, #8]!
   110bc:	andeq	r1, r1, r4, asr #30

000110c0 <calloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #69632	; 0x11000
   110c8:	ldr	pc, [ip, #3908]!	; 0xf44

000110cc <strcmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #69632	; 0x11000
   110d4:	ldr	pc, [ip, #3900]!	; 0xf3c

000110d8 <printf@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #69632	; 0x11000
   110e0:	ldr	pc, [ip, #3892]!	; 0xf34

000110e4 <__isoc99_fscanf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #69632	; 0x11000
   110ec:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f0 <fopen@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #69632	; 0x11000
   110f8:	ldr	pc, [ip, #3876]!	; 0xf24

000110fc <free@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #69632	; 0x11000
   11104:	ldr	pc, [ip, #3868]!	; 0xf1c

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #69632	; 0x11000
   11110:	ldr	pc, [ip, #3860]!	; 0xf14

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #69632	; 0x11000
   1111c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011120 <puts@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #69632	; 0x11000
   11128:	ldr	pc, [ip, #3844]!	; 0xf04

0001112c <malloc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #69632	; 0x11000
   11134:	ldr	pc, [ip, #3836]!	; 0xefc

00011138 <__libc_start_main@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #69632	; 0x11000
   11140:	ldr	pc, [ip, #3828]!	; 0xef4

00011144 <__gmon_start__@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #69632	; 0x11000
   1114c:	ldr	pc, [ip, #3820]!	; 0xeec

00011150 <strlen@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #69632	; 0x11000
   11158:	ldr	pc, [ip, #3812]!	; 0xee4

0001115c <setvbuf@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #69632	; 0x11000
   11164:	ldr	pc, [ip, #3804]!	; 0xedc

00011168 <memset@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #69632	; 0x11000
   11170:	ldr	pc, [ip, #3796]!	; 0xed4

00011174 <putchar@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #69632	; 0x11000
   1117c:	ldr	pc, [ip, #3788]!	; 0xecc

00011180 <fclose@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #69632	; 0x11000
   11188:	ldr	pc, [ip, #3780]!	; 0xec4

0001118c <atoi@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #69632	; 0x11000
   11194:	ldr	pc, [ip, #3772]!	; 0xebc

00011198 <getline@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #69632	; 0x11000
   111a0:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a4 <abort@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #69632	; 0x11000
   111ac:	ldr	pc, [ip, #3756]!	; 0xeac

Disassembly of section .text:

000111b0 <_start@@Base>:
   111b0:	mov	fp, #0
   111b4:	mov	lr, #0
   111b8:	pop	{r1}		; (ldr r1, [sp], #4)
   111bc:	mov	r2, sp
   111c0:	push	{r2}		; (str r2, [sp, #-4]!)
   111c4:	push	{r0}		; (str r0, [sp, #-4]!)
   111c8:	ldr	ip, [pc, #16]	; 111e0 <_start@@Base+0x30>
   111cc:	push	{ip}		; (str ip, [sp, #-4]!)
   111d0:	ldr	r0, [pc, #12]	; 111e4 <_start@@Base+0x34>
   111d4:	ldr	r3, [pc, #12]	; 111e8 <_start@@Base+0x38>
   111d8:	bl	11138 <__libc_start_main@plt>
   111dc:	bl	111a4 <abort@plt>
   111e0:	andeq	r2, r1, r0, asr sl
   111e4:	muleq	r1, r4, r5
   111e8:	strdeq	r2, [r1], -r0
   111ec:	ldr	r3, [pc, #20]	; 11208 <_start@@Base+0x58>
   111f0:	ldr	r2, [pc, #20]	; 1120c <_start@@Base+0x5c>
   111f4:	add	r3, pc, r3
   111f8:	ldr	r2, [r3, r2]
   111fc:	cmp	r2, #0
   11200:	bxeq	lr
   11204:	b	11144 <__gmon_start__@plt>
   11208:	andeq	r1, r1, r4, lsl #28
   1120c:	andeq	r0, r0, ip, asr r0
   11210:	ldr	r0, [pc, #24]	; 11230 <_start@@Base+0x80>
   11214:	ldr	r3, [pc, #24]	; 11234 <_start@@Base+0x84>
   11218:	cmp	r3, r0
   1121c:	bxeq	lr
   11220:	ldr	r3, [pc, #16]	; 11238 <_start@@Base+0x88>
   11224:	cmp	r3, #0
   11228:	bxeq	lr
   1122c:	bx	r3
   11230:	andeq	r3, r2, r8, rrx
   11234:	andeq	r3, r2, r8, rrx
   11238:	andeq	r0, r0, r0
   1123c:	ldr	r0, [pc, #36]	; 11268 <_start@@Base+0xb8>
   11240:	ldr	r1, [pc, #36]	; 1126c <_start@@Base+0xbc>
   11244:	sub	r1, r1, r0
   11248:	asr	r1, r1, #2
   1124c:	add	r1, r1, r1, lsr #31
   11250:	asrs	r1, r1, #1
   11254:	bxeq	lr
   11258:	ldr	r3, [pc, #16]	; 11270 <_start@@Base+0xc0>
   1125c:	cmp	r3, #0
   11260:	bxeq	lr
   11264:	bx	r3
   11268:	andeq	r3, r2, r8, rrx
   1126c:	andeq	r3, r2, r8, rrx
   11270:	andeq	r0, r0, r0
   11274:	push	{r4, lr}
   11278:	ldr	r4, [pc, #24]	; 11298 <_start@@Base+0xe8>
   1127c:	ldrb	r3, [r4]
   11280:	cmp	r3, #0
   11284:	popne	{r4, pc}
   11288:	bl	11210 <_start@@Base+0x60>
   1128c:	mov	r3, #1
   11290:	strb	r3, [r4]
   11294:	pop	{r4, pc}
   11298:	andeq	r3, r2, ip, rrx
   1129c:	b	1123c <_start@@Base+0x8c>

000112a0 <proximas_n_chegadas@@Base>:
   112a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a4:	add	fp, sp, #28
   112a8:	sub	sp, sp, #4
   112ac:	mov	r5, r0
   112b0:	ldr	r0, [r2, #8]
   112b4:	ldr	r6, [r2]
   112b8:	mov	r8, r3
   112bc:	mov	sl, r2
   112c0:	mov	r4, r1
   112c4:	lsl	r0, r0, #2
   112c8:	bl	1112c <malloc@plt>
   112cc:	mov	r9, r0
   112d0:	cmp	r6, #0
   112d4:	beq	112fc <proximas_n_chegadas@@Base+0x5c>
   112d8:	mov	r7, r9
   112dc:	mov	r0, #200	; 0xc8
   112e0:	bl	1112c <malloc@plt>
   112e4:	str	r0, [r7], #4
   112e8:	ldr	r1, [r6]
   112ec:	bl	11114 <strcpy@plt>
   112f0:	ldr	r6, [r6, #4]
   112f4:	cmp	r6, #0
   112f8:	bne	112dc <proximas_n_chegadas@@Base+0x3c>
   112fc:	ldr	r0, [r5, #8]
   11300:	bl	11f78 <heap_nova@@Base>
   11304:	ldr	r6, [r5]
   11308:	mov	r7, r0
   1130c:	cmp	r6, #0
   11310:	beq	11344 <proximas_n_chegadas@@Base+0xa4>
   11314:	ldr	r4, [r4]
   11318:	ldr	r0, [r4], #4
   1131c:	bl	1118c <atoi@plt>
   11320:	ldr	r5, [r9, r0, lsl #2]
   11324:	ldr	r0, [r6]
   11328:	bl	1118c <atoi@plt>
   1132c:	mov	r2, r0
   11330:	mov	r0, r7
   11334:	mov	r1, r5
   11338:	bl	120a8 <heap_insere@@Base>
   1133c:	ldr	r6, [r6, #4]
   11340:	b	1130c <proximas_n_chegadas@@Base+0x6c>
   11344:	ldr	r0, [sl, #8]
   11348:	cmp	r0, #1
   1134c:	blt	1136c <proximas_n_chegadas@@Base+0xcc>
   11350:	mov	r4, #0
   11354:	ldr	r0, [r9, r4, lsl #2]
   11358:	bl	110fc <free@plt>
   1135c:	ldr	r0, [sl, #8]
   11360:	add	r4, r4, #1
   11364:	cmp	r4, r0
   11368:	blt	11354 <proximas_n_chegadas@@Base+0xb4>
   1136c:	mov	r0, r9
   11370:	bl	110fc <free@plt>
   11374:	cmp	r8, #1
   11378:	blt	113b8 <proximas_n_chegadas@@Base+0x118>
   1137c:	movw	r5, #10848	; 0x2a60
   11380:	mov	r4, #0
   11384:	movt	r5, #1
   11388:	mov	r0, r7
   1138c:	bl	1217c <heap_remove@@Base>
   11390:	mov	r6, r0
   11394:	add	r4, r4, #1
   11398:	mov	r0, r5
   1139c:	mov	r1, r4
   113a0:	mov	r2, r6
   113a4:	bl	110d8 <printf@plt>
   113a8:	mov	r0, r6
   113ac:	bl	110fc <free@plt>
   113b0:	cmp	r8, r4
   113b4:	bne	11388 <proximas_n_chegadas@@Base+0xe8>
   113b8:	mov	r0, r7
   113bc:	bl	11fcc <heap_apaga@@Base>
   113c0:	mov	r0, #1
   113c4:	sub	sp, fp, #28
   113c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000113cc <pesquisa_destinos@@Base>:
   113cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113d0:	add	fp, sp, #28
   113d4:	sub	sp, sp, #4
   113d8:	mov	r7, r2
   113dc:	mov	sl, r1
   113e0:	mov	r8, r0
   113e4:	bl	123b0 <lista_nova@@Base>
   113e8:	ldr	r4, [sl]
   113ec:	mov	r9, r0
   113f0:	mov	r6, #0
   113f4:	cmp	r4, #0
   113f8:	beq	1141c <pesquisa_destinos@@Base+0x50>
   113fc:	ldr	r0, [r4]
   11400:	mov	r1, r7
   11404:	bl	110cc <strcmp@plt>
   11408:	cmp	r0, #0
   1140c:	beq	1141c <pesquisa_destinos@@Base+0x50>
   11410:	ldr	r4, [r4, #4]
   11414:	add	r6, r6, #1
   11418:	b	113f4 <pesquisa_destinos@@Base+0x28>
   1141c:	mov	r0, r8
   11420:	mov	r1, r6
   11424:	bl	11b1c <v_sucessores@@Base>
   11428:	mov	r6, r0
   1142c:	ldr	r0, [r0]
   11430:	cmp	r0, #1
   11434:	blt	11494 <pesquisa_destinos@@Base+0xc8>
   11438:	mov	r7, #0
   1143c:	ldr	r4, [sl]
   11440:	mov	r0, r6
   11444:	mov	r1, r7
   11448:	bl	127c0 <vetor_elemento@@Base>
   1144c:	cmp	r0, #1
   11450:	blt	11474 <pesquisa_destinos@@Base+0xa8>
   11454:	mov	r5, #0
   11458:	ldr	r4, [r4, #4]
   1145c:	mov	r0, r6
   11460:	mov	r1, r7
   11464:	bl	127c0 <vetor_elemento@@Base>
   11468:	add	r5, r5, #1
   1146c:	cmp	r5, r0
   11470:	blt	11458 <pesquisa_destinos@@Base+0x8c>
   11474:	ldr	r1, [r4]
   11478:	mov	r0, r9
   1147c:	mov	r2, #0
   11480:	bl	12454 <lista_insere@@Base>
   11484:	ldr	r0, [r6]
   11488:	add	r7, r7, #1
   1148c:	cmp	r7, r0
   11490:	blt	1143c <pesquisa_destinos@@Base+0x70>
   11494:	mov	r0, r6
   11498:	bl	12754 <vetor_apaga@@Base>
   1149c:	mov	r0, r9
   114a0:	sub	sp, fp, #28
   114a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114a8 <carrega_rotas@@Base>:
   114a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   114ac:	add	fp, sp, #24
   114b0:	sub	sp, sp, #8
   114b4:	cmp	r1, #0
   114b8:	beq	11584 <carrega_rotas@@Base+0xdc>
   114bc:	mov	r4, r1
   114c0:	movw	r1, #10858	; 0x2a6a
   114c4:	mov	r6, r0
   114c8:	movt	r1, #1
   114cc:	mov	r0, r4
   114d0:	bl	110f0 <fopen@plt>
   114d4:	cmp	r0, #0
   114d8:	beq	11564 <carrega_rotas@@Base+0xbc>
   114dc:	mov	r5, r0
   114e0:	mov	r0, r6
   114e4:	bl	12424 <lista_tamanho@@Base>
   114e8:	mov	r1, #0
   114ec:	bl	11808 <grafo_novo@@Base>
   114f0:	cmp	r0, #0
   114f4:	beq	11578 <carrega_rotas@@Base+0xd0>
   114f8:	movw	r1, #10893	; 0x2a8d
   114fc:	mov	r4, r0
   11500:	add	r2, sp, #4
   11504:	mov	r3, sp
   11508:	mov	r0, r5
   1150c:	movt	r1, #1
   11510:	bl	110e4 <__isoc99_fscanf@plt>
   11514:	cmp	r0, #2
   11518:	bne	11558 <carrega_rotas@@Base+0xb0>
   1151c:	movw	r8, #10893	; 0x2a8d
   11520:	add	r7, sp, #4
   11524:	mov	r6, sp
   11528:	movt	r8, #1
   1152c:	ldr	r2, [sp]
   11530:	ldr	r1, [sp, #4]
   11534:	mov	r0, r4
   11538:	bl	118e4 <grafo_adiciona@@Base>
   1153c:	mov	r0, r5
   11540:	mov	r1, r8
   11544:	mov	r2, r7
   11548:	mov	r3, r6
   1154c:	bl	110e4 <__isoc99_fscanf@plt>
   11550:	cmp	r0, #2
   11554:	beq	1152c <carrega_rotas@@Base+0x84>
   11558:	mov	r0, r5
   1155c:	bl	11180 <fclose@plt>
   11560:	b	11588 <carrega_rotas@@Base+0xe0>
   11564:	movw	r0, #10860	; 0x2a6c
   11568:	mov	r1, r4
   1156c:	movt	r0, #1
   11570:	bl	110d8 <printf@plt>
   11574:	b	11584 <carrega_rotas@@Base+0xdc>
   11578:	movw	r0, #11029	; 0x2b15
   1157c:	movt	r0, #1
   11580:	bl	11120 <puts@plt>
   11584:	mov	r4, #0
   11588:	mov	r0, r4
   1158c:	sub	sp, fp, #24
   11590:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011594 <main@@Base>:
   11594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11598:	add	fp, sp, #28
   1159c:	sub	sp, sp, #28
   115a0:	movw	r0, #12392	; 0x3068
   115a4:	mov	r1, #0
   115a8:	mov	r2, #2
   115ac:	mov	r3, #0
   115b0:	mov	r8, #0
   115b4:	movt	r0, #2
   115b8:	ldr	r0, [r0]
   115bc:	bl	1115c <setvbuf@plt>
   115c0:	movw	r0, #10899	; 0x2a93
   115c4:	movw	r1, #10858	; 0x2a6a
   115c8:	movt	r0, #1
   115cc:	movt	r1, #1
   115d0:	bl	110f0 <fopen@plt>
   115d4:	mov	r5, r0
   115d8:	bl	123b0 <lista_nova@@Base>
   115dc:	mov	r9, r0
   115e0:	add	r0, sp, #24
   115e4:	add	r1, sp, #20
   115e8:	mov	r2, r5
   115ec:	str	r8, [sp, #24]
   115f0:	str	r8, [sp, #20]
   115f4:	bl	11198 <getline@plt>
   115f8:	ldr	r4, [sp, #24]
   115fc:	cmn	r0, #1
   11600:	beq	11648 <main@@Base+0xb4>
   11604:	add	r6, sp, #24
   11608:	add	r7, sp, #20
   1160c:	mov	r0, r4
   11610:	bl	11150 <strlen@plt>
   11614:	add	r0, r0, r4
   11618:	mov	r2, #0
   1161c:	strb	r8, [r0, #-1]
   11620:	mov	r0, r9
   11624:	ldr	r1, [sp, #24]
   11628:	bl	12454 <lista_insere@@Base>
   1162c:	mov	r0, r6
   11630:	mov	r1, r7
   11634:	mov	r2, r5
   11638:	bl	11198 <getline@plt>
   1163c:	ldr	r4, [sp, #24]
   11640:	cmn	r0, #1
   11644:	bne	1160c <main@@Base+0x78>
   11648:	mov	r0, r4
   1164c:	bl	110fc <free@plt>
   11650:	mov	r0, r5
   11654:	bl	11180 <fclose@plt>
   11658:	movw	r1, #10914	; 0x2aa2
   1165c:	mov	r0, r9
   11660:	movt	r1, #1
   11664:	bl	114a8 <carrega_rotas@@Base>
   11668:	str	r0, [sp]
   1166c:	movw	r0, #11054	; 0x2b2e
   11670:	movt	r0, #1
   11674:	bl	11120 <puts@plt>
   11678:	movw	r0, #10924	; 0x2aac
   1167c:	movw	r1, #10858	; 0x2a6a
   11680:	movt	r0, #1
   11684:	movt	r1, #1
   11688:	bl	110f0 <fopen@plt>
   1168c:	mov	sl, r0
   11690:	bl	123b0 <lista_nova@@Base>
   11694:	mov	r7, r0
   11698:	bl	123b0 <lista_nova@@Base>
   1169c:	movw	r1, #10937	; 0x2ab9
   116a0:	mov	r5, r0
   116a4:	add	r2, sp, #15
   116a8:	add	r3, sp, #5
   116ac:	mov	r0, sl
   116b0:	movt	r1, #1
   116b4:	bl	110e4 <__isoc99_fscanf@plt>
   116b8:	cmp	r0, #2
   116bc:	bne	1170c <main@@Base+0x178>
   116c0:	movw	r8, #10937	; 0x2ab9
   116c4:	add	r4, sp, #15
   116c8:	add	r6, sp, #5
   116cc:	movt	r8, #1
   116d0:	mov	r0, r7
   116d4:	mov	r1, r4
   116d8:	mov	r2, #0
   116dc:	bl	12454 <lista_insere@@Base>
   116e0:	mov	r0, r5
   116e4:	mov	r1, r6
   116e8:	mov	r2, #0
   116ec:	bl	12454 <lista_insere@@Base>
   116f0:	mov	r0, sl
   116f4:	mov	r1, r8
   116f8:	mov	r2, r4
   116fc:	mov	r3, r6
   11700:	bl	110e4 <__isoc99_fscanf@plt>
   11704:	cmp	r0, #2
   11708:	beq	116d0 <main@@Base+0x13c>
   1170c:	mov	r0, r7
   11710:	mov	r1, r5
   11714:	mov	r2, r9
   11718:	mov	r3, #5
   1171c:	bl	112a0 <proximas_n_chegadas@@Base>
   11720:	mov	r0, r7
   11724:	bl	123dc <lista_apaga@@Base>
   11728:	mov	r0, r5
   1172c:	bl	123dc <lista_apaga@@Base>
   11730:	mov	r0, sl
   11734:	bl	11180 <fclose@plt>
   11738:	movw	r0, #11071	; 0x2b3f
   1173c:	movt	r0, #1
   11740:	bl	11120 <puts@plt>
   11744:	ldr	r6, [sp]
   11748:	movw	r2, #10943	; 0x2abf
   1174c:	mov	r1, r9
   11750:	movt	r2, #1
   11754:	mov	r0, r6
   11758:	bl	113cc <pesquisa_destinos@@Base>
   1175c:	cmp	r0, #0
   11760:	beq	117ac <main@@Base+0x218>
   11764:	mov	r5, r0
   11768:	bl	12424 <lista_tamanho@@Base>
   1176c:	movw	r1, #10943	; 0x2abf
   11770:	mov	r2, r0
   11774:	movw	r0, #10991	; 0x2aef
   11778:	movt	r0, #1
   1177c:	movt	r1, #1
   11780:	bl	110d8 <printf@plt>
   11784:	ldr	r4, [r5]
   11788:	cmp	r4, #0
   1178c:	beq	117a0 <main@@Base+0x20c>
   11790:	ldr	r0, [r4]
   11794:	bl	11120 <puts@plt>
   11798:	ldr	r4, [r4, #4]
   1179c:	b	11788 <main@@Base+0x1f4>
   117a0:	mov	r0, r5
   117a4:	bl	123dc <lista_apaga@@Base>
   117a8:	b	117c0 <main@@Base+0x22c>
   117ac:	movw	r0, #10954	; 0x2aca
   117b0:	movw	r1, #10943	; 0x2abf
   117b4:	movt	r0, #1
   117b8:	movt	r1, #1
   117bc:	bl	110d8 <printf@plt>
   117c0:	mov	r0, r6
   117c4:	bl	11860 <grafo_apaga@@Base>
   117c8:	mov	r0, r9
   117cc:	bl	123dc <lista_apaga@@Base>
   117d0:	mov	r0, #0
   117d4:	sub	sp, fp, #28
   117d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000117dc <cria_no@@Base>:
   117dc:	push	{r4, sl, fp, lr}
   117e0:	add	fp, sp, #8
   117e4:	mov	r4, r0
   117e8:	mov	r0, #8
   117ec:	bl	1112c <malloc@plt>
   117f0:	cmp	r0, #0
   117f4:	moveq	r0, #0
   117f8:	movne	r1, #0
   117fc:	strne	r4, [r0]
   11800:	strne	r1, [r0, #4]
   11804:	pop	{r4, sl, fp, pc}

00011808 <grafo_novo@@Base>:
   11808:	push	{r4, r5, r6, sl, fp, lr}
   1180c:	add	fp, sp, #16
   11810:	mov	r5, r0
   11814:	mov	r0, #12
   11818:	mov	r6, r1
   1181c:	bl	1112c <malloc@plt>
   11820:	cmp	r0, #0
   11824:	beq	11854 <grafo_novo@@Base+0x4c>
   11828:	str	r6, [r0]
   1182c:	mov	r4, r0
   11830:	str	r5, [r0, #4]
   11834:	mov	r0, r5
   11838:	mov	r1, #8
   1183c:	bl	110c0 <calloc@plt>
   11840:	cmp	r0, #0
   11844:	str	r0, [r4, #8]
   11848:	bne	11858 <grafo_novo@@Base+0x50>
   1184c:	mov	r0, r4
   11850:	bl	110fc <free@plt>
   11854:	mov	r4, #0
   11858:	mov	r0, r4
   1185c:	pop	{r4, r5, r6, sl, fp, pc}

00011860 <grafo_apaga@@Base>:
   11860:	cmp	r0, #0
   11864:	bxeq	lr
   11868:	push	{r4, r5, fp, lr}
   1186c:	add	fp, sp, #8
   11870:	mov	r4, r0
   11874:	ldr	r0, [r0, #8]
   11878:	cmp	r0, #0
   1187c:	beq	118d8 <grafo_apaga@@Base+0x78>
   11880:	ldr	r2, [r4, #4]
   11884:	cmp	r2, #1
   11888:	blt	118d4 <grafo_apaga@@Base+0x74>
   1188c:	mov	r5, #0
   11890:	add	r3, r0, r5, lsl #3
   11894:	ldr	r1, [r3, #4]!
   11898:	cmp	r1, #0
   1189c:	beq	118c8 <grafo_apaga@@Base+0x68>
   118a0:	ldr	r0, [r1, #4]
   118a4:	str	r0, [r3]
   118a8:	mov	r0, r1
   118ac:	bl	110fc <free@plt>
   118b0:	ldr	r0, [r4, #8]
   118b4:	add	r3, r0, r5, lsl #3
   118b8:	ldr	r1, [r3, #4]!
   118bc:	cmp	r1, #0
   118c0:	bne	118a0 <grafo_apaga@@Base+0x40>
   118c4:	ldr	r2, [r4, #4]
   118c8:	add	r5, r5, #1
   118cc:	cmp	r5, r2
   118d0:	blt	11890 <grafo_apaga@@Base+0x30>
   118d4:	bl	110fc <free@plt>
   118d8:	mov	r0, r4
   118dc:	pop	{r4, r5, fp, lr}
   118e0:	b	110fc <free@plt>

000118e4 <grafo_adiciona@@Base>:
   118e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   118e8:	add	fp, sp, #24
   118ec:	cmp	r0, #0
   118f0:	beq	11928 <grafo_adiciona@@Base+0x44>
   118f4:	ldr	r8, [r0, #8]
   118f8:	mov	r6, r0
   118fc:	mov	r4, r2
   11900:	mov	r5, r1
   11904:	add	r7, r8, r1, lsl #3
   11908:	ldr	r0, [r7, #4]!
   1190c:	cmp	r0, #0
   11910:	beq	1192c <grafo_adiciona@@Base+0x48>
   11914:	ldr	r1, [r0]
   11918:	cmp	r1, r4
   1191c:	beq	11928 <grafo_adiciona@@Base+0x44>
   11920:	ldr	r0, [r0, #4]
   11924:	b	1190c <grafo_adiciona@@Base+0x28>
   11928:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1192c:	mov	r0, #8
   11930:	bl	1112c <malloc@plt>
   11934:	str	r4, [r0]
   11938:	ldr	r1, [r7]
   1193c:	str	r1, [r0, #4]
   11940:	str	r0, [r7]
   11944:	ldr	r0, [r8, r5, lsl #3]
   11948:	add	r0, r0, #1
   1194c:	str	r0, [r8, r5, lsl #3]
   11950:	ldr	r0, [r6]
   11954:	cmp	r0, #0
   11958:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1195c:	mov	r0, #8
   11960:	bl	1112c <malloc@plt>
   11964:	add	r1, r8, r4, lsl #3
   11968:	str	r5, [r0]
   1196c:	ldr	r2, [r1, #4]
   11970:	str	r2, [r0, #4]
   11974:	ldr	r2, [r8, r4, lsl #3]
   11978:	add	r2, r2, #1
   1197c:	str	r2, [r8, r4, lsl #3]
   11980:	str	r0, [r1, #4]
   11984:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011988 <grafo_aresta@@Base>:
   11988:	mov	r3, r0
   1198c:	mov	r0, #0
   11990:	cmp	r3, #0
   11994:	beq	119bc <grafo_aresta@@Base+0x34>
   11998:	ldr	r3, [r3, #8]
   1199c:	add	r1, r3, r1, lsl #3
   119a0:	ldr	r1, [r1, #4]
   119a4:	cmp	r1, #0
   119a8:	bxeq	lr
   119ac:	ldr	r3, [r1]
   119b0:	cmp	r3, r2
   119b4:	bne	119a0 <grafo_aresta@@Base+0x18>
   119b8:	mov	r0, #1
   119bc:	bx	lr

000119c0 <grafo_remove@@Base>:
   119c0:	push	{r4, r5, r6, sl, fp, lr}
   119c4:	add	fp, sp, #16
   119c8:	cmp	r0, #0
   119cc:	beq	11a84 <grafo_remove@@Base+0xc4>
   119d0:	mov	r6, r0
   119d4:	ldr	r0, [r0, #8]
   119d8:	mov	r4, r1
   119dc:	add	r1, r0, r1, lsl #3
   119e0:	ldr	r0, [r1, #4]!
   119e4:	cmp	r0, #0
   119e8:	beq	11a84 <grafo_remove@@Base+0xc4>
   119ec:	mov	r5, r2
   119f0:	ldr	r2, [r0]
   119f4:	cmp	r2, r5
   119f8:	beq	11a1c <grafo_remove@@Base+0x5c>
   119fc:	mov	r1, r0
   11a00:	ldr	r0, [r0, #4]
   11a04:	cmp	r0, #0
   11a08:	beq	11a28 <grafo_remove@@Base+0x68>
   11a0c:	ldr	r2, [r0]
   11a10:	cmp	r2, r5
   11a14:	bne	119fc <grafo_remove@@Base+0x3c>
   11a18:	add	r1, r1, #4
   11a1c:	ldr	r2, [r0, #4]
   11a20:	str	r2, [r1]
   11a24:	bl	110fc <free@plt>
   11a28:	ldr	r0, [r6]
   11a2c:	cmp	r0, #0
   11a30:	popne	{r4, r5, r6, sl, fp, pc}
   11a34:	ldr	r0, [r6, #8]
   11a38:	add	r1, r0, r5, lsl #3
   11a3c:	ldr	r0, [r1, #4]!
   11a40:	ldr	r2, [r0]
   11a44:	cmp	r2, r4
   11a48:	bne	11a58 <grafo_remove@@Base+0x98>
   11a4c:	ldr	r2, [r0, #4]
   11a50:	str	r2, [r1]
   11a54:	b	11a7c <grafo_remove@@Base+0xbc>
   11a58:	mov	r1, r0
   11a5c:	ldr	r0, [r0, #4]
   11a60:	cmp	r0, #0
   11a64:	beq	11a84 <grafo_remove@@Base+0xc4>
   11a68:	ldr	r2, [r0]
   11a6c:	cmp	r2, r4
   11a70:	bne	11a58 <grafo_remove@@Base+0x98>
   11a74:	ldr	r2, [r0, #4]
   11a78:	str	r2, [r1, #4]
   11a7c:	pop	{r4, r5, r6, sl, fp, lr}
   11a80:	b	110fc <free@plt>
   11a84:	pop	{r4, r5, r6, sl, fp, pc}

00011a88 <grafo_imprime@@Base>:
   11a88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a8c:	add	fp, sp, #24
   11a90:	mov	r4, r0
   11a94:	ldr	r0, [r0, #4]
   11a98:	cmp	r0, #1
   11a9c:	blt	11b18 <grafo_imprime@@Base+0x90>
   11aa0:	movw	r9, #11089	; 0x2b51
   11aa4:	movw	r8, #10896	; 0x2a90
   11aa8:	movw	r7, #11094	; 0x2b56
   11aac:	mov	r5, #0
   11ab0:	movt	r9, #1
   11ab4:	movt	r8, #1
   11ab8:	movt	r7, #1
   11abc:	ldr	r0, [r4, #8]
   11ac0:	mov	r1, r5
   11ac4:	add	r0, r0, r5, lsl #3
   11ac8:	ldr	r6, [r0, #4]
   11acc:	mov	r0, r9
   11ad0:	bl	110d8 <printf@plt>
   11ad4:	cmp	r6, #0
   11ad8:	beq	11b00 <grafo_imprime@@Base+0x78>
   11adc:	ldr	r1, [r6]
   11ae0:	mov	r0, r8
   11ae4:	bl	110d8 <printf@plt>
   11ae8:	ldr	r6, [r6, #4]
   11aec:	cmp	r6, #0
   11af0:	beq	11b00 <grafo_imprime@@Base+0x78>
   11af4:	ldr	r1, [r6]
   11af8:	mov	r0, r7
   11afc:	b	11ae4 <grafo_imprime@@Base+0x5c>
   11b00:	mov	r0, #10
   11b04:	bl	11174 <putchar@plt>
   11b08:	ldr	r0, [r4, #4]
   11b0c:	add	r5, r5, #1
   11b10:	cmp	r5, r0
   11b14:	blt	11abc <grafo_imprime@@Base+0x34>
   11b18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011b1c <v_sucessores@@Base>:
   11b1c:	push	{r4, r5, r6, r7, fp, lr}
   11b20:	add	fp, sp, #16
   11b24:	mov	r4, #0
   11b28:	cmp	r0, #0
   11b2c:	beq	11ba4 <v_sucessores@@Base+0x88>
   11b30:	mov	r5, r1
   11b34:	cmp	r1, #0
   11b38:	bmi	11ba4 <v_sucessores@@Base+0x88>
   11b3c:	mov	r6, r0
   11b40:	ldr	r0, [r0, #4]
   11b44:	cmp	r0, r5
   11b48:	ble	11ba4 <v_sucessores@@Base+0x88>
   11b4c:	bl	12728 <vetor_novo@@Base>
   11b50:	mov	r4, r0
   11b54:	ldr	r0, [r6, #4]
   11b58:	cmp	r0, #1
   11b5c:	blt	11ba4 <v_sucessores@@Base+0x88>
   11b60:	mov	r7, #0
   11b64:	ldr	r1, [r6, #8]
   11b68:	add	r1, r1, r5, lsl #3
   11b6c:	ldr	r1, [r1, #4]
   11b70:	cmp	r1, #0
   11b74:	beq	11b98 <v_sucessores@@Base+0x7c>
   11b78:	ldr	r2, [r1]
   11b7c:	cmp	r2, r7
   11b80:	bne	11b6c <v_sucessores@@Base+0x50>
   11b84:	mov	r0, r4
   11b88:	mov	r1, r7
   11b8c:	mvn	r2, #0
   11b90:	bl	127f0 <vetor_insere@@Base>
   11b94:	ldr	r0, [r6, #4]
   11b98:	add	r7, r7, #1
   11b9c:	cmp	r7, r0
   11ba0:	blt	11b64 <v_sucessores@@Base+0x48>
   11ba4:	mov	r0, r4
   11ba8:	pop	{r4, r5, r6, r7, fp, pc}

00011bac <v_antecessores@@Base>:
   11bac:	push	{r4, r5, r6, r7, fp, lr}
   11bb0:	add	fp, sp, #16
   11bb4:	mov	r4, #0
   11bb8:	cmp	r0, #0
   11bbc:	beq	11c34 <v_antecessores@@Base+0x88>
   11bc0:	mov	r5, r1
   11bc4:	cmp	r1, #0
   11bc8:	bmi	11c34 <v_antecessores@@Base+0x88>
   11bcc:	mov	r6, r0
   11bd0:	ldr	r0, [r0, #4]
   11bd4:	cmp	r0, r5
   11bd8:	ble	11c34 <v_antecessores@@Base+0x88>
   11bdc:	bl	12728 <vetor_novo@@Base>
   11be0:	mov	r4, r0
   11be4:	ldr	r0, [r6, #4]
   11be8:	cmp	r0, #1
   11bec:	blt	11c34 <v_antecessores@@Base+0x88>
   11bf0:	mov	r7, #0
   11bf4:	ldr	r1, [r6, #8]
   11bf8:	add	r1, r1, r7, lsl #3
   11bfc:	ldr	r1, [r1, #4]
   11c00:	cmp	r1, #0
   11c04:	beq	11c28 <v_antecessores@@Base+0x7c>
   11c08:	ldr	r2, [r1]
   11c0c:	cmp	r2, r5
   11c10:	bne	11bfc <v_antecessores@@Base+0x50>
   11c14:	mov	r0, r4
   11c18:	mov	r1, r7
   11c1c:	mvn	r2, #0
   11c20:	bl	127f0 <vetor_insere@@Base>
   11c24:	ldr	r0, [r6, #4]
   11c28:	add	r7, r7, #1
   11c2c:	cmp	r7, r0
   11c30:	blt	11bf4 <v_antecessores@@Base+0x48>
   11c34:	mov	r0, r4
   11c38:	pop	{r4, r5, r6, r7, fp, pc}

00011c3c <dfs_helper@@Base>:
   11c3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c40:	add	fp, sp, #24
   11c44:	sub	sp, sp, #8
   11c48:	ldr	r9, [fp, #8]
   11c4c:	mov	r4, r1
   11c50:	mov	r6, r0
   11c54:	mov	r0, #0
   11c58:	ldr	r1, [r9, r1, lsl #2]
   11c5c:	cmp	r1, #0
   11c60:	bne	11ce8 <dfs_helper@@Base+0xac>
   11c64:	mov	r5, r2
   11c68:	cmp	r4, r2
   11c6c:	str	r3, [r9, r4, lsl #2]
   11c70:	bne	11c7c <dfs_helper@@Base+0x40>
   11c74:	mov	r0, r3
   11c78:	b	11ce8 <dfs_helper@@Base+0xac>
   11c7c:	ldr	r0, [r6, #4]
   11c80:	cmp	r0, #1
   11c84:	blt	11ce0 <dfs_helper@@Base+0xa4>
   11c88:	add	r8, r3, #1
   11c8c:	mov	r7, #0
   11c90:	ldr	r1, [r6, #8]
   11c94:	add	r1, r1, r4, lsl #3
   11c98:	ldr	r1, [r1, #4]
   11c9c:	cmp	r1, #0
   11ca0:	beq	11cd4 <dfs_helper@@Base+0x98>
   11ca4:	ldr	r2, [r1]
   11ca8:	cmp	r2, r7
   11cac:	bne	11c98 <dfs_helper@@Base+0x5c>
   11cb0:	mov	r0, r6
   11cb4:	mov	r1, r7
   11cb8:	mov	r2, r5
   11cbc:	mov	r3, r8
   11cc0:	str	r9, [sp]
   11cc4:	bl	11c3c <dfs_helper@@Base>
   11cc8:	cmp	r0, #0
   11ccc:	bne	11ce8 <dfs_helper@@Base+0xac>
   11cd0:	ldr	r0, [r6, #4]
   11cd4:	add	r7, r7, #1
   11cd8:	cmp	r7, r0
   11cdc:	blt	11c90 <dfs_helper@@Base+0x54>
   11ce0:	mov	r0, #0
   11ce4:	str	r0, [r9, r4, lsl #2]
   11ce8:	sub	sp, fp, #24
   11cec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011cf0 <grafo_dfs@@Base>:
   11cf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11cf4:	add	fp, sp, #24
   11cf8:	sub	sp, sp, #8
   11cfc:	cmp	r0, #0
   11d00:	beq	11db0 <grafo_dfs@@Base+0xc0>
   11d04:	mov	r4, r0
   11d08:	ldr	r0, [r0, #4]
   11d0c:	mov	r7, r1
   11d10:	mov	r1, #4
   11d14:	mov	r8, r3
   11d18:	mov	r6, r2
   11d1c:	bl	110c0 <calloc@plt>
   11d20:	mov	r5, r0
   11d24:	str	r0, [sp]
   11d28:	mov	r0, r4
   11d2c:	mov	r1, r7
   11d30:	mov	r2, r6
   11d34:	mov	r3, #1
   11d38:	bl	11c3c <dfs_helper@@Base>
   11d3c:	cmp	r0, #0
   11d40:	beq	11db8 <grafo_dfs@@Base+0xc8>
   11d44:	mov	r1, #4
   11d48:	mov	r7, r0
   11d4c:	bl	110c0 <calloc@plt>
   11d50:	mov	r6, r0
   11d54:	cmp	r7, #1
   11d58:	blt	11da0 <grafo_dfs@@Base+0xb0>
   11d5c:	ldr	r0, [r4, #4]
   11d60:	mov	r1, #0
   11d64:	mov	r2, r1
   11d68:	add	r1, r1, #1
   11d6c:	cmp	r0, #1
   11d70:	blt	11d98 <grafo_dfs@@Base+0xa8>
   11d74:	mov	r3, #0
   11d78:	ldr	r4, [r5, r3, lsl #2]
   11d7c:	cmp	r4, r1
   11d80:	beq	11d94 <grafo_dfs@@Base+0xa4>
   11d84:	add	r3, r3, #1
   11d88:	cmp	r3, r0
   11d8c:	blt	11d78 <grafo_dfs@@Base+0x88>
   11d90:	b	11d98 <grafo_dfs@@Base+0xa8>
   11d94:	str	r3, [r6, r2, lsl #2]
   11d98:	cmp	r1, r7
   11d9c:	bne	11d64 <grafo_dfs@@Base+0x74>
   11da0:	mov	r0, r5
   11da4:	str	r7, [r8]
   11da8:	bl	110fc <free@plt>
   11dac:	b	11dc8 <grafo_dfs@@Base+0xd8>
   11db0:	mov	r6, #0
   11db4:	b	11dc8 <grafo_dfs@@Base+0xd8>
   11db8:	mov	r0, r5
   11dbc:	bl	110fc <free@plt>
   11dc0:	mov	r6, #0
   11dc4:	str	r6, [r8]
   11dc8:	mov	r0, r6
   11dcc:	sub	sp, fp, #24
   11dd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011dd4 <grafo_bfs@@Base>:
   11dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dd8:	add	fp, sp, #28
   11ddc:	sub	sp, sp, #12
   11de0:	cmp	r0, #0
   11de4:	beq	11eec <grafo_bfs@@Base+0x118>
   11de8:	stmib	sp, {r2, r3}
   11dec:	mov	r8, r1
   11df0:	mov	sl, r0
   11df4:	mov	r1, #4
   11df8:	ldr	r7, [r0, #4]
   11dfc:	mov	r0, r7
   11e00:	bl	110c0 <calloc@plt>
   11e04:	mov	r5, r0
   11e08:	mov	r0, r7
   11e0c:	mov	r1, #4
   11e10:	bl	110c0 <calloc@plt>
   11e14:	mov	r9, r0
   11e18:	cmp	r7, #1
   11e1c:	blt	11e30 <grafo_bfs@@Base+0x5c>
   11e20:	lsl	r2, r7, #2
   11e24:	mov	r0, r5
   11e28:	mov	r1, #255	; 0xff
   11e2c:	bl	11168 <memset@plt>
   11e30:	str	r8, [r5, r8, lsl #2]
   11e34:	str	r8, [r9]
   11e38:	mov	r0, #0
   11e3c:	mov	r1, #1
   11e40:	add	r0, r0, #1
   11e44:	cmp	r7, #1
   11e48:	sdiv	r2, r0, r7
   11e4c:	mls	r0, r2, r7, r0
   11e50:	blt	11eb8 <grafo_bfs@@Base+0xe4>
   11e54:	ldr	r2, [sl, #8]
   11e58:	mov	r3, #0
   11e5c:	add	r2, r2, r8, lsl #3
   11e60:	ldr	r6, [r2, #4]
   11e64:	cmp	r6, #0
   11e68:	mov	r2, r6
   11e6c:	beq	11eac <grafo_bfs@@Base+0xd8>
   11e70:	ldr	r4, [r2]
   11e74:	cmp	r4, r3
   11e78:	beq	11e8c <grafo_bfs@@Base+0xb8>
   11e7c:	ldr	r2, [r2, #4]
   11e80:	cmp	r2, #0
   11e84:	bne	11e70 <grafo_bfs@@Base+0x9c>
   11e88:	b	11eac <grafo_bfs@@Base+0xd8>
   11e8c:	ldr	r2, [r5, r3, lsl #2]
   11e90:	cmn	r2, #1
   11e94:	bne	11eac <grafo_bfs@@Base+0xd8>
   11e98:	str	r3, [r9, r1, lsl #2]
   11e9c:	add	r1, r1, #1
   11ea0:	str	r8, [r5, r3, lsl #2]
   11ea4:	sdiv	r2, r1, r7
   11ea8:	mls	r1, r2, r7, r1
   11eac:	add	r3, r3, #1
   11eb0:	cmp	r3, r7
   11eb4:	bne	11e64 <grafo_bfs@@Base+0x90>
   11eb8:	cmp	r0, r1
   11ebc:	beq	11ec8 <grafo_bfs@@Base+0xf4>
   11ec0:	ldr	r8, [r9, r0, lsl #2]
   11ec4:	b	11e40 <grafo_bfs@@Base+0x6c>
   11ec8:	ldr	r6, [sp, #4]
   11ecc:	ldr	r4, [r5, r6, lsl #2]
   11ed0:	cmp	r4, #0
   11ed4:	bmi	11ef4 <grafo_bfs@@Base+0x120>
   11ed8:	cmp	r4, r6
   11edc:	bne	11efc <grafo_bfs@@Base+0x128>
   11ee0:	mov	r8, #2
   11ee4:	mov	r7, #1
   11ee8:	b	11f1c <grafo_bfs@@Base+0x148>
   11eec:	mov	sl, #0
   11ef0:	b	11f6c <grafo_bfs@@Base+0x198>
   11ef4:	mov	r7, #0
   11ef8:	b	11f54 <grafo_bfs@@Base+0x180>
   11efc:	mov	r7, #1
   11f00:	mov	r0, r4
   11f04:	ldr	r1, [r5, r0, lsl #2]
   11f08:	add	r7, r7, #1
   11f0c:	cmp	r1, r0
   11f10:	mov	r0, r1
   11f14:	bne	11f04 <grafo_bfs@@Base+0x130>
   11f18:	add	r8, r7, #1
   11f1c:	lsl	r0, r7, #2
   11f20:	bl	1112c <malloc@plt>
   11f24:	mov	sl, r0
   11f28:	add	r0, r0, r7, lsl #2
   11f2c:	cmp	r8, #2
   11f30:	str	r6, [r0, #-4]
   11f34:	beq	11f54 <grafo_bfs@@Base+0x180>
   11f38:	sub	r0, r0, #8
   11f3c:	sub	r1, r8, #2
   11f40:	ldr	r2, [r5, r4, lsl #2]
   11f44:	str	r4, [r0], #-4
   11f48:	subs	r1, r1, #1
   11f4c:	mov	r4, r2
   11f50:	bne	11f40 <grafo_bfs@@Base+0x16c>
   11f54:	mov	r0, r9
   11f58:	bl	110fc <free@plt>
   11f5c:	mov	r0, r5
   11f60:	bl	110fc <free@plt>
   11f64:	ldr	r0, [sp, #8]
   11f68:	str	r7, [r0]
   11f6c:	mov	r0, sl
   11f70:	sub	sp, fp, #28
   11f74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011f78 <heap_nova@@Base>:
   11f78:	push	{r4, r5, fp, lr}
   11f7c:	add	fp, sp, #8
   11f80:	mov	r5, r0
   11f84:	mov	r0, #12
   11f88:	bl	1112c <malloc@plt>
   11f8c:	cmp	r0, #0
   11f90:	beq	11fc0 <heap_nova@@Base+0x48>
   11f94:	mov	r4, r0
   11f98:	mov	r0, #0
   11f9c:	mov	r1, #4
   11fa0:	stm	r4, {r0, r5}
   11fa4:	mov	r0, r5
   11fa8:	bl	110c0 <calloc@plt>
   11fac:	cmp	r0, #0
   11fb0:	str	r0, [r4, #8]
   11fb4:	bne	11fc4 <heap_nova@@Base+0x4c>
   11fb8:	mov	r0, r4
   11fbc:	bl	110fc <free@plt>
   11fc0:	mov	r4, #0
   11fc4:	mov	r0, r4
   11fc8:	pop	{r4, r5, fp, pc}

00011fcc <heap_apaga@@Base>:
   11fcc:	cmp	r0, #0
   11fd0:	bxeq	lr
   11fd4:	push	{r4, r5, r6, sl, fp, lr}
   11fd8:	add	fp, sp, #16
   11fdc:	ldr	r1, [r0]
   11fe0:	mov	r4, r0
   11fe4:	ldr	r0, [r0, #8]
   11fe8:	cmp	r1, #1
   11fec:	blt	1202c <heap_apaga@@Base+0x60>
   11ff0:	mov	r5, #0
   11ff4:	mov	r6, #0
   11ff8:	ldr	r0, [r0, r6, lsl #2]
   11ffc:	ldr	r0, [r0, #4]
   12000:	bl	110fc <free@plt>
   12004:	ldr	r0, [r4, #8]
   12008:	ldr	r0, [r0, r6, lsl #2]
   1200c:	bl	110fc <free@plt>
   12010:	ldr	r0, [r4, #8]
   12014:	str	r5, [r0, r6, lsl #2]
   12018:	add	r6, r6, #1
   1201c:	ldr	r1, [r4]
   12020:	ldr	r0, [r4, #8]
   12024:	cmp	r6, r1
   12028:	blt	11ff8 <heap_apaga@@Base+0x2c>
   1202c:	bl	110fc <free@plt>
   12030:	mov	r0, r4
   12034:	pop	{r4, r5, r6, sl, fp, lr}
   12038:	b	110fc <free@plt>

0001203c <elemento_cria@@Base>:
   1203c:	push	{r4, r5, r6, r7, fp, lr}
   12040:	add	fp, sp, #16
   12044:	mov	r4, r0
   12048:	mov	r0, #8
   1204c:	mov	r7, r1
   12050:	bl	1112c <malloc@plt>
   12054:	mov	r5, #0
   12058:	cmp	r0, #0
   1205c:	beq	120a0 <elemento_cria@@Base+0x64>
   12060:	mov	r6, r0
   12064:	mov	r0, r7
   12068:	bl	11150 <strlen@plt>
   1206c:	add	r0, r0, #1
   12070:	mov	r1, #1
   12074:	bl	110c0 <calloc@plt>
   12078:	cmp	r0, #0
   1207c:	str	r0, [r6, #4]
   12080:	beq	12098 <elemento_cria@@Base+0x5c>
   12084:	mov	r1, r7
   12088:	bl	11114 <strcpy@plt>
   1208c:	mov	r5, r6
   12090:	str	r4, [r6]
   12094:	b	120a0 <elemento_cria@@Base+0x64>
   12098:	mov	r0, r6
   1209c:	bl	110fc <free@plt>
   120a0:	mov	r0, r5
   120a4:	pop	{r4, r5, r6, r7, fp, pc}

000120a8 <heap_insere@@Base>:
   120a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   120ac:	add	fp, sp, #24
   120b0:	mov	r5, r0
   120b4:	ldr	r0, [r0]
   120b8:	mov	r8, #0
   120bc:	ldr	r3, [r5, #4]
   120c0:	cmp	r0, r3
   120c4:	bge	12144 <heap_insere@@Base+0x9c>
   120c8:	mov	r0, r2
   120cc:	bl	1203c <elemento_cria@@Base>
   120d0:	cmp	r0, #0
   120d4:	beq	12144 <heap_insere@@Base+0x9c>
   120d8:	ldr	r1, [r5]
   120dc:	ldr	r2, [r5, #8]
   120e0:	mov	r8, #1
   120e4:	str	r0, [r2, r1, lsl #2]
   120e8:	add	r0, r1, #1
   120ec:	cmp	r1, #0
   120f0:	str	r0, [r5]
   120f4:	beq	12144 <heap_insere@@Base+0x9c>
   120f8:	ldr	r0, [r5, #8]
   120fc:	ldr	r2, [r0, r1, lsl #2]
   12100:	cmp	r2, #0
   12104:	subne	r3, r1, #1
   12108:	addne	r3, r3, r3, lsr #31
   1210c:	asrne	r3, r3, #1
   12110:	ldrne	r4, [r0, r3, lsl #2]
   12114:	cmpne	r4, #0
   12118:	beq	12144 <heap_insere@@Base+0x9c>
   1211c:	ldr	r6, [r4]
   12120:	ldr	r7, [r2]
   12124:	cmp	r7, r6
   12128:	bge	12144 <heap_insere@@Base+0x9c>
   1212c:	str	r2, [r0, r3, lsl #2]
   12130:	cmp	r1, #2
   12134:	ldr	r0, [r5, #8]
   12138:	str	r4, [r0, r1, lsl #2]
   1213c:	mov	r1, r3
   12140:	bhi	120f8 <heap_insere@@Base+0x50>
   12144:	mov	r0, r8
   12148:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001214c <menor_que@@Base>:
   1214c:	mov	r2, r0
   12150:	mov	r0, #0
   12154:	cmp	r2, #0
   12158:	cmpne	r1, #0
   1215c:	bne	12164 <menor_que@@Base+0x18>
   12160:	bx	lr
   12164:	ldr	r1, [r1]
   12168:	ldr	r2, [r2]
   1216c:	mov	r0, #0
   12170:	cmp	r2, r1
   12174:	movwlt	r0, #1
   12178:	bx	lr

0001217c <heap_remove@@Base>:
   1217c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12180:	add	fp, sp, #24
   12184:	mov	r8, #0
   12188:	cmp	r0, #0
   1218c:	beq	1226c <heap_remove@@Base+0xf0>
   12190:	mov	r5, r0
   12194:	ldr	r0, [r0]
   12198:	cmp	r0, #1
   1219c:	blt	1226c <heap_remove@@Base+0xf0>
   121a0:	ldr	r0, [r5, #8]
   121a4:	ldr	r0, [r0]
   121a8:	ldr	r8, [r0, #4]
   121ac:	bl	110fc <free@plt>
   121b0:	ldr	r0, [r5]
   121b4:	ldr	r1, [r5, #8]
   121b8:	sub	lr, r0, #1
   121bc:	str	lr, [r5]
   121c0:	cmp	lr, #2
   121c4:	ldr	r2, [r1, lr, lsl #2]
   121c8:	str	r2, [r1]
   121cc:	mov	r1, #0
   121d0:	ldr	r2, [r5, #8]
   121d4:	str	r1, [r2, lr, lsl #2]
   121d8:	blt	1226c <heap_remove@@Base+0xf0>
   121dc:	mov	ip, #1
   121e0:	mov	r4, #1
   121e4:	mov	r2, #0
   121e8:	add	r3, r1, #2
   121ec:	ldr	r1, [r5, #8]
   121f0:	cmp	r3, lr
   121f4:	bge	1220c <heap_remove@@Base+0x90>
   121f8:	ldr	r6, [r1, r3, lsl #2]
   121fc:	cmp	r6, #0
   12200:	ldrne	r7, [r1, r4, lsl #2]
   12204:	cmpne	r7, #0
   12208:	bne	12258 <heap_remove@@Base+0xdc>
   1220c:	mov	r3, r4
   12210:	ldr	r4, [r1, r3, lsl #2]
   12214:	cmp	r4, #0
   12218:	ldrne	r6, [r1, r2, lsl #2]
   1221c:	cmpne	r6, #0
   12220:	beq	1226c <heap_remove@@Base+0xf0>
   12224:	ldr	r7, [r6]
   12228:	ldr	r0, [r4]
   1222c:	cmp	r0, r7
   12230:	bge	1226c <heap_remove@@Base+0xf0>
   12234:	str	r6, [r1, r3, lsl #2]
   12238:	lsl	r1, r3, #1
   1223c:	ldr	r0, [r5, #8]
   12240:	str	r4, [r0, r2, lsl #2]
   12244:	orr	r4, ip, r3, lsl #1
   12248:	mov	r2, r3
   1224c:	cmp	r4, lr
   12250:	blt	121e8 <heap_remove@@Base+0x6c>
   12254:	b	1226c <heap_remove@@Base+0xf0>
   12258:	ldr	r7, [r7]
   1225c:	ldr	r6, [r6]
   12260:	cmp	r6, r7
   12264:	movge	r3, r4
   12268:	b	12210 <heap_remove@@Base+0x94>
   1226c:	mov	r0, r8
   12270:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012274 <mostraHeap@@Base>:
   12274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12278:	add	fp, sp, #28
   1227c:	sub	sp, sp, #4
   12280:	mov	r9, r0
   12284:	ldr	r0, [r0]
   12288:	cmp	r0, r1
   1228c:	ble	12334 <mostraHeap@@Base+0xc0>
   12290:	mov	sl, r1
   12294:	mov	r7, #0
   12298:	cmp	r1, #1
   1229c:	blt	122bc <mostraHeap@@Base+0x48>
   122a0:	mov	r0, sl
   122a4:	sub	r1, r0, #1
   122a8:	add	r7, r7, #1
   122ac:	add	r0, r1, r1, lsr #31
   122b0:	cmp	r1, #1
   122b4:	asr	r0, r0, #1
   122b8:	bgt	122a4 <mostraHeap@@Base+0x30>
   122bc:	mov	r0, #1
   122c0:	orr	r1, r0, sl, lsl #1
   122c4:	mov	r0, r9
   122c8:	bl	12274 <mostraHeap@@Base>
   122cc:	lsl	r8, sl, #1
   122d0:	cmp	r7, #0
   122d4:	beq	122fc <mostraHeap@@Base+0x88>
   122d8:	movw	r6, #11099	; 0x2b5b
   122dc:	add	r4, r7, r7, lsl #1
   122e0:	mov	r5, #0
   122e4:	movt	r6, #1
   122e8:	mov	r0, r6
   122ec:	bl	110d8 <printf@plt>
   122f0:	add	r5, r5, #1
   122f4:	cmp	r5, r4
   122f8:	bcc	122e8 <mostraHeap@@Base+0x74>
   122fc:	ldr	r0, [r9, #8]
   12300:	ldr	r0, [r0, sl, lsl #2]
   12304:	ldr	r2, [r0]
   12308:	ldr	r1, [r0, #4]
   1230c:	movw	r0, #11105	; 0x2b61
   12310:	movt	r0, #1
   12314:	bl	110d8 <printf@plt>
   12318:	add	r1, r8, #2
   1231c:	mov	r0, r9
   12320:	bl	12274 <mostraHeap@@Base>
   12324:	cmp	r7, #0
   12328:	beq	12334 <mostraHeap@@Base+0xc0>
   1232c:	sub	sp, fp, #28
   12330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12334:	mov	r0, #10
   12338:	sub	sp, fp, #28
   1233c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12340:	b	11174 <putchar@plt>

00012344 <novo_str@@Base>:
   12344:	push	{r4, r5, r6, sl, fp, lr}
   12348:	add	fp, sp, #16
   1234c:	mov	r6, r0
   12350:	mov	r0, #12
   12354:	bl	1112c <malloc@plt>
   12358:	mov	r5, #0
   1235c:	cmp	r0, #0
   12360:	beq	123a8 <novo_str@@Base+0x64>
   12364:	mov	r4, r0
   12368:	mov	r0, r6
   1236c:	bl	11150 <strlen@plt>
   12370:	add	r0, r0, #1
   12374:	bl	1112c <malloc@plt>
   12378:	cmp	r0, #0
   1237c:	str	r0, [r4]
   12380:	beq	123a0 <novo_str@@Base+0x5c>
   12384:	mov	r1, r6
   12388:	bl	11114 <strcpy@plt>
   1238c:	mov	r0, #0
   12390:	mov	r5, r4
   12394:	str	r0, [r4, #4]
   12398:	str	r0, [r4, #8]
   1239c:	b	123a8 <novo_str@@Base+0x64>
   123a0:	mov	r0, r4
   123a4:	bl	110fc <free@plt>
   123a8:	mov	r0, r5
   123ac:	pop	{r4, r5, r6, sl, fp, pc}

000123b0 <lista_nova@@Base>:
   123b0:	push	{fp, lr}
   123b4:	mov	fp, sp
   123b8:	mov	r0, #12
   123bc:	bl	1112c <malloc@plt>
   123c0:	cmp	r0, #0
   123c4:	moveq	r0, #0
   123c8:	movne	r1, #0
   123cc:	strne	r1, [r0]
   123d0:	strne	r1, [r0, #4]
   123d4:	strne	r1, [r0, #8]
   123d8:	pop	{fp, pc}

000123dc <lista_apaga@@Base>:
   123dc:	cmp	r0, #0
   123e0:	bxeq	lr
   123e4:	push	{r4, r5, fp, lr}
   123e8:	add	fp, sp, #8
   123ec:	mov	r4, r0
   123f0:	ldr	r5, [r4]
   123f4:	cmp	r5, #0
   123f8:	beq	12418 <lista_apaga@@Base+0x3c>
   123fc:	ldr	r0, [r5, #4]
   12400:	str	r0, [r4]
   12404:	ldr	r0, [r5]
   12408:	bl	110fc <free@plt>
   1240c:	mov	r0, r5
   12410:	bl	110fc <free@plt>
   12414:	b	123f0 <lista_apaga@@Base+0x14>
   12418:	mov	r0, r4
   1241c:	pop	{r4, r5, fp, lr}
   12420:	b	110fc <free@plt>

00012424 <lista_tamanho@@Base>:
   12424:	cmp	r0, #0
   12428:	ldrne	r0, [r0, #8]
   1242c:	mvneq	r0, #0
   12430:	bx	lr

00012434 <lista_inicio@@Base>:
   12434:	cmp	r0, #0
   12438:	ldrne	r0, [r0]
   1243c:	moveq	r0, #0
   12440:	bx	lr

00012444 <lista_fim@@Base>:
   12444:	cmp	r0, #0
   12448:	ldrne	r0, [r0, #4]
   1244c:	moveq	r0, #0
   12450:	bx	lr

00012454 <lista_insere@@Base>:
   12454:	push	{r4, r5, r6, sl, fp, lr}
   12458:	add	fp, sp, #16
   1245c:	cmp	r0, #0
   12460:	mov	r6, #0
   12464:	cmpne	r1, #0
   12468:	bne	12474 <lista_insere@@Base+0x20>
   1246c:	mov	r0, r6
   12470:	pop	{r4, r5, r6, sl, fp, pc}
   12474:	mov	r4, r0
   12478:	mov	r0, r1
   1247c:	mov	r5, r2
   12480:	bl	12344 <novo_str@@Base>
   12484:	cmp	r0, #0
   12488:	beq	1246c <lista_insere@@Base+0x18>
   1248c:	ldr	r2, [r4, #8]
   12490:	ldr	r1, [r4]
   12494:	cmp	r5, #0
   12498:	add	r2, r2, #1
   1249c:	str	r2, [r4, #8]
   124a0:	beq	124c4 <lista_insere@@Base+0x70>
   124a4:	cmp	r1, r5
   124a8:	beq	124dc <lista_insere@@Base+0x88>
   124ac:	ldr	r1, [r5, #8]
   124b0:	str	r5, [r0, #4]
   124b4:	str	r1, [r0, #8]
   124b8:	str	r0, [r1, #4]
   124bc:	str	r0, [r5, #8]
   124c0:	b	124f4 <lista_insere@@Base+0xa0>
   124c4:	cmp	r1, #0
   124c8:	beq	124ec <lista_insere@@Base+0x98>
   124cc:	ldr	r1, [r4, #4]
   124d0:	str	r1, [r0, #8]
   124d4:	str	r0, [r1, #4]
   124d8:	b	124f0 <lista_insere@@Base+0x9c>
   124dc:	str	r5, [r0, #4]
   124e0:	str	r0, [r5, #8]
   124e4:	str	r0, [r4]
   124e8:	b	124f4 <lista_insere@@Base+0xa0>
   124ec:	str	r0, [r4]
   124f0:	str	r0, [r4, #4]
   124f4:	mov	r6, r0
   124f8:	b	1246c <lista_insere@@Base+0x18>

000124fc <lista_remove@@Base>:
   124fc:	push	{r4, r5, fp, lr}
   12500:	add	fp, sp, #8
   12504:	cmp	r0, #0
   12508:	mov	r4, #0
   1250c:	movne	r5, r1
   12510:	cmpne	r1, #0
   12514:	beq	12564 <lista_remove@@Base+0x68>
   12518:	ldr	r1, [r0, #8]
   1251c:	sub	r1, r1, #1
   12520:	str	r1, [r0, #8]
   12524:	ldr	r1, [r5, #8]
   12528:	ldr	r4, [r5, #4]
   1252c:	cmp	r1, #0
   12530:	beq	12540 <lista_remove@@Base+0x44>
   12534:	str	r4, [r1, #4]
   12538:	ldr	r4, [r5, #4]
   1253c:	b	12544 <lista_remove@@Base+0x48>
   12540:	str	r4, [r0]
   12544:	cmp	r4, #0
   12548:	add	r2, r4, #8
   1254c:	addeq	r2, r0, #4
   12550:	str	r1, [r2]
   12554:	ldr	r0, [r5]
   12558:	bl	110fc <free@plt>
   1255c:	mov	r0, r5
   12560:	bl	110fc <free@plt>
   12564:	mov	r0, r4
   12568:	pop	{r4, r5, fp, pc}

0001256c <lista_pesquisa@@Base>:
   1256c:	push	{r4, r5, r6, sl, fp, lr}
   12570:	add	fp, sp, #16
   12574:	cmp	r0, #0
   12578:	mov	r4, #0
   1257c:	movne	r5, r1
   12580:	cmpne	r1, #0
   12584:	bne	12590 <lista_pesquisa@@Base+0x24>
   12588:	mov	r0, r4
   1258c:	pop	{r4, r5, r6, sl, fp, pc}
   12590:	cmp	r2, #1
   12594:	bhi	12588 <lista_pesquisa@@Base+0x1c>
   12598:	cmp	r2, #0
   1259c:	beq	125c8 <lista_pesquisa@@Base+0x5c>
   125a0:	ldr	r6, [r0, #4]
   125a4:	cmp	r6, #0
   125a8:	beq	12588 <lista_pesquisa@@Base+0x1c>
   125ac:	ldr	r0, [r6]
   125b0:	mov	r1, r5
   125b4:	bl	110cc <strcmp@plt>
   125b8:	cmp	r0, #0
   125bc:	beq	125f0 <lista_pesquisa@@Base+0x84>
   125c0:	ldr	r6, [r6, #8]
   125c4:	b	125a4 <lista_pesquisa@@Base+0x38>
   125c8:	ldr	r6, [r0]
   125cc:	cmp	r6, #0
   125d0:	beq	12588 <lista_pesquisa@@Base+0x1c>
   125d4:	ldr	r0, [r6]
   125d8:	mov	r1, r5
   125dc:	bl	110cc <strcmp@plt>
   125e0:	cmp	r0, #0
   125e4:	beq	125f0 <lista_pesquisa@@Base+0x84>
   125e8:	ldr	r6, [r6, #4]
   125ec:	b	125cc <lista_pesquisa@@Base+0x60>
   125f0:	mov	r4, r6
   125f4:	b	12588 <lista_pesquisa@@Base+0x1c>

000125f8 <lista_ordena@@Base>:
   125f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125fc:	add	fp, sp, #24
   12600:	cmp	r0, #0
   12604:	beq	1267c <lista_ordena@@Base+0x84>
   12608:	ldr	r1, [r0, #8]
   1260c:	mov	r8, #0
   12610:	cmp	r1, #0
   12614:	beq	12680 <lista_ordena@@Base+0x88>
   12618:	ldr	r0, [r0]
   1261c:	mov	r5, r0
   12620:	ldr	r4, [r5, #4]!
   12624:	cmp	r4, #0
   12628:	beq	12680 <lista_ordena@@Base+0x88>
   1262c:	mov	r9, r0
   12630:	mov	r7, r0
   12634:	mov	r6, r4
   12638:	ldr	r1, [r7]
   1263c:	ldr	r0, [r6]
   12640:	bl	110cc <strcmp@plt>
   12644:	cmp	r0, #0
   12648:	movmi	r7, r6
   1264c:	ldr	r6, [r6, #4]
   12650:	cmp	r6, #0
   12654:	bne	12638 <lista_ordena@@Base+0x40>
   12658:	cmp	r7, r9
   1265c:	mov	r0, r4
   12660:	beq	1261c <lista_ordena@@Base+0x24>
   12664:	ldr	r0, [r9]
   12668:	ldr	r1, [r7]
   1266c:	str	r1, [r9]
   12670:	str	r0, [r7]
   12674:	ldr	r0, [r5]
   12678:	b	1261c <lista_ordena@@Base+0x24>
   1267c:	mvn	r8, #0
   12680:	mov	r0, r8
   12684:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012688 <lista_inverte@@Base>:
   12688:	push	{fp, lr}
   1268c:	mov	fp, sp
   12690:	cmp	r0, #0
   12694:	beq	126f0 <lista_inverte@@Base+0x68>
   12698:	ldr	r2, [r0, #8]
   1269c:	mov	r1, #0
   126a0:	cmp	r2, #2
   126a4:	blt	12720 <lista_inverte@@Base+0x98>
   126a8:	sub	r1, r2, #2
   126ac:	cmp	r1, #0
   126b0:	ble	126f8 <lista_inverte@@Base+0x70>
   126b4:	ldr	ip, [r0]
   126b8:	ldr	r3, [ip, #4]
   126bc:	mov	r2, r3
   126c0:	ldr	r3, [r3, #4]
   126c4:	subs	r1, r1, #1
   126c8:	ldr	lr, [r2, #8]
   126cc:	str	r3, [lr, #4]
   126d0:	ldr	r3, [r2, #4]
   126d4:	str	lr, [r3, #8]
   126d8:	str	ip, [r2, #4]
   126dc:	str	r2, [ip, #8]
   126e0:	mov	ip, r2
   126e4:	bne	126bc <lista_inverte@@Base+0x34>
   126e8:	str	r2, [r0]
   126ec:	b	126fc <lista_inverte@@Base+0x74>
   126f0:	mvn	r1, #0
   126f4:	b	12720 <lista_inverte@@Base+0x98>
   126f8:	ldr	r2, [r0]
   126fc:	ldr	r3, [r0, #4]
   12700:	mov	r1, #0
   12704:	ldr	ip, [r3, #8]
   12708:	str	ip, [r0, #4]
   1270c:	str	r1, [ip, #4]
   12710:	str	r2, [r3, #4]
   12714:	str	r1, [r3, #8]
   12718:	str	r3, [r2, #8]
   1271c:	str	r3, [r0]
   12720:	mov	r0, r1
   12724:	pop	{fp, pc}

00012728 <vetor_novo@@Base>:
   12728:	push	{fp, lr}
   1272c:	mov	fp, sp
   12730:	mov	r0, #12
   12734:	bl	1112c <malloc@plt>
   12738:	cmp	r0, #0
   1273c:	moveq	r0, #0
   12740:	movne	r1, #0
   12744:	strne	r1, [r0]
   12748:	strne	r1, [r0, #4]
   1274c:	strne	r1, [r0, #8]
   12750:	pop	{fp, pc}

00012754 <vetor_apaga@@Base>:
   12754:	cmp	r0, #0
   12758:	bxeq	lr
   1275c:	push	{r4, sl, fp, lr}
   12760:	add	fp, sp, #8
   12764:	mov	r4, r0
   12768:	ldr	r0, [r0, #8]
   1276c:	bl	110fc <free@plt>
   12770:	mov	r0, r4
   12774:	pop	{r4, sl, fp, lr}
   12778:	b	110fc <free@plt>

0001277c <vetor_atribui@@Base>:
   1277c:	mov	ip, r0
   12780:	mvn	r0, #0
   12784:	cmp	ip, #0
   12788:	beq	127ac <vetor_atribui@@Base+0x30>
   1278c:	cmp	r1, #0
   12790:	bmi	127ac <vetor_atribui@@Base+0x30>
   12794:	ldr	r3, [ip]
   12798:	cmp	r3, r1
   1279c:	bxle	lr
   127a0:	ldr	r0, [ip, #8]
   127a4:	str	r2, [r0, r1, lsl #2]
   127a8:	mov	r0, r1
   127ac:	bx	lr

000127b0 <vetor_tamanho@@Base>:
   127b0:	cmp	r0, #0
   127b4:	ldrne	r0, [r0]
   127b8:	mvneq	r0, #0
   127bc:	bx	lr

000127c0 <vetor_elemento@@Base>:
   127c0:	mov	r2, r0
   127c4:	mov	r0, #-2147483648	; 0x80000000
   127c8:	cmp	r2, #0
   127cc:	beq	127ec <vetor_elemento@@Base+0x2c>
   127d0:	cmp	r1, #0
   127d4:	bmi	127ec <vetor_elemento@@Base+0x2c>
   127d8:	ldr	r3, [r2]
   127dc:	cmp	r3, r1
   127e0:	bxle	lr
   127e4:	ldr	r0, [r2, #8]
   127e8:	ldr	r0, [r0, r1, lsl #2]
   127ec:	bx	lr

000127f0 <vetor_insere@@Base>:
   127f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   127f4:	add	fp, sp, #24
   127f8:	mvn	r7, #0
   127fc:	cmp	r0, #0
   12800:	beq	128a8 <vetor_insere@@Base+0xb8>
   12804:	mov	r4, r2
   12808:	cmn	r2, #1
   1280c:	blt	128a8 <vetor_insere@@Base+0xb8>
   12810:	mov	r8, r1
   12814:	ldr	r1, [r0]
   12818:	mov	r5, r0
   1281c:	cmp	r1, r4
   12820:	blt	128a8 <vetor_insere@@Base+0xb8>
   12824:	ldr	r0, [r5, #4]
   12828:	cmn	r4, #1
   1282c:	moveq	r4, r1
   12830:	cmp	r1, r0
   12834:	bne	12868 <vetor_insere@@Base+0x78>
   12838:	cmp	r1, #0
   1283c:	lsl	r0, r1, #1
   12840:	movweq	r0, #1
   12844:	str	r0, [r5, #4]
   12848:	lsl	r1, r0, #2
   1284c:	ldr	r0, [r5, #8]
   12850:	bl	11108 <realloc@plt>
   12854:	cmp	r0, #0
   12858:	str	r0, [r5, #8]
   1285c:	beq	128a8 <vetor_insere@@Base+0xb8>
   12860:	ldr	r1, [r5]
   12864:	b	1286c <vetor_insere@@Base+0x7c>
   12868:	ldr	r0, [r5, #8]
   1286c:	cmp	r1, r4
   12870:	ble	12898 <vetor_insere@@Base+0xa8>
   12874:	add	r7, r0, r1, lsl #2
   12878:	mov	r2, r1
   1287c:	mov	r3, r7
   12880:	ldr	r6, [r3, #-4]!
   12884:	sub	r2, r2, #1
   12888:	cmp	r2, r4
   1288c:	str	r6, [r7]
   12890:	mov	r7, r3
   12894:	bgt	12880 <vetor_insere@@Base+0x90>
   12898:	str	r8, [r0, r4, lsl #2]
   1289c:	add	r0, r1, #1
   128a0:	mov	r7, r4
   128a4:	str	r0, [r5]
   128a8:	mov	r0, r7
   128ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000128b0 <vetor_remove@@Base>:
   128b0:	mvn	r2, #0
   128b4:	cmp	r0, #0
   128b8:	beq	12910 <vetor_remove@@Base+0x60>
   128bc:	cmp	r1, #0
   128c0:	bmi	12910 <vetor_remove@@Base+0x60>
   128c4:	ldr	ip, [r0]
   128c8:	cmp	ip, r1
   128cc:	ble	12910 <vetor_remove@@Base+0x60>
   128d0:	add	r2, r1, #1
   128d4:	cmp	r2, ip
   128d8:	bge	12904 <vetor_remove@@Base+0x54>
   128dc:	ldr	r3, [r0, #8]
   128e0:	mvn	r2, r1
   128e4:	add	r2, r2, ip
   128e8:	add	r1, r3, r1, lsl #2
   128ec:	add	r1, r1, #4
   128f0:	ldr	r3, [r1]
   128f4:	subs	r2, r2, #1
   128f8:	str	r3, [r1, #-4]
   128fc:	add	r1, r1, #4
   12900:	bne	128f0 <vetor_remove@@Base+0x40>
   12904:	sub	r1, ip, #1
   12908:	mov	r2, #0
   1290c:	str	r1, [r0]
   12910:	mov	r0, r2
   12914:	bx	lr

00012918 <vetor_pesquisa@@Base>:
   12918:	push	{fp, lr}
   1291c:	mov	fp, sp
   12920:	mov	r2, r0
   12924:	mvn	r0, #0
   12928:	cmp	r2, #0
   1292c:	beq	1295c <vetor_pesquisa@@Base+0x44>
   12930:	ldr	ip, [r2]
   12934:	cmp	ip, #1
   12938:	poplt	{fp, pc}
   1293c:	ldr	lr, [r2, #8]
   12940:	mov	r2, #0
   12944:	ldr	r3, [lr, r2, lsl #2]
   12948:	cmp	r3, r1
   1294c:	beq	12960 <vetor_pesquisa@@Base+0x48>
   12950:	add	r2, r2, #1
   12954:	cmp	r2, ip
   12958:	blt	12944 <vetor_pesquisa@@Base+0x2c>
   1295c:	pop	{fp, pc}
   12960:	mov	r0, r2
   12964:	pop	{fp, pc}

00012968 <vetor_ordena@@Base>:
   12968:	push	{r4, r5, fp, lr}
   1296c:	add	fp, sp, #8
   12970:	cmp	r0, #0
   12974:	beq	129e8 <vetor_ordena@@Base+0x80>
   12978:	ldr	ip, [r0]
   1297c:	mov	r1, r0
   12980:	mov	r0, #0
   12984:	cmp	ip, #2
   12988:	poplt	{r4, r5, fp, pc}
   1298c:	ldr	lr, [r1, #8]
   12990:	mov	r1, #1
   12994:	mov	r3, lr
   12998:	ldr	r2, [lr, r1, lsl #2]
   1299c:	mov	r0, #0
   129a0:	ldr	r4, [r3, r0, lsl #2]
   129a4:	cmp	r2, r4
   129a8:	bge	129c8 <vetor_ordena@@Base+0x60>
   129ac:	add	r5, r3, r0, lsl #2
   129b0:	sub	r0, r0, #1
   129b4:	str	r4, [r5, #4]
   129b8:	add	r4, r1, r0
   129bc:	cmp	r4, #0
   129c0:	bgt	129a0 <vetor_ordena@@Base+0x38>
   129c4:	b	129cc <vetor_ordena@@Base+0x64>
   129c8:	add	r4, r1, r0
   129cc:	add	r1, r1, #1
   129d0:	add	r3, r3, #4
   129d4:	str	r2, [lr, r4, lsl #2]
   129d8:	cmp	r1, ip
   129dc:	blt	12998 <vetor_ordena@@Base+0x30>
   129e0:	mov	r0, #0
   129e4:	pop	{r4, r5, fp, pc}
   129e8:	mvn	r0, #0
   129ec:	pop	{r4, r5, fp, pc}

000129f0 <__libc_csu_init@@Base>:
   129f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129f4:	mov	r7, r0
   129f8:	ldr	r6, [pc, #72]	; 12a48 <__libc_csu_init@@Base+0x58>
   129fc:	ldr	r5, [pc, #72]	; 12a4c <__libc_csu_init@@Base+0x5c>
   12a00:	add	r6, pc, r6
   12a04:	add	r5, pc, r5
   12a08:	sub	r6, r6, r5
   12a0c:	mov	r8, r1
   12a10:	mov	r9, r2
   12a14:	bl	110a0 <calloc@plt-0x20>
   12a18:	asrs	r6, r6, #2
   12a1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a20:	mov	r4, #0
   12a24:	add	r4, r4, #1
   12a28:	ldr	r3, [r5], #4
   12a2c:	mov	r2, r9
   12a30:	mov	r1, r8
   12a34:	mov	r0, r7
   12a38:	blx	r3
   12a3c:	cmp	r6, r4
   12a40:	bne	12a24 <__libc_csu_init@@Base+0x34>
   12a44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a48:	andeq	r0, r1, r4, lsl #10
   12a4c:	strdeq	r0, [r1], -ip

00012a50 <__libc_csu_fini@@Base>:
   12a50:	bx	lr

Disassembly of section .fini:

00012a54 <.fini>:
   12a54:	push	{r3, lr}
   12a58:	pop	{r3, pc}
