
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010e68 <.init>:
   10e68:	push	{r3, lr}
   10e6c:	bl	11190 <_start@@Base+0x3c>
   10e70:	pop	{r3, pc}

Disassembly of section .plt:

00010e74 <calloc@plt-0x14>:
   10e74:	push	{lr}		; (str lr, [sp, #-4]!)
   10e78:	ldr	lr, [pc, #4]	; 10e84 <calloc@plt-0x4>
   10e7c:	add	lr, pc, lr
   10e80:	ldr	pc, [lr, #8]!
   10e84:	andeq	r2, r1, ip, ror r1

00010e88 <calloc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #380]!	; 0x17c

00010e94 <strcmp@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #372]!	; 0x174

00010ea0 <printf@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #364]!	; 0x16c

00010eac <__isoc99_fscanf@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #356]!	; 0x164

00010eb8 <fopen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #348]!	; 0x15c

00010ec4 <free@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #340]!	; 0x154

00010ed0 <memcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #332]!	; 0x14c

00010edc <realloc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #324]!	; 0x144

00010ee8 <strcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #316]!	; 0x13c

00010ef4 <puts@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #308]!	; 0x134

00010f00 <malloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #300]!	; 0x12c

00010f0c <__libc_start_main@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #292]!	; 0x124

00010f18 <__gmon_start__@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #284]!	; 0x11c

00010f24 <strlen@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #276]!	; 0x114

00010f30 <putchar@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #268]!	; 0x10c

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #260]!	; 0x104

00010f48 <abort@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #252]!	; 0xfc

Disassembly of section .text:

00010f54 <main@@Base>:
   10f54:	ldr	r1, [pc, #464]	; 1112c <main@@Base+0x1d8>
   10f58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f5c:	strd	r6, [sp, #8]
   10f60:	str	r8, [sp, #16]
   10f64:	str	lr, [sp, #20]
   10f68:	sub	sp, sp, #376	; 0x178
   10f6c:	add	r1, pc, r1
   10f70:	add	r7, sp, #76	; 0x4c
   10f74:	ldr	r0, [pc, #436]	; 11130 <main@@Base+0x1dc>
   10f78:	add	r6, sp, #128	; 0x80
   10f7c:	mov	r8, r7
   10f80:	ldrd	r2, [r1]
   10f84:	ldrd	r4, [r1, #8]
   10f88:	add	r0, pc, r0
   10f8c:	ldr	ip, [r1, #48]	; 0x30
   10f90:	strd	r2, [r7]
   10f94:	ldrd	r2, [r1, #16]
   10f98:	strd	r4, [r7, #8]
   10f9c:	ldrd	r4, [r1, #24]
   10fa0:	strd	r2, [r7, #16]
   10fa4:	ldrd	r2, [r1, #32]
   10fa8:	strd	r4, [r7, #24]
   10fac:	ldrd	r4, [r1, #40]	; 0x28
   10fb0:	strd	r2, [r7, #32]
   10fb4:	str	ip, [r7, #48]	; 0x30
   10fb8:	strd	r4, [r7, #40]	; 0x28
   10fbc:	bl	10ef4 <puts@plt>
   10fc0:	bl	11430 <avl_nova@@Base>
   10fc4:	mov	r4, r0
   10fc8:	mov	r1, r8
   10fcc:	mov	r0, r4
   10fd0:	add	r8, r8, #4
   10fd4:	bl	117d0 <avl_insere@@Base>
   10fd8:	cmp	r6, r8
   10fdc:	bne	10fc8 <main@@Base+0x74>
   10fe0:	ldr	r0, [pc, #332]	; 11134 <main@@Base+0x1e0>
   10fe4:	mov	r6, sp
   10fe8:	ldr	r5, [pc, #328]	; 11138 <main@@Base+0x1e4>
   10fec:	add	r0, pc, r0
   10ff0:	bl	10ea0 <printf@plt>
   10ff4:	ldr	r0, [r4]
   10ff8:	add	r5, pc, r5
   10ffc:	bl	11b90 <avl_imprime@@Base>
   11000:	ldr	r0, [pc, #308]	; 1113c <main@@Base+0x1e8>
   11004:	add	r0, pc, r0
   11008:	bl	10ea0 <printf@plt>
   1100c:	mov	r1, #1
   11010:	mov	r0, r4
   11014:	bl	112e4 <avl_imprime_ord@@Base>
   11018:	ldr	r0, [pc, #288]	; 11140 <main@@Base+0x1ec>
   1101c:	add	r0, pc, r0
   11020:	bl	10ef4 <puts@plt>
   11024:	add	r1, r5, #52	; 0x34
   11028:	mov	r2, #300	; 0x12c
   1102c:	mov	r0, r7
   11030:	bl	10ed0 <memcpy@plt>
   11034:	add	r1, r5, #352	; 0x160
   11038:	mov	r2, #75	; 0x4b
   1103c:	mov	r0, r6
   11040:	bl	10ed0 <memcpy@plt>
   11044:	ldr	r0, [pc, #248]	; 11144 <main@@Base+0x1f0>
   11048:	add	r0, pc, r0
   1104c:	bl	10ef4 <puts@plt>
   11050:	ldr	r1, [pc, #240]	; 11148 <main@@Base+0x1f4>
   11054:	ldr	r0, [pc, #240]	; 1114c <main@@Base+0x1f8>
   11058:	add	r1, pc, r1
   1105c:	add	r0, pc, r0
   11060:	bl	10eb8 <fopen@plt>
   11064:	subs	r8, r0, #0
   11068:	beq	11118 <main@@Base+0x1c4>
   1106c:	bl	11c38 <lista_nova@@Base>
   11070:	mov	r5, r0
   11074:	mov	r1, r7
   11078:	mov	r2, #0
   1107c:	bl	11cf4 <lista_insere@@Base>
   11080:	mov	r2, #0
   11084:	add	r1, sp, #176	; 0xb0
   11088:	mov	r0, r5
   1108c:	bl	11cf4 <lista_insere@@Base>
   11090:	mov	r2, #0
   11094:	add	r1, sp, #276	; 0x114
   11098:	mov	r0, r5
   1109c:	bl	11cf4 <lista_insere@@Base>
   110a0:	bl	11c38 <lista_nova@@Base>
   110a4:	mov	r4, r0
   110a8:	mov	r2, #0
   110ac:	mov	r1, r6
   110b0:	bl	11cf4 <lista_insere@@Base>
   110b4:	mov	r2, #0
   110b8:	add	r1, r6, #25
   110bc:	mov	r0, r4
   110c0:	bl	11cf4 <lista_insere@@Base>
   110c4:	add	r1, r6, #50	; 0x32
   110c8:	mov	r2, #0
   110cc:	mov	r0, r4
   110d0:	bl	11cf4 <lista_insere@@Base>
   110d4:	mov	r2, r4
   110d8:	mov	r1, r5
   110dc:	mov	r0, r8
   110e0:	bl	112f8 <valida_passwds@@Base>
   110e4:	mov	r0, r5
   110e8:	bl	11c6c <lista_apaga@@Base>
   110ec:	mov	r0, r4
   110f0:	bl	11c6c <lista_apaga@@Base>
   110f4:	mov	r0, r8
   110f8:	bl	10f3c <fclose@plt>
   110fc:	mov	r0, #0
   11100:	add	sp, sp, #376	; 0x178
   11104:	ldrd	r4, [sp]
   11108:	ldrd	r6, [sp, #8]
   1110c:	ldr	r8, [sp, #16]
   11110:	add	sp, sp, #20
   11114:	pop	{pc}		; (ldr pc, [sp], #4)
   11118:	ldr	r0, [pc, #48]	; 11150 <main@@Base+0x1fc>
   1111c:	add	r0, pc, r0
   11120:	bl	10ef4 <puts@plt>
   11124:	mvn	r0, #0
   11128:	b	11100 <main@@Base+0x1ac>
   1112c:	ldrdeq	r1, [r0], -r0
   11130:			; <UNDEFINED> instruction: 0x000019b8
   11134:	andeq	r1, r0, r8, ror #18
   11138:	andeq	r1, r0, r4, asr #14
   1113c:	andeq	r1, r0, r4, ror #18
   11140:	andeq	r1, r0, ip, ror #18
   11144:	andeq	r1, r0, r4, asr #18
   11148:	andeq	r1, r0, r8, asr #18
   1114c:	andeq	r1, r0, r8, asr #18
   11150:	muleq	r0, r8, r8

00011154 <_start@@Base>:
   11154:	mov	fp, #0
   11158:	mov	lr, #0
   1115c:	pop	{r1}		; (ldr r1, [sp], #4)
   11160:	mov	r2, sp
   11164:	push	{r2}		; (str r2, [sp, #-4]!)
   11168:	push	{r0}		; (str r0, [sp, #-4]!)
   1116c:	ldr	ip, [pc, #16]	; 11184 <_start@@Base+0x30>
   11170:	push	{ip}		; (str ip, [sp, #-4]!)
   11174:	ldr	r0, [pc, #12]	; 11188 <_start@@Base+0x34>
   11178:	ldr	r3, [pc, #12]	; 1118c <_start@@Base+0x38>
   1117c:	bl	10f0c <__libc_start_main@plt>
   11180:	bl	10f48 <abort@plt>
   11184:	andeq	r2, r1, r4, lsr r7
   11188:	andeq	r0, r1, r4, asr pc
   1118c:	ldrdeq	r2, [r1], -r4
   11190:	ldr	r3, [pc, #20]	; 111ac <_start@@Base+0x58>
   11194:	ldr	r2, [pc, #20]	; 111b0 <_start@@Base+0x5c>
   11198:	add	r3, pc, r3
   1119c:	ldr	r2, [r3, r2]
   111a0:	cmp	r2, #0
   111a4:	bxeq	lr
   111a8:	b	10f18 <__gmon_start__@plt>
   111ac:	andeq	r1, r1, r0, ror #28
   111b0:	andeq	r0, r0, r4, asr r0
   111b4:	ldr	r0, [pc, #24]	; 111d4 <_start@@Base+0x80>
   111b8:	ldr	r3, [pc, #24]	; 111d8 <_start@@Base+0x84>
   111bc:	cmp	r3, r0
   111c0:	bxeq	lr
   111c4:	ldr	r3, [pc, #16]	; 111dc <_start@@Base+0x88>
   111c8:	cmp	r3, #0
   111cc:	bxeq	lr
   111d0:	bx	r3
   111d4:	andeq	r3, r2, r0, rrx
   111d8:	andeq	r3, r2, r0, rrx
   111dc:	andeq	r0, r0, r0
   111e0:	ldr	r0, [pc, #36]	; 1120c <_start@@Base+0xb8>
   111e4:	ldr	r1, [pc, #36]	; 11210 <_start@@Base+0xbc>
   111e8:	sub	r1, r1, r0
   111ec:	asr	r1, r1, #2
   111f0:	add	r1, r1, r1, lsr #31
   111f4:	asrs	r1, r1, #1
   111f8:	bxeq	lr
   111fc:	ldr	r3, [pc, #16]	; 11214 <_start@@Base+0xc0>
   11200:	cmp	r3, #0
   11204:	bxeq	lr
   11208:	bx	r3
   1120c:	andeq	r3, r2, r0, rrx
   11210:	andeq	r3, r2, r0, rrx
   11214:	andeq	r0, r0, r0
   11218:	push	{r4, lr}
   1121c:	ldr	r4, [pc, #24]	; 1123c <_start@@Base+0xe8>
   11220:	ldrb	r3, [r4]
   11224:	cmp	r3, #0
   11228:	popne	{r4, pc}
   1122c:	bl	111b4 <_start@@Base+0x60>
   11230:	mov	r3, #1
   11234:	strb	r3, [r4]
   11238:	pop	{r4, pc}
   1123c:	andeq	r3, r2, r0, rrx
   11240:	b	111e0 <_start@@Base+0x8c>

00011244 <crescente@@Base>:
   11244:	strd	r4, [sp, #-16]!
   11248:	subs	r4, r0, #0
   1124c:	str	r6, [sp, #8]
   11250:	str	lr, [sp, #12]
   11254:	beq	11280 <crescente@@Base+0x3c>
   11258:	ldr	r5, [pc, #48]	; 11290 <crescente@@Base+0x4c>
   1125c:	add	r5, pc, r5
   11260:	ldr	r0, [r4, #4]
   11264:	bl	11244 <crescente@@Base>
   11268:	mov	r0, r5
   1126c:	ldr	r1, [r4]
   11270:	bl	10ea0 <printf@plt>
   11274:	ldr	r4, [r4, #8]
   11278:	cmp	r4, #0
   1127c:	bne	11260 <crescente@@Base+0x1c>
   11280:	ldrd	r4, [sp]
   11284:	ldr	r6, [sp, #8]
   11288:	add	sp, sp, #12
   1128c:	pop	{pc}		; (ldr pc, [sp], #4)
   11290:	andeq	r1, r0, ip, lsl #13

00011294 <decrescente@@Base>:
   11294:	strd	r4, [sp, #-16]!
   11298:	subs	r4, r0, #0
   1129c:	str	r6, [sp, #8]
   112a0:	str	lr, [sp, #12]
   112a4:	beq	112d0 <decrescente@@Base+0x3c>
   112a8:	ldr	r5, [pc, #48]	; 112e0 <decrescente@@Base+0x4c>
   112ac:	add	r5, pc, r5
   112b0:	ldr	r0, [r4, #8]
   112b4:	bl	11294 <decrescente@@Base>
   112b8:	mov	r0, r5
   112bc:	ldr	r1, [r4]
   112c0:	bl	10ea0 <printf@plt>
   112c4:	ldr	r4, [r4, #4]
   112c8:	cmp	r4, #0
   112cc:	bne	112b0 <decrescente@@Base+0x1c>
   112d0:	ldrd	r4, [sp]
   112d4:	ldr	r6, [sp, #8]
   112d8:	add	sp, sp, #12
   112dc:	pop	{pc}		; (ldr pc, [sp], #4)
   112e0:	andeq	r1, r0, ip, lsr r6

000112e4 <avl_imprime_ord@@Base>:
   112e4:	cmp	r1, #0
   112e8:	ldr	r0, [r0]
   112ec:	blt	112f4 <avl_imprime_ord@@Base+0x10>
   112f0:	b	11244 <crescente@@Base>
   112f4:	b	11294 <decrescente@@Base>

000112f8 <valida_passwds@@Base>:
   112f8:	ldr	r3, [pc, #280]	; 11418 <valida_passwds@@Base+0x120>
   112fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11300:	strd	r6, [sp, #8]
   11304:	strd	r8, [sp, #16]
   11308:	mov	r9, r2
   1130c:	mov	r8, r0
   11310:	ldr	r2, [pc, #260]	; 1141c <valida_passwds@@Base+0x124>
   11314:	mov	r0, #10
   11318:	add	r3, pc, r3
   1131c:	str	sl, [sp, #24]
   11320:	mov	sl, r1
   11324:	ldr	r7, [pc, #244]	; 11420 <valida_passwds@@Base+0x128>
   11328:	str	lr, [sp, #28]
   1132c:	sub	sp, sp, #56	; 0x38
   11330:	add	r5, sp, #28
   11334:	mov	r4, sp
   11338:	ldr	r1, [r3, r2]
   1133c:	bl	12038 <tabela_nova@@Base>
   11340:	add	r7, pc, r7
   11344:	mov	r6, r0
   11348:	b	11350 <valida_passwds@@Base+0x58>
   1134c:	bl	12154 <tabela_adiciona@@Base>
   11350:	mov	r2, r4
   11354:	mov	r1, r7
   11358:	mov	r3, r5
   1135c:	mov	r0, r8
   11360:	bl	10eac <__isoc99_fscanf@plt>
   11364:	cmp	r0, #2
   11368:	mov	r2, r5
   1136c:	mov	r1, r4
   11370:	mov	r0, r6
   11374:	beq	1134c <valida_passwds@@Base+0x54>
   11378:	ldr	r5, [r9]
   1137c:	ldr	r4, [sl]
   11380:	cmp	r4, #0
   11384:	cmpne	r5, #0
   11388:	beq	113ec <valida_passwds@@Base+0xf4>
   1138c:	ldr	r8, [pc, #144]	; 11424 <valida_passwds@@Base+0x12c>
   11390:	ldr	r7, [pc, #144]	; 11428 <valida_passwds@@Base+0x130>
   11394:	ldr	r9, [pc, #144]	; 1142c <valida_passwds@@Base+0x134>
   11398:	add	r8, pc, r8
   1139c:	add	r7, pc, r7
   113a0:	add	r9, pc, r9
   113a4:	mov	r0, r8
   113a8:	ldr	r2, [r5]
   113ac:	ldr	r1, [r4]
   113b0:	bl	10ea0 <printf@plt>
   113b4:	mov	r0, r6
   113b8:	ldr	r1, [r4]
   113bc:	bl	1231c <tabela_valor@@Base>
   113c0:	ldr	r1, [r5]
   113c4:	bl	10e94 <strcmp@plt>
   113c8:	cmp	r0, #0
   113cc:	mov	r0, r7
   113d0:	moveq	r0, r9
   113d4:	bl	10ef4 <puts@plt>
   113d8:	ldr	r4, [r4, #4]
   113dc:	ldr	r5, [r5, #4]
   113e0:	cmp	r4, #0
   113e4:	cmpne	r5, #0
   113e8:	bne	113a4 <valida_passwds@@Base+0xac>
   113ec:	mov	r0, r6
   113f0:	bl	123dc <tabela_esvazia@@Base>
   113f4:	mov	r0, r6
   113f8:	bl	10ec4 <free@plt>
   113fc:	add	sp, sp, #56	; 0x38
   11400:	ldrd	r4, [sp]
   11404:	ldrd	r6, [sp, #8]
   11408:	ldrd	r8, [sp, #16]
   1140c:	ldr	sl, [sp, #24]
   11410:	add	sp, sp, #28
   11414:	pop	{pc}		; (ldr pc, [sp], #4)
   11418:	andeq	r1, r1, r0, ror #25
   1141c:	andeq	r0, r0, r0, asr r0
   11420:	andeq	r1, r0, ip, lsr #11
   11424:	andeq	r1, r0, ip, asr r5
   11428:	andeq	r1, r0, ip, lsl #11
   1142c:	andeq	r1, r0, ip, ror #10

00011430 <avl_nova@@Base>:
   11430:	mov	r0, #4
   11434:	str	r4, [sp, #-8]!
   11438:	str	lr, [sp, #4]
   1143c:	bl	10f00 <malloc@plt>
   11440:	cmp	r0, #0
   11444:	ldr	r4, [sp]
   11448:	add	sp, sp, #4
   1144c:	movne	r3, #0
   11450:	strne	r3, [r0]
   11454:	pop	{pc}		; (ldr pc, [sp], #4)

00011458 <avl_altura@@Base>:
   11458:	cmp	r0, #0
   1145c:	ldrne	r0, [r0, #12]
   11460:	mvneq	r0, #0
   11464:	bx	lr

00011468 <max@@Base>:
   11468:	cmp	r1, r0
   1146c:	movge	r0, r1
   11470:	bx	lr

00011474 <avl_novo_no@@Base>:
   11474:	strd	r4, [sp, #-16]!
   11478:	mov	r5, r0
   1147c:	mov	r0, #16
   11480:	str	r6, [sp, #8]
   11484:	str	lr, [sp, #12]
   11488:	bl	10f00 <malloc@plt>
   1148c:	mov	r4, r0
   11490:	mov	r0, r5
   11494:	bl	10f24 <strlen@plt>
   11498:	add	r6, r0, #1
   1149c:	mov	r0, r6
   114a0:	bl	10f00 <malloc@plt>
   114a4:	mov	r2, r6
   114a8:	mov	r1, r5
   114ac:	str	r0, [r4]
   114b0:	bl	10ed0 <memcpy@plt>
   114b4:	mov	r3, #0
   114b8:	mov	r0, r4
   114bc:	ldr	r6, [sp, #8]
   114c0:	str	r3, [r4, #4]
   114c4:	str	r3, [r4, #8]
   114c8:	str	r3, [r4, #12]
   114cc:	ldrd	r4, [sp]
   114d0:	add	sp, sp, #12
   114d4:	pop	{pc}		; (ldr pc, [sp], #4)

000114d8 <roda_direita@@Base>:
   114d8:	strd	r4, [sp, #-16]!
   114dc:	mov	r5, r0
   114e0:	ldr	r4, [r0, #4]
   114e4:	ldr	r3, [r4, #8]
   114e8:	str	r6, [sp, #8]
   114ec:	str	lr, [sp, #12]
   114f0:	str	r5, [r4, #8]
   114f4:	mov	r0, r3
   114f8:	str	r3, [r5, #4]
   114fc:	bl	11458 <avl_altura@@Base>
   11500:	mov	r6, r0
   11504:	ldr	r0, [r5, #8]
   11508:	bl	11458 <avl_altura@@Base>
   1150c:	mov	r1, r0
   11510:	mov	r0, r6
   11514:	bl	11468 <max@@Base>
   11518:	add	r3, r0, #1
   1151c:	ldr	r0, [r4, #4]
   11520:	str	r3, [r5, #12]
   11524:	bl	11458 <avl_altura@@Base>
   11528:	mov	r5, r0
   1152c:	ldr	r0, [r4, #8]
   11530:	bl	11458 <avl_altura@@Base>
   11534:	mov	r1, r0
   11538:	mov	r0, r5
   1153c:	bl	11468 <max@@Base>
   11540:	add	r3, r0, #1
   11544:	mov	r0, r4
   11548:	ldr	r6, [sp, #8]
   1154c:	str	r3, [r4, #12]
   11550:	ldrd	r4, [sp]
   11554:	add	sp, sp, #12
   11558:	pop	{pc}		; (ldr pc, [sp], #4)

0001155c <roda_esquerda@@Base>:
   1155c:	strd	r4, [sp, #-16]!
   11560:	mov	r5, r0
   11564:	ldr	r4, [r0, #8]
   11568:	ldr	r3, [r4, #4]
   1156c:	str	r6, [sp, #8]
   11570:	str	lr, [sp, #12]
   11574:	str	r0, [r4, #4]
   11578:	str	r3, [r0, #8]
   1157c:	ldr	r0, [r0, #4]
   11580:	bl	11458 <avl_altura@@Base>
   11584:	mov	r6, r0
   11588:	ldr	r0, [r5, #8]
   1158c:	bl	11458 <avl_altura@@Base>
   11590:	mov	r1, r0
   11594:	mov	r0, r6
   11598:	bl	11468 <max@@Base>
   1159c:	add	r3, r0, #1
   115a0:	ldr	r0, [r4, #4]
   115a4:	str	r3, [r5, #12]
   115a8:	bl	11458 <avl_altura@@Base>
   115ac:	mov	r5, r0
   115b0:	ldr	r0, [r4, #8]
   115b4:	bl	11458 <avl_altura@@Base>
   115b8:	mov	r1, r0
   115bc:	mov	r0, r5
   115c0:	bl	11468 <max@@Base>
   115c4:	add	r3, r0, #1
   115c8:	mov	r0, r4
   115cc:	ldr	r6, [sp, #8]
   115d0:	str	r3, [r4, #12]
   115d4:	ldrd	r4, [sp]
   115d8:	add	sp, sp, #12
   115dc:	pop	{pc}		; (ldr pc, [sp], #4)

000115e0 <calc_balanceamento@@Base>:
   115e0:	strd	r4, [sp, #-16]!
   115e4:	subs	r4, r0, #0
   115e8:	moveq	r0, r4
   115ec:	str	r6, [sp, #8]
   115f0:	str	lr, [sp, #12]
   115f4:	beq	11610 <calc_balanceamento@@Base+0x30>
   115f8:	ldr	r0, [r4, #8]
   115fc:	bl	11458 <avl_altura@@Base>
   11600:	mov	r5, r0
   11604:	ldr	r0, [r4, #4]
   11608:	bl	11458 <avl_altura@@Base>
   1160c:	sub	r0, r5, r0
   11610:	ldrd	r4, [sp]
   11614:	ldr	r6, [sp, #8]
   11618:	add	sp, sp, #12
   1161c:	pop	{pc}		; (ldr pc, [sp], #4)

00011620 <avl_pesquisa_impl@@Base>:
   11620:	strd	r4, [sp, #-16]!
   11624:	subs	r4, r0, #0
   11628:	movne	r5, r1
   1162c:	str	r6, [sp, #8]
   11630:	str	lr, [sp, #12]
   11634:	bne	1164c <avl_pesquisa_impl@@Base+0x2c>
   11638:	b	1166c <avl_pesquisa_impl@@Base+0x4c>
   1163c:	beq	1166c <avl_pesquisa_impl@@Base+0x4c>
   11640:	ldr	r4, [r4, #8]
   11644:	cmp	r4, #0
   11648:	beq	1166c <avl_pesquisa_impl@@Base+0x4c>
   1164c:	mov	r0, r5
   11650:	ldr	r1, [r4]
   11654:	bl	10e94 <strcmp@plt>
   11658:	cmp	r0, #0
   1165c:	bge	1163c <avl_pesquisa_impl@@Base+0x1c>
   11660:	ldr	r4, [r4, #4]
   11664:	cmp	r4, #0
   11668:	bne	1164c <avl_pesquisa_impl@@Base+0x2c>
   1166c:	mov	r0, r4
   11670:	ldrd	r4, [sp]
   11674:	ldr	r6, [sp, #8]
   11678:	add	sp, sp, #12
   1167c:	pop	{pc}		; (ldr pc, [sp], #4)

00011680 <avl_pesquisa@@Base>:
   11680:	cmp	r1, #0
   11684:	cmpne	r0, #0
   11688:	beq	11694 <avl_pesquisa@@Base+0x14>
   1168c:	ldr	r0, [r0]
   11690:	b	11620 <avl_pesquisa_impl@@Base>
   11694:	mov	r0, #0
   11698:	bx	lr

0001169c <avl_insere_impl@@Base>:
   1169c:	strd	r4, [sp, #-16]!
   116a0:	subs	r4, r0, #0
   116a4:	str	r6, [sp, #8]
   116a8:	str	lr, [sp, #12]
   116ac:	beq	117b8 <avl_insere_impl@@Base+0x11c>
   116b0:	mov	r0, r1
   116b4:	mov	r5, r1
   116b8:	ldr	r1, [r4]
   116bc:	bl	10e94 <strcmp@plt>
   116c0:	cmp	r0, #0
   116c4:	blt	1175c <avl_insere_impl@@Base+0xc0>
   116c8:	beq	11720 <avl_insere_impl@@Base+0x84>
   116cc:	mov	r1, r5
   116d0:	ldr	r0, [r4, #8]
   116d4:	bl	1169c <avl_insere_impl@@Base>
   116d8:	ldr	r3, [r4, #4]
   116dc:	str	r0, [r4, #8]
   116e0:	mov	r0, r3
   116e4:	bl	11458 <avl_altura@@Base>
   116e8:	mov	r5, r0
   116ec:	ldr	r0, [r4, #8]
   116f0:	bl	11458 <avl_altura@@Base>
   116f4:	mov	r1, r0
   116f8:	mov	r0, r5
   116fc:	bl	11468 <max@@Base>
   11700:	add	r3, r0, #1
   11704:	mov	r0, r4
   11708:	str	r3, [r4, #12]
   1170c:	bl	115e0 <calc_balanceamento@@Base>
   11710:	cmp	r0, #1
   11714:	bgt	11734 <avl_insere_impl@@Base+0x98>
   11718:	cmn	r0, #1
   1171c:	blt	11784 <avl_insere_impl@@Base+0xe8>
   11720:	mov	r0, r4
   11724:	ldrd	r4, [sp]
   11728:	ldr	r6, [sp, #8]
   1172c:	add	sp, sp, #12
   11730:	pop	{pc}		; (ldr pc, [sp], #4)
   11734:	ldr	r0, [r4, #8]
   11738:	bl	115e0 <calc_balanceamento@@Base>
   1173c:	cmp	r0, #0
   11740:	blt	11774 <avl_insere_impl@@Base+0xd8>
   11744:	mov	r0, r4
   11748:	ldrd	r4, [sp]
   1174c:	ldr	r6, [sp, #8]
   11750:	ldr	lr, [sp, #12]
   11754:	add	sp, sp, #16
   11758:	b	1155c <roda_esquerda@@Base>
   1175c:	mov	r1, r5
   11760:	ldr	r0, [r4, #4]
   11764:	bl	1169c <avl_insere_impl@@Base>
   11768:	mov	r3, r0
   1176c:	str	r0, [r4, #4]
   11770:	b	116e0 <avl_insere_impl@@Base+0x44>
   11774:	ldr	r0, [r4, #8]
   11778:	bl	114d8 <roda_direita@@Base>
   1177c:	str	r0, [r4, #8]
   11780:	b	11744 <avl_insere_impl@@Base+0xa8>
   11784:	ldr	r0, [r4, #4]
   11788:	bl	115e0 <calc_balanceamento@@Base>
   1178c:	cmp	r0, #0
   11790:	ble	117a0 <avl_insere_impl@@Base+0x104>
   11794:	ldr	r0, [r4, #4]
   11798:	bl	1155c <roda_esquerda@@Base>
   1179c:	str	r0, [r4, #4]
   117a0:	mov	r0, r4
   117a4:	ldrd	r4, [sp]
   117a8:	ldr	r6, [sp, #8]
   117ac:	ldr	lr, [sp, #12]
   117b0:	add	sp, sp, #16
   117b4:	b	114d8 <roda_direita@@Base>
   117b8:	mov	r0, r1
   117bc:	ldrd	r4, [sp]
   117c0:	ldr	r6, [sp, #8]
   117c4:	ldr	lr, [sp, #12]
   117c8:	add	sp, sp, #16
   117cc:	b	11474 <avl_novo_no@@Base>

000117d0 <avl_insere@@Base>:
   117d0:	clz	r3, r1
   117d4:	cmp	r0, #0
   117d8:	strd	r4, [sp, #-16]!
   117dc:	lsr	r3, r3, #5
   117e0:	moveq	r4, #1
   117e4:	str	r6, [sp, #8]
   117e8:	str	lr, [sp, #12]
   117ec:	movne	r4, r3
   117f0:	cmp	r4, #0
   117f4:	bne	1181c <avl_insere@@Base+0x4c>
   117f8:	mov	r5, r0
   117fc:	ldr	r0, [r0]
   11800:	bl	1169c <avl_insere_impl@@Base>
   11804:	str	r0, [r5]
   11808:	mov	r0, r4
   1180c:	ldrd	r4, [sp]
   11810:	ldr	r6, [sp, #8]
   11814:	add	sp, sp, #12
   11818:	pop	{pc}		; (ldr pc, [sp], #4)
   1181c:	mvn	r4, #0
   11820:	b	11808 <avl_insere@@Base+0x38>

00011824 <avl_no_valormin@@Base>:
   11824:	b	1182c <avl_no_valormin@@Base+0x8>
   11828:	mov	r0, r3
   1182c:	ldr	r3, [r0, #4]
   11830:	cmp	r3, #0
   11834:	bne	11828 <avl_no_valormin@@Base+0x4>
   11838:	bx	lr

0001183c <avl_min@@Base>:
   1183c:	subs	r3, r0, #0
   11840:	beq	11860 <avl_min@@Base+0x24>
   11844:	str	r4, [sp, #-8]!
   11848:	str	lr, [sp, #4]
   1184c:	bl	11824 <avl_no_valormin@@Base>
   11850:	ldr	r4, [sp]
   11854:	add	sp, sp, #4
   11858:	ldr	r0, [r0]
   1185c:	pop	{pc}		; (ldr pc, [sp], #4)
   11860:	mov	r0, r3
   11864:	bx	lr

00011868 <avl_no_valormax@@Base>:
   11868:	b	11870 <avl_no_valormax@@Base+0x8>
   1186c:	mov	r0, r3
   11870:	ldr	r3, [r0, #8]
   11874:	cmp	r3, #0
   11878:	bne	1186c <avl_no_valormax@@Base+0x4>
   1187c:	bx	lr

00011880 <avl_max@@Base>:
   11880:	subs	r3, r0, #0
   11884:	beq	118a4 <avl_max@@Base+0x24>
   11888:	str	r4, [sp, #-8]!
   1188c:	str	lr, [sp, #4]
   11890:	bl	11868 <avl_no_valormax@@Base>
   11894:	ldr	r4, [sp]
   11898:	add	sp, sp, #4
   1189c:	ldr	r0, [r0]
   118a0:	pop	{pc}		; (ldr pc, [sp], #4)
   118a4:	mov	r0, r3
   118a8:	bx	lr

000118ac <avl_remove_impl@@Base>:
   118ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   118b0:	subs	r4, r0, #0
   118b4:	strd	r6, [sp, #8]
   118b8:	str	r8, [sp, #16]
   118bc:	str	lr, [sp, #20]
   118c0:	beq	11990 <avl_remove_impl@@Base+0xe4>
   118c4:	ldr	r7, [r4]
   118c8:	mov	r0, r1
   118cc:	mov	r6, r1
   118d0:	mov	r1, r7
   118d4:	bl	10e94 <strcmp@plt>
   118d8:	cmp	r0, #0
   118dc:	blt	119d8 <avl_remove_impl@@Base+0x12c>
   118e0:	ldr	r5, [r4, #8]
   118e4:	bne	11940 <avl_remove_impl@@Base+0x94>
   118e8:	ldr	r6, [r4, #4]
   118ec:	cmp	r6, #0
   118f0:	beq	11a40 <avl_remove_impl@@Base+0x194>
   118f4:	cmp	r5, #0
   118f8:	beq	11a00 <avl_remove_impl@@Base+0x154>
   118fc:	mov	r0, r5
   11900:	bl	11824 <avl_no_valormin@@Base>
   11904:	mov	r5, r0
   11908:	ldr	r0, [r0]
   1190c:	bl	10f24 <strlen@plt>
   11910:	add	r1, r0, #1
   11914:	ldr	r0, [r4]
   11918:	bl	10edc <realloc@plt>
   1191c:	str	r0, [r4]
   11920:	ldr	r1, [r5]
   11924:	bl	10ee8 <strcpy@plt>
   11928:	ldr	r1, [r5]
   1192c:	ldr	r0, [r4, #8]
   11930:	bl	118ac <avl_remove_impl@@Base>
   11934:	str	r0, [r4, #8]
   11938:	ldr	r0, [r4, #4]
   1193c:	b	11954 <avl_remove_impl@@Base+0xa8>
   11940:	mov	r1, r6
   11944:	mov	r0, r5
   11948:	bl	118ac <avl_remove_impl@@Base>
   1194c:	str	r0, [r4, #8]
   11950:	ldr	r0, [r4, #4]
   11954:	bl	11458 <avl_altura@@Base>
   11958:	mov	r5, r0
   1195c:	ldr	r0, [r4, #8]
   11960:	bl	11458 <avl_altura@@Base>
   11964:	mov	r1, r0
   11968:	mov	r0, r5
   1196c:	bl	11468 <max@@Base>
   11970:	add	r3, r0, #1
   11974:	mov	r0, r4
   11978:	str	r3, [r4, #12]
   1197c:	bl	115e0 <calc_balanceamento@@Base>
   11980:	cmp	r0, #1
   11984:	bgt	119ac <avl_remove_impl@@Base+0x100>
   11988:	cmn	r0, #1
   1198c:	blt	11a5c <avl_remove_impl@@Base+0x1b0>
   11990:	mov	r5, r4
   11994:	mov	r0, r5
   11998:	ldrd	r4, [sp]
   1199c:	ldrd	r6, [sp, #8]
   119a0:	ldr	r8, [sp, #16]
   119a4:	add	sp, sp, #20
   119a8:	pop	{pc}		; (ldr pc, [sp], #4)
   119ac:	ldr	r0, [r4, #8]
   119b0:	bl	115e0 <calc_balanceamento@@Base>
   119b4:	cmp	r0, #0
   119b8:	blt	119ec <avl_remove_impl@@Base+0x140>
   119bc:	mov	r0, r4
   119c0:	ldrd	r4, [sp]
   119c4:	ldrd	r6, [sp, #8]
   119c8:	ldr	r8, [sp, #16]
   119cc:	ldr	lr, [sp, #20]
   119d0:	add	sp, sp, #24
   119d4:	b	1155c <roda_esquerda@@Base>
   119d8:	mov	r1, r6
   119dc:	ldr	r0, [r4, #4]
   119e0:	bl	118ac <avl_remove_impl@@Base>
   119e4:	str	r0, [r4, #4]
   119e8:	b	11954 <avl_remove_impl@@Base+0xa8>
   119ec:	ldr	r0, [r4, #8]
   119f0:	bl	114d8 <roda_direita@@Base>
   119f4:	str	r0, [r4, #8]
   119f8:	b	119bc <avl_remove_impl@@Base+0x110>
   119fc:	mov	r6, r5
   11a00:	ldr	r0, [r6]
   11a04:	bl	10f24 <strlen@plt>
   11a08:	add	r1, r0, #1
   11a0c:	mov	r0, r7
   11a10:	bl	10edc <realloc@plt>
   11a14:	str	r0, [r4]
   11a18:	ldr	r1, [r6]
   11a1c:	bl	10ee8 <strcpy@plt>
   11a20:	ldrd	r0, [r6]
   11a24:	ldrd	r2, [r6, #8]
   11a28:	stmib	r4, {r1, r2, r3}
   11a2c:	bl	10ec4 <free@plt>
   11a30:	mov	r0, r6
   11a34:	bl	10ec4 <free@plt>
   11a38:	ldr	r0, [r4, #4]
   11a3c:	b	11954 <avl_remove_impl@@Base+0xa8>
   11a40:	cmp	r5, #0
   11a44:	bne	119fc <avl_remove_impl@@Base+0x150>
   11a48:	mov	r0, r7
   11a4c:	bl	10ec4 <free@plt>
   11a50:	mov	r0, r4
   11a54:	bl	10ec4 <free@plt>
   11a58:	b	11994 <avl_remove_impl@@Base+0xe8>
   11a5c:	ldr	r0, [r4, #4]
   11a60:	bl	115e0 <calc_balanceamento@@Base>
   11a64:	cmp	r0, #0
   11a68:	ble	11a78 <avl_remove_impl@@Base+0x1cc>
   11a6c:	ldr	r0, [r4, #4]
   11a70:	bl	1155c <roda_esquerda@@Base>
   11a74:	str	r0, [r4, #4]
   11a78:	mov	r0, r4
   11a7c:	ldrd	r4, [sp]
   11a80:	ldrd	r6, [sp, #8]
   11a84:	ldr	r8, [sp, #16]
   11a88:	ldr	lr, [sp, #20]
   11a8c:	add	sp, sp, #24
   11a90:	b	114d8 <roda_direita@@Base>

00011a94 <avl_apaga@@Base>:
   11a94:	str	r4, [sp, #-8]!
   11a98:	subs	r4, r0, #0
   11a9c:	str	lr, [sp, #4]
   11aa0:	beq	11ae0 <avl_apaga@@Base+0x4c>
   11aa4:	ldr	r3, [r4]
   11aa8:	cmp	r3, #0
   11aac:	beq	11acc <avl_apaga@@Base+0x38>
   11ab0:	mov	r0, r3
   11ab4:	ldr	r1, [r3]
   11ab8:	bl	118ac <avl_remove_impl@@Base>
   11abc:	cmp	r0, #0
   11ac0:	mov	r3, r0
   11ac4:	str	r0, [r4]
   11ac8:	bne	11ab0 <avl_apaga@@Base+0x1c>
   11acc:	mov	r0, r4
   11ad0:	ldr	r4, [sp]
   11ad4:	ldr	lr, [sp, #4]
   11ad8:	add	sp, sp, #8
   11adc:	b	10ec4 <free@plt>
   11ae0:	ldr	r4, [sp]
   11ae4:	add	sp, sp, #4
   11ae8:	pop	{pc}		; (ldr pc, [sp], #4)

00011aec <avl_remove@@Base>:
   11aec:	clz	r3, r1
   11af0:	cmp	r0, #0
   11af4:	strd	r4, [sp, #-16]!
   11af8:	lsr	r3, r3, #5
   11afc:	moveq	r4, #1
   11b00:	str	r6, [sp, #8]
   11b04:	str	lr, [sp, #12]
   11b08:	movne	r4, r3
   11b0c:	cmp	r4, #0
   11b10:	bne	11b38 <avl_remove@@Base+0x4c>
   11b14:	mov	r5, r0
   11b18:	ldr	r0, [r0]
   11b1c:	bl	118ac <avl_remove_impl@@Base>
   11b20:	str	r0, [r5]
   11b24:	mov	r0, r4
   11b28:	ldrd	r4, [sp]
   11b2c:	ldr	r6, [sp, #8]
   11b30:	add	sp, sp, #12
   11b34:	pop	{pc}		; (ldr pc, [sp], #4)
   11b38:	mvn	r4, #0
   11b3c:	b	11b24 <avl_remove@@Base+0x38>

00011b40 <avl_preordem_impl@@Base>:
   11b40:	strd	r4, [sp, #-16]!
   11b44:	subs	r4, r0, #0
   11b48:	str	r6, [sp, #8]
   11b4c:	str	lr, [sp, #12]
   11b50:	beq	11b7c <avl_preordem_impl@@Base+0x3c>
   11b54:	ldr	r5, [pc, #48]	; 11b8c <avl_preordem_impl@@Base+0x4c>
   11b58:	add	r5, pc, r5
   11b5c:	mov	r0, r5
   11b60:	ldr	r1, [r4]
   11b64:	bl	10ea0 <printf@plt>
   11b68:	ldr	r0, [r4, #4]
   11b6c:	bl	11b40 <avl_preordem_impl@@Base>
   11b70:	ldr	r4, [r4, #8]
   11b74:	cmp	r4, #0
   11b78:	bne	11b5c <avl_preordem_impl@@Base+0x1c>
   11b7c:	ldrd	r4, [sp]
   11b80:	ldr	r6, [sp, #8]
   11b84:	add	sp, sp, #12
   11b88:	pop	{pc}		; (ldr pc, [sp], #4)
   11b8c:	muleq	r0, r0, sp

00011b90 <avl_imprime@@Base>:
   11b90:	cmp	r0, #0
   11b94:	bxeq	lr
   11b98:	str	r4, [sp, #-8]!
   11b9c:	str	lr, [sp, #4]
   11ba0:	bl	11b40 <avl_preordem_impl@@Base>
   11ba4:	mov	r0, #10
   11ba8:	ldr	r4, [sp]
   11bac:	ldr	lr, [sp, #4]
   11bb0:	add	sp, sp, #8
   11bb4:	b	10f30 <putchar@plt>

00011bb8 <novo_str@@Base>:
   11bb8:	strd	r4, [sp, #-16]!
   11bbc:	mov	r5, r0
   11bc0:	mov	r0, #12
   11bc4:	str	r6, [sp, #8]
   11bc8:	str	lr, [sp, #12]
   11bcc:	bl	10f00 <malloc@plt>
   11bd0:	subs	r4, r0, #0
   11bd4:	beq	11c14 <novo_str@@Base+0x5c>
   11bd8:	mov	r0, r5
   11bdc:	bl	10f24 <strlen@plt>
   11be0:	add	r6, r0, #1
   11be4:	mov	r0, r6
   11be8:	bl	10f00 <malloc@plt>
   11bec:	cmp	r0, #0
   11bf0:	mov	r3, r0
   11bf4:	str	r0, [r4]
   11bf8:	beq	11c28 <novo_str@@Base+0x70>
   11bfc:	mov	r2, r6
   11c00:	mov	r1, r5
   11c04:	bl	10ed0 <memcpy@plt>
   11c08:	mov	r3, #0
   11c0c:	str	r3, [r4, #4]
   11c10:	str	r3, [r4, #8]
   11c14:	mov	r0, r4
   11c18:	ldrd	r4, [sp]
   11c1c:	ldr	r6, [sp, #8]
   11c20:	add	sp, sp, #12
   11c24:	pop	{pc}		; (ldr pc, [sp], #4)
   11c28:	mov	r0, r4
   11c2c:	mov	r4, r3
   11c30:	bl	10ec4 <free@plt>
   11c34:	b	11c14 <novo_str@@Base+0x5c>

00011c38 <lista_nova@@Base>:
   11c38:	mov	r0, #12
   11c3c:	str	r4, [sp, #-8]!
   11c40:	str	lr, [sp, #4]
   11c44:	bl	10f00 <malloc@plt>
   11c48:	cmp	r0, #0
   11c4c:	beq	11c60 <lista_nova@@Base+0x28>
   11c50:	mov	r3, #0
   11c54:	str	r3, [r0]
   11c58:	str	r3, [r0, #4]
   11c5c:	str	r3, [r0, #8]
   11c60:	ldr	r4, [sp]
   11c64:	add	sp, sp, #4
   11c68:	pop	{pc}		; (ldr pc, [sp], #4)

00011c6c <lista_apaga@@Base>:
   11c6c:	strd	r4, [sp, #-16]!
   11c70:	subs	r5, r0, #0
   11c74:	str	r6, [sp, #8]
   11c78:	str	lr, [sp, #12]
   11c7c:	bne	11c98 <lista_apaga@@Base+0x2c>
   11c80:	b	11cbc <lista_apaga@@Base+0x50>
   11c84:	ldm	r4, {r0, r3}
   11c88:	str	r3, [r5]
   11c8c:	bl	10ec4 <free@plt>
   11c90:	mov	r0, r4
   11c94:	bl	10ec4 <free@plt>
   11c98:	ldr	r4, [r5]
   11c9c:	cmp	r4, #0
   11ca0:	bne	11c84 <lista_apaga@@Base+0x18>
   11ca4:	mov	r0, r5
   11ca8:	ldrd	r4, [sp]
   11cac:	ldr	r6, [sp, #8]
   11cb0:	ldr	lr, [sp, #12]
   11cb4:	add	sp, sp, #16
   11cb8:	b	10ec4 <free@plt>
   11cbc:	ldrd	r4, [sp]
   11cc0:	ldr	r6, [sp, #8]
   11cc4:	add	sp, sp, #12
   11cc8:	pop	{pc}		; (ldr pc, [sp], #4)

00011ccc <lista_tamanho@@Base>:
   11ccc:	cmp	r0, #0
   11cd0:	ldrne	r0, [r0, #8]
   11cd4:	mvneq	r0, #0
   11cd8:	bx	lr

00011cdc <lista_inicio@@Base>:
   11cdc:	cmp	r0, #0
   11ce0:	ldrne	r0, [r0]
   11ce4:	bx	lr

00011ce8 <lista_fim@@Base>:
   11ce8:	cmp	r0, #0
   11cec:	ldrne	r0, [r0, #4]
   11cf0:	bx	lr

00011cf4 <lista_insere@@Base>:
   11cf4:	cmp	r1, #0
   11cf8:	cmpne	r0, #0
   11cfc:	beq	11db4 <lista_insere@@Base+0xc0>
   11d00:	strd	r4, [sp, #-16]!
   11d04:	mov	r5, r0
   11d08:	mov	r0, r1
   11d0c:	mov	r4, r2
   11d10:	str	r6, [sp, #8]
   11d14:	str	lr, [sp, #12]
   11d18:	bl	11bb8 <novo_str@@Base>
   11d1c:	cmp	r0, #0
   11d20:	beq	11d78 <lista_insere@@Base+0x84>
   11d24:	cmp	r4, #0
   11d28:	ldr	r2, [r5]
   11d2c:	ldr	r3, [r5, #8]
   11d30:	add	r3, r3, #1
   11d34:	str	r3, [r5, #8]
   11d38:	beq	11d8c <lista_insere@@Base+0x98>
   11d3c:	cmp	r4, r2
   11d40:	streq	r4, [r0, #4]
   11d44:	streq	r0, [r4, #8]
   11d48:	streq	r0, [r5]
   11d4c:	beq	11d68 <lista_insere@@Base+0x74>
   11d50:	ldr	r3, [r4, #8]
   11d54:	str	r4, [r0, #4]
   11d58:	str	r3, [r0, #8]
   11d5c:	ldr	r3, [r4, #8]
   11d60:	str	r0, [r3, #4]
   11d64:	str	r0, [r4, #8]
   11d68:	ldrd	r4, [sp]
   11d6c:	ldr	r6, [sp, #8]
   11d70:	add	sp, sp, #12
   11d74:	pop	{pc}		; (ldr pc, [sp], #4)
   11d78:	ldrd	r4, [sp]
   11d7c:	mov	r0, #0
   11d80:	ldr	r6, [sp, #8]
   11d84:	add	sp, sp, #12
   11d88:	pop	{pc}		; (ldr pc, [sp], #4)
   11d8c:	cmp	r2, #0
   11d90:	ldr	r6, [sp, #8]
   11d94:	ldrne	r3, [r5, #4]
   11d98:	streq	r0, [r5]
   11d9c:	strne	r3, [r0, #8]
   11da0:	strne	r0, [r3, #4]
   11da4:	str	r0, [r5, #4]
   11da8:	ldrd	r4, [sp]
   11dac:	add	sp, sp, #12
   11db0:	pop	{pc}		; (ldr pc, [sp], #4)
   11db4:	mov	r0, #0
   11db8:	bx	lr

00011dbc <lista_remove@@Base>:
   11dbc:	cmp	r1, #0
   11dc0:	cmpne	r0, #0
   11dc4:	strd	r4, [sp, #-16]!
   11dc8:	moveq	r5, #0
   11dcc:	str	r6, [sp, #8]
   11dd0:	str	lr, [sp, #12]
   11dd4:	beq	11e1c <lista_remove@@Base+0x60>
   11dd8:	ldr	r3, [r0, #8]
   11ddc:	mov	r4, r1
   11de0:	ldr	r2, [r1, #8]
   11de4:	ldr	r5, [r1, #4]
   11de8:	sub	r3, r3, #1
   11dec:	cmp	r2, #0
   11df0:	str	r3, [r0, #8]
   11df4:	strne	r5, [r2, #4]
   11df8:	ldrne	r5, [r1, #4]
   11dfc:	streq	r5, [r0]
   11e00:	cmp	r5, #0
   11e04:	streq	r2, [r0, #4]
   11e08:	strne	r2, [r5, #8]
   11e0c:	ldr	r0, [r1]
   11e10:	bl	10ec4 <free@plt>
   11e14:	mov	r0, r4
   11e18:	bl	10ec4 <free@plt>
   11e1c:	mov	r0, r5
   11e20:	ldrd	r4, [sp]
   11e24:	ldr	r6, [sp, #8]
   11e28:	add	sp, sp, #12
   11e2c:	pop	{pc}		; (ldr pc, [sp], #4)

00011e30 <lista_pesquisa@@Base>:
   11e30:	strd	r4, [sp, #-16]!
   11e34:	clz	r4, r1
   11e38:	cmp	r0, #0
   11e3c:	lsr	r4, r4, #5
   11e40:	moveq	r4, #1
   11e44:	str	r6, [sp, #8]
   11e48:	str	lr, [sp, #12]
   11e4c:	cmp	r4, #0
   11e50:	movne	r4, #0
   11e54:	bne	11e9c <lista_pesquisa@@Base+0x6c>
   11e58:	cmp	r2, #1
   11e5c:	bhi	11e9c <lista_pesquisa@@Base+0x6c>
   11e60:	cmp	r2, #0
   11e64:	mov	r5, r1
   11e68:	bne	11eb0 <lista_pesquisa@@Base+0x80>
   11e6c:	ldr	r4, [r0]
   11e70:	cmp	r4, #0
   11e74:	bne	11e88 <lista_pesquisa@@Base+0x58>
   11e78:	b	11e9c <lista_pesquisa@@Base+0x6c>
   11e7c:	ldr	r4, [r4, #4]
   11e80:	cmp	r4, #0
   11e84:	beq	11e9c <lista_pesquisa@@Base+0x6c>
   11e88:	mov	r1, r5
   11e8c:	ldr	r0, [r4]
   11e90:	bl	10e94 <strcmp@plt>
   11e94:	cmp	r0, #0
   11e98:	bne	11e7c <lista_pesquisa@@Base+0x4c>
   11e9c:	mov	r0, r4
   11ea0:	ldrd	r4, [sp]
   11ea4:	ldr	r6, [sp, #8]
   11ea8:	add	sp, sp, #12
   11eac:	pop	{pc}		; (ldr pc, [sp], #4)
   11eb0:	ldr	r4, [r0, #4]
   11eb4:	cmp	r4, #0
   11eb8:	bne	11ecc <lista_pesquisa@@Base+0x9c>
   11ebc:	b	11e9c <lista_pesquisa@@Base+0x6c>
   11ec0:	ldr	r4, [r4, #8]
   11ec4:	cmp	r4, #0
   11ec8:	beq	11e9c <lista_pesquisa@@Base+0x6c>
   11ecc:	mov	r1, r5
   11ed0:	ldr	r0, [r4]
   11ed4:	bl	10e94 <strcmp@plt>
   11ed8:	cmp	r0, #0
   11edc:	bne	11ec0 <lista_pesquisa@@Base+0x90>
   11ee0:	b	11e9c <lista_pesquisa@@Base+0x6c>

00011ee4 <lista_ordena@@Base>:
   11ee4:	cmp	r0, #0
   11ee8:	beq	11f88 <lista_ordena@@Base+0xa4>
   11eec:	ldr	r3, [r0, #8]
   11ef0:	cmp	r3, #0
   11ef4:	beq	11f80 <lista_ordena@@Base+0x9c>
   11ef8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11efc:	strd	r6, [sp, #8]
   11f00:	ldr	r6, [r0]
   11f04:	str	r8, [sp, #16]
   11f08:	str	lr, [sp, #20]
   11f0c:	ldr	r7, [r6, #4]
   11f10:	cmp	r7, #0
   11f14:	beq	11f68 <lista_ordena@@Base+0x84>
   11f18:	mov	r5, r6
   11f1c:	mov	r4, r7
   11f20:	ldr	r0, [r4]
   11f24:	ldr	r1, [r5]
   11f28:	bl	10e94 <strcmp@plt>
   11f2c:	cmp	r0, #0
   11f30:	movlt	r5, r4
   11f34:	ldr	r4, [r4, #4]
   11f38:	cmp	r4, #0
   11f3c:	bne	11f20 <lista_ordena@@Base+0x3c>
   11f40:	cmp	r6, r5
   11f44:	beq	11f58 <lista_ordena@@Base+0x74>
   11f48:	ldr	r2, [r5]
   11f4c:	ldr	r3, [r6]
   11f50:	str	r2, [r6]
   11f54:	str	r3, [r5]
   11f58:	mov	r6, r7
   11f5c:	ldr	r7, [r6, #4]
   11f60:	cmp	r7, #0
   11f64:	bne	11f18 <lista_ordena@@Base+0x34>
   11f68:	ldrd	r4, [sp]
   11f6c:	mov	r0, #0
   11f70:	ldrd	r6, [sp, #8]
   11f74:	ldr	r8, [sp, #16]
   11f78:	add	sp, sp, #20
   11f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f80:	mov	r0, #0
   11f84:	bx	lr
   11f88:	mvn	r0, #0
   11f8c:	bx	lr

00011f90 <lista_inverte@@Base>:
   11f90:	strd	r4, [sp, #-12]!
   11f94:	subs	r5, r0, #0
   11f98:	str	lr, [sp, #8]
   11f9c:	beq	12030 <lista_inverte@@Base+0xa0>
   11fa0:	ldr	r4, [r5, #8]
   11fa4:	cmp	r4, #1
   11fa8:	movle	r0, #0
   11fac:	ble	1201c <lista_inverte@@Base+0x8c>
   11fb0:	ldr	r1, [r5]
   11fb4:	cmp	r4, #2
   11fb8:	ldr	r3, [r1, #4]
   11fbc:	beq	12028 <lista_inverte@@Base+0x98>
   11fc0:	sub	r4, r4, #2
   11fc4:	mov	ip, #0
   11fc8:	b	11fd0 <lista_inverte@@Base+0x40>
   11fcc:	mov	r3, r2
   11fd0:	ldmib	r3, {r2, lr}
   11fd4:	add	ip, ip, #1
   11fd8:	cmp	r4, ip
   11fdc:	str	r2, [lr, #4]
   11fe0:	str	lr, [r2, #8]
   11fe4:	str	r1, [r3, #4]
   11fe8:	str	r3, [r1, #8]
   11fec:	mov	r1, r3
   11ff0:	bne	11fcc <lista_inverte@@Base+0x3c>
   11ff4:	ldr	r2, [r5, #4]
   11ff8:	mov	r1, #0
   11ffc:	mov	r0, r1
   12000:	ldr	ip, [r2, #8]
   12004:	str	ip, [r5, #4]
   12008:	str	r1, [ip, #4]
   1200c:	str	r3, [r2, #4]
   12010:	str	r1, [r2, #8]
   12014:	str	r2, [r3, #8]
   12018:	str	r2, [r5]
   1201c:	ldrd	r4, [sp]
   12020:	add	sp, sp, #8
   12024:	pop	{pc}		; (ldr pc, [sp], #4)
   12028:	mov	r3, r1
   1202c:	b	11ff4 <lista_inverte@@Base+0x64>
   12030:	mvn	r0, #0
   12034:	b	1201c <lista_inverte@@Base+0x8c>

00012038 <tabela_nova@@Base>:
   12038:	strd	r4, [sp, #-16]!
   1203c:	str	r6, [sp, #8]
   12040:	subs	r6, r0, #0
   12044:	movle	r3, #1
   12048:	movgt	r3, #0
   1204c:	str	lr, [sp, #12]
   12050:	cmp	r1, #0
   12054:	moveq	r3, #1
   12058:	cmp	r3, #0
   1205c:	bne	120ac <tabela_nova@@Base+0x74>
   12060:	mov	r0, #12
   12064:	mov	r4, r1
   12068:	bl	10f00 <malloc@plt>
   1206c:	subs	r5, r0, #0
   12070:	beq	120ac <tabela_nova@@Base+0x74>
   12074:	mov	r1, #4
   12078:	mov	r0, r6
   1207c:	bl	10e88 <calloc@plt>
   12080:	cmp	r0, #0
   12084:	mov	r3, r0
   12088:	str	r0, [r5, #4]
   1208c:	strne	r4, [r5]
   12090:	strne	r6, [r5, #8]
   12094:	beq	120b4 <tabela_nova@@Base+0x7c>
   12098:	mov	r0, r5
   1209c:	ldrd	r4, [sp]
   120a0:	ldr	r6, [sp, #8]
   120a4:	add	sp, sp, #12
   120a8:	pop	{pc}		; (ldr pc, [sp], #4)
   120ac:	mov	r5, #0
   120b0:	b	12098 <tabela_nova@@Base+0x60>
   120b4:	mov	r0, r5
   120b8:	mov	r5, r3
   120bc:	bl	10ec4 <free@plt>
   120c0:	b	12098 <tabela_nova@@Base+0x60>

000120c4 <tabela_apaga@@Base>:
   120c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   120c8:	strd	r6, [sp, #8]
   120cc:	subs	r7, r0, #0
   120d0:	str	r8, [sp, #16]
   120d4:	str	lr, [sp, #20]
   120d8:	beq	12140 <tabela_apaga@@Base+0x7c>
   120dc:	ldmib	r7, {r0, r3}
   120e0:	cmp	r3, #0
   120e4:	ble	12120 <tabela_apaga@@Base+0x5c>
   120e8:	mov	r6, #0
   120ec:	ldr	r4, [r0, r6, lsl #2]
   120f0:	cmp	r4, #0
   120f4:	beq	12114 <tabela_apaga@@Base+0x50>
   120f8:	ldm	r4, {r0, r5}
   120fc:	bl	10ec4 <free@plt>
   12100:	mov	r0, r4
   12104:	bl	10ec4 <free@plt>
   12108:	subs	r4, r5, #0
   1210c:	bne	120f8 <tabela_apaga@@Base+0x34>
   12110:	ldmib	r7, {r0, r3}
   12114:	add	r6, r6, #1
   12118:	cmp	r3, r6
   1211c:	bgt	120ec <tabela_apaga@@Base+0x28>
   12120:	bl	10ec4 <free@plt>
   12124:	mov	r0, r7
   12128:	ldrd	r4, [sp]
   1212c:	ldrd	r6, [sp, #8]
   12130:	ldr	r8, [sp, #16]
   12134:	ldr	lr, [sp, #20]
   12138:	add	sp, sp, #24
   1213c:	b	10ec4 <free@plt>
   12140:	ldrd	r4, [sp]
   12144:	ldrd	r6, [sp, #8]
   12148:	ldr	r8, [sp, #16]
   1214c:	add	sp, sp, #20
   12150:	pop	{pc}		; (ldr pc, [sp], #4)

00012154 <tabela_adiciona@@Base>:
   12154:	cmp	r1, #0
   12158:	clz	r3, r2
   1215c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12160:	lsr	r3, r3, #5
   12164:	moveq	r3, #1
   12168:	cmp	r0, #0
   1216c:	moveq	r3, #1
   12170:	strd	r6, [sp, #8]
   12174:	cmp	r3, #0
   12178:	strd	r8, [sp, #16]
   1217c:	str	sl, [sp, #24]
   12180:	str	lr, [sp, #28]
   12184:	bne	12258 <tabela_adiciona@@Base+0x104>
   12188:	mov	r4, r0
   1218c:	mov	r6, r1
   12190:	mov	r0, r1
   12194:	ldr	r3, [r4]
   12198:	mov	r8, r2
   1219c:	ldr	r1, [r4, #8]
   121a0:	blx	r3
   121a4:	ldr	sl, [r4, #4]
   121a8:	mov	r9, r0
   121ac:	ldr	r4, [sl, r0, lsl #2]
   121b0:	cmp	r4, #0
   121b4:	bne	121c8 <tabela_adiciona@@Base+0x74>
   121b8:	b	12208 <tabela_adiciona@@Base+0xb4>
   121bc:	ldr	r4, [r4, #4]
   121c0:	cmp	r4, #0
   121c4:	beq	12208 <tabela_adiciona@@Base+0xb4>
   121c8:	ldr	r5, [r4]
   121cc:	mov	r1, r6
   121d0:	mov	r0, r5
   121d4:	bl	10e94 <strcmp@plt>
   121d8:	subs	r7, r0, #0
   121dc:	bne	121bc <tabela_adiciona@@Base+0x68>
   121e0:	mov	r1, r8
   121e4:	add	r0, r5, #25
   121e8:	bl	10ee8 <strcpy@plt>
   121ec:	mov	r0, r7
   121f0:	ldrd	r4, [sp]
   121f4:	ldrd	r6, [sp, #8]
   121f8:	ldrd	r8, [sp, #16]
   121fc:	ldr	sl, [sp, #24]
   12200:	add	sp, sp, #28
   12204:	pop	{pc}		; (ldr pc, [sp], #4)
   12208:	mov	r0, #8
   1220c:	bl	10f00 <malloc@plt>
   12210:	subs	r4, r0, #0
   12214:	beq	12258 <tabela_adiciona@@Base+0x104>
   12218:	mov	r0, #125	; 0x7d
   1221c:	bl	10f00 <malloc@plt>
   12220:	cmp	r0, #0
   12224:	mov	r5, r0
   12228:	str	r0, [r4]
   1222c:	beq	12258 <tabela_adiciona@@Base+0x104>
   12230:	mov	r1, r6
   12234:	mov	r7, #0
   12238:	bl	10ee8 <strcpy@plt>
   1223c:	mov	r1, r8
   12240:	add	r0, r5, #25
   12244:	bl	10ee8 <strcpy@plt>
   12248:	ldr	r3, [sl, r9, lsl #2]
   1224c:	str	r3, [r4, #4]
   12250:	str	r4, [sl, r9, lsl #2]
   12254:	b	121ec <tabela_adiciona@@Base+0x98>
   12258:	mvn	r7, #1
   1225c:	b	121ec <tabela_adiciona@@Base+0x98>

00012260 <tabela_remove@@Base>:
   12260:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12264:	subs	r4, r0, #0
   12268:	strd	r6, [sp, #8]
   1226c:	strd	r8, [sp, #16]
   12270:	str	sl, [sp, #24]
   12274:	str	lr, [sp, #28]
   12278:	beq	12314 <tabela_remove@@Base+0xb4>
   1227c:	mov	r0, r1
   12280:	mov	r6, r1
   12284:	ldr	r3, [r4]
   12288:	ldr	r1, [r4, #8]
   1228c:	blx	r3
   12290:	ldr	sl, [r4, #4]
   12294:	mov	r9, r0
   12298:	ldr	r4, [sl, r0, lsl #2]
   1229c:	cmp	r4, #0
   122a0:	beq	122f4 <tabela_remove@@Base+0x94>
   122a4:	mov	r8, #0
   122a8:	b	122b8 <tabela_remove@@Base+0x58>
   122ac:	mov	r8, r4
   122b0:	subs	r4, r3, #0
   122b4:	beq	122f4 <tabela_remove@@Base+0x94>
   122b8:	ldr	r5, [r4]
   122bc:	mov	r1, r6
   122c0:	mov	r0, r5
   122c4:	bl	10e94 <strcmp@plt>
   122c8:	subs	r7, r0, #0
   122cc:	ldr	r3, [r4, #4]
   122d0:	bne	122ac <tabela_remove@@Base+0x4c>
   122d4:	cmp	r8, #0
   122d8:	mov	r0, r5
   122dc:	strne	r3, [r8, #4]
   122e0:	streq	r3, [sl, r9, lsl #2]
   122e4:	bl	10ec4 <free@plt>
   122e8:	mov	r0, r4
   122ec:	bl	10ec4 <free@plt>
   122f0:	b	122f8 <tabela_remove@@Base+0x98>
   122f4:	mvn	r7, #2
   122f8:	mov	r0, r7
   122fc:	ldrd	r4, [sp]
   12300:	ldrd	r6, [sp, #8]
   12304:	ldrd	r8, [sp, #16]
   12308:	ldr	sl, [sp, #24]
   1230c:	add	sp, sp, #28
   12310:	pop	{pc}		; (ldr pc, [sp], #4)
   12314:	mvn	r7, #1
   12318:	b	122f8 <tabela_remove@@Base+0x98>

0001231c <tabela_valor@@Base>:
   1231c:	strd	r4, [sp, #-16]!
   12320:	subs	r4, r0, #0
   12324:	str	r6, [sp, #8]
   12328:	str	lr, [sp, #12]
   1232c:	beq	12390 <tabela_valor@@Base+0x74>
   12330:	mov	r0, r1
   12334:	mov	r6, r1
   12338:	ldr	r3, [r4]
   1233c:	ldr	r1, [r4, #8]
   12340:	blx	r3
   12344:	ldr	r3, [r4, #4]
   12348:	ldr	r4, [r3, r0, lsl #2]
   1234c:	cmp	r4, #0
   12350:	bne	12364 <tabela_valor@@Base+0x48>
   12354:	b	12390 <tabela_valor@@Base+0x74>
   12358:	ldr	r4, [r4, #4]
   1235c:	cmp	r4, #0
   12360:	beq	12390 <tabela_valor@@Base+0x74>
   12364:	ldr	r5, [r4]
   12368:	mov	r1, r6
   1236c:	mov	r0, r5
   12370:	bl	10e94 <strcmp@plt>
   12374:	cmp	r0, #0
   12378:	bne	12358 <tabela_valor@@Base+0x3c>
   1237c:	add	r0, r5, #25
   12380:	ldrd	r4, [sp]
   12384:	ldr	r6, [sp, #8]
   12388:	add	sp, sp, #12
   1238c:	pop	{pc}		; (ldr pc, [sp], #4)
   12390:	ldrd	r4, [sp]
   12394:	mov	r0, #0
   12398:	ldr	r6, [sp, #8]
   1239c:	add	sp, sp, #12
   123a0:	pop	{pc}		; (ldr pc, [sp], #4)

000123a4 <tabela_existe@@Base>:
   123a4:	cmp	r0, #0
   123a8:	cmpne	r1, #0
   123ac:	beq	123d4 <tabela_existe@@Base+0x30>
   123b0:	str	r4, [sp, #-8]!
   123b4:	str	lr, [sp, #4]
   123b8:	bl	1231c <tabela_valor@@Base>
   123bc:	cmp	r0, #0
   123c0:	ldr	r4, [sp]
   123c4:	add	sp, sp, #4
   123c8:	movne	r0, #1
   123cc:	mvneq	r0, #2
   123d0:	pop	{pc}		; (ldr pc, [sp], #4)
   123d4:	mvn	r0, #1
   123d8:	bx	lr

000123dc <tabela_esvazia@@Base>:
   123dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   123e0:	strd	r6, [sp, #8]
   123e4:	strd	r8, [sp, #16]
   123e8:	subs	r8, r0, #0
   123ec:	str	sl, [sp, #24]
   123f0:	str	lr, [sp, #28]
   123f4:	beq	12474 <tabela_esvazia@@Base+0x98>
   123f8:	ldr	r1, [r8, #8]
   123fc:	cmp	r1, #0
   12400:	ble	12458 <tabela_esvazia@@Base+0x7c>
   12404:	ldr	r3, [r8, #4]
   12408:	mov	r6, #0
   1240c:	mov	r9, r6
   12410:	ldr	r4, [r3, r6, lsl #2]
   12414:	lsl	r7, r6, #2
   12418:	add	r2, r3, r7
   1241c:	cmp	r4, #0
   12420:	beq	12448 <tabela_esvazia@@Base+0x6c>
   12424:	ldm	r4, {r0, r5}
   12428:	bl	10ec4 <free@plt>
   1242c:	mov	r0, r4
   12430:	bl	10ec4 <free@plt>
   12434:	subs	r4, r5, #0
   12438:	bne	12424 <tabela_esvazia@@Base+0x48>
   1243c:	ldr	r3, [r8, #4]
   12440:	ldr	r1, [r8, #8]
   12444:	add	r2, r3, r7
   12448:	add	r6, r6, #1
   1244c:	str	r9, [r2]
   12450:	cmp	r1, r6
   12454:	bgt	12410 <tabela_esvazia@@Base+0x34>
   12458:	mov	r0, #0
   1245c:	ldrd	r4, [sp]
   12460:	ldrd	r6, [sp, #8]
   12464:	ldrd	r8, [sp, #16]
   12468:	ldr	sl, [sp, #24]
   1246c:	add	sp, sp, #28
   12470:	pop	{pc}		; (ldr pc, [sp], #4)
   12474:	mvn	r0, #1
   12478:	b	1245c <tabela_esvazia@@Base+0x80>

0001247c <tabela_numelementos@@Base>:
   1247c:	cmp	r0, #0
   12480:	beq	124cc <tabela_numelementos@@Base+0x50>
   12484:	ldr	r1, [r0, #8]
   12488:	cmp	r1, #0
   1248c:	ble	124c4 <tabela_numelementos@@Base+0x48>
   12490:	ldr	r2, [r0, #4]
   12494:	mov	r0, #0
   12498:	add	r1, r2, r1, lsl #2
   1249c:	ldr	r3, [r2], #4
   124a0:	cmp	r3, #0
   124a4:	beq	124b8 <tabela_numelementos@@Base+0x3c>
   124a8:	ldr	r3, [r3, #4]
   124ac:	add	r0, r0, #1
   124b0:	cmp	r3, #0
   124b4:	bne	124a8 <tabela_numelementos@@Base+0x2c>
   124b8:	cmp	r2, r1
   124bc:	bne	1249c <tabela_numelementos@@Base+0x20>
   124c0:	bx	lr
   124c4:	mov	r0, #0
   124c8:	bx	lr
   124cc:	mvn	r0, #1
   124d0:	bx	lr

000124d4 <tabela_elementos@@Base>:
   124d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   124d8:	mov	r5, r1
   124dc:	mov	r4, r0
   124e0:	strd	r6, [sp, #8]
   124e4:	strd	r8, [sp, #16]
   124e8:	str	sl, [sp, #24]
   124ec:	str	lr, [sp, #28]
   124f0:	bl	1247c <tabela_numelementos@@Base>
   124f4:	cmp	r0, #0
   124f8:	str	r0, [r5]
   124fc:	ble	12590 <tabela_elementos@@Base+0xbc>
   12500:	mov	r8, #125	; 0x7d
   12504:	mul	r0, r8, r0
   12508:	bl	10f00 <malloc@plt>
   1250c:	subs	r9, r0, #0
   12510:	beq	12590 <tabela_elementos@@Base+0xbc>
   12514:	ldr	r7, [r4, #8]
   12518:	cmp	r7, #0
   1251c:	ble	12574 <tabela_elementos@@Base+0xa0>
   12520:	ldr	r6, [r4, #4]
   12524:	mov	r5, #0
   12528:	add	r7, r6, r7, lsl #2
   1252c:	b	12538 <tabela_elementos@@Base+0x64>
   12530:	cmp	r6, r7
   12534:	beq	12574 <tabela_elementos@@Base+0xa0>
   12538:	ldr	r4, [r6], #4
   1253c:	cmp	r4, #0
   12540:	beq	12530 <tabela_elementos@@Base+0x5c>
   12544:	mla	r3, r8, r5, r9
   12548:	mov	r0, r3
   1254c:	mov	r2, #125	; 0x7d
   12550:	ldr	r1, [r4]
   12554:	bl	10ed0 <memcpy@plt>
   12558:	ldr	r4, [r4, #4]
   1255c:	add	r5, r5, #1
   12560:	add	r3, r0, #125	; 0x7d
   12564:	cmp	r4, #0
   12568:	bne	12548 <tabela_elementos@@Base+0x74>
   1256c:	cmp	r6, r7
   12570:	bne	12538 <tabela_elementos@@Base+0x64>
   12574:	mov	r0, r9
   12578:	ldrd	r4, [sp]
   1257c:	ldrd	r6, [sp, #8]
   12580:	ldrd	r8, [sp, #16]
   12584:	ldr	sl, [sp, #24]
   12588:	add	sp, sp, #28
   1258c:	pop	{pc}		; (ldr pc, [sp], #4)
   12590:	mov	r9, #0
   12594:	b	12574 <tabela_elementos@@Base+0xa0>

00012598 <hash_krm@@Base>:
   12598:	ldrb	r3, [r0]
   1259c:	mov	r2, #7
   125a0:	cmp	r3, #0
   125a4:	beq	125b8 <hash_krm@@Base+0x20>
   125a8:	add	r2, r2, r3
   125ac:	ldrb	r3, [r0, #1]!
   125b0:	cmp	r3, #0
   125b4:	bne	125a8 <hash_krm@@Base+0x10>
   125b8:	udiv	r0, r2, r1
   125bc:	mls	r0, r1, r0, r2
   125c0:	bx	lr

000125c4 <hash_djbm@@Base>:
   125c4:	ldrb	r2, [r0]
   125c8:	movw	r3, #5347	; 0x14e3
   125cc:	cmp	r2, #0
   125d0:	beq	125e8 <hash_djbm@@Base+0x24>
   125d4:	rsb	r3, r3, r3, lsl #5
   125d8:	eor	r3, r3, r2
   125dc:	ldrb	r2, [r0, #1]!
   125e0:	cmp	r2, #0
   125e4:	bne	125d4 <hash_djbm@@Base+0x10>
   125e8:	udiv	r0, r3, r1
   125ec:	mls	r0, r1, r0, r3
   125f0:	bx	lr

000125f4 <mostraTabela@@Base>:
   125f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   125f8:	strd	r6, [sp, #8]
   125fc:	mov	r7, r0
   12600:	str	r8, [sp, #16]
   12604:	str	lr, [sp, #20]
   12608:	bl	1247c <tabela_numelementos@@Base>
   1260c:	mov	r1, r0
   12610:	ldr	r0, [pc, #176]	; 126c8 <mostraTabela@@Base+0xd4>
   12614:	add	r0, pc, r0
   12618:	bl	10ea0 <printf@plt>
   1261c:	ldr	r2, [r7, #8]
   12620:	cmp	r2, #0
   12624:	ble	126ac <mostraTabela@@Base+0xb8>
   12628:	ldr	r8, [pc, #156]	; 126cc <mostraTabela@@Base+0xd8>
   1262c:	mov	r5, #0
   12630:	ldr	r6, [pc, #152]	; 126d0 <mostraTabela@@Base+0xdc>
   12634:	add	r8, pc, r8
   12638:	add	r6, pc, r6
   1263c:	b	1264c <mostraTabela@@Base+0x58>
   12640:	add	r5, r5, #1
   12644:	cmp	r2, r5
   12648:	ble	126ac <mostraTabela@@Base+0xb8>
   1264c:	ldr	r3, [r7, #4]
   12650:	ldr	r3, [r3, r5, lsl #2]
   12654:	cmp	r3, #0
   12658:	beq	12640 <mostraTabela@@Base+0x4c>
   1265c:	mov	r1, r5
   12660:	mov	r0, r8
   12664:	bl	10ea0 <printf@plt>
   12668:	ldr	r3, [r7, #4]
   1266c:	ldr	r4, [r3, r5, lsl #2]
   12670:	cmp	r4, #0
   12674:	beq	12694 <mostraTabela@@Base+0xa0>
   12678:	ldr	r1, [r4]
   1267c:	mov	r0, r6
   12680:	add	r2, r1, #25
   12684:	bl	10ea0 <printf@plt>
   12688:	ldr	r4, [r4, #4]
   1268c:	cmp	r4, #0
   12690:	bne	12678 <mostraTabela@@Base+0x84>
   12694:	mov	r0, #10
   12698:	add	r5, r5, #1
   1269c:	bl	10f30 <putchar@plt>
   126a0:	ldr	r2, [r7, #8]
   126a4:	cmp	r2, r5
   126a8:	bgt	1264c <mostraTabela@@Base+0x58>
   126ac:	mov	r0, #10
   126b0:	ldrd	r4, [sp]
   126b4:	ldrd	r6, [sp, #8]
   126b8:	ldr	r8, [sp, #16]
   126bc:	ldr	lr, [sp, #20]
   126c0:	add	sp, sp, #24
   126c4:	b	10f30 <putchar@plt>
   126c8:	andeq	r0, r0, r4, asr #7
   126cc:	andeq	r0, r0, r8, asr #7
   126d0:	andeq	r0, r0, ip, asr #7

000126d4 <__libc_csu_init@@Base>:
   126d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126d8:	mov	r7, r0
   126dc:	ldr	r6, [pc, #72]	; 1272c <__libc_csu_init@@Base+0x58>
   126e0:	ldr	r5, [pc, #72]	; 12730 <__libc_csu_init@@Base+0x5c>
   126e4:	add	r6, pc, r6
   126e8:	add	r5, pc, r5
   126ec:	sub	r6, r6, r5
   126f0:	mov	r8, r1
   126f4:	mov	r9, r2
   126f8:	bl	10e68 <calloc@plt-0x20>
   126fc:	asrs	r6, r6, #2
   12700:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12704:	mov	r4, #0
   12708:	add	r4, r4, #1
   1270c:	ldr	r3, [r5], #4
   12710:	mov	r2, r9
   12714:	mov	r1, r8
   12718:	mov	r0, r7
   1271c:	blx	r3
   12720:	cmp	r6, r4
   12724:	bne	12708 <__libc_csu_init@@Base+0x34>
   12728:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1272c:	andeq	r0, r1, r8, lsr #16
   12730:	andeq	r0, r1, r0, lsr #16

00012734 <__libc_csu_fini@@Base>:
   12734:	bx	lr

Disassembly of section .fini:

00012738 <.fini>:
   12738:	push	{r3, lr}
   1273c:	pop	{r3, pc}
