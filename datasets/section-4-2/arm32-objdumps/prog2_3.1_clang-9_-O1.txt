
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010ba0 <.init>:
   10ba0:	push	{r3, lr}
   10ba4:	bl	10cec <_start@@Base+0x3c>
   10ba8:	pop	{r3, pc}

Disassembly of section .plt:

00010bac <calloc@plt-0x14>:
   10bac:	push	{lr}		; (str lr, [sp, #-4]!)
   10bb0:	ldr	lr, [pc, #4]	; 10bbc <calloc@plt-0x4>
   10bb4:	add	lr, pc, lr
   10bb8:	ldr	pc, [lr, #8]!
   10bbc:	andeq	r1, r1, r4, asr #8

00010bc0 <calloc@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1092]!	; 0x444

00010bcc <strstr@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1084]!	; 0x43c

00010bd8 <strcmp@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1076]!	; 0x434

00010be4 <printf@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1068]!	; 0x42c

00010bf0 <fopen@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1060]!	; 0x424

00010bfc <free@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #69632	; 0x11000
   10c04:	ldr	pc, [ip, #1052]!	; 0x41c

00010c08 <time@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #69632	; 0x11000
   10c10:	ldr	pc, [ip, #1044]!	; 0x414

00010c14 <realloc@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #69632	; 0x11000
   10c1c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c20 <strcat@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #69632	; 0x11000
   10c28:	ldr	pc, [ip, #1028]!	; 0x404

00010c2c <strcpy@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c38 <puts@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c44 <malloc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c50 <__libc_start_main@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #69632	; 0x11000
   10c58:	ldr	pc, [ip, #996]!	; 0x3e4

00010c5c <__gmon_start__@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #69632	; 0x11000
   10c64:	ldr	pc, [ip, #988]!	; 0x3dc

00010c68 <strlen@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #69632	; 0x11000
   10c70:	ldr	pc, [ip, #980]!	; 0x3d4

00010c74 <srand@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #69632	; 0x11000
   10c7c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c80 <rand@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #69632	; 0x11000
   10c88:	ldr	pc, [ip, #964]!	; 0x3c4

00010c8c <fclose@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #69632	; 0x11000
   10c94:	ldr	pc, [ip, #956]!	; 0x3bc

00010c98 <fgets_unlocked@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #69632	; 0x11000
   10ca0:	ldr	pc, [ip, #948]!	; 0x3b4

00010ca4 <abort@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #69632	; 0x11000
   10cac:	ldr	pc, [ip, #940]!	; 0x3ac

Disassembly of section .text:

00010cb0 <_start@@Base>:
   10cb0:	mov	fp, #0
   10cb4:	mov	lr, #0
   10cb8:	pop	{r1}		; (ldr r1, [sp], #4)
   10cbc:	mov	r2, sp
   10cc0:	push	{r2}		; (str r2, [sp, #-4]!)
   10cc4:	push	{r0}		; (str r0, [sp, #-4]!)
   10cc8:	ldr	ip, [pc, #16]	; 10ce0 <_start@@Base+0x30>
   10ccc:	push	{ip}		; (str ip, [sp, #-4]!)
   10cd0:	ldr	r0, [pc, #12]	; 10ce4 <_start@@Base+0x34>
   10cd4:	ldr	r3, [pc, #12]	; 10ce8 <_start@@Base+0x38>
   10cd8:	bl	10c50 <__libc_start_main@plt>
   10cdc:	bl	10ca4 <abort@plt>
   10ce0:	muleq	r1, r4, r6
   10ce4:	andeq	r0, r1, r0, lsr #27
   10ce8:	andeq	r1, r1, r4, lsr r6
   10cec:	ldr	r3, [pc, #20]	; 10d08 <_start@@Base+0x58>
   10cf0:	ldr	r2, [pc, #20]	; 10d0c <_start@@Base+0x5c>
   10cf4:	add	r3, pc, r3
   10cf8:	ldr	r2, [r3, r2]
   10cfc:	cmp	r2, #0
   10d00:	bxeq	lr
   10d04:	b	10c5c <__gmon_start__@plt>
   10d08:	andeq	r1, r1, r4, lsl #6
   10d0c:	andeq	r0, r0, ip, asr r0
   10d10:	ldr	r0, [pc, #24]	; 10d30 <_start@@Base+0x80>
   10d14:	ldr	r3, [pc, #24]	; 10d34 <_start@@Base+0x84>
   10d18:	cmp	r3, r0
   10d1c:	bxeq	lr
   10d20:	ldr	r3, [pc, #16]	; 10d38 <_start@@Base+0x88>
   10d24:	cmp	r3, #0
   10d28:	bxeq	lr
   10d2c:	bx	r3
   10d30:	andeq	r2, r2, r8, rrx
   10d34:	andeq	r2, r2, r8, rrx
   10d38:	andeq	r0, r0, r0
   10d3c:	ldr	r0, [pc, #36]	; 10d68 <_start@@Base+0xb8>
   10d40:	ldr	r1, [pc, #36]	; 10d6c <_start@@Base+0xbc>
   10d44:	sub	r1, r1, r0
   10d48:	asr	r1, r1, #2
   10d4c:	add	r1, r1, r1, lsr #31
   10d50:	asrs	r1, r1, #1
   10d54:	bxeq	lr
   10d58:	ldr	r3, [pc, #16]	; 10d70 <_start@@Base+0xc0>
   10d5c:	cmp	r3, #0
   10d60:	bxeq	lr
   10d64:	bx	r3
   10d68:	andeq	r2, r2, r8, rrx
   10d6c:	andeq	r2, r2, r8, rrx
   10d70:	andeq	r0, r0, r0
   10d74:	push	{r4, lr}
   10d78:	ldr	r4, [pc, #24]	; 10d98 <_start@@Base+0xe8>
   10d7c:	ldrb	r3, [r4]
   10d80:	cmp	r3, #0
   10d84:	popne	{r4, pc}
   10d88:	bl	10d10 <_start@@Base+0x60>
   10d8c:	mov	r3, #1
   10d90:	strb	r3, [r4]
   10d94:	pop	{r4, pc}
   10d98:	andeq	r2, r2, r8, rrx
   10d9c:	b	10d3c <_start@@Base+0x8c>

00010da0 <main@@Base>:
   10da0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10da4:	add	fp, sp, #24
   10da8:	sub	sp, sp, #104	; 0x68
   10dac:	bl	11140 <vetor_novo@@Base>
   10db0:	mov	r4, r0
   10db4:	movw	r0, #5796	; 0x16a4
   10db8:	movt	r0, #1
   10dbc:	movw	r1, #6141	; 0x17fd
   10dc0:	movt	r1, #1
   10dc4:	bl	10bf0 <fopen@plt>
   10dc8:	mov	r8, r0
   10dcc:	add	r6, sp, #4
   10dd0:	mov	r0, r6
   10dd4:	mov	r1, #100	; 0x64
   10dd8:	mov	r2, r8
   10ddc:	bl	10c98 <fgets_unlocked@plt>
   10de0:	cmp	r0, #0
   10de4:	beq	10e38 <main@@Base+0x98>
   10de8:	mov	r5, #0
   10dec:	mov	r7, #0
   10df0:	mov	r0, r6
   10df4:	bl	10c68 <strlen@plt>
   10df8:	add	r0, r0, r6
   10dfc:	strb	r5, [r0, #-1]
   10e00:	mov	r0, r4
   10e04:	mov	r1, r6
   10e08:	mov	r2, r7
   10e0c:	bl	11290 <vetor_insere@@Base>
   10e10:	cmn	r0, #1
   10e14:	beq	10e94 <main@@Base+0xf4>
   10e18:	mov	r0, r6
   10e1c:	mov	r1, #100	; 0x64
   10e20:	mov	r2, r8
   10e24:	bl	10c98 <fgets_unlocked@plt>
   10e28:	add	r7, r7, #1
   10e2c:	cmp	r0, #0
   10e30:	bne	10df0 <main@@Base+0x50>
   10e34:	b	10e3c <main@@Base+0x9c>
   10e38:	mov	r7, #0
   10e3c:	movw	r0, #5818	; 0x16ba
   10e40:	movt	r0, #1
   10e44:	mov	r1, r7
   10e48:	bl	10be4 <printf@plt>
   10e4c:	mov	r0, r4
   10e50:	bl	10f2c <vetor_imprime@@Base>
   10e54:	movw	r1, #5914	; 0x171a
   10e58:	movt	r1, #1
   10e5c:	mov	r0, r4
   10e60:	bl	113e8 <vetor_pesquisa@@Base>
   10e64:	mov	r1, r0
   10e68:	movw	r0, #5843	; 0x16d3
   10e6c:	movt	r0, #1
   10e70:	bl	10be4 <printf@plt>
   10e74:	mov	r0, r4
   10e78:	bl	1144c <vetor_ordena@@Base>
   10e7c:	cmp	r0, #0
   10e80:	beq	10eac <main@@Base+0x10c>
   10e84:	movw	r0, #6105	; 0x17d9
   10e88:	movt	r0, #1
   10e8c:	bl	10c38 <puts@plt>
   10e90:	b	10eb4 <main@@Base+0x114>
   10e94:	movw	r0, #6143	; 0x17ff
   10e98:	movt	r0, #1
   10e9c:	bl	10c38 <puts@plt>
   10ea0:	mvn	r0, #0
   10ea4:	sub	sp, fp, #24
   10ea8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10eac:	mov	r0, r4
   10eb0:	bl	10f2c <vetor_imprime@@Base>
   10eb4:	movw	r1, #6005	; 0x1775
   10eb8:	movt	r1, #1
   10ebc:	mov	r0, r4
   10ec0:	bl	10f7c <vetor_num_ocorrencias@@Base>
   10ec4:	mov	r1, r0
   10ec8:	movw	r0, #5949	; 0x173d
   10ecc:	movt	r0, #1
   10ed0:	bl	10be4 <printf@plt>
   10ed4:	mov	r0, r4
   10ed8:	bl	10fe0 <vetor_remove_repetidas@@Base>
   10edc:	ldr	r0, [r4]
   10ee0:	sub	r1, r0, #1
   10ee4:	movw	r0, #6024	; 0x1788
   10ee8:	movt	r0, #1
   10eec:	bl	10be4 <printf@plt>
   10ef0:	movw	r1, #6085	; 0x17c5
   10ef4:	movt	r1, #1
   10ef8:	mov	r0, r4
   10efc:	bl	110a8 <vetor_pesquisa_parcial@@Base>
   10f00:	mov	r6, r0
   10f04:	bl	10f2c <vetor_imprime@@Base>
   10f08:	mov	r0, r6
   10f0c:	bl	1116c <vetor_apaga@@Base>
   10f10:	mov	r0, r4
   10f14:	bl	1116c <vetor_apaga@@Base>
   10f18:	mov	r0, r8
   10f1c:	bl	10c8c <fclose@plt>
   10f20:	mov	r0, #0
   10f24:	sub	sp, fp, #24
   10f28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f2c <vetor_imprime@@Base>:
   10f2c:	push	{r4, r5, r6, r7, fp, lr}
   10f30:	add	fp, sp, #16
   10f34:	ldr	r7, [r0]
   10f38:	cmp	r7, #1
   10f3c:	blt	10f78 <vetor_imprime@@Base+0x4c>
   10f40:	mov	r4, r0
   10f44:	mov	r5, #0
   10f48:	movw	r6, #6092	; 0x17cc
   10f4c:	movt	r6, #1
   10f50:	mov	r0, r4
   10f54:	mov	r1, r5
   10f58:	bl	11260 <vetor_elemento@@Base>
   10f5c:	mov	r2, r0
   10f60:	mov	r0, r6
   10f64:	mov	r1, r5
   10f68:	bl	10be4 <printf@plt>
   10f6c:	add	r5, r5, #1
   10f70:	cmp	r7, r5
   10f74:	bne	10f50 <vetor_imprime@@Base+0x24>
   10f78:	pop	{r4, r5, r6, r7, fp, pc}

00010f7c <vetor_num_ocorrencias@@Base>:
   10f7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f80:	add	fp, sp, #24
   10f84:	ldr	r4, [r0]
   10f88:	cmp	r4, #1
   10f8c:	blt	10fd4 <vetor_num_ocorrencias@@Base+0x58>
   10f90:	mov	r8, r1
   10f94:	mov	r5, r0
   10f98:	mov	r7, #0
   10f9c:	mov	r6, #0
   10fa0:	mov	r0, r5
   10fa4:	mov	r1, r7
   10fa8:	bl	11260 <vetor_elemento@@Base>
   10fac:	mov	r1, r0
   10fb0:	mov	r0, r8
   10fb4:	bl	10bd8 <strcmp@plt>
   10fb8:	cmp	r0, #0
   10fbc:	addeq	r6, r6, #1
   10fc0:	add	r7, r7, #1
   10fc4:	cmp	r4, r7
   10fc8:	bne	10fa0 <vetor_num_ocorrencias@@Base+0x24>
   10fcc:	mov	r0, r6
   10fd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10fd4:	mov	r6, #0
   10fd8:	mov	r0, r6
   10fdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010fe0 <vetor_remove_repetidas@@Base>:
   10fe0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10fe4:	add	fp, sp, #24
   10fe8:	sub	sp, sp, #104	; 0x68
   10fec:	mov	r4, r0
   10ff0:	ldr	r0, [r0]
   10ff4:	cmp	r0, #1
   10ff8:	blt	110a0 <vetor_remove_repetidas@@Base+0xc0>
   10ffc:	mov	r7, #0
   11000:	add	r6, sp, #4
   11004:	movw	r8, #6188	; 0x182c
   11008:	movt	r8, #1
   1100c:	b	1101c <vetor_remove_repetidas@@Base+0x3c>
   11010:	ldr	r0, [r4]
   11014:	cmp	r7, r0
   11018:	bge	110a0 <vetor_remove_repetidas@@Base+0xc0>
   1101c:	mov	r0, r4
   11020:	mov	r1, r7
   11024:	bl	11260 <vetor_elemento@@Base>
   11028:	mov	r1, r0
   1102c:	mov	r0, r6
   11030:	bl	10c2c <strcpy@plt>
   11034:	add	r7, r7, #1
   11038:	ldr	r0, [r4]
   1103c:	cmp	r7, r0
   11040:	bge	11010 <vetor_remove_repetidas@@Base+0x30>
   11044:	mov	r5, r7
   11048:	b	11060 <vetor_remove_repetidas@@Base+0x80>
   1104c:	sub	r5, r5, #1
   11050:	ldr	r0, [r4]
   11054:	add	r5, r5, #1
   11058:	cmp	r5, r0
   1105c:	bge	11010 <vetor_remove_repetidas@@Base+0x30>
   11060:	mov	r0, r4
   11064:	mov	r1, r5
   11068:	bl	11260 <vetor_elemento@@Base>
   1106c:	mov	r1, r0
   11070:	mov	r0, r6
   11074:	bl	10bd8 <strcmp@plt>
   11078:	cmp	r0, #0
   1107c:	bne	11050 <vetor_remove_repetidas@@Base+0x70>
   11080:	mov	r0, r4
   11084:	mov	r1, r5
   11088:	bl	11364 <vetor_remove@@Base>
   1108c:	cmn	r0, #1
   11090:	bne	1104c <vetor_remove_repetidas@@Base+0x6c>
   11094:	mov	r0, r8
   11098:	bl	10c38 <puts@plt>
   1109c:	b	11050 <vetor_remove_repetidas@@Base+0x70>
   110a0:	sub	sp, fp, #24
   110a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000110a8 <vetor_pesquisa_parcial@@Base>:
   110a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   110ac:	add	fp, sp, #24
   110b0:	mov	r4, r1
   110b4:	mov	r5, r0
   110b8:	bl	11140 <vetor_novo@@Base>
   110bc:	mov	r6, r0
   110c0:	ldr	r0, [r5]
   110c4:	cmp	r0, #1
   110c8:	blt	11138 <vetor_pesquisa_parcial@@Base+0x90>
   110cc:	mov	r7, #0
   110d0:	movw	r8, #6230	; 0x1856
   110d4:	movt	r8, #1
   110d8:	b	110ec <vetor_pesquisa_parcial@@Base+0x44>
   110dc:	ldr	r0, [r5]
   110e0:	add	r7, r7, #1
   110e4:	cmp	r7, r0
   110e8:	bge	11138 <vetor_pesquisa_parcial@@Base+0x90>
   110ec:	mov	r0, r5
   110f0:	mov	r1, r7
   110f4:	bl	11260 <vetor_elemento@@Base>
   110f8:	mov	r1, r4
   110fc:	bl	10bcc <strstr@plt>
   11100:	cmp	r0, #0
   11104:	beq	110dc <vetor_pesquisa_parcial@@Base+0x34>
   11108:	mov	r0, r5
   1110c:	mov	r1, r7
   11110:	bl	11260 <vetor_elemento@@Base>
   11114:	mov	r1, r0
   11118:	mov	r0, r6
   1111c:	mov	r2, #0
   11120:	bl	11290 <vetor_insere@@Base>
   11124:	cmn	r0, #1
   11128:	bne	110dc <vetor_pesquisa_parcial@@Base+0x34>
   1112c:	mov	r0, r8
   11130:	bl	10c38 <puts@plt>
   11134:	b	110dc <vetor_pesquisa_parcial@@Base+0x34>
   11138:	mov	r0, r6
   1113c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011140 <vetor_novo@@Base>:
   11140:	push	{fp, lr}
   11144:	mov	fp, sp
   11148:	mov	r0, #12
   1114c:	bl	10c44 <malloc@plt>
   11150:	cmp	r0, #0
   11154:	moveq	r0, #0
   11158:	movne	r1, #0
   1115c:	strne	r1, [r0]
   11160:	strne	r1, [r0, #4]
   11164:	strne	r1, [r0, #8]
   11168:	pop	{fp, pc}

0001116c <vetor_apaga@@Base>:
   1116c:	cmp	r0, #0
   11170:	bxeq	lr
   11174:	push	{r4, r5, fp, lr}
   11178:	add	fp, sp, #8
   1117c:	mov	r4, r0
   11180:	ldr	r1, [r0]
   11184:	ldr	r0, [r0, #8]
   11188:	cmp	r1, #1
   1118c:	blt	111b0 <vetor_apaga@@Base+0x44>
   11190:	mov	r5, #0
   11194:	ldr	r0, [r0, r5, lsl #2]
   11198:	bl	10bfc <free@plt>
   1119c:	add	r5, r5, #1
   111a0:	ldr	r1, [r4]
   111a4:	ldr	r0, [r4, #8]
   111a8:	cmp	r5, r1
   111ac:	blt	11194 <vetor_apaga@@Base+0x28>
   111b0:	bl	10bfc <free@plt>
   111b4:	mov	r0, r4
   111b8:	pop	{r4, r5, fp, lr}
   111bc:	b	10bfc <free@plt>

000111c0 <vetor_atribui@@Base>:
   111c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   111c4:	add	fp, sp, #24
   111c8:	mvn	r4, #0
   111cc:	cmp	r0, #0
   111d0:	beq	11248 <vetor_atribui@@Base+0x88>
   111d4:	mov	r5, r1
   111d8:	cmp	r1, #0
   111dc:	bmi	11248 <vetor_atribui@@Base+0x88>
   111e0:	mov	r7, r0
   111e4:	ldr	r0, [r0]
   111e8:	cmp	r0, r5
   111ec:	ble	11248 <vetor_atribui@@Base+0x88>
   111f0:	mov	r6, r2
   111f4:	mov	r0, r2
   111f8:	bl	10c68 <strlen@plt>
   111fc:	mov	r8, r0
   11200:	ldr	r0, [r7, #8]
   11204:	ldr	r9, [r0, r5, lsl #2]
   11208:	mov	r0, r9
   1120c:	bl	10c68 <strlen@plt>
   11210:	cmp	r8, r0
   11214:	bls	11234 <vetor_atribui@@Base+0x74>
   11218:	add	r1, r8, #1
   1121c:	mov	r0, r9
   11220:	bl	10c14 <realloc@plt>
   11224:	ldr	r1, [r7, #8]
   11228:	str	r0, [r1, r5, lsl #2]
   1122c:	cmp	r0, #0
   11230:	beq	11248 <vetor_atribui@@Base+0x88>
   11234:	ldr	r0, [r7, #8]
   11238:	ldr	r0, [r0, r5, lsl #2]
   1123c:	mov	r1, r6
   11240:	bl	10c2c <strcpy@plt>
   11244:	mov	r4, r5
   11248:	mov	r0, r4
   1124c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011250 <vetor_tamanho@@Base>:
   11250:	cmp	r0, #0
   11254:	ldrne	r0, [r0]
   11258:	mvneq	r0, #0
   1125c:	bx	lr

00011260 <vetor_elemento@@Base>:
   11260:	mov	r2, r0
   11264:	mov	r0, #0
   11268:	cmp	r2, #0
   1126c:	beq	1128c <vetor_elemento@@Base+0x2c>
   11270:	cmp	r1, #0
   11274:	bmi	1128c <vetor_elemento@@Base+0x2c>
   11278:	ldr	r3, [r2]
   1127c:	cmp	r3, r1
   11280:	bxle	lr
   11284:	ldr	r0, [r2, #8]
   11288:	ldr	r0, [r0, r1, lsl #2]
   1128c:	bx	lr

00011290 <vetor_insere@@Base>:
   11290:	push	{r4, r5, r6, r7, fp, lr}
   11294:	add	fp, sp, #16
   11298:	mvn	r4, #0
   1129c:	cmp	r0, #0
   112a0:	beq	1135c <vetor_insere@@Base+0xcc>
   112a4:	mov	r5, r2
   112a8:	cmp	r2, #0
   112ac:	bmi	1135c <vetor_insere@@Base+0xcc>
   112b0:	mov	r7, r1
   112b4:	mov	r6, r0
   112b8:	ldr	r1, [r0]
   112bc:	cmp	r1, r5
   112c0:	blt	1135c <vetor_insere@@Base+0xcc>
   112c4:	ldr	r0, [r6, #4]
   112c8:	cmp	r1, r0
   112cc:	bne	112f8 <vetor_insere@@Base+0x68>
   112d0:	lsl	r1, r0, #1
   112d4:	cmp	r0, #0
   112d8:	movweq	r1, #1
   112dc:	str	r1, [r6, #4]
   112e0:	lsl	r1, r1, #2
   112e4:	ldr	r0, [r6, #8]
   112e8:	bl	10c14 <realloc@plt>
   112ec:	str	r0, [r6, #8]
   112f0:	cmp	r0, #0
   112f4:	beq	1135c <vetor_insere@@Base+0xcc>
   112f8:	ldr	r0, [r6]
   112fc:	cmp	r0, r5
   11300:	ble	11320 <vetor_insere@@Base+0x90>
   11304:	ldr	r1, [r6, #8]
   11308:	add	r2, r1, r0, lsl #2
   1130c:	ldr	r2, [r2, #-4]
   11310:	str	r2, [r1, r0, lsl #2]
   11314:	sub	r0, r0, #1
   11318:	cmp	r0, r5
   1131c:	bgt	11304 <vetor_insere@@Base+0x74>
   11320:	mov	r0, r7
   11324:	bl	10c68 <strlen@plt>
   11328:	add	r0, r0, #1
   1132c:	mov	r1, #1
   11330:	bl	10bc0 <calloc@plt>
   11334:	ldr	r1, [r6, #8]
   11338:	str	r0, [r1, r5, lsl #2]
   1133c:	cmp	r0, #0
   11340:	beq	1135c <vetor_insere@@Base+0xcc>
   11344:	mov	r1, r7
   11348:	bl	10c2c <strcpy@plt>
   1134c:	ldr	r0, [r6]
   11350:	add	r0, r0, #1
   11354:	str	r0, [r6]
   11358:	mov	r4, r5
   1135c:	mov	r0, r4
   11360:	pop	{r4, r5, r6, r7, fp, pc}

00011364 <vetor_remove@@Base>:
   11364:	push	{r4, r5, fp, lr}
   11368:	add	fp, sp, #8
   1136c:	mov	r4, r0
   11370:	mvn	r0, #0
   11374:	cmp	r4, #0
   11378:	beq	113e4 <vetor_remove@@Base+0x80>
   1137c:	mov	r5, r1
   11380:	cmp	r1, #0
   11384:	bmi	113e4 <vetor_remove@@Base+0x80>
   11388:	ldr	r1, [r4]
   1138c:	cmp	r1, r5
   11390:	pople	{r4, r5, fp, pc}
   11394:	ldr	r0, [r4, #8]
   11398:	ldr	r0, [r0, r5, lsl #2]
   1139c:	bl	10bfc <free@plt>
   113a0:	ldr	r0, [r4]
   113a4:	add	r1, r5, #1
   113a8:	cmp	r1, r0
   113ac:	bge	113d8 <vetor_remove@@Base+0x74>
   113b0:	ldr	r0, [r4]
   113b4:	ldr	r1, [r4, #8]
   113b8:	add	r2, r1, r5, lsl #2
   113bc:	ldr	r2, [r2, #4]
   113c0:	str	r2, [r1, r5, lsl #2]
   113c4:	add	r1, r5, #1
   113c8:	add	r2, r5, #2
   113cc:	cmp	r2, r0
   113d0:	mov	r5, r1
   113d4:	blt	113b4 <vetor_remove@@Base+0x50>
   113d8:	sub	r0, r0, #1
   113dc:	str	r0, [r4]
   113e0:	mov	r0, #0
   113e4:	pop	{r4, r5, fp, pc}

000113e8 <vetor_pesquisa@@Base>:
   113e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   113ec:	add	fp, sp, #24
   113f0:	mvn	r8, #0
   113f4:	cmp	r0, #0
   113f8:	beq	1143c <vetor_pesquisa@@Base+0x54>
   113fc:	mov	r6, r0
   11400:	ldr	r0, [r0]
   11404:	cmp	r0, #1
   11408:	blt	1143c <vetor_pesquisa@@Base+0x54>
   1140c:	mov	r5, r1
   11410:	ldr	r4, [r6, #8]
   11414:	mov	r7, #0
   11418:	ldr	r0, [r4, r7, lsl #2]
   1141c:	mov	r1, r5
   11420:	bl	10bd8 <strcmp@plt>
   11424:	cmp	r0, #0
   11428:	beq	11444 <vetor_pesquisa@@Base+0x5c>
   1142c:	add	r7, r7, #1
   11430:	ldr	r0, [r6]
   11434:	cmp	r7, r0
   11438:	blt	11418 <vetor_pesquisa@@Base+0x30>
   1143c:	mov	r0, r8
   11440:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11444:	mov	r0, r7
   11448:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001144c <vetor_ordena@@Base>:
   1144c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11450:	add	fp, sp, #24
   11454:	cmp	r0, #0
   11458:	beq	114e0 <vetor_ordena@@Base+0x94>
   1145c:	mov	r4, r0
   11460:	ldr	r1, [r0]
   11464:	mov	r0, #0
   11468:	cmp	r1, #2
   1146c:	blt	114ec <vetor_ordena@@Base+0xa0>
   11470:	mov	r9, #1
   11474:	mov	r8, #0
   11478:	b	1149c <vetor_ordena@@Base+0x50>
   1147c:	add	r0, r7, #1
   11480:	ldr	r1, [r4, #8]
   11484:	str	r5, [r1, r0, lsl #2]
   11488:	add	r8, r8, #1
   1148c:	add	r9, r9, #1
   11490:	ldr	r0, [r4]
   11494:	cmp	r9, r0
   11498:	bge	114e8 <vetor_ordena@@Base+0x9c>
   1149c:	ldr	r0, [r4, #8]
   114a0:	ldr	r5, [r0, r9, lsl #2]
   114a4:	mov	r7, r8
   114a8:	ldr	r6, [r4, #8]
   114ac:	ldr	r1, [r6, r7, lsl #2]
   114b0:	mov	r0, r5
   114b4:	bl	10bd8 <strcmp@plt>
   114b8:	cmn	r0, #1
   114bc:	bgt	1147c <vetor_ordena@@Base+0x30>
   114c0:	ldr	r0, [r6, r7, lsl #2]!
   114c4:	str	r0, [r6, #4]
   114c8:	sub	r0, r7, #1
   114cc:	cmp	r7, #0
   114d0:	mov	r7, r0
   114d4:	bgt	114a8 <vetor_ordena@@Base+0x5c>
   114d8:	add	r0, r0, #1
   114dc:	b	11480 <vetor_ordena@@Base+0x34>
   114e0:	mvn	r0, #0
   114e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   114e8:	mov	r0, #0
   114ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000114f0 <vetor_concatena@@Base>:
   114f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   114f4:	add	fp, sp, #24
   114f8:	mov	r4, #0
   114fc:	cmp	r0, #0
   11500:	movne	r5, r1
   11504:	cmpne	r1, #0
   11508:	bne	11514 <vetor_concatena@@Base+0x24>
   1150c:	mov	r0, r4
   11510:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11514:	mov	r6, r0
   11518:	bl	11140 <vetor_novo@@Base>
   1151c:	mov	r4, r0
   11520:	ldr	r8, [r5]
   11524:	ldr	r0, [r5, #4]
   11528:	ldr	r7, [r6]
   1152c:	ldmib	r6, {r1, r2}
   11530:	add	r3, r7, r8, lsl #2
   11534:	add	r0, r0, r1
   11538:	stmib	r4, {r0, r3}
   1153c:	ldr	r0, [r7, r8, lsl #2]
   11540:	ldr	r1, [r2]
   11544:	bl	10c2c <strcpy@plt>
   11548:	ldr	r0, [r7, r8, lsl #2]
   1154c:	ldr	r1, [r5, #8]
   11550:	ldr	r1, [r1]
   11554:	bl	10c20 <strcat@plt>
   11558:	mov	r0, r4
   1155c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011560 <vetor_inverte@@Base>:
   11560:	push	{r4, r5, r6, r7, fp, lr}
   11564:	add	fp, sp, #16
   11568:	mov	r7, r0
   1156c:	bl	11250 <vetor_tamanho@@Base>
   11570:	cmp	r0, #1
   11574:	blt	115c0 <vetor_inverte@@Base+0x60>
   11578:	lsl	r1, r0, #2
   1157c:	sub	r2, r0, #1
   11580:	mov	r3, #0
   11584:	ldr	r4, [r7, #8]
   11588:	ldr	r5, [r4, r3, lsl #2]
   1158c:	add	r6, r4, r1
   11590:	ldr	r6, [r6, -r3, lsl #2]
   11594:	str	r6, [r4, r3, lsl #2]
   11598:	ldr	r6, [r7, #8]
   1159c:	add	r6, r6, r1
   115a0:	str	r5, [r6, -r3, lsl #2]
   115a4:	add	r3, r3, #1
   115a8:	cmp	r3, r0
   115ac:	bge	115c0 <vetor_inverte@@Base+0x60>
   115b0:	sub	r6, r2, #1
   115b4:	cmp	r3, r2
   115b8:	mov	r2, r6
   115bc:	blt	11584 <vetor_inverte@@Base+0x24>
   115c0:	mov	r0, #0
   115c4:	pop	{r4, r5, r6, r7, fp, pc}

000115c8 <vetor_baralha@@Base>:
   115c8:	push	{r4, r5, r6, r7, fp, lr}
   115cc:	add	fp, sp, #16
   115d0:	sub	sp, sp, #8
   115d4:	ldr	r5, [r0]
   115d8:	bl	11140 <vetor_novo@@Base>
   115dc:	mov	r4, r0
   115e0:	add	r0, sp, #4
   115e4:	bl	10c08 <time@plt>
   115e8:	bl	10c74 <srand@plt>
   115ec:	cmp	r5, #1
   115f0:	blt	11628 <vetor_baralha@@Base+0x60>
   115f4:	add	r6, r5, #1
   115f8:	mov	r7, #0
   115fc:	bl	10c80 <rand@plt>
   11600:	ldr	r1, [r4, #8]
   11604:	ldr	r2, [r1, r7, lsl #2]
   11608:	sdiv	r3, r0, r6
   1160c:	mls	r0, r3, r6, r0
   11610:	ldr	r3, [r1, r0, lsl #2]
   11614:	str	r3, [r1, r7, lsl #2]
   11618:	str	r2, [r1, r0, lsl #2]
   1161c:	add	r7, r7, #1
   11620:	cmp	r5, r7
   11624:	bne	115fc <vetor_baralha@@Base+0x34>
   11628:	mov	r0, r4
   1162c:	sub	sp, fp, #16
   11630:	pop	{r4, r5, r6, r7, fp, pc}

00011634 <__libc_csu_init@@Base>:
   11634:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11638:	mov	r7, r0
   1163c:	ldr	r6, [pc, #72]	; 1168c <__libc_csu_init@@Base+0x58>
   11640:	ldr	r5, [pc, #72]	; 11690 <__libc_csu_init@@Base+0x5c>
   11644:	add	r6, pc, r6
   11648:	add	r5, pc, r5
   1164c:	sub	r6, r6, r5
   11650:	mov	r8, r1
   11654:	mov	r9, r2
   11658:	bl	10ba0 <calloc@plt-0x20>
   1165c:	asrs	r6, r6, #2
   11660:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11664:	mov	r4, #0
   11668:	add	r4, r4, #1
   1166c:	ldr	r3, [r5], #4
   11670:	mov	r2, r9
   11674:	mov	r1, r8
   11678:	mov	r0, r7
   1167c:	blx	r3
   11680:	cmp	r6, r4
   11684:	bne	11668 <__libc_csu_init@@Base+0x34>
   11688:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1168c:	andeq	r0, r1, r0, asr #17
   11690:			; <UNDEFINED> instruction: 0x000108b8

00011694 <__libc_csu_fini@@Base>:
   11694:	bx	lr

Disassembly of section .fini:

00011698 <.fini>:
   11698:	push	{r3, lr}
   1169c:	pop	{r3, pc}
