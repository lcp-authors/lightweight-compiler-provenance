
../repos/inetutils/src/uucpd:     file format elf32-littlearm


Disassembly of section .init:

000110e4 <.init>:
   110e4:	push	{r3, lr}
   110e8:	bl	11470 <__assert_fail@plt+0x48>
   110ec:	pop	{r3, pc}

Disassembly of section .plt:

000110f0 <fputs_unlocked@plt-0x14>:
   110f0:	push	{lr}		; (str lr, [sp, #-4]!)
   110f4:	ldr	lr, [pc, #4]	; 11100 <fputs_unlocked@plt-0x4>
   110f8:	add	lr, pc, lr
   110fc:	ldr	pc, [lr, #8]!
   11100:	andeq	r7, r1, r0, lsl #30

00011104 <fputs_unlocked@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #94208	; 0x17000
   1110c:	ldr	pc, [ip, #3840]!	; 0xf00

00011110 <getpwnam@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #3832]!	; 0xef8

0001111c <strcmp@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #3824]!	; 0xef0

00011128 <strtol@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3816]!	; 0xee8

00011134 <printf@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3808]!	; 0xee0

00011140 <read@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3800]!	; 0xed8

0001114c <fflush@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3792]!	; 0xed0

00011158 <memmove@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3784]!	; 0xec8

00011164 <strchrnul@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3776]!	; 0xec0

00011170 <free@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3768]!	; 0xeb8

0001117c <strndup@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3760]!	; 0xeb0

00011188 <_exit@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3752]!	; 0xea8

00011194 <memcpy@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3744]!	; 0xea0

000111a0 <time@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3736]!	; 0xe98

000111ac <fwrite_unlocked@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3728]!	; 0xe90

000111b8 <sleep@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3720]!	; 0xe88

000111c4 <alarm@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3712]!	; 0xe80

000111d0 <dup2@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3704]!	; 0xe78

000111dc <realloc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3696]!	; 0xe70

000111e8 <initgroups@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3688]!	; 0xe68

000111f4 <chdir@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3680]!	; 0xe60

00011200 <strcasecmp@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3672]!	; 0xe58

0001120c <funlockfile@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3664]!	; 0xe50

00011218 <perror@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3656]!	; 0xe48

00011224 <fwrite@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3648]!	; 0xe40

00011230 <lseek64@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3640]!	; 0xe38

0001123c <open64@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3632]!	; 0xe30

00011248 <getenv@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3624]!	; 0xe28

00011254 <setgid@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3616]!	; 0xe20

00011260 <malloc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3608]!	; 0xe18

0001126c <__libc_start_main@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3600]!	; 0xe10

00011278 <strerror@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3592]!	; 0xe08

00011284 <__ctype_tolower_loc@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3584]!	; 0xe00

00011290 <__gmon_start__@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3576]!	; 0xdf8

0001129c <mempcpy@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3568]!	; 0xdf0

000112a8 <__ctype_b_loc@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3560]!	; 0xde8

000112b4 <getpid@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3552]!	; 0xde0

000112c0 <exit@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3544]!	; 0xdd8

000112cc <strlen@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3536]!	; 0xdd0

000112d8 <strchr@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3528]!	; 0xdc8

000112e4 <fprintf@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3520]!	; 0xdc0

000112f0 <__errno_location@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3512]!	; 0xdb8

000112fc <snprintf@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3504]!	; 0xdb0

00011308 <strerror_r@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3496]!	; 0xda8

00011314 <memset@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3488]!	; 0xda0

00011320 <strncpy@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3480]!	; 0xd98

0001132c <wait3@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3472]!	; 0xd90

00011338 <write@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3464]!	; 0xd88

00011344 <memchr@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3456]!	; 0xd80

00011350 <__overflow@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3448]!	; 0xd78

0001135c <fork@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #94208	; 0x17000
   11364:	ldr	pc, [ip, #3440]!	; 0xd70

00011368 <getnameinfo@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #94208	; 0x17000
   11370:	ldr	pc, [ip, #3432]!	; 0xd68

00011374 <execl@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #94208	; 0x17000
   1137c:	ldr	pc, [ip, #3424]!	; 0xd60

00011380 <strrchr@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #94208	; 0x17000
   11388:	ldr	pc, [ip, #3416]!	; 0xd58

0001138c <vfprintf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #94208	; 0x17000
   11394:	ldr	pc, [ip, #3408]!	; 0xd50

00011398 <crypt@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #94208	; 0x17000
   113a0:	ldr	pc, [ip, #3400]!	; 0xd48

000113a4 <fputc@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #94208	; 0x17000
   113ac:	ldr	pc, [ip, #3392]!	; 0xd40

000113b0 <setuid@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #94208	; 0x17000
   113b8:	ldr	pc, [ip, #3384]!	; 0xd38

000113bc <sprintf@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #94208	; 0x17000
   113c4:	ldr	pc, [ip, #3376]!	; 0xd30

000113c8 <flockfile@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #94208	; 0x17000
   113d0:	ldr	pc, [ip, #3368]!	; 0xd28

000113d4 <vsnprintf@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #94208	; 0x17000
   113dc:	ldr	pc, [ip, #3360]!	; 0xd20

000113e0 <qsort@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #94208	; 0x17000
   113e8:	ldr	pc, [ip, #3352]!	; 0xd18

000113ec <getpeername@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #94208	; 0x17000
   113f4:	ldr	pc, [ip, #3344]!	; 0xd10

000113f8 <strncmp@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #94208	; 0x17000
   11400:	ldr	pc, [ip, #3336]!	; 0xd08

00011404 <abort@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #94208	; 0x17000
   1140c:	ldr	pc, [ip, #3328]!	; 0xd00

00011410 <logwtmp@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #94208	; 0x17000
   11418:	ldr	pc, [ip, #3320]!	; 0xcf8

0001141c <close@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #94208	; 0x17000
   11424:	ldr	pc, [ip, #3312]!	; 0xcf0

00011428 <__assert_fail@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #94208	; 0x17000
   11430:	ldr	pc, [ip, #3304]!	; 0xce8

Disassembly of section .text:

00011434 <argp_parse@@Base-0xcf4>:
   11434:	mov	fp, #0
   11438:	mov	lr, #0
   1143c:	pop	{r1}		; (ldr r1, [sp], #4)
   11440:	mov	r2, sp
   11444:	push	{r2}		; (str r2, [sp, #-4]!)
   11448:	push	{r0}		; (str r0, [sp, #-4]!)
   1144c:	ldr	ip, [pc, #16]	; 11464 <__assert_fail@plt+0x3c>
   11450:	push	{ip}		; (str ip, [sp, #-4]!)
   11454:	ldr	r0, [pc, #12]	; 11468 <__assert_fail@plt+0x40>
   11458:	ldr	r3, [pc, #12]	; 1146c <__assert_fail@plt+0x44>
   1145c:	bl	1126c <__libc_start_main@plt>
   11460:	bl	11404 <abort@plt>
   11464:	andeq	r7, r1, r4, lsl #18
   11468:	andeq	r1, r1, r4, lsr sl
   1146c:	andeq	r7, r1, r4, lsr #17
   11470:	ldr	r3, [pc, #20]	; 1148c <__assert_fail@plt+0x64>
   11474:	ldr	r2, [pc, #20]	; 11490 <__assert_fail@plt+0x68>
   11478:	add	r3, pc, r3
   1147c:	ldr	r2, [r3, r2]
   11480:	cmp	r2, #0
   11484:	bxeq	lr
   11488:	b	11290 <__gmon_start__@plt>
   1148c:	andeq	r7, r1, r0, lsl #23
   11490:	andeq	r0, r0, ip, lsl r1
   11494:	ldr	r3, [pc, #28]	; 114b8 <__assert_fail@plt+0x90>
   11498:	ldr	r0, [pc, #28]	; 114bc <__assert_fail@plt+0x94>
   1149c:	sub	r3, r3, r0
   114a0:	cmp	r3, #6
   114a4:	bxls	lr
   114a8:	ldr	r3, [pc, #16]	; 114c0 <__assert_fail@plt+0x98>
   114ac:	cmp	r3, #0
   114b0:	bxeq	lr
   114b4:	bx	r3
   114b8:	andeq	r9, r2, r7, asr #3
   114bc:	andeq	r9, r2, r4, asr #3
   114c0:	andeq	r0, r0, r0
   114c4:	ldr	r1, [pc, #36]	; 114f0 <__assert_fail@plt+0xc8>
   114c8:	ldr	r0, [pc, #36]	; 114f4 <__assert_fail@plt+0xcc>
   114cc:	sub	r1, r1, r0
   114d0:	asr	r1, r1, #2
   114d4:	add	r1, r1, r1, lsr #31
   114d8:	asrs	r1, r1, #1
   114dc:	bxeq	lr
   114e0:	ldr	r3, [pc, #16]	; 114f8 <__assert_fail@plt+0xd0>
   114e4:	cmp	r3, #0
   114e8:	bxeq	lr
   114ec:	bx	r3
   114f0:	andeq	r9, r2, r4, asr #3
   114f4:	andeq	r9, r2, r4, asr #3
   114f8:	andeq	r0, r0, r0
   114fc:	push	{r4, lr}
   11500:	ldr	r4, [pc, #24]	; 11520 <__assert_fail@plt+0xf8>
   11504:	ldrb	r3, [r4]
   11508:	cmp	r3, #0
   1150c:	popne	{r4, pc}
   11510:	bl	11494 <__assert_fail@plt+0x6c>
   11514:	mov	r3, #1
   11518:	strb	r3, [r4]
   1151c:	pop	{r4, pc}
   11520:	andeq	r9, r2, r0, ror #3
   11524:	ldr	r0, [pc, #40]	; 11554 <__assert_fail@plt+0x12c>
   11528:	ldr	r3, [r0]
   1152c:	cmp	r3, #0
   11530:	bne	11538 <__assert_fail@plt+0x110>
   11534:	b	114c4 <__assert_fail@plt+0x9c>
   11538:	ldr	r3, [pc, #24]	; 11558 <__assert_fail@plt+0x130>
   1153c:	cmp	r3, #0
   11540:	beq	11534 <__assert_fail@plt+0x10c>
   11544:	push	{r4, lr}
   11548:	blx	r3
   1154c:	pop	{r4, lr}
   11550:	b	114c4 <__assert_fail@plt+0x9c>
   11554:	andeq	r8, r2, r4, lsl #30
   11558:	andeq	r0, r0, r0
   1155c:	cmp	r0, #117	; 0x75
   11560:	ldreq	r3, [pc, #12]	; 11574 <__assert_fail@plt+0x14c>
   11564:	streq	r1, [r3]
   11568:	moveq	r0, #0
   1156c:	movne	r0, #7
   11570:	bx	lr
   11574:	andeq	r9, r2, r8, lsr #2
   11578:	cmp	r1, #0
   1157c:	ble	115e8 <__assert_fail@plt+0x1c0>
   11580:	push	{r4, r5, r6, r7, lr}
   11584:	sub	sp, sp, #12
   11588:	mov	r4, r0
   1158c:	add	r5, r0, r1
   11590:	mov	r7, #1
   11594:	mov	r6, #0
   11598:	mov	r2, r7
   1159c:	add	r1, sp, #7
   115a0:	mov	r0, r6
   115a4:	bl	11140 <read@plt>
   115a8:	cmp	r0, #0
   115ac:	ble	115f0 <__assert_fail@plt+0x1c8>
   115b0:	ldrb	r3, [sp, #7]
   115b4:	and	r3, r3, #127	; 0x7f
   115b8:	strb	r3, [sp, #7]
   115bc:	cmp	r3, #13
   115c0:	cmpne	r3, #10
   115c4:	beq	115dc <__assert_fail@plt+0x1b4>
   115c8:	strb	r3, [r4], #1
   115cc:	cmp	r5, r4
   115d0:	bne	11598 <__assert_fail@plt+0x170>
   115d4:	mvn	r0, #0
   115d8:	b	115f4 <__assert_fail@plt+0x1cc>
   115dc:	mov	r0, #0
   115e0:	strb	r0, [r4]
   115e4:	b	115f4 <__assert_fail@plt+0x1cc>
   115e8:	mvn	r0, #0
   115ec:	bx	lr
   115f0:	mvn	r0, #0
   115f4:	add	sp, sp, #12
   115f8:	pop	{r4, r5, r6, r7, pc}
   115fc:	push	{r4, r5, r6, r7, lr}
   11600:	sub	sp, sp, #108	; 0x6c
   11604:	mov	r6, #0
   11608:	mov	r5, #1
   1160c:	ldr	r7, [pc, #64]	; 11654 <__assert_fail@plt+0x22c>
   11610:	ldr	r4, [pc, #64]	; 11658 <__assert_fail@plt+0x230>
   11614:	b	11634 <__assert_fail@plt+0x20c>
   11618:	mov	r1, r7
   1161c:	add	r0, sp, #4
   11620:	bl	113bc <sprintf@plt>
   11624:	mov	r2, r4
   11628:	mov	r1, r4
   1162c:	add	r0, sp, #4
   11630:	bl	11410 <logwtmp@plt>
   11634:	mov	r2, r6
   11638:	mov	r1, r5
   1163c:	mov	r0, r6
   11640:	bl	1132c <wait3@plt>
   11644:	subs	r2, r0, #0
   11648:	bgt	11618 <__assert_fail@plt+0x1f0>
   1164c:	add	sp, sp, #108	; 0x6c
   11650:	pop	{r4, r5, r6, r7, pc}
   11654:	andeq	r7, r1, r4, lsl r9
   11658:	andeq	r8, r1, ip, lsl r5
   1165c:	push	{r4, r5, r6, lr}
   11660:	sub	sp, sp, #2368	; 0x940
   11664:	sub	sp, sp, #8
   11668:	mov	r4, r0
   1166c:	mov	r5, r1
   11670:	mov	r6, r2
   11674:	mov	r3, #0
   11678:	str	r3, [sp, #8]
   1167c:	str	r3, [sp, #4]
   11680:	str	r3, [sp]
   11684:	ldr	r3, [pc, #304]	; 117bc <__assert_fail@plt+0x394>
   11688:	add	r2, sp, #320	; 0x140
   1168c:	mov	r1, r6
   11690:	mov	r0, r5
   11694:	bl	11368 <getnameinfo@plt>
   11698:	cmp	r0, #0
   1169c:	bne	11790 <__assert_fail@plt+0x368>
   116a0:	bl	112b4 <getpid@plt>
   116a4:	add	r3, sp, #1344	; 0x540
   116a8:	add	r3, r3, #8
   116ac:	sub	r3, r3, #4
   116b0:	str	r3, [sp, #16]
   116b4:	mov	r2, r0
   116b8:	ldr	r1, [pc, #256]	; 117c0 <__assert_fail@plt+0x398>
   116bc:	mov	r0, r3
   116c0:	bl	113bc <sprintf@plt>
   116c4:	add	r2, sp, #320	; 0x140
   116c8:	ldr	r1, [r4]
   116cc:	ldr	r0, [sp, #16]
   116d0:	bl	11410 <logwtmp@plt>
   116d4:	mov	r1, #2
   116d8:	ldr	r0, [pc, #228]	; 117c4 <__assert_fail@plt+0x39c>
   116dc:	bl	1123c <open64@plt>
   116e0:	subs	r5, r0, #0
   116e4:	blt	11784 <__assert_fail@plt+0x35c>
   116e8:	add	r0, sp, #24
   116ec:	bl	111a0 <time@plt>
   116f0:	ldr	r3, [sp, #24]
   116f4:	str	r3, [sp, #28]
   116f8:	ldr	r2, [r4, #8]
   116fc:	mov	r6, #292	; 0x124
   11700:	mov	r4, #0
   11704:	str	r4, [sp]
   11708:	mul	r2, r6, r2
   1170c:	mov	r3, r4
   11710:	mov	r0, r5
   11714:	bl	11230 <lseek64@plt>
   11718:	add	r3, sp, #320	; 0x140
   1171c:	str	r3, [sp, #16]
   11720:	add	r3, sp, #1344	; 0x540
   11724:	add	r3, r3, #8
   11728:	sub	r3, r3, #4
   1172c:	str	r3, [sp, #20]
   11730:	mov	r2, #1024	; 0x400
   11734:	ldr	r1, [sp, #16]
   11738:	mov	r0, r3
   1173c:	bl	11320 <strncpy@plt>
   11740:	strb	r4, [sp, #2372]	; 0x944
   11744:	mov	r2, #31
   11748:	ldr	r1, [sp, #20]
   1174c:	add	r0, sp, #32
   11750:	bl	11320 <strncpy@plt>
   11754:	strb	r4, [sp, #63]	; 0x3f
   11758:	mov	r2, #255	; 0xff
   1175c:	ldr	r1, [sp, #16]
   11760:	add	r0, sp, #64	; 0x40
   11764:	bl	11320 <strncpy@plt>
   11768:	strb	r4, [sp, #319]	; 0x13f
   1176c:	mov	r2, r6
   11770:	add	r1, sp, #28
   11774:	mov	r0, r5
   11778:	bl	11338 <write@plt>
   1177c:	mov	r0, r5
   11780:	bl	1141c <close@plt>
   11784:	add	sp, sp, #2368	; 0x940
   11788:	add	sp, sp, #8
   1178c:	pop	{r4, r5, r6, pc}
   11790:	mov	r3, #1
   11794:	str	r3, [sp, #8]
   11798:	mov	r3, #0
   1179c:	str	r3, [sp, #4]
   117a0:	str	r3, [sp]
   117a4:	ldr	r3, [pc, #16]	; 117bc <__assert_fail@plt+0x394>
   117a8:	add	r2, sp, #320	; 0x140
   117ac:	mov	r1, r6
   117b0:	mov	r0, r5
   117b4:	bl	11368 <getnameinfo@plt>
   117b8:	b	116a0 <__assert_fail@plt+0x278>
   117bc:	andeq	r0, r0, r1, lsl #8
   117c0:	andeq	r7, r1, r4, lsl r9
   117c4:	andeq	r7, r1, r0, lsr #18
   117c8:	push	{r4, r5, r6, lr}
   117cc:	sub	sp, sp, #128	; 0x80
   117d0:	mov	r5, r0
   117d4:	mov	r6, r1
   117d8:	mov	r0, #60	; 0x3c
   117dc:	bl	111c4 <alarm@plt>
   117e0:	ldr	r0, [pc, #532]	; 119fc <__assert_fail@plt+0x5d4>
   117e4:	bl	11134 <printf@plt>
   117e8:	ldr	r3, [pc, #528]	; 11a00 <__assert_fail@plt+0x5d8>
   117ec:	ldr	r0, [r3]
   117f0:	bl	1114c <fflush@plt>
   117f4:	mov	r1, #64	; 0x40
   117f8:	add	r0, sp, r1
   117fc:	bl	11578 <__assert_fail@plt+0x150>
   11800:	cmp	r0, #0
   11804:	blt	11870 <__assert_fail@plt+0x448>
   11808:	mov	r3, #0
   1180c:	strb	r3, [sp, #127]	; 0x7f
   11810:	add	r0, sp, #64	; 0x40
   11814:	bl	11110 <getpwnam@plt>
   11818:	subs	r4, r0, #0
   1181c:	beq	1188c <__assert_fail@plt+0x464>
   11820:	ldr	r3, [r4, #4]
   11824:	cmp	r3, #0
   11828:	beq	11838 <__assert_fail@plt+0x410>
   1182c:	ldrb	r3, [r3]
   11830:	cmp	r3, #0
   11834:	bne	118d8 <__assert_fail@plt+0x4b0>
   11838:	ldr	r3, [pc, #452]	; 11a04 <__assert_fail@plt+0x5dc>
   1183c:	ldr	r1, [r3]
   11840:	ldr	r0, [r4, #24]
   11844:	bl	1111c <strcmp@plt>
   11848:	cmp	r0, #0
   1184c:	beq	11954 <__assert_fail@plt+0x52c>
   11850:	ldr	r3, [pc, #432]	; 11a08 <__assert_fail@plt+0x5e0>
   11854:	ldr	r3, [r3]
   11858:	mov	r2, #16
   1185c:	mov	r1, #1
   11860:	ldr	r0, [pc, #420]	; 11a0c <__assert_fail@plt+0x5e4>
   11864:	bl	11224 <fwrite@plt>
   11868:	add	sp, sp, #128	; 0x80
   1186c:	pop	{r4, r5, r6, pc}
   11870:	ldr	r3, [pc, #400]	; 11a08 <__assert_fail@plt+0x5e0>
   11874:	ldr	r3, [r3]
   11878:	mov	r2, #10
   1187c:	mov	r1, #1
   11880:	ldr	r0, [pc, #392]	; 11a10 <__assert_fail@plt+0x5e8>
   11884:	bl	11224 <fwrite@plt>
   11888:	b	11868 <__assert_fail@plt+0x440>
   1188c:	ldr	r0, [pc, #384]	; 11a14 <__assert_fail@plt+0x5ec>
   11890:	bl	11134 <printf@plt>
   11894:	ldr	r3, [pc, #356]	; 11a00 <__assert_fail@plt+0x5d8>
   11898:	ldr	r0, [r3]
   1189c:	bl	1114c <fflush@plt>
   118a0:	mov	r1, #64	; 0x40
   118a4:	mov	r0, sp
   118a8:	bl	11578 <__assert_fail@plt+0x150>
   118ac:	cmp	r0, #0
   118b0:	ldr	r3, [pc, #336]	; 11a08 <__assert_fail@plt+0x5e0>
   118b4:	ldr	r3, [r3]
   118b8:	movlt	r2, #12
   118bc:	movlt	r1, #1
   118c0:	ldrlt	r0, [pc, #336]	; 11a18 <__assert_fail@plt+0x5f0>
   118c4:	movge	r2, #16
   118c8:	movge	r1, #1
   118cc:	ldrge	r0, [pc, #312]	; 11a0c <__assert_fail@plt+0x5e4>
   118d0:	bl	11224 <fwrite@plt>
   118d4:	b	11868 <__assert_fail@plt+0x440>
   118d8:	ldr	r0, [pc, #308]	; 11a14 <__assert_fail@plt+0x5ec>
   118dc:	bl	11134 <printf@plt>
   118e0:	ldr	r3, [pc, #280]	; 11a00 <__assert_fail@plt+0x5d8>
   118e4:	ldr	r0, [r3]
   118e8:	bl	1114c <fflush@plt>
   118ec:	mov	r1, #64	; 0x40
   118f0:	mov	r0, sp
   118f4:	bl	11578 <__assert_fail@plt+0x150>
   118f8:	cmp	r0, #0
   118fc:	blt	11938 <__assert_fail@plt+0x510>
   11900:	ldr	r1, [r4, #4]
   11904:	mov	r0, sp
   11908:	bl	11398 <crypt@plt>
   1190c:	ldr	r1, [r4, #4]
   11910:	bl	1111c <strcmp@plt>
   11914:	cmp	r0, #0
   11918:	beq	11838 <__assert_fail@plt+0x410>
   1191c:	ldr	r3, [pc, #228]	; 11a08 <__assert_fail@plt+0x5e0>
   11920:	ldr	r3, [r3]
   11924:	mov	r2, #16
   11928:	mov	r1, #1
   1192c:	ldr	r0, [pc, #216]	; 11a0c <__assert_fail@plt+0x5e4>
   11930:	bl	11224 <fwrite@plt>
   11934:	b	11868 <__assert_fail@plt+0x440>
   11938:	ldr	r3, [pc, #200]	; 11a08 <__assert_fail@plt+0x5e0>
   1193c:	ldr	r3, [r3]
   11940:	mov	r2, #12
   11944:	mov	r1, #1
   11948:	ldr	r0, [pc, #200]	; 11a18 <__assert_fail@plt+0x5f0>
   1194c:	bl	11224 <fwrite@plt>
   11950:	b	11868 <__assert_fail@plt+0x440>
   11954:	mov	r0, #0
   11958:	bl	111c4 <alarm@plt>
   1195c:	add	r3, sp, #64	; 0x40
   11960:	ldr	r2, [pc, #180]	; 11a1c <__assert_fail@plt+0x5f4>
   11964:	mov	r1, #72	; 0x48
   11968:	ldr	r0, [pc, #176]	; 11a20 <__assert_fail@plt+0x5f8>
   1196c:	bl	112fc <snprintf@plt>
   11970:	add	r3, sp, #64	; 0x40
   11974:	ldr	r2, [pc, #168]	; 11a24 <__assert_fail@plt+0x5fc>
   11978:	mov	r1, #72	; 0x48
   1197c:	ldr	r0, [pc, #164]	; 11a28 <__assert_fail@plt+0x600>
   11980:	bl	112fc <snprintf@plt>
   11984:	mov	r2, r6
   11988:	mov	r1, r5
   1198c:	mov	r0, r4
   11990:	bl	1165c <__assert_fail@plt+0x234>
   11994:	ldr	r0, [r4, #12]
   11998:	bl	11254 <setgid@plt>
   1199c:	ldr	r1, [r4, #12]
   119a0:	ldr	r0, [r4]
   119a4:	bl	111e8 <initgroups@plt>
   119a8:	ldr	r0, [r4, #20]
   119ac:	bl	111f4 <chdir@plt>
   119b0:	cmp	r0, #0
   119b4:	blt	119e0 <__assert_fail@plt+0x5b8>
   119b8:	ldr	r0, [r4, #8]
   119bc:	bl	113b0 <setuid@plt>
   119c0:	mov	r2, #0
   119c4:	ldr	r1, [pc, #96]	; 11a2c <__assert_fail@plt+0x604>
   119c8:	ldr	r3, [pc, #52]	; 11a04 <__assert_fail@plt+0x5dc>
   119cc:	ldr	r0, [r3]
   119d0:	bl	11374 <execl@plt>
   119d4:	ldr	r0, [pc, #84]	; 11a30 <__assert_fail@plt+0x608>
   119d8:	bl	11218 <perror@plt>
   119dc:	b	11868 <__assert_fail@plt+0x440>
   119e0:	ldr	r3, [pc, #32]	; 11a08 <__assert_fail@plt+0x5e0>
   119e4:	ldr	r3, [r3]
   119e8:	mov	r2, #16
   119ec:	mov	r1, #1
   119f0:	ldr	r0, [pc, #20]	; 11a0c <__assert_fail@plt+0x5e4>
   119f4:	bl	11224 <fwrite@plt>
   119f8:	b	11868 <__assert_fail@plt+0x440>
   119fc:	andeq	r7, r1, r4, lsr r9
   11a00:	ldrdeq	r9, [r2], -ip
   11a04:	andeq	r9, r2, r8, lsr #2
   11a08:	ldrdeq	r9, [r2], -r8
   11a0c:	andeq	r7, r1, r4, ror #18
   11a10:	andeq	r7, r1, ip, lsr r9
   11a14:	andeq	r7, r1, r8, asr #18
   11a18:	andeq	r7, r1, r4, asr r9
   11a1c:	andeq	r7, r1, r8, ror r9
   11a20:	andeq	r9, r2, r8, ror #4
   11a24:	andeq	r7, r1, r0, lsl #19
   11a28:	andeq	r9, r2, ip, lsl r2
   11a2c:	andeq	r7, r1, ip, asr #20
   11a30:	andeq	r7, r1, ip, lsl #19
   11a34:	push	{r4, r5, r6, r7, r8, lr}
   11a38:	sub	sp, sp, #144	; 0x90
   11a3c:	mov	r8, r0
   11a40:	mov	r6, r1
   11a44:	mov	r7, #128	; 0x80
   11a48:	str	r7, [sp, #12]
   11a4c:	ldr	r0, [r1]
   11a50:	bl	12e2c <argp_parse@@Base+0xd04>
   11a54:	ldr	r2, [pc, #192]	; 11b1c <__assert_fail@plt+0x6f4>
   11a58:	ldr	r3, [pc, #192]	; 11b20 <__assert_fail@plt+0x6f8>
   11a5c:	str	r2, [r3]
   11a60:	ldr	r1, [pc, #188]	; 11b24 <__assert_fail@plt+0x6fc>
   11a64:	ldr	r0, [pc, #188]	; 11b28 <__assert_fail@plt+0x700>
   11a68:	bl	12c34 <argp_parse@@Base+0xb0c>
   11a6c:	ldr	r5, [pc, #184]	; 11b2c <__assert_fail@plt+0x704>
   11a70:	mov	r4, #0
   11a74:	str	r4, [sp, #4]
   11a78:	str	r4, [sp]
   11a7c:	mov	r3, r4
   11a80:	mov	r2, r6
   11a84:	mov	r1, r8
   11a88:	add	r0, r5, #4
   11a8c:	bl	12128 <argp_parse@@Base>
   11a90:	add	r5, r5, #32
   11a94:	ldr	r3, [pc, #148]	; 11b30 <__assert_fail@plt+0x708>
   11a98:	str	r5, [r3]
   11a9c:	mov	r1, #1
   11aa0:	mov	r0, r4
   11aa4:	bl	111d0 <dup2@plt>
   11aa8:	mov	r1, #2
   11aac:	mov	r0, r4
   11ab0:	bl	111d0 <dup2@plt>
   11ab4:	str	r7, [sp, #12]
   11ab8:	add	r2, sp, #12
   11abc:	add	r1, sp, #16
   11ac0:	mov	r0, r4
   11ac4:	bl	113ec <getpeername@plt>
   11ac8:	cmp	r0, r4
   11acc:	blt	11ae8 <__assert_fail@plt+0x6c0>
   11ad0:	bl	1135c <fork@plt>
   11ad4:	cmp	r0, #0
   11ad8:	beq	11b0c <__assert_fail@plt+0x6e4>
   11adc:	bl	115fc <__assert_fail@plt+0x1d4>
   11ae0:	mov	r0, #1
   11ae4:	bl	112c0 <exit@plt>
   11ae8:	ldr	r2, [r6]
   11aec:	ldr	r1, [pc, #64]	; 11b34 <__assert_fail@plt+0x70c>
   11af0:	ldr	r3, [pc, #64]	; 11b38 <__assert_fail@plt+0x710>
   11af4:	ldr	r0, [r3]
   11af8:	bl	112e4 <fprintf@plt>
   11afc:	ldr	r0, [pc, #56]	; 11b3c <__assert_fail@plt+0x714>
   11b00:	bl	11218 <perror@plt>
   11b04:	mov	r0, #1
   11b08:	bl	11188 <_exit@plt>
   11b0c:	ldr	r1, [sp, #12]
   11b10:	add	r0, sp, #16
   11b14:	bl	117c8 <__assert_fail@plt+0x3a0>
   11b18:	b	11adc <__assert_fail@plt+0x6b4>
   11b1c:	andeq	r7, r1, r4, lsr #19
   11b20:			; <UNDEFINED> instruction: 0x000292b0
   11b24:	andeq	r9, r2, r4, lsl #3
   11b28:			; <UNDEFINED> instruction: 0x000179bc
   11b2c:	andeq	r9, r2, r8, lsr #2
   11b30:	andeq	r9, r2, ip, asr #3
   11b34:	andeq	r7, r1, r4, asr #19
   11b38:	ldrdeq	r9, [r2], -r8
   11b3c:	andeq	r7, r1, ip, asr #19
   11b40:	ldr	ip, [r0]
   11b44:	cmp	ip, #0
   11b48:	beq	11b9c <__assert_fail@plt+0x774>
   11b4c:	push	{r4, r5, r6, lr}
   11b50:	mov	ip, r2
   11b54:	mov	r5, r1
   11b58:	mov	r4, r0
   11b5c:	ldr	r2, [r0, #32]
   11b60:	str	r2, [r1, #36]	; 0x24
   11b64:	ldr	r2, [r0, #24]
   11b68:	str	r2, [r1, #28]
   11b6c:	ldr	r2, [r0, #28]
   11b70:	str	r2, [r1, #32]
   11b74:	ldr	r2, [r0, #12]
   11b78:	str	r2, [r1, #20]
   11b7c:	ldr	r6, [r0]
   11b80:	mov	r2, r1
   11b84:	mov	r1, r3
   11b88:	mov	r0, ip
   11b8c:	blx	r6
   11b90:	ldr	r3, [r5, #36]	; 0x24
   11b94:	str	r3, [r4, #32]
   11b98:	pop	{r4, r5, r6, pc}
   11b9c:	mov	r0, #7
   11ba0:	bx	lr
   11ba4:	push	{r4, r5, r6, lr}
   11ba8:	ldr	r5, [r0, #16]
   11bac:	ldr	r3, [r0]
   11bb0:	cmp	r3, #0
   11bb4:	beq	11bcc <__assert_fail@plt+0x7a4>
   11bb8:	ldr	r2, [r1, #8]
   11bbc:	add	r2, r2, #1
   11bc0:	str	r2, [r1, #8]
   11bc4:	mov	r2, #0
   11bc8:	b	11c20 <__assert_fail@plt+0x7f8>
   11bcc:	ldr	r3, [r0, #4]
   11bd0:	cmp	r3, #0
   11bd4:	ldrne	r3, [r1, #8]
   11bd8:	addne	r3, r3, #1
   11bdc:	strne	r3, [r1, #8]
   11be0:	cmp	r5, #0
   11be4:	popeq	{r4, r5, r6, pc}
   11be8:	ldr	r0, [r5]
   11bec:	cmp	r0, #0
   11bf0:	popeq	{r4, r5, r6, pc}
   11bf4:	mov	r4, r1
   11bf8:	mov	r1, r4
   11bfc:	bl	11ba4 <__assert_fail@plt+0x77c>
   11c00:	ldr	r3, [r4, #12]
   11c04:	add	r3, r3, #1
   11c08:	str	r3, [r4, #12]
   11c0c:	ldr	r0, [r5, #16]!
   11c10:	cmp	r0, #0
   11c14:	bne	11bf8 <__assert_fail@plt+0x7d0>
   11c18:	pop	{r4, r5, r6, pc}
   11c1c:	add	r2, r2, #1
   11c20:	add	r3, r3, #24
   11c24:	ldr	r0, [r3, #-20]	; 0xffffffec
   11c28:	cmp	r0, #0
   11c2c:	bne	11c1c <__assert_fail@plt+0x7f4>
   11c30:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11c34:	cmp	r0, #0
   11c38:	bne	11c1c <__assert_fail@plt+0x7f4>
   11c3c:	ldr	r0, [r3, #-8]
   11c40:	cmp	r0, #0
   11c44:	bne	11c1c <__assert_fail@plt+0x7f4>
   11c48:	ldr	r0, [r3, #-4]
   11c4c:	cmp	r0, #0
   11c50:	bne	11c1c <__assert_fail@plt+0x7f4>
   11c54:	add	r0, r2, r2, lsl #1
   11c58:	ldr	r3, [r1]
   11c5c:	add	r3, r3, r0
   11c60:	str	r3, [r1]
   11c64:	ldr	r3, [r1, #4]
   11c68:	add	r2, r3, r2
   11c6c:	str	r2, [r1, #4]
   11c70:	b	11be0 <__assert_fail@plt+0x7b8>
   11c74:	cmp	r0, #86	; 0x56
   11c78:	beq	11c84 <__assert_fail@plt+0x85c>
   11c7c:	mov	r0, #7
   11c80:	bx	lr
   11c84:	push	{r4, lr}
   11c88:	mov	r4, r2
   11c8c:	ldr	r3, [pc, #100]	; 11cf8 <__assert_fail@plt+0x8d0>
   11c90:	ldr	r3, [r3]
   11c94:	cmp	r3, #0
   11c98:	beq	11cbc <__assert_fail@plt+0x894>
   11c9c:	mov	r1, r2
   11ca0:	ldr	r0, [r2, #48]	; 0x30
   11ca4:	blx	r3
   11ca8:	ldr	r3, [r4, #16]
   11cac:	tst	r3, #32
   11cb0:	beq	11cf0 <__assert_fail@plt+0x8c8>
   11cb4:	mov	r0, #0
   11cb8:	pop	{r4, pc}
   11cbc:	ldr	r3, [pc, #56]	; 11cfc <__assert_fail@plt+0x8d4>
   11cc0:	ldr	r2, [r3]
   11cc4:	cmp	r2, #0
   11cc8:	beq	11cdc <__assert_fail@plt+0x8b4>
   11ccc:	ldr	r1, [pc, #44]	; 11d00 <__assert_fail@plt+0x8d8>
   11cd0:	ldr	r0, [r4, #48]	; 0x30
   11cd4:	bl	112e4 <fprintf@plt>
   11cd8:	b	11ca8 <__assert_fail@plt+0x880>
   11cdc:	ldr	r2, [pc, #32]	; 11d04 <__assert_fail@plt+0x8dc>
   11ce0:	ldr	r1, [pc, #32]	; 11d08 <__assert_fail@plt+0x8e0>
   11ce4:	mov	r0, r4
   11ce8:	bl	163b4 <argp_error@@Base>
   11cec:	b	11ca8 <__assert_fail@plt+0x880>
   11cf0:	mov	r0, #0
   11cf4:	bl	112c0 <exit@plt>
   11cf8:	andeq	r9, r2, r8, ror #3
   11cfc:			; <UNDEFINED> instruction: 0x000292b4
   11d00:	andeq	r7, r1, r8, lsl sp
   11d04:	andeq	r7, r1, ip, ror fp
   11d08:	andeq	r7, r1, r8, lsl #19
   11d0c:	push	{r4, r5, r6, lr}
   11d10:	mov	r4, r2
   11d14:	cmn	r0, #3
   11d18:	beq	11db4 <__assert_fail@plt+0x98c>
   11d1c:	mov	r5, r1
   11d20:	ble	11d4c <__assert_fail@plt+0x924>
   11d24:	cmn	r0, #2
   11d28:	beq	11dcc <__assert_fail@plt+0x9a4>
   11d2c:	cmp	r0, #63	; 0x3f
   11d30:	bne	11e10 <__assert_fail@plt+0x9e8>
   11d34:	ldr	r2, [pc, #228]	; 11e20 <__assert_fail@plt+0x9f8>
   11d38:	ldr	r1, [r4, #48]	; 0x30
   11d3c:	mov	r0, r4
   11d40:	bl	162f8 <argp_state_help@@Base>
   11d44:	mov	r0, #0
   11d48:	pop	{r4, r5, r6, pc}
   11d4c:	cmn	r0, #4
   11d50:	bne	11e10 <__assert_fail@plt+0x9e8>
   11d54:	mov	r2, #10
   11d58:	mov	r1, #0
   11d5c:	ldr	r0, [pc, #192]	; 11e24 <__assert_fail@plt+0x9fc>
   11d60:	cmp	r5, r1
   11d64:	movne	r0, r5
   11d68:	bl	11128 <strtol@plt>
   11d6c:	ldr	r3, [pc, #180]	; 11e28 <__assert_fail@plt+0xa00>
   11d70:	str	r0, [r3]
   11d74:	ldr	r2, [r3]
   11d78:	sub	r1, r2, #1
   11d7c:	str	r1, [r3]
   11d80:	cmp	r2, #0
   11d84:	ble	11e18 <__assert_fail@plt+0x9f0>
   11d88:	mov	r5, #1
   11d8c:	mov	r4, r3
   11d90:	mov	r0, r5
   11d94:	bl	111b8 <sleep@plt>
   11d98:	ldr	r3, [r4]
   11d9c:	sub	r2, r3, #1
   11da0:	str	r2, [r4]
   11da4:	cmp	r3, #0
   11da8:	bgt	11d90 <__assert_fail@plt+0x968>
   11dac:	mov	r0, #0
   11db0:	pop	{r4, r5, r6, pc}
   11db4:	ldr	r2, [pc, #112]	; 11e2c <__assert_fail@plt+0xa04>
   11db8:	ldr	r1, [r4, #48]	; 0x30
   11dbc:	mov	r0, r4
   11dc0:	bl	162f8 <argp_state_help@@Base>
   11dc4:	mov	r0, #0
   11dc8:	pop	{r4, r5, r6, pc}
   11dcc:	ldr	r3, [pc, #92]	; 11e30 <__assert_fail@plt+0xa08>
   11dd0:	str	r1, [r3]
   11dd4:	mov	r0, r1
   11dd8:	bl	12c5c <argp_parse@@Base+0xb34>
   11ddc:	str	r0, [r4, #40]	; 0x28
   11de0:	ldr	r3, [pc, #76]	; 11e34 <__assert_fail@plt+0xa0c>
   11de4:	str	r0, [r3]
   11de8:	ldr	r3, [r4, #16]
   11dec:	and	r3, r3, #3
   11df0:	cmp	r3, #1
   11df4:	beq	11e00 <__assert_fail@plt+0x9d8>
   11df8:	mov	r0, #0
   11dfc:	pop	{r4, r5, r6, pc}
   11e00:	ldr	r3, [r4, #8]
   11e04:	str	r5, [r3]
   11e08:	mov	r0, #0
   11e0c:	pop	{r4, r5, r6, pc}
   11e10:	mov	r0, #7
   11e14:	pop	{r4, r5, r6, pc}
   11e18:	mov	r0, #0
   11e1c:	pop	{r4, r5, r6, pc}
   11e20:	andeq	r0, r0, sl, ror r2
   11e24:	andeq	r7, r1, r0, lsr #23
   11e28:	andeq	r9, r2, r4, ror #3
   11e2c:	andeq	r0, r0, r1, lsl #4
   11e30:	ldrdeq	r9, [r2], -r0
   11e34:	andeq	r9, r2, r8, asr #3
   11e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e3c:	sub	sp, sp, #36	; 0x24
   11e40:	str	r0, [sp, #12]
   11e44:	str	r1, [sp, #16]
   11e48:	str	r2, [sp, #20]
   11e4c:	mov	r8, r3
   11e50:	ldr	sl, [sp, #72]	; 0x48
   11e54:	ldr	r9, [r0]
   11e58:	ldr	r5, [r0, #16]
   11e5c:	cmp	r9, #0
   11e60:	addne	r6, r9, #24
   11e64:	strne	r5, [sp, #28]
   11e68:	strne	r8, [sp, #24]
   11e6c:	bne	11f78 <__assert_fail@plt+0xb50>
   11e70:	ldr	r3, [sp, #12]
   11e74:	ldr	r3, [r3, #4]
   11e78:	cmp	r3, #0
   11e7c:	moveq	r0, r8
   11e80:	moveq	r8, #0
   11e84:	beq	11f04 <__assert_fail@plt+0xadc>
   11e88:	ldr	r2, [sp, #12]
   11e8c:	ldr	r3, [r2, #4]
   11e90:	str	r3, [r8]
   11e94:	str	r2, [r8, #4]
   11e98:	ldr	r3, [sl, #4]
   11e9c:	str	r3, [r8, #8]
   11ea0:	mov	r3, #0
   11ea4:	str	r3, [r8, #12]
   11ea8:	ldr	r2, [sp, #16]
   11eac:	str	r2, [r8, #16]
   11eb0:	ldr	r2, [sp, #20]
   11eb4:	str	r2, [r8, #20]
   11eb8:	str	r3, [r8, #24]
   11ebc:	str	r3, [r8, #32]
   11ec0:	str	r3, [r8, #28]
   11ec4:	cmp	r5, r3
   11ec8:	beq	11f00 <__assert_fail@plt+0xad8>
   11ecc:	ldr	r3, [r5]
   11ed0:	cmp	r3, #0
   11ed4:	beq	12120 <__assert_fail@plt+0xcf8>
   11ed8:	mov	r3, #0
   11edc:	add	r3, r3, #1
   11ee0:	ldr	r2, [r5, r3, lsl #4]
   11ee4:	cmp	r2, #0
   11ee8:	bne	11edc <__assert_fail@plt+0xab4>
   11eec:	ldr	r2, [sl, #12]
   11ef0:	str	r2, [r8, #28]
   11ef4:	ldr	r2, [sl, #12]
   11ef8:	add	r3, r2, r3, lsl #2
   11efc:	str	r3, [sl, #12]
   11f00:	add	r0, r8, #36	; 0x24
   11f04:	cmp	r5, #0
   11f08:	beq	11f44 <__assert_fail@plt+0xb1c>
   11f0c:	ldr	ip, [r5]
   11f10:	cmp	ip, #0
   11f14:	beq	11f44 <__assert_fail@plt+0xb1c>
   11f18:	mov	r2, #0
   11f1c:	add	r4, r2, #1
   11f20:	str	sl, [sp]
   11f24:	mov	r3, r0
   11f28:	mov	r1, r8
   11f2c:	mov	r0, ip
   11f30:	bl	11e38 <__assert_fail@plt+0xa10>
   11f34:	ldr	ip, [r5, r4, lsl #4]
   11f38:	mov	r2, r4
   11f3c:	cmp	ip, #0
   11f40:	bne	11f1c <__assert_fail@plt+0xaf4>
   11f44:	add	sp, sp, #36	; 0x24
   11f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f4c:	ldr	r0, [r4, #16]!
   11f50:	cmp	r0, #0
   11f54:	beq	12060 <__assert_fail@plt+0xc38>
   11f58:	mov	r1, r7
   11f5c:	bl	1111c <strcmp@plt>
   11f60:	cmp	r0, #0
   11f64:	bne	11f4c <__assert_fail@plt+0xb24>
   11f68:	sub	r4, r4, fp
   11f6c:	cmn	r4, #15
   11f70:	blt	12060 <__assert_fail@plt+0xc38>
   11f74:	add	r6, r6, #24
   11f78:	sub	r2, r6, #24
   11f7c:	mov	r8, r6
   11f80:	ldr	r4, [r6, #-20]	; 0xffffffec
   11f84:	cmp	r4, #0
   11f88:	bne	11f98 <__assert_fail@plt+0xb70>
   11f8c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   11f90:	cmp	r3, #0
   11f94:	beq	120fc <__assert_fail@plt+0xcd4>
   11f98:	ldr	r3, [r8, #-12]
   11f9c:	and	r1, r3, #4
   11fa0:	cmp	r1, #0
   11fa4:	moveq	r9, r2
   11fa8:	ldr	r5, [r9, #12]
   11fac:	ands	r5, r5, #8
   11fb0:	bne	11f74 <__assert_fail@plt+0xb4c>
   11fb4:	tst	r3, #8
   11fb8:	bne	1203c <__assert_fail@plt+0xc14>
   11fbc:	sub	r3, r4, #1
   11fc0:	cmp	r3, #254	; 0xfe
   11fc4:	bhi	1203c <__assert_fail@plt+0xc14>
   11fc8:	bl	112a8 <__ctype_b_loc@plt>
   11fcc:	ldr	r3, [r0]
   11fd0:	lsl	r4, r4, #1
   11fd4:	ldrh	r3, [r3, r4]
   11fd8:	tst	r3, #16384	; 0x4000
   11fdc:	beq	1203c <__assert_fail@plt+0xc14>
   11fe0:	ldr	r3, [sl, #4]
   11fe4:	add	r2, r3, #1
   11fe8:	str	r2, [sl, #4]
   11fec:	ldr	r2, [r8, #-20]	; 0xffffffec
   11ff0:	strb	r2, [r3]
   11ff4:	ldr	r3, [r9, #8]
   11ff8:	cmp	r3, #0
   11ffc:	beq	12030 <__assert_fail@plt+0xc08>
   12000:	ldr	r3, [sl, #4]
   12004:	add	r2, r3, #1
   12008:	str	r2, [sl, #4]
   1200c:	mov	r2, #58	; 0x3a
   12010:	strb	r2, [r3]
   12014:	ldr	r3, [r9, #12]
   12018:	tst	r3, #1
   1201c:	ldrne	r3, [sl, #4]
   12020:	addne	r2, r3, #1
   12024:	strne	r2, [sl, #4]
   12028:	movne	r2, #58	; 0x3a
   1202c:	strbne	r2, [r3]
   12030:	ldr	r3, [sl, #4]
   12034:	mov	r2, #0
   12038:	strb	r2, [r3]
   1203c:	ldr	r7, [r8, #-24]	; 0xffffffe8
   12040:	cmp	r7, #0
   12044:	beq	11f74 <__assert_fail@plt+0xb4c>
   12048:	ldr	r3, [sl]
   1204c:	ldr	fp, [r3, #8]
   12050:	ldr	r0, [fp]
   12054:	cmp	r0, #0
   12058:	movne	r4, fp
   1205c:	bne	11f58 <__assert_fail@plt+0xb30>
   12060:	ldr	r3, [sl, #8]
   12064:	str	r7, [r3]
   12068:	ldr	r3, [sl, #8]
   1206c:	ldr	r2, [r9, #8]
   12070:	cmp	r2, #0
   12074:	beq	1208c <__assert_fail@plt+0xc64>
   12078:	ldr	r5, [r9, #12]
   1207c:	and	r5, r5, #1
   12080:	cmp	r5, #0
   12084:	movne	r5, #2
   12088:	moveq	r5, #1
   1208c:	str	r5, [r3, #4]
   12090:	ldr	r3, [sl, #8]
   12094:	mov	r2, #0
   12098:	str	r2, [r3, #8]
   1209c:	ldr	r1, [sl, #8]
   120a0:	ldr	r0, [r8, #-20]	; 0xffffffec
   120a4:	cmp	r0, r2
   120a8:	ldreq	r0, [r9, #4]
   120ac:	bic	r0, r0, #-16777216	; 0xff000000
   120b0:	ldr	r3, [sl]
   120b4:	ldr	r3, [r3, #48]	; 0x30
   120b8:	ldr	r2, [sp, #24]
   120bc:	sub	r3, r2, r3
   120c0:	asr	r3, r3, #2
   120c4:	rsb	r2, r3, r3, lsl #3
   120c8:	add	r2, r2, r2, lsl #6
   120cc:	add	r2, r3, r2, lsl #3
   120d0:	rsb	r2, r2, r2, lsl #15
   120d4:	add	r3, r3, r2, lsl #3
   120d8:	add	r3, r3, #1
   120dc:	add	r3, r0, r3, lsl #24
   120e0:	str	r3, [r1, #12]
   120e4:	ldr	r3, [sl, #8]
   120e8:	add	r2, r3, #16
   120ec:	str	r2, [sl, #8]
   120f0:	mov	r2, #0
   120f4:	str	r2, [r3, #16]
   120f8:	b	11f74 <__assert_fail@plt+0xb4c>
   120fc:	ldr	r3, [r6, #-8]
   12100:	cmp	r3, #0
   12104:	bne	11f98 <__assert_fail@plt+0xb70>
   12108:	ldr	r3, [r6, #-4]
   1210c:	cmp	r3, #0
   12110:	bne	11f98 <__assert_fail@plt+0xb70>
   12114:	ldr	r5, [sp, #28]
   12118:	ldr	r8, [sp, #24]
   1211c:	b	11e88 <__assert_fail@plt+0xa60>
   12120:	mov	r3, #0
   12124:	b	11eec <__assert_fail@plt+0xac4>

00012128 <argp_parse@@Base>:
   12128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1212c:	add	fp, sp, #32
   12130:	sub	sp, sp, #220	; 0xdc
   12134:	mov	r8, r0
   12138:	str	r1, [fp, #-236]	; 0xffffff14
   1213c:	str	r2, [fp, #-232]	; 0xffffff18
   12140:	mov	r6, r3
   12144:	tst	r3, #1
   12148:	bne	12178 <argp_parse@@Base+0x50>
   1214c:	ldr	r3, [pc, #2548]	; 12b48 <argp_parse@@Base+0xa20>
   12150:	ldr	r3, [r3]
   12154:	cmp	r3, #0
   12158:	moveq	r3, r2
   1215c:	ldreq	r2, [r3]
   12160:	ldreq	r3, [pc, #2528]	; 12b48 <argp_parse@@Base+0xa20>
   12164:	streq	r2, [r3]
   12168:	ldr	r3, [pc, #2524]	; 12b4c <argp_parse@@Base+0xa24>
   1216c:	ldr	r3, [r3]
   12170:	cmp	r3, #0
   12174:	beq	12368 <argp_parse@@Base+0x240>
   12178:	tst	r6, #16
   1217c:	beq	12380 <argp_parse@@Base+0x258>
   12180:	mov	r2, #36	; 0x24
   12184:	mov	r1, #0
   12188:	sub	r0, fp, #196	; 0xc4
   1218c:	bl	11314 <memset@plt>
   12190:	ands	r3, r6, #4
   12194:	str	r3, [fp, #-240]	; 0xffffff10
   12198:	moveq	r3, #1
   1219c:	movne	r3, #0
   121a0:	str	r3, [fp, #-228]	; 0xffffff1c
   121a4:	mov	r3, #0
   121a8:	str	r3, [fp, #-224]	; 0xffffff20
   121ac:	str	r3, [fp, #-220]	; 0xffffff24
   121b0:	str	r3, [fp, #-216]	; 0xffffff28
   121b4:	cmp	r8, r3
   121b8:	beq	121c8 <argp_parse@@Base+0xa0>
   121bc:	sub	r1, fp, #228	; 0xe4
   121c0:	mov	r0, r8
   121c4:	bl	11ba4 <__assert_fail@plt+0x77c>
   121c8:	ldr	r4, [fp, #-220]	; 0xffffff24
   121cc:	add	r4, r4, #1
   121d0:	add	r4, r4, r4, lsl #3
   121d4:	lsl	r4, r4, #2
   121d8:	ldr	r9, [fp, #-216]	; 0xffffff28
   121dc:	lsl	r9, r9, #2
   121e0:	add	sl, r9, r4
   121e4:	ldr	r5, [fp, #-224]	; 0xffffff20
   121e8:	add	r5, r5, #1
   121ec:	add	r5, sl, r5, lsl #4
   121f0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   121f4:	add	r0, r0, #1
   121f8:	add	r0, r0, r5
   121fc:	bl	13304 <argp_parse@@Base+0x11dc>
   12200:	mov	r7, r0
   12204:	str	r0, [fp, #-40]	; 0xffffffd8
   12208:	cmp	r0, #0
   1220c:	moveq	r4, #12
   12210:	beq	12998 <argp_parse@@Base+0x870>
   12214:	str	r0, [fp, #-112]	; 0xffffff90
   12218:	add	r4, r0, r4
   1221c:	str	r4, [fp, #-104]	; 0xffffff98
   12220:	add	r3, r0, sl
   12224:	str	r3, [fp, #-244]	; 0xffffff0c
   12228:	str	r3, [fp, #-152]	; 0xffffff68
   1222c:	add	sl, r0, r5
   12230:	str	sl, [fp, #-156]	; 0xffffff64
   12234:	mov	r3, #1
   12238:	str	r3, [fp, #-196]	; 0xffffff3c
   1223c:	str	r3, [fp, #-192]	; 0xffffff40
   12240:	sub	ip, fp, #148	; 0x94
   12244:	sub	lr, fp, #196	; 0xc4
   12248:	ldm	lr!, {r0, r1, r2, r3}
   1224c:	stmia	ip!, {r0, r1, r2, r3}
   12250:	ldm	lr!, {r0, r1, r2, r3}
   12254:	stmia	ip!, {r0, r1, r2, r3}
   12258:	ldr	r3, [lr]
   1225c:	str	r3, [ip]
   12260:	mov	r2, r9
   12264:	mov	r1, #0
   12268:	mov	r0, r4
   1226c:	bl	11314 <memset@plt>
   12270:	sub	r3, fp, #160	; 0xa0
   12274:	str	r3, [fp, #-212]	; 0xffffff2c
   12278:	str	sl, [fp, #-208]	; 0xffffff30
   1227c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12280:	str	r3, [fp, #-204]	; 0xffffff34
   12284:	str	r4, [fp, #-200]	; 0xffffff38
   12288:	tst	r6, #8
   1228c:	beq	12418 <argp_parse@@Base+0x2f0>
   12290:	add	sl, sl, #1
   12294:	str	sl, [fp, #-208]	; 0xffffff30
   12298:	mov	r3, #45	; 0x2d
   1229c:	strb	r3, [r7, r5]
   122a0:	mov	r3, #0
   122a4:	ldr	r2, [fp, #-208]	; 0xffffff30
   122a8:	strb	r3, [r2]
   122ac:	ldr	r2, [fp, #-204]	; 0xffffff34
   122b0:	str	r3, [r2]
   122b4:	str	r8, [fp, #-160]	; 0xffffff60
   122b8:	cmp	r8, r3
   122bc:	beq	12434 <argp_parse@@Base+0x30c>
   122c0:	sub	r3, fp, #212	; 0xd4
   122c4:	str	r3, [sp]
   122c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   122cc:	mov	r2, #0
   122d0:	mov	r1, r2
   122d4:	mov	r0, r8
   122d8:	bl	11e38 <__assert_fail@plt+0xa10>
   122dc:	str	r0, [fp, #-108]	; 0xffffff94
   122e0:	mov	r2, #56	; 0x38
   122e4:	mov	r1, #0
   122e8:	sub	r0, fp, #96	; 0x60
   122ec:	bl	11314 <memset@plt>
   122f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   122f4:	str	r3, [fp, #-96]	; 0xffffffa0
   122f8:	ldr	r3, [fp, #-236]	; 0xffffff14
   122fc:	str	r3, [fp, #-92]	; 0xffffffa4
   12300:	ldr	r3, [fp, #-232]	; 0xffffff18
   12304:	str	r3, [fp, #-88]	; 0xffffffa8
   12308:	str	r6, [fp, #-80]	; 0xffffffb0
   1230c:	ldr	r3, [pc, #2108]	; 12b50 <argp_parse@@Base+0xa28>
   12310:	ldr	r3, [r3]
   12314:	str	r3, [fp, #-52]	; 0xffffffcc
   12318:	ldr	r3, [pc, #2100]	; 12b54 <argp_parse@@Base+0xa2c>
   1231c:	ldr	r3, [r3]
   12320:	str	r3, [fp, #-48]	; 0xffffffd0
   12324:	sub	r3, fp, #160	; 0xa0
   12328:	str	r3, [fp, #-44]	; 0xffffffd4
   1232c:	mov	r3, #1
   12330:	str	r3, [fp, #-100]	; 0xffffff9c
   12334:	ldr	r3, [fp, #-112]	; 0xffffff90
   12338:	ldr	r2, [fp, #-108]	; 0xffffff94
   1233c:	cmp	r3, r2
   12340:	bcs	124cc <argp_parse@@Base+0x3a4>
   12344:	ldr	r2, [fp, #8]
   12348:	str	r2, [r3, #24]
   1234c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12350:	ldr	r3, [fp, #-108]	; 0xffffff94
   12354:	cmp	r5, r3
   12358:	bcs	124d8 <argp_parse@@Base+0x3b0>
   1235c:	ldr	r7, [pc, #2036]	; 12b58 <argp_parse@@Base+0xa30>
   12360:	mov	r6, #0
   12364:	b	12470 <argp_parse@@Base+0x348>
   12368:	ldr	r3, [fp, #-232]	; 0xffffff18
   1236c:	ldr	r0, [r3]
   12370:	bl	12c5c <argp_parse@@Base+0xb34>
   12374:	ldr	r3, [pc, #2000]	; 12b4c <argp_parse@@Base+0xa24>
   12378:	str	r0, [r3]
   1237c:	b	12178 <argp_parse@@Base+0x50>
   12380:	sub	sp, sp, #72	; 0x48
   12384:	add	r5, sp, #8
   12388:	sub	sp, sp, #40	; 0x28
   1238c:	add	r4, sp, #8
   12390:	mov	r1, #0
   12394:	str	r1, [r4]
   12398:	str	r1, [r4, #4]
   1239c:	str	r1, [r4, #8]
   123a0:	str	r1, [r4, #12]
   123a4:	str	r1, [r4, #20]
   123a8:	str	r1, [r4, #24]
   123ac:	str	r5, [r4, #16]
   123b0:	mov	r2, #64	; 0x40
   123b4:	mov	r0, r5
   123b8:	bl	11314 <memset@plt>
   123bc:	cmp	r8, #0
   123c0:	addne	r3, r5, #16
   123c4:	strne	r8, [r5]
   123c8:	moveq	r3, r5
   123cc:	ldr	r2, [pc, #1928]	; 12b5c <argp_parse@@Base+0xa34>
   123d0:	str	r2, [r3]
   123d4:	ldr	r2, [pc, #1924]	; 12b60 <argp_parse@@Base+0xa38>
   123d8:	ldr	r2, [r2]
   123dc:	cmp	r2, #0
   123e0:	beq	12400 <argp_parse@@Base+0x2d8>
   123e4:	add	r2, r3, #32
   123e8:	ldr	r1, [pc, #1908]	; 12b64 <argp_parse@@Base+0xa3c>
   123ec:	str	r1, [r3, #16]
   123f0:	mov	r3, #0
   123f4:	str	r3, [r2]
   123f8:	mov	r8, r4
   123fc:	b	12180 <argp_parse@@Base+0x58>
   12400:	ldr	r2, [pc, #1888]	; 12b68 <argp_parse@@Base+0xa40>
   12404:	ldr	r2, [r2]
   12408:	cmp	r2, #0
   1240c:	addeq	r2, r3, #16
   12410:	bne	123e4 <argp_parse@@Base+0x2bc>
   12414:	b	123f0 <argp_parse@@Base+0x2c8>
   12418:	ldr	r3, [fp, #-240]	; 0xffffff10
   1241c:	cmp	r3, #0
   12420:	addne	sl, sl, #1
   12424:	strne	sl, [fp, #-208]	; 0xffffff30
   12428:	movne	r3, #43	; 0x2b
   1242c:	strbne	r3, [r7, r5]
   12430:	b	122a0 <argp_parse@@Base+0x178>
   12434:	ldr	r3, [fp, #-112]	; 0xffffff90
   12438:	str	r3, [fp, #-108]	; 0xffffff94
   1243c:	b	122e0 <argp_parse@@Base+0x1b8>
   12440:	mov	r3, r6
   12444:	mov	r2, r7
   12448:	sub	r1, fp, #96	; 0x60
   1244c:	mov	r0, r5
   12450:	bl	11b40 <__assert_fail@plt+0x718>
   12454:	add	r5, r5, #36	; 0x24
   12458:	ldr	r3, [fp, #-108]	; 0xffffff94
   1245c:	cmp	r5, r3
   12460:	bcs	124bc <argp_parse@@Base+0x394>
   12464:	cmp	r0, #7
   12468:	cmpne	r0, #0
   1246c:	bne	124bc <argp_parse@@Base+0x394>
   12470:	ldr	r3, [r5, #16]
   12474:	cmp	r3, #0
   12478:	ldrne	r2, [r5, #20]
   1247c:	ldrne	r3, [r3, #28]
   12480:	ldrne	r3, [r3, r2, lsl #2]
   12484:	strne	r3, [r5, #24]
   12488:	ldr	r3, [r5]
   1248c:	cmp	r3, #0
   12490:	bne	12440 <argp_parse@@Base+0x318>
   12494:	ldr	r3, [r5, #4]
   12498:	ldr	r3, [r3, #16]
   1249c:	cmp	r3, #0
   124a0:	beq	12440 <argp_parse@@Base+0x318>
   124a4:	ldr	r3, [r3]
   124a8:	cmp	r3, #0
   124ac:	ldrne	r3, [r5, #28]
   124b0:	ldrne	r2, [r5, #24]
   124b4:	strne	r2, [r3]
   124b8:	b	12440 <argp_parse@@Base+0x318>
   124bc:	mov	r4, r0
   124c0:	cmp	r0, #7
   124c4:	beq	124d8 <argp_parse@@Base+0x3b0>
   124c8:	b	124d0 <argp_parse@@Base+0x3a8>
   124cc:	mov	r4, #0
   124d0:	cmp	r4, #0
   124d4:	bne	12998 <argp_parse@@Base+0x870>
   124d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   124dc:	tst	r3, #2
   124e0:	moveq	r3, #1
   124e4:	streq	r3, [fp, #-144]	; 0xffffff70
   124e8:	beq	12514 <argp_parse@@Base+0x3ec>
   124ec:	mov	r2, #0
   124f0:	str	r2, [fp, #-144]	; 0xffffff70
   124f4:	tst	r3, #1
   124f8:	beq	12514 <argp_parse@@Base+0x3ec>
   124fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12500:	sub	r3, r3, #4
   12504:	str	r3, [fp, #-88]	; 0xffffffa8
   12508:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1250c:	add	r3, r3, #1
   12510:	str	r3, [fp, #-92]	; 0xffffffa4
   12514:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12518:	ldr	r2, [fp, #-232]	; 0xffffff18
   1251c:	cmp	r2, r3
   12520:	beq	12540 <argp_parse@@Base+0x418>
   12524:	ldr	r3, [pc, #1568]	; 12b4c <argp_parse@@Base+0xa24>
   12528:	ldr	r3, [r3]
   1252c:	str	r3, [fp, #-56]	; 0xffffffc8
   12530:	mov	r6, #0
   12534:	mov	sl, #1
   12538:	mvn	r9, #0
   1253c:	b	127b0 <argp_parse@@Base+0x688>
   12540:	ldr	r0, [r2]
   12544:	cmp	r0, #0
   12548:	beq	12524 <argp_parse@@Base+0x3fc>
   1254c:	bl	12c5c <argp_parse@@Base+0xb34>
   12550:	str	r0, [fp, #-56]	; 0xffffffc8
   12554:	b	12530 <argp_parse@@Base+0x408>
   12558:	ldr	r3, [fp, #-84]	; 0xffffffac
   1255c:	str	r3, [fp, #-148]	; 0xffffff6c
   12560:	str	r9, [fp, #-140]	; 0xffffff74
   12564:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12568:	tst	r3, #64	; 0x40
   1256c:	beq	12638 <argp_parse@@Base+0x510>
   12570:	sub	r3, fp, #148	; 0x94
   12574:	str	r3, [sp, #4]
   12578:	str	r6, [sp]
   1257c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12580:	ldr	r2, [fp, #-156]	; 0xffffff64
   12584:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12588:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1258c:	bl	12df8 <argp_parse@@Base+0xcd0>
   12590:	mov	r5, r0
   12594:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12598:	str	r4, [fp, #-84]	; 0xffffffac
   1259c:	cmn	r5, #1
   125a0:	beq	12660 <argp_parse@@Base+0x538>
   125a4:	cmp	r5, #63	; 0x3f
   125a8:	beq	1268c <argp_parse@@Base+0x564>
   125ac:	cmp	r5, #1
   125b0:	beq	126c4 <argp_parse@@Base+0x59c>
   125b4:	ldr	r4, [fp, #-136]	; 0xffffff78
   125b8:	asrs	r3, r5, #24
   125bc:	bne	12770 <argp_parse@@Base+0x648>
   125c0:	mov	r1, r5
   125c4:	ldr	r0, [fp, #-156]	; 0xffffff64
   125c8:	bl	112d8 <strchr@plt>
   125cc:	subs	r1, r0, #0
   125d0:	beq	12620 <argp_parse@@Base+0x4f8>
   125d4:	ldr	r0, [fp, #-112]	; 0xffffff90
   125d8:	ldr	r2, [fp, #-108]	; 0xffffff94
   125dc:	cmp	r2, r0
   125e0:	bls	12620 <argp_parse@@Base+0x4f8>
   125e4:	ldr	r3, [r0, #8]
   125e8:	cmp	r1, r3
   125ec:	bcc	12608 <argp_parse@@Base+0x4e0>
   125f0:	add	r0, r0, #36	; 0x24
   125f4:	cmp	r2, r0
   125f8:	bls	12620 <argp_parse@@Base+0x4f8>
   125fc:	ldr	r3, [r0, #8]
   12600:	cmp	r1, r3
   12604:	bcs	125f0 <argp_parse@@Base+0x4c8>
   12608:	mov	r3, r4
   1260c:	mov	r2, r5
   12610:	sub	r1, fp, #96	; 0x60
   12614:	bl	11b40 <__assert_fail@plt+0x718>
   12618:	cmp	r0, #7
   1261c:	bne	127a8 <argp_parse@@Base+0x680>
   12620:	ldr	r3, [pc, #1348]	; 12b6c <argp_parse@@Base+0xa44>
   12624:	mov	r2, r5
   12628:	ldr	r1, [pc, #1344]	; 12b70 <argp_parse@@Base+0xa48>
   1262c:	sub	r0, fp, #96	; 0x60
   12630:	bl	163b4 <argp_error@@Base>
   12634:	b	12850 <argp_parse@@Base+0x728>
   12638:	sub	r3, fp, #148	; 0x94
   1263c:	str	r3, [sp, #4]
   12640:	str	r6, [sp]
   12644:	ldr	r3, [fp, #-152]	; 0xffffff68
   12648:	ldr	r2, [fp, #-156]	; 0xffffff64
   1264c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12650:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12654:	bl	12d9c <argp_parse@@Base+0xc74>
   12658:	mov	r5, r0
   1265c:	b	12594 <argp_parse@@Base+0x46c>
   12660:	str	r6, [fp, #-100]	; 0xffffff9c
   12664:	cmp	r4, #1
   12668:	ble	127d8 <argp_parse@@Base+0x6b0>
   1266c:	sub	r3, r4, #-1073741823	; 0xc0000001
   12670:	ldr	r1, [pc, #1276]	; 12b74 <argp_parse@@Base+0xa4c>
   12674:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12678:	ldr	r0, [r2, r3, lsl #2]
   1267c:	bl	1111c <strcmp@plt>
   12680:	cmp	r0, #0
   12684:	streq	r4, [fp, #-72]	; 0xffffffb8
   12688:	b	127d8 <argp_parse@@Base+0x6b0>
   1268c:	ldr	r3, [fp, #-140]	; 0xffffff74
   12690:	cmn	r3, #1
   12694:	beq	125b4 <argp_parse@@Base+0x48c>
   12698:	mov	r3, #0
   1269c:	b	12860 <argp_parse@@Base+0x738>
   126a0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   126a4:	tst	r2, #4
   126a8:	movne	r3, #1
   126ac:	bne	12860 <argp_parse@@Base+0x738>
   126b0:	add	r2, r3, #1
   126b4:	str	r2, [fp, #-84]	; 0xffffffac
   126b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   126bc:	ldr	r3, [r2, r3, lsl #2]
   126c0:	str	r3, [fp, #-136]	; 0xffffff78
   126c4:	ldr	r7, [fp, #-136]	; 0xffffff78
   126c8:	ldr	r8, [fp, #-84]	; 0xffffffac
   126cc:	sub	r8, r8, #1
   126d0:	str	r8, [fp, #-84]	; 0xffffffac
   126d4:	ldr	r5, [fp, #-112]	; 0xffffff90
   126d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   126dc:	cmp	r3, r5
   126e0:	bhi	1272c <argp_parse@@Base+0x604>
   126e4:	b	12768 <argp_parse@@Base+0x640>
   126e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   126ec:	sub	r3, r3, #1
   126f0:	str	r3, [fp, #-84]	; 0xffffffac
   126f4:	mov	r3, r6
   126f8:	ldr	r2, [pc, #1144]	; 12b78 <argp_parse@@Base+0xa50>
   126fc:	sub	r1, fp, #96	; 0x60
   12700:	mov	r0, r5
   12704:	bl	11b40 <__assert_fail@plt+0x718>
   12708:	add	r5, r5, #36	; 0x24
   1270c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12710:	cmp	r5, r3
   12714:	movcs	r3, #0
   12718:	movcc	r3, #1
   1271c:	cmp	r0, #7
   12720:	movne	r3, #0
   12724:	cmp	r3, #0
   12728:	beq	12b0c <argp_parse@@Base+0x9e4>
   1272c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12730:	add	r3, r3, #1
   12734:	str	r3, [fp, #-84]	; 0xffffffac
   12738:	mov	r3, r7
   1273c:	mov	r2, r6
   12740:	sub	r1, fp, #96	; 0x60
   12744:	mov	r0, r5
   12748:	bl	11b40 <__assert_fail@plt+0x718>
   1274c:	cmp	r0, #7
   12750:	beq	126e8 <argp_parse@@Base+0x5c0>
   12754:	add	r5, r5, #36	; 0x24
   12758:	cmp	r0, #0
   1275c:	beq	12b1c <argp_parse@@Base+0x9f4>
   12760:	cmp	r0, #7
   12764:	bne	127a8 <argp_parse@@Base+0x680>
   12768:	mov	r5, #1
   1276c:	b	12850 <argp_parse@@Base+0x728>
   12770:	ands	r1, r5, #8388608	; 0x800000
   12774:	movne	r1, #-16777216	; 0xff000000
   12778:	bic	r2, r5, #-16777216	; 0xff000000
   1277c:	add	r0, r3, r3, lsl #3
   12780:	lsl	r0, r0, #2
   12784:	sub	r0, r0, #36	; 0x24
   12788:	mov	r3, r4
   1278c:	orr	r2, r2, r1
   12790:	sub	r1, fp, #96	; 0x60
   12794:	ldr	ip, [fp, #-112]	; 0xffffff90
   12798:	add	r0, ip, r0
   1279c:	bl	11b40 <__assert_fail@plt+0x718>
   127a0:	cmp	r0, #7
   127a4:	beq	127f0 <argp_parse@@Base+0x6c8>
   127a8:	cmp	r0, #0
   127ac:	bne	12900 <argp_parse@@Base+0x7d8>
   127b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   127b4:	cmp	r3, #0
   127b8:	beq	127cc <argp_parse@@Base+0x6a4>
   127bc:	ldr	r2, [fp, #-84]	; 0xffffffac
   127c0:	cmp	r3, r2
   127c4:	strgt	r6, [fp, #-72]	; 0xffffffb8
   127c8:	ble	127d8 <argp_parse@@Base+0x6b0>
   127cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   127d0:	cmp	r3, #0
   127d4:	bne	12558 <argp_parse@@Base+0x430>
   127d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   127dc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   127e0:	cmp	r3, r2
   127e4:	blt	126a0 <argp_parse@@Base+0x578>
   127e8:	mov	r3, #1
   127ec:	b	12860 <argp_parse@@Base+0x738>
   127f0:	ldr	r3, [fp, #-152]	; 0xffffff68
   127f4:	ldr	r2, [r3, #12]
   127f8:	cmp	r2, r5
   127fc:	beq	12830 <argp_parse@@Base+0x708>
   12800:	ldr	r2, [r3]
   12804:	cmp	r2, #0
   12808:	beq	128f8 <argp_parse@@Base+0x7d0>
   1280c:	add	r3, r3, #16
   12810:	ldr	r2, [r3, #12]
   12814:	cmp	r2, r5
   12818:	beq	12830 <argp_parse@@Base+0x708>
   1281c:	ldr	r2, [r3]
   12820:	cmp	r2, #0
   12824:	bne	1280c <argp_parse@@Base+0x6e4>
   12828:	ldr	r2, [pc, #844]	; 12b7c <argp_parse@@Base+0xa54>
   1282c:	b	12840 <argp_parse@@Base+0x718>
   12830:	ldr	r2, [r3]
   12834:	ldr	r3, [pc, #832]	; 12b7c <argp_parse@@Base+0xa54>
   12838:	cmp	r2, #0
   1283c:	moveq	r2, r3
   12840:	ldr	r3, [pc, #804]	; 12b6c <argp_parse@@Base+0xa44>
   12844:	ldr	r1, [pc, #820]	; 12b80 <argp_parse@@Base+0xa58>
   12848:	sub	r0, fp, #96	; 0x60
   1284c:	bl	163b4 <argp_error@@Base>
   12850:	add	r5, r5, #1
   12854:	bics	r3, r5, #2
   12858:	moveq	r3, #1
   1285c:	movne	r3, #0
   12860:	cmp	r3, #0
   12864:	moveq	r4, #7
   12868:	beq	12904 <argp_parse@@Base+0x7dc>
   1286c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12870:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12874:	cmp	r3, r2
   12878:	beq	129a4 <argp_parse@@Base+0x87c>
   1287c:	ldr	r2, [fp, #4]
   12880:	cmp	r2, #0
   12884:	strne	r3, [r2]
   12888:	beq	12aa0 <argp_parse@@Base+0x978>
   1288c:	ldr	r5, [fp, #-108]	; 0xffffff94
   12890:	sub	r5, r5, #36	; 0x24
   12894:	ldr	r3, [fp, #-112]	; 0xffffff90
   12898:	cmp	r5, r3
   1289c:	bcc	12adc <argp_parse@@Base+0x9b4>
   128a0:	ldr	r7, [pc, #732]	; 12b84 <argp_parse@@Base+0xa5c>
   128a4:	mov	r6, #0
   128a8:	mov	r3, r6
   128ac:	mov	r2, r7
   128b0:	sub	r1, fp, #96	; 0x60
   128b4:	mov	r0, r5
   128b8:	bl	11b40 <__assert_fail@plt+0x718>
   128bc:	sub	r5, r5, #36	; 0x24
   128c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   128c4:	cmp	r5, r3
   128c8:	bcc	128d8 <argp_parse@@Base+0x7b0>
   128cc:	cmp	r0, #7
   128d0:	cmpne	r0, #0
   128d4:	beq	128a8 <argp_parse@@Base+0x780>
   128d8:	mov	r4, r0
   128dc:	cmp	r0, #7
   128e0:	moveq	r4, #0
   128e4:	ldr	r5, [fp, #-108]	; 0xffffff94
   128e8:	sub	r5, r5, #36	; 0x24
   128ec:	cmp	r3, r5
   128f0:	bls	1295c <argp_parse@@Base+0x834>
   128f4:	b	12990 <argp_parse@@Base+0x868>
   128f8:	ldr	r2, [pc, #636]	; 12b7c <argp_parse@@Base+0xa54>
   128fc:	b	12840 <argp_parse@@Base+0x718>
   12900:	mov	r4, r0
   12904:	cmp	r4, #7
   12908:	beq	12ac4 <argp_parse@@Base+0x99c>
   1290c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12910:	ldr	r3, [fp, #-108]	; 0xffffff94
   12914:	cmp	r3, r5
   12918:	bls	12948 <argp_parse@@Base+0x820>
   1291c:	ldr	r7, [pc, #612]	; 12b88 <argp_parse@@Base+0xa60>
   12920:	mov	r6, #0
   12924:	mov	r3, r6
   12928:	mov	r2, r7
   1292c:	sub	r1, fp, #96	; 0x60
   12930:	mov	r0, r5
   12934:	bl	11b40 <__assert_fail@plt+0x718>
   12938:	add	r5, r5, #36	; 0x24
   1293c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12940:	cmp	r5, r3
   12944:	bcc	12924 <argp_parse@@Base+0x7fc>
   12948:	ldr	r5, [fp, #-108]	; 0xffffff94
   1294c:	sub	r5, r5, #36	; 0x24
   12950:	ldr	r3, [fp, #-112]	; 0xffffff90
   12954:	cmp	r3, r5
   12958:	bhi	12988 <argp_parse@@Base+0x860>
   1295c:	ldr	r7, [pc, #552]	; 12b8c <argp_parse@@Base+0xa64>
   12960:	mov	r6, #0
   12964:	mov	r3, r6
   12968:	mov	r2, r7
   1296c:	sub	r1, fp, #96	; 0x60
   12970:	mov	r0, r5
   12974:	bl	11b40 <__assert_fail@plt+0x718>
   12978:	sub	r5, r5, #36	; 0x24
   1297c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12980:	cmp	r5, r3
   12984:	bcs	12964 <argp_parse@@Base+0x83c>
   12988:	cmp	r4, #7
   1298c:	moveq	r4, #22
   12990:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12994:	bl	12d1c <argp_parse@@Base+0xbf4>
   12998:	mov	r0, r4
   1299c:	sub	sp, fp, #32
   129a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129a4:	ldr	r6, [fp, #-112]	; 0xffffff90
   129a8:	ldr	r5, [fp, #-108]	; 0xffffff94
   129ac:	cmp	r6, r5
   129b0:	bcs	12ae4 <argp_parse@@Base+0x9bc>
   129b4:	mov	r4, #0
   129b8:	ldr	r8, [pc, #464]	; 12b90 <argp_parse@@Base+0xa68>
   129bc:	mov	r7, r4
   129c0:	mov	r0, r4
   129c4:	b	129e4 <argp_parse@@Base+0x8bc>
   129c8:	add	r6, r6, #36	; 0x24
   129cc:	ldr	r5, [fp, #-108]	; 0xffffff94
   129d0:	cmp	r6, r5
   129d4:	bcs	12a10 <argp_parse@@Base+0x8e8>
   129d8:	cmp	r0, #7
   129dc:	cmpne	r0, #0
   129e0:	bne	12a08 <argp_parse@@Base+0x8e0>
   129e4:	ldr	r3, [r6, #12]
   129e8:	cmp	r3, #0
   129ec:	bne	129c8 <argp_parse@@Base+0x8a0>
   129f0:	mov	r3, r7
   129f4:	mov	r2, r8
   129f8:	sub	r1, fp, #96	; 0x60
   129fc:	mov	r0, r6
   12a00:	bl	11b40 <__assert_fail@plt+0x718>
   12a04:	b	129c8 <argp_parse@@Base+0x8a0>
   12a08:	mov	r4, r0
   12a0c:	b	12a74 <argp_parse@@Base+0x94c>
   12a10:	mov	r4, r0
   12a14:	sub	r5, r5, #36	; 0x24
   12a18:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a1c:	cmp	r3, r5
   12a20:	bhi	12a74 <argp_parse@@Base+0x94c>
   12a24:	cmp	r0, #0
   12a28:	cmpne	r0, #7
   12a2c:	bne	12a74 <argp_parse@@Base+0x94c>
   12a30:	ldr	r7, [pc, #348]	; 12b94 <argp_parse@@Base+0xa6c>
   12a34:	mov	r6, #0
   12a38:	mov	r3, r6
   12a3c:	mov	r2, r7
   12a40:	sub	r1, fp, #96	; 0x60
   12a44:	mov	r0, r5
   12a48:	bl	11b40 <__assert_fail@plt+0x718>
   12a4c:	sub	r5, r5, #36	; 0x24
   12a50:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a54:	cmp	r5, r3
   12a58:	bcc	12a70 <argp_parse@@Base+0x948>
   12a5c:	cmp	r0, #7
   12a60:	cmpne	r0, #0
   12a64:	beq	12a38 <argp_parse@@Base+0x910>
   12a68:	mov	r4, r0
   12a6c:	b	12a74 <argp_parse@@Base+0x94c>
   12a70:	mov	r4, r0
   12a74:	cmp	r4, #7
   12a78:	beq	12af8 <argp_parse@@Base+0x9d0>
   12a7c:	ldr	r3, [fp, #4]
   12a80:	cmp	r3, #0
   12a84:	beq	12b3c <argp_parse@@Base+0xa14>
   12a88:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a8c:	ldr	r2, [fp, #4]
   12a90:	str	r3, [r2]
   12a94:	cmp	r4, #0
   12a98:	beq	1288c <argp_parse@@Base+0x764>
   12a9c:	b	12904 <argp_parse@@Base+0x7dc>
   12aa0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12aa4:	tst	r3, #2
   12aa8:	bne	12ac4 <argp_parse@@Base+0x99c>
   12aac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ab0:	cmp	r0, #0
   12ab4:	beq	12ac4 <argp_parse@@Base+0x99c>
   12ab8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12abc:	ldr	r1, [pc, #212]	; 12b98 <argp_parse@@Base+0xa70>
   12ac0:	bl	112e4 <fprintf@plt>
   12ac4:	mov	r2, #260	; 0x104
   12ac8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12acc:	sub	r0, fp, #96	; 0x60
   12ad0:	bl	162f8 <argp_state_help@@Base>
   12ad4:	mov	r4, #7
   12ad8:	b	1290c <argp_parse@@Base+0x7e4>
   12adc:	mov	r4, #0
   12ae0:	b	12988 <argp_parse@@Base+0x860>
   12ae4:	sub	r5, r5, #36	; 0x24
   12ae8:	cmp	r6, r5
   12aec:	movhi	r4, #0
   12af0:	bls	12a30 <argp_parse@@Base+0x908>
   12af4:	b	12a7c <argp_parse@@Base+0x954>
   12af8:	ldr	r3, [fp, #4]
   12afc:	cmp	r3, #0
   12b00:	movne	r4, #0
   12b04:	bne	12a88 <argp_parse@@Base+0x960>
   12b08:	b	1288c <argp_parse@@Base+0x764>
   12b0c:	cmp	r0, #0
   12b10:	bne	12760 <argp_parse@@Base+0x638>
   12b14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12b18:	str	r3, [fp, #-84]	; 0xffffffac
   12b1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12b20:	cmp	r8, r3
   12b24:	sublt	r8, r3, r8
   12b28:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   12b2c:	addlt	r8, r3, r8
   12b30:	strlt	r8, [r5, #-24]	; 0xffffffe8
   12b34:	strge	sl, [fp, #-100]	; 0xffffff9c
   12b38:	b	127b0 <argp_parse@@Base+0x688>
   12b3c:	cmp	r4, #0
   12b40:	beq	1288c <argp_parse@@Base+0x764>
   12b44:	b	1290c <argp_parse@@Base+0x7e4>
   12b48:	ldrdeq	r9, [r2], -r0
   12b4c:	andeq	r9, r2, r8, asr #3
   12b50:	ldrdeq	r9, [r2], -r8
   12b54:	ldrdeq	r9, [r2], -ip
   12b58:	tsteq	r0, r3
   12b5c:	andeq	r7, r1, r4, ror #20
   12b60:			; <UNDEFINED> instruction: 0x000292b4
   12b64:	andeq	r7, r1, r0, lsl #21
   12b68:	andeq	r9, r2, r8, ror #3
   12b6c:	muleq	r1, ip, sl
   12b70:			; <UNDEFINED> instruction: 0x00017bb0
   12b74:	andeq	r7, r1, ip, lsr #23
   12b78:	tsteq	r0, r6
   12b7c:	andeq	r7, r1, r8, lsr #23
   12b80:			; <UNDEFINED> instruction: 0x00017bb8
   12b84:	tsteq	r0, r4
   12b88:	tsteq	r0, r5
   12b8c:	tsteq	r0, r7
   12b90:	tsteq	r0, r2
   12b94:	tsteq	r0, r1
   12b98:	andeq	r7, r1, r4, asr #23
   12b9c:	cmp	r1, #0
   12ba0:	beq	12bec <argp_parse@@Base+0xac4>
   12ba4:	ldr	r2, [r1, #52]	; 0x34
   12ba8:	ldr	r3, [r2, #48]	; 0x30
   12bac:	ldr	r1, [r2, #52]	; 0x34
   12bb0:	cmp	r3, r1
   12bb4:	bcs	12bf4 <argp_parse@@Base+0xacc>
   12bb8:	ldr	r2, [r3, #4]
   12bbc:	cmp	r0, r2
   12bc0:	beq	12bdc <argp_parse@@Base+0xab4>
   12bc4:	add	r3, r3, #36	; 0x24
   12bc8:	cmp	r3, r1
   12bcc:	bcs	12be4 <argp_parse@@Base+0xabc>
   12bd0:	ldr	r2, [r3, #4]
   12bd4:	cmp	r2, r0
   12bd8:	bne	12bc4 <argp_parse@@Base+0xa9c>
   12bdc:	ldr	r0, [r3, #24]
   12be0:	bx	lr
   12be4:	mov	r0, #0
   12be8:	bx	lr
   12bec:	mov	r0, #0
   12bf0:	bx	lr
   12bf4:	mov	r0, #0
   12bf8:	bx	lr
   12bfc:	push	{lr}		; (str lr, [sp, #-4]!)
   12c00:	sub	sp, sp, #12
   12c04:	ldr	r3, [pc, #28]	; 12c28 <argp_parse@@Base+0xb00>
   12c08:	ldr	r1, [r3]
   12c0c:	ldr	r3, [r3, #4]
   12c10:	str	r3, [sp]
   12c14:	ldr	r3, [pc, #16]	; 12c2c <argp_parse@@Base+0xb04>
   12c18:	ldr	r2, [pc, #16]	; 12c30 <argp_parse@@Base+0xb08>
   12c1c:	bl	131dc <argp_parse@@Base+0x10b4>
   12c20:	add	sp, sp, #12
   12c24:	pop	{pc}		; (ldr pc, [sp], #4)
   12c28:	andeq	r9, r2, ip, ror #3
   12c2c:	andeq	r7, r1, ip, lsr #25
   12c30:			; <UNDEFINED> instruction: 0x00017cbc
   12c34:	ldr	r2, [pc, #20]	; 12c50 <argp_parse@@Base+0xb28>
   12c38:	ldr	r3, [pc, #20]	; 12c54 <argp_parse@@Base+0xb2c>
   12c3c:	str	r2, [r3]
   12c40:	ldr	r3, [pc, #16]	; 12c58 <argp_parse@@Base+0xb30>
   12c44:	str	r0, [r3]
   12c48:	str	r1, [r3, #4]
   12c4c:	bx	lr
   12c50:	strdeq	r2, [r1], -ip
   12c54:	andeq	r9, r2, r8, ror #3
   12c58:	andeq	r9, r2, ip, ror #3
   12c5c:	ldrb	r3, [r0]
   12c60:	cmp	r3, #47	; 0x2f
   12c64:	bne	12c74 <argp_parse@@Base+0xb4c>
   12c68:	ldrb	r3, [r0, #1]!
   12c6c:	cmp	r3, #47	; 0x2f
   12c70:	beq	12c68 <argp_parse@@Base+0xb40>
   12c74:	ldrb	r2, [r0]
   12c78:	cmp	r2, #0
   12c7c:	bxeq	lr
   12c80:	push	{lr}		; (str lr, [sp, #-4]!)
   12c84:	mov	r1, r0
   12c88:	mov	r3, #0
   12c8c:	mov	lr, #1
   12c90:	mov	ip, r3
   12c94:	b	12ca4 <argp_parse@@Base+0xb7c>
   12c98:	ldrb	r2, [r1, #1]!
   12c9c:	cmp	r2, #0
   12ca0:	beq	12cc0 <argp_parse@@Base+0xb98>
   12ca4:	cmp	r2, #47	; 0x2f
   12ca8:	moveq	r3, lr
   12cac:	beq	12c98 <argp_parse@@Base+0xb70>
   12cb0:	cmp	r3, #0
   12cb4:	movne	r0, r1
   12cb8:	movne	r3, ip
   12cbc:	b	12c98 <argp_parse@@Base+0xb70>
   12cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   12cc4:	push	{r4, lr}
   12cc8:	mov	r4, r0
   12ccc:	bl	112cc <strlen@plt>
   12cd0:	cmp	r0, #1
   12cd4:	popls	{r4, pc}
   12cd8:	sub	r3, r0, #1
   12cdc:	add	r2, r4, r3
   12ce0:	ldrb	r1, [r4, r3]
   12ce4:	cmp	r1, #47	; 0x2f
   12ce8:	popne	{r4, pc}
   12cec:	cmp	r3, #1
   12cf0:	beq	12d14 <argp_parse@@Base+0xbec>
   12cf4:	sub	r0, r3, #1
   12cf8:	ldrb	r1, [r2, #-1]!
   12cfc:	cmp	r1, #47	; 0x2f
   12d00:	beq	12d0c <argp_parse@@Base+0xbe4>
   12d04:	mov	r0, r3
   12d08:	pop	{r4, pc}
   12d0c:	mov	r3, r0
   12d10:	b	12cec <argp_parse@@Base+0xbc4>
   12d14:	mov	r0, #1
   12d18:	pop	{r4, pc}
   12d1c:	push	{r4, r5, lr}
   12d20:	sub	sp, sp, #12
   12d24:	mov	r5, r0
   12d28:	bl	112f0 <__errno_location@plt>
   12d2c:	mov	r4, r0
   12d30:	ldr	r3, [r0]
   12d34:	str	r3, [sp]
   12d38:	str	r3, [sp, #4]
   12d3c:	mov	r3, #0
   12d40:	str	r3, [r0]
   12d44:	mov	r0, r5
   12d48:	bl	11170 <free@plt>
   12d4c:	ldr	r3, [r4]
   12d50:	cmp	r3, #0
   12d54:	moveq	r3, #4
   12d58:	movne	r3, #0
   12d5c:	add	r2, sp, #8
   12d60:	add	r3, r2, r3
   12d64:	ldr	r3, [r3, #-8]
   12d68:	str	r3, [r4]
   12d6c:	add	sp, sp, #12
   12d70:	pop	{r4, r5, pc}
   12d74:	push	{lr}		; (str lr, [sp, #-4]!)
   12d78:	sub	sp, sp, #20
   12d7c:	mov	ip, #0
   12d80:	str	ip, [sp, #8]
   12d84:	str	ip, [sp, #4]
   12d88:	ldr	ip, [sp, #24]
   12d8c:	str	ip, [sp]
   12d90:	bl	17030 <argp_error@@Base+0xc7c>
   12d94:	add	sp, sp, #20
   12d98:	pop	{pc}		; (ldr pc, [sp], #4)
   12d9c:	push	{lr}		; (str lr, [sp, #-4]!)
   12da0:	sub	sp, sp, #20
   12da4:	mov	ip, #0
   12da8:	str	ip, [sp, #12]
   12dac:	ldr	lr, [sp, #28]
   12db0:	str	lr, [sp, #8]
   12db4:	str	ip, [sp, #4]
   12db8:	ldr	ip, [sp, #24]
   12dbc:	str	ip, [sp]
   12dc0:	bl	16ab4 <argp_error@@Base+0x700>
   12dc4:	add	sp, sp, #20
   12dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   12dcc:	push	{lr}		; (str lr, [sp, #-4]!)
   12dd0:	sub	sp, sp, #20
   12dd4:	mov	ip, #0
   12dd8:	str	ip, [sp, #8]
   12ddc:	mov	ip, #1
   12de0:	str	ip, [sp, #4]
   12de4:	ldr	ip, [sp, #24]
   12de8:	str	ip, [sp]
   12dec:	bl	17030 <argp_error@@Base+0xc7c>
   12df0:	add	sp, sp, #20
   12df4:	pop	{pc}		; (ldr pc, [sp], #4)
   12df8:	push	{lr}		; (str lr, [sp, #-4]!)
   12dfc:	sub	sp, sp, #20
   12e00:	mov	ip, #0
   12e04:	str	ip, [sp, #12]
   12e08:	ldr	ip, [sp, #28]
   12e0c:	str	ip, [sp, #8]
   12e10:	mov	ip, #1
   12e14:	str	ip, [sp, #4]
   12e18:	ldr	ip, [sp, #24]
   12e1c:	str	ip, [sp]
   12e20:	bl	16ab4 <argp_error@@Base+0x700>
   12e24:	add	sp, sp, #20
   12e28:	pop	{pc}		; (ldr pc, [sp], #4)
   12e2c:	push	{r4, r5, r6, lr}
   12e30:	subs	r4, r0, #0
   12e34:	beq	12eac <argp_parse@@Base+0xd84>
   12e38:	mov	r1, #47	; 0x2f
   12e3c:	mov	r0, r4
   12e40:	bl	11380 <strrchr@plt>
   12e44:	cmp	r0, #0
   12e48:	addne	r5, r0, #1
   12e4c:	moveq	r5, r4
   12e50:	sub	r3, r5, r4
   12e54:	cmp	r3, #6
   12e58:	ble	12e98 <argp_parse@@Base+0xd70>
   12e5c:	mov	r2, #7
   12e60:	ldr	r1, [pc, #96]	; 12ec8 <argp_parse@@Base+0xda0>
   12e64:	sub	r0, r5, #7
   12e68:	bl	113f8 <strncmp@plt>
   12e6c:	cmp	r0, #0
   12e70:	bne	12e98 <argp_parse@@Base+0xd70>
   12e74:	mov	r2, #3
   12e78:	ldr	r1, [pc, #76]	; 12ecc <argp_parse@@Base+0xda4>
   12e7c:	mov	r0, r5
   12e80:	bl	113f8 <strncmp@plt>
   12e84:	cmp	r0, #0
   12e88:	addeq	r4, r5, #3
   12e8c:	ldreq	r3, [pc, #60]	; 12ed0 <argp_parse@@Base+0xda8>
   12e90:	streq	r4, [r3]
   12e94:	movne	r4, r5
   12e98:	ldr	r3, [pc, #52]	; 12ed4 <argp_parse@@Base+0xdac>
   12e9c:	str	r4, [r3]
   12ea0:	ldr	r3, [pc, #48]	; 12ed8 <argp_parse@@Base+0xdb0>
   12ea4:	str	r4, [r3]
   12ea8:	pop	{r4, r5, r6, pc}
   12eac:	ldr	r3, [pc, #40]	; 12edc <argp_parse@@Base+0xdb4>
   12eb0:	ldr	r3, [r3]
   12eb4:	mov	r2, #55	; 0x37
   12eb8:	mov	r1, #1
   12ebc:	ldr	r0, [pc, #28]	; 12ee0 <argp_parse@@Base+0xdb8>
   12ec0:	bl	11224 <fwrite@plt>
   12ec4:	bl	11404 <abort@plt>
   12ec8:	andeq	r7, r1, r4, lsl #26
   12ecc:	andeq	r7, r1, ip, lsl #26
   12ed0:	andeq	r9, r2, r8, asr #3
   12ed4:	strdeq	r9, [r2], -r4
   12ed8:	ldrdeq	r9, [r2], -r0
   12edc:	ldrdeq	r9, [r2], -r8
   12ee0:	andeq	r7, r1, ip, asr #25
   12ee4:	push	{r4, r5, r6, lr}
   12ee8:	sub	sp, sp, #32
   12eec:	mov	r4, r0
   12ef0:	ldr	r5, [sp, #48]	; 0x30
   12ef4:	ldr	r6, [sp, #52]	; 0x34
   12ef8:	cmp	r1, #0
   12efc:	beq	12f84 <argp_parse@@Base+0xe5c>
   12f00:	str	r3, [sp]
   12f04:	mov	r3, r2
   12f08:	mov	r2, r1
   12f0c:	ldr	r1, [pc, #644]	; 13198 <argp_parse@@Base+0x1070>
   12f10:	bl	112e4 <fprintf@plt>
   12f14:	ldr	r3, [pc, #640]	; 1319c <argp_parse@@Base+0x1074>
   12f18:	ldr	r2, [pc, #640]	; 131a0 <argp_parse@@Base+0x1078>
   12f1c:	ldr	r1, [pc, #640]	; 131a4 <argp_parse@@Base+0x107c>
   12f20:	mov	r0, r4
   12f24:	bl	112e4 <fprintf@plt>
   12f28:	mov	r1, r4
   12f2c:	mov	r0, #10
   12f30:	bl	113a4 <fputc@plt>
   12f34:	ldr	r2, [pc, #620]	; 131a8 <argp_parse@@Base+0x1080>
   12f38:	ldr	r1, [pc, #620]	; 131ac <argp_parse@@Base+0x1084>
   12f3c:	mov	r0, r4
   12f40:	bl	112e4 <fprintf@plt>
   12f44:	mov	r1, r4
   12f48:	mov	r0, #10
   12f4c:	bl	113a4 <fputc@plt>
   12f50:	cmp	r6, #9
   12f54:	ldrls	pc, [pc, r6, lsl #2]
   12f58:	b	13148 <argp_parse@@Base+0x1020>
   12f5c:	andeq	r2, r1, r0, lsr #31
   12f60:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f64:	andeq	r2, r1, r8, lsr #31
   12f68:	andeq	r2, r1, r0, asr #31
   12f6c:	andeq	r2, r1, r0, ror #31
   12f70:	andeq	r3, r1, r8
   12f74:	andeq	r3, r1, r8, lsr r0
   12f78:	andeq	r3, r1, r0, ror r0
   12f7c:	strheq	r3, [r1], -r0
   12f80:	strdeq	r3, [r1], -r8
   12f84:	ldr	r1, [pc, #548]	; 131b0 <argp_parse@@Base+0x1088>
   12f88:	bl	112e4 <fprintf@plt>
   12f8c:	b	12f14 <argp_parse@@Base+0xdec>
   12f90:	ldr	r2, [r5]
   12f94:	ldr	r1, [pc, #536]	; 131b4 <argp_parse@@Base+0x108c>
   12f98:	mov	r0, r4
   12f9c:	bl	112e4 <fprintf@plt>
   12fa0:	add	sp, sp, #32
   12fa4:	pop	{r4, r5, r6, pc}
   12fa8:	ldr	r3, [r5, #4]
   12fac:	ldr	r2, [r5]
   12fb0:	ldr	r1, [pc, #512]	; 131b8 <argp_parse@@Base+0x1090>
   12fb4:	mov	r0, r4
   12fb8:	bl	112e4 <fprintf@plt>
   12fbc:	b	12fa0 <argp_parse@@Base+0xe78>
   12fc0:	ldr	r3, [r5, #4]
   12fc4:	ldr	r2, [r5]
   12fc8:	ldr	r1, [r5, #8]
   12fcc:	str	r1, [sp]
   12fd0:	ldr	r1, [pc, #484]	; 131bc <argp_parse@@Base+0x1094>
   12fd4:	mov	r0, r4
   12fd8:	bl	112e4 <fprintf@plt>
   12fdc:	b	12fa0 <argp_parse@@Base+0xe78>
   12fe0:	ldr	r3, [r5, #4]
   12fe4:	ldr	r2, [r5]
   12fe8:	ldr	r1, [r5, #12]
   12fec:	str	r1, [sp, #4]
   12ff0:	ldr	r1, [r5, #8]
   12ff4:	str	r1, [sp]
   12ff8:	ldr	r1, [pc, #448]	; 131c0 <argp_parse@@Base+0x1098>
   12ffc:	mov	r0, r4
   13000:	bl	112e4 <fprintf@plt>
   13004:	b	12fa0 <argp_parse@@Base+0xe78>
   13008:	ldr	r3, [r5, #4]
   1300c:	ldr	r2, [r5]
   13010:	ldr	r1, [r5, #16]
   13014:	str	r1, [sp, #8]
   13018:	ldr	r1, [r5, #12]
   1301c:	str	r1, [sp, #4]
   13020:	ldr	r1, [r5, #8]
   13024:	str	r1, [sp]
   13028:	ldr	r1, [pc, #404]	; 131c4 <argp_parse@@Base+0x109c>
   1302c:	mov	r0, r4
   13030:	bl	112e4 <fprintf@plt>
   13034:	b	12fa0 <argp_parse@@Base+0xe78>
   13038:	ldr	r3, [r5, #4]
   1303c:	ldr	r2, [r5]
   13040:	ldr	r1, [r5, #20]
   13044:	str	r1, [sp, #12]
   13048:	ldr	r1, [r5, #16]
   1304c:	str	r1, [sp, #8]
   13050:	ldr	r1, [r5, #12]
   13054:	str	r1, [sp, #4]
   13058:	ldr	r1, [r5, #8]
   1305c:	str	r1, [sp]
   13060:	ldr	r1, [pc, #352]	; 131c8 <argp_parse@@Base+0x10a0>
   13064:	mov	r0, r4
   13068:	bl	112e4 <fprintf@plt>
   1306c:	b	12fa0 <argp_parse@@Base+0xe78>
   13070:	ldr	r3, [r5, #4]
   13074:	ldr	r2, [r5]
   13078:	ldr	r1, [r5, #24]
   1307c:	str	r1, [sp, #16]
   13080:	ldr	r1, [r5, #20]
   13084:	str	r1, [sp, #12]
   13088:	ldr	r1, [r5, #16]
   1308c:	str	r1, [sp, #8]
   13090:	ldr	r1, [r5, #12]
   13094:	str	r1, [sp, #4]
   13098:	ldr	r1, [r5, #8]
   1309c:	str	r1, [sp]
   130a0:	ldr	r1, [pc, #292]	; 131cc <argp_parse@@Base+0x10a4>
   130a4:	mov	r0, r4
   130a8:	bl	112e4 <fprintf@plt>
   130ac:	b	12fa0 <argp_parse@@Base+0xe78>
   130b0:	ldr	r3, [r5, #4]
   130b4:	ldr	r2, [r5]
   130b8:	ldr	r1, [r5, #28]
   130bc:	str	r1, [sp, #20]
   130c0:	ldr	r1, [r5, #24]
   130c4:	str	r1, [sp, #16]
   130c8:	ldr	r1, [r5, #20]
   130cc:	str	r1, [sp, #12]
   130d0:	ldr	r1, [r5, #16]
   130d4:	str	r1, [sp, #8]
   130d8:	ldr	r1, [r5, #12]
   130dc:	str	r1, [sp, #4]
   130e0:	ldr	r1, [r5, #8]
   130e4:	str	r1, [sp]
   130e8:	ldr	r1, [pc, #224]	; 131d0 <argp_parse@@Base+0x10a8>
   130ec:	mov	r0, r4
   130f0:	bl	112e4 <fprintf@plt>
   130f4:	b	12fa0 <argp_parse@@Base+0xe78>
   130f8:	ldr	r3, [r5, #4]
   130fc:	ldr	r2, [r5]
   13100:	ldr	r1, [r5, #32]
   13104:	str	r1, [sp, #24]
   13108:	ldr	r1, [r5, #28]
   1310c:	str	r1, [sp, #20]
   13110:	ldr	r1, [r5, #24]
   13114:	str	r1, [sp, #16]
   13118:	ldr	r1, [r5, #20]
   1311c:	str	r1, [sp, #12]
   13120:	ldr	r1, [r5, #16]
   13124:	str	r1, [sp, #8]
   13128:	ldr	r1, [r5, #12]
   1312c:	str	r1, [sp, #4]
   13130:	ldr	r1, [r5, #8]
   13134:	str	r1, [sp]
   13138:	ldr	r1, [pc, #148]	; 131d4 <argp_parse@@Base+0x10ac>
   1313c:	mov	r0, r4
   13140:	bl	112e4 <fprintf@plt>
   13144:	b	12fa0 <argp_parse@@Base+0xe78>
   13148:	ldr	r3, [r5, #4]
   1314c:	ldr	r2, [r5]
   13150:	ldr	r1, [r5, #32]
   13154:	str	r1, [sp, #24]
   13158:	ldr	r1, [r5, #28]
   1315c:	str	r1, [sp, #20]
   13160:	ldr	r1, [r5, #24]
   13164:	str	r1, [sp, #16]
   13168:	ldr	r1, [r5, #20]
   1316c:	str	r1, [sp, #12]
   13170:	ldr	r1, [r5, #16]
   13174:	str	r1, [sp, #8]
   13178:	ldr	r1, [r5, #12]
   1317c:	str	r1, [sp, #4]
   13180:	ldr	r1, [r5, #8]
   13184:	str	r1, [sp]
   13188:	ldr	r1, [pc, #72]	; 131d8 <argp_parse@@Base+0x10b0>
   1318c:	mov	r0, r4
   13190:	bl	112e4 <fprintf@plt>
   13194:	b	12fa0 <argp_parse@@Base+0xe78>
   13198:	andeq	r7, r1, r0, lsl sp
   1319c:	andeq	r0, r0, r6, ror #15
   131a0:	andeq	r7, r1, r4, lsr #26
   131a4:	andeq	r8, r1, r4, lsr #32
   131a8:	andeq	r7, r1, r8, lsr #26
   131ac:	andeq	r7, r1, ip, asr #26
   131b0:	andeq	r7, r1, ip, lsl sp
   131b4:	strdeq	r7, [r1], -r8
   131b8:	andeq	r7, r1, r8, lsl #28
   131bc:	andeq	r7, r1, r0, lsr #28
   131c0:	andeq	r7, r1, ip, lsr lr
   131c4:	andeq	r7, r1, ip, asr lr
   131c8:	andeq	r7, r1, r0, lsl #29
   131cc:	andeq	r7, r1, r8, lsr #29
   131d0:	ldrdeq	r7, [r1], -r4
   131d4:	andeq	r7, r1, r4, lsl #30
   131d8:	andeq	r7, r1, r8, lsr pc
   131dc:	push	{r4, r5, lr}
   131e0:	sub	sp, sp, #12
   131e4:	ldr	r5, [sp, #24]
   131e8:	ldr	ip, [r5]
   131ec:	cmp	ip, #0
   131f0:	beq	13220 <argp_parse@@Base+0x10f8>
   131f4:	mov	lr, r5
   131f8:	mov	ip, #0
   131fc:	add	ip, ip, #1
   13200:	ldr	r4, [lr, #4]!
   13204:	cmp	r4, #0
   13208:	bne	131fc <argp_parse@@Base+0x10d4>
   1320c:	str	ip, [sp, #4]
   13210:	str	r5, [sp]
   13214:	bl	12ee4 <argp_parse@@Base+0xdbc>
   13218:	add	sp, sp, #12
   1321c:	pop	{r4, r5, pc}
   13220:	mov	ip, #0
   13224:	b	1320c <argp_parse@@Base+0x10e4>
   13228:	push	{r4, r5, lr}
   1322c:	sub	sp, sp, #52	; 0x34
   13230:	ldr	r4, [sp, #64]	; 0x40
   13234:	sub	r4, r4, #4
   13238:	add	r5, sp, #4
   1323c:	mov	ip, #0
   13240:	ldr	lr, [r4, #4]!
   13244:	str	lr, [r5, #4]!
   13248:	cmp	lr, #0
   1324c:	beq	1325c <argp_parse@@Base+0x1134>
   13250:	add	ip, ip, #1
   13254:	cmp	ip, #10
   13258:	bne	13240 <argp_parse@@Base+0x1118>
   1325c:	str	ip, [sp, #4]
   13260:	add	ip, sp, #8
   13264:	str	ip, [sp]
   13268:	bl	12ee4 <argp_parse@@Base+0xdbc>
   1326c:	add	sp, sp, #52	; 0x34
   13270:	pop	{r4, r5, pc}
   13274:	push	{r3}		; (str r3, [sp, #-4]!)
   13278:	push	{lr}		; (str lr, [sp, #-4]!)
   1327c:	sub	sp, sp, #16
   13280:	add	r3, sp, #24
   13284:	str	r3, [sp, #12]
   13288:	str	r3, [sp]
   1328c:	ldr	r3, [sp, #20]
   13290:	bl	13228 <argp_parse@@Base+0x1100>
   13294:	add	sp, sp, #16
   13298:	pop	{lr}		; (ldr lr, [sp], #4)
   1329c:	add	sp, sp, #4
   132a0:	bx	lr
   132a4:	push	{r4, lr}
   132a8:	ldr	r3, [pc, #52]	; 132e4 <argp_parse@@Base+0x11bc>
   132ac:	ldr	r1, [r3]
   132b0:	mov	r0, #10
   132b4:	bl	113a4 <fputc@plt>
   132b8:	ldr	r1, [pc, #40]	; 132e8 <argp_parse@@Base+0x11c0>
   132bc:	ldr	r0, [pc, #40]	; 132ec <argp_parse@@Base+0x11c4>
   132c0:	bl	11134 <printf@plt>
   132c4:	ldr	r2, [pc, #36]	; 132f0 <argp_parse@@Base+0x11c8>
   132c8:	ldr	r1, [pc, #36]	; 132f4 <argp_parse@@Base+0x11cc>
   132cc:	ldr	r0, [pc, #36]	; 132f8 <argp_parse@@Base+0x11d0>
   132d0:	bl	11134 <printf@plt>
   132d4:	ldr	r1, [pc, #32]	; 132fc <argp_parse@@Base+0x11d4>
   132d8:	ldr	r0, [pc, #32]	; 13300 <argp_parse@@Base+0x11d8>
   132dc:	bl	11134 <printf@plt>
   132e0:	pop	{r4, pc}
   132e4:	ldrdeq	r9, [r2], -ip
   132e8:	andeq	r7, r1, r4, ror pc
   132ec:	andeq	r7, r1, ip, lsl #31
   132f0:	andeq	r7, r1, r0, lsr #31
   132f4:			; <UNDEFINED> instruction: 0x00017cbc
   132f8:	andeq	r7, r1, r8, asr #31
   132fc:	ldrdeq	r7, [r1], -ip
   13300:	strdeq	r7, [r1], -ip
   13304:	push	{r4, lr}
   13308:	cmp	r0, #0
   1330c:	moveq	r0, #1
   13310:	cmp	r0, #0
   13314:	blt	13320 <argp_parse@@Base+0x11f8>
   13318:	bl	11260 <malloc@plt>
   1331c:	pop	{r4, pc}
   13320:	bl	112f0 <__errno_location@plt>
   13324:	mov	r3, #12
   13328:	str	r3, [r0]
   1332c:	mov	r0, #0
   13330:	pop	{r4, pc}
   13334:	ldr	r3, [r0]
   13338:	ldr	r2, [r0, #4]
   1333c:	cmp	r2, #0
   13340:	beq	1337c <argp_parse@@Base+0x1254>
   13344:	add	r3, r3, #24
   13348:	b	13358 <argp_parse@@Base+0x1230>
   1334c:	add	r3, r3, #24
   13350:	subs	r2, r2, #1
   13354:	beq	13374 <argp_parse@@Base+0x124c>
   13358:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1335c:	cmp	r0, #0
   13360:	beq	1334c <argp_parse@@Base+0x1224>
   13364:	ldr	r1, [r3, #-12]
   13368:	tst	r1, #2
   1336c:	bne	1334c <argp_parse@@Base+0x1224>
   13370:	bx	lr
   13374:	mov	r0, #0
   13378:	bx	lr
   1337c:	mov	r0, #0
   13380:	bx	lr
   13384:	ldr	r2, [r0, #8]
   13388:	cmp	r2, #0
   1338c:	beq	13398 <argp_parse@@Base+0x1270>
   13390:	mov	r0, #0
   13394:	bx	lr
   13398:	ldr	r2, [r1, #8]
   1339c:	cmp	r2, #0
   133a0:	bne	13390 <argp_parse@@Base+0x1268>
   133a4:	ldr	r2, [r0, #12]
   133a8:	ldr	r1, [r1, #12]
   133ac:	orr	r2, r2, r1
   133b0:	tst	r2, #16
   133b4:	ldreq	r2, [r3]
   133b8:	addeq	r1, r2, #1
   133bc:	streq	r1, [r3]
   133c0:	ldreq	r3, [r0, #4]
   133c4:	strbeq	r3, [r2]
   133c8:	b	13390 <argp_parse@@Base+0x1268>
   133cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133d0:	sub	sp, sp, #12
   133d4:	ldr	r4, [r0]
   133d8:	ldr	r9, [r0, #8]
   133dc:	ldr	r5, [r0, #4]
   133e0:	cmp	r5, #0
   133e4:	beq	13438 <argp_parse@@Base+0x1310>
   133e8:	str	r3, [sp, #4]
   133ec:	str	r2, [sp]
   133f0:	mov	fp, r1
   133f4:	mov	sl, r4
   133f8:	mov	r8, #0
   133fc:	b	13478 <argp_parse@@Base+0x1350>
   13400:	and	r3, r6, #4
   13404:	cmp	r3, #0
   13408:	moveq	sl, r4
   1340c:	tst	r6, #2
   13410:	beq	1341c <argp_parse@@Base+0x12f4>
   13414:	add	r9, r9, #1
   13418:	b	13454 <argp_parse@@Base+0x132c>
   1341c:	ldr	r3, [sp, #4]
   13420:	ldr	r2, [sp]
   13424:	mov	r1, sl
   13428:	mov	r0, r4
   1342c:	blx	fp
   13430:	mov	r8, r0
   13434:	b	13414 <argp_parse@@Base+0x12ec>
   13438:	mov	r8, #0
   1343c:	mov	r0, r8
   13440:	add	sp, sp, #12
   13444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13448:	ldrb	r3, [r9]
   1344c:	cmp	r3, r7
   13450:	beq	13400 <argp_parse@@Base+0x12d8>
   13454:	add	r4, r4, #24
   13458:	subs	r5, r5, #1
   1345c:	movne	r3, #1
   13460:	moveq	r3, #0
   13464:	cmp	r8, #0
   13468:	movne	r3, #0
   1346c:	andeq	r3, r3, #1
   13470:	cmp	r3, #0
   13474:	beq	1343c <argp_parse@@Base+0x1314>
   13478:	ldr	r6, [r4, #12]
   1347c:	tst	r6, #8
   13480:	bne	13454 <argp_parse@@Base+0x132c>
   13484:	ldr	r7, [r4, #4]
   13488:	sub	r3, r7, #1
   1348c:	cmp	r3, #254	; 0xfe
   13490:	bhi	13454 <argp_parse@@Base+0x132c>
   13494:	bl	112a8 <__ctype_b_loc@plt>
   13498:	ldr	r2, [r0]
   1349c:	lsl	r3, r7, #1
   134a0:	ldrh	r3, [r2, r3]
   134a4:	tst	r3, #16384	; 0x4000
   134a8:	bne	13448 <argp_parse@@Base+0x1320>
   134ac:	b	13454 <argp_parse@@Base+0x132c>
   134b0:	push	{r4, r5, r6, lr}
   134b4:	ldr	r4, [r0, #12]
   134b8:	ands	r4, r4, #8
   134bc:	movne	r4, #0
   134c0:	bne	134f0 <argp_parse@@Base+0x13c8>
   134c4:	ldr	r5, [r0, #4]
   134c8:	sub	r3, r5, #1
   134cc:	cmp	r3, #254	; 0xfe
   134d0:	bhi	134f0 <argp_parse@@Base+0x13c8>
   134d4:	bl	112a8 <__ctype_b_loc@plt>
   134d8:	ldr	r2, [r0]
   134dc:	lsl	r3, r5, #1
   134e0:	ldrh	r3, [r2, r3]
   134e4:	and	r3, r3, #16384	; 0x4000
   134e8:	cmp	r3, #0
   134ec:	movne	r4, r5
   134f0:	mov	r0, r4
   134f4:	pop	{r4, r5, r6, pc}
   134f8:	push	{r4, lr}
   134fc:	mov	r4, r0
   13500:	bl	112a8 <__ctype_b_loc@plt>
   13504:	b	13510 <argp_parse@@Base+0x13e8>
   13508:	add	r3, r3, #1
   1350c:	str	r3, [r4]
   13510:	ldr	r3, [r4]
   13514:	ldrb	r2, [r3]
   13518:	ldr	ip, [r0]
   1351c:	lsl	r1, r2, #1
   13520:	ldrh	r1, [ip, r1]
   13524:	tst	r1, #8192	; 0x2000
   13528:	bne	13508 <argp_parse@@Base+0x13e0>
   1352c:	subs	ip, r2, #45	; 0x2d
   13530:	movne	ip, #1
   13534:	cmp	r2, #0
   13538:	beq	1356c <argp_parse@@Base+0x1444>
   1353c:	tst	r1, #8
   13540:	bne	1356c <argp_parse@@Base+0x1444>
   13544:	add	r3, r3, #1
   13548:	str	r3, [r4]
   1354c:	ldrb	r2, [r3]
   13550:	cmp	r2, #0
   13554:	beq	1356c <argp_parse@@Base+0x1444>
   13558:	ldr	r1, [r0]
   1355c:	lsl	r2, r2, #1
   13560:	ldrh	r2, [r1, r2]
   13564:	tst	r2, #8
   13568:	beq	13544 <argp_parse@@Base+0x141c>
   1356c:	mov	r0, ip
   13570:	pop	{r4, pc}
   13574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13578:	add	fp, sp, #32
   1357c:	sub	sp, sp, #12
   13580:	ldr	r5, [r0, #4]
   13584:	cmp	r5, #0
   13588:	bne	13594 <argp_parse@@Base+0x146c>
   1358c:	sub	sp, fp, #32
   13590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13594:	mov	r9, r1
   13598:	mov	r6, r0
   1359c:	ldr	r0, [r0, #8]
   135a0:	bl	112cc <strlen@plt>
   135a4:	add	r3, r0, #15
   135a8:	bic	r3, r3, #7
   135ac:	sub	sp, sp, r3
   135b0:	mov	sl, sp
   135b4:	sub	r7, fp, #36	; 0x24
   135b8:	str	sp, [r7, #-4]!
   135bc:	ldr	r4, [r6]
   135c0:	ldr	r8, [pc, #336]	; 13718 <argp_parse@@Base+0x15f0>
   135c4:	ldr	r2, [r4, #20]
   135c8:	mov	r3, r7
   135cc:	ldr	r2, [r2, #24]
   135d0:	mov	r1, r8
   135d4:	mov	r0, r4
   135d8:	bl	133cc <argp_parse@@Base+0x12a4>
   135dc:	add	r4, r4, #28
   135e0:	subs	r5, r5, #1
   135e4:	bne	135c4 <argp_parse@@Base+0x149c>
   135e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135ec:	cmp	sl, r3
   135f0:	bcc	13648 <argp_parse@@Base+0x1520>
   135f4:	ldr	r4, [r6]
   135f8:	ldr	r5, [r6, #4]
   135fc:	cmp	r5, #0
   13600:	beq	1358c <argp_parse@@Base+0x1464>
   13604:	ldr	r7, [pc, #272]	; 1371c <argp_parse@@Base+0x15f4>
   13608:	ldr	r2, [r4, #20]
   1360c:	mov	r3, r9
   13610:	ldr	r2, [r2, #24]
   13614:	mov	r1, r7
   13618:	mov	r0, r4
   1361c:	bl	133cc <argp_parse@@Base+0x12a4>
   13620:	add	r4, r4, #28
   13624:	subs	r5, r5, #1
   13628:	bne	13608 <argp_parse@@Base+0x14e0>
   1362c:	ldr	r7, [r6]
   13630:	ldr	r8, [r6, #4]
   13634:	cmp	r8, #0
   13638:	beq	1358c <argp_parse@@Base+0x1464>
   1363c:	add	r7, r7, #28
   13640:	ldr	sl, [pc, #216]	; 13720 <argp_parse@@Base+0x15f8>
   13644:	b	13700 <argp_parse@@Base+0x15d8>
   13648:	add	r2, r3, #1
   1364c:	str	r2, [fp, #-40]	; 0xffffffd8
   13650:	mov	r2, #0
   13654:	strb	r2, [r3]
   13658:	mov	r2, sl
   1365c:	ldr	r1, [pc, #192]	; 13724 <argp_parse@@Base+0x15fc>
   13660:	mov	r0, r9
   13664:	bl	177d4 <argp_error@@Base+0x1420>
   13668:	b	135f4 <argp_parse@@Base+0x14cc>
   1366c:	tst	r1, #16
   13670:	bne	13694 <argp_parse@@Base+0x156c>
   13674:	ldr	r3, [r6, #8]
   13678:	cmp	r3, #0
   1367c:	beq	136e4 <argp_parse@@Base+0x15bc>
   13680:	tst	r1, #1
   13684:	ldrne	r1, [pc, #156]	; 13728 <argp_parse@@Base+0x1600>
   13688:	moveq	r1, sl
   1368c:	mov	r0, r9
   13690:	bl	177d4 <argp_error@@Base+0x1420>
   13694:	add	r4, r4, #24
   13698:	subs	r5, r5, #1
   1369c:	beq	136f4 <argp_parse@@Base+0x15cc>
   136a0:	ldr	r2, [r4]
   136a4:	cmp	r2, #0
   136a8:	beq	13694 <argp_parse@@Base+0x156c>
   136ac:	ldr	r1, [r4, #12]
   136b0:	and	r3, r1, #4
   136b4:	cmp	r3, #0
   136b8:	moveq	r6, r4
   136bc:	tst	r1, #2
   136c0:	bne	13694 <argp_parse@@Base+0x156c>
   136c4:	ldr	r3, [r4, #8]
   136c8:	ldr	r0, [r6, #12]
   136cc:	orr	r1, r1, r0
   136d0:	cmp	r3, #0
   136d4:	beq	1366c <argp_parse@@Base+0x1544>
   136d8:	tst	r1, #16
   136dc:	beq	13680 <argp_parse@@Base+0x1558>
   136e0:	b	13694 <argp_parse@@Base+0x156c>
   136e4:	ldr	r1, [pc, #64]	; 1372c <argp_parse@@Base+0x1604>
   136e8:	mov	r0, r9
   136ec:	bl	177d4 <argp_error@@Base+0x1420>
   136f0:	b	13694 <argp_parse@@Base+0x156c>
   136f4:	add	r7, r7, #28
   136f8:	subs	r8, r8, #1
   136fc:	beq	1358c <argp_parse@@Base+0x1464>
   13700:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13704:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13708:	cmp	r5, #0
   1370c:	beq	136f4 <argp_parse@@Base+0x15cc>
   13710:	mov	r6, r4
   13714:	b	136a0 <argp_parse@@Base+0x1578>
   13718:	andeq	r3, r1, r4, lsl #7
   1371c:	andeq	r3, r1, r4, asr #19
   13720:	andeq	r8, r1, r4, lsl r1
   13724:	strdeq	r8, [r1], -ip
   13728:	andeq	r8, r1, r4, lsl #2
   1372c:	andeq	r8, r1, r0, lsr #2
   13730:	push	{r4, r5, r6, lr}
   13734:	mov	r5, r0
   13738:	ldr	r0, [r0, #12]
   1373c:	cmp	r0, #0
   13740:	beq	13758 <argp_parse@@Base+0x1630>
   13744:	ldr	r4, [r0, #24]
   13748:	bl	12d1c <argp_parse@@Base+0xbf4>
   1374c:	mov	r0, r4
   13750:	cmp	r4, #0
   13754:	bne	13744 <argp_parse@@Base+0x161c>
   13758:	ldr	r3, [r5, #4]
   1375c:	cmp	r3, #0
   13760:	bne	13770 <argp_parse@@Base+0x1648>
   13764:	mov	r0, r5
   13768:	bl	12d1c <argp_parse@@Base+0xbf4>
   1376c:	pop	{r4, r5, r6, pc}
   13770:	ldr	r0, [r5]
   13774:	bl	12d1c <argp_parse@@Base+0xbf4>
   13778:	ldr	r0, [r5, #8]
   1377c:	bl	12d1c <argp_parse@@Base+0xbf4>
   13780:	b	13764 <argp_parse@@Base+0x163c>
   13784:	push	{r4, r5, r6, r7, r8, lr}
   13788:	mov	r6, r1
   1378c:	ldr	r7, [r0]
   13790:	ldr	r3, [r0, #4]
   13794:	sub	r8, r3, #1
   13798:	cmp	r3, #0
   1379c:	bne	137f8 <argp_parse@@Base+0x16d0>
   137a0:	mov	r7, #0
   137a4:	b	137e0 <argp_parse@@Base+0x16b8>
   137a8:	sub	r5, r5, #1
   137ac:	add	r4, r4, #24
   137b0:	cmn	r5, #1
   137b4:	beq	137e8 <argp_parse@@Base+0x16c0>
   137b8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   137bc:	cmp	r0, #0
   137c0:	beq	137a8 <argp_parse@@Base+0x1680>
   137c4:	ldr	r3, [r4, #-12]
   137c8:	tst	r3, #2
   137cc:	bne	137a8 <argp_parse@@Base+0x1680>
   137d0:	mov	r1, r6
   137d4:	bl	1111c <strcmp@plt>
   137d8:	cmp	r0, #0
   137dc:	bne	137a8 <argp_parse@@Base+0x1680>
   137e0:	mov	r0, r7
   137e4:	pop	{r4, r5, r6, r7, r8, pc}
   137e8:	add	r7, r7, #28
   137ec:	sub	r8, r8, #1
   137f0:	cmn	r8, #1
   137f4:	beq	13814 <argp_parse@@Base+0x16ec>
   137f8:	ldr	r4, [r7]
   137fc:	ldr	r3, [r7, #4]
   13800:	sub	r5, r3, #1
   13804:	cmp	r3, #0
   13808:	beq	137e8 <argp_parse@@Base+0x16c0>
   1380c:	add	r4, r4, #24
   13810:	b	137b8 <argp_parse@@Base+0x1690>
   13814:	mov	r7, #0
   13818:	b	137e0 <argp_parse@@Base+0x16b8>
   1381c:	push	{r4, r5, r6, lr}
   13820:	ldr	r4, [r0, #16]
   13824:	ldr	r0, [r0, #8]
   13828:	cmp	r0, #0
   1382c:	moveq	r5, #0
   13830:	beq	13844 <argp_parse@@Base+0x171c>
   13834:	mov	r1, #10
   13838:	bl	112d8 <strchr@plt>
   1383c:	adds	r5, r0, #0
   13840:	movne	r5, #1
   13844:	cmp	r4, #0
   13848:	beq	1386c <argp_parse@@Base+0x1744>
   1384c:	ldr	r0, [r4]
   13850:	cmp	r0, #0
   13854:	beq	1386c <argp_parse@@Base+0x1744>
   13858:	bl	1381c <argp_parse@@Base+0x16f4>
   1385c:	add	r5, r5, r0
   13860:	ldr	r0, [r4, #16]!
   13864:	cmp	r0, #0
   13868:	bne	13858 <argp_parse@@Base+0x1730>
   1386c:	mov	r0, r5
   13870:	pop	{r4, r5, r6, pc}
   13874:	push	{r4, r5, r6, r7, r8, lr}
   13878:	mov	r4, r0
   1387c:	mov	r5, r1
   13880:	ldr	r3, [r0, #28]
   13884:	ldr	r2, [r0, #24]
   13888:	sub	r3, r3, r2
   1388c:	ldr	r2, [r0, #16]
   13890:	cmp	r3, r2
   13894:	bhi	138b0 <argp_parse@@Base+0x1788>
   13898:	ldr	r3, [r4, #20]
   1389c:	cmp	r3, #0
   138a0:	subge	r5, r5, r3
   138a4:	mov	r6, #32
   138a8:	mov	r7, #1
   138ac:	b	138cc <argp_parse@@Base+0x17a4>
   138b0:	bl	17140 <argp_error@@Base+0xd8c>
   138b4:	b	13898 <argp_parse@@Base+0x1770>
   138b8:	ldr	r3, [r4, #28]
   138bc:	add	r2, r3, #1
   138c0:	str	r2, [r4, #28]
   138c4:	strb	r6, [r3]
   138c8:	sub	r5, r5, #1
   138cc:	cmp	r5, #0
   138d0:	ble	138fc <argp_parse@@Base+0x17d4>
   138d4:	ldr	r2, [r4, #28]
   138d8:	ldr	r3, [r4, #32]
   138dc:	cmp	r2, r3
   138e0:	bcc	138b8 <argp_parse@@Base+0x1790>
   138e4:	mov	r1, r7
   138e8:	mov	r0, r4
   138ec:	bl	176e4 <argp_error@@Base+0x1330>
   138f0:	cmp	r0, #0
   138f4:	beq	138c8 <argp_parse@@Base+0x17a0>
   138f8:	b	138b8 <argp_parse@@Base+0x1790>
   138fc:	pop	{r4, r5, r6, r7, r8, pc}
   13900:	push	{r4, r5, r6, lr}
   13904:	mov	r4, r0
   13908:	mov	r5, r1
   1390c:	ldr	r3, [r0, #28]
   13910:	ldr	r2, [r0, #24]
   13914:	sub	r3, r3, r2
   13918:	ldr	r2, [r0, #16]
   1391c:	cmp	r3, r2
   13920:	bhi	13964 <argp_parse@@Base+0x183c>
   13924:	ldr	r3, [r4, #20]
   13928:	cmp	r3, #0
   1392c:	addge	r5, r5, r3
   13930:	ldr	r3, [r4, #8]
   13934:	cmp	r5, r3
   13938:	bcc	13984 <argp_parse@@Base+0x185c>
   1393c:	ldr	r2, [r4, #28]
   13940:	ldr	r3, [r4, #32]
   13944:	cmp	r2, r3
   13948:	bcs	1396c <argp_parse@@Base+0x1844>
   1394c:	ldr	r3, [r4, #28]
   13950:	add	r2, r3, #1
   13954:	str	r2, [r4, #28]
   13958:	mov	r2, #10
   1395c:	strb	r2, [r3]
   13960:	pop	{r4, r5, r6, pc}
   13964:	bl	17140 <argp_error@@Base+0xd8c>
   13968:	b	13924 <argp_parse@@Base+0x17fc>
   1396c:	mov	r1, #1
   13970:	mov	r0, r4
   13974:	bl	176e4 <argp_error@@Base+0x1330>
   13978:	cmp	r0, #0
   1397c:	popeq	{r4, r5, r6, pc}
   13980:	b	1394c <argp_parse@@Base+0x1824>
   13984:	ldr	r2, [r4, #28]
   13988:	ldr	r3, [r4, #32]
   1398c:	cmp	r2, r3
   13990:	bcs	139ac <argp_parse@@Base+0x1884>
   13994:	ldr	r3, [r4, #28]
   13998:	add	r2, r3, #1
   1399c:	str	r2, [r4, #28]
   139a0:	mov	r2, #32
   139a4:	strb	r2, [r3]
   139a8:	pop	{r4, r5, r6, pc}
   139ac:	mov	r1, #1
   139b0:	mov	r0, r4
   139b4:	bl	176e4 <argp_error@@Base+0x1330>
   139b8:	cmp	r0, #0
   139bc:	bne	13994 <argp_parse@@Base+0x186c>
   139c0:	pop	{r4, r5, r6, pc}
   139c4:	push	{r4, r5, r6, lr}
   139c8:	ldr	r5, [r0, #8]
   139cc:	ldr	r2, [r0, #12]
   139d0:	ldr	ip, [r1, #12]
   139d4:	orr	r2, r2, ip
   139d8:	cmp	r5, #0
   139dc:	beq	13a28 <argp_parse@@Base+0x1900>
   139e0:	tst	r2, #16
   139e4:	bne	13a20 <argp_parse@@Base+0x18f8>
   139e8:	mov	r6, r3
   139ec:	mov	r4, r0
   139f0:	tst	r2, #1
   139f4:	bne	13a38 <argp_parse@@Base+0x1910>
   139f8:	mov	r0, r5
   139fc:	bl	112cc <strlen@plt>
   13a00:	add	r1, r0, #6
   13a04:	mov	r0, r6
   13a08:	bl	13900 <argp_parse@@Base+0x17d8>
   13a0c:	mov	r3, r5
   13a10:	ldr	r2, [r4, #4]
   13a14:	ldr	r1, [pc, #52]	; 13a50 <argp_parse@@Base+0x1928>
   13a18:	mov	r0, r6
   13a1c:	bl	177d4 <argp_error@@Base+0x1420>
   13a20:	mov	r0, #0
   13a24:	pop	{r4, r5, r6, pc}
   13a28:	ldr	r5, [r1, #8]
   13a2c:	cmp	r5, #0
   13a30:	beq	13a20 <argp_parse@@Base+0x18f8>
   13a34:	b	139e0 <argp_parse@@Base+0x18b8>
   13a38:	mov	r3, r5
   13a3c:	ldr	r2, [r0, #4]
   13a40:	ldr	r1, [pc, #12]	; 13a54 <argp_parse@@Base+0x192c>
   13a44:	mov	r0, r6
   13a48:	bl	177d4 <argp_error@@Base+0x1420>
   13a4c:	b	13a20 <argp_parse@@Base+0x18f8>
   13a50:	andeq	r8, r1, r4, lsr r1
   13a54:	andeq	r8, r1, r8, lsr #2
   13a58:	push	{r4, r5, r6, lr}
   13a5c:	subs	r5, r2, #0
   13a60:	popeq	{r4, r5, r6, pc}
   13a64:	ldr	ip, [r5, #20]
   13a68:	cmp	ip, #0
   13a6c:	popeq	{r4, r5, r6, pc}
   13a70:	mov	r6, r1
   13a74:	mov	r4, r0
   13a78:	mov	r1, r3
   13a7c:	mov	r0, r5
   13a80:	bl	12b9c <argp_parse@@Base+0xa74>
   13a84:	ldr	r3, [r5, #20]
   13a88:	mov	r2, r0
   13a8c:	mov	r1, r4
   13a90:	mov	r0, r6
   13a94:	blx	r3
   13a98:	pop	{r4, r5, r6, pc}
   13a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13aa0:	sub	sp, sp, #28
   13aa4:	str	r1, [sp, #16]
   13aa8:	mov	r8, r2
   13aac:	mov	r4, r3
   13ab0:	ldr	r5, [sp, #64]	; 0x40
   13ab4:	ldr	r3, [r2]
   13ab8:	mov	r6, r3
   13abc:	str	r3, [sp, #20]
   13ac0:	ldr	sl, [r0, #16]
   13ac4:	ldr	r2, [r0, #8]
   13ac8:	mov	ip, r2
   13acc:	str	r2, [sp, #12]
   13ad0:	mov	r3, r1
   13ad4:	mov	r2, r0
   13ad8:	ldr	r1, [pc, #424]	; 13c88 <argp_parse@@Base+0x1b60>
   13adc:	mov	r0, ip
   13ae0:	bl	13a58 <argp_parse@@Base+0x1930>
   13ae4:	subs	r3, r0, #0
   13ae8:	str	r3, [sp, #8]
   13aec:	beq	13c74 <argp_parse@@Base+0x1b4c>
   13af0:	mov	r1, #10
   13af4:	mov	r0, r3
   13af8:	bl	11164 <strchrnul@plt>
   13afc:	mov	r7, r0
   13b00:	ldrb	r3, [r0]
   13b04:	cmp	r3, #0
   13b08:	beq	13c44 <argp_parse@@Base+0x1b1c>
   13b0c:	ldrb	fp, [r6]
   13b10:	cmp	fp, #0
   13b14:	ble	13c3c <argp_parse@@Base+0x1b14>
   13b18:	mov	r6, #0
   13b1c:	add	r9, r0, #1
   13b20:	mov	r1, #10
   13b24:	mov	r0, r9
   13b28:	bl	11164 <strchrnul@plt>
   13b2c:	add	r6, r6, #1
   13b30:	cmp	r6, fp
   13b34:	bne	13b1c <argp_parse@@Base+0x19f4>
   13b38:	mov	r7, r0
   13b3c:	ldr	r3, [r8]
   13b40:	add	r3, r3, #1
   13b44:	str	r3, [r8]
   13b48:	mov	fp, #1
   13b4c:	add	r1, r7, #1
   13b50:	sub	r1, r1, r9
   13b54:	mov	r0, r5
   13b58:	bl	13900 <argp_parse@@Base+0x17d8>
   13b5c:	sub	r6, r7, r9
   13b60:	ldr	r3, [r5, #28]
   13b64:	add	r3, r3, r6
   13b68:	ldr	r2, [r5, #32]
   13b6c:	cmp	r2, r3
   13b70:	bcs	13b88 <argp_parse@@Base+0x1a60>
   13b74:	mov	r1, r6
   13b78:	mov	r0, r5
   13b7c:	bl	176e4 <argp_error@@Base+0x1330>
   13b80:	cmp	r0, #0
   13b84:	beq	13ba4 <argp_parse@@Base+0x1a7c>
   13b88:	mov	r2, r6
   13b8c:	mov	r1, r9
   13b90:	ldr	r0, [r5, #28]
   13b94:	bl	11194 <memcpy@plt>
   13b98:	ldr	r3, [r5, #28]
   13b9c:	add	r6, r3, r6
   13ba0:	str	r6, [r5, #28]
   13ba4:	ldr	r3, [sp, #12]
   13ba8:	ldr	r2, [sp, #8]
   13bac:	cmp	r3, r2
   13bb0:	bne	13c50 <argp_parse@@Base+0x1b28>
   13bb4:	cmp	sl, #0
   13bb8:	beq	13bf8 <argp_parse@@Base+0x1ad0>
   13bbc:	ldr	r0, [sl]
   13bc0:	cmp	r0, #0
   13bc4:	beq	13bf8 <argp_parse@@Base+0x1ad0>
   13bc8:	mov	r3, r4
   13bcc:	ldr	r4, [sp, #16]
   13bd0:	str	r5, [sp]
   13bd4:	mov	r2, r8
   13bd8:	mov	r1, r4
   13bdc:	bl	13a9c <argp_parse@@Base+0x1974>
   13be0:	clz	r3, r0
   13be4:	lsr	r3, r3, #5
   13be8:	ldr	r0, [sl, #16]!
   13bec:	cmp	r0, #0
   13bf0:	bne	13bd0 <argp_parse@@Base+0x1aa8>
   13bf4:	mov	r4, r3
   13bf8:	cmp	r4, #0
   13bfc:	moveq	fp, #0
   13c00:	andne	fp, fp, #1
   13c04:	cmp	fp, #0
   13c08:	beq	13c2c <argp_parse@@Base+0x1b04>
   13c0c:	ldrb	r3, [r7]
   13c10:	cmp	r3, #0
   13c14:	bne	13c5c <argp_parse@@Base+0x1b34>
   13c18:	ldr	r2, [sp, #20]
   13c1c:	ldrb	r3, [r2]
   13c20:	cmp	r3, #0
   13c24:	movne	r3, #0
   13c28:	strbne	r3, [r2]
   13c2c:	clz	r0, r4
   13c30:	lsr	r0, r0, #5
   13c34:	add	sp, sp, #28
   13c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c3c:	ldr	r9, [sp, #8]
   13c40:	b	13b3c <argp_parse@@Base+0x1a14>
   13c44:	ldr	r9, [sp, #8]
   13c48:	mov	fp, #0
   13c4c:	b	13b4c <argp_parse@@Base+0x1a24>
   13c50:	mov	r0, r2
   13c54:	bl	12d1c <argp_parse@@Base+0xbf4>
   13c58:	b	13bb4 <argp_parse@@Base+0x1a8c>
   13c5c:	ldr	r2, [sp, #20]
   13c60:	ldrb	r3, [r2]
   13c64:	add	r3, r3, #1
   13c68:	strb	r3, [r2]
   13c6c:	mov	r4, #0
   13c70:	b	13c2c <argp_parse@@Base+0x1b04>
   13c74:	cmp	sl, #0
   13c78:	beq	13c2c <argp_parse@@Base+0x1b04>
   13c7c:	ldr	r7, [sp, #8]
   13c80:	mov	fp, #0
   13c84:	b	13bbc <argp_parse@@Base+0x1a94>
   13c88:	andeq	r0, r0, #6
   13c8c:	push	{r4, r5, r6, r7, r8, lr}
   13c90:	mov	r7, r0
   13c94:	mov	r4, r2
   13c98:	ldr	r3, [r2, #16]
   13c9c:	mov	r2, r1
   13ca0:	ldr	r1, [pc, #448]	; 13e68 <argp_parse@@Base+0x1d40>
   13ca4:	bl	13a58 <argp_parse@@Base+0x1930>
   13ca8:	subs	r5, r0, #0
   13cac:	beq	13e00 <argp_parse@@Base+0x1cd8>
   13cb0:	ldrb	r3, [r5]
   13cb4:	cmp	r3, #0
   13cb8:	beq	13df4 <argp_parse@@Base+0x1ccc>
   13cbc:	ldr	r3, [r4, #8]
   13cc0:	ldr	r3, [r3]
   13cc4:	cmp	r3, #0
   13cc8:	beq	13cf4 <argp_parse@@Base+0x1bcc>
   13ccc:	ldr	r6, [r4, #4]
   13cd0:	ldr	r2, [r6, #28]
   13cd4:	ldr	r3, [r6, #32]
   13cd8:	cmp	r2, r3
   13cdc:	bcs	13e14 <argp_parse@@Base+0x1cec>
   13ce0:	ldr	r3, [r6, #28]
   13ce4:	add	r2, r3, #1
   13ce8:	str	r2, [r6, #28]
   13cec:	mov	r2, #10
   13cf0:	strb	r2, [r3]
   13cf4:	ldr	r8, [pc, #368]	; 13e6c <argp_parse@@Base+0x1d44>
   13cf8:	ldr	r1, [r8, #24]
   13cfc:	ldr	r0, [r4, #4]
   13d00:	bl	13874 <argp_parse@@Base+0x174c>
   13d04:	ldr	r6, [r4, #4]
   13d08:	ldr	r8, [r8, #24]
   13d0c:	ldr	r3, [r6, #28]
   13d10:	ldr	r2, [r6, #24]
   13d14:	sub	r3, r3, r2
   13d18:	ldr	r2, [r6, #16]
   13d1c:	cmp	r3, r2
   13d20:	bhi	13e2c <argp_parse@@Base+0x1d04>
   13d24:	str	r8, [r6, #4]
   13d28:	ldr	r6, [r4, #4]
   13d2c:	ldr	r3, [pc, #312]	; 13e6c <argp_parse@@Base+0x1d44>
   13d30:	ldr	r8, [r3, #24]
   13d34:	ldr	r3, [r6, #28]
   13d38:	ldr	r2, [r6, #24]
   13d3c:	sub	r3, r3, r2
   13d40:	ldr	r2, [r6, #16]
   13d44:	cmp	r3, r2
   13d48:	bhi	13e38 <argp_parse@@Base+0x1d10>
   13d4c:	str	r8, [r6, #12]
   13d50:	mov	r0, r5
   13d54:	bl	112cc <strlen@plt>
   13d58:	subs	r8, r0, #0
   13d5c:	beq	13da8 <argp_parse@@Base+0x1c80>
   13d60:	ldr	r6, [r4, #4]
   13d64:	ldr	r3, [r6, #28]
   13d68:	add	r3, r3, r8
   13d6c:	ldr	r2, [r6, #32]
   13d70:	cmp	r2, r3
   13d74:	bcs	13d8c <argp_parse@@Base+0x1c64>
   13d78:	mov	r1, r8
   13d7c:	mov	r0, r6
   13d80:	bl	176e4 <argp_error@@Base+0x1330>
   13d84:	cmp	r0, #0
   13d88:	beq	13da8 <argp_parse@@Base+0x1c80>
   13d8c:	mov	r2, r8
   13d90:	mov	r1, r5
   13d94:	ldr	r0, [r6, #28]
   13d98:	bl	11194 <memcpy@plt>
   13d9c:	ldr	r3, [r6, #28]
   13da0:	add	r8, r3, r8
   13da4:	str	r8, [r6, #28]
   13da8:	ldr	r6, [r4, #4]
   13dac:	ldr	r3, [r6, #28]
   13db0:	ldr	r2, [r6, #24]
   13db4:	sub	r3, r3, r2
   13db8:	ldr	r2, [r6, #16]
   13dbc:	cmp	r3, r2
   13dc0:	bhi	13e44 <argp_parse@@Base+0x1d1c>
   13dc4:	mov	r3, #0
   13dc8:	str	r3, [r6, #4]
   13dcc:	ldr	r6, [r4, #4]
   13dd0:	ldr	r2, [r6, #28]
   13dd4:	ldr	r3, [r6, #32]
   13dd8:	cmp	r2, r3
   13ddc:	bcs	13e50 <argp_parse@@Base+0x1d28>
   13de0:	ldr	r3, [r6, #28]
   13de4:	add	r2, r3, #1
   13de8:	str	r2, [r6, #28]
   13dec:	mov	r2, #10
   13df0:	strb	r2, [r3]
   13df4:	ldr	r3, [r4, #8]
   13df8:	mov	r2, #1
   13dfc:	str	r2, [r3, #4]
   13e00:	cmp	r7, r5
   13e04:	popeq	{r4, r5, r6, r7, r8, pc}
   13e08:	mov	r0, r5
   13e0c:	bl	12d1c <argp_parse@@Base+0xbf4>
   13e10:	pop	{r4, r5, r6, r7, r8, pc}
   13e14:	mov	r1, #1
   13e18:	mov	r0, r6
   13e1c:	bl	176e4 <argp_error@@Base+0x1330>
   13e20:	cmp	r0, #0
   13e24:	beq	13cf4 <argp_parse@@Base+0x1bcc>
   13e28:	b	13ce0 <argp_parse@@Base+0x1bb8>
   13e2c:	mov	r0, r6
   13e30:	bl	17140 <argp_error@@Base+0xd8c>
   13e34:	b	13d24 <argp_parse@@Base+0x1bfc>
   13e38:	mov	r0, r6
   13e3c:	bl	17140 <argp_error@@Base+0xd8c>
   13e40:	b	13d4c <argp_parse@@Base+0x1c24>
   13e44:	mov	r0, r6
   13e48:	bl	17140 <argp_error@@Base+0xd8c>
   13e4c:	b	13dc4 <argp_parse@@Base+0x1c9c>
   13e50:	mov	r1, #1
   13e54:	mov	r0, r6
   13e58:	bl	176e4 <argp_error@@Base+0x1330>
   13e5c:	cmp	r0, #0
   13e60:	beq	13df4 <argp_parse@@Base+0x1ccc>
   13e64:	b	13de0 <argp_parse@@Base+0x1cb8>
   13e68:	andeq	r0, r0, #3
   13e6c:	andeq	r9, r2, ip, lsl #3
   13e70:	push	{r4, r5, r6, r7, r8, lr}
   13e74:	mov	r6, r0
   13e78:	mov	r4, r1
   13e7c:	ldr	r3, [r1, #12]
   13e80:	cmp	r3, #0
   13e84:	beq	13fa4 <argp_parse@@Base+0x1e7c>
   13e88:	ldr	r3, [r1, #8]
   13e8c:	ldr	r7, [r3]
   13e90:	ldr	r2, [r1]
   13e94:	ldr	r5, [r2, #16]
   13e98:	ldr	r3, [r3, #4]
   13e9c:	cmp	r3, #0
   13ea0:	cmpne	r7, #0
   13ea4:	beq	13ee0 <argp_parse@@Base+0x1db8>
   13ea8:	ldr	r2, [r2, #12]
   13eac:	ldr	r3, [r7, #12]
   13eb0:	cmp	r2, r3
   13eb4:	beq	13ee0 <argp_parse@@Base+0x1db8>
   13eb8:	ldr	r8, [r1, #4]
   13ebc:	ldr	r2, [r8, #28]
   13ec0:	ldr	r3, [r8, #32]
   13ec4:	cmp	r2, r3
   13ec8:	bcs	13f80 <argp_parse@@Base+0x1e58>
   13ecc:	ldr	r3, [r8, #28]
   13ed0:	add	r2, r3, #1
   13ed4:	str	r2, [r8, #28]
   13ed8:	mov	r2, #10
   13edc:	strb	r2, [r3]
   13ee0:	cmp	r5, #0
   13ee4:	beq	13f68 <argp_parse@@Base+0x1e40>
   13ee8:	ldr	r0, [r5]
   13eec:	cmp	r0, #0
   13ef0:	beq	13f68 <argp_parse@@Base+0x1e40>
   13ef4:	ldrb	r3, [r0]
   13ef8:	cmp	r3, #0
   13efc:	beq	13f68 <argp_parse@@Base+0x1e40>
   13f00:	cmp	r7, #0
   13f04:	beq	13f34 <argp_parse@@Base+0x1e0c>
   13f08:	ldr	r3, [r7, #16]
   13f0c:	cmp	r5, r3
   13f10:	beq	13f68 <argp_parse@@Base+0x1e40>
   13f14:	cmp	r3, #0
   13f18:	beq	13f34 <argp_parse@@Base+0x1e0c>
   13f1c:	ldr	r3, [r3, #12]
   13f20:	cmp	r3, #0
   13f24:	cmpne	r5, r3
   13f28:	bne	13f1c <argp_parse@@Base+0x1df4>
   13f2c:	cmp	r5, r3
   13f30:	beq	13f68 <argp_parse@@Base+0x1e40>
   13f34:	ldr	r3, [r4, #4]
   13f38:	ldr	r7, [r3, #12]
   13f3c:	mov	r2, r4
   13f40:	ldr	r1, [r5, #16]
   13f44:	bl	13c8c <argp_parse@@Base+0x1b64>
   13f48:	ldr	r5, [r4, #4]
   13f4c:	ldr	r3, [r5, #28]
   13f50:	ldr	r2, [r5, #24]
   13f54:	sub	r3, r3, r2
   13f58:	ldr	r2, [r5, #16]
   13f5c:	cmp	r3, r2
   13f60:	bhi	13f98 <argp_parse@@Base+0x1e70>
   13f64:	str	r7, [r5, #12]
   13f68:	mov	r3, #0
   13f6c:	str	r3, [r4, #12]
   13f70:	mov	r1, r6
   13f74:	ldr	r0, [r4, #4]
   13f78:	bl	13874 <argp_parse@@Base+0x174c>
   13f7c:	pop	{r4, r5, r6, r7, r8, pc}
   13f80:	mov	r1, #1
   13f84:	mov	r0, r8
   13f88:	bl	176e4 <argp_error@@Base+0x1330>
   13f8c:	cmp	r0, #0
   13f90:	beq	13ee0 <argp_parse@@Base+0x1db8>
   13f94:	b	13ecc <argp_parse@@Base+0x1da4>
   13f98:	mov	r0, r5
   13f9c:	bl	17140 <argp_error@@Base+0xd8c>
   13fa0:	b	13f64 <argp_parse@@Base+0x1e3c>
   13fa4:	ldr	r5, [r1, #4]
   13fa8:	ldr	r3, [r5, #28]
   13fac:	add	r3, r3, #2
   13fb0:	ldr	r2, [r5, #32]
   13fb4:	cmp	r2, r3
   13fb8:	bcs	13fd0 <argp_parse@@Base+0x1ea8>
   13fbc:	mov	r1, #2
   13fc0:	mov	r0, r5
   13fc4:	bl	176e4 <argp_error@@Base+0x1330>
   13fc8:	cmp	r0, #0
   13fcc:	beq	13f70 <argp_parse@@Base+0x1e48>
   13fd0:	ldr	r3, [r5, #28]
   13fd4:	ldr	r2, [pc, #20]	; 13ff0 <argp_parse@@Base+0x1ec8>
   13fd8:	ldrh	r2, [r2]
   13fdc:	strh	r2, [r3]
   13fe0:	ldr	r3, [r5, #28]
   13fe4:	add	r3, r3, #2
   13fe8:	str	r3, [r5, #28]
   13fec:	b	13f70 <argp_parse@@Base+0x1e48>
   13ff0:	andeq	r8, r1, r0, asr #2
   13ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ff8:	sub	sp, sp, #28
   13ffc:	mov	fp, r0
   14000:	str	r1, [sp, #8]
   14004:	mov	r6, r2
   14008:	mov	r8, r3
   1400c:	ldr	r7, [sp, #64]	; 0x40
   14010:	ldr	r5, [sp, #68]	; 0x44
   14014:	ldr	r9, [r0, #12]
   14018:	ldr	r3, [r0, #16]
   1401c:	str	r3, [sp, #16]
   14020:	cmp	r9, #0
   14024:	beq	14480 <argp_parse@@Base+0x2358>
   14028:	mov	r1, #11
   1402c:	mov	r0, r9
   14030:	bl	112d8 <strchr@plt>
   14034:	cmp	r6, #0
   14038:	beq	14330 <argp_parse@@Base+0x2208>
   1403c:	cmp	r0, #0
   14040:	addne	r9, r0, #1
   14044:	beq	14468 <argp_parse@@Base+0x2340>
   14048:	ldr	r3, [fp, #20]
   1404c:	cmp	r3, #0
   14050:	movne	sl, #0
   14054:	beq	14470 <argp_parse@@Base+0x2348>
   14058:	ldr	r1, [sp, #8]
   1405c:	mov	r0, fp
   14060:	bl	12b9c <argp_parse@@Base+0xa74>
   14064:	str	r0, [sp, #12]
   14068:	ldr	r3, [fp, #20]
   1406c:	ldr	r2, [pc, #1140]	; 144e8 <argp_parse@@Base+0x23c0>
   14070:	ldr	r0, [pc, #1140]	; 144ec <argp_parse@@Base+0x23c4>
   14074:	cmp	r6, #0
   14078:	moveq	r0, r2
   1407c:	ldr	r2, [sp, #12]
   14080:	mov	r1, r9
   14084:	blx	r3
   14088:	mov	r4, r0
   1408c:	cmp	r4, #0
   14090:	beq	14420 <argp_parse@@Base+0x22f8>
   14094:	cmp	r8, #0
   14098:	beq	140c0 <argp_parse@@Base+0x1f98>
   1409c:	ldr	r2, [r5, #28]
   140a0:	ldr	r3, [r5, #32]
   140a4:	cmp	r2, r3
   140a8:	bcs	14374 <argp_parse@@Base+0x224c>
   140ac:	ldr	r3, [r5, #28]
   140b0:	add	r2, r3, #1
   140b4:	str	r2, [r5, #28]
   140b8:	mov	r2, #10
   140bc:	strb	r2, [r3]
   140c0:	cmp	r4, r9
   140c4:	movne	r3, #0
   140c8:	moveq	r3, #1
   140cc:	cmp	sl, #0
   140d0:	moveq	r3, #0
   140d4:	cmp	r3, #0
   140d8:	beq	1438c <argp_parse@@Base+0x2264>
   140dc:	ldr	r3, [r5, #28]
   140e0:	add	r3, r3, sl
   140e4:	ldr	r2, [r5, #32]
   140e8:	cmp	r2, r3
   140ec:	bcs	14104 <argp_parse@@Base+0x1fdc>
   140f0:	mov	r1, sl
   140f4:	mov	r0, r5
   140f8:	bl	176e4 <argp_error@@Base+0x1330>
   140fc:	cmp	r0, #0
   14100:	beq	14120 <argp_parse@@Base+0x1ff8>
   14104:	mov	r2, sl
   14108:	mov	r1, r9
   1410c:	ldr	r0, [r5, #28]
   14110:	bl	11194 <memcpy@plt>
   14114:	ldr	r3, [r5, #28]
   14118:	add	r3, r3, sl
   1411c:	str	r3, [r5, #28]
   14120:	ldr	r3, [r5, #28]
   14124:	ldr	r2, [r5, #24]
   14128:	sub	r3, r3, r2
   1412c:	ldr	r2, [r5, #16]
   14130:	cmp	r3, r2
   14134:	bhi	143ec <argp_parse@@Base+0x22c4>
   14138:	ldr	r3, [r5, #20]
   1413c:	bic	r3, r3, r3, asr #31
   14140:	ldr	r2, [r5, #4]
   14144:	cmp	r2, r3
   14148:	bcs	14170 <argp_parse@@Base+0x2048>
   1414c:	ldr	r2, [r5, #28]
   14150:	ldr	r3, [r5, #32]
   14154:	cmp	r2, r3
   14158:	bcs	143f8 <argp_parse@@Base+0x22d0>
   1415c:	ldr	r3, [r5, #28]
   14160:	add	r2, r3, #1
   14164:	str	r2, [r5, #28]
   14168:	mov	r2, #10
   1416c:	strb	r2, [r3]
   14170:	cmp	r4, r9
   14174:	moveq	r4, #1
   14178:	bne	14410 <argp_parse@@Base+0x22e8>
   1417c:	cmp	r9, #0
   14180:	cmpne	sl, #0
   14184:	beq	1419c <argp_parse@@Base+0x2074>
   14188:	ldr	r3, [fp, #20]
   1418c:	cmp	r3, #0
   14190:	beq	142a8 <argp_parse@@Base+0x2180>
   14194:	mov	r0, r9
   14198:	bl	12d1c <argp_parse@@Base+0xbf4>
   1419c:	cmp	r6, #0
   141a0:	beq	142a8 <argp_parse@@Base+0x2180>
   141a4:	ldr	r3, [fp, #20]
   141a8:	cmp	r3, #0
   141ac:	beq	142a8 <argp_parse@@Base+0x2180>
   141b0:	ldr	r2, [sp, #12]
   141b4:	mov	r1, #0
   141b8:	ldr	r0, [pc, #816]	; 144f0 <argp_parse@@Base+0x23c8>
   141bc:	blx	r3
   141c0:	subs	r9, r0, #0
   141c4:	beq	142a8 <argp_parse@@Base+0x2180>
   141c8:	orrs	r3, r8, r4
   141cc:	beq	141f4 <argp_parse@@Base+0x20cc>
   141d0:	ldr	r2, [r5, #28]
   141d4:	ldr	r3, [r5, #32]
   141d8:	cmp	r2, r3
   141dc:	bcs	14428 <argp_parse@@Base+0x2300>
   141e0:	ldr	r3, [r5, #28]
   141e4:	add	r2, r3, #1
   141e8:	str	r2, [r5, #28]
   141ec:	mov	r2, #10
   141f0:	strb	r2, [r3]
   141f4:	mov	r0, r9
   141f8:	bl	112cc <strlen@plt>
   141fc:	subs	r4, r0, #0
   14200:	beq	14248 <argp_parse@@Base+0x2120>
   14204:	ldr	r3, [r5, #28]
   14208:	add	r3, r3, r4
   1420c:	ldr	r2, [r5, #32]
   14210:	cmp	r2, r3
   14214:	bcs	1422c <argp_parse@@Base+0x2104>
   14218:	mov	r1, r4
   1421c:	mov	r0, r5
   14220:	bl	176e4 <argp_error@@Base+0x1330>
   14224:	cmp	r0, #0
   14228:	beq	14248 <argp_parse@@Base+0x2120>
   1422c:	mov	r2, r4
   14230:	mov	r1, r9
   14234:	ldr	r0, [r5, #28]
   14238:	bl	11194 <memcpy@plt>
   1423c:	ldr	r3, [r5, #28]
   14240:	add	r4, r3, r4
   14244:	str	r4, [r5, #28]
   14248:	mov	r0, r9
   1424c:	bl	12d1c <argp_parse@@Base+0xbf4>
   14250:	ldr	r3, [r5, #28]
   14254:	ldr	r2, [r5, #24]
   14258:	sub	r3, r3, r2
   1425c:	ldr	r2, [r5, #16]
   14260:	cmp	r3, r2
   14264:	bhi	14440 <argp_parse@@Base+0x2318>
   14268:	ldr	r3, [r5, #20]
   1426c:	bic	r3, r3, r3, asr #31
   14270:	ldr	r2, [r5, #4]
   14274:	cmp	r2, r3
   14278:	movcs	r4, #1
   1427c:	bcs	142a8 <argp_parse@@Base+0x2180>
   14280:	ldr	r2, [r5, #28]
   14284:	ldr	r3, [r5, #32]
   14288:	cmp	r2, r3
   1428c:	bcs	1444c <argp_parse@@Base+0x2324>
   14290:	ldr	r3, [r5, #28]
   14294:	add	r2, r3, #1
   14298:	str	r2, [r5, #28]
   1429c:	mov	r2, #10
   142a0:	strb	r2, [r3]
   142a4:	mov	r4, #1
   142a8:	ldr	r3, [sp, #16]
   142ac:	cmp	r3, #0
   142b0:	beq	14324 <argp_parse@@Base+0x21fc>
   142b4:	ldr	r0, [r3]
   142b8:	cmp	r0, #0
   142bc:	beq	14324 <argp_parse@@Base+0x21fc>
   142c0:	clz	r9, r7
   142c4:	lsr	r9, r9, #5
   142c8:	cmp	r7, #0
   142cc:	cmpne	r4, #0
   142d0:	bne	14324 <argp_parse@@Base+0x21fc>
   142d4:	mov	sl, r3
   142d8:	ldr	fp, [sp, #8]
   142dc:	orrs	r3, r8, r4
   142e0:	str	r5, [sp, #4]
   142e4:	str	r7, [sp]
   142e8:	movne	r3, #1
   142ec:	moveq	r3, #0
   142f0:	mov	r2, r6
   142f4:	mov	r1, fp
   142f8:	bl	13ff4 <argp_parse@@Base+0x1ecc>
   142fc:	orr	r4, r4, r0
   14300:	ldr	r0, [sl, #16]
   14304:	cmp	r0, #0
   14308:	beq	14324 <argp_parse@@Base+0x21fc>
   1430c:	add	sl, sl, #16
   14310:	cmp	r4, #0
   14314:	movne	r3, r9
   14318:	orreq	r3, r9, #1
   1431c:	cmp	r3, #0
   14320:	bne	142dc <argp_parse@@Base+0x21b4>
   14324:	mov	r0, r4
   14328:	add	sp, sp, #28
   1432c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14330:	cmp	r0, #0
   14334:	beq	144b8 <argp_parse@@Base+0x2390>
   14338:	sub	sl, r0, r9
   1433c:	ldr	r3, [fp, #20]
   14340:	cmp	r3, #0
   14344:	beq	14364 <argp_parse@@Base+0x223c>
   14348:	cmp	sl, #0
   1434c:	beq	14058 <argp_parse@@Base+0x1f30>
   14350:	mov	r1, sl
   14354:	mov	r0, r9
   14358:	bl	1117c <strndup@plt>
   1435c:	mov	r9, r0
   14360:	b	14058 <argp_parse@@Base+0x1f30>
   14364:	mov	r4, r9
   14368:	mov	r3, #0
   1436c:	str	r3, [sp, #12]
   14370:	b	14094 <argp_parse@@Base+0x1f6c>
   14374:	mov	r1, #1
   14378:	mov	r0, r5
   1437c:	bl	176e4 <argp_error@@Base+0x1330>
   14380:	cmp	r0, #0
   14384:	beq	140c0 <argp_parse@@Base+0x1f98>
   14388:	b	140ac <argp_parse@@Base+0x1f84>
   1438c:	mov	r0, r4
   14390:	bl	112cc <strlen@plt>
   14394:	subs	r3, r0, #0
   14398:	mov	r1, r3
   1439c:	str	r3, [sp, #20]
   143a0:	beq	14120 <argp_parse@@Base+0x1ff8>
   143a4:	ldr	r3, [r5, #28]
   143a8:	add	r3, r3, r1
   143ac:	ldr	r2, [r5, #32]
   143b0:	cmp	r2, r3
   143b4:	bcs	143c8 <argp_parse@@Base+0x22a0>
   143b8:	mov	r0, r5
   143bc:	bl	176e4 <argp_error@@Base+0x1330>
   143c0:	cmp	r0, #0
   143c4:	beq	14120 <argp_parse@@Base+0x1ff8>
   143c8:	ldr	r2, [sp, #20]
   143cc:	mov	r1, r4
   143d0:	ldr	r0, [r5, #28]
   143d4:	bl	11194 <memcpy@plt>
   143d8:	ldr	r3, [r5, #28]
   143dc:	ldr	r2, [sp, #20]
   143e0:	add	r3, r3, r2
   143e4:	str	r3, [r5, #28]
   143e8:	b	14120 <argp_parse@@Base+0x1ff8>
   143ec:	mov	r0, r5
   143f0:	bl	17140 <argp_error@@Base+0xd8c>
   143f4:	b	14138 <argp_parse@@Base+0x2010>
   143f8:	mov	r1, #1
   143fc:	mov	r0, r5
   14400:	bl	176e4 <argp_error@@Base+0x1330>
   14404:	cmp	r0, #0
   14408:	beq	14170 <argp_parse@@Base+0x2048>
   1440c:	b	1415c <argp_parse@@Base+0x2034>
   14410:	mov	r0, r4
   14414:	bl	12d1c <argp_parse@@Base+0xbf4>
   14418:	mov	r4, #1
   1441c:	b	1417c <argp_parse@@Base+0x2054>
   14420:	mov	r4, #0
   14424:	b	1417c <argp_parse@@Base+0x2054>
   14428:	mov	r1, #1
   1442c:	mov	r0, r5
   14430:	bl	176e4 <argp_error@@Base+0x1330>
   14434:	cmp	r0, #0
   14438:	beq	141f4 <argp_parse@@Base+0x20cc>
   1443c:	b	141e0 <argp_parse@@Base+0x20b8>
   14440:	mov	r0, r5
   14444:	bl	17140 <argp_error@@Base+0xd8c>
   14448:	b	14268 <argp_parse@@Base+0x2140>
   1444c:	mov	r1, #1
   14450:	mov	r0, r5
   14454:	bl	176e4 <argp_error@@Base+0x1330>
   14458:	cmp	r0, #0
   1445c:	moveq	r4, #1
   14460:	beq	142a8 <argp_parse@@Base+0x2180>
   14464:	b	14290 <argp_parse@@Base+0x2168>
   14468:	mov	r9, #0
   1446c:	b	14048 <argp_parse@@Base+0x1f20>
   14470:	mov	r4, r9
   14474:	mov	sl, #0
   14478:	str	sl, [sp, #12]
   1447c:	b	1408c <argp_parse@@Base+0x1f64>
   14480:	ldr	r3, [r0, #20]
   14484:	cmp	r3, #0
   14488:	movne	sl, #0
   1448c:	bne	14058 <argp_parse@@Base+0x1f30>
   14490:	mov	r3, r9
   14494:	cmp	r9, #0
   14498:	moveq	r4, #0
   1449c:	streq	r4, [sp, #12]
   144a0:	beq	1419c <argp_parse@@Base+0x2074>
   144a4:	mov	r4, r9
   144a8:	mov	r9, r3
   144ac:	mov	sl, #0
   144b0:	str	sl, [sp, #12]
   144b4:	b	14094 <argp_parse@@Base+0x1f6c>
   144b8:	ldr	r3, [fp, #20]
   144bc:	cmp	r3, #0
   144c0:	moveq	r3, r9
   144c4:	beq	14494 <argp_parse@@Base+0x236c>
   144c8:	ldr	r1, [sp, #8]
   144cc:	mov	r0, fp
   144d0:	bl	12b9c <argp_parse@@Base+0xa74>
   144d4:	str	r0, [sp, #12]
   144d8:	ldr	r3, [fp, #20]
   144dc:	mov	sl, #0
   144e0:	ldr	r0, [pc]	; 144e8 <argp_parse@@Base+0x23c0>
   144e4:	b	1407c <argp_parse@@Base+0x1f54>
   144e8:	andeq	r0, r0, #1
   144ec:	andeq	r0, r0, #2
   144f0:	andeq	r0, r0, #4
   144f4:	ldr	r3, [r0, #12]
   144f8:	ldr	r2, [r1, #12]
   144fc:	cmp	r3, r2
   14500:	beq	14558 <argp_parse@@Base+0x2430>
   14504:	push	{r4, r5, r6, lr}
   14508:	mov	r5, r1
   1450c:	mov	r4, r0
   14510:	mov	r1, r2
   14514:	mov	r0, r3
   14518:	bl	144f4 <argp_parse@@Base+0x23cc>
   1451c:	subs	r3, r0, #0
   14520:	bne	14550 <argp_parse@@Base+0x2428>
   14524:	ldr	r0, [r4, #8]
   14528:	ldr	r3, [r5, #8]
   1452c:	mvn	r2, r3
   14530:	lsr	r2, r2, #31
   14534:	cmp	r2, r0, lsr #31
   14538:	subne	r3, r0, r3
   1453c:	subeq	r3, r3, r0
   14540:	cmp	r3, #0
   14544:	ldreq	r3, [r5, #4]
   14548:	ldreq	r0, [r4, #4]
   1454c:	subeq	r3, r3, r0
   14550:	mov	r0, r3
   14554:	pop	{r4, r5, r6, pc}
   14558:	ldr	r2, [r0, #8]
   1455c:	ldr	r3, [r1, #8]
   14560:	mvn	ip, r3
   14564:	lsr	ip, ip, #31
   14568:	cmp	ip, r2, lsr #31
   1456c:	subne	r3, r2, r3
   14570:	subeq	r3, r3, r2
   14574:	cmp	r3, #0
   14578:	ldreq	r3, [r1, #4]
   1457c:	ldreq	r0, [r0, #4]
   14580:	subeq	r3, r3, r0
   14584:	mov	r0, r3
   14588:	bx	lr
   1458c:	push	{r4, r5, r6, r7, r8, lr}
   14590:	sub	sp, sp, #8
   14594:	ldr	lr, [r0, #16]
   14598:	cmp	lr, #0
   1459c:	movne	r2, lr
   145a0:	bne	145b0 <argp_parse@@Base+0x2488>
   145a4:	ldr	ip, [r0, #12]
   145a8:	b	145c0 <argp_parse@@Base+0x2498>
   145ac:	mov	r2, r3
   145b0:	ldr	r3, [r2, #12]
   145b4:	cmp	r3, #0
   145b8:	bne	145ac <argp_parse@@Base+0x2484>
   145bc:	ldr	ip, [r2, #8]
   145c0:	ldr	r5, [r1, #16]
   145c4:	cmp	r5, #0
   145c8:	movne	r2, r5
   145cc:	bne	145dc <argp_parse@@Base+0x24b4>
   145d0:	ldr	r4, [r1, #12]
   145d4:	b	145ec <argp_parse@@Base+0x24c4>
   145d8:	mov	r2, r3
   145dc:	ldr	r3, [r2, #12]
   145e0:	cmp	r3, #0
   145e4:	bne	145d8 <argp_parse@@Base+0x24b0>
   145e8:	ldr	r4, [r2, #8]
   145ec:	mvn	r3, r4
   145f0:	lsr	r3, r3, #31
   145f4:	cmp	r3, ip, lsr #31
   145f8:	subne	r4, ip, r4
   145fc:	subeq	r4, r4, ip
   14600:	cmp	r4, #0
   14604:	bne	1466c <argp_parse@@Base+0x2544>
   14608:	adds	r4, r5, #0
   1460c:	movne	r4, #1
   14610:	cmp	lr, #0
   14614:	rsbeq	r4, r4, #0
   14618:	rsbne	r4, r4, #1
   1461c:	cmp	r4, #0
   14620:	bne	1466c <argp_parse@@Base+0x2544>
   14624:	mov	r6, r1
   14628:	mov	r7, r0
   1462c:	cmp	lr, #0
   14630:	beq	146bc <argp_parse@@Base+0x2594>
   14634:	ldr	ip, [lr, #20]
   14638:	ldr	r2, [r5, #20]
   1463c:	cmp	ip, r2
   14640:	ble	14678 <argp_parse@@Base+0x2550>
   14644:	mov	r0, lr
   14648:	ldr	r0, [r0, #12]
   1464c:	ldr	r3, [r0, #20]
   14650:	cmp	r2, r3
   14654:	blt	14648 <argp_parse@@Base+0x2520>
   14658:	mov	r1, r5
   1465c:	bl	144f4 <argp_parse@@Base+0x23cc>
   14660:	subs	r4, r0, #0
   14664:	cmp	r0, #0
   14668:	moveq	r4, #1
   1466c:	mov	r0, r4
   14670:	add	sp, sp, #8
   14674:	pop	{r4, r5, r6, r7, r8, pc}
   14678:	cmp	ip, r2
   1467c:	bge	146a8 <argp_parse@@Base+0x2580>
   14680:	mov	r1, r5
   14684:	ldr	r1, [r1, #12]
   14688:	ldr	r3, [r1, #20]
   1468c:	cmp	ip, r3
   14690:	blt	14684 <argp_parse@@Base+0x255c>
   14694:	mov	r0, lr
   14698:	bl	144f4 <argp_parse@@Base+0x23cc>
   1469c:	subs	r4, r0, #0
   146a0:	mvneq	r4, #0
   146a4:	b	1466c <argp_parse@@Base+0x2544>
   146a8:	mov	r1, r5
   146ac:	mov	r0, lr
   146b0:	bl	144f4 <argp_parse@@Base+0x23cc>
   146b4:	subs	r4, r0, #0
   146b8:	bne	1466c <argp_parse@@Base+0x2544>
   146bc:	ldr	r3, [r7, #12]
   146c0:	ldr	r4, [r6, #12]
   146c4:	mvn	r2, r4
   146c8:	lsr	r2, r2, #31
   146cc:	cmp	r2, r3, lsr #31
   146d0:	subne	r4, r3, r4
   146d4:	subeq	r4, r4, r3
   146d8:	cmp	r4, #0
   146dc:	bne	1466c <argp_parse@@Base+0x2544>
   146e0:	mov	r0, r7
   146e4:	bl	13334 <argp_parse@@Base+0x120c>
   146e8:	mov	r5, r0
   146ec:	str	r0, [sp]
   146f0:	mov	r0, r6
   146f4:	bl	13334 <argp_parse@@Base+0x120c>
   146f8:	str	r0, [sp, #4]
   146fc:	ldr	r3, [r7]
   14700:	ldr	r3, [r3, #12]
   14704:	adds	r5, r5, #0
   14708:	movne	r5, #1
   1470c:	ands	r3, r5, r3, lsr #3
   14710:	beq	14854 <argp_parse@@Base+0x272c>
   14714:	mov	r0, sp
   14718:	bl	134f8 <argp_parse@@Base+0x13d0>
   1471c:	adds	r5, r0, #0
   14720:	movne	r5, #1
   14724:	ldr	r3, [r6]
   14728:	ldr	r0, [r3, #12]
   1472c:	ands	r0, r0, #8
   14730:	beq	14750 <argp_parse@@Base+0x2628>
   14734:	ldr	r3, [sp, #4]
   14738:	cmp	r3, #0
   1473c:	beq	1484c <argp_parse@@Base+0x2724>
   14740:	add	r0, sp, #4
   14744:	bl	134f8 <argp_parse@@Base+0x13d0>
   14748:	adds	r0, r0, #0
   1474c:	movne	r0, #1
   14750:	subs	r4, r5, r0
   14754:	bne	1466c <argp_parse@@Base+0x2544>
   14758:	ldr	r2, [r7, #20]
   1475c:	ldr	r4, [pc, #276]	; 14878 <argp_parse@@Base+0x2750>
   14760:	mov	r3, #0
   14764:	ldr	r2, [r2, #24]
   14768:	mov	r1, r4
   1476c:	mov	r0, r7
   14770:	bl	133cc <argp_parse@@Base+0x12a4>
   14774:	mov	r5, r0
   14778:	uxtb	r8, r0
   1477c:	ldr	r2, [r6, #20]
   14780:	mov	r3, #0
   14784:	ldr	r2, [r2, #24]
   14788:	mov	r1, r4
   1478c:	mov	r0, r6
   14790:	bl	133cc <argp_parse@@Base+0x12a4>
   14794:	uxtb	r7, r0
   14798:	cmp	r8, #0
   1479c:	movne	r5, r8
   147a0:	bne	147b4 <argp_parse@@Base+0x268c>
   147a4:	ldr	r3, [sp]
   147a8:	cmp	r3, #0
   147ac:	ldrbne	r5, [r3]
   147b0:	moveq	r5, #0
   147b4:	cmp	r7, #0
   147b8:	uxtbne	r6, r0
   147bc:	bne	147d0 <argp_parse@@Base+0x26a8>
   147c0:	ldr	r3, [sp, #4]
   147c4:	cmp	r3, #0
   147c8:	ldrbne	r6, [r3]
   147cc:	moveq	r6, #0
   147d0:	bl	11284 <__ctype_tolower_loc@plt>
   147d4:	ldr	r3, [r0]
   147d8:	ldr	r4, [r3, r5, lsl #2]
   147dc:	ldr	r3, [r3, r6, lsl #2]
   147e0:	subs	r4, r4, r3
   147e4:	bne	1466c <argp_parse@@Base+0x2544>
   147e8:	subs	r4, r6, r5
   147ec:	bne	1466c <argp_parse@@Base+0x2544>
   147f0:	adds	r4, r7, #0
   147f4:	movne	r4, #1
   147f8:	cmp	r8, #0
   147fc:	rsbeq	r4, r4, #0
   14800:	rsbne	r4, r4, #1
   14804:	cmp	r4, #0
   14808:	bne	1466c <argp_parse@@Base+0x2544>
   1480c:	cmp	r8, #0
   14810:	bne	1466c <argp_parse@@Base+0x2544>
   14814:	ldr	r0, [sp]
   14818:	ldr	r1, [sp, #4]
   1481c:	adds	r4, r1, #0
   14820:	movne	r4, #1
   14824:	cmp	r0, #0
   14828:	rsbeq	r4, r4, #0
   1482c:	rsbne	r4, r4, #1
   14830:	cmp	r4, #0
   14834:	bne	1466c <argp_parse@@Base+0x2544>
   14838:	cmp	r0, #0
   1483c:	beq	1466c <argp_parse@@Base+0x2544>
   14840:	bl	11200 <strcasecmp@plt>
   14844:	mov	r4, r0
   14848:	b	1466c <argp_parse@@Base+0x2544>
   1484c:	mov	r0, r4
   14850:	b	14750 <argp_parse@@Base+0x2628>
   14854:	ldr	r3, [r6]
   14858:	ldr	r3, [r3, #12]
   1485c:	tst	r3, #8
   14860:	beq	14758 <argp_parse@@Base+0x2630>
   14864:	ldr	r3, [sp, #4]
   14868:	cmp	r3, #0
   1486c:	movne	r5, r4
   14870:	bne	14740 <argp_parse@@Base+0x2618>
   14874:	b	14758 <argp_parse@@Base+0x2630>
   14878:			; <UNDEFINED> instruction: 0x000134b0
   1487c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14880:	sub	sp, sp, #52	; 0x34
   14884:	str	r0, [sp, #24]
   14888:	str	r1, [sp, #28]
   1488c:	ldr	r2, [r0, #16]
   14890:	str	r2, [sp, #8]
   14894:	ldr	r5, [r0]
   14898:	mov	r0, #16
   1489c:	bl	13304 <argp_parse@@Base+0x11dc>
   148a0:	subs	fp, r0, #0
   148a4:	beq	148d4 <argp_parse@@Base+0x27ac>
   148a8:	mov	r3, #0
   148ac:	str	r3, [fp, #4]
   148b0:	str	r3, [fp, #12]
   148b4:	cmp	r5, r3
   148b8:	beq	14aac <argp_parse@@Base+0x2984>
   148bc:	ldr	r4, [r5, #12]
   148c0:	ands	r4, r4, #4
   148c4:	bne	148e8 <argp_parse@@Base+0x27c0>
   148c8:	add	r6, r5, #24
   148cc:	mov	r8, r3
   148d0:	b	14910 <argp_parse@@Base+0x27e8>
   148d4:	ldr	r3, [pc, #1576]	; 14f04 <argp_parse@@Base+0x2ddc>
   148d8:	ldr	r2, [pc, #1576]	; 14f08 <argp_parse@@Base+0x2de0>
   148dc:	ldr	r1, [pc, #1576]	; 14f0c <argp_parse@@Base+0x2de4>
   148e0:	ldr	r0, [pc, #1576]	; 14f10 <argp_parse@@Base+0x2de8>
   148e4:	bl	11428 <__assert_fail@plt>
   148e8:	ldr	r3, [pc, #1556]	; 14f04 <argp_parse@@Base+0x2ddc>
   148ec:	mov	r2, #460	; 0x1cc
   148f0:	ldr	r1, [pc, #1556]	; 14f0c <argp_parse@@Base+0x2de4>
   148f4:	ldr	r0, [pc, #1560]	; 14f14 <argp_parse@@Base+0x2dec>
   148f8:	bl	11428 <__assert_fail@plt>
   148fc:	ldr	r2, [fp, #4]
   14900:	add	r2, r2, #1
   14904:	str	r2, [fp, #4]
   14908:	b	14938 <argp_parse@@Base+0x2810>
   1490c:	add	r6, r6, #24
   14910:	mov	r3, r6
   14914:	ldr	r2, [r6, #-20]	; 0xffffffec
   14918:	cmp	r2, #0
   1491c:	bne	1492c <argp_parse@@Base+0x2804>
   14920:	ldr	r2, [r6, #-24]	; 0xffffffe8
   14924:	cmp	r2, #0
   14928:	beq	14970 <argp_parse@@Base+0x2848>
   1492c:	ldr	r2, [r3, #-12]
   14930:	tst	r2, #4
   14934:	beq	148fc <argp_parse@@Base+0x27d4>
   14938:	ldr	r2, [r3, #-12]
   1493c:	tst	r2, #8
   14940:	bne	1490c <argp_parse@@Base+0x27e4>
   14944:	ldr	r7, [r3, #-20]	; 0xffffffec
   14948:	sub	r3, r7, #1
   1494c:	cmp	r3, #254	; 0xfe
   14950:	bhi	1490c <argp_parse@@Base+0x27e4>
   14954:	bl	112a8 <__ctype_b_loc@plt>
   14958:	ldr	r3, [r0]
   1495c:	lsl	r7, r7, #1
   14960:	ldrh	r3, [r3, r7]
   14964:	tst	r3, #16384	; 0x4000
   14968:	addne	r8, r8, #1
   1496c:	b	1490c <argp_parse@@Base+0x27e4>
   14970:	ldr	r2, [r6, #-8]
   14974:	cmp	r2, #0
   14978:	bne	1492c <argp_parse@@Base+0x2804>
   1497c:	ldr	r2, [r6, #-4]
   14980:	cmp	r2, #0
   14984:	bne	1492c <argp_parse@@Base+0x2804>
   14988:	ldr	r0, [fp, #4]
   1498c:	rsb	r0, r0, r0, lsl #3
   14990:	lsl	r0, r0, #2
   14994:	bl	13304 <argp_parse@@Base+0x11dc>
   14998:	str	r0, [fp]
   1499c:	add	r0, r8, #1
   149a0:	bl	13304 <argp_parse@@Base+0x11dc>
   149a4:	str	r0, [fp, #8]
   149a8:	ldr	r8, [fp]
   149ac:	cmp	r0, #0
   149b0:	cmpne	r8, #0
   149b4:	bne	149cc <argp_parse@@Base+0x28a4>
   149b8:	ldr	r3, [pc, #1348]	; 14f04 <argp_parse@@Base+0x2ddc>
   149bc:	ldr	r2, [pc, #1364]	; 14f18 <argp_parse@@Base+0x2df0>
   149c0:	ldr	r1, [pc, #1348]	; 14f0c <argp_parse@@Base+0x2de4>
   149c4:	ldr	r0, [pc, #1360]	; 14f1c <argp_parse@@Base+0x2df4>
   149c8:	bl	11428 <__assert_fail@plt>
   149cc:	ldr	r2, [fp, #4]
   149d0:	ldr	r3, [pc, #1352]	; 14f20 <argp_parse@@Base+0x2df8>
   149d4:	cmp	r2, r3
   149d8:	addls	r8, r8, #28
   149dc:	movls	r7, r0
   149e0:	movls	sl, #0
   149e4:	bls	14a30 <argp_parse@@Base+0x2908>
   149e8:	ldr	r3, [pc, #1300]	; 14f04 <argp_parse@@Base+0x2ddc>
   149ec:	mov	r2, #476	; 0x1dc
   149f0:	ldr	r1, [pc, #1300]	; 14f0c <argp_parse@@Base+0x2de4>
   149f4:	ldr	r0, [pc, #1320]	; 14f24 <argp_parse@@Base+0x2dfc>
   149f8:	bl	11428 <__assert_fail@plt>
   149fc:	ldr	r3, [r5, #4]
   14a00:	cmp	r3, #0
   14a04:	addeq	r9, r4, #1
   14a08:	movne	r9, r4
   14a0c:	b	14a74 <argp_parse@@Base+0x294c>
   14a10:	ldr	r3, [r5, #16]
   14a14:	cmp	r3, #0
   14a18:	bne	14e20 <argp_parse@@Base+0x2cf8>
   14a1c:	ldr	r3, [r5, #20]
   14a20:	cmp	r3, #0
   14a24:	bne	14e20 <argp_parse@@Base+0x2cf8>
   14a28:	add	r8, r8, #28
   14a2c:	mov	r4, r9
   14a30:	ldr	r3, [r5, #4]
   14a34:	cmp	r3, #0
   14a38:	bne	14a48 <argp_parse@@Base+0x2920>
   14a3c:	ldr	r3, [r5]
   14a40:	cmp	r3, #0
   14a44:	beq	14a8c <argp_parse@@Base+0x2964>
   14a48:	mov	r6, r8
   14a4c:	str	r5, [r8, #-28]	; 0xffffffe4
   14a50:	str	sl, [r8, #-24]	; 0xffffffe8
   14a54:	str	r7, [r8, #-20]	; 0xffffffec
   14a58:	ldr	r9, [r5, #20]
   14a5c:	cmp	r9, #0
   14a60:	bne	14a74 <argp_parse@@Base+0x294c>
   14a64:	ldr	r3, [r5]
   14a68:	cmp	r3, #0
   14a6c:	movne	r9, r4
   14a70:	beq	149fc <argp_parse@@Base+0x28d4>
   14a74:	str	r9, [r6, #-16]
   14a78:	ldr	r3, [sp, #28]
   14a7c:	str	r3, [r6, #-12]
   14a80:	ldr	r3, [sp, #24]
   14a84:	str	r3, [r6, #-8]
   14a88:	b	14e2c <argp_parse@@Base+0x2d04>
   14a8c:	ldr	r3, [r5, #16]
   14a90:	cmp	r3, #0
   14a94:	bne	14a48 <argp_parse@@Base+0x2920>
   14a98:	ldr	r3, [r5, #20]
   14a9c:	cmp	r3, #0
   14aa0:	bne	14a48 <argp_parse@@Base+0x2920>
   14aa4:	mov	r3, #0
   14aa8:	strb	r3, [r7]
   14aac:	ldr	r3, [sp, #8]
   14ab0:	cmp	r3, #0
   14ab4:	beq	14df0 <argp_parse@@Base+0x2cc8>
   14ab8:	ldr	r3, [r3]
   14abc:	cmp	r3, #0
   14ac0:	beq	14df0 <argp_parse@@Base+0x2cc8>
   14ac4:	add	r3, fp, #12
   14ac8:	str	r3, [sp, #44]	; 0x2c
   14acc:	str	fp, [sp, #20]
   14ad0:	b	14b60 <argp_parse@@Base+0x2a38>
   14ad4:	ldr	r1, [sp, #28]
   14ad8:	b	14be0 <argp_parse@@Base+0x2ab8>
   14adc:	mov	r2, r3
   14ae0:	ldr	r3, [r2, #24]
   14ae4:	cmp	r3, #0
   14ae8:	bne	14adc <argp_parse@@Base+0x29b4>
   14aec:	add	r2, r2, #24
   14af0:	ldr	r1, [sp, #16]
   14af4:	ldr	r3, [r1, #12]
   14af8:	str	r3, [r2]
   14afc:	mov	r2, #0
   14b00:	str	r2, [r1, #12]
   14b04:	ldr	r3, [r1, #4]
   14b08:	cmp	r3, r2
   14b0c:	beq	14b44 <argp_parse@@Base+0x2a1c>
   14b10:	ldr	r0, [sp, #20]
   14b14:	ldr	r2, [r0, #4]
   14b18:	cmp	r2, #0
   14b1c:	bne	14c08 <argp_parse@@Base+0x2ae0>
   14b20:	str	r3, [r0, #4]
   14b24:	mov	r2, r1
   14b28:	ldr	r3, [r1]
   14b2c:	str	r3, [r0]
   14b30:	ldr	r3, [r2, #8]
   14b34:	str	r3, [r0, #8]
   14b38:	mov	r3, r2
   14b3c:	mov	r2, #0
   14b40:	str	r2, [r3, #4]
   14b44:	ldr	r0, [sp, #16]
   14b48:	bl	13730 <argp_parse@@Base+0x1608>
   14b4c:	ldr	r2, [sp, #8]
   14b50:	ldr	r3, [r2, #16]!
   14b54:	str	r2, [sp, #8]
   14b58:	cmp	r3, #0
   14b5c:	beq	14dec <argp_parse@@Base+0x2cc4>
   14b60:	ldr	r3, [sp, #8]
   14b64:	ldr	r4, [r3, #12]
   14b68:	cmp	r4, #0
   14b6c:	bne	14b7c <argp_parse@@Base+0x2a54>
   14b70:	ldr	r3, [r3, #8]
   14b74:	cmp	r3, #0
   14b78:	beq	14ad4 <argp_parse@@Base+0x29ac>
   14b7c:	ldr	r2, [sp, #8]
   14b80:	ldr	r5, [r2, #8]
   14b84:	ldr	r7, [sp, #24]
   14b88:	ldr	r3, [r7, #16]
   14b8c:	sub	r3, r2, r3
   14b90:	asr	r6, r3, #4
   14b94:	mov	r0, #28
   14b98:	bl	13304 <argp_parse@@Base+0x11dc>
   14b9c:	subs	r1, r0, #0
   14ba0:	beq	14be0 <argp_parse@@Base+0x2ab8>
   14ba4:	str	r4, [r1, #8]
   14ba8:	str	r5, [r1]
   14bac:	str	r6, [r1, #4]
   14bb0:	ldr	r3, [sp, #28]
   14bb4:	str	r3, [r1, #12]
   14bb8:	str	r7, [r1, #16]
   14bbc:	cmp	r3, #0
   14bc0:	ldrne	r3, [r3, #20]
   14bc4:	addne	r3, r3, #1
   14bc8:	moveq	r3, #0
   14bcc:	str	r3, [r1, #20]
   14bd0:	ldr	r2, [sp, #20]
   14bd4:	ldr	r3, [r2, #12]
   14bd8:	str	r3, [r1, #24]
   14bdc:	str	r1, [r2, #12]
   14be0:	ldr	r3, [sp, #8]
   14be4:	ldr	r0, [r3]
   14be8:	bl	1487c <argp_parse@@Base+0x2754>
   14bec:	str	r0, [sp, #16]
   14bf0:	ldr	r3, [sp, #20]
   14bf4:	ldr	r2, [r3, #12]
   14bf8:	cmp	r2, #0
   14bfc:	ldreq	r2, [sp, #44]	; 0x2c
   14c00:	bne	14ae0 <argp_parse@@Base+0x29b8>
   14c04:	b	14af0 <argp_parse@@Base+0x29c8>
   14c08:	add	r3, r3, r2
   14c0c:	str	r3, [sp, #36]	; 0x24
   14c10:	rsb	r0, r3, r3, lsl #3
   14c14:	lsl	r0, r0, #2
   14c18:	bl	13304 <argp_parse@@Base+0x11dc>
   14c1c:	mov	r4, r0
   14c20:	str	r0, [sp, #32]
   14c24:	ldr	r3, [sp, #20]
   14c28:	ldr	r0, [r3, #8]
   14c2c:	bl	112cc <strlen@plt>
   14c30:	mov	r6, r0
   14c34:	ldr	r3, [sp, #16]
   14c38:	ldr	r0, [r3, #8]
   14c3c:	bl	112cc <strlen@plt>
   14c40:	add	r0, r6, r0
   14c44:	add	r0, r0, #1
   14c48:	bl	13304 <argp_parse@@Base+0x11dc>
   14c4c:	mov	sl, r0
   14c50:	cmp	r4, #0
   14c54:	cmpne	r0, #0
   14c58:	beq	14d24 <argp_parse@@Base+0x2bfc>
   14c5c:	ldr	r3, [sp, #36]	; 0x24
   14c60:	ldr	r2, [pc, #696]	; 14f20 <argp_parse@@Base+0x2df8>
   14c64:	cmp	r3, r2
   14c68:	bhi	14d38 <argp_parse@@Base+0x2c10>
   14c6c:	ldr	r5, [sp, #20]
   14c70:	ldr	r2, [r5]
   14c74:	mov	r1, r2
   14c78:	str	r2, [sp, #40]	; 0x28
   14c7c:	ldr	r4, [r5, #4]
   14c80:	rsb	r7, r4, r4, lsl #3
   14c84:	lsl	r7, r7, #2
   14c88:	mov	r2, r7
   14c8c:	ldr	r8, [sp, #32]
   14c90:	mov	r0, r8
   14c94:	bl	1129c <mempcpy@plt>
   14c98:	ldr	r3, [sp, #16]
   14c9c:	ldr	r1, [r3, #4]
   14ca0:	str	r1, [sp, #4]
   14ca4:	rsb	r2, r1, r1, lsl #3
   14ca8:	lsl	r2, r2, #2
   14cac:	ldr	r1, [r3]
   14cb0:	bl	11194 <memcpy@plt>
   14cb4:	ldr	r5, [r5, #8]
   14cb8:	mov	r2, r6
   14cbc:	mov	r1, r5
   14cc0:	mov	r0, sl
   14cc4:	bl	11194 <memcpy@plt>
   14cc8:	cmp	r4, #0
   14ccc:	beq	14d4c <argp_parse@@Base+0x2c24>
   14cd0:	mov	r2, r8
   14cd4:	ldr	r3, [r2, #8]
   14cd8:	sub	r3, r3, r5
   14cdc:	add	r3, sl, r3
   14ce0:	str	r3, [r2, #8]
   14ce4:	add	r2, r2, #28
   14ce8:	subs	r4, r4, #1
   14cec:	bne	14cd4 <argp_parse@@Base+0x2bac>
   14cf0:	ldr	r3, [sp, #32]
   14cf4:	add	r7, r3, r7
   14cf8:	add	r3, sl, r6
   14cfc:	str	r3, [sp, #12]
   14d00:	ldr	r2, [sp, #16]
   14d04:	ldr	r8, [r2, #8]
   14d08:	ldr	r2, [sp, #4]
   14d0c:	cmp	r2, #0
   14d10:	beq	14db4 <argp_parse@@Base+0x2c8c>
   14d14:	add	r9, r7, #28
   14d18:	mov	fp, r3
   14d1c:	sub	r7, r3, #1
   14d20:	b	14d9c <argp_parse@@Base+0x2c74>
   14d24:	ldr	r3, [pc, #508]	; 14f28 <argp_parse@@Base+0x2e00>
   14d28:	ldr	r2, [pc, #508]	; 14f2c <argp_parse@@Base+0x2e04>
   14d2c:	ldr	r1, [pc, #472]	; 14f0c <argp_parse@@Base+0x2de4>
   14d30:	ldr	r0, [pc, #504]	; 14f30 <argp_parse@@Base+0x2e08>
   14d34:	bl	11428 <__assert_fail@plt>
   14d38:	ldr	r3, [pc, #488]	; 14f28 <argp_parse@@Base+0x2e00>
   14d3c:	mov	r2, #972	; 0x3cc
   14d40:	ldr	r1, [pc, #452]	; 14f0c <argp_parse@@Base+0x2de4>
   14d44:	ldr	r0, [pc, #488]	; 14f34 <argp_parse@@Base+0x2e0c>
   14d48:	bl	11428 <__assert_fail@plt>
   14d4c:	ldr	r7, [sp, #32]
   14d50:	b	14cf8 <argp_parse@@Base+0x2bd0>
   14d54:	ldr	r3, [sp, #12]
   14d58:	cmp	sl, r3
   14d5c:	bcs	14ef4 <argp_parse@@Base+0x2dcc>
   14d60:	ldrb	r3, [sl]
   14d64:	cmp	r3, r1
   14d68:	beq	14efc <argp_parse@@Base+0x2dd4>
   14d6c:	mov	r3, sl
   14d70:	cmp	r7, r3
   14d74:	beq	14ef4 <argp_parse@@Base+0x2dcc>
   14d78:	ldrb	r2, [r3, #1]!
   14d7c:	cmp	r2, r1
   14d80:	bne	14d70 <argp_parse@@Base+0x2c48>
   14d84:	b	14efc <argp_parse@@Base+0x2dd4>
   14d88:	add	r9, r9, #28
   14d8c:	ldr	r3, [sp, #4]
   14d90:	subs	r3, r3, #1
   14d94:	str	r3, [sp, #4]
   14d98:	beq	14db8 <argp_parse@@Base+0x2c90>
   14d9c:	str	fp, [r9, #-20]	; 0xffffffec
   14da0:	ldr	r5, [r9, #-24]	; 0xffffffe8
   14da4:	ldr	r4, [r9, #-28]	; 0xffffffe4
   14da8:	cmp	r5, #0
   14dac:	bne	14ebc <argp_parse@@Base+0x2d94>
   14db0:	b	14d88 <argp_parse@@Base+0x2c60>
   14db4:	ldr	fp, [sp, #12]
   14db8:	mov	r3, #0
   14dbc:	strb	r3, [fp]
   14dc0:	ldr	r0, [sp, #40]	; 0x28
   14dc4:	bl	12d1c <argp_parse@@Base+0xbf4>
   14dc8:	ldr	r4, [sp, #20]
   14dcc:	ldr	r0, [r4, #8]
   14dd0:	bl	12d1c <argp_parse@@Base+0xbf4>
   14dd4:	ldr	r2, [sp, #32]
   14dd8:	str	r2, [r4]
   14ddc:	ldr	r2, [sp, #36]	; 0x24
   14de0:	str	r2, [r4, #4]
   14de4:	str	sl, [r4, #8]
   14de8:	b	14b44 <argp_parse@@Base+0x2a1c>
   14dec:	ldr	fp, [sp, #20]
   14df0:	mov	r0, fp
   14df4:	add	sp, sp, #52	; 0x34
   14df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dfc:	strb	r4, [r7]
   14e00:	add	r7, r7, #1
   14e04:	add	r5, r5, #24
   14e08:	ldr	r3, [r5, #4]
   14e0c:	cmp	r3, #0
   14e10:	bne	14e20 <argp_parse@@Base+0x2cf8>
   14e14:	ldr	r3, [r5]
   14e18:	cmp	r3, #0
   14e1c:	beq	14a10 <argp_parse@@Base+0x28e8>
   14e20:	ldr	r3, [r5, #12]
   14e24:	tst	r3, #4
   14e28:	beq	14a28 <argp_parse@@Base+0x2900>
   14e2c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14e30:	add	r3, r3, #1
   14e34:	str	r3, [r6, #-24]	; 0xffffffe8
   14e38:	ldr	r3, [r5, #12]
   14e3c:	tst	r3, #8
   14e40:	bne	14e04 <argp_parse@@Base+0x2cdc>
   14e44:	ldr	r4, [r5, #4]
   14e48:	sub	r3, r4, #1
   14e4c:	cmp	r3, #254	; 0xfe
   14e50:	bhi	14e04 <argp_parse@@Base+0x2cdc>
   14e54:	bl	112a8 <__ctype_b_loc@plt>
   14e58:	ldr	r2, [r0]
   14e5c:	lsl	r3, r4, #1
   14e60:	ldrh	r3, [r2, r3]
   14e64:	tst	r3, #16384	; 0x4000
   14e68:	beq	14e04 <argp_parse@@Base+0x2cdc>
   14e6c:	uxtb	r4, r4
   14e70:	ldr	r3, [fp, #8]
   14e74:	cmp	r3, r7
   14e78:	bcs	14dfc <argp_parse@@Base+0x2cd4>
   14e7c:	ldrb	r2, [r3]
   14e80:	cmp	r2, r4
   14e84:	beq	14e04 <argp_parse@@Base+0x2cdc>
   14e88:	sub	r1, r7, #1
   14e8c:	cmp	r3, r1
   14e90:	beq	14dfc <argp_parse@@Base+0x2cd4>
   14e94:	ldrb	r2, [r3, #1]!
   14e98:	cmp	r2, r4
   14e9c:	bne	14e8c <argp_parse@@Base+0x2d64>
   14ea0:	b	14e04 <argp_parse@@Base+0x2cdc>
   14ea4:	ldrb	r1, [r8]
   14ea8:	cmp	r1, r6
   14eac:	beq	14d54 <argp_parse@@Base+0x2c2c>
   14eb0:	add	r4, r4, #24
   14eb4:	subs	r5, r5, #1
   14eb8:	beq	14d88 <argp_parse@@Base+0x2c60>
   14ebc:	ldr	r3, [r4, #12]
   14ec0:	tst	r3, #8
   14ec4:	bne	14eb0 <argp_parse@@Base+0x2d88>
   14ec8:	ldr	r6, [r4, #4]
   14ecc:	sub	r3, r6, #1
   14ed0:	cmp	r3, #254	; 0xfe
   14ed4:	bhi	14eb0 <argp_parse@@Base+0x2d88>
   14ed8:	bl	112a8 <__ctype_b_loc@plt>
   14edc:	ldr	r2, [r0]
   14ee0:	lsl	r3, r6, #1
   14ee4:	ldrh	r3, [r2, r3]
   14ee8:	tst	r3, #16384	; 0x4000
   14eec:	bne	14ea4 <argp_parse@@Base+0x2d7c>
   14ef0:	b	14eb0 <argp_parse@@Base+0x2d88>
   14ef4:	strb	r1, [fp]
   14ef8:	add	fp, fp, #1
   14efc:	add	r8, r8, #1
   14f00:	b	14eb0 <argp_parse@@Base+0x2d88>
   14f04:	andeq	r8, r1, r4, asr r0
   14f08:	andeq	r0, r0, r2, asr #3
   14f0c:	andeq	r8, r1, r4, asr #2
   14f10:	andeq	r8, r1, r0, asr r1
   14f14:	andeq	r8, r1, r4, asr r1
   14f18:	ldrdeq	r0, [r0], -sl
   14f1c:	andeq	r8, r1, r4, ror #2
   14f20:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14f24:	andeq	r8, r1, r8, lsl #3
   14f28:	andeq	r8, r1, r0, rrx
   14f2c:	andeq	r0, r0, sl, asr #7
   14f30:	andeq	r8, r1, r4, asr #3
   14f34:	andeq	r8, r1, r0, ror #3

00014f38 <argp_failure@@Base>:
   14f38:	push	{r3}		; (str r3, [sp, #-4]!)
   14f3c:	push	{r4, r5, r6, r7, lr}
   14f40:	sub	sp, sp, #200	; 0xc8
   14f44:	mov	r7, r1
   14f48:	mov	r6, r2
   14f4c:	subs	r5, r0, #0
   14f50:	beq	150a0 <argp_failure@@Base+0x168>
   14f54:	ldr	r3, [r5, #16]
   14f58:	tst	r3, #2
   14f5c:	bne	15090 <argp_failure@@Base+0x158>
   14f60:	ldr	r4, [r5, #44]	; 0x2c
   14f64:	cmp	r4, #0
   14f68:	beq	15090 <argp_failure@@Base+0x158>
   14f6c:	mov	r0, r4
   14f70:	bl	113c8 <flockfile@plt>
   14f74:	ldr	r0, [r5, #40]	; 0x28
   14f78:	mov	r1, r4
   14f7c:	bl	11104 <fputs_unlocked@plt>
   14f80:	ldr	r3, [sp, #220]	; 0xdc
   14f84:	cmp	r3, #0
   14f88:	beq	14fe4 <argp_failure@@Base+0xac>
   14f8c:	add	r3, sp, #224	; 0xe0
   14f90:	str	r3, [sp]
   14f94:	ldr	r3, [r4, #20]
   14f98:	ldr	r2, [r4, #24]
   14f9c:	cmp	r3, r2
   14fa0:	addcc	r2, r3, #1
   14fa4:	strcc	r2, [r4, #20]
   14fa8:	movcc	r2, #58	; 0x3a
   14fac:	strbcc	r2, [r3]
   14fb0:	bcs	150c4 <argp_failure@@Base+0x18c>
   14fb4:	ldr	r3, [r4, #20]
   14fb8:	ldr	r2, [r4, #24]
   14fbc:	cmp	r3, r2
   14fc0:	addcc	r2, r3, #1
   14fc4:	strcc	r2, [r4, #20]
   14fc8:	movcc	r2, #32
   14fcc:	strbcc	r2, [r3]
   14fd0:	bcs	150d4 <argp_failure@@Base+0x19c>
   14fd4:	ldr	r2, [sp]
   14fd8:	ldr	r1, [sp, #220]	; 0xdc
   14fdc:	mov	r0, r4
   14fe0:	bl	1138c <vfprintf@plt>
   14fe4:	cmp	r6, #0
   14fe8:	beq	1504c <argp_failure@@Base+0x114>
   14fec:	ldr	r3, [r4, #20]
   14ff0:	ldr	r2, [r4, #24]
   14ff4:	cmp	r3, r2
   14ff8:	addcc	r2, r3, #1
   14ffc:	strcc	r2, [r4, #20]
   15000:	movcc	r2, #58	; 0x3a
   15004:	strbcc	r2, [r3]
   15008:	bcs	150e4 <argp_failure@@Base+0x1ac>
   1500c:	ldr	r3, [r4, #20]
   15010:	ldr	r2, [r4, #24]
   15014:	cmp	r3, r2
   15018:	addcc	r2, r3, #1
   1501c:	strcc	r2, [r4, #20]
   15020:	movcc	r2, #32
   15024:	strbcc	r2, [r3]
   15028:	bcs	150f4 <argp_failure@@Base+0x1bc>
   1502c:	mov	r2, #200	; 0xc8
   15030:	mov	r1, sp
   15034:	mov	r0, r6
   15038:	bl	11308 <strerror_r@plt>
   1503c:	cmp	r0, #0
   15040:	beq	15104 <argp_failure@@Base+0x1cc>
   15044:	mov	r1, r4
   15048:	bl	11104 <fputs_unlocked@plt>
   1504c:	ldr	r3, [r4, #20]
   15050:	ldr	r2, [r4, #24]
   15054:	cmp	r3, r2
   15058:	addcc	r2, r3, #1
   1505c:	strcc	r2, [r4, #20]
   15060:	movcc	r2, #10
   15064:	strbcc	r2, [r3]
   15068:	bcs	1511c <argp_failure@@Base+0x1e4>
   1506c:	mov	r0, r4
   15070:	bl	1120c <funlockfile@plt>
   15074:	cmp	r7, #0
   15078:	beq	15090 <argp_failure@@Base+0x158>
   1507c:	cmp	r5, #0
   15080:	beq	1512c <argp_failure@@Base+0x1f4>
   15084:	ldr	r3, [r5, #16]
   15088:	tst	r3, #32
   1508c:	beq	1512c <argp_failure@@Base+0x1f4>
   15090:	add	sp, sp, #200	; 0xc8
   15094:	pop	{r4, r5, r6, r7, lr}
   15098:	add	sp, sp, #4
   1509c:	bx	lr
   150a0:	ldr	r3, [pc, #140]	; 15134 <argp_failure@@Base+0x1fc>
   150a4:	ldr	r4, [r3]
   150a8:	cmp	r4, #0
   150ac:	beq	15090 <argp_failure@@Base+0x158>
   150b0:	mov	r0, r4
   150b4:	bl	113c8 <flockfile@plt>
   150b8:	ldr	r3, [pc, #120]	; 15138 <argp_failure@@Base+0x200>
   150bc:	ldr	r0, [r3]
   150c0:	b	14f78 <argp_failure@@Base+0x40>
   150c4:	mov	r1, #58	; 0x3a
   150c8:	mov	r0, r4
   150cc:	bl	11350 <__overflow@plt>
   150d0:	b	14fb4 <argp_failure@@Base+0x7c>
   150d4:	mov	r1, #32
   150d8:	mov	r0, r4
   150dc:	bl	11350 <__overflow@plt>
   150e0:	b	14fd4 <argp_failure@@Base+0x9c>
   150e4:	mov	r1, #58	; 0x3a
   150e8:	mov	r0, r4
   150ec:	bl	11350 <__overflow@plt>
   150f0:	b	1500c <argp_failure@@Base+0xd4>
   150f4:	mov	r1, #32
   150f8:	mov	r0, r4
   150fc:	bl	11350 <__overflow@plt>
   15100:	b	1502c <argp_failure@@Base+0xf4>
   15104:	mov	r0, r6
   15108:	bl	11278 <strerror@plt>
   1510c:	ldr	r3, [pc, #40]	; 1513c <argp_failure@@Base+0x204>
   15110:	cmp	r0, #0
   15114:	moveq	r0, r3
   15118:	b	15044 <argp_failure@@Base+0x10c>
   1511c:	mov	r1, #10
   15120:	mov	r0, r4
   15124:	bl	11350 <__overflow@plt>
   15128:	b	1506c <argp_failure@@Base+0x134>
   1512c:	mov	r0, r7
   15130:	bl	112c0 <exit@plt>
   15134:	ldrdeq	r9, [r2], -r8
   15138:	andeq	r9, r2, r8, asr #3
   1513c:	andeq	r8, r1, r4, lsl r2
   15140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15144:	add	fp, sp, #32
   15148:	sub	sp, sp, #108	; 0x6c
   1514c:	str	r0, [fp, #-112]	; 0xffffff90
   15150:	str	r1, [fp, #-100]	; 0xffffff9c
   15154:	str	r3, [fp, #-104]	; 0xffffff98
   15158:	subs	r3, r2, #0
   1515c:	str	r3, [fp, #-132]	; 0xffffff7c
   15160:	beq	161cc <argp_failure@@Base+0x1294>
   15164:	mov	r0, r3
   15168:	bl	113c8 <flockfile@plt>
   1516c:	ldr	r3, [pc, #3772]	; 16030 <argp_failure@@Base+0x10f8>
   15170:	ldr	r3, [r3, #36]	; 0x24
   15174:	str	r3, [fp, #-108]	; 0xffffff94
   15178:	cmp	r3, #0
   1517c:	beq	15254 <argp_failure@@Base+0x31c>
   15180:	mov	r3, #0
   15184:	ldr	r2, [pc, #3748]	; 16030 <argp_failure@@Base+0x10f8>
   15188:	ldr	r2, [r2, #32]
   1518c:	mov	r1, r3
   15190:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15194:	bl	170c8 <argp_error@@Base+0xd14>
   15198:	subs	sl, r0, #0
   1519c:	beq	15600 <argp_failure@@Base+0x6c8>
   151a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   151a4:	tst	r3, #11
   151a8:	moveq	r3, #0
   151ac:	streq	r3, [fp, #-108]	; 0xffffff94
   151b0:	bne	1560c <argp_failure@@Base+0x6d4>
   151b4:	ldr	r3, [fp, #-104]	; 0xffffff98
   151b8:	tst	r3, #3
   151bc:	moveq	r4, #0
   151c0:	bne	15690 <argp_failure@@Base+0x758>
   151c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   151c8:	tst	r3, #16
   151cc:	bne	1588c <argp_failure@@Base+0x954>
   151d0:	ldr	r3, [fp, #-104]	; 0xffffff98
   151d4:	tst	r3, #4
   151d8:	bne	158b4 <argp_failure@@Base+0x97c>
   151dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   151e0:	tst	r3, #8
   151e4:	beq	16140 <argp_failure@@Base+0x1208>
   151e8:	ldr	r3, [fp, #-108]	; 0xffffff94
   151ec:	ldr	r3, [r3, #4]
   151f0:	cmp	r3, #0
   151f4:	beq	16140 <argp_failure@@Base+0x1208>
   151f8:	cmp	r4, #0
   151fc:	beq	15224 <argp_failure@@Base+0x2ec>
   15200:	ldr	r2, [sl, #28]
   15204:	ldr	r3, [sl, #32]
   15208:	cmp	r2, r3
   1520c:	bcs	158d0 <argp_failure@@Base+0x998>
   15210:	ldr	r3, [sl, #28]
   15214:	add	r2, r3, #1
   15218:	str	r2, [sl, #28]
   1521c:	mov	r2, #10
   15220:	strb	r2, [r3]
   15224:	mov	r3, #0
   15228:	str	r3, [fp, #-88]	; 0xffffffa8
   1522c:	str	r3, [fp, #-84]	; 0xffffffac
   15230:	str	r3, [fp, #-80]	; 0xffffffb0
   15234:	ldr	r3, [fp, #-108]	; 0xffffff94
   15238:	ldr	r2, [r3]
   1523c:	str	r2, [fp, #-96]	; 0xffffffa0
   15240:	ldr	r3, [r3, #4]
   15244:	str	r3, [fp, #-120]	; 0xffffff88
   15248:	cmp	r3, #0
   1524c:	bne	15cb8 <argp_failure@@Base+0xd80>
   15250:	b	1613c <argp_failure@@Base+0x1204>
   15254:	ldr	r0, [pc, #3452]	; 15fd8 <argp_failure@@Base+0x10a0>
   15258:	bl	11248 <getenv@plt>
   1525c:	mov	r9, r0
   15260:	sub	ip, fp, #76	; 0x4c
   15264:	ldr	lr, [pc, #3524]	; 16030 <argp_failure@@Base+0x10f8>
   15268:	ldm	lr!, {r0, r1, r2, r3}
   1526c:	stmia	ip!, {r0, r1, r2, r3}
   15270:	ldm	lr!, {r0, r1, r2, r3}
   15274:	stmia	ip!, {r0, r1, r2, r3}
   15278:	ldm	lr, {r0, r1}
   1527c:	stm	ip, {r0, r1}
   15280:	cmp	r9, #0
   15284:	ldrne	sl, [pc, #3408]	; 15fdc <argp_failure@@Base+0x10a4>
   15288:	addne	r8, sl, #168	; 0xa8
   1528c:	bne	15530 <argp_failure@@Base+0x5f8>
   15290:	b	15180 <argp_failure@@Base+0x248>
   15294:	mov	r5, r3
   15298:	mov	r9, r5
   1529c:	mov	r3, r5
   152a0:	ldrb	r0, [r3], #1
   152a4:	lsl	r2, r0, #1
   152a8:	ldrh	r2, [r1, r2]
   152ac:	tst	r2, #8192	; 0x2000
   152b0:	bne	15294 <argp_failure@@Base+0x35c>
   152b4:	tst	r2, #1024	; 0x400
   152b8:	beq	15528 <argp_failure@@Base+0x5f0>
   152bc:	cmp	r0, #95	; 0x5f
   152c0:	cmpne	r0, #45	; 0x2d
   152c4:	moveq	r3, #1
   152c8:	movne	r3, #0
   152cc:	lsl	r2, r2, #28
   152d0:	orrs	r3, r3, r2, lsr #31
   152d4:	beq	16250 <argp_failure@@Base+0x1318>
   152d8:	mov	r4, r5
   152dc:	ldrb	r3, [r4, #1]!
   152e0:	lsl	r2, r3, #1
   152e4:	ldrh	r2, [r1, r2]
   152e8:	lsl	r2, r2, #28
   152ec:	cmp	r3, #95	; 0x5f
   152f0:	cmpne	r3, #45	; 0x2d
   152f4:	moveq	r3, #1
   152f8:	movne	r3, #0
   152fc:	orrs	r3, r3, r2, lsr #31
   15300:	bne	152dc <argp_failure@@Base+0x3a4>
   15304:	sub	r5, r4, r5
   15308:	ldrb	r3, [r4]
   1530c:	lsl	r2, r3, #1
   15310:	ldrh	r2, [r1, r2]
   15314:	tst	r2, #8192	; 0x2000
   15318:	beq	15330 <argp_failure@@Base+0x3f8>
   1531c:	ldrb	r3, [r4, #1]!
   15320:	lsl	r2, r3, #1
   15324:	ldrh	r2, [r1, r2]
   15328:	tst	r2, #8192	; 0x2000
   1532c:	bne	1531c <argp_failure@@Base+0x3e4>
   15330:	cmp	r3, #44	; 0x2c
   15334:	cmpne	r3, #0
   15338:	beq	16268 <argp_failure@@Base+0x1330>
   1533c:	cmp	r3, #61	; 0x3d
   15340:	beq	15368 <argp_failure@@Base+0x430>
   15344:	ldrb	r3, [r4]
   15348:	lsl	r3, r3, #1
   1534c:	ldrh	r3, [r1, r3]
   15350:	tst	r3, #2048	; 0x800
   15354:	bne	153e8 <argp_failure@@Base+0x4b0>
   15358:	ldr	r3, [fp, #-108]	; 0xffffff94
   1535c:	str	r3, [fp, #-96]	; 0xffffffa0
   15360:	str	r3, [fp, #-116]	; 0xffffff8c
   15364:	b	1627c <argp_failure@@Base+0x1344>
   15368:	add	r2, r4, #1
   1536c:	ldrb	r3, [r4, #1]
   15370:	lsl	r3, r3, #1
   15374:	ldrh	r3, [r1, r3]
   15378:	tst	r3, #8192	; 0x2000
   1537c:	beq	16260 <argp_failure@@Base+0x1328>
   15380:	ldrb	r3, [r2, #1]!
   15384:	lsl	r3, r3, #1
   15388:	ldrh	r3, [r1, r3]
   1538c:	tst	r3, #8192	; 0x2000
   15390:	bne	15380 <argp_failure@@Base+0x448>
   15394:	mov	r4, r2
   15398:	b	15344 <argp_failure@@Base+0x40c>
   1539c:	ldrb	r3, [r9, #1]
   153a0:	cmp	r3, #111	; 0x6f
   153a4:	movne	r3, #1
   153a8:	strne	r3, [fp, #-96]	; 0xffffffa0
   153ac:	strne	r3, [fp, #-116]	; 0xffffff8c
   153b0:	bne	1627c <argp_failure@@Base+0x1344>
   153b4:	ldrb	r3, [r9, #2]
   153b8:	cmp	r3, #45	; 0x2d
   153bc:	movne	r3, #1
   153c0:	strne	r3, [fp, #-96]	; 0xffffffa0
   153c4:	strne	r3, [fp, #-116]	; 0xffffff8c
   153c8:	bne	1627c <argp_failure@@Base+0x1344>
   153cc:	add	r9, r9, #3
   153d0:	sub	r5, r5, #3
   153d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   153d8:	str	r3, [fp, #-116]	; 0xffffff8c
   153dc:	mov	r3, #1
   153e0:	str	r3, [fp, #-96]	; 0xffffffa0
   153e4:	b	1627c <argp_failure@@Base+0x1344>
   153e8:	mov	r2, #10
   153ec:	mov	r1, #0
   153f0:	mov	r0, r4
   153f4:	bl	11128 <strtol@plt>
   153f8:	str	r0, [fp, #-116]	; 0xffffff8c
   153fc:	ldr	r2, [r6]
   15400:	ldrb	r3, [r4]
   15404:	lsl	r3, r3, #1
   15408:	ldrh	r3, [r2, r3]
   1540c:	tst	r3, #2048	; 0x800
   15410:	beq	15428 <argp_failure@@Base+0x4f0>
   15414:	ldrb	r3, [r4, #1]!
   15418:	lsl	r3, r3, #1
   1541c:	ldrh	r3, [r2, r3]
   15420:	tst	r3, #2048	; 0x800
   15424:	bne	15414 <argp_failure@@Base+0x4dc>
   15428:	ldrb	r3, [r4]
   1542c:	lsl	r3, r3, #1
   15430:	ldrh	r3, [r2, r3]
   15434:	tst	r3, #8192	; 0x2000
   15438:	beq	1545c <argp_failure@@Base+0x524>
   1543c:	ldrb	r3, [r4, #1]!
   15440:	lsl	r3, r3, #1
   15444:	ldrh	r3, [r2, r3]
   15448:	tst	r3, #8192	; 0x2000
   1544c:	bne	1543c <argp_failure@@Base+0x504>
   15450:	ldr	r3, [fp, #-108]	; 0xffffff94
   15454:	str	r3, [fp, #-96]	; 0xffffffa0
   15458:	b	1627c <argp_failure@@Base+0x1344>
   1545c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15460:	str	r3, [fp, #-96]	; 0xffffffa0
   15464:	b	1627c <argp_failure@@Base+0x1344>
   15468:	str	r9, [sp, #4]
   1546c:	str	r7, [sp]
   15470:	ldr	r3, [pc, #2920]	; 15fe0 <argp_failure@@Base+0x10a8>
   15474:	mov	r2, #0
   15478:	mov	r1, r2
   1547c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15480:	bl	14f38 <argp_failure@@Base>
   15484:	b	154ec <argp_failure@@Base+0x5b4>
   15488:	add	r6, r6, #16
   1548c:	cmp	r6, r8
   15490:	beq	15508 <argp_failure@@Base+0x5d0>
   15494:	mov	r0, r6
   15498:	bl	112cc <strlen@plt>
   1549c:	mov	r7, r0
   154a0:	cmp	r0, r5
   154a4:	bne	15488 <argp_failure@@Base+0x550>
   154a8:	mov	r2, r5
   154ac:	mov	r1, r6
   154b0:	mov	r0, r9
   154b4:	bl	113f8 <strncmp@plt>
   154b8:	cmp	r0, #0
   154bc:	bne	15488 <argp_failure@@Base+0x550>
   154c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154c4:	cmp	r3, #0
   154c8:	beq	154d8 <argp_failure@@Base+0x5a0>
   154cc:	ldrb	r3, [r6, #14]
   154d0:	cmp	r3, #0
   154d4:	beq	15468 <argp_failure@@Base+0x530>
   154d8:	ldrb	r3, [r6, #15]
   154dc:	sub	r2, fp, #36	; 0x24
   154e0:	add	r3, r2, r3
   154e4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   154e8:	str	r2, [r3, #-40]	; 0xffffffd8
   154ec:	cmp	r6, r8
   154f0:	beq	15508 <argp_failure@@Base+0x5d0>
   154f4:	ldrb	r3, [r4]
   154f8:	cmp	r3, #44	; 0x2c
   154fc:	addeq	r9, r4, #1
   15500:	movne	r9, r4
   15504:	b	15530 <argp_failure@@Base+0x5f8>
   15508:	str	r9, [sp, #4]
   1550c:	str	r5, [sp]
   15510:	ldr	r3, [pc, #2764]	; 15fe4 <argp_failure@@Base+0x10ac>
   15514:	mov	r2, #0
   15518:	mov	r1, r2
   1551c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15520:	bl	14f38 <argp_failure@@Base>
   15524:	b	154f4 <argp_failure@@Base+0x5bc>
   15528:	cmp	r0, #0
   1552c:	bne	15550 <argp_failure@@Base+0x618>
   15530:	ldrb	r3, [r9]
   15534:	cmp	r3, #0
   15538:	beq	15568 <argp_failure@@Base+0x630>
   1553c:	bl	112a8 <__ctype_b_loc@plt>
   15540:	mov	r6, r0
   15544:	ldr	r1, [r0]
   15548:	mov	r5, r9
   1554c:	b	15298 <argp_failure@@Base+0x360>
   15550:	str	r5, [sp]
   15554:	ldr	r3, [pc, #2700]	; 15fe8 <argp_failure@@Base+0x10b0>
   15558:	mov	r2, #0
   1555c:	mov	r1, r2
   15560:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15564:	bl	14f38 <argp_failure@@Base>
   15568:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1556c:	ldr	r3, [pc, #2680]	; 15fec <argp_failure@@Base+0x10b4>
   15570:	add	r1, r3, #144	; 0x90
   15574:	add	r3, r3, #16
   15578:	cmp	r3, r1
   1557c:	beq	155d0 <argp_failure@@Base+0x698>
   15580:	ldrb	r2, [r3, #14]
   15584:	cmp	r2, #0
   15588:	bne	15574 <argp_failure@@Base+0x63c>
   1558c:	ldrb	r2, [r3, #15]
   15590:	cmp	r2, #32
   15594:	beq	15574 <argp_failure@@Base+0x63c>
   15598:	sub	ip, fp, #36	; 0x24
   1559c:	add	r2, ip, r2
   155a0:	ldr	r2, [r2, #-40]	; 0xffffffd8
   155a4:	cmp	r2, r0
   155a8:	blt	15574 <argp_failure@@Base+0x63c>
   155ac:	str	r3, [sp, #4]
   155b0:	ldr	r3, [pc, #2616]	; 15ff0 <argp_failure@@Base+0x10b8>
   155b4:	str	r3, [sp]
   155b8:	ldr	r3, [pc, #2612]	; 15ff4 <argp_failure@@Base+0x10bc>
   155bc:	mov	r2, #0
   155c0:	mov	r1, r2
   155c4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   155c8:	bl	14f38 <argp_failure@@Base>
   155cc:	b	15180 <argp_failure@@Base+0x248>
   155d0:	ldr	r4, [pc, #2648]	; 16030 <argp_failure@@Base+0x10f8>
   155d4:	mov	ip, r4
   155d8:	sub	lr, fp, #76	; 0x4c
   155dc:	ldm	lr!, {r0, r1, r2, r3}
   155e0:	stmia	ip!, {r0, r1, r2, r3}
   155e4:	ldm	lr!, {r0, r1, r2, r3}
   155e8:	stmia	ip!, {r0, r1, r2, r3}
   155ec:	ldm	lr, {r0, r1}
   155f0:	stm	ip, {r0, r1}
   155f4:	mov	r3, #1
   155f8:	str	r3, [r4, #36]	; 0x24
   155fc:	b	15180 <argp_failure@@Base+0x248>
   15600:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15604:	bl	1120c <funlockfile@plt>
   15608:	b	161cc <argp_failure@@Base+0x1294>
   1560c:	mov	r1, #0
   15610:	ldr	r0, [fp, #-112]	; 0xffffff90
   15614:	bl	1487c <argp_parse@@Base+0x2754>
   15618:	str	r0, [fp, #-108]	; 0xffffff94
   1561c:	ldr	r1, [pc, #2516]	; 15ff8 <argp_failure@@Base+0x10c0>
   15620:	bl	13784 <argp_parse@@Base+0x165c>
   15624:	cmp	r0, #0
   15628:	mvnne	r3, #0
   1562c:	strne	r3, [r0, #12]
   15630:	ldr	r1, [pc, #2500]	; 15ffc <argp_failure@@Base+0x10c4>
   15634:	ldr	r0, [fp, #-108]	; 0xffffff94
   15638:	bl	13784 <argp_parse@@Base+0x165c>
   1563c:	cmp	r0, #0
   15640:	mvnne	r3, #0
   15644:	strne	r3, [r0, #12]
   15648:	ldr	r0, [fp, #-108]	; 0xffffff94
   1564c:	ldr	r3, [r0, #4]
   15650:	cmp	r3, #0
   15654:	beq	151b4 <argp_failure@@Base+0x27c>
   15658:	ldr	r2, [r0]
   1565c:	mov	r3, #0
   15660:	str	r3, [r2, #24]
   15664:	add	r3, r3, #1
   15668:	add	r2, r2, #28
   1566c:	ldr	r1, [r0, #4]
   15670:	cmp	r3, r1
   15674:	bcc	15660 <argp_failure@@Base+0x728>
   15678:	ldr	r3, [pc, #2432]	; 16000 <argp_failure@@Base+0x10c8>
   1567c:	mov	r2, #28
   15680:	ldr	r0, [fp, #-108]	; 0xffffff94
   15684:	ldr	r0, [r0]
   15688:	bl	113e0 <qsort@plt>
   1568c:	b	151b4 <argp_failure@@Base+0x27c>
   15690:	ldr	r0, [fp, #-112]	; 0xffffff90
   15694:	bl	1381c <argp_parse@@Base+0x16f4>
   15698:	mov	r2, r0
   1569c:	add	r3, r0, #14
   156a0:	bic	r3, r3, #7
   156a4:	sub	sp, sp, r3
   156a8:	add	r8, sp, #8
   156ac:	mov	r1, #0
   156b0:	mov	r0, r8
   156b4:	bl	11314 <memset@plt>
   156b8:	mov	r5, #1
   156bc:	ldr	r4, [pc, #2412]	; 16030 <argp_failure@@Base+0x10f8>
   156c0:	ldr	r9, [pc, #2364]	; 16004 <argp_failure@@Base+0x10cc>
   156c4:	str	r8, [fp, #-96]	; 0xffffffa0
   156c8:	ldr	r8, [fp, #-104]	; 0xffffff98
   156cc:	b	1577c <argp_failure@@Base+0x844>
   156d0:	mov	r0, sl
   156d4:	bl	17140 <argp_error@@Base+0xd8c>
   156d8:	b	15798 <argp_failure@@Base+0x860>
   156dc:	mov	r0, sl
   156e0:	bl	17140 <argp_error@@Base+0xd8c>
   156e4:	b	157e0 <argp_failure@@Base+0x8a8>
   156e8:	mov	r1, sl
   156ec:	ldr	r0, [fp, #-108]	; 0xffffff94
   156f0:	bl	13574 <argp_parse@@Base+0x144c>
   156f4:	orr	r8, r8, #2
   156f8:	str	sl, [sp]
   156fc:	mov	r3, #1
   15700:	sub	r2, fp, #76	; 0x4c
   15704:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15708:	ldr	r0, [fp, #-112]	; 0xffffff90
   1570c:	bl	13a9c <argp_parse@@Base+0x1974>
   15710:	mov	r6, r0
   15714:	ldr	r3, [sl, #28]
   15718:	ldr	r2, [sl, #24]
   1571c:	sub	r3, r3, r2
   15720:	ldr	r2, [sl, #16]
   15724:	cmp	r3, r2
   15728:	bhi	15850 <argp_failure@@Base+0x918>
   1572c:	str	r7, [sl, #12]
   15730:	ldr	r3, [sl, #28]
   15734:	ldr	r2, [sl, #24]
   15738:	sub	r3, r3, r2
   1573c:	ldr	r2, [sl, #16]
   15740:	cmp	r3, r2
   15744:	bhi	1585c <argp_failure@@Base+0x924>
   15748:	str	r5, [sl, #4]
   1574c:	ldr	r2, [sl, #28]
   15750:	ldr	r3, [sl, #32]
   15754:	cmp	r2, r3
   15758:	bcs	15868 <argp_failure@@Base+0x930>
   1575c:	ldr	r3, [sl, #28]
   15760:	add	r2, r3, #1
   15764:	str	r2, [sl, #28]
   15768:	mov	r2, #10
   1576c:	strb	r2, [r3]
   15770:	mov	r5, #0
   15774:	cmp	r6, r5
   15778:	beq	15880 <argp_failure@@Base+0x948>
   1577c:	ldr	r6, [r4, #28]
   15780:	ldr	r3, [sl, #28]
   15784:	ldr	r2, [sl, #24]
   15788:	sub	r3, r3, r2
   1578c:	ldr	r2, [sl, #16]
   15790:	cmp	r3, r2
   15794:	bhi	156d0 <argp_failure@@Base+0x798>
   15798:	ldr	r7, [sl, #12]
   1579c:	str	r6, [sl, #12]
   157a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   157a4:	str	r3, [fp, #-76]	; 0xffffffb4
   157a8:	cmp	r5, #0
   157ac:	ldr	r3, [fp, #4]
   157b0:	ldrne	r2, [pc, #2128]	; 16008 <argp_failure@@Base+0x10d0>
   157b4:	ldreq	r2, [pc, #2128]	; 1600c <argp_failure@@Base+0x10d4>
   157b8:	mov	r1, r9
   157bc:	mov	r0, sl
   157c0:	bl	177d4 <argp_error@@Base+0x1420>
   157c4:	ldr	r6, [r4, #28]
   157c8:	ldr	r3, [sl, #28]
   157cc:	ldr	r2, [sl, #24]
   157d0:	sub	r3, r3, r2
   157d4:	ldr	r2, [sl, #16]
   157d8:	cmp	r3, r2
   157dc:	bhi	156dc <argp_failure@@Base+0x7a4>
   157e0:	ldr	r5, [sl, #4]
   157e4:	str	r6, [sl, #4]
   157e8:	tst	r8, #2
   157ec:	beq	156e8 <argp_failure@@Base+0x7b0>
   157f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   157f4:	ldr	r3, [r3, #4]
   157f8:	cmp	r3, #0
   157fc:	beq	156f8 <argp_failure@@Base+0x7c0>
   15800:	ldr	r3, [sl, #28]
   15804:	add	r3, r3, #12
   15808:	ldr	r2, [sl, #32]
   1580c:	cmp	r2, r3
   15810:	bcs	15828 <argp_failure@@Base+0x8f0>
   15814:	mov	r1, #12
   15818:	mov	r0, sl
   1581c:	bl	176e4 <argp_error@@Base+0x1330>
   15820:	cmp	r0, #0
   15824:	beq	156f8 <argp_failure@@Base+0x7c0>
   15828:	ldr	ip, [sl, #28]
   1582c:	ldr	r3, [pc, #2012]	; 16010 <argp_failure@@Base+0x10d8>
   15830:	ldm	r3!, {r0, r1, r2}
   15834:	str	r0, [ip]
   15838:	str	r1, [ip, #4]
   1583c:	str	r2, [ip, #8]
   15840:	ldr	r3, [sl, #28]
   15844:	add	r3, r3, #12
   15848:	str	r3, [sl, #28]
   1584c:	b	156f8 <argp_failure@@Base+0x7c0>
   15850:	mov	r0, sl
   15854:	bl	17140 <argp_error@@Base+0xd8c>
   15858:	b	1572c <argp_failure@@Base+0x7f4>
   1585c:	mov	r0, sl
   15860:	bl	17140 <argp_error@@Base+0xd8c>
   15864:	b	15748 <argp_failure@@Base+0x810>
   15868:	mov	r1, #1
   1586c:	mov	r0, sl
   15870:	bl	176e4 <argp_error@@Base+0x1330>
   15874:	cmp	r0, #0
   15878:	beq	15770 <argp_failure@@Base+0x838>
   1587c:	b	1575c <argp_failure@@Base+0x824>
   15880:	str	r8, [fp, #-104]	; 0xffffff98
   15884:	mov	r4, #1
   15888:	b	151c4 <argp_failure@@Base+0x28c>
   1588c:	str	sl, [sp, #4]
   15890:	mov	r3, #1
   15894:	str	r3, [sp]
   15898:	mov	r3, #0
   1589c:	mov	r2, r3
   158a0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   158a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   158a8:	bl	13ff4 <argp_parse@@Base+0x1ecc>
   158ac:	orr	r4, r4, r0
   158b0:	b	151d0 <argp_failure@@Base+0x298>
   158b4:	ldr	r3, [fp, #4]
   158b8:	mov	r2, r3
   158bc:	ldr	r1, [pc, #1872]	; 16014 <argp_failure@@Base+0x10dc>
   158c0:	mov	r0, sl
   158c4:	bl	177d4 <argp_error@@Base+0x1420>
   158c8:	mov	r4, #1
   158cc:	b	151dc <argp_failure@@Base+0x2a4>
   158d0:	mov	r1, #1
   158d4:	mov	r0, sl
   158d8:	bl	176e4 <argp_error@@Base+0x1330>
   158dc:	cmp	r0, #0
   158e0:	beq	15224 <argp_failure@@Base+0x2ec>
   158e4:	b	15210 <argp_failure@@Base+0x2d8>
   158e8:	mov	r0, sl
   158ec:	bl	17140 <argp_error@@Base+0xd8c>
   158f0:	b	15cdc <argp_failure@@Base+0xda4>
   158f4:	add	r3, r3, #24
   158f8:	subs	r2, r2, #1
   158fc:	beq	15920 <argp_failure@@Base+0x9e8>
   15900:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15904:	cmp	r1, #0
   15908:	beq	158f4 <argp_failure@@Base+0x9bc>
   1590c:	ldr	r1, [r3, #-12]
   15910:	tst	r1, #2
   15914:	bne	158f4 <argp_failure@@Base+0x9bc>
   15918:	mov	r3, #1
   1591c:	str	r3, [fp, #-116]	; 0xffffff8c
   15920:	ldr	r3, [pc, #1800]	; 16030 <argp_failure@@Base+0x10f8>
   15924:	ldr	r4, [r3, #8]
   15928:	ldr	r3, [sl, #28]
   1592c:	ldr	r2, [sl, #24]
   15930:	sub	r3, r3, r2
   15934:	ldr	r2, [sl, #16]
   15938:	cmp	r3, r2
   1593c:	bhi	1595c <argp_failure@@Base+0xa24>
   15940:	str	r4, [sl, #12]
   15944:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15948:	ldr	r5, [r3, #4]
   1594c:	cmp	r5, #0
   15950:	beq	15a58 <argp_failure@@Base+0xb20>
   15954:	mov	r4, r8
   15958:	b	1629c <argp_failure@@Base+0x1364>
   1595c:	mov	r0, sl
   15960:	bl	17140 <argp_error@@Base+0xd8c>
   15964:	b	15940 <argp_failure@@Base+0xa08>
   15968:	tst	r6, #2
   1596c:	beq	15978 <argp_failure@@Base+0xa40>
   15970:	add	r9, r9, #1
   15974:	b	16290 <argp_failure@@Base+0x1358>
   15978:	sub	r1, fp, #76	; 0x4c
   1597c:	ldr	r3, [pc, #1708]	; 16030 <argp_failure@@Base+0x10f8>
   15980:	ldr	r0, [r3, #8]
   15984:	bl	13e70 <argp_parse@@Base+0x1d48>
   15988:	ldr	r2, [sl, #28]
   1598c:	ldr	r3, [sl, #32]
   15990:	cmp	r2, r3
   15994:	bcs	15a14 <argp_failure@@Base+0xadc>
   15998:	ldr	r3, [sl, #28]
   1599c:	add	r2, r3, #1
   159a0:	str	r2, [sl, #28]
   159a4:	mov	r2, #45	; 0x2d
   159a8:	strb	r2, [r3]
   159ac:	ldrb	r6, [r9]
   159b0:	ldr	r2, [sl, #28]
   159b4:	ldr	r3, [sl, #32]
   159b8:	cmp	r2, r3
   159bc:	bcs	15a2c <argp_failure@@Base+0xaf4>
   159c0:	ldr	r3, [sl, #28]
   159c4:	add	r2, r3, #1
   159c8:	str	r2, [sl, #28]
   159cc:	strb	r6, [r3]
   159d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   159d4:	cmp	r3, #0
   159d8:	beq	159ec <argp_failure@@Base+0xab4>
   159dc:	ldr	r3, [pc, #1612]	; 16030 <argp_failure@@Base+0x10f8>
   159e0:	ldr	r3, [r3]
   159e4:	cmp	r3, #0
   159e8:	beq	15a44 <argp_failure@@Base+0xb0c>
   159ec:	ldr	r2, [r8, #8]
   159f0:	cmp	r2, #0
   159f4:	beq	15970 <argp_failure@@Base+0xa38>
   159f8:	ldr	r3, [r8, #12]
   159fc:	tst	r3, #1
   15a00:	ldrne	r1, [pc, #1552]	; 16018 <argp_failure@@Base+0x10e0>
   15a04:	ldreq	r1, [pc, #1552]	; 1601c <argp_failure@@Base+0x10e4>
   15a08:	mov	r0, sl
   15a0c:	bl	177d4 <argp_error@@Base+0x1420>
   15a10:	b	15970 <argp_failure@@Base+0xa38>
   15a14:	mov	r1, #1
   15a18:	mov	r0, sl
   15a1c:	bl	176e4 <argp_error@@Base+0x1330>
   15a20:	cmp	r0, #0
   15a24:	beq	159ac <argp_failure@@Base+0xa74>
   15a28:	b	15998 <argp_failure@@Base+0xa60>
   15a2c:	mov	r1, #1
   15a30:	mov	r0, sl
   15a34:	bl	176e4 <argp_error@@Base+0x1330>
   15a38:	cmp	r0, #0
   15a3c:	beq	159d0 <argp_failure@@Base+0xa98>
   15a40:	b	159c0 <argp_failure@@Base+0xa88>
   15a44:	ldr	r3, [r8, #8]
   15a48:	cmp	r3, #0
   15a4c:	movne	r3, #1
   15a50:	strne	r3, [fp, #-80]	; 0xffffffb0
   15a54:	b	15970 <argp_failure@@Base+0xa38>
   15a58:	ldr	r3, [r8, #12]
   15a5c:	tst	r3, #8
   15a60:	beq	15b3c <argp_failure@@Base+0xc04>
   15a64:	ldr	r3, [pc, #1476]	; 16030 <argp_failure@@Base+0x10f8>
   15a68:	ldr	r4, [r3, #16]
   15a6c:	ldr	r3, [sl, #28]
   15a70:	ldr	r2, [sl, #24]
   15a74:	sub	r3, r3, r2
   15a78:	ldr	r2, [sl, #16]
   15a7c:	cmp	r3, r2
   15a80:	bhi	15aa0 <argp_failure@@Base+0xb68>
   15a84:	str	r4, [sl, #12]
   15a88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a8c:	ldr	r5, [r3, #4]
   15a90:	cmp	r5, #0
   15a94:	beq	15bf0 <argp_failure@@Base+0xcb8>
   15a98:	add	r4, r8, #24
   15a9c:	b	15ad4 <argp_failure@@Base+0xb9c>
   15aa0:	mov	r0, sl
   15aa4:	bl	17140 <argp_error@@Base+0xd8c>
   15aa8:	b	15a84 <argp_failure@@Base+0xb4c>
   15aac:	mov	r2, r6
   15ab0:	mov	r1, r7
   15ab4:	ldr	r0, [sl, #28]
   15ab8:	bl	11194 <memcpy@plt>
   15abc:	ldr	r3, [sl, #28]
   15ac0:	add	r6, r3, r6
   15ac4:	str	r6, [sl, #28]
   15ac8:	add	r4, r4, #24
   15acc:	subs	r5, r5, #1
   15ad0:	beq	15bf0 <argp_failure@@Base+0xcb8>
   15ad4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15ad8:	cmp	r3, #0
   15adc:	beq	15ac8 <argp_failure@@Base+0xb90>
   15ae0:	ldr	r3, [r4, #-12]
   15ae4:	tst	r3, #2
   15ae8:	bne	15ac8 <argp_failure@@Base+0xb90>
   15aec:	sub	r1, fp, #76	; 0x4c
   15af0:	ldr	r3, [pc, #1336]	; 16030 <argp_failure@@Base+0x10f8>
   15af4:	ldr	r0, [r3, #16]
   15af8:	bl	13e70 <argp_parse@@Base+0x1d48>
   15afc:	ldr	r7, [r4, #-24]	; 0xffffffe8
   15b00:	mov	r0, r7
   15b04:	bl	112cc <strlen@plt>
   15b08:	subs	r6, r0, #0
   15b0c:	beq	15ac8 <argp_failure@@Base+0xb90>
   15b10:	ldr	r3, [sl, #28]
   15b14:	add	r3, r3, r6
   15b18:	ldr	r2, [sl, #32]
   15b1c:	cmp	r2, r3
   15b20:	bcs	15aac <argp_failure@@Base+0xb74>
   15b24:	mov	r1, r6
   15b28:	mov	r0, sl
   15b2c:	bl	176e4 <argp_error@@Base+0x1330>
   15b30:	cmp	r0, #0
   15b34:	beq	15ac8 <argp_failure@@Base+0xb90>
   15b38:	b	15aac <argp_failure@@Base+0xb74>
   15b3c:	ldr	r3, [pc, #1260]	; 16030 <argp_failure@@Base+0x10f8>
   15b40:	ldr	r4, [r3, #12]
   15b44:	ldr	r3, [sl, #28]
   15b48:	ldr	r2, [sl, #24]
   15b4c:	sub	r3, r3, r2
   15b50:	ldr	r2, [sl, #16]
   15b54:	cmp	r3, r2
   15b58:	bhi	15b78 <argp_failure@@Base+0xc40>
   15b5c:	str	r4, [sl, #12]
   15b60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15b64:	ldr	r5, [r3, #4]
   15b68:	cmp	r5, #0
   15b6c:	beq	15bf0 <argp_failure@@Base+0xcb8>
   15b70:	add	r4, r8, #24
   15b74:	b	15b90 <argp_failure@@Base+0xc58>
   15b78:	mov	r0, sl
   15b7c:	bl	17140 <argp_error@@Base+0xd8c>
   15b80:	b	15b5c <argp_failure@@Base+0xc24>
   15b84:	add	r4, r4, #24
   15b88:	subs	r5, r5, #1
   15b8c:	beq	15bf0 <argp_failure@@Base+0xcb8>
   15b90:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15b94:	cmp	r3, #0
   15b98:	beq	15b84 <argp_failure@@Base+0xc4c>
   15b9c:	ldr	r3, [r4, #-12]
   15ba0:	tst	r3, #2
   15ba4:	bne	15b84 <argp_failure@@Base+0xc4c>
   15ba8:	sub	r1, fp, #76	; 0x4c
   15bac:	ldr	r3, [pc, #1148]	; 16030 <argp_failure@@Base+0x10f8>
   15bb0:	ldr	r0, [r3, #12]
   15bb4:	bl	13e70 <argp_parse@@Base+0x1d48>
   15bb8:	ldr	r2, [r4, #-24]	; 0xffffffe8
   15bbc:	ldr	r1, [pc, #1116]	; 16020 <argp_failure@@Base+0x10e8>
   15bc0:	mov	r0, sl
   15bc4:	bl	177d4 <argp_error@@Base+0x1420>
   15bc8:	ldr	r2, [r8, #8]
   15bcc:	cmp	r2, #0
   15bd0:	beq	15b84 <argp_failure@@Base+0xc4c>
   15bd4:	ldr	r3, [r8, #12]
   15bd8:	tst	r3, #1
   15bdc:	ldrne	r1, [pc, #1088]	; 16024 <argp_failure@@Base+0x10ec>
   15be0:	ldreq	r1, [pc, #1088]	; 16028 <argp_failure@@Base+0x10f0>
   15be4:	mov	r0, sl
   15be8:	bl	177d4 <argp_error@@Base+0x1420>
   15bec:	b	15b84 <argp_failure@@Base+0xc4c>
   15bf0:	ldr	r3, [sl, #28]
   15bf4:	ldr	r2, [sl, #24]
   15bf8:	sub	r3, r3, r2
   15bfc:	ldr	r2, [sl, #16]
   15c00:	cmp	r3, r2
   15c04:	bhi	15d44 <argp_failure@@Base+0xe0c>
   15c08:	mov	r3, #0
   15c0c:	str	r3, [sl, #4]
   15c10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15c14:	cmp	r3, #0
   15c18:	beq	15d68 <argp_failure@@Base+0xe30>
   15c1c:	ldr	r3, [r8, #12]
   15c20:	tst	r3, #8
   15c24:	bne	15c50 <argp_failure@@Base+0xd18>
   15c28:	ldr	r4, [r8, #4]
   15c2c:	sub	r3, r4, #1
   15c30:	cmp	r3, #254	; 0xfe
   15c34:	bhi	15c50 <argp_failure@@Base+0xd18>
   15c38:	bl	112a8 <__ctype_b_loc@plt>
   15c3c:	ldr	r3, [r0]
   15c40:	lsl	r4, r4, #1
   15c44:	ldrh	r3, [r3, r4]
   15c48:	tst	r3, #16384	; 0x4000
   15c4c:	bne	15c5c <argp_failure@@Base+0xd24>
   15c50:	ldr	r3, [r8]
   15c54:	cmp	r3, #0
   15c58:	beq	15d50 <argp_failure@@Base+0xe18>
   15c5c:	ldr	r3, [sl, #28]
   15c60:	ldr	r2, [sl, #24]
   15c64:	sub	r3, r3, r2
   15c68:	ldr	r2, [sl, #16]
   15c6c:	cmp	r3, r2
   15c70:	bhi	15fc0 <argp_failure@@Base+0x1088>
   15c74:	ldr	r3, [fp, #-124]	; 0xffffff84
   15c78:	str	r3, [sl, #4]
   15c7c:	ldr	r3, [sl, #28]
   15c80:	ldr	r2, [sl, #24]
   15c84:	sub	r3, r3, r2
   15c88:	ldr	r2, [sl, #16]
   15c8c:	cmp	r3, r2
   15c90:	bhi	15fcc <argp_failure@@Base+0x1094>
   15c94:	ldr	r3, [fp, #-128]	; 0xffffff80
   15c98:	str	r3, [sl, #12]
   15c9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ca0:	add	r3, r3, #28
   15ca4:	str	r3, [fp, #-96]	; 0xffffffa0
   15ca8:	ldr	r3, [fp, #-120]	; 0xffffff88
   15cac:	subs	r3, r3, #1
   15cb0:	str	r3, [fp, #-120]	; 0xffffff88
   15cb4:	beq	16044 <argp_failure@@Base+0x110c>
   15cb8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15cbc:	ldr	r8, [r3]
   15cc0:	ldr	r9, [r3, #8]
   15cc4:	ldr	r3, [sl, #28]
   15cc8:	ldr	r2, [sl, #24]
   15ccc:	sub	r3, r3, r2
   15cd0:	ldr	r2, [sl, #16]
   15cd4:	cmp	r3, r2
   15cd8:	bhi	158e8 <argp_failure@@Base+0x9b0>
   15cdc:	ldr	r3, [sl, #4]
   15ce0:	str	r3, [fp, #-124]	; 0xffffff84
   15ce4:	mov	r3, #0
   15ce8:	str	r3, [sl, #4]
   15cec:	ldr	r3, [sl, #12]
   15cf0:	str	r3, [fp, #-128]	; 0xffffff80
   15cf4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15cf8:	str	r2, [fp, #-76]	; 0xffffffb4
   15cfc:	str	sl, [fp, #-72]	; 0xffffffb8
   15d00:	sub	r3, fp, #88	; 0x58
   15d04:	str	r3, [fp, #-68]	; 0xffffffbc
   15d08:	mov	r3, #1
   15d0c:	str	r3, [fp, #-64]	; 0xffffffc0
   15d10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d14:	str	r3, [fp, #-60]	; 0xffffffc4
   15d18:	ldr	r3, [r8, #12]
   15d1c:	ands	r3, r3, #8
   15d20:	str	r3, [fp, #-116]	; 0xffffff8c
   15d24:	movne	r3, #0
   15d28:	strne	r3, [fp, #-116]	; 0xffffff8c
   15d2c:	bne	15920 <argp_failure@@Base+0x9e8>
   15d30:	ldr	r2, [r2, #4]
   15d34:	cmp	r2, #0
   15d38:	beq	15920 <argp_failure@@Base+0x9e8>
   15d3c:	add	r3, r8, #24
   15d40:	b	15900 <argp_failure@@Base+0x9c8>
   15d44:	mov	r0, sl
   15d48:	bl	17140 <argp_error@@Base+0xd8c>
   15d4c:	b	15c08 <argp_failure@@Base+0xcd0>
   15d50:	sub	r2, fp, #76	; 0x4c
   15d54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15d58:	ldr	r1, [r3, #20]
   15d5c:	ldr	r0, [r8, #16]
   15d60:	bl	13c8c <argp_parse@@Base+0x1b64>
   15d64:	b	15ec0 <argp_failure@@Base+0xf88>
   15d68:	ldr	r7, [r8, #16]
   15d6c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d70:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15d74:	ldr	r2, [r2, #20]
   15d78:	ldr	r1, [r8, #4]
   15d7c:	mov	r0, r7
   15d80:	bl	13a58 <argp_parse@@Base+0x1930>
   15d84:	subs	r4, r0, #0
   15d88:	beq	15e7c <argp_failure@@Base+0xf44>
   15d8c:	ldrb	r3, [r4]
   15d90:	cmp	r3, #0
   15d94:	beq	15e74 <argp_failure@@Base+0xf3c>
   15d98:	ldr	r3, [sl, #28]
   15d9c:	ldr	r2, [sl, #24]
   15da0:	sub	r3, r3, r2
   15da4:	ldr	r2, [sl, #16]
   15da8:	cmp	r3, r2
   15dac:	bhi	15ecc <argp_failure@@Base+0xf94>
   15db0:	ldr	r5, [sl, #20]
   15db4:	bic	r5, r5, r5, asr #31
   15db8:	ldr	r3, [pc, #624]	; 16030 <argp_failure@@Base+0x10f8>
   15dbc:	ldr	r6, [r3, #20]
   15dc0:	str	r6, [sl, #4]
   15dc4:	ldr	r3, [pc, #612]	; 16030 <argp_failure@@Base+0x10f8>
   15dc8:	ldr	r6, [r3, #20]
   15dcc:	ldr	r3, [sl, #28]
   15dd0:	ldr	r2, [sl, #24]
   15dd4:	sub	r3, r3, r2
   15dd8:	ldr	r2, [sl, #16]
   15ddc:	cmp	r3, r2
   15de0:	bhi	15f08 <argp_failure@@Base+0xfd0>
   15de4:	str	r6, [sl, #12]
   15de8:	ldr	r3, [pc, #576]	; 16030 <argp_failure@@Base+0x10f8>
   15dec:	ldr	r1, [r3, #20]
   15df0:	add	r3, r1, #3
   15df4:	cmp	r3, r5
   15df8:	bcs	15f2c <argp_failure@@Base+0xff4>
   15dfc:	ldr	r2, [sl, #28]
   15e00:	ldr	r3, [sl, #32]
   15e04:	cmp	r2, r3
   15e08:	bcs	15f14 <argp_failure@@Base+0xfdc>
   15e0c:	ldr	r3, [sl, #28]
   15e10:	add	r2, r3, #1
   15e14:	str	r2, [sl, #28]
   15e18:	mov	r2, #10
   15e1c:	strb	r2, [r3]
   15e20:	mov	r0, r4
   15e24:	bl	112cc <strlen@plt>
   15e28:	subs	r5, r0, #0
   15e2c:	beq	15e74 <argp_failure@@Base+0xf3c>
   15e30:	ldr	r3, [sl, #28]
   15e34:	add	r3, r3, r5
   15e38:	ldr	r2, [sl, #32]
   15e3c:	cmp	r2, r3
   15e40:	bcs	15e58 <argp_failure@@Base+0xf20>
   15e44:	mov	r1, r5
   15e48:	mov	r0, sl
   15e4c:	bl	176e4 <argp_error@@Base+0x1330>
   15e50:	cmp	r0, #0
   15e54:	beq	15e74 <argp_failure@@Base+0xf3c>
   15e58:	mov	r2, r5
   15e5c:	mov	r1, r4
   15e60:	ldr	r0, [sl, #28]
   15e64:	bl	11194 <memcpy@plt>
   15e68:	ldr	r3, [sl, #28]
   15e6c:	add	r5, r3, r5
   15e70:	str	r5, [sl, #28]
   15e74:	cmp	r7, r4
   15e78:	bne	15f90 <argp_failure@@Base+0x1058>
   15e7c:	ldr	r3, [sl, #28]
   15e80:	ldr	r2, [sl, #24]
   15e84:	sub	r3, r3, r2
   15e88:	ldr	r2, [sl, #16]
   15e8c:	cmp	r3, r2
   15e90:	bhi	15f9c <argp_failure@@Base+0x1064>
   15e94:	mov	r3, #0
   15e98:	str	r3, [sl, #4]
   15e9c:	ldr	r2, [sl, #28]
   15ea0:	ldr	r3, [sl, #32]
   15ea4:	cmp	r2, r3
   15ea8:	bcs	15fa8 <argp_failure@@Base+0x1070>
   15eac:	ldr	r3, [sl, #28]
   15eb0:	add	r2, r3, #1
   15eb4:	str	r2, [sl, #28]
   15eb8:	mov	r2, #10
   15ebc:	strb	r2, [r3]
   15ec0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ec4:	str	r3, [fp, #-88]	; 0xffffffa8
   15ec8:	b	15c5c <argp_failure@@Base+0xd24>
   15ecc:	mov	r0, sl
   15ed0:	bl	17140 <argp_error@@Base+0xd8c>
   15ed4:	ldr	r5, [sl, #20]
   15ed8:	bic	r5, r5, r5, asr #31
   15edc:	ldr	r3, [pc, #332]	; 16030 <argp_failure@@Base+0x10f8>
   15ee0:	ldr	r6, [r3, #20]
   15ee4:	ldr	r3, [sl, #28]
   15ee8:	ldr	r2, [sl, #24]
   15eec:	sub	r3, r3, r2
   15ef0:	ldr	r2, [sl, #16]
   15ef4:	cmp	r3, r2
   15ef8:	bls	15dc0 <argp_failure@@Base+0xe88>
   15efc:	mov	r0, sl
   15f00:	bl	17140 <argp_error@@Base+0xd8c>
   15f04:	b	15dc0 <argp_failure@@Base+0xe88>
   15f08:	mov	r0, sl
   15f0c:	bl	17140 <argp_error@@Base+0xd8c>
   15f10:	b	15de4 <argp_failure@@Base+0xeac>
   15f14:	mov	r1, #1
   15f18:	mov	r0, sl
   15f1c:	bl	176e4 <argp_error@@Base+0x1330>
   15f20:	cmp	r0, #0
   15f24:	beq	15e20 <argp_failure@@Base+0xee8>
   15f28:	b	15e0c <argp_failure@@Base+0xed4>
   15f2c:	cmp	r1, r5
   15f30:	bhi	15f84 <argp_failure@@Base+0x104c>
   15f34:	ldr	r3, [sl, #28]
   15f38:	add	r3, r3, #3
   15f3c:	ldr	r2, [sl, #32]
   15f40:	cmp	r2, r3
   15f44:	bcs	15f5c <argp_failure@@Base+0x1024>
   15f48:	mov	r1, #3
   15f4c:	mov	r0, sl
   15f50:	bl	176e4 <argp_error@@Base+0x1330>
   15f54:	cmp	r0, #0
   15f58:	beq	15e20 <argp_failure@@Base+0xee8>
   15f5c:	ldr	r3, [sl, #28]
   15f60:	ldr	r2, [pc, #196]	; 1602c <argp_failure@@Base+0x10f4>
   15f64:	ldrh	r1, [r2]
   15f68:	ldrb	r2, [r2, #2]
   15f6c:	strh	r1, [r3]
   15f70:	strb	r2, [r3, #2]
   15f74:	ldr	r3, [sl, #28]
   15f78:	add	r3, r3, #3
   15f7c:	str	r3, [sl, #28]
   15f80:	b	15e20 <argp_failure@@Base+0xee8>
   15f84:	mov	r0, sl
   15f88:	bl	13874 <argp_parse@@Base+0x174c>
   15f8c:	b	15e20 <argp_failure@@Base+0xee8>
   15f90:	mov	r0, r4
   15f94:	bl	12d1c <argp_parse@@Base+0xbf4>
   15f98:	b	15e7c <argp_failure@@Base+0xf44>
   15f9c:	mov	r0, sl
   15fa0:	bl	17140 <argp_error@@Base+0xd8c>
   15fa4:	b	15e94 <argp_failure@@Base+0xf5c>
   15fa8:	mov	r1, #1
   15fac:	mov	r0, sl
   15fb0:	bl	176e4 <argp_error@@Base+0x1330>
   15fb4:	cmp	r0, #0
   15fb8:	beq	15ec0 <argp_failure@@Base+0xf88>
   15fbc:	b	15eac <argp_failure@@Base+0xf74>
   15fc0:	mov	r0, sl
   15fc4:	bl	17140 <argp_error@@Base+0xd8c>
   15fc8:	b	15c74 <argp_failure@@Base+0xd3c>
   15fcc:	mov	r0, sl
   15fd0:	bl	17140 <argp_error@@Base+0xd8c>
   15fd4:	b	15c94 <argp_failure@@Base+0xd5c>
   15fd8:	andeq	r8, r1, ip, lsr #4
   15fdc:	andeq	r8, r1, r4, asr r0
   15fe0:	andeq	r8, r1, ip, lsr r2
   15fe4:	andeq	r8, r1, ip, ror #4
   15fe8:	muleq	r1, r4, r2
   15fec:	andeq	r8, r1, ip, rrx
   15ff0:	andeq	r8, r1, r8, ror #5
   15ff4:			; <UNDEFINED> instruction: 0x000182b4
   15ff8:	andeq	r7, r1, r4, lsl #24
   15ffc:	andeq	r7, r1, r4, ror #23
   16000:	andeq	r4, r1, ip, lsl #11
   16004:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16008:	strdeq	r8, [r1], -r0
   1600c:	andeq	r8, r1, r0, lsl #6
   16010:	andeq	r8, r1, r8, lsl #6
   16014:	andeq	r8, r1, r8, lsl r3
   16018:	andeq	r8, r1, r0, asr r3
   1601c:			; <UNDEFINED> instruction: 0x00017bb4
   16020:	andeq	r8, r1, r8, asr r3
   16024:	andeq	r8, r1, r0, ror #6
   16028:	andeq	r7, r1, ip, ror r9
   1602c:	andeq	r8, r1, r8, ror #6
   16030:	andeq	r9, r2, ip, lsl #3
   16034:	andeq	r0, r0, #5
   16038:	andeq	r8, r1, ip, ror #6
   1603c:			; <UNDEFINED> instruction: 0x000292b0
   16040:	andeq	r8, r1, r0, ror #7
   16044:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16048:	cmp	r3, #0
   1604c:	beq	1613c <argp_failure@@Base+0x1204>
   16050:	ldr	r3, [pc, #-40]	; 16030 <argp_failure@@Base+0x10f8>
   16054:	ldr	r3, [r3, #4]
   16058:	cmp	r3, #0
   1605c:	beq	1613c <argp_failure@@Base+0x1204>
   16060:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16064:	cmp	r3, #0
   16068:	ldrne	r2, [r3]
   1606c:	moveq	r2, #0
   16070:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16074:	ldr	r1, [pc, #-72]	; 16034 <argp_failure@@Base+0x10fc>
   16078:	ldr	r0, [pc, #-72]	; 16038 <argp_failure@@Base+0x1100>
   1607c:	bl	13a58 <argp_parse@@Base+0x1930>
   16080:	subs	r4, r0, #0
   16084:	beq	1613c <argp_failure@@Base+0x1204>
   16088:	ldrb	r3, [r4]
   1608c:	cmp	r3, #0
   16090:	beq	16130 <argp_failure@@Base+0x11f8>
   16094:	ldr	r2, [sl, #28]
   16098:	ldr	r3, [sl, #32]
   1609c:	cmp	r2, r3
   160a0:	bcs	161d4 <argp_failure@@Base+0x129c>
   160a4:	ldr	r3, [sl, #28]
   160a8:	add	r2, r3, #1
   160ac:	str	r2, [sl, #28]
   160b0:	mov	r2, #10
   160b4:	strb	r2, [r3]
   160b8:	mov	r0, r4
   160bc:	bl	112cc <strlen@plt>
   160c0:	subs	r5, r0, #0
   160c4:	beq	1610c <argp_failure@@Base+0x11d4>
   160c8:	ldr	r3, [sl, #28]
   160cc:	add	r3, r3, r5
   160d0:	ldr	r2, [sl, #32]
   160d4:	cmp	r2, r3
   160d8:	bcs	160f0 <argp_failure@@Base+0x11b8>
   160dc:	mov	r1, r5
   160e0:	mov	r0, sl
   160e4:	bl	176e4 <argp_error@@Base+0x1330>
   160e8:	cmp	r0, #0
   160ec:	beq	1610c <argp_failure@@Base+0x11d4>
   160f0:	mov	r2, r5
   160f4:	mov	r1, r4
   160f8:	ldr	r0, [sl, #28]
   160fc:	bl	11194 <memcpy@plt>
   16100:	ldr	r3, [sl, #28]
   16104:	add	r5, r3, r5
   16108:	str	r5, [sl, #28]
   1610c:	ldr	r2, [sl, #28]
   16110:	ldr	r3, [sl, #32]
   16114:	cmp	r2, r3
   16118:	bcs	161ec <argp_failure@@Base+0x12b4>
   1611c:	ldr	r3, [sl, #28]
   16120:	add	r2, r3, #1
   16124:	str	r2, [sl, #28]
   16128:	mov	r2, #10
   1612c:	strb	r2, [r3]
   16130:	ldr	r3, [pc, #-256]	; 16038 <argp_failure@@Base+0x1100>
   16134:	cmp	r4, r3
   16138:	bne	16204 <argp_failure@@Base+0x12cc>
   1613c:	mov	r4, #1
   16140:	ldr	r3, [fp, #-104]	; 0xffffff98
   16144:	tst	r3, #32
   16148:	bne	16210 <argp_failure@@Base+0x12d8>
   1614c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16150:	tst	r3, #64	; 0x40
   16154:	beq	161a8 <argp_failure@@Base+0x1270>
   16158:	ldr	r3, [pc, #-292]	; 1603c <argp_failure@@Base+0x1104>
   1615c:	ldr	r3, [r3]
   16160:	cmp	r3, #0
   16164:	beq	161a8 <argp_failure@@Base+0x1270>
   16168:	cmp	r4, #0
   1616c:	beq	16194 <argp_failure@@Base+0x125c>
   16170:	ldr	r2, [sl, #28]
   16174:	ldr	r3, [sl, #32]
   16178:	cmp	r2, r3
   1617c:	bcs	16238 <argp_failure@@Base+0x1300>
   16180:	ldr	r3, [sl, #28]
   16184:	add	r2, r3, #1
   16188:	str	r2, [sl, #28]
   1618c:	mov	r2, #10
   16190:	strb	r2, [r3]
   16194:	ldr	r3, [pc, #-352]	; 1603c <argp_failure@@Base+0x1104>
   16198:	ldr	r2, [r3]
   1619c:	ldr	r1, [pc, #-356]	; 16040 <argp_failure@@Base+0x1108>
   161a0:	mov	r0, sl
   161a4:	bl	177d4 <argp_error@@Base+0x1420>
   161a8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   161ac:	bl	1120c <funlockfile@plt>
   161b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   161b4:	cmp	r3, #0
   161b8:	beq	161c4 <argp_failure@@Base+0x128c>
   161bc:	mov	r0, r3
   161c0:	bl	13730 <argp_parse@@Base+0x1608>
   161c4:	mov	r0, sl
   161c8:	bl	176a4 <argp_error@@Base+0x12f0>
   161cc:	sub	sp, fp, #32
   161d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161d4:	mov	r1, #1
   161d8:	mov	r0, sl
   161dc:	bl	176e4 <argp_error@@Base+0x1330>
   161e0:	cmp	r0, #0
   161e4:	beq	160b8 <argp_failure@@Base+0x1180>
   161e8:	b	160a4 <argp_failure@@Base+0x116c>
   161ec:	mov	r1, #1
   161f0:	mov	r0, sl
   161f4:	bl	176e4 <argp_error@@Base+0x1330>
   161f8:	cmp	r0, #0
   161fc:	beq	16130 <argp_failure@@Base+0x11f8>
   16200:	b	1611c <argp_failure@@Base+0x11e4>
   16204:	mov	r0, r4
   16208:	bl	12d1c <argp_parse@@Base+0xbf4>
   1620c:	b	1613c <argp_failure@@Base+0x1204>
   16210:	str	sl, [sp, #4]
   16214:	mov	r3, #0
   16218:	str	r3, [sp]
   1621c:	mov	r3, r4
   16220:	mov	r2, #1
   16224:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16228:	ldr	r0, [fp, #-112]	; 0xffffff90
   1622c:	bl	13ff4 <argp_parse@@Base+0x1ecc>
   16230:	orr	r4, r4, r0
   16234:	b	1614c <argp_failure@@Base+0x1214>
   16238:	mov	r1, #1
   1623c:	mov	r0, sl
   16240:	bl	176e4 <argp_error@@Base+0x1330>
   16244:	cmp	r0, #0
   16248:	beq	16194 <argp_failure@@Base+0x125c>
   1624c:	b	16180 <argp_failure@@Base+0x1248>
   16250:	ldrb	r3, [r5]
   16254:	mov	r4, r5
   16258:	mov	r5, #0
   1625c:	b	15330 <argp_failure@@Base+0x3f8>
   16260:	mov	r4, r2
   16264:	b	15344 <argp_failure@@Base+0x40c>
   16268:	cmp	r0, #110	; 0x6e
   1626c:	beq	1539c <argp_failure@@Base+0x464>
   16270:	mov	r3, #1
   16274:	str	r3, [fp, #-96]	; 0xffffffa0
   16278:	str	r3, [fp, #-116]	; 0xffffff8c
   1627c:	add	r6, sl, #24
   16280:	b	15494 <argp_failure@@Base+0x55c>
   16284:	ldrb	r3, [r9]
   16288:	cmp	r7, r3
   1628c:	beq	15968 <argp_failure@@Base+0xa30>
   16290:	add	r4, r4, #24
   16294:	subs	r5, r5, #1
   16298:	beq	15a58 <argp_failure@@Base+0xb20>
   1629c:	ldr	r6, [r4, #12]
   162a0:	tst	r6, #8
   162a4:	bne	16290 <argp_failure@@Base+0x1358>
   162a8:	ldr	r7, [r4, #4]
   162ac:	sub	r3, r7, #1
   162b0:	cmp	r3, #254	; 0xfe
   162b4:	bhi	16290 <argp_failure@@Base+0x1358>
   162b8:	bl	112a8 <__ctype_b_loc@plt>
   162bc:	ldr	r2, [r0]
   162c0:	lsl	r3, r7, #1
   162c4:	ldrh	r3, [r2, r3]
   162c8:	tst	r3, #16384	; 0x4000
   162cc:	bne	16284 <argp_failure@@Base+0x134c>
   162d0:	b	16290 <argp_failure@@Base+0x1358>

000162d4 <argp_help@@Base>:
   162d4:	push	{lr}		; (str lr, [sp, #-4]!)
   162d8:	sub	sp, sp, #12
   162dc:	str	r3, [sp]
   162e0:	mov	r3, r2
   162e4:	mov	r2, r1
   162e8:	mov	r1, #0
   162ec:	bl	15140 <argp_failure@@Base+0x208>
   162f0:	add	sp, sp, #12
   162f4:	pop	{pc}		; (ldr pc, [sp], #4)

000162f8 <argp_state_help@@Base>:
   162f8:	push	{r4, r5, lr}
   162fc:	sub	sp, sp, #12
   16300:	mov	r5, r2
   16304:	subs	r4, r0, #0
   16308:	beq	1636c <argp_state_help@@Base+0x74>
   1630c:	ldr	r3, [r4, #16]
   16310:	tst	r3, #2
   16314:	bne	16364 <argp_state_help@@Base+0x6c>
   16318:	cmp	r1, #0
   1631c:	beq	16364 <argp_state_help@@Base+0x6c>
   16320:	ldr	r3, [r4, #16]
   16324:	tst	r3, #64	; 0x40
   16328:	orrne	r5, r5, #128	; 0x80
   1632c:	ldr	r0, [r4]
   16330:	ldr	r3, [r4, #40]	; 0x28
   16334:	str	r3, [sp]
   16338:	mov	r3, r5
   1633c:	mov	r2, r1
   16340:	mov	r1, r4
   16344:	bl	15140 <argp_failure@@Base+0x208>
   16348:	ldr	r3, [r4, #16]
   1634c:	tst	r3, #32
   16350:	bne	16364 <argp_state_help@@Base+0x6c>
   16354:	tst	r5, #256	; 0x100
   16358:	bne	16398 <argp_state_help@@Base+0xa0>
   1635c:	tst	r5, #512	; 0x200
   16360:	bne	163a4 <argp_state_help@@Base+0xac>
   16364:	add	sp, sp, #12
   16368:	pop	{r4, r5, pc}
   1636c:	cmp	r1, #0
   16370:	beq	16364 <argp_state_help@@Base+0x6c>
   16374:	ldr	r3, [pc, #48]	; 163ac <argp_state_help@@Base+0xb4>
   16378:	ldr	r3, [r3]
   1637c:	str	r3, [sp]
   16380:	mov	r3, r2
   16384:	mov	r2, r1
   16388:	mov	r1, #0
   1638c:	mov	r0, r1
   16390:	bl	15140 <argp_failure@@Base+0x208>
   16394:	b	16354 <argp_state_help@@Base+0x5c>
   16398:	ldr	r3, [pc, #16]	; 163b0 <argp_state_help@@Base+0xb8>
   1639c:	ldr	r0, [r3]
   163a0:	bl	112c0 <exit@plt>
   163a4:	mov	r0, #0
   163a8:	bl	112c0 <exit@plt>
   163ac:	andeq	r9, r2, r8, asr #3
   163b0:	andeq	r9, r2, r0, asr #3

000163b4 <argp_error@@Base>:
   163b4:	push	{r1, r2, r3}
   163b8:	push	{r4, r5, lr}
   163bc:	sub	sp, sp, #8
   163c0:	subs	r5, r0, #0
   163c4:	beq	16494 <argp_error@@Base+0xe0>
   163c8:	ldr	r3, [r5, #16]
   163cc:	tst	r3, #2
   163d0:	bne	16484 <argp_error@@Base+0xd0>
   163d4:	ldr	r4, [r5, #44]	; 0x2c
   163d8:	cmp	r4, #0
   163dc:	beq	16484 <argp_error@@Base+0xd0>
   163e0:	mov	r0, r4
   163e4:	bl	113c8 <flockfile@plt>
   163e8:	add	r3, sp, #24
   163ec:	str	r3, [sp, #4]
   163f0:	ldr	r0, [r5, #40]	; 0x28
   163f4:	mov	r1, r4
   163f8:	bl	11104 <fputs_unlocked@plt>
   163fc:	ldr	r3, [r4, #20]
   16400:	ldr	r2, [r4, #24]
   16404:	cmp	r3, r2
   16408:	addcc	r2, r3, #1
   1640c:	strcc	r2, [r4, #20]
   16410:	movcc	r2, #58	; 0x3a
   16414:	strbcc	r2, [r3]
   16418:	bcs	164c0 <argp_error@@Base+0x10c>
   1641c:	ldr	r3, [r4, #20]
   16420:	ldr	r2, [r4, #24]
   16424:	cmp	r3, r2
   16428:	addcc	r2, r3, #1
   1642c:	strcc	r2, [r4, #20]
   16430:	movcc	r2, #32
   16434:	strbcc	r2, [r3]
   16438:	bcs	164d0 <argp_error@@Base+0x11c>
   1643c:	ldr	r2, [sp, #4]
   16440:	ldr	r1, [sp, #20]
   16444:	mov	r0, r4
   16448:	bl	1138c <vfprintf@plt>
   1644c:	ldr	r3, [r4, #20]
   16450:	ldr	r2, [r4, #24]
   16454:	cmp	r3, r2
   16458:	addcc	r2, r3, #1
   1645c:	strcc	r2, [r4, #20]
   16460:	movcc	r2, #10
   16464:	strbcc	r2, [r3]
   16468:	bcs	164e0 <argp_error@@Base+0x12c>
   1646c:	mov	r2, #260	; 0x104
   16470:	mov	r1, r4
   16474:	mov	r0, r5
   16478:	bl	162f8 <argp_state_help@@Base>
   1647c:	mov	r0, r4
   16480:	bl	1120c <funlockfile@plt>
   16484:	add	sp, sp, #8
   16488:	pop	{r4, r5, lr}
   1648c:	add	sp, sp, #12
   16490:	bx	lr
   16494:	ldr	r3, [pc, #84]	; 164f0 <argp_error@@Base+0x13c>
   16498:	ldr	r4, [r3]
   1649c:	cmp	r4, #0
   164a0:	beq	16484 <argp_error@@Base+0xd0>
   164a4:	mov	r0, r4
   164a8:	bl	113c8 <flockfile@plt>
   164ac:	add	r3, sp, #24
   164b0:	str	r3, [sp, #4]
   164b4:	ldr	r3, [pc, #56]	; 164f4 <argp_error@@Base+0x140>
   164b8:	ldr	r0, [r3]
   164bc:	b	163f4 <argp_error@@Base+0x40>
   164c0:	mov	r1, #58	; 0x3a
   164c4:	mov	r0, r4
   164c8:	bl	11350 <__overflow@plt>
   164cc:	b	1641c <argp_error@@Base+0x68>
   164d0:	mov	r1, #32
   164d4:	mov	r0, r4
   164d8:	bl	11350 <__overflow@plt>
   164dc:	b	1643c <argp_error@@Base+0x88>
   164e0:	mov	r1, #10
   164e4:	mov	r0, r4
   164e8:	bl	11350 <__overflow@plt>
   164ec:	b	1646c <argp_error@@Base+0xb8>
   164f0:	ldrdeq	r9, [r2], -r8
   164f4:	andeq	r9, r2, r8, asr #3
   164f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   164fc:	ldr	r4, [r1, #28]
   16500:	ldr	r5, [r1, #32]
   16504:	ldr	r6, [r1]
   16508:	add	r7, r0, r5, lsl #2
   1650c:	b	16544 <argp_error@@Base+0x190>
   16510:	cmp	sl, #0
   16514:	ble	16540 <argp_error@@Base+0x18c>
   16518:	add	r2, r0, r4, lsl #2
   1651c:	sub	r3, r6, sl
   16520:	add	r3, r0, r3, lsl #2
   16524:	add	r8, r0, r6, lsl #2
   16528:	ldr	ip, [r2]
   1652c:	ldr	lr, [r3]
   16530:	str	lr, [r2], #4
   16534:	str	ip, [r3], #4
   16538:	cmp	r3, r8
   1653c:	bne	16528 <argp_error@@Base+0x174>
   16540:	sub	r6, r6, sl
   16544:	cmp	r6, r5
   16548:	movle	r3, #0
   1654c:	movgt	r3, #1
   16550:	cmp	r4, r5
   16554:	movge	r3, #0
   16558:	cmp	r3, #0
   1655c:	beq	165a8 <argp_error@@Base+0x1f4>
   16560:	sub	r9, r6, r5
   16564:	sub	sl, r5, r4
   16568:	cmp	r9, sl
   1656c:	bgt	16510 <argp_error@@Base+0x15c>
   16570:	cmp	r9, #0
   16574:	addgt	r3, r0, r4, lsl #2
   16578:	addgt	r8, r9, r4
   1657c:	addgt	r8, r0, r8, lsl #2
   16580:	movgt	r2, r7
   16584:	ble	165a0 <argp_error@@Base+0x1ec>
   16588:	ldr	ip, [r3]
   1658c:	ldr	lr, [r2]
   16590:	str	lr, [r3], #4
   16594:	str	ip, [r2], #4
   16598:	cmp	r3, r8
   1659c:	bne	16588 <argp_error@@Base+0x1d4>
   165a0:	add	r4, r4, r9
   165a4:	b	16544 <argp_error@@Base+0x190>
   165a8:	ldr	r0, [r1]
   165ac:	ldr	r3, [r1, #32]
   165b0:	sub	r2, r0, r3
   165b4:	ldr	r3, [r1, #28]
   165b8:	add	r3, r3, r2
   165bc:	str	r3, [r1, #28]
   165c0:	str	r0, [r1, #32]
   165c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   165c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165cc:	sub	sp, sp, #44	; 0x2c
   165d0:	str	r0, [sp, #20]
   165d4:	str	r1, [sp, #12]
   165d8:	str	r2, [sp, #24]
   165dc:	str	r3, [sp, #8]
   165e0:	ldr	fp, [sp, #88]	; 0x58
   165e4:	ldr	sl, [fp, #20]
   165e8:	ldrb	r3, [sl]
   165ec:	cmp	r3, #0
   165f0:	cmpne	r3, #61	; 0x3d
   165f4:	beq	16630 <argp_error@@Base+0x27c>
   165f8:	mov	r8, sl
   165fc:	ldrb	r3, [r8, #1]!
   16600:	cmp	r3, #0
   16604:	cmpne	r3, #61	; 0x3d
   16608:	bne	165fc <argp_error@@Base+0x248>
   1660c:	sub	r7, r8, sl
   16610:	ldr	r5, [sp, #8]
   16614:	ldr	r3, [r5]
   16618:	str	r3, [sp, #16]
   1661c:	cmp	r3, #0
   16620:	beq	16924 <argp_error@@Base+0x570>
   16624:	mov	r4, r3
   16628:	mov	r6, #0
   1662c:	b	16648 <argp_error@@Base+0x294>
   16630:	mov	r8, sl
   16634:	b	1660c <argp_error@@Base+0x258>
   16638:	add	r6, r6, #1
   1663c:	ldr	r4, [r5, #16]!
   16640:	cmp	r4, #0
   16644:	beq	16680 <argp_error@@Base+0x2cc>
   16648:	mov	r9, r5
   1664c:	mov	r2, r7
   16650:	mov	r1, sl
   16654:	mov	r0, r4
   16658:	bl	113f8 <strncmp@plt>
   1665c:	cmp	r0, #0
   16660:	bne	16638 <argp_error@@Base+0x284>
   16664:	mov	r0, r4
   16668:	bl	112cc <strlen@plt>
   1666c:	cmp	r7, r0
   16670:	bne	16638 <argp_error@@Base+0x284>
   16674:	cmp	r5, #0
   16678:	strne	r6, [sp, #28]
   1667c:	bne	168d4 <argp_error@@Base+0x520>
   16680:	ldr	r4, [sp, #8]
   16684:	mvn	r3, #0
   16688:	str	r3, [sp, #28]
   1668c:	mov	sl, #0
   16690:	str	sl, [sp, #36]	; 0x24
   16694:	mov	r5, sl
   16698:	mov	r9, sl
   1669c:	str	r8, [sp, #32]
   166a0:	mov	r8, sl
   166a4:	ldr	r0, [sp, #16]
   166a8:	b	166f8 <argp_error@@Base+0x344>
   166ac:	ldr	r2, [r9, #8]
   166b0:	ldr	r3, [r4, #8]
   166b4:	cmp	r2, r3
   166b8:	bne	16730 <argp_error@@Base+0x37c>
   166bc:	ldr	r2, [r9, #12]
   166c0:	ldr	r3, [r4, #12]
   166c4:	cmp	r2, r3
   166c8:	bne	16730 <argp_error@@Base+0x37c>
   166cc:	b	166e8 <argp_error@@Base+0x334>
   166d0:	cmp	r8, #0
   166d4:	moveq	sl, #1
   166d8:	beq	166e8 <argp_error@@Base+0x334>
   166dc:	mov	sl, #1
   166e0:	mov	r3, #1
   166e4:	strb	r3, [r8, r5]
   166e8:	add	r5, r5, #1
   166ec:	ldr	r0, [r4, #16]!
   166f0:	cmp	r0, #0
   166f4:	beq	16798 <argp_error@@Base+0x3e4>
   166f8:	mov	r2, r7
   166fc:	ldr	r1, [fp, #20]
   16700:	bl	113f8 <strncmp@plt>
   16704:	cmp	r0, #0
   16708:	bne	166e8 <argp_error@@Base+0x334>
   1670c:	cmp	r9, #0
   16710:	beq	16784 <argp_error@@Base+0x3d0>
   16714:	ldr	r3, [sp, #84]	; 0x54
   16718:	cmp	r3, #0
   1671c:	bne	16730 <argp_error@@Base+0x37c>
   16720:	ldr	r2, [r9, #4]
   16724:	ldr	r3, [r4, #4]
   16728:	cmp	r2, r3
   1672c:	beq	166ac <argp_error@@Base+0x2f8>
   16730:	cmp	sl, #0
   16734:	bne	166e8 <argp_error@@Base+0x334>
   16738:	ldr	r3, [sp, #92]	; 0x5c
   1673c:	cmp	r3, #0
   16740:	beq	166d0 <argp_error@@Base+0x31c>
   16744:	cmp	r8, #0
   16748:	bne	166e0 <argp_error@@Base+0x32c>
   1674c:	mov	r0, r6
   16750:	bl	13304 <argp_parse@@Base+0x11dc>
   16754:	subs	r8, r0, #0
   16758:	beq	16790 <argp_error@@Base+0x3dc>
   1675c:	mov	r2, r6
   16760:	mov	r1, #0
   16764:	mov	r0, r8
   16768:	bl	11314 <memset@plt>
   1676c:	ldr	r3, [sp, #28]
   16770:	mov	r2, #1
   16774:	strb	r2, [r8, r3]
   16778:	mov	r3, #1
   1677c:	str	r3, [sp, #36]	; 0x24
   16780:	b	166e0 <argp_error@@Base+0x32c>
   16784:	str	r5, [sp, #28]
   16788:	mov	r9, r4
   1678c:	b	166e8 <argp_error@@Base+0x334>
   16790:	mov	sl, #1
   16794:	b	166e8 <argp_error@@Base+0x334>
   16798:	mov	r3, r8
   1679c:	str	r8, [sp, #16]
   167a0:	ldr	r8, [sp, #32]
   167a4:	cmp	sl, #0
   167a8:	cmpeq	r3, #0
   167ac:	beq	168cc <argp_error@@Base+0x518>
   167b0:	ldr	r3, [sp, #92]	; 0x5c
   167b4:	cmp	r3, #0
   167b8:	beq	167e8 <argp_error@@Base+0x434>
   167bc:	cmp	sl, #0
   167c0:	beq	16824 <argp_error@@Base+0x470>
   167c4:	ldr	r3, [sp, #12]
   167c8:	ldr	r2, [r3]
   167cc:	ldr	r3, [pc, #708]	; 16a98 <argp_error@@Base+0x6e4>
   167d0:	ldr	r0, [r3]
   167d4:	ldr	r3, [fp, #20]
   167d8:	str	r3, [sp]
   167dc:	ldr	r3, [sp, #96]	; 0x60
   167e0:	ldr	r1, [pc, #692]	; 16a9c <argp_error@@Base+0x6e8>
   167e4:	bl	112e4 <fprintf@plt>
   167e8:	ldr	r3, [sp, #36]	; 0x24
   167ec:	cmp	r3, #0
   167f0:	bne	168c0 <argp_error@@Base+0x50c>
   167f4:	ldr	r4, [fp, #20]
   167f8:	mov	r0, r4
   167fc:	bl	112cc <strlen@plt>
   16800:	add	r0, r4, r0
   16804:	str	r0, [fp, #20]
   16808:	ldr	r3, [fp]
   1680c:	add	r3, r3, #1
   16810:	str	r3, [fp]
   16814:	mov	r3, #0
   16818:	str	r3, [fp, #8]
   1681c:	mov	r0, #63	; 0x3f
   16820:	b	16a18 <argp_error@@Base+0x664>
   16824:	ldr	r4, [pc, #620]	; 16a98 <argp_error@@Base+0x6e4>
   16828:	ldr	r0, [r4]
   1682c:	bl	113c8 <flockfile@plt>
   16830:	ldr	r3, [sp, #12]
   16834:	ldr	r2, [r3]
   16838:	ldr	r0, [r4]
   1683c:	ldr	r3, [fp, #20]
   16840:	str	r3, [sp]
   16844:	ldr	r3, [sp, #96]	; 0x60
   16848:	ldr	r1, [pc, #592]	; 16aa0 <argp_error@@Base+0x6ec>
   1684c:	bl	112e4 <fprintf@plt>
   16850:	cmp	r6, #0
   16854:	ble	168a4 <argp_error@@Base+0x4f0>
   16858:	ldr	r3, [sp, #16]
   1685c:	mov	r4, r3
   16860:	add	r6, r3, r6
   16864:	ldr	r7, [pc, #568]	; 16aa4 <argp_error@@Base+0x6f0>
   16868:	ldr	r5, [pc, #552]	; 16a98 <argp_error@@Base+0x6e4>
   1686c:	ldr	r8, [sp, #8]
   16870:	b	16880 <argp_error@@Base+0x4cc>
   16874:	add	sl, sl, #1
   16878:	cmp	r4, r6
   1687c:	beq	168a4 <argp_error@@Base+0x4f0>
   16880:	ldrb	r3, [r4], #1
   16884:	cmp	r3, #0
   16888:	beq	16874 <argp_error@@Base+0x4c0>
   1688c:	ldr	r3, [r8, sl, lsl #4]
   16890:	ldr	r2, [sp, #96]	; 0x60
   16894:	mov	r1, r7
   16898:	ldr	r0, [r5]
   1689c:	bl	112e4 <fprintf@plt>
   168a0:	b	16874 <argp_error@@Base+0x4c0>
   168a4:	ldr	r4, [pc, #492]	; 16a98 <argp_error@@Base+0x6e4>
   168a8:	ldr	r1, [r4]
   168ac:	mov	r0, #10
   168b0:	bl	113a4 <fputc@plt>
   168b4:	ldr	r0, [r4]
   168b8:	bl	1120c <funlockfile@plt>
   168bc:	b	167e8 <argp_error@@Base+0x434>
   168c0:	ldr	r0, [sp, #16]
   168c4:	bl	12d1c <argp_parse@@Base+0xbf4>
   168c8:	b	167f4 <argp_error@@Base+0x440>
   168cc:	cmp	r9, #0
   168d0:	beq	16924 <argp_error@@Base+0x570>
   168d4:	ldr	r2, [fp]
   168d8:	add	r3, r2, #1
   168dc:	str	r3, [fp]
   168e0:	mov	r1, #0
   168e4:	str	r1, [fp, #20]
   168e8:	ldrb	r1, [r8]
   168ec:	cmp	r1, #0
   168f0:	beq	169e4 <argp_error@@Base+0x630>
   168f4:	ldr	r3, [r9, #4]
   168f8:	cmp	r3, #0
   168fc:	addne	r8, r8, #1
   16900:	strne	r8, [fp, #12]
   16904:	bne	169f0 <argp_error@@Base+0x63c>
   16908:	ldr	r3, [sp, #92]	; 0x5c
   1690c:	cmp	r3, #0
   16910:	bne	169bc <argp_error@@Base+0x608>
   16914:	ldr	r3, [r9, #12]
   16918:	str	r3, [fp, #8]
   1691c:	mov	r0, #63	; 0x3f
   16920:	b	16a18 <argp_error@@Base+0x664>
   16924:	ldr	r3, [sp, #84]	; 0x54
   16928:	cmp	r3, #0
   1692c:	bne	1695c <argp_error@@Base+0x5a8>
   16930:	ldr	r3, [sp, #92]	; 0x5c
   16934:	cmp	r3, #0
   16938:	bne	16994 <argp_error@@Base+0x5e0>
   1693c:	mov	r2, #0
   16940:	str	r2, [fp, #20]
   16944:	ldr	r3, [fp]
   16948:	add	r3, r3, #1
   1694c:	str	r3, [fp]
   16950:	str	r2, [fp, #8]
   16954:	mov	r0, #63	; 0x3f
   16958:	b	16a18 <argp_error@@Base+0x664>
   1695c:	ldr	r3, [fp]
   16960:	ldr	r2, [sp, #12]
   16964:	ldr	r3, [r2, r3, lsl #2]
   16968:	ldrb	r3, [r3, #1]
   1696c:	cmp	r3, #45	; 0x2d
   16970:	beq	16930 <argp_error@@Base+0x57c>
   16974:	ldr	r3, [fp, #20]
   16978:	ldrb	r1, [r3]
   1697c:	ldr	r0, [sp, #24]
   16980:	bl	112d8 <strchr@plt>
   16984:	cmp	r0, #0
   16988:	beq	16930 <argp_error@@Base+0x57c>
   1698c:	mvn	r0, #0
   16990:	b	16a18 <argp_error@@Base+0x664>
   16994:	ldr	r3, [sp, #12]
   16998:	ldr	r2, [r3]
   1699c:	ldr	r3, [pc, #244]	; 16a98 <argp_error@@Base+0x6e4>
   169a0:	ldr	r0, [r3]
   169a4:	ldr	r3, [fp, #20]
   169a8:	str	r3, [sp]
   169ac:	ldr	r3, [sp, #96]	; 0x60
   169b0:	ldr	r1, [pc, #240]	; 16aa8 <argp_error@@Base+0x6f4>
   169b4:	bl	112e4 <fprintf@plt>
   169b8:	b	1693c <argp_error@@Base+0x588>
   169bc:	ldr	r3, [sp, #12]
   169c0:	ldr	r2, [r3]
   169c4:	ldr	r3, [pc, #204]	; 16a98 <argp_error@@Base+0x6e4>
   169c8:	ldr	r0, [r3]
   169cc:	ldr	r3, [r9]
   169d0:	str	r3, [sp]
   169d4:	ldr	r3, [sp, #96]	; 0x60
   169d8:	ldr	r1, [pc, #204]	; 16aac <argp_error@@Base+0x6f8>
   169dc:	bl	112e4 <fprintf@plt>
   169e0:	b	16914 <argp_error@@Base+0x560>
   169e4:	ldr	r1, [r9, #4]
   169e8:	cmp	r1, #1
   169ec:	beq	16a20 <argp_error@@Base+0x66c>
   169f0:	ldr	r3, [sp, #80]	; 0x50
   169f4:	cmp	r3, #0
   169f8:	ldrne	r2, [sp, #28]
   169fc:	strne	r2, [r3]
   16a00:	ldr	r3, [r9, #8]
   16a04:	cmp	r3, #0
   16a08:	ldrne	r2, [r9, #12]
   16a0c:	strne	r2, [r3]
   16a10:	movne	r0, #0
   16a14:	ldreq	r0, [r9, #12]
   16a18:	add	sp, sp, #44	; 0x2c
   16a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a20:	ldr	r1, [sp, #20]
   16a24:	cmp	r3, r1
   16a28:	bge	16a44 <argp_error@@Base+0x690>
   16a2c:	add	r2, r2, #2
   16a30:	str	r2, [fp]
   16a34:	ldr	r2, [sp, #12]
   16a38:	ldr	r3, [r2, r3, lsl #2]
   16a3c:	str	r3, [fp, #12]
   16a40:	b	169f0 <argp_error@@Base+0x63c>
   16a44:	ldr	r3, [sp, #92]	; 0x5c
   16a48:	cmp	r3, #0
   16a4c:	bne	16a70 <argp_error@@Base+0x6bc>
   16a50:	ldr	r3, [r9, #12]
   16a54:	str	r3, [fp, #8]
   16a58:	ldr	r3, [sp, #24]
   16a5c:	ldrb	r0, [r3]
   16a60:	cmp	r0, #58	; 0x3a
   16a64:	moveq	r0, #58	; 0x3a
   16a68:	movne	r0, #63	; 0x3f
   16a6c:	b	16a18 <argp_error@@Base+0x664>
   16a70:	ldr	r3, [sp, #12]
   16a74:	ldr	r2, [r3]
   16a78:	ldr	r3, [pc, #24]	; 16a98 <argp_error@@Base+0x6e4>
   16a7c:	ldr	r0, [r3]
   16a80:	ldr	r3, [r9]
   16a84:	str	r3, [sp]
   16a88:	ldr	r3, [sp, #96]	; 0x60
   16a8c:	ldr	r1, [pc, #28]	; 16ab0 <argp_error@@Base+0x6fc>
   16a90:	bl	112e4 <fprintf@plt>
   16a94:	b	16a50 <argp_error@@Base+0x69c>
   16a98:	ldrdeq	r9, [r2], -r8
   16a9c:	strdeq	r8, [r1], -r4
   16aa0:	andeq	r8, r1, r4, lsl r4
   16aa4:	andeq	r8, r1, r4, asr #8
   16aa8:	andeq	r8, r1, ip, asr #8
   16aac:	andeq	r8, r1, ip, ror #8
   16ab0:	muleq	r1, ip, r4
   16ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ab8:	sub	sp, sp, #36	; 0x24
   16abc:	str	r3, [sp, #24]
   16ac0:	ldr	r4, [sp, #80]	; 0x50
   16ac4:	ldr	r8, [r4, #4]
   16ac8:	subs	r5, r0, #0
   16acc:	ble	16fd4 <argp_error@@Base+0xc20>
   16ad0:	mov	r9, r1
   16ad4:	mov	r6, r2
   16ad8:	mov	r3, #0
   16adc:	str	r3, [r4, #12]
   16ae0:	ldr	r3, [r4]
   16ae4:	cmp	r3, #0
   16ae8:	beq	16b0c <argp_error@@Base+0x758>
   16aec:	ldr	r3, [r4, #16]
   16af0:	cmp	r3, #0
   16af4:	beq	16b14 <argp_error@@Base+0x760>
   16af8:	ldrb	r3, [r2]
   16afc:	sub	r3, r3, #43	; 0x2b
   16b00:	tst	r3, #253	; 0xfd
   16b04:	addeq	r6, r2, #1
   16b08:	b	16b70 <argp_error@@Base+0x7bc>
   16b0c:	mov	r3, #1
   16b10:	str	r3, [r4]
   16b14:	ldr	r3, [r4]
   16b18:	str	r3, [r4, #32]
   16b1c:	str	r3, [r4, #28]
   16b20:	mov	r3, #0
   16b24:	str	r3, [r4, #20]
   16b28:	ldrb	r3, [r6]
   16b2c:	cmp	r3, #45	; 0x2d
   16b30:	moveq	r3, #2
   16b34:	streq	r3, [r4, #24]
   16b38:	addeq	r6, r6, #1
   16b3c:	beq	16b68 <argp_error@@Base+0x7b4>
   16b40:	cmp	r3, #43	; 0x2b
   16b44:	moveq	r3, #0
   16b48:	streq	r3, [r4, #24]
   16b4c:	addeq	r6, r6, #1
   16b50:	beq	16b68 <argp_error@@Base+0x7b4>
   16b54:	ldr	r3, [sp, #84]	; 0x54
   16b58:	cmp	r3, #0
   16b5c:	beq	16c0c <argp_error@@Base+0x858>
   16b60:	mov	r3, #0
   16b64:	str	r3, [r4, #24]
   16b68:	mov	r3, #1
   16b6c:	str	r3, [r4, #16]
   16b70:	ldrb	r3, [r6]
   16b74:	cmp	r3, #58	; 0x3a
   16b78:	moveq	r8, #0
   16b7c:	ldr	r3, [r4, #20]
   16b80:	cmp	r3, #0
   16b84:	beq	16b94 <argp_error@@Base+0x7e0>
   16b88:	ldrb	r3, [r3]
   16b8c:	cmp	r3, #0
   16b90:	bne	16d20 <argp_error@@Base+0x96c>
   16b94:	ldr	r3, [r4]
   16b98:	ldr	r2, [r4, #32]
   16b9c:	cmp	r2, r3
   16ba0:	strgt	r3, [r4, #32]
   16ba4:	ldr	r2, [r4, #28]
   16ba8:	cmp	r3, r2
   16bac:	strlt	r3, [r4, #28]
   16bb0:	ldr	r2, [r4, #24]
   16bb4:	cmp	r2, #1
   16bb8:	beq	16c28 <argp_error@@Base+0x874>
   16bbc:	ldr	r7, [r4]
   16bc0:	cmp	r5, r7
   16bc4:	beq	16cac <argp_error@@Base+0x8f8>
   16bc8:	ldr	sl, [r9, r7, lsl #2]
   16bcc:	ldr	r1, [pc, #1088]	; 17014 <argp_error@@Base+0xc60>
   16bd0:	mov	r0, sl
   16bd4:	bl	1111c <strcmp@plt>
   16bd8:	cmp	r0, #0
   16bdc:	bne	16fe4 <argp_error@@Base+0xc30>
   16be0:	add	r7, r7, #1
   16be4:	str	r7, [r4]
   16be8:	ldr	r2, [r4, #28]
   16bec:	ldr	r3, [r4, #32]
   16bf0:	cmp	r7, r3
   16bf4:	cmpne	r2, r3
   16bf8:	beq	16c9c <argp_error@@Base+0x8e8>
   16bfc:	mov	r1, r4
   16c00:	mov	r0, r9
   16c04:	bl	164f8 <argp_error@@Base+0x144>
   16c08:	b	16ca4 <argp_error@@Base+0x8f0>
   16c0c:	ldr	r0, [pc, #1028]	; 17018 <argp_error@@Base+0xc64>
   16c10:	bl	11248 <getenv@plt>
   16c14:	cmp	r0, #0
   16c18:	bne	16b60 <argp_error@@Base+0x7ac>
   16c1c:	mov	r3, #1
   16c20:	str	r3, [r4, #24]
   16c24:	b	16b68 <argp_error@@Base+0x7b4>
   16c28:	ldr	r2, [r4, #32]
   16c2c:	ldr	r1, [r4, #28]
   16c30:	cmp	r1, r2
   16c34:	cmpne	r3, r2
   16c38:	beq	16c4c <argp_error@@Base+0x898>
   16c3c:	mov	r1, r4
   16c40:	mov	r0, r9
   16c44:	bl	164f8 <argp_error@@Base+0x144>
   16c48:	b	16c54 <argp_error@@Base+0x8a0>
   16c4c:	cmp	r3, r2
   16c50:	strne	r3, [r4, #28]
   16c54:	ldr	r3, [r4]
   16c58:	cmp	r5, r3
   16c5c:	ble	16c94 <argp_error@@Base+0x8e0>
   16c60:	add	r1, r9, r3, lsl #2
   16c64:	b	16c78 <argp_error@@Base+0x8c4>
   16c68:	add	r3, r3, #1
   16c6c:	str	r3, [r4]
   16c70:	cmp	r5, r3
   16c74:	beq	16c94 <argp_error@@Base+0x8e0>
   16c78:	ldr	r2, [r1], #4
   16c7c:	ldrb	r0, [r2]
   16c80:	cmp	r0, #45	; 0x2d
   16c84:	bne	16c68 <argp_error@@Base+0x8b4>
   16c88:	ldrb	r2, [r2, #1]
   16c8c:	cmp	r2, #0
   16c90:	beq	16c68 <argp_error@@Base+0x8b4>
   16c94:	str	r3, [r4, #32]
   16c98:	b	16bbc <argp_error@@Base+0x808>
   16c9c:	cmp	r2, r3
   16ca0:	streq	r7, [r4, #28]
   16ca4:	str	r5, [r4, #32]
   16ca8:	str	r5, [r4]
   16cac:	ldr	r3, [r4, #28]
   16cb0:	ldr	r2, [r4, #32]
   16cb4:	cmp	r3, r2
   16cb8:	mvneq	r0, #0
   16cbc:	strne	r3, [r4]
   16cc0:	mvnne	r0, #0
   16cc4:	b	16e24 <argp_error@@Base+0xa70>
   16cc8:	ldrb	r1, [sl, #1]
   16ccc:	cmp	r1, #0
   16cd0:	beq	16ff0 <argp_error@@Base+0xc3c>
   16cd4:	ldr	r3, [sp, #24]
   16cd8:	cmp	r3, #0
   16cdc:	beq	16d10 <argp_error@@Base+0x95c>
   16ce0:	cmp	r1, #45	; 0x2d
   16ce4:	beq	16d88 <argp_error@@Base+0x9d4>
   16ce8:	ldr	r3, [sp, #76]	; 0x4c
   16cec:	cmp	r3, #0
   16cf0:	beq	16d10 <argp_error@@Base+0x95c>
   16cf4:	ldrb	r3, [sl, #2]
   16cf8:	cmp	r3, #0
   16cfc:	bne	16dc8 <argp_error@@Base+0xa14>
   16d00:	mov	r0, r6
   16d04:	bl	112d8 <strchr@plt>
   16d08:	cmp	r0, #0
   16d0c:	beq	16dc8 <argp_error@@Base+0xa14>
   16d10:	ldr	r3, [r4]
   16d14:	ldr	r3, [r9, r3, lsl #2]
   16d18:	add	r3, r3, #1
   16d1c:	str	r3, [r4, #20]
   16d20:	ldr	sl, [r4, #20]
   16d24:	add	fp, sl, #1
   16d28:	str	fp, [r4, #20]
   16d2c:	ldrb	r7, [sl]
   16d30:	str	r7, [sp, #28]
   16d34:	mov	r1, r7
   16d38:	mov	r0, r6
   16d3c:	bl	112d8 <strchr@plt>
   16d40:	ldrb	r3, [sl, #1]
   16d44:	cmp	r3, #0
   16d48:	ldreq	r3, [r4]
   16d4c:	addeq	r3, r3, #1
   16d50:	streq	r3, [r4]
   16d54:	sub	r3, r7, #58	; 0x3a
   16d58:	uxtb	r3, r3
   16d5c:	cmp	r0, #0
   16d60:	cmpne	r3, #1
   16d64:	bls	16e10 <argp_error@@Base+0xa5c>
   16d68:	ldrb	r3, [r0]
   16d6c:	cmp	r3, #87	; 0x57
   16d70:	beq	16e48 <argp_error@@Base+0xa94>
   16d74:	ldrb	r3, [r0, #1]
   16d78:	cmp	r3, #58	; 0x3a
   16d7c:	beq	16f14 <argp_error@@Base+0xb60>
   16d80:	mov	r0, r7
   16d84:	b	16e24 <argp_error@@Base+0xa70>
   16d88:	add	sl, sl, #2
   16d8c:	str	sl, [r4, #20]
   16d90:	ldr	r3, [pc, #636]	; 17014 <argp_error@@Base+0xc60>
   16d94:	str	r3, [sp, #16]
   16d98:	str	r8, [sp, #12]
   16d9c:	str	r4, [sp, #8]
   16da0:	ldr	r3, [sp, #76]	; 0x4c
   16da4:	str	r3, [sp, #4]
   16da8:	ldr	r3, [sp, #72]	; 0x48
   16dac:	str	r3, [sp]
   16db0:	ldr	r3, [sp, #24]
   16db4:	mov	r2, r6
   16db8:	mov	r1, r9
   16dbc:	mov	r0, r5
   16dc0:	bl	165c8 <argp_error@@Base+0x214>
   16dc4:	b	16e24 <argp_error@@Base+0xa70>
   16dc8:	add	sl, sl, #1
   16dcc:	str	sl, [r4, #20]
   16dd0:	ldr	r3, [pc, #580]	; 1701c <argp_error@@Base+0xc68>
   16dd4:	str	r3, [sp, #16]
   16dd8:	str	r8, [sp, #12]
   16ddc:	str	r4, [sp, #8]
   16de0:	ldr	r3, [sp, #76]	; 0x4c
   16de4:	str	r3, [sp, #4]
   16de8:	ldr	r3, [sp, #72]	; 0x48
   16dec:	str	r3, [sp]
   16df0:	ldr	r3, [sp, #24]
   16df4:	mov	r2, r6
   16df8:	mov	r1, r9
   16dfc:	mov	r0, r5
   16e00:	bl	165c8 <argp_error@@Base+0x214>
   16e04:	cmn	r0, #1
   16e08:	bne	16e24 <argp_error@@Base+0xa70>
   16e0c:	b	16d10 <argp_error@@Base+0x95c>
   16e10:	cmp	r8, #0
   16e14:	bne	16e2c <argp_error@@Base+0xa78>
   16e18:	ldr	r3, [sp, #28]
   16e1c:	str	r3, [r4, #8]
   16e20:	mov	r0, #63	; 0x3f
   16e24:	add	sp, sp, #36	; 0x24
   16e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e2c:	ldr	r3, [sp, #28]
   16e30:	ldr	r2, [r9]
   16e34:	ldr	r1, [pc, #484]	; 17020 <argp_error@@Base+0xc6c>
   16e38:	ldr	r0, [pc, #484]	; 17024 <argp_error@@Base+0xc70>
   16e3c:	ldr	r0, [r0]
   16e40:	bl	112e4 <fprintf@plt>
   16e44:	b	16e18 <argp_error@@Base+0xa64>
   16e48:	ldrb	r3, [r0, #1]
   16e4c:	ldr	r2, [sp, #24]
   16e50:	cmp	r3, #59	; 0x3b
   16e54:	movne	r3, #0
   16e58:	moveq	r3, #1
   16e5c:	cmp	r2, #0
   16e60:	moveq	r3, #0
   16e64:	cmp	r3, #0
   16e68:	beq	16d74 <argp_error@@Base+0x9c0>
   16e6c:	ldrb	r3, [sl, #1]
   16e70:	cmp	r3, #0
   16e74:	strne	fp, [r4, #12]
   16e78:	bne	16e90 <argp_error@@Base+0xadc>
   16e7c:	ldr	r3, [r4]
   16e80:	cmp	r5, r3
   16e84:	beq	16ed4 <argp_error@@Base+0xb20>
   16e88:	ldr	r3, [r9, r3, lsl #2]
   16e8c:	str	r3, [r4, #12]
   16e90:	ldr	r3, [r4, #12]
   16e94:	str	r3, [r4, #20]
   16e98:	mov	r3, #0
   16e9c:	str	r3, [r4, #12]
   16ea0:	ldr	r2, [pc, #384]	; 17028 <argp_error@@Base+0xc74>
   16ea4:	str	r2, [sp, #16]
   16ea8:	str	r8, [sp, #12]
   16eac:	str	r4, [sp, #8]
   16eb0:	str	r3, [sp, #4]
   16eb4:	ldr	r3, [sp, #72]	; 0x48
   16eb8:	str	r3, [sp]
   16ebc:	ldr	r3, [sp, #24]
   16ec0:	mov	r2, r6
   16ec4:	mov	r1, r9
   16ec8:	mov	r0, r5
   16ecc:	bl	165c8 <argp_error@@Base+0x214>
   16ed0:	b	16e24 <argp_error@@Base+0xa70>
   16ed4:	cmp	r8, #0
   16ed8:	bne	16ef8 <argp_error@@Base+0xb44>
   16edc:	ldr	r3, [sp, #28]
   16ee0:	str	r3, [r4, #8]
   16ee4:	ldrb	r0, [r6]
   16ee8:	cmp	r0, #58	; 0x3a
   16eec:	moveq	r0, #58	; 0x3a
   16ef0:	movne	r0, #63	; 0x3f
   16ef4:	b	16e24 <argp_error@@Base+0xa70>
   16ef8:	ldr	r3, [sp, #28]
   16efc:	ldr	r2, [r9]
   16f00:	ldr	r1, [pc, #292]	; 1702c <argp_error@@Base+0xc78>
   16f04:	ldr	r0, [pc, #280]	; 17024 <argp_error@@Base+0xc70>
   16f08:	ldr	r0, [r0]
   16f0c:	bl	112e4 <fprintf@plt>
   16f10:	b	16edc <argp_error@@Base+0xb28>
   16f14:	ldrb	r3, [r0, #2]
   16f18:	cmp	r3, #58	; 0x3a
   16f1c:	beq	16f48 <argp_error@@Base+0xb94>
   16f20:	ldrb	r3, [sl, #1]
   16f24:	cmp	r3, #0
   16f28:	beq	16f74 <argp_error@@Base+0xbc0>
   16f2c:	str	fp, [r4, #12]
   16f30:	ldr	r3, [r4]
   16f34:	add	r3, r3, #1
   16f38:	str	r3, [r4]
   16f3c:	mov	r3, #0
   16f40:	str	r3, [r4, #20]
   16f44:	b	16d80 <argp_error@@Base+0x9cc>
   16f48:	ldrb	r3, [sl, #1]
   16f4c:	cmp	r3, #0
   16f50:	strne	fp, [r4, #12]
   16f54:	ldrne	r3, [r4]
   16f58:	addne	r3, r3, #1
   16f5c:	strne	r3, [r4]
   16f60:	moveq	r3, #0
   16f64:	streq	r3, [r4, #12]
   16f68:	mov	r3, #0
   16f6c:	str	r3, [r4, #20]
   16f70:	b	16d80 <argp_error@@Base+0x9cc>
   16f74:	ldr	r3, [r4]
   16f78:	cmp	r5, r3
   16f7c:	beq	16f94 <argp_error@@Base+0xbe0>
   16f80:	add	r2, r3, #1
   16f84:	str	r2, [r4]
   16f88:	ldr	r3, [r9, r3, lsl #2]
   16f8c:	str	r3, [r4, #12]
   16f90:	b	16f3c <argp_error@@Base+0xb88>
   16f94:	cmp	r8, #0
   16f98:	bne	16fb8 <argp_error@@Base+0xc04>
   16f9c:	ldr	r3, [sp, #28]
   16fa0:	str	r3, [r4, #8]
   16fa4:	ldrb	r7, [r6]
   16fa8:	cmp	r7, #58	; 0x3a
   16fac:	moveq	r7, #58	; 0x3a
   16fb0:	movne	r7, #63	; 0x3f
   16fb4:	b	16f3c <argp_error@@Base+0xb88>
   16fb8:	ldr	r3, [sp, #28]
   16fbc:	ldr	r2, [r9]
   16fc0:	ldr	r1, [pc, #100]	; 1702c <argp_error@@Base+0xc78>
   16fc4:	ldr	r0, [pc, #88]	; 17024 <argp_error@@Base+0xc70>
   16fc8:	ldr	r0, [r0]
   16fcc:	bl	112e4 <fprintf@plt>
   16fd0:	b	16f9c <argp_error@@Base+0xbe8>
   16fd4:	mvn	r0, #0
   16fd8:	b	16e24 <argp_error@@Base+0xa70>
   16fdc:	mvn	r0, #0
   16fe0:	b	16e24 <argp_error@@Base+0xa70>
   16fe4:	ldrb	r3, [sl]
   16fe8:	cmp	r3, #45	; 0x2d
   16fec:	beq	16cc8 <argp_error@@Base+0x914>
   16ff0:	ldr	r3, [r4, #24]
   16ff4:	cmp	r3, #0
   16ff8:	beq	16fdc <argp_error@@Base+0xc28>
   16ffc:	add	r3, r7, #1
   17000:	str	r3, [r4]
   17004:	ldr	r3, [r9, r7, lsl #2]
   17008:	str	r3, [r4, #12]
   1700c:	mov	r0, #1
   17010:	b	16e24 <argp_error@@Base+0xa70>
   17014:	andeq	r7, r1, ip, lsr #23
   17018:	andeq	r8, r1, r4, asr #9
   1701c:	ldrdeq	r8, [r1], -r4
   17020:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17024:	ldrdeq	r9, [r2], -r8
   17028:	andeq	r8, r1, r0, lsr #10
   1702c:	strdeq	r8, [r1], -r4
   17030:	push	{r4, r5, lr}
   17034:	sub	sp, sp, #20
   17038:	ldr	r4, [pc, #84]	; 17094 <argp_error@@Base+0xce0>
   1703c:	ldr	r5, [pc, #84]	; 17098 <argp_error@@Base+0xce4>
   17040:	ldr	ip, [r5]
   17044:	str	ip, [r4]
   17048:	ldr	ip, [r5, #4]
   1704c:	str	ip, [r4, #4]
   17050:	ldr	ip, [sp, #40]	; 0x28
   17054:	str	ip, [sp, #12]
   17058:	str	r4, [sp, #8]
   1705c:	ldr	ip, [sp, #36]	; 0x24
   17060:	str	ip, [sp, #4]
   17064:	ldr	ip, [sp, #32]
   17068:	str	ip, [sp]
   1706c:	bl	16ab4 <argp_error@@Base+0x700>
   17070:	ldr	r3, [r4]
   17074:	str	r3, [r5]
   17078:	ldr	r2, [r4, #12]
   1707c:	ldr	r3, [pc, #24]	; 1709c <argp_error@@Base+0xce8>
   17080:	str	r2, [r3]
   17084:	ldr	r3, [r4, #8]
   17088:	str	r3, [r5, #8]
   1708c:	add	sp, sp, #20
   17090:	pop	{r4, r5, pc}
   17094:	strdeq	r9, [r2], -r8
   17098:			; <UNDEFINED> instruction: 0x000291b4
   1709c:			; <UNDEFINED> instruction: 0x000292b8
   170a0:	push	{lr}		; (str lr, [sp, #-4]!)
   170a4:	sub	sp, sp, #20
   170a8:	mov	r3, #1
   170ac:	str	r3, [sp, #8]
   170b0:	mov	r3, #0
   170b4:	str	r3, [sp, #4]
   170b8:	str	r3, [sp]
   170bc:	bl	17030 <argp_error@@Base+0xc7c>
   170c0:	add	sp, sp, #20
   170c4:	pop	{pc}		; (ldr pc, [sp], #4)
   170c8:	push	{r4, r5, r6, r7, r8, lr}
   170cc:	mov	r8, r0
   170d0:	mov	r7, r1
   170d4:	mov	r6, r2
   170d8:	mov	r5, r3
   170dc:	mov	r0, #36	; 0x24
   170e0:	bl	13304 <argp_parse@@Base+0x11dc>
   170e4:	subs	r4, r0, #0
   170e8:	beq	17128 <argp_error@@Base+0xd74>
   170ec:	str	r8, [r4]
   170f0:	str	r7, [r4, #4]
   170f4:	str	r6, [r4, #8]
   170f8:	str	r5, [r4, #12]
   170fc:	mov	r3, #0
   17100:	str	r3, [r4, #20]
   17104:	str	r3, [r4, #16]
   17108:	mov	r0, #200	; 0xc8
   1710c:	bl	13304 <argp_parse@@Base+0x11dc>
   17110:	str	r0, [r4, #24]
   17114:	cmp	r0, #0
   17118:	strne	r0, [r4, #28]
   1711c:	addne	r0, r0, #200	; 0xc8
   17120:	strne	r0, [r4, #32]
   17124:	beq	17130 <argp_error@@Base+0xd7c>
   17128:	mov	r0, r4
   1712c:	pop	{r4, r5, r6, r7, r8, pc}
   17130:	mov	r0, r4
   17134:	bl	12d1c <argp_parse@@Base+0xbf4>
   17138:	mov	r4, #0
   1713c:	b	17128 <argp_error@@Base+0xd74>
   17140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17144:	sub	sp, sp, #20
   17148:	mov	r4, r0
   1714c:	ldr	r2, [r0, #24]
   17150:	ldr	r3, [r0, #16]
   17154:	add	r9, r2, r3
   17158:	mov	sl, #32
   1715c:	b	17208 <argp_error@@Base+0xe54>
   17160:	add	r5, r5, #1
   17164:	cmp	r6, r5
   17168:	beq	17198 <argp_error@@Base+0xde4>
   1716c:	ldr	r0, [r4]
   17170:	ldr	r3, [r0, #20]
   17174:	ldr	r2, [r0, #24]
   17178:	cmp	r3, r2
   1717c:	addcc	r2, r3, #1
   17180:	strcc	r2, [r0, #20]
   17184:	strbcc	sl, [r3]
   17188:	bcc	17160 <argp_error@@Base+0xdac>
   1718c:	mov	r1, sl
   17190:	bl	11350 <__overflow@plt>
   17194:	b	17160 <argp_error@@Base+0xdac>
   17198:	str	r6, [r4, #20]
   1719c:	ldr	fp, [r4, #28]
   171a0:	str	fp, [sp, #8]
   171a4:	str	r9, [sp, #4]
   171a8:	sub	r3, fp, r9
   171ac:	str	r3, [sp]
   171b0:	mov	r2, r3
   171b4:	mov	r1, #10
   171b8:	mov	r0, r9
   171bc:	bl	11344 <memchr@plt>
   171c0:	mov	r7, r0
   171c4:	ldr	r3, [r4, #20]
   171c8:	cmp	r3, #0
   171cc:	movlt	r3, #0
   171d0:	strlt	r3, [r4, #20]
   171d4:	cmp	r7, #0
   171d8:	beq	17278 <argp_error@@Base+0xec4>
   171dc:	ldr	r0, [r4, #20]
   171e0:	mov	r5, r7
   171e4:	ldr	r8, [r4, #8]
   171e8:	ldr	r3, [sp, #4]
   171ec:	sub	r3, r7, r3
   171f0:	add	r3, r3, r0
   171f4:	cmp	r3, r8
   171f8:	bge	172c8 <argp_error@@Base+0xf14>
   171fc:	mov	r3, #0
   17200:	str	r3, [r4, #20]
   17204:	add	r9, r7, #1
   17208:	ldr	fp, [r4, #28]
   1720c:	cmp	r9, fp
   17210:	bcs	172b0 <argp_error@@Base+0xefc>
   17214:	ldr	r3, [r4, #20]
   17218:	cmp	r3, #0
   1721c:	bne	1719c <argp_error@@Base+0xde8>
   17220:	ldr	r6, [r4, #4]
   17224:	cmp	r6, #0
   17228:	beq	17674 <argp_error@@Base+0x12c0>
   1722c:	add	r3, fp, r6
   17230:	ldr	r2, [r4, #32]
   17234:	cmp	r2, r3
   17238:	movls	r5, #0
   1723c:	bls	1716c <argp_error@@Base+0xdb8>
   17240:	add	r5, r9, r6
   17244:	sub	r2, fp, r9
   17248:	mov	r1, r9
   1724c:	mov	r0, r5
   17250:	bl	11158 <memmove@plt>
   17254:	ldr	r3, [r4, #28]
   17258:	add	r3, r3, r6
   1725c:	str	r3, [r4, #28]
   17260:	mov	r2, r6
   17264:	mov	r1, sl
   17268:	mov	r0, r9
   1726c:	bl	11314 <memset@plt>
   17270:	mov	r9, r5
   17274:	b	17198 <argp_error@@Base+0xde4>
   17278:	ldr	r3, [r4, #20]
   1727c:	ldr	r2, [sp]
   17280:	add	r3, r2, r3
   17284:	ldr	r6, [r4, #8]
   17288:	cmp	r3, r6
   1728c:	bcc	172ac <argp_error@@Base+0xef8>
   17290:	sub	r6, r6, #1
   17294:	ldr	r3, [r4, #12]
   17298:	str	r3, [sp, #12]
   1729c:	cmp	r3, #0
   172a0:	blt	173bc <argp_error@@Base+0x1008>
   172a4:	mov	r7, fp
   172a8:	b	172dc <argp_error@@Base+0xf28>
   172ac:	str	r3, [r4, #20]
   172b0:	ldr	r3, [r4, #28]
   172b4:	ldr	r2, [r4, #24]
   172b8:	sub	r3, r3, r2
   172bc:	str	r3, [r4, #16]
   172c0:	add	sp, sp, #20
   172c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172c8:	sub	r6, r8, #1
   172cc:	ldr	r3, [r4, #12]
   172d0:	str	r3, [sp, #12]
   172d4:	cmp	r3, #0
   172d8:	blt	17370 <argp_error@@Base+0xfbc>
   172dc:	ldr	r5, [r4, #20]
   172e0:	rsb	r5, r5, #1
   172e4:	add	r5, r5, r6
   172e8:	adds	r5, r9, r5
   172ec:	bcs	1769c <argp_error@@Base+0x12e8>
   172f0:	bl	112a8 <__ctype_b_loc@plt>
   172f4:	ldr	r0, [r0]
   172f8:	mov	r3, r5
   172fc:	mov	r1, r3
   17300:	sub	r3, r3, #1
   17304:	ldrb	r2, [r1]
   17308:	lsl	r2, r2, #1
   1730c:	ldrh	r2, [r0, r2]
   17310:	tst	r2, #1
   17314:	bne	173dc <argp_error@@Base+0x1028>
   17318:	mov	r1, r3
   1731c:	cmp	r3, r9
   17320:	bcs	172fc <argp_error@@Base+0xf48>
   17324:	add	r6, r1, #1
   17328:	cmp	r6, r9
   1732c:	bhi	17418 <argp_error@@Base+0x1064>
   17330:	cmp	r5, r7
   17334:	bcs	174c8 <argp_error@@Base+0x1114>
   17338:	add	r6, r5, #1
   1733c:	mov	r8, r7
   17340:	mov	r5, r6
   17344:	cmp	r8, r6
   17348:	beq	174c8 <argp_error@@Base+0x1114>
   1734c:	bl	112a8 <__ctype_b_loc@plt>
   17350:	add	r6, r6, #1
   17354:	ldrb	r3, [r5]
   17358:	ldr	r2, [r0]
   1735c:	lsl	r3, r3, #1
   17360:	ldrh	r3, [r2, r3]
   17364:	tst	r3, #1
   17368:	beq	17340 <argp_error@@Base+0xf8c>
   1736c:	b	174dc <argp_error@@Base+0x1128>
   17370:	cmp	fp, r7
   17374:	bls	173bc <argp_error@@Base+0x1008>
   17378:	sub	r0, r6, r0
   1737c:	ldr	r3, [sp, #8]
   17380:	sub	r2, r3, r7
   17384:	mov	r1, r7
   17388:	add	r0, r9, r0
   1738c:	bl	11158 <memmove@plt>
   17390:	ldr	r3, [r4, #20]
   17394:	sub	r6, r6, r3
   17398:	add	r6, r9, r6
   1739c:	sub	r5, r6, r7
   173a0:	ldr	r3, [r4, #28]
   173a4:	sub	r5, r3, r5
   173a8:	str	r5, [r4, #28]
   173ac:	mov	r3, #0
   173b0:	str	r3, [r4, #20]
   173b4:	add	r9, r9, r8
   173b8:	b	17208 <argp_error@@Base+0xe54>
   173bc:	ldr	r3, [r4, #20]
   173c0:	ldr	r2, [sp]
   173c4:	add	r3, r2, r3
   173c8:	str	r3, [r4, #20]
   173cc:	sub	r3, r6, r3
   173d0:	add	r3, fp, r3
   173d4:	str	r3, [r4, #28]
   173d8:	b	172b0 <argp_error@@Base+0xefc>
   173dc:	add	r6, r1, #1
   173e0:	cmp	r6, r9
   173e4:	bls	17330 <argp_error@@Base+0xf7c>
   173e8:	cmp	r1, r9
   173ec:	bcc	17418 <argp_error@@Base+0x1064>
   173f0:	sub	ip, r9, #1
   173f4:	mov	r1, r3
   173f8:	cmp	ip, r3
   173fc:	beq	17418 <argp_error@@Base+0x1064>
   17400:	sub	r3, r3, #1
   17404:	ldrb	r2, [r1]
   17408:	lsl	r2, r2, #1
   1740c:	ldrh	r2, [r0, r2]
   17410:	tst	r2, #1
   17414:	bne	173f4 <argp_error@@Base+0x1040>
   17418:	add	r5, r1, #1
   1741c:	ldr	r3, [sp]
   17420:	add	r3, r3, #1
   17424:	add	r3, r9, r3
   17428:	cmp	r6, r3
   1742c:	beq	17500 <argp_error@@Base+0x114c>
   17430:	add	r3, r5, #1
   17434:	sub	r3, r6, r3
   17438:	ldr	r2, [sp, #12]
   1743c:	cmp	r3, r2
   17440:	bge	17518 <argp_error@@Base+0x1164>
   17444:	cmp	r6, fp
   17448:	bcs	17518 <argp_error@@Base+0x1164>
   1744c:	ldr	r3, [r4, #32]
   17450:	ldr	r2, [sp, #8]
   17454:	sub	r3, r3, r2
   17458:	ldr	r2, [sp, #12]
   1745c:	add	r2, r2, #1
   17460:	cmp	r3, r2
   17464:	bgt	17560 <argp_error@@Base+0x11ac>
   17468:	ldr	r0, [r4, #24]
   1746c:	cmp	r5, r0
   17470:	bls	17484 <argp_error@@Base+0x10d0>
   17474:	ldr	r3, [r4]
   17478:	sub	r2, r5, r0
   1747c:	mov	r1, #1
   17480:	bl	111ac <fwrite_unlocked@plt>
   17484:	ldr	r0, [r4]
   17488:	ldr	r3, [r0, #20]
   1748c:	ldr	r2, [r0, #24]
   17490:	cmp	r3, r2
   17494:	addcc	r2, r3, #1
   17498:	strcc	r2, [r0, #20]
   1749c:	movcc	r2, #10
   174a0:	strbcc	r2, [r3]
   174a4:	bcs	175ac <argp_error@@Base+0x11f8>
   174a8:	ldr	r7, [r4, #24]
   174ac:	ldr	r3, [sp, #4]
   174b0:	sub	r3, r3, r7
   174b4:	ldr	r2, [sp]
   174b8:	add	r3, r2, r3
   174bc:	str	r3, [sp]
   174c0:	mov	r9, r7
   174c4:	b	17528 <argp_error@@Base+0x1174>
   174c8:	cmp	r5, r7
   174cc:	moveq	r3, #0
   174d0:	streq	r3, [r4, #20]
   174d4:	addeq	r9, r7, #1
   174d8:	beq	17208 <argp_error@@Base+0xe54>
   174dc:	bl	112a8 <__ctype_b_loc@plt>
   174e0:	ldr	r2, [r0]
   174e4:	mov	r6, r5
   174e8:	ldrb	r3, [r6, #1]!
   174ec:	lsl	r3, r3, #1
   174f0:	ldrh	r3, [r2, r3]
   174f4:	tst	r3, #1
   174f8:	bne	174e8 <argp_error@@Base+0x1134>
   174fc:	b	1741c <argp_error@@Base+0x1068>
   17500:	ldr	r3, [r4, #32]
   17504:	sub	r3, r3, r5
   17508:	ldr	r2, [sp, #12]
   1750c:	add	r2, r2, #1
   17510:	cmp	r3, r2
   17514:	blt	17444 <argp_error@@Base+0x1090>
   17518:	mov	r3, #10
   1751c:	strb	r3, [r5]
   17520:	mov	r7, r9
   17524:	add	r9, r5, #1
   17528:	mov	r8, r6
   1752c:	ldr	r3, [r4, #12]
   17530:	sub	r2, r6, r9
   17534:	cmp	r2, r3
   17538:	bge	175c8 <argp_error@@Base+0x1214>
   1753c:	ldr	r2, [sp]
   17540:	add	r2, r2, #1
   17544:	add	r2, r7, r2
   17548:	cmp	r6, r2
   1754c:	beq	175b8 <argp_error@@Base+0x1204>
   17550:	cmp	r3, #0
   17554:	movgt	r5, #0
   17558:	bgt	1762c <argp_error@@Base+0x1278>
   1755c:	b	175ec <argp_error@@Base+0x1238>
   17560:	ldr	r3, [sp, #8]
   17564:	sub	r7, r3, r6
   17568:	mov	r0, r2
   1756c:	mov	r2, r7
   17570:	mov	r1, r6
   17574:	add	r0, r5, r0
   17578:	bl	11158 <memmove@plt>
   1757c:	ldr	r6, [r4, #12]
   17580:	add	r6, r6, #1
   17584:	add	r6, r5, r6
   17588:	add	r7, r6, r7
   1758c:	ldr	r3, [sp, #4]
   17590:	sub	r3, r7, r3
   17594:	str	r3, [sp]
   17598:	mov	r3, #10
   1759c:	strb	r3, [r5]
   175a0:	mov	r7, r9
   175a4:	add	r9, r5, #1
   175a8:	b	17528 <argp_error@@Base+0x1174>
   175ac:	mov	r1, #10
   175b0:	bl	11350 <__overflow@plt>
   175b4:	b	174a8 <argp_error@@Base+0x10f4>
   175b8:	ldr	r2, [r4, #32]
   175bc:	sub	r2, r2, r6
   175c0:	cmp	r3, r2
   175c4:	bgt	17550 <argp_error@@Base+0x119c>
   175c8:	cmp	r3, #0
   175cc:	ble	175ec <argp_error@@Base+0x1238>
   175d0:	mov	r3, r9
   175d4:	strb	sl, [r3], #1
   175d8:	sub	r1, r3, r9
   175dc:	ldr	r2, [r4, #12]
   175e0:	cmp	r1, r2
   175e4:	blt	175d4 <argp_error@@Base+0x1220>
   175e8:	mov	r9, r3
   175ec:	cmp	r9, r6
   175f0:	bcc	17658 <argp_error@@Base+0x12a4>
   175f4:	sub	r7, r8, r7
   175f8:	ldr	r3, [sp]
   175fc:	sub	r7, r3, r7
   17600:	add	r7, r9, r7
   17604:	str	r7, [r4, #28]
   17608:	ldr	r3, [r4, #12]
   1760c:	cmp	r3, #0
   17610:	mvneq	r3, #0
   17614:	str	r3, [r4, #20]
   17618:	b	17208 <argp_error@@Base+0xe54>
   1761c:	add	r5, r5, #1
   17620:	ldr	r3, [r4, #12]
   17624:	cmp	r3, r5
   17628:	ble	175ec <argp_error@@Base+0x1238>
   1762c:	ldr	r0, [r4]
   17630:	ldr	r3, [r0, #20]
   17634:	ldr	r2, [r0, #24]
   17638:	cmp	r3, r2
   1763c:	addcc	r2, r3, #1
   17640:	strcc	r2, [r0, #20]
   17644:	strbcc	sl, [r3]
   17648:	bcc	1761c <argp_error@@Base+0x1268>
   1764c:	mov	r1, sl
   17650:	bl	11350 <__overflow@plt>
   17654:	b	1761c <argp_error@@Base+0x1268>
   17658:	ldr	r3, [sp]
   1765c:	add	r2, r7, r3
   17660:	sub	r2, r2, r8
   17664:	mov	r1, r6
   17668:	mov	r0, r9
   1766c:	bl	11158 <memmove@plt>
   17670:	b	175f4 <argp_error@@Base+0x1240>
   17674:	str	fp, [sp, #8]
   17678:	str	r9, [sp, #4]
   1767c:	sub	r3, fp, r9
   17680:	str	r3, [sp]
   17684:	mov	r2, r3
   17688:	mov	r1, #10
   1768c:	mov	r0, r9
   17690:	bl	11344 <memchr@plt>
   17694:	mov	r7, r0
   17698:	b	171d4 <argp_error@@Base+0xe20>
   1769c:	mov	r1, r5
   176a0:	b	17324 <argp_error@@Base+0xf70>
   176a4:	push	{r4, lr}
   176a8:	mov	r4, r0
   176ac:	bl	17140 <argp_error@@Base+0xd8c>
   176b0:	ldr	r2, [r4, #28]
   176b4:	ldr	r0, [r4, #24]
   176b8:	cmp	r2, r0
   176bc:	bls	176d0 <argp_error@@Base+0x131c>
   176c0:	ldr	r3, [r4]
   176c4:	sub	r2, r2, r0
   176c8:	mov	r1, #1
   176cc:	bl	111ac <fwrite_unlocked@plt>
   176d0:	ldr	r0, [r4, #24]
   176d4:	bl	12d1c <argp_parse@@Base+0xbf4>
   176d8:	mov	r0, r4
   176dc:	bl	12d1c <argp_parse@@Base+0xbf4>
   176e0:	pop	{r4, pc}
   176e4:	ldr	r3, [r0, #32]
   176e8:	ldr	r2, [r0, #28]
   176ec:	sub	r3, r3, r2
   176f0:	cmp	r3, r1
   176f4:	bcc	17700 <argp_error@@Base+0x134c>
   176f8:	mov	r0, #1
   176fc:	bx	lr
   17700:	push	{r4, r5, r6, lr}
   17704:	mov	r5, r1
   17708:	mov	r4, r0
   1770c:	bl	17140 <argp_error@@Base+0xd8c>
   17710:	ldr	r0, [r4, #24]
   17714:	ldr	r2, [r4, #28]
   17718:	ldr	r3, [r4]
   1771c:	sub	r2, r2, r0
   17720:	mov	r1, #1
   17724:	bl	111ac <fwrite_unlocked@plt>
   17728:	ldr	r2, [r4, #28]
   1772c:	ldr	r3, [r4, #24]
   17730:	sub	r1, r2, r3
   17734:	cmp	r0, r1
   17738:	bne	1777c <argp_error@@Base+0x13c8>
   1773c:	str	r3, [r4, #28]
   17740:	mov	r2, #0
   17744:	str	r2, [r4, #16]
   17748:	ldr	r1, [r4, #32]
   1774c:	sub	r1, r1, r3
   17750:	cmp	r5, r1
   17754:	bls	17774 <argp_error@@Base+0x13c0>
   17758:	adds	r5, r5, r1
   1775c:	bcc	177a8 <argp_error@@Base+0x13f4>
   17760:	bl	112f0 <__errno_location@plt>
   17764:	mov	r3, #12
   17768:	str	r3, [r0]
   1776c:	mov	r0, #0
   17770:	pop	{r4, r5, r6, pc}
   17774:	mov	r0, #1
   17778:	pop	{r4, r5, r6, pc}
   1777c:	sub	r2, r2, r0
   17780:	str	r2, [r4, #28]
   17784:	ldr	r1, [r4, #16]
   17788:	sub	r1, r1, r0
   1778c:	str	r1, [r4, #16]
   17790:	sub	r2, r2, r3
   17794:	add	r1, r3, r0
   17798:	mov	r0, r3
   1779c:	bl	11158 <memmove@plt>
   177a0:	mov	r0, #0
   177a4:	pop	{r4, r5, r6, pc}
   177a8:	mov	r1, r5
   177ac:	mov	r0, r3
   177b0:	bl	17854 <argp_error@@Base+0x14a0>
   177b4:	cmp	r0, #0
   177b8:	beq	17760 <argp_error@@Base+0x13ac>
   177bc:	str	r0, [r4, #24]
   177c0:	add	r5, r0, r5
   177c4:	str	r5, [r4, #32]
   177c8:	str	r0, [r4, #28]
   177cc:	mov	r0, #1
   177d0:	pop	{r4, r5, r6, pc}
   177d4:	push	{r1, r2, r3}
   177d8:	push	{r4, r5, r6, r7, lr}
   177dc:	sub	sp, sp, #8
   177e0:	mov	r5, r0
   177e4:	ldr	r7, [sp, #28]
   177e8:	mov	r1, #150	; 0x96
   177ec:	add	r6, sp, #32
   177f0:	mov	r0, r5
   177f4:	bl	176e4 <argp_error@@Base+0x1330>
   177f8:	cmp	r0, #0
   177fc:	beq	17830 <argp_error@@Base+0x147c>
   17800:	str	r6, [sp, #4]
   17804:	ldr	r0, [r5, #28]
   17808:	ldr	r4, [r5, #32]
   1780c:	sub	r4, r4, r0
   17810:	mov	r3, r6
   17814:	mov	r2, r7
   17818:	mov	r1, r4
   1781c:	bl	113d4 <vsnprintf@plt>
   17820:	cmp	r4, r0
   17824:	bhi	17838 <argp_error@@Base+0x1484>
   17828:	add	r1, r0, #1
   1782c:	b	177f0 <argp_error@@Base+0x143c>
   17830:	mvn	r0, #0
   17834:	b	17844 <argp_error@@Base+0x1490>
   17838:	ldr	r3, [r5, #28]
   1783c:	add	r3, r3, r0
   17840:	str	r3, [r5, #28]
   17844:	add	sp, sp, #8
   17848:	pop	{r4, r5, r6, r7, lr}
   1784c:	add	sp, sp, #12
   17850:	bx	lr
   17854:	push	{r4, lr}
   17858:	cmp	r0, #0
   1785c:	beq	17878 <argp_error@@Base+0x14c4>
   17860:	cmp	r1, #0
   17864:	beq	17884 <argp_error@@Base+0x14d0>
   17868:	cmp	r1, #0
   1786c:	blt	17890 <argp_error@@Base+0x14dc>
   17870:	bl	111dc <realloc@plt>
   17874:	pop	{r4, pc}
   17878:	mov	r0, r1
   1787c:	bl	13304 <argp_parse@@Base+0x11dc>
   17880:	pop	{r4, pc}
   17884:	bl	12d1c <argp_parse@@Base+0xbf4>
   17888:	mov	r0, #0
   1788c:	pop	{r4, pc}
   17890:	bl	112f0 <__errno_location@plt>
   17894:	mov	r3, #12
   17898:	str	r3, [r0]
   1789c:	mov	r0, #0
   178a0:	pop	{r4, pc}
   178a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   178a8:	mov	r7, r0
   178ac:	ldr	r6, [pc, #72]	; 178fc <argp_error@@Base+0x1548>
   178b0:	ldr	r5, [pc, #72]	; 17900 <argp_error@@Base+0x154c>
   178b4:	add	r6, pc, r6
   178b8:	add	r5, pc, r5
   178bc:	sub	r6, r6, r5
   178c0:	mov	r8, r1
   178c4:	mov	r9, r2
   178c8:	bl	110e4 <fputs_unlocked@plt-0x20>
   178cc:	asrs	r6, r6, #2
   178d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   178d4:	mov	r4, #0
   178d8:	add	r4, r4, #1
   178dc:	ldr	r3, [r5], #4
   178e0:	mov	r2, r9
   178e4:	mov	r1, r8
   178e8:	mov	r0, r7
   178ec:	blx	r3
   178f0:	cmp	r6, r4
   178f4:	bne	178d8 <argp_error@@Base+0x1524>
   178f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   178fc:	andeq	r1, r1, r4, asr #12
   17900:	andeq	r1, r1, ip, lsr r6
   17904:	bx	lr

Disassembly of section .fini:

00017908 <.fini>:
   17908:	push	{r3, lr}
   1790c:	pop	{r3, pc}
