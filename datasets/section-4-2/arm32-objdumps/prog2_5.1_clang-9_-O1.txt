
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010b50 <.init>:
   10b50:	push	{r3, lr}
   10b54:	bl	10c30 <_start@@Base+0x3c>
   10b58:	pop	{r3, pc}

Disassembly of section .plt:

00010b5c <calloc@plt-0x14>:
   10b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b60:	ldr	lr, [pc, #4]	; 10b6c <calloc@plt-0x4>
   10b64:	add	lr, pc, lr
   10b68:	ldr	pc, [lr, #8]!
   10b6c:	muleq	r1, r4, r4

00010b70 <calloc@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1172]!	; 0x494

00010b7c <printf@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1164]!	; 0x48c

00010b88 <free@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1156]!	; 0x484

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1148]!	; 0x47c

00010ba0 <puts@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1140]!	; 0x474

00010bac <malloc@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb8 <__libc_start_main@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1124]!	; 0x464

00010bc4 <__gmon_start__@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1116]!	; 0x45c

00010bd0 <strlen@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1108]!	; 0x454

00010bdc <putchar@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1100]!	; 0x44c

00010be8 <abort@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1092]!	; 0x444

Disassembly of section .text:

00010bf4 <_start@@Base>:
   10bf4:	mov	fp, #0
   10bf8:	mov	lr, #0
   10bfc:	pop	{r1}		; (ldr r1, [sp], #4)
   10c00:	mov	r2, sp
   10c04:	push	{r2}		; (str r2, [sp, #-4]!)
   10c08:	push	{r0}		; (str r0, [sp, #-4]!)
   10c0c:	ldr	ip, [pc, #16]	; 10c24 <_start@@Base+0x30>
   10c10:	push	{ip}		; (str ip, [sp, #-4]!)
   10c14:	ldr	r0, [pc, #12]	; 10c28 <_start@@Base+0x34>
   10c18:	ldr	r3, [pc, #12]	; 10c2c <_start@@Base+0x38>
   10c1c:	bl	10bb8 <__libc_start_main@plt>
   10c20:	bl	10be8 <abort@plt>
   10c24:	andeq	r1, r1, r0, lsr r9
   10c28:	andeq	r0, r1, r4, ror #25
   10c2c:	ldrdeq	r1, [r1], -r0
   10c30:	ldr	r3, [pc, #20]	; 10c4c <_start@@Base+0x58>
   10c34:	ldr	r2, [pc, #20]	; 10c50 <_start@@Base+0x5c>
   10c38:	add	r3, pc, r3
   10c3c:	ldr	r2, [r3, r2]
   10c40:	cmp	r2, #0
   10c44:	bxeq	lr
   10c48:	b	10bc4 <__gmon_start__@plt>
   10c4c:	andeq	r1, r1, r0, asr #7
   10c50:	andeq	r0, r0, r8, lsr r0
   10c54:	ldr	r0, [pc, #24]	; 10c74 <_start@@Base+0x80>
   10c58:	ldr	r3, [pc, #24]	; 10c78 <_start@@Base+0x84>
   10c5c:	cmp	r3, r0
   10c60:	bxeq	lr
   10c64:	ldr	r3, [pc, #16]	; 10c7c <_start@@Base+0x88>
   10c68:	cmp	r3, #0
   10c6c:	bxeq	lr
   10c70:	bx	r3
   10c74:	andeq	r2, r2, r4, asr #32
   10c78:	andeq	r2, r2, r4, asr #32
   10c7c:	andeq	r0, r0, r0
   10c80:	ldr	r0, [pc, #36]	; 10cac <_start@@Base+0xb8>
   10c84:	ldr	r1, [pc, #36]	; 10cb0 <_start@@Base+0xbc>
   10c88:	sub	r1, r1, r0
   10c8c:	asr	r1, r1, #2
   10c90:	add	r1, r1, r1, lsr #31
   10c94:	asrs	r1, r1, #1
   10c98:	bxeq	lr
   10c9c:	ldr	r3, [pc, #16]	; 10cb4 <_start@@Base+0xc0>
   10ca0:	cmp	r3, #0
   10ca4:	bxeq	lr
   10ca8:	bx	r3
   10cac:	andeq	r2, r2, r4, asr #32
   10cb0:	andeq	r2, r2, r4, asr #32
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, lr}
   10cbc:	ldr	r4, [pc, #24]	; 10cdc <_start@@Base+0xe8>
   10cc0:	ldrb	r3, [r4]
   10cc4:	cmp	r3, #0
   10cc8:	popne	{r4, pc}
   10ccc:	bl	10c54 <_start@@Base+0x60>
   10cd0:	mov	r3, #1
   10cd4:	strb	r3, [r4]
   10cd8:	pop	{r4, pc}
   10cdc:	andeq	r2, r2, r4, asr #32
   10ce0:	b	10c80 <_start@@Base+0x8c>

00010ce4 <main@@Base>:
   10ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce8:	add	fp, sp, #28
   10cec:	sub	sp, sp, #4
   10cf0:	vpush	{d8}
   10cf4:	sub	sp, sp, #40	; 0x28
   10cf8:	mov	r0, #4
   10cfc:	mov	r1, #3
   10d00:	bl	112dc <armazem_novo@@Base>
   10d04:	mov	r4, r0
   10d08:	movw	r0, #6689	; 0x1a21
   10d0c:	movt	r0, #1
   10d10:	bl	10ba0 <puts@plt>
   10d14:	vldr	s0, [pc, #312]	; 10e54 <main@@Base+0x170>
   10d18:	movw	r0, #6464	; 0x1940
   10d1c:	movt	r0, #1
   10d20:	bl	114d4 <contentor_novo@@Base>
   10d24:	mov	r8, r0
   10d28:	vldr	s0, [pc, #296]	; 10e58 <main@@Base+0x174>
   10d2c:	movw	r0, #6471	; 0x1947
   10d30:	movt	r0, #1
   10d34:	bl	114d4 <contentor_novo@@Base>
   10d38:	mov	sl, r0
   10d3c:	vldr	s0, [pc, #280]	; 10e5c <main@@Base+0x178>
   10d40:	movw	r0, #6474	; 0x194a
   10d44:	movt	r0, #1
   10d48:	bl	114d4 <contentor_novo@@Base>
   10d4c:	str	r0, [sp, #24]
   10d50:	vldr	s0, [pc, #264]	; 10e60 <main@@Base+0x17c>
   10d54:	movw	r0, #6481	; 0x1951
   10d58:	movt	r0, #1
   10d5c:	bl	114d4 <contentor_novo@@Base>
   10d60:	mov	r5, r0
   10d64:	vldr	s16, [pc, #248]	; 10e64 <main@@Base+0x180>
   10d68:	movw	r0, #6487	; 0x1957
   10d6c:	movt	r0, #1
   10d70:	vmov.f32	s0, s16
   10d74:	bl	114d4 <contentor_novo@@Base>
   10d78:	str	r0, [sp, #8]
   10d7c:	vldr	s0, [pc, #228]	; 10e68 <main@@Base+0x184>
   10d80:	movw	r0, #6493	; 0x195d
   10d84:	movt	r0, #1
   10d88:	bl	114d4 <contentor_novo@@Base>
   10d8c:	str	r0, [sp, #16]
   10d90:	vldr	s0, [pc, #1012]	; 1118c <main@@Base+0x4a8>
   10d94:	movw	r0, #6501	; 0x1965
   10d98:	movt	r0, #1
   10d9c:	bl	114d4 <contentor_novo@@Base>
   10da0:	str	r0, [sp, #20]
   10da4:	vldr	s0, [pc, #996]	; 11190 <main@@Base+0x4ac>
   10da8:	movw	r0, #6511	; 0x196f
   10dac:	movt	r0, #1
   10db0:	bl	114d4 <contentor_novo@@Base>
   10db4:	str	r0, [sp, #12]
   10db8:	movw	r0, #6518	; 0x1976
   10dbc:	movt	r0, #1
   10dc0:	vmov.f32	s0, s16
   10dc4:	bl	114d4 <contentor_novo@@Base>
   10dc8:	mov	r9, r0
   10dcc:	vldr	s0, [pc, #960]	; 11194 <main@@Base+0x4b0>
   10dd0:	movw	r0, #6530	; 0x1982
   10dd4:	movt	r0, #1
   10dd8:	bl	114d4 <contentor_novo@@Base>
   10ddc:	mov	r7, r0
   10de0:	vldr	s0, [pc, #944]	; 11198 <main@@Base+0x4b4>
   10de4:	movw	r0, #6538	; 0x198a
   10de8:	movt	r0, #1
   10dec:	bl	114d4 <contentor_novo@@Base>
   10df0:	str	r0, [sp, #28]
   10df4:	vldr	s0, [pc, #928]	; 1119c <main@@Base+0x4b8>
   10df8:	movw	r0, #6547	; 0x1993
   10dfc:	movt	r0, #1
   10e00:	bl	114d4 <contentor_novo@@Base>
   10e04:	str	r0, [sp, #32]
   10e08:	vldr	s0, [pc, #912]	; 111a0 <main@@Base+0x4bc>
   10e0c:	movw	r0, #6553	; 0x1999
   10e10:	movt	r0, #1
   10e14:	bl	114d4 <contentor_novo@@Base>
   10e18:	str	r0, [sp, #36]	; 0x24
   10e1c:	movw	r0, #6708	; 0x1a34
   10e20:	movt	r0, #1
   10e24:	bl	10ba0 <puts@plt>
   10e28:	mov	r0, r4
   10e2c:	bl	111a4 <imprimeArmazem@@Base>
   10e30:	movw	r0, #6735	; 0x1a4f
   10e34:	movt	r0, #1
   10e38:	bl	10ba0 <puts@plt>
   10e3c:	mov	r0, r4
   10e40:	mov	r1, r8
   10e44:	bl	11394 <armazenar_contentor@@Base>
   10e48:	cmp	r0, #0
   10e4c:	beq	10e7c <main@@Base+0x198>
   10e50:	b	10e6c <main@@Base+0x188>
   10e54:	cmnmi	r6, #0
   10e58:	cmnmi	sl, #0
   10e5c:	strmi	r8, [r4], #-0
   10e60:	ldrtmi	r8, [r1], #-0
   10e64:			; <UNDEFINED> instruction: 0x43be0000
   10e68:	bicmi	r0, r3, #0
   10e6c:	ldr	r1, [r8]
   10e70:	movw	r0, #6561	; 0x19a1
   10e74:	movt	r0, #1
   10e78:	bl	10b7c <printf@plt>
   10e7c:	mov	r0, r4
   10e80:	mov	r1, sl
   10e84:	bl	11394 <armazenar_contentor@@Base>
   10e88:	cmp	r0, #0
   10e8c:	beq	10ea0 <main@@Base+0x1bc>
   10e90:	ldr	r1, [sl]
   10e94:	movw	r0, #6561	; 0x19a1
   10e98:	movt	r0, #1
   10e9c:	bl	10b7c <printf@plt>
   10ea0:	mov	r0, r4
   10ea4:	ldr	r8, [sp, #24]
   10ea8:	mov	r1, r8
   10eac:	bl	11394 <armazenar_contentor@@Base>
   10eb0:	cmp	r0, #0
   10eb4:	str	r7, [sp, #4]
   10eb8:	beq	10ecc <main@@Base+0x1e8>
   10ebc:	ldr	r1, [r8]
   10ec0:	movw	r0, #6561	; 0x19a1
   10ec4:	movt	r0, #1
   10ec8:	bl	10b7c <printf@plt>
   10ecc:	mov	r0, r4
   10ed0:	mov	r1, r5
   10ed4:	bl	11394 <armazenar_contentor@@Base>
   10ed8:	cmp	r0, #0
   10edc:	ldr	r7, [sp, #12]
   10ee0:	beq	10ef4 <main@@Base+0x210>
   10ee4:	ldr	r1, [r5]
   10ee8:	movw	r0, #6561	; 0x19a1
   10eec:	movt	r0, #1
   10ef0:	bl	10b7c <printf@plt>
   10ef4:	movw	r0, #6768	; 0x1a70
   10ef8:	movt	r0, #1
   10efc:	bl	10ba0 <puts@plt>
   10f00:	mov	r0, r4
   10f04:	bl	111a4 <imprimeArmazem@@Base>
   10f08:	movw	r0, #6795	; 0x1a8b
   10f0c:	movt	r0, #1
   10f10:	bl	10ba0 <puts@plt>
   10f14:	mov	r0, r4
   10f18:	ldr	r5, [sp, #8]
   10f1c:	mov	r1, r5
   10f20:	bl	11394 <armazenar_contentor@@Base>
   10f24:	cmp	r0, #0
   10f28:	ldr	r6, [sp, #20]
   10f2c:	beq	10f40 <main@@Base+0x25c>
   10f30:	ldr	r1, [r5]
   10f34:	movw	r0, #6561	; 0x19a1
   10f38:	movt	r0, #1
   10f3c:	bl	10b7c <printf@plt>
   10f40:	mov	r0, r4
   10f44:	ldr	sl, [sp, #16]
   10f48:	mov	r1, sl
   10f4c:	bl	11394 <armazenar_contentor@@Base>
   10f50:	cmp	r0, #0
   10f54:	ldr	r5, [sp, #32]
   10f58:	beq	10f6c <main@@Base+0x288>
   10f5c:	ldr	r1, [sl]
   10f60:	movw	r0, #6561	; 0x19a1
   10f64:	movt	r0, #1
   10f68:	bl	10b7c <printf@plt>
   10f6c:	mov	r0, r4
   10f70:	mov	r1, r6
   10f74:	bl	11394 <armazenar_contentor@@Base>
   10f78:	cmp	r0, #0
   10f7c:	mov	r0, r6
   10f80:	ldr	r6, [sp, #28]
   10f84:	beq	10f98 <main@@Base+0x2b4>
   10f88:	ldr	r1, [r0]
   10f8c:	movw	r0, #6561	; 0x19a1
   10f90:	movt	r0, #1
   10f94:	bl	10b7c <printf@plt>
   10f98:	mov	r0, r4
   10f9c:	mov	r1, r7
   10fa0:	bl	11394 <armazenar_contentor@@Base>
   10fa4:	cmp	r0, #0
   10fa8:	beq	10fbc <main@@Base+0x2d8>
   10fac:	ldr	r1, [r7]
   10fb0:	movw	r0, #6561	; 0x19a1
   10fb4:	movt	r0, #1
   10fb8:	bl	10b7c <printf@plt>
   10fbc:	mov	r0, r4
   10fc0:	mov	r1, r9
   10fc4:	bl	11394 <armazenar_contentor@@Base>
   10fc8:	cmp	r0, #0
   10fcc:	beq	10fe0 <main@@Base+0x2fc>
   10fd0:	ldr	r1, [r9]
   10fd4:	movw	r0, #6561	; 0x19a1
   10fd8:	movt	r0, #1
   10fdc:	bl	10b7c <printf@plt>
   10fe0:	mov	r0, r4
   10fe4:	ldr	r7, [sp, #4]
   10fe8:	mov	r1, r7
   10fec:	bl	11394 <armazenar_contentor@@Base>
   10ff0:	cmp	r0, #0
   10ff4:	beq	11008 <main@@Base+0x324>
   10ff8:	ldr	r1, [r7]
   10ffc:	movw	r0, #6561	; 0x19a1
   11000:	movt	r0, #1
   11004:	bl	10b7c <printf@plt>
   11008:	mov	r0, r4
   1100c:	mov	r1, r6
   11010:	bl	11394 <armazenar_contentor@@Base>
   11014:	cmp	r0, #0
   11018:	beq	1102c <main@@Base+0x348>
   1101c:	ldr	r1, [r6]
   11020:	movw	r0, #6561	; 0x19a1
   11024:	movt	r0, #1
   11028:	bl	10b7c <printf@plt>
   1102c:	mov	r0, r4
   11030:	mov	r1, r5
   11034:	bl	11394 <armazenar_contentor@@Base>
   11038:	cmp	r0, #0
   1103c:	beq	11050 <main@@Base+0x36c>
   11040:	ldr	r1, [r5]
   11044:	movw	r0, #6561	; 0x19a1
   11048:	movt	r0, #1
   1104c:	bl	10b7c <printf@plt>
   11050:	movw	r0, #6828	; 0x1aac
   11054:	movt	r0, #1
   11058:	bl	10ba0 <puts@plt>
   1105c:	mov	r0, r4
   11060:	bl	111a4 <imprimeArmazem@@Base>
   11064:	mov	r0, r4
   11068:	bl	11338 <armazem_cheio@@Base>
   1106c:	movw	r2, #6855	; 0x1ac7
   11070:	movt	r2, #1
   11074:	movw	r1, #7093	; 0x1bb5
   11078:	movt	r1, #1
   1107c:	cmp	r0, #0
   11080:	moveq	r1, r2
   11084:	mov	r0, r1
   11088:	bl	10ba0 <puts@plt>
   1108c:	mov	r0, r4
   11090:	ldr	r1, [sp, #36]	; 0x24
   11094:	bl	11394 <armazenar_contentor@@Base>
   11098:	cmp	r0, #0
   1109c:	beq	110b0 <main@@Base+0x3cc>
   110a0:	ldr	r1, [r8]
   110a4:	movw	r0, #6599	; 0x19c7
   110a8:	movt	r0, #1
   110ac:	bl	10b7c <printf@plt>
   110b0:	movw	r0, #6892	; 0x1aec
   110b4:	movt	r0, #1
   110b8:	bl	10ba0 <puts@plt>
   110bc:	mov	r7, #8
   110c0:	movw	r5, #7063	; 0x1b97
   110c4:	movt	r5, #1
   110c8:	mov	r0, r4
   110cc:	bl	11438 <expedir_contentor@@Base>
   110d0:	mov	r6, r0
   110d4:	mov	r0, r5
   110d8:	bl	10ba0 <puts@plt>
   110dc:	mov	r0, r6
   110e0:	bl	11540 <contentor_imprime@@Base>
   110e4:	subs	r7, r7, #1
   110e8:	bne	110c8 <main@@Base+0x3e4>
   110ec:	movw	r0, #6925	; 0x1b0d
   110f0:	movt	r0, #1
   110f4:	bl	10ba0 <puts@plt>
   110f8:	mov	r0, r4
   110fc:	bl	111a4 <imprimeArmazem@@Base>
   11100:	movw	r0, #6952	; 0x1b28
   11104:	movt	r0, #1
   11108:	bl	10ba0 <puts@plt>
   1110c:	mov	r7, #4
   11110:	movw	r5, #7063	; 0x1b97
   11114:	movt	r5, #1
   11118:	mov	r0, r4
   1111c:	bl	11438 <expedir_contentor@@Base>
   11120:	mov	r6, r0
   11124:	mov	r0, r5
   11128:	bl	10ba0 <puts@plt>
   1112c:	mov	r0, r6
   11130:	bl	11540 <contentor_imprime@@Base>
   11134:	subs	r7, r7, #1
   11138:	bne	11118 <main@@Base+0x434>
   1113c:	movw	r0, #6985	; 0x1b49
   11140:	movt	r0, #1
   11144:	bl	10ba0 <puts@plt>
   11148:	mov	r0, r4
   1114c:	bl	111a4 <imprimeArmazem@@Base>
   11150:	mov	r0, r4
   11154:	bl	11310 <armazem_vazio@@Base>
   11158:	movw	r2, #7012	; 0x1b64
   1115c:	movt	r2, #1
   11160:	movw	r1, #7049	; 0x1b89
   11164:	movt	r1, #1
   11168:	cmp	r0, #0
   1116c:	moveq	r1, r2
   11170:	mov	r0, r1
   11174:	bl	10ba0 <puts@plt>
   11178:	mov	r0, #0
   1117c:	sub	sp, fp, #40	; 0x28
   11180:	vpop	{d8}
   11184:	add	sp, sp, #4
   11188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1118c:	sbcmi	r0, r8, #0
   11190:	adcmi	r0, r0, #0
   11194:	tstmi	r6, #0
   11198:	orrmi	r0, r7, #0
   1119c:	bicsmi	r0, r7, #0
   111a0:	movtmi	r0, #32768	; 0x8000

000111a4 <imprimeArmazem@@Base>:
   111a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a8:	add	fp, sp, #28
   111ac:	sub	sp, sp, #4
   111b0:	cmp	r0, #0
   111b4:	beq	1127c <imprimeArmazem@@Base+0xd8>
   111b8:	mov	sl, r0
   111bc:	ldr	r4, [r0, #8]
   111c0:	cmp	r4, #0
   111c4:	beq	1127c <imprimeArmazem@@Base+0xd8>
   111c8:	ldr	r9, [r4, #4]
   111cc:	mov	r0, r9
   111d0:	mov	r1, #4
   111d4:	bl	10b70 <calloc@plt>
   111d8:	str	r0, [sp]
   111dc:	ldr	r0, [r4]
   111e0:	cmp	r0, #0
   111e4:	beq	11204 <imprimeArmazem@@Base+0x60>
   111e8:	ldr	r1, [sp]
   111ec:	ldr	r2, [r0]
   111f0:	ldr	r2, [r2, #4]
   111f4:	str	r2, [r1], #4
   111f8:	ldr	r0, [r0, #4]
   111fc:	cmp	r0, #0
   11200:	bne	111ec <imprimeArmazem@@Base+0x48>
   11204:	mov	r0, #10
   11208:	bl	10bdc <putchar@plt>
   1120c:	ldr	r5, [sl, #4]
   11210:	cmp	r5, #1
   11214:	blt	11284 <imprimeArmazem@@Base+0xe0>
   11218:	movw	r7, #6679	; 0x1a17
   1121c:	movt	r7, #1
   11220:	movw	r4, #6674	; 0x1a12
   11224:	movt	r4, #1
   11228:	b	11240 <imprimeArmazem@@Base+0x9c>
   1122c:	mov	r0, #10
   11230:	bl	10bdc <putchar@plt>
   11234:	sub	r5, r5, #1
   11238:	cmp	r5, #0
   1123c:	ble	11284 <imprimeArmazem@@Base+0xe0>
   11240:	movw	r0, #6681	; 0x1a19
   11244:	movt	r0, #1
   11248:	bl	10b7c <printf@plt>
   1124c:	cmp	r9, #1
   11250:	blt	1122c <imprimeArmazem@@Base+0x88>
   11254:	ldr	r8, [sp]
   11258:	mov	r6, r9
   1125c:	ldr	r0, [r8], #4
   11260:	cmp	r0, r5
   11264:	mov	r0, r4
   11268:	movlt	r0, r7
   1126c:	bl	10b7c <printf@plt>
   11270:	subs	r6, r6, #1
   11274:	bne	1125c <imprimeArmazem@@Base+0xb8>
   11278:	b	1122c <imprimeArmazem@@Base+0x88>
   1127c:	sub	sp, fp, #28
   11280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11284:	movw	r0, #6686	; 0x1a1e
   11288:	movt	r0, #1
   1128c:	bl	10b7c <printf@plt>
   11290:	ldr	r0, [sl]
   11294:	cmp	r0, #1
   11298:	blt	112c0 <imprimeArmazem@@Base+0x11c>
   1129c:	mov	r4, #0
   112a0:	movw	r6, #6684	; 0x1a1c
   112a4:	movt	r6, #1
   112a8:	mov	r0, r6
   112ac:	bl	10b7c <printf@plt>
   112b0:	add	r4, r4, #1
   112b4:	ldr	r0, [sl]
   112b8:	cmp	r4, r0
   112bc:	blt	112a8 <imprimeArmazem@@Base+0x104>
   112c0:	movw	r0, #6597	; 0x19c5
   112c4:	movt	r0, #1
   112c8:	bl	10ba0 <puts@plt>
   112cc:	ldr	r0, [sp]
   112d0:	sub	sp, fp, #28
   112d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112d8:	b	10b88 <free@plt>

000112dc <armazem_novo@@Base>:
   112dc:	push	{r4, r5, r6, sl, fp, lr}
   112e0:	add	fp, sp, #16
   112e4:	mov	r4, r1
   112e8:	mov	r5, r0
   112ec:	mov	r0, #12
   112f0:	bl	10bac <malloc@plt>
   112f4:	mov	r6, r0
   112f8:	str	r5, [r0]
   112fc:	str	r4, [r0, #4]
   11300:	bl	115bc <fila_nova@@Base>
   11304:	str	r0, [r6, #8]
   11308:	mov	r0, r6
   1130c:	pop	{r4, r5, r6, sl, fp, pc}

00011310 <armazem_vazio@@Base>:
   11310:	cmp	r0, #0
   11314:	moveq	r0, #1
   11318:	bxeq	lr
   1131c:	push	{fp, lr}
   11320:	mov	fp, sp
   11324:	ldr	r0, [r0, #8]
   11328:	bl	1162c <fila_tamanho@@Base>
   1132c:	clz	r0, r0
   11330:	lsr	r0, r0, #5
   11334:	pop	{fp, pc}

00011338 <armazem_cheio@@Base>:
   11338:	push	{r4, sl, fp, lr}
   1133c:	add	fp, sp, #8
   11340:	mov	r4, r0
   11344:	bl	11310 <armazem_vazio@@Base>
   11348:	mov	r1, r0
   1134c:	mov	r0, #0
   11350:	cmp	r1, #0
   11354:	popne	{r4, sl, fp, pc}
   11358:	ldr	r0, [r4, #8]
   1135c:	bl	1162c <fila_tamanho@@Base>
   11360:	ldr	r1, [r4]
   11364:	cmp	r0, r1
   11368:	bne	1138c <armazem_cheio@@Base+0x54>
   1136c:	ldr	r0, [r4, #8]
   11370:	bl	11664 <fila_back@@Base>
   11374:	ldr	r1, [r4, #4]
   11378:	ldr	r2, [r0, #4]
   1137c:	mov	r0, #1
   11380:	cmp	r2, r1
   11384:	movne	r0, #0
   11388:	pop	{r4, sl, fp, pc}
   1138c:	mov	r0, #0
   11390:	pop	{r4, sl, fp, pc}

00011394 <armazenar_contentor@@Base>:
   11394:	push	{r4, r5, r6, r7, fp, lr}
   11398:	add	fp, sp, #16
   1139c:	mov	r4, r1
   113a0:	mov	r5, r0
   113a4:	bl	117a0 <pilha_nova@@Base>
   113a8:	mov	r7, #0
   113ac:	cmp	r5, #0
   113b0:	cmpne	r4, #0
   113b4:	bne	113c0 <armazenar_contentor@@Base+0x2c>
   113b8:	mov	r0, r7
   113bc:	pop	{r4, r5, r6, r7, fp, pc}
   113c0:	mov	r6, r0
   113c4:	mov	r0, r5
   113c8:	bl	11338 <armazem_cheio@@Base>
   113cc:	cmp	r0, #0
   113d0:	bne	113b8 <armazenar_contentor@@Base+0x24>
   113d4:	mov	r0, r5
   113d8:	bl	11310 <armazem_vazio@@Base>
   113dc:	cmp	r0, #0
   113e0:	beq	113f8 <armazenar_contentor@@Base+0x64>
   113e4:	ldr	r7, [r5, #8]
   113e8:	bl	117a0 <pilha_nova@@Base>
   113ec:	mov	r1, r0
   113f0:	mov	r0, r7
   113f4:	bl	1169c <fila_push@@Base>
   113f8:	ldr	r0, [r5, #8]
   113fc:	bl	11664 <fila_back@@Base>
   11400:	ldr	r1, [r5, #4]
   11404:	ldr	r0, [r0, #4]
   11408:	cmp	r0, r1
   1140c:	bne	1141c <armazenar_contentor@@Base+0x88>
   11410:	ldr	r0, [r5, #8]
   11414:	mov	r1, r6
   11418:	bl	1169c <fila_push@@Base>
   1141c:	ldr	r0, [r5, #8]
   11420:	bl	11664 <fila_back@@Base>
   11424:	mov	r1, r4
   11428:	bl	11848 <pilha_push@@Base>
   1142c:	mov	r7, #1
   11430:	mov	r0, r7
   11434:	pop	{r4, r5, r6, r7, fp, pc}

00011438 <expedir_contentor@@Base>:
   11438:	push	{r4, r5, fp, lr}
   1143c:	add	fp, sp, #8
   11440:	mov	r4, r0
   11444:	bl	11310 <armazem_vazio@@Base>
   11448:	mov	r5, #0
   1144c:	cmp	r0, #0
   11450:	beq	1145c <expedir_contentor@@Base+0x24>
   11454:	mov	r0, r5
   11458:	pop	{r4, r5, fp, pc}
   1145c:	ldr	r0, [r4, #8]
   11460:	bl	1163c <fila_front@@Base>
   11464:	bl	11820 <pilha_top@@Base>
   11468:	cmp	r0, #0
   1146c:	beq	11454 <expedir_contentor@@Base+0x1c>
   11470:	ldr	r0, [r4, #8]
   11474:	bl	1163c <fila_front@@Base>
   11478:	bl	11820 <pilha_top@@Base>
   1147c:	ldr	r5, [r0]
   11480:	ldr	r0, [r4, #8]
   11484:	bl	1163c <fila_front@@Base>
   11488:	bl	11820 <pilha_top@@Base>
   1148c:	vldr	s0, [r0, #4]
   11490:	mov	r0, r5
   11494:	bl	114d4 <contentor_novo@@Base>
   11498:	mov	r5, r0
   1149c:	ldr	r0, [r4, #8]
   114a0:	bl	1163c <fila_front@@Base>
   114a4:	mov	r1, r0
   114a8:	ldr	r0, [r4, #8]
   114ac:	ldr	r1, [r1, #4]
   114b0:	cmp	r1, #1
   114b4:	bgt	114c4 <expedir_contentor@@Base+0x8c>
   114b8:	bl	116f8 <fila_pop@@Base>
   114bc:	mov	r0, r5
   114c0:	pop	{r4, r5, fp, pc}
   114c4:	bl	1163c <fila_front@@Base>
   114c8:	bl	11888 <pilha_pop@@Base>
   114cc:	mov	r0, r5
   114d0:	pop	{r4, r5, fp, pc}

000114d4 <contentor_novo@@Base>:
   114d4:	push	{r4, r5, fp, lr}
   114d8:	add	fp, sp, #8
   114dc:	vpush	{d8}
   114e0:	vmov.f32	s16, s0
   114e4:	mov	r4, r0
   114e8:	mov	r0, #8
   114ec:	bl	10bac <malloc@plt>
   114f0:	mov	r5, r0
   114f4:	mov	r0, r4
   114f8:	bl	10bd0 <strlen@plt>
   114fc:	add	r0, r0, #1
   11500:	bl	10bac <malloc@plt>
   11504:	str	r0, [r5]
   11508:	mov	r1, r4
   1150c:	bl	10b94 <strcpy@plt>
   11510:	vstr	s16, [r5, #4]
   11514:	mov	r0, r5
   11518:	vpop	{d8}
   1151c:	pop	{r4, r5, fp, pc}

00011520 <contentor_apaga@@Base>:
   11520:	push	{r4, sl, fp, lr}
   11524:	add	fp, sp, #8
   11528:	mov	r4, r0
   1152c:	ldr	r0, [r0]
   11530:	bl	10b88 <free@plt>
   11534:	mov	r0, r4
   11538:	pop	{r4, sl, fp, lr}
   1153c:	b	10b88 <free@plt>

00011540 <contentor_imprime@@Base>:
   11540:	cmp	r0, #0
   11544:	beq	11564 <contentor_imprime@@Base+0x24>
   11548:	vldr	s0, [r0, #4]
   1154c:	vcvt.f64.f32	d16, s0
   11550:	ldr	r1, [r0]
   11554:	vmov	r2, r3, d16
   11558:	movw	r0, #7107	; 0x1bc3
   1155c:	movt	r0, #1
   11560:	b	10b7c <printf@plt>
   11564:	movw	r0, #7150	; 0x1bee
   11568:	movt	r0, #1
   1156c:	b	10ba0 <puts@plt>

00011570 <fila_novo_elemento@@Base>:
   11570:	push	{r4, r5, fp, lr}
   11574:	add	fp, sp, #8
   11578:	mov	r5, r0
   1157c:	mov	r0, #8
   11580:	bl	10bac <malloc@plt>
   11584:	mov	r4, #0
   11588:	cmp	r0, #0
   1158c:	beq	115a8 <fila_novo_elemento@@Base+0x38>
   11590:	str	r5, [r0]
   11594:	cmp	r5, #0
   11598:	beq	115b0 <fila_novo_elemento@@Base+0x40>
   1159c:	mov	r1, #0
   115a0:	str	r1, [r0, #4]
   115a4:	mov	r4, r0
   115a8:	mov	r0, r4
   115ac:	pop	{r4, r5, fp, pc}
   115b0:	bl	10b88 <free@plt>
   115b4:	mov	r0, r4
   115b8:	pop	{r4, r5, fp, pc}

000115bc <fila_nova@@Base>:
   115bc:	push	{fp, lr}
   115c0:	mov	fp, sp
   115c4:	mov	r0, #8
   115c8:	bl	10bac <malloc@plt>
   115cc:	cmp	r0, #0
   115d0:	moveq	r0, #0
   115d4:	movne	r1, #0
   115d8:	strne	r1, [r0]
   115dc:	strne	r1, [r0, #4]
   115e0:	pop	{fp, pc}

000115e4 <fila_apaga@@Base>:
   115e4:	cmp	r0, #0
   115e8:	bxeq	lr
   115ec:	push	{r4, r5, fp, lr}
   115f0:	add	fp, sp, #8
   115f4:	mov	r4, r0
   115f8:	ldr	r5, [r4]
   115fc:	cmp	r5, #0
   11600:	beq	11620 <fila_apaga@@Base+0x3c>
   11604:	ldr	r0, [r5, #4]
   11608:	str	r0, [r4]
   1160c:	ldr	r0, [r5]
   11610:	bl	117c8 <pilha_apaga@@Base>
   11614:	mov	r0, r5
   11618:	bl	10b88 <free@plt>
   1161c:	b	115f8 <fila_apaga@@Base+0x14>
   11620:	mov	r0, r4
   11624:	pop	{r4, r5, fp, lr}
   11628:	b	10b88 <free@plt>

0001162c <fila_tamanho@@Base>:
   1162c:	cmp	r0, #0
   11630:	ldrne	r0, [r0, #4]
   11634:	mvneq	r0, #0
   11638:	bx	lr

0001163c <fila_front@@Base>:
   1163c:	mov	r1, r0
   11640:	mov	r0, #0
   11644:	cmp	r1, #0
   11648:	beq	11660 <fila_front@@Base+0x24>
   1164c:	ldr	r2, [r1, #4]
   11650:	cmp	r2, #0
   11654:	bxeq	lr
   11658:	ldr	r0, [r1]
   1165c:	ldr	r0, [r0]
   11660:	bx	lr

00011664 <fila_back@@Base>:
   11664:	mov	r1, r0
   11668:	mov	r0, #0
   1166c:	cmp	r1, #0
   11670:	beq	11698 <fila_back@@Base+0x34>
   11674:	ldr	r2, [r1, #4]
   11678:	cmp	r2, #0
   1167c:	bxeq	lr
   11680:	ldr	r0, [r1]
   11684:	mov	r1, r0
   11688:	ldr	r0, [r0, #4]
   1168c:	cmp	r0, #0
   11690:	bne	11684 <fila_back@@Base+0x20>
   11694:	ldr	r0, [r1]
   11698:	bx	lr

0001169c <fila_push@@Base>:
   1169c:	push	{r4, r5, fp, lr}
   116a0:	add	fp, sp, #8
   116a4:	cmp	r0, #0
   116a8:	beq	116ec <fila_push@@Base+0x50>
   116ac:	mov	r4, r0
   116b0:	ldr	r5, [r0]
   116b4:	mov	r0, r1
   116b8:	bl	11570 <fila_novo_elemento@@Base>
   116bc:	cmp	r0, #0
   116c0:	popeq	{r4, r5, fp, pc}
   116c4:	ldr	r1, [r4, #4]
   116c8:	add	r1, r1, #1
   116cc:	str	r1, [r4, #4]
   116d0:	cmp	r5, #0
   116d4:	beq	116f0 <fila_push@@Base+0x54>
   116d8:	mov	r1, r5
   116dc:	ldr	r5, [r5, #4]
   116e0:	cmp	r5, #0
   116e4:	bne	116d8 <fila_push@@Base+0x3c>
   116e8:	str	r0, [r1, #4]
   116ec:	pop	{r4, r5, fp, pc}
   116f0:	str	r0, [r4]
   116f4:	pop	{r4, r5, fp, pc}

000116f8 <fila_pop@@Base>:
   116f8:	push	{r4, sl, fp, lr}
   116fc:	add	fp, sp, #8
   11700:	cmp	r0, #0
   11704:	popeq	{r4, sl, fp, pc}
   11708:	ldr	r1, [r0, #4]
   1170c:	cmp	r1, #0
   11710:	beq	1173c <fila_pop@@Base+0x44>
   11714:	sub	r1, r1, #1
   11718:	str	r1, [r0, #4]
   1171c:	ldr	r4, [r0]
   11720:	ldr	r1, [r4, #4]
   11724:	str	r1, [r0]
   11728:	ldr	r0, [r4]
   1172c:	bl	117c8 <pilha_apaga@@Base>
   11730:	mov	r0, r4
   11734:	pop	{r4, sl, fp, lr}
   11738:	b	10b88 <free@plt>
   1173c:	pop	{r4, sl, fp, pc}

00011740 <pilha_novo_elemento@@Base>:
   11740:	push	{r4, r5, r6, sl, fp, lr}
   11744:	add	fp, sp, #16
   11748:	mov	r6, r0
   1174c:	mov	r0, #8
   11750:	bl	10bac <malloc@plt>
   11754:	mov	r4, #0
   11758:	cmp	r0, #0
   1175c:	beq	11788 <pilha_novo_elemento@@Base+0x48>
   11760:	mov	r5, r0
   11764:	vldr	s0, [r6, #4]
   11768:	ldr	r0, [r6]
   1176c:	bl	114d4 <contentor_novo@@Base>
   11770:	str	r0, [r5]
   11774:	cmp	r0, #0
   11778:	beq	11790 <pilha_novo_elemento@@Base+0x50>
   1177c:	mov	r0, #0
   11780:	str	r0, [r5, #4]
   11784:	mov	r4, r5
   11788:	mov	r0, r4
   1178c:	pop	{r4, r5, r6, sl, fp, pc}
   11790:	mov	r0, r5
   11794:	bl	10b88 <free@plt>
   11798:	mov	r0, r4
   1179c:	pop	{r4, r5, r6, sl, fp, pc}

000117a0 <pilha_nova@@Base>:
   117a0:	push	{fp, lr}
   117a4:	mov	fp, sp
   117a8:	mov	r0, #8
   117ac:	bl	10bac <malloc@plt>
   117b0:	cmp	r0, #0
   117b4:	moveq	r0, #0
   117b8:	movne	r1, #0
   117bc:	strne	r1, [r0]
   117c0:	strne	r1, [r0, #4]
   117c4:	pop	{fp, pc}

000117c8 <pilha_apaga@@Base>:
   117c8:	cmp	r0, #0
   117cc:	bxeq	lr
   117d0:	push	{r4, r5, fp, lr}
   117d4:	add	fp, sp, #8
   117d8:	mov	r4, r0
   117dc:	ldr	r5, [r4]
   117e0:	cmp	r5, #0
   117e4:	beq	11804 <pilha_apaga@@Base+0x3c>
   117e8:	ldr	r0, [r5, #4]
   117ec:	str	r0, [r4]
   117f0:	ldr	r0, [r5]
   117f4:	bl	11520 <contentor_apaga@@Base>
   117f8:	mov	r0, r5
   117fc:	bl	10b88 <free@plt>
   11800:	b	117dc <pilha_apaga@@Base+0x14>
   11804:	mov	r0, r4
   11808:	pop	{r4, r5, fp, lr}
   1180c:	b	10b88 <free@plt>

00011810 <pilha_tamanho@@Base>:
   11810:	cmp	r0, #0
   11814:	ldrne	r0, [r0, #4]
   11818:	mvneq	r0, #0
   1181c:	bx	lr

00011820 <pilha_top@@Base>:
   11820:	mov	r1, r0
   11824:	mov	r0, #0
   11828:	cmp	r1, #0
   1182c:	beq	11844 <pilha_top@@Base+0x24>
   11830:	ldr	r2, [r1, #4]
   11834:	cmp	r2, #0
   11838:	bxeq	lr
   1183c:	ldr	r0, [r1]
   11840:	ldr	r0, [r0]
   11844:	bx	lr

00011848 <pilha_push@@Base>:
   11848:	push	{r4, sl, fp, lr}
   1184c:	add	fp, sp, #8
   11850:	cmp	r0, #0
   11854:	popeq	{r4, sl, fp, pc}
   11858:	mov	r4, r0
   1185c:	mov	r0, r1
   11860:	bl	11740 <pilha_novo_elemento@@Base>
   11864:	cmp	r0, #0
   11868:	beq	11884 <pilha_push@@Base+0x3c>
   1186c:	ldm	r4, {r1, r2}
   11870:	add	r2, r2, #1
   11874:	str	r2, [r4, #4]
   11878:	cmp	r1, #0
   1187c:	strne	r1, [r0, #4]
   11880:	str	r0, [r4]
   11884:	pop	{r4, sl, fp, pc}

00011888 <pilha_pop@@Base>:
   11888:	push	{r4, sl, fp, lr}
   1188c:	add	fp, sp, #8
   11890:	cmp	r0, #0
   11894:	popeq	{r4, sl, fp, pc}
   11898:	ldr	r1, [r0, #4]
   1189c:	cmp	r1, #0
   118a0:	beq	118cc <pilha_pop@@Base+0x44>
   118a4:	ldr	r4, [r0]
   118a8:	ldr	r2, [r4, #4]
   118ac:	sub	r1, r1, #1
   118b0:	str	r2, [r0]
   118b4:	str	r1, [r0, #4]
   118b8:	ldr	r0, [r4]
   118bc:	bl	11520 <contentor_apaga@@Base>
   118c0:	mov	r0, r4
   118c4:	pop	{r4, sl, fp, lr}
   118c8:	b	10b88 <free@plt>
   118cc:	pop	{r4, sl, fp, pc}

000118d0 <__libc_csu_init@@Base>:
   118d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118d4:	mov	r7, r0
   118d8:	ldr	r6, [pc, #72]	; 11928 <__libc_csu_init@@Base+0x58>
   118dc:	ldr	r5, [pc, #72]	; 1192c <__libc_csu_init@@Base+0x5c>
   118e0:	add	r6, pc, r6
   118e4:	add	r5, pc, r5
   118e8:	sub	r6, r6, r5
   118ec:	mov	r8, r1
   118f0:	mov	r9, r2
   118f4:	bl	10b50 <calloc@plt-0x20>
   118f8:	asrs	r6, r6, #2
   118fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11900:	mov	r4, #0
   11904:	add	r4, r4, #1
   11908:	ldr	r3, [r5], #4
   1190c:	mov	r2, r9
   11910:	mov	r1, r8
   11914:	mov	r0, r7
   11918:	blx	r3
   1191c:	cmp	r6, r4
   11920:	bne	11904 <__libc_csu_init@@Base+0x34>
   11924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11928:	andeq	r0, r1, r4, lsr #12
   1192c:	andeq	r0, r1, ip, lsl r6

00011930 <__libc_csu_fini@@Base>:
   11930:	bx	lr

Disassembly of section .fini:

00011934 <.fini>:
   11934:	push	{r3, lr}
   11938:	pop	{r3, pc}
