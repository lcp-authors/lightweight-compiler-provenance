
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000ddc <_init>:
 ddc:	push	{r3, lr}
 de0:	bl	fdc <call_weak_fn>
 de4:	pop	{r3, pc}

Disassembly of section .plt:

00000de8 <.plt>:
 de8:	push	{lr}		; (str lr, [sp, #-4]!)
 dec:	ldr	lr, [pc, #4]	; df8 <.plt+0x10>
 df0:	add	lr, pc, lr
 df4:	ldr	pc, [lr, #8]!
 df8:	.word	0x0002f208

00000dfc <calloc@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #192512	; 0x2f000
 e04:	ldr	pc, [ip, #520]!	; 0x208

00000e08 <strcmp@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #192512	; 0x2f000
 e10:	ldr	pc, [ip, #512]!	; 0x200

00000e14 <__cxa_finalize@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #192512	; 0x2f000
 e1c:	ldr	pc, [ip, #504]!	; 0x1f8

00000e20 <printf@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #192512	; 0x2f000
 e28:	ldr	pc, [ip, #496]!	; 0x1f0

00000e2c <fopen@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #192512	; 0x2f000
 e34:	ldr	pc, [ip, #488]!	; 0x1e8

00000e38 <getprotobyname@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #192512	; 0x2f000
 e40:	ldr	pc, [ip, #480]!	; 0x1e0

00000e44 <longjmp@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #192512	; 0x2f000
 e4c:	ldr	pc, [ip, #472]!	; 0x1d8

00000e50 <_setjmp@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #192512	; 0x2f000
 e58:	ldr	pc, [ip, #464]!	; 0x1d0

00000e5c <free@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #192512	; 0x2f000
 e64:	ldr	pc, [ip, #456]!	; 0x1c8

00000e68 <getnetbyname@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #192512	; 0x2f000
 e70:	ldr	pc, [ip, #448]!	; 0x1c0

00000e74 <ferror@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #192512	; 0x2f000
 e7c:	ldr	pc, [ip, #440]!	; 0x1b8

00000e80 <memcpy@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #192512	; 0x2f000
 e88:	ldr	pc, [ip, #432]!	; 0x1b0

00000e8c <strdup@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #192512	; 0x2f000
 e94:	ldr	pc, [ip, #424]!	; 0x1a8

00000e98 <rewind@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #192512	; 0x2f000
 ea0:	ldr	pc, [ip, #416]!	; 0x1a0

00000ea4 <realloc@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #192512	; 0x2f000
 eac:	ldr	pc, [ip, #408]!	; 0x198

00000eb0 <fwrite@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #192512	; 0x2f000
 eb8:	ldr	pc, [ip, #400]!	; 0x190

00000ebc <fread@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #192512	; 0x2f000
 ec4:	ldr	pc, [ip, #392]!	; 0x188

00000ec8 <puts@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #192512	; 0x2f000
 ed0:	ldr	pc, [ip, #384]!	; 0x180

00000ed4 <malloc@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #192512	; 0x2f000
 edc:	ldr	pc, [ip, #376]!	; 0x178

00000ee0 <__gmon_start__@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #192512	; 0x2f000
 ee8:	ldr	pc, [ip, #368]!	; 0x170

00000eec <__ctype_b_loc@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #192512	; 0x2f000
 ef4:	ldr	pc, [ip, #360]!	; 0x168

00000ef8 <exit@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #192512	; 0x2f000
 f00:	ldr	pc, [ip, #352]!	; 0x160

00000f04 <strlen@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #192512	; 0x2f000
 f0c:	ldr	pc, [ip, #344]!	; 0x158

00000f10 <strchr@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #192512	; 0x2f000
 f18:	ldr	pc, [ip, #336]!	; 0x150

00000f1c <fprintf@plt>:
 f1c:	add	ip, pc, #0, 12
 f20:	add	ip, ip, #192512	; 0x2f000
 f24:	ldr	pc, [ip, #328]!	; 0x148

00000f28 <__errno_location@plt>:
 f28:	add	ip, pc, #0, 12
 f2c:	add	ip, ip, #192512	; 0x2f000
 f30:	ldr	pc, [ip, #320]!	; 0x140

00000f34 <getservbyname@plt>:
 f34:	add	ip, pc, #0, 12
 f38:	add	ip, ip, #192512	; 0x2f000
 f3c:	ldr	pc, [ip, #312]!	; 0x138

00000f40 <memset@plt>:
 f40:	add	ip, pc, #0, 12
 f44:	add	ip, ip, #192512	; 0x2f000
 f48:	ldr	pc, [ip, #304]!	; 0x130

00000f4c <putchar@plt>:
 f4c:	add	ip, pc, #0, 12
 f50:	add	ip, ip, #192512	; 0x2f000
 f54:	ldr	pc, [ip, #296]!	; 0x128

00000f58 <strncpy@plt>:
 f58:	add	ip, pc, #0, 12
 f5c:	add	ip, ip, #192512	; 0x2f000
 f60:	ldr	pc, [ip, #288]!	; 0x120

00000f64 <fileno@plt>:
 f64:	add	ip, pc, #0, 12
 f68:	add	ip, ip, #192512	; 0x2f000
 f6c:	ldr	pc, [ip, #280]!	; 0x118

00000f70 <sscanf@plt>:
 f70:	add	ip, pc, #0, 12
 f74:	add	ip, ip, #192512	; 0x2f000
 f78:	ldr	pc, [ip, #272]!	; 0x110

00000f7c <clearerr@plt>:
 f7c:	add	ip, pc, #0, 12
 f80:	add	ip, ip, #192512	; 0x2f000
 f84:	ldr	pc, [ip, #264]!	; 0x108

00000f88 <vsnprintf@plt>:
 f88:	add	ip, pc, #0, 12
 f8c:	add	ip, ip, #192512	; 0x2f000
 f90:	ldr	pc, [ip, #256]!	; 0x100

00000f94 <freeaddrinfo@plt>:
 f94:	add	ip, pc, #0, 12
 f98:	add	ip, ip, #192512	; 0x2f000
 f9c:	ldr	pc, [ip, #248]!	; 0xf8

00000fa0 <getaddrinfo@plt>:
 fa0:	add	ip, pc, #0, 12
 fa4:	add	ip, ip, #192512	; 0x2f000
 fa8:	ldr	pc, [ip, #240]!	; 0xf0

00000fac <gethostbyname@plt>:
 fac:	add	ip, pc, #0, 12
 fb0:	add	ip, ip, #192512	; 0x2f000
 fb4:	ldr	pc, [ip, #232]!	; 0xe8

00000fb8 <isatty@plt>:
 fb8:	add	ip, pc, #0, 12
 fbc:	add	ip, ip, #192512	; 0x2f000
 fc0:	ldr	pc, [ip, #224]!	; 0xe0

00000fc4 <abort@plt>:
 fc4:	add	ip, pc, #0, 12
 fc8:	add	ip, ip, #192512	; 0x2f000
 fcc:	ldr	pc, [ip, #216]!	; 0xd8

00000fd0 <getc@plt>:
 fd0:	add	ip, pc, #0, 12
 fd4:	add	ip, ip, #192512	; 0x2f000
 fd8:	ldr	pc, [ip, #208]!	; 0xd0

Disassembly of section .text:

00000fdc <call_weak_fn>:
     fdc:	ldr	r3, [pc, #20]	; ff8 <call_weak_fn+0x1c>
     fe0:	ldr	r2, [pc, #20]	; ffc <call_weak_fn+0x20>
     fe4:	add	r3, pc, r3
     fe8:	ldr	r2, [r3, r2]
     fec:	cmp	r2, #0
     ff0:	bxeq	lr
     ff4:	b	ee0 <__gmon_start__@plt>
     ff8:	.word	0x0002f014
     ffc:	.word	0x000000bc

00001000 <deregister_tm_clones>:
    1000:	ldr	r0, [pc, #44]	; 1034 <deregister_tm_clones+0x34>
    1004:	ldr	r3, [pc, #44]	; 1038 <deregister_tm_clones+0x38>
    1008:	add	r0, pc, r0
    100c:	add	r3, pc, r3
    1010:	cmp	r3, r0
    1014:	ldr	r3, [pc, #32]	; 103c <deregister_tm_clones+0x3c>
    1018:	add	r3, pc, r3
    101c:	bxeq	lr
    1020:	ldr	r2, [pc, #24]	; 1040 <deregister_tm_clones+0x40>
    1024:	ldr	r3, [r3, r2]
    1028:	cmp	r3, #0
    102c:	bxeq	lr
    1030:	bx	r3
    1034:	.word	0x0002f2f0
    1038:	.word	0x0002f2ec
    103c:	.word	0x0002efe0
    1040:	.word	0x000000b0

00001044 <register_tm_clones>:
    1044:	ldr	r0, [pc, #56]	; 1084 <register_tm_clones+0x40>
    1048:	ldr	r3, [pc, #56]	; 1088 <register_tm_clones+0x44>
    104c:	add	r0, pc, r0
    1050:	add	r3, pc, r3
    1054:	sub	r1, r3, r0
    1058:	ldr	r3, [pc, #44]	; 108c <register_tm_clones+0x48>
    105c:	asr	r1, r1, #2
    1060:	add	r3, pc, r3
    1064:	add	r1, r1, r1, lsr #31
    1068:	asrs	r1, r1, #1
    106c:	bxeq	lr
    1070:	ldr	r2, [pc, #24]	; 1090 <register_tm_clones+0x4c>
    1074:	ldr	r3, [r3, r2]
    1078:	cmp	r3, #0
    107c:	bxeq	lr
    1080:	bx	r3
    1084:	.word	0x0002f2ac
    1088:	.word	0x0002f2a8
    108c:	.word	0x0002ef98
    1090:	.word	0x000000cc

00001094 <__do_global_dtors_aux>:
    1094:	ldr	r3, [pc, #76]	; 10e8 <__do_global_dtors_aux+0x54>
    1098:	ldr	r2, [pc, #76]	; 10ec <__do_global_dtors_aux+0x58>
    109c:	add	r3, pc, r3
    10a0:	add	r2, pc, r2
    10a4:	ldrb	r3, [r3]
    10a8:	cmp	r3, #0
    10ac:	bxne	lr
    10b0:	ldr	r3, [pc, #56]	; 10f0 <__do_global_dtors_aux+0x5c>
    10b4:	push	{r4, lr}
    10b8:	ldr	r3, [r2, r3]
    10bc:	cmp	r3, #0
    10c0:	beq	10d0 <__do_global_dtors_aux+0x3c>
    10c4:	ldr	r3, [pc, #40]	; 10f4 <__do_global_dtors_aux+0x60>
    10c8:	ldr	r0, [pc, r3]
    10cc:	bl	e14 <__cxa_finalize@plt>
    10d0:	bl	1000 <deregister_tm_clones>
    10d4:	ldr	r3, [pc, #28]	; 10f8 <__do_global_dtors_aux+0x64>
    10d8:	mov	r2, #1
    10dc:	add	r3, pc, r3
    10e0:	strb	r2, [r3]
    10e4:	pop	{r4, pc}
    10e8:	.word	0x0002f25c
    10ec:	.word	0x0002ef58
    10f0:	.word	0x000000ac
    10f4:	.word	0x0002f000
    10f8:	.word	0x0002f21c

000010fc <frame_dummy>:
    10fc:	b	1044 <register_tm_clones>

00001100 <sfbpf_filter>:
    1100:	push	{r4, r5, r6, r7, fp, lr}
    1104:	add	fp, sp, #16
    1108:	sub	sp, sp, #64	; 0x40
    110c:	cmp	r0, #0
    1110:	mvneq	r0, #0
    1114:	subeq	sp, fp, #16
    1118:	popeq	{r4, r5, r6, r7, fp, pc}
    111c:	sub	ip, r0, #8
    1120:	mov	r4, #0
    1124:	mov	lr, #0
    1128:	b	1134 <sfbpf_filter+0x34>
    112c:	add	ip, ip, r4, lsl #3
    1130:	mov	r4, r0
    1134:	mov	r0, r4
    1138:	mov	r5, ip
    113c:	ldrh	r4, [ip, #8]!
    1140:	cmp	r4, #177	; 0xb1
    1144:	bhi	16c4 <sfbpf_filter+0x5c4>
    1148:	add	r6, pc, #8
    114c:	ldr	r7, [r6, r4, lsl #2]
    1150:	mov	r4, r2
    1154:	add	pc, r6, r7
    1158:	.word	0x000002c8
    115c:	.word	0x00000368
    1160:	.word	0x00000374
    1164:	.word	0x00000388
    1168:	.word	0x0000039c
    116c:	.word	0x000003a8
    1170:	.word	0x00000554
    1174:	.word	0x00000318
    1178:	.word	0x0000056c
    117c:	.word	0x0000056c
    1180:	.word	0x0000056c
    1184:	.word	0x0000056c
    1188:	.word	0x000003b0
    118c:	.word	0x0000056c
    1190:	.word	0x0000056c
    1194:	.word	0x0000056c
    1198:	.word	0x0000056c
    119c:	.word	0x0000056c
    11a0:	.word	0x0000056c
    11a4:	.word	0x0000056c
    11a8:	.word	0x000003b8
    11ac:	.word	0x000003c4
    11b0:	.word	0x00000558
    11b4:	.word	0x0000056c
    11b8:	.word	0x0000056c
    11bc:	.word	0x0000056c
    11c0:	.word	0x0000056c
    11c4:	.word	0x0000056c
    11c8:	.word	0x00000324
    11cc:	.word	0x000003dc
    11d0:	.word	0x0000056c
    11d4:	.word	0x0000056c
    11d8:	.word	0x000003f0
    11dc:	.word	0x0000056c
    11e0:	.word	0x0000056c
    11e4:	.word	0x0000056c
    11e8:	.word	0x000003f8
    11ec:	.word	0x00000404
    11f0:	.word	0x0000056c
    11f4:	.word	0x0000056c
    11f8:	.word	0x0000041c
    11fc:	.word	0x0000056c
    1200:	.word	0x0000056c
    1204:	.word	0x0000056c
    1208:	.word	0x00000424
    120c:	.word	0x0000042c
    1210:	.word	0x0000056c
    1214:	.word	0x0000056c
    1218:	.word	0x00000440
    121c:	.word	0x0000056c
    1220:	.word	0x0000056c
    1224:	.word	0x0000056c
    1228:	.word	0x00000454
    122c:	.word	0x00000460
    1230:	.word	0x0000056c
    1234:	.word	0x0000056c
    1238:	.word	0x0000056c
    123c:	.word	0x0000056c
    1240:	.word	0x0000056c
    1244:	.word	0x0000056c
    1248:	.word	0x00000478
    124c:	.word	0x00000488
    1250:	.word	0x0000056c
    1254:	.word	0x0000056c
    1258:	.word	0x0000049c
    125c:	.word	0x0000056c
    1260:	.word	0x0000056c
    1264:	.word	0x0000056c
    1268:	.word	0x0000053c
    126c:	.word	0x0000032c
    1270:	.word	0x0000056c
    1274:	.word	0x0000056c
    1278:	.word	0x000004bc
    127c:	.word	0x0000056c
    1280:	.word	0x0000056c
    1284:	.word	0x0000056c
    1288:	.word	0x000004e4
    128c:	.word	0x000004ec
    1290:	.word	0x0000056c
    1294:	.word	0x0000056c
    1298:	.word	0x00000500
    129c:	.word	0x0000056c
    12a0:	.word	0x0000056c
    12a4:	.word	0x0000056c
    12a8:	.word	0x00000518
    12ac:	.word	0x0000056c
    12b0:	.word	0x0000056c
    12b4:	.word	0x0000056c
    12b8:	.word	0x0000056c
    12bc:	.word	0x0000056c
    12c0:	.word	0x0000056c
    12c4:	.word	0x0000056c
    12c8:	.word	0x00000344
    12cc:	.word	0x0000056c
    12d0:	.word	0x0000056c
    12d4:	.word	0x0000056c
    12d8:	.word	0x0000034c
    12dc:	.word	0x000002d0
    12e0:	.word	0x0000056c
    12e4:	.word	0x0000056c
    12e8:	.word	0x000002e4
    12ec:	.word	0x0000056c
    12f0:	.word	0x0000056c
    12f4:	.word	0x0000056c
    12f8:	.word	0x0000056c
    12fc:	.word	0x0000056c
    1300:	.word	0x0000056c
    1304:	.word	0x0000056c
    1308:	.word	0x000002f0
    130c:	.word	0x0000056c
    1310:	.word	0x0000056c
    1314:	.word	0x0000056c
    1318:	.word	0x0000056c
    131c:	.word	0x0000056c
    1320:	.word	0x0000056c
    1324:	.word	0x0000056c
    1328:	.word	0x00000548
    132c:	.word	0x0000056c
    1330:	.word	0x0000056c
    1334:	.word	0x0000056c
    1338:	.word	0x0000056c
    133c:	.word	0x0000056c
    1340:	.word	0x0000056c
    1344:	.word	0x0000056c
    1348:	.word	0x00000524
    134c:	.word	0x0000056c
    1350:	.word	0x0000056c
    1354:	.word	0x0000056c
    1358:	.word	0xffffffdc
    135c:	.word	0x0000035c
    1360:	.word	0x0000056c
    1364:	.word	0x0000056c
    1368:	.word	0x0000052c
    136c:	.word	0x0000056c
    1370:	.word	0x0000056c
    1374:	.word	0x00000534
    1378:	.word	0x0000056c
    137c:	.word	0x0000056c
    1380:	.word	0x0000056c
    1384:	.word	0x0000056c
    1388:	.word	0x0000056c
    138c:	.word	0x0000056c
    1390:	.word	0x0000056c
    1394:	.word	0x0000056c
    1398:	.word	0x0000056c
    139c:	.word	0x0000056c
    13a0:	.word	0x0000056c
    13a4:	.word	0x0000056c
    13a8:	.word	0x0000056c
    13ac:	.word	0x0000056c
    13b0:	.word	0x0000056c
    13b4:	.word	0x0000056c
    13b8:	.word	0x0000056c
    13bc:	.word	0x0000056c
    13c0:	.word	0x0000056c
    13c4:	.word	0x0000056c
    13c8:	.word	0x0000056c
    13cc:	.word	0x0000056c
    13d0:	.word	0x0000056c
    13d4:	.word	0x0000056c
    13d8:	.word	0x0000056c
    13dc:	.word	0x0000056c
    13e0:	.word	0x0000056c
    13e4:	.word	0x0000056c
    13e8:	.word	0x0000056c
    13ec:	.word	0x0000056c
    13f0:	.word	0x0000056c
    13f4:	.word	0x0000056c
    13f8:	.word	0x0000056c
    13fc:	.word	0x0000056c
    1400:	.word	0x0000056c
    1404:	.word	0x0000056c
    1408:	.word	0x0000056c
    140c:	.word	0x0000056c
    1410:	.word	0x0000056c
    1414:	.word	0x0000056c
    1418:	.word	0x0000056c
    141c:	.word	0x000002f8
    1420:	ldr	r4, [r5, #12]
    1424:	b	1134 <sfbpf_filter+0x34>
    1428:	ldr	r7, [r5, #12]
    142c:	mov	r6, sp
    1430:	ldr	lr, [r6, r7, lsl #2]
    1434:	mov	r4, r0
    1438:	b	1134 <sfbpf_filter+0x34>
    143c:	ldr	r4, [r5, #12]
    1440:	lsl	r4, r0, r4
    1444:	b	1134 <sfbpf_filter+0x34>
    1448:	lsl	r4, r0, lr
    144c:	b	1134 <sfbpf_filter+0x34>
    1450:	ldr	r5, [r5, #12]
    1454:	cmp	r5, r3
    1458:	bcs	16b8 <sfbpf_filter+0x5b8>
    145c:	ldrb	r7, [r1, r5]
    1460:	mov	r6, #60	; 0x3c
    1464:	and	lr, r6, r7, lsl #2
    1468:	mov	r4, r0
    146c:	b	1134 <sfbpf_filter+0x34>
    1470:	mov	r4, r0
    1474:	mov	lr, r0
    1478:	b	1134 <sfbpf_filter+0x34>
    147c:	sub	r4, r0, lr
    1480:	b	1134 <sfbpf_filter+0x34>
    1484:	ldr	r4, [r5, #12]
    1488:	mov	r6, #10
    148c:	tst	r4, r0
    1490:	movweq	r6, #11
    1494:	ldrb	r4, [r5, r6]
    1498:	b	112c <sfbpf_filter+0x2c>
    149c:	and	r4, lr, r0
    14a0:	b	1134 <sfbpf_filter+0x34>
    14a4:	ldr	r0, [r5, #12]
    14a8:	mov	r4, sp
    14ac:	ldr	r4, [r4, r0, lsl #2]
    14b0:	b	1134 <sfbpf_filter+0x34>
    14b4:	mov	r4, r0
    14b8:	mov	lr, r2
    14bc:	b	1134 <sfbpf_filter+0x34>
    14c0:	ldr	lr, [r5, #12]
    14c4:	mov	r4, r0
    14c8:	b	1134 <sfbpf_filter+0x34>
    14cc:	ldr	r4, [r5, #12]
    14d0:	mov	r5, sp
    14d4:	str	r0, [r5, r4, lsl #2]
    14d8:	mov	r4, r0
    14dc:	b	1134 <sfbpf_filter+0x34>
    14e0:	ldr	r4, [r5, #12]
    14e4:	mov	r5, sp
    14e8:	str	lr, [r5, r4, lsl #2]
    14ec:	mov	r4, r0
    14f0:	b	1134 <sfbpf_filter+0x34>
    14f4:	ldr	r4, [r5, #12]
    14f8:	add	r4, r4, r0
    14fc:	b	1134 <sfbpf_filter+0x34>
    1500:	ldr	r4, [r5, #12]
    1504:	b	112c <sfbpf_filter+0x2c>
    1508:	add	r4, lr, r0
    150c:	b	1134 <sfbpf_filter+0x34>
    1510:	ldr	r4, [r5, #12]
    1514:	sub	r4, r0, r4
    1518:	b	1134 <sfbpf_filter+0x34>
    151c:	ldr	r4, [r5, #12]
    1520:	mov	r6, #11
    1524:	cmp	r0, r4
    1528:	movweq	r6, #10
    152c:	ldrb	r4, [r5, r6]
    1530:	b	112c <sfbpf_filter+0x2c>
    1534:	mov	r4, #11
    1538:	cmp	r0, lr
    153c:	movweq	r4, #10
    1540:	ldrb	r4, [r5, r4]
    1544:	b	112c <sfbpf_filter+0x2c>
    1548:	ldr	r0, [r5, #12]
    154c:	b	15fc <sfbpf_filter+0x4fc>
    1550:	ldr	r4, [r5, #12]
    1554:	mul	r4, r4, r0
    1558:	b	1134 <sfbpf_filter+0x34>
    155c:	ldr	r4, [r5, #12]
    1560:	mov	r6, #11
    1564:	cmp	r0, r4
    1568:	movwhi	r6, #10
    156c:	ldrb	r4, [r5, r6]
    1570:	b	112c <sfbpf_filter+0x2c>
    1574:	ldr	r0, [r5, #12]
    1578:	b	161c <sfbpf_filter+0x51c>
    157c:	mul	r4, lr, r0
    1580:	b	1134 <sfbpf_filter+0x34>
    1584:	mov	r4, #11
    1588:	cmp	r0, lr
    158c:	movwhi	r4, #10
    1590:	ldrb	r4, [r5, r4]
    1594:	b	112c <sfbpf_filter+0x2c>
    1598:	ldr	r0, [r5, #12]
    159c:	cmp	r0, r3
    15a0:	bcs	16b8 <sfbpf_filter+0x5b8>
    15a4:	ldrb	r4, [r1, r0]
    15a8:	b	1134 <sfbpf_filter+0x34>
    15ac:	ldr	r4, [r5, #12]
    15b0:	udiv	r4, r0, r4
    15b4:	b	1134 <sfbpf_filter+0x34>
    15b8:	ldr	r4, [r5, #12]
    15bc:	mov	r6, #10
    15c0:	cmp	r0, r4
    15c4:	movwcc	r6, #11
    15c8:	ldrb	r4, [r5, r6]
    15cc:	b	112c <sfbpf_filter+0x2c>
    15d0:	cmp	lr, #0
    15d4:	beq	16b8 <sfbpf_filter+0x5b8>
    15d8:	udiv	r4, r0, lr
    15dc:	b	1134 <sfbpf_filter+0x34>
    15e0:	mov	r4, #10
    15e4:	cmp	r0, lr
    15e8:	movwcc	r4, #11
    15ec:	ldrb	r4, [r5, r4]
    15f0:	b	112c <sfbpf_filter+0x2c>
    15f4:	ldr	r0, [r5, #12]
    15f8:	add	r0, r0, lr
    15fc:	add	r4, r0, #4
    1600:	cmp	r4, r3
    1604:	bhi	16b8 <sfbpf_filter+0x5b8>
    1608:	ldr	r0, [r1, r0]
    160c:	rev	r4, r0
    1610:	b	1134 <sfbpf_filter+0x34>
    1614:	ldr	r0, [r5, #12]
    1618:	add	r0, r0, lr
    161c:	add	r4, r0, #2
    1620:	cmp	r4, r3
    1624:	bhi	16b8 <sfbpf_filter+0x5b8>
    1628:	mov	r4, r1
    162c:	ldrb	r0, [r4, r0]!
    1630:	ldrb	r4, [r4, #1]
    1634:	orr	r4, r4, r0, lsl #8
    1638:	b	1134 <sfbpf_filter+0x34>
    163c:	orr	r4, lr, r0
    1640:	b	1134 <sfbpf_filter+0x34>
    1644:	mov	r4, #10
    1648:	tst	lr, r0
    164c:	movweq	r4, #11
    1650:	ldrb	r4, [r5, r4]
    1654:	b	112c <sfbpf_filter+0x2c>
    1658:	ldr	r0, [r5, #12]
    165c:	add	r0, r0, lr
    1660:	cmp	r0, r3
    1664:	bcs	16b8 <sfbpf_filter+0x5b8>
    1668:	ldrb	r4, [r1, r0]
    166c:	b	1134 <sfbpf_filter+0x34>
    1670:	ldr	r4, [r5, #12]
    1674:	and	r4, r4, r0
    1678:	b	1134 <sfbpf_filter+0x34>
    167c:	lsr	r4, r0, lr
    1680:	b	1134 <sfbpf_filter+0x34>
    1684:	rsb	r4, r0, #0
    1688:	b	1134 <sfbpf_filter+0x34>
    168c:	mov	r4, lr
    1690:	b	1134 <sfbpf_filter+0x34>
    1694:	ldr	r4, [r5, #12]
    1698:	orr	r4, r4, r0
    169c:	b	1134 <sfbpf_filter+0x34>
    16a0:	ldr	r4, [r5, #12]
    16a4:	lsr	r4, r0, r4
    16a8:	b	1134 <sfbpf_filter+0x34>
    16ac:	ldr	r0, [r5, #12]
    16b0:	sub	sp, fp, #16
    16b4:	pop	{r4, r5, r6, r7, fp, pc}
    16b8:	mov	r0, #0
    16bc:	sub	sp, fp, #16
    16c0:	pop	{r4, r5, r6, r7, fp, pc}
    16c4:	bl	fc4 <abort@plt>

000016c8 <sfbpf_validate>:
    16c8:	push	{r4, r5, fp, lr}
    16cc:	add	fp, sp, #8
    16d0:	mov	ip, r0
    16d4:	mov	r0, #0
    16d8:	cmp	r1, #1
    16dc:	blt	17dc <sfbpf_validate+0x114>
    16e0:	add	r3, ip, #4
    16e4:	mov	r2, #1
    16e8:	mov	lr, r2
    16ec:	ldrh	r2, [r3, #-4]
    16f0:	and	r4, r2, #7
    16f4:	sub	r4, r4, #2
    16f8:	cmp	r4, #5
    16fc:	bhi	1734 <sfbpf_validate+0x6c>
    1700:	add	r5, pc, #4
    1704:	ldr	r4, [r5, r4, lsl #2]
    1708:	add	pc, r5, r4
    170c:	.word	0x00000018
    1710:	.word	0x00000018
    1714:	.word	0x00000040
    1718:	.word	0x00000068
    171c:	.word	0x000000a8
    1720:	.word	0x000000a8
    1724:	ldr	r2, [r3]
    1728:	cmp	r2, #15
    172c:	bls	17b4 <sfbpf_validate+0xec>
    1730:	b	17dc <sfbpf_validate+0x114>
    1734:	ubfx	r2, r2, #5, #3
    1738:	cmp	r2, #5
    173c:	bhi	17dc <sfbpf_validate+0x114>
    1740:	cmp	r2, #3
    1744:	bne	17b4 <sfbpf_validate+0xec>
    1748:	b	1724 <sfbpf_validate+0x5c>
    174c:	ubfx	r4, r2, #4, #4
    1750:	cmp	r4, #8
    1754:	bhi	17dc <sfbpf_validate+0x114>
    1758:	cmp	r4, #3
    175c:	tsteq	r2, #24
    1760:	bne	17b4 <sfbpf_validate+0xec>
    1764:	ldr	r2, [r3]
    1768:	cmp	r2, #0
    176c:	bne	17b4 <sfbpf_validate+0xec>
    1770:	b	17dc <sfbpf_validate+0x114>
    1774:	ubfx	r2, r2, #4, #4
    1778:	sub	r4, r2, #1
    177c:	cmp	r4, #4
    1780:	bcs	179c <sfbpf_validate+0xd4>
    1784:	ldrb	r2, [r3, #-2]
    1788:	add	r2, lr, r2
    178c:	cmp	r2, r1
    1790:	bcs	17dc <sfbpf_validate+0x114>
    1794:	ldrb	r2, [r3, #-1]
    1798:	b	17a8 <sfbpf_validate+0xe0>
    179c:	cmp	r2, #0
    17a0:	bne	17dc <sfbpf_validate+0x114>
    17a4:	ldr	r2, [r3]
    17a8:	add	r2, lr, r2
    17ac:	cmp	r2, r1
    17b0:	popcs	{r4, r5, fp, pc}
    17b4:	add	r3, r3, #8
    17b8:	add	r2, lr, #1
    17bc:	cmp	lr, r1
    17c0:	bcc	16e8 <sfbpf_validate+0x20>
    17c4:	add	r0, ip, r1, lsl #3
    17c8:	ldrh	r0, [r0, #-8]
    17cc:	and	r0, r0, #7
    17d0:	sub	r0, r0, #6
    17d4:	clz	r0, r0
    17d8:	lsr	r0, r0, #5
    17dc:	pop	{r4, r5, fp, pc}

000017e0 <sfbpf_print>:
    17e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    17e4:	add	fp, sp, #24
    17e8:	mov	r9, r1
    17ec:	mov	r5, r0
    17f0:	ldr	r0, [pc, #100]	; 185c <sfbpf_print+0x7c>
    17f4:	add	r0, pc, r0
    17f8:	bl	ec8 <puts@plt>
    17fc:	ldr	r0, [r5]
    1800:	cmp	r0, #0
    1804:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    1808:	mov	r6, #0
    180c:	ldr	r8, [pc, #76]	; 1860 <sfbpf_print+0x80>
    1810:	add	r8, pc, r8
    1814:	mov	r7, #0
    1818:	ldr	r4, [r5, #4]
    181c:	mov	r0, r8
    1820:	mov	r1, r7
    1824:	bl	e20 <printf@plt>
    1828:	add	r0, r4, r6
    182c:	cmp	r9, #0
    1830:	beq	183c <sfbpf_print+0x5c>
    1834:	bl	1864 <print_instruction>
    1838:	b	1844 <sfbpf_print+0x64>
    183c:	mov	r1, r7
    1840:	bl	19e4 <pretty_print_instruction>
    1844:	add	r6, r6, #8
    1848:	add	r7, r7, #1
    184c:	ldr	r0, [r5]
    1850:	cmp	r7, r0
    1854:	bcc	1818 <sfbpf_print+0x38>
    1858:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    185c:	.word	0x00010ac1
    1860:	.word	0x000108f8

00001864 <print_instruction>:
    1864:	push	{r4, r5, r6, sl, fp, lr}
    1868:	add	fp, sp, #16
    186c:	mov	r4, r0
    1870:	ldrh	r0, [r0]
    1874:	and	r1, r0, #7
    1878:	ldr	r0, [pc, #300]	; 19ac <print_instruction+0x148>
    187c:	add	r0, pc, r0
    1880:	bl	1a60 <get_code_name>
    1884:	mov	r1, r0
    1888:	ldr	r0, [pc, #288]	; 19b0 <print_instruction+0x14c>
    188c:	add	r0, pc, r0
    1890:	bl	e20 <printf@plt>
    1894:	ldrh	r6, [r4]
    1898:	and	r0, r6, #7
    189c:	cmp	r0, #7
    18a0:	bhi	1990 <print_instruction+0x12c>
    18a4:	add	r1, pc, #4
    18a8:	ldr	r0, [r1, r0, lsl #2]
    18ac:	add	pc, r1, r0
    18b0:	.word	0x00000020
    18b4:	.word	0x00000020
    18b8:	.word	0x000000e0
    18bc:	.word	0x000000e0
    18c0:	.word	0x00000054
    18c4:	.word	0x00000064
    18c8:	.word	0x000000a0
    18cc:	.word	0x000000c0
    18d0:	and	r1, r6, #24
    18d4:	ldr	r0, [pc, #216]	; 19b4 <print_instruction+0x150>
    18d8:	add	r0, pc, r0
    18dc:	bl	1a60 <get_code_name>
    18e0:	mov	r5, r0
    18e4:	and	r1, r6, #224	; 0xe0
    18e8:	ldr	r0, [pc, #200]	; 19b8 <print_instruction+0x154>
    18ec:	add	r0, pc, r0
    18f0:	bl	1a60 <get_code_name>
    18f4:	mov	r2, r0
    18f8:	ldr	r0, [pc, #188]	; 19bc <print_instruction+0x158>
    18fc:	add	r0, pc, r0
    1900:	b	1944 <print_instruction+0xe0>
    1904:	and	r1, r6, #240	; 0xf0
    1908:	ldr	r0, [pc, #176]	; 19c0 <print_instruction+0x15c>
    190c:	add	r0, pc, r0
    1910:	b	1920 <print_instruction+0xbc>
    1914:	and	r1, r6, #240	; 0xf0
    1918:	ldr	r0, [pc, #172]	; 19cc <print_instruction+0x168>
    191c:	add	r0, pc, r0
    1920:	bl	1a60 <get_code_name>
    1924:	mov	r5, r0
    1928:	and	r1, r6, #8
    192c:	ldr	r0, [pc, #144]	; 19c4 <print_instruction+0x160>
    1930:	add	r0, pc, r0
    1934:	bl	1a60 <get_code_name>
    1938:	mov	r2, r0
    193c:	ldr	r0, [pc, #132]	; 19c8 <print_instruction+0x164>
    1940:	add	r0, pc, r0
    1944:	mov	r1, r5
    1948:	bl	e20 <printf@plt>
    194c:	b	1990 <print_instruction+0x12c>
    1950:	and	r1, r6, #24
    1954:	ldr	r0, [pc, #116]	; 19d0 <print_instruction+0x16c>
    1958:	add	r0, pc, r0
    195c:	bl	1a60 <get_code_name>
    1960:	mov	r1, r0
    1964:	ldr	r0, [pc, #104]	; 19d4 <print_instruction+0x170>
    1968:	add	r0, pc, r0
    196c:	b	198c <print_instruction+0x128>
    1970:	and	r1, r6, #248	; 0xf8
    1974:	ldr	r0, [pc, #92]	; 19d8 <print_instruction+0x174>
    1978:	add	r0, pc, r0
    197c:	bl	1a60 <get_code_name>
    1980:	mov	r1, r0
    1984:	ldr	r0, [pc, #80]	; 19dc <print_instruction+0x178>
    1988:	add	r0, pc, r0
    198c:	bl	e20 <printf@plt>
    1990:	ldr	r3, [r4, #4]
    1994:	ldrb	r1, [r4, #2]
    1998:	ldrb	r2, [r4, #3]
    199c:	ldr	r0, [pc, #60]	; 19e0 <print_instruction+0x17c>
    19a0:	add	r0, pc, r0
    19a4:	pop	{r4, r5, r6, sl, fp, lr}
    19a8:	b	e20 <printf@plt>
    19ac:	.word	0x0002e850
    19b0:	.word	0x000109f5
    19b4:	.word	0x0002e83c
    19b8:	.word	0x0002e848
    19bc:	.word	0x00010812
    19c0:	.word	0x0002e860
    19c4:	.word	0x0002e88c
    19c8:	.word	0x000107df
    19cc:	.word	0x0002e8b8
    19d0:	.word	0x0002e8ac
    19d4:	.word	0x000107c5
    19d8:	.word	0x0002e8ac
    19dc:	.word	0x000107ae
    19e0:	.word	0x0001079d

000019e4 <pretty_print_instruction>:
    19e4:	ldrh	r2, [r0]
    19e8:	and	r2, r2, #7
    19ec:	sub	r2, r2, #1
    19f0:	cmp	r2, #6
    19f4:	bhi	1a24 <pretty_print_instruction+0x40>
    19f8:	add	r3, pc, #4
    19fc:	ldr	r2, [r3, r2, lsl #2]
    1a00:	add	pc, r3, r2
    1a04:	.word	0x0000001c
    1a08:	.word	0x00000024
    1a0c:	.word	0x00000034
    1a10:	.word	0x00000044
    1a14:	.word	0x00000048
    1a18:	.word	0x0000004c
    1a1c:	.word	0x00000050
    1a20:	b	1b8c <print_ldx>
    1a24:	b	1aa4 <print_ld>
    1a28:	ldr	r1, [r0, #4]
    1a2c:	ldr	r0, [pc, #36]	; 1a58 <pretty_print_instruction+0x74>
    1a30:	add	r0, pc, r0
    1a34:	b	e20 <printf@plt>
    1a38:	ldr	r1, [r0, #4]
    1a3c:	ldr	r0, [pc, #24]	; 1a5c <pretty_print_instruction+0x78>
    1a40:	add	r0, pc, r0
    1a44:	b	e20 <printf@plt>
    1a48:	b	1c38 <print_alu>
    1a4c:	b	1d68 <print_jmp>
    1a50:	b	1e74 <print_ret>
    1a54:	b	1f04 <print_misc>
    1a58:	.word	0x000107ac
    1a5c:	.word	0x000107ad

00001a60 <get_code_name>:
    1a60:	mov	r2, r0
    1a64:	ldr	r0, [r0, #4]
    1a68:	cmp	r0, #0
    1a6c:	beq	1a9c <get_code_name+0x3c>
    1a70:	ldr	r3, [r2]
    1a74:	cmp	r3, r1
    1a78:	bxeq	lr
    1a7c:	add	r2, r2, #8
    1a80:	ldr	r0, [r2, #4]
    1a84:	cmp	r0, #0
    1a88:	beq	1a9c <get_code_name+0x3c>
    1a8c:	ldr	r3, [r2], #8
    1a90:	cmp	r3, r1
    1a94:	bne	1a80 <get_code_name+0x20>
    1a98:	bx	lr
    1a9c:	mov	r0, #0
    1aa0:	bx	lr

00001aa4 <print_ld>:
    1aa4:	push	{r4, sl, fp, lr}
    1aa8:	add	fp, sp, #8
    1aac:	mov	r4, r0
    1ab0:	ldr	r0, [pc, #184]	; 1b70 <print_ld+0xcc>
    1ab4:	add	r0, pc, r0
    1ab8:	bl	e20 <printf@plt>
    1abc:	ldrh	r0, [r4]
    1ac0:	ubfx	r1, r0, #5, #3
    1ac4:	cmp	r1, #4
    1ac8:	bhi	1b00 <print_ld+0x5c>
    1acc:	add	r2, pc, #4
    1ad0:	ldr	r1, [r2, r1, lsl #2]
    1ad4:	add	pc, r2, r1
    1ad8:	.word	0x00000014
    1adc:	.word	0x00000034
    1ae0:	.word	0x0000004c
    1ae4:	.word	0x0000006c
    1ae8:	.word	0x00000080
    1aec:	ldr	r1, [r4, #4]
    1af0:	ldr	r0, [pc, #136]	; 1b80 <print_ld+0xdc>
    1af4:	add	r0, pc, r0
    1af8:	bl	e20 <printf@plt>
    1afc:	b	1b64 <print_ld+0xc0>
    1b00:	ldr	r0, [pc, #128]	; 1b88 <print_ld+0xe4>
    1b04:	add	r0, pc, r0
    1b08:	b	1b60 <print_ld+0xbc>
    1b0c:	ldr	r4, [r4, #4]
    1b10:	bl	1f74 <get_size>
    1b14:	mov	r2, r0
    1b18:	ldr	r0, [pc, #84]	; 1b74 <print_ld+0xd0>
    1b1c:	add	r0, pc, r0
    1b20:	b	1b38 <print_ld+0x94>
    1b24:	ldr	r4, [r4, #4]
    1b28:	bl	1f74 <get_size>
    1b2c:	mov	r2, r0
    1b30:	ldr	r0, [pc, #64]	; 1b78 <print_ld+0xd4>
    1b34:	add	r0, pc, r0
    1b38:	mov	r1, r4
    1b3c:	bl	e20 <printf@plt>
    1b40:	b	1b64 <print_ld+0xc0>
    1b44:	ldr	r1, [r4, #4]
    1b48:	ldr	r0, [pc, #52]	; 1b84 <print_ld+0xe0>
    1b4c:	add	r0, pc, r0
    1b50:	bl	e20 <printf@plt>
    1b54:	b	1b64 <print_ld+0xc0>
    1b58:	ldr	r0, [pc, #28]	; 1b7c <print_ld+0xd8>
    1b5c:	add	r0, pc, r0
    1b60:	bl	e20 <printf@plt>
    1b64:	mov	r0, #10
    1b68:	pop	{r4, sl, fp, lr}
    1b6c:	b	f4c <putchar@plt>
    1b70:	.word	0x0001074a
    1b74:	.word	0x000106ed
    1b78:	.word	0x000106de
    1b7c:	.word	0x000106c1
    1b80:	.word	0x00011367
    1b84:	.word	0x000106d5
    1b88:	.word	0x00010723

00001b8c <print_ldx>:
    1b8c:	push	{r4, sl, fp, lr}
    1b90:	add	fp, sp, #8
    1b94:	mov	r4, r0
    1b98:	ldr	r0, [pc, #132]	; 1c24 <print_ldx+0x98>
    1b9c:	add	r0, pc, r0
    1ba0:	bl	e20 <printf@plt>
    1ba4:	ldrh	r0, [r4]
    1ba8:	ubfx	r0, r0, #5, #3
    1bac:	cmp	r0, #5
    1bb0:	bhi	1c18 <print_ldx+0x8c>
    1bb4:	add	r1, pc, #4
    1bb8:	ldr	r0, [r1, r0, lsl #2]
    1bbc:	add	pc, r1, r0
    1bc0:	.word	0x00000018
    1bc4:	.word	0x00000058
    1bc8:	.word	0x00000058
    1bcc:	.word	0x00000028
    1bd0:	.word	0x00000038
    1bd4:	.word	0x00000048
    1bd8:	ldr	r1, [r4, #4]
    1bdc:	ldr	r0, [pc, #72]	; 1c2c <print_ldx+0xa0>
    1be0:	add	r0, pc, r0
    1be4:	b	1c14 <print_ldx+0x88>
    1be8:	ldr	r1, [r4, #4]
    1bec:	ldr	r0, [pc, #60]	; 1c30 <print_ldx+0xa4>
    1bf0:	add	r0, pc, r0
    1bf4:	b	1c14 <print_ldx+0x88>
    1bf8:	ldr	r0, [pc, #40]	; 1c28 <print_ldx+0x9c>
    1bfc:	add	r0, pc, r0
    1c00:	bl	e20 <printf@plt>
    1c04:	b	1c18 <print_ldx+0x8c>
    1c08:	ldr	r1, [r4, #4]
    1c0c:	ldr	r0, [pc, #32]	; 1c34 <print_ldx+0xa8>
    1c10:	add	r0, pc, r0
    1c14:	bl	e20 <printf@plt>
    1c18:	mov	r0, #10
    1c1c:	pop	{r4, sl, fp, lr}
    1c20:	b	f4c <putchar@plt>
    1c24:	.word	0x0001068f
    1c28:	.word	0x00010621
    1c2c:	.word	0x0001127b
    1c30:	.word	0x00010631
    1c34:	.word	0x00010626

00001c38 <print_alu>:
    1c38:	push	{r4, sl, fp, lr}
    1c3c:	add	fp, sp, #8
    1c40:	mov	r4, r0
    1c44:	ldrh	r0, [r0]
    1c48:	ubfx	r0, r0, #4, #4
    1c4c:	cmp	r0, #8
    1c50:	bhi	1c98 <print_alu+0x60>
    1c54:	ldr	r1, [pc, #220]	; 1d38 <print_alu+0x100>
    1c58:	add	r1, pc, r1
    1c5c:	add	r2, pc, #4
    1c60:	ldr	r0, [r2, r0, lsl #2]
    1c64:	add	pc, r2, r0
    1c68:	.word	0x00000080
    1c6c:	.word	0x00000024
    1c70:	.word	0x0000003c
    1c74:	.word	0x00000048
    1c78:	.word	0x00000054
    1c7c:	.word	0x00000060
    1c80:	.word	0x0000006c
    1c84:	.word	0x00000078
    1c88:	.word	0x000000c0
    1c8c:	ldr	r1, [pc, #168]	; 1d3c <print_alu+0x104>
    1c90:	add	r1, pc, r1
    1c94:	b	1ce8 <print_alu+0xb0>
    1c98:	ldr	r1, [pc, #188]	; 1d5c <print_alu+0x124>
    1c9c:	add	r1, pc, r1
    1ca0:	b	1ce8 <print_alu+0xb0>
    1ca4:	ldr	r1, [pc, #148]	; 1d40 <print_alu+0x108>
    1ca8:	add	r1, pc, r1
    1cac:	b	1ce8 <print_alu+0xb0>
    1cb0:	ldr	r1, [pc, #140]	; 1d44 <print_alu+0x10c>
    1cb4:	add	r1, pc, r1
    1cb8:	b	1ce8 <print_alu+0xb0>
    1cbc:	ldr	r1, [pc, #132]	; 1d48 <print_alu+0x110>
    1cc0:	add	r1, pc, r1
    1cc4:	b	1ce8 <print_alu+0xb0>
    1cc8:	ldr	r1, [pc, #124]	; 1d4c <print_alu+0x114>
    1ccc:	add	r1, pc, r1
    1cd0:	b	1ce8 <print_alu+0xb0>
    1cd4:	ldr	r1, [pc, #116]	; 1d50 <print_alu+0x118>
    1cd8:	add	r1, pc, r1
    1cdc:	b	1ce8 <print_alu+0xb0>
    1ce0:	ldr	r1, [pc, #108]	; 1d54 <print_alu+0x11c>
    1ce4:	add	r1, pc, r1
    1ce8:	ldr	r0, [pc, #112]	; 1d60 <print_alu+0x128>
    1cec:	add	r0, pc, r0
    1cf0:	bl	e20 <printf@plt>
    1cf4:	ldrb	r0, [r4]
    1cf8:	tst	r0, #8
    1cfc:	bne	1d14 <print_alu+0xdc>
    1d00:	ldr	r1, [r4, #4]
    1d04:	ldr	r0, [pc, #88]	; 1d64 <print_alu+0x12c>
    1d08:	add	r0, pc, r0
    1d0c:	bl	e20 <printf@plt>
    1d10:	b	1d1c <print_alu+0xe4>
    1d14:	mov	r0, #88	; 0x58
    1d18:	bl	f4c <putchar@plt>
    1d1c:	mov	r0, #10
    1d20:	pop	{r4, sl, fp, lr}
    1d24:	b	f4c <putchar@plt>
    1d28:	ldr	r0, [pc, #40]	; 1d58 <print_alu+0x120>
    1d2c:	add	r0, pc, r0
    1d30:	pop	{r4, sl, fp, lr}
    1d34:	b	ec8 <puts@plt>
    1d38:	.word	0x000105ee
    1d3c:	.word	0x000105b8
    1d40:	.word	0x000105a2
    1d44:	.word	0x00010598
    1d48:	.word	0x0001058e
    1d4c:	.word	0x00010584
    1d50:	.word	0x0001057a
    1d54:	.word	0x00010571
    1d58:	.word	0x00010597
    1d5c:	.word	0x0001058b
    1d60:	.word	0x0001056c
    1d64:	.word	0x00011153

00001d68 <print_jmp>:
    1d68:	push	{r4, r5, fp, lr}
    1d6c:	add	fp, sp, #8
    1d70:	mov	r4, r1
    1d74:	mov	r5, r0
    1d78:	ldrh	r0, [r0]
    1d7c:	ubfx	r0, r0, #4, #4
    1d80:	cmp	r0, #4
    1d84:	bhi	1dcc <print_jmp+0x64>
    1d88:	ldr	r1, [pc, #192]	; 1e50 <print_jmp+0xe8>
    1d8c:	add	r1, pc, r1
    1d90:	add	r2, pc, #4
    1d94:	ldr	r0, [r2, r0, lsl #2]
    1d98:	add	pc, r2, r0
    1d9c:	.word	0x00000014
    1da0:	.word	0x0000005c
    1da4:	.word	0x0000003c
    1da8:	.word	0x00000048
    1dac:	.word	0x00000054
    1db0:	ldr	r0, [r5, #4]
    1db4:	add	r0, r4, r0
    1db8:	add	r1, r0, #1
    1dbc:	ldr	r0, [pc, #144]	; 1e54 <print_jmp+0xec>
    1dc0:	add	r0, pc, r0
    1dc4:	pop	{r4, r5, fp, lr}
    1dc8:	b	e20 <printf@plt>
    1dcc:	ldr	r1, [pc, #144]	; 1e64 <print_jmp+0xfc>
    1dd0:	add	r1, pc, r1
    1dd4:	b	1df8 <print_jmp+0x90>
    1dd8:	ldr	r1, [pc, #120]	; 1e58 <print_jmp+0xf0>
    1ddc:	add	r1, pc, r1
    1de0:	b	1df8 <print_jmp+0x90>
    1de4:	ldr	r1, [pc, #112]	; 1e5c <print_jmp+0xf4>
    1de8:	add	r1, pc, r1
    1dec:	b	1df8 <print_jmp+0x90>
    1df0:	ldr	r1, [pc, #104]	; 1e60 <print_jmp+0xf8>
    1df4:	add	r1, pc, r1
    1df8:	ldr	r0, [pc, #104]	; 1e68 <print_jmp+0x100>
    1dfc:	add	r0, pc, r0
    1e00:	bl	e20 <printf@plt>
    1e04:	ldrb	r0, [r5]
    1e08:	tst	r0, #8
    1e0c:	bne	1e24 <print_jmp+0xbc>
    1e10:	ldr	r1, [r5, #4]
    1e14:	ldr	r0, [pc, #80]	; 1e6c <print_jmp+0x104>
    1e18:	add	r0, pc, r0
    1e1c:	bl	e20 <printf@plt>
    1e20:	b	1e2c <print_jmp+0xc4>
    1e24:	mov	r0, #88	; 0x58
    1e28:	bl	f4c <putchar@plt>
    1e2c:	ldrb	r0, [r5, #2]
    1e30:	ldrb	r2, [r5, #3]
    1e34:	add	r3, r4, #1
    1e38:	add	r1, r3, r0
    1e3c:	add	r2, r3, r2
    1e40:	ldr	r0, [pc, #40]	; 1e70 <print_jmp+0x108>
    1e44:	add	r0, pc, r0
    1e48:	pop	{r4, r5, fp, lr}
    1e4c:	b	e20 <printf@plt>
    1e50:	.word	0x000104e7
    1e54:	.word	0x000104a9
    1e58:	.word	0x0001047a
    1e5c:	.word	0x0001048e
    1e60:	.word	0x0001045c
    1e64:	.word	0x00010457
    1e68:	.word	0x0001047d
    1e6c:	.word	0x00011043
    1e70:	.word	0x00010441

00001e74 <print_ret>:
    1e74:	push	{r4, sl, fp, lr}
    1e78:	add	fp, sp, #8
    1e7c:	mov	r4, r0
    1e80:	ldr	r0, [pc, #108]	; 1ef4 <print_ret+0x80>
    1e84:	add	r0, pc, r0
    1e88:	bl	e20 <printf@plt>
    1e8c:	ldrh	r0, [r4]
    1e90:	and	r0, r0, #24
    1e94:	cmp	r0, #16
    1e98:	beq	1ec0 <print_ret+0x4c>
    1e9c:	cmp	r0, #8
    1ea0:	beq	1ecc <print_ret+0x58>
    1ea4:	cmp	r0, #0
    1ea8:	bne	1ed8 <print_ret+0x64>
    1eac:	ldr	r1, [r4, #4]
    1eb0:	ldr	r0, [pc, #64]	; 1ef8 <print_ret+0x84>
    1eb4:	add	r0, pc, r0
    1eb8:	bl	e20 <printf@plt>
    1ebc:	b	1ee4 <print_ret+0x70>
    1ec0:	mov	r0, #65	; 0x41
    1ec4:	bl	f4c <putchar@plt>
    1ec8:	b	1ee4 <print_ret+0x70>
    1ecc:	mov	r0, #88	; 0x58
    1ed0:	bl	f4c <putchar@plt>
    1ed4:	b	1ee4 <print_ret+0x70>
    1ed8:	ldr	r0, [pc, #28]	; 1efc <print_ret+0x88>
    1edc:	add	r0, pc, r0
    1ee0:	bl	e20 <printf@plt>
    1ee4:	ldr	r0, [pc, #20]	; 1f00 <print_ret+0x8c>
    1ee8:	add	r0, pc, r0
    1eec:	pop	{r4, sl, fp, lr}
    1ef0:	b	ec8 <puts@plt>
    1ef4:	.word	0x00010410
    1ef8:	.word	0x00010fa7
    1efc:	.word	0x0001034b
    1f00:	.word	0x000103e3

00001f04 <print_misc>:
    1f04:	push	{r4, sl, fp, lr}
    1f08:	add	fp, sp, #8
    1f0c:	mov	r4, r0
    1f10:	ldr	r0, [pc, #76]	; 1f64 <print_misc+0x60>
    1f14:	add	r0, pc, r0
    1f18:	bl	e20 <printf@plt>
    1f1c:	ldrh	r0, [r4]
    1f20:	and	r0, r0, #248	; 0xf8
    1f24:	cmp	r0, #128	; 0x80
    1f28:	beq	1f40 <print_misc+0x3c>
    1f2c:	cmp	r0, #0
    1f30:	bne	1f4c <print_misc+0x48>
    1f34:	ldr	r0, [pc, #44]	; 1f68 <print_misc+0x64>
    1f38:	add	r0, pc, r0
    1f3c:	b	1f54 <print_misc+0x50>
    1f40:	ldr	r0, [pc, #36]	; 1f6c <print_misc+0x68>
    1f44:	add	r0, pc, r0
    1f48:	b	1f54 <print_misc+0x50>
    1f4c:	ldr	r0, [pc, #28]	; 1f70 <print_misc+0x6c>
    1f50:	add	r0, pc, r0
    1f54:	bl	e20 <printf@plt>
    1f58:	mov	r0, #10
    1f5c:	pop	{r4, sl, fp, lr}
    1f60:	b	f4c <putchar@plt>
    1f64:	.word	0x0001038d
    1f68:	.word	0x0001036f
    1f6c:	.word	0x0001036a
    1f70:	.word	0x000102d7

00001f74 <get_size>:
    1f74:	ands	r0, r0, #24
    1f78:	moveq	r0, #4
    1f7c:	bxeq	lr
    1f80:	cmp	r0, #16
    1f84:	moveq	r0, #1
    1f88:	bxeq	lr
    1f8c:	cmp	r0, #8
    1f90:	movne	r0, #0
    1f94:	moveq	r0, #2
    1f98:	bx	lr

00001f9c <sf_bpf_error>:
    1f9c:	sub	sp, sp, #12
    1fa0:	push	{fp, lr}
    1fa4:	mov	fp, sp
    1fa8:	sub	sp, sp, #4
    1fac:	mov	ip, r0
    1fb0:	add	r0, fp, #8
    1fb4:	stm	r0, {r1, r2, r3}
    1fb8:	add	r3, fp, #8
    1fbc:	str	r3, [sp]
    1fc0:	ldr	r0, [pc, #28]	; 1fe4 <sf_bpf_error+0x48>
    1fc4:	add	r0, pc, r0
    1fc8:	mov	r1, #256	; 0x100
    1fcc:	mov	r2, ip
    1fd0:	bl	f88 <vsnprintf@plt>
    1fd4:	ldr	r0, [pc, #12]	; 1fe8 <sf_bpf_error+0x4c>
    1fd8:	add	r0, pc, r0
    1fdc:	mov	r1, #1
    1fe0:	bl	e44 <longjmp@plt>
    1fe4:	.word	0x0002e33c
    1fe8:	.word	0x0002e430

00001fec <sf_sdup>:
    1fec:	push	{r4, r5, r6, r7, fp, lr}
    1ff0:	add	fp, sp, #16
    1ff4:	mov	r6, r0
    1ff8:	bl	f04 <strlen@plt>
    1ffc:	mov	r4, r0
    2000:	add	r7, r0, #1
    2004:	mov	r0, r7
    2008:	bl	2030 <newchunk>
    200c:	mov	r5, r0
    2010:	mov	r1, r6
    2014:	mov	r2, r7
    2018:	bl	f58 <strncpy@plt>
    201c:	cmp	r7, #1
    2020:	movge	r0, #0
    2024:	strbge	r0, [r5, r4]
    2028:	mov	r0, r5
    202c:	pop	{r4, r5, r6, r7, fp, pc}

00002030 <newchunk>:
    2030:	push	{r4, r5, r6, sl, fp, lr}
    2034:	add	fp, sp, #16
    2038:	ldr	r1, [pc, #140]	; 20cc <newchunk+0x9c>
    203c:	ldr	r1, [pc, r1]
    2040:	ldr	r5, [pc, #136]	; 20d0 <newchunk+0xa0>
    2044:	add	r5, pc, r5
    2048:	ldr	r2, [r5, r1, lsl #3]!
    204c:	add	r0, r0, #3
    2050:	bic	r6, r0, #3
    2054:	cmp	r6, r2
    2058:	bls	20ac <newchunk+0x7c>
    205c:	add	r0, r1, #1
    2060:	ldr	r2, [pc, #108]	; 20d4 <newchunk+0xa4>
    2064:	add	r2, pc, r2
    2068:	str	r0, [r2]
    206c:	cmp	r1, #15
    2070:	bge	20c0 <newchunk+0x90>
    2074:	mov	r1, #1024	; 0x400
    2078:	lsl	r4, r1, r0
    207c:	mov	r0, r4
    2080:	bl	ed4 <malloc@plt>
    2084:	str	r0, [r5, #12]
    2088:	cmp	r0, #0
    208c:	beq	20c0 <newchunk+0x90>
    2090:	add	r5, r5, #8
    2094:	mov	r1, #0
    2098:	mov	r2, r4
    209c:	bl	f40 <memset@plt>
    20a0:	str	r4, [r5]
    20a4:	cmp	r6, r4
    20a8:	bhi	20c0 <newchunk+0x90>
    20ac:	ldm	r5, {r0, r1}
    20b0:	sub	r0, r0, r6
    20b4:	str	r0, [r5]
    20b8:	add	r0, r1, r0
    20bc:	pop	{r4, r5, r6, sl, fp, pc}
    20c0:	ldr	r0, [pc, #16]	; 20d8 <newchunk+0xa8>
    20c4:	add	r0, pc, r0
    20c8:	bl	1f9c <sf_bpf_error>
    20cc:	.word	0x0002e630
    20d0:	.word	0x0002e5a8
    20d4:	.word	0x0002e608
    20d8:	.word	0x00010d50

000020dc <sfbpf_compile>:
    20dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    20e0:	add	fp, sp, #24
    20e4:	sub	sp, sp, #8
    20e8:	mov	r8, r2
    20ec:	mov	r5, r1
    20f0:	mov	r6, r0
    20f4:	str	r3, [sp, #4]
    20f8:	ldr	r4, [pc, #428]	; 22ac <sfbpf_compile+0x1d0>
    20fc:	ldr	r4, [pc, r4]
    2100:	mov	r0, #0
    2104:	str	r0, [r4]
    2108:	ldr	r1, [pc, #416]	; 22b0 <sfbpf_compile+0x1d4>
    210c:	add	r1, pc, r1
    2110:	str	r0, [r1]
    2114:	ldr	r7, [pc, #408]	; 22b4 <sfbpf_compile+0x1d8>
    2118:	add	r7, pc, r7
    211c:	str	r0, [r7]
    2120:	bl	22f4 <init_regs>
    2124:	ldr	r0, [pc, #396]	; 22b8 <sfbpf_compile+0x1dc>
    2128:	add	r0, pc, r0
    212c:	bl	e50 <_setjmp@plt>
    2130:	cmp	r0, #0
    2134:	beq	2170 <sfbpf_compile+0x94>
    2138:	ldr	r0, [pc, #380]	; 22bc <sfbpf_compile+0x1e0>
    213c:	ldr	r0, [pc, r0]
    2140:	cmp	r0, #0
    2144:	beq	215c <sfbpf_compile+0x80>
    2148:	bl	f94 <freeaddrinfo@plt>
    214c:	ldr	r0, [pc, #364]	; 22c0 <sfbpf_compile+0x1e4>
    2150:	add	r0, pc, r0
    2154:	mov	r1, #0
    2158:	str	r1, [r0]
    215c:	bl	1208c <sf_lex_cleanup>
    2160:	bl	233c <freechunks>
    2164:	mvn	r0, #0
    2168:	sub	sp, fp, #24
    216c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2170:	ldr	r0, [fp, #12]
    2174:	ldr	r1, [pc, #328]	; 22c4 <sfbpf_compile+0x1e8>
    2178:	add	r1, pc, r1
    217c:	str	r6, [r1]
    2180:	ldr	r1, [pc, #320]	; 22c8 <sfbpf_compile+0x1ec>
    2184:	add	r1, pc, r1
    2188:	str	r0, [r1]
    218c:	cmp	r6, #0
    2190:	beq	21a8 <sfbpf_compile+0xcc>
    2194:	ldr	r0, [sp, #4]
    2198:	cmp	r0, #0
    219c:	beq	21dc <sfbpf_compile+0x100>
    21a0:	ldr	r0, [sp, #4]
    21a4:	b	21e4 <sfbpf_compile+0x108>
    21a8:	ldr	r0, [pc, #284]	; 22cc <sfbpf_compile+0x1f0>
    21ac:	add	r0, pc, r0
    21b0:	vld1.64	{d16-d17}, [r0]!
    21b4:	mov	r1, #32
    21b8:	ldr	r2, [pc, #272]	; 22d0 <sfbpf_compile+0x1f4>
    21bc:	add	r2, pc, r2
    21c0:	add	r3, r2, #16
    21c4:	vst1.64	{d16-d17}, [r2], r1
    21c8:	mov	r1, #0
    21cc:	vld1.64	{d16-d17}, [r0]
    21d0:	strb	r1, [r2]
    21d4:	vst1.64	{d16-d17}, [r3]
    21d8:	b	2164 <sfbpf_compile+0x88>
    21dc:	ldr	r0, [pc, #240]	; 22d4 <sfbpf_compile+0x1f8>
    21e0:	add	r0, pc, r0
    21e4:	bl	1206c <sf_lex_init>
    21e8:	mov	r0, r5
    21ec:	bl	239c <init_linktype>
    21f0:	bl	ea14 <sfbpf_parse>
    21f4:	ldr	r0, [r4]
    21f8:	cmp	r0, #0
    21fc:	bne	229c <sfbpf_compile+0x1c0>
    2200:	ldr	r4, [fp, #8]
    2204:	ldr	r0, [pc, #204]	; 22d8 <sfbpf_compile+0x1fc>
    2208:	ldr	r0, [pc, r0]
    220c:	cmp	r0, #0
    2210:	bne	2224 <sfbpf_compile+0x148>
    2214:	ldr	r0, [pc, #192]	; 22dc <sfbpf_compile+0x200>
    2218:	ldr	r0, [pc, r0]
    221c:	bl	2f6c <gen_retblk>
    2220:	str	r0, [r7]
    2224:	cmp	r4, #0
    2228:	beq	226c <sfbpf_compile+0x190>
    222c:	ldr	r0, [pc, #172]	; 22e0 <sfbpf_compile+0x204>
    2230:	ldr	r0, [pc, r0]
    2234:	cmp	r0, #0
    2238:	bne	226c <sfbpf_compile+0x190>
    223c:	ldr	r0, [pc, #160]	; 22e4 <sfbpf_compile+0x208>
    2240:	add	r0, pc, r0
    2244:	bl	ba20 <sf_bpf_optimize>
    2248:	ldr	r0, [pc, #152]	; 22e8 <sfbpf_compile+0x20c>
    224c:	ldr	r0, [pc, r0]
    2250:	cmp	r0, #0
    2254:	beq	22a0 <sfbpf_compile+0x1c4>
    2258:	ldr	r1, [r0, #8]
    225c:	cmp	r1, #6
    2260:	ldreq	r0, [r0, #20]
    2264:	cmpeq	r0, #0
    2268:	beq	22a0 <sfbpf_compile+0x1c4>
    226c:	ldr	r0, [pc, #120]	; 22ec <sfbpf_compile+0x210>
    2270:	ldr	r0, [pc, r0]
    2274:	mov	r1, sp
    2278:	bl	c088 <sf_icode_to_fcode>
    227c:	ldr	r1, [sp]
    2280:	str	r1, [r8]
    2284:	str	r0, [r8, #4]
    2288:	bl	1208c <sf_lex_cleanup>
    228c:	bl	233c <freechunks>
    2290:	mov	r0, #0
    2294:	sub	sp, fp, #24
    2298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    229c:	bl	2f54 <syntax>
    22a0:	ldr	r0, [pc, #72]	; 22f0 <sfbpf_compile+0x214>
    22a4:	add	r0, pc, r0
    22a8:	bl	1f9c <sf_bpf_error>
    22ac:	.word	0x0002dfb4
    22b0:	.word	0x0002ea08
    22b4:	.word	0x0002e478
    22b8:	.word	0x0002e2e0
    22bc:	.word	0x0002e458
    22c0:	.word	0x0002e444
    22c4:	.word	0x0002e424
    22c8:	.word	0x0002e414
    22cc:	.word	0x0001012c
    22d0:	.word	0x0002e144
    22d4:	.word	0x00010088
    22d8:	.word	0x0002e388
    22dc:	.word	0x0002e384
    22e0:	.word	0x0002e8e4
    22e4:	.word	0x0002e350
    22e8:	.word	0x0002e344
    22ec:	.word	0x0002e320
    22f0:	.word	0x0001005c

000022f4 <init_regs>:
    22f4:	ldr	r0, [pc, #56]	; 2334 <init_regs+0x40>
    22f8:	add	r0, pc, r0
    22fc:	mov	r1, #0
    2300:	vmov.i32	q8, #0	; 0x00000000
    2304:	str	r1, [r0]
    2308:	mov	r0, #48	; 0x30
    230c:	ldr	r1, [pc, #36]	; 2338 <init_regs+0x44>
    2310:	add	r1, pc, r1
    2314:	mov	r2, r1
    2318:	vst1.64	{d16-d17}, [r2], r0
    231c:	vst1.64	{d16-d17}, [r2]
    2320:	add	r0, r1, #32
    2324:	vst1.64	{d16-d17}, [r0]
    2328:	add	r0, r1, #16
    232c:	vst1.64	{d16-d17}, [r0]
    2330:	bx	lr
    2334:	.word	0x0002e384
    2338:	.word	0x0002e370

0000233c <freechunks>:
    233c:	push	{r4, r5, r6, r7, fp, lr}
    2340:	add	fp, sp, #16
    2344:	ldr	r0, [pc, #72]	; 2394 <freechunks+0x58>
    2348:	add	r0, pc, r0
    234c:	mov	r4, #0
    2350:	str	r4, [r0]
    2354:	ldr	r5, [pc, #60]	; 2398 <freechunks+0x5c>
    2358:	add	r5, pc, r5
    235c:	mov	r6, #0
    2360:	b	2370 <freechunks+0x34>
    2364:	add	r6, r6, #1
    2368:	cmp	r6, #16
    236c:	popeq	{r4, r5, r6, r7, fp, pc}
    2370:	add	r0, r5, r6, lsl #3
    2374:	ldr	r0, [r0, #4]
    2378:	cmp	r0, #0
    237c:	beq	2364 <freechunks+0x28>
    2380:	lsl	r7, r6, #1
    2384:	bl	e5c <free@plt>
    2388:	add	r0, r5, r7, lsl #2
    238c:	str	r4, [r0, #4]
    2390:	b	2364 <freechunks+0x28>
    2394:	.word	0x0002e324
    2398:	.word	0x0002e294

0000239c <init_linktype>:
    239c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    23a0:	add	fp, sp, #28
    23a4:	sub	sp, sp, #4
    23a8:	mov	r1, r0
    23ac:	ldr	r0, [pc, #2588]	; 2dd0 <init_linktype+0xa34>
    23b0:	add	r0, pc, r0
    23b4:	mov	r4, #0
    23b8:	str	r4, [r0]
    23bc:	ldr	r0, [pc, #2576]	; 2dd4 <init_linktype+0xa38>
    23c0:	add	r0, pc, r0
    23c4:	str	r1, [r0]
    23c8:	ldr	r0, [pc, #2568]	; 2dd8 <init_linktype+0xa3c>
    23cc:	add	r0, pc, r0
    23d0:	strb	r4, [r0]
    23d4:	ldr	r0, [pc, #2560]	; 2ddc <init_linktype+0xa40>
    23d8:	add	r0, pc, r0
    23dc:	strb	r4, [r0]
    23e0:	ldr	r6, [pc, #2552]	; 2de0 <init_linktype+0xa44>
    23e4:	add	r6, pc, r6
    23e8:	mvn	r8, #0
    23ec:	str	r8, [r6]
    23f0:	ldr	r7, [pc, #2540]	; 2de4 <init_linktype+0xa48>
    23f4:	add	r7, pc, r7
    23f8:	str	r8, [r7]
    23fc:	ldr	r0, [pc, #2532]	; 2de8 <init_linktype+0xa4c>
    2400:	add	r0, pc, r0
    2404:	mov	r2, #1
    2408:	strb	r2, [r0]
    240c:	ldr	r2, [pc, #2520]	; 2dec <init_linktype+0xa50>
    2410:	add	r2, pc, r2
    2414:	str	r8, [r2]
    2418:	ldr	r2, [pc, #2512]	; 2df0 <init_linktype+0xa54>
    241c:	add	r2, pc, r2
    2420:	strb	r4, [r2]
    2424:	ldr	r3, [pc, #2504]	; 2df4 <init_linktype+0xa58>
    2428:	add	r3, pc, r3
    242c:	str	r8, [r3]
    2430:	ldr	ip, [pc, #2496]	; 2df8 <init_linktype+0xa5c>
    2434:	add	ip, pc, ip
    2438:	str	r8, [ip]
    243c:	ldr	r5, [pc, #2488]	; 2dfc <init_linktype+0xa60>
    2440:	add	r5, pc, r5
    2444:	str	r8, [r5]
    2448:	ldr	sl, [pc, #2480]	; 2e00 <init_linktype+0xa64>
    244c:	add	sl, pc, sl
    2450:	str	r8, [sl]
    2454:	ldr	r2, [pc, #2472]	; 2e04 <init_linktype+0xa68>
    2458:	add	r2, pc, r2
    245c:	str	r8, [r2]
    2460:	ldr	r2, [pc, #2464]	; 2e08 <init_linktype+0xa6c>
    2464:	add	r2, pc, r2
    2468:	str	r4, [r2]
    246c:	ldr	lr, [pc, #2456]	; 2e0c <init_linktype+0xa70>
    2470:	add	lr, pc, lr
    2474:	strb	r4, [lr]
    2478:	ldr	r9, [pc, #2448]	; 2e10 <init_linktype+0xa74>
    247c:	add	r9, pc, r9
    2480:	str	r8, [r9]
    2484:	ldr	r2, [pc, #2440]	; 2e14 <init_linktype+0xa78>
    2488:	add	r2, pc, r2
    248c:	str	r4, [r2]
    2490:	ldr	r2, [pc, #2432]	; 2e18 <init_linktype+0xa7c>
    2494:	add	r2, pc, r2
    2498:	str	r8, [r2]
    249c:	ldr	r2, [pc, #2424]	; 2e1c <init_linktype+0xa80>
    24a0:	add	r2, pc, r2
    24a4:	str	r8, [r2]
    24a8:	cmp	r1, #229	; 0xe5
    24ac:	bhi	2dc4 <init_linktype+0xa28>
    24b0:	add	r2, pc, #4
    24b4:	ldr	r4, [r2, r1, lsl #2]
    24b8:	add	pc, r2, r4
    24bc:	.word	0x00000444
    24c0:	.word	0x000004f8
    24c4:	.word	0x00000908
    24c8:	.word	0x00000908
    24cc:	.word	0x00000908
    24d0:	.word	0x00000908
    24d4:	.word	0x00000528
    24d8:	.word	0x00000530
    24dc:	.word	0x00000538
    24e0:	.word	0x00000424
    24e4:	.word	0x00000540
    24e8:	.word	0x0000044c
    24ec:	.word	0x000003d8
    24f0:	.word	0x00000908
    24f4:	.word	0x00000908
    24f8:	.word	0x00000548
    24fc:	.word	0x00000568
    2500:	.word	0x00000908
    2504:	.word	0x00000908
    2508:	.word	0x0000044c
    250c:	.word	0x00000908
    2510:	.word	0x00000908
    2514:	.word	0x00000908
    2518:	.word	0x00000908
    251c:	.word	0x00000908
    2520:	.word	0x00000908
    2524:	.word	0x00000908
    2528:	.word	0x00000908
    252c:	.word	0x00000908
    2530:	.word	0x00000908
    2534:	.word	0x00000908
    2538:	.word	0x00000908
    253c:	.word	0x00000908
    2540:	.word	0x00000908
    2544:	.word	0x00000908
    2548:	.word	0x00000908
    254c:	.word	0x00000908
    2550:	.word	0x00000908
    2554:	.word	0x00000908
    2558:	.word	0x00000908
    255c:	.word	0x00000908
    2560:	.word	0x00000908
    2564:	.word	0x00000908
    2568:	.word	0x00000908
    256c:	.word	0x00000908
    2570:	.word	0x00000908
    2574:	.word	0x00000908
    2578:	.word	0x00000908
    257c:	.word	0x00000908
    2580:	.word	0x00000908
    2584:	.word	0x00000424
    2588:	.word	0x00000588
    258c:	.word	0x00000908
    2590:	.word	0x00000908
    2594:	.word	0x00000908
    2598:	.word	0x00000908
    259c:	.word	0x00000908
    25a0:	.word	0x00000908
    25a4:	.word	0x00000908
    25a8:	.word	0x00000908
    25ac:	.word	0x00000908
    25b0:	.word	0x00000908
    25b4:	.word	0x00000908
    25b8:	.word	0x00000908
    25bc:	.word	0x00000908
    25c0:	.word	0x00000908
    25c4:	.word	0x00000908
    25c8:	.word	0x00000908
    25cc:	.word	0x00000908
    25d0:	.word	0x00000908
    25d4:	.word	0x00000908
    25d8:	.word	0x00000908
    25dc:	.word	0x00000908
    25e0:	.word	0x00000908
    25e4:	.word	0x00000908
    25e8:	.word	0x00000908
    25ec:	.word	0x00000908
    25f0:	.word	0x00000908
    25f4:	.word	0x00000908
    25f8:	.word	0x00000908
    25fc:	.word	0x00000908
    2600:	.word	0x00000908
    2604:	.word	0x00000908
    2608:	.word	0x00000908
    260c:	.word	0x00000908
    2610:	.word	0x00000908
    2614:	.word	0x00000908
    2618:	.word	0x00000908
    261c:	.word	0x00000908
    2620:	.word	0x00000908
    2624:	.word	0x00000908
    2628:	.word	0x00000908
    262c:	.word	0x00000908
    2630:	.word	0x00000908
    2634:	.word	0x00000908
    2638:	.word	0x00000908
    263c:	.word	0x00000908
    2640:	.word	0x00000908
    2644:	.word	0x00000908
    2648:	.word	0x00000590
    264c:	.word	0x00000908
    2650:	.word	0x00000908
    2654:	.word	0x00000908
    2658:	.word	0x00000908
    265c:	.word	0x00000424
    2660:	.word	0x000003f8
    2664:	.word	0x00000908
    2668:	.word	0x000003d8
    266c:	.word	0x00000444
    2670:	.word	0x00000678
    2674:	.word	0x00000908
    2678:	.word	0x00000908
    267c:	.word	0x00000908
    2680:	.word	0x00000698
    2684:	.word	0x000003d8
    2688:	.word	0x00000908
    268c:	.word	0x00000908
    2690:	.word	0x00000908
    2694:	.word	0x00000908
    2698:	.word	0x000003f8
    269c:	.word	0x00000908
    26a0:	.word	0x00000908
    26a4:	.word	0x000006c8
    26a8:	.word	0x00000704
    26ac:	.word	0x00000908
    26b0:	.word	0x00000908
    26b4:	.word	0x00000908
    26b8:	.word	0x000003f8
    26bc:	.word	0x00000908
    26c0:	.word	0x000005b0
    26c4:	.word	0x000003b8
    26c8:	.word	0x000003b8
    26cc:	.word	0x00000760
    26d0:	.word	0x00000780
    26d4:	.word	0x000003b8
    26d8:	.word	0x000005d0
    26dc:	.word	0x000007a0
    26e0:	.word	0x000007e0
    26e4:	.word	0x000005d8
    26e8:	.word	0x000005f8
    26ec:	.word	0x000004b4
    26f0:	.word	0x00000908
    26f4:	.word	0x00000908
    26f8:	.word	0x00000398
    26fc:	.word	0x00000398
    2700:	.word	0x00000908
    2704:	.word	0x00000908
    2708:	.word	0x00000908
    270c:	.word	0x00000908
    2710:	.word	0x00000908
    2714:	.word	0x00000908
    2718:	.word	0x00000908
    271c:	.word	0x00000908
    2720:	.word	0x00000908
    2724:	.word	0x00000908
    2728:	.word	0x00000908
    272c:	.word	0x00000908
    2730:	.word	0x00000908
    2734:	.word	0x00000908
    2738:	.word	0x00000908
    273c:	.word	0x00000908
    2740:	.word	0x00000908
    2744:	.word	0x00000908
    2748:	.word	0x000003f8
    274c:	.word	0x0000061c
    2750:	.word	0x00000908
    2754:	.word	0x00000424
    2758:	.word	0x00000454
    275c:	.word	0x00000624
    2760:	.word	0x00000908
    2764:	.word	0x00000908
    2768:	.word	0x00000908
    276c:	.word	0x00000908
    2770:	.word	0x00000908
    2774:	.word	0x00000908
    2778:	.word	0x00000908
    277c:	.word	0x00000908
    2780:	.word	0x00000398
    2784:	.word	0x00000454
    2788:	.word	0x000003b8
    278c:	.word	0x000003b8
    2790:	.word	0x000003b8
    2794:	.word	0x00000644
    2798:	.word	0x00000494
    279c:	.word	0x00000908
    27a0:	.word	0x00000908
    27a4:	.word	0x00000398
    27a8:	.word	0x00000398
    27ac:	.word	0x00000908
    27b0:	.word	0x00000398
    27b4:	.word	0x00000398
    27b8:	.word	0x00000398
    27bc:	.word	0x000003f8
    27c0:	.word	0x00000398
    27c4:	.word	0x000004d8
    27c8:	.word	0x00000398
    27cc:	.word	0x00000398
    27d0:	.word	0x000008a0
    27d4:	.word	0x00000398
    27d8:	.word	0x00000398
    27dc:	.word	0x00000494
    27e0:	.word	0x00000398
    27e4:	.word	0x0000081c
    27e8:	.word	0x00000908
    27ec:	.word	0x00000908
    27f0:	.word	0x00000908
    27f4:	.word	0x00000908
    27f8:	.word	0x00000908
    27fc:	.word	0x00000908
    2800:	.word	0x00000908
    2804:	.word	0x00000908
    2808:	.word	0x00000908
    280c:	.word	0x00000908
    2810:	.word	0x00000908
    2814:	.word	0x00000908
    2818:	.word	0x00000398
    281c:	.word	0x00000908
    2820:	.word	0x00000908
    2824:	.word	0x00000908
    2828:	.word	0x00000398
    282c:	.word	0x00000398
    2830:	.word	0x00000908
    2834:	.word	0x00000908
    2838:	.word	0x00000908
    283c:	.word	0x00000908
    2840:	.word	0x00000908
    2844:	.word	0x00000860
    2848:	.word	0x00000398
    284c:	.word	0x000003d8
    2850:	.word	0x000003d8
    2854:	mvn	r0, #0
    2858:	ldr	r1, [pc, #1744]	; 2f30 <init_linktype+0xb94>
    285c:	add	r1, pc, r1
    2860:	str	r0, [r1]
    2864:	ldr	r1, [pc, #1736]	; 2f34 <init_linktype+0xb98>
    2868:	add	r1, pc, r1
    286c:	str	r0, [r1]
    2870:	b	2c7c <init_linktype+0x8e0>
    2874:	mov	r0, #4
    2878:	ldr	r1, [pc, #1600]	; 2ec0 <init_linktype+0xb24>
    287c:	add	r1, pc, r1
    2880:	str	r0, [r1]
    2884:	ldr	r1, [pc, #1592]	; 2ec4 <init_linktype+0xb28>
    2888:	add	r1, pc, r1
    288c:	str	r0, [r1]
    2890:	b	2d3c <init_linktype+0x9a0>
    2894:	mov	r0, #0
    2898:	ldr	r1, [pc, #1524]	; 2e94 <init_linktype+0xaf8>
    289c:	add	r1, pc, r1
    28a0:	str	r0, [r1]
    28a4:	ldr	r1, [pc, #1516]	; 2e98 <init_linktype+0xafc>
    28a8:	add	r1, pc, r1
    28ac:	mvn	r2, #0
    28b0:	b	2c78 <init_linktype+0x8dc>
    28b4:	mov	r0, #0
    28b8:	ldr	r1, [pc, #1464]	; 2e78 <init_linktype+0xadc>
    28bc:	add	r1, pc, r1
    28c0:	str	r0, [r1]
    28c4:	ldr	r0, [pc, #1456]	; 2e7c <init_linktype+0xae0>
    28c8:	add	r0, pc, r0
    28cc:	mov	r1, #24
    28d0:	str	r1, [r0]
    28d4:	mov	r0, #1
    28d8:	strb	r0, [lr]
    28dc:	b	2ba0 <init_linktype+0x804>
    28e0:	mov	r0, #4
    28e4:	ldr	r1, [pc, #1332]	; 2e20 <init_linktype+0xa84>
    28e8:	add	r1, pc, r1
    28ec:	str	r0, [r1]
    28f0:	ldr	r0, [pc, #1324]	; 2e24 <init_linktype+0xa88>
    28f4:	add	r0, pc, r0
    28f8:	mov	r1, #2
    28fc:	b	2b70 <init_linktype+0x7d4>
    2900:	mov	r0, #4
    2904:	b	2b38 <init_linktype+0x79c>
    2908:	mov	r0, #0
    290c:	b	2b88 <init_linktype+0x7ec>
    2910:	ldr	r0, [pc, #1580]	; 2f44 <init_linktype+0xba8>
    2914:	add	r0, pc, r0
    2918:	mov	r1, #16
    291c:	str	r1, [r0]
    2920:	mov	r0, #14
    2924:	ldr	r1, [pc, #1564]	; 2f48 <init_linktype+0xbac>
    2928:	add	r1, pc, r1
    292c:	str	r0, [r1]
    2930:	ldr	r0, [pc, #1556]	; 2f4c <init_linktype+0xbb0>
    2934:	add	r0, pc, r0
    2938:	mov	r1, #18
    293c:	str	r1, [r0]
    2940:	ldr	r0, [pc, #1544]	; 2f50 <init_linktype+0xbb4>
    2944:	add	r0, pc, r0
    2948:	mov	r1, #21
    294c:	b	2db8 <init_linktype+0xa1c>
    2950:	mvn	r0, #0
    2954:	ldr	r1, [pc, #1444]	; 2f00 <init_linktype+0xb64>
    2958:	add	r1, pc, r1
    295c:	str	r0, [r1]
    2960:	ldr	r1, [pc, #1436]	; 2f04 <init_linktype+0xb68>
    2964:	add	r1, pc, r1
    2968:	mov	r2, #18
    296c:	b	2c78 <init_linktype+0x8dc>
    2970:	mov	r0, #3
    2974:	str	r0, [ip]
    2978:	mov	r0, #2
    297c:	str	r0, [r3]
    2980:	mov	r0, #4
    2984:	str	r0, [r5]
    2988:	str	r0, [sl]
    298c:	mov	r0, #7
    2990:	b	2d7c <init_linktype+0x9e0>
    2994:	mvn	r0, #0
    2998:	ldr	r1, [pc, #1384]	; 2f08 <init_linktype+0xb6c>
    299c:	add	r1, pc, r1
    29a0:	str	r0, [r1]
    29a4:	ldr	r1, [pc, #1376]	; 2f0c <init_linktype+0xb70>
    29a8:	add	r1, pc, r1
    29ac:	mov	r2, #8
    29b0:	b	2c78 <init_linktype+0x8dc>
    29b4:	mov	r0, #14
    29b8:	ldr	r1, [pc, #1140]	; 2e34 <init_linktype+0xa98>
    29bc:	add	r1, pc, r1
    29c0:	str	r0, [r1]
    29c4:	ldr	r0, [pc, #1132]	; 2e38 <init_linktype+0xa9c>
    29c8:	add	r0, pc, r0
    29cc:	mov	r1, #12
    29d0:	str	r1, [r0]
    29d4:	ldr	r0, [pc, #1120]	; 2e3c <init_linktype+0xaa0>
    29d8:	add	r0, pc, r0
    29dc:	mov	r1, #0
    29e0:	b	2bac <init_linktype+0x810>
    29e4:	mov	r0, #14
    29e8:	b	2b88 <init_linktype+0x7ec>
    29ec:	mov	r0, #6
    29f0:	b	28e4 <init_linktype+0x548>
    29f4:	mov	r0, #16
    29f8:	b	2a08 <init_linktype+0x66c>
    29fc:	mov	r0, #13
    2a00:	b	2b88 <init_linktype+0x7ec>
    2a04:	mov	r0, #24
    2a08:	ldr	r1, [pc, #1072]	; 2e40 <init_linktype+0xaa4>
    2a0c:	add	r1, pc, r1
    2a10:	str	r0, [r1]
    2a14:	ldr	r0, [pc, #1064]	; 2e44 <init_linktype+0xaa8>
    2a18:	add	r0, pc, r0
    2a1c:	mvn	r1, #0
    2a20:	b	2b70 <init_linktype+0x7d4>
    2a24:	mov	r0, #24
    2a28:	ldr	r1, [pc, #1072]	; 2e60 <init_linktype+0xac4>
    2a2c:	add	r1, pc, r1
    2a30:	str	r0, [r1]
    2a34:	ldr	r0, [pc, #1064]	; 2e64 <init_linktype+0xac8>
    2a38:	add	r0, pc, r0
    2a3c:	mov	r1, #5
    2a40:	b	2b70 <init_linktype+0x7d4>
    2a44:	mov	r0, #8
    2a48:	b	2a50 <init_linktype+0x6b4>
    2a4c:	mov	r0, #44	; 0x2c
    2a50:	ldr	r1, [pc, #1024]	; 2e58 <init_linktype+0xabc>
    2a54:	add	r1, pc, r1
    2a58:	str	r0, [r1]
    2a5c:	ldr	r0, [pc, #1016]	; 2e5c <init_linktype+0xac0>
    2a60:	add	r0, pc, r0
    2a64:	mov	r1, #6
    2a68:	b	2b70 <init_linktype+0x7d4>
    2a6c:	mov	r0, #8
    2a70:	ldr	r1, [pc, #948]	; 2e2c <init_linktype+0xa90>
    2a74:	add	r1, pc, r1
    2a78:	str	r0, [r1]
    2a7c:	ldr	r0, [pc, #940]	; 2e30 <init_linktype+0xa94>
    2a80:	add	r0, pc, r0
    2a84:	mov	r1, #4
    2a88:	b	2b70 <init_linktype+0x7d4>
    2a8c:	mov	r0, #8
    2a90:	b	2ca0 <init_linktype+0x904>
    2a94:	mov	r0, #18
    2a98:	ldr	r1, [pc, #1048]	; 2eb8 <init_linktype+0xb1c>
    2a9c:	add	r1, pc, r1
    2aa0:	str	r0, [r1]
    2aa4:	ldr	r0, [pc, #1040]	; 2ebc <init_linktype+0xb20>
    2aa8:	add	r0, pc, r0
    2aac:	mov	r1, #16
    2ab0:	b	2b70 <init_linktype+0x7d4>
    2ab4:	mov	r0, #7
    2ab8:	str	r0, [ip]
    2abc:	mov	r0, #6
    2ac0:	str	r0, [r3]
    2ac4:	mov	r0, #8
    2ac8:	str	r0, [r5]
    2acc:	str	r0, [sl]
    2ad0:	mov	r0, #11
    2ad4:	b	2d7c <init_linktype+0x9e0>
    2ad8:	mov	r0, #12
    2adc:	b	2878 <init_linktype+0x4dc>
    2ae0:	mov	r0, #6
    2ae4:	ldr	r1, [pc, #1004]	; 2ed8 <init_linktype+0xb3c>
    2ae8:	add	r1, pc, r1
    2aec:	str	r0, [r1]
    2af0:	ldr	r0, [pc, #996]	; 2edc <init_linktype+0xb40>
    2af4:	add	r0, pc, r0
    2af8:	mov	r1, #4
    2afc:	b	2d38 <init_linktype+0x99c>
    2b00:	mov	r0, #0
    2b04:	ldr	r1, [pc, #928]	; 2eac <init_linktype+0xb10>
    2b08:	add	r1, pc, r1
    2b0c:	str	r0, [r1]
    2b10:	ldr	r1, [pc, #920]	; 2eb0 <init_linktype+0xb14>
    2b14:	add	r1, pc, r1
    2b18:	mvn	r2, #0
    2b1c:	str	r2, [r1]
    2b20:	ldr	r1, [pc, #908]	; 2eb4 <init_linktype+0xb18>
    2b24:	add	r1, pc, r1
    2b28:	mov	r2, #4
    2b2c:	str	r2, [r1]
    2b30:	b	2c88 <init_linktype+0x8ec>
    2b34:	mov	r0, #12
    2b38:	ldr	r1, [pc, #776]	; 2e48 <init_linktype+0xaac>
    2b3c:	add	r1, pc, r1
    2b40:	str	r0, [r1]
    2b44:	ldr	r0, [pc, #768]	; 2e4c <init_linktype+0xab0>
    2b48:	add	r0, pc, r0
    2b4c:	mov	r1, #0
    2b50:	b	2da0 <init_linktype+0xa04>
    2b54:	mov	r0, #16
    2b58:	ldr	r1, [pc, #836]	; 2ea4 <init_linktype+0xb08>
    2b5c:	add	r1, pc, r1
    2b60:	str	r0, [r1]
    2b64:	ldr	r0, [pc, #828]	; 2ea8 <init_linktype+0xb0c>
    2b68:	add	r0, pc, r0
    2b6c:	mov	r1, #14
    2b70:	str	r1, [r0]
    2b74:	ldr	r0, [pc, #684]	; 2e28 <init_linktype+0xa8c>
    2b78:	add	r0, pc, r0
    2b7c:	mov	r1, #0
    2b80:	b	2dac <init_linktype+0xa10>
    2b84:	mov	r0, #16
    2b88:	ldr	r1, [pc, #728]	; 2e68 <init_linktype+0xacc>
    2b8c:	add	r1, pc, r1
    2b90:	str	r0, [r1]
    2b94:	ldr	r1, [pc, #720]	; 2e6c <init_linktype+0xad0>
    2b98:	add	r1, pc, r1
    2b9c:	str	r0, [r1]
    2ba0:	ldr	r0, [pc, #712]	; 2e70 <init_linktype+0xad4>
    2ba4:	add	r0, pc, r0
    2ba8:	mov	r1, #8
    2bac:	str	r1, [r0]
    2bb0:	ldr	r0, [pc, #700]	; 2e74 <init_linktype+0xad8>
    2bb4:	add	r0, pc, r0
    2bb8:	mov	r1, #3
    2bbc:	b	2db8 <init_linktype+0xa1c>
    2bc0:	mov	r1, #1
    2bc4:	str	r1, [r6]
    2bc8:	ldr	r2, [pc, #688]	; 2e80 <init_linktype+0xae4>
    2bcc:	add	r2, pc, r2
    2bd0:	strb	r1, [r2]
    2bd4:	mov	r1, #2
    2bd8:	str	r1, [r7]
    2bdc:	mov	r1, #0
    2be0:	strb	r1, [r0]
    2be4:	mvn	r0, #0
    2be8:	ldr	r1, [pc, #660]	; 2e84 <init_linktype+0xae8>
    2bec:	add	r1, pc, r1
    2bf0:	str	r0, [r1]
    2bf4:	mov	r0, #4
    2bf8:	ldr	r1, [pc, #648]	; 2e88 <init_linktype+0xaec>
    2bfc:	add	r1, pc, r1
    2c00:	str	r0, [r1]
    2c04:	ldr	r1, [pc, #640]	; 2e8c <init_linktype+0xaf0>
    2c08:	add	r1, pc, r1
    2c0c:	str	r0, [r1]
    2c10:	ldr	r1, [pc, #632]	; 2e90 <init_linktype+0xaf4>
    2c14:	add	r1, pc, r1
    2c18:	b	2b9c <init_linktype+0x800>
    2c1c:	mvn	r0, #0
    2c20:	ldr	r1, [pc, #712]	; 2ef0 <init_linktype+0xb54>
    2c24:	add	r1, pc, r1
    2c28:	str	r0, [r1]
    2c2c:	ldr	r1, [pc, #704]	; 2ef4 <init_linktype+0xb58>
    2c30:	add	r1, pc, r1
    2c34:	mov	r2, #6
    2c38:	b	2c78 <init_linktype+0x8dc>
    2c3c:	mov	r0, #12
    2c40:	ldr	r1, [pc, #672]	; 2ee8 <init_linktype+0xb4c>
    2c44:	add	r1, pc, r1
    2c48:	str	r0, [r1]
    2c4c:	ldr	r0, [pc, #664]	; 2eec <init_linktype+0xb50>
    2c50:	add	r0, pc, r0
    2c54:	mov	r1, #6
    2c58:	b	2d38 <init_linktype+0x99c>
    2c5c:	mvn	r0, #0
    2c60:	ldr	r1, [pc, #656]	; 2ef8 <init_linktype+0xb5c>
    2c64:	add	r1, pc, r1
    2c68:	str	r0, [r1]
    2c6c:	ldr	r1, [pc, #648]	; 2efc <init_linktype+0xb60>
    2c70:	add	r1, pc, r1
    2c74:	mov	r2, #12
    2c78:	str	r2, [r1]
    2c7c:	ldr	r1, [pc, #536]	; 2e9c <init_linktype+0xb00>
    2c80:	add	r1, pc, r1
    2c84:	str	r0, [r1]
    2c88:	ldr	r1, [pc, #528]	; 2ea0 <init_linktype+0xb04>
    2c8c:	add	r1, pc, r1
    2c90:	str	r0, [r1]
    2c94:	sub	sp, fp, #28
    2c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2c9c:	mov	r0, #4
    2ca0:	ldr	r1, [pc, #544]	; 2ec8 <init_linktype+0xb2c>
    2ca4:	add	r1, pc, r1
    2ca8:	str	r0, [r1]
    2cac:	ldr	r1, [pc, #536]	; 2ecc <init_linktype+0xb30>
    2cb0:	add	r1, pc, r1
    2cb4:	str	r0, [r1]
    2cb8:	ldr	r0, [pc, #528]	; 2ed0 <init_linktype+0xb34>
    2cbc:	add	r0, pc, r0
    2cc0:	mov	r1, #0
    2cc4:	str	r1, [r0]
    2cc8:	ldr	r0, [pc, #516]	; 2ed4 <init_linktype+0xb38>
    2ccc:	add	r0, pc, r0
    2cd0:	mov	r1, #10
    2cd4:	b	2db8 <init_linktype+0xa1c>
    2cd8:	mvn	r0, #0
    2cdc:	ldr	r1, [pc, #568]	; 2f1c <init_linktype+0xb80>
    2ce0:	add	r1, pc, r1
    2ce4:	str	r0, [r1]
    2ce8:	ldr	r1, [pc, #560]	; 2f20 <init_linktype+0xb84>
    2cec:	add	r1, pc, r1
    2cf0:	str	r0, [r1]
    2cf4:	ldr	r1, [pc, #552]	; 2f24 <init_linktype+0xb88>
    2cf8:	add	r1, pc, r1
    2cfc:	str	r0, [r1]
    2d00:	ldr	r1, [pc, #544]	; 2f28 <init_linktype+0xb8c>
    2d04:	add	r1, pc, r1
    2d08:	str	r0, [r1]
    2d0c:	mov	r0, #1
    2d10:	ldr	r1, [pc, #532]	; 2f2c <init_linktype+0xb90>
    2d14:	add	r1, pc, r1
    2d18:	b	2c90 <init_linktype+0x8f4>
    2d1c:	mov	r0, #24
    2d20:	ldr	r1, [pc, #528]	; 2f38 <init_linktype+0xb9c>
    2d24:	add	r1, pc, r1
    2d28:	str	r0, [r1]
    2d2c:	ldr	r0, [pc, #520]	; 2f3c <init_linktype+0xba0>
    2d30:	add	r0, pc, r0
    2d34:	mov	r1, #1
    2d38:	str	r1, [r0]
    2d3c:	ldr	r0, [pc, #412]	; 2ee0 <init_linktype+0xb44>
    2d40:	add	r0, pc, r0
    2d44:	mov	r1, #0
    2d48:	str	r1, [r0]
    2d4c:	ldr	r0, [pc, #400]	; 2ee4 <init_linktype+0xb48>
    2d50:	add	r0, pc, r0
    2d54:	mvn	r1, #0
    2d58:	b	2db8 <init_linktype+0xa1c>
    2d5c:	mov	r0, #23
    2d60:	str	r0, [ip]
    2d64:	mov	r0, #22
    2d68:	str	r0, [r3]
    2d6c:	mov	r0, #24
    2d70:	str	r0, [r5]
    2d74:	str	r0, [sl]
    2d78:	mov	r0, #27
    2d7c:	ldr	r1, [pc, #396]	; 2f10 <init_linktype+0xb74>
    2d80:	add	r1, pc, r1
    2d84:	str	r0, [r1]
    2d88:	ldr	r0, [pc, #388]	; 2f14 <init_linktype+0xb78>
    2d8c:	add	r0, pc, r0
    2d90:	mvn	r1, #0
    2d94:	str	r1, [r0]
    2d98:	ldr	r0, [pc, #376]	; 2f18 <init_linktype+0xb7c>
    2d9c:	add	r0, pc, r0
    2da0:	str	r1, [r0]
    2da4:	ldr	r0, [pc, #164]	; 2e50 <init_linktype+0xab4>
    2da8:	add	r0, pc, r0
    2dac:	str	r1, [r0]
    2db0:	ldr	r0, [pc, #156]	; 2e54 <init_linktype+0xab8>
    2db4:	add	r0, pc, r0
    2db8:	str	r1, [r0]
    2dbc:	sub	sp, fp, #28
    2dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2dc4:	ldr	r0, [pc, #372]	; 2f40 <init_linktype+0xba4>
    2dc8:	add	r0, pc, r0
    2dcc:	bl	1f9c <sf_bpf_error>
    2dd0:	.word	0x0002e208
    2dd4:	.word	0x0002e1e0
    2dd8:	.word	0x0002e1f8
    2ddc:	.word	0x0002e1cc
    2de0:	.word	0x0002e1e4
    2de4:	.word	0x0002e1d8
    2de8:	.word	0x0002e1d0
    2dec:	.word	0x0002e1c4
    2df0:	.word	0x0002e1a4
    2df4:	.word	0x0002e1b0
    2df8:	.word	0x0002e1a8
    2dfc:	.word	0x0002e1a0
    2e00:	.word	0x0002e198
    2e04:	.word	0x0002e190
    2e08:	.word	0x0002e148
    2e0c:	.word	0x0002e200
    2e10:	.word	0x0002ddcc
    2e14:	.word	0x0002ddbc
    2e18:	.word	0x0002e1e0
    2e1c:	.word	0x0002e1d8
    2e20:	.word	0x0002dcc4
    2e24:	.word	0x0002dcb4
    2e28:	.word	0x0002da38
    2e2c:	.word	0x0002db38
    2e30:	.word	0x0002db28
    2e34:	.word	0x0002dbf0
    2e38:	.word	0x0002dbe0
    2e3c:	.word	0x0002dbd8
    2e40:	.word	0x0002dba0
    2e44:	.word	0x0002db90
    2e48:	.word	0x0002da70
    2e4c:	.word	0x0002da60
    2e50:	.word	0x0002d808
    2e54:	.word	0x0002d808
    2e58:	.word	0x0002db58
    2e5c:	.word	0x0002db48
    2e60:	.word	0x0002db80
    2e64:	.word	0x0002db70
    2e68:	.word	0x0002da20
    2e6c:	.word	0x0002da10
    2e70:	.word	0x0002da0c
    2e74:	.word	0x0002da08
    2e78:	.word	0x0002dcf0
    2e7c:	.word	0x0002dce0
    2e80:	.word	0x0002d9f8
    2e84:	.word	0x0002d9cc
    2e88:	.word	0x0002d9d8
    2e8c:	.word	0x0002d9a0
    2e90:	.word	0x0002d998
    2e94:	.word	0x0002dd10
    2e98:	.word	0x0002dd00
    2e9c:	.word	0x0002d930
    2ea0:	.word	0x0002d930
    2ea4:	.word	0x0002da50
    2ea8:	.word	0x0002da40
    2eac:	.word	0x0002daa4
    2eb0:	.word	0x0002da94
    2eb4:	.word	0x0002da8c
    2eb8:	.word	0x0002db10
    2ebc:	.word	0x0002db00
    2ec0:	.word	0x0002dd30
    2ec4:	.word	0x0002dd20
    2ec8:	.word	0x0002d908
    2ecc:	.word	0x0002d8f8
    2ed0:	.word	0x0002d8f4
    2ed4:	.word	0x0002d8f0
    2ed8:	.word	0x0002dac4
    2edc:	.word	0x0002dab4
    2ee0:	.word	0x0002d870
    2ee4:	.word	0x0002d86c
    2ee8:	.word	0x0002d968
    2eec:	.word	0x0002d958
    2ef0:	.word	0x0002d988
    2ef4:	.word	0x0002d978
    2ef8:	.word	0x0002d948
    2efc:	.word	0x0002d938
    2f00:	.word	0x0002dc54
    2f04:	.word	0x0002dc44
    2f08:	.word	0x0002dc10
    2f0c:	.word	0x0002dc00
    2f10:	.word	0x0002d868
    2f14:	.word	0x0002d81c
    2f18:	.word	0x0002d810
    2f1c:	.word	0x0002d8cc
    2f20:	.word	0x0002d8bc
    2f24:	.word	0x0002d8b8
    2f28:	.word	0x0002d8b8
    2f2c:	.word	0x0002d8a4
    2f30:	.word	0x0002dd50
    2f34:	.word	0x0002dd40
    2f38:	.word	0x0002d888
    2f3c:	.word	0x0002d878
    2f40:	.word	0x0001007c
    2f44:	.word	0x0002dc94
    2f48:	.word	0x0002dc84
    2f4c:	.word	0x0002dc7c
    2f50:	.word	0x0002dc78

00002f54 <syntax>:
    2f54:	push	{fp, lr}
    2f58:	mov	fp, sp
    2f5c:	ldr	r0, [pc, #4]	; 2f68 <syntax+0x14>
    2f60:	add	r0, pc, r0
    2f64:	bl	1f9c <sf_bpf_error>
    2f68:	.word	0x0000fec2

00002f6c <gen_retblk>:
    2f6c:	push	{r4, sl, fp, lr}
    2f70:	add	fp, sp, #8
    2f74:	mov	r4, r0
    2f78:	mov	r0, #6
    2f7c:	bl	7c58 <new_block>
    2f80:	str	r4, [r0, #20]
    2f84:	pop	{r4, sl, fp, pc}

00002f88 <sfbpf_freecode>:
    2f88:	push	{r4, r5, fp, lr}
    2f8c:	add	fp, sp, #8
    2f90:	mov	r4, r0
    2f94:	mov	r5, #0
    2f98:	str	r5, [r0]
    2f9c:	ldr	r0, [r0, #4]
    2fa0:	cmp	r0, #0
    2fa4:	popeq	{r4, r5, fp, pc}
    2fa8:	bl	e5c <free@plt>
    2fac:	str	r5, [r4, #4]
    2fb0:	pop	{r4, r5, fp, pc}

00002fb4 <sf_finish_parse>:
    2fb4:	push	{r4, sl, fp, lr}
    2fb8:	add	fp, sp, #8
    2fbc:	mov	r4, r0
    2fc0:	ldr	r0, [r0, #96]	; 0x60
    2fc4:	bl	3030 <insert_compute_vloffsets>
    2fc8:	bl	30fc <gen_ppi_dlt_check>
    2fcc:	cmp	r0, #0
    2fd0:	movne	r1, r4
    2fd4:	blne	314c <sf_gen_and>
    2fd8:	ldr	r0, [pc, #72]	; 3028 <sf_finish_parse+0x74>
    2fdc:	ldr	r0, [pc, r0]
    2fe0:	bl	2f6c <gen_retblk>
    2fe4:	mov	r1, r0
    2fe8:	mov	r0, r4
    2fec:	bl	31ac <backpatch>
    2ff0:	ldr	r0, [r4, #44]	; 0x2c
    2ff4:	clz	r0, r0
    2ff8:	lsr	r0, r0, #5
    2ffc:	str	r0, [r4, #44]	; 0x2c
    3000:	mov	r0, #0
    3004:	bl	2f6c <gen_retblk>
    3008:	mov	r1, r0
    300c:	mov	r0, r4
    3010:	bl	31ac <backpatch>
    3014:	ldr	r0, [r4, #96]	; 0x60
    3018:	ldr	r1, [pc, #12]	; 302c <sf_finish_parse+0x78>
    301c:	add	r1, pc, r1
    3020:	str	r0, [r1]
    3024:	pop	{r4, sl, fp, pc}
    3028:	.word	0x0002d5c0
    302c:	.word	0x0002d574

00003030 <insert_compute_vloffsets>:
    3030:	push	{r4, r5, fp, lr}
    3034:	add	fp, sp, #8
    3038:	mov	r4, r0
    303c:	mov	r5, #0
    3040:	ldr	r0, [pc, #172]	; 30f4 <insert_compute_vloffsets+0xc4>
    3044:	ldr	r0, [pc, r0]
    3048:	cmp	r0, #162	; 0xa2
    304c:	bgt	3068 <insert_compute_vloffsets+0x38>
    3050:	cmp	r0, #119	; 0x77
    3054:	beq	3080 <insert_compute_vloffsets+0x50>
    3058:	cmp	r0, #127	; 0x7f
    305c:	bne	3098 <insert_compute_vloffsets+0x68>
    3060:	bl	9ebc <gen_load_radiotap_llprefixlen>
    3064:	b	308c <insert_compute_vloffsets+0x5c>
    3068:	cmp	r0, #163	; 0xa3
    306c:	beq	3088 <insert_compute_vloffsets+0x58>
    3070:	cmp	r0, #192	; 0xc0
    3074:	bne	3098 <insert_compute_vloffsets+0x68>
    3078:	bl	9f9c <gen_load_ppi_llprefixlen>
    307c:	b	308c <insert_compute_vloffsets+0x5c>
    3080:	bl	9d08 <gen_load_prism_llprefixlen>
    3084:	b	308c <insert_compute_vloffsets+0x5c>
    3088:	bl	9e44 <gen_load_avs_llprefixlen>
    308c:	mov	r5, r0
    3090:	ldr	r0, [pc, #96]	; 30f8 <insert_compute_vloffsets+0xc8>
    3094:	ldr	r0, [pc, r0]
    3098:	sub	r1, r0, #105	; 0x69
    309c:	cmp	r1, #22
    30a0:	bhi	30b8 <insert_compute_vloffsets+0x88>
    30a4:	mov	r2, #1
    30a8:	movw	r3, #16385	; 0x4001
    30ac:	movt	r3, #64	; 0x40
    30b0:	tst	r3, r2, lsl r1
    30b4:	bne	30c8 <insert_compute_vloffsets+0x98>
    30b8:	cmp	r0, #192	; 0xc0
    30bc:	beq	30c8 <insert_compute_vloffsets+0x98>
    30c0:	cmp	r0, #163	; 0xa3
    30c4:	bne	30d8 <insert_compute_vloffsets+0xa8>
    30c8:	ldr	r1, [r4, #4]
    30cc:	mov	r0, r5
    30d0:	bl	a07c <gen_load_802_11_header_len>
    30d4:	mov	r5, r0
    30d8:	cmp	r5, #0
    30dc:	popeq	{r4, r5, fp, pc}
    30e0:	ldr	r1, [r4, #4]
    30e4:	mov	r0, r5
    30e8:	bl	750c <sf_append>
    30ec:	str	r5, [r4, #4]
    30f0:	pop	{r4, r5, fp, pc}
    30f4:	.word	0x0002d55c
    30f8:	.word	0x0002d50c

000030fc <gen_ppi_dlt_check>:
    30fc:	mov	r0, #0
    3100:	ldr	r1, [pc, #64]	; 3148 <gen_ppi_dlt_check+0x4c>
    3104:	ldr	r1, [pc, r1]
    3108:	cmp	r1, #192	; 0xc0
    310c:	bxne	lr
    3110:	push	{r4, sl, fp, lr}
    3114:	add	fp, sp, #8
    3118:	mov	r0, #32
    311c:	bl	7988 <new_stmt>
    3120:	mov	r4, r0
    3124:	mov	r0, #4
    3128:	str	r0, [r4, #12]
    312c:	mov	r0, #21
    3130:	bl	7c58 <new_block>
    3134:	str	r4, [r0, #4]
    3138:	mov	r1, #1761607680	; 0x69000000
    313c:	str	r1, [r0, #20]
    3140:	pop	{r4, sl, fp, lr}
    3144:	bx	lr
    3148:	.word	0x0002d49c

0000314c <sf_gen_and>:
    314c:	push	{r4, r5, fp, lr}
    3150:	add	fp, sp, #8
    3154:	mov	r4, r1
    3158:	mov	r5, r0
    315c:	ldr	r1, [r1, #96]	; 0x60
    3160:	bl	31ac <backpatch>
    3164:	ldr	r0, [r5, #44]	; 0x2c
    3168:	clz	r0, r0
    316c:	lsr	r0, r0, #5
    3170:	str	r0, [r5, #44]	; 0x2c
    3174:	ldr	r0, [r4, #44]	; 0x2c
    3178:	clz	r0, r0
    317c:	lsr	r0, r0, #5
    3180:	str	r0, [r4, #44]	; 0x2c
    3184:	mov	r0, r4
    3188:	mov	r1, r5
    318c:	bl	31dc <merge>
    3190:	ldr	r0, [r4, #44]	; 0x2c
    3194:	clz	r0, r0
    3198:	lsr	r0, r0, #5
    319c:	str	r0, [r4, #44]	; 0x2c
    31a0:	ldr	r0, [r5, #96]	; 0x60
    31a4:	str	r0, [r4, #96]	; 0x60
    31a8:	pop	{r4, r5, fp, pc}

000031ac <backpatch>:
    31ac:	cmp	r0, #0
    31b0:	bxeq	lr
    31b4:	ldr	r2, [r0, #44]	; 0x2c
    31b8:	cmp	r2, #0
    31bc:	mov	r2, #84	; 0x54
    31c0:	movweq	r2, #60	; 0x3c
    31c4:	ldr	r3, [r0, r2]
    31c8:	str	r1, [r0, r2]
    31cc:	cmp	r3, #0
    31d0:	mov	r0, r3
    31d4:	bne	31b4 <backpatch+0x8>
    31d8:	bx	lr

000031dc <merge>:
    31dc:	sub	sp, sp, #4
    31e0:	str	r0, [sp]
    31e4:	cmp	r0, #0
    31e8:	beq	3214 <merge+0x38>
    31ec:	ldr	r3, [r0, #44]	; 0x2c
    31f0:	add	r2, r0, #84	; 0x54
    31f4:	cmp	r3, #0
    31f8:	addeq	r2, r0, #60	; 0x3c
    31fc:	mov	r3, #84	; 0x54
    3200:	movweq	r3, #60	; 0x3c
    3204:	ldr	r0, [r0, r3]
    3208:	cmp	r0, #0
    320c:	bne	31ec <merge+0x10>
    3210:	b	3218 <merge+0x3c>
    3214:	mov	r2, sp
    3218:	str	r1, [r2]
    321c:	add	sp, sp, #4
    3220:	bx	lr

00003224 <sf_gen_or>:
    3224:	push	{r4, r5, fp, lr}
    3228:	add	fp, sp, #8
    322c:	mov	r4, r1
    3230:	mov	r5, r0
    3234:	ldr	r0, [r0, #44]	; 0x2c
    3238:	clz	r0, r0
    323c:	lsr	r0, r0, #5
    3240:	str	r0, [r5, #44]	; 0x2c
    3244:	ldr	r1, [r1, #96]	; 0x60
    3248:	mov	r0, r5
    324c:	bl	31ac <backpatch>
    3250:	ldr	r0, [r5, #44]	; 0x2c
    3254:	clz	r0, r0
    3258:	lsr	r0, r0, #5
    325c:	str	r0, [r5, #44]	; 0x2c
    3260:	mov	r0, r4
    3264:	mov	r1, r5
    3268:	bl	31dc <merge>
    326c:	ldr	r0, [r5, #96]	; 0x60
    3270:	str	r0, [r4, #96]	; 0x60
    3274:	pop	{r4, r5, fp, pc}

00003278 <sf_gen_not>:
    3278:	ldr	r1, [r0, #44]	; 0x2c
    327c:	clz	r1, r1
    3280:	lsr	r1, r1, #5
    3284:	str	r1, [r0, #44]	; 0x2c
    3288:	bx	lr

0000328c <sf_gen_proto_abbrev>:
    328c:	push	{r4, r5, fp, lr}
    3290:	add	fp, sp, #8
    3294:	sub	r0, r0, #1
    3298:	cmp	r0, #39	; 0x27
    329c:	bhi	36e0 <sf_gen_proto_abbrev+0x454>
    32a0:	add	r1, pc, #4
    32a4:	ldr	r0, [r1, r0, lsl #2]
    32a8:	add	pc, r1, r0
    32ac:	.word	0x00000438
    32b0:	.word	0x000000a0
    32b4:	.word	0x00000114
    32b8:	.word	0x00000120
    32bc:	.word	0x000001f0
    32c0:	.word	0x0000012c
    32c4:	.word	0x0000020c
    32c8:	.word	0x00000148
    32cc:	.word	0x00000150
    32d0:	.word	0x00000228
    32d4:	.word	0x0000023c
    32d8:	.word	0x000000e4
    32dc:	.word	0x00000248
    32e0:	.word	0x00000318
    32e4:	.word	0x00000158
    32e8:	.word	0x00000254
    32ec:	.word	0x000000f0
    32f0:	.word	0x00000324
    32f4:	.word	0x00000164
    32f8:	.word	0x00000180
    32fc:	.word	0x00000330
    3300:	.word	0x0000019c
    3304:	.word	0x000001a4
    3308:	.word	0x00000260
    330c:	.word	0x00000358
    3310:	.word	0x000000fc
    3314:	.word	0x00000108
    3318:	.word	0x00000364
    331c:	.word	0x000003ec
    3320:	.word	0x00000370
    3324:	.word	0x0000037c
    3328:	.word	0x0000026c
    332c:	.word	0x000001b0
    3330:	.word	0x00000434
    3334:	.word	0x00000434
    3338:	.word	0x000002c0
    333c:	.word	0x000000c8
    3340:	.word	0x000000ac
    3344:	.word	0x000003f8
    3348:	.word	0x00000444
    334c:	mov	r0, #2048	; 0x800
    3350:	pop	{r4, r5, fp, lr}
    3354:	b	3a60 <gen_linktype>
    3358:	mov	r0, #26
    335c:	mov	r1, #26
    3360:	mov	r2, #0
    3364:	bl	3704 <gen_proto>
    3368:	mov	r5, r0
    336c:	mov	r0, #27
    3370:	b	36bc <sf_gen_proto_abbrev+0x430>
    3374:	mov	r0, #24
    3378:	mov	r1, #26
    337c:	mov	r2, #0
    3380:	bl	3704 <gen_proto>
    3384:	mov	r5, r0
    3388:	mov	r0, #25
    338c:	b	36bc <sf_gen_proto_abbrev+0x430>
    3390:	movw	r0, #24579	; 0x6003
    3394:	pop	{r4, r5, fp, lr}
    3398:	b	3a60 <gen_linktype>
    339c:	movw	r0, #34525	; 0x86dd
    33a0:	pop	{r4, r5, fp, lr}
    33a4:	b	3a60 <gen_linktype>
    33a8:	mov	r0, #131	; 0x83
    33ac:	mov	r1, #24
    33b0:	b	34dc <sf_gen_proto_abbrev+0x250>
    33b4:	mov	r0, #129	; 0x81
    33b8:	mov	r1, #24
    33bc:	b	34dc <sf_gen_proto_abbrev+0x250>
    33c0:	movw	r0, #2054	; 0x806
    33c4:	pop	{r4, r5, fp, lr}
    33c8:	b	3a60 <gen_linktype>
    33cc:	movw	r0, #32821	; 0x8035
    33d0:	pop	{r4, r5, fp, lr}
    33d4:	b	3a60 <gen_linktype>
    33d8:	mov	r0, #6
    33dc:	mov	r1, #2
    33e0:	mov	r2, #0
    33e4:	bl	3704 <gen_proto>
    33e8:	mov	r4, r0
    33ec:	mov	r0, #6
    33f0:	b	35f4 <sf_gen_proto_abbrev+0x368>
    33f4:	mov	r0, #1
    33f8:	b	34d8 <sf_gen_proto_abbrev+0x24c>
    33fc:	mov	r0, #2
    3400:	b	34d8 <sf_gen_proto_abbrev+0x24c>
    3404:	movw	r0, #24578	; 0x6002
    3408:	pop	{r4, r5, fp, lr}
    340c:	b	3a60 <gen_linktype>
    3410:	mov	r0, #51	; 0x33
    3414:	mov	r1, #2
    3418:	mov	r2, #0
    341c:	bl	3704 <gen_proto>
    3420:	mov	r4, r0
    3424:	mov	r0, #51	; 0x33
    3428:	b	35f4 <sf_gen_proto_abbrev+0x368>
    342c:	mov	r0, #50	; 0x32
    3430:	mov	r1, #2
    3434:	mov	r2, #0
    3438:	bl	3704 <gen_proto>
    343c:	mov	r4, r0
    3440:	mov	r0, #50	; 0x32
    3444:	b	35f4 <sf_gen_proto_abbrev+0x368>
    3448:	mov	r0, #112	; 0x70
    344c:	b	34d8 <sf_gen_proto_abbrev+0x24c>
    3450:	movw	r0, #33011	; 0x80f3
    3454:	pop	{r4, r5, fp, lr}
    3458:	b	3a60 <gen_linktype>
    345c:	mov	r0, #15
    3460:	mov	r1, #26
    3464:	mov	r2, #0
    3468:	bl	3704 <gen_proto>
    346c:	mov	r5, r0
    3470:	mov	r0, #16
    3474:	mov	r1, #26
    3478:	mov	r2, #0
    347c:	bl	3704 <gen_proto>
    3480:	mov	r4, r0
    3484:	mov	r0, r5
    3488:	mov	r1, r4
    348c:	bl	3224 <sf_gen_or>
    3490:	mov	r0, #17
    3494:	mov	r1, #26
    3498:	b	35f8 <sf_gen_proto_abbrev+0x36c>
    349c:	mov	r0, #132	; 0x84
    34a0:	mov	r1, #2
    34a4:	mov	r2, #0
    34a8:	bl	3704 <gen_proto>
    34ac:	mov	r4, r0
    34b0:	mov	r0, #132	; 0x84
    34b4:	b	35f4 <sf_gen_proto_abbrev+0x368>
    34b8:	mov	r0, #17
    34bc:	mov	r1, #2
    34c0:	mov	r2, #0
    34c4:	bl	3704 <gen_proto>
    34c8:	mov	r4, r0
    34cc:	mov	r0, #17
    34d0:	b	35f4 <sf_gen_proto_abbrev+0x368>
    34d4:	mov	r0, #9
    34d8:	mov	r1, #2
    34dc:	mov	r2, #0
    34e0:	pop	{r4, r5, fp, lr}
    34e4:	b	3704 <gen_proto>
    34e8:	movw	r0, #32923	; 0x809b
    34ec:	pop	{r4, r5, fp, lr}
    34f0:	b	3a60 <gen_linktype>
    34f4:	movw	r0, #24580	; 0x6004
    34f8:	pop	{r4, r5, fp, lr}
    34fc:	b	3a60 <gen_linktype>
    3500:	movw	r0, #24577	; 0x6001
    3504:	pop	{r4, r5, fp, lr}
    3508:	b	3a60 <gen_linktype>
    350c:	mov	r0, #254	; 0xfe
    3510:	pop	{r4, r5, fp, lr}
    3514:	b	3a60 <gen_linktype>
    3518:	mov	r0, #16
    351c:	mov	r1, #26
    3520:	mov	r2, #0
    3524:	bl	3704 <gen_proto>
    3528:	mov	r5, r0
    352c:	mov	r0, #17
    3530:	mov	r1, #26
    3534:	mov	r2, #0
    3538:	bl	3704 <gen_proto>
    353c:	mov	r4, r0
    3540:	mov	r0, r5
    3544:	mov	r1, r4
    3548:	bl	3224 <sf_gen_or>
    354c:	mov	r0, #20
    3550:	mov	r1, #26
    3554:	mov	r2, #0
    3558:	bl	3704 <gen_proto>
    355c:	mov	r1, r4
    3560:	bl	3224 <sf_gen_or>
    3564:	mov	r0, #25
    3568:	b	35a4 <sf_gen_proto_abbrev+0x318>
    356c:	mov	r0, #24
    3570:	mov	r1, #26
    3574:	mov	r2, #0
    3578:	bl	3704 <gen_proto>
    357c:	mov	r5, r0
    3580:	mov	r0, #25
    3584:	mov	r1, #26
    3588:	mov	r2, #0
    358c:	bl	3704 <gen_proto>
    3590:	mov	r4, r0
    3594:	mov	r0, r5
    3598:	mov	r1, r4
    359c:	bl	3224 <sf_gen_or>
    35a0:	mov	r0, #26
    35a4:	mov	r1, #26
    35a8:	mov	r2, #0
    35ac:	bl	3704 <gen_proto>
    35b0:	mov	r1, r4
    35b4:	bl	3224 <sf_gen_or>
    35b8:	mov	r0, #27
    35bc:	mov	r1, #26
    35c0:	b	35f8 <sf_gen_proto_abbrev+0x36c>
    35c4:	movw	r0, #24583	; 0x6007
    35c8:	pop	{r4, r5, fp, lr}
    35cc:	b	3a60 <gen_linktype>
    35d0:	mov	r0, #58	; 0x3a
    35d4:	mov	r1, #17
    35d8:	b	34dc <sf_gen_proto_abbrev+0x250>
    35dc:	mov	r0, #103	; 0x67
    35e0:	mov	r1, #2
    35e4:	mov	r2, #0
    35e8:	bl	3704 <gen_proto>
    35ec:	mov	r4, r0
    35f0:	mov	r0, #103	; 0x67
    35f4:	mov	r1, #17
    35f8:	mov	r2, #0
    35fc:	bl	3704 <gen_proto>
    3600:	b	36d0 <sf_gen_proto_abbrev+0x444>
    3604:	mov	r0, #130	; 0x82
    3608:	mov	r1, #24
    360c:	b	34dc <sf_gen_proto_abbrev+0x250>
    3610:	mov	r0, #66	; 0x42
    3614:	pop	{r4, r5, fp, lr}
    3618:	b	3a60 <gen_linktype>
    361c:	mov	r0, #240	; 0xf0
    3620:	pop	{r4, r5, fp, lr}
    3624:	b	3a60 <gen_linktype>
    3628:	mov	r0, #15
    362c:	mov	r1, #26
    3630:	mov	r2, #0
    3634:	bl	3704 <gen_proto>
    3638:	mov	r5, r0
    363c:	mov	r0, #17
    3640:	mov	r1, #26
    3644:	mov	r2, #0
    3648:	bl	3704 <gen_proto>
    364c:	mov	r4, r0
    3650:	mov	r0, r5
    3654:	mov	r1, r4
    3658:	bl	3224 <sf_gen_or>
    365c:	mov	r0, #18
    3660:	mov	r1, #26
    3664:	mov	r2, #0
    3668:	bl	3704 <gen_proto>
    366c:	mov	r1, r4
    3670:	bl	3224 <sf_gen_or>
    3674:	mov	r0, #24
    3678:	mov	r1, #26
    367c:	mov	r2, #0
    3680:	bl	3704 <gen_proto>
    3684:	mov	r1, r4
    3688:	bl	3224 <sf_gen_or>
    368c:	mov	r0, #26
    3690:	mov	r1, #26
    3694:	b	35f8 <sf_gen_proto_abbrev+0x36c>
    3698:	mov	r0, #224	; 0xe0
    369c:	pop	{r4, r5, fp, lr}
    36a0:	b	3a60 <gen_linktype>
    36a4:	mov	r0, #18
    36a8:	mov	r1, #26
    36ac:	mov	r2, #0
    36b0:	bl	3704 <gen_proto>
    36b4:	mov	r5, r0
    36b8:	mov	r0, #20
    36bc:	mov	r1, #26
    36c0:	mov	r2, #0
    36c4:	bl	3704 <gen_proto>
    36c8:	mov	r4, r0
    36cc:	mov	r0, r5
    36d0:	mov	r1, r4
    36d4:	bl	3224 <sf_gen_or>
    36d8:	mov	r0, r4
    36dc:	pop	{r4, r5, fp, pc}
    36e0:	bl	fc4 <abort@plt>
    36e4:	ldr	r0, [pc, #16]	; 36fc <sf_gen_proto_abbrev+0x470>
    36e8:	add	r0, pc, r0
    36ec:	bl	1f9c <sf_bpf_error>
    36f0:	ldr	r0, [pc, #8]	; 3700 <sf_gen_proto_abbrev+0x474>
    36f4:	add	r0, pc, r0
    36f8:	bl	1f9c <sf_bpf_error>
    36fc:	.word	0x0000ec37
    3700:	.word	0x0000ec4f

00003704 <gen_proto>:
    3704:	push	{r4, r5, r6, sl, fp, lr}
    3708:	add	fp, sp, #16
    370c:	cmp	r2, #0
    3710:	bne	3910 <gen_proto+0x20c>
    3714:	cmp	r1, #40	; 0x28
    3718:	bhi	38f4 <gen_proto+0x1f0>
    371c:	mov	r4, r0
    3720:	add	r0, pc, #4
    3724:	ldr	r1, [r0, r1, lsl #2]
    3728:	add	pc, r0, r1
    372c:	.word	0x000000a4
    3730:	.word	0x00000148
    3734:	.word	0x00000110
    3738:	.word	0x000001f0
    373c:	.word	0x000001fc
    3740:	.word	0x00000208
    3744:	.word	0x00000214
    3748:	.word	0x00000220
    374c:	.word	0x0000022c
    3750:	.word	0x00000238
    3754:	.word	0x00000244
    3758:	.word	0x00000250
    375c:	.word	0x0000025c
    3760:	.word	0x00000268
    3764:	.word	0x00000274
    3768:	.word	0x00000280
    376c:	.word	0x000001d8
    3770:	.word	0x00000154
    3774:	.word	0x000001cc
    3778:	.word	0x000001bc
    377c:	.word	0x000001bc
    3780:	.word	0x000002bc
    3784:	.word	0x000002c8
    3788:	.word	0x000001c8
    378c:	.word	0x000000e0
    3790:	.word	0x000001c8
    3794:	.word	0x00000128
    3798:	.word	0x000001c8
    379c:	.word	0x0000028c
    37a0:	.word	0x00000298
    37a4:	.word	0x000002a4
    37a8:	.word	0x000001c8
    37ac:	.word	0x000001c8
    37b0:	.word	0x000001c8
    37b4:	.word	0x000001c8
    37b8:	.word	0x000001c8
    37bc:	.word	0x000001c8
    37c0:	.word	0x000001c8
    37c4:	.word	0x000001c8
    37c8:	.word	0x000001c8
    37cc:	.word	0x000002b0
    37d0:	mov	r5, r2
    37d4:	mov	r0, r4
    37d8:	mov	r1, #2
    37dc:	bl	3704 <gen_proto>
    37e0:	mov	r6, r0
    37e4:	mov	r0, r4
    37e8:	mov	r1, #17
    37ec:	mov	r2, r5
    37f0:	bl	3704 <gen_proto>
    37f4:	mov	r4, r0
    37f8:	mov	r0, r6
    37fc:	mov	r1, r4
    3800:	bl	3224 <sf_gen_or>
    3804:	mov	r0, r4
    3808:	pop	{r4, r5, r6, sl, fp, pc}
    380c:	ldr	r0, [pc, #492]	; 3a00 <gen_proto+0x2fc>
    3810:	ldr	r0, [pc, r0]
    3814:	cmp	r0, #104	; 0x68
    3818:	beq	3898 <gen_proto+0x194>
    381c:	cmp	r0, #107	; 0x6b
    3820:	bne	38b0 <gen_proto+0x1ac>
    3824:	orr	r3, r4, #768	; 0x300
    3828:	mov	r0, #1
    382c:	mov	r1, #2
    3830:	mov	r2, #8
    3834:	pop	{r4, r5, r6, sl, fp, lr}
    3838:	b	450c <gen_cmp>
    383c:	mov	r0, #2048	; 0x800
    3840:	bl	3a60 <gen_linktype>
    3844:	mov	r5, r0
    3848:	mov	r0, #3
    384c:	mov	r1, #9
    3850:	b	38c4 <gen_proto+0x1c0>
    3854:	mov	r0, #131	; 0x83
    3858:	mov	r1, #24
    385c:	mov	r2, #0
    3860:	bl	3704 <gen_proto>
    3864:	mov	r5, r0
    3868:	mov	r0, #4
    386c:	mov	r1, #4
    3870:	b	38c4 <gen_proto+0x1c0>
    3874:	mov	r0, r4
    3878:	pop	{r4, r5, r6, sl, fp, lr}
    387c:	b	3a60 <gen_linktype>
    3880:	movw	r0, #34525	; 0x86dd
    3884:	bl	3a60 <gen_linktype>
    3888:	mov	r5, r0
    388c:	mov	r0, #3
    3890:	mov	r1, #6
    3894:	b	38c4 <gen_proto+0x1c0>
    3898:	movw	r0, #65278	; 0xfefe
    389c:	bl	3a60 <gen_linktype>
    38a0:	mov	r5, r0
    38a4:	mov	r0, #4
    38a8:	mov	r1, #1
    38ac:	b	38c4 <gen_proto+0x1c0>
    38b0:	mov	r0, #254	; 0xfe
    38b4:	bl	3a60 <gen_linktype>
    38b8:	mov	r5, r0
    38bc:	mov	r0, #4
    38c0:	mov	r1, #0
    38c4:	mov	r2, #16
    38c8:	mov	r3, r4
    38cc:	bl	450c <gen_cmp>
    38d0:	mov	r4, r0
    38d4:	mov	r0, r5
    38d8:	mov	r1, r4
    38dc:	bl	314c <sf_gen_and>
    38e0:	mov	r0, r4
    38e4:	pop	{r4, r5, r6, sl, fp, pc}
    38e8:	ldr	r0, [pc, #344]	; 3a48 <gen_proto+0x344>
    38ec:	add	r0, pc, r0
    38f0:	bl	1f9c <sf_bpf_error>
    38f4:	bl	fc4 <abort@plt>
    38f8:	ldr	r0, [pc, #324]	; 3a44 <gen_proto+0x340>
    38fc:	add	r0, pc, r0
    3900:	bl	1f9c <sf_bpf_error>
    3904:	ldr	r0, [pc, #276]	; 3a20 <gen_proto+0x31c>
    3908:	add	r0, pc, r0
    390c:	bl	1f9c <sf_bpf_error>
    3910:	ldr	r0, [pc, #324]	; 3a5c <gen_proto+0x358>
    3914:	add	r0, pc, r0
    3918:	bl	1f9c <sf_bpf_error>
    391c:	ldr	r0, [pc, #224]	; 3a04 <gen_proto+0x300>
    3920:	add	r0, pc, r0
    3924:	bl	1f9c <sf_bpf_error>
    3928:	ldr	r0, [pc, #216]	; 3a08 <gen_proto+0x304>
    392c:	add	r0, pc, r0
    3930:	bl	1f9c <sf_bpf_error>
    3934:	ldr	r0, [pc, #240]	; 3a2c <gen_proto+0x328>
    3938:	add	r0, pc, r0
    393c:	bl	1f9c <sf_bpf_error>
    3940:	ldr	r0, [pc, #224]	; 3a28 <gen_proto+0x324>
    3944:	add	r0, pc, r0
    3948:	bl	1f9c <sf_bpf_error>
    394c:	ldr	r0, [pc, #208]	; 3a24 <gen_proto+0x320>
    3950:	add	r0, pc, r0
    3954:	bl	1f9c <sf_bpf_error>
    3958:	ldr	r0, [pc, #208]	; 3a30 <gen_proto+0x32c>
    395c:	add	r0, pc, r0
    3960:	bl	1f9c <sf_bpf_error>
    3964:	ldr	r0, [pc, #200]	; 3a34 <gen_proto+0x330>
    3968:	add	r0, pc, r0
    396c:	bl	1f9c <sf_bpf_error>
    3970:	ldr	r0, [pc, #192]	; 3a38 <gen_proto+0x334>
    3974:	add	r0, pc, r0
    3978:	bl	1f9c <sf_bpf_error>
    397c:	ldr	r0, [pc, #136]	; 3a0c <gen_proto+0x308>
    3980:	add	r0, pc, r0
    3984:	bl	1f9c <sf_bpf_error>
    3988:	ldr	r0, [pc, #128]	; 3a10 <gen_proto+0x30c>
    398c:	add	r0, pc, r0
    3990:	bl	1f9c <sf_bpf_error>
    3994:	ldr	r0, [pc, #124]	; 3a18 <gen_proto+0x314>
    3998:	add	r0, pc, r0
    399c:	bl	1f9c <sf_bpf_error>
    39a0:	ldr	r0, [pc, #108]	; 3a14 <gen_proto+0x310>
    39a4:	add	r0, pc, r0
    39a8:	bl	1f9c <sf_bpf_error>
    39ac:	ldr	r0, [pc, #104]	; 3a1c <gen_proto+0x318>
    39b0:	add	r0, pc, r0
    39b4:	bl	1f9c <sf_bpf_error>
    39b8:	ldr	r0, [pc, #140]	; 3a4c <gen_proto+0x348>
    39bc:	add	r0, pc, r0
    39c0:	bl	1f9c <sf_bpf_error>
    39c4:	ldr	r0, [pc, #132]	; 3a50 <gen_proto+0x34c>
    39c8:	add	r0, pc, r0
    39cc:	bl	1f9c <sf_bpf_error>
    39d0:	ldr	r0, [pc, #124]	; 3a54 <gen_proto+0x350>
    39d4:	add	r0, pc, r0
    39d8:	bl	1f9c <sf_bpf_error>
    39dc:	ldr	r0, [pc, #116]	; 3a58 <gen_proto+0x354>
    39e0:	add	r0, pc, r0
    39e4:	bl	1f9c <sf_bpf_error>
    39e8:	ldr	r0, [pc, #76]	; 3a3c <gen_proto+0x338>
    39ec:	add	r0, pc, r0
    39f0:	bl	1f9c <sf_bpf_error>
    39f4:	ldr	r0, [pc, #68]	; 3a40 <gen_proto+0x33c>
    39f8:	add	r0, pc, r0
    39fc:	bl	1f9c <sf_bpf_error>
    3a00:	.word	0x0002cd90
    3a04:	.word	0x0000f864
    3a08:	.word	0x0000f857
    3a0c:	.word	0x0000f82e
    3a10:	.word	0x0000f849
    3a14:	.word	0x0000f859
    3a18:	.word	0x0000f88f
    3a1c:	.word	0x0000f8a1
    3a20:	.word	0x0000f975
    3a24:	.word	0x0000f959
    3a28:	.word	0x0000f97a
    3a2c:	.word	0x0000f99b
    3a30:	.word	0x0000f98d
    3a34:	.word	0x0000f997
    3a38:	.word	0x0000f9a1
    3a3c:	.word	0x0000f93f
    3a40:	.word	0x0000f948
    3a44:	.word	0x0000fa5a
    3a48:	.word	0x0000fa81
    3a4c:	.word	0x0000f9c5
    3a50:	.word	0x0000f9ce
    3a54:	.word	0x0000f9d7
    3a58:	.word	0x0000f9e4
    3a5c:	.word	0x0000f852

00003a60 <gen_linktype>:
    3a60:	push	{r4, r5, r6, sl, fp, lr}
    3a64:	add	fp, sp, #16
    3a68:	sub	sp, sp, #8
    3a6c:	mov	r4, r0
    3a70:	ldr	r0, [pc, #2328]	; 4390 <gen_linktype+0x930>
    3a74:	ldr	r0, [pc, r0]
    3a78:	cmp	r0, #0
    3a7c:	beq	3a9c <gen_linktype+0x3c>
    3a80:	cmp	r4, #2048	; 0x800
    3a84:	bge	3ad8 <gen_linktype+0x78>
    3a88:	cmp	r4, #33	; 0x21
    3a8c:	beq	3ed0 <gen_linktype+0x470>
    3a90:	cmp	r4, #87	; 0x57
    3a94:	beq	3ae4 <gen_linktype+0x84>
    3a98:	b	430c <gen_linktype+0x8ac>
    3a9c:	ldr	r0, [pc, #2292]	; 4398 <gen_linktype+0x938>
    3aa0:	add	r0, pc, r0
    3aa4:	ldrb	r0, [r0]
    3aa8:	cmp	r0, #1
    3aac:	bne	3aec <gen_linktype+0x8c>
    3ab0:	mov	r0, r4
    3ab4:	bl	a460 <ethertype_to_ppptype>
    3ab8:	mov	r3, r0
    3abc:	ldr	r1, [pc, #2264]	; 439c <gen_linktype+0x93c>
    3ac0:	ldr	r1, [pc, r1]
    3ac4:	mov	r0, #2
    3ac8:	mov	r2, #8
    3acc:	sub	sp, fp, #16
    3ad0:	pop	{r4, r5, r6, sl, fp, lr}
    3ad4:	b	450c <gen_cmp>
    3ad8:	movw	r0, #34525	; 0x86dd
    3adc:	cmp	r4, r0
    3ae0:	bne	3ec8 <gen_linktype+0x468>
    3ae4:	mov	r0, #17
    3ae8:	b	3ed4 <gen_linktype+0x474>
    3aec:	ldr	r0, [pc, #2220]	; 43a0 <gen_linktype+0x940>
    3af0:	ldr	r0, [pc, r0]
    3af4:	cmp	r0, #229	; 0xe5
    3af8:	bhi	4044 <gen_linktype+0x5e4>
    3afc:	add	r1, pc, #4
    3b00:	ldr	r2, [r1, r0, lsl #2]
    3b04:	add	pc, r1, r2
    3b08:	.word	0x00000444
    3b0c:	.word	0x000005d0
    3b10:	.word	0x0000053c
    3b14:	.word	0x0000053c
    3b18:	.word	0x0000053c
    3b1c:	.word	0x0000053c
    3b20:	.word	0x000003d8
    3b24:	.word	0x00000460
    3b28:	.word	0x00000414
    3b2c:	.word	0x000005b4
    3b30:	.word	0x000003d8
    3b34:	.word	0x000003d8
    3b38:	.word	0x00000414
    3b3c:	.word	0x0000053c
    3b40:	.word	0x0000053c
    3b44:	.word	0x00000414
    3b48:	.word	0x00000550
    3b4c:	.word	0x0000053c
    3b50:	.word	0x0000053c
    3b54:	.word	0x000003d8
    3b58:	.word	0x0000053c
    3b5c:	.word	0x0000053c
    3b60:	.word	0x0000053c
    3b64:	.word	0x0000053c
    3b68:	.word	0x0000053c
    3b6c:	.word	0x0000053c
    3b70:	.word	0x0000053c
    3b74:	.word	0x0000053c
    3b78:	.word	0x0000053c
    3b7c:	.word	0x0000053c
    3b80:	.word	0x0000053c
    3b84:	.word	0x0000053c
    3b88:	.word	0x0000053c
    3b8c:	.word	0x0000053c
    3b90:	.word	0x0000053c
    3b94:	.word	0x0000053c
    3b98:	.word	0x0000053c
    3b9c:	.word	0x0000053c
    3ba0:	.word	0x0000053c
    3ba4:	.word	0x0000053c
    3ba8:	.word	0x0000053c
    3bac:	.word	0x0000053c
    3bb0:	.word	0x0000053c
    3bb4:	.word	0x0000053c
    3bb8:	.word	0x0000053c
    3bbc:	.word	0x0000053c
    3bc0:	.word	0x0000053c
    3bc4:	.word	0x0000053c
    3bc8:	.word	0x0000053c
    3bcc:	.word	0x0000053c
    3bd0:	.word	0x000005b4
    3bd4:	.word	0x000005b4
    3bd8:	.word	0x0000053c
    3bdc:	.word	0x0000053c
    3be0:	.word	0x0000053c
    3be4:	.word	0x0000053c
    3be8:	.word	0x0000053c
    3bec:	.word	0x0000053c
    3bf0:	.word	0x0000053c
    3bf4:	.word	0x0000053c
    3bf8:	.word	0x0000053c
    3bfc:	.word	0x0000053c
    3c00:	.word	0x0000053c
    3c04:	.word	0x0000053c
    3c08:	.word	0x0000053c
    3c0c:	.word	0x0000053c
    3c10:	.word	0x0000053c
    3c14:	.word	0x0000053c
    3c18:	.word	0x0000053c
    3c1c:	.word	0x0000053c
    3c20:	.word	0x0000053c
    3c24:	.word	0x0000053c
    3c28:	.word	0x0000053c
    3c2c:	.word	0x0000053c
    3c30:	.word	0x0000053c
    3c34:	.word	0x0000053c
    3c38:	.word	0x0000053c
    3c3c:	.word	0x0000053c
    3c40:	.word	0x0000053c
    3c44:	.word	0x0000053c
    3c48:	.word	0x0000053c
    3c4c:	.word	0x0000053c
    3c50:	.word	0x0000053c
    3c54:	.word	0x0000053c
    3c58:	.word	0x0000053c
    3c5c:	.word	0x0000053c
    3c60:	.word	0x0000053c
    3c64:	.word	0x0000053c
    3c68:	.word	0x0000053c
    3c6c:	.word	0x0000053c
    3c70:	.word	0x0000053c
    3c74:	.word	0x0000053c
    3c78:	.word	0x0000053c
    3c7c:	.word	0x0000053c
    3c80:	.word	0x0000053c
    3c84:	.word	0x0000053c
    3c88:	.word	0x0000053c
    3c8c:	.word	0x0000053c
    3c90:	.word	0x0000053c
    3c94:	.word	0x0000053c
    3c98:	.word	0x0000053c
    3c9c:	.word	0x0000053c
    3ca0:	.word	0x0000053c
    3ca4:	.word	0x0000053c
    3ca8:	.word	0x00000610
    3cac:	.word	0x000003e8
    3cb0:	.word	0x0000053c
    3cb4:	.word	0x00000634
    3cb8:	.word	0x00000444
    3cbc:	.word	0x00000444
    3cc0:	.word	0x0000053c
    3cc4:	.word	0x0000053c
    3cc8:	.word	0x0000053c
    3ccc:	.word	0x000005e0
    3cd0:	.word	0x000005f0
    3cd4:	.word	0x0000053c
    3cd8:	.word	0x0000053c
    3cdc:	.word	0x0000053c
    3ce0:	.word	0x0000053c
    3ce4:	.word	0x000003e8
    3ce8:	.word	0x0000053c
    3cec:	.word	0x0000053c
    3cf0:	.word	0x000003d8
    3cf4:	.word	0x00000500
    3cf8:	.word	0x0000053c
    3cfc:	.word	0x0000053c
    3d00:	.word	0x0000053c
    3d04:	.word	0x000003e8
    3d08:	.word	0x0000053c
    3d0c:	.word	0x00000460
    3d10:	.word	0x00000398
    3d14:	.word	0x00000398
    3d18:	.word	0x00000398
    3d1c:	.word	0x00000398
    3d20:	.word	0x00000398
    3d24:	.word	0x00000398
    3d28:	.word	0x00000398
    3d2c:	.word	0x00000398
    3d30:	.word	0x0000053c
    3d34:	.word	0x000007e0
    3d38:	.word	0x000007e0
    3d3c:	.word	0x0000053c
    3d40:	.word	0x0000053c
    3d44:	.word	0x00000810
    3d48:	.word	0x0000081c
    3d4c:	.word	0x0000053c
    3d50:	.word	0x0000053c
    3d54:	.word	0x0000053c
    3d58:	.word	0x0000053c
    3d5c:	.word	0x0000053c
    3d60:	.word	0x0000053c
    3d64:	.word	0x0000053c
    3d68:	.word	0x0000053c
    3d6c:	.word	0x0000053c
    3d70:	.word	0x0000053c
    3d74:	.word	0x0000053c
    3d78:	.word	0x0000053c
    3d7c:	.word	0x0000053c
    3d80:	.word	0x0000053c
    3d84:	.word	0x0000053c
    3d88:	.word	0x0000053c
    3d8c:	.word	0x0000053c
    3d90:	.word	0x0000053c
    3d94:	.word	0x000003e8
    3d98:	.word	0x00000398
    3d9c:	.word	0x0000053c
    3da0:	.word	0x000005b4
    3da4:	.word	0x00000398
    3da8:	.word	0x00000398
    3dac:	.word	0x0000053c
    3db0:	.word	0x0000053c
    3db4:	.word	0x0000053c
    3db8:	.word	0x0000053c
    3dbc:	.word	0x0000053c
    3dc0:	.word	0x0000053c
    3dc4:	.word	0x0000053c
    3dc8:	.word	0x0000053c
    3dcc:	.word	0x00000828
    3dd0:	.word	0x00000398
    3dd4:	.word	0x00000398
    3dd8:	.word	0x00000398
    3ddc:	.word	0x00000398
    3de0:	.word	0x00000834
    3de4:	.word	0x00000398
    3de8:	.word	0x0000053c
    3dec:	.word	0x0000053c
    3df0:	.word	0x000007c8
    3df4:	.word	0x000007ec
    3df8:	.word	0x0000053c
    3dfc:	.word	0x000007c8
    3e00:	.word	0x000007f8
    3e04:	.word	0x000007d4
    3e08:	.word	0x000003e8
    3e0c:	.word	0x00000840
    3e10:	.word	0x00000398
    3e14:	.word	0x000007d4
    3e18:	.word	0x0000084c
    3e1c:	.word	0x00000858
    3e20:	.word	0x00000864
    3e24:	.word	0x00000870
    3e28:	.word	0x00000398
    3e2c:	.word	0x000007ec
    3e30:	.word	0x0000087c
    3e34:	.word	0x0000053c
    3e38:	.word	0x0000053c
    3e3c:	.word	0x0000053c
    3e40:	.word	0x0000053c
    3e44:	.word	0x0000053c
    3e48:	.word	0x0000053c
    3e4c:	.word	0x0000053c
    3e50:	.word	0x0000053c
    3e54:	.word	0x0000053c
    3e58:	.word	0x0000053c
    3e5c:	.word	0x0000053c
    3e60:	.word	0x0000053c
    3e64:	.word	0x000007d4
    3e68:	.word	0x0000053c
    3e6c:	.word	0x0000053c
    3e70:	.word	0x0000053c
    3e74:	.word	0x0000053c
    3e78:	.word	0x000007c8
    3e7c:	.word	0x0000053c
    3e80:	.word	0x0000053c
    3e84:	.word	0x0000053c
    3e88:	.word	0x0000053c
    3e8c:	.word	0x0000053c
    3e90:	.word	0x000004f0
    3e94:	.word	0x000007f8
    3e98:	.word	0x00000664
    3e9c:	.word	0x00000600
    3ea0:	mvn	r0, #255	; 0xff
    3ea4:	str	r0, [sp]
    3ea8:	movw	r3, #17152	; 0x4300
    3eac:	movt	r3, #19783	; 0x4d47
    3eb0:	mov	r0, #1
    3eb4:	mov	r1, #0
    3eb8:	mov	r2, #0
    3ebc:	bl	83b8 <gen_mcmp>
    3ec0:	sub	sp, fp, #16
    3ec4:	pop	{r4, r5, r6, sl, fp, pc}
    3ec8:	cmp	r4, #2048	; 0x800
    3ecc:	bne	430c <gen_linktype+0x8ac>
    3ed0:	mov	r0, #2
    3ed4:	sub	sp, fp, #16
    3ed8:	pop	{r4, r5, r6, sl, fp, lr}
    3edc:	b	a3ac <gen_mpls_linktype>
    3ee0:	mov	r0, r4
    3ee4:	sub	sp, fp, #16
    3ee8:	pop	{r4, r5, r6, sl, fp, lr}
    3eec:	b	a798 <gen_llc_linktype>
    3ef0:	bl	a71c <gen_check_802_11_data_frame>
    3ef4:	mov	r5, r0
    3ef8:	mov	r0, r4
    3efc:	bl	a798 <gen_llc_linktype>
    3f00:	mov	r4, r0
    3f04:	mov	r0, r5
    3f08:	mov	r1, r4
    3f0c:	bl	314c <sf_gen_and>
    3f10:	mov	r0, r4
    3f14:	sub	sp, fp, #16
    3f18:	pop	{r4, r5, r6, sl, fp, pc}
    3f1c:	movw	r0, #34525	; 0x86dd
    3f20:	cmp	r4, r0
    3f24:	beq	3fb0 <gen_linktype+0x550>
    3f28:	cmp	r4, #2048	; 0x800
    3f2c:	bne	41c8 <gen_linktype+0x768>
    3f30:	mov	r0, #240	; 0xf0
    3f34:	str	r0, [sp]
    3f38:	mov	r0, #1
    3f3c:	mov	r1, #0
    3f40:	mov	r2, #16
    3f44:	mov	r3, #64	; 0x40
    3f48:	b	3ebc <gen_linktype+0x45c>
    3f4c:	cmp	r4, #2048	; 0x800
    3f50:	beq	3fcc <gen_linktype+0x56c>
    3f54:	movw	r1, #34525	; 0x86dd
    3f58:	cmp	r4, r1
    3f5c:	bne	41c8 <gen_linktype+0x768>
    3f60:	mov	r3, #10
    3f64:	b	3fd0 <gen_linktype+0x570>
    3f68:	movw	r0, #32820	; 0x8034
    3f6c:	cmp	r4, r0
    3f70:	ble	4180 <gen_linktype+0x720>
    3f74:	movw	r0, #32821	; 0x8035
    3f78:	cmp	r4, r0
    3f7c:	beq	41ec <gen_linktype+0x78c>
    3f80:	movw	r0, #32923	; 0x809b
    3f84:	cmp	r4, r0
    3f88:	beq	4204 <gen_linktype+0x7a4>
    3f8c:	movw	r0, #34525	; 0x86dd
    3f90:	cmp	r4, r0
    3f94:	bne	41c8 <gen_linktype+0x768>
    3f98:	ldr	r1, [pc, #1056]	; 43c0 <gen_linktype+0x960>
    3f9c:	ldr	r1, [pc, r1]
    3fa0:	mov	r0, #1
    3fa4:	mov	r2, #16
    3fa8:	mov	r3, #196	; 0xc4
    3fac:	b	3acc <gen_linktype+0x6c>
    3fb0:	mov	r0, #240	; 0xf0
    3fb4:	str	r0, [sp]
    3fb8:	mov	r0, #1
    3fbc:	mov	r1, #0
    3fc0:	mov	r2, #16
    3fc4:	mov	r3, #96	; 0x60
    3fc8:	b	3ebc <gen_linktype+0x45c>
    3fcc:	mov	r3, #2
    3fd0:	cmp	r0, #109	; 0x6d
    3fd4:	cmpne	r0, #0
    3fd8:	bne	3fe8 <gen_linktype+0x588>
    3fdc:	mov	r0, r3
    3fe0:	bl	5d84 <__bswap_32>
    3fe4:	mov	r3, r0
    3fe8:	mov	r0, #1
    3fec:	mov	r1, #0
    3ff0:	mov	r2, #0
    3ff4:	b	3acc <gen_linktype+0x6c>
    3ff8:	mov	r0, r4
    3ffc:	sub	sp, fp, #16
    4000:	pop	{r4, r5, r6, sl, fp, lr}
    4004:	b	aa48 <gen_ipnet_linktype>
    4008:	ldr	r0, [pc, #916]	; 43a4 <gen_linktype+0x944>
    400c:	add	r0, pc, r0
    4010:	ldrb	r0, [r0]
    4014:	cmp	r0, #1
    4018:	bne	41d4 <gen_linktype+0x774>
    401c:	mov	r0, #1
    4020:	mov	r1, #4
    4024:	mov	r2, #8
    4028:	mov	r3, #65280	; 0xff00
    402c:	bl	450c <gen_cmp>
    4030:	mov	r5, r0
    4034:	bl	3278 <sf_gen_not>
    4038:	mov	r0, r4
    403c:	bl	a4fc <gen_ether_linktype>
    4040:	b	3f00 <gen_linktype+0x4a0>
    4044:	ldr	r1, [pc, #964]	; 4410 <gen_linktype+0x9b0>
    4048:	ldr	r1, [pc, r1]
    404c:	cmn	r1, #1
    4050:	bne	412c <gen_linktype+0x6cc>
    4054:	bl	fc4 <abort@plt>
    4058:	cmp	r4, #2048	; 0x800
    405c:	bne	40bc <gen_linktype+0x65c>
    4060:	ldr	r1, [pc, #832]	; 43a8 <gen_linktype+0x948>
    4064:	ldr	r1, [pc, r1]
    4068:	mov	r0, #1
    406c:	mov	r2, #8
    4070:	mov	r3, #33	; 0x21
    4074:	bl	450c <gen_cmp>
    4078:	mov	r4, r0
    407c:	ldr	r1, [pc, #808]	; 43ac <gen_linktype+0x94c>
    4080:	ldr	r1, [pc, r1]
    4084:	mov	r0, #1
    4088:	mov	r2, #8
    408c:	mov	r3, #45	; 0x2d
    4090:	bl	450c <gen_cmp>
    4094:	mov	r5, r0
    4098:	mov	r0, r4
    409c:	mov	r1, r5
    40a0:	bl	3224 <sf_gen_or>
    40a4:	ldr	r1, [pc, #772]	; 43b0 <gen_linktype+0x950>
    40a8:	ldr	r1, [pc, r1]
    40ac:	mov	r0, #1
    40b0:	mov	r2, #8
    40b4:	mov	r3, #47	; 0x2f
    40b8:	b	424c <gen_linktype+0x7ec>
    40bc:	mov	r0, r4
    40c0:	bl	a460 <ethertype_to_ppptype>
    40c4:	mov	r3, r0
    40c8:	ldr	r1, [pc, #740]	; 43b4 <gen_linktype+0x954>
    40cc:	ldr	r1, [pc, r1]
    40d0:	mov	r0, #1
    40d4:	b	3ac8 <gen_linktype+0x68>
    40d8:	mov	r0, r4
    40dc:	sub	sp, fp, #16
    40e0:	pop	{r4, r5, r6, sl, fp, lr}
    40e4:	b	a4fc <gen_ether_linktype>
    40e8:	mov	r0, r4
    40ec:	sub	sp, fp, #16
    40f0:	pop	{r4, r5, r6, sl, fp, lr}
    40f4:	b	a82c <gen_linux_sll_linktype>
    40f8:	movw	r0, #32923	; 0x809b
    40fc:	cmp	r4, r0
    4100:	beq	4174 <gen_linktype+0x714>
    4104:	b	41c8 <gen_linktype+0x768>
    4108:	movw	r0, #34525	; 0x86dd
    410c:	cmp	r4, r0
    4110:	beq	4174 <gen_linktype+0x714>
    4114:	b	41c8 <gen_linktype+0x768>
    4118:	mov	r0, #254	; 0xfe
    411c:	cmp	r4, #254	; 0xfe
    4120:	orreq	r4, r0, r4, lsl #8
    4124:	ldr	r1, [pc, #744]	; 4414 <gen_linktype+0x9b4>
    4128:	ldr	r1, [pc, r1]
    412c:	mov	r0, #1
    4130:	mov	r2, #8
    4134:	mov	r3, r4
    4138:	b	3acc <gen_linktype+0x6c>
    413c:	cmp	r4, #254	; 0xfe
    4140:	beq	4278 <gen_linktype+0x818>
    4144:	movw	r0, #34525	; 0x86dd
    4148:	cmp	r4, r0
    414c:	beq	4264 <gen_linktype+0x804>
    4150:	cmp	r4, #2048	; 0x800
    4154:	bne	41c8 <gen_linktype+0x768>
    4158:	mov	r0, #1
    415c:	mov	r1, #2
    4160:	mov	r2, #8
    4164:	mov	r3, #972	; 0x3cc
    4168:	b	3acc <gen_linktype+0x6c>
    416c:	cmp	r4, #2048	; 0x800
    4170:	bne	41c8 <gen_linktype+0x768>
    4174:	sub	sp, fp, #16
    4178:	pop	{r4, r5, r6, sl, fp, lr}
    417c:	b	aa40 <gen_true>
    4180:	cmp	r4, #2048	; 0x800
    4184:	beq	421c <gen_linktype+0x7bc>
    4188:	movw	r0, #2054	; 0x806
    418c:	cmp	r4, r0
    4190:	bne	41c8 <gen_linktype+0x768>
    4194:	ldr	r1, [pc, #540]	; 43b8 <gen_linktype+0x958>
    4198:	ldr	r1, [pc, r1]
    419c:	mov	r0, #1
    41a0:	mov	r2, #16
    41a4:	mov	r3, #213	; 0xd5
    41a8:	bl	450c <gen_cmp>
    41ac:	mov	r5, r0
    41b0:	ldr	r1, [pc, #516]	; 43bc <gen_linktype+0x95c>
    41b4:	ldr	r1, [pc, r1]
    41b8:	mov	r0, #1
    41bc:	mov	r2, #16
    41c0:	mov	r3, #241	; 0xf1
    41c4:	b	424c <gen_linktype+0x7ec>
    41c8:	sub	sp, fp, #16
    41cc:	pop	{r4, r5, r6, sl, fp, lr}
    41d0:	b	aa38 <gen_false>
    41d4:	mov	r0, #53	; 0x35
    41d8:	mov	r1, #2
    41dc:	mov	r2, #16
    41e0:	mov	r3, #0
    41e4:	bl	924c <sf_gen_atmfield_code>
    41e8:	b	3ef4 <gen_linktype+0x494>
    41ec:	ldr	r1, [pc, #472]	; 43cc <gen_linktype+0x96c>
    41f0:	ldr	r1, [pc, r1]
    41f4:	mov	r0, #1
    41f8:	mov	r2, #16
    41fc:	mov	r3, #214	; 0xd6
    4200:	b	3acc <gen_linktype+0x6c>
    4204:	ldr	r1, [pc, #452]	; 43d0 <gen_linktype+0x970>
    4208:	ldr	r1, [pc, r1]
    420c:	mov	r0, #1
    4210:	mov	r2, #16
    4214:	mov	r3, #221	; 0xdd
    4218:	b	3acc <gen_linktype+0x6c>
    421c:	ldr	r1, [pc, #416]	; 43c4 <gen_linktype+0x964>
    4220:	ldr	r1, [pc, r1]
    4224:	mov	r0, #1
    4228:	mov	r2, #16
    422c:	mov	r3, #212	; 0xd4
    4230:	bl	450c <gen_cmp>
    4234:	mov	r5, r0
    4238:	ldr	r1, [pc, #392]	; 43c8 <gen_linktype+0x968>
    423c:	ldr	r1, [pc, r1]
    4240:	mov	r0, #1
    4244:	mov	r2, #16
    4248:	mov	r3, #240	; 0xf0
    424c:	bl	450c <gen_cmp>
    4250:	mov	r4, r0
    4254:	mov	r0, r5
    4258:	mov	r1, r4
    425c:	bl	3224 <sf_gen_or>
    4260:	b	3f10 <gen_linktype+0x4b0>
    4264:	mov	r0, #1
    4268:	mov	r1, #2
    426c:	mov	r2, #8
    4270:	movw	r3, #910	; 0x38e
    4274:	b	3acc <gen_linktype+0x6c>
    4278:	mov	r0, #1
    427c:	mov	r1, #2
    4280:	mov	r2, #8
    4284:	movw	r3, #897	; 0x381
    4288:	bl	450c <gen_cmp>
    428c:	mov	r5, r0
    4290:	mov	r0, #1
    4294:	mov	r1, #2
    4298:	mov	r2, #8
    429c:	movw	r3, #898	; 0x382
    42a0:	bl	450c <gen_cmp>
    42a4:	mov	r6, r0
    42a8:	mov	r0, #1
    42ac:	mov	r1, #2
    42b0:	mov	r2, #8
    42b4:	movw	r3, #899	; 0x383
    42b8:	bl	450c <gen_cmp>
    42bc:	mov	r4, r0
    42c0:	mov	r0, r6
    42c4:	mov	r1, r4
    42c8:	bl	3224 <sf_gen_or>
    42cc:	b	4254 <gen_linktype+0x7f4>
    42d0:	ldr	r0, [pc, #276]	; 43ec <gen_linktype+0x98c>
    42d4:	add	r0, pc, r0
    42d8:	bl	1f9c <sf_bpf_error>
    42dc:	ldr	r0, [pc, #276]	; 43f8 <gen_linktype+0x998>
    42e0:	add	r0, pc, r0
    42e4:	bl	1f9c <sf_bpf_error>
    42e8:	ldr	r0, [pc, #240]	; 43e0 <gen_linktype+0x980>
    42ec:	add	r0, pc, r0
    42f0:	bl	1f9c <sf_bpf_error>
    42f4:	ldr	r0, [pc, #244]	; 43f0 <gen_linktype+0x990>
    42f8:	add	r0, pc, r0
    42fc:	bl	1f9c <sf_bpf_error>
    4300:	ldr	r0, [pc, #236]	; 43f4 <gen_linktype+0x994>
    4304:	add	r0, pc, r0
    4308:	bl	1f9c <sf_bpf_error>
    430c:	ldr	r0, [pc, #128]	; 4394 <gen_linktype+0x934>
    4310:	add	r0, pc, r0
    4314:	bl	1f9c <sf_bpf_error>
    4318:	ldr	r0, [pc, #188]	; 43dc <gen_linktype+0x97c>
    431c:	add	r0, pc, r0
    4320:	bl	1f9c <sf_bpf_error>
    4324:	ldr	r0, [pc, #172]	; 43d8 <gen_linktype+0x978>
    4328:	add	r0, pc, r0
    432c:	bl	1f9c <sf_bpf_error>
    4330:	ldr	r0, [pc, #176]	; 43e8 <gen_linktype+0x988>
    4334:	add	r0, pc, r0
    4338:	bl	1f9c <sf_bpf_error>
    433c:	ldr	r0, [pc, #144]	; 43d4 <gen_linktype+0x974>
    4340:	add	r0, pc, r0
    4344:	bl	1f9c <sf_bpf_error>
    4348:	ldr	r0, [pc, #172]	; 43fc <gen_linktype+0x99c>
    434c:	add	r0, pc, r0
    4350:	bl	1f9c <sf_bpf_error>
    4354:	ldr	r0, [pc, #164]	; 4400 <gen_linktype+0x9a0>
    4358:	add	r0, pc, r0
    435c:	bl	1f9c <sf_bpf_error>
    4360:	ldr	r0, [pc, #124]	; 43e4 <gen_linktype+0x984>
    4364:	add	r0, pc, r0
    4368:	bl	1f9c <sf_bpf_error>
    436c:	ldr	r0, [pc, #144]	; 4404 <gen_linktype+0x9a4>
    4370:	add	r0, pc, r0
    4374:	bl	1f9c <sf_bpf_error>
    4378:	ldr	r0, [pc, #136]	; 4408 <gen_linktype+0x9a8>
    437c:	add	r0, pc, r0
    4380:	bl	1f9c <sf_bpf_error>
    4384:	ldr	r0, [pc, #128]	; 440c <gen_linktype+0x9ac>
    4388:	add	r0, pc, r0
    438c:	bl	1f9c <sf_bpf_error>
    4390:	.word	0x0002c7d0
    4394:	.word	0x0000eb4e
    4398:	.word	0x0002cb20
    439c:	.word	0x0002cae8
    43a0:	.word	0x0002cab0
    43a4:	.word	0x0002c598
    43a8:	.word	0x0002c544
    43ac:	.word	0x0002c528
    43b0:	.word	0x0002c500
    43b4:	.word	0x0002c4dc
    43b8:	.word	0x0002c410
    43bc:	.word	0x0002c3f4
    43c0:	.word	0x0002c60c
    43c4:	.word	0x0002c388
    43c8:	.word	0x0002c36c
    43cc:	.word	0x0002c3b8
    43d0:	.word	0x0002c3a0
    43d4:	.word	0x0000eb3d
    43d8:	.word	0x0000eb96
    43dc:	.word	0x0000ebd1
    43e0:	.word	0x0000ec32
    43e4:	.word	0x0000ebe9
    43e8:	.word	0x0000ec47
    43ec:	.word	0x0000ecd6
    43f0:	.word	0x0000ece0
    43f4:	.word	0x0000ed08
    43f8:	.word	0x0000ed5a
    43fc:	.word	0x0000ed26
    4400:	.word	0x0000ed50
    4404:	.word	0x0000ed67
    4408:	.word	0x0000ed8b
    440c:	.word	0x0000edae
    4410:	.word	0x0002c560
    4414:	.word	0x0002c480

00004418 <sf_gen_portop>:
    4418:	push	{r4, r5, r6, r7, fp, lr}
    441c:	add	fp, sp, #16
    4420:	mov	r6, r2
    4424:	mov	r3, r1
    4428:	mov	r5, r0
    442c:	mov	r0, #3
    4430:	mov	r1, #9
    4434:	mov	r2, #16
    4438:	bl	450c <gen_cmp>
    443c:	mov	r7, r0
    4440:	bl	453c <gen_ipfrag>
    4444:	mov	r4, r0
    4448:	mov	r0, r7
    444c:	mov	r1, r4
    4450:	bl	314c <sf_gen_and>
    4454:	cmp	r6, #4
    4458:	bhi	4508 <sf_gen_portop+0xf0>
    445c:	add	r0, pc, #4
    4460:	ldr	r1, [r0, r6, lsl #2]
    4464:	add	pc, r0, r1
    4468:	.word	0x00000014
    446c:	.word	0x00000074
    4470:	.word	0x0000007c
    4474:	.word	0x00000014
    4478:	.word	0x00000044
    447c:	mov	r0, #0
    4480:	mov	r1, r5
    4484:	bl	4580 <gen_portatom>
    4488:	mov	r6, r0
    448c:	mov	r0, #2
    4490:	mov	r1, r5
    4494:	bl	4580 <gen_portatom>
    4498:	mov	r5, r0
    449c:	mov	r0, r6
    44a0:	mov	r1, r5
    44a4:	bl	3224 <sf_gen_or>
    44a8:	b	44f4 <sf_gen_portop+0xdc>
    44ac:	mov	r0, #0
    44b0:	mov	r1, r5
    44b4:	bl	4580 <gen_portatom>
    44b8:	mov	r6, r0
    44bc:	mov	r0, #2
    44c0:	mov	r1, r5
    44c4:	bl	4580 <gen_portatom>
    44c8:	mov	r5, r0
    44cc:	mov	r0, r6
    44d0:	mov	r1, r5
    44d4:	bl	314c <sf_gen_and>
    44d8:	b	44f4 <sf_gen_portop+0xdc>
    44dc:	mov	r0, #0
    44e0:	b	44e8 <sf_gen_portop+0xd0>
    44e4:	mov	r0, #2
    44e8:	mov	r1, r5
    44ec:	bl	4580 <gen_portatom>
    44f0:	mov	r5, r0
    44f4:	mov	r0, r4
    44f8:	mov	r1, r5
    44fc:	bl	314c <sf_gen_and>
    4500:	mov	r0, r5
    4504:	pop	{r4, r5, r6, r7, fp, pc}
    4508:	bl	fc4 <abort@plt>

0000450c <gen_cmp>:
    450c:	push	{fp, lr}
    4510:	mov	fp, sp
    4514:	sub	sp, sp, #16
    4518:	mov	ip, #0
    451c:	mov	lr, #16
    4520:	str	lr, [sp]
    4524:	str	ip, [sp, #4]
    4528:	str	r3, [sp, #8]
    452c:	mvn	r3, #0
    4530:	bl	93e8 <gen_ncmp>
    4534:	mov	sp, fp
    4538:	pop	{fp, pc}

0000453c <gen_ipfrag>:
    453c:	push	{r4, r5, fp, lr}
    4540:	add	fp, sp, #8
    4544:	mov	r0, #3
    4548:	mov	r1, #6
    454c:	mov	r2, #8
    4550:	bl	87cc <gen_load_a>
    4554:	mov	r4, r0
    4558:	mov	r0, #69	; 0x45
    455c:	bl	7c58 <new_block>
    4560:	mov	r5, r0
    4564:	movw	r0, #8191	; 0x1fff
    4568:	str	r0, [r5, #20]
    456c:	str	r4, [r5, #4]
    4570:	mov	r0, r5
    4574:	bl	3278 <sf_gen_not>
    4578:	mov	r0, r5
    457c:	pop	{r4, r5, fp, pc}

00004580 <gen_portatom>:
    4580:	mov	r3, r1
    4584:	mov	r1, r0
    4588:	mov	r0, #5
    458c:	mov	r2, #8
    4590:	b	450c <gen_cmp>

00004594 <sf_gen_portop6>:
    4594:	push	{r4, r5, r6, sl, fp, lr}
    4598:	add	fp, sp, #16
    459c:	mov	r6, r2
    45a0:	mov	r3, r1
    45a4:	mov	r5, r0
    45a8:	mov	r0, #3
    45ac:	mov	r1, #6
    45b0:	mov	r2, #16
    45b4:	bl	450c <gen_cmp>
    45b8:	cmp	r6, #4
    45bc:	bhi	4670 <sf_gen_portop6+0xdc>
    45c0:	mov	r4, r0
    45c4:	add	r0, pc, #4
    45c8:	ldr	r1, [r0, r6, lsl #2]
    45cc:	add	pc, r0, r1
    45d0:	.word	0x00000014
    45d4:	.word	0x00000074
    45d8:	.word	0x0000007c
    45dc:	.word	0x00000014
    45e0:	.word	0x00000044
    45e4:	mov	r0, #0
    45e8:	mov	r1, r5
    45ec:	bl	4674 <gen_portatom6>
    45f0:	mov	r6, r0
    45f4:	mov	r0, #2
    45f8:	mov	r1, r5
    45fc:	bl	4674 <gen_portatom6>
    4600:	mov	r5, r0
    4604:	mov	r0, r6
    4608:	mov	r1, r5
    460c:	bl	3224 <sf_gen_or>
    4610:	b	465c <sf_gen_portop6+0xc8>
    4614:	mov	r0, #0
    4618:	mov	r1, r5
    461c:	bl	4674 <gen_portatom6>
    4620:	mov	r6, r0
    4624:	mov	r0, #2
    4628:	mov	r1, r5
    462c:	bl	4674 <gen_portatom6>
    4630:	mov	r5, r0
    4634:	mov	r0, r6
    4638:	mov	r1, r5
    463c:	bl	314c <sf_gen_and>
    4640:	b	465c <sf_gen_portop6+0xc8>
    4644:	mov	r0, #0
    4648:	b	4650 <sf_gen_portop6+0xbc>
    464c:	mov	r0, #2
    4650:	mov	r1, r5
    4654:	bl	4674 <gen_portatom6>
    4658:	mov	r5, r0
    465c:	mov	r0, r4
    4660:	mov	r1, r5
    4664:	bl	314c <sf_gen_and>
    4668:	mov	r0, r5
    466c:	pop	{r4, r5, r6, sl, fp, pc}
    4670:	bl	fc4 <abort@plt>

00004674 <gen_portatom6>:
    4674:	mov	r3, r1
    4678:	mov	r1, r0
    467c:	mov	r0, #6
    4680:	mov	r2, #8
    4684:	b	450c <gen_cmp>

00004688 <sf_gen_portrangeop>:
    4688:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    468c:	add	fp, sp, #24
    4690:	mov	r7, r3
    4694:	mov	r3, r2
    4698:	mov	r5, r1
    469c:	mov	r6, r0
    46a0:	mov	r0, #3
    46a4:	mov	r1, #9
    46a8:	mov	r2, #16
    46ac:	bl	450c <gen_cmp>
    46b0:	mov	r4, r0
    46b4:	bl	453c <gen_ipfrag>
    46b8:	mov	r8, r0
    46bc:	mov	r0, r4
    46c0:	mov	r1, r8
    46c4:	bl	314c <sf_gen_and>
    46c8:	cmp	r7, #4
    46cc:	bhi	4790 <sf_gen_portrangeop+0x108>
    46d0:	add	r0, pc, #4
    46d4:	ldr	r1, [r0, r7, lsl #2]
    46d8:	add	pc, r0, r1
    46dc:	.word	0x00000014
    46e0:	.word	0x00000084
    46e4:	.word	0x0000008c
    46e8:	.word	0x00000014
    46ec:	.word	0x0000004c
    46f0:	mov	r0, #0
    46f4:	mov	r1, r6
    46f8:	mov	r2, r5
    46fc:	bl	4794 <gen_portrangeatom>
    4700:	mov	r4, r0
    4704:	mov	r0, #2
    4708:	mov	r1, r6
    470c:	mov	r2, r5
    4710:	bl	4794 <gen_portrangeatom>
    4714:	mov	r5, r0
    4718:	mov	r0, r4
    471c:	mov	r1, r5
    4720:	bl	3224 <sf_gen_or>
    4724:	b	477c <sf_gen_portrangeop+0xf4>
    4728:	mov	r0, #0
    472c:	mov	r1, r6
    4730:	mov	r2, r5
    4734:	bl	4794 <gen_portrangeatom>
    4738:	mov	r4, r0
    473c:	mov	r0, #2
    4740:	mov	r1, r6
    4744:	mov	r2, r5
    4748:	bl	4794 <gen_portrangeatom>
    474c:	mov	r5, r0
    4750:	mov	r0, r4
    4754:	mov	r1, r5
    4758:	bl	314c <sf_gen_and>
    475c:	b	477c <sf_gen_portrangeop+0xf4>
    4760:	mov	r0, #0
    4764:	b	476c <sf_gen_portrangeop+0xe4>
    4768:	mov	r0, #2
    476c:	mov	r1, r6
    4770:	mov	r2, r5
    4774:	bl	4794 <gen_portrangeatom>
    4778:	mov	r5, r0
    477c:	mov	r0, r8
    4780:	mov	r1, r5
    4784:	bl	314c <sf_gen_and>
    4788:	mov	r0, r5
    478c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    4790:	bl	fc4 <abort@plt>

00004794 <gen_portrangeatom>:
    4794:	push	{r4, r5, r6, r7, fp, lr}
    4798:	add	fp, sp, #16
    479c:	mov	r4, r2
    47a0:	mov	r5, r1
    47a4:	mov	r6, r0
    47a8:	cmp	r1, r2
    47ac:	mov	r3, r1
    47b0:	movgt	r3, r2
    47b4:	mov	r0, #5
    47b8:	mov	r1, r6
    47bc:	mov	r2, #8
    47c0:	bl	88c8 <gen_cmp_ge>
    47c4:	mov	r7, r0
    47c8:	cmp	r5, r4
    47cc:	movgt	r4, r5
    47d0:	mov	r0, #5
    47d4:	mov	r1, r6
    47d8:	mov	r2, #8
    47dc:	mov	r3, r4
    47e0:	bl	ac60 <gen_cmp_le>
    47e4:	mov	r4, r0
    47e8:	mov	r0, r7
    47ec:	mov	r1, r4
    47f0:	bl	314c <sf_gen_and>
    47f4:	mov	r0, r4
    47f8:	pop	{r4, r5, r6, r7, fp, pc}

000047fc <sf_gen_portrangeop6>:
    47fc:	push	{r4, r5, r6, r7, fp, lr}
    4800:	add	fp, sp, #16
    4804:	mov	r7, r3
    4808:	mov	r3, r2
    480c:	mov	r5, r1
    4810:	mov	r6, r0
    4814:	mov	r0, #3
    4818:	mov	r1, #6
    481c:	mov	r2, #16
    4820:	bl	450c <gen_cmp>
    4824:	cmp	r7, #4
    4828:	bhi	48f0 <sf_gen_portrangeop6+0xf4>
    482c:	mov	r4, r0
    4830:	add	r0, pc, #4
    4834:	ldr	r1, [r0, r7, lsl #2]
    4838:	add	pc, r0, r1
    483c:	.word	0x00000014
    4840:	.word	0x00000084
    4844:	.word	0x0000008c
    4848:	.word	0x00000014
    484c:	.word	0x0000004c
    4850:	mov	r0, #0
    4854:	mov	r1, r6
    4858:	mov	r2, r5
    485c:	bl	48f4 <gen_portrangeatom6>
    4860:	mov	r7, r0
    4864:	mov	r0, #2
    4868:	mov	r1, r6
    486c:	mov	r2, r5
    4870:	bl	48f4 <gen_portrangeatom6>
    4874:	mov	r5, r0
    4878:	mov	r0, r7
    487c:	mov	r1, r5
    4880:	bl	3224 <sf_gen_or>
    4884:	b	48dc <sf_gen_portrangeop6+0xe0>
    4888:	mov	r0, #0
    488c:	mov	r1, r6
    4890:	mov	r2, r5
    4894:	bl	48f4 <gen_portrangeatom6>
    4898:	mov	r7, r0
    489c:	mov	r0, #2
    48a0:	mov	r1, r6
    48a4:	mov	r2, r5
    48a8:	bl	48f4 <gen_portrangeatom6>
    48ac:	mov	r5, r0
    48b0:	mov	r0, r7
    48b4:	mov	r1, r5
    48b8:	bl	314c <sf_gen_and>
    48bc:	b	48dc <sf_gen_portrangeop6+0xe0>
    48c0:	mov	r0, #0
    48c4:	b	48cc <sf_gen_portrangeop6+0xd0>
    48c8:	mov	r0, #2
    48cc:	mov	r1, r6
    48d0:	mov	r2, r5
    48d4:	bl	48f4 <gen_portrangeatom6>
    48d8:	mov	r5, r0
    48dc:	mov	r0, r4
    48e0:	mov	r1, r5
    48e4:	bl	314c <sf_gen_and>
    48e8:	mov	r0, r5
    48ec:	pop	{r4, r5, r6, r7, fp, pc}
    48f0:	bl	fc4 <abort@plt>

000048f4 <gen_portrangeatom6>:
    48f4:	push	{r4, r5, r6, r7, fp, lr}
    48f8:	add	fp, sp, #16
    48fc:	mov	r4, r2
    4900:	mov	r5, r1
    4904:	mov	r6, r0
    4908:	cmp	r1, r2
    490c:	mov	r3, r1
    4910:	movgt	r3, r2
    4914:	mov	r0, #6
    4918:	mov	r1, r6
    491c:	mov	r2, #8
    4920:	bl	88c8 <gen_cmp_ge>
    4924:	mov	r7, r0
    4928:	cmp	r5, r4
    492c:	movgt	r4, r5
    4930:	mov	r0, #6
    4934:	mov	r1, r6
    4938:	mov	r2, #8
    493c:	mov	r3, r4
    4940:	bl	ac60 <gen_cmp_le>
    4944:	mov	r4, r0
    4948:	mov	r0, r7
    494c:	mov	r1, r4
    4950:	bl	314c <sf_gen_and>
    4954:	mov	r0, r4
    4958:	pop	{r4, r5, r6, r7, fp, pc}

0000495c <sf_gen_scode>:
    495c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4960:	add	fp, sp, #28
    4964:	sub	sp, sp, #44	; 0x2c
    4968:	uxtb	r9, r1
    496c:	ubfx	r6, r1, #16, #8
    4970:	ubfx	r5, r1, #8, #8
    4974:	cmp	r9, #7
    4978:	bhi	4fb8 <sf_gen_scode+0x65c>
    497c:	mov	r7, r0
    4980:	lsr	r0, r1, #8
    4984:	add	r1, pc, #4
    4988:	ldr	r2, [r1, r9, lsl #2]
    498c:	add	pc, r1, r2
    4990:	.word	0x00000020
    4994:	.word	0x00000020
    4998:	.word	0x00000174
    499c:	.word	0x000001c4
    49a0:	.word	0x00000634
    49a4:	.word	0x000002bc
    49a8:	.word	0x0000022c
    49ac:	.word	0x00000250
    49b0:	uxtb	r0, r0
    49b4:	cmp	r0, #12
    49b8:	beq	4c74 <sf_gen_scode+0x318>
    49bc:	cmp	r0, #1
    49c0:	bne	4c98 <sf_gen_scode+0x33c>
    49c4:	ldr	r0, [pc, #1836]	; 50f8 <sf_gen_scode+0x79c>
    49c8:	ldr	r0, [pc, r0]
    49cc:	cmp	r0, #104	; 0x68
    49d0:	ble	4eac <sf_gen_scode+0x550>
    49d4:	sub	r1, r0, #105	; 0x69
    49d8:	cmp	r1, #58	; 0x3a
    49dc:	bhi	4f64 <sf_gen_scode+0x608>
    49e0:	add	r0, pc, #4
    49e4:	ldr	r1, [r0, r1, lsl #2]
    49e8:	add	pc, r0, r1
    49ec:	.word	0x000000ec
    49f0:	.word	0x000006b0
    49f4:	.word	0x000006b0
    49f8:	.word	0x000006b0
    49fc:	.word	0x000006b0
    4a00:	.word	0x000006b0
    4a04:	.word	0x000006b0
    4a08:	.word	0x000006b0
    4a0c:	.word	0x000006b0
    4a10:	.word	0x000006b0
    4a14:	.word	0x000006b0
    4a18:	.word	0x000006b0
    4a1c:	.word	0x000006b0
    4a20:	.word	0x000006b0
    4a24:	.word	0x000000ec
    4a28:	.word	0x000006b0
    4a2c:	.word	0x000006b0
    4a30:	.word	0x00000584
    4a34:	.word	0x00000510
    4a38:	.word	0x000006b0
    4a3c:	.word	0x000006b0
    4a40:	.word	0x000006b0
    4a44:	.word	0x000000ec
    4a48:	.word	0x000006b0
    4a4c:	.word	0x000006b0
    4a50:	.word	0x000006b0
    4a54:	.word	0x000006b0
    4a58:	.word	0x000006b0
    4a5c:	.word	0x000006b0
    4a60:	.word	0x000006b0
    4a64:	.word	0x000006b0
    4a68:	.word	0x000006b0
    4a6c:	.word	0x000006b0
    4a70:	.word	0x000006b0
    4a74:	.word	0x000006b0
    4a78:	.word	0x000006b0
    4a7c:	.word	0x000006b0
    4a80:	.word	0x000006b0
    4a84:	.word	0x000006b0
    4a88:	.word	0x000006b0
    4a8c:	.word	0x000006b0
    4a90:	.word	0x000006b0
    4a94:	.word	0x000006b0
    4a98:	.word	0x000006b0
    4a9c:	.word	0x000006b0
    4aa0:	.word	0x000006b0
    4aa4:	.word	0x000006b0
    4aa8:	.word	0x000006b0
    4aac:	.word	0x000006b0
    4ab0:	.word	0x000006b0
    4ab4:	.word	0x000006b0
    4ab8:	.word	0x000006b0
    4abc:	.word	0x000006b0
    4ac0:	.word	0x000006b0
    4ac4:	.word	0x000006b0
    4ac8:	.word	0x000006b0
    4acc:	.word	0x000006b0
    4ad0:	.word	0x000006b0
    4ad4:	.word	0x000000ec
    4ad8:	mov	r0, r7
    4adc:	bl	b90c <pcap_ether_hostton>
    4ae0:	cmp	r0, #0
    4ae4:	beq	50a8 <sf_gen_scode+0x74c>
    4ae8:	mov	r4, r0
    4aec:	mov	r1, r6
    4af0:	bl	5770 <gen_wlanhostop>
    4af4:	mov	r8, r0
    4af8:	mov	r0, r4
    4afc:	bl	e5c <free@plt>
    4b00:	b	4ea0 <sf_gen_scode+0x544>
    4b04:	mov	r0, r7
    4b08:	bl	b49c <pcap_nametonetaddr>
    4b0c:	cmp	r0, #0
    4b10:	beq	4fe4 <sf_gen_scode+0x688>
    4b14:	sub	r2, r0, #1
    4b18:	mvn	r1, #0
    4b1c:	movw	r3, #65534	; 0xfffe
    4b20:	movt	r3, #255	; 0xff
    4b24:	cmp	r2, r3
    4b28:	bhi	4b4c <sf_gen_scode+0x1f0>
    4b2c:	mvn	r2, #0
    4b30:	mvn	r3, #-16777216	; 0xff000000
    4b34:	mvn	r1, #0
    4b38:	add	r7, r2, r0, lsl #8
    4b3c:	lsl	r1, r1, #8
    4b40:	lsl	r0, r0, #8
    4b44:	cmp	r7, r3
    4b48:	bcc	4b38 <sf_gen_scode+0x1dc>
    4b4c:	str	r9, [sp]
    4b50:	b	4c84 <sf_gen_scode+0x328>
    4b54:	mvn	r1, #4
    4b58:	uxtab	r1, r1, r0
    4b5c:	uxtb	r4, r0
    4b60:	cmp	r1, #3
    4b64:	bcc	4b70 <sf_gen_scode+0x214>
    4b68:	cmp	r4, #0
    4b6c:	bne	4ff4 <sf_gen_scode+0x698>
    4b70:	add	r1, sp, #24
    4b74:	add	r2, sp, #20
    4b78:	mov	r0, r7
    4b7c:	bl	b4b8 <pcap_nametoport>
    4b80:	cmp	r0, #0
    4b84:	beq	5000 <sf_gen_scode+0x6a4>
    4b88:	cmp	r4, #5
    4b8c:	beq	4df0 <sf_gen_scode+0x494>
    4b90:	cmp	r4, #6
    4b94:	beq	4dd4 <sf_gen_scode+0x478>
    4b98:	cmp	r4, #7
    4b9c:	bne	4e0c <sf_gen_scode+0x4b0>
    4ba0:	ldr	r0, [sp, #20]
    4ba4:	cmp	r0, #132	; 0x84
    4ba8:	beq	503c <sf_gen_scode+0x6e0>
    4bac:	cmp	r0, #6
    4bb0:	beq	504c <sf_gen_scode+0x6f0>
    4bb4:	mov	r0, #17
    4bb8:	b	4e08 <sf_gen_scode+0x4ac>
    4bbc:	mov	r0, r7
    4bc0:	mov	r1, r5
    4bc4:	bl	6620 <lookup_proto>
    4bc8:	str	r0, [sp, #20]
    4bcc:	cmp	r0, #0
    4bd0:	blt	4fd4 <sf_gen_scode+0x678>
    4bd4:	mov	r1, r5
    4bd8:	bl	6780 <gen_protochain>
    4bdc:	b	4c90 <sf_gen_scode+0x334>
    4be0:	mvn	r1, #4
    4be4:	uxtab	r1, r1, r0
    4be8:	uxtb	r4, r0
    4bec:	cmp	r1, #3
    4bf0:	bcc	4bfc <sf_gen_scode+0x2a0>
    4bf4:	cmp	r4, #0
    4bf8:	bne	5010 <sf_gen_scode+0x6b4>
    4bfc:	add	r1, sp, #24
    4c00:	add	r2, sp, #16
    4c04:	add	r3, sp, #20
    4c08:	mov	r0, r7
    4c0c:	bl	b578 <pcap_nametoportrange>
    4c10:	cmp	r0, #0
    4c14:	beq	501c <sf_gen_scode+0x6c0>
    4c18:	cmp	r4, #5
    4c1c:	beq	4e50 <sf_gen_scode+0x4f4>
    4c20:	cmp	r4, #6
    4c24:	beq	4e34 <sf_gen_scode+0x4d8>
    4c28:	cmp	r4, #7
    4c2c:	bne	4e6c <sf_gen_scode+0x510>
    4c30:	ldr	r0, [sp, #20]
    4c34:	cmp	r0, #132	; 0x84
    4c38:	beq	506c <sf_gen_scode+0x710>
    4c3c:	cmp	r0, #6
    4c40:	beq	507c <sf_gen_scode+0x720>
    4c44:	mov	r0, #17
    4c48:	b	4e68 <sf_gen_scode+0x50c>
    4c4c:	mov	r0, r7
    4c50:	mov	r1, r5
    4c54:	bl	6620 <lookup_proto>
    4c58:	str	r0, [sp, #20]
    4c5c:	cmp	r0, #0
    4c60:	blt	4fd4 <sf_gen_scode+0x678>
    4c64:	mov	r1, r5
    4c68:	mov	r2, r6
    4c6c:	bl	3704 <gen_proto>
    4c70:	b	4c90 <sf_gen_scode+0x334>
    4c74:	mov	r0, r7
    4c78:	bl	ba04 <__pcap_nametodnaddr>
    4c7c:	str	r9, [sp]
    4c80:	mov	r1, #0
    4c84:	mov	r2, r5
    4c88:	mov	r3, r6
    4c8c:	bl	5168 <gen_host>
    4c90:	mov	r8, r0
    4c94:	b	4ea0 <sf_gen_scode+0x544>
    4c98:	mov	r4, r6
    4c9c:	mvn	r0, #0
    4ca0:	str	r0, [sp, #36]	; 0x24
    4ca4:	str	r0, [sp, #32]
    4ca8:	str	r0, [sp, #28]
    4cac:	str	r0, [sp, #24]
    4cb0:	str	r7, [sp, #8]
    4cb4:	mov	r0, r7
    4cb8:	bl	b43c <pcap_nametoaddrinfo>
    4cbc:	cmp	r0, #0
    4cc0:	beq	502c <sf_gen_scode+0x6d0>
    4cc4:	ldr	r1, [pc, #1080]	; 5104 <sf_gen_scode+0x7a8>
    4cc8:	add	r1, pc, r1
    4ccc:	str	r0, [r1]
    4cd0:	ldr	r1, [pc, #1072]	; 5108 <sf_gen_scode+0x7ac>
    4cd4:	ldr	r1, [pc, r1]
    4cd8:	mvn	r1, r1
    4cdc:	orrs	r1, r5, r1
    4ce0:	mov	r6, r5
    4ce4:	movweq	r6, #2
    4ce8:	str	r5, [sp, #4]
    4cec:	movweq	r5, #17
    4cf0:	mov	r8, #0
    4cf4:	str	r0, [sp, #12]
    4cf8:	mov	sl, r0
    4cfc:	ldr	r0, [sl, #4]
    4d00:	cmp	r0, #10
    4d04:	beq	4d3c <sf_gen_scode+0x3e0>
    4d08:	cmp	r0, #2
    4d0c:	bne	4d7c <sf_gen_scode+0x420>
    4d10:	cmp	r6, #17
    4d14:	beq	4d7c <sf_gen_scode+0x420>
    4d18:	ldr	r0, [sl, #20]
    4d1c:	ldr	r0, [r0, #4]
    4d20:	bl	5d84 <__bswap_32>
    4d24:	str	r9, [sp]
    4d28:	mvn	r1, #0
    4d2c:	mov	r2, r6
    4d30:	mov	r3, r4
    4d34:	bl	5168 <gen_host>
    4d38:	b	4d60 <sf_gen_scode+0x404>
    4d3c:	cmp	r5, #2
    4d40:	beq	4d7c <sf_gen_scode+0x420>
    4d44:	ldr	r0, [sl, #20]
    4d48:	str	r9, [sp]
    4d4c:	add	r0, r0, #8
    4d50:	add	r1, sp, #24
    4d54:	mov	r2, r5
    4d58:	mov	r3, r4
    4d5c:	bl	5d8c <gen_host6>
    4d60:	mov	r7, r0
    4d64:	cmp	r8, #0
    4d68:	beq	4d78 <sf_gen_scode+0x41c>
    4d6c:	mov	r0, r8
    4d70:	mov	r1, r7
    4d74:	bl	3224 <sf_gen_or>
    4d78:	mov	r8, r7
    4d7c:	ldr	sl, [sl, #28]
    4d80:	cmp	sl, #0
    4d84:	bne	4cfc <sf_gen_scode+0x3a0>
    4d88:	mov	r0, #0
    4d8c:	ldr	r1, [pc, #888]	; 510c <sf_gen_scode+0x7b0>
    4d90:	add	r1, pc, r1
    4d94:	str	r0, [r1]
    4d98:	ldr	r0, [sp, #12]
    4d9c:	bl	f94 <freeaddrinfo@plt>
    4da0:	cmp	r8, #0
    4da4:	bne	4ea0 <sf_gen_scode+0x544>
    4da8:	ldr	r0, [pc, #864]	; 5110 <sf_gen_scode+0x7b4>
    4dac:	add	r0, pc, r0
    4db0:	ldr	r2, [pc, #860]	; 5114 <sf_gen_scode+0x7b8>
    4db4:	add	r2, pc, r2
    4db8:	ldr	r1, [sp, #4]
    4dbc:	cmp	r1, #0
    4dc0:	moveq	r2, r0
    4dc4:	ldr	r0, [pc, #844]	; 5118 <sf_gen_scode+0x7bc>
    4dc8:	add	r0, pc, r0
    4dcc:	ldr	r1, [sp, #8]
    4dd0:	bl	1f9c <sf_bpf_error>
    4dd4:	ldr	r0, [sp, #20]
    4dd8:	cmp	r0, #132	; 0x84
    4ddc:	beq	503c <sf_gen_scode+0x6e0>
    4de0:	cmp	r0, #17
    4de4:	beq	505c <sf_gen_scode+0x700>
    4de8:	mov	r0, #6
    4dec:	b	4e08 <sf_gen_scode+0x4ac>
    4df0:	ldr	r0, [sp, #20]
    4df4:	cmp	r0, #6
    4df8:	beq	504c <sf_gen_scode+0x6f0>
    4dfc:	cmp	r0, #17
    4e00:	beq	505c <sf_gen_scode+0x700>
    4e04:	mov	r0, #132	; 0x84
    4e08:	str	r0, [sp, #20]
    4e0c:	ldr	r1, [sp, #20]
    4e10:	ldr	r0, [sp, #24]
    4e14:	mov	r2, r6
    4e18:	bl	62f8 <gen_port>
    4e1c:	mov	r8, r0
    4e20:	ldr	r0, [sp, #24]
    4e24:	ldr	r1, [sp, #20]
    4e28:	mov	r2, r6
    4e2c:	bl	63b8 <gen_port6>
    4e30:	b	4e98 <sf_gen_scode+0x53c>
    4e34:	ldr	r0, [sp, #20]
    4e38:	cmp	r0, #132	; 0x84
    4e3c:	beq	506c <sf_gen_scode+0x710>
    4e40:	cmp	r0, #17
    4e44:	beq	508c <sf_gen_scode+0x730>
    4e48:	mov	r0, #6
    4e4c:	b	4e68 <sf_gen_scode+0x50c>
    4e50:	ldr	r0, [sp, #20]
    4e54:	cmp	r0, #6
    4e58:	beq	507c <sf_gen_scode+0x720>
    4e5c:	cmp	r0, #17
    4e60:	beq	508c <sf_gen_scode+0x730>
    4e64:	mov	r0, #132	; 0x84
    4e68:	str	r0, [sp, #20]
    4e6c:	ldr	r2, [sp, #20]
    4e70:	ldr	r1, [sp, #16]
    4e74:	ldr	r0, [sp, #24]
    4e78:	mov	r3, r6
    4e7c:	bl	6478 <gen_portrange>
    4e80:	mov	r8, r0
    4e84:	ldr	r0, [sp, #24]
    4e88:	ldr	r1, [sp, #16]
    4e8c:	ldr	r2, [sp, #20]
    4e90:	mov	r3, r6
    4e94:	bl	654c <gen_portrange6>
    4e98:	mov	r1, r8
    4e9c:	bl	3224 <sf_gen_or>
    4ea0:	mov	r0, r8
    4ea4:	sub	sp, fp, #28
    4ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4eac:	cmp	r0, #1
    4eb0:	beq	4edc <sf_gen_scode+0x580>
    4eb4:	cmp	r0, #6
    4eb8:	bne	4f90 <sf_gen_scode+0x634>
    4ebc:	mov	r0, r7
    4ec0:	bl	b90c <pcap_ether_hostton>
    4ec4:	cmp	r0, #0
    4ec8:	beq	50c8 <sf_gen_scode+0x76c>
    4ecc:	mov	r4, r0
    4ed0:	mov	r1, r6
    4ed4:	bl	56b0 <gen_thostop>
    4ed8:	b	4af4 <sf_gen_scode+0x198>
    4edc:	mov	r0, r7
    4ee0:	bl	b90c <pcap_ether_hostton>
    4ee4:	cmp	r0, #0
    4ee8:	beq	50b8 <sf_gen_scode+0x75c>
    4eec:	mov	r4, r0
    4ef0:	mov	r1, r6
    4ef4:	bl	551c <gen_ehostop>
    4ef8:	b	4af4 <sf_gen_scode+0x198>
    4efc:	ldr	r0, [pc, #508]	; 5100 <sf_gen_scode+0x7a4>
    4f00:	add	r0, pc, r0
    4f04:	ldrb	r0, [r0]
    4f08:	cmp	r0, #1
    4f0c:	bne	509c <sf_gen_scode+0x740>
    4f10:	mov	r0, #1
    4f14:	mov	r1, #4
    4f18:	mov	r2, #8
    4f1c:	mov	r3, #65280	; 0xff00
    4f20:	bl	450c <gen_cmp>
    4f24:	mov	r4, r0
    4f28:	bl	3278 <sf_gen_not>
    4f2c:	mov	r0, r7
    4f30:	bl	b90c <pcap_ether_hostton>
    4f34:	cmp	r0, #0
    4f38:	beq	50b8 <sf_gen_scode+0x75c>
    4f3c:	mov	r5, r0
    4f40:	mov	r1, r6
    4f44:	bl	551c <gen_ehostop>
    4f48:	mov	r8, r0
    4f4c:	mov	r0, r4
    4f50:	mov	r1, r8
    4f54:	bl	314c <sf_gen_and>
    4f58:	mov	r0, r5
    4f5c:	bl	e5c <free@plt>
    4f60:	b	4ea0 <sf_gen_scode+0x544>
    4f64:	cmp	r0, #192	; 0xc0
    4f68:	beq	4ad8 <sf_gen_scode+0x17c>
    4f6c:	b	509c <sf_gen_scode+0x740>
    4f70:	mov	r0, r7
    4f74:	bl	b90c <pcap_ether_hostton>
    4f78:	cmp	r0, #0
    4f7c:	beq	50d8 <sf_gen_scode+0x77c>
    4f80:	mov	r4, r0
    4f84:	mov	r1, r6
    4f88:	bl	5cc4 <gen_ipfchostop>
    4f8c:	b	4af4 <sf_gen_scode+0x198>
    4f90:	cmp	r0, #10
    4f94:	bne	509c <sf_gen_scode+0x740>
    4f98:	mov	r0, r7
    4f9c:	bl	b90c <pcap_ether_hostton>
    4fa0:	cmp	r0, #0
    4fa4:	beq	50e8 <sf_gen_scode+0x78c>
    4fa8:	mov	r4, r0
    4fac:	mov	r1, r6
    4fb0:	bl	55f0 <gen_fhostop>
    4fb4:	b	4af4 <sf_gen_scode+0x198>
    4fb8:	cmp	r9, #255	; 0xff
    4fbc:	bne	4fd0 <sf_gen_scode+0x674>
    4fc0:	bl	2f54 <syntax>
    4fc4:	ldr	r0, [pc, #352]	; 512c <sf_gen_scode+0x7d0>
    4fc8:	add	r0, pc, r0
    4fcc:	bl	1f9c <sf_bpf_error>
    4fd0:	bl	fc4 <abort@plt>
    4fd4:	ldr	r0, [pc, #340]	; 5130 <sf_gen_scode+0x7d4>
    4fd8:	add	r0, pc, r0
    4fdc:	mov	r1, r7
    4fe0:	bl	1f9c <sf_bpf_error>
    4fe4:	ldr	r0, [pc, #328]	; 5134 <sf_gen_scode+0x7d8>
    4fe8:	add	r0, pc, r0
    4fec:	mov	r1, r7
    4ff0:	bl	1f9c <sf_bpf_error>
    4ff4:	ldr	r0, [pc, #340]	; 5150 <sf_gen_scode+0x7f4>
    4ff8:	add	r0, pc, r0
    4ffc:	bl	1f9c <sf_bpf_error>
    5000:	ldr	r0, [pc, #332]	; 5154 <sf_gen_scode+0x7f8>
    5004:	add	r0, pc, r0
    5008:	mov	r1, r7
    500c:	bl	1f9c <sf_bpf_error>
    5010:	ldr	r0, [pc, #320]	; 5158 <sf_gen_scode+0x7fc>
    5014:	add	r0, pc, r0
    5018:	bl	1f9c <sf_bpf_error>
    501c:	ldr	r0, [pc, #312]	; 515c <sf_gen_scode+0x800>
    5020:	add	r0, pc, r0
    5024:	mov	r1, r7
    5028:	bl	1f9c <sf_bpf_error>
    502c:	ldr	r0, [pc, #280]	; 514c <sf_gen_scode+0x7f0>
    5030:	add	r0, pc, r0
    5034:	ldr	r1, [sp, #8]
    5038:	bl	1f9c <sf_bpf_error>
    503c:	ldr	r0, [pc, #220]	; 5120 <sf_gen_scode+0x7c4>
    5040:	add	r0, pc, r0
    5044:	mov	r1, r7
    5048:	bl	1f9c <sf_bpf_error>
    504c:	ldr	r0, [pc, #268]	; 5160 <sf_gen_scode+0x804>
    5050:	add	r0, pc, r0
    5054:	mov	r1, r7
    5058:	bl	1f9c <sf_bpf_error>
    505c:	ldr	r0, [pc, #184]	; 511c <sf_gen_scode+0x7c0>
    5060:	add	r0, pc, r0
    5064:	mov	r1, r7
    5068:	bl	1f9c <sf_bpf_error>
    506c:	ldr	r0, [pc, #180]	; 5128 <sf_gen_scode+0x7cc>
    5070:	add	r0, pc, r0
    5074:	mov	r1, r7
    5078:	bl	1f9c <sf_bpf_error>
    507c:	ldr	r0, [pc, #224]	; 5164 <sf_gen_scode+0x808>
    5080:	add	r0, pc, r0
    5084:	mov	r1, r7
    5088:	bl	1f9c <sf_bpf_error>
    508c:	ldr	r0, [pc, #144]	; 5124 <sf_gen_scode+0x7c8>
    5090:	add	r0, pc, r0
    5094:	mov	r1, r7
    5098:	bl	1f9c <sf_bpf_error>
    509c:	ldr	r0, [pc, #88]	; 50fc <sf_gen_scode+0x7a0>
    50a0:	add	r0, pc, r0
    50a4:	bl	1f9c <sf_bpf_error>
    50a8:	ldr	r0, [pc, #148]	; 5144 <sf_gen_scode+0x7e8>
    50ac:	add	r0, pc, r0
    50b0:	mov	r1, r7
    50b4:	bl	1f9c <sf_bpf_error>
    50b8:	ldr	r0, [pc, #120]	; 5138 <sf_gen_scode+0x7dc>
    50bc:	add	r0, pc, r0
    50c0:	mov	r1, r7
    50c4:	bl	1f9c <sf_bpf_error>
    50c8:	ldr	r0, [pc, #112]	; 5140 <sf_gen_scode+0x7e4>
    50cc:	add	r0, pc, r0
    50d0:	mov	r1, r7
    50d4:	bl	1f9c <sf_bpf_error>
    50d8:	ldr	r0, [pc, #104]	; 5148 <sf_gen_scode+0x7ec>
    50dc:	add	r0, pc, r0
    50e0:	mov	r1, r7
    50e4:	bl	1f9c <sf_bpf_error>
    50e8:	ldr	r0, [pc, #76]	; 513c <sf_gen_scode+0x7e0>
    50ec:	add	r0, pc, r0
    50f0:	mov	r1, r7
    50f4:	bl	1f9c <sf_bpf_error>
    50f8:	.word	0x0002bbd8
    50fc:	.word	0x0000d362
    5100:	.word	0x0002b6a4
    5104:	.word	0x0002b8cc
    5108:	.word	0x0002b8d4
    510c:	.word	0x0002b804
    5110:	.word	0x0000d4bc
    5114:	.word	0x0000d6ce
    5118:	.word	0x0000d6a6
    511c:	.word	0x0000d491
    5120:	.word	0x0000d49f
    5124:	.word	0x0000d4e3
    5128:	.word	0x0000d4e8
    512c:	.word	0x0000d5c5
    5130:	.word	0x0000d5e3
    5134:	.word	0x0000d380
    5138:	.word	0x0000d2c1
    513c:	.word	0x0000d2a9
    5140:	.word	0x0000d2e0
    5144:	.word	0x0000d31d
    5148:	.word	0x0000d306
    514c:	.word	0x0000d42c
    5150:	.word	0x0000d4a8
    5154:	.word	0x0000d4b8
    5158:	.word	0x0000d4ee
    515c:	.word	0x0000d503
    5160:	.word	0x0000d47e
    5164:	.word	0x0000d4be

00005168 <gen_host>:
    5168:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    516c:	add	fp, sp, #24
    5170:	sub	sp, sp, #8
    5174:	mov	r5, r1
    5178:	mov	r6, r0
    517c:	ldr	r7, [fp, #8]
    5180:	ldr	r0, [pc, #800]	; 54a8 <gen_host+0x340>
    5184:	add	r0, pc, r0
    5188:	ldr	r1, [pc, #796]	; 54ac <gen_host+0x344>
    518c:	add	r1, pc, r1
    5190:	cmp	r7, #2
    5194:	moveq	r1, r0
    5198:	cmp	r2, #40	; 0x28
    519c:	bhi	536c <gen_host+0x204>
    51a0:	mov	r4, r3
    51a4:	add	r0, pc, #4
    51a8:	ldr	r2, [r0, r2, lsl #2]
    51ac:	add	pc, r0, r2
    51b0:	.word	0x000000a4
    51b4:	.word	0x000001bc
    51b8:	.word	0x00000158
    51bc:	.word	0x0000017c
    51c0:	.word	0x00000134
    51c4:	.word	0x000002a4
    51c8:	.word	0x000002b0
    51cc:	.word	0x000002bc
    51d0:	.word	0x000002c8
    51d4:	.word	0x000002d4
    51d8:	.word	0x000002e0
    51dc:	.word	0x000002ec
    51e0:	.word	0x000001a8
    51e4:	.word	0x000001c0
    51e8:	.word	0x000001cc
    51ec:	.word	0x000001d8
    51f0:	.word	0x000001e4
    51f4:	.word	0x000001f0
    51f8:	.word	0x000001fc
    51fc:	.word	0x00000208
    5200:	.word	0x00000214
    5204:	.word	0x00000220
    5208:	.word	0x0000022c
    520c:	.word	0x00000238
    5210:	.word	0x00000244
    5214:	.word	0x00000250
    5218:	.word	0x0000025c
    521c:	.word	0x00000268
    5220:	.word	0x00000274
    5224:	.word	0x00000280
    5228:	.word	0x0000028c
    522c:	.word	0x000001bc
    5230:	.word	0x000001bc
    5234:	.word	0x000001bc
    5238:	.word	0x000001bc
    523c:	.word	0x000001bc
    5240:	.word	0x000001bc
    5244:	.word	0x000001bc
    5248:	.word	0x000001bc
    524c:	.word	0x000001bc
    5250:	.word	0x00000298
    5254:	str	r7, [sp]
    5258:	mov	r0, r6
    525c:	mov	r1, r5
    5260:	mov	r2, #2
    5264:	mov	r3, r4
    5268:	bl	5168 <gen_host>
    526c:	mov	r9, r0
    5270:	ldr	r0, [pc, #568]	; 54b0 <gen_host+0x348>
    5274:	ldr	r0, [pc, r0]
    5278:	cmp	r0, #0
    527c:	movne	r0, r9
    5280:	subne	sp, fp, #24
    5284:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
    5288:	str	r7, [sp]
    528c:	mov	r0, r6
    5290:	mov	r1, r5
    5294:	mov	r2, #3
    5298:	mov	r3, r4
    529c:	bl	5168 <gen_host>
    52a0:	mov	r8, r0
    52a4:	mov	r0, r9
    52a8:	mov	r1, r8
    52ac:	bl	3224 <sf_gen_or>
    52b0:	str	r7, [sp]
    52b4:	mov	r0, r6
    52b8:	mov	r1, r5
    52bc:	mov	r2, #4
    52c0:	mov	r3, r4
    52c4:	bl	5168 <gen_host>
    52c8:	mov	r4, r0
    52cc:	mov	r0, r8
    52d0:	mov	r1, r4
    52d4:	bl	3224 <sf_gen_or>
    52d8:	mov	r0, r4
    52dc:	sub	sp, fp, #24
    52e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    52e4:	mov	r0, #24
    52e8:	mov	r1, #14
    52ec:	str	r1, [sp]
    52f0:	str	r0, [sp, #4]
    52f4:	mov	r0, r6
    52f8:	mov	r1, r5
    52fc:	mov	r2, r4
    5300:	movw	r3, #32821	; 0x8035
    5304:	b	534c <gen_host+0x1e4>
    5308:	mov	r0, #16
    530c:	mov	r1, #12
    5310:	str	r1, [sp]
    5314:	str	r0, [sp, #4]
    5318:	mov	r0, r6
    531c:	mov	r1, r5
    5320:	mov	r2, r4
    5324:	mov	r3, #2048	; 0x800
    5328:	b	534c <gen_host+0x1e4>
    532c:	mov	r0, #24
    5330:	mov	r1, #14
    5334:	str	r1, [sp]
    5338:	str	r0, [sp, #4]
    533c:	mov	r0, r6
    5340:	mov	r1, r5
    5344:	mov	r2, r4
    5348:	movw	r3, #2054	; 0x806
    534c:	bl	ac90 <gen_hostop>
    5350:	sub	sp, fp, #24
    5354:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5358:	mov	r0, r6
    535c:	mov	r1, r4
    5360:	sub	sp, fp, #24
    5364:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5368:	b	ada8 <gen_dnhostop>
    536c:	bl	fc4 <abort@plt>
    5370:	ldr	r0, [pc, #360]	; 54e0 <gen_host+0x378>
    5374:	add	r0, pc, r0
    5378:	bl	1f9c <sf_bpf_error>
    537c:	ldr	r0, [pc, #344]	; 54dc <gen_host+0x374>
    5380:	add	r0, pc, r0
    5384:	bl	1f9c <sf_bpf_error>
    5388:	ldr	r0, [pc, #344]	; 54e8 <gen_host+0x380>
    538c:	add	r0, pc, r0
    5390:	bl	1f9c <sf_bpf_error>
    5394:	ldr	r0, [pc, #328]	; 54e4 <gen_host+0x37c>
    5398:	add	r0, pc, r0
    539c:	bl	1f9c <sf_bpf_error>
    53a0:	ldr	r0, [pc, #324]	; 54ec <gen_host+0x384>
    53a4:	add	r0, pc, r0
    53a8:	bl	1f9c <sf_bpf_error>
    53ac:	ldr	r0, [pc, #316]	; 54f0 <gen_host+0x388>
    53b0:	add	r0, pc, r0
    53b4:	bl	1f9c <sf_bpf_error>
    53b8:	ldr	r0, [pc, #308]	; 54f4 <gen_host+0x38c>
    53bc:	add	r0, pc, r0
    53c0:	bl	1f9c <sf_bpf_error>
    53c4:	ldr	r0, [pc, #300]	; 54f8 <gen_host+0x390>
    53c8:	add	r0, pc, r0
    53cc:	bl	1f9c <sf_bpf_error>
    53d0:	ldr	r0, [pc, #244]	; 54cc <gen_host+0x364>
    53d4:	add	r0, pc, r0
    53d8:	bl	1f9c <sf_bpf_error>
    53dc:	ldr	r0, [pc, #236]	; 54d0 <gen_host+0x368>
    53e0:	add	r0, pc, r0
    53e4:	bl	1f9c <sf_bpf_error>
    53e8:	ldr	r0, [pc, #232]	; 54d8 <gen_host+0x370>
    53ec:	add	r0, pc, r0
    53f0:	bl	1f9c <sf_bpf_error>
    53f4:	ldr	r0, [pc, #256]	; 54fc <gen_host+0x394>
    53f8:	add	r0, pc, r0
    53fc:	bl	1f9c <sf_bpf_error>
    5400:	ldr	r0, [pc, #248]	; 5500 <gen_host+0x398>
    5404:	add	r0, pc, r0
    5408:	bl	1f9c <sf_bpf_error>
    540c:	ldr	r0, [pc, #240]	; 5504 <gen_host+0x39c>
    5410:	add	r0, pc, r0
    5414:	bl	1f9c <sf_bpf_error>
    5418:	ldr	r0, [pc, #232]	; 5508 <gen_host+0x3a0>
    541c:	add	r0, pc, r0
    5420:	bl	1f9c <sf_bpf_error>
    5424:	ldr	r0, [pc, #224]	; 550c <gen_host+0x3a4>
    5428:	add	r0, pc, r0
    542c:	bl	1f9c <sf_bpf_error>
    5430:	ldr	r0, [pc, #216]	; 5510 <gen_host+0x3a8>
    5434:	add	r0, pc, r0
    5438:	bl	1f9c <sf_bpf_error>
    543c:	ldr	r0, [pc, #208]	; 5514 <gen_host+0x3ac>
    5440:	add	r0, pc, r0
    5444:	bl	1f9c <sf_bpf_error>
    5448:	ldr	r0, [pc, #200]	; 5518 <gen_host+0x3b0>
    544c:	add	r0, pc, r0
    5450:	bl	1f9c <sf_bpf_error>
    5454:	ldr	r0, [pc, #92]	; 54b8 <gen_host+0x350>
    5458:	add	r0, pc, r0
    545c:	bl	1f9c <sf_bpf_error>
    5460:	ldr	r0, [pc, #76]	; 54b4 <gen_host+0x34c>
    5464:	add	r0, pc, r0
    5468:	bl	1f9c <sf_bpf_error>
    546c:	ldr	r0, [pc, #72]	; 54bc <gen_host+0x354>
    5470:	add	r0, pc, r0
    5474:	bl	1f9c <sf_bpf_error>
    5478:	ldr	r0, [pc, #64]	; 54c0 <gen_host+0x358>
    547c:	add	r0, pc, r0
    5480:	bl	1f9c <sf_bpf_error>
    5484:	ldr	r0, [pc, #56]	; 54c4 <gen_host+0x35c>
    5488:	add	r0, pc, r0
    548c:	bl	1f9c <sf_bpf_error>
    5490:	ldr	r0, [pc, #48]	; 54c8 <gen_host+0x360>
    5494:	add	r0, pc, r0
    5498:	bl	1f9c <sf_bpf_error>
    549c:	ldr	r0, [pc, #48]	; 54d4 <gen_host+0x36c>
    54a0:	add	r0, pc, r0
    54a4:	bl	1f9c <sf_bpf_error>
    54a8:	.word	0x0000d8c4
    54ac:	.word	0x0000e432
    54b0:	.word	0x0002afd0
    54b4:	.word	0x0000df77
    54b8:	.word	0x0000dfa0
    54bc:	.word	0x0000dfa6
    54c0:	.word	0x0000dfb7
    54c4:	.word	0x0000dfc9
    54c8:	.word	0x0000dfdb
    54cc:	.word	0x0000e0b9
    54d0:	.word	0x0000e0ca
    54d4:	.word	0x0000e028
    54d8:	.word	0x0000e101
    54dc:	.word	0x0000e191
    54e0:	.word	0x0000e1c0
    54e4:	.word	0x0000e1bf
    54e8:	.word	0x0000e1f0
    54ec:	.word	0x0000e1fd
    54f0:	.word	0x0000e213
    54f4:	.word	0x0000e226
    54f8:	.word	0x0000e236
    54fc:	.word	0x0000e223
    5500:	.word	0x0000e23a
    5504:	.word	0x0000e24c
    5508:	.word	0x0000e25e
    550c:	.word	0x0000e270
    5510:	.word	0x0000e281
    5514:	.word	0x0000e298
    5518:	.word	0x0000e2ad

0000551c <gen_ehostop>:
    551c:	push	{r4, r5, fp, lr}
    5520:	add	fp, sp, #8
    5524:	cmp	r1, #4
    5528:	bhi	55e4 <gen_ehostop+0xc8>
    552c:	mov	r4, r0
    5530:	add	r0, pc, #4
    5534:	ldr	r1, [r0, r1, lsl #2]
    5538:	add	pc, r0, r1
    553c:	.word	0x00000014
    5540:	.word	0x0000007c
    5544:	.word	0x0000008c
    5548:	.word	0x00000014
    554c:	.word	0x00000048
    5550:	mov	r0, r4
    5554:	mov	r1, #1
    5558:	bl	551c <gen_ehostop>
    555c:	mov	r5, r0
    5560:	mov	r0, r4
    5564:	mov	r1, #2
    5568:	bl	551c <gen_ehostop>
    556c:	mov	r4, r0
    5570:	mov	r0, r5
    5574:	mov	r1, r4
    5578:	bl	3224 <sf_gen_or>
    557c:	mov	r0, r4
    5580:	pop	{r4, r5, fp, pc}
    5584:	mov	r0, r4
    5588:	mov	r1, #1
    558c:	bl	551c <gen_ehostop>
    5590:	mov	r5, r0
    5594:	mov	r0, r4
    5598:	mov	r1, #2
    559c:	bl	551c <gen_ehostop>
    55a0:	mov	r4, r0
    55a4:	mov	r0, r5
    55a8:	mov	r1, r4
    55ac:	bl	314c <sf_gen_and>
    55b0:	mov	r0, r4
    55b4:	pop	{r4, r5, fp, pc}
    55b8:	ldr	r0, [pc, #44]	; 55ec <gen_ehostop+0xd0>
    55bc:	ldr	r0, [pc, r0]
    55c0:	add	r1, r0, #6
    55c4:	b	55d0 <gen_ehostop+0xb4>
    55c8:	ldr	r1, [pc, #24]	; 55e8 <gen_ehostop+0xcc>
    55cc:	ldr	r1, [pc, r1]
    55d0:	mov	r0, #1
    55d4:	mov	r2, #6
    55d8:	mov	r3, r4
    55dc:	pop	{r4, r5, fp, lr}
    55e0:	b	aaf0 <gen_bcmp>
    55e4:	bl	fc4 <abort@plt>
    55e8:	.word	0x0002afec
    55ec:	.word	0x0002affc

000055f0 <gen_fhostop>:
    55f0:	push	{r4, r5, fp, lr}
    55f4:	add	fp, sp, #8
    55f8:	cmp	r1, #4
    55fc:	bhi	56ac <gen_fhostop+0xbc>
    5600:	mov	r2, r1
    5604:	mov	r4, r0
    5608:	mov	r1, #7
    560c:	add	r0, pc, #4
    5610:	ldr	r2, [r0, r2, lsl #2]
    5614:	add	pc, r0, r2
    5618:	.word	0x00000014
    561c:	.word	0x00000080
    5620:	.word	0x0000007c
    5624:	.word	0x00000014
    5628:	.word	0x00000048
    562c:	mov	r0, r4
    5630:	mov	r1, #1
    5634:	bl	55f0 <gen_fhostop>
    5638:	mov	r5, r0
    563c:	mov	r0, r4
    5640:	mov	r1, #2
    5644:	bl	55f0 <gen_fhostop>
    5648:	mov	r4, r0
    564c:	mov	r0, r5
    5650:	mov	r1, r4
    5654:	bl	3224 <sf_gen_or>
    5658:	mov	r0, r4
    565c:	pop	{r4, r5, fp, pc}
    5660:	mov	r0, r4
    5664:	mov	r1, #1
    5668:	bl	55f0 <gen_fhostop>
    566c:	mov	r5, r0
    5670:	mov	r0, r4
    5674:	mov	r1, #2
    5678:	bl	55f0 <gen_fhostop>
    567c:	mov	r4, r0
    5680:	mov	r0, r5
    5684:	mov	r1, r4
    5688:	bl	314c <sf_gen_and>
    568c:	mov	r0, r4
    5690:	pop	{r4, r5, fp, pc}
    5694:	mov	r1, #1
    5698:	mov	r0, #1
    569c:	mov	r2, #6
    56a0:	mov	r3, r4
    56a4:	pop	{r4, r5, fp, lr}
    56a8:	b	aaf0 <gen_bcmp>
    56ac:	bl	fc4 <abort@plt>

000056b0 <gen_thostop>:
    56b0:	push	{r4, r5, fp, lr}
    56b4:	add	fp, sp, #8
    56b8:	cmp	r1, #4
    56bc:	bhi	576c <gen_thostop+0xbc>
    56c0:	mov	r2, r1
    56c4:	mov	r4, r0
    56c8:	mov	r1, #8
    56cc:	add	r0, pc, #4
    56d0:	ldr	r2, [r0, r2, lsl #2]
    56d4:	add	pc, r0, r2
    56d8:	.word	0x00000014
    56dc:	.word	0x00000080
    56e0:	.word	0x0000007c
    56e4:	.word	0x00000014
    56e8:	.word	0x00000048
    56ec:	mov	r0, r4
    56f0:	mov	r1, #1
    56f4:	bl	56b0 <gen_thostop>
    56f8:	mov	r5, r0
    56fc:	mov	r0, r4
    5700:	mov	r1, #2
    5704:	bl	56b0 <gen_thostop>
    5708:	mov	r4, r0
    570c:	mov	r0, r5
    5710:	mov	r1, r4
    5714:	bl	3224 <sf_gen_or>
    5718:	mov	r0, r4
    571c:	pop	{r4, r5, fp, pc}
    5720:	mov	r0, r4
    5724:	mov	r1, #1
    5728:	bl	56b0 <gen_thostop>
    572c:	mov	r5, r0
    5730:	mov	r0, r4
    5734:	mov	r1, #2
    5738:	bl	56b0 <gen_thostop>
    573c:	mov	r4, r0
    5740:	mov	r0, r5
    5744:	mov	r1, r4
    5748:	bl	314c <sf_gen_and>
    574c:	mov	r0, r4
    5750:	pop	{r4, r5, fp, pc}
    5754:	mov	r1, #2
    5758:	mov	r0, #1
    575c:	mov	r2, #6
    5760:	mov	r3, r4
    5764:	pop	{r4, r5, fp, lr}
    5768:	b	aaf0 <gen_bcmp>
    576c:	bl	fc4 <abort@plt>

00005770 <gen_wlanhostop>:
    5770:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5774:	add	fp, sp, #24
    5778:	sub	sp, sp, #8
    577c:	cmp	r1, #8
    5780:	bhi	5cc0 <gen_wlanhostop+0x550>
    5784:	mov	r4, r0
    5788:	add	r0, pc, #4
    578c:	ldr	r1, [r0, r1, lsl #2]
    5790:	add	pc, r0, r1
    5794:	.word	0x00000024
    5798:	.word	0x0000008c
    579c:	.word	0x00000284
    57a0:	.word	0x00000024
    57a4:	.word	0x00000054
    57a8:	.word	0x00000420
    57ac:	.word	0x0000043c
    57b0:	.word	0x000003f0
    57b4:	.word	0x000004dc
    57b8:	mov	r0, r4
    57bc:	mov	r1, #1
    57c0:	bl	5770 <gen_wlanhostop>
    57c4:	mov	r5, r0
    57c8:	mov	r0, r4
    57cc:	mov	r1, #2
    57d0:	bl	5770 <gen_wlanhostop>
    57d4:	mov	r4, r0
    57d8:	mov	r0, r5
    57dc:	mov	r1, r4
    57e0:	bl	3224 <sf_gen_or>
    57e4:	b	5814 <gen_wlanhostop+0xa4>
    57e8:	mov	r0, r4
    57ec:	mov	r1, #1
    57f0:	bl	5770 <gen_wlanhostop>
    57f4:	mov	r5, r0
    57f8:	mov	r0, r4
    57fc:	mov	r1, #2
    5800:	bl	5770 <gen_wlanhostop>
    5804:	mov	r4, r0
    5808:	mov	r0, r5
    580c:	mov	r1, r4
    5810:	bl	314c <sf_gen_and>
    5814:	mov	r0, r4
    5818:	sub	sp, fp, #24
    581c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5820:	mov	r8, #1
    5824:	mov	r0, #1
    5828:	mov	r1, #1
    582c:	mov	r2, #16
    5830:	bl	87cc <gen_load_a>
    5834:	mov	r5, r0
    5838:	mov	r0, #69	; 0x45
    583c:	bl	7c58 <new_block>
    5840:	mov	r6, r0
    5844:	str	r8, [r0, #20]
    5848:	str	r5, [r0, #4]
    584c:	mov	r0, #1
    5850:	mov	r1, #24
    5854:	mov	r2, #6
    5858:	mov	r3, r4
    585c:	bl	aaf0 <gen_bcmp>
    5860:	mov	r5, r0
    5864:	mov	r0, r6
    5868:	mov	r1, r5
    586c:	bl	314c <sf_gen_and>
    5870:	mov	r0, #1
    5874:	mov	r1, #1
    5878:	mov	r2, #16
    587c:	bl	87cc <gen_load_a>
    5880:	mov	r6, r0
    5884:	mov	r0, #69	; 0x45
    5888:	bl	7c58 <new_block>
    588c:	mov	r7, r0
    5890:	str	r8, [r0, #20]
    5894:	str	r6, [r0, #4]
    5898:	bl	3278 <sf_gen_not>
    589c:	mov	r0, #1
    58a0:	mov	r1, #16
    58a4:	mov	r2, #6
    58a8:	mov	r3, r4
    58ac:	bl	aaf0 <gen_bcmp>
    58b0:	mov	r6, r0
    58b4:	mov	r0, r7
    58b8:	mov	r1, r6
    58bc:	bl	314c <sf_gen_and>
    58c0:	mov	r0, r6
    58c4:	mov	r1, r5
    58c8:	bl	3224 <sf_gen_or>
    58cc:	mov	r0, #1
    58d0:	mov	r1, #1
    58d4:	mov	r2, #16
    58d8:	bl	87cc <gen_load_a>
    58dc:	mov	r6, r0
    58e0:	mov	r0, #69	; 0x45
    58e4:	bl	7c58 <new_block>
    58e8:	str	r6, [r0, #4]
    58ec:	mov	r8, #2
    58f0:	str	r8, [r0, #20]
    58f4:	mov	r1, r5
    58f8:	bl	314c <sf_gen_and>
    58fc:	mov	r0, #1
    5900:	mov	r1, #1
    5904:	mov	r2, #16
    5908:	bl	87cc <gen_load_a>
    590c:	mov	r6, r0
    5910:	mov	r0, #69	; 0x45
    5914:	bl	7c58 <new_block>
    5918:	mov	r7, r0
    591c:	str	r8, [r0, #20]
    5920:	str	r6, [r0, #4]
    5924:	bl	3278 <sf_gen_not>
    5928:	mov	r0, #1
    592c:	mov	r1, #10
    5930:	mov	r2, #6
    5934:	mov	r3, r4
    5938:	bl	aaf0 <gen_bcmp>
    593c:	mov	r6, r0
    5940:	mov	r0, r7
    5944:	mov	r1, r6
    5948:	bl	314c <sf_gen_and>
    594c:	mov	r0, r6
    5950:	mov	r1, r5
    5954:	bl	3224 <sf_gen_or>
    5958:	mov	r0, #1
    595c:	mov	r1, #0
    5960:	mov	r2, #16
    5964:	bl	87cc <gen_load_a>
    5968:	mov	r6, r0
    596c:	mov	r0, #69	; 0x45
    5970:	bl	7c58 <new_block>
    5974:	str	r6, [r0, #4]
    5978:	mov	r8, #8
    597c:	str	r8, [r0, #20]
    5980:	mov	r1, r5
    5984:	bl	314c <sf_gen_and>
    5988:	mov	r0, #1
    598c:	mov	r1, #0
    5990:	mov	r2, #16
    5994:	bl	87cc <gen_load_a>
    5998:	mov	r6, r0
    599c:	mov	r0, #69	; 0x45
    59a0:	bl	7c58 <new_block>
    59a4:	mov	r7, r0
    59a8:	str	r8, [r0, #20]
    59ac:	str	r6, [r0, #4]
    59b0:	bl	3278 <sf_gen_not>
    59b4:	mov	r0, #1
    59b8:	mov	r1, #10
    59bc:	mov	r2, #6
    59c0:	mov	r3, r4
    59c4:	bl	aaf0 <gen_bcmp>
    59c8:	mov	r4, r0
    59cc:	mov	r0, r7
    59d0:	mov	r1, r4
    59d4:	bl	314c <sf_gen_and>
    59d8:	mov	r0, r4
    59dc:	mov	r1, r5
    59e0:	bl	3224 <sf_gen_or>
    59e4:	mov	r0, #1
    59e8:	mov	r1, #0
    59ec:	mov	r2, #16
    59f0:	bl	87cc <gen_load_a>
    59f4:	mov	r4, r0
    59f8:	mov	r0, #69	; 0x45
    59fc:	bl	7c58 <new_block>
    5a00:	mov	r6, r0
    5a04:	mov	r0, #4
    5a08:	str	r0, [r6, #20]
    5a0c:	str	r4, [r6, #4]
    5a10:	mov	r0, r6
    5a14:	b	5b7c <gen_wlanhostop+0x40c>
    5a18:	mov	r8, #1
    5a1c:	mov	r0, #1
    5a20:	mov	r1, #1
    5a24:	mov	r2, #16
    5a28:	bl	87cc <gen_load_a>
    5a2c:	mov	r5, r0
    5a30:	mov	r0, #69	; 0x45
    5a34:	bl	7c58 <new_block>
    5a38:	mov	r6, r0
    5a3c:	str	r8, [r0, #20]
    5a40:	str	r5, [r0, #4]
    5a44:	mov	r0, #1
    5a48:	mov	r1, #16
    5a4c:	mov	r2, #6
    5a50:	mov	r3, r4
    5a54:	bl	aaf0 <gen_bcmp>
    5a58:	mov	r5, r0
    5a5c:	mov	r0, r6
    5a60:	mov	r1, r5
    5a64:	bl	314c <sf_gen_and>
    5a68:	mov	r0, #1
    5a6c:	mov	r1, #1
    5a70:	mov	r2, #16
    5a74:	bl	87cc <gen_load_a>
    5a78:	mov	r6, r0
    5a7c:	mov	r0, #69	; 0x45
    5a80:	bl	7c58 <new_block>
    5a84:	mov	r7, r0
    5a88:	str	r8, [r0, #20]
    5a8c:	str	r6, [r0, #4]
    5a90:	bl	3278 <sf_gen_not>
    5a94:	mov	r8, #4
    5a98:	mov	r0, #1
    5a9c:	mov	r1, #4
    5aa0:	mov	r2, #6
    5aa4:	mov	r3, r4
    5aa8:	bl	aaf0 <gen_bcmp>
    5aac:	mov	r6, r0
    5ab0:	mov	r0, r7
    5ab4:	mov	r1, r6
    5ab8:	bl	314c <sf_gen_and>
    5abc:	mov	r0, r6
    5ac0:	mov	r1, r5
    5ac4:	bl	3224 <sf_gen_or>
    5ac8:	mov	r0, #1
    5acc:	mov	r1, #0
    5ad0:	mov	r2, #16
    5ad4:	bl	87cc <gen_load_a>
    5ad8:	mov	r6, r0
    5adc:	mov	r0, #69	; 0x45
    5ae0:	bl	7c58 <new_block>
    5ae4:	str	r6, [r0, #4]
    5ae8:	mov	r9, #8
    5aec:	str	r9, [r0, #20]
    5af0:	mov	r1, r5
    5af4:	bl	314c <sf_gen_and>
    5af8:	mov	r0, #1
    5afc:	mov	r1, #0
    5b00:	mov	r2, #16
    5b04:	bl	87cc <gen_load_a>
    5b08:	mov	r6, r0
    5b0c:	mov	r0, #69	; 0x45
    5b10:	bl	7c58 <new_block>
    5b14:	mov	r7, r0
    5b18:	str	r9, [r0, #20]
    5b1c:	str	r6, [r0, #4]
    5b20:	bl	3278 <sf_gen_not>
    5b24:	mov	r0, #1
    5b28:	mov	r1, #4
    5b2c:	mov	r2, #6
    5b30:	mov	r3, r4
    5b34:	bl	aaf0 <gen_bcmp>
    5b38:	mov	r4, r0
    5b3c:	mov	r0, r7
    5b40:	mov	r1, r4
    5b44:	bl	314c <sf_gen_and>
    5b48:	mov	r0, r4
    5b4c:	mov	r1, r5
    5b50:	bl	3224 <sf_gen_or>
    5b54:	mov	r0, #1
    5b58:	mov	r1, #0
    5b5c:	mov	r2, #16
    5b60:	bl	87cc <gen_load_a>
    5b64:	mov	r4, r0
    5b68:	mov	r0, #69	; 0x45
    5b6c:	bl	7c58 <new_block>
    5b70:	mov	r6, r0
    5b74:	str	r8, [r0, #20]
    5b78:	str	r4, [r0, #4]
    5b7c:	bl	3278 <sf_gen_not>
    5b80:	b	5ca8 <gen_wlanhostop+0x538>
    5b84:	mov	r0, #12
    5b88:	str	r0, [sp]
    5b8c:	mov	r0, #1
    5b90:	mov	r1, #0
    5b94:	mov	r2, #16
    5b98:	mov	r3, #4
    5b9c:	bl	83b8 <gen_mcmp>
    5ba0:	mov	r6, r0
    5ba4:	bl	3278 <sf_gen_not>
    5ba8:	mov	r0, #1
    5bac:	mov	r1, #16
    5bb0:	b	5c98 <gen_wlanhostop+0x528>
    5bb4:	mov	r0, #1
    5bb8:	mov	r1, #4
    5bbc:	mov	r2, #6
    5bc0:	mov	r3, r4
    5bc4:	sub	sp, fp, #24
    5bc8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5bcc:	b	aaf0 <gen_bcmp>
    5bd0:	mov	r0, #12
    5bd4:	str	r0, [sp]
    5bd8:	mov	r0, #1
    5bdc:	mov	r1, #0
    5be0:	mov	r2, #16
    5be4:	mov	r3, #4
    5be8:	bl	83b8 <gen_mcmp>
    5bec:	mov	r5, r0
    5bf0:	bl	3278 <sf_gen_not>
    5bf4:	mov	r7, #240	; 0xf0
    5bf8:	str	r7, [sp]
    5bfc:	mov	r0, #1
    5c00:	mov	r1, #0
    5c04:	mov	r2, #16
    5c08:	mov	r3, #192	; 0xc0
    5c0c:	bl	83b8 <gen_mcmp>
    5c10:	mov	r6, r0
    5c14:	bl	3278 <sf_gen_not>
    5c18:	str	r7, [sp]
    5c1c:	mov	r0, #1
    5c20:	mov	r1, #0
    5c24:	mov	r2, #16
    5c28:	mov	r3, #208	; 0xd0
    5c2c:	bl	83b8 <gen_mcmp>
    5c30:	mov	r7, r0
    5c34:	bl	3278 <sf_gen_not>
    5c38:	mov	r0, r6
    5c3c:	mov	r1, r7
    5c40:	bl	314c <sf_gen_and>
    5c44:	mov	r0, r5
    5c48:	mov	r1, r7
    5c4c:	bl	3224 <sf_gen_or>
    5c50:	mov	r0, #1
    5c54:	mov	r1, #10
    5c58:	mov	r2, #6
    5c5c:	mov	r3, r4
    5c60:	bl	aaf0 <gen_bcmp>
    5c64:	mov	r5, r0
    5c68:	mov	r0, r7
    5c6c:	b	5cac <gen_wlanhostop+0x53c>
    5c70:	mov	r0, #3
    5c74:	str	r0, [sp]
    5c78:	mov	r0, #1
    5c7c:	mov	r1, #1
    5c80:	mov	r2, #16
    5c84:	mov	r3, #3
    5c88:	bl	83b8 <gen_mcmp>
    5c8c:	mov	r6, r0
    5c90:	mov	r0, #1
    5c94:	mov	r1, #24
    5c98:	mov	r2, #6
    5c9c:	mov	r3, r4
    5ca0:	bl	aaf0 <gen_bcmp>
    5ca4:	mov	r5, r0
    5ca8:	mov	r0, r6
    5cac:	mov	r1, r5
    5cb0:	bl	314c <sf_gen_and>
    5cb4:	mov	r0, r5
    5cb8:	sub	sp, fp, #24
    5cbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5cc0:	bl	fc4 <abort@plt>

00005cc4 <gen_ipfchostop>:
    5cc4:	push	{r4, r5, fp, lr}
    5cc8:	add	fp, sp, #8
    5ccc:	cmp	r1, #4
    5cd0:	bhi	5d80 <gen_ipfchostop+0xbc>
    5cd4:	mov	r2, r1
    5cd8:	mov	r4, r0
    5cdc:	mov	r1, #10
    5ce0:	add	r0, pc, #4
    5ce4:	ldr	r2, [r0, r2, lsl #2]
    5ce8:	add	pc, r0, r2
    5cec:	.word	0x00000014
    5cf0:	.word	0x00000080
    5cf4:	.word	0x0000007c
    5cf8:	.word	0x00000014
    5cfc:	.word	0x00000048
    5d00:	mov	r0, r4
    5d04:	mov	r1, #1
    5d08:	bl	5cc4 <gen_ipfchostop>
    5d0c:	mov	r5, r0
    5d10:	mov	r0, r4
    5d14:	mov	r1, #2
    5d18:	bl	5cc4 <gen_ipfchostop>
    5d1c:	mov	r4, r0
    5d20:	mov	r0, r5
    5d24:	mov	r1, r4
    5d28:	bl	3224 <sf_gen_or>
    5d2c:	mov	r0, r4
    5d30:	pop	{r4, r5, fp, pc}
    5d34:	mov	r0, r4
    5d38:	mov	r1, #1
    5d3c:	bl	5cc4 <gen_ipfchostop>
    5d40:	mov	r5, r0
    5d44:	mov	r0, r4
    5d48:	mov	r1, #2
    5d4c:	bl	5cc4 <gen_ipfchostop>
    5d50:	mov	r4, r0
    5d54:	mov	r0, r5
    5d58:	mov	r1, r4
    5d5c:	bl	314c <sf_gen_and>
    5d60:	mov	r0, r4
    5d64:	pop	{r4, r5, fp, pc}
    5d68:	mov	r1, #2
    5d6c:	mov	r0, #1
    5d70:	mov	r2, #6
    5d74:	mov	r3, r4
    5d78:	pop	{r4, r5, fp, lr}
    5d7c:	b	aaf0 <gen_bcmp>
    5d80:	bl	fc4 <abort@plt>

00005d84 <__bswap_32>:
    5d84:	rev	r0, r0
    5d88:	bx	lr

00005d8c <gen_host6>:
    5d8c:	push	{r4, sl, fp, lr}
    5d90:	add	fp, sp, #8
    5d94:	sub	sp, sp, #8
    5d98:	mov	lr, r3
    5d9c:	ldr	ip, [fp, #8]
    5da0:	cmp	r2, #40	; 0x28
    5da4:	bhi	5e84 <gen_host6+0xf8>
    5da8:	mov	r3, r2
    5dac:	mov	r2, #17
    5db0:	add	r4, pc, #4
    5db4:	ldr	r3, [r4, r3, lsl #2]
    5db8:	add	pc, r4, r3
    5dbc:	.word	0xffffffe4
    5dc0:	.word	0x000000c8
    5dc4:	.word	0x000000cc
    5dc8:	.word	0x000000f0
    5dcc:	.word	0x00000114
    5dd0:	.word	0x00000138
    5dd4:	.word	0x0000015c
    5dd8:	.word	0x00000180
    5ddc:	.word	0x000001a4
    5de0:	.word	0x000001c8
    5de4:	.word	0x000001ec
    5de8:	.word	0x00000210
    5dec:	.word	0x0000021c
    5df0:	.word	0x00000240
    5df4:	.word	0x0000024c
    5df8:	.word	0x00000258
    5dfc:	.word	0x00000264
    5e00:	.word	0x000000a4
    5e04:	.word	0x00000270
    5e08:	.word	0x00000294
    5e0c:	.word	0x000002b8
    5e10:	.word	0x000002dc
    5e14:	.word	0x00000300
    5e18:	.word	0x00000324
    5e1c:	.word	0x00000330
    5e20:	.word	0x0000033c
    5e24:	.word	0x00000360
    5e28:	.word	0x00000384
    5e2c:	.word	0x000003a8
    5e30:	.word	0x000003cc
    5e34:	.word	0x000003d8
    5e38:	.word	0x000000c8
    5e3c:	.word	0x000000c8
    5e40:	.word	0x000000c8
    5e44:	.word	0x000000c8
    5e48:	.word	0x000000c8
    5e4c:	.word	0x000000c8
    5e50:	.word	0x000000c8
    5e54:	.word	0x000000c8
    5e58:	.word	0x000000c8
    5e5c:	.word	0x000003fc
    5e60:	mov	r2, #24
    5e64:	mov	r3, #8
    5e68:	str	r3, [sp]
    5e6c:	str	r2, [sp, #4]
    5e70:	mov	r2, lr
    5e74:	movw	r3, #34525	; 0x86dd
    5e78:	bl	b02c <gen_hostop6>
    5e7c:	sub	sp, fp, #8
    5e80:	pop	{r4, sl, fp, pc}
    5e84:	bl	fc4 <abort@plt>
    5e88:	ldr	r0, [pc, #844]	; 61dc <gen_host6+0x450>
    5e8c:	add	r0, pc, r0
    5e90:	ldr	r1, [pc, #840]	; 61e0 <gen_host6+0x454>
    5e94:	add	r1, pc, r1
    5e98:	cmp	ip, #2
    5e9c:	moveq	r1, r0
    5ea0:	ldr	r0, [pc, #828]	; 61e4 <gen_host6+0x458>
    5ea4:	add	r0, pc, r0
    5ea8:	bl	1f9c <sf_bpf_error>
    5eac:	ldr	r0, [pc, #832]	; 61f4 <gen_host6+0x468>
    5eb0:	add	r0, pc, r0
    5eb4:	ldr	r1, [pc, #828]	; 61f8 <gen_host6+0x46c>
    5eb8:	add	r1, pc, r1
    5ebc:	cmp	ip, #2
    5ec0:	moveq	r1, r0
    5ec4:	ldr	r0, [pc, #816]	; 61fc <gen_host6+0x470>
    5ec8:	add	r0, pc, r0
    5ecc:	bl	1f9c <sf_bpf_error>
    5ed0:	ldr	r0, [pc, #784]	; 61e8 <gen_host6+0x45c>
    5ed4:	add	r0, pc, r0
    5ed8:	ldr	r1, [pc, #780]	; 61ec <gen_host6+0x460>
    5edc:	add	r1, pc, r1
    5ee0:	cmp	ip, #2
    5ee4:	moveq	r1, r0
    5ee8:	ldr	r0, [pc, #768]	; 61f0 <gen_host6+0x464>
    5eec:	add	r0, pc, r0
    5ef0:	bl	1f9c <sf_bpf_error>
    5ef4:	ldr	r0, [pc, #772]	; 6200 <gen_host6+0x474>
    5ef8:	add	r0, pc, r0
    5efc:	ldr	r1, [pc, #768]	; 6204 <gen_host6+0x478>
    5f00:	add	r1, pc, r1
    5f04:	cmp	ip, #2
    5f08:	moveq	r1, r0
    5f0c:	ldr	r0, [pc, #756]	; 6208 <gen_host6+0x47c>
    5f10:	add	r0, pc, r0
    5f14:	bl	1f9c <sf_bpf_error>
    5f18:	ldr	r0, [pc, #748]	; 620c <gen_host6+0x480>
    5f1c:	add	r0, pc, r0
    5f20:	ldr	r1, [pc, #744]	; 6210 <gen_host6+0x484>
    5f24:	add	r1, pc, r1
    5f28:	cmp	ip, #2
    5f2c:	moveq	r1, r0
    5f30:	ldr	r0, [pc, #732]	; 6214 <gen_host6+0x488>
    5f34:	add	r0, pc, r0
    5f38:	bl	1f9c <sf_bpf_error>
    5f3c:	ldr	r0, [pc, #724]	; 6218 <gen_host6+0x48c>
    5f40:	add	r0, pc, r0
    5f44:	ldr	r1, [pc, #720]	; 621c <gen_host6+0x490>
    5f48:	add	r1, pc, r1
    5f4c:	cmp	ip, #2
    5f50:	moveq	r1, r0
    5f54:	ldr	r0, [pc, #708]	; 6220 <gen_host6+0x494>
    5f58:	add	r0, pc, r0
    5f5c:	bl	1f9c <sf_bpf_error>
    5f60:	ldr	r0, [pc, #700]	; 6224 <gen_host6+0x498>
    5f64:	add	r0, pc, r0
    5f68:	ldr	r1, [pc, #696]	; 6228 <gen_host6+0x49c>
    5f6c:	add	r1, pc, r1
    5f70:	cmp	ip, #2
    5f74:	moveq	r1, r0
    5f78:	ldr	r0, [pc, #684]	; 622c <gen_host6+0x4a0>
    5f7c:	add	r0, pc, r0
    5f80:	bl	1f9c <sf_bpf_error>
    5f84:	ldr	r0, [pc, #676]	; 6230 <gen_host6+0x4a4>
    5f88:	add	r0, pc, r0
    5f8c:	ldr	r1, [pc, #672]	; 6234 <gen_host6+0x4a8>
    5f90:	add	r1, pc, r1
    5f94:	cmp	ip, #2
    5f98:	moveq	r1, r0
    5f9c:	ldr	r0, [pc, #660]	; 6238 <gen_host6+0x4ac>
    5fa0:	add	r0, pc, r0
    5fa4:	bl	1f9c <sf_bpf_error>
    5fa8:	ldr	r0, [pc, #652]	; 623c <gen_host6+0x4b0>
    5fac:	add	r0, pc, r0
    5fb0:	ldr	r1, [pc, #648]	; 6240 <gen_host6+0x4b4>
    5fb4:	add	r1, pc, r1
    5fb8:	cmp	ip, #2
    5fbc:	moveq	r1, r0
    5fc0:	ldr	r0, [pc, #636]	; 6244 <gen_host6+0x4b8>
    5fc4:	add	r0, pc, r0
    5fc8:	bl	1f9c <sf_bpf_error>
    5fcc:	ldr	r0, [pc, #652]	; 6260 <gen_host6+0x4d4>
    5fd0:	add	r0, pc, r0
    5fd4:	bl	1f9c <sf_bpf_error>
    5fd8:	ldr	r0, [pc, #648]	; 6268 <gen_host6+0x4dc>
    5fdc:	add	r0, pc, r0
    5fe0:	ldr	r1, [pc, #644]	; 626c <gen_host6+0x4e0>
    5fe4:	add	r1, pc, r1
    5fe8:	cmp	ip, #2
    5fec:	moveq	r1, r0
    5ff0:	ldr	r0, [pc, #632]	; 6270 <gen_host6+0x4e4>
    5ff4:	add	r0, pc, r0
    5ff8:	bl	1f9c <sf_bpf_error>
    5ffc:	ldr	r0, [pc, #628]	; 6278 <gen_host6+0x4ec>
    6000:	add	r0, pc, r0
    6004:	bl	1f9c <sf_bpf_error>
    6008:	ldr	r0, [pc, #612]	; 6274 <gen_host6+0x4e8>
    600c:	add	r0, pc, r0
    6010:	bl	1f9c <sf_bpf_error>
    6014:	ldr	r0, [pc, #612]	; 6280 <gen_host6+0x4f4>
    6018:	add	r0, pc, r0
    601c:	bl	1f9c <sf_bpf_error>
    6020:	ldr	r0, [pc, #596]	; 627c <gen_host6+0x4f0>
    6024:	add	r0, pc, r0
    6028:	bl	1f9c <sf_bpf_error>
    602c:	ldr	r0, [pc, #592]	; 6284 <gen_host6+0x4f8>
    6030:	add	r0, pc, r0
    6034:	ldr	r1, [pc, #588]	; 6288 <gen_host6+0x4fc>
    6038:	add	r1, pc, r1
    603c:	cmp	ip, #2
    6040:	moveq	r1, r0
    6044:	ldr	r0, [pc, #576]	; 628c <gen_host6+0x500>
    6048:	add	r0, pc, r0
    604c:	bl	1f9c <sf_bpf_error>
    6050:	ldr	r0, [pc, #568]	; 6290 <gen_host6+0x504>
    6054:	add	r0, pc, r0
    6058:	ldr	r1, [pc, #564]	; 6294 <gen_host6+0x508>
    605c:	add	r1, pc, r1
    6060:	cmp	ip, #2
    6064:	moveq	r1, r0
    6068:	ldr	r0, [pc, #552]	; 6298 <gen_host6+0x50c>
    606c:	add	r0, pc, r0
    6070:	bl	1f9c <sf_bpf_error>
    6074:	ldr	r0, [pc, #544]	; 629c <gen_host6+0x510>
    6078:	add	r0, pc, r0
    607c:	ldr	r1, [pc, #540]	; 62a0 <gen_host6+0x514>
    6080:	add	r1, pc, r1
    6084:	cmp	ip, #2
    6088:	moveq	r1, r0
    608c:	ldr	r0, [pc, #528]	; 62a4 <gen_host6+0x518>
    6090:	add	r0, pc, r0
    6094:	bl	1f9c <sf_bpf_error>
    6098:	ldr	r0, [pc, #424]	; 6248 <gen_host6+0x4bc>
    609c:	add	r0, pc, r0
    60a0:	ldr	r1, [pc, #420]	; 624c <gen_host6+0x4c0>
    60a4:	add	r1, pc, r1
    60a8:	cmp	ip, #2
    60ac:	moveq	r1, r0
    60b0:	ldr	r0, [pc, #408]	; 6250 <gen_host6+0x4c4>
    60b4:	add	r0, pc, r0
    60b8:	bl	1f9c <sf_bpf_error>
    60bc:	ldr	r0, [pc, #400]	; 6254 <gen_host6+0x4c8>
    60c0:	add	r0, pc, r0
    60c4:	ldr	r1, [pc, #396]	; 6258 <gen_host6+0x4cc>
    60c8:	add	r1, pc, r1
    60cc:	cmp	ip, #2
    60d0:	moveq	r1, r0
    60d4:	ldr	r0, [pc, #384]	; 625c <gen_host6+0x4d0>
    60d8:	add	r0, pc, r0
    60dc:	bl	1f9c <sf_bpf_error>
    60e0:	ldr	r0, [pc, #380]	; 6264 <gen_host6+0x4d8>
    60e4:	add	r0, pc, r0
    60e8:	bl	1f9c <sf_bpf_error>
    60ec:	ldr	r0, [pc, #436]	; 62a8 <gen_host6+0x51c>
    60f0:	add	r0, pc, r0
    60f4:	bl	1f9c <sf_bpf_error>
    60f8:	ldr	r0, [pc, #428]	; 62ac <gen_host6+0x520>
    60fc:	add	r0, pc, r0
    6100:	ldr	r1, [pc, #424]	; 62b0 <gen_host6+0x524>
    6104:	add	r1, pc, r1
    6108:	cmp	ip, #2
    610c:	moveq	r1, r0
    6110:	ldr	r0, [pc, #412]	; 62b4 <gen_host6+0x528>
    6114:	add	r0, pc, r0
    6118:	bl	1f9c <sf_bpf_error>
    611c:	ldr	r0, [pc, #404]	; 62b8 <gen_host6+0x52c>
    6120:	add	r0, pc, r0
    6124:	ldr	r1, [pc, #400]	; 62bc <gen_host6+0x530>
    6128:	add	r1, pc, r1
    612c:	cmp	ip, #2
    6130:	moveq	r1, r0
    6134:	ldr	r0, [pc, #388]	; 62c0 <gen_host6+0x534>
    6138:	add	r0, pc, r0
    613c:	bl	1f9c <sf_bpf_error>
    6140:	ldr	r0, [pc, #380]	; 62c4 <gen_host6+0x538>
    6144:	add	r0, pc, r0
    6148:	ldr	r1, [pc, #376]	; 62c8 <gen_host6+0x53c>
    614c:	add	r1, pc, r1
    6150:	cmp	ip, #2
    6154:	moveq	r1, r0
    6158:	ldr	r0, [pc, #364]	; 62cc <gen_host6+0x540>
    615c:	add	r0, pc, r0
    6160:	bl	1f9c <sf_bpf_error>
    6164:	ldr	r0, [pc, #356]	; 62d0 <gen_host6+0x544>
    6168:	add	r0, pc, r0
    616c:	ldr	r1, [pc, #352]	; 62d4 <gen_host6+0x548>
    6170:	add	r1, pc, r1
    6174:	cmp	ip, #2
    6178:	moveq	r1, r0
    617c:	ldr	r0, [pc, #340]	; 62d8 <gen_host6+0x54c>
    6180:	add	r0, pc, r0
    6184:	bl	1f9c <sf_bpf_error>
    6188:	ldr	r0, [pc, #332]	; 62dc <gen_host6+0x550>
    618c:	add	r0, pc, r0
    6190:	bl	1f9c <sf_bpf_error>
    6194:	ldr	r0, [pc, #324]	; 62e0 <gen_host6+0x554>
    6198:	add	r0, pc, r0
    619c:	ldr	r1, [pc, #320]	; 62e4 <gen_host6+0x558>
    61a0:	add	r1, pc, r1
    61a4:	cmp	ip, #2
    61a8:	moveq	r1, r0
    61ac:	ldr	r0, [pc, #308]	; 62e8 <gen_host6+0x55c>
    61b0:	add	r0, pc, r0
    61b4:	bl	1f9c <sf_bpf_error>
    61b8:	ldr	r0, [pc, #300]	; 62ec <gen_host6+0x560>
    61bc:	add	r0, pc, r0
    61c0:	ldr	r1, [pc, #296]	; 62f0 <gen_host6+0x564>
    61c4:	add	r1, pc, r1
    61c8:	cmp	ip, #2
    61cc:	moveq	r1, r0
    61d0:	ldr	r0, [pc, #284]	; 62f4 <gen_host6+0x568>
    61d4:	add	r0, pc, r0
    61d8:	bl	1f9c <sf_bpf_error>
    61dc:	.word	0x0000cbbc
    61e0:	.word	0x0000d72a
    61e4:	.word	0x0000d874
    61e8:	.word	0x0000cb74
    61ec:	.word	0x0000d6e2
    61f0:	.word	0x0000d84c
    61f4:	.word	0x0000cb98
    61f8:	.word	0x0000d706
    61fc:	.word	0x0000d892
    6200:	.word	0x0000cb50
    6204:	.word	0x0000d6be
    6208:	.word	0x0000d4e8
    620c:	.word	0x0000cb2c
    6210:	.word	0x0000d69a
    6214:	.word	0x0000d4a7
    6218:	.word	0x0000cb08
    621c:	.word	0x0000d676
    6220:	.word	0x0000d4be
    6224:	.word	0x0000cae4
    6228:	.word	0x0000d652
    622c:	.word	0x0000d4b7
    6230:	.word	0x0000cac0
    6234:	.word	0x0000d62e
    6238:	.word	0x0000d4b1
    623c:	.word	0x0000ca9c
    6240:	.word	0x0000d60a
    6244:	.word	0x0000d4ab
    6248:	.word	0x0000c9ac
    624c:	.word	0x0000d51a
    6250:	.word	0x0000d3d9
    6254:	.word	0x0000c988
    6258:	.word	0x0000d4f6
    625c:	.word	0x0000d3d2
    6260:	.word	0x0000d4f8
    6264:	.word	0x0000d409
    6268:	.word	0x0000ca6c
    626c:	.word	0x0000d5da
    6270:	.word	0x0000d787
    6274:	.word	0x0000d505
    6278:	.word	0x0000d534
    627c:	.word	0x0000d533
    6280:	.word	0x0000d564
    6284:	.word	0x0000ca18
    6288:	.word	0x0000d586
    628c:	.word	0x0000d57b
    6290:	.word	0x0000c9f4
    6294:	.word	0x0000d562
    6298:	.word	0x0000d576
    629c:	.word	0x0000c9d0
    62a0:	.word	0x0000d53e
    62a4:	.word	0x0000d56e
    62a8:	.word	0x0000d52b
    62ac:	.word	0x0000c94c
    62b0:	.word	0x0000d4ba
    62b4:	.word	0x0000d52a
    62b8:	.word	0x0000c928
    62bc:	.word	0x0000d496
    62c0:	.word	0x0000d524
    62c4:	.word	0x0000c904
    62c8:	.word	0x0000d472
    62cc:	.word	0x0000d51e
    62d0:	.word	0x0000c8e0
    62d4:	.word	0x0000d44e
    62d8:	.word	0x0000d518
    62dc:	.word	0x0000d529
    62e0:	.word	0x0000c8b0
    62e4:	.word	0x0000d41e
    62e8:	.word	0x0000d528
    62ec:	.word	0x0000c88c
    62f0:	.word	0x0000d3fa
    62f4:	.word	0x0000d525

000062f8 <gen_port>:
    62f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    62fc:	add	fp, sp, #24
    6300:	mov	r5, r2
    6304:	mov	r7, r1
    6308:	mov	r6, r0
    630c:	mov	r0, #2048	; 0x800
    6310:	bl	3a60 <gen_linktype>
    6314:	mov	r4, r0
    6318:	cmp	r7, #16
    631c:	bgt	6378 <gen_port+0x80>
    6320:	cmn	r7, #1
    6324:	bne	63ac <gen_port+0xb4>
    6328:	mov	r0, r6
    632c:	mov	r1, #6
    6330:	mov	r2, r5
    6334:	bl	4418 <sf_gen_portop>
    6338:	mov	r8, r0
    633c:	mov	r0, r6
    6340:	mov	r1, #17
    6344:	mov	r2, r5
    6348:	bl	4418 <sf_gen_portop>
    634c:	mov	r7, r0
    6350:	mov	r0, r8
    6354:	mov	r1, r7
    6358:	bl	3224 <sf_gen_or>
    635c:	mov	r0, r6
    6360:	mov	r1, #132	; 0x84
    6364:	mov	r2, r5
    6368:	bl	4418 <sf_gen_portop>
    636c:	mov	r1, r7
    6370:	bl	3224 <sf_gen_or>
    6374:	b	6398 <gen_port+0xa0>
    6378:	cmp	r7, #132	; 0x84
    637c:	cmpne	r7, #17
    6380:	bne	63b4 <gen_port+0xbc>
    6384:	mov	r0, r6
    6388:	mov	r1, r7
    638c:	mov	r2, r5
    6390:	bl	4418 <sf_gen_portop>
    6394:	mov	r7, r0
    6398:	mov	r0, r4
    639c:	mov	r1, r7
    63a0:	bl	314c <sf_gen_and>
    63a4:	mov	r0, r7
    63a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    63ac:	cmp	r7, #6
    63b0:	beq	6384 <gen_port+0x8c>
    63b4:	bl	fc4 <abort@plt>

000063b8 <gen_port6>:
    63b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    63bc:	add	fp, sp, #24
    63c0:	mov	r5, r2
    63c4:	mov	r7, r1
    63c8:	mov	r6, r0
    63cc:	movw	r0, #34525	; 0x86dd
    63d0:	bl	3a60 <gen_linktype>
    63d4:	mov	r4, r0
    63d8:	cmp	r7, #16
    63dc:	bgt	6438 <gen_port6+0x80>
    63e0:	cmn	r7, #1
    63e4:	bne	646c <gen_port6+0xb4>
    63e8:	mov	r0, r6
    63ec:	mov	r1, #6
    63f0:	mov	r2, r5
    63f4:	bl	4594 <sf_gen_portop6>
    63f8:	mov	r8, r0
    63fc:	mov	r0, r6
    6400:	mov	r1, #17
    6404:	mov	r2, r5
    6408:	bl	4594 <sf_gen_portop6>
    640c:	mov	r7, r0
    6410:	mov	r0, r8
    6414:	mov	r1, r7
    6418:	bl	3224 <sf_gen_or>
    641c:	mov	r0, r6
    6420:	mov	r1, #132	; 0x84
    6424:	mov	r2, r5
    6428:	bl	4594 <sf_gen_portop6>
    642c:	mov	r1, r7
    6430:	bl	3224 <sf_gen_or>
    6434:	b	6458 <gen_port6+0xa0>
    6438:	cmp	r7, #132	; 0x84
    643c:	cmpne	r7, #17
    6440:	bne	6474 <gen_port6+0xbc>
    6444:	mov	r0, r6
    6448:	mov	r1, r7
    644c:	mov	r2, r5
    6450:	bl	4594 <sf_gen_portop6>
    6454:	mov	r7, r0
    6458:	mov	r0, r4
    645c:	mov	r1, r7
    6460:	bl	314c <sf_gen_and>
    6464:	mov	r0, r7
    6468:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    646c:	cmp	r7, #6
    6470:	beq	6444 <gen_port6+0x8c>
    6474:	bl	fc4 <abort@plt>

00006478 <gen_portrange>:
    6478:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    647c:	add	fp, sp, #24
    6480:	mov	r5, r3
    6484:	mov	r4, r2
    6488:	mov	r6, r1
    648c:	mov	r7, r0
    6490:	mov	r0, #2048	; 0x800
    6494:	bl	3a60 <gen_linktype>
    6498:	mov	r8, r0
    649c:	cmp	r4, #16
    64a0:	bgt	6508 <gen_portrange+0x90>
    64a4:	cmn	r4, #1
    64a8:	bne	6540 <gen_portrange+0xc8>
    64ac:	mov	r0, r7
    64b0:	mov	r1, r6
    64b4:	mov	r2, #6
    64b8:	mov	r3, r5
    64bc:	bl	4688 <sf_gen_portrangeop>
    64c0:	mov	r9, r0
    64c4:	mov	r0, r7
    64c8:	mov	r1, r6
    64cc:	mov	r2, #17
    64d0:	mov	r3, r5
    64d4:	bl	4688 <sf_gen_portrangeop>
    64d8:	mov	r4, r0
    64dc:	mov	r0, r9
    64e0:	mov	r1, r4
    64e4:	bl	3224 <sf_gen_or>
    64e8:	mov	r0, r7
    64ec:	mov	r1, r6
    64f0:	mov	r2, #132	; 0x84
    64f4:	mov	r3, r5
    64f8:	bl	4688 <sf_gen_portrangeop>
    64fc:	mov	r1, r4
    6500:	bl	3224 <sf_gen_or>
    6504:	b	652c <gen_portrange+0xb4>
    6508:	cmp	r4, #132	; 0x84
    650c:	cmpne	r4, #17
    6510:	bne	6548 <gen_portrange+0xd0>
    6514:	mov	r0, r7
    6518:	mov	r1, r6
    651c:	mov	r2, r4
    6520:	mov	r3, r5
    6524:	bl	4688 <sf_gen_portrangeop>
    6528:	mov	r4, r0
    652c:	mov	r0, r8
    6530:	mov	r1, r4
    6534:	bl	314c <sf_gen_and>
    6538:	mov	r0, r4
    653c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    6540:	cmp	r4, #6
    6544:	beq	6514 <gen_portrange+0x9c>
    6548:	bl	fc4 <abort@plt>

0000654c <gen_portrange6>:
    654c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6550:	add	fp, sp, #24
    6554:	mov	r5, r3
    6558:	mov	r4, r2
    655c:	mov	r6, r1
    6560:	mov	r7, r0
    6564:	movw	r0, #34525	; 0x86dd
    6568:	bl	3a60 <gen_linktype>
    656c:	mov	r8, r0
    6570:	cmp	r4, #16
    6574:	bgt	65dc <gen_portrange6+0x90>
    6578:	cmn	r4, #1
    657c:	bne	6614 <gen_portrange6+0xc8>
    6580:	mov	r0, r7
    6584:	mov	r1, r6
    6588:	mov	r2, #6
    658c:	mov	r3, r5
    6590:	bl	47fc <sf_gen_portrangeop6>
    6594:	mov	r9, r0
    6598:	mov	r0, r7
    659c:	mov	r1, r6
    65a0:	mov	r2, #17
    65a4:	mov	r3, r5
    65a8:	bl	47fc <sf_gen_portrangeop6>
    65ac:	mov	r4, r0
    65b0:	mov	r0, r9
    65b4:	mov	r1, r4
    65b8:	bl	3224 <sf_gen_or>
    65bc:	mov	r0, r7
    65c0:	mov	r1, r6
    65c4:	mov	r2, #132	; 0x84
    65c8:	mov	r3, r5
    65cc:	bl	47fc <sf_gen_portrangeop6>
    65d0:	mov	r1, r4
    65d4:	bl	3224 <sf_gen_or>
    65d8:	b	6600 <gen_portrange6+0xb4>
    65dc:	cmp	r4, #132	; 0x84
    65e0:	cmpne	r4, #17
    65e4:	bne	661c <gen_portrange6+0xd0>
    65e8:	mov	r0, r7
    65ec:	mov	r1, r6
    65f0:	mov	r2, r4
    65f4:	mov	r3, r5
    65f8:	bl	47fc <sf_gen_portrangeop6>
    65fc:	mov	r4, r0
    6600:	mov	r0, r8
    6604:	mov	r1, r4
    6608:	bl	314c <sf_gen_and>
    660c:	mov	r0, r4
    6610:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    6614:	cmp	r4, #6
    6618:	beq	65e8 <gen_portrange6+0x9c>
    661c:	bl	fc4 <abort@plt>

00006620 <lookup_proto>:
    6620:	push	{r4, sl, fp, lr}
    6624:	add	fp, sp, #8
    6628:	mov	r4, r0
    662c:	mvn	r0, #0
    6630:	cmp	r1, #24
    6634:	bhi	66b8 <lookup_proto+0x98>
    6638:	add	r2, pc, #4
    663c:	ldr	r1, [r2, r1, lsl #2]
    6640:	add	pc, r2, r1
    6644:	.word	0x00000064
    6648:	.word	0x00000078
    664c:	.word	0x00000064
    6650:	.word	0x00000074
    6654:	.word	0x00000074
    6658:	.word	0x00000074
    665c:	.word	0x00000074
    6660:	.word	0x00000074
    6664:	.word	0x00000074
    6668:	.word	0x00000074
    666c:	.word	0x00000074
    6670:	.word	0x00000074
    6674:	.word	0x00000074
    6678:	.word	0x00000074
    667c:	.word	0x00000074
    6680:	.word	0x00000074
    6684:	.word	0x00000074
    6688:	.word	0x00000064
    668c:	.word	0x00000074
    6690:	.word	0x00000074
    6694:	.word	0x00000074
    6698:	.word	0x00000074
    669c:	.word	0x00000074
    66a0:	.word	0x00000074
    66a4:	.word	0x000000a8
    66a8:	mov	r0, r4
    66ac:	bl	b678 <pcap_nametoproto>
    66b0:	cmn	r0, #1
    66b4:	beq	6758 <lookup_proto+0x138>
    66b8:	pop	{r4, sl, fp, pc}
    66bc:	mov	r0, r4
    66c0:	bl	b694 <pcap_nametoeproto>
    66c4:	cmn	r0, #1
    66c8:	bne	66b8 <lookup_proto+0x98>
    66cc:	mov	r0, r4
    66d0:	bl	b700 <pcap_nametollc>
    66d4:	cmn	r0, #1
    66d8:	bne	66b8 <lookup_proto+0x98>
    66dc:	ldr	r0, [pc, #136]	; 676c <lookup_proto+0x14c>
    66e0:	add	r0, pc, r0
    66e4:	mov	r1, r4
    66e8:	bl	1f9c <sf_bpf_error>
    66ec:	ldr	r1, [pc, #124]	; 6770 <lookup_proto+0x150>
    66f0:	add	r1, pc, r1
    66f4:	mov	r0, r4
    66f8:	bl	e08 <strcmp@plt>
    66fc:	cmp	r0, #0
    6700:	moveq	r0, #130	; 0x82
    6704:	popeq	{r4, sl, fp, pc}
    6708:	ldr	r1, [pc, #100]	; 6774 <lookup_proto+0x154>
    670c:	add	r1, pc, r1
    6710:	mov	r0, r4
    6714:	bl	e08 <strcmp@plt>
    6718:	cmp	r0, #0
    671c:	beq	6750 <lookup_proto+0x130>
    6720:	ldr	r1, [pc, #80]	; 6778 <lookup_proto+0x158>
    6724:	add	r1, pc, r1
    6728:	mov	r0, r4
    672c:	bl	e08 <strcmp@plt>
    6730:	mov	r1, r0
    6734:	mov	r0, #129	; 0x81
    6738:	cmp	r1, #0
    673c:	popeq	{r4, sl, fp, pc}
    6740:	ldr	r0, [pc, #52]	; 677c <lookup_proto+0x15c>
    6744:	add	r0, pc, r0
    6748:	mov	r1, r4
    674c:	bl	1f9c <sf_bpf_error>
    6750:	mov	r0, #131	; 0x83
    6754:	pop	{r4, sl, fp, pc}
    6758:	ldr	r0, [pc, #8]	; 6768 <lookup_proto+0x148>
    675c:	add	r0, pc, r0
    6760:	mov	r1, r4
    6764:	bl	1f9c <sf_bpf_error>
    6768:	.word	0x0000d043
    676c:	.word	0x0000d0d5
    6770:	.word	0x0000d0de
    6774:	.word	0x0000d0c7
    6778:	.word	0x0000d0b4
    677c:	.word	0x0000d099

00006780 <gen_protochain>:
    6780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6784:	add	fp, sp, #28
    6788:	sub	sp, sp, #412	; 0x19c
    678c:	mov	r7, r1
    6790:	mov	r4, r0
    6794:	bl	78d8 <alloc_reg>
    6798:	mov	r9, r0
    679c:	add	r6, sp, #8
    67a0:	mov	r0, r6
    67a4:	mov	r1, #0
    67a8:	mov	r2, #400	; 0x190
    67ac:	bl	f40 <memset@plt>
    67b0:	cmp	r7, #17
    67b4:	cmpne	r7, #2
    67b8:	bne	6880 <gen_protochain+0x100>
    67bc:	ldr	r0, [pc, #1428]	; 6d58 <gen_protochain+0x5d8>
    67c0:	ldr	r0, [pc, r0]
    67c4:	sub	r1, r0, #105	; 0x69
    67c8:	cmp	r1, #22
    67cc:	bhi	67e4 <gen_protochain+0x64>
    67d0:	mov	r2, #1
    67d4:	movw	r3, #16385	; 0x4001
    67d8:	movt	r3, #64	; 0x40
    67dc:	tst	r3, r2, lsl r1
    67e0:	bne	67f0 <gen_protochain+0x70>
    67e4:	cmp	r0, #192	; 0xc0
    67e8:	cmpne	r0, #163	; 0xa3
    67ec:	bne	67fc <gen_protochain+0x7c>
    67f0:	ldr	r0, [pc, #1444]	; 6d9c <gen_protochain+0x61c>
    67f4:	add	r0, pc, r0
    67f8:	bl	1f9c <sf_bpf_error>
    67fc:	ldr	r0, [pc, #1368]	; 6d5c <gen_protochain+0x5dc>
    6800:	add	r0, pc, r0
    6804:	mov	r1, #1
    6808:	str	r1, [r0]
    680c:	mov	r0, #0
    6810:	bl	7988 <new_stmt>
    6814:	str	r0, [sp, #8]
    6818:	cmp	r7, #17
    681c:	beq	68b8 <gen_protochain+0x138>
    6820:	cmp	r7, #2
    6824:	bne	6d48 <gen_protochain+0x5c8>
    6828:	mov	r0, #2048	; 0x800
    682c:	bl	3a60 <gen_linktype>
    6830:	str	r0, [sp]
    6834:	mov	r0, #48	; 0x30
    6838:	bl	7988 <new_stmt>
    683c:	str	r0, [sp, #12]
    6840:	ldr	r1, [pc, #1304]	; 6d60 <gen_protochain+0x5e0>
    6844:	ldr	r1, [pc, r1]
    6848:	ldr	r2, [pc, #1300]	; 6d64 <gen_protochain+0x5e4>
    684c:	ldr	r2, [pc, r2]
    6850:	add	r1, r2, r1
    6854:	add	r1, r1, #9
    6858:	str	r1, [r0, #12]
    685c:	mov	r0, #177	; 0xb1
    6860:	bl	7988 <new_stmt>
    6864:	str	r0, [sp, #16]
    6868:	ldr	r1, [pc, #1272]	; 6d68 <gen_protochain+0x5e8>
    686c:	ldr	r1, [pc, r1]
    6870:	ldr	r2, [pc, #1268]	; 6d6c <gen_protochain+0x5ec>
    6874:	ldr	r2, [pc, r2]
    6878:	add	r1, r2, r1
    687c:	b	68fc <gen_protochain+0x17c>
    6880:	cmp	r7, #0
    6884:	bne	6d3c <gen_protochain+0x5bc>
    6888:	mov	r0, r4
    688c:	mov	r1, #2
    6890:	bl	6780 <gen_protochain>
    6894:	mov	r5, r0
    6898:	mov	r0, r4
    689c:	mov	r1, #17
    68a0:	bl	6780 <gen_protochain>
    68a4:	mov	r6, r0
    68a8:	mov	r0, r5
    68ac:	mov	r1, r6
    68b0:	bl	3224 <sf_gen_or>
    68b4:	b	6d30 <gen_protochain+0x5b0>
    68b8:	movw	r0, #34525	; 0x86dd
    68bc:	bl	3a60 <gen_linktype>
    68c0:	str	r0, [sp]
    68c4:	mov	r0, #48	; 0x30
    68c8:	bl	7988 <new_stmt>
    68cc:	str	r0, [sp, #12]
    68d0:	ldr	r1, [pc, #1180]	; 6d74 <gen_protochain+0x5f4>
    68d4:	ldr	r1, [pc, r1]
    68d8:	ldr	r2, [pc, #1176]	; 6d78 <gen_protochain+0x5f8>
    68dc:	ldr	r2, [pc, r2]
    68e0:	add	r1, r2, r1
    68e4:	add	r1, r1, #6
    68e8:	str	r1, [r0, #12]
    68ec:	mov	r0, #1
    68f0:	bl	7988 <new_stmt>
    68f4:	str	r0, [sp, #16]
    68f8:	mov	r1, #40	; 0x28
    68fc:	str	r1, [r0, #12]
    6900:	mov	r0, #21
    6904:	bl	7988 <new_stmt>
    6908:	str	r0, [sp, #20]
    690c:	str	r4, [r0, #12]
    6910:	ldr	r0, [sp, #20]
    6914:	mov	r5, #0
    6918:	str	r5, [r0, #4]
    691c:	ldr	r0, [sp, #20]
    6920:	str	r5, [r0, #8]
    6924:	mov	r0, #21
    6928:	bl	7988 <new_stmt>
    692c:	str	r0, [sp, #24]
    6930:	str	r5, [r0, #4]
    6934:	ldr	r0, [sp, #24]
    6938:	str	r5, [r0, #8]
    693c:	ldr	r0, [sp, #24]
    6940:	mov	r1, #59	; 0x3b
    6944:	str	r1, [r0, #12]
    6948:	ldr	r0, [sp, #20]
    694c:	ldr	r1, [sp, #24]
    6950:	str	r1, [r0, #8]
    6954:	cmp	r7, #17
    6958:	str	r4, [sp, #4]
    695c:	bne	6b34 <gen_protochain+0x3b4>
    6960:	mov	sl, #21
    6964:	mov	r0, #21
    6968:	bl	7988 <new_stmt>
    696c:	str	r0, [sp, #28]
    6970:	mov	r4, #0
    6974:	str	r4, [r0, #4]
    6978:	ldr	r0, [sp, #28]
    697c:	str	r4, [r0, #8]
    6980:	ldr	r0, [sp, #28]
    6984:	str	r4, [r0, #12]
    6988:	ldr	r0, [sp, #24]
    698c:	ldr	r1, [sp, #28]
    6990:	str	r1, [r0, #8]
    6994:	mov	r0, #21
    6998:	bl	7988 <new_stmt>
    699c:	str	r0, [sp, #32]
    69a0:	ldr	r1, [sp, #28]
    69a4:	str	r0, [r1, #8]
    69a8:	ldr	r0, [sp, #32]
    69ac:	str	r4, [r0, #4]
    69b0:	ldr	r0, [sp, #32]
    69b4:	str	r4, [r0, #8]
    69b8:	ldr	r0, [sp, #32]
    69bc:	mov	r1, #60	; 0x3c
    69c0:	str	r1, [r0, #12]
    69c4:	mov	r0, #21
    69c8:	bl	7988 <new_stmt>
    69cc:	str	r0, [sp, #36]	; 0x24
    69d0:	ldr	r1, [sp, #32]
    69d4:	str	r0, [r1, #8]
    69d8:	ldr	r0, [sp, #36]	; 0x24
    69dc:	str	r4, [r0, #4]
    69e0:	ldr	r0, [sp, #36]	; 0x24
    69e4:	str	r4, [r0, #8]
    69e8:	ldr	r0, [sp, #36]	; 0x24
    69ec:	mov	r1, #43	; 0x2b
    69f0:	str	r1, [r0, #12]
    69f4:	mov	r0, #21
    69f8:	bl	7988 <new_stmt>
    69fc:	str	r0, [sp, #40]	; 0x28
    6a00:	ldr	r1, [sp, #36]	; 0x24
    6a04:	str	r0, [r1, #8]
    6a08:	ldr	r0, [sp, #40]	; 0x28
    6a0c:	str	r4, [r0, #4]
    6a10:	ldr	r0, [sp, #40]	; 0x28
    6a14:	str	r4, [r0, #8]
    6a18:	ldr	r0, [sp, #40]	; 0x28
    6a1c:	mov	r1, #44	; 0x2c
    6a20:	str	r1, [r0, #12]
    6a24:	mov	r0, #135	; 0x87
    6a28:	bl	7988 <new_stmt>
    6a2c:	str	r0, [sp, #44]	; 0x2c
    6a30:	mov	r0, #80	; 0x50
    6a34:	bl	7988 <new_stmt>
    6a38:	str	r0, [sp, #48]	; 0x30
    6a3c:	ldr	r1, [pc, #824]	; 6d7c <gen_protochain+0x5fc>
    6a40:	ldr	r1, [pc, r1]
    6a44:	ldr	r2, [pc, #820]	; 6d80 <gen_protochain+0x600>
    6a48:	ldr	r2, [pc, r2]
    6a4c:	add	r1, r2, r1
    6a50:	str	r1, [r0, #12]
    6a54:	mov	r0, #2
    6a58:	bl	7988 <new_stmt>
    6a5c:	str	r0, [sp, #52]	; 0x34
    6a60:	str	r9, [r0, #12]
    6a64:	mov	r0, #135	; 0x87
    6a68:	bl	7988 <new_stmt>
    6a6c:	str	r0, [sp, #56]	; 0x38
    6a70:	mov	r0, #4
    6a74:	bl	7988 <new_stmt>
    6a78:	str	r0, [sp, #60]	; 0x3c
    6a7c:	mov	r5, #1
    6a80:	str	r5, [r0, #12]
    6a84:	mov	r0, #7
    6a88:	bl	7988 <new_stmt>
    6a8c:	str	r0, [sp, #64]	; 0x40
    6a90:	mov	r0, #80	; 0x50
    6a94:	bl	7988 <new_stmt>
    6a98:	str	r0, [sp, #68]	; 0x44
    6a9c:	ldr	r1, [pc, #736]	; 6d84 <gen_protochain+0x604>
    6aa0:	ldr	r1, [pc, r1]
    6aa4:	ldr	r2, [pc, #732]	; 6d88 <gen_protochain+0x608>
    6aa8:	ldr	r2, [pc, r2]
    6aac:	add	r1, r2, r1
    6ab0:	str	r1, [r0, #12]
    6ab4:	mov	r0, #4
    6ab8:	bl	7988 <new_stmt>
    6abc:	str	r0, [sp, #72]	; 0x48
    6ac0:	str	r5, [r0, #12]
    6ac4:	mov	r0, #36	; 0x24
    6ac8:	bl	7988 <new_stmt>
    6acc:	str	r0, [sp, #76]	; 0x4c
    6ad0:	mov	r5, #8
    6ad4:	str	r5, [r0, #12]
    6ad8:	mov	r0, #7
    6adc:	bl	7988 <new_stmt>
    6ae0:	str	r0, [sp, #80]	; 0x50
    6ae4:	mov	r0, #96	; 0x60
    6ae8:	bl	7988 <new_stmt>
    6aec:	str	r0, [sp, #84]	; 0x54
    6af0:	str	r9, [r0, #12]
    6af4:	mov	r0, #5
    6af8:	bl	7988 <new_stmt>
    6afc:	str	r0, [sp, #88]	; 0x58
    6b00:	mvn	r1, #17
    6b04:	str	r1, [r0, #12]
    6b08:	ldr	r0, [sp, #84]	; 0x54
    6b0c:	ldr	r1, [sp, #88]	; 0x58
    6b10:	str	r1, [r0, #8]
    6b14:	add	r0, r6, #20
    6b18:	ldr	r1, [r0, r4, lsl #2]
    6b1c:	ldr	r2, [sp, #44]	; 0x2c
    6b20:	str	r2, [r1, #4]
    6b24:	add	r4, r4, #1
    6b28:	cmp	r4, #4
    6b2c:	bne	6b18 <gen_protochain+0x398>
    6b30:	b	6b54 <gen_protochain+0x3d4>
    6b34:	mov	r0, #4
    6b38:	bl	7988 <new_stmt>
    6b3c:	str	r0, [sp, #28]
    6b40:	str	r5, [r0, #12]
    6b44:	ldr	r0, [sp, #24]
    6b48:	ldr	r1, [sp, #28]
    6b4c:	str	r1, [r0, #8]
    6b50:	mov	sl, #6
    6b54:	mov	r0, #21
    6b58:	bl	7988 <new_stmt>
    6b5c:	str	r0, [r6, sl, lsl #2]
    6b60:	mov	r1, #0
    6b64:	str	r1, [r0, #4]
    6b68:	ldr	r0, [r6, sl, lsl #2]
    6b6c:	str	r1, [r0, #8]
    6b70:	ldr	r0, [r6, sl, lsl #2]
    6b74:	mov	r1, #51	; 0x33
    6b78:	str	r1, [r0, #12]
    6b7c:	cmp	r5, #0
    6b80:	ldrne	r0, [r6, r5, lsl #2]
    6b84:	ldrne	r1, [r6, sl, lsl #2]
    6b88:	strne	r1, [r0, #8]
    6b8c:	add	r5, r6, sl, lsl #2
    6b90:	mov	r0, #135	; 0x87
    6b94:	bl	7988 <new_stmt>
    6b98:	str	r0, [r5, #4]
    6b9c:	ldr	r1, [r6, sl, lsl #2]
    6ba0:	str	r0, [r1, #4]
    6ba4:	mov	r0, #80	; 0x50
    6ba8:	bl	7988 <new_stmt>
    6bac:	str	r0, [r5, #8]
    6bb0:	ldr	r1, [pc, #468]	; 6d8c <gen_protochain+0x60c>
    6bb4:	ldr	r1, [pc, r1]
    6bb8:	ldr	r2, [pc, #464]	; 6d90 <gen_protochain+0x610>
    6bbc:	ldr	r2, [pc, r2]
    6bc0:	add	r1, r2, r1
    6bc4:	str	r1, [r0, #12]
    6bc8:	mov	r8, #2
    6bcc:	mov	r0, #2
    6bd0:	bl	7988 <new_stmt>
    6bd4:	str	r0, [r5, #12]
    6bd8:	str	r9, [r0, #12]
    6bdc:	mov	r0, #135	; 0x87
    6be0:	bl	7988 <new_stmt>
    6be4:	str	r0, [r5, #16]
    6be8:	ldr	r1, [r5, #12]
    6bec:	str	r0, [r1, #4]
    6bf0:	mov	r7, r9
    6bf4:	mov	r9, #4
    6bf8:	mov	r0, #4
    6bfc:	bl	7988 <new_stmt>
    6c00:	str	r0, [r5, #20]
    6c04:	mov	r1, #1
    6c08:	str	r1, [r0, #12]
    6c0c:	mov	r0, #7
    6c10:	bl	7988 <new_stmt>
    6c14:	str	r0, [r5, #24]
    6c18:	mov	r0, #80	; 0x50
    6c1c:	bl	7988 <new_stmt>
    6c20:	str	r0, [r5, #28]
    6c24:	ldr	r1, [pc, #360]	; 6d94 <gen_protochain+0x614>
    6c28:	ldr	r1, [pc, r1]
    6c2c:	ldr	r2, [pc, #356]	; 6d98 <gen_protochain+0x618>
    6c30:	ldr	r2, [pc, r2]
    6c34:	add	r1, r2, r1
    6c38:	str	r1, [r0, #12]
    6c3c:	orr	r5, sl, #8
    6c40:	mov	r0, #4
    6c44:	bl	7988 <new_stmt>
    6c48:	str	r0, [r6, r5, lsl #2]
    6c4c:	str	r8, [r0, #12]
    6c50:	add	r4, r6, r5, lsl #2
    6c54:	mov	r0, #36	; 0x24
    6c58:	bl	7988 <new_stmt>
    6c5c:	str	r0, [r4, #4]
    6c60:	str	r9, [r0, #12]
    6c64:	mov	r0, #7
    6c68:	bl	7988 <new_stmt>
    6c6c:	str	r0, [r4, #8]
    6c70:	mov	r0, #96	; 0x60
    6c74:	bl	7988 <new_stmt>
    6c78:	str	r0, [r4, #12]
    6c7c:	str	r7, [r0, #12]
    6c80:	mov	r0, #5
    6c84:	bl	7988 <new_stmt>
    6c88:	str	r0, [r4, #16]
    6c8c:	mvn	r1, #8
    6c90:	eor	r1, sl, r1
    6c94:	sub	r1, r1, #1
    6c98:	str	r1, [r0, #12]
    6c9c:	add	r5, r5, #5
    6ca0:	mov	r0, #4
    6ca4:	bl	7988 <new_stmt>
    6ca8:	str	r0, [r6, r5, lsl #2]
    6cac:	mov	r1, #0
    6cb0:	str	r1, [r0, #12]
    6cb4:	ldr	r0, [r6, r5, lsl #2]
    6cb8:	ldr	r1, [sp, #24]
    6cbc:	str	r0, [r1, #4]
    6cc0:	ldr	r0, [r6, sl, lsl #2]
    6cc4:	ldr	r1, [r6, r5, lsl #2]
    6cc8:	str	r1, [r0, #8]
    6ccc:	ldr	r0, [r6, r5, lsl #2]
    6cd0:	ldr	r1, [sp, #20]
    6cd4:	str	r0, [r1, #4]
    6cd8:	orr	r0, r6, #4
    6cdc:	mov	r1, r5
    6ce0:	ldmda	r0, {r2, r3}
    6ce4:	str	r3, [r2, #16]
    6ce8:	add	r0, r0, #4
    6cec:	subs	r1, r1, #1
    6cf0:	bne	6ce0 <gen_protochain+0x560>
    6cf4:	ldr	r0, [r6, r5, lsl #2]
    6cf8:	mov	r1, #0
    6cfc:	str	r1, [r0, #16]
    6d00:	mov	r0, #21
    6d04:	bl	7c58 <new_block>
    6d08:	mov	r6, r0
    6d0c:	ldr	r0, [sp, #12]
    6d10:	ldr	r1, [sp, #4]
    6d14:	str	r1, [r6, #20]
    6d18:	str	r0, [r6, #4]
    6d1c:	mov	r0, r7
    6d20:	bl	7950 <free_reg>
    6d24:	ldr	r0, [sp]
    6d28:	mov	r1, r6
    6d2c:	bl	314c <sf_gen_and>
    6d30:	mov	r0, r6
    6d34:	sub	sp, fp, #28
    6d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6d3c:	ldr	r0, [pc, #16]	; 6d54 <gen_protochain+0x5d4>
    6d40:	add	r0, pc, r0
    6d44:	bl	1f9c <sf_bpf_error>
    6d48:	ldr	r0, [pc, #32]	; 6d70 <gen_protochain+0x5f0>
    6d4c:	add	r0, pc, r0
    6d50:	bl	1f9c <sf_bpf_error>
    6d54:	.word	0x0000cab4
    6d58:	.word	0x00029de0
    6d5c:	.word	0x0002a314
    6d60:	.word	0x00029d6c
    6d64:	.word	0x00029d60
    6d68:	.word	0x00029d40
    6d6c:	.word	0x00029d3c
    6d70:	.word	0x0000caf5
    6d74:	.word	0x00029cdc
    6d78:	.word	0x00029cd0
    6d7c:	.word	0x00029b6c
    6d80:	.word	0x00029b68
    6d84:	.word	0x00029b0c
    6d88:	.word	0x00029b08
    6d8c:	.word	0x000299f8
    6d90:	.word	0x000299f4
    6d94:	.word	0x00029984
    6d98:	.word	0x00029980
    6d9c:	.word	0x0000d026

00006da0 <sf_gen_mcode>:
    6da0:	push	{r4, r5, r6, r7, fp, lr}
    6da4:	add	fp, sp, #16
    6da8:	sub	sp, sp, #16
    6dac:	mov	r4, r3
    6db0:	mov	r7, r2
    6db4:	mov	r6, r1
    6db8:	mov	r5, r0
    6dbc:	add	r1, sp, #12
    6dc0:	bl	b758 <__pcap_atoin>
    6dc4:	rsb	r0, r0, #32
    6dc8:	ldr	r1, [sp, #12]
    6dcc:	lsl	r0, r1, r0
    6dd0:	str	r0, [sp, #12]
    6dd4:	cmp	r6, #0
    6dd8:	beq	6e1c <sf_gen_mcode+0x7c>
    6ddc:	add	r1, sp, #8
    6de0:	mov	r0, r6
    6de4:	bl	b758 <__pcap_atoin>
    6de8:	rsb	r0, r0, #32
    6dec:	ldr	r1, [sp, #8]
    6df0:	lsl	r2, r1, r0
    6df4:	str	r2, [sp, #8]
    6df8:	mvn	r0, r1, lsl r0
    6dfc:	ldr	r1, [sp, #12]
    6e00:	tst	r1, r0
    6e04:	beq	6e48 <sf_gen_mcode+0xa8>
    6e08:	ldr	r0, [pc, #152]	; 6ea8 <sf_gen_mcode+0x108>
    6e0c:	add	r0, pc, r0
    6e10:	mov	r1, r5
    6e14:	mov	r2, r6
    6e18:	bl	1f9c <sf_bpf_error>
    6e1c:	cmp	r7, #33	; 0x21
    6e20:	bge	6e88 <sf_gen_mcode+0xe8>
    6e24:	rsb	r1, r7, #32
    6e28:	mvn	r2, #0
    6e2c:	cmp	r7, #0
    6e30:	mov	r3, r7
    6e34:	lslne	r3, r2, r1
    6e38:	str	r3, [sp, #8]
    6e3c:	mvn	r1, r3
    6e40:	tst	r0, r1
    6e44:	bne	6e94 <sf_gen_mcode+0xf4>
    6e48:	uxtb	r2, r4
    6e4c:	cmp	r2, #2
    6e50:	bne	6e7c <sf_gen_mcode+0xdc>
    6e54:	lsr	r3, r4, #16
    6e58:	lsr	r7, r4, #8
    6e5c:	ldr	r1, [sp, #8]
    6e60:	ldr	r0, [sp, #12]
    6e64:	str	r2, [sp]
    6e68:	uxtb	r2, r7
    6e6c:	uxtb	r3, r3
    6e70:	bl	5168 <gen_host>
    6e74:	sub	sp, fp, #16
    6e78:	pop	{r4, r5, r6, r7, fp, pc}
    6e7c:	ldr	r0, [pc, #40]	; 6eac <sf_gen_mcode+0x10c>
    6e80:	add	r0, pc, r0
    6e84:	bl	1f9c <sf_bpf_error>
    6e88:	ldr	r0, [pc, #32]	; 6eb0 <sf_gen_mcode+0x110>
    6e8c:	add	r0, pc, r0
    6e90:	bl	1f9c <sf_bpf_error>
    6e94:	ldr	r0, [pc, #24]	; 6eb4 <sf_gen_mcode+0x114>
    6e98:	add	r0, pc, r0
    6e9c:	mov	r1, r5
    6ea0:	mov	r2, r7
    6ea4:	bl	1f9c <sf_bpf_error>
    6ea8:	.word	0x0000b7c4
    6eac:	.word	0x0000b7af
    6eb0:	.word	0x0000b769
    6eb4:	.word	0x0000b777

00006eb8 <sf_gen_ncode>:
    6eb8:	push	{r4, r5, r6, r7, fp, lr}
    6ebc:	add	fp, sp, #16
    6ec0:	sub	sp, sp, #8
    6ec4:	mov	r7, r2
    6ec8:	mov	r6, r0
    6ecc:	str	r1, [sp, #4]
    6ed0:	ubfx	r4, r2, #16, #8
    6ed4:	ubfx	r5, r2, #8, #8
    6ed8:	cmp	r0, #0
    6edc:	beq	6ef8 <sf_gen_ncode+0x40>
    6ee0:	add	r1, sp, #4
    6ee4:	mov	r0, r6
    6ee8:	cmp	r5, #12
    6eec:	bne	6f00 <sf_gen_ncode+0x48>
    6ef0:	bl	b7c0 <__pcap_atodn>
    6ef4:	b	6f04 <sf_gen_ncode+0x4c>
    6ef8:	mov	r0, #32
    6efc:	b	6f04 <sf_gen_ncode+0x4c>
    6f00:	bl	b758 <__pcap_atoin>
    6f04:	uxtb	r2, r7
    6f08:	cmp	r2, #7
    6f0c:	bhi	70cc <sf_gen_ncode+0x214>
    6f10:	lsr	r1, r7, #8
    6f14:	add	r3, pc, #4
    6f18:	ldr	r7, [r3, r2, lsl #2]
    6f1c:	add	pc, r3, r7
    6f20:	.word	0x00000020
    6f24:	.word	0x00000020
    6f28:	.word	0x00000020
    6f2c:	.word	0x00000080
    6f30:	.word	0x000001b8
    6f34:	.word	0x00000148
    6f38:	.word	0x000000d4
    6f3c:	.word	0x000000e4
    6f40:	uxtb	r1, r1
    6f44:	cmp	r1, #12
    6f48:	beq	6f84 <sf_gen_ncode+0xcc>
    6f4c:	cmp	r1, #1
    6f50:	beq	70e8 <sf_gen_ncode+0x230>
    6f54:	cmp	r6, #0
    6f58:	cmpeq	r2, #2
    6f5c:	beq	7088 <sf_gen_ncode+0x1d0>
    6f60:	rsb	r0, r0, #32
    6f64:	ldr	r1, [sp, #4]
    6f68:	lsl	r1, r1, r0
    6f6c:	str	r1, [sp, #4]
    6f70:	mvn	r1, #0
    6f74:	lsl	r1, r1, r0
    6f78:	ldr	r0, [sp, #4]
    6f7c:	str	r2, [sp]
    6f80:	b	6f90 <sf_gen_ncode+0xd8>
    6f84:	ldr	r0, [sp, #4]
    6f88:	str	r2, [sp]
    6f8c:	mov	r1, #0
    6f90:	mov	r2, r5
    6f94:	mov	r3, r4
    6f98:	bl	5168 <gen_host>
    6f9c:	b	7078 <sf_gen_ncode+0x1c0>
    6fa0:	uxtb	r0, r1
    6fa4:	cmp	r0, #8
    6fa8:	bcs	70f4 <sf_gen_ncode+0x23c>
    6fac:	mov	r2, #225	; 0xe1
    6fb0:	mov	r3, #1
    6fb4:	tst	r3, r2, lsr r0
    6fb8:	beq	70f4 <sf_gen_ncode+0x23c>
    6fbc:	lsl	r0, r1, #24
    6fc0:	ldr	r1, [pc, #324]	; 710c <sf_gen_ncode+0x254>
    6fc4:	add	r1, pc, r1
    6fc8:	ldr	r6, [r1, r0, asr #22]
    6fcc:	ldr	r0, [sp, #4]
    6fd0:	mov	r1, r6
    6fd4:	mov	r2, r4
    6fd8:	bl	62f8 <gen_port>
    6fdc:	mov	r5, r0
    6fe0:	ldr	r0, [sp, #4]
    6fe4:	mov	r1, r6
    6fe8:	mov	r2, r4
    6fec:	bl	63b8 <gen_port6>
    6ff0:	b	705c <sf_gen_ncode+0x1a4>
    6ff4:	ldr	r0, [sp, #4]
    6ff8:	mov	r1, r5
    6ffc:	bl	6780 <gen_protochain>
    7000:	b	7078 <sf_gen_ncode+0x1c0>
    7004:	uxtb	r0, r1
    7008:	cmp	r0, #8
    700c:	bcs	7100 <sf_gen_ncode+0x248>
    7010:	mov	r2, #225	; 0xe1
    7014:	mov	r3, #1
    7018:	tst	r3, r2, lsr r0
    701c:	beq	7100 <sf_gen_ncode+0x248>
    7020:	lsl	r0, r1, #24
    7024:	ldr	r1, [pc, #228]	; 7110 <sf_gen_ncode+0x258>
    7028:	add	r1, pc, r1
    702c:	ldr	r6, [r1, r0, asr #22]
    7030:	ldr	r0, [sp, #4]
    7034:	mov	r1, r0
    7038:	mov	r2, r6
    703c:	mov	r3, r4
    7040:	bl	6478 <gen_portrange>
    7044:	mov	r5, r0
    7048:	ldr	r0, [sp, #4]
    704c:	mov	r1, r0
    7050:	mov	r2, r6
    7054:	mov	r3, r4
    7058:	bl	654c <gen_portrange6>
    705c:	mov	r1, r5
    7060:	bl	3224 <sf_gen_or>
    7064:	b	707c <sf_gen_ncode+0x1c4>
    7068:	ldr	r0, [sp, #4]
    706c:	mov	r1, r5
    7070:	mov	r2, r4
    7074:	bl	3704 <gen_proto>
    7078:	mov	r5, r0
    707c:	mov	r0, r5
    7080:	sub	sp, fp, #16
    7084:	pop	{r4, r5, r6, r7, fp, pc}
    7088:	ldr	r0, [sp, #4]
    708c:	sub	r3, r0, #1
    7090:	mvn	r1, #0
    7094:	movw	r7, #65534	; 0xfffe
    7098:	movt	r7, #255	; 0xff
    709c:	cmp	r3, r7
    70a0:	bhi	6f78 <sf_gen_ncode+0xc0>
    70a4:	mvn	r3, #0
    70a8:	mvn	r7, #-16777216	; 0xff000000
    70ac:	mvn	r1, #0
    70b0:	add	r6, r3, r0, lsl #8
    70b4:	lsl	r1, r1, #8
    70b8:	lsl	r0, r0, #8
    70bc:	cmp	r6, r7
    70c0:	bcc	70b0 <sf_gen_ncode+0x1f8>
    70c4:	str	r0, [sp, #4]
    70c8:	b	6f78 <sf_gen_ncode+0xc0>
    70cc:	cmp	r2, #255	; 0xff
    70d0:	bne	70e4 <sf_gen_ncode+0x22c>
    70d4:	bl	2f54 <syntax>
    70d8:	ldr	r0, [pc, #52]	; 7114 <sf_gen_ncode+0x25c>
    70dc:	add	r0, pc, r0
    70e0:	bl	1f9c <sf_bpf_error>
    70e4:	bl	fc4 <abort@plt>
    70e8:	ldr	r0, [pc, #40]	; 7118 <sf_gen_ncode+0x260>
    70ec:	add	r0, pc, r0
    70f0:	bl	1f9c <sf_bpf_error>
    70f4:	ldr	r0, [pc, #32]	; 711c <sf_gen_ncode+0x264>
    70f8:	add	r0, pc, r0
    70fc:	bl	1f9c <sf_bpf_error>
    7100:	ldr	r0, [pc, #24]	; 7120 <sf_gen_ncode+0x268>
    7104:	add	r0, pc, r0
    7108:	bl	1f9c <sf_bpf_error>
    710c:	.word	0x0000c8d4
    7110:	.word	0x0000c870
    7114:	.word	0x0000b58c
    7118:	.word	0x0000b561
    711c:	.word	0x0000b3a8
    7120:	.word	0x0000b3fe

00007124 <sf_gen_mcode6>:
    7124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7128:	add	fp, sp, #28
    712c:	sub	sp, sp, #28
    7130:	cmp	r1, #0
    7134:	bne	727c <sf_gen_mcode6+0x158>
    7138:	mov	sl, r3
    713c:	mov	r6, r2
    7140:	mov	r5, r0
    7144:	bl	b43c <pcap_nametoaddrinfo>
    7148:	cmp	r0, #0
    714c:	beq	7288 <sf_gen_mcode6+0x164>
    7150:	mov	r4, r0
    7154:	ldr	r0, [pc, #360]	; 72c4 <sf_gen_mcode6+0x1a0>
    7158:	add	r0, pc, r0
    715c:	str	r4, [r0]
    7160:	ldr	r0, [r4, #28]
    7164:	cmp	r0, #0
    7168:	bne	7298 <sf_gen_mcode6+0x174>
    716c:	str	r5, [sp, #4]
    7170:	cmp	r6, #129	; 0x81
    7174:	bcs	72a8 <sf_gen_mcode6+0x184>
    7178:	ldr	r8, [r4, #20]
    717c:	add	r9, r8, #8
    7180:	vmov.i32	q8, #0	; 0x00000000
    7184:	add	r7, sp, #8
    7188:	vst1.64	{d16-d17}, [r7]
    718c:	ubfx	r5, r6, #3, #5
    7190:	mov	r0, r7
    7194:	mov	r1, #255	; 0xff
    7198:	mov	r2, r5
    719c:	bl	f40 <memset@plt>
    71a0:	ands	r0, r6, #7
    71a4:	rsbne	r0, r0, #8
    71a8:	movne	r1, #255	; 0xff
    71ac:	lslne	r0, r1, r0
    71b0:	strbne	r0, [r7, r5]
    71b4:	ldr	r0, [r9]
    71b8:	ldr	r1, [sp, #8]
    71bc:	mvn	r1, r1
    71c0:	tst	r0, r1
    71c4:	ldreq	r0, [r8, #12]
    71c8:	ldreq	r1, [sp, #12]
    71cc:	mvneq	r1, r1
    71d0:	tsteq	r0, r1
    71d4:	bne	71fc <sf_gen_mcode6+0xd8>
    71d8:	ldr	r0, [r8, #16]
    71dc:	ldr	r1, [sp, #16]
    71e0:	mvn	r1, r1
    71e4:	tst	r0, r1
    71e8:	ldreq	r0, [r8, #20]
    71ec:	ldreq	r1, [sp, #20]
    71f0:	mvneq	r1, r1
    71f4:	tsteq	r0, r1
    71f8:	beq	7210 <sf_gen_mcode6+0xec>
    71fc:	ldr	r0, [pc, #220]	; 72e0 <sf_gen_mcode6+0x1bc>
    7200:	add	r0, pc, r0
    7204:	ldr	r1, [sp, #4]
    7208:	mov	r2, r6
    720c:	bl	1f9c <sf_bpf_error>
    7210:	uxtb	r0, sl
    7214:	cmp	r0, #2
    7218:	bcs	7230 <sf_gen_mcode6+0x10c>
    721c:	cmp	r6, #128	; 0x80
    7220:	beq	7234 <sf_gen_mcode6+0x110>
    7224:	ldr	r0, [pc, #184]	; 72e4 <sf_gen_mcode6+0x1c0>
    7228:	add	r0, pc, r0
    722c:	bl	1f9c <sf_bpf_error>
    7230:	bne	72b8 <sf_gen_mcode6+0x194>
    7234:	lsr	r1, sl, #16
    7238:	lsr	r2, sl, #8
    723c:	str	r0, [sp]
    7240:	uxtb	r2, r2
    7244:	uxtb	r3, r1
    7248:	add	r1, sp, #8
    724c:	mov	r0, r9
    7250:	bl	5d8c <gen_host6>
    7254:	mov	r5, r0
    7258:	mov	r0, #0
    725c:	ldr	r1, [pc, #104]	; 72cc <sf_gen_mcode6+0x1a8>
    7260:	add	r1, pc, r1
    7264:	str	r0, [r1]
    7268:	mov	r0, r4
    726c:	bl	f94 <freeaddrinfo@plt>
    7270:	mov	r0, r5
    7274:	sub	sp, fp, #28
    7278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    727c:	ldr	r0, [pc, #76]	; 72d0 <sf_gen_mcode6+0x1ac>
    7280:	add	r0, pc, r0
    7284:	bl	1f9c <sf_bpf_error>
    7288:	ldr	r0, [pc, #68]	; 72d4 <sf_gen_mcode6+0x1b0>
    728c:	add	r0, pc, r0
    7290:	mov	r1, r5
    7294:	bl	1f9c <sf_bpf_error>
    7298:	ldr	r0, [pc, #56]	; 72d8 <sf_gen_mcode6+0x1b4>
    729c:	add	r0, pc, r0
    72a0:	mov	r1, r5
    72a4:	bl	1f9c <sf_bpf_error>
    72a8:	ldr	r0, [pc, #44]	; 72dc <sf_gen_mcode6+0x1b8>
    72ac:	add	r0, pc, r0
    72b0:	mov	r1, #128	; 0x80
    72b4:	bl	1f9c <sf_bpf_error>
    72b8:	ldr	r0, [pc, #8]	; 72c8 <sf_gen_mcode6+0x1a4>
    72bc:	add	r0, pc, r0
    72c0:	bl	1f9c <sf_bpf_error>
    72c4:	.word	0x0002943c
    72c8:	.word	0x0000b42c
    72cc:	.word	0x00029334
    72d0:	.word	0x0000b402
    72d4:	.word	0x0000b40b
    72d8:	.word	0x0000b412
    72dc:	.word	0x0000b422
    72e0:	.word	0x0000b40f
    72e4:	.word	0x0000b407

000072e8 <sf_gen_ecode>:
    72e8:	push	{r4, r5, r6, sl, fp, lr}
    72ec:	add	fp, sp, #16
    72f0:	mov	r4, r0
    72f4:	movw	r0, #65534	; 0xfffe
    72f8:	and	r0, r1, r0
    72fc:	cmp	r0, #256	; 0x100
    7300:	bne	74e4 <sf_gen_ecode+0x1fc>
    7304:	lsr	r6, r1, #16
    7308:	ldr	r0, [pc, #492]	; 74fc <sf_gen_ecode+0x214>
    730c:	ldr	r0, [pc, r0]
    7310:	cmp	r0, #104	; 0x68
    7314:	ble	742c <sf_gen_ecode+0x144>
    7318:	sub	r1, r0, #105	; 0x69
    731c:	cmp	r1, #58	; 0x3a
    7320:	bhi	745c <sf_gen_ecode+0x174>
    7324:	add	r0, pc, #4
    7328:	ldr	r1, [r0, r1, lsl #2]
    732c:	add	pc, r0, r1
    7330:	.word	0x000000ec
    7334:	.word	0x000001c0
    7338:	.word	0x000001c0
    733c:	.word	0x000001c0
    7340:	.word	0x000001c0
    7344:	.word	0x000001c0
    7348:	.word	0x000001c0
    734c:	.word	0x000001c0
    7350:	.word	0x000001c0
    7354:	.word	0x000001c0
    7358:	.word	0x000001c0
    735c:	.word	0x000001c0
    7360:	.word	0x000001c0
    7364:	.word	0x000001c0
    7368:	.word	0x000000ec
    736c:	.word	0x000001c0
    7370:	.word	0x000001c0
    7374:	.word	0x00000138
    7378:	.word	0x00000148
    737c:	.word	0x000001c0
    7380:	.word	0x000001c0
    7384:	.word	0x000001c0
    7388:	.word	0x000000ec
    738c:	.word	0x000001c0
    7390:	.word	0x000001c0
    7394:	.word	0x000001c0
    7398:	.word	0x000001c0
    739c:	.word	0x000001c0
    73a0:	.word	0x000001c0
    73a4:	.word	0x000001c0
    73a8:	.word	0x000001c0
    73ac:	.word	0x000001c0
    73b0:	.word	0x000001c0
    73b4:	.word	0x000001c0
    73b8:	.word	0x000001c0
    73bc:	.word	0x000001c0
    73c0:	.word	0x000001c0
    73c4:	.word	0x000001c0
    73c8:	.word	0x000001c0
    73cc:	.word	0x000001c0
    73d0:	.word	0x000001c0
    73d4:	.word	0x000001c0
    73d8:	.word	0x000001c0
    73dc:	.word	0x000001c0
    73e0:	.word	0x000001c0
    73e4:	.word	0x000001c0
    73e8:	.word	0x000001c0
    73ec:	.word	0x000001c0
    73f0:	.word	0x000001c0
    73f4:	.word	0x000001c0
    73f8:	.word	0x000001c0
    73fc:	.word	0x000001c0
    7400:	.word	0x000001c0
    7404:	.word	0x000001c0
    7408:	.word	0x000001c0
    740c:	.word	0x000001c0
    7410:	.word	0x000001c0
    7414:	.word	0x000001c0
    7418:	.word	0x000000ec
    741c:	uxtb	r1, r6
    7420:	mov	r0, r4
    7424:	pop	{r4, r5, r6, sl, fp, lr}
    7428:	b	5770 <gen_wlanhostop>
    742c:	cmp	r0, #1
    7430:	beq	744c <sf_gen_ecode+0x164>
    7434:	cmp	r0, #6
    7438:	bne	74cc <sf_gen_ecode+0x1e4>
    743c:	uxtb	r1, r6
    7440:	mov	r0, r4
    7444:	pop	{r4, r5, r6, sl, fp, lr}
    7448:	b	56b0 <gen_thostop>
    744c:	uxtb	r1, r6
    7450:	mov	r0, r4
    7454:	pop	{r4, r5, r6, sl, fp, lr}
    7458:	b	551c <gen_ehostop>
    745c:	cmp	r0, #192	; 0xc0
    7460:	beq	741c <sf_gen_ecode+0x134>
    7464:	b	74f0 <sf_gen_ecode+0x208>
    7468:	uxtb	r1, r6
    746c:	mov	r0, r4
    7470:	pop	{r4, r5, r6, sl, fp, lr}
    7474:	b	5cc4 <gen_ipfchostop>
    7478:	ldr	r0, [pc, #128]	; 7500 <sf_gen_ecode+0x218>
    747c:	add	r0, pc, r0
    7480:	ldrb	r0, [r0]
    7484:	cmp	r0, #1
    7488:	bne	74e4 <sf_gen_ecode+0x1fc>
    748c:	mov	r0, #1
    7490:	mov	r1, #4
    7494:	mov	r2, #8
    7498:	mov	r3, #65280	; 0xff00
    749c:	bl	450c <gen_cmp>
    74a0:	mov	r5, r0
    74a4:	bl	3278 <sf_gen_not>
    74a8:	uxtb	r1, r6
    74ac:	mov	r0, r4
    74b0:	bl	551c <gen_ehostop>
    74b4:	mov	r4, r0
    74b8:	mov	r0, r5
    74bc:	mov	r1, r4
    74c0:	bl	314c <sf_gen_and>
    74c4:	mov	r0, r4
    74c8:	pop	{r4, r5, r6, sl, fp, pc}
    74cc:	cmp	r0, #10
    74d0:	bne	74f0 <sf_gen_ecode+0x208>
    74d4:	uxtb	r1, r6
    74d8:	mov	r0, r4
    74dc:	pop	{r4, r5, r6, sl, fp, lr}
    74e0:	b	55f0 <gen_fhostop>
    74e4:	ldr	r0, [pc, #28]	; 7508 <sf_gen_ecode+0x220>
    74e8:	add	r0, pc, r0
    74ec:	bl	1f9c <sf_bpf_error>
    74f0:	ldr	r0, [pc, #12]	; 7504 <sf_gen_ecode+0x21c>
    74f4:	add	r0, pc, r0
    74f8:	bl	1f9c <sf_bpf_error>
    74fc:	.word	0x00029294
    7500:	.word	0x00029128
    7504:	.word	0x0000b21b
    7508:	.word	0x0000b283

0000750c <sf_append>:
    750c:	mov	r2, r0
    7510:	ldr	r0, [r0, #16]
    7514:	cmp	r0, #0
    7518:	bne	750c <sf_append>
    751c:	str	r1, [r2, #16]
    7520:	bx	lr

00007524 <sf_gen_load>:
    7524:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7528:	add	fp, sp, #24
    752c:	mov	r5, r2
    7530:	mov	r4, r1
    7534:	mov	r7, r0
    7538:	bl	78d8 <alloc_reg>
    753c:	mov	r8, r0
    7540:	ldr	r0, [r4, #8]
    7544:	bl	7950 <free_reg>
    7548:	cmp	r5, #1
    754c:	beq	7570 <sf_gen_load+0x4c>
    7550:	cmp	r5, #2
    7554:	beq	7568 <sf_gen_load+0x44>
    7558:	cmp	r5, #4
    755c:	bne	789c <sf_gen_load+0x378>
    7560:	mov	r6, #64	; 0x40
    7564:	b	7574 <sf_gen_load+0x50>
    7568:	mov	r6, #72	; 0x48
    756c:	b	7574 <sf_gen_load+0x50>
    7570:	mov	r6, #80	; 0x50
    7574:	sub	r0, r7, #1
    7578:	cmp	r0, #39	; 0x27
    757c:	bhi	7890 <sf_gen_load+0x36c>
    7580:	add	r1, pc, #4
    7584:	ldr	r0, [r1, r0, lsl #2]
    7588:	add	pc, r1, r0
    758c:	.word	0x00000268
    7590:	.word	0x000000a0
    7594:	.word	0x000000a0
    7598:	.word	0x000000a0
    759c:	.word	0x000000f0
    75a0:	.word	0x000000f0
    75a4:	.word	0x000000f0
    75a8:	.word	0x000000f0
    75ac:	.word	0x000000f0
    75b0:	.word	0x000000f0
    75b4:	.word	0x000000a0
    75b8:	.word	0x000000a0
    75bc:	.word	0x000000a0
    75c0:	.word	0x000000a0
    75c4:	.word	0x000000a0
    75c8:	.word	0x000000a0
    75cc:	.word	0x000000a0
    75d0:	.word	0x0000031c
    75d4:	.word	0x00000304
    75d8:	.word	0x00000304
    75dc:	.word	0x000000f0
    75e0:	.word	0x000000f0
    75e4:	.word	0x00000304
    75e8:	.word	0x00000304
    75ec:	.word	0x00000304
    75f0:	.word	0x00000304
    75f4:	.word	0x00000304
    75f8:	.word	0x00000304
    75fc:	.word	0x00000304
    7600:	.word	0x00000304
    7604:	.word	0x00000304
    7608:	.word	0x00000304
    760c:	.word	0x00000304
    7610:	.word	0x00000304
    7614:	.word	0x00000304
    7618:	.word	0x00000304
    761c:	.word	0x00000304
    7620:	.word	0x00000304
    7624:	.word	0x00000304
    7628:	.word	0x00000238
    762c:	bl	7a10 <gen_off_macpl>
    7630:	cmp	r0, #0
    7634:	beq	7738 <sf_gen_load+0x214>
    7638:	mov	r5, r0
    763c:	mov	r0, r4
    7640:	bl	79f0 <xfer_to_a>
    7644:	mov	r1, r0
    7648:	mov	r0, r5
    764c:	bl	750c <sf_append>
    7650:	mov	r0, #12
    7654:	bl	7988 <new_stmt>
    7658:	mov	r1, r0
    765c:	mov	r0, r5
    7660:	bl	750c <sf_append>
    7664:	mov	r0, #7
    7668:	bl	7988 <new_stmt>
    766c:	mov	r1, r0
    7670:	mov	r0, r5
    7674:	bl	750c <sf_append>
    7678:	b	7744 <sf_gen_load+0x220>
    767c:	bl	7a7c <gen_loadx_iphdrlen>
    7680:	mov	r5, r0
    7684:	mov	r0, r4
    7688:	bl	79f0 <xfer_to_a>
    768c:	mov	r1, r0
    7690:	mov	r0, r5
    7694:	bl	750c <sf_append>
    7698:	mov	r0, #12
    769c:	bl	7988 <new_stmt>
    76a0:	mov	r1, r0
    76a4:	mov	r0, r5
    76a8:	bl	750c <sf_append>
    76ac:	mov	r0, #7
    76b0:	bl	7988 <new_stmt>
    76b4:	mov	r1, r0
    76b8:	mov	r0, r5
    76bc:	bl	750c <sf_append>
    76c0:	mov	r0, r6
    76c4:	bl	7988 <new_stmt>
    76c8:	mov	r6, r0
    76cc:	mov	r0, r5
    76d0:	mov	r1, r6
    76d4:	bl	750c <sf_append>
    76d8:	ldr	r0, [pc, #488]	; 78c8 <sf_gen_load+0x3a4>
    76dc:	ldr	r0, [pc, r0]
    76e0:	ldr	r1, [pc, #484]	; 78cc <sf_gen_load+0x3a8>
    76e4:	ldr	r1, [pc, r1]
    76e8:	add	r0, r1, r0
    76ec:	str	r0, [r6, #12]
    76f0:	ldr	r0, [r4, #4]
    76f4:	mov	r1, r5
    76f8:	bl	750c <sf_append>
    76fc:	mov	r0, r7
    7700:	bl	328c <sf_gen_proto_abbrev>
    7704:	mov	r6, r0
    7708:	bl	453c <gen_ipfrag>
    770c:	mov	r5, r0
    7710:	mov	r0, r6
    7714:	mov	r1, r5
    7718:	bl	314c <sf_gen_and>
    771c:	ldr	r0, [r4]
    7720:	cmp	r0, #0
    7724:	movne	r1, r5
    7728:	blne	314c <sf_gen_and>
    772c:	mov	r0, #2
    7730:	bl	328c <sf_gen_proto_abbrev>
    7734:	b	7794 <sf_gen_load+0x270>
    7738:	mov	r0, r4
    773c:	bl	7968 <xfer_to_x>
    7740:	mov	r5, r0
    7744:	mov	r0, r6
    7748:	bl	7988 <new_stmt>
    774c:	mov	r1, r0
    7750:	ldr	r0, [pc, #360]	; 78c0 <sf_gen_load+0x39c>
    7754:	ldr	r0, [pc, r0]
    7758:	ldr	r2, [pc, #356]	; 78c4 <sf_gen_load+0x3a0>
    775c:	ldr	r2, [pc, r2]
    7760:	add	r0, r2, r0
    7764:	str	r0, [r1, #12]
    7768:	mov	r0, r5
    776c:	bl	750c <sf_append>
    7770:	ldr	r0, [r4, #4]
    7774:	mov	r1, r5
    7778:	bl	750c <sf_append>
    777c:	mov	r0, r7
    7780:	bl	328c <sf_gen_proto_abbrev>
    7784:	mov	r5, r0
    7788:	ldr	r0, [r4]
    778c:	cmp	r0, #0
    7790:	beq	779c <sf_gen_load+0x278>
    7794:	mov	r1, r5
    7798:	bl	314c <sf_gen_and>
    779c:	str	r5, [r4]
    77a0:	str	r8, [r4, #8]
    77a4:	mov	r0, #2
    77a8:	bl	7988 <new_stmt>
    77ac:	mov	r1, r0
    77b0:	str	r8, [r0, #12]
    77b4:	ldr	r0, [r4, #4]
    77b8:	bl	750c <sf_append>
    77bc:	mov	r0, r4
    77c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    77c4:	ldr	r0, [pc, #240]	; 78bc <sf_gen_load+0x398>
    77c8:	ldr	r0, [pc, r0]
    77cc:	cmp	r0, #119	; 0x77
    77d0:	cmpne	r0, #127	; 0x7f
    77d4:	bne	787c <sf_gen_load+0x358>
    77d8:	mov	r0, r4
    77dc:	bl	7968 <xfer_to_x>
    77e0:	mov	r5, r0
    77e4:	mov	r0, r6
    77e8:	bl	7988 <new_stmt>
    77ec:	mov	r1, r0
    77f0:	b	7864 <sf_gen_load+0x340>
    77f4:	bl	79a4 <gen_llprefixlen>
    77f8:	cmp	r0, #0
    77fc:	beq	7844 <sf_gen_load+0x320>
    7800:	mov	r5, r0
    7804:	mov	r0, r4
    7808:	bl	79f0 <xfer_to_a>
    780c:	mov	r1, r0
    7810:	mov	r0, r5
    7814:	bl	750c <sf_append>
    7818:	mov	r0, #12
    781c:	bl	7988 <new_stmt>
    7820:	mov	r1, r0
    7824:	mov	r0, r5
    7828:	bl	750c <sf_append>
    782c:	mov	r0, #7
    7830:	bl	7988 <new_stmt>
    7834:	mov	r1, r0
    7838:	mov	r0, r5
    783c:	bl	750c <sf_append>
    7840:	b	7850 <sf_gen_load+0x32c>
    7844:	mov	r0, r4
    7848:	bl	7968 <xfer_to_x>
    784c:	mov	r5, r0
    7850:	mov	r0, r6
    7854:	bl	7988 <new_stmt>
    7858:	mov	r1, r0
    785c:	mov	r0, #0
    7860:	str	r0, [r1, #12]
    7864:	mov	r0, r5
    7868:	bl	750c <sf_append>
    786c:	ldr	r0, [r4, #4]
    7870:	mov	r1, r5
    7874:	bl	750c <sf_append>
    7878:	b	77a0 <sf_gen_load+0x27c>
    787c:	cmp	r0, #163	; 0xa3
    7880:	beq	77d8 <sf_gen_load+0x2b4>
    7884:	ldr	r0, [pc, #68]	; 78d0 <sf_gen_load+0x3ac>
    7888:	add	r0, pc, r0
    788c:	bl	1f9c <sf_bpf_error>
    7890:	ldr	r0, [pc, #32]	; 78b8 <sf_gen_load+0x394>
    7894:	add	r0, pc, r0
    7898:	bl	1f9c <sf_bpf_error>
    789c:	ldr	r0, [pc, #16]	; 78b4 <sf_gen_load+0x390>
    78a0:	add	r0, pc, r0
    78a4:	bl	1f9c <sf_bpf_error>
    78a8:	ldr	r0, [pc, #36]	; 78d4 <sf_gen_load+0x3b0>
    78ac:	add	r0, pc, r0
    78b0:	bl	1f9c <sf_bpf_error>
    78b4:	.word	0x0000aef9
    78b8:	.word	0x0000af22
    78bc:	.word	0x00028dd8
    78c0:	.word	0x00028e58
    78c4:	.word	0x00028e54
    78c8:	.word	0x00028ed0
    78cc:	.word	0x00028ecc
    78d0:	.word	0x0000af4a
    78d4:	.word	0x0000af4f

000078d8 <alloc_reg>:
    78d8:	mvn	r2, #15
    78dc:	ldr	ip, [pc, #92]	; 7940 <alloc_reg+0x68>
    78e0:	add	ip, pc, ip
    78e4:	ldr	r3, [pc, #88]	; 7944 <alloc_reg+0x6c>
    78e8:	add	r3, pc, r3
    78ec:	ldr	r0, [pc, #84]	; 7948 <alloc_reg+0x70>
    78f0:	ldr	r0, [pc, r0]
    78f4:	ldr	r1, [ip, r0, lsl #2]
    78f8:	cmp	r1, #0
    78fc:	beq	7934 <alloc_reg+0x5c>
    7900:	add	r0, r0, #1
    7904:	asr	r1, r0, #31
    7908:	add	r1, r0, r1, lsr #28
    790c:	bic	r1, r1, #15
    7910:	sub	r0, r0, r1
    7914:	str	r0, [r3]
    7918:	adds	r2, r2, #1
    791c:	bne	78ec <alloc_reg+0x14>
    7920:	push	{fp, lr}
    7924:	mov	fp, sp
    7928:	ldr	r0, [pc, #28]	; 794c <alloc_reg+0x74>
    792c:	add	r0, pc, r0
    7930:	bl	1f9c <sf_bpf_error>
    7934:	mov	r1, #1
    7938:	str	r1, [ip, r0, lsl #2]
    793c:	bx	lr
    7940:	.word	0x00028da0
    7944:	.word	0x00028d94
    7948:	.word	0x00028d8c
    794c:	.word	0x0000bf39

00007950 <free_reg>:
    7950:	ldr	r1, [pc, #12]	; 7964 <free_reg+0x14>
    7954:	add	r1, pc, r1
    7958:	mov	r2, #0
    795c:	str	r2, [r1, r0, lsl #2]
    7960:	bx	lr
    7964:	.word	0x00028d2c

00007968 <xfer_to_x>:
    7968:	push	{r4, sl, fp, lr}
    796c:	add	fp, sp, #8
    7970:	mov	r4, r0
    7974:	mov	r0, #97	; 0x61
    7978:	bl	7988 <new_stmt>
    797c:	ldr	r1, [r4, #8]
    7980:	str	r1, [r0, #12]
    7984:	pop	{r4, sl, fp, pc}

00007988 <new_stmt>:
    7988:	push	{r4, sl, fp, lr}
    798c:	add	fp, sp, #8
    7990:	mov	r4, r0
    7994:	mov	r0, #20
    7998:	bl	2030 <newchunk>
    799c:	str	r4, [r0]
    79a0:	pop	{r4, sl, fp, pc}

000079a4 <gen_llprefixlen>:
    79a4:	ldr	r0, [pc, #64]	; 79ec <gen_llprefixlen+0x48>
    79a8:	ldr	r0, [pc, r0]
    79ac:	cmp	r0, #162	; 0xa2
    79b0:	bgt	79c8 <gen_llprefixlen+0x24>
    79b4:	cmp	r0, #119	; 0x77
    79b8:	beq	79e4 <gen_llprefixlen+0x40>
    79bc:	cmp	r0, #127	; 0x7f
    79c0:	bne	79dc <gen_llprefixlen+0x38>
    79c4:	b	b294 <gen_radiotap_llprefixlen>
    79c8:	cmp	r0, #163	; 0xa3
    79cc:	beq	79e8 <gen_llprefixlen+0x44>
    79d0:	cmp	r0, #192	; 0xc0
    79d4:	bne	79dc <gen_llprefixlen+0x38>
    79d8:	b	b2e0 <gen_ppi_llprefixlen>
    79dc:	mov	r0, #0
    79e0:	bx	lr
    79e4:	b	b1fc <gen_prism_llprefixlen>
    79e8:	b	b248 <gen_avs_llprefixlen>
    79ec:	.word	0x00028bf8

000079f0 <xfer_to_a>:
    79f0:	push	{r4, sl, fp, lr}
    79f4:	add	fp, sp, #8
    79f8:	mov	r4, r0
    79fc:	mov	r0, #96	; 0x60
    7a00:	bl	7988 <new_stmt>
    7a04:	ldr	r1, [r4, #8]
    7a08:	str	r1, [r0, #12]
    7a0c:	pop	{r4, sl, fp, pc}

00007a10 <gen_off_macpl>:
    7a10:	ldr	r0, [pc, #84]	; 7a6c <gen_off_macpl+0x5c>
    7a14:	add	r0, pc, r0
    7a18:	ldrb	r1, [r0]
    7a1c:	mov	r0, #0
    7a20:	cmp	r1, #1
    7a24:	bxne	lr
    7a28:	push	{fp, lr}
    7a2c:	mov	fp, sp
    7a30:	ldr	r0, [pc, #56]	; 7a70 <gen_off_macpl+0x60>
    7a34:	ldr	r0, [pc, r0]
    7a38:	cmn	r0, #1
    7a3c:	bne	7a50 <gen_off_macpl+0x40>
    7a40:	bl	78d8 <alloc_reg>
    7a44:	ldr	r1, [pc, #40]	; 7a74 <gen_off_macpl+0x64>
    7a48:	add	r1, pc, r1
    7a4c:	str	r0, [r1]
    7a50:	mov	r0, #97	; 0x61
    7a54:	bl	7988 <new_stmt>
    7a58:	ldr	r1, [pc, #24]	; 7a78 <gen_off_macpl+0x68>
    7a5c:	ldr	r1, [pc, r1]
    7a60:	str	r1, [r0, #12]
    7a64:	pop	{fp, lr}
    7a68:	bx	lr
    7a6c:	.word	0x00028c5c
    7a70:	.word	0x00028c44
    7a74:	.word	0x00028c30
    7a78:	.word	0x00028c1c

00007a7c <gen_loadx_iphdrlen>:
    7a7c:	push	{r4, sl, fp, lr}
    7a80:	add	fp, sp, #8
    7a84:	bl	7a10 <gen_off_macpl>
    7a88:	cmp	r0, #0
    7a8c:	beq	7b1c <gen_loadx_iphdrlen+0xa0>
    7a90:	mov	r4, r0
    7a94:	mov	r0, #80	; 0x50
    7a98:	bl	7988 <new_stmt>
    7a9c:	mov	r1, r0
    7aa0:	ldr	r0, [pc, #160]	; 7b48 <gen_loadx_iphdrlen+0xcc>
    7aa4:	ldr	r0, [pc, r0]
    7aa8:	str	r0, [r1, #12]
    7aac:	mov	r0, r4
    7ab0:	bl	750c <sf_append>
    7ab4:	mov	r0, #84	; 0x54
    7ab8:	bl	7988 <new_stmt>
    7abc:	mov	r1, r0
    7ac0:	mov	r0, #15
    7ac4:	str	r0, [r1, #12]
    7ac8:	mov	r0, r4
    7acc:	bl	750c <sf_append>
    7ad0:	mov	r0, #100	; 0x64
    7ad4:	bl	7988 <new_stmt>
    7ad8:	mov	r1, r0
    7adc:	mov	r0, #2
    7ae0:	str	r0, [r1, #12]
    7ae4:	mov	r0, r4
    7ae8:	bl	750c <sf_append>
    7aec:	mov	r0, #12
    7af0:	bl	7988 <new_stmt>
    7af4:	mov	r1, r0
    7af8:	mov	r0, r4
    7afc:	bl	750c <sf_append>
    7b00:	mov	r0, #7
    7b04:	bl	7988 <new_stmt>
    7b08:	mov	r1, r0
    7b0c:	mov	r0, r4
    7b10:	bl	750c <sf_append>
    7b14:	mov	r0, r4
    7b18:	pop	{r4, sl, fp, pc}
    7b1c:	mov	r0, #177	; 0xb1
    7b20:	bl	7988 <new_stmt>
    7b24:	mov	r4, r0
    7b28:	ldr	r0, [pc, #28]	; 7b4c <gen_loadx_iphdrlen+0xd0>
    7b2c:	ldr	r0, [pc, r0]
    7b30:	ldr	r1, [pc, #24]	; 7b50 <gen_loadx_iphdrlen+0xd4>
    7b34:	ldr	r1, [pc, r1]
    7b38:	add	r0, r1, r0
    7b3c:	str	r0, [r4, #12]
    7b40:	mov	r0, r4
    7b44:	pop	{r4, sl, fp, pc}
    7b48:	.word	0x00028b0c
    7b4c:	.word	0x00028a80
    7b50:	.word	0x00028a7c

00007b54 <sf_gen_relation>:
    7b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7b58:	add	fp, sp, #28
    7b5c:	sub	sp, sp, #4
    7b60:	mov	r8, r3
    7b64:	mov	r5, r2
    7b68:	mov	r4, r1
    7b6c:	mov	r6, r0
    7b70:	mov	r0, r2
    7b74:	bl	7968 <xfer_to_x>
    7b78:	mov	r7, r0
    7b7c:	mov	r0, r4
    7b80:	bl	79f0 <xfer_to_a>
    7b84:	mov	r9, r0
    7b88:	cmp	r6, #16
    7b8c:	bne	7bb8 <sf_gen_relation+0x64>
    7b90:	mov	r0, #28
    7b94:	bl	7988 <new_stmt>
    7b98:	mov	sl, r0
    7b9c:	orr	r0, r6, #5
    7ba0:	bl	7c58 <new_block>
    7ba4:	mov	r6, r0
    7ba8:	mov	r0, r9
    7bac:	mov	r1, sl
    7bb0:	bl	750c <sf_append>
    7bb4:	b	7bc4 <sf_gen_relation+0x70>
    7bb8:	orr	r0, r6, #13
    7bbc:	bl	7c58 <new_block>
    7bc0:	mov	r6, r0
    7bc4:	cmp	r8, #0
    7bc8:	movne	r0, r6
    7bcc:	blne	3278 <sf_gen_not>
    7bd0:	mov	r0, r7
    7bd4:	mov	r1, r9
    7bd8:	bl	750c <sf_append>
    7bdc:	ldr	r0, [r5, #4]
    7be0:	mov	r1, r7
    7be4:	bl	750c <sf_append>
    7be8:	ldr	r1, [r5, #4]
    7bec:	ldr	r0, [r4, #4]
    7bf0:	bl	750c <sf_append>
    7bf4:	ldr	r0, [r4, #4]
    7bf8:	str	r0, [r6, #4]
    7bfc:	ldr	r0, [r4, #8]
    7c00:	bl	7950 <free_reg>
    7c04:	ldr	r0, [r5, #8]
    7c08:	bl	7950 <free_reg>
    7c0c:	ldr	r5, [r5]
    7c10:	ldr	r0, [r4]
    7c14:	cmp	r0, #0
    7c18:	beq	7c30 <sf_gen_relation+0xdc>
    7c1c:	cmp	r5, #0
    7c20:	beq	7c3c <sf_gen_relation+0xe8>
    7c24:	mov	r1, r5
    7c28:	bl	314c <sf_gen_and>
    7c2c:	b	7c40 <sf_gen_relation+0xec>
    7c30:	cmp	r5, #0
    7c34:	bne	7c40 <sf_gen_relation+0xec>
    7c38:	b	7c4c <sf_gen_relation+0xf8>
    7c3c:	mov	r5, r0
    7c40:	mov	r0, r5
    7c44:	mov	r1, r6
    7c48:	bl	314c <sf_gen_and>
    7c4c:	mov	r0, r6
    7c50:	sub	sp, fp, #28
    7c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007c58 <new_block>:
    7c58:	push	{r4, sl, fp, lr}
    7c5c:	add	fp, sp, #8
    7c60:	mov	r4, r0
    7c64:	mov	r0, #208	; 0xd0
    7c68:	bl	2030 <newchunk>
    7c6c:	str	r4, [r0, #8]
    7c70:	str	r0, [r0, #96]	; 0x60
    7c74:	pop	{r4, sl, fp, pc}

00007c78 <sf_gen_loadlen>:
    7c78:	push	{r4, r5, r6, sl, fp, lr}
    7c7c:	add	fp, sp, #16
    7c80:	bl	78d8 <alloc_reg>
    7c84:	mov	r4, r0
    7c88:	mov	r0, #12
    7c8c:	bl	2030 <newchunk>
    7c90:	mov	r5, r0
    7c94:	mov	r0, #128	; 0x80
    7c98:	bl	7988 <new_stmt>
    7c9c:	mov	r6, r0
    7ca0:	mov	r0, #2
    7ca4:	bl	7988 <new_stmt>
    7ca8:	str	r0, [r6, #16]
    7cac:	str	r4, [r0, #12]
    7cb0:	str	r6, [r5, #4]
    7cb4:	str	r4, [r5, #8]
    7cb8:	mov	r0, r5
    7cbc:	pop	{r4, r5, r6, sl, fp, pc}

00007cc0 <sf_gen_loadi>:
    7cc0:	push	{r4, r5, r6, r7, fp, lr}
    7cc4:	add	fp, sp, #16
    7cc8:	mov	r4, r0
    7ccc:	mov	r0, #12
    7cd0:	bl	2030 <newchunk>
    7cd4:	mov	r5, r0
    7cd8:	bl	78d8 <alloc_reg>
    7cdc:	mov	r6, r0
    7ce0:	mov	r0, #0
    7ce4:	bl	7988 <new_stmt>
    7ce8:	mov	r7, r0
    7cec:	str	r4, [r0, #12]
    7cf0:	mov	r0, #2
    7cf4:	bl	7988 <new_stmt>
    7cf8:	str	r0, [r7, #16]
    7cfc:	str	r6, [r0, #12]
    7d00:	str	r7, [r5, #4]
    7d04:	str	r6, [r5, #8]
    7d08:	mov	r0, r5
    7d0c:	pop	{r4, r5, r6, r7, fp, pc}

00007d10 <sf_gen_neg>:
    7d10:	push	{r4, sl, fp, lr}
    7d14:	add	fp, sp, #8
    7d18:	mov	r4, r0
    7d1c:	bl	79f0 <xfer_to_a>
    7d20:	mov	r1, r0
    7d24:	ldr	r0, [r4, #4]
    7d28:	bl	750c <sf_append>
    7d2c:	mov	r0, #132	; 0x84
    7d30:	bl	7988 <new_stmt>
    7d34:	mov	r1, r0
    7d38:	mov	r0, #0
    7d3c:	str	r0, [r1, #12]
    7d40:	ldr	r0, [r4, #4]
    7d44:	bl	750c <sf_append>
    7d48:	mov	r0, #2
    7d4c:	bl	7988 <new_stmt>
    7d50:	mov	r1, r0
    7d54:	ldr	r0, [r4, #8]
    7d58:	str	r0, [r1, #12]
    7d5c:	ldr	r0, [r4, #4]
    7d60:	bl	750c <sf_append>
    7d64:	mov	r0, r4
    7d68:	pop	{r4, sl, fp, pc}

00007d6c <sf_gen_arth>:
    7d6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7d70:	add	fp, sp, #24
    7d74:	mov	r5, r2
    7d78:	mov	r4, r1
    7d7c:	mov	r8, r0
    7d80:	mov	r0, r2
    7d84:	bl	7968 <xfer_to_x>
    7d88:	mov	r7, r0
    7d8c:	mov	r0, r4
    7d90:	bl	79f0 <xfer_to_a>
    7d94:	mov	r6, r0
    7d98:	orr	r0, r8, #12
    7d9c:	bl	7988 <new_stmt>
    7da0:	mov	r1, r0
    7da4:	mov	r0, r6
    7da8:	bl	750c <sf_append>
    7dac:	mov	r0, r7
    7db0:	mov	r1, r6
    7db4:	bl	750c <sf_append>
    7db8:	ldr	r0, [r5, #4]
    7dbc:	mov	r1, r7
    7dc0:	bl	750c <sf_append>
    7dc4:	ldr	r1, [r5, #4]
    7dc8:	ldr	r0, [r4, #4]
    7dcc:	bl	750c <sf_append>
    7dd0:	ldr	r0, [r4, #8]
    7dd4:	bl	7950 <free_reg>
    7dd8:	ldr	r0, [r5, #8]
    7ddc:	bl	7950 <free_reg>
    7de0:	mov	r0, #2
    7de4:	bl	7988 <new_stmt>
    7de8:	mov	r5, r0
    7dec:	bl	78d8 <alloc_reg>
    7df0:	str	r0, [r5, #12]
    7df4:	str	r0, [r4, #8]
    7df8:	ldr	r0, [r4, #4]
    7dfc:	mov	r1, r5
    7e00:	bl	750c <sf_append>
    7e04:	mov	r0, r4
    7e08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00007e0c <sf_gen_greater>:
    7e0c:	mov	r1, r0
    7e10:	mov	r0, #48	; 0x30
    7e14:	b	7e18 <gen_len>

00007e18 <gen_len>:
    7e18:	push	{r4, r5, r6, sl, fp, lr}
    7e1c:	add	fp, sp, #16
    7e20:	mov	r4, r1
    7e24:	mov	r5, r0
    7e28:	mov	r0, #128	; 0x80
    7e2c:	bl	7988 <new_stmt>
    7e30:	mov	r6, r0
    7e34:	orr	r0, r5, #5
    7e38:	bl	7c58 <new_block>
    7e3c:	str	r6, [r0, #4]
    7e40:	str	r4, [r0, #20]
    7e44:	pop	{r4, r5, r6, sl, fp, pc}

00007e48 <sf_gen_less>:
    7e48:	push	{r4, sl, fp, lr}
    7e4c:	add	fp, sp, #8
    7e50:	mov	r1, r0
    7e54:	mov	r0, #32
    7e58:	bl	7e18 <gen_len>
    7e5c:	mov	r4, r0
    7e60:	bl	3278 <sf_gen_not>
    7e64:	mov	r0, r4
    7e68:	pop	{r4, sl, fp, pc}

00007e6c <sf_gen_byteop>:
    7e6c:	push	{r4, r5, fp, lr}
    7e70:	add	fp, sp, #8
    7e74:	mov	r4, r2
    7e78:	mov	r2, r0
    7e7c:	sub	r0, r0, #38	; 0x26
    7e80:	cmp	r0, #24
    7e84:	bhi	7f00 <sf_gen_byteop+0x94>
    7e88:	add	r2, pc, #4
    7e8c:	ldr	r0, [r2, r0, lsl #2]
    7e90:	add	pc, r2, r0
    7e94:	.word	0x00000064
    7e98:	.word	0x000000dc
    7e9c:	.word	0x000000dc
    7ea0:	.word	0x000000dc
    7ea4:	.word	0x000000dc
    7ea8:	.word	0x000000dc
    7eac:	.word	0x000000dc
    7eb0:	.word	0x000000dc
    7eb4:	.word	0x000000dc
    7eb8:	.word	0x000000dc
    7ebc:	.word	0x000000dc
    7ec0:	.word	0x000000dc
    7ec4:	.word	0x000000dc
    7ec8:	.word	0x000000dc
    7ecc:	.word	0x000000dc
    7ed0:	.word	0x000000dc
    7ed4:	.word	0x000000dc
    7ed8:	.word	0x000000dc
    7edc:	.word	0x000000dc
    7ee0:	.word	0x000000dc
    7ee4:	.word	0x000000dc
    7ee8:	.word	0x000000dc
    7eec:	.word	0x000000b4
    7ef0:	.word	0x000000c8
    7ef4:	.word	0x000000a0
    7ef8:	mov	r0, #84	; 0x54
    7efc:	b	7f0c <sf_gen_byteop+0xa0>
    7f00:	mov	r0, #68	; 0x44
    7f04:	cmp	r2, #124	; 0x7c
    7f08:	bne	7f70 <sf_gen_byteop+0x104>
    7f0c:	bl	7988 <new_stmt>
    7f10:	mov	r5, r0
    7f14:	str	r4, [r0, #12]
    7f18:	mov	r0, #21
    7f1c:	bl	7c58 <new_block>
    7f20:	mov	r4, r0
    7f24:	str	r5, [r0, #4]
    7f28:	bl	3278 <sf_gen_not>
    7f2c:	mov	r0, r4
    7f30:	pop	{r4, r5, fp, pc}
    7f34:	mov	r0, #1
    7f38:	mov	r2, #16
    7f3c:	mov	r3, r4
    7f40:	pop	{r4, r5, fp, lr}
    7f44:	b	7fa4 <gen_cmp_gt>
    7f48:	mov	r0, #1
    7f4c:	mov	r2, #16
    7f50:	mov	r3, r4
    7f54:	pop	{r4, r5, fp, lr}
    7f58:	b	7f74 <gen_cmp_lt>
    7f5c:	mov	r0, #1
    7f60:	mov	r2, #16
    7f64:	mov	r3, r4
    7f68:	pop	{r4, r5, fp, lr}
    7f6c:	b	450c <gen_cmp>
    7f70:	bl	fc4 <abort@plt>

00007f74 <gen_cmp_lt>:
    7f74:	push	{fp, lr}
    7f78:	mov	fp, sp
    7f7c:	sub	sp, sp, #16
    7f80:	mov	ip, #1
    7f84:	mov	lr, #48	; 0x30
    7f88:	str	lr, [sp]
    7f8c:	str	ip, [sp, #4]
    7f90:	str	r3, [sp, #8]
    7f94:	mvn	r3, #0
    7f98:	bl	93e8 <gen_ncmp>
    7f9c:	mov	sp, fp
    7fa0:	pop	{fp, pc}

00007fa4 <gen_cmp_gt>:
    7fa4:	push	{fp, lr}
    7fa8:	mov	fp, sp
    7fac:	sub	sp, sp, #16
    7fb0:	mov	ip, #0
    7fb4:	mov	lr, #32
    7fb8:	str	lr, [sp]
    7fbc:	str	ip, [sp, #4]
    7fc0:	str	r3, [sp, #8]
    7fc4:	mvn	r3, #0
    7fc8:	bl	93e8 <gen_ncmp>
    7fcc:	mov	sp, fp
    7fd0:	pop	{fp, pc}

00007fd4 <sf_gen_broadcast>:
    7fd4:	push	{r4, r5, r6, sl, fp, lr}
    7fd8:	add	fp, sp, #16
    7fdc:	sub	sp, sp, #8
    7fe0:	cmp	r0, #2
    7fe4:	bcs	810c <sf_gen_broadcast+0x138>
    7fe8:	ldr	r0, [pc, #724]	; 82c4 <sf_gen_broadcast+0x2f0>
    7fec:	ldr	r0, [pc, r0]
    7ff0:	sub	r1, r0, #105	; 0x69
    7ff4:	cmp	r1, #58	; 0x3a
    7ff8:	bhi	8194 <sf_gen_broadcast+0x1c0>
    7ffc:	add	r0, pc, #4
    8000:	ldr	r1, [r0, r1, lsl #2]
    8004:	add	pc, r0, r1
    8008:	.word	0x000000ec
    800c:	.word	0x00000204
    8010:	.word	0x00000204
    8014:	.word	0x00000204
    8018:	.word	0x00000204
    801c:	.word	0x00000204
    8020:	.word	0x00000204
    8024:	.word	0x00000204
    8028:	.word	0x00000204
    802c:	.word	0x00000204
    8030:	.word	0x00000204
    8034:	.word	0x00000204
    8038:	.word	0x00000204
    803c:	.word	0x00000204
    8040:	.word	0x000000ec
    8044:	.word	0x00000204
    8048:	.word	0x00000204
    804c:	.word	0x00000240
    8050:	.word	0x00000258
    8054:	.word	0x00000204
    8058:	.word	0x00000204
    805c:	.word	0x00000204
    8060:	.word	0x000000ec
    8064:	.word	0x00000204
    8068:	.word	0x000001e4
    806c:	.word	0x00000204
    8070:	.word	0x00000204
    8074:	.word	0x00000204
    8078:	.word	0x00000204
    807c:	.word	0x00000204
    8080:	.word	0x00000204
    8084:	.word	0x00000204
    8088:	.word	0x00000204
    808c:	.word	0x00000204
    8090:	.word	0x00000204
    8094:	.word	0x00000204
    8098:	.word	0x00000204
    809c:	.word	0x00000204
    80a0:	.word	0x00000204
    80a4:	.word	0x00000204
    80a8:	.word	0x00000204
    80ac:	.word	0x00000204
    80b0:	.word	0x00000204
    80b4:	.word	0x00000204
    80b8:	.word	0x00000204
    80bc:	.word	0x00000204
    80c0:	.word	0x00000204
    80c4:	.word	0x00000204
    80c8:	.word	0x00000204
    80cc:	.word	0x00000204
    80d0:	.word	0x00000204
    80d4:	.word	0x00000204
    80d8:	.word	0x00000204
    80dc:	.word	0x00000204
    80e0:	.word	0x00000204
    80e4:	.word	0x00000204
    80e8:	.word	0x00000204
    80ec:	.word	0x00000204
    80f0:	.word	0x000000ec
    80f4:	ldr	r0, [pc, #460]	; 82c8 <sf_gen_broadcast+0x2f4>
    80f8:	add	r0, pc, r0
    80fc:	mov	r1, #2
    8100:	sub	sp, fp, #16
    8104:	pop	{r4, r5, r6, sl, fp, lr}
    8108:	b	5770 <gen_wlanhostop>
    810c:	bne	82a8 <sf_gen_broadcast+0x2d4>
    8110:	ldr	r0, [pc, #468]	; 82ec <sf_gen_broadcast+0x318>
    8114:	ldr	r0, [pc, r0]
    8118:	cmn	r0, #1
    811c:	beq	82b4 <sf_gen_broadcast+0x2e0>
    8120:	mov	r0, #2048	; 0x800
    8124:	bl	3a60 <gen_linktype>
    8128:	mov	r5, r0
    812c:	ldr	r0, [pc, #444]	; 82f0 <sf_gen_broadcast+0x31c>
    8130:	ldr	r0, [pc, r0]
    8134:	mvn	r4, r0
    8138:	str	r4, [sp]
    813c:	mov	r0, #3
    8140:	mov	r1, #16
    8144:	mov	r2, #0
    8148:	mov	r3, #0
    814c:	bl	83b8 <gen_mcmp>
    8150:	mov	r6, r0
    8154:	str	r4, [sp]
    8158:	mov	r0, #3
    815c:	mov	r1, #16
    8160:	mov	r2, #0
    8164:	mov	r3, r4
    8168:	bl	83b8 <gen_mcmp>
    816c:	mov	r4, r0
    8170:	mov	r0, r6
    8174:	mov	r1, r4
    8178:	bl	3224 <sf_gen_or>
    817c:	mov	r0, r5
    8180:	mov	r1, r4
    8184:	bl	314c <sf_gen_and>
    8188:	mov	r0, r4
    818c:	sub	sp, fp, #16
    8190:	pop	{r4, r5, r6, sl, fp, pc}
    8194:	sub	r1, r0, #1
    8198:	cmp	r1, #9
    819c:	bhi	8204 <sf_gen_broadcast+0x230>
    81a0:	add	r0, pc, #4
    81a4:	ldr	r1, [r0, r1, lsl #2]
    81a8:	add	pc, r0, r1
    81ac:	.word	0x00000028
    81b0:	.word	0x00000060
    81b4:	.word	0x00000060
    81b8:	.word	0x00000060
    81bc:	.word	0x00000060
    81c0:	.word	0x00000084
    81c4:	.word	0x00000040
    81c8:	.word	0x00000060
    81cc:	.word	0x00000060
    81d0:	.word	0x0000006c
    81d4:	ldr	r0, [pc, #244]	; 82d0 <sf_gen_broadcast+0x2fc>
    81d8:	add	r0, pc, r0
    81dc:	mov	r1, #2
    81e0:	sub	sp, fp, #16
    81e4:	pop	{r4, r5, r6, sl, fp, lr}
    81e8:	b	551c <gen_ehostop>
    81ec:	ldr	r0, [pc, #216]	; 82cc <sf_gen_broadcast+0x2f8>
    81f0:	add	r0, pc, r0
    81f4:	mov	r1, #2
    81f8:	sub	sp, fp, #16
    81fc:	pop	{r4, r5, r6, sl, fp, lr}
    8200:	b	82f8 <gen_ahostop>
    8204:	cmp	r0, #192	; 0xc0
    8208:	beq	80f4 <sf_gen_broadcast+0x120>
    820c:	ldr	r0, [pc, #212]	; 82e8 <sf_gen_broadcast+0x314>
    8210:	add	r0, pc, r0
    8214:	bl	1f9c <sf_bpf_error>
    8218:	ldr	r0, [pc, #180]	; 82d4 <sf_gen_broadcast+0x300>
    821c:	add	r0, pc, r0
    8220:	mov	r1, #2
    8224:	sub	sp, fp, #16
    8228:	pop	{r4, r5, r6, sl, fp, lr}
    822c:	b	55f0 <gen_fhostop>
    8230:	ldr	r0, [pc, #160]	; 82d8 <sf_gen_broadcast+0x304>
    8234:	add	r0, pc, r0
    8238:	mov	r1, #2
    823c:	sub	sp, fp, #16
    8240:	pop	{r4, r5, r6, sl, fp, lr}
    8244:	b	56b0 <gen_thostop>
    8248:	ldr	r0, [pc, #140]	; 82dc <sf_gen_broadcast+0x308>
    824c:	add	r0, pc, r0
    8250:	mov	r1, #2
    8254:	sub	sp, fp, #16
    8258:	pop	{r4, r5, r6, sl, fp, lr}
    825c:	b	5cc4 <gen_ipfchostop>
    8260:	ldr	r0, [pc, #120]	; 82e0 <sf_gen_broadcast+0x30c>
    8264:	add	r0, pc, r0
    8268:	ldrb	r0, [r0]
    826c:	cmp	r0, #1
    8270:	bne	82a8 <sf_gen_broadcast+0x2d4>
    8274:	mov	r0, #1
    8278:	mov	r1, #4
    827c:	mov	r2, #8
    8280:	mov	r3, #65280	; 0xff00
    8284:	bl	450c <gen_cmp>
    8288:	mov	r5, r0
    828c:	bl	3278 <sf_gen_not>
    8290:	ldr	r0, [pc, #76]	; 82e4 <sf_gen_broadcast+0x310>
    8294:	add	r0, pc, r0
    8298:	mov	r1, #2
    829c:	bl	551c <gen_ehostop>
    82a0:	mov	r4, r0
    82a4:	b	817c <sf_gen_broadcast+0x1a8>
    82a8:	ldr	r0, [pc, #16]	; 82c0 <sf_gen_broadcast+0x2ec>
    82ac:	add	r0, pc, r0
    82b0:	bl	1f9c <sf_bpf_error>
    82b4:	ldr	r0, [pc, #56]	; 82f4 <sf_gen_broadcast+0x320>
    82b8:	add	r0, pc, r0
    82bc:	bl	1f9c <sf_bpf_error>
    82c0:	.word	0x0000a5ce
    82c4:	.word	0x000285b4
    82c8:	.word	0x00028144
    82cc:	.word	0x000283c4
    82d0:	.word	0x00028064
    82d4:	.word	0x00028020
    82d8:	.word	0x00028008
    82dc:	.word	0x00027ff0
    82e0:	.word	0x00028340
    82e4:	.word	0x00027fa8
    82e8:	.word	0x0000a622
    82ec:	.word	0x00028484
    82f0:	.word	0x00028468
    82f4:	.word	0x0000a58f

000082f8 <gen_ahostop>:
    82f8:	push	{r4, r5, fp, lr}
    82fc:	add	fp, sp, #8
    8300:	cmp	r1, #4
    8304:	bhi	83b4 <gen_ahostop+0xbc>
    8308:	mov	r2, r1
    830c:	mov	r4, r0
    8310:	mov	r1, #0
    8314:	add	r0, pc, #4
    8318:	ldr	r2, [r0, r2, lsl #2]
    831c:	add	pc, r0, r2
    8320:	.word	0x00000014
    8324:	.word	0x00000080
    8328:	.word	0x0000007c
    832c:	.word	0x00000014
    8330:	.word	0x00000048
    8334:	mov	r0, r4
    8338:	mov	r1, #1
    833c:	bl	82f8 <gen_ahostop>
    8340:	mov	r5, r0
    8344:	mov	r0, r4
    8348:	mov	r1, #2
    834c:	bl	82f8 <gen_ahostop>
    8350:	mov	r4, r0
    8354:	mov	r0, r5
    8358:	mov	r1, r4
    835c:	bl	3224 <sf_gen_or>
    8360:	mov	r0, r4
    8364:	pop	{r4, r5, fp, pc}
    8368:	mov	r0, r4
    836c:	mov	r1, #1
    8370:	bl	82f8 <gen_ahostop>
    8374:	mov	r5, r0
    8378:	mov	r0, r4
    837c:	mov	r1, #2
    8380:	bl	82f8 <gen_ahostop>
    8384:	mov	r4, r0
    8388:	mov	r0, r5
    838c:	mov	r1, r4
    8390:	bl	314c <sf_gen_and>
    8394:	mov	r0, r4
    8398:	pop	{r4, r5, fp, pc}
    839c:	mov	r1, #1
    83a0:	mov	r0, #1
    83a4:	mov	r2, #1
    83a8:	mov	r3, r4
    83ac:	pop	{r4, r5, fp, lr}
    83b0:	b	aaf0 <gen_bcmp>
    83b4:	bl	fc4 <abort@plt>

000083b8 <gen_mcmp>:
    83b8:	push	{fp, lr}
    83bc:	mov	fp, sp
    83c0:	sub	sp, sp, #16
    83c4:	mov	ip, #0
    83c8:	mov	lr, #16
    83cc:	str	lr, [sp]
    83d0:	str	ip, [sp, #4]
    83d4:	str	r3, [sp, #8]
    83d8:	ldr	r3, [fp, #8]
    83dc:	bl	93e8 <gen_ncmp>
    83e0:	mov	sp, fp
    83e4:	pop	{fp, pc}

000083e8 <sf_gen_multicast>:
    83e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    83ec:	add	fp, sp, #24
    83f0:	cmp	r0, #2
    83f4:	bcc	8428 <sf_gen_multicast+0x40>
    83f8:	beq	8574 <sf_gen_multicast+0x18c>
    83fc:	cmp	r0, #17
    8400:	bne	8778 <sf_gen_multicast+0x390>
    8404:	movw	r0, #34525	; 0x86dd
    8408:	bl	3a60 <gen_linktype>
    840c:	mov	r5, r0
    8410:	mov	r0, #3
    8414:	mov	r1, #24
    8418:	mov	r2, #16
    841c:	mov	r3, #255	; 0xff
    8420:	bl	450c <gen_cmp>
    8424:	b	8594 <sf_gen_multicast+0x1ac>
    8428:	ldr	r0, [pc, #852]	; 8784 <sf_gen_multicast+0x39c>
    842c:	ldr	r0, [pc, r0]
    8430:	sub	r1, r0, #105	; 0x69
    8434:	cmp	r1, #58	; 0x3a
    8438:	bhi	85a0 <sf_gen_multicast+0x1b8>
    843c:	add	r0, pc, #4
    8440:	ldr	r1, [r0, r1, lsl #2]
    8444:	add	pc, r0, r1
    8448:	.word	0x000001cc
    844c:	.word	0x00000330
    8450:	.word	0x00000330
    8454:	.word	0x00000330
    8458:	.word	0x00000330
    845c:	.word	0x00000330
    8460:	.word	0x00000330
    8464:	.word	0x00000330
    8468:	.word	0x00000330
    846c:	.word	0x00000330
    8470:	.word	0x00000330
    8474:	.word	0x00000330
    8478:	.word	0x00000330
    847c:	.word	0x00000330
    8480:	.word	0x000001cc
    8484:	.word	0x00000330
    8488:	.word	0x00000330
    848c:	.word	0x000001a4
    8490:	.word	0x000000ec
    8494:	.word	0x00000330
    8498:	.word	0x00000330
    849c:	.word	0x00000330
    84a0:	.word	0x000001cc
    84a4:	.word	0x00000330
    84a8:	.word	0x000001b0
    84ac:	.word	0x00000330
    84b0:	.word	0x00000330
    84b4:	.word	0x00000330
    84b8:	.word	0x00000330
    84bc:	.word	0x00000330
    84c0:	.word	0x00000330
    84c4:	.word	0x00000330
    84c8:	.word	0x00000330
    84cc:	.word	0x00000330
    84d0:	.word	0x00000330
    84d4:	.word	0x00000330
    84d8:	.word	0x00000330
    84dc:	.word	0x00000330
    84e0:	.word	0x00000330
    84e4:	.word	0x00000330
    84e8:	.word	0x00000330
    84ec:	.word	0x00000330
    84f0:	.word	0x00000330
    84f4:	.word	0x00000330
    84f8:	.word	0x00000330
    84fc:	.word	0x00000330
    8500:	.word	0x00000330
    8504:	.word	0x00000330
    8508:	.word	0x00000330
    850c:	.word	0x00000330
    8510:	.word	0x00000330
    8514:	.word	0x00000330
    8518:	.word	0x00000330
    851c:	.word	0x00000330
    8520:	.word	0x00000330
    8524:	.word	0x00000330
    8528:	.word	0x00000330
    852c:	.word	0x00000330
    8530:	.word	0x000001cc
    8534:	ldr	r0, [pc, #592]	; 878c <sf_gen_multicast+0x3a4>
    8538:	add	r0, pc, r0
    853c:	ldrb	r0, [r0]
    8540:	cmp	r0, #1
    8544:	bne	8778 <sf_gen_multicast+0x390>
    8548:	mov	r0, #1
    854c:	mov	r1, #4
    8550:	mov	r2, #8
    8554:	mov	r3, #65280	; 0xff00
    8558:	bl	450c <gen_cmp>
    855c:	mov	r5, r0
    8560:	bl	3278 <sf_gen_not>
    8564:	ldr	r0, [pc, #548]	; 8790 <sf_gen_multicast+0x3a8>
    8568:	ldr	r0, [pc, r0]
    856c:	bl	8798 <gen_mac_multicast>
    8570:	b	8594 <sf_gen_multicast+0x1ac>
    8574:	mov	r0, #2048	; 0x800
    8578:	bl	3a60 <gen_linktype>
    857c:	mov	r5, r0
    8580:	mov	r0, #3
    8584:	mov	r1, #16
    8588:	mov	r2, #16
    858c:	mov	r3, #224	; 0xe0
    8590:	bl	88c8 <gen_cmp_ge>
    8594:	mov	r4, r0
    8598:	mov	r0, r5
    859c:	b	875c <sf_gen_multicast+0x374>
    85a0:	sub	r1, r0, #1
    85a4:	cmp	r1, #9
    85a8:	bhi	860c <sf_gen_multicast+0x224>
    85ac:	add	r0, pc, #4
    85b0:	ldr	r1, [r0, r1, lsl #2]
    85b4:	add	pc, r0, r1
    85b8:	.word	0x00000028
    85bc:	.word	0x000001c0
    85c0:	.word	0x000001c0
    85c4:	.word	0x000001c0
    85c8:	.word	0x000001c0
    85cc:	.word	0x00000034
    85d0:	.word	0x00000040
    85d4:	.word	0x000001c0
    85d8:	.word	0x000001c0
    85dc:	.word	0x000001b4
    85e0:	mov	r0, #0
    85e4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    85e8:	b	8798 <gen_mac_multicast>
    85ec:	mov	r0, #2
    85f0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    85f4:	b	8798 <gen_mac_multicast>
    85f8:	ldr	r0, [pc, #392]	; 8788 <sf_gen_multicast+0x3a0>
    85fc:	add	r0, pc, r0
    8600:	mov	r1, #2
    8604:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    8608:	b	82f8 <gen_ahostop>
    860c:	cmp	r0, #192	; 0xc0
    8610:	bne	8778 <sf_gen_multicast+0x390>
    8614:	mov	r7, #1
    8618:	mov	r0, #1
    861c:	mov	r1, #1
    8620:	mov	r2, #16
    8624:	bl	87cc <gen_load_a>
    8628:	mov	r4, r0
    862c:	mov	r0, #69	; 0x45
    8630:	bl	7c58 <new_block>
    8634:	mov	r5, r0
    8638:	str	r7, [r0, #20]
    863c:	str	r4, [r0, #4]
    8640:	mov	r0, #16
    8644:	bl	8798 <gen_mac_multicast>
    8648:	mov	r4, r0
    864c:	mov	r0, r5
    8650:	mov	r1, r4
    8654:	bl	314c <sf_gen_and>
    8658:	mov	r0, #1
    865c:	mov	r1, #1
    8660:	mov	r2, #16
    8664:	bl	87cc <gen_load_a>
    8668:	mov	r5, r0
    866c:	mov	r0, #69	; 0x45
    8670:	bl	7c58 <new_block>
    8674:	mov	r6, r0
    8678:	str	r7, [r0, #20]
    867c:	str	r5, [r0, #4]
    8680:	bl	3278 <sf_gen_not>
    8684:	mov	r8, #4
    8688:	mov	r0, #4
    868c:	bl	8798 <gen_mac_multicast>
    8690:	mov	r5, r0
    8694:	mov	r0, r6
    8698:	mov	r1, r5
    869c:	bl	314c <sf_gen_and>
    86a0:	mov	r0, r5
    86a4:	mov	r1, r4
    86a8:	bl	3224 <sf_gen_or>
    86ac:	mov	r0, #1
    86b0:	mov	r1, #0
    86b4:	mov	r2, #16
    86b8:	bl	87cc <gen_load_a>
    86bc:	mov	r5, r0
    86c0:	mov	r0, #69	; 0x45
    86c4:	bl	7c58 <new_block>
    86c8:	str	r5, [r0, #4]
    86cc:	mov	r7, #8
    86d0:	str	r7, [r0, #20]
    86d4:	mov	r1, r4
    86d8:	bl	314c <sf_gen_and>
    86dc:	mov	r0, #1
    86e0:	mov	r1, #0
    86e4:	mov	r2, #16
    86e8:	bl	87cc <gen_load_a>
    86ec:	mov	r5, r0
    86f0:	mov	r0, #69	; 0x45
    86f4:	bl	7c58 <new_block>
    86f8:	mov	r6, r0
    86fc:	str	r7, [r0, #20]
    8700:	str	r5, [r0, #4]
    8704:	bl	3278 <sf_gen_not>
    8708:	mov	r0, #4
    870c:	bl	8798 <gen_mac_multicast>
    8710:	mov	r5, r0
    8714:	mov	r0, r6
    8718:	mov	r1, r5
    871c:	bl	314c <sf_gen_and>
    8720:	mov	r0, r5
    8724:	mov	r1, r4
    8728:	bl	3224 <sf_gen_or>
    872c:	mov	r0, #1
    8730:	mov	r1, #0
    8734:	mov	r2, #16
    8738:	bl	87cc <gen_load_a>
    873c:	mov	r5, r0
    8740:	mov	r0, #69	; 0x45
    8744:	bl	7c58 <new_block>
    8748:	mov	r6, r0
    874c:	str	r8, [r0, #20]
    8750:	str	r5, [r0, #4]
    8754:	bl	3278 <sf_gen_not>
    8758:	mov	r0, r6
    875c:	mov	r1, r4
    8760:	bl	314c <sf_gen_and>
    8764:	mov	r0, r4
    8768:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    876c:	mov	r0, #1
    8770:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    8774:	b	8798 <gen_mac_multicast>
    8778:	ldr	r0, [pc, #20]	; 8794 <sf_gen_multicast+0x3ac>
    877c:	add	r0, pc, r0
    8780:	bl	1f9c <sf_bpf_error>
    8784:	.word	0x00028174
    8788:	.word	0x00027fb8
    878c:	.word	0x0002806c
    8790:	.word	0x00028050
    8794:	.word	0x0000a12d

00008798 <gen_mac_multicast>:
    8798:	push	{r4, r5, fp, lr}
    879c:	add	fp, sp, #8
    87a0:	mov	r1, r0
    87a4:	mov	r5, #1
    87a8:	mov	r0, #1
    87ac:	mov	r2, #16
    87b0:	bl	87cc <gen_load_a>
    87b4:	mov	r4, r0
    87b8:	mov	r0, #69	; 0x45
    87bc:	bl	7c58 <new_block>
    87c0:	str	r5, [r0, #20]
    87c4:	str	r4, [r0, #4]
    87c8:	pop	{r4, r5, fp, pc}

000087cc <gen_load_a>:
    87cc:	push	{r4, r5, r6, sl, fp, lr}
    87d0:	add	fp, sp, #16
    87d4:	cmp	r0, #6
    87d8:	bhi	88b0 <gen_load_a+0xe4>
    87dc:	mov	r5, r2
    87e0:	mov	r4, r1
    87e4:	add	r1, pc, #4
    87e8:	ldr	r0, [r1, r0, lsl #2]
    87ec:	add	pc, r1, r0
    87f0:	.word	0x0000001c
    87f4:	.word	0x00000054
    87f8:	.word	0x0000003c
    87fc:	.word	0x00000044
    8800:	.word	0x0000002c
    8804:	.word	0x00000064
    8808:	.word	0x000000a4
    880c:	orr	r0, r5, #32
    8810:	bl	7988 <new_stmt>
    8814:	str	r4, [r0, #12]
    8818:	pop	{r4, r5, r6, sl, fp, pc}
    881c:	ldr	r0, [pc, #148]	; 88b8 <gen_load_a+0xec>
    8820:	ldr	r0, [pc, r0]
    8824:	add	r0, r0, r4
    8828:	b	88a4 <gen_load_a+0xd8>
    882c:	mov	r0, r4
    8830:	b	88a4 <gen_load_a+0xd8>
    8834:	ldr	r0, [pc, #120]	; 88b4 <gen_load_a+0xe8>
    8838:	ldr	r0, [pc, r0]
    883c:	add	r0, r0, r4
    8840:	b	88a4 <gen_load_a+0xd8>
    8844:	mov	r0, r4
    8848:	mov	r1, r5
    884c:	pop	{r4, r5, r6, sl, fp, lr}
    8850:	b	b32c <gen_load_llrel>
    8854:	bl	7a7c <gen_loadx_iphdrlen>
    8858:	mov	r6, r0
    885c:	orr	r0, r5, #64	; 0x40
    8860:	bl	7988 <new_stmt>
    8864:	mov	r1, r0
    8868:	ldr	r0, [pc, #76]	; 88bc <gen_load_a+0xf0>
    886c:	ldr	r0, [pc, r0]
    8870:	add	r0, r0, r4
    8874:	ldr	r2, [pc, #68]	; 88c0 <gen_load_a+0xf4>
    8878:	ldr	r2, [pc, r2]
    887c:	add	r0, r0, r2
    8880:	str	r0, [r1, #12]
    8884:	mov	r0, r6
    8888:	bl	750c <sf_append>
    888c:	mov	r0, r6
    8890:	pop	{r4, r5, r6, sl, fp, pc}
    8894:	ldr	r0, [pc, #40]	; 88c4 <gen_load_a+0xf8>
    8898:	ldr	r0, [pc, r0]
    889c:	add	r0, r4, r0
    88a0:	add	r0, r0, #40	; 0x28
    88a4:	mov	r1, r5
    88a8:	pop	{r4, r5, r6, sl, fp, lr}
    88ac:	b	b37c <gen_load_macplrel>
    88b0:	bl	fc4 <abort@plt>
    88b4:	.word	0x00027d78
    88b8:	.word	0x00027d9c
    88bc:	.word	0x00027d40
    88c0:	.word	0x00027d38
    88c4:	.word	0x00027d18

000088c8 <gen_cmp_ge>:
    88c8:	push	{fp, lr}
    88cc:	mov	fp, sp
    88d0:	sub	sp, sp, #16
    88d4:	mov	ip, #0
    88d8:	mov	lr, #48	; 0x30
    88dc:	str	lr, [sp]
    88e0:	str	ip, [sp, #4]
    88e4:	str	r3, [sp, #8]
    88e8:	mvn	r3, #0
    88ec:	bl	93e8 <gen_ncmp>
    88f0:	mov	sp, fp
    88f4:	pop	{fp, pc}

000088f8 <sf_gen_inbound>:
    88f8:	push	{r4, r5, fp, lr}
    88fc:	add	fp, sp, #8
    8900:	sub	sp, sp, #8
    8904:	mov	r4, r0
    8908:	ldr	r1, [pc, #1120]	; 8d70 <sf_gen_inbound+0x478>
    890c:	ldr	r1, [pc, r1]
    8910:	sub	r0, r1, #8
    8914:	cmp	r0, #218	; 0xda
    8918:	bhi	8d64 <sf_gen_inbound+0x46c>
    891c:	add	r2, pc, #4
    8920:	ldr	r0, [r2, r0, lsl #2]
    8924:	add	pc, r2, r0
    8928:	.word	0x00000398
    892c:	.word	0x0000043c
    8930:	.word	0x0000043c
    8934:	.word	0x0000043c
    8938:	.word	0x0000043c
    893c:	.word	0x0000043c
    8940:	.word	0x0000043c
    8944:	.word	0x0000043c
    8948:	.word	0x0000043c
    894c:	.word	0x0000043c
    8950:	.word	0x0000043c
    8954:	.word	0x0000043c
    8958:	.word	0x0000043c
    895c:	.word	0x0000043c
    8960:	.word	0x0000043c
    8964:	.word	0x0000043c
    8968:	.word	0x0000043c
    896c:	.word	0x0000043c
    8970:	.word	0x0000043c
    8974:	.word	0x0000043c
    8978:	.word	0x0000043c
    897c:	.word	0x0000043c
    8980:	.word	0x0000043c
    8984:	.word	0x0000043c
    8988:	.word	0x0000043c
    898c:	.word	0x0000043c
    8990:	.word	0x0000043c
    8994:	.word	0x0000043c
    8998:	.word	0x0000043c
    899c:	.word	0x0000043c
    89a0:	.word	0x0000043c
    89a4:	.word	0x0000043c
    89a8:	.word	0x0000043c
    89ac:	.word	0x0000043c
    89b0:	.word	0x0000043c
    89b4:	.word	0x0000043c
    89b8:	.word	0x0000043c
    89bc:	.word	0x0000043c
    89c0:	.word	0x0000043c
    89c4:	.word	0x0000043c
    89c8:	.word	0x0000043c
    89cc:	.word	0x0000043c
    89d0:	.word	0x0000043c
    89d4:	.word	0x0000043c
    89d8:	.word	0x0000043c
    89dc:	.word	0x0000043c
    89e0:	.word	0x0000043c
    89e4:	.word	0x0000043c
    89e8:	.word	0x0000043c
    89ec:	.word	0x0000043c
    89f0:	.word	0x0000043c
    89f4:	.word	0x0000043c
    89f8:	.word	0x0000043c
    89fc:	.word	0x0000043c
    8a00:	.word	0x0000043c
    8a04:	.word	0x0000043c
    8a08:	.word	0x0000043c
    8a0c:	.word	0x0000043c
    8a10:	.word	0x0000043c
    8a14:	.word	0x0000043c
    8a18:	.word	0x0000043c
    8a1c:	.word	0x0000043c
    8a20:	.word	0x0000043c
    8a24:	.word	0x0000043c
    8a28:	.word	0x0000043c
    8a2c:	.word	0x0000043c
    8a30:	.word	0x0000043c
    8a34:	.word	0x0000043c
    8a38:	.word	0x0000043c
    8a3c:	.word	0x0000043c
    8a40:	.word	0x0000043c
    8a44:	.word	0x0000043c
    8a48:	.word	0x0000043c
    8a4c:	.word	0x0000043c
    8a50:	.word	0x0000043c
    8a54:	.word	0x0000043c
    8a58:	.word	0x0000043c
    8a5c:	.word	0x0000043c
    8a60:	.word	0x0000043c
    8a64:	.word	0x0000043c
    8a68:	.word	0x0000043c
    8a6c:	.word	0x0000043c
    8a70:	.word	0x0000043c
    8a74:	.word	0x0000043c
    8a78:	.word	0x0000043c
    8a7c:	.word	0x0000043c
    8a80:	.word	0x0000043c
    8a84:	.word	0x0000043c
    8a88:	.word	0x0000043c
    8a8c:	.word	0x0000043c
    8a90:	.word	0x0000043c
    8a94:	.word	0x0000043c
    8a98:	.word	0x0000043c
    8a9c:	.word	0x0000043c
    8aa0:	.word	0x0000043c
    8aa4:	.word	0x0000043c
    8aa8:	.word	0x0000043c
    8aac:	.word	0x0000043c
    8ab0:	.word	0x0000043c
    8ab4:	.word	0x0000043c
    8ab8:	.word	0x0000043c
    8abc:	.word	0x0000043c
    8ac0:	.word	0x0000043c
    8ac4:	.word	0x0000043c
    8ac8:	.word	0x0000043c
    8acc:	.word	0x000003d8
    8ad0:	.word	0x0000043c
    8ad4:	.word	0x0000043c
    8ad8:	.word	0x0000043c
    8adc:	.word	0x0000043c
    8ae0:	.word	0x0000043c
    8ae4:	.word	0x0000043c
    8ae8:	.word	0x0000043c
    8aec:	.word	0x0000043c
    8af0:	.word	0x0000043c
    8af4:	.word	0x0000043c
    8af8:	.word	0x0000043c
    8afc:	.word	0x0000043c
    8b00:	.word	0x0000043c
    8b04:	.word	0x0000043c
    8b08:	.word	0x0000043c
    8b0c:	.word	0x0000043c
    8b10:	.word	0x0000036c
    8b14:	.word	0x0000036c
    8b18:	.word	0x0000036c
    8b1c:	.word	0x0000036c
    8b20:	.word	0x0000036c
    8b24:	.word	0x0000036c
    8b28:	.word	0x0000036c
    8b2c:	.word	0x0000036c
    8b30:	.word	0x0000043c
    8b34:	.word	0x0000043c
    8b38:	.word	0x0000043c
    8b3c:	.word	0x0000043c
    8b40:	.word	0x0000043c
    8b44:	.word	0x0000043c
    8b48:	.word	0x0000043c
    8b4c:	.word	0x0000043c
    8b50:	.word	0x0000043c
    8b54:	.word	0x0000043c
    8b58:	.word	0x0000043c
    8b5c:	.word	0x0000043c
    8b60:	.word	0x0000043c
    8b64:	.word	0x0000043c
    8b68:	.word	0x0000043c
    8b6c:	.word	0x0000043c
    8b70:	.word	0x0000043c
    8b74:	.word	0x0000043c
    8b78:	.word	0x0000043c
    8b7c:	.word	0x0000043c
    8b80:	.word	0x0000043c
    8b84:	.word	0x0000043c
    8b88:	.word	0x0000043c
    8b8c:	.word	0x0000043c
    8b90:	.word	0x0000043c
    8b94:	.word	0x0000043c
    8b98:	.word	0x0000036c
    8b9c:	.word	0x0000043c
    8ba0:	.word	0x000003f4
    8ba4:	.word	0x0000036c
    8ba8:	.word	0x0000036c
    8bac:	.word	0x0000043c
    8bb0:	.word	0x0000043c
    8bb4:	.word	0x0000043c
    8bb8:	.word	0x0000043c
    8bbc:	.word	0x0000043c
    8bc0:	.word	0x0000043c
    8bc4:	.word	0x0000043c
    8bc8:	.word	0x0000043c
    8bcc:	.word	0x0000043c
    8bd0:	.word	0x0000036c
    8bd4:	.word	0x0000036c
    8bd8:	.word	0x0000036c
    8bdc:	.word	0x0000036c
    8be0:	.word	0x0000043c
    8be4:	.word	0x0000036c
    8be8:	.word	0x0000043c
    8bec:	.word	0x0000043c
    8bf0:	.word	0x0000043c
    8bf4:	.word	0x0000043c
    8bf8:	.word	0x0000043c
    8bfc:	.word	0x0000043c
    8c00:	.word	0x0000043c
    8c04:	.word	0x0000043c
    8c08:	.word	0x0000043c
    8c0c:	.word	0x0000043c
    8c10:	.word	0x0000036c
    8c14:	.word	0x0000043c
    8c18:	.word	0x0000043c
    8c1c:	.word	0x0000043c
    8c20:	.word	0x0000043c
    8c24:	.word	0x0000043c
    8c28:	.word	0x0000036c
    8c2c:	.word	0x0000043c
    8c30:	.word	0x0000043c
    8c34:	.word	0x0000043c
    8c38:	.word	0x0000043c
    8c3c:	.word	0x0000043c
    8c40:	.word	0x0000043c
    8c44:	.word	0x0000043c
    8c48:	.word	0x0000043c
    8c4c:	.word	0x0000043c
    8c50:	.word	0x0000043c
    8c54:	.word	0x0000043c
    8c58:	.word	0x0000043c
    8c5c:	.word	0x0000043c
    8c60:	.word	0x0000043c
    8c64:	.word	0x0000043c
    8c68:	.word	0x0000043c
    8c6c:	.word	0x0000043c
    8c70:	.word	0x0000043c
    8c74:	.word	0x0000043c
    8c78:	.word	0x0000043c
    8c7c:	.word	0x0000043c
    8c80:	.word	0x0000043c
    8c84:	.word	0x0000043c
    8c88:	.word	0x0000043c
    8c8c:	.word	0x0000043c
    8c90:	.word	0x00000410
    8c94:	mov	r0, #1
    8c98:	cmp	r4, #0
    8c9c:	str	r0, [sp]
    8ca0:	mov	r0, #1
    8ca4:	mov	r1, #3
    8ca8:	mov	r2, #16
    8cac:	movne	r3, #0
    8cb0:	moveq	r3, #1
    8cb4:	bl	83b8 <gen_mcmp>
    8cb8:	sub	sp, fp, #8
    8cbc:	pop	{r4, r5, fp, pc}
    8cc0:	mov	r0, #0
    8cc4:	bl	7cc0 <sf_gen_loadi>
    8cc8:	mov	r1, r0
    8ccc:	mov	r0, #1
    8cd0:	mov	r2, #1
    8cd4:	bl	7524 <sf_gen_load>
    8cd8:	mov	r5, r0
    8cdc:	mov	r0, #0
    8ce0:	bl	7cc0 <sf_gen_loadi>
    8ce4:	mov	r2, r0
    8ce8:	mov	r0, #16
    8cec:	mov	r1, r5
    8cf0:	mov	r3, r4
    8cf4:	sub	sp, fp, #8
    8cf8:	pop	{r4, r5, fp, lr}
    8cfc:	b	7b54 <sf_gen_relation>
    8d00:	mov	r0, #1
    8d04:	mov	r1, #0
    8d08:	mov	r2, #8
    8d0c:	cmp	r4, #0
    8d10:	beq	8d30 <sf_gen_inbound+0x438>
    8d14:	mov	r3, #4
    8d18:	b	8d58 <sf_gen_inbound+0x460>
    8d1c:	mov	r0, #1
    8d20:	mov	r1, #0
    8d24:	mov	r2, #16
    8d28:	cmp	r4, #0
    8d2c:	bne	8d4c <sf_gen_inbound+0x454>
    8d30:	mov	r3, #0
    8d34:	b	8d58 <sf_gen_inbound+0x460>
    8d38:	mov	r0, #1
    8d3c:	mov	r1, #2
    8d40:	mov	r2, #8
    8d44:	cmp	r4, #0
    8d48:	beq	8d54 <sf_gen_inbound+0x45c>
    8d4c:	mov	r3, #1
    8d50:	b	8d58 <sf_gen_inbound+0x460>
    8d54:	mov	r3, #2
    8d58:	sub	sp, fp, #8
    8d5c:	pop	{r4, r5, fp, lr}
    8d60:	b	450c <gen_cmp>
    8d64:	ldr	r0, [pc, #8]	; 8d74 <sf_gen_inbound+0x47c>
    8d68:	add	r0, pc, r0
    8d6c:	bl	1f9c <sf_bpf_error>
    8d70:	.word	0x00027c94
    8d74:	.word	0x00009bae

00008d78 <sf_gen_pf_ifname>:
    8d78:	push	{fp, lr}
    8d7c:	mov	fp, sp
    8d80:	ldr	r0, [pc, #4]	; 8d8c <sf_gen_pf_ifname+0x14>
    8d84:	add	r0, pc, r0
    8d88:	bl	1f9c <sf_bpf_error>
    8d8c:	.word	0x00009bc0

00008d90 <sf_gen_pf_ruleset>:
    8d90:	push	{fp, lr}
    8d94:	mov	fp, sp
    8d98:	ldr	r0, [pc, #4]	; 8da4 <sf_gen_pf_ruleset+0x14>
    8d9c:	add	r0, pc, r0
    8da0:	bl	1f9c <sf_bpf_error>
    8da4:	.word	0x00009bd0

00008da8 <sf_gen_pf_rnr>:
    8da8:	push	{fp, lr}
    8dac:	mov	fp, sp
    8db0:	ldr	r0, [pc, #4]	; 8dbc <sf_gen_pf_rnr+0x14>
    8db4:	add	r0, pc, r0
    8db8:	bl	1f9c <sf_bpf_error>
    8dbc:	.word	0x00009bb8

00008dc0 <sf_gen_pf_srnr>:
    8dc0:	push	{fp, lr}
    8dc4:	mov	fp, sp
    8dc8:	ldr	r0, [pc, #4]	; 8dd4 <sf_gen_pf_srnr+0x14>
    8dcc:	add	r0, pc, r0
    8dd0:	bl	1f9c <sf_bpf_error>
    8dd4:	.word	0x00009ba0

00008dd8 <sf_gen_pf_reason>:
    8dd8:	push	{fp, lr}
    8ddc:	mov	fp, sp
    8de0:	ldr	r0, [pc, #4]	; 8dec <sf_gen_pf_reason+0x14>
    8de4:	add	r0, pc, r0
    8de8:	bl	1f9c <sf_bpf_error>
    8dec:	.word	0x00009b88

00008df0 <sf_gen_pf_action>:
    8df0:	push	{fp, lr}
    8df4:	mov	fp, sp
    8df8:	ldr	r0, [pc, #4]	; 8e04 <sf_gen_pf_action+0x14>
    8dfc:	add	r0, pc, r0
    8e00:	bl	1f9c <sf_bpf_error>
    8e04:	.word	0x00009b70

00008e08 <sf_gen_p80211_type>:
    8e08:	push	{fp, lr}
    8e0c:	mov	fp, sp
    8e10:	sub	sp, sp, #8
    8e14:	mov	lr, r0
    8e18:	ldr	r0, [pc, #84]	; 8e74 <sf_gen_p80211_type+0x6c>
    8e1c:	ldr	r0, [pc, r0]
    8e20:	sub	r2, r0, #105	; 0x69
    8e24:	cmp	r2, #22
    8e28:	bhi	8e40 <sf_gen_p80211_type+0x38>
    8e2c:	mov	ip, #1
    8e30:	movw	r3, #16385	; 0x4001
    8e34:	movt	r3, #64	; 0x40
    8e38:	tst	r3, ip, lsl r2
    8e3c:	bne	8e48 <sf_gen_p80211_type+0x40>
    8e40:	cmp	r0, #163	; 0xa3
    8e44:	bne	8e68 <sf_gen_p80211_type+0x60>
    8e48:	str	r1, [sp]
    8e4c:	mov	r0, #1
    8e50:	mov	r1, #0
    8e54:	mov	r2, #16
    8e58:	mov	r3, lr
    8e5c:	bl	83b8 <gen_mcmp>
    8e60:	mov	sp, fp
    8e64:	pop	{fp, pc}
    8e68:	ldr	r0, [pc, #8]	; 8e78 <sf_gen_p80211_type+0x70>
    8e6c:	add	r0, pc, r0
    8e70:	bl	1f9c <sf_bpf_error>
    8e74:	.word	0x00027784
    8e78:	.word	0x00009b35

00008e7c <sf_gen_p80211_fcdir>:
    8e7c:	push	{fp, lr}
    8e80:	mov	fp, sp
    8e84:	sub	sp, sp, #8
    8e88:	mov	r3, r0
    8e8c:	ldr	r0, [pc, #84]	; 8ee8 <sf_gen_p80211_fcdir+0x6c>
    8e90:	ldr	r0, [pc, r0]
    8e94:	sub	r1, r0, #105	; 0x69
    8e98:	cmp	r1, #22
    8e9c:	bhi	8eb4 <sf_gen_p80211_fcdir+0x38>
    8ea0:	mov	ip, #1
    8ea4:	movw	r2, #16385	; 0x4001
    8ea8:	movt	r2, #64	; 0x40
    8eac:	tst	r2, ip, lsl r1
    8eb0:	bne	8ebc <sf_gen_p80211_fcdir+0x40>
    8eb4:	cmp	r0, #163	; 0xa3
    8eb8:	bne	8edc <sf_gen_p80211_fcdir+0x60>
    8ebc:	mov	r0, #3
    8ec0:	str	r0, [sp]
    8ec4:	mov	r0, #1
    8ec8:	mov	r1, #1
    8ecc:	mov	r2, #16
    8ed0:	bl	83b8 <gen_mcmp>
    8ed4:	mov	sp, fp
    8ed8:	pop	{fp, pc}
    8edc:	ldr	r0, [pc, #8]	; 8eec <sf_gen_p80211_fcdir+0x70>
    8ee0:	add	r0, pc, r0
    8ee4:	bl	1f9c <sf_bpf_error>
    8ee8:	.word	0x00027710
    8eec:	.word	0x00009af2

00008ef0 <sf_gen_acode>:
    8ef0:	push	{fp, lr}
    8ef4:	mov	fp, sp
    8ef8:	ldr	r2, [pc, #68]	; 8f44 <sf_gen_acode+0x54>
    8efc:	ldr	r2, [pc, r2]
    8f00:	cmp	r2, #129	; 0x81
    8f04:	cmpne	r2, #7
    8f08:	bne	8f2c <sf_gen_acode+0x3c>
    8f0c:	movw	r2, #65534	; 0xfffe
    8f10:	and	r2, r1, r2
    8f14:	cmp	r2, #256	; 0x100
    8f18:	bne	8f38 <sf_gen_acode+0x48>
    8f1c:	lsr	r1, r1, #16
    8f20:	uxtb	r1, r1
    8f24:	pop	{fp, lr}
    8f28:	b	82f8 <gen_ahostop>
    8f2c:	ldr	r0, [pc, #24]	; 8f4c <sf_gen_acode+0x5c>
    8f30:	add	r0, pc, r0
    8f34:	bl	1f9c <sf_bpf_error>
    8f38:	ldr	r0, [pc, #8]	; 8f48 <sf_gen_acode+0x58>
    8f3c:	add	r0, pc, r0
    8f40:	bl	1f9c <sf_bpf_error>
    8f44:	.word	0x000276a4
    8f48:	.word	0x00009ac9
    8f4c:	.word	0x00009aff

00008f50 <sf_gen_vlan>:
    8f50:	push	{r4, r5, fp, lr}
    8f54:	add	fp, sp, #8
    8f58:	sub	sp, sp, #8
    8f5c:	mov	r4, r0
    8f60:	ldr	r0, [pc, #216]	; 9040 <sf_gen_vlan+0xf0>
    8f64:	ldr	r0, [pc, r0]
    8f68:	cmp	r0, #0
    8f6c:	bne	9028 <sf_gen_vlan+0xd8>
    8f70:	ldr	r0, [pc, #204]	; 9044 <sf_gen_vlan+0xf4>
    8f74:	ldr	r0, [pc, r0]
    8f78:	ldr	r1, [pc, #200]	; 9048 <sf_gen_vlan+0xf8>
    8f7c:	add	r1, pc, r1
    8f80:	str	r0, [r1]
    8f84:	ldr	r1, [pc, #192]	; 904c <sf_gen_vlan+0xfc>
    8f88:	ldr	r1, [pc, r1]
    8f8c:	cmp	r1, #1
    8f90:	bne	9034 <sf_gen_vlan+0xe4>
    8f94:	ldr	r1, [pc, #180]	; 9050 <sf_gen_vlan+0x100>
    8f98:	ldr	r1, [pc, r1]
    8f9c:	mov	r0, #1
    8fa0:	mov	r2, #8
    8fa4:	mov	r3, #33024	; 0x8100
    8fa8:	bl	450c <gen_cmp>
    8fac:	mov	r5, r0
    8fb0:	cmp	r4, #0
    8fb4:	blt	8fe8 <sf_gen_vlan+0x98>
    8fb8:	movw	r0, #4095	; 0xfff
    8fbc:	str	r0, [sp]
    8fc0:	mov	r0, #2
    8fc4:	mov	r1, #0
    8fc8:	mov	r2, #8
    8fcc:	mov	r3, r4
    8fd0:	bl	83b8 <gen_mcmp>
    8fd4:	mov	r4, r0
    8fd8:	mov	r0, r5
    8fdc:	mov	r1, r4
    8fe0:	bl	314c <sf_gen_and>
    8fe4:	b	8fec <sf_gen_vlan+0x9c>
    8fe8:	mov	r4, r5
    8fec:	ldr	r0, [pc, #96]	; 9054 <sf_gen_vlan+0x104>
    8ff0:	ldr	r0, [pc, r0]
    8ff4:	add	r0, r0, #4
    8ff8:	ldr	r1, [pc, #88]	; 9058 <sf_gen_vlan+0x108>
    8ffc:	add	r1, pc, r1
    9000:	str	r0, [r1]
    9004:	ldr	r0, [pc, #80]	; 905c <sf_gen_vlan+0x10c>
    9008:	ldr	r0, [pc, r0]
    900c:	add	r0, r0, #4
    9010:	ldr	r1, [pc, #72]	; 9060 <sf_gen_vlan+0x110>
    9014:	add	r1, pc, r1
    9018:	str	r0, [r1]
    901c:	mov	r0, r4
    9020:	sub	sp, fp, #8
    9024:	pop	{r4, r5, fp, pc}
    9028:	ldr	r0, [pc, #56]	; 9068 <sf_gen_vlan+0x118>
    902c:	add	r0, pc, r0
    9030:	bl	1f9c <sf_bpf_error>
    9034:	ldr	r0, [pc, #40]	; 9064 <sf_gen_vlan+0x114>
    9038:	add	r0, pc, r0
    903c:	bl	1f9c <sf_bpf_error>
    9040:	.word	0x000272e0
    9044:	.word	0x0002763c
    9048:	.word	0x000272cc
    904c:	.word	0x00027618
    9050:	.word	0x00027610
    9054:	.word	0x000275bc
    9058:	.word	0x000275b0
    905c:	.word	0x000275a0
    9060:	.word	0x00027594
    9064:	.word	0x00009a2d
    9068:	.word	0x00009a20

0000906c <sf_gen_mpls>:
    906c:	push	{r4, r5, fp, lr}
    9070:	add	fp, sp, #8
    9074:	sub	sp, sp, #8
    9078:	mov	r4, r0
    907c:	ldr	r0, [pc, #276]	; 9198 <sf_gen_mpls+0x12c>
    9080:	ldr	r0, [pc, r0]
    9084:	ldr	r1, [pc, #272]	; 919c <sf_gen_mpls+0x130>
    9088:	add	r1, pc, r1
    908c:	str	r0, [r1]
    9090:	ldr	r1, [pc, #264]	; 91a0 <sf_gen_mpls+0x134>
    9094:	ldr	r1, [pc, r1]
    9098:	cmp	r1, #0
    909c:	beq	90c0 <sf_gen_mpls+0x54>
    90a0:	mov	r1, #1
    90a4:	str	r1, [sp]
    90a8:	sub	r1, r0, #2
    90ac:	mov	r0, #2
    90b0:	mov	r2, #16
    90b4:	mov	r3, #0
    90b8:	bl	83b8 <gen_mcmp>
    90bc:	b	90f0 <sf_gen_mpls+0x84>
    90c0:	ldr	r1, [pc, #220]	; 91a4 <sf_gen_mpls+0x138>
    90c4:	ldr	r1, [pc, r1]
    90c8:	cmp	r1, #104	; 0x68
    90cc:	beq	90e0 <sf_gen_mpls+0x74>
    90d0:	cmp	r1, #9
    90d4:	beq	90e8 <sf_gen_mpls+0x7c>
    90d8:	cmp	r1, #1
    90dc:	bne	918c <sf_gen_mpls+0x120>
    90e0:	movw	r0, #34887	; 0x8847
    90e4:	b	90ec <sf_gen_mpls+0x80>
    90e8:	movw	r0, #641	; 0x281
    90ec:	bl	3a60 <gen_linktype>
    90f0:	mov	r5, r0
    90f4:	cmp	r4, #0
    90f8:	blt	9134 <sf_gen_mpls+0xc8>
    90fc:	ldr	r1, [pc, #168]	; 91ac <sf_gen_mpls+0x140>
    9100:	ldr	r1, [pc, r1]
    9104:	movw	r0, #61440	; 0xf000
    9108:	movt	r0, #65535	; 0xffff
    910c:	str	r0, [sp]
    9110:	lsl	r3, r4, #12
    9114:	mov	r0, #2
    9118:	mov	r2, #0
    911c:	bl	83b8 <gen_mcmp>
    9120:	mov	r4, r0
    9124:	mov	r0, r5
    9128:	mov	r1, r4
    912c:	bl	314c <sf_gen_and>
    9130:	b	9138 <sf_gen_mpls+0xcc>
    9134:	mov	r4, r5
    9138:	ldr	r0, [pc, #112]	; 91b0 <sf_gen_mpls+0x144>
    913c:	ldr	r0, [pc, r0]
    9140:	add	r0, r0, #4
    9144:	ldr	r1, [pc, #104]	; 91b4 <sf_gen_mpls+0x148>
    9148:	add	r1, pc, r1
    914c:	str	r0, [r1]
    9150:	ldr	r0, [pc, #96]	; 91b8 <sf_gen_mpls+0x14c>
    9154:	ldr	r0, [pc, r0]
    9158:	add	r0, r0, #4
    915c:	ldr	r1, [pc, #88]	; 91bc <sf_gen_mpls+0x150>
    9160:	add	r1, pc, r1
    9164:	str	r0, [r1]
    9168:	ldr	r0, [pc, #80]	; 91c0 <sf_gen_mpls+0x154>
    916c:	ldr	r0, [pc, r0]
    9170:	add	r0, r0, #1
    9174:	ldr	r1, [pc, #72]	; 91c4 <sf_gen_mpls+0x158>
    9178:	add	r1, pc, r1
    917c:	str	r0, [r1]
    9180:	mov	r0, r4
    9184:	sub	sp, fp, #8
    9188:	pop	{r4, r5, fp, pc}
    918c:	ldr	r0, [pc, #20]	; 91a8 <sf_gen_mpls+0x13c>
    9190:	add	r0, pc, r0
    9194:	bl	1f9c <sf_bpf_error>
    9198:	.word	0x00027530
    919c:	.word	0x000271c0
    91a0:	.word	0x000271b0
    91a4:	.word	0x000274dc
    91a8:	.word	0x000098fb
    91ac:	.word	0x00027148
    91b0:	.word	0x00027480
    91b4:	.word	0x00027474
    91b8:	.word	0x0002745c
    91bc:	.word	0x00027450
    91c0:	.word	0x000270d8
    91c4:	.word	0x000270cc

000091c8 <sf_gen_pppoed>:
    91c8:	movw	r0, #34915	; 0x8863
    91cc:	b	3a60 <gen_linktype>

000091d0 <sf_gen_pppoes>:
    91d0:	push	{fp, lr}
    91d4:	mov	fp, sp
    91d8:	movw	r0, #34916	; 0x8864
    91dc:	bl	3a60 <gen_linktype>
    91e0:	ldr	r1, [pc, #76]	; 9234 <sf_gen_pppoes+0x64>
    91e4:	add	r1, pc, r1
    91e8:	mov	r2, #1
    91ec:	strb	r2, [r1]
    91f0:	ldr	r1, [pc, #64]	; 9238 <sf_gen_pppoes+0x68>
    91f4:	add	r1, pc, r1
    91f8:	mov	r2, #8
    91fc:	str	r2, [r1]
    9200:	ldr	r1, [pc, #52]	; 923c <sf_gen_pppoes+0x6c>
    9204:	ldr	r1, [pc, r1]
    9208:	ldr	r3, [pc, #48]	; 9240 <sf_gen_pppoes+0x70>
    920c:	add	r3, pc, r3
    9210:	str	r2, [r3]
    9214:	ldr	r2, [pc, #40]	; 9244 <sf_gen_pppoes+0x74>
    9218:	add	r2, pc, r2
    921c:	str	r1, [r2]
    9220:	add	r1, r1, #6
    9224:	ldr	r2, [pc, #28]	; 9248 <sf_gen_pppoes+0x78>
    9228:	add	r2, pc, r2
    922c:	str	r1, [r2]
    9230:	pop	{fp, pc}
    9234:	.word	0x000273dc
    9238:	.word	0x000273c8
    923c:	.word	0x000273ac
    9240:	.word	0x000273a4
    9244:	.word	0x00027030
    9248:	.word	0x00027380

0000924c <sf_gen_atmfield_code>:
    924c:	push	{fp, lr}
    9250:	mov	fp, sp
    9254:	sub	sp, sp, #16
    9258:	sub	ip, r0, #51	; 0x33
    925c:	cmp	ip, #4
    9260:	bhi	9394 <sf_gen_atmfield_code+0x148>
    9264:	add	lr, pc, #4
    9268:	ldr	r0, [lr, ip, lsl #2]
    926c:	add	pc, lr, r0
    9270:	.word	0x00000014
    9274:	.word	0x000000dc
    9278:	.word	0x00000084
    927c:	.word	0x000000b4
    9280:	.word	0x0000004c
    9284:	ldr	r0, [pc, #304]	; 93bc <sf_gen_atmfield_code+0x170>
    9288:	add	r0, pc, r0
    928c:	ldrb	r0, [r0]
    9290:	cmp	r0, #0
    9294:	beq	9398 <sf_gen_atmfield_code+0x14c>
    9298:	ldr	ip, [pc, #288]	; 93c0 <sf_gen_atmfield_code+0x174>
    929c:	ldr	ip, [pc, ip]
    92a0:	cmn	ip, #1
    92a4:	beq	9394 <sf_gen_atmfield_code+0x148>
    92a8:	stm	sp, {r2, r3}
    92ac:	str	r1, [sp, #8]
    92b0:	mov	r0, #1
    92b4:	mov	r1, ip
    92b8:	b	9344 <sf_gen_atmfield_code+0xf8>
    92bc:	ldr	r0, [pc, #272]	; 93d4 <sf_gen_atmfield_code+0x188>
    92c0:	add	r0, pc, r0
    92c4:	ldrb	r0, [r0]
    92c8:	cmp	r0, #0
    92cc:	beq	93a4 <sf_gen_atmfield_code+0x158>
    92d0:	ldr	r0, [pc, #256]	; 93d8 <sf_gen_atmfield_code+0x18c>
    92d4:	add	r0, pc, r0
    92d8:	ldrb	r0, [r0]
    92dc:	cmp	r0, #1
    92e0:	beq	9394 <sf_gen_atmfield_code+0x148>
    92e4:	stm	sp, {r2, r3}
    92e8:	str	r1, [sp, #8]
    92ec:	rsb	r1, r0, #0
    92f0:	b	9340 <sf_gen_atmfield_code+0xf4>
    92f4:	ldr	r0, [pc, #208]	; 93cc <sf_gen_atmfield_code+0x180>
    92f8:	add	r0, pc, r0
    92fc:	ldrb	r0, [r0]
    9300:	cmp	r0, #1
    9304:	beq	9394 <sf_gen_atmfield_code+0x148>
    9308:	stm	sp, {r2, r3}
    930c:	str	r1, [sp, #8]
    9310:	rsb	r1, r0, #0
    9314:	mov	r0, #1
    9318:	mov	r2, #16
    931c:	mov	r3, #15
    9320:	b	9388 <sf_gen_atmfield_code+0x13c>
    9324:	ldr	r0, [pc, #164]	; 93d0 <sf_gen_atmfield_code+0x184>
    9328:	ldr	r0, [pc, r0]
    932c:	cmn	r0, #1
    9330:	beq	9394 <sf_gen_atmfield_code+0x148>
    9334:	stm	sp, {r2, r3}
    9338:	str	r1, [sp, #8]
    933c:	add	r1, r0, #5
    9340:	mov	r0, #1
    9344:	mov	r2, #16
    9348:	b	9384 <sf_gen_atmfield_code+0x138>
    934c:	ldr	r0, [pc, #112]	; 93c4 <sf_gen_atmfield_code+0x178>
    9350:	add	r0, pc, r0
    9354:	ldrb	r0, [r0]
    9358:	cmp	r0, #0
    935c:	beq	93b0 <sf_gen_atmfield_code+0x164>
    9360:	ldr	ip, [pc, #96]	; 93c8 <sf_gen_atmfield_code+0x17c>
    9364:	ldr	ip, [pc, ip]
    9368:	cmn	ip, #1
    936c:	beq	9394 <sf_gen_atmfield_code+0x148>
    9370:	stm	sp, {r2, r3}
    9374:	str	r1, [sp, #8]
    9378:	mov	r0, #1
    937c:	mov	r1, ip
    9380:	mov	r2, #8
    9384:	mvn	r3, #0
    9388:	bl	93e8 <gen_ncmp>
    938c:	mov	sp, fp
    9390:	pop	{fp, pc}
    9394:	bl	fc4 <abort@plt>
    9398:	ldr	r0, [pc, #60]	; 93dc <sf_gen_atmfield_code+0x190>
    939c:	add	r0, pc, r0
    93a0:	bl	1f9c <sf_bpf_error>
    93a4:	ldr	r0, [pc, #56]	; 93e4 <sf_gen_atmfield_code+0x198>
    93a8:	add	r0, pc, r0
    93ac:	bl	1f9c <sf_bpf_error>
    93b0:	ldr	r0, [pc, #40]	; 93e0 <sf_gen_atmfield_code+0x194>
    93b4:	add	r0, pc, r0
    93b8:	bl	1f9c <sf_bpf_error>
    93bc:	.word	0x0002733c
    93c0:	.word	0x0002732c
    93c4:	.word	0x00027274
    93c8:	.word	0x00027268
    93cc:	.word	0x000272d8
    93d0:	.word	0x000272ac
    93d4:	.word	0x00027304
    93d8:	.word	0x000272fc
    93dc:	.word	0x00009715
    93e0:	.word	0x0000971d
    93e4:	.word	0x00009749

000093e8 <gen_ncmp>:
    93e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    93ec:	add	fp, sp, #24
    93f0:	mov	r5, r3
    93f4:	bl	87cc <gen_load_a>
    93f8:	mov	r4, r0
    93fc:	ldr	r7, [fp, #16]
    9400:	ldr	r8, [fp, #12]
    9404:	ldr	r6, [fp, #8]
    9408:	cmn	r5, #1
    940c:	beq	9428 <gen_ncmp+0x40>
    9410:	mov	r0, #84	; 0x54
    9414:	bl	7988 <new_stmt>
    9418:	mov	r1, r0
    941c:	str	r5, [r0, #12]
    9420:	mov	r0, r4
    9424:	bl	750c <sf_append>
    9428:	orr	r0, r6, #5
    942c:	bl	7c58 <new_block>
    9430:	mov	r5, r0
    9434:	str	r4, [r0, #4]
    9438:	str	r7, [r0, #20]
    943c:	cmp	r8, #0
    9440:	beq	9454 <gen_ncmp+0x6c>
    9444:	orr	r0, r6, #16
    9448:	cmp	r0, #48	; 0x30
    944c:	moveq	r0, r5
    9450:	bleq	3278 <sf_gen_not>
    9454:	mov	r0, r5
    9458:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000945c <sf_gen_atmtype_abbrev>:
    945c:	push	{r4, r5, fp, lr}
    9460:	add	fp, sp, #8
    9464:	sub	r0, r0, #22
    9468:	cmp	r0, #9
    946c:	bhi	96e4 <sf_gen_atmtype_abbrev+0x288>
    9470:	add	r1, pc, #4
    9474:	ldr	r0, [r1, r0, lsl #2]
    9478:	add	pc, r1, r0
    947c:	.word	0x00000028
    9480:	.word	0x0000010c
    9484:	.word	0x000000d4
    9488:	.word	0x00000060
    948c:	.word	0x00000210
    9490:	.word	0x00000144
    9494:	.word	0x00000268
    9498:	.word	0x00000268
    949c:	.word	0x0000017c
    94a0:	.word	0x00000098
    94a4:	ldr	r0, [pc, #668]	; 9748 <sf_gen_atmtype_abbrev+0x2ec>
    94a8:	add	r0, pc, r0
    94ac:	ldrb	r0, [r0]
    94b0:	cmp	r0, #0
    94b4:	beq	96e8 <sf_gen_atmtype_abbrev+0x28c>
    94b8:	mov	r0, #51	; 0x33
    94bc:	mov	r1, #0
    94c0:	mov	r2, #16
    94c4:	mov	r3, #0
    94c8:	bl	924c <sf_gen_atmfield_code>
    94cc:	mov	r5, r0
    94d0:	mov	r0, #52	; 0x34
    94d4:	mov	r1, #1
    94d8:	b	96c0 <sf_gen_atmtype_abbrev+0x264>
    94dc:	ldr	r0, [pc, #624]	; 9754 <sf_gen_atmtype_abbrev+0x2f8>
    94e0:	add	r0, pc, r0
    94e4:	ldrb	r0, [r0]
    94e8:	cmp	r0, #0
    94ec:	beq	96f4 <sf_gen_atmtype_abbrev+0x298>
    94f0:	mov	r0, #51	; 0x33
    94f4:	mov	r1, #0
    94f8:	mov	r2, #16
    94fc:	mov	r3, #0
    9500:	bl	924c <sf_gen_atmfield_code>
    9504:	mov	r5, r0
    9508:	mov	r0, #52	; 0x34
    950c:	mov	r1, #4
    9510:	b	96c0 <sf_gen_atmtype_abbrev+0x264>
    9514:	ldr	r0, [pc, #612]	; 9780 <sf_gen_atmtype_abbrev+0x324>
    9518:	add	r0, pc, r0
    951c:	ldrb	r0, [r0]
    9520:	cmp	r0, #0
    9524:	beq	9700 <sf_gen_atmtype_abbrev+0x2a4>
    9528:	mov	r4, #0
    952c:	mov	r0, #53	; 0x35
    9530:	mov	r1, #2
    9534:	mov	r2, #16
    9538:	mov	r3, #0
    953c:	bl	924c <sf_gen_atmfield_code>
    9540:	ldr	r1, [pc, #572]	; 9784 <sf_gen_atmtype_abbrev+0x328>
    9544:	add	r1, pc, r1
    9548:	strb	r4, [r1]
    954c:	pop	{r4, r5, fp, pc}
    9550:	ldr	r0, [pc, #504]	; 9750 <sf_gen_atmtype_abbrev+0x2f4>
    9554:	add	r0, pc, r0
    9558:	ldrb	r0, [r0]
    955c:	cmp	r0, #0
    9560:	beq	970c <sf_gen_atmtype_abbrev+0x2b0>
    9564:	mov	r0, #51	; 0x33
    9568:	mov	r1, #0
    956c:	mov	r2, #16
    9570:	mov	r3, #0
    9574:	bl	924c <sf_gen_atmfield_code>
    9578:	mov	r5, r0
    957c:	mov	r0, #52	; 0x34
    9580:	mov	r1, #3
    9584:	b	96c0 <sf_gen_atmtype_abbrev+0x264>
    9588:	ldr	r0, [pc, #444]	; 974c <sf_gen_atmtype_abbrev+0x2f0>
    958c:	add	r0, pc, r0
    9590:	ldrb	r0, [r0]
    9594:	cmp	r0, #0
    9598:	beq	9718 <sf_gen_atmtype_abbrev+0x2bc>
    959c:	mov	r0, #51	; 0x33
    95a0:	mov	r1, #0
    95a4:	mov	r2, #16
    95a8:	mov	r3, #0
    95ac:	bl	924c <sf_gen_atmfield_code>
    95b0:	mov	r5, r0
    95b4:	mov	r0, #52	; 0x34
    95b8:	mov	r1, #2
    95bc:	b	96c0 <sf_gen_atmtype_abbrev+0x264>
    95c0:	ldr	r0, [pc, #404]	; 975c <sf_gen_atmtype_abbrev+0x300>
    95c4:	add	r0, pc, r0
    95c8:	ldrb	r0, [r0]
    95cc:	cmp	r0, #0
    95d0:	beq	9724 <sf_gen_atmtype_abbrev+0x2c8>
    95d4:	mov	r0, #51	; 0x33
    95d8:	mov	r1, #0
    95dc:	mov	r2, #16
    95e0:	mov	r3, #0
    95e4:	bl	924c <sf_gen_atmfield_code>
    95e8:	mov	r5, r0
    95ec:	mov	r0, #52	; 0x34
    95f0:	mov	r1, #16
    95f4:	b	96c0 <sf_gen_atmtype_abbrev+0x264>
    95f8:	ldr	r0, [pc, #352]	; 9760 <sf_gen_atmtype_abbrev+0x304>
    95fc:	add	r0, pc, r0
    9600:	ldrb	r0, [r0]
    9604:	cmp	r0, #0
    9608:	beq	9730 <sf_gen_atmtype_abbrev+0x2d4>
    960c:	mov	r4, #1
    9610:	mov	r5, #0
    9614:	mov	r0, #53	; 0x35
    9618:	mov	r1, #1
    961c:	mov	r2, #16
    9620:	mov	r3, #0
    9624:	bl	924c <sf_gen_atmfield_code>
    9628:	ldr	r1, [pc, #308]	; 9764 <sf_gen_atmtype_abbrev+0x308>
    962c:	add	r1, pc, r1
    9630:	strb	r4, [r1]
    9634:	ldr	r1, [pc, #300]	; 9768 <sf_gen_atmtype_abbrev+0x30c>
    9638:	add	r1, pc, r1
    963c:	str	r5, [r1]
    9640:	ldr	r1, [pc, #292]	; 976c <sf_gen_atmtype_abbrev+0x310>
    9644:	add	r1, pc, r1
    9648:	mov	r2, #3
    964c:	str	r2, [r1]
    9650:	ldr	r1, [pc, #280]	; 9770 <sf_gen_atmtype_abbrev+0x314>
    9654:	ldr	r1, [pc, r1]
    9658:	add	r2, r1, #2
    965c:	ldr	r3, [pc, #272]	; 9774 <sf_gen_atmtype_abbrev+0x318>
    9660:	add	r3, pc, r3
    9664:	str	r2, [r3]
    9668:	add	r2, r1, #14
    966c:	ldr	r3, [pc, #260]	; 9778 <sf_gen_atmtype_abbrev+0x31c>
    9670:	add	r3, pc, r3
    9674:	str	r2, [r3]
    9678:	add	r1, r1, #16
    967c:	ldr	r2, [pc, #248]	; 977c <sf_gen_atmtype_abbrev+0x320>
    9680:	add	r2, pc, r2
    9684:	str	r1, [r2]
    9688:	pop	{r4, r5, fp, pc}
    968c:	ldr	r0, [pc, #196]	; 9758 <sf_gen_atmtype_abbrev+0x2fc>
    9690:	add	r0, pc, r0
    9694:	ldrb	r0, [r0]
    9698:	cmp	r0, #0
    969c:	beq	973c <sf_gen_atmtype_abbrev+0x2e0>
    96a0:	mov	r0, #51	; 0x33
    96a4:	mov	r1, #0
    96a8:	mov	r2, #16
    96ac:	mov	r3, #0
    96b0:	bl	924c <sf_gen_atmfield_code>
    96b4:	mov	r5, r0
    96b8:	mov	r0, #52	; 0x34
    96bc:	mov	r1, #5
    96c0:	mov	r2, #16
    96c4:	mov	r3, #0
    96c8:	bl	924c <sf_gen_atmfield_code>
    96cc:	mov	r4, r0
    96d0:	mov	r0, r5
    96d4:	mov	r1, r4
    96d8:	bl	314c <sf_gen_and>
    96dc:	mov	r0, r4
    96e0:	pop	{r4, r5, fp, pc}
    96e4:	bl	fc4 <abort@plt>
    96e8:	ldr	r0, [pc, #152]	; 9788 <sf_gen_atmtype_abbrev+0x32c>
    96ec:	add	r0, pc, r0
    96f0:	bl	1f9c <sf_bpf_error>
    96f4:	ldr	r0, [pc, #152]	; 9794 <sf_gen_atmtype_abbrev+0x338>
    96f8:	add	r0, pc, r0
    96fc:	bl	1f9c <sf_bpf_error>
    9700:	ldr	r0, [pc, #156]	; 97a4 <sf_gen_atmtype_abbrev+0x348>
    9704:	add	r0, pc, r0
    9708:	bl	1f9c <sf_bpf_error>
    970c:	ldr	r0, [pc, #124]	; 9790 <sf_gen_atmtype_abbrev+0x334>
    9710:	add	r0, pc, r0
    9714:	bl	1f9c <sf_bpf_error>
    9718:	ldr	r0, [pc, #108]	; 978c <sf_gen_atmtype_abbrev+0x330>
    971c:	add	r0, pc, r0
    9720:	bl	1f9c <sf_bpf_error>
    9724:	ldr	r0, [pc, #112]	; 979c <sf_gen_atmtype_abbrev+0x340>
    9728:	add	r0, pc, r0
    972c:	bl	1f9c <sf_bpf_error>
    9730:	ldr	r0, [pc, #104]	; 97a0 <sf_gen_atmtype_abbrev+0x344>
    9734:	add	r0, pc, r0
    9738:	bl	1f9c <sf_bpf_error>
    973c:	ldr	r0, [pc, #84]	; 9798 <sf_gen_atmtype_abbrev+0x33c>
    9740:	add	r0, pc, r0
    9744:	bl	1f9c <sf_bpf_error>
    9748:	.word	0x0002711c
    974c:	.word	0x00027038
    9750:	.word	0x00027070
    9754:	.word	0x000270e4
    9758:	.word	0x00026f34
    975c:	.word	0x00027000
    9760:	.word	0x00026fc8
    9764:	.word	0x00026f78
    9768:	.word	0x00026f78
    976c:	.word	0x00026f78
    9770:	.word	0x00026f80
    9774:	.word	0x00026f58
    9778:	.word	0x00026f38
    977c:	.word	0x00026f2c
    9780:	.word	0x000270ac
    9784:	.word	0x00027060
    9788:	.word	0x00009429
    978c:	.word	0x0000941b
    9790:	.word	0x00009447
    9794:	.word	0x00009482
    9798:	.word	0x0000945d
    979c:	.word	0x00009494
    97a0:	.word	0x000094aa
    97a4:	.word	0x000094fb

000097a8 <sf_gen_mtp2type_abbrev>:
    97a8:	push	{r4, r5, r6, sl, fp, lr}
    97ac:	add	fp, sp, #16
    97b0:	sub	sp, sp, #16
    97b4:	cmp	r0, #24
    97b8:	beq	988c <sf_gen_mtp2type_abbrev+0xe4>
    97bc:	cmp	r0, #23
    97c0:	beq	9804 <sf_gen_mtp2type_abbrev+0x5c>
    97c4:	cmp	r0, #22
    97c8:	bne	98e0 <sf_gen_mtp2type_abbrev+0x138>
    97cc:	ldr	r0, [pc, #308]	; 9908 <sf_gen_mtp2type_abbrev+0x160>
    97d0:	ldr	r0, [pc, r0]
    97d4:	sub	r1, r0, #139	; 0x8b
    97d8:	cmp	r1, #2
    97dc:	bcc	97e8 <sf_gen_mtp2type_abbrev+0x40>
    97e0:	cmp	r0, #197	; 0xc5
    97e4:	bne	98e4 <sf_gen_mtp2type_abbrev+0x13c>
    97e8:	ldr	r1, [pc, #284]	; 990c <sf_gen_mtp2type_abbrev+0x164>
    97ec:	ldr	r1, [pc, r1]
    97f0:	mov	r0, #0
    97f4:	mov	r2, #16
    97f8:	str	r2, [sp]
    97fc:	str	r0, [sp, #4]
    9800:	b	98c4 <sf_gen_mtp2type_abbrev+0x11c>
    9804:	ldr	r0, [pc, #260]	; 9910 <sf_gen_mtp2type_abbrev+0x168>
    9808:	ldr	r0, [pc, r0]
    980c:	sub	r1, r0, #139	; 0x8b
    9810:	cmp	r1, #2
    9814:	bcc	9820 <sf_gen_mtp2type_abbrev+0x78>
    9818:	cmp	r0, #197	; 0xc5
    981c:	bne	98f0 <sf_gen_mtp2type_abbrev+0x148>
    9820:	ldr	r1, [pc, #236]	; 9914 <sf_gen_mtp2type_abbrev+0x16c>
    9824:	ldr	r1, [pc, r1]
    9828:	mov	r0, #2
    982c:	mov	r2, #1
    9830:	mov	r5, #32
    9834:	str	r5, [sp]
    9838:	str	r2, [sp, #4]
    983c:	str	r0, [sp, #8]
    9840:	mov	r6, #0
    9844:	mov	r0, #0
    9848:	mov	r2, #16
    984c:	mov	r3, #63	; 0x3f
    9850:	bl	93e8 <gen_ncmp>
    9854:	mov	r4, r0
    9858:	ldr	r1, [pc, #184]	; 9918 <sf_gen_mtp2type_abbrev+0x170>
    985c:	ldr	r1, [pc, r1]
    9860:	stm	sp, {r5, r6}
    9864:	str	r6, [sp, #8]
    9868:	mov	r0, #0
    986c:	mov	r2, #16
    9870:	mov	r3, #63	; 0x3f
    9874:	bl	93e8 <gen_ncmp>
    9878:	mov	r1, r4
    987c:	bl	314c <sf_gen_and>
    9880:	mov	r0, r4
    9884:	sub	sp, fp, #16
    9888:	pop	{r4, r5, r6, sl, fp, pc}
    988c:	ldr	r0, [pc, #136]	; 991c <sf_gen_mtp2type_abbrev+0x174>
    9890:	ldr	r0, [pc, r0]
    9894:	sub	r1, r0, #139	; 0x8b
    9898:	cmp	r1, #2
    989c:	bcc	98a8 <sf_gen_mtp2type_abbrev+0x100>
    98a0:	cmp	r0, #197	; 0xc5
    98a4:	bne	98fc <sf_gen_mtp2type_abbrev+0x154>
    98a8:	ldr	r1, [pc, #112]	; 9920 <sf_gen_mtp2type_abbrev+0x178>
    98ac:	ldr	r1, [pc, r1]
    98b0:	mov	r0, #2
    98b4:	mov	r2, #0
    98b8:	mov	r3, #32
    98bc:	str	r3, [sp]
    98c0:	str	r2, [sp, #4]
    98c4:	str	r0, [sp, #8]
    98c8:	mov	r0, #0
    98cc:	mov	r2, #16
    98d0:	mov	r3, #63	; 0x3f
    98d4:	bl	93e8 <gen_ncmp>
    98d8:	sub	sp, fp, #16
    98dc:	pop	{r4, r5, r6, sl, fp, pc}
    98e0:	bl	fc4 <abort@plt>
    98e4:	ldr	r0, [pc, #56]	; 9924 <sf_gen_mtp2type_abbrev+0x17c>
    98e8:	add	r0, pc, r0
    98ec:	bl	1f9c <sf_bpf_error>
    98f0:	ldr	r0, [pc, #48]	; 9928 <sf_gen_mtp2type_abbrev+0x180>
    98f4:	add	r0, pc, r0
    98f8:	bl	1f9c <sf_bpf_error>
    98fc:	ldr	r0, [pc, #40]	; 992c <sf_gen_mtp2type_abbrev+0x184>
    9900:	add	r0, pc, r0
    9904:	bl	1f9c <sf_bpf_error>
    9908:	.word	0x00026dd0
    990c:	.word	0x00026dec
    9910:	.word	0x00026d98
    9914:	.word	0x00026db4
    9918:	.word	0x00026d7c
    991c:	.word	0x00026d10
    9920:	.word	0x00026d2c
    9924:	.word	0x00009337
    9928:	.word	0x00009349
    992c:	.word	0x0000935b

00009930 <sf_gen_mtp3field_code>:
    9930:	push	{fp, lr}
    9934:	mov	fp, sp
    9938:	sub	sp, sp, #16
    993c:	sub	ip, r0, #1
    9940:	cmp	ip, #3
    9944:	bhi	9a5c <sf_gen_mtp3field_code+0x12c>
    9948:	add	lr, pc, #4
    994c:	ldr	r0, [lr, ip, lsl #2]
    9950:	add	pc, lr, r0
    9954:	.word	0x00000010
    9958:	.word	0x000000b4
    995c:	.word	0x00000044
    9960:	.word	0x0000007c
    9964:	ldr	ip, [pc, #340]	; 9ac0 <sf_gen_mtp3field_code+0x190>
    9968:	ldr	ip, [pc, ip]
    996c:	cmn	ip, #1
    9970:	beq	9a60 <sf_gen_mtp3field_code+0x130>
    9974:	cmp	r1, #256	; 0x100
    9978:	bcs	9a6c <sf_gen_mtp3field_code+0x13c>
    997c:	stm	sp, {r2, r3}
    9980:	str	r1, [sp, #8]
    9984:	mov	r0, #0
    9988:	mov	r1, ip
    998c:	mov	r2, #16
    9990:	mvn	r3, #0
    9994:	b	9a50 <sf_gen_mtp3field_code+0x120>
    9998:	ldr	ip, [pc, #296]	; 9ac8 <sf_gen_mtp3field_code+0x198>
    999c:	ldr	ip, [pc, ip]
    99a0:	cmn	ip, #1
    99a4:	beq	9a78 <sf_gen_mtp3field_code+0x148>
    99a8:	cmp	r1, #16384	; 0x4000
    99ac:	bcs	9a84 <sf_gen_mtp3field_code+0x154>
    99b0:	mov	r0, #4128768	; 0x3f0000
    99b4:	and	r0, r0, r1, lsl #8
    99b8:	orr	r0, r0, r1, lsl #24
    99bc:	stm	sp, {r2, r3}
    99c0:	str	r0, [sp, #8]
    99c4:	movw	r3, #0
    99c8:	movt	r3, #65343	; 0xff3f
    99cc:	b	9a44 <sf_gen_mtp3field_code+0x114>
    99d0:	ldr	ip, [pc, #244]	; 9acc <sf_gen_mtp3field_code+0x19c>
    99d4:	ldr	ip, [pc, ip]
    99d8:	cmn	ip, #1
    99dc:	beq	9a90 <sf_gen_mtp3field_code+0x160>
    99e0:	cmp	r1, #16
    99e4:	bcs	9a9c <sf_gen_mtp3field_code+0x16c>
    99e8:	lsl	r0, r1, #4
    99ec:	stm	sp, {r2, r3}
    99f0:	str	r0, [sp, #8]
    99f4:	mov	r0, #0
    99f8:	mov	r1, ip
    99fc:	mov	r2, #16
    9a00:	mov	r3, #240	; 0xf0
    9a04:	b	9a50 <sf_gen_mtp3field_code+0x120>
    9a08:	ldr	ip, [pc, #180]	; 9ac4 <sf_gen_mtp3field_code+0x194>
    9a0c:	ldr	ip, [pc, ip]
    9a10:	cmn	ip, #1
    9a14:	beq	9aa8 <sf_gen_mtp3field_code+0x178>
    9a18:	cmp	r1, #16384	; 0x4000
    9a1c:	bcs	9ab4 <sf_gen_mtp3field_code+0x184>
    9a20:	stm	sp, {r2, r3}
    9a24:	and	r0, r1, #1020	; 0x3fc
    9a28:	ubfx	r2, r1, #10, #4
    9a2c:	orr	r0, r2, r0, lsl #6
    9a30:	and	r1, r1, #3
    9a34:	orr	r0, r0, r1, lsl #22
    9a38:	str	r0, [sp, #8]
    9a3c:	movw	r3, #65295	; 0xff0f
    9a40:	movt	r3, #192	; 0xc0
    9a44:	mov	r0, #0
    9a48:	mov	r1, ip
    9a4c:	mov	r2, #0
    9a50:	bl	93e8 <gen_ncmp>
    9a54:	mov	sp, fp
    9a58:	pop	{fp, pc}
    9a5c:	bl	fc4 <abort@plt>
    9a60:	ldr	r0, [pc, #104]	; 9ad0 <sf_gen_mtp3field_code+0x1a0>
    9a64:	add	r0, pc, r0
    9a68:	bl	1f9c <sf_bpf_error>
    9a6c:	ldr	r0, [pc, #96]	; 9ad4 <sf_gen_mtp3field_code+0x1a4>
    9a70:	add	r0, pc, r0
    9a74:	bl	1f9c <sf_bpf_error>
    9a78:	ldr	r0, [pc, #96]	; 9ae0 <sf_gen_mtp3field_code+0x1b0>
    9a7c:	add	r0, pc, r0
    9a80:	bl	1f9c <sf_bpf_error>
    9a84:	ldr	r0, [pc, #88]	; 9ae4 <sf_gen_mtp3field_code+0x1b4>
    9a88:	add	r0, pc, r0
    9a8c:	bl	1f9c <sf_bpf_error>
    9a90:	ldr	r0, [pc, #80]	; 9ae8 <sf_gen_mtp3field_code+0x1b8>
    9a94:	add	r0, pc, r0
    9a98:	bl	1f9c <sf_bpf_error>
    9a9c:	ldr	r0, [pc, #72]	; 9aec <sf_gen_mtp3field_code+0x1bc>
    9aa0:	add	r0, pc, r0
    9aa4:	bl	1f9c <sf_bpf_error>
    9aa8:	ldr	r0, [pc, #40]	; 9ad8 <sf_gen_mtp3field_code+0x1a8>
    9aac:	add	r0, pc, r0
    9ab0:	bl	1f9c <sf_bpf_error>
    9ab4:	ldr	r0, [pc, #32]	; 9adc <sf_gen_mtp3field_code+0x1ac>
    9ab8:	add	r0, pc, r0
    9abc:	bl	1f9c <sf_bpf_error>
    9ac0:	.word	0x00026c74
    9ac4:	.word	0x00026bd4
    9ac8:	.word	0x00026c48
    9acc:	.word	0x00026c14
    9ad0:	.word	0x00009214
    9ad4:	.word	0x00009224
    9ad8:	.word	0x0000920e
    9adc:	.word	0x0000921e
    9ae0:	.word	0x00009282
    9ae4:	.word	0x00009292
    9ae8:	.word	0x000092ae
    9aec:	.word	0x000092be

00009af0 <sf_gen_atmmulti_abbrev>:
    9af0:	push	{r4, r5, fp, lr}
    9af4:	add	fp, sp, #8
    9af8:	ldr	r1, [pc, #444]	; 9cbc <sf_gen_atmmulti_abbrev+0x1cc>
    9afc:	add	r1, pc, r1
    9b00:	ldrb	r2, [r1]
    9b04:	cmp	r0, #69	; 0x45
    9b08:	bgt	9b2c <sf_gen_atmmulti_abbrev+0x3c>
    9b0c:	cmp	r0, #28
    9b10:	bne	9bac <sf_gen_atmmulti_abbrev+0xbc>
    9b14:	mov	r0, #29
    9b18:	cmp	r2, #0
    9b1c:	bne	9b04 <sf_gen_atmmulti_abbrev+0x14>
    9b20:	ldr	r0, [pc, #408]	; 9cc0 <sf_gen_atmmulti_abbrev+0x1d0>
    9b24:	add	r0, pc, r0
    9b28:	bl	1f9c <sf_bpf_error>
    9b2c:	cmp	r0, #70	; 0x46
    9b30:	bne	9c14 <sf_gen_atmmulti_abbrev+0x124>
    9b34:	ldrb	r0, [r1]
    9b38:	cmp	r0, #0
    9b3c:	beq	9c98 <sf_gen_atmmulti_abbrev+0x1a8>
    9b40:	mov	r0, #41	; 0x29
    9b44:	bl	9cd0 <gen_msg_abbrev>
    9b48:	mov	r5, r0
    9b4c:	mov	r0, #42	; 0x2a
    9b50:	bl	9cd0 <gen_msg_abbrev>
    9b54:	mov	r4, r0
    9b58:	mov	r0, r5
    9b5c:	mov	r1, r4
    9b60:	bl	3224 <sf_gen_or>
    9b64:	mov	r0, #43	; 0x2b
    9b68:	bl	9cd0 <gen_msg_abbrev>
    9b6c:	mov	r1, r4
    9b70:	bl	3224 <sf_gen_or>
    9b74:	mov	r0, #44	; 0x2c
    9b78:	bl	9cd0 <gen_msg_abbrev>
    9b7c:	mov	r1, r4
    9b80:	bl	3224 <sf_gen_or>
    9b84:	mov	r0, #45	; 0x2d
    9b88:	bl	9cd0 <gen_msg_abbrev>
    9b8c:	mov	r1, r4
    9b90:	bl	3224 <sf_gen_or>
    9b94:	mov	r0, #46	; 0x2e
    9b98:	bl	9cd0 <gen_msg_abbrev>
    9b9c:	mov	r1, r4
    9ba0:	bl	3224 <sf_gen_or>
    9ba4:	mov	r0, #26
    9ba8:	b	9c80 <sf_gen_atmmulti_abbrev+0x190>
    9bac:	cmp	r0, #29
    9bb0:	bne	9c94 <sf_gen_atmmulti_abbrev+0x1a4>
    9bb4:	ldrb	r0, [r1]
    9bb8:	cmp	r0, #0
    9bbc:	beq	9ca4 <sf_gen_atmmulti_abbrev+0x1b4>
    9bc0:	mov	r0, #52	; 0x34
    9bc4:	mov	r1, #3
    9bc8:	mov	r2, #16
    9bcc:	mov	r3, #0
    9bd0:	bl	924c <sf_gen_atmfield_code>
    9bd4:	mov	r5, r0
    9bd8:	mov	r0, #52	; 0x34
    9bdc:	mov	r1, #4
    9be0:	mov	r2, #16
    9be4:	mov	r3, #0
    9be8:	bl	924c <sf_gen_atmfield_code>
    9bec:	mov	r4, r0
    9bf0:	mov	r0, r5
    9bf4:	mov	r1, r4
    9bf8:	bl	3224 <sf_gen_or>
    9bfc:	mov	r0, #51	; 0x33
    9c00:	mov	r1, #0
    9c04:	mov	r2, #16
    9c08:	mov	r3, #0
    9c0c:	bl	924c <sf_gen_atmfield_code>
    9c10:	b	9c84 <sf_gen_atmmulti_abbrev+0x194>
    9c14:	cmp	r0, #71	; 0x47
    9c18:	bne	9c94 <sf_gen_atmmulti_abbrev+0x1a4>
    9c1c:	ldrb	r0, [r1]
    9c20:	cmp	r0, #0
    9c24:	beq	9cb0 <sf_gen_atmmulti_abbrev+0x1c0>
    9c28:	mov	r0, #41	; 0x29
    9c2c:	bl	9cd0 <gen_msg_abbrev>
    9c30:	mov	r5, r0
    9c34:	mov	r0, #42	; 0x2a
    9c38:	bl	9cd0 <gen_msg_abbrev>
    9c3c:	mov	r4, r0
    9c40:	mov	r0, r5
    9c44:	mov	r1, r4
    9c48:	bl	3224 <sf_gen_or>
    9c4c:	mov	r0, #43	; 0x2b
    9c50:	bl	9cd0 <gen_msg_abbrev>
    9c54:	mov	r1, r4
    9c58:	bl	3224 <sf_gen_or>
    9c5c:	mov	r0, #45	; 0x2d
    9c60:	bl	9cd0 <gen_msg_abbrev>
    9c64:	mov	r1, r4
    9c68:	bl	3224 <sf_gen_or>
    9c6c:	mov	r0, #46	; 0x2e
    9c70:	bl	9cd0 <gen_msg_abbrev>
    9c74:	mov	r1, r4
    9c78:	bl	3224 <sf_gen_or>
    9c7c:	mov	r0, #22
    9c80:	bl	945c <sf_gen_atmtype_abbrev>
    9c84:	mov	r1, r4
    9c88:	bl	314c <sf_gen_and>
    9c8c:	mov	r0, r4
    9c90:	pop	{r4, r5, fp, pc}
    9c94:	bl	fc4 <abort@plt>
    9c98:	ldr	r0, [pc, #40]	; 9cc8 <sf_gen_atmmulti_abbrev+0x1d8>
    9c9c:	add	r0, pc, r0
    9ca0:	bl	1f9c <sf_bpf_error>
    9ca4:	ldr	r0, [pc, #24]	; 9cc4 <sf_gen_atmmulti_abbrev+0x1d4>
    9ca8:	add	r0, pc, r0
    9cac:	bl	1f9c <sf_bpf_error>
    9cb0:	ldr	r0, [pc, #20]	; 9ccc <sf_gen_atmmulti_abbrev+0x1dc>
    9cb4:	add	r0, pc, r0
    9cb8:	bl	1f9c <sf_bpf_error>
    9cbc:	.word	0x00026ac8
    9cc0:	.word	0x0000925f
    9cc4:	.word	0x000090fb
    9cc8:	.word	0x00009129
    9ccc:	.word	0x00009138

00009cd0 <gen_msg_abbrev>:
    9cd0:	sub	r0, r0, #41	; 0x29
    9cd4:	cmp	r0, #6
    9cd8:	bcs	9cf8 <gen_msg_abbrev+0x28>
    9cdc:	ldr	r1, [pc, #32]	; 9d04 <gen_msg_abbrev+0x34>
    9ce0:	add	r1, pc, r1
    9ce4:	ldr	r1, [r1, r0, lsl #2]
    9ce8:	mov	r0, #54	; 0x36
    9cec:	mov	r2, #16
    9cf0:	mov	r3, #0
    9cf4:	b	924c <sf_gen_atmfield_code>
    9cf8:	push	{fp, lr}
    9cfc:	mov	fp, sp
    9d00:	bl	fc4 <abort@plt>
    9d04:	.word	0x00009bd8

00009d08 <gen_load_prism_llprefixlen>:
    9d08:	push	{r4, r5, r6, r7, fp, lr}
    9d0c:	add	fp, sp, #16
    9d10:	ldr	r0, [pc, #288]	; 9e38 <gen_load_prism_llprefixlen+0x130>
    9d14:	add	r0, pc, r0
    9d18:	mov	r7, #1
    9d1c:	str	r7, [r0]
    9d20:	ldr	r0, [pc, #276]	; 9e3c <gen_load_prism_llprefixlen+0x134>
    9d24:	ldr	r0, [pc, r0]
    9d28:	cmn	r0, #1
    9d2c:	moveq	r4, #0
    9d30:	moveq	r0, r4
    9d34:	popeq	{r4, r5, r6, r7, fp, pc}
    9d38:	mov	r0, #32
    9d3c:	bl	7988 <new_stmt>
    9d40:	mov	r4, r0
    9d44:	mov	r0, #0
    9d48:	str	r0, [r4, #12]
    9d4c:	mov	r0, #84	; 0x54
    9d50:	bl	7988 <new_stmt>
    9d54:	mov	r1, r0
    9d58:	movw	r0, #61440	; 0xf000
    9d5c:	movt	r0, #65535	; 0xffff
    9d60:	str	r0, [r1, #12]
    9d64:	mov	r0, r4
    9d68:	bl	750c <sf_append>
    9d6c:	mov	r0, #21
    9d70:	bl	7988 <new_stmt>
    9d74:	mov	r5, r0
    9d78:	movw	r0, #4096	; 0x1000
    9d7c:	movt	r0, #32801	; 0x8021
    9d80:	str	r0, [r5, #12]
    9d84:	mov	r0, r4
    9d88:	mov	r1, r5
    9d8c:	bl	750c <sf_append>
    9d90:	mov	r0, #32
    9d94:	bl	7988 <new_stmt>
    9d98:	mov	r6, r0
    9d9c:	mov	r0, #4
    9da0:	str	r0, [r6, #12]
    9da4:	mov	r0, r4
    9da8:	mov	r1, r6
    9dac:	bl	750c <sf_append>
    9db0:	str	r6, [r5, #4]
    9db4:	mov	r0, #5
    9db8:	bl	7988 <new_stmt>
    9dbc:	mov	r6, r0
    9dc0:	str	r7, [r0, #12]
    9dc4:	mov	r0, r4
    9dc8:	mov	r1, r6
    9dcc:	bl	750c <sf_append>
    9dd0:	mov	r0, #0
    9dd4:	bl	7988 <new_stmt>
    9dd8:	mov	r7, r0
    9ddc:	mov	r0, #144	; 0x90
    9de0:	str	r0, [r7, #12]
    9de4:	mov	r0, r4
    9de8:	mov	r1, r7
    9dec:	bl	750c <sf_append>
    9df0:	str	r7, [r5, #8]
    9df4:	mov	r0, #2
    9df8:	bl	7988 <new_stmt>
    9dfc:	mov	r5, r0
    9e00:	ldr	r0, [pc, #56]	; 9e40 <gen_load_prism_llprefixlen+0x138>
    9e04:	ldr	r0, [pc, r0]
    9e08:	str	r0, [r5, #12]
    9e0c:	mov	r0, r4
    9e10:	mov	r1, r5
    9e14:	bl	750c <sf_append>
    9e18:	str	r5, [r6, #8]
    9e1c:	mov	r0, #7
    9e20:	bl	7988 <new_stmt>
    9e24:	mov	r1, r0
    9e28:	mov	r0, r4
    9e2c:	bl	750c <sf_append>
    9e30:	mov	r0, r4
    9e34:	pop	{r4, r5, r6, r7, fp, pc}
    9e38:	.word	0x00026e00
    9e3c:	.word	0x00026950
    9e40:	.word	0x00026870

00009e44 <gen_load_avs_llprefixlen>:
    9e44:	push	{r4, sl, fp, lr}
    9e48:	add	fp, sp, #8
    9e4c:	ldr	r0, [pc, #96]	; 9eb4 <gen_load_avs_llprefixlen+0x70>
    9e50:	ldr	r0, [pc, r0]
    9e54:	cmn	r0, #1
    9e58:	moveq	r4, #0
    9e5c:	moveq	r0, r4
    9e60:	popeq	{r4, sl, fp, pc}
    9e64:	mov	r0, #32
    9e68:	bl	7988 <new_stmt>
    9e6c:	mov	r4, r0
    9e70:	mov	r0, #4
    9e74:	str	r0, [r4, #12]
    9e78:	mov	r0, #2
    9e7c:	bl	7988 <new_stmt>
    9e80:	mov	r1, r0
    9e84:	ldr	r0, [pc, #44]	; 9eb8 <gen_load_avs_llprefixlen+0x74>
    9e88:	ldr	r0, [pc, r0]
    9e8c:	str	r0, [r1, #12]
    9e90:	mov	r0, r4
    9e94:	bl	750c <sf_append>
    9e98:	mov	r0, #7
    9e9c:	bl	7988 <new_stmt>
    9ea0:	mov	r1, r0
    9ea4:	mov	r0, r4
    9ea8:	bl	750c <sf_append>
    9eac:	mov	r0, r4
    9eb0:	pop	{r4, sl, fp, pc}
    9eb4:	.word	0x00026824
    9eb8:	.word	0x000267ec

00009ebc <gen_load_radiotap_llprefixlen>:
    9ebc:	push	{r4, r5, fp, lr}
    9ec0:	add	fp, sp, #8
    9ec4:	ldr	r0, [pc, #200]	; 9f94 <gen_load_radiotap_llprefixlen+0xd8>
    9ec8:	ldr	r0, [pc, r0]
    9ecc:	cmn	r0, #1
    9ed0:	moveq	r4, #0
    9ed4:	moveq	r0, r4
    9ed8:	popeq	{r4, r5, fp, pc}
    9edc:	mov	r0, #48	; 0x30
    9ee0:	bl	7988 <new_stmt>
    9ee4:	mov	r4, r0
    9ee8:	mov	r0, #3
    9eec:	str	r0, [r4, #12]
    9ef0:	mov	r0, #100	; 0x64
    9ef4:	bl	7988 <new_stmt>
    9ef8:	mov	r5, r0
    9efc:	mov	r0, r4
    9f00:	mov	r1, r5
    9f04:	bl	750c <sf_append>
    9f08:	mov	r0, #8
    9f0c:	str	r0, [r5, #12]
    9f10:	mov	r0, #7
    9f14:	bl	7988 <new_stmt>
    9f18:	mov	r1, r0
    9f1c:	mov	r0, r4
    9f20:	bl	750c <sf_append>
    9f24:	mov	r0, #48	; 0x30
    9f28:	bl	7988 <new_stmt>
    9f2c:	mov	r5, r0
    9f30:	mov	r0, r4
    9f34:	mov	r1, r5
    9f38:	bl	750c <sf_append>
    9f3c:	mov	r0, #2
    9f40:	str	r0, [r5, #12]
    9f44:	mov	r0, #76	; 0x4c
    9f48:	bl	7988 <new_stmt>
    9f4c:	mov	r1, r0
    9f50:	mov	r0, r4
    9f54:	bl	750c <sf_append>
    9f58:	mov	r0, #2
    9f5c:	bl	7988 <new_stmt>
    9f60:	mov	r1, r0
    9f64:	ldr	r0, [pc, #44]	; 9f98 <gen_load_radiotap_llprefixlen+0xdc>
    9f68:	ldr	r0, [pc, r0]
    9f6c:	str	r0, [r1, #12]
    9f70:	mov	r0, r4
    9f74:	bl	750c <sf_append>
    9f78:	mov	r0, #7
    9f7c:	bl	7988 <new_stmt>
    9f80:	mov	r1, r0
    9f84:	mov	r0, r4
    9f88:	bl	750c <sf_append>
    9f8c:	mov	r0, r4
    9f90:	pop	{r4, r5, fp, pc}
    9f94:	.word	0x000267ac
    9f98:	.word	0x0002670c

00009f9c <gen_load_ppi_llprefixlen>:
    9f9c:	push	{r4, r5, fp, lr}
    9fa0:	add	fp, sp, #8
    9fa4:	ldr	r0, [pc, #200]	; a074 <gen_load_ppi_llprefixlen+0xd8>
    9fa8:	ldr	r0, [pc, r0]
    9fac:	cmn	r0, #1
    9fb0:	moveq	r4, #0
    9fb4:	moveq	r0, r4
    9fb8:	popeq	{r4, r5, fp, pc}
    9fbc:	mov	r0, #48	; 0x30
    9fc0:	bl	7988 <new_stmt>
    9fc4:	mov	r4, r0
    9fc8:	mov	r0, #3
    9fcc:	str	r0, [r4, #12]
    9fd0:	mov	r0, #100	; 0x64
    9fd4:	bl	7988 <new_stmt>
    9fd8:	mov	r5, r0
    9fdc:	mov	r0, r4
    9fe0:	mov	r1, r5
    9fe4:	bl	750c <sf_append>
    9fe8:	mov	r0, #8
    9fec:	str	r0, [r5, #12]
    9ff0:	mov	r0, #7
    9ff4:	bl	7988 <new_stmt>
    9ff8:	mov	r1, r0
    9ffc:	mov	r0, r4
    a000:	bl	750c <sf_append>
    a004:	mov	r0, #48	; 0x30
    a008:	bl	7988 <new_stmt>
    a00c:	mov	r5, r0
    a010:	mov	r0, r4
    a014:	mov	r1, r5
    a018:	bl	750c <sf_append>
    a01c:	mov	r0, #2
    a020:	str	r0, [r5, #12]
    a024:	mov	r0, #76	; 0x4c
    a028:	bl	7988 <new_stmt>
    a02c:	mov	r1, r0
    a030:	mov	r0, r4
    a034:	bl	750c <sf_append>
    a038:	mov	r0, #2
    a03c:	bl	7988 <new_stmt>
    a040:	mov	r1, r0
    a044:	ldr	r0, [pc, #44]	; a078 <gen_load_ppi_llprefixlen+0xdc>
    a048:	ldr	r0, [pc, r0]
    a04c:	str	r0, [r1, #12]
    a050:	mov	r0, r4
    a054:	bl	750c <sf_append>
    a058:	mov	r0, #7
    a05c:	bl	7988 <new_stmt>
    a060:	mov	r1, r0
    a064:	mov	r0, r4
    a068:	bl	750c <sf_append>
    a06c:	mov	r0, r4
    a070:	pop	{r4, r5, fp, pc}
    a074:	.word	0x000266cc
    a078:	.word	0x0002662c

0000a07c <gen_load_802_11_header_len>:
    a07c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a080:	add	fp, sp, #28
    a084:	sub	sp, sp, #4
    a088:	mov	r5, r0
    a08c:	ldr	r0, [pc, #760]	; a38c <gen_load_802_11_header_len+0x310>
    a090:	ldr	r0, [pc, r0]
    a094:	cmn	r0, #1
    a098:	beq	a380 <gen_load_802_11_header_len+0x304>
    a09c:	mov	r8, r1
    a0a0:	ldr	r0, [pc, #744]	; a390 <gen_load_802_11_header_len+0x314>
    a0a4:	add	r0, pc, r0
    a0a8:	mov	r1, #1
    a0ac:	str	r1, [r0]
    a0b0:	cmp	r5, #0
    a0b4:	bne	a0cc <gen_load_802_11_header_len+0x50>
    a0b8:	mov	r0, #1
    a0bc:	bl	7988 <new_stmt>
    a0c0:	mov	r5, r0
    a0c4:	mov	r0, #0
    a0c8:	str	r0, [r5, #12]
    a0cc:	mov	r0, #135	; 0x87
    a0d0:	bl	7988 <new_stmt>
    a0d4:	mov	r1, r0
    a0d8:	mov	r0, r5
    a0dc:	bl	750c <sf_append>
    a0e0:	mov	sl, #4
    a0e4:	mov	r0, #4
    a0e8:	bl	7988 <new_stmt>
    a0ec:	mov	r1, r0
    a0f0:	mov	r0, #24
    a0f4:	str	r0, [r1, #12]
    a0f8:	mov	r0, r5
    a0fc:	bl	750c <sf_append>
    a100:	mov	r9, #2
    a104:	mov	r0, #2
    a108:	bl	7988 <new_stmt>
    a10c:	mov	r1, r0
    a110:	ldr	r0, [pc, #636]	; a394 <gen_load_802_11_header_len+0x318>
    a114:	ldr	r0, [pc, r0]
    a118:	str	r0, [r1, #12]
    a11c:	mov	r0, r5
    a120:	bl	750c <sf_append>
    a124:	mov	r0, #80	; 0x50
    a128:	bl	7988 <new_stmt>
    a12c:	mov	r1, r0
    a130:	mov	r0, #0
    a134:	str	r0, [r1, #12]
    a138:	mov	r0, r5
    a13c:	bl	750c <sf_append>
    a140:	mov	r0, #69	; 0x45
    a144:	bl	7988 <new_stmt>
    a148:	mov	r4, r0
    a14c:	mov	r0, #8
    a150:	str	r0, [r4, #12]
    a154:	mov	r0, r5
    a158:	mov	r1, r4
    a15c:	bl	750c <sf_append>
    a160:	mov	r0, #69	; 0x45
    a164:	bl	7988 <new_stmt>
    a168:	mov	r7, r0
    a16c:	str	r0, [r4, #4]
    a170:	str	sl, [r0, #12]
    a174:	mov	r0, r5
    a178:	mov	r1, r7
    a17c:	bl	750c <sf_append>
    a180:	str	r8, [r4, #8]
    a184:	str	r8, [r7, #4]
    a188:	mov	r0, #69	; 0x45
    a18c:	bl	7988 <new_stmt>
    a190:	mov	r6, r0
    a194:	str	r0, [r7, #8]
    a198:	mov	r0, #128	; 0x80
    a19c:	str	r0, [r6, #12]
    a1a0:	mov	r0, r5
    a1a4:	mov	r1, r6
    a1a8:	bl	750c <sf_append>
    a1ac:	mov	r0, #96	; 0x60
    a1b0:	bl	7988 <new_stmt>
    a1b4:	mov	r1, r0
    a1b8:	str	r0, [r6, #4]
    a1bc:	ldr	r0, [pc, #468]	; a398 <gen_load_802_11_header_len+0x31c>
    a1c0:	ldr	r0, [pc, r0]
    a1c4:	str	r0, [r1, #12]
    a1c8:	mov	r0, r5
    a1cc:	bl	750c <sf_append>
    a1d0:	mov	r0, #4
    a1d4:	bl	7988 <new_stmt>
    a1d8:	mov	r1, r0
    a1dc:	str	r9, [r0, #12]
    a1e0:	mov	r0, r5
    a1e4:	bl	750c <sf_append>
    a1e8:	mov	r0, #2
    a1ec:	bl	7988 <new_stmt>
    a1f0:	mov	r1, r0
    a1f4:	ldr	r0, [pc, #416]	; a39c <gen_load_802_11_header_len+0x320>
    a1f8:	ldr	r0, [pc, r0]
    a1fc:	str	r0, [r1, #12]
    a200:	mov	r0, r5
    a204:	bl	750c <sf_append>
    a208:	ldr	r0, [pc, #400]	; a3a0 <gen_load_802_11_header_len+0x324>
    a20c:	ldr	r0, [pc, r0]
    a210:	cmp	r0, #127	; 0x7f
    a214:	bne	a37c <gen_load_802_11_header_len+0x300>
    a218:	mov	r9, #32
    a21c:	mov	r0, #32
    a220:	bl	7988 <new_stmt>
    a224:	mov	r1, r0
    a228:	str	r0, [r6, #8]
    a22c:	str	sl, [r0, #12]
    a230:	mov	r0, r5
    a234:	bl	750c <sf_append>
    a238:	mov	r0, #69	; 0x45
    a23c:	bl	7988 <new_stmt>
    a240:	mov	r6, r0
    a244:	mov	r0, #33554432	; 0x2000000
    a248:	str	r0, [r6, #12]
    a24c:	mov	r0, r5
    a250:	mov	r1, r6
    a254:	bl	750c <sf_append>
    a258:	str	r8, [r6, #8]
    a25c:	mov	r0, #69	; 0x45
    a260:	bl	7988 <new_stmt>
    a264:	mov	r4, r0
    a268:	str	r0, [r6, #4]
    a26c:	mov	r0, #16777216	; 0x1000000
    a270:	str	r0, [r4, #12]
    a274:	mov	r0, r5
    a278:	mov	r1, r4
    a27c:	bl	750c <sf_append>
    a280:	mov	r0, #48	; 0x30
    a284:	bl	7988 <new_stmt>
    a288:	mov	r1, r0
    a28c:	str	r0, [r4, #4]
    a290:	mov	r0, #16
    a294:	str	r0, [r1, #12]
    a298:	mov	r0, r5
    a29c:	bl	750c <sf_append>
    a2a0:	mov	r0, #69	; 0x45
    a2a4:	bl	7988 <new_stmt>
    a2a8:	mov	r7, r0
    a2ac:	str	r9, [r0, #12]
    a2b0:	mov	r0, r5
    a2b4:	mov	r1, r7
    a2b8:	bl	750c <sf_append>
    a2bc:	mov	r0, #48	; 0x30
    a2c0:	bl	7988 <new_stmt>
    a2c4:	mov	r1, r0
    a2c8:	str	r0, [r4, #8]
    a2cc:	mov	r0, #8
    a2d0:	str	r0, [r1, #12]
    a2d4:	mov	r0, r5
    a2d8:	bl	750c <sf_append>
    a2dc:	mov	r0, #69	; 0x45
    a2e0:	bl	7988 <new_stmt>
    a2e4:	mov	r6, r0
    a2e8:	str	r9, [r0, #12]
    a2ec:	mov	r0, r5
    a2f0:	mov	r1, r6
    a2f4:	bl	750c <sf_append>
    a2f8:	mov	r0, #96	; 0x60
    a2fc:	bl	7988 <new_stmt>
    a300:	mov	r4, r0
    a304:	ldr	r0, [pc, #152]	; a3a4 <gen_load_802_11_header_len+0x328>
    a308:	ldr	r0, [pc, r0]
    a30c:	str	r0, [r4, #12]
    a310:	mov	r0, r5
    a314:	mov	r1, r4
    a318:	bl	750c <sf_append>
    a31c:	mov	r0, #4
    a320:	bl	7988 <new_stmt>
    a324:	mov	r1, r0
    a328:	mov	r0, #3
    a32c:	str	r0, [r1, #12]
    a330:	mov	r0, r5
    a334:	bl	750c <sf_append>
    a338:	mov	r0, #84	; 0x54
    a33c:	bl	7988 <new_stmt>
    a340:	mov	r1, r0
    a344:	mvn	r0, #3
    a348:	str	r0, [r1, #12]
    a34c:	mov	r0, r5
    a350:	bl	750c <sf_append>
    a354:	mov	r0, #2
    a358:	bl	7988 <new_stmt>
    a35c:	mov	r1, r0
    a360:	ldr	r0, [pc, #64]	; a3a8 <gen_load_802_11_header_len+0x32c>
    a364:	ldr	r0, [pc, r0]
    a368:	str	r0, [r1, #12]
    a36c:	mov	r0, r5
    a370:	bl	750c <sf_append>
    a374:	stmib	r7, {r4, r8}
    a378:	str	r4, [r6, #4]
    a37c:	str	r8, [r6, #8]
    a380:	mov	r0, r5
    a384:	sub	sp, fp, #28
    a388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a38c:	.word	0x000265e8
    a390:	.word	0x00026a70
    a394:	.word	0x00026564
    a398:	.word	0x000264b8
    a39c:	.word	0x00026480
    a3a0:	.word	0x00026394
    a3a4:	.word	0x00026370
    a3a8:	.word	0x00026314

0000a3ac <gen_mpls_linktype>:
    a3ac:	push	{r4, r5, fp, lr}
    a3b0:	add	fp, sp, #8
    a3b4:	sub	sp, sp, #8
    a3b8:	cmp	r0, #17
    a3bc:	beq	a404 <gen_mpls_linktype+0x58>
    a3c0:	cmp	r0, #2
    a3c4:	bne	a45c <gen_mpls_linktype+0xb0>
    a3c8:	mov	r0, #1
    a3cc:	str	r0, [sp]
    a3d0:	mov	r0, #3
    a3d4:	mvn	r1, #1
    a3d8:	mov	r2, #16
    a3dc:	mov	r3, #1
    a3e0:	bl	83b8 <gen_mcmp>
    a3e4:	mov	r5, r0
    a3e8:	mov	r0, #240	; 0xf0
    a3ec:	str	r0, [sp]
    a3f0:	mov	r0, #3
    a3f4:	mov	r1, #0
    a3f8:	mov	r2, #16
    a3fc:	mov	r3, #64	; 0x40
    a400:	b	a43c <gen_mpls_linktype+0x90>
    a404:	mov	r0, #1
    a408:	str	r0, [sp]
    a40c:	mov	r0, #3
    a410:	mvn	r1, #1
    a414:	mov	r2, #16
    a418:	mov	r3, #1
    a41c:	bl	83b8 <gen_mcmp>
    a420:	mov	r5, r0
    a424:	mov	r0, #240	; 0xf0
    a428:	str	r0, [sp]
    a42c:	mov	r0, #3
    a430:	mov	r1, #0
    a434:	mov	r2, #16
    a438:	mov	r3, #96	; 0x60
    a43c:	bl	83b8 <gen_mcmp>
    a440:	mov	r4, r0
    a444:	mov	r0, r5
    a448:	mov	r1, r4
    a44c:	bl	314c <sf_gen_and>
    a450:	mov	r0, r4
    a454:	sub	sp, fp, #8
    a458:	pop	{r4, r5, fp, pc}
    a45c:	bl	fc4 <abort@plt>

0000a460 <ethertype_to_ppptype>:
    a460:	cmp	r0, #2048	; 0x800
    a464:	bge	a488 <ethertype_to_ppptype+0x28>
    a468:	cmp	r0, #253	; 0xfd
    a46c:	bgt	a4b4 <ethertype_to_ppptype+0x54>
    a470:	cmp	r0, #66	; 0x42
    a474:	beq	a4f4 <ethertype_to_ppptype+0x94>
    a478:	cmp	r0, #224	; 0xe0
    a47c:	moveq	r0, #43	; 0x2b
    a480:	bxeq	lr
    a484:	bx	lr
    a488:	movw	r1, #32922	; 0x809a
    a48c:	cmp	r0, r1
    a490:	bgt	a4d0 <ethertype_to_ppptype+0x70>
    a494:	cmp	r0, #2048	; 0x800
    a498:	moveq	r0, #33	; 0x21
    a49c:	bxeq	lr
    a4a0:	movw	r1, #24579	; 0x6003
    a4a4:	cmp	r0, r1
    a4a8:	moveq	r0, #39	; 0x27
    a4ac:	bxeq	lr
    a4b0:	bx	lr
    a4b4:	cmp	r0, #254	; 0xfe
    a4b8:	moveq	r0, #35	; 0x23
    a4bc:	bxeq	lr
    a4c0:	cmp	r0, #1536	; 0x600
    a4c4:	moveq	r0, #37	; 0x25
    a4c8:	bxeq	lr
    a4cc:	bx	lr
    a4d0:	movw	r1, #32923	; 0x809b
    a4d4:	cmp	r0, r1
    a4d8:	moveq	r0, #41	; 0x29
    a4dc:	bxeq	lr
    a4e0:	movw	r1, #34525	; 0x86dd
    a4e4:	cmp	r0, r1
    a4e8:	moveq	r0, #87	; 0x57
    a4ec:	bxeq	lr
    a4f0:	bx	lr
    a4f4:	mov	r0, #49	; 0x31
    a4f8:	bx	lr

0000a4fc <gen_ether_linktype>:
    a4fc:	push	{r4, r5, r6, sl, fp, lr}
    a500:	add	fp, sp, #16
    a504:	mov	r4, r0
    a508:	cmp	r0, #253	; 0xfd
    a50c:	bgt	a574 <gen_ether_linktype+0x78>
    a510:	cmp	r4, #6
    a514:	beq	a528 <gen_ether_linktype+0x2c>
    a518:	cmp	r4, #224	; 0xe0
    a51c:	beq	a648 <gen_ether_linktype+0x14c>
    a520:	cmp	r4, #240	; 0xf0
    a524:	bne	a600 <gen_ether_linktype+0x104>
    a528:	ldr	r1, [pc, #472]	; a708 <gen_ether_linktype+0x20c>
    a52c:	ldr	r1, [pc, r1]
    a530:	mov	r0, #1
    a534:	mov	r2, #8
    a538:	movw	r3, #1500	; 0x5dc
    a53c:	bl	7fa4 <gen_cmp_gt>
    a540:	mov	r6, r0
    a544:	bl	3278 <sf_gen_not>
    a548:	orr	r3, r4, r4, lsl #8
    a54c:	mov	r0, #2
    a550:	mov	r1, #0
    a554:	mov	r2, #8
    a558:	bl	450c <gen_cmp>
    a55c:	mov	r5, r0
    a560:	mov	r0, r6
    a564:	mov	r1, r5
    a568:	bl	314c <sf_gen_and>
    a56c:	mov	r0, r5
    a570:	pop	{r4, r5, r6, sl, fp, pc}
    a574:	movw	r0, #33011	; 0x80f3
    a578:	cmp	r4, r0
    a57c:	movwne	r0, #32923	; 0x809b
    a580:	cmpne	r4, r0
    a584:	bne	a5f8 <gen_ether_linktype+0xfc>
    a588:	ldr	r1, [pc, #388]	; a714 <gen_ether_linktype+0x218>
    a58c:	ldr	r1, [pc, r1]
    a590:	mov	r0, #1
    a594:	mov	r2, #8
    a598:	movw	r3, #1500	; 0x5dc
    a59c:	bl	7fa4 <gen_cmp_gt>
    a5a0:	mov	r6, r0
    a5a4:	bl	3278 <sf_gen_not>
    a5a8:	movw	r0, #32923	; 0x809b
    a5ac:	cmp	r4, r0
    a5b0:	bne	a5c4 <gen_ether_linktype+0xc8>
    a5b4:	movw	r0, #7
    a5b8:	movt	r0, #8
    a5bc:	movw	r1, #32923	; 0x809b
    a5c0:	b	a5cc <gen_ether_linktype+0xd0>
    a5c4:	mov	r0, #0
    a5c8:	movw	r1, #33011	; 0x80f3
    a5cc:	bl	aa98 <gen_snap>
    a5d0:	mov	r5, r0
    a5d4:	mov	r0, r6
    a5d8:	mov	r1, r5
    a5dc:	bl	314c <sf_gen_and>
    a5e0:	ldr	r1, [pc, #304]	; a718 <gen_ether_linktype+0x21c>
    a5e4:	ldr	r1, [pc, r1]
    a5e8:	mov	r0, #1
    a5ec:	mov	r2, #8
    a5f0:	mov	r3, r4
    a5f4:	b	a6d8 <gen_ether_linktype+0x1dc>
    a5f8:	cmp	r4, #254	; 0xfe
    a5fc:	beq	a528 <gen_ether_linktype+0x2c>
    a600:	ldr	r1, [pc, #248]	; a700 <gen_ether_linktype+0x204>
    a604:	ldr	r1, [pc, r1]
    a608:	movw	r0, #1500	; 0x5dc
    a60c:	cmp	r4, r0
    a610:	bgt	a6ec <gen_ether_linktype+0x1f0>
    a614:	mov	r0, #1
    a618:	mov	r2, #8
    a61c:	movw	r3, #1500	; 0x5dc
    a620:	bl	7fa4 <gen_cmp_gt>
    a624:	mov	r6, r0
    a628:	bl	3278 <sf_gen_not>
    a62c:	ldr	r0, [pc, #208]	; a704 <gen_ether_linktype+0x208>
    a630:	ldr	r0, [pc, r0]
    a634:	add	r1, r0, #2
    a638:	mov	r0, #1
    a63c:	mov	r2, #16
    a640:	mov	r3, r4
    a644:	b	a558 <gen_ether_linktype+0x5c>
    a648:	mov	r0, #2
    a64c:	mov	r1, #0
    a650:	mov	r2, #16
    a654:	mov	r3, #224	; 0xe0
    a658:	bl	450c <gen_cmp>
    a65c:	mov	r4, r0
    a660:	mov	r0, #2
    a664:	mov	r1, #0
    a668:	mov	r2, #8
    a66c:	movw	r3, #65535	; 0xffff
    a670:	bl	450c <gen_cmp>
    a674:	mov	r5, r0
    a678:	mov	r0, r4
    a67c:	mov	r1, r5
    a680:	bl	3224 <sf_gen_or>
    a684:	mov	r0, #0
    a688:	movw	r1, #33079	; 0x8137
    a68c:	bl	aa98 <gen_snap>
    a690:	mov	r1, r5
    a694:	bl	3224 <sf_gen_or>
    a698:	ldr	r1, [pc, #108]	; a70c <gen_ether_linktype+0x210>
    a69c:	ldr	r1, [pc, r1]
    a6a0:	mov	r0, #1
    a6a4:	mov	r2, #8
    a6a8:	movw	r3, #1500	; 0x5dc
    a6ac:	bl	7fa4 <gen_cmp_gt>
    a6b0:	mov	r4, r0
    a6b4:	bl	3278 <sf_gen_not>
    a6b8:	mov	r0, r4
    a6bc:	mov	r1, r5
    a6c0:	bl	314c <sf_gen_and>
    a6c4:	ldr	r1, [pc, #68]	; a710 <gen_ether_linktype+0x214>
    a6c8:	ldr	r1, [pc, r1]
    a6cc:	mov	r0, #1
    a6d0:	mov	r2, #8
    a6d4:	movw	r3, #33079	; 0x8137
    a6d8:	bl	450c <gen_cmp>
    a6dc:	mov	r1, r5
    a6e0:	bl	3224 <sf_gen_or>
    a6e4:	mov	r0, r5
    a6e8:	pop	{r4, r5, r6, sl, fp, pc}
    a6ec:	mov	r0, #1
    a6f0:	mov	r2, #8
    a6f4:	mov	r3, r4
    a6f8:	pop	{r4, r5, r6, sl, fp, lr}
    a6fc:	b	450c <gen_cmp>
    a700:	.word	0x00025fa4
    a704:	.word	0x00025f78
    a708:	.word	0x0002607c
    a70c:	.word	0x00025f0c
    a710:	.word	0x00025ee0
    a714:	.word	0x0002601c
    a718:	.word	0x00025fc4

0000a71c <gen_check_802_11_data_frame>:
    a71c:	push	{r4, r5, r6, sl, fp, lr}
    a720:	add	fp, sp, #16
    a724:	mov	r0, #1
    a728:	mov	r1, #0
    a72c:	mov	r2, #16
    a730:	bl	87cc <gen_load_a>
    a734:	mov	r4, r0
    a738:	mov	r0, #69	; 0x45
    a73c:	bl	7c58 <new_block>
    a740:	mov	r5, r0
    a744:	mov	r0, #8
    a748:	str	r0, [r5, #20]
    a74c:	str	r4, [r5, #4]
    a750:	mov	r0, #1
    a754:	mov	r1, #0
    a758:	mov	r2, #16
    a75c:	bl	87cc <gen_load_a>
    a760:	mov	r4, r0
    a764:	mov	r0, #69	; 0x45
    a768:	bl	7c58 <new_block>
    a76c:	mov	r6, r0
    a770:	mov	r0, #4
    a774:	str	r0, [r6, #20]
    a778:	str	r4, [r6, #4]
    a77c:	mov	r0, r6
    a780:	bl	3278 <sf_gen_not>
    a784:	mov	r0, r6
    a788:	mov	r1, r5
    a78c:	bl	314c <sf_gen_and>
    a790:	mov	r0, r5
    a794:	pop	{r4, r5, r6, sl, fp, pc}

0000a798 <gen_llc_linktype>:
    a798:	mov	r3, r0
    a79c:	cmp	r0, #239	; 0xef
    a7a0:	ble	a7c4 <gen_llc_linktype+0x2c>
    a7a4:	cmp	r3, #240	; 0xf0
    a7a8:	beq	a7e8 <gen_llc_linktype+0x50>
    a7ac:	movw	r0, #32923	; 0x809b
    a7b0:	cmp	r3, r0
    a7b4:	beq	a7fc <gen_llc_linktype+0x64>
    a7b8:	cmp	r3, #254	; 0xfe
    a7bc:	beq	a7e8 <gen_llc_linktype+0x50>
    a7c0:	b	a80c <gen_llc_linktype+0x74>
    a7c4:	cmp	r3, #6
    a7c8:	beq	a7e8 <gen_llc_linktype+0x50>
    a7cc:	cmp	r3, #224	; 0xe0
    a7d0:	bne	a80c <gen_llc_linktype+0x74>
    a7d4:	mov	r0, #2
    a7d8:	mov	r1, #0
    a7dc:	mov	r2, #16
    a7e0:	mov	r3, #224	; 0xe0
    a7e4:	b	450c <gen_cmp>
    a7e8:	orr	r3, r3, r3, lsl #8
    a7ec:	mov	r0, #2
    a7f0:	mov	r1, #0
    a7f4:	mov	r2, #8
    a7f8:	b	450c <gen_cmp>
    a7fc:	movw	r0, #7
    a800:	movt	r0, #8
    a804:	movw	r1, #32923	; 0x809b
    a808:	b	aa98 <gen_snap>
    a80c:	movw	r0, #1500	; 0x5dc
    a810:	cmp	r3, r0
    a814:	mov	r0, #2
    a818:	movgt	r1, #6
    a81c:	movgt	r2, #8
    a820:	movle	r1, #0
    a824:	movle	r2, #16
    a828:	b	450c <gen_cmp>

0000a82c <gen_linux_sll_linktype>:
    a82c:	push	{r4, r5, r6, sl, fp, lr}
    a830:	add	fp, sp, #16
    a834:	mov	r4, r0
    a838:	cmp	r0, #253	; 0xfd
    a83c:	bgt	a8a0 <gen_linux_sll_linktype+0x74>
    a840:	cmp	r4, #6
    a844:	beq	a858 <gen_linux_sll_linktype+0x2c>
    a848:	cmp	r4, #224	; 0xe0
    a84c:	beq	a968 <gen_linux_sll_linktype+0x13c>
    a850:	cmp	r4, #240	; 0xf0
    a854:	bne	a928 <gen_linux_sll_linktype+0xfc>
    a858:	ldr	r1, [pc, #448]	; aa20 <gen_linux_sll_linktype+0x1f4>
    a85c:	ldr	r1, [pc, r1]
    a860:	mov	r0, #1
    a864:	mov	r2, #8
    a868:	mov	r3, #4
    a86c:	bl	450c <gen_cmp>
    a870:	mov	r6, r0
    a874:	orr	r3, r4, r4, lsl #8
    a878:	mov	r0, #2
    a87c:	mov	r1, #0
    a880:	mov	r2, #8
    a884:	bl	450c <gen_cmp>
    a888:	mov	r5, r0
    a88c:	mov	r0, r6
    a890:	mov	r1, r5
    a894:	bl	314c <sf_gen_and>
    a898:	mov	r0, r5
    a89c:	pop	{r4, r5, r6, sl, fp, pc}
    a8a0:	movw	r0, #33011	; 0x80f3
    a8a4:	cmp	r4, r0
    a8a8:	movwne	r0, #32923	; 0x809b
    a8ac:	cmpne	r4, r0
    a8b0:	bne	a920 <gen_linux_sll_linktype+0xf4>
    a8b4:	ldr	r1, [pc, #372]	; aa30 <gen_linux_sll_linktype+0x204>
    a8b8:	ldr	r1, [pc, r1]
    a8bc:	mov	r0, #1
    a8c0:	mov	r2, #8
    a8c4:	mov	r3, #4
    a8c8:	bl	450c <gen_cmp>
    a8cc:	mov	r6, r0
    a8d0:	movw	r0, #32923	; 0x809b
    a8d4:	cmp	r4, r0
    a8d8:	bne	a8ec <gen_linux_sll_linktype+0xc0>
    a8dc:	movw	r0, #7
    a8e0:	movt	r0, #8
    a8e4:	movw	r1, #32923	; 0x809b
    a8e8:	b	a8f4 <gen_linux_sll_linktype+0xc8>
    a8ec:	mov	r0, #0
    a8f0:	movw	r1, #33011	; 0x80f3
    a8f4:	bl	aa98 <gen_snap>
    a8f8:	mov	r5, r0
    a8fc:	mov	r0, r6
    a900:	mov	r1, r5
    a904:	bl	314c <sf_gen_and>
    a908:	ldr	r1, [pc, #292]	; aa34 <gen_linux_sll_linktype+0x208>
    a90c:	ldr	r1, [pc, r1]
    a910:	mov	r0, #1
    a914:	mov	r2, #8
    a918:	mov	r3, r4
    a91c:	b	a9f0 <gen_linux_sll_linktype+0x1c4>
    a920:	cmp	r4, #254	; 0xfe
    a924:	beq	a858 <gen_linux_sll_linktype+0x2c>
    a928:	ldr	r1, [pc, #232]	; aa18 <gen_linux_sll_linktype+0x1ec>
    a92c:	ldr	r1, [pc, r1]
    a930:	movw	r0, #1500	; 0x5dc
    a934:	cmp	r4, r0
    a938:	bgt	aa04 <gen_linux_sll_linktype+0x1d8>
    a93c:	mov	r0, #1
    a940:	mov	r2, #8
    a944:	mov	r3, #4
    a948:	bl	450c <gen_cmp>
    a94c:	mov	r6, r0
    a950:	ldr	r1, [pc, #196]	; aa1c <gen_linux_sll_linktype+0x1f0>
    a954:	ldr	r1, [pc, r1]
    a958:	mov	r0, #1
    a95c:	mov	r2, #16
    a960:	mov	r3, r4
    a964:	b	a884 <gen_linux_sll_linktype+0x58>
    a968:	mov	r0, #2
    a96c:	mov	r1, #0
    a970:	mov	r2, #16
    a974:	mov	r3, #224	; 0xe0
    a978:	bl	450c <gen_cmp>
    a97c:	mov	r4, r0
    a980:	mov	r0, #0
    a984:	movw	r1, #33079	; 0x8137
    a988:	bl	aa98 <gen_snap>
    a98c:	mov	r5, r0
    a990:	mov	r0, r4
    a994:	mov	r1, r5
    a998:	bl	3224 <sf_gen_or>
    a99c:	ldr	r1, [pc, #128]	; aa24 <gen_linux_sll_linktype+0x1f8>
    a9a0:	ldr	r1, [pc, r1]
    a9a4:	mov	r0, #1
    a9a8:	mov	r2, #8
    a9ac:	mov	r3, #4
    a9b0:	bl	450c <gen_cmp>
    a9b4:	mov	r1, r5
    a9b8:	bl	314c <sf_gen_and>
    a9bc:	ldr	r1, [pc, #100]	; aa28 <gen_linux_sll_linktype+0x1fc>
    a9c0:	ldr	r1, [pc, r1]
    a9c4:	mov	r0, #1
    a9c8:	mov	r2, #8
    a9cc:	mov	r3, #1
    a9d0:	bl	450c <gen_cmp>
    a9d4:	mov	r1, r5
    a9d8:	bl	3224 <sf_gen_or>
    a9dc:	ldr	r1, [pc, #72]	; aa2c <gen_linux_sll_linktype+0x200>
    a9e0:	ldr	r1, [pc, r1]
    a9e4:	mov	r0, #1
    a9e8:	mov	r2, #8
    a9ec:	movw	r3, #33079	; 0x8137
    a9f0:	bl	450c <gen_cmp>
    a9f4:	mov	r1, r5
    a9f8:	bl	3224 <sf_gen_or>
    a9fc:	mov	r0, r5
    aa00:	pop	{r4, r5, r6, sl, fp, pc}
    aa04:	mov	r0, #1
    aa08:	mov	r2, #8
    aa0c:	mov	r3, r4
    aa10:	pop	{r4, r5, r6, sl, fp, lr}
    aa14:	b	450c <gen_cmp>
    aa18:	.word	0x00025c7c
    aa1c:	.word	0x00025c58
    aa20:	.word	0x00025d4c
    aa24:	.word	0x00025c08
    aa28:	.word	0x00025be8
    aa2c:	.word	0x00025bc8
    aa30:	.word	0x00025cf0
    aa34:	.word	0x00025c9c

0000aa38 <gen_false>:
    aa38:	mov	r0, #0
    aa3c:	b	ac2c <gen_uncond>

0000aa40 <gen_true>:
    aa40:	mov	r0, #1
    aa44:	b	ac2c <gen_uncond>

0000aa48 <gen_ipnet_linktype>:
    aa48:	movw	r1, #34525	; 0x86dd
    aa4c:	cmp	r0, r1
    aa50:	beq	aa74 <gen_ipnet_linktype+0x2c>
    aa54:	cmp	r0, #2048	; 0x800
    aa58:	bne	aa8c <gen_ipnet_linktype+0x44>
    aa5c:	ldr	r1, [pc, #44]	; aa90 <gen_ipnet_linktype+0x48>
    aa60:	ldr	r1, [pc, r1]
    aa64:	mov	r0, #1
    aa68:	mov	r2, #16
    aa6c:	mov	r3, #2
    aa70:	b	450c <gen_cmp>
    aa74:	ldr	r1, [pc, #24]	; aa94 <gen_ipnet_linktype+0x4c>
    aa78:	ldr	r1, [pc, r1]
    aa7c:	mov	r0, #1
    aa80:	mov	r2, #16
    aa84:	mov	r3, #26
    aa88:	b	450c <gen_cmp>
    aa8c:	b	aa38 <gen_false>
    aa90:	.word	0x00025b48
    aa94:	.word	0x00025b30

0000aa98 <gen_snap>:
    aa98:	push	{fp, lr}
    aa9c:	mov	fp, sp
    aaa0:	sub	sp, sp, #8
    aaa4:	mov	r2, #3
    aaa8:	strb	r2, [sp, #2]
    aaac:	movw	r2, #43690	; 0xaaaa
    aab0:	strh	r2, [sp]
    aab4:	strb	r0, [sp, #5]
    aab8:	strb	r1, [sp, #7]
    aabc:	lsr	r2, r0, #16
    aac0:	strb	r2, [sp, #3]
    aac4:	lsr	r0, r0, #8
    aac8:	strb	r0, [sp, #4]
    aacc:	lsr	r0, r1, #8
    aad0:	strb	r0, [sp, #6]
    aad4:	mov	r3, sp
    aad8:	mov	r0, #2
    aadc:	mov	r1, #0
    aae0:	mov	r2, #8
    aae4:	bl	aaf0 <gen_bcmp>
    aae8:	mov	sp, fp
    aaec:	pop	{fp, pc}

0000aaf0 <gen_bcmp>:
    aaf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aaf4:	add	fp, sp, #28
    aaf8:	sub	sp, sp, #12
    aafc:	mov	sl, r3
    ab00:	mov	r9, r2
    ab04:	mov	r8, r1
    ab08:	mov	r5, r0
    ab0c:	mov	r7, #0
    ab10:	cmp	r2, #4
    ab14:	bcc	ab7c <gen_bcmp+0x8c>
    ab18:	sub	r6, sl, #2
    ab1c:	str	r8, [sp, #8]
    ab20:	sub	r8, r8, #4
    ab24:	mov	r4, #0
    ab28:	str	r9, [sp, #4]
    ab2c:	add	r1, r8, r9
    ab30:	add	r0, r6, r9
    ab34:	ldr	r0, [r0, #-2]
    ab38:	rev	r3, r0
    ab3c:	mov	r0, r5
    ab40:	mov	r2, #0
    ab44:	bl	450c <gen_cmp>
    ab48:	mov	r7, r0
    ab4c:	sub	r9, r9, #4
    ab50:	cmp	r4, #0
    ab54:	beq	ab64 <gen_bcmp+0x74>
    ab58:	mov	r0, r4
    ab5c:	mov	r1, r7
    ab60:	bl	314c <sf_gen_and>
    ab64:	cmp	r9, #3
    ab68:	mov	r4, r7
    ab6c:	bhi	ab2c <gen_bcmp+0x3c>
    ab70:	ldr	r9, [sp, #4]
    ab74:	and	r9, r9, #3
    ab78:	ldr	r8, [sp, #8]
    ab7c:	cmp	r9, #2
    ab80:	bcc	abe8 <gen_bcmp+0xf8>
    ab84:	sub	r6, r9, #2
    ab88:	mov	r0, sl
    ab8c:	ldrb	r1, [r0, r6]!
    ab90:	ldrb	r0, [r0, #1]
    ab94:	orr	r3, r0, r1, lsl #8
    ab98:	add	r1, r8, r6
    ab9c:	mov	r0, r5
    aba0:	mov	r2, #8
    aba4:	bl	450c <gen_cmp>
    aba8:	mov	r4, r0
    abac:	cmp	r7, #0
    abb0:	beq	abc0 <gen_bcmp+0xd0>
    abb4:	mov	r0, r7
    abb8:	mov	r1, r4
    abbc:	bl	314c <sf_gen_and>
    abc0:	sub	r0, r6, #2
    abc4:	cmp	r6, #1
    abc8:	mov	r6, r0
    abcc:	mov	r7, r4
    abd0:	bhi	ab88 <gen_bcmp+0x98>
    abd4:	and	r9, r9, #1
    abd8:	cmp	r9, #1
    abdc:	beq	abf4 <gen_bcmp+0x104>
    abe0:	mov	r5, r4
    abe4:	b	ac20 <gen_bcmp+0x130>
    abe8:	mov	r4, r7
    abec:	cmp	r9, #1
    abf0:	bne	abe0 <gen_bcmp+0xf0>
    abf4:	ldrb	r3, [sl]
    abf8:	mov	r0, r5
    abfc:	mov	r1, r8
    ac00:	mov	r2, #16
    ac04:	bl	450c <gen_cmp>
    ac08:	mov	r5, r0
    ac0c:	cmp	r4, #0
    ac10:	beq	ac20 <gen_bcmp+0x130>
    ac14:	mov	r0, r4
    ac18:	mov	r1, r5
    ac1c:	bl	314c <sf_gen_and>
    ac20:	mov	r0, r5
    ac24:	sub	sp, fp, #28
    ac28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ac2c <gen_uncond>:
    ac2c:	push	{r4, r5, fp, lr}
    ac30:	add	fp, sp, #8
    ac34:	mov	r4, r0
    ac38:	mov	r0, #0
    ac3c:	bl	7988 <new_stmt>
    ac40:	mov	r5, r0
    ac44:	clz	r0, r4
    ac48:	lsr	r0, r0, #5
    ac4c:	str	r0, [r5, #12]
    ac50:	mov	r0, #21
    ac54:	bl	7c58 <new_block>
    ac58:	str	r5, [r0, #4]
    ac5c:	pop	{r4, r5, fp, pc}

0000ac60 <gen_cmp_le>:
    ac60:	push	{fp, lr}
    ac64:	mov	fp, sp
    ac68:	sub	sp, sp, #16
    ac6c:	mov	ip, #1
    ac70:	mov	lr, #32
    ac74:	str	lr, [sp]
    ac78:	str	ip, [sp, #4]
    ac7c:	str	r3, [sp, #8]
    ac80:	mvn	r3, #0
    ac84:	bl	93e8 <gen_ncmp>
    ac88:	mov	sp, fp
    ac8c:	pop	{fp, pc}

0000ac90 <gen_hostop>:
    ac90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    ac94:	add	fp, sp, #24
    ac98:	sub	sp, sp, #8
    ac9c:	cmp	r2, #4
    aca0:	bhi	ada4 <gen_hostop+0x114>
    aca4:	mov	r6, r3
    aca8:	mov	r5, r1
    acac:	mov	r4, r0
    acb0:	ldr	r9, [fp, #12]
    acb4:	ldr	r7, [fp, #8]
    acb8:	add	r0, pc, #4
    acbc:	ldr	r1, [r0, r2, lsl #2]
    acc0:	add	pc, r0, r1
    acc4:	.word	0x00000014
    acc8:	.word	0x000000a0
    accc:	.word	0x0000009c
    acd0:	.word	0x00000014
    acd4:	.word	0x0000005c
    acd8:	stm	sp, {r7, r9}
    acdc:	mov	r0, r4
    ace0:	mov	r1, r5
    ace4:	mov	r2, #1
    ace8:	mov	r3, r6
    acec:	bl	ac90 <gen_hostop>
    acf0:	mov	r8, r0
    acf4:	stm	sp, {r7, r9}
    acf8:	mov	r0, r4
    acfc:	mov	r1, r5
    ad00:	mov	r2, #2
    ad04:	mov	r3, r6
    ad08:	bl	ac90 <gen_hostop>
    ad0c:	mov	r4, r0
    ad10:	mov	r0, r8
    ad14:	mov	r1, r4
    ad18:	bl	3224 <sf_gen_or>
    ad1c:	b	ad98 <gen_hostop+0x108>
    ad20:	stm	sp, {r7, r9}
    ad24:	mov	r0, r4
    ad28:	mov	r1, r5
    ad2c:	mov	r2, #1
    ad30:	mov	r3, r6
    ad34:	bl	ac90 <gen_hostop>
    ad38:	mov	r8, r0
    ad3c:	stm	sp, {r7, r9}
    ad40:	mov	r0, r4
    ad44:	mov	r1, r5
    ad48:	mov	r2, #2
    ad4c:	mov	r3, r6
    ad50:	bl	ac90 <gen_hostop>
    ad54:	mov	r4, r0
    ad58:	mov	r0, r8
    ad5c:	b	ad90 <gen_hostop+0x100>
    ad60:	mov	r7, r9
    ad64:	mov	r0, r6
    ad68:	bl	3a60 <gen_linktype>
    ad6c:	mov	r6, r0
    ad70:	str	r5, [sp]
    ad74:	mov	r0, #3
    ad78:	mov	r1, r7
    ad7c:	mov	r2, #0
    ad80:	mov	r3, r4
    ad84:	bl	83b8 <gen_mcmp>
    ad88:	mov	r4, r0
    ad8c:	mov	r0, r6
    ad90:	mov	r1, r4
    ad94:	bl	314c <sf_gen_and>
    ad98:	mov	r0, r4
    ad9c:	sub	sp, fp, #24
    ada0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ada4:	bl	fc4 <abort@plt>

0000ada8 <gen_dnhostop>:
    ada8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    adac:	add	fp, sp, #28
    adb0:	sub	sp, sp, #12
    adb4:	cmp	r1, #24
    adb8:	bhi	b010 <gen_dnhostop+0x268>
    adbc:	mov	r5, r0
    adc0:	mov	sl, #1
    adc4:	mov	r7, #7
    adc8:	add	r0, pc, #4
    adcc:	ldr	r1, [r0, r1, lsl #2]
    add0:	add	pc, r0, r1
    add4:	.word	0x00000064
    add8:	.word	0x00000094
    addc:	.word	0x0000009c
    ade0:	.word	0x00000064
    ade4:	.word	0x00000204
    ade8:	.word	0x0000023c
    adec:	.word	0x0000023c
    adf0:	.word	0x0000023c
    adf4:	.word	0x0000023c
    adf8:	.word	0x0000023c
    adfc:	.word	0x0000023c
    ae00:	.word	0x0000023c
    ae04:	.word	0x0000023c
    ae08:	.word	0x0000023c
    ae0c:	.word	0x0000023c
    ae10:	.word	0x0000023c
    ae14:	.word	0x0000023c
    ae18:	.word	0x0000023c
    ae1c:	.word	0x0000023c
    ae20:	.word	0x0000023c
    ae24:	.word	0x0000023c
    ae28:	.word	0x0000023c
    ae2c:	.word	0x0000023c
    ae30:	.word	0x0000023c
    ae34:	.word	0x00000240
    ae38:	mov	r0, r5
    ae3c:	mov	r1, #1
    ae40:	bl	ada8 <gen_dnhostop>
    ae44:	mov	r4, r0
    ae48:	mov	r0, r5
    ae4c:	mov	r1, #2
    ae50:	bl	ada8 <gen_dnhostop>
    ae54:	mov	r5, r0
    ae58:	mov	r0, r4
    ae5c:	mov	r1, r5
    ae60:	bl	3224 <sf_gen_or>
    ae64:	b	b004 <gen_dnhostop+0x25c>
    ae68:	mov	sl, #3
    ae6c:	mov	r7, #15
    ae70:	movw	r0, #24579	; 0x6003
    ae74:	bl	3a60 <gen_linktype>
    ae78:	str	r0, [sp, #8]
    ae7c:	movw	r0, #1665	; 0x681
    ae80:	bl	b024 <__bswap_16>
    ae84:	mov	r6, r0
    ae88:	movw	r0, #2047	; 0x7ff
    ae8c:	bl	b024 <__bswap_16>
    ae90:	mov	r9, r0
    ae94:	str	r0, [sp]
    ae98:	mov	r0, #3
    ae9c:	mov	r1, #2
    aea0:	mov	r2, #8
    aea4:	mov	r3, r6
    aea8:	bl	83b8 <gen_mcmp>
    aeac:	mov	r4, r0
    aeb0:	uxth	r0, r5
    aeb4:	bl	b024 <__bswap_16>
    aeb8:	mov	r6, r0
    aebc:	add	r1, r7, #3
    aec0:	mov	r0, #3
    aec4:	mov	r2, #8
    aec8:	mov	r3, r6
    aecc:	bl	450c <gen_cmp>
    aed0:	mov	r5, r0
    aed4:	mov	r0, r4
    aed8:	mov	r1, r5
    aedc:	bl	314c <sf_gen_and>
    aee0:	mov	r8, #7
    aee4:	str	r8, [sp]
    aee8:	mov	r0, #3
    aeec:	mov	r1, #2
    aef0:	mov	r2, #16
    aef4:	mov	r3, #6
    aef8:	bl	83b8 <gen_mcmp>
    aefc:	mov	r4, r0
    af00:	add	r1, r7, #2
    af04:	mov	r0, #3
    af08:	mov	r2, #8
    af0c:	mov	r3, r6
    af10:	bl	450c <gen_cmp>
    af14:	mov	r7, r0
    af18:	mov	r0, r4
    af1c:	mov	r1, r7
    af20:	bl	314c <sf_gen_and>
    af24:	mov	r0, r7
    af28:	mov	r1, r5
    af2c:	bl	3224 <sf_gen_or>
    af30:	movw	r0, #641	; 0x281
    af34:	bl	b024 <__bswap_16>
    af38:	mov	r3, r0
    af3c:	str	r9, [sp]
    af40:	mov	r0, #3
    af44:	mov	r1, #2
    af48:	mov	r2, #8
    af4c:	bl	83b8 <gen_mcmp>
    af50:	mov	r4, r0
    af54:	add	r1, sl, #3
    af58:	mov	r0, #3
    af5c:	mov	r2, #8
    af60:	mov	r3, r6
    af64:	bl	450c <gen_cmp>
    af68:	mov	r7, r0
    af6c:	mov	r0, r4
    af70:	mov	r1, r7
    af74:	bl	314c <sf_gen_and>
    af78:	mov	r0, r7
    af7c:	mov	r1, r5
    af80:	bl	3224 <sf_gen_or>
    af84:	str	r8, [sp]
    af88:	mov	r0, #3
    af8c:	mov	r1, #2
    af90:	mov	r2, #16
    af94:	mov	r3, #2
    af98:	bl	83b8 <gen_mcmp>
    af9c:	mov	r4, r0
    afa0:	add	r1, sl, #2
    afa4:	mov	r0, #3
    afa8:	mov	r2, #8
    afac:	mov	r3, r6
    afb0:	bl	450c <gen_cmp>
    afb4:	mov	r6, r0
    afb8:	mov	r0, r4
    afbc:	mov	r1, r6
    afc0:	bl	314c <sf_gen_and>
    afc4:	mov	r0, r6
    afc8:	mov	r1, r5
    afcc:	bl	3224 <sf_gen_or>
    afd0:	ldr	r0, [sp, #8]
    afd4:	b	affc <gen_dnhostop+0x254>
    afd8:	mov	r0, r5
    afdc:	mov	r1, #1
    afe0:	bl	ada8 <gen_dnhostop>
    afe4:	mov	r4, r0
    afe8:	mov	r0, r5
    afec:	mov	r1, #2
    aff0:	bl	ada8 <gen_dnhostop>
    aff4:	mov	r5, r0
    aff8:	mov	r0, r4
    affc:	mov	r1, r5
    b000:	bl	314c <sf_gen_and>
    b004:	mov	r0, r5
    b008:	sub	sp, fp, #28
    b00c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b010:	bl	fc4 <abort@plt>
    b014:	ldr	r0, [pc, #4]	; b020 <gen_dnhostop+0x278>
    b018:	add	r0, pc, r0
    b01c:	bl	1f9c <sf_bpf_error>
    b020:	.word	0x00008603

0000b024 <__bswap_16>:
    b024:	rev16	r0, r0
    b028:	bx	lr

0000b02c <gen_hostop6>:
    b02c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b030:	add	fp, sp, #24
    b034:	sub	sp, sp, #8
    b038:	cmp	r2, #4
    b03c:	bhi	b1f8 <gen_hostop6+0x1cc>
    b040:	mov	r8, r3
    b044:	mov	r5, r1
    b048:	mov	r7, r0
    b04c:	ldr	r9, [fp, #12]
    b050:	ldr	r6, [fp, #8]
    b054:	add	r0, pc, #4
    b058:	ldr	r1, [r0, r2, lsl #2]
    b05c:	add	pc, r0, r1
    b060:	.word	0x00000014
    b064:	.word	0x000000b0
    b068:	.word	0x000000ac
    b06c:	.word	0x00000014
    b070:	.word	0x0000005c
    b074:	stm	sp, {r6, r9}
    b078:	mov	r0, r7
    b07c:	mov	r1, r5
    b080:	mov	r2, #1
    b084:	mov	r3, r8
    b088:	bl	b02c <gen_hostop6>
    b08c:	mov	r4, r0
    b090:	stm	sp, {r6, r9}
    b094:	mov	r0, r7
    b098:	mov	r1, r5
    b09c:	mov	r2, #2
    b0a0:	mov	r3, r8
    b0a4:	bl	b02c <gen_hostop6>
    b0a8:	mov	r5, r0
    b0ac:	mov	r0, r4
    b0b0:	mov	r1, r5
    b0b4:	bl	3224 <sf_gen_or>
    b0b8:	b	b100 <gen_hostop6+0xd4>
    b0bc:	stm	sp, {r6, r9}
    b0c0:	mov	r0, r7
    b0c4:	mov	r1, r5
    b0c8:	mov	r2, #1
    b0cc:	mov	r3, r8
    b0d0:	bl	b02c <gen_hostop6>
    b0d4:	mov	r4, r0
    b0d8:	stm	sp, {r6, r9}
    b0dc:	mov	r0, r7
    b0e0:	mov	r1, r5
    b0e4:	mov	r2, #2
    b0e8:	mov	r3, r8
    b0ec:	bl	b02c <gen_hostop6>
    b0f0:	mov	r5, r0
    b0f4:	mov	r0, r4
    b0f8:	mov	r1, r5
    b0fc:	bl	314c <sf_gen_and>
    b100:	mov	r0, r5
    b104:	sub	sp, fp, #24
    b108:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b10c:	mov	r6, r9
    b110:	ldr	r0, [r7, #12]
    b114:	bl	5d84 <__bswap_32>
    b118:	mov	r4, r0
    b11c:	ldr	r0, [r5, #12]
    b120:	bl	5d84 <__bswap_32>
    b124:	str	r0, [sp]
    b128:	add	r1, r6, #12
    b12c:	mov	r0, #3
    b130:	mov	r2, #0
    b134:	mov	r3, r4
    b138:	bl	83b8 <gen_mcmp>
    b13c:	mov	r9, r0
    b140:	ldr	r0, [r7, #8]
    b144:	bl	5d84 <__bswap_32>
    b148:	mov	r4, r0
    b14c:	ldr	r0, [r5, #8]
    b150:	bl	5d84 <__bswap_32>
    b154:	str	r0, [sp]
    b158:	add	r1, r6, #8
    b15c:	mov	r0, #3
    b160:	mov	r2, #0
    b164:	mov	r3, r4
    b168:	bl	83b8 <gen_mcmp>
    b16c:	mov	r1, r9
    b170:	bl	314c <sf_gen_and>
    b174:	ldr	r0, [r7, #4]
    b178:	bl	5d84 <__bswap_32>
    b17c:	mov	r4, r0
    b180:	ldr	r0, [r5, #4]
    b184:	bl	5d84 <__bswap_32>
    b188:	str	r0, [sp]
    b18c:	add	r1, r6, #4
    b190:	mov	r0, #3
    b194:	mov	r2, #0
    b198:	mov	r3, r4
    b19c:	bl	83b8 <gen_mcmp>
    b1a0:	mov	r1, r9
    b1a4:	bl	314c <sf_gen_and>
    b1a8:	ldr	r0, [r7]
    b1ac:	bl	5d84 <__bswap_32>
    b1b0:	mov	r4, r0
    b1b4:	ldr	r0, [r5]
    b1b8:	bl	5d84 <__bswap_32>
    b1bc:	str	r0, [sp]
    b1c0:	mov	r0, #3
    b1c4:	mov	r1, r6
    b1c8:	mov	r2, #0
    b1cc:	mov	r3, r4
    b1d0:	bl	83b8 <gen_mcmp>
    b1d4:	mov	r1, r9
    b1d8:	bl	314c <sf_gen_and>
    b1dc:	mov	r0, r8
    b1e0:	bl	3a60 <gen_linktype>
    b1e4:	mov	r1, r9
    b1e8:	bl	314c <sf_gen_and>
    b1ec:	mov	r0, r9
    b1f0:	sub	sp, fp, #24
    b1f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b1f8:	bl	fc4 <abort@plt>

0000b1fc <gen_prism_llprefixlen>:
    b1fc:	push	{fp, lr}
    b200:	mov	fp, sp
    b204:	ldr	r0, [pc, #48]	; b23c <gen_prism_llprefixlen+0x40>
    b208:	ldr	r0, [pc, r0]
    b20c:	cmn	r0, #1
    b210:	bne	b224 <gen_prism_llprefixlen+0x28>
    b214:	bl	78d8 <alloc_reg>
    b218:	ldr	r1, [pc, #32]	; b240 <gen_prism_llprefixlen+0x44>
    b21c:	add	r1, pc, r1
    b220:	str	r0, [r1]
    b224:	mov	r0, #97	; 0x61
    b228:	bl	7988 <new_stmt>
    b22c:	ldr	r1, [pc, #16]	; b244 <gen_prism_llprefixlen+0x48>
    b230:	ldr	r1, [pc, r1]
    b234:	str	r1, [r0, #12]
    b238:	pop	{fp, pc}
    b23c:	.word	0x0002546c
    b240:	.word	0x00025458
    b244:	.word	0x00025444

0000b248 <gen_avs_llprefixlen>:
    b248:	push	{fp, lr}
    b24c:	mov	fp, sp
    b250:	ldr	r0, [pc, #48]	; b288 <gen_avs_llprefixlen+0x40>
    b254:	ldr	r0, [pc, r0]
    b258:	cmn	r0, #1
    b25c:	bne	b270 <gen_avs_llprefixlen+0x28>
    b260:	bl	78d8 <alloc_reg>
    b264:	ldr	r1, [pc, #32]	; b28c <gen_avs_llprefixlen+0x44>
    b268:	add	r1, pc, r1
    b26c:	str	r0, [r1]
    b270:	mov	r0, #97	; 0x61
    b274:	bl	7988 <new_stmt>
    b278:	ldr	r1, [pc, #16]	; b290 <gen_avs_llprefixlen+0x48>
    b27c:	ldr	r1, [pc, r1]
    b280:	str	r1, [r0, #12]
    b284:	pop	{fp, pc}
    b288:	.word	0x00025420
    b28c:	.word	0x0002540c
    b290:	.word	0x000253f8

0000b294 <gen_radiotap_llprefixlen>:
    b294:	push	{fp, lr}
    b298:	mov	fp, sp
    b29c:	ldr	r0, [pc, #48]	; b2d4 <gen_radiotap_llprefixlen+0x40>
    b2a0:	ldr	r0, [pc, r0]
    b2a4:	cmn	r0, #1
    b2a8:	bne	b2bc <gen_radiotap_llprefixlen+0x28>
    b2ac:	bl	78d8 <alloc_reg>
    b2b0:	ldr	r1, [pc, #32]	; b2d8 <gen_radiotap_llprefixlen+0x44>
    b2b4:	add	r1, pc, r1
    b2b8:	str	r0, [r1]
    b2bc:	mov	r0, #97	; 0x61
    b2c0:	bl	7988 <new_stmt>
    b2c4:	ldr	r1, [pc, #16]	; b2dc <gen_radiotap_llprefixlen+0x48>
    b2c8:	ldr	r1, [pc, r1]
    b2cc:	str	r1, [r0, #12]
    b2d0:	pop	{fp, pc}
    b2d4:	.word	0x000253d4
    b2d8:	.word	0x000253c0
    b2dc:	.word	0x000253ac

0000b2e0 <gen_ppi_llprefixlen>:
    b2e0:	push	{fp, lr}
    b2e4:	mov	fp, sp
    b2e8:	ldr	r0, [pc, #48]	; b320 <gen_ppi_llprefixlen+0x40>
    b2ec:	ldr	r0, [pc, r0]
    b2f0:	cmn	r0, #1
    b2f4:	bne	b308 <gen_ppi_llprefixlen+0x28>
    b2f8:	bl	78d8 <alloc_reg>
    b2fc:	ldr	r1, [pc, #32]	; b324 <gen_ppi_llprefixlen+0x44>
    b300:	add	r1, pc, r1
    b304:	str	r0, [r1]
    b308:	mov	r0, #97	; 0x61
    b30c:	bl	7988 <new_stmt>
    b310:	ldr	r1, [pc, #16]	; b328 <gen_ppi_llprefixlen+0x48>
    b314:	ldr	r1, [pc, r1]
    b318:	str	r1, [r0, #12]
    b31c:	pop	{fp, pc}
    b320:	.word	0x00025388
    b324:	.word	0x00025374
    b328:	.word	0x00025360

0000b32c <gen_load_llrel>:
    b32c:	push	{r4, r5, r6, sl, fp, lr}
    b330:	add	fp, sp, #16
    b334:	mov	r6, r1
    b338:	mov	r5, r0
    b33c:	bl	79a4 <gen_llprefixlen>
    b340:	cmp	r0, #0
    b344:	beq	b36c <gen_load_llrel+0x40>
    b348:	mov	r4, r0
    b34c:	orr	r0, r6, #64	; 0x40
    b350:	bl	7988 <new_stmt>
    b354:	mov	r1, r0
    b358:	str	r5, [r0, #12]
    b35c:	mov	r0, r4
    b360:	bl	750c <sf_append>
    b364:	mov	r0, r4
    b368:	pop	{r4, r5, r6, sl, fp, pc}
    b36c:	orr	r0, r6, #32
    b370:	bl	7988 <new_stmt>
    b374:	str	r5, [r0, #12]
    b378:	pop	{r4, r5, r6, sl, fp, pc}

0000b37c <gen_load_macplrel>:
    b37c:	push	{r4, r5, r6, sl, fp, lr}
    b380:	add	fp, sp, #16
    b384:	mov	r6, r1
    b388:	mov	r5, r0
    b38c:	bl	7a10 <gen_off_macpl>
    b390:	cmp	r0, #0
    b394:	beq	b3bc <gen_load_macplrel+0x40>
    b398:	mov	r4, r0
    b39c:	orr	r0, r6, #64	; 0x40
    b3a0:	bl	7988 <new_stmt>
    b3a4:	mov	r1, r0
    b3a8:	str	r5, [r0, #12]
    b3ac:	mov	r0, r4
    b3b0:	bl	750c <sf_append>
    b3b4:	mov	r0, r4
    b3b8:	pop	{r4, r5, r6, sl, fp, pc}
    b3bc:	orr	r0, r6, #32
    b3c0:	bl	7988 <new_stmt>
    b3c4:	mov	r4, r0
    b3c8:	ldr	r0, [pc, #16]	; b3e0 <gen_load_macplrel+0x64>
    b3cc:	ldr	r0, [pc, r0]
    b3d0:	add	r0, r0, r5
    b3d4:	str	r0, [r4, #12]
    b3d8:	mov	r0, r4
    b3dc:	pop	{r4, r5, r6, sl, fp, pc}
    b3e0:	.word	0x000251e0

0000b3e4 <pcap_nametoaddr>:
    b3e4:	push	{r4, r5, r6, sl, fp, lr}
    b3e8:	add	fp, sp, #16
    b3ec:	bl	fac <gethostbyname@plt>
    b3f0:	cmp	r0, #0
    b3f4:	moveq	r0, #0
    b3f8:	popeq	{r4, r5, r6, sl, fp, pc}
    b3fc:	mov	r4, r0
    b400:	ldr	r0, [r0, #16]
    b404:	ldr	r5, [r0]
    b408:	cmp	r5, #0
    b40c:	beq	b42c <pcap_nametoaddr+0x48>
    b410:	add	r6, r0, #4
    b414:	ldr	r0, [r5]
    b418:	bl	b434 <__bswap_32>
    b41c:	str	r0, [r5]
    b420:	ldr	r5, [r6], #4
    b424:	cmp	r5, #0
    b428:	bne	b414 <pcap_nametoaddr+0x30>
    b42c:	ldr	r0, [r4, #16]
    b430:	pop	{r4, r5, r6, sl, fp, pc}

0000b434 <__bswap_32>:
    b434:	rev	r0, r0
    b438:	bx	lr

0000b43c <pcap_nametoaddrinfo>:
    b43c:	push	{r4, sl, fp, lr}
    b440:	add	fp, sp, #8
    b444:	sub	sp, sp, #40	; 0x28
    b448:	vmov.i32	q8, #0	; 0x00000000
    b44c:	add	r2, sp, #8
    b450:	add	r1, r2, #16
    b454:	vst1.64	{d16-d17}, [r1]
    b458:	mov	r1, #12
    b45c:	mov	r3, r2
    b460:	vst1.64	{d16-d17}, [r3], r1
    b464:	mov	r1, #6
    b468:	str	r1, [r3]
    b46c:	mov	r1, #1
    b470:	str	r1, [sp, #16]
    b474:	mov	r4, #0
    b478:	add	r3, sp, #4
    b47c:	mov	r1, #0
    b480:	bl	fa0 <getaddrinfo@plt>
    b484:	ldr	r1, [sp, #4]
    b488:	cmp	r0, #0
    b48c:	movne	r1, r4
    b490:	mov	r0, r1
    b494:	sub	sp, fp, #8
    b498:	pop	{r4, sl, fp, pc}

0000b49c <pcap_nametonetaddr>:
    b49c:	push	{fp, lr}
    b4a0:	mov	fp, sp
    b4a4:	bl	e68 <getnetbyname@plt>
    b4a8:	cmp	r0, #0
    b4ac:	ldrne	r0, [r0, #12]
    b4b0:	moveq	r0, #0
    b4b4:	pop	{fp, pc}

0000b4b8 <pcap_nametoport>:
    b4b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    b4bc:	add	fp, sp, #24
    b4c0:	mov	r8, r2
    b4c4:	mov	r5, r1
    b4c8:	mov	r4, r0
    b4cc:	ldr	r1, [pc, #148]	; b568 <pcap_nametoport+0xb0>
    b4d0:	add	r1, pc, r1
    b4d4:	bl	f34 <getservbyname@plt>
    b4d8:	mvn	r6, #0
    b4dc:	cmp	r0, #0
    b4e0:	mvn	r7, #0
    b4e4:	beq	b4f4 <pcap_nametoport+0x3c>
    b4e8:	ldrh	r0, [r0, #8]
    b4ec:	bl	b570 <__bswap_16>
    b4f0:	mov	r7, r0
    b4f4:	ldr	r1, [pc, #112]	; b56c <pcap_nametoport+0xb4>
    b4f8:	add	r1, pc, r1
    b4fc:	mov	r0, r4
    b500:	bl	f34 <getservbyname@plt>
    b504:	cmp	r0, #0
    b508:	beq	b518 <pcap_nametoport+0x60>
    b50c:	ldrh	r0, [r0, #8]
    b510:	bl	b570 <__bswap_16>
    b514:	mov	r6, r0
    b518:	cmp	r7, #0
    b51c:	blt	b548 <pcap_nametoport+0x90>
    b520:	str	r7, [r5]
    b524:	mov	r0, #6
    b528:	cmp	r6, r7
    b52c:	mov	r1, #6
    b530:	mvneq	r1, #0
    b534:	cmn	r6, #1
    b538:	movle	r1, r0
    b53c:	str	r1, [r8]
    b540:	mov	r0, #1
    b544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    b548:	cmp	r6, #0
    b54c:	movlt	r0, #0
    b550:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
    b554:	str	r6, [r5]
    b558:	mov	r0, #17
    b55c:	str	r0, [r8]
    b560:	mov	r0, #1
    b564:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    b568:	.word	0x00007084
    b56c:	.word	0x00007091

0000b570 <__bswap_16>:
    b570:	rev16	r0, r0
    b574:	bx	lr

0000b578 <pcap_nametoportrange>:
    b578:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b57c:	add	fp, sp, #24
    b580:	sub	sp, sp, #8
    b584:	mov	r9, r3
    b588:	mov	r8, r2
    b58c:	mov	r6, r1
    b590:	mov	r4, r0
    b594:	ldr	r1, [pc, #216]	; b674 <pcap_nametoportrange+0xfc>
    b598:	add	r1, pc, r1
    b59c:	add	r2, sp, #4
    b5a0:	mov	r3, sp
    b5a4:	bl	f70 <sscanf@plt>
    b5a8:	cmp	r0, #2
    b5ac:	bne	b5d0 <pcap_nametoportrange+0x58>
    b5b0:	ldr	r0, [sp, #4]
    b5b4:	str	r0, [r6]
    b5b8:	ldr	r0, [sp]
    b5bc:	str	r0, [r8]
    b5c0:	mvn	r0, #0
    b5c4:	str	r0, [r9]
    b5c8:	mov	r5, #1
    b5cc:	b	b668 <pcap_nametoportrange+0xf0>
    b5d0:	mov	r0, r4
    b5d4:	bl	e8c <strdup@plt>
    b5d8:	mov	r5, #0
    b5dc:	cmp	r0, #0
    b5e0:	beq	b668 <pcap_nametoportrange+0xf0>
    b5e4:	mov	r7, r0
    b5e8:	mov	r1, #45	; 0x2d
    b5ec:	bl	f10 <strchr@plt>
    b5f0:	cmp	r0, #0
    b5f4:	beq	b650 <pcap_nametoportrange+0xd8>
    b5f8:	mov	r4, r0
    b5fc:	mov	r5, #0
    b600:	strb	r5, [r0]
    b604:	mov	r0, r7
    b608:	mov	r1, r6
    b60c:	mov	r2, r9
    b610:	bl	b4b8 <pcap_nametoport>
    b614:	cmp	r0, #0
    b618:	beq	b650 <pcap_nametoportrange+0xd8>
    b61c:	ldr	r6, [r9]
    b620:	add	r0, r4, #1
    b624:	mov	r1, r8
    b628:	mov	r2, r9
    b62c:	bl	b4b8 <pcap_nametoport>
    b630:	cmp	r0, #0
    b634:	beq	b65c <pcap_nametoportrange+0xe4>
    b638:	ldr	r0, [r9]
    b63c:	mov	r5, #1
    b640:	cmp	r0, r6
    b644:	mvnne	r0, #0
    b648:	strne	r0, [r9]
    b64c:	b	b668 <pcap_nametoportrange+0xf0>
    b650:	mov	r0, r7
    b654:	bl	e5c <free@plt>
    b658:	b	b668 <pcap_nametoportrange+0xf0>
    b65c:	mov	r0, r7
    b660:	bl	e5c <free@plt>
    b664:	mov	r5, #0
    b668:	mov	r0, r5
    b66c:	sub	sp, fp, #24
    b670:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b674:	.word	0x00008338

0000b678 <pcap_nametoproto>:
    b678:	push	{fp, lr}
    b67c:	mov	fp, sp
    b680:	bl	e38 <getprotobyname@plt>
    b684:	cmp	r0, #0
    b688:	ldrne	r0, [r0, #8]
    b68c:	mvneq	r0, #0
    b690:	pop	{fp, pc}

0000b694 <pcap_nametoeproto>:
    b694:	push	{r4, r5, r6, sl, fp, lr}
    b698:	add	fp, sp, #16
    b69c:	mov	r5, r0
    b6a0:	mvn	r4, #0
    b6a4:	ldr	r0, [pc, #76]	; b6f8 <pcap_nametoeproto+0x64>
    b6a8:	ldr	r0, [pc, r0]
    b6ac:	cmp	r0, #0
    b6b0:	beq	b6e4 <pcap_nametoeproto+0x50>
    b6b4:	ldr	r1, [pc, #64]	; b6fc <pcap_nametoeproto+0x68>
    b6b8:	add	r1, pc, r1
    b6bc:	add	r6, r1, #4
    b6c0:	mov	r1, r5
    b6c4:	bl	e08 <strcmp@plt>
    b6c8:	cmp	r0, #0
    b6cc:	beq	b6ec <pcap_nametoeproto+0x58>
    b6d0:	add	r1, r6, #8
    b6d4:	ldr	r0, [r6, #4]
    b6d8:	cmp	r0, #0
    b6dc:	mov	r6, r1
    b6e0:	bne	b6c0 <pcap_nametoeproto+0x2c>
    b6e4:	mov	r0, r4
    b6e8:	pop	{r4, r5, r6, sl, fp, pc}
    b6ec:	ldrh	r4, [r6]
    b6f0:	mov	r0, r4
    b6f4:	pop	{r4, r5, r6, sl, fp, pc}
    b6f8:	.word	0x00024ba4
    b6fc:	.word	0x00024b94

0000b700 <pcap_nametollc>:
    b700:	push	{r4, r5, fp, lr}
    b704:	add	fp, sp, #8
    b708:	mov	r4, r0
    b70c:	ldr	r0, [pc, #60]	; b750 <pcap_nametollc+0x50>
    b710:	add	r0, pc, r0
    b714:	add	r5, r0, #4
    b718:	ldr	r0, [pc, #52]	; b754 <pcap_nametollc+0x54>
    b71c:	add	r0, pc, r0
    b720:	mov	r1, r4
    b724:	bl	e08 <strcmp@plt>
    b728:	cmp	r0, #0
    b72c:	ldrheq	r0, [r5]
    b730:	popeq	{r4, r5, fp, pc}
    b734:	add	r1, r5, #8
    b738:	ldr	r0, [r5, #4]
    b73c:	cmp	r0, #0
    b740:	mov	r5, r1
    b744:	mvneq	r0, #0
    b748:	popeq	{r4, r5, fp, pc}
    b74c:	b	b720 <pcap_nametollc+0x20>
    b750:	.word	0x00024620
    b754:	.word	0x00008298

0000b758 <__pcap_atoin>:
    b758:	push	{fp, lr}
    b75c:	mov	fp, sp
    b760:	mov	lr, r0
    b764:	mov	r0, #0
    b768:	str	r0, [r1]
    b76c:	b	b790 <__pcap_atoin+0x38>
    b770:	ldr	r2, [r1]
    b774:	uxtb	r3, ip
    b778:	orr	r2, r3, r2, lsl #8
    b77c:	str	r2, [r1]
    b780:	add	r0, r0, #8
    b784:	ldrb	r2, [lr, #-1]
    b788:	cmp	r2, #0
    b78c:	popeq	{fp, pc}
    b790:	add	lr, lr, #1
    b794:	mov	ip, #0
    b798:	b	b7ac <__pcap_atoin+0x54>
    b79c:	add	r2, ip, ip, lsl #2
    b7a0:	add	r2, r3, r2, lsl #1
    b7a4:	sub	ip, r2, #48	; 0x30
    b7a8:	add	lr, lr, #1
    b7ac:	ldrb	r3, [lr, #-1]
    b7b0:	cmp	r3, #0
    b7b4:	cmpne	r3, #46	; 0x2e
    b7b8:	beq	b770 <__pcap_atoin+0x18>
    b7bc:	b	b79c <__pcap_atoin+0x44>

0000b7c0 <__pcap_atodn>:
    b7c0:	push	{r4, r5, fp, lr}
    b7c4:	add	fp, sp, #8
    b7c8:	sub	sp, sp, #8
    b7cc:	mov	r4, r1
    b7d0:	mov	r5, r0
    b7d4:	ldr	r1, [pc, #68]	; b820 <__pcap_atodn+0x60>
    b7d8:	add	r1, pc, r1
    b7dc:	mov	r2, sp
    b7e0:	add	r3, sp, #4
    b7e4:	bl	f70 <sscanf@plt>
    b7e8:	cmp	r0, #2
    b7ec:	ldreq	r0, [sp]
    b7f0:	andeq	r0, r0, #63	; 0x3f
    b7f4:	ldreq	r1, [sp, #4]
    b7f8:	bfceq	r1, #10, #22
    b7fc:	orreq	r0, r1, r0, lsl #10
    b800:	streq	r0, [r4]
    b804:	moveq	r0, #32
    b808:	subeq	sp, fp, #8
    b80c:	popeq	{r4, r5, fp, pc}
    b810:	ldr	r0, [pc, #12]	; b824 <__pcap_atodn+0x64>
    b814:	add	r0, pc, r0
    b818:	mov	r1, r5
    b81c:	bl	1f9c <sf_bpf_error>
    b820:	.word	0x0000816f
    b824:	.word	0x00008139

0000b828 <pcap_ether_aton>:
    b828:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b82c:	add	fp, sp, #24
    b830:	mov	r5, r0
    b834:	mov	r0, #6
    b838:	bl	ed4 <malloc@plt>
    b83c:	mov	r8, r0
    b840:	cmp	r0, #0
    b844:	beq	b8c8 <pcap_ether_aton+0xa0>
    b848:	mov	r9, #1
    b84c:	movw	r4, #8195	; 0x2003
    b850:	mov	r7, r8
    b854:	b	b860 <pcap_ether_aton+0x38>
    b858:	strb	r6, [r7], #1
    b85c:	mov	r5, r2
    b860:	ldrb	r0, [r5]
    b864:	sub	r1, r0, #45	; 0x2d
    b868:	cmp	r1, #13
    b86c:	bhi	b880 <pcap_ether_aton+0x58>
    b870:	tst	r4, r9, lsl r1
    b874:	beq	b880 <pcap_ether_aton+0x58>
    b878:	add	r5, r5, #1
    b87c:	b	b888 <pcap_ether_aton+0x60>
    b880:	cmp	r0, #0
    b884:	beq	b8c8 <pcap_ether_aton+0xa0>
    b888:	ldrb	r0, [r5]
    b88c:	bl	b8d0 <xdtoi>
    b890:	mov	r6, r0
    b894:	bl	eec <__ctype_b_loc@plt>
    b898:	mov	r1, r0
    b89c:	mov	r2, r5
    b8a0:	ldrb	r0, [r2, #1]!
    b8a4:	ldr	r1, [r1]
    b8a8:	add	r1, r1, r0, lsl #1
    b8ac:	ldrb	r1, [r1, #1]
    b8b0:	tst	r1, #16
    b8b4:	beq	b858 <pcap_ether_aton+0x30>
    b8b8:	bl	b8d0 <xdtoi>
    b8bc:	orr	r6, r0, r6, lsl #4
    b8c0:	add	r2, r5, #2
    b8c4:	b	b858 <pcap_ether_aton+0x30>
    b8c8:	mov	r0, r8
    b8cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000b8d0 <xdtoi>:
    b8d0:	push	{r4, sl, fp, lr}
    b8d4:	add	fp, sp, #8
    b8d8:	mov	r4, r0
    b8dc:	bl	eec <__ctype_b_loc@plt>
    b8e0:	ldr	r0, [r0]
    b8e4:	add	r0, r0, r4, lsl #1
    b8e8:	ldrh	r1, [r0]
    b8ec:	mvn	r0, #47	; 0x2f
    b8f0:	tst	r1, #2048	; 0x800
    b8f4:	bne	b904 <xdtoi+0x34>
    b8f8:	mvn	r0, #86	; 0x56
    b8fc:	tst	r1, #512	; 0x200
    b900:	mvneq	r0, #54	; 0x36
    b904:	add	r0, r0, r4
    b908:	pop	{r4, sl, fp, pc}

0000b90c <pcap_ether_hostton>:
    b90c:	push	{r4, r5, r6, sl, fp, lr}
    b910:	add	fp, sp, #16
    b914:	mov	r4, r0
    b918:	ldr	r0, [pc, #196]	; b9e4 <pcap_ether_hostton+0xd8>
    b91c:	ldr	r0, [pc, r0]
    b920:	cmp	r0, #0
    b924:	beq	b940 <pcap_ether_hostton+0x34>
    b928:	ldr	r0, [pc, #204]	; b9fc <pcap_ether_hostton+0xf0>
    b92c:	ldr	r0, [pc, r0]
    b930:	cmp	r0, #0
    b934:	beq	b9d8 <pcap_ether_hostton+0xcc>
    b938:	bl	e98 <rewind@plt>
    b93c:	b	b980 <pcap_ether_hostton+0x74>
    b940:	ldr	r0, [pc, #160]	; b9e8 <pcap_ether_hostton+0xdc>
    b944:	add	r0, pc, r0
    b948:	ldr	r1, [pc, #156]	; b9ec <pcap_ether_hostton+0xe0>
    b94c:	add	r1, pc, r1
    b950:	bl	e2c <fopen@plt>
    b954:	ldr	r1, [pc, #148]	; b9f0 <pcap_ether_hostton+0xe4>
    b958:	add	r1, pc, r1
    b95c:	str	r0, [r1]
    b960:	ldr	r1, [pc, #140]	; b9f4 <pcap_ether_hostton+0xe8>
    b964:	ldr	r1, [pc, r1]
    b968:	add	r1, r1, #1
    b96c:	ldr	r2, [pc, #132]	; b9f8 <pcap_ether_hostton+0xec>
    b970:	add	r2, pc, r2
    b974:	str	r1, [r2]
    b978:	cmp	r0, #0
    b97c:	beq	b9d8 <pcap_ether_hostton+0xcc>
    b980:	mov	r5, #0
    b984:	ldr	r0, [pc, #116]	; ba00 <pcap_ether_hostton+0xf4>
    b988:	ldr	r0, [pc, r0]
    b98c:	bl	e7c8 <pcap_next_etherent>
    b990:	cmp	r0, #0
    b994:	beq	b9d0 <pcap_ether_hostton+0xc4>
    b998:	mov	r6, r0
    b99c:	add	r0, r0, #6
    b9a0:	mov	r1, r4
    b9a4:	bl	e08 <strcmp@plt>
    b9a8:	cmp	r0, #0
    b9ac:	bne	b984 <pcap_ether_hostton+0x78>
    b9b0:	mov	r0, #6
    b9b4:	bl	ed4 <malloc@plt>
    b9b8:	cmp	r0, #0
    b9bc:	ldrhne	r1, [r6, #4]
    b9c0:	strhne	r1, [r0, #4]
    b9c4:	ldrne	r1, [r6]
    b9c8:	strne	r1, [r0]
    b9cc:	movne	r5, r0
    b9d0:	mov	r0, r5
    b9d4:	pop	{r4, r5, r6, sl, fp, pc}
    b9d8:	mov	r5, #0
    b9dc:	mov	r0, r5
    b9e0:	pop	{r4, r5, r6, sl, fp, pc}
    b9e4:	.word	0x00024da8
    b9e8:	.word	0x00008027
    b9ec:	.word	0x00009488
    b9f0:	.word	0x00024d68
    b9f4:	.word	0x00024d60
    b9f8:	.word	0x00024d54
    b9fc:	.word	0x00024d94
    ba00:	.word	0x00024d38

0000ba04 <__pcap_nametodnaddr>:
    ba04:	push	{fp, lr}
    ba08:	mov	fp, sp
    ba0c:	mov	r1, r0
    ba10:	ldr	r0, [pc, #4]	; ba1c <__pcap_nametodnaddr+0x18>
    ba14:	add	r0, pc, r0
    ba18:	bl	1f9c <sf_bpf_error>
    ba1c:	.word	0x00007f63

0000ba20 <sf_bpf_optimize>:
    ba20:	push	{r4, r5, fp, lr}
    ba24:	add	fp, sp, #8
    ba28:	mov	r4, r0
    ba2c:	ldr	r5, [r0]
    ba30:	mov	r0, r5
    ba34:	bl	ba68 <opt_init>
    ba38:	mov	r0, r5
    ba3c:	mov	r1, #0
    ba40:	bl	bdc0 <opt_loop>
    ba44:	mov	r0, r5
    ba48:	mov	r1, #1
    ba4c:	bl	bdc0 <opt_loop>
    ba50:	mov	r0, r5
    ba54:	bl	be28 <intern_blocks>
    ba58:	mov	r0, r4
    ba5c:	bl	bf9c <opt_root>
    ba60:	pop	{r4, r5, fp, lr}
    ba64:	b	c01c <opt_cleanup>

0000ba68 <opt_init>:
    ba68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    ba6c:	add	fp, sp, #24
    ba70:	mov	r5, r0
    ba74:	ldr	r6, [pc, #732]	; bd58 <opt_init+0x2f0>
    ba78:	ldr	r6, [pc, r6]
    ba7c:	add	r0, r6, #1
    ba80:	ldr	r7, [pc, #724]	; bd5c <opt_init+0x2f4>
    ba84:	add	r7, pc, r7
    ba88:	str	r0, [r7]
    ba8c:	mov	r0, r5
    ba90:	bl	e67c <count_blocks>
    ba94:	mov	r4, r0
    ba98:	mov	r1, #4
    ba9c:	bl	dfc <calloc@plt>
    baa0:	ldr	r1, [pc, #696]	; bd60 <opt_init+0x2f8>
    baa4:	add	r1, pc, r1
    baa8:	str	r0, [r1]
    baac:	cmp	r0, #0
    bab0:	beq	bd48 <opt_init+0x2e0>
    bab4:	ldr	r0, [pc, #680]	; bd64 <opt_init+0x2fc>
    bab8:	add	r0, pc, r0
    babc:	mov	r1, #0
    bac0:	str	r1, [r0]
    bac4:	add	r0, r6, #2
    bac8:	str	r0, [r7]
    bacc:	mov	r0, r5
    bad0:	bl	e6d4 <number_blks_r>
    bad4:	ldr	r9, [pc, #652]	; bd68 <opt_init+0x300>
    bad8:	ldr	r9, [pc, r9]
    badc:	lsl	r0, r9, #1
    bae0:	ldr	r1, [pc, #644]	; bd6c <opt_init+0x304>
    bae4:	add	r1, pc, r1
    bae8:	str	r0, [r1]
    baec:	mov	r1, #4
    baf0:	bl	dfc <calloc@plt>
    baf4:	ldr	r1, [pc, #628]	; bd70 <opt_init+0x308>
    baf8:	add	r1, pc, r1
    bafc:	str	r0, [r1]
    bb00:	cmp	r0, #0
    bb04:	beq	bd48 <opt_init+0x2e0>
    bb08:	mov	r0, r9
    bb0c:	mov	r1, #4
    bb10:	bl	dfc <calloc@plt>
    bb14:	ldr	r1, [pc, #600]	; bd74 <opt_init+0x30c>
    bb18:	add	r1, pc, r1
    bb1c:	str	r0, [r1]
    bb20:	cmp	r0, #0
    bb24:	beq	bd48 <opt_init+0x2e0>
    bb28:	mov	r0, #1
    bb2c:	add	r7, r0, r9, lsr #5
    bb30:	ldr	r0, [pc, #576]	; bd78 <opt_init+0x310>
    bb34:	add	r0, pc, r0
    bb38:	str	r7, [r0]
    bb3c:	ubfx	r8, r9, #4, #27
    bb40:	add	r0, r8, #1
    bb44:	ldr	r1, [pc, #560]	; bd7c <opt_init+0x314>
    bb48:	add	r1, pc, r1
    bb4c:	str	r0, [r1]
    bb50:	add	r0, r0, r7
    bb54:	mul	r0, r9, r0
    bb58:	lsl	r0, r0, #3
    bb5c:	bl	ed4 <malloc@plt>
    bb60:	ldr	r1, [pc, #536]	; bd80 <opt_init+0x318>
    bb64:	add	r1, pc, r1
    bb68:	str	r0, [r1]
    bb6c:	cmp	r0, #0
    bb70:	beq	bd48 <opt_init+0x2e0>
    bb74:	ldr	r1, [pc, #520]	; bd84 <opt_init+0x31c>
    bb78:	add	r1, pc, r1
    bb7c:	str	r0, [r1]
    bb80:	cmp	r4, #0
    bb84:	ble	bcd8 <opt_init+0x270>
    bb88:	lsr	lr, r9, #5
    bb8c:	mov	r1, #4
    bb90:	add	r6, r1, lr, lsl #2
    bb94:	sub	ip, r4, #1
    bb98:	mul	r1, r6, ip
    bb9c:	add	r1, r1, lr, lsl #2
    bba0:	add	r1, r0, r1
    bba4:	add	r1, r1, #4
    bba8:	mov	r3, #0
    bbac:	ldr	r2, [pc, #476]	; bd90 <opt_init+0x328>
    bbb0:	ldr	r2, [pc, r2]
    bbb4:	ldr	r2, [r2, r3, lsl #2]
    bbb8:	str	r0, [r2, #104]	; 0x68
    bbbc:	add	r0, r0, r6
    bbc0:	add	r3, r3, #1
    bbc4:	cmp	r4, r3
    bbc8:	bne	bbac <opt_init+0x144>
    bbcc:	ldr	r0, [pc, #448]	; bd94 <opt_init+0x32c>
    bbd0:	add	r0, pc, r0
    bbd4:	str	r1, [r0]
    bbd8:	cmp	r4, #1
    bbdc:	blt	bce8 <opt_init+0x280>
    bbe0:	add	r0, r1, r7, lsl #2
    bbe4:	mov	r2, #4
    bbe8:	add	r2, r2, lr, lsl #2
    bbec:	mla	r0, r2, ip, r0
    bbf0:	mov	r3, #0
    bbf4:	ldr	r7, [pc, #412]	; bd98 <opt_init+0x330>
    bbf8:	ldr	r7, [pc, r7]
    bbfc:	ldr	r7, [r7, r3, lsl #2]
    bc00:	str	r1, [r7, #108]	; 0x6c
    bc04:	add	r1, r1, r2
    bc08:	add	r3, r3, #1
    bc0c:	cmp	r4, r3
    bc10:	bne	bbf4 <opt_init+0x18c>
    bc14:	ldr	r1, [pc, #384]	; bd9c <opt_init+0x334>
    bc18:	add	r1, pc, r1
    bc1c:	str	r0, [r1]
    bc20:	cmp	r4, #1
    bc24:	blt	bcf8 <opt_init+0x290>
    bc28:	mov	r1, #8
    bc2c:	add	ip, r1, r8, lsl #3
    bc30:	lsl	r2, r9, #2
    bc34:	lsl	r3, r8, #2
    bc38:	mov	r7, #0
    bc3c:	ldr	r6, [pc, #348]	; bda0 <opt_init+0x338>
    bc40:	ldr	r6, [pc, r6]
    bc44:	ldr	r6, [r6, r7, lsl #2]
    bc48:	add	r5, r0, r3
    bc4c:	add	r5, r5, #4
    bc50:	str	r5, [r6, #80]	; 0x50
    bc54:	str	r0, [r6, #56]	; 0x38
    bc58:	mov	r5, r6
    bc5c:	str	r7, [r5, #48]!	; 0x30
    bc60:	ldr	r1, [pc, #316]	; bda4 <opt_init+0x33c>
    bc64:	ldr	r1, [pc, r1]
    bc68:	str	r5, [r1, r7, lsl #2]
    bc6c:	add	r1, r9, r7
    bc70:	mov	r5, r6
    bc74:	str	r1, [r5, #72]!	; 0x48
    bc78:	ldr	r1, [pc, #296]	; bda8 <opt_init+0x340>
    bc7c:	ldr	r1, [pc, r1]
    bc80:	add	r1, r1, r2
    bc84:	str	r5, [r1, r7, lsl #2]
    bc88:	str	r6, [r6, #88]	; 0x58
    bc8c:	str	r6, [r6, #64]	; 0x40
    bc90:	add	r0, r0, ip
    bc94:	add	r7, r7, #1
    bc98:	cmp	r4, r7
    bc9c:	bne	bc3c <opt_init+0x1d4>
    bca0:	cmp	r4, #1
    bca4:	blt	bcf8 <opt_init+0x290>
    bca8:	mov	r5, #0
    bcac:	ldr	r6, [pc, #248]	; bdac <opt_init+0x344>
    bcb0:	ldr	r6, [pc, r6]
    bcb4:	ldr	r0, [r6], #4
    bcb8:	ldr	r0, [r0, #4]
    bcbc:	bl	e750 <slength>
    bcc0:	add	r0, r5, r0
    bcc4:	add	r5, r0, #1
    bcc8:	subs	r4, r4, #1
    bccc:	bne	bcb4 <opt_init+0x24c>
    bcd0:	add	r4, r5, r5, lsl #1
    bcd4:	b	bcfc <opt_init+0x294>
    bcd8:	ldr	r1, [pc, #168]	; bd88 <opt_init+0x320>
    bcdc:	add	r1, pc, r1
    bce0:	str	r0, [r1]
    bce4:	b	bcec <opt_init+0x284>
    bce8:	mov	r0, r1
    bcec:	ldr	r1, [pc, #152]	; bd8c <opt_init+0x324>
    bcf0:	add	r1, pc, r1
    bcf4:	str	r0, [r1]
    bcf8:	mov	r4, #0
    bcfc:	ldr	r0, [pc, #172]	; bdb0 <opt_init+0x348>
    bd00:	add	r0, pc, r0
    bd04:	str	r4, [r0]
    bd08:	mov	r0, r4
    bd0c:	mov	r1, #8
    bd10:	bl	dfc <calloc@plt>
    bd14:	mov	r5, r0
    bd18:	ldr	r0, [pc, #148]	; bdb4 <opt_init+0x34c>
    bd1c:	add	r0, pc, r0
    bd20:	str	r5, [r0]
    bd24:	mov	r0, r4
    bd28:	mov	r1, #20
    bd2c:	bl	dfc <calloc@plt>
    bd30:	ldr	r1, [pc, #128]	; bdb8 <opt_init+0x350>
    bd34:	add	r1, pc, r1
    bd38:	str	r0, [r1]
    bd3c:	cmp	r5, #0
    bd40:	cmpne	r0, #0
    bd44:	bne	bd54 <opt_init+0x2ec>
    bd48:	ldr	r0, [pc, #108]	; bdbc <opt_init+0x354>
    bd4c:	add	r0, pc, r0
    bd50:	bl	1f9c <sf_bpf_error>
    bd54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bd58:	.word	0x00024c50
    bd5c:	.word	0x00024c44
    bd60:	.word	0x0002507c
    bd64:	.word	0x00024c20
    bd68:	.word	0x00024c00
    bd6c:	.word	0x00024c08
    bd70:	.word	0x0002502c
    bd74:	.word	0x00025004
    bd78:	.word	0x00024bac
    bd7c:	.word	0x00024ba8
    bd80:	.word	0x00024fb4
    bd84:	.word	0x00024b64
    bd88:	.word	0x00024a08
    bd8c:	.word	0x000249f8
    bd90:	.word	0x00024f70
    bd94:	.word	0x00024b14
    bd98:	.word	0x00024f28
    bd9c:	.word	0x00024ad0
    bda0:	.word	0x00024ee0
    bda4:	.word	0x00024ec0
    bda8:	.word	0x00024ea8
    bdac:	.word	0x00024e70
    bdb0:	.word	0x000249f8
    bdb4:	.word	0x00024e14
    bdb8:	.word	0x00024df8
    bdbc:	.word	0x00007c7c

0000bdc0 <opt_loop>:
    bdc0:	push	{r4, r5, r6, r7, fp, lr}
    bdc4:	add	fp, sp, #16
    bdc8:	mov	r4, r1
    bdcc:	mov	r5, r0
    bdd0:	ldr	r6, [pc, #76]	; be24 <opt_loop+0x64>
    bdd4:	add	r6, pc, r6
    bdd8:	mov	r7, #1
    bddc:	strb	r7, [r6]
    bde0:	mov	r0, r5
    bde4:	bl	c550 <find_levels>
    bde8:	mov	r0, r5
    bdec:	bl	c5ac <find_dom>
    bdf0:	mov	r0, r5
    bdf4:	bl	c728 <find_closure>
    bdf8:	mov	r0, r5
    bdfc:	bl	c85c <find_ud>
    be00:	mov	r0, r5
    be04:	bl	c934 <find_edom>
    be08:	mov	r0, r5
    be0c:	mov	r1, r4
    be10:	bl	ca14 <opt_blks>
    be14:	ldrb	r0, [r6]
    be18:	cmp	r0, #1
    be1c:	bne	bddc <opt_loop+0x1c>
    be20:	pop	{r4, r5, r6, r7, fp, pc}
    be24:	.word	0x00024900

0000be28 <intern_blocks>:
    be28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    be2c:	add	fp, sp, #28
    be30:	sub	sp, sp, #12
    be34:	str	r0, [sp, #8]
    be38:	ldr	r7, [pc, #328]	; bf88 <intern_blocks+0x160>
    be3c:	ldr	r7, [pc, r7]
    be40:	sub	r0, r7, #2
    be44:	str	r0, [sp, #4]
    be48:	sub	r0, r7, #1
    be4c:	str	r0, [sp]
    be50:	mov	r6, #0
    be54:	cmp	r7, #1
    be58:	blt	bf78 <intern_blocks+0x150>
    be5c:	mov	r0, #0
    be60:	ldr	r1, [pc, #292]	; bf8c <intern_blocks+0x164>
    be64:	ldr	r1, [pc, r1]
    be68:	ldr	r1, [r1, r0, lsl #2]
    be6c:	str	r6, [r1, #100]	; 0x64
    be70:	add	r0, r0, #1
    be74:	cmp	r7, r0
    be78:	bne	be60 <intern_blocks+0x38>
    be7c:	ldr	r0, [sp, #8]
    be80:	bl	e4e8 <mark_code>
    be84:	cmp	r7, #2
    be88:	blt	bf0c <intern_blocks+0xe4>
    be8c:	ldr	r8, [pc, #252]	; bf90 <intern_blocks+0x168>
    be90:	ldr	r8, [pc, r8]
    be94:	ldr	r0, [sp, #4]
    be98:	ldr	sl, [sp]
    be9c:	mov	r9, sl
    bea0:	mov	sl, r0
    bea4:	ldr	r4, [pc, #232]	; bf94 <intern_blocks+0x16c>
    bea8:	ldr	r4, [pc, r4]
    beac:	ldr	r5, [r4, r0, lsl #2]
    beb0:	ldr	r0, [r5, #24]
    beb4:	cmp	r0, r8
    beb8:	beq	bec4 <intern_blocks+0x9c>
    bebc:	b	bf00 <intern_blocks+0xd8>
    bec0:	add	r9, r9, #1
    bec4:	cmp	r9, r7
    bec8:	bge	bf00 <intern_blocks+0xd8>
    becc:	ldr	r6, [r4, r9, lsl #2]
    bed0:	ldr	r0, [r6, #24]
    bed4:	cmp	r0, r8
    bed8:	bne	bec0 <intern_blocks+0x98>
    bedc:	mov	r0, r5
    bee0:	mov	r1, r6
    bee4:	bl	e50c <eq_blk>
    bee8:	cmp	r0, #0
    beec:	beq	bec0 <intern_blocks+0x98>
    bef0:	ldr	r0, [r6, #100]	; 0x64
    bef4:	cmp	r0, #0
    bef8:	moveq	r0, r6
    befc:	str	r0, [r5, #100]	; 0x64
    bf00:	sub	r0, sl, #1
    bf04:	cmp	sl, #0
    bf08:	bgt	be9c <intern_blocks+0x74>
    bf0c:	cmp	r7, #1
    bf10:	mov	r6, #0
    bf14:	blt	bf70 <intern_blocks+0x148>
    bf18:	mov	r0, #0
    bf1c:	mov	r1, #1
    bf20:	ldr	r2, [pc, #112]	; bf98 <intern_blocks+0x170>
    bf24:	ldr	r2, [pc, r2]
    bf28:	ldr	r2, [r2, r0, lsl #2]
    bf2c:	ldr	r3, [r2, #60]	; 0x3c
    bf30:	cmp	r3, #0
    bf34:	beq	bf5c <intern_blocks+0x134>
    bf38:	ldr	r3, [r3, #100]	; 0x64
    bf3c:	cmp	r3, #0
    bf40:	strne	r3, [r2, #60]	; 0x3c
    bf44:	movne	r1, #0
    bf48:	ldr	r3, [r2, #84]	; 0x54
    bf4c:	ldr	r3, [r3, #100]	; 0x64
    bf50:	cmp	r3, #0
    bf54:	strne	r3, [r2, #84]	; 0x54
    bf58:	movne	r1, #0
    bf5c:	add	r0, r0, #1
    bf60:	cmp	r7, r0
    bf64:	bne	bf20 <intern_blocks+0xf8>
    bf68:	cmp	r1, #0
    bf6c:	beq	be54 <intern_blocks+0x2c>
    bf70:	sub	sp, fp, #28
    bf74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bf78:	ldr	r0, [sp, #8]
    bf7c:	sub	sp, fp, #28
    bf80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bf84:	b	e4e8 <mark_code>
    bf88:	.word	0x0002489c
    bf8c:	.word	0x00024cbc
    bf90:	.word	0x00024838
    bf94:	.word	0x00024c78
    bf98:	.word	0x00024bfc

0000bf9c <opt_root>:
    bf9c:	push	{r4, r5, fp, lr}
    bfa0:	add	fp, sp, #8
    bfa4:	mov	r4, r0
    bfa8:	ldr	r0, [r0]
    bfac:	ldr	r5, [r0, #4]
    bfb0:	mov	r1, #0
    bfb4:	str	r1, [r0, #4]
    bfb8:	ldr	r0, [r4]
    bfbc:	b	bfc8 <opt_root+0x2c>
    bfc0:	ldr	r0, [r0, #60]	; 0x3c
    bfc4:	str	r0, [r4]
    bfc8:	ldr	r1, [r0, #8]
    bfcc:	and	r1, r1, #7
    bfd0:	cmp	r1, #5
    bfd4:	ldreq	r1, [r0, #60]	; 0x3c
    bfd8:	ldreq	r2, [r0, #84]	; 0x54
    bfdc:	cmpeq	r1, r2
    bfe0:	beq	bfc0 <opt_root+0x24>
    bfe4:	ldr	r1, [r0, #4]
    bfe8:	cmp	r1, #0
    bfec:	beq	bff8 <opt_root+0x5c>
    bff0:	mov	r0, r5
    bff4:	bl	750c <sf_append>
    bff8:	ldr	r0, [r4]
    bffc:	str	r5, [r0, #4]
    c000:	ldr	r0, [r4]
    c004:	ldr	r1, [r0, #8]
    c008:	and	r1, r1, #7
    c00c:	cmp	r1, #6
    c010:	moveq	r1, #0
    c014:	streq	r1, [r0, #4]
    c018:	pop	{r4, r5, fp, pc}

0000c01c <opt_cleanup>:
    c01c:	push	{fp, lr}
    c020:	mov	fp, sp
    c024:	ldr	r0, [pc, #68]	; c070 <opt_cleanup+0x54>
    c028:	ldr	r0, [pc, r0]
    c02c:	bl	e5c <free@plt>
    c030:	ldr	r0, [pc, #60]	; c074 <opt_cleanup+0x58>
    c034:	ldr	r0, [pc, r0]
    c038:	bl	e5c <free@plt>
    c03c:	ldr	r0, [pc, #52]	; c078 <opt_cleanup+0x5c>
    c040:	ldr	r0, [pc, r0]
    c044:	bl	e5c <free@plt>
    c048:	ldr	r0, [pc, #44]	; c07c <opt_cleanup+0x60>
    c04c:	ldr	r0, [pc, r0]
    c050:	bl	e5c <free@plt>
    c054:	ldr	r0, [pc, #36]	; c080 <opt_cleanup+0x64>
    c058:	ldr	r0, [pc, r0]
    c05c:	bl	e5c <free@plt>
    c060:	ldr	r0, [pc, #28]	; c084 <opt_cleanup+0x68>
    c064:	ldr	r0, [pc, r0]
    c068:	pop	{fp, lr}
    c06c:	b	e5c <free@plt>
    c070:	.word	0x00024b04
    c074:	.word	0x00024afc
    c078:	.word	0x00024ae4
    c07c:	.word	0x00024acc
    c080:	.word	0x00024ac4
    c084:	.word	0x00024abc

0000c088 <sf_icode_to_fcode>:
    c088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c08c:	add	fp, sp, #28
    c090:	sub	sp, sp, #4
    c094:	mov	r8, r1
    c098:	mov	sl, r0
    c09c:	ldr	r5, [pc, #212]	; c178 <sf_icode_to_fcode+0xf0>
    c0a0:	ldr	r5, [pc, r5]
    c0a4:	add	r0, r5, #1
    c0a8:	ldr	r9, [pc, #204]	; c17c <sf_icode_to_fcode+0xf4>
    c0ac:	add	r9, pc, r9
    c0b0:	str	r0, [r9]
    c0b4:	mov	r0, sl
    c0b8:	bl	c190 <count_stmts>
    c0bc:	mov	r7, r0
    c0c0:	str	r0, [r8]
    c0c4:	lsl	r4, r0, #3
    c0c8:	mov	r0, r4
    c0cc:	bl	ed4 <malloc@plt>
    c0d0:	cmp	r0, #0
    c0d4:	beq	c160 <sf_icode_to_fcode+0xd8>
    c0d8:	mov	r6, r0
    c0dc:	mov	r0, r6
    c0e0:	mov	r1, #0
    c0e4:	mov	r2, r4
    c0e8:	bl	f40 <memset@plt>
    c0ec:	ldr	r0, [pc, #140]	; c180 <sf_icode_to_fcode+0xf8>
    c0f0:	add	r0, pc, r0
    c0f4:	str	r6, [r0]
    c0f8:	add	r0, r6, r7, lsl #3
    c0fc:	ldr	r1, [pc, #128]	; c184 <sf_icode_to_fcode+0xfc>
    c100:	add	r1, pc, r1
    c104:	str	r0, [r1]
    c108:	add	r0, r5, #2
    c10c:	str	r0, [r9]
    c110:	mov	r0, sl
    c114:	bl	c204 <convert_code_r>
    c118:	cmp	r0, #0
    c11c:	bne	c16c <sf_icode_to_fcode+0xe4>
    c120:	mov	r0, r6
    c124:	bl	e5c <free@plt>
    c128:	ldr	r5, [pc, #88]	; c188 <sf_icode_to_fcode+0x100>
    c12c:	ldr	r5, [pc, r5]
    c130:	add	r0, r5, #1
    c134:	str	r0, [r9]
    c138:	mov	r0, sl
    c13c:	bl	c190 <count_stmts>
    c140:	mov	r7, r0
    c144:	str	r0, [r8]
    c148:	lsl	r4, r0, #3
    c14c:	mov	r0, r4
    c150:	bl	ed4 <malloc@plt>
    c154:	mov	r6, r0
    c158:	cmp	r0, #0
    c15c:	bne	c0dc <sf_icode_to_fcode+0x54>
    c160:	ldr	r0, [pc, #36]	; c18c <sf_icode_to_fcode+0x104>
    c164:	add	r0, pc, r0
    c168:	bl	1f9c <sf_bpf_error>
    c16c:	mov	r0, r6
    c170:	sub	sp, fp, #28
    c174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c178:	.word	0x00024628
    c17c:	.word	0x0002461c
    c180:	.word	0x000245dc
    c184:	.word	0x000245d0
    c188:	.word	0x0002459c
    c18c:	.word	0x00007864

0000c190 <count_stmts>:
    c190:	push	{r4, r5, fp, lr}
    c194:	add	fp, sp, #8
    c198:	cmp	r0, #0
    c19c:	beq	c1b8 <count_stmts+0x28>
    c1a0:	mov	r4, r0
    c1a4:	ldr	r1, [r0, #24]
    c1a8:	ldr	r0, [pc, #80]	; c200 <count_stmts+0x70>
    c1ac:	ldr	r0, [pc, r0]
    c1b0:	cmp	r1, r0
    c1b4:	bne	c1c0 <count_stmts+0x30>
    c1b8:	mov	r0, #0
    c1bc:	pop	{r4, r5, fp, pc}
    c1c0:	str	r0, [r4, #24]
    c1c4:	ldr	r0, [r4, #60]	; 0x3c
    c1c8:	bl	c190 <count_stmts>
    c1cc:	mov	r5, r0
    c1d0:	ldr	r0, [r4, #84]	; 0x54
    c1d4:	bl	c190 <count_stmts>
    c1d8:	add	r5, r5, r0
    c1dc:	ldr	r0, [r4, #4]
    c1e0:	bl	e750 <slength>
    c1e4:	add	r0, r5, r0
    c1e8:	ldr	r1, [r4, #28]
    c1ec:	ldr	r2, [r4, #32]
    c1f0:	add	r0, r0, r1
    c1f4:	add	r0, r0, r2
    c1f8:	add	r0, r0, #1
    c1fc:	pop	{r4, r5, fp, pc}
    c200:	.word	0x0002451c

0000c204 <convert_code_r>:
    c204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c208:	add	fp, sp, #28
    c20c:	sub	sp, sp, #4
    c210:	cmp	r0, #0
    c214:	beq	c230 <convert_code_r+0x2c>
    c218:	mov	r8, r0
    c21c:	ldr	r1, [r0, #24]
    c220:	ldr	r0, [pc, #764]	; c524 <convert_code_r+0x320>
    c224:	ldr	r0, [pc, r0]
    c228:	cmp	r1, r0
    c22c:	bne	c240 <convert_code_r+0x3c>
    c230:	mov	r5, #1
    c234:	mov	r0, r5
    c238:	sub	sp, fp, #28
    c23c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c240:	str	r0, [r8, #24]
    c244:	ldr	r0, [r8, #84]	; 0x54
    c248:	bl	c204 <convert_code_r>
    c24c:	mov	r5, #0
    c250:	cmp	r0, #0
    c254:	beq	c234 <convert_code_r+0x30>
    c258:	ldr	r0, [r8, #60]	; 0x3c
    c25c:	bl	c204 <convert_code_r>
    c260:	cmp	r0, #0
    c264:	beq	c234 <convert_code_r+0x30>
    c268:	ldr	r0, [r8, #4]
    c26c:	bl	e750 <slength>
    c270:	mov	sl, r0
    c274:	ldr	r0, [r8, #28]
    c278:	ldr	r1, [r8, #32]
    c27c:	add	r0, sl, r0
    c280:	add	r0, r0, r1
    c284:	add	r0, r0, #1
    c288:	ldr	r1, [pc, #664]	; c528 <convert_code_r+0x324>
    c28c:	ldr	r1, [pc, r1]
    c290:	sub	r9, r1, r0, lsl #3
    c294:	ldr	r0, [pc, #656]	; c52c <convert_code_r+0x328>
    c298:	add	r0, pc, r0
    c29c:	str	r9, [r0]
    c2a0:	ldr	r0, [pc, #648]	; c530 <convert_code_r+0x32c>
    c2a4:	ldr	r0, [pc, r0]
    c2a8:	sub	r0, r9, r0
    c2ac:	asr	r0, r0, #3
    c2b0:	str	r0, [r8, #40]	; 0x28
    c2b4:	cmp	sl, #0
    c2b8:	beq	c300 <convert_code_r+0xfc>
    c2bc:	mov	r0, sl
    c2c0:	mov	r1, #4
    c2c4:	bl	dfc <calloc@plt>
    c2c8:	cmp	r0, #0
    c2cc:	beq	c518 <convert_code_r+0x314>
    c2d0:	ldr	r1, [r8, #4]
    c2d4:	cmp	r1, #0
    c2d8:	beq	c308 <convert_code_r+0x104>
    c2dc:	mov	r2, #0
    c2e0:	str	r1, [r0, r2, lsl #2]
    c2e4:	add	r2, r2, #1
    c2e8:	cmp	r2, sl
    c2ec:	bcs	c304 <convert_code_r+0x100>
    c2f0:	ldr	r1, [r1, #16]
    c2f4:	cmp	r1, #0
    c2f8:	bne	c2e0 <convert_code_r+0xdc>
    c2fc:	b	c304 <convert_code_r+0x100>
    c300:	mov	r0, #0
    c304:	ldr	r1, [r8, #4]
    c308:	cmp	r1, #0
    c30c:	beq	c404 <convert_code_r+0x200>
    c310:	sub	ip, sl, #2
    c314:	mov	r2, #0
    c318:	ldr	r3, [r1]
    c31c:	cmn	r3, #1
    c320:	beq	c348 <convert_code_r+0x144>
    c324:	strh	r3, [r9]
    c328:	ldr	r3, [r1, #12]
    c32c:	str	r3, [r9, #4]
    c330:	cmp	r2, ip
    c334:	ldrne	r3, [r1]
    c338:	cmpne	r3, #5
    c33c:	bne	c358 <convert_code_r+0x154>
    c340:	add	r2, r2, #1
    c344:	add	r9, r9, #8
    c348:	ldr	r1, [r1, #16]
    c34c:	cmp	r1, #0
    c350:	bne	c318 <convert_code_r+0x114>
    c354:	b	c404 <convert_code_r+0x200>
    c358:	and	r3, r3, #7
    c35c:	cmp	r3, #5
    c360:	bne	c340 <convert_code_r+0x13c>
    c364:	ldr	r3, [r1, #4]
    c368:	cmp	r3, #0
    c36c:	ldrne	r3, [r1, #8]
    c370:	cmpne	r3, #0
    c374:	beq	c474 <convert_code_r+0x270>
    c378:	cmp	sl, #1
    c37c:	blt	c3f0 <convert_code_r+0x1ec>
    c380:	eor	lr, r2, #255	; 0xff
    c384:	mov	r4, #0
    c388:	mov	r6, #0
    c38c:	mov	r7, #0
    c390:	ldr	r5, [r0, r7, lsl #2]
    c394:	ldr	r3, [r1, #4]
    c398:	cmp	r5, r3
    c39c:	bne	c3b4 <convert_code_r+0x1b0>
    c3a0:	cmp	r6, #0
    c3a4:	bne	c504 <convert_code_r+0x300>
    c3a8:	add	r3, lr, r7
    c3ac:	strb	r3, [r9, #2]
    c3b0:	mov	r6, #1
    c3b4:	ldr	r3, [r0, r7, lsl #2]
    c3b8:	ldr	r5, [r1, #8]
    c3bc:	cmp	r3, r5
    c3c0:	bne	c3d8 <convert_code_r+0x1d4>
    c3c4:	cmp	r4, #0
    c3c8:	bne	c504 <convert_code_r+0x300>
    c3cc:	add	r3, lr, r7
    c3d0:	strb	r3, [r9, #3]
    c3d4:	mov	r4, #1
    c3d8:	add	r7, r7, #1
    c3dc:	cmp	r7, sl
    c3e0:	blt	c390 <convert_code_r+0x18c>
    c3e4:	cmp	r6, #0
    c3e8:	cmpne	r4, #0
    c3ec:	bne	c340 <convert_code_r+0x13c>
    c3f0:	ldr	r0, [pc, #336]	; c548 <convert_code_r+0x344>
    c3f4:	add	r0, pc, r0
    c3f8:	ldr	r1, [pc, #332]	; c54c <convert_code_r+0x348>
    c3fc:	add	r1, pc, r1
    c400:	bl	1f9c <sf_bpf_error>
    c404:	cmp	r0, #0
    c408:	beq	c410 <convert_code_r+0x20c>
    c40c:	bl	e5c <free@plt>
    c410:	ldr	r0, [r8, #8]
    c414:	strh	r0, [r9]
    c418:	ldr	r0, [r8, #20]
    c41c:	str	r0, [r9, #4]
    c420:	ldr	r0, [r8, #60]	; 0x3c
    c424:	cmp	r0, #0
    c428:	beq	c230 <convert_code_r+0x2c>
    c42c:	ldr	r1, [r8, #40]	; 0x28
    c430:	add	r1, r1, sl
    c434:	mvn	r1, r1
    c438:	ldr	r0, [r0, #40]	; 0x28
    c43c:	add	r0, r0, r1
    c440:	cmp	r0, #256	; 0x100
    c444:	bcc	c488 <convert_code_r+0x284>
    c448:	ldr	r1, [r8, #28]
    c44c:	cmp	r1, #0
    c450:	beq	c4e4 <convert_code_r+0x2e0>
    c454:	mov	r1, #5
    c458:	strh	r1, [r9, #8]
    c45c:	mov	r1, #0
    c460:	strb	r1, [r9, #2]
    c464:	sub	r0, r0, #1
    c468:	str	r0, [r9, #12]
    c46c:	mov	r0, #1
    c470:	b	c490 <convert_code_r+0x28c>
    c474:	ldr	r0, [pc, #192]	; c53c <convert_code_r+0x338>
    c478:	add	r0, pc, r0
    c47c:	ldr	r1, [pc, #188]	; c540 <convert_code_r+0x33c>
    c480:	add	r1, pc, r1
    c484:	bl	1f9c <sf_bpf_error>
    c488:	strb	r0, [r9, #2]
    c48c:	mov	r0, #0
    c490:	ldr	r1, [r8, #40]	; 0x28
    c494:	ldr	r2, [r8, #84]	; 0x54
    c498:	add	r1, r1, sl
    c49c:	mvn	r1, r1
    c4a0:	ldr	r2, [r2, #40]	; 0x28
    c4a4:	add	r1, r2, r1
    c4a8:	cmp	r1, #256	; 0x100
    c4ac:	bcc	c4dc <convert_code_r+0x2d8>
    c4b0:	ldr	r2, [r8, #32]
    c4b4:	cmp	r2, #0
    c4b8:	beq	c4f4 <convert_code_r+0x2f0>
    c4bc:	strb	r0, [r9, #3]
    c4c0:	add	r0, r0, #1
    c4c4:	lsl	r2, r0, #3
    c4c8:	mov	r3, #5
    c4cc:	strh	r3, [r9, r2]!
    c4d0:	sub	r0, r1, r0
    c4d4:	str	r0, [r9, #4]
    c4d8:	b	c230 <convert_code_r+0x2c>
    c4dc:	strb	r1, [r9, #3]
    c4e0:	b	c230 <convert_code_r+0x2c>
    c4e4:	add	r0, r1, #1
    c4e8:	str	r0, [r8, #28]
    c4ec:	mov	r5, #0
    c4f0:	b	c234 <convert_code_r+0x30>
    c4f4:	add	r0, r2, #1
    c4f8:	str	r0, [r8, #32]
    c4fc:	mov	r5, #0
    c500:	b	c234 <convert_code_r+0x30>
    c504:	ldr	r0, [pc, #40]	; c534 <convert_code_r+0x330>
    c508:	add	r0, pc, r0
    c50c:	ldr	r1, [pc, #36]	; c538 <convert_code_r+0x334>
    c510:	add	r1, pc, r1
    c514:	bl	1f9c <sf_bpf_error>
    c518:	ldr	r0, [pc, #36]	; c544 <convert_code_r+0x340>
    c51c:	add	r0, pc, r0
    c520:	bl	1f9c <sf_bpf_error>
    c524:	.word	0x000244a4
    c528:	.word	0x00024444
    c52c:	.word	0x00024438
    c530:	.word	0x00024428
    c534:	.word	0x000074e8
    c538:	.word	0x0000751c
    c53c:	.word	0x00007578
    c540:	.word	0x00007599
    c544:	.word	0x000074c4
    c548:	.word	0x000075fc
    c54c:	.word	0x00007641

0000c550 <find_levels>:
    c550:	push	{r4, sl, fp, lr}
    c554:	add	fp, sp, #8
    c558:	mov	r4, r0
    c55c:	ldr	r0, [pc, #56]	; c59c <find_levels+0x4c>
    c560:	ldr	r0, [pc, r0]
    c564:	ldr	r1, [pc, #52]	; c5a0 <find_levels+0x50>
    c568:	ldr	r1, [pc, r1]
    c56c:	lsl	r2, r1, #2
    c570:	mov	r1, #0
    c574:	bl	f40 <memset@plt>
    c578:	ldr	r0, [pc, #36]	; c5a4 <find_levels+0x54>
    c57c:	ldr	r0, [pc, r0]
    c580:	add	r0, r0, #1
    c584:	ldr	r1, [pc, #28]	; c5a8 <find_levels+0x58>
    c588:	add	r1, pc, r1
    c58c:	str	r0, [r1]
    c590:	mov	r0, r4
    c594:	pop	{r4, sl, fp, lr}
    c598:	b	cb40 <find_levels_r>
    c59c:	.word	0x000245bc
    c5a0:	.word	0x00024170
    c5a4:	.word	0x0002414c
    c5a8:	.word	0x00024140

0000c5ac <find_dom>:
    c5ac:	push	{r4, r5, fp, lr}
    c5b0:	add	fp, sp, #8
    c5b4:	mov	r4, r0
    c5b8:	ldr	r0, [pc, #336]	; c710 <find_dom+0x164>
    c5bc:	ldr	r0, [pc, r0]
    c5c0:	ldr	r5, [pc, #332]	; c714 <find_dom+0x168>
    c5c4:	ldr	r5, [pc, r5]
    c5c8:	mul	r1, r5, r0
    c5cc:	cmp	r1, #1
    c5d0:	blt	c5fc <find_dom+0x50>
    c5d4:	mvn	r1, r1
    c5d8:	cmn	r1, #2
    c5dc:	mvnle	r1, #1
    c5e0:	mla	r0, r5, r0, r1
    c5e4:	mov	r1, #8
    c5e8:	add	r2, r1, r0, lsl #2
    c5ec:	ldr	r0, [pc, #292]	; c718 <find_dom+0x16c>
    c5f0:	ldr	r0, [pc, r0]
    c5f4:	mov	r1, #255	; 0xff
    c5f8:	bl	f40 <memset@plt>
    c5fc:	cmp	r5, #1
    c600:	blt	c628 <find_dom+0x7c>
    c604:	sub	r1, r5, #1
    c608:	mov	r0, #0
    c60c:	ldr	r2, [r4, #104]	; 0x68
    c610:	str	r0, [r2, r1, lsl #2]
    c614:	sub	r2, r1, #1
    c618:	add	r1, r1, #1
    c61c:	cmp	r1, #1
    c620:	mov	r1, r2
    c624:	bgt	c60c <find_dom+0x60>
    c628:	ldr	ip, [r4, #36]	; 0x24
    c62c:	cmp	ip, #0
    c630:	poplt	{r4, r5, fp, pc}
    c634:	mov	lr, #1
    c638:	ldr	r2, [pc, #220]	; c71c <find_dom+0x170>
    c63c:	ldr	r2, [pc, r2]
    c640:	ldr	r2, [r2, ip, lsl #2]
    c644:	cmp	r2, #0
    c648:	bne	c65c <find_dom+0xb0>
    c64c:	b	c6fc <find_dom+0x150>
    c650:	ldr	r2, [r2, #100]	; 0x64
    c654:	cmp	r2, #0
    c658:	beq	c6fc <find_dom+0x150>
    c65c:	ldr	r3, [r2]
    c660:	ldr	r5, [r2, #104]	; 0x68
    c664:	lsr	r4, r3, #5
    c668:	ldr	r0, [r5, r4, lsl #2]
    c66c:	and	r3, r3, #31
    c670:	orr	r0, r0, lr, lsl r3
    c674:	str	r0, [r5, r4, lsl #2]
    c678:	ldr	r5, [r2, #60]	; 0x3c
    c67c:	cmp	r5, #0
    c680:	beq	c650 <find_dom+0xa4>
    c684:	ldr	r3, [pc, #148]	; c720 <find_dom+0x174>
    c688:	ldr	r3, [pc, r3]
    c68c:	cmp	r3, #1
    c690:	blt	c650 <find_dom+0xa4>
    c694:	add	r3, r3, #1
    c698:	ldr	r5, [r5, #104]	; 0x68
    c69c:	ldr	r4, [r2, #104]	; 0x68
    c6a0:	ldr	r0, [r4], #4
    c6a4:	ldr	r1, [r5]
    c6a8:	and	r0, r1, r0
    c6ac:	str	r0, [r5], #4
    c6b0:	sub	r3, r3, #1
    c6b4:	cmp	r3, #1
    c6b8:	bgt	c6a0 <find_dom+0xf4>
    c6bc:	ldr	r3, [pc, #96]	; c724 <find_dom+0x178>
    c6c0:	ldr	r3, [pc, r3]
    c6c4:	cmp	r3, #1
    c6c8:	blt	c650 <find_dom+0xa4>
    c6cc:	add	r3, r3, #1
    c6d0:	ldr	r0, [r2, #84]	; 0x54
    c6d4:	ldr	r5, [r2, #104]	; 0x68
    c6d8:	ldr	r4, [r0, #104]	; 0x68
    c6dc:	ldr	r0, [r5], #4
    c6e0:	ldr	r1, [r4]
    c6e4:	and	r0, r1, r0
    c6e8:	str	r0, [r4], #4
    c6ec:	sub	r3, r3, #1
    c6f0:	cmp	r3, #1
    c6f4:	bgt	c6dc <find_dom+0x130>
    c6f8:	b	c650 <find_dom+0xa4>
    c6fc:	sub	r0, ip, #1
    c700:	cmp	ip, #0
    c704:	mov	ip, r0
    c708:	bgt	c638 <find_dom+0x8c>
    c70c:	pop	{r4, r5, fp, pc}
    c710:	.word	0x0002411c
    c714:	.word	0x0002411c
    c718:	.word	0x000240ec
    c71c:	.word	0x000244e0
    c720:	.word	0x00024058
    c724:	.word	0x00024020

0000c728 <find_closure>:
    c728:	push	{r4, r5, fp, lr}
    c72c:	add	fp, sp, #8
    c730:	mov	r4, r0
    c734:	ldr	r0, [pc, #264]	; c844 <find_closure+0x11c>
    c738:	ldr	r0, [pc, r0]
    c73c:	ldr	r1, [pc, #260]	; c848 <find_closure+0x120>
    c740:	ldr	r1, [pc, r1]
    c744:	mul	r0, r1, r0
    c748:	lsl	r2, r0, #2
    c74c:	ldr	r0, [pc, #248]	; c84c <find_closure+0x124>
    c750:	ldr	r0, [pc, r0]
    c754:	mov	r1, #0
    c758:	bl	f40 <memset@plt>
    c75c:	ldr	ip, [r4, #36]	; 0x24
    c760:	cmp	ip, #0
    c764:	poplt	{r4, r5, fp, pc}
    c768:	mov	lr, #1
    c76c:	ldr	r0, [pc, #220]	; c850 <find_closure+0x128>
    c770:	ldr	r0, [pc, r0]
    c774:	ldr	r2, [r0, ip, lsl #2]
    c778:	cmp	r2, #0
    c77c:	bne	c790 <find_closure+0x68>
    c780:	b	c830 <find_closure+0x108>
    c784:	ldr	r2, [r2, #100]	; 0x64
    c788:	cmp	r2, #0
    c78c:	beq	c830 <find_closure+0x108>
    c790:	ldr	r0, [r2]
    c794:	ldr	r3, [r2, #108]	; 0x6c
    c798:	lsr	r4, r0, #5
    c79c:	ldr	r1, [r3, r4, lsl #2]
    c7a0:	and	r0, r0, #31
    c7a4:	orr	r0, r1, lr, lsl r0
    c7a8:	str	r0, [r3, r4, lsl #2]
    c7ac:	ldr	r0, [r2, #60]	; 0x3c
    c7b0:	cmp	r0, #0
    c7b4:	beq	c784 <find_closure+0x5c>
    c7b8:	ldr	r3, [pc, #148]	; c854 <find_closure+0x12c>
    c7bc:	ldr	r3, [pc, r3]
    c7c0:	cmp	r3, #1
    c7c4:	blt	c784 <find_closure+0x5c>
    c7c8:	add	r3, r3, #1
    c7cc:	ldr	r4, [r0, #108]	; 0x6c
    c7d0:	ldr	r0, [r2, #108]	; 0x6c
    c7d4:	ldr	r1, [r0], #4
    c7d8:	ldr	r5, [r4]
    c7dc:	orr	r1, r5, r1
    c7e0:	str	r1, [r4], #4
    c7e4:	sub	r3, r3, #1
    c7e8:	cmp	r3, #1
    c7ec:	bgt	c7d4 <find_closure+0xac>
    c7f0:	ldr	r0, [pc, #96]	; c858 <find_closure+0x130>
    c7f4:	ldr	r0, [pc, r0]
    c7f8:	cmp	r0, #1
    c7fc:	blt	c784 <find_closure+0x5c>
    c800:	add	r3, r0, #1
    c804:	ldr	r0, [r2, #84]	; 0x54
    c808:	ldr	r4, [r2, #108]	; 0x6c
    c80c:	ldr	r0, [r0, #108]	; 0x6c
    c810:	ldr	r1, [r4], #4
    c814:	ldr	r5, [r0]
    c818:	orr	r1, r5, r1
    c81c:	str	r1, [r0], #4
    c820:	sub	r3, r3, #1
    c824:	cmp	r3, #1
    c828:	bgt	c810 <find_closure+0xe8>
    c82c:	b	c784 <find_closure+0x5c>
    c830:	sub	r0, ip, #1
    c834:	cmp	ip, #0
    c838:	mov	ip, r0
    c83c:	bgt	c76c <find_closure+0x44>
    c840:	pop	{r4, r5, fp, pc}
    c844:	.word	0x00023fa8
    c848:	.word	0x00023f98
    c84c:	.word	0x00023f94
    c850:	.word	0x000243ac
    c854:	.word	0x00023f24
    c858:	.word	0x00023eec

0000c85c <find_ud>:
    c85c:	push	{r4, r5, r6, r7, fp, lr}
    c860:	add	fp, sp, #16
    c864:	ldr	r5, [r0, #36]	; 0x24
    c868:	cmp	r5, #0
    c86c:	blt	c928 <find_ud+0xcc>
    c870:	mov	r6, #0
    c874:	mov	r7, r5
    c878:	ldr	r0, [pc, #172]	; c92c <find_ud+0xd0>
    c87c:	ldr	r0, [pc, r0]
    c880:	ldr	r4, [r0, r7, lsl #2]
    c884:	cmp	r4, #0
    c888:	beq	c8a4 <find_ud+0x48>
    c88c:	mov	r0, r4
    c890:	bl	cbc4 <compute_local_ud>
    c894:	str	r6, [r4, #128]	; 0x80
    c898:	ldr	r4, [r4, #100]	; 0x64
    c89c:	cmp	r4, #0
    c8a0:	bne	c88c <find_ud+0x30>
    c8a4:	sub	r0, r7, #1
    c8a8:	cmp	r7, #0
    c8ac:	mov	r7, r0
    c8b0:	bgt	c878 <find_ud+0x1c>
    c8b4:	cmp	r5, #1
    c8b8:	poplt	{r4, r5, r6, r7, fp, pc}
    c8bc:	mov	r0, #1
    c8c0:	ldr	r1, [pc, #104]	; c930 <find_ud+0xd4>
    c8c4:	ldr	r1, [pc, r1]
    c8c8:	ldr	r1, [r1, r0, lsl #2]
    c8cc:	cmp	r1, #0
    c8d0:	beq	c918 <find_ud+0xbc>
    c8d4:	ldr	r2, [r1, #60]	; 0x3c
    c8d8:	ldr	r3, [r1, #84]	; 0x54
    c8dc:	ldr	r7, [r1, #100]	; 0x64
    c8e0:	ldr	r6, [r1, #120]	; 0x78
    c8e4:	ldr	r2, [r2, #124]	; 0x7c
    c8e8:	ldr	r3, [r3, #124]	; 0x7c
    c8ec:	orr	r2, r3, r2
    c8f0:	ldr	r3, [r1, #128]	; 0x80
    c8f4:	orr	r2, r2, r3
    c8f8:	str	r2, [r1, #128]	; 0x80
    c8fc:	bic	r2, r2, r6
    c900:	ldr	r3, [r1, #124]	; 0x7c
    c904:	orr	r2, r3, r2
    c908:	str	r2, [r1, #124]	; 0x7c
    c90c:	cmp	r7, #0
    c910:	mov	r1, r7
    c914:	bne	c8d4 <find_ud+0x78>
    c918:	add	r1, r0, #1
    c91c:	cmp	r0, r5
    c920:	mov	r0, r1
    c924:	bne	c8c0 <find_ud+0x64>
    c928:	pop	{r4, r5, r6, r7, fp, pc}
    c92c:	.word	0x000242a0
    c930:	.word	0x00024258

0000c934 <find_edom>:
    c934:	push	{r4, r5, fp, lr}
    c938:	add	fp, sp, #8
    c93c:	mov	r4, r0
    c940:	ldr	r1, [pc, #188]	; ca04 <find_edom+0xd0>
    c944:	ldr	r1, [pc, r1]
    c948:	ldr	r5, [pc, #184]	; ca08 <find_edom+0xd4>
    c94c:	ldr	r5, [pc, r5]
    c950:	mul	r0, r5, r1
    c954:	cmp	r0, #1
    c958:	blt	c990 <find_edom+0x5c>
    c95c:	mvn	r2, r0
    c960:	mvn	r0, #1
    c964:	cmn	r2, #2
    c968:	movle	r2, r0
    c96c:	sub	r0, r0, r2
    c970:	ldr	r3, [pc, #148]	; ca0c <find_edom+0xd8>
    c974:	ldr	r3, [pc, r3]
    c978:	add	r0, r3, r0, lsl #2
    c97c:	mla	r1, r5, r1, r2
    c980:	mov	r2, #8
    c984:	add	r2, r2, r1, lsl #2
    c988:	mov	r1, #255	; 0xff
    c98c:	bl	f40 <memset@plt>
    c990:	ldr	r0, [r4, #56]	; 0x38
    c994:	lsl	r5, r5, #2
    c998:	mov	r1, #0
    c99c:	mov	r2, r5
    c9a0:	bl	f40 <memset@plt>
    c9a4:	ldr	r0, [r4, #80]	; 0x50
    c9a8:	mov	r1, #0
    c9ac:	mov	r2, r5
    c9b0:	bl	f40 <memset@plt>
    c9b4:	ldr	r4, [r4, #36]	; 0x24
    c9b8:	cmp	r4, #0
    c9bc:	poplt	{r4, r5, fp, pc}
    c9c0:	ldr	r0, [pc, #72]	; ca10 <find_edom+0xdc>
    c9c4:	ldr	r0, [pc, r0]
    c9c8:	ldr	r5, [r0, r4, lsl #2]
    c9cc:	cmp	r5, #0
    c9d0:	beq	c9f0 <find_edom+0xbc>
    c9d4:	add	r0, r5, #48	; 0x30
    c9d8:	bl	ce14 <propedom>
    c9dc:	add	r0, r5, #72	; 0x48
    c9e0:	bl	ce14 <propedom>
    c9e4:	ldr	r5, [r5, #100]	; 0x64
    c9e8:	cmp	r5, #0
    c9ec:	bne	c9d4 <find_edom+0xa0>
    c9f0:	sub	r0, r4, #1
    c9f4:	cmp	r4, #0
    c9f8:	mov	r4, r0
    c9fc:	bgt	c9c0 <find_edom+0x8c>
    ca00:	pop	{r4, r5, fp, pc}
    ca04:	.word	0x00023da8
    ca08:	.word	0x00023da4
    ca0c:	.word	0x00023d74
    ca10:	.word	0x00024158

0000ca14 <opt_blks>:
    ca14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    ca18:	add	fp, sp, #24
    ca1c:	mov	r5, r1
    ca20:	mov	r4, r0
    ca24:	bl	cec4 <init_val>
    ca28:	ldr	r8, [r4, #36]	; 0x24
    ca2c:	mov	r0, r4
    ca30:	bl	cf3c <find_inedges>
    ca34:	cmp	r8, #0
    ca38:	blt	ca7c <opt_blks+0x68>
    ca3c:	mov	r7, r8
    ca40:	ldr	r0, [pc, #236]	; cb34 <opt_blks+0x120>
    ca44:	ldr	r0, [pc, r0]
    ca48:	ldr	r6, [r0, r7, lsl #2]
    ca4c:	cmp	r6, #0
    ca50:	beq	ca6c <opt_blks+0x58>
    ca54:	mov	r0, r6
    ca58:	mov	r1, r5
    ca5c:	bl	cfe0 <opt_blk>
    ca60:	ldr	r6, [r6, #100]	; 0x64
    ca64:	cmp	r6, #0
    ca68:	bne	ca54 <opt_blks+0x40>
    ca6c:	sub	r0, r7, #1
    ca70:	cmp	r7, #0
    ca74:	mov	r7, r0
    ca78:	bgt	ca40 <opt_blks+0x2c>
    ca7c:	cmp	r5, #0
    ca80:	bne	cb24 <opt_blks+0x110>
    ca84:	cmp	r8, #1
    ca88:	blt	cb28 <opt_blks+0x114>
    ca8c:	mov	r5, #1
    ca90:	ldr	r0, [pc, #160]	; cb38 <opt_blks+0x124>
    ca94:	ldr	r0, [pc, r0]
    ca98:	ldr	r6, [r0, r5, lsl #2]
    ca9c:	cmp	r6, #0
    caa0:	beq	cac0 <opt_blks+0xac>
    caa4:	add	r0, r6, #48	; 0x30
    caa8:	bl	d178 <opt_j>
    caac:	add	r0, r6, #72	; 0x48
    cab0:	bl	d178 <opt_j>
    cab4:	ldr	r6, [r6, #100]	; 0x64
    cab8:	cmp	r6, #0
    cabc:	bne	caa4 <opt_blks+0x90>
    cac0:	add	r0, r5, #1
    cac4:	cmp	r5, r8
    cac8:	mov	r5, r0
    cacc:	bne	ca90 <opt_blks+0x7c>
    cad0:	mov	r0, r4
    cad4:	bl	cf3c <find_inedges>
    cad8:	cmp	r8, #1
    cadc:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
    cae0:	mov	r5, #1
    cae4:	ldr	r0, [pc, #80]	; cb3c <opt_blks+0x128>
    cae8:	ldr	r0, [pc, r0]
    caec:	ldr	r4, [r0, r5, lsl #2]
    caf0:	cmp	r4, #0
    caf4:	beq	cb14 <opt_blks+0x100>
    caf8:	mov	r0, r4
    cafc:	bl	d2b8 <or_pullup>
    cb00:	mov	r0, r4
    cb04:	bl	d404 <and_pullup>
    cb08:	ldr	r4, [r4, #100]	; 0x64
    cb0c:	cmp	r4, #0
    cb10:	bne	caf8 <opt_blks+0xe4>
    cb14:	add	r0, r5, #1
    cb18:	cmp	r5, r8
    cb1c:	mov	r5, r0
    cb20:	bne	cae4 <opt_blks+0xd0>
    cb24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    cb28:	mov	r0, r4
    cb2c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    cb30:	b	cf3c <find_inedges>
    cb34:	.word	0x000240d8
    cb38:	.word	0x00024088
    cb3c:	.word	0x00024034

0000cb40 <find_levels_r>:
    cb40:	push	{r4, sl, fp, lr}
    cb44:	add	fp, sp, #8
    cb48:	mov	r4, r0
    cb4c:	ldr	r1, [r0, #24]
    cb50:	ldr	r0, [pc, #100]	; cbbc <find_levels_r+0x7c>
    cb54:	ldr	r0, [pc, r0]
    cb58:	cmp	r1, r0
    cb5c:	popeq	{r4, sl, fp, pc}
    cb60:	mov	r1, #0
    cb64:	str	r1, [r4, #100]	; 0x64
    cb68:	str	r0, [r4, #24]
    cb6c:	ldr	r0, [r4, #60]	; 0x3c
    cb70:	cmp	r0, #0
    cb74:	beq	cba0 <find_levels_r+0x60>
    cb78:	bl	cb40 <find_levels_r>
    cb7c:	ldr	r0, [r4, #84]	; 0x54
    cb80:	bl	cb40 <find_levels_r>
    cb84:	ldr	r0, [r4, #60]	; 0x3c
    cb88:	ldr	r1, [r4, #84]	; 0x54
    cb8c:	ldr	r0, [r0, #36]	; 0x24
    cb90:	ldr	r1, [r1, #36]	; 0x24
    cb94:	cmp	r0, r1
    cb98:	movgt	r1, r0
    cb9c:	add	r1, r1, #1
    cba0:	str	r1, [r4, #36]	; 0x24
    cba4:	ldr	r0, [pc, #20]	; cbc0 <find_levels_r+0x80>
    cba8:	ldr	r0, [pc, r0]
    cbac:	ldr	r2, [r0, r1, lsl #2]
    cbb0:	str	r2, [r4, #100]	; 0x64
    cbb4:	str	r4, [r0, r1, lsl #2]
    cbb8:	pop	{r4, sl, fp, pc}
    cbbc:	.word	0x00023b74
    cbc0:	.word	0x00023f74

0000cbc4 <compute_local_ud>:
    cbc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cbc8:	add	fp, sp, #28
    cbcc:	sub	sp, sp, #4
    cbd0:	mov	r8, r0
    cbd4:	ldr	r5, [r0, #4]
    cbd8:	cmp	r5, #0
    cbdc:	beq	cc6c <compute_local_ud+0xa8>
    cbe0:	mov	r6, #0
    cbe4:	mov	sl, #131072	; 0x20000
    cbe8:	mov	r9, #1
    cbec:	mov	r4, #0
    cbf0:	mov	r7, #0
    cbf4:	ldr	r0, [r5]
    cbf8:	cmn	r0, #1
    cbfc:	beq	cc5c <compute_local_ud+0x98>
    cc00:	mov	r0, r5
    cc04:	bl	cce8 <atomuse>
    cc08:	cmp	r0, #0
    cc0c:	blt	cc40 <compute_local_ud+0x7c>
    cc10:	cmp	r0, #18
    cc14:	bne	cc30 <compute_local_ud+0x6c>
    cc18:	mov	r0, #65536	; 0x10000
    cc1c:	bic	r0, r0, r7
    cc20:	bic	r1, sl, r7
    cc24:	orr	r1, r1, r4
    cc28:	orr	r4, r1, r0
    cc2c:	b	cc40 <compute_local_ud+0x7c>
    cc30:	cmp	r0, #17
    cc34:	bgt	cce4 <compute_local_ud+0x120>
    cc38:	tst	r7, r9, lsl r0
    cc3c:	orreq	r4, r4, r9, lsl r0
    cc40:	mov	r0, r5
    cc44:	bl	cd9c <atomdef>
    cc48:	cmp	r0, #0
    cc4c:	blt	cc5c <compute_local_ud+0x98>
    cc50:	tst	r4, r9, lsl r0
    cc54:	orreq	r6, r6, r9, lsl r0
    cc58:	orr	r7, r7, r9, lsl r0
    cc5c:	ldr	r5, [r5, #16]
    cc60:	cmp	r5, #0
    cc64:	bne	cbf4 <compute_local_ud+0x30>
    cc68:	b	cc78 <compute_local_ud+0xb4>
    cc6c:	mov	r7, #0
    cc70:	mov	r4, #0
    cc74:	mov	r6, #0
    cc78:	mov	r0, r8
    cc7c:	ldr	r1, [r0, #8]!
    cc80:	and	r1, r1, #7
    cc84:	cmp	r1, #5
    cc88:	bne	ccd0 <compute_local_ud+0x10c>
    cc8c:	bl	cce8 <atomuse>
    cc90:	cmp	r0, #0
    cc94:	blt	ccd0 <compute_local_ud+0x10c>
    cc98:	cmp	r0, #18
    cc9c:	bne	ccbc <compute_local_ud+0xf8>
    cca0:	mov	r0, #65536	; 0x10000
    cca4:	bic	r0, r0, r7
    cca8:	mov	r1, #131072	; 0x20000
    ccac:	bic	r1, r1, r7
    ccb0:	orr	r1, r1, r4
    ccb4:	orr	r4, r1, r0
    ccb8:	b	ccd0 <compute_local_ud+0x10c>
    ccbc:	cmp	r0, #17
    ccc0:	bgt	cce4 <compute_local_ud+0x120>
    ccc4:	mov	r1, #1
    ccc8:	tst	r7, r1, lsl r0
    cccc:	orreq	r4, r4, r1, lsl r0
    ccd0:	str	r7, [r8, #116]	; 0x74
    ccd4:	str	r6, [r8, #120]	; 0x78
    ccd8:	str	r4, [r8, #124]	; 0x7c
    ccdc:	sub	sp, fp, #28
    cce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cce4:	bl	fc4 <abort@plt>

0000cce8 <atomuse>:
    cce8:	mov	r1, r0
    ccec:	ldr	r2, [r0]
    ccf0:	mvn	r0, #0
    ccf4:	cmn	r2, #1
    ccf8:	bxeq	lr
    ccfc:	and	r3, r2, #7
    cd00:	sub	r3, r3, #2
    cd04:	cmp	r3, #5
    cd08:	bhi	cd44 <atomuse+0x5c>
    cd0c:	mov	r0, #16
    cd10:	add	r1, pc, #4
    cd14:	ldr	r3, [r1, r3, lsl #2]
    cd18:	add	pc, r1, r3
    cd1c:	.word	0x00000044
    cd20:	.word	0x00000048
    cd24:	.word	0x00000018
    cd28:	.word	0x00000018
    cd2c:	.word	0x00000050
    cd30:	.word	0x0000006c
    cd34:	mov	r0, #18
    cd38:	tst	r2, #8
    cd3c:	movweq	r0, #16
    cd40:	bx	lr
    cd44:	and	r2, r2, #224	; 0xe0
    cd48:	cmp	r2, #64	; 0x40
    cd4c:	moveq	r0, #17
    cd50:	bxeq	lr
    cd54:	cmp	r2, #96	; 0x60
    cd58:	ldreq	r0, [r1, #12]
    cd5c:	bxeq	lr
    cd60:	bx	lr
    cd64:	mov	r0, #17
    cd68:	bx	lr
    cd6c:	and	r1, r2, #24
    cd70:	mvn	r0, #0
    cd74:	cmp	r1, #8
    cd78:	movweq	r0, #17
    cd7c:	cmp	r1, #16
    cd80:	moveq	r0, r1
    cd84:	bx	lr
    cd88:	and	r1, r2, #248	; 0xf8
    cd8c:	mov	r0, #16
    cd90:	cmp	r1, #128	; 0x80
    cd94:	movweq	r0, #17
    cd98:	bx	lr

0000cd9c <atomdef>:
    cd9c:	mov	ip, r0
    cda0:	ldr	r2, [r0]
    cda4:	mvn	r0, #0
    cda8:	cmn	r2, #1
    cdac:	bxeq	lr
    cdb0:	and	r3, r2, #7
    cdb4:	cmp	r3, #7
    cdb8:	bhi	cdfc <atomdef+0x60>
    cdbc:	mov	r0, #16
    cdc0:	add	r1, pc, #4
    cdc4:	ldr	r3, [r1, r3, lsl #2]
    cdc8:	add	pc, r1, r3
    cdcc:	.word	0x00000034
    cdd0:	.word	0x00000028
    cdd4:	.word	0x00000020
    cdd8:	.word	0x00000020
    cddc:	.word	0x00000034
    cde0:	.word	0x00000030
    cde4:	.word	0x00000030
    cde8:	.word	0x00000038
    cdec:	ldr	r0, [ip, #12]
    cdf0:	bx	lr
    cdf4:	mov	r0, #17
    cdf8:	bx	lr
    cdfc:	mvn	r0, #0
    ce00:	bx	lr
    ce04:	mov	r0, #16
    ce08:	tst	r2, #248	; 0xf8
    ce0c:	movweq	r0, #17
    ce10:	bx	lr

0000ce14 <propedom>:
    ce14:	push	{r4, sl, fp, lr}
    ce18:	add	fp, sp, #8
    ce1c:	ldr	r1, [r0]
    ce20:	ldr	r2, [r0, #8]
    ce24:	lsr	r3, r1, #5
    ce28:	ldr	ip, [r2, r3, lsl #2]
    ce2c:	and	lr, r1, #31
    ce30:	mov	r1, #1
    ce34:	orr	r1, ip, r1, lsl lr
    ce38:	str	r1, [r2, r3, lsl #2]
    ce3c:	ldr	r1, [r0, #12]
    ce40:	cmp	r1, #0
    ce44:	beq	cebc <propedom+0xa8>
    ce48:	ldr	ip, [pc, #112]	; cec0 <propedom+0xac>
    ce4c:	ldr	ip, [pc, ip]
    ce50:	cmp	ip, #1
    ce54:	blt	cebc <propedom+0xa8>
    ce58:	ldr	r2, [r1, #56]	; 0x38
    ce5c:	ldr	lr, [r0, #8]
    ce60:	mov	r1, #0
    ce64:	ldr	r3, [lr, -r1, lsl #2]
    ce68:	ldr	r4, [r2, -r1, lsl #2]
    ce6c:	and	r3, r4, r3
    ce70:	str	r3, [r2, -r1, lsl #2]
    ce74:	sub	r1, r1, #1
    ce78:	add	r3, ip, r1
    ce7c:	add	r3, r3, #1
    ce80:	cmp	r3, #1
    ce84:	bgt	ce64 <propedom+0x50>
    ce88:	cmp	ip, #1
    ce8c:	poplt	{r4, sl, fp, pc}
    ce90:	add	r1, ip, #1
    ce94:	ldr	r2, [r0, #8]
    ce98:	ldr	r0, [r0, #12]
    ce9c:	ldr	r0, [r0, #80]	; 0x50
    cea0:	ldr	r3, [r2], #4
    cea4:	ldr	r4, [r0]
    cea8:	and	r3, r4, r3
    ceac:	str	r3, [r0], #4
    ceb0:	sub	r1, r1, #1
    ceb4:	cmp	r1, #1
    ceb8:	bgt	cea0 <propedom+0x8c>
    cebc:	pop	{r4, sl, fp, pc}
    cec0:	.word	0x000238a4

0000cec4 <init_val>:
    cec4:	push	{fp, lr}
    cec8:	mov	fp, sp
    cecc:	ldr	r0, [pc, #80]	; cf24 <init_val+0x60>
    ced0:	add	r0, pc, r0
    ced4:	mov	r1, #0
    ced8:	str	r1, [r0]
    cedc:	ldr	r0, [pc, #68]	; cf28 <init_val+0x64>
    cee0:	ldr	r0, [pc, r0]
    cee4:	ldr	r1, [pc, #64]	; cf2c <init_val+0x68>
    cee8:	add	r1, pc, r1
    ceec:	str	r0, [r1]
    cef0:	ldr	r0, [pc, #56]	; cf30 <init_val+0x6c>
    cef4:	ldr	r0, [pc, r0]
    cef8:	ldr	r1, [pc, #52]	; cf34 <init_val+0x70>
    cefc:	ldr	r1, [pc, r1]
    cf00:	lsl	r2, r1, #3
    cf04:	mov	r1, #0
    cf08:	bl	f40 <memset@plt>
    cf0c:	ldr	r0, [pc, #36]	; cf38 <init_val+0x74>
    cf10:	add	r0, pc, r0
    cf14:	mov	r1, #0
    cf18:	mov	r2, #852	; 0x354
    cf1c:	pop	{fp, lr}
    cf20:	b	f40 <memset@plt>
    cf24:	.word	0x00023824
    cf28:	.word	0x00023c4c
    cf2c:	.word	0x00023c40
    cf30:	.word	0x00023c3c
    cf34:	.word	0x000237fc
    cf38:	.word	0x000237f0

0000cf3c <find_inedges>:
    cf3c:	push	{r4, r5, fp, lr}
    cf40:	add	fp, sp, #8
    cf44:	ldr	r1, [pc, #132]	; cfd0 <find_inedges+0x94>
    cf48:	ldr	r1, [pc, r1]
    cf4c:	cmp	r1, #1
    cf50:	blt	cf80 <find_inedges+0x44>
    cf54:	mov	r1, #0
    cf58:	ldr	r2, [pc, #116]	; cfd4 <find_inedges+0x98>
    cf5c:	ldr	r2, [pc, r2]
    cf60:	mov	r3, #0
    cf64:	ldr	r5, [pc, #108]	; cfd8 <find_inedges+0x9c>
    cf68:	ldr	r5, [pc, r5]
    cf6c:	ldr	r5, [r5, r3, lsl #2]
    cf70:	str	r1, [r5, #112]	; 0x70
    cf74:	add	r3, r3, #1
    cf78:	cmp	r3, r2
    cf7c:	blt	cf64 <find_inedges+0x28>
    cf80:	ldr	r4, [r0, #36]	; 0x24
    cf84:	cmp	r4, #1
    cf88:	poplt	{r4, r5, fp, pc}
    cf8c:	ldr	r0, [pc, #72]	; cfdc <find_inedges+0xa0>
    cf90:	ldr	r0, [pc, r0]
    cf94:	ldr	r5, [r0, r4, lsl #2]
    cf98:	cmp	r5, #0
    cf9c:	beq	cfc4 <find_inedges+0x88>
    cfa0:	ldr	r1, [r5, #60]	; 0x3c
    cfa4:	add	r0, r5, #48	; 0x30
    cfa8:	bl	d550 <link_inedge>
    cfac:	ldr	r1, [r5, #84]	; 0x54
    cfb0:	add	r0, r5, #72	; 0x48
    cfb4:	bl	d550 <link_inedge>
    cfb8:	ldr	r5, [r5, #100]	; 0x64
    cfbc:	cmp	r5, #0
    cfc0:	bne	cfa0 <find_inedges+0x64>
    cfc4:	subs	r4, r4, #1
    cfc8:	bgt	cf8c <find_inedges+0x50>
    cfcc:	pop	{r4, r5, fp, pc}
    cfd0:	.word	0x00023790
    cfd4:	.word	0x0002377c
    cfd8:	.word	0x00023bb8
    cfdc:	.word	0x00023b8c

0000cfe0 <opt_blk>:
    cfe0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    cfe4:	add	fp, sp, #24
    cfe8:	mov	r5, r1
    cfec:	mov	r4, r0
    cff0:	add	r6, r0, #136	; 0x88
    cff4:	ldr	r7, [r0, #112]	; 0x70
    cff8:	cmp	r7, #0
    cffc:	beq	d058 <opt_blk+0x78>
    d000:	ldr	r0, [r7, #16]
    d004:	add	r1, r0, #136	; 0x88
    d008:	mov	r0, r6
    d00c:	mov	r2, #72	; 0x48
    d010:	bl	e80 <memcpy@plt>
    d014:	ldr	r0, [r7, #20]
    d018:	cmp	r0, #0
    d01c:	beq	d08c <opt_blk+0xac>
    d020:	mov	r1, #0
    d024:	mov	r2, #34	; 0x22
    d028:	ldr	r3, [r4, r2, lsl #2]
    d02c:	ldr	r7, [r0, #16]
    d030:	ldr	r7, [r7, r2, lsl #2]
    d034:	cmp	r3, r7
    d038:	strne	r1, [r4, r2, lsl #2]
    d03c:	add	r2, r2, #1
    d040:	cmp	r2, #52	; 0x34
    d044:	bne	d028 <opt_blk+0x48>
    d048:	ldr	r0, [r0, #20]
    d04c:	cmp	r0, #0
    d050:	bne	d024 <opt_blk+0x44>
    d054:	b	d08c <opt_blk+0xac>
    d058:	mov	r0, #0
    d05c:	vmov.i32	q8, #0	; 0x00000000
    d060:	str	r0, [r6, #64]	; 0x40
    d064:	mov	r1, #68	; 0x44
    d068:	mov	r2, r6
    d06c:	vst1.32	{d16-d17}, [r2], r1
    d070:	str	r0, [r2]
    d074:	add	r0, r6, #48	; 0x30
    d078:	vst1.32	{d16-d17}, [r0]
    d07c:	add	r0, r6, #32
    d080:	vst1.32	{d16-d17}, [r0]
    d084:	add	r0, r6, #16
    d088:	vst1.32	{d16-d17}, [r0]
    d08c:	ldr	r7, [r4, #4]
    d090:	ldr	r9, [r4, #200]	; 0xc8
    d094:	ldr	r8, [r4, #204]	; 0xcc
    d098:	cmp	r7, #0
    d09c:	beq	d0bc <opt_blk+0xdc>
    d0a0:	mov	r0, r7
    d0a4:	mov	r1, r6
    d0a8:	mov	r2, r5
    d0ac:	bl	d560 <opt_stmt>
    d0b0:	ldr	r7, [r7, #16]
    d0b4:	cmp	r7, #0
    d0b8:	bne	d0a0 <opt_blk+0xc0>
    d0bc:	cmp	r5, #0
    d0c0:	beq	d128 <opt_blk+0x148>
    d0c4:	cmp	r9, #0
    d0c8:	beq	d0f4 <opt_blk+0x114>
    d0cc:	ldr	r0, [r4, #128]	; 0x80
    d0d0:	cmp	r0, #0
    d0d4:	bne	d0f4 <opt_blk+0x114>
    d0d8:	cmp	r8, #0
    d0dc:	beq	d0f4 <opt_blk+0x114>
    d0e0:	ldr	r0, [r4, #200]	; 0xc8
    d0e4:	cmp	r0, r9
    d0e8:	ldreq	r0, [r4, #204]	; 0xcc
    d0ec:	cmpeq	r0, r8
    d0f0:	beq	d104 <opt_blk+0x124>
    d0f4:	ldr	r0, [r4, #8]
    d0f8:	and	r0, r0, #7
    d0fc:	cmp	r0, #6
    d100:	bne	d128 <opt_blk+0x148>
    d104:	ldr	r0, [r4, #4]
    d108:	cmp	r0, #0
    d10c:	beq	d138 <opt_blk+0x158>
    d110:	mov	r0, #0
    d114:	str	r0, [r4, #4]
    d118:	ldr	r1, [pc, #84]	; d174 <opt_blk+0x194>
    d11c:	add	r1, pc, r1
    d120:	strb	r0, [r1]
    d124:	b	d138 <opt_blk+0x158>
    d128:	mov	r0, r4
    d12c:	bl	dcac <opt_peep>
    d130:	mov	r0, r4
    d134:	bl	e084 <opt_deadstores>
    d138:	ldrb	r0, [r4, #8]
    d13c:	tst	r0, #8
    d140:	bne	d158 <opt_blk+0x178>
    d144:	ldr	r1, [r4, #20]
    d148:	mov	r0, #0
    d14c:	mov	r2, #0
    d150:	bl	e14c <F>
    d154:	b	d15c <opt_blk+0x17c>
    d158:	ldr	r0, [r4, #204]	; 0xcc
    d15c:	str	r0, [r4, #132]	; 0x84
    d160:	ldr	r0, [r4, #8]
    d164:	str	r0, [r4, #52]	; 0x34
    d168:	rsb	r0, r0, #0
    d16c:	str	r0, [r4, #76]	; 0x4c
    d170:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d174:	.word	0x000235b8

0000d178 <opt_j>:
    d178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d17c:	add	fp, sp, #28
    d180:	sub	sp, sp, #12
    d184:	str	r0, [sp, #8]
    d188:	ldr	r5, [r0, #12]
    d18c:	ldr	r1, [r5, #60]	; 0x3c
    d190:	cmp	r1, #0
    d194:	beq	d2a0 <opt_j+0x128>
    d198:	ldr	r0, [r5, #84]	; 0x54
    d19c:	cmp	r1, r0
    d1a0:	bne	d1d4 <opt_j+0x5c>
    d1a4:	ldr	r0, [sp, #8]
    d1a8:	ldr	r0, [r0, #16]
    d1ac:	bl	e40c <use_conflict>
    d1b0:	cmp	r0, #0
    d1b4:	bne	d1d4 <opt_j+0x5c>
    d1b8:	ldr	r0, [pc, #232]	; d2a8 <opt_j+0x130>
    d1bc:	add	r0, pc, r0
    d1c0:	mov	r1, #0
    d1c4:	strb	r1, [r0]
    d1c8:	ldr	r0, [r5, #60]	; 0x3c
    d1cc:	ldr	r1, [sp, #8]
    d1d0:	str	r0, [r1, #12]
    d1d4:	ldr	r0, [pc, #208]	; d2ac <opt_j+0x134>
    d1d8:	ldr	r0, [pc, r0]
    d1dc:	str	r0, [sp]
    d1e0:	cmp	r0, #1
    d1e4:	blt	d2a0 <opt_j+0x128>
    d1e8:	ldr	r0, [sp, #8]
    d1ec:	ldr	r0, [r0, #8]
    d1f0:	str	r0, [sp, #4]
    d1f4:	ldr	sl, [pc, #180]	; d2b0 <opt_j+0x138>
    d1f8:	ldr	sl, [pc, sl]
    d1fc:	mov	r8, #0
    d200:	ldr	r0, [sp, #4]
    d204:	ldr	r9, [r0, r8, lsl #2]
    d208:	cmp	r9, #0
    d20c:	beq	d268 <opt_j+0xf0>
    d210:	lsl	r7, r8, #5
    d214:	ldr	r0, [sp, #8]
    d218:	ldr	r5, [r0, #12]
    d21c:	rbit	r0, r9
    d220:	clz	r4, r0
    d224:	orr	r0, r4, r7
    d228:	ldr	r1, [sl, r0, lsl #2]
    d22c:	mov	r0, r5
    d230:	bl	e460 <fold_edge>
    d234:	cmp	r0, #0
    d238:	beq	d258 <opt_j+0xe0>
    d23c:	mov	r6, r0
    d240:	ldr	r0, [sp, #8]
    d244:	ldr	r0, [r0, #16]
    d248:	mov	r1, r6
    d24c:	bl	e40c <use_conflict>
    d250:	cmp	r0, #0
    d254:	beq	d27c <opt_j+0x104>
    d258:	mov	r0, #1
    d25c:	bic	r9, r9, r0, lsl r4
    d260:	cmp	r9, #0
    d264:	bne	d21c <opt_j+0xa4>
    d268:	add	r8, r8, #1
    d26c:	ldr	r0, [sp]
    d270:	cmp	r8, r0
    d274:	blt	d200 <opt_j+0x88>
    d278:	b	d2a0 <opt_j+0x128>
    d27c:	ldr	r0, [pc, #48]	; d2b4 <opt_j+0x13c>
    d280:	add	r0, pc, r0
    d284:	mov	r1, #0
    d288:	strb	r1, [r0]
    d28c:	ldr	r0, [sp, #8]
    d290:	str	r6, [r0, #12]
    d294:	ldr	r0, [r6, #60]	; 0x3c
    d298:	cmp	r0, #0
    d29c:	bne	d1e8 <opt_j+0x70>
    d2a0:	sub	sp, fp, #28
    d2a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d2a8:	.word	0x00023518
    d2ac:	.word	0x00023518
    d2b0:	.word	0x0002392c
    d2b4:	.word	0x00023454

0000d2b8 <or_pullup>:
    d2b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d2bc:	add	fp, sp, #24
    d2c0:	ldr	r2, [r0, #112]	; 0x70
    d2c4:	cmp	r2, #0
    d2c8:	beq	d3fc <or_pullup+0x144>
    d2cc:	ldr	r4, [r2, #16]
    d2d0:	ldr	r1, [r4, #200]	; 0xc8
    d2d4:	ldr	r2, [r2, #20]
    d2d8:	cmp	r2, #0
    d2dc:	beq	d2f4 <or_pullup+0x3c>
    d2e0:	ldr	r3, [r2, #16]
    d2e4:	ldr	r3, [r3, #200]	; 0xc8
    d2e8:	cmp	r1, r3
    d2ec:	beq	d2d4 <or_pullup+0x1c>
    d2f0:	b	d3fc <or_pullup+0x144>
    d2f4:	ldr	r2, [r4, #60]!	; 0x3c
    d2f8:	cmp	r2, r0
    d2fc:	addne	r4, r4, #24
    d300:	mov	ip, #1
    d304:	mov	r6, #1
    d308:	mov	lr, r6
    d30c:	ldr	r6, [r4]
    d310:	cmp	r6, #0
    d314:	beq	d3fc <or_pullup+0x144>
    d318:	mov	r8, r4
    d31c:	ldr	r3, [r0, #60]	; 0x3c
    d320:	ldr	r4, [r6, #60]	; 0x3c
    d324:	cmp	r4, r3
    d328:	bne	d3fc <or_pullup+0x144>
    d32c:	ldr	r4, [r0]
    d330:	and	r7, r4, #31
    d334:	ldr	r2, [r6, #104]	; 0x68
    d338:	lsr	r5, r4, #5
    d33c:	ldr	r2, [r2, r5, lsl #2]
    d340:	tst	r2, ip, lsl r7
    d344:	beq	d3fc <or_pullup+0x144>
    d348:	add	r4, r6, #84	; 0x54
    d34c:	ldr	r2, [r6, #200]	; 0xc8
    d350:	mov	r6, #0
    d354:	cmp	r2, r1
    d358:	beq	d308 <or_pullup+0x50>
    d35c:	lsl	r6, ip, r7
    d360:	ldr	ip, [r4]
    d364:	cmp	ip, #0
    d368:	beq	d3fc <or_pullup+0x144>
    d36c:	ldr	r2, [ip, #60]	; 0x3c
    d370:	cmp	r2, r3
    d374:	bne	d3fc <or_pullup+0x144>
    d378:	ldr	r2, [ip, #104]	; 0x68
    d37c:	ldr	r2, [r2, r5, lsl #2]
    d380:	tst	r2, r6
    d384:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    d388:	mov	r7, r4
    d38c:	add	r4, ip, #84	; 0x54
    d390:	ldr	r2, [ip, #200]	; 0xc8
    d394:	cmp	r2, r1
    d398:	bne	d360 <or_pullup+0xa8>
    d39c:	ldr	r1, [r4]
    d3a0:	str	r1, [r7]
    d3a4:	ldr	r1, [r8]
    d3a8:	str	r1, [r4]
    d3ac:	cmp	lr, #0
    d3b0:	beq	d3e8 <or_pullup+0x130>
    d3b4:	ldr	r1, [r0, #112]	; 0x70
    d3b8:	cmp	r1, #0
    d3bc:	beq	d3ec <or_pullup+0x134>
    d3c0:	ldr	r2, [r1, #16]
    d3c4:	ldr	r3, [r2, #60]	; 0x3c
    d3c8:	cmp	r3, r0
    d3cc:	mov	r3, #84	; 0x54
    d3d0:	movweq	r3, #60	; 0x3c
    d3d4:	str	ip, [r2, r3]
    d3d8:	ldr	r1, [r1, #20]
    d3dc:	cmp	r1, #0
    d3e0:	bne	d3c0 <or_pullup+0x108>
    d3e4:	b	d3ec <or_pullup+0x134>
    d3e8:	str	ip, [r8]
    d3ec:	ldr	r0, [pc, #12]	; d400 <or_pullup+0x148>
    d3f0:	add	r0, pc, r0
    d3f4:	mov	r1, #0
    d3f8:	strb	r1, [r0]
    d3fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    d400:	.word	0x000232e4

0000d404 <and_pullup>:
    d404:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d408:	add	fp, sp, #24
    d40c:	ldr	r2, [r0, #112]	; 0x70
    d410:	cmp	r2, #0
    d414:	beq	d548 <and_pullup+0x144>
    d418:	ldr	r4, [r2, #16]
    d41c:	ldr	r1, [r4, #200]	; 0xc8
    d420:	ldr	r2, [r2, #20]
    d424:	cmp	r2, #0
    d428:	beq	d440 <and_pullup+0x3c>
    d42c:	ldr	r3, [r2, #16]
    d430:	ldr	r3, [r3, #200]	; 0xc8
    d434:	cmp	r1, r3
    d438:	beq	d420 <and_pullup+0x1c>
    d43c:	b	d548 <and_pullup+0x144>
    d440:	ldr	r2, [r4, #60]!	; 0x3c
    d444:	cmp	r2, r0
    d448:	addne	r4, r4, #24
    d44c:	mov	ip, #1
    d450:	mov	r6, #1
    d454:	mov	lr, r6
    d458:	ldr	r6, [r4]
    d45c:	cmp	r6, #0
    d460:	beq	d548 <and_pullup+0x144>
    d464:	mov	r8, r4
    d468:	ldr	r3, [r0, #84]	; 0x54
    d46c:	ldr	r4, [r6, #84]	; 0x54
    d470:	cmp	r4, r3
    d474:	bne	d548 <and_pullup+0x144>
    d478:	ldr	r4, [r0]
    d47c:	and	r7, r4, #31
    d480:	ldr	r2, [r6, #104]	; 0x68
    d484:	lsr	r5, r4, #5
    d488:	ldr	r2, [r2, r5, lsl #2]
    d48c:	tst	r2, ip, lsl r7
    d490:	beq	d548 <and_pullup+0x144>
    d494:	add	r4, r6, #60	; 0x3c
    d498:	ldr	r2, [r6, #200]	; 0xc8
    d49c:	mov	r6, #0
    d4a0:	cmp	r2, r1
    d4a4:	beq	d454 <and_pullup+0x50>
    d4a8:	lsl	r6, ip, r7
    d4ac:	ldr	ip, [r4]
    d4b0:	cmp	ip, #0
    d4b4:	beq	d548 <and_pullup+0x144>
    d4b8:	ldr	r2, [ip, #84]	; 0x54
    d4bc:	cmp	r2, r3
    d4c0:	bne	d548 <and_pullup+0x144>
    d4c4:	ldr	r2, [ip, #104]	; 0x68
    d4c8:	ldr	r2, [r2, r5, lsl #2]
    d4cc:	tst	r2, r6
    d4d0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    d4d4:	mov	r7, r4
    d4d8:	add	r4, ip, #60	; 0x3c
    d4dc:	ldr	r2, [ip, #200]	; 0xc8
    d4e0:	cmp	r2, r1
    d4e4:	bne	d4ac <and_pullup+0xa8>
    d4e8:	ldr	r1, [r4]
    d4ec:	str	r1, [r7]
    d4f0:	ldr	r1, [r8]
    d4f4:	str	r1, [r4]
    d4f8:	cmp	lr, #0
    d4fc:	beq	d534 <and_pullup+0x130>
    d500:	ldr	r1, [r0, #112]	; 0x70
    d504:	cmp	r1, #0
    d508:	beq	d538 <and_pullup+0x134>
    d50c:	ldr	r2, [r1, #16]
    d510:	ldr	r3, [r2, #60]	; 0x3c
    d514:	cmp	r3, r0
    d518:	mov	r3, #84	; 0x54
    d51c:	movweq	r3, #60	; 0x3c
    d520:	str	ip, [r2, r3]
    d524:	ldr	r1, [r1, #20]
    d528:	cmp	r1, #0
    d52c:	bne	d50c <and_pullup+0x108>
    d530:	b	d538 <and_pullup+0x134>
    d534:	str	ip, [r8]
    d538:	ldr	r0, [pc, #12]	; d54c <and_pullup+0x148>
    d53c:	add	r0, pc, r0
    d540:	mov	r1, #0
    d544:	strb	r1, [r0]
    d548:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    d54c:	.word	0x00023198

0000d550 <link_inedge>:
    d550:	ldr	r2, [r1, #112]	; 0x70
    d554:	str	r2, [r0, #20]
    d558:	str	r0, [r1, #112]	; 0x70
    d55c:	bx	lr

0000d560 <opt_stmt>:
    d560:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d564:	add	fp, sp, #24
    d568:	ldr	r7, [r0]
    d56c:	cmp	r7, #177	; 0xb1
    d570:	pophi	{r4, r5, r6, r7, r8, r9, fp, pc}
    d574:	mov	r9, r2
    d578:	mov	r4, r1
    d57c:	mov	r5, r0
    d580:	add	r0, pc, #4
    d584:	ldr	r1, [r0, r7, lsl #2]
    d588:	add	pc, r0, r1
    d58c:	.word	0x000004cc
    d590:	.word	0x000004d8
    d594:	.word	0x000004e4
    d598:	.word	0x000004f4
    d59c:	.word	0x000002c8
    d5a0:	.word	0x00000374
    d5a4:	.word	0x00000374
    d5a8:	.word	0x00000504
    d5ac:	.word	0x00000374
    d5b0:	.word	0x00000374
    d5b4:	.word	0x00000374
    d5b8:	.word	0x00000374
    d5bc:	.word	0x00000320
    d5c0:	.word	0x00000374
    d5c4:	.word	0x00000374
    d5c8:	.word	0x00000374
    d5cc:	.word	0x00000374
    d5d0:	.word	0x00000374
    d5d4:	.word	0x00000374
    d5d8:	.word	0x00000374
    d5dc:	.word	0x000002c8
    d5e0:	.word	0x00000374
    d5e4:	.word	0x00000374
    d5e8:	.word	0x00000374
    d5ec:	.word	0x00000374
    d5f0:	.word	0x00000374
    d5f4:	.word	0x00000374
    d5f8:	.word	0x00000374
    d5fc:	.word	0x00000320
    d600:	.word	0x00000374
    d604:	.word	0x00000374
    d608:	.word	0x00000374
    d60c:	.word	0x0000039c
    d610:	.word	0x00000374
    d614:	.word	0x00000374
    d618:	.word	0x00000374
    d61c:	.word	0x000002c8
    d620:	.word	0x00000374
    d624:	.word	0x00000374
    d628:	.word	0x00000374
    d62c:	.word	0x0000039c
    d630:	.word	0x00000374
    d634:	.word	0x00000374
    d638:	.word	0x00000374
    d63c:	.word	0x00000320
    d640:	.word	0x00000374
    d644:	.word	0x00000374
    d648:	.word	0x00000374
    d64c:	.word	0x0000039c
    d650:	.word	0x00000374
    d654:	.word	0x00000374
    d658:	.word	0x00000374
    d65c:	.word	0x000002c8
    d660:	.word	0x00000374
    d664:	.word	0x00000374
    d668:	.word	0x00000374
    d66c:	.word	0x00000374
    d670:	.word	0x00000374
    d674:	.word	0x00000374
    d678:	.word	0x00000374
    d67c:	.word	0x00000320
    d680:	.word	0x00000374
    d684:	.word	0x00000374
    d688:	.word	0x00000374
    d68c:	.word	0x000003a8
    d690:	.word	0x00000374
    d694:	.word	0x00000374
    d698:	.word	0x00000374
    d69c:	.word	0x000002c8
    d6a0:	.word	0x00000374
    d6a4:	.word	0x00000374
    d6a8:	.word	0x00000374
    d6ac:	.word	0x000003a8
    d6b0:	.word	0x00000374
    d6b4:	.word	0x00000374
    d6b8:	.word	0x00000374
    d6bc:	.word	0x00000320
    d6c0:	.word	0x00000374
    d6c4:	.word	0x00000374
    d6c8:	.word	0x00000374
    d6cc:	.word	0x000003a8
    d6d0:	.word	0x00000374
    d6d4:	.word	0x00000374
    d6d8:	.word	0x00000374
    d6dc:	.word	0x000002c8
    d6e0:	.word	0x00000374
    d6e4:	.word	0x00000374
    d6e8:	.word	0x00000374
    d6ec:	.word	0x00000374
    d6f0:	.word	0x00000374
    d6f4:	.word	0x00000374
    d6f8:	.word	0x00000374
    d6fc:	.word	0x00000320
    d700:	.word	0x00000374
    d704:	.word	0x00000374
    d708:	.word	0x00000374
    d70c:	.word	0x00000510
    d710:	.word	0x00000560
    d714:	.word	0x00000374
    d718:	.word	0x00000374
    d71c:	.word	0x000002c8
    d720:	.word	0x00000374
    d724:	.word	0x00000374
    d728:	.word	0x00000374
    d72c:	.word	0x00000374
    d730:	.word	0x00000374
    d734:	.word	0x00000374
    d738:	.word	0x00000374
    d73c:	.word	0x00000320
    d740:	.word	0x00000374
    d744:	.word	0x00000374
    d748:	.word	0x00000374
    d74c:	.word	0x00000374
    d750:	.word	0x00000374
    d754:	.word	0x00000374
    d758:	.word	0x00000374
    d75c:	.word	0x000002c8
    d760:	.word	0x00000374
    d764:	.word	0x00000374
    d768:	.word	0x00000374
    d76c:	.word	0x00000374
    d770:	.word	0x00000374
    d774:	.word	0x00000374
    d778:	.word	0x00000374
    d77c:	.word	0x00000320
    d780:	.word	0x00000374
    d784:	.word	0x00000374
    d788:	.word	0x00000374
    d78c:	.word	0x000005b8
    d790:	.word	0x00000374
    d794:	.word	0x00000374
    d798:	.word	0x00000374
    d79c:	.word	0x000005e0
    d7a0:	.word	0x00000374
    d7a4:	.word	0x00000374
    d7a8:	.word	0x00000628
    d7ac:	.word	0x00000374
    d7b0:	.word	0x00000374
    d7b4:	.word	0x00000374
    d7b8:	.word	0x00000374
    d7bc:	.word	0x00000374
    d7c0:	.word	0x00000374
    d7c4:	.word	0x00000374
    d7c8:	.word	0x00000374
    d7cc:	.word	0x00000374
    d7d0:	.word	0x00000374
    d7d4:	.word	0x00000374
    d7d8:	.word	0x00000374
    d7dc:	.word	0x00000374
    d7e0:	.word	0x00000374
    d7e4:	.word	0x00000374
    d7e8:	.word	0x00000374
    d7ec:	.word	0x00000374
    d7f0:	.word	0x00000374
    d7f4:	.word	0x00000374
    d7f8:	.word	0x00000374
    d7fc:	.word	0x00000374
    d800:	.word	0x00000374
    d804:	.word	0x00000374
    d808:	.word	0x00000374
    d80c:	.word	0x00000374
    d810:	.word	0x00000374
    d814:	.word	0x00000374
    d818:	.word	0x00000374
    d81c:	.word	0x00000374
    d820:	.word	0x00000374
    d824:	.word	0x00000374
    d828:	.word	0x00000374
    d82c:	.word	0x00000374
    d830:	.word	0x00000374
    d834:	.word	0x00000374
    d838:	.word	0x00000374
    d83c:	.word	0x00000374
    d840:	.word	0x00000374
    d844:	.word	0x00000374
    d848:	.word	0x00000374
    d84c:	.word	0x00000374
    d850:	.word	0x00000630
    d854:	cmp	r9, #0
    d858:	beq	d904 <opt_stmt+0x3a4>
    d85c:	ldr	r1, [r5, #12]
    d860:	cmp	r1, #0
    d864:	beq	d99c <opt_stmt+0x43c>
    d868:	ldr	r6, [r4, #64]	; 0x40
    d86c:	ldr	r0, [pc, #1040]	; dc84 <opt_stmt+0x724>
    d870:	ldr	r0, [pc, r0]
    d874:	ldr	r0, [r0, r6, lsl #3]
    d878:	cmp	r0, #0
    d87c:	beq	d904 <opt_stmt+0x3a4>
    d880:	mov	r0, #0
    d884:	mov	r2, #0
    d888:	bl	e14c <F>
    d88c:	mov	r2, r0
    d890:	mov	r0, r5
    d894:	mov	r1, r6
    d898:	bl	e274 <fold_op>
    d89c:	ldr	r1, [r5, #12]
    d8a0:	mov	r0, #0
    d8a4:	mov	r2, #0
    d8a8:	b	da4c <opt_stmt+0x4ec>
    d8ac:	cmp	r9, #0
    d8b0:	beq	d9e4 <opt_stmt+0x484>
    d8b4:	and	ip, r7, #240	; 0xf0
    d8b8:	mov	r8, r4
    d8bc:	ldr	r1, [r8, #64]!	; 0x40
    d8c0:	ldr	r3, [pc, #960]	; dc88 <opt_stmt+0x728>
    d8c4:	ldr	r3, [pc, r3]
    d8c8:	ldr	r0, [r3, r1, lsl #3]
    d8cc:	ldr	r2, [r8, #4]
    d8d0:	ldr	r6, [r3, r2, lsl #3]
    d8d4:	cmp	r6, #0
    d8d8:	beq	d9cc <opt_stmt+0x46c>
    d8dc:	cmp	r0, #0
    d8e0:	beq	da00 <opt_stmt+0x4a0>
    d8e4:	mov	r0, r5
    d8e8:	bl	e274 <fold_op>
    d8ec:	ldr	r1, [r5, #12]
    d8f0:	mov	r0, #0
    d8f4:	mov	r2, #0
    d8f8:	bl	e14c <F>
    d8fc:	str	r0, [r8]
    d900:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d904:	ldr	r6, [r4, #64]	; 0x40
    d908:	ldr	r1, [r5, #12]
    d90c:	mov	r0, #0
    d910:	mov	r2, #0
    d914:	bl	e14c <F>
    d918:	mov	r2, r0
    d91c:	mov	r0, r7
    d920:	mov	r1, r6
    d924:	b	da4c <opt_stmt+0x4ec>
    d928:	ldr	r1, [r5, #12]
    d92c:	mov	r0, r7
    d930:	b	db4c <opt_stmt+0x5ec>
    d934:	ldr	r2, [r4, #68]	; 0x44
    d938:	cmp	r9, #0
    d93c:	beq	d9f4 <opt_stmt+0x494>
    d940:	ldr	r0, [pc, #808]	; dc70 <opt_stmt+0x710>
    d944:	ldr	r0, [pc, r0]
    d948:	ldr	r0, [r0, r2, lsl #3]
    d94c:	cmp	r0, #0
    d950:	beq	d9f4 <opt_stmt+0x494>
    d954:	and	r0, r7, #24
    d958:	orr	r0, r0, #32
    d95c:	str	r0, [r5]
    d960:	ldr	r1, [pc, #780]	; dc74 <opt_stmt+0x714>
    d964:	ldr	r1, [pc, r1]
    d968:	add	r1, r1, r2, lsl #3
    d96c:	ldr	r1, [r1, #4]
    d970:	ldr	r2, [r5, #12]
    d974:	add	r1, r2, r1
    d978:	str	r1, [r5, #12]
    d97c:	mov	r7, #0
    d980:	mov	r2, #0
    d984:	bl	e14c <F>
    d988:	mov	r2, r0
    d98c:	ldr	r0, [pc, #740]	; dc78 <opt_stmt+0x718>
    d990:	add	r0, pc, r0
    d994:	strb	r7, [r0]
    d998:	b	db58 <opt_stmt+0x5f8>
    d99c:	and	r0, r7, #240	; 0xf0
    d9a0:	sbfx	r2, r0, #4, #4
    d9a4:	cmp	r2, #0
    d9a8:	blt	dc00 <opt_stmt+0x6a0>
    d9ac:	lsr	r2, r0, #4
    d9b0:	mov	r3, #1
    d9b4:	mov	r6, #209	; 0xd1
    d9b8:	tst	r6, r3, lsl r2
    d9bc:	beq	dc00 <opt_stmt+0x6a0>
    d9c0:	mvn	r0, #0
    d9c4:	str	r0, [r5]
    d9c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d9cc:	cmp	r0, #0
    d9d0:	beq	d9e4 <opt_stmt+0x484>
    d9d4:	add	r0, r3, r1, lsl #3
    d9d8:	ldr	r0, [r0, #4]
    d9dc:	cmp	r0, #0
    d9e0:	beq	dbe4 <opt_stmt+0x684>
    d9e4:	ldr	r1, [r4, #64]	; 0x40
    d9e8:	ldr	r2, [r4, #68]	; 0x44
    d9ec:	mov	r0, r7
    d9f0:	b	da4c <opt_stmt+0x4ec>
    d9f4:	ldr	r1, [r5, #12]
    d9f8:	mov	r0, r7
    d9fc:	b	db50 <opt_stmt+0x5f0>
    da00:	orr	r6, ip, #4
    da04:	str	r6, [r5]
    da08:	ldr	r0, [r4, #68]	; 0x44
    da0c:	ldr	r1, [pc, #632]	; dc8c <opt_stmt+0x72c>
    da10:	ldr	r1, [pc, r1]
    da14:	add	r0, r1, r0, lsl #3
    da18:	ldr	r1, [r0, #4]
    da1c:	str	r1, [r5, #12]
    da20:	ldr	r0, [pc, #616]	; dc90 <opt_stmt+0x730>
    da24:	add	r0, pc, r0
    da28:	mov	r2, #0
    da2c:	strb	r2, [r0]
    da30:	ldr	r5, [r4, #64]	; 0x40
    da34:	mov	r0, #0
    da38:	mov	r2, #0
    da3c:	bl	e14c <F>
    da40:	mov	r2, r0
    da44:	mov	r0, r6
    da48:	mov	r1, r5
    da4c:	bl	e14c <F>
    da50:	str	r0, [r4, #64]	; 0x40
    da54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    da58:	ldr	r1, [r5, #12]
    da5c:	mov	r0, #0
    da60:	b	db4c <opt_stmt+0x5ec>
    da64:	ldr	r1, [r5, #12]
    da68:	mov	r0, #0
    da6c:	b	dbc4 <opt_stmt+0x664>
    da70:	ldr	r0, [r5, #12]
    da74:	add	r1, r4, r0, lsl #2
    da78:	ldr	r2, [r4, #64]	; 0x40
    da7c:	b	db5c <opt_stmt+0x5fc>
    da80:	ldr	r0, [r5, #12]
    da84:	add	r1, r4, r0, lsl #2
    da88:	ldr	r2, [r4, #68]	; 0x44
    da8c:	b	db5c <opt_stmt+0x5fc>
    da90:	ldr	r2, [r4, #64]	; 0x40
    da94:	add	r1, r4, #68	; 0x44
    da98:	b	db5c <opt_stmt+0x5fc>
    da9c:	ldr	r0, [r5, #12]
    daa0:	ldr	r2, [r4, r0, lsl #2]
    daa4:	cmp	r9, #0
    daa8:	beq	db58 <opt_stmt+0x5f8>
    daac:	ldr	r0, [pc, #480]	; dc94 <opt_stmt+0x734>
    dab0:	ldr	r0, [pc, r0]
    dab4:	ldr	r0, [r0, r2, lsl #3]
    dab8:	cmp	r0, #0
    dabc:	beq	db58 <opt_stmt+0x5f8>
    dac0:	mov	r0, #0
    dac4:	str	r0, [r5]
    dac8:	ldr	r1, [pc, #456]	; dc98 <opt_stmt+0x738>
    dacc:	ldr	r1, [pc, r1]
    dad0:	add	r1, r1, r2, lsl #3
    dad4:	ldr	r1, [r1, #4]
    dad8:	str	r1, [r5, #12]
    dadc:	ldr	r1, [pc, #440]	; dc9c <opt_stmt+0x73c>
    dae0:	add	r1, pc, r1
    dae4:	strb	r0, [r1]
    dae8:	b	db58 <opt_stmt+0x5f8>
    daec:	ldr	r0, [r5, #12]
    daf0:	ldr	r2, [r4, r0, lsl #2]
    daf4:	cmp	r9, #0
    daf8:	beq	db3c <opt_stmt+0x5dc>
    dafc:	ldr	r0, [pc, #412]	; dca0 <opt_stmt+0x740>
    db00:	ldr	r0, [pc, r0]
    db04:	ldr	r0, [r0, r2, lsl #3]
    db08:	cmp	r0, #0
    db0c:	beq	db3c <opt_stmt+0x5dc>
    db10:	mov	r0, #1
    db14:	str	r0, [r5]
    db18:	ldr	r0, [pc, #388]	; dca4 <opt_stmt+0x744>
    db1c:	ldr	r0, [pc, r0]
    db20:	add	r0, r0, r2, lsl #3
    db24:	ldr	r0, [r0, #4]
    db28:	str	r0, [r5, #12]
    db2c:	ldr	r0, [pc, #372]	; dca8 <opt_stmt+0x748>
    db30:	add	r0, pc, r0
    db34:	mov	r1, #0
    db38:	strb	r1, [r0]
    db3c:	add	r1, r4, #68	; 0x44
    db40:	b	db5c <opt_stmt+0x5fc>
    db44:	mov	r0, r7
    db48:	mov	r1, #0
    db4c:	mov	r2, #0
    db50:	bl	e14c <F>
    db54:	mov	r2, r0
    db58:	add	r1, r4, #64	; 0x40
    db5c:	mov	r0, r5
    db60:	mov	r3, r9
    db64:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    db68:	b	e250 <vstore>
    db6c:	cmp	r9, #0
    db70:	beq	dbd8 <opt_stmt+0x678>
    db74:	ldr	r0, [r4, #64]	; 0x40
    db78:	ldr	r1, [pc, #252]	; dc7c <opt_stmt+0x71c>
    db7c:	ldr	r1, [pc, r1]
    db80:	ldr	r0, [r1, r0, lsl #3]
    db84:	cmp	r0, #0
    db88:	beq	dbd8 <opt_stmt+0x678>
    db8c:	mov	r0, #0
    db90:	str	r0, [r5]
    db94:	ldr	r0, [r4, #64]	; 0x40
    db98:	ldr	r1, [pc, #224]	; dc80 <opt_stmt+0x720>
    db9c:	ldr	r1, [pc, r1]
    dba0:	add	r0, r1, r0, lsl #3
    dba4:	ldr	r0, [r0, #4]
    dba8:	rsb	r1, r0, #0
    dbac:	str	r1, [r5, #12]
    dbb0:	b	d8a0 <opt_stmt+0x340>
    dbb4:	ldr	r2, [r4, #68]	; 0x44
    dbb8:	b	db58 <opt_stmt+0x5f8>
    dbbc:	ldr	r1, [r5, #12]
    dbc0:	mov	r0, r7
    dbc4:	mov	r2, #0
    dbc8:	bl	e14c <F>
    dbcc:	mov	r2, r0
    dbd0:	add	r1, r4, #68	; 0x44
    dbd4:	b	db5c <opt_stmt+0x5fc>
    dbd8:	ldr	r1, [r4, #64]	; 0x40
    dbdc:	mov	r0, r7
    dbe0:	b	d8a4 <opt_stmt+0x344>
    dbe4:	orr	r0, ip, #64	; 0x40
    dbe8:	cmp	r0, #64	; 0x40
    dbec:	bne	dc18 <opt_stmt+0x6b8>
    dbf0:	mov	r0, #135	; 0x87
    dbf4:	str	r0, [r5]
    dbf8:	ldr	r2, [r4, #68]	; 0x44
    dbfc:	b	dc58 <opt_stmt+0x6f8>
    dc00:	cmp	r0, #80	; 0x50
    dc04:	cmpne	r0, #32
    dc08:	bne	d868 <opt_stmt+0x308>
    dc0c:	mov	r0, #0
    dc10:	str	r0, [r5]
    dc14:	b	d8a0 <opt_stmt+0x340>
    dc18:	sub	r0, ip, #32
    dc1c:	lsr	r0, r0, #4
    dc20:	cmp	r0, #6
    dc24:	bhi	d9e4 <opt_stmt+0x484>
    dc28:	mov	r1, #1
    dc2c:	mov	r2, #59	; 0x3b
    dc30:	tst	r2, r1, lsl r0
    dc34:	beq	dc64 <opt_stmt+0x704>
    dc38:	mov	r0, #0
    dc3c:	str	r0, [r5, #12]
    dc40:	str	r0, [r5]
    dc44:	mov	r0, #0
    dc48:	mov	r1, #0
    dc4c:	mov	r2, #0
    dc50:	bl	e14c <F>
    dc54:	mov	r2, r0
    dc58:	mov	r0, r5
    dc5c:	mov	r1, r8
    dc60:	b	db60 <opt_stmt+0x600>
    dc64:	cmp	r0, #6
    dc68:	beq	d9c0 <opt_stmt+0x460>
    dc6c:	b	d9e4 <opt_stmt+0x484>
    dc70:	.word	0x000231ec
    dc74:	.word	0x000231cc
    dc78:	.word	0x00022d44
    dc7c:	.word	0x00022fb4
    dc80:	.word	0x00022f94
    dc84:	.word	0x000232c0
    dc88:	.word	0x0002326c
    dc8c:	.word	0x00023120
    dc90:	.word	0x00022cb0
    dc94:	.word	0x00023080
    dc98:	.word	0x00023064
    dc9c:	.word	0x00022bf4
    dca0:	.word	0x00023030
    dca4:	.word	0x00023014
    dca8:	.word	0x00022ba4

0000dcac <opt_peep>:
    dcac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dcb0:	add	fp, sp, #28
    dcb4:	sub	sp, sp, #4
    dcb8:	ldr	r5, [r0, #4]
    dcbc:	cmp	r5, #0
    dcc0:	beq	e02c <opt_peep+0x380>
    dcc4:	mov	r4, r0
    dcc8:	mov	r0, r5
    dccc:	bl	e358 <this_op>
    dcd0:	cmp	r0, #0
    dcd4:	beq	de28 <opt_peep+0x17c>
    dcd8:	mov	r6, r0
    dcdc:	ldr	r0, [r0, #16]
    dce0:	bl	e358 <this_op>
    dce4:	cmp	r0, #0
    dce8:	beq	de28 <opt_peep+0x17c>
    dcec:	ldr	r9, [pc, #884]	; e068 <opt_peep+0x3bc>
    dcf0:	add	r9, pc, r9
    dcf4:	mov	sl, #0
    dcf8:	mov	r5, r0
    dcfc:	ldr	r0, [r6]
    dd00:	cmp	r0, #2
    dd04:	bne	dd30 <opt_peep+0x84>
    dd08:	ldr	r0, [r5]
    dd0c:	cmp	r0, #97	; 0x61
    dd10:	bne	dd2c <opt_peep+0x80>
    dd14:	ldr	r0, [r5, #12]
    dd18:	ldr	r1, [r6, #12]
    dd1c:	cmp	r1, r0
    dd20:	strbeq	sl, [r9]
    dd24:	moveq	r0, #7
    dd28:	streq	r0, [r5]
    dd2c:	ldr	r0, [r6]
    dd30:	cmp	r0, #0
    dd34:	bne	dd58 <opt_peep+0xac>
    dd38:	ldr	r0, [r5]
    dd3c:	cmp	r0, #7
    dd40:	bne	dd58 <opt_peep+0xac>
    dd44:	mov	r0, #1
    dd48:	str	r0, [r6]
    dd4c:	mov	r0, #135	; 0x87
    dd50:	str	r0, [r5]
    dd54:	strb	sl, [r9]
    dd58:	ldr	r0, [r6]
    dd5c:	cmp	r0, #0
    dd60:	bne	de04 <opt_peep+0x158>
    dd64:	ldrb	r0, [r4, #130]	; 0x82
    dd68:	tst	r0, #2
    dd6c:	bne	de04 <opt_peep+0x158>
    dd70:	ldr	r0, [r5]
    dd74:	cmp	r0, #177	; 0xb1
    dd78:	mov	r7, r5
    dd7c:	bne	dd94 <opt_peep+0xe8>
    dd80:	ldr	r0, [r5, #16]
    dd84:	bl	e358 <this_op>
    dd88:	mov	r7, r0
    dd8c:	cmp	r0, #0
    dd90:	beq	de04 <opt_peep+0x158>
    dd94:	ldr	r0, [r7]
    dd98:	cmp	r0, #12
    dd9c:	bne	de04 <opt_peep+0x158>
    dda0:	ldr	r0, [r7, #16]
    dda4:	bl	e358 <this_op>
    dda8:	cmp	r0, #0
    ddac:	beq	de04 <opt_peep+0x158>
    ddb0:	mov	r8, r0
    ddb4:	ldr	r0, [r0]
    ddb8:	cmp	r0, #7
    ddbc:	bne	de04 <opt_peep+0x158>
    ddc0:	ldr	r0, [r8, #16]
    ddc4:	bl	e358 <this_op>
    ddc8:	cmp	r0, #0
    ddcc:	beq	de04 <opt_peep+0x158>
    ddd0:	ldr	r1, [r0]
    ddd4:	and	r1, r1, #231	; 0xe7
    ddd8:	cmp	r1, #64	; 0x40
    dddc:	bne	de04 <opt_peep+0x158>
    dde0:	ldr	r1, [r6, #12]
    dde4:	ldr	r2, [r0, #12]
    dde8:	add	r1, r2, r1
    ddec:	str	r1, [r0, #12]
    ddf0:	mvn	r0, #0
    ddf4:	str	r0, [r6]
    ddf8:	str	r0, [r7]
    ddfc:	str	r0, [r8]
    de00:	strb	sl, [r9]
    de04:	mov	r0, r5
    de08:	bl	e358 <this_op>
    de0c:	cmp	r0, #0
    de10:	beq	de28 <opt_peep+0x17c>
    de14:	mov	r6, r0
    de18:	ldr	r0, [r0, #16]
    de1c:	bl	e358 <this_op>
    de20:	cmp	r0, #0
    de24:	bne	dcf8 <opt_peep+0x4c>
    de28:	ldr	r0, [r4, #8]
    de2c:	cmp	r0, #21
    de30:	bne	df00 <opt_peep+0x254>
    de34:	ldrb	r0, [r4, #130]	; 0x82
    de38:	tst	r0, #1
    de3c:	bne	defc <opt_peep+0x250>
    de40:	ldr	r0, [r5]
    de44:	cmp	r0, #20
    de48:	beq	ded4 <opt_peep+0x228>
    de4c:	cmp	r0, #84	; 0x54
    de50:	beq	de94 <opt_peep+0x1e8>
    de54:	cmp	r0, #28
    de58:	bne	defc <opt_peep+0x250>
    de5c:	ldr	r0, [r4, #204]	; 0xcc
    de60:	ldr	r1, [pc, #516]	; e06c <opt_peep+0x3c0>
    de64:	ldr	r1, [pc, r1]
    de68:	ldr	r2, [r1, r0, lsl #3]
    de6c:	cmp	r2, #0
    de70:	beq	e034 <opt_peep+0x388>
    de74:	add	r0, r1, r0, lsl #3
    de78:	ldr	r0, [r0, #4]
    de7c:	ldr	r1, [r4, #20]
    de80:	add	r0, r1, r0
    de84:	str	r0, [r4, #20]
    de88:	mvn	r0, #0
    de8c:	str	r0, [r5]
    de90:	b	deec <opt_peep+0x240>
    de94:	ldr	r0, [r4, #20]
    de98:	cmp	r0, #0
    de9c:	bne	defc <opt_peep+0x250>
    dea0:	ldr	r0, [r5, #12]
    dea4:	mov	r1, #69	; 0x45
    dea8:	str	r1, [r4, #8]
    deac:	str	r0, [r4, #20]
    deb0:	mvn	r0, #0
    deb4:	str	r0, [r5]
    deb8:	ldr	r0, [pc, #440]	; e078 <opt_peep+0x3cc>
    debc:	add	r0, pc, r0
    dec0:	mov	r1, #0
    dec4:	strb	r1, [r0]
    dec8:	mov	r0, r4
    decc:	bl	e384 <opt_not>
    ded0:	b	defc <opt_peep+0x250>
    ded4:	mvn	r0, #0
    ded8:	str	r0, [r5]
    dedc:	ldr	r0, [r5, #12]
    dee0:	ldr	r1, [r4, #20]
    dee4:	add	r0, r1, r0
    dee8:	str	r0, [r4, #20]
    deec:	ldr	r0, [pc, #384]	; e074 <opt_peep+0x3c8>
    def0:	add	r0, pc, r0
    def4:	mov	r1, #0
    def8:	strb	r1, [r0]
    defc:	ldr	r0, [r4, #8]
    df00:	cmp	r0, #69	; 0x45
    df04:	bne	df30 <opt_peep+0x284>
    df08:	ldr	r1, [r4, #20]
    df0c:	mov	r0, #69	; 0x45
    df10:	cmn	r1, #1
    df14:	beq	df28 <opt_peep+0x27c>
    df18:	cmp	r1, #0
    df1c:	ldreq	r1, [r4, #84]	; 0x54
    df20:	streq	r1, [r4, #60]	; 0x3c
    df24:	b	df30 <opt_peep+0x284>
    df28:	ldr	r1, [r4, #60]	; 0x3c
    df2c:	str	r1, [r4, #84]	; 0x54
    df30:	ldr	r1, [pc, #324]	; e07c <opt_peep+0x3d0>
    df34:	ldr	r1, [pc, r1]
    df38:	tst	r0, #8
    df3c:	ldrne	r2, [r4, #204]	; 0xcc
    df40:	ldrne	r3, [r1, r2, lsl #3]
    df44:	cmpne	r3, #0
    df48:	addne	r2, r1, r2, lsl #3
    df4c:	ldrne	r2, [r2, #4]
    df50:	bicne	r0, r0, #8
    df54:	strne	r0, [r4, #8]
    df58:	strne	r2, [r4, #20]
    df5c:	ldr	r0, [r4, #200]	; 0xc8
    df60:	ldr	r2, [r1, r0, lsl #3]
    df64:	cmp	r2, #0
    df68:	beq	e02c <opt_peep+0x380>
    df6c:	ldr	r2, [r4, #8]
    df70:	tst	r2, #8
    df74:	bne	e02c <opt_peep+0x380>
    df78:	and	r2, r2, #240	; 0xf0
    df7c:	sub	r2, r2, #16
    df80:	lsr	r2, r2, #4
    df84:	cmp	r2, #3
    df88:	bhi	e064 <opt_peep+0x3b8>
    df8c:	add	r0, r1, r0, lsl #3
    df90:	ldr	r1, [r0, #4]
    df94:	add	r0, pc, #4
    df98:	ldr	r2, [r0, r2, lsl #2]
    df9c:	add	pc, r0, r2
    dfa0:	.word	0x00000010
    dfa4:	.word	0x00000044
    dfa8:	.word	0x00000024
    dfac:	.word	0x00000038
    dfb0:	ldr	r0, [r4, #20]
    dfb4:	sub	r0, r1, r0
    dfb8:	clz	r0, r0
    dfbc:	lsr	r0, r0, #5
    dfc0:	b	dff4 <opt_peep+0x348>
    dfc4:	ldr	r2, [r4, #20]
    dfc8:	mov	r0, #0
    dfcc:	cmp	r1, r2
    dfd0:	movwcs	r0, #1
    dfd4:	b	dff4 <opt_peep+0x348>
    dfd8:	ldr	r0, [r4, #20]
    dfdc:	and	r0, r0, r1
    dfe0:	b	dff4 <opt_peep+0x348>
    dfe4:	ldr	r2, [r4, #20]
    dfe8:	mov	r0, #0
    dfec:	cmp	r1, r2
    dff0:	movwhi	r0, #1
    dff4:	ldr	r1, [r4, #60]	; 0x3c
    dff8:	ldr	r2, [r4, #84]	; 0x54
    dffc:	cmp	r2, r1
    e000:	ldrne	r1, [pc, #120]	; e080 <opt_peep+0x3d4>
    e004:	addne	r1, pc, r1
    e008:	movne	r2, #0
    e00c:	strbne	r2, [r1]
    e010:	cmp	r0, #0
    e014:	ldrne	r0, [r4, #60]	; 0x3c
    e018:	strne	r0, [r4, #84]	; 0x54
    e01c:	subne	sp, fp, #28
    e020:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e024:	ldr	r0, [r4, #84]	; 0x54
    e028:	str	r0, [r4, #60]	; 0x3c
    e02c:	sub	sp, fp, #28
    e030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e034:	ldr	r0, [r4, #20]
    e038:	cmp	r0, #0
    e03c:	bne	defc <opt_peep+0x250>
    e040:	mvn	r0, #0
    e044:	str	r0, [r5]
    e048:	mov	r0, #29
    e04c:	str	r0, [r4, #8]
    e050:	ldr	r1, [pc, #24]	; e070 <opt_peep+0x3c4>
    e054:	add	r1, pc, r1
    e058:	mov	r2, #0
    e05c:	strb	r2, [r1]
    e060:	b	df30 <opt_peep+0x284>
    e064:	bl	fc4 <abort@plt>
    e068:	.word	0x000229e4
    e06c:	.word	0x00022ccc
    e070:	.word	0x00022680
    e074:	.word	0x000227e4
    e078:	.word	0x00022818
    e07c:	.word	0x00022bfc
    e080:	.word	0x000226d0

0000e084 <opt_deadstores>:
    e084:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    e088:	add	fp, sp, #24
    e08c:	sub	sp, sp, #72	; 0x48
    e090:	mov	r4, r0
    e094:	vmov.i32	q8, #0	; 0x00000000
    e098:	mov	r0, #68	; 0x44
    e09c:	mov	r5, sp
    e0a0:	mov	r1, r5
    e0a4:	vst1.64	{d16-d17}, [r1], r0
    e0a8:	mov	r8, #0
    e0ac:	str	r8, [r1]
    e0b0:	add	r0, r5, #48	; 0x30
    e0b4:	vst1.64	{d16-d17}, [r0]
    e0b8:	add	r0, r5, #32
    e0bc:	vst1.64	{d16-d17}, [r0]
    e0c0:	add	r0, r5, #16
    e0c4:	vst1.64	{d16-d17}, [r0]
    e0c8:	str	r8, [sp, #64]	; 0x40
    e0cc:	ldr	r6, [r4, #4]
    e0d0:	cmp	r6, #0
    e0d4:	beq	e0f4 <opt_deadstores+0x70>
    e0d8:	mov	r7, sp
    e0dc:	mov	r0, r6
    e0e0:	mov	r1, r7
    e0e4:	bl	e398 <deadstmt>
    e0e8:	ldr	r6, [r6, #16]
    e0ec:	cmp	r6, #0
    e0f0:	bne	e0dc <opt_deadstores+0x58>
    e0f4:	add	r0, r4, #8
    e0f8:	mov	r1, r5
    e0fc:	bl	e398 <deadstmt>
    e100:	mov	r0, #1
    e104:	mvn	r1, #0
    e108:	ldr	r2, [pc, #56]	; e148 <opt_deadstores+0xc4>
    e10c:	add	r2, pc, r2
    e110:	mov	r3, #0
    e114:	b	e128 <opt_deadstores+0xa4>
    e118:	add	r3, r3, #1
    e11c:	cmp	r3, #18
    e120:	subeq	sp, fp, #24
    e124:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    e128:	ldr	r7, [r5, r3, lsl #2]
    e12c:	cmp	r7, #0
    e130:	beq	e118 <opt_deadstores+0x94>
    e134:	ldr	r6, [r4, #128]	; 0x80
    e138:	tst	r6, r0, lsl r3
    e13c:	streq	r1, [r7]
    e140:	strbeq	r8, [r2]
    e144:	b	e118 <opt_deadstores+0x94>
    e148:	.word	0x000225c8

0000e14c <F>:
    e14c:	push	{r4, r5, r6, sl, fp, lr}
    e150:	add	fp, sp, #16
    e154:	eor	r3, r0, r1, lsl #4
    e158:	eor	ip, r3, r2, lsl #8
    e15c:	movw	r3, #8923	; 0x22db
    e160:	movt	r3, #39383	; 0x99d7
    e164:	umull	r3, lr, ip, r3
    e168:	lsr	lr, lr, #7
    e16c:	mov	r3, #213	; 0xd5
    e170:	mls	ip, lr, r3, ip
    e174:	ldr	lr, [pc, #184]	; e234 <F+0xe8>
    e178:	add	lr, pc, lr
    e17c:	ldr	r3, [lr, ip, lsl #2]
    e180:	cmp	r3, #0
    e184:	bne	e198 <F+0x4c>
    e188:	b	e1c4 <F+0x78>
    e18c:	ldr	r3, [r3, #16]
    e190:	cmp	r3, #0
    e194:	beq	e1c4 <F+0x78>
    e198:	ldr	r4, [r3]
    e19c:	cmp	r4, r0
    e1a0:	ldreq	r4, [r3, #4]
    e1a4:	cmpeq	r4, r1
    e1a8:	bne	e18c <F+0x40>
    e1ac:	ldr	r4, [r3, #8]
    e1b0:	cmp	r4, r2
    e1b4:	bne	e18c <F+0x40>
    e1b8:	ldr	r3, [r3, #12]
    e1bc:	mov	r0, r3
    e1c0:	pop	{r4, r5, r6, sl, fp, pc}
    e1c4:	ldr	r3, [pc, #108]	; e238 <F+0xec>
    e1c8:	ldr	r3, [pc, r3]
    e1cc:	add	r3, r3, #1
    e1d0:	ldr	r4, [pc, #100]	; e23c <F+0xf0>
    e1d4:	add	r4, pc, r4
    e1d8:	str	r3, [r4]
    e1dc:	tst	r0, #230	; 0xe6
    e1e0:	bne	e204 <F+0xb8>
    e1e4:	ldr	r4, [pc, #84]	; e240 <F+0xf4>
    e1e8:	ldr	r4, [pc, r4]
    e1ec:	add	r4, r4, r3, lsl #3
    e1f0:	str	r1, [r4, #4]
    e1f4:	ldr	r4, [pc, #72]	; e244 <F+0xf8>
    e1f8:	ldr	r4, [pc, r4]
    e1fc:	mov	r5, #1
    e200:	str	r5, [r4, r3, lsl #3]
    e204:	ldr	r4, [pc, #60]	; e248 <F+0xfc>
    e208:	ldr	r4, [pc, r4]
    e20c:	add	r5, r4, #20
    e210:	ldr	r6, [pc, #52]	; e24c <F+0x100>
    e214:	add	r6, pc, r6
    e218:	str	r5, [r6]
    e21c:	stm	r4, {r0, r1, r2, r3}
    e220:	ldr	r0, [lr, ip, lsl #2]
    e224:	str	r0, [r4, #16]
    e228:	str	r4, [lr, ip, lsl #2]
    e22c:	mov	r0, r3
    e230:	pop	{r4, r5, r6, sl, fp, pc}
    e234:	.word	0x00022588
    e238:	.word	0x0002252c
    e23c:	.word	0x00022520
    e240:	.word	0x00022948
    e244:	.word	0x00022938
    e248:	.word	0x00022920
    e24c:	.word	0x00022914

0000e250 <vstore>:
    e250:	cmp	r3, #0
    e254:	beq	e26c <vstore+0x1c>
    e258:	ldr	r3, [r1]
    e25c:	cmp	r3, r2
    e260:	mvneq	r1, #0
    e264:	streq	r1, [r0]
    e268:	bxeq	lr
    e26c:	str	r2, [r1]
    e270:	bx	lr

0000e274 <fold_op>:
    e274:	push	{fp, lr}
    e278:	mov	fp, sp
    e27c:	ldr	r3, [r0]
    e280:	ubfx	ip, r3, #4, #4
    e284:	cmp	ip, #8
    e288:	bhi	e33c <fold_op+0xc8>
    e28c:	ldr	r3, [pc, #184]	; e34c <fold_op+0xd8>
    e290:	ldr	r3, [pc, r3]
    e294:	add	r2, r3, r2, lsl #3
    e298:	ldr	lr, [r2, #4]
    e29c:	add	r1, r3, r1, lsl #3
    e2a0:	ldr	r1, [r1, #4]
    e2a4:	add	r3, pc, #4
    e2a8:	ldr	r2, [r3, ip, lsl #2]
    e2ac:	add	pc, r3, r2
    e2b0:	.word	0x00000024
    e2b4:	.word	0x00000054
    e2b8:	.word	0x00000034
    e2bc:	.word	0x0000003c
    e2c0:	.word	0x0000002c
    e2c4:	.word	0x0000005c
    e2c8:	.word	0x00000064
    e2cc:	.word	0x0000004c
    e2d0:	.word	0x0000006c
    e2d4:	add	r1, lr, r1
    e2d8:	b	e320 <fold_op+0xac>
    e2dc:	orr	r1, lr, r1
    e2e0:	b	e320 <fold_op+0xac>
    e2e4:	mul	r1, lr, r1
    e2e8:	b	e320 <fold_op+0xac>
    e2ec:	cmp	lr, #0
    e2f0:	beq	e340 <fold_op+0xcc>
    e2f4:	udiv	r1, r1, lr
    e2f8:	b	e320 <fold_op+0xac>
    e2fc:	lsr	r1, r1, lr
    e300:	b	e320 <fold_op+0xac>
    e304:	sub	r1, r1, lr
    e308:	b	e320 <fold_op+0xac>
    e30c:	and	r1, lr, r1
    e310:	b	e320 <fold_op+0xac>
    e314:	lsl	r1, r1, lr
    e318:	b	e320 <fold_op+0xac>
    e31c:	rsb	r1, r1, #0
    e320:	mov	r2, #0
    e324:	str	r2, [r0]
    e328:	str	r1, [r0, #12]
    e32c:	ldr	r0, [pc, #28]	; e350 <fold_op+0xdc>
    e330:	add	r0, pc, r0
    e334:	strb	r2, [r0]
    e338:	pop	{fp, pc}
    e33c:	bl	fc4 <abort@plt>
    e340:	ldr	r0, [pc, #12]	; e354 <fold_op+0xe0>
    e344:	add	r0, pc, r0
    e348:	bl	1f9c <sf_bpf_error>
    e34c:	.word	0x000228a0
    e350:	.word	0x000223a4
    e354:	.word	0x0000568b

0000e358 <this_op>:
    e358:	mov	r1, r0
    e35c:	mov	r0, #0
    e360:	b	e368 <this_op+0x10>
    e364:	ldr	r1, [r1, #16]
    e368:	cmp	r1, #0
    e36c:	bxeq	lr
    e370:	ldr	r2, [r1]
    e374:	cmn	r2, #1
    e378:	beq	e364 <this_op+0xc>
    e37c:	mov	r0, r1
    e380:	bx	lr

0000e384 <opt_not>:
    e384:	ldr	r1, [r0, #60]	; 0x3c
    e388:	ldr	r2, [r0, #84]	; 0x54
    e38c:	str	r2, [r0, #60]	; 0x3c
    e390:	str	r1, [r0, #84]	; 0x54
    e394:	bx	lr

0000e398 <deadstmt>:
    e398:	push	{r4, r5, fp, lr}
    e39c:	add	fp, sp, #8
    e3a0:	mov	r4, r1
    e3a4:	mov	r5, r0
    e3a8:	bl	cce8 <atomuse>
    e3ac:	cmp	r0, #0
    e3b0:	blt	e3cc <deadstmt+0x34>
    e3b4:	cmp	r0, #18
    e3b8:	moveq	r0, #0
    e3bc:	streq	r0, [r4, #68]	; 0x44
    e3c0:	moveq	r0, #16
    e3c4:	mov	r1, #0
    e3c8:	str	r1, [r4, r0, lsl #2]
    e3cc:	mov	r0, r5
    e3d0:	bl	cd9c <atomdef>
    e3d4:	cmp	r0, #0
    e3d8:	poplt	{r4, r5, fp, pc}
    e3dc:	ldr	r1, [r4, r0, lsl #2]
    e3e0:	cmp	r1, #0
    e3e4:	beq	e400 <deadstmt+0x68>
    e3e8:	ldr	r2, [pc, #24]	; e408 <deadstmt+0x70>
    e3ec:	add	r2, pc, r2
    e3f0:	mov	r3, #0
    e3f4:	strb	r3, [r2]
    e3f8:	mvn	r2, #0
    e3fc:	str	r2, [r1]
    e400:	str	r5, [r4, r0, lsl #2]
    e404:	pop	{r4, r5, fp, pc}
    e408:	.word	0x000222e8

0000e40c <use_conflict>:
    e40c:	push	{r4, sl, fp, lr}
    e410:	add	fp, sp, #8
    e414:	ldr	r2, [r1, #128]	; 0x80
    e418:	cmp	r2, #0
    e41c:	beq	e458 <use_conflict+0x4c>
    e420:	add	lr, r1, #136	; 0x88
    e424:	add	r0, r0, #136	; 0x88
    e428:	mov	r3, #0
    e42c:	mov	ip, #1
    e430:	tst	r2, ip, lsl r3
    e434:	beq	e44c <use_conflict+0x40>
    e438:	ldr	r1, [lr, r3, lsl #2]
    e43c:	ldr	r4, [r0, r3, lsl #2]
    e440:	cmp	r4, r1
    e444:	movne	r0, #1
    e448:	popne	{r4, sl, fp, pc}
    e44c:	add	r3, r3, #1
    e450:	cmp	r3, #18
    e454:	bcc	e430 <use_conflict+0x24>
    e458:	mov	r0, #0
    e45c:	pop	{r4, sl, fp, pc}

0000e460 <fold_edge>:
    e460:	push	{r4, r5, fp, lr}
    e464:	add	fp, sp, #8
    e468:	mov	ip, r0
    e46c:	ldr	r3, [r1, #4]
    e470:	mov	r0, #0
    e474:	cmn	r3, #1
    e478:	mov	r2, #0
    e47c:	movwgt	r2, #1
    e480:	cmp	r3, #0
    e484:	mov	lr, r3
    e488:	rsbmi	lr, r3, #0
    e48c:	ldr	r4, [ip, #8]
    e490:	cmp	r4, lr
    e494:	bne	e4e4 <fold_edge+0x84>
    e498:	ldr	r4, [ip, #200]	; 0xc8
    e49c:	ldr	r1, [r1, #16]
    e4a0:	ldr	r5, [r1, #200]	; 0xc8
    e4a4:	cmp	r4, r5
    e4a8:	popne	{r4, r5, fp, pc}
    e4ac:	ldr	r1, [r1, #132]	; 0x84
    e4b0:	ldr	r4, [ip, #132]	; 0x84
    e4b4:	cmp	r4, r1
    e4b8:	bne	e4d0 <fold_edge+0x70>
    e4bc:	mov	r0, #60	; 0x3c
    e4c0:	cmp	r3, #0
    e4c4:	movwlt	r0, #84	; 0x54
    e4c8:	ldr	r0, [ip, r0]
    e4cc:	pop	{r4, r5, fp, pc}
    e4d0:	subs	r1, lr, #21
    e4d4:	movwne	r1, #1
    e4d8:	eor	r2, r2, #1
    e4dc:	orrs	r1, r1, r2
    e4e0:	ldreq	r0, [ip, #84]	; 0x54
    e4e4:	pop	{r4, r5, fp, pc}

0000e4e8 <mark_code>:
    e4e8:	ldr	r1, [pc, #20]	; e504 <mark_code+0x1c>
    e4ec:	ldr	r1, [pc, r1]
    e4f0:	add	r1, r1, #1
    e4f4:	ldr	r2, [pc, #12]	; e508 <mark_code+0x20>
    e4f8:	add	r2, pc, r2
    e4fc:	str	r1, [r2]
    e500:	b	e560 <make_marks>
    e504:	.word	0x000221dc
    e508:	.word	0x000221d0

0000e50c <eq_blk>:
    e50c:	ldr	r2, [r1, #8]
    e510:	ldr	r3, [r0, #8]
    e514:	cmp	r3, r2
    e518:	bne	e54c <eq_blk+0x40>
    e51c:	ldr	r2, [r1, #20]
    e520:	ldr	r3, [r0, #20]
    e524:	cmp	r3, r2
    e528:	bne	e54c <eq_blk+0x40>
    e52c:	ldr	r2, [r1, #60]	; 0x3c
    e530:	ldr	r3, [r0, #60]	; 0x3c
    e534:	cmp	r3, r2
    e538:	bne	e54c <eq_blk+0x40>
    e53c:	ldr	r2, [r1, #84]	; 0x54
    e540:	ldr	r3, [r0, #84]	; 0x54
    e544:	cmp	r3, r2
    e548:	beq	e554 <eq_blk+0x48>
    e54c:	mov	r0, #0
    e550:	bx	lr
    e554:	ldr	r1, [r1, #4]
    e558:	ldr	r0, [r0, #4]
    e55c:	b	e5ac <eq_slist>

0000e560 <make_marks>:
    e560:	push	{r4, sl, fp, lr}
    e564:	add	fp, sp, #8
    e568:	mov	r4, r0
    e56c:	ldr	r1, [r0, #24]
    e570:	b	e584 <make_marks+0x24>
    e574:	ldr	r0, [r4, #60]	; 0x3c
    e578:	bl	e560 <make_marks>
    e57c:	ldr	r4, [r4, #84]	; 0x54
    e580:	ldr	r1, [r4, #24]
    e584:	ldr	r0, [pc, #28]	; e5a8 <make_marks+0x48>
    e588:	ldr	r0, [pc, r0]
    e58c:	cmp	r1, r0
    e590:	strne	r0, [r4, #24]
    e594:	ldrne	r0, [r4, #8]
    e598:	andne	r0, r0, #7
    e59c:	cmpne	r0, #6
    e5a0:	bne	e574 <make_marks+0x14>
    e5a4:	pop	{r4, sl, fp, pc}
    e5a8:	.word	0x00022140

0000e5ac <eq_slist>:
    e5ac:	push	{fp, lr}
    e5b0:	mov	fp, sp
    e5b4:	b	e5c0 <eq_slist+0x14>
    e5b8:	ldr	r1, [r1, #16]
    e5bc:	ldr	r0, [lr, #16]
    e5c0:	mov	ip, #1
    e5c4:	cmp	r0, #0
    e5c8:	mov	lr, #0
    e5cc:	mov	r2, #1
    e5d0:	beq	e618 <eq_slist+0x6c>
    e5d4:	ldr	r2, [r0]
    e5d8:	cmn	r2, #1
    e5dc:	bne	e600 <eq_slist+0x54>
    e5e0:	ldr	r0, [r0, #16]
    e5e4:	cmp	r0, #0
    e5e8:	bne	e5d4 <eq_slist+0x28>
    e5ec:	mov	lr, #0
    e5f0:	mov	r2, #1
    e5f4:	cmp	r1, #0
    e5f8:	bne	e620 <eq_slist+0x74>
    e5fc:	b	e63c <eq_slist+0x90>
    e600:	mov	r2, #0
    e604:	mov	lr, r0
    e608:	cmp	r1, #0
    e60c:	bne	e620 <eq_slist+0x74>
    e610:	b	e63c <eq_slist+0x90>
    e614:	ldr	r1, [r1, #16]
    e618:	cmp	r1, #0
    e61c:	beq	e63c <eq_slist+0x90>
    e620:	ldr	r0, [r1]
    e624:	cmn	r0, #1
    e628:	beq	e614 <eq_slist+0x68>
    e62c:	mov	ip, #0
    e630:	cmp	r2, #0
    e634:	beq	e648 <eq_slist+0x9c>
    e638:	b	e674 <eq_slist+0xc8>
    e63c:	mov	r1, #0
    e640:	cmp	r2, #0
    e644:	bne	e674 <eq_slist+0xc8>
    e648:	mov	r0, #0
    e64c:	cmp	ip, #0
    e650:	popne	{fp, pc}
    e654:	ldr	r2, [r1]
    e658:	ldr	r3, [lr]
    e65c:	cmp	r3, r2
    e660:	ldreq	r2, [r1, #12]
    e664:	ldreq	r3, [lr, #12]
    e668:	cmpeq	r3, r2
    e66c:	beq	e5b8 <eq_slist+0xc>
    e670:	pop	{fp, pc}
    e674:	mov	r0, ip
    e678:	pop	{fp, pc}

0000e67c <count_blocks>:
    e67c:	push	{r4, r5, fp, lr}
    e680:	add	fp, sp, #8
    e684:	cmp	r0, #0
    e688:	beq	e6a4 <count_blocks+0x28>
    e68c:	mov	r4, r0
    e690:	ldr	r1, [r0, #24]
    e694:	ldr	r0, [pc, #52]	; e6d0 <count_blocks+0x54>
    e698:	ldr	r0, [pc, r0]
    e69c:	cmp	r1, r0
    e6a0:	bne	e6ac <count_blocks+0x30>
    e6a4:	mov	r0, #0
    e6a8:	pop	{r4, r5, fp, pc}
    e6ac:	str	r0, [r4, #24]
    e6b0:	ldr	r0, [r4, #60]	; 0x3c
    e6b4:	bl	e67c <count_blocks>
    e6b8:	mov	r5, r0
    e6bc:	ldr	r0, [r4, #84]	; 0x54
    e6c0:	bl	e67c <count_blocks>
    e6c4:	add	r0, r5, r0
    e6c8:	add	r0, r0, #1
    e6cc:	pop	{r4, r5, fp, pc}
    e6d0:	.word	0x00022030

0000e6d4 <number_blks_r>:
    e6d4:	push	{r4, r5, fp, lr}
    e6d8:	add	fp, sp, #8
    e6dc:	cmp	r0, #0
    e6e0:	beq	e73c <number_blks_r+0x68>
    e6e4:	mov	r4, r0
    e6e8:	ldr	r5, [pc, #80]	; e740 <number_blks_r+0x6c>
    e6ec:	add	r5, pc, r5
    e6f0:	ldr	r1, [r4, #24]
    e6f4:	ldr	r0, [pc, #72]	; e744 <number_blks_r+0x70>
    e6f8:	ldr	r0, [pc, r0]
    e6fc:	cmp	r1, r0
    e700:	popeq	{r4, r5, fp, pc}
    e704:	str	r0, [r4, #24]
    e708:	ldr	r0, [pc, #56]	; e748 <number_blks_r+0x74>
    e70c:	ldr	r0, [pc, r0]
    e710:	add	r1, r0, #1
    e714:	str	r1, [r5]
    e718:	str	r0, [r4]
    e71c:	ldr	r1, [pc, #40]	; e74c <number_blks_r+0x78>
    e720:	ldr	r1, [pc, r1]
    e724:	str	r4, [r1, r0, lsl #2]
    e728:	ldr	r0, [r4, #60]	; 0x3c
    e72c:	bl	e6d4 <number_blks_r>
    e730:	ldr	r4, [r4, #84]	; 0x54
    e734:	cmp	r4, #0
    e738:	bne	e6f0 <number_blks_r+0x1c>
    e73c:	pop	{r4, r5, fp, pc}
    e740:	.word	0x00021fec
    e744:	.word	0x00021fd0
    e748:	.word	0x00021fcc
    e74c:	.word	0x00022400

0000e750 <slength>:
    e750:	cmp	r0, #0
    e754:	moveq	r0, #0
    e758:	bxeq	lr
    e75c:	mov	r1, r0
    e760:	mov	r0, #0
    e764:	ldr	r2, [r1]
    e768:	ldr	r1, [r1, #16]
    e76c:	cmn	r2, #1
    e770:	addne	r0, r0, #1
    e774:	cmp	r1, #0
    e778:	bne	e764 <slength+0x14>
    e77c:	bx	lr

0000e780 <sfbpf_strcasecmp>:
    e780:	push	{fp, lr}
    e784:	mov	fp, sp
    e788:	ldr	ip, [pc, #52]	; e7c4 <sfbpf_strcasecmp+0x44>
    e78c:	add	ip, pc, ip
    e790:	ldrb	r2, [r1]
    e794:	ldrb	lr, [ip, r2]
    e798:	ldrb	r3, [r0]
    e79c:	ldrb	r2, [ip, r3]
    e7a0:	cmp	r2, lr
    e7a4:	subne	r0, r2, lr
    e7a8:	popne	{fp, pc}
    e7ac:	add	r0, r0, #1
    e7b0:	add	r1, r1, #1
    e7b4:	cmp	r3, #0
    e7b8:	moveq	r0, #0
    e7bc:	popeq	{fp, pc}
    e7c0:	b	e790 <sfbpf_strcasecmp+0x10>
    e7c4:	.word	0x000052c6

0000e7c8 <pcap_next_etherent>:
    e7c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    e7cc:	add	fp, sp, #24
    e7d0:	mov	r5, r0
    e7d4:	vmov.i32	q8, #0	; 0x00000000
    e7d8:	mov	r0, #112	; 0x70
    e7dc:	ldr	r8, [pc, #400]	; e974 <pcap_next_etherent+0x1ac>
    e7e0:	add	r8, pc, r8
    e7e4:	mov	r1, r8
    e7e8:	vst1.64	{d16-d17}, [r1], r0
    e7ec:	vst1.64	{d16-d17}, [r1]
    e7f0:	add	r0, r8, #96	; 0x60
    e7f4:	vst1.64	{d16-d17}, [r0]
    e7f8:	add	r0, r8, #80	; 0x50
    e7fc:	vst1.64	{d16-d17}, [r0]
    e800:	add	r0, r8, #64	; 0x40
    e804:	vst1.64	{d16-d17}, [r0]
    e808:	add	r0, r8, #48	; 0x30
    e80c:	vst1.64	{d16-d17}, [r0]
    e810:	add	r0, r8, #32
    e814:	vst1.64	{d16-d17}, [r0]
    e818:	add	r0, r8, #16
    e81c:	vst1.64	{d16-d17}, [r0]
    e820:	mov	r0, r5
    e824:	bl	e978 <skip_space>
    e828:	mov	r7, r0
    e82c:	mov	r0, #10
    e830:	cmp	r7, #10
    e834:	beq	e8fc <pcap_next_etherent+0x134>
    e838:	bl	eec <__ctype_b_loc@plt>
    e83c:	mov	r9, r0
    e840:	ldr	r0, [r0]
    e844:	add	r0, r0, r7, lsl #1
    e848:	ldrb	r0, [r0, #1]
    e84c:	tst	r0, #16
    e850:	beq	e8f4 <pcap_next_etherent+0x12c>
    e854:	mov	r6, #0
    e858:	mov	r0, r7
    e85c:	bl	e9d8 <xdtoi>
    e860:	mov	r4, r0
    e864:	mov	r0, r5
    e868:	bl	fd0 <getc@plt>
    e86c:	mov	r7, r0
    e870:	ldr	r0, [r9]
    e874:	add	r0, r0, r7, lsl #1
    e878:	ldrb	r0, [r0, #1]
    e87c:	tst	r0, #16
    e880:	beq	e89c <pcap_next_etherent+0xd4>
    e884:	mov	r0, r7
    e888:	bl	e9d8 <xdtoi>
    e88c:	orr	r4, r0, r4, lsl #4
    e890:	mov	r0, r5
    e894:	bl	fd0 <getc@plt>
    e898:	mov	r7, r0
    e89c:	strb	r4, [r8, r6]
    e8a0:	cmp	r7, #58	; 0x3a
    e8a4:	bne	e8c0 <pcap_next_etherent+0xf8>
    e8a8:	mov	r0, r5
    e8ac:	bl	fd0 <getc@plt>
    e8b0:	mov	r7, r0
    e8b4:	add	r6, r6, #1
    e8b8:	cmp	r6, #6
    e8bc:	bcc	e858 <pcap_next_etherent+0x90>
    e8c0:	cmn	r7, #1
    e8c4:	beq	e904 <pcap_next_etherent+0x13c>
    e8c8:	ldr	r0, [r9]
    e8cc:	add	r0, r0, r7, lsl #1
    e8d0:	ldrb	r0, [r0, #1]
    e8d4:	tst	r0, #32
    e8d8:	beq	e8f4 <pcap_next_etherent+0x12c>
    e8dc:	mov	r0, r5
    e8e0:	bl	e978 <skip_space>
    e8e4:	cmp	r0, #10
    e8e8:	beq	e8fc <pcap_next_etherent+0x134>
    e8ec:	cmp	r0, #35	; 0x23
    e8f0:	bne	e910 <pcap_next_etherent+0x148>
    e8f4:	mov	r0, r5
    e8f8:	bl	e9b4 <skip_line>
    e8fc:	cmn	r0, #1
    e900:	bne	e820 <pcap_next_etherent+0x58>
    e904:	mov	r8, #0
    e908:	mov	r0, r8
    e90c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    e910:	mov	r4, #0
    e914:	sub	r6, r8, r4
    e918:	strb	r0, [r6, #6]
    e91c:	mov	r0, r5
    e920:	bl	fd0 <getc@plt>
    e924:	cmn	r0, #1
    e928:	beq	e954 <pcap_next_etherent+0x18c>
    e92c:	ldr	r1, [r9]
    e930:	add	r1, r1, r0, lsl #1
    e934:	ldrh	r1, [r1]
    e938:	ands	r1, r1, #8192	; 0x2000
    e93c:	bne	e954 <pcap_next_etherent+0x18c>
    e940:	sub	r1, r4, #1
    e944:	add	r2, r4, #121	; 0x79
    e948:	cmp	r2, #1
    e94c:	mov	r4, r1
    e950:	bhi	e914 <pcap_next_etherent+0x14c>
    e954:	mov	r1, #0
    e958:	strb	r1, [r6, #7]
    e95c:	cmp	r0, #10
    e960:	beq	e908 <pcap_next_etherent+0x140>
    e964:	mov	r0, r5
    e968:	bl	e9b4 <skip_line>
    e96c:	mov	r0, r8
    e970:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    e974:	.word	0x00022278

0000e978 <skip_space>:
    e978:	push	{r4, r5, fp, lr}
    e97c:	add	fp, sp, #8
    e980:	mov	r4, r0
    e984:	mov	r0, r4
    e988:	bl	fd0 <getc@plt>
    e98c:	mov	r5, r0
    e990:	bl	eec <__ctype_b_loc@plt>
    e994:	cmp	r5, #10
    e998:	ldrne	r0, [r0]
    e99c:	addne	r0, r0, r5, lsl #1
    e9a0:	ldrhne	r0, [r0]
    e9a4:	andsne	r0, r0, #8192	; 0x2000
    e9a8:	bne	e984 <skip_space+0xc>
    e9ac:	mov	r0, r5
    e9b0:	pop	{r4, r5, fp, pc}

0000e9b4 <skip_line>:
    e9b4:	push	{r4, sl, fp, lr}
    e9b8:	add	fp, sp, #8
    e9bc:	mov	r4, r0
    e9c0:	mov	r0, r4
    e9c4:	bl	fd0 <getc@plt>
    e9c8:	cmp	r0, #10
    e9cc:	cmnne	r0, #1
    e9d0:	bne	e9c0 <skip_line+0xc>
    e9d4:	pop	{r4, sl, fp, pc}

0000e9d8 <xdtoi>:
    e9d8:	push	{r4, sl, fp, lr}
    e9dc:	add	fp, sp, #8
    e9e0:	mov	r4, r0
    e9e4:	bl	eec <__ctype_b_loc@plt>
    e9e8:	ldr	r0, [r0]
    e9ec:	add	r0, r0, r4, lsl #1
    e9f0:	ldrh	r1, [r0]
    e9f4:	mvn	r0, #47	; 0x2f
    e9f8:	tst	r1, #2048	; 0x800
    e9fc:	bne	ea0c <xdtoi+0x34>
    ea00:	mvn	r0, #86	; 0x56
    ea04:	tst	r1, #512	; 0x200
    ea08:	mvneq	r0, #54	; 0x36
    ea0c:	add	r0, r0, r4
    ea10:	pop	{r4, sl, fp, pc}

0000ea14 <sfbpf_parse>:
    ea14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ea18:	add	fp, sp, #28
    ea1c:	sub	sp, sp, #564	; 0x234
    ea20:	sub	sp, sp, #3072	; 0xc00
    ea24:	ldr	r0, [pc, #4088]	; fa24 <sfbpf_parse+0x1010>
    ea28:	add	r0, pc, r0
    ea2c:	mvn	r1, #1
    ea30:	str	r1, [r0]
    ea34:	ldr	r0, [pc, #4076]	; fa28 <sfbpf_parse+0x1014>
    ea38:	add	r0, pc, r0
    ea3c:	mov	sl, #0
    ea40:	str	sl, [r0]
    ea44:	mov	ip, #200	; 0xc8
    ea48:	add	r9, sp, #32
    ea4c:	sub	r4, fp, #432	; 0x1b0
    ea50:	mov	r6, #15
    ea54:	str	r9, [sp, #20]
    ea58:	mov	r8, r4
    ea5c:	b	ea64 <sfbpf_parse+0x50>
    ea60:	add	r8, r8, #2
    ea64:	strh	sl, [r8]
    ea68:	add	r0, r4, ip, lsl #1
    ea6c:	sub	r0, r0, #2
    ea70:	cmp	r0, r8
    ea74:	bhi	eb2c <sfbpf_parse+0x118>
    ea78:	movw	r0, #9999	; 0x270f
    ea7c:	cmp	ip, r0
    ea80:	bhi	fce8 <sfbpf_parse+0x12d4>
    ea84:	lsl	r0, ip, #1
    ea88:	movw	r1, #10000	; 0x2710
    ea8c:	cmp	r0, r1
    ea90:	movw	r7, #10000	; 0x2710
    ea94:	lslcc	r7, ip, #1
    ea98:	add	r0, r7, r7, lsl #3
    ea9c:	add	r0, r6, r0, lsl #1
    eaa0:	bl	ed4 <malloc@plt>
    eaa4:	cmp	r0, #0
    eaa8:	beq	fce8 <sfbpf_parse+0x12d4>
    eaac:	mov	r5, r0
    eab0:	sub	r0, r8, r4
    eab4:	mov	r1, #1
    eab8:	mov	r8, r4
    eabc:	add	r4, r1, r0, asr #1
    eac0:	asr	r9, r0, #1
    eac4:	lsl	r2, r4, #1
    eac8:	mov	r0, r5
    eacc:	mov	r1, r8
    ead0:	bl	e80 <memcpy@plt>
    ead4:	add	r0, r6, r7, lsl #1
    ead8:	bic	r0, r0, #15
    eadc:	add	r6, r5, r0
    eae0:	lsl	r2, r4, #4
    eae4:	mov	r0, r6
    eae8:	ldr	r1, [sp, #20]
    eaec:	bl	e80 <memcpy@plt>
    eaf0:	sub	r0, fp, #432	; 0x1b0
    eaf4:	cmp	r8, r0
    eaf8:	beq	eb04 <sfbpf_parse+0xf0>
    eafc:	mov	r0, r8
    eb00:	bl	e5c <free@plt>
    eb04:	add	r8, r5, r9, lsl #1
    eb08:	add	r0, r5, r7, lsl #1
    eb0c:	sub	r0, r0, #2
    eb10:	cmp	r0, r8
    eb14:	bls	fccc <sfbpf_parse+0x12b8>
    eb18:	add	r9, r6, r9, lsl #4
    eb1c:	mov	ip, r7
    eb20:	str	r6, [sp, #20]
    eb24:	mov	r4, r5
    eb28:	mov	r6, #15
    eb2c:	cmp	sl, #3
    eb30:	beq	fcb8 <sfbpf_parse+0x12a4>
    eb34:	ldr	r0, [pc, #4040]	; fb04 <sfbpf_parse+0x10f0>
    eb38:	add	r0, pc, r0
    eb3c:	add	r0, r0, sl, lsl #1
    eb40:	ldrsh	r5, [r0]
    eb44:	cmn	r5, #198	; 0xc6
    eb48:	str	r4, [sp, #24]
    eb4c:	beq	ec14 <sfbpf_parse+0x200>
    eb50:	ldr	r0, [pc, #4016]	; fb08 <sfbpf_parse+0x10f4>
    eb54:	ldr	r0, [pc, r0]
    eb58:	cmn	r0, #2
    eb5c:	bne	eb78 <sfbpf_parse+0x164>
    eb60:	mov	r7, ip
    eb64:	bl	fea0 <sfbpf_lex>
    eb68:	mov	ip, r7
    eb6c:	ldr	r1, [pc, #3992]	; fb0c <sfbpf_parse+0x10f8>
    eb70:	add	r1, pc, r1
    eb74:	str	r0, [r1]
    eb78:	cmp	r0, #0
    eb7c:	ble	eb9c <sfbpf_parse+0x188>
    eb80:	lsr	r2, r0, #1
    eb84:	mov	r1, #2
    eb88:	cmp	r2, #182	; 0xb6
    eb8c:	ldrls	r1, [pc, #3964]	; fb10 <sfbpf_parse+0x10fc>
    eb90:	addls	r1, pc, r1
    eb94:	ldrbls	r1, [r1, r0]
    eb98:	b	ebac <sfbpf_parse+0x198>
    eb9c:	mov	r1, #0
    eba0:	ldr	r0, [pc, #3948]	; fb14 <sfbpf_parse+0x1100>
    eba4:	add	r0, pc, r0
    eba8:	str	r1, [r0]
    ebac:	add	r0, r1, r5
    ebb0:	movw	r2, #669	; 0x29d
    ebb4:	cmp	r0, r2
    ebb8:	bhi	ec14 <sfbpf_parse+0x200>
    ebbc:	ldr	r2, [pc, #3924]	; fb18 <sfbpf_parse+0x1104>
    ebc0:	add	r2, pc, r2
    ebc4:	add	r2, r2, r0, lsl #1
    ebc8:	ldrsh	r2, [r2]
    ebcc:	cmp	r1, r2
    ebd0:	bne	ec14 <sfbpf_parse+0x200>
    ebd4:	ldr	r1, [pc, #3904]	; fb1c <sfbpf_parse+0x1108>
    ebd8:	add	r1, pc, r1
    ebdc:	add	r0, r1, r0, lsl #1
    ebe0:	ldrsh	sl, [r0]
    ebe4:	cmp	sl, #0
    ebe8:	ble	efa8 <sfbpf_parse+0x594>
    ebec:	ldr	r0, [pc, #3884]	; fb20 <sfbpf_parse+0x110c>
    ebf0:	add	r0, pc, r0
    ebf4:	vld1.32	{d16-d17}, [r0]
    ebf8:	ldr	r0, [pc, #4088]	; fbf8 <sfbpf_parse+0x11e4>
    ebfc:	add	r0, pc, r0
    ec00:	mvn	r1, #1
    ec04:	str	r1, [r0]
    ec08:	add	r9, r9, #16
    ec0c:	vst1.32	{d16-d17}, [r9]
    ec10:	b	ea60 <sfbpf_parse+0x4c>
    ec14:	ldr	r0, [pc, #4092]	; fc18 <sfbpf_parse+0x1204>
    ec18:	add	r0, pc, r0
    ec1c:	ldrb	r7, [r0, sl]
    ec20:	cmp	r7, #0
    ec24:	beq	fcfc <sfbpf_parse+0x12e8>
    ec28:	ldr	r0, [pc, #4076]	; fc1c <sfbpf_parse+0x1208>
    ec2c:	add	r0, pc, r0
    ec30:	ldrb	lr, [r0, r7]
    ec34:	rsb	r0, lr, #1
    ec38:	mov	r1, r9
    ec3c:	ldr	r6, [r1, r0, lsl #4]!
    ec40:	lsr	r5, r6, #24
    ec44:	lsr	r4, r6, #16
    ec48:	lsr	sl, r6, #8
    ec4c:	sub	r0, r7, #2
    ec50:	ldmib	r1, {r2, r3}
    ec54:	ldr	r1, [r1, #12]
    ec58:	str	r1, [sp, #28]
    ec5c:	cmp	r0, #200	; 0xc8
    ec60:	bhi	fb6c <sfbpf_parse+0x1158>
    ec64:	add	r1, pc, #4
    ec68:	ldr	r0, [r1, r0, lsl #2]
    ec6c:	add	pc, r1, r0
    ec70:	.word	0x00000dd8
    ec74:	.word	0x00000efc
    ec78:	.word	0x00000bfc
    ec7c:	.word	0x00000efc
    ec80:	.word	0x00000370
    ec84:	.word	0x00000370
    ec88:	.word	0x00000340
    ec8c:	.word	0x00000340
    ec90:	.word	0x00000324
    ec94:	.word	0x00000324
    ec98:	.word	0x00000efc
    ec9c:	.word	0x000003f0
    eca0:	.word	0x00000324
    eca4:	.word	0x000006a8
    eca8:	.word	0x00000538
    ecac:	.word	0x000005f0
    ecb0:	.word	0x0000055c
    ecb4:	.word	0x000004fc
    ecb8:	.word	0x00000eb4
    ecbc:	.word	0x00000e70
    ecc0:	.word	0x00000fb0
    ecc4:	.word	0x00000418
    ecc8:	.word	0x00000324
    eccc:	.word	0x00000324
    ecd0:	.word	0x00000efc
    ecd4:	.word	0x00000370
    ecd8:	.word	0x00000340
    ecdc:	.word	0x000003f0
    ece0:	.word	0x00000efc
    ece4:	.word	0x00000efc
    ece8:	.word	0x00000418
    ecec:	.word	0x000005c0
    ecf0:	.word	0x000005d0
    ecf4:	.word	0x00000464
    ecf8:	.word	0x000005e0
    ecfc:	.word	0x0000061c
    ed00:	.word	0x00000464
    ed04:	.word	0x00000430
    ed08:	.word	0x00000a6c
    ed0c:	.word	0x0000062c
    ed10:	.word	0x000006d4
    ed14:	.word	0x00000a78
    ed18:	.word	0x00000514
    ed1c:	.word	0x000007ec
    ed20:	.word	0x0000051c
    ed24:	.word	0x00000444
    ed28:	.word	0x00000bd0
    ed2c:	.word	0x00000444
    ed30:	.word	0x00000efc
    ed34:	.word	0x00000738
    ed38:	.word	0x000003e4
    ed3c:	.word	0x00000388
    ed40:	.word	0x00000364
    ed44:	.word	0x00000364
    ed48:	.word	0x00000358
    ed4c:	.word	0x00000358
    ed50:	.word	0x000004c0
    ed54:	.word	0x000004cc
    ed58:	.word	0x000003d8
    ed5c:	.word	0x00000474
    ed60:	.word	0x000003e4
    ed64:	.word	0x00000388
    ed68:	.word	0x00000364
    ed6c:	.word	0x000003d8
    ed70:	.word	0x00000358
    ed74:	.word	0x000003e4
    ed78:	.word	0x00000388
    ed7c:	.word	0x00000364
    ed80:	.word	0x00000358
    ed84:	.word	0x000004c0
    ed88:	.word	0x000004cc
    ed8c:	.word	0x000003d8
    ed90:	.word	0x00000474
    ed94:	.word	0x00000b9c
    ed98:	.word	0x00000c10
    ed9c:	.word	0x0000086c
    eda0:	.word	0x000003c4
    eda4:	.word	0x000006f0
    eda8:	.word	0x000003b8
    edac:	.word	0x00000550
    edb0:	.word	0x0000069c
    edb4:	.word	0x000006fc
    edb8:	.word	0x00000394
    edbc:	.word	0x00000d9c
    edc0:	.word	0x00000674
    edc4:	.word	0x00000da8
    edc8:	.word	0x00000dfc
    edcc:	.word	0x00000e50
    edd0:	.word	0x000003a0
    edd4:	.word	0x0000044c
    edd8:	.word	0x000004d8
    eddc:	.word	0x000004b4
    ede0:	.word	0x000003ac
    ede4:	.word	0x00000b84
    ede8:	.word	0x00000b90
    edec:	.word	0x00000e44
    edf0:	.word	0x00000480
    edf4:	.word	0x00000878
    edf8:	.word	0x000004f0
    edfc:	.word	0x00000458
    ee00:	.word	0x0000048c
    ee04:	.word	0x000004e4
    ee08:	.word	0x00000ce0
    ee0c:	.word	0x00000680
    ee10:	.word	0x00000e08
    ee14:	.word	0x00000708
    ee18:	.word	0x00000dbc
    ee1c:	.word	0x000007bc
    ee20:	.word	0x00000650
    ee24:	.word	0x000008c8
    ee28:	.word	0x00000884
    ee2c:	.word	0x000008a4
    ee30:	.word	0x000008e4
    ee34:	.word	0x000008ec
    ee38:	.word	0x0000088c
    ee3c:	.word	0x00000b44
    ee40:	.word	0x000003d0
    ee44:	.word	0x000003d0
    ee48:	.word	0x00000ca0
    ee4c:	.word	0x00000ba8
    ee50:	.word	0x00000658
    ee54:	.word	0x00000cec
    ee58:	.word	0x00000d64
    ee5c:	.word	0x00000d80
    ee60:	.word	0x0000081c
    ee64:	.word	0x000007e0
    ee68:	.word	0x00000648
    ee6c:	.word	0x00000d08
    ee70:	.word	0x00000efc
    ee74:	.word	0x0000093c
    ee78:	.word	0x00000efc
    ee7c:	.word	0x0000076c
    ee80:	.word	0x00000d24
    ee84:	.word	0x00000efc
    ee88:	.word	0x000009b0
    ee8c:	.word	0x000003d0
    ee90:	.word	0x00001084
    ee94:	.word	0x00001088
    ee98:	.word	0x000003ac
    ee9c:	.word	0x000004a0
    eea0:	.word	0x00000394
    eea4:	.word	0x000003ac
    eea8:	.word	0x000004a0
    eeac:	.word	0x00000394
    eeb0:	.word	0x00000c1c
    eeb4:	.word	0x00000efc
    eeb8:	.word	0x00000cbc
    eebc:	.word	0x00000724
    eec0:	.word	0x00000744
    eec4:	.word	0x00000758
    eec8:	.word	0x00000808
    eecc:	.word	0x00000858
    eed0:	.word	0x00000b5c
    eed4:	.word	0x00000a3c
    eed8:	.word	0x00000b70
    eedc:	.word	0x00000c38
    eee0:	.word	0x00000c6c
    eee4:	.word	0x000004ac
    eee8:	.word	0x00000964
    eeec:	.word	0x00000480
    eef0:	.word	0x0000097c
    eef4:	.word	0x00000c88
    eef8:	.word	0x00000bc4
    eefc:	.word	0x00000ab0
    ef00:	.word	0x00000efc
    ef04:	.word	0x000004ac
    ef08:	.word	0x000004e4
    ef0c:	.word	0x000004b4
    ef10:	.word	0x000003c4
    ef14:	.word	0x000003b8
    ef18:	.word	0x0000044c
    ef1c:	.word	0x000003a0
    ef20:	.word	0x000004d8
    ef24:	.word	0x000004f0
    ef28:	.word	0x00000458
    ef2c:	.word	0x0000048c
    ef30:	.word	0x00000abc
    ef34:	.word	0x00000c94
    ef38:	.word	0x00000ac8
    ef3c:	.word	0x00000a50
    ef40:	.word	0x00000efc
    ef44:	.word	0x00000844
    ef48:	.word	0x00000988
    ef4c:	.word	0x00000498
    ef50:	.word	0x00000908
    ef54:	.word	0x00000efc
    ef58:	.word	0x00000340
    ef5c:	.word	0x000003c4
    ef60:	.word	0x000003b8
    ef64:	.word	0x000003a0
    ef68:	.word	0x000008c0
    ef6c:	.word	0x00000ad0
    ef70:	.word	0x00000934
    ef74:	.word	0x00000ad8
    ef78:	.word	0x00000efc
    ef7c:	.word	0x00000a58
    ef80:	.word	0x00000ae0
    ef84:	.word	0x00000498
    ef88:	.word	0x00000afc
    ef8c:	.word	0x00000efc
    ef90:	.word	0x00000340
    ef94:	ldr	r6, [r9, #-16]
    ef98:	ldr	r2, [r9, #-12]
    ef9c:	ldr	r3, [r9, #-8]
    efa0:	ldr	r0, [r9, #-4]
    efa4:	b	fb5c <sfbpf_parse+0x1148>
    efa8:	rsb	r7, sl, #0
    efac:	b	ec28 <sfbpf_parse+0x214>
    efb0:	ldr	r0, [r9, #-20]	; 0xffffffec
    efb4:	ldr	r1, [r9, #12]
    efb8:	mov	r4, ip
    efbc:	mov	r5, lr
    efc0:	bl	3224 <sf_gen_or>
    efc4:	b	f098 <sfbpf_parse+0x684>
    efc8:	mov	sl, #0
    efcc:	mov	r6, #4
    efd0:	b	fac8 <sfbpf_parse+0x10b4>
    efd4:	mov	sl, #0
    efd8:	mov	r6, #3
    efdc:	b	fac8 <sfbpf_parse+0x10b4>
    efe0:	ldr	r0, [r9, #-20]	; 0xffffffec
    efe4:	ldr	r1, [r9, #12]
    efe8:	mov	r4, ip
    efec:	mov	r5, lr
    eff0:	bl	314c <sf_gen_and>
    eff4:	b	f098 <sfbpf_parse+0x684>
    eff8:	mov	sl, #0
    effc:	mov	r6, #2
    f000:	b	fac8 <sfbpf_parse+0x10b4>
    f004:	mov	sl, #0
    f008:	mov	r6, #16
    f00c:	b	fac8 <sfbpf_parse+0x10b4>
    f010:	mov	sl, #0
    f014:	mov	r6, #24
    f018:	b	fac8 <sfbpf_parse+0x10b4>
    f01c:	mov	sl, #0
    f020:	mov	r6, #32
    f024:	b	fac8 <sfbpf_parse+0x10b4>
    f028:	mov	sl, #0
    f02c:	mov	r6, #23
    f030:	b	fac8 <sfbpf_parse+0x10b4>
    f034:	mov	sl, #0
    f038:	mov	r6, #22
    f03c:	b	fac8 <sfbpf_parse+0x10b4>
    f040:	ldr	r6, [r9]
    f044:	b	fb60 <sfbpf_parse+0x114c>
    f048:	mov	sl, #0
    f04c:	mov	r6, #7
    f050:	b	fac8 <sfbpf_parse+0x10b4>
    f054:	mov	sl, #0
    f058:	mov	r6, #1
    f05c:	b	fac8 <sfbpf_parse+0x10b4>
    f060:	ldr	r6, [r9, #-16]
    f064:	ldr	r1, [r9]
    f068:	mov	r0, #0
    f06c:	str	r2, [sp, #16]
    f070:	mov	r2, r6
    f074:	mov	r4, ip
    f078:	mov	r5, lr
    f07c:	mov	sl, r3
    f080:	bl	6eb8 <sf_gen_ncode>
    f084:	b	fb4c <sfbpf_parse+0x1138>
    f088:	ldr	r0, [r9, #12]
    f08c:	mov	r4, ip
    f090:	mov	r5, lr
    f094:	bl	3278 <sf_gen_not>
    f098:	mov	lr, r5
    f09c:	mov	ip, r4
    f0a0:	ldr	r6, [r9]
    f0a4:	ldr	r2, [r9, #4]
    f0a8:	ldr	r3, [r9, #8]
    f0ac:	ldr	r0, [r9, #12]
    f0b0:	b	fb5c <sfbpf_parse+0x1148>
    f0b4:	ldr	r0, [r9, #12]
    f0b8:	b	f868 <sfbpf_parse+0xe54>
    f0bc:	mov	sl, #0
    f0c0:	mov	r6, #25
    f0c4:	b	fac8 <sfbpf_parse+0x10b4>
    f0c8:	mov	sl, #0
    f0cc:	mov	r6, #28
    f0d0:	b	fac8 <sfbpf_parse+0x10b4>
    f0d4:	ldrb	r6, [r9]
    f0d8:	ldr	sl, [r9, #-16]
    f0dc:	mov	r4, #0
    f0e0:	b	fb6c <sfbpf_parse+0x1158>
    f0e4:	mov	sl, #0
    f0e8:	mov	r6, #8
    f0ec:	b	fac8 <sfbpf_parse+0x10b4>
    f0f0:	mov	sl, #0
    f0f4:	mov	r6, #38	; 0x26
    f0f8:	b	fac8 <sfbpf_parse+0x10b4>
    f0fc:	mov	sl, #0
    f100:	mov	r6, #29
    f104:	b	fac8 <sfbpf_parse+0x10b4>
    f108:	ldr	r0, [r9, #-4]
    f10c:	b	f868 <sfbpf_parse+0xe54>
    f110:	mov	sl, #0
    f114:	mov	r6, #48	; 0x30
    f118:	b	fac8 <sfbpf_parse+0x10b4>
    f11c:	ldr	r6, [r9, #-16]
    f120:	b	fb60 <sfbpf_parse+0x114c>
    f124:	mov	sl, #0
    f128:	mov	r6, #31
    f12c:	b	fac8 <sfbpf_parse+0x10b4>
    f130:	mov	sl, #0
    f134:	mov	r6, #5
    f138:	b	fac8 <sfbpf_parse+0x10b4>
    f13c:	mov	sl, #0
    f140:	mov	r6, #6
    f144:	b	fac8 <sfbpf_parse+0x10b4>
    f148:	mov	sl, #0
    f14c:	mov	r6, #26
    f150:	b	fac8 <sfbpf_parse+0x10b4>
    f154:	mov	sl, #0
    f158:	mov	r6, #30
    f15c:	b	fac8 <sfbpf_parse+0x10b4>
    f160:	mov	sl, #0
    f164:	mov	r6, #27
    f168:	b	fac8 <sfbpf_parse+0x10b4>
    f16c:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f170:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f174:	str	r2, [sp, #16]
    f178:	ldr	r2, [r9]
    f17c:	mov	r1, #0
    f180:	b	fb38 <sfbpf_parse+0x1124>
    f184:	ldr	r0, [r9]
    f188:	b	f868 <sfbpf_parse+0xe54>
    f18c:	ldr	r0, [r9]
    f190:	mov	sl, ip
    f194:	mov	r5, lr
    f198:	mov	r6, r2
    f19c:	mov	r4, r3
    f1a0:	bl	9af0 <sf_gen_atmmulti_abbrev>
    f1a4:	b	f858 <sfbpf_parse+0xe44>
    f1a8:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f1ac:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f1b0:	str	r2, [sp, #16]
    f1b4:	ldr	r2, [r9]
    f1b8:	mov	r1, #0
    f1bc:	b	f274 <sfbpf_parse+0x860>
    f1c0:	mov	sl, #0
    f1c4:	mov	r6, #12
    f1c8:	b	fac8 <sfbpf_parse+0x10b4>
    f1cc:	str	r2, [sp, #16]
    f1d0:	stmib	sp, {r3, lr}
    f1d4:	str	ip, [sp, #12]
    f1d8:	ldr	r6, [r9, #-16]
    f1dc:	mvn	r0, #2
    f1e0:	uxtab	r0, r0, r6
    f1e4:	cmp	r0, #4
    f1e8:	bhi	f20c <sfbpf_parse+0x7f8>
    f1ec:	add	r1, pc, #4
    f1f0:	ldr	r0, [r1, r0, lsl #2]
    f1f4:	add	pc, r1, r0
    f1f8:	.word	0x00000b40
    f1fc:	.word	0x00000014
    f200:	.word	0x00000b4c
    f204:	.word	0x00000b58
    f208:	.word	0x00000b64
    f20c:	ldr	r0, [r9]
    f210:	mov	r1, #0
    f214:	mov	r2, r6
    f218:	bl	6eb8 <sf_gen_ncode>
    f21c:	str	r0, [sp, #28]
    f220:	lsr	sl, r6, #8
    f224:	lsr	r4, r6, #16
    f228:	lsr	r5, r6, #24
    f22c:	b	fca8 <sfbpf_parse+0x1294>
    f230:	ldrb	r6, [r9]
    f234:	ldr	sl, [r9, #-32]	; 0xffffffe0
    f238:	ldr	r4, [r9, #-16]
    f23c:	b	fb6c <sfbpf_parse+0x1158>
    f240:	ldr	sl, [r9, #-16]
    f244:	ldr	r4, [r9]
    f248:	mov	r6, #0
    f24c:	b	fb6c <sfbpf_parse+0x1158>
    f250:	ldr	sl, [r9, #-16]
    f254:	mov	r4, #0
    f258:	mov	r6, #5
    f25c:	b	fb6c <sfbpf_parse+0x1158>
    f260:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f264:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f268:	ldr	r1, [r9]
    f26c:	str	r2, [sp, #16]
    f270:	mov	r2, #0
    f274:	mov	sl, r3
    f278:	mov	r3, r6
    f27c:	mov	r4, ip
    f280:	mov	r5, lr
    f284:	bl	6da0 <sf_gen_mcode>
    f288:	b	fb4c <sfbpf_parse+0x1138>
    f28c:	ldr	sl, [r9, #-16]
    f290:	mov	r4, #0
    f294:	mov	r6, #6
    f298:	b	fb6c <sfbpf_parse+0x1158>
    f29c:	ldr	r0, [r9]
    f2a0:	mov	sl, ip
    f2a4:	mov	r5, lr
    f2a8:	mov	r6, r2
    f2ac:	mov	r4, r3
    f2b0:	bl	328c <sf_gen_proto_abbrev>
    f2b4:	b	f858 <sfbpf_parse+0xe44>
    f2b8:	ldr	r0, [r9]
    f2bc:	b	f498 <sfbpf_parse+0xa84>
    f2c0:	mov	r0, #0
    f2c4:	b	f53c <sfbpf_parse+0xb28>
    f2c8:	ldr	r0, [r9]
    f2cc:	mov	sl, ip
    f2d0:	mov	r5, lr
    f2d4:	mov	r6, r2
    f2d8:	mov	r4, r3
    f2dc:	bl	8da8 <sf_gen_pf_rnr>
    f2e0:	b	fa90 <sfbpf_parse+0x107c>
    f2e4:	mov	sl, #0
    f2e8:	mov	r6, #17
    f2ec:	b	fac8 <sfbpf_parse+0x10b4>
    f2f0:	ldr	r0, [r9, #-16]
    f2f4:	mov	sl, ip
    f2f8:	mov	r5, lr
    f2fc:	mov	r6, r2
    f300:	mov	r4, r3
    f304:	bl	7fd4 <sf_gen_broadcast>
    f308:	b	fa90 <sfbpf_parse+0x107c>
    f30c:	mov	sl, #0
    f310:	mov	r6, #13
    f314:	b	fac8 <sfbpf_parse+0x10b4>
    f318:	ldr	r6, [r9, #-16]
    f31c:	ldr	r0, [r9]
    f320:	lsr	r5, r6, #24
    f324:	lsr	r4, r6, #16
    f328:	lsr	sl, r6, #8
    f32c:	mov	r1, r6
    f330:	str	ip, [sp, #12]
    f334:	str	r2, [sp, #16]
    f338:	stmib	sp, {r3, lr}
    f33c:	bl	495c <sf_gen_scode>
    f340:	b	f7a0 <sfbpf_parse+0xd8c>
    f344:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f348:	ldr	r0, [r9, #-16]
    f34c:	mov	sl, r2
    f350:	ldr	r2, [r9]
    f354:	mov	r6, r3
    f358:	mov	r3, #0
    f35c:	b	f700 <sfbpf_parse+0xcec>
    f360:	mov	sl, #0
    f364:	mov	r6, #11
    f368:	b	fac8 <sfbpf_parse+0x10b4>
    f36c:	mov	sl, #0
    f370:	mov	r6, #14
    f374:	b	fac8 <sfbpf_parse+0x10b4>
    f378:	ldr	r0, [r9]
    f37c:	mov	sl, ip
    f380:	mov	r5, lr
    f384:	mov	r6, r2
    f388:	mov	r4, r3
    f38c:	bl	7e48 <sf_gen_less>
    f390:	b	fa90 <sfbpf_parse+0x107c>
    f394:	ldr	r0, [r9, #-80]	; 0xffffffb0
    f398:	ldr	r1, [r9, #-48]	; 0xffffffd0
    f39c:	mov	sl, r2
    f3a0:	ldr	r2, [r9, #-16]
    f3a4:	b	f93c <sfbpf_parse+0xf28>
    f3a8:	mov	r6, #0
    f3ac:	mov	sl, #0
    f3b0:	b	fac8 <sfbpf_parse+0x10b4>
    f3b4:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f3b8:	mov	sl, r2
    f3bc:	ldr	r2, [r9]
    f3c0:	mov	r0, #0
    f3c4:	b	f8b8 <sfbpf_parse+0xea4>
    f3c8:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f3cc:	mov	sl, r2
    f3d0:	ldr	r2, [r9]
    f3d4:	mov	r0, #16
    f3d8:	b	f8b8 <sfbpf_parse+0xea4>
    f3dc:	str	r3, [sp, #4]
    f3e0:	str	r2, [sp, #16]
    f3e4:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f3e8:	cmp	r0, #0
    f3ec:	str	ip, [sp, #12]
    f3f0:	str	lr, [sp, #8]
    f3f4:	beq	fc60 <sfbpf_parse+0x124c>
    f3f8:	mov	r1, #0
    f3fc:	cmp	r1, #2
    f400:	beq	fd2c <sfbpf_parse+0x1318>
    f404:	ldr	r2, [pc, #2444]	; fd98 <sfbpf_parse+0x1384>
    f408:	add	r2, pc, r2
    f40c:	add	r3, r2, r1, lsl #3
    f410:	ldr	r3, [r3, #8]
    f414:	add	r1, r1, #1
    f418:	cmp	r0, r3
    f41c:	bne	f3fc <sfbpf_parse+0x9e8>
    f420:	add	r0, r2, r1, lsl #3
    f424:	ldr	r1, [r0, #4]
    f428:	b	fc68 <sfbpf_parse+0x1254>
    f42c:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f430:	ldr	r0, [r9, #-16]
    f434:	mov	sl, r2
    f438:	ldr	r2, [r9]
    f43c:	mov	r4, ip
    f440:	mov	r5, lr
    f444:	mov	r6, r3
    f448:	bl	7e6c <sf_gen_byteop>
    f44c:	b	f8c8 <sfbpf_parse+0xeb4>
    f450:	ldr	r0, [r9]
    f454:	mov	r1, #12
    f458:	b	f49c <sfbpf_parse+0xa88>
    f45c:	ldr	r0, [r9]
    f460:	mov	sl, ip
    f464:	mov	r5, lr
    f468:	mov	r6, r2
    f46c:	mov	r4, r3
    f470:	bl	945c <sf_gen_atmtype_abbrev>
    f474:	b	f858 <sfbpf_parse+0xe44>
    f478:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f47c:	mov	sl, r2
    f480:	ldr	r2, [r9]
    f484:	mov	r0, #32
    f488:	b	f8b8 <sfbpf_parse+0xea4>
    f48c:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f490:	ldr	r1, [r9]
    f494:	orr	r0, r1, r0
    f498:	mov	r1, #252	; 0xfc
    f49c:	mov	sl, ip
    f4a0:	mov	r5, lr
    f4a4:	mov	r6, r2
    f4a8:	mov	r4, r3
    f4ac:	bl	8e08 <sf_gen_p80211_type>
    f4b0:	b	fa90 <sfbpf_parse+0x107c>
    f4b4:	ldr	r0, [r9, #-28]	; 0xffffffe4
    f4b8:	str	r2, [sp, #16]
    f4bc:	ldr	r2, [r9, #-16]
    f4c0:	ldr	r1, [r9]
    f4c4:	b	f598 <sfbpf_parse+0xb84>
    f4c8:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f4cc:	mov	sl, r2
    f4d0:	ldr	r2, [r9]
    f4d4:	mov	r0, #48	; 0x30
    f4d8:	b	f8b8 <sfbpf_parse+0xea4>
    f4dc:	mov	sl, #0
    f4e0:	mov	r6, #21
    f4e4:	b	fac8 <sfbpf_parse+0x10b4>
    f4e8:	mov	sl, #0
    f4ec:	mov	r6, #37	; 0x25
    f4f0:	b	fac8 <sfbpf_parse+0x10b4>
    f4f4:	ldr	r0, [r9]
    f4f8:	b	f518 <sfbpf_parse+0xb04>
    f4fc:	mov	sl, ip
    f500:	mov	r5, lr
    f504:	mov	r6, r2
    f508:	mov	r4, r3
    f50c:	bl	91c8 <sf_gen_pppoed>
    f510:	b	fa90 <sfbpf_parse+0x107c>
    f514:	mvn	r0, #0
    f518:	mov	sl, ip
    f51c:	mov	r5, lr
    f520:	mov	r6, r2
    f524:	mov	r4, r3
    f528:	bl	8f50 <sf_gen_vlan>
    f52c:	b	fa90 <sfbpf_parse+0x107c>
    f530:	mov	r3, #1
    f534:	b	fb6c <sfbpf_parse+0x1158>
    f538:	mov	r0, #1
    f53c:	mov	sl, ip
    f540:	mov	r5, lr
    f544:	mov	r6, r2
    f548:	mov	r4, r3
    f54c:	bl	88f8 <sf_gen_inbound>
    f550:	b	fa90 <sfbpf_parse+0x107c>
    f554:	ldr	r0, [r9]
    f558:	b	f560 <sfbpf_parse+0xb4c>
    f55c:	mvn	r0, #0
    f560:	mov	sl, ip
    f564:	mov	r5, lr
    f568:	mov	r6, r2
    f56c:	mov	r4, r3
    f570:	bl	906c <sf_gen_mpls>
    f574:	b	fa90 <sfbpf_parse+0x107c>
    f578:	ldr	r2, [r9, #-12]
    f57c:	sub	r0, r2, #51	; 0x33
    f580:	cmp	r0, #1
    f584:	bhi	fb6c <sfbpf_parse+0x1158>
    f588:	ldr	r1, [r9]
    f58c:	mov	r0, r2
    f590:	str	r2, [sp, #16]
    f594:	mov	r2, #16
    f598:	str	r3, [sp, #4]
    f59c:	mov	r3, #0
    f5a0:	b	f610 <sfbpf_parse+0xbfc>
    f5a4:	mov	r3, #3
    f5a8:	b	fb6c <sfbpf_parse+0x1158>
    f5ac:	str	r2, [sp, #16]
    f5b0:	stmib	sp, {r3, lr}
    f5b4:	str	ip, [sp, #12]
    f5b8:	ldr	r0, [r9]
    f5bc:	ldr	r1, [pc, #2000]	; fd94 <sfbpf_parse+0x1380>
    f5c0:	add	r1, pc, r1
    f5c4:	bl	fde4 <str2tok>
    f5c8:	cmn	r0, #1
    f5cc:	bne	fc78 <sfbpf_parse+0x1264>
    f5d0:	b	fd20 <sfbpf_parse+0x130c>
    f5d4:	mov	sl, ip
    f5d8:	mov	r5, lr
    f5dc:	mov	r6, r2
    f5e0:	mov	r4, r3
    f5e4:	bl	7c78 <sf_gen_loadlen>
    f5e8:	b	fa90 <sfbpf_parse+0x107c>
    f5ec:	mov	sl, #0
    f5f0:	mov	r6, #124	; 0x7c
    f5f4:	b	fac8 <sfbpf_parse+0x10b4>
    f5f8:	ldr	r0, [r9, #-28]	; 0xffffffe4
    f5fc:	str	r2, [sp, #16]
    f600:	ldr	r2, [r9, #-16]
    f604:	ldr	r1, [r9]
    f608:	str	r3, [sp, #4]
    f60c:	mov	r3, #1
    f610:	str	ip, [sp, #12]
    f614:	str	lr, [sp, #8]
    f618:	bl	924c <sf_gen_atmfield_code>
    f61c:	b	f7a0 <sfbpf_parse+0xd8c>
    f620:	str	r2, [sp, #16]
    f624:	stmib	sp, {r3, lr}
    f628:	str	ip, [sp, #12]
    f62c:	ldr	r0, [r9]
    f630:	ldr	r1, [pc, #1900]	; fda4 <sfbpf_parse+0x1390>
    f634:	add	r1, pc, r1
    f638:	bl	e780 <sfbpf_strcasecmp>
    f63c:	mov	sl, #0
    f640:	cmp	r0, #0
    f644:	beq	fc8c <sfbpf_parse+0x1278>
    f648:	ldr	r0, [r9]
    f64c:	ldr	r1, [pc, #1876]	; fda8 <sfbpf_parse+0x1394>
    f650:	add	r1, pc, r1
    f654:	bl	e780 <sfbpf_strcasecmp>
    f658:	cmp	r0, #0
    f65c:	beq	fc94 <sfbpf_parse+0x1280>
    f660:	ldr	r0, [r9]
    f664:	ldr	r1, [pc, #1856]	; fdac <sfbpf_parse+0x1398>
    f668:	add	r1, pc, r1
    f66c:	bl	e780 <sfbpf_strcasecmp>
    f670:	cmp	r0, #0
    f674:	beq	fc9c <sfbpf_parse+0x1288>
    f678:	ldr	r0, [r9]
    f67c:	ldr	r1, [pc, #1836]	; fdb0 <sfbpf_parse+0x139c>
    f680:	add	r1, pc, r1
    f684:	bl	e780 <sfbpf_strcasecmp>
    f688:	mov	r6, #3
    f68c:	cmp	r0, #0
    f690:	mov	r4, #0
    f694:	mov	r5, #0
    f698:	ldr	ip, [sp, #12]
    f69c:	ldr	r2, [sp, #16]
    f6a0:	ldmib	sp, {r3, lr}
    f6a4:	beq	fb6c <sfbpf_parse+0x1158>
    f6a8:	b	fd68 <sfbpf_parse+0x1354>
    f6ac:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f6b0:	mov	sl, r2
    f6b4:	ldr	r2, [r9]
    f6b8:	mov	r0, #64	; 0x40
    f6bc:	b	f8b8 <sfbpf_parse+0xea4>
    f6c0:	mov	r2, #52	; 0x34
    f6c4:	b	fb6c <sfbpf_parse+0x1158>
    f6c8:	ldr	r0, [r9, #-24]	; 0xffffffe8
    f6cc:	str	r2, [sp, #16]
    f6d0:	ldr	r2, [r9, #-16]
    f6d4:	ldr	r1, [r9]
    f6d8:	b	f78c <sfbpf_parse+0xd78>
    f6dc:	ldr	r6, [r9, #-32]	; 0xffffffe0
    f6e0:	ldr	r0, [r9, #-4]
    f6e4:	b	fb5c <sfbpf_parse+0x1148>
    f6e8:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f6ec:	ldr	r0, [r9, #-16]
    f6f0:	mov	sl, r2
    f6f4:	ldr	r2, [r9]
    f6f8:	mov	r6, r3
    f6fc:	mov	r3, #1
    f700:	mov	r4, ip
    f704:	mov	r5, lr
    f708:	bl	7b54 <sf_gen_relation>
    f70c:	mov	r3, r6
    f710:	mov	r2, sl
    f714:	mov	lr, r5
    f718:	mov	ip, r4
    f71c:	b	f868 <sfbpf_parse+0xe54>
    f720:	mov	sl, #0
    f724:	mov	r6, #61	; 0x3d
    f728:	b	fac8 <sfbpf_parse+0x10b4>
    f72c:	mov	sl, #0
    f730:	mov	r6, #70	; 0x46
    f734:	b	fac8 <sfbpf_parse+0x10b4>
    f738:	mov	r2, #51	; 0x33
    f73c:	b	fb6c <sfbpf_parse+0x1158>
    f740:	mov	r3, #2
    f744:	b	fb6c <sfbpf_parse+0x1158>
    f748:	mov	r3, #4
    f74c:	b	fb6c <sfbpf_parse+0x1158>
    f750:	ldr	r0, [r9, #-24]	; 0xffffffe8
    f754:	str	r2, [sp, #16]
    f758:	ldr	r2, [r9, #-16]
    f75c:	ldr	r1, [r9]
    f760:	str	r3, [sp, #4]
    f764:	mov	r3, #1
    f768:	b	f794 <sfbpf_parse+0xd80>
    f76c:	ldr	r3, [r9, #-8]
    f770:	sub	r0, r3, #1
    f774:	cmp	r0, #3
    f778:	bhi	fb6c <sfbpf_parse+0x1158>
    f77c:	ldr	r1, [r9]
    f780:	mov	r0, r3
    f784:	str	r2, [sp, #16]
    f788:	mov	r2, #16
    f78c:	str	r3, [sp, #4]
    f790:	mov	r3, #0
    f794:	str	ip, [sp, #12]
    f798:	str	lr, [sp, #8]
    f79c:	bl	9930 <sf_gen_mtp3field_code>
    f7a0:	ldr	r2, [sp, #16]
    f7a4:	ldmib	sp, {r3, lr}
    f7a8:	ldr	ip, [sp, #12]
    f7ac:	str	r0, [sp, #28]
    f7b0:	b	fb6c <sfbpf_parse+0x1158>
    f7b4:	mov	sl, ip
    f7b8:	mov	r5, lr
    f7bc:	mov	r6, r2
    f7c0:	mov	r4, r3
    f7c4:	bl	91d0 <sf_gen_pppoes>
    f7c8:	b	fa90 <sfbpf_parse+0x107c>
    f7cc:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f7d0:	mov	sl, r2
    f7d4:	ldr	r2, [r9]
    f7d8:	mov	r0, #80	; 0x50
    f7dc:	b	f8b8 <sfbpf_parse+0xea4>
    f7e0:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f7e4:	mov	sl, r2
    f7e8:	ldr	r2, [r9]
    f7ec:	mov	r0, #96	; 0x60
    f7f0:	b	f8b8 <sfbpf_parse+0xea4>
    f7f4:	mov	sl, #0
    f7f8:	mov	r6, #33	; 0x21
    f7fc:	b	fac8 <sfbpf_parse+0x10b4>
    f800:	mov	sl, #0
    f804:	mov	r6, #39	; 0x27
    f808:	b	fac8 <sfbpf_parse+0x10b4>
    f80c:	mov	sl, #0
    f810:	mov	r6, #9
    f814:	b	fac8 <sfbpf_parse+0x10b4>
    f818:	ldr	r0, [r9]
    f81c:	mov	sl, ip
    f820:	mov	r5, lr
    f824:	mov	r6, r2
    f828:	mov	r4, r3
    f82c:	bl	8d90 <sf_gen_pf_ruleset>
    f830:	b	fa90 <sfbpf_parse+0x107c>
    f834:	mov	sl, #0
    f838:	mov	r6, #62	; 0x3e
    f83c:	b	fac8 <sfbpf_parse+0x10b4>
    f840:	ldr	r0, [r9]
    f844:	mov	sl, ip
    f848:	mov	r5, lr
    f84c:	mov	r6, r2
    f850:	mov	r4, r3
    f854:	bl	97a8 <sf_gen_mtp2type_abbrev>
    f858:	mov	r3, r4
    f85c:	mov	r2, r6
    f860:	mov	lr, r5
    f864:	mov	ip, sl
    f868:	str	r0, [sp, #28]
    f86c:	mov	r6, #255	; 0xff
    f870:	mov	sl, #255	; 0xff
    f874:	mov	r4, #255	; 0xff
    f878:	mov	r5, #255	; 0xff
    f87c:	b	fb6c <sfbpf_parse+0x1158>
    f880:	mov	sl, #0
    f884:	mov	r6, #10
    f888:	b	fac8 <sfbpf_parse+0x10b4>
    f88c:	ldr	r0, [r9]
    f890:	mov	sl, ip
    f894:	mov	r5, lr
    f898:	mov	r6, r2
    f89c:	mov	r4, r3
    f8a0:	bl	7cc0 <sf_gen_loadi>
    f8a4:	b	fa90 <sfbpf_parse+0x107c>
    f8a8:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f8ac:	mov	sl, r2
    f8b0:	ldr	r2, [r9]
    f8b4:	mov	r0, #112	; 0x70
    f8b8:	mov	r4, ip
    f8bc:	mov	r5, lr
    f8c0:	mov	r6, r3
    f8c4:	bl	7d6c <sf_gen_arth>
    f8c8:	mov	r3, r6
    f8cc:	mov	r2, sl
    f8d0:	mov	lr, r5
    f8d4:	mov	ip, r4
    f8d8:	b	faa0 <sfbpf_parse+0x108c>
    f8dc:	ldr	r0, [r9]
    f8e0:	mov	sl, ip
    f8e4:	mov	r5, lr
    f8e8:	mov	r6, r2
    f8ec:	mov	r4, r3
    f8f0:	bl	7d10 <sf_gen_neg>
    f8f4:	b	fa90 <sfbpf_parse+0x107c>
    f8f8:	mov	sl, #0
    f8fc:	mov	r6, #60	; 0x3c
    f900:	b	fac8 <sfbpf_parse+0x10b4>
    f904:	mov	sl, #0
    f908:	mov	r6, #71	; 0x47
    f90c:	b	fac8 <sfbpf_parse+0x10b4>
    f910:	ldr	r0, [r9]
    f914:	mov	sl, ip
    f918:	mov	r5, lr
    f91c:	mov	r6, r2
    f920:	mov	r4, r3
    f924:	bl	8d78 <sf_gen_pf_ifname>
    f928:	b	fa90 <sfbpf_parse+0x107c>
    f92c:	ldr	r0, [r9, #-48]	; 0xffffffd0
    f930:	ldr	r1, [r9, #-16]
    f934:	mov	sl, r2
    f938:	mov	r2, #1
    f93c:	mov	r4, ip
    f940:	mov	r5, lr
    f944:	mov	r6, r3
    f948:	bl	7524 <sf_gen_load>
    f94c:	b	f8c8 <sfbpf_parse+0xeb4>
    f950:	mov	sl, #0
    f954:	mov	r6, #40	; 0x28
    f958:	b	fac8 <sfbpf_parse+0x10b4>
    f95c:	ldr	r0, [r9]
    f960:	mov	sl, ip
    f964:	mov	r5, lr
    f968:	mov	r6, r2
    f96c:	mov	r4, r3
    f970:	bl	8dc0 <sf_gen_pf_srnr>
    f974:	b	fa90 <sfbpf_parse+0x107c>
    f978:	ldr	r0, [r9]
    f97c:	mov	sl, ip
    f980:	mov	r5, lr
    f984:	mov	r6, r2
    f988:	mov	r4, r3
    f98c:	bl	8e7c <sf_gen_p80211_fcdir>
    f990:	b	fa90 <sfbpf_parse+0x107c>
    f994:	str	r2, [sp, #16]
    f998:	stmib	sp, {r3, lr}
    f99c:	str	ip, [sp, #12]
    f9a0:	mov	r4, #0
    f9a4:	ldr	r5, [pc, #1008]	; fd9c <sfbpf_parse+0x1388>
    f9a8:	add	r5, pc, r5
    f9ac:	add	r0, r5, r4, lsl #3
    f9b0:	ldr	r1, [r0, #4]
    f9b4:	ldr	r0, [r9]
    f9b8:	bl	fde4 <str2tok>
    f9bc:	cmn	r0, #1
    f9c0:	bne	fad4 <sfbpf_parse+0x10c0>
    f9c4:	add	r4, r4, #1
    f9c8:	cmp	r4, #3
    f9cc:	bne	f9a4 <sfbpf_parse+0xf90>
    f9d0:	b	fd20 <sfbpf_parse+0x130c>
    f9d4:	ldr	r0, [r9]
    f9d8:	mov	sl, ip
    f9dc:	mov	r5, lr
    f9e0:	mov	r6, r2
    f9e4:	mov	r4, r3
    f9e8:	bl	8dd8 <sf_gen_pf_reason>
    f9ec:	b	fa90 <sfbpf_parse+0x107c>
    f9f0:	ldr	r0, [r9]
    f9f4:	mov	sl, ip
    f9f8:	mov	r5, lr
    f9fc:	mov	r6, r2
    fa00:	mov	r4, r3
    fa04:	bl	8df0 <sf_gen_pf_action>
    fa08:	b	fa90 <sfbpf_parse+0x107c>
    fa0c:	mov	sl, #0
    fa10:	mov	r6, #15
    fa14:	b	fac8 <sfbpf_parse+0x10b4>
    fa18:	mov	sl, #0
    fa1c:	mov	r6, #18
    fa20:	b	fac8 <sfbpf_parse+0x10b4>
    fa24:	.word	0x0002210c
    fa28:	.word	0x00022100
    fa2c:	ldr	r0, [r9]
    fa30:	mov	sl, ip
    fa34:	mov	r5, lr
    fa38:	mov	r6, r2
    fa3c:	mov	r4, r3
    fa40:	bl	7e0c <sf_gen_greater>
    fa44:	b	fa90 <sfbpf_parse+0x107c>
    fa48:	ldr	r0, [r9, #12]
    fa4c:	str	ip, [sp, #12]
    fa50:	str	r2, [sp, #16]
    fa54:	stmib	sp, {r3, lr}
    fa58:	bl	2fb4 <sf_finish_parse>
    fa5c:	ldr	r2, [sp, #16]
    fa60:	ldmib	sp, {r3, lr}
    fa64:	ldr	ip, [sp, #12]
    fa68:	b	fb6c <sfbpf_parse+0x1158>
    fa6c:	mov	sl, #0
    fa70:	mov	r6, #19
    fa74:	b	fac8 <sfbpf_parse+0x10b4>
    fa78:	ldr	r0, [r9, #-16]
    fa7c:	mov	sl, ip
    fa80:	mov	r5, lr
    fa84:	mov	r6, r2
    fa88:	mov	r4, r3
    fa8c:	bl	83e8 <sf_gen_multicast>
    fa90:	mov	r3, r4
    fa94:	mov	r2, r6
    fa98:	mov	lr, r5
    fa9c:	mov	ip, sl
    faa0:	mov	r6, r0
    faa4:	lsr	r5, r0, #24
    faa8:	lsr	r4, r0, #16
    faac:	lsr	sl, r0, #8
    fab0:	b	fb6c <sfbpf_parse+0x1158>
    fab4:	mov	sl, #0
    fab8:	mov	r6, #36	; 0x24
    fabc:	b	fac8 <sfbpf_parse+0x10b4>
    fac0:	mov	sl, #0
    fac4:	mov	r6, #20
    fac8:	mov	r4, #0
    facc:	mov	r5, #0
    fad0:	b	fb6c <sfbpf_parse+0x1158>
    fad4:	ldr	r1, [r5, r4, lsl #3]
    fad8:	orr	r6, r1, r0
    fadc:	b	fc7c <sfbpf_parse+0x1268>
    fae0:	ldr	r6, [r9, #-16]
    fae4:	ldr	r0, [r9]
    fae8:	mov	r1, r6
    faec:	str	ip, [sp, #12]
    faf0:	mov	r5, lr
    faf4:	mov	r4, r2
    faf8:	mov	sl, r3
    fafc:	bl	72e8 <sf_gen_ecode>
    fb00:	b	fc40 <sfbpf_parse+0x122c>
    fb04:	.word	0x0000501a
    fb08:	.word	0x00021fe0
    fb0c:	.word	0x00021fc4
    fb10:	.word	0x000051e6
    fb14:	.word	0x00021f90
    fb18:	.word	0x00005324
    fb1c:	.word	0x00005848
    fb20:	.word	0x00021f4c
    fb24:	ldr	r6, [r9, #-16]
    fb28:	ldr	r0, [r9]
    fb2c:	mov	r1, #0
    fb30:	str	r2, [sp, #16]
    fb34:	mov	r2, #128	; 0x80
    fb38:	mov	sl, r3
    fb3c:	mov	r3, r6
    fb40:	mov	r4, ip
    fb44:	mov	r5, lr
    fb48:	bl	7124 <sf_gen_mcode6>
    fb4c:	mov	r3, sl
    fb50:	ldr	r2, [sp, #16]
    fb54:	mov	lr, r5
    fb58:	mov	ip, r4
    fb5c:	str	r0, [sp, #28]
    fb60:	lsr	r5, r6, #24
    fb64:	lsr	r4, r6, #16
    fb68:	lsr	sl, r6, #8
    fb6c:	sub	r9, r9, lr, lsl #4
    fb70:	uxtb	r0, r6
    fb74:	bfi	r0, sl, #8, #8
    fb78:	uxtb	r1, r4
    fb7c:	orr	r0, r0, r1, lsl #16
    fb80:	orr	r0, r0, r5, lsl #24
    fb84:	str	r0, [r9, #16]!
    fb88:	stmib	r9, {r2, r3}
    fb8c:	ldr	r0, [sp, #28]
    fb90:	str	r0, [r9, #12]
    fb94:	lsl	r0, lr, #1
    fb98:	ldrsh	r2, [r8, -r0]!
    fb9c:	ldr	r0, [pc, #532]	; fdb8 <sfbpf_parse+0x13a4>
    fba0:	add	r0, pc, r0
    fba4:	ldrb	r0, [r0, r7]
    fba8:	sub	r0, r0, #126	; 0x7e
    fbac:	ldr	r1, [pc, #520]	; fdbc <sfbpf_parse+0x13a8>
    fbb0:	add	r1, pc, r1
    fbb4:	add	r1, r1, r0, lsl #1
    fbb8:	ldrsh	r1, [r1]
    fbbc:	add	r1, r2, r1
    fbc0:	movw	r3, #669	; 0x29d
    fbc4:	cmp	r1, r3
    fbc8:	bhi	fbfc <sfbpf_parse+0x11e8>
    fbcc:	uxth	r2, r2
    fbd0:	ldr	r3, [pc, #488]	; fdc0 <sfbpf_parse+0x13ac>
    fbd4:	add	r3, pc, r3
    fbd8:	add	r3, r3, r1, lsl #1
    fbdc:	ldrh	r3, [r3]
    fbe0:	cmp	r3, r2
    fbe4:	bne	fbfc <sfbpf_parse+0x11e8>
    fbe8:	ldr	r0, [pc, #468]	; fdc4 <sfbpf_parse+0x13b0>
    fbec:	add	r0, pc, r0
    fbf0:	add	r0, r0, r1, lsl #1
    fbf4:	b	fc08 <sfbpf_parse+0x11f4>
    fbf8:	.word	0x00021f38
    fbfc:	ldr	r1, [pc, #452]	; fdc8 <sfbpf_parse+0x13b4>
    fc00:	add	r1, pc, r1
    fc04:	add	r0, r1, r0, lsl #1
    fc08:	ldrsh	sl, [r0]
    fc0c:	mov	r6, #15
    fc10:	ldr	r4, [sp, #24]
    fc14:	b	ea60 <sfbpf_parse+0x4c>
    fc18:	.word	0x00005d44
    fc1c:	.word	0x00005e42
    fc20:	ldr	r6, [r9, #-16]
    fc24:	ldr	r0, [r9]
    fc28:	mov	r1, r6
    fc2c:	str	ip, [sp, #12]
    fc30:	mov	r5, lr
    fc34:	mov	r4, r2
    fc38:	mov	sl, r3
    fc3c:	bl	8ef0 <sf_gen_acode>
    fc40:	str	r0, [sp, #28]
    fc44:	ldr	r0, [r9]
    fc48:	bl	e5c <free@plt>
    fc4c:	mov	r3, sl
    fc50:	mov	r2, r4
    fc54:	mov	lr, r5
    fc58:	ldr	ip, [sp, #12]
    fc5c:	b	fb60 <sfbpf_parse+0x114c>
    fc60:	ldr	r1, [pc, #280]	; fd80 <sfbpf_parse+0x136c>
    fc64:	add	r1, pc, r1
    fc68:	ldr	r0, [r9]
    fc6c:	bl	fde4 <str2tok>
    fc70:	cmn	r0, #1
    fc74:	beq	fd74 <sfbpf_parse+0x1360>
    fc78:	mov	r6, r0
    fc7c:	lsr	r5, r6, #24
    fc80:	lsr	r4, r6, #16
    fc84:	lsr	sl, r6, #8
    fc88:	b	fca8 <sfbpf_parse+0x1294>
    fc8c:	mov	r6, #0
    fc90:	b	fca0 <sfbpf_parse+0x128c>
    fc94:	mov	r6, #1
    fc98:	b	fca0 <sfbpf_parse+0x128c>
    fc9c:	mov	r6, #2
    fca0:	mov	r4, #0
    fca4:	mov	r5, #0
    fca8:	ldr	ip, [sp, #12]
    fcac:	ldr	r2, [sp, #16]
    fcb0:	ldmib	sp, {r3, lr}
    fcb4:	b	fb6c <sfbpf_parse+0x1158>
    fcb8:	mov	r6, #0
    fcbc:	sub	r0, fp, #432	; 0x1b0
    fcc0:	cmp	r4, r0
    fcc4:	bne	fcd4 <sfbpf_parse+0x12c0>
    fcc8:	b	fcdc <sfbpf_parse+0x12c8>
    fccc:	mov	r6, #1
    fcd0:	mov	r4, r5
    fcd4:	mov	r0, r4
    fcd8:	bl	e5c <free@plt>
    fcdc:	mov	r0, r6
    fce0:	sub	sp, fp, #28
    fce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fce8:	ldr	r0, [pc, #232]	; fdd8 <sfbpf_parse+0x13c4>
    fcec:	add	r0, pc, r0
    fcf0:	bl	fe64 <sfbpf_error>
    fcf4:	bl	fe34 <pfreason_to_num>
    fcf8:	bl	fe4c <pfaction_to_num>
    fcfc:	ldr	r0, [pc, #200]	; fdcc <sfbpf_parse+0x13b8>
    fd00:	ldr	r0, [pc, r0]
    fd04:	add	r0, r0, #1
    fd08:	ldr	r1, [pc, #192]	; fdd0 <sfbpf_parse+0x13bc>
    fd0c:	add	r1, pc, r1
    fd10:	str	r0, [r1]
    fd14:	ldr	r0, [pc, #184]	; fdd4 <sfbpf_parse+0x13c0>
    fd18:	add	r0, pc, r0
    fd1c:	bl	fe64 <sfbpf_error>
    fd20:	ldr	r0, [pc, #120]	; fda0 <sfbpf_parse+0x138c>
    fd24:	add	r0, pc, r0
    fd28:	bl	1f9c <sf_bpf_error>
    fd2c:	ldr	r0, [pc, #168]	; fddc <sfbpf_parse+0x13c8>
    fd30:	add	r0, pc, r0
    fd34:	bl	1f9c <sf_bpf_error>
    fd38:	ldr	r0, [pc, #68]	; fd84 <sfbpf_parse+0x1370>
    fd3c:	add	r0, pc, r0
    fd40:	bl	1f9c <sf_bpf_error>
    fd44:	ldr	r0, [pc, #64]	; fd8c <sfbpf_parse+0x1378>
    fd48:	add	r0, pc, r0
    fd4c:	bl	1f9c <sf_bpf_error>
    fd50:	ldr	r0, [pc, #56]	; fd90 <sfbpf_parse+0x137c>
    fd54:	add	r0, pc, r0
    fd58:	bl	1f9c <sf_bpf_error>
    fd5c:	ldr	r0, [pc, #36]	; fd88 <sfbpf_parse+0x1374>
    fd60:	add	r0, pc, r0
    fd64:	bl	1f9c <sf_bpf_error>
    fd68:	ldr	r0, [pc, #68]	; fdb4 <sfbpf_parse+0x13a0>
    fd6c:	add	r0, pc, r0
    fd70:	bl	1f9c <sf_bpf_error>
    fd74:	ldr	r0, [pc, #100]	; fde0 <sfbpf_parse+0x13cc>
    fd78:	add	r0, pc, r0
    fd7c:	bl	1f9c <sf_bpf_error>
    fd80:	.word	0x00020144
    fd84:	.word	0x00004f80
    fd88:	.word	0x00004f7f
    fd8c:	.word	0x00004fbf
    fd90:	.word	0x00004fd7
    fd94:	.word	0x00020798
    fd98:	.word	0x00020980
    fd9c:	.word	0x000203e0
    fda0:	.word	0x00005030
    fda4:	.word	0x00005769
    fda8:	.word	0x0000575b
    fdac:	.word	0x0000573a
    fdb0:	.word	0x00005729
    fdb4:	.word	0x00005044
    fdb8:	.word	0x00004f99
    fdbc:	.word	0x00005054
    fdc0:	.word	0x00004310
    fdc4:	.word	0x00004834
    fdc8:	.word	0x00005060
    fdcc:	.word	0x00020e38
    fdd0:	.word	0x00020e2c
    fdd4:	.word	0x000050b1
    fdd8:	.word	0x000050ea
    fddc:	.word	0x0000503d
    fde0:	.word	0x00005009

0000fde4 <str2tok>:
    fde4:	push	{r4, r5, r6, sl, fp, lr}
    fde8:	add	fp, sp, #16
    fdec:	mov	r5, r0
    fdf0:	ldr	r0, [r1, #4]
    fdf4:	mvn	r4, #0
    fdf8:	cmp	r0, #0
    fdfc:	beq	fe20 <str2tok+0x3c>
    fe00:	add	r6, r1, #12
    fe04:	mov	r1, r5
    fe08:	bl	e780 <sfbpf_strcasecmp>
    fe0c:	cmp	r0, #0
    fe10:	beq	fe28 <str2tok+0x44>
    fe14:	ldr	r0, [r6], #8
    fe18:	cmp	r0, #0
    fe1c:	bne	fe04 <str2tok+0x20>
    fe20:	mov	r0, r4
    fe24:	pop	{r4, r5, r6, sl, fp, pc}
    fe28:	ldr	r4, [r6, #-12]
    fe2c:	mov	r0, r4
    fe30:	pop	{r4, r5, r6, sl, fp, pc}

0000fe34 <pfreason_to_num>:
    fe34:	push	{fp, lr}
    fe38:	mov	fp, sp
    fe3c:	ldr	r0, [pc, #4]	; fe48 <pfreason_to_num+0x14>
    fe40:	add	r0, pc, r0
    fe44:	bl	1f9c <sf_bpf_error>
    fe48:	.word	0x00002b2c

0000fe4c <pfaction_to_num>:
    fe4c:	push	{fp, lr}
    fe50:	mov	fp, sp
    fe54:	ldr	r0, [pc, #4]	; fe60 <pfaction_to_num+0x14>
    fe58:	add	r0, pc, r0
    fe5c:	bl	1f9c <sf_bpf_error>
    fe60:	.word	0x00002b14

0000fe64 <sfbpf_error>:
    fe64:	push	{fp, lr}
    fe68:	mov	fp, sp
    fe6c:	mov	r1, r0
    fe70:	ldr	r0, [pc, #28]	; fe94 <sfbpf_error+0x30>
    fe74:	ldr	r0, [pc, r0]
    fe78:	add	r0, r0, #1
    fe7c:	ldr	r2, [pc, #20]	; fe98 <sfbpf_error+0x34>
    fe80:	add	r2, pc, r2
    fe84:	str	r0, [r2]
    fe88:	ldr	r0, [pc, #12]	; fe9c <sfbpf_error+0x38>
    fe8c:	add	r0, pc, r0
    fe90:	bl	1f9c <sf_bpf_error>
    fe94:	.word	0x00020c64
    fe98:	.word	0x00020c58
    fe9c:	.word	0x000038a9

0000fea0 <sfbpf_lex>:
    fea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fea4:	add	fp, sp, #28
    fea8:	sub	sp, sp, #44	; 0x2c
    feac:	ldr	r1, [pc, #3776]	; 10d74 <sfbpf_lex+0xed4>
    feb0:	add	r1, pc, r1
    feb4:	ldrb	r0, [r1]
    feb8:	cmp	r0, #0
    febc:	bne	ff7c <sfbpf_lex+0xdc>
    fec0:	mov	r0, #1
    fec4:	strb	r0, [r1]
    fec8:	ldr	r1, [pc, #3752]	; 10d78 <sfbpf_lex+0xed8>
    fecc:	add	r1, pc, r1
    fed0:	ldrb	r2, [r1]
    fed4:	cmp	r2, #0
    fed8:	strbeq	r0, [r1]
    fedc:	ldr	r0, [pc, #3736]	; 10d7c <sfbpf_lex+0xedc>
    fee0:	ldr	r0, [pc, r0]
    fee4:	cmp	r0, #0
    fee8:	bne	ff04 <sfbpf_lex+0x64>
    feec:	ldr	r0, [pc, #3724]	; 10d80 <sfbpf_lex+0xee0>
    fef0:	ldr	r0, [pc, r0]
    fef4:	ldr	r0, [r0]
    fef8:	ldr	r1, [pc, #3716]	; 10d84 <sfbpf_lex+0xee4>
    fefc:	add	r1, pc, r1
    ff00:	str	r0, [r1]
    ff04:	ldr	r0, [pc, #3708]	; 10d88 <sfbpf_lex+0xee8>
    ff08:	ldr	r0, [pc, r0]
    ff0c:	cmp	r0, #0
    ff10:	bne	ff2c <sfbpf_lex+0x8c>
    ff14:	ldr	r0, [pc, #3696]	; 10d8c <sfbpf_lex+0xeec>
    ff18:	ldr	r0, [pc, r0]
    ff1c:	ldr	r0, [r0]
    ff20:	ldr	r1, [pc, #3688]	; 10d90 <sfbpf_lex+0xef0>
    ff24:	add	r1, pc, r1
    ff28:	str	r0, [r1]
    ff2c:	ldr	r0, [pc, #3680]	; 10d94 <sfbpf_lex+0xef4>
    ff30:	ldr	r0, [pc, r0]
    ff34:	cmp	r0, #0
    ff38:	beq	ff50 <sfbpf_lex+0xb0>
    ff3c:	ldr	r1, [pc, #3668]	; 10d98 <sfbpf_lex+0xef8>
    ff40:	ldr	r1, [pc, r1]
    ff44:	ldr	r0, [r0, r1, lsl #2]
    ff48:	cmp	r0, #0
    ff4c:	bne	ff78 <sfbpf_lex+0xd8>
    ff50:	bl	10f34 <sfbpf_ensure_buffer_stack>
    ff54:	ldr	r0, [pc, #3648]	; 10d9c <sfbpf_lex+0xefc>
    ff58:	ldr	r0, [pc, r0]
    ff5c:	mov	r1, #16384	; 0x4000
    ff60:	bl	11024 <sfbpf__create_buffer>
    ff64:	ldr	r1, [pc, #3636]	; 10da0 <sfbpf_lex+0xf00>
    ff68:	ldr	r1, [pc, r1]
    ff6c:	ldr	r2, [pc, #3632]	; 10da4 <sfbpf_lex+0xf04>
    ff70:	ldr	r2, [pc, r2]
    ff74:	str	r0, [r1, r2, lsl #2]
    ff78:	bl	1108c <sfbpf__load_buffer_state>
    ff7c:	ldr	ip, [pc, #3620]	; 10da8 <sfbpf_lex+0xf08>
    ff80:	add	ip, pc, ip
    ff84:	ldr	lr, [pc, #3616]	; 10dac <sfbpf_lex+0xf0c>
    ff88:	add	lr, pc, lr
    ff8c:	ldr	r3, [pc, #3612]	; 10db0 <sfbpf_lex+0xf10>
    ff90:	add	r3, pc, r3
    ff94:	ldr	r5, [pc, #3608]	; 10db4 <sfbpf_lex+0xf14>
    ff98:	add	r5, pc, r5
    ff9c:	ldr	r9, [pc, #3604]	; 10db8 <sfbpf_lex+0xf18>
    ffa0:	add	r9, pc, r9
    ffa4:	ldr	sl, [pc, #3600]	; 10dbc <sfbpf_lex+0xf1c>
    ffa8:	add	sl, pc, sl
    ffac:	movw	r8, #1434	; 0x59a
    ffb0:	b	ffec <sfbpf_lex+0x14c>
    ffb4:	ldr	r3, [pc, #3808]	; 10e9c <sfbpf_lex+0xffc>
    ffb8:	ldr	r3, [pc, r3]
    ffbc:	ldr	r1, [pc, #3804]	; 10ea0 <sfbpf_lex+0x1000>
    ffc0:	ldr	r1, [pc, r1]
    ffc4:	ldr	r0, [pc, #3800]	; 10ea4 <sfbpf_lex+0x1004>
    ffc8:	ldr	r0, [pc, r0]
    ffcc:	mov	r2, #1
    ffd0:	mov	r4, ip
    ffd4:	mov	r6, lr
    ffd8:	bl	eb0 <fwrite@plt>
    ffdc:	ldr	r3, [pc, #3780]	; 10ea8 <sfbpf_lex+0x1008>
    ffe0:	add	r3, pc, r3
    ffe4:	mov	lr, r6
    ffe8:	mov	ip, r4
    ffec:	ldrb	r0, [ip]
    fff0:	ldr	r6, [pc, #3528]	; 10dc0 <sfbpf_lex+0xf20>
    fff4:	ldr	r6, [pc, r6]
    fff8:	strb	r0, [r6]
    fffc:	ldrb	r4, [lr]
   10000:	str	r6, [sp]
   10004:	b	10050 <sfbpf_lex+0x1b0>
   10008:	mvn	r0, r4
   1000c:	add	r0, r0, r6
   10010:	ldr	r1, [pc, #3792]	; 10ee8 <sfbpf_lex+0x1048>
   10014:	ldr	r1, [pc, r1]
   10018:	add	r6, r1, r0
   1001c:	ldr	r0, [pc, #3784]	; 10eec <sfbpf_lex+0x104c>
   10020:	add	r0, pc, r0
   10024:	str	r6, [r0]
   10028:	bl	1118c <yy_get_previous_state>
   1002c:	ldr	r3, [pc, #3772]	; 10ef0 <sfbpf_lex+0x1050>
   10030:	add	r3, pc, r3
   10034:	ldr	lr, [pc, #3768]	; 10ef4 <sfbpf_lex+0x1054>
   10038:	add	lr, pc, lr
   1003c:	mov	ip, r7
   10040:	mov	r4, r0
   10044:	ldr	r0, [pc, #3756]	; 10ef8 <sfbpf_lex+0x1058>
   10048:	ldr	r0, [pc, r0]
   1004c:	str	r0, [sp]
   10050:	ldrb	r0, [r6]
   10054:	ldrb	r0, [r3, r0]
   10058:	ldr	r1, [pc, #3428]	; 10dc4 <sfbpf_lex+0xf24>
   1005c:	add	r1, pc, r1
   10060:	add	r1, r1, r4, lsl #1
   10064:	ldrh	r1, [r1]
   10068:	cmp	r1, #0
   1006c:	beq	10088 <sfbpf_lex+0x1e8>
   10070:	ldr	r1, [pc, #3408]	; 10dc8 <sfbpf_lex+0xf28>
   10074:	add	r1, pc, r1
   10078:	str	r6, [r1]
   1007c:	ldr	r1, [pc, #3400]	; 10dcc <sfbpf_lex+0xf2c>
   10080:	add	r1, pc, r1
   10084:	str	r4, [r1]
   10088:	add	r1, r5, r4, lsl #1
   1008c:	ldrsh	r1, [r1]
   10090:	add	r2, r1, r0
   10094:	add	r1, r9, r2, lsl #1
   10098:	ldrsh	r1, [r1]
   1009c:	cmp	r4, r1
   100a0:	beq	100ec <sfbpf_lex+0x24c>
   100a4:	mov	r1, r0
   100a8:	add	r2, sl, r4, lsl #1
   100ac:	ldrsh	r4, [r2]
   100b0:	cmp	r4, r8
   100b4:	ldrge	r1, [pc, #3348]	; 10dd0 <sfbpf_lex+0xf30>
   100b8:	addge	r1, pc, r1
   100bc:	ldrbge	r1, [r1, r0]
   100c0:	add	r0, r5, r4, lsl #1
   100c4:	ldrsh	r0, [r0]
   100c8:	uxtab	r2, r0, r1
   100cc:	add	r0, r9, r2, lsl #1
   100d0:	ldrh	r3, [r0]
   100d4:	uxtb	r0, r1
   100d8:	uxth	r7, r4
   100dc:	cmp	r7, r3
   100e0:	bne	100a8 <sfbpf_lex+0x208>
   100e4:	ldr	r3, [pc, #3304]	; 10dd4 <sfbpf_lex+0xf34>
   100e8:	add	r3, pc, r3
   100ec:	ldr	r0, [pc, #3300]	; 10dd8 <sfbpf_lex+0xf38>
   100f0:	add	r0, pc, r0
   100f4:	add	r0, r0, r2, lsl #1
   100f8:	ldrsh	r4, [r0]
   100fc:	add	r0, r5, r4, lsl #1
   10100:	ldrh	r0, [r0]
   10104:	add	r6, r6, #1
   10108:	movw	r1, #7401	; 0x1ce9
   1010c:	cmp	r0, r1
   10110:	bne	10050 <sfbpf_lex+0x1b0>
   10114:	b	10130 <sfbpf_lex+0x290>
   10118:	ldrb	r0, [ip]
   1011c:	strb	r0, [r6]
   10120:	ldr	r4, [pc, #3280]	; 10df8 <sfbpf_lex+0xf58>
   10124:	ldr	r4, [pc, r4]
   10128:	ldr	r6, [pc, #3276]	; 10dfc <sfbpf_lex+0xf5c>
   1012c:	ldr	r6, [pc, r6]
   10130:	ldr	r0, [pc, #3236]	; 10ddc <sfbpf_lex+0xf3c>
   10134:	add	r0, pc, r0
   10138:	add	r0, r0, r4, lsl #1
   1013c:	ldrh	r0, [r0]
   10140:	cmp	r0, #0
   10144:	bne	10168 <sfbpf_lex+0x2c8>
   10148:	ldr	r0, [pc, #3216]	; 10de0 <sfbpf_lex+0xf40>
   1014c:	ldr	r0, [pc, r0]
   10150:	ldr	r1, [pc, #3212]	; 10de4 <sfbpf_lex+0xf44>
   10154:	add	r1, pc, r1
   10158:	add	r0, r1, r0, lsl #1
   1015c:	ldrh	r0, [r0]
   10160:	ldr	r6, [pc, #3200]	; 10de8 <sfbpf_lex+0xf48>
   10164:	ldr	r6, [pc, r6]
   10168:	ldr	r1, [pc, #3196]	; 10dec <sfbpf_lex+0xf4c>
   1016c:	add	r1, pc, r1
   10170:	ldr	r2, [sp]
   10174:	str	r2, [r1]
   10178:	sub	r1, r6, r2
   1017c:	ldr	r2, [pc, #3180]	; 10df0 <sfbpf_lex+0xf50>
   10180:	add	r2, pc, r2
   10184:	str	r1, [r2]
   10188:	ldrb	r1, [r6]
   1018c:	strb	r1, [ip]
   10190:	mov	r1, #0
   10194:	strb	r1, [r6]
   10198:	ldr	r1, [pc, #3156]	; 10df4 <sfbpf_lex+0xf54>
   1019c:	add	r1, pc, r1
   101a0:	str	r6, [r1]
   101a4:	sxth	r0, r0
   101a8:	cmp	r0, #146	; 0x92
   101ac:	bls	101e8 <sfbpf_lex+0x348>
   101b0:	b	10d28 <sfbpf_lex+0xe88>
   101b4:	ldr	r0, [pc, #3420]	; 10f18 <sfbpf_lex+0x1078>
   101b8:	ldr	r0, [pc, r0]
   101bc:	ldr	r1, [pc, #3416]	; 10f1c <sfbpf_lex+0x107c>
   101c0:	add	r1, pc, r1
   101c4:	str	r0, [r1]
   101c8:	mov	r0, #146	; 0x92
   101cc:	mov	ip, r7
   101d0:	ldr	lr, [pc, #3400]	; 10f20 <sfbpf_lex+0x1080>
   101d4:	add	lr, pc, lr
   101d8:	ldr	r3, [pc, #3396]	; 10f24 <sfbpf_lex+0x1084>
   101dc:	add	r3, pc, r3
   101e0:	cmp	r0, #146	; 0x92
   101e4:	bhi	10d28 <sfbpf_lex+0xe88>
   101e8:	add	r1, pc, #4
   101ec:	ldr	r0, [r1, r0, lsl #2]
   101f0:	add	pc, r1, r0
   101f4:	.word	0xffffff24
   101f8:	.word	0x000005a4
   101fc:	.word	0x0000094c
   10200:	.word	0x000003f8
   10204:	.word	0x000003f8
   10208:	.word	0x00000970
   1020c:	.word	0x00000468
   10210:	.word	0x00000964
   10214:	.word	0x000005fc
   10218:	.word	0x000006ac
   1021c:	.word	0x000005d8
   10220:	.word	0x0000078c
   10224:	.word	0x00000598
   10228:	.word	0x0000058c
   1022c:	.word	0x00000654
   10230:	.word	0x00000798
   10234:	.word	0x000009f4
   10238:	.word	0x00000a68
   1023c:	.word	0x0000045c
   10240:	.word	0x00000870
   10244:	.word	0x000007e0
   10248:	.word	0x00000994
   1024c:	.word	0x0000063c
   10250:	.word	0x00000858
   10254:	.word	0x00000928
   10258:	.word	0x00000acc
   1025c:	.word	0x00000498
   10260:	.word	0x00000b14
   10264:	.word	0x000007d4
   10268:	.word	0x000003ec
   1026c:	.word	0x000003ec
   10270:	.word	0x00000450
   10274:	.word	0x00000450
   10278:	.word	0x00000af0
   1027c:	.word	0x00000ab4
   10280:	.word	0x00000940
   10284:	.word	0x0000097c
   10288:	.word	0x00000570
   1028c:	.word	0x00000660
   10290:	.word	0x000006c8
   10294:	.word	0x0000066c
   10298:	.word	0x000006a0
   1029c:	.word	0x00000a2c
   102a0:	.word	0x0000053c
   102a4:	.word	0x00000620
   102a8:	.word	0x000005e4
   102ac:	.word	0x000007bc
   102b0:	.word	0x00000714
   102b4:	.word	0x000004a4
   102b8:	.word	0x00000830
   102bc:	.word	0x000007c8
   102c0:	.word	0x000009cc
   102c4:	.word	0x000005f0
   102c8:	.word	0x00000564
   102cc:	.word	0x0000075c
   102d0:	.word	0x000008d4
   102d4:	.word	0x00000988
   102d8:	.word	0x0000048c
   102dc:	.word	0x00000ad8
   102e0:	.word	0x00000804
   102e4:	.word	0x00000810
   102e8:	.word	0x00000a90
   102ec:	.word	0x000009a0
   102f0:	.word	0x00000b08
   102f4:	.word	0x00000474
   102f8:	.word	0x00000864
   102fc:	.word	0x00000694
   10300:	.word	0x000006fc
   10304:	.word	0x00000768
   10308:	.word	0x000006e4
   1030c:	.word	0x00000648
   10310:	.word	0x00000774
   10314:	.word	0x00000558
   10318:	.word	0x00000750
   1031c:	.word	0x000007ec
   10320:	.word	0x00000a5c
   10324:	.word	0x0000083c
   10328:	.word	0x0000087c
   1032c:	.word	0x000005cc
   10330:	.word	0x000007a4
   10334:	.word	0x000007b0
   10338:	.word	0x00000aa8
   1033c:	.word	0x00000ac0
   10340:	.word	0x00000720
   10344:	.word	0x00000afc
   10348:	.word	0x00000ae4
   1034c:	.word	0x00000480
   10350:	.word	0x000007f8
   10354:	.word	0x00000a10
   10358:	.word	0x00000958
   1035c:	.word	0x000004b0
   10360:	.word	0x00000934
   10364:	.word	0x000008bc
   10368:	.word	0x00000608
   1036c:	.word	0x00000678
   10370:	.word	0x00000424
   10374:	.word	0x00000424
   10378:	.word	0x00000738
   1037c:	.word	0x000006f0
   10380:	.word	0x00000614
   10384:	.word	0x00000708
   10388:	.word	0x000004bc
   1038c:	.word	0xfffffdf8
   10390:	.word	0x0000081c
   10394:	.word	0x000005b0
   10398:	.word	0x00000a9c
   1039c:	.word	0x00000888
   103a0:	.word	0x0000072c
   103a4:	.word	0x00000744
   103a8:	.word	0x000008c8
   103ac:	.word	0x00000894
   103b0:	.word	0x00000904
   103b4:	.word	0x000009d8
   103b8:	.word	0x000008e0
   103bc:	.word	0x000004c8
   103c0:	.word	0x00000b20
   103c4:	.word	0x000003dc
   103c8:	.word	0x000003cc
   103cc:	.word	0x000003dc
   103d0:	.word	0x00000a1c
   103d4:	.word	0x00000414
   103d8:	.word	0x0000062c
   103dc:	.word	0x00000430
   103e0:	.word	0x000006d4
   103e4:	.word	0x0000057c
   103e8:	.word	0x00000548
   103ec:	.word	0x00000684
   103f0:	.word	0x00000404
   103f4:	.word	0x000006b8
   103f8:	.word	0x00000a74
   103fc:	.word	0x00000440
   10400:	.word	0x00000848
   10404:	.word	0x000009bc
   10408:	.word	0x00000404
   1040c:	.word	0x000003cc
   10410:	.word	0x000009ac
   10414:	.word	0x00000414
   10418:	.word	0x00000430
   1041c:	.word	0x00000440
   10420:	.word	0x00000a00
   10424:	.word	0x00000a38
   10428:	.word	0x000005bc
   1042c:	.word	0x00000b58
   10430:	.word	0x00000b40
   10434:	.word	0xfffffdc0
   10438:	.word	0x0000024c
   1043c:	.word	0x00000780
   10440:	ldrb	r0, [ip]
   10444:	ldr	r4, [pc, #2656]	; 10eac <sfbpf_lex+0x100c>
   10448:	ldr	r4, [pc, r4]
   1044c:	strb	r0, [r6]
   10450:	ldr	r0, [pc, #2648]	; 10eb0 <sfbpf_lex+0x1010>
   10454:	ldr	r0, [pc, r0]
   10458:	ldr	r1, [pc, #2644]	; 10eb4 <sfbpf_lex+0x1014>
   1045c:	ldr	r1, [pc, r1]
   10460:	ldr	r2, [r1, r0, lsl #2]
   10464:	ldr	r3, [r2, #44]	; 0x2c
   10468:	cmp	r3, #0
   1046c:	bne	1049c <sfbpf_lex+0x5fc>
   10470:	ldr	r2, [r2, #16]
   10474:	ldr	r3, [pc, #2620]	; 10eb8 <sfbpf_lex+0x1018>
   10478:	add	r3, pc, r3
   1047c:	str	r2, [r3]
   10480:	ldr	r2, [r1, r0, lsl #2]
   10484:	ldr	r3, [pc, #2608]	; 10ebc <sfbpf_lex+0x101c>
   10488:	ldr	r3, [pc, r3]
   1048c:	str	r3, [r2]
   10490:	ldr	r2, [r1, r0, lsl #2]
   10494:	mov	r3, #1
   10498:	str	r3, [r2, #44]	; 0x2c
   1049c:	mov	r7, ip
   104a0:	ldr	r0, [r1, r0, lsl #2]
   104a4:	ldr	r0, [r0, #4]
   104a8:	ldr	r1, [pc, #2576]	; 10ec0 <sfbpf_lex+0x1020>
   104ac:	ldr	r1, [pc, r1]
   104b0:	add	r0, r0, r1
   104b4:	ldr	r1, [pc, #2568]	; 10ec4 <sfbpf_lex+0x1024>
   104b8:	ldr	r1, [pc, r1]
   104bc:	cmp	r1, r0
   104c0:	bls	10534 <sfbpf_lex+0x694>
   104c4:	bl	113ec <yy_get_next_buffer>
   104c8:	cmp	r0, #1
   104cc:	beq	101b4 <sfbpf_lex+0x314>
   104d0:	cmp	r0, #2
   104d4:	bne	105a0 <sfbpf_lex+0x700>
   104d8:	ldr	r0, [pc, #2588]	; 10efc <sfbpf_lex+0x105c>
   104dc:	ldr	r0, [pc, r0]
   104e0:	ldr	r1, [pc, #2584]	; 10f00 <sfbpf_lex+0x1060>
   104e4:	ldr	r1, [pc, r1]
   104e8:	ldr	r0, [r1, r0, lsl #2]
   104ec:	ldr	r0, [r0, #4]
   104f0:	ldr	r1, [pc, #2572]	; 10f04 <sfbpf_lex+0x1064>
   104f4:	ldr	r1, [pc, r1]
   104f8:	add	r6, r0, r1
   104fc:	ldr	r0, [pc, #2564]	; 10f08 <sfbpf_lex+0x1068>
   10500:	add	r0, pc, r0
   10504:	str	r6, [r0]
   10508:	bl	1118c <yy_get_previous_state>
   1050c:	mov	r4, r0
   10510:	ldr	r0, [pc, #2548]	; 10f0c <sfbpf_lex+0x106c>
   10514:	ldr	r0, [pc, r0]
   10518:	str	r0, [sp]
   1051c:	mov	ip, r7
   10520:	ldr	lr, [pc, #2536]	; 10f10 <sfbpf_lex+0x1070>
   10524:	add	lr, pc, lr
   10528:	ldr	r3, [pc, #2532]	; 10f14 <sfbpf_lex+0x1074>
   1052c:	add	r3, pc, r3
   10530:	b	10130 <sfbpf_lex+0x290>
   10534:	mvn	r0, r4
   10538:	add	r0, r0, r6
   1053c:	ldr	r1, [pc, #2436]	; 10ec8 <sfbpf_lex+0x1028>
   10540:	ldr	r1, [pc, r1]
   10544:	add	r6, r1, r0
   10548:	ldr	r0, [pc, #2428]	; 10ecc <sfbpf_lex+0x102c>
   1054c:	add	r0, pc, r0
   10550:	str	r6, [r0]
   10554:	bl	1118c <yy_get_previous_state>
   10558:	mov	r4, r0
   1055c:	bl	1130c <yy_try_NUL_trans>
   10560:	ldr	r1, [pc, #2408]	; 10ed0 <sfbpf_lex+0x1030>
   10564:	ldr	r1, [pc, r1]
   10568:	str	r1, [sp]
   1056c:	cmp	r0, #0
   10570:	mov	ip, r7
   10574:	ldr	lr, [pc, #2392]	; 10ed4 <sfbpf_lex+0x1034>
   10578:	add	lr, pc, lr
   1057c:	ldr	r3, [pc, #2388]	; 10ed8 <sfbpf_lex+0x1038>
   10580:	add	r3, pc, r3
   10584:	beq	10130 <sfbpf_lex+0x290>
   10588:	add	r6, r6, #1
   1058c:	ldr	r1, [pc, #2376]	; 10edc <sfbpf_lex+0x103c>
   10590:	add	r1, pc, r1
   10594:	str	r6, [r1]
   10598:	mov	r4, r0
   1059c:	b	10050 <sfbpf_lex+0x1b0>
   105a0:	cmp	r0, #0
   105a4:	mov	ip, r7
   105a8:	ldr	lr, [pc, #2352]	; 10ee0 <sfbpf_lex+0x1040>
   105ac:	add	lr, pc, lr
   105b0:	ldr	r3, [pc, #2348]	; 10ee4 <sfbpf_lex+0x1044>
   105b4:	add	r3, pc, r3
   105b8:	bne	ffec <sfbpf_lex+0x14c>
   105bc:	b	10008 <sfbpf_lex+0x168>
   105c0:	ldr	r0, [pc, #2208]	; 10e68 <sfbpf_lex+0xfc8>
   105c4:	ldr	r0, [pc, r0]
   105c8:	mov	r1, #1
   105cc:	b	10c74 <sfbpf_lex+0xdd4>
   105d0:	ldr	r0, [pc, #2144]	; 10e38 <sfbpf_lex+0xf98>
   105d4:	ldr	r0, [pc, r0]
   105d8:	mov	r1, #0
   105dc:	b	10c74 <sfbpf_lex+0xdd4>
   105e0:	mov	r0, #328	; 0x148
   105e4:	sub	sp, fp, #28
   105e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   105ec:	movw	r0, #307	; 0x133
   105f0:	sub	sp, fp, #28
   105f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   105f8:	ldr	r0, [pc, #2148]	; 10e64 <sfbpf_lex+0xfc4>
   105fc:	ldr	r0, [pc, r0]
   10600:	mov	r1, #13
   10604:	b	10c74 <sfbpf_lex+0xdd4>
   10608:	ldr	r0, [pc, #2144]	; 10e70 <sfbpf_lex+0xfd0>
   1060c:	ldr	r0, [pc, r0]
   10610:	mov	r1, #4
   10614:	b	10c74 <sfbpf_lex+0xdd4>
   10618:	movw	r0, #357	; 0x165
   1061c:	sub	sp, fp, #28
   10620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10624:	ldr	r0, [pc, #2120]	; 10e74 <sfbpf_lex+0xfd4>
   10628:	ldr	r0, [pc, r0]
   1062c:	mov	r1, #8
   10630:	b	10c74 <sfbpf_lex+0xdd4>
   10634:	ldr	r0, [pc, #2108]	; 10e78 <sfbpf_lex+0xfd8>
   10638:	ldr	r0, [pc, r0]
   1063c:	mov	r1, #16
   10640:	b	10c74 <sfbpf_lex+0xdd4>
   10644:	movw	r0, #330	; 0x14a
   10648:	sub	sp, fp, #28
   1064c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10650:	mov	r0, #320	; 0x140
   10654:	sub	sp, fp, #28
   10658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1065c:	mov	r0, #272	; 0x110
   10660:	sub	sp, fp, #28
   10664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10668:	mov	r0, #364	; 0x16c
   1066c:	sub	sp, fp, #28
   10670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10674:	movw	r0, #351	; 0x15f
   10678:	sub	sp, fp, #28
   1067c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10680:	movw	r0, #305	; 0x131
   10684:	sub	sp, fp, #28
   10688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1068c:	movw	r0, #287	; 0x11f
   10690:	sub	sp, fp, #28
   10694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10698:	movw	r0, #265	; 0x109
   1069c:	sub	sp, fp, #28
   106a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   106a4:	mov	r0, #296	; 0x128
   106a8:	sub	sp, fp, #28
   106ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   106b0:	movw	r0, #362	; 0x16a
   106b4:	sub	sp, fp, #28
   106b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   106bc:	vmov.i32	q8, #0	; 0x00000000
   106c0:	add	r2, sp, #8
   106c4:	add	r0, r2, #8
   106c8:	vst1.64	{d16-d17}, [r0]
   106cc:	mov	r0, #0
   106d0:	str	r0, [sp, #36]	; 0x24
   106d4:	str	r0, [sp, #32]
   106d8:	mov	r0, #10
   106dc:	str	r0, [sp, #12]
   106e0:	mov	r0, #4
   106e4:	str	r0, [sp, #8]
   106e8:	ldr	r0, [pc, #1844]	; 10e24 <sfbpf_lex+0xf84>
   106ec:	ldr	r0, [pc, r0]
   106f0:	add	r3, sp, #4
   106f4:	mov	r1, #0
   106f8:	bl	fa0 <getaddrinfo@plt>
   106fc:	cmp	r0, #0
   10700:	bne	10d60 <sfbpf_lex+0xec0>
   10704:	ldr	r0, [sp, #4]
   10708:	bl	f94 <freeaddrinfo@plt>
   1070c:	ldr	r0, [pc, #1812]	; 10e28 <sfbpf_lex+0xf88>
   10710:	ldr	r0, [pc, r0]
   10714:	bl	1fec <sf_sdup>
   10718:	ldr	r1, [pc, #1804]	; 10e2c <sfbpf_lex+0xf8c>
   1071c:	ldr	r1, [pc, r1]
   10720:	str	r0, [r1]
   10724:	movw	r0, #314	; 0x13a
   10728:	sub	sp, fp, #28
   1072c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10730:	mov	r0, #340	; 0x154
   10734:	sub	sp, fp, #28
   10738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1073c:	ldr	r0, [pc, #1800]	; 10e4c <sfbpf_lex+0xfac>
   10740:	ldr	r0, [pc, r0]
   10744:	mov	r1, #11
   10748:	b	10c74 <sfbpf_lex+0xdd4>
   1074c:	movw	r0, #325	; 0x145
   10750:	sub	sp, fp, #28
   10754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10758:	movw	r0, #301	; 0x12d
   1075c:	sub	sp, fp, #28
   10760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10764:	movw	r0, #335	; 0x14f
   10768:	sub	sp, fp, #28
   1076c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10770:	ldr	r0, [pc, #1744]	; 10e48 <sfbpf_lex+0xfa8>
   10774:	ldr	r0, [pc, r0]
   10778:	mov	r1, #10
   1077c:	b	10c74 <sfbpf_lex+0xdd4>
   10780:	movw	r0, #279	; 0x117
   10784:	sub	sp, fp, #28
   10788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1078c:	movw	r0, #278	; 0x116
   10790:	sub	sp, fp, #28
   10794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10798:	movw	r0, #258	; 0x102
   1079c:	sub	sp, fp, #28
   107a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107a4:	mov	r0, #308	; 0x134
   107a8:	sub	sp, fp, #28
   107ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107b0:	ldr	r0, [pc, #1744]	; 10e88 <sfbpf_lex+0xfe8>
   107b4:	ldr	r0, [pc, r0]
   107b8:	add	r0, r0, #1
   107bc:	b	10c34 <sfbpf_lex+0xd94>
   107c0:	movw	r0, #349	; 0x15d
   107c4:	sub	sp, fp, #28
   107c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107cc:	mov	r0, #276	; 0x114
   107d0:	sub	sp, fp, #28
   107d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107d8:	movw	r0, #262	; 0x106
   107dc:	sub	sp, fp, #28
   107e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107e4:	mov	r0, #300	; 0x12c
   107e8:	sub	sp, fp, #28
   107ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107f0:	movw	r0, #274	; 0x112
   107f4:	sub	sp, fp, #28
   107f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107fc:	movw	r0, #299	; 0x12b
   10800:	sub	sp, fp, #28
   10804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10808:	mov	r0, #360	; 0x168
   1080c:	sub	sp, fp, #28
   10810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10814:	mov	r0, #260	; 0x104
   10818:	sub	sp, fp, #28
   1081c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10820:	ldr	r0, [pc, #1560]	; 10e40 <sfbpf_lex+0xfa0>
   10824:	ldr	r0, [pc, r0]
   10828:	mov	r1, #5
   1082c:	b	10c74 <sfbpf_lex+0xdd4>
   10830:	movw	r0, #283	; 0x11b
   10834:	sub	sp, fp, #28
   10838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1083c:	movw	r0, #323	; 0x143
   10840:	sub	sp, fp, #28
   10844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10848:	mov	r0, #280	; 0x118
   1084c:	sub	sp, fp, #28
   10850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10854:	mov	r0, #336	; 0x150
   10858:	sub	sp, fp, #28
   1085c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10860:	movw	r0, #329	; 0x149
   10864:	sub	sp, fp, #28
   10868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1086c:	mov	r0, #356	; 0x164
   10870:	sub	sp, fp, #28
   10874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10878:	ldr	r0, [pc, #1488]	; 10e50 <sfbpf_lex+0xfb0>
   1087c:	ldr	r0, [pc, r0]
   10880:	mov	r1, #12
   10884:	b	10c74 <sfbpf_lex+0xdd4>
   10888:	mov	r0, #33	; 0x21
   1088c:	sub	sp, fp, #28
   10890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10894:	movw	r0, #338	; 0x152
   10898:	sub	sp, fp, #28
   1089c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108a0:	movw	r0, #275	; 0x113
   108a4:	sub	sp, fp, #28
   108a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108ac:	ldr	r0, [pc, #1440]	; 10e54 <sfbpf_lex+0xfb4>
   108b0:	ldr	r0, [pc, r0]
   108b4:	mov	r1, #14
   108b8:	b	10c74 <sfbpf_lex+0xdd4>
   108bc:	movw	r0, #337	; 0x151
   108c0:	sub	sp, fp, #28
   108c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108c8:	ldr	r0, [pc, #1396]	; 10e44 <sfbpf_lex+0xfa4>
   108cc:	ldr	r0, [pc, r0]
   108d0:	mov	r1, #9
   108d4:	b	10c74 <sfbpf_lex+0xdd4>
   108d8:	movw	r0, #293	; 0x125
   108dc:	sub	sp, fp, #28
   108e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108e4:	movw	r0, #359	; 0x167
   108e8:	sub	sp, fp, #28
   108ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108f0:	movw	r0, #318	; 0x13e
   108f4:	sub	sp, fp, #28
   108f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108fc:	movw	r0, #361	; 0x169
   10900:	sub	sp, fp, #28
   10904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10908:	mov	r0, #264	; 0x108
   1090c:	sub	sp, fp, #28
   10910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10914:	movw	r0, #346	; 0x15a
   10918:	sub	sp, fp, #28
   1091c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10920:	mov	r0, #61	; 0x3d
   10924:	sub	sp, fp, #28
   10928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1092c:	movw	r0, #358	; 0x166
   10930:	sub	sp, fp, #28
   10934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10938:	mov	r0, #316	; 0x13c
   1093c:	sub	sp, fp, #28
   10940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10944:	movw	r0, #326	; 0x146
   10948:	sub	sp, fp, #28
   1094c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10950:	movw	r0, #302	; 0x12e
   10954:	sub	sp, fp, #28
   10958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1095c:	mov	r0, #292	; 0x124
   10960:	sub	sp, fp, #28
   10964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10968:	mov	r0, #324	; 0x144
   1096c:	sub	sp, fp, #28
   10970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10974:	mov	r0, #0
   10978:	sub	sp, fp, #28
   1097c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10980:	movw	r0, #277	; 0x115
   10984:	sub	sp, fp, #28
   10988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1098c:	movw	r0, #281	; 0x119
   10990:	sub	sp, fp, #28
   10994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10998:	movw	r0, #350	; 0x15e
   1099c:	sub	sp, fp, #28
   109a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109a4:	movw	r0, #347	; 0x15b
   109a8:	sub	sp, fp, #28
   109ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109b0:	movw	r0, #263	; 0x107
   109b4:	sub	sp, fp, #28
   109b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109bc:	movw	r0, #269	; 0x10d
   109c0:	sub	sp, fp, #28
   109c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109c8:	movw	r0, #327	; 0x147
   109cc:	sub	sp, fp, #28
   109d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109d4:	movw	r0, #322	; 0x142
   109d8:	sub	sp, fp, #28
   109dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109e0:	movw	r0, #341	; 0x155
   109e4:	sub	sp, fp, #28
   109e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109ec:	mov	r0, #352	; 0x160
   109f0:	sub	sp, fp, #28
   109f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109f8:	movw	r0, #266	; 0x10a
   109fc:	sub	sp, fp, #28
   10a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a04:	movw	r0, #267	; 0x10b
   10a08:	sub	sp, fp, #28
   10a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a10:	ldr	r0, [pc, #1000]	; 10e00 <sfbpf_lex+0xf60>
   10a14:	ldr	r0, [pc, r0]
   10a18:	ldrb	r0, [r0]
   10a1c:	sub	sp, fp, #28
   10a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a24:	mov	r0, #268	; 0x10c
   10a28:	sub	sp, fp, #28
   10a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a30:	movw	r0, #343	; 0x157
   10a34:	sub	sp, fp, #28
   10a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a3c:	ldr	r0, [pc, #1048]	; 10e5c <sfbpf_lex+0xfbc>
   10a40:	ldr	r0, [pc, r0]
   10a44:	mov	r1, #17
   10a48:	b	10c74 <sfbpf_lex+0xdd4>
   10a4c:	mov	r0, #284	; 0x11c
   10a50:	sub	sp, fp, #28
   10a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a58:	movw	r0, #363	; 0x16b
   10a5c:	sub	sp, fp, #28
   10a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a64:	movw	r0, #321	; 0x141
   10a68:	sub	sp, fp, #28
   10a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a70:	mov	r0, #344	; 0x158
   10a74:	sub	sp, fp, #28
   10a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a7c:	movw	r0, #310	; 0x136
   10a80:	sub	sp, fp, #28
   10a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a88:	ldr	r0, [pc, #884]	; 10e04 <sfbpf_lex+0xf64>
   10a8c:	ldr	r0, [pc, r0]
   10a90:	add	r0, r0, #1
   10a94:	bl	b828 <pcap_ether_aton>
   10a98:	ldr	r1, [pc, #872]	; 10e08 <sfbpf_lex+0xf68>
   10a9c:	ldr	r1, [pc, r1]
   10aa0:	str	r0, [r1]
   10aa4:	movw	r0, #315	; 0x13b
   10aa8:	sub	sp, fp, #28
   10aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ab0:	movw	r0, #298	; 0x12a
   10ab4:	sub	sp, fp, #28
   10ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10abc:	movw	r0, #317	; 0x13d
   10ac0:	sub	sp, fp, #28
   10ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ac8:	movw	r0, #303	; 0x12f
   10acc:	sub	sp, fp, #28
   10ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ad4:	ldr	r0, [pc, #832]	; 10e1c <sfbpf_lex+0xf7c>
   10ad8:	ldr	r0, [pc, r0]
   10adc:	bl	1fec <sf_sdup>
   10ae0:	ldr	r1, [pc, #824]	; 10e20 <sfbpf_lex+0xf80>
   10ae4:	ldr	r1, [pc, r1]
   10ae8:	str	r0, [r1]
   10aec:	movw	r0, #313	; 0x139
   10af0:	sub	sp, fp, #28
   10af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10af8:	ldr	r0, [pc, #780]	; 10e0c <sfbpf_lex+0xf6c>
   10afc:	ldr	r0, [pc, r0]
   10b00:	bl	b828 <pcap_ether_aton>
   10b04:	ldr	r1, [pc, #772]	; 10e10 <sfbpf_lex+0xf70>
   10b08:	ldr	r1, [pc, r1]
   10b0c:	str	r0, [r1]
   10b10:	mov	r0, #312	; 0x138
   10b14:	sub	sp, fp, #28
   10b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b1c:	movw	r0, #285	; 0x11d
   10b20:	sub	sp, fp, #28
   10b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b28:	movw	r0, #297	; 0x129
   10b2c:	sub	sp, fp, #28
   10b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b34:	movw	r0, #333	; 0x14d
   10b38:	sub	sp, fp, #28
   10b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b40:	movw	r0, #259	; 0x103
   10b44:	sub	sp, fp, #28
   10b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b4c:	movw	r0, #295	; 0x127
   10b50:	sub	sp, fp, #28
   10b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b58:	movw	r0, #273	; 0x111
   10b5c:	sub	sp, fp, #28
   10b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b64:	movw	r0, #271	; 0x10f
   10b68:	sub	sp, fp, #28
   10b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b70:	movw	r0, #334	; 0x14e
   10b74:	sub	sp, fp, #28
   10b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b7c:	mov	r0, #304	; 0x130
   10b80:	sub	sp, fp, #28
   10b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b88:	movw	r0, #282	; 0x11a
   10b8c:	sub	sp, fp, #28
   10b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b94:	movw	r0, #289	; 0x121
   10b98:	sub	sp, fp, #28
   10b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ba0:	ldr	r0, [pc, #708]	; 10e6c <sfbpf_lex+0xfcc>
   10ba4:	ldr	r0, [pc, r0]
   10ba8:	mov	r1, #2
   10bac:	b	10c74 <sfbpf_lex+0xdd4>
   10bb0:	ldr	r0, [pc, #680]	; 10e60 <sfbpf_lex+0xfc0>
   10bb4:	ldr	r0, [pc, r0]
   10bb8:	mov	r1, #18
   10bbc:	b	10c74 <sfbpf_lex+0xdd4>
   10bc0:	movw	r0, #261	; 0x105
   10bc4:	sub	sp, fp, #28
   10bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bcc:	ldr	r0, [pc, #576]	; 10e14 <sfbpf_lex+0xf74>
   10bd0:	ldr	r0, [pc, r0]
   10bd4:	bl	11110 <stoi>
   10bd8:	ldr	r1, [pc, #568]	; 10e18 <sfbpf_lex+0xf78>
   10bdc:	ldr	r1, [pc, r1]
   10be0:	str	r0, [r1]
   10be4:	b	10c78 <sfbpf_lex+0xdd8>
   10be8:	movw	r0, #355	; 0x163
   10bec:	sub	sp, fp, #28
   10bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bf4:	ldr	r0, [pc, #640]	; 10e7c <sfbpf_lex+0xfdc>
   10bf8:	ldr	r0, [pc, r0]
   10bfc:	mov	r1, #32
   10c00:	b	10c74 <sfbpf_lex+0xdd4>
   10c04:	movw	r0, #294	; 0x126
   10c08:	sub	sp, fp, #28
   10c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c10:	ldr	r0, [pc, #548]	; 10e3c <sfbpf_lex+0xf9c>
   10c14:	ldr	r0, [pc, r0]
   10c18:	mov	r1, #3
   10c1c:	b	10c74 <sfbpf_lex+0xdd4>
   10c20:	movw	r0, #339	; 0x153
   10c24:	sub	sp, fp, #28
   10c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c2c:	ldr	r0, [pc, #588]	; 10e80 <sfbpf_lex+0xfe0>
   10c30:	ldr	r0, [pc, r0]
   10c34:	bl	1fec <sf_sdup>
   10c38:	ldr	r1, [pc, #580]	; 10e84 <sfbpf_lex+0xfe4>
   10c3c:	ldr	r1, [pc, r1]
   10c40:	str	r0, [r1]
   10c44:	movw	r0, #311	; 0x137
   10c48:	sub	sp, fp, #28
   10c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c50:	movw	r0, #342	; 0x156
   10c54:	sub	sp, fp, #28
   10c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c5c:	movw	r0, #319	; 0x13f
   10c60:	sub	sp, fp, #28
   10c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c68:	ldr	r0, [pc, #488]	; 10e58 <sfbpf_lex+0xfb8>
   10c6c:	ldr	r0, [pc, r0]
   10c70:	mov	r1, #15
   10c74:	str	r1, [r0]
   10c78:	movw	r0, #291	; 0x123
   10c7c:	sub	sp, fp, #28
   10c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c84:	movw	r0, #270	; 0x10e
   10c88:	sub	sp, fp, #28
   10c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c90:	movw	r0, #309	; 0x135
   10c94:	sub	sp, fp, #28
   10c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c9c:	mov	r0, #348	; 0x15c
   10ca0:	sub	sp, fp, #28
   10ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ca8:	mov	r0, #332	; 0x14c
   10cac:	sub	sp, fp, #28
   10cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cb4:	movw	r0, #345	; 0x159
   10cb8:	sub	sp, fp, #28
   10cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cc0:	movw	r0, #286	; 0x11e
   10cc4:	sub	sp, fp, #28
   10cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ccc:	movw	r0, #306	; 0x132
   10cd0:	sub	sp, fp, #28
   10cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cd8:	movw	r0, #354	; 0x162
   10cdc:	sub	sp, fp, #28
   10ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ce4:	movw	r0, #331	; 0x14b
   10ce8:	sub	sp, fp, #28
   10cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cf0:	movw	r0, #353	; 0x161
   10cf4:	sub	sp, fp, #28
   10cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cfc:	movw	r0, #290	; 0x122
   10d00:	sub	sp, fp, #28
   10d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d08:	mov	r0, #288	; 0x120
   10d0c:	sub	sp, fp, #28
   10d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d14:	ldr	r1, [pc, #276]	; 10e30 <sfbpf_lex+0xf90>
   10d18:	ldr	r1, [pc, r1]
   10d1c:	ldr	r0, [pc, #272]	; 10e34 <sfbpf_lex+0xf94>
   10d20:	add	r0, pc, r0
   10d24:	bl	1f9c <sf_bpf_error>
   10d28:	ldr	r0, [pc, #504]	; 10f28 <sfbpf_lex+0x1088>
   10d2c:	add	r0, pc, r0
   10d30:	bl	119e8 <yy_fatal_error>
   10d34:	ldr	r0, [pc, #344]	; 10e94 <sfbpf_lex+0xff4>
   10d38:	ldr	r0, [pc, r0]
   10d3c:	ldrb	r1, [r0]
   10d40:	ldr	r0, [pc, #336]	; 10e98 <sfbpf_lex+0xff8>
   10d44:	add	r0, pc, r0
   10d48:	bl	1f9c <sf_bpf_error>
   10d4c:	ldr	r1, [pc, #312]	; 10e8c <sfbpf_lex+0xfec>
   10d50:	ldr	r1, [pc, r1]
   10d54:	ldr	r0, [pc, #308]	; 10e90 <sfbpf_lex+0xff0>
   10d58:	add	r0, pc, r0
   10d5c:	bl	1f9c <sf_bpf_error>
   10d60:	ldr	r1, [pc, #452]	; 10f2c <sfbpf_lex+0x108c>
   10d64:	ldr	r1, [pc, r1]
   10d68:	ldr	r0, [pc, #448]	; 10f30 <sfbpf_lex+0x1090>
   10d6c:	add	r0, pc, r0
   10d70:	bl	1f9c <sf_bpf_error>
   10d74:	.word	0x00020c38
   10d78:	.word	0x00020c20
   10d7c:	.word	0x00020bfc
   10d80:	.word	0x000201c8
   10d84:	.word	0x00020be0
   10d88:	.word	0x00020bd8
   10d8c:	.word	0x000201a4
   10d90:	.word	0x00020bbc
   10d94:	.word	0x00020bc0
   10d98:	.word	0x00020bb4
   10d9c:	.word	0x00020b84
   10da0:	.word	0x00020b88
   10da4:	.word	0x00020b84
   10da8:	.word	0x00020b7c
   10dac:	.word	0x00020b64
   10db0:	.word	0x00004f8c
   10db4:	.word	0x000095f6
   10db8:	.word	0x00005bb0
   10dbc:	.word	0x0000a4b2
   10dc0:	.word	0x00020b04
   10dc4:	.word	0x00004fc0
   10dc8:	.word	0x00020a90
   10dcc:	.word	0x00020a80
   10dd0:	.word	0x0000b26e
   10dd4:	.word	0x00004e34
   10dd8:	.word	0x0000b26c
   10ddc:	.word	0x00004ee8
   10de0:	.word	0x000209b4
   10de4:	.word	0x00004ec8
   10de8:	.word	0x000209a0
   10dec:	.word	0x000209e4
   10df0:	.word	0x000209cc
   10df4:	.word	0x0002095c
   10df8:	.word	0x000209dc
   10dfc:	.word	0x000209d8
   10e00:	.word	0x0002013c
   10e04:	.word	0x000200c4
   10e08:	.word	0x0001f624
   10e0c:	.word	0x00020054
   10e10:	.word	0x0001f5b8
   10e14:	.word	0x0001ff80
   10e18:	.word	0x0001f4e4
   10e1c:	.word	0x00020078
   10e20:	.word	0x0001f5dc
   10e24:	.word	0x00020464
   10e28:	.word	0x00020440
   10e2c:	.word	0x0001f9a4
   10e30:	.word	0x0001fe38
   10e34:	.word	0x0000e090
   10e38:	.word	0x0001faec
   10e3c:	.word	0x0001f4ac
   10e40:	.word	0x0001f89c
   10e44:	.word	0x0001f7f4
   10e48:	.word	0x0001f94c
   10e4c:	.word	0x0001f980
   10e50:	.word	0x0001f844
   10e54:	.word	0x0001f810
   10e58:	.word	0x0001f454
   10e5c:	.word	0x0001f680
   10e60:	.word	0x0001f50c
   10e64:	.word	0x0001fac4
   10e68:	.word	0x0001fafc
   10e6c:	.word	0x0001f51c
   10e70:	.word	0x0001fab4
   10e74:	.word	0x0001fa98
   10e78:	.word	0x0001fa88
   10e7c:	.word	0x0001f4c8
   10e80:	.word	0x0001ff20
   10e84:	.word	0x0001f484
   10e88:	.word	0x0002039c
   10e8c:	.word	0x0001fe00
   10e90:	.word	0x0000e072
   10e94:	.word	0x0001fe18
   10e98:	.word	0x0000e098
   10e9c:	.word	0x00020b28
   10ea0:	.word	0x00020b8c
   10ea4:	.word	0x00020b88
   10ea8:	.word	0x00004f3c
   10eac:	.word	0x00020708
   10eb0:	.word	0x000206a0
   10eb4:	.word	0x00020694
   10eb8:	.word	0x00020690
   10ebc:	.word	0x00020654
   10ec0:	.word	0x0002065c
   10ec4:	.word	0x00020640
   10ec8:	.word	0x00020610
   10ecc:	.word	0x000205ac
   10ed0:	.word	0x000205ec
   10ed4:	.word	0x00020574
   10ed8:	.word	0x0000499c
   10edc:	.word	0x00020568
   10ee0:	.word	0x00020540
   10ee4:	.word	0x00004968
   10ee8:	.word	0x00020b3c
   10eec:	.word	0x00020ad8
   10ef0:	.word	0x00004eec
   10ef4:	.word	0x00020ab4
   10ef8:	.word	0x00020b08
   10efc:	.word	0x00020618
   10f00:	.word	0x0002060c
   10f04:	.word	0x00020614
   10f08:	.word	0x000205f8
   10f0c:	.word	0x0002063c
   10f10:	.word	0x000205c8
   10f14:	.word	0x000049f0
   10f18:	.word	0x00020998
   10f1c:	.word	0x00020938
   10f20:	.word	0x00020918
   10f24:	.word	0x00004d40
   10f28:	.word	0x0000e0c2
   10f2c:	.word	0x0001fdec
   10f30:	.word	0x0000e02e

00010f34 <sfbpf_ensure_buffer_stack>:
   10f34:	push	{r4, sl, fp, lr}
   10f38:	add	fp, sp, #8
   10f3c:	ldr	r0, [pc, #184]	; 10ffc <sfbpf_ensure_buffer_stack+0xc8>
   10f40:	ldr	r0, [pc, r0]
   10f44:	cmp	r0, #0
   10f48:	beq	10fb0 <sfbpf_ensure_buffer_stack+0x7c>
   10f4c:	ldr	r1, [pc, #184]	; 1100c <sfbpf_ensure_buffer_stack+0xd8>
   10f50:	ldr	r1, [pc, r1]
   10f54:	sub	r2, r1, #1
   10f58:	ldr	r3, [pc, #176]	; 11010 <sfbpf_ensure_buffer_stack+0xdc>
   10f5c:	ldr	r3, [pc, r3]
   10f60:	cmp	r3, r2
   10f64:	popcc	{r4, sl, fp, pc}
   10f68:	add	r4, r1, #8
   10f6c:	lsl	r1, r4, #2
   10f70:	bl	12068 <sfbpf_realloc>
   10f74:	ldr	r1, [pc, #152]	; 11014 <sfbpf_ensure_buffer_stack+0xe0>
   10f78:	add	r1, pc, r1
   10f7c:	str	r0, [r1]
   10f80:	cmp	r0, #0
   10f84:	beq	10ff0 <sfbpf_ensure_buffer_stack+0xbc>
   10f88:	ldr	r1, [pc, #136]	; 11018 <sfbpf_ensure_buffer_stack+0xe4>
   10f8c:	ldr	r1, [pc, r1]
   10f90:	vmov.i32	q8, #0	; 0x00000000
   10f94:	add	r0, r0, r1, lsl #2
   10f98:	vst1.32	{d16-d17}, [r0]!
   10f9c:	vst1.32	{d16-d17}, [r0]
   10fa0:	ldr	r0, [pc, #116]	; 1101c <sfbpf_ensure_buffer_stack+0xe8>
   10fa4:	add	r0, pc, r0
   10fa8:	str	r4, [r0]
   10fac:	pop	{r4, sl, fp, pc}
   10fb0:	mov	r0, #4
   10fb4:	bl	11b78 <sfbpf_alloc>
   10fb8:	ldr	r1, [pc, #64]	; 11000 <sfbpf_ensure_buffer_stack+0xcc>
   10fbc:	add	r1, pc, r1
   10fc0:	str	r0, [r1]
   10fc4:	cmp	r0, #0
   10fc8:	movne	r1, #0
   10fcc:	strne	r1, [r0]
   10fd0:	ldrne	r0, [pc, #44]	; 11004 <sfbpf_ensure_buffer_stack+0xd0>
   10fd4:	addne	r0, pc, r0
   10fd8:	strne	r1, [r0]
   10fdc:	ldrne	r0, [pc, #36]	; 11008 <sfbpf_ensure_buffer_stack+0xd4>
   10fe0:	addne	r0, pc, r0
   10fe4:	movne	r1, #1
   10fe8:	strne	r1, [r0]
   10fec:	popne	{r4, sl, fp, pc}
   10ff0:	ldr	r0, [pc, #40]	; 11020 <sfbpf_ensure_buffer_stack+0xec>
   10ff4:	add	r0, pc, r0
   10ff8:	bl	119e8 <yy_fatal_error>
   10ffc:	.word	0x0001fbb0
   11000:	.word	0x0001fb34
   11004:	.word	0x0001fb20
   11008:	.word	0x0001fb30
   1100c:	.word	0x0001fbc0
   11010:	.word	0x0001fb98
   11014:	.word	0x0001fb78
   11018:	.word	0x0001fb84
   1101c:	.word	0x0001fb6c
   11020:	.word	0x0000df79

00011024 <sfbpf__create_buffer>:
   11024:	push	{r4, r5, r6, sl, fp, lr}
   11028:	add	fp, sp, #16
   1102c:	mov	r6, r1
   11030:	mov	r4, r0
   11034:	mov	r0, #48	; 0x30
   11038:	bl	11b78 <sfbpf_alloc>
   1103c:	cmp	r0, #0
   11040:	beq	1107c <sfbpf__create_buffer+0x58>
   11044:	mov	r5, r0
   11048:	str	r6, [r0, #12]
   1104c:	add	r0, r6, #2
   11050:	bl	11b78 <sfbpf_alloc>
   11054:	str	r0, [r5, #4]
   11058:	cmp	r0, #0
   1105c:	beq	1107c <sfbpf__create_buffer+0x58>
   11060:	mov	r0, #1
   11064:	str	r0, [r5, #20]
   11068:	mov	r0, r5
   1106c:	mov	r1, r4
   11070:	bl	11a1c <sfbpf__init_buffer>
   11074:	mov	r0, r5
   11078:	pop	{r4, r5, r6, sl, fp, pc}
   1107c:	ldr	r0, [pc, #4]	; 11088 <sfbpf__create_buffer+0x64>
   11080:	add	r0, pc, r0
   11084:	bl	119e8 <yy_fatal_error>
   11088:	.word	0x0000dda1

0001108c <sfbpf__load_buffer_state>:
   1108c:	ldr	r0, [pc, #96]	; 110f4 <sfbpf__load_buffer_state+0x68>
   11090:	ldr	r0, [pc, r0]
   11094:	ldr	r1, [pc, #92]	; 110f8 <sfbpf__load_buffer_state+0x6c>
   11098:	ldr	r1, [pc, r1]
   1109c:	ldr	r2, [r1, r0, lsl #2]
   110a0:	ldr	ip, [r2, #16]
   110a4:	ldr	r3, [pc, #80]	; 110fc <sfbpf__load_buffer_state+0x70>
   110a8:	add	r3, pc, r3
   110ac:	str	ip, [r3]
   110b0:	ldr	r2, [r2, #8]
   110b4:	ldr	r3, [pc, #68]	; 11100 <sfbpf__load_buffer_state+0x74>
   110b8:	add	r3, pc, r3
   110bc:	str	r2, [r3]
   110c0:	ldr	r3, [pc, #60]	; 11104 <sfbpf__load_buffer_state+0x78>
   110c4:	add	r3, pc, r3
   110c8:	str	r2, [r3]
   110cc:	ldr	r0, [r1, r0, lsl #2]
   110d0:	ldr	r0, [r0]
   110d4:	ldr	r1, [pc, #44]	; 11108 <sfbpf__load_buffer_state+0x7c>
   110d8:	add	r1, pc, r1
   110dc:	str	r0, [r1]
   110e0:	ldrb	r0, [r2]
   110e4:	ldr	r1, [pc, #32]	; 1110c <sfbpf__load_buffer_state+0x80>
   110e8:	add	r1, pc, r1
   110ec:	strb	r0, [r1]
   110f0:	bx	lr
   110f4:	.word	0x0001fa64
   110f8:	.word	0x0001fa58
   110fc:	.word	0x0001fa60
   11100:	.word	0x0001fa98
   11104:	.word	0x0001fa34
   11108:	.word	0x0001fa04
   1110c:	.word	0x0001fa14

00011110 <stoi>:
   11110:	push	{r4, r5, r6, sl, fp, lr}
   11114:	add	fp, sp, #16
   11118:	ldrb	r1, [r0]
   1111c:	cmp	r1, #48	; 0x30
   11120:	bne	11144 <stoi+0x34>
   11124:	mov	r2, r0
   11128:	ldrb	r1, [r2, #1]!
   1112c:	orr	r3, r1, #32
   11130:	cmp	r3, #120	; 0x78
   11134:	bne	1114c <stoi+0x3c>
   11138:	ldrb	r1, [r0, #2]!
   1113c:	mov	r5, #16
   11140:	b	11154 <stoi+0x44>
   11144:	mov	r5, #10
   11148:	b	11154 <stoi+0x44>
   1114c:	mov	r5, #8
   11150:	mov	r0, r2
   11154:	cmp	r1, #0
   11158:	moveq	r4, #0
   1115c:	moveq	r0, r4
   11160:	popeq	{r4, r5, r6, sl, fp, pc}
   11164:	add	r6, r0, #1
   11168:	mov	r4, #0
   1116c:	uxtb	r0, r1
   11170:	bl	120c8 <xdtoi>
   11174:	mla	r4, r4, r5, r0
   11178:	ldrb	r1, [r6], #1
   1117c:	cmp	r1, #0
   11180:	bne	1116c <stoi+0x5c>
   11184:	mov	r0, r4
   11188:	pop	{r4, r5, r6, sl, fp, pc}

0001118c <yy_get_previous_state>:
   1118c:	ldr	r0, [pc, #320]	; 112d4 <yy_get_previous_state+0x148>
   11190:	add	r0, pc, r0
   11194:	ldrb	r0, [r0]
   11198:	ldr	r1, [pc, #312]	; 112d8 <yy_get_previous_state+0x14c>
   1119c:	ldr	r1, [pc, r1]
   111a0:	ldr	r2, [pc, #308]	; 112dc <yy_get_previous_state+0x150>
   111a4:	ldr	r2, [pc, r2]
   111a8:	cmp	r1, r2
   111ac:	bxcs	lr
   111b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111b4:	add	fp, sp, #28
   111b8:	sub	sp, sp, #4
   111bc:	ldr	r7, [pc, #284]	; 112e0 <yy_get_previous_state+0x154>
   111c0:	ldr	r7, [pc, r7]
   111c4:	ldr	ip, [pc, #280]	; 112e4 <yy_get_previous_state+0x158>
   111c8:	add	ip, pc, ip
   111cc:	ldr	r3, [pc, #276]	; 112e8 <yy_get_previous_state+0x15c>
   111d0:	add	r3, pc, r3
   111d4:	ldr	r2, [pc, #272]	; 112ec <yy_get_previous_state+0x160>
   111d8:	add	r2, pc, r2
   111dc:	ldr	r9, [pc, #268]	; 112f0 <yy_get_previous_state+0x164>
   111e0:	add	r9, pc, r9
   111e4:	ldr	r5, [pc, #264]	; 112f4 <yy_get_previous_state+0x168>
   111e8:	add	r5, pc, r5
   111ec:	movw	r6, #1434	; 0x59a
   111f0:	ldr	lr, [pc, #256]	; 112f8 <yy_get_previous_state+0x16c>
   111f4:	add	lr, pc, lr
   111f8:	str	r7, [sp]
   111fc:	ldrb	r4, [r1]
   11200:	cmp	r4, #0
   11204:	beq	11220 <yy_get_previous_state+0x94>
   11208:	mov	sl, r7
   1120c:	ldr	r7, [pc, #232]	; 112fc <yy_get_previous_state+0x170>
   11210:	add	r7, pc, r7
   11214:	ldrb	r8, [r7, r4]
   11218:	mov	r7, sl
   1121c:	b	11224 <yy_get_previous_state+0x98>
   11220:	mov	r8, #1
   11224:	add	r4, ip, r0, lsl #1
   11228:	ldrh	r4, [r4]
   1122c:	cmp	r4, #0
   11230:	beq	1124c <yy_get_previous_state+0xc0>
   11234:	ldr	r4, [pc, #196]	; 11300 <yy_get_previous_state+0x174>
   11238:	add	r4, pc, r4
   1123c:	str	r1, [r4]
   11240:	ldr	r4, [pc, #188]	; 11304 <yy_get_previous_state+0x178>
   11244:	add	r4, pc, r4
   11248:	str	r0, [r4]
   1124c:	add	r4, r3, r0, lsl #1
   11250:	ldrsh	r4, [r4]
   11254:	add	sl, r4, r8
   11258:	add	r4, r2, sl, lsl #1
   1125c:	ldrsh	r4, [r4]
   11260:	cmp	r0, r4
   11264:	beq	112b4 <yy_get_previous_state+0x128>
   11268:	mov	r7, ip
   1126c:	mov	r9, r8
   11270:	add	r0, r5, r0, lsl #1
   11274:	ldrsh	r0, [r0]
   11278:	cmp	r0, r6
   1127c:	ldrbge	r9, [lr, r8]
   11280:	add	r4, r3, r0, lsl #1
   11284:	ldrsh	r4, [r4]
   11288:	uxtab	sl, r4, r9
   1128c:	add	r4, r2, sl, lsl #1
   11290:	ldrh	r4, [r4]
   11294:	uxtb	r8, r9
   11298:	uxth	ip, r0
   1129c:	cmp	ip, r4
   112a0:	bne	11270 <yy_get_previous_state+0xe4>
   112a4:	mov	ip, r7
   112a8:	ldr	r7, [sp]
   112ac:	ldr	r9, [pc, #84]	; 11308 <yy_get_previous_state+0x17c>
   112b0:	add	r9, pc, r9
   112b4:	add	r0, r9, sl, lsl #1
   112b8:	ldrsh	r0, [r0]
   112bc:	add	r1, r1, #1
   112c0:	cmp	r1, r7
   112c4:	bcc	111fc <yy_get_previous_state+0x70>
   112c8:	sub	sp, fp, #28
   112cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112d0:	bx	lr
   112d4:	.word	0x0001f95c
   112d8:	.word	0x0001f9b4
   112dc:	.word	0x0001f954
   112e0:	.word	0x0001f938
   112e4:	.word	0x00003e54
   112e8:	.word	0x000083be
   112ec:	.word	0x00004978
   112f0:	.word	0x0000a17c
   112f4:	.word	0x00009272
   112f8:	.word	0x0000a132
   112fc:	.word	0x00003d0c
   11300:	.word	0x0001f8cc
   11304:	.word	0x0001f8bc
   11308:	.word	0x0000a0ac

0001130c <yy_try_NUL_trans>:
   1130c:	ldr	r1, [pc, #184]	; 113cc <yy_try_NUL_trans+0xc0>
   11310:	add	r1, pc, r1
   11314:	add	r1, r1, r0, lsl #1
   11318:	ldrh	r1, [r1]
   1131c:	cmp	r1, #0
   11320:	beq	11344 <yy_try_NUL_trans+0x38>
   11324:	ldr	r1, [pc, #164]	; 113d0 <yy_try_NUL_trans+0xc4>
   11328:	add	r1, pc, r1
   1132c:	str	r0, [r1]
   11330:	ldr	r1, [pc, #156]	; 113d4 <yy_try_NUL_trans+0xc8>
   11334:	ldr	r1, [pc, r1]
   11338:	ldr	r2, [pc, #152]	; 113d8 <yy_try_NUL_trans+0xcc>
   1133c:	add	r2, pc, r2
   11340:	str	r1, [r2]
   11344:	push	{r4, sl, fp, lr}
   11348:	add	fp, sp, #8
   1134c:	ldr	ip, [pc, #136]	; 113dc <yy_try_NUL_trans+0xd0>
   11350:	add	ip, pc, ip
   11354:	add	r1, ip, r0, lsl #1
   11358:	ldrsh	r1, [r1]
   1135c:	add	r3, r1, #1
   11360:	ldr	lr, [pc, #120]	; 113e0 <yy_try_NUL_trans+0xd4>
   11364:	add	lr, pc, lr
   11368:	add	r1, lr, r3, lsl #1
   1136c:	ldrsh	r1, [r1]
   11370:	cmp	r1, r0
   11374:	beq	113a8 <yy_try_NUL_trans+0x9c>
   11378:	ldr	r1, [pc, #100]	; 113e4 <yy_try_NUL_trans+0xd8>
   1137c:	add	r1, pc, r1
   11380:	add	r0, r1, r0, lsl #1
   11384:	ldrh	r2, [r0]
   11388:	sxth	r0, r2
   1138c:	add	r3, ip, r0, lsl #1
   11390:	ldrsh	r3, [r3]
   11394:	add	r3, r3, #1
   11398:	add	r4, lr, r3, lsl #1
   1139c:	ldrh	r4, [r4]
   113a0:	cmp	r2, r4
   113a4:	bne	11380 <yy_try_NUL_trans+0x74>
   113a8:	ldr	r0, [pc, #56]	; 113e8 <yy_try_NUL_trans+0xdc>
   113ac:	add	r0, pc, r0
   113b0:	add	r0, r0, r3, lsl #1
   113b4:	ldrh	r0, [r0]
   113b8:	movw	r1, #1433	; 0x599
   113bc:	subs	r1, r0, r1
   113c0:	movne	r1, r0
   113c4:	sxth	r0, r1
   113c8:	pop	{r4, sl, fp, pc}
   113cc:	.word	0x00003d0c
   113d0:	.word	0x0001f7d8
   113d4:	.word	0x0001f7c4
   113d8:	.word	0x0001f7c8
   113dc:	.word	0x0000823e
   113e0:	.word	0x000047ec
   113e4:	.word	0x000090de
   113e8:	.word	0x00009fb0

000113ec <yy_get_next_buffer>:
   113ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113f0:	add	fp, sp, #28
   113f4:	sub	sp, sp, #4
   113f8:	ldr	r0, [pc, #1124]	; 11864 <yy_get_next_buffer+0x478>
   113fc:	ldr	r0, [pc, r0]
   11400:	ldr	r1, [pc, #1120]	; 11868 <yy_get_next_buffer+0x47c>
   11404:	ldr	r1, [pc, r1]
   11408:	ldr	r3, [r1, r0, lsl #2]
   1140c:	ldr	r2, [r3, #4]
   11410:	ldr	r7, [pc, #1108]	; 1186c <yy_get_next_buffer+0x480>
   11414:	ldr	r7, [pc, r7]
   11418:	add	r7, r2, r7
   1141c:	add	r7, r7, #1
   11420:	ldr	r4, [pc, #1096]	; 11870 <yy_get_next_buffer+0x484>
   11424:	ldr	r4, [pc, r4]
   11428:	cmp	r4, r7
   1142c:	bhi	1184c <yy_get_next_buffer+0x460>
   11430:	ldr	r5, [pc, #1084]	; 11874 <yy_get_next_buffer+0x488>
   11434:	ldr	r5, [pc, r5]
   11438:	sub	r9, r4, r5
   1143c:	ldr	r3, [r3, #40]	; 0x28
   11440:	cmp	r3, #0
   11444:	beq	1149c <yy_get_next_buffer+0xb0>
   11448:	sub	r7, r9, #1
   1144c:	cmp	r9, #2
   11450:	blt	1146c <yy_get_next_buffer+0x80>
   11454:	mov	r3, #0
   11458:	ldrb	r6, [r5, r3]
   1145c:	strb	r6, [r2, r3]
   11460:	add	r3, r3, #1
   11464:	cmp	r3, r7
   11468:	blt	11458 <yy_get_next_buffer+0x6c>
   1146c:	ldr	r0, [r1, r0, lsl #2]
   11470:	ldr	r1, [r0, #44]	; 0x2c
   11474:	cmp	r1, #2
   11478:	bne	114ac <yy_get_next_buffer+0xc0>
   1147c:	ldr	r1, [pc, #1184]	; 11924 <yy_get_next_buffer+0x538>
   11480:	add	r1, pc, r1
   11484:	mov	r2, #0
   11488:	str	r2, [r1]
   1148c:	str	r2, [r0, #16]
   11490:	cmp	r7, #0
   11494:	bne	11734 <yy_get_next_buffer+0x348>
   11498:	b	11754 <yy_get_next_buffer+0x368>
   1149c:	cmp	r9, #1
   114a0:	movwne	r9, #2
   114a4:	mov	r4, r9
   114a8:	b	1182c <yy_get_next_buffer+0x440>
   114ac:	str	r4, [sp]
   114b0:	ldr	r0, [r0, #12]
   114b4:	sub	r4, r0, r9
   114b8:	cmp	r4, #0
   114bc:	bgt	11560 <yy_get_next_buffer+0x174>
   114c0:	ldr	sl, [pc, #944]	; 11878 <yy_get_next_buffer+0x48c>
   114c4:	add	sl, pc, sl
   114c8:	ldr	r0, [pc, #940]	; 1187c <yy_get_next_buffer+0x490>
   114cc:	ldr	r0, [pc, r0]
   114d0:	ldr	r1, [pc, #936]	; 11880 <yy_get_next_buffer+0x494>
   114d4:	ldr	r1, [pc, r1]
   114d8:	ldr	r4, [r1, r0, lsl #2]
   114dc:	ldr	r0, [r4, #20]
   114e0:	cmp	r0, #0
   114e4:	beq	11838 <yy_get_next_buffer+0x44c>
   114e8:	ldr	r6, [r4, #4]
   114ec:	ldr	r8, [pc, #916]	; 11888 <yy_get_next_buffer+0x49c>
   114f0:	ldr	r8, [pc, r8]
   114f4:	ldr	r0, [r4, #12]
   114f8:	cmp	r0, #0
   114fc:	ble	11508 <yy_get_next_buffer+0x11c>
   11500:	lsl	r1, r0, #1
   11504:	b	11514 <yy_get_next_buffer+0x128>
   11508:	asr	r1, r0, #31
   1150c:	add	r1, r0, r1, lsr #29
   11510:	add	r1, r0, r1, asr #3
   11514:	str	r1, [r4, #12]
   11518:	ldr	r0, [r4, #4]
   1151c:	add	r1, r1, #2
   11520:	bl	12068 <sfbpf_realloc>
   11524:	str	r0, [r4, #4]
   11528:	cmp	r0, #0
   1152c:	beq	11840 <yy_get_next_buffer+0x454>
   11530:	sub	r1, r8, r6
   11534:	add	r0, r0, r1
   11538:	str	r0, [sl]
   1153c:	ldr	r0, [pc, #840]	; 1188c <yy_get_next_buffer+0x4a0>
   11540:	ldr	r0, [pc, r0]
   11544:	ldr	r1, [pc, #836]	; 11890 <yy_get_next_buffer+0x4a4>
   11548:	ldr	r1, [pc, r1]
   1154c:	ldr	r0, [r1, r0, lsl #2]
   11550:	ldr	r0, [r0, #12]
   11554:	sub	r4, r0, r9
   11558:	cmp	r4, #1
   1155c:	blt	114c8 <yy_get_next_buffer+0xdc>
   11560:	cmp	r4, #8192	; 0x2000
   11564:	movge	r4, #8192	; 0x2000
   11568:	ldr	r0, [pc, #804]	; 11894 <yy_get_next_buffer+0x4a8>
   1156c:	ldr	r0, [pc, r0]
   11570:	ldr	r1, [pc, #800]	; 11898 <yy_get_next_buffer+0x4ac>
   11574:	ldr	r1, [pc, r1]
   11578:	ldr	r0, [r1, r0, lsl #2]
   1157c:	ldr	r0, [r0, #24]
   11580:	cmp	r0, #0
   11584:	beq	11614 <yy_get_next_buffer+0x228>
   11588:	ldr	r0, [sp]
   1158c:	sub	r0, r0, #1
   11590:	sub	r6, r0, r5
   11594:	mov	r5, #0
   11598:	ldr	r0, [pc, #764]	; 1189c <yy_get_next_buffer+0x4b0>
   1159c:	ldr	r0, [pc, r0]
   115a0:	bl	fd0 <getc@plt>
   115a4:	cmn	r0, #1
   115a8:	cmpne	r0, #10
   115ac:	beq	115dc <yy_get_next_buffer+0x1f0>
   115b0:	ldr	r1, [pc, #744]	; 118a0 <yy_get_next_buffer+0x4b4>
   115b4:	ldr	r1, [pc, r1]
   115b8:	ldr	r2, [pc, #740]	; 118a4 <yy_get_next_buffer+0x4b8>
   115bc:	ldr	r2, [pc, r2]
   115c0:	ldr	r1, [r2, r1, lsl #2]
   115c4:	ldr	r1, [r1, #4]
   115c8:	add	r1, r1, r6
   115cc:	strb	r0, [r1, r5]
   115d0:	add	r5, r5, #1
   115d4:	cmp	r5, r4
   115d8:	blt	11598 <yy_get_next_buffer+0x1ac>
   115dc:	cmn	r0, #1
   115e0:	beq	116d8 <yy_get_next_buffer+0x2ec>
   115e4:	cmp	r0, #10
   115e8:	bne	116ec <yy_get_next_buffer+0x300>
   115ec:	ldr	r1, [pc, #692]	; 118a8 <yy_get_next_buffer+0x4bc>
   115f0:	ldr	r1, [pc, r1]
   115f4:	ldr	r2, [pc, #688]	; 118ac <yy_get_next_buffer+0x4c0>
   115f8:	ldr	r2, [pc, r2]
   115fc:	ldr	r1, [r2, r1, lsl #2]
   11600:	ldr	r1, [r1, #4]
   11604:	add	r1, r1, r7
   11608:	strb	r0, [r1, r5]
   1160c:	add	r5, r5, #1
   11610:	b	116ec <yy_get_next_buffer+0x300>
   11614:	bl	f28 <__errno_location@plt>
   11618:	mov	r5, r0
   1161c:	mov	r8, #0
   11620:	str	r8, [r0]
   11624:	ldr	r0, [pc, #672]	; 118cc <yy_get_next_buffer+0x4e0>
   11628:	ldr	r0, [pc, r0]
   1162c:	ldr	r1, [pc, #668]	; 118d0 <yy_get_next_buffer+0x4e4>
   11630:	ldr	r1, [pc, r1]
   11634:	ldr	r0, [r1, r0, lsl #2]
   11638:	ldr	r0, [r0, #4]
   1163c:	add	r0, r0, r7
   11640:	ldr	r3, [pc, #652]	; 118d4 <yy_get_next_buffer+0x4e8>
   11644:	ldr	r3, [pc, r3]
   11648:	mov	r1, #1
   1164c:	mov	r2, r4
   11650:	bl	ebc <fread@plt>
   11654:	ldr	r6, [pc, #636]	; 118d8 <yy_get_next_buffer+0x4ec>
   11658:	add	r6, pc, r6
   1165c:	b	116a0 <yy_get_next_buffer+0x2b4>
   11660:	str	r8, [r5]
   11664:	ldr	r0, [pc, #628]	; 118e0 <yy_get_next_buffer+0x4f4>
   11668:	ldr	r0, [pc, r0]
   1166c:	bl	f7c <clearerr@plt>
   11670:	ldr	r0, [pc, #620]	; 118e4 <yy_get_next_buffer+0x4f8>
   11674:	ldr	r0, [pc, r0]
   11678:	ldr	r1, [pc, #616]	; 118e8 <yy_get_next_buffer+0x4fc>
   1167c:	ldr	r1, [pc, r1]
   11680:	ldr	r0, [r1, r0, lsl #2]
   11684:	ldr	r0, [r0, #4]
   11688:	add	r0, r0, r7
   1168c:	ldr	r3, [pc, #600]	; 118ec <yy_get_next_buffer+0x500>
   11690:	ldr	r3, [pc, r3]
   11694:	mov	r1, #1
   11698:	mov	r2, r4
   1169c:	bl	ebc <fread@plt>
   116a0:	str	r0, [r6]
   116a4:	cmp	r0, #0
   116a8:	bne	116f8 <yy_get_next_buffer+0x30c>
   116ac:	ldr	r0, [pc, #552]	; 118dc <yy_get_next_buffer+0x4f0>
   116b0:	ldr	r0, [pc, r0]
   116b4:	bl	e74 <ferror@plt>
   116b8:	cmp	r0, #0
   116bc:	beq	116f8 <yy_get_next_buffer+0x30c>
   116c0:	ldr	r0, [r5]
   116c4:	cmp	r0, #4
   116c8:	beq	11660 <yy_get_next_buffer+0x274>
   116cc:	ldr	r0, [pc, #596]	; 11928 <yy_get_next_buffer+0x53c>
   116d0:	add	r0, pc, r0
   116d4:	bl	119e8 <yy_fatal_error>
   116d8:	ldr	r0, [pc, #464]	; 118b0 <yy_get_next_buffer+0x4c4>
   116dc:	ldr	r0, [pc, r0]
   116e0:	bl	e74 <ferror@plt>
   116e4:	cmp	r0, #0
   116e8:	bne	116cc <yy_get_next_buffer+0x2e0>
   116ec:	ldr	r0, [pc, #448]	; 118b4 <yy_get_next_buffer+0x4c8>
   116f0:	add	r0, pc, r0
   116f4:	str	r5, [r0]
   116f8:	ldr	r0, [pc, #440]	; 118b8 <yy_get_next_buffer+0x4cc>
   116fc:	ldr	r0, [pc, r0]
   11700:	ldr	r1, [pc, #436]	; 118bc <yy_get_next_buffer+0x4d0>
   11704:	ldr	r1, [pc, r1]
   11708:	ldr	r0, [r1, r0, lsl #2]
   1170c:	ldr	r1, [pc, #428]	; 118c0 <yy_get_next_buffer+0x4d4>
   11710:	ldr	r1, [pc, r1]
   11714:	str	r1, [r0, #16]
   11718:	mov	r4, #0
   1171c:	ldr	r0, [pc, #416]	; 118c4 <yy_get_next_buffer+0x4d8>
   11720:	ldr	r0, [pc, r0]
   11724:	cmp	r0, #0
   11728:	bne	11764 <yy_get_next_buffer+0x378>
   1172c:	cmp	r7, #0
   11730:	beq	11754 <yy_get_next_buffer+0x368>
   11734:	ldr	r0, [pc, #436]	; 118f0 <yy_get_next_buffer+0x504>
   11738:	ldr	r0, [pc, r0]
   1173c:	ldr	r1, [pc, #432]	; 118f4 <yy_get_next_buffer+0x508>
   11740:	ldr	r1, [pc, r1]
   11744:	ldr	r0, [r1, r0, lsl #2]
   11748:	mov	r4, #2
   1174c:	str	r4, [r0, #44]	; 0x2c
   11750:	b	11764 <yy_get_next_buffer+0x378>
   11754:	ldr	r0, [pc, #364]	; 118c8 <yy_get_next_buffer+0x4dc>
   11758:	ldr	r0, [pc, r0]
   1175c:	bl	11938 <sfbpf_restart>
   11760:	mov	r4, #1
   11764:	ldr	r0, [pc, #396]	; 118f8 <yy_get_next_buffer+0x50c>
   11768:	ldr	r0, [pc, r0]
   1176c:	add	r1, r0, r7
   11770:	ldr	r2, [pc, #388]	; 118fc <yy_get_next_buffer+0x510>
   11774:	ldr	r2, [pc, r2]
   11778:	ldr	r3, [pc, #384]	; 11900 <yy_get_next_buffer+0x514>
   1177c:	ldr	r3, [pc, r3]
   11780:	ldr	r2, [r3, r2, lsl #2]
   11784:	ldr	r3, [r2, #12]
   11788:	cmp	r1, r3
   1178c:	ble	117d0 <yy_get_next_buffer+0x3e4>
   11790:	add	r5, r1, r0, asr #1
   11794:	ldr	r0, [r2, #4]
   11798:	mov	r1, r5
   1179c:	bl	12068 <sfbpf_realloc>
   117a0:	ldr	r1, [pc, #348]	; 11904 <yy_get_next_buffer+0x518>
   117a4:	ldr	r1, [pc, r1]
   117a8:	ldr	r2, [pc, #344]	; 11908 <yy_get_next_buffer+0x51c>
   117ac:	ldr	r2, [pc, r2]
   117b0:	ldr	r3, [r2, r1, lsl #2]
   117b4:	str	r0, [r3, #4]
   117b8:	ldr	r0, [r2, r1, lsl #2]
   117bc:	ldr	r1, [r0, #4]
   117c0:	cmp	r1, #0
   117c4:	beq	11858 <yy_get_next_buffer+0x46c>
   117c8:	sub	r1, r5, #2
   117cc:	str	r1, [r0, #12]
   117d0:	ldr	r0, [pc, #308]	; 1190c <yy_get_next_buffer+0x520>
   117d4:	ldr	r0, [pc, r0]
   117d8:	add	r1, r0, r7
   117dc:	ldr	r2, [pc, #300]	; 11910 <yy_get_next_buffer+0x524>
   117e0:	add	r2, pc, r2
   117e4:	str	r1, [r2]
   117e8:	ldr	r2, [pc, #292]	; 11914 <yy_get_next_buffer+0x528>
   117ec:	ldr	r2, [pc, r2]
   117f0:	ldr	r3, [pc, #288]	; 11918 <yy_get_next_buffer+0x52c>
   117f4:	ldr	r3, [pc, r3]
   117f8:	ldr	r7, [r3, r2, lsl #2]
   117fc:	ldr	r7, [r7, #4]
   11800:	mov	r6, #0
   11804:	strb	r6, [r7, r1]
   11808:	add	r0, r0, r9
   1180c:	ldr	r1, [r3, r2, lsl #2]
   11810:	ldr	r1, [r1, #4]
   11814:	strb	r6, [r1, r0]
   11818:	ldr	r0, [r3, r2, lsl #2]
   1181c:	ldr	r0, [r0, #4]
   11820:	ldr	r1, [pc, #244]	; 1191c <yy_get_next_buffer+0x530>
   11824:	add	r1, pc, r1
   11828:	str	r0, [r1]
   1182c:	mov	r0, r4
   11830:	sub	sp, fp, #28
   11834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11838:	mov	r0, #0
   1183c:	str	r0, [r4, #4]
   11840:	ldr	r0, [pc, #60]	; 11884 <yy_get_next_buffer+0x498>
   11844:	add	r0, pc, r0
   11848:	bl	119e8 <yy_fatal_error>
   1184c:	ldr	r0, [pc, #204]	; 11920 <yy_get_next_buffer+0x534>
   11850:	add	r0, pc, r0
   11854:	bl	119e8 <yy_fatal_error>
   11858:	ldr	r0, [pc, #204]	; 1192c <yy_get_next_buffer+0x540>
   1185c:	add	r0, pc, r0
   11860:	bl	119e8 <yy_fatal_error>
   11864:	.word	0x0001f6f8
   11868:	.word	0x0001f6ec
   1186c:	.word	0x0001f6f4
   11870:	.word	0x0001f6d4
   11874:	.word	0x0001f71c
   11878:	.word	0x0001f634
   1187c:	.word	0x0001f628
   11880:	.word	0x0001f61c
   11884:	.word	0x0000d6b2
   11888:	.word	0x0001f608
   1188c:	.word	0x0001f5b4
   11890:	.word	0x0001f5a8
   11894:	.word	0x0001f588
   11898:	.word	0x0001f57c
   1189c:	.word	0x0001f540
   118a0:	.word	0x0001f540
   118a4:	.word	0x0001f534
   118a8:	.word	0x0001f504
   118ac:	.word	0x0001f4f8
   118b0:	.word	0x0001f400
   118b4:	.word	0x0001f418
   118b8:	.word	0x0001f3f8
   118bc:	.word	0x0001f3ec
   118c0:	.word	0x0001f3f8
   118c4:	.word	0x0001f3e8
   118c8:	.word	0x0001f384
   118cc:	.word	0x0001f4cc
   118d0:	.word	0x0001f4c0
   118d4:	.word	0x0001f498
   118d8:	.word	0x0001f4b0
   118dc:	.word	0x0001f42c
   118e0:	.word	0x0001f474
   118e4:	.word	0x0001f480
   118e8:	.word	0x0001f474
   118ec:	.word	0x0001f44c
   118f0:	.word	0x0001f3bc
   118f4:	.word	0x0001f3b0
   118f8:	.word	0x0001f3a0
   118fc:	.word	0x0001f380
   11900:	.word	0x0001f374
   11904:	.word	0x0001f350
   11908:	.word	0x0001f344
   1190c:	.word	0x0001f334
   11910:	.word	0x0001f328
   11914:	.word	0x0001f308
   11918:	.word	0x0001f2fc
   1191c:	.word	0x0001f32c
   11920:	.word	0x0000d66e
   11924:	.word	0x0001f688
   11928:	.word	0x0000d852
   1192c:	.word	0x0000d6e3

00011930 <sfbpf_wrap>:
   11930:	mov	r0, #1
   11934:	bx	lr

00011938 <sfbpf_restart>:
   11938:	push	{r4, sl, fp, lr}
   1193c:	add	fp, sp, #8
   11940:	mov	r4, r0
   11944:	ldr	r0, [pc, #128]	; 119cc <sfbpf_restart+0x94>
   11948:	ldr	r0, [pc, r0]
   1194c:	cmp	r0, #0
   11950:	beq	11980 <sfbpf_restart+0x48>
   11954:	ldr	r1, [pc, #116]	; 119d0 <sfbpf_restart+0x98>
   11958:	ldr	r1, [pc, r1]
   1195c:	ldr	r0, [r0, r1, lsl #2]
   11960:	cmp	r0, #0
   11964:	beq	11980 <sfbpf_restart+0x48>
   11968:	ldr	r1, [pc, #112]	; 119e0 <sfbpf_restart+0xa8>
   1196c:	ldr	r1, [pc, r1]
   11970:	cmp	r1, #0
   11974:	bne	119b0 <sfbpf_restart+0x78>
   11978:	mov	r0, #0
   1197c:	b	119bc <sfbpf_restart+0x84>
   11980:	bl	10f34 <sfbpf_ensure_buffer_stack>
   11984:	ldr	r0, [pc, #72]	; 119d4 <sfbpf_restart+0x9c>
   11988:	ldr	r0, [pc, r0]
   1198c:	mov	r1, #16384	; 0x4000
   11990:	bl	11024 <sfbpf__create_buffer>
   11994:	ldr	r1, [pc, #60]	; 119d8 <sfbpf_restart+0xa0>
   11998:	ldr	r1, [pc, r1]
   1199c:	ldr	r2, [pc, #56]	; 119dc <sfbpf_restart+0xa4>
   119a0:	ldr	r2, [pc, r2]
   119a4:	str	r0, [r1, r2, lsl #2]
   119a8:	cmp	r1, #0
   119ac:	beq	11978 <sfbpf_restart+0x40>
   119b0:	ldr	r0, [pc, #44]	; 119e4 <sfbpf_restart+0xac>
   119b4:	ldr	r0, [pc, r0]
   119b8:	ldr	r0, [r1, r0, lsl #2]
   119bc:	mov	r1, r4
   119c0:	bl	11a1c <sfbpf__init_buffer>
   119c4:	pop	{r4, sl, fp, lr}
   119c8:	b	1108c <sfbpf__load_buffer_state>
   119cc:	.word	0x0001f1a8
   119d0:	.word	0x0001f19c
   119d4:	.word	0x0001f154
   119d8:	.word	0x0001f158
   119dc:	.word	0x0001f154
   119e0:	.word	0x0001f184
   119e4:	.word	0x0001f140

000119e8 <yy_fatal_error>:
   119e8:	push	{fp, lr}
   119ec:	mov	fp, sp
   119f0:	mov	r2, r0
   119f4:	ldr	r0, [pc, #24]	; 11a14 <yy_fatal_error+0x2c>
   119f8:	ldr	r0, [pc, r0]
   119fc:	ldr	r0, [r0]
   11a00:	ldr	r1, [pc, #16]	; 11a18 <yy_fatal_error+0x30>
   11a04:	add	r1, pc, r1
   11a08:	bl	f1c <fprintf@plt>
   11a0c:	mov	r0, #2
   11a10:	bl	ef8 <exit@plt>
   11a14:	.word	0x0001e6b4
   11a18:	.word	0x00000725

00011a1c <sfbpf__init_buffer>:
   11a1c:	push	{r4, r5, r6, r7, fp, lr}
   11a20:	add	fp, sp, #16
   11a24:	mov	r6, r1
   11a28:	mov	r4, r0
   11a2c:	bl	f28 <__errno_location@plt>
   11a30:	mov	r5, r0
   11a34:	ldr	r7, [r0]
   11a38:	mov	r0, r4
   11a3c:	bl	11c00 <sfbpf__flush_buffer>
   11a40:	mov	r0, #1
   11a44:	str	r0, [r4, #40]	; 0x28
   11a48:	str	r6, [r4]
   11a4c:	ldr	r0, [pc, #100]	; 11ab8 <sfbpf__init_buffer+0x9c>
   11a50:	ldr	r0, [pc, r0]
   11a54:	cmp	r0, #0
   11a58:	beq	11a6c <sfbpf__init_buffer+0x50>
   11a5c:	ldr	r1, [pc, #88]	; 11abc <sfbpf__init_buffer+0xa0>
   11a60:	ldr	r1, [pc, r1]
   11a64:	ldr	r0, [r0, r1, lsl #2]
   11a68:	b	11a70 <sfbpf__init_buffer+0x54>
   11a6c:	mov	r0, #0
   11a70:	cmp	r0, r4
   11a74:	movne	r0, #0
   11a78:	movne	r1, #1
   11a7c:	strne	r1, [r4, #32]
   11a80:	strne	r0, [r4, #36]	; 0x24
   11a84:	cmp	r6, #0
   11a88:	beq	11aa8 <sfbpf__init_buffer+0x8c>
   11a8c:	mov	r0, r6
   11a90:	bl	f64 <fileno@plt>
   11a94:	bl	fb8 <isatty@plt>
   11a98:	mov	r1, #0
   11a9c:	cmp	r0, #0
   11aa0:	movwgt	r1, #1
   11aa4:	b	11aac <sfbpf__init_buffer+0x90>
   11aa8:	mov	r1, #0
   11aac:	str	r1, [r4, #24]
   11ab0:	str	r7, [r5]
   11ab4:	pop	{r4, r5, r6, r7, fp, pc}
   11ab8:	.word	0x0001f0a0
   11abc:	.word	0x0001f094

00011ac0 <sfbpf__switch_to_buffer>:
   11ac0:	push	{r4, sl, fp, lr}
   11ac4:	add	fp, sp, #8
   11ac8:	mov	r4, r0
   11acc:	bl	10f34 <sfbpf_ensure_buffer_stack>
   11ad0:	ldr	r0, [pc, #132]	; 11b5c <sfbpf__switch_to_buffer+0x9c>
   11ad4:	ldr	r0, [pc, r0]
   11ad8:	cmp	r0, #0
   11adc:	beq	11af0 <sfbpf__switch_to_buffer+0x30>
   11ae0:	ldr	r1, [pc, #120]	; 11b60 <sfbpf__switch_to_buffer+0xa0>
   11ae4:	ldr	r1, [pc, r1]
   11ae8:	ldr	r1, [r0, r1, lsl #2]
   11aec:	b	11af4 <sfbpf__switch_to_buffer+0x34>
   11af0:	mov	r1, #0
   11af4:	cmp	r1, r4
   11af8:	popeq	{r4, sl, fp, pc}
   11afc:	cmp	r0, #0
   11b00:	beq	11b48 <sfbpf__switch_to_buffer+0x88>
   11b04:	ldr	r1, [pc, #88]	; 11b64 <sfbpf__switch_to_buffer+0xa4>
   11b08:	ldr	r1, [pc, r1]
   11b0c:	ldr	r2, [r0, r1, lsl #2]
   11b10:	cmp	r2, #0
   11b14:	beq	11b48 <sfbpf__switch_to_buffer+0x88>
   11b18:	ldr	r2, [pc, #72]	; 11b68 <sfbpf__switch_to_buffer+0xa8>
   11b1c:	add	r2, pc, r2
   11b20:	ldrb	r2, [r2]
   11b24:	ldr	r3, [pc, #64]	; 11b6c <sfbpf__switch_to_buffer+0xac>
   11b28:	ldr	r3, [pc, r3]
   11b2c:	strb	r2, [r3]
   11b30:	ldr	r2, [r0, r1, lsl #2]
   11b34:	str	r3, [r2, #8]
   11b38:	ldr	r1, [r0, r1, lsl #2]
   11b3c:	ldr	r2, [pc, #44]	; 11b70 <sfbpf__switch_to_buffer+0xb0>
   11b40:	ldr	r2, [pc, r2]
   11b44:	str	r2, [r1, #16]
   11b48:	ldr	r1, [pc, #36]	; 11b74 <sfbpf__switch_to_buffer+0xb4>
   11b4c:	ldr	r1, [pc, r1]
   11b50:	str	r4, [r0, r1, lsl #2]
   11b54:	pop	{r4, sl, fp, lr}
   11b58:	b	1108c <sfbpf__load_buffer_state>
   11b5c:	.word	0x0001f01c
   11b60:	.word	0x0001f010
   11b64:	.word	0x0001efec
   11b68:	.word	0x0001efe0
   11b6c:	.word	0x0001efd0
   11b70:	.word	0x0001efc8
   11b74:	.word	0x0001efa8

00011b78 <sfbpf_alloc>:
   11b78:	b	ed4 <malloc@plt>

00011b7c <sfbpf__delete_buffer>:
   11b7c:	cmp	r0, #0
   11b80:	bxeq	lr
   11b84:	push	{r4, sl, fp, lr}
   11b88:	add	fp, sp, #8
   11b8c:	mov	r4, r0
   11b90:	ldr	r0, [pc, #88]	; 11bf0 <sfbpf__delete_buffer+0x74>
   11b94:	ldr	r0, [pc, r0]
   11b98:	cmp	r0, #0
   11b9c:	beq	11be0 <sfbpf__delete_buffer+0x64>
   11ba0:	ldr	r1, [pc, #76]	; 11bf4 <sfbpf__delete_buffer+0x78>
   11ba4:	ldr	r1, [pc, r1]
   11ba8:	ldr	r1, [r0, r1, lsl #2]
   11bac:	cmp	r1, r4
   11bb0:	bne	11bc4 <sfbpf__delete_buffer+0x48>
   11bb4:	ldr	r1, [pc, #60]	; 11bf8 <sfbpf__delete_buffer+0x7c>
   11bb8:	ldr	r1, [pc, r1]
   11bbc:	mov	r2, #0
   11bc0:	str	r2, [r0, r1, lsl #2]
   11bc4:	ldr	r0, [r4, #20]
   11bc8:	cmp	r0, #0
   11bcc:	ldrne	r0, [r4, #4]
   11bd0:	blne	11bfc <sfbpf_free>
   11bd4:	mov	r0, r4
   11bd8:	pop	{r4, sl, fp, lr}
   11bdc:	b	11bfc <sfbpf_free>
   11be0:	mov	r1, #0
   11be4:	cmp	r1, r4
   11be8:	bne	11bc4 <sfbpf__delete_buffer+0x48>
   11bec:	b	11bb4 <sfbpf__delete_buffer+0x38>
   11bf0:	.word	0x0001ef5c
   11bf4:	.word	0x0001ef50
   11bf8:	.word	0x0001ef3c

00011bfc <sfbpf_free>:
   11bfc:	b	e5c <free@plt>

00011c00 <sfbpf__flush_buffer>:
   11c00:	cmp	r0, #0
   11c04:	beq	11c58 <sfbpf__flush_buffer+0x58>
   11c08:	mov	r1, #0
   11c0c:	str	r1, [r0, #16]
   11c10:	ldr	r2, [r0, #4]
   11c14:	strb	r1, [r2]
   11c18:	ldr	r2, [r0, #4]
   11c1c:	strb	r1, [r2, #1]
   11c20:	mov	r2, #1
   11c24:	str	r2, [r0, #28]
   11c28:	str	r1, [r0, #44]	; 0x2c
   11c2c:	ldr	r2, [r0, #4]
   11c30:	str	r2, [r0, #8]
   11c34:	ldr	r2, [pc, #32]	; 11c5c <sfbpf__flush_buffer+0x5c>
   11c38:	ldr	r2, [pc, r2]
   11c3c:	cmp	r2, #0
   11c40:	ldrne	r1, [pc, #24]	; 11c60 <sfbpf__flush_buffer+0x60>
   11c44:	ldrne	r1, [pc, r1]
   11c48:	ldrne	r1, [r2, r1, lsl #2]
   11c4c:	cmp	r1, r0
   11c50:	bxne	lr
   11c54:	b	1108c <sfbpf__load_buffer_state>
   11c58:	bx	lr
   11c5c:	.word	0x0001eeb8
   11c60:	.word	0x0001eeb0

00011c64 <sfbpf_push_buffer_state>:
   11c64:	cmp	r0, #0
   11c68:	bxeq	lr
   11c6c:	push	{r4, sl, fp, lr}
   11c70:	add	fp, sp, #8
   11c74:	mov	r4, r0
   11c78:	bl	10f34 <sfbpf_ensure_buffer_stack>
   11c7c:	ldr	r0, [pc, #128]	; 11d04 <sfbpf_push_buffer_state+0xa0>
   11c80:	ldr	r0, [pc, r0]
   11c84:	cmp	r0, #0
   11c88:	beq	11cf0 <sfbpf_push_buffer_state+0x8c>
   11c8c:	ldr	r1, [pc, #116]	; 11d08 <sfbpf_push_buffer_state+0xa4>
   11c90:	ldr	r1, [pc, r1]
   11c94:	ldr	r2, [r0, r1, lsl #2]
   11c98:	cmp	r2, #0
   11c9c:	beq	11cd0 <sfbpf_push_buffer_state+0x6c>
   11ca0:	ldr	r2, [pc, #100]	; 11d0c <sfbpf_push_buffer_state+0xa8>
   11ca4:	add	r2, pc, r2
   11ca8:	ldrb	r2, [r2]
   11cac:	ldr	r3, [pc, #92]	; 11d10 <sfbpf_push_buffer_state+0xac>
   11cb0:	ldr	r3, [pc, r3]
   11cb4:	strb	r2, [r3]
   11cb8:	ldr	r2, [r0, r1, lsl #2]
   11cbc:	str	r3, [r2, #8]
   11cc0:	ldr	r1, [r0, r1, lsl #2]
   11cc4:	ldr	r2, [pc, #72]	; 11d14 <sfbpf_push_buffer_state+0xb0>
   11cc8:	ldr	r2, [pc, r2]
   11ccc:	str	r2, [r1, #16]
   11cd0:	ldr	r1, [pc, #64]	; 11d18 <sfbpf_push_buffer_state+0xb4>
   11cd4:	ldr	r1, [pc, r1]
   11cd8:	ldr	r2, [r0, r1, lsl #2]
   11cdc:	cmp	r2, #0
   11ce0:	addne	r1, r1, #1
   11ce4:	ldrne	r2, [pc, #48]	; 11d1c <sfbpf_push_buffer_state+0xb8>
   11ce8:	addne	r2, pc, r2
   11cec:	strne	r1, [r2]
   11cf0:	ldr	r1, [pc, #40]	; 11d20 <sfbpf_push_buffer_state+0xbc>
   11cf4:	ldr	r1, [pc, r1]
   11cf8:	str	r4, [r0, r1, lsl #2]
   11cfc:	pop	{r4, sl, fp, lr}
   11d00:	b	1108c <sfbpf__load_buffer_state>
   11d04:	.word	0x0001ee70
   11d08:	.word	0x0001ee64
   11d0c:	.word	0x0001ee58
   11d10:	.word	0x0001ee48
   11d14:	.word	0x0001ee40
   11d18:	.word	0x0001ee20
   11d1c:	.word	0x0001ee0c
   11d20:	.word	0x0001ee00

00011d24 <sfbpf_pop_buffer_state>:
   11d24:	ldr	r0, [pc, #124]	; 11da8 <sfbpf_pop_buffer_state+0x84>
   11d28:	ldr	r0, [pc, r0]
   11d2c:	cmp	r0, #0
   11d30:	beq	11da4 <sfbpf_pop_buffer_state+0x80>
   11d34:	ldr	r1, [pc, #112]	; 11dac <sfbpf_pop_buffer_state+0x88>
   11d38:	ldr	r1, [pc, r1]
   11d3c:	ldr	r0, [r0, r1, lsl #2]
   11d40:	cmp	r0, #0
   11d44:	beq	11da4 <sfbpf_pop_buffer_state+0x80>
   11d48:	push	{fp, lr}
   11d4c:	mov	fp, sp
   11d50:	bl	11b7c <sfbpf__delete_buffer>
   11d54:	ldr	r1, [pc, #84]	; 11db0 <sfbpf_pop_buffer_state+0x8c>
   11d58:	ldr	r1, [pc, r1]
   11d5c:	ldr	r0, [pc, #80]	; 11db4 <sfbpf_pop_buffer_state+0x90>
   11d60:	ldr	r0, [pc, r0]
   11d64:	mov	r2, #0
   11d68:	str	r2, [r0, r1, lsl #2]
   11d6c:	cmp	r1, #0
   11d70:	pop	{fp, lr}
   11d74:	subne	r1, r1, #1
   11d78:	ldrne	r2, [pc, #56]	; 11db8 <sfbpf_pop_buffer_state+0x94>
   11d7c:	addne	r2, pc, r2
   11d80:	strne	r1, [r2]
   11d84:	cmp	r0, #0
   11d88:	bxeq	lr
   11d8c:	ldr	r1, [pc, #40]	; 11dbc <sfbpf_pop_buffer_state+0x98>
   11d90:	ldr	r1, [pc, r1]
   11d94:	ldr	r0, [r0, r1, lsl #2]
   11d98:	cmp	r0, #0
   11d9c:	beq	11da4 <sfbpf_pop_buffer_state+0x80>
   11da0:	b	1108c <sfbpf__load_buffer_state>
   11da4:	bx	lr
   11da8:	.word	0x0001edc8
   11dac:	.word	0x0001edbc
   11db0:	.word	0x0001ed9c
   11db4:	.word	0x0001ed90
   11db8:	.word	0x0001ed78
   11dbc:	.word	0x0001ed64

00011dc0 <sfbpf__scan_buffer>:
   11dc0:	push	{r4, r5, r6, sl, fp, lr}
   11dc4:	add	fp, sp, #16
   11dc8:	mov	r4, #0
   11dcc:	cmp	r1, #2
   11dd0:	bcc	11df8 <sfbpf__scan_buffer+0x38>
   11dd4:	mov	r5, r0
   11dd8:	sub	r6, r1, #2
   11ddc:	ldrb	r0, [r0, r6]
   11de0:	cmp	r0, #0
   11de4:	bne	11df8 <sfbpf__scan_buffer+0x38>
   11de8:	add	r0, r5, r1
   11dec:	ldrb	r0, [r0, #-1]
   11df0:	cmp	r0, #0
   11df4:	beq	11e00 <sfbpf__scan_buffer+0x40>
   11df8:	mov	r0, r4
   11dfc:	pop	{r4, r5, r6, sl, fp, pc}
   11e00:	mov	r0, #48	; 0x30
   11e04:	bl	11b78 <sfbpf_alloc>
   11e08:	cmp	r0, #0
   11e0c:	beq	11e50 <sfbpf__scan_buffer+0x90>
   11e10:	mov	r4, r0
   11e14:	mov	r0, #0
   11e18:	mov	r1, #1
   11e1c:	stm	r4, {r0, r5}
   11e20:	str	r5, [r4, #8]
   11e24:	str	r6, [r4, #12]
   11e28:	str	r6, [r4, #16]
   11e2c:	str	r0, [r4, #20]
   11e30:	str	r0, [r4, #24]
   11e34:	str	r1, [r4, #28]
   11e38:	str	r0, [r4, #40]	; 0x28
   11e3c:	str	r0, [r4, #44]	; 0x2c
   11e40:	mov	r0, r4
   11e44:	bl	11ac0 <sfbpf__switch_to_buffer>
   11e48:	mov	r0, r4
   11e4c:	pop	{r4, r5, r6, sl, fp, pc}
   11e50:	ldr	r0, [pc, #4]	; 11e5c <sfbpf__scan_buffer+0x9c>
   11e54:	add	r0, pc, r0
   11e58:	bl	119e8 <yy_fatal_error>
   11e5c:	.word	0x0000cff9

00011e60 <sfbpf__scan_string>:
   11e60:	push	{r4, sl, fp, lr}
   11e64:	add	fp, sp, #8
   11e68:	mov	r4, r0
   11e6c:	bl	f04 <strlen@plt>
   11e70:	mov	r1, r0
   11e74:	mov	r0, r4
   11e78:	pop	{r4, sl, fp, lr}
   11e7c:	b	11e80 <sfbpf__scan_bytes>

00011e80 <sfbpf__scan_bytes>:
   11e80:	push	{r4, r5, r6, r7, fp, lr}
   11e84:	add	fp, sp, #16
   11e88:	mov	r5, r1
   11e8c:	mov	r7, r0
   11e90:	add	r4, r1, #2
   11e94:	mov	r0, r4
   11e98:	bl	11b78 <sfbpf_alloc>
   11e9c:	cmp	r0, #0
   11ea0:	beq	11ef4 <sfbpf__scan_bytes+0x74>
   11ea4:	mov	r6, r0
   11ea8:	cmp	r5, #0
   11eac:	ble	11ec0 <sfbpf__scan_bytes+0x40>
   11eb0:	mov	r0, r6
   11eb4:	mov	r1, r7
   11eb8:	mov	r2, r5
   11ebc:	bl	e80 <memcpy@plt>
   11ec0:	add	r0, r6, r5
   11ec4:	mov	r1, #0
   11ec8:	strh	r1, [r0]
   11ecc:	mov	r0, r6
   11ed0:	mov	r1, r4
   11ed4:	bl	11dc0 <sfbpf__scan_buffer>
   11ed8:	cmp	r0, #0
   11edc:	movne	r1, #1
   11ee0:	strne	r1, [r0, #20]
   11ee4:	popne	{r4, r5, r6, r7, fp, pc}
   11ee8:	ldr	r0, [pc, #20]	; 11f04 <sfbpf__scan_bytes+0x84>
   11eec:	add	r0, pc, r0
   11ef0:	bl	119e8 <yy_fatal_error>
   11ef4:	ldr	r0, [pc, #4]	; 11f00 <sfbpf__scan_bytes+0x80>
   11ef8:	add	r0, pc, r0
   11efc:	bl	119e8 <yy_fatal_error>
   11f00:	.word	0x0000cf7f
   11f04:	.word	0x0000cfb4

00011f08 <sfbpf_get_debug>:
   11f08:	ldr	r0, [pc, #4]	; 11f14 <sfbpf_get_debug+0xc>
   11f0c:	ldr	r0, [pc, r0]
   11f10:	bx	lr
   11f14:	.word	0x0001ebd8

00011f18 <sfbpf_set_debug>:
   11f18:	ldr	r1, [pc, #8]	; 11f28 <sfbpf_set_debug+0x10>
   11f1c:	add	r1, pc, r1
   11f20:	str	r0, [r1]
   11f24:	bx	lr
   11f28:	.word	0x0001ebc8

00011f2c <sfbpf_lex_destroy>:
   11f2c:	push	{r4, r5, fp, lr}
   11f30:	add	fp, sp, #8
   11f34:	mov	r5, #0
   11f38:	ldr	r0, [pc, #132]	; 11fc4 <sfbpf_lex_destroy+0x98>
   11f3c:	ldr	r0, [pc, r0]
   11f40:	cmp	r0, #0
   11f44:	mov	r4, #0
   11f48:	beq	11fa4 <sfbpf_lex_destroy+0x78>
   11f4c:	mov	r4, #0
   11f50:	ldr	r1, [pc, #112]	; 11fc8 <sfbpf_lex_destroy+0x9c>
   11f54:	ldr	r1, [pc, r1]
   11f58:	ldr	r1, [r0, r1, lsl #2]
   11f5c:	cmp	r1, #0
   11f60:	beq	11fa0 <sfbpf_lex_destroy+0x74>
   11f64:	ldr	r1, [pc, #96]	; 11fcc <sfbpf_lex_destroy+0xa0>
   11f68:	ldr	r1, [pc, r1]
   11f6c:	ldr	r0, [r0, r1, lsl #2]
   11f70:	bl	11b7c <sfbpf__delete_buffer>
   11f74:	ldr	r0, [pc, #84]	; 11fd0 <sfbpf_lex_destroy+0xa4>
   11f78:	ldr	r0, [pc, r0]
   11f7c:	ldr	r1, [pc, #80]	; 11fd4 <sfbpf_lex_destroy+0xa8>
   11f80:	ldr	r1, [pc, r1]
   11f84:	str	r4, [r1, r0, lsl #2]
   11f88:	bl	11d24 <sfbpf_pop_buffer_state>
   11f8c:	ldr	r0, [pc, #68]	; 11fd8 <sfbpf_lex_destroy+0xac>
   11f90:	ldr	r0, [pc, r0]
   11f94:	cmp	r0, #0
   11f98:	bne	11f50 <sfbpf_lex_destroy+0x24>
   11f9c:	b	11fa4 <sfbpf_lex_destroy+0x78>
   11fa0:	mov	r4, r0
   11fa4:	mov	r0, r4
   11fa8:	bl	11bfc <sfbpf_free>
   11fac:	ldr	r0, [pc, #40]	; 11fdc <sfbpf_lex_destroy+0xb0>
   11fb0:	add	r0, pc, r0
   11fb4:	str	r5, [r0]
   11fb8:	bl	11fe0 <yy_init_globals>
   11fbc:	mov	r0, #0
   11fc0:	pop	{r4, r5, fp, pc}
   11fc4:	.word	0x0001ebb4
   11fc8:	.word	0x0001eba0
   11fcc:	.word	0x0001eb8c
   11fd0:	.word	0x0001eb7c
   11fd4:	.word	0x0001eb70
   11fd8:	.word	0x0001eb60
   11fdc:	.word	0x0001eb40

00011fe0 <yy_init_globals>:
   11fe0:	ldr	r0, [pc, #96]	; 12048 <yy_init_globals+0x68>
   11fe4:	add	r0, pc, r0
   11fe8:	mov	r1, #0
   11fec:	str	r1, [r0]
   11ff0:	ldr	r0, [pc, #84]	; 1204c <yy_init_globals+0x6c>
   11ff4:	add	r0, pc, r0
   11ff8:	str	r1, [r0]
   11ffc:	ldr	r0, [pc, #76]	; 12050 <yy_init_globals+0x70>
   12000:	add	r0, pc, r0
   12004:	str	r1, [r0]
   12008:	ldr	r0, [pc, #68]	; 12054 <yy_init_globals+0x74>
   1200c:	add	r0, pc, r0
   12010:	str	r1, [r0]
   12014:	ldr	r0, [pc, #60]	; 12058 <yy_init_globals+0x78>
   12018:	add	r0, pc, r0
   1201c:	strb	r1, [r0]
   12020:	ldr	r0, [pc, #52]	; 1205c <yy_init_globals+0x7c>
   12024:	add	r0, pc, r0
   12028:	strb	r1, [r0]
   1202c:	ldr	r0, [pc, #44]	; 12060 <yy_init_globals+0x80>
   12030:	add	r0, pc, r0
   12034:	str	r1, [r0]
   12038:	ldr	r0, [pc, #36]	; 12064 <yy_init_globals+0x84>
   1203c:	add	r0, pc, r0
   12040:	str	r1, [r0]
   12044:	bx	lr
   12048:	.word	0x0001eb10
   1204c:	.word	0x0001eafc
   12050:	.word	0x0001eb10
   12054:	.word	0x0001eaec
   12058:	.word	0x0001ead0
   1205c:	.word	0x0001eac8
   12060:	.word	0x0001eaac
   12064:	.word	0x0001eaa4

00012068 <sfbpf_realloc>:
   12068:	b	ea4 <realloc@plt>

0001206c <sf_lex_init>:
   1206c:	push	{fp, lr}
   12070:	mov	fp, sp
   12074:	bl	11e60 <sfbpf__scan_string>
   12078:	ldr	r1, [pc, #8]	; 12088 <sf_lex_init+0x1c>
   1207c:	add	r1, pc, r1
   12080:	str	r0, [r1]
   12084:	pop	{fp, pc}
   12088:	.word	0x0001ea90

0001208c <sf_lex_cleanup>:
   1208c:	ldr	r0, [pc, #44]	; 120c0 <sf_lex_cleanup+0x34>
   12090:	ldr	r0, [pc, r0]
   12094:	cmp	r0, #0
   12098:	beq	120ac <sf_lex_cleanup+0x20>
   1209c:	push	{fp, lr}
   120a0:	mov	fp, sp
   120a4:	bl	11b7c <sfbpf__delete_buffer>
   120a8:	pop	{fp, lr}
   120ac:	ldr	r0, [pc, #16]	; 120c4 <sf_lex_cleanup+0x38>
   120b0:	add	r0, pc, r0
   120b4:	mov	r1, #0
   120b8:	str	r1, [r0]
   120bc:	bx	lr
   120c0:	.word	0x0001ea7c
   120c4:	.word	0x0001ea5c

000120c8 <xdtoi>:
   120c8:	push	{r4, sl, fp, lr}
   120cc:	add	fp, sp, #8
   120d0:	mov	r4, r0
   120d4:	bl	eec <__ctype_b_loc@plt>
   120d8:	ldr	r0, [r0]
   120dc:	add	r0, r0, r4, lsl #1
   120e0:	ldrh	r1, [r0]
   120e4:	mvn	r0, #47	; 0x2f
   120e8:	tst	r1, #2048	; 0x800
   120ec:	bne	120fc <xdtoi+0x34>
   120f0:	mvn	r0, #86	; 0x56
   120f4:	tst	r1, #512	; 0x200
   120f8:	mvneq	r0, #54	; 0x36
   120fc:	add	r0, r0, r4
   12100:	pop	{r4, sl, fp, pc}

Disassembly of section .fini:

00012104 <_fini>:
   12104:	push	{r3, lr}
   12108:	pop	{r3, pc}
