
../repos/inetutils/ifconfig/ifconfig:     file format elf32-littlearm


Disassembly of section .init:

0001132c <.init>:
   1132c:	push	{r3, lr}
   11330:	bl	11718 <ftello64@plt+0x48>
   11334:	pop	{r3, pc}

Disassembly of section .plt:

00011338 <calloc@plt-0x14>:
   11338:	push	{lr}		; (str lr, [sp, #-4]!)
   1133c:	ldr	lr, [pc, #4]	; 11348 <calloc@plt-0x4>
   11340:	add	lr, pc, lr
   11344:	ldr	pc, [lr, #8]!
   11348:			; <UNDEFINED> instruction: 0x00020cb8

0001134c <calloc@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #32, 20	; 0x20000
   11354:	ldr	pc, [ip, #3256]!	; 0xcb8

00011358 <fputs_unlocked@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #32, 20	; 0x20000
   11360:	ldr	pc, [ip, #3248]!	; 0xcb0

00011364 <strstr@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #32, 20	; 0x20000
   1136c:	ldr	pc, [ip, #3240]!	; 0xca8

00011370 <ether_hostton@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #32, 20	; 0x20000
   11378:	ldr	pc, [ip, #3232]!	; 0xca0

0001137c <raise@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #32, 20	; 0x20000
   11384:	ldr	pc, [ip, #3224]!	; 0xc98

00011388 <__getdelim@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #32, 20	; 0x20000
   11390:	ldr	pc, [ip, #3216]!	; 0xc90

00011394 <inet_aton@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #32, 20	; 0x20000
   1139c:	ldr	pc, [ip, #3208]!	; 0xc88

000113a0 <strcmp@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #32, 20	; 0x20000
   113a8:	ldr	pc, [ip, #3200]!	; 0xc80

000113ac <strtol@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #32, 20	; 0x20000
   113b4:	ldr	pc, [ip, #3192]!	; 0xc78

000113b8 <printf@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #32, 20	; 0x20000
   113c0:	ldr	pc, [ip, #3184]!	; 0xc70

000113c4 <memmove@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #32, 20	; 0x20000
   113cc:	ldr	pc, [ip, #3176]!	; 0xc68

000113d0 <strchrnul@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #32, 20	; 0x20000
   113d8:	ldr	pc, [ip, #3168]!	; 0xc60

000113dc <free@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #32, 20	; 0x20000
   113e4:	ldr	pc, [ip, #3160]!	; 0xc58

000113e8 <gai_strerror@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #32, 20	; 0x20000
   113f0:	ldr	pc, [ip, #3152]!	; 0xc50

000113f4 <ferror@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #32, 20	; 0x20000
   113fc:	ldr	pc, [ip, #3144]!	; 0xc48

00011400 <strndup@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #32, 20	; 0x20000
   11408:	ldr	pc, [ip, #3136]!	; 0xc40

0001140c <memcpy@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #32, 20	; 0x20000
   11414:	ldr	pc, [ip, #3128]!	; 0xc38

00011418 <fwrite_unlocked@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #32, 20	; 0x20000
   11420:	ldr	pc, [ip, #3120]!	; 0xc30

00011424 <inet_ntoa@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #32, 20	; 0x20000
   1142c:	ldr	pc, [ip, #3112]!	; 0xc28

00011430 <sleep@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #32, 20	; 0x20000
   11438:	ldr	pc, [ip, #3104]!	; 0xc20

0001143c <strdup@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #32, 20	; 0x20000
   11444:	ldr	pc, [ip, #3096]!	; 0xc18

00011448 <realloc@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #32, 20	; 0x20000
   11450:	ldr	pc, [ip, #3088]!	; 0xc10

00011454 <strcasecmp@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #32, 20	; 0x20000
   1145c:	ldr	pc, [ip, #3080]!	; 0xc08

00011460 <funlockfile@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #32, 20	; 0x20000
   11468:	ldr	pc, [ip, #3072]!	; 0xc00

0001146c <__fxstat64@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #32, 20	; 0x20000
   11474:	ldr	pc, [ip, #3064]!	; 0xbf8

00011478 <fwrite@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #32, 20	; 0x20000
   11480:	ldr	pc, [ip, #3056]!	; 0xbf0

00011484 <ioctl@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #32, 20	; 0x20000
   1148c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011490 <strcpy@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #32, 20	; 0x20000
   11498:	ldr	pc, [ip, #3040]!	; 0xbe0

0001149c <fread@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #32, 20	; 0x20000
   114a4:	ldr	pc, [ip, #3032]!	; 0xbd8

000114a8 <error@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #32, 20	; 0x20000
   114b0:	ldr	pc, [ip, #3024]!	; 0xbd0

000114b4 <getenv@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #32, 20	; 0x20000
   114bc:	ldr	pc, [ip, #3016]!	; 0xbc8

000114c0 <puts@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #32, 20	; 0x20000
   114c8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114cc <malloc@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #32, 20	; 0x20000
   114d4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114d8 <__libc_start_main@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #32, 20	; 0x20000
   114e0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114e4 <strerror@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #32, 20	; 0x20000
   114ec:	ldr	pc, [ip, #2984]!	; 0xba8

000114f0 <__ctype_tolower_loc@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #32, 20	; 0x20000
   114f8:	ldr	pc, [ip, #2976]!	; 0xba0

000114fc <ether_aton@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #32, 20	; 0x20000
   11504:	ldr	pc, [ip, #2968]!	; 0xb98

00011508 <__gmon_start__@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #32, 20	; 0x20000
   11510:	ldr	pc, [ip, #2960]!	; 0xb90

00011514 <mempcpy@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #32, 20	; 0x20000
   1151c:	ldr	pc, [ip, #2952]!	; 0xb88

00011520 <__ctype_b_loc@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #32, 20	; 0x20000
   11528:	ldr	pc, [ip, #2944]!	; 0xb80

0001152c <exit@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #32, 20	; 0x20000
   11534:	ldr	pc, [ip, #2936]!	; 0xb78

00011538 <strtoul@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #32, 20	; 0x20000
   11540:	ldr	pc, [ip, #2928]!	; 0xb70

00011544 <strlen@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #32, 20	; 0x20000
   1154c:	ldr	pc, [ip, #2920]!	; 0xb68

00011550 <strchr@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #32, 20	; 0x20000
   11558:	ldr	pc, [ip, #2912]!	; 0xb60

0001155c <fprintf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #32, 20	; 0x20000
   11564:	ldr	pc, [ip, #2904]!	; 0xb58

00011568 <__errno_location@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #32, 20	; 0x20000
   11570:	ldr	pc, [ip, #2896]!	; 0xb50

00011574 <strncasecmp@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #32, 20	; 0x20000
   1157c:	ldr	pc, [ip, #2888]!	; 0xb48

00011580 <strerror_r@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #32, 20	; 0x20000
   11588:	ldr	pc, [ip, #2880]!	; 0xb40

0001158c <setvbuf@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #32, 20	; 0x20000
   11594:	ldr	pc, [ip, #2872]!	; 0xb38

00011598 <memset@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #32, 20	; 0x20000
   115a0:	ldr	pc, [ip, #2864]!	; 0xb30

000115a4 <strncpy@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #32, 20	; 0x20000
   115ac:	ldr	pc, [ip, #2856]!	; 0xb28

000115b0 <fileno@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #32, 20	; 0x20000
   115b8:	ldr	pc, [ip, #2848]!	; 0xb20

000115bc <memchr@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #32, 20	; 0x20000
   115c4:	ldr	pc, [ip, #2840]!	; 0xb18

000115c8 <fclose@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #32, 20	; 0x20000
   115d0:	ldr	pc, [ip, #2832]!	; 0xb10

000115d4 <ether_ntoa@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #32, 20	; 0x20000
   115dc:	ldr	pc, [ip, #2824]!	; 0xb08

000115e0 <__overflow@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #32, 20	; 0x20000
   115e8:	ldr	pc, [ip, #2816]!	; 0xb00

000115ec <getnameinfo@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #32, 20	; 0x20000
   115f4:	ldr	pc, [ip, #2808]!	; 0xaf8

000115f8 <strrchr@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #32, 20	; 0x20000
   11600:	ldr	pc, [ip, #2800]!	; 0xaf0

00011604 <vfprintf@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #32, 20	; 0x20000
   1160c:	ldr	pc, [ip, #2792]!	; 0xae8

00011610 <fputc@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #32, 20	; 0x20000
   11618:	ldr	pc, [ip, #2784]!	; 0xae0

0001161c <sscanf@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #32, 20	; 0x20000
   11624:	ldr	pc, [ip, #2776]!	; 0xad8

00011628 <putc@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #32, 20	; 0x20000
   11630:	ldr	pc, [ip, #2768]!	; 0xad0

00011634 <flockfile@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #32, 20	; 0x20000
   1163c:	ldr	pc, [ip, #2760]!	; 0xac8

00011640 <vsnprintf@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #32, 20	; 0x20000
   11648:	ldr	pc, [ip, #2752]!	; 0xac0

0001164c <fopen64@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #32, 20	; 0x20000
   11654:	ldr	pc, [ip, #2744]!	; 0xab8

00011658 <qsort@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #32, 20	; 0x20000
   11660:	ldr	pc, [ip, #2736]!	; 0xab0

00011664 <explicit_bzero@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #32, 20	; 0x20000
   1166c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011670 <freeaddrinfo@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #32, 20	; 0x20000
   11678:	ldr	pc, [ip, #2720]!	; 0xaa0

0001167c <getaddrinfo@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #32, 20	; 0x20000
   11684:	ldr	pc, [ip, #2712]!	; 0xa98

00011688 <socket@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #32, 20	; 0x20000
   11690:	ldr	pc, [ip, #2704]!	; 0xa90

00011694 <if_nametoindex@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #32, 20	; 0x20000
   1169c:	ldr	pc, [ip, #2696]!	; 0xa88

000116a0 <strncmp@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #32, 20	; 0x20000
   116a8:	ldr	pc, [ip, #2688]!	; 0xa80

000116ac <abort@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #32, 20	; 0x20000
   116b4:	ldr	pc, [ip, #2680]!	; 0xa78

000116b8 <close@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #32, 20	; 0x20000
   116c0:	ldr	pc, [ip, #2672]!	; 0xa70

000116c4 <__assert_fail@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #32, 20	; 0x20000
   116cc:	ldr	pc, [ip, #2664]!	; 0xa68

000116d0 <ftello64@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #32, 20	; 0x20000
   116d8:	ldr	pc, [ip, #2656]!	; 0xa60

Disassembly of section .text:

000116dc <argp_parse@@Base-0x5a74>:
   116dc:	mov	fp, #0
   116e0:	mov	lr, #0
   116e4:	pop	{r1}		; (ldr r1, [sp], #4)
   116e8:	mov	r2, sp
   116ec:	push	{r2}		; (str r2, [sp, #-4]!)
   116f0:	push	{r0}		; (str r0, [sp, #-4]!)
   116f4:	ldr	ip, [pc, #16]	; 1170c <ftello64@plt+0x3c>
   116f8:	push	{ip}		; (str ip, [sp, #-4]!)
   116fc:	ldr	r0, [pc, #12]	; 11710 <ftello64@plt+0x40>
   11700:	ldr	r3, [pc, #12]	; 11714 <ftello64@plt+0x44>
   11704:	bl	114d8 <__libc_start_main@plt>
   11708:	bl	116ac <abort@plt>
   1170c:	andeq	sp, r1, r8, asr #21
   11710:	andeq	r1, r1, r4, lsl #16
   11714:	andeq	sp, r1, r8, ror #20
   11718:	ldr	r3, [pc, #20]	; 11734 <ftello64@plt+0x64>
   1171c:	ldr	r2, [pc, #20]	; 11738 <ftello64@plt+0x68>
   11720:	add	r3, pc, r3
   11724:	ldr	r2, [r3, r2]
   11728:	cmp	r2, #0
   1172c:	bxeq	lr
   11730:	b	11508 <__gmon_start__@plt>
   11734:	ldrdeq	r0, [r2], -r8
   11738:	andeq	r0, r0, ip, lsr r1
   1173c:	ldr	r3, [pc, #28]	; 11760 <ftello64@plt+0x90>
   11740:	ldr	r0, [pc, #28]	; 11764 <ftello64@plt+0x94>
   11744:	sub	r3, r3, r0
   11748:	cmp	r3, #6
   1174c:	bxls	lr
   11750:	ldr	r3, [pc, #16]	; 11768 <ftello64@plt+0x98>
   11754:	cmp	r3, #0
   11758:	bxeq	lr
   1175c:	bx	r3
   11760:	andeq	r2, r3, pc, lsr fp
   11764:	andeq	r2, r3, ip, lsr fp
   11768:	andeq	r0, r0, r0
   1176c:	ldr	r1, [pc, #36]	; 11798 <ftello64@plt+0xc8>
   11770:	ldr	r0, [pc, #36]	; 1179c <ftello64@plt+0xcc>
   11774:	sub	r1, r1, r0
   11778:	asr	r1, r1, #2
   1177c:	add	r1, r1, r1, lsr #31
   11780:	asrs	r1, r1, #1
   11784:	bxeq	lr
   11788:	ldr	r3, [pc, #16]	; 117a0 <ftello64@plt+0xd0>
   1178c:	cmp	r3, #0
   11790:	bxeq	lr
   11794:	bx	r3
   11798:	andeq	r2, r3, ip, lsr fp
   1179c:	andeq	r2, r3, ip, lsr fp
   117a0:	andeq	r0, r0, r0
   117a4:	push	{r4, lr}
   117a8:	ldr	r4, [pc, #24]	; 117c8 <ftello64@plt+0xf8>
   117ac:	ldrb	r3, [r4]
   117b0:	cmp	r3, #0
   117b4:	popne	{r4, pc}
   117b8:	bl	1173c <ftello64@plt+0x6c>
   117bc:	mov	r3, #1
   117c0:	strb	r3, [r4]
   117c4:	pop	{r4, pc}
   117c8:	andeq	r2, r3, r0, asr fp
   117cc:	ldr	r0, [pc, #40]	; 117fc <ftello64@plt+0x12c>
   117d0:	ldr	r3, [r0]
   117d4:	cmp	r3, #0
   117d8:	bne	117e0 <ftello64@plt+0x110>
   117dc:	b	1176c <ftello64@plt+0x9c>
   117e0:	ldr	r3, [pc, #24]	; 11800 <ftello64@plt+0x130>
   117e4:	cmp	r3, #0
   117e8:	beq	117dc <ftello64@plt+0x10c>
   117ec:	push	{r4, lr}
   117f0:	blx	r3
   117f4:	pop	{r4, lr}
   117f8:	b	1176c <ftello64@plt+0x9c>
   117fc:	andeq	r1, r3, r4, lsl pc
   11800:	andeq	r0, r0, r0
   11804:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11808:	mov	r5, r0
   1180c:	mov	r4, r1
   11810:	ldr	r0, [r1]
   11814:	bl	181f8 <_obstack_memory_used@@Base+0x34>
   11818:	mov	r1, r4
   1181c:	mov	r0, r5
   11820:	bl	136bc <ftello64@plt+0x1fec>
   11824:	mov	r2, #0
   11828:	mov	r1, #1
   1182c:	mov	r0, #2
   11830:	bl	11688 <socket@plt>
   11834:	subs	sl, r0, #0
   11838:	blt	11874 <ftello64@plt+0x1a4>
   1183c:	ldr	r3, [pc, #272]	; 11954 <ftello64@plt+0x284>
   11840:	ldr	r4, [r3]
   11844:	ldr	r3, [pc, #268]	; 11958 <ftello64@plt+0x288>
   11848:	ldr	r3, [r3]
   1184c:	rsb	r3, r3, r3, lsl #3
   11850:	add	r3, r4, r3, lsl #3
   11854:	cmp	r4, r3
   11858:	bcs	1194c <ftello64@plt+0x27c>
   1185c:	add	r4, r4, #56	; 0x38
   11860:	mov	r5, #0
   11864:	ldr	r6, [pc, #240]	; 1195c <ftello64@plt+0x28c>
   11868:	ldr	r8, [pc, #228]	; 11954 <ftello64@plt+0x284>
   1186c:	ldr	r7, [pc, #228]	; 11958 <ftello64@plt+0x288>
   11870:	b	118d0 <ftello64@plt+0x200>
   11874:	bl	11568 <__errno_location@plt>
   11878:	ldr	r2, [pc, #224]	; 11960 <ftello64@plt+0x290>
   1187c:	ldr	r1, [r0]
   11880:	mov	r0, #0
   11884:	bl	114a8 <error@plt>
   11888:	mov	r0, #1
   1188c:	bl	1152c <exit@plt>
   11890:	ldr	r3, [pc, #204]	; 11964 <ftello64@plt+0x294>
   11894:	ldr	r1, [r3]
   11898:	mov	r0, #32
   1189c:	bl	11628 <putc@plt>
   118a0:	b	11900 <ftello64@plt+0x230>
   118a4:	mov	r0, sl
   118a8:	bl	127b8 <ftello64@plt+0x10e8>
   118ac:	subs	r5, r0, #0
   118b0:	bne	11914 <ftello64@plt+0x244>
   118b4:	ldr	r3, [r7]
   118b8:	rsb	r3, r3, r3, lsl #3
   118bc:	ldr	r2, [r8]
   118c0:	add	r3, r2, r3, lsl #3
   118c4:	cmp	r4, r3
   118c8:	add	r4, r4, #56	; 0x38
   118cc:	bcs	11914 <ftello64@plt+0x244>
   118d0:	sub	r1, r4, #56	; 0x38
   118d4:	ldr	r3, [r6]
   118d8:	cmp	r3, #0
   118dc:	beq	118a4 <ftello64@plt+0x1d4>
   118e0:	mov	r9, r4
   118e4:	ldr	r0, [r4, #-56]	; 0xffffffc8
   118e8:	bl	11694 <if_nametoindex@plt>
   118ec:	cmp	r0, #0
   118f0:	beq	118b4 <ftello64@plt+0x1e4>
   118f4:	add	fp, r5, #1
   118f8:	cmp	r5, #0
   118fc:	bne	11890 <ftello64@plt+0x1c0>
   11900:	ldr	r1, [r9, #-56]	; 0xffffffc8
   11904:	ldr	r0, [pc, #92]	; 11968 <ftello64@plt+0x298>
   11908:	bl	113b8 <printf@plt>
   1190c:	mov	r5, fp
   11910:	b	118b4 <ftello64@plt+0x1e4>
   11914:	ldr	r3, [pc, #64]	; 1195c <ftello64@plt+0x28c>
   11918:	ldr	r3, [r3]
   1191c:	cmp	r3, #0
   11920:	cmpne	r5, #0
   11924:	bne	11938 <ftello64@plt+0x268>
   11928:	mov	r0, sl
   1192c:	bl	116b8 <close@plt>
   11930:	mov	r0, r5
   11934:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11938:	ldr	r3, [pc, #36]	; 11964 <ftello64@plt+0x294>
   1193c:	ldr	r1, [r3]
   11940:	mov	r0, #10
   11944:	bl	11628 <putc@plt>
   11948:	b	11928 <ftello64@plt+0x258>
   1194c:	mov	r5, #0
   11950:	b	11928 <ftello64@plt+0x258>
   11954:	andeq	r2, r3, ip, ror #23
   11958:	strdeq	r2, [r3], -r0
   1195c:	andeq	r2, r3, r4, lsl #24
   11960:	ldrdeq	sp, [r1], -r8
   11964:	andeq	r2, r3, ip, asr #22
   11968:	muleq	r1, ip, r0
   1196c:	push	{r4, lr}
   11970:	ldr	r1, [r1]
   11974:	ldr	r0, [r0]
   11978:	bl	113a0 <strcmp@plt>
   1197c:	pop	{r4, pc}
   11980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11984:	sub	sp, sp, #12
   11988:	str	r0, [sp, #4]
   1198c:	ldr	r3, [pc, #584]	; 11bdc <ftello64@plt+0x50c>
   11990:	ldr	r0, [r3]
   11994:	cmp	r0, #0
   11998:	beq	119d0 <ftello64@plt+0x300>
   1199c:	mov	r4, r3
   119a0:	mov	r6, #0
   119a4:	b	119b4 <ftello64@plt+0x2e4>
   119a8:	ldr	r0, [r4, #12]!
   119ac:	cmp	r0, #0
   119b0:	beq	119d4 <ftello64@plt+0x304>
   119b4:	ldr	r3, [r4, #8]
   119b8:	cmp	r3, #0
   119bc:	bne	119a8 <ftello64@plt+0x2d8>
   119c0:	bl	11544 <strlen@plt>
   119c4:	add	r6, r6, #1
   119c8:	add	r6, r6, r0
   119cc:	b	119a8 <ftello64@plt+0x2d8>
   119d0:	mov	r6, #0
   119d4:	add	r0, r6, #80	; 0x50
   119d8:	bl	18a00 <_obstack_memory_used@@Base+0x83c>
   119dc:	mov	r9, r0
   119e0:	add	r7, r0, #80	; 0x50
   119e4:	ldr	r3, [pc, #496]	; 11bdc <ftello64@plt+0x50c>
   119e8:	ldr	r4, [r3]
   119ec:	cmp	r4, #0
   119f0:	beq	11a88 <ftello64@plt+0x3b8>
   119f4:	mov	r8, #0
   119f8:	mov	r5, r3
   119fc:	mov	fp, r8
   11a00:	b	11a20 <ftello64@plt+0x350>
   11a04:	mov	r3, r7
   11a08:	add	r7, r3, #1
   11a0c:	strb	fp, [r3]
   11a10:	mov	r8, sl
   11a14:	ldr	r4, [r5, #12]!
   11a18:	cmp	r4, #0
   11a1c:	beq	11a8c <ftello64@plt+0x3bc>
   11a20:	ldr	r3, [r5, #8]
   11a24:	cmp	r3, #0
   11a28:	bne	11a14 <ftello64@plt+0x344>
   11a2c:	ldr	r3, [r5, #4]
   11a30:	tst	r3, #72	; 0x48
   11a34:	bne	11a14 <ftello64@plt+0x344>
   11a38:	add	sl, r8, #1
   11a3c:	str	r7, [r9, r8, lsl #2]
   11a40:	mov	r2, #2
   11a44:	ldr	r1, [pc, #404]	; 11be0 <ftello64@plt+0x510>
   11a48:	mov	r0, r4
   11a4c:	bl	116a0 <strncmp@plt>
   11a50:	cmp	r0, #0
   11a54:	addeq	r4, r4, #2
   11a58:	ldrb	r8, [r4]
   11a5c:	cmp	r8, #0
   11a60:	beq	11a04 <ftello64@plt+0x334>
   11a64:	bl	114f0 <__ctype_tolower_loc@plt>
   11a68:	ldr	r1, [r0]
   11a6c:	mov	r3, r7
   11a70:	ldr	r2, [r1, r8, lsl #2]
   11a74:	strb	r2, [r3], #1
   11a78:	ldrb	r8, [r4, #1]!
   11a7c:	cmp	r8, #0
   11a80:	bne	11a70 <ftello64@plt+0x3a0>
   11a84:	b	11a08 <ftello64@plt+0x338>
   11a88:	mov	r8, #0
   11a8c:	ldr	r3, [pc, #336]	; 11be4 <ftello64@plt+0x514>
   11a90:	mov	r2, #4
   11a94:	mov	r1, r8
   11a98:	mov	r0, r9
   11a9c:	bl	11658 <qsort@plt>
   11aa0:	add	r6, r6, r8, lsl #1
   11aa4:	ldr	r4, [sp, #4]
   11aa8:	cmp	r4, #0
   11aac:	beq	11bc8 <ftello64@plt+0x4f8>
   11ab0:	mov	r0, r4
   11ab4:	bl	11544 <strlen@plt>
   11ab8:	add	r6, r6, #36	; 0x24
   11abc:	add	r0, r6, r0
   11ac0:	bl	18a00 <_obstack_memory_used@@Base+0x83c>
   11ac4:	mov	r5, r0
   11ac8:	str	r0, [sp, #4]
   11acc:	mov	r1, r4
   11ad0:	bl	11490 <strcpy@plt>
   11ad4:	mov	r0, r4
   11ad8:	bl	11544 <strlen@plt>
   11adc:	add	r7, r5, r0
   11ae0:	cmp	r8, #0
   11ae4:	beq	11b70 <ftello64@plt+0x4a0>
   11ae8:	sub	r4, r9, #4
   11aec:	mov	r5, #1
   11af0:	mov	fp, #44	; 0x2c
   11af4:	mov	sl, #32
   11af8:	b	11b10 <ftello64@plt+0x440>
   11afc:	strb	fp, [r7, r0]
   11b00:	add	r7, r3, #2
   11b04:	strb	sl, [r3, #1]
   11b08:	add	r5, r5, #1
   11b0c:	add	r4, r4, #4
   11b10:	cmp	r5, #1
   11b14:	beq	11b3c <ftello64@plt+0x46c>
   11b18:	ldr	r6, [r4]
   11b1c:	mov	r0, r6
   11b20:	bl	11544 <strlen@plt>
   11b24:	mov	r2, r0
   11b28:	ldr	r1, [r4, #4]
   11b2c:	mov	r0, r6
   11b30:	bl	116a0 <strncmp@plt>
   11b34:	cmp	r0, #0
   11b38:	beq	11b68 <ftello64@plt+0x498>
   11b3c:	ldr	r6, [r4, #4]
   11b40:	mov	r1, r6
   11b44:	mov	r0, r7
   11b48:	bl	11490 <strcpy@plt>
   11b4c:	mov	r0, r6
   11b50:	bl	11544 <strlen@plt>
   11b54:	add	r3, r7, r0
   11b58:	cmp	r5, r8
   11b5c:	bcc	11afc <ftello64@plt+0x42c>
   11b60:	mov	r7, r3
   11b64:	b	11b70 <ftello64@plt+0x4a0>
   11b68:	cmp	r5, r8
   11b6c:	bcc	11b08 <ftello64@plt+0x438>
   11b70:	ldr	r4, [pc, #112]	; 11be8 <ftello64@plt+0x518>
   11b74:	mov	ip, r7
   11b78:	add	r5, r4, #32
   11b7c:	mov	lr, r4
   11b80:	ldm	lr!, {r0, r1, r2, r3}
   11b84:	str	r0, [ip]
   11b88:	str	r1, [ip, #4]
   11b8c:	str	r2, [ip, #8]
   11b90:	str	r3, [ip, #12]
   11b94:	mov	r4, lr
   11b98:	add	ip, ip, #16
   11b9c:	cmp	lr, r5
   11ba0:	bne	11b7c <ftello64@plt+0x4ac>
   11ba4:	ldr	r0, [lr]
   11ba8:	str	r0, [ip]
   11bac:	mov	r3, #0
   11bb0:	strb	r3, [r7, #35]	; 0x23
   11bb4:	mov	r0, r9
   11bb8:	bl	17d44 <argp_parse@@Base+0xbf4>
   11bbc:	ldr	r0, [sp, #4]
   11bc0:	add	sp, sp, #12
   11bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bc8:	add	r0, r6, #36	; 0x24
   11bcc:	bl	18a00 <_obstack_memory_used@@Base+0x83c>
   11bd0:	mov	r7, r0
   11bd4:	str	r0, [sp, #4]
   11bd8:	b	11ae0 <ftello64@plt+0x410>
   11bdc:	andeq	r2, r3, r8, asr #2
   11be0:	andeq	sp, r1, r8, ror #21
   11be4:	andeq	r1, r1, ip, ror #18
   11be8:	andeq	sp, r1, ip, ror #21
   11bec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bf0:	ldr	r3, [pc, #164]	; 11c9c <ftello64@plt+0x5cc>
   11bf4:	ldr	r5, [r3]
   11bf8:	cmp	r5, #0
   11bfc:	beq	11c94 <ftello64@plt+0x5c4>
   11c00:	mov	r4, r3
   11c04:	b	11c14 <ftello64@plt+0x544>
   11c08:	ldr	r5, [r4, #12]!
   11c0c:	cmp	r5, #0
   11c10:	beq	11c94 <ftello64@plt+0x5c4>
   11c14:	ldr	r3, [r4, #4]
   11c18:	cmp	r3, r0
   11c1c:	bne	11c08 <ftello64@plt+0x538>
   11c20:	ldr	r3, [r4, #8]
   11c24:	cmp	r3, #0
   11c28:	bne	11c08 <ftello64@plt+0x538>
   11c2c:	cmp	r1, #0
   11c30:	beq	11c88 <ftello64@plt+0x5b8>
   11c34:	mov	r9, r1
   11c38:	mov	r6, r4
   11c3c:	mov	r4, r6
   11c40:	ldr	r7, [r6]
   11c44:	mov	r1, r7
   11c48:	mov	r0, r9
   11c4c:	bl	11364 <strstr@plt>
   11c50:	subs	r8, r0, #0
   11c54:	beq	11c88 <ftello64@plt+0x5b8>
   11c58:	ldrb	r3, [r8, #-1]
   11c5c:	cmp	r3, #58	; 0x3a
   11c60:	bne	11c88 <ftello64@plt+0x5b8>
   11c64:	mov	r0, r7
   11c68:	bl	11544 <strlen@plt>
   11c6c:	ldrb	r3, [r8, r0]
   11c70:	cmp	r3, #58	; 0x3a
   11c74:	bne	11c88 <ftello64@plt+0x5b8>
   11c78:	ldr	r3, [r6, #12]!
   11c7c:	cmp	r3, #0
   11c80:	bne	11c3c <ftello64@plt+0x56c>
   11c84:	b	11c94 <ftello64@plt+0x5c4>
   11c88:	ldr	r3, [r4]
   11c8c:	cmp	r3, #0
   11c90:	movne	r5, r3
   11c94:	mov	r0, r5
   11c98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c9c:	andeq	r2, r3, r8, asr #2
   11ca0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ca4:	mov	r6, r0
   11ca8:	mov	r5, r1
   11cac:	mov	r8, r2
   11cb0:	cmp	r1, #1
   11cb4:	bls	11cd0 <ftello64@plt+0x600>
   11cb8:	ldrb	r3, [r0]
   11cbc:	cmp	r3, #45	; 0x2d
   11cc0:	addeq	r6, r0, #1
   11cc4:	subeq	r5, r1, #1
   11cc8:	moveq	r9, #1
   11ccc:	beq	11d00 <ftello64@plt+0x630>
   11cd0:	cmp	r5, #2
   11cd4:	movls	r9, #0
   11cd8:	bls	11d00 <ftello64@plt+0x630>
   11cdc:	mov	r2, #2
   11ce0:	ldr	r1, [pc, #112]	; 11d58 <ftello64@plt+0x688>
   11ce4:	mov	r0, r6
   11ce8:	bl	11574 <strncasecmp@plt>
   11cec:	cmp	r0, #0
   11cf0:	movne	r9, #0
   11cf4:	addeq	r6, r6, #2
   11cf8:	subeq	r5, r5, #2
   11cfc:	moveq	r9, #1
   11d00:	ldr	r3, [pc, #84]	; 11d5c <ftello64@plt+0x68c>
   11d04:	ldr	r0, [r3]
   11d08:	cmp	r0, #0
   11d0c:	beq	11d50 <ftello64@plt+0x680>
   11d10:	mov	r4, r3
   11d14:	mov	r7, r4
   11d18:	mov	r2, r5
   11d1c:	mov	r1, r6
   11d20:	bl	11574 <strncasecmp@plt>
   11d24:	cmp	r0, #0
   11d28:	beq	11d3c <ftello64@plt+0x66c>
   11d2c:	ldr	r0, [r4, #12]!
   11d30:	cmp	r0, #0
   11d34:	bne	11d14 <ftello64@plt+0x644>
   11d38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d3c:	ldr	r3, [r4, #8]
   11d40:	eor	r3, r3, r9
   11d44:	str	r3, [r8]
   11d48:	ldr	r0, [r4, #4]
   11d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d50:	mov	r0, #0
   11d54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d58:	andeq	sp, r1, r8, ror #21
   11d5c:	andeq	r2, r3, r8, asr #2
   11d60:	push	{r4, r5, r6, lr}
   11d64:	mov	r4, r0
   11d68:	mov	r5, r1
   11d6c:	bl	11544 <strlen@plt>
   11d70:	mov	r2, r5
   11d74:	mov	r1, r0
   11d78:	mov	r0, r4
   11d7c:	bl	11ca0 <ftello64@plt+0x5d0>
   11d80:	pop	{r4, r5, r6, pc}
   11d84:	subs	r2, r2, #1
   11d88:	beq	11dc8 <ftello64@plt+0x6f8>
   11d8c:	ldr	r3, [pc, #64]	; 11dd4 <ftello64@plt+0x704>
   11d90:	ldr	r3, [r3, #252]	; 0xfc
   11d94:	cmp	r3, #0
   11d98:	beq	11dc8 <ftello64@plt+0x6f8>
   11d9c:	ldr	ip, [pc, #52]	; 11dd8 <ftello64@plt+0x708>
   11da0:	tst	r0, r3
   11da4:	ldrne	r3, [ip, #4]
   11da8:	strbne	r3, [r1]
   11dac:	subne	r2, r2, #1
   11db0:	addne	r1, r1, #1
   11db4:	cmp	r2, #0
   11db8:	beq	11dc8 <ftello64@plt+0x6f8>
   11dbc:	ldr	r3, [ip, #8]!
   11dc0:	cmp	r3, #0
   11dc4:	bne	11da0 <ftello64@plt+0x6d0>
   11dc8:	mov	r3, #0
   11dcc:	strb	r3, [r1]
   11dd0:	bx	lr
   11dd4:	andeq	r2, r3, r8, asr #2
   11dd8:	andeq	r2, r3, r4, asr #4
   11ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11de0:	sub	sp, sp, #12
   11de4:	str	r1, [sp]
   11de8:	str	r2, [sp, #4]
   11dec:	subs	r5, r0, #0
   11df0:	beq	11ec4 <ftello64@plt+0x7f4>
   11df4:	mov	r6, #0
   11df8:	mov	r7, #1
   11dfc:	mov	r4, r7
   11e00:	ldr	sl, [pc, #196]	; 11ecc <ftello64@plt+0x7fc>
   11e04:	mov	r9, r6
   11e08:	ldr	fp, [pc, #192]	; 11ed0 <ftello64@plt+0x800>
   11e0c:	b	11e58 <ftello64@plt+0x788>
   11e10:	ldr	r1, [fp]
   11e14:	ldr	r0, [sp, #4]
   11e18:	bl	11628 <putc@plt>
   11e1c:	add	r6, r6, #1
   11e20:	mov	r1, r8
   11e24:	mov	r0, sl
   11e28:	bl	113b8 <printf@plt>
   11e2c:	add	r6, r6, r0
   11e30:	bic	r5, r5, r4
   11e34:	mov	r7, r9
   11e38:	lsls	r4, r4, #1
   11e3c:	movne	r3, #1
   11e40:	moveq	r3, #0
   11e44:	cmp	r5, #0
   11e48:	moveq	r3, #0
   11e4c:	andne	r3, r3, #1
   11e50:	cmp	r3, #0
   11e54:	beq	11e80 <ftello64@plt+0x7b0>
   11e58:	tst	r5, r4
   11e5c:	beq	11e38 <ftello64@plt+0x768>
   11e60:	ldr	r1, [sp]
   11e64:	mov	r0, r4
   11e68:	bl	11bec <ftello64@plt+0x51c>
   11e6c:	subs	r8, r0, #0
   11e70:	beq	11e38 <ftello64@plt+0x768>
   11e74:	cmp	r7, #0
   11e78:	bne	11e20 <ftello64@plt+0x750>
   11e7c:	b	11e10 <ftello64@plt+0x740>
   11e80:	cmp	r5, #0
   11e84:	beq	11ea0 <ftello64@plt+0x7d0>
   11e88:	cmp	r7, #0
   11e8c:	beq	11eac <ftello64@plt+0x7dc>
   11e90:	mov	r1, r5
   11e94:	ldr	r0, [pc, #56]	; 11ed4 <ftello64@plt+0x804>
   11e98:	bl	113b8 <printf@plt>
   11e9c:	add	r6, r6, r0
   11ea0:	mov	r0, r6
   11ea4:	add	sp, sp, #12
   11ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eac:	ldr	r3, [pc, #28]	; 11ed0 <ftello64@plt+0x800>
   11eb0:	ldr	r1, [r3]
   11eb4:	ldr	r0, [sp, #4]
   11eb8:	bl	11628 <putc@plt>
   11ebc:	add	r6, r6, #1
   11ec0:	b	11e90 <ftello64@plt+0x7c0>
   11ec4:	mov	r6, r5
   11ec8:	b	11ea0 <ftello64@plt+0x7d0>
   11ecc:	muleq	r1, ip, r0
   11ed0:	andeq	r2, r3, ip, asr #22
   11ed4:	andeq	sp, r1, r0, lsl fp
   11ed8:	push	{r4, r5, r6, r7, lr}
   11edc:	sub	sp, sp, #76	; 0x4c
   11ee0:	mov	r7, r0
   11ee4:	mov	r4, r1
   11ee8:	mov	r5, r2
   11eec:	mov	r2, #32
   11ef0:	mov	r1, #0
   11ef4:	add	r0, sp, #24
   11ef8:	bl	11598 <memset@plt>
   11efc:	mov	r3, #2
   11f00:	str	r3, [sp, #28]
   11f04:	add	r3, sp, #20
   11f08:	add	r2, sp, #24
   11f0c:	mov	r1, #0
   11f10:	mov	r0, r5
   11f14:	bl	1167c <getaddrinfo@plt>
   11f18:	cmp	r0, #0
   11f1c:	bne	11fd8 <ftello64@plt+0x908>
   11f20:	ldr	r3, [sp, #20]
   11f24:	cmp	r3, #0
   11f28:	beq	12080 <ftello64@plt+0x9b0>
   11f2c:	ldr	r2, [r3, #4]
   11f30:	cmp	r2, #2
   11f34:	beq	11f50 <ftello64@plt+0x880>
   11f38:	ldr	r3, [r3, #28]
   11f3c:	cmp	r3, #0
   11f40:	beq	12080 <ftello64@plt+0x9b0>
   11f44:	ldr	r2, [r3, #4]
   11f48:	cmp	r2, #2
   11f4c:	bne	11f38 <ftello64@plt+0x868>
   11f50:	ldr	r1, [r3, #16]
   11f54:	ldr	r0, [r3, #20]
   11f58:	mov	r3, #1
   11f5c:	str	r3, [sp, #8]
   11f60:	mov	r3, #0
   11f64:	str	r3, [sp, #4]
   11f68:	str	r3, [sp]
   11f6c:	mov	r3, #16
   11f70:	add	r2, sp, #56	; 0x38
   11f74:	bl	115ec <getnameinfo@plt>
   11f78:	mov	r6, r0
   11f7c:	ldr	r0, [sp, #20]
   11f80:	bl	11670 <freeaddrinfo@plt>
   11f84:	cmp	r6, #0
   11f88:	bne	11ffc <ftello64@plt+0x92c>
   11f8c:	mov	r3, #2
   11f90:	strh	r3, [r4, #16]
   11f94:	add	r1, r4, #20
   11f98:	add	r0, sp, #56	; 0x38
   11f9c:	bl	11394 <inet_aton@plt>
   11fa0:	cmp	r0, #0
   11fa4:	beq	12024 <ftello64@plt+0x954>
   11fa8:	mov	r2, r4
   11fac:	ldr	r1, [pc, #240]	; 120a4 <ftello64@plt+0x9d4>
   11fb0:	mov	r0, r7
   11fb4:	bl	17e54 <argp_parse@@Base+0xd04>
   11fb8:	cmp	r0, #0
   11fbc:	blt	12040 <ftello64@plt+0x970>
   11fc0:	ldr	r3, [pc, #224]	; 120a8 <ftello64@plt+0x9d8>
   11fc4:	ldr	r0, [r3]
   11fc8:	cmp	r0, #0
   11fcc:	bne	12060 <ftello64@plt+0x990>
   11fd0:	add	sp, sp, #76	; 0x4c
   11fd4:	pop	{r4, r5, r6, r7, pc}
   11fd8:	bl	113e8 <gai_strerror@plt>
   11fdc:	str	r0, [sp]
   11fe0:	mov	r3, r5
   11fe4:	ldr	r2, [pc, #192]	; 120ac <ftello64@plt+0x9dc>
   11fe8:	mov	r1, #0
   11fec:	mov	r0, r1
   11ff0:	bl	114a8 <error@plt>
   11ff4:	mvn	r0, #0
   11ff8:	b	11fd0 <ftello64@plt+0x900>
   11ffc:	mov	r0, r6
   12000:	bl	113e8 <gai_strerror@plt>
   12004:	str	r0, [sp]
   12008:	mov	r3, r5
   1200c:	ldr	r2, [pc, #152]	; 120ac <ftello64@plt+0x9dc>
   12010:	mov	r1, #0
   12014:	mov	r0, r1
   12018:	bl	114a8 <error@plt>
   1201c:	mvn	r0, #0
   12020:	b	11fd0 <ftello64@plt+0x900>
   12024:	add	r3, sp, #56	; 0x38
   12028:	ldr	r2, [pc, #128]	; 120b0 <ftello64@plt+0x9e0>
   1202c:	mov	r1, #0
   12030:	mov	r0, r1
   12034:	bl	114a8 <error@plt>
   12038:	mvn	r0, #0
   1203c:	b	11fd0 <ftello64@plt+0x900>
   12040:	bl	11568 <__errno_location@plt>
   12044:	ldr	r3, [pc, #104]	; 120b4 <ftello64@plt+0x9e4>
   12048:	ldr	r2, [pc, #104]	; 120b8 <ftello64@plt+0x9e8>
   1204c:	ldr	r1, [r0]
   12050:	mov	r0, #0
   12054:	bl	114a8 <error@plt>
   12058:	mvn	r0, #0
   1205c:	b	11fd0 <ftello64@plt+0x900>
   12060:	ldr	r0, [r4, #20]
   12064:	bl	11424 <inet_ntoa@plt>
   12068:	mov	r2, r0
   1206c:	mov	r1, r4
   12070:	ldr	r0, [pc, #68]	; 120bc <ftello64@plt+0x9ec>
   12074:	bl	113b8 <printf@plt>
   12078:	mov	r0, r6
   1207c:	b	11fd0 <ftello64@plt+0x900>
   12080:	mov	r3, r5
   12084:	ldr	r2, [pc, #52]	; 120c0 <ftello64@plt+0x9f0>
   12088:	mov	r1, #0
   1208c:	mov	r0, r1
   12090:	bl	114a8 <error@plt>
   12094:	ldr	r0, [sp, #20]
   12098:	bl	11670 <freeaddrinfo@plt>
   1209c:	mvn	r0, #0
   120a0:	b	11fd0 <ftello64@plt+0x900>
   120a4:	andeq	r8, r0, r6, lsl r9
   120a8:	andeq	r2, r3, r0, lsl #24
   120ac:			; <UNDEFINED> instruction: 0x0001dbbc
   120b0:	ldrdeq	sp, [r1], -r4
   120b4:	strdeq	sp, [r1], -r0
   120b8:	strdeq	sp, [r1], -ip
   120bc:	andeq	sp, r1, r8, lsl #24
   120c0:	andeq	sp, r1, r0, lsr ip
   120c4:	push	{r4, r5, r6, lr}
   120c8:	mov	r6, r0
   120cc:	mov	r4, r1
   120d0:	mov	r5, r2
   120d4:	mov	r3, #2
   120d8:	strh	r3, [r1, #16]
   120dc:	add	r1, r1, #20
   120e0:	mov	r0, r2
   120e4:	bl	11394 <inet_aton@plt>
   120e8:	cmp	r0, #0
   120ec:	beq	12138 <ftello64@plt+0xa68>
   120f0:	mov	r2, r4
   120f4:	ldr	r1, [pc, #120]	; 12174 <ftello64@plt+0xaa4>
   120f8:	mov	r0, r6
   120fc:	bl	17e54 <argp_parse@@Base+0xd04>
   12100:	cmp	r0, #0
   12104:	blt	12154 <ftello64@plt+0xa84>
   12108:	ldr	r3, [pc, #104]	; 12178 <ftello64@plt+0xaa8>
   1210c:	ldr	r0, [r3]
   12110:	cmp	r0, #0
   12114:	popeq	{r4, r5, r6, pc}
   12118:	ldr	r0, [r4, #20]
   1211c:	bl	11424 <inet_ntoa@plt>
   12120:	mov	r2, r0
   12124:	mov	r1, r4
   12128:	ldr	r0, [pc, #76]	; 1217c <ftello64@plt+0xaac>
   1212c:	bl	113b8 <printf@plt>
   12130:	mov	r0, #0
   12134:	pop	{r4, r5, r6, pc}
   12138:	mov	r3, r5
   1213c:	ldr	r2, [pc, #60]	; 12180 <ftello64@plt+0xab0>
   12140:	mov	r1, #0
   12144:	mov	r0, r1
   12148:	bl	114a8 <error@plt>
   1214c:	mvn	r0, #0
   12150:	pop	{r4, r5, r6, pc}
   12154:	bl	11568 <__errno_location@plt>
   12158:	ldr	r3, [pc, #36]	; 12184 <ftello64@plt+0xab4>
   1215c:	ldr	r2, [pc, #36]	; 12188 <ftello64@plt+0xab8>
   12160:	ldr	r1, [r0]
   12164:	mov	r0, #0
   12168:	bl	114a8 <error@plt>
   1216c:	mvn	r0, #0
   12170:	pop	{r4, r5, r6, pc}
   12174:	andeq	r8, r0, ip, lsl r9
   12178:	andeq	r2, r3, r0, lsl #24
   1217c:	andeq	sp, r1, r8, ror #24
   12180:	ldrdeq	sp, [r1], -r4
   12184:	andeq	sp, r1, r8, asr ip
   12188:	strdeq	sp, [r1], -ip
   1218c:	push	{r4, r5, r6, r7, lr}
   12190:	sub	sp, sp, #76	; 0x4c
   12194:	mov	r7, r0
   12198:	mov	r4, r1
   1219c:	mov	r5, r2
   121a0:	mov	r2, #32
   121a4:	mov	r1, #0
   121a8:	add	r0, sp, #24
   121ac:	bl	11598 <memset@plt>
   121b0:	mov	r3, #2
   121b4:	str	r3, [sp, #28]
   121b8:	add	r3, sp, #20
   121bc:	add	r2, sp, #24
   121c0:	mov	r1, #0
   121c4:	mov	r0, r5
   121c8:	bl	1167c <getaddrinfo@plt>
   121cc:	cmp	r0, #0
   121d0:	bne	1228c <ftello64@plt+0xbbc>
   121d4:	ldr	r3, [sp, #20]
   121d8:	cmp	r3, #0
   121dc:	beq	12334 <ftello64@plt+0xc64>
   121e0:	ldr	r2, [r3, #4]
   121e4:	cmp	r2, #2
   121e8:	beq	12204 <ftello64@plt+0xb34>
   121ec:	ldr	r3, [r3, #28]
   121f0:	cmp	r3, #0
   121f4:	beq	12334 <ftello64@plt+0xc64>
   121f8:	ldr	r2, [r3, #4]
   121fc:	cmp	r2, #2
   12200:	bne	121ec <ftello64@plt+0xb1c>
   12204:	ldr	r1, [r3, #16]
   12208:	ldr	r0, [r3, #20]
   1220c:	mov	r3, #1
   12210:	str	r3, [sp, #8]
   12214:	mov	r3, #0
   12218:	str	r3, [sp, #4]
   1221c:	str	r3, [sp]
   12220:	mov	r3, #16
   12224:	add	r2, sp, #56	; 0x38
   12228:	bl	115ec <getnameinfo@plt>
   1222c:	mov	r6, r0
   12230:	ldr	r0, [sp, #20]
   12234:	bl	11670 <freeaddrinfo@plt>
   12238:	cmp	r6, #0
   1223c:	bne	122b0 <ftello64@plt+0xbe0>
   12240:	mov	r3, #2
   12244:	strh	r3, [r4, #16]
   12248:	add	r1, r4, #20
   1224c:	add	r0, sp, #56	; 0x38
   12250:	bl	11394 <inet_aton@plt>
   12254:	cmp	r0, #0
   12258:	beq	122d8 <ftello64@plt+0xc08>
   1225c:	mov	r2, r4
   12260:	ldr	r1, [pc, #240]	; 12358 <ftello64@plt+0xc88>
   12264:	mov	r0, r7
   12268:	bl	17e54 <argp_parse@@Base+0xd04>
   1226c:	cmp	r0, #0
   12270:	blt	122f4 <ftello64@plt+0xc24>
   12274:	ldr	r3, [pc, #224]	; 1235c <ftello64@plt+0xc8c>
   12278:	ldr	r0, [r3]
   1227c:	cmp	r0, #0
   12280:	bne	12314 <ftello64@plt+0xc44>
   12284:	add	sp, sp, #76	; 0x4c
   12288:	pop	{r4, r5, r6, r7, pc}
   1228c:	bl	113e8 <gai_strerror@plt>
   12290:	str	r0, [sp]
   12294:	mov	r3, r5
   12298:	ldr	r2, [pc, #192]	; 12360 <ftello64@plt+0xc90>
   1229c:	mov	r1, #0
   122a0:	mov	r0, r1
   122a4:	bl	114a8 <error@plt>
   122a8:	mvn	r0, #0
   122ac:	b	12284 <ftello64@plt+0xbb4>
   122b0:	mov	r0, r6
   122b4:	bl	113e8 <gai_strerror@plt>
   122b8:	str	r0, [sp]
   122bc:	mov	r3, r5
   122c0:	ldr	r2, [pc, #152]	; 12360 <ftello64@plt+0xc90>
   122c4:	mov	r1, #0
   122c8:	mov	r0, r1
   122cc:	bl	114a8 <error@plt>
   122d0:	mvn	r0, #0
   122d4:	b	12284 <ftello64@plt+0xbb4>
   122d8:	add	r3, sp, #56	; 0x38
   122dc:	ldr	r2, [pc, #128]	; 12364 <ftello64@plt+0xc94>
   122e0:	mov	r1, #0
   122e4:	mov	r0, r1
   122e8:	bl	114a8 <error@plt>
   122ec:	mvn	r0, #0
   122f0:	b	12284 <ftello64@plt+0xbb4>
   122f4:	bl	11568 <__errno_location@plt>
   122f8:	ldr	r3, [pc, #104]	; 12368 <ftello64@plt+0xc98>
   122fc:	ldr	r2, [pc, #104]	; 1236c <ftello64@plt+0xc9c>
   12300:	ldr	r1, [r0]
   12304:	mov	r0, #0
   12308:	bl	114a8 <error@plt>
   1230c:	mvn	r0, #0
   12310:	b	12284 <ftello64@plt+0xbb4>
   12314:	ldr	r0, [r4, #20]
   12318:	bl	11424 <inet_ntoa@plt>
   1231c:	mov	r2, r0
   12320:	mov	r1, r4
   12324:	ldr	r0, [pc, #68]	; 12370 <ftello64@plt+0xca0>
   12328:	bl	113b8 <printf@plt>
   1232c:	mov	r0, r6
   12330:	b	12284 <ftello64@plt+0xbb4>
   12334:	mov	r3, r5
   12338:	ldr	r2, [pc, #52]	; 12374 <ftello64@plt+0xca4>
   1233c:	mov	r1, #0
   12340:	mov	r0, r1
   12344:	bl	114a8 <error@plt>
   12348:	ldr	r0, [sp, #20]
   1234c:	bl	11670 <freeaddrinfo@plt>
   12350:	mvn	r0, #0
   12354:	b	12284 <ftello64@plt+0xbb4>
   12358:	andeq	r8, r0, r8, lsl r9
   1235c:	andeq	r2, r3, r0, lsl #24
   12360:			; <UNDEFINED> instruction: 0x0001dbbc
   12364:	ldrdeq	sp, [r1], -r4
   12368:	muleq	r1, r0, ip
   1236c:	strdeq	sp, [r1], -ip
   12370:	andeq	sp, r1, r0, lsr #25
   12374:	andeq	sp, r1, r0, lsr ip
   12378:	push	{r4, r5, r6, lr}
   1237c:	mov	r6, r0
   12380:	mov	r4, r1
   12384:	mov	r5, r2
   12388:	mov	r3, #2
   1238c:	strh	r3, [r1, #16]
   12390:	add	r1, r1, #20
   12394:	mov	r0, r2
   12398:	bl	11394 <inet_aton@plt>
   1239c:	cmp	r0, #0
   123a0:	beq	123ec <ftello64@plt+0xd1c>
   123a4:	mov	r2, r4
   123a8:	ldr	r1, [pc, #120]	; 12428 <ftello64@plt+0xd58>
   123ac:	mov	r0, r6
   123b0:	bl	17e54 <argp_parse@@Base+0xd04>
   123b4:	cmp	r0, #0
   123b8:	blt	12408 <ftello64@plt+0xd38>
   123bc:	ldr	r3, [pc, #104]	; 1242c <ftello64@plt+0xd5c>
   123c0:	ldr	r0, [r3]
   123c4:	cmp	r0, #0
   123c8:	popeq	{r4, r5, r6, pc}
   123cc:	ldr	r0, [r4, #20]
   123d0:	bl	11424 <inet_ntoa@plt>
   123d4:	mov	r2, r0
   123d8:	mov	r1, r4
   123dc:	ldr	r0, [pc, #76]	; 12430 <ftello64@plt+0xd60>
   123e0:	bl	113b8 <printf@plt>
   123e4:	mov	r0, #0
   123e8:	pop	{r4, r5, r6, pc}
   123ec:	mov	r3, r5
   123f0:	ldr	r2, [pc, #60]	; 12434 <ftello64@plt+0xd64>
   123f4:	mov	r1, #0
   123f8:	mov	r0, r1
   123fc:	bl	114a8 <error@plt>
   12400:	mvn	r0, #0
   12404:	pop	{r4, r5, r6, pc}
   12408:	bl	11568 <__errno_location@plt>
   1240c:	ldr	r3, [pc, #36]	; 12438 <ftello64@plt+0xd68>
   12410:	ldr	r2, [pc, #36]	; 1243c <ftello64@plt+0xd6c>
   12414:	ldr	r1, [r0]
   12418:	mov	r0, #0
   1241c:	bl	114a8 <error@plt>
   12420:	mvn	r0, #0
   12424:	pop	{r4, r5, r6, pc}
   12428:	andeq	r8, r0, sl, lsl r9
   1242c:	andeq	r2, r3, r0, lsl #24
   12430:	ldrdeq	sp, [r1], -ip
   12434:	ldrdeq	sp, [r1], -r4
   12438:	andeq	sp, r1, ip, asr #25
   1243c:	strdeq	sp, [r1], -ip
   12440:	push	{r4, r5, r6, r7, lr}
   12444:	sub	sp, sp, #12
   12448:	mov	r6, r0
   1244c:	mov	r4, r1
   12450:	mov	r7, r2
   12454:	mov	r0, r2
   12458:	bl	114fc <ether_aton@plt>
   1245c:	subs	r5, r0, #0
   12460:	beq	124b4 <ftello64@plt+0xde4>
   12464:	mov	r2, r4
   12468:	ldr	r1, [pc, #184]	; 12528 <ftello64@plt+0xe58>
   1246c:	mov	r0, r6
   12470:	bl	17e54 <argp_parse@@Base+0xd04>
   12474:	ldr	r3, [r5]
   12478:	str	r3, [r4, #18]
   1247c:	ldrh	r3, [r5, #4]
   12480:	strh	r3, [r4, #22]
   12484:	mov	r2, r4
   12488:	ldr	r1, [pc, #156]	; 1252c <ftello64@plt+0xe5c>
   1248c:	mov	r0, r6
   12490:	bl	17e54 <argp_parse@@Base+0xd04>
   12494:	cmp	r0, #0
   12498:	blt	124e8 <ftello64@plt+0xe18>
   1249c:	ldr	r3, [pc, #140]	; 12530 <ftello64@plt+0xe60>
   124a0:	ldr	r0, [r3]
   124a4:	cmp	r0, #0
   124a8:	bne	12508 <ftello64@plt+0xe38>
   124ac:	add	sp, sp, #12
   124b0:	pop	{r4, r5, r6, r7, pc}
   124b4:	mov	r1, sp
   124b8:	mov	r0, r7
   124bc:	bl	11370 <ether_hostton@plt>
   124c0:	cmp	r0, #0
   124c4:	moveq	r5, sp
   124c8:	beq	12464 <ftello64@plt+0xd94>
   124cc:	mov	r3, r7
   124d0:	ldr	r2, [pc, #92]	; 12534 <ftello64@plt+0xe64>
   124d4:	mov	r1, #0
   124d8:	mov	r0, r1
   124dc:	bl	114a8 <error@plt>
   124e0:	mvn	r0, #0
   124e4:	b	124ac <ftello64@plt+0xddc>
   124e8:	bl	11568 <__errno_location@plt>
   124ec:	ldr	r3, [pc, #68]	; 12538 <ftello64@plt+0xe68>
   124f0:	ldr	r2, [pc, #68]	; 1253c <ftello64@plt+0xe6c>
   124f4:	ldr	r1, [r0]
   124f8:	mov	r0, #0
   124fc:	bl	114a8 <error@plt>
   12500:	mvn	r0, #0
   12504:	b	124ac <ftello64@plt+0xddc>
   12508:	mov	r0, r5
   1250c:	bl	115d4 <ether_ntoa@plt>
   12510:	mov	r2, r0
   12514:	mov	r1, r4
   12518:	ldr	r0, [pc, #32]	; 12540 <ftello64@plt+0xe70>
   1251c:	bl	113b8 <printf@plt>
   12520:	mov	r0, #0
   12524:	b	124ac <ftello64@plt+0xddc>
   12528:	andeq	r8, r0, r7, lsr #18
   1252c:	andeq	r8, r0, r4, lsr #18
   12530:	andeq	r2, r3, r0, lsl #24
   12534:	andeq	sp, r1, ip, lsl #26
   12538:	andeq	sp, r1, r4, lsr sp
   1253c:	strdeq	sp, [r1], -ip
   12540:	andeq	sp, r1, r4, asr #26
   12544:	push	{r4, lr}
   12548:	mov	r4, r1
   1254c:	str	r2, [r1, #16]
   12550:	mov	r2, r1
   12554:	ldr	r1, [pc, #76]	; 125a8 <ftello64@plt+0xed8>
   12558:	bl	17e54 <argp_parse@@Base+0xd04>
   1255c:	cmp	r0, #0
   12560:	blt	1258c <ftello64@plt+0xebc>
   12564:	ldr	r3, [pc, #64]	; 125ac <ftello64@plt+0xedc>
   12568:	ldr	r0, [r3]
   1256c:	cmp	r0, #0
   12570:	popeq	{r4, pc}
   12574:	ldr	r2, [r4, #16]
   12578:	mov	r1, r4
   1257c:	ldr	r0, [pc, #44]	; 125b0 <ftello64@plt+0xee0>
   12580:	bl	113b8 <printf@plt>
   12584:	mov	r0, #0
   12588:	pop	{r4, pc}
   1258c:	bl	11568 <__errno_location@plt>
   12590:	ldr	r2, [pc, #28]	; 125b4 <ftello64@plt+0xee4>
   12594:	ldr	r1, [r0]
   12598:	mov	r0, #0
   1259c:	bl	114a8 <error@plt>
   125a0:	mvn	r0, #0
   125a4:	pop	{r4, pc}
   125a8:	andeq	r8, r0, r2, lsr #18
   125ac:	andeq	r2, r3, r0, lsl #24
   125b0:	andeq	sp, r1, r8, lsl #27
   125b4:	andeq	sp, r1, r4, ror sp
   125b8:	push	{r4, lr}
   125bc:	mov	r4, r1
   125c0:	str	r2, [r1, #16]
   125c4:	mov	r2, r1
   125c8:	ldr	r1, [pc, #76]	; 1261c <ftello64@plt+0xf4c>
   125cc:	bl	17e54 <argp_parse@@Base+0xd04>
   125d0:	cmp	r0, #0
   125d4:	blt	12600 <ftello64@plt+0xf30>
   125d8:	ldr	r3, [pc, #64]	; 12620 <ftello64@plt+0xf50>
   125dc:	ldr	r0, [r3]
   125e0:	cmp	r0, #0
   125e4:	popeq	{r4, pc}
   125e8:	ldr	r2, [r4, #16]
   125ec:	mov	r1, r4
   125f0:	ldr	r0, [pc, #44]	; 12624 <ftello64@plt+0xf54>
   125f4:	bl	113b8 <printf@plt>
   125f8:	mov	r0, #0
   125fc:	pop	{r4, pc}
   12600:	bl	11568 <__errno_location@plt>
   12604:	ldr	r2, [pc, #28]	; 12628 <ftello64@plt+0xf58>
   12608:	ldr	r1, [r0]
   1260c:	mov	r0, #0
   12610:	bl	114a8 <error@plt>
   12614:	mvn	r0, #0
   12618:	pop	{r4, pc}
   1261c:	andeq	r8, r0, lr, lsl r9
   12620:	andeq	r2, r3, r0, lsl #24
   12624:	andeq	sp, r1, r0, asr #27
   12628:	andeq	sp, r1, r8, lsr #27
   1262c:	push	{r4, r5, r6, r7, lr}
   12630:	sub	sp, sp, #36	; 0x24
   12634:	mov	r7, r0
   12638:	mov	r4, r1
   1263c:	mov	r5, r2
   12640:	mov	r6, r3
   12644:	mov	ip, sp
   12648:	mov	lr, r1
   1264c:	ldm	lr!, {r0, r1, r2, r3}
   12650:	stmia	ip!, {r0, r1, r2, r3}
   12654:	ldm	lr, {r0, r1, r2, r3}
   12658:	stm	ip, {r0, r1, r2, r3}
   1265c:	mov	r2, sp
   12660:	ldr	r1, [pc, #284]	; 12784 <ftello64@plt+0x10b4>
   12664:	mov	r0, r7
   12668:	bl	17e54 <argp_parse@@Base+0xd04>
   1266c:	cmp	r0, #0
   12670:	blt	126c4 <ftello64@plt+0xff4>
   12674:	ldrh	r3, [sp, #16]
   12678:	orr	r3, r3, r5
   1267c:	bic	r3, r3, r6
   12680:	strh	r3, [r4, #16]
   12684:	mov	r2, r4
   12688:	ldr	r1, [pc, #248]	; 12788 <ftello64@plt+0x10b8>
   1268c:	mov	r0, r7
   12690:	bl	17e54 <argp_parse@@Base+0xd04>
   12694:	cmp	r0, #0
   12698:	blt	126e0 <ftello64@plt+0x1010>
   1269c:	ldr	r3, [pc, #232]	; 1278c <ftello64@plt+0x10bc>
   126a0:	ldr	r0, [r3]
   126a4:	cmp	r0, #0
   126a8:	beq	1277c <ftello64@plt+0x10ac>
   126ac:	cmp	r5, #0
   126b0:	bne	12728 <ftello64@plt+0x1058>
   126b4:	ldr	r1, [pc, #212]	; 12790 <ftello64@plt+0x10c0>
   126b8:	ldr	r0, [pc, #212]	; 12794 <ftello64@plt+0x10c4>
   126bc:	bl	113b8 <printf@plt>
   126c0:	b	1275c <ftello64@plt+0x108c>
   126c4:	bl	11568 <__errno_location@plt>
   126c8:	ldr	r2, [pc, #200]	; 12798 <ftello64@plt+0x10c8>
   126cc:	ldr	r1, [r0]
   126d0:	mov	r0, #0
   126d4:	bl	114a8 <error@plt>
   126d8:	mvn	r0, #0
   126dc:	b	1277c <ftello64@plt+0x10ac>
   126e0:	bl	11568 <__errno_location@plt>
   126e4:	ldr	r2, [pc, #176]	; 1279c <ftello64@plt+0x10cc>
   126e8:	ldr	r1, [r0]
   126ec:	mov	r0, #0
   126f0:	bl	114a8 <error@plt>
   126f4:	mvn	r0, #0
   126f8:	b	1277c <ftello64@plt+0x10ac>
   126fc:	ldr	r0, [pc, #156]	; 127a0 <ftello64@plt+0x10d0>
   12700:	bl	113b8 <printf@plt>
   12704:	mov	r2, #44	; 0x2c
   12708:	mov	r1, #0
   1270c:	mov	r0, r6
   12710:	bl	11ddc <ftello64@plt+0x70c>
   12714:	ldr	r3, [pc, #136]	; 127a4 <ftello64@plt+0x10d4>
   12718:	ldr	r1, [r3]
   1271c:	mov	r0, #39	; 0x27
   12720:	bl	11628 <putc@plt>
   12724:	b	12770 <ftello64@plt+0x10a0>
   12728:	ldr	r1, [pc, #120]	; 127a8 <ftello64@plt+0x10d8>
   1272c:	ldr	r0, [pc, #96]	; 12794 <ftello64@plt+0x10c4>
   12730:	bl	113b8 <printf@plt>
   12734:	ldr	r0, [pc, #112]	; 127ac <ftello64@plt+0x10dc>
   12738:	bl	113b8 <printf@plt>
   1273c:	mov	r2, #44	; 0x2c
   12740:	mov	r1, #0
   12744:	mov	r0, r5
   12748:	bl	11ddc <ftello64@plt+0x70c>
   1274c:	ldr	r3, [pc, #80]	; 127a4 <ftello64@plt+0x10d4>
   12750:	ldr	r1, [r3]
   12754:	mov	r0, #39	; 0x27
   12758:	bl	11628 <putc@plt>
   1275c:	mov	r1, r4
   12760:	ldr	r0, [pc, #72]	; 127b0 <ftello64@plt+0x10e0>
   12764:	bl	113b8 <printf@plt>
   12768:	cmp	r6, #0
   1276c:	bne	126fc <ftello64@plt+0x102c>
   12770:	ldr	r0, [pc, #60]	; 127b4 <ftello64@plt+0x10e4>
   12774:	bl	114c0 <puts@plt>
   12778:	mov	r0, #0
   1277c:	add	sp, sp, #36	; 0x24
   12780:	pop	{r4, r5, r6, r7, pc}
   12784:	andeq	r8, r0, r3, lsl r9
   12788:	andeq	r8, r0, r4, lsl r9
   1278c:	andeq	r2, r3, r0, lsl #24
   12790:	andeq	sp, r1, ip, lsr lr
   12794:	andeq	sp, r1, r8, lsr #28
   12798:	andeq	sp, r1, r4, ror #27
   1279c:	strdeq	sp, [r1], -r8
   127a0:	andeq	sp, r1, r8, lsl lr
   127a4:	andeq	r2, r3, ip, asr #22
   127a8:	andeq	r0, r2, r8, lsl pc
   127ac:	andeq	sp, r1, r8, lsr lr
   127b0:	andeq	sp, r1, ip, lsl #28
   127b4:	andeq	lr, r1, r4, asr #7
   127b8:	push	{r4, r5, lr}
   127bc:	sub	sp, sp, #36	; 0x24
   127c0:	mov	r5, r0
   127c4:	mov	r4, r1
   127c8:	mov	r2, #32
   127cc:	mov	r1, #0
   127d0:	mov	r0, sp
   127d4:	bl	11598 <memset@plt>
   127d8:	mov	r2, #16
   127dc:	ldr	r1, [r4]
   127e0:	mov	r0, sp
   127e4:	bl	115a4 <strncpy@plt>
   127e8:	mov	r3, #0
   127ec:	strb	r3, [sp, #15]
   127f0:	ldr	r3, [r4, #4]
   127f4:	tst	r3, #8
   127f8:	bne	12894 <ftello64@plt+0x11c4>
   127fc:	ldr	r3, [r4, #4]
   12800:	tst	r3, #16
   12804:	bne	128b8 <ftello64@plt+0x11e8>
   12808:	ldr	r3, [r4, #4]
   1280c:	tst	r3, #32
   12810:	bne	128dc <ftello64@plt+0x120c>
   12814:	ldr	r3, [r4, #4]
   12818:	tst	r3, #64	; 0x40
   1281c:	bne	128f8 <ftello64@plt+0x1228>
   12820:	ldr	r3, [r4, #4]
   12824:	tst	r3, #1024	; 0x400
   12828:	bne	12914 <ftello64@plt+0x1244>
   1282c:	ldr	r3, [r4, #4]
   12830:	tst	r3, #128	; 0x80
   12834:	bne	12928 <ftello64@plt+0x1258>
   12838:	ldr	r3, [r4, #4]
   1283c:	tst	r3, #256	; 0x100
   12840:	bne	1293c <ftello64@plt+0x126c>
   12844:	ldr	r3, [r4, #4]
   12848:	tst	r3, #1
   1284c:	bne	12958 <ftello64@plt+0x1288>
   12850:	ldr	r2, [r4, #44]	; 0x2c
   12854:	cmp	r2, #0
   12858:	bne	12868 <ftello64@plt+0x1198>
   1285c:	ldr	r3, [r4, #48]	; 0x30
   12860:	cmp	r3, #0
   12864:	beq	12880 <ftello64@plt+0x11b0>
   12868:	ldr	r3, [r4, #48]	; 0x30
   1286c:	mov	r1, sp
   12870:	mov	r0, r5
   12874:	bl	1262c <ftello64@plt+0xf5c>
   12878:	cmp	r0, #0
   1287c:	bne	1288c <ftello64@plt+0x11bc>
   12880:	ldr	r0, [r4, #4]
   12884:	ands	r0, r0, #2
   12888:	bne	12974 <ftello64@plt+0x12a4>
   1288c:	add	sp, sp, #36	; 0x24
   12890:	pop	{r4, r5, pc}
   12894:	ldr	r2, [r4, #20]
   12898:	mov	r1, sp
   1289c:	mov	r0, r5
   128a0:	bl	11ed8 <ftello64@plt+0x808>
   128a4:	cmp	r0, #0
   128a8:	beq	127fc <ftello64@plt+0x112c>
   128ac:	cmp	r0, #0
   128b0:	bne	12878 <ftello64@plt+0x11a8>
   128b4:	b	1282c <ftello64@plt+0x115c>
   128b8:	ldr	r2, [r4, #24]
   128bc:	mov	r1, sp
   128c0:	mov	r0, r5
   128c4:	bl	120c4 <ftello64@plt+0x9f4>
   128c8:	cmp	r0, #0
   128cc:	beq	12808 <ftello64@plt+0x1138>
   128d0:	cmp	r0, #0
   128d4:	bne	1288c <ftello64@plt+0x11bc>
   128d8:	b	12838 <ftello64@plt+0x1168>
   128dc:	ldr	r2, [r4, #28]
   128e0:	mov	r1, sp
   128e4:	mov	r0, r5
   128e8:	bl	1218c <ftello64@plt+0xabc>
   128ec:	cmp	r0, #0
   128f0:	beq	12814 <ftello64@plt+0x1144>
   128f4:	b	1294c <ftello64@plt+0x127c>
   128f8:	ldr	r2, [r4, #32]
   128fc:	mov	r1, sp
   12900:	mov	r0, r5
   12904:	bl	12378 <ftello64@plt+0xca8>
   12908:	cmp	r0, #0
   1290c:	beq	12820 <ftello64@plt+0x1150>
   12910:	b	12968 <ftello64@plt+0x1298>
   12914:	ldr	r2, [r4, #52]	; 0x34
   12918:	mov	r1, sp
   1291c:	mov	r0, r5
   12920:	bl	12440 <ftello64@plt+0xd70>
   12924:	b	128ac <ftello64@plt+0x11dc>
   12928:	ldr	r2, [r4, #36]	; 0x24
   1292c:	mov	r1, sp
   12930:	mov	r0, r5
   12934:	bl	12544 <ftello64@plt+0xe74>
   12938:	b	128d0 <ftello64@plt+0x1200>
   1293c:	ldr	r2, [r4, #40]	; 0x28
   12940:	mov	r1, sp
   12944:	mov	r0, r5
   12948:	bl	125b8 <ftello64@plt+0xee8>
   1294c:	cmp	r0, #0
   12950:	beq	12844 <ftello64@plt+0x1174>
   12954:	b	1288c <ftello64@plt+0x11bc>
   12958:	ldr	r2, [r4, #8]
   1295c:	mov	r1, sp
   12960:	mov	r0, r5
   12964:	bl	16adc <ftello64@plt+0x540c>
   12968:	cmp	r0, #0
   1296c:	beq	12850 <ftello64@plt+0x1180>
   12970:	b	1288c <ftello64@plt+0x11bc>
   12974:	ldr	r3, [r4, #12]
   12978:	mov	r2, sp
   1297c:	ldr	r1, [r4]
   12980:	mov	r0, r5
   12984:	bl	151b8 <ftello64@plt+0x3ae8>
   12988:	mov	r0, #0
   1298c:	b	1288c <ftello64@plt+0x11bc>
   12990:	push	{r4, lr}
   12994:	ldr	r1, [r1]
   12998:	ldr	r0, [r0]
   1299c:	bl	113a0 <strcmp@plt>
   129a0:	pop	{r4, pc}
   129a4:	ldr	r3, [pc, #28]	; 129c8 <ftello64@plt+0x12f8>
   129a8:	cmp	r0, r3
   129ac:	beq	129b8 <ftello64@plt+0x12e8>
   129b0:	mov	r0, r1
   129b4:	bx	lr
   129b8:	push	{r4, lr}
   129bc:	ldr	r0, [pc, #8]	; 129cc <ftello64@plt+0x12fc>
   129c0:	bl	11980 <ftello64@plt+0x2b0>
   129c4:	pop	{r4, pc}
   129c8:	andeq	r0, r0, #4
   129cc:	muleq	r1, r8, lr
   129d0:	push	{r4, r5, r6, lr}
   129d4:	mov	r5, r0
   129d8:	ldr	r3, [pc, #64]	; 12a20 <ftello64@plt+0x1350>
   129dc:	ldr	r0, [r3]
   129e0:	cmp	r0, #0
   129e4:	beq	12a18 <ftello64@plt+0x1348>
   129e8:	mov	r4, r3
   129ec:	mov	r6, r4
   129f0:	mov	r1, r5
   129f4:	bl	113a0 <strcmp@plt>
   129f8:	cmp	r0, #0
   129fc:	beq	12a10 <ftello64@plt+0x1340>
   12a00:	ldr	r0, [r4, #12]!
   12a04:	cmp	r0, #0
   12a08:	bne	129ec <ftello64@plt+0x131c>
   12a0c:	mov	r6, #0
   12a10:	mov	r0, r6
   12a14:	pop	{r4, r5, r6, pc}
   12a18:	mov	r6, #0
   12a1c:	b	12a10 <ftello64@plt+0x1340>
   12a20:			; <UNDEFINED> instruction: 0x000322b4
   12a24:	push	{r4, r5, r6, r7, r8, lr}
   12a28:	mov	r5, r0
   12a2c:	mov	r2, #1
   12a30:	ldr	r3, [pc, #156]	; 12ad4 <ftello64@plt+0x1404>
   12a34:	str	r2, [r3]
   12a38:	ldr	r4, [pc, #152]	; 12ad8 <ftello64@plt+0x1408>
   12a3c:	ldr	r3, [pc, #152]	; 12adc <ftello64@plt+0x140c>
   12a40:	ldr	r1, [r3]
   12a44:	add	r1, r1, r2
   12a48:	str	r1, [r3]
   12a4c:	rsb	r1, r1, r1, lsl #3
   12a50:	lsl	r1, r1, #3
   12a54:	ldr	r0, [r4]
   12a58:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   12a5c:	str	r0, [r4]
   12a60:	cmp	r0, #0
   12a64:	beq	12abc <ftello64@plt+0x13ec>
   12a68:	ldr	r3, [pc, #108]	; 12adc <ftello64@plt+0x140c>
   12a6c:	ldr	r4, [r3]
   12a70:	rsb	r4, r4, r4, lsl #3
   12a74:	lsl	r4, r4, #3
   12a78:	sub	r4, r4, #56	; 0x38
   12a7c:	ldr	r3, [pc, #84]	; 12ad8 <ftello64@plt+0x1408>
   12a80:	ldr	r7, [r3]
   12a84:	add	r6, r7, r4
   12a88:	mov	ip, r6
   12a8c:	ldr	lr, [pc, #76]	; 12ae0 <ftello64@plt+0x1410>
   12a90:	ldm	lr!, {r0, r1, r2, r3}
   12a94:	stmia	ip!, {r0, r1, r2, r3}
   12a98:	ldm	lr!, {r0, r1, r2, r3}
   12a9c:	stmia	ip!, {r0, r1, r2, r3}
   12aa0:	ldm	lr!, {r0, r1, r2, r3}
   12aa4:	stmia	ip!, {r0, r1, r2, r3}
   12aa8:	ldm	lr, {r0, r1}
   12aac:	stm	ip, {r0, r1}
   12ab0:	str	r5, [r7, r4]
   12ab4:	mov	r0, r6
   12ab8:	pop	{r4, r5, r6, r7, r8, pc}
   12abc:	bl	11568 <__errno_location@plt>
   12ac0:	ldr	r2, [pc, #28]	; 12ae4 <ftello64@plt+0x1414>
   12ac4:	ldr	r1, [r0]
   12ac8:	mov	r0, #1
   12acc:	bl	114a8 <error@plt>
   12ad0:	b	12a68 <ftello64@plt+0x1398>
   12ad4:	strdeq	r2, [r3], -ip
   12ad8:	andeq	r2, r3, ip, ror #23
   12adc:	strdeq	r2, [r3], -r0
   12ae0:	andeq	sp, r1, r0, asr #28
   12ae4:	andeq	sp, r1, ip, lsr #29
   12ae8:	push	{r4, r5, lr}
   12aec:	sub	sp, sp, #12
   12af0:	mov	r5, r1
   12af4:	subs	r4, r0, #0
   12af8:	beq	12b20 <ftello64@plt+0x1450>
   12afc:	ldr	r3, [r4, #4]
   12b00:	tst	r3, #8
   12b04:	bne	12b3c <ftello64@plt+0x146c>
   12b08:	str	r5, [r4, #20]
   12b0c:	ldr	r3, [r4, #4]
   12b10:	orr	r3, r3, #8
   12b14:	str	r3, [r4, #4]
   12b18:	add	sp, sp, #12
   12b1c:	pop	{r4, r5, pc}
   12b20:	str	r1, [sp]
   12b24:	ldr	r3, [pc, #48]	; 12b5c <ftello64@plt+0x148c>
   12b28:	ldr	r2, [pc, #48]	; 12b60 <ftello64@plt+0x1490>
   12b2c:	mov	r1, #0
   12b30:	mov	r0, #1
   12b34:	bl	114a8 <error@plt>
   12b38:	b	12afc <ftello64@plt+0x142c>
   12b3c:	ldr	r3, [r4]
   12b40:	str	r3, [sp]
   12b44:	ldr	r3, [pc, #16]	; 12b5c <ftello64@plt+0x148c>
   12b48:	ldr	r2, [pc, #20]	; 12b64 <ftello64@plt+0x1494>
   12b4c:	mov	r1, #0
   12b50:	mov	r0, #1
   12b54:	bl	114a8 <error@plt>
   12b58:	b	12b08 <ftello64@plt+0x1438>
   12b5c:	andeq	sp, r1, r8, ror #23
   12b60:	ldrdeq	sp, [r1], -ip
   12b64:	andeq	sp, r1, r0, lsl #30
   12b68:	push	{r4, r5, lr}
   12b6c:	sub	sp, sp, #12
   12b70:	mov	r5, r1
   12b74:	subs	r4, r0, #0
   12b78:	beq	12ba0 <ftello64@plt+0x14d0>
   12b7c:	ldr	r3, [r4, #4]
   12b80:	tst	r3, #16
   12b84:	bne	12bbc <ftello64@plt+0x14ec>
   12b88:	str	r5, [r4, #24]
   12b8c:	ldr	r3, [r4, #4]
   12b90:	orr	r3, r3, #16
   12b94:	str	r3, [r4, #4]
   12b98:	add	sp, sp, #12
   12b9c:	pop	{r4, r5, pc}
   12ba0:	str	r1, [sp]
   12ba4:	ldr	r3, [pc, #48]	; 12bdc <ftello64@plt+0x150c>
   12ba8:	ldr	r2, [pc, #48]	; 12be0 <ftello64@plt+0x1510>
   12bac:	mov	r1, #0
   12bb0:	mov	r0, #1
   12bb4:	bl	114a8 <error@plt>
   12bb8:	b	12b7c <ftello64@plt+0x14ac>
   12bbc:	ldr	r3, [r4]
   12bc0:	str	r3, [sp]
   12bc4:	ldr	r3, [pc, #16]	; 12bdc <ftello64@plt+0x150c>
   12bc8:	ldr	r2, [pc, #20]	; 12be4 <ftello64@plt+0x1514>
   12bcc:	mov	r1, #0
   12bd0:	mov	r0, #1
   12bd4:	bl	114a8 <error@plt>
   12bd8:	b	12b88 <ftello64@plt+0x14b8>
   12bdc:	andeq	sp, r1, r8, lsr #30
   12be0:	ldrdeq	sp, [r1], -ip
   12be4:	andeq	sp, r1, r0, lsl #30
   12be8:	push	{r4, r5, lr}
   12bec:	sub	sp, sp, #12
   12bf0:	mov	r5, r1
   12bf4:	subs	r4, r0, #0
   12bf8:	beq	12c20 <ftello64@plt+0x1550>
   12bfc:	ldr	r3, [r4, #4]
   12c00:	tst	r3, #32
   12c04:	bne	12c3c <ftello64@plt+0x156c>
   12c08:	str	r5, [r4, #28]
   12c0c:	ldr	r3, [r4, #4]
   12c10:	orr	r3, r3, #32
   12c14:	str	r3, [r4, #4]
   12c18:	add	sp, sp, #12
   12c1c:	pop	{r4, r5, pc}
   12c20:	str	r1, [sp]
   12c24:	ldr	r3, [pc, #48]	; 12c5c <ftello64@plt+0x158c>
   12c28:	ldr	r2, [pc, #48]	; 12c60 <ftello64@plt+0x1590>
   12c2c:	mov	r1, #0
   12c30:	mov	r0, #1
   12c34:	bl	114a8 <error@plt>
   12c38:	b	12bfc <ftello64@plt+0x152c>
   12c3c:	ldr	r3, [r4]
   12c40:	str	r3, [sp]
   12c44:	ldr	r3, [pc, #16]	; 12c5c <ftello64@plt+0x158c>
   12c48:	ldr	r2, [pc, #20]	; 12c64 <ftello64@plt+0x1594>
   12c4c:	mov	r1, #0
   12c50:	mov	r0, #1
   12c54:	bl	114a8 <error@plt>
   12c58:	b	12c08 <ftello64@plt+0x1538>
   12c5c:	andeq	sp, r1, r0, lsr pc
   12c60:	ldrdeq	sp, [r1], -ip
   12c64:	andeq	sp, r1, r0, lsl #30
   12c68:	push	{r4, r5, lr}
   12c6c:	sub	sp, sp, #12
   12c70:	mov	r5, r1
   12c74:	subs	r4, r0, #0
   12c78:	beq	12ca0 <ftello64@plt+0x15d0>
   12c7c:	ldr	r3, [r4, #4]
   12c80:	tst	r3, #64	; 0x40
   12c84:	bne	12cbc <ftello64@plt+0x15ec>
   12c88:	str	r5, [r4, #32]
   12c8c:	ldr	r3, [r4, #4]
   12c90:	orr	r3, r3, #64	; 0x40
   12c94:	str	r3, [r4, #4]
   12c98:	add	sp, sp, #12
   12c9c:	pop	{r4, r5, pc}
   12ca0:	str	r1, [sp]
   12ca4:	ldr	r3, [pc, #48]	; 12cdc <ftello64@plt+0x160c>
   12ca8:	ldr	r2, [pc, #48]	; 12ce0 <ftello64@plt+0x1610>
   12cac:	mov	r1, #0
   12cb0:	mov	r0, #1
   12cb4:	bl	114a8 <error@plt>
   12cb8:	b	12c7c <ftello64@plt+0x15ac>
   12cbc:	ldr	r3, [r4]
   12cc0:	str	r3, [sp]
   12cc4:	ldr	r3, [pc, #16]	; 12cdc <ftello64@plt+0x160c>
   12cc8:	ldr	r2, [pc, #20]	; 12ce4 <ftello64@plt+0x1614>
   12ccc:	mov	r1, #0
   12cd0:	mov	r0, #1
   12cd4:	bl	114a8 <error@plt>
   12cd8:	b	12c88 <ftello64@plt+0x15b8>
   12cdc:	andeq	sp, r1, ip, asr #30
   12ce0:	ldrdeq	sp, [r1], -ip
   12ce4:	andeq	sp, r1, r0, lsl #30
   12ce8:	push	{r4, r5, lr}
   12cec:	sub	sp, sp, #12
   12cf0:	mov	r5, r1
   12cf4:	subs	r4, r0, #0
   12cf8:	beq	12d20 <ftello64@plt+0x1650>
   12cfc:	ldr	r3, [r4, #4]
   12d00:	tst	r3, #1024	; 0x400
   12d04:	bne	12d3c <ftello64@plt+0x166c>
   12d08:	str	r5, [r4, #52]	; 0x34
   12d0c:	ldr	r3, [r4, #4]
   12d10:	orr	r3, r3, #1024	; 0x400
   12d14:	str	r3, [r4, #4]
   12d18:	add	sp, sp, #12
   12d1c:	pop	{r4, r5, pc}
   12d20:	str	r1, [sp]
   12d24:	ldr	r3, [pc, #48]	; 12d5c <ftello64@plt+0x168c>
   12d28:	ldr	r2, [pc, #48]	; 12d60 <ftello64@plt+0x1690>
   12d2c:	mov	r1, #0
   12d30:	mov	r0, #1
   12d34:	bl	114a8 <error@plt>
   12d38:	b	12cfc <ftello64@plt+0x162c>
   12d3c:	ldr	r3, [r4]
   12d40:	str	r3, [sp]
   12d44:	ldr	r3, [pc, #16]	; 12d5c <ftello64@plt+0x168c>
   12d48:	ldr	r2, [pc, #20]	; 12d64 <ftello64@plt+0x1694>
   12d4c:	mov	r1, #0
   12d50:	mov	r0, #1
   12d54:	bl	114a8 <error@plt>
   12d58:	b	12d08 <ftello64@plt+0x1638>
   12d5c:	andeq	sp, r1, r0, lsr #26
   12d60:	ldrdeq	sp, [r1], -ip
   12d64:	andeq	sp, r1, r0, lsl #30
   12d68:	push	{r4, r5, lr}
   12d6c:	sub	sp, sp, #20
   12d70:	mov	r5, r1
   12d74:	subs	r4, r0, #0
   12d78:	beq	12de8 <ftello64@plt+0x1718>
   12d7c:	ldr	r3, [r4, #4]
   12d80:	tst	r3, #128	; 0x80
   12d84:	bne	12e04 <ftello64@plt+0x1734>
   12d88:	mov	r2, #0
   12d8c:	add	r1, sp, #12
   12d90:	mov	r0, r5
   12d94:	bl	113ac <strtol@plt>
   12d98:	str	r0, [r4, #36]	; 0x24
   12d9c:	ldrb	r3, [r5]
   12da0:	cmp	r3, #0
   12da4:	beq	12db8 <ftello64@plt+0x16e8>
   12da8:	ldr	r3, [sp, #12]
   12dac:	ldrb	r3, [r3]
   12db0:	cmp	r3, #0
   12db4:	beq	12dd4 <ftello64@plt+0x1704>
   12db8:	ldr	r3, [r4]
   12dbc:	str	r3, [sp]
   12dc0:	mov	r3, r5
   12dc4:	ldr	r2, [pc, #88]	; 12e24 <ftello64@plt+0x1754>
   12dc8:	mov	r1, #0
   12dcc:	mov	r0, #1
   12dd0:	bl	114a8 <error@plt>
   12dd4:	ldr	r3, [r4, #4]
   12dd8:	orr	r3, r3, #128	; 0x80
   12ddc:	str	r3, [r4, #4]
   12de0:	add	sp, sp, #20
   12de4:	pop	{r4, r5, pc}
   12de8:	str	r1, [sp]
   12dec:	ldr	r3, [pc, #52]	; 12e28 <ftello64@plt+0x1758>
   12df0:	ldr	r2, [pc, #52]	; 12e2c <ftello64@plt+0x175c>
   12df4:	mov	r1, #0
   12df8:	mov	r0, #1
   12dfc:	bl	114a8 <error@plt>
   12e00:	b	12d7c <ftello64@plt+0x16ac>
   12e04:	ldr	r3, [r4]
   12e08:	str	r3, [sp]
   12e0c:	ldr	r3, [pc, #20]	; 12e28 <ftello64@plt+0x1758>
   12e10:	ldr	r2, [pc, #24]	; 12e30 <ftello64@plt+0x1760>
   12e14:	mov	r1, #0
   12e18:	mov	r0, #1
   12e1c:	bl	114a8 <error@plt>
   12e20:	b	12d88 <ftello64@plt+0x16b8>
   12e24:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12e28:	andeq	sp, r1, r0, ror #30
   12e2c:	andeq	sp, r1, ip, ror #30
   12e30:	andeq	sp, r1, r0, lsl #30
   12e34:	push	{r4, r5, lr}
   12e38:	sub	sp, sp, #20
   12e3c:	mov	r5, r1
   12e40:	subs	r4, r0, #0
   12e44:	beq	12eb4 <ftello64@plt+0x17e4>
   12e48:	ldr	r3, [r4, #4]
   12e4c:	tst	r3, #256	; 0x100
   12e50:	bne	12ed0 <ftello64@plt+0x1800>
   12e54:	mov	r2, #0
   12e58:	add	r1, sp, #12
   12e5c:	mov	r0, r5
   12e60:	bl	113ac <strtol@plt>
   12e64:	str	r0, [r4, #40]	; 0x28
   12e68:	ldrb	r3, [r5]
   12e6c:	cmp	r3, #0
   12e70:	beq	12e84 <ftello64@plt+0x17b4>
   12e74:	ldr	r3, [sp, #12]
   12e78:	ldrb	r3, [r3]
   12e7c:	cmp	r3, #0
   12e80:	beq	12ea0 <ftello64@plt+0x17d0>
   12e84:	ldr	r3, [r4]
   12e88:	str	r3, [sp]
   12e8c:	mov	r3, r5
   12e90:	ldr	r2, [pc, #88]	; 12ef0 <ftello64@plt+0x1820>
   12e94:	mov	r1, #0
   12e98:	mov	r0, #1
   12e9c:	bl	114a8 <error@plt>
   12ea0:	ldr	r3, [r4, #4]
   12ea4:	orr	r3, r3, #256	; 0x100
   12ea8:	str	r3, [r4, #4]
   12eac:	add	sp, sp, #20
   12eb0:	pop	{r4, r5, pc}
   12eb4:	str	r1, [sp]
   12eb8:	ldr	r3, [pc, #52]	; 12ef4 <ftello64@plt+0x1824>
   12ebc:	ldr	r2, [pc, #52]	; 12ef8 <ftello64@plt+0x1828>
   12ec0:	mov	r1, #0
   12ec4:	mov	r0, #1
   12ec8:	bl	114a8 <error@plt>
   12ecc:	b	12e48 <ftello64@plt+0x1778>
   12ed0:	ldr	r3, [r4]
   12ed4:	str	r3, [sp]
   12ed8:	ldr	r3, [pc, #20]	; 12ef4 <ftello64@plt+0x1824>
   12edc:	ldr	r2, [pc, #24]	; 12efc <ftello64@plt+0x182c>
   12ee0:	mov	r1, #0
   12ee4:	mov	r0, #1
   12ee8:	bl	114a8 <error@plt>
   12eec:	b	12e54 <ftello64@plt+0x1784>
   12ef0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12ef4:	andeq	sp, r1, r4, asr #31
   12ef8:	andeq	sp, r1, ip, ror #30
   12efc:	andeq	sp, r1, r0, lsl #30
   12f00:	push	{r4, r5, lr}
   12f04:	sub	sp, sp, #12
   12f08:	mov	r5, r1
   12f0c:	subs	r4, r0, #0
   12f10:	beq	12f44 <ftello64@plt+0x1874>
   12f14:	ldr	r1, [pc, #96]	; 12f7c <ftello64@plt+0x18ac>
   12f18:	mov	r0, r5
   12f1c:	bl	11454 <strcasecmp@plt>
   12f20:	cmp	r0, #0
   12f24:	moveq	r3, #2
   12f28:	strheq	r3, [r4, #16]
   12f2c:	bne	12f5c <ftello64@plt+0x188c>
   12f30:	ldr	r3, [r4, #4]
   12f34:	orr	r3, r3, #4
   12f38:	str	r3, [r4, #4]
   12f3c:	add	sp, sp, #12
   12f40:	pop	{r4, r5, pc}
   12f44:	mov	r3, r1
   12f48:	ldr	r2, [pc, #48]	; 12f80 <ftello64@plt+0x18b0>
   12f4c:	mov	r1, #0
   12f50:	mov	r0, #1
   12f54:	bl	114a8 <error@plt>
   12f58:	b	12f14 <ftello64@plt+0x1844>
   12f5c:	ldr	r3, [r4]
   12f60:	str	r3, [sp]
   12f64:	mov	r3, r5
   12f68:	ldr	r2, [pc, #20]	; 12f84 <ftello64@plt+0x18b4>
   12f6c:	mov	r1, #0
   12f70:	mov	r0, #1
   12f74:	bl	114a8 <error@plt>
   12f78:	b	12f30 <ftello64@plt+0x1860>
   12f7c:	andeq	lr, r1, r4
   12f80:	ldrdeq	sp, [r1], -r4
   12f84:	andeq	lr, r1, ip
   12f88:	cmp	r0, #0
   12f8c:	ldrne	r3, [r0, #4]
   12f90:	orrne	r3, r3, #512	; 0x200
   12f94:	strne	r3, [r0, #4]
   12f98:	ldreq	r0, [pc, #80]	; 12ff0 <ftello64@plt+0x1920>
   12f9c:	ldreq	r3, [r0]
   12fa0:	orreq	r3, r3, #512	; 0x200
   12fa4:	streq	r3, [r0]
   12fa8:	cmp	r2, #0
   12fac:	bne	12fd0 <ftello64@plt+0x1900>
   12fb0:	ldr	r3, [pc, #56]	; 12ff0 <ftello64@plt+0x1920>
   12fb4:	ldr	r2, [r3, #8]
   12fb8:	orr	r2, r2, r1
   12fbc:	str	r2, [r3, #8]
   12fc0:	ldr	r2, [r3, #4]
   12fc4:	bic	r1, r2, r1
   12fc8:	str	r1, [r3, #4]
   12fcc:	bx	lr
   12fd0:	ldr	r3, [pc, #24]	; 12ff0 <ftello64@plt+0x1920>
   12fd4:	ldr	r2, [r3, #4]
   12fd8:	orr	r2, r2, r1
   12fdc:	str	r2, [r3, #4]
   12fe0:	ldr	r2, [r3, #8]
   12fe4:	bic	r1, r2, r1
   12fe8:	str	r1, [r3, #8]
   12fec:	bx	lr
   12ff0:	andeq	r2, r3, r4, asr fp
   12ff4:	ldrb	r3, [r1]
   12ff8:	cmp	r3, #0
   12ffc:	bxeq	lr
   13000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13004:	sub	sp, sp, #20
   13008:	mov	r6, r0
   1300c:	mov	r4, r1
   13010:	mov	r7, #44	; 0x2c
   13014:	ldr	sl, [pc, #248]	; 13114 <ftello64@plt+0x1a44>
   13018:	mov	r8, #0
   1301c:	mov	r9, #1
   13020:	b	13098 <ftello64@plt+0x19c8>
   13024:	mov	r0, r4
   13028:	bl	11544 <strlen@plt>
   1302c:	mov	r5, r0
   13030:	add	r2, sp, #12
   13034:	mov	r1, r0
   13038:	mov	r0, r4
   1303c:	bl	11ca0 <ftello64@plt+0x5d0>
   13040:	subs	r1, r0, #0
   13044:	beq	130d8 <ftello64@plt+0x1a08>
   13048:	ldr	r2, [sp, #12]
   1304c:	mov	r0, r6
   13050:	bl	12f88 <ftello64@plt+0x18b8>
   13054:	add	r4, r4, r5
   13058:	b	1308c <ftello64@plt+0x19bc>
   1305c:	str	r4, [sp, #4]
   13060:	str	fp, [sp]
   13064:	mov	r3, fp
   13068:	mov	r2, sl
   1306c:	mov	r1, r8
   13070:	mov	r0, r9
   13074:	bl	114a8 <error@plt>
   13078:	ldr	r2, [sp, #12]
   1307c:	mov	r1, r8
   13080:	mov	r0, r6
   13084:	bl	12f88 <ftello64@plt+0x18b8>
   13088:	add	r4, r5, #1
   1308c:	ldrb	r3, [r4]
   13090:	cmp	r3, #0
   13094:	beq	1310c <ftello64@plt+0x1a3c>
   13098:	mov	r1, r7
   1309c:	mov	r0, r4
   130a0:	bl	11550 <strchr@plt>
   130a4:	subs	r5, r0, #0
   130a8:	beq	13024 <ftello64@plt+0x1954>
   130ac:	sub	fp, r5, r4
   130b0:	add	r2, sp, #12
   130b4:	mov	r1, fp
   130b8:	mov	r0, r4
   130bc:	bl	11ca0 <ftello64@plt+0x5d0>
   130c0:	subs	r1, r0, #0
   130c4:	beq	1305c <ftello64@plt+0x198c>
   130c8:	ldr	r2, [sp, #12]
   130cc:	mov	r0, r6
   130d0:	bl	12f88 <ftello64@plt+0x18b8>
   130d4:	b	13088 <ftello64@plt+0x19b8>
   130d8:	str	r4, [sp, #4]
   130dc:	str	r5, [sp]
   130e0:	mov	r3, r5
   130e4:	mov	r2, sl
   130e8:	mov	r1, r8
   130ec:	mov	r0, r9
   130f0:	bl	114a8 <error@plt>
   130f4:	ldr	r2, [sp, #12]
   130f8:	mov	r1, r8
   130fc:	mov	r0, r6
   13100:	bl	12f88 <ftello64@plt+0x18b8>
   13104:	add	r4, r4, r5
   13108:	b	1308c <ftello64@plt+0x19bc>
   1310c:	add	sp, sp, #20
   13110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13114:	andeq	lr, r1, ip, asr #32
   13118:	push	{r4, lr}
   1311c:	mov	r4, r0
   13120:	bl	12be8 <ftello64@plt+0x1518>
   13124:	mov	r2, #0
   13128:	mov	r1, #16
   1312c:	mov	r0, r4
   13130:	bl	12f88 <ftello64@plt+0x18b8>
   13134:	pop	{r4, pc}
   13138:	push	{r4, r5, r6, lr}
   1313c:	subs	r5, r0, #0
   13140:	beq	13198 <ftello64@plt+0x1ac8>
   13144:	ldr	r3, [pc, #132]	; 131d0 <ftello64@plt+0x1b00>
   13148:	ldr	r1, [r3]
   1314c:	cmp	r1, #0
   13150:	beq	131b0 <ftello64@plt+0x1ae0>
   13154:	mov	r4, r3
   13158:	mov	r0, r5
   1315c:	bl	113a0 <strcmp@plt>
   13160:	cmp	r0, #0
   13164:	beq	13174 <ftello64@plt+0x1aa4>
   13168:	ldr	r1, [r4, #12]!
   1316c:	cmp	r1, #0
   13170:	bne	13158 <ftello64@plt+0x1a88>
   13174:	cmp	r4, #0
   13178:	beq	131b8 <ftello64@plt+0x1ae8>
   1317c:	ldr	r3, [r4, #8]
   13180:	cmp	r3, #0
   13184:	beq	131b8 <ftello64@plt+0x1ae8>
   13188:	ldr	r2, [r4, #8]
   1318c:	ldr	r3, [pc, #64]	; 131d4 <ftello64@plt+0x1b04>
   13190:	str	r2, [r3]
   13194:	pop	{r4, r5, r6, pc}
   13198:	ldr	r3, [pc, #56]	; 131d8 <ftello64@plt+0x1b08>
   1319c:	ldr	r5, [r3]
   131a0:	ldr	r3, [pc, #52]	; 131dc <ftello64@plt+0x1b0c>
   131a4:	cmp	r5, #0
   131a8:	moveq	r5, r3
   131ac:	b	13144 <ftello64@plt+0x1a74>
   131b0:	ldr	r4, [pc, #24]	; 131d0 <ftello64@plt+0x1b00>
   131b4:	b	1317c <ftello64@plt+0x1aac>
   131b8:	mov	r3, r5
   131bc:	ldr	r2, [pc, #28]	; 131e0 <ftello64@plt+0x1b10>
   131c0:	mov	r1, #0
   131c4:	mov	r0, #1
   131c8:	bl	114a8 <error@plt>
   131cc:	b	13188 <ftello64@plt+0x1ab8>
   131d0:			; <UNDEFINED> instruction: 0x000322b4
   131d4:	strdeq	r2, [r3], -r4
   131d8:	strdeq	r2, [r3], -r8
   131dc:	andeq	lr, r1, r0, rrx
   131e0:	andeq	lr, r1, r8, rrx
   131e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   131e8:	sub	sp, sp, #20
   131ec:	mov	r4, r0
   131f0:	mov	r3, #0
   131f4:	str	r3, [sp, #12]
   131f8:	str	r3, [sp, #8]
   131fc:	ldr	r1, [pc, #448]	; 133c4 <ftello64@plt+0x1cf4>
   13200:	bl	1164c <fopen64@plt>
   13204:	subs	r7, r0, #0
   13208:	beq	13238 <ftello64@plt+0x1b68>
   1320c:	ldr	r3, [pc, #436]	; 133c8 <ftello64@plt+0x1cf8>
   13210:	str	r3, [sp]
   13214:	ldr	r3, [pc, #432]	; 133cc <ftello64@plt+0x1cfc>
   13218:	mov	r2, #0
   1321c:	mov	r1, r2
   13220:	ldr	r0, [pc, #424]	; 133d0 <ftello64@plt+0x1d00>
   13224:	bl	17fac <_obstack_begin@@Base>
   13228:	mov	r8, #10
   1322c:	ldr	r6, [pc, #416]	; 133d4 <ftello64@plt+0x1d04>
   13230:	add	r9, r6, #12
   13234:	b	1328c <ftello64@plt+0x1bbc>
   13238:	bl	11568 <__errno_location@plt>
   1323c:	mov	r3, r4
   13240:	ldr	r2, [pc, #400]	; 133d8 <ftello64@plt+0x1d08>
   13244:	ldr	r1, [r0]
   13248:	mov	r0, #1
   1324c:	bl	114a8 <error@plt>
   13250:	b	1320c <ftello64@plt+0x1b3c>
   13254:	cmp	r3, #0
   13258:	beq	1328c <ftello64@plt+0x1bbc>
   1325c:	mov	r5, r3
   13260:	b	132cc <ftello64@plt+0x1bfc>
   13264:	subs	r2, r2, #1
   13268:	bne	132d0 <ftello64@plt+0x1c00>
   1326c:	b	132ec <ftello64@plt+0x1c1c>
   13270:	mov	r2, r5
   13274:	ldr	r1, [sp, #12]
   13278:	ldr	r0, [r6, #24]
   1327c:	bl	1140c <memcpy@plt>
   13280:	ldr	r3, [r6, #24]
   13284:	add	r5, r3, r5
   13288:	str	r5, [r6, #24]
   1328c:	mov	r3, r7
   13290:	mov	r2, r8
   13294:	add	r1, sp, #8
   13298:	add	r0, sp, #12
   1329c:	bl	11388 <__getdelim@plt>
   132a0:	cmp	r0, #0
   132a4:	ble	13310 <ftello64@plt+0x1c40>
   132a8:	ldr	r4, [sp, #12]
   132ac:	mov	r0, r4
   132b0:	bl	11544 <strlen@plt>
   132b4:	subs	r5, r0, #0
   132b8:	beq	1328c <ftello64@plt+0x1bbc>
   132bc:	sub	r3, r5, #1
   132c0:	ldrb	r2, [r4, r3]
   132c4:	cmp	r2, #10
   132c8:	beq	13254 <ftello64@plt+0x1b84>
   132cc:	mov	r2, r5
   132d0:	ldrb	r3, [r4], #1
   132d4:	cmp	r3, #32
   132d8:	beq	13264 <ftello64@plt+0x1b94>
   132dc:	cmp	r3, #35	; 0x23
   132e0:	beq	1328c <ftello64@plt+0x1bbc>
   132e4:	cmp	r3, #9
   132e8:	beq	13264 <ftello64@plt+0x1b94>
   132ec:	ldr	r3, [r6, #28]
   132f0:	ldr	r2, [r6, #24]
   132f4:	sub	r3, r3, r2
   132f8:	cmp	r3, r5
   132fc:	bcs	13270 <ftello64@plt+0x1ba0>
   13300:	mov	r1, r5
   13304:	mov	r0, r9
   13308:	bl	17ffc <_obstack_newchunk@@Base>
   1330c:	b	13270 <ftello64@plt+0x1ba0>
   13310:	ldr	r0, [sp, #12]
   13314:	bl	17d44 <argp_parse@@Base+0xbf4>
   13318:	mov	r0, r7
   1331c:	bl	115c8 <fclose@plt>
   13320:	ldr	r3, [pc, #172]	; 133d4 <ftello64@plt+0x1d04>
   13324:	ldr	r2, [r3, #28]
   13328:	ldr	r3, [r3, #24]
   1332c:	cmp	r2, r3
   13330:	beq	133b4 <ftello64@plt+0x1ce4>
   13334:	ldr	r3, [pc, #152]	; 133d4 <ftello64@plt+0x1d04>
   13338:	ldr	r2, [r3, #24]
   1333c:	add	r1, r2, #1
   13340:	str	r1, [r3, #24]
   13344:	mov	r1, #0
   13348:	strb	r1, [r2]
   1334c:	ldr	r0, [r3, #20]
   13350:	ldr	r3, [r3, #24]
   13354:	cmp	r0, r3
   13358:	ldreq	r1, [pc, #116]	; 133d4 <ftello64@plt+0x1d04>
   1335c:	ldrbeq	r2, [r1, #52]	; 0x34
   13360:	orreq	r2, r2, #2
   13364:	strbeq	r2, [r1, #52]	; 0x34
   13368:	ldr	r1, [pc, #100]	; 133d4 <ftello64@plt+0x1d04>
   1336c:	ldr	r2, [r1, #36]	; 0x24
   13370:	add	r3, r3, r2
   13374:	bic	r3, r3, r2
   13378:	str	r3, [r1, #24]
   1337c:	ldr	r2, [r1, #16]
   13380:	ldr	r1, [r1, #28]
   13384:	sub	r3, r3, r2
   13388:	sub	r2, r1, r2
   1338c:	cmp	r3, r2
   13390:	ldrhi	r3, [pc, #60]	; 133d4 <ftello64@plt+0x1d04>
   13394:	strhi	r1, [r3, #24]
   13398:	ldr	r3, [pc, #52]	; 133d4 <ftello64@plt+0x1d04>
   1339c:	ldr	r2, [r3, #24]
   133a0:	str	r2, [r3, #20]
   133a4:	ldr	r3, [pc, #48]	; 133dc <ftello64@plt+0x1d0c>
   133a8:	str	r0, [r3]
   133ac:	add	sp, sp, #20
   133b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   133b4:	mov	r1, #1
   133b8:	ldr	r0, [pc, #16]	; 133d0 <ftello64@plt+0x1d00>
   133bc:	bl	17ffc <_obstack_newchunk@@Base>
   133c0:	b	13334 <ftello64@plt+0x1c64>
   133c4:	andeq	sp, r1, r0, asr #31
   133c8:	andeq	r7, r1, r4, asr #26
   133cc:	andeq	r9, r1, r0, lsr #32
   133d0:	andeq	r2, r3, r0, ror #22
   133d4:	andeq	r2, r3, r4, asr fp
   133d8:	andeq	lr, r1, r4, lsl #1
   133dc:	strdeq	r2, [r3], -r4
   133e0:	cmp	r0, #0
   133e4:	bxeq	lr
   133e8:	ldr	r3, [pc, #132]	; 13474 <ftello64@plt+0x1da4>
   133ec:	ldr	r3, [r3]
   133f0:	cmp	r3, #0
   133f4:	beq	13410 <ftello64@plt+0x1d40>
   133f8:	ldr	r2, [r0, #4]
   133fc:	orr	r3, r2, r3
   13400:	str	r3, [r0, #4]
   13404:	mov	r2, #0
   13408:	ldr	r3, [pc, #100]	; 13474 <ftello64@plt+0x1da4>
   1340c:	str	r2, [r3]
   13410:	ldr	r3, [r0, #4]
   13414:	cmp	r3, #0
   13418:	bne	13430 <ftello64@plt+0x1d60>
   1341c:	mov	r3, #2
   13420:	str	r3, [r0, #4]
   13424:	ldr	r3, [pc, #76]	; 13478 <ftello64@plt+0x1da8>
   13428:	ldr	r3, [r3]
   1342c:	str	r3, [r0, #12]
   13430:	ldr	r3, [pc, #60]	; 13474 <ftello64@plt+0x1da4>
   13434:	ldr	r2, [r3, #8]
   13438:	ldr	r3, [r3, #4]
   1343c:	orrs	r1, r2, r3
   13440:	beq	13470 <ftello64@plt+0x1da0>
   13444:	ldr	r1, [r0, #44]	; 0x2c
   13448:	orr	r2, r1, r2
   1344c:	str	r2, [r0, #44]	; 0x2c
   13450:	ldr	r2, [r0, #48]	; 0x30
   13454:	orr	r3, r2, r3
   13458:	str	r3, [r0, #48]	; 0x30
   1345c:	ldr	r3, [pc, #16]	; 13474 <ftello64@plt+0x1da4>
   13460:	mov	r2, #0
   13464:	str	r2, [r3, #4]
   13468:	str	r2, [r3, #8]
   1346c:	bx	lr
   13470:	bx	lr
   13474:	andeq	r2, r3, r4, asr fp
   13478:	strdeq	r2, [r3], -r4
   1347c:	push	{r4, r5, r6, lr}
   13480:	ldr	ip, [r2, #28]
   13484:	ldr	lr, [ip]
   13488:	cmp	r0, #108	; 0x6c
   1348c:	beq	13618 <ftello64@plt+0x1f48>
   13490:	mov	r4, r2
   13494:	mov	r5, r1
   13498:	ble	134e0 <ftello64@plt+0x1e10>
   1349c:	cmp	r0, #256	; 0x100
   134a0:	beq	13630 <ftello64@plt+0x1f60>
   134a4:	ble	13564 <ftello64@plt+0x1e94>
   134a8:	ldr	r2, [pc, #500]	; 136a4 <ftello64@plt+0x1fd4>
   134ac:	cmp	r0, r2
   134b0:	beq	13674 <ftello64@plt+0x1fa4>
   134b4:	blt	13640 <ftello64@plt+0x1f70>
   134b8:	add	r2, r2, #1
   134bc:	cmp	r0, r2
   134c0:	beq	1368c <ftello64@plt+0x1fbc>
   134c4:	ldr	r2, [pc, #476]	; 136a8 <ftello64@plt+0x1fd8>
   134c8:	cmp	r0, r2
   134cc:	bne	13540 <ftello64@plt+0x1e70>
   134d0:	ldr	r3, [r4, #32]
   134d4:	str	ip, [r3]
   134d8:	mov	r0, #0
   134dc:	pop	{r4, r5, r6, pc}
   134e0:	cmp	r0, #77	; 0x4d
   134e4:	beq	135f8 <ftello64@plt+0x1f28>
   134e8:	ble	13528 <ftello64@plt+0x1e58>
   134ec:	cmp	r0, #98	; 0x62
   134f0:	beq	135d4 <ftello64@plt+0x1f04>
   134f4:	ble	13548 <ftello64@plt+0x1e78>
   134f8:	cmp	r0, #100	; 0x64
   134fc:	beq	135c0 <ftello64@plt+0x1ef0>
   13500:	cmp	r0, #105	; 0x69
   13504:	bne	13540 <ftello64@plt+0x1e70>
   13508:	mov	r0, lr
   1350c:	bl	133e0 <ftello64@plt+0x1d10>
   13510:	mov	r0, r5
   13514:	bl	12a24 <ftello64@plt+0x1354>
   13518:	ldr	r3, [r4, #28]
   1351c:	str	r0, [r3]
   13520:	mov	r0, #0
   13524:	pop	{r4, r5, r6, pc}
   13528:	cmp	r0, #66	; 0x42
   1352c:	beq	135d4 <ftello64@plt+0x1f04>
   13530:	cmp	r0, #70	; 0x46
   13534:	beq	135e8 <ftello64@plt+0x1f18>
   13538:	cmp	r0, #65	; 0x41
   1353c:	beq	135b0 <ftello64@plt+0x1ee0>
   13540:	mov	r0, #7
   13544:	pop	{r4, r5, r6, pc}
   13548:	cmp	r0, #97	; 0x61
   1354c:	bne	13540 <ftello64@plt+0x1e70>
   13550:	mov	r2, #1
   13554:	ldr	r3, [pc, #336]	; 136ac <ftello64@plt+0x1fdc>
   13558:	str	r2, [r3]
   1355c:	mov	r0, #0
   13560:	pop	{r4, r5, r6, pc}
   13564:	cmp	r0, #112	; 0x70
   13568:	beq	135c0 <ftello64@plt+0x1ef0>
   1356c:	ble	13598 <ftello64@plt+0x1ec8>
   13570:	cmp	r0, #115	; 0x73
   13574:	beq	13608 <ftello64@plt+0x1f38>
   13578:	cmp	r0, #118	; 0x76
   1357c:	bne	13540 <ftello64@plt+0x1e70>
   13580:	ldr	r2, [pc, #296]	; 136b0 <ftello64@plt+0x1fe0>
   13584:	ldr	r3, [r2]
   13588:	add	r3, r3, #1
   1358c:	str	r3, [r2]
   13590:	mov	r0, #0
   13594:	pop	{r4, r5, r6, pc}
   13598:	cmp	r0, #109	; 0x6d
   1359c:	bne	13540 <ftello64@plt+0x1e70>
   135a0:	mov	r0, lr
   135a4:	bl	12b68 <ftello64@plt+0x1498>
   135a8:	mov	r0, #0
   135ac:	pop	{r4, r5, r6, pc}
   135b0:	mov	r0, lr
   135b4:	bl	12ae8 <ftello64@plt+0x1418>
   135b8:	mov	r0, #0
   135bc:	pop	{r4, r5, r6, pc}
   135c0:	mov	r1, r5
   135c4:	mov	r0, lr
   135c8:	bl	13118 <ftello64@plt+0x1a48>
   135cc:	mov	r0, #0
   135d0:	pop	{r4, r5, r6, pc}
   135d4:	mov	r1, r5
   135d8:	mov	r0, lr
   135dc:	bl	12c68 <ftello64@plt+0x1598>
   135e0:	mov	r0, #0
   135e4:	pop	{r4, r5, r6, pc}
   135e8:	mov	r0, lr
   135ec:	bl	12ff4 <ftello64@plt+0x1924>
   135f0:	mov	r0, #0
   135f4:	pop	{r4, r5, r6, pc}
   135f8:	mov	r0, lr
   135fc:	bl	12d68 <ftello64@plt+0x1698>
   13600:	mov	r0, #0
   13604:	pop	{r4, r5, r6, pc}
   13608:	ldr	r0, [pc, #164]	; 136b4 <ftello64@plt+0x1fe4>
   1360c:	bl	13138 <ftello64@plt+0x1a68>
   13610:	mov	r0, #0
   13614:	pop	{r4, r5, r6, pc}
   13618:	ldr	r2, [pc, #152]	; 136b8 <ftello64@plt+0x1fe8>
   1361c:	ldr	r3, [r2]
   13620:	add	r3, r3, #1
   13624:	str	r3, [r2]
   13628:	mov	r0, #0
   1362c:	pop	{r4, r5, r6, pc}
   13630:	mov	r0, lr
   13634:	bl	12e34 <ftello64@plt+0x1764>
   13638:	mov	r0, #0
   1363c:	pop	{r4, r5, r6, pc}
   13640:	cmp	r1, #0
   13644:	beq	13654 <ftello64@plt+0x1f84>
   13648:	ldrb	r3, [r1]
   1364c:	cmp	r3, #64	; 0x40
   13650:	beq	13664 <ftello64@plt+0x1f94>
   13654:	mov	r0, r5
   13658:	bl	13138 <ftello64@plt+0x1a68>
   1365c:	mov	r0, #0
   13660:	pop	{r4, r5, r6, pc}
   13664:	add	r0, r1, #1
   13668:	bl	131e4 <ftello64@plt+0x1b14>
   1366c:	mov	r0, #0
   13670:	pop	{r4, r5, r6, pc}
   13674:	mov	r2, #0
   13678:	mov	r1, #65	; 0x41
   1367c:	mov	r0, lr
   13680:	bl	12f88 <ftello64@plt+0x18b8>
   13684:	mov	r0, #0
   13688:	pop	{r4, r5, r6, pc}
   1368c:	mov	r2, #1
   13690:	mov	r1, r2
   13694:	mov	r0, lr
   13698:	bl	12f88 <ftello64@plt+0x18b8>
   1369c:	mov	r0, #0
   136a0:	pop	{r4, r5, r6, pc}
   136a4:	andeq	r0, r0, r2, lsl #2
   136a8:	tsteq	r0, r3
   136ac:	strdeq	r2, [r3], -r8
   136b0:	andeq	r2, r3, r0, lsl #24
   136b4:	andeq	lr, r1, r0, lsr #1
   136b8:	andeq	r2, r3, r4, lsl #24
   136bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136c0:	sub	sp, sp, #20
   136c4:	mov	r6, r0
   136c8:	mov	r7, r1
   136cc:	ldr	r3, [pc, #484]	; 138b8 <ftello64@plt+0x21e8>
   136d0:	ldr	r3, [r3]
   136d4:	add	r5, sp, #16
   136d8:	str	r3, [r5, #-8]!
   136dc:	mov	r0, #0
   136e0:	bl	13138 <ftello64@plt+0x1a68>
   136e4:	ldr	r2, [pc, #464]	; 138bc <ftello64@plt+0x21ec>
   136e8:	ldr	r3, [pc, #464]	; 138c0 <ftello64@plt+0x21f0>
   136ec:	str	r2, [r3]
   136f0:	ldr	r4, [pc, #460]	; 138c4 <ftello64@plt+0x21f4>
   136f4:	add	r1, r4, #144	; 0x90
   136f8:	ldr	r0, [pc, #456]	; 138c8 <ftello64@plt+0x21f8>
   136fc:	bl	17c5c <argp_parse@@Base+0xb0c>
   13700:	ldr	r3, [pc, #452]	; 138cc <ftello64@plt+0x21fc>
   13704:	ldr	ip, [pc, #452]	; 138d0 <ftello64@plt+0x2200>
   13708:	ldm	r3, {r0, r1, r2, r3}
   1370c:	stm	ip, {r0, r1, r2, r3}
   13710:	str	ip, [r4, #168]	; 0xa8
   13714:	ldr	r3, [pc, #440]	; 138d4 <ftello64@plt+0x2204>
   13718:	ldr	r3, [r3]
   1371c:	str	r3, [r4, #160]	; 0xa0
   13720:	str	r5, [sp, #4]
   13724:	add	r3, sp, #12
   13728:	str	r3, [sp]
   1372c:	mov	r3, #8
   13730:	mov	r2, r7
   13734:	mov	r1, r6
   13738:	add	r0, r4, #152	; 0x98
   1373c:	bl	17150 <argp_parse@@Base>
   13740:	ldr	r0, [sp, #8]
   13744:	bl	133e0 <ftello64@plt+0x1d10>
   13748:	ldr	r1, [sp, #12]
   1374c:	cmp	r6, r1
   13750:	bgt	1376c <ftello64@plt+0x209c>
   13754:	ldr	r3, [pc, #348]	; 138b8 <ftello64@plt+0x21e8>
   13758:	ldr	r3, [r3]
   1375c:	cmp	r3, #0
   13760:	beq	137a4 <ftello64@plt+0x20d4>
   13764:	add	sp, sp, #20
   13768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1376c:	add	r2, r7, r1, lsl #2
   13770:	sub	r1, r6, r1
   13774:	add	r0, sp, #8
   13778:	bl	166c8 <ftello64@plt+0x4ff8>
   1377c:	cmp	r0, #0
   13780:	beq	13790 <ftello64@plt+0x20c0>
   13784:	ldr	r0, [sp, #8]
   13788:	bl	133e0 <ftello64@plt+0x1d10>
   1378c:	b	13754 <ftello64@plt+0x2084>
   13790:	ldr	r2, [pc, #320]	; 138d8 <ftello64@plt+0x2208>
   13794:	mov	r1, #0
   13798:	mov	r0, #1
   1379c:	bl	114a8 <error@plt>
   137a0:	b	13784 <ftello64@plt+0x20b4>
   137a4:	ldr	r3, [pc, #304]	; 138dc <ftello64@plt+0x220c>
   137a8:	ldr	r3, [r3]
   137ac:	blx	r3
   137b0:	subs	r5, r0, #0
   137b4:	beq	137cc <ftello64@plt+0x20fc>
   137b8:	add	r5, r5, #8
   137bc:	ldr	r7, [pc, #244]	; 138b8 <ftello64@plt+0x21e8>
   137c0:	ldr	r6, [pc, #280]	; 138e0 <ftello64@plt+0x2210>
   137c4:	ldr	r9, [pc, #280]	; 138e4 <ftello64@plt+0x2214>
   137c8:	b	13864 <ftello64@plt+0x2194>
   137cc:	ldr	r2, [pc, #276]	; 138e8 <ftello64@plt+0x2218>
   137d0:	mov	r1, #0
   137d4:	mov	r0, #1
   137d8:	bl	114a8 <error@plt>
   137dc:	b	137b8 <ftello64@plt+0x20e8>
   137e0:	ldr	r1, [r6]
   137e4:	add	r1, r1, #1
   137e8:	str	r1, [r6]
   137ec:	rsb	r1, r1, r1, lsl #3
   137f0:	lsl	r1, r1, #3
   137f4:	ldr	r0, [r7]
   137f8:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   137fc:	str	r0, [r7]
   13800:	cmp	r0, #0
   13804:	beq	138a0 <ftello64@plt+0x21d0>
   13808:	ldr	r4, [r6]
   1380c:	rsb	r4, r4, r4, lsl #3
   13810:	lsl	r4, r4, #3
   13814:	sub	r4, r4, #56	; 0x38
   13818:	ldr	fp, [r7]
   1381c:	add	sl, fp, r4
   13820:	mov	ip, sl
   13824:	ldr	lr, [pc, #192]	; 138ec <ftello64@plt+0x221c>
   13828:	ldm	lr!, {r0, r1, r2, r3}
   1382c:	stmia	ip!, {r0, r1, r2, r3}
   13830:	ldm	lr!, {r0, r1, r2, r3}
   13834:	stmia	ip!, {r0, r1, r2, r3}
   13838:	ldm	lr!, {r0, r1, r2, r3}
   1383c:	stmia	ip!, {r0, r1, r2, r3}
   13840:	ldm	lr, {r0, r1}
   13844:	stm	ip, {r0, r1}
   13848:	ldr	r3, [r8, #-4]
   1384c:	str	r3, [fp, r4]
   13850:	mov	r3, #2
   13854:	str	r3, [sl, #4]
   13858:	ldr	r3, [r9]
   1385c:	str	r3, [sl, #12]
   13860:	add	r5, r5, #8
   13864:	mov	r8, r5
   13868:	ldr	r3, [r5, #-8]
   1386c:	cmp	r3, #0
   13870:	bne	137e0 <ftello64@plt+0x2110>
   13874:	ldr	r3, [r5, #-4]
   13878:	cmp	r3, #0
   1387c:	bne	137e0 <ftello64@plt+0x2110>
   13880:	ldr	r3, [pc, #104]	; 138f0 <ftello64@plt+0x2220>
   13884:	mov	r2, #56	; 0x38
   13888:	ldr	r1, [pc, #80]	; 138e0 <ftello64@plt+0x2210>
   1388c:	ldr	r1, [r1]
   13890:	ldr	r0, [pc, #32]	; 138b8 <ftello64@plt+0x21e8>
   13894:	ldr	r0, [r0]
   13898:	bl	11658 <qsort@plt>
   1389c:	b	13764 <ftello64@plt+0x2094>
   138a0:	bl	11568 <__errno_location@plt>
   138a4:	ldr	r2, [pc, #72]	; 138f4 <ftello64@plt+0x2224>
   138a8:	ldr	r1, [r0]
   138ac:	mov	r0, #1
   138b0:	bl	114a8 <error@plt>
   138b4:	b	13808 <ftello64@plt+0x2138>
   138b8:	andeq	r2, r3, ip, ror #23
   138bc:	andeq	lr, r1, r8, lsr #1
   138c0:	andeq	r2, r3, r0, lsr #24
   138c4:			; <UNDEFINED> instruction: 0x000322b4
   138c8:	andeq	lr, r1, r0, asr #1
   138cc:	muleq	r3, r8, sl
   138d0:	andeq	r2, r3, ip, lsl #23
   138d4:	strdeq	r2, [r3], -r4
   138d8:	andeq	lr, r1, ip, asr #1
   138dc:	muleq	r3, r4, sl
   138e0:	strdeq	r2, [r3], -r0
   138e4:	strdeq	r2, [r3], -r4
   138e8:	andeq	lr, r1, r0, ror #1
   138ec:	andeq	sp, r1, r0, asr #28
   138f0:	muleq	r1, r0, r9
   138f4:	andeq	sp, r1, ip, lsr #29
   138f8:	bx	lr
   138fc:	push	{r4, lr}
   13900:	cmp	r1, #0
   13904:	movle	r0, #0
   13908:	ble	13920 <ftello64@plt+0x2250>
   1390c:	mov	r3, r2
   13910:	mov	r2, #0
   13914:	mov	r1, r2
   13918:	ldr	r0, [r3]
   1391c:	bl	11538 <strtoul@plt>
   13920:	bl	1152c <exit@plt>
   13924:	push	{r4, r5, r6, lr}
   13928:	mov	r4, r0
   1392c:	ldr	r0, [r0]
   13930:	bl	11694 <if_nametoindex@plt>
   13934:	subs	r5, r0, #0
   13938:	beq	1396c <ftello64@plt+0x229c>
   1393c:	mov	r1, r5
   13940:	ldr	r0, [pc, #64]	; 13988 <ftello64@plt+0x22b8>
   13944:	bl	113b8 <printf@plt>
   13948:	ldr	r3, [pc, #60]	; 1398c <ftello64@plt+0x22bc>
   1394c:	ldr	r2, [r3]
   13950:	ldr	r3, [r2]
   13954:	add	r0, r3, r0
   13958:	str	r0, [r2]
   1395c:	mov	r2, #1
   13960:	ldr	r3, [pc, #40]	; 13990 <ftello64@plt+0x22c0>
   13964:	str	r2, [r3]
   13968:	pop	{r4, r5, r6, pc}
   1396c:	bl	11568 <__errno_location@plt>
   13970:	ldr	r3, [r4]
   13974:	ldr	r2, [pc, #24]	; 13994 <ftello64@plt+0x22c4>
   13978:	ldr	r1, [r0]
   1397c:	mov	r0, #1
   13980:	bl	114a8 <error@plt>
   13984:	b	1393c <ftello64@plt+0x226c>
   13988:	andeq	pc, r1, r8, lsl #10
   1398c:	andeq	r2, r3, r8, lsl r5
   13990:	andeq	r2, r3, r8, lsl #24
   13994:	ldrdeq	pc, [r1], -ip
   13998:	push	{r4, lr}
   1399c:	mov	r0, r1
   139a0:	cmp	r1, #9
   139a4:	beq	139dc <ftello64@plt+0x230c>
   139a8:	cmp	r1, #10
   139ac:	bne	13a04 <ftello64@plt+0x2334>
   139b0:	ldr	r3, [pc, #100]	; 13a1c <ftello64@plt+0x234c>
   139b4:	ldr	r3, [r3]
   139b8:	mov	r2, #0
   139bc:	str	r2, [r3]
   139c0:	ldr	r3, [pc, #88]	; 13a20 <ftello64@plt+0x2350>
   139c4:	ldr	r1, [r3]
   139c8:	bl	11628 <putc@plt>
   139cc:	mov	r2, #1
   139d0:	ldr	r3, [pc, #76]	; 13a24 <ftello64@plt+0x2354>
   139d4:	str	r2, [r3]
   139d8:	pop	{r4, pc}
   139dc:	ldr	r3, [pc, #56]	; 13a1c <ftello64@plt+0x234c>
   139e0:	ldr	r2, [r3]
   139e4:	ldr	r3, [r2]
   139e8:	add	r1, r3, #7
   139ec:	cmp	r3, #0
   139f0:	movlt	r3, r1
   139f4:	bic	r3, r3, #7
   139f8:	add	r3, r3, #8
   139fc:	str	r3, [r2]
   13a00:	b	139c0 <ftello64@plt+0x22f0>
   13a04:	ldr	r3, [pc, #16]	; 13a1c <ftello64@plt+0x234c>
   13a08:	ldr	r2, [r3]
   13a0c:	ldr	r3, [r2]
   13a10:	add	r3, r3, #1
   13a14:	str	r3, [r2]
   13a18:	b	139c0 <ftello64@plt+0x22f0>
   13a1c:	andeq	r2, r3, r8, lsl r5
   13a20:	andeq	r2, r3, r4, lsl ip
   13a24:	andeq	r2, r3, r8, lsl #24
   13a28:	push	{r4, lr}
   13a2c:	mov	r1, #10
   13a30:	bl	13998 <ftello64@plt+0x22c8>
   13a34:	pop	{r4, pc}
   13a38:	push	{r4, lr}
   13a3c:	mov	r1, #9
   13a40:	bl	13998 <ftello64@plt+0x22c8>
   13a44:	pop	{r4, pc}
   13a48:	push	{r4, r5, r6, r7, r8, lr}
   13a4c:	mov	r7, r0
   13a50:	mov	r4, r1
   13a54:	mov	r5, r2
   13a58:	bl	11568 <__errno_location@plt>
   13a5c:	mov	r3, #0
   13a60:	str	r3, [r0]
   13a64:	cmp	r4, r3
   13a68:	ble	13ac0 <ftello64@plt+0x23f0>
   13a6c:	mov	r2, r3
   13a70:	mov	r1, r3
   13a74:	ldr	r0, [r5]
   13a78:	bl	113ac <strtol@plt>
   13a7c:	subs	r4, r0, #0
   13a80:	ble	13ac0 <ftello64@plt+0x23f0>
   13a84:	ldr	r3, [pc, #88]	; 13ae4 <ftello64@plt+0x2414>
   13a88:	ldr	r3, [r3]
   13a8c:	ldr	r3, [r3]
   13a90:	cmp	r4, r3
   13a94:	pople	{r4, r5, r6, r7, r8, pc}
   13a98:	mov	r6, #32
   13a9c:	ldr	r5, [pc, #64]	; 13ae4 <ftello64@plt+0x2414>
   13aa0:	mov	r1, r6
   13aa4:	mov	r0, r7
   13aa8:	bl	13998 <ftello64@plt+0x22c8>
   13aac:	ldr	r3, [r5]
   13ab0:	ldr	r3, [r3]
   13ab4:	cmp	r4, r3
   13ab8:	bgt	13aa0 <ftello64@plt+0x23d0>
   13abc:	pop	{r4, r5, r6, r7, r8, pc}
   13ac0:	ldr	r3, [pc, #28]	; 13ae4 <ftello64@plt+0x2414>
   13ac4:	ldr	r3, [r3]
   13ac8:	ldr	r3, [r3]
   13acc:	add	r4, r3, #7
   13ad0:	cmp	r3, #0
   13ad4:	movlt	r3, r4
   13ad8:	bic	r4, r3, #7
   13adc:	add	r4, r4, #8
   13ae0:	b	13a84 <ftello64@plt+0x23b4>
   13ae4:	andeq	r2, r3, r8, lsl r5
   13ae8:	push	{r4, r5, r6, lr}
   13aec:	mov	r5, r0
   13af0:	mov	r4, r1
   13af4:	ldrb	r1, [r1]
   13af8:	cmp	r1, #0
   13afc:	popeq	{r4, r5, r6, pc}
   13b00:	mov	r0, r5
   13b04:	bl	13998 <ftello64@plt+0x22c8>
   13b08:	ldrb	r1, [r4, #1]!
   13b0c:	cmp	r1, #0
   13b10:	bne	13b00 <ftello64@plt+0x2430>
   13b14:	pop	{r4, r5, r6, pc}
   13b18:	push	{r4, r5, r6, lr}
   13b1c:	mov	r4, r0
   13b20:	cmp	r1, #0
   13b24:	ldreq	r5, [r0]
   13b28:	ldrne	r5, [r2]
   13b2c:	mov	r0, r5
   13b30:	bl	129d0 <ftello64@plt+0x1300>
   13b34:	subs	r6, r0, #0
   13b38:	beq	13b4c <ftello64@plt+0x247c>
   13b3c:	ldr	r1, [r6, #4]
   13b40:	mov	r0, r4
   13b44:	bl	13ae8 <ftello64@plt+0x2418>
   13b48:	pop	{r4, r5, r6, pc}
   13b4c:	bl	11568 <__errno_location@plt>
   13b50:	mov	r3, r5
   13b54:	ldr	r2, [pc, #12]	; 13b68 <ftello64@plt+0x2498>
   13b58:	ldr	r1, [r0]
   13b5c:	mov	r0, #1
   13b60:	bl	114a8 <error@plt>
   13b64:	b	13b3c <ftello64@plt+0x246c>
   13b68:	andeq	pc, r1, ip, lsl #10
   13b6c:	push	{r4, r5, r6, lr}
   13b70:	mov	r4, r0
   13b74:	cmp	r1, #0
   13b78:	ldreq	r5, [r0]
   13b7c:	ldrne	r5, [r2]
   13b80:	mov	r0, r5
   13b84:	bl	129d0 <ftello64@plt+0x1300>
   13b88:	subs	r6, r0, #0
   13b8c:	beq	13ba0 <ftello64@plt+0x24d0>
   13b90:	ldr	r1, [r6, #8]
   13b94:	mov	r0, r4
   13b98:	bl	13ae8 <ftello64@plt+0x2418>
   13b9c:	pop	{r4, r5, r6, pc}
   13ba0:	bl	11568 <__errno_location@plt>
   13ba4:	mov	r3, r5
   13ba8:	ldr	r2, [pc, #12]	; 13bbc <ftello64@plt+0x24ec>
   13bac:	ldr	r1, [r0]
   13bb0:	mov	r0, #1
   13bb4:	bl	114a8 <error@plt>
   13bb8:	b	13b90 <ftello64@plt+0x24c0>
   13bbc:	andeq	pc, r1, ip, lsl #10
   13bc0:	push	{r4, lr}
   13bc4:	ldr	r3, [pc, #8]	; 13bd4 <ftello64@plt+0x2504>
   13bc8:	ldr	r1, [r3]
   13bcc:	bl	13ae8 <ftello64@plt+0x2418>
   13bd0:	pop	{r4, pc}
   13bd4:	andeq	r2, r3, r4, asr #23
   13bd8:	push	{r4, lr}
   13bdc:	ldr	r1, [r0]
   13be0:	bl	13ae8 <ftello64@plt+0x2418>
   13be4:	pop	{r4, pc}
   13be8:	push	{r4, lr}
   13bec:	ldr	r1, [pc, #4]	; 13bf8 <ftello64@plt+0x2528>
   13bf0:	bl	13ae8 <ftello64@plt+0x2418>
   13bf4:	pop	{r4, pc}
   13bf8:	andeq	pc, r1, r4, lsr #10
   13bfc:	push	{r4, lr}
   13c00:	ldr	r1, [pc, #4]	; 13c0c <ftello64@plt+0x253c>
   13c04:	bl	13ae8 <ftello64@plt+0x2418>
   13c08:	pop	{r4, pc}
   13c0c:	andeq	pc, r1, r4, lsr #10
   13c10:	push	{r4, r5, r6, lr}
   13c14:	mov	r6, r3
   13c18:	cmp	r1, #0
   13c1c:	ble	13dc4 <ftello64@plt+0x26f4>
   13c20:	mov	r5, r2
   13c24:	ldr	r3, [r2]
   13c28:	ldrb	r2, [r3]
   13c2c:	cmp	r2, #37	; 0x25
   13c30:	beq	13c64 <ftello64@plt+0x2594>
   13c34:	ldr	r0, [pc, #400]	; 13dcc <ftello64@plt+0x26fc>
   13c38:	mov	r1, r6
   13c3c:	bl	113b8 <printf@plt>
   13c40:	ldr	r3, [pc, #392]	; 13dd0 <ftello64@plt+0x2700>
   13c44:	ldr	r2, [r3]
   13c48:	ldr	r3, [r2]
   13c4c:	add	r0, r3, r0
   13c50:	str	r0, [r2]
   13c54:	mov	r2, #1
   13c58:	ldr	r3, [pc, #372]	; 13dd4 <ftello64@plt+0x2704>
   13c5c:	str	r2, [r3]
   13c60:	pop	{r4, r5, r6, pc}
   13c64:	ldrb	r2, [r3, #1]
   13c68:	cmp	r2, #35	; 0x23
   13c6c:	addne	r4, r3, #1
   13c70:	addeq	r4, r3, #2
   13c74:	bl	11520 <__ctype_b_loc@plt>
   13c78:	ldr	ip, [r0]
   13c7c:	mov	r3, r4
   13c80:	mov	r0, r3
   13c84:	ldrb	r2, [r3], #1
   13c88:	lsl	r1, r2, #1
   13c8c:	ldrh	r1, [ip, r1]
   13c90:	tst	r1, #2048	; 0x800
   13c94:	bne	13c80 <ftello64@plt+0x25b0>
   13c98:	and	r2, r2, #223	; 0xdf
   13c9c:	cmp	r2, #72	; 0x48
   13ca0:	bne	13cb0 <ftello64@plt+0x25e0>
   13ca4:	ldrb	r3, [r0, #1]
   13ca8:	cmp	r3, #0
   13cac:	addne	r0, r0, #1
   13cb0:	ldrb	r3, [r0]
   13cb4:	sub	r3, r3, #72	; 0x48
   13cb8:	cmp	r3, #48	; 0x30
   13cbc:	ldrls	pc, [pc, r3, lsl #2]
   13cc0:	b	13d88 <ftello64@plt+0x26b8>
   13cc4:	andeq	r3, r1, ip, lsr #27
   13cc8:	andeq	r3, r1, r8, lsl #27
   13ccc:	andeq	r3, r1, r8, lsl #27
   13cd0:	andeq	r3, r1, r8, lsl #27
   13cd4:	andeq	r3, r1, r8, lsl #27
   13cd8:	andeq	r3, r1, r8, lsl #27
   13cdc:	andeq	r3, r1, r8, lsl #27
   13ce0:			; <UNDEFINED> instruction: 0x00013db8
   13ce4:	andeq	r3, r1, r8, lsl #27
   13ce8:	andeq	r3, r1, r8, lsl #27
   13cec:	andeq	r3, r1, r8, lsl #27
   13cf0:	andeq	r3, r1, r8, lsl #27
   13cf4:	andeq	r3, r1, r8, lsl #27
   13cf8:	andeq	r3, r1, r8, lsl #27
   13cfc:	andeq	r3, r1, r8, lsl #27
   13d00:	andeq	r3, r1, r8, lsl #27
   13d04:	andeq	r3, r1, ip, lsr #27
   13d08:	andeq	r3, r1, r8, lsl #27
   13d0c:	andeq	r3, r1, r8, lsl #27
   13d10:	andeq	r3, r1, r8, lsl #27
   13d14:	andeq	r3, r1, r8, lsl #27
   13d18:	andeq	r3, r1, r8, lsl #27
   13d1c:	andeq	r3, r1, r8, lsl #27
   13d20:	andeq	r3, r1, r8, lsl #27
   13d24:	andeq	r3, r1, r8, lsl #27
   13d28:	andeq	r3, r1, r8, lsl #27
   13d2c:	andeq	r3, r1, r8, lsl #27
   13d30:	andeq	r3, r1, r8, lsl #27
   13d34:	andeq	r3, r1, r8, lsl #27
   13d38:	andeq	r3, r1, r8, lsl #27
   13d3c:	andeq	r3, r1, r8, lsl #27
   13d40:	andeq	r3, r1, r8, lsl #27
   13d44:	andeq	r3, r1, r0, lsr #27
   13d48:	andeq	r3, r1, r8, lsl #27
   13d4c:	andeq	r3, r1, r8, lsl #27
   13d50:	andeq	r3, r1, r8, lsl #27
   13d54:	andeq	r3, r1, r8, lsl #27
   13d58:	andeq	r3, r1, r8, lsl #27
   13d5c:	andeq	r3, r1, r8, lsl #27
   13d60:			; <UNDEFINED> instruction: 0x00013db8
   13d64:	andeq	r3, r1, r8, lsl #27
   13d68:	andeq	r3, r1, r8, lsl #27
   13d6c:	andeq	r3, r1, r8, lsl #27
   13d70:	andeq	r3, r1, r8, lsl #27
   13d74:	andeq	r3, r1, r8, lsl #27
   13d78:	andeq	r3, r1, r8, lsl #27
   13d7c:	andeq	r3, r1, r8, lsl #27
   13d80:	andeq	r3, r1, r8, lsl #27
   13d84:	andeq	r3, r1, r0, lsr #27
   13d88:	mov	r3, #105	; 0x69
   13d8c:	strb	r3, [r0]
   13d90:	mov	r3, #0
   13d94:	strb	r3, [r0, #1]
   13d98:	ldr	r0, [r5]
   13d9c:	b	13c38 <ftello64@plt+0x2568>
   13da0:	mov	r3, #120	; 0x78
   13da4:	strb	r3, [r0]
   13da8:	b	13d90 <ftello64@plt+0x26c0>
   13dac:	mov	r3, #88	; 0x58
   13db0:	strb	r3, [r0]
   13db4:	b	13d90 <ftello64@plt+0x26c0>
   13db8:	mov	r3, #111	; 0x6f
   13dbc:	strb	r3, [r0]
   13dc0:	b	13d90 <ftello64@plt+0x26c0>
   13dc4:	ldr	r0, [pc]	; 13dcc <ftello64@plt+0x26fc>
   13dc8:	b	13c38 <ftello64@plt+0x2568>
   13dcc:	andeq	pc, r1, r8, lsl #10
   13dd0:	andeq	r2, r3, r8, lsl r5
   13dd4:	andeq	r2, r3, r8, lsl #24
   13dd8:	push	{r4, r5, r6, lr}
   13ddc:	mov	r4, r0
   13de0:	mov	r5, r1
   13de4:	mov	r6, r2
   13de8:	ldr	r2, [r0, #4]
   13dec:	ldr	r1, [pc, #68]	; 13e38 <ftello64@plt+0x2768>
   13df0:	ldr	r0, [r0, #8]
   13df4:	bl	17e54 <argp_parse@@Base+0xd04>
   13df8:	cmp	r0, #0
   13dfc:	blt	13e1c <ftello64@plt+0x274c>
   13e00:	ldr	r3, [r4, #4]
   13e04:	ldr	r3, [r3, #16]
   13e08:	mov	r2, r6
   13e0c:	mov	r1, r5
   13e10:	mov	r0, r4
   13e14:	bl	13c10 <ftello64@plt+0x2540>
   13e18:	pop	{r4, r5, r6, pc}
   13e1c:	bl	11568 <__errno_location@plt>
   13e20:	ldr	r3, [r4, #4]
   13e24:	ldr	r2, [pc, #16]	; 13e3c <ftello64@plt+0x276c>
   13e28:	ldr	r1, [r0]
   13e2c:	mov	r0, #1
   13e30:	bl	114a8 <error@plt>
   13e34:	pop	{r4, r5, r6, pc}
   13e38:	andeq	r8, r0, r1, lsr #18
   13e3c:	andeq	pc, r1, r0, lsr r5	; <UNPREDICTABLE>
   13e40:	push	{r4, r5, r6, lr}
   13e44:	mov	r4, r0
   13e48:	mov	r5, r1
   13e4c:	mov	r6, r2
   13e50:	ldr	r2, [r0, #4]
   13e54:	ldr	r1, [pc, #68]	; 13ea0 <ftello64@plt+0x27d0>
   13e58:	ldr	r0, [r0, #8]
   13e5c:	bl	17e54 <argp_parse@@Base+0xd04>
   13e60:	cmp	r0, #0
   13e64:	blt	13e84 <ftello64@plt+0x27b4>
   13e68:	ldr	r3, [r4, #4]
   13e6c:	ldr	r3, [r3, #16]
   13e70:	mov	r2, r6
   13e74:	mov	r1, r5
   13e78:	mov	r0, r4
   13e7c:	bl	13c10 <ftello64@plt+0x2540>
   13e80:	pop	{r4, r5, r6, pc}
   13e84:	bl	11568 <__errno_location@plt>
   13e88:	ldr	r3, [r4, #4]
   13e8c:	ldr	r2, [pc, #16]	; 13ea4 <ftello64@plt+0x27d4>
   13e90:	ldr	r1, [r0]
   13e94:	mov	r0, #1
   13e98:	bl	114a8 <error@plt>
   13e9c:	pop	{r4, r5, r6, pc}
   13ea0:	andeq	r8, r0, sp, lsl r9
   13ea4:	andeq	pc, r1, r8, asr r5	; <UNPREDICTABLE>
   13ea8:	push	{r4, lr}
   13eac:	ldr	r3, [r0, #4]
   13eb0:	ldrb	r3, [r3, #26]
   13eb4:	bl	13c10 <ftello64@plt+0x2540>
   13eb8:	pop	{r4, pc}
   13ebc:	push	{r4, lr}
   13ec0:	ldr	r3, [r0, #4]
   13ec4:	ldrh	r3, [r3, #24]
   13ec8:	cmp	r3, #255	; 0xff
   13ecc:	bhi	13edc <ftello64@plt+0x280c>
   13ed0:	ldr	r1, [pc, #12]	; 13ee4 <ftello64@plt+0x2814>
   13ed4:	bl	13ae8 <ftello64@plt+0x2418>
   13ed8:	pop	{r4, pc}
   13edc:	bl	13c10 <ftello64@plt+0x2540>
   13ee0:	pop	{r4, pc}
   13ee4:	andeq	pc, r1, r0, lsl #11
   13ee8:	push	{r4, lr}
   13eec:	ldr	r3, [r0, #4]
   13ef0:	ldrb	r3, [r3, #27]
   13ef4:	cmp	r3, #0
   13ef8:	bne	13f08 <ftello64@plt+0x2838>
   13efc:	ldr	r1, [pc, #12]	; 13f10 <ftello64@plt+0x2840>
   13f00:	bl	13ae8 <ftello64@plt+0x2418>
   13f04:	pop	{r4, pc}
   13f08:	bl	13c10 <ftello64@plt+0x2540>
   13f0c:	pop	{r4, pc}
   13f10:	andeq	pc, r1, r0, lsl #11
   13f14:	push	{r4, r5, r6, lr}
   13f18:	mov	r6, r3
   13f1c:	cmp	r1, #0
   13f20:	ble	140b4 <ftello64@plt+0x29e4>
   13f24:	mov	r5, r2
   13f28:	ldr	r4, [r2]
   13f2c:	ldrb	r3, [r4]
   13f30:	cmp	r3, #37	; 0x25
   13f34:	beq	13f68 <ftello64@plt+0x2898>
   13f38:	ldr	r0, [pc, #380]	; 140bc <ftello64@plt+0x29ec>
   13f3c:	mov	r1, r6
   13f40:	bl	113b8 <printf@plt>
   13f44:	ldr	r3, [pc, #372]	; 140c0 <ftello64@plt+0x29f0>
   13f48:	ldr	r2, [r3]
   13f4c:	ldr	r3, [r2]
   13f50:	add	r0, r3, r0
   13f54:	str	r0, [r2]
   13f58:	mov	r2, #1
   13f5c:	ldr	r3, [pc, #352]	; 140c4 <ftello64@plt+0x29f4>
   13f60:	str	r2, [r3]
   13f64:	pop	{r4, r5, r6, pc}
   13f68:	bl	11520 <__ctype_b_loc@plt>
   13f6c:	ldr	ip, [r0]
   13f70:	add	r3, r4, #1
   13f74:	mov	r0, r3
   13f78:	ldrb	r2, [r3], #1
   13f7c:	lsl	r1, r2, #1
   13f80:	ldrh	r1, [ip, r1]
   13f84:	tst	r1, #2048	; 0x800
   13f88:	bne	13f74 <ftello64@plt+0x28a4>
   13f8c:	cmp	r2, #35	; 0x23
   13f90:	moveq	r0, r3
   13f94:	ldrb	r3, [r0]
   13f98:	cmp	r3, #108	; 0x6c
   13f9c:	addeq	r0, r0, #1
   13fa0:	ldrb	r3, [r0]
   13fa4:	sub	r3, r3, #72	; 0x48
   13fa8:	cmp	r3, #48	; 0x30
   13fac:	ldrls	pc, [pc, r3, lsl #2]
   13fb0:	b	14078 <ftello64@plt+0x29a8>
   13fb4:	muleq	r1, ip, r0
   13fb8:	andeq	r4, r1, r8, ror r0
   13fbc:	andeq	r4, r1, r8, ror r0
   13fc0:	andeq	r4, r1, r8, ror r0
   13fc4:	andeq	r4, r1, r8, ror r0
   13fc8:	andeq	r4, r1, r8, ror r0
   13fcc:	andeq	r4, r1, r8, ror r0
   13fd0:	andeq	r4, r1, r8, lsr #1
   13fd4:	andeq	r4, r1, r8, ror r0
   13fd8:	andeq	r4, r1, r8, ror r0
   13fdc:	andeq	r4, r1, r8, ror r0
   13fe0:	andeq	r4, r1, r8, ror r0
   13fe4:	andeq	r4, r1, r8, ror r0
   13fe8:	andeq	r4, r1, r8, ror r0
   13fec:	andeq	r4, r1, r8, ror r0
   13ff0:	andeq	r4, r1, r8, ror r0
   13ff4:	muleq	r1, ip, r0
   13ff8:	andeq	r4, r1, r8, ror r0
   13ffc:	andeq	r4, r1, r8, ror r0
   14000:	andeq	r4, r1, r8, ror r0
   14004:	andeq	r4, r1, r8, ror r0
   14008:	andeq	r4, r1, r8, ror r0
   1400c:	andeq	r4, r1, r8, ror r0
   14010:	andeq	r4, r1, r8, ror r0
   14014:	andeq	r4, r1, r8, ror r0
   14018:	andeq	r4, r1, r8, ror r0
   1401c:	andeq	r4, r1, r8, ror r0
   14020:	andeq	r4, r1, r8, ror r0
   14024:	andeq	r4, r1, r8, ror r0
   14028:	andeq	r4, r1, r8, ror r0
   1402c:	andeq	r4, r1, r8, ror r0
   14030:	andeq	r4, r1, r8, ror r0
   14034:	muleq	r1, r0, r0
   14038:	andeq	r4, r1, r8, ror r0
   1403c:	andeq	r4, r1, r8, ror r0
   14040:	andeq	r4, r1, r8, ror r0
   14044:	andeq	r4, r1, r8, ror r0
   14048:	andeq	r4, r1, r8, ror r0
   1404c:	andeq	r4, r1, r8, ror r0
   14050:	andeq	r4, r1, r8, lsr #1
   14054:	andeq	r4, r1, r8, ror r0
   14058:	andeq	r4, r1, r8, ror r0
   1405c:	andeq	r4, r1, r8, ror r0
   14060:	andeq	r4, r1, r8, ror r0
   14064:	andeq	r4, r1, r8, ror r0
   14068:	andeq	r4, r1, r8, ror r0
   1406c:	andeq	r4, r1, r8, ror r0
   14070:	andeq	r4, r1, r8, ror r0
   14074:	muleq	r1, r0, r0
   14078:	mov	r3, #105	; 0x69
   1407c:	strb	r3, [r0]
   14080:	mov	r3, #0
   14084:	strb	r3, [r0, #1]
   14088:	ldr	r0, [r5]
   1408c:	b	13f3c <ftello64@plt+0x286c>
   14090:	mov	r3, #120	; 0x78
   14094:	strb	r3, [r0]
   14098:	b	14080 <ftello64@plt+0x29b0>
   1409c:	mov	r3, #88	; 0x58
   140a0:	strb	r3, [r0]
   140a4:	b	14080 <ftello64@plt+0x29b0>
   140a8:	mov	r3, #111	; 0x6f
   140ac:	strb	r3, [r0]
   140b0:	b	14080 <ftello64@plt+0x29b0>
   140b4:	ldr	r0, [pc]	; 140bc <ftello64@plt+0x29ec>
   140b8:	b	13f3c <ftello64@plt+0x286c>
   140bc:	ldrdeq	pc, [r1], -r4
   140c0:	andeq	r2, r3, r8, lsl r5
   140c4:	andeq	r2, r3, r8, lsl #24
   140c8:	push	{r4, lr}
   140cc:	ldr	r3, [r0, #4]
   140d0:	ldr	r3, [r3, #16]
   140d4:	cmp	r3, #0
   140d8:	bne	140e8 <ftello64@plt+0x2a18>
   140dc:	ldr	r1, [pc, #12]	; 140f0 <ftello64@plt+0x2a20>
   140e0:	bl	13ae8 <ftello64@plt+0x2418>
   140e4:	pop	{r4, pc}
   140e8:	bl	13f14 <ftello64@plt+0x2844>
   140ec:	pop	{r4, pc}
   140f0:	andeq	pc, r1, r0, lsl #11
   140f4:	push	{r4, lr}
   140f8:	ldr	r3, [r0, #4]
   140fc:	ldr	r3, [r3, #20]
   14100:	cmp	r3, #0
   14104:	bne	14114 <ftello64@plt+0x2a44>
   14108:	ldr	r1, [pc, #12]	; 1411c <ftello64@plt+0x2a4c>
   1410c:	bl	13ae8 <ftello64@plt+0x2418>
   14110:	pop	{r4, pc}
   14114:	bl	13f14 <ftello64@plt+0x2844>
   14118:	pop	{r4, pc}
   1411c:	andeq	pc, r1, r0, lsl #11
   14120:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14124:	sub	sp, sp, #16
   14128:	mov	sl, r0
   1412c:	mov	r8, r1
   14130:	mov	r9, r2
   14134:	mov	r7, r3
   14138:	ldr	r0, [r3, #4]
   1413c:	bl	11424 <inet_ntoa@plt>
   14140:	mov	r5, r0
   14144:	mov	r1, #46	; 0x2e
   14148:	bl	11550 <strchr@plt>
   1414c:	mov	r4, #0
   14150:	mov	r6, r0
   14154:	strb	r4, [r6], #1
   14158:	mov	r2, r4
   1415c:	mov	r1, r4
   14160:	mov	r0, r5
   14164:	bl	113ac <strtol@plt>
   14168:	str	r0, [sp]
   1416c:	mov	r1, #46	; 0x2e
   14170:	mov	r0, r6
   14174:	bl	11550 <strchr@plt>
   14178:	mov	r5, r0
   1417c:	strb	r4, [r5], #1
   14180:	mov	r2, r4
   14184:	mov	r1, r4
   14188:	mov	r0, r6
   1418c:	bl	113ac <strtol@plt>
   14190:	str	r0, [sp, #4]
   14194:	mov	r1, #46	; 0x2e
   14198:	mov	r0, r5
   1419c:	bl	11550 <strchr@plt>
   141a0:	mov	r6, r0
   141a4:	strb	r4, [r6], #1
   141a8:	mov	r2, r4
   141ac:	mov	r1, r4
   141b0:	mov	r0, r5
   141b4:	bl	113ac <strtol@plt>
   141b8:	str	r0, [sp, #8]
   141bc:	mov	r2, r4
   141c0:	mov	r1, r4
   141c4:	mov	r0, r6
   141c8:	bl	113ac <strtol@plt>
   141cc:	str	r0, [sp, #12]
   141d0:	ldr	r0, [r7, #4]
   141d4:	bl	11424 <inet_ntoa@plt>
   141d8:	cmp	r8, r4
   141dc:	ble	14220 <ftello64@plt+0x2b50>
   141e0:	mov	r2, r4
   141e4:	mov	r1, r4
   141e8:	ldr	r0, [r9]
   141ec:	bl	113ac <strtol@plt>
   141f0:	cmp	r0, #3
   141f4:	bls	14200 <ftello64@plt+0x2b30>
   141f8:	add	sp, sp, #16
   141fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14200:	add	r3, sp, #16
   14204:	add	r0, r3, r0, lsl #2
   14208:	ldr	r3, [r0, #-16]
   1420c:	add	r2, r9, #4
   14210:	sub	r1, r8, #1
   14214:	mov	r0, sl
   14218:	bl	13c10 <ftello64@plt+0x2540>
   1421c:	b	141f8 <ftello64@plt+0x2b28>
   14220:	mov	r1, r0
   14224:	mov	r0, sl
   14228:	bl	13ae8 <ftello64@plt+0x2418>
   1422c:	b	141f8 <ftello64@plt+0x2b28>
   14230:	push	{r4, r5, r6, lr}
   14234:	mov	r4, r0
   14238:	mov	r5, r1
   1423c:	mov	r6, r2
   14240:	ldr	r2, [r0, #4]
   14244:	ldr	r1, [pc, #68]	; 14290 <ftello64@plt+0x2bc0>
   14248:	ldr	r0, [r0, #8]
   1424c:	bl	17e54 <argp_parse@@Base+0xd04>
   14250:	cmp	r0, #0
   14254:	blt	14274 <ftello64@plt+0x2ba4>
   14258:	ldr	r3, [r4, #4]
   1425c:	add	r3, r3, #16
   14260:	mov	r2, r6
   14264:	mov	r1, r5
   14268:	mov	r0, r4
   1426c:	bl	14120 <ftello64@plt+0x2a50>
   14270:	pop	{r4, r5, r6, pc}
   14274:	bl	11568 <__errno_location@plt>
   14278:	ldr	r3, [r4, #4]
   1427c:	ldr	r2, [pc, #16]	; 14294 <ftello64@plt+0x2bc4>
   14280:	ldr	r1, [r0]
   14284:	mov	r0, #1
   14288:	bl	114a8 <error@plt>
   1428c:	pop	{r4, r5, r6, pc}
   14290:	andeq	r8, r0, r5, lsl r9
   14294:	muleq	r1, r0, r5
   14298:	push	{r4, r5, r6, lr}
   1429c:	mov	r4, r0
   142a0:	mov	r5, r1
   142a4:	mov	r6, r2
   142a8:	ldr	r2, [r0, #4]
   142ac:	ldr	r1, [pc, #68]	; 142f8 <ftello64@plt+0x2c28>
   142b0:	ldr	r0, [r0, #8]
   142b4:	bl	17e54 <argp_parse@@Base+0xd04>
   142b8:	cmp	r0, #0
   142bc:	blt	142dc <ftello64@plt+0x2c0c>
   142c0:	ldr	r3, [r4, #4]
   142c4:	add	r3, r3, #16
   142c8:	mov	r2, r6
   142cc:	mov	r1, r5
   142d0:	mov	r0, r4
   142d4:	bl	14120 <ftello64@plt+0x2a50>
   142d8:	pop	{r4, r5, r6, pc}
   142dc:	bl	11568 <__errno_location@plt>
   142e0:	ldr	r3, [r4, #4]
   142e4:	ldr	r2, [pc, #16]	; 142fc <ftello64@plt+0x2c2c>
   142e8:	ldr	r1, [r0]
   142ec:	mov	r0, #1
   142f0:	bl	114a8 <error@plt>
   142f4:	pop	{r4, r5, r6, pc}
   142f8:	andeq	r8, r0, fp, lsl r9
   142fc:			; <UNDEFINED> instruction: 0x0001f5b8
   14300:	push	{r4, r5, r6, lr}
   14304:	mov	r4, r0
   14308:	mov	r5, r1
   1430c:	mov	r6, r2
   14310:	ldr	r2, [r0, #4]
   14314:	ldr	r1, [pc, #68]	; 14360 <ftello64@plt+0x2c90>
   14318:	ldr	r0, [r0, #8]
   1431c:	bl	17e54 <argp_parse@@Base+0xd04>
   14320:	cmp	r0, #0
   14324:	blt	14344 <ftello64@plt+0x2c74>
   14328:	ldr	r3, [r4, #4]
   1432c:	add	r3, r3, #16
   14330:	mov	r2, r6
   14334:	mov	r1, r5
   14338:	mov	r0, r4
   1433c:	bl	14120 <ftello64@plt+0x2a50>
   14340:	pop	{r4, r5, r6, pc}
   14344:	bl	11568 <__errno_location@plt>
   14348:	ldr	r3, [r4, #4]
   1434c:	ldr	r2, [pc, #16]	; 14364 <ftello64@plt+0x2c94>
   14350:	ldr	r1, [r0]
   14354:	mov	r0, #1
   14358:	bl	114a8 <error@plt>
   1435c:	pop	{r4, r5, r6, pc}
   14360:	andeq	r8, r0, r9, lsl r9
   14364:	andeq	pc, r1, r4, ror #11
   14368:	push	{r4, r5, r6, lr}
   1436c:	mov	r4, r0
   14370:	mov	r5, r1
   14374:	mov	r6, r2
   14378:	ldr	r2, [r0, #4]
   1437c:	ldr	r1, [pc, #68]	; 143c8 <ftello64@plt+0x2cf8>
   14380:	ldr	r0, [r0, #8]
   14384:	bl	17e54 <argp_parse@@Base+0xd04>
   14388:	cmp	r0, #0
   1438c:	blt	143ac <ftello64@plt+0x2cdc>
   14390:	ldr	r3, [r4, #4]
   14394:	add	r3, r3, #16
   14398:	mov	r2, r6
   1439c:	mov	r1, r5
   143a0:	mov	r0, r4
   143a4:	bl	14120 <ftello64@plt+0x2a50>
   143a8:	pop	{r4, r5, r6, pc}
   143ac:	bl	11568 <__errno_location@plt>
   143b0:	ldr	r3, [r4, #4]
   143b4:	ldr	r2, [pc, #16]	; 143cc <ftello64@plt+0x2cfc>
   143b8:	ldr	r1, [r0]
   143bc:	mov	r0, #1
   143c0:	bl	114a8 <error@plt>
   143c4:	pop	{r4, r5, r6, pc}
   143c8:	andeq	r8, r0, r7, lsl r9
   143cc:	andeq	pc, r1, r0, lsl r6	; <UNPREDICTABLE>
   143d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143d4:	subs	r5, r3, #0
   143d8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143dc:	mov	r8, r0
   143e0:	mov	sl, r1
   143e4:	mov	fp, r2
   143e8:	mov	r6, #1
   143ec:	mov	r4, r6
   143f0:	mov	r7, #0
   143f4:	b	14438 <ftello64@plt+0x2d68>
   143f8:	mov	r1, #32
   143fc:	mov	r0, r8
   14400:	bl	13998 <ftello64@plt+0x22c8>
   14404:	mov	r1, r9
   14408:	mov	r0, r8
   1440c:	bl	13ae8 <ftello64@plt+0x2418>
   14410:	bic	r5, r5, r4
   14414:	mov	r6, r7
   14418:	lsls	r4, r4, #1
   1441c:	movne	r3, #1
   14420:	moveq	r3, #0
   14424:	cmp	r5, #0
   14428:	moveq	r3, #0
   1442c:	andne	r3, r3, #1
   14430:	cmp	r3, #0
   14434:	beq	14474 <ftello64@plt+0x2da4>
   14438:	tst	r4, r5
   1443c:	beq	14418 <ftello64@plt+0x2d48>
   14440:	mov	r1, r7
   14444:	mov	r0, r4
   14448:	bl	11bec <ftello64@plt+0x51c>
   1444c:	subs	r9, r0, #0
   14450:	beq	14418 <ftello64@plt+0x2d48>
   14454:	cmp	r6, #0
   14458:	bne	14404 <ftello64@plt+0x2d34>
   1445c:	cmp	sl, #0
   14460:	ble	143f8 <ftello64@plt+0x2d28>
   14464:	ldr	r1, [fp]
   14468:	mov	r0, r8
   1446c:	bl	13ae8 <ftello64@plt+0x2418>
   14470:	b	14404 <ftello64@plt+0x2d34>
   14474:	cmp	r5, #0
   14478:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1447c:	cmp	r6, #0
   14480:	bne	14498 <ftello64@plt+0x2dc8>
   14484:	cmp	sl, #0
   14488:	ble	144b0 <ftello64@plt+0x2de0>
   1448c:	ldr	r1, [fp]
   14490:	mov	r0, r8
   14494:	bl	13ae8 <ftello64@plt+0x2418>
   14498:	mov	r3, r5
   1449c:	add	r2, fp, #4
   144a0:	sub	r1, sl, #1
   144a4:	mov	r0, r8
   144a8:	bl	13c10 <ftello64@plt+0x2540>
   144ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144b0:	mov	r1, #32
   144b4:	mov	r0, r8
   144b8:	bl	13998 <ftello64@plt+0x22c8>
   144bc:	b	14498 <ftello64@plt+0x2dc8>
   144c0:	push	{r4, lr}
   144c4:	sub	sp, sp, #16
   144c8:	mov	r4, r0
   144cc:	mov	r2, #15
   144d0:	mov	r1, sp
   144d4:	mov	r0, r3
   144d8:	bl	11d84 <ftello64@plt+0x6b4>
   144dc:	mov	r1, sp
   144e0:	mov	r0, r4
   144e4:	bl	13ae8 <ftello64@plt+0x2418>
   144e8:	add	sp, sp, #16
   144ec:	pop	{r4, pc}
   144f0:	push	{r4, r5, r6, r7, r8, lr}
   144f4:	mov	r4, r0
   144f8:	mov	r6, r1
   144fc:	mov	r7, r2
   14500:	ldr	r2, [r0, #4]
   14504:	ldr	r1, [pc, #216]	; 145e4 <ftello64@plt+0x2f14>
   14508:	ldr	r0, [r0, #8]
   1450c:	bl	17e54 <argp_parse@@Base+0xd04>
   14510:	cmp	r0, #0
   14514:	blt	14580 <ftello64@plt+0x2eb0>
   14518:	ldr	r3, [r4, #4]
   1451c:	ldrh	r8, [r3, #16]
   14520:	cmp	r6, #0
   14524:	ble	145cc <ftello64@plt+0x2efc>
   14528:	ldr	r5, [r7]
   1452c:	ldr	r1, [pc, #180]	; 145e8 <ftello64@plt+0x2f18>
   14530:	mov	r0, r5
   14534:	bl	113a0 <strcmp@plt>
   14538:	cmp	r0, #0
   1453c:	beq	1459c <ftello64@plt+0x2ecc>
   14540:	ldr	r1, [pc, #164]	; 145ec <ftello64@plt+0x2f1c>
   14544:	mov	r0, r5
   14548:	bl	113a0 <strcmp@plt>
   1454c:	cmp	r0, #0
   14550:	beq	145b4 <ftello64@plt+0x2ee4>
   14554:	ldr	r1, [pc, #148]	; 145f0 <ftello64@plt+0x2f20>
   14558:	mov	r0, r5
   1455c:	bl	113a0 <strcmp@plt>
   14560:	cmp	r0, #0
   14564:	popne	{r4, r5, r6, r7, r8, pc}
   14568:	mov	r3, r8
   1456c:	add	r2, r7, #4
   14570:	sub	r1, r6, #1
   14574:	mov	r0, r4
   14578:	bl	143d0 <ftello64@plt+0x2d00>
   1457c:	pop	{r4, r5, r6, r7, r8, pc}
   14580:	bl	11568 <__errno_location@plt>
   14584:	ldr	r3, [r4, #4]
   14588:	ldr	r2, [pc, #100]	; 145f4 <ftello64@plt+0x2f24>
   1458c:	ldr	r1, [r0]
   14590:	mov	r0, #1
   14594:	bl	114a8 <error@plt>
   14598:	pop	{r4, r5, r6, r7, r8, pc}
   1459c:	mov	r3, r8
   145a0:	add	r2, r7, #4
   145a4:	sub	r1, r6, #1
   145a8:	mov	r0, r4
   145ac:	bl	13c10 <ftello64@plt+0x2540>
   145b0:	pop	{r4, r5, r6, r7, r8, pc}
   145b4:	mov	r3, r8
   145b8:	add	r2, r7, #4
   145bc:	sub	r1, r6, #1
   145c0:	mov	r0, r4
   145c4:	bl	144c0 <ftello64@plt+0x2df0>
   145c8:	pop	{r4, r5, r6, r7, r8, pc}
   145cc:	mov	r3, r8
   145d0:	mov	r2, r7
   145d4:	mov	r1, r6
   145d8:	mov	r0, r4
   145dc:	bl	143d0 <ftello64@plt+0x2d00>
   145e0:	pop	{r4, r5, r6, r7, r8, pc}
   145e4:	andeq	r8, r0, r3, lsl r9
   145e8:	andeq	pc, r1, r4, ror #12
   145ec:	andeq	lr, r1, r4, lsl #7
   145f0:	andeq	pc, r1, ip, ror #12
   145f4:	andeq	pc, r1, ip, lsr r6	; <UNPREDICTABLE>
   145f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   145fc:	mov	r5, r0
   14600:	mov	r7, r1
   14604:	mov	r9, r3
   14608:	ldr	r3, [pc, #160]	; 146b0 <ftello64@plt+0x2fe0>
   1460c:	ldr	r0, [r3, #4]
   14610:	cmp	r0, #0
   14614:	beq	14640 <ftello64@plt+0x2f70>
   14618:	mov	r8, r2
   1461c:	add	r4, r3, #4
   14620:	mov	r6, r4
   14624:	mov	r1, r5
   14628:	bl	113a0 <strcmp@plt>
   1462c:	cmp	r0, #0
   14630:	beq	14690 <ftello64@plt+0x2fc0>
   14634:	ldr	r0, [r4, #8]!
   14638:	cmp	r0, #0
   1463c:	bne	14620 <ftello64@plt+0x2f50>
   14640:	ldr	r0, [pc, #108]	; 146b4 <ftello64@plt+0x2fe4>
   14644:	bl	113b8 <printf@plt>
   14648:	ldr	r4, [pc, #96]	; 146b0 <ftello64@plt+0x2fe0>
   1464c:	ldr	r2, [r4]
   14650:	ldr	r3, [r2]
   14654:	add	r0, r3, r0
   14658:	str	r0, [r2]
   1465c:	mov	r1, r5
   14660:	mov	r0, r7
   14664:	bl	13ae8 <ftello64@plt+0x2418>
   14668:	ldr	r0, [pc, #72]	; 146b8 <ftello64@plt+0x2fe8>
   1466c:	bl	113b8 <printf@plt>
   14670:	ldr	r2, [r4]
   14674:	ldr	r3, [r2]
   14678:	add	r0, r3, r0
   1467c:	str	r0, [r2]
   14680:	mov	r2, #1
   14684:	ldr	r3, [pc, #48]	; 146bc <ftello64@plt+0x2fec>
   14688:	str	r2, [r3]
   1468c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14690:	ldr	r3, [r4, #4]
   14694:	cmp	r3, #0
   14698:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1469c:	mov	r2, r9
   146a0:	mov	r1, r8
   146a4:	mov	r0, r7
   146a8:	blx	r3
   146ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   146b0:	andeq	r2, r3, r8, lsl r5
   146b4:	andeq	pc, r1, r4, ror r6	; <UNPREDICTABLE>
   146b8:	strdeq	pc, [r1], -r4
   146bc:	andeq	r2, r3, r8, lsl #24
   146c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146c4:	add	fp, sp, #32
   146c8:	sub	sp, sp, #20
   146cc:	mov	r5, r0
   146d0:	mov	sl, r1
   146d4:	ldr	r4, [r0, #16]
   146d8:	ldr	r3, [r0, #20]
   146dc:	add	r3, r3, #1
   146e0:	str	r3, [r0, #20]
   146e4:	b	14758 <ftello64@plt+0x3088>
   146e8:	mov	r0, r5
   146ec:	bl	13998 <ftello64@plt+0x22c8>
   146f0:	ldrb	r1, [r4, #1]!
   146f4:	cmp	r1, #36	; 0x24
   146f8:	cmpne	r1, #0
   146fc:	beq	14728 <ftello64@plt+0x3058>
   14700:	ldr	r2, [r5, #20]
   14704:	subs	r3, r1, #125	; 0x7d
   14708:	movne	r3, #1
   1470c:	cmp	r2, #1
   14710:	orrle	r3, r3, #1
   14714:	cmp	r3, #0
   14718:	beq	14728 <ftello64@plt+0x3058>
   1471c:	cmp	sl, #0
   14720:	bne	146f0 <ftello64@plt+0x3020>
   14724:	b	146e8 <ftello64@plt+0x3018>
   14728:	cmp	r1, #36	; 0x24
   1472c:	bne	1494c <ftello64@plt+0x327c>
   14730:	ldrb	r3, [r4, #1]
   14734:	cmp	r3, #123	; 0x7b
   14738:	beq	147b4 <ftello64@plt+0x30e4>
   1473c:	cmp	r3, #125	; 0x7d
   14740:	beq	147a8 <ftello64@plt+0x30d8>
   14744:	cmp	r3, #36	; 0x24
   14748:	beq	147a8 <ftello64@plt+0x30d8>
   1474c:	cmp	sl, #0
   14750:	beq	1478c <ftello64@plt+0x30bc>
   14754:	add	r4, r4, #2
   14758:	ldrb	r1, [r4]
   1475c:	cmp	r1, #0
   14760:	beq	1494c <ftello64@plt+0x327c>
   14764:	ldr	r2, [r5, #20]
   14768:	subs	r3, r1, #125	; 0x7d
   1476c:	movne	r3, #1
   14770:	cmp	r2, #1
   14774:	orrle	r3, r3, #1
   14778:	cmp	r3, #0
   1477c:	beq	1494c <ftello64@plt+0x327c>
   14780:	cmp	r1, #36	; 0x24
   14784:	bne	1471c <ftello64@plt+0x304c>
   14788:	b	14730 <ftello64@plt+0x3060>
   1478c:	mov	r1, #36	; 0x24
   14790:	mov	r0, r5
   14794:	bl	13998 <ftello64@plt+0x22c8>
   14798:	ldrb	r1, [r4, #1]
   1479c:	mov	r0, r5
   147a0:	bl	13998 <ftello64@plt+0x22c8>
   147a4:	b	14754 <ftello64@plt+0x3084>
   147a8:	cmp	sl, #0
   147ac:	bne	14754 <ftello64@plt+0x3084>
   147b0:	b	14798 <ftello64@plt+0x30c8>
   147b4:	add	r6, r4, #2
   147b8:	mov	r1, #125	; 0x7d
   147bc:	mov	r0, r6
   147c0:	bl	11550 <strchr@plt>
   147c4:	subs	r7, r0, #0
   147c8:	beq	14850 <ftello64@plt+0x3180>
   147cc:	sub	r4, r7, r6
   147d0:	add	r3, r4, #15
   147d4:	bic	r3, r3, #7
   147d8:	sub	sp, sp, r3
   147dc:	mov	r3, sp
   147e0:	lsr	r8, r3, #3
   147e4:	lsl	r3, r8, #3
   147e8:	str	r3, [fp, #-40]	; 0xffffffd8
   147ec:	mov	r2, r4
   147f0:	mov	r1, r6
   147f4:	mov	r0, r3
   147f8:	bl	1140c <memcpy@plt>
   147fc:	mov	r3, #0
   14800:	strb	r3, [r4, r8, lsl #3]
   14804:	add	r4, r7, #1
   14808:	cmp	sl, #0
   1480c:	strne	r4, [r5, #16]
   14810:	bne	14898 <ftello64@plt+0x31c8>
   14814:	mov	r0, r7
   14818:	bl	11544 <strlen@plt>
   1481c:	lsr	r3, r0, #1
   14820:	add	r3, r3, #14
   14824:	bic	r3, r3, #7
   14828:	sub	sp, sp, r3
   1482c:	str	sp, [fp, #-44]	; 0xffffffd4
   14830:	ldrb	r3, [r7, #1]
   14834:	cmp	r3, #123	; 0x7b
   14838:	bne	14964 <ftello64@plt+0x3294>
   1483c:	sub	r3, sp, #4
   14840:	mov	r6, sl
   14844:	str	sl, [fp, #-48]	; 0xffffffd0
   14848:	mov	sl, r3
   1484c:	b	148b0 <ftello64@plt+0x31e0>
   14850:	mov	r1, r4
   14854:	mov	r0, r5
   14858:	bl	13ae8 <ftello64@plt+0x2418>
   1485c:	mov	r1, #0
   14860:	mov	r0, r4
   14864:	bl	11550 <strchr@plt>
   14868:	mov	r4, r0
   1486c:	b	14758 <ftello64@plt+0x3088>
   14870:	add	r4, r4, #1
   14874:	str	r4, [r5, #16]
   14878:	mov	r1, #1
   1487c:	mov	r0, r5
   14880:	bl	146c0 <ftello64@plt+0x2ff0>
   14884:	ldr	r3, [r5, #16]
   14888:	ldrb	r2, [r3]
   1488c:	cmp	r2, #125	; 0x7d
   14890:	addeq	r3, r3, #1
   14894:	streq	r3, [r5, #16]
   14898:	ldr	r4, [r5, #16]
   1489c:	ldrb	r3, [r4]
   148a0:	cmp	r3, #123	; 0x7b
   148a4:	beq	14870 <ftello64@plt+0x31a0>
   148a8:	b	14758 <ftello64@plt+0x3088>
   148ac:	mov	r6, r2
   148b0:	add	r8, r4, #1
   148b4:	str	r8, [r5, #16]
   148b8:	mov	r1, #1
   148bc:	mov	r0, r5
   148c0:	bl	146c0 <ftello64@plt+0x2ff0>
   148c4:	ldr	r4, [r5, #16]
   148c8:	sub	r7, r4, r8
   148cc:	add	r0, r7, #1
   148d0:	bl	18a00 <_obstack_memory_used@@Base+0x83c>
   148d4:	mov	r9, r0
   148d8:	str	r0, [sl, #4]!
   148dc:	mov	r2, r7
   148e0:	mov	r1, r8
   148e4:	bl	1140c <memcpy@plt>
   148e8:	mov	r3, #0
   148ec:	strb	r3, [r9, r7]
   148f0:	ldrb	r3, [r4]
   148f4:	cmp	r3, #125	; 0x7d
   148f8:	addeq	r4, r4, #1
   148fc:	add	r2, r6, #1
   14900:	ldrb	r3, [r4]
   14904:	cmp	r3, #123	; 0x7b
   14908:	beq	148ac <ftello64@plt+0x31dc>
   1490c:	ldr	sl, [fp, #-48]	; 0xffffffd0
   14910:	ldr	r7, [fp, #-44]	; 0xffffffd4
   14914:	mov	r3, r7
   14918:	mov	r1, r5
   1491c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14920:	bl	145f8 <ftello64@plt+0x2f28>
   14924:	str	r4, [r5, #16]
   14928:	cmp	r6, #0
   1492c:	blt	14758 <ftello64@plt+0x3088>
   14930:	add	r7, r7, r6, lsl #2
   14934:	ldr	r0, [r7], #-4
   14938:	bl	17d44 <argp_parse@@Base+0xbf4>
   1493c:	sub	r6, r6, #1
   14940:	cmn	r6, #1
   14944:	bne	14934 <ftello64@plt+0x3264>
   14948:	b	14758 <ftello64@plt+0x3088>
   1494c:	str	r4, [r5, #16]
   14950:	ldr	r3, [r5, #20]
   14954:	sub	r3, r3, #1
   14958:	str	r3, [r5, #20]
   1495c:	sub	sp, fp, #32
   14960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14964:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14968:	mov	r2, #0
   1496c:	mov	r1, r5
   14970:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14974:	bl	145f8 <ftello64@plt+0x2f28>
   14978:	str	r4, [r5, #16]
   1497c:	b	14758 <ftello64@plt+0x3088>
   14980:	cmp	r3, r1
   14984:	bxge	lr
   14988:	push	{r4, lr}
   1498c:	ldr	r3, [r2, r3, lsl #2]
   14990:	str	r3, [r0, #16]
   14994:	mov	r1, #0
   14998:	bl	146c0 <ftello64@plt+0x2ff0>
   1499c:	pop	{r4, pc}
   149a0:	push	{r4, r5, r6, lr}
   149a4:	subs	r6, r1, #0
   149a8:	pople	{r4, r5, r6, pc}
   149ac:	mov	r4, r2
   149b0:	mov	r5, r0
   149b4:	ldr	r0, [r2]
   149b8:	bl	129d0 <ftello64@plt+0x1300>
   149bc:	cmp	r0, #0
   149c0:	movne	r3, #1
   149c4:	moveq	r3, #2
   149c8:	mov	r2, r4
   149cc:	mov	r1, r6
   149d0:	mov	r0, r5
   149d4:	bl	14980 <ftello64@plt+0x32b0>
   149d8:	pop	{r4, r5, r6, pc}
   149dc:	push	{r4, lr}
   149e0:	ldr	r3, [r0, #12]
   149e4:	clz	r3, r3
   149e8:	lsr	r3, r3, #5
   149ec:	bl	14980 <ftello64@plt+0x32b0>
   149f0:	pop	{r4, pc}
   149f4:	push	{r4, r5, r6, r7, r8, lr}
   149f8:	sub	sp, sp, #8
   149fc:	mov	r4, r0
   14a00:	mov	r6, r1
   14a04:	mov	r7, r2
   14a08:	ldr	r3, [pc, #144]	; 14aa0 <ftello64@plt+0x33d0>
   14a0c:	ldr	r3, [r3]
   14a10:	cmp	r3, #0
   14a14:	movne	r5, #1
   14a18:	bne	14a4c <ftello64@plt+0x337c>
   14a1c:	ldr	r3, [pc, #128]	; 14aa4 <ftello64@plt+0x33d4>
   14a20:	ldr	r8, [r3]
   14a24:	cmp	r8, #0
   14a28:	movne	r5, #1
   14a2c:	bne	14a4c <ftello64@plt+0x337c>
   14a30:	add	r1, sp, #8
   14a34:	mov	r3, #0
   14a38:	str	r3, [r1, #-4]!
   14a3c:	ldr	r0, [pc, #100]	; 14aa8 <ftello64@plt+0x33d8>
   14a40:	bl	11d60 <ftello64@plt+0x690>
   14a44:	subs	r5, r0, #0
   14a48:	bne	14a6c <ftello64@plt+0x339c>
   14a4c:	clz	r3, r5
   14a50:	lsr	r3, r3, #5
   14a54:	mov	r2, r7
   14a58:	mov	r1, r6
   14a5c:	mov	r0, r4
   14a60:	bl	14980 <ftello64@plt+0x32b0>
   14a64:	add	sp, sp, #8
   14a68:	pop	{r4, r5, r6, r7, r8, pc}
   14a6c:	ldr	r2, [r4, #4]
   14a70:	ldr	r1, [pc, #52]	; 14aac <ftello64@plt+0x33dc>
   14a74:	ldr	r0, [r4, #8]
   14a78:	bl	17e54 <argp_parse@@Base+0xd04>
   14a7c:	cmp	r0, #0
   14a80:	movne	r5, r8
   14a84:	bne	14a4c <ftello64@plt+0x337c>
   14a88:	ldr	r3, [r4, #4]
   14a8c:	ldrh	r3, [r3, #16]
   14a90:	tst	r3, r5
   14a94:	movne	r5, #1
   14a98:	moveq	r5, #0
   14a9c:	b	14a4c <ftello64@plt+0x337c>
   14aa0:	strdeq	r2, [r3], -r8
   14aa4:	strdeq	r2, [r3], -ip
   14aa8:	andeq	sp, r1, r4, lsl fp
   14aac:	andeq	r8, r0, r3, lsl r9
   14ab0:	push	{r4, lr}
   14ab4:	ldr	r3, [pc, #16]	; 14acc <ftello64@plt+0x33fc>
   14ab8:	ldr	r3, [r3]
   14abc:	clz	r3, r3
   14ac0:	lsr	r3, r3, #5
   14ac4:	bl	14980 <ftello64@plt+0x32b0>
   14ac8:	pop	{r4, pc}
   14acc:	andeq	r2, r3, r0, lsl #24
   14ad0:	push	{r4, r5, r6, r7, r8, lr}
   14ad4:	subs	r8, r1, #0
   14ad8:	pople	{r4, r5, r6, r7, r8, pc}
   14adc:	mov	r6, r2
   14ae0:	mov	r7, r0
   14ae4:	ldr	r3, [pc, #84]	; 14b40 <ftello64@plt+0x3470>
   14ae8:	ldr	r0, [r3, #4]
   14aec:	cmp	r0, #0
   14af0:	beq	14b20 <ftello64@plt+0x3450>
   14af4:	ldr	r5, [r2]
   14af8:	add	r4, r3, #4
   14afc:	mov	r1, r5
   14b00:	bl	113a0 <strcmp@plt>
   14b04:	cmp	r0, #0
   14b08:	beq	14b28 <ftello64@plt+0x3458>
   14b0c:	ldr	r0, [r4, #8]!
   14b10:	cmp	r0, #0
   14b14:	bne	14afc <ftello64@plt+0x342c>
   14b18:	mov	r3, #2
   14b1c:	b	14b2c <ftello64@plt+0x345c>
   14b20:	mov	r3, #2
   14b24:	b	14b2c <ftello64@plt+0x345c>
   14b28:	mov	r3, #1
   14b2c:	mov	r2, r6
   14b30:	mov	r1, r8
   14b34:	mov	r0, r7
   14b38:	bl	14980 <ftello64@plt+0x32b0>
   14b3c:	pop	{r4, r5, r6, r7, r8, pc}
   14b40:	andeq	r2, r3, r8, lsl r5
   14b44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b48:	ldr	ip, [pc, #100]	; 14bb4 <ftello64@plt+0x34e4>
   14b4c:	ldr	r9, [ip]
   14b50:	ldr	r3, [pc, #96]	; 14bb8 <ftello64@plt+0x34e8>
   14b54:	ldr	r8, [r3]
   14b58:	ldr	lr, [pc, #92]	; 14bbc <ftello64@plt+0x34ec>
   14b5c:	ldr	lr, [lr]
   14b60:	str	lr, [ip]
   14b64:	ldr	ip, [pc, #84]	; 14bc0 <ftello64@plt+0x34f0>
   14b68:	str	ip, [r3]
   14b6c:	subs	r5, r1, #0
   14b70:	ble	14ba0 <ftello64@plt+0x34d0>
   14b74:	mov	r7, r2
   14b78:	mov	r6, r0
   14b7c:	mov	r4, #0
   14b80:	mov	r3, r4
   14b84:	mov	r2, r7
   14b88:	mov	r1, r5
   14b8c:	mov	r0, r6
   14b90:	bl	14980 <ftello64@plt+0x32b0>
   14b94:	add	r4, r4, #1
   14b98:	cmp	r5, r4
   14b9c:	bne	14b80 <ftello64@plt+0x34b0>
   14ba0:	ldr	r3, [pc, #12]	; 14bb4 <ftello64@plt+0x34e4>
   14ba4:	str	r9, [r3]
   14ba8:	ldr	r3, [pc, #8]	; 14bb8 <ftello64@plt+0x34e8>
   14bac:	str	r8, [r3]
   14bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bb4:	andeq	r2, r3, r4, lsl ip
   14bb8:	andeq	r2, r3, r8, lsl r5
   14bbc:	andeq	r2, r3, r8, asr #22
   14bc0:	andeq	r2, r3, ip, lsl #24
   14bc4:	push	{r4, r5, r6, lr}
   14bc8:	mov	r4, r0
   14bcc:	mov	r5, r1
   14bd0:	mov	r6, r2
   14bd4:	ldr	r0, [r0]
   14bd8:	bl	11694 <if_nametoindex@plt>
   14bdc:	clz	r3, r0
   14be0:	lsr	r3, r3, #5
   14be4:	mov	r2, r6
   14be8:	mov	r1, r5
   14bec:	mov	r0, r4
   14bf0:	bl	14980 <ftello64@plt+0x32b0>
   14bf4:	pop	{r4, r5, r6, pc}
   14bf8:	push	{r4, r5, r6, lr}
   14bfc:	mov	r4, r0
   14c00:	mov	r5, r1
   14c04:	mov	r6, r2
   14c08:	ldr	r2, [r0, #4]
   14c0c:	ldr	r1, [pc, #36]	; 14c38 <ftello64@plt+0x3568>
   14c10:	ldr	r0, [r0, #8]
   14c14:	bl	17e54 <argp_parse@@Base+0xd04>
   14c18:	cmp	r0, #0
   14c1c:	movge	r3, #0
   14c20:	movlt	r3, #1
   14c24:	mov	r2, r6
   14c28:	mov	r1, r5
   14c2c:	mov	r0, r4
   14c30:	bl	14980 <ftello64@plt+0x32b0>
   14c34:	pop	{r4, r5, r6, pc}
   14c38:	andeq	r8, r0, r5, lsl r9
   14c3c:	push	{r4, r5, r6, lr}
   14c40:	mov	r4, r0
   14c44:	mov	r5, r1
   14c48:	mov	r6, r2
   14c4c:	ldr	r2, [r0, #4]
   14c50:	ldr	r1, [pc, #36]	; 14c7c <ftello64@plt+0x35ac>
   14c54:	ldr	r0, [r0, #8]
   14c58:	bl	17e54 <argp_parse@@Base+0xd04>
   14c5c:	cmp	r0, #0
   14c60:	movge	r3, #0
   14c64:	movlt	r3, #1
   14c68:	mov	r2, r6
   14c6c:	mov	r1, r5
   14c70:	mov	r0, r4
   14c74:	bl	14980 <ftello64@plt+0x32b0>
   14c78:	pop	{r4, r5, r6, pc}
   14c7c:	andeq	r8, r0, fp, lsl r9
   14c80:	push	{r4, r5, r6, r7, lr}
   14c84:	sub	sp, sp, #12
   14c88:	mov	r4, r0
   14c8c:	mov	r5, r1
   14c90:	mov	r6, r2
   14c94:	add	r1, sp, #4
   14c98:	ldr	r0, [pc, #144]	; 14d30 <ftello64@plt+0x3660>
   14c9c:	bl	11d60 <ftello64@plt+0x690>
   14ca0:	subs	r7, r0, #0
   14ca4:	beq	14ce8 <ftello64@plt+0x3618>
   14ca8:	ldr	r2, [r4, #4]
   14cac:	ldr	r1, [pc, #128]	; 14d34 <ftello64@plt+0x3664>
   14cb0:	ldr	r0, [r4, #8]
   14cb4:	bl	17e54 <argp_parse@@Base+0xd04>
   14cb8:	cmp	r0, #0
   14cbc:	blt	14ce8 <ftello64@plt+0x3618>
   14cc0:	ldr	r2, [r4, #4]
   14cc4:	ldrh	r3, [r2, #16]
   14cc8:	tst	r3, r7
   14ccc:	bne	14d04 <ftello64@plt+0x3634>
   14cd0:	mov	r3, #1
   14cd4:	mov	r2, r6
   14cd8:	mov	r1, r5
   14cdc:	mov	r0, r4
   14ce0:	bl	14980 <ftello64@plt+0x32b0>
   14ce4:	b	14cfc <ftello64@plt+0x362c>
   14ce8:	mov	r3, #1
   14cec:	mov	r2, r6
   14cf0:	mov	r1, r5
   14cf4:	mov	r0, r4
   14cf8:	bl	14980 <ftello64@plt+0x32b0>
   14cfc:	add	sp, sp, #12
   14d00:	pop	{r4, r5, r6, r7, pc}
   14d04:	ldr	r1, [pc, #44]	; 14d38 <ftello64@plt+0x3668>
   14d08:	ldr	r0, [r4, #8]
   14d0c:	bl	17e54 <argp_parse@@Base+0xd04>
   14d10:	cmp	r0, #0
   14d14:	movge	r3, #0
   14d18:	movlt	r3, #1
   14d1c:	mov	r2, r6
   14d20:	mov	r1, r5
   14d24:	mov	r0, r4
   14d28:	bl	14980 <ftello64@plt+0x32b0>
   14d2c:	b	14cfc <ftello64@plt+0x362c>
   14d30:	andeq	sp, r1, r8, lsl fp
   14d34:	andeq	r8, r0, r3, lsl r9
   14d38:	andeq	r8, r0, r9, lsl r9
   14d3c:	push	{r4, r5, r6, r7, lr}
   14d40:	sub	sp, sp, #12
   14d44:	mov	r4, r0
   14d48:	mov	r5, r1
   14d4c:	mov	r6, r2
   14d50:	add	r1, sp, #4
   14d54:	ldr	r0, [pc, #144]	; 14dec <ftello64@plt+0x371c>
   14d58:	bl	11d60 <ftello64@plt+0x690>
   14d5c:	subs	r7, r0, #0
   14d60:	beq	14da4 <ftello64@plt+0x36d4>
   14d64:	ldr	r2, [r4, #4]
   14d68:	ldr	r1, [pc, #128]	; 14df0 <ftello64@plt+0x3720>
   14d6c:	ldr	r0, [r4, #8]
   14d70:	bl	17e54 <argp_parse@@Base+0xd04>
   14d74:	cmp	r0, #0
   14d78:	blt	14da4 <ftello64@plt+0x36d4>
   14d7c:	ldr	r2, [r4, #4]
   14d80:	ldrh	r3, [r2, #16]
   14d84:	tst	r3, r7
   14d88:	bne	14dc0 <ftello64@plt+0x36f0>
   14d8c:	mov	r3, #1
   14d90:	mov	r2, r6
   14d94:	mov	r1, r5
   14d98:	mov	r0, r4
   14d9c:	bl	14980 <ftello64@plt+0x32b0>
   14da0:	b	14db8 <ftello64@plt+0x36e8>
   14da4:	mov	r3, #1
   14da8:	mov	r2, r6
   14dac:	mov	r1, r5
   14db0:	mov	r0, r4
   14db4:	bl	14980 <ftello64@plt+0x32b0>
   14db8:	add	sp, sp, #12
   14dbc:	pop	{r4, r5, r6, r7, pc}
   14dc0:	ldr	r1, [pc, #44]	; 14df4 <ftello64@plt+0x3724>
   14dc4:	ldr	r0, [r4, #8]
   14dc8:	bl	17e54 <argp_parse@@Base+0xd04>
   14dcc:	cmp	r0, #0
   14dd0:	movge	r3, #0
   14dd4:	movlt	r3, #1
   14dd8:	mov	r2, r6
   14ddc:	mov	r1, r5
   14de0:	mov	r0, r4
   14de4:	bl	14980 <ftello64@plt+0x32b0>
   14de8:	b	14db8 <ftello64@plt+0x36e8>
   14dec:	andeq	sp, r1, r8, lsr fp
   14df0:	andeq	r8, r0, r3, lsl r9
   14df4:	andeq	r8, r0, r7, lsl r9
   14df8:	push	{r4, r5, r6, lr}
   14dfc:	mov	r4, r0
   14e00:	mov	r5, r1
   14e04:	mov	r6, r2
   14e08:	ldr	r2, [r0, #4]
   14e0c:	ldr	r1, [pc, #36]	; 14e38 <ftello64@plt+0x3768>
   14e10:	ldr	r0, [r0, #8]
   14e14:	bl	17e54 <argp_parse@@Base+0xd04>
   14e18:	cmp	r0, #0
   14e1c:	movge	r3, #0
   14e20:	movlt	r3, #1
   14e24:	mov	r2, r6
   14e28:	mov	r1, r5
   14e2c:	mov	r0, r4
   14e30:	bl	14980 <ftello64@plt+0x32b0>
   14e34:	pop	{r4, r5, r6, pc}
   14e38:	andeq	r8, r0, r1, lsr #18
   14e3c:	push	{r4, r5, r6, lr}
   14e40:	mov	r4, r0
   14e44:	mov	r5, r1
   14e48:	mov	r6, r2
   14e4c:	ldr	r2, [r0, #4]
   14e50:	ldr	r1, [pc, #76]	; 14ea4 <ftello64@plt+0x37d4>
   14e54:	ldr	r0, [r0, #8]
   14e58:	bl	17e54 <argp_parse@@Base+0xd04>
   14e5c:	cmp	r0, #0
   14e60:	blt	14e74 <ftello64@plt+0x37a4>
   14e64:	ldr	r3, [r4, #4]
   14e68:	ldr	r3, [r3, #16]
   14e6c:	cmp	r3, #0
   14e70:	bgt	14e8c <ftello64@plt+0x37bc>
   14e74:	mov	r3, #1
   14e78:	mov	r2, r6
   14e7c:	mov	r1, r5
   14e80:	mov	r0, r4
   14e84:	bl	14980 <ftello64@plt+0x32b0>
   14e88:	pop	{r4, r5, r6, pc}
   14e8c:	mov	r3, #0
   14e90:	mov	r2, r6
   14e94:	mov	r1, r5
   14e98:	mov	r0, r4
   14e9c:	bl	14980 <ftello64@plt+0x32b0>
   14ea0:	pop	{r4, r5, r6, pc}
   14ea4:	andeq	r8, r0, sp, lsl r9
   14ea8:	push	{r4, r5, r6, lr}
   14eac:	mov	r4, r0
   14eb0:	mov	r5, r1
   14eb4:	mov	r6, r2
   14eb8:	ldr	r2, [r0, #4]
   14ebc:	ldr	r1, [pc, #36]	; 14ee8 <ftello64@plt+0x3818>
   14ec0:	ldr	r0, [r0, #8]
   14ec4:	bl	17e54 <argp_parse@@Base+0xd04>
   14ec8:	cmp	r0, #0
   14ecc:	movge	r3, #0
   14ed0:	movlt	r3, #1
   14ed4:	mov	r2, r6
   14ed8:	mov	r1, r5
   14edc:	mov	r0, r4
   14ee0:	bl	14980 <ftello64@plt+0x32b0>
   14ee4:	pop	{r4, r5, r6, pc}
   14ee8:	andeq	r8, r0, r3, lsl r9
   14eec:	push	{r4, lr}
   14ef0:	mov	r3, #1
   14ef4:	bl	14980 <ftello64@plt+0x32b0>
   14ef8:	pop	{r4, pc}
   14efc:	push	{r4, lr}
   14f00:	mov	r3, #1
   14f04:	bl	14980 <ftello64@plt+0x32b0>
   14f08:	pop	{r4, pc}
   14f0c:	push	{r4, r5, r6, lr}
   14f10:	mov	r4, r0
   14f14:	mov	r5, r1
   14f18:	mov	r6, r2
   14f1c:	ldr	r2, [r0, #4]
   14f20:	ldr	r1, [pc, #36]	; 14f4c <ftello64@plt+0x387c>
   14f24:	ldr	r0, [r0, #8]
   14f28:	bl	17e54 <argp_parse@@Base+0xd04>
   14f2c:	cmp	r0, #0
   14f30:	movge	r3, #0
   14f34:	movlt	r3, #1
   14f38:	mov	r2, r6
   14f3c:	mov	r1, r5
   14f40:	mov	r0, r4
   14f44:	bl	14980 <ftello64@plt+0x32b0>
   14f48:	pop	{r4, r5, r6, pc}
   14f4c:	andeq	r8, r0, r0, ror r9
   14f50:	push	{r4, lr}
   14f54:	ldr	r3, [r0, #4]
   14f58:	ldrb	r3, [r3, #26]
   14f5c:	cmp	r3, #0
   14f60:	movne	r3, #0
   14f64:	moveq	r3, #1
   14f68:	bl	14980 <ftello64@plt+0x32b0>
   14f6c:	pop	{r4, pc}
   14f70:	push	{r4, lr}
   14f74:	ldr	r3, [r0, #4]
   14f78:	ldrh	r3, [r3, #24]
   14f7c:	cmp	r3, #255	; 0xff
   14f80:	movhi	r3, #0
   14f84:	movls	r3, #1
   14f88:	bl	14980 <ftello64@plt+0x32b0>
   14f8c:	pop	{r4, pc}
   14f90:	push	{r4, lr}
   14f94:	ldr	r3, [r0, #4]
   14f98:	ldr	r3, [r3, #16]
   14f9c:	cmp	r3, #0
   14fa0:	movne	r3, #0
   14fa4:	moveq	r3, #1
   14fa8:	bl	14980 <ftello64@plt+0x32b0>
   14fac:	pop	{r4, pc}
   14fb0:	push	{r4, lr}
   14fb4:	ldr	r3, [r0, #4]
   14fb8:	ldr	r3, [r3, #20]
   14fbc:	cmp	r3, #0
   14fc0:	movne	r3, #0
   14fc4:	moveq	r3, #1
   14fc8:	bl	14980 <ftello64@plt+0x32b0>
   14fcc:	pop	{r4, pc}
   14fd0:	push	{r4, lr}
   14fd4:	ldr	r3, [r0, #4]
   14fd8:	ldrb	r3, [r3, #27]
   14fdc:	cmp	r3, #0
   14fe0:	movne	r3, #0
   14fe4:	moveq	r3, #1
   14fe8:	bl	14980 <ftello64@plt+0x32b0>
   14fec:	pop	{r4, pc}
   14ff0:	cmp	r1, #0
   14ff4:	bxeq	lr
   14ff8:	push	{r4, r5, r6, r7, r8, lr}
   14ffc:	mov	r6, r2
   15000:	mov	r4, r0
   15004:	ldr	r8, [r0]
   15008:	ldr	r3, [pc, #60]	; 1504c <ftello64@plt+0x397c>
   1500c:	ldr	r3, [r3]
   15010:	cmp	r3, #0
   15014:	beq	15044 <ftello64@plt+0x3974>
   15018:	ldr	r5, [pc, #44]	; 1504c <ftello64@plt+0x397c>
   1501c:	mov	r7, #0
   15020:	str	r3, [r4]
   15024:	ldr	r3, [r6]
   15028:	str	r3, [r4, #16]
   1502c:	mov	r1, r7
   15030:	mov	r0, r4
   15034:	bl	146c0 <ftello64@plt+0x2ff0>
   15038:	ldr	r3, [r5, #12]!
   1503c:	cmp	r3, #0
   15040:	bne	15020 <ftello64@plt+0x3950>
   15044:	str	r8, [r4]
   15048:	pop	{r4, r5, r6, r7, r8, pc}
   1504c:			; <UNDEFINED> instruction: 0x000322b4
   15050:	cmp	r1, #1
   15054:	bxle	lr
   15058:	push	{r4, r5, r6, r7, lr}
   1505c:	sub	sp, sp, #12
   15060:	mov	r6, r2
   15064:	mov	r5, r0
   15068:	mov	r2, #10
   1506c:	add	r1, sp, #4
   15070:	ldr	r0, [r6]
   15074:	bl	11538 <strtoul@plt>
   15078:	mov	r7, r0
   1507c:	ldr	r3, [sp, #4]
   15080:	ldrb	r3, [r3]
   15084:	cmp	r3, #0
   15088:	bne	150c4 <ftello64@plt+0x39f4>
   1508c:	sub	r4, r7, #1
   15090:	cmp	r7, #0
   15094:	beq	150bc <ftello64@plt+0x39ec>
   15098:	mov	r7, #0
   1509c:	ldr	r3, [r6, #4]
   150a0:	str	r3, [r5, #16]
   150a4:	mov	r1, r7
   150a8:	mov	r0, r5
   150ac:	bl	146c0 <ftello64@plt+0x2ff0>
   150b0:	sub	r4, r4, #1
   150b4:	cmn	r4, #1
   150b8:	bne	1509c <ftello64@plt+0x39cc>
   150bc:	add	sp, sp, #12
   150c0:	pop	{r4, r5, r6, r7, pc}
   150c4:	ldr	r2, [pc, #12]	; 150d8 <ftello64@plt+0x3a08>
   150c8:	mov	r1, #0
   150cc:	mov	r0, #1
   150d0:	bl	114a8 <error@plt>
   150d4:	b	1508c <ftello64@plt+0x39bc>
   150d8:	andeq	pc, r1, r8, ror r6	; <UNPREDICTABLE>
   150dc:	cmp	r1, #1
   150e0:	bxle	lr
   150e4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150e8:	mov	sl, r2
   150ec:	mov	r7, r1
   150f0:	mov	r5, r0
   150f4:	ldr	r3, [pc, #104]	; 15164 <ftello64@plt+0x3a94>
   150f8:	ldr	fp, [r3]
   150fc:	mov	r2, #0
   15100:	str	r2, [r3]
   15104:	mov	r6, sl
   15108:	mov	r4, #1
   1510c:	mov	r8, r2
   15110:	mov	r9, r3
   15114:	ldr	r3, [r6, #4]!
   15118:	str	r3, [r5, #16]
   1511c:	mov	r1, r8
   15120:	mov	r0, r5
   15124:	bl	146c0 <ftello64@plt+0x2ff0>
   15128:	add	r4, r4, #1
   1512c:	cmp	r7, r4
   15130:	beq	15158 <ftello64@plt+0x3a88>
   15134:	ldr	r3, [r9]
   15138:	cmp	r3, #0
   1513c:	beq	15114 <ftello64@plt+0x3a44>
   15140:	ldr	r1, [sl]
   15144:	mov	r0, r5
   15148:	bl	13ae8 <ftello64@plt+0x2418>
   1514c:	str	r8, [r9]
   15150:	mov	fp, #1
   15154:	b	15114 <ftello64@plt+0x3a44>
   15158:	ldr	r3, [pc, #4]	; 15164 <ftello64@plt+0x3a94>
   1515c:	str	fp, [r3]
   15160:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15164:	andeq	r2, r3, r8, lsl #24
   15168:	push	{r4, r5, r6, r7, r8, lr}
   1516c:	subs	r6, r1, #0
   15170:	pople	{r4, r5, r6, r7, r8, pc}
   15174:	mov	r7, r0
   15178:	sub	r5, r2, #4
   1517c:	mov	r4, #0
   15180:	ldr	r0, [r5, #4]!
   15184:	bl	129d0 <ftello64@plt+0x1300>
   15188:	cmp	r0, #0
   1518c:	bne	151a0 <ftello64@plt+0x3ad0>
   15190:	add	r4, r4, #1
   15194:	cmp	r6, r4
   15198:	bne	15180 <ftello64@plt+0x3ab0>
   1519c:	pop	{r4, r5, r6, r7, r8, pc}
   151a0:	ldr	r3, [r0, #8]
   151a4:	str	r3, [r7, #16]
   151a8:	mov	r1, #0
   151ac:	mov	r0, r7
   151b0:	bl	146c0 <ftello64@plt+0x2ff0>
   151b4:	pop	{r4, r5, r6, r7, r8, pc}
   151b8:	push	{lr}		; (str lr, [sp, #-4]!)
   151bc:	sub	sp, sp, #28
   151c0:	ldr	ip, [pc, #96]	; 15228 <ftello64@plt+0x3b58>
   151c4:	ldr	ip, [ip]
   151c8:	cmp	ip, #0
   151cc:	ldreq	ip, [pc, #88]	; 1522c <ftello64@plt+0x3b5c>
   151d0:	ldreq	lr, [ip]
   151d4:	ldreq	ip, [pc, #76]	; 15228 <ftello64@plt+0x3b58>
   151d8:	streq	lr, [ip]
   151dc:	ldr	ip, [pc, #76]	; 15230 <ftello64@plt+0x3b60>
   151e0:	ldr	ip, [ip]
   151e4:	cmp	ip, #0
   151e8:	moveq	ip, #1
   151ec:	streq	ip, [sp, #12]
   151f0:	ldreq	lr, [pc, #56]	; 15230 <ftello64@plt+0x3b60>
   151f4:	streq	ip, [lr]
   151f8:	movne	ip, #0
   151fc:	strne	ip, [sp, #12]
   15200:	str	r1, [sp]
   15204:	str	r2, [sp, #4]
   15208:	str	r3, [sp, #16]
   1520c:	str	r0, [sp, #8]
   15210:	mov	r1, #0
   15214:	str	r1, [sp, #20]
   15218:	mov	r0, sp
   1521c:	bl	146c0 <ftello64@plt+0x2ff0>
   15220:	add	sp, sp, #28
   15224:	pop	{pc}		; (ldr pc, [sp], #4)
   15228:	andeq	r2, r3, r4, lsl ip
   1522c:	andeq	r2, r3, ip, asr #22
   15230:	andeq	r2, r3, ip, lsr #23
   15234:	push	{lr}		; (str lr, [sp, #-4]!)
   15238:	sub	sp, sp, #12
   1523c:	ldrb	r3, [r1, #1]
   15240:	ldrb	r2, [r1, #2]
   15244:	ldrb	r0, [r1, #3]
   15248:	ldrb	r1, [r1]
   1524c:	str	r1, [sp]
   15250:	mov	r1, r0
   15254:	ldr	r0, [pc, #40]	; 15284 <ftello64@plt+0x3bb4>
   15258:	bl	113b8 <printf@plt>
   1525c:	ldr	r3, [pc, #36]	; 15288 <ftello64@plt+0x3bb8>
   15260:	ldr	r2, [r3]
   15264:	ldr	r3, [r2]
   15268:	add	r0, r3, r0
   1526c:	str	r0, [r2]
   15270:	mov	r2, #1
   15274:	ldr	r3, [pc, #16]	; 1528c <ftello64@plt+0x3bbc>
   15278:	str	r2, [r3]
   1527c:	add	sp, sp, #12
   15280:	pop	{pc}		; (ldr pc, [sp], #4)
   15284:	andeq	pc, r1, r4, asr #18
   15288:	andeq	r2, r3, r8, lsl r5
   1528c:	andeq	r2, r3, r8, lsl #24
   15290:	push	{lr}		; (str lr, [sp, #-4]!)
   15294:	sub	sp, sp, #12
   15298:	ldrb	r3, [r1, #2]
   1529c:	ldrb	r2, [r1, #1]
   152a0:	ldrb	r0, [r1]
   152a4:	ldrb	ip, [r1, #4]
   152a8:	str	ip, [sp, #4]
   152ac:	ldrb	r1, [r1, #3]
   152b0:	str	r1, [sp]
   152b4:	mov	r1, r0
   152b8:	ldr	r0, [pc, #40]	; 152e8 <ftello64@plt+0x3c18>
   152bc:	bl	113b8 <printf@plt>
   152c0:	ldr	r3, [pc, #36]	; 152ec <ftello64@plt+0x3c1c>
   152c4:	ldr	r2, [r3]
   152c8:	ldr	r3, [r2]
   152cc:	add	r0, r3, r0
   152d0:	str	r0, [r2]
   152d4:	mov	r2, #1
   152d8:	ldr	r3, [pc, #16]	; 152f0 <ftello64@plt+0x3c20>
   152dc:	str	r2, [r3]
   152e0:	add	sp, sp, #12
   152e4:	pop	{pc}		; (ldr pc, [sp], #4)
   152e8:	andeq	pc, r1, r8, asr r9	; <UNPREDICTABLE>
   152ec:	andeq	r2, r3, r8, lsl r5
   152f0:	andeq	r2, r3, r8, lsl #24
   152f4:	push	{r4, lr}
   152f8:	ldrsh	r1, [r1]
   152fc:	ldr	r0, [pc, #36]	; 15328 <ftello64@plt+0x3c58>
   15300:	bl	113b8 <printf@plt>
   15304:	ldr	r3, [pc, #32]	; 1532c <ftello64@plt+0x3c5c>
   15308:	ldr	r2, [r3]
   1530c:	ldr	r3, [r2]
   15310:	add	r0, r3, r0
   15314:	str	r0, [r2]
   15318:	mov	r2, #1
   1531c:	ldr	r3, [pc, #12]	; 15330 <ftello64@plt+0x3c60>
   15320:	str	r2, [r3]
   15324:	pop	{r4, pc}
   15328:	andeq	pc, r1, r8, lsl #10
   1532c:	andeq	r2, r3, r8, lsl r5
   15330:	andeq	r2, r3, r8, lsl #24
   15334:	push	{r4, lr}
   15338:	ldrb	r1, [r1]
   1533c:	ldr	r0, [pc, #36]	; 15368 <ftello64@plt+0x3c98>
   15340:	bl	113b8 <printf@plt>
   15344:	ldr	r3, [pc, #32]	; 1536c <ftello64@plt+0x3c9c>
   15348:	ldr	r2, [r3]
   1534c:	ldr	r3, [r2]
   15350:	add	r0, r3, r0
   15354:	str	r0, [r2]
   15358:	mov	r2, #1
   1535c:	ldr	r3, [pc, #12]	; 15370 <ftello64@plt+0x3ca0>
   15360:	str	r2, [r3]
   15364:	pop	{r4, pc}
   15368:	andeq	pc, r1, r8, ror #18
   1536c:	andeq	r2, r3, r8, lsl r5
   15370:	andeq	r2, r3, r8, lsl #24
   15374:	push	{lr}		; (str lr, [sp, #-4]!)
   15378:	sub	sp, sp, #20
   1537c:	ldrb	r3, [r1, #2]
   15380:	ldrb	r2, [r1, #1]
   15384:	ldrb	r0, [r1]
   15388:	ldrb	ip, [r1, #5]
   1538c:	str	ip, [sp, #8]
   15390:	ldrb	ip, [r1, #4]
   15394:	str	ip, [sp, #4]
   15398:	ldrb	r1, [r1, #3]
   1539c:	str	r1, [sp]
   153a0:	mov	r1, r0
   153a4:	ldr	r0, [pc, #40]	; 153d4 <ftello64@plt+0x3d04>
   153a8:	bl	113b8 <printf@plt>
   153ac:	ldr	r3, [pc, #36]	; 153d8 <ftello64@plt+0x3d08>
   153b0:	ldr	r2, [r3]
   153b4:	ldr	r3, [r2]
   153b8:	add	r0, r3, r0
   153bc:	str	r0, [r2]
   153c0:	mov	r2, #1
   153c4:	ldr	r3, [pc, #16]	; 153dc <ftello64@plt+0x3d0c>
   153c8:	str	r2, [r3]
   153cc:	add	sp, sp, #20
   153d0:	pop	{pc}		; (ldr pc, [sp], #4)
   153d4:	andeq	pc, r1, r0, ror r9	; <UNPREDICTABLE>
   153d8:	andeq	r2, r3, r8, lsl r5
   153dc:	andeq	r2, r3, r8, lsl #24
   153e0:	push	{r4, r5, r6, r7, r8, lr}
   153e4:	mov	r6, r1
   153e8:	ldrb	r1, [r1]
   153ec:	lsr	r1, r1, #1
   153f0:	cmp	r1, #32
   153f4:	beq	15428 <ftello64@plt+0x3d58>
   153f8:	mov	r5, r0
   153fc:	bl	13998 <ftello64@plt+0x22c8>
   15400:	mov	r4, r6
   15404:	add	r7, r6, #5
   15408:	ldrb	r1, [r4, #1]!
   1540c:	lsr	r1, r1, #1
   15410:	cmp	r1, #32
   15414:	beq	15428 <ftello64@plt+0x3d58>
   15418:	mov	r0, r5
   1541c:	bl	13998 <ftello64@plt+0x22c8>
   15420:	cmp	r4, r7
   15424:	bne	15408 <ftello64@plt+0x3d38>
   15428:	ldrb	r1, [r6, #6]
   1542c:	asr	r1, r1, #1
   15430:	ands	r1, r1, #15
   15434:	popeq	{r4, r5, r6, r7, r8, pc}
   15438:	ldr	r0, [pc, #36]	; 15464 <ftello64@plt+0x3d94>
   1543c:	bl	113b8 <printf@plt>
   15440:	ldr	r3, [pc, #32]	; 15468 <ftello64@plt+0x3d98>
   15444:	ldr	r2, [r3]
   15448:	ldr	r3, [r2]
   1544c:	add	r0, r3, r0
   15450:	str	r0, [r2]
   15454:	mov	r2, #1
   15458:	ldr	r3, [pc, #12]	; 1546c <ftello64@plt+0x3d9c>
   1545c:	str	r2, [r3]
   15460:	pop	{r4, r5, r6, r7, r8, pc}
   15464:	muleq	r1, r0, r9
   15468:	andeq	r2, r3, r8, lsl r5
   1546c:	andeq	r2, r3, r8, lsl #24
   15470:	push	{lr}		; (str lr, [sp, #-4]!)
   15474:	sub	sp, sp, #60	; 0x3c
   15478:	add	r3, r1, #64	; 0x40
   1547c:	str	r3, [sp, #52]	; 0x34
   15480:	add	r3, r1, #100	; 0x64
   15484:	str	r3, [sp, #48]	; 0x30
   15488:	add	r3, r1, #68	; 0x44
   1548c:	str	r3, [sp, #44]	; 0x2c
   15490:	add	r3, r1, #104	; 0x68
   15494:	str	r3, [sp, #40]	; 0x28
   15498:	add	r3, r1, #52	; 0x34
   1549c:	str	r3, [sp, #36]	; 0x24
   154a0:	add	r3, r1, #44	; 0x2c
   154a4:	str	r3, [sp, #32]
   154a8:	add	r3, r1, #16
   154ac:	str	r3, [sp, #28]
   154b0:	add	r3, r1, #32
   154b4:	str	r3, [sp, #24]
   154b8:	add	r3, r1, #56	; 0x38
   154bc:	str	r3, [sp, #20]
   154c0:	add	r3, r1, #60	; 0x3c
   154c4:	str	r3, [sp, #16]
   154c8:	add	r3, r1, #84	; 0x54
   154cc:	str	r3, [sp, #12]
   154d0:	add	r3, r1, #88	; 0x58
   154d4:	str	r3, [sp, #8]
   154d8:	add	r3, r1, #48	; 0x30
   154dc:	str	r3, [sp, #4]
   154e0:	add	r3, r1, #40	; 0x28
   154e4:	str	r3, [sp]
   154e8:	add	r3, r1, #8
   154ec:	add	r2, r1, #24
   154f0:	ldr	r1, [pc, #20]	; 1550c <ftello64@plt+0x3e3c>
   154f4:	bl	1161c <sscanf@plt>
   154f8:	cmp	r0, #16
   154fc:	movne	r0, #0
   15500:	moveq	r0, #1
   15504:	add	sp, sp, #60	; 0x3c
   15508:	pop	{pc}		; (ldr pc, [sp], #4)
   1550c:	muleq	r1, r4, r9
   15510:	push	{r4, lr}
   15514:	sub	sp, sp, #48	; 0x30
   15518:	mov	r4, r1
   1551c:	add	r3, r1, #100	; 0x64
   15520:	str	r3, [sp, #40]	; 0x28
   15524:	add	r3, r1, #68	; 0x44
   15528:	str	r3, [sp, #36]	; 0x24
   1552c:	add	r3, r1, #104	; 0x68
   15530:	str	r3, [sp, #32]
   15534:	add	r3, r1, #52	; 0x34
   15538:	str	r3, [sp, #28]
   1553c:	add	r3, r1, #44	; 0x2c
   15540:	str	r3, [sp, #24]
   15544:	add	r3, r1, #16
   15548:	str	r3, [sp, #20]
   1554c:	add	r3, r1, #32
   15550:	str	r3, [sp, #16]
   15554:	add	r3, r1, #84	; 0x54
   15558:	str	r3, [sp, #12]
   1555c:	add	r3, r1, #88	; 0x58
   15560:	str	r3, [sp, #8]
   15564:	add	r3, r1, #48	; 0x30
   15568:	str	r3, [sp, #4]
   1556c:	add	r3, r1, #40	; 0x28
   15570:	str	r3, [sp]
   15574:	add	r3, r1, #8
   15578:	add	r2, r1, #24
   1557c:	ldr	r1, [pc, #28]	; 155a0 <ftello64@plt+0x3ed0>
   15580:	bl	1161c <sscanf@plt>
   15584:	mov	r3, #0
   15588:	str	r3, [r4, #56]	; 0x38
   1558c:	cmp	r0, #13
   15590:	movne	r0, #0
   15594:	moveq	r0, #1
   15598:	add	sp, sp, #48	; 0x30
   1559c:	pop	{r4, pc}
   155a0:	ldrdeq	pc, [r1], -r8
   155a4:	push	{r4, lr}
   155a8:	sub	sp, sp, #40	; 0x28
   155ac:	mov	r4, r1
   155b0:	add	r3, r1, #100	; 0x64
   155b4:	str	r3, [sp, #32]
   155b8:	add	r3, r1, #68	; 0x44
   155bc:	str	r3, [sp, #28]
   155c0:	add	r3, r1, #104	; 0x68
   155c4:	str	r3, [sp, #24]
   155c8:	add	r3, r1, #52	; 0x34
   155cc:	str	r3, [sp, #20]
   155d0:	add	r3, r1, #44	; 0x2c
   155d4:	str	r3, [sp, #16]
   155d8:	add	r3, r1, #16
   155dc:	str	r3, [sp, #12]
   155e0:	add	r3, r1, #84	; 0x54
   155e4:	str	r3, [sp, #8]
   155e8:	add	r3, r1, #88	; 0x58
   155ec:	str	r3, [sp, #4]
   155f0:	add	r3, r1, #48	; 0x30
   155f4:	str	r3, [sp]
   155f8:	add	r3, r1, #40	; 0x28
   155fc:	add	r2, r1, #8
   15600:	ldr	r1, [pc, #44]	; 15634 <ftello64@plt+0x3f64>
   15604:	bl	1161c <sscanf@plt>
   15608:	mov	r2, #0
   1560c:	mov	r3, #0
   15610:	strd	r2, [r4, #24]
   15614:	strd	r2, [r4, #32]
   15618:	mov	r3, #0
   1561c:	str	r3, [r4, #56]	; 0x38
   15620:	cmp	r0, #11
   15624:	movne	r0, #0
   15628:	moveq	r0, #1
   1562c:	add	sp, sp, #40	; 0x28
   15630:	pop	{r4, pc}
   15634:	andeq	pc, r1, r0, lsl sl	; <UNPREDICTABLE>
   15638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1563c:	sub	sp, sp, #52	; 0x34
   15640:	mov	r2, #0
   15644:	mov	r1, #2
   15648:	mov	r0, r1
   1564c:	bl	11688 <socket@plt>
   15650:	subs	r3, r0, #0
   15654:	str	r3, [sp]
   15658:	blt	1580c <ftello64@plt+0x413c>
   1565c:	add	r2, sp, #44	; 0x2c
   15660:	mov	r1, #0
   15664:	ldr	r0, [pc, #440]	; 15824 <ftello64@plt+0x4154>
   15668:	bl	18528 <_obstack_memory_used@@Base+0x364>
   1566c:	subs	r8, r0, #0
   15670:	beq	15818 <ftello64@plt+0x4148>
   15674:	ldr	r6, [sp, #44]	; 0x2c
   15678:	mov	r0, r8
   1567c:	mov	r4, #0
   15680:	mov	r5, #58	; 0x3a
   15684:	mov	sl, r8
   15688:	sub	r2, r0, r8
   1568c:	sub	r2, r6, r2
   15690:	mov	r1, r5
   15694:	add	r0, r0, #1
   15698:	bl	115bc <memchr@plt>
   1569c:	add	r4, r4, #1
   156a0:	cmp	r0, #0
   156a4:	bne	15684 <ftello64@plt+0x3fb4>
   156a8:	lsl	r0, r4, #3
   156ac:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   156b0:	subs	r3, r0, #0
   156b4:	str	r3, [sp, #4]
   156b8:	beq	156ec <ftello64@plt+0x401c>
   156bc:	ldr	r2, [sp, #44]	; 0x2c
   156c0:	mov	r1, #58	; 0x3a
   156c4:	mov	r0, r8
   156c8:	bl	115bc <memchr@plt>
   156cc:	subs	r4, r0, #0
   156d0:	beq	157e0 <ftello64@plt+0x4110>
   156d4:	ldr	r3, [sp, #4]
   156d8:	mov	r5, r3
   156dc:	add	r6, r3, #4
   156e0:	mov	r7, #0
   156e4:	mov	fp, r7
   156e8:	b	15788 <ftello64@plt+0x40b8>
   156ec:	bl	11568 <__errno_location@plt>
   156f0:	mov	r4, r0
   156f4:	ldr	r5, [r0]
   156f8:	ldr	r0, [sp]
   156fc:	bl	116b8 <close@plt>
   15700:	mov	r0, r8
   15704:	bl	17d44 <argp_parse@@Base+0xbf4>
   15708:	str	r5, [r4]
   1570c:	b	15800 <ftello64@plt+0x4130>
   15710:	add	r0, r0, #1
   15714:	bl	1143c <strdup@plt>
   15718:	mov	r1, r0
   1571c:	str	r0, [r5, #4]
   15720:	add	r7, r7, #1
   15724:	str	r7, [r6, #-4]
   15728:	add	r0, sp, #12
   1572c:	bl	11490 <strcpy@plt>
   15730:	mvn	r3, #0
   15734:	str	r3, [sp, #28]
   15738:	add	r2, sp, #12
   1573c:	ldr	r1, [pc, #228]	; 15828 <ftello64@plt+0x4158>
   15740:	ldr	r0, [sp]
   15744:	bl	17e54 <argp_parse@@Base+0xd04>
   15748:	cmp	r0, #0
   1574c:	ldrge	r3, [sp, #28]
   15750:	strge	r3, [r6, #-4]
   15754:	ldr	r3, [r5, #4]
   15758:	cmp	r3, #0
   1575c:	beq	157b4 <ftello64@plt+0x40e4>
   15760:	sub	r3, r4, sl
   15764:	ldr	r2, [sp, #44]	; 0x2c
   15768:	sub	r2, r2, r3
   1576c:	mov	r1, #58	; 0x3a
   15770:	mov	r0, r4
   15774:	bl	115bc <memchr@plt>
   15778:	add	r5, r5, #8
   1577c:	add	r6, r6, #8
   15780:	subs	r4, r0, #0
   15784:	beq	157e4 <ftello64@plt+0x4114>
   15788:	sub	r0, r4, #1
   1578c:	strb	fp, [r4]
   15790:	ldrb	r3, [r4, #-1]
   15794:	cmp	r3, #32
   15798:	cmpne	r3, #10
   1579c:	beq	15710 <ftello64@plt+0x4040>
   157a0:	ldrb	r3, [r0, #-1]!
   157a4:	cmp	r3, #32
   157a8:	cmpne	r3, #10
   157ac:	bne	157a0 <ftello64@plt+0x40d0>
   157b0:	b	15710 <ftello64@plt+0x4040>
   157b4:	bl	11568 <__errno_location@plt>
   157b8:	mov	r4, r0
   157bc:	ldr	r5, [r0]
   157c0:	ldr	r0, [sp]
   157c4:	bl	116b8 <close@plt>
   157c8:	mov	r0, r8
   157cc:	bl	17d44 <argp_parse@@Base+0xbf4>
   157d0:	str	r5, [r4]
   157d4:	mov	r3, #0
   157d8:	str	r3, [sp, #4]
   157dc:	b	15800 <ftello64@plt+0x4130>
   157e0:	mov	r7, #0
   157e4:	ldr	r1, [sp, #4]
   157e8:	add	r2, r1, r7, lsl #3
   157ec:	mov	r3, #0
   157f0:	str	r3, [r1, r7, lsl #3]
   157f4:	str	r3, [r2, #4]
   157f8:	mov	r0, r8
   157fc:	bl	17d44 <argp_parse@@Base+0xbf4>
   15800:	ldr	r0, [sp, #4]
   15804:	add	sp, sp, #52	; 0x34
   15808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1580c:	mov	r3, #0
   15810:	str	r3, [sp, #4]
   15814:	b	15800 <ftello64@plt+0x4130>
   15818:	mov	r3, #0
   1581c:	str	r3, [sp, #4]
   15820:	b	15800 <ftello64@plt+0x4130>
   15824:	andeq	pc, r1, r0, asr #20
   15828:	andeq	r8, r0, r3, lsr r9
   1582c:	ldr	r3, [pc, #84]	; 15888 <ftello64@plt+0x41b8>
   15830:	ldr	r3, [r3]
   15834:	cmp	r3, #0
   15838:	beq	15878 <ftello64@plt+0x41a8>
   1583c:	ldr	r3, [pc, #68]	; 15888 <ftello64@plt+0x41b8>
   15840:	ldr	r3, [r3, #8]
   15844:	cmp	r0, r3
   15848:	beq	15880 <ftello64@plt+0x41b0>
   1584c:	ldr	r3, [pc, #52]	; 15888 <ftello64@plt+0x41b8>
   15850:	ldr	r2, [r3, #16]!
   15854:	cmp	r2, #0
   15858:	beq	1586c <ftello64@plt+0x419c>
   1585c:	ldr	r2, [r3, #8]
   15860:	cmp	r2, r0
   15864:	bne	15850 <ftello64@plt+0x4180>
   15868:	b	15870 <ftello64@plt+0x41a0>
   1586c:	mov	r3, #0
   15870:	mov	r0, r3
   15874:	bx	lr
   15878:	mov	r3, #0
   1587c:	b	15870 <ftello64@plt+0x41a0>
   15880:	ldr	r3, [pc]	; 15888 <ftello64@plt+0x41b8>
   15884:	b	15870 <ftello64@plt+0x41a0>
   15888:	andeq	r2, r3, r4, asr #15
   1588c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15890:	sub	sp, sp, #20
   15894:	str	r0, [sp, #4]
   15898:	ldr	r3, [pc, #624]	; 15b10 <ftello64@plt+0x4440>
   1589c:	ldr	r3, [r3]
   158a0:	cmp	r3, #0
   158a4:	beq	158e8 <ftello64@plt+0x4218>
   158a8:	ldr	r3, [pc, #612]	; 15b14 <ftello64@plt+0x4444>
   158ac:	ldr	r4, [r3]
   158b0:	cmp	r4, #0
   158b4:	beq	158dc <ftello64@plt+0x420c>
   158b8:	ldr	r5, [sp, #4]
   158bc:	mov	r1, r5
   158c0:	ldr	r0, [r4, #4]
   158c4:	bl	113a0 <strcmp@plt>
   158c8:	cmp	r0, #0
   158cc:	beq	158dc <ftello64@plt+0x420c>
   158d0:	ldr	r4, [r4]
   158d4:	cmp	r4, #0
   158d8:	bne	158bc <ftello64@plt+0x41ec>
   158dc:	mov	r0, r4
   158e0:	add	sp, sp, #20
   158e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e8:	str	r3, [sp, #8]
   158ec:	str	r3, [sp, #12]
   158f0:	ldr	r1, [pc, #544]	; 15b18 <ftello64@plt+0x4448>
   158f4:	ldr	r0, [pc, #544]	; 15b1c <ftello64@plt+0x444c>
   158f8:	bl	1164c <fopen64@plt>
   158fc:	subs	r3, r0, #0
   15900:	str	r3, [sp]
   15904:	beq	1596c <ftello64@plt+0x429c>
   15908:	ldr	r4, [sp]
   1590c:	mov	r3, r4
   15910:	mov	r2, #10
   15914:	add	r1, sp, #12
   15918:	add	r0, sp, #8
   1591c:	bl	11388 <__getdelim@plt>
   15920:	cmp	r0, #0
   15924:	blt	15988 <ftello64@plt+0x42b8>
   15928:	mov	r3, r4
   1592c:	mov	r2, #10
   15930:	add	r1, sp, #12
   15934:	add	r0, sp, #8
   15938:	bl	11388 <__getdelim@plt>
   1593c:	cmp	r0, #0
   15940:	blt	15988 <ftello64@plt+0x42b8>
   15944:	ldr	r4, [sp, #8]
   15948:	ldr	r1, [pc, #464]	; 15b20 <ftello64@plt+0x4450>
   1594c:	mov	r0, r4
   15950:	bl	11364 <strstr@plt>
   15954:	cmp	r0, #0
   15958:	movne	sl, #2
   1595c:	beq	159b4 <ftello64@plt+0x42e4>
   15960:	ldr	fp, [pc, #444]	; 15b24 <ftello64@plt+0x4454>
   15964:	ldr	r9, [pc, #444]	; 15b28 <ftello64@plt+0x4458>
   15968:	b	15a3c <ftello64@plt+0x436c>
   1596c:	bl	11568 <__errno_location@plt>
   15970:	ldr	r3, [pc, #420]	; 15b1c <ftello64@plt+0x444c>
   15974:	ldr	r2, [pc, #432]	; 15b2c <ftello64@plt+0x445c>
   15978:	ldr	r1, [r0]
   1597c:	mov	r0, #0
   15980:	bl	114a8 <error@plt>
   15984:	b	15adc <ftello64@plt+0x440c>
   15988:	bl	11568 <__errno_location@plt>
   1598c:	ldr	r3, [pc, #392]	; 15b1c <ftello64@plt+0x444c>
   15990:	ldr	r2, [pc, #408]	; 15b30 <ftello64@plt+0x4460>
   15994:	ldr	r1, [r0]
   15998:	mov	r0, #0
   1599c:	bl	114a8 <error@plt>
   159a0:	ldr	r0, [sp]
   159a4:	bl	115c8 <fclose@plt>
   159a8:	ldr	r0, [sp, #8]
   159ac:	bl	17d44 <argp_parse@@Base+0xbf4>
   159b0:	b	15adc <ftello64@plt+0x440c>
   159b4:	ldr	r1, [pc, #376]	; 15b34 <ftello64@plt+0x4464>
   159b8:	mov	r0, r4
   159bc:	bl	11364 <strstr@plt>
   159c0:	adds	sl, r0, #0
   159c4:	movne	sl, #1
   159c8:	b	15960 <ftello64@plt+0x4290>
   159cc:	mov	r1, #58	; 0x3a
   159d0:	mov	r0, r6
   159d4:	bl	11550 <strchr@plt>
   159d8:	subs	r7, r0, #0
   159dc:	beq	15aac <ftello64@plt+0x43dc>
   159e0:	sub	r4, r7, r6
   159e4:	add	r0, r4, #1
   159e8:	bl	18a00 <_obstack_memory_used@@Base+0x83c>
   159ec:	mov	r8, r0
   159f0:	str	r0, [r5, #4]
   159f4:	mov	r2, r4
   159f8:	mov	r1, r6
   159fc:	bl	1140c <memcpy@plt>
   15a00:	mov	r3, #0
   15a04:	strb	r3, [r8, r4]
   15a08:	ldr	r3, [fp, sl, lsl #2]
   15a0c:	mov	r1, r5
   15a10:	add	r0, r7, #1
   15a14:	blx	r3
   15a18:	cmp	r0, #0
   15a1c:	beq	15aec <ftello64@plt+0x441c>
   15a20:	mov	r3, #0
   15a24:	str	r3, [r5]
   15a28:	ldr	r3, [r9]
   15a2c:	cmp	r3, #0
   15a30:	ldreq	r3, [pc, #220]	; 15b14 <ftello64@plt+0x4444>
   15a34:	str	r5, [r3]
   15a38:	str	r5, [r9]
   15a3c:	ldr	r3, [sp]
   15a40:	mov	r2, #10
   15a44:	add	r1, sp, #12
   15a48:	add	r0, sp, #8
   15a4c:	bl	11388 <__getdelim@plt>
   15a50:	cmp	r0, #0
   15a54:	ble	15acc <ftello64@plt+0x43fc>
   15a58:	mov	r0, #120	; 0x78
   15a5c:	bl	18ee0 <_obstack_memory_used@@Base+0xd1c>
   15a60:	mov	r5, r0
   15a64:	ldr	r6, [sp, #8]
   15a68:	ldrb	r4, [r6]
   15a6c:	cmp	r4, #0
   15a70:	beq	159cc <ftello64@plt+0x42fc>
   15a74:	bics	r3, r4, #127	; 0x7f
   15a78:	bne	159cc <ftello64@plt+0x42fc>
   15a7c:	bl	11520 <__ctype_b_loc@plt>
   15a80:	ldr	r2, [r0]
   15a84:	lsl	r4, r4, #1
   15a88:	ldrh	r3, [r2, r4]
   15a8c:	tst	r3, #8192	; 0x2000
   15a90:	beq	159cc <ftello64@plt+0x42fc>
   15a94:	ldrb	r4, [r6, #1]!
   15a98:	cmp	r4, #0
   15a9c:	beq	159cc <ftello64@plt+0x42fc>
   15aa0:	bics	r3, r4, #127	; 0x7f
   15aa4:	beq	15a84 <ftello64@plt+0x43b4>
   15aa8:	b	159cc <ftello64@plt+0x42fc>
   15aac:	bl	11568 <__errno_location@plt>
   15ab0:	ldr	r3, [pc, #100]	; 15b1c <ftello64@plt+0x444c>
   15ab4:	ldr	r2, [pc, #116]	; 15b30 <ftello64@plt+0x4460>
   15ab8:	ldr	r1, [r0]
   15abc:	mov	r0, #0
   15ac0:	bl	114a8 <error@plt>
   15ac4:	mov	r0, r5
   15ac8:	bl	17d44 <argp_parse@@Base+0xbf4>
   15acc:	ldr	r0, [sp]
   15ad0:	bl	115c8 <fclose@plt>
   15ad4:	ldr	r0, [sp, #8]
   15ad8:	bl	17d44 <argp_parse@@Base+0xbf4>
   15adc:	mov	r2, #1
   15ae0:	ldr	r3, [pc, #40]	; 15b10 <ftello64@plt+0x4440>
   15ae4:	str	r2, [r3]
   15ae8:	b	158a8 <ftello64@plt+0x41d8>
   15aec:	bl	11568 <__errno_location@plt>
   15af0:	ldr	r3, [pc, #36]	; 15b1c <ftello64@plt+0x444c>
   15af4:	ldr	r2, [pc, #52]	; 15b30 <ftello64@plt+0x4460>
   15af8:	ldr	r1, [r0]
   15afc:	mov	r0, #0
   15b00:	bl	114a8 <error@plt>
   15b04:	mov	r0, r5
   15b08:	bl	17d44 <argp_parse@@Base+0xbf4>
   15b0c:	b	15acc <ftello64@plt+0x43fc>
   15b10:			; <UNDEFINED> instruction: 0x00032bb0
   15b14:	andeq	r2, r3, ip, lsl ip
   15b18:	andeq	sp, r1, r0, asr #31
   15b1c:	andeq	pc, r1, r0, asr #20
   15b20:	andeq	pc, r1, r0, ror sl	; <UNPREDICTABLE>
   15b24:	andeq	pc, r1, r8, lsr r9	; <UNPREDICTABLE>
   15b28:	andeq	r2, r3, r8, lsl ip
   15b2c:	andeq	pc, r1, r0, asr sl	; <UNPREDICTABLE>
   15b30:	andeq	pc, r1, r0, ror #20
   15b34:	andeq	pc, r1, ip, ror sl	; <UNPREDICTABLE>
   15b38:	push	{r4, r5, r6, lr}
   15b3c:	mov	r4, r0
   15b40:	mov	r5, r1
   15b44:	mov	r6, r2
   15b48:	ldr	r0, [r0, #4]
   15b4c:	bl	1588c <ftello64@plt+0x41bc>
   15b50:	clz	r3, r0
   15b54:	lsr	r3, r3, #5
   15b58:	mov	r2, r6
   15b5c:	mov	r1, r5
   15b60:	mov	r0, r4
   15b64:	bl	14980 <ftello64@plt+0x32b0>
   15b68:	pop	{r4, r5, r6, pc}
   15b6c:	push	{r4, r5, r6, lr}
   15b70:	mov	r4, r0
   15b74:	mov	r5, r1
   15b78:	mov	r6, r2
   15b7c:	ldr	r0, [r0, #4]
   15b80:	bl	1588c <ftello64@plt+0x41bc>
   15b84:	cmp	r0, #0
   15b88:	beq	15ba4 <ftello64@plt+0x44d4>
   15b8c:	ldr	r3, [r0, #8]
   15b90:	mov	r2, r6
   15b94:	mov	r1, r5
   15b98:	mov	r0, r4
   15b9c:	bl	13f14 <ftello64@plt+0x2844>
   15ba0:	pop	{r4, r5, r6, pc}
   15ba4:	ldr	r1, [pc, #8]	; 15bb4 <ftello64@plt+0x44e4>
   15ba8:	mov	r0, r4
   15bac:	bl	13ae8 <ftello64@plt+0x2418>
   15bb0:	pop	{r4, r5, r6, pc}
   15bb4:	andeq	pc, r1, r4, lsl #21
   15bb8:	push	{r4, r5, r6, lr}
   15bbc:	mov	r4, r0
   15bc0:	mov	r5, r1
   15bc4:	mov	r6, r2
   15bc8:	ldr	r0, [r0, #4]
   15bcc:	bl	1588c <ftello64@plt+0x41bc>
   15bd0:	cmp	r0, #0
   15bd4:	beq	15bf0 <ftello64@plt+0x4520>
   15bd8:	ldr	r3, [r0, #16]
   15bdc:	mov	r2, r6
   15be0:	mov	r1, r5
   15be4:	mov	r0, r4
   15be8:	bl	13f14 <ftello64@plt+0x2844>
   15bec:	pop	{r4, r5, r6, pc}
   15bf0:	ldr	r1, [pc, #8]	; 15c00 <ftello64@plt+0x4530>
   15bf4:	mov	r0, r4
   15bf8:	bl	13ae8 <ftello64@plt+0x2418>
   15bfc:	pop	{r4, r5, r6, pc}
   15c00:	muleq	r1, ip, sl
   15c04:	push	{r4, r5, r6, lr}
   15c08:	mov	r4, r0
   15c0c:	mov	r5, r1
   15c10:	mov	r6, r2
   15c14:	ldr	r0, [r0, #4]
   15c18:	bl	1588c <ftello64@plt+0x41bc>
   15c1c:	cmp	r0, #0
   15c20:	beq	15c3c <ftello64@plt+0x456c>
   15c24:	ldr	r3, [r0, #24]
   15c28:	mov	r2, r6
   15c2c:	mov	r1, r5
   15c30:	mov	r0, r4
   15c34:	bl	13f14 <ftello64@plt+0x2844>
   15c38:	pop	{r4, r5, r6, pc}
   15c3c:	ldr	r1, [pc, #8]	; 15c4c <ftello64@plt+0x457c>
   15c40:	mov	r0, r4
   15c44:	bl	13ae8 <ftello64@plt+0x2418>
   15c48:	pop	{r4, r5, r6, pc}
   15c4c:			; <UNDEFINED> instruction: 0x0001fab4
   15c50:	push	{r4, r5, r6, lr}
   15c54:	mov	r4, r0
   15c58:	mov	r5, r1
   15c5c:	mov	r6, r2
   15c60:	ldr	r0, [r0, #4]
   15c64:	bl	1588c <ftello64@plt+0x41bc>
   15c68:	cmp	r0, #0
   15c6c:	beq	15c88 <ftello64@plt+0x45b8>
   15c70:	ldr	r3, [r0, #32]
   15c74:	mov	r2, r6
   15c78:	mov	r1, r5
   15c7c:	mov	r0, r4
   15c80:	bl	13f14 <ftello64@plt+0x2844>
   15c84:	pop	{r4, r5, r6, pc}
   15c88:	ldr	r1, [pc, #8]	; 15c98 <ftello64@plt+0x45c8>
   15c8c:	mov	r0, r4
   15c90:	bl	13ae8 <ftello64@plt+0x2418>
   15c94:	pop	{r4, r5, r6, pc}
   15c98:	andeq	pc, r1, r8, asr #21
   15c9c:	push	{r4, r5, r6, lr}
   15ca0:	mov	r4, r0
   15ca4:	mov	r5, r1
   15ca8:	mov	r6, r2
   15cac:	ldr	r0, [r0, #4]
   15cb0:	bl	1588c <ftello64@plt+0x41bc>
   15cb4:	cmp	r0, #0
   15cb8:	beq	15cd4 <ftello64@plt+0x4604>
   15cbc:	ldr	r3, [r0, #40]	; 0x28
   15cc0:	mov	r2, r6
   15cc4:	mov	r1, r5
   15cc8:	mov	r0, r4
   15ccc:	bl	13f14 <ftello64@plt+0x2844>
   15cd0:	pop	{r4, r5, r6, pc}
   15cd4:	ldr	r1, [pc, #8]	; 15ce4 <ftello64@plt+0x4614>
   15cd8:	mov	r0, r4
   15cdc:	bl	13ae8 <ftello64@plt+0x2418>
   15ce0:	pop	{r4, r5, r6, pc}
   15ce4:	ldrdeq	pc, [r1], -ip
   15ce8:	push	{r4, r5, r6, lr}
   15cec:	mov	r4, r0
   15cf0:	mov	r5, r1
   15cf4:	mov	r6, r2
   15cf8:	ldr	r0, [r0, #4]
   15cfc:	bl	1588c <ftello64@plt+0x41bc>
   15d00:	cmp	r0, #0
   15d04:	beq	15d20 <ftello64@plt+0x4650>
   15d08:	ldr	r3, [r0, #44]	; 0x2c
   15d0c:	mov	r2, r6
   15d10:	mov	r1, r5
   15d14:	mov	r0, r4
   15d18:	bl	13f14 <ftello64@plt+0x2844>
   15d1c:	pop	{r4, r5, r6, pc}
   15d20:	ldr	r1, [pc, #8]	; 15d30 <ftello64@plt+0x4660>
   15d24:	mov	r0, r4
   15d28:	bl	13ae8 <ftello64@plt+0x2418>
   15d2c:	pop	{r4, r5, r6, pc}
   15d30:	strdeq	pc, [r1], -r0
   15d34:	push	{r4, r5, r6, lr}
   15d38:	mov	r4, r0
   15d3c:	mov	r5, r1
   15d40:	mov	r6, r2
   15d44:	ldr	r0, [r0, #4]
   15d48:	bl	1588c <ftello64@plt+0x41bc>
   15d4c:	cmp	r0, #0
   15d50:	beq	15d6c <ftello64@plt+0x469c>
   15d54:	ldr	r3, [r0, #48]	; 0x30
   15d58:	mov	r2, r6
   15d5c:	mov	r1, r5
   15d60:	mov	r0, r4
   15d64:	bl	13f14 <ftello64@plt+0x2844>
   15d68:	pop	{r4, r5, r6, pc}
   15d6c:	ldr	r1, [pc, #8]	; 15d7c <ftello64@plt+0x46ac>
   15d70:	mov	r0, r4
   15d74:	bl	13ae8 <ftello64@plt+0x2418>
   15d78:	pop	{r4, r5, r6, pc}
   15d7c:	andeq	pc, r1, r4, lsl #22
   15d80:	push	{r4, r5, r6, lr}
   15d84:	mov	r4, r0
   15d88:	mov	r5, r1
   15d8c:	mov	r6, r2
   15d90:	ldr	r0, [r0, #4]
   15d94:	bl	1588c <ftello64@plt+0x41bc>
   15d98:	cmp	r0, #0
   15d9c:	beq	15db8 <ftello64@plt+0x46e8>
   15da0:	ldr	r3, [r0, #52]	; 0x34
   15da4:	mov	r2, r6
   15da8:	mov	r1, r5
   15dac:	mov	r0, r4
   15db0:	bl	13f14 <ftello64@plt+0x2844>
   15db4:	pop	{r4, r5, r6, pc}
   15db8:	ldr	r1, [pc, #8]	; 15dc8 <ftello64@plt+0x46f8>
   15dbc:	mov	r0, r4
   15dc0:	bl	13ae8 <ftello64@plt+0x2418>
   15dc4:	pop	{r4, r5, r6, pc}
   15dc8:	andeq	pc, r1, ip, lsl fp	; <UNPREDICTABLE>
   15dcc:	push	{r4, r5, r6, lr}
   15dd0:	mov	r4, r0
   15dd4:	mov	r5, r1
   15dd8:	mov	r6, r2
   15ddc:	ldr	r0, [r0, #4]
   15de0:	bl	1588c <ftello64@plt+0x41bc>
   15de4:	cmp	r0, #0
   15de8:	beq	15e04 <ftello64@plt+0x4734>
   15dec:	ldr	r3, [r0, #56]	; 0x38
   15df0:	mov	r2, r6
   15df4:	mov	r1, r5
   15df8:	mov	r0, r4
   15dfc:	bl	13f14 <ftello64@plt+0x2844>
   15e00:	pop	{r4, r5, r6, pc}
   15e04:	ldr	r1, [pc, #8]	; 15e14 <ftello64@plt+0x4744>
   15e08:	mov	r0, r4
   15e0c:	bl	13ae8 <ftello64@plt+0x2418>
   15e10:	pop	{r4, r5, r6, pc}
   15e14:	andeq	pc, r1, r4, lsr fp	; <UNPREDICTABLE>
   15e18:	push	{r4, r5, r6, lr}
   15e1c:	mov	r4, r0
   15e20:	mov	r5, r1
   15e24:	mov	r6, r2
   15e28:	ldr	r0, [r0, #4]
   15e2c:	bl	1588c <ftello64@plt+0x41bc>
   15e30:	cmp	r0, #0
   15e34:	beq	15e50 <ftello64@plt+0x4780>
   15e38:	ldr	r3, [r0, #60]	; 0x3c
   15e3c:	mov	r2, r6
   15e40:	mov	r1, r5
   15e44:	mov	r0, r4
   15e48:	bl	13f14 <ftello64@plt+0x2844>
   15e4c:	pop	{r4, r5, r6, pc}
   15e50:	ldr	r1, [pc, #8]	; 15e60 <ftello64@plt+0x4790>
   15e54:	mov	r0, r4
   15e58:	bl	13ae8 <ftello64@plt+0x2418>
   15e5c:	pop	{r4, r5, r6, pc}
   15e60:	andeq	pc, r1, ip, asr #22
   15e64:	push	{r4, r5, r6, lr}
   15e68:	mov	r4, r0
   15e6c:	mov	r5, r1
   15e70:	mov	r6, r2
   15e74:	ldr	r0, [r0, #4]
   15e78:	bl	1588c <ftello64@plt+0x41bc>
   15e7c:	cmp	r0, #0
   15e80:	beq	15e9c <ftello64@plt+0x47cc>
   15e84:	ldr	r3, [r0, #64]	; 0x40
   15e88:	mov	r2, r6
   15e8c:	mov	r1, r5
   15e90:	mov	r0, r4
   15e94:	bl	13f14 <ftello64@plt+0x2844>
   15e98:	pop	{r4, r5, r6, pc}
   15e9c:	ldr	r1, [pc, #8]	; 15eac <ftello64@plt+0x47dc>
   15ea0:	mov	r0, r4
   15ea4:	bl	13ae8 <ftello64@plt+0x2418>
   15ea8:	pop	{r4, r5, r6, pc}
   15eac:	andeq	pc, r1, r4, ror #22
   15eb0:	push	{r4, r5, r6, lr}
   15eb4:	mov	r4, r0
   15eb8:	mov	r5, r1
   15ebc:	mov	r6, r2
   15ec0:	ldr	r0, [r0, #4]
   15ec4:	bl	1588c <ftello64@plt+0x41bc>
   15ec8:	cmp	r0, #0
   15ecc:	beq	15ee8 <ftello64@plt+0x4818>
   15ed0:	ldr	r3, [r0, #68]	; 0x44
   15ed4:	mov	r2, r6
   15ed8:	mov	r1, r5
   15edc:	mov	r0, r4
   15ee0:	bl	13f14 <ftello64@plt+0x2844>
   15ee4:	pop	{r4, r5, r6, pc}
   15ee8:	ldr	r1, [pc, #8]	; 15ef8 <ftello64@plt+0x4828>
   15eec:	mov	r0, r4
   15ef0:	bl	13ae8 <ftello64@plt+0x2418>
   15ef4:	pop	{r4, r5, r6, pc}
   15ef8:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
   15efc:	push	{r4, r5, r6, lr}
   15f00:	mov	r4, r0
   15f04:	mov	r5, r1
   15f08:	mov	r6, r2
   15f0c:	ldr	r0, [r0, #4]
   15f10:	bl	1588c <ftello64@plt+0x41bc>
   15f14:	cmp	r0, #0
   15f18:	beq	15f34 <ftello64@plt+0x4864>
   15f1c:	ldr	r3, [r0, #72]	; 0x48
   15f20:	mov	r2, r6
   15f24:	mov	r1, r5
   15f28:	mov	r0, r4
   15f2c:	bl	13f14 <ftello64@plt+0x2844>
   15f30:	pop	{r4, r5, r6, pc}
   15f34:	ldr	r1, [pc, #8]	; 15f44 <ftello64@plt+0x4874>
   15f38:	mov	r0, r4
   15f3c:	bl	13ae8 <ftello64@plt+0x2418>
   15f40:	pop	{r4, r5, r6, pc}
   15f44:	muleq	r1, r4, fp
   15f48:	push	{r4, r5, r6, lr}
   15f4c:	mov	r4, r0
   15f50:	mov	r5, r1
   15f54:	mov	r6, r2
   15f58:	ldr	r0, [r0, #4]
   15f5c:	bl	1588c <ftello64@plt+0x41bc>
   15f60:	cmp	r0, #0
   15f64:	beq	15f80 <ftello64@plt+0x48b0>
   15f68:	ldr	r3, [r0, #76]	; 0x4c
   15f6c:	mov	r2, r6
   15f70:	mov	r1, r5
   15f74:	mov	r0, r4
   15f78:	bl	13f14 <ftello64@plt+0x2844>
   15f7c:	pop	{r4, r5, r6, pc}
   15f80:	ldr	r1, [pc, #8]	; 15f90 <ftello64@plt+0x48c0>
   15f84:	mov	r0, r4
   15f88:	bl	13ae8 <ftello64@plt+0x2418>
   15f8c:	pop	{r4, r5, r6, pc}
   15f90:			; <UNDEFINED> instruction: 0x0001fbb0
   15f94:	push	{r4, r5, r6, lr}
   15f98:	mov	r4, r0
   15f9c:	mov	r5, r1
   15fa0:	mov	r6, r2
   15fa4:	ldr	r0, [r0, #4]
   15fa8:	bl	1588c <ftello64@plt+0x41bc>
   15fac:	cmp	r0, #0
   15fb0:	beq	15fcc <ftello64@plt+0x48fc>
   15fb4:	ldr	r3, [r0, #80]	; 0x50
   15fb8:	mov	r2, r6
   15fbc:	mov	r1, r5
   15fc0:	mov	r0, r4
   15fc4:	bl	13f14 <ftello64@plt+0x2844>
   15fc8:	pop	{r4, r5, r6, pc}
   15fcc:	ldr	r1, [pc, #8]	; 15fdc <ftello64@plt+0x490c>
   15fd0:	mov	r0, r4
   15fd4:	bl	13ae8 <ftello64@plt+0x2418>
   15fd8:	pop	{r4, r5, r6, pc}
   15fdc:	andeq	pc, r1, ip, asr #23
   15fe0:	push	{r4, r5, r6, lr}
   15fe4:	mov	r4, r0
   15fe8:	mov	r5, r1
   15fec:	mov	r6, r2
   15ff0:	ldr	r0, [r0, #4]
   15ff4:	bl	1588c <ftello64@plt+0x41bc>
   15ff8:	cmp	r0, #0
   15ffc:	beq	16018 <ftello64@plt+0x4948>
   16000:	ldr	r3, [r0, #84]	; 0x54
   16004:	mov	r2, r6
   16008:	mov	r1, r5
   1600c:	mov	r0, r4
   16010:	bl	13f14 <ftello64@plt+0x2844>
   16014:	pop	{r4, r5, r6, pc}
   16018:	ldr	r1, [pc, #8]	; 16028 <ftello64@plt+0x4958>
   1601c:	mov	r0, r4
   16020:	bl	13ae8 <ftello64@plt+0x2418>
   16024:	pop	{r4, r5, r6, pc}
   16028:	andeq	pc, r1, r4, ror #23
   1602c:	push	{r4, r5, r6, lr}
   16030:	mov	r4, r0
   16034:	mov	r5, r1
   16038:	mov	r6, r2
   1603c:	ldr	r0, [r0, #4]
   16040:	bl	1588c <ftello64@plt+0x41bc>
   16044:	cmp	r0, #0
   16048:	beq	16064 <ftello64@plt+0x4994>
   1604c:	ldr	r3, [r0, #88]	; 0x58
   16050:	mov	r2, r6
   16054:	mov	r1, r5
   16058:	mov	r0, r4
   1605c:	bl	13f14 <ftello64@plt+0x2844>
   16060:	pop	{r4, r5, r6, pc}
   16064:	ldr	r1, [pc, #8]	; 16074 <ftello64@plt+0x49a4>
   16068:	mov	r0, r4
   1606c:	bl	13ae8 <ftello64@plt+0x2418>
   16070:	pop	{r4, r5, r6, pc}
   16074:	andeq	pc, r1, r0, lsl #24
   16078:	push	{r4, r5, r6, lr}
   1607c:	mov	r4, r0
   16080:	mov	r5, r1
   16084:	mov	r6, r2
   16088:	ldr	r0, [r0, #4]
   1608c:	bl	1588c <ftello64@plt+0x41bc>
   16090:	cmp	r0, #0
   16094:	beq	160b0 <ftello64@plt+0x49e0>
   16098:	ldr	r3, [r0, #92]	; 0x5c
   1609c:	mov	r2, r6
   160a0:	mov	r1, r5
   160a4:	mov	r0, r4
   160a8:	bl	13f14 <ftello64@plt+0x2844>
   160ac:	pop	{r4, r5, r6, pc}
   160b0:	ldr	r1, [pc, #8]	; 160c0 <ftello64@plt+0x49f0>
   160b4:	mov	r0, r4
   160b8:	bl	13ae8 <ftello64@plt+0x2418>
   160bc:	pop	{r4, r5, r6, pc}
   160c0:	andeq	pc, r1, ip, lsl ip	; <UNPREDICTABLE>
   160c4:	push	{r4, r5, r6, lr}
   160c8:	mov	r4, r0
   160cc:	mov	r5, r1
   160d0:	mov	r6, r2
   160d4:	ldr	r0, [r0, #4]
   160d8:	bl	1588c <ftello64@plt+0x41bc>
   160dc:	cmp	r0, #0
   160e0:	beq	160fc <ftello64@plt+0x4a2c>
   160e4:	ldr	r3, [r0, #96]	; 0x60
   160e8:	mov	r2, r6
   160ec:	mov	r1, r5
   160f0:	mov	r0, r4
   160f4:	bl	13f14 <ftello64@plt+0x2844>
   160f8:	pop	{r4, r5, r6, pc}
   160fc:	ldr	r1, [pc, #8]	; 1610c <ftello64@plt+0x4a3c>
   16100:	mov	r0, r4
   16104:	bl	13ae8 <ftello64@plt+0x2418>
   16108:	pop	{r4, r5, r6, pc}
   1610c:	andeq	pc, r1, r8, lsr ip	; <UNPREDICTABLE>
   16110:	push	{r4, r5, r6, lr}
   16114:	mov	r4, r0
   16118:	mov	r5, r1
   1611c:	mov	r6, r2
   16120:	ldr	r0, [r0, #4]
   16124:	bl	1588c <ftello64@plt+0x41bc>
   16128:	cmp	r0, #0
   1612c:	beq	16148 <ftello64@plt+0x4a78>
   16130:	ldr	r3, [r0, #100]	; 0x64
   16134:	mov	r2, r6
   16138:	mov	r1, r5
   1613c:	mov	r0, r4
   16140:	bl	13f14 <ftello64@plt+0x2844>
   16144:	pop	{r4, r5, r6, pc}
   16148:	ldr	r1, [pc, #8]	; 16158 <ftello64@plt+0x4a88>
   1614c:	mov	r0, r4
   16150:	bl	13ae8 <ftello64@plt+0x2418>
   16154:	pop	{r4, r5, r6, pc}
   16158:	andeq	pc, r1, r4, asr ip	; <UNPREDICTABLE>
   1615c:	push	{r4, r5, r6, lr}
   16160:	mov	r4, r0
   16164:	mov	r5, r1
   16168:	mov	r6, r2
   1616c:	ldr	r0, [r0, #4]
   16170:	bl	1588c <ftello64@plt+0x41bc>
   16174:	cmp	r0, #0
   16178:	beq	16194 <ftello64@plt+0x4ac4>
   1617c:	ldr	r3, [r0, #104]	; 0x68
   16180:	mov	r2, r6
   16184:	mov	r1, r5
   16188:	mov	r0, r4
   1618c:	bl	13f14 <ftello64@plt+0x2844>
   16190:	pop	{r4, r5, r6, pc}
   16194:	ldr	r1, [pc, #8]	; 161a4 <ftello64@plt+0x4ad4>
   16198:	mov	r0, r4
   1619c:	bl	13ae8 <ftello64@plt+0x2418>
   161a0:	pop	{r4, r5, r6, pc}
   161a4:	andeq	pc, r1, r0, ror ip	; <UNPREDICTABLE>
   161a8:	push	{r4, r5, r6, lr}
   161ac:	mov	r4, r0
   161b0:	mov	r5, r1
   161b4:	mov	r6, r2
   161b8:	ldr	r0, [r0, #4]
   161bc:	bl	1588c <ftello64@plt+0x41bc>
   161c0:	cmp	r0, #0
   161c4:	beq	161e0 <ftello64@plt+0x4b10>
   161c8:	ldr	r3, [r0, #108]	; 0x6c
   161cc:	mov	r2, r6
   161d0:	mov	r1, r5
   161d4:	mov	r0, r4
   161d8:	bl	13f14 <ftello64@plt+0x2844>
   161dc:	pop	{r4, r5, r6, pc}
   161e0:	ldr	r1, [pc, #8]	; 161f0 <ftello64@plt+0x4b20>
   161e4:	mov	r0, r4
   161e8:	bl	13ae8 <ftello64@plt+0x2418>
   161ec:	pop	{r4, r5, r6, pc}
   161f0:	andeq	pc, r1, ip, lsl #25
   161f4:	push	{r4, r5, r6, lr}
   161f8:	mov	r4, r0
   161fc:	mov	r5, r1
   16200:	mov	r6, r2
   16204:	ldr	r0, [r0, #4]
   16208:	bl	1588c <ftello64@plt+0x41bc>
   1620c:	cmp	r0, #0
   16210:	beq	1622c <ftello64@plt+0x4b5c>
   16214:	ldr	r3, [r0, #112]	; 0x70
   16218:	mov	r2, r6
   1621c:	mov	r1, r5
   16220:	mov	r0, r4
   16224:	bl	13f14 <ftello64@plt+0x2844>
   16228:	pop	{r4, r5, r6, pc}
   1622c:	ldr	r1, [pc, #8]	; 1623c <ftello64@plt+0x4b6c>
   16230:	mov	r0, r4
   16234:	bl	13ae8 <ftello64@plt+0x2418>
   16238:	pop	{r4, r5, r6, pc}
   1623c:	andeq	pc, r1, ip, lsr #25
   16240:	push	{r4, r5, r6, lr}
   16244:	mov	r4, r0
   16248:	mov	r5, r1
   1624c:	mov	r6, r2
   16250:	ldr	r2, [r0, #4]
   16254:	ldr	r1, [pc, #88]	; 162b4 <ftello64@plt+0x4be4>
   16258:	ldr	r0, [r0, #8]
   1625c:	bl	17e54 <argp_parse@@Base+0xd04>
   16260:	cmp	r0, #0
   16264:	blt	1629c <ftello64@plt+0x4bcc>
   16268:	ldr	r3, [r4, #4]
   1626c:	ldrh	r0, [r3, #16]
   16270:	bl	1582c <ftello64@plt+0x415c>
   16274:	cmp	r0, #0
   16278:	ldrne	r3, [r0, #12]
   1627c:	clzne	r3, r3
   16280:	lsrne	r3, r3, #5
   16284:	moveq	r3, #1
   16288:	mov	r2, r6
   1628c:	mov	r1, r5
   16290:	mov	r0, r4
   16294:	bl	14980 <ftello64@plt+0x32b0>
   16298:	pop	{r4, r5, r6, pc}
   1629c:	mov	r3, #1
   162a0:	mov	r2, r6
   162a4:	mov	r1, r5
   162a8:	mov	r0, r4
   162ac:	bl	14980 <ftello64@plt+0x32b0>
   162b0:	b	16268 <ftello64@plt+0x4b98>
   162b4:	andeq	r8, r0, r7, lsr #18
   162b8:	push	{r4, r5, r6, lr}
   162bc:	mov	r4, r0
   162c0:	ldr	r2, [r0, #4]
   162c4:	ldr	r1, [pc, #104]	; 16334 <ftello64@plt+0x4c64>
   162c8:	ldr	r0, [r0, #8]
   162cc:	bl	17e54 <argp_parse@@Base+0xd04>
   162d0:	cmp	r0, #0
   162d4:	blt	16308 <ftello64@plt+0x4c38>
   162d8:	ldr	r5, [r4, #4]
   162dc:	ldrh	r0, [r5, #16]
   162e0:	bl	1582c <ftello64@plt+0x415c>
   162e4:	cmp	r0, #0
   162e8:	beq	16324 <ftello64@plt+0x4c54>
   162ec:	ldr	r3, [r0, #12]
   162f0:	cmp	r3, #0
   162f4:	beq	16324 <ftello64@plt+0x4c54>
   162f8:	add	r1, r5, #18
   162fc:	mov	r0, r4
   16300:	blx	r3
   16304:	pop	{r4, r5, r6, pc}
   16308:	bl	11568 <__errno_location@plt>
   1630c:	ldr	r3, [r4, #4]
   16310:	ldr	r2, [pc, #32]	; 16338 <ftello64@plt+0x4c68>
   16314:	ldr	r1, [r0]
   16318:	mov	r0, #1
   1631c:	bl	114a8 <error@plt>
   16320:	pop	{r4, r5, r6, pc}
   16324:	ldr	r1, [pc, #16]	; 1633c <ftello64@plt+0x4c6c>
   16328:	mov	r0, r4
   1632c:	bl	13ae8 <ftello64@plt+0x2418>
   16330:	pop	{r4, r5, r6, pc}
   16334:	andeq	r8, r0, r7, lsr #18
   16338:	andeq	pc, r1, r8, asr #25
   1633c:	strdeq	pc, [r1], -r0
   16340:	push	{r4, r5, r6, lr}
   16344:	mov	r4, r0
   16348:	mov	r5, r1
   1634c:	mov	r6, r2
   16350:	ldr	r2, [r0, #4]
   16354:	ldr	r1, [pc, #36]	; 16380 <ftello64@plt+0x4cb0>
   16358:	ldr	r0, [r0, #8]
   1635c:	bl	17e54 <argp_parse@@Base+0xd04>
   16360:	cmp	r0, #0
   16364:	movge	r3, #0
   16368:	movlt	r3, #1
   1636c:	mov	r2, r6
   16370:	mov	r1, r5
   16374:	mov	r0, r4
   16378:	bl	14980 <ftello64@plt+0x32b0>
   1637c:	pop	{r4, r5, r6, pc}
   16380:	andeq	r8, r0, r7, lsr #18
   16384:	push	{r4, lr}
   16388:	mov	r4, r0
   1638c:	ldr	r2, [r0, #4]
   16390:	ldr	r1, [pc, #76]	; 163e4 <ftello64@plt+0x4d14>
   16394:	ldr	r0, [r0, #8]
   16398:	bl	17e54 <argp_parse@@Base+0xd04>
   1639c:	cmp	r0, #0
   163a0:	blt	163c8 <ftello64@plt+0x4cf8>
   163a4:	ldr	r3, [r4, #4]
   163a8:	ldrh	r0, [r3, #16]
   163ac:	bl	1582c <ftello64@plt+0x415c>
   163b0:	cmp	r0, #0
   163b4:	ldrne	r1, [r0, #4]
   163b8:	ldreq	r1, [pc, #40]	; 163e8 <ftello64@plt+0x4d18>
   163bc:	mov	r0, r4
   163c0:	bl	13ae8 <ftello64@plt+0x2418>
   163c4:	pop	{r4, pc}
   163c8:	bl	11568 <__errno_location@plt>
   163cc:	ldr	r3, [r4, #4]
   163d0:	ldr	r2, [pc, #20]	; 163ec <ftello64@plt+0x4d1c>
   163d4:	ldr	r1, [r0]
   163d8:	mov	r0, #1
   163dc:	bl	114a8 <error@plt>
   163e0:	pop	{r4, pc}
   163e4:	andeq	r8, r0, r7, lsr #18
   163e8:	andeq	pc, r1, r4, lsl #26
   163ec:	andeq	pc, r1, r8, asr #25
   163f0:	push	{r4, r5, r6, lr}
   163f4:	mov	r4, r0
   163f8:	mov	r5, r1
   163fc:	mov	r6, r2
   16400:	ldr	r2, [r0, #4]
   16404:	ldr	r1, [pc, #36]	; 16430 <ftello64@plt+0x4d60>
   16408:	ldr	r0, [r0, #8]
   1640c:	bl	17e54 <argp_parse@@Base+0xd04>
   16410:	cmp	r0, #0
   16414:	movge	r3, #0
   16418:	movlt	r3, #1
   1641c:	mov	r2, r6
   16420:	mov	r1, r5
   16424:	mov	r0, r4
   16428:	bl	14980 <ftello64@plt+0x32b0>
   1642c:	pop	{r4, r5, r6, pc}
   16430:	andeq	r8, r0, sp, lsl r9
   16434:	push	{r4, r5, r6, lr}
   16438:	mov	r4, r0
   1643c:	mov	r5, r1
   16440:	mov	r6, r2
   16444:	ldr	r2, [r0, #4]
   16448:	ldr	r1, [pc, #76]	; 1649c <ftello64@plt+0x4dcc>
   1644c:	ldr	r0, [r0, #8]
   16450:	bl	17e54 <argp_parse@@Base+0xd04>
   16454:	cmp	r0, #0
   16458:	blt	16480 <ftello64@plt+0x4db0>
   1645c:	ldr	r3, [r4, #4]
   16460:	ldr	r3, [r3, #16]
   16464:	cmp	r3, #0
   16468:	moveq	r3, #1
   1646c:	mov	r2, r6
   16470:	mov	r1, r5
   16474:	mov	r0, r4
   16478:	bl	13c10 <ftello64@plt+0x2540>
   1647c:	pop	{r4, r5, r6, pc}
   16480:	bl	11568 <__errno_location@plt>
   16484:	ldr	r3, [r4, #4]
   16488:	ldr	r2, [pc, #16]	; 164a0 <ftello64@plt+0x4dd0>
   1648c:	ldr	r1, [r0]
   16490:	mov	r0, #1
   16494:	bl	114a8 <error@plt>
   16498:	pop	{r4, r5, r6, pc}
   1649c:	andeq	r8, r0, sp, lsl r9
   164a0:	andeq	pc, r1, r8, asr r5	; <UNPREDICTABLE>
   164a4:	push	{r4, r5, r6, lr}
   164a8:	mov	r4, r0
   164ac:	mov	r5, r1
   164b0:	mov	r6, r2
   164b4:	ldr	r2, [r0, #4]
   164b8:	ldr	r1, [pc, #44]	; 164ec <ftello64@plt+0x4e1c>
   164bc:	ldr	r0, [r0, #8]
   164c0:	bl	17e54 <argp_parse@@Base+0xd04>
   164c4:	cmp	r0, #0
   164c8:	ldrge	r3, [r4, #4]
   164cc:	ldrge	r3, [r3, #16]
   164d0:	lsrge	r3, r3, #31
   164d4:	movlt	r3, #1
   164d8:	mov	r2, r6
   164dc:	mov	r1, r5
   164e0:	mov	r0, r4
   164e4:	bl	14980 <ftello64@plt+0x32b0>
   164e8:	pop	{r4, r5, r6, pc}
   164ec:	andeq	r8, r0, r2, asr #18
   164f0:	push	{r4, r5, r6, lr}
   164f4:	mov	r4, r0
   164f8:	mov	r5, r1
   164fc:	mov	r6, r2
   16500:	ldr	r2, [r0, #4]
   16504:	ldr	r1, [pc, #68]	; 16550 <ftello64@plt+0x4e80>
   16508:	ldr	r0, [r0, #8]
   1650c:	bl	17e54 <argp_parse@@Base+0xd04>
   16510:	cmp	r0, #0
   16514:	blt	16534 <ftello64@plt+0x4e64>
   16518:	ldr	r3, [r4, #4]
   1651c:	ldr	r3, [r3, #16]
   16520:	mov	r2, r6
   16524:	mov	r1, r5
   16528:	mov	r0, r4
   1652c:	bl	13c10 <ftello64@plt+0x2540>
   16530:	pop	{r4, r5, r6, pc}
   16534:	bl	11568 <__errno_location@plt>
   16538:	ldr	r3, [r4, #4]
   1653c:	ldr	r2, [pc, #16]	; 16554 <ftello64@plt+0x4e84>
   16540:	ldr	r1, [r0]
   16544:	mov	r0, #1
   16548:	bl	114a8 <error@plt>
   1654c:	pop	{r4, r5, r6, pc}
   16550:	andeq	r8, r0, r2, asr #18
   16554:	andeq	pc, r1, r8, lsl sp	; <UNPREDICTABLE>
   16558:	push	{r4, r5, r6, lr}
   1655c:	sub	sp, sp, #16
   16560:	mov	r5, r1
   16564:	subs	r4, r0, #0
   16568:	beq	165f0 <ftello64@plt+0x4f20>
   1656c:	ldr	r3, [r4, #4]
   16570:	tst	r3, #1
   16574:	beq	16608 <ftello64@plt+0x4f38>
   16578:	ldr	r3, [r4, #8]
   1657c:	ldr	r3, [r3]
   16580:	tst	r3, #1
   16584:	bne	16650 <ftello64@plt+0x4f80>
   16588:	ldr	r6, [r4, #8]
   1658c:	mov	r2, #0
   16590:	add	r1, sp, #12
   16594:	mov	r0, r5
   16598:	bl	113ac <strtol@plt>
   1659c:	str	r0, [r6, #4]
   165a0:	ldrb	r3, [r5]
   165a4:	cmp	r3, #0
   165a8:	beq	165bc <ftello64@plt+0x4eec>
   165ac:	ldr	r3, [sp, #12]
   165b0:	ldrb	r3, [r3]
   165b4:	cmp	r3, #0
   165b8:	beq	165d8 <ftello64@plt+0x4f08>
   165bc:	ldr	r3, [r4]
   165c0:	str	r3, [sp]
   165c4:	mov	r3, r5
   165c8:	ldr	r2, [pc, #152]	; 16668 <ftello64@plt+0x4f98>
   165cc:	mov	r1, #0
   165d0:	mov	r0, #1
   165d4:	bl	114a8 <error@plt>
   165d8:	ldr	r2, [r4, #8]
   165dc:	ldr	r3, [r2]
   165e0:	orr	r3, r3, #1
   165e4:	str	r3, [r2]
   165e8:	add	sp, sp, #16
   165ec:	pop	{r4, r5, r6, pc}
   165f0:	mov	r3, r1
   165f4:	ldr	r2, [pc, #112]	; 1666c <ftello64@plt+0x4f9c>
   165f8:	mov	r1, #0
   165fc:	mov	r0, #1
   16600:	bl	114a8 <error@plt>
   16604:	b	1656c <ftello64@plt+0x4e9c>
   16608:	mov	r0, #8
   1660c:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   16610:	str	r0, [r4, #8]
   16614:	cmp	r0, #0
   16618:	beq	16638 <ftello64@plt+0x4f68>
   1661c:	ldr	r3, [r4, #8]
   16620:	mov	r2, #0
   16624:	str	r2, [r3]
   16628:	ldr	r3, [r4, #4]
   1662c:	orr	r3, r3, #1
   16630:	str	r3, [r4, #4]
   16634:	b	16578 <ftello64@plt+0x4ea8>
   16638:	bl	11568 <__errno_location@plt>
   1663c:	ldr	r2, [pc, #44]	; 16670 <ftello64@plt+0x4fa0>
   16640:	ldr	r1, [r0]
   16644:	mov	r0, #1
   16648:	bl	114a8 <error@plt>
   1664c:	b	1661c <ftello64@plt+0x4f4c>
   16650:	ldr	r3, [r4]
   16654:	ldr	r2, [pc, #24]	; 16674 <ftello64@plt+0x4fa4>
   16658:	mov	r1, #0
   1665c:	mov	r0, #1
   16660:	bl	114a8 <error@plt>
   16664:	b	16588 <ftello64@plt+0x4eb8>
   16668:	andeq	pc, r1, r8, asr #27
   1666c:	andeq	pc, r1, r0, asr #26
   16670:	andeq	pc, r1, r8, ror #26
   16674:	muleq	r1, ip, sp
   16678:	cmp	r0, #84	; 0x54
   1667c:	beq	16688 <ftello64@plt+0x4fb8>
   16680:	mov	r0, #7
   16684:	bx	lr
   16688:	push	{r4, lr}
   1668c:	ldr	r3, [r2, #28]
   16690:	ldr	r0, [r3]
   16694:	bl	16558 <ftello64@plt+0x4e88>
   16698:	mov	r0, #0
   1669c:	pop	{r4, pc}
   166a0:	cmp	r1, #84	; 0x54
   166a4:	beq	166b0 <ftello64@plt+0x4fe0>
   166a8:	mov	r0, #0
   166ac:	bx	lr
   166b0:	push	{r4, lr}
   166b4:	mov	r1, r2
   166b8:	ldr	r0, [r0]
   166bc:	bl	16558 <ftello64@plt+0x4e88>
   166c0:	mov	r0, #1
   166c4:	pop	{r4, pc}
   166c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166cc:	sub	sp, sp, #12
   166d0:	mov	r7, r0
   166d4:	mov	r6, r1
   166d8:	mov	r4, r2
   166dc:	ldr	r0, [r4], #4
   166e0:	bl	12a24 <ftello64@plt+0x1354>
   166e4:	str	r0, [r7]
   166e8:	mov	r3, #0
   166ec:	mov	r5, r3
   166f0:	ldr	r9, [pc, #908]	; 16a84 <ftello64@plt+0x53b4>
   166f4:	ldr	sl, [pc, #908]	; 16a88 <ftello64@plt+0x53b8>
   166f8:	b	16710 <ftello64@plt+0x5040>
   166fc:	ldr	r1, [r4]
   16700:	ldr	r0, [r7]
   16704:	bl	12c68 <ftello64@plt+0x1598>
   16708:	mov	r3, #1
   1670c:	add	r4, r4, #4
   16710:	add	r5, r5, #1
   16714:	cmp	r5, r6
   16718:	bge	16994 <ftello64@plt+0x52c4>
   1671c:	cmp	r3, #8
   16720:	ldrls	pc, [pc, r3, lsl #2]
   16724:	b	167f4 <ftello64@plt+0x5124>
   16728:	andeq	r6, r1, ip, lsr #15
   1672c:	strdeq	r6, [r1], -r4
   16730:	strdeq	r6, [r1], -ip
   16734:	andeq	r6, r1, ip, asr #14
   16738:	andeq	r6, r1, ip, asr r7
   1673c:	andeq	r6, r1, ip, ror #14
   16740:	andeq	r6, r1, ip, ror r7
   16744:	andeq	r6, r1, ip, lsl #15
   16748:	muleq	r1, ip, r7
   1674c:	ldr	r1, [r4]
   16750:	ldr	r0, [r7]
   16754:	bl	13118 <ftello64@plt+0x1a48>
   16758:	b	16708 <ftello64@plt+0x5038>
   1675c:	ldr	r1, [r4]
   16760:	ldr	r0, [r7]
   16764:	bl	12b68 <ftello64@plt+0x1498>
   16768:	b	16708 <ftello64@plt+0x5038>
   1676c:	ldr	r1, [r4]
   16770:	ldr	r0, [r7]
   16774:	bl	12ce8 <ftello64@plt+0x1618>
   16778:	b	16708 <ftello64@plt+0x5038>
   1677c:	ldr	r1, [r4]
   16780:	ldr	r0, [r7]
   16784:	bl	12d68 <ftello64@plt+0x1698>
   16788:	b	16708 <ftello64@plt+0x5038>
   1678c:	ldr	r1, [r4]
   16790:	ldr	r0, [r7]
   16794:	bl	12e34 <ftello64@plt+0x1764>
   16798:	b	16708 <ftello64@plt+0x5038>
   1679c:	ldr	r1, [r4]
   167a0:	ldr	r0, [r7]
   167a4:	bl	16558 <ftello64@plt+0x4e88>
   167a8:	b	16708 <ftello64@plt+0x5038>
   167ac:	ldr	r8, [r4]
   167b0:	ldr	r1, [pc, #724]	; 16a8c <ftello64@plt+0x53bc>
   167b4:	mov	r0, r8
   167b8:	bl	113a0 <strcmp@plt>
   167bc:	cmp	r0, #0
   167c0:	beq	1698c <ftello64@plt+0x52bc>
   167c4:	ldr	r1, [pc, #708]	; 16a90 <ftello64@plt+0x53c0>
   167c8:	mov	r0, r8
   167cc:	bl	113a0 <strcmp@plt>
   167d0:	cmp	r0, #0
   167d4:	bne	16800 <ftello64@plt+0x5130>
   167d8:	mov	fp, r0
   167dc:	mov	r3, r8
   167e0:	ldr	r2, [pc, #684]	; 16a94 <ftello64@plt+0x53c4>
   167e4:	mov	r1, #0
   167e8:	mov	r0, r1
   167ec:	bl	114a8 <error@plt>
   167f0:	b	16a78 <ftello64@plt+0x53a8>
   167f4:	cmp	r3, #1
   167f8:	movne	r3, #1
   167fc:	bne	1670c <ftello64@plt+0x503c>
   16800:	ldr	r8, [r4]
   16804:	mov	r1, r9
   16808:	mov	r0, r8
   1680c:	bl	113a0 <strcmp@plt>
   16810:	cmp	r0, #0
   16814:	moveq	r3, #2
   16818:	beq	1670c <ftello64@plt+0x503c>
   1681c:	mov	r1, sl
   16820:	mov	r0, r8
   16824:	bl	113a0 <strcmp@plt>
   16828:	cmp	r0, #0
   1682c:	moveq	r3, #3
   16830:	beq	1670c <ftello64@plt+0x503c>
   16834:	ldr	r1, [pc, #604]	; 16a98 <ftello64@plt+0x53c8>
   16838:	mov	r0, r8
   1683c:	bl	113a0 <strcmp@plt>
   16840:	cmp	r0, #0
   16844:	moveq	r3, #3
   16848:	beq	1670c <ftello64@plt+0x503c>
   1684c:	ldr	r1, [pc, #584]	; 16a9c <ftello64@plt+0x53cc>
   16850:	mov	r0, r8
   16854:	bl	113a0 <strcmp@plt>
   16858:	cmp	r0, #0
   1685c:	moveq	r3, #4
   16860:	beq	1670c <ftello64@plt+0x503c>
   16864:	ldr	r1, [pc, #564]	; 16aa0 <ftello64@plt+0x53d0>
   16868:	mov	r0, r8
   1686c:	bl	113a0 <strcmp@plt>
   16870:	cmp	r0, #0
   16874:	moveq	r3, #5
   16878:	beq	1670c <ftello64@plt+0x503c>
   1687c:	ldr	r1, [pc, #544]	; 16aa4 <ftello64@plt+0x53d4>
   16880:	mov	r0, r8
   16884:	bl	113a0 <strcmp@plt>
   16888:	cmp	r0, #0
   1688c:	moveq	r3, #5
   16890:	beq	1670c <ftello64@plt+0x503c>
   16894:	ldr	r1, [pc, #524]	; 16aa8 <ftello64@plt+0x53d8>
   16898:	mov	r0, r8
   1689c:	bl	113a0 <strcmp@plt>
   168a0:	cmp	r0, #0
   168a4:	moveq	r3, #5
   168a8:	beq	1670c <ftello64@plt+0x503c>
   168ac:	ldr	r1, [pc, #504]	; 16aac <ftello64@plt+0x53dc>
   168b0:	mov	r0, r8
   168b4:	bl	113a0 <strcmp@plt>
   168b8:	cmp	r0, #0
   168bc:	moveq	r3, #7
   168c0:	beq	1670c <ftello64@plt+0x503c>
   168c4:	ldr	r1, [pc, #484]	; 16ab0 <ftello64@plt+0x53e0>
   168c8:	mov	r0, r8
   168cc:	bl	113a0 <strcmp@plt>
   168d0:	cmp	r0, #0
   168d4:	moveq	r3, #6
   168d8:	beq	1670c <ftello64@plt+0x503c>
   168dc:	ldr	r1, [pc, #464]	; 16ab4 <ftello64@plt+0x53e4>
   168e0:	mov	r0, r8
   168e4:	bl	113a0 <strcmp@plt>
   168e8:	cmp	r0, #0
   168ec:	moveq	r3, #8
   168f0:	beq	1670c <ftello64@plt+0x503c>
   168f4:	ldr	r1, [pc, #444]	; 16ab8 <ftello64@plt+0x53e8>
   168f8:	mov	r0, r8
   168fc:	bl	113a0 <strcmp@plt>
   16900:	cmp	r0, #0
   16904:	bne	16920 <ftello64@plt+0x5250>
   16908:	mov	r2, #0
   1690c:	mov	r1, #65	; 0x41
   16910:	ldr	r0, [r7]
   16914:	bl	12f88 <ftello64@plt+0x18b8>
   16918:	mov	r3, #1
   1691c:	b	1670c <ftello64@plt+0x503c>
   16920:	ldr	r1, [pc, #404]	; 16abc <ftello64@plt+0x53ec>
   16924:	mov	r0, r8
   16928:	bl	113a0 <strcmp@plt>
   1692c:	cmp	r0, #0
   16930:	bne	1694c <ftello64@plt+0x527c>
   16934:	mov	r2, #1
   16938:	mov	r1, r2
   1693c:	ldr	r0, [r7]
   16940:	bl	12f88 <ftello64@plt+0x18b8>
   16944:	mov	r3, #1
   16948:	b	1670c <ftello64@plt+0x503c>
   1694c:	add	r1, sp, #4
   16950:	mov	r0, r8
   16954:	bl	11d60 <ftello64@plt+0x690>
   16958:	mov	r1, r0
   1695c:	bics	r3, r0, #72	; 0x48
   16960:	beq	16978 <ftello64@plt+0x52a8>
   16964:	ldr	r2, [sp, #4]
   16968:	ldr	r0, [r7]
   1696c:	bl	12f88 <ftello64@plt+0x18b8>
   16970:	mov	r3, #1
   16974:	b	1670c <ftello64@plt+0x503c>
   16978:	ldr	r1, [r4]
   1697c:	ldr	r0, [r7]
   16980:	bl	12ae8 <ftello64@plt+0x1418>
   16984:	mov	r3, #1
   16988:	b	1670c <ftello64@plt+0x503c>
   1698c:	mov	r3, #1
   16990:	b	1670c <ftello64@plt+0x503c>
   16994:	cmp	r3, #8
   16998:	ldrls	pc, [pc, r3, lsl #2]
   1699c:	b	169c4 <ftello64@plt+0x52f4>
   169a0:	andeq	r6, r1, r4, ror sl
   169a4:	andeq	r6, r1, r4, ror sl
   169a8:	andeq	r6, r1, ip, asr #19
   169ac:	andeq	r6, r1, r4, ror #19
   169b0:	strdeq	r6, [r1], -ip
   169b4:	andeq	r6, r1, r4, lsl sl
   169b8:	andeq	r6, r1, r4, asr #20
   169bc:	andeq	r6, r1, ip, lsr #20
   169c0:	andeq	r6, r1, ip, asr sl
   169c4:	mov	fp, #0
   169c8:	b	16a78 <ftello64@plt+0x53a8>
   169cc:	ldr	r2, [pc, #236]	; 16ac0 <ftello64@plt+0x53f0>
   169d0:	mov	r1, #0
   169d4:	mov	r0, r1
   169d8:	bl	114a8 <error@plt>
   169dc:	mov	fp, #0
   169e0:	b	16a78 <ftello64@plt+0x53a8>
   169e4:	ldr	r2, [pc, #216]	; 16ac4 <ftello64@plt+0x53f4>
   169e8:	mov	r1, #0
   169ec:	mov	r0, r1
   169f0:	bl	114a8 <error@plt>
   169f4:	mov	fp, #0
   169f8:	b	16a78 <ftello64@plt+0x53a8>
   169fc:	ldr	r2, [pc, #196]	; 16ac8 <ftello64@plt+0x53f8>
   16a00:	mov	r1, #0
   16a04:	mov	r0, r1
   16a08:	bl	114a8 <error@plt>
   16a0c:	mov	fp, #0
   16a10:	b	16a78 <ftello64@plt+0x53a8>
   16a14:	ldr	r2, [pc, #176]	; 16acc <ftello64@plt+0x53fc>
   16a18:	mov	r1, #0
   16a1c:	mov	r0, r1
   16a20:	bl	114a8 <error@plt>
   16a24:	mov	fp, #0
   16a28:	b	16a78 <ftello64@plt+0x53a8>
   16a2c:	ldr	r2, [pc, #156]	; 16ad0 <ftello64@plt+0x5400>
   16a30:	mov	r1, #0
   16a34:	mov	r0, r1
   16a38:	bl	114a8 <error@plt>
   16a3c:	mov	fp, #0
   16a40:	b	16a78 <ftello64@plt+0x53a8>
   16a44:	ldr	r2, [pc, #136]	; 16ad4 <ftello64@plt+0x5404>
   16a48:	mov	r1, #0
   16a4c:	mov	r0, r1
   16a50:	bl	114a8 <error@plt>
   16a54:	mov	fp, #0
   16a58:	b	16a78 <ftello64@plt+0x53a8>
   16a5c:	ldr	r2, [pc, #116]	; 16ad8 <ftello64@plt+0x5408>
   16a60:	mov	r1, #0
   16a64:	mov	r0, r1
   16a68:	bl	114a8 <error@plt>
   16a6c:	mov	fp, #0
   16a70:	b	16a78 <ftello64@plt+0x53a8>
   16a74:	mov	fp, #1
   16a78:	mov	r0, fp
   16a7c:	add	sp, sp, #12
   16a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a84:	andeq	lr, r1, r8, asr r2
   16a88:	andeq	lr, r1, ip, lsl r2
   16a8c:	andeq	lr, r1, r4
   16a90:	andeq	pc, r1, r0, lsl #28
   16a94:	andeq	pc, r1, r8, lsl #28
   16a98:	andeq	pc, r1, r0, lsr lr	; <UNPREDICTABLE>
   16a9c:	andeq	sp, r1, r8, lsr #30
   16aa0:	andeq	pc, r1, ip, lsr lr	; <UNPREDICTABLE>
   16aa4:	andeq	pc, r1, r0, lsr #13
   16aa8:	andeq	pc, r1, r4, asr #28
   16aac:	andeq	lr, r1, r4, lsl #5
   16ab0:	andeq	lr, r1, r4, ror #4
   16ab4:	andeq	pc, r1, ip, asr #28
   16ab8:	andeq	lr, r1, ip, ror #5
   16abc:	andeq	lr, r1, r8, lsl #6
   16ac0:	andeq	pc, r1, r8, asr lr	; <UNPREDICTABLE>
   16ac4:	andeq	pc, r1, r0, lsl #29
   16ac8:			; <UNDEFINED> instruction: 0x0001feb8
   16acc:	andeq	pc, r1, r0, ror #29
   16ad0:	andeq	pc, r1, r8, lsl #30
   16ad4:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   16ad8:	andeq	pc, r1, r4, asr pc	; <UNPREDICTABLE>
   16adc:	ldr	r3, [r2]
   16ae0:	tst	r3, #1
   16ae4:	bne	16af0 <ftello64@plt+0x5420>
   16ae8:	mov	r0, #0
   16aec:	bx	lr
   16af0:	push	{r4, lr}
   16af4:	mov	r4, r1
   16af8:	ldr	r3, [r2, #4]
   16afc:	str	r3, [r1, #16]
   16b00:	mov	r2, r1
   16b04:	ldr	r1, [pc, #76]	; 16b58 <ftello64@plt+0x5488>
   16b08:	bl	17e54 <argp_parse@@Base+0xd04>
   16b0c:	cmp	r0, #0
   16b10:	blt	16b2c <ftello64@plt+0x545c>
   16b14:	ldr	r3, [pc, #64]	; 16b5c <ftello64@plt+0x548c>
   16b18:	ldr	r3, [r3]
   16b1c:	cmp	r3, #0
   16b20:	bne	16b44 <ftello64@plt+0x5474>
   16b24:	mov	r0, #0
   16b28:	pop	{r4, pc}
   16b2c:	bl	11568 <__errno_location@plt>
   16b30:	ldr	r2, [pc, #40]	; 16b60 <ftello64@plt+0x5490>
   16b34:	ldr	r1, [r0]
   16b38:	mov	r0, #0
   16b3c:	bl	114a8 <error@plt>
   16b40:	b	16b14 <ftello64@plt+0x5444>
   16b44:	ldr	r2, [r4, #16]
   16b48:	mov	r1, r4
   16b4c:	ldr	r0, [pc, #16]	; 16b64 <ftello64@plt+0x5494>
   16b50:	bl	113b8 <printf@plt>
   16b54:	b	16b24 <ftello64@plt+0x5454>
   16b58:	andeq	r8, r0, r3, asr #18
   16b5c:	andeq	r2, r3, r0, lsl #24
   16b60:	andeq	pc, r1, r0, lsl #31
   16b64:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   16b68:	ldr	ip, [r0]
   16b6c:	cmp	ip, #0
   16b70:	beq	16bc4 <ftello64@plt+0x54f4>
   16b74:	push	{r4, r5, r6, lr}
   16b78:	mov	ip, r2
   16b7c:	mov	r5, r1
   16b80:	mov	r4, r0
   16b84:	ldr	r2, [r0, #32]
   16b88:	str	r2, [r1, #36]	; 0x24
   16b8c:	ldr	r2, [r0, #24]
   16b90:	str	r2, [r1, #28]
   16b94:	ldr	r2, [r0, #28]
   16b98:	str	r2, [r1, #32]
   16b9c:	ldr	r2, [r0, #12]
   16ba0:	str	r2, [r1, #20]
   16ba4:	ldr	r6, [r0]
   16ba8:	mov	r2, r1
   16bac:	mov	r1, r3
   16bb0:	mov	r0, ip
   16bb4:	blx	r6
   16bb8:	ldr	r3, [r5, #36]	; 0x24
   16bbc:	str	r3, [r4, #32]
   16bc0:	pop	{r4, r5, r6, pc}
   16bc4:	mov	r0, #7
   16bc8:	bx	lr
   16bcc:	push	{r4, r5, r6, lr}
   16bd0:	ldr	r5, [r0, #16]
   16bd4:	ldr	r3, [r0]
   16bd8:	cmp	r3, #0
   16bdc:	beq	16bf4 <ftello64@plt+0x5524>
   16be0:	ldr	r2, [r1, #8]
   16be4:	add	r2, r2, #1
   16be8:	str	r2, [r1, #8]
   16bec:	mov	r2, #0
   16bf0:	b	16c48 <ftello64@plt+0x5578>
   16bf4:	ldr	r3, [r0, #4]
   16bf8:	cmp	r3, #0
   16bfc:	ldrne	r3, [r1, #8]
   16c00:	addne	r3, r3, #1
   16c04:	strne	r3, [r1, #8]
   16c08:	cmp	r5, #0
   16c0c:	popeq	{r4, r5, r6, pc}
   16c10:	ldr	r0, [r5]
   16c14:	cmp	r0, #0
   16c18:	popeq	{r4, r5, r6, pc}
   16c1c:	mov	r4, r1
   16c20:	mov	r1, r4
   16c24:	bl	16bcc <ftello64@plt+0x54fc>
   16c28:	ldr	r3, [r4, #12]
   16c2c:	add	r3, r3, #1
   16c30:	str	r3, [r4, #12]
   16c34:	ldr	r0, [r5, #16]!
   16c38:	cmp	r0, #0
   16c3c:	bne	16c20 <ftello64@plt+0x5550>
   16c40:	pop	{r4, r5, r6, pc}
   16c44:	add	r2, r2, #1
   16c48:	add	r3, r3, #24
   16c4c:	ldr	r0, [r3, #-20]	; 0xffffffec
   16c50:	cmp	r0, #0
   16c54:	bne	16c44 <ftello64@plt+0x5574>
   16c58:	ldr	r0, [r3, #-24]	; 0xffffffe8
   16c5c:	cmp	r0, #0
   16c60:	bne	16c44 <ftello64@plt+0x5574>
   16c64:	ldr	r0, [r3, #-8]
   16c68:	cmp	r0, #0
   16c6c:	bne	16c44 <ftello64@plt+0x5574>
   16c70:	ldr	r0, [r3, #-4]
   16c74:	cmp	r0, #0
   16c78:	bne	16c44 <ftello64@plt+0x5574>
   16c7c:	add	r0, r2, r2, lsl #1
   16c80:	ldr	r3, [r1]
   16c84:	add	r3, r3, r0
   16c88:	str	r3, [r1]
   16c8c:	ldr	r3, [r1, #4]
   16c90:	add	r2, r3, r2
   16c94:	str	r2, [r1, #4]
   16c98:	b	16c08 <ftello64@plt+0x5538>
   16c9c:	cmp	r0, #86	; 0x56
   16ca0:	beq	16cac <ftello64@plt+0x55dc>
   16ca4:	mov	r0, #7
   16ca8:	bx	lr
   16cac:	push	{r4, lr}
   16cb0:	mov	r4, r2
   16cb4:	ldr	r3, [pc, #100]	; 16d20 <ftello64@plt+0x5650>
   16cb8:	ldr	r3, [r3]
   16cbc:	cmp	r3, #0
   16cc0:	beq	16ce4 <ftello64@plt+0x5614>
   16cc4:	mov	r1, r2
   16cc8:	ldr	r0, [r2, #48]	; 0x30
   16ccc:	blx	r3
   16cd0:	ldr	r3, [r4, #16]
   16cd4:	tst	r3, #32
   16cd8:	beq	16d18 <ftello64@plt+0x5648>
   16cdc:	mov	r0, #0
   16ce0:	pop	{r4, pc}
   16ce4:	ldr	r3, [pc, #56]	; 16d24 <ftello64@plt+0x5654>
   16ce8:	ldr	r2, [r3]
   16cec:	cmp	r2, #0
   16cf0:	beq	16d04 <ftello64@plt+0x5634>
   16cf4:	ldr	r1, [pc, #44]	; 16d28 <ftello64@plt+0x5658>
   16cf8:	ldr	r0, [r4, #48]	; 0x30
   16cfc:	bl	1155c <fprintf@plt>
   16d00:	b	16cd0 <ftello64@plt+0x5600>
   16d04:	ldr	r2, [pc, #32]	; 16d2c <ftello64@plt+0x565c>
   16d08:	ldr	r1, [pc, #32]	; 16d30 <ftello64@plt+0x5660>
   16d0c:	mov	r0, r4
   16d10:	bl	1c120 <argp_error@@Base>
   16d14:	b	16cd0 <ftello64@plt+0x5600>
   16d18:	mov	r0, #0
   16d1c:	bl	1152c <exit@plt>
   16d20:			; <UNDEFINED> instruction: 0x00032bb8
   16d24:	andeq	r2, r3, r4, lsr #24
   16d28:	andeq	r0, r2, r0, lsl r7
   16d2c:	andeq	r0, r2, ip, ror #10
   16d30:	muleq	r1, ip, r0
   16d34:	push	{r4, r5, r6, lr}
   16d38:	mov	r4, r2
   16d3c:	cmn	r0, #3
   16d40:	beq	16ddc <ftello64@plt+0x570c>
   16d44:	mov	r5, r1
   16d48:	ble	16d74 <ftello64@plt+0x56a4>
   16d4c:	cmn	r0, #2
   16d50:	beq	16df4 <ftello64@plt+0x5724>
   16d54:	cmp	r0, #63	; 0x3f
   16d58:	bne	16e38 <ftello64@plt+0x5768>
   16d5c:	ldr	r2, [pc, #228]	; 16e48 <ftello64@plt+0x5778>
   16d60:	ldr	r1, [r4, #48]	; 0x30
   16d64:	mov	r0, r4
   16d68:	bl	1c064 <argp_state_help@@Base>
   16d6c:	mov	r0, #0
   16d70:	pop	{r4, r5, r6, pc}
   16d74:	cmn	r0, #4
   16d78:	bne	16e38 <ftello64@plt+0x5768>
   16d7c:	mov	r2, #10
   16d80:	mov	r1, #0
   16d84:	ldr	r0, [pc, #192]	; 16e4c <ftello64@plt+0x577c>
   16d88:	cmp	r5, r1
   16d8c:	movne	r0, r5
   16d90:	bl	113ac <strtol@plt>
   16d94:	ldr	r3, [pc, #180]	; 16e50 <ftello64@plt+0x5780>
   16d98:	str	r0, [r3]
   16d9c:	ldr	r2, [r3]
   16da0:	sub	r1, r2, #1
   16da4:	str	r1, [r3]
   16da8:	cmp	r2, #0
   16dac:	ble	16e40 <ftello64@plt+0x5770>
   16db0:	mov	r5, #1
   16db4:	mov	r4, r3
   16db8:	mov	r0, r5
   16dbc:	bl	11430 <sleep@plt>
   16dc0:	ldr	r3, [r4]
   16dc4:	sub	r2, r3, #1
   16dc8:	str	r2, [r4]
   16dcc:	cmp	r3, #0
   16dd0:	bgt	16db8 <ftello64@plt+0x56e8>
   16dd4:	mov	r0, #0
   16dd8:	pop	{r4, r5, r6, pc}
   16ddc:	ldr	r2, [pc, #112]	; 16e54 <ftello64@plt+0x5784>
   16de0:	ldr	r1, [r4, #48]	; 0x30
   16de4:	mov	r0, r4
   16de8:	bl	1c064 <argp_state_help@@Base>
   16dec:	mov	r0, #0
   16df0:	pop	{r4, r5, r6, pc}
   16df4:	ldr	r3, [pc, #92]	; 16e58 <ftello64@plt+0x5788>
   16df8:	str	r1, [r3]
   16dfc:	mov	r0, r1
   16e00:	bl	17c84 <argp_parse@@Base+0xb34>
   16e04:	str	r0, [r4, #40]	; 0x28
   16e08:	ldr	r3, [pc, #76]	; 16e5c <ftello64@plt+0x578c>
   16e0c:	str	r0, [r3]
   16e10:	ldr	r3, [r4, #16]
   16e14:	and	r3, r3, #3
   16e18:	cmp	r3, #1
   16e1c:	beq	16e28 <ftello64@plt+0x5758>
   16e20:	mov	r0, #0
   16e24:	pop	{r4, r5, r6, pc}
   16e28:	ldr	r3, [r4, #8]
   16e2c:	str	r5, [r3]
   16e30:	mov	r0, #0
   16e34:	pop	{r4, r5, r6, pc}
   16e38:	mov	r0, #7
   16e3c:	pop	{r4, r5, r6, pc}
   16e40:	mov	r0, #0
   16e44:	pop	{r4, r5, r6, pc}
   16e48:	andeq	r0, r0, sl, ror r2
   16e4c:	muleq	r2, r0, r5
   16e50:			; <UNDEFINED> instruction: 0x00032bb4
   16e54:	andeq	r0, r0, r1, lsl #4
   16e58:	andeq	r2, r3, r4, asr #22
   16e5c:	andeq	r2, r3, r0, asr #22
   16e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e64:	sub	sp, sp, #36	; 0x24
   16e68:	str	r0, [sp, #12]
   16e6c:	str	r1, [sp, #16]
   16e70:	str	r2, [sp, #20]
   16e74:	mov	r8, r3
   16e78:	ldr	sl, [sp, #72]	; 0x48
   16e7c:	ldr	r9, [r0]
   16e80:	ldr	r5, [r0, #16]
   16e84:	cmp	r9, #0
   16e88:	addne	r6, r9, #24
   16e8c:	strne	r5, [sp, #28]
   16e90:	strne	r8, [sp, #24]
   16e94:	bne	16fa0 <ftello64@plt+0x58d0>
   16e98:	ldr	r3, [sp, #12]
   16e9c:	ldr	r3, [r3, #4]
   16ea0:	cmp	r3, #0
   16ea4:	moveq	r0, r8
   16ea8:	moveq	r8, #0
   16eac:	beq	16f2c <ftello64@plt+0x585c>
   16eb0:	ldr	r2, [sp, #12]
   16eb4:	ldr	r3, [r2, #4]
   16eb8:	str	r3, [r8]
   16ebc:	str	r2, [r8, #4]
   16ec0:	ldr	r3, [sl, #4]
   16ec4:	str	r3, [r8, #8]
   16ec8:	mov	r3, #0
   16ecc:	str	r3, [r8, #12]
   16ed0:	ldr	r2, [sp, #16]
   16ed4:	str	r2, [r8, #16]
   16ed8:	ldr	r2, [sp, #20]
   16edc:	str	r2, [r8, #20]
   16ee0:	str	r3, [r8, #24]
   16ee4:	str	r3, [r8, #32]
   16ee8:	str	r3, [r8, #28]
   16eec:	cmp	r5, r3
   16ef0:	beq	16f28 <ftello64@plt+0x5858>
   16ef4:	ldr	r3, [r5]
   16ef8:	cmp	r3, #0
   16efc:	beq	17148 <ftello64@plt+0x5a78>
   16f00:	mov	r3, #0
   16f04:	add	r3, r3, #1
   16f08:	ldr	r2, [r5, r3, lsl #4]
   16f0c:	cmp	r2, #0
   16f10:	bne	16f04 <ftello64@plt+0x5834>
   16f14:	ldr	r2, [sl, #12]
   16f18:	str	r2, [r8, #28]
   16f1c:	ldr	r2, [sl, #12]
   16f20:	add	r3, r2, r3, lsl #2
   16f24:	str	r3, [sl, #12]
   16f28:	add	r0, r8, #36	; 0x24
   16f2c:	cmp	r5, #0
   16f30:	beq	16f6c <ftello64@plt+0x589c>
   16f34:	ldr	ip, [r5]
   16f38:	cmp	ip, #0
   16f3c:	beq	16f6c <ftello64@plt+0x589c>
   16f40:	mov	r2, #0
   16f44:	add	r4, r2, #1
   16f48:	str	sl, [sp]
   16f4c:	mov	r3, r0
   16f50:	mov	r1, r8
   16f54:	mov	r0, ip
   16f58:	bl	16e60 <ftello64@plt+0x5790>
   16f5c:	ldr	ip, [r5, r4, lsl #4]
   16f60:	mov	r2, r4
   16f64:	cmp	ip, #0
   16f68:	bne	16f44 <ftello64@plt+0x5874>
   16f6c:	add	sp, sp, #36	; 0x24
   16f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f74:	ldr	r0, [r4, #16]!
   16f78:	cmp	r0, #0
   16f7c:	beq	17088 <ftello64@plt+0x59b8>
   16f80:	mov	r1, r7
   16f84:	bl	113a0 <strcmp@plt>
   16f88:	cmp	r0, #0
   16f8c:	bne	16f74 <ftello64@plt+0x58a4>
   16f90:	sub	r4, r4, fp
   16f94:	cmn	r4, #15
   16f98:	blt	17088 <ftello64@plt+0x59b8>
   16f9c:	add	r6, r6, #24
   16fa0:	sub	r2, r6, #24
   16fa4:	mov	r8, r6
   16fa8:	ldr	r4, [r6, #-20]	; 0xffffffec
   16fac:	cmp	r4, #0
   16fb0:	bne	16fc0 <ftello64@plt+0x58f0>
   16fb4:	ldr	r3, [r6, #-24]	; 0xffffffe8
   16fb8:	cmp	r3, #0
   16fbc:	beq	17124 <ftello64@plt+0x5a54>
   16fc0:	ldr	r3, [r8, #-12]
   16fc4:	and	r1, r3, #4
   16fc8:	cmp	r1, #0
   16fcc:	moveq	r9, r2
   16fd0:	ldr	r5, [r9, #12]
   16fd4:	ands	r5, r5, #8
   16fd8:	bne	16f9c <ftello64@plt+0x58cc>
   16fdc:	tst	r3, #8
   16fe0:	bne	17064 <ftello64@plt+0x5994>
   16fe4:	sub	r3, r4, #1
   16fe8:	cmp	r3, #254	; 0xfe
   16fec:	bhi	17064 <ftello64@plt+0x5994>
   16ff0:	bl	11520 <__ctype_b_loc@plt>
   16ff4:	ldr	r3, [r0]
   16ff8:	lsl	r4, r4, #1
   16ffc:	ldrh	r3, [r3, r4]
   17000:	tst	r3, #16384	; 0x4000
   17004:	beq	17064 <ftello64@plt+0x5994>
   17008:	ldr	r3, [sl, #4]
   1700c:	add	r2, r3, #1
   17010:	str	r2, [sl, #4]
   17014:	ldr	r2, [r8, #-20]	; 0xffffffec
   17018:	strb	r2, [r3]
   1701c:	ldr	r3, [r9, #8]
   17020:	cmp	r3, #0
   17024:	beq	17058 <ftello64@plt+0x5988>
   17028:	ldr	r3, [sl, #4]
   1702c:	add	r2, r3, #1
   17030:	str	r2, [sl, #4]
   17034:	mov	r2, #58	; 0x3a
   17038:	strb	r2, [r3]
   1703c:	ldr	r3, [r9, #12]
   17040:	tst	r3, #1
   17044:	ldrne	r3, [sl, #4]
   17048:	addne	r2, r3, #1
   1704c:	strne	r2, [sl, #4]
   17050:	movne	r2, #58	; 0x3a
   17054:	strbne	r2, [r3]
   17058:	ldr	r3, [sl, #4]
   1705c:	mov	r2, #0
   17060:	strb	r2, [r3]
   17064:	ldr	r7, [r8, #-24]	; 0xffffffe8
   17068:	cmp	r7, #0
   1706c:	beq	16f9c <ftello64@plt+0x58cc>
   17070:	ldr	r3, [sl]
   17074:	ldr	fp, [r3, #8]
   17078:	ldr	r0, [fp]
   1707c:	cmp	r0, #0
   17080:	movne	r4, fp
   17084:	bne	16f80 <ftello64@plt+0x58b0>
   17088:	ldr	r3, [sl, #8]
   1708c:	str	r7, [r3]
   17090:	ldr	r3, [sl, #8]
   17094:	ldr	r2, [r9, #8]
   17098:	cmp	r2, #0
   1709c:	beq	170b4 <ftello64@plt+0x59e4>
   170a0:	ldr	r5, [r9, #12]
   170a4:	and	r5, r5, #1
   170a8:	cmp	r5, #0
   170ac:	movne	r5, #2
   170b0:	moveq	r5, #1
   170b4:	str	r5, [r3, #4]
   170b8:	ldr	r3, [sl, #8]
   170bc:	mov	r2, #0
   170c0:	str	r2, [r3, #8]
   170c4:	ldr	r1, [sl, #8]
   170c8:	ldr	r0, [r8, #-20]	; 0xffffffec
   170cc:	cmp	r0, r2
   170d0:	ldreq	r0, [r9, #4]
   170d4:	bic	r0, r0, #-16777216	; 0xff000000
   170d8:	ldr	r3, [sl]
   170dc:	ldr	r3, [r3, #48]	; 0x30
   170e0:	ldr	r2, [sp, #24]
   170e4:	sub	r3, r2, r3
   170e8:	asr	r3, r3, #2
   170ec:	rsb	r2, r3, r3, lsl #3
   170f0:	add	r2, r2, r2, lsl #6
   170f4:	add	r2, r3, r2, lsl #3
   170f8:	rsb	r2, r2, r2, lsl #15
   170fc:	add	r3, r3, r2, lsl #3
   17100:	add	r3, r3, #1
   17104:	add	r3, r0, r3, lsl #24
   17108:	str	r3, [r1, #12]
   1710c:	ldr	r3, [sl, #8]
   17110:	add	r2, r3, #16
   17114:	str	r2, [sl, #8]
   17118:	mov	r2, #0
   1711c:	str	r2, [r3, #16]
   17120:	b	16f9c <ftello64@plt+0x58cc>
   17124:	ldr	r3, [r6, #-8]
   17128:	cmp	r3, #0
   1712c:	bne	16fc0 <ftello64@plt+0x58f0>
   17130:	ldr	r3, [r6, #-4]
   17134:	cmp	r3, #0
   17138:	bne	16fc0 <ftello64@plt+0x58f0>
   1713c:	ldr	r5, [sp, #28]
   17140:	ldr	r8, [sp, #24]
   17144:	b	16eb0 <ftello64@plt+0x57e0>
   17148:	mov	r3, #0
   1714c:	b	16f14 <ftello64@plt+0x5844>

00017150 <argp_parse@@Base>:
   17150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17154:	add	fp, sp, #32
   17158:	sub	sp, sp, #220	; 0xdc
   1715c:	mov	r8, r0
   17160:	str	r1, [fp, #-236]	; 0xffffff14
   17164:	str	r2, [fp, #-232]	; 0xffffff18
   17168:	mov	r6, r3
   1716c:	tst	r3, #1
   17170:	bne	171a0 <argp_parse@@Base+0x50>
   17174:	ldr	r3, [pc, #2548]	; 17b70 <argp_parse@@Base+0xa20>
   17178:	ldr	r3, [r3]
   1717c:	cmp	r3, #0
   17180:	moveq	r3, r2
   17184:	ldreq	r2, [r3]
   17188:	ldreq	r3, [pc, #2528]	; 17b70 <argp_parse@@Base+0xa20>
   1718c:	streq	r2, [r3]
   17190:	ldr	r3, [pc, #2524]	; 17b74 <argp_parse@@Base+0xa24>
   17194:	ldr	r3, [r3]
   17198:	cmp	r3, #0
   1719c:	beq	17390 <argp_parse@@Base+0x240>
   171a0:	tst	r6, #16
   171a4:	beq	173a8 <argp_parse@@Base+0x258>
   171a8:	mov	r2, #36	; 0x24
   171ac:	mov	r1, #0
   171b0:	sub	r0, fp, #196	; 0xc4
   171b4:	bl	11598 <memset@plt>
   171b8:	ands	r3, r6, #4
   171bc:	str	r3, [fp, #-240]	; 0xffffff10
   171c0:	moveq	r3, #1
   171c4:	movne	r3, #0
   171c8:	str	r3, [fp, #-228]	; 0xffffff1c
   171cc:	mov	r3, #0
   171d0:	str	r3, [fp, #-224]	; 0xffffff20
   171d4:	str	r3, [fp, #-220]	; 0xffffff24
   171d8:	str	r3, [fp, #-216]	; 0xffffff28
   171dc:	cmp	r8, r3
   171e0:	beq	171f0 <argp_parse@@Base+0xa0>
   171e4:	sub	r1, fp, #228	; 0xe4
   171e8:	mov	r0, r8
   171ec:	bl	16bcc <ftello64@plt+0x54fc>
   171f0:	ldr	r4, [fp, #-220]	; 0xffffff24
   171f4:	add	r4, r4, #1
   171f8:	add	r4, r4, r4, lsl #3
   171fc:	lsl	r4, r4, #2
   17200:	ldr	r9, [fp, #-216]	; 0xffffff28
   17204:	lsl	r9, r9, #2
   17208:	add	sl, r9, r4
   1720c:	ldr	r5, [fp, #-224]	; 0xffffff20
   17210:	add	r5, r5, #1
   17214:	add	r5, sl, r5, lsl #4
   17218:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1721c:	add	r0, r0, #1
   17220:	add	r0, r0, r5
   17224:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   17228:	mov	r7, r0
   1722c:	str	r0, [fp, #-40]	; 0xffffffd8
   17230:	cmp	r0, #0
   17234:	moveq	r4, #12
   17238:	beq	179c0 <argp_parse@@Base+0x870>
   1723c:	str	r0, [fp, #-112]	; 0xffffff90
   17240:	add	r4, r0, r4
   17244:	str	r4, [fp, #-104]	; 0xffffff98
   17248:	add	r3, r0, sl
   1724c:	str	r3, [fp, #-244]	; 0xffffff0c
   17250:	str	r3, [fp, #-152]	; 0xffffff68
   17254:	add	sl, r0, r5
   17258:	str	sl, [fp, #-156]	; 0xffffff64
   1725c:	mov	r3, #1
   17260:	str	r3, [fp, #-196]	; 0xffffff3c
   17264:	str	r3, [fp, #-192]	; 0xffffff40
   17268:	sub	ip, fp, #148	; 0x94
   1726c:	sub	lr, fp, #196	; 0xc4
   17270:	ldm	lr!, {r0, r1, r2, r3}
   17274:	stmia	ip!, {r0, r1, r2, r3}
   17278:	ldm	lr!, {r0, r1, r2, r3}
   1727c:	stmia	ip!, {r0, r1, r2, r3}
   17280:	ldr	r3, [lr]
   17284:	str	r3, [ip]
   17288:	mov	r2, r9
   1728c:	mov	r1, #0
   17290:	mov	r0, r4
   17294:	bl	11598 <memset@plt>
   17298:	sub	r3, fp, #160	; 0xa0
   1729c:	str	r3, [fp, #-212]	; 0xffffff2c
   172a0:	str	sl, [fp, #-208]	; 0xffffff30
   172a4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   172a8:	str	r3, [fp, #-204]	; 0xffffff34
   172ac:	str	r4, [fp, #-200]	; 0xffffff38
   172b0:	tst	r6, #8
   172b4:	beq	17440 <argp_parse@@Base+0x2f0>
   172b8:	add	sl, sl, #1
   172bc:	str	sl, [fp, #-208]	; 0xffffff30
   172c0:	mov	r3, #45	; 0x2d
   172c4:	strb	r3, [r7, r5]
   172c8:	mov	r3, #0
   172cc:	ldr	r2, [fp, #-208]	; 0xffffff30
   172d0:	strb	r3, [r2]
   172d4:	ldr	r2, [fp, #-204]	; 0xffffff34
   172d8:	str	r3, [r2]
   172dc:	str	r8, [fp, #-160]	; 0xffffff60
   172e0:	cmp	r8, r3
   172e4:	beq	1745c <argp_parse@@Base+0x30c>
   172e8:	sub	r3, fp, #212	; 0xd4
   172ec:	str	r3, [sp]
   172f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   172f4:	mov	r2, #0
   172f8:	mov	r1, r2
   172fc:	mov	r0, r8
   17300:	bl	16e60 <ftello64@plt+0x5790>
   17304:	str	r0, [fp, #-108]	; 0xffffff94
   17308:	mov	r2, #56	; 0x38
   1730c:	mov	r1, #0
   17310:	sub	r0, fp, #96	; 0x60
   17314:	bl	11598 <memset@plt>
   17318:	ldr	r3, [fp, #-160]	; 0xffffff60
   1731c:	str	r3, [fp, #-96]	; 0xffffffa0
   17320:	ldr	r3, [fp, #-236]	; 0xffffff14
   17324:	str	r3, [fp, #-92]	; 0xffffffa4
   17328:	ldr	r3, [fp, #-232]	; 0xffffff18
   1732c:	str	r3, [fp, #-88]	; 0xffffffa8
   17330:	str	r6, [fp, #-80]	; 0xffffffb0
   17334:	ldr	r3, [pc, #2108]	; 17b78 <argp_parse@@Base+0xa28>
   17338:	ldr	r3, [r3]
   1733c:	str	r3, [fp, #-52]	; 0xffffffcc
   17340:	ldr	r3, [pc, #2100]	; 17b7c <argp_parse@@Base+0xa2c>
   17344:	ldr	r3, [r3]
   17348:	str	r3, [fp, #-48]	; 0xffffffd0
   1734c:	sub	r3, fp, #160	; 0xa0
   17350:	str	r3, [fp, #-44]	; 0xffffffd4
   17354:	mov	r3, #1
   17358:	str	r3, [fp, #-100]	; 0xffffff9c
   1735c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17360:	ldr	r2, [fp, #-108]	; 0xffffff94
   17364:	cmp	r3, r2
   17368:	bcs	174f4 <argp_parse@@Base+0x3a4>
   1736c:	ldr	r2, [fp, #8]
   17370:	str	r2, [r3, #24]
   17374:	ldr	r5, [fp, #-112]	; 0xffffff90
   17378:	ldr	r3, [fp, #-108]	; 0xffffff94
   1737c:	cmp	r5, r3
   17380:	bcs	17500 <argp_parse@@Base+0x3b0>
   17384:	ldr	r7, [pc, #2036]	; 17b80 <argp_parse@@Base+0xa30>
   17388:	mov	r6, #0
   1738c:	b	17498 <argp_parse@@Base+0x348>
   17390:	ldr	r3, [fp, #-232]	; 0xffffff18
   17394:	ldr	r0, [r3]
   17398:	bl	17c84 <argp_parse@@Base+0xb34>
   1739c:	ldr	r3, [pc, #2000]	; 17b74 <argp_parse@@Base+0xa24>
   173a0:	str	r0, [r3]
   173a4:	b	171a0 <argp_parse@@Base+0x50>
   173a8:	sub	sp, sp, #72	; 0x48
   173ac:	add	r5, sp, #8
   173b0:	sub	sp, sp, #40	; 0x28
   173b4:	add	r4, sp, #8
   173b8:	mov	r1, #0
   173bc:	str	r1, [r4]
   173c0:	str	r1, [r4, #4]
   173c4:	str	r1, [r4, #8]
   173c8:	str	r1, [r4, #12]
   173cc:	str	r1, [r4, #20]
   173d0:	str	r1, [r4, #24]
   173d4:	str	r5, [r4, #16]
   173d8:	mov	r2, #64	; 0x40
   173dc:	mov	r0, r5
   173e0:	bl	11598 <memset@plt>
   173e4:	cmp	r8, #0
   173e8:	addne	r3, r5, #16
   173ec:	strne	r8, [r5]
   173f0:	moveq	r3, r5
   173f4:	ldr	r2, [pc, #1928]	; 17b84 <argp_parse@@Base+0xa34>
   173f8:	str	r2, [r3]
   173fc:	ldr	r2, [pc, #1924]	; 17b88 <argp_parse@@Base+0xa38>
   17400:	ldr	r2, [r2]
   17404:	cmp	r2, #0
   17408:	beq	17428 <argp_parse@@Base+0x2d8>
   1740c:	add	r2, r3, #32
   17410:	ldr	r1, [pc, #1908]	; 17b8c <argp_parse@@Base+0xa3c>
   17414:	str	r1, [r3, #16]
   17418:	mov	r3, #0
   1741c:	str	r3, [r2]
   17420:	mov	r8, r4
   17424:	b	171a8 <argp_parse@@Base+0x58>
   17428:	ldr	r2, [pc, #1888]	; 17b90 <argp_parse@@Base+0xa40>
   1742c:	ldr	r2, [r2]
   17430:	cmp	r2, #0
   17434:	addeq	r2, r3, #16
   17438:	bne	1740c <argp_parse@@Base+0x2bc>
   1743c:	b	17418 <argp_parse@@Base+0x2c8>
   17440:	ldr	r3, [fp, #-240]	; 0xffffff10
   17444:	cmp	r3, #0
   17448:	addne	sl, sl, #1
   1744c:	strne	sl, [fp, #-208]	; 0xffffff30
   17450:	movne	r3, #43	; 0x2b
   17454:	strbne	r3, [r7, r5]
   17458:	b	172c8 <argp_parse@@Base+0x178>
   1745c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17460:	str	r3, [fp, #-108]	; 0xffffff94
   17464:	b	17308 <argp_parse@@Base+0x1b8>
   17468:	mov	r3, r6
   1746c:	mov	r2, r7
   17470:	sub	r1, fp, #96	; 0x60
   17474:	mov	r0, r5
   17478:	bl	16b68 <ftello64@plt+0x5498>
   1747c:	add	r5, r5, #36	; 0x24
   17480:	ldr	r3, [fp, #-108]	; 0xffffff94
   17484:	cmp	r5, r3
   17488:	bcs	174e4 <argp_parse@@Base+0x394>
   1748c:	cmp	r0, #7
   17490:	cmpne	r0, #0
   17494:	bne	174e4 <argp_parse@@Base+0x394>
   17498:	ldr	r3, [r5, #16]
   1749c:	cmp	r3, #0
   174a0:	ldrne	r2, [r5, #20]
   174a4:	ldrne	r3, [r3, #28]
   174a8:	ldrne	r3, [r3, r2, lsl #2]
   174ac:	strne	r3, [r5, #24]
   174b0:	ldr	r3, [r5]
   174b4:	cmp	r3, #0
   174b8:	bne	17468 <argp_parse@@Base+0x318>
   174bc:	ldr	r3, [r5, #4]
   174c0:	ldr	r3, [r3, #16]
   174c4:	cmp	r3, #0
   174c8:	beq	17468 <argp_parse@@Base+0x318>
   174cc:	ldr	r3, [r3]
   174d0:	cmp	r3, #0
   174d4:	ldrne	r3, [r5, #28]
   174d8:	ldrne	r2, [r5, #24]
   174dc:	strne	r2, [r3]
   174e0:	b	17468 <argp_parse@@Base+0x318>
   174e4:	mov	r4, r0
   174e8:	cmp	r0, #7
   174ec:	beq	17500 <argp_parse@@Base+0x3b0>
   174f0:	b	174f8 <argp_parse@@Base+0x3a8>
   174f4:	mov	r4, #0
   174f8:	cmp	r4, #0
   174fc:	bne	179c0 <argp_parse@@Base+0x870>
   17500:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17504:	tst	r3, #2
   17508:	moveq	r3, #1
   1750c:	streq	r3, [fp, #-144]	; 0xffffff70
   17510:	beq	1753c <argp_parse@@Base+0x3ec>
   17514:	mov	r2, #0
   17518:	str	r2, [fp, #-144]	; 0xffffff70
   1751c:	tst	r3, #1
   17520:	beq	1753c <argp_parse@@Base+0x3ec>
   17524:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17528:	sub	r3, r3, #4
   1752c:	str	r3, [fp, #-88]	; 0xffffffa8
   17530:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17534:	add	r3, r3, #1
   17538:	str	r3, [fp, #-92]	; 0xffffffa4
   1753c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17540:	ldr	r2, [fp, #-232]	; 0xffffff18
   17544:	cmp	r2, r3
   17548:	beq	17568 <argp_parse@@Base+0x418>
   1754c:	ldr	r3, [pc, #1568]	; 17b74 <argp_parse@@Base+0xa24>
   17550:	ldr	r3, [r3]
   17554:	str	r3, [fp, #-56]	; 0xffffffc8
   17558:	mov	r6, #0
   1755c:	mov	sl, #1
   17560:	mvn	r9, #0
   17564:	b	177d8 <argp_parse@@Base+0x688>
   17568:	ldr	r0, [r2]
   1756c:	cmp	r0, #0
   17570:	beq	1754c <argp_parse@@Base+0x3fc>
   17574:	bl	17c84 <argp_parse@@Base+0xb34>
   17578:	str	r0, [fp, #-56]	; 0xffffffc8
   1757c:	b	17558 <argp_parse@@Base+0x408>
   17580:	ldr	r3, [fp, #-84]	; 0xffffffac
   17584:	str	r3, [fp, #-148]	; 0xffffff6c
   17588:	str	r9, [fp, #-140]	; 0xffffff74
   1758c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17590:	tst	r3, #64	; 0x40
   17594:	beq	17660 <argp_parse@@Base+0x510>
   17598:	sub	r3, fp, #148	; 0x94
   1759c:	str	r3, [sp, #4]
   175a0:	str	r6, [sp]
   175a4:	ldr	r3, [fp, #-152]	; 0xffffff68
   175a8:	ldr	r2, [fp, #-156]	; 0xffffff64
   175ac:	ldr	r1, [fp, #-88]	; 0xffffffa8
   175b0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   175b4:	bl	17e20 <argp_parse@@Base+0xcd0>
   175b8:	mov	r5, r0
   175bc:	ldr	r4, [fp, #-148]	; 0xffffff6c
   175c0:	str	r4, [fp, #-84]	; 0xffffffac
   175c4:	cmn	r5, #1
   175c8:	beq	17688 <argp_parse@@Base+0x538>
   175cc:	cmp	r5, #63	; 0x3f
   175d0:	beq	176b4 <argp_parse@@Base+0x564>
   175d4:	cmp	r5, #1
   175d8:	beq	176ec <argp_parse@@Base+0x59c>
   175dc:	ldr	r4, [fp, #-136]	; 0xffffff78
   175e0:	asrs	r3, r5, #24
   175e4:	bne	17798 <argp_parse@@Base+0x648>
   175e8:	mov	r1, r5
   175ec:	ldr	r0, [fp, #-156]	; 0xffffff64
   175f0:	bl	11550 <strchr@plt>
   175f4:	subs	r1, r0, #0
   175f8:	beq	17648 <argp_parse@@Base+0x4f8>
   175fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   17600:	ldr	r2, [fp, #-108]	; 0xffffff94
   17604:	cmp	r2, r0
   17608:	bls	17648 <argp_parse@@Base+0x4f8>
   1760c:	ldr	r3, [r0, #8]
   17610:	cmp	r1, r3
   17614:	bcc	17630 <argp_parse@@Base+0x4e0>
   17618:	add	r0, r0, #36	; 0x24
   1761c:	cmp	r2, r0
   17620:	bls	17648 <argp_parse@@Base+0x4f8>
   17624:	ldr	r3, [r0, #8]
   17628:	cmp	r1, r3
   1762c:	bcs	17618 <argp_parse@@Base+0x4c8>
   17630:	mov	r3, r4
   17634:	mov	r2, r5
   17638:	sub	r1, fp, #96	; 0x60
   1763c:	bl	16b68 <ftello64@plt+0x5498>
   17640:	cmp	r0, #7
   17644:	bne	177d0 <argp_parse@@Base+0x680>
   17648:	ldr	r3, [pc, #1348]	; 17b94 <argp_parse@@Base+0xa44>
   1764c:	mov	r2, r5
   17650:	ldr	r1, [pc, #1344]	; 17b98 <argp_parse@@Base+0xa48>
   17654:	sub	r0, fp, #96	; 0x60
   17658:	bl	1c120 <argp_error@@Base>
   1765c:	b	17878 <argp_parse@@Base+0x728>
   17660:	sub	r3, fp, #148	; 0x94
   17664:	str	r3, [sp, #4]
   17668:	str	r6, [sp]
   1766c:	ldr	r3, [fp, #-152]	; 0xffffff68
   17670:	ldr	r2, [fp, #-156]	; 0xffffff64
   17674:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17678:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1767c:	bl	17dc4 <argp_parse@@Base+0xc74>
   17680:	mov	r5, r0
   17684:	b	175bc <argp_parse@@Base+0x46c>
   17688:	str	r6, [fp, #-100]	; 0xffffff9c
   1768c:	cmp	r4, #1
   17690:	ble	17800 <argp_parse@@Base+0x6b0>
   17694:	sub	r3, r4, #-1073741823	; 0xc0000001
   17698:	ldr	r1, [pc, #1276]	; 17b9c <argp_parse@@Base+0xa4c>
   1769c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   176a0:	ldr	r0, [r2, r3, lsl #2]
   176a4:	bl	113a0 <strcmp@plt>
   176a8:	cmp	r0, #0
   176ac:	streq	r4, [fp, #-72]	; 0xffffffb8
   176b0:	b	17800 <argp_parse@@Base+0x6b0>
   176b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   176b8:	cmn	r3, #1
   176bc:	beq	175dc <argp_parse@@Base+0x48c>
   176c0:	mov	r3, #0
   176c4:	b	17888 <argp_parse@@Base+0x738>
   176c8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   176cc:	tst	r2, #4
   176d0:	movne	r3, #1
   176d4:	bne	17888 <argp_parse@@Base+0x738>
   176d8:	add	r2, r3, #1
   176dc:	str	r2, [fp, #-84]	; 0xffffffac
   176e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   176e4:	ldr	r3, [r2, r3, lsl #2]
   176e8:	str	r3, [fp, #-136]	; 0xffffff78
   176ec:	ldr	r7, [fp, #-136]	; 0xffffff78
   176f0:	ldr	r8, [fp, #-84]	; 0xffffffac
   176f4:	sub	r8, r8, #1
   176f8:	str	r8, [fp, #-84]	; 0xffffffac
   176fc:	ldr	r5, [fp, #-112]	; 0xffffff90
   17700:	ldr	r3, [fp, #-108]	; 0xffffff94
   17704:	cmp	r3, r5
   17708:	bhi	17754 <argp_parse@@Base+0x604>
   1770c:	b	17790 <argp_parse@@Base+0x640>
   17710:	ldr	r3, [fp, #-84]	; 0xffffffac
   17714:	sub	r3, r3, #1
   17718:	str	r3, [fp, #-84]	; 0xffffffac
   1771c:	mov	r3, r6
   17720:	ldr	r2, [pc, #1144]	; 17ba0 <argp_parse@@Base+0xa50>
   17724:	sub	r1, fp, #96	; 0x60
   17728:	mov	r0, r5
   1772c:	bl	16b68 <ftello64@plt+0x5498>
   17730:	add	r5, r5, #36	; 0x24
   17734:	ldr	r3, [fp, #-108]	; 0xffffff94
   17738:	cmp	r5, r3
   1773c:	movcs	r3, #0
   17740:	movcc	r3, #1
   17744:	cmp	r0, #7
   17748:	movne	r3, #0
   1774c:	cmp	r3, #0
   17750:	beq	17b34 <argp_parse@@Base+0x9e4>
   17754:	ldr	r3, [fp, #-84]	; 0xffffffac
   17758:	add	r3, r3, #1
   1775c:	str	r3, [fp, #-84]	; 0xffffffac
   17760:	mov	r3, r7
   17764:	mov	r2, r6
   17768:	sub	r1, fp, #96	; 0x60
   1776c:	mov	r0, r5
   17770:	bl	16b68 <ftello64@plt+0x5498>
   17774:	cmp	r0, #7
   17778:	beq	17710 <argp_parse@@Base+0x5c0>
   1777c:	add	r5, r5, #36	; 0x24
   17780:	cmp	r0, #0
   17784:	beq	17b44 <argp_parse@@Base+0x9f4>
   17788:	cmp	r0, #7
   1778c:	bne	177d0 <argp_parse@@Base+0x680>
   17790:	mov	r5, #1
   17794:	b	17878 <argp_parse@@Base+0x728>
   17798:	ands	r1, r5, #8388608	; 0x800000
   1779c:	movne	r1, #-16777216	; 0xff000000
   177a0:	bic	r2, r5, #-16777216	; 0xff000000
   177a4:	add	r0, r3, r3, lsl #3
   177a8:	lsl	r0, r0, #2
   177ac:	sub	r0, r0, #36	; 0x24
   177b0:	mov	r3, r4
   177b4:	orr	r2, r2, r1
   177b8:	sub	r1, fp, #96	; 0x60
   177bc:	ldr	ip, [fp, #-112]	; 0xffffff90
   177c0:	add	r0, ip, r0
   177c4:	bl	16b68 <ftello64@plt+0x5498>
   177c8:	cmp	r0, #7
   177cc:	beq	17818 <argp_parse@@Base+0x6c8>
   177d0:	cmp	r0, #0
   177d4:	bne	17928 <argp_parse@@Base+0x7d8>
   177d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   177dc:	cmp	r3, #0
   177e0:	beq	177f4 <argp_parse@@Base+0x6a4>
   177e4:	ldr	r2, [fp, #-84]	; 0xffffffac
   177e8:	cmp	r3, r2
   177ec:	strgt	r6, [fp, #-72]	; 0xffffffb8
   177f0:	ble	17800 <argp_parse@@Base+0x6b0>
   177f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   177f8:	cmp	r3, #0
   177fc:	bne	17580 <argp_parse@@Base+0x430>
   17800:	ldr	r3, [fp, #-84]	; 0xffffffac
   17804:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17808:	cmp	r3, r2
   1780c:	blt	176c8 <argp_parse@@Base+0x578>
   17810:	mov	r3, #1
   17814:	b	17888 <argp_parse@@Base+0x738>
   17818:	ldr	r3, [fp, #-152]	; 0xffffff68
   1781c:	ldr	r2, [r3, #12]
   17820:	cmp	r2, r5
   17824:	beq	17858 <argp_parse@@Base+0x708>
   17828:	ldr	r2, [r3]
   1782c:	cmp	r2, #0
   17830:	beq	17920 <argp_parse@@Base+0x7d0>
   17834:	add	r3, r3, #16
   17838:	ldr	r2, [r3, #12]
   1783c:	cmp	r2, r5
   17840:	beq	17858 <argp_parse@@Base+0x708>
   17844:	ldr	r2, [r3]
   17848:	cmp	r2, #0
   1784c:	bne	17834 <argp_parse@@Base+0x6e4>
   17850:	ldr	r2, [pc, #844]	; 17ba4 <argp_parse@@Base+0xa54>
   17854:	b	17868 <argp_parse@@Base+0x718>
   17858:	ldr	r2, [r3]
   1785c:	ldr	r3, [pc, #832]	; 17ba4 <argp_parse@@Base+0xa54>
   17860:	cmp	r2, #0
   17864:	moveq	r2, r3
   17868:	ldr	r3, [pc, #804]	; 17b94 <argp_parse@@Base+0xa44>
   1786c:	ldr	r1, [pc, #820]	; 17ba8 <argp_parse@@Base+0xa58>
   17870:	sub	r0, fp, #96	; 0x60
   17874:	bl	1c120 <argp_error@@Base>
   17878:	add	r5, r5, #1
   1787c:	bics	r3, r5, #2
   17880:	moveq	r3, #1
   17884:	movne	r3, #0
   17888:	cmp	r3, #0
   1788c:	moveq	r4, #7
   17890:	beq	1792c <argp_parse@@Base+0x7dc>
   17894:	ldr	r3, [fp, #-84]	; 0xffffffac
   17898:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1789c:	cmp	r3, r2
   178a0:	beq	179cc <argp_parse@@Base+0x87c>
   178a4:	ldr	r2, [fp, #4]
   178a8:	cmp	r2, #0
   178ac:	strne	r3, [r2]
   178b0:	beq	17ac8 <argp_parse@@Base+0x978>
   178b4:	ldr	r5, [fp, #-108]	; 0xffffff94
   178b8:	sub	r5, r5, #36	; 0x24
   178bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   178c0:	cmp	r5, r3
   178c4:	bcc	17b04 <argp_parse@@Base+0x9b4>
   178c8:	ldr	r7, [pc, #732]	; 17bac <argp_parse@@Base+0xa5c>
   178cc:	mov	r6, #0
   178d0:	mov	r3, r6
   178d4:	mov	r2, r7
   178d8:	sub	r1, fp, #96	; 0x60
   178dc:	mov	r0, r5
   178e0:	bl	16b68 <ftello64@plt+0x5498>
   178e4:	sub	r5, r5, #36	; 0x24
   178e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   178ec:	cmp	r5, r3
   178f0:	bcc	17900 <argp_parse@@Base+0x7b0>
   178f4:	cmp	r0, #7
   178f8:	cmpne	r0, #0
   178fc:	beq	178d0 <argp_parse@@Base+0x780>
   17900:	mov	r4, r0
   17904:	cmp	r0, #7
   17908:	moveq	r4, #0
   1790c:	ldr	r5, [fp, #-108]	; 0xffffff94
   17910:	sub	r5, r5, #36	; 0x24
   17914:	cmp	r3, r5
   17918:	bls	17984 <argp_parse@@Base+0x834>
   1791c:	b	179b8 <argp_parse@@Base+0x868>
   17920:	ldr	r2, [pc, #636]	; 17ba4 <argp_parse@@Base+0xa54>
   17924:	b	17868 <argp_parse@@Base+0x718>
   17928:	mov	r4, r0
   1792c:	cmp	r4, #7
   17930:	beq	17aec <argp_parse@@Base+0x99c>
   17934:	ldr	r5, [fp, #-112]	; 0xffffff90
   17938:	ldr	r3, [fp, #-108]	; 0xffffff94
   1793c:	cmp	r3, r5
   17940:	bls	17970 <argp_parse@@Base+0x820>
   17944:	ldr	r7, [pc, #612]	; 17bb0 <argp_parse@@Base+0xa60>
   17948:	mov	r6, #0
   1794c:	mov	r3, r6
   17950:	mov	r2, r7
   17954:	sub	r1, fp, #96	; 0x60
   17958:	mov	r0, r5
   1795c:	bl	16b68 <ftello64@plt+0x5498>
   17960:	add	r5, r5, #36	; 0x24
   17964:	ldr	r3, [fp, #-108]	; 0xffffff94
   17968:	cmp	r5, r3
   1796c:	bcc	1794c <argp_parse@@Base+0x7fc>
   17970:	ldr	r5, [fp, #-108]	; 0xffffff94
   17974:	sub	r5, r5, #36	; 0x24
   17978:	ldr	r3, [fp, #-112]	; 0xffffff90
   1797c:	cmp	r3, r5
   17980:	bhi	179b0 <argp_parse@@Base+0x860>
   17984:	ldr	r7, [pc, #552]	; 17bb4 <argp_parse@@Base+0xa64>
   17988:	mov	r6, #0
   1798c:	mov	r3, r6
   17990:	mov	r2, r7
   17994:	sub	r1, fp, #96	; 0x60
   17998:	mov	r0, r5
   1799c:	bl	16b68 <ftello64@plt+0x5498>
   179a0:	sub	r5, r5, #36	; 0x24
   179a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   179a8:	cmp	r5, r3
   179ac:	bcs	1798c <argp_parse@@Base+0x83c>
   179b0:	cmp	r4, #7
   179b4:	moveq	r4, #22
   179b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   179bc:	bl	17d44 <argp_parse@@Base+0xbf4>
   179c0:	mov	r0, r4
   179c4:	sub	sp, fp, #32
   179c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179cc:	ldr	r6, [fp, #-112]	; 0xffffff90
   179d0:	ldr	r5, [fp, #-108]	; 0xffffff94
   179d4:	cmp	r6, r5
   179d8:	bcs	17b0c <argp_parse@@Base+0x9bc>
   179dc:	mov	r4, #0
   179e0:	ldr	r8, [pc, #464]	; 17bb8 <argp_parse@@Base+0xa68>
   179e4:	mov	r7, r4
   179e8:	mov	r0, r4
   179ec:	b	17a0c <argp_parse@@Base+0x8bc>
   179f0:	add	r6, r6, #36	; 0x24
   179f4:	ldr	r5, [fp, #-108]	; 0xffffff94
   179f8:	cmp	r6, r5
   179fc:	bcs	17a38 <argp_parse@@Base+0x8e8>
   17a00:	cmp	r0, #7
   17a04:	cmpne	r0, #0
   17a08:	bne	17a30 <argp_parse@@Base+0x8e0>
   17a0c:	ldr	r3, [r6, #12]
   17a10:	cmp	r3, #0
   17a14:	bne	179f0 <argp_parse@@Base+0x8a0>
   17a18:	mov	r3, r7
   17a1c:	mov	r2, r8
   17a20:	sub	r1, fp, #96	; 0x60
   17a24:	mov	r0, r6
   17a28:	bl	16b68 <ftello64@plt+0x5498>
   17a2c:	b	179f0 <argp_parse@@Base+0x8a0>
   17a30:	mov	r4, r0
   17a34:	b	17a9c <argp_parse@@Base+0x94c>
   17a38:	mov	r4, r0
   17a3c:	sub	r5, r5, #36	; 0x24
   17a40:	ldr	r3, [fp, #-112]	; 0xffffff90
   17a44:	cmp	r3, r5
   17a48:	bhi	17a9c <argp_parse@@Base+0x94c>
   17a4c:	cmp	r0, #0
   17a50:	cmpne	r0, #7
   17a54:	bne	17a9c <argp_parse@@Base+0x94c>
   17a58:	ldr	r7, [pc, #348]	; 17bbc <argp_parse@@Base+0xa6c>
   17a5c:	mov	r6, #0
   17a60:	mov	r3, r6
   17a64:	mov	r2, r7
   17a68:	sub	r1, fp, #96	; 0x60
   17a6c:	mov	r0, r5
   17a70:	bl	16b68 <ftello64@plt+0x5498>
   17a74:	sub	r5, r5, #36	; 0x24
   17a78:	ldr	r3, [fp, #-112]	; 0xffffff90
   17a7c:	cmp	r5, r3
   17a80:	bcc	17a98 <argp_parse@@Base+0x948>
   17a84:	cmp	r0, #7
   17a88:	cmpne	r0, #0
   17a8c:	beq	17a60 <argp_parse@@Base+0x910>
   17a90:	mov	r4, r0
   17a94:	b	17a9c <argp_parse@@Base+0x94c>
   17a98:	mov	r4, r0
   17a9c:	cmp	r4, #7
   17aa0:	beq	17b20 <argp_parse@@Base+0x9d0>
   17aa4:	ldr	r3, [fp, #4]
   17aa8:	cmp	r3, #0
   17aac:	beq	17b64 <argp_parse@@Base+0xa14>
   17ab0:	ldr	r3, [fp, #-84]	; 0xffffffac
   17ab4:	ldr	r2, [fp, #4]
   17ab8:	str	r3, [r2]
   17abc:	cmp	r4, #0
   17ac0:	beq	178b4 <argp_parse@@Base+0x764>
   17ac4:	b	1792c <argp_parse@@Base+0x7dc>
   17ac8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17acc:	tst	r3, #2
   17ad0:	bne	17aec <argp_parse@@Base+0x99c>
   17ad4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17ad8:	cmp	r0, #0
   17adc:	beq	17aec <argp_parse@@Base+0x99c>
   17ae0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ae4:	ldr	r1, [pc, #212]	; 17bc0 <argp_parse@@Base+0xa70>
   17ae8:	bl	1155c <fprintf@plt>
   17aec:	mov	r2, #260	; 0x104
   17af0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17af4:	sub	r0, fp, #96	; 0x60
   17af8:	bl	1c064 <argp_state_help@@Base>
   17afc:	mov	r4, #7
   17b00:	b	17934 <argp_parse@@Base+0x7e4>
   17b04:	mov	r4, #0
   17b08:	b	179b0 <argp_parse@@Base+0x860>
   17b0c:	sub	r5, r5, #36	; 0x24
   17b10:	cmp	r6, r5
   17b14:	movhi	r4, #0
   17b18:	bls	17a58 <argp_parse@@Base+0x908>
   17b1c:	b	17aa4 <argp_parse@@Base+0x954>
   17b20:	ldr	r3, [fp, #4]
   17b24:	cmp	r3, #0
   17b28:	movne	r4, #0
   17b2c:	bne	17ab0 <argp_parse@@Base+0x960>
   17b30:	b	178b4 <argp_parse@@Base+0x764>
   17b34:	cmp	r0, #0
   17b38:	bne	17788 <argp_parse@@Base+0x638>
   17b3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17b40:	str	r3, [fp, #-84]	; 0xffffffac
   17b44:	ldr	r3, [fp, #-84]	; 0xffffffac
   17b48:	cmp	r8, r3
   17b4c:	sublt	r8, r3, r8
   17b50:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   17b54:	addlt	r8, r3, r8
   17b58:	strlt	r8, [r5, #-24]	; 0xffffffe8
   17b5c:	strge	sl, [fp, #-100]	; 0xffffff9c
   17b60:	b	177d8 <argp_parse@@Base+0x688>
   17b64:	cmp	r4, #0
   17b68:	beq	178b4 <argp_parse@@Base+0x764>
   17b6c:	b	17934 <argp_parse@@Base+0x7e4>
   17b70:	andeq	r2, r3, r4, asr #22
   17b74:	andeq	r2, r3, r0, asr #22
   17b78:	andeq	r2, r3, r8, asr #22
   17b7c:	andeq	r2, r3, ip, asr #22
   17b80:	tsteq	r0, r3
   17b84:	andeq	r0, r2, r4, asr r4
   17b88:	andeq	r2, r3, r4, lsr #24
   17b8c:	andeq	r0, r2, r0, ror r4
   17b90:			; <UNDEFINED> instruction: 0x00032bb8
   17b94:	andeq	r0, r2, ip, lsl #9
   17b98:	andeq	r0, r2, r0, lsr #11
   17b9c:	muleq	r2, ip, r5
   17ba0:	tsteq	r0, r6
   17ba4:	muleq	r2, r8, r5
   17ba8:	andeq	r0, r2, r8, lsr #11
   17bac:	tsteq	r0, r4
   17bb0:	tsteq	r0, r5
   17bb4:	tsteq	r0, r7
   17bb8:	tsteq	r0, r2
   17bbc:	tsteq	r0, r1
   17bc0:			; <UNDEFINED> instruction: 0x000205b4
   17bc4:	cmp	r1, #0
   17bc8:	beq	17c14 <argp_parse@@Base+0xac4>
   17bcc:	ldr	r2, [r1, #52]	; 0x34
   17bd0:	ldr	r3, [r2, #48]	; 0x30
   17bd4:	ldr	r1, [r2, #52]	; 0x34
   17bd8:	cmp	r3, r1
   17bdc:	bcs	17c1c <argp_parse@@Base+0xacc>
   17be0:	ldr	r2, [r3, #4]
   17be4:	cmp	r0, r2
   17be8:	beq	17c04 <argp_parse@@Base+0xab4>
   17bec:	add	r3, r3, #36	; 0x24
   17bf0:	cmp	r3, r1
   17bf4:	bcs	17c0c <argp_parse@@Base+0xabc>
   17bf8:	ldr	r2, [r3, #4]
   17bfc:	cmp	r2, r0
   17c00:	bne	17bec <argp_parse@@Base+0xa9c>
   17c04:	ldr	r0, [r3, #24]
   17c08:	bx	lr
   17c0c:	mov	r0, #0
   17c10:	bx	lr
   17c14:	mov	r0, #0
   17c18:	bx	lr
   17c1c:	mov	r0, #0
   17c20:	bx	lr
   17c24:	push	{lr}		; (str lr, [sp, #-4]!)
   17c28:	sub	sp, sp, #12
   17c2c:	ldr	r3, [pc, #28]	; 17c50 <argp_parse@@Base+0xb00>
   17c30:	ldr	r1, [r3]
   17c34:	ldr	r3, [r3, #4]
   17c38:	str	r3, [sp]
   17c3c:	ldr	r3, [pc, #16]	; 17c54 <argp_parse@@Base+0xb04>
   17c40:	ldr	r2, [pc, #16]	; 17c58 <argp_parse@@Base+0xb08>
   17c44:	bl	188d8 <_obstack_memory_used@@Base+0x714>
   17c48:	add	sp, sp, #12
   17c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   17c50:			; <UNDEFINED> instruction: 0x00032bbc
   17c54:	andeq	r0, r2, ip, lsl #13
   17c58:	muleq	r2, ip, r6
   17c5c:	ldr	r2, [pc, #20]	; 17c78 <argp_parse@@Base+0xb28>
   17c60:	ldr	r3, [pc, #20]	; 17c7c <argp_parse@@Base+0xb2c>
   17c64:	str	r2, [r3]
   17c68:	ldr	r3, [pc, #16]	; 17c80 <argp_parse@@Base+0xb30>
   17c6c:	str	r0, [r3]
   17c70:	str	r1, [r3, #4]
   17c74:	bx	lr
   17c78:	andeq	r7, r1, r4, lsr #24
   17c7c:			; <UNDEFINED> instruction: 0x00032bb8
   17c80:			; <UNDEFINED> instruction: 0x00032bbc
   17c84:	ldrb	r3, [r0]
   17c88:	cmp	r3, #47	; 0x2f
   17c8c:	bne	17c9c <argp_parse@@Base+0xb4c>
   17c90:	ldrb	r3, [r0, #1]!
   17c94:	cmp	r3, #47	; 0x2f
   17c98:	beq	17c90 <argp_parse@@Base+0xb40>
   17c9c:	ldrb	r2, [r0]
   17ca0:	cmp	r2, #0
   17ca4:	bxeq	lr
   17ca8:	push	{lr}		; (str lr, [sp, #-4]!)
   17cac:	mov	r1, r0
   17cb0:	mov	r3, #0
   17cb4:	mov	lr, #1
   17cb8:	mov	ip, r3
   17cbc:	b	17ccc <argp_parse@@Base+0xb7c>
   17cc0:	ldrb	r2, [r1, #1]!
   17cc4:	cmp	r2, #0
   17cc8:	beq	17ce8 <argp_parse@@Base+0xb98>
   17ccc:	cmp	r2, #47	; 0x2f
   17cd0:	moveq	r3, lr
   17cd4:	beq	17cc0 <argp_parse@@Base+0xb70>
   17cd8:	cmp	r3, #0
   17cdc:	movne	r0, r1
   17ce0:	movne	r3, ip
   17ce4:	b	17cc0 <argp_parse@@Base+0xb70>
   17ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   17cec:	push	{r4, lr}
   17cf0:	mov	r4, r0
   17cf4:	bl	11544 <strlen@plt>
   17cf8:	cmp	r0, #1
   17cfc:	popls	{r4, pc}
   17d00:	sub	r3, r0, #1
   17d04:	add	r2, r4, r3
   17d08:	ldrb	r1, [r4, r3]
   17d0c:	cmp	r1, #47	; 0x2f
   17d10:	popne	{r4, pc}
   17d14:	cmp	r3, #1
   17d18:	beq	17d3c <argp_parse@@Base+0xbec>
   17d1c:	sub	r0, r3, #1
   17d20:	ldrb	r1, [r2, #-1]!
   17d24:	cmp	r1, #47	; 0x2f
   17d28:	beq	17d34 <argp_parse@@Base+0xbe4>
   17d2c:	mov	r0, r3
   17d30:	pop	{r4, pc}
   17d34:	mov	r3, r0
   17d38:	b	17d14 <argp_parse@@Base+0xbc4>
   17d3c:	mov	r0, #1
   17d40:	pop	{r4, pc}
   17d44:	push	{r4, r5, lr}
   17d48:	sub	sp, sp, #12
   17d4c:	mov	r5, r0
   17d50:	bl	11568 <__errno_location@plt>
   17d54:	mov	r4, r0
   17d58:	ldr	r3, [r0]
   17d5c:	str	r3, [sp]
   17d60:	str	r3, [sp, #4]
   17d64:	mov	r3, #0
   17d68:	str	r3, [r0]
   17d6c:	mov	r0, r5
   17d70:	bl	113dc <free@plt>
   17d74:	ldr	r3, [r4]
   17d78:	cmp	r3, #0
   17d7c:	moveq	r3, #4
   17d80:	movne	r3, #0
   17d84:	add	r2, sp, #8
   17d88:	add	r3, r2, r3
   17d8c:	ldr	r3, [r3, #-8]
   17d90:	str	r3, [r4]
   17d94:	add	sp, sp, #12
   17d98:	pop	{r4, r5, pc}
   17d9c:	push	{lr}		; (str lr, [sp, #-4]!)
   17da0:	sub	sp, sp, #20
   17da4:	mov	ip, #0
   17da8:	str	ip, [sp, #8]
   17dac:	str	ip, [sp, #4]
   17db0:	ldr	ip, [sp, #24]
   17db4:	str	ip, [sp]
   17db8:	bl	1cd9c <argp_error@@Base+0xc7c>
   17dbc:	add	sp, sp, #20
   17dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   17dc4:	push	{lr}		; (str lr, [sp, #-4]!)
   17dc8:	sub	sp, sp, #20
   17dcc:	mov	ip, #0
   17dd0:	str	ip, [sp, #12]
   17dd4:	ldr	lr, [sp, #28]
   17dd8:	str	lr, [sp, #8]
   17ddc:	str	ip, [sp, #4]
   17de0:	ldr	ip, [sp, #24]
   17de4:	str	ip, [sp]
   17de8:	bl	1c820 <argp_error@@Base+0x700>
   17dec:	add	sp, sp, #20
   17df0:	pop	{pc}		; (ldr pc, [sp], #4)
   17df4:	push	{lr}		; (str lr, [sp, #-4]!)
   17df8:	sub	sp, sp, #20
   17dfc:	mov	ip, #0
   17e00:	str	ip, [sp, #8]
   17e04:	mov	ip, #1
   17e08:	str	ip, [sp, #4]
   17e0c:	ldr	ip, [sp, #24]
   17e10:	str	ip, [sp]
   17e14:	bl	1cd9c <argp_error@@Base+0xc7c>
   17e18:	add	sp, sp, #20
   17e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   17e20:	push	{lr}		; (str lr, [sp, #-4]!)
   17e24:	sub	sp, sp, #20
   17e28:	mov	ip, #0
   17e2c:	str	ip, [sp, #12]
   17e30:	ldr	ip, [sp, #28]
   17e34:	str	ip, [sp, #8]
   17e38:	mov	ip, #1
   17e3c:	str	ip, [sp, #4]
   17e40:	ldr	ip, [sp, #24]
   17e44:	str	ip, [sp]
   17e48:	bl	1c820 <argp_error@@Base+0x700>
   17e4c:	add	sp, sp, #20
   17e50:	pop	{pc}		; (ldr pc, [sp], #4)
   17e54:	push	{r1, r2, r3}
   17e58:	push	{lr}		; (str lr, [sp, #-4]!)
   17e5c:	sub	sp, sp, #8
   17e60:	add	r3, sp, #20
   17e64:	str	r3, [sp, #4]
   17e68:	ldr	r2, [sp, #16]
   17e6c:	ldr	r1, [sp, #12]
   17e70:	bl	11484 <ioctl@plt>
   17e74:	add	sp, sp, #8
   17e78:	pop	{lr}		; (ldr lr, [sp], #4)
   17e7c:	add	sp, sp, #12
   17e80:	bx	lr
   17e84:	push	{r4, lr}
   17e88:	ldrb	r3, [r0, #40]	; 0x28
   17e8c:	tst	r3, #1
   17e90:	bne	17ea4 <argp_parse@@Base+0xd54>
   17e94:	ldr	r3, [r0, #28]
   17e98:	mov	r0, r1
   17e9c:	blx	r3
   17ea0:	pop	{r4, pc}
   17ea4:	ldr	r3, [r0, #28]
   17ea8:	ldr	r0, [r0, #36]	; 0x24
   17eac:	blx	r3
   17eb0:	pop	{r4, pc}
   17eb4:	push	{r4, lr}
   17eb8:	ldrb	r3, [r0, #40]	; 0x28
   17ebc:	tst	r3, #1
   17ec0:	bne	17ed4 <argp_parse@@Base+0xd84>
   17ec4:	ldr	r3, [r0, #32]
   17ec8:	mov	r0, r1
   17ecc:	blx	r3
   17ed0:	pop	{r4, pc}
   17ed4:	ldr	r3, [r0, #32]
   17ed8:	ldr	r0, [r0, #36]	; 0x24
   17edc:	blx	r3
   17ee0:	pop	{r4, pc}
   17ee4:	push	{r4, r5, r6, lr}
   17ee8:	mov	r4, r0
   17eec:	subs	r5, r2, #0
   17ef0:	cmp	r2, #0
   17ef4:	moveq	r5, #8
   17ef8:	ldr	r3, [pc, #112]	; 17f70 <argp_parse@@Base+0xe20>
   17efc:	cmp	r1, #0
   17f00:	moveq	r1, r3
   17f04:	str	r1, [r0]
   17f08:	sub	r6, r5, #1
   17f0c:	str	r6, [r0, #24]
   17f10:	bl	17e84 <argp_parse@@Base+0xd34>
   17f14:	str	r0, [r4, #4]
   17f18:	cmp	r0, #0
   17f1c:	beq	17f64 <argp_parse@@Base+0xe14>
   17f20:	add	r3, r0, #8
   17f24:	add	r3, r3, r6
   17f28:	rsb	r5, r5, #0
   17f2c:	and	r5, r5, r3
   17f30:	str	r5, [r4, #8]
   17f34:	str	r5, [r4, #12]
   17f38:	ldr	r3, [r4]
   17f3c:	add	r3, r0, r3
   17f40:	str	r3, [r0]
   17f44:	str	r3, [r4, #16]
   17f48:	mov	r3, #0
   17f4c:	str	r3, [r0, #4]
   17f50:	ldrb	r3, [r4, #40]	; 0x28
   17f54:	and	r3, r3, #249	; 0xf9
   17f58:	strb	r3, [r4, #40]	; 0x28
   17f5c:	mov	r0, #1
   17f60:	pop	{r4, r5, r6, pc}
   17f64:	ldr	r3, [pc, #8]	; 17f74 <argp_parse@@Base+0xe24>
   17f68:	ldr	r3, [r3]
   17f6c:	blx	r3
   17f70:	andeq	r0, r0, r8, ror #31
   17f74:	strdeq	r2, [r3], -ip
   17f78:	push	{r4, lr}
   17f7c:	ldr	r2, [pc, #24]	; 17f9c <argp_parse@@Base+0xe4c>
   17f80:	ldr	r1, [pc, #24]	; 17fa0 <argp_parse@@Base+0xe50>
   17f84:	ldr	r3, [pc, #24]	; 17fa4 <argp_parse@@Base+0xe54>
   17f88:	ldr	r0, [r3]
   17f8c:	bl	1155c <fprintf@plt>
   17f90:	ldr	r3, [pc, #16]	; 17fa8 <argp_parse@@Base+0xe58>
   17f94:	ldr	r0, [r3]
   17f98:	bl	1152c <exit@plt>
   17f9c:	andeq	r0, r2, ip, lsr #13
   17fa0:	andeq	r0, r2, r0, lsl r7
   17fa4:	andeq	r2, r3, r8, asr #22
   17fa8:	andeq	r2, r3, r8, lsr #22

00017fac <_obstack_begin@@Base>:
   17fac:	push	{r4, lr}
   17fb0:	str	r3, [r0, #28]
   17fb4:	ldr	r3, [sp, #8]
   17fb8:	str	r3, [r0, #32]
   17fbc:	ldrb	r3, [r0, #40]	; 0x28
   17fc0:	bic	r3, r3, #1
   17fc4:	strb	r3, [r0, #40]	; 0x28
   17fc8:	bl	17ee4 <argp_parse@@Base+0xd94>
   17fcc:	pop	{r4, pc}

00017fd0 <_obstack_begin_1@@Base>:
   17fd0:	push	{r4, lr}
   17fd4:	str	r3, [r0, #28]
   17fd8:	ldr	r3, [sp, #8]
   17fdc:	str	r3, [r0, #32]
   17fe0:	ldr	r3, [sp, #12]
   17fe4:	str	r3, [r0, #36]	; 0x24
   17fe8:	ldrb	r3, [r0, #40]	; 0x28
   17fec:	orr	r3, r3, #1
   17ff0:	strb	r3, [r0, #40]	; 0x28
   17ff4:	bl	17ee4 <argp_parse@@Base+0xd94>
   17ff8:	pop	{r4, pc}

00017ffc <_obstack_newchunk@@Base>:
   17ffc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18000:	ldr	r5, [r0, #12]
   18004:	ldr	r3, [r0, #8]
   18008:	sub	r7, r5, r3
   1800c:	add	r1, r7, r1
   18010:	ldr	r3, [r0, #24]
   18014:	adds	r3, r1, r3
   18018:	movcc	r2, #1
   1801c:	movcs	r2, #0
   18020:	cmp	r7, r1
   18024:	movhi	r1, #0
   18028:	andls	r1, r2, #1
   1802c:	cmp	r1, #0
   18030:	bne	18040 <_obstack_newchunk@@Base+0x44>
   18034:	ldr	r3, [pc, #204]	; 18108 <_obstack_newchunk@@Base+0x10c>
   18038:	ldr	r3, [r3]
   1803c:	blx	r3
   18040:	mov	r4, r0
   18044:	ldr	r8, [r0, #4]
   18048:	add	r1, r3, r7, lsr #3
   1804c:	add	r1, r1, #100	; 0x64
   18050:	ldr	r6, [r0]
   18054:	cmp	r3, r6
   18058:	movcc	r3, r6
   1805c:	cmp	r3, r1
   18060:	movcs	r6, r3
   18064:	movcc	r6, r1
   18068:	mov	r1, r6
   1806c:	bl	17e84 <argp_parse@@Base+0xd34>
   18070:	subs	r9, r0, #0
   18074:	beq	18034 <_obstack_newchunk@@Base+0x38>
   18078:	str	r9, [r4, #4]
   1807c:	str	r8, [r9, #4]
   18080:	add	r1, r9, r6
   18084:	str	r1, [r4, #16]
   18088:	mov	r5, r9
   1808c:	str	r1, [r5], #8
   18090:	ldr	r3, [r4, #24]
   18094:	add	r5, r5, r3
   18098:	bic	r5, r5, r3
   1809c:	mov	r2, r7
   180a0:	ldr	r1, [r4, #8]
   180a4:	mov	r0, r5
   180a8:	bl	1140c <memcpy@plt>
   180ac:	ldrb	r3, [r4, #40]	; 0x28
   180b0:	tst	r3, #2
   180b4:	bne	180d4 <_obstack_newchunk@@Base+0xd8>
   180b8:	ldr	r2, [r4, #24]
   180bc:	add	r3, r8, #8
   180c0:	add	r3, r3, r2
   180c4:	bic	r3, r3, r2
   180c8:	ldr	r2, [r4, #8]
   180cc:	cmp	r2, r3
   180d0:	beq	180f0 <_obstack_newchunk@@Base+0xf4>
   180d4:	str	r5, [r4, #8]
   180d8:	add	r5, r5, r7
   180dc:	str	r5, [r4, #12]
   180e0:	ldrb	r3, [r4, #40]	; 0x28
   180e4:	bic	r3, r3, #2
   180e8:	strb	r3, [r4, #40]	; 0x28
   180ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   180f0:	ldr	r3, [r8, #4]
   180f4:	str	r3, [r9, #4]
   180f8:	mov	r1, r8
   180fc:	mov	r0, r4
   18100:	bl	17eb4 <argp_parse@@Base+0xd64>
   18104:	b	180d4 <_obstack_newchunk@@Base+0xd8>
   18108:	strdeq	r2, [r3], -ip

0001810c <_obstack_allocated_p@@Base>:
   1810c:	ldr	r0, [r0, #4]
   18110:	cmp	r0, #0
   18114:	bne	18128 <_obstack_allocated_p@@Base+0x1c>
   18118:	b	1813c <_obstack_allocated_p@@Base+0x30>
   1811c:	ldr	r0, [r0, #4]
   18120:	cmp	r0, #0
   18124:	beq	1813c <_obstack_allocated_p@@Base+0x30>
   18128:	cmp	r1, r0
   1812c:	bls	1811c <_obstack_allocated_p@@Base+0x10>
   18130:	ldr	r3, [r0]
   18134:	cmp	r1, r3
   18138:	bhi	1811c <_obstack_allocated_p@@Base+0x10>
   1813c:	adds	r0, r0, #0
   18140:	movne	r0, #1
   18144:	bx	lr

00018148 <_obstack_free@@Base>:
   18148:	push	{r4, r5, r6, lr}
   1814c:	mov	r4, r0
   18150:	mov	r6, r1
   18154:	ldr	r1, [r0, #4]
   18158:	cmp	r1, #0
   1815c:	bne	18190 <_obstack_free@@Base+0x48>
   18160:	cmp	r6, #0
   18164:	popeq	{r4, r5, r6, pc}
   18168:	bl	116ac <abort@plt>
   1816c:	ldr	r5, [r1, #4]
   18170:	mov	r0, r4
   18174:	bl	17eb4 <argp_parse@@Base+0xd64>
   18178:	ldrb	r3, [r4, #40]	; 0x28
   1817c:	orr	r3, r3, #2
   18180:	strb	r3, [r4, #40]	; 0x28
   18184:	mov	r1, r5
   18188:	cmp	r5, #0
   1818c:	beq	18160 <_obstack_free@@Base+0x18>
   18190:	cmp	r6, r1
   18194:	bls	1816c <_obstack_free@@Base+0x24>
   18198:	ldr	r3, [r1]
   1819c:	cmp	r6, r3
   181a0:	bhi	1816c <_obstack_free@@Base+0x24>
   181a4:	cmp	r1, #0
   181a8:	beq	18160 <_obstack_free@@Base+0x18>
   181ac:	str	r6, [r4, #12]
   181b0:	str	r6, [r4, #8]
   181b4:	ldr	r3, [r1]
   181b8:	str	r3, [r4, #16]
   181bc:	str	r1, [r4, #4]
   181c0:	pop	{r4, r5, r6, pc}

000181c4 <_obstack_memory_used@@Base>:
   181c4:	ldr	r3, [r0, #4]
   181c8:	cmp	r3, #0
   181cc:	beq	181f0 <_obstack_memory_used@@Base+0x2c>
   181d0:	mov	r0, #0
   181d4:	ldr	r2, [r3]
   181d8:	sub	r2, r2, r3
   181dc:	add	r0, r0, r2
   181e0:	ldr	r3, [r3, #4]
   181e4:	cmp	r3, #0
   181e8:	bne	181d4 <_obstack_memory_used@@Base+0x10>
   181ec:	bx	lr
   181f0:	mov	r0, #0
   181f4:	bx	lr
   181f8:	push	{r4, r5, r6, lr}
   181fc:	subs	r4, r0, #0
   18200:	beq	18278 <_obstack_memory_used@@Base+0xb4>
   18204:	mov	r1, #47	; 0x2f
   18208:	mov	r0, r4
   1820c:	bl	115f8 <strrchr@plt>
   18210:	cmp	r0, #0
   18214:	addne	r5, r0, #1
   18218:	moveq	r5, r4
   1821c:	sub	r3, r5, r4
   18220:	cmp	r3, #6
   18224:	ble	18264 <_obstack_memory_used@@Base+0xa0>
   18228:	mov	r2, #7
   1822c:	ldr	r1, [pc, #96]	; 18294 <_obstack_memory_used@@Base+0xd0>
   18230:	sub	r0, r5, #7
   18234:	bl	116a0 <strncmp@plt>
   18238:	cmp	r0, #0
   1823c:	bne	18264 <_obstack_memory_used@@Base+0xa0>
   18240:	mov	r2, #3
   18244:	ldr	r1, [pc, #76]	; 18298 <_obstack_memory_used@@Base+0xd4>
   18248:	mov	r0, r5
   1824c:	bl	116a0 <strncmp@plt>
   18250:	cmp	r0, #0
   18254:	addeq	r4, r5, #3
   18258:	ldreq	r3, [pc, #60]	; 1829c <_obstack_memory_used@@Base+0xd8>
   1825c:	streq	r4, [r3]
   18260:	movne	r4, r5
   18264:	ldr	r3, [pc, #52]	; 182a0 <_obstack_memory_used@@Base+0xdc>
   18268:	str	r4, [r3]
   1826c:	ldr	r3, [pc, #48]	; 182a4 <_obstack_memory_used@@Base+0xe0>
   18270:	str	r4, [r3]
   18274:	pop	{r4, r5, r6, pc}
   18278:	ldr	r3, [pc, #40]	; 182a8 <_obstack_memory_used@@Base+0xe4>
   1827c:	ldr	r3, [r3]
   18280:	mov	r2, #55	; 0x37
   18284:	mov	r1, #1
   18288:	ldr	r0, [pc, #28]	; 182ac <_obstack_memory_used@@Base+0xe8>
   1828c:	bl	11478 <fwrite@plt>
   18290:	bl	116ac <abort@plt>
   18294:	strdeq	r0, [r2], -r8
   18298:	andeq	r0, r2, r0, lsl #14
   1829c:	andeq	r2, r3, r0, asr #22
   182a0:	andeq	r2, r3, r4, asr #23
   182a4:	andeq	r2, r3, r4, asr #22
   182a8:	andeq	r2, r3, r8, asr #22
   182ac:	andeq	r0, r2, r0, asr #13
   182b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182b4:	sub	sp, sp, #124	; 0x7c
   182b8:	str	r0, [sp, #4]
   182bc:	str	r1, [sp, #8]
   182c0:	str	r2, [sp, #12]
   182c4:	bl	115b0 <fileno@plt>
   182c8:	add	r2, sp, #16
   182cc:	mov	r1, r0
   182d0:	mov	r0, #3
   182d4:	bl	1146c <__fxstat64@plt>
   182d8:	cmp	r0, #0
   182dc:	blt	18374 <_obstack_memory_used@@Base+0x1b0>
   182e0:	ldr	r3, [sp, #32]
   182e4:	and	r3, r3, #61440	; 0xf000
   182e8:	cmp	r3, #32768	; 0x8000
   182ec:	movne	r4, #8192	; 0x2000
   182f0:	beq	1831c <_obstack_memory_used@@Base+0x158>
   182f4:	mov	r0, r4
   182f8:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   182fc:	subs	r7, r0, #0
   18300:	beq	18514 <_obstack_memory_used@@Base+0x350>
   18304:	mov	r6, #0
   18308:	mov	fp, #1
   1830c:	mvn	r9, #-2147483648	; 0x80000000
   18310:	ldr	r3, [sp, #8]
   18314:	and	sl, r3, #2
   18318:	b	18464 <_obstack_memory_used@@Base+0x2a0>
   1831c:	ldr	r0, [sp, #4]
   18320:	bl	116d0 <ftello64@plt>
   18324:	cmp	r0, #0
   18328:	sbcs	r3, r1, #0
   1832c:	blt	1837c <_obstack_memory_used@@Base+0x1b8>
   18330:	ldrd	r2, [sp, #64]	; 0x40
   18334:	cmp	r0, r2
   18338:	sbcs	ip, r1, r3
   1833c:	bge	18384 <_obstack_memory_used@@Base+0x1c0>
   18340:	subs	r2, r2, r0
   18344:	sbc	r3, r3, r1
   18348:	mvn	r0, #-2147483647	; 0x80000001
   1834c:	mov	r1, #0
   18350:	cmp	r0, r2
   18354:	sbcs	r1, r1, r3
   18358:	addge	r4, r2, #1
   1835c:	bge	182f4 <_obstack_memory_used@@Base+0x130>
   18360:	bl	11568 <__errno_location@plt>
   18364:	mov	r3, #12
   18368:	str	r3, [r0]
   1836c:	mov	r7, #0
   18370:	b	18514 <_obstack_memory_used@@Base+0x350>
   18374:	mov	r4, #8192	; 0x2000
   18378:	b	182f4 <_obstack_memory_used@@Base+0x130>
   1837c:	mov	r4, #8192	; 0x2000
   18380:	b	182f4 <_obstack_memory_used@@Base+0x130>
   18384:	mov	r4, #8192	; 0x2000
   18388:	b	182f4 <_obstack_memory_used@@Base+0x130>
   1838c:	bl	11568 <__errno_location@plt>
   18390:	ldr	r8, [r0]
   18394:	ldr	r0, [sp, #4]
   18398:	bl	113f4 <ferror@plt>
   1839c:	cmp	r0, #0
   183a0:	bne	184f4 <_obstack_memory_used@@Base+0x330>
   183a4:	sub	r3, r4, #1
   183a8:	cmp	r6, r3
   183ac:	bcs	1841c <_obstack_memory_used@@Base+0x258>
   183b0:	ldr	r3, [sp, #8]
   183b4:	tst	r3, #2
   183b8:	beq	18408 <_obstack_memory_used@@Base+0x244>
   183bc:	add	r0, r6, #1
   183c0:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   183c4:	subs	r5, r0, #0
   183c8:	beq	183f8 <_obstack_memory_used@@Base+0x234>
   183cc:	mov	r2, r6
   183d0:	mov	r1, r7
   183d4:	mov	r0, r5
   183d8:	bl	1140c <memcpy@plt>
   183dc:	mov	r1, r4
   183e0:	mov	r0, r7
   183e4:	bl	11664 <explicit_bzero@plt>
   183e8:	mov	r0, r7
   183ec:	bl	17d44 <argp_parse@@Base+0xbf4>
   183f0:	mov	r7, r5
   183f4:	b	1841c <_obstack_memory_used@@Base+0x258>
   183f8:	sub	r1, r4, r6
   183fc:	add	r0, r7, r6
   18400:	bl	11664 <explicit_bzero@plt>
   18404:	b	1841c <_obstack_memory_used@@Base+0x258>
   18408:	add	r1, r6, #1
   1840c:	mov	r0, r7
   18410:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   18414:	cmp	r0, #0
   18418:	movne	r7, r0
   1841c:	mov	r3, #0
   18420:	strb	r3, [r7, r6]
   18424:	ldr	r3, [sp, #12]
   18428:	str	r6, [r3]
   1842c:	b	18514 <_obstack_memory_used@@Base+0x350>
   18430:	bl	11568 <__errno_location@plt>
   18434:	ldr	r8, [r0]
   18438:	mov	r1, r5
   1843c:	mov	r0, r7
   18440:	bl	11664 <explicit_bzero@plt>
   18444:	b	18500 <_obstack_memory_used@@Base+0x33c>
   18448:	mov	r1, r5
   1844c:	mov	r0, r7
   18450:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   18454:	subs	r8, r0, #0
   18458:	beq	184e4 <_obstack_memory_used@@Base+0x320>
   1845c:	mov	r4, r5
   18460:	mov	r7, r8
   18464:	sub	r5, r4, r6
   18468:	ldr	r3, [sp, #4]
   1846c:	mov	r2, r5
   18470:	mov	r1, fp
   18474:	add	r0, r7, r6
   18478:	bl	1149c <fread@plt>
   1847c:	add	r6, r6, r0
   18480:	cmp	r5, r0
   18484:	bne	1838c <_obstack_memory_used@@Base+0x1c8>
   18488:	cmn	r4, #-2147483647	; 0x80000001
   1848c:	beq	184f0 <_obstack_memory_used@@Base+0x32c>
   18490:	lsr	r5, r4, #1
   18494:	sub	r3, r9, r5
   18498:	cmp	r4, r3
   1849c:	addcc	r5, r4, r5
   184a0:	movcs	r5, r9
   184a4:	cmp	sl, #0
   184a8:	beq	18448 <_obstack_memory_used@@Base+0x284>
   184ac:	mov	r0, r5
   184b0:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   184b4:	subs	r8, r0, #0
   184b8:	beq	18430 <_obstack_memory_used@@Base+0x26c>
   184bc:	mov	r2, r4
   184c0:	mov	r1, r7
   184c4:	mov	r0, r8
   184c8:	bl	1140c <memcpy@plt>
   184cc:	mov	r1, r4
   184d0:	mov	r0, r7
   184d4:	bl	11664 <explicit_bzero@plt>
   184d8:	mov	r0, r7
   184dc:	bl	17d44 <argp_parse@@Base+0xbf4>
   184e0:	b	1845c <_obstack_memory_used@@Base+0x298>
   184e4:	bl	11568 <__errno_location@plt>
   184e8:	ldr	r8, [r0]
   184ec:	b	18500 <_obstack_memory_used@@Base+0x33c>
   184f0:	mov	r8, #12
   184f4:	ldr	r3, [sp, #8]
   184f8:	tst	r3, #2
   184fc:	bne	18520 <_obstack_memory_used@@Base+0x35c>
   18500:	mov	r0, r7
   18504:	bl	17d44 <argp_parse@@Base+0xbf4>
   18508:	bl	11568 <__errno_location@plt>
   1850c:	str	r8, [r0]
   18510:	mov	r7, #0
   18514:	mov	r0, r7
   18518:	add	sp, sp, #124	; 0x7c
   1851c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18520:	mov	r5, r4
   18524:	b	18438 <_obstack_memory_used@@Base+0x274>
   18528:	push	{r4, r5, r6, r7, r8, lr}
   1852c:	mov	r4, r1
   18530:	mov	r6, r2
   18534:	and	r1, r1, #1
   18538:	ldr	r3, [pc, #152]	; 185d8 <_obstack_memory_used@@Base+0x414>
   1853c:	ldr	r2, [pc, #152]	; 185dc <_obstack_memory_used@@Base+0x418>
   18540:	cmp	r1, #0
   18544:	movne	r1, r2
   18548:	moveq	r1, r3
   1854c:	bl	1164c <fopen64@plt>
   18550:	subs	r5, r0, #0
   18554:	beq	185d0 <_obstack_memory_used@@Base+0x40c>
   18558:	ands	r7, r4, #2
   1855c:	bne	185a8 <_obstack_memory_used@@Base+0x3e4>
   18560:	mov	r2, r6
   18564:	mov	r1, r4
   18568:	mov	r0, r5
   1856c:	bl	182b0 <_obstack_memory_used@@Base+0xec>
   18570:	mov	r4, r0
   18574:	mov	r0, r5
   18578:	bl	115c8 <fclose@plt>
   1857c:	cmp	r0, #0
   18580:	beq	185a0 <_obstack_memory_used@@Base+0x3dc>
   18584:	cmp	r4, #0
   18588:	beq	185a0 <_obstack_memory_used@@Base+0x3dc>
   1858c:	cmp	r7, #0
   18590:	bne	185c0 <_obstack_memory_used@@Base+0x3fc>
   18594:	mov	r0, r4
   18598:	bl	17d44 <argp_parse@@Base+0xbf4>
   1859c:	mov	r4, #0
   185a0:	mov	r0, r4
   185a4:	pop	{r4, r5, r6, r7, r8, pc}
   185a8:	mov	r3, #0
   185ac:	mov	r2, #2
   185b0:	mov	r1, r3
   185b4:	mov	r0, r5
   185b8:	bl	1158c <setvbuf@plt>
   185bc:	b	18560 <_obstack_memory_used@@Base+0x39c>
   185c0:	ldr	r1, [r6]
   185c4:	mov	r0, r4
   185c8:	bl	11664 <explicit_bzero@plt>
   185cc:	b	18594 <_obstack_memory_used@@Base+0x3d0>
   185d0:	mov	r4, #0
   185d4:	b	185a0 <_obstack_memory_used@@Base+0x3dc>
   185d8:	andeq	r0, r2, r8, lsl #5
   185dc:	andeq	r0, r2, r4, lsl #14
   185e0:	push	{r4, r5, r6, lr}
   185e4:	sub	sp, sp, #32
   185e8:	mov	r4, r0
   185ec:	ldr	r5, [sp, #48]	; 0x30
   185f0:	ldr	r6, [sp, #52]	; 0x34
   185f4:	cmp	r1, #0
   185f8:	beq	18680 <_obstack_memory_used@@Base+0x4bc>
   185fc:	str	r3, [sp]
   18600:	mov	r3, r2
   18604:	mov	r2, r1
   18608:	ldr	r1, [pc, #644]	; 18894 <_obstack_memory_used@@Base+0x6d0>
   1860c:	bl	1155c <fprintf@plt>
   18610:	ldr	r3, [pc, #640]	; 18898 <_obstack_memory_used@@Base+0x6d4>
   18614:	ldr	r2, [pc, #640]	; 1889c <_obstack_memory_used@@Base+0x6d8>
   18618:	ldr	r1, [pc, #640]	; 188a0 <_obstack_memory_used@@Base+0x6dc>
   1861c:	mov	r0, r4
   18620:	bl	1155c <fprintf@plt>
   18624:	mov	r1, r4
   18628:	mov	r0, #10
   1862c:	bl	11610 <fputc@plt>
   18630:	ldr	r2, [pc, #620]	; 188a4 <_obstack_memory_used@@Base+0x6e0>
   18634:	ldr	r1, [pc, #620]	; 188a8 <_obstack_memory_used@@Base+0x6e4>
   18638:	mov	r0, r4
   1863c:	bl	1155c <fprintf@plt>
   18640:	mov	r1, r4
   18644:	mov	r0, #10
   18648:	bl	11610 <fputc@plt>
   1864c:	cmp	r6, #9
   18650:	ldrls	pc, [pc, r6, lsl #2]
   18654:	b	18844 <_obstack_memory_used@@Base+0x680>
   18658:	muleq	r1, ip, r6
   1865c:	andeq	r8, r1, ip, lsl #13
   18660:	andeq	r8, r1, r4, lsr #13
   18664:			; <UNDEFINED> instruction: 0x000186bc
   18668:	ldrdeq	r8, [r1], -ip
   1866c:	andeq	r8, r1, r4, lsl #14
   18670:	andeq	r8, r1, r4, lsr r7
   18674:	andeq	r8, r1, ip, ror #14
   18678:	andeq	r8, r1, ip, lsr #15
   1867c:	strdeq	r8, [r1], -r4
   18680:	ldr	r1, [pc, #548]	; 188ac <_obstack_memory_used@@Base+0x6e8>
   18684:	bl	1155c <fprintf@plt>
   18688:	b	18610 <_obstack_memory_used@@Base+0x44c>
   1868c:	ldr	r2, [r5]
   18690:	ldr	r1, [pc, #536]	; 188b0 <_obstack_memory_used@@Base+0x6ec>
   18694:	mov	r0, r4
   18698:	bl	1155c <fprintf@plt>
   1869c:	add	sp, sp, #32
   186a0:	pop	{r4, r5, r6, pc}
   186a4:	ldr	r3, [r5, #4]
   186a8:	ldr	r2, [r5]
   186ac:	ldr	r1, [pc, #512]	; 188b4 <_obstack_memory_used@@Base+0x6f0>
   186b0:	mov	r0, r4
   186b4:	bl	1155c <fprintf@plt>
   186b8:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   186bc:	ldr	r3, [r5, #4]
   186c0:	ldr	r2, [r5]
   186c4:	ldr	r1, [r5, #8]
   186c8:	str	r1, [sp]
   186cc:	ldr	r1, [pc, #484]	; 188b8 <_obstack_memory_used@@Base+0x6f4>
   186d0:	mov	r0, r4
   186d4:	bl	1155c <fprintf@plt>
   186d8:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   186dc:	ldr	r3, [r5, #4]
   186e0:	ldr	r2, [r5]
   186e4:	ldr	r1, [r5, #12]
   186e8:	str	r1, [sp, #4]
   186ec:	ldr	r1, [r5, #8]
   186f0:	str	r1, [sp]
   186f4:	ldr	r1, [pc, #448]	; 188bc <_obstack_memory_used@@Base+0x6f8>
   186f8:	mov	r0, r4
   186fc:	bl	1155c <fprintf@plt>
   18700:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   18704:	ldr	r3, [r5, #4]
   18708:	ldr	r2, [r5]
   1870c:	ldr	r1, [r5, #16]
   18710:	str	r1, [sp, #8]
   18714:	ldr	r1, [r5, #12]
   18718:	str	r1, [sp, #4]
   1871c:	ldr	r1, [r5, #8]
   18720:	str	r1, [sp]
   18724:	ldr	r1, [pc, #404]	; 188c0 <_obstack_memory_used@@Base+0x6fc>
   18728:	mov	r0, r4
   1872c:	bl	1155c <fprintf@plt>
   18730:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   18734:	ldr	r3, [r5, #4]
   18738:	ldr	r2, [r5]
   1873c:	ldr	r1, [r5, #20]
   18740:	str	r1, [sp, #12]
   18744:	ldr	r1, [r5, #16]
   18748:	str	r1, [sp, #8]
   1874c:	ldr	r1, [r5, #12]
   18750:	str	r1, [sp, #4]
   18754:	ldr	r1, [r5, #8]
   18758:	str	r1, [sp]
   1875c:	ldr	r1, [pc, #352]	; 188c4 <_obstack_memory_used@@Base+0x700>
   18760:	mov	r0, r4
   18764:	bl	1155c <fprintf@plt>
   18768:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   1876c:	ldr	r3, [r5, #4]
   18770:	ldr	r2, [r5]
   18774:	ldr	r1, [r5, #24]
   18778:	str	r1, [sp, #16]
   1877c:	ldr	r1, [r5, #20]
   18780:	str	r1, [sp, #12]
   18784:	ldr	r1, [r5, #16]
   18788:	str	r1, [sp, #8]
   1878c:	ldr	r1, [r5, #12]
   18790:	str	r1, [sp, #4]
   18794:	ldr	r1, [r5, #8]
   18798:	str	r1, [sp]
   1879c:	ldr	r1, [pc, #292]	; 188c8 <_obstack_memory_used@@Base+0x704>
   187a0:	mov	r0, r4
   187a4:	bl	1155c <fprintf@plt>
   187a8:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   187ac:	ldr	r3, [r5, #4]
   187b0:	ldr	r2, [r5]
   187b4:	ldr	r1, [r5, #28]
   187b8:	str	r1, [sp, #20]
   187bc:	ldr	r1, [r5, #24]
   187c0:	str	r1, [sp, #16]
   187c4:	ldr	r1, [r5, #20]
   187c8:	str	r1, [sp, #12]
   187cc:	ldr	r1, [r5, #16]
   187d0:	str	r1, [sp, #8]
   187d4:	ldr	r1, [r5, #12]
   187d8:	str	r1, [sp, #4]
   187dc:	ldr	r1, [r5, #8]
   187e0:	str	r1, [sp]
   187e4:	ldr	r1, [pc, #224]	; 188cc <_obstack_memory_used@@Base+0x708>
   187e8:	mov	r0, r4
   187ec:	bl	1155c <fprintf@plt>
   187f0:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   187f4:	ldr	r3, [r5, #4]
   187f8:	ldr	r2, [r5]
   187fc:	ldr	r1, [r5, #32]
   18800:	str	r1, [sp, #24]
   18804:	ldr	r1, [r5, #28]
   18808:	str	r1, [sp, #20]
   1880c:	ldr	r1, [r5, #24]
   18810:	str	r1, [sp, #16]
   18814:	ldr	r1, [r5, #20]
   18818:	str	r1, [sp, #12]
   1881c:	ldr	r1, [r5, #16]
   18820:	str	r1, [sp, #8]
   18824:	ldr	r1, [r5, #12]
   18828:	str	r1, [sp, #4]
   1882c:	ldr	r1, [r5, #8]
   18830:	str	r1, [sp]
   18834:	ldr	r1, [pc, #148]	; 188d0 <_obstack_memory_used@@Base+0x70c>
   18838:	mov	r0, r4
   1883c:	bl	1155c <fprintf@plt>
   18840:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   18844:	ldr	r3, [r5, #4]
   18848:	ldr	r2, [r5]
   1884c:	ldr	r1, [r5, #32]
   18850:	str	r1, [sp, #24]
   18854:	ldr	r1, [r5, #28]
   18858:	str	r1, [sp, #20]
   1885c:	ldr	r1, [r5, #24]
   18860:	str	r1, [sp, #16]
   18864:	ldr	r1, [r5, #20]
   18868:	str	r1, [sp, #12]
   1886c:	ldr	r1, [r5, #16]
   18870:	str	r1, [sp, #8]
   18874:	ldr	r1, [r5, #12]
   18878:	str	r1, [sp, #4]
   1887c:	ldr	r1, [r5, #8]
   18880:	str	r1, [sp]
   18884:	ldr	r1, [pc, #72]	; 188d4 <_obstack_memory_used@@Base+0x710>
   18888:	mov	r0, r4
   1888c:	bl	1155c <fprintf@plt>
   18890:	b	1869c <_obstack_memory_used@@Base+0x4d8>
   18894:	andeq	r0, r2, r8, lsl #14
   18898:	andeq	r0, r0, r6, ror #15
   1889c:	andeq	r0, r2, ip, lsl r7
   188a0:	andeq	r0, r2, ip, lsl sl
   188a4:	andeq	r0, r2, r0, lsr #14
   188a8:	andeq	r0, r2, r4, asr #14
   188ac:	andeq	r0, r2, r4, lsl r7
   188b0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   188b4:	andeq	r0, r2, r0, lsl #16
   188b8:	andeq	r0, r2, r8, lsl r8
   188bc:	andeq	r0, r2, r4, lsr r8
   188c0:	andeq	r0, r2, r4, asr r8
   188c4:	andeq	r0, r2, r8, ror r8
   188c8:	andeq	r0, r2, r0, lsr #17
   188cc:	andeq	r0, r2, ip, asr #17
   188d0:	strdeq	r0, [r2], -ip
   188d4:	andeq	r0, r2, r0, lsr r9
   188d8:	push	{r4, r5, lr}
   188dc:	sub	sp, sp, #12
   188e0:	ldr	r5, [sp, #24]
   188e4:	ldr	ip, [r5]
   188e8:	cmp	ip, #0
   188ec:	beq	1891c <_obstack_memory_used@@Base+0x758>
   188f0:	mov	lr, r5
   188f4:	mov	ip, #0
   188f8:	add	ip, ip, #1
   188fc:	ldr	r4, [lr, #4]!
   18900:	cmp	r4, #0
   18904:	bne	188f8 <_obstack_memory_used@@Base+0x734>
   18908:	str	ip, [sp, #4]
   1890c:	str	r5, [sp]
   18910:	bl	185e0 <_obstack_memory_used@@Base+0x41c>
   18914:	add	sp, sp, #12
   18918:	pop	{r4, r5, pc}
   1891c:	mov	ip, #0
   18920:	b	18908 <_obstack_memory_used@@Base+0x744>
   18924:	push	{r4, r5, lr}
   18928:	sub	sp, sp, #52	; 0x34
   1892c:	ldr	r4, [sp, #64]	; 0x40
   18930:	sub	r4, r4, #4
   18934:	add	r5, sp, #4
   18938:	mov	ip, #0
   1893c:	ldr	lr, [r4, #4]!
   18940:	str	lr, [r5, #4]!
   18944:	cmp	lr, #0
   18948:	beq	18958 <_obstack_memory_used@@Base+0x794>
   1894c:	add	ip, ip, #1
   18950:	cmp	ip, #10
   18954:	bne	1893c <_obstack_memory_used@@Base+0x778>
   18958:	str	ip, [sp, #4]
   1895c:	add	ip, sp, #8
   18960:	str	ip, [sp]
   18964:	bl	185e0 <_obstack_memory_used@@Base+0x41c>
   18968:	add	sp, sp, #52	; 0x34
   1896c:	pop	{r4, r5, pc}
   18970:	push	{r3}		; (str r3, [sp, #-4]!)
   18974:	push	{lr}		; (str lr, [sp, #-4]!)
   18978:	sub	sp, sp, #16
   1897c:	add	r3, sp, #24
   18980:	str	r3, [sp, #12]
   18984:	str	r3, [sp]
   18988:	ldr	r3, [sp, #20]
   1898c:	bl	18924 <_obstack_memory_used@@Base+0x760>
   18990:	add	sp, sp, #16
   18994:	pop	{lr}		; (ldr lr, [sp], #4)
   18998:	add	sp, sp, #4
   1899c:	bx	lr
   189a0:	push	{r4, lr}
   189a4:	ldr	r3, [pc, #52]	; 189e0 <_obstack_memory_used@@Base+0x81c>
   189a8:	ldr	r1, [r3]
   189ac:	mov	r0, #10
   189b0:	bl	11610 <fputc@plt>
   189b4:	ldr	r1, [pc, #40]	; 189e4 <_obstack_memory_used@@Base+0x820>
   189b8:	ldr	r0, [pc, #40]	; 189e8 <_obstack_memory_used@@Base+0x824>
   189bc:	bl	113b8 <printf@plt>
   189c0:	ldr	r2, [pc, #36]	; 189ec <_obstack_memory_used@@Base+0x828>
   189c4:	ldr	r1, [pc, #36]	; 189f0 <_obstack_memory_used@@Base+0x82c>
   189c8:	ldr	r0, [pc, #36]	; 189f4 <_obstack_memory_used@@Base+0x830>
   189cc:	bl	113b8 <printf@plt>
   189d0:	ldr	r1, [pc, #32]	; 189f8 <_obstack_memory_used@@Base+0x834>
   189d4:	ldr	r0, [pc, #32]	; 189fc <_obstack_memory_used@@Base+0x838>
   189d8:	bl	113b8 <printf@plt>
   189dc:	pop	{r4, pc}
   189e0:	andeq	r2, r3, ip, asr #22
   189e4:	andeq	r0, r2, ip, ror #18
   189e8:	andeq	r0, r2, r4, lsl #19
   189ec:	muleq	r2, r8, r9
   189f0:	muleq	r2, ip, r6
   189f4:	andeq	r0, r2, r0, asr #19
   189f8:	ldrdeq	r0, [r2], -r4
   189fc:	strdeq	r0, [r2], -r4
   18a00:	push	{r4, lr}
   18a04:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   18a08:	cmp	r0, #0
   18a0c:	popne	{r4, pc}
   18a10:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18a14:	push	{r4, lr}
   18a18:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   18a1c:	cmp	r0, #0
   18a20:	popne	{r4, pc}
   18a24:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18a28:	push	{r4, lr}
   18a2c:	bl	18a00 <_obstack_memory_used@@Base+0x83c>
   18a30:	pop	{r4, pc}
   18a34:	push	{r4, r5, r6, lr}
   18a38:	mov	r5, r0
   18a3c:	mov	r4, r1
   18a40:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   18a44:	cmp	r0, #0
   18a48:	popne	{r4, r5, r6, pc}
   18a4c:	adds	r4, r4, #0
   18a50:	movne	r4, #1
   18a54:	cmp	r5, #0
   18a58:	orreq	r4, r4, #1
   18a5c:	cmp	r4, #0
   18a60:	popeq	{r4, r5, r6, pc}
   18a64:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18a68:	push	{r4, lr}
   18a6c:	cmp	r1, #0
   18a70:	orreq	r1, r1, #1
   18a74:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   18a78:	cmp	r0, #0
   18a7c:	popne	{r4, pc}
   18a80:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18a84:	push	{r4, r5, r6, lr}
   18a88:	mov	r6, r0
   18a8c:	mov	r5, r1
   18a90:	mov	r4, r2
   18a94:	bl	1ce34 <argp_error@@Base+0xd14>
   18a98:	cmp	r0, #0
   18a9c:	popne	{r4, r5, r6, pc}
   18aa0:	cmp	r6, #0
   18aa4:	beq	18ab4 <_obstack_memory_used@@Base+0x8f0>
   18aa8:	cmp	r5, #0
   18aac:	cmpne	r4, #0
   18ab0:	popeq	{r4, r5, r6, pc}
   18ab4:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18ab8:	push	{r4, lr}
   18abc:	bl	18a84 <_obstack_memory_used@@Base+0x8c0>
   18ac0:	pop	{r4, pc}
   18ac4:	push	{r4, lr}
   18ac8:	mov	ip, r1
   18acc:	mov	r3, r2
   18ad0:	cmp	r2, #0
   18ad4:	cmpne	r1, #0
   18ad8:	moveq	r3, #1
   18adc:	moveq	ip, r3
   18ae0:	mov	r2, r3
   18ae4:	mov	r1, ip
   18ae8:	bl	1ce34 <argp_error@@Base+0xd14>
   18aec:	cmp	r0, #0
   18af0:	popne	{r4, pc}
   18af4:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18af8:	push	{r4, lr}
   18afc:	mov	r2, r1
   18b00:	mov	r1, r0
   18b04:	mov	r0, #0
   18b08:	bl	18a84 <_obstack_memory_used@@Base+0x8c0>
   18b0c:	pop	{r4, pc}
   18b10:	push	{r4, lr}
   18b14:	mov	r2, r1
   18b18:	mov	r1, r0
   18b1c:	mov	r0, #0
   18b20:	bl	18ac4 <_obstack_memory_used@@Base+0x900>
   18b24:	pop	{r4, pc}
   18b28:	push	{r4, r5, r6, r7, r8, lr}
   18b2c:	mov	r5, r1
   18b30:	mov	r6, r2
   18b34:	ldr	r4, [r1]
   18b38:	subs	r7, r0, #0
   18b3c:	beq	18b58 <_obstack_memory_used@@Base+0x994>
   18b40:	lsr	r2, r4, #1
   18b44:	add	r3, r2, #1
   18b48:	mvn	r3, r3
   18b4c:	cmp	r4, r3
   18b50:	bls	18b7c <_obstack_memory_used@@Base+0x9b8>
   18b54:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18b58:	cmp	r4, #0
   18b5c:	bne	18b84 <_obstack_memory_used@@Base+0x9c0>
   18b60:	mov	r1, r2
   18b64:	mov	r0, #64	; 0x40
   18b68:	bl	1d60c <argp_error@@Base+0x14ec>
   18b6c:	cmp	r0, #0
   18b70:	movne	r4, r0
   18b74:	addeq	r4, r0, #1
   18b78:	b	18b84 <_obstack_memory_used@@Base+0x9c0>
   18b7c:	add	r4, r4, #1
   18b80:	add	r4, r4, r2
   18b84:	mov	r2, r6
   18b88:	mov	r1, r4
   18b8c:	mov	r0, r7
   18b90:	bl	18a84 <_obstack_memory_used@@Base+0x8c0>
   18b94:	str	r4, [r5]
   18b98:	pop	{r4, r5, r6, r7, r8, pc}
   18b9c:	push	{r4, lr}
   18ba0:	mov	r2, #1
   18ba4:	bl	18b28 <_obstack_memory_used@@Base+0x964>
   18ba8:	pop	{r4, pc}
   18bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bb0:	sub	sp, sp, #12
   18bb4:	mov	fp, r0
   18bb8:	mov	sl, r1
   18bbc:	mov	r9, r2
   18bc0:	mov	r7, r3
   18bc4:	ldr	r6, [sp, #48]	; 0x30
   18bc8:	ldr	r5, [r1]
   18bcc:	asrs	r4, r5, #1
   18bd0:	bmi	18d2c <_obstack_memory_used@@Base+0xb68>
   18bd4:	cmp	r5, #0
   18bd8:	blt	18d40 <_obstack_memory_used@@Base+0xb7c>
   18bdc:	mvn	r3, #-2147483648	; 0x80000000
   18be0:	sub	r3, r3, r4
   18be4:	cmp	r5, r3
   18be8:	movle	r3, #0
   18bec:	movgt	r3, #1
   18bf0:	cmp	r3, #0
   18bf4:	addeq	r4, r4, r5
   18bf8:	mvnne	r4, #-2147483648	; 0x80000000
   18bfc:	mvn	r8, r7
   18c00:	lsr	r8, r8, #31
   18c04:	cmp	r7, r4
   18c08:	movge	r3, #0
   18c0c:	andlt	r3, r8, #1
   18c10:	cmp	r3, #0
   18c14:	movne	r4, r7
   18c18:	cmp	r6, #0
   18c1c:	blt	18d54 <_obstack_memory_used@@Base+0xb90>
   18c20:	cmp	r6, #0
   18c24:	beq	18e00 <_obstack_memory_used@@Base+0xc3c>
   18c28:	cmp	r4, #0
   18c2c:	blt	18db0 <_obstack_memory_used@@Base+0xbec>
   18c30:	mov	r1, r6
   18c34:	mvn	r0, #-2147483648	; 0x80000000
   18c38:	bl	1d818 <argp_error@@Base+0x16f8>
   18c3c:	cmp	r0, r4
   18c40:	movge	r0, #0
   18c44:	movlt	r0, #1
   18c48:	cmp	r0, #0
   18c4c:	mvnne	r3, #-2147483648	; 0x80000000
   18c50:	strne	r3, [sp, #4]
   18c54:	beq	18de8 <_obstack_memory_used@@Base+0xc24>
   18c58:	mov	r1, r6
   18c5c:	ldr	r0, [sp, #4]
   18c60:	bl	1d818 <argp_error@@Base+0x16f8>
   18c64:	mov	r4, r0
   18c68:	mov	r1, r6
   18c6c:	ldr	r0, [sp, #4]
   18c70:	bl	1da38 <argp_error@@Base+0x1918>
   18c74:	ldr	r3, [sp, #4]
   18c78:	sub	r1, r3, r1
   18c7c:	cmp	fp, #0
   18c80:	moveq	r3, #0
   18c84:	streq	r3, [sl]
   18c88:	sub	r3, r4, r5
   18c8c:	cmp	r3, r9
   18c90:	bge	18d18 <_obstack_memory_used@@Base+0xb54>
   18c94:	cmp	r9, #0
   18c98:	blt	18e0c <_obstack_memory_used@@Base+0xc48>
   18c9c:	cmp	r5, #0
   18ca0:	blt	18e20 <_obstack_memory_used@@Base+0xc5c>
   18ca4:	mvn	r3, #-2147483648	; 0x80000000
   18ca8:	sub	r3, r3, r9
   18cac:	cmp	r5, r3
   18cb0:	movle	r3, #0
   18cb4:	movgt	r3, #1
   18cb8:	cmp	r3, #0
   18cbc:	bne	18ec8 <_obstack_memory_used@@Base+0xd04>
   18cc0:	add	r5, r5, r9
   18cc4:	mov	r4, r5
   18cc8:	cmp	r7, r5
   18ccc:	movge	r7, #0
   18cd0:	andlt	r7, r8, #1
   18cd4:	cmp	r7, #0
   18cd8:	bne	18ec8 <_obstack_memory_used@@Base+0xd04>
   18cdc:	cmp	r6, #0
   18ce0:	blt	18e34 <_obstack_memory_used@@Base+0xc70>
   18ce4:	cmp	r6, #0
   18ce8:	beq	18d14 <_obstack_memory_used@@Base+0xb50>
   18cec:	cmp	r5, #0
   18cf0:	blt	18e90 <_obstack_memory_used@@Base+0xccc>
   18cf4:	mov	r1, r6
   18cf8:	mvn	r0, #-2147483648	; 0x80000000
   18cfc:	bl	1d818 <argp_error@@Base+0x16f8>
   18d00:	cmp	r5, r0
   18d04:	movle	r0, #0
   18d08:	movgt	r0, #1
   18d0c:	cmp	r0, #0
   18d10:	bne	18ec8 <_obstack_memory_used@@Base+0xd04>
   18d14:	mul	r1, r5, r6
   18d18:	mov	r0, fp
   18d1c:	bl	18a34 <_obstack_memory_used@@Base+0x870>
   18d20:	str	r4, [sl]
   18d24:	add	sp, sp, #12
   18d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d2c:	rsb	r3, r4, #-2147483648	; 0x80000000
   18d30:	cmp	r5, r3
   18d34:	movge	r3, #0
   18d38:	movlt	r3, #1
   18d3c:	b	18bf0 <_obstack_memory_used@@Base+0xa2c>
   18d40:	rsb	r3, r5, #-2147483648	; 0x80000000
   18d44:	cmp	r4, r3
   18d48:	movge	r3, #0
   18d4c:	movlt	r3, #1
   18d50:	b	18bf0 <_obstack_memory_used@@Base+0xa2c>
   18d54:	cmp	r4, #0
   18d58:	blt	18d80 <_obstack_memory_used@@Base+0xbbc>
   18d5c:	cmn	r6, #1
   18d60:	beq	18d9c <_obstack_memory_used@@Base+0xbd8>
   18d64:	mov	r1, r6
   18d68:	mov	r0, #-2147483648	; 0x80000000
   18d6c:	bl	1d818 <argp_error@@Base+0x16f8>
   18d70:	cmp	r0, r4
   18d74:	movge	r0, #0
   18d78:	movlt	r0, #1
   18d7c:	b	18c48 <_obstack_memory_used@@Base+0xa84>
   18d80:	mov	r1, r6
   18d84:	mvn	r0, #-2147483648	; 0x80000000
   18d88:	bl	1d818 <argp_error@@Base+0x16f8>
   18d8c:	cmp	r0, r4
   18d90:	movle	r0, #0
   18d94:	movgt	r0, #1
   18d98:	b	18c48 <_obstack_memory_used@@Base+0xa84>
   18d9c:	add	r0, r4, #-2147483648	; 0x80000000
   18da0:	cmp	r0, #0
   18da4:	movle	r0, #0
   18da8:	movgt	r0, #1
   18dac:	b	18c48 <_obstack_memory_used@@Base+0xa84>
   18db0:	cmn	r4, #1
   18db4:	beq	18dd4 <_obstack_memory_used@@Base+0xc10>
   18db8:	mov	r1, r4
   18dbc:	mov	r0, #-2147483648	; 0x80000000
   18dc0:	bl	1d818 <argp_error@@Base+0x16f8>
   18dc4:	cmp	r6, r0
   18dc8:	movle	r0, #0
   18dcc:	movgt	r0, #1
   18dd0:	b	18c48 <_obstack_memory_used@@Base+0xa84>
   18dd4:	add	r0, r6, #-2147483648	; 0x80000000
   18dd8:	cmp	r0, #0
   18ddc:	movle	r0, #0
   18de0:	movgt	r0, #1
   18de4:	b	18c48 <_obstack_memory_used@@Base+0xa84>
   18de8:	mul	r1, r6, r4
   18dec:	cmp	r1, #63	; 0x3f
   18df0:	movle	r3, #64	; 0x40
   18df4:	strle	r3, [sp, #4]
   18df8:	bgt	18c7c <_obstack_memory_used@@Base+0xab8>
   18dfc:	b	18c58 <_obstack_memory_used@@Base+0xa94>
   18e00:	mov	r3, #64	; 0x40
   18e04:	str	r3, [sp, #4]
   18e08:	b	18c58 <_obstack_memory_used@@Base+0xa94>
   18e0c:	rsb	r3, r9, #-2147483648	; 0x80000000
   18e10:	cmp	r5, r3
   18e14:	movge	r3, #0
   18e18:	movlt	r3, #1
   18e1c:	b	18cb8 <_obstack_memory_used@@Base+0xaf4>
   18e20:	rsb	r3, r5, #-2147483648	; 0x80000000
   18e24:	cmp	r9, r3
   18e28:	movge	r3, #0
   18e2c:	movlt	r3, #1
   18e30:	b	18cb8 <_obstack_memory_used@@Base+0xaf4>
   18e34:	cmp	r5, #0
   18e38:	blt	18e60 <_obstack_memory_used@@Base+0xc9c>
   18e3c:	cmn	r6, #1
   18e40:	beq	18e7c <_obstack_memory_used@@Base+0xcb8>
   18e44:	mov	r1, r6
   18e48:	mov	r0, #-2147483648	; 0x80000000
   18e4c:	bl	1d818 <argp_error@@Base+0x16f8>
   18e50:	cmp	r5, r0
   18e54:	movle	r0, #0
   18e58:	movgt	r0, #1
   18e5c:	b	18d0c <_obstack_memory_used@@Base+0xb48>
   18e60:	mov	r1, r6
   18e64:	mvn	r0, #-2147483648	; 0x80000000
   18e68:	bl	1d818 <argp_error@@Base+0x16f8>
   18e6c:	cmp	r5, r0
   18e70:	movge	r0, #0
   18e74:	movlt	r0, #1
   18e78:	b	18d0c <_obstack_memory_used@@Base+0xb48>
   18e7c:	add	r0, r5, #-2147483648	; 0x80000000
   18e80:	cmp	r0, #0
   18e84:	movle	r0, #0
   18e88:	movgt	r0, #1
   18e8c:	b	18d0c <_obstack_memory_used@@Base+0xb48>
   18e90:	cmn	r5, #1
   18e94:	beq	18eb4 <_obstack_memory_used@@Base+0xcf0>
   18e98:	mov	r1, r5
   18e9c:	mov	r0, #-2147483648	; 0x80000000
   18ea0:	bl	1d818 <argp_error@@Base+0x16f8>
   18ea4:	cmp	r6, r0
   18ea8:	movle	r0, #0
   18eac:	movgt	r0, #1
   18eb0:	b	18d0c <_obstack_memory_used@@Base+0xb48>
   18eb4:	add	r0, r6, #-2147483648	; 0x80000000
   18eb8:	cmp	r0, #0
   18ebc:	movle	r0, #0
   18ec0:	movgt	r0, #1
   18ec4:	b	18d0c <_obstack_memory_used@@Base+0xb48>
   18ec8:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18ecc:	push	{r4, lr}
   18ed0:	bl	18fd0 <_obstack_memory_used@@Base+0xe0c>
   18ed4:	cmp	r0, #0
   18ed8:	popne	{r4, pc}
   18edc:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18ee0:	push	{r4, lr}
   18ee4:	mov	r1, #1
   18ee8:	bl	18ecc <_obstack_memory_used@@Base+0xd08>
   18eec:	pop	{r4, pc}
   18ef0:	push	{r4, lr}
   18ef4:	bl	18fd0 <_obstack_memory_used@@Base+0xe0c>
   18ef8:	cmp	r0, #0
   18efc:	popne	{r4, pc}
   18f00:	bl	18fa4 <_obstack_memory_used@@Base+0xde0>
   18f04:	push	{r4, lr}
   18f08:	mov	r1, #1
   18f0c:	bl	18ef0 <_obstack_memory_used@@Base+0xd2c>
   18f10:	pop	{r4, pc}
   18f14:	push	{r4, r5, r6, lr}
   18f18:	mov	r5, r0
   18f1c:	mov	r4, r1
   18f20:	mov	r0, r1
   18f24:	bl	18a00 <_obstack_memory_used@@Base+0x83c>
   18f28:	mov	r2, r4
   18f2c:	mov	r1, r5
   18f30:	bl	1140c <memcpy@plt>
   18f34:	pop	{r4, r5, r6, pc}
   18f38:	push	{r4, r5, r6, lr}
   18f3c:	mov	r5, r0
   18f40:	mov	r4, r1
   18f44:	mov	r0, r1
   18f48:	bl	18a14 <_obstack_memory_used@@Base+0x850>
   18f4c:	mov	r2, r4
   18f50:	mov	r1, r5
   18f54:	bl	1140c <memcpy@plt>
   18f58:	pop	{r4, r5, r6, pc}
   18f5c:	push	{r4, r5, r6, lr}
   18f60:	mov	r5, r0
   18f64:	mov	r4, r1
   18f68:	add	r0, r1, #1
   18f6c:	bl	18a14 <_obstack_memory_used@@Base+0x850>
   18f70:	mov	r2, #0
   18f74:	strb	r2, [r0, r4]
   18f78:	mov	r2, r4
   18f7c:	mov	r1, r5
   18f80:	bl	1140c <memcpy@plt>
   18f84:	pop	{r4, r5, r6, pc}
   18f88:	push	{r4, lr}
   18f8c:	mov	r4, r0
   18f90:	bl	11544 <strlen@plt>
   18f94:	add	r1, r0, #1
   18f98:	mov	r0, r4
   18f9c:	bl	18f14 <_obstack_memory_used@@Base+0xd50>
   18fa0:	pop	{r4, pc}
   18fa4:	push	{r4, lr}
   18fa8:	ldr	r3, [pc, #20]	; 18fc4 <_obstack_memory_used@@Base+0xe00>
   18fac:	ldr	r0, [r3]
   18fb0:	ldr	r3, [pc, #16]	; 18fc8 <_obstack_memory_used@@Base+0xe04>
   18fb4:	ldr	r2, [pc, #16]	; 18fcc <_obstack_memory_used@@Base+0xe08>
   18fb8:	mov	r1, #0
   18fbc:	bl	114a8 <error@plt>
   18fc0:	bl	116ac <abort@plt>
   18fc4:	andeq	r2, r3, r8, lsr #22
   18fc8:	andeq	r0, r2, ip, lsr #13
   18fcc:	muleq	r1, ip, r0
   18fd0:	push	{r4, lr}
   18fd4:	mov	r2, r0
   18fd8:	mov	r3, r1
   18fdc:	cmp	r1, #0
   18fe0:	cmpne	r0, #0
   18fe4:	moveq	r3, #1
   18fe8:	moveq	r2, r3
   18fec:	umull	r0, r1, r2, r3
   18ff0:	cmp	r0, #0
   18ff4:	cmpge	r1, #0
   18ff8:	bne	1900c <_obstack_memory_used@@Base+0xe48>
   18ffc:	mov	r1, r3
   19000:	mov	r0, r2
   19004:	bl	1134c <calloc@plt>
   19008:	pop	{r4, pc}
   1900c:	bl	11568 <__errno_location@plt>
   19010:	mov	r3, #12
   19014:	str	r3, [r0]
   19018:	mov	r0, #0
   1901c:	pop	{r4, pc}
   19020:	push	{r4, lr}
   19024:	cmp	r0, #0
   19028:	moveq	r0, #1
   1902c:	cmp	r0, #0
   19030:	blt	1903c <_obstack_memory_used@@Base+0xe78>
   19034:	bl	114cc <malloc@plt>
   19038:	pop	{r4, pc}
   1903c:	bl	11568 <__errno_location@plt>
   19040:	mov	r3, #12
   19044:	str	r3, [r0]
   19048:	mov	r0, #0
   1904c:	pop	{r4, pc}
   19050:	push	{r4, lr}
   19054:	cmp	r0, #0
   19058:	beq	19074 <_obstack_memory_used@@Base+0xeb0>
   1905c:	cmp	r1, #0
   19060:	beq	19080 <_obstack_memory_used@@Base+0xebc>
   19064:	cmp	r1, #0
   19068:	blt	1908c <_obstack_memory_used@@Base+0xec8>
   1906c:	bl	11448 <realloc@plt>
   19070:	pop	{r4, pc}
   19074:	mov	r0, r1
   19078:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1907c:	pop	{r4, pc}
   19080:	bl	17d44 <argp_parse@@Base+0xbf4>
   19084:	mov	r0, #0
   19088:	pop	{r4, pc}
   1908c:	bl	11568 <__errno_location@plt>
   19090:	mov	r3, #12
   19094:	str	r3, [r0]
   19098:	mov	r0, #0
   1909c:	pop	{r4, pc}
   190a0:	ldr	r3, [r0]
   190a4:	ldr	r2, [r0, #4]
   190a8:	cmp	r2, #0
   190ac:	beq	190e8 <_obstack_memory_used@@Base+0xf24>
   190b0:	add	r3, r3, #24
   190b4:	b	190c4 <_obstack_memory_used@@Base+0xf00>
   190b8:	add	r3, r3, #24
   190bc:	subs	r2, r2, #1
   190c0:	beq	190e0 <_obstack_memory_used@@Base+0xf1c>
   190c4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   190c8:	cmp	r0, #0
   190cc:	beq	190b8 <_obstack_memory_used@@Base+0xef4>
   190d0:	ldr	r1, [r3, #-12]
   190d4:	tst	r1, #2
   190d8:	bne	190b8 <_obstack_memory_used@@Base+0xef4>
   190dc:	bx	lr
   190e0:	mov	r0, #0
   190e4:	bx	lr
   190e8:	mov	r0, #0
   190ec:	bx	lr
   190f0:	ldr	r2, [r0, #8]
   190f4:	cmp	r2, #0
   190f8:	beq	19104 <_obstack_memory_used@@Base+0xf40>
   190fc:	mov	r0, #0
   19100:	bx	lr
   19104:	ldr	r2, [r1, #8]
   19108:	cmp	r2, #0
   1910c:	bne	190fc <_obstack_memory_used@@Base+0xf38>
   19110:	ldr	r2, [r0, #12]
   19114:	ldr	r1, [r1, #12]
   19118:	orr	r2, r2, r1
   1911c:	tst	r2, #16
   19120:	ldreq	r2, [r3]
   19124:	addeq	r1, r2, #1
   19128:	streq	r1, [r3]
   1912c:	ldreq	r3, [r0, #4]
   19130:	strbeq	r3, [r2]
   19134:	b	190fc <_obstack_memory_used@@Base+0xf38>
   19138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1913c:	sub	sp, sp, #12
   19140:	ldr	r4, [r0]
   19144:	ldr	r9, [r0, #8]
   19148:	ldr	r5, [r0, #4]
   1914c:	cmp	r5, #0
   19150:	beq	191a4 <_obstack_memory_used@@Base+0xfe0>
   19154:	str	r3, [sp, #4]
   19158:	str	r2, [sp]
   1915c:	mov	fp, r1
   19160:	mov	sl, r4
   19164:	mov	r8, #0
   19168:	b	191e4 <_obstack_memory_used@@Base+0x1020>
   1916c:	and	r3, r6, #4
   19170:	cmp	r3, #0
   19174:	moveq	sl, r4
   19178:	tst	r6, #2
   1917c:	beq	19188 <_obstack_memory_used@@Base+0xfc4>
   19180:	add	r9, r9, #1
   19184:	b	191c0 <_obstack_memory_used@@Base+0xffc>
   19188:	ldr	r3, [sp, #4]
   1918c:	ldr	r2, [sp]
   19190:	mov	r1, sl
   19194:	mov	r0, r4
   19198:	blx	fp
   1919c:	mov	r8, r0
   191a0:	b	19180 <_obstack_memory_used@@Base+0xfbc>
   191a4:	mov	r8, #0
   191a8:	mov	r0, r8
   191ac:	add	sp, sp, #12
   191b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191b4:	ldrb	r3, [r9]
   191b8:	cmp	r3, r7
   191bc:	beq	1916c <_obstack_memory_used@@Base+0xfa8>
   191c0:	add	r4, r4, #24
   191c4:	subs	r5, r5, #1
   191c8:	movne	r3, #1
   191cc:	moveq	r3, #0
   191d0:	cmp	r8, #0
   191d4:	movne	r3, #0
   191d8:	andeq	r3, r3, #1
   191dc:	cmp	r3, #0
   191e0:	beq	191a8 <_obstack_memory_used@@Base+0xfe4>
   191e4:	ldr	r6, [r4, #12]
   191e8:	tst	r6, #8
   191ec:	bne	191c0 <_obstack_memory_used@@Base+0xffc>
   191f0:	ldr	r7, [r4, #4]
   191f4:	sub	r3, r7, #1
   191f8:	cmp	r3, #254	; 0xfe
   191fc:	bhi	191c0 <_obstack_memory_used@@Base+0xffc>
   19200:	bl	11520 <__ctype_b_loc@plt>
   19204:	ldr	r2, [r0]
   19208:	lsl	r3, r7, #1
   1920c:	ldrh	r3, [r2, r3]
   19210:	tst	r3, #16384	; 0x4000
   19214:	bne	191b4 <_obstack_memory_used@@Base+0xff0>
   19218:	b	191c0 <_obstack_memory_used@@Base+0xffc>
   1921c:	push	{r4, r5, r6, lr}
   19220:	ldr	r4, [r0, #12]
   19224:	ands	r4, r4, #8
   19228:	movne	r4, #0
   1922c:	bne	1925c <_obstack_memory_used@@Base+0x1098>
   19230:	ldr	r5, [r0, #4]
   19234:	sub	r3, r5, #1
   19238:	cmp	r3, #254	; 0xfe
   1923c:	bhi	1925c <_obstack_memory_used@@Base+0x1098>
   19240:	bl	11520 <__ctype_b_loc@plt>
   19244:	ldr	r2, [r0]
   19248:	lsl	r3, r5, #1
   1924c:	ldrh	r3, [r2, r3]
   19250:	and	r3, r3, #16384	; 0x4000
   19254:	cmp	r3, #0
   19258:	movne	r4, r5
   1925c:	mov	r0, r4
   19260:	pop	{r4, r5, r6, pc}
   19264:	push	{r4, lr}
   19268:	mov	r4, r0
   1926c:	bl	11520 <__ctype_b_loc@plt>
   19270:	b	1927c <_obstack_memory_used@@Base+0x10b8>
   19274:	add	r3, r3, #1
   19278:	str	r3, [r4]
   1927c:	ldr	r3, [r4]
   19280:	ldrb	r2, [r3]
   19284:	ldr	ip, [r0]
   19288:	lsl	r1, r2, #1
   1928c:	ldrh	r1, [ip, r1]
   19290:	tst	r1, #8192	; 0x2000
   19294:	bne	19274 <_obstack_memory_used@@Base+0x10b0>
   19298:	subs	ip, r2, #45	; 0x2d
   1929c:	movne	ip, #1
   192a0:	cmp	r2, #0
   192a4:	beq	192d8 <_obstack_memory_used@@Base+0x1114>
   192a8:	tst	r1, #8
   192ac:	bne	192d8 <_obstack_memory_used@@Base+0x1114>
   192b0:	add	r3, r3, #1
   192b4:	str	r3, [r4]
   192b8:	ldrb	r2, [r3]
   192bc:	cmp	r2, #0
   192c0:	beq	192d8 <_obstack_memory_used@@Base+0x1114>
   192c4:	ldr	r1, [r0]
   192c8:	lsl	r2, r2, #1
   192cc:	ldrh	r2, [r1, r2]
   192d0:	tst	r2, #8
   192d4:	beq	192b0 <_obstack_memory_used@@Base+0x10ec>
   192d8:	mov	r0, ip
   192dc:	pop	{r4, pc}
   192e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192e4:	add	fp, sp, #32
   192e8:	sub	sp, sp, #12
   192ec:	ldr	r5, [r0, #4]
   192f0:	cmp	r5, #0
   192f4:	bne	19300 <_obstack_memory_used@@Base+0x113c>
   192f8:	sub	sp, fp, #32
   192fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19300:	mov	r9, r1
   19304:	mov	r6, r0
   19308:	ldr	r0, [r0, #8]
   1930c:	bl	11544 <strlen@plt>
   19310:	add	r3, r0, #15
   19314:	bic	r3, r3, #7
   19318:	sub	sp, sp, r3
   1931c:	mov	sl, sp
   19320:	sub	r7, fp, #36	; 0x24
   19324:	str	sp, [r7, #-4]!
   19328:	ldr	r4, [r6]
   1932c:	ldr	r8, [pc, #336]	; 19484 <_obstack_memory_used@@Base+0x12c0>
   19330:	ldr	r2, [r4, #20]
   19334:	mov	r3, r7
   19338:	ldr	r2, [r2, #24]
   1933c:	mov	r1, r8
   19340:	mov	r0, r4
   19344:	bl	19138 <_obstack_memory_used@@Base+0xf74>
   19348:	add	r4, r4, #28
   1934c:	subs	r5, r5, #1
   19350:	bne	19330 <_obstack_memory_used@@Base+0x116c>
   19354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19358:	cmp	sl, r3
   1935c:	bcc	193b4 <_obstack_memory_used@@Base+0x11f0>
   19360:	ldr	r4, [r6]
   19364:	ldr	r5, [r6, #4]
   19368:	cmp	r5, #0
   1936c:	beq	192f8 <_obstack_memory_used@@Base+0x1134>
   19370:	ldr	r7, [pc, #272]	; 19488 <_obstack_memory_used@@Base+0x12c4>
   19374:	ldr	r2, [r4, #20]
   19378:	mov	r3, r9
   1937c:	ldr	r2, [r2, #24]
   19380:	mov	r1, r7
   19384:	mov	r0, r4
   19388:	bl	19138 <_obstack_memory_used@@Base+0xf74>
   1938c:	add	r4, r4, #28
   19390:	subs	r5, r5, #1
   19394:	bne	19374 <_obstack_memory_used@@Base+0x11b0>
   19398:	ldr	r7, [r6]
   1939c:	ldr	r8, [r6, #4]
   193a0:	cmp	r8, #0
   193a4:	beq	192f8 <_obstack_memory_used@@Base+0x1134>
   193a8:	add	r7, r7, #28
   193ac:	ldr	sl, [pc, #216]	; 1948c <_obstack_memory_used@@Base+0x12c8>
   193b0:	b	1946c <_obstack_memory_used@@Base+0x12a8>
   193b4:	add	r2, r3, #1
   193b8:	str	r2, [fp, #-40]	; 0xffffffd8
   193bc:	mov	r2, #0
   193c0:	strb	r2, [r3]
   193c4:	mov	r2, sl
   193c8:	ldr	r1, [pc, #192]	; 19490 <_obstack_memory_used@@Base+0x12cc>
   193cc:	mov	r0, r9
   193d0:	bl	1d58c <argp_error@@Base+0x146c>
   193d4:	b	19360 <_obstack_memory_used@@Base+0x119c>
   193d8:	tst	r1, #16
   193dc:	bne	19400 <_obstack_memory_used@@Base+0x123c>
   193e0:	ldr	r3, [r6, #8]
   193e4:	cmp	r3, #0
   193e8:	beq	19450 <_obstack_memory_used@@Base+0x128c>
   193ec:	tst	r1, #1
   193f0:	ldrne	r1, [pc, #156]	; 19494 <_obstack_memory_used@@Base+0x12d0>
   193f4:	moveq	r1, sl
   193f8:	mov	r0, r9
   193fc:	bl	1d58c <argp_error@@Base+0x146c>
   19400:	add	r4, r4, #24
   19404:	subs	r5, r5, #1
   19408:	beq	19460 <_obstack_memory_used@@Base+0x129c>
   1940c:	ldr	r2, [r4]
   19410:	cmp	r2, #0
   19414:	beq	19400 <_obstack_memory_used@@Base+0x123c>
   19418:	ldr	r1, [r4, #12]
   1941c:	and	r3, r1, #4
   19420:	cmp	r3, #0
   19424:	moveq	r6, r4
   19428:	tst	r1, #2
   1942c:	bne	19400 <_obstack_memory_used@@Base+0x123c>
   19430:	ldr	r3, [r4, #8]
   19434:	ldr	r0, [r6, #12]
   19438:	orr	r1, r1, r0
   1943c:	cmp	r3, #0
   19440:	beq	193d8 <_obstack_memory_used@@Base+0x1214>
   19444:	tst	r1, #16
   19448:	beq	193ec <_obstack_memory_used@@Base+0x1228>
   1944c:	b	19400 <_obstack_memory_used@@Base+0x123c>
   19450:	ldr	r1, [pc, #64]	; 19498 <_obstack_memory_used@@Base+0x12d4>
   19454:	mov	r0, r9
   19458:	bl	1d58c <argp_error@@Base+0x146c>
   1945c:	b	19400 <_obstack_memory_used@@Base+0x123c>
   19460:	add	r7, r7, #28
   19464:	subs	r8, r8, #1
   19468:	beq	192f8 <_obstack_memory_used@@Base+0x1134>
   1946c:	ldr	r4, [r7, #-28]	; 0xffffffe4
   19470:	ldr	r5, [r7, #-24]	; 0xffffffe8
   19474:	cmp	r5, #0
   19478:	beq	19460 <_obstack_memory_used@@Base+0x129c>
   1947c:	mov	r6, r4
   19480:	b	1940c <_obstack_memory_used@@Base+0x1248>
   19484:	strdeq	r9, [r1], -r0
   19488:	andeq	r9, r1, r0, lsr r7
   1948c:	andeq	r0, r2, ip, lsl #22
   19490:	strdeq	r0, [r2], -r4
   19494:	strdeq	r0, [r2], -ip
   19498:	andeq	r0, r2, r8, lsl fp
   1949c:	push	{r4, r5, r6, lr}
   194a0:	mov	r5, r0
   194a4:	ldr	r0, [r0, #12]
   194a8:	cmp	r0, #0
   194ac:	beq	194c4 <_obstack_memory_used@@Base+0x1300>
   194b0:	ldr	r4, [r0, #24]
   194b4:	bl	17d44 <argp_parse@@Base+0xbf4>
   194b8:	mov	r0, r4
   194bc:	cmp	r4, #0
   194c0:	bne	194b0 <_obstack_memory_used@@Base+0x12ec>
   194c4:	ldr	r3, [r5, #4]
   194c8:	cmp	r3, #0
   194cc:	bne	194dc <_obstack_memory_used@@Base+0x1318>
   194d0:	mov	r0, r5
   194d4:	bl	17d44 <argp_parse@@Base+0xbf4>
   194d8:	pop	{r4, r5, r6, pc}
   194dc:	ldr	r0, [r5]
   194e0:	bl	17d44 <argp_parse@@Base+0xbf4>
   194e4:	ldr	r0, [r5, #8]
   194e8:	bl	17d44 <argp_parse@@Base+0xbf4>
   194ec:	b	194d0 <_obstack_memory_used@@Base+0x130c>
   194f0:	push	{r4, r5, r6, r7, r8, lr}
   194f4:	mov	r6, r1
   194f8:	ldr	r7, [r0]
   194fc:	ldr	r3, [r0, #4]
   19500:	sub	r8, r3, #1
   19504:	cmp	r3, #0
   19508:	bne	19564 <_obstack_memory_used@@Base+0x13a0>
   1950c:	mov	r7, #0
   19510:	b	1954c <_obstack_memory_used@@Base+0x1388>
   19514:	sub	r5, r5, #1
   19518:	add	r4, r4, #24
   1951c:	cmn	r5, #1
   19520:	beq	19554 <_obstack_memory_used@@Base+0x1390>
   19524:	ldr	r0, [r4, #-24]	; 0xffffffe8
   19528:	cmp	r0, #0
   1952c:	beq	19514 <_obstack_memory_used@@Base+0x1350>
   19530:	ldr	r3, [r4, #-12]
   19534:	tst	r3, #2
   19538:	bne	19514 <_obstack_memory_used@@Base+0x1350>
   1953c:	mov	r1, r6
   19540:	bl	113a0 <strcmp@plt>
   19544:	cmp	r0, #0
   19548:	bne	19514 <_obstack_memory_used@@Base+0x1350>
   1954c:	mov	r0, r7
   19550:	pop	{r4, r5, r6, r7, r8, pc}
   19554:	add	r7, r7, #28
   19558:	sub	r8, r8, #1
   1955c:	cmn	r8, #1
   19560:	beq	19580 <_obstack_memory_used@@Base+0x13bc>
   19564:	ldr	r4, [r7]
   19568:	ldr	r3, [r7, #4]
   1956c:	sub	r5, r3, #1
   19570:	cmp	r3, #0
   19574:	beq	19554 <_obstack_memory_used@@Base+0x1390>
   19578:	add	r4, r4, #24
   1957c:	b	19524 <_obstack_memory_used@@Base+0x1360>
   19580:	mov	r7, #0
   19584:	b	1954c <_obstack_memory_used@@Base+0x1388>
   19588:	push	{r4, r5, r6, lr}
   1958c:	ldr	r4, [r0, #16]
   19590:	ldr	r0, [r0, #8]
   19594:	cmp	r0, #0
   19598:	moveq	r5, #0
   1959c:	beq	195b0 <_obstack_memory_used@@Base+0x13ec>
   195a0:	mov	r1, #10
   195a4:	bl	11550 <strchr@plt>
   195a8:	adds	r5, r0, #0
   195ac:	movne	r5, #1
   195b0:	cmp	r4, #0
   195b4:	beq	195d8 <_obstack_memory_used@@Base+0x1414>
   195b8:	ldr	r0, [r4]
   195bc:	cmp	r0, #0
   195c0:	beq	195d8 <_obstack_memory_used@@Base+0x1414>
   195c4:	bl	19588 <_obstack_memory_used@@Base+0x13c4>
   195c8:	add	r5, r5, r0
   195cc:	ldr	r0, [r4, #16]!
   195d0:	cmp	r0, #0
   195d4:	bne	195c4 <_obstack_memory_used@@Base+0x1400>
   195d8:	mov	r0, r5
   195dc:	pop	{r4, r5, r6, pc}
   195e0:	push	{r4, r5, r6, r7, r8, lr}
   195e4:	mov	r4, r0
   195e8:	mov	r5, r1
   195ec:	ldr	r3, [r0, #28]
   195f0:	ldr	r2, [r0, #24]
   195f4:	sub	r3, r3, r2
   195f8:	ldr	r2, [r0, #16]
   195fc:	cmp	r3, r2
   19600:	bhi	1961c <_obstack_memory_used@@Base+0x1458>
   19604:	ldr	r3, [r4, #20]
   19608:	cmp	r3, #0
   1960c:	subge	r5, r5, r3
   19610:	mov	r6, #32
   19614:	mov	r7, #1
   19618:	b	19638 <_obstack_memory_used@@Base+0x1474>
   1961c:	bl	1cef8 <argp_error@@Base+0xdd8>
   19620:	b	19604 <_obstack_memory_used@@Base+0x1440>
   19624:	ldr	r3, [r4, #28]
   19628:	add	r2, r3, #1
   1962c:	str	r2, [r4, #28]
   19630:	strb	r6, [r3]
   19634:	sub	r5, r5, #1
   19638:	cmp	r5, #0
   1963c:	ble	19668 <_obstack_memory_used@@Base+0x14a4>
   19640:	ldr	r2, [r4, #28]
   19644:	ldr	r3, [r4, #32]
   19648:	cmp	r2, r3
   1964c:	bcc	19624 <_obstack_memory_used@@Base+0x1460>
   19650:	mov	r1, r7
   19654:	mov	r0, r4
   19658:	bl	1d49c <argp_error@@Base+0x137c>
   1965c:	cmp	r0, #0
   19660:	beq	19634 <_obstack_memory_used@@Base+0x1470>
   19664:	b	19624 <_obstack_memory_used@@Base+0x1460>
   19668:	pop	{r4, r5, r6, r7, r8, pc}
   1966c:	push	{r4, r5, r6, lr}
   19670:	mov	r4, r0
   19674:	mov	r5, r1
   19678:	ldr	r3, [r0, #28]
   1967c:	ldr	r2, [r0, #24]
   19680:	sub	r3, r3, r2
   19684:	ldr	r2, [r0, #16]
   19688:	cmp	r3, r2
   1968c:	bhi	196d0 <_obstack_memory_used@@Base+0x150c>
   19690:	ldr	r3, [r4, #20]
   19694:	cmp	r3, #0
   19698:	addge	r5, r5, r3
   1969c:	ldr	r3, [r4, #8]
   196a0:	cmp	r5, r3
   196a4:	bcc	196f0 <_obstack_memory_used@@Base+0x152c>
   196a8:	ldr	r2, [r4, #28]
   196ac:	ldr	r3, [r4, #32]
   196b0:	cmp	r2, r3
   196b4:	bcs	196d8 <_obstack_memory_used@@Base+0x1514>
   196b8:	ldr	r3, [r4, #28]
   196bc:	add	r2, r3, #1
   196c0:	str	r2, [r4, #28]
   196c4:	mov	r2, #10
   196c8:	strb	r2, [r3]
   196cc:	pop	{r4, r5, r6, pc}
   196d0:	bl	1cef8 <argp_error@@Base+0xdd8>
   196d4:	b	19690 <_obstack_memory_used@@Base+0x14cc>
   196d8:	mov	r1, #1
   196dc:	mov	r0, r4
   196e0:	bl	1d49c <argp_error@@Base+0x137c>
   196e4:	cmp	r0, #0
   196e8:	popeq	{r4, r5, r6, pc}
   196ec:	b	196b8 <_obstack_memory_used@@Base+0x14f4>
   196f0:	ldr	r2, [r4, #28]
   196f4:	ldr	r3, [r4, #32]
   196f8:	cmp	r2, r3
   196fc:	bcs	19718 <_obstack_memory_used@@Base+0x1554>
   19700:	ldr	r3, [r4, #28]
   19704:	add	r2, r3, #1
   19708:	str	r2, [r4, #28]
   1970c:	mov	r2, #32
   19710:	strb	r2, [r3]
   19714:	pop	{r4, r5, r6, pc}
   19718:	mov	r1, #1
   1971c:	mov	r0, r4
   19720:	bl	1d49c <argp_error@@Base+0x137c>
   19724:	cmp	r0, #0
   19728:	bne	19700 <_obstack_memory_used@@Base+0x153c>
   1972c:	pop	{r4, r5, r6, pc}
   19730:	push	{r4, r5, r6, lr}
   19734:	ldr	r5, [r0, #8]
   19738:	ldr	r2, [r0, #12]
   1973c:	ldr	ip, [r1, #12]
   19740:	orr	r2, r2, ip
   19744:	cmp	r5, #0
   19748:	beq	19794 <_obstack_memory_used@@Base+0x15d0>
   1974c:	tst	r2, #16
   19750:	bne	1978c <_obstack_memory_used@@Base+0x15c8>
   19754:	mov	r6, r3
   19758:	mov	r4, r0
   1975c:	tst	r2, #1
   19760:	bne	197a4 <_obstack_memory_used@@Base+0x15e0>
   19764:	mov	r0, r5
   19768:	bl	11544 <strlen@plt>
   1976c:	add	r1, r0, #6
   19770:	mov	r0, r6
   19774:	bl	1966c <_obstack_memory_used@@Base+0x14a8>
   19778:	mov	r3, r5
   1977c:	ldr	r2, [r4, #4]
   19780:	ldr	r1, [pc, #52]	; 197bc <_obstack_memory_used@@Base+0x15f8>
   19784:	mov	r0, r6
   19788:	bl	1d58c <argp_error@@Base+0x146c>
   1978c:	mov	r0, #0
   19790:	pop	{r4, r5, r6, pc}
   19794:	ldr	r5, [r1, #8]
   19798:	cmp	r5, #0
   1979c:	beq	1978c <_obstack_memory_used@@Base+0x15c8>
   197a0:	b	1974c <_obstack_memory_used@@Base+0x1588>
   197a4:	mov	r3, r5
   197a8:	ldr	r2, [r0, #4]
   197ac:	ldr	r1, [pc, #12]	; 197c0 <_obstack_memory_used@@Base+0x15fc>
   197b0:	mov	r0, r6
   197b4:	bl	1d58c <argp_error@@Base+0x146c>
   197b8:	b	1978c <_obstack_memory_used@@Base+0x15c8>
   197bc:	andeq	r0, r2, ip, lsr #22
   197c0:	andeq	r0, r2, r0, lsr #22
   197c4:	push	{r4, r5, r6, lr}
   197c8:	subs	r5, r2, #0
   197cc:	popeq	{r4, r5, r6, pc}
   197d0:	ldr	ip, [r5, #20]
   197d4:	cmp	ip, #0
   197d8:	popeq	{r4, r5, r6, pc}
   197dc:	mov	r6, r1
   197e0:	mov	r4, r0
   197e4:	mov	r1, r3
   197e8:	mov	r0, r5
   197ec:	bl	17bc4 <argp_parse@@Base+0xa74>
   197f0:	ldr	r3, [r5, #20]
   197f4:	mov	r2, r0
   197f8:	mov	r1, r4
   197fc:	mov	r0, r6
   19800:	blx	r3
   19804:	pop	{r4, r5, r6, pc}
   19808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1980c:	sub	sp, sp, #28
   19810:	str	r1, [sp, #16]
   19814:	mov	r8, r2
   19818:	mov	r4, r3
   1981c:	ldr	r5, [sp, #64]	; 0x40
   19820:	ldr	r3, [r2]
   19824:	mov	r6, r3
   19828:	str	r3, [sp, #20]
   1982c:	ldr	sl, [r0, #16]
   19830:	ldr	r2, [r0, #8]
   19834:	mov	ip, r2
   19838:	str	r2, [sp, #12]
   1983c:	mov	r3, r1
   19840:	mov	r2, r0
   19844:	ldr	r1, [pc, #424]	; 199f4 <_obstack_memory_used@@Base+0x1830>
   19848:	mov	r0, ip
   1984c:	bl	197c4 <_obstack_memory_used@@Base+0x1600>
   19850:	subs	r3, r0, #0
   19854:	str	r3, [sp, #8]
   19858:	beq	199e0 <_obstack_memory_used@@Base+0x181c>
   1985c:	mov	r1, #10
   19860:	mov	r0, r3
   19864:	bl	113d0 <strchrnul@plt>
   19868:	mov	r7, r0
   1986c:	ldrb	r3, [r0]
   19870:	cmp	r3, #0
   19874:	beq	199b0 <_obstack_memory_used@@Base+0x17ec>
   19878:	ldrb	fp, [r6]
   1987c:	cmp	fp, #0
   19880:	ble	199a8 <_obstack_memory_used@@Base+0x17e4>
   19884:	mov	r6, #0
   19888:	add	r9, r0, #1
   1988c:	mov	r1, #10
   19890:	mov	r0, r9
   19894:	bl	113d0 <strchrnul@plt>
   19898:	add	r6, r6, #1
   1989c:	cmp	r6, fp
   198a0:	bne	19888 <_obstack_memory_used@@Base+0x16c4>
   198a4:	mov	r7, r0
   198a8:	ldr	r3, [r8]
   198ac:	add	r3, r3, #1
   198b0:	str	r3, [r8]
   198b4:	mov	fp, #1
   198b8:	add	r1, r7, #1
   198bc:	sub	r1, r1, r9
   198c0:	mov	r0, r5
   198c4:	bl	1966c <_obstack_memory_used@@Base+0x14a8>
   198c8:	sub	r6, r7, r9
   198cc:	ldr	r3, [r5, #28]
   198d0:	add	r3, r3, r6
   198d4:	ldr	r2, [r5, #32]
   198d8:	cmp	r2, r3
   198dc:	bcs	198f4 <_obstack_memory_used@@Base+0x1730>
   198e0:	mov	r1, r6
   198e4:	mov	r0, r5
   198e8:	bl	1d49c <argp_error@@Base+0x137c>
   198ec:	cmp	r0, #0
   198f0:	beq	19910 <_obstack_memory_used@@Base+0x174c>
   198f4:	mov	r2, r6
   198f8:	mov	r1, r9
   198fc:	ldr	r0, [r5, #28]
   19900:	bl	1140c <memcpy@plt>
   19904:	ldr	r3, [r5, #28]
   19908:	add	r6, r3, r6
   1990c:	str	r6, [r5, #28]
   19910:	ldr	r3, [sp, #12]
   19914:	ldr	r2, [sp, #8]
   19918:	cmp	r3, r2
   1991c:	bne	199bc <_obstack_memory_used@@Base+0x17f8>
   19920:	cmp	sl, #0
   19924:	beq	19964 <_obstack_memory_used@@Base+0x17a0>
   19928:	ldr	r0, [sl]
   1992c:	cmp	r0, #0
   19930:	beq	19964 <_obstack_memory_used@@Base+0x17a0>
   19934:	mov	r3, r4
   19938:	ldr	r4, [sp, #16]
   1993c:	str	r5, [sp]
   19940:	mov	r2, r8
   19944:	mov	r1, r4
   19948:	bl	19808 <_obstack_memory_used@@Base+0x1644>
   1994c:	clz	r3, r0
   19950:	lsr	r3, r3, #5
   19954:	ldr	r0, [sl, #16]!
   19958:	cmp	r0, #0
   1995c:	bne	1993c <_obstack_memory_used@@Base+0x1778>
   19960:	mov	r4, r3
   19964:	cmp	r4, #0
   19968:	moveq	fp, #0
   1996c:	andne	fp, fp, #1
   19970:	cmp	fp, #0
   19974:	beq	19998 <_obstack_memory_used@@Base+0x17d4>
   19978:	ldrb	r3, [r7]
   1997c:	cmp	r3, #0
   19980:	bne	199c8 <_obstack_memory_used@@Base+0x1804>
   19984:	ldr	r2, [sp, #20]
   19988:	ldrb	r3, [r2]
   1998c:	cmp	r3, #0
   19990:	movne	r3, #0
   19994:	strbne	r3, [r2]
   19998:	clz	r0, r4
   1999c:	lsr	r0, r0, #5
   199a0:	add	sp, sp, #28
   199a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199a8:	ldr	r9, [sp, #8]
   199ac:	b	198a8 <_obstack_memory_used@@Base+0x16e4>
   199b0:	ldr	r9, [sp, #8]
   199b4:	mov	fp, #0
   199b8:	b	198b8 <_obstack_memory_used@@Base+0x16f4>
   199bc:	mov	r0, r2
   199c0:	bl	17d44 <argp_parse@@Base+0xbf4>
   199c4:	b	19920 <_obstack_memory_used@@Base+0x175c>
   199c8:	ldr	r2, [sp, #20]
   199cc:	ldrb	r3, [r2]
   199d0:	add	r3, r3, #1
   199d4:	strb	r3, [r2]
   199d8:	mov	r4, #0
   199dc:	b	19998 <_obstack_memory_used@@Base+0x17d4>
   199e0:	cmp	sl, #0
   199e4:	beq	19998 <_obstack_memory_used@@Base+0x17d4>
   199e8:	ldr	r7, [sp, #8]
   199ec:	mov	fp, #0
   199f0:	b	19928 <_obstack_memory_used@@Base+0x1764>
   199f4:	andeq	r0, r0, #6
   199f8:	push	{r4, r5, r6, r7, r8, lr}
   199fc:	mov	r7, r0
   19a00:	mov	r4, r2
   19a04:	ldr	r3, [r2, #16]
   19a08:	mov	r2, r1
   19a0c:	ldr	r1, [pc, #448]	; 19bd4 <_obstack_memory_used@@Base+0x1a10>
   19a10:	bl	197c4 <_obstack_memory_used@@Base+0x1600>
   19a14:	subs	r5, r0, #0
   19a18:	beq	19b6c <_obstack_memory_used@@Base+0x19a8>
   19a1c:	ldrb	r3, [r5]
   19a20:	cmp	r3, #0
   19a24:	beq	19b60 <_obstack_memory_used@@Base+0x199c>
   19a28:	ldr	r3, [r4, #8]
   19a2c:	ldr	r3, [r3]
   19a30:	cmp	r3, #0
   19a34:	beq	19a60 <_obstack_memory_used@@Base+0x189c>
   19a38:	ldr	r6, [r4, #4]
   19a3c:	ldr	r2, [r6, #28]
   19a40:	ldr	r3, [r6, #32]
   19a44:	cmp	r2, r3
   19a48:	bcs	19b80 <_obstack_memory_used@@Base+0x19bc>
   19a4c:	ldr	r3, [r6, #28]
   19a50:	add	r2, r3, #1
   19a54:	str	r2, [r6, #28]
   19a58:	mov	r2, #10
   19a5c:	strb	r2, [r3]
   19a60:	ldr	r8, [pc, #368]	; 19bd8 <_obstack_memory_used@@Base+0x1a14>
   19a64:	ldr	r1, [r8, #24]
   19a68:	ldr	r0, [r4, #4]
   19a6c:	bl	195e0 <_obstack_memory_used@@Base+0x141c>
   19a70:	ldr	r6, [r4, #4]
   19a74:	ldr	r8, [r8, #24]
   19a78:	ldr	r3, [r6, #28]
   19a7c:	ldr	r2, [r6, #24]
   19a80:	sub	r3, r3, r2
   19a84:	ldr	r2, [r6, #16]
   19a88:	cmp	r3, r2
   19a8c:	bhi	19b98 <_obstack_memory_used@@Base+0x19d4>
   19a90:	str	r8, [r6, #4]
   19a94:	ldr	r6, [r4, #4]
   19a98:	ldr	r3, [pc, #312]	; 19bd8 <_obstack_memory_used@@Base+0x1a14>
   19a9c:	ldr	r8, [r3, #24]
   19aa0:	ldr	r3, [r6, #28]
   19aa4:	ldr	r2, [r6, #24]
   19aa8:	sub	r3, r3, r2
   19aac:	ldr	r2, [r6, #16]
   19ab0:	cmp	r3, r2
   19ab4:	bhi	19ba4 <_obstack_memory_used@@Base+0x19e0>
   19ab8:	str	r8, [r6, #12]
   19abc:	mov	r0, r5
   19ac0:	bl	11544 <strlen@plt>
   19ac4:	subs	r8, r0, #0
   19ac8:	beq	19b14 <_obstack_memory_used@@Base+0x1950>
   19acc:	ldr	r6, [r4, #4]
   19ad0:	ldr	r3, [r6, #28]
   19ad4:	add	r3, r3, r8
   19ad8:	ldr	r2, [r6, #32]
   19adc:	cmp	r2, r3
   19ae0:	bcs	19af8 <_obstack_memory_used@@Base+0x1934>
   19ae4:	mov	r1, r8
   19ae8:	mov	r0, r6
   19aec:	bl	1d49c <argp_error@@Base+0x137c>
   19af0:	cmp	r0, #0
   19af4:	beq	19b14 <_obstack_memory_used@@Base+0x1950>
   19af8:	mov	r2, r8
   19afc:	mov	r1, r5
   19b00:	ldr	r0, [r6, #28]
   19b04:	bl	1140c <memcpy@plt>
   19b08:	ldr	r3, [r6, #28]
   19b0c:	add	r8, r3, r8
   19b10:	str	r8, [r6, #28]
   19b14:	ldr	r6, [r4, #4]
   19b18:	ldr	r3, [r6, #28]
   19b1c:	ldr	r2, [r6, #24]
   19b20:	sub	r3, r3, r2
   19b24:	ldr	r2, [r6, #16]
   19b28:	cmp	r3, r2
   19b2c:	bhi	19bb0 <_obstack_memory_used@@Base+0x19ec>
   19b30:	mov	r3, #0
   19b34:	str	r3, [r6, #4]
   19b38:	ldr	r6, [r4, #4]
   19b3c:	ldr	r2, [r6, #28]
   19b40:	ldr	r3, [r6, #32]
   19b44:	cmp	r2, r3
   19b48:	bcs	19bbc <_obstack_memory_used@@Base+0x19f8>
   19b4c:	ldr	r3, [r6, #28]
   19b50:	add	r2, r3, #1
   19b54:	str	r2, [r6, #28]
   19b58:	mov	r2, #10
   19b5c:	strb	r2, [r3]
   19b60:	ldr	r3, [r4, #8]
   19b64:	mov	r2, #1
   19b68:	str	r2, [r3, #4]
   19b6c:	cmp	r7, r5
   19b70:	popeq	{r4, r5, r6, r7, r8, pc}
   19b74:	mov	r0, r5
   19b78:	bl	17d44 <argp_parse@@Base+0xbf4>
   19b7c:	pop	{r4, r5, r6, r7, r8, pc}
   19b80:	mov	r1, #1
   19b84:	mov	r0, r6
   19b88:	bl	1d49c <argp_error@@Base+0x137c>
   19b8c:	cmp	r0, #0
   19b90:	beq	19a60 <_obstack_memory_used@@Base+0x189c>
   19b94:	b	19a4c <_obstack_memory_used@@Base+0x1888>
   19b98:	mov	r0, r6
   19b9c:	bl	1cef8 <argp_error@@Base+0xdd8>
   19ba0:	b	19a90 <_obstack_memory_used@@Base+0x18cc>
   19ba4:	mov	r0, r6
   19ba8:	bl	1cef8 <argp_error@@Base+0xdd8>
   19bac:	b	19ab8 <_obstack_memory_used@@Base+0x18f4>
   19bb0:	mov	r0, r6
   19bb4:	bl	1cef8 <argp_error@@Base+0xdd8>
   19bb8:	b	19b30 <_obstack_memory_used@@Base+0x196c>
   19bbc:	mov	r1, #1
   19bc0:	mov	r0, r6
   19bc4:	bl	1d49c <argp_error@@Base+0x137c>
   19bc8:	cmp	r0, #0
   19bcc:	beq	19b60 <_obstack_memory_used@@Base+0x199c>
   19bd0:	b	19b4c <_obstack_memory_used@@Base+0x1988>
   19bd4:	andeq	r0, r0, #3
   19bd8:	andeq	r2, r3, r0, lsl #22
   19bdc:	push	{r4, r5, r6, r7, r8, lr}
   19be0:	mov	r6, r0
   19be4:	mov	r4, r1
   19be8:	ldr	r3, [r1, #12]
   19bec:	cmp	r3, #0
   19bf0:	beq	19d10 <_obstack_memory_used@@Base+0x1b4c>
   19bf4:	ldr	r3, [r1, #8]
   19bf8:	ldr	r7, [r3]
   19bfc:	ldr	r2, [r1]
   19c00:	ldr	r5, [r2, #16]
   19c04:	ldr	r3, [r3, #4]
   19c08:	cmp	r3, #0
   19c0c:	cmpne	r7, #0
   19c10:	beq	19c4c <_obstack_memory_used@@Base+0x1a88>
   19c14:	ldr	r2, [r2, #12]
   19c18:	ldr	r3, [r7, #12]
   19c1c:	cmp	r2, r3
   19c20:	beq	19c4c <_obstack_memory_used@@Base+0x1a88>
   19c24:	ldr	r8, [r1, #4]
   19c28:	ldr	r2, [r8, #28]
   19c2c:	ldr	r3, [r8, #32]
   19c30:	cmp	r2, r3
   19c34:	bcs	19cec <_obstack_memory_used@@Base+0x1b28>
   19c38:	ldr	r3, [r8, #28]
   19c3c:	add	r2, r3, #1
   19c40:	str	r2, [r8, #28]
   19c44:	mov	r2, #10
   19c48:	strb	r2, [r3]
   19c4c:	cmp	r5, #0
   19c50:	beq	19cd4 <_obstack_memory_used@@Base+0x1b10>
   19c54:	ldr	r0, [r5]
   19c58:	cmp	r0, #0
   19c5c:	beq	19cd4 <_obstack_memory_used@@Base+0x1b10>
   19c60:	ldrb	r3, [r0]
   19c64:	cmp	r3, #0
   19c68:	beq	19cd4 <_obstack_memory_used@@Base+0x1b10>
   19c6c:	cmp	r7, #0
   19c70:	beq	19ca0 <_obstack_memory_used@@Base+0x1adc>
   19c74:	ldr	r3, [r7, #16]
   19c78:	cmp	r5, r3
   19c7c:	beq	19cd4 <_obstack_memory_used@@Base+0x1b10>
   19c80:	cmp	r3, #0
   19c84:	beq	19ca0 <_obstack_memory_used@@Base+0x1adc>
   19c88:	ldr	r3, [r3, #12]
   19c8c:	cmp	r3, #0
   19c90:	cmpne	r5, r3
   19c94:	bne	19c88 <_obstack_memory_used@@Base+0x1ac4>
   19c98:	cmp	r5, r3
   19c9c:	beq	19cd4 <_obstack_memory_used@@Base+0x1b10>
   19ca0:	ldr	r3, [r4, #4]
   19ca4:	ldr	r7, [r3, #12]
   19ca8:	mov	r2, r4
   19cac:	ldr	r1, [r5, #16]
   19cb0:	bl	199f8 <_obstack_memory_used@@Base+0x1834>
   19cb4:	ldr	r5, [r4, #4]
   19cb8:	ldr	r3, [r5, #28]
   19cbc:	ldr	r2, [r5, #24]
   19cc0:	sub	r3, r3, r2
   19cc4:	ldr	r2, [r5, #16]
   19cc8:	cmp	r3, r2
   19ccc:	bhi	19d04 <_obstack_memory_used@@Base+0x1b40>
   19cd0:	str	r7, [r5, #12]
   19cd4:	mov	r3, #0
   19cd8:	str	r3, [r4, #12]
   19cdc:	mov	r1, r6
   19ce0:	ldr	r0, [r4, #4]
   19ce4:	bl	195e0 <_obstack_memory_used@@Base+0x141c>
   19ce8:	pop	{r4, r5, r6, r7, r8, pc}
   19cec:	mov	r1, #1
   19cf0:	mov	r0, r8
   19cf4:	bl	1d49c <argp_error@@Base+0x137c>
   19cf8:	cmp	r0, #0
   19cfc:	beq	19c4c <_obstack_memory_used@@Base+0x1a88>
   19d00:	b	19c38 <_obstack_memory_used@@Base+0x1a74>
   19d04:	mov	r0, r5
   19d08:	bl	1cef8 <argp_error@@Base+0xdd8>
   19d0c:	b	19cd0 <_obstack_memory_used@@Base+0x1b0c>
   19d10:	ldr	r5, [r1, #4]
   19d14:	ldr	r3, [r5, #28]
   19d18:	add	r3, r3, #2
   19d1c:	ldr	r2, [r5, #32]
   19d20:	cmp	r2, r3
   19d24:	bcs	19d3c <_obstack_memory_used@@Base+0x1b78>
   19d28:	mov	r1, #2
   19d2c:	mov	r0, r5
   19d30:	bl	1d49c <argp_error@@Base+0x137c>
   19d34:	cmp	r0, #0
   19d38:	beq	19cdc <_obstack_memory_used@@Base+0x1b18>
   19d3c:	ldr	r3, [r5, #28]
   19d40:	ldr	r2, [pc, #20]	; 19d5c <_obstack_memory_used@@Base+0x1b98>
   19d44:	ldrh	r2, [r2]
   19d48:	strh	r2, [r3]
   19d4c:	ldr	r3, [r5, #28]
   19d50:	add	r3, r3, #2
   19d54:	str	r3, [r5, #28]
   19d58:	b	19cdc <_obstack_memory_used@@Base+0x1b18>
   19d5c:	andeq	r0, r2, r8, lsr fp
   19d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d64:	sub	sp, sp, #28
   19d68:	mov	fp, r0
   19d6c:	str	r1, [sp, #8]
   19d70:	mov	r6, r2
   19d74:	mov	r8, r3
   19d78:	ldr	r7, [sp, #64]	; 0x40
   19d7c:	ldr	r5, [sp, #68]	; 0x44
   19d80:	ldr	r9, [r0, #12]
   19d84:	ldr	r3, [r0, #16]
   19d88:	str	r3, [sp, #16]
   19d8c:	cmp	r9, #0
   19d90:	beq	1a1ec <_obstack_memory_used@@Base+0x2028>
   19d94:	mov	r1, #11
   19d98:	mov	r0, r9
   19d9c:	bl	11550 <strchr@plt>
   19da0:	cmp	r6, #0
   19da4:	beq	1a09c <_obstack_memory_used@@Base+0x1ed8>
   19da8:	cmp	r0, #0
   19dac:	addne	r9, r0, #1
   19db0:	beq	1a1d4 <_obstack_memory_used@@Base+0x2010>
   19db4:	ldr	r3, [fp, #20]
   19db8:	cmp	r3, #0
   19dbc:	movne	sl, #0
   19dc0:	beq	1a1dc <_obstack_memory_used@@Base+0x2018>
   19dc4:	ldr	r1, [sp, #8]
   19dc8:	mov	r0, fp
   19dcc:	bl	17bc4 <argp_parse@@Base+0xa74>
   19dd0:	str	r0, [sp, #12]
   19dd4:	ldr	r3, [fp, #20]
   19dd8:	ldr	r2, [pc, #1140]	; 1a254 <_obstack_memory_used@@Base+0x2090>
   19ddc:	ldr	r0, [pc, #1140]	; 1a258 <_obstack_memory_used@@Base+0x2094>
   19de0:	cmp	r6, #0
   19de4:	moveq	r0, r2
   19de8:	ldr	r2, [sp, #12]
   19dec:	mov	r1, r9
   19df0:	blx	r3
   19df4:	mov	r4, r0
   19df8:	cmp	r4, #0
   19dfc:	beq	1a18c <_obstack_memory_used@@Base+0x1fc8>
   19e00:	cmp	r8, #0
   19e04:	beq	19e2c <_obstack_memory_used@@Base+0x1c68>
   19e08:	ldr	r2, [r5, #28]
   19e0c:	ldr	r3, [r5, #32]
   19e10:	cmp	r2, r3
   19e14:	bcs	1a0e0 <_obstack_memory_used@@Base+0x1f1c>
   19e18:	ldr	r3, [r5, #28]
   19e1c:	add	r2, r3, #1
   19e20:	str	r2, [r5, #28]
   19e24:	mov	r2, #10
   19e28:	strb	r2, [r3]
   19e2c:	cmp	r4, r9
   19e30:	movne	r3, #0
   19e34:	moveq	r3, #1
   19e38:	cmp	sl, #0
   19e3c:	moveq	r3, #0
   19e40:	cmp	r3, #0
   19e44:	beq	1a0f8 <_obstack_memory_used@@Base+0x1f34>
   19e48:	ldr	r3, [r5, #28]
   19e4c:	add	r3, r3, sl
   19e50:	ldr	r2, [r5, #32]
   19e54:	cmp	r2, r3
   19e58:	bcs	19e70 <_obstack_memory_used@@Base+0x1cac>
   19e5c:	mov	r1, sl
   19e60:	mov	r0, r5
   19e64:	bl	1d49c <argp_error@@Base+0x137c>
   19e68:	cmp	r0, #0
   19e6c:	beq	19e8c <_obstack_memory_used@@Base+0x1cc8>
   19e70:	mov	r2, sl
   19e74:	mov	r1, r9
   19e78:	ldr	r0, [r5, #28]
   19e7c:	bl	1140c <memcpy@plt>
   19e80:	ldr	r3, [r5, #28]
   19e84:	add	r3, r3, sl
   19e88:	str	r3, [r5, #28]
   19e8c:	ldr	r3, [r5, #28]
   19e90:	ldr	r2, [r5, #24]
   19e94:	sub	r3, r3, r2
   19e98:	ldr	r2, [r5, #16]
   19e9c:	cmp	r3, r2
   19ea0:	bhi	1a158 <_obstack_memory_used@@Base+0x1f94>
   19ea4:	ldr	r3, [r5, #20]
   19ea8:	bic	r3, r3, r3, asr #31
   19eac:	ldr	r2, [r5, #4]
   19eb0:	cmp	r2, r3
   19eb4:	bcs	19edc <_obstack_memory_used@@Base+0x1d18>
   19eb8:	ldr	r2, [r5, #28]
   19ebc:	ldr	r3, [r5, #32]
   19ec0:	cmp	r2, r3
   19ec4:	bcs	1a164 <_obstack_memory_used@@Base+0x1fa0>
   19ec8:	ldr	r3, [r5, #28]
   19ecc:	add	r2, r3, #1
   19ed0:	str	r2, [r5, #28]
   19ed4:	mov	r2, #10
   19ed8:	strb	r2, [r3]
   19edc:	cmp	r4, r9
   19ee0:	moveq	r4, #1
   19ee4:	bne	1a17c <_obstack_memory_used@@Base+0x1fb8>
   19ee8:	cmp	r9, #0
   19eec:	cmpne	sl, #0
   19ef0:	beq	19f08 <_obstack_memory_used@@Base+0x1d44>
   19ef4:	ldr	r3, [fp, #20]
   19ef8:	cmp	r3, #0
   19efc:	beq	1a014 <_obstack_memory_used@@Base+0x1e50>
   19f00:	mov	r0, r9
   19f04:	bl	17d44 <argp_parse@@Base+0xbf4>
   19f08:	cmp	r6, #0
   19f0c:	beq	1a014 <_obstack_memory_used@@Base+0x1e50>
   19f10:	ldr	r3, [fp, #20]
   19f14:	cmp	r3, #0
   19f18:	beq	1a014 <_obstack_memory_used@@Base+0x1e50>
   19f1c:	ldr	r2, [sp, #12]
   19f20:	mov	r1, #0
   19f24:	ldr	r0, [pc, #816]	; 1a25c <_obstack_memory_used@@Base+0x2098>
   19f28:	blx	r3
   19f2c:	subs	r9, r0, #0
   19f30:	beq	1a014 <_obstack_memory_used@@Base+0x1e50>
   19f34:	orrs	r3, r8, r4
   19f38:	beq	19f60 <_obstack_memory_used@@Base+0x1d9c>
   19f3c:	ldr	r2, [r5, #28]
   19f40:	ldr	r3, [r5, #32]
   19f44:	cmp	r2, r3
   19f48:	bcs	1a194 <_obstack_memory_used@@Base+0x1fd0>
   19f4c:	ldr	r3, [r5, #28]
   19f50:	add	r2, r3, #1
   19f54:	str	r2, [r5, #28]
   19f58:	mov	r2, #10
   19f5c:	strb	r2, [r3]
   19f60:	mov	r0, r9
   19f64:	bl	11544 <strlen@plt>
   19f68:	subs	r4, r0, #0
   19f6c:	beq	19fb4 <_obstack_memory_used@@Base+0x1df0>
   19f70:	ldr	r3, [r5, #28]
   19f74:	add	r3, r3, r4
   19f78:	ldr	r2, [r5, #32]
   19f7c:	cmp	r2, r3
   19f80:	bcs	19f98 <_obstack_memory_used@@Base+0x1dd4>
   19f84:	mov	r1, r4
   19f88:	mov	r0, r5
   19f8c:	bl	1d49c <argp_error@@Base+0x137c>
   19f90:	cmp	r0, #0
   19f94:	beq	19fb4 <_obstack_memory_used@@Base+0x1df0>
   19f98:	mov	r2, r4
   19f9c:	mov	r1, r9
   19fa0:	ldr	r0, [r5, #28]
   19fa4:	bl	1140c <memcpy@plt>
   19fa8:	ldr	r3, [r5, #28]
   19fac:	add	r4, r3, r4
   19fb0:	str	r4, [r5, #28]
   19fb4:	mov	r0, r9
   19fb8:	bl	17d44 <argp_parse@@Base+0xbf4>
   19fbc:	ldr	r3, [r5, #28]
   19fc0:	ldr	r2, [r5, #24]
   19fc4:	sub	r3, r3, r2
   19fc8:	ldr	r2, [r5, #16]
   19fcc:	cmp	r3, r2
   19fd0:	bhi	1a1ac <_obstack_memory_used@@Base+0x1fe8>
   19fd4:	ldr	r3, [r5, #20]
   19fd8:	bic	r3, r3, r3, asr #31
   19fdc:	ldr	r2, [r5, #4]
   19fe0:	cmp	r2, r3
   19fe4:	movcs	r4, #1
   19fe8:	bcs	1a014 <_obstack_memory_used@@Base+0x1e50>
   19fec:	ldr	r2, [r5, #28]
   19ff0:	ldr	r3, [r5, #32]
   19ff4:	cmp	r2, r3
   19ff8:	bcs	1a1b8 <_obstack_memory_used@@Base+0x1ff4>
   19ffc:	ldr	r3, [r5, #28]
   1a000:	add	r2, r3, #1
   1a004:	str	r2, [r5, #28]
   1a008:	mov	r2, #10
   1a00c:	strb	r2, [r3]
   1a010:	mov	r4, #1
   1a014:	ldr	r3, [sp, #16]
   1a018:	cmp	r3, #0
   1a01c:	beq	1a090 <_obstack_memory_used@@Base+0x1ecc>
   1a020:	ldr	r0, [r3]
   1a024:	cmp	r0, #0
   1a028:	beq	1a090 <_obstack_memory_used@@Base+0x1ecc>
   1a02c:	clz	r9, r7
   1a030:	lsr	r9, r9, #5
   1a034:	cmp	r7, #0
   1a038:	cmpne	r4, #0
   1a03c:	bne	1a090 <_obstack_memory_used@@Base+0x1ecc>
   1a040:	mov	sl, r3
   1a044:	ldr	fp, [sp, #8]
   1a048:	orrs	r3, r8, r4
   1a04c:	str	r5, [sp, #4]
   1a050:	str	r7, [sp]
   1a054:	movne	r3, #1
   1a058:	moveq	r3, #0
   1a05c:	mov	r2, r6
   1a060:	mov	r1, fp
   1a064:	bl	19d60 <_obstack_memory_used@@Base+0x1b9c>
   1a068:	orr	r4, r4, r0
   1a06c:	ldr	r0, [sl, #16]
   1a070:	cmp	r0, #0
   1a074:	beq	1a090 <_obstack_memory_used@@Base+0x1ecc>
   1a078:	add	sl, sl, #16
   1a07c:	cmp	r4, #0
   1a080:	movne	r3, r9
   1a084:	orreq	r3, r9, #1
   1a088:	cmp	r3, #0
   1a08c:	bne	1a048 <_obstack_memory_used@@Base+0x1e84>
   1a090:	mov	r0, r4
   1a094:	add	sp, sp, #28
   1a098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a09c:	cmp	r0, #0
   1a0a0:	beq	1a224 <_obstack_memory_used@@Base+0x2060>
   1a0a4:	sub	sl, r0, r9
   1a0a8:	ldr	r3, [fp, #20]
   1a0ac:	cmp	r3, #0
   1a0b0:	beq	1a0d0 <_obstack_memory_used@@Base+0x1f0c>
   1a0b4:	cmp	sl, #0
   1a0b8:	beq	19dc4 <_obstack_memory_used@@Base+0x1c00>
   1a0bc:	mov	r1, sl
   1a0c0:	mov	r0, r9
   1a0c4:	bl	11400 <strndup@plt>
   1a0c8:	mov	r9, r0
   1a0cc:	b	19dc4 <_obstack_memory_used@@Base+0x1c00>
   1a0d0:	mov	r4, r9
   1a0d4:	mov	r3, #0
   1a0d8:	str	r3, [sp, #12]
   1a0dc:	b	19e00 <_obstack_memory_used@@Base+0x1c3c>
   1a0e0:	mov	r1, #1
   1a0e4:	mov	r0, r5
   1a0e8:	bl	1d49c <argp_error@@Base+0x137c>
   1a0ec:	cmp	r0, #0
   1a0f0:	beq	19e2c <_obstack_memory_used@@Base+0x1c68>
   1a0f4:	b	19e18 <_obstack_memory_used@@Base+0x1c54>
   1a0f8:	mov	r0, r4
   1a0fc:	bl	11544 <strlen@plt>
   1a100:	subs	r3, r0, #0
   1a104:	mov	r1, r3
   1a108:	str	r3, [sp, #20]
   1a10c:	beq	19e8c <_obstack_memory_used@@Base+0x1cc8>
   1a110:	ldr	r3, [r5, #28]
   1a114:	add	r3, r3, r1
   1a118:	ldr	r2, [r5, #32]
   1a11c:	cmp	r2, r3
   1a120:	bcs	1a134 <_obstack_memory_used@@Base+0x1f70>
   1a124:	mov	r0, r5
   1a128:	bl	1d49c <argp_error@@Base+0x137c>
   1a12c:	cmp	r0, #0
   1a130:	beq	19e8c <_obstack_memory_used@@Base+0x1cc8>
   1a134:	ldr	r2, [sp, #20]
   1a138:	mov	r1, r4
   1a13c:	ldr	r0, [r5, #28]
   1a140:	bl	1140c <memcpy@plt>
   1a144:	ldr	r3, [r5, #28]
   1a148:	ldr	r2, [sp, #20]
   1a14c:	add	r3, r3, r2
   1a150:	str	r3, [r5, #28]
   1a154:	b	19e8c <_obstack_memory_used@@Base+0x1cc8>
   1a158:	mov	r0, r5
   1a15c:	bl	1cef8 <argp_error@@Base+0xdd8>
   1a160:	b	19ea4 <_obstack_memory_used@@Base+0x1ce0>
   1a164:	mov	r1, #1
   1a168:	mov	r0, r5
   1a16c:	bl	1d49c <argp_error@@Base+0x137c>
   1a170:	cmp	r0, #0
   1a174:	beq	19edc <_obstack_memory_used@@Base+0x1d18>
   1a178:	b	19ec8 <_obstack_memory_used@@Base+0x1d04>
   1a17c:	mov	r0, r4
   1a180:	bl	17d44 <argp_parse@@Base+0xbf4>
   1a184:	mov	r4, #1
   1a188:	b	19ee8 <_obstack_memory_used@@Base+0x1d24>
   1a18c:	mov	r4, #0
   1a190:	b	19ee8 <_obstack_memory_used@@Base+0x1d24>
   1a194:	mov	r1, #1
   1a198:	mov	r0, r5
   1a19c:	bl	1d49c <argp_error@@Base+0x137c>
   1a1a0:	cmp	r0, #0
   1a1a4:	beq	19f60 <_obstack_memory_used@@Base+0x1d9c>
   1a1a8:	b	19f4c <_obstack_memory_used@@Base+0x1d88>
   1a1ac:	mov	r0, r5
   1a1b0:	bl	1cef8 <argp_error@@Base+0xdd8>
   1a1b4:	b	19fd4 <_obstack_memory_used@@Base+0x1e10>
   1a1b8:	mov	r1, #1
   1a1bc:	mov	r0, r5
   1a1c0:	bl	1d49c <argp_error@@Base+0x137c>
   1a1c4:	cmp	r0, #0
   1a1c8:	moveq	r4, #1
   1a1cc:	beq	1a014 <_obstack_memory_used@@Base+0x1e50>
   1a1d0:	b	19ffc <_obstack_memory_used@@Base+0x1e38>
   1a1d4:	mov	r9, #0
   1a1d8:	b	19db4 <_obstack_memory_used@@Base+0x1bf0>
   1a1dc:	mov	r4, r9
   1a1e0:	mov	sl, #0
   1a1e4:	str	sl, [sp, #12]
   1a1e8:	b	19df8 <_obstack_memory_used@@Base+0x1c34>
   1a1ec:	ldr	r3, [r0, #20]
   1a1f0:	cmp	r3, #0
   1a1f4:	movne	sl, #0
   1a1f8:	bne	19dc4 <_obstack_memory_used@@Base+0x1c00>
   1a1fc:	mov	r3, r9
   1a200:	cmp	r9, #0
   1a204:	moveq	r4, #0
   1a208:	streq	r4, [sp, #12]
   1a20c:	beq	19f08 <_obstack_memory_used@@Base+0x1d44>
   1a210:	mov	r4, r9
   1a214:	mov	r9, r3
   1a218:	mov	sl, #0
   1a21c:	str	sl, [sp, #12]
   1a220:	b	19e00 <_obstack_memory_used@@Base+0x1c3c>
   1a224:	ldr	r3, [fp, #20]
   1a228:	cmp	r3, #0
   1a22c:	moveq	r3, r9
   1a230:	beq	1a200 <_obstack_memory_used@@Base+0x203c>
   1a234:	ldr	r1, [sp, #8]
   1a238:	mov	r0, fp
   1a23c:	bl	17bc4 <argp_parse@@Base+0xa74>
   1a240:	str	r0, [sp, #12]
   1a244:	ldr	r3, [fp, #20]
   1a248:	mov	sl, #0
   1a24c:	ldr	r0, [pc]	; 1a254 <_obstack_memory_used@@Base+0x2090>
   1a250:	b	19de8 <_obstack_memory_used@@Base+0x1c24>
   1a254:	andeq	r0, r0, #1
   1a258:	andeq	r0, r0, #2
   1a25c:	andeq	r0, r0, #4
   1a260:	ldr	r3, [r0, #12]
   1a264:	ldr	r2, [r1, #12]
   1a268:	cmp	r3, r2
   1a26c:	beq	1a2c4 <_obstack_memory_used@@Base+0x2100>
   1a270:	push	{r4, r5, r6, lr}
   1a274:	mov	r5, r1
   1a278:	mov	r4, r0
   1a27c:	mov	r1, r2
   1a280:	mov	r0, r3
   1a284:	bl	1a260 <_obstack_memory_used@@Base+0x209c>
   1a288:	subs	r3, r0, #0
   1a28c:	bne	1a2bc <_obstack_memory_used@@Base+0x20f8>
   1a290:	ldr	r0, [r4, #8]
   1a294:	ldr	r3, [r5, #8]
   1a298:	mvn	r2, r3
   1a29c:	lsr	r2, r2, #31
   1a2a0:	cmp	r2, r0, lsr #31
   1a2a4:	subne	r3, r0, r3
   1a2a8:	subeq	r3, r3, r0
   1a2ac:	cmp	r3, #0
   1a2b0:	ldreq	r3, [r5, #4]
   1a2b4:	ldreq	r0, [r4, #4]
   1a2b8:	subeq	r3, r3, r0
   1a2bc:	mov	r0, r3
   1a2c0:	pop	{r4, r5, r6, pc}
   1a2c4:	ldr	r2, [r0, #8]
   1a2c8:	ldr	r3, [r1, #8]
   1a2cc:	mvn	ip, r3
   1a2d0:	lsr	ip, ip, #31
   1a2d4:	cmp	ip, r2, lsr #31
   1a2d8:	subne	r3, r2, r3
   1a2dc:	subeq	r3, r3, r2
   1a2e0:	cmp	r3, #0
   1a2e4:	ldreq	r3, [r1, #4]
   1a2e8:	ldreq	r0, [r0, #4]
   1a2ec:	subeq	r3, r3, r0
   1a2f0:	mov	r0, r3
   1a2f4:	bx	lr
   1a2f8:	push	{r4, r5, r6, r7, r8, lr}
   1a2fc:	sub	sp, sp, #8
   1a300:	ldr	lr, [r0, #16]
   1a304:	cmp	lr, #0
   1a308:	movne	r2, lr
   1a30c:	bne	1a31c <_obstack_memory_used@@Base+0x2158>
   1a310:	ldr	ip, [r0, #12]
   1a314:	b	1a32c <_obstack_memory_used@@Base+0x2168>
   1a318:	mov	r2, r3
   1a31c:	ldr	r3, [r2, #12]
   1a320:	cmp	r3, #0
   1a324:	bne	1a318 <_obstack_memory_used@@Base+0x2154>
   1a328:	ldr	ip, [r2, #8]
   1a32c:	ldr	r5, [r1, #16]
   1a330:	cmp	r5, #0
   1a334:	movne	r2, r5
   1a338:	bne	1a348 <_obstack_memory_used@@Base+0x2184>
   1a33c:	ldr	r4, [r1, #12]
   1a340:	b	1a358 <_obstack_memory_used@@Base+0x2194>
   1a344:	mov	r2, r3
   1a348:	ldr	r3, [r2, #12]
   1a34c:	cmp	r3, #0
   1a350:	bne	1a344 <_obstack_memory_used@@Base+0x2180>
   1a354:	ldr	r4, [r2, #8]
   1a358:	mvn	r3, r4
   1a35c:	lsr	r3, r3, #31
   1a360:	cmp	r3, ip, lsr #31
   1a364:	subne	r4, ip, r4
   1a368:	subeq	r4, r4, ip
   1a36c:	cmp	r4, #0
   1a370:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a374:	adds	r4, r5, #0
   1a378:	movne	r4, #1
   1a37c:	cmp	lr, #0
   1a380:	rsbeq	r4, r4, #0
   1a384:	rsbne	r4, r4, #1
   1a388:	cmp	r4, #0
   1a38c:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a390:	mov	r6, r1
   1a394:	mov	r7, r0
   1a398:	cmp	lr, #0
   1a39c:	beq	1a428 <_obstack_memory_used@@Base+0x2264>
   1a3a0:	ldr	ip, [lr, #20]
   1a3a4:	ldr	r2, [r5, #20]
   1a3a8:	cmp	ip, r2
   1a3ac:	ble	1a3e4 <_obstack_memory_used@@Base+0x2220>
   1a3b0:	mov	r0, lr
   1a3b4:	ldr	r0, [r0, #12]
   1a3b8:	ldr	r3, [r0, #20]
   1a3bc:	cmp	r2, r3
   1a3c0:	blt	1a3b4 <_obstack_memory_used@@Base+0x21f0>
   1a3c4:	mov	r1, r5
   1a3c8:	bl	1a260 <_obstack_memory_used@@Base+0x209c>
   1a3cc:	subs	r4, r0, #0
   1a3d0:	cmp	r0, #0
   1a3d4:	moveq	r4, #1
   1a3d8:	mov	r0, r4
   1a3dc:	add	sp, sp, #8
   1a3e0:	pop	{r4, r5, r6, r7, r8, pc}
   1a3e4:	cmp	ip, r2
   1a3e8:	bge	1a414 <_obstack_memory_used@@Base+0x2250>
   1a3ec:	mov	r1, r5
   1a3f0:	ldr	r1, [r1, #12]
   1a3f4:	ldr	r3, [r1, #20]
   1a3f8:	cmp	ip, r3
   1a3fc:	blt	1a3f0 <_obstack_memory_used@@Base+0x222c>
   1a400:	mov	r0, lr
   1a404:	bl	1a260 <_obstack_memory_used@@Base+0x209c>
   1a408:	subs	r4, r0, #0
   1a40c:	mvneq	r4, #0
   1a410:	b	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a414:	mov	r1, r5
   1a418:	mov	r0, lr
   1a41c:	bl	1a260 <_obstack_memory_used@@Base+0x209c>
   1a420:	subs	r4, r0, #0
   1a424:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a428:	ldr	r3, [r7, #12]
   1a42c:	ldr	r4, [r6, #12]
   1a430:	mvn	r2, r4
   1a434:	lsr	r2, r2, #31
   1a438:	cmp	r2, r3, lsr #31
   1a43c:	subne	r4, r3, r4
   1a440:	subeq	r4, r4, r3
   1a444:	cmp	r4, #0
   1a448:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a44c:	mov	r0, r7
   1a450:	bl	190a0 <_obstack_memory_used@@Base+0xedc>
   1a454:	mov	r5, r0
   1a458:	str	r0, [sp]
   1a45c:	mov	r0, r6
   1a460:	bl	190a0 <_obstack_memory_used@@Base+0xedc>
   1a464:	str	r0, [sp, #4]
   1a468:	ldr	r3, [r7]
   1a46c:	ldr	r3, [r3, #12]
   1a470:	adds	r5, r5, #0
   1a474:	movne	r5, #1
   1a478:	ands	r3, r5, r3, lsr #3
   1a47c:	beq	1a5c0 <_obstack_memory_used@@Base+0x23fc>
   1a480:	mov	r0, sp
   1a484:	bl	19264 <_obstack_memory_used@@Base+0x10a0>
   1a488:	adds	r5, r0, #0
   1a48c:	movne	r5, #1
   1a490:	ldr	r3, [r6]
   1a494:	ldr	r0, [r3, #12]
   1a498:	ands	r0, r0, #8
   1a49c:	beq	1a4bc <_obstack_memory_used@@Base+0x22f8>
   1a4a0:	ldr	r3, [sp, #4]
   1a4a4:	cmp	r3, #0
   1a4a8:	beq	1a5b8 <_obstack_memory_used@@Base+0x23f4>
   1a4ac:	add	r0, sp, #4
   1a4b0:	bl	19264 <_obstack_memory_used@@Base+0x10a0>
   1a4b4:	adds	r0, r0, #0
   1a4b8:	movne	r0, #1
   1a4bc:	subs	r4, r5, r0
   1a4c0:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a4c4:	ldr	r2, [r7, #20]
   1a4c8:	ldr	r4, [pc, #276]	; 1a5e4 <_obstack_memory_used@@Base+0x2420>
   1a4cc:	mov	r3, #0
   1a4d0:	ldr	r2, [r2, #24]
   1a4d4:	mov	r1, r4
   1a4d8:	mov	r0, r7
   1a4dc:	bl	19138 <_obstack_memory_used@@Base+0xf74>
   1a4e0:	mov	r5, r0
   1a4e4:	uxtb	r8, r0
   1a4e8:	ldr	r2, [r6, #20]
   1a4ec:	mov	r3, #0
   1a4f0:	ldr	r2, [r2, #24]
   1a4f4:	mov	r1, r4
   1a4f8:	mov	r0, r6
   1a4fc:	bl	19138 <_obstack_memory_used@@Base+0xf74>
   1a500:	uxtb	r7, r0
   1a504:	cmp	r8, #0
   1a508:	movne	r5, r8
   1a50c:	bne	1a520 <_obstack_memory_used@@Base+0x235c>
   1a510:	ldr	r3, [sp]
   1a514:	cmp	r3, #0
   1a518:	ldrbne	r5, [r3]
   1a51c:	moveq	r5, #0
   1a520:	cmp	r7, #0
   1a524:	uxtbne	r6, r0
   1a528:	bne	1a53c <_obstack_memory_used@@Base+0x2378>
   1a52c:	ldr	r3, [sp, #4]
   1a530:	cmp	r3, #0
   1a534:	ldrbne	r6, [r3]
   1a538:	moveq	r6, #0
   1a53c:	bl	114f0 <__ctype_tolower_loc@plt>
   1a540:	ldr	r3, [r0]
   1a544:	ldr	r4, [r3, r5, lsl #2]
   1a548:	ldr	r3, [r3, r6, lsl #2]
   1a54c:	subs	r4, r4, r3
   1a550:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a554:	subs	r4, r6, r5
   1a558:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a55c:	adds	r4, r7, #0
   1a560:	movne	r4, #1
   1a564:	cmp	r8, #0
   1a568:	rsbeq	r4, r4, #0
   1a56c:	rsbne	r4, r4, #1
   1a570:	cmp	r4, #0
   1a574:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a578:	cmp	r8, #0
   1a57c:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a580:	ldr	r0, [sp]
   1a584:	ldr	r1, [sp, #4]
   1a588:	adds	r4, r1, #0
   1a58c:	movne	r4, #1
   1a590:	cmp	r0, #0
   1a594:	rsbeq	r4, r4, #0
   1a598:	rsbne	r4, r4, #1
   1a59c:	cmp	r4, #0
   1a5a0:	bne	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a5a4:	cmp	r0, #0
   1a5a8:	beq	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a5ac:	bl	11454 <strcasecmp@plt>
   1a5b0:	mov	r4, r0
   1a5b4:	b	1a3d8 <_obstack_memory_used@@Base+0x2214>
   1a5b8:	mov	r0, r4
   1a5bc:	b	1a4bc <_obstack_memory_used@@Base+0x22f8>
   1a5c0:	ldr	r3, [r6]
   1a5c4:	ldr	r3, [r3, #12]
   1a5c8:	tst	r3, #8
   1a5cc:	beq	1a4c4 <_obstack_memory_used@@Base+0x2300>
   1a5d0:	ldr	r3, [sp, #4]
   1a5d4:	cmp	r3, #0
   1a5d8:	movne	r5, r4
   1a5dc:	bne	1a4ac <_obstack_memory_used@@Base+0x22e8>
   1a5e0:	b	1a4c4 <_obstack_memory_used@@Base+0x2300>
   1a5e4:	andeq	r9, r1, ip, lsl r2
   1a5e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a5ec:	sub	sp, sp, #52	; 0x34
   1a5f0:	str	r0, [sp, #24]
   1a5f4:	str	r1, [sp, #28]
   1a5f8:	ldr	r2, [r0, #16]
   1a5fc:	str	r2, [sp, #8]
   1a600:	ldr	r5, [r0]
   1a604:	mov	r0, #16
   1a608:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1a60c:	subs	fp, r0, #0
   1a610:	beq	1a640 <_obstack_memory_used@@Base+0x247c>
   1a614:	mov	r3, #0
   1a618:	str	r3, [fp, #4]
   1a61c:	str	r3, [fp, #12]
   1a620:	cmp	r5, r3
   1a624:	beq	1a818 <_obstack_memory_used@@Base+0x2654>
   1a628:	ldr	r4, [r5, #12]
   1a62c:	ands	r4, r4, #4
   1a630:	bne	1a654 <_obstack_memory_used@@Base+0x2490>
   1a634:	add	r6, r5, #24
   1a638:	mov	r8, r3
   1a63c:	b	1a67c <_obstack_memory_used@@Base+0x24b8>
   1a640:	ldr	r3, [pc, #1576]	; 1ac70 <_obstack_memory_used@@Base+0x2aac>
   1a644:	ldr	r2, [pc, #1576]	; 1ac74 <_obstack_memory_used@@Base+0x2ab0>
   1a648:	ldr	r1, [pc, #1576]	; 1ac78 <_obstack_memory_used@@Base+0x2ab4>
   1a64c:	ldr	r0, [pc, #1576]	; 1ac7c <_obstack_memory_used@@Base+0x2ab8>
   1a650:	bl	116c4 <__assert_fail@plt>
   1a654:	ldr	r3, [pc, #1556]	; 1ac70 <_obstack_memory_used@@Base+0x2aac>
   1a658:	mov	r2, #460	; 0x1cc
   1a65c:	ldr	r1, [pc, #1556]	; 1ac78 <_obstack_memory_used@@Base+0x2ab4>
   1a660:	ldr	r0, [pc, #1560]	; 1ac80 <_obstack_memory_used@@Base+0x2abc>
   1a664:	bl	116c4 <__assert_fail@plt>
   1a668:	ldr	r2, [fp, #4]
   1a66c:	add	r2, r2, #1
   1a670:	str	r2, [fp, #4]
   1a674:	b	1a6a4 <_obstack_memory_used@@Base+0x24e0>
   1a678:	add	r6, r6, #24
   1a67c:	mov	r3, r6
   1a680:	ldr	r2, [r6, #-20]	; 0xffffffec
   1a684:	cmp	r2, #0
   1a688:	bne	1a698 <_obstack_memory_used@@Base+0x24d4>
   1a68c:	ldr	r2, [r6, #-24]	; 0xffffffe8
   1a690:	cmp	r2, #0
   1a694:	beq	1a6dc <_obstack_memory_used@@Base+0x2518>
   1a698:	ldr	r2, [r3, #-12]
   1a69c:	tst	r2, #4
   1a6a0:	beq	1a668 <_obstack_memory_used@@Base+0x24a4>
   1a6a4:	ldr	r2, [r3, #-12]
   1a6a8:	tst	r2, #8
   1a6ac:	bne	1a678 <_obstack_memory_used@@Base+0x24b4>
   1a6b0:	ldr	r7, [r3, #-20]	; 0xffffffec
   1a6b4:	sub	r3, r7, #1
   1a6b8:	cmp	r3, #254	; 0xfe
   1a6bc:	bhi	1a678 <_obstack_memory_used@@Base+0x24b4>
   1a6c0:	bl	11520 <__ctype_b_loc@plt>
   1a6c4:	ldr	r3, [r0]
   1a6c8:	lsl	r7, r7, #1
   1a6cc:	ldrh	r3, [r3, r7]
   1a6d0:	tst	r3, #16384	; 0x4000
   1a6d4:	addne	r8, r8, #1
   1a6d8:	b	1a678 <_obstack_memory_used@@Base+0x24b4>
   1a6dc:	ldr	r2, [r6, #-8]
   1a6e0:	cmp	r2, #0
   1a6e4:	bne	1a698 <_obstack_memory_used@@Base+0x24d4>
   1a6e8:	ldr	r2, [r6, #-4]
   1a6ec:	cmp	r2, #0
   1a6f0:	bne	1a698 <_obstack_memory_used@@Base+0x24d4>
   1a6f4:	ldr	r0, [fp, #4]
   1a6f8:	rsb	r0, r0, r0, lsl #3
   1a6fc:	lsl	r0, r0, #2
   1a700:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1a704:	str	r0, [fp]
   1a708:	add	r0, r8, #1
   1a70c:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1a710:	str	r0, [fp, #8]
   1a714:	ldr	r8, [fp]
   1a718:	cmp	r0, #0
   1a71c:	cmpne	r8, #0
   1a720:	bne	1a738 <_obstack_memory_used@@Base+0x2574>
   1a724:	ldr	r3, [pc, #1348]	; 1ac70 <_obstack_memory_used@@Base+0x2aac>
   1a728:	ldr	r2, [pc, #1364]	; 1ac84 <_obstack_memory_used@@Base+0x2ac0>
   1a72c:	ldr	r1, [pc, #1348]	; 1ac78 <_obstack_memory_used@@Base+0x2ab4>
   1a730:	ldr	r0, [pc, #1360]	; 1ac88 <_obstack_memory_used@@Base+0x2ac4>
   1a734:	bl	116c4 <__assert_fail@plt>
   1a738:	ldr	r2, [fp, #4]
   1a73c:	ldr	r3, [pc, #1352]	; 1ac8c <_obstack_memory_used@@Base+0x2ac8>
   1a740:	cmp	r2, r3
   1a744:	addls	r8, r8, #28
   1a748:	movls	r7, r0
   1a74c:	movls	sl, #0
   1a750:	bls	1a79c <_obstack_memory_used@@Base+0x25d8>
   1a754:	ldr	r3, [pc, #1300]	; 1ac70 <_obstack_memory_used@@Base+0x2aac>
   1a758:	mov	r2, #476	; 0x1dc
   1a75c:	ldr	r1, [pc, #1300]	; 1ac78 <_obstack_memory_used@@Base+0x2ab4>
   1a760:	ldr	r0, [pc, #1320]	; 1ac90 <_obstack_memory_used@@Base+0x2acc>
   1a764:	bl	116c4 <__assert_fail@plt>
   1a768:	ldr	r3, [r5, #4]
   1a76c:	cmp	r3, #0
   1a770:	addeq	r9, r4, #1
   1a774:	movne	r9, r4
   1a778:	b	1a7e0 <_obstack_memory_used@@Base+0x261c>
   1a77c:	ldr	r3, [r5, #16]
   1a780:	cmp	r3, #0
   1a784:	bne	1ab8c <_obstack_memory_used@@Base+0x29c8>
   1a788:	ldr	r3, [r5, #20]
   1a78c:	cmp	r3, #0
   1a790:	bne	1ab8c <_obstack_memory_used@@Base+0x29c8>
   1a794:	add	r8, r8, #28
   1a798:	mov	r4, r9
   1a79c:	ldr	r3, [r5, #4]
   1a7a0:	cmp	r3, #0
   1a7a4:	bne	1a7b4 <_obstack_memory_used@@Base+0x25f0>
   1a7a8:	ldr	r3, [r5]
   1a7ac:	cmp	r3, #0
   1a7b0:	beq	1a7f8 <_obstack_memory_used@@Base+0x2634>
   1a7b4:	mov	r6, r8
   1a7b8:	str	r5, [r8, #-28]	; 0xffffffe4
   1a7bc:	str	sl, [r8, #-24]	; 0xffffffe8
   1a7c0:	str	r7, [r8, #-20]	; 0xffffffec
   1a7c4:	ldr	r9, [r5, #20]
   1a7c8:	cmp	r9, #0
   1a7cc:	bne	1a7e0 <_obstack_memory_used@@Base+0x261c>
   1a7d0:	ldr	r3, [r5]
   1a7d4:	cmp	r3, #0
   1a7d8:	movne	r9, r4
   1a7dc:	beq	1a768 <_obstack_memory_used@@Base+0x25a4>
   1a7e0:	str	r9, [r6, #-16]
   1a7e4:	ldr	r3, [sp, #28]
   1a7e8:	str	r3, [r6, #-12]
   1a7ec:	ldr	r3, [sp, #24]
   1a7f0:	str	r3, [r6, #-8]
   1a7f4:	b	1ab98 <_obstack_memory_used@@Base+0x29d4>
   1a7f8:	ldr	r3, [r5, #16]
   1a7fc:	cmp	r3, #0
   1a800:	bne	1a7b4 <_obstack_memory_used@@Base+0x25f0>
   1a804:	ldr	r3, [r5, #20]
   1a808:	cmp	r3, #0
   1a80c:	bne	1a7b4 <_obstack_memory_used@@Base+0x25f0>
   1a810:	mov	r3, #0
   1a814:	strb	r3, [r7]
   1a818:	ldr	r3, [sp, #8]
   1a81c:	cmp	r3, #0
   1a820:	beq	1ab5c <_obstack_memory_used@@Base+0x2998>
   1a824:	ldr	r3, [r3]
   1a828:	cmp	r3, #0
   1a82c:	beq	1ab5c <_obstack_memory_used@@Base+0x2998>
   1a830:	add	r3, fp, #12
   1a834:	str	r3, [sp, #44]	; 0x2c
   1a838:	str	fp, [sp, #20]
   1a83c:	b	1a8cc <_obstack_memory_used@@Base+0x2708>
   1a840:	ldr	r1, [sp, #28]
   1a844:	b	1a94c <_obstack_memory_used@@Base+0x2788>
   1a848:	mov	r2, r3
   1a84c:	ldr	r3, [r2, #24]
   1a850:	cmp	r3, #0
   1a854:	bne	1a848 <_obstack_memory_used@@Base+0x2684>
   1a858:	add	r2, r2, #24
   1a85c:	ldr	r1, [sp, #16]
   1a860:	ldr	r3, [r1, #12]
   1a864:	str	r3, [r2]
   1a868:	mov	r2, #0
   1a86c:	str	r2, [r1, #12]
   1a870:	ldr	r3, [r1, #4]
   1a874:	cmp	r3, r2
   1a878:	beq	1a8b0 <_obstack_memory_used@@Base+0x26ec>
   1a87c:	ldr	r0, [sp, #20]
   1a880:	ldr	r2, [r0, #4]
   1a884:	cmp	r2, #0
   1a888:	bne	1a974 <_obstack_memory_used@@Base+0x27b0>
   1a88c:	str	r3, [r0, #4]
   1a890:	mov	r2, r1
   1a894:	ldr	r3, [r1]
   1a898:	str	r3, [r0]
   1a89c:	ldr	r3, [r2, #8]
   1a8a0:	str	r3, [r0, #8]
   1a8a4:	mov	r3, r2
   1a8a8:	mov	r2, #0
   1a8ac:	str	r2, [r3, #4]
   1a8b0:	ldr	r0, [sp, #16]
   1a8b4:	bl	1949c <_obstack_memory_used@@Base+0x12d8>
   1a8b8:	ldr	r2, [sp, #8]
   1a8bc:	ldr	r3, [r2, #16]!
   1a8c0:	str	r2, [sp, #8]
   1a8c4:	cmp	r3, #0
   1a8c8:	beq	1ab58 <_obstack_memory_used@@Base+0x2994>
   1a8cc:	ldr	r3, [sp, #8]
   1a8d0:	ldr	r4, [r3, #12]
   1a8d4:	cmp	r4, #0
   1a8d8:	bne	1a8e8 <_obstack_memory_used@@Base+0x2724>
   1a8dc:	ldr	r3, [r3, #8]
   1a8e0:	cmp	r3, #0
   1a8e4:	beq	1a840 <_obstack_memory_used@@Base+0x267c>
   1a8e8:	ldr	r2, [sp, #8]
   1a8ec:	ldr	r5, [r2, #8]
   1a8f0:	ldr	r7, [sp, #24]
   1a8f4:	ldr	r3, [r7, #16]
   1a8f8:	sub	r3, r2, r3
   1a8fc:	asr	r6, r3, #4
   1a900:	mov	r0, #28
   1a904:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1a908:	subs	r1, r0, #0
   1a90c:	beq	1a94c <_obstack_memory_used@@Base+0x2788>
   1a910:	str	r4, [r1, #8]
   1a914:	str	r5, [r1]
   1a918:	str	r6, [r1, #4]
   1a91c:	ldr	r3, [sp, #28]
   1a920:	str	r3, [r1, #12]
   1a924:	str	r7, [r1, #16]
   1a928:	cmp	r3, #0
   1a92c:	ldrne	r3, [r3, #20]
   1a930:	addne	r3, r3, #1
   1a934:	moveq	r3, #0
   1a938:	str	r3, [r1, #20]
   1a93c:	ldr	r2, [sp, #20]
   1a940:	ldr	r3, [r2, #12]
   1a944:	str	r3, [r1, #24]
   1a948:	str	r1, [r2, #12]
   1a94c:	ldr	r3, [sp, #8]
   1a950:	ldr	r0, [r3]
   1a954:	bl	1a5e8 <_obstack_memory_used@@Base+0x2424>
   1a958:	str	r0, [sp, #16]
   1a95c:	ldr	r3, [sp, #20]
   1a960:	ldr	r2, [r3, #12]
   1a964:	cmp	r2, #0
   1a968:	ldreq	r2, [sp, #44]	; 0x2c
   1a96c:	bne	1a84c <_obstack_memory_used@@Base+0x2688>
   1a970:	b	1a85c <_obstack_memory_used@@Base+0x2698>
   1a974:	add	r3, r3, r2
   1a978:	str	r3, [sp, #36]	; 0x24
   1a97c:	rsb	r0, r3, r3, lsl #3
   1a980:	lsl	r0, r0, #2
   1a984:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1a988:	mov	r4, r0
   1a98c:	str	r0, [sp, #32]
   1a990:	ldr	r3, [sp, #20]
   1a994:	ldr	r0, [r3, #8]
   1a998:	bl	11544 <strlen@plt>
   1a99c:	mov	r6, r0
   1a9a0:	ldr	r3, [sp, #16]
   1a9a4:	ldr	r0, [r3, #8]
   1a9a8:	bl	11544 <strlen@plt>
   1a9ac:	add	r0, r6, r0
   1a9b0:	add	r0, r0, #1
   1a9b4:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1a9b8:	mov	sl, r0
   1a9bc:	cmp	r4, #0
   1a9c0:	cmpne	r0, #0
   1a9c4:	beq	1aa90 <_obstack_memory_used@@Base+0x28cc>
   1a9c8:	ldr	r3, [sp, #36]	; 0x24
   1a9cc:	ldr	r2, [pc, #696]	; 1ac8c <_obstack_memory_used@@Base+0x2ac8>
   1a9d0:	cmp	r3, r2
   1a9d4:	bhi	1aaa4 <_obstack_memory_used@@Base+0x28e0>
   1a9d8:	ldr	r5, [sp, #20]
   1a9dc:	ldr	r2, [r5]
   1a9e0:	mov	r1, r2
   1a9e4:	str	r2, [sp, #40]	; 0x28
   1a9e8:	ldr	r4, [r5, #4]
   1a9ec:	rsb	r7, r4, r4, lsl #3
   1a9f0:	lsl	r7, r7, #2
   1a9f4:	mov	r2, r7
   1a9f8:	ldr	r8, [sp, #32]
   1a9fc:	mov	r0, r8
   1aa00:	bl	11514 <mempcpy@plt>
   1aa04:	ldr	r3, [sp, #16]
   1aa08:	ldr	r1, [r3, #4]
   1aa0c:	str	r1, [sp, #4]
   1aa10:	rsb	r2, r1, r1, lsl #3
   1aa14:	lsl	r2, r2, #2
   1aa18:	ldr	r1, [r3]
   1aa1c:	bl	1140c <memcpy@plt>
   1aa20:	ldr	r5, [r5, #8]
   1aa24:	mov	r2, r6
   1aa28:	mov	r1, r5
   1aa2c:	mov	r0, sl
   1aa30:	bl	1140c <memcpy@plt>
   1aa34:	cmp	r4, #0
   1aa38:	beq	1aab8 <_obstack_memory_used@@Base+0x28f4>
   1aa3c:	mov	r2, r8
   1aa40:	ldr	r3, [r2, #8]
   1aa44:	sub	r3, r3, r5
   1aa48:	add	r3, sl, r3
   1aa4c:	str	r3, [r2, #8]
   1aa50:	add	r2, r2, #28
   1aa54:	subs	r4, r4, #1
   1aa58:	bne	1aa40 <_obstack_memory_used@@Base+0x287c>
   1aa5c:	ldr	r3, [sp, #32]
   1aa60:	add	r7, r3, r7
   1aa64:	add	r3, sl, r6
   1aa68:	str	r3, [sp, #12]
   1aa6c:	ldr	r2, [sp, #16]
   1aa70:	ldr	r8, [r2, #8]
   1aa74:	ldr	r2, [sp, #4]
   1aa78:	cmp	r2, #0
   1aa7c:	beq	1ab20 <_obstack_memory_used@@Base+0x295c>
   1aa80:	add	r9, r7, #28
   1aa84:	mov	fp, r3
   1aa88:	sub	r7, r3, #1
   1aa8c:	b	1ab08 <_obstack_memory_used@@Base+0x2944>
   1aa90:	ldr	r3, [pc, #508]	; 1ac94 <_obstack_memory_used@@Base+0x2ad0>
   1aa94:	ldr	r2, [pc, #508]	; 1ac98 <_obstack_memory_used@@Base+0x2ad4>
   1aa98:	ldr	r1, [pc, #472]	; 1ac78 <_obstack_memory_used@@Base+0x2ab4>
   1aa9c:	ldr	r0, [pc, #504]	; 1ac9c <_obstack_memory_used@@Base+0x2ad8>
   1aaa0:	bl	116c4 <__assert_fail@plt>
   1aaa4:	ldr	r3, [pc, #488]	; 1ac94 <_obstack_memory_used@@Base+0x2ad0>
   1aaa8:	mov	r2, #972	; 0x3cc
   1aaac:	ldr	r1, [pc, #452]	; 1ac78 <_obstack_memory_used@@Base+0x2ab4>
   1aab0:	ldr	r0, [pc, #488]	; 1aca0 <_obstack_memory_used@@Base+0x2adc>
   1aab4:	bl	116c4 <__assert_fail@plt>
   1aab8:	ldr	r7, [sp, #32]
   1aabc:	b	1aa64 <_obstack_memory_used@@Base+0x28a0>
   1aac0:	ldr	r3, [sp, #12]
   1aac4:	cmp	sl, r3
   1aac8:	bcs	1ac60 <_obstack_memory_used@@Base+0x2a9c>
   1aacc:	ldrb	r3, [sl]
   1aad0:	cmp	r3, r1
   1aad4:	beq	1ac68 <_obstack_memory_used@@Base+0x2aa4>
   1aad8:	mov	r3, sl
   1aadc:	cmp	r7, r3
   1aae0:	beq	1ac60 <_obstack_memory_used@@Base+0x2a9c>
   1aae4:	ldrb	r2, [r3, #1]!
   1aae8:	cmp	r2, r1
   1aaec:	bne	1aadc <_obstack_memory_used@@Base+0x2918>
   1aaf0:	b	1ac68 <_obstack_memory_used@@Base+0x2aa4>
   1aaf4:	add	r9, r9, #28
   1aaf8:	ldr	r3, [sp, #4]
   1aafc:	subs	r3, r3, #1
   1ab00:	str	r3, [sp, #4]
   1ab04:	beq	1ab24 <_obstack_memory_used@@Base+0x2960>
   1ab08:	str	fp, [r9, #-20]	; 0xffffffec
   1ab0c:	ldr	r5, [r9, #-24]	; 0xffffffe8
   1ab10:	ldr	r4, [r9, #-28]	; 0xffffffe4
   1ab14:	cmp	r5, #0
   1ab18:	bne	1ac28 <_obstack_memory_used@@Base+0x2a64>
   1ab1c:	b	1aaf4 <_obstack_memory_used@@Base+0x2930>
   1ab20:	ldr	fp, [sp, #12]
   1ab24:	mov	r3, #0
   1ab28:	strb	r3, [fp]
   1ab2c:	ldr	r0, [sp, #40]	; 0x28
   1ab30:	bl	17d44 <argp_parse@@Base+0xbf4>
   1ab34:	ldr	r4, [sp, #20]
   1ab38:	ldr	r0, [r4, #8]
   1ab3c:	bl	17d44 <argp_parse@@Base+0xbf4>
   1ab40:	ldr	r2, [sp, #32]
   1ab44:	str	r2, [r4]
   1ab48:	ldr	r2, [sp, #36]	; 0x24
   1ab4c:	str	r2, [r4, #4]
   1ab50:	str	sl, [r4, #8]
   1ab54:	b	1a8b0 <_obstack_memory_used@@Base+0x26ec>
   1ab58:	ldr	fp, [sp, #20]
   1ab5c:	mov	r0, fp
   1ab60:	add	sp, sp, #52	; 0x34
   1ab64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab68:	strb	r4, [r7]
   1ab6c:	add	r7, r7, #1
   1ab70:	add	r5, r5, #24
   1ab74:	ldr	r3, [r5, #4]
   1ab78:	cmp	r3, #0
   1ab7c:	bne	1ab8c <_obstack_memory_used@@Base+0x29c8>
   1ab80:	ldr	r3, [r5]
   1ab84:	cmp	r3, #0
   1ab88:	beq	1a77c <_obstack_memory_used@@Base+0x25b8>
   1ab8c:	ldr	r3, [r5, #12]
   1ab90:	tst	r3, #4
   1ab94:	beq	1a794 <_obstack_memory_used@@Base+0x25d0>
   1ab98:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1ab9c:	add	r3, r3, #1
   1aba0:	str	r3, [r6, #-24]	; 0xffffffe8
   1aba4:	ldr	r3, [r5, #12]
   1aba8:	tst	r3, #8
   1abac:	bne	1ab70 <_obstack_memory_used@@Base+0x29ac>
   1abb0:	ldr	r4, [r5, #4]
   1abb4:	sub	r3, r4, #1
   1abb8:	cmp	r3, #254	; 0xfe
   1abbc:	bhi	1ab70 <_obstack_memory_used@@Base+0x29ac>
   1abc0:	bl	11520 <__ctype_b_loc@plt>
   1abc4:	ldr	r2, [r0]
   1abc8:	lsl	r3, r4, #1
   1abcc:	ldrh	r3, [r2, r3]
   1abd0:	tst	r3, #16384	; 0x4000
   1abd4:	beq	1ab70 <_obstack_memory_used@@Base+0x29ac>
   1abd8:	uxtb	r4, r4
   1abdc:	ldr	r3, [fp, #8]
   1abe0:	cmp	r3, r7
   1abe4:	bcs	1ab68 <_obstack_memory_used@@Base+0x29a4>
   1abe8:	ldrb	r2, [r3]
   1abec:	cmp	r2, r4
   1abf0:	beq	1ab70 <_obstack_memory_used@@Base+0x29ac>
   1abf4:	sub	r1, r7, #1
   1abf8:	cmp	r3, r1
   1abfc:	beq	1ab68 <_obstack_memory_used@@Base+0x29a4>
   1ac00:	ldrb	r2, [r3, #1]!
   1ac04:	cmp	r2, r4
   1ac08:	bne	1abf8 <_obstack_memory_used@@Base+0x2a34>
   1ac0c:	b	1ab70 <_obstack_memory_used@@Base+0x29ac>
   1ac10:	ldrb	r1, [r8]
   1ac14:	cmp	r1, r6
   1ac18:	beq	1aac0 <_obstack_memory_used@@Base+0x28fc>
   1ac1c:	add	r4, r4, #24
   1ac20:	subs	r5, r5, #1
   1ac24:	beq	1aaf4 <_obstack_memory_used@@Base+0x2930>
   1ac28:	ldr	r3, [r4, #12]
   1ac2c:	tst	r3, #8
   1ac30:	bne	1ac1c <_obstack_memory_used@@Base+0x2a58>
   1ac34:	ldr	r6, [r4, #4]
   1ac38:	sub	r3, r6, #1
   1ac3c:	cmp	r3, #254	; 0xfe
   1ac40:	bhi	1ac1c <_obstack_memory_used@@Base+0x2a58>
   1ac44:	bl	11520 <__ctype_b_loc@plt>
   1ac48:	ldr	r2, [r0]
   1ac4c:	lsl	r3, r6, #1
   1ac50:	ldrh	r3, [r2, r3]
   1ac54:	tst	r3, #16384	; 0x4000
   1ac58:	bne	1ac10 <_obstack_memory_used@@Base+0x2a4c>
   1ac5c:	b	1ac1c <_obstack_memory_used@@Base+0x2a58>
   1ac60:	strb	r1, [fp]
   1ac64:	add	fp, fp, #1
   1ac68:	add	r8, r8, #1
   1ac6c:	b	1ac1c <_obstack_memory_used@@Base+0x2a58>
   1ac70:	andeq	r0, r2, ip, asr #20
   1ac74:	andeq	r0, r0, r2, asr #3
   1ac78:	andeq	r0, r2, ip, lsr fp
   1ac7c:	andeq	r0, r2, r8, asr #22
   1ac80:	andeq	r0, r2, ip, asr #22
   1ac84:	ldrdeq	r0, [r0], -sl
   1ac88:	andeq	r0, r2, ip, asr fp
   1ac8c:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1ac90:	andeq	r0, r2, r0, lsl #23
   1ac94:	andeq	r0, r2, r8, asr sl
   1ac98:	andeq	r0, r0, sl, asr #7
   1ac9c:			; <UNDEFINED> instruction: 0x00020bbc
   1aca0:	ldrdeq	r0, [r2], -r8

0001aca4 <argp_failure@@Base>:
   1aca4:	push	{r3}		; (str r3, [sp, #-4]!)
   1aca8:	push	{r4, r5, r6, r7, lr}
   1acac:	sub	sp, sp, #200	; 0xc8
   1acb0:	mov	r7, r1
   1acb4:	mov	r6, r2
   1acb8:	subs	r5, r0, #0
   1acbc:	beq	1ae0c <argp_failure@@Base+0x168>
   1acc0:	ldr	r3, [r5, #16]
   1acc4:	tst	r3, #2
   1acc8:	bne	1adfc <argp_failure@@Base+0x158>
   1accc:	ldr	r4, [r5, #44]	; 0x2c
   1acd0:	cmp	r4, #0
   1acd4:	beq	1adfc <argp_failure@@Base+0x158>
   1acd8:	mov	r0, r4
   1acdc:	bl	11634 <flockfile@plt>
   1ace0:	ldr	r0, [r5, #40]	; 0x28
   1ace4:	mov	r1, r4
   1ace8:	bl	11358 <fputs_unlocked@plt>
   1acec:	ldr	r3, [sp, #220]	; 0xdc
   1acf0:	cmp	r3, #0
   1acf4:	beq	1ad50 <argp_failure@@Base+0xac>
   1acf8:	add	r3, sp, #224	; 0xe0
   1acfc:	str	r3, [sp]
   1ad00:	ldr	r3, [r4, #20]
   1ad04:	ldr	r2, [r4, #24]
   1ad08:	cmp	r3, r2
   1ad0c:	addcc	r2, r3, #1
   1ad10:	strcc	r2, [r4, #20]
   1ad14:	movcc	r2, #58	; 0x3a
   1ad18:	strbcc	r2, [r3]
   1ad1c:	bcs	1ae30 <argp_failure@@Base+0x18c>
   1ad20:	ldr	r3, [r4, #20]
   1ad24:	ldr	r2, [r4, #24]
   1ad28:	cmp	r3, r2
   1ad2c:	addcc	r2, r3, #1
   1ad30:	strcc	r2, [r4, #20]
   1ad34:	movcc	r2, #32
   1ad38:	strbcc	r2, [r3]
   1ad3c:	bcs	1ae40 <argp_failure@@Base+0x19c>
   1ad40:	ldr	r2, [sp]
   1ad44:	ldr	r1, [sp, #220]	; 0xdc
   1ad48:	mov	r0, r4
   1ad4c:	bl	11604 <vfprintf@plt>
   1ad50:	cmp	r6, #0
   1ad54:	beq	1adb8 <argp_failure@@Base+0x114>
   1ad58:	ldr	r3, [r4, #20]
   1ad5c:	ldr	r2, [r4, #24]
   1ad60:	cmp	r3, r2
   1ad64:	addcc	r2, r3, #1
   1ad68:	strcc	r2, [r4, #20]
   1ad6c:	movcc	r2, #58	; 0x3a
   1ad70:	strbcc	r2, [r3]
   1ad74:	bcs	1ae50 <argp_failure@@Base+0x1ac>
   1ad78:	ldr	r3, [r4, #20]
   1ad7c:	ldr	r2, [r4, #24]
   1ad80:	cmp	r3, r2
   1ad84:	addcc	r2, r3, #1
   1ad88:	strcc	r2, [r4, #20]
   1ad8c:	movcc	r2, #32
   1ad90:	strbcc	r2, [r3]
   1ad94:	bcs	1ae60 <argp_failure@@Base+0x1bc>
   1ad98:	mov	r2, #200	; 0xc8
   1ad9c:	mov	r1, sp
   1ada0:	mov	r0, r6
   1ada4:	bl	11580 <strerror_r@plt>
   1ada8:	cmp	r0, #0
   1adac:	beq	1ae70 <argp_failure@@Base+0x1cc>
   1adb0:	mov	r1, r4
   1adb4:	bl	11358 <fputs_unlocked@plt>
   1adb8:	ldr	r3, [r4, #20]
   1adbc:	ldr	r2, [r4, #24]
   1adc0:	cmp	r3, r2
   1adc4:	addcc	r2, r3, #1
   1adc8:	strcc	r2, [r4, #20]
   1adcc:	movcc	r2, #10
   1add0:	strbcc	r2, [r3]
   1add4:	bcs	1ae88 <argp_failure@@Base+0x1e4>
   1add8:	mov	r0, r4
   1addc:	bl	11460 <funlockfile@plt>
   1ade0:	cmp	r7, #0
   1ade4:	beq	1adfc <argp_failure@@Base+0x158>
   1ade8:	cmp	r5, #0
   1adec:	beq	1ae98 <argp_failure@@Base+0x1f4>
   1adf0:	ldr	r3, [r5, #16]
   1adf4:	tst	r3, #32
   1adf8:	beq	1ae98 <argp_failure@@Base+0x1f4>
   1adfc:	add	sp, sp, #200	; 0xc8
   1ae00:	pop	{r4, r5, r6, r7, lr}
   1ae04:	add	sp, sp, #4
   1ae08:	bx	lr
   1ae0c:	ldr	r3, [pc, #140]	; 1aea0 <argp_failure@@Base+0x1fc>
   1ae10:	ldr	r4, [r3]
   1ae14:	cmp	r4, #0
   1ae18:	beq	1adfc <argp_failure@@Base+0x158>
   1ae1c:	mov	r0, r4
   1ae20:	bl	11634 <flockfile@plt>
   1ae24:	ldr	r3, [pc, #120]	; 1aea4 <argp_failure@@Base+0x200>
   1ae28:	ldr	r0, [r3]
   1ae2c:	b	1ace4 <argp_failure@@Base+0x40>
   1ae30:	mov	r1, #58	; 0x3a
   1ae34:	mov	r0, r4
   1ae38:	bl	115e0 <__overflow@plt>
   1ae3c:	b	1ad20 <argp_failure@@Base+0x7c>
   1ae40:	mov	r1, #32
   1ae44:	mov	r0, r4
   1ae48:	bl	115e0 <__overflow@plt>
   1ae4c:	b	1ad40 <argp_failure@@Base+0x9c>
   1ae50:	mov	r1, #58	; 0x3a
   1ae54:	mov	r0, r4
   1ae58:	bl	115e0 <__overflow@plt>
   1ae5c:	b	1ad78 <argp_failure@@Base+0xd4>
   1ae60:	mov	r1, #32
   1ae64:	mov	r0, r4
   1ae68:	bl	115e0 <__overflow@plt>
   1ae6c:	b	1ad98 <argp_failure@@Base+0xf4>
   1ae70:	mov	r0, r6
   1ae74:	bl	114e4 <strerror@plt>
   1ae78:	ldr	r3, [pc, #40]	; 1aea8 <argp_failure@@Base+0x204>
   1ae7c:	cmp	r0, #0
   1ae80:	moveq	r0, r3
   1ae84:	b	1adb0 <argp_failure@@Base+0x10c>
   1ae88:	mov	r1, #10
   1ae8c:	mov	r0, r4
   1ae90:	bl	115e0 <__overflow@plt>
   1ae94:	b	1add8 <argp_failure@@Base+0x134>
   1ae98:	mov	r0, r7
   1ae9c:	bl	1152c <exit@plt>
   1aea0:	andeq	r2, r3, r8, asr #22
   1aea4:	andeq	r2, r3, r0, asr #22
   1aea8:	andeq	r0, r2, ip, lsl #24
   1aeac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aeb0:	add	fp, sp, #32
   1aeb4:	sub	sp, sp, #108	; 0x6c
   1aeb8:	str	r0, [fp, #-112]	; 0xffffff90
   1aebc:	str	r1, [fp, #-100]	; 0xffffff9c
   1aec0:	str	r3, [fp, #-104]	; 0xffffff98
   1aec4:	subs	r3, r2, #0
   1aec8:	str	r3, [fp, #-132]	; 0xffffff7c
   1aecc:	beq	1bf38 <argp_failure@@Base+0x1294>
   1aed0:	mov	r0, r3
   1aed4:	bl	11634 <flockfile@plt>
   1aed8:	ldr	r3, [pc, #3772]	; 1bd9c <argp_failure@@Base+0x10f8>
   1aedc:	ldr	r3, [r3, #36]	; 0x24
   1aee0:	str	r3, [fp, #-108]	; 0xffffff94
   1aee4:	cmp	r3, #0
   1aee8:	beq	1afc0 <argp_failure@@Base+0x31c>
   1aeec:	mov	r3, #0
   1aef0:	ldr	r2, [pc, #3748]	; 1bd9c <argp_failure@@Base+0x10f8>
   1aef4:	ldr	r2, [r2, #32]
   1aef8:	mov	r1, r3
   1aefc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1af00:	bl	1ce80 <argp_error@@Base+0xd60>
   1af04:	subs	sl, r0, #0
   1af08:	beq	1b36c <argp_failure@@Base+0x6c8>
   1af0c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1af10:	tst	r3, #11
   1af14:	moveq	r3, #0
   1af18:	streq	r3, [fp, #-108]	; 0xffffff94
   1af1c:	bne	1b378 <argp_failure@@Base+0x6d4>
   1af20:	ldr	r3, [fp, #-104]	; 0xffffff98
   1af24:	tst	r3, #3
   1af28:	moveq	r4, #0
   1af2c:	bne	1b3fc <argp_failure@@Base+0x758>
   1af30:	ldr	r3, [fp, #-104]	; 0xffffff98
   1af34:	tst	r3, #16
   1af38:	bne	1b5f8 <argp_failure@@Base+0x954>
   1af3c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1af40:	tst	r3, #4
   1af44:	bne	1b620 <argp_failure@@Base+0x97c>
   1af48:	ldr	r3, [fp, #-104]	; 0xffffff98
   1af4c:	tst	r3, #8
   1af50:	beq	1beac <argp_failure@@Base+0x1208>
   1af54:	ldr	r3, [fp, #-108]	; 0xffffff94
   1af58:	ldr	r3, [r3, #4]
   1af5c:	cmp	r3, #0
   1af60:	beq	1beac <argp_failure@@Base+0x1208>
   1af64:	cmp	r4, #0
   1af68:	beq	1af90 <argp_failure@@Base+0x2ec>
   1af6c:	ldr	r2, [sl, #28]
   1af70:	ldr	r3, [sl, #32]
   1af74:	cmp	r2, r3
   1af78:	bcs	1b63c <argp_failure@@Base+0x998>
   1af7c:	ldr	r3, [sl, #28]
   1af80:	add	r2, r3, #1
   1af84:	str	r2, [sl, #28]
   1af88:	mov	r2, #10
   1af8c:	strb	r2, [r3]
   1af90:	mov	r3, #0
   1af94:	str	r3, [fp, #-88]	; 0xffffffa8
   1af98:	str	r3, [fp, #-84]	; 0xffffffac
   1af9c:	str	r3, [fp, #-80]	; 0xffffffb0
   1afa0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1afa4:	ldr	r2, [r3]
   1afa8:	str	r2, [fp, #-96]	; 0xffffffa0
   1afac:	ldr	r3, [r3, #4]
   1afb0:	str	r3, [fp, #-120]	; 0xffffff88
   1afb4:	cmp	r3, #0
   1afb8:	bne	1ba24 <argp_failure@@Base+0xd80>
   1afbc:	b	1bea8 <argp_failure@@Base+0x1204>
   1afc0:	ldr	r0, [pc, #3452]	; 1bd44 <argp_failure@@Base+0x10a0>
   1afc4:	bl	114b4 <getenv@plt>
   1afc8:	mov	r9, r0
   1afcc:	sub	ip, fp, #76	; 0x4c
   1afd0:	ldr	lr, [pc, #3524]	; 1bd9c <argp_failure@@Base+0x10f8>
   1afd4:	ldm	lr!, {r0, r1, r2, r3}
   1afd8:	stmia	ip!, {r0, r1, r2, r3}
   1afdc:	ldm	lr!, {r0, r1, r2, r3}
   1afe0:	stmia	ip!, {r0, r1, r2, r3}
   1afe4:	ldm	lr, {r0, r1}
   1afe8:	stm	ip, {r0, r1}
   1afec:	cmp	r9, #0
   1aff0:	ldrne	sl, [pc, #3408]	; 1bd48 <argp_failure@@Base+0x10a4>
   1aff4:	addne	r8, sl, #168	; 0xa8
   1aff8:	bne	1b29c <argp_failure@@Base+0x5f8>
   1affc:	b	1aeec <argp_failure@@Base+0x248>
   1b000:	mov	r5, r3
   1b004:	mov	r9, r5
   1b008:	mov	r3, r5
   1b00c:	ldrb	r0, [r3], #1
   1b010:	lsl	r2, r0, #1
   1b014:	ldrh	r2, [r1, r2]
   1b018:	tst	r2, #8192	; 0x2000
   1b01c:	bne	1b000 <argp_failure@@Base+0x35c>
   1b020:	tst	r2, #1024	; 0x400
   1b024:	beq	1b294 <argp_failure@@Base+0x5f0>
   1b028:	cmp	r0, #95	; 0x5f
   1b02c:	cmpne	r0, #45	; 0x2d
   1b030:	moveq	r3, #1
   1b034:	movne	r3, #0
   1b038:	lsl	r2, r2, #28
   1b03c:	orrs	r3, r3, r2, lsr #31
   1b040:	beq	1bfbc <argp_failure@@Base+0x1318>
   1b044:	mov	r4, r5
   1b048:	ldrb	r3, [r4, #1]!
   1b04c:	lsl	r2, r3, #1
   1b050:	ldrh	r2, [r1, r2]
   1b054:	lsl	r2, r2, #28
   1b058:	cmp	r3, #95	; 0x5f
   1b05c:	cmpne	r3, #45	; 0x2d
   1b060:	moveq	r3, #1
   1b064:	movne	r3, #0
   1b068:	orrs	r3, r3, r2, lsr #31
   1b06c:	bne	1b048 <argp_failure@@Base+0x3a4>
   1b070:	sub	r5, r4, r5
   1b074:	ldrb	r3, [r4]
   1b078:	lsl	r2, r3, #1
   1b07c:	ldrh	r2, [r1, r2]
   1b080:	tst	r2, #8192	; 0x2000
   1b084:	beq	1b09c <argp_failure@@Base+0x3f8>
   1b088:	ldrb	r3, [r4, #1]!
   1b08c:	lsl	r2, r3, #1
   1b090:	ldrh	r2, [r1, r2]
   1b094:	tst	r2, #8192	; 0x2000
   1b098:	bne	1b088 <argp_failure@@Base+0x3e4>
   1b09c:	cmp	r3, #44	; 0x2c
   1b0a0:	cmpne	r3, #0
   1b0a4:	beq	1bfd4 <argp_failure@@Base+0x1330>
   1b0a8:	cmp	r3, #61	; 0x3d
   1b0ac:	beq	1b0d4 <argp_failure@@Base+0x430>
   1b0b0:	ldrb	r3, [r4]
   1b0b4:	lsl	r3, r3, #1
   1b0b8:	ldrh	r3, [r1, r3]
   1b0bc:	tst	r3, #2048	; 0x800
   1b0c0:	bne	1b154 <argp_failure@@Base+0x4b0>
   1b0c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b0c8:	str	r3, [fp, #-96]	; 0xffffffa0
   1b0cc:	str	r3, [fp, #-116]	; 0xffffff8c
   1b0d0:	b	1bfe8 <argp_failure@@Base+0x1344>
   1b0d4:	add	r2, r4, #1
   1b0d8:	ldrb	r3, [r4, #1]
   1b0dc:	lsl	r3, r3, #1
   1b0e0:	ldrh	r3, [r1, r3]
   1b0e4:	tst	r3, #8192	; 0x2000
   1b0e8:	beq	1bfcc <argp_failure@@Base+0x1328>
   1b0ec:	ldrb	r3, [r2, #1]!
   1b0f0:	lsl	r3, r3, #1
   1b0f4:	ldrh	r3, [r1, r3]
   1b0f8:	tst	r3, #8192	; 0x2000
   1b0fc:	bne	1b0ec <argp_failure@@Base+0x448>
   1b100:	mov	r4, r2
   1b104:	b	1b0b0 <argp_failure@@Base+0x40c>
   1b108:	ldrb	r3, [r9, #1]
   1b10c:	cmp	r3, #111	; 0x6f
   1b110:	movne	r3, #1
   1b114:	strne	r3, [fp, #-96]	; 0xffffffa0
   1b118:	strne	r3, [fp, #-116]	; 0xffffff8c
   1b11c:	bne	1bfe8 <argp_failure@@Base+0x1344>
   1b120:	ldrb	r3, [r9, #2]
   1b124:	cmp	r3, #45	; 0x2d
   1b128:	movne	r3, #1
   1b12c:	strne	r3, [fp, #-96]	; 0xffffffa0
   1b130:	strne	r3, [fp, #-116]	; 0xffffff8c
   1b134:	bne	1bfe8 <argp_failure@@Base+0x1344>
   1b138:	add	r9, r9, #3
   1b13c:	sub	r5, r5, #3
   1b140:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b144:	str	r3, [fp, #-116]	; 0xffffff8c
   1b148:	mov	r3, #1
   1b14c:	str	r3, [fp, #-96]	; 0xffffffa0
   1b150:	b	1bfe8 <argp_failure@@Base+0x1344>
   1b154:	mov	r2, #10
   1b158:	mov	r1, #0
   1b15c:	mov	r0, r4
   1b160:	bl	113ac <strtol@plt>
   1b164:	str	r0, [fp, #-116]	; 0xffffff8c
   1b168:	ldr	r2, [r6]
   1b16c:	ldrb	r3, [r4]
   1b170:	lsl	r3, r3, #1
   1b174:	ldrh	r3, [r2, r3]
   1b178:	tst	r3, #2048	; 0x800
   1b17c:	beq	1b194 <argp_failure@@Base+0x4f0>
   1b180:	ldrb	r3, [r4, #1]!
   1b184:	lsl	r3, r3, #1
   1b188:	ldrh	r3, [r2, r3]
   1b18c:	tst	r3, #2048	; 0x800
   1b190:	bne	1b180 <argp_failure@@Base+0x4dc>
   1b194:	ldrb	r3, [r4]
   1b198:	lsl	r3, r3, #1
   1b19c:	ldrh	r3, [r2, r3]
   1b1a0:	tst	r3, #8192	; 0x2000
   1b1a4:	beq	1b1c8 <argp_failure@@Base+0x524>
   1b1a8:	ldrb	r3, [r4, #1]!
   1b1ac:	lsl	r3, r3, #1
   1b1b0:	ldrh	r3, [r2, r3]
   1b1b4:	tst	r3, #8192	; 0x2000
   1b1b8:	bne	1b1a8 <argp_failure@@Base+0x504>
   1b1bc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b1c0:	str	r3, [fp, #-96]	; 0xffffffa0
   1b1c4:	b	1bfe8 <argp_failure@@Base+0x1344>
   1b1c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b1cc:	str	r3, [fp, #-96]	; 0xffffffa0
   1b1d0:	b	1bfe8 <argp_failure@@Base+0x1344>
   1b1d4:	str	r9, [sp, #4]
   1b1d8:	str	r7, [sp]
   1b1dc:	ldr	r3, [pc, #2920]	; 1bd4c <argp_failure@@Base+0x10a8>
   1b1e0:	mov	r2, #0
   1b1e4:	mov	r1, r2
   1b1e8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b1ec:	bl	1aca4 <argp_failure@@Base>
   1b1f0:	b	1b258 <argp_failure@@Base+0x5b4>
   1b1f4:	add	r6, r6, #16
   1b1f8:	cmp	r6, r8
   1b1fc:	beq	1b274 <argp_failure@@Base+0x5d0>
   1b200:	mov	r0, r6
   1b204:	bl	11544 <strlen@plt>
   1b208:	mov	r7, r0
   1b20c:	cmp	r0, r5
   1b210:	bne	1b1f4 <argp_failure@@Base+0x550>
   1b214:	mov	r2, r5
   1b218:	mov	r1, r6
   1b21c:	mov	r0, r9
   1b220:	bl	116a0 <strncmp@plt>
   1b224:	cmp	r0, #0
   1b228:	bne	1b1f4 <argp_failure@@Base+0x550>
   1b22c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b230:	cmp	r3, #0
   1b234:	beq	1b244 <argp_failure@@Base+0x5a0>
   1b238:	ldrb	r3, [r6, #14]
   1b23c:	cmp	r3, #0
   1b240:	beq	1b1d4 <argp_failure@@Base+0x530>
   1b244:	ldrb	r3, [r6, #15]
   1b248:	sub	r2, fp, #36	; 0x24
   1b24c:	add	r3, r2, r3
   1b250:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1b254:	str	r2, [r3, #-40]	; 0xffffffd8
   1b258:	cmp	r6, r8
   1b25c:	beq	1b274 <argp_failure@@Base+0x5d0>
   1b260:	ldrb	r3, [r4]
   1b264:	cmp	r3, #44	; 0x2c
   1b268:	addeq	r9, r4, #1
   1b26c:	movne	r9, r4
   1b270:	b	1b29c <argp_failure@@Base+0x5f8>
   1b274:	str	r9, [sp, #4]
   1b278:	str	r5, [sp]
   1b27c:	ldr	r3, [pc, #2764]	; 1bd50 <argp_failure@@Base+0x10ac>
   1b280:	mov	r2, #0
   1b284:	mov	r1, r2
   1b288:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b28c:	bl	1aca4 <argp_failure@@Base>
   1b290:	b	1b260 <argp_failure@@Base+0x5bc>
   1b294:	cmp	r0, #0
   1b298:	bne	1b2bc <argp_failure@@Base+0x618>
   1b29c:	ldrb	r3, [r9]
   1b2a0:	cmp	r3, #0
   1b2a4:	beq	1b2d4 <argp_failure@@Base+0x630>
   1b2a8:	bl	11520 <__ctype_b_loc@plt>
   1b2ac:	mov	r6, r0
   1b2b0:	ldr	r1, [r0]
   1b2b4:	mov	r5, r9
   1b2b8:	b	1b004 <argp_failure@@Base+0x360>
   1b2bc:	str	r5, [sp]
   1b2c0:	ldr	r3, [pc, #2700]	; 1bd54 <argp_failure@@Base+0x10b0>
   1b2c4:	mov	r2, #0
   1b2c8:	mov	r1, r2
   1b2cc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b2d0:	bl	1aca4 <argp_failure@@Base>
   1b2d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b2d8:	ldr	r3, [pc, #2680]	; 1bd58 <argp_failure@@Base+0x10b4>
   1b2dc:	add	r1, r3, #144	; 0x90
   1b2e0:	add	r3, r3, #16
   1b2e4:	cmp	r3, r1
   1b2e8:	beq	1b33c <argp_failure@@Base+0x698>
   1b2ec:	ldrb	r2, [r3, #14]
   1b2f0:	cmp	r2, #0
   1b2f4:	bne	1b2e0 <argp_failure@@Base+0x63c>
   1b2f8:	ldrb	r2, [r3, #15]
   1b2fc:	cmp	r2, #32
   1b300:	beq	1b2e0 <argp_failure@@Base+0x63c>
   1b304:	sub	ip, fp, #36	; 0x24
   1b308:	add	r2, ip, r2
   1b30c:	ldr	r2, [r2, #-40]	; 0xffffffd8
   1b310:	cmp	r2, r0
   1b314:	blt	1b2e0 <argp_failure@@Base+0x63c>
   1b318:	str	r3, [sp, #4]
   1b31c:	ldr	r3, [pc, #2616]	; 1bd5c <argp_failure@@Base+0x10b8>
   1b320:	str	r3, [sp]
   1b324:	ldr	r3, [pc, #2612]	; 1bd60 <argp_failure@@Base+0x10bc>
   1b328:	mov	r2, #0
   1b32c:	mov	r1, r2
   1b330:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b334:	bl	1aca4 <argp_failure@@Base>
   1b338:	b	1aeec <argp_failure@@Base+0x248>
   1b33c:	ldr	r4, [pc, #2648]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b340:	mov	ip, r4
   1b344:	sub	lr, fp, #76	; 0x4c
   1b348:	ldm	lr!, {r0, r1, r2, r3}
   1b34c:	stmia	ip!, {r0, r1, r2, r3}
   1b350:	ldm	lr!, {r0, r1, r2, r3}
   1b354:	stmia	ip!, {r0, r1, r2, r3}
   1b358:	ldm	lr, {r0, r1}
   1b35c:	stm	ip, {r0, r1}
   1b360:	mov	r3, #1
   1b364:	str	r3, [r4, #36]	; 0x24
   1b368:	b	1aeec <argp_failure@@Base+0x248>
   1b36c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1b370:	bl	11460 <funlockfile@plt>
   1b374:	b	1bf38 <argp_failure@@Base+0x1294>
   1b378:	mov	r1, #0
   1b37c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1b380:	bl	1a5e8 <_obstack_memory_used@@Base+0x2424>
   1b384:	str	r0, [fp, #-108]	; 0xffffff94
   1b388:	ldr	r1, [pc, #2516]	; 1bd64 <argp_failure@@Base+0x10c0>
   1b38c:	bl	194f0 <_obstack_memory_used@@Base+0x132c>
   1b390:	cmp	r0, #0
   1b394:	mvnne	r3, #0
   1b398:	strne	r3, [r0, #12]
   1b39c:	ldr	r1, [pc, #2500]	; 1bd68 <argp_failure@@Base+0x10c4>
   1b3a0:	ldr	r0, [fp, #-108]	; 0xffffff94
   1b3a4:	bl	194f0 <_obstack_memory_used@@Base+0x132c>
   1b3a8:	cmp	r0, #0
   1b3ac:	mvnne	r3, #0
   1b3b0:	strne	r3, [r0, #12]
   1b3b4:	ldr	r0, [fp, #-108]	; 0xffffff94
   1b3b8:	ldr	r3, [r0, #4]
   1b3bc:	cmp	r3, #0
   1b3c0:	beq	1af20 <argp_failure@@Base+0x27c>
   1b3c4:	ldr	r2, [r0]
   1b3c8:	mov	r3, #0
   1b3cc:	str	r3, [r2, #24]
   1b3d0:	add	r3, r3, #1
   1b3d4:	add	r2, r2, #28
   1b3d8:	ldr	r1, [r0, #4]
   1b3dc:	cmp	r3, r1
   1b3e0:	bcc	1b3cc <argp_failure@@Base+0x728>
   1b3e4:	ldr	r3, [pc, #2432]	; 1bd6c <argp_failure@@Base+0x10c8>
   1b3e8:	mov	r2, #28
   1b3ec:	ldr	r0, [fp, #-108]	; 0xffffff94
   1b3f0:	ldr	r0, [r0]
   1b3f4:	bl	11658 <qsort@plt>
   1b3f8:	b	1af20 <argp_failure@@Base+0x27c>
   1b3fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   1b400:	bl	19588 <_obstack_memory_used@@Base+0x13c4>
   1b404:	mov	r2, r0
   1b408:	add	r3, r0, #14
   1b40c:	bic	r3, r3, #7
   1b410:	sub	sp, sp, r3
   1b414:	add	r8, sp, #8
   1b418:	mov	r1, #0
   1b41c:	mov	r0, r8
   1b420:	bl	11598 <memset@plt>
   1b424:	mov	r5, #1
   1b428:	ldr	r4, [pc, #2412]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b42c:	ldr	r9, [pc, #2364]	; 1bd70 <argp_failure@@Base+0x10cc>
   1b430:	str	r8, [fp, #-96]	; 0xffffffa0
   1b434:	ldr	r8, [fp, #-104]	; 0xffffff98
   1b438:	b	1b4e8 <argp_failure@@Base+0x844>
   1b43c:	mov	r0, sl
   1b440:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b444:	b	1b504 <argp_failure@@Base+0x860>
   1b448:	mov	r0, sl
   1b44c:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b450:	b	1b54c <argp_failure@@Base+0x8a8>
   1b454:	mov	r1, sl
   1b458:	ldr	r0, [fp, #-108]	; 0xffffff94
   1b45c:	bl	192e0 <_obstack_memory_used@@Base+0x111c>
   1b460:	orr	r8, r8, #2
   1b464:	str	sl, [sp]
   1b468:	mov	r3, #1
   1b46c:	sub	r2, fp, #76	; 0x4c
   1b470:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b474:	ldr	r0, [fp, #-112]	; 0xffffff90
   1b478:	bl	19808 <_obstack_memory_used@@Base+0x1644>
   1b47c:	mov	r6, r0
   1b480:	ldr	r3, [sl, #28]
   1b484:	ldr	r2, [sl, #24]
   1b488:	sub	r3, r3, r2
   1b48c:	ldr	r2, [sl, #16]
   1b490:	cmp	r3, r2
   1b494:	bhi	1b5bc <argp_failure@@Base+0x918>
   1b498:	str	r7, [sl, #12]
   1b49c:	ldr	r3, [sl, #28]
   1b4a0:	ldr	r2, [sl, #24]
   1b4a4:	sub	r3, r3, r2
   1b4a8:	ldr	r2, [sl, #16]
   1b4ac:	cmp	r3, r2
   1b4b0:	bhi	1b5c8 <argp_failure@@Base+0x924>
   1b4b4:	str	r5, [sl, #4]
   1b4b8:	ldr	r2, [sl, #28]
   1b4bc:	ldr	r3, [sl, #32]
   1b4c0:	cmp	r2, r3
   1b4c4:	bcs	1b5d4 <argp_failure@@Base+0x930>
   1b4c8:	ldr	r3, [sl, #28]
   1b4cc:	add	r2, r3, #1
   1b4d0:	str	r2, [sl, #28]
   1b4d4:	mov	r2, #10
   1b4d8:	strb	r2, [r3]
   1b4dc:	mov	r5, #0
   1b4e0:	cmp	r6, r5
   1b4e4:	beq	1b5ec <argp_failure@@Base+0x948>
   1b4e8:	ldr	r6, [r4, #28]
   1b4ec:	ldr	r3, [sl, #28]
   1b4f0:	ldr	r2, [sl, #24]
   1b4f4:	sub	r3, r3, r2
   1b4f8:	ldr	r2, [sl, #16]
   1b4fc:	cmp	r3, r2
   1b500:	bhi	1b43c <argp_failure@@Base+0x798>
   1b504:	ldr	r7, [sl, #12]
   1b508:	str	r6, [sl, #12]
   1b50c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b510:	str	r3, [fp, #-76]	; 0xffffffb4
   1b514:	cmp	r5, #0
   1b518:	ldr	r3, [fp, #4]
   1b51c:	ldrne	r2, [pc, #2128]	; 1bd74 <argp_failure@@Base+0x10d0>
   1b520:	ldreq	r2, [pc, #2128]	; 1bd78 <argp_failure@@Base+0x10d4>
   1b524:	mov	r1, r9
   1b528:	mov	r0, sl
   1b52c:	bl	1d58c <argp_error@@Base+0x146c>
   1b530:	ldr	r6, [r4, #28]
   1b534:	ldr	r3, [sl, #28]
   1b538:	ldr	r2, [sl, #24]
   1b53c:	sub	r3, r3, r2
   1b540:	ldr	r2, [sl, #16]
   1b544:	cmp	r3, r2
   1b548:	bhi	1b448 <argp_failure@@Base+0x7a4>
   1b54c:	ldr	r5, [sl, #4]
   1b550:	str	r6, [sl, #4]
   1b554:	tst	r8, #2
   1b558:	beq	1b454 <argp_failure@@Base+0x7b0>
   1b55c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b560:	ldr	r3, [r3, #4]
   1b564:	cmp	r3, #0
   1b568:	beq	1b464 <argp_failure@@Base+0x7c0>
   1b56c:	ldr	r3, [sl, #28]
   1b570:	add	r3, r3, #12
   1b574:	ldr	r2, [sl, #32]
   1b578:	cmp	r2, r3
   1b57c:	bcs	1b594 <argp_failure@@Base+0x8f0>
   1b580:	mov	r1, #12
   1b584:	mov	r0, sl
   1b588:	bl	1d49c <argp_error@@Base+0x137c>
   1b58c:	cmp	r0, #0
   1b590:	beq	1b464 <argp_failure@@Base+0x7c0>
   1b594:	ldr	ip, [sl, #28]
   1b598:	ldr	r3, [pc, #2012]	; 1bd7c <argp_failure@@Base+0x10d8>
   1b59c:	ldm	r3!, {r0, r1, r2}
   1b5a0:	str	r0, [ip]
   1b5a4:	str	r1, [ip, #4]
   1b5a8:	str	r2, [ip, #8]
   1b5ac:	ldr	r3, [sl, #28]
   1b5b0:	add	r3, r3, #12
   1b5b4:	str	r3, [sl, #28]
   1b5b8:	b	1b464 <argp_failure@@Base+0x7c0>
   1b5bc:	mov	r0, sl
   1b5c0:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b5c4:	b	1b498 <argp_failure@@Base+0x7f4>
   1b5c8:	mov	r0, sl
   1b5cc:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b5d0:	b	1b4b4 <argp_failure@@Base+0x810>
   1b5d4:	mov	r1, #1
   1b5d8:	mov	r0, sl
   1b5dc:	bl	1d49c <argp_error@@Base+0x137c>
   1b5e0:	cmp	r0, #0
   1b5e4:	beq	1b4dc <argp_failure@@Base+0x838>
   1b5e8:	b	1b4c8 <argp_failure@@Base+0x824>
   1b5ec:	str	r8, [fp, #-104]	; 0xffffff98
   1b5f0:	mov	r4, #1
   1b5f4:	b	1af30 <argp_failure@@Base+0x28c>
   1b5f8:	str	sl, [sp, #4]
   1b5fc:	mov	r3, #1
   1b600:	str	r3, [sp]
   1b604:	mov	r3, #0
   1b608:	mov	r2, r3
   1b60c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b610:	ldr	r0, [fp, #-112]	; 0xffffff90
   1b614:	bl	19d60 <_obstack_memory_used@@Base+0x1b9c>
   1b618:	orr	r4, r4, r0
   1b61c:	b	1af3c <argp_failure@@Base+0x298>
   1b620:	ldr	r3, [fp, #4]
   1b624:	mov	r2, r3
   1b628:	ldr	r1, [pc, #1872]	; 1bd80 <argp_failure@@Base+0x10dc>
   1b62c:	mov	r0, sl
   1b630:	bl	1d58c <argp_error@@Base+0x146c>
   1b634:	mov	r4, #1
   1b638:	b	1af48 <argp_failure@@Base+0x2a4>
   1b63c:	mov	r1, #1
   1b640:	mov	r0, sl
   1b644:	bl	1d49c <argp_error@@Base+0x137c>
   1b648:	cmp	r0, #0
   1b64c:	beq	1af90 <argp_failure@@Base+0x2ec>
   1b650:	b	1af7c <argp_failure@@Base+0x2d8>
   1b654:	mov	r0, sl
   1b658:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b65c:	b	1ba48 <argp_failure@@Base+0xda4>
   1b660:	add	r3, r3, #24
   1b664:	subs	r2, r2, #1
   1b668:	beq	1b68c <argp_failure@@Base+0x9e8>
   1b66c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1b670:	cmp	r1, #0
   1b674:	beq	1b660 <argp_failure@@Base+0x9bc>
   1b678:	ldr	r1, [r3, #-12]
   1b67c:	tst	r1, #2
   1b680:	bne	1b660 <argp_failure@@Base+0x9bc>
   1b684:	mov	r3, #1
   1b688:	str	r3, [fp, #-116]	; 0xffffff8c
   1b68c:	ldr	r3, [pc, #1800]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b690:	ldr	r4, [r3, #8]
   1b694:	ldr	r3, [sl, #28]
   1b698:	ldr	r2, [sl, #24]
   1b69c:	sub	r3, r3, r2
   1b6a0:	ldr	r2, [sl, #16]
   1b6a4:	cmp	r3, r2
   1b6a8:	bhi	1b6c8 <argp_failure@@Base+0xa24>
   1b6ac:	str	r4, [sl, #12]
   1b6b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b6b4:	ldr	r5, [r3, #4]
   1b6b8:	cmp	r5, #0
   1b6bc:	beq	1b7c4 <argp_failure@@Base+0xb20>
   1b6c0:	mov	r4, r8
   1b6c4:	b	1c008 <argp_failure@@Base+0x1364>
   1b6c8:	mov	r0, sl
   1b6cc:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b6d0:	b	1b6ac <argp_failure@@Base+0xa08>
   1b6d4:	tst	r6, #2
   1b6d8:	beq	1b6e4 <argp_failure@@Base+0xa40>
   1b6dc:	add	r9, r9, #1
   1b6e0:	b	1bffc <argp_failure@@Base+0x1358>
   1b6e4:	sub	r1, fp, #76	; 0x4c
   1b6e8:	ldr	r3, [pc, #1708]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b6ec:	ldr	r0, [r3, #8]
   1b6f0:	bl	19bdc <_obstack_memory_used@@Base+0x1a18>
   1b6f4:	ldr	r2, [sl, #28]
   1b6f8:	ldr	r3, [sl, #32]
   1b6fc:	cmp	r2, r3
   1b700:	bcs	1b780 <argp_failure@@Base+0xadc>
   1b704:	ldr	r3, [sl, #28]
   1b708:	add	r2, r3, #1
   1b70c:	str	r2, [sl, #28]
   1b710:	mov	r2, #45	; 0x2d
   1b714:	strb	r2, [r3]
   1b718:	ldrb	r6, [r9]
   1b71c:	ldr	r2, [sl, #28]
   1b720:	ldr	r3, [sl, #32]
   1b724:	cmp	r2, r3
   1b728:	bcs	1b798 <argp_failure@@Base+0xaf4>
   1b72c:	ldr	r3, [sl, #28]
   1b730:	add	r2, r3, #1
   1b734:	str	r2, [sl, #28]
   1b738:	strb	r6, [r3]
   1b73c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1b740:	cmp	r3, #0
   1b744:	beq	1b758 <argp_failure@@Base+0xab4>
   1b748:	ldr	r3, [pc, #1612]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b74c:	ldr	r3, [r3]
   1b750:	cmp	r3, #0
   1b754:	beq	1b7b0 <argp_failure@@Base+0xb0c>
   1b758:	ldr	r2, [r8, #8]
   1b75c:	cmp	r2, #0
   1b760:	beq	1b6dc <argp_failure@@Base+0xa38>
   1b764:	ldr	r3, [r8, #12]
   1b768:	tst	r3, #1
   1b76c:	ldrne	r1, [pc, #1552]	; 1bd84 <argp_failure@@Base+0x10e0>
   1b770:	ldreq	r1, [pc, #1552]	; 1bd88 <argp_failure@@Base+0x10e4>
   1b774:	mov	r0, sl
   1b778:	bl	1d58c <argp_error@@Base+0x146c>
   1b77c:	b	1b6dc <argp_failure@@Base+0xa38>
   1b780:	mov	r1, #1
   1b784:	mov	r0, sl
   1b788:	bl	1d49c <argp_error@@Base+0x137c>
   1b78c:	cmp	r0, #0
   1b790:	beq	1b718 <argp_failure@@Base+0xa74>
   1b794:	b	1b704 <argp_failure@@Base+0xa60>
   1b798:	mov	r1, #1
   1b79c:	mov	r0, sl
   1b7a0:	bl	1d49c <argp_error@@Base+0x137c>
   1b7a4:	cmp	r0, #0
   1b7a8:	beq	1b73c <argp_failure@@Base+0xa98>
   1b7ac:	b	1b72c <argp_failure@@Base+0xa88>
   1b7b0:	ldr	r3, [r8, #8]
   1b7b4:	cmp	r3, #0
   1b7b8:	movne	r3, #1
   1b7bc:	strne	r3, [fp, #-80]	; 0xffffffb0
   1b7c0:	b	1b6dc <argp_failure@@Base+0xa38>
   1b7c4:	ldr	r3, [r8, #12]
   1b7c8:	tst	r3, #8
   1b7cc:	beq	1b8a8 <argp_failure@@Base+0xc04>
   1b7d0:	ldr	r3, [pc, #1476]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b7d4:	ldr	r4, [r3, #16]
   1b7d8:	ldr	r3, [sl, #28]
   1b7dc:	ldr	r2, [sl, #24]
   1b7e0:	sub	r3, r3, r2
   1b7e4:	ldr	r2, [sl, #16]
   1b7e8:	cmp	r3, r2
   1b7ec:	bhi	1b80c <argp_failure@@Base+0xb68>
   1b7f0:	str	r4, [sl, #12]
   1b7f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b7f8:	ldr	r5, [r3, #4]
   1b7fc:	cmp	r5, #0
   1b800:	beq	1b95c <argp_failure@@Base+0xcb8>
   1b804:	add	r4, r8, #24
   1b808:	b	1b840 <argp_failure@@Base+0xb9c>
   1b80c:	mov	r0, sl
   1b810:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b814:	b	1b7f0 <argp_failure@@Base+0xb4c>
   1b818:	mov	r2, r6
   1b81c:	mov	r1, r7
   1b820:	ldr	r0, [sl, #28]
   1b824:	bl	1140c <memcpy@plt>
   1b828:	ldr	r3, [sl, #28]
   1b82c:	add	r6, r3, r6
   1b830:	str	r6, [sl, #28]
   1b834:	add	r4, r4, #24
   1b838:	subs	r5, r5, #1
   1b83c:	beq	1b95c <argp_failure@@Base+0xcb8>
   1b840:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1b844:	cmp	r3, #0
   1b848:	beq	1b834 <argp_failure@@Base+0xb90>
   1b84c:	ldr	r3, [r4, #-12]
   1b850:	tst	r3, #2
   1b854:	bne	1b834 <argp_failure@@Base+0xb90>
   1b858:	sub	r1, fp, #76	; 0x4c
   1b85c:	ldr	r3, [pc, #1336]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b860:	ldr	r0, [r3, #16]
   1b864:	bl	19bdc <_obstack_memory_used@@Base+0x1a18>
   1b868:	ldr	r7, [r4, #-24]	; 0xffffffe8
   1b86c:	mov	r0, r7
   1b870:	bl	11544 <strlen@plt>
   1b874:	subs	r6, r0, #0
   1b878:	beq	1b834 <argp_failure@@Base+0xb90>
   1b87c:	ldr	r3, [sl, #28]
   1b880:	add	r3, r3, r6
   1b884:	ldr	r2, [sl, #32]
   1b888:	cmp	r2, r3
   1b88c:	bcs	1b818 <argp_failure@@Base+0xb74>
   1b890:	mov	r1, r6
   1b894:	mov	r0, sl
   1b898:	bl	1d49c <argp_error@@Base+0x137c>
   1b89c:	cmp	r0, #0
   1b8a0:	beq	1b834 <argp_failure@@Base+0xb90>
   1b8a4:	b	1b818 <argp_failure@@Base+0xb74>
   1b8a8:	ldr	r3, [pc, #1260]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b8ac:	ldr	r4, [r3, #12]
   1b8b0:	ldr	r3, [sl, #28]
   1b8b4:	ldr	r2, [sl, #24]
   1b8b8:	sub	r3, r3, r2
   1b8bc:	ldr	r2, [sl, #16]
   1b8c0:	cmp	r3, r2
   1b8c4:	bhi	1b8e4 <argp_failure@@Base+0xc40>
   1b8c8:	str	r4, [sl, #12]
   1b8cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b8d0:	ldr	r5, [r3, #4]
   1b8d4:	cmp	r5, #0
   1b8d8:	beq	1b95c <argp_failure@@Base+0xcb8>
   1b8dc:	add	r4, r8, #24
   1b8e0:	b	1b8fc <argp_failure@@Base+0xc58>
   1b8e4:	mov	r0, sl
   1b8e8:	bl	1cef8 <argp_error@@Base+0xdd8>
   1b8ec:	b	1b8c8 <argp_failure@@Base+0xc24>
   1b8f0:	add	r4, r4, #24
   1b8f4:	subs	r5, r5, #1
   1b8f8:	beq	1b95c <argp_failure@@Base+0xcb8>
   1b8fc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1b900:	cmp	r3, #0
   1b904:	beq	1b8f0 <argp_failure@@Base+0xc4c>
   1b908:	ldr	r3, [r4, #-12]
   1b90c:	tst	r3, #2
   1b910:	bne	1b8f0 <argp_failure@@Base+0xc4c>
   1b914:	sub	r1, fp, #76	; 0x4c
   1b918:	ldr	r3, [pc, #1148]	; 1bd9c <argp_failure@@Base+0x10f8>
   1b91c:	ldr	r0, [r3, #12]
   1b920:	bl	19bdc <_obstack_memory_used@@Base+0x1a18>
   1b924:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1b928:	ldr	r1, [pc, #1116]	; 1bd8c <argp_failure@@Base+0x10e8>
   1b92c:	mov	r0, sl
   1b930:	bl	1d58c <argp_error@@Base+0x146c>
   1b934:	ldr	r2, [r8, #8]
   1b938:	cmp	r2, #0
   1b93c:	beq	1b8f0 <argp_failure@@Base+0xc4c>
   1b940:	ldr	r3, [r8, #12]
   1b944:	tst	r3, #1
   1b948:	ldrne	r1, [pc, #1088]	; 1bd90 <argp_failure@@Base+0x10ec>
   1b94c:	ldreq	r1, [pc, #1088]	; 1bd94 <argp_failure@@Base+0x10f0>
   1b950:	mov	r0, sl
   1b954:	bl	1d58c <argp_error@@Base+0x146c>
   1b958:	b	1b8f0 <argp_failure@@Base+0xc4c>
   1b95c:	ldr	r3, [sl, #28]
   1b960:	ldr	r2, [sl, #24]
   1b964:	sub	r3, r3, r2
   1b968:	ldr	r2, [sl, #16]
   1b96c:	cmp	r3, r2
   1b970:	bhi	1bab0 <argp_failure@@Base+0xe0c>
   1b974:	mov	r3, #0
   1b978:	str	r3, [sl, #4]
   1b97c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b980:	cmp	r3, #0
   1b984:	beq	1bad4 <argp_failure@@Base+0xe30>
   1b988:	ldr	r3, [r8, #12]
   1b98c:	tst	r3, #8
   1b990:	bne	1b9bc <argp_failure@@Base+0xd18>
   1b994:	ldr	r4, [r8, #4]
   1b998:	sub	r3, r4, #1
   1b99c:	cmp	r3, #254	; 0xfe
   1b9a0:	bhi	1b9bc <argp_failure@@Base+0xd18>
   1b9a4:	bl	11520 <__ctype_b_loc@plt>
   1b9a8:	ldr	r3, [r0]
   1b9ac:	lsl	r4, r4, #1
   1b9b0:	ldrh	r3, [r3, r4]
   1b9b4:	tst	r3, #16384	; 0x4000
   1b9b8:	bne	1b9c8 <argp_failure@@Base+0xd24>
   1b9bc:	ldr	r3, [r8]
   1b9c0:	cmp	r3, #0
   1b9c4:	beq	1babc <argp_failure@@Base+0xe18>
   1b9c8:	ldr	r3, [sl, #28]
   1b9cc:	ldr	r2, [sl, #24]
   1b9d0:	sub	r3, r3, r2
   1b9d4:	ldr	r2, [sl, #16]
   1b9d8:	cmp	r3, r2
   1b9dc:	bhi	1bd2c <argp_failure@@Base+0x1088>
   1b9e0:	ldr	r3, [fp, #-124]	; 0xffffff84
   1b9e4:	str	r3, [sl, #4]
   1b9e8:	ldr	r3, [sl, #28]
   1b9ec:	ldr	r2, [sl, #24]
   1b9f0:	sub	r3, r3, r2
   1b9f4:	ldr	r2, [sl, #16]
   1b9f8:	cmp	r3, r2
   1b9fc:	bhi	1bd38 <argp_failure@@Base+0x1094>
   1ba00:	ldr	r3, [fp, #-128]	; 0xffffff80
   1ba04:	str	r3, [sl, #12]
   1ba08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ba0c:	add	r3, r3, #28
   1ba10:	str	r3, [fp, #-96]	; 0xffffffa0
   1ba14:	ldr	r3, [fp, #-120]	; 0xffffff88
   1ba18:	subs	r3, r3, #1
   1ba1c:	str	r3, [fp, #-120]	; 0xffffff88
   1ba20:	beq	1bdb0 <argp_failure@@Base+0x110c>
   1ba24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ba28:	ldr	r8, [r3]
   1ba2c:	ldr	r9, [r3, #8]
   1ba30:	ldr	r3, [sl, #28]
   1ba34:	ldr	r2, [sl, #24]
   1ba38:	sub	r3, r3, r2
   1ba3c:	ldr	r2, [sl, #16]
   1ba40:	cmp	r3, r2
   1ba44:	bhi	1b654 <argp_failure@@Base+0x9b0>
   1ba48:	ldr	r3, [sl, #4]
   1ba4c:	str	r3, [fp, #-124]	; 0xffffff84
   1ba50:	mov	r3, #0
   1ba54:	str	r3, [sl, #4]
   1ba58:	ldr	r3, [sl, #12]
   1ba5c:	str	r3, [fp, #-128]	; 0xffffff80
   1ba60:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1ba64:	str	r2, [fp, #-76]	; 0xffffffb4
   1ba68:	str	sl, [fp, #-72]	; 0xffffffb8
   1ba6c:	sub	r3, fp, #88	; 0x58
   1ba70:	str	r3, [fp, #-68]	; 0xffffffbc
   1ba74:	mov	r3, #1
   1ba78:	str	r3, [fp, #-64]	; 0xffffffc0
   1ba7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ba80:	str	r3, [fp, #-60]	; 0xffffffc4
   1ba84:	ldr	r3, [r8, #12]
   1ba88:	ands	r3, r3, #8
   1ba8c:	str	r3, [fp, #-116]	; 0xffffff8c
   1ba90:	movne	r3, #0
   1ba94:	strne	r3, [fp, #-116]	; 0xffffff8c
   1ba98:	bne	1b68c <argp_failure@@Base+0x9e8>
   1ba9c:	ldr	r2, [r2, #4]
   1baa0:	cmp	r2, #0
   1baa4:	beq	1b68c <argp_failure@@Base+0x9e8>
   1baa8:	add	r3, r8, #24
   1baac:	b	1b66c <argp_failure@@Base+0x9c8>
   1bab0:	mov	r0, sl
   1bab4:	bl	1cef8 <argp_error@@Base+0xdd8>
   1bab8:	b	1b974 <argp_failure@@Base+0xcd0>
   1babc:	sub	r2, fp, #76	; 0x4c
   1bac0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bac4:	ldr	r1, [r3, #20]
   1bac8:	ldr	r0, [r8, #16]
   1bacc:	bl	199f8 <_obstack_memory_used@@Base+0x1834>
   1bad0:	b	1bc2c <argp_failure@@Base+0xf88>
   1bad4:	ldr	r7, [r8, #16]
   1bad8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1badc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1bae0:	ldr	r2, [r2, #20]
   1bae4:	ldr	r1, [r8, #4]
   1bae8:	mov	r0, r7
   1baec:	bl	197c4 <_obstack_memory_used@@Base+0x1600>
   1baf0:	subs	r4, r0, #0
   1baf4:	beq	1bbe8 <argp_failure@@Base+0xf44>
   1baf8:	ldrb	r3, [r4]
   1bafc:	cmp	r3, #0
   1bb00:	beq	1bbe0 <argp_failure@@Base+0xf3c>
   1bb04:	ldr	r3, [sl, #28]
   1bb08:	ldr	r2, [sl, #24]
   1bb0c:	sub	r3, r3, r2
   1bb10:	ldr	r2, [sl, #16]
   1bb14:	cmp	r3, r2
   1bb18:	bhi	1bc38 <argp_failure@@Base+0xf94>
   1bb1c:	ldr	r5, [sl, #20]
   1bb20:	bic	r5, r5, r5, asr #31
   1bb24:	ldr	r3, [pc, #624]	; 1bd9c <argp_failure@@Base+0x10f8>
   1bb28:	ldr	r6, [r3, #20]
   1bb2c:	str	r6, [sl, #4]
   1bb30:	ldr	r3, [pc, #612]	; 1bd9c <argp_failure@@Base+0x10f8>
   1bb34:	ldr	r6, [r3, #20]
   1bb38:	ldr	r3, [sl, #28]
   1bb3c:	ldr	r2, [sl, #24]
   1bb40:	sub	r3, r3, r2
   1bb44:	ldr	r2, [sl, #16]
   1bb48:	cmp	r3, r2
   1bb4c:	bhi	1bc74 <argp_failure@@Base+0xfd0>
   1bb50:	str	r6, [sl, #12]
   1bb54:	ldr	r3, [pc, #576]	; 1bd9c <argp_failure@@Base+0x10f8>
   1bb58:	ldr	r1, [r3, #20]
   1bb5c:	add	r3, r1, #3
   1bb60:	cmp	r3, r5
   1bb64:	bcs	1bc98 <argp_failure@@Base+0xff4>
   1bb68:	ldr	r2, [sl, #28]
   1bb6c:	ldr	r3, [sl, #32]
   1bb70:	cmp	r2, r3
   1bb74:	bcs	1bc80 <argp_failure@@Base+0xfdc>
   1bb78:	ldr	r3, [sl, #28]
   1bb7c:	add	r2, r3, #1
   1bb80:	str	r2, [sl, #28]
   1bb84:	mov	r2, #10
   1bb88:	strb	r2, [r3]
   1bb8c:	mov	r0, r4
   1bb90:	bl	11544 <strlen@plt>
   1bb94:	subs	r5, r0, #0
   1bb98:	beq	1bbe0 <argp_failure@@Base+0xf3c>
   1bb9c:	ldr	r3, [sl, #28]
   1bba0:	add	r3, r3, r5
   1bba4:	ldr	r2, [sl, #32]
   1bba8:	cmp	r2, r3
   1bbac:	bcs	1bbc4 <argp_failure@@Base+0xf20>
   1bbb0:	mov	r1, r5
   1bbb4:	mov	r0, sl
   1bbb8:	bl	1d49c <argp_error@@Base+0x137c>
   1bbbc:	cmp	r0, #0
   1bbc0:	beq	1bbe0 <argp_failure@@Base+0xf3c>
   1bbc4:	mov	r2, r5
   1bbc8:	mov	r1, r4
   1bbcc:	ldr	r0, [sl, #28]
   1bbd0:	bl	1140c <memcpy@plt>
   1bbd4:	ldr	r3, [sl, #28]
   1bbd8:	add	r5, r3, r5
   1bbdc:	str	r5, [sl, #28]
   1bbe0:	cmp	r7, r4
   1bbe4:	bne	1bcfc <argp_failure@@Base+0x1058>
   1bbe8:	ldr	r3, [sl, #28]
   1bbec:	ldr	r2, [sl, #24]
   1bbf0:	sub	r3, r3, r2
   1bbf4:	ldr	r2, [sl, #16]
   1bbf8:	cmp	r3, r2
   1bbfc:	bhi	1bd08 <argp_failure@@Base+0x1064>
   1bc00:	mov	r3, #0
   1bc04:	str	r3, [sl, #4]
   1bc08:	ldr	r2, [sl, #28]
   1bc0c:	ldr	r3, [sl, #32]
   1bc10:	cmp	r2, r3
   1bc14:	bcs	1bd14 <argp_failure@@Base+0x1070>
   1bc18:	ldr	r3, [sl, #28]
   1bc1c:	add	r2, r3, #1
   1bc20:	str	r2, [sl, #28]
   1bc24:	mov	r2, #10
   1bc28:	strb	r2, [r3]
   1bc2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bc30:	str	r3, [fp, #-88]	; 0xffffffa8
   1bc34:	b	1b9c8 <argp_failure@@Base+0xd24>
   1bc38:	mov	r0, sl
   1bc3c:	bl	1cef8 <argp_error@@Base+0xdd8>
   1bc40:	ldr	r5, [sl, #20]
   1bc44:	bic	r5, r5, r5, asr #31
   1bc48:	ldr	r3, [pc, #332]	; 1bd9c <argp_failure@@Base+0x10f8>
   1bc4c:	ldr	r6, [r3, #20]
   1bc50:	ldr	r3, [sl, #28]
   1bc54:	ldr	r2, [sl, #24]
   1bc58:	sub	r3, r3, r2
   1bc5c:	ldr	r2, [sl, #16]
   1bc60:	cmp	r3, r2
   1bc64:	bls	1bb2c <argp_failure@@Base+0xe88>
   1bc68:	mov	r0, sl
   1bc6c:	bl	1cef8 <argp_error@@Base+0xdd8>
   1bc70:	b	1bb2c <argp_failure@@Base+0xe88>
   1bc74:	mov	r0, sl
   1bc78:	bl	1cef8 <argp_error@@Base+0xdd8>
   1bc7c:	b	1bb50 <argp_failure@@Base+0xeac>
   1bc80:	mov	r1, #1
   1bc84:	mov	r0, sl
   1bc88:	bl	1d49c <argp_error@@Base+0x137c>
   1bc8c:	cmp	r0, #0
   1bc90:	beq	1bb8c <argp_failure@@Base+0xee8>
   1bc94:	b	1bb78 <argp_failure@@Base+0xed4>
   1bc98:	cmp	r1, r5
   1bc9c:	bhi	1bcf0 <argp_failure@@Base+0x104c>
   1bca0:	ldr	r3, [sl, #28]
   1bca4:	add	r3, r3, #3
   1bca8:	ldr	r2, [sl, #32]
   1bcac:	cmp	r2, r3
   1bcb0:	bcs	1bcc8 <argp_failure@@Base+0x1024>
   1bcb4:	mov	r1, #3
   1bcb8:	mov	r0, sl
   1bcbc:	bl	1d49c <argp_error@@Base+0x137c>
   1bcc0:	cmp	r0, #0
   1bcc4:	beq	1bb8c <argp_failure@@Base+0xee8>
   1bcc8:	ldr	r3, [sl, #28]
   1bccc:	ldr	r2, [pc, #196]	; 1bd98 <argp_failure@@Base+0x10f4>
   1bcd0:	ldrh	r1, [r2]
   1bcd4:	ldrb	r2, [r2, #2]
   1bcd8:	strh	r1, [r3]
   1bcdc:	strb	r2, [r3, #2]
   1bce0:	ldr	r3, [sl, #28]
   1bce4:	add	r3, r3, #3
   1bce8:	str	r3, [sl, #28]
   1bcec:	b	1bb8c <argp_failure@@Base+0xee8>
   1bcf0:	mov	r0, sl
   1bcf4:	bl	195e0 <_obstack_memory_used@@Base+0x141c>
   1bcf8:	b	1bb8c <argp_failure@@Base+0xee8>
   1bcfc:	mov	r0, r4
   1bd00:	bl	17d44 <argp_parse@@Base+0xbf4>
   1bd04:	b	1bbe8 <argp_failure@@Base+0xf44>
   1bd08:	mov	r0, sl
   1bd0c:	bl	1cef8 <argp_error@@Base+0xdd8>
   1bd10:	b	1bc00 <argp_failure@@Base+0xf5c>
   1bd14:	mov	r1, #1
   1bd18:	mov	r0, sl
   1bd1c:	bl	1d49c <argp_error@@Base+0x137c>
   1bd20:	cmp	r0, #0
   1bd24:	beq	1bc2c <argp_failure@@Base+0xf88>
   1bd28:	b	1bc18 <argp_failure@@Base+0xf74>
   1bd2c:	mov	r0, sl
   1bd30:	bl	1cef8 <argp_error@@Base+0xdd8>
   1bd34:	b	1b9e0 <argp_failure@@Base+0xd3c>
   1bd38:	mov	r0, sl
   1bd3c:	bl	1cef8 <argp_error@@Base+0xdd8>
   1bd40:	b	1ba00 <argp_failure@@Base+0xd5c>
   1bd44:	andeq	r0, r2, r4, lsr #24
   1bd48:	andeq	r0, r2, ip, asr #20
   1bd4c:	andeq	r0, r2, r4, lsr ip
   1bd50:	andeq	r0, r2, r4, ror #24
   1bd54:	andeq	r0, r2, ip, lsl #25
   1bd58:	andeq	r0, r2, r4, ror #20
   1bd5c:	andeq	r0, r2, r0, ror #25
   1bd60:	andeq	r0, r2, ip, lsr #25
   1bd64:	andeq	pc, r1, r4, lsr r4	; <UNPREDICTABLE>
   1bd68:	ldrdeq	r0, [r2], -r4
   1bd6c:	strdeq	sl, [r1], -r8
   1bd70:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1bd74:	andeq	r0, r2, r8, ror #25
   1bd78:	strdeq	r0, [r2], -r8
   1bd7c:	andeq	r0, r2, r0, lsl #26
   1bd80:	andeq	r0, r2, r0, lsl sp
   1bd84:	andeq	r0, r2, r8, asr #26
   1bd88:	ldrdeq	sp, [r1], -r0
   1bd8c:	andeq	r0, r2, r0, asr sp
   1bd90:	andeq	r0, r2, r8, asr sp
   1bd94:	andeq	r0, r2, r0, ror #26
   1bd98:	andeq	r0, r2, r4, ror #26
   1bd9c:	andeq	r2, r3, r0, lsl #22
   1bda0:	andeq	r0, r0, #5
   1bda4:	andeq	r0, r2, r8, ror #26
   1bda8:	andeq	r2, r3, r0, lsr #24
   1bdac:	ldrdeq	r0, [r2], -ip
   1bdb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bdb4:	cmp	r3, #0
   1bdb8:	beq	1bea8 <argp_failure@@Base+0x1204>
   1bdbc:	ldr	r3, [pc, #-40]	; 1bd9c <argp_failure@@Base+0x10f8>
   1bdc0:	ldr	r3, [r3, #4]
   1bdc4:	cmp	r3, #0
   1bdc8:	beq	1bea8 <argp_failure@@Base+0x1204>
   1bdcc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bdd0:	cmp	r3, #0
   1bdd4:	ldrne	r2, [r3]
   1bdd8:	moveq	r2, #0
   1bddc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bde0:	ldr	r1, [pc, #-72]	; 1bda0 <argp_failure@@Base+0x10fc>
   1bde4:	ldr	r0, [pc, #-72]	; 1bda4 <argp_failure@@Base+0x1100>
   1bde8:	bl	197c4 <_obstack_memory_used@@Base+0x1600>
   1bdec:	subs	r4, r0, #0
   1bdf0:	beq	1bea8 <argp_failure@@Base+0x1204>
   1bdf4:	ldrb	r3, [r4]
   1bdf8:	cmp	r3, #0
   1bdfc:	beq	1be9c <argp_failure@@Base+0x11f8>
   1be00:	ldr	r2, [sl, #28]
   1be04:	ldr	r3, [sl, #32]
   1be08:	cmp	r2, r3
   1be0c:	bcs	1bf40 <argp_failure@@Base+0x129c>
   1be10:	ldr	r3, [sl, #28]
   1be14:	add	r2, r3, #1
   1be18:	str	r2, [sl, #28]
   1be1c:	mov	r2, #10
   1be20:	strb	r2, [r3]
   1be24:	mov	r0, r4
   1be28:	bl	11544 <strlen@plt>
   1be2c:	subs	r5, r0, #0
   1be30:	beq	1be78 <argp_failure@@Base+0x11d4>
   1be34:	ldr	r3, [sl, #28]
   1be38:	add	r3, r3, r5
   1be3c:	ldr	r2, [sl, #32]
   1be40:	cmp	r2, r3
   1be44:	bcs	1be5c <argp_failure@@Base+0x11b8>
   1be48:	mov	r1, r5
   1be4c:	mov	r0, sl
   1be50:	bl	1d49c <argp_error@@Base+0x137c>
   1be54:	cmp	r0, #0
   1be58:	beq	1be78 <argp_failure@@Base+0x11d4>
   1be5c:	mov	r2, r5
   1be60:	mov	r1, r4
   1be64:	ldr	r0, [sl, #28]
   1be68:	bl	1140c <memcpy@plt>
   1be6c:	ldr	r3, [sl, #28]
   1be70:	add	r5, r3, r5
   1be74:	str	r5, [sl, #28]
   1be78:	ldr	r2, [sl, #28]
   1be7c:	ldr	r3, [sl, #32]
   1be80:	cmp	r2, r3
   1be84:	bcs	1bf58 <argp_failure@@Base+0x12b4>
   1be88:	ldr	r3, [sl, #28]
   1be8c:	add	r2, r3, #1
   1be90:	str	r2, [sl, #28]
   1be94:	mov	r2, #10
   1be98:	strb	r2, [r3]
   1be9c:	ldr	r3, [pc, #-256]	; 1bda4 <argp_failure@@Base+0x1100>
   1bea0:	cmp	r4, r3
   1bea4:	bne	1bf70 <argp_failure@@Base+0x12cc>
   1bea8:	mov	r4, #1
   1beac:	ldr	r3, [fp, #-104]	; 0xffffff98
   1beb0:	tst	r3, #32
   1beb4:	bne	1bf7c <argp_failure@@Base+0x12d8>
   1beb8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bebc:	tst	r3, #64	; 0x40
   1bec0:	beq	1bf14 <argp_failure@@Base+0x1270>
   1bec4:	ldr	r3, [pc, #-292]	; 1bda8 <argp_failure@@Base+0x1104>
   1bec8:	ldr	r3, [r3]
   1becc:	cmp	r3, #0
   1bed0:	beq	1bf14 <argp_failure@@Base+0x1270>
   1bed4:	cmp	r4, #0
   1bed8:	beq	1bf00 <argp_failure@@Base+0x125c>
   1bedc:	ldr	r2, [sl, #28]
   1bee0:	ldr	r3, [sl, #32]
   1bee4:	cmp	r2, r3
   1bee8:	bcs	1bfa4 <argp_failure@@Base+0x1300>
   1beec:	ldr	r3, [sl, #28]
   1bef0:	add	r2, r3, #1
   1bef4:	str	r2, [sl, #28]
   1bef8:	mov	r2, #10
   1befc:	strb	r2, [r3]
   1bf00:	ldr	r3, [pc, #-352]	; 1bda8 <argp_failure@@Base+0x1104>
   1bf04:	ldr	r2, [r3]
   1bf08:	ldr	r1, [pc, #-356]	; 1bdac <argp_failure@@Base+0x1108>
   1bf0c:	mov	r0, sl
   1bf10:	bl	1d58c <argp_error@@Base+0x146c>
   1bf14:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1bf18:	bl	11460 <funlockfile@plt>
   1bf1c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bf20:	cmp	r3, #0
   1bf24:	beq	1bf30 <argp_failure@@Base+0x128c>
   1bf28:	mov	r0, r3
   1bf2c:	bl	1949c <_obstack_memory_used@@Base+0x12d8>
   1bf30:	mov	r0, sl
   1bf34:	bl	1d45c <argp_error@@Base+0x133c>
   1bf38:	sub	sp, fp, #32
   1bf3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf40:	mov	r1, #1
   1bf44:	mov	r0, sl
   1bf48:	bl	1d49c <argp_error@@Base+0x137c>
   1bf4c:	cmp	r0, #0
   1bf50:	beq	1be24 <argp_failure@@Base+0x1180>
   1bf54:	b	1be10 <argp_failure@@Base+0x116c>
   1bf58:	mov	r1, #1
   1bf5c:	mov	r0, sl
   1bf60:	bl	1d49c <argp_error@@Base+0x137c>
   1bf64:	cmp	r0, #0
   1bf68:	beq	1be9c <argp_failure@@Base+0x11f8>
   1bf6c:	b	1be88 <argp_failure@@Base+0x11e4>
   1bf70:	mov	r0, r4
   1bf74:	bl	17d44 <argp_parse@@Base+0xbf4>
   1bf78:	b	1bea8 <argp_failure@@Base+0x1204>
   1bf7c:	str	sl, [sp, #4]
   1bf80:	mov	r3, #0
   1bf84:	str	r3, [sp]
   1bf88:	mov	r3, r4
   1bf8c:	mov	r2, #1
   1bf90:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1bf94:	ldr	r0, [fp, #-112]	; 0xffffff90
   1bf98:	bl	19d60 <_obstack_memory_used@@Base+0x1b9c>
   1bf9c:	orr	r4, r4, r0
   1bfa0:	b	1beb8 <argp_failure@@Base+0x1214>
   1bfa4:	mov	r1, #1
   1bfa8:	mov	r0, sl
   1bfac:	bl	1d49c <argp_error@@Base+0x137c>
   1bfb0:	cmp	r0, #0
   1bfb4:	beq	1bf00 <argp_failure@@Base+0x125c>
   1bfb8:	b	1beec <argp_failure@@Base+0x1248>
   1bfbc:	ldrb	r3, [r5]
   1bfc0:	mov	r4, r5
   1bfc4:	mov	r5, #0
   1bfc8:	b	1b09c <argp_failure@@Base+0x3f8>
   1bfcc:	mov	r4, r2
   1bfd0:	b	1b0b0 <argp_failure@@Base+0x40c>
   1bfd4:	cmp	r0, #110	; 0x6e
   1bfd8:	beq	1b108 <argp_failure@@Base+0x464>
   1bfdc:	mov	r3, #1
   1bfe0:	str	r3, [fp, #-96]	; 0xffffffa0
   1bfe4:	str	r3, [fp, #-116]	; 0xffffff8c
   1bfe8:	add	r6, sl, #24
   1bfec:	b	1b200 <argp_failure@@Base+0x55c>
   1bff0:	ldrb	r3, [r9]
   1bff4:	cmp	r7, r3
   1bff8:	beq	1b6d4 <argp_failure@@Base+0xa30>
   1bffc:	add	r4, r4, #24
   1c000:	subs	r5, r5, #1
   1c004:	beq	1b7c4 <argp_failure@@Base+0xb20>
   1c008:	ldr	r6, [r4, #12]
   1c00c:	tst	r6, #8
   1c010:	bne	1bffc <argp_failure@@Base+0x1358>
   1c014:	ldr	r7, [r4, #4]
   1c018:	sub	r3, r7, #1
   1c01c:	cmp	r3, #254	; 0xfe
   1c020:	bhi	1bffc <argp_failure@@Base+0x1358>
   1c024:	bl	11520 <__ctype_b_loc@plt>
   1c028:	ldr	r2, [r0]
   1c02c:	lsl	r3, r7, #1
   1c030:	ldrh	r3, [r2, r3]
   1c034:	tst	r3, #16384	; 0x4000
   1c038:	bne	1bff0 <argp_failure@@Base+0x134c>
   1c03c:	b	1bffc <argp_failure@@Base+0x1358>

0001c040 <argp_help@@Base>:
   1c040:	push	{lr}		; (str lr, [sp, #-4]!)
   1c044:	sub	sp, sp, #12
   1c048:	str	r3, [sp]
   1c04c:	mov	r3, r2
   1c050:	mov	r2, r1
   1c054:	mov	r1, #0
   1c058:	bl	1aeac <argp_failure@@Base+0x208>
   1c05c:	add	sp, sp, #12
   1c060:	pop	{pc}		; (ldr pc, [sp], #4)

0001c064 <argp_state_help@@Base>:
   1c064:	push	{r4, r5, lr}
   1c068:	sub	sp, sp, #12
   1c06c:	mov	r5, r2
   1c070:	subs	r4, r0, #0
   1c074:	beq	1c0d8 <argp_state_help@@Base+0x74>
   1c078:	ldr	r3, [r4, #16]
   1c07c:	tst	r3, #2
   1c080:	bne	1c0d0 <argp_state_help@@Base+0x6c>
   1c084:	cmp	r1, #0
   1c088:	beq	1c0d0 <argp_state_help@@Base+0x6c>
   1c08c:	ldr	r3, [r4, #16]
   1c090:	tst	r3, #64	; 0x40
   1c094:	orrne	r5, r5, #128	; 0x80
   1c098:	ldr	r0, [r4]
   1c09c:	ldr	r3, [r4, #40]	; 0x28
   1c0a0:	str	r3, [sp]
   1c0a4:	mov	r3, r5
   1c0a8:	mov	r2, r1
   1c0ac:	mov	r1, r4
   1c0b0:	bl	1aeac <argp_failure@@Base+0x208>
   1c0b4:	ldr	r3, [r4, #16]
   1c0b8:	tst	r3, #32
   1c0bc:	bne	1c0d0 <argp_state_help@@Base+0x6c>
   1c0c0:	tst	r5, #256	; 0x100
   1c0c4:	bne	1c104 <argp_state_help@@Base+0xa0>
   1c0c8:	tst	r5, #512	; 0x200
   1c0cc:	bne	1c110 <argp_state_help@@Base+0xac>
   1c0d0:	add	sp, sp, #12
   1c0d4:	pop	{r4, r5, pc}
   1c0d8:	cmp	r1, #0
   1c0dc:	beq	1c0d0 <argp_state_help@@Base+0x6c>
   1c0e0:	ldr	r3, [pc, #48]	; 1c118 <argp_state_help@@Base+0xb4>
   1c0e4:	ldr	r3, [r3]
   1c0e8:	str	r3, [sp]
   1c0ec:	mov	r3, r2
   1c0f0:	mov	r2, r1
   1c0f4:	mov	r1, #0
   1c0f8:	mov	r0, r1
   1c0fc:	bl	1aeac <argp_failure@@Base+0x208>
   1c100:	b	1c0c0 <argp_state_help@@Base+0x5c>
   1c104:	ldr	r3, [pc, #16]	; 1c11c <argp_state_help@@Base+0xb8>
   1c108:	ldr	r0, [r3]
   1c10c:	bl	1152c <exit@plt>
   1c110:	mov	r0, #0
   1c114:	bl	1152c <exit@plt>
   1c118:	andeq	r2, r3, r0, asr #22
   1c11c:	andeq	r2, r3, r8, lsr fp

0001c120 <argp_error@@Base>:
   1c120:	push	{r1, r2, r3}
   1c124:	push	{r4, r5, lr}
   1c128:	sub	sp, sp, #8
   1c12c:	subs	r5, r0, #0
   1c130:	beq	1c200 <argp_error@@Base+0xe0>
   1c134:	ldr	r3, [r5, #16]
   1c138:	tst	r3, #2
   1c13c:	bne	1c1f0 <argp_error@@Base+0xd0>
   1c140:	ldr	r4, [r5, #44]	; 0x2c
   1c144:	cmp	r4, #0
   1c148:	beq	1c1f0 <argp_error@@Base+0xd0>
   1c14c:	mov	r0, r4
   1c150:	bl	11634 <flockfile@plt>
   1c154:	add	r3, sp, #24
   1c158:	str	r3, [sp, #4]
   1c15c:	ldr	r0, [r5, #40]	; 0x28
   1c160:	mov	r1, r4
   1c164:	bl	11358 <fputs_unlocked@plt>
   1c168:	ldr	r3, [r4, #20]
   1c16c:	ldr	r2, [r4, #24]
   1c170:	cmp	r3, r2
   1c174:	addcc	r2, r3, #1
   1c178:	strcc	r2, [r4, #20]
   1c17c:	movcc	r2, #58	; 0x3a
   1c180:	strbcc	r2, [r3]
   1c184:	bcs	1c22c <argp_error@@Base+0x10c>
   1c188:	ldr	r3, [r4, #20]
   1c18c:	ldr	r2, [r4, #24]
   1c190:	cmp	r3, r2
   1c194:	addcc	r2, r3, #1
   1c198:	strcc	r2, [r4, #20]
   1c19c:	movcc	r2, #32
   1c1a0:	strbcc	r2, [r3]
   1c1a4:	bcs	1c23c <argp_error@@Base+0x11c>
   1c1a8:	ldr	r2, [sp, #4]
   1c1ac:	ldr	r1, [sp, #20]
   1c1b0:	mov	r0, r4
   1c1b4:	bl	11604 <vfprintf@plt>
   1c1b8:	ldr	r3, [r4, #20]
   1c1bc:	ldr	r2, [r4, #24]
   1c1c0:	cmp	r3, r2
   1c1c4:	addcc	r2, r3, #1
   1c1c8:	strcc	r2, [r4, #20]
   1c1cc:	movcc	r2, #10
   1c1d0:	strbcc	r2, [r3]
   1c1d4:	bcs	1c24c <argp_error@@Base+0x12c>
   1c1d8:	mov	r2, #260	; 0x104
   1c1dc:	mov	r1, r4
   1c1e0:	mov	r0, r5
   1c1e4:	bl	1c064 <argp_state_help@@Base>
   1c1e8:	mov	r0, r4
   1c1ec:	bl	11460 <funlockfile@plt>
   1c1f0:	add	sp, sp, #8
   1c1f4:	pop	{r4, r5, lr}
   1c1f8:	add	sp, sp, #12
   1c1fc:	bx	lr
   1c200:	ldr	r3, [pc, #84]	; 1c25c <argp_error@@Base+0x13c>
   1c204:	ldr	r4, [r3]
   1c208:	cmp	r4, #0
   1c20c:	beq	1c1f0 <argp_error@@Base+0xd0>
   1c210:	mov	r0, r4
   1c214:	bl	11634 <flockfile@plt>
   1c218:	add	r3, sp, #24
   1c21c:	str	r3, [sp, #4]
   1c220:	ldr	r3, [pc, #56]	; 1c260 <argp_error@@Base+0x140>
   1c224:	ldr	r0, [r3]
   1c228:	b	1c160 <argp_error@@Base+0x40>
   1c22c:	mov	r1, #58	; 0x3a
   1c230:	mov	r0, r4
   1c234:	bl	115e0 <__overflow@plt>
   1c238:	b	1c188 <argp_error@@Base+0x68>
   1c23c:	mov	r1, #32
   1c240:	mov	r0, r4
   1c244:	bl	115e0 <__overflow@plt>
   1c248:	b	1c1a8 <argp_error@@Base+0x88>
   1c24c:	mov	r1, #10
   1c250:	mov	r0, r4
   1c254:	bl	115e0 <__overflow@plt>
   1c258:	b	1c1d8 <argp_error@@Base+0xb8>
   1c25c:	andeq	r2, r3, r8, asr #22
   1c260:	andeq	r2, r3, r0, asr #22
   1c264:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c268:	ldr	r4, [r1, #28]
   1c26c:	ldr	r5, [r1, #32]
   1c270:	ldr	r6, [r1]
   1c274:	add	r7, r0, r5, lsl #2
   1c278:	b	1c2b0 <argp_error@@Base+0x190>
   1c27c:	cmp	sl, #0
   1c280:	ble	1c2ac <argp_error@@Base+0x18c>
   1c284:	add	r2, r0, r4, lsl #2
   1c288:	sub	r3, r6, sl
   1c28c:	add	r3, r0, r3, lsl #2
   1c290:	add	r8, r0, r6, lsl #2
   1c294:	ldr	ip, [r2]
   1c298:	ldr	lr, [r3]
   1c29c:	str	lr, [r2], #4
   1c2a0:	str	ip, [r3], #4
   1c2a4:	cmp	r3, r8
   1c2a8:	bne	1c294 <argp_error@@Base+0x174>
   1c2ac:	sub	r6, r6, sl
   1c2b0:	cmp	r6, r5
   1c2b4:	movle	r3, #0
   1c2b8:	movgt	r3, #1
   1c2bc:	cmp	r4, r5
   1c2c0:	movge	r3, #0
   1c2c4:	cmp	r3, #0
   1c2c8:	beq	1c314 <argp_error@@Base+0x1f4>
   1c2cc:	sub	r9, r6, r5
   1c2d0:	sub	sl, r5, r4
   1c2d4:	cmp	r9, sl
   1c2d8:	bgt	1c27c <argp_error@@Base+0x15c>
   1c2dc:	cmp	r9, #0
   1c2e0:	addgt	r3, r0, r4, lsl #2
   1c2e4:	addgt	r8, r9, r4
   1c2e8:	addgt	r8, r0, r8, lsl #2
   1c2ec:	movgt	r2, r7
   1c2f0:	ble	1c30c <argp_error@@Base+0x1ec>
   1c2f4:	ldr	ip, [r3]
   1c2f8:	ldr	lr, [r2]
   1c2fc:	str	lr, [r3], #4
   1c300:	str	ip, [r2], #4
   1c304:	cmp	r3, r8
   1c308:	bne	1c2f4 <argp_error@@Base+0x1d4>
   1c30c:	add	r4, r4, r9
   1c310:	b	1c2b0 <argp_error@@Base+0x190>
   1c314:	ldr	r0, [r1]
   1c318:	ldr	r3, [r1, #32]
   1c31c:	sub	r2, r0, r3
   1c320:	ldr	r3, [r1, #28]
   1c324:	add	r3, r3, r2
   1c328:	str	r3, [r1, #28]
   1c32c:	str	r0, [r1, #32]
   1c330:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c338:	sub	sp, sp, #44	; 0x2c
   1c33c:	str	r0, [sp, #20]
   1c340:	str	r1, [sp, #12]
   1c344:	str	r2, [sp, #24]
   1c348:	str	r3, [sp, #8]
   1c34c:	ldr	fp, [sp, #88]	; 0x58
   1c350:	ldr	sl, [fp, #20]
   1c354:	ldrb	r3, [sl]
   1c358:	cmp	r3, #0
   1c35c:	cmpne	r3, #61	; 0x3d
   1c360:	beq	1c39c <argp_error@@Base+0x27c>
   1c364:	mov	r8, sl
   1c368:	ldrb	r3, [r8, #1]!
   1c36c:	cmp	r3, #0
   1c370:	cmpne	r3, #61	; 0x3d
   1c374:	bne	1c368 <argp_error@@Base+0x248>
   1c378:	sub	r7, r8, sl
   1c37c:	ldr	r5, [sp, #8]
   1c380:	ldr	r3, [r5]
   1c384:	str	r3, [sp, #16]
   1c388:	cmp	r3, #0
   1c38c:	beq	1c690 <argp_error@@Base+0x570>
   1c390:	mov	r4, r3
   1c394:	mov	r6, #0
   1c398:	b	1c3b4 <argp_error@@Base+0x294>
   1c39c:	mov	r8, sl
   1c3a0:	b	1c378 <argp_error@@Base+0x258>
   1c3a4:	add	r6, r6, #1
   1c3a8:	ldr	r4, [r5, #16]!
   1c3ac:	cmp	r4, #0
   1c3b0:	beq	1c3ec <argp_error@@Base+0x2cc>
   1c3b4:	mov	r9, r5
   1c3b8:	mov	r2, r7
   1c3bc:	mov	r1, sl
   1c3c0:	mov	r0, r4
   1c3c4:	bl	116a0 <strncmp@plt>
   1c3c8:	cmp	r0, #0
   1c3cc:	bne	1c3a4 <argp_error@@Base+0x284>
   1c3d0:	mov	r0, r4
   1c3d4:	bl	11544 <strlen@plt>
   1c3d8:	cmp	r7, r0
   1c3dc:	bne	1c3a4 <argp_error@@Base+0x284>
   1c3e0:	cmp	r5, #0
   1c3e4:	strne	r6, [sp, #28]
   1c3e8:	bne	1c640 <argp_error@@Base+0x520>
   1c3ec:	ldr	r4, [sp, #8]
   1c3f0:	mvn	r3, #0
   1c3f4:	str	r3, [sp, #28]
   1c3f8:	mov	sl, #0
   1c3fc:	str	sl, [sp, #36]	; 0x24
   1c400:	mov	r5, sl
   1c404:	mov	r9, sl
   1c408:	str	r8, [sp, #32]
   1c40c:	mov	r8, sl
   1c410:	ldr	r0, [sp, #16]
   1c414:	b	1c464 <argp_error@@Base+0x344>
   1c418:	ldr	r2, [r9, #8]
   1c41c:	ldr	r3, [r4, #8]
   1c420:	cmp	r2, r3
   1c424:	bne	1c49c <argp_error@@Base+0x37c>
   1c428:	ldr	r2, [r9, #12]
   1c42c:	ldr	r3, [r4, #12]
   1c430:	cmp	r2, r3
   1c434:	bne	1c49c <argp_error@@Base+0x37c>
   1c438:	b	1c454 <argp_error@@Base+0x334>
   1c43c:	cmp	r8, #0
   1c440:	moveq	sl, #1
   1c444:	beq	1c454 <argp_error@@Base+0x334>
   1c448:	mov	sl, #1
   1c44c:	mov	r3, #1
   1c450:	strb	r3, [r8, r5]
   1c454:	add	r5, r5, #1
   1c458:	ldr	r0, [r4, #16]!
   1c45c:	cmp	r0, #0
   1c460:	beq	1c504 <argp_error@@Base+0x3e4>
   1c464:	mov	r2, r7
   1c468:	ldr	r1, [fp, #20]
   1c46c:	bl	116a0 <strncmp@plt>
   1c470:	cmp	r0, #0
   1c474:	bne	1c454 <argp_error@@Base+0x334>
   1c478:	cmp	r9, #0
   1c47c:	beq	1c4f0 <argp_error@@Base+0x3d0>
   1c480:	ldr	r3, [sp, #84]	; 0x54
   1c484:	cmp	r3, #0
   1c488:	bne	1c49c <argp_error@@Base+0x37c>
   1c48c:	ldr	r2, [r9, #4]
   1c490:	ldr	r3, [r4, #4]
   1c494:	cmp	r2, r3
   1c498:	beq	1c418 <argp_error@@Base+0x2f8>
   1c49c:	cmp	sl, #0
   1c4a0:	bne	1c454 <argp_error@@Base+0x334>
   1c4a4:	ldr	r3, [sp, #92]	; 0x5c
   1c4a8:	cmp	r3, #0
   1c4ac:	beq	1c43c <argp_error@@Base+0x31c>
   1c4b0:	cmp	r8, #0
   1c4b4:	bne	1c44c <argp_error@@Base+0x32c>
   1c4b8:	mov	r0, r6
   1c4bc:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1c4c0:	subs	r8, r0, #0
   1c4c4:	beq	1c4fc <argp_error@@Base+0x3dc>
   1c4c8:	mov	r2, r6
   1c4cc:	mov	r1, #0
   1c4d0:	mov	r0, r8
   1c4d4:	bl	11598 <memset@plt>
   1c4d8:	ldr	r3, [sp, #28]
   1c4dc:	mov	r2, #1
   1c4e0:	strb	r2, [r8, r3]
   1c4e4:	mov	r3, #1
   1c4e8:	str	r3, [sp, #36]	; 0x24
   1c4ec:	b	1c44c <argp_error@@Base+0x32c>
   1c4f0:	str	r5, [sp, #28]
   1c4f4:	mov	r9, r4
   1c4f8:	b	1c454 <argp_error@@Base+0x334>
   1c4fc:	mov	sl, #1
   1c500:	b	1c454 <argp_error@@Base+0x334>
   1c504:	mov	r3, r8
   1c508:	str	r8, [sp, #16]
   1c50c:	ldr	r8, [sp, #32]
   1c510:	cmp	sl, #0
   1c514:	cmpeq	r3, #0
   1c518:	beq	1c638 <argp_error@@Base+0x518>
   1c51c:	ldr	r3, [sp, #92]	; 0x5c
   1c520:	cmp	r3, #0
   1c524:	beq	1c554 <argp_error@@Base+0x434>
   1c528:	cmp	sl, #0
   1c52c:	beq	1c590 <argp_error@@Base+0x470>
   1c530:	ldr	r3, [sp, #12]
   1c534:	ldr	r2, [r3]
   1c538:	ldr	r3, [pc, #708]	; 1c804 <argp_error@@Base+0x6e4>
   1c53c:	ldr	r0, [r3]
   1c540:	ldr	r3, [fp, #20]
   1c544:	str	r3, [sp]
   1c548:	ldr	r3, [sp, #96]	; 0x60
   1c54c:	ldr	r1, [pc, #692]	; 1c808 <argp_error@@Base+0x6e8>
   1c550:	bl	1155c <fprintf@plt>
   1c554:	ldr	r3, [sp, #36]	; 0x24
   1c558:	cmp	r3, #0
   1c55c:	bne	1c62c <argp_error@@Base+0x50c>
   1c560:	ldr	r4, [fp, #20]
   1c564:	mov	r0, r4
   1c568:	bl	11544 <strlen@plt>
   1c56c:	add	r0, r4, r0
   1c570:	str	r0, [fp, #20]
   1c574:	ldr	r3, [fp]
   1c578:	add	r3, r3, #1
   1c57c:	str	r3, [fp]
   1c580:	mov	r3, #0
   1c584:	str	r3, [fp, #8]
   1c588:	mov	r0, #63	; 0x3f
   1c58c:	b	1c784 <argp_error@@Base+0x664>
   1c590:	ldr	r4, [pc, #620]	; 1c804 <argp_error@@Base+0x6e4>
   1c594:	ldr	r0, [r4]
   1c598:	bl	11634 <flockfile@plt>
   1c59c:	ldr	r3, [sp, #12]
   1c5a0:	ldr	r2, [r3]
   1c5a4:	ldr	r0, [r4]
   1c5a8:	ldr	r3, [fp, #20]
   1c5ac:	str	r3, [sp]
   1c5b0:	ldr	r3, [sp, #96]	; 0x60
   1c5b4:	ldr	r1, [pc, #592]	; 1c80c <argp_error@@Base+0x6ec>
   1c5b8:	bl	1155c <fprintf@plt>
   1c5bc:	cmp	r6, #0
   1c5c0:	ble	1c610 <argp_error@@Base+0x4f0>
   1c5c4:	ldr	r3, [sp, #16]
   1c5c8:	mov	r4, r3
   1c5cc:	add	r6, r3, r6
   1c5d0:	ldr	r7, [pc, #568]	; 1c810 <argp_error@@Base+0x6f0>
   1c5d4:	ldr	r5, [pc, #552]	; 1c804 <argp_error@@Base+0x6e4>
   1c5d8:	ldr	r8, [sp, #8]
   1c5dc:	b	1c5ec <argp_error@@Base+0x4cc>
   1c5e0:	add	sl, sl, #1
   1c5e4:	cmp	r4, r6
   1c5e8:	beq	1c610 <argp_error@@Base+0x4f0>
   1c5ec:	ldrb	r3, [r4], #1
   1c5f0:	cmp	r3, #0
   1c5f4:	beq	1c5e0 <argp_error@@Base+0x4c0>
   1c5f8:	ldr	r3, [r8, sl, lsl #4]
   1c5fc:	ldr	r2, [sp, #96]	; 0x60
   1c600:	mov	r1, r7
   1c604:	ldr	r0, [r5]
   1c608:	bl	1155c <fprintf@plt>
   1c60c:	b	1c5e0 <argp_error@@Base+0x4c0>
   1c610:	ldr	r4, [pc, #492]	; 1c804 <argp_error@@Base+0x6e4>
   1c614:	ldr	r1, [r4]
   1c618:	mov	r0, #10
   1c61c:	bl	11610 <fputc@plt>
   1c620:	ldr	r0, [r4]
   1c624:	bl	11460 <funlockfile@plt>
   1c628:	b	1c554 <argp_error@@Base+0x434>
   1c62c:	ldr	r0, [sp, #16]
   1c630:	bl	17d44 <argp_parse@@Base+0xbf4>
   1c634:	b	1c560 <argp_error@@Base+0x440>
   1c638:	cmp	r9, #0
   1c63c:	beq	1c690 <argp_error@@Base+0x570>
   1c640:	ldr	r2, [fp]
   1c644:	add	r3, r2, #1
   1c648:	str	r3, [fp]
   1c64c:	mov	r1, #0
   1c650:	str	r1, [fp, #20]
   1c654:	ldrb	r1, [r8]
   1c658:	cmp	r1, #0
   1c65c:	beq	1c750 <argp_error@@Base+0x630>
   1c660:	ldr	r3, [r9, #4]
   1c664:	cmp	r3, #0
   1c668:	addne	r8, r8, #1
   1c66c:	strne	r8, [fp, #12]
   1c670:	bne	1c75c <argp_error@@Base+0x63c>
   1c674:	ldr	r3, [sp, #92]	; 0x5c
   1c678:	cmp	r3, #0
   1c67c:	bne	1c728 <argp_error@@Base+0x608>
   1c680:	ldr	r3, [r9, #12]
   1c684:	str	r3, [fp, #8]
   1c688:	mov	r0, #63	; 0x3f
   1c68c:	b	1c784 <argp_error@@Base+0x664>
   1c690:	ldr	r3, [sp, #84]	; 0x54
   1c694:	cmp	r3, #0
   1c698:	bne	1c6c8 <argp_error@@Base+0x5a8>
   1c69c:	ldr	r3, [sp, #92]	; 0x5c
   1c6a0:	cmp	r3, #0
   1c6a4:	bne	1c700 <argp_error@@Base+0x5e0>
   1c6a8:	mov	r2, #0
   1c6ac:	str	r2, [fp, #20]
   1c6b0:	ldr	r3, [fp]
   1c6b4:	add	r3, r3, #1
   1c6b8:	str	r3, [fp]
   1c6bc:	str	r2, [fp, #8]
   1c6c0:	mov	r0, #63	; 0x3f
   1c6c4:	b	1c784 <argp_error@@Base+0x664>
   1c6c8:	ldr	r3, [fp]
   1c6cc:	ldr	r2, [sp, #12]
   1c6d0:	ldr	r3, [r2, r3, lsl #2]
   1c6d4:	ldrb	r3, [r3, #1]
   1c6d8:	cmp	r3, #45	; 0x2d
   1c6dc:	beq	1c69c <argp_error@@Base+0x57c>
   1c6e0:	ldr	r3, [fp, #20]
   1c6e4:	ldrb	r1, [r3]
   1c6e8:	ldr	r0, [sp, #24]
   1c6ec:	bl	11550 <strchr@plt>
   1c6f0:	cmp	r0, #0
   1c6f4:	beq	1c69c <argp_error@@Base+0x57c>
   1c6f8:	mvn	r0, #0
   1c6fc:	b	1c784 <argp_error@@Base+0x664>
   1c700:	ldr	r3, [sp, #12]
   1c704:	ldr	r2, [r3]
   1c708:	ldr	r3, [pc, #244]	; 1c804 <argp_error@@Base+0x6e4>
   1c70c:	ldr	r0, [r3]
   1c710:	ldr	r3, [fp, #20]
   1c714:	str	r3, [sp]
   1c718:	ldr	r3, [sp, #96]	; 0x60
   1c71c:	ldr	r1, [pc, #240]	; 1c814 <argp_error@@Base+0x6f4>
   1c720:	bl	1155c <fprintf@plt>
   1c724:	b	1c6a8 <argp_error@@Base+0x588>
   1c728:	ldr	r3, [sp, #12]
   1c72c:	ldr	r2, [r3]
   1c730:	ldr	r3, [pc, #204]	; 1c804 <argp_error@@Base+0x6e4>
   1c734:	ldr	r0, [r3]
   1c738:	ldr	r3, [r9]
   1c73c:	str	r3, [sp]
   1c740:	ldr	r3, [sp, #96]	; 0x60
   1c744:	ldr	r1, [pc, #204]	; 1c818 <argp_error@@Base+0x6f8>
   1c748:	bl	1155c <fprintf@plt>
   1c74c:	b	1c680 <argp_error@@Base+0x560>
   1c750:	ldr	r1, [r9, #4]
   1c754:	cmp	r1, #1
   1c758:	beq	1c78c <argp_error@@Base+0x66c>
   1c75c:	ldr	r3, [sp, #80]	; 0x50
   1c760:	cmp	r3, #0
   1c764:	ldrne	r2, [sp, #28]
   1c768:	strne	r2, [r3]
   1c76c:	ldr	r3, [r9, #8]
   1c770:	cmp	r3, #0
   1c774:	ldrne	r2, [r9, #12]
   1c778:	strne	r2, [r3]
   1c77c:	movne	r0, #0
   1c780:	ldreq	r0, [r9, #12]
   1c784:	add	sp, sp, #44	; 0x2c
   1c788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c78c:	ldr	r1, [sp, #20]
   1c790:	cmp	r3, r1
   1c794:	bge	1c7b0 <argp_error@@Base+0x690>
   1c798:	add	r2, r2, #2
   1c79c:	str	r2, [fp]
   1c7a0:	ldr	r2, [sp, #12]
   1c7a4:	ldr	r3, [r2, r3, lsl #2]
   1c7a8:	str	r3, [fp, #12]
   1c7ac:	b	1c75c <argp_error@@Base+0x63c>
   1c7b0:	ldr	r3, [sp, #92]	; 0x5c
   1c7b4:	cmp	r3, #0
   1c7b8:	bne	1c7dc <argp_error@@Base+0x6bc>
   1c7bc:	ldr	r3, [r9, #12]
   1c7c0:	str	r3, [fp, #8]
   1c7c4:	ldr	r3, [sp, #24]
   1c7c8:	ldrb	r0, [r3]
   1c7cc:	cmp	r0, #58	; 0x3a
   1c7d0:	moveq	r0, #58	; 0x3a
   1c7d4:	movne	r0, #63	; 0x3f
   1c7d8:	b	1c784 <argp_error@@Base+0x664>
   1c7dc:	ldr	r3, [sp, #12]
   1c7e0:	ldr	r2, [r3]
   1c7e4:	ldr	r3, [pc, #24]	; 1c804 <argp_error@@Base+0x6e4>
   1c7e8:	ldr	r0, [r3]
   1c7ec:	ldr	r3, [r9]
   1c7f0:	str	r3, [sp]
   1c7f4:	ldr	r3, [sp, #96]	; 0x60
   1c7f8:	ldr	r1, [pc, #28]	; 1c81c <argp_error@@Base+0x6fc>
   1c7fc:	bl	1155c <fprintf@plt>
   1c800:	b	1c7bc <argp_error@@Base+0x69c>
   1c804:	andeq	r2, r3, r8, asr #22
   1c808:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1c80c:	andeq	r0, r2, r0, lsl lr
   1c810:	andeq	r0, r2, r0, asr #28
   1c814:	andeq	r0, r2, r8, asr #28
   1c818:	andeq	r0, r2, r8, ror #28
   1c81c:	muleq	r2, r8, lr
   1c820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c824:	sub	sp, sp, #36	; 0x24
   1c828:	str	r3, [sp, #24]
   1c82c:	ldr	r4, [sp, #80]	; 0x50
   1c830:	ldr	r8, [r4, #4]
   1c834:	subs	r5, r0, #0
   1c838:	ble	1cd40 <argp_error@@Base+0xc20>
   1c83c:	mov	r9, r1
   1c840:	mov	r6, r2
   1c844:	mov	r3, #0
   1c848:	str	r3, [r4, #12]
   1c84c:	ldr	r3, [r4]
   1c850:	cmp	r3, #0
   1c854:	beq	1c878 <argp_error@@Base+0x758>
   1c858:	ldr	r3, [r4, #16]
   1c85c:	cmp	r3, #0
   1c860:	beq	1c880 <argp_error@@Base+0x760>
   1c864:	ldrb	r3, [r2]
   1c868:	sub	r3, r3, #43	; 0x2b
   1c86c:	tst	r3, #253	; 0xfd
   1c870:	addeq	r6, r2, #1
   1c874:	b	1c8dc <argp_error@@Base+0x7bc>
   1c878:	mov	r3, #1
   1c87c:	str	r3, [r4]
   1c880:	ldr	r3, [r4]
   1c884:	str	r3, [r4, #32]
   1c888:	str	r3, [r4, #28]
   1c88c:	mov	r3, #0
   1c890:	str	r3, [r4, #20]
   1c894:	ldrb	r3, [r6]
   1c898:	cmp	r3, #45	; 0x2d
   1c89c:	moveq	r3, #2
   1c8a0:	streq	r3, [r4, #24]
   1c8a4:	addeq	r6, r6, #1
   1c8a8:	beq	1c8d4 <argp_error@@Base+0x7b4>
   1c8ac:	cmp	r3, #43	; 0x2b
   1c8b0:	moveq	r3, #0
   1c8b4:	streq	r3, [r4, #24]
   1c8b8:	addeq	r6, r6, #1
   1c8bc:	beq	1c8d4 <argp_error@@Base+0x7b4>
   1c8c0:	ldr	r3, [sp, #84]	; 0x54
   1c8c4:	cmp	r3, #0
   1c8c8:	beq	1c978 <argp_error@@Base+0x858>
   1c8cc:	mov	r3, #0
   1c8d0:	str	r3, [r4, #24]
   1c8d4:	mov	r3, #1
   1c8d8:	str	r3, [r4, #16]
   1c8dc:	ldrb	r3, [r6]
   1c8e0:	cmp	r3, #58	; 0x3a
   1c8e4:	moveq	r8, #0
   1c8e8:	ldr	r3, [r4, #20]
   1c8ec:	cmp	r3, #0
   1c8f0:	beq	1c900 <argp_error@@Base+0x7e0>
   1c8f4:	ldrb	r3, [r3]
   1c8f8:	cmp	r3, #0
   1c8fc:	bne	1ca8c <argp_error@@Base+0x96c>
   1c900:	ldr	r3, [r4]
   1c904:	ldr	r2, [r4, #32]
   1c908:	cmp	r2, r3
   1c90c:	strgt	r3, [r4, #32]
   1c910:	ldr	r2, [r4, #28]
   1c914:	cmp	r3, r2
   1c918:	strlt	r3, [r4, #28]
   1c91c:	ldr	r2, [r4, #24]
   1c920:	cmp	r2, #1
   1c924:	beq	1c994 <argp_error@@Base+0x874>
   1c928:	ldr	r7, [r4]
   1c92c:	cmp	r5, r7
   1c930:	beq	1ca18 <argp_error@@Base+0x8f8>
   1c934:	ldr	sl, [r9, r7, lsl #2]
   1c938:	ldr	r1, [pc, #1088]	; 1cd80 <argp_error@@Base+0xc60>
   1c93c:	mov	r0, sl
   1c940:	bl	113a0 <strcmp@plt>
   1c944:	cmp	r0, #0
   1c948:	bne	1cd50 <argp_error@@Base+0xc30>
   1c94c:	add	r7, r7, #1
   1c950:	str	r7, [r4]
   1c954:	ldr	r2, [r4, #28]
   1c958:	ldr	r3, [r4, #32]
   1c95c:	cmp	r7, r3
   1c960:	cmpne	r2, r3
   1c964:	beq	1ca08 <argp_error@@Base+0x8e8>
   1c968:	mov	r1, r4
   1c96c:	mov	r0, r9
   1c970:	bl	1c264 <argp_error@@Base+0x144>
   1c974:	b	1ca10 <argp_error@@Base+0x8f0>
   1c978:	ldr	r0, [pc, #1028]	; 1cd84 <argp_error@@Base+0xc64>
   1c97c:	bl	114b4 <getenv@plt>
   1c980:	cmp	r0, #0
   1c984:	bne	1c8cc <argp_error@@Base+0x7ac>
   1c988:	mov	r3, #1
   1c98c:	str	r3, [r4, #24]
   1c990:	b	1c8d4 <argp_error@@Base+0x7b4>
   1c994:	ldr	r2, [r4, #32]
   1c998:	ldr	r1, [r4, #28]
   1c99c:	cmp	r1, r2
   1c9a0:	cmpne	r3, r2
   1c9a4:	beq	1c9b8 <argp_error@@Base+0x898>
   1c9a8:	mov	r1, r4
   1c9ac:	mov	r0, r9
   1c9b0:	bl	1c264 <argp_error@@Base+0x144>
   1c9b4:	b	1c9c0 <argp_error@@Base+0x8a0>
   1c9b8:	cmp	r3, r2
   1c9bc:	strne	r3, [r4, #28]
   1c9c0:	ldr	r3, [r4]
   1c9c4:	cmp	r5, r3
   1c9c8:	ble	1ca00 <argp_error@@Base+0x8e0>
   1c9cc:	add	r1, r9, r3, lsl #2
   1c9d0:	b	1c9e4 <argp_error@@Base+0x8c4>
   1c9d4:	add	r3, r3, #1
   1c9d8:	str	r3, [r4]
   1c9dc:	cmp	r5, r3
   1c9e0:	beq	1ca00 <argp_error@@Base+0x8e0>
   1c9e4:	ldr	r2, [r1], #4
   1c9e8:	ldrb	r0, [r2]
   1c9ec:	cmp	r0, #45	; 0x2d
   1c9f0:	bne	1c9d4 <argp_error@@Base+0x8b4>
   1c9f4:	ldrb	r2, [r2, #1]
   1c9f8:	cmp	r2, #0
   1c9fc:	beq	1c9d4 <argp_error@@Base+0x8b4>
   1ca00:	str	r3, [r4, #32]
   1ca04:	b	1c928 <argp_error@@Base+0x808>
   1ca08:	cmp	r2, r3
   1ca0c:	streq	r7, [r4, #28]
   1ca10:	str	r5, [r4, #32]
   1ca14:	str	r5, [r4]
   1ca18:	ldr	r3, [r4, #28]
   1ca1c:	ldr	r2, [r4, #32]
   1ca20:	cmp	r3, r2
   1ca24:	mvneq	r0, #0
   1ca28:	strne	r3, [r4]
   1ca2c:	mvnne	r0, #0
   1ca30:	b	1cb90 <argp_error@@Base+0xa70>
   1ca34:	ldrb	r1, [sl, #1]
   1ca38:	cmp	r1, #0
   1ca3c:	beq	1cd5c <argp_error@@Base+0xc3c>
   1ca40:	ldr	r3, [sp, #24]
   1ca44:	cmp	r3, #0
   1ca48:	beq	1ca7c <argp_error@@Base+0x95c>
   1ca4c:	cmp	r1, #45	; 0x2d
   1ca50:	beq	1caf4 <argp_error@@Base+0x9d4>
   1ca54:	ldr	r3, [sp, #76]	; 0x4c
   1ca58:	cmp	r3, #0
   1ca5c:	beq	1ca7c <argp_error@@Base+0x95c>
   1ca60:	ldrb	r3, [sl, #2]
   1ca64:	cmp	r3, #0
   1ca68:	bne	1cb34 <argp_error@@Base+0xa14>
   1ca6c:	mov	r0, r6
   1ca70:	bl	11550 <strchr@plt>
   1ca74:	cmp	r0, #0
   1ca78:	beq	1cb34 <argp_error@@Base+0xa14>
   1ca7c:	ldr	r3, [r4]
   1ca80:	ldr	r3, [r9, r3, lsl #2]
   1ca84:	add	r3, r3, #1
   1ca88:	str	r3, [r4, #20]
   1ca8c:	ldr	sl, [r4, #20]
   1ca90:	add	fp, sl, #1
   1ca94:	str	fp, [r4, #20]
   1ca98:	ldrb	r7, [sl]
   1ca9c:	str	r7, [sp, #28]
   1caa0:	mov	r1, r7
   1caa4:	mov	r0, r6
   1caa8:	bl	11550 <strchr@plt>
   1caac:	ldrb	r3, [sl, #1]
   1cab0:	cmp	r3, #0
   1cab4:	ldreq	r3, [r4]
   1cab8:	addeq	r3, r3, #1
   1cabc:	streq	r3, [r4]
   1cac0:	sub	r3, r7, #58	; 0x3a
   1cac4:	uxtb	r3, r3
   1cac8:	cmp	r0, #0
   1cacc:	cmpne	r3, #1
   1cad0:	bls	1cb7c <argp_error@@Base+0xa5c>
   1cad4:	ldrb	r3, [r0]
   1cad8:	cmp	r3, #87	; 0x57
   1cadc:	beq	1cbb4 <argp_error@@Base+0xa94>
   1cae0:	ldrb	r3, [r0, #1]
   1cae4:	cmp	r3, #58	; 0x3a
   1cae8:	beq	1cc80 <argp_error@@Base+0xb60>
   1caec:	mov	r0, r7
   1caf0:	b	1cb90 <argp_error@@Base+0xa70>
   1caf4:	add	sl, sl, #2
   1caf8:	str	sl, [r4, #20]
   1cafc:	ldr	r3, [pc, #636]	; 1cd80 <argp_error@@Base+0xc60>
   1cb00:	str	r3, [sp, #16]
   1cb04:	str	r8, [sp, #12]
   1cb08:	str	r4, [sp, #8]
   1cb0c:	ldr	r3, [sp, #76]	; 0x4c
   1cb10:	str	r3, [sp, #4]
   1cb14:	ldr	r3, [sp, #72]	; 0x48
   1cb18:	str	r3, [sp]
   1cb1c:	ldr	r3, [sp, #24]
   1cb20:	mov	r2, r6
   1cb24:	mov	r1, r9
   1cb28:	mov	r0, r5
   1cb2c:	bl	1c334 <argp_error@@Base+0x214>
   1cb30:	b	1cb90 <argp_error@@Base+0xa70>
   1cb34:	add	sl, sl, #1
   1cb38:	str	sl, [r4, #20]
   1cb3c:	ldr	r3, [pc, #580]	; 1cd88 <argp_error@@Base+0xc68>
   1cb40:	str	r3, [sp, #16]
   1cb44:	str	r8, [sp, #12]
   1cb48:	str	r4, [sp, #8]
   1cb4c:	ldr	r3, [sp, #76]	; 0x4c
   1cb50:	str	r3, [sp, #4]
   1cb54:	ldr	r3, [sp, #72]	; 0x48
   1cb58:	str	r3, [sp]
   1cb5c:	ldr	r3, [sp, #24]
   1cb60:	mov	r2, r6
   1cb64:	mov	r1, r9
   1cb68:	mov	r0, r5
   1cb6c:	bl	1c334 <argp_error@@Base+0x214>
   1cb70:	cmn	r0, #1
   1cb74:	bne	1cb90 <argp_error@@Base+0xa70>
   1cb78:	b	1ca7c <argp_error@@Base+0x95c>
   1cb7c:	cmp	r8, #0
   1cb80:	bne	1cb98 <argp_error@@Base+0xa78>
   1cb84:	ldr	r3, [sp, #28]
   1cb88:	str	r3, [r4, #8]
   1cb8c:	mov	r0, #63	; 0x3f
   1cb90:	add	sp, sp, #36	; 0x24
   1cb94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb98:	ldr	r3, [sp, #28]
   1cb9c:	ldr	r2, [r9]
   1cba0:	ldr	r1, [pc, #484]	; 1cd8c <argp_error@@Base+0xc6c>
   1cba4:	ldr	r0, [pc, #484]	; 1cd90 <argp_error@@Base+0xc70>
   1cba8:	ldr	r0, [r0]
   1cbac:	bl	1155c <fprintf@plt>
   1cbb0:	b	1cb84 <argp_error@@Base+0xa64>
   1cbb4:	ldrb	r3, [r0, #1]
   1cbb8:	ldr	r2, [sp, #24]
   1cbbc:	cmp	r3, #59	; 0x3b
   1cbc0:	movne	r3, #0
   1cbc4:	moveq	r3, #1
   1cbc8:	cmp	r2, #0
   1cbcc:	moveq	r3, #0
   1cbd0:	cmp	r3, #0
   1cbd4:	beq	1cae0 <argp_error@@Base+0x9c0>
   1cbd8:	ldrb	r3, [sl, #1]
   1cbdc:	cmp	r3, #0
   1cbe0:	strne	fp, [r4, #12]
   1cbe4:	bne	1cbfc <argp_error@@Base+0xadc>
   1cbe8:	ldr	r3, [r4]
   1cbec:	cmp	r5, r3
   1cbf0:	beq	1cc40 <argp_error@@Base+0xb20>
   1cbf4:	ldr	r3, [r9, r3, lsl #2]
   1cbf8:	str	r3, [r4, #12]
   1cbfc:	ldr	r3, [r4, #12]
   1cc00:	str	r3, [r4, #20]
   1cc04:	mov	r3, #0
   1cc08:	str	r3, [r4, #12]
   1cc0c:	ldr	r2, [pc, #384]	; 1cd94 <argp_error@@Base+0xc74>
   1cc10:	str	r2, [sp, #16]
   1cc14:	str	r8, [sp, #12]
   1cc18:	str	r4, [sp, #8]
   1cc1c:	str	r3, [sp, #4]
   1cc20:	ldr	r3, [sp, #72]	; 0x48
   1cc24:	str	r3, [sp]
   1cc28:	ldr	r3, [sp, #24]
   1cc2c:	mov	r2, r6
   1cc30:	mov	r1, r9
   1cc34:	mov	r0, r5
   1cc38:	bl	1c334 <argp_error@@Base+0x214>
   1cc3c:	b	1cb90 <argp_error@@Base+0xa70>
   1cc40:	cmp	r8, #0
   1cc44:	bne	1cc64 <argp_error@@Base+0xb44>
   1cc48:	ldr	r3, [sp, #28]
   1cc4c:	str	r3, [r4, #8]
   1cc50:	ldrb	r0, [r6]
   1cc54:	cmp	r0, #58	; 0x3a
   1cc58:	moveq	r0, #58	; 0x3a
   1cc5c:	movne	r0, #63	; 0x3f
   1cc60:	b	1cb90 <argp_error@@Base+0xa70>
   1cc64:	ldr	r3, [sp, #28]
   1cc68:	ldr	r2, [r9]
   1cc6c:	ldr	r1, [pc, #292]	; 1cd98 <argp_error@@Base+0xc78>
   1cc70:	ldr	r0, [pc, #280]	; 1cd90 <argp_error@@Base+0xc70>
   1cc74:	ldr	r0, [r0]
   1cc78:	bl	1155c <fprintf@plt>
   1cc7c:	b	1cc48 <argp_error@@Base+0xb28>
   1cc80:	ldrb	r3, [r0, #2]
   1cc84:	cmp	r3, #58	; 0x3a
   1cc88:	beq	1ccb4 <argp_error@@Base+0xb94>
   1cc8c:	ldrb	r3, [sl, #1]
   1cc90:	cmp	r3, #0
   1cc94:	beq	1cce0 <argp_error@@Base+0xbc0>
   1cc98:	str	fp, [r4, #12]
   1cc9c:	ldr	r3, [r4]
   1cca0:	add	r3, r3, #1
   1cca4:	str	r3, [r4]
   1cca8:	mov	r3, #0
   1ccac:	str	r3, [r4, #20]
   1ccb0:	b	1caec <argp_error@@Base+0x9cc>
   1ccb4:	ldrb	r3, [sl, #1]
   1ccb8:	cmp	r3, #0
   1ccbc:	strne	fp, [r4, #12]
   1ccc0:	ldrne	r3, [r4]
   1ccc4:	addne	r3, r3, #1
   1ccc8:	strne	r3, [r4]
   1cccc:	moveq	r3, #0
   1ccd0:	streq	r3, [r4, #12]
   1ccd4:	mov	r3, #0
   1ccd8:	str	r3, [r4, #20]
   1ccdc:	b	1caec <argp_error@@Base+0x9cc>
   1cce0:	ldr	r3, [r4]
   1cce4:	cmp	r5, r3
   1cce8:	beq	1cd00 <argp_error@@Base+0xbe0>
   1ccec:	add	r2, r3, #1
   1ccf0:	str	r2, [r4]
   1ccf4:	ldr	r3, [r9, r3, lsl #2]
   1ccf8:	str	r3, [r4, #12]
   1ccfc:	b	1cca8 <argp_error@@Base+0xb88>
   1cd00:	cmp	r8, #0
   1cd04:	bne	1cd24 <argp_error@@Base+0xc04>
   1cd08:	ldr	r3, [sp, #28]
   1cd0c:	str	r3, [r4, #8]
   1cd10:	ldrb	r7, [r6]
   1cd14:	cmp	r7, #58	; 0x3a
   1cd18:	moveq	r7, #58	; 0x3a
   1cd1c:	movne	r7, #63	; 0x3f
   1cd20:	b	1cca8 <argp_error@@Base+0xb88>
   1cd24:	ldr	r3, [sp, #28]
   1cd28:	ldr	r2, [r9]
   1cd2c:	ldr	r1, [pc, #100]	; 1cd98 <argp_error@@Base+0xc78>
   1cd30:	ldr	r0, [pc, #88]	; 1cd90 <argp_error@@Base+0xc70>
   1cd34:	ldr	r0, [r0]
   1cd38:	bl	1155c <fprintf@plt>
   1cd3c:	b	1cd08 <argp_error@@Base+0xbe8>
   1cd40:	mvn	r0, #0
   1cd44:	b	1cb90 <argp_error@@Base+0xa70>
   1cd48:	mvn	r0, #0
   1cd4c:	b	1cb90 <argp_error@@Base+0xa70>
   1cd50:	ldrb	r3, [sl]
   1cd54:	cmp	r3, #45	; 0x2d
   1cd58:	beq	1ca34 <argp_error@@Base+0x914>
   1cd5c:	ldr	r3, [r4, #24]
   1cd60:	cmp	r3, #0
   1cd64:	beq	1cd48 <argp_error@@Base+0xc28>
   1cd68:	add	r3, r7, #1
   1cd6c:	str	r3, [r4]
   1cd70:	ldr	r3, [r9, r7, lsl #2]
   1cd74:	str	r3, [r4, #12]
   1cd78:	mov	r0, #1
   1cd7c:	b	1cb90 <argp_error@@Base+0xa70>
   1cd80:	muleq	r2, ip, r5
   1cd84:	andeq	r0, r2, r0, asr #29
   1cd88:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1cd8c:	ldrdeq	r0, [r2], -r4
   1cd90:	andeq	r2, r3, r8, asr #22
   1cd94:	andeq	r0, r2, ip, lsl pc
   1cd98:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1cd9c:	push	{r4, r5, lr}
   1cda0:	sub	sp, sp, #20
   1cda4:	ldr	r4, [pc, #84]	; 1ce00 <argp_error@@Base+0xce0>
   1cda8:	ldr	r5, [pc, #84]	; 1ce04 <argp_error@@Base+0xce4>
   1cdac:	ldr	ip, [r5]
   1cdb0:	str	ip, [r4]
   1cdb4:	ldr	ip, [r5, #4]
   1cdb8:	str	ip, [r4, #4]
   1cdbc:	ldr	ip, [sp, #40]	; 0x28
   1cdc0:	str	ip, [sp, #12]
   1cdc4:	str	r4, [sp, #8]
   1cdc8:	ldr	ip, [sp, #36]	; 0x24
   1cdcc:	str	ip, [sp, #4]
   1cdd0:	ldr	ip, [sp, #32]
   1cdd4:	str	ip, [sp]
   1cdd8:	bl	1c820 <argp_error@@Base+0x700>
   1cddc:	ldr	r3, [r4]
   1cde0:	str	r3, [r5]
   1cde4:	ldr	r2, [r4, #12]
   1cde8:	ldr	r3, [pc, #24]	; 1ce08 <argp_error@@Base+0xce8>
   1cdec:	str	r2, [r3]
   1cdf0:	ldr	r3, [r4, #8]
   1cdf4:	str	r3, [r5, #8]
   1cdf8:	add	sp, sp, #20
   1cdfc:	pop	{r4, r5, pc}
   1ce00:	andeq	r2, r3, r8, asr #23
   1ce04:	andeq	r2, r3, ip, lsr #22
   1ce08:	andeq	r2, r3, r8, lsr #24
   1ce0c:	push	{lr}		; (str lr, [sp, #-4]!)
   1ce10:	sub	sp, sp, #20
   1ce14:	mov	r3, #1
   1ce18:	str	r3, [sp, #8]
   1ce1c:	mov	r3, #0
   1ce20:	str	r3, [sp, #4]
   1ce24:	str	r3, [sp]
   1ce28:	bl	1cd9c <argp_error@@Base+0xc7c>
   1ce2c:	add	sp, sp, #20
   1ce30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce34:	push	{r4, r5, r6, lr}
   1ce38:	mov	r6, r0
   1ce3c:	mov	r5, r1
   1ce40:	subs	r4, r2, #0
   1ce44:	beq	1ce70 <argp_error@@Base+0xd50>
   1ce48:	mov	r1, r4
   1ce4c:	mvn	r0, #0
   1ce50:	bl	1d60c <argp_error@@Base+0x14ec>
   1ce54:	cmp	r0, r5
   1ce58:	bcs	1ce70 <argp_error@@Base+0xd50>
   1ce5c:	bl	11568 <__errno_location@plt>
   1ce60:	mov	r3, #12
   1ce64:	str	r3, [r0]
   1ce68:	mov	r0, #0
   1ce6c:	pop	{r4, r5, r6, pc}
   1ce70:	mul	r1, r5, r4
   1ce74:	mov	r0, r6
   1ce78:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   1ce7c:	pop	{r4, r5, r6, pc}
   1ce80:	push	{r4, r5, r6, r7, r8, lr}
   1ce84:	mov	r8, r0
   1ce88:	mov	r7, r1
   1ce8c:	mov	r6, r2
   1ce90:	mov	r5, r3
   1ce94:	mov	r0, #36	; 0x24
   1ce98:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1ce9c:	subs	r4, r0, #0
   1cea0:	beq	1cee0 <argp_error@@Base+0xdc0>
   1cea4:	str	r8, [r4]
   1cea8:	str	r7, [r4, #4]
   1ceac:	str	r6, [r4, #8]
   1ceb0:	str	r5, [r4, #12]
   1ceb4:	mov	r3, #0
   1ceb8:	str	r3, [r4, #20]
   1cebc:	str	r3, [r4, #16]
   1cec0:	mov	r0, #200	; 0xc8
   1cec4:	bl	19020 <_obstack_memory_used@@Base+0xe5c>
   1cec8:	str	r0, [r4, #24]
   1cecc:	cmp	r0, #0
   1ced0:	strne	r0, [r4, #28]
   1ced4:	addne	r0, r0, #200	; 0xc8
   1ced8:	strne	r0, [r4, #32]
   1cedc:	beq	1cee8 <argp_error@@Base+0xdc8>
   1cee0:	mov	r0, r4
   1cee4:	pop	{r4, r5, r6, r7, r8, pc}
   1cee8:	mov	r0, r4
   1ceec:	bl	17d44 <argp_parse@@Base+0xbf4>
   1cef0:	mov	r4, #0
   1cef4:	b	1cee0 <argp_error@@Base+0xdc0>
   1cef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cefc:	sub	sp, sp, #20
   1cf00:	mov	r4, r0
   1cf04:	ldr	r2, [r0, #24]
   1cf08:	ldr	r3, [r0, #16]
   1cf0c:	add	r9, r2, r3
   1cf10:	mov	sl, #32
   1cf14:	b	1cfc0 <argp_error@@Base+0xea0>
   1cf18:	add	r5, r5, #1
   1cf1c:	cmp	r6, r5
   1cf20:	beq	1cf50 <argp_error@@Base+0xe30>
   1cf24:	ldr	r0, [r4]
   1cf28:	ldr	r3, [r0, #20]
   1cf2c:	ldr	r2, [r0, #24]
   1cf30:	cmp	r3, r2
   1cf34:	addcc	r2, r3, #1
   1cf38:	strcc	r2, [r0, #20]
   1cf3c:	strbcc	sl, [r3]
   1cf40:	bcc	1cf18 <argp_error@@Base+0xdf8>
   1cf44:	mov	r1, sl
   1cf48:	bl	115e0 <__overflow@plt>
   1cf4c:	b	1cf18 <argp_error@@Base+0xdf8>
   1cf50:	str	r6, [r4, #20]
   1cf54:	ldr	fp, [r4, #28]
   1cf58:	str	fp, [sp, #8]
   1cf5c:	str	r9, [sp, #4]
   1cf60:	sub	r3, fp, r9
   1cf64:	str	r3, [sp]
   1cf68:	mov	r2, r3
   1cf6c:	mov	r1, #10
   1cf70:	mov	r0, r9
   1cf74:	bl	115bc <memchr@plt>
   1cf78:	mov	r7, r0
   1cf7c:	ldr	r3, [r4, #20]
   1cf80:	cmp	r3, #0
   1cf84:	movlt	r3, #0
   1cf88:	strlt	r3, [r4, #20]
   1cf8c:	cmp	r7, #0
   1cf90:	beq	1d030 <argp_error@@Base+0xf10>
   1cf94:	ldr	r0, [r4, #20]
   1cf98:	mov	r5, r7
   1cf9c:	ldr	r8, [r4, #8]
   1cfa0:	ldr	r3, [sp, #4]
   1cfa4:	sub	r3, r7, r3
   1cfa8:	add	r3, r3, r0
   1cfac:	cmp	r3, r8
   1cfb0:	bge	1d080 <argp_error@@Base+0xf60>
   1cfb4:	mov	r3, #0
   1cfb8:	str	r3, [r4, #20]
   1cfbc:	add	r9, r7, #1
   1cfc0:	ldr	fp, [r4, #28]
   1cfc4:	cmp	r9, fp
   1cfc8:	bcs	1d068 <argp_error@@Base+0xf48>
   1cfcc:	ldr	r3, [r4, #20]
   1cfd0:	cmp	r3, #0
   1cfd4:	bne	1cf54 <argp_error@@Base+0xe34>
   1cfd8:	ldr	r6, [r4, #4]
   1cfdc:	cmp	r6, #0
   1cfe0:	beq	1d42c <argp_error@@Base+0x130c>
   1cfe4:	add	r3, fp, r6
   1cfe8:	ldr	r2, [r4, #32]
   1cfec:	cmp	r2, r3
   1cff0:	movls	r5, #0
   1cff4:	bls	1cf24 <argp_error@@Base+0xe04>
   1cff8:	add	r5, r9, r6
   1cffc:	sub	r2, fp, r9
   1d000:	mov	r1, r9
   1d004:	mov	r0, r5
   1d008:	bl	113c4 <memmove@plt>
   1d00c:	ldr	r3, [r4, #28]
   1d010:	add	r3, r3, r6
   1d014:	str	r3, [r4, #28]
   1d018:	mov	r2, r6
   1d01c:	mov	r1, sl
   1d020:	mov	r0, r9
   1d024:	bl	11598 <memset@plt>
   1d028:	mov	r9, r5
   1d02c:	b	1cf50 <argp_error@@Base+0xe30>
   1d030:	ldr	r3, [r4, #20]
   1d034:	ldr	r2, [sp]
   1d038:	add	r3, r2, r3
   1d03c:	ldr	r6, [r4, #8]
   1d040:	cmp	r3, r6
   1d044:	bcc	1d064 <argp_error@@Base+0xf44>
   1d048:	sub	r6, r6, #1
   1d04c:	ldr	r3, [r4, #12]
   1d050:	str	r3, [sp, #12]
   1d054:	cmp	r3, #0
   1d058:	blt	1d174 <argp_error@@Base+0x1054>
   1d05c:	mov	r7, fp
   1d060:	b	1d094 <argp_error@@Base+0xf74>
   1d064:	str	r3, [r4, #20]
   1d068:	ldr	r3, [r4, #28]
   1d06c:	ldr	r2, [r4, #24]
   1d070:	sub	r3, r3, r2
   1d074:	str	r3, [r4, #16]
   1d078:	add	sp, sp, #20
   1d07c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d080:	sub	r6, r8, #1
   1d084:	ldr	r3, [r4, #12]
   1d088:	str	r3, [sp, #12]
   1d08c:	cmp	r3, #0
   1d090:	blt	1d128 <argp_error@@Base+0x1008>
   1d094:	ldr	r5, [r4, #20]
   1d098:	rsb	r5, r5, #1
   1d09c:	add	r5, r5, r6
   1d0a0:	adds	r5, r9, r5
   1d0a4:	bcs	1d454 <argp_error@@Base+0x1334>
   1d0a8:	bl	11520 <__ctype_b_loc@plt>
   1d0ac:	ldr	r0, [r0]
   1d0b0:	mov	r3, r5
   1d0b4:	mov	r1, r3
   1d0b8:	sub	r3, r3, #1
   1d0bc:	ldrb	r2, [r1]
   1d0c0:	lsl	r2, r2, #1
   1d0c4:	ldrh	r2, [r0, r2]
   1d0c8:	tst	r2, #1
   1d0cc:	bne	1d194 <argp_error@@Base+0x1074>
   1d0d0:	mov	r1, r3
   1d0d4:	cmp	r3, r9
   1d0d8:	bcs	1d0b4 <argp_error@@Base+0xf94>
   1d0dc:	add	r6, r1, #1
   1d0e0:	cmp	r6, r9
   1d0e4:	bhi	1d1d0 <argp_error@@Base+0x10b0>
   1d0e8:	cmp	r5, r7
   1d0ec:	bcs	1d280 <argp_error@@Base+0x1160>
   1d0f0:	add	r6, r5, #1
   1d0f4:	mov	r8, r7
   1d0f8:	mov	r5, r6
   1d0fc:	cmp	r8, r6
   1d100:	beq	1d280 <argp_error@@Base+0x1160>
   1d104:	bl	11520 <__ctype_b_loc@plt>
   1d108:	add	r6, r6, #1
   1d10c:	ldrb	r3, [r5]
   1d110:	ldr	r2, [r0]
   1d114:	lsl	r3, r3, #1
   1d118:	ldrh	r3, [r2, r3]
   1d11c:	tst	r3, #1
   1d120:	beq	1d0f8 <argp_error@@Base+0xfd8>
   1d124:	b	1d294 <argp_error@@Base+0x1174>
   1d128:	cmp	fp, r7
   1d12c:	bls	1d174 <argp_error@@Base+0x1054>
   1d130:	sub	r0, r6, r0
   1d134:	ldr	r3, [sp, #8]
   1d138:	sub	r2, r3, r7
   1d13c:	mov	r1, r7
   1d140:	add	r0, r9, r0
   1d144:	bl	113c4 <memmove@plt>
   1d148:	ldr	r3, [r4, #20]
   1d14c:	sub	r6, r6, r3
   1d150:	add	r6, r9, r6
   1d154:	sub	r5, r6, r7
   1d158:	ldr	r3, [r4, #28]
   1d15c:	sub	r5, r3, r5
   1d160:	str	r5, [r4, #28]
   1d164:	mov	r3, #0
   1d168:	str	r3, [r4, #20]
   1d16c:	add	r9, r9, r8
   1d170:	b	1cfc0 <argp_error@@Base+0xea0>
   1d174:	ldr	r3, [r4, #20]
   1d178:	ldr	r2, [sp]
   1d17c:	add	r3, r2, r3
   1d180:	str	r3, [r4, #20]
   1d184:	sub	r3, r6, r3
   1d188:	add	r3, fp, r3
   1d18c:	str	r3, [r4, #28]
   1d190:	b	1d068 <argp_error@@Base+0xf48>
   1d194:	add	r6, r1, #1
   1d198:	cmp	r6, r9
   1d19c:	bls	1d0e8 <argp_error@@Base+0xfc8>
   1d1a0:	cmp	r1, r9
   1d1a4:	bcc	1d1d0 <argp_error@@Base+0x10b0>
   1d1a8:	sub	ip, r9, #1
   1d1ac:	mov	r1, r3
   1d1b0:	cmp	ip, r3
   1d1b4:	beq	1d1d0 <argp_error@@Base+0x10b0>
   1d1b8:	sub	r3, r3, #1
   1d1bc:	ldrb	r2, [r1]
   1d1c0:	lsl	r2, r2, #1
   1d1c4:	ldrh	r2, [r0, r2]
   1d1c8:	tst	r2, #1
   1d1cc:	bne	1d1ac <argp_error@@Base+0x108c>
   1d1d0:	add	r5, r1, #1
   1d1d4:	ldr	r3, [sp]
   1d1d8:	add	r3, r3, #1
   1d1dc:	add	r3, r9, r3
   1d1e0:	cmp	r6, r3
   1d1e4:	beq	1d2b8 <argp_error@@Base+0x1198>
   1d1e8:	add	r3, r5, #1
   1d1ec:	sub	r3, r6, r3
   1d1f0:	ldr	r2, [sp, #12]
   1d1f4:	cmp	r3, r2
   1d1f8:	bge	1d2d0 <argp_error@@Base+0x11b0>
   1d1fc:	cmp	r6, fp
   1d200:	bcs	1d2d0 <argp_error@@Base+0x11b0>
   1d204:	ldr	r3, [r4, #32]
   1d208:	ldr	r2, [sp, #8]
   1d20c:	sub	r3, r3, r2
   1d210:	ldr	r2, [sp, #12]
   1d214:	add	r2, r2, #1
   1d218:	cmp	r3, r2
   1d21c:	bgt	1d318 <argp_error@@Base+0x11f8>
   1d220:	ldr	r0, [r4, #24]
   1d224:	cmp	r5, r0
   1d228:	bls	1d23c <argp_error@@Base+0x111c>
   1d22c:	ldr	r3, [r4]
   1d230:	sub	r2, r5, r0
   1d234:	mov	r1, #1
   1d238:	bl	11418 <fwrite_unlocked@plt>
   1d23c:	ldr	r0, [r4]
   1d240:	ldr	r3, [r0, #20]
   1d244:	ldr	r2, [r0, #24]
   1d248:	cmp	r3, r2
   1d24c:	addcc	r2, r3, #1
   1d250:	strcc	r2, [r0, #20]
   1d254:	movcc	r2, #10
   1d258:	strbcc	r2, [r3]
   1d25c:	bcs	1d364 <argp_error@@Base+0x1244>
   1d260:	ldr	r7, [r4, #24]
   1d264:	ldr	r3, [sp, #4]
   1d268:	sub	r3, r3, r7
   1d26c:	ldr	r2, [sp]
   1d270:	add	r3, r2, r3
   1d274:	str	r3, [sp]
   1d278:	mov	r9, r7
   1d27c:	b	1d2e0 <argp_error@@Base+0x11c0>
   1d280:	cmp	r5, r7
   1d284:	moveq	r3, #0
   1d288:	streq	r3, [r4, #20]
   1d28c:	addeq	r9, r7, #1
   1d290:	beq	1cfc0 <argp_error@@Base+0xea0>
   1d294:	bl	11520 <__ctype_b_loc@plt>
   1d298:	ldr	r2, [r0]
   1d29c:	mov	r6, r5
   1d2a0:	ldrb	r3, [r6, #1]!
   1d2a4:	lsl	r3, r3, #1
   1d2a8:	ldrh	r3, [r2, r3]
   1d2ac:	tst	r3, #1
   1d2b0:	bne	1d2a0 <argp_error@@Base+0x1180>
   1d2b4:	b	1d1d4 <argp_error@@Base+0x10b4>
   1d2b8:	ldr	r3, [r4, #32]
   1d2bc:	sub	r3, r3, r5
   1d2c0:	ldr	r2, [sp, #12]
   1d2c4:	add	r2, r2, #1
   1d2c8:	cmp	r3, r2
   1d2cc:	blt	1d1fc <argp_error@@Base+0x10dc>
   1d2d0:	mov	r3, #10
   1d2d4:	strb	r3, [r5]
   1d2d8:	mov	r7, r9
   1d2dc:	add	r9, r5, #1
   1d2e0:	mov	r8, r6
   1d2e4:	ldr	r3, [r4, #12]
   1d2e8:	sub	r2, r6, r9
   1d2ec:	cmp	r2, r3
   1d2f0:	bge	1d380 <argp_error@@Base+0x1260>
   1d2f4:	ldr	r2, [sp]
   1d2f8:	add	r2, r2, #1
   1d2fc:	add	r2, r7, r2
   1d300:	cmp	r6, r2
   1d304:	beq	1d370 <argp_error@@Base+0x1250>
   1d308:	cmp	r3, #0
   1d30c:	movgt	r5, #0
   1d310:	bgt	1d3e4 <argp_error@@Base+0x12c4>
   1d314:	b	1d3a4 <argp_error@@Base+0x1284>
   1d318:	ldr	r3, [sp, #8]
   1d31c:	sub	r7, r3, r6
   1d320:	mov	r0, r2
   1d324:	mov	r2, r7
   1d328:	mov	r1, r6
   1d32c:	add	r0, r5, r0
   1d330:	bl	113c4 <memmove@plt>
   1d334:	ldr	r6, [r4, #12]
   1d338:	add	r6, r6, #1
   1d33c:	add	r6, r5, r6
   1d340:	add	r7, r6, r7
   1d344:	ldr	r3, [sp, #4]
   1d348:	sub	r3, r7, r3
   1d34c:	str	r3, [sp]
   1d350:	mov	r3, #10
   1d354:	strb	r3, [r5]
   1d358:	mov	r7, r9
   1d35c:	add	r9, r5, #1
   1d360:	b	1d2e0 <argp_error@@Base+0x11c0>
   1d364:	mov	r1, #10
   1d368:	bl	115e0 <__overflow@plt>
   1d36c:	b	1d260 <argp_error@@Base+0x1140>
   1d370:	ldr	r2, [r4, #32]
   1d374:	sub	r2, r2, r6
   1d378:	cmp	r3, r2
   1d37c:	bgt	1d308 <argp_error@@Base+0x11e8>
   1d380:	cmp	r3, #0
   1d384:	ble	1d3a4 <argp_error@@Base+0x1284>
   1d388:	mov	r3, r9
   1d38c:	strb	sl, [r3], #1
   1d390:	sub	r1, r3, r9
   1d394:	ldr	r2, [r4, #12]
   1d398:	cmp	r1, r2
   1d39c:	blt	1d38c <argp_error@@Base+0x126c>
   1d3a0:	mov	r9, r3
   1d3a4:	cmp	r9, r6
   1d3a8:	bcc	1d410 <argp_error@@Base+0x12f0>
   1d3ac:	sub	r7, r8, r7
   1d3b0:	ldr	r3, [sp]
   1d3b4:	sub	r7, r3, r7
   1d3b8:	add	r7, r9, r7
   1d3bc:	str	r7, [r4, #28]
   1d3c0:	ldr	r3, [r4, #12]
   1d3c4:	cmp	r3, #0
   1d3c8:	mvneq	r3, #0
   1d3cc:	str	r3, [r4, #20]
   1d3d0:	b	1cfc0 <argp_error@@Base+0xea0>
   1d3d4:	add	r5, r5, #1
   1d3d8:	ldr	r3, [r4, #12]
   1d3dc:	cmp	r3, r5
   1d3e0:	ble	1d3a4 <argp_error@@Base+0x1284>
   1d3e4:	ldr	r0, [r4]
   1d3e8:	ldr	r3, [r0, #20]
   1d3ec:	ldr	r2, [r0, #24]
   1d3f0:	cmp	r3, r2
   1d3f4:	addcc	r2, r3, #1
   1d3f8:	strcc	r2, [r0, #20]
   1d3fc:	strbcc	sl, [r3]
   1d400:	bcc	1d3d4 <argp_error@@Base+0x12b4>
   1d404:	mov	r1, sl
   1d408:	bl	115e0 <__overflow@plt>
   1d40c:	b	1d3d4 <argp_error@@Base+0x12b4>
   1d410:	ldr	r3, [sp]
   1d414:	add	r2, r7, r3
   1d418:	sub	r2, r2, r8
   1d41c:	mov	r1, r6
   1d420:	mov	r0, r9
   1d424:	bl	113c4 <memmove@plt>
   1d428:	b	1d3ac <argp_error@@Base+0x128c>
   1d42c:	str	fp, [sp, #8]
   1d430:	str	r9, [sp, #4]
   1d434:	sub	r3, fp, r9
   1d438:	str	r3, [sp]
   1d43c:	mov	r2, r3
   1d440:	mov	r1, #10
   1d444:	mov	r0, r9
   1d448:	bl	115bc <memchr@plt>
   1d44c:	mov	r7, r0
   1d450:	b	1cf8c <argp_error@@Base+0xe6c>
   1d454:	mov	r1, r5
   1d458:	b	1d0dc <argp_error@@Base+0xfbc>
   1d45c:	push	{r4, lr}
   1d460:	mov	r4, r0
   1d464:	bl	1cef8 <argp_error@@Base+0xdd8>
   1d468:	ldr	r2, [r4, #28]
   1d46c:	ldr	r0, [r4, #24]
   1d470:	cmp	r2, r0
   1d474:	bls	1d488 <argp_error@@Base+0x1368>
   1d478:	ldr	r3, [r4]
   1d47c:	sub	r2, r2, r0
   1d480:	mov	r1, #1
   1d484:	bl	11418 <fwrite_unlocked@plt>
   1d488:	ldr	r0, [r4, #24]
   1d48c:	bl	17d44 <argp_parse@@Base+0xbf4>
   1d490:	mov	r0, r4
   1d494:	bl	17d44 <argp_parse@@Base+0xbf4>
   1d498:	pop	{r4, pc}
   1d49c:	ldr	r3, [r0, #32]
   1d4a0:	ldr	r2, [r0, #28]
   1d4a4:	sub	r3, r3, r2
   1d4a8:	cmp	r3, r1
   1d4ac:	bcc	1d4b8 <argp_error@@Base+0x1398>
   1d4b0:	mov	r0, #1
   1d4b4:	bx	lr
   1d4b8:	push	{r4, r5, r6, lr}
   1d4bc:	mov	r5, r1
   1d4c0:	mov	r4, r0
   1d4c4:	bl	1cef8 <argp_error@@Base+0xdd8>
   1d4c8:	ldr	r0, [r4, #24]
   1d4cc:	ldr	r2, [r4, #28]
   1d4d0:	ldr	r3, [r4]
   1d4d4:	sub	r2, r2, r0
   1d4d8:	mov	r1, #1
   1d4dc:	bl	11418 <fwrite_unlocked@plt>
   1d4e0:	ldr	r2, [r4, #28]
   1d4e4:	ldr	r3, [r4, #24]
   1d4e8:	sub	r1, r2, r3
   1d4ec:	cmp	r0, r1
   1d4f0:	bne	1d534 <argp_error@@Base+0x1414>
   1d4f4:	str	r3, [r4, #28]
   1d4f8:	mov	r2, #0
   1d4fc:	str	r2, [r4, #16]
   1d500:	ldr	r1, [r4, #32]
   1d504:	sub	r1, r1, r3
   1d508:	cmp	r5, r1
   1d50c:	bls	1d52c <argp_error@@Base+0x140c>
   1d510:	adds	r5, r5, r1
   1d514:	bcc	1d560 <argp_error@@Base+0x1440>
   1d518:	bl	11568 <__errno_location@plt>
   1d51c:	mov	r3, #12
   1d520:	str	r3, [r0]
   1d524:	mov	r0, #0
   1d528:	pop	{r4, r5, r6, pc}
   1d52c:	mov	r0, #1
   1d530:	pop	{r4, r5, r6, pc}
   1d534:	sub	r2, r2, r0
   1d538:	str	r2, [r4, #28]
   1d53c:	ldr	r1, [r4, #16]
   1d540:	sub	r1, r1, r0
   1d544:	str	r1, [r4, #16]
   1d548:	sub	r2, r2, r3
   1d54c:	add	r1, r3, r0
   1d550:	mov	r0, r3
   1d554:	bl	113c4 <memmove@plt>
   1d558:	mov	r0, #0
   1d55c:	pop	{r4, r5, r6, pc}
   1d560:	mov	r1, r5
   1d564:	mov	r0, r3
   1d568:	bl	19050 <_obstack_memory_used@@Base+0xe8c>
   1d56c:	cmp	r0, #0
   1d570:	beq	1d518 <argp_error@@Base+0x13f8>
   1d574:	str	r0, [r4, #24]
   1d578:	add	r5, r0, r5
   1d57c:	str	r5, [r4, #32]
   1d580:	str	r0, [r4, #28]
   1d584:	mov	r0, #1
   1d588:	pop	{r4, r5, r6, pc}
   1d58c:	push	{r1, r2, r3}
   1d590:	push	{r4, r5, r6, r7, lr}
   1d594:	sub	sp, sp, #8
   1d598:	mov	r5, r0
   1d59c:	ldr	r7, [sp, #28]
   1d5a0:	mov	r1, #150	; 0x96
   1d5a4:	add	r6, sp, #32
   1d5a8:	mov	r0, r5
   1d5ac:	bl	1d49c <argp_error@@Base+0x137c>
   1d5b0:	cmp	r0, #0
   1d5b4:	beq	1d5e8 <argp_error@@Base+0x14c8>
   1d5b8:	str	r6, [sp, #4]
   1d5bc:	ldr	r0, [r5, #28]
   1d5c0:	ldr	r4, [r5, #32]
   1d5c4:	sub	r4, r4, r0
   1d5c8:	mov	r3, r6
   1d5cc:	mov	r2, r7
   1d5d0:	mov	r1, r4
   1d5d4:	bl	11640 <vsnprintf@plt>
   1d5d8:	cmp	r4, r0
   1d5dc:	bhi	1d5f0 <argp_error@@Base+0x14d0>
   1d5e0:	add	r1, r0, #1
   1d5e4:	b	1d5a8 <argp_error@@Base+0x1488>
   1d5e8:	mvn	r0, #0
   1d5ec:	b	1d5fc <argp_error@@Base+0x14dc>
   1d5f0:	ldr	r3, [r5, #28]
   1d5f4:	add	r3, r3, r0
   1d5f8:	str	r3, [r5, #28]
   1d5fc:	add	sp, sp, #8
   1d600:	pop	{r4, r5, r6, r7, lr}
   1d604:	add	sp, sp, #12
   1d608:	bx	lr
   1d60c:	subs	r2, r1, #1
   1d610:	bxeq	lr
   1d614:	bcc	1d7ec <argp_error@@Base+0x16cc>
   1d618:	cmp	r0, r1
   1d61c:	bls	1d7d0 <argp_error@@Base+0x16b0>
   1d620:	tst	r1, r2
   1d624:	beq	1d7dc <argp_error@@Base+0x16bc>
   1d628:	clz	r3, r0
   1d62c:	clz	r2, r1
   1d630:	sub	r3, r2, r3
   1d634:	rsbs	r3, r3, #31
   1d638:	addne	r3, r3, r3, lsl #1
   1d63c:	mov	r2, #0
   1d640:	addne	pc, pc, r3, lsl #2
   1d644:	nop			; (mov r0, r0)
   1d648:	cmp	r0, r1, lsl #31
   1d64c:	adc	r2, r2, r2
   1d650:	subcs	r0, r0, r1, lsl #31
   1d654:	cmp	r0, r1, lsl #30
   1d658:	adc	r2, r2, r2
   1d65c:	subcs	r0, r0, r1, lsl #30
   1d660:	cmp	r0, r1, lsl #29
   1d664:	adc	r2, r2, r2
   1d668:	subcs	r0, r0, r1, lsl #29
   1d66c:	cmp	r0, r1, lsl #28
   1d670:	adc	r2, r2, r2
   1d674:	subcs	r0, r0, r1, lsl #28
   1d678:	cmp	r0, r1, lsl #27
   1d67c:	adc	r2, r2, r2
   1d680:	subcs	r0, r0, r1, lsl #27
   1d684:	cmp	r0, r1, lsl #26
   1d688:	adc	r2, r2, r2
   1d68c:	subcs	r0, r0, r1, lsl #26
   1d690:	cmp	r0, r1, lsl #25
   1d694:	adc	r2, r2, r2
   1d698:	subcs	r0, r0, r1, lsl #25
   1d69c:	cmp	r0, r1, lsl #24
   1d6a0:	adc	r2, r2, r2
   1d6a4:	subcs	r0, r0, r1, lsl #24
   1d6a8:	cmp	r0, r1, lsl #23
   1d6ac:	adc	r2, r2, r2
   1d6b0:	subcs	r0, r0, r1, lsl #23
   1d6b4:	cmp	r0, r1, lsl #22
   1d6b8:	adc	r2, r2, r2
   1d6bc:	subcs	r0, r0, r1, lsl #22
   1d6c0:	cmp	r0, r1, lsl #21
   1d6c4:	adc	r2, r2, r2
   1d6c8:	subcs	r0, r0, r1, lsl #21
   1d6cc:	cmp	r0, r1, lsl #20
   1d6d0:	adc	r2, r2, r2
   1d6d4:	subcs	r0, r0, r1, lsl #20
   1d6d8:	cmp	r0, r1, lsl #19
   1d6dc:	adc	r2, r2, r2
   1d6e0:	subcs	r0, r0, r1, lsl #19
   1d6e4:	cmp	r0, r1, lsl #18
   1d6e8:	adc	r2, r2, r2
   1d6ec:	subcs	r0, r0, r1, lsl #18
   1d6f0:	cmp	r0, r1, lsl #17
   1d6f4:	adc	r2, r2, r2
   1d6f8:	subcs	r0, r0, r1, lsl #17
   1d6fc:	cmp	r0, r1, lsl #16
   1d700:	adc	r2, r2, r2
   1d704:	subcs	r0, r0, r1, lsl #16
   1d708:	cmp	r0, r1, lsl #15
   1d70c:	adc	r2, r2, r2
   1d710:	subcs	r0, r0, r1, lsl #15
   1d714:	cmp	r0, r1, lsl #14
   1d718:	adc	r2, r2, r2
   1d71c:	subcs	r0, r0, r1, lsl #14
   1d720:	cmp	r0, r1, lsl #13
   1d724:	adc	r2, r2, r2
   1d728:	subcs	r0, r0, r1, lsl #13
   1d72c:	cmp	r0, r1, lsl #12
   1d730:	adc	r2, r2, r2
   1d734:	subcs	r0, r0, r1, lsl #12
   1d738:	cmp	r0, r1, lsl #11
   1d73c:	adc	r2, r2, r2
   1d740:	subcs	r0, r0, r1, lsl #11
   1d744:	cmp	r0, r1, lsl #10
   1d748:	adc	r2, r2, r2
   1d74c:	subcs	r0, r0, r1, lsl #10
   1d750:	cmp	r0, r1, lsl #9
   1d754:	adc	r2, r2, r2
   1d758:	subcs	r0, r0, r1, lsl #9
   1d75c:	cmp	r0, r1, lsl #8
   1d760:	adc	r2, r2, r2
   1d764:	subcs	r0, r0, r1, lsl #8
   1d768:	cmp	r0, r1, lsl #7
   1d76c:	adc	r2, r2, r2
   1d770:	subcs	r0, r0, r1, lsl #7
   1d774:	cmp	r0, r1, lsl #6
   1d778:	adc	r2, r2, r2
   1d77c:	subcs	r0, r0, r1, lsl #6
   1d780:	cmp	r0, r1, lsl #5
   1d784:	adc	r2, r2, r2
   1d788:	subcs	r0, r0, r1, lsl #5
   1d78c:	cmp	r0, r1, lsl #4
   1d790:	adc	r2, r2, r2
   1d794:	subcs	r0, r0, r1, lsl #4
   1d798:	cmp	r0, r1, lsl #3
   1d79c:	adc	r2, r2, r2
   1d7a0:	subcs	r0, r0, r1, lsl #3
   1d7a4:	cmp	r0, r1, lsl #2
   1d7a8:	adc	r2, r2, r2
   1d7ac:	subcs	r0, r0, r1, lsl #2
   1d7b0:	cmp	r0, r1, lsl #1
   1d7b4:	adc	r2, r2, r2
   1d7b8:	subcs	r0, r0, r1, lsl #1
   1d7bc:	cmp	r0, r1
   1d7c0:	adc	r2, r2, r2
   1d7c4:	subcs	r0, r0, r1
   1d7c8:	mov	r0, r2
   1d7cc:	bx	lr
   1d7d0:	moveq	r0, #1
   1d7d4:	movne	r0, #0
   1d7d8:	bx	lr
   1d7dc:	clz	r2, r1
   1d7e0:	rsb	r2, r2, #31
   1d7e4:	lsr	r0, r0, r2
   1d7e8:	bx	lr
   1d7ec:	cmp	r0, #0
   1d7f0:	mvnne	r0, #0
   1d7f4:	b	1da58 <argp_error@@Base+0x1938>
   1d7f8:	cmp	r1, #0
   1d7fc:	beq	1d7ec <argp_error@@Base+0x16cc>
   1d800:	push	{r0, r1, lr}
   1d804:	bl	1d60c <argp_error@@Base+0x14ec>
   1d808:	pop	{r1, r2, lr}
   1d80c:	mul	r3, r2, r0
   1d810:	sub	r1, r1, r3
   1d814:	bx	lr
   1d818:	cmp	r1, #0
   1d81c:	beq	1da28 <argp_error@@Base+0x1908>
   1d820:	eor	ip, r0, r1
   1d824:	rsbmi	r1, r1, #0
   1d828:	subs	r2, r1, #1
   1d82c:	beq	1d9f4 <argp_error@@Base+0x18d4>
   1d830:	movs	r3, r0
   1d834:	rsbmi	r3, r0, #0
   1d838:	cmp	r3, r1
   1d83c:	bls	1da00 <argp_error@@Base+0x18e0>
   1d840:	tst	r1, r2
   1d844:	beq	1da10 <argp_error@@Base+0x18f0>
   1d848:	clz	r2, r3
   1d84c:	clz	r0, r1
   1d850:	sub	r2, r0, r2
   1d854:	rsbs	r2, r2, #31
   1d858:	addne	r2, r2, r2, lsl #1
   1d85c:	mov	r0, #0
   1d860:	addne	pc, pc, r2, lsl #2
   1d864:	nop			; (mov r0, r0)
   1d868:	cmp	r3, r1, lsl #31
   1d86c:	adc	r0, r0, r0
   1d870:	subcs	r3, r3, r1, lsl #31
   1d874:	cmp	r3, r1, lsl #30
   1d878:	adc	r0, r0, r0
   1d87c:	subcs	r3, r3, r1, lsl #30
   1d880:	cmp	r3, r1, lsl #29
   1d884:	adc	r0, r0, r0
   1d888:	subcs	r3, r3, r1, lsl #29
   1d88c:	cmp	r3, r1, lsl #28
   1d890:	adc	r0, r0, r0
   1d894:	subcs	r3, r3, r1, lsl #28
   1d898:	cmp	r3, r1, lsl #27
   1d89c:	adc	r0, r0, r0
   1d8a0:	subcs	r3, r3, r1, lsl #27
   1d8a4:	cmp	r3, r1, lsl #26
   1d8a8:	adc	r0, r0, r0
   1d8ac:	subcs	r3, r3, r1, lsl #26
   1d8b0:	cmp	r3, r1, lsl #25
   1d8b4:	adc	r0, r0, r0
   1d8b8:	subcs	r3, r3, r1, lsl #25
   1d8bc:	cmp	r3, r1, lsl #24
   1d8c0:	adc	r0, r0, r0
   1d8c4:	subcs	r3, r3, r1, lsl #24
   1d8c8:	cmp	r3, r1, lsl #23
   1d8cc:	adc	r0, r0, r0
   1d8d0:	subcs	r3, r3, r1, lsl #23
   1d8d4:	cmp	r3, r1, lsl #22
   1d8d8:	adc	r0, r0, r0
   1d8dc:	subcs	r3, r3, r1, lsl #22
   1d8e0:	cmp	r3, r1, lsl #21
   1d8e4:	adc	r0, r0, r0
   1d8e8:	subcs	r3, r3, r1, lsl #21
   1d8ec:	cmp	r3, r1, lsl #20
   1d8f0:	adc	r0, r0, r0
   1d8f4:	subcs	r3, r3, r1, lsl #20
   1d8f8:	cmp	r3, r1, lsl #19
   1d8fc:	adc	r0, r0, r0
   1d900:	subcs	r3, r3, r1, lsl #19
   1d904:	cmp	r3, r1, lsl #18
   1d908:	adc	r0, r0, r0
   1d90c:	subcs	r3, r3, r1, lsl #18
   1d910:	cmp	r3, r1, lsl #17
   1d914:	adc	r0, r0, r0
   1d918:	subcs	r3, r3, r1, lsl #17
   1d91c:	cmp	r3, r1, lsl #16
   1d920:	adc	r0, r0, r0
   1d924:	subcs	r3, r3, r1, lsl #16
   1d928:	cmp	r3, r1, lsl #15
   1d92c:	adc	r0, r0, r0
   1d930:	subcs	r3, r3, r1, lsl #15
   1d934:	cmp	r3, r1, lsl #14
   1d938:	adc	r0, r0, r0
   1d93c:	subcs	r3, r3, r1, lsl #14
   1d940:	cmp	r3, r1, lsl #13
   1d944:	adc	r0, r0, r0
   1d948:	subcs	r3, r3, r1, lsl #13
   1d94c:	cmp	r3, r1, lsl #12
   1d950:	adc	r0, r0, r0
   1d954:	subcs	r3, r3, r1, lsl #12
   1d958:	cmp	r3, r1, lsl #11
   1d95c:	adc	r0, r0, r0
   1d960:	subcs	r3, r3, r1, lsl #11
   1d964:	cmp	r3, r1, lsl #10
   1d968:	adc	r0, r0, r0
   1d96c:	subcs	r3, r3, r1, lsl #10
   1d970:	cmp	r3, r1, lsl #9
   1d974:	adc	r0, r0, r0
   1d978:	subcs	r3, r3, r1, lsl #9
   1d97c:	cmp	r3, r1, lsl #8
   1d980:	adc	r0, r0, r0
   1d984:	subcs	r3, r3, r1, lsl #8
   1d988:	cmp	r3, r1, lsl #7
   1d98c:	adc	r0, r0, r0
   1d990:	subcs	r3, r3, r1, lsl #7
   1d994:	cmp	r3, r1, lsl #6
   1d998:	adc	r0, r0, r0
   1d99c:	subcs	r3, r3, r1, lsl #6
   1d9a0:	cmp	r3, r1, lsl #5
   1d9a4:	adc	r0, r0, r0
   1d9a8:	subcs	r3, r3, r1, lsl #5
   1d9ac:	cmp	r3, r1, lsl #4
   1d9b0:	adc	r0, r0, r0
   1d9b4:	subcs	r3, r3, r1, lsl #4
   1d9b8:	cmp	r3, r1, lsl #3
   1d9bc:	adc	r0, r0, r0
   1d9c0:	subcs	r3, r3, r1, lsl #3
   1d9c4:	cmp	r3, r1, lsl #2
   1d9c8:	adc	r0, r0, r0
   1d9cc:	subcs	r3, r3, r1, lsl #2
   1d9d0:	cmp	r3, r1, lsl #1
   1d9d4:	adc	r0, r0, r0
   1d9d8:	subcs	r3, r3, r1, lsl #1
   1d9dc:	cmp	r3, r1
   1d9e0:	adc	r0, r0, r0
   1d9e4:	subcs	r3, r3, r1
   1d9e8:	cmp	ip, #0
   1d9ec:	rsbmi	r0, r0, #0
   1d9f0:	bx	lr
   1d9f4:	teq	ip, r0
   1d9f8:	rsbmi	r0, r0, #0
   1d9fc:	bx	lr
   1da00:	movcc	r0, #0
   1da04:	asreq	r0, ip, #31
   1da08:	orreq	r0, r0, #1
   1da0c:	bx	lr
   1da10:	clz	r2, r1
   1da14:	rsb	r2, r2, #31
   1da18:	cmp	ip, #0
   1da1c:	lsr	r0, r3, r2
   1da20:	rsbmi	r0, r0, #0
   1da24:	bx	lr
   1da28:	cmp	r0, #0
   1da2c:	mvngt	r0, #-2147483648	; 0x80000000
   1da30:	movlt	r0, #-2147483648	; 0x80000000
   1da34:	b	1da58 <argp_error@@Base+0x1938>
   1da38:	cmp	r1, #0
   1da3c:	beq	1da28 <argp_error@@Base+0x1908>
   1da40:	push	{r0, r1, lr}
   1da44:	bl	1d820 <argp_error@@Base+0x1700>
   1da48:	pop	{r1, r2, lr}
   1da4c:	mul	r3, r2, r0
   1da50:	sub	r1, r1, r3
   1da54:	bx	lr
   1da58:	push	{r1, lr}
   1da5c:	mov	r0, #8
   1da60:	bl	1137c <raise@plt>
   1da64:	pop	{r1, pc}
   1da68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1da6c:	mov	r7, r0
   1da70:	ldr	r6, [pc, #72]	; 1dac0 <argp_error@@Base+0x19a0>
   1da74:	ldr	r5, [pc, #72]	; 1dac4 <argp_error@@Base+0x19a4>
   1da78:	add	r6, pc, r6
   1da7c:	add	r5, pc, r5
   1da80:	sub	r6, r6, r5
   1da84:	mov	r8, r1
   1da88:	mov	r9, r2
   1da8c:	bl	1132c <calloc@plt-0x20>
   1da90:	asrs	r6, r6, #2
   1da94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1da98:	mov	r4, #0
   1da9c:	add	r4, r4, #1
   1daa0:	ldr	r3, [r5], #4
   1daa4:	mov	r2, r9
   1daa8:	mov	r1, r8
   1daac:	mov	r0, r7
   1dab0:	blx	r3
   1dab4:	cmp	r6, r4
   1dab8:	bne	1da9c <argp_error@@Base+0x197c>
   1dabc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dac0:	muleq	r1, r0, r4
   1dac4:	andeq	r4, r1, r8, lsl #9
   1dac8:	bx	lr

Disassembly of section .fini:

0001dacc <.fini>:
   1dacc:	push	{r3, lr}
   1dad0:	pop	{r3, pc}
