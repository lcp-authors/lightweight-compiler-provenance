
../repos/coreutils/src/tsort:     file format elf32-littlearm


Disassembly of section .init:

00010da0 <.init>:
   10da0:	push	{r3, lr}
   10da4:	bl	11060 <__assert_fail@plt+0x48>
   10da8:	pop	{r3, pc}

Disassembly of section .plt:

00010dac <calloc@plt-0x14>:
   10dac:	push	{lr}		; (str lr, [sp, #-4]!)
   10db0:	ldr	lr, [pc, #4]	; 10dbc <calloc@plt-0x4>
   10db4:	add	lr, pc, lr
   10db8:	ldr	pc, [lr, #8]!
   10dbc:	andeq	fp, r1, r4, asr #4

00010dc0 <calloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #110592	; 0x1b000
   10dc8:	ldr	pc, [ip, #580]!	; 0x244

00010dcc <fputs_unlocked@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #110592	; 0x1b000
   10dd4:	ldr	pc, [ip, #572]!	; 0x23c

00010dd8 <raise@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #110592	; 0x1b000
   10de0:	ldr	pc, [ip, #564]!	; 0x234

00010de4 <strcmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #110592	; 0x1b000
   10dec:	ldr	pc, [ip, #556]!	; 0x22c

00010df0 <posix_fadvise64@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #110592	; 0x1b000
   10df8:	ldr	pc, [ip, #548]!	; 0x224

00010dfc <printf@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #110592	; 0x1b000
   10e04:	ldr	pc, [ip, #540]!	; 0x21c

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #110592	; 0x1b000
   10e10:	ldr	pc, [ip, #532]!	; 0x214

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #110592	; 0x1b000
   10e1c:	ldr	pc, [ip, #524]!	; 0x20c

00010e20 <_exit@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #110592	; 0x1b000
   10e28:	ldr	pc, [ip, #516]!	; 0x204

00010e2c <memcpy@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #110592	; 0x1b000
   10e34:	ldr	pc, [ip, #508]!	; 0x1fc

00010e38 <mbsinit@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #110592	; 0x1b000
   10e40:	ldr	pc, [ip, #500]!	; 0x1f4

00010e44 <memcmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #110592	; 0x1b000
   10e4c:	ldr	pc, [ip, #492]!	; 0x1ec

00010e50 <getc_unlocked@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #110592	; 0x1b000
   10e58:	ldr	pc, [ip, #484]!	; 0x1e4

00010e5c <dup2@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #110592	; 0x1b000
   10e64:	ldr	pc, [ip, #476]!	; 0x1dc

00010e68 <realloc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #110592	; 0x1b000
   10e70:	ldr	pc, [ip, #468]!	; 0x1d4

00010e74 <textdomain@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #110592	; 0x1b000
   10e7c:	ldr	pc, [ip, #460]!	; 0x1cc

00010e80 <iswprint@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #110592	; 0x1b000
   10e88:	ldr	pc, [ip, #452]!	; 0x1c4

00010e8c <lseek64@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #110592	; 0x1b000
   10e94:	ldr	pc, [ip, #444]!	; 0x1bc

00010e98 <__ctype_get_mb_cur_max@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #110592	; 0x1b000
   10ea0:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea4 <__fpending@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #110592	; 0x1b000
   10eac:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb0 <ferror_unlocked@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #110592	; 0x1b000
   10eb8:	ldr	pc, [ip, #420]!	; 0x1a4

00010ebc <mbrtowc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #110592	; 0x1b000
   10ec4:	ldr	pc, [ip, #412]!	; 0x19c

00010ec8 <error@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #110592	; 0x1b000
   10ed0:	ldr	pc, [ip, #404]!	; 0x194

00010ed4 <open64@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #110592	; 0x1b000
   10edc:	ldr	pc, [ip, #396]!	; 0x18c

00010ee0 <puts@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #110592	; 0x1b000
   10ee8:	ldr	pc, [ip, #388]!	; 0x184

00010eec <malloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #110592	; 0x1b000
   10ef4:	ldr	pc, [ip, #380]!	; 0x17c

00010ef8 <__libc_start_main@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #110592	; 0x1b000
   10f00:	ldr	pc, [ip, #372]!	; 0x174

00010f04 <__freading@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #110592	; 0x1b000
   10f0c:	ldr	pc, [ip, #364]!	; 0x16c

00010f10 <__gmon_start__@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #110592	; 0x1b000
   10f18:	ldr	pc, [ip, #356]!	; 0x164

00010f1c <freopen64@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #110592	; 0x1b000
   10f24:	ldr	pc, [ip, #348]!	; 0x15c

00010f28 <getopt_long@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #110592	; 0x1b000
   10f30:	ldr	pc, [ip, #340]!	; 0x154

00010f34 <__ctype_b_loc@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #110592	; 0x1b000
   10f3c:	ldr	pc, [ip, #332]!	; 0x14c

00010f40 <exit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #110592	; 0x1b000
   10f48:	ldr	pc, [ip, #324]!	; 0x144

00010f4c <gettext@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #110592	; 0x1b000
   10f54:	ldr	pc, [ip, #316]!	; 0x13c

00010f58 <strlen@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #110592	; 0x1b000
   10f60:	ldr	pc, [ip, #308]!	; 0x134

00010f64 <fprintf@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #110592	; 0x1b000
   10f6c:	ldr	pc, [ip, #300]!	; 0x12c

00010f70 <__errno_location@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #110592	; 0x1b000
   10f78:	ldr	pc, [ip, #292]!	; 0x124

00010f7c <__cxa_atexit@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #110592	; 0x1b000
   10f84:	ldr	pc, [ip, #284]!	; 0x11c

00010f88 <memset@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #110592	; 0x1b000
   10f90:	ldr	pc, [ip, #276]!	; 0x114

00010f94 <fileno@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #110592	; 0x1b000
   10f9c:	ldr	pc, [ip, #268]!	; 0x10c

00010fa0 <fclose@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #110592	; 0x1b000
   10fa8:	ldr	pc, [ip, #260]!	; 0x104

00010fac <fseeko64@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #110592	; 0x1b000
   10fb4:	ldr	pc, [ip, #252]!	; 0xfc

00010fb8 <setlocale@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #110592	; 0x1b000
   10fc0:	ldr	pc, [ip, #244]!	; 0xf4

00010fc4 <strrchr@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #110592	; 0x1b000
   10fcc:	ldr	pc, [ip, #236]!	; 0xec

00010fd0 <nl_langinfo@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #110592	; 0x1b000
   10fd8:	ldr	pc, [ip, #228]!	; 0xe4

00010fdc <bindtextdomain@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #110592	; 0x1b000
   10fe4:	ldr	pc, [ip, #220]!	; 0xdc

00010fe8 <fputs@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #110592	; 0x1b000
   10ff0:	ldr	pc, [ip, #212]!	; 0xd4

00010ff4 <strncmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #110592	; 0x1b000
   10ffc:	ldr	pc, [ip, #204]!	; 0xcc

00011000 <abort@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #110592	; 0x1b000
   11008:	ldr	pc, [ip, #196]!	; 0xc4

0001100c <close@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #110592	; 0x1b000
   11014:	ldr	pc, [ip, #188]!	; 0xbc

00011018 <__assert_fail@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #110592	; 0x1b000
   11020:	ldr	pc, [ip, #180]!	; 0xb4

Disassembly of section .text:

00011024 <.text>:
   11024:	mov	fp, #0
   11028:	mov	lr, #0
   1102c:	pop	{r1}		; (ldr r1, [sp], #4)
   11030:	mov	r2, sp
   11034:	push	{r2}		; (str r2, [sp, #-4]!)
   11038:	push	{r0}		; (str r0, [sp, #-4]!)
   1103c:	ldr	ip, [pc, #16]	; 11054 <__assert_fail@plt+0x3c>
   11040:	push	{ip}		; (str ip, [sp, #-4]!)
   11044:	ldr	r0, [pc, #12]	; 11058 <__assert_fail@plt+0x40>
   11048:	ldr	r3, [pc, #12]	; 1105c <__assert_fail@plt+0x44>
   1104c:	bl	10ef8 <__libc_start_main@plt>
   11050:	bl	11000 <abort@plt>
   11054:	andeq	fp, r1, r4, ror r4
   11058:	strdeq	r1, [r1], -r0
   1105c:	andeq	fp, r1, r4, lsl r4
   11060:	ldr	r3, [pc, #20]	; 1107c <__assert_fail@plt+0x64>
   11064:	ldr	r2, [pc, #20]	; 11080 <__assert_fail@plt+0x68>
   11068:	add	r3, pc, r3
   1106c:	ldr	r2, [r3, r2]
   11070:	cmp	r2, #0
   11074:	bxeq	lr
   11078:	b	10f10 <__gmon_start__@plt>
   1107c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11080:	ldrdeq	r0, [r0], -r8
   11084:	ldr	r0, [pc, #24]	; 110a4 <__assert_fail@plt+0x8c>
   11088:	ldr	r3, [pc, #24]	; 110a8 <__assert_fail@plt+0x90>
   1108c:	cmp	r3, r0
   11090:	bxeq	lr
   11094:	ldr	r3, [pc, #16]	; 110ac <__assert_fail@plt+0x94>
   11098:	cmp	r3, #0
   1109c:	bxeq	lr
   110a0:	bx	r3
   110a4:	andeq	ip, r2, ip, lsr #2
   110a8:	andeq	ip, r2, ip, lsr #2
   110ac:	andeq	r0, r0, r0
   110b0:	ldr	r0, [pc, #36]	; 110dc <__assert_fail@plt+0xc4>
   110b4:	ldr	r1, [pc, #36]	; 110e0 <__assert_fail@plt+0xc8>
   110b8:	sub	r1, r1, r0
   110bc:	asr	r1, r1, #2
   110c0:	add	r1, r1, r1, lsr #31
   110c4:	asrs	r1, r1, #1
   110c8:	bxeq	lr
   110cc:	ldr	r3, [pc, #16]	; 110e4 <__assert_fail@plt+0xcc>
   110d0:	cmp	r3, #0
   110d4:	bxeq	lr
   110d8:	bx	r3
   110dc:	andeq	ip, r2, ip, lsr #2
   110e0:	andeq	ip, r2, ip, lsr #2
   110e4:	andeq	r0, r0, r0
   110e8:	push	{r4, lr}
   110ec:	ldr	r4, [pc, #24]	; 1110c <__assert_fail@plt+0xf4>
   110f0:	ldrb	r3, [r4]
   110f4:	cmp	r3, #0
   110f8:	popne	{r4, pc}
   110fc:	bl	11084 <__assert_fail@plt+0x6c>
   11100:	mov	r3, #1
   11104:	strb	r3, [r4]
   11108:	pop	{r4, pc}
   1110c:	andeq	ip, r2, r4, asr r1
   11110:	b	110b0 <__assert_fail@plt+0x98>
   11114:	push	{fp, lr}
   11118:	mov	fp, sp
   1111c:	sub	sp, sp, #32
   11120:	str	r0, [fp, #-4]
   11124:	ldr	r0, [fp, #-4]
   11128:	cmp	r0, #0
   1112c:	beq	11178 <__assert_fail@plt+0x160>
   11130:	b	11134 <__assert_fail@plt+0x11c>
   11134:	movw	r0, #49472	; 0xc140
   11138:	movt	r0, #2
   1113c:	ldr	r0, [r0]
   11140:	movw	r1, #46236	; 0xb49c
   11144:	movt	r1, #1
   11148:	str	r0, [fp, #-8]
   1114c:	mov	r0, r1
   11150:	bl	10f4c <gettext@plt>
   11154:	movw	r1, #49520	; 0xc170
   11158:	movt	r1, #2
   1115c:	ldr	r2, [r1]
   11160:	ldr	r1, [fp, #-8]
   11164:	str	r0, [fp, #-12]
   11168:	mov	r0, r1
   1116c:	ldr	r1, [fp, #-12]
   11170:	bl	10f64 <fprintf@plt>
   11174:	b	11214 <__assert_fail@plt+0x1fc>
   11178:	movw	r0, #46275	; 0xb4c3
   1117c:	movt	r0, #1
   11180:	bl	10f4c <gettext@plt>
   11184:	movw	r1, #49520	; 0xc170
   11188:	movt	r1, #2
   1118c:	ldr	r1, [r1]
   11190:	bl	10dfc <printf@plt>
   11194:	str	r0, [sp, #16]
   11198:	bl	1121c <__assert_fail@plt+0x204>
   1119c:	movw	r0, #46918	; 0xb746
   111a0:	movt	r0, #1
   111a4:	bl	10f4c <gettext@plt>
   111a8:	movw	r1, #49484	; 0xc14c
   111ac:	movt	r1, #2
   111b0:	ldr	r1, [r1]
   111b4:	bl	10dcc <fputs_unlocked@plt>
   111b8:	movw	r1, #46375	; 0xb527
   111bc:	movt	r1, #1
   111c0:	str	r0, [sp, #12]
   111c4:	mov	r0, r1
   111c8:	bl	10f4c <gettext@plt>
   111cc:	movw	r1, #49484	; 0xc14c
   111d0:	movt	r1, #2
   111d4:	ldr	r1, [r1]
   111d8:	bl	10dcc <fputs_unlocked@plt>
   111dc:	movw	r1, #46420	; 0xb554
   111e0:	movt	r1, #1
   111e4:	str	r0, [sp, #8]
   111e8:	mov	r0, r1
   111ec:	bl	10f4c <gettext@plt>
   111f0:	movw	r1, #49484	; 0xc14c
   111f4:	movt	r1, #2
   111f8:	ldr	r1, [r1]
   111fc:	bl	10dcc <fputs_unlocked@plt>
   11200:	movw	r1, #46474	; 0xb58a
   11204:	movt	r1, #1
   11208:	str	r0, [sp, #4]
   1120c:	mov	r0, r1
   11210:	bl	11244 <__assert_fail@plt+0x22c>
   11214:	ldr	r0, [fp, #-4]
   11218:	bl	10f40 <exit@plt>
   1121c:	push	{fp, lr}
   11220:	mov	fp, sp
   11224:	movw	r0, #46549	; 0xb5d5
   11228:	movt	r0, #1
   1122c:	bl	10f4c <gettext@plt>
   11230:	movw	r1, #49484	; 0xc14c
   11234:	movt	r1, #2
   11238:	ldr	r1, [r1]
   1123c:	bl	10dcc <fputs_unlocked@plt>
   11240:	pop	{fp, pc}
   11244:	push	{fp, lr}
   11248:	mov	fp, sp
   1124c:	sub	sp, sp, #88	; 0x58
   11250:	add	r1, sp, #28
   11254:	movw	r2, #47216	; 0xb870
   11258:	movt	r2, #1
   1125c:	str	r0, [fp, #-4]
   11260:	mov	r0, r1
   11264:	str	r1, [sp, #12]
   11268:	mov	r1, r2
   1126c:	movw	r2, #56	; 0x38
   11270:	bl	10e2c <memcpy@plt>
   11274:	ldr	r0, [fp, #-4]
   11278:	str	r0, [sp, #24]
   1127c:	ldr	r0, [sp, #12]
   11280:	str	r0, [sp, #20]
   11284:	ldr	r0, [sp, #20]
   11288:	ldr	r0, [r0]
   1128c:	movw	r1, #0
   11290:	cmp	r0, r1
   11294:	movw	r0, #0
   11298:	str	r0, [sp, #8]
   1129c:	beq	112c8 <__assert_fail@plt+0x2b0>
   112a0:	ldr	r0, [fp, #-4]
   112a4:	ldr	r1, [sp, #20]
   112a8:	ldr	r1, [r1]
   112ac:	bl	10de4 <strcmp@plt>
   112b0:	cmp	r0, #0
   112b4:	movw	r0, #0
   112b8:	moveq	r0, #1
   112bc:	mvn	r1, #0
   112c0:	eor	r0, r0, r1
   112c4:	str	r0, [sp, #8]
   112c8:	ldr	r0, [sp, #8]
   112cc:	tst	r0, #1
   112d0:	beq	112e4 <__assert_fail@plt+0x2cc>
   112d4:	ldr	r0, [sp, #20]
   112d8:	add	r0, r0, #8
   112dc:	str	r0, [sp, #20]
   112e0:	b	11284 <__assert_fail@plt+0x26c>
   112e4:	ldr	r0, [sp, #20]
   112e8:	ldr	r0, [r0, #4]
   112ec:	movw	r1, #0
   112f0:	cmp	r0, r1
   112f4:	beq	11304 <__assert_fail@plt+0x2ec>
   112f8:	ldr	r0, [sp, #20]
   112fc:	ldr	r0, [r0, #4]
   11300:	str	r0, [sp, #24]
   11304:	movw	r0, #46700	; 0xb66c
   11308:	movt	r0, #1
   1130c:	bl	10f4c <gettext@plt>
   11310:	movw	r1, #46504	; 0xb5a8
   11314:	movt	r1, #1
   11318:	movw	r2, #46723	; 0xb683
   1131c:	movt	r2, #1
   11320:	bl	10dfc <printf@plt>
   11324:	movw	r1, #5
   11328:	str	r0, [sp, #4]
   1132c:	mov	r0, r1
   11330:	movw	r1, #0
   11334:	bl	10fb8 <setlocale@plt>
   11338:	str	r0, [sp, #16]
   1133c:	ldr	r0, [sp, #16]
   11340:	movw	r1, #0
   11344:	cmp	r0, r1
   11348:	beq	11384 <__assert_fail@plt+0x36c>
   1134c:	ldr	r0, [sp, #16]
   11350:	movw	r1, #46763	; 0xb6ab
   11354:	movt	r1, #1
   11358:	movw	r2, #3
   1135c:	bl	10ff4 <strncmp@plt>
   11360:	cmp	r0, #0
   11364:	beq	11384 <__assert_fail@plt+0x36c>
   11368:	movw	r0, #46767	; 0xb6af
   1136c:	movt	r0, #1
   11370:	bl	10f4c <gettext@plt>
   11374:	movw	r1, #49484	; 0xc14c
   11378:	movt	r1, #2
   1137c:	ldr	r1, [r1]
   11380:	bl	10dcc <fputs_unlocked@plt>
   11384:	movw	r0, #46838	; 0xb6f6
   11388:	movt	r0, #1
   1138c:	bl	10f4c <gettext@plt>
   11390:	ldr	r2, [fp, #-4]
   11394:	movw	r1, #46723	; 0xb683
   11398:	movt	r1, #1
   1139c:	bl	10dfc <printf@plt>
   113a0:	movw	r1, #46865	; 0xb711
   113a4:	movt	r1, #1
   113a8:	str	r0, [sp]
   113ac:	mov	r0, r1
   113b0:	bl	10f4c <gettext@plt>
   113b4:	ldr	r1, [sp, #24]
   113b8:	ldr	r2, [sp, #24]
   113bc:	ldr	r3, [fp, #-4]
   113c0:	cmp	r2, r3
   113c4:	movw	r2, #0
   113c8:	moveq	r2, #1
   113cc:	tst	r2, #1
   113d0:	movw	r2, #46919	; 0xb747
   113d4:	movt	r2, #1
   113d8:	movw	r3, #46633	; 0xb629
   113dc:	movt	r3, #1
   113e0:	movne	r2, r3
   113e4:	bl	10dfc <printf@plt>
   113e8:	mov	sp, fp
   113ec:	pop	{fp, pc}
   113f0:	push	{fp, lr}
   113f4:	mov	fp, sp
   113f8:	sub	sp, sp, #64	; 0x40
   113fc:	movw	r2, #0
   11400:	str	r2, [fp, #-4]
   11404:	str	r0, [fp, #-8]
   11408:	str	r1, [fp, #-12]
   1140c:	ldr	r0, [fp, #-12]
   11410:	ldr	r0, [r0]
   11414:	bl	12db0 <__assert_fail@plt+0x1d98>
   11418:	movw	r0, #6
   1141c:	movw	r1, #46919	; 0xb747
   11420:	movt	r1, #1
   11424:	bl	10fb8 <setlocale@plt>
   11428:	movw	r1, #46508	; 0xb5ac
   1142c:	movt	r1, #1
   11430:	str	r0, [fp, #-16]
   11434:	mov	r0, r1
   11438:	movw	r1, #46480	; 0xb590
   1143c:	movt	r1, #1
   11440:	bl	10fdc <bindtextdomain@plt>
   11444:	movw	r1, #46508	; 0xb5ac
   11448:	movt	r1, #1
   1144c:	str	r0, [fp, #-20]	; 0xffffffec
   11450:	mov	r0, r1
   11454:	bl	10e74 <textdomain@plt>
   11458:	movw	r1, #9308	; 0x245c
   1145c:	movt	r1, #1
   11460:	str	r0, [fp, #-24]	; 0xffffffe8
   11464:	mov	r0, r1
   11468:	bl	1b478 <__assert_fail@plt+0xa460>
   1146c:	ldr	r1, [fp, #-8]
   11470:	ldr	r2, [fp, #-12]
   11474:	movw	r3, #49380	; 0xc0e4
   11478:	movt	r3, #2
   1147c:	ldr	r3, [r3]
   11480:	str	r0, [fp, #-28]	; 0xffffffe4
   11484:	mov	r0, r1
   11488:	mov	r1, r2
   1148c:	movw	r2, #46474	; 0xb58a
   11490:	movt	r2, #1
   11494:	movw	ip, #46504	; 0xb5a8
   11498:	movt	ip, #1
   1149c:	str	r3, [sp, #32]
   114a0:	mov	r3, ip
   114a4:	ldr	ip, [sp, #32]
   114a8:	str	ip, [sp]
   114ac:	movw	lr, #1
   114b0:	and	lr, lr, #1
   114b4:	str	lr, [sp, #4]
   114b8:	movw	lr, #4372	; 0x1114
   114bc:	movt	lr, #1
   114c0:	str	lr, [sp, #8]
   114c4:	movw	lr, #46518	; 0xb5b6
   114c8:	movt	lr, #1
   114cc:	str	lr, [sp, #12]
   114d0:	movw	lr, #0
   114d4:	str	lr, [sp, #16]
   114d8:	bl	12c60 <__assert_fail@plt+0x1c48>
   114dc:	ldr	r0, [fp, #-8]
   114e0:	movw	r1, #49464	; 0xc138
   114e4:	movt	r1, #2
   114e8:	ldr	r1, [r1]
   114ec:	sub	r0, r0, r1
   114f0:	movw	r1, #1
   114f4:	cmp	r1, r0
   114f8:	bge	11550 <__assert_fail@plt+0x538>
   114fc:	movw	r0, #46532	; 0xb5c4
   11500:	movt	r0, #1
   11504:	bl	10f4c <gettext@plt>
   11508:	ldr	r1, [fp, #-12]
   1150c:	movw	r2, #49464	; 0xc138
   11510:	movt	r2, #2
   11514:	ldr	r2, [r2]
   11518:	add	r2, r2, #1
   1151c:	add	r1, r1, r2, lsl #2
   11520:	ldr	r1, [r1]
   11524:	str	r0, [sp, #28]
   11528:	mov	r0, r1
   1152c:	bl	1540c <__assert_fail@plt+0x43f4>
   11530:	movw	r1, #0
   11534:	str	r0, [sp, #24]
   11538:	mov	r0, r1
   1153c:	ldr	r2, [sp, #28]
   11540:	ldr	r3, [sp, #24]
   11544:	bl	10ec8 <error@plt>
   11548:	movw	r0, #1
   1154c:	bl	11114 <__assert_fail@plt+0xfc>
   11550:	movw	r0, #49464	; 0xc138
   11554:	movt	r0, #2
   11558:	ldr	r0, [r0]
   1155c:	ldr	r1, [fp, #-8]
   11560:	cmp	r0, r1
   11564:	bne	11578 <__assert_fail@plt+0x560>
   11568:	movw	r0, #47446	; 0xb956
   1156c:	movt	r0, #1
   11570:	str	r0, [sp, #20]
   11574:	b	11594 <__assert_fail@plt+0x57c>
   11578:	ldr	r0, [fp, #-12]
   1157c:	movw	r1, #49464	; 0xc138
   11580:	movt	r1, #2
   11584:	ldr	r1, [r1]
   11588:	add	r0, r0, r1, lsl #2
   1158c:	ldr	r0, [r0]
   11590:	str	r0, [sp, #20]
   11594:	ldr	r0, [sp, #20]
   11598:	bl	115a8 <__assert_fail@plt+0x590>
   1159c:	ldr	r0, [fp, #-4]
   115a0:	mov	sp, fp
   115a4:	pop	{fp, pc}
   115a8:	push	{fp, lr}
   115ac:	mov	fp, sp
   115b0:	sub	sp, sp, #80	; 0x50
   115b4:	str	r0, [fp, #-4]
   115b8:	movw	r0, #1
   115bc:	strb	r0, [fp, #-5]
   115c0:	movw	r0, #0
   115c4:	str	r0, [fp, #-16]
   115c8:	str	r0, [fp, #-20]	; 0xffffffec
   115cc:	ldr	r1, [fp, #-4]
   115d0:	movw	r2, #47446	; 0xb956
   115d4:	movt	r2, #1
   115d8:	str	r0, [sp, #36]	; 0x24
   115dc:	mov	r0, r1
   115e0:	mov	r1, r2
   115e4:	bl	10de4 <strcmp@plt>
   115e8:	cmp	r0, #0
   115ec:	movw	r0, #0
   115f0:	moveq	r0, #1
   115f4:	and	r0, r0, #1
   115f8:	strb	r0, [fp, #-29]	; 0xffffffe3
   115fc:	ldr	r0, [sp, #36]	; 0x24
   11600:	bl	119c4 <__assert_fail@plt+0x9ac>
   11604:	str	r0, [fp, #-12]
   11608:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1160c:	tst	r0, #1
   11610:	bne	1167c <__assert_fail@plt+0x664>
   11614:	ldr	r0, [fp, #-4]
   11618:	movw	r1, #49480	; 0xc148
   1161c:	movt	r1, #2
   11620:	ldr	r2, [r1]
   11624:	movw	r1, #47297	; 0xb8c1
   11628:	movt	r1, #1
   1162c:	bl	127d0 <__assert_fail@plt+0x17b8>
   11630:	movw	r1, #0
   11634:	cmp	r0, r1
   11638:	bne	1167c <__assert_fail@plt+0x664>
   1163c:	bl	10f70 <__errno_location@plt>
   11640:	ldr	r1, [r0]
   11644:	ldr	r2, [fp, #-4]
   11648:	movw	r0, #0
   1164c:	movw	r3, #3
   11650:	str	r1, [sp, #32]
   11654:	mov	r1, r3
   11658:	bl	151c8 <__assert_fail@plt+0x41b0>
   1165c:	movw	r1, #1
   11660:	str	r0, [sp, #28]
   11664:	mov	r0, r1
   11668:	ldr	r1, [sp, #32]
   1166c:	movw	r2, #47303	; 0xb8c7
   11670:	movt	r2, #1
   11674:	ldr	r3, [sp, #28]
   11678:	bl	10ec8 <error@plt>
   1167c:	movw	r0, #49480	; 0xc148
   11680:	movt	r0, #2
   11684:	ldr	r0, [r0]
   11688:	movw	r1, #2
   1168c:	bl	125e0 <__assert_fail@plt+0x15c8>
   11690:	sub	r0, fp, #28
   11694:	bl	15544 <__assert_fail@plt+0x452c>
   11698:	movw	r0, #49480	; 0xc148
   1169c:	movt	r0, #2
   116a0:	ldr	r0, [r0]
   116a4:	movw	r1, #46916	; 0xb744
   116a8:	movt	r1, #1
   116ac:	movw	r2, #3
   116b0:	sub	r3, fp, #28
   116b4:	bl	15568 <__assert_fail@plt+0x4550>
   116b8:	str	r0, [fp, #-36]	; 0xffffffdc
   116bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   116c0:	cmn	r0, #1
   116c4:	bne	116cc <__assert_fail@plt+0x6b4>
   116c8:	b	1173c <__assert_fail@plt+0x724>
   116cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   116d0:	cmp	r0, #0
   116d4:	beq	116dc <__assert_fail@plt+0x6c4>
   116d8:	b	116fc <__assert_fail@plt+0x6e4>
   116dc:	movw	r0, #46920	; 0xb748
   116e0:	movt	r0, #1
   116e4:	movw	r1, #46929	; 0xb751
   116e8:	movt	r1, #1
   116ec:	movw	r2, #458	; 0x1ca
   116f0:	movw	r3, #46941	; 0xb75d
   116f4:	movt	r3, #1
   116f8:	bl	11018 <__assert_fail@plt>
   116fc:	ldr	r0, [fp, #-12]
   11700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11704:	bl	11a0c <__assert_fail@plt+0x9f4>
   11708:	str	r0, [fp, #-20]	; 0xffffffec
   1170c:	ldr	r0, [fp, #-16]
   11710:	movw	r1, #0
   11714:	cmp	r0, r1
   11718:	beq	11730 <__assert_fail@plt+0x718>
   1171c:	ldr	r0, [fp, #-16]
   11720:	ldr	r1, [fp, #-20]	; 0xffffffec
   11724:	bl	11f64 <__assert_fail@plt+0xf4c>
   11728:	movw	r0, #0
   1172c:	str	r0, [fp, #-20]	; 0xffffffec
   11730:	ldr	r0, [fp, #-20]	; 0xffffffec
   11734:	str	r0, [fp, #-16]
   11738:	b	11698 <__assert_fail@plt+0x680>
   1173c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11740:	movw	r1, #0
   11744:	cmp	r0, r1
   11748:	beq	1178c <__assert_fail@plt+0x774>
   1174c:	movw	r0, #46966	; 0xb776
   11750:	movt	r0, #1
   11754:	bl	10f4c <gettext@plt>
   11758:	ldr	r2, [fp, #-4]
   1175c:	movw	r1, #0
   11760:	str	r0, [sp, #24]
   11764:	mov	r0, r1
   11768:	movw	r1, #3
   1176c:	bl	151c8 <__assert_fail@plt+0x41b0>
   11770:	movw	r1, #1
   11774:	str	r0, [sp, #20]
   11778:	mov	r0, r1
   1177c:	movw	r1, #0
   11780:	ldr	r2, [sp, #24]
   11784:	ldr	r3, [sp, #20]
   11788:	bl	10ec8 <error@plt>
   1178c:	ldr	r0, [fp, #-12]
   11790:	movw	r1, #8224	; 0x2020
   11794:	movt	r1, #1
   11798:	bl	11fe0 <__assert_fail@plt+0xfc8>
   1179c:	movw	r0, #49496	; 0xc158
   117a0:	movt	r0, #2
   117a4:	ldr	r0, [r0]
   117a8:	cmp	r0, #0
   117ac:	bls	11934 <__assert_fail@plt+0x91c>
   117b0:	ldr	r0, [fp, #-12]
   117b4:	movw	r1, #8268	; 0x204c
   117b8:	movt	r1, #1
   117bc:	bl	11fe0 <__assert_fail@plt+0xfc8>
   117c0:	movw	r0, #49500	; 0xc15c
   117c4:	movt	r0, #2
   117c8:	ldr	r0, [r0]
   117cc:	movw	r1, #0
   117d0:	cmp	r0, r1
   117d4:	beq	118ac <__assert_fail@plt+0x894>
   117d8:	movw	r0, #49500	; 0xc15c
   117dc:	movt	r0, #2
   117e0:	ldr	r1, [r0]
   117e4:	ldr	r1, [r1, #24]
   117e8:	str	r1, [sp, #40]	; 0x28
   117ec:	ldr	r0, [r0]
   117f0:	ldr	r0, [r0]
   117f4:	bl	10ee0 <puts@plt>
   117f8:	movw	r1, #49500	; 0xc15c
   117fc:	movt	r1, #2
   11800:	ldr	r1, [r1]
   11804:	movw	r2, #1
   11808:	strb	r2, [r1, #13]
   1180c:	movw	r1, #49496	; 0xc158
   11810:	movt	r1, #2
   11814:	ldr	r2, [r1]
   11818:	mvn	r3, #0
   1181c:	add	r2, r2, r3
   11820:	str	r2, [r1]
   11824:	ldr	r0, [sp, #40]	; 0x28
   11828:	movw	r1, #0
   1182c:	cmp	r0, r1
   11830:	beq	11894 <__assert_fail@plt+0x87c>
   11834:	ldr	r0, [sp, #40]	; 0x28
   11838:	ldr	r0, [r0]
   1183c:	ldr	r1, [r0, #16]
   11840:	mvn	r2, #0
   11844:	add	r1, r1, r2
   11848:	str	r1, [r0, #16]
   1184c:	ldr	r0, [sp, #40]	; 0x28
   11850:	ldr	r0, [r0]
   11854:	ldr	r0, [r0, #16]
   11858:	cmp	r0, #0
   1185c:	bne	11884 <__assert_fail@plt+0x86c>
   11860:	ldr	r0, [sp, #40]	; 0x28
   11864:	ldr	r0, [r0]
   11868:	movw	r1, #49504	; 0xc160
   1186c:	movt	r1, #2
   11870:	ldr	r2, [r1]
   11874:	str	r0, [r2, #20]
   11878:	ldr	r0, [sp, #40]	; 0x28
   1187c:	ldr	r0, [r0]
   11880:	str	r0, [r1]
   11884:	ldr	r0, [sp, #40]	; 0x28
   11888:	ldr	r0, [r0, #4]
   1188c:	str	r0, [sp, #40]	; 0x28
   11890:	b	11824 <__assert_fail@plt+0x80c>
   11894:	movw	r0, #49500	; 0xc15c
   11898:	movt	r0, #2
   1189c:	ldr	r1, [r0]
   118a0:	ldr	r1, [r1, #20]
   118a4:	str	r1, [r0]
   118a8:	b	117c0 <__assert_fail@plt+0x7a8>
   118ac:	movw	r0, #49496	; 0xc158
   118b0:	movt	r0, #2
   118b4:	ldr	r0, [r0]
   118b8:	cmp	r0, #0
   118bc:	bls	11930 <__assert_fail@plt+0x918>
   118c0:	movw	r0, #47009	; 0xb7a1
   118c4:	movt	r0, #1
   118c8:	bl	10f4c <gettext@plt>
   118cc:	ldr	r2, [fp, #-4]
   118d0:	movw	r1, #0
   118d4:	str	r0, [sp, #16]
   118d8:	mov	r0, r1
   118dc:	movw	r1, #3
   118e0:	bl	151c8 <__assert_fail@plt+0x41b0>
   118e4:	movw	r1, #0
   118e8:	str	r0, [sp, #12]
   118ec:	mov	r0, r1
   118f0:	ldr	r2, [sp, #16]
   118f4:	ldr	r3, [sp, #12]
   118f8:	bl	10ec8 <error@plt>
   118fc:	movw	r0, #0
   11900:	strb	r0, [fp, #-5]
   11904:	ldr	r0, [fp, #-12]
   11908:	movw	r1, #8404	; 0x20d4
   1190c:	movt	r1, #1
   11910:	bl	11fe0 <__assert_fail@plt+0xfc8>
   11914:	movw	r0, #49508	; 0xc164
   11918:	movt	r0, #2
   1191c:	ldr	r0, [r0]
   11920:	movw	r1, #0
   11924:	cmp	r0, r1
   11928:	bne	11904 <__assert_fail@plt+0x8ec>
   1192c:	b	11930 <__assert_fail@plt+0x918>
   11930:	b	1179c <__assert_fail@plt+0x784>
   11934:	movw	r0, #49480	; 0xc148
   11938:	movt	r0, #2
   1193c:	ldr	r0, [r0]
   11940:	bl	12638 <__assert_fail@plt+0x1620>
   11944:	cmp	r0, #0
   11948:	beq	119b0 <__assert_fail@plt+0x998>
   1194c:	bl	10f70 <__errno_location@plt>
   11950:	ldr	r1, [r0]
   11954:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11958:	tst	r0, #1
   1195c:	str	r1, [sp, #8]
   11960:	beq	11978 <__assert_fail@plt+0x960>
   11964:	movw	r0, #47036	; 0xb7bc
   11968:	movt	r0, #1
   1196c:	bl	10f4c <gettext@plt>
   11970:	str	r0, [sp, #4]
   11974:	b	1198c <__assert_fail@plt+0x974>
   11978:	ldr	r2, [fp, #-4]
   1197c:	movw	r0, #0
   11980:	movw	r1, #3
   11984:	bl	151c8 <__assert_fail@plt+0x41b0>
   11988:	str	r0, [sp, #4]
   1198c:	ldr	r0, [sp, #4]
   11990:	movw	r1, #1
   11994:	str	r0, [sp]
   11998:	mov	r0, r1
   1199c:	ldr	r1, [sp, #8]
   119a0:	movw	r2, #47303	; 0xb8c7
   119a4:	movt	r2, #1
   119a8:	ldr	r3, [sp]
   119ac:	bl	10ec8 <error@plt>
   119b0:	ldrb	r0, [fp, #-5]
   119b4:	tst	r0, #1
   119b8:	movw	r0, #0
   119bc:	moveq	r0, #1
   119c0:	bl	10f40 <exit@plt>
   119c4:	push	{fp, lr}
   119c8:	mov	fp, sp
   119cc:	sub	sp, sp, #8
   119d0:	str	r0, [sp, #4]
   119d4:	movw	r0, #28
   119d8:	bl	18e0c <__assert_fail@plt+0x7df4>
   119dc:	str	r0, [sp]
   119e0:	ldr	r0, [sp, #4]
   119e4:	movw	r1, #0
   119e8:	cmp	r0, r1
   119ec:	beq	11a00 <__assert_fail@plt+0x9e8>
   119f0:	ldr	r0, [sp, #4]
   119f4:	bl	18f74 <__assert_fail@plt+0x7f5c>
   119f8:	ldr	r1, [sp]
   119fc:	str	r0, [r1]
   11a00:	ldr	r0, [sp]
   11a04:	mov	sp, fp
   11a08:	pop	{fp, pc}
   11a0c:	push	{fp, lr}
   11a10:	mov	fp, sp
   11a14:	sub	sp, sp, #40	; 0x28
   11a18:	str	r0, [fp, #-8]
   11a1c:	str	r1, [fp, #-12]
   11a20:	ldr	r0, [fp, #-8]
   11a24:	movw	r1, #0
   11a28:	cmp	r0, r1
   11a2c:	beq	11a34 <__assert_fail@plt+0xa1c>
   11a30:	b	11a54 <__assert_fail@plt+0xa3c>
   11a34:	movw	r0, #47051	; 0xb7cb
   11a38:	movt	r0, #1
   11a3c:	movw	r1, #46929	; 0xb751
   11a40:	movt	r1, #1
   11a44:	movw	r2, #126	; 0x7e
   11a48:	movw	r3, #47056	; 0xb7d0
   11a4c:	movt	r3, #1
   11a50:	bl	11018 <__assert_fail@plt>
   11a54:	ldr	r0, [fp, #-8]
   11a58:	ldr	r0, [r0, #8]
   11a5c:	movw	r1, #0
   11a60:	cmp	r0, r1
   11a64:	bne	11a80 <__assert_fail@plt+0xa68>
   11a68:	ldr	r0, [fp, #-12]
   11a6c:	bl	119c4 <__assert_fail@plt+0x9ac>
   11a70:	ldr	r1, [fp, #-8]
   11a74:	str	r0, [r1, #8]
   11a78:	str	r0, [fp, #-4]
   11a7c:	b	11f58 <__assert_fail@plt+0xf40>
   11a80:	ldr	r0, [fp, #-8]
   11a84:	str	r0, [sp, #8]
   11a88:	ldr	r0, [fp, #-8]
   11a8c:	ldr	r0, [r0, #8]
   11a90:	str	r0, [fp, #-16]
   11a94:	str	r0, [sp, #12]
   11a98:	ldr	r0, [fp, #-12]
   11a9c:	movw	r1, #0
   11aa0:	cmp	r0, r1
   11aa4:	beq	11ad0 <__assert_fail@plt+0xab8>
   11aa8:	ldr	r0, [fp, #-16]
   11aac:	movw	r1, #0
   11ab0:	cmp	r0, r1
   11ab4:	beq	11ad0 <__assert_fail@plt+0xab8>
   11ab8:	ldr	r0, [fp, #-16]
   11abc:	ldr	r0, [r0]
   11ac0:	movw	r1, #0
   11ac4:	cmp	r0, r1
   11ac8:	beq	11ad0 <__assert_fail@plt+0xab8>
   11acc:	b	11af0 <__assert_fail@plt+0xad8>
   11ad0:	movw	r0, #47110	; 0xb806
   11ad4:	movt	r0, #1
   11ad8:	movw	r1, #46929	; 0xb751
   11adc:	movt	r1, #1
   11ae0:	movw	r2, #140	; 0x8c
   11ae4:	movw	r3, #47056	; 0xb7d0
   11ae8:	movt	r3, #1
   11aec:	bl	11018 <__assert_fail@plt>
   11af0:	ldr	r0, [fp, #-12]
   11af4:	ldr	r1, [fp, #-16]
   11af8:	ldr	r1, [r1]
   11afc:	bl	10de4 <strcmp@plt>
   11b00:	str	r0, [sp, #4]
   11b04:	ldr	r0, [sp, #4]
   11b08:	cmp	r0, #0
   11b0c:	bne	11b1c <__assert_fail@plt+0xb04>
   11b10:	ldr	r0, [fp, #-16]
   11b14:	str	r0, [fp, #-4]
   11b18:	b	11f58 <__assert_fail@plt+0xf40>
   11b1c:	ldr	r0, [sp, #4]
   11b20:	cmp	r0, #0
   11b24:	bge	11b38 <__assert_fail@plt+0xb20>
   11b28:	ldr	r0, [fp, #-16]
   11b2c:	ldr	r0, [r0, #4]
   11b30:	str	r0, [sp, #20]
   11b34:	b	11b44 <__assert_fail@plt+0xb2c>
   11b38:	ldr	r0, [fp, #-16]
   11b3c:	ldr	r0, [r0, #8]
   11b40:	str	r0, [sp, #20]
   11b44:	ldr	r0, [sp, #20]
   11b48:	movw	r1, #0
   11b4c:	cmp	r0, r1
   11b50:	bne	11f2c <__assert_fail@plt+0xf14>
   11b54:	ldr	r0, [fp, #-12]
   11b58:	bl	119c4 <__assert_fail@plt+0x9ac>
   11b5c:	str	r0, [sp, #20]
   11b60:	ldr	r0, [sp, #4]
   11b64:	cmp	r0, #0
   11b68:	bge	11b7c <__assert_fail@plt+0xb64>
   11b6c:	ldr	r0, [sp, #20]
   11b70:	ldr	r1, [fp, #-16]
   11b74:	str	r0, [r1, #4]
   11b78:	b	11b88 <__assert_fail@plt+0xb70>
   11b7c:	ldr	r0, [sp, #20]
   11b80:	ldr	r1, [fp, #-16]
   11b84:	str	r0, [r1, #8]
   11b88:	ldr	r0, [fp, #-12]
   11b8c:	movw	r1, #0
   11b90:	cmp	r0, r1
   11b94:	beq	11bd8 <__assert_fail@plt+0xbc0>
   11b98:	ldr	r0, [sp, #12]
   11b9c:	movw	r1, #0
   11ba0:	cmp	r0, r1
   11ba4:	beq	11bd8 <__assert_fail@plt+0xbc0>
   11ba8:	ldr	r0, [sp, #12]
   11bac:	ldr	r0, [r0]
   11bb0:	movw	r1, #0
   11bb4:	cmp	r0, r1
   11bb8:	beq	11bd8 <__assert_fail@plt+0xbc0>
   11bbc:	ldr	r0, [fp, #-12]
   11bc0:	ldr	r1, [sp, #12]
   11bc4:	ldr	r1, [r1]
   11bc8:	bl	10de4 <strcmp@plt>
   11bcc:	cmp	r0, #0
   11bd0:	beq	11bd8 <__assert_fail@plt+0xbc0>
   11bd4:	b	11bf8 <__assert_fail@plt+0xbe0>
   11bd8:	movw	r0, #47129	; 0xb819
   11bdc:	movt	r0, #1
   11be0:	movw	r1, #46929	; 0xb751
   11be4:	movt	r1, #1
   11be8:	movw	r2, #163	; 0xa3
   11bec:	movw	r3, #47056	; 0xb7d0
   11bf0:	movt	r3, #1
   11bf4:	bl	11018 <__assert_fail@plt>
   11bf8:	ldr	r0, [fp, #-12]
   11bfc:	ldr	r1, [sp, #12]
   11c00:	ldr	r1, [r1]
   11c04:	bl	10de4 <strcmp@plt>
   11c08:	cmp	r0, #0
   11c0c:	bge	11c2c <__assert_fail@plt+0xc14>
   11c10:	ldr	r0, [sp, #12]
   11c14:	ldr	r0, [r0, #4]
   11c18:	str	r0, [fp, #-16]
   11c1c:	str	r0, [sp, #16]
   11c20:	mvn	r0, #0
   11c24:	str	r0, [sp, #4]
   11c28:	b	11c44 <__assert_fail@plt+0xc2c>
   11c2c:	ldr	r0, [sp, #12]
   11c30:	ldr	r0, [r0, #8]
   11c34:	str	r0, [fp, #-16]
   11c38:	str	r0, [sp, #16]
   11c3c:	movw	r0, #1
   11c40:	str	r0, [sp, #4]
   11c44:	b	11c48 <__assert_fail@plt+0xc30>
   11c48:	ldr	r0, [fp, #-16]
   11c4c:	ldr	r1, [sp, #20]
   11c50:	cmp	r0, r1
   11c54:	beq	11d18 <__assert_fail@plt+0xd00>
   11c58:	ldr	r0, [fp, #-12]
   11c5c:	movw	r1, #0
   11c60:	cmp	r0, r1
   11c64:	beq	11ca8 <__assert_fail@plt+0xc90>
   11c68:	ldr	r0, [fp, #-16]
   11c6c:	movw	r1, #0
   11c70:	cmp	r0, r1
   11c74:	beq	11ca8 <__assert_fail@plt+0xc90>
   11c78:	ldr	r0, [fp, #-16]
   11c7c:	ldr	r0, [r0]
   11c80:	movw	r1, #0
   11c84:	cmp	r0, r1
   11c88:	beq	11ca8 <__assert_fail@plt+0xc90>
   11c8c:	ldr	r0, [fp, #-12]
   11c90:	ldr	r1, [fp, #-16]
   11c94:	ldr	r1, [r1]
   11c98:	bl	10de4 <strcmp@plt>
   11c9c:	cmp	r0, #0
   11ca0:	beq	11ca8 <__assert_fail@plt+0xc90>
   11ca4:	b	11cc8 <__assert_fail@plt+0xcb0>
   11ca8:	movw	r0, #47172	; 0xb844
   11cac:	movt	r0, #1
   11cb0:	movw	r1, #46929	; 0xb751
   11cb4:	movt	r1, #1
   11cb8:	movw	r2, #177	; 0xb1
   11cbc:	movw	r3, #47056	; 0xb7d0
   11cc0:	movt	r3, #1
   11cc4:	bl	11018 <__assert_fail@plt>
   11cc8:	ldr	r0, [fp, #-12]
   11ccc:	ldr	r1, [fp, #-16]
   11cd0:	ldr	r1, [r1]
   11cd4:	bl	10de4 <strcmp@plt>
   11cd8:	cmp	r0, #0
   11cdc:	bge	11cfc <__assert_fail@plt+0xce4>
   11ce0:	ldr	r0, [fp, #-16]
   11ce4:	movw	r1, #255	; 0xff
   11ce8:	strb	r1, [r0, #12]
   11cec:	ldr	r0, [fp, #-16]
   11cf0:	ldr	r0, [r0, #4]
   11cf4:	str	r0, [fp, #-16]
   11cf8:	b	11d14 <__assert_fail@plt+0xcfc>
   11cfc:	ldr	r0, [fp, #-16]
   11d00:	movw	r1, #1
   11d04:	strb	r1, [r0, #12]
   11d08:	ldr	r0, [fp, #-16]
   11d0c:	ldr	r0, [r0, #8]
   11d10:	str	r0, [fp, #-16]
   11d14:	b	11c48 <__assert_fail@plt+0xc30>
   11d18:	ldr	r0, [sp, #12]
   11d1c:	ldrsb	r0, [r0, #12]
   11d20:	cmp	r0, #0
   11d24:	beq	11d44 <__assert_fail@plt+0xd2c>
   11d28:	ldr	r0, [sp, #12]
   11d2c:	ldrsb	r0, [r0, #12]
   11d30:	ldr	r1, [sp, #4]
   11d34:	movw	r2, #0
   11d38:	sub	r1, r2, r1
   11d3c:	cmp	r0, r1
   11d40:	bne	11d64 <__assert_fail@plt+0xd4c>
   11d44:	ldr	r0, [sp, #4]
   11d48:	ldr	r1, [sp, #12]
   11d4c:	ldrsb	r2, [r1, #12]
   11d50:	add	r0, r2, r0
   11d54:	strb	r0, [r1, #12]
   11d58:	ldr	r0, [sp, #20]
   11d5c:	str	r0, [fp, #-4]
   11d60:	b	11f58 <__assert_fail@plt+0xf40>
   11d64:	ldr	r0, [sp, #16]
   11d68:	ldrsb	r0, [r0, #12]
   11d6c:	ldr	r1, [sp, #4]
   11d70:	cmp	r0, r1
   11d74:	bne	11de0 <__assert_fail@plt+0xdc8>
   11d78:	ldr	r0, [sp, #16]
   11d7c:	str	r0, [fp, #-16]
   11d80:	ldr	r0, [sp, #4]
   11d84:	cmp	r0, #0
   11d88:	bge	11dac <__assert_fail@plt+0xd94>
   11d8c:	ldr	r0, [sp, #16]
   11d90:	ldr	r0, [r0, #8]
   11d94:	ldr	r1, [sp, #12]
   11d98:	str	r0, [r1, #4]
   11d9c:	ldr	r0, [sp, #12]
   11da0:	ldr	r1, [sp, #16]
   11da4:	str	r0, [r1, #8]
   11da8:	b	11dc8 <__assert_fail@plt+0xdb0>
   11dac:	ldr	r0, [sp, #16]
   11db0:	ldr	r0, [r0, #4]
   11db4:	ldr	r1, [sp, #12]
   11db8:	str	r0, [r1, #8]
   11dbc:	ldr	r0, [sp, #12]
   11dc0:	ldr	r1, [sp, #16]
   11dc4:	str	r0, [r1, #4]
   11dc8:	ldr	r0, [sp, #16]
   11dcc:	movw	r1, #0
   11dd0:	strb	r1, [r0, #12]
   11dd4:	ldr	r0, [sp, #12]
   11dd8:	strb	r1, [r0, #12]
   11ddc:	b	11ef0 <__assert_fail@plt+0xed8>
   11de0:	ldr	r0, [sp, #4]
   11de4:	cmp	r0, #0
   11de8:	bge	11e34 <__assert_fail@plt+0xe1c>
   11dec:	ldr	r0, [sp, #16]
   11df0:	ldr	r0, [r0, #8]
   11df4:	str	r0, [fp, #-16]
   11df8:	ldr	r0, [fp, #-16]
   11dfc:	ldr	r0, [r0, #4]
   11e00:	ldr	r1, [sp, #16]
   11e04:	str	r0, [r1, #8]
   11e08:	ldr	r0, [sp, #16]
   11e0c:	ldr	r1, [fp, #-16]
   11e10:	str	r0, [r1, #4]
   11e14:	ldr	r0, [fp, #-16]
   11e18:	ldr	r0, [r0, #8]
   11e1c:	ldr	r1, [sp, #12]
   11e20:	str	r0, [r1, #4]
   11e24:	ldr	r0, [sp, #12]
   11e28:	ldr	r1, [fp, #-16]
   11e2c:	str	r0, [r1, #8]
   11e30:	b	11e78 <__assert_fail@plt+0xe60>
   11e34:	ldr	r0, [sp, #16]
   11e38:	ldr	r0, [r0, #4]
   11e3c:	str	r0, [fp, #-16]
   11e40:	ldr	r0, [fp, #-16]
   11e44:	ldr	r0, [r0, #8]
   11e48:	ldr	r1, [sp, #16]
   11e4c:	str	r0, [r1, #4]
   11e50:	ldr	r0, [sp, #16]
   11e54:	ldr	r1, [fp, #-16]
   11e58:	str	r0, [r1, #8]
   11e5c:	ldr	r0, [fp, #-16]
   11e60:	ldr	r0, [r0, #4]
   11e64:	ldr	r1, [sp, #12]
   11e68:	str	r0, [r1, #8]
   11e6c:	ldr	r0, [sp, #12]
   11e70:	ldr	r1, [fp, #-16]
   11e74:	str	r0, [r1, #4]
   11e78:	ldr	r0, [sp, #12]
   11e7c:	movw	r1, #0
   11e80:	strb	r1, [r0, #12]
   11e84:	ldr	r0, [sp, #16]
   11e88:	strb	r1, [r0, #12]
   11e8c:	ldr	r0, [fp, #-16]
   11e90:	ldrsb	r0, [r0, #12]
   11e94:	ldr	r1, [sp, #4]
   11e98:	cmp	r0, r1
   11e9c:	bne	11eb8 <__assert_fail@plt+0xea0>
   11ea0:	ldr	r0, [sp, #4]
   11ea4:	movw	r1, #0
   11ea8:	sub	r0, r1, r0
   11eac:	ldr	r1, [sp, #12]
   11eb0:	strb	r0, [r1, #12]
   11eb4:	b	11ee4 <__assert_fail@plt+0xecc>
   11eb8:	ldr	r0, [fp, #-16]
   11ebc:	ldrsb	r0, [r0, #12]
   11ec0:	ldr	r1, [sp, #4]
   11ec4:	movw	r2, #0
   11ec8:	sub	r1, r2, r1
   11ecc:	cmp	r0, r1
   11ed0:	bne	11ee0 <__assert_fail@plt+0xec8>
   11ed4:	ldr	r0, [sp, #4]
   11ed8:	ldr	r1, [sp, #16]
   11edc:	strb	r0, [r1, #12]
   11ee0:	b	11ee4 <__assert_fail@plt+0xecc>
   11ee4:	ldr	r0, [fp, #-16]
   11ee8:	movw	r1, #0
   11eec:	strb	r1, [r0, #12]
   11ef0:	ldr	r0, [sp, #12]
   11ef4:	ldr	r1, [sp, #8]
   11ef8:	ldr	r1, [r1, #8]
   11efc:	cmp	r0, r1
   11f00:	bne	11f14 <__assert_fail@plt+0xefc>
   11f04:	ldr	r0, [fp, #-16]
   11f08:	ldr	r1, [sp, #8]
   11f0c:	str	r0, [r1, #8]
   11f10:	b	11f20 <__assert_fail@plt+0xf08>
   11f14:	ldr	r0, [fp, #-16]
   11f18:	ldr	r1, [sp, #8]
   11f1c:	str	r0, [r1, #4]
   11f20:	ldr	r0, [sp, #20]
   11f24:	str	r0, [fp, #-4]
   11f28:	b	11f58 <__assert_fail@plt+0xf40>
   11f2c:	ldr	r0, [sp, #20]
   11f30:	ldrsb	r0, [r0, #12]
   11f34:	cmp	r0, #0
   11f38:	beq	11f4c <__assert_fail@plt+0xf34>
   11f3c:	ldr	r0, [fp, #-16]
   11f40:	str	r0, [sp, #8]
   11f44:	ldr	r0, [sp, #20]
   11f48:	str	r0, [sp, #12]
   11f4c:	ldr	r0, [sp, #20]
   11f50:	str	r0, [fp, #-16]
   11f54:	b	11a98 <__assert_fail@plt+0xa80>
   11f58:	ldr	r0, [fp, #-4]
   11f5c:	mov	sp, fp
   11f60:	pop	{fp, pc}
   11f64:	push	{fp, lr}
   11f68:	mov	fp, sp
   11f6c:	sub	sp, sp, #16
   11f70:	str	r0, [fp, #-4]
   11f74:	str	r1, [sp, #8]
   11f78:	ldr	r0, [fp, #-4]
   11f7c:	ldr	r0, [r0]
   11f80:	ldr	r1, [sp, #8]
   11f84:	ldr	r1, [r1]
   11f88:	bl	10de4 <strcmp@plt>
   11f8c:	cmp	r0, #0
   11f90:	beq	11fd8 <__assert_fail@plt+0xfc0>
   11f94:	ldr	r0, [sp, #8]
   11f98:	ldr	r1, [r0, #16]
   11f9c:	add	r1, r1, #1
   11fa0:	str	r1, [r0, #16]
   11fa4:	movw	r0, #8
   11fa8:	bl	16274 <__assert_fail@plt+0x525c>
   11fac:	str	r0, [sp, #4]
   11fb0:	ldr	r0, [sp, #8]
   11fb4:	ldr	r1, [sp, #4]
   11fb8:	str	r0, [r1]
   11fbc:	ldr	r0, [fp, #-4]
   11fc0:	ldr	r0, [r0, #24]
   11fc4:	ldr	r1, [sp, #4]
   11fc8:	str	r0, [r1, #4]
   11fcc:	ldr	r0, [sp, #4]
   11fd0:	ldr	r1, [fp, #-4]
   11fd4:	str	r0, [r1, #24]
   11fd8:	mov	sp, fp
   11fdc:	pop	{fp, pc}
   11fe0:	push	{fp, lr}
   11fe4:	mov	fp, sp
   11fe8:	sub	sp, sp, #8
   11fec:	str	r0, [sp, #4]
   11ff0:	str	r1, [sp]
   11ff4:	ldr	r0, [sp, #4]
   11ff8:	ldr	r0, [r0, #8]
   11ffc:	movw	r1, #0
   12000:	cmp	r0, r1
   12004:	beq	12018 <__assert_fail@plt+0x1000>
   12008:	ldr	r0, [sp, #4]
   1200c:	ldr	r0, [r0, #8]
   12010:	ldr	r1, [sp]
   12014:	bl	122e4 <__assert_fail@plt+0x12cc>
   12018:	mov	sp, fp
   1201c:	pop	{fp, pc}
   12020:	sub	sp, sp, #4
   12024:	str	r0, [sp]
   12028:	movw	r0, #49496	; 0xc158
   1202c:	movt	r0, #2
   12030:	ldr	r1, [r0]
   12034:	add	r1, r1, #1
   12038:	str	r1, [r0]
   1203c:	movw	r0, #0
   12040:	and	r0, r0, #1
   12044:	add	sp, sp, #4
   12048:	bx	lr
   1204c:	sub	sp, sp, #4
   12050:	str	r0, [sp]
   12054:	ldr	r0, [sp]
   12058:	ldr	r0, [r0, #16]
   1205c:	cmp	r0, #0
   12060:	bne	120c4 <__assert_fail@plt+0x10ac>
   12064:	ldr	r0, [sp]
   12068:	ldrb	r0, [r0, #13]
   1206c:	tst	r0, #1
   12070:	bne	120c4 <__assert_fail@plt+0x10ac>
   12074:	movw	r0, #49500	; 0xc15c
   12078:	movt	r0, #2
   1207c:	ldr	r0, [r0]
   12080:	movw	r1, #0
   12084:	cmp	r0, r1
   12088:	bne	120a0 <__assert_fail@plt+0x1088>
   1208c:	ldr	r0, [sp]
   12090:	movw	r1, #49500	; 0xc15c
   12094:	movt	r1, #2
   12098:	str	r0, [r1]
   1209c:	b	120b4 <__assert_fail@plt+0x109c>
   120a0:	ldr	r0, [sp]
   120a4:	movw	r1, #49504	; 0xc160
   120a8:	movt	r1, #2
   120ac:	ldr	r1, [r1]
   120b0:	str	r0, [r1, #20]
   120b4:	ldr	r0, [sp]
   120b8:	movw	r1, #49504	; 0xc160
   120bc:	movt	r1, #2
   120c0:	str	r0, [r1]
   120c4:	movw	r0, #0
   120c8:	and	r0, r0, #1
   120cc:	add	sp, sp, #4
   120d0:	bx	lr
   120d4:	push	{fp, lr}
   120d8:	mov	fp, sp
   120dc:	sub	sp, sp, #32
   120e0:	str	r0, [fp, #-8]
   120e4:	ldr	r0, [fp, #-8]
   120e8:	ldr	r0, [r0, #16]
   120ec:	cmp	r0, #0
   120f0:	bls	122c8 <__assert_fail@plt+0x12b0>
   120f4:	movw	r0, #49508	; 0xc164
   120f8:	movt	r0, #2
   120fc:	ldr	r0, [r0]
   12100:	movw	r1, #0
   12104:	cmp	r0, r1
   12108:	bne	12120 <__assert_fail@plt+0x1108>
   1210c:	ldr	r0, [fp, #-8]
   12110:	movw	r1, #49508	; 0xc164
   12114:	movt	r1, #2
   12118:	str	r0, [r1]
   1211c:	b	122c4 <__assert_fail@plt+0x12ac>
   12120:	ldr	r0, [fp, #-8]
   12124:	add	r0, r0, #24
   12128:	str	r0, [fp, #-12]
   1212c:	ldr	r0, [fp, #-12]
   12130:	ldr	r0, [r0]
   12134:	movw	r1, #0
   12138:	cmp	r0, r1
   1213c:	beq	122c0 <__assert_fail@plt+0x12a8>
   12140:	ldr	r0, [fp, #-12]
   12144:	ldr	r0, [r0]
   12148:	ldr	r0, [r0]
   1214c:	movw	r1, #49508	; 0xc164
   12150:	movt	r1, #2
   12154:	ldr	r1, [r1]
   12158:	cmp	r0, r1
   1215c:	bne	122ac <__assert_fail@plt+0x1294>
   12160:	ldr	r0, [fp, #-8]
   12164:	ldr	r0, [r0, #20]
   12168:	movw	r1, #0
   1216c:	cmp	r0, r1
   12170:	beq	1228c <__assert_fail@plt+0x1274>
   12174:	b	12178 <__assert_fail@plt+0x1160>
   12178:	movw	r0, #49508	; 0xc164
   1217c:	movt	r0, #2
   12180:	ldr	r0, [r0]
   12184:	movw	r1, #0
   12188:	cmp	r0, r1
   1218c:	beq	12234 <__assert_fail@plt+0x121c>
   12190:	movw	r0, #49508	; 0xc164
   12194:	movt	r0, #2
   12198:	ldr	r1, [r0]
   1219c:	ldr	r1, [r1, #20]
   121a0:	str	r1, [sp, #16]
   121a4:	ldr	r0, [r0]
   121a8:	ldr	r3, [r0]
   121ac:	movw	r0, #0
   121b0:	str	r0, [sp, #4]
   121b4:	ldr	r1, [sp, #4]
   121b8:	movw	r2, #47303	; 0xb8c7
   121bc:	movt	r2, #1
   121c0:	bl	10ec8 <error@plt>
   121c4:	movw	r0, #49508	; 0xc164
   121c8:	movt	r0, #2
   121cc:	ldr	r0, [r0]
   121d0:	ldr	r1, [fp, #-8]
   121d4:	cmp	r0, r1
   121d8:	bne	12214 <__assert_fail@plt+0x11fc>
   121dc:	ldr	r0, [fp, #-12]
   121e0:	ldr	r0, [r0]
   121e4:	str	r0, [sp, #12]
   121e8:	ldr	r0, [sp, #12]
   121ec:	ldr	r0, [r0]
   121f0:	ldr	r1, [r0, #16]
   121f4:	mvn	r2, #0
   121f8:	add	r1, r1, r2
   121fc:	str	r1, [r0, #16]
   12200:	ldr	r0, [sp, #12]
   12204:	ldr	r0, [r0, #4]
   12208:	ldr	r1, [fp, #-12]
   1220c:	str	r0, [r1]
   12210:	b	12234 <__assert_fail@plt+0x121c>
   12214:	movw	r0, #49508	; 0xc164
   12218:	movt	r0, #2
   1221c:	ldr	r1, [r0]
   12220:	movw	r2, #0
   12224:	str	r2, [r1, #20]
   12228:	ldr	r1, [sp, #16]
   1222c:	str	r1, [r0]
   12230:	b	12178 <__assert_fail@plt+0x1160>
   12234:	b	12238 <__assert_fail@plt+0x1220>
   12238:	movw	r0, #49508	; 0xc164
   1223c:	movt	r0, #2
   12240:	ldr	r0, [r0]
   12244:	movw	r1, #0
   12248:	cmp	r0, r1
   1224c:	beq	1227c <__assert_fail@plt+0x1264>
   12250:	movw	r0, #49508	; 0xc164
   12254:	movt	r0, #2
   12258:	ldr	r1, [r0]
   1225c:	ldr	r1, [r1, #20]
   12260:	str	r1, [sp, #8]
   12264:	ldr	r1, [r0]
   12268:	movw	r2, #0
   1226c:	str	r2, [r1, #20]
   12270:	ldr	r1, [sp, #8]
   12274:	str	r1, [r0]
   12278:	b	12238 <__assert_fail@plt+0x1220>
   1227c:	movw	r0, #1
   12280:	and	r0, r0, #1
   12284:	strb	r0, [fp, #-1]
   12288:	b	122d4 <__assert_fail@plt+0x12bc>
   1228c:	movw	r0, #49508	; 0xc164
   12290:	movt	r0, #2
   12294:	ldr	r1, [r0]
   12298:	ldr	r2, [fp, #-8]
   1229c:	str	r1, [r2, #20]
   122a0:	ldr	r1, [fp, #-8]
   122a4:	str	r1, [r0]
   122a8:	b	122c0 <__assert_fail@plt+0x12a8>
   122ac:	ldr	r0, [fp, #-12]
   122b0:	ldr	r0, [r0]
   122b4:	add	r0, r0, #4
   122b8:	str	r0, [fp, #-12]
   122bc:	b	1212c <__assert_fail@plt+0x1114>
   122c0:	b	122c4 <__assert_fail@plt+0x12ac>
   122c4:	b	122c8 <__assert_fail@plt+0x12b0>
   122c8:	movw	r0, #0
   122cc:	and	r0, r0, #1
   122d0:	strb	r0, [fp, #-1]
   122d4:	ldrb	r0, [fp, #-1]
   122d8:	and	r0, r0, #1
   122dc:	mov	sp, fp
   122e0:	pop	{fp, pc}
   122e4:	push	{fp, lr}
   122e8:	mov	fp, sp
   122ec:	sub	sp, sp, #24
   122f0:	str	r0, [fp, #-8]
   122f4:	str	r1, [sp, #12]
   122f8:	ldr	r0, [fp, #-8]
   122fc:	ldr	r0, [r0, #4]
   12300:	movw	r1, #0
   12304:	cmp	r0, r1
   12308:	bne	12344 <__assert_fail@plt+0x132c>
   1230c:	ldr	r0, [fp, #-8]
   12310:	ldr	r0, [r0, #8]
   12314:	movw	r1, #0
   12318:	cmp	r0, r1
   1231c:	bne	12344 <__assert_fail@plt+0x132c>
   12320:	ldr	r0, [sp, #12]
   12324:	ldr	r1, [fp, #-8]
   12328:	str	r0, [sp, #8]
   1232c:	mov	r0, r1
   12330:	ldr	r1, [sp, #8]
   12334:	blx	r1
   12338:	and	r0, r0, #1
   1233c:	strb	r0, [fp, #-1]
   12340:	b	12404 <__assert_fail@plt+0x13ec>
   12344:	ldr	r0, [fp, #-8]
   12348:	ldr	r0, [r0, #4]
   1234c:	movw	r1, #0
   12350:	cmp	r0, r1
   12354:	beq	12384 <__assert_fail@plt+0x136c>
   12358:	ldr	r0, [fp, #-8]
   1235c:	ldr	r0, [r0, #4]
   12360:	ldr	r1, [sp, #12]
   12364:	bl	122e4 <__assert_fail@plt+0x12cc>
   12368:	tst	r0, #1
   1236c:	beq	12380 <__assert_fail@plt+0x1368>
   12370:	movw	r0, #1
   12374:	and	r0, r0, #1
   12378:	strb	r0, [fp, #-1]
   1237c:	b	12404 <__assert_fail@plt+0x13ec>
   12380:	b	12384 <__assert_fail@plt+0x136c>
   12384:	ldr	r0, [sp, #12]
   12388:	ldr	r1, [fp, #-8]
   1238c:	str	r0, [sp, #4]
   12390:	mov	r0, r1
   12394:	ldr	r1, [sp, #4]
   12398:	blx	r1
   1239c:	tst	r0, #1
   123a0:	beq	123b4 <__assert_fail@plt+0x139c>
   123a4:	movw	r0, #1
   123a8:	and	r0, r0, #1
   123ac:	strb	r0, [fp, #-1]
   123b0:	b	12404 <__assert_fail@plt+0x13ec>
   123b4:	ldr	r0, [fp, #-8]
   123b8:	ldr	r0, [r0, #8]
   123bc:	movw	r1, #0
   123c0:	cmp	r0, r1
   123c4:	beq	123f4 <__assert_fail@plt+0x13dc>
   123c8:	ldr	r0, [fp, #-8]
   123cc:	ldr	r0, [r0, #8]
   123d0:	ldr	r1, [sp, #12]
   123d4:	bl	122e4 <__assert_fail@plt+0x12cc>
   123d8:	tst	r0, #1
   123dc:	beq	123f0 <__assert_fail@plt+0x13d8>
   123e0:	movw	r0, #1
   123e4:	and	r0, r0, #1
   123e8:	strb	r0, [fp, #-1]
   123ec:	b	12404 <__assert_fail@plt+0x13ec>
   123f0:	b	123f4 <__assert_fail@plt+0x13dc>
   123f4:	b	123f8 <__assert_fail@plt+0x13e0>
   123f8:	movw	r0, #0
   123fc:	and	r0, r0, #1
   12400:	strb	r0, [fp, #-1]
   12404:	ldrb	r0, [fp, #-1]
   12408:	and	r0, r0, #1
   1240c:	mov	sp, fp
   12410:	pop	{fp, pc}
   12414:	sub	sp, sp, #4
   12418:	str	r0, [sp]
   1241c:	ldr	r0, [sp]
   12420:	movw	r1, #49512	; 0xc168
   12424:	movt	r1, #2
   12428:	str	r0, [r1]
   1242c:	add	sp, sp, #4
   12430:	bx	lr
   12434:	sub	sp, sp, #4
   12438:	and	r0, r0, #1
   1243c:	strb	r0, [sp, #3]
   12440:	ldrb	r0, [sp, #3]
   12444:	and	r0, r0, #1
   12448:	movw	r1, #49516	; 0xc16c
   1244c:	movt	r1, #2
   12450:	strb	r0, [r1]
   12454:	add	sp, sp, #4
   12458:	bx	lr
   1245c:	push	{fp, lr}
   12460:	mov	fp, sp
   12464:	sub	sp, sp, #24
   12468:	movw	r0, #49484	; 0xc14c
   1246c:	movt	r0, #2
   12470:	ldr	r0, [r0]
   12474:	bl	19264 <__assert_fail@plt+0x824c>
   12478:	cmp	r0, #0
   1247c:	beq	1254c <__assert_fail@plt+0x1534>
   12480:	movw	r0, #49516	; 0xc16c
   12484:	movt	r0, #2
   12488:	ldrb	r0, [r0]
   1248c:	tst	r0, #1
   12490:	beq	124a4 <__assert_fail@plt+0x148c>
   12494:	bl	10f70 <__errno_location@plt>
   12498:	ldr	r0, [r0]
   1249c:	cmp	r0, #32
   124a0:	beq	1254c <__assert_fail@plt+0x1534>
   124a4:	movw	r0, #47287	; 0xb8b7
   124a8:	movt	r0, #1
   124ac:	bl	10f4c <gettext@plt>
   124b0:	str	r0, [fp, #-4]
   124b4:	movw	r0, #49512	; 0xc168
   124b8:	movt	r0, #2
   124bc:	ldr	r0, [r0]
   124c0:	movw	r1, #0
   124c4:	cmp	r0, r1
   124c8:	beq	12520 <__assert_fail@plt+0x1508>
   124cc:	bl	10f70 <__errno_location@plt>
   124d0:	ldr	r1, [r0]
   124d4:	movw	r0, #49512	; 0xc168
   124d8:	movt	r0, #2
   124dc:	ldr	r0, [r0]
   124e0:	str	r1, [fp, #-8]
   124e4:	bl	15170 <__assert_fail@plt+0x4158>
   124e8:	ldr	r1, [fp, #-4]
   124ec:	movw	r2, #0
   124f0:	str	r0, [sp, #12]
   124f4:	mov	r0, r2
   124f8:	ldr	r2, [fp, #-8]
   124fc:	str	r1, [sp, #8]
   12500:	mov	r1, r2
   12504:	movw	r2, #47299	; 0xb8c3
   12508:	movt	r2, #1
   1250c:	ldr	r3, [sp, #12]
   12510:	ldr	ip, [sp, #8]
   12514:	str	ip, [sp]
   12518:	bl	10ec8 <error@plt>
   1251c:	b	1253c <__assert_fail@plt+0x1524>
   12520:	bl	10f70 <__errno_location@plt>
   12524:	ldr	r1, [r0]
   12528:	ldr	r3, [fp, #-4]
   1252c:	movw	r0, #0
   12530:	movw	r2, #47303	; 0xb8c7
   12534:	movt	r2, #1
   12538:	bl	10ec8 <error@plt>
   1253c:	movw	r0, #49384	; 0xc0e8
   12540:	movt	r0, #2
   12544:	ldr	r0, [r0]
   12548:	bl	10e20 <_exit@plt>
   1254c:	movw	r0, #49472	; 0xc140
   12550:	movt	r0, #2
   12554:	ldr	r0, [r0]
   12558:	bl	19264 <__assert_fail@plt+0x824c>
   1255c:	cmp	r0, #0
   12560:	beq	12574 <__assert_fail@plt+0x155c>
   12564:	movw	r0, #49384	; 0xc0e8
   12568:	movt	r0, #2
   1256c:	ldr	r0, [r0]
   12570:	bl	10e20 <_exit@plt>
   12574:	mov	sp, fp
   12578:	pop	{fp, pc}
   1257c:	push	{r4, r5, fp, lr}
   12580:	add	fp, sp, #8
   12584:	sub	sp, sp, #40	; 0x28
   12588:	ldr	r1, [fp, #12]
   1258c:	ldr	ip, [fp, #8]
   12590:	ldr	lr, [fp, #16]
   12594:	str	r0, [fp, #-12]
   12598:	str	r3, [sp, #28]
   1259c:	str	r2, [sp, #24]
   125a0:	str	r1, [sp, #20]
   125a4:	str	ip, [sp, #16]
   125a8:	ldr	r0, [fp, #-12]
   125ac:	ldr	r2, [sp, #24]
   125b0:	ldr	r3, [sp, #28]
   125b4:	ldr	r1, [sp, #16]
   125b8:	ldr	ip, [sp, #20]
   125bc:	ldr	r4, [fp, #16]
   125c0:	mov	r5, sp
   125c4:	str	r4, [r5, #8]
   125c8:	str	ip, [r5, #4]
   125cc:	str	r1, [r5]
   125d0:	str	lr, [sp, #12]
   125d4:	bl	10df0 <posix_fadvise64@plt>
   125d8:	sub	sp, fp, #8
   125dc:	pop	{r4, r5, fp, pc}
   125e0:	push	{fp, lr}
   125e4:	mov	fp, sp
   125e8:	sub	sp, sp, #24
   125ec:	str	r0, [fp, #-4]
   125f0:	str	r1, [fp, #-8]
   125f4:	ldr	r0, [fp, #-4]
   125f8:	movw	r1, #0
   125fc:	cmp	r0, r1
   12600:	beq	12630 <__assert_fail@plt+0x1618>
   12604:	ldr	r0, [fp, #-4]
   12608:	bl	10f94 <fileno@plt>
   1260c:	ldr	r1, [fp, #-8]
   12610:	mov	r2, sp
   12614:	str	r1, [r2, #8]
   12618:	mov	r1, #0
   1261c:	str	r1, [r2, #4]
   12620:	str	r1, [r2]
   12624:	mov	r2, r1
   12628:	mov	r3, r1
   1262c:	bl	1257c <__assert_fail@plt+0x1564>
   12630:	mov	sp, fp
   12634:	pop	{fp, pc}
   12638:	push	{fp, lr}
   1263c:	mov	fp, sp
   12640:	sub	sp, sp, #32
   12644:	str	r0, [fp, #-8]
   12648:	movw	r0, #0
   1264c:	str	r0, [fp, #-12]
   12650:	str	r0, [sp, #12]
   12654:	ldr	r0, [fp, #-8]
   12658:	bl	10f94 <fileno@plt>
   1265c:	str	r0, [sp, #16]
   12660:	ldr	r0, [sp, #16]
   12664:	cmp	r0, #0
   12668:	bge	1267c <__assert_fail@plt+0x1664>
   1266c:	ldr	r0, [fp, #-8]
   12670:	bl	10fa0 <fclose@plt>
   12674:	str	r0, [fp, #-4]
   12678:	b	12718 <__assert_fail@plt+0x1700>
   1267c:	ldr	r0, [fp, #-8]
   12680:	bl	10f04 <__freading@plt>
   12684:	cmp	r0, #0
   12688:	beq	126c0 <__assert_fail@plt+0x16a8>
   1268c:	ldr	r0, [fp, #-8]
   12690:	bl	10f94 <fileno@plt>
   12694:	mov	r1, sp
   12698:	mov	r2, #1
   1269c:	str	r2, [r1]
   126a0:	mov	r1, #0
   126a4:	mov	r2, r1
   126a8:	mov	r3, r1
   126ac:	bl	10e8c <lseek64@plt>
   126b0:	and	r0, r0, r1
   126b4:	cmn	r0, #1
   126b8:	beq	126dc <__assert_fail@plt+0x16c4>
   126bc:	b	126c0 <__assert_fail@plt+0x16a8>
   126c0:	ldr	r0, [fp, #-8]
   126c4:	bl	12724 <__assert_fail@plt+0x170c>
   126c8:	cmp	r0, #0
   126cc:	beq	126dc <__assert_fail@plt+0x16c4>
   126d0:	bl	10f70 <__errno_location@plt>
   126d4:	ldr	r0, [r0]
   126d8:	str	r0, [fp, #-12]
   126dc:	ldr	r0, [fp, #-8]
   126e0:	bl	10fa0 <fclose@plt>
   126e4:	str	r0, [sp, #12]
   126e8:	ldr	r0, [fp, #-12]
   126ec:	cmp	r0, #0
   126f0:	beq	12710 <__assert_fail@plt+0x16f8>
   126f4:	ldr	r0, [fp, #-12]
   126f8:	str	r0, [sp, #8]
   126fc:	bl	10f70 <__errno_location@plt>
   12700:	ldr	r1, [sp, #8]
   12704:	str	r1, [r0]
   12708:	mvn	r0, #0
   1270c:	str	r0, [sp, #12]
   12710:	ldr	r0, [sp, #12]
   12714:	str	r0, [fp, #-4]
   12718:	ldr	r0, [fp, #-4]
   1271c:	mov	sp, fp
   12720:	pop	{fp, pc}
   12724:	push	{fp, lr}
   12728:	mov	fp, sp
   1272c:	sub	sp, sp, #8
   12730:	str	r0, [sp]
   12734:	ldr	r0, [sp]
   12738:	movw	r1, #0
   1273c:	cmp	r0, r1
   12740:	beq	12754 <__assert_fail@plt+0x173c>
   12744:	ldr	r0, [sp]
   12748:	bl	10f04 <__freading@plt>
   1274c:	cmp	r0, #0
   12750:	bne	12764 <__assert_fail@plt+0x174c>
   12754:	ldr	r0, [sp]
   12758:	bl	10e08 <fflush@plt>
   1275c:	str	r0, [sp, #4]
   12760:	b	12778 <__assert_fail@plt+0x1760>
   12764:	ldr	r0, [sp]
   12768:	bl	12784 <__assert_fail@plt+0x176c>
   1276c:	ldr	r0, [sp]
   12770:	bl	10e08 <fflush@plt>
   12774:	str	r0, [sp, #4]
   12778:	ldr	r0, [sp, #4]
   1277c:	mov	sp, fp
   12780:	pop	{fp, pc}
   12784:	push	{fp, lr}
   12788:	mov	fp, sp
   1278c:	sub	sp, sp, #8
   12790:	str	r0, [sp, #4]
   12794:	ldr	r0, [sp, #4]
   12798:	ldr	r0, [r0]
   1279c:	and	r0, r0, #256	; 0x100
   127a0:	cmp	r0, #0
   127a4:	beq	127c8 <__assert_fail@plt+0x17b0>
   127a8:	ldr	r0, [sp, #4]
   127ac:	mov	r1, sp
   127b0:	mov	r2, #1
   127b4:	str	r2, [r1]
   127b8:	mov	r1, #0
   127bc:	mov	r2, r1
   127c0:	mov	r3, r1
   127c4:	bl	12a38 <__assert_fail@plt+0x1a20>
   127c8:	mov	sp, fp
   127cc:	pop	{fp, pc}
   127d0:	push	{fp, lr}
   127d4:	mov	fp, sp
   127d8:	sub	sp, sp, #40	; 0x28
   127dc:	str	r0, [fp, #-4]
   127e0:	str	r1, [fp, #-8]
   127e4:	str	r2, [fp, #-12]
   127e8:	mov	r0, #0
   127ec:	strb	r0, [fp, #-13]
   127f0:	strb	r0, [fp, #-14]
   127f4:	strb	r0, [fp, #-15]
   127f8:	ldr	r0, [fp, #-12]
   127fc:	bl	10f94 <fileno@plt>
   12800:	mov	r1, r0
   12804:	cmp	r0, #0
   12808:	str	r1, [sp, #16]
   1280c:	beq	128a0 <__assert_fail@plt+0x1888>
   12810:	b	12814 <__assert_fail@plt+0x17fc>
   12814:	ldr	r0, [sp, #16]
   12818:	cmp	r0, #1
   1281c:	beq	1287c <__assert_fail@plt+0x1864>
   12820:	b	12824 <__assert_fail@plt+0x180c>
   12824:	ldr	r0, [sp, #16]
   12828:	cmp	r0, #2
   1282c:	beq	12858 <__assert_fail@plt+0x1840>
   12830:	b	12834 <__assert_fail@plt+0x181c>
   12834:	movw	r0, #2
   12838:	str	r0, [sp, #12]
   1283c:	ldr	r1, [sp, #12]
   12840:	bl	10e5c <dup2@plt>
   12844:	cmp	r0, #2
   12848:	beq	12854 <__assert_fail@plt+0x183c>
   1284c:	movw	r0, #1
   12850:	strb	r0, [fp, #-15]
   12854:	b	12858 <__assert_fail@plt+0x1840>
   12858:	movw	r0, #1
   1285c:	str	r0, [sp, #8]
   12860:	ldr	r1, [sp, #8]
   12864:	bl	10e5c <dup2@plt>
   12868:	cmp	r0, #1
   1286c:	beq	12878 <__assert_fail@plt+0x1860>
   12870:	movw	r0, #1
   12874:	strb	r0, [fp, #-14]
   12878:	b	1287c <__assert_fail@plt+0x1864>
   1287c:	movw	r0, #0
   12880:	str	r0, [sp, #4]
   12884:	ldr	r1, [sp, #4]
   12888:	bl	10e5c <dup2@plt>
   1288c:	cmp	r0, #0
   12890:	beq	1289c <__assert_fail@plt+0x1884>
   12894:	movw	r0, #1
   12898:	strb	r0, [fp, #-13]
   1289c:	b	128a0 <__assert_fail@plt+0x1888>
   128a0:	b	128a4 <__assert_fail@plt+0x188c>
   128a4:	ldrb	r0, [fp, #-13]
   128a8:	tst	r0, #1
   128ac:	beq	128cc <__assert_fail@plt+0x18b4>
   128b0:	movw	r0, #0
   128b4:	bl	129b0 <__assert_fail@plt+0x1998>
   128b8:	tst	r0, #1
   128bc:	bne	128cc <__assert_fail@plt+0x18b4>
   128c0:	movw	r0, #0
   128c4:	str	r0, [fp, #-12]
   128c8:	b	12938 <__assert_fail@plt+0x1920>
   128cc:	ldrb	r0, [fp, #-14]
   128d0:	tst	r0, #1
   128d4:	beq	128f4 <__assert_fail@plt+0x18dc>
   128d8:	movw	r0, #1
   128dc:	bl	129b0 <__assert_fail@plt+0x1998>
   128e0:	tst	r0, #1
   128e4:	bne	128f4 <__assert_fail@plt+0x18dc>
   128e8:	movw	r0, #0
   128ec:	str	r0, [fp, #-12]
   128f0:	b	12934 <__assert_fail@plt+0x191c>
   128f4:	ldrb	r0, [fp, #-15]
   128f8:	tst	r0, #1
   128fc:	beq	1291c <__assert_fail@plt+0x1904>
   12900:	movw	r0, #2
   12904:	bl	129b0 <__assert_fail@plt+0x1998>
   12908:	tst	r0, #1
   1290c:	bne	1291c <__assert_fail@plt+0x1904>
   12910:	movw	r0, #0
   12914:	str	r0, [fp, #-12]
   12918:	b	12930 <__assert_fail@plt+0x1918>
   1291c:	ldr	r0, [fp, #-4]
   12920:	ldr	r1, [fp, #-8]
   12924:	ldr	r2, [fp, #-12]
   12928:	bl	10f1c <freopen64@plt>
   1292c:	str	r0, [fp, #-12]
   12930:	b	12934 <__assert_fail@plt+0x191c>
   12934:	b	12938 <__assert_fail@plt+0x1920>
   12938:	bl	10f70 <__errno_location@plt>
   1293c:	ldr	r0, [r0]
   12940:	str	r0, [sp, #20]
   12944:	ldrb	r0, [fp, #-15]
   12948:	tst	r0, #1
   1294c:	beq	12958 <__assert_fail@plt+0x1940>
   12950:	movw	r0, #2
   12954:	bl	1100c <close@plt>
   12958:	ldrb	r0, [fp, #-14]
   1295c:	tst	r0, #1
   12960:	beq	1296c <__assert_fail@plt+0x1954>
   12964:	movw	r0, #1
   12968:	bl	1100c <close@plt>
   1296c:	ldrb	r0, [fp, #-13]
   12970:	tst	r0, #1
   12974:	beq	12980 <__assert_fail@plt+0x1968>
   12978:	movw	r0, #0
   1297c:	bl	1100c <close@plt>
   12980:	ldr	r0, [fp, #-12]
   12984:	movw	r1, #0
   12988:	cmp	r0, r1
   1298c:	bne	129a4 <__assert_fail@plt+0x198c>
   12990:	ldr	r0, [sp, #20]
   12994:	str	r0, [sp]
   12998:	bl	10f70 <__errno_location@plt>
   1299c:	ldr	r1, [sp]
   129a0:	str	r1, [r0]
   129a4:	ldr	r0, [fp, #-12]
   129a8:	mov	sp, fp
   129ac:	pop	{fp, pc}
   129b0:	push	{fp, lr}
   129b4:	mov	fp, sp
   129b8:	sub	sp, sp, #16
   129bc:	str	r0, [sp, #8]
   129c0:	movw	r0, #47306	; 0xb8ca
   129c4:	movt	r0, #1
   129c8:	movw	r1, #0
   129cc:	bl	10ed4 <open64@plt>
   129d0:	str	r0, [sp, #4]
   129d4:	ldr	r0, [sp, #4]
   129d8:	ldr	r1, [sp, #8]
   129dc:	cmp	r0, r1
   129e0:	beq	12a1c <__assert_fail@plt+0x1a04>
   129e4:	ldr	r0, [sp, #4]
   129e8:	movw	r1, #0
   129ec:	cmp	r1, r0
   129f0:	bgt	12a0c <__assert_fail@plt+0x19f4>
   129f4:	ldr	r0, [sp, #4]
   129f8:	bl	1100c <close@plt>
   129fc:	str	r0, [sp]
   12a00:	bl	10f70 <__errno_location@plt>
   12a04:	movw	r1, #9
   12a08:	str	r1, [r0]
   12a0c:	movw	r0, #0
   12a10:	and	r0, r0, #1
   12a14:	strb	r0, [fp, #-1]
   12a18:	b	12a28 <__assert_fail@plt+0x1a10>
   12a1c:	movw	r0, #1
   12a20:	and	r0, r0, #1
   12a24:	strb	r0, [fp, #-1]
   12a28:	ldrb	r0, [fp, #-1]
   12a2c:	and	r0, r0, #1
   12a30:	mov	sp, fp
   12a34:	pop	{fp, pc}
   12a38:	push	{fp, lr}
   12a3c:	mov	fp, sp
   12a40:	sub	sp, sp, #32
   12a44:	ldr	r1, [fp, #8]
   12a48:	str	r0, [fp, #-8]
   12a4c:	str	r3, [sp, #20]
   12a50:	str	r2, [sp, #16]
   12a54:	ldr	r0, [fp, #-8]
   12a58:	ldr	r0, [r0, #8]
   12a5c:	ldr	r2, [fp, #-8]
   12a60:	ldr	r2, [r2, #4]
   12a64:	cmp	r0, r2
   12a68:	bne	12b14 <__assert_fail@plt+0x1afc>
   12a6c:	ldr	r0, [fp, #-8]
   12a70:	ldr	r0, [r0, #20]
   12a74:	ldr	r1, [fp, #-8]
   12a78:	ldr	r1, [r1, #16]
   12a7c:	cmp	r0, r1
   12a80:	bne	12b14 <__assert_fail@plt+0x1afc>
   12a84:	ldr	r0, [fp, #-8]
   12a88:	ldr	r0, [r0, #36]	; 0x24
   12a8c:	movw	r1, #0
   12a90:	cmp	r0, r1
   12a94:	bne	12b14 <__assert_fail@plt+0x1afc>
   12a98:	ldr	r0, [fp, #-8]
   12a9c:	bl	10f94 <fileno@plt>
   12aa0:	ldr	r2, [sp, #16]
   12aa4:	ldr	r3, [sp, #20]
   12aa8:	ldr	r1, [fp, #8]
   12aac:	mov	ip, sp
   12ab0:	str	r1, [ip]
   12ab4:	bl	10e8c <lseek64@plt>
   12ab8:	str	r1, [sp, #12]
   12abc:	str	r0, [sp, #8]
   12ac0:	ldr	r0, [sp, #8]
   12ac4:	ldr	r1, [sp, #12]
   12ac8:	and	r0, r0, r1
   12acc:	cmn	r0, #1
   12ad0:	bne	12ae4 <__assert_fail@plt+0x1acc>
   12ad4:	b	12ad8 <__assert_fail@plt+0x1ac0>
   12ad8:	mvn	r0, #0
   12adc:	str	r0, [fp, #-4]
   12ae0:	b	12b34 <__assert_fail@plt+0x1b1c>
   12ae4:	ldr	r0, [fp, #-8]
   12ae8:	ldr	r1, [r0]
   12aec:	bic	r1, r1, #16
   12af0:	str	r1, [r0]
   12af4:	ldr	r0, [sp, #8]
   12af8:	ldr	r1, [sp, #12]
   12afc:	ldr	r2, [fp, #-8]
   12b00:	str	r1, [r2, #84]	; 0x54
   12b04:	str	r0, [r2, #80]	; 0x50
   12b08:	movw	r0, #0
   12b0c:	str	r0, [fp, #-4]
   12b10:	b	12b34 <__assert_fail@plt+0x1b1c>
   12b14:	ldr	r0, [fp, #-8]
   12b18:	ldr	r2, [sp, #16]
   12b1c:	ldr	r3, [sp, #20]
   12b20:	ldr	r1, [fp, #8]
   12b24:	mov	ip, sp
   12b28:	str	r1, [ip]
   12b2c:	bl	10fac <fseeko64@plt>
   12b30:	str	r0, [fp, #-4]
   12b34:	ldr	r0, [fp, #-4]
   12b38:	mov	sp, fp
   12b3c:	pop	{fp, pc}
   12b40:	push	{fp, lr}
   12b44:	mov	fp, sp
   12b48:	sub	sp, sp, #40	; 0x28
   12b4c:	ldr	ip, [fp, #12]
   12b50:	ldr	lr, [fp, #8]
   12b54:	str	r0, [fp, #-4]
   12b58:	str	r1, [fp, #-8]
   12b5c:	str	r2, [fp, #-12]
   12b60:	str	r3, [fp, #-16]
   12b64:	movw	r0, #49488	; 0xc150
   12b68:	movt	r0, #2
   12b6c:	ldr	r1, [r0]
   12b70:	str	r1, [sp, #16]
   12b74:	movw	r1, #0
   12b78:	str	r1, [r0]
   12b7c:	ldr	r0, [fp, #-4]
   12b80:	cmp	r0, #2
   12b84:	bne	12c38 <__assert_fail@plt+0x1c20>
   12b88:	ldr	r0, [fp, #-4]
   12b8c:	ldr	r1, [fp, #-8]
   12b90:	movw	r2, #47316	; 0xb8d4
   12b94:	movt	r2, #1
   12b98:	movw	r3, #47332	; 0xb8e4
   12b9c:	movt	r3, #1
   12ba0:	movw	ip, #0
   12ba4:	str	ip, [sp]
   12ba8:	bl	10f28 <getopt_long@plt>
   12bac:	str	r0, [sp, #20]
   12bb0:	cmn	r0, #1
   12bb4:	beq	12c38 <__assert_fail@plt+0x1c20>
   12bb8:	ldr	r0, [sp, #20]
   12bbc:	cmp	r0, #104	; 0x68
   12bc0:	str	r0, [sp, #8]
   12bc4:	beq	12bdc <__assert_fail@plt+0x1bc4>
   12bc8:	b	12bcc <__assert_fail@plt+0x1bb4>
   12bcc:	ldr	r0, [sp, #8]
   12bd0:	cmp	r0, #118	; 0x76
   12bd4:	beq	12bf8 <__assert_fail@plt+0x1be0>
   12bd8:	b	12c30 <__assert_fail@plt+0x1c18>
   12bdc:	ldr	r0, [fp, #12]
   12be0:	movw	r1, #0
   12be4:	str	r0, [sp, #4]
   12be8:	mov	r0, r1
   12bec:	ldr	r1, [sp, #4]
   12bf0:	blx	r1
   12bf4:	b	12c34 <__assert_fail@plt+0x1c1c>
   12bf8:	add	r0, fp, #16
   12bfc:	str	r0, [sp, #12]
   12c00:	movw	r0, #49484	; 0xc14c
   12c04:	movt	r0, #2
   12c08:	ldr	r0, [r0]
   12c0c:	ldr	r1, [fp, #-12]
   12c10:	ldr	r2, [fp, #-16]
   12c14:	ldr	r3, [fp, #8]
   12c18:	ldr	ip, [sp, #12]
   12c1c:	mov	lr, sp
   12c20:	str	ip, [lr]
   12c24:	bl	16014 <__assert_fail@plt+0x4ffc>
   12c28:	movw	r0, #0
   12c2c:	bl	10f40 <exit@plt>
   12c30:	b	12c34 <__assert_fail@plt+0x1c1c>
   12c34:	b	12c38 <__assert_fail@plt+0x1c20>
   12c38:	ldr	r0, [sp, #16]
   12c3c:	movw	r1, #49488	; 0xc150
   12c40:	movt	r1, #2
   12c44:	str	r0, [r1]
   12c48:	movw	r0, #49464	; 0xc138
   12c4c:	movt	r0, #2
   12c50:	movw	r1, #0
   12c54:	str	r1, [r0]
   12c58:	mov	sp, fp
   12c5c:	pop	{fp, pc}
   12c60:	push	{r4, sl, fp, lr}
   12c64:	add	fp, sp, #8
   12c68:	sub	sp, sp, #64	; 0x40
   12c6c:	ldr	ip, [fp, #16]
   12c70:	ldr	lr, [fp, #12]
   12c74:	ldr	r4, [fp, #8]
   12c78:	str	r0, [fp, #-12]
   12c7c:	str	r1, [fp, #-16]
   12c80:	str	r2, [fp, #-20]	; 0xffffffec
   12c84:	str	r3, [fp, #-24]	; 0xffffffe8
   12c88:	and	r0, lr, #1
   12c8c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12c90:	movw	r0, #49488	; 0xc150
   12c94:	movt	r0, #2
   12c98:	ldr	r1, [r0]
   12c9c:	str	r1, [sp, #36]	; 0x24
   12ca0:	movw	r1, #1
   12ca4:	str	r1, [r0]
   12ca8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12cac:	tst	r0, #1
   12cb0:	movw	r0, #47316	; 0xb8d4
   12cb4:	movt	r0, #1
   12cb8:	movw	r1, #46919	; 0xb747
   12cbc:	movt	r1, #1
   12cc0:	movne	r0, r1
   12cc4:	str	r0, [sp, #32]
   12cc8:	ldr	r0, [fp, #-12]
   12ccc:	ldr	r1, [fp, #-16]
   12cd0:	ldr	r2, [sp, #32]
   12cd4:	movw	r3, #47332	; 0xb8e4
   12cd8:	movt	r3, #1
   12cdc:	movw	lr, #0
   12ce0:	str	lr, [sp]
   12ce4:	str	ip, [sp, #24]
   12ce8:	str	r4, [sp, #20]
   12cec:	bl	10f28 <getopt_long@plt>
   12cf0:	str	r0, [fp, #-32]	; 0xffffffe0
   12cf4:	cmn	r0, #1
   12cf8:	beq	12d98 <__assert_fail@plt+0x1d80>
   12cfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d00:	cmp	r0, #104	; 0x68
   12d04:	str	r0, [sp, #16]
   12d08:	beq	12d20 <__assert_fail@plt+0x1d08>
   12d0c:	b	12d10 <__assert_fail@plt+0x1cf8>
   12d10:	ldr	r0, [sp, #16]
   12d14:	cmp	r0, #118	; 0x76
   12d18:	beq	12d3c <__assert_fail@plt+0x1d24>
   12d1c:	b	12d74 <__assert_fail@plt+0x1d5c>
   12d20:	ldr	r0, [fp, #16]
   12d24:	movw	r1, #0
   12d28:	str	r0, [sp, #12]
   12d2c:	mov	r0, r1
   12d30:	ldr	r1, [sp, #12]
   12d34:	blx	r1
   12d38:	b	12d94 <__assert_fail@plt+0x1d7c>
   12d3c:	add	r0, fp, #20
   12d40:	str	r0, [sp, #28]
   12d44:	movw	r0, #49484	; 0xc14c
   12d48:	movt	r0, #2
   12d4c:	ldr	r0, [r0]
   12d50:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d58:	ldr	r3, [fp, #8]
   12d5c:	ldr	ip, [sp, #28]
   12d60:	mov	lr, sp
   12d64:	str	ip, [lr]
   12d68:	bl	16014 <__assert_fail@plt+0x4ffc>
   12d6c:	movw	r0, #0
   12d70:	bl	10f40 <exit@plt>
   12d74:	ldr	r0, [fp, #16]
   12d78:	movw	r1, #49384	; 0xc0e8
   12d7c:	movt	r1, #2
   12d80:	ldr	r1, [r1]
   12d84:	str	r0, [sp, #8]
   12d88:	mov	r0, r1
   12d8c:	ldr	r1, [sp, #8]
   12d90:	blx	r1
   12d94:	b	12d98 <__assert_fail@plt+0x1d80>
   12d98:	ldr	r0, [sp, #36]	; 0x24
   12d9c:	movw	r1, #49488	; 0xc150
   12da0:	movt	r1, #2
   12da4:	str	r0, [r1]
   12da8:	sub	sp, fp, #8
   12dac:	pop	{r4, sl, fp, pc}
   12db0:	push	{fp, lr}
   12db4:	mov	fp, sp
   12db8:	sub	sp, sp, #24
   12dbc:	str	r0, [fp, #-4]
   12dc0:	ldr	r0, [fp, #-4]
   12dc4:	movw	r1, #0
   12dc8:	cmp	r0, r1
   12dcc:	bne	12df0 <__assert_fail@plt+0x1dd8>
   12dd0:	movw	r0, #49472	; 0xc140
   12dd4:	movt	r0, #2
   12dd8:	ldr	r1, [r0]
   12ddc:	movw	r0, #47380	; 0xb914
   12de0:	movt	r0, #1
   12de4:	bl	10fe8 <fputs@plt>
   12de8:	str	r0, [sp, #8]
   12dec:	bl	11000 <abort@plt>
   12df0:	ldr	r0, [fp, #-4]
   12df4:	movw	r1, #47	; 0x2f
   12df8:	bl	10fc4 <strrchr@plt>
   12dfc:	str	r0, [fp, #-8]
   12e00:	ldr	r0, [fp, #-8]
   12e04:	movw	r1, #0
   12e08:	cmp	r0, r1
   12e0c:	beq	12e20 <__assert_fail@plt+0x1e08>
   12e10:	ldr	r0, [fp, #-8]
   12e14:	add	r0, r0, #1
   12e18:	str	r0, [sp, #4]
   12e1c:	b	12e28 <__assert_fail@plt+0x1e10>
   12e20:	ldr	r0, [fp, #-4]
   12e24:	str	r0, [sp, #4]
   12e28:	ldr	r0, [sp, #4]
   12e2c:	str	r0, [sp, #12]
   12e30:	ldr	r0, [sp, #12]
   12e34:	ldr	r1, [fp, #-4]
   12e38:	sub	r0, r0, r1
   12e3c:	cmp	r0, #7
   12e40:	blt	12eac <__assert_fail@plt+0x1e94>
   12e44:	ldr	r0, [sp, #12]
   12e48:	mvn	r1, #6
   12e4c:	add	r0, r0, r1
   12e50:	movw	r1, #47436	; 0xb94c
   12e54:	movt	r1, #1
   12e58:	movw	r2, #7
   12e5c:	bl	10ff4 <strncmp@plt>
   12e60:	cmp	r0, #0
   12e64:	bne	12eac <__assert_fail@plt+0x1e94>
   12e68:	ldr	r0, [sp, #12]
   12e6c:	str	r0, [fp, #-4]
   12e70:	ldr	r0, [sp, #12]
   12e74:	movw	r1, #47444	; 0xb954
   12e78:	movt	r1, #1
   12e7c:	movw	r2, #3
   12e80:	bl	10ff4 <strncmp@plt>
   12e84:	cmp	r0, #0
   12e88:	bne	12ea8 <__assert_fail@plt+0x1e90>
   12e8c:	ldr	r0, [sp, #12]
   12e90:	add	r0, r0, #3
   12e94:	str	r0, [fp, #-4]
   12e98:	ldr	r0, [fp, #-4]
   12e9c:	movw	r1, #49456	; 0xc130
   12ea0:	movt	r1, #2
   12ea4:	str	r0, [r1]
   12ea8:	b	12eac <__assert_fail@plt+0x1e94>
   12eac:	ldr	r0, [fp, #-4]
   12eb0:	movw	r1, #49520	; 0xc170
   12eb4:	movt	r1, #2
   12eb8:	str	r0, [r1]
   12ebc:	ldr	r0, [fp, #-4]
   12ec0:	movw	r1, #49460	; 0xc134
   12ec4:	movt	r1, #2
   12ec8:	str	r0, [r1]
   12ecc:	mov	sp, fp
   12ed0:	pop	{fp, pc}
   12ed4:	push	{fp, lr}
   12ed8:	mov	fp, sp
   12edc:	sub	sp, sp, #24
   12ee0:	str	r0, [fp, #-4]
   12ee4:	bl	10f70 <__errno_location@plt>
   12ee8:	ldr	r0, [r0]
   12eec:	str	r0, [fp, #-8]
   12ef0:	ldr	r0, [fp, #-4]
   12ef4:	movw	r1, #0
   12ef8:	cmp	r0, r1
   12efc:	beq	12f0c <__assert_fail@plt+0x1ef4>
   12f00:	ldr	r0, [fp, #-4]
   12f04:	str	r0, [sp, #8]
   12f08:	b	12f1c <__assert_fail@plt+0x1f04>
   12f0c:	movw	r0, #49524	; 0xc174
   12f10:	movt	r0, #2
   12f14:	str	r0, [sp, #8]
   12f18:	b	12f1c <__assert_fail@plt+0x1f04>
   12f1c:	ldr	r0, [sp, #8]
   12f20:	movw	r1, #48	; 0x30
   12f24:	bl	18eac <__assert_fail@plt+0x7e94>
   12f28:	str	r0, [sp, #12]
   12f2c:	ldr	r0, [fp, #-8]
   12f30:	str	r0, [sp, #4]
   12f34:	bl	10f70 <__errno_location@plt>
   12f38:	ldr	r1, [sp, #4]
   12f3c:	str	r1, [r0]
   12f40:	ldr	r0, [sp, #12]
   12f44:	mov	sp, fp
   12f48:	pop	{fp, pc}
   12f4c:	sub	sp, sp, #8
   12f50:	str	r0, [sp, #4]
   12f54:	ldr	r0, [sp, #4]
   12f58:	movw	r1, #0
   12f5c:	cmp	r0, r1
   12f60:	beq	12f70 <__assert_fail@plt+0x1f58>
   12f64:	ldr	r0, [sp, #4]
   12f68:	str	r0, [sp]
   12f6c:	b	12f80 <__assert_fail@plt+0x1f68>
   12f70:	movw	r0, #49524	; 0xc174
   12f74:	movt	r0, #2
   12f78:	str	r0, [sp]
   12f7c:	b	12f80 <__assert_fail@plt+0x1f68>
   12f80:	ldr	r0, [sp]
   12f84:	ldr	r0, [r0]
   12f88:	add	sp, sp, #8
   12f8c:	bx	lr
   12f90:	sub	sp, sp, #16
   12f94:	str	r0, [sp, #12]
   12f98:	str	r1, [sp, #8]
   12f9c:	ldr	r0, [sp, #8]
   12fa0:	ldr	r1, [sp, #12]
   12fa4:	movw	r2, #0
   12fa8:	cmp	r1, r2
   12fac:	str	r0, [sp, #4]
   12fb0:	beq	12fc0 <__assert_fail@plt+0x1fa8>
   12fb4:	ldr	r0, [sp, #12]
   12fb8:	str	r0, [sp]
   12fbc:	b	12fd0 <__assert_fail@plt+0x1fb8>
   12fc0:	movw	r0, #49524	; 0xc174
   12fc4:	movt	r0, #2
   12fc8:	str	r0, [sp]
   12fcc:	b	12fd0 <__assert_fail@plt+0x1fb8>
   12fd0:	ldr	r0, [sp]
   12fd4:	ldr	r1, [sp, #4]
   12fd8:	str	r1, [r0]
   12fdc:	add	sp, sp, #16
   12fe0:	bx	lr
   12fe4:	sub	sp, sp, #32
   12fe8:	str	r0, [sp, #28]
   12fec:	strb	r1, [sp, #27]
   12ff0:	str	r2, [sp, #20]
   12ff4:	ldrb	r0, [sp, #27]
   12ff8:	strb	r0, [sp, #19]
   12ffc:	ldr	r0, [sp, #28]
   13000:	movw	r1, #0
   13004:	cmp	r0, r1
   13008:	beq	13018 <__assert_fail@plt+0x2000>
   1300c:	ldr	r0, [sp, #28]
   13010:	str	r0, [sp]
   13014:	b	13028 <__assert_fail@plt+0x2010>
   13018:	movw	r0, #49524	; 0xc174
   1301c:	movt	r0, #2
   13020:	str	r0, [sp]
   13024:	b	13028 <__assert_fail@plt+0x2010>
   13028:	ldr	r0, [sp]
   1302c:	add	r0, r0, #8
   13030:	ldrb	r1, [sp, #19]
   13034:	lsr	r1, r1, #5
   13038:	add	r0, r0, r1, lsl #2
   1303c:	str	r0, [sp, #12]
   13040:	ldrb	r0, [sp, #19]
   13044:	and	r0, r0, #31
   13048:	str	r0, [sp, #8]
   1304c:	ldr	r0, [sp, #12]
   13050:	ldr	r0, [r0]
   13054:	ldr	r1, [sp, #8]
   13058:	lsr	r0, r0, r1
   1305c:	and	r0, r0, #1
   13060:	str	r0, [sp, #4]
   13064:	ldr	r0, [sp, #20]
   13068:	and	r0, r0, #1
   1306c:	ldr	r1, [sp, #4]
   13070:	eor	r0, r0, r1
   13074:	ldr	r1, [sp, #8]
   13078:	lsl	r0, r0, r1
   1307c:	ldr	r1, [sp, #12]
   13080:	ldr	r2, [r1]
   13084:	eor	r0, r2, r0
   13088:	str	r0, [r1]
   1308c:	ldr	r0, [sp, #4]
   13090:	add	sp, sp, #32
   13094:	bx	lr
   13098:	sub	sp, sp, #12
   1309c:	str	r0, [sp, #8]
   130a0:	str	r1, [sp, #4]
   130a4:	ldr	r0, [sp, #8]
   130a8:	movw	r1, #0
   130ac:	cmp	r0, r1
   130b0:	bne	130c0 <__assert_fail@plt+0x20a8>
   130b4:	movw	r0, #49524	; 0xc174
   130b8:	movt	r0, #2
   130bc:	str	r0, [sp, #8]
   130c0:	ldr	r0, [sp, #8]
   130c4:	ldr	r0, [r0, #4]
   130c8:	str	r0, [sp]
   130cc:	ldr	r0, [sp, #4]
   130d0:	ldr	r1, [sp, #8]
   130d4:	str	r0, [r1, #4]
   130d8:	ldr	r0, [sp]
   130dc:	add	sp, sp, #12
   130e0:	bx	lr
   130e4:	push	{fp, lr}
   130e8:	mov	fp, sp
   130ec:	sub	sp, sp, #16
   130f0:	str	r0, [fp, #-4]
   130f4:	str	r1, [sp, #8]
   130f8:	str	r2, [sp, #4]
   130fc:	ldr	r0, [fp, #-4]
   13100:	movw	r1, #0
   13104:	cmp	r0, r1
   13108:	bne	13118 <__assert_fail@plt+0x2100>
   1310c:	movw	r0, #49524	; 0xc174
   13110:	movt	r0, #2
   13114:	str	r0, [fp, #-4]
   13118:	ldr	r0, [fp, #-4]
   1311c:	movw	r1, #10
   13120:	str	r1, [r0]
   13124:	ldr	r0, [sp, #8]
   13128:	movw	r1, #0
   1312c:	cmp	r0, r1
   13130:	beq	13144 <__assert_fail@plt+0x212c>
   13134:	ldr	r0, [sp, #4]
   13138:	movw	r1, #0
   1313c:	cmp	r0, r1
   13140:	bne	13148 <__assert_fail@plt+0x2130>
   13144:	bl	11000 <abort@plt>
   13148:	ldr	r0, [sp, #8]
   1314c:	ldr	r1, [fp, #-4]
   13150:	str	r0, [r1, #40]	; 0x28
   13154:	ldr	r0, [sp, #4]
   13158:	ldr	r1, [fp, #-4]
   1315c:	str	r0, [r1, #44]	; 0x2c
   13160:	mov	sp, fp
   13164:	pop	{fp, pc}
   13168:	push	{r4, r5, r6, sl, fp, lr}
   1316c:	add	fp, sp, #16
   13170:	sub	sp, sp, #56	; 0x38
   13174:	ldr	ip, [fp, #8]
   13178:	str	r0, [fp, #-20]	; 0xffffffec
   1317c:	str	r1, [fp, #-24]	; 0xffffffe8
   13180:	str	r2, [fp, #-28]	; 0xffffffe4
   13184:	str	r3, [fp, #-32]	; 0xffffffe0
   13188:	ldr	r0, [fp, #8]
   1318c:	movw	r1, #0
   13190:	cmp	r0, r1
   13194:	beq	131a4 <__assert_fail@plt+0x218c>
   13198:	ldr	r0, [fp, #8]
   1319c:	str	r0, [sp, #24]
   131a0:	b	131b4 <__assert_fail@plt+0x219c>
   131a4:	movw	r0, #49524	; 0xc174
   131a8:	movt	r0, #2
   131ac:	str	r0, [sp, #24]
   131b0:	b	131b4 <__assert_fail@plt+0x219c>
   131b4:	ldr	r0, [sp, #24]
   131b8:	str	r0, [sp, #36]	; 0x24
   131bc:	bl	10f70 <__errno_location@plt>
   131c0:	ldr	r0, [r0]
   131c4:	str	r0, [sp, #32]
   131c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   131cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   131d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   131d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   131d8:	ldr	ip, [sp, #36]	; 0x24
   131dc:	ldr	ip, [ip]
   131e0:	ldr	lr, [sp, #36]	; 0x24
   131e4:	ldr	lr, [lr, #4]
   131e8:	ldr	r4, [sp, #36]	; 0x24
   131ec:	add	r4, r4, #8
   131f0:	ldr	r5, [sp, #36]	; 0x24
   131f4:	ldr	r5, [r5, #40]	; 0x28
   131f8:	ldr	r6, [sp, #36]	; 0x24
   131fc:	ldr	r6, [r6, #44]	; 0x2c
   13200:	str	ip, [sp]
   13204:	str	lr, [sp, #4]
   13208:	str	r4, [sp, #8]
   1320c:	str	r5, [sp, #12]
   13210:	str	r6, [sp, #16]
   13214:	bl	1323c <__assert_fail@plt+0x2224>
   13218:	str	r0, [sp, #28]
   1321c:	ldr	r0, [sp, #32]
   13220:	str	r0, [sp, #20]
   13224:	bl	10f70 <__errno_location@plt>
   13228:	ldr	r1, [sp, #20]
   1322c:	str	r1, [r0]
   13230:	ldr	r0, [sp, #28]
   13234:	sub	sp, fp, #16
   13238:	pop	{r4, r5, r6, sl, fp, pc}
   1323c:	push	{r4, r5, r6, sl, fp, lr}
   13240:	add	fp, sp, #16
   13244:	sub	sp, sp, #160	; 0xa0
   13248:	ldr	ip, [fp, #24]
   1324c:	ldr	lr, [fp, #20]
   13250:	ldr	r4, [fp, #16]
   13254:	ldr	r5, [fp, #12]
   13258:	ldr	r6, [fp, #8]
   1325c:	str	r0, [fp, #-24]	; 0xffffffe8
   13260:	str	r1, [fp, #-28]	; 0xffffffe4
   13264:	str	r2, [fp, #-32]	; 0xffffffe0
   13268:	str	r3, [fp, #-36]	; 0xffffffdc
   1326c:	movw	r0, #0
   13270:	str	r0, [fp, #-44]	; 0xffffffd4
   13274:	str	r0, [fp, #-48]	; 0xffffffd0
   13278:	str	r0, [fp, #-52]	; 0xffffffcc
   1327c:	str	r0, [fp, #-56]	; 0xffffffc8
   13280:	movw	r0, #0
   13284:	strb	r0, [fp, #-57]	; 0xffffffc7
   13288:	str	ip, [sp, #72]	; 0x48
   1328c:	str	lr, [sp, #68]	; 0x44
   13290:	str	r4, [sp, #64]	; 0x40
   13294:	str	r5, [sp, #60]	; 0x3c
   13298:	str	r6, [sp, #56]	; 0x38
   1329c:	bl	10e98 <__ctype_get_mb_cur_max@plt>
   132a0:	cmp	r0, #1
   132a4:	movw	r0, #0
   132a8:	moveq	r0, #1
   132ac:	and	r0, r0, #1
   132b0:	strb	r0, [fp, #-58]	; 0xffffffc6
   132b4:	ldr	r0, [fp, #12]
   132b8:	and	r0, r0, #2
   132bc:	cmp	r0, #0
   132c0:	movw	r0, #0
   132c4:	movne	r0, #1
   132c8:	and	r0, r0, #1
   132cc:	strb	r0, [fp, #-59]	; 0xffffffc5
   132d0:	movw	r0, #0
   132d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   132d8:	strb	r0, [fp, #-61]	; 0xffffffc3
   132dc:	movw	r0, #1
   132e0:	strb	r0, [fp, #-62]	; 0xffffffc2
   132e4:	ldr	r0, [fp, #8]
   132e8:	cmp	r0, #10
   132ec:	str	r0, [sp, #52]	; 0x34
   132f0:	bhi	13518 <__assert_fail@plt+0x2500>
   132f4:	add	r0, pc, #8
   132f8:	ldr	r1, [sp, #52]	; 0x34
   132fc:	ldr	r0, [r0, r1, lsl #2]
   13300:	mov	pc, r0
   13304:	andeq	r3, r1, ip, lsl #10
   13308:	andeq	r3, r1, r8, lsl #9
   1330c:	andeq	r3, r1, r8, lsr #9
   13310:	andeq	r3, r1, r0, lsl #9
   13314:	muleq	r1, r0, r4
   13318:	andeq	r3, r1, r0, asr #6
   1331c:	andeq	r3, r1, r0, lsr r3
   13320:	andeq	r3, r1, r4, lsr #7
   13324:			; <UNDEFINED> instruction: 0x000133b8
   13328:			; <UNDEFINED> instruction: 0x000133b8
   1332c:			; <UNDEFINED> instruction: 0x000133b8
   13330:	movw	r0, #5
   13334:	str	r0, [fp, #8]
   13338:	movw	r0, #1
   1333c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13340:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13344:	tst	r0, #1
   13348:	bne	13384 <__assert_fail@plt+0x236c>
   1334c:	b	13350 <__assert_fail@plt+0x2338>
   13350:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13354:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13358:	cmp	r0, r1
   1335c:	bcs	13374 <__assert_fail@plt+0x235c>
   13360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13364:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13368:	add	r0, r0, r1
   1336c:	movw	r1, #34	; 0x22
   13370:	strb	r1, [r0]
   13374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13378:	add	r0, r0, #1
   1337c:	str	r0, [fp, #-44]	; 0xffffffd4
   13380:	b	13384 <__assert_fail@plt+0x236c>
   13384:	movw	r0, #1
   13388:	strb	r0, [fp, #-57]	; 0xffffffc7
   1338c:	movw	r0, #47524	; 0xb9a4
   13390:	movt	r0, #1
   13394:	str	r0, [fp, #-52]	; 0xffffffcc
   13398:	movw	r0, #1
   1339c:	str	r0, [fp, #-56]	; 0xffffffc8
   133a0:	b	1351c <__assert_fail@plt+0x2504>
   133a4:	movw	r0, #1
   133a8:	strb	r0, [fp, #-57]	; 0xffffffc7
   133ac:	movw	r0, #0
   133b0:	strb	r0, [fp, #-59]	; 0xffffffc5
   133b4:	b	1351c <__assert_fail@plt+0x2504>
   133b8:	ldr	r0, [fp, #8]
   133bc:	cmp	r0, #10
   133c0:	beq	133ec <__assert_fail@plt+0x23d4>
   133c4:	ldr	r1, [fp, #8]
   133c8:	movw	r0, #47526	; 0xb9a6
   133cc:	movt	r0, #1
   133d0:	bl	15430 <__assert_fail@plt+0x4418>
   133d4:	str	r0, [fp, #20]
   133d8:	ldr	r1, [fp, #8]
   133dc:	movw	r0, #47528	; 0xb9a8
   133e0:	movt	r0, #1
   133e4:	bl	15430 <__assert_fail@plt+0x4418>
   133e8:	str	r0, [fp, #24]
   133ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   133f0:	tst	r0, #1
   133f4:	bne	13460 <__assert_fail@plt+0x2448>
   133f8:	ldr	r0, [fp, #20]
   133fc:	str	r0, [fp, #-52]	; 0xffffffcc
   13400:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13404:	ldrsb	r0, [r0]
   13408:	cmp	r0, #0
   1340c:	beq	1345c <__assert_fail@plt+0x2444>
   13410:	b	13414 <__assert_fail@plt+0x23fc>
   13414:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13418:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1341c:	cmp	r0, r1
   13420:	bcs	1343c <__assert_fail@plt+0x2424>
   13424:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13428:	ldrb	r0, [r0]
   1342c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13430:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13434:	add	r1, r1, r2
   13438:	strb	r0, [r1]
   1343c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13440:	add	r0, r0, #1
   13444:	str	r0, [fp, #-44]	; 0xffffffd4
   13448:	b	1344c <__assert_fail@plt+0x2434>
   1344c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13450:	add	r0, r0, #1
   13454:	str	r0, [fp, #-52]	; 0xffffffcc
   13458:	b	13400 <__assert_fail@plt+0x23e8>
   1345c:	b	13460 <__assert_fail@plt+0x2448>
   13460:	movw	r0, #1
   13464:	strb	r0, [fp, #-57]	; 0xffffffc7
   13468:	ldr	r0, [fp, #24]
   1346c:	str	r0, [fp, #-52]	; 0xffffffcc
   13470:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13474:	bl	10f58 <strlen@plt>
   13478:	str	r0, [fp, #-56]	; 0xffffffc8
   1347c:	b	1351c <__assert_fail@plt+0x2504>
   13480:	movw	r0, #1
   13484:	strb	r0, [fp, #-57]	; 0xffffffc7
   13488:	movw	r0, #1
   1348c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13490:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13494:	tst	r0, #1
   13498:	bne	134a4 <__assert_fail@plt+0x248c>
   1349c:	movw	r0, #1
   134a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   134a4:	b	134a8 <__assert_fail@plt+0x2490>
   134a8:	movw	r0, #2
   134ac:	str	r0, [fp, #8]
   134b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134b4:	tst	r0, #1
   134b8:	bne	134f4 <__assert_fail@plt+0x24dc>
   134bc:	b	134c0 <__assert_fail@plt+0x24a8>
   134c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134c8:	cmp	r0, r1
   134cc:	bcs	134e4 <__assert_fail@plt+0x24cc>
   134d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134d8:	add	r0, r0, r1
   134dc:	movw	r1, #39	; 0x27
   134e0:	strb	r1, [r0]
   134e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134e8:	add	r0, r0, #1
   134ec:	str	r0, [fp, #-44]	; 0xffffffd4
   134f0:	b	134f4 <__assert_fail@plt+0x24dc>
   134f4:	movw	r0, #47528	; 0xb9a8
   134f8:	movt	r0, #1
   134fc:	str	r0, [fp, #-52]	; 0xffffffcc
   13500:	movw	r0, #1
   13504:	str	r0, [fp, #-56]	; 0xffffffc8
   13508:	b	1351c <__assert_fail@plt+0x2504>
   1350c:	movw	r0, #0
   13510:	strb	r0, [fp, #-59]	; 0xffffffc5
   13514:	b	1351c <__assert_fail@plt+0x2504>
   13518:	bl	11000 <abort@plt>
   1351c:	movw	r0, #0
   13520:	str	r0, [fp, #-40]	; 0xffffffd8
   13524:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13528:	cmn	r0, #1
   1352c:	bne	13558 <__assert_fail@plt+0x2540>
   13530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13534:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13538:	add	r0, r0, r1
   1353c:	ldrb	r0, [r0]
   13540:	cmp	r0, #0
   13544:	movw	r0, #0
   13548:	moveq	r0, #1
   1354c:	and	r0, r0, #1
   13550:	str	r0, [sp, #48]	; 0x30
   13554:	b	13574 <__assert_fail@plt+0x255c>
   13558:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1355c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13560:	cmp	r0, r1
   13564:	movw	r0, #0
   13568:	moveq	r0, #1
   1356c:	and	r0, r0, #1
   13570:	str	r0, [sp, #48]	; 0x30
   13574:	ldr	r0, [sp, #48]	; 0x30
   13578:	cmp	r0, #0
   1357c:	movw	r0, #0
   13580:	movne	r0, #1
   13584:	mvn	r1, #0
   13588:	eor	r0, r0, r1
   1358c:	tst	r0, #1
   13590:	beq	1477c <__assert_fail@plt+0x3764>
   13594:	movw	r0, #0
   13598:	strb	r0, [fp, #-65]	; 0xffffffbf
   1359c:	strb	r0, [fp, #-66]	; 0xffffffbe
   135a0:	strb	r0, [fp, #-67]	; 0xffffffbd
   135a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   135a8:	tst	r0, #1
   135ac:	beq	13658 <__assert_fail@plt+0x2640>
   135b0:	ldr	r0, [fp, #8]
   135b4:	cmp	r0, #2
   135b8:	beq	13658 <__assert_fail@plt+0x2640>
   135bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   135c0:	cmp	r0, #0
   135c4:	beq	13658 <__assert_fail@plt+0x2640>
   135c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   135cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   135d0:	add	r0, r0, r1
   135d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   135d8:	cmn	r1, #1
   135dc:	str	r0, [sp, #44]	; 0x2c
   135e0:	bne	13608 <__assert_fail@plt+0x25f0>
   135e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   135e8:	movw	r1, #1
   135ec:	cmp	r1, r0
   135f0:	bcs	13608 <__assert_fail@plt+0x25f0>
   135f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135f8:	bl	10f58 <strlen@plt>
   135fc:	str	r0, [fp, #-36]	; 0xffffffdc
   13600:	str	r0, [sp, #40]	; 0x28
   13604:	b	13610 <__assert_fail@plt+0x25f8>
   13608:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1360c:	str	r0, [sp, #40]	; 0x28
   13610:	ldr	r0, [sp, #40]	; 0x28
   13614:	ldr	r1, [sp, #44]	; 0x2c
   13618:	cmp	r1, r0
   1361c:	bhi	13658 <__assert_fail@plt+0x2640>
   13620:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13624:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13628:	add	r0, r0, r1
   1362c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13630:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13634:	bl	10e44 <memcmp@plt>
   13638:	cmp	r0, #0
   1363c:	bne	13658 <__assert_fail@plt+0x2640>
   13640:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13644:	tst	r0, #1
   13648:	beq	13650 <__assert_fail@plt+0x2638>
   1364c:	b	148fc <__assert_fail@plt+0x38e4>
   13650:	movw	r0, #1
   13654:	strb	r0, [fp, #-65]	; 0xffffffbf
   13658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1365c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13660:	ldrb	r0, [r0, r1]
   13664:	strb	r0, [fp, #-63]	; 0xffffffc1
   13668:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1366c:	mov	r1, r0
   13670:	cmp	r0, #126	; 0x7e
   13674:	str	r1, [sp, #36]	; 0x24
   13678:	bhi	13ee8 <__assert_fail@plt+0x2ed0>
   1367c:	add	r0, pc, #8
   13680:	ldr	r1, [sp, #36]	; 0x24
   13684:	ldr	r0, [r0, r1, lsl #2]
   13688:	mov	pc, r0
   1368c:	andeq	r3, r1, r8, lsl #17
   13690:	andeq	r3, r1, r8, ror #29
   13694:	andeq	r3, r1, r8, ror #29
   13698:	andeq	r3, r1, r8, ror #29
   1369c:	andeq	r3, r1, r8, ror #29
   136a0:	andeq	r3, r1, r8, ror #29
   136a4:	andeq	r3, r1, r8, ror #29
   136a8:	muleq	r1, r0, ip
   136ac:	muleq	r1, ip, ip
   136b0:	andeq	r3, r1, ip, asr #25
   136b4:			; <UNDEFINED> instruction: 0x00013cb4
   136b8:	ldrdeq	r3, [r1], -r8
   136bc:	andeq	r3, r1, r8, lsr #25
   136c0:	andeq	r3, r1, r0, asr #25
   136c4:	andeq	r3, r1, r8, ror #29
   136c8:	andeq	r3, r1, r8, ror #29
   136cc:	andeq	r3, r1, r8, ror #29
   136d0:	andeq	r3, r1, r8, ror #29
   136d4:	andeq	r3, r1, r8, ror #29
   136d8:	andeq	r3, r1, r8, ror #29
   136dc:	andeq	r3, r1, r8, ror #29
   136e0:	andeq	r3, r1, r8, ror #29
   136e4:	andeq	r3, r1, r8, ror #29
   136e8:	andeq	r3, r1, r8, ror #29
   136ec:	andeq	r3, r1, r8, ror #29
   136f0:	andeq	r3, r1, r8, ror #29
   136f4:	andeq	r3, r1, r8, ror #29
   136f8:	andeq	r3, r1, r8, ror #29
   136fc:	andeq	r3, r1, r8, ror #29
   13700:	andeq	r3, r1, r8, ror #29
   13704:	andeq	r3, r1, r8, ror #29
   13708:	andeq	r3, r1, r8, ror #29
   1370c:			; <UNDEFINED> instruction: 0x00013dbc
   13710:	andeq	r3, r1, r4, asr #27
   13714:	andeq	r3, r1, r4, asr #27
   13718:	andeq	r3, r1, r8, lsr #27
   1371c:	andeq	r3, r1, r4, asr #27
   13720:	ldrdeq	r3, [r1], -ip
   13724:	andeq	r3, r1, r4, asr #27
   13728:	andeq	r3, r1, r4, ror #27
   1372c:	andeq	r3, r1, r4, asr #27
   13730:	andeq	r3, r1, r4, asr #27
   13734:	andeq	r3, r1, r4, asr #27
   13738:	ldrdeq	r3, [r1], -ip
   1373c:	ldrdeq	r3, [r1], -ip
   13740:	ldrdeq	r3, [r1], -ip
   13744:	ldrdeq	r3, [r1], -ip
   13748:	ldrdeq	r3, [r1], -ip
   1374c:	ldrdeq	r3, [r1], -ip
   13750:	ldrdeq	r3, [r1], -ip
   13754:	ldrdeq	r3, [r1], -ip
   13758:	ldrdeq	r3, [r1], -ip
   1375c:	ldrdeq	r3, [r1], -ip
   13760:	ldrdeq	r3, [r1], -ip
   13764:	ldrdeq	r3, [r1], -ip
   13768:	ldrdeq	r3, [r1], -ip
   1376c:	ldrdeq	r3, [r1], -ip
   13770:	ldrdeq	r3, [r1], -ip
   13774:	ldrdeq	r3, [r1], -ip
   13778:	andeq	r3, r1, r4, asr #27
   1377c:	andeq	r3, r1, r4, asr #27
   13780:	andeq	r3, r1, r4, asr #27
   13784:	andeq	r3, r1, r4, asr #27
   13788:	muleq	r1, r4, sl
   1378c:	andeq	r3, r1, r8, ror #29
   13790:	ldrdeq	r3, [r1], -ip
   13794:	ldrdeq	r3, [r1], -ip
   13798:	ldrdeq	r3, [r1], -ip
   1379c:	ldrdeq	r3, [r1], -ip
   137a0:	ldrdeq	r3, [r1], -ip
   137a4:	ldrdeq	r3, [r1], -ip
   137a8:	ldrdeq	r3, [r1], -ip
   137ac:	ldrdeq	r3, [r1], -ip
   137b0:	ldrdeq	r3, [r1], -ip
   137b4:	ldrdeq	r3, [r1], -ip
   137b8:	ldrdeq	r3, [r1], -ip
   137bc:	ldrdeq	r3, [r1], -ip
   137c0:	ldrdeq	r3, [r1], -ip
   137c4:	ldrdeq	r3, [r1], -ip
   137c8:	ldrdeq	r3, [r1], -ip
   137cc:	ldrdeq	r3, [r1], -ip
   137d0:	ldrdeq	r3, [r1], -ip
   137d4:	ldrdeq	r3, [r1], -ip
   137d8:	ldrdeq	r3, [r1], -ip
   137dc:	ldrdeq	r3, [r1], -ip
   137e0:	ldrdeq	r3, [r1], -ip
   137e4:	ldrdeq	r3, [r1], -ip
   137e8:	ldrdeq	r3, [r1], -ip
   137ec:	ldrdeq	r3, [r1], -ip
   137f0:	ldrdeq	r3, [r1], -ip
   137f4:	ldrdeq	r3, [r1], -ip
   137f8:	andeq	r3, r1, r4, asr #27
   137fc:	andeq	r3, r1, r4, ror #25
   13800:	ldrdeq	r3, [r1], -ip
   13804:	andeq	r3, r1, r4, asr #27
   13808:	ldrdeq	r3, [r1], -ip
   1380c:	andeq	r3, r1, r4, asr #27
   13810:	ldrdeq	r3, [r1], -ip
   13814:	ldrdeq	r3, [r1], -ip
   13818:	ldrdeq	r3, [r1], -ip
   1381c:	ldrdeq	r3, [r1], -ip
   13820:	ldrdeq	r3, [r1], -ip
   13824:	ldrdeq	r3, [r1], -ip
   13828:	ldrdeq	r3, [r1], -ip
   1382c:	ldrdeq	r3, [r1], -ip
   13830:	ldrdeq	r3, [r1], -ip
   13834:	ldrdeq	r3, [r1], -ip
   13838:	ldrdeq	r3, [r1], -ip
   1383c:	ldrdeq	r3, [r1], -ip
   13840:	ldrdeq	r3, [r1], -ip
   13844:	ldrdeq	r3, [r1], -ip
   13848:	ldrdeq	r3, [r1], -ip
   1384c:	ldrdeq	r3, [r1], -ip
   13850:	ldrdeq	r3, [r1], -ip
   13854:	ldrdeq	r3, [r1], -ip
   13858:	ldrdeq	r3, [r1], -ip
   1385c:	ldrdeq	r3, [r1], -ip
   13860:	ldrdeq	r3, [r1], -ip
   13864:	ldrdeq	r3, [r1], -ip
   13868:	ldrdeq	r3, [r1], -ip
   1386c:	ldrdeq	r3, [r1], -ip
   13870:	ldrdeq	r3, [r1], -ip
   13874:	ldrdeq	r3, [r1], -ip
   13878:	andeq	r3, r1, r4, ror sp
   1387c:	andeq	r3, r1, r4, asr #27
   13880:	andeq	r3, r1, r4, ror sp
   13884:	andeq	r3, r1, r8, lsr #27
   13888:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1388c:	tst	r0, #1
   13890:	beq	13a78 <__assert_fail@plt+0x2a60>
   13894:	b	13898 <__assert_fail@plt+0x2880>
   13898:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1389c:	tst	r0, #1
   138a0:	beq	138a8 <__assert_fail@plt+0x2890>
   138a4:	b	148fc <__assert_fail@plt+0x38e4>
   138a8:	movw	r0, #1
   138ac:	strb	r0, [fp, #-66]	; 0xffffffbe
   138b0:	ldr	r0, [fp, #8]
   138b4:	cmp	r0, #2
   138b8:	bne	1396c <__assert_fail@plt+0x2954>
   138bc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   138c0:	tst	r0, #1
   138c4:	bne	1396c <__assert_fail@plt+0x2954>
   138c8:	b	138cc <__assert_fail@plt+0x28b4>
   138cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138d4:	cmp	r0, r1
   138d8:	bcs	138f0 <__assert_fail@plt+0x28d8>
   138dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138e4:	add	r0, r0, r1
   138e8:	movw	r1, #39	; 0x27
   138ec:	strb	r1, [r0]
   138f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138f4:	add	r0, r0, #1
   138f8:	str	r0, [fp, #-44]	; 0xffffffd4
   138fc:	b	13900 <__assert_fail@plt+0x28e8>
   13900:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13904:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13908:	cmp	r0, r1
   1390c:	bcs	13924 <__assert_fail@plt+0x290c>
   13910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13914:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13918:	add	r0, r0, r1
   1391c:	movw	r1, #36	; 0x24
   13920:	strb	r1, [r0]
   13924:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13928:	add	r0, r0, #1
   1392c:	str	r0, [fp, #-44]	; 0xffffffd4
   13930:	b	13934 <__assert_fail@plt+0x291c>
   13934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1393c:	cmp	r0, r1
   13940:	bcs	13958 <__assert_fail@plt+0x2940>
   13944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13948:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1394c:	add	r0, r0, r1
   13950:	movw	r1, #39	; 0x27
   13954:	strb	r1, [r0]
   13958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1395c:	add	r0, r0, #1
   13960:	str	r0, [fp, #-44]	; 0xffffffd4
   13964:	movw	r0, #1
   13968:	strb	r0, [fp, #-60]	; 0xffffffc4
   1396c:	b	13970 <__assert_fail@plt+0x2958>
   13970:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13978:	cmp	r0, r1
   1397c:	bcs	13994 <__assert_fail@plt+0x297c>
   13980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13984:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13988:	add	r0, r0, r1
   1398c:	movw	r1, #92	; 0x5c
   13990:	strb	r1, [r0]
   13994:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13998:	add	r0, r0, #1
   1399c:	str	r0, [fp, #-44]	; 0xffffffd4
   139a0:	b	139a4 <__assert_fail@plt+0x298c>
   139a4:	ldr	r0, [fp, #8]
   139a8:	cmp	r0, #2
   139ac:	beq	13a6c <__assert_fail@plt+0x2a54>
   139b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139b4:	add	r0, r0, #1
   139b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   139bc:	cmp	r0, r1
   139c0:	bcs	13a6c <__assert_fail@plt+0x2a54>
   139c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139cc:	add	r1, r1, #1
   139d0:	add	r0, r0, r1
   139d4:	ldrb	r0, [r0]
   139d8:	movw	r1, #48	; 0x30
   139dc:	cmp	r1, r0
   139e0:	bgt	13a6c <__assert_fail@plt+0x2a54>
   139e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139ec:	add	r1, r1, #1
   139f0:	add	r0, r0, r1
   139f4:	ldrb	r0, [r0]
   139f8:	cmp	r0, #57	; 0x39
   139fc:	bgt	13a6c <__assert_fail@plt+0x2a54>
   13a00:	b	13a04 <__assert_fail@plt+0x29ec>
   13a04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a0c:	cmp	r0, r1
   13a10:	bcs	13a28 <__assert_fail@plt+0x2a10>
   13a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a1c:	add	r0, r0, r1
   13a20:	movw	r1, #48	; 0x30
   13a24:	strb	r1, [r0]
   13a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a2c:	add	r0, r0, #1
   13a30:	str	r0, [fp, #-44]	; 0xffffffd4
   13a34:	b	13a38 <__assert_fail@plt+0x2a20>
   13a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a40:	cmp	r0, r1
   13a44:	bcs	13a5c <__assert_fail@plt+0x2a44>
   13a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a50:	add	r0, r0, r1
   13a54:	movw	r1, #48	; 0x30
   13a58:	strb	r1, [r0]
   13a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a60:	add	r0, r0, #1
   13a64:	str	r0, [fp, #-44]	; 0xffffffd4
   13a68:	b	13a6c <__assert_fail@plt+0x2a54>
   13a6c:	movw	r0, #48	; 0x30
   13a70:	strb	r0, [fp, #-63]	; 0xffffffc1
   13a74:	b	13a90 <__assert_fail@plt+0x2a78>
   13a78:	ldr	r0, [fp, #12]
   13a7c:	and	r0, r0, #1
   13a80:	cmp	r0, #0
   13a84:	beq	13a8c <__assert_fail@plt+0x2a74>
   13a88:	b	1476c <__assert_fail@plt+0x3754>
   13a8c:	b	13a90 <__assert_fail@plt+0x2a78>
   13a90:	b	14508 <__assert_fail@plt+0x34f0>
   13a94:	ldr	r0, [fp, #8]
   13a98:	cmp	r0, #2
   13a9c:	str	r0, [sp, #32]
   13aa0:	beq	13ab8 <__assert_fail@plt+0x2aa0>
   13aa4:	b	13aa8 <__assert_fail@plt+0x2a90>
   13aa8:	ldr	r0, [sp, #32]
   13aac:	cmp	r0, #5
   13ab0:	beq	13acc <__assert_fail@plt+0x2ab4>
   13ab4:	b	13c88 <__assert_fail@plt+0x2c70>
   13ab8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13abc:	tst	r0, #1
   13ac0:	beq	13ac8 <__assert_fail@plt+0x2ab0>
   13ac4:	b	148fc <__assert_fail@plt+0x38e4>
   13ac8:	b	13c8c <__assert_fail@plt+0x2c74>
   13acc:	ldr	r0, [fp, #12]
   13ad0:	and	r0, r0, #4
   13ad4:	cmp	r0, #0
   13ad8:	beq	13c84 <__assert_fail@plt+0x2c6c>
   13adc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ae0:	add	r0, r0, #2
   13ae4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ae8:	cmp	r0, r1
   13aec:	bcs	13c84 <__assert_fail@plt+0x2c6c>
   13af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13af4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13af8:	add	r1, r1, #1
   13afc:	add	r0, r0, r1
   13b00:	ldrb	r0, [r0]
   13b04:	cmp	r0, #63	; 0x3f
   13b08:	bne	13c84 <__assert_fail@plt+0x2c6c>
   13b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b14:	add	r0, r1, r0
   13b18:	ldrb	r0, [r0, #2]
   13b1c:	mov	r1, r0
   13b20:	cmp	r0, #33	; 0x21
   13b24:	str	r1, [sp, #28]
   13b28:	beq	13b78 <__assert_fail@plt+0x2b60>
   13b2c:	b	13b30 <__assert_fail@plt+0x2b18>
   13b30:	ldr	r0, [sp, #28]
   13b34:	sub	r1, r0, #39	; 0x27
   13b38:	cmp	r1, #3
   13b3c:	bcc	13b78 <__assert_fail@plt+0x2b60>
   13b40:	b	13b44 <__assert_fail@plt+0x2b2c>
   13b44:	ldr	r0, [sp, #28]
   13b48:	cmp	r0, #45	; 0x2d
   13b4c:	beq	13b78 <__assert_fail@plt+0x2b60>
   13b50:	b	13b54 <__assert_fail@plt+0x2b3c>
   13b54:	ldr	r0, [sp, #28]
   13b58:	cmp	r0, #47	; 0x2f
   13b5c:	beq	13b78 <__assert_fail@plt+0x2b60>
   13b60:	b	13b64 <__assert_fail@plt+0x2b4c>
   13b64:	ldr	r0, [sp, #28]
   13b68:	sub	r1, r0, #60	; 0x3c
   13b6c:	cmp	r1, #2
   13b70:	bhi	13c7c <__assert_fail@plt+0x2c64>
   13b74:	b	13b78 <__assert_fail@plt+0x2b60>
   13b78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13b7c:	tst	r0, #1
   13b80:	beq	13b88 <__assert_fail@plt+0x2b70>
   13b84:	b	148fc <__assert_fail@plt+0x38e4>
   13b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b90:	add	r1, r1, #2
   13b94:	add	r0, r0, r1
   13b98:	ldrb	r0, [r0]
   13b9c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ba4:	add	r0, r0, #2
   13ba8:	str	r0, [fp, #-40]	; 0xffffffd8
   13bac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bb4:	cmp	r0, r1
   13bb8:	bcs	13bd0 <__assert_fail@plt+0x2bb8>
   13bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13bc4:	add	r0, r0, r1
   13bc8:	movw	r1, #63	; 0x3f
   13bcc:	strb	r1, [r0]
   13bd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bd4:	add	r0, r0, #1
   13bd8:	str	r0, [fp, #-44]	; 0xffffffd4
   13bdc:	b	13be0 <__assert_fail@plt+0x2bc8>
   13be0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13be4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13be8:	cmp	r0, r1
   13bec:	bcs	13c04 <__assert_fail@plt+0x2bec>
   13bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13bf8:	add	r0, r0, r1
   13bfc:	movw	r1, #34	; 0x22
   13c00:	strb	r1, [r0]
   13c04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c08:	add	r0, r0, #1
   13c0c:	str	r0, [fp, #-44]	; 0xffffffd4
   13c10:	b	13c14 <__assert_fail@plt+0x2bfc>
   13c14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c1c:	cmp	r0, r1
   13c20:	bcs	13c38 <__assert_fail@plt+0x2c20>
   13c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c2c:	add	r0, r0, r1
   13c30:	movw	r1, #34	; 0x22
   13c34:	strb	r1, [r0]
   13c38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c3c:	add	r0, r0, #1
   13c40:	str	r0, [fp, #-44]	; 0xffffffd4
   13c44:	b	13c48 <__assert_fail@plt+0x2c30>
   13c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c50:	cmp	r0, r1
   13c54:	bcs	13c6c <__assert_fail@plt+0x2c54>
   13c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c60:	add	r0, r0, r1
   13c64:	movw	r1, #63	; 0x3f
   13c68:	strb	r1, [r0]
   13c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c70:	add	r0, r0, #1
   13c74:	str	r0, [fp, #-44]	; 0xffffffd4
   13c78:	b	13c80 <__assert_fail@plt+0x2c68>
   13c7c:	b	13c80 <__assert_fail@plt+0x2c68>
   13c80:	b	13c84 <__assert_fail@plt+0x2c6c>
   13c84:	b	13c8c <__assert_fail@plt+0x2c74>
   13c88:	b	13c8c <__assert_fail@plt+0x2c74>
   13c8c:	b	14508 <__assert_fail@plt+0x34f0>
   13c90:	movw	r0, #97	; 0x61
   13c94:	strb	r0, [fp, #-64]	; 0xffffffc0
   13c98:	b	13d58 <__assert_fail@plt+0x2d40>
   13c9c:	movw	r0, #98	; 0x62
   13ca0:	strb	r0, [fp, #-64]	; 0xffffffc0
   13ca4:	b	13d58 <__assert_fail@plt+0x2d40>
   13ca8:	movw	r0, #102	; 0x66
   13cac:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cb0:	b	13d58 <__assert_fail@plt+0x2d40>
   13cb4:	movw	r0, #110	; 0x6e
   13cb8:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cbc:	b	13d38 <__assert_fail@plt+0x2d20>
   13cc0:	movw	r0, #114	; 0x72
   13cc4:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cc8:	b	13d38 <__assert_fail@plt+0x2d20>
   13ccc:	movw	r0, #116	; 0x74
   13cd0:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cd4:	b	13d38 <__assert_fail@plt+0x2d20>
   13cd8:	movw	r0, #118	; 0x76
   13cdc:	strb	r0, [fp, #-64]	; 0xffffffc0
   13ce0:	b	13d58 <__assert_fail@plt+0x2d40>
   13ce4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13ce8:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cec:	ldr	r0, [fp, #8]
   13cf0:	cmp	r0, #2
   13cf4:	bne	13d0c <__assert_fail@plt+0x2cf4>
   13cf8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13cfc:	tst	r0, #1
   13d00:	beq	13d08 <__assert_fail@plt+0x2cf0>
   13d04:	b	148fc <__assert_fail@plt+0x38e4>
   13d08:	b	14690 <__assert_fail@plt+0x3678>
   13d0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13d10:	tst	r0, #1
   13d14:	beq	13d34 <__assert_fail@plt+0x2d1c>
   13d18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d1c:	tst	r0, #1
   13d20:	beq	13d34 <__assert_fail@plt+0x2d1c>
   13d24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13d28:	cmp	r0, #0
   13d2c:	beq	13d34 <__assert_fail@plt+0x2d1c>
   13d30:	b	14690 <__assert_fail@plt+0x3678>
   13d34:	b	13d38 <__assert_fail@plt+0x2d20>
   13d38:	ldr	r0, [fp, #8]
   13d3c:	cmp	r0, #2
   13d40:	bne	13d54 <__assert_fail@plt+0x2d3c>
   13d44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d48:	tst	r0, #1
   13d4c:	beq	13d54 <__assert_fail@plt+0x2d3c>
   13d50:	b	148fc <__assert_fail@plt+0x38e4>
   13d54:	b	13d58 <__assert_fail@plt+0x2d40>
   13d58:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13d5c:	tst	r0, #1
   13d60:	beq	13d70 <__assert_fail@plt+0x2d58>
   13d64:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13d68:	strb	r0, [fp, #-63]	; 0xffffffc1
   13d6c:	b	1457c <__assert_fail@plt+0x3564>
   13d70:	b	14508 <__assert_fail@plt+0x34f0>
   13d74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d78:	cmn	r0, #1
   13d7c:	bne	13d94 <__assert_fail@plt+0x2d7c>
   13d80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d84:	ldrb	r0, [r0, #1]
   13d88:	cmp	r0, #0
   13d8c:	beq	13da4 <__assert_fail@plt+0x2d8c>
   13d90:	b	13da0 <__assert_fail@plt+0x2d88>
   13d94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d98:	cmp	r0, #1
   13d9c:	beq	13da4 <__assert_fail@plt+0x2d8c>
   13da0:	b	14508 <__assert_fail@plt+0x34f0>
   13da4:	b	13da8 <__assert_fail@plt+0x2d90>
   13da8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13dac:	cmp	r0, #0
   13db0:	beq	13db8 <__assert_fail@plt+0x2da0>
   13db4:	b	14508 <__assert_fail@plt+0x34f0>
   13db8:	b	13dbc <__assert_fail@plt+0x2da4>
   13dbc:	movw	r0, #1
   13dc0:	strb	r0, [fp, #-67]	; 0xffffffbd
   13dc4:	ldr	r0, [fp, #8]
   13dc8:	cmp	r0, #2
   13dcc:	bne	13de0 <__assert_fail@plt+0x2dc8>
   13dd0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13dd4:	tst	r0, #1
   13dd8:	beq	13de0 <__assert_fail@plt+0x2dc8>
   13ddc:	b	148fc <__assert_fail@plt+0x38e4>
   13de0:	b	14508 <__assert_fail@plt+0x34f0>
   13de4:	movw	r0, #1
   13de8:	strb	r0, [fp, #-61]	; 0xffffffc3
   13dec:	strb	r0, [fp, #-67]	; 0xffffffbd
   13df0:	ldr	r0, [fp, #8]
   13df4:	cmp	r0, #2
   13df8:	bne	13ed8 <__assert_fail@plt+0x2ec0>
   13dfc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e00:	tst	r0, #1
   13e04:	beq	13e0c <__assert_fail@plt+0x2df4>
   13e08:	b	148fc <__assert_fail@plt+0x38e4>
   13e0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13e10:	cmp	r0, #0
   13e14:	beq	13e34 <__assert_fail@plt+0x2e1c>
   13e18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13e1c:	cmp	r0, #0
   13e20:	bne	13e34 <__assert_fail@plt+0x2e1c>
   13e24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13e28:	str	r0, [fp, #-48]	; 0xffffffd0
   13e2c:	movw	r0, #0
   13e30:	str	r0, [fp, #-28]	; 0xffffffe4
   13e34:	b	13e38 <__assert_fail@plt+0x2e20>
   13e38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e40:	cmp	r0, r1
   13e44:	bcs	13e5c <__assert_fail@plt+0x2e44>
   13e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e50:	add	r0, r0, r1
   13e54:	movw	r1, #39	; 0x27
   13e58:	strb	r1, [r0]
   13e5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e60:	add	r0, r0, #1
   13e64:	str	r0, [fp, #-44]	; 0xffffffd4
   13e68:	b	13e6c <__assert_fail@plt+0x2e54>
   13e6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e74:	cmp	r0, r1
   13e78:	bcs	13e90 <__assert_fail@plt+0x2e78>
   13e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e84:	add	r0, r0, r1
   13e88:	movw	r1, #92	; 0x5c
   13e8c:	strb	r1, [r0]
   13e90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e94:	add	r0, r0, #1
   13e98:	str	r0, [fp, #-44]	; 0xffffffd4
   13e9c:	b	13ea0 <__assert_fail@plt+0x2e88>
   13ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ea8:	cmp	r0, r1
   13eac:	bcs	13ec4 <__assert_fail@plt+0x2eac>
   13eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13eb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13eb8:	add	r0, r0, r1
   13ebc:	movw	r1, #39	; 0x27
   13ec0:	strb	r1, [r0]
   13ec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ec8:	add	r0, r0, #1
   13ecc:	str	r0, [fp, #-44]	; 0xffffffd4
   13ed0:	movw	r0, #0
   13ed4:	strb	r0, [fp, #-60]	; 0xffffffc4
   13ed8:	b	14508 <__assert_fail@plt+0x34f0>
   13edc:	movw	r0, #1
   13ee0:	strb	r0, [fp, #-67]	; 0xffffffbd
   13ee4:	b	14508 <__assert_fail@plt+0x34f0>
   13ee8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13eec:	tst	r0, #1
   13ef0:	beq	13f30 <__assert_fail@plt+0x2f18>
   13ef4:	mov	r0, #1
   13ef8:	str	r0, [fp, #-72]	; 0xffffffb8
   13efc:	bl	10f34 <__ctype_b_loc@plt>
   13f00:	ldr	r0, [r0]
   13f04:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13f08:	mov	r2, r1
   13f0c:	add	r0, r0, r1, lsl #1
   13f10:	ldrh	r0, [r0]
   13f14:	and	r0, r0, #16384	; 0x4000
   13f18:	cmp	r0, #0
   13f1c:	movw	r0, #0
   13f20:	movne	r0, #1
   13f24:	and	r0, r0, #1
   13f28:	strb	r0, [fp, #-73]	; 0xffffffb7
   13f2c:	b	141bc <__assert_fail@plt+0x31a4>
   13f30:	sub	r0, fp, #84	; 0x54
   13f34:	movw	r1, #0
   13f38:	and	r1, r1, #255	; 0xff
   13f3c:	movw	r2, #8
   13f40:	bl	10f88 <memset@plt>
   13f44:	movw	r0, #0
   13f48:	str	r0, [fp, #-72]	; 0xffffffb8
   13f4c:	movw	r0, #1
   13f50:	strb	r0, [fp, #-73]	; 0xffffffb7
   13f54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f58:	cmn	r0, #1
   13f5c:	bne	13f6c <__assert_fail@plt+0x2f54>
   13f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f64:	bl	10f58 <strlen@plt>
   13f68:	str	r0, [fp, #-36]	; 0xffffffdc
   13f6c:	b	13f70 <__assert_fail@plt+0x2f58>
   13f70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f78:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13f7c:	add	r1, r1, r2
   13f80:	add	r1, r0, r1
   13f84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13f8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13f90:	add	r2, r2, r3
   13f94:	sub	r2, r0, r2
   13f98:	add	r0, sp, #88	; 0x58
   13f9c:	sub	r3, fp, #84	; 0x54
   13fa0:	bl	195a4 <__assert_fail@plt+0x858c>
   13fa4:	str	r0, [sp, #84]	; 0x54
   13fa8:	ldr	r0, [sp, #84]	; 0x54
   13fac:	cmp	r0, #0
   13fb0:	bne	13fb8 <__assert_fail@plt+0x2fa0>
   13fb4:	b	141b8 <__assert_fail@plt+0x31a0>
   13fb8:	ldr	r0, [sp, #84]	; 0x54
   13fbc:	cmn	r0, #1
   13fc0:	bne	13fd0 <__assert_fail@plt+0x2fb8>
   13fc4:	movw	r0, #0
   13fc8:	strb	r0, [fp, #-73]	; 0xffffffb7
   13fcc:	b	141b8 <__assert_fail@plt+0x31a0>
   13fd0:	ldr	r0, [sp, #84]	; 0x54
   13fd4:	cmn	r0, #2
   13fd8:	bne	1404c <__assert_fail@plt+0x3034>
   13fdc:	movw	r0, #0
   13fe0:	strb	r0, [fp, #-73]	; 0xffffffb7
   13fe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13fe8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13fec:	add	r0, r0, r1
   13ff0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ff4:	cmp	r0, r1
   13ff8:	movw	r0, #0
   13ffc:	str	r0, [sp, #24]
   14000:	bcs	1402c <__assert_fail@plt+0x3014>
   14004:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14008:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1400c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14010:	add	r1, r1, r2
   14014:	add	r0, r0, r1
   14018:	ldrb	r0, [r0]
   1401c:	cmp	r0, #0
   14020:	movw	r0, #0
   14024:	movne	r0, #1
   14028:	str	r0, [sp, #24]
   1402c:	ldr	r0, [sp, #24]
   14030:	tst	r0, #1
   14034:	beq	14048 <__assert_fail@plt+0x3030>
   14038:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1403c:	add	r0, r0, #1
   14040:	str	r0, [fp, #-72]	; 0xffffffb8
   14044:	b	13fe4 <__assert_fail@plt+0x2fcc>
   14048:	b	141b8 <__assert_fail@plt+0x31a0>
   1404c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14050:	tst	r0, #1
   14054:	beq	14160 <__assert_fail@plt+0x3148>
   14058:	ldr	r0, [fp, #8]
   1405c:	cmp	r0, #2
   14060:	bne	14160 <__assert_fail@plt+0x3148>
   14064:	movw	r0, #1
   14068:	str	r0, [sp, #80]	; 0x50
   1406c:	ldr	r0, [sp, #80]	; 0x50
   14070:	ldr	r1, [sp, #84]	; 0x54
   14074:	cmp	r0, r1
   14078:	bcs	1415c <__assert_fail@plt+0x3144>
   1407c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14080:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14084:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14088:	add	r1, r1, r2
   1408c:	ldr	r2, [sp, #80]	; 0x50
   14090:	add	r1, r1, r2
   14094:	ldrb	r0, [r0, r1]
   14098:	sub	r0, r0, #91	; 0x5b
   1409c:	cmp	r0, #33	; 0x21
   140a0:	str	r0, [sp, #20]
   140a4:	bhi	14144 <__assert_fail@plt+0x312c>
   140a8:	add	r0, pc, #8
   140ac:	ldr	r1, [sp, #20]
   140b0:	ldr	r0, [r0, r1, lsl #2]
   140b4:	mov	pc, r0
   140b8:	andeq	r4, r1, r0, asr #2
   140bc:	andeq	r4, r1, r0, asr #2
   140c0:	andeq	r4, r1, r4, asr #2
   140c4:	andeq	r4, r1, r0, asr #2
   140c8:	andeq	r4, r1, r4, asr #2
   140cc:	andeq	r4, r1, r0, asr #2
   140d0:	andeq	r4, r1, r4, asr #2
   140d4:	andeq	r4, r1, r4, asr #2
   140d8:	andeq	r4, r1, r4, asr #2
   140dc:	andeq	r4, r1, r4, asr #2
   140e0:	andeq	r4, r1, r4, asr #2
   140e4:	andeq	r4, r1, r4, asr #2
   140e8:	andeq	r4, r1, r4, asr #2
   140ec:	andeq	r4, r1, r4, asr #2
   140f0:	andeq	r4, r1, r4, asr #2
   140f4:	andeq	r4, r1, r4, asr #2
   140f8:	andeq	r4, r1, r4, asr #2
   140fc:	andeq	r4, r1, r4, asr #2
   14100:	andeq	r4, r1, r4, asr #2
   14104:	andeq	r4, r1, r4, asr #2
   14108:	andeq	r4, r1, r4, asr #2
   1410c:	andeq	r4, r1, r4, asr #2
   14110:	andeq	r4, r1, r4, asr #2
   14114:	andeq	r4, r1, r4, asr #2
   14118:	andeq	r4, r1, r4, asr #2
   1411c:	andeq	r4, r1, r4, asr #2
   14120:	andeq	r4, r1, r4, asr #2
   14124:	andeq	r4, r1, r4, asr #2
   14128:	andeq	r4, r1, r4, asr #2
   1412c:	andeq	r4, r1, r4, asr #2
   14130:	andeq	r4, r1, r4, asr #2
   14134:	andeq	r4, r1, r4, asr #2
   14138:	andeq	r4, r1, r4, asr #2
   1413c:	andeq	r4, r1, r0, asr #2
   14140:	b	148fc <__assert_fail@plt+0x38e4>
   14144:	b	14148 <__assert_fail@plt+0x3130>
   14148:	b	1414c <__assert_fail@plt+0x3134>
   1414c:	ldr	r0, [sp, #80]	; 0x50
   14150:	add	r0, r0, #1
   14154:	str	r0, [sp, #80]	; 0x50
   14158:	b	1406c <__assert_fail@plt+0x3054>
   1415c:	b	14160 <__assert_fail@plt+0x3148>
   14160:	ldr	r0, [sp, #88]	; 0x58
   14164:	bl	10e80 <iswprint@plt>
   14168:	cmp	r0, #0
   1416c:	bne	14178 <__assert_fail@plt+0x3160>
   14170:	movw	r0, #0
   14174:	strb	r0, [fp, #-73]	; 0xffffffb7
   14178:	ldr	r0, [sp, #84]	; 0x54
   1417c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14180:	add	r0, r1, r0
   14184:	str	r0, [fp, #-72]	; 0xffffffb8
   14188:	b	1418c <__assert_fail@plt+0x3174>
   1418c:	b	14190 <__assert_fail@plt+0x3178>
   14190:	b	14194 <__assert_fail@plt+0x317c>
   14194:	sub	r0, fp, #84	; 0x54
   14198:	bl	10e38 <mbsinit@plt>
   1419c:	cmp	r0, #0
   141a0:	movw	r0, #0
   141a4:	movne	r0, #1
   141a8:	mvn	r1, #0
   141ac:	eor	r0, r0, r1
   141b0:	tst	r0, #1
   141b4:	bne	13f70 <__assert_fail@plt+0x2f58>
   141b8:	b	141bc <__assert_fail@plt+0x31a4>
   141bc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   141c0:	and	r0, r0, #1
   141c4:	strb	r0, [fp, #-67]	; 0xffffffbd
   141c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   141cc:	movw	r1, #1
   141d0:	cmp	r1, r0
   141d4:	bcc	141f0 <__assert_fail@plt+0x31d8>
   141d8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   141dc:	tst	r0, #1
   141e0:	beq	14504 <__assert_fail@plt+0x34ec>
   141e4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   141e8:	tst	r0, #1
   141ec:	bne	14504 <__assert_fail@plt+0x34ec>
   141f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   141f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   141f8:	add	r0, r0, r1
   141fc:	str	r0, [sp, #76]	; 0x4c
   14200:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14204:	tst	r0, #1
   14208:	beq	143b8 <__assert_fail@plt+0x33a0>
   1420c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14210:	tst	r0, #1
   14214:	bne	143b8 <__assert_fail@plt+0x33a0>
   14218:	b	1421c <__assert_fail@plt+0x3204>
   1421c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14220:	tst	r0, #1
   14224:	beq	1422c <__assert_fail@plt+0x3214>
   14228:	b	148fc <__assert_fail@plt+0x38e4>
   1422c:	movw	r0, #1
   14230:	strb	r0, [fp, #-66]	; 0xffffffbe
   14234:	ldr	r0, [fp, #8]
   14238:	cmp	r0, #2
   1423c:	bne	142f0 <__assert_fail@plt+0x32d8>
   14240:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14244:	tst	r0, #1
   14248:	bne	142f0 <__assert_fail@plt+0x32d8>
   1424c:	b	14250 <__assert_fail@plt+0x3238>
   14250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14254:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14258:	cmp	r0, r1
   1425c:	bcs	14274 <__assert_fail@plt+0x325c>
   14260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14264:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14268:	add	r0, r0, r1
   1426c:	movw	r1, #39	; 0x27
   14270:	strb	r1, [r0]
   14274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14278:	add	r0, r0, #1
   1427c:	str	r0, [fp, #-44]	; 0xffffffd4
   14280:	b	14284 <__assert_fail@plt+0x326c>
   14284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14288:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1428c:	cmp	r0, r1
   14290:	bcs	142a8 <__assert_fail@plt+0x3290>
   14294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14298:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1429c:	add	r0, r0, r1
   142a0:	movw	r1, #36	; 0x24
   142a4:	strb	r1, [r0]
   142a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142ac:	add	r0, r0, #1
   142b0:	str	r0, [fp, #-44]	; 0xffffffd4
   142b4:	b	142b8 <__assert_fail@plt+0x32a0>
   142b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142c0:	cmp	r0, r1
   142c4:	bcs	142dc <__assert_fail@plt+0x32c4>
   142c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142d0:	add	r0, r0, r1
   142d4:	movw	r1, #39	; 0x27
   142d8:	strb	r1, [r0]
   142dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142e0:	add	r0, r0, #1
   142e4:	str	r0, [fp, #-44]	; 0xffffffd4
   142e8:	movw	r0, #1
   142ec:	strb	r0, [fp, #-60]	; 0xffffffc4
   142f0:	b	142f4 <__assert_fail@plt+0x32dc>
   142f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142fc:	cmp	r0, r1
   14300:	bcs	14318 <__assert_fail@plt+0x3300>
   14304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14308:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1430c:	add	r0, r0, r1
   14310:	movw	r1, #92	; 0x5c
   14314:	strb	r1, [r0]
   14318:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1431c:	add	r0, r0, #1
   14320:	str	r0, [fp, #-44]	; 0xffffffd4
   14324:	b	14328 <__assert_fail@plt+0x3310>
   14328:	b	1432c <__assert_fail@plt+0x3314>
   1432c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14330:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14334:	cmp	r0, r1
   14338:	bcs	14358 <__assert_fail@plt+0x3340>
   1433c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14340:	asr	r0, r0, #6
   14344:	add	r0, r0, #48	; 0x30
   14348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1434c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14350:	add	r1, r1, r2
   14354:	strb	r0, [r1]
   14358:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1435c:	add	r0, r0, #1
   14360:	str	r0, [fp, #-44]	; 0xffffffd4
   14364:	b	14368 <__assert_fail@plt+0x3350>
   14368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1436c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14370:	cmp	r0, r1
   14374:	bcs	14398 <__assert_fail@plt+0x3380>
   14378:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1437c:	asr	r0, r0, #3
   14380:	and	r0, r0, #7
   14384:	add	r0, r0, #48	; 0x30
   14388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1438c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14390:	add	r1, r1, r2
   14394:	strb	r0, [r1]
   14398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1439c:	add	r0, r0, #1
   143a0:	str	r0, [fp, #-44]	; 0xffffffd4
   143a4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   143a8:	and	r0, r0, #7
   143ac:	add	r0, r0, #48	; 0x30
   143b0:	strb	r0, [fp, #-63]	; 0xffffffc1
   143b4:	b	14404 <__assert_fail@plt+0x33ec>
   143b8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   143bc:	tst	r0, #1
   143c0:	beq	14400 <__assert_fail@plt+0x33e8>
   143c4:	b	143c8 <__assert_fail@plt+0x33b0>
   143c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143d0:	cmp	r0, r1
   143d4:	bcs	143ec <__assert_fail@plt+0x33d4>
   143d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143e0:	add	r0, r0, r1
   143e4:	movw	r1, #92	; 0x5c
   143e8:	strb	r1, [r0]
   143ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143f0:	add	r0, r0, #1
   143f4:	str	r0, [fp, #-44]	; 0xffffffd4
   143f8:	movw	r0, #0
   143fc:	strb	r0, [fp, #-65]	; 0xffffffbf
   14400:	b	14404 <__assert_fail@plt+0x33ec>
   14404:	ldr	r0, [sp, #76]	; 0x4c
   14408:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1440c:	add	r1, r1, #1
   14410:	cmp	r0, r1
   14414:	bhi	1441c <__assert_fail@plt+0x3404>
   14418:	b	14500 <__assert_fail@plt+0x34e8>
   1441c:	b	14420 <__assert_fail@plt+0x3408>
   14420:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14424:	tst	r0, #1
   14428:	beq	144a8 <__assert_fail@plt+0x3490>
   1442c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14430:	tst	r0, #1
   14434:	bne	144a8 <__assert_fail@plt+0x3490>
   14438:	b	1443c <__assert_fail@plt+0x3424>
   1443c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14440:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14444:	cmp	r0, r1
   14448:	bcs	14460 <__assert_fail@plt+0x3448>
   1444c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14450:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14454:	add	r0, r0, r1
   14458:	movw	r1, #39	; 0x27
   1445c:	strb	r1, [r0]
   14460:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14464:	add	r0, r0, #1
   14468:	str	r0, [fp, #-44]	; 0xffffffd4
   1446c:	b	14470 <__assert_fail@plt+0x3458>
   14470:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14474:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14478:	cmp	r0, r1
   1447c:	bcs	14494 <__assert_fail@plt+0x347c>
   14480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14484:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14488:	add	r0, r0, r1
   1448c:	movw	r1, #39	; 0x27
   14490:	strb	r1, [r0]
   14494:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14498:	add	r0, r0, #1
   1449c:	str	r0, [fp, #-44]	; 0xffffffd4
   144a0:	movw	r0, #0
   144a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   144a8:	b	144ac <__assert_fail@plt+0x3494>
   144ac:	b	144b0 <__assert_fail@plt+0x3498>
   144b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144b8:	cmp	r0, r1
   144bc:	bcs	144d4 <__assert_fail@plt+0x34bc>
   144c0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   144c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   144c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   144cc:	add	r1, r1, r2
   144d0:	strb	r0, [r1]
   144d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144d8:	add	r0, r0, #1
   144dc:	str	r0, [fp, #-44]	; 0xffffffd4
   144e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   144e8:	add	r1, r1, #1
   144ec:	str	r1, [fp, #-40]	; 0xffffffd8
   144f0:	add	r0, r0, r1
   144f4:	ldrb	r0, [r0]
   144f8:	strb	r0, [fp, #-63]	; 0xffffffc1
   144fc:	b	14200 <__assert_fail@plt+0x31e8>
   14500:	b	14690 <__assert_fail@plt+0x3678>
   14504:	b	14508 <__assert_fail@plt+0x34f0>
   14508:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1450c:	tst	r0, #1
   14510:	beq	14520 <__assert_fail@plt+0x3508>
   14514:	ldr	r0, [fp, #8]
   14518:	cmp	r0, #2
   1451c:	bne	1452c <__assert_fail@plt+0x3514>
   14520:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14524:	tst	r0, #1
   14528:	beq	14568 <__assert_fail@plt+0x3550>
   1452c:	ldr	r0, [fp, #16]
   14530:	movw	r1, #0
   14534:	cmp	r0, r1
   14538:	beq	14568 <__assert_fail@plt+0x3550>
   1453c:	ldr	r0, [fp, #16]
   14540:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14544:	lsr	r1, r1, #5
   14548:	add	r0, r0, r1, lsl #2
   1454c:	ldr	r0, [r0]
   14550:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14554:	and	r1, r1, #31
   14558:	lsr	r0, r0, r1
   1455c:	and	r0, r0, #1
   14560:	cmp	r0, #0
   14564:	bne	14578 <__assert_fail@plt+0x3560>
   14568:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1456c:	tst	r0, #1
   14570:	bne	14578 <__assert_fail@plt+0x3560>
   14574:	b	14690 <__assert_fail@plt+0x3678>
   14578:	b	1457c <__assert_fail@plt+0x3564>
   1457c:	b	14580 <__assert_fail@plt+0x3568>
   14580:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14584:	tst	r0, #1
   14588:	beq	14590 <__assert_fail@plt+0x3578>
   1458c:	b	148fc <__assert_fail@plt+0x38e4>
   14590:	movw	r0, #1
   14594:	strb	r0, [fp, #-66]	; 0xffffffbe
   14598:	ldr	r0, [fp, #8]
   1459c:	cmp	r0, #2
   145a0:	bne	14654 <__assert_fail@plt+0x363c>
   145a4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   145a8:	tst	r0, #1
   145ac:	bne	14654 <__assert_fail@plt+0x363c>
   145b0:	b	145b4 <__assert_fail@plt+0x359c>
   145b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145bc:	cmp	r0, r1
   145c0:	bcs	145d8 <__assert_fail@plt+0x35c0>
   145c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145cc:	add	r0, r0, r1
   145d0:	movw	r1, #39	; 0x27
   145d4:	strb	r1, [r0]
   145d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145dc:	add	r0, r0, #1
   145e0:	str	r0, [fp, #-44]	; 0xffffffd4
   145e4:	b	145e8 <__assert_fail@plt+0x35d0>
   145e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145f0:	cmp	r0, r1
   145f4:	bcs	1460c <__assert_fail@plt+0x35f4>
   145f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14600:	add	r0, r0, r1
   14604:	movw	r1, #36	; 0x24
   14608:	strb	r1, [r0]
   1460c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14610:	add	r0, r0, #1
   14614:	str	r0, [fp, #-44]	; 0xffffffd4
   14618:	b	1461c <__assert_fail@plt+0x3604>
   1461c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14620:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14624:	cmp	r0, r1
   14628:	bcs	14640 <__assert_fail@plt+0x3628>
   1462c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14630:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14634:	add	r0, r0, r1
   14638:	movw	r1, #39	; 0x27
   1463c:	strb	r1, [r0]
   14640:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14644:	add	r0, r0, #1
   14648:	str	r0, [fp, #-44]	; 0xffffffd4
   1464c:	movw	r0, #1
   14650:	strb	r0, [fp, #-60]	; 0xffffffc4
   14654:	b	14658 <__assert_fail@plt+0x3640>
   14658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1465c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14660:	cmp	r0, r1
   14664:	bcs	1467c <__assert_fail@plt+0x3664>
   14668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1466c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14670:	add	r0, r0, r1
   14674:	movw	r1, #92	; 0x5c
   14678:	strb	r1, [r0]
   1467c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14680:	add	r0, r0, #1
   14684:	str	r0, [fp, #-44]	; 0xffffffd4
   14688:	b	1468c <__assert_fail@plt+0x3674>
   1468c:	b	14690 <__assert_fail@plt+0x3678>
   14690:	b	14694 <__assert_fail@plt+0x367c>
   14694:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14698:	tst	r0, #1
   1469c:	beq	1471c <__assert_fail@plt+0x3704>
   146a0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   146a4:	tst	r0, #1
   146a8:	bne	1471c <__assert_fail@plt+0x3704>
   146ac:	b	146b0 <__assert_fail@plt+0x3698>
   146b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146b8:	cmp	r0, r1
   146bc:	bcs	146d4 <__assert_fail@plt+0x36bc>
   146c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146c8:	add	r0, r0, r1
   146cc:	movw	r1, #39	; 0x27
   146d0:	strb	r1, [r0]
   146d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146d8:	add	r0, r0, #1
   146dc:	str	r0, [fp, #-44]	; 0xffffffd4
   146e0:	b	146e4 <__assert_fail@plt+0x36cc>
   146e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146ec:	cmp	r0, r1
   146f0:	bcs	14708 <__assert_fail@plt+0x36f0>
   146f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146fc:	add	r0, r0, r1
   14700:	movw	r1, #39	; 0x27
   14704:	strb	r1, [r0]
   14708:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1470c:	add	r0, r0, #1
   14710:	str	r0, [fp, #-44]	; 0xffffffd4
   14714:	movw	r0, #0
   14718:	strb	r0, [fp, #-60]	; 0xffffffc4
   1471c:	b	14720 <__assert_fail@plt+0x3708>
   14720:	b	14724 <__assert_fail@plt+0x370c>
   14724:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1472c:	cmp	r0, r1
   14730:	bcs	14748 <__assert_fail@plt+0x3730>
   14734:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14738:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1473c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14740:	add	r1, r1, r2
   14744:	strb	r0, [r1]
   14748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1474c:	add	r0, r0, #1
   14750:	str	r0, [fp, #-44]	; 0xffffffd4
   14754:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14758:	tst	r0, #1
   1475c:	bne	14768 <__assert_fail@plt+0x3750>
   14760:	movw	r0, #0
   14764:	strb	r0, [fp, #-62]	; 0xffffffc2
   14768:	b	1476c <__assert_fail@plt+0x3754>
   1476c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14770:	add	r0, r0, #1
   14774:	str	r0, [fp, #-40]	; 0xffffffd8
   14778:	b	13524 <__assert_fail@plt+0x250c>
   1477c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14780:	cmp	r0, #0
   14784:	bne	147a4 <__assert_fail@plt+0x378c>
   14788:	ldr	r0, [fp, #8]
   1478c:	cmp	r0, #2
   14790:	bne	147a4 <__assert_fail@plt+0x378c>
   14794:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14798:	tst	r0, #1
   1479c:	beq	147a4 <__assert_fail@plt+0x378c>
   147a0:	b	148fc <__assert_fail@plt+0x38e4>
   147a4:	ldr	r0, [fp, #8]
   147a8:	cmp	r0, #2
   147ac:	bne	1484c <__assert_fail@plt+0x3834>
   147b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   147b4:	tst	r0, #1
   147b8:	bne	1484c <__assert_fail@plt+0x3834>
   147bc:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   147c0:	tst	r0, #1
   147c4:	beq	1484c <__assert_fail@plt+0x3834>
   147c8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   147cc:	tst	r0, #1
   147d0:	beq	14818 <__assert_fail@plt+0x3800>
   147d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   147dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147e4:	ldr	ip, [fp, #12]
   147e8:	ldr	lr, [fp, #16]
   147ec:	ldr	r4, [fp, #20]
   147f0:	ldr	r5, [fp, #24]
   147f4:	movw	r6, #5
   147f8:	str	r6, [sp]
   147fc:	str	ip, [sp, #4]
   14800:	str	lr, [sp, #8]
   14804:	str	r4, [sp, #12]
   14808:	str	r5, [sp, #16]
   1480c:	bl	1323c <__assert_fail@plt+0x2224>
   14810:	str	r0, [fp, #-20]	; 0xffffffec
   14814:	b	14964 <__assert_fail@plt+0x394c>
   14818:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1481c:	cmp	r0, #0
   14820:	bne	14844 <__assert_fail@plt+0x382c>
   14824:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14828:	cmp	r0, #0
   1482c:	beq	14844 <__assert_fail@plt+0x382c>
   14830:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14834:	str	r0, [fp, #-28]	; 0xffffffe4
   14838:	movw	r0, #0
   1483c:	str	r0, [fp, #-44]	; 0xffffffd4
   14840:	b	132e4 <__assert_fail@plt+0x22cc>
   14844:	b	14848 <__assert_fail@plt+0x3830>
   14848:	b	1484c <__assert_fail@plt+0x3834>
   1484c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14850:	movw	r1, #0
   14854:	cmp	r0, r1
   14858:	beq	148cc <__assert_fail@plt+0x38b4>
   1485c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14860:	tst	r0, #1
   14864:	bne	148cc <__assert_fail@plt+0x38b4>
   14868:	b	1486c <__assert_fail@plt+0x3854>
   1486c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14870:	ldrsb	r0, [r0]
   14874:	cmp	r0, #0
   14878:	beq	148c8 <__assert_fail@plt+0x38b0>
   1487c:	b	14880 <__assert_fail@plt+0x3868>
   14880:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14888:	cmp	r0, r1
   1488c:	bcs	148a8 <__assert_fail@plt+0x3890>
   14890:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14894:	ldrb	r0, [r0]
   14898:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1489c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   148a0:	add	r1, r1, r2
   148a4:	strb	r0, [r1]
   148a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148ac:	add	r0, r0, #1
   148b0:	str	r0, [fp, #-44]	; 0xffffffd4
   148b4:	b	148b8 <__assert_fail@plt+0x38a0>
   148b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   148bc:	add	r0, r0, #1
   148c0:	str	r0, [fp, #-52]	; 0xffffffcc
   148c4:	b	1486c <__assert_fail@plt+0x3854>
   148c8:	b	148cc <__assert_fail@plt+0x38b4>
   148cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148d4:	cmp	r0, r1
   148d8:	bcs	148f0 <__assert_fail@plt+0x38d8>
   148dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   148e4:	add	r0, r0, r1
   148e8:	movw	r1, #0
   148ec:	strb	r1, [r0]
   148f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148f4:	str	r0, [fp, #-20]	; 0xffffffec
   148f8:	b	14964 <__assert_fail@plt+0x394c>
   148fc:	ldr	r0, [fp, #8]
   14900:	cmp	r0, #2
   14904:	bne	1491c <__assert_fail@plt+0x3904>
   14908:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1490c:	tst	r0, #1
   14910:	beq	1491c <__assert_fail@plt+0x3904>
   14914:	movw	r0, #4
   14918:	str	r0, [fp, #8]
   1491c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14924:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14928:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1492c:	ldr	ip, [fp, #8]
   14930:	ldr	lr, [fp, #12]
   14934:	mvn	r4, #2
   14938:	and	lr, lr, r4
   1493c:	ldr	r4, [fp, #20]
   14940:	ldr	r5, [fp, #24]
   14944:	str	ip, [sp]
   14948:	str	lr, [sp, #4]
   1494c:	movw	ip, #0
   14950:	str	ip, [sp, #8]
   14954:	str	r4, [sp, #12]
   14958:	str	r5, [sp, #16]
   1495c:	bl	1323c <__assert_fail@plt+0x2224>
   14960:	str	r0, [fp, #-20]	; 0xffffffec
   14964:	ldr	r0, [fp, #-20]	; 0xffffffec
   14968:	sub	sp, fp, #16
   1496c:	pop	{r4, r5, r6, sl, fp, pc}
   14970:	push	{fp, lr}
   14974:	mov	fp, sp
   14978:	sub	sp, sp, #16
   1497c:	str	r0, [fp, #-4]
   14980:	str	r1, [sp, #8]
   14984:	str	r2, [sp, #4]
   14988:	ldr	r0, [fp, #-4]
   1498c:	ldr	r1, [sp, #8]
   14990:	ldr	r3, [sp, #4]
   14994:	movw	r2, #0
   14998:	bl	149a4 <__assert_fail@plt+0x398c>
   1499c:	mov	sp, fp
   149a0:	pop	{fp, pc}
   149a4:	push	{r4, r5, r6, sl, fp, lr}
   149a8:	add	fp, sp, #16
   149ac:	sub	sp, sp, #80	; 0x50
   149b0:	str	r0, [fp, #-20]	; 0xffffffec
   149b4:	str	r1, [fp, #-24]	; 0xffffffe8
   149b8:	str	r2, [fp, #-28]	; 0xffffffe4
   149bc:	str	r3, [fp, #-32]	; 0xffffffe0
   149c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149c4:	movw	r1, #0
   149c8:	cmp	r0, r1
   149cc:	beq	149dc <__assert_fail@plt+0x39c4>
   149d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149d4:	str	r0, [sp, #40]	; 0x28
   149d8:	b	149ec <__assert_fail@plt+0x39d4>
   149dc:	movw	r0, #49524	; 0xc174
   149e0:	movt	r0, #2
   149e4:	str	r0, [sp, #40]	; 0x28
   149e8:	b	149ec <__assert_fail@plt+0x39d4>
   149ec:	ldr	r0, [sp, #40]	; 0x28
   149f0:	str	r0, [fp, #-36]	; 0xffffffdc
   149f4:	bl	10f70 <__errno_location@plt>
   149f8:	ldr	r0, [r0]
   149fc:	str	r0, [fp, #-40]	; 0xffffffd8
   14a00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a04:	ldr	r0, [r0, #4]
   14a08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a0c:	movw	r2, #0
   14a10:	cmp	r1, r2
   14a14:	movw	r1, #0
   14a18:	movne	r1, #1
   14a1c:	tst	r1, #1
   14a20:	mov	r1, r2
   14a24:	moveq	r1, #1
   14a28:	orr	r0, r0, r1
   14a2c:	str	r0, [fp, #-44]	; 0xffffffd4
   14a30:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a3c:	ldr	r1, [r1]
   14a40:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14a44:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14a48:	add	lr, lr, #8
   14a4c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14a50:	ldr	r4, [r4, #40]	; 0x28
   14a54:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14a58:	ldr	r5, [r5, #44]	; 0x2c
   14a5c:	str	r0, [sp, #36]	; 0x24
   14a60:	mov	r0, r2
   14a64:	str	r1, [sp, #32]
   14a68:	mov	r1, r2
   14a6c:	ldr	r2, [sp, #36]	; 0x24
   14a70:	ldr	r6, [sp, #32]
   14a74:	str	r6, [sp]
   14a78:	str	ip, [sp, #4]
   14a7c:	str	lr, [sp, #8]
   14a80:	str	r4, [sp, #12]
   14a84:	str	r5, [sp, #16]
   14a88:	bl	1323c <__assert_fail@plt+0x2224>
   14a8c:	add	r0, r0, #1
   14a90:	str	r0, [sp, #48]	; 0x30
   14a94:	ldr	r0, [sp, #48]	; 0x30
   14a98:	bl	162ec <__assert_fail@plt+0x52d4>
   14a9c:	str	r0, [sp, #44]	; 0x2c
   14aa0:	ldr	r0, [sp, #44]	; 0x2c
   14aa4:	ldr	r1, [sp, #48]	; 0x30
   14aa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14aac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ab0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14ab4:	ldr	ip, [ip]
   14ab8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14abc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14ac0:	add	r4, r4, #8
   14ac4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14ac8:	ldr	r5, [r5, #40]	; 0x28
   14acc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14ad0:	ldr	r6, [r6, #44]	; 0x2c
   14ad4:	str	ip, [sp]
   14ad8:	str	lr, [sp, #4]
   14adc:	str	r4, [sp, #8]
   14ae0:	str	r5, [sp, #12]
   14ae4:	str	r6, [sp, #16]
   14ae8:	bl	1323c <__assert_fail@plt+0x2224>
   14aec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14af0:	str	r0, [sp, #28]
   14af4:	str	r1, [sp, #24]
   14af8:	bl	10f70 <__errno_location@plt>
   14afc:	ldr	r1, [sp, #24]
   14b00:	str	r1, [r0]
   14b04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14b08:	movw	r2, #0
   14b0c:	cmp	r0, r2
   14b10:	beq	14b24 <__assert_fail@plt+0x3b0c>
   14b14:	ldr	r0, [sp, #48]	; 0x30
   14b18:	sub	r0, r0, #1
   14b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b20:	str	r0, [r1]
   14b24:	ldr	r0, [sp, #44]	; 0x2c
   14b28:	sub	sp, fp, #16
   14b2c:	pop	{r4, r5, r6, sl, fp, pc}
   14b30:	push	{fp, lr}
   14b34:	mov	fp, sp
   14b38:	sub	sp, sp, #8
   14b3c:	movw	r0, #49388	; 0xc0ec
   14b40:	movt	r0, #2
   14b44:	ldr	r0, [r0]
   14b48:	str	r0, [sp, #4]
   14b4c:	movw	r0, #1
   14b50:	str	r0, [sp]
   14b54:	ldr	r0, [sp]
   14b58:	movw	r1, #49392	; 0xc0f0
   14b5c:	movt	r1, #2
   14b60:	ldr	r1, [r1]
   14b64:	cmp	r0, r1
   14b68:	bge	14b90 <__assert_fail@plt+0x3b78>
   14b6c:	ldr	r0, [sp, #4]
   14b70:	ldr	r1, [sp]
   14b74:	add	r0, r0, r1, lsl #3
   14b78:	ldr	r0, [r0, #4]
   14b7c:	bl	19334 <__assert_fail@plt+0x831c>
   14b80:	ldr	r0, [sp]
   14b84:	add	r0, r0, #1
   14b88:	str	r0, [sp]
   14b8c:	b	14b54 <__assert_fail@plt+0x3b3c>
   14b90:	ldr	r0, [sp, #4]
   14b94:	ldr	r0, [r0, #4]
   14b98:	movw	r1, #49572	; 0xc1a4
   14b9c:	movt	r1, #2
   14ba0:	cmp	r0, r1
   14ba4:	beq	14bd0 <__assert_fail@plt+0x3bb8>
   14ba8:	ldr	r0, [sp, #4]
   14bac:	ldr	r0, [r0, #4]
   14bb0:	bl	19334 <__assert_fail@plt+0x831c>
   14bb4:	movw	r0, #256	; 0x100
   14bb8:	movw	r1, #49396	; 0xc0f4
   14bbc:	movt	r1, #2
   14bc0:	str	r0, [r1]
   14bc4:	movw	r0, #49572	; 0xc1a4
   14bc8:	movt	r0, #2
   14bcc:	str	r0, [r1, #4]
   14bd0:	ldr	r0, [sp, #4]
   14bd4:	movw	r1, #49396	; 0xc0f4
   14bd8:	movt	r1, #2
   14bdc:	cmp	r0, r1
   14be0:	beq	14c00 <__assert_fail@plt+0x3be8>
   14be4:	ldr	r0, [sp, #4]
   14be8:	bl	19334 <__assert_fail@plt+0x831c>
   14bec:	movw	r0, #49388	; 0xc0ec
   14bf0:	movt	r0, #2
   14bf4:	movw	r1, #49396	; 0xc0f4
   14bf8:	movt	r1, #2
   14bfc:	str	r1, [r0]
   14c00:	movw	r0, #49392	; 0xc0f0
   14c04:	movt	r0, #2
   14c08:	movw	r1, #1
   14c0c:	str	r1, [r0]
   14c10:	mov	sp, fp
   14c14:	pop	{fp, pc}
   14c18:	push	{fp, lr}
   14c1c:	mov	fp, sp
   14c20:	sub	sp, sp, #8
   14c24:	str	r0, [sp, #4]
   14c28:	str	r1, [sp]
   14c2c:	ldr	r0, [sp, #4]
   14c30:	ldr	r1, [sp]
   14c34:	mvn	r2, #0
   14c38:	movw	r3, #49524	; 0xc174
   14c3c:	movt	r3, #2
   14c40:	bl	14c4c <__assert_fail@plt+0x3c34>
   14c44:	mov	sp, fp
   14c48:	pop	{fp, pc}
   14c4c:	push	{r4, r5, r6, sl, fp, lr}
   14c50:	add	fp, sp, #16
   14c54:	sub	sp, sp, #80	; 0x50
   14c58:	str	r0, [fp, #-20]	; 0xffffffec
   14c5c:	str	r1, [fp, #-24]	; 0xffffffe8
   14c60:	str	r2, [fp, #-28]	; 0xffffffe4
   14c64:	str	r3, [fp, #-32]	; 0xffffffe0
   14c68:	bl	10f70 <__errno_location@plt>
   14c6c:	ldr	r1, [pc, #672]	; 14f14 <__assert_fail@plt+0x3efc>
   14c70:	ldr	r0, [r0]
   14c74:	str	r0, [fp, #-36]	; 0xffffffdc
   14c78:	movw	r0, #49388	; 0xc0ec
   14c7c:	movt	r0, #2
   14c80:	ldr	r0, [r0]
   14c84:	str	r0, [fp, #-40]	; 0xffffffd8
   14c88:	str	r1, [fp, #-44]	; 0xffffffd4
   14c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c90:	movw	r1, #0
   14c94:	cmp	r1, r0
   14c98:	bgt	14cac <__assert_fail@plt+0x3c94>
   14c9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ca0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ca4:	cmp	r0, r1
   14ca8:	blt	14cb0 <__assert_fail@plt+0x3c98>
   14cac:	bl	11000 <abort@plt>
   14cb0:	movw	r0, #49392	; 0xc0f0
   14cb4:	movt	r0, #2
   14cb8:	ldr	r0, [r0]
   14cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14cc0:	cmp	r0, r1
   14cc4:	bgt	14dbc <__assert_fail@plt+0x3da4>
   14cc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ccc:	movw	r1, #49396	; 0xc0f4
   14cd0:	movt	r1, #2
   14cd4:	cmp	r0, r1
   14cd8:	movw	r0, #0
   14cdc:	moveq	r0, #1
   14ce0:	and	r0, r0, #1
   14ce4:	strb	r0, [fp, #-45]	; 0xffffffd3
   14ce8:	movw	r0, #49392	; 0xc0f0
   14cec:	movt	r0, #2
   14cf0:	ldr	r0, [r0]
   14cf4:	str	r0, [sp, #44]	; 0x2c
   14cf8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14cfc:	tst	r0, #1
   14d00:	beq	14d10 <__assert_fail@plt+0x3cf8>
   14d04:	movw	r0, #0
   14d08:	str	r0, [sp, #24]
   14d0c:	b	14d18 <__assert_fail@plt+0x3d00>
   14d10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d14:	str	r0, [sp, #24]
   14d18:	ldr	r0, [sp, #24]
   14d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d20:	movw	r2, #49392	; 0xc0f0
   14d24:	movt	r2, #2
   14d28:	ldr	r2, [r2]
   14d2c:	sub	r1, r1, r2
   14d30:	add	r2, r1, #1
   14d34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14d38:	add	r1, sp, #44	; 0x2c
   14d3c:	movw	ip, #8
   14d40:	str	ip, [sp]
   14d44:	bl	16528 <__assert_fail@plt+0x5510>
   14d48:	str	r0, [fp, #-40]	; 0xffffffd8
   14d4c:	movw	r1, #49388	; 0xc0ec
   14d50:	movt	r1, #2
   14d54:	str	r0, [r1]
   14d58:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14d5c:	tst	r0, #1
   14d60:	beq	14d80 <__assert_fail@plt+0x3d68>
   14d64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d68:	movw	r1, #49396	; 0xc0f4
   14d6c:	movt	r1, #2
   14d70:	ldr	r2, [r1]
   14d74:	str	r2, [r0]
   14d78:	ldr	r1, [r1, #4]
   14d7c:	str	r1, [r0, #4]
   14d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d84:	movw	r1, #49392	; 0xc0f0
   14d88:	movt	r1, #2
   14d8c:	ldr	r1, [r1]
   14d90:	add	r0, r0, r1, lsl #3
   14d94:	ldr	r2, [sp, #44]	; 0x2c
   14d98:	sub	r1, r2, r1
   14d9c:	lsl	r2, r1, #3
   14da0:	movw	r1, #0
   14da4:	and	r1, r1, #255	; 0xff
   14da8:	bl	10f88 <memset@plt>
   14dac:	ldr	r0, [sp, #44]	; 0x2c
   14db0:	movw	r1, #49392	; 0xc0f0
   14db4:	movt	r1, #2
   14db8:	str	r0, [r1]
   14dbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14dc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14dc4:	ldr	r0, [r0, r1, lsl #3]
   14dc8:	str	r0, [sp, #40]	; 0x28
   14dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14dd4:	add	r0, r0, r1, lsl #3
   14dd8:	ldr	r0, [r0, #4]
   14ddc:	str	r0, [sp, #36]	; 0x24
   14de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14de4:	ldr	r0, [r0, #4]
   14de8:	orr	r0, r0, #1
   14dec:	str	r0, [sp, #32]
   14df0:	ldr	r0, [sp, #36]	; 0x24
   14df4:	ldr	r1, [sp, #40]	; 0x28
   14df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14dfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e00:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14e04:	ldr	ip, [ip]
   14e08:	ldr	lr, [sp, #32]
   14e0c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14e10:	add	r4, r4, #8
   14e14:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14e18:	ldr	r5, [r5, #40]	; 0x28
   14e1c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14e20:	ldr	r6, [r6, #44]	; 0x2c
   14e24:	str	ip, [sp]
   14e28:	str	lr, [sp, #4]
   14e2c:	str	r4, [sp, #8]
   14e30:	str	r5, [sp, #12]
   14e34:	str	r6, [sp, #16]
   14e38:	bl	1323c <__assert_fail@plt+0x2224>
   14e3c:	str	r0, [sp, #28]
   14e40:	ldr	r0, [sp, #40]	; 0x28
   14e44:	ldr	r1, [sp, #28]
   14e48:	cmp	r0, r1
   14e4c:	bhi	14ef4 <__assert_fail@plt+0x3edc>
   14e50:	ldr	r0, [sp, #28]
   14e54:	add	r0, r0, #1
   14e58:	str	r0, [sp, #40]	; 0x28
   14e5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e60:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e64:	add	r1, r1, r2, lsl #3
   14e68:	str	r0, [r1]
   14e6c:	ldr	r0, [sp, #36]	; 0x24
   14e70:	movw	r1, #49572	; 0xc1a4
   14e74:	movt	r1, #2
   14e78:	cmp	r0, r1
   14e7c:	beq	14e88 <__assert_fail@plt+0x3e70>
   14e80:	ldr	r0, [sp, #36]	; 0x24
   14e84:	bl	19334 <__assert_fail@plt+0x831c>
   14e88:	ldr	r0, [sp, #40]	; 0x28
   14e8c:	bl	162ec <__assert_fail@plt+0x52d4>
   14e90:	mov	r1, r0
   14e94:	str	r0, [sp, #36]	; 0x24
   14e98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ea0:	add	r0, r0, r2, lsl #3
   14ea4:	str	r1, [r0, #4]
   14ea8:	ldr	r0, [sp, #36]	; 0x24
   14eac:	ldr	r1, [sp, #40]	; 0x28
   14eb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14eb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14eb8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14ebc:	ldr	ip, [ip]
   14ec0:	ldr	lr, [sp, #32]
   14ec4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14ec8:	add	r4, r4, #8
   14ecc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14ed0:	ldr	r5, [r5, #40]	; 0x28
   14ed4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14ed8:	ldr	r6, [r6, #44]	; 0x2c
   14edc:	str	ip, [sp]
   14ee0:	str	lr, [sp, #4]
   14ee4:	str	r4, [sp, #8]
   14ee8:	str	r5, [sp, #12]
   14eec:	str	r6, [sp, #16]
   14ef0:	bl	1323c <__assert_fail@plt+0x2224>
   14ef4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14ef8:	str	r0, [sp, #20]
   14efc:	bl	10f70 <__errno_location@plt>
   14f00:	ldr	r1, [sp, #20]
   14f04:	str	r1, [r0]
   14f08:	ldr	r0, [sp, #36]	; 0x24
   14f0c:	sub	sp, fp, #16
   14f10:	pop	{r4, r5, r6, sl, fp, pc}
   14f14:	svcvc	0x00ffffff
   14f18:	push	{fp, lr}
   14f1c:	mov	fp, sp
   14f20:	sub	sp, sp, #16
   14f24:	str	r0, [fp, #-4]
   14f28:	str	r1, [sp, #8]
   14f2c:	str	r2, [sp, #4]
   14f30:	ldr	r0, [fp, #-4]
   14f34:	ldr	r1, [sp, #8]
   14f38:	ldr	r2, [sp, #4]
   14f3c:	movw	r3, #49524	; 0xc174
   14f40:	movt	r3, #2
   14f44:	bl	14c4c <__assert_fail@plt+0x3c34>
   14f48:	mov	sp, fp
   14f4c:	pop	{fp, pc}
   14f50:	push	{fp, lr}
   14f54:	mov	fp, sp
   14f58:	sub	sp, sp, #8
   14f5c:	str	r0, [sp, #4]
   14f60:	ldr	r1, [sp, #4]
   14f64:	movw	r0, #0
   14f68:	bl	14c18 <__assert_fail@plt+0x3c00>
   14f6c:	mov	sp, fp
   14f70:	pop	{fp, pc}
   14f74:	push	{fp, lr}
   14f78:	mov	fp, sp
   14f7c:	sub	sp, sp, #8
   14f80:	str	r0, [sp, #4]
   14f84:	str	r1, [sp]
   14f88:	ldr	r1, [sp, #4]
   14f8c:	ldr	r2, [sp]
   14f90:	movw	r0, #0
   14f94:	bl	14f18 <__assert_fail@plt+0x3f00>
   14f98:	mov	sp, fp
   14f9c:	pop	{fp, pc}
   14fa0:	push	{fp, lr}
   14fa4:	mov	fp, sp
   14fa8:	sub	sp, sp, #64	; 0x40
   14fac:	str	r0, [fp, #-4]
   14fb0:	str	r1, [fp, #-8]
   14fb4:	str	r2, [fp, #-12]
   14fb8:	ldr	r1, [fp, #-8]
   14fbc:	add	r0, sp, #4
   14fc0:	bl	14fe0 <__assert_fail@plt+0x3fc8>
   14fc4:	ldr	r0, [fp, #-4]
   14fc8:	ldr	r1, [fp, #-12]
   14fcc:	mvn	r2, #0
   14fd0:	add	r3, sp, #4
   14fd4:	bl	14c4c <__assert_fail@plt+0x3c34>
   14fd8:	mov	sp, fp
   14fdc:	pop	{fp, pc}
   14fe0:	push	{fp, lr}
   14fe4:	mov	fp, sp
   14fe8:	sub	sp, sp, #8
   14fec:	str	r1, [sp, #4]
   14ff0:	mov	r1, r0
   14ff4:	str	r0, [sp]
   14ff8:	mov	r0, r1
   14ffc:	movw	r1, #0
   15000:	and	r1, r1, #255	; 0xff
   15004:	movw	r2, #48	; 0x30
   15008:	bl	10f88 <memset@plt>
   1500c:	ldr	r0, [sp, #4]
   15010:	cmp	r0, #10
   15014:	bne	1501c <__assert_fail@plt+0x4004>
   15018:	bl	11000 <abort@plt>
   1501c:	ldr	r0, [sp, #4]
   15020:	ldr	r1, [sp]
   15024:	str	r0, [r1]
   15028:	mov	sp, fp
   1502c:	pop	{fp, pc}
   15030:	push	{fp, lr}
   15034:	mov	fp, sp
   15038:	sub	sp, sp, #64	; 0x40
   1503c:	str	r0, [fp, #-4]
   15040:	str	r1, [fp, #-8]
   15044:	str	r2, [fp, #-12]
   15048:	str	r3, [fp, #-16]
   1504c:	ldr	r1, [fp, #-8]
   15050:	mov	r0, sp
   15054:	bl	14fe0 <__assert_fail@plt+0x3fc8>
   15058:	ldr	r0, [fp, #-4]
   1505c:	ldr	r1, [fp, #-12]
   15060:	ldr	r2, [fp, #-16]
   15064:	mov	r3, sp
   15068:	bl	14c4c <__assert_fail@plt+0x3c34>
   1506c:	mov	sp, fp
   15070:	pop	{fp, pc}
   15074:	push	{fp, lr}
   15078:	mov	fp, sp
   1507c:	sub	sp, sp, #8
   15080:	str	r0, [sp, #4]
   15084:	str	r1, [sp]
   15088:	ldr	r1, [sp, #4]
   1508c:	ldr	r2, [sp]
   15090:	movw	r0, #0
   15094:	bl	14fa0 <__assert_fail@plt+0x3f88>
   15098:	mov	sp, fp
   1509c:	pop	{fp, pc}
   150a0:	push	{fp, lr}
   150a4:	mov	fp, sp
   150a8:	sub	sp, sp, #16
   150ac:	str	r0, [fp, #-4]
   150b0:	str	r1, [sp, #8]
   150b4:	str	r2, [sp, #4]
   150b8:	ldr	r1, [fp, #-4]
   150bc:	ldr	r2, [sp, #8]
   150c0:	ldr	r3, [sp, #4]
   150c4:	movw	r0, #0
   150c8:	bl	15030 <__assert_fail@plt+0x4018>
   150cc:	mov	sp, fp
   150d0:	pop	{fp, pc}
   150d4:	push	{fp, lr}
   150d8:	mov	fp, sp
   150dc:	sub	sp, sp, #72	; 0x48
   150e0:	movw	r3, #49524	; 0xc174
   150e4:	movt	r3, #2
   150e8:	str	r0, [fp, #-4]
   150ec:	str	r1, [fp, #-8]
   150f0:	strb	r2, [fp, #-9]
   150f4:	add	r0, sp, #12
   150f8:	mov	r1, r0
   150fc:	str	r0, [sp, #8]
   15100:	mov	r0, r1
   15104:	mov	r1, r3
   15108:	movw	r2, #48	; 0x30
   1510c:	bl	10e2c <memcpy@plt>
   15110:	ldr	r0, [sp, #8]
   15114:	ldrb	r1, [fp, #-9]
   15118:	movw	r2, #1
   1511c:	bl	12fe4 <__assert_fail@plt+0x1fcc>
   15120:	ldr	r1, [fp, #-4]
   15124:	ldr	r2, [fp, #-8]
   15128:	movw	r3, #0
   1512c:	str	r0, [sp, #4]
   15130:	mov	r0, r3
   15134:	add	r3, sp, #12
   15138:	bl	14c4c <__assert_fail@plt+0x3c34>
   1513c:	mov	sp, fp
   15140:	pop	{fp, pc}
   15144:	push	{fp, lr}
   15148:	mov	fp, sp
   1514c:	sub	sp, sp, #8
   15150:	str	r0, [sp, #4]
   15154:	strb	r1, [sp, #3]
   15158:	ldr	r0, [sp, #4]
   1515c:	mvn	r1, #0
   15160:	ldrb	r2, [sp, #3]
   15164:	bl	150d4 <__assert_fail@plt+0x40bc>
   15168:	mov	sp, fp
   1516c:	pop	{fp, pc}
   15170:	push	{fp, lr}
   15174:	mov	fp, sp
   15178:	sub	sp, sp, #8
   1517c:	str	r0, [sp, #4]
   15180:	ldr	r0, [sp, #4]
   15184:	movw	r1, #58	; 0x3a
   15188:	and	r1, r1, #255	; 0xff
   1518c:	bl	15144 <__assert_fail@plt+0x412c>
   15190:	mov	sp, fp
   15194:	pop	{fp, pc}
   15198:	push	{fp, lr}
   1519c:	mov	fp, sp
   151a0:	sub	sp, sp, #8
   151a4:	str	r0, [sp, #4]
   151a8:	str	r1, [sp]
   151ac:	ldr	r0, [sp, #4]
   151b0:	ldr	r1, [sp]
   151b4:	movw	r2, #58	; 0x3a
   151b8:	and	r2, r2, #255	; 0xff
   151bc:	bl	150d4 <__assert_fail@plt+0x40bc>
   151c0:	mov	sp, fp
   151c4:	pop	{fp, pc}
   151c8:	push	{fp, lr}
   151cc:	mov	fp, sp
   151d0:	sub	sp, sp, #120	; 0x78
   151d4:	str	r0, [fp, #-4]
   151d8:	str	r1, [fp, #-8]
   151dc:	str	r2, [fp, #-12]
   151e0:	ldr	r1, [fp, #-8]
   151e4:	add	r0, sp, #12
   151e8:	bl	14fe0 <__assert_fail@plt+0x3fc8>
   151ec:	add	r0, sp, #60	; 0x3c
   151f0:	mov	r1, r0
   151f4:	add	r2, sp, #12
   151f8:	str	r0, [sp, #8]
   151fc:	mov	r0, r1
   15200:	mov	r1, r2
   15204:	movw	r2, #48	; 0x30
   15208:	bl	10e2c <memcpy@plt>
   1520c:	ldr	r0, [sp, #8]
   15210:	movw	r1, #58	; 0x3a
   15214:	and	r1, r1, #255	; 0xff
   15218:	movw	r2, #1
   1521c:	bl	12fe4 <__assert_fail@plt+0x1fcc>
   15220:	ldr	r1, [fp, #-4]
   15224:	ldr	r2, [fp, #-12]
   15228:	str	r0, [sp, #4]
   1522c:	mov	r0, r1
   15230:	mov	r1, r2
   15234:	mvn	r2, #0
   15238:	add	r3, sp, #60	; 0x3c
   1523c:	bl	14c4c <__assert_fail@plt+0x3c34>
   15240:	mov	sp, fp
   15244:	pop	{fp, pc}
   15248:	push	{fp, lr}
   1524c:	mov	fp, sp
   15250:	sub	sp, sp, #24
   15254:	str	r0, [fp, #-4]
   15258:	str	r1, [fp, #-8]
   1525c:	str	r2, [sp, #12]
   15260:	str	r3, [sp, #8]
   15264:	ldr	r0, [fp, #-4]
   15268:	ldr	r1, [fp, #-8]
   1526c:	ldr	r2, [sp, #12]
   15270:	ldr	r3, [sp, #8]
   15274:	mvn	ip, #0
   15278:	str	ip, [sp]
   1527c:	bl	15288 <__assert_fail@plt+0x4270>
   15280:	mov	sp, fp
   15284:	pop	{fp, pc}
   15288:	push	{fp, lr}
   1528c:	mov	fp, sp
   15290:	sub	sp, sp, #72	; 0x48
   15294:	ldr	ip, [fp, #8]
   15298:	movw	lr, #49524	; 0xc174
   1529c:	movt	lr, #2
   152a0:	str	r0, [fp, #-4]
   152a4:	str	r1, [fp, #-8]
   152a8:	str	r2, [fp, #-12]
   152ac:	str	r3, [fp, #-16]
   152b0:	add	r0, sp, #8
   152b4:	mov	r1, r0
   152b8:	str	r0, [sp, #4]
   152bc:	mov	r0, r1
   152c0:	mov	r1, lr
   152c4:	movw	r2, #48	; 0x30
   152c8:	str	ip, [sp]
   152cc:	bl	10e2c <memcpy@plt>
   152d0:	ldr	r1, [fp, #-8]
   152d4:	ldr	r2, [fp, #-12]
   152d8:	ldr	r0, [sp, #4]
   152dc:	bl	130e4 <__assert_fail@plt+0x20cc>
   152e0:	ldr	r0, [fp, #-4]
   152e4:	ldr	r1, [fp, #-16]
   152e8:	ldr	r2, [fp, #8]
   152ec:	add	r3, sp, #8
   152f0:	bl	14c4c <__assert_fail@plt+0x3c34>
   152f4:	mov	sp, fp
   152f8:	pop	{fp, pc}
   152fc:	push	{fp, lr}
   15300:	mov	fp, sp
   15304:	sub	sp, sp, #16
   15308:	str	r0, [fp, #-4]
   1530c:	str	r1, [sp, #8]
   15310:	str	r2, [sp, #4]
   15314:	ldr	r1, [fp, #-4]
   15318:	ldr	r2, [sp, #8]
   1531c:	ldr	r3, [sp, #4]
   15320:	movw	r0, #0
   15324:	bl	15248 <__assert_fail@plt+0x4230>
   15328:	mov	sp, fp
   1532c:	pop	{fp, pc}
   15330:	push	{fp, lr}
   15334:	mov	fp, sp
   15338:	sub	sp, sp, #24
   1533c:	str	r0, [fp, #-4]
   15340:	str	r1, [fp, #-8]
   15344:	str	r2, [sp, #12]
   15348:	str	r3, [sp, #8]
   1534c:	ldr	r1, [fp, #-4]
   15350:	ldr	r2, [fp, #-8]
   15354:	ldr	r3, [sp, #12]
   15358:	ldr	r0, [sp, #8]
   1535c:	movw	ip, #0
   15360:	str	r0, [sp, #4]
   15364:	mov	r0, ip
   15368:	ldr	ip, [sp, #4]
   1536c:	str	ip, [sp]
   15370:	bl	15288 <__assert_fail@plt+0x4270>
   15374:	mov	sp, fp
   15378:	pop	{fp, pc}
   1537c:	push	{fp, lr}
   15380:	mov	fp, sp
   15384:	sub	sp, sp, #16
   15388:	str	r0, [fp, #-4]
   1538c:	str	r1, [sp, #8]
   15390:	str	r2, [sp, #4]
   15394:	ldr	r0, [fp, #-4]
   15398:	ldr	r1, [sp, #8]
   1539c:	ldr	r2, [sp, #4]
   153a0:	movw	r3, #49404	; 0xc0fc
   153a4:	movt	r3, #2
   153a8:	bl	14c4c <__assert_fail@plt+0x3c34>
   153ac:	mov	sp, fp
   153b0:	pop	{fp, pc}
   153b4:	push	{fp, lr}
   153b8:	mov	fp, sp
   153bc:	sub	sp, sp, #8
   153c0:	str	r0, [sp, #4]
   153c4:	str	r1, [sp]
   153c8:	ldr	r1, [sp, #4]
   153cc:	ldr	r2, [sp]
   153d0:	movw	r0, #0
   153d4:	bl	1537c <__assert_fail@plt+0x4364>
   153d8:	mov	sp, fp
   153dc:	pop	{fp, pc}
   153e0:	push	{fp, lr}
   153e4:	mov	fp, sp
   153e8:	sub	sp, sp, #8
   153ec:	str	r0, [sp, #4]
   153f0:	str	r1, [sp]
   153f4:	ldr	r0, [sp, #4]
   153f8:	ldr	r1, [sp]
   153fc:	mvn	r2, #0
   15400:	bl	1537c <__assert_fail@plt+0x4364>
   15404:	mov	sp, fp
   15408:	pop	{fp, pc}
   1540c:	push	{fp, lr}
   15410:	mov	fp, sp
   15414:	sub	sp, sp, #8
   15418:	str	r0, [sp, #4]
   1541c:	ldr	r1, [sp, #4]
   15420:	movw	r0, #0
   15424:	bl	153e0 <__assert_fail@plt+0x43c8>
   15428:	mov	sp, fp
   1542c:	pop	{fp, pc}
   15430:	push	{fp, lr}
   15434:	mov	fp, sp
   15438:	sub	sp, sp, #24
   1543c:	str	r0, [fp, #-8]
   15440:	str	r1, [sp, #12]
   15444:	ldr	r0, [fp, #-8]
   15448:	bl	10f4c <gettext@plt>
   1544c:	str	r0, [sp, #8]
   15450:	ldr	r0, [sp, #8]
   15454:	ldr	r1, [fp, #-8]
   15458:	cmp	r0, r1
   1545c:	beq	1546c <__assert_fail@plt+0x4454>
   15460:	ldr	r0, [sp, #8]
   15464:	str	r0, [fp, #-4]
   15468:	b	15538 <__assert_fail@plt+0x4520>
   1546c:	bl	19548 <__assert_fail@plt+0x8530>
   15470:	str	r0, [sp, #4]
   15474:	ldr	r0, [sp, #4]
   15478:	movw	r1, #47530	; 0xb9aa
   1547c:	movt	r1, #1
   15480:	bl	191ac <__assert_fail@plt+0x8194>
   15484:	cmp	r0, #0
   15488:	bne	154c0 <__assert_fail@plt+0x44a8>
   1548c:	ldr	r0, [fp, #-8]
   15490:	ldrb	r0, [r0]
   15494:	cmp	r0, #96	; 0x60
   15498:	movw	r0, #0
   1549c:	moveq	r0, #1
   154a0:	tst	r0, #1
   154a4:	movw	r0, #47540	; 0xb9b4
   154a8:	movt	r0, #1
   154ac:	movw	r1, #47536	; 0xb9b0
   154b0:	movt	r1, #1
   154b4:	movne	r0, r1
   154b8:	str	r0, [fp, #-4]
   154bc:	b	15538 <__assert_fail@plt+0x4520>
   154c0:	ldr	r0, [sp, #4]
   154c4:	movw	r1, #47544	; 0xb9b8
   154c8:	movt	r1, #1
   154cc:	bl	191ac <__assert_fail@plt+0x8194>
   154d0:	cmp	r0, #0
   154d4:	bne	1550c <__assert_fail@plt+0x44f4>
   154d8:	ldr	r0, [fp, #-8]
   154dc:	ldrb	r0, [r0]
   154e0:	cmp	r0, #96	; 0x60
   154e4:	movw	r0, #0
   154e8:	moveq	r0, #1
   154ec:	tst	r0, #1
   154f0:	movw	r0, #47556	; 0xb9c4
   154f4:	movt	r0, #1
   154f8:	movw	r1, #47552	; 0xb9c0
   154fc:	movt	r1, #1
   15500:	movne	r0, r1
   15504:	str	r0, [fp, #-4]
   15508:	b	15538 <__assert_fail@plt+0x4520>
   1550c:	ldr	r0, [sp, #12]
   15510:	cmp	r0, #9
   15514:	movw	r0, #0
   15518:	moveq	r0, #1
   1551c:	tst	r0, #1
   15520:	movw	r0, #47528	; 0xb9a8
   15524:	movt	r0, #1
   15528:	movw	r1, #47524	; 0xb9a4
   1552c:	movt	r1, #1
   15530:	movne	r0, r1
   15534:	str	r0, [fp, #-4]
   15538:	ldr	r0, [fp, #-4]
   1553c:	mov	sp, fp
   15540:	pop	{fp, pc}
   15544:	sub	sp, sp, #4
   15548:	str	r0, [sp]
   1554c:	ldr	r0, [sp]
   15550:	movw	r1, #0
   15554:	str	r1, [r0]
   15558:	ldr	r0, [sp]
   1555c:	str	r1, [r0, #4]
   15560:	add	sp, sp, #4
   15564:	bx	lr
   15568:	push	{fp, lr}
   1556c:	mov	fp, sp
   15570:	sub	sp, sp, #88	; 0x58
   15574:	add	ip, sp, #28
   15578:	str	r0, [fp, #-8]
   1557c:	str	r1, [fp, #-12]
   15580:	str	r2, [fp, #-16]
   15584:	str	r3, [fp, #-20]	; 0xffffffec
   15588:	mov	r0, ip
   1558c:	movw	r1, #0
   15590:	and	r1, r1, #255	; 0xff
   15594:	movw	r2, #32
   15598:	bl	10f88 <memset@plt>
   1559c:	movw	r0, #0
   155a0:	str	r0, [fp, #-28]	; 0xffffffe4
   155a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   155a8:	ldr	r1, [fp, #-16]
   155ac:	cmp	r0, r1
   155b0:	bcs	155e4 <__assert_fail@plt+0x45cc>
   155b4:	add	r1, sp, #28
   155b8:	ldr	r0, [fp, #-12]
   155bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   155c0:	add	r0, r0, r2
   155c4:	ldrb	r0, [r0]
   155c8:	strb	r0, [sp, #27]
   155cc:	ldrb	r0, [sp, #27]
   155d0:	bl	15754 <__assert_fail@plt+0x473c>
   155d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   155d8:	add	r0, r0, #1
   155dc:	str	r0, [fp, #-28]	; 0xffffffe4
   155e0:	b	155a4 <__assert_fail@plt+0x458c>
   155e4:	ldr	r0, [fp, #-8]
   155e8:	bl	10e50 <getc_unlocked@plt>
   155ec:	str	r0, [fp, #-24]	; 0xffffffe8
   155f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155f4:	cmp	r0, #0
   155f8:	movw	r0, #0
   155fc:	str	r0, [sp, #12]
   15600:	blt	15614 <__assert_fail@plt+0x45fc>
   15604:	add	r1, sp, #28
   15608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1560c:	bl	15798 <__assert_fail@plt+0x4780>
   15610:	str	r0, [sp, #12]
   15614:	ldr	r0, [sp, #12]
   15618:	tst	r0, #1
   1561c:	beq	15634 <__assert_fail@plt+0x461c>
   15620:	b	15624 <__assert_fail@plt+0x460c>
   15624:	ldr	r0, [fp, #-8]
   15628:	bl	10e50 <getc_unlocked@plt>
   1562c:	str	r0, [fp, #-24]	; 0xffffffe8
   15630:	b	155f0 <__assert_fail@plt+0x45d8>
   15634:	ldr	r0, [fp, #-20]	; 0xffffffec
   15638:	ldr	r0, [r0, #4]
   1563c:	str	r0, [sp, #20]
   15640:	ldr	r0, [fp, #-20]	; 0xffffffec
   15644:	ldr	r0, [r0]
   15648:	str	r0, [sp, #16]
   1564c:	movw	r0, #0
   15650:	str	r0, [fp, #-28]	; 0xffffffe4
   15654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15658:	cmp	r0, #0
   1565c:	bge	15678 <__assert_fail@plt+0x4660>
   15660:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15664:	cmp	r0, #0
   15668:	bne	15678 <__assert_fail@plt+0x4660>
   1566c:	mvn	r0, #0
   15670:	str	r0, [fp, #-4]
   15674:	b	15748 <__assert_fail@plt+0x4730>
   15678:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1567c:	ldr	r1, [sp, #16]
   15680:	cmp	r0, r1
   15684:	bne	156ac <__assert_fail@plt+0x4694>
   15688:	ldr	r0, [sp, #20]
   1568c:	add	r1, sp, #16
   15690:	movw	r2, #1
   15694:	str	r2, [sp, #8]
   15698:	mvn	r3, #0
   1569c:	ldr	ip, [sp, #8]
   156a0:	str	ip, [sp]
   156a4:	bl	16528 <__assert_fail@plt+0x5510>
   156a8:	str	r0, [sp, #20]
   156ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156b0:	cmp	r0, #0
   156b4:	bge	156d0 <__assert_fail@plt+0x46b8>
   156b8:	ldr	r0, [sp, #20]
   156bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156c0:	add	r0, r0, r1
   156c4:	movw	r1, #0
   156c8:	strb	r1, [r0]
   156cc:	b	15728 <__assert_fail@plt+0x4710>
   156d0:	add	r1, sp, #28
   156d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156d8:	bl	15798 <__assert_fail@plt+0x4780>
   156dc:	tst	r0, #1
   156e0:	beq	156fc <__assert_fail@plt+0x46e4>
   156e4:	ldr	r0, [sp, #20]
   156e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156ec:	add	r0, r0, r1
   156f0:	movw	r1, #0
   156f4:	strb	r1, [r0]
   156f8:	b	15728 <__assert_fail@plt+0x4710>
   156fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15700:	ldr	r1, [sp, #20]
   15704:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15708:	add	r3, r2, #1
   1570c:	str	r3, [fp, #-28]	; 0xffffffe4
   15710:	add	r1, r1, r2
   15714:	strb	r0, [r1]
   15718:	ldr	r0, [fp, #-8]
   1571c:	bl	10e50 <getc_unlocked@plt>
   15720:	str	r0, [fp, #-24]	; 0xffffffe8
   15724:	b	15654 <__assert_fail@plt+0x463c>
   15728:	ldr	r0, [sp, #20]
   1572c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15730:	str	r0, [r1, #4]
   15734:	ldr	r0, [sp, #16]
   15738:	ldr	r1, [fp, #-20]	; 0xffffffec
   1573c:	str	r0, [r1]
   15740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15744:	str	r0, [fp, #-4]
   15748:	ldr	r0, [fp, #-4]
   1574c:	mov	sp, fp
   15750:	pop	{fp, pc}
   15754:	sub	sp, sp, #12
   15758:	str	r0, [sp, #8]
   1575c:	str	r1, [sp, #4]
   15760:	mov	r0, #1
   15764:	str	r0, [sp]
   15768:	ldr	r0, [sp]
   1576c:	ldr	r1, [sp, #8]
   15770:	lsr	r2, r1, #5
   15774:	sub	r1, r1, r2, lsl #5
   15778:	lsl	r0, r0, r1
   1577c:	ldr	r1, [sp, #4]
   15780:	add	r1, r1, r2, lsl #2
   15784:	ldr	r2, [r1]
   15788:	orr	r0, r2, r0
   1578c:	str	r0, [r1]
   15790:	add	sp, sp, #12
   15794:	bx	lr
   15798:	sub	sp, sp, #8
   1579c:	str	r0, [sp, #4]
   157a0:	str	r1, [sp]
   157a4:	ldr	r0, [sp]
   157a8:	ldr	r1, [sp, #4]
   157ac:	lsr	r1, r1, #5
   157b0:	add	r0, r0, r1, lsl #2
   157b4:	ldr	r0, [r0]
   157b8:	ldr	r1, [sp, #4]
   157bc:	and	r1, r1, #31
   157c0:	lsr	r0, r0, r1
   157c4:	and	r0, r0, #1
   157c8:	cmp	r0, #0
   157cc:	movw	r0, #0
   157d0:	movne	r0, #1
   157d4:	and	r0, r0, #1
   157d8:	add	sp, sp, #8
   157dc:	bx	lr
   157e0:	push	{fp, lr}
   157e4:	mov	fp, sp
   157e8:	sub	sp, sp, #64	; 0x40
   157ec:	ldr	ip, [fp, #12]
   157f0:	ldr	lr, [fp, #8]
   157f4:	str	r0, [fp, #-4]
   157f8:	str	r1, [fp, #-8]
   157fc:	str	r2, [fp, #-12]
   15800:	str	r3, [fp, #-16]
   15804:	sub	r0, fp, #24
   15808:	str	r0, [fp, #-28]	; 0xffffffe4
   1580c:	ldr	r0, [fp, #-8]
   15810:	cmp	r0, #0
   15814:	bne	15824 <__assert_fail@plt+0x480c>
   15818:	movw	r0, #64	; 0x40
   1581c:	str	r0, [fp, #-8]
   15820:	b	15830 <__assert_fail@plt+0x4818>
   15824:	ldr	r0, [fp, #-8]
   15828:	add	r0, r0, #1
   1582c:	str	r0, [fp, #-8]
   15830:	ldr	r0, [fp, #-8]
   15834:	str	r0, [sp, #24]
   15838:	ldr	r0, [sp, #24]
   1583c:	movw	r1, #4
   15840:	bl	163cc <__assert_fail@plt+0x53b4>
   15844:	str	r0, [sp, #32]
   15848:	ldr	r0, [sp, #24]
   1584c:	movw	r1, #4
   15850:	bl	163cc <__assert_fail@plt+0x53b4>
   15854:	str	r0, [sp, #28]
   15858:	movw	r0, #0
   1585c:	str	r0, [sp, #20]
   15860:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15864:	bl	15544 <__assert_fail@plt+0x452c>
   15868:	ldr	r0, [fp, #-4]
   1586c:	ldr	r1, [fp, #-12]
   15870:	ldr	r2, [fp, #-16]
   15874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15878:	bl	15568 <__assert_fail@plt+0x4550>
   1587c:	str	r0, [sp, #12]
   15880:	ldr	r0, [sp, #20]
   15884:	ldr	r1, [sp, #24]
   15888:	cmp	r0, r1
   1588c:	blt	158c4 <__assert_fail@plt+0x48ac>
   15890:	ldr	r0, [sp, #32]
   15894:	add	r1, sp, #24
   15898:	movw	r2, #1
   1589c:	mvn	r3, #0
   158a0:	movw	ip, #4
   158a4:	str	ip, [sp]
   158a8:	bl	16528 <__assert_fail@plt+0x5510>
   158ac:	str	r0, [sp, #32]
   158b0:	ldr	r0, [sp, #28]
   158b4:	ldr	r1, [sp, #24]
   158b8:	movw	r2, #4
   158bc:	bl	16200 <__assert_fail@plt+0x51e8>
   158c0:	str	r0, [sp, #28]
   158c4:	ldr	r0, [sp, #12]
   158c8:	cmn	r0, #1
   158cc:	bne	158f8 <__assert_fail@plt+0x48e0>
   158d0:	ldr	r0, [sp, #32]
   158d4:	ldr	r1, [sp, #20]
   158d8:	mov	r2, #0
   158dc:	str	r2, [r0, r1, lsl #2]
   158e0:	ldr	r0, [sp, #28]
   158e4:	ldr	r1, [sp, #20]
   158e8:	add	r0, r0, r1, lsl #2
   158ec:	movw	r1, #0
   158f0:	str	r1, [r0]
   158f4:	b	1595c <__assert_fail@plt+0x4944>
   158f8:	ldr	r0, [sp, #12]
   158fc:	add	r0, r0, #1
   15900:	mov	r1, #1
   15904:	bl	163cc <__assert_fail@plt+0x53b4>
   15908:	str	r0, [sp, #16]
   1590c:	ldr	r0, [sp, #12]
   15910:	ldr	r1, [sp, #28]
   15914:	ldr	r2, [sp, #20]
   15918:	str	r0, [r1, r2, lsl #2]
   1591c:	ldr	r0, [sp, #16]
   15920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15924:	ldr	r1, [r1, #4]
   15928:	ldr	r2, [sp, #12]
   1592c:	add	r2, r2, #1
   15930:	str	r0, [sp, #8]
   15934:	bl	10e2c <memcpy@plt>
   15938:	ldr	r1, [sp, #32]
   1593c:	ldr	r2, [sp, #20]
   15940:	add	r1, r1, r2, lsl #2
   15944:	ldr	r2, [sp, #8]
   15948:	str	r2, [r1]
   1594c:	ldr	r1, [sp, #20]
   15950:	add	r1, r1, #1
   15954:	str	r1, [sp, #20]
   15958:	b	15868 <__assert_fail@plt+0x4850>
   1595c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15960:	ldr	r0, [r0, #4]
   15964:	bl	19334 <__assert_fail@plt+0x831c>
   15968:	ldr	r0, [sp, #32]
   1596c:	ldr	r1, [fp, #8]
   15970:	str	r0, [r1]
   15974:	ldr	r0, [fp, #12]
   15978:	movw	r1, #0
   1597c:	cmp	r0, r1
   15980:	beq	15994 <__assert_fail@plt+0x497c>
   15984:	ldr	r0, [sp, #28]
   15988:	ldr	r1, [fp, #12]
   1598c:	str	r0, [r1]
   15990:	b	1599c <__assert_fail@plt+0x4984>
   15994:	ldr	r0, [sp, #28]
   15998:	bl	19334 <__assert_fail@plt+0x831c>
   1599c:	ldr	r0, [sp, #20]
   159a0:	mov	sp, fp
   159a4:	pop	{fp, pc}
   159a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159ac:	add	fp, sp, #28
   159b0:	sub	sp, sp, #196	; 0xc4
   159b4:	ldr	ip, [fp, #12]
   159b8:	ldr	lr, [fp, #8]
   159bc:	str	r0, [fp, #-32]	; 0xffffffe0
   159c0:	str	r1, [fp, #-36]	; 0xffffffdc
   159c4:	str	r2, [fp, #-40]	; 0xffffffd8
   159c8:	str	r3, [fp, #-44]	; 0xffffffd4
   159cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   159d0:	movw	r1, #0
   159d4:	cmp	r0, r1
   159d8:	beq	15a0c <__assert_fail@plt+0x49f4>
   159dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   159e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   159e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159ec:	movw	ip, #47644	; 0xba1c
   159f0:	movt	ip, #1
   159f4:	str	r1, [fp, #-48]	; 0xffffffd0
   159f8:	mov	r1, ip
   159fc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15a00:	str	ip, [sp]
   15a04:	bl	10f64 <fprintf@plt>
   15a08:	b	15a24 <__assert_fail@plt+0x4a0c>
   15a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15a14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a18:	movw	r1, #47656	; 0xba28
   15a1c:	movt	r1, #1
   15a20:	bl	10f64 <fprintf@plt>
   15a24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a28:	movw	r1, #47663	; 0xba2f
   15a2c:	movt	r1, #1
   15a30:	str	r0, [fp, #-52]	; 0xffffffcc
   15a34:	mov	r0, r1
   15a38:	bl	10f4c <gettext@plt>
   15a3c:	movw	r1, #48381	; 0xbcfd
   15a40:	movt	r1, #1
   15a44:	movw	r3, #2022	; 0x7e6
   15a48:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15a4c:	str	r0, [fp, #-56]	; 0xffffffc8
   15a50:	mov	r0, r2
   15a54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15a58:	bl	10f64 <fprintf@plt>
   15a5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a60:	movw	r2, #46918	; 0xb746
   15a64:	movt	r2, #1
   15a68:	str	r0, [fp, #-60]	; 0xffffffc4
   15a6c:	mov	r0, r2
   15a70:	str	r2, [fp, #-64]	; 0xffffffc0
   15a74:	bl	10dcc <fputs_unlocked@plt>
   15a78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a7c:	movw	r2, #47667	; 0xba33
   15a80:	movt	r2, #1
   15a84:	str	r0, [fp, #-68]	; 0xffffffbc
   15a88:	mov	r0, r2
   15a8c:	str	r1, [fp, #-72]	; 0xffffffb8
   15a90:	bl	10f4c <gettext@plt>
   15a94:	movw	r2, #47838	; 0xbade
   15a98:	movt	r2, #1
   15a9c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15aa0:	str	r0, [fp, #-76]	; 0xffffffb4
   15aa4:	mov	r0, r1
   15aa8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15aac:	bl	10f64 <fprintf@plt>
   15ab0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15ab4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15ab8:	str	r0, [fp, #-80]	; 0xffffffb0
   15abc:	mov	r0, r2
   15ac0:	bl	10dcc <fputs_unlocked@plt>
   15ac4:	ldr	r1, [fp, #12]
   15ac8:	cmp	r1, #9
   15acc:	str	r1, [fp, #-84]	; 0xffffffac
   15ad0:	bhi	15eec <__assert_fail@plt+0x4ed4>
   15ad4:	add	r0, pc, #8
   15ad8:	ldr	r1, [fp, #-84]	; 0xffffffac
   15adc:	ldr	r0, [r0, r1, lsl #2]
   15ae0:	mov	pc, r0
   15ae4:	andeq	r5, r1, ip, lsl #22
   15ae8:	andeq	r5, r1, r0, lsl fp
   15aec:	andeq	r5, r1, r8, asr #22
   15af0:	andeq	r5, r1, r8, lsl #23
   15af4:	andeq	r5, r1, r0, ror #23
   15af8:	andeq	r5, r1, r4, asr #24
   15afc:			; <UNDEFINED> instruction: 0x00015cb4
   15b00:	andeq	r5, r1, r0, lsr sp
   15b04:			; <UNDEFINED> instruction: 0x00015db8
   15b08:	andeq	r5, r1, ip, asr #28
   15b0c:	b	15f88 <__assert_fail@plt+0x4f70>
   15b10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b14:	movw	r1, #47872	; 0xbb00
   15b18:	movt	r1, #1
   15b1c:	str	r0, [fp, #-88]	; 0xffffffa8
   15b20:	mov	r0, r1
   15b24:	bl	10f4c <gettext@plt>
   15b28:	ldr	r1, [fp, #8]
   15b2c:	ldr	r2, [r1]
   15b30:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15b34:	str	r0, [fp, #-92]	; 0xffffffa4
   15b38:	mov	r0, r1
   15b3c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15b40:	bl	10f64 <fprintf@plt>
   15b44:	b	15f88 <__assert_fail@plt+0x4f70>
   15b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b4c:	movw	r1, #47888	; 0xbb10
   15b50:	movt	r1, #1
   15b54:	str	r0, [fp, #-96]	; 0xffffffa0
   15b58:	mov	r0, r1
   15b5c:	bl	10f4c <gettext@plt>
   15b60:	ldr	r1, [fp, #8]
   15b64:	ldr	r2, [r1]
   15b68:	ldr	r1, [fp, #8]
   15b6c:	ldr	r3, [r1, #4]
   15b70:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15b74:	str	r0, [fp, #-100]	; 0xffffff9c
   15b78:	mov	r0, r1
   15b7c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15b80:	bl	10f64 <fprintf@plt>
   15b84:	b	15f88 <__assert_fail@plt+0x4f70>
   15b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b8c:	movw	r1, #47911	; 0xbb27
   15b90:	movt	r1, #1
   15b94:	str	r0, [fp, #-104]	; 0xffffff98
   15b98:	mov	r0, r1
   15b9c:	bl	10f4c <gettext@plt>
   15ba0:	ldr	r1, [fp, #8]
   15ba4:	ldr	r2, [r1]
   15ba8:	ldr	r1, [fp, #8]
   15bac:	ldr	r3, [r1, #4]
   15bb0:	ldr	r1, [fp, #8]
   15bb4:	ldr	r1, [r1, #8]
   15bb8:	ldr	ip, [fp, #-104]	; 0xffffff98
   15bbc:	str	r0, [fp, #-108]	; 0xffffff94
   15bc0:	mov	r0, ip
   15bc4:	ldr	lr, [fp, #-108]	; 0xffffff94
   15bc8:	str	r1, [sp, #112]	; 0x70
   15bcc:	mov	r1, lr
   15bd0:	ldr	r4, [sp, #112]	; 0x70
   15bd4:	str	r4, [sp]
   15bd8:	bl	10f64 <fprintf@plt>
   15bdc:	b	15f88 <__assert_fail@plt+0x4f70>
   15be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15be4:	movw	r1, #47939	; 0xbb43
   15be8:	movt	r1, #1
   15bec:	str	r0, [sp, #108]	; 0x6c
   15bf0:	mov	r0, r1
   15bf4:	bl	10f4c <gettext@plt>
   15bf8:	ldr	r1, [fp, #8]
   15bfc:	ldr	r2, [r1]
   15c00:	ldr	r1, [fp, #8]
   15c04:	ldr	r3, [r1, #4]
   15c08:	ldr	r1, [fp, #8]
   15c0c:	ldr	r1, [r1, #8]
   15c10:	ldr	ip, [fp, #8]
   15c14:	ldr	ip, [ip, #12]
   15c18:	ldr	lr, [sp, #108]	; 0x6c
   15c1c:	str	r0, [sp, #104]	; 0x68
   15c20:	mov	r0, lr
   15c24:	ldr	r4, [sp, #104]	; 0x68
   15c28:	str	r1, [sp, #100]	; 0x64
   15c2c:	mov	r1, r4
   15c30:	ldr	r5, [sp, #100]	; 0x64
   15c34:	str	r5, [sp]
   15c38:	str	ip, [sp, #4]
   15c3c:	bl	10f64 <fprintf@plt>
   15c40:	b	15f88 <__assert_fail@plt+0x4f70>
   15c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c48:	movw	r1, #47971	; 0xbb63
   15c4c:	movt	r1, #1
   15c50:	str	r0, [sp, #96]	; 0x60
   15c54:	mov	r0, r1
   15c58:	bl	10f4c <gettext@plt>
   15c5c:	ldr	r1, [fp, #8]
   15c60:	ldr	r2, [r1]
   15c64:	ldr	r1, [fp, #8]
   15c68:	ldr	r3, [r1, #4]
   15c6c:	ldr	r1, [fp, #8]
   15c70:	ldr	r1, [r1, #8]
   15c74:	ldr	ip, [fp, #8]
   15c78:	ldr	ip, [ip, #12]
   15c7c:	ldr	lr, [fp, #8]
   15c80:	ldr	lr, [lr, #16]
   15c84:	ldr	r4, [sp, #96]	; 0x60
   15c88:	str	r0, [sp, #92]	; 0x5c
   15c8c:	mov	r0, r4
   15c90:	ldr	r5, [sp, #92]	; 0x5c
   15c94:	str	r1, [sp, #88]	; 0x58
   15c98:	mov	r1, r5
   15c9c:	ldr	r6, [sp, #88]	; 0x58
   15ca0:	str	r6, [sp]
   15ca4:	str	ip, [sp, #4]
   15ca8:	str	lr, [sp, #8]
   15cac:	bl	10f64 <fprintf@plt>
   15cb0:	b	15f88 <__assert_fail@plt+0x4f70>
   15cb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cb8:	movw	r1, #48007	; 0xbb87
   15cbc:	movt	r1, #1
   15cc0:	str	r0, [sp, #84]	; 0x54
   15cc4:	mov	r0, r1
   15cc8:	bl	10f4c <gettext@plt>
   15ccc:	ldr	r1, [fp, #8]
   15cd0:	ldr	r2, [r1]
   15cd4:	ldr	r1, [fp, #8]
   15cd8:	ldr	r3, [r1, #4]
   15cdc:	ldr	r1, [fp, #8]
   15ce0:	ldr	r1, [r1, #8]
   15ce4:	ldr	ip, [fp, #8]
   15ce8:	ldr	ip, [ip, #12]
   15cec:	ldr	lr, [fp, #8]
   15cf0:	ldr	lr, [lr, #16]
   15cf4:	ldr	r4, [fp, #8]
   15cf8:	ldr	r4, [r4, #20]
   15cfc:	ldr	r5, [sp, #84]	; 0x54
   15d00:	str	r0, [sp, #80]	; 0x50
   15d04:	mov	r0, r5
   15d08:	ldr	r6, [sp, #80]	; 0x50
   15d0c:	str	r1, [sp, #76]	; 0x4c
   15d10:	mov	r1, r6
   15d14:	ldr	r7, [sp, #76]	; 0x4c
   15d18:	str	r7, [sp]
   15d1c:	str	ip, [sp, #4]
   15d20:	str	lr, [sp, #8]
   15d24:	str	r4, [sp, #12]
   15d28:	bl	10f64 <fprintf@plt>
   15d2c:	b	15f88 <__assert_fail@plt+0x4f70>
   15d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d34:	movw	r1, #48047	; 0xbbaf
   15d38:	movt	r1, #1
   15d3c:	str	r0, [sp, #72]	; 0x48
   15d40:	mov	r0, r1
   15d44:	bl	10f4c <gettext@plt>
   15d48:	ldr	r1, [fp, #8]
   15d4c:	ldr	r2, [r1]
   15d50:	ldr	r1, [fp, #8]
   15d54:	ldr	r3, [r1, #4]
   15d58:	ldr	r1, [fp, #8]
   15d5c:	ldr	r1, [r1, #8]
   15d60:	ldr	ip, [fp, #8]
   15d64:	ldr	ip, [ip, #12]
   15d68:	ldr	lr, [fp, #8]
   15d6c:	ldr	lr, [lr, #16]
   15d70:	ldr	r4, [fp, #8]
   15d74:	ldr	r4, [r4, #20]
   15d78:	ldr	r5, [fp, #8]
   15d7c:	ldr	r5, [r5, #24]
   15d80:	ldr	r6, [sp, #72]	; 0x48
   15d84:	str	r0, [sp, #68]	; 0x44
   15d88:	mov	r0, r6
   15d8c:	ldr	r7, [sp, #68]	; 0x44
   15d90:	str	r1, [sp, #64]	; 0x40
   15d94:	mov	r1, r7
   15d98:	ldr	r8, [sp, #64]	; 0x40
   15d9c:	str	r8, [sp]
   15da0:	str	ip, [sp, #4]
   15da4:	str	lr, [sp, #8]
   15da8:	str	r4, [sp, #12]
   15dac:	str	r5, [sp, #16]
   15db0:	bl	10f64 <fprintf@plt>
   15db4:	b	15f88 <__assert_fail@plt+0x4f70>
   15db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15dbc:	movw	r1, #48091	; 0xbbdb
   15dc0:	movt	r1, #1
   15dc4:	str	r0, [sp, #60]	; 0x3c
   15dc8:	mov	r0, r1
   15dcc:	bl	10f4c <gettext@plt>
   15dd0:	ldr	r1, [fp, #8]
   15dd4:	ldr	r2, [r1]
   15dd8:	ldr	r1, [fp, #8]
   15ddc:	ldr	r3, [r1, #4]
   15de0:	ldr	r1, [fp, #8]
   15de4:	ldr	r1, [r1, #8]
   15de8:	ldr	ip, [fp, #8]
   15dec:	ldr	ip, [ip, #12]
   15df0:	ldr	lr, [fp, #8]
   15df4:	ldr	lr, [lr, #16]
   15df8:	ldr	r4, [fp, #8]
   15dfc:	ldr	r4, [r4, #20]
   15e00:	ldr	r5, [fp, #8]
   15e04:	ldr	r5, [r5, #24]
   15e08:	ldr	r6, [fp, #8]
   15e0c:	ldr	r6, [r6, #28]
   15e10:	ldr	r7, [sp, #60]	; 0x3c
   15e14:	str	r0, [sp, #56]	; 0x38
   15e18:	mov	r0, r7
   15e1c:	ldr	r8, [sp, #56]	; 0x38
   15e20:	str	r1, [sp, #52]	; 0x34
   15e24:	mov	r1, r8
   15e28:	ldr	r9, [sp, #52]	; 0x34
   15e2c:	str	r9, [sp]
   15e30:	str	ip, [sp, #4]
   15e34:	str	lr, [sp, #8]
   15e38:	str	r4, [sp, #12]
   15e3c:	str	r5, [sp, #16]
   15e40:	str	r6, [sp, #20]
   15e44:	bl	10f64 <fprintf@plt>
   15e48:	b	15f88 <__assert_fail@plt+0x4f70>
   15e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e50:	movw	r1, #48139	; 0xbc0b
   15e54:	movt	r1, #1
   15e58:	str	r0, [sp, #48]	; 0x30
   15e5c:	mov	r0, r1
   15e60:	bl	10f4c <gettext@plt>
   15e64:	ldr	r1, [fp, #8]
   15e68:	ldr	r2, [r1]
   15e6c:	ldr	r1, [fp, #8]
   15e70:	ldr	r3, [r1, #4]
   15e74:	ldr	r1, [fp, #8]
   15e78:	ldr	r1, [r1, #8]
   15e7c:	ldr	ip, [fp, #8]
   15e80:	ldr	ip, [ip, #12]
   15e84:	ldr	lr, [fp, #8]
   15e88:	ldr	lr, [lr, #16]
   15e8c:	ldr	r4, [fp, #8]
   15e90:	ldr	r4, [r4, #20]
   15e94:	ldr	r5, [fp, #8]
   15e98:	ldr	r5, [r5, #24]
   15e9c:	ldr	r6, [fp, #8]
   15ea0:	ldr	r6, [r6, #28]
   15ea4:	ldr	r7, [fp, #8]
   15ea8:	ldr	r7, [r7, #32]
   15eac:	ldr	r8, [sp, #48]	; 0x30
   15eb0:	str	r0, [sp, #44]	; 0x2c
   15eb4:	mov	r0, r8
   15eb8:	ldr	r9, [sp, #44]	; 0x2c
   15ebc:	str	r1, [sp, #40]	; 0x28
   15ec0:	mov	r1, r9
   15ec4:	ldr	sl, [sp, #40]	; 0x28
   15ec8:	str	sl, [sp]
   15ecc:	str	ip, [sp, #4]
   15ed0:	str	lr, [sp, #8]
   15ed4:	str	r4, [sp, #12]
   15ed8:	str	r5, [sp, #16]
   15edc:	str	r6, [sp, #20]
   15ee0:	str	r7, [sp, #24]
   15ee4:	bl	10f64 <fprintf@plt>
   15ee8:	b	15f88 <__assert_fail@plt+0x4f70>
   15eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ef0:	movw	r1, #48191	; 0xbc3f
   15ef4:	movt	r1, #1
   15ef8:	str	r0, [sp, #36]	; 0x24
   15efc:	mov	r0, r1
   15f00:	bl	10f4c <gettext@plt>
   15f04:	ldr	r1, [fp, #8]
   15f08:	ldr	r2, [r1]
   15f0c:	ldr	r1, [fp, #8]
   15f10:	ldr	r3, [r1, #4]
   15f14:	ldr	r1, [fp, #8]
   15f18:	ldr	r1, [r1, #8]
   15f1c:	ldr	ip, [fp, #8]
   15f20:	ldr	ip, [ip, #12]
   15f24:	ldr	lr, [fp, #8]
   15f28:	ldr	lr, [lr, #16]
   15f2c:	ldr	r4, [fp, #8]
   15f30:	ldr	r4, [r4, #20]
   15f34:	ldr	r5, [fp, #8]
   15f38:	ldr	r5, [r5, #24]
   15f3c:	ldr	r6, [fp, #8]
   15f40:	ldr	r6, [r6, #28]
   15f44:	ldr	r7, [fp, #8]
   15f48:	ldr	r7, [r7, #32]
   15f4c:	ldr	r8, [sp, #36]	; 0x24
   15f50:	str	r0, [sp, #32]
   15f54:	mov	r0, r8
   15f58:	ldr	r9, [sp, #32]
   15f5c:	str	r1, [sp, #28]
   15f60:	mov	r1, r9
   15f64:	ldr	sl, [sp, #28]
   15f68:	str	sl, [sp]
   15f6c:	str	ip, [sp, #4]
   15f70:	str	lr, [sp, #8]
   15f74:	str	r4, [sp, #12]
   15f78:	str	r5, [sp, #16]
   15f7c:	str	r6, [sp, #20]
   15f80:	str	r7, [sp, #24]
   15f84:	bl	10f64 <fprintf@plt>
   15f88:	sub	sp, fp, #28
   15f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f90:	push	{fp, lr}
   15f94:	mov	fp, sp
   15f98:	sub	sp, sp, #32
   15f9c:	ldr	ip, [fp, #8]
   15fa0:	str	r0, [fp, #-4]
   15fa4:	str	r1, [fp, #-8]
   15fa8:	str	r2, [fp, #-12]
   15fac:	str	r3, [sp, #16]
   15fb0:	movw	r0, #0
   15fb4:	str	r0, [sp, #12]
   15fb8:	ldr	r0, [fp, #8]
   15fbc:	ldr	r1, [sp, #12]
   15fc0:	add	r0, r0, r1, lsl #2
   15fc4:	ldr	r0, [r0]
   15fc8:	movw	r1, #0
   15fcc:	cmp	r0, r1
   15fd0:	beq	15fe8 <__assert_fail@plt+0x4fd0>
   15fd4:	b	15fd8 <__assert_fail@plt+0x4fc0>
   15fd8:	ldr	r0, [sp, #12]
   15fdc:	add	r0, r0, #1
   15fe0:	str	r0, [sp, #12]
   15fe4:	b	15fb8 <__assert_fail@plt+0x4fa0>
   15fe8:	ldr	r0, [fp, #-4]
   15fec:	ldr	r1, [fp, #-8]
   15ff0:	ldr	r2, [fp, #-12]
   15ff4:	ldr	r3, [sp, #16]
   15ff8:	ldr	ip, [fp, #8]
   15ffc:	ldr	lr, [sp, #12]
   16000:	str	ip, [sp]
   16004:	str	lr, [sp, #4]
   16008:	bl	159a8 <__assert_fail@plt+0x4990>
   1600c:	mov	sp, fp
   16010:	pop	{fp, pc}
   16014:	push	{fp, lr}
   16018:	mov	fp, sp
   1601c:	sub	sp, sp, #80	; 0x50
   16020:	ldr	ip, [fp, #8]
   16024:	str	ip, [fp, #-4]
   16028:	str	r0, [fp, #-8]
   1602c:	str	r1, [fp, #-12]
   16030:	str	r2, [fp, #-16]
   16034:	str	r3, [fp, #-20]	; 0xffffffec
   16038:	movw	r0, #0
   1603c:	str	r0, [fp, #-24]	; 0xffffffe8
   16040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16044:	cmp	r0, #10
   16048:	movw	r0, #0
   1604c:	str	r0, [sp, #12]
   16050:	bcs	16088 <__assert_fail@plt+0x5070>
   16054:	ldr	r0, [fp, #-4]
   16058:	add	r1, r0, #4
   1605c:	str	r1, [fp, #-4]
   16060:	ldr	r0, [r0]
   16064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16068:	add	r2, sp, #16
   1606c:	add	r1, r2, r1, lsl #2
   16070:	str	r0, [r1]
   16074:	movw	r1, #0
   16078:	cmp	r0, r1
   1607c:	movw	r0, #0
   16080:	movne	r0, #1
   16084:	str	r0, [sp, #12]
   16088:	ldr	r0, [sp, #12]
   1608c:	tst	r0, #1
   16090:	beq	160a8 <__assert_fail@plt+0x5090>
   16094:	b	16098 <__assert_fail@plt+0x5080>
   16098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1609c:	add	r0, r0, #1
   160a0:	str	r0, [fp, #-24]	; 0xffffffe8
   160a4:	b	16040 <__assert_fail@plt+0x5028>
   160a8:	add	r0, sp, #16
   160ac:	ldr	r1, [fp, #-8]
   160b0:	ldr	r2, [fp, #-12]
   160b4:	ldr	r3, [fp, #-16]
   160b8:	ldr	ip, [fp, #-20]	; 0xffffffec
   160bc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   160c0:	str	r0, [sp, #8]
   160c4:	mov	r0, r1
   160c8:	mov	r1, r2
   160cc:	mov	r2, r3
   160d0:	mov	r3, ip
   160d4:	ldr	ip, [sp, #8]
   160d8:	str	ip, [sp]
   160dc:	str	lr, [sp, #4]
   160e0:	bl	159a8 <__assert_fail@plt+0x4990>
   160e4:	mov	sp, fp
   160e8:	pop	{fp, pc}
   160ec:	push	{fp, lr}
   160f0:	mov	fp, sp
   160f4:	sub	sp, sp, #24
   160f8:	str	r0, [fp, #-4]
   160fc:	str	r1, [fp, #-8]
   16100:	str	r2, [sp, #12]
   16104:	str	r3, [sp, #8]
   16108:	add	r0, fp, #8
   1610c:	str	r0, [sp, #4]
   16110:	ldr	r0, [fp, #-4]
   16114:	ldr	r1, [fp, #-8]
   16118:	ldr	r2, [sp, #12]
   1611c:	ldr	r3, [sp, #8]
   16120:	ldr	ip, [sp, #4]
   16124:	mov	lr, sp
   16128:	str	ip, [lr]
   1612c:	bl	16014 <__assert_fail@plt+0x4ffc>
   16130:	add	r0, sp, #4
   16134:	mov	sp, fp
   16138:	pop	{fp, pc}
   1613c:	push	{fp, lr}
   16140:	mov	fp, sp
   16144:	sub	sp, sp, #16
   16148:	movw	r0, #49484	; 0xc14c
   1614c:	movt	r0, #2
   16150:	ldr	r1, [r0]
   16154:	movw	r0, #46918	; 0xb746
   16158:	movt	r0, #1
   1615c:	bl	10dcc <fputs_unlocked@plt>
   16160:	movw	r1, #48251	; 0xbc7b
   16164:	movt	r1, #1
   16168:	str	r0, [fp, #-4]
   1616c:	mov	r0, r1
   16170:	bl	10f4c <gettext@plt>
   16174:	movw	r1, #48271	; 0xbc8f
   16178:	movt	r1, #1
   1617c:	bl	10dfc <printf@plt>
   16180:	movw	r1, #48293	; 0xbca5
   16184:	movt	r1, #1
   16188:	str	r0, [sp, #8]
   1618c:	mov	r0, r1
   16190:	bl	10f4c <gettext@plt>
   16194:	movw	r1, #46504	; 0xb5a8
   16198:	movt	r1, #1
   1619c:	movw	r2, #46723	; 0xb683
   161a0:	movt	r2, #1
   161a4:	bl	10dfc <printf@plt>
   161a8:	movw	r1, #48313	; 0xbcb9
   161ac:	movt	r1, #1
   161b0:	str	r0, [sp, #4]
   161b4:	mov	r0, r1
   161b8:	bl	10f4c <gettext@plt>
   161bc:	movw	r1, #48352	; 0xbce0
   161c0:	movt	r1, #1
   161c4:	bl	10dfc <printf@plt>
   161c8:	mov	sp, fp
   161cc:	pop	{fp, pc}
   161d0:	push	{fp, lr}
   161d4:	mov	fp, sp
   161d8:	sub	sp, sp, #16
   161dc:	str	r0, [fp, #-4]
   161e0:	str	r1, [sp, #8]
   161e4:	str	r2, [sp, #4]
   161e8:	ldr	r0, [fp, #-4]
   161ec:	ldr	r1, [sp, #8]
   161f0:	ldr	r2, [sp, #4]
   161f4:	bl	16200 <__assert_fail@plt+0x51e8>
   161f8:	mov	sp, fp
   161fc:	pop	{fp, pc}
   16200:	push	{fp, lr}
   16204:	mov	fp, sp
   16208:	sub	sp, sp, #16
   1620c:	str	r0, [fp, #-4]
   16210:	str	r1, [sp, #8]
   16214:	str	r2, [sp, #4]
   16218:	ldr	r0, [fp, #-4]
   1621c:	ldr	r1, [sp, #8]
   16220:	ldr	r2, [sp, #4]
   16224:	bl	19654 <__assert_fail@plt+0x863c>
   16228:	str	r0, [sp]
   1622c:	ldr	r0, [sp]
   16230:	movw	r1, #0
   16234:	cmp	r0, r1
   16238:	bne	16268 <__assert_fail@plt+0x5250>
   1623c:	ldr	r0, [fp, #-4]
   16240:	movw	r1, #0
   16244:	cmp	r0, r1
   16248:	beq	16264 <__assert_fail@plt+0x524c>
   1624c:	ldr	r0, [sp, #8]
   16250:	cmp	r0, #0
   16254:	beq	16268 <__assert_fail@plt+0x5250>
   16258:	ldr	r0, [sp, #4]
   1625c:	cmp	r0, #0
   16260:	beq	16268 <__assert_fail@plt+0x5250>
   16264:	bl	18fac <__assert_fail@plt+0x7f94>
   16268:	ldr	r0, [sp]
   1626c:	mov	sp, fp
   16270:	pop	{fp, pc}
   16274:	push	{fp, lr}
   16278:	mov	fp, sp
   1627c:	sub	sp, sp, #8
   16280:	str	r0, [sp, #4]
   16284:	ldr	r0, [sp, #4]
   16288:	bl	19098 <__assert_fail@plt+0x8080>
   1628c:	bl	16298 <__assert_fail@plt+0x5280>
   16290:	mov	sp, fp
   16294:	pop	{fp, pc}
   16298:	push	{fp, lr}
   1629c:	mov	fp, sp
   162a0:	sub	sp, sp, #8
   162a4:	str	r0, [sp, #4]
   162a8:	ldr	r0, [sp, #4]
   162ac:	movw	r1, #0
   162b0:	cmp	r0, r1
   162b4:	bne	162bc <__assert_fail@plt+0x52a4>
   162b8:	bl	18fac <__assert_fail@plt+0x7f94>
   162bc:	ldr	r0, [sp, #4]
   162c0:	mov	sp, fp
   162c4:	pop	{fp, pc}
   162c8:	push	{fp, lr}
   162cc:	mov	fp, sp
   162d0:	sub	sp, sp, #8
   162d4:	str	r0, [sp, #4]
   162d8:	ldr	r0, [sp, #4]
   162dc:	bl	19390 <__assert_fail@plt+0x8378>
   162e0:	bl	16298 <__assert_fail@plt+0x5280>
   162e4:	mov	sp, fp
   162e8:	pop	{fp, pc}
   162ec:	push	{fp, lr}
   162f0:	mov	fp, sp
   162f4:	sub	sp, sp, #8
   162f8:	str	r0, [sp, #4]
   162fc:	ldr	r0, [sp, #4]
   16300:	bl	16274 <__assert_fail@plt+0x525c>
   16304:	mov	sp, fp
   16308:	pop	{fp, pc}
   1630c:	push	{fp, lr}
   16310:	mov	fp, sp
   16314:	sub	sp, sp, #16
   16318:	str	r0, [fp, #-4]
   1631c:	str	r1, [sp, #8]
   16320:	ldr	r0, [fp, #-4]
   16324:	ldr	r1, [sp, #8]
   16328:	bl	19108 <__assert_fail@plt+0x80f0>
   1632c:	str	r0, [sp, #4]
   16330:	ldr	r0, [sp, #4]
   16334:	movw	r1, #0
   16338:	cmp	r0, r1
   1633c:	bne	16360 <__assert_fail@plt+0x5348>
   16340:	ldr	r0, [fp, #-4]
   16344:	movw	r1, #0
   16348:	cmp	r0, r1
   1634c:	beq	1635c <__assert_fail@plt+0x5344>
   16350:	ldr	r0, [sp, #8]
   16354:	cmp	r0, #0
   16358:	beq	16360 <__assert_fail@plt+0x5348>
   1635c:	bl	18fac <__assert_fail@plt+0x7f94>
   16360:	ldr	r0, [sp, #4]
   16364:	mov	sp, fp
   16368:	pop	{fp, pc}
   1636c:	push	{fp, lr}
   16370:	mov	fp, sp
   16374:	sub	sp, sp, #8
   16378:	str	r0, [sp, #4]
   1637c:	str	r1, [sp]
   16380:	ldr	r0, [sp, #4]
   16384:	ldr	r1, [sp]
   16388:	bl	193d0 <__assert_fail@plt+0x83b8>
   1638c:	bl	16298 <__assert_fail@plt+0x5280>
   16390:	mov	sp, fp
   16394:	pop	{fp, pc}
   16398:	push	{fp, lr}
   1639c:	mov	fp, sp
   163a0:	sub	sp, sp, #16
   163a4:	str	r0, [fp, #-4]
   163a8:	str	r1, [sp, #8]
   163ac:	str	r2, [sp, #4]
   163b0:	ldr	r0, [fp, #-4]
   163b4:	ldr	r1, [sp, #8]
   163b8:	ldr	r2, [sp, #4]
   163bc:	bl	194c8 <__assert_fail@plt+0x84b0>
   163c0:	bl	16298 <__assert_fail@plt+0x5280>
   163c4:	mov	sp, fp
   163c8:	pop	{fp, pc}
   163cc:	push	{fp, lr}
   163d0:	mov	fp, sp
   163d4:	sub	sp, sp, #8
   163d8:	str	r0, [sp, #4]
   163dc:	str	r1, [sp]
   163e0:	ldr	r1, [sp, #4]
   163e4:	ldr	r2, [sp]
   163e8:	movw	r0, #0
   163ec:	bl	16200 <__assert_fail@plt+0x51e8>
   163f0:	mov	sp, fp
   163f4:	pop	{fp, pc}
   163f8:	push	{fp, lr}
   163fc:	mov	fp, sp
   16400:	sub	sp, sp, #8
   16404:	str	r0, [sp, #4]
   16408:	str	r1, [sp]
   1640c:	ldr	r1, [sp, #4]
   16410:	ldr	r2, [sp]
   16414:	movw	r0, #0
   16418:	bl	16398 <__assert_fail@plt+0x5380>
   1641c:	mov	sp, fp
   16420:	pop	{fp, pc}
   16424:	push	{fp, lr}
   16428:	mov	fp, sp
   1642c:	sub	sp, sp, #8
   16430:	str	r0, [sp, #4]
   16434:	str	r1, [sp]
   16438:	ldr	r0, [sp, #4]
   1643c:	ldr	r1, [sp]
   16440:	movw	r2, #1
   16444:	bl	16450 <__assert_fail@plt+0x5438>
   16448:	mov	sp, fp
   1644c:	pop	{fp, pc}
   16450:	push	{fp, lr}
   16454:	mov	fp, sp
   16458:	sub	sp, sp, #16
   1645c:	str	r0, [fp, #-4]
   16460:	str	r1, [sp, #8]
   16464:	str	r2, [sp, #4]
   16468:	ldr	r0, [sp, #8]
   1646c:	ldr	r0, [r0]
   16470:	str	r0, [sp]
   16474:	ldr	r0, [fp, #-4]
   16478:	movw	r1, #0
   1647c:	cmp	r0, r1
   16480:	bne	164cc <__assert_fail@plt+0x54b4>
   16484:	ldr	r0, [sp]
   16488:	cmp	r0, #0
   1648c:	bne	164c8 <__assert_fail@plt+0x54b0>
   16490:	ldr	r0, [sp, #4]
   16494:	movw	r1, #64	; 0x40
   16498:	udiv	r0, r1, r0
   1649c:	str	r0, [sp]
   164a0:	ldr	r0, [sp]
   164a4:	cmp	r0, #0
   164a8:	movw	r0, #0
   164ac:	movne	r0, #1
   164b0:	mvn	r1, #0
   164b4:	eor	r0, r0, r1
   164b8:	and	r0, r0, #1
   164bc:	ldr	r1, [sp]
   164c0:	add	r0, r1, r0
   164c4:	str	r0, [sp]
   164c8:	b	164fc <__assert_fail@plt+0x54e4>
   164cc:	ldr	r0, [sp]
   164d0:	ldr	r1, [sp]
   164d4:	lsr	r1, r1, #1
   164d8:	add	r1, r1, #1
   164dc:	adds	r0, r0, r1
   164e0:	mov	r1, #0
   164e4:	adc	r1, r1, #0
   164e8:	str	r0, [sp]
   164ec:	tst	r1, #1
   164f0:	beq	164f8 <__assert_fail@plt+0x54e0>
   164f4:	bl	18fac <__assert_fail@plt+0x7f94>
   164f8:	b	164fc <__assert_fail@plt+0x54e4>
   164fc:	ldr	r0, [fp, #-4]
   16500:	ldr	r1, [sp]
   16504:	ldr	r2, [sp, #4]
   16508:	bl	16200 <__assert_fail@plt+0x51e8>
   1650c:	str	r0, [fp, #-4]
   16510:	ldr	r0, [sp]
   16514:	ldr	r1, [sp, #8]
   16518:	str	r0, [r1]
   1651c:	ldr	r0, [fp, #-4]
   16520:	mov	sp, fp
   16524:	pop	{fp, pc}
   16528:	push	{fp, lr}
   1652c:	mov	fp, sp
   16530:	sub	sp, sp, #216	; 0xd8
   16534:	ldr	ip, [fp, #8]
   16538:	str	r0, [fp, #-4]
   1653c:	str	r1, [fp, #-8]
   16540:	str	r2, [fp, #-12]
   16544:	str	r3, [fp, #-16]
   16548:	ldr	r0, [fp, #-8]
   1654c:	ldr	r0, [r0]
   16550:	str	r0, [fp, #-20]	; 0xffffffec
   16554:	ldr	r0, [fp, #-20]	; 0xffffffec
   16558:	ldr	r1, [fp, #-20]	; 0xffffffec
   1655c:	asr	r1, r1, #1
   16560:	add	r1, r0, r1
   16564:	mov	r2, #1
   16568:	cmp	r1, r0
   1656c:	movwvc	r2, #0
   16570:	str	r1, [fp, #-24]	; 0xffffffe8
   16574:	tst	r2, #1
   16578:	beq	16584 <__assert_fail@plt+0x556c>
   1657c:	ldr	r0, [pc, #4036]	; 17548 <__assert_fail@plt+0x6530>
   16580:	str	r0, [fp, #-24]	; 0xffffffe8
   16584:	ldr	r0, [fp, #-16]
   16588:	movw	r1, #0
   1658c:	cmp	r1, r0
   16590:	bgt	165ac <__assert_fail@plt+0x5594>
   16594:	ldr	r0, [fp, #-16]
   16598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1659c:	cmp	r0, r1
   165a0:	bge	165ac <__assert_fail@plt+0x5594>
   165a4:	ldr	r0, [fp, #-16]
   165a8:	str	r0, [fp, #-24]	; 0xffffffe8
   165ac:	b	16984 <__assert_fail@plt+0x596c>
   165b0:	b	165b4 <__assert_fail@plt+0x559c>
   165b4:	ldr	r0, [fp, #8]
   165b8:	cmp	r0, #0
   165bc:	bge	166d0 <__assert_fail@plt+0x56b8>
   165c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165c4:	cmp	r0, #0
   165c8:	bge	16654 <__assert_fail@plt+0x563c>
   165cc:	b	165d0 <__assert_fail@plt+0x55b8>
   165d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d4:	ldr	r1, [fp, #8]
   165d8:	movw	r2, #127	; 0x7f
   165dc:	sdiv	r1, r2, r1
   165e0:	cmp	r0, r1
   165e4:	blt	16770 <__assert_fail@plt+0x5758>
   165e8:	b	16788 <__assert_fail@plt+0x5770>
   165ec:	b	165f0 <__assert_fail@plt+0x55d8>
   165f0:	ldr	r0, [pc, #4084]	; 175ec <__assert_fail@plt+0x65d4>
   165f4:	ldr	r1, [fp, #8]
   165f8:	cmp	r1, r0
   165fc:	blt	16614 <__assert_fail@plt+0x55fc>
   16600:	b	16620 <__assert_fail@plt+0x5608>
   16604:	ldr	r0, [fp, #8]
   16608:	movw	r1, #0
   1660c:	cmp	r1, r0
   16610:	bge	16620 <__assert_fail@plt+0x5608>
   16614:	movw	r0, #0
   16618:	str	r0, [fp, #-36]	; 0xffffffdc
   1661c:	b	16638 <__assert_fail@plt+0x5620>
   16620:	ldr	r0, [fp, #8]
   16624:	movw	r1, #0
   16628:	sub	r0, r1, r0
   1662c:	movw	r1, #127	; 0x7f
   16630:	sdiv	r0, r1, r0
   16634:	str	r0, [fp, #-36]	; 0xffffffdc
   16638:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1663c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16640:	mvn	r2, #0
   16644:	sub	r1, r2, r1
   16648:	cmp	r0, r1
   1664c:	ble	16770 <__assert_fail@plt+0x5758>
   16650:	b	16788 <__assert_fail@plt+0x5770>
   16654:	b	16658 <__assert_fail@plt+0x5640>
   16658:	b	166b4 <__assert_fail@plt+0x569c>
   1665c:	b	166b4 <__assert_fail@plt+0x569c>
   16660:	ldr	r0, [fp, #8]
   16664:	cmn	r0, #1
   16668:	bne	166b4 <__assert_fail@plt+0x569c>
   1666c:	b	16670 <__assert_fail@plt+0x5658>
   16670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16674:	mvn	r1, #127	; 0x7f
   16678:	add	r0, r0, r1
   1667c:	movw	r1, #0
   16680:	cmp	r1, r0
   16684:	blt	16770 <__assert_fail@plt+0x5758>
   16688:	b	16788 <__assert_fail@plt+0x5770>
   1668c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16690:	movw	r1, #0
   16694:	cmp	r1, r0
   16698:	bge	16788 <__assert_fail@plt+0x5770>
   1669c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166a0:	sub	r0, r0, #1
   166a4:	movw	r1, #127	; 0x7f
   166a8:	cmp	r1, r0
   166ac:	blt	16770 <__assert_fail@plt+0x5758>
   166b0:	b	16788 <__assert_fail@plt+0x5770>
   166b4:	ldr	r0, [fp, #8]
   166b8:	mvn	r1, #127	; 0x7f
   166bc:	sdiv	r0, r1, r0
   166c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166c4:	cmp	r0, r1
   166c8:	blt	16770 <__assert_fail@plt+0x5758>
   166cc:	b	16788 <__assert_fail@plt+0x5770>
   166d0:	ldr	r0, [fp, #8]
   166d4:	cmp	r0, #0
   166d8:	bne	166e0 <__assert_fail@plt+0x56c8>
   166dc:	b	16788 <__assert_fail@plt+0x5770>
   166e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166e4:	cmp	r0, #0
   166e8:	bge	16758 <__assert_fail@plt+0x5740>
   166ec:	b	166f0 <__assert_fail@plt+0x56d8>
   166f0:	b	1673c <__assert_fail@plt+0x5724>
   166f4:	b	1673c <__assert_fail@plt+0x5724>
   166f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166fc:	cmn	r0, #1
   16700:	bne	1673c <__assert_fail@plt+0x5724>
   16704:	b	16708 <__assert_fail@plt+0x56f0>
   16708:	ldr	r0, [fp, #8]
   1670c:	mvn	r1, #127	; 0x7f
   16710:	add	r0, r0, r1
   16714:	movw	r1, #0
   16718:	cmp	r1, r0
   1671c:	blt	16770 <__assert_fail@plt+0x5758>
   16720:	b	16788 <__assert_fail@plt+0x5770>
   16724:	ldr	r0, [fp, #8]
   16728:	sub	r0, r0, #1
   1672c:	movw	r1, #127	; 0x7f
   16730:	cmp	r1, r0
   16734:	blt	16770 <__assert_fail@plt+0x5758>
   16738:	b	16788 <__assert_fail@plt+0x5770>
   1673c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16740:	mvn	r1, #127	; 0x7f
   16744:	sdiv	r0, r1, r0
   16748:	ldr	r1, [fp, #8]
   1674c:	cmp	r0, r1
   16750:	blt	16770 <__assert_fail@plt+0x5758>
   16754:	b	16788 <__assert_fail@plt+0x5770>
   16758:	ldr	r0, [fp, #8]
   1675c:	movw	r1, #127	; 0x7f
   16760:	sdiv	r0, r1, r0
   16764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16768:	cmp	r0, r1
   1676c:	bge	16788 <__assert_fail@plt+0x5770>
   16770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16774:	ldr	r1, [fp, #8]
   16778:	mul	r0, r0, r1
   1677c:	sxtb	r0, r0
   16780:	str	r0, [fp, #-28]	; 0xffffffe4
   16784:	b	1794c <__assert_fail@plt+0x6934>
   16788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1678c:	ldr	r1, [fp, #8]
   16790:	mul	r0, r0, r1
   16794:	sxtb	r0, r0
   16798:	str	r0, [fp, #-28]	; 0xffffffe4
   1679c:	b	17958 <__assert_fail@plt+0x6940>
   167a0:	ldr	r0, [fp, #8]
   167a4:	cmp	r0, #0
   167a8:	bge	168b8 <__assert_fail@plt+0x58a0>
   167ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167b0:	cmp	r0, #0
   167b4:	bge	16840 <__assert_fail@plt+0x5828>
   167b8:	b	167bc <__assert_fail@plt+0x57a4>
   167bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167c0:	ldr	r1, [fp, #8]
   167c4:	movw	r2, #255	; 0xff
   167c8:	sdiv	r1, r2, r1
   167cc:	cmp	r0, r1
   167d0:	blt	16954 <__assert_fail@plt+0x593c>
   167d4:	b	1696c <__assert_fail@plt+0x5954>
   167d8:	b	167dc <__assert_fail@plt+0x57c4>
   167dc:	ldr	r0, [pc, #3592]	; 175ec <__assert_fail@plt+0x65d4>
   167e0:	ldr	r1, [fp, #8]
   167e4:	cmp	r1, r0
   167e8:	blt	16800 <__assert_fail@plt+0x57e8>
   167ec:	b	1680c <__assert_fail@plt+0x57f4>
   167f0:	ldr	r0, [fp, #8]
   167f4:	movw	r1, #0
   167f8:	cmp	r1, r0
   167fc:	bge	1680c <__assert_fail@plt+0x57f4>
   16800:	movw	r0, #0
   16804:	str	r0, [fp, #-40]	; 0xffffffd8
   16808:	b	16824 <__assert_fail@plt+0x580c>
   1680c:	ldr	r0, [fp, #8]
   16810:	movw	r1, #0
   16814:	sub	r0, r1, r0
   16818:	movw	r1, #255	; 0xff
   1681c:	sdiv	r0, r1, r0
   16820:	str	r0, [fp, #-40]	; 0xffffffd8
   16824:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16828:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1682c:	mvn	r2, #0
   16830:	sub	r1, r2, r1
   16834:	cmp	r0, r1
   16838:	ble	16954 <__assert_fail@plt+0x593c>
   1683c:	b	1696c <__assert_fail@plt+0x5954>
   16840:	b	16844 <__assert_fail@plt+0x582c>
   16844:	b	1689c <__assert_fail@plt+0x5884>
   16848:	b	1689c <__assert_fail@plt+0x5884>
   1684c:	ldr	r0, [fp, #8]
   16850:	cmn	r0, #1
   16854:	bne	1689c <__assert_fail@plt+0x5884>
   16858:	b	1685c <__assert_fail@plt+0x5844>
   1685c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16860:	add	r0, r0, #0
   16864:	movw	r1, #0
   16868:	cmp	r1, r0
   1686c:	blt	16954 <__assert_fail@plt+0x593c>
   16870:	b	1696c <__assert_fail@plt+0x5954>
   16874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16878:	movw	r1, #0
   1687c:	cmp	r1, r0
   16880:	bge	1696c <__assert_fail@plt+0x5954>
   16884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16888:	sub	r0, r0, #1
   1688c:	mvn	r1, #0
   16890:	cmp	r1, r0
   16894:	blt	16954 <__assert_fail@plt+0x593c>
   16898:	b	1696c <__assert_fail@plt+0x5954>
   1689c:	ldr	r0, [fp, #8]
   168a0:	movw	r1, #0
   168a4:	sdiv	r0, r1, r0
   168a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168ac:	cmp	r0, r1
   168b0:	blt	16954 <__assert_fail@plt+0x593c>
   168b4:	b	1696c <__assert_fail@plt+0x5954>
   168b8:	ldr	r0, [fp, #8]
   168bc:	cmp	r0, #0
   168c0:	bne	168c8 <__assert_fail@plt+0x58b0>
   168c4:	b	1696c <__assert_fail@plt+0x5954>
   168c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168cc:	cmp	r0, #0
   168d0:	bge	1693c <__assert_fail@plt+0x5924>
   168d4:	b	168d8 <__assert_fail@plt+0x58c0>
   168d8:	b	16920 <__assert_fail@plt+0x5908>
   168dc:	b	16920 <__assert_fail@plt+0x5908>
   168e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168e4:	cmn	r0, #1
   168e8:	bne	16920 <__assert_fail@plt+0x5908>
   168ec:	b	168f0 <__assert_fail@plt+0x58d8>
   168f0:	ldr	r0, [fp, #8]
   168f4:	add	r0, r0, #0
   168f8:	movw	r1, #0
   168fc:	cmp	r1, r0
   16900:	blt	16954 <__assert_fail@plt+0x593c>
   16904:	b	1696c <__assert_fail@plt+0x5954>
   16908:	ldr	r0, [fp, #8]
   1690c:	sub	r0, r0, #1
   16910:	mvn	r1, #0
   16914:	cmp	r1, r0
   16918:	blt	16954 <__assert_fail@plt+0x593c>
   1691c:	b	1696c <__assert_fail@plt+0x5954>
   16920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16924:	movw	r1, #0
   16928:	sdiv	r0, r1, r0
   1692c:	ldr	r1, [fp, #8]
   16930:	cmp	r0, r1
   16934:	blt	16954 <__assert_fail@plt+0x593c>
   16938:	b	1696c <__assert_fail@plt+0x5954>
   1693c:	ldr	r0, [fp, #8]
   16940:	movw	r1, #255	; 0xff
   16944:	sdiv	r0, r1, r0
   16948:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1694c:	cmp	r0, r1
   16950:	bge	1696c <__assert_fail@plt+0x5954>
   16954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16958:	ldr	r1, [fp, #8]
   1695c:	mul	r0, r0, r1
   16960:	and	r0, r0, #255	; 0xff
   16964:	str	r0, [fp, #-28]	; 0xffffffe4
   16968:	b	1794c <__assert_fail@plt+0x6934>
   1696c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16970:	ldr	r1, [fp, #8]
   16974:	mul	r0, r0, r1
   16978:	and	r0, r0, #255	; 0xff
   1697c:	str	r0, [fp, #-28]	; 0xffffffe4
   16980:	b	17958 <__assert_fail@plt+0x6940>
   16984:	b	16d5c <__assert_fail@plt+0x5d44>
   16988:	b	1698c <__assert_fail@plt+0x5974>
   1698c:	ldr	r0, [fp, #8]
   16990:	cmp	r0, #0
   16994:	bge	16aa8 <__assert_fail@plt+0x5a90>
   16998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1699c:	cmp	r0, #0
   169a0:	bge	16a2c <__assert_fail@plt+0x5a14>
   169a4:	b	169a8 <__assert_fail@plt+0x5990>
   169a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169ac:	ldr	r1, [fp, #8]
   169b0:	movw	r2, #32767	; 0x7fff
   169b4:	sdiv	r1, r2, r1
   169b8:	cmp	r0, r1
   169bc:	blt	16b48 <__assert_fail@plt+0x5b30>
   169c0:	b	16b60 <__assert_fail@plt+0x5b48>
   169c4:	b	169c8 <__assert_fail@plt+0x59b0>
   169c8:	ldr	r0, [pc, #3100]	; 175ec <__assert_fail@plt+0x65d4>
   169cc:	ldr	r1, [fp, #8]
   169d0:	cmp	r1, r0
   169d4:	blt	169ec <__assert_fail@plt+0x59d4>
   169d8:	b	169f8 <__assert_fail@plt+0x59e0>
   169dc:	ldr	r0, [fp, #8]
   169e0:	movw	r1, #0
   169e4:	cmp	r1, r0
   169e8:	bge	169f8 <__assert_fail@plt+0x59e0>
   169ec:	movw	r0, #0
   169f0:	str	r0, [fp, #-44]	; 0xffffffd4
   169f4:	b	16a10 <__assert_fail@plt+0x59f8>
   169f8:	ldr	r0, [fp, #8]
   169fc:	movw	r1, #0
   16a00:	sub	r0, r1, r0
   16a04:	movw	r1, #32767	; 0x7fff
   16a08:	sdiv	r0, r1, r0
   16a0c:	str	r0, [fp, #-44]	; 0xffffffd4
   16a10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a18:	mvn	r2, #0
   16a1c:	sub	r1, r2, r1
   16a20:	cmp	r0, r1
   16a24:	ble	16b48 <__assert_fail@plt+0x5b30>
   16a28:	b	16b60 <__assert_fail@plt+0x5b48>
   16a2c:	b	16a30 <__assert_fail@plt+0x5a18>
   16a30:	b	16a8c <__assert_fail@plt+0x5a74>
   16a34:	b	16a8c <__assert_fail@plt+0x5a74>
   16a38:	ldr	r0, [fp, #8]
   16a3c:	cmn	r0, #1
   16a40:	bne	16a8c <__assert_fail@plt+0x5a74>
   16a44:	b	16a48 <__assert_fail@plt+0x5a30>
   16a48:	ldr	r0, [pc, #4068]	; 17a34 <__assert_fail@plt+0x6a1c>
   16a4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a50:	add	r0, r1, r0
   16a54:	movw	r1, #0
   16a58:	cmp	r1, r0
   16a5c:	blt	16b48 <__assert_fail@plt+0x5b30>
   16a60:	b	16b60 <__assert_fail@plt+0x5b48>
   16a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a68:	movw	r1, #0
   16a6c:	cmp	r1, r0
   16a70:	bge	16b60 <__assert_fail@plt+0x5b48>
   16a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a78:	sub	r0, r0, #1
   16a7c:	movw	r1, #32767	; 0x7fff
   16a80:	cmp	r1, r0
   16a84:	blt	16b48 <__assert_fail@plt+0x5b30>
   16a88:	b	16b60 <__assert_fail@plt+0x5b48>
   16a8c:	ldr	r0, [pc, #4000]	; 17a34 <__assert_fail@plt+0x6a1c>
   16a90:	ldr	r1, [fp, #8]
   16a94:	sdiv	r0, r0, r1
   16a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a9c:	cmp	r0, r1
   16aa0:	blt	16b48 <__assert_fail@plt+0x5b30>
   16aa4:	b	16b60 <__assert_fail@plt+0x5b48>
   16aa8:	ldr	r0, [fp, #8]
   16aac:	cmp	r0, #0
   16ab0:	bne	16ab8 <__assert_fail@plt+0x5aa0>
   16ab4:	b	16b60 <__assert_fail@plt+0x5b48>
   16ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16abc:	cmp	r0, #0
   16ac0:	bge	16b30 <__assert_fail@plt+0x5b18>
   16ac4:	b	16ac8 <__assert_fail@plt+0x5ab0>
   16ac8:	b	16b14 <__assert_fail@plt+0x5afc>
   16acc:	b	16b14 <__assert_fail@plt+0x5afc>
   16ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad4:	cmn	r0, #1
   16ad8:	bne	16b14 <__assert_fail@plt+0x5afc>
   16adc:	b	16ae0 <__assert_fail@plt+0x5ac8>
   16ae0:	ldr	r0, [pc, #3916]	; 17a34 <__assert_fail@plt+0x6a1c>
   16ae4:	ldr	r1, [fp, #8]
   16ae8:	add	r0, r1, r0
   16aec:	movw	r1, #0
   16af0:	cmp	r1, r0
   16af4:	blt	16b48 <__assert_fail@plt+0x5b30>
   16af8:	b	16b60 <__assert_fail@plt+0x5b48>
   16afc:	ldr	r0, [fp, #8]
   16b00:	sub	r0, r0, #1
   16b04:	movw	r1, #32767	; 0x7fff
   16b08:	cmp	r1, r0
   16b0c:	blt	16b48 <__assert_fail@plt+0x5b30>
   16b10:	b	16b60 <__assert_fail@plt+0x5b48>
   16b14:	ldr	r0, [pc, #3864]	; 17a34 <__assert_fail@plt+0x6a1c>
   16b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b1c:	sdiv	r0, r0, r1
   16b20:	ldr	r1, [fp, #8]
   16b24:	cmp	r0, r1
   16b28:	blt	16b48 <__assert_fail@plt+0x5b30>
   16b2c:	b	16b60 <__assert_fail@plt+0x5b48>
   16b30:	ldr	r0, [fp, #8]
   16b34:	movw	r1, #32767	; 0x7fff
   16b38:	sdiv	r0, r1, r0
   16b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b40:	cmp	r0, r1
   16b44:	bge	16b60 <__assert_fail@plt+0x5b48>
   16b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b4c:	ldr	r1, [fp, #8]
   16b50:	mul	r0, r0, r1
   16b54:	sxth	r0, r0
   16b58:	str	r0, [fp, #-28]	; 0xffffffe4
   16b5c:	b	1794c <__assert_fail@plt+0x6934>
   16b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b64:	ldr	r1, [fp, #8]
   16b68:	mul	r0, r0, r1
   16b6c:	sxth	r0, r0
   16b70:	str	r0, [fp, #-28]	; 0xffffffe4
   16b74:	b	17958 <__assert_fail@plt+0x6940>
   16b78:	ldr	r0, [fp, #8]
   16b7c:	cmp	r0, #0
   16b80:	bge	16c90 <__assert_fail@plt+0x5c78>
   16b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b88:	cmp	r0, #0
   16b8c:	bge	16c18 <__assert_fail@plt+0x5c00>
   16b90:	b	16b94 <__assert_fail@plt+0x5b7c>
   16b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b98:	ldr	r1, [fp, #8]
   16b9c:	movw	r2, #65535	; 0xffff
   16ba0:	sdiv	r1, r2, r1
   16ba4:	cmp	r0, r1
   16ba8:	blt	16d2c <__assert_fail@plt+0x5d14>
   16bac:	b	16d44 <__assert_fail@plt+0x5d2c>
   16bb0:	b	16bb4 <__assert_fail@plt+0x5b9c>
   16bb4:	ldr	r0, [pc, #2608]	; 175ec <__assert_fail@plt+0x65d4>
   16bb8:	ldr	r1, [fp, #8]
   16bbc:	cmp	r1, r0
   16bc0:	blt	16bd8 <__assert_fail@plt+0x5bc0>
   16bc4:	b	16be4 <__assert_fail@plt+0x5bcc>
   16bc8:	ldr	r0, [fp, #8]
   16bcc:	movw	r1, #0
   16bd0:	cmp	r1, r0
   16bd4:	bge	16be4 <__assert_fail@plt+0x5bcc>
   16bd8:	movw	r0, #0
   16bdc:	str	r0, [fp, #-48]	; 0xffffffd0
   16be0:	b	16bfc <__assert_fail@plt+0x5be4>
   16be4:	ldr	r0, [fp, #8]
   16be8:	movw	r1, #0
   16bec:	sub	r0, r1, r0
   16bf0:	movw	r1, #65535	; 0xffff
   16bf4:	sdiv	r0, r1, r0
   16bf8:	str	r0, [fp, #-48]	; 0xffffffd0
   16bfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c04:	mvn	r2, #0
   16c08:	sub	r1, r2, r1
   16c0c:	cmp	r0, r1
   16c10:	ble	16d2c <__assert_fail@plt+0x5d14>
   16c14:	b	16d44 <__assert_fail@plt+0x5d2c>
   16c18:	b	16c1c <__assert_fail@plt+0x5c04>
   16c1c:	b	16c74 <__assert_fail@plt+0x5c5c>
   16c20:	b	16c74 <__assert_fail@plt+0x5c5c>
   16c24:	ldr	r0, [fp, #8]
   16c28:	cmn	r0, #1
   16c2c:	bne	16c74 <__assert_fail@plt+0x5c5c>
   16c30:	b	16c34 <__assert_fail@plt+0x5c1c>
   16c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c38:	add	r0, r0, #0
   16c3c:	movw	r1, #0
   16c40:	cmp	r1, r0
   16c44:	blt	16d2c <__assert_fail@plt+0x5d14>
   16c48:	b	16d44 <__assert_fail@plt+0x5d2c>
   16c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c50:	movw	r1, #0
   16c54:	cmp	r1, r0
   16c58:	bge	16d44 <__assert_fail@plt+0x5d2c>
   16c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c60:	sub	r0, r0, #1
   16c64:	mvn	r1, #0
   16c68:	cmp	r1, r0
   16c6c:	blt	16d2c <__assert_fail@plt+0x5d14>
   16c70:	b	16d44 <__assert_fail@plt+0x5d2c>
   16c74:	ldr	r0, [fp, #8]
   16c78:	movw	r1, #0
   16c7c:	sdiv	r0, r1, r0
   16c80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c84:	cmp	r0, r1
   16c88:	blt	16d2c <__assert_fail@plt+0x5d14>
   16c8c:	b	16d44 <__assert_fail@plt+0x5d2c>
   16c90:	ldr	r0, [fp, #8]
   16c94:	cmp	r0, #0
   16c98:	bne	16ca0 <__assert_fail@plt+0x5c88>
   16c9c:	b	16d44 <__assert_fail@plt+0x5d2c>
   16ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ca4:	cmp	r0, #0
   16ca8:	bge	16d14 <__assert_fail@plt+0x5cfc>
   16cac:	b	16cb0 <__assert_fail@plt+0x5c98>
   16cb0:	b	16cf8 <__assert_fail@plt+0x5ce0>
   16cb4:	b	16cf8 <__assert_fail@plt+0x5ce0>
   16cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cbc:	cmn	r0, #1
   16cc0:	bne	16cf8 <__assert_fail@plt+0x5ce0>
   16cc4:	b	16cc8 <__assert_fail@plt+0x5cb0>
   16cc8:	ldr	r0, [fp, #8]
   16ccc:	add	r0, r0, #0
   16cd0:	movw	r1, #0
   16cd4:	cmp	r1, r0
   16cd8:	blt	16d2c <__assert_fail@plt+0x5d14>
   16cdc:	b	16d44 <__assert_fail@plt+0x5d2c>
   16ce0:	ldr	r0, [fp, #8]
   16ce4:	sub	r0, r0, #1
   16ce8:	mvn	r1, #0
   16cec:	cmp	r1, r0
   16cf0:	blt	16d2c <__assert_fail@plt+0x5d14>
   16cf4:	b	16d44 <__assert_fail@plt+0x5d2c>
   16cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cfc:	movw	r1, #0
   16d00:	sdiv	r0, r1, r0
   16d04:	ldr	r1, [fp, #8]
   16d08:	cmp	r0, r1
   16d0c:	blt	16d2c <__assert_fail@plt+0x5d14>
   16d10:	b	16d44 <__assert_fail@plt+0x5d2c>
   16d14:	ldr	r0, [fp, #8]
   16d18:	movw	r1, #65535	; 0xffff
   16d1c:	sdiv	r0, r1, r0
   16d20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d24:	cmp	r0, r1
   16d28:	bge	16d44 <__assert_fail@plt+0x5d2c>
   16d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d30:	ldr	r1, [fp, #8]
   16d34:	mul	r0, r0, r1
   16d38:	uxth	r0, r0
   16d3c:	str	r0, [fp, #-28]	; 0xffffffe4
   16d40:	b	1794c <__assert_fail@plt+0x6934>
   16d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d48:	ldr	r1, [fp, #8]
   16d4c:	mul	r0, r0, r1
   16d50:	uxth	r0, r0
   16d54:	str	r0, [fp, #-28]	; 0xffffffe4
   16d58:	b	17958 <__assert_fail@plt+0x6940>
   16d5c:	b	16d60 <__assert_fail@plt+0x5d48>
   16d60:	b	16d64 <__assert_fail@plt+0x5d4c>
   16d64:	ldr	r0, [fp, #8]
   16d68:	cmp	r0, #0
   16d6c:	bge	16e70 <__assert_fail@plt+0x5e58>
   16d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d74:	cmp	r0, #0
   16d78:	bge	16e04 <__assert_fail@plt+0x5dec>
   16d7c:	b	16d80 <__assert_fail@plt+0x5d68>
   16d80:	ldr	r0, [pc, #1984]	; 17548 <__assert_fail@plt+0x6530>
   16d84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d88:	ldr	r2, [fp, #8]
   16d8c:	sdiv	r0, r0, r2
   16d90:	cmp	r1, r0
   16d94:	blt	16f00 <__assert_fail@plt+0x5ee8>
   16d98:	b	16f14 <__assert_fail@plt+0x5efc>
   16d9c:	b	16da0 <__assert_fail@plt+0x5d88>
   16da0:	ldr	r0, [pc, #2116]	; 175ec <__assert_fail@plt+0x65d4>
   16da4:	ldr	r1, [fp, #8]
   16da8:	cmp	r1, r0
   16dac:	blt	16dc4 <__assert_fail@plt+0x5dac>
   16db0:	b	16dd0 <__assert_fail@plt+0x5db8>
   16db4:	ldr	r0, [fp, #8]
   16db8:	movw	r1, #0
   16dbc:	cmp	r1, r0
   16dc0:	bge	16dd0 <__assert_fail@plt+0x5db8>
   16dc4:	movw	r0, #0
   16dc8:	str	r0, [fp, #-52]	; 0xffffffcc
   16dcc:	b	16de8 <__assert_fail@plt+0x5dd0>
   16dd0:	ldr	r0, [pc, #1904]	; 17548 <__assert_fail@plt+0x6530>
   16dd4:	ldr	r1, [fp, #8]
   16dd8:	movw	r2, #0
   16ddc:	sub	r1, r2, r1
   16de0:	sdiv	r0, r0, r1
   16de4:	str	r0, [fp, #-52]	; 0xffffffcc
   16de8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16dec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16df0:	mvn	r2, #0
   16df4:	sub	r1, r2, r1
   16df8:	cmp	r0, r1
   16dfc:	ble	16f00 <__assert_fail@plt+0x5ee8>
   16e00:	b	16f14 <__assert_fail@plt+0x5efc>
   16e04:	ldr	r0, [fp, #8]
   16e08:	cmn	r0, #1
   16e0c:	bne	16e54 <__assert_fail@plt+0x5e3c>
   16e10:	b	16e14 <__assert_fail@plt+0x5dfc>
   16e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e18:	add	r0, r0, #-2147483648	; 0x80000000
   16e1c:	movw	r1, #0
   16e20:	cmp	r1, r0
   16e24:	blt	16f00 <__assert_fail@plt+0x5ee8>
   16e28:	b	16f14 <__assert_fail@plt+0x5efc>
   16e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e30:	movw	r1, #0
   16e34:	cmp	r1, r0
   16e38:	bge	16f14 <__assert_fail@plt+0x5efc>
   16e3c:	ldr	r0, [pc, #1796]	; 17548 <__assert_fail@plt+0x6530>
   16e40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e44:	sub	r1, r1, #1
   16e48:	cmp	r0, r1
   16e4c:	blt	16f00 <__assert_fail@plt+0x5ee8>
   16e50:	b	16f14 <__assert_fail@plt+0x5efc>
   16e54:	ldr	r0, [pc, #4080]	; 17e4c <__assert_fail@plt+0x6e34>
   16e58:	ldr	r1, [fp, #8]
   16e5c:	sdiv	r0, r0, r1
   16e60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e64:	cmp	r0, r1
   16e68:	blt	16f00 <__assert_fail@plt+0x5ee8>
   16e6c:	b	16f14 <__assert_fail@plt+0x5efc>
   16e70:	ldr	r0, [fp, #8]
   16e74:	cmp	r0, #0
   16e78:	bne	16e80 <__assert_fail@plt+0x5e68>
   16e7c:	b	16f14 <__assert_fail@plt+0x5efc>
   16e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e84:	cmp	r0, #0
   16e88:	bge	16ee8 <__assert_fail@plt+0x5ed0>
   16e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e90:	cmn	r0, #1
   16e94:	bne	16ecc <__assert_fail@plt+0x5eb4>
   16e98:	b	16e9c <__assert_fail@plt+0x5e84>
   16e9c:	ldr	r0, [fp, #8]
   16ea0:	add	r0, r0, #-2147483648	; 0x80000000
   16ea4:	movw	r1, #0
   16ea8:	cmp	r1, r0
   16eac:	blt	16f00 <__assert_fail@plt+0x5ee8>
   16eb0:	b	16f14 <__assert_fail@plt+0x5efc>
   16eb4:	ldr	r0, [pc, #1676]	; 17548 <__assert_fail@plt+0x6530>
   16eb8:	ldr	r1, [fp, #8]
   16ebc:	sub	r1, r1, #1
   16ec0:	cmp	r0, r1
   16ec4:	blt	16f00 <__assert_fail@plt+0x5ee8>
   16ec8:	b	16f14 <__assert_fail@plt+0x5efc>
   16ecc:	ldr	r0, [pc, #3960]	; 17e4c <__assert_fail@plt+0x6e34>
   16ed0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ed4:	sdiv	r0, r0, r1
   16ed8:	ldr	r1, [fp, #8]
   16edc:	cmp	r0, r1
   16ee0:	blt	16f00 <__assert_fail@plt+0x5ee8>
   16ee4:	b	16f14 <__assert_fail@plt+0x5efc>
   16ee8:	ldr	r0, [pc, #1624]	; 17548 <__assert_fail@plt+0x6530>
   16eec:	ldr	r1, [fp, #8]
   16ef0:	sdiv	r0, r0, r1
   16ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ef8:	cmp	r0, r1
   16efc:	bge	16f14 <__assert_fail@plt+0x5efc>
   16f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f04:	ldr	r1, [fp, #8]
   16f08:	mul	r0, r0, r1
   16f0c:	str	r0, [fp, #-28]	; 0xffffffe4
   16f10:	b	1794c <__assert_fail@plt+0x6934>
   16f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f18:	ldr	r1, [fp, #8]
   16f1c:	mul	r0, r0, r1
   16f20:	str	r0, [fp, #-28]	; 0xffffffe4
   16f24:	b	17958 <__assert_fail@plt+0x6940>
   16f28:	ldr	r0, [fp, #8]
   16f2c:	cmp	r0, #0
   16f30:	bge	17040 <__assert_fail@plt+0x6028>
   16f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f38:	cmp	r0, #0
   16f3c:	bge	16fc8 <__assert_fail@plt+0x5fb0>
   16f40:	b	16f60 <__assert_fail@plt+0x5f48>
   16f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f48:	ldr	r1, [fp, #8]
   16f4c:	mvn	r2, #0
   16f50:	udiv	r1, r2, r1
   16f54:	cmp	r0, r1
   16f58:	bcc	170dc <__assert_fail@plt+0x60c4>
   16f5c:	b	170f0 <__assert_fail@plt+0x60d8>
   16f60:	b	16f64 <__assert_fail@plt+0x5f4c>
   16f64:	ldr	r0, [pc, #1664]	; 175ec <__assert_fail@plt+0x65d4>
   16f68:	ldr	r1, [fp, #8]
   16f6c:	cmp	r1, r0
   16f70:	blt	16f88 <__assert_fail@plt+0x5f70>
   16f74:	b	16f94 <__assert_fail@plt+0x5f7c>
   16f78:	ldr	r0, [fp, #8]
   16f7c:	movw	r1, #0
   16f80:	cmp	r1, r0
   16f84:	bge	16f94 <__assert_fail@plt+0x5f7c>
   16f88:	movw	r0, #1
   16f8c:	str	r0, [fp, #-56]	; 0xffffffc8
   16f90:	b	16fac <__assert_fail@plt+0x5f94>
   16f94:	ldr	r0, [fp, #8]
   16f98:	movw	r1, #0
   16f9c:	sub	r0, r1, r0
   16fa0:	mvn	r1, #0
   16fa4:	udiv	r0, r1, r0
   16fa8:	str	r0, [fp, #-56]	; 0xffffffc8
   16fac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16fb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fb4:	mvn	r2, #0
   16fb8:	sub	r1, r2, r1
   16fbc:	cmp	r0, r1
   16fc0:	bls	170dc <__assert_fail@plt+0x60c4>
   16fc4:	b	170f0 <__assert_fail@plt+0x60d8>
   16fc8:	b	16fcc <__assert_fail@plt+0x5fb4>
   16fcc:	b	17024 <__assert_fail@plt+0x600c>
   16fd0:	b	17024 <__assert_fail@plt+0x600c>
   16fd4:	ldr	r0, [fp, #8]
   16fd8:	cmn	r0, #1
   16fdc:	bne	17024 <__assert_fail@plt+0x600c>
   16fe0:	b	16fe4 <__assert_fail@plt+0x5fcc>
   16fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fe8:	add	r0, r0, #0
   16fec:	movw	r1, #0
   16ff0:	cmp	r1, r0
   16ff4:	blt	170dc <__assert_fail@plt+0x60c4>
   16ff8:	b	170f0 <__assert_fail@plt+0x60d8>
   16ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17000:	movw	r1, #0
   17004:	cmp	r1, r0
   17008:	bge	170f0 <__assert_fail@plt+0x60d8>
   1700c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17010:	sub	r0, r0, #1
   17014:	mvn	r1, #0
   17018:	cmp	r1, r0
   1701c:	blt	170dc <__assert_fail@plt+0x60c4>
   17020:	b	170f0 <__assert_fail@plt+0x60d8>
   17024:	ldr	r0, [fp, #8]
   17028:	movw	r1, #0
   1702c:	sdiv	r0, r1, r0
   17030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17034:	cmp	r0, r1
   17038:	blt	170dc <__assert_fail@plt+0x60c4>
   1703c:	b	170f0 <__assert_fail@plt+0x60d8>
   17040:	ldr	r0, [fp, #8]
   17044:	cmp	r0, #0
   17048:	bne	17050 <__assert_fail@plt+0x6038>
   1704c:	b	170f0 <__assert_fail@plt+0x60d8>
   17050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17054:	cmp	r0, #0
   17058:	bge	170c4 <__assert_fail@plt+0x60ac>
   1705c:	b	17060 <__assert_fail@plt+0x6048>
   17060:	b	170a8 <__assert_fail@plt+0x6090>
   17064:	b	170a8 <__assert_fail@plt+0x6090>
   17068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1706c:	cmn	r0, #1
   17070:	bne	170a8 <__assert_fail@plt+0x6090>
   17074:	b	17078 <__assert_fail@plt+0x6060>
   17078:	ldr	r0, [fp, #8]
   1707c:	add	r0, r0, #0
   17080:	movw	r1, #0
   17084:	cmp	r1, r0
   17088:	blt	170dc <__assert_fail@plt+0x60c4>
   1708c:	b	170f0 <__assert_fail@plt+0x60d8>
   17090:	ldr	r0, [fp, #8]
   17094:	sub	r0, r0, #1
   17098:	mvn	r1, #0
   1709c:	cmp	r1, r0
   170a0:	blt	170dc <__assert_fail@plt+0x60c4>
   170a4:	b	170f0 <__assert_fail@plt+0x60d8>
   170a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ac:	movw	r1, #0
   170b0:	sdiv	r0, r1, r0
   170b4:	ldr	r1, [fp, #8]
   170b8:	cmp	r0, r1
   170bc:	blt	170dc <__assert_fail@plt+0x60c4>
   170c0:	b	170f0 <__assert_fail@plt+0x60d8>
   170c4:	ldr	r0, [fp, #8]
   170c8:	mvn	r1, #0
   170cc:	udiv	r0, r1, r0
   170d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170d4:	cmp	r0, r1
   170d8:	bcs	170f0 <__assert_fail@plt+0x60d8>
   170dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170e0:	ldr	r1, [fp, #8]
   170e4:	mul	r0, r0, r1
   170e8:	str	r0, [fp, #-28]	; 0xffffffe4
   170ec:	b	1794c <__assert_fail@plt+0x6934>
   170f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f4:	ldr	r1, [fp, #8]
   170f8:	mul	r0, r0, r1
   170fc:	str	r0, [fp, #-28]	; 0xffffffe4
   17100:	b	17958 <__assert_fail@plt+0x6940>
   17104:	b	17108 <__assert_fail@plt+0x60f0>
   17108:	b	1710c <__assert_fail@plt+0x60f4>
   1710c:	ldr	r0, [fp, #8]
   17110:	cmp	r0, #0
   17114:	bge	17218 <__assert_fail@plt+0x6200>
   17118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1711c:	cmp	r0, #0
   17120:	bge	171ac <__assert_fail@plt+0x6194>
   17124:	b	17128 <__assert_fail@plt+0x6110>
   17128:	ldr	r0, [pc, #1048]	; 17548 <__assert_fail@plt+0x6530>
   1712c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17130:	ldr	r2, [fp, #8]
   17134:	sdiv	r0, r0, r2
   17138:	cmp	r1, r0
   1713c:	blt	172a8 <__assert_fail@plt+0x6290>
   17140:	b	172bc <__assert_fail@plt+0x62a4>
   17144:	b	17148 <__assert_fail@plt+0x6130>
   17148:	ldr	r0, [pc, #1180]	; 175ec <__assert_fail@plt+0x65d4>
   1714c:	ldr	r1, [fp, #8]
   17150:	cmp	r1, r0
   17154:	blt	1716c <__assert_fail@plt+0x6154>
   17158:	b	17178 <__assert_fail@plt+0x6160>
   1715c:	ldr	r0, [fp, #8]
   17160:	movw	r1, #0
   17164:	cmp	r1, r0
   17168:	bge	17178 <__assert_fail@plt+0x6160>
   1716c:	movw	r0, #0
   17170:	str	r0, [fp, #-60]	; 0xffffffc4
   17174:	b	17190 <__assert_fail@plt+0x6178>
   17178:	ldr	r0, [pc, #968]	; 17548 <__assert_fail@plt+0x6530>
   1717c:	ldr	r1, [fp, #8]
   17180:	movw	r2, #0
   17184:	sub	r1, r2, r1
   17188:	sdiv	r0, r0, r1
   1718c:	str	r0, [fp, #-60]	; 0xffffffc4
   17190:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17198:	mvn	r2, #0
   1719c:	sub	r1, r2, r1
   171a0:	cmp	r0, r1
   171a4:	ble	172a8 <__assert_fail@plt+0x6290>
   171a8:	b	172bc <__assert_fail@plt+0x62a4>
   171ac:	ldr	r0, [fp, #8]
   171b0:	cmn	r0, #1
   171b4:	bne	171fc <__assert_fail@plt+0x61e4>
   171b8:	b	171bc <__assert_fail@plt+0x61a4>
   171bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171c0:	add	r0, r0, #-2147483648	; 0x80000000
   171c4:	movw	r1, #0
   171c8:	cmp	r1, r0
   171cc:	blt	172a8 <__assert_fail@plt+0x6290>
   171d0:	b	172bc <__assert_fail@plt+0x62a4>
   171d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171d8:	movw	r1, #0
   171dc:	cmp	r1, r0
   171e0:	bge	172bc <__assert_fail@plt+0x62a4>
   171e4:	ldr	r0, [pc, #860]	; 17548 <__assert_fail@plt+0x6530>
   171e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171ec:	sub	r1, r1, #1
   171f0:	cmp	r0, r1
   171f4:	blt	172a8 <__assert_fail@plt+0x6290>
   171f8:	b	172bc <__assert_fail@plt+0x62a4>
   171fc:	ldr	r0, [pc, #3144]	; 17e4c <__assert_fail@plt+0x6e34>
   17200:	ldr	r1, [fp, #8]
   17204:	sdiv	r0, r0, r1
   17208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1720c:	cmp	r0, r1
   17210:	blt	172a8 <__assert_fail@plt+0x6290>
   17214:	b	172bc <__assert_fail@plt+0x62a4>
   17218:	ldr	r0, [fp, #8]
   1721c:	cmp	r0, #0
   17220:	bne	17228 <__assert_fail@plt+0x6210>
   17224:	b	172bc <__assert_fail@plt+0x62a4>
   17228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1722c:	cmp	r0, #0
   17230:	bge	17290 <__assert_fail@plt+0x6278>
   17234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17238:	cmn	r0, #1
   1723c:	bne	17274 <__assert_fail@plt+0x625c>
   17240:	b	17244 <__assert_fail@plt+0x622c>
   17244:	ldr	r0, [fp, #8]
   17248:	add	r0, r0, #-2147483648	; 0x80000000
   1724c:	movw	r1, #0
   17250:	cmp	r1, r0
   17254:	blt	172a8 <__assert_fail@plt+0x6290>
   17258:	b	172bc <__assert_fail@plt+0x62a4>
   1725c:	ldr	r0, [pc, #740]	; 17548 <__assert_fail@plt+0x6530>
   17260:	ldr	r1, [fp, #8]
   17264:	sub	r1, r1, #1
   17268:	cmp	r0, r1
   1726c:	blt	172a8 <__assert_fail@plt+0x6290>
   17270:	b	172bc <__assert_fail@plt+0x62a4>
   17274:	ldr	r0, [pc, #3024]	; 17e4c <__assert_fail@plt+0x6e34>
   17278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1727c:	sdiv	r0, r0, r1
   17280:	ldr	r1, [fp, #8]
   17284:	cmp	r0, r1
   17288:	blt	172a8 <__assert_fail@plt+0x6290>
   1728c:	b	172bc <__assert_fail@plt+0x62a4>
   17290:	ldr	r0, [pc, #688]	; 17548 <__assert_fail@plt+0x6530>
   17294:	ldr	r1, [fp, #8]
   17298:	sdiv	r0, r0, r1
   1729c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172a0:	cmp	r0, r1
   172a4:	bge	172bc <__assert_fail@plt+0x62a4>
   172a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ac:	ldr	r1, [fp, #8]
   172b0:	mul	r0, r0, r1
   172b4:	str	r0, [fp, #-28]	; 0xffffffe4
   172b8:	b	1794c <__assert_fail@plt+0x6934>
   172bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c0:	ldr	r1, [fp, #8]
   172c4:	mul	r0, r0, r1
   172c8:	str	r0, [fp, #-28]	; 0xffffffe4
   172cc:	b	17958 <__assert_fail@plt+0x6940>
   172d0:	ldr	r0, [fp, #8]
   172d4:	cmp	r0, #0
   172d8:	bge	173e8 <__assert_fail@plt+0x63d0>
   172dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172e0:	cmp	r0, #0
   172e4:	bge	17370 <__assert_fail@plt+0x6358>
   172e8:	b	17308 <__assert_fail@plt+0x62f0>
   172ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172f0:	ldr	r1, [fp, #8]
   172f4:	mvn	r2, #0
   172f8:	udiv	r1, r2, r1
   172fc:	cmp	r0, r1
   17300:	bcc	17484 <__assert_fail@plt+0x646c>
   17304:	b	17498 <__assert_fail@plt+0x6480>
   17308:	b	1730c <__assert_fail@plt+0x62f4>
   1730c:	ldr	r0, [pc, #728]	; 175ec <__assert_fail@plt+0x65d4>
   17310:	ldr	r1, [fp, #8]
   17314:	cmp	r1, r0
   17318:	blt	17330 <__assert_fail@plt+0x6318>
   1731c:	b	1733c <__assert_fail@plt+0x6324>
   17320:	ldr	r0, [fp, #8]
   17324:	movw	r1, #0
   17328:	cmp	r1, r0
   1732c:	bge	1733c <__assert_fail@plt+0x6324>
   17330:	movw	r0, #1
   17334:	str	r0, [fp, #-64]	; 0xffffffc0
   17338:	b	17354 <__assert_fail@plt+0x633c>
   1733c:	ldr	r0, [fp, #8]
   17340:	movw	r1, #0
   17344:	sub	r0, r1, r0
   17348:	mvn	r1, #0
   1734c:	udiv	r0, r1, r0
   17350:	str	r0, [fp, #-64]	; 0xffffffc0
   17354:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17358:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1735c:	mvn	r2, #0
   17360:	sub	r1, r2, r1
   17364:	cmp	r0, r1
   17368:	bls	17484 <__assert_fail@plt+0x646c>
   1736c:	b	17498 <__assert_fail@plt+0x6480>
   17370:	b	17374 <__assert_fail@plt+0x635c>
   17374:	b	173cc <__assert_fail@plt+0x63b4>
   17378:	b	173cc <__assert_fail@plt+0x63b4>
   1737c:	ldr	r0, [fp, #8]
   17380:	cmn	r0, #1
   17384:	bne	173cc <__assert_fail@plt+0x63b4>
   17388:	b	1738c <__assert_fail@plt+0x6374>
   1738c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17390:	add	r0, r0, #0
   17394:	movw	r1, #0
   17398:	cmp	r1, r0
   1739c:	blt	17484 <__assert_fail@plt+0x646c>
   173a0:	b	17498 <__assert_fail@plt+0x6480>
   173a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a8:	movw	r1, #0
   173ac:	cmp	r1, r0
   173b0:	bge	17498 <__assert_fail@plt+0x6480>
   173b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173b8:	sub	r0, r0, #1
   173bc:	mvn	r1, #0
   173c0:	cmp	r1, r0
   173c4:	blt	17484 <__assert_fail@plt+0x646c>
   173c8:	b	17498 <__assert_fail@plt+0x6480>
   173cc:	ldr	r0, [fp, #8]
   173d0:	movw	r1, #0
   173d4:	sdiv	r0, r1, r0
   173d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173dc:	cmp	r0, r1
   173e0:	blt	17484 <__assert_fail@plt+0x646c>
   173e4:	b	17498 <__assert_fail@plt+0x6480>
   173e8:	ldr	r0, [fp, #8]
   173ec:	cmp	r0, #0
   173f0:	bne	173f8 <__assert_fail@plt+0x63e0>
   173f4:	b	17498 <__assert_fail@plt+0x6480>
   173f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173fc:	cmp	r0, #0
   17400:	bge	1746c <__assert_fail@plt+0x6454>
   17404:	b	17408 <__assert_fail@plt+0x63f0>
   17408:	b	17450 <__assert_fail@plt+0x6438>
   1740c:	b	17450 <__assert_fail@plt+0x6438>
   17410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17414:	cmn	r0, #1
   17418:	bne	17450 <__assert_fail@plt+0x6438>
   1741c:	b	17420 <__assert_fail@plt+0x6408>
   17420:	ldr	r0, [fp, #8]
   17424:	add	r0, r0, #0
   17428:	movw	r1, #0
   1742c:	cmp	r1, r0
   17430:	blt	17484 <__assert_fail@plt+0x646c>
   17434:	b	17498 <__assert_fail@plt+0x6480>
   17438:	ldr	r0, [fp, #8]
   1743c:	sub	r0, r0, #1
   17440:	mvn	r1, #0
   17444:	cmp	r1, r0
   17448:	blt	17484 <__assert_fail@plt+0x646c>
   1744c:	b	17498 <__assert_fail@plt+0x6480>
   17450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17454:	movw	r1, #0
   17458:	sdiv	r0, r1, r0
   1745c:	ldr	r1, [fp, #8]
   17460:	cmp	r0, r1
   17464:	blt	17484 <__assert_fail@plt+0x646c>
   17468:	b	17498 <__assert_fail@plt+0x6480>
   1746c:	ldr	r0, [fp, #8]
   17470:	mvn	r1, #0
   17474:	udiv	r0, r1, r0
   17478:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1747c:	cmp	r0, r1
   17480:	bcs	17498 <__assert_fail@plt+0x6480>
   17484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17488:	ldr	r1, [fp, #8]
   1748c:	mul	r0, r0, r1
   17490:	str	r0, [fp, #-28]	; 0xffffffe4
   17494:	b	1794c <__assert_fail@plt+0x6934>
   17498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1749c:	ldr	r1, [fp, #8]
   174a0:	mul	r0, r0, r1
   174a4:	str	r0, [fp, #-28]	; 0xffffffe4
   174a8:	b	17958 <__assert_fail@plt+0x6940>
   174ac:	b	174b0 <__assert_fail@plt+0x6498>
   174b0:	ldr	r0, [fp, #8]
   174b4:	cmp	r0, #0
   174b8:	bge	17628 <__assert_fail@plt+0x6610>
   174bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c0:	cmp	r0, #0
   174c4:	bge	175a0 <__assert_fail@plt+0x6588>
   174c8:	b	174cc <__assert_fail@plt+0x64b4>
   174cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174d0:	ldr	r1, [fp, #8]
   174d4:	asr	r3, r1, #31
   174d8:	mvn	r2, #0
   174dc:	mvn	ip, #-2147483648	; 0x80000000
   174e0:	str	r0, [fp, #-68]	; 0xffffffbc
   174e4:	mov	r0, r2
   174e8:	str	r1, [fp, #-72]	; 0xffffffb8
   174ec:	mov	r1, ip
   174f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   174f4:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   174f8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   174fc:	subs	r0, r2, r0
   17500:	rscs	r1, r1, r2, asr #31
   17504:	blt	176f0 <__assert_fail@plt+0x66d8>
   17508:	b	17704 <__assert_fail@plt+0x66ec>
   1750c:	b	17510 <__assert_fail@plt+0x64f8>
   17510:	ldr	r0, [pc, #212]	; 175ec <__assert_fail@plt+0x65d4>
   17514:	ldr	r1, [fp, #8]
   17518:	cmp	r1, r0
   1751c:	blt	17534 <__assert_fail@plt+0x651c>
   17520:	b	1754c <__assert_fail@plt+0x6534>
   17524:	ldr	r0, [fp, #8]
   17528:	movw	r1, #0
   1752c:	cmp	r1, r0
   17530:	bge	1754c <__assert_fail@plt+0x6534>
   17534:	mov	r0, #0
   17538:	mvn	r1, #0
   1753c:	str	r1, [fp, #-76]	; 0xffffffb4
   17540:	str	r0, [fp, #-80]	; 0xffffffb0
   17544:	b	17580 <__assert_fail@plt+0x6568>
   17548:	svcvc	0x00ffffff
   1754c:	ldr	r0, [fp, #8]
   17550:	rsb	r0, r0, #0
   17554:	asr	r3, r0, #31
   17558:	mvn	r1, #0
   1755c:	mvn	r2, #-2147483648	; 0x80000000
   17560:	str	r0, [fp, #-84]	; 0xffffffac
   17564:	mov	r0, r1
   17568:	mov	r1, r2
   1756c:	ldr	r2, [fp, #-84]	; 0xffffffac
   17570:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   17574:	str	r0, [fp, #-76]	; 0xffffffb4
   17578:	str	r1, [fp, #-80]	; 0xffffffb0
   1757c:	b	17580 <__assert_fail@plt+0x6568>
   17580:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17584:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17588:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1758c:	mvn	r2, r2
   17590:	subs	r1, r2, r1
   17594:	rscs	r0, r0, r2, asr #31
   17598:	bge	176f0 <__assert_fail@plt+0x66d8>
   1759c:	b	17704 <__assert_fail@plt+0x66ec>
   175a0:	ldr	r0, [fp, #8]
   175a4:	cmn	r0, #1
   175a8:	bne	175f0 <__assert_fail@plt+0x65d8>
   175ac:	b	175b0 <__assert_fail@plt+0x6598>
   175b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175b4:	mov	r1, #-2147483648	; 0x80000000
   175b8:	add	r1, r1, r0, asr #31
   175bc:	rsbs	r0, r0, #0
   175c0:	rscs	r1, r1, #0
   175c4:	blt	176f0 <__assert_fail@plt+0x66d8>
   175c8:	b	17704 <__assert_fail@plt+0x66ec>
   175cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d0:	movw	r1, #0
   175d4:	cmp	r1, r0
   175d8:	bge	17704 <__assert_fail@plt+0x66ec>
   175dc:	mov	r0, #0
   175e0:	cmp	r0, #0
   175e4:	bne	176f0 <__assert_fail@plt+0x66d8>
   175e8:	b	17704 <__assert_fail@plt+0x66ec>
   175ec:	andhi	r0, r0, r1
   175f0:	ldr	r0, [fp, #8]
   175f4:	asr	r3, r0, #31
   175f8:	mov	r1, #0
   175fc:	mov	r2, #-2147483648	; 0x80000000
   17600:	str	r0, [fp, #-88]	; 0xffffffa8
   17604:	mov	r0, r1
   17608:	mov	r1, r2
   1760c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17610:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   17614:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17618:	subs	r0, r0, r2
   1761c:	sbcs	r1, r1, r2, asr #31
   17620:	blt	176f0 <__assert_fail@plt+0x66d8>
   17624:	b	17704 <__assert_fail@plt+0x66ec>
   17628:	ldr	r0, [fp, #8]
   1762c:	cmp	r0, #0
   17630:	bne	17638 <__assert_fail@plt+0x6620>
   17634:	b	17704 <__assert_fail@plt+0x66ec>
   17638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1763c:	cmp	r0, #0
   17640:	bge	176b8 <__assert_fail@plt+0x66a0>
   17644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17648:	cmn	r0, #1
   1764c:	bne	17680 <__assert_fail@plt+0x6668>
   17650:	b	17654 <__assert_fail@plt+0x663c>
   17654:	ldr	r0, [fp, #8]
   17658:	mov	r1, #-2147483648	; 0x80000000
   1765c:	add	r1, r1, r0, asr #31
   17660:	rsbs	r0, r0, #0
   17664:	rscs	r1, r1, #0
   17668:	blt	176f0 <__assert_fail@plt+0x66d8>
   1766c:	b	17704 <__assert_fail@plt+0x66ec>
   17670:	mov	r0, #0
   17674:	cmp	r0, #0
   17678:	bne	176f0 <__assert_fail@plt+0x66d8>
   1767c:	b	17704 <__assert_fail@plt+0x66ec>
   17680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17684:	asr	r3, r0, #31
   17688:	mov	r1, #0
   1768c:	mov	r2, #-2147483648	; 0x80000000
   17690:	str	r0, [fp, #-92]	; 0xffffffa4
   17694:	mov	r0, r1
   17698:	mov	r1, r2
   1769c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   176a0:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   176a4:	ldr	r2, [fp, #8]
   176a8:	subs	r0, r0, r2
   176ac:	sbcs	r1, r1, r2, asr #31
   176b0:	blt	176f0 <__assert_fail@plt+0x66d8>
   176b4:	b	17704 <__assert_fail@plt+0x66ec>
   176b8:	ldr	r0, [fp, #8]
   176bc:	asr	r3, r0, #31
   176c0:	mvn	r1, #0
   176c4:	mvn	r2, #-2147483648	; 0x80000000
   176c8:	str	r0, [fp, #-96]	; 0xffffffa0
   176cc:	mov	r0, r1
   176d0:	mov	r1, r2
   176d4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   176d8:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   176dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176e0:	subs	r0, r0, r2
   176e4:	sbcs	r1, r1, r2, asr #31
   176e8:	bge	17704 <__assert_fail@plt+0x66ec>
   176ec:	b	176f0 <__assert_fail@plt+0x66d8>
   176f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176f4:	ldr	r1, [fp, #8]
   176f8:	mul	r0, r0, r1
   176fc:	str	r0, [fp, #-28]	; 0xffffffe4
   17700:	b	1794c <__assert_fail@plt+0x6934>
   17704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17708:	ldr	r1, [fp, #8]
   1770c:	mul	r0, r0, r1
   17710:	str	r0, [fp, #-28]	; 0xffffffe4
   17714:	b	17958 <__assert_fail@plt+0x6940>
   17718:	ldr	r0, [fp, #8]
   1771c:	cmp	r0, #0
   17720:	bge	17870 <__assert_fail@plt+0x6858>
   17724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17728:	cmp	r0, #0
   1772c:	bge	177f8 <__assert_fail@plt+0x67e0>
   17730:	b	17770 <__assert_fail@plt+0x6758>
   17734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17738:	ldr	r1, [fp, #8]
   1773c:	asr	r3, r1, #31
   17740:	mvn	r2, #0
   17744:	str	r0, [fp, #-100]	; 0xffffff9c
   17748:	mov	r0, r2
   1774c:	str	r1, [fp, #-104]	; 0xffffff98
   17750:	mov	r1, r2
   17754:	ldr	r2, [fp, #-104]	; 0xffffff98
   17758:	bl	1b2a0 <__assert_fail@plt+0xa288>
   1775c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17760:	subs	r0, r2, r0
   17764:	rscs	r1, r1, r2, asr #31
   17768:	bcc	17924 <__assert_fail@plt+0x690c>
   1776c:	b	17938 <__assert_fail@plt+0x6920>
   17770:	b	17774 <__assert_fail@plt+0x675c>
   17774:	ldr	r0, [pc, #-400]	; 175ec <__assert_fail@plt+0x65d4>
   17778:	ldr	r1, [fp, #8]
   1777c:	cmp	r1, r0
   17780:	blt	17798 <__assert_fail@plt+0x6780>
   17784:	b	177ac <__assert_fail@plt+0x6794>
   17788:	ldr	r0, [fp, #8]
   1778c:	movw	r1, #0
   17790:	cmp	r1, r0
   17794:	bge	177ac <__assert_fail@plt+0x6794>
   17798:	mov	r0, #1
   1779c:	mvn	r1, #0
   177a0:	str	r1, [sp, #108]	; 0x6c
   177a4:	str	r0, [sp, #104]	; 0x68
   177a8:	b	177d8 <__assert_fail@plt+0x67c0>
   177ac:	ldr	r0, [fp, #8]
   177b0:	rsb	r0, r0, #0
   177b4:	asr	r3, r0, #31
   177b8:	mvn	r1, #0
   177bc:	str	r0, [sp, #100]	; 0x64
   177c0:	mov	r0, r1
   177c4:	ldr	r2, [sp, #100]	; 0x64
   177c8:	bl	1b2a0 <__assert_fail@plt+0xa288>
   177cc:	str	r0, [sp, #108]	; 0x6c
   177d0:	str	r1, [sp, #104]	; 0x68
   177d4:	b	177d8 <__assert_fail@plt+0x67c0>
   177d8:	ldr	r0, [sp, #104]	; 0x68
   177dc:	ldr	r1, [sp, #108]	; 0x6c
   177e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177e4:	mvn	r2, r2
   177e8:	subs	r1, r2, r1
   177ec:	rscs	r0, r0, r2, asr #31
   177f0:	bcs	17924 <__assert_fail@plt+0x690c>
   177f4:	b	17938 <__assert_fail@plt+0x6920>
   177f8:	b	177fc <__assert_fail@plt+0x67e4>
   177fc:	b	17854 <__assert_fail@plt+0x683c>
   17800:	b	17854 <__assert_fail@plt+0x683c>
   17804:	ldr	r0, [fp, #8]
   17808:	cmn	r0, #1
   1780c:	bne	17854 <__assert_fail@plt+0x683c>
   17810:	b	17814 <__assert_fail@plt+0x67fc>
   17814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17818:	add	r0, r0, #0
   1781c:	movw	r1, #0
   17820:	cmp	r1, r0
   17824:	blt	17924 <__assert_fail@plt+0x690c>
   17828:	b	17938 <__assert_fail@plt+0x6920>
   1782c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17830:	movw	r1, #0
   17834:	cmp	r1, r0
   17838:	bge	17938 <__assert_fail@plt+0x6920>
   1783c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17840:	sub	r0, r0, #1
   17844:	mvn	r1, #0
   17848:	cmp	r1, r0
   1784c:	blt	17924 <__assert_fail@plt+0x690c>
   17850:	b	17938 <__assert_fail@plt+0x6920>
   17854:	ldr	r0, [fp, #8]
   17858:	movw	r1, #0
   1785c:	sdiv	r0, r1, r0
   17860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17864:	cmp	r0, r1
   17868:	blt	17924 <__assert_fail@plt+0x690c>
   1786c:	b	17938 <__assert_fail@plt+0x6920>
   17870:	ldr	r0, [fp, #8]
   17874:	cmp	r0, #0
   17878:	bne	17880 <__assert_fail@plt+0x6868>
   1787c:	b	17938 <__assert_fail@plt+0x6920>
   17880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17884:	cmp	r0, #0
   17888:	bge	178f4 <__assert_fail@plt+0x68dc>
   1788c:	b	17890 <__assert_fail@plt+0x6878>
   17890:	b	178d8 <__assert_fail@plt+0x68c0>
   17894:	b	178d8 <__assert_fail@plt+0x68c0>
   17898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1789c:	cmn	r0, #1
   178a0:	bne	178d8 <__assert_fail@plt+0x68c0>
   178a4:	b	178a8 <__assert_fail@plt+0x6890>
   178a8:	ldr	r0, [fp, #8]
   178ac:	add	r0, r0, #0
   178b0:	movw	r1, #0
   178b4:	cmp	r1, r0
   178b8:	blt	17924 <__assert_fail@plt+0x690c>
   178bc:	b	17938 <__assert_fail@plt+0x6920>
   178c0:	ldr	r0, [fp, #8]
   178c4:	sub	r0, r0, #1
   178c8:	mvn	r1, #0
   178cc:	cmp	r1, r0
   178d0:	blt	17924 <__assert_fail@plt+0x690c>
   178d4:	b	17938 <__assert_fail@plt+0x6920>
   178d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178dc:	movw	r1, #0
   178e0:	sdiv	r0, r1, r0
   178e4:	ldr	r1, [fp, #8]
   178e8:	cmp	r0, r1
   178ec:	blt	17924 <__assert_fail@plt+0x690c>
   178f0:	b	17938 <__assert_fail@plt+0x6920>
   178f4:	ldr	r0, [fp, #8]
   178f8:	asr	r3, r0, #31
   178fc:	mvn	r1, #0
   17900:	str	r0, [sp, #96]	; 0x60
   17904:	mov	r0, r1
   17908:	ldr	r2, [sp, #96]	; 0x60
   1790c:	bl	1b2a0 <__assert_fail@plt+0xa288>
   17910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17914:	subs	r0, r0, r2
   17918:	sbcs	r1, r1, r2, asr #31
   1791c:	bcs	17938 <__assert_fail@plt+0x6920>
   17920:	b	17924 <__assert_fail@plt+0x690c>
   17924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17928:	ldr	r1, [fp, #8]
   1792c:	mul	r0, r0, r1
   17930:	str	r0, [fp, #-28]	; 0xffffffe4
   17934:	b	1794c <__assert_fail@plt+0x6934>
   17938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1793c:	ldr	r1, [fp, #8]
   17940:	mul	r0, r0, r1
   17944:	str	r0, [fp, #-28]	; 0xffffffe4
   17948:	b	17958 <__assert_fail@plt+0x6940>
   1794c:	ldr	r0, [pc, #-1036]	; 17548 <__assert_fail@plt+0x6530>
   17950:	str	r0, [sp, #92]	; 0x5c
   17954:	b	17978 <__assert_fail@plt+0x6960>
   17958:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1795c:	cmp	r0, #64	; 0x40
   17960:	movw	r0, #0
   17964:	movlt	r0, #1
   17968:	tst	r0, #1
   1796c:	movw	r0, #64	; 0x40
   17970:	moveq	r0, #0
   17974:	str	r0, [sp, #92]	; 0x5c
   17978:	ldr	r0, [sp, #92]	; 0x5c
   1797c:	str	r0, [fp, #-32]	; 0xffffffe0
   17980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17984:	cmp	r0, #0
   17988:	beq	179b8 <__assert_fail@plt+0x69a0>
   1798c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17990:	ldr	r1, [fp, #8]
   17994:	sdiv	r0, r0, r1
   17998:	str	r0, [fp, #-24]	; 0xffffffe8
   1799c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179a0:	mov	r1, r0
   179a4:	ldr	r2, [fp, #8]
   179a8:	sdiv	r3, r0, r2
   179ac:	mls	r0, r3, r2, r0
   179b0:	sub	r0, r1, r0
   179b4:	str	r0, [fp, #-28]	; 0xffffffe4
   179b8:	ldr	r0, [fp, #-4]
   179bc:	movw	r1, #0
   179c0:	cmp	r0, r1
   179c4:	bne	179d4 <__assert_fail@plt+0x69bc>
   179c8:	ldr	r0, [fp, #-8]
   179cc:	movw	r1, #0
   179d0:	str	r1, [r0]
   179d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   179dc:	sub	r0, r0, r1
   179e0:	ldr	r1, [fp, #-12]
   179e4:	cmp	r0, r1
   179e8:	bge	18dd4 <__assert_fail@plt+0x7dbc>
   179ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   179f0:	ldr	r1, [fp, #-12]
   179f4:	add	r1, r0, r1
   179f8:	mov	r2, #1
   179fc:	cmp	r1, r0
   17a00:	movwvc	r2, #0
   17a04:	str	r1, [fp, #-24]	; 0xffffffe8
   17a08:	tst	r2, #1
   17a0c:	bne	18dd0 <__assert_fail@plt+0x7db8>
   17a10:	ldr	r0, [fp, #-16]
   17a14:	movw	r1, #0
   17a18:	cmp	r1, r0
   17a1c:	bgt	17a30 <__assert_fail@plt+0x6a18>
   17a20:	ldr	r0, [fp, #-16]
   17a24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a28:	cmp	r0, r1
   17a2c:	blt	18dd0 <__assert_fail@plt+0x7db8>
   17a30:	b	17e0c <__assert_fail@plt+0x6df4>
   17a34:			; <UNDEFINED> instruction: 0xffff8000
   17a38:	b	17a3c <__assert_fail@plt+0x6a24>
   17a3c:	ldr	r0, [fp, #8]
   17a40:	cmp	r0, #0
   17a44:	bge	17b58 <__assert_fail@plt+0x6b40>
   17a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a4c:	cmp	r0, #0
   17a50:	bge	17adc <__assert_fail@plt+0x6ac4>
   17a54:	b	17a58 <__assert_fail@plt+0x6a40>
   17a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a5c:	ldr	r1, [fp, #8]
   17a60:	movw	r2, #127	; 0x7f
   17a64:	sdiv	r1, r2, r1
   17a68:	cmp	r0, r1
   17a6c:	blt	17bf8 <__assert_fail@plt+0x6be0>
   17a70:	b	17c10 <__assert_fail@plt+0x6bf8>
   17a74:	b	17a78 <__assert_fail@plt+0x6a60>
   17a78:	ldr	r0, [pc, #-1172]	; 175ec <__assert_fail@plt+0x65d4>
   17a7c:	ldr	r1, [fp, #8]
   17a80:	cmp	r1, r0
   17a84:	blt	17a9c <__assert_fail@plt+0x6a84>
   17a88:	b	17aa8 <__assert_fail@plt+0x6a90>
   17a8c:	ldr	r0, [fp, #8]
   17a90:	movw	r1, #0
   17a94:	cmp	r1, r0
   17a98:	bge	17aa8 <__assert_fail@plt+0x6a90>
   17a9c:	movw	r0, #0
   17aa0:	str	r0, [sp, #88]	; 0x58
   17aa4:	b	17ac0 <__assert_fail@plt+0x6aa8>
   17aa8:	ldr	r0, [fp, #8]
   17aac:	movw	r1, #0
   17ab0:	sub	r0, r1, r0
   17ab4:	movw	r1, #127	; 0x7f
   17ab8:	sdiv	r0, r1, r0
   17abc:	str	r0, [sp, #88]	; 0x58
   17ac0:	ldr	r0, [sp, #88]	; 0x58
   17ac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ac8:	mvn	r2, #0
   17acc:	sub	r1, r2, r1
   17ad0:	cmp	r0, r1
   17ad4:	ble	17bf8 <__assert_fail@plt+0x6be0>
   17ad8:	b	17c10 <__assert_fail@plt+0x6bf8>
   17adc:	b	17ae0 <__assert_fail@plt+0x6ac8>
   17ae0:	b	17b3c <__assert_fail@plt+0x6b24>
   17ae4:	b	17b3c <__assert_fail@plt+0x6b24>
   17ae8:	ldr	r0, [fp, #8]
   17aec:	cmn	r0, #1
   17af0:	bne	17b3c <__assert_fail@plt+0x6b24>
   17af4:	b	17af8 <__assert_fail@plt+0x6ae0>
   17af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17afc:	mvn	r1, #127	; 0x7f
   17b00:	add	r0, r0, r1
   17b04:	movw	r1, #0
   17b08:	cmp	r1, r0
   17b0c:	blt	17bf8 <__assert_fail@plt+0x6be0>
   17b10:	b	17c10 <__assert_fail@plt+0x6bf8>
   17b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b18:	movw	r1, #0
   17b1c:	cmp	r1, r0
   17b20:	bge	17c10 <__assert_fail@plt+0x6bf8>
   17b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b28:	sub	r0, r0, #1
   17b2c:	movw	r1, #127	; 0x7f
   17b30:	cmp	r1, r0
   17b34:	blt	17bf8 <__assert_fail@plt+0x6be0>
   17b38:	b	17c10 <__assert_fail@plt+0x6bf8>
   17b3c:	ldr	r0, [fp, #8]
   17b40:	mvn	r1, #127	; 0x7f
   17b44:	sdiv	r0, r1, r0
   17b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b4c:	cmp	r0, r1
   17b50:	blt	17bf8 <__assert_fail@plt+0x6be0>
   17b54:	b	17c10 <__assert_fail@plt+0x6bf8>
   17b58:	ldr	r0, [fp, #8]
   17b5c:	cmp	r0, #0
   17b60:	bne	17b68 <__assert_fail@plt+0x6b50>
   17b64:	b	17c10 <__assert_fail@plt+0x6bf8>
   17b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b6c:	cmp	r0, #0
   17b70:	bge	17be0 <__assert_fail@plt+0x6bc8>
   17b74:	b	17b78 <__assert_fail@plt+0x6b60>
   17b78:	b	17bc4 <__assert_fail@plt+0x6bac>
   17b7c:	b	17bc4 <__assert_fail@plt+0x6bac>
   17b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b84:	cmn	r0, #1
   17b88:	bne	17bc4 <__assert_fail@plt+0x6bac>
   17b8c:	b	17b90 <__assert_fail@plt+0x6b78>
   17b90:	ldr	r0, [fp, #8]
   17b94:	mvn	r1, #127	; 0x7f
   17b98:	add	r0, r0, r1
   17b9c:	movw	r1, #0
   17ba0:	cmp	r1, r0
   17ba4:	blt	17bf8 <__assert_fail@plt+0x6be0>
   17ba8:	b	17c10 <__assert_fail@plt+0x6bf8>
   17bac:	ldr	r0, [fp, #8]
   17bb0:	sub	r0, r0, #1
   17bb4:	movw	r1, #127	; 0x7f
   17bb8:	cmp	r1, r0
   17bbc:	blt	17bf8 <__assert_fail@plt+0x6be0>
   17bc0:	b	17c10 <__assert_fail@plt+0x6bf8>
   17bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bc8:	mvn	r1, #127	; 0x7f
   17bcc:	sdiv	r0, r1, r0
   17bd0:	ldr	r1, [fp, #8]
   17bd4:	cmp	r0, r1
   17bd8:	blt	17bf8 <__assert_fail@plt+0x6be0>
   17bdc:	b	17c10 <__assert_fail@plt+0x6bf8>
   17be0:	ldr	r0, [fp, #8]
   17be4:	movw	r1, #127	; 0x7f
   17be8:	sdiv	r0, r1, r0
   17bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bf0:	cmp	r0, r1
   17bf4:	bge	17c10 <__assert_fail@plt+0x6bf8>
   17bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bfc:	ldr	r1, [fp, #8]
   17c00:	mul	r0, r0, r1
   17c04:	sxtb	r0, r0
   17c08:	str	r0, [fp, #-28]	; 0xffffffe4
   17c0c:	b	18dd0 <__assert_fail@plt+0x7db8>
   17c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c14:	ldr	r1, [fp, #8]
   17c18:	mul	r0, r0, r1
   17c1c:	sxtb	r0, r0
   17c20:	str	r0, [fp, #-28]	; 0xffffffe4
   17c24:	b	18dd4 <__assert_fail@plt+0x7dbc>
   17c28:	ldr	r0, [fp, #8]
   17c2c:	cmp	r0, #0
   17c30:	bge	17d40 <__assert_fail@plt+0x6d28>
   17c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c38:	cmp	r0, #0
   17c3c:	bge	17cc8 <__assert_fail@plt+0x6cb0>
   17c40:	b	17c44 <__assert_fail@plt+0x6c2c>
   17c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c48:	ldr	r1, [fp, #8]
   17c4c:	movw	r2, #255	; 0xff
   17c50:	sdiv	r1, r2, r1
   17c54:	cmp	r0, r1
   17c58:	blt	17ddc <__assert_fail@plt+0x6dc4>
   17c5c:	b	17df4 <__assert_fail@plt+0x6ddc>
   17c60:	b	17c64 <__assert_fail@plt+0x6c4c>
   17c64:	ldr	r0, [pc, #-1664]	; 175ec <__assert_fail@plt+0x65d4>
   17c68:	ldr	r1, [fp, #8]
   17c6c:	cmp	r1, r0
   17c70:	blt	17c88 <__assert_fail@plt+0x6c70>
   17c74:	b	17c94 <__assert_fail@plt+0x6c7c>
   17c78:	ldr	r0, [fp, #8]
   17c7c:	movw	r1, #0
   17c80:	cmp	r1, r0
   17c84:	bge	17c94 <__assert_fail@plt+0x6c7c>
   17c88:	movw	r0, #0
   17c8c:	str	r0, [sp, #84]	; 0x54
   17c90:	b	17cac <__assert_fail@plt+0x6c94>
   17c94:	ldr	r0, [fp, #8]
   17c98:	movw	r1, #0
   17c9c:	sub	r0, r1, r0
   17ca0:	movw	r1, #255	; 0xff
   17ca4:	sdiv	r0, r1, r0
   17ca8:	str	r0, [sp, #84]	; 0x54
   17cac:	ldr	r0, [sp, #84]	; 0x54
   17cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cb4:	mvn	r2, #0
   17cb8:	sub	r1, r2, r1
   17cbc:	cmp	r0, r1
   17cc0:	ble	17ddc <__assert_fail@plt+0x6dc4>
   17cc4:	b	17df4 <__assert_fail@plt+0x6ddc>
   17cc8:	b	17ccc <__assert_fail@plt+0x6cb4>
   17ccc:	b	17d24 <__assert_fail@plt+0x6d0c>
   17cd0:	b	17d24 <__assert_fail@plt+0x6d0c>
   17cd4:	ldr	r0, [fp, #8]
   17cd8:	cmn	r0, #1
   17cdc:	bne	17d24 <__assert_fail@plt+0x6d0c>
   17ce0:	b	17ce4 <__assert_fail@plt+0x6ccc>
   17ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ce8:	add	r0, r0, #0
   17cec:	movw	r1, #0
   17cf0:	cmp	r1, r0
   17cf4:	blt	17ddc <__assert_fail@plt+0x6dc4>
   17cf8:	b	17df4 <__assert_fail@plt+0x6ddc>
   17cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d00:	movw	r1, #0
   17d04:	cmp	r1, r0
   17d08:	bge	17df4 <__assert_fail@plt+0x6ddc>
   17d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d10:	sub	r0, r0, #1
   17d14:	mvn	r1, #0
   17d18:	cmp	r1, r0
   17d1c:	blt	17ddc <__assert_fail@plt+0x6dc4>
   17d20:	b	17df4 <__assert_fail@plt+0x6ddc>
   17d24:	ldr	r0, [fp, #8]
   17d28:	movw	r1, #0
   17d2c:	sdiv	r0, r1, r0
   17d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d34:	cmp	r0, r1
   17d38:	blt	17ddc <__assert_fail@plt+0x6dc4>
   17d3c:	b	17df4 <__assert_fail@plt+0x6ddc>
   17d40:	ldr	r0, [fp, #8]
   17d44:	cmp	r0, #0
   17d48:	bne	17d50 <__assert_fail@plt+0x6d38>
   17d4c:	b	17df4 <__assert_fail@plt+0x6ddc>
   17d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d54:	cmp	r0, #0
   17d58:	bge	17dc4 <__assert_fail@plt+0x6dac>
   17d5c:	b	17d60 <__assert_fail@plt+0x6d48>
   17d60:	b	17da8 <__assert_fail@plt+0x6d90>
   17d64:	b	17da8 <__assert_fail@plt+0x6d90>
   17d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d6c:	cmn	r0, #1
   17d70:	bne	17da8 <__assert_fail@plt+0x6d90>
   17d74:	b	17d78 <__assert_fail@plt+0x6d60>
   17d78:	ldr	r0, [fp, #8]
   17d7c:	add	r0, r0, #0
   17d80:	movw	r1, #0
   17d84:	cmp	r1, r0
   17d88:	blt	17ddc <__assert_fail@plt+0x6dc4>
   17d8c:	b	17df4 <__assert_fail@plt+0x6ddc>
   17d90:	ldr	r0, [fp, #8]
   17d94:	sub	r0, r0, #1
   17d98:	mvn	r1, #0
   17d9c:	cmp	r1, r0
   17da0:	blt	17ddc <__assert_fail@plt+0x6dc4>
   17da4:	b	17df4 <__assert_fail@plt+0x6ddc>
   17da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dac:	movw	r1, #0
   17db0:	sdiv	r0, r1, r0
   17db4:	ldr	r1, [fp, #8]
   17db8:	cmp	r0, r1
   17dbc:	blt	17ddc <__assert_fail@plt+0x6dc4>
   17dc0:	b	17df4 <__assert_fail@plt+0x6ddc>
   17dc4:	ldr	r0, [fp, #8]
   17dc8:	movw	r1, #255	; 0xff
   17dcc:	sdiv	r0, r1, r0
   17dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dd4:	cmp	r0, r1
   17dd8:	bge	17df4 <__assert_fail@plt+0x6ddc>
   17ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17de0:	ldr	r1, [fp, #8]
   17de4:	mul	r0, r0, r1
   17de8:	and	r0, r0, #255	; 0xff
   17dec:	str	r0, [fp, #-28]	; 0xffffffe4
   17df0:	b	18dd0 <__assert_fail@plt+0x7db8>
   17df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df8:	ldr	r1, [fp, #8]
   17dfc:	mul	r0, r0, r1
   17e00:	and	r0, r0, #255	; 0xff
   17e04:	str	r0, [fp, #-28]	; 0xffffffe4
   17e08:	b	18dd4 <__assert_fail@plt+0x7dbc>
   17e0c:	b	181e8 <__assert_fail@plt+0x71d0>
   17e10:	b	17e14 <__assert_fail@plt+0x6dfc>
   17e14:	ldr	r0, [fp, #8]
   17e18:	cmp	r0, #0
   17e1c:	bge	17f34 <__assert_fail@plt+0x6f1c>
   17e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e24:	cmp	r0, #0
   17e28:	bge	17eb8 <__assert_fail@plt+0x6ea0>
   17e2c:	b	17e30 <__assert_fail@plt+0x6e18>
   17e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e34:	ldr	r1, [fp, #8]
   17e38:	movw	r2, #32767	; 0x7fff
   17e3c:	sdiv	r1, r2, r1
   17e40:	cmp	r0, r1
   17e44:	blt	17fd4 <__assert_fail@plt+0x6fbc>
   17e48:	b	17fec <__assert_fail@plt+0x6fd4>
   17e4c:	andhi	r0, r0, r0
   17e50:	b	17e54 <__assert_fail@plt+0x6e3c>
   17e54:	ldr	r0, [pc, #4004]	; 18e00 <__assert_fail@plt+0x7de8>
   17e58:	ldr	r1, [fp, #8]
   17e5c:	cmp	r1, r0
   17e60:	blt	17e78 <__assert_fail@plt+0x6e60>
   17e64:	b	17e84 <__assert_fail@plt+0x6e6c>
   17e68:	ldr	r0, [fp, #8]
   17e6c:	movw	r1, #0
   17e70:	cmp	r1, r0
   17e74:	bge	17e84 <__assert_fail@plt+0x6e6c>
   17e78:	movw	r0, #0
   17e7c:	str	r0, [sp, #80]	; 0x50
   17e80:	b	17e9c <__assert_fail@plt+0x6e84>
   17e84:	ldr	r0, [fp, #8]
   17e88:	movw	r1, #0
   17e8c:	sub	r0, r1, r0
   17e90:	movw	r1, #32767	; 0x7fff
   17e94:	sdiv	r0, r1, r0
   17e98:	str	r0, [sp, #80]	; 0x50
   17e9c:	ldr	r0, [sp, #80]	; 0x50
   17ea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ea4:	mvn	r2, #0
   17ea8:	sub	r1, r2, r1
   17eac:	cmp	r0, r1
   17eb0:	ble	17fd4 <__assert_fail@plt+0x6fbc>
   17eb4:	b	17fec <__assert_fail@plt+0x6fd4>
   17eb8:	b	17ebc <__assert_fail@plt+0x6ea4>
   17ebc:	b	17f18 <__assert_fail@plt+0x6f00>
   17ec0:	b	17f18 <__assert_fail@plt+0x6f00>
   17ec4:	ldr	r0, [fp, #8]
   17ec8:	cmn	r0, #1
   17ecc:	bne	17f18 <__assert_fail@plt+0x6f00>
   17ed0:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17ed4:	ldr	r0, [pc, #3884]	; 18e08 <__assert_fail@plt+0x7df0>
   17ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17edc:	add	r0, r1, r0
   17ee0:	movw	r1, #0
   17ee4:	cmp	r1, r0
   17ee8:	blt	17fd4 <__assert_fail@plt+0x6fbc>
   17eec:	b	17fec <__assert_fail@plt+0x6fd4>
   17ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef4:	movw	r1, #0
   17ef8:	cmp	r1, r0
   17efc:	bge	17fec <__assert_fail@plt+0x6fd4>
   17f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f04:	sub	r0, r0, #1
   17f08:	movw	r1, #32767	; 0x7fff
   17f0c:	cmp	r1, r0
   17f10:	blt	17fd4 <__assert_fail@plt+0x6fbc>
   17f14:	b	17fec <__assert_fail@plt+0x6fd4>
   17f18:	ldr	r0, [pc, #3816]	; 18e08 <__assert_fail@plt+0x7df0>
   17f1c:	ldr	r1, [fp, #8]
   17f20:	sdiv	r0, r0, r1
   17f24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f28:	cmp	r0, r1
   17f2c:	blt	17fd4 <__assert_fail@plt+0x6fbc>
   17f30:	b	17fec <__assert_fail@plt+0x6fd4>
   17f34:	ldr	r0, [fp, #8]
   17f38:	cmp	r0, #0
   17f3c:	bne	17f44 <__assert_fail@plt+0x6f2c>
   17f40:	b	17fec <__assert_fail@plt+0x6fd4>
   17f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f48:	cmp	r0, #0
   17f4c:	bge	17fbc <__assert_fail@plt+0x6fa4>
   17f50:	b	17f54 <__assert_fail@plt+0x6f3c>
   17f54:	b	17fa0 <__assert_fail@plt+0x6f88>
   17f58:	b	17fa0 <__assert_fail@plt+0x6f88>
   17f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f60:	cmn	r0, #1
   17f64:	bne	17fa0 <__assert_fail@plt+0x6f88>
   17f68:	b	17f6c <__assert_fail@plt+0x6f54>
   17f6c:	ldr	r0, [pc, #3732]	; 18e08 <__assert_fail@plt+0x7df0>
   17f70:	ldr	r1, [fp, #8]
   17f74:	add	r0, r1, r0
   17f78:	movw	r1, #0
   17f7c:	cmp	r1, r0
   17f80:	blt	17fd4 <__assert_fail@plt+0x6fbc>
   17f84:	b	17fec <__assert_fail@plt+0x6fd4>
   17f88:	ldr	r0, [fp, #8]
   17f8c:	sub	r0, r0, #1
   17f90:	movw	r1, #32767	; 0x7fff
   17f94:	cmp	r1, r0
   17f98:	blt	17fd4 <__assert_fail@plt+0x6fbc>
   17f9c:	b	17fec <__assert_fail@plt+0x6fd4>
   17fa0:	ldr	r0, [pc, #3680]	; 18e08 <__assert_fail@plt+0x7df0>
   17fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fa8:	sdiv	r0, r0, r1
   17fac:	ldr	r1, [fp, #8]
   17fb0:	cmp	r0, r1
   17fb4:	blt	17fd4 <__assert_fail@plt+0x6fbc>
   17fb8:	b	17fec <__assert_fail@plt+0x6fd4>
   17fbc:	ldr	r0, [fp, #8]
   17fc0:	movw	r1, #32767	; 0x7fff
   17fc4:	sdiv	r0, r1, r0
   17fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fcc:	cmp	r0, r1
   17fd0:	bge	17fec <__assert_fail@plt+0x6fd4>
   17fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fd8:	ldr	r1, [fp, #8]
   17fdc:	mul	r0, r0, r1
   17fe0:	sxth	r0, r0
   17fe4:	str	r0, [fp, #-28]	; 0xffffffe4
   17fe8:	b	18dd0 <__assert_fail@plt+0x7db8>
   17fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff0:	ldr	r1, [fp, #8]
   17ff4:	mul	r0, r0, r1
   17ff8:	sxth	r0, r0
   17ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   18000:	b	18dd4 <__assert_fail@plt+0x7dbc>
   18004:	ldr	r0, [fp, #8]
   18008:	cmp	r0, #0
   1800c:	bge	1811c <__assert_fail@plt+0x7104>
   18010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18014:	cmp	r0, #0
   18018:	bge	180a4 <__assert_fail@plt+0x708c>
   1801c:	b	18020 <__assert_fail@plt+0x7008>
   18020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18024:	ldr	r1, [fp, #8]
   18028:	movw	r2, #65535	; 0xffff
   1802c:	sdiv	r1, r2, r1
   18030:	cmp	r0, r1
   18034:	blt	181b8 <__assert_fail@plt+0x71a0>
   18038:	b	181d0 <__assert_fail@plt+0x71b8>
   1803c:	b	18040 <__assert_fail@plt+0x7028>
   18040:	ldr	r0, [pc, #3512]	; 18e00 <__assert_fail@plt+0x7de8>
   18044:	ldr	r1, [fp, #8]
   18048:	cmp	r1, r0
   1804c:	blt	18064 <__assert_fail@plt+0x704c>
   18050:	b	18070 <__assert_fail@plt+0x7058>
   18054:	ldr	r0, [fp, #8]
   18058:	movw	r1, #0
   1805c:	cmp	r1, r0
   18060:	bge	18070 <__assert_fail@plt+0x7058>
   18064:	movw	r0, #0
   18068:	str	r0, [sp, #76]	; 0x4c
   1806c:	b	18088 <__assert_fail@plt+0x7070>
   18070:	ldr	r0, [fp, #8]
   18074:	movw	r1, #0
   18078:	sub	r0, r1, r0
   1807c:	movw	r1, #65535	; 0xffff
   18080:	sdiv	r0, r1, r0
   18084:	str	r0, [sp, #76]	; 0x4c
   18088:	ldr	r0, [sp, #76]	; 0x4c
   1808c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18090:	mvn	r2, #0
   18094:	sub	r1, r2, r1
   18098:	cmp	r0, r1
   1809c:	ble	181b8 <__assert_fail@plt+0x71a0>
   180a0:	b	181d0 <__assert_fail@plt+0x71b8>
   180a4:	b	180a8 <__assert_fail@plt+0x7090>
   180a8:	b	18100 <__assert_fail@plt+0x70e8>
   180ac:	b	18100 <__assert_fail@plt+0x70e8>
   180b0:	ldr	r0, [fp, #8]
   180b4:	cmn	r0, #1
   180b8:	bne	18100 <__assert_fail@plt+0x70e8>
   180bc:	b	180c0 <__assert_fail@plt+0x70a8>
   180c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180c4:	add	r0, r0, #0
   180c8:	movw	r1, #0
   180cc:	cmp	r1, r0
   180d0:	blt	181b8 <__assert_fail@plt+0x71a0>
   180d4:	b	181d0 <__assert_fail@plt+0x71b8>
   180d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180dc:	movw	r1, #0
   180e0:	cmp	r1, r0
   180e4:	bge	181d0 <__assert_fail@plt+0x71b8>
   180e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180ec:	sub	r0, r0, #1
   180f0:	mvn	r1, #0
   180f4:	cmp	r1, r0
   180f8:	blt	181b8 <__assert_fail@plt+0x71a0>
   180fc:	b	181d0 <__assert_fail@plt+0x71b8>
   18100:	ldr	r0, [fp, #8]
   18104:	movw	r1, #0
   18108:	sdiv	r0, r1, r0
   1810c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18110:	cmp	r0, r1
   18114:	blt	181b8 <__assert_fail@plt+0x71a0>
   18118:	b	181d0 <__assert_fail@plt+0x71b8>
   1811c:	ldr	r0, [fp, #8]
   18120:	cmp	r0, #0
   18124:	bne	1812c <__assert_fail@plt+0x7114>
   18128:	b	181d0 <__assert_fail@plt+0x71b8>
   1812c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18130:	cmp	r0, #0
   18134:	bge	181a0 <__assert_fail@plt+0x7188>
   18138:	b	1813c <__assert_fail@plt+0x7124>
   1813c:	b	18184 <__assert_fail@plt+0x716c>
   18140:	b	18184 <__assert_fail@plt+0x716c>
   18144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18148:	cmn	r0, #1
   1814c:	bne	18184 <__assert_fail@plt+0x716c>
   18150:	b	18154 <__assert_fail@plt+0x713c>
   18154:	ldr	r0, [fp, #8]
   18158:	add	r0, r0, #0
   1815c:	movw	r1, #0
   18160:	cmp	r1, r0
   18164:	blt	181b8 <__assert_fail@plt+0x71a0>
   18168:	b	181d0 <__assert_fail@plt+0x71b8>
   1816c:	ldr	r0, [fp, #8]
   18170:	sub	r0, r0, #1
   18174:	mvn	r1, #0
   18178:	cmp	r1, r0
   1817c:	blt	181b8 <__assert_fail@plt+0x71a0>
   18180:	b	181d0 <__assert_fail@plt+0x71b8>
   18184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18188:	movw	r1, #0
   1818c:	sdiv	r0, r1, r0
   18190:	ldr	r1, [fp, #8]
   18194:	cmp	r0, r1
   18198:	blt	181b8 <__assert_fail@plt+0x71a0>
   1819c:	b	181d0 <__assert_fail@plt+0x71b8>
   181a0:	ldr	r0, [fp, #8]
   181a4:	movw	r1, #65535	; 0xffff
   181a8:	sdiv	r0, r1, r0
   181ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181b0:	cmp	r0, r1
   181b4:	bge	181d0 <__assert_fail@plt+0x71b8>
   181b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181bc:	ldr	r1, [fp, #8]
   181c0:	mul	r0, r0, r1
   181c4:	uxth	r0, r0
   181c8:	str	r0, [fp, #-28]	; 0xffffffe4
   181cc:	b	18dd0 <__assert_fail@plt+0x7db8>
   181d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d4:	ldr	r1, [fp, #8]
   181d8:	mul	r0, r0, r1
   181dc:	uxth	r0, r0
   181e0:	str	r0, [fp, #-28]	; 0xffffffe4
   181e4:	b	18dd4 <__assert_fail@plt+0x7dbc>
   181e8:	b	181ec <__assert_fail@plt+0x71d4>
   181ec:	b	181f0 <__assert_fail@plt+0x71d8>
   181f0:	ldr	r0, [fp, #8]
   181f4:	cmp	r0, #0
   181f8:	bge	182fc <__assert_fail@plt+0x72e4>
   181fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18200:	cmp	r0, #0
   18204:	bge	18290 <__assert_fail@plt+0x7278>
   18208:	b	1820c <__assert_fail@plt+0x71f4>
   1820c:	ldr	r0, [pc, #3048]	; 18dfc <__assert_fail@plt+0x7de4>
   18210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18214:	ldr	r2, [fp, #8]
   18218:	sdiv	r0, r0, r2
   1821c:	cmp	r1, r0
   18220:	blt	1838c <__assert_fail@plt+0x7374>
   18224:	b	183a0 <__assert_fail@plt+0x7388>
   18228:	b	1822c <__assert_fail@plt+0x7214>
   1822c:	ldr	r0, [pc, #3020]	; 18e00 <__assert_fail@plt+0x7de8>
   18230:	ldr	r1, [fp, #8]
   18234:	cmp	r1, r0
   18238:	blt	18250 <__assert_fail@plt+0x7238>
   1823c:	b	1825c <__assert_fail@plt+0x7244>
   18240:	ldr	r0, [fp, #8]
   18244:	movw	r1, #0
   18248:	cmp	r1, r0
   1824c:	bge	1825c <__assert_fail@plt+0x7244>
   18250:	movw	r0, #0
   18254:	str	r0, [sp, #72]	; 0x48
   18258:	b	18274 <__assert_fail@plt+0x725c>
   1825c:	ldr	r0, [pc, #2968]	; 18dfc <__assert_fail@plt+0x7de4>
   18260:	ldr	r1, [fp, #8]
   18264:	movw	r2, #0
   18268:	sub	r1, r2, r1
   1826c:	sdiv	r0, r0, r1
   18270:	str	r0, [sp, #72]	; 0x48
   18274:	ldr	r0, [sp, #72]	; 0x48
   18278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1827c:	mvn	r2, #0
   18280:	sub	r1, r2, r1
   18284:	cmp	r0, r1
   18288:	ble	1838c <__assert_fail@plt+0x7374>
   1828c:	b	183a0 <__assert_fail@plt+0x7388>
   18290:	ldr	r0, [fp, #8]
   18294:	cmn	r0, #1
   18298:	bne	182e0 <__assert_fail@plt+0x72c8>
   1829c:	b	182a0 <__assert_fail@plt+0x7288>
   182a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a4:	add	r0, r0, #-2147483648	; 0x80000000
   182a8:	movw	r1, #0
   182ac:	cmp	r1, r0
   182b0:	blt	1838c <__assert_fail@plt+0x7374>
   182b4:	b	183a0 <__assert_fail@plt+0x7388>
   182b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182bc:	movw	r1, #0
   182c0:	cmp	r1, r0
   182c4:	bge	183a0 <__assert_fail@plt+0x7388>
   182c8:	ldr	r0, [pc, #2860]	; 18dfc <__assert_fail@plt+0x7de4>
   182cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182d0:	sub	r1, r1, #1
   182d4:	cmp	r0, r1
   182d8:	blt	1838c <__assert_fail@plt+0x7374>
   182dc:	b	183a0 <__assert_fail@plt+0x7388>
   182e0:	ldr	r0, [pc, #2844]	; 18e04 <__assert_fail@plt+0x7dec>
   182e4:	ldr	r1, [fp, #8]
   182e8:	sdiv	r0, r0, r1
   182ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182f0:	cmp	r0, r1
   182f4:	blt	1838c <__assert_fail@plt+0x7374>
   182f8:	b	183a0 <__assert_fail@plt+0x7388>
   182fc:	ldr	r0, [fp, #8]
   18300:	cmp	r0, #0
   18304:	bne	1830c <__assert_fail@plt+0x72f4>
   18308:	b	183a0 <__assert_fail@plt+0x7388>
   1830c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18310:	cmp	r0, #0
   18314:	bge	18374 <__assert_fail@plt+0x735c>
   18318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1831c:	cmn	r0, #1
   18320:	bne	18358 <__assert_fail@plt+0x7340>
   18324:	b	18328 <__assert_fail@plt+0x7310>
   18328:	ldr	r0, [fp, #8]
   1832c:	add	r0, r0, #-2147483648	; 0x80000000
   18330:	movw	r1, #0
   18334:	cmp	r1, r0
   18338:	blt	1838c <__assert_fail@plt+0x7374>
   1833c:	b	183a0 <__assert_fail@plt+0x7388>
   18340:	ldr	r0, [pc, #2740]	; 18dfc <__assert_fail@plt+0x7de4>
   18344:	ldr	r1, [fp, #8]
   18348:	sub	r1, r1, #1
   1834c:	cmp	r0, r1
   18350:	blt	1838c <__assert_fail@plt+0x7374>
   18354:	b	183a0 <__assert_fail@plt+0x7388>
   18358:	ldr	r0, [pc, #2724]	; 18e04 <__assert_fail@plt+0x7dec>
   1835c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18360:	sdiv	r0, r0, r1
   18364:	ldr	r1, [fp, #8]
   18368:	cmp	r0, r1
   1836c:	blt	1838c <__assert_fail@plt+0x7374>
   18370:	b	183a0 <__assert_fail@plt+0x7388>
   18374:	ldr	r0, [pc, #2688]	; 18dfc <__assert_fail@plt+0x7de4>
   18378:	ldr	r1, [fp, #8]
   1837c:	sdiv	r0, r0, r1
   18380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18384:	cmp	r0, r1
   18388:	bge	183a0 <__assert_fail@plt+0x7388>
   1838c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18390:	ldr	r1, [fp, #8]
   18394:	mul	r0, r0, r1
   18398:	str	r0, [fp, #-28]	; 0xffffffe4
   1839c:	b	18dd0 <__assert_fail@plt+0x7db8>
   183a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a4:	ldr	r1, [fp, #8]
   183a8:	mul	r0, r0, r1
   183ac:	str	r0, [fp, #-28]	; 0xffffffe4
   183b0:	b	18dd4 <__assert_fail@plt+0x7dbc>
   183b4:	ldr	r0, [fp, #8]
   183b8:	cmp	r0, #0
   183bc:	bge	184cc <__assert_fail@plt+0x74b4>
   183c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183c4:	cmp	r0, #0
   183c8:	bge	18454 <__assert_fail@plt+0x743c>
   183cc:	b	183ec <__assert_fail@plt+0x73d4>
   183d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d4:	ldr	r1, [fp, #8]
   183d8:	mvn	r2, #0
   183dc:	udiv	r1, r2, r1
   183e0:	cmp	r0, r1
   183e4:	bcc	18568 <__assert_fail@plt+0x7550>
   183e8:	b	1857c <__assert_fail@plt+0x7564>
   183ec:	b	183f0 <__assert_fail@plt+0x73d8>
   183f0:	ldr	r0, [pc, #2568]	; 18e00 <__assert_fail@plt+0x7de8>
   183f4:	ldr	r1, [fp, #8]
   183f8:	cmp	r1, r0
   183fc:	blt	18414 <__assert_fail@plt+0x73fc>
   18400:	b	18420 <__assert_fail@plt+0x7408>
   18404:	ldr	r0, [fp, #8]
   18408:	movw	r1, #0
   1840c:	cmp	r1, r0
   18410:	bge	18420 <__assert_fail@plt+0x7408>
   18414:	movw	r0, #1
   18418:	str	r0, [sp, #68]	; 0x44
   1841c:	b	18438 <__assert_fail@plt+0x7420>
   18420:	ldr	r0, [fp, #8]
   18424:	movw	r1, #0
   18428:	sub	r0, r1, r0
   1842c:	mvn	r1, #0
   18430:	udiv	r0, r1, r0
   18434:	str	r0, [sp, #68]	; 0x44
   18438:	ldr	r0, [sp, #68]	; 0x44
   1843c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18440:	mvn	r2, #0
   18444:	sub	r1, r2, r1
   18448:	cmp	r0, r1
   1844c:	bls	18568 <__assert_fail@plt+0x7550>
   18450:	b	1857c <__assert_fail@plt+0x7564>
   18454:	b	18458 <__assert_fail@plt+0x7440>
   18458:	b	184b0 <__assert_fail@plt+0x7498>
   1845c:	b	184b0 <__assert_fail@plt+0x7498>
   18460:	ldr	r0, [fp, #8]
   18464:	cmn	r0, #1
   18468:	bne	184b0 <__assert_fail@plt+0x7498>
   1846c:	b	18470 <__assert_fail@plt+0x7458>
   18470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18474:	add	r0, r0, #0
   18478:	movw	r1, #0
   1847c:	cmp	r1, r0
   18480:	blt	18568 <__assert_fail@plt+0x7550>
   18484:	b	1857c <__assert_fail@plt+0x7564>
   18488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1848c:	movw	r1, #0
   18490:	cmp	r1, r0
   18494:	bge	1857c <__assert_fail@plt+0x7564>
   18498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1849c:	sub	r0, r0, #1
   184a0:	mvn	r1, #0
   184a4:	cmp	r1, r0
   184a8:	blt	18568 <__assert_fail@plt+0x7550>
   184ac:	b	1857c <__assert_fail@plt+0x7564>
   184b0:	ldr	r0, [fp, #8]
   184b4:	movw	r1, #0
   184b8:	sdiv	r0, r1, r0
   184bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184c0:	cmp	r0, r1
   184c4:	blt	18568 <__assert_fail@plt+0x7550>
   184c8:	b	1857c <__assert_fail@plt+0x7564>
   184cc:	ldr	r0, [fp, #8]
   184d0:	cmp	r0, #0
   184d4:	bne	184dc <__assert_fail@plt+0x74c4>
   184d8:	b	1857c <__assert_fail@plt+0x7564>
   184dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e0:	cmp	r0, #0
   184e4:	bge	18550 <__assert_fail@plt+0x7538>
   184e8:	b	184ec <__assert_fail@plt+0x74d4>
   184ec:	b	18534 <__assert_fail@plt+0x751c>
   184f0:	b	18534 <__assert_fail@plt+0x751c>
   184f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184f8:	cmn	r0, #1
   184fc:	bne	18534 <__assert_fail@plt+0x751c>
   18500:	b	18504 <__assert_fail@plt+0x74ec>
   18504:	ldr	r0, [fp, #8]
   18508:	add	r0, r0, #0
   1850c:	movw	r1, #0
   18510:	cmp	r1, r0
   18514:	blt	18568 <__assert_fail@plt+0x7550>
   18518:	b	1857c <__assert_fail@plt+0x7564>
   1851c:	ldr	r0, [fp, #8]
   18520:	sub	r0, r0, #1
   18524:	mvn	r1, #0
   18528:	cmp	r1, r0
   1852c:	blt	18568 <__assert_fail@plt+0x7550>
   18530:	b	1857c <__assert_fail@plt+0x7564>
   18534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18538:	movw	r1, #0
   1853c:	sdiv	r0, r1, r0
   18540:	ldr	r1, [fp, #8]
   18544:	cmp	r0, r1
   18548:	blt	18568 <__assert_fail@plt+0x7550>
   1854c:	b	1857c <__assert_fail@plt+0x7564>
   18550:	ldr	r0, [fp, #8]
   18554:	mvn	r1, #0
   18558:	udiv	r0, r1, r0
   1855c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18560:	cmp	r0, r1
   18564:	bcs	1857c <__assert_fail@plt+0x7564>
   18568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1856c:	ldr	r1, [fp, #8]
   18570:	mul	r0, r0, r1
   18574:	str	r0, [fp, #-28]	; 0xffffffe4
   18578:	b	18dd0 <__assert_fail@plt+0x7db8>
   1857c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18580:	ldr	r1, [fp, #8]
   18584:	mul	r0, r0, r1
   18588:	str	r0, [fp, #-28]	; 0xffffffe4
   1858c:	b	18dd4 <__assert_fail@plt+0x7dbc>
   18590:	b	18594 <__assert_fail@plt+0x757c>
   18594:	b	18598 <__assert_fail@plt+0x7580>
   18598:	ldr	r0, [fp, #8]
   1859c:	cmp	r0, #0
   185a0:	bge	186a4 <__assert_fail@plt+0x768c>
   185a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a8:	cmp	r0, #0
   185ac:	bge	18638 <__assert_fail@plt+0x7620>
   185b0:	b	185b4 <__assert_fail@plt+0x759c>
   185b4:	ldr	r0, [pc, #2112]	; 18dfc <__assert_fail@plt+0x7de4>
   185b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185bc:	ldr	r2, [fp, #8]
   185c0:	sdiv	r0, r0, r2
   185c4:	cmp	r1, r0
   185c8:	blt	18734 <__assert_fail@plt+0x771c>
   185cc:	b	18748 <__assert_fail@plt+0x7730>
   185d0:	b	185d4 <__assert_fail@plt+0x75bc>
   185d4:	ldr	r0, [pc, #2084]	; 18e00 <__assert_fail@plt+0x7de8>
   185d8:	ldr	r1, [fp, #8]
   185dc:	cmp	r1, r0
   185e0:	blt	185f8 <__assert_fail@plt+0x75e0>
   185e4:	b	18604 <__assert_fail@plt+0x75ec>
   185e8:	ldr	r0, [fp, #8]
   185ec:	movw	r1, #0
   185f0:	cmp	r1, r0
   185f4:	bge	18604 <__assert_fail@plt+0x75ec>
   185f8:	movw	r0, #0
   185fc:	str	r0, [sp, #64]	; 0x40
   18600:	b	1861c <__assert_fail@plt+0x7604>
   18604:	ldr	r0, [pc, #2032]	; 18dfc <__assert_fail@plt+0x7de4>
   18608:	ldr	r1, [fp, #8]
   1860c:	movw	r2, #0
   18610:	sub	r1, r2, r1
   18614:	sdiv	r0, r0, r1
   18618:	str	r0, [sp, #64]	; 0x40
   1861c:	ldr	r0, [sp, #64]	; 0x40
   18620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18624:	mvn	r2, #0
   18628:	sub	r1, r2, r1
   1862c:	cmp	r0, r1
   18630:	ble	18734 <__assert_fail@plt+0x771c>
   18634:	b	18748 <__assert_fail@plt+0x7730>
   18638:	ldr	r0, [fp, #8]
   1863c:	cmn	r0, #1
   18640:	bne	18688 <__assert_fail@plt+0x7670>
   18644:	b	18648 <__assert_fail@plt+0x7630>
   18648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1864c:	add	r0, r0, #-2147483648	; 0x80000000
   18650:	movw	r1, #0
   18654:	cmp	r1, r0
   18658:	blt	18734 <__assert_fail@plt+0x771c>
   1865c:	b	18748 <__assert_fail@plt+0x7730>
   18660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18664:	movw	r1, #0
   18668:	cmp	r1, r0
   1866c:	bge	18748 <__assert_fail@plt+0x7730>
   18670:	ldr	r0, [pc, #1924]	; 18dfc <__assert_fail@plt+0x7de4>
   18674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18678:	sub	r1, r1, #1
   1867c:	cmp	r0, r1
   18680:	blt	18734 <__assert_fail@plt+0x771c>
   18684:	b	18748 <__assert_fail@plt+0x7730>
   18688:	ldr	r0, [pc, #1908]	; 18e04 <__assert_fail@plt+0x7dec>
   1868c:	ldr	r1, [fp, #8]
   18690:	sdiv	r0, r0, r1
   18694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18698:	cmp	r0, r1
   1869c:	blt	18734 <__assert_fail@plt+0x771c>
   186a0:	b	18748 <__assert_fail@plt+0x7730>
   186a4:	ldr	r0, [fp, #8]
   186a8:	cmp	r0, #0
   186ac:	bne	186b4 <__assert_fail@plt+0x769c>
   186b0:	b	18748 <__assert_fail@plt+0x7730>
   186b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186b8:	cmp	r0, #0
   186bc:	bge	1871c <__assert_fail@plt+0x7704>
   186c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186c4:	cmn	r0, #1
   186c8:	bne	18700 <__assert_fail@plt+0x76e8>
   186cc:	b	186d0 <__assert_fail@plt+0x76b8>
   186d0:	ldr	r0, [fp, #8]
   186d4:	add	r0, r0, #-2147483648	; 0x80000000
   186d8:	movw	r1, #0
   186dc:	cmp	r1, r0
   186e0:	blt	18734 <__assert_fail@plt+0x771c>
   186e4:	b	18748 <__assert_fail@plt+0x7730>
   186e8:	ldr	r0, [pc, #1804]	; 18dfc <__assert_fail@plt+0x7de4>
   186ec:	ldr	r1, [fp, #8]
   186f0:	sub	r1, r1, #1
   186f4:	cmp	r0, r1
   186f8:	blt	18734 <__assert_fail@plt+0x771c>
   186fc:	b	18748 <__assert_fail@plt+0x7730>
   18700:	ldr	r0, [pc, #1788]	; 18e04 <__assert_fail@plt+0x7dec>
   18704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18708:	sdiv	r0, r0, r1
   1870c:	ldr	r1, [fp, #8]
   18710:	cmp	r0, r1
   18714:	blt	18734 <__assert_fail@plt+0x771c>
   18718:	b	18748 <__assert_fail@plt+0x7730>
   1871c:	ldr	r0, [pc, #1752]	; 18dfc <__assert_fail@plt+0x7de4>
   18720:	ldr	r1, [fp, #8]
   18724:	sdiv	r0, r0, r1
   18728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1872c:	cmp	r0, r1
   18730:	bge	18748 <__assert_fail@plt+0x7730>
   18734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18738:	ldr	r1, [fp, #8]
   1873c:	mul	r0, r0, r1
   18740:	str	r0, [fp, #-28]	; 0xffffffe4
   18744:	b	18dd0 <__assert_fail@plt+0x7db8>
   18748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1874c:	ldr	r1, [fp, #8]
   18750:	mul	r0, r0, r1
   18754:	str	r0, [fp, #-28]	; 0xffffffe4
   18758:	b	18dd4 <__assert_fail@plt+0x7dbc>
   1875c:	ldr	r0, [fp, #8]
   18760:	cmp	r0, #0
   18764:	bge	18874 <__assert_fail@plt+0x785c>
   18768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1876c:	cmp	r0, #0
   18770:	bge	187fc <__assert_fail@plt+0x77e4>
   18774:	b	18794 <__assert_fail@plt+0x777c>
   18778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1877c:	ldr	r1, [fp, #8]
   18780:	mvn	r2, #0
   18784:	udiv	r1, r2, r1
   18788:	cmp	r0, r1
   1878c:	bcc	18910 <__assert_fail@plt+0x78f8>
   18790:	b	18924 <__assert_fail@plt+0x790c>
   18794:	b	18798 <__assert_fail@plt+0x7780>
   18798:	ldr	r0, [pc, #1632]	; 18e00 <__assert_fail@plt+0x7de8>
   1879c:	ldr	r1, [fp, #8]
   187a0:	cmp	r1, r0
   187a4:	blt	187bc <__assert_fail@plt+0x77a4>
   187a8:	b	187c8 <__assert_fail@plt+0x77b0>
   187ac:	ldr	r0, [fp, #8]
   187b0:	movw	r1, #0
   187b4:	cmp	r1, r0
   187b8:	bge	187c8 <__assert_fail@plt+0x77b0>
   187bc:	movw	r0, #1
   187c0:	str	r0, [sp, #60]	; 0x3c
   187c4:	b	187e0 <__assert_fail@plt+0x77c8>
   187c8:	ldr	r0, [fp, #8]
   187cc:	movw	r1, #0
   187d0:	sub	r0, r1, r0
   187d4:	mvn	r1, #0
   187d8:	udiv	r0, r1, r0
   187dc:	str	r0, [sp, #60]	; 0x3c
   187e0:	ldr	r0, [sp, #60]	; 0x3c
   187e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187e8:	mvn	r2, #0
   187ec:	sub	r1, r2, r1
   187f0:	cmp	r0, r1
   187f4:	bls	18910 <__assert_fail@plt+0x78f8>
   187f8:	b	18924 <__assert_fail@plt+0x790c>
   187fc:	b	18800 <__assert_fail@plt+0x77e8>
   18800:	b	18858 <__assert_fail@plt+0x7840>
   18804:	b	18858 <__assert_fail@plt+0x7840>
   18808:	ldr	r0, [fp, #8]
   1880c:	cmn	r0, #1
   18810:	bne	18858 <__assert_fail@plt+0x7840>
   18814:	b	18818 <__assert_fail@plt+0x7800>
   18818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1881c:	add	r0, r0, #0
   18820:	movw	r1, #0
   18824:	cmp	r1, r0
   18828:	blt	18910 <__assert_fail@plt+0x78f8>
   1882c:	b	18924 <__assert_fail@plt+0x790c>
   18830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18834:	movw	r1, #0
   18838:	cmp	r1, r0
   1883c:	bge	18924 <__assert_fail@plt+0x790c>
   18840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18844:	sub	r0, r0, #1
   18848:	mvn	r1, #0
   1884c:	cmp	r1, r0
   18850:	blt	18910 <__assert_fail@plt+0x78f8>
   18854:	b	18924 <__assert_fail@plt+0x790c>
   18858:	ldr	r0, [fp, #8]
   1885c:	movw	r1, #0
   18860:	sdiv	r0, r1, r0
   18864:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18868:	cmp	r0, r1
   1886c:	blt	18910 <__assert_fail@plt+0x78f8>
   18870:	b	18924 <__assert_fail@plt+0x790c>
   18874:	ldr	r0, [fp, #8]
   18878:	cmp	r0, #0
   1887c:	bne	18884 <__assert_fail@plt+0x786c>
   18880:	b	18924 <__assert_fail@plt+0x790c>
   18884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18888:	cmp	r0, #0
   1888c:	bge	188f8 <__assert_fail@plt+0x78e0>
   18890:	b	18894 <__assert_fail@plt+0x787c>
   18894:	b	188dc <__assert_fail@plt+0x78c4>
   18898:	b	188dc <__assert_fail@plt+0x78c4>
   1889c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188a0:	cmn	r0, #1
   188a4:	bne	188dc <__assert_fail@plt+0x78c4>
   188a8:	b	188ac <__assert_fail@plt+0x7894>
   188ac:	ldr	r0, [fp, #8]
   188b0:	add	r0, r0, #0
   188b4:	movw	r1, #0
   188b8:	cmp	r1, r0
   188bc:	blt	18910 <__assert_fail@plt+0x78f8>
   188c0:	b	18924 <__assert_fail@plt+0x790c>
   188c4:	ldr	r0, [fp, #8]
   188c8:	sub	r0, r0, #1
   188cc:	mvn	r1, #0
   188d0:	cmp	r1, r0
   188d4:	blt	18910 <__assert_fail@plt+0x78f8>
   188d8:	b	18924 <__assert_fail@plt+0x790c>
   188dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188e0:	movw	r1, #0
   188e4:	sdiv	r0, r1, r0
   188e8:	ldr	r1, [fp, #8]
   188ec:	cmp	r0, r1
   188f0:	blt	18910 <__assert_fail@plt+0x78f8>
   188f4:	b	18924 <__assert_fail@plt+0x790c>
   188f8:	ldr	r0, [fp, #8]
   188fc:	mvn	r1, #0
   18900:	udiv	r0, r1, r0
   18904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18908:	cmp	r0, r1
   1890c:	bcs	18924 <__assert_fail@plt+0x790c>
   18910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18914:	ldr	r1, [fp, #8]
   18918:	mul	r0, r0, r1
   1891c:	str	r0, [fp, #-28]	; 0xffffffe4
   18920:	b	18dd0 <__assert_fail@plt+0x7db8>
   18924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18928:	ldr	r1, [fp, #8]
   1892c:	mul	r0, r0, r1
   18930:	str	r0, [fp, #-28]	; 0xffffffe4
   18934:	b	18dd4 <__assert_fail@plt+0x7dbc>
   18938:	b	1893c <__assert_fail@plt+0x7924>
   1893c:	ldr	r0, [fp, #8]
   18940:	cmp	r0, #0
   18944:	bge	18aac <__assert_fail@plt+0x7a94>
   18948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1894c:	cmp	r0, #0
   18950:	bge	18a28 <__assert_fail@plt+0x7a10>
   18954:	b	18958 <__assert_fail@plt+0x7940>
   18958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1895c:	ldr	r1, [fp, #8]
   18960:	asr	r3, r1, #31
   18964:	mvn	r2, #0
   18968:	mvn	ip, #-2147483648	; 0x80000000
   1896c:	str	r0, [sp, #56]	; 0x38
   18970:	mov	r0, r2
   18974:	str	r1, [sp, #52]	; 0x34
   18978:	mov	r1, ip
   1897c:	ldr	r2, [sp, #52]	; 0x34
   18980:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   18984:	ldr	r2, [sp, #56]	; 0x38
   18988:	subs	r0, r2, r0
   1898c:	rscs	r1, r1, r2, asr #31
   18990:	blt	18b74 <__assert_fail@plt+0x7b5c>
   18994:	b	18b88 <__assert_fail@plt+0x7b70>
   18998:	b	1899c <__assert_fail@plt+0x7984>
   1899c:	ldr	r0, [pc, #1116]	; 18e00 <__assert_fail@plt+0x7de8>
   189a0:	ldr	r1, [fp, #8]
   189a4:	cmp	r1, r0
   189a8:	blt	189c0 <__assert_fail@plt+0x79a8>
   189ac:	b	189d4 <__assert_fail@plt+0x79bc>
   189b0:	ldr	r0, [fp, #8]
   189b4:	movw	r1, #0
   189b8:	cmp	r1, r0
   189bc:	bge	189d4 <__assert_fail@plt+0x79bc>
   189c0:	mov	r0, #0
   189c4:	mvn	r1, #0
   189c8:	str	r1, [sp, #48]	; 0x30
   189cc:	str	r0, [sp, #44]	; 0x2c
   189d0:	b	18a08 <__assert_fail@plt+0x79f0>
   189d4:	ldr	r0, [fp, #8]
   189d8:	rsb	r0, r0, #0
   189dc:	asr	r3, r0, #31
   189e0:	mvn	r1, #0
   189e4:	mvn	r2, #-2147483648	; 0x80000000
   189e8:	str	r0, [sp, #40]	; 0x28
   189ec:	mov	r0, r1
   189f0:	mov	r1, r2
   189f4:	ldr	r2, [sp, #40]	; 0x28
   189f8:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   189fc:	str	r0, [sp, #48]	; 0x30
   18a00:	str	r1, [sp, #44]	; 0x2c
   18a04:	b	18a08 <__assert_fail@plt+0x79f0>
   18a08:	ldr	r0, [sp, #44]	; 0x2c
   18a0c:	ldr	r1, [sp, #48]	; 0x30
   18a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a14:	mvn	r2, r2
   18a18:	subs	r1, r2, r1
   18a1c:	rscs	r0, r0, r2, asr #31
   18a20:	bge	18b74 <__assert_fail@plt+0x7b5c>
   18a24:	b	18b88 <__assert_fail@plt+0x7b70>
   18a28:	ldr	r0, [fp, #8]
   18a2c:	cmn	r0, #1
   18a30:	bne	18a74 <__assert_fail@plt+0x7a5c>
   18a34:	b	18a38 <__assert_fail@plt+0x7a20>
   18a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a3c:	mov	r1, #-2147483648	; 0x80000000
   18a40:	add	r1, r1, r0, asr #31
   18a44:	rsbs	r0, r0, #0
   18a48:	rscs	r1, r1, #0
   18a4c:	blt	18b74 <__assert_fail@plt+0x7b5c>
   18a50:	b	18b88 <__assert_fail@plt+0x7b70>
   18a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a58:	movw	r1, #0
   18a5c:	cmp	r1, r0
   18a60:	bge	18b88 <__assert_fail@plt+0x7b70>
   18a64:	mov	r0, #0
   18a68:	cmp	r0, #0
   18a6c:	bne	18b74 <__assert_fail@plt+0x7b5c>
   18a70:	b	18b88 <__assert_fail@plt+0x7b70>
   18a74:	ldr	r0, [fp, #8]
   18a78:	asr	r3, r0, #31
   18a7c:	mov	r1, #0
   18a80:	mov	r2, #-2147483648	; 0x80000000
   18a84:	str	r0, [sp, #36]	; 0x24
   18a88:	mov	r0, r1
   18a8c:	mov	r1, r2
   18a90:	ldr	r2, [sp, #36]	; 0x24
   18a94:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   18a98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a9c:	subs	r0, r0, r2
   18aa0:	sbcs	r1, r1, r2, asr #31
   18aa4:	blt	18b74 <__assert_fail@plt+0x7b5c>
   18aa8:	b	18b88 <__assert_fail@plt+0x7b70>
   18aac:	ldr	r0, [fp, #8]
   18ab0:	cmp	r0, #0
   18ab4:	bne	18abc <__assert_fail@plt+0x7aa4>
   18ab8:	b	18b88 <__assert_fail@plt+0x7b70>
   18abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac0:	cmp	r0, #0
   18ac4:	bge	18b3c <__assert_fail@plt+0x7b24>
   18ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18acc:	cmn	r0, #1
   18ad0:	bne	18b04 <__assert_fail@plt+0x7aec>
   18ad4:	b	18ad8 <__assert_fail@plt+0x7ac0>
   18ad8:	ldr	r0, [fp, #8]
   18adc:	mov	r1, #-2147483648	; 0x80000000
   18ae0:	add	r1, r1, r0, asr #31
   18ae4:	rsbs	r0, r0, #0
   18ae8:	rscs	r1, r1, #0
   18aec:	blt	18b74 <__assert_fail@plt+0x7b5c>
   18af0:	b	18b88 <__assert_fail@plt+0x7b70>
   18af4:	mov	r0, #0
   18af8:	cmp	r0, #0
   18afc:	bne	18b74 <__assert_fail@plt+0x7b5c>
   18b00:	b	18b88 <__assert_fail@plt+0x7b70>
   18b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b08:	asr	r3, r0, #31
   18b0c:	mov	r1, #0
   18b10:	mov	r2, #-2147483648	; 0x80000000
   18b14:	str	r0, [sp, #32]
   18b18:	mov	r0, r1
   18b1c:	mov	r1, r2
   18b20:	ldr	r2, [sp, #32]
   18b24:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   18b28:	ldr	r2, [fp, #8]
   18b2c:	subs	r0, r0, r2
   18b30:	sbcs	r1, r1, r2, asr #31
   18b34:	blt	18b74 <__assert_fail@plt+0x7b5c>
   18b38:	b	18b88 <__assert_fail@plt+0x7b70>
   18b3c:	ldr	r0, [fp, #8]
   18b40:	asr	r3, r0, #31
   18b44:	mvn	r1, #0
   18b48:	mvn	r2, #-2147483648	; 0x80000000
   18b4c:	str	r0, [sp, #28]
   18b50:	mov	r0, r1
   18b54:	mov	r1, r2
   18b58:	ldr	r2, [sp, #28]
   18b5c:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   18b60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b64:	subs	r0, r0, r2
   18b68:	sbcs	r1, r1, r2, asr #31
   18b6c:	bge	18b88 <__assert_fail@plt+0x7b70>
   18b70:	b	18b74 <__assert_fail@plt+0x7b5c>
   18b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b78:	ldr	r1, [fp, #8]
   18b7c:	mul	r0, r0, r1
   18b80:	str	r0, [fp, #-28]	; 0xffffffe4
   18b84:	b	18dd0 <__assert_fail@plt+0x7db8>
   18b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b8c:	ldr	r1, [fp, #8]
   18b90:	mul	r0, r0, r1
   18b94:	str	r0, [fp, #-28]	; 0xffffffe4
   18b98:	b	18dd4 <__assert_fail@plt+0x7dbc>
   18b9c:	ldr	r0, [fp, #8]
   18ba0:	cmp	r0, #0
   18ba4:	bge	18cf4 <__assert_fail@plt+0x7cdc>
   18ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bac:	cmp	r0, #0
   18bb0:	bge	18c7c <__assert_fail@plt+0x7c64>
   18bb4:	b	18bf4 <__assert_fail@plt+0x7bdc>
   18bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bbc:	ldr	r1, [fp, #8]
   18bc0:	asr	r3, r1, #31
   18bc4:	mvn	r2, #0
   18bc8:	str	r0, [sp, #24]
   18bcc:	mov	r0, r2
   18bd0:	str	r1, [sp, #20]
   18bd4:	mov	r1, r2
   18bd8:	ldr	r2, [sp, #20]
   18bdc:	bl	1b2a0 <__assert_fail@plt+0xa288>
   18be0:	ldr	r2, [sp, #24]
   18be4:	subs	r0, r2, r0
   18be8:	rscs	r1, r1, r2, asr #31
   18bec:	bcc	18da8 <__assert_fail@plt+0x7d90>
   18bf0:	b	18dbc <__assert_fail@plt+0x7da4>
   18bf4:	b	18bf8 <__assert_fail@plt+0x7be0>
   18bf8:	ldr	r0, [pc, #512]	; 18e00 <__assert_fail@plt+0x7de8>
   18bfc:	ldr	r1, [fp, #8]
   18c00:	cmp	r1, r0
   18c04:	blt	18c1c <__assert_fail@plt+0x7c04>
   18c08:	b	18c30 <__assert_fail@plt+0x7c18>
   18c0c:	ldr	r0, [fp, #8]
   18c10:	movw	r1, #0
   18c14:	cmp	r1, r0
   18c18:	bge	18c30 <__assert_fail@plt+0x7c18>
   18c1c:	mov	r0, #1
   18c20:	mvn	r1, #0
   18c24:	str	r1, [sp, #16]
   18c28:	str	r0, [sp, #12]
   18c2c:	b	18c5c <__assert_fail@plt+0x7c44>
   18c30:	ldr	r0, [fp, #8]
   18c34:	rsb	r0, r0, #0
   18c38:	asr	r3, r0, #31
   18c3c:	mvn	r1, #0
   18c40:	str	r0, [sp, #8]
   18c44:	mov	r0, r1
   18c48:	ldr	r2, [sp, #8]
   18c4c:	bl	1b2a0 <__assert_fail@plt+0xa288>
   18c50:	str	r0, [sp, #16]
   18c54:	str	r1, [sp, #12]
   18c58:	b	18c5c <__assert_fail@plt+0x7c44>
   18c5c:	ldr	r0, [sp, #12]
   18c60:	ldr	r1, [sp, #16]
   18c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c68:	mvn	r2, r2
   18c6c:	subs	r1, r2, r1
   18c70:	rscs	r0, r0, r2, asr #31
   18c74:	bcs	18da8 <__assert_fail@plt+0x7d90>
   18c78:	b	18dbc <__assert_fail@plt+0x7da4>
   18c7c:	b	18c80 <__assert_fail@plt+0x7c68>
   18c80:	b	18cd8 <__assert_fail@plt+0x7cc0>
   18c84:	b	18cd8 <__assert_fail@plt+0x7cc0>
   18c88:	ldr	r0, [fp, #8]
   18c8c:	cmn	r0, #1
   18c90:	bne	18cd8 <__assert_fail@plt+0x7cc0>
   18c94:	b	18c98 <__assert_fail@plt+0x7c80>
   18c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c9c:	add	r0, r0, #0
   18ca0:	movw	r1, #0
   18ca4:	cmp	r1, r0
   18ca8:	blt	18da8 <__assert_fail@plt+0x7d90>
   18cac:	b	18dbc <__assert_fail@plt+0x7da4>
   18cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cb4:	movw	r1, #0
   18cb8:	cmp	r1, r0
   18cbc:	bge	18dbc <__assert_fail@plt+0x7da4>
   18cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc4:	sub	r0, r0, #1
   18cc8:	mvn	r1, #0
   18ccc:	cmp	r1, r0
   18cd0:	blt	18da8 <__assert_fail@plt+0x7d90>
   18cd4:	b	18dbc <__assert_fail@plt+0x7da4>
   18cd8:	ldr	r0, [fp, #8]
   18cdc:	movw	r1, #0
   18ce0:	sdiv	r0, r1, r0
   18ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ce8:	cmp	r0, r1
   18cec:	blt	18da8 <__assert_fail@plt+0x7d90>
   18cf0:	b	18dbc <__assert_fail@plt+0x7da4>
   18cf4:	ldr	r0, [fp, #8]
   18cf8:	cmp	r0, #0
   18cfc:	bne	18d04 <__assert_fail@plt+0x7cec>
   18d00:	b	18dbc <__assert_fail@plt+0x7da4>
   18d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d08:	cmp	r0, #0
   18d0c:	bge	18d78 <__assert_fail@plt+0x7d60>
   18d10:	b	18d14 <__assert_fail@plt+0x7cfc>
   18d14:	b	18d5c <__assert_fail@plt+0x7d44>
   18d18:	b	18d5c <__assert_fail@plt+0x7d44>
   18d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d20:	cmn	r0, #1
   18d24:	bne	18d5c <__assert_fail@plt+0x7d44>
   18d28:	b	18d2c <__assert_fail@plt+0x7d14>
   18d2c:	ldr	r0, [fp, #8]
   18d30:	add	r0, r0, #0
   18d34:	movw	r1, #0
   18d38:	cmp	r1, r0
   18d3c:	blt	18da8 <__assert_fail@plt+0x7d90>
   18d40:	b	18dbc <__assert_fail@plt+0x7da4>
   18d44:	ldr	r0, [fp, #8]
   18d48:	sub	r0, r0, #1
   18d4c:	mvn	r1, #0
   18d50:	cmp	r1, r0
   18d54:	blt	18da8 <__assert_fail@plt+0x7d90>
   18d58:	b	18dbc <__assert_fail@plt+0x7da4>
   18d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d60:	movw	r1, #0
   18d64:	sdiv	r0, r1, r0
   18d68:	ldr	r1, [fp, #8]
   18d6c:	cmp	r0, r1
   18d70:	blt	18da8 <__assert_fail@plt+0x7d90>
   18d74:	b	18dbc <__assert_fail@plt+0x7da4>
   18d78:	ldr	r0, [fp, #8]
   18d7c:	asr	r3, r0, #31
   18d80:	mvn	r1, #0
   18d84:	str	r0, [sp, #4]
   18d88:	mov	r0, r1
   18d8c:	ldr	r2, [sp, #4]
   18d90:	bl	1b2a0 <__assert_fail@plt+0xa288>
   18d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d98:	subs	r0, r0, r2
   18d9c:	sbcs	r1, r1, r2, asr #31
   18da0:	bcs	18dbc <__assert_fail@plt+0x7da4>
   18da4:	b	18da8 <__assert_fail@plt+0x7d90>
   18da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dac:	ldr	r1, [fp, #8]
   18db0:	mul	r0, r0, r1
   18db4:	str	r0, [fp, #-28]	; 0xffffffe4
   18db8:	b	18dd0 <__assert_fail@plt+0x7db8>
   18dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dc0:	ldr	r1, [fp, #8]
   18dc4:	mul	r0, r0, r1
   18dc8:	str	r0, [fp, #-28]	; 0xffffffe4
   18dcc:	b	18dd4 <__assert_fail@plt+0x7dbc>
   18dd0:	bl	18fac <__assert_fail@plt+0x7f94>
   18dd4:	ldr	r0, [fp, #-4]
   18dd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ddc:	bl	1630c <__assert_fail@plt+0x52f4>
   18de0:	str	r0, [fp, #-4]
   18de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de8:	ldr	r1, [fp, #-8]
   18dec:	str	r0, [r1]
   18df0:	ldr	r0, [fp, #-4]
   18df4:	mov	sp, fp
   18df8:	pop	{fp, pc}
   18dfc:	svcvc	0x00ffffff
   18e00:	andhi	r0, r0, r1
   18e04:	andhi	r0, r0, r0
   18e08:			; <UNDEFINED> instruction: 0xffff8000
   18e0c:	push	{fp, lr}
   18e10:	mov	fp, sp
   18e14:	sub	sp, sp, #8
   18e18:	str	r0, [sp, #4]
   18e1c:	ldr	r0, [sp, #4]
   18e20:	movw	r1, #1
   18e24:	bl	18e30 <__assert_fail@plt+0x7e18>
   18e28:	mov	sp, fp
   18e2c:	pop	{fp, pc}
   18e30:	push	{fp, lr}
   18e34:	mov	fp, sp
   18e38:	sub	sp, sp, #8
   18e3c:	str	r0, [sp, #4]
   18e40:	str	r1, [sp]
   18e44:	ldr	r0, [sp, #4]
   18e48:	ldr	r1, [sp]
   18e4c:	bl	18ffc <__assert_fail@plt+0x7fe4>
   18e50:	bl	16298 <__assert_fail@plt+0x5280>
   18e54:	mov	sp, fp
   18e58:	pop	{fp, pc}
   18e5c:	push	{fp, lr}
   18e60:	mov	fp, sp
   18e64:	sub	sp, sp, #8
   18e68:	str	r0, [sp, #4]
   18e6c:	ldr	r0, [sp, #4]
   18e70:	movw	r1, #1
   18e74:	bl	18e80 <__assert_fail@plt+0x7e68>
   18e78:	mov	sp, fp
   18e7c:	pop	{fp, pc}
   18e80:	push	{fp, lr}
   18e84:	mov	fp, sp
   18e88:	sub	sp, sp, #8
   18e8c:	str	r0, [sp, #4]
   18e90:	str	r1, [sp]
   18e94:	ldr	r0, [sp, #4]
   18e98:	ldr	r1, [sp]
   18e9c:	bl	19438 <__assert_fail@plt+0x8420>
   18ea0:	bl	16298 <__assert_fail@plt+0x5280>
   18ea4:	mov	sp, fp
   18ea8:	pop	{fp, pc}
   18eac:	push	{fp, lr}
   18eb0:	mov	fp, sp
   18eb4:	sub	sp, sp, #16
   18eb8:	str	r0, [fp, #-4]
   18ebc:	str	r1, [sp, #8]
   18ec0:	ldr	r0, [sp, #8]
   18ec4:	bl	16274 <__assert_fail@plt+0x525c>
   18ec8:	ldr	r1, [fp, #-4]
   18ecc:	ldr	r2, [sp, #8]
   18ed0:	str	r0, [sp, #4]
   18ed4:	bl	10e2c <memcpy@plt>
   18ed8:	ldr	r0, [sp, #4]
   18edc:	mov	sp, fp
   18ee0:	pop	{fp, pc}
   18ee4:	push	{fp, lr}
   18ee8:	mov	fp, sp
   18eec:	sub	sp, sp, #16
   18ef0:	str	r0, [fp, #-4]
   18ef4:	str	r1, [sp, #8]
   18ef8:	ldr	r0, [sp, #8]
   18efc:	bl	162c8 <__assert_fail@plt+0x52b0>
   18f00:	ldr	r1, [fp, #-4]
   18f04:	ldr	r2, [sp, #8]
   18f08:	str	r0, [sp, #4]
   18f0c:	bl	10e2c <memcpy@plt>
   18f10:	ldr	r0, [sp, #4]
   18f14:	mov	sp, fp
   18f18:	pop	{fp, pc}
   18f1c:	push	{fp, lr}
   18f20:	mov	fp, sp
   18f24:	sub	sp, sp, #16
   18f28:	str	r0, [fp, #-4]
   18f2c:	str	r1, [sp, #8]
   18f30:	ldr	r0, [sp, #8]
   18f34:	add	r0, r0, #1
   18f38:	bl	162c8 <__assert_fail@plt+0x52b0>
   18f3c:	str	r0, [sp, #4]
   18f40:	ldr	r0, [sp, #4]
   18f44:	ldr	r1, [sp, #8]
   18f48:	add	r0, r0, r1
   18f4c:	movw	r1, #0
   18f50:	strb	r1, [r0]
   18f54:	ldr	r0, [sp, #4]
   18f58:	ldr	r1, [fp, #-4]
   18f5c:	ldr	r2, [sp, #8]
   18f60:	str	r0, [sp]
   18f64:	bl	10e2c <memcpy@plt>
   18f68:	ldr	r0, [sp]
   18f6c:	mov	sp, fp
   18f70:	pop	{fp, pc}
   18f74:	push	{fp, lr}
   18f78:	mov	fp, sp
   18f7c:	sub	sp, sp, #8
   18f80:	str	r0, [sp, #4]
   18f84:	ldr	r0, [sp, #4]
   18f88:	ldr	r1, [sp, #4]
   18f8c:	str	r0, [sp]
   18f90:	mov	r0, r1
   18f94:	bl	10f58 <strlen@plt>
   18f98:	add	r1, r0, #1
   18f9c:	ldr	r0, [sp]
   18fa0:	bl	18eac <__assert_fail@plt+0x7e94>
   18fa4:	mov	sp, fp
   18fa8:	pop	{fp, pc}
   18fac:	push	{fp, lr}
   18fb0:	mov	fp, sp
   18fb4:	sub	sp, sp, #8
   18fb8:	movw	r0, #49384	; 0xc0e8
   18fbc:	movt	r0, #2
   18fc0:	ldr	r0, [r0]
   18fc4:	movw	r1, #48428	; 0xbd2c
   18fc8:	movt	r1, #1
   18fcc:	str	r0, [sp, #4]
   18fd0:	mov	r0, r1
   18fd4:	bl	10f4c <gettext@plt>
   18fd8:	ldr	r1, [sp, #4]
   18fdc:	str	r0, [sp]
   18fe0:	mov	r0, r1
   18fe4:	movw	r1, #0
   18fe8:	movw	r2, #47303	; 0xb8c7
   18fec:	movt	r2, #1
   18ff0:	ldr	r3, [sp]
   18ff4:	bl	10ec8 <error@plt>
   18ff8:	bl	11000 <abort@plt>
   18ffc:	push	{fp, lr}
   19000:	mov	fp, sp
   19004:	sub	sp, sp, #16
   19008:	str	r0, [sp, #8]
   1900c:	str	r1, [sp, #4]
   19010:	ldr	r0, [sp, #8]
   19014:	cmp	r0, #0
   19018:	beq	19028 <__assert_fail@plt+0x8010>
   1901c:	ldr	r0, [sp, #4]
   19020:	cmp	r0, #0
   19024:	bne	19034 <__assert_fail@plt+0x801c>
   19028:	movw	r0, #1
   1902c:	str	r0, [sp, #4]
   19030:	str	r0, [sp, #8]
   19034:	ldr	r0, [sp, #4]
   19038:	cmp	r0, #0
   1903c:	beq	19070 <__assert_fail@plt+0x8058>
   19040:	ldr	r0, [pc, #76]	; 19094 <__assert_fail@plt+0x807c>
   19044:	ldr	r1, [sp, #4]
   19048:	udiv	r0, r0, r1
   1904c:	ldr	r1, [sp, #8]
   19050:	cmp	r0, r1
   19054:	bcs	19070 <__assert_fail@plt+0x8058>
   19058:	bl	10f70 <__errno_location@plt>
   1905c:	movw	r1, #12
   19060:	str	r1, [r0]
   19064:	movw	r0, #0
   19068:	str	r0, [fp, #-4]
   1906c:	b	19088 <__assert_fail@plt+0x8070>
   19070:	ldr	r0, [sp, #8]
   19074:	ldr	r1, [sp, #4]
   19078:	bl	10dc0 <calloc@plt>
   1907c:	str	r0, [sp]
   19080:	ldr	r0, [sp]
   19084:	str	r0, [fp, #-4]
   19088:	ldr	r0, [fp, #-4]
   1908c:	mov	sp, fp
   19090:	pop	{fp, pc}
   19094:	svcvc	0x00ffffff
   19098:	push	{fp, lr}
   1909c:	mov	fp, sp
   190a0:	sub	sp, sp, #16
   190a4:	str	r0, [sp, #8]
   190a8:	ldr	r0, [sp, #8]
   190ac:	cmp	r0, #0
   190b0:	bne	190bc <__assert_fail@plt+0x80a4>
   190b4:	movw	r0, #1
   190b8:	str	r0, [sp, #8]
   190bc:	ldr	r0, [pc, #64]	; 19104 <__assert_fail@plt+0x80ec>
   190c0:	ldr	r1, [sp, #8]
   190c4:	cmp	r0, r1
   190c8:	bcs	190e4 <__assert_fail@plt+0x80cc>
   190cc:	bl	10f70 <__errno_location@plt>
   190d0:	movw	r1, #12
   190d4:	str	r1, [r0]
   190d8:	movw	r0, #0
   190dc:	str	r0, [fp, #-4]
   190e0:	b	190f8 <__assert_fail@plt+0x80e0>
   190e4:	ldr	r0, [sp, #8]
   190e8:	bl	10eec <malloc@plt>
   190ec:	str	r0, [sp, #4]
   190f0:	ldr	r0, [sp, #4]
   190f4:	str	r0, [fp, #-4]
   190f8:	ldr	r0, [fp, #-4]
   190fc:	mov	sp, fp
   19100:	pop	{fp, pc}
   19104:	svcvc	0x00ffffff
   19108:	push	{fp, lr}
   1910c:	mov	fp, sp
   19110:	sub	sp, sp, #16
   19114:	str	r0, [sp, #8]
   19118:	str	r1, [sp, #4]
   1911c:	ldr	r0, [sp, #8]
   19120:	movw	r1, #0
   19124:	cmp	r0, r1
   19128:	bne	1913c <__assert_fail@plt+0x8124>
   1912c:	ldr	r0, [sp, #4]
   19130:	bl	19098 <__assert_fail@plt+0x8080>
   19134:	str	r0, [fp, #-4]
   19138:	b	1919c <__assert_fail@plt+0x8184>
   1913c:	ldr	r0, [sp, #4]
   19140:	cmp	r0, #0
   19144:	bne	1915c <__assert_fail@plt+0x8144>
   19148:	ldr	r0, [sp, #8]
   1914c:	bl	19334 <__assert_fail@plt+0x831c>
   19150:	movw	r0, #0
   19154:	str	r0, [fp, #-4]
   19158:	b	1919c <__assert_fail@plt+0x8184>
   1915c:	ldr	r0, [pc, #68]	; 191a8 <__assert_fail@plt+0x8190>
   19160:	ldr	r1, [sp, #4]
   19164:	cmp	r0, r1
   19168:	bcs	19184 <__assert_fail@plt+0x816c>
   1916c:	bl	10f70 <__errno_location@plt>
   19170:	movw	r1, #12
   19174:	str	r1, [r0]
   19178:	movw	r0, #0
   1917c:	str	r0, [fp, #-4]
   19180:	b	1919c <__assert_fail@plt+0x8184>
   19184:	ldr	r0, [sp, #8]
   19188:	ldr	r1, [sp, #4]
   1918c:	bl	10e68 <realloc@plt>
   19190:	str	r0, [sp]
   19194:	ldr	r0, [sp]
   19198:	str	r0, [fp, #-4]
   1919c:	ldr	r0, [fp, #-4]
   191a0:	mov	sp, fp
   191a4:	pop	{fp, pc}
   191a8:	svcvc	0x00ffffff
   191ac:	push	{fp, lr}
   191b0:	mov	fp, sp
   191b4:	sub	sp, sp, #24
   191b8:	str	r0, [fp, #-8]
   191bc:	str	r1, [sp, #12]
   191c0:	ldr	r0, [fp, #-8]
   191c4:	str	r0, [sp, #8]
   191c8:	ldr	r0, [sp, #12]
   191cc:	str	r0, [sp, #4]
   191d0:	ldr	r0, [sp, #8]
   191d4:	ldr	r1, [sp, #4]
   191d8:	cmp	r0, r1
   191dc:	bne	191ec <__assert_fail@plt+0x81d4>
   191e0:	movw	r0, #0
   191e4:	str	r0, [fp, #-4]
   191e8:	b	19258 <__assert_fail@plt+0x8240>
   191ec:	b	191f0 <__assert_fail@plt+0x81d8>
   191f0:	ldr	r0, [sp, #8]
   191f4:	ldrb	r0, [r0]
   191f8:	bl	1af4c <__assert_fail@plt+0x9f34>
   191fc:	strb	r0, [sp, #3]
   19200:	ldr	r0, [sp, #4]
   19204:	ldrb	r0, [r0]
   19208:	bl	1af4c <__assert_fail@plt+0x9f34>
   1920c:	strb	r0, [sp, #2]
   19210:	ldrb	r0, [sp, #3]
   19214:	cmp	r0, #0
   19218:	bne	19220 <__assert_fail@plt+0x8208>
   1921c:	b	19248 <__assert_fail@plt+0x8230>
   19220:	ldr	r0, [sp, #8]
   19224:	add	r0, r0, #1
   19228:	str	r0, [sp, #8]
   1922c:	ldr	r0, [sp, #4]
   19230:	add	r0, r0, #1
   19234:	str	r0, [sp, #4]
   19238:	ldrb	r0, [sp, #3]
   1923c:	ldrb	r1, [sp, #2]
   19240:	cmp	r0, r1
   19244:	beq	191f0 <__assert_fail@plt+0x81d8>
   19248:	ldrb	r0, [sp, #3]
   1924c:	ldrb	r1, [sp, #2]
   19250:	sub	r0, r0, r1
   19254:	str	r0, [fp, #-4]
   19258:	ldr	r0, [fp, #-4]
   1925c:	mov	sp, fp
   19260:	pop	{fp, pc}
   19264:	push	{fp, lr}
   19268:	mov	fp, sp
   1926c:	sub	sp, sp, #16
   19270:	str	r0, [sp, #8]
   19274:	ldr	r0, [sp, #8]
   19278:	bl	10ea4 <__fpending@plt>
   1927c:	cmp	r0, #0
   19280:	movw	r0, #0
   19284:	movne	r0, #1
   19288:	and	r0, r0, #1
   1928c:	strb	r0, [sp, #7]
   19290:	ldr	r0, [sp, #8]
   19294:	bl	10eb0 <ferror_unlocked@plt>
   19298:	cmp	r0, #0
   1929c:	movw	r0, #0
   192a0:	movne	r0, #1
   192a4:	and	r0, r0, #1
   192a8:	strb	r0, [sp, #6]
   192ac:	ldr	r0, [sp, #8]
   192b0:	bl	12638 <__assert_fail@plt+0x1620>
   192b4:	cmp	r0, #0
   192b8:	movw	r0, #0
   192bc:	movne	r0, #1
   192c0:	and	r0, r0, #1
   192c4:	strb	r0, [sp, #5]
   192c8:	ldrb	r0, [sp, #6]
   192cc:	tst	r0, #1
   192d0:	bne	192fc <__assert_fail@plt+0x82e4>
   192d4:	ldrb	r0, [sp, #5]
   192d8:	tst	r0, #1
   192dc:	beq	19320 <__assert_fail@plt+0x8308>
   192e0:	ldrb	r0, [sp, #7]
   192e4:	tst	r0, #1
   192e8:	bne	192fc <__assert_fail@plt+0x82e4>
   192ec:	bl	10f70 <__errno_location@plt>
   192f0:	ldr	r0, [r0]
   192f4:	cmp	r0, #9
   192f8:	beq	19320 <__assert_fail@plt+0x8308>
   192fc:	ldrb	r0, [sp, #5]
   19300:	tst	r0, #1
   19304:	bne	19314 <__assert_fail@plt+0x82fc>
   19308:	bl	10f70 <__errno_location@plt>
   1930c:	movw	r1, #0
   19310:	str	r1, [r0]
   19314:	mvn	r0, #0
   19318:	str	r0, [fp, #-4]
   1931c:	b	19328 <__assert_fail@plt+0x8310>
   19320:	movw	r0, #0
   19324:	str	r0, [fp, #-4]
   19328:	ldr	r0, [fp, #-4]
   1932c:	mov	sp, fp
   19330:	pop	{fp, pc}
   19334:	push	{fp, lr}
   19338:	mov	fp, sp
   1933c:	sub	sp, sp, #16
   19340:	str	r0, [fp, #-4]
   19344:	bl	10f70 <__errno_location@plt>
   19348:	ldr	r0, [r0]
   1934c:	str	r0, [sp, #8]
   19350:	ldr	r0, [fp, #-4]
   19354:	bl	10e14 <free@plt>
   19358:	ldr	r0, [sp, #8]
   1935c:	str	r0, [sp, #4]
   19360:	bl	10f70 <__errno_location@plt>
   19364:	ldr	r1, [sp, #4]
   19368:	str	r1, [r0]
   1936c:	mov	sp, fp
   19370:	pop	{fp, pc}
   19374:	push	{fp, lr}
   19378:	mov	fp, sp
   1937c:	bl	10f70 <__errno_location@plt>
   19380:	movw	r1, #12
   19384:	str	r1, [r0]
   19388:	movw	r0, #0
   1938c:	pop	{fp, pc}
   19390:	push	{fp, lr}
   19394:	mov	fp, sp
   19398:	sub	sp, sp, #8
   1939c:	str	r0, [sp, #4]
   193a0:	ldr	r0, [sp, #4]
   193a4:	cmn	r0, #1
   193a8:	bhi	193bc <__assert_fail@plt+0x83a4>
   193ac:	ldr	r0, [sp, #4]
   193b0:	bl	19098 <__assert_fail@plt+0x8080>
   193b4:	str	r0, [sp]
   193b8:	b	193c4 <__assert_fail@plt+0x83ac>
   193bc:	bl	19374 <__assert_fail@plt+0x835c>
   193c0:	str	r0, [sp]
   193c4:	ldr	r0, [sp]
   193c8:	mov	sp, fp
   193cc:	pop	{fp, pc}
   193d0:	push	{fp, lr}
   193d4:	mov	fp, sp
   193d8:	sub	sp, sp, #16
   193dc:	str	r0, [fp, #-4]
   193e0:	str	r1, [sp, #8]
   193e4:	ldr	r0, [sp, #8]
   193e8:	cmn	r0, #1
   193ec:	bhi	19424 <__assert_fail@plt+0x840c>
   193f0:	ldr	r0, [fp, #-4]
   193f4:	ldr	r1, [sp, #8]
   193f8:	ldr	r2, [sp, #8]
   193fc:	cmp	r2, #0
   19400:	movw	r2, #0
   19404:	movne	r2, #1
   19408:	mvn	r3, #0
   1940c:	eor	r2, r2, r3
   19410:	and	r2, r2, #1
   19414:	orr	r1, r1, r2
   19418:	bl	19108 <__assert_fail@plt+0x80f0>
   1941c:	str	r0, [sp, #4]
   19420:	b	1942c <__assert_fail@plt+0x8414>
   19424:	bl	19374 <__assert_fail@plt+0x835c>
   19428:	str	r0, [sp, #4]
   1942c:	ldr	r0, [sp, #4]
   19430:	mov	sp, fp
   19434:	pop	{fp, pc}
   19438:	push	{fp, lr}
   1943c:	mov	fp, sp
   19440:	sub	sp, sp, #16
   19444:	str	r0, [sp, #8]
   19448:	str	r1, [sp, #4]
   1944c:	ldr	r0, [sp, #8]
   19450:	mvn	r1, #0
   19454:	cmp	r1, r0
   19458:	bcs	1947c <__assert_fail@plt+0x8464>
   1945c:	ldr	r0, [sp, #4]
   19460:	cmp	r0, #0
   19464:	beq	19474 <__assert_fail@plt+0x845c>
   19468:	bl	19374 <__assert_fail@plt+0x835c>
   1946c:	str	r0, [fp, #-4]
   19470:	b	194bc <__assert_fail@plt+0x84a4>
   19474:	movw	r0, #0
   19478:	str	r0, [sp, #8]
   1947c:	ldr	r0, [sp, #4]
   19480:	mvn	r1, #0
   19484:	cmp	r1, r0
   19488:	bcs	194ac <__assert_fail@plt+0x8494>
   1948c:	ldr	r0, [sp, #8]
   19490:	cmp	r0, #0
   19494:	beq	194a4 <__assert_fail@plt+0x848c>
   19498:	bl	19374 <__assert_fail@plt+0x835c>
   1949c:	str	r0, [fp, #-4]
   194a0:	b	194bc <__assert_fail@plt+0x84a4>
   194a4:	movw	r0, #0
   194a8:	str	r0, [sp, #4]
   194ac:	ldr	r0, [sp, #8]
   194b0:	ldr	r1, [sp, #4]
   194b4:	bl	18ffc <__assert_fail@plt+0x7fe4>
   194b8:	str	r0, [fp, #-4]
   194bc:	ldr	r0, [fp, #-4]
   194c0:	mov	sp, fp
   194c4:	pop	{fp, pc}
   194c8:	push	{fp, lr}
   194cc:	mov	fp, sp
   194d0:	sub	sp, sp, #16
   194d4:	str	r0, [fp, #-4]
   194d8:	str	r1, [sp, #8]
   194dc:	str	r2, [sp, #4]
   194e0:	ldr	r0, [sp, #8]
   194e4:	cmp	r0, #0
   194e8:	beq	194f8 <__assert_fail@plt+0x84e0>
   194ec:	ldr	r0, [sp, #4]
   194f0:	cmp	r0, #0
   194f4:	bne	19504 <__assert_fail@plt+0x84ec>
   194f8:	movw	r0, #1
   194fc:	str	r0, [sp, #4]
   19500:	str	r0, [sp, #8]
   19504:	ldr	r0, [sp, #8]
   19508:	cmn	r0, #1
   1950c:	bhi	19534 <__assert_fail@plt+0x851c>
   19510:	ldr	r0, [sp, #4]
   19514:	cmn	r0, #1
   19518:	bhi	19534 <__assert_fail@plt+0x851c>
   1951c:	ldr	r0, [fp, #-4]
   19520:	ldr	r1, [sp, #8]
   19524:	ldr	r2, [sp, #4]
   19528:	bl	19654 <__assert_fail@plt+0x863c>
   1952c:	str	r0, [sp]
   19530:	b	1953c <__assert_fail@plt+0x8524>
   19534:	bl	19374 <__assert_fail@plt+0x835c>
   19538:	str	r0, [sp]
   1953c:	ldr	r0, [sp]
   19540:	mov	sp, fp
   19544:	pop	{fp, pc}
   19548:	push	{fp, lr}
   1954c:	mov	fp, sp
   19550:	sub	sp, sp, #8
   19554:	movw	r0, #14
   19558:	bl	10fd0 <nl_langinfo@plt>
   1955c:	str	r0, [sp, #4]
   19560:	ldr	r0, [sp, #4]
   19564:	movw	r1, #0
   19568:	cmp	r0, r1
   1956c:	bne	1957c <__assert_fail@plt+0x8564>
   19570:	movw	r0, #46919	; 0xb747
   19574:	movt	r0, #1
   19578:	str	r0, [sp, #4]
   1957c:	ldr	r0, [sp, #4]
   19580:	ldrb	r0, [r0]
   19584:	cmp	r0, #0
   19588:	bne	19598 <__assert_fail@plt+0x8580>
   1958c:	movw	r0, #48445	; 0xbd3d
   19590:	movt	r0, #1
   19594:	str	r0, [sp, #4]
   19598:	ldr	r0, [sp, #4]
   1959c:	mov	sp, fp
   195a0:	pop	{fp, pc}
   195a4:	push	{fp, lr}
   195a8:	mov	fp, sp
   195ac:	sub	sp, sp, #32
   195b0:	str	r0, [fp, #-8]
   195b4:	str	r1, [fp, #-12]
   195b8:	str	r2, [sp, #16]
   195bc:	str	r3, [sp, #12]
   195c0:	ldr	r0, [fp, #-8]
   195c4:	movw	r1, #0
   195c8:	cmp	r0, r1
   195cc:	bne	195d8 <__assert_fail@plt+0x85c0>
   195d0:	add	r0, sp, #4
   195d4:	str	r0, [fp, #-8]
   195d8:	ldr	r0, [fp, #-8]
   195dc:	ldr	r1, [fp, #-12]
   195e0:	ldr	r2, [sp, #16]
   195e4:	ldr	r3, [sp, #12]
   195e8:	bl	10ebc <mbrtowc@plt>
   195ec:	str	r0, [sp, #8]
   195f0:	ldr	r0, [sp, #8]
   195f4:	mvn	r1, #1
   195f8:	cmp	r1, r0
   195fc:	bhi	19640 <__assert_fail@plt+0x8628>
   19600:	ldr	r0, [sp, #16]
   19604:	cmp	r0, #0
   19608:	beq	19640 <__assert_fail@plt+0x8628>
   1960c:	movw	r0, #0
   19610:	bl	1afd4 <__assert_fail@plt+0x9fbc>
   19614:	tst	r0, #1
   19618:	bne	19640 <__assert_fail@plt+0x8628>
   1961c:	ldr	r0, [fp, #-12]
   19620:	ldrb	r0, [r0]
   19624:	strb	r0, [sp, #3]
   19628:	ldrb	r0, [sp, #3]
   1962c:	ldr	r1, [fp, #-8]
   19630:	str	r0, [r1]
   19634:	movw	r0, #1
   19638:	str	r0, [fp, #-4]
   1963c:	b	19648 <__assert_fail@plt+0x8630>
   19640:	ldr	r0, [sp, #8]
   19644:	str	r0, [fp, #-4]
   19648:	ldr	r0, [fp, #-4]
   1964c:	mov	sp, fp
   19650:	pop	{fp, pc}
   19654:	push	{fp, lr}
   19658:	mov	fp, sp
   1965c:	sub	sp, sp, #96	; 0x60
   19660:	str	r0, [fp, #-8]
   19664:	str	r1, [fp, #-12]
   19668:	str	r2, [fp, #-16]
   1966c:	b	19a24 <__assert_fail@plt+0x8a0c>
   19670:	b	19844 <__assert_fail@plt+0x882c>
   19674:	ldr	r0, [fp, #-16]
   19678:	cmp	r0, #0
   1967c:	bcs	19780 <__assert_fail@plt+0x8768>
   19680:	ldr	r0, [fp, #-12]
   19684:	cmp	r0, #0
   19688:	bcs	19710 <__assert_fail@plt+0x86f8>
   1968c:	b	196ac <__assert_fail@plt+0x8694>
   19690:	ldr	r0, [fp, #-12]
   19694:	ldr	r1, [fp, #-16]
   19698:	movw	r2, #127	; 0x7f
   1969c:	udiv	r1, r2, r1
   196a0:	cmp	r0, r1
   196a4:	bcc	19814 <__assert_fail@plt+0x87fc>
   196a8:	b	1982c <__assert_fail@plt+0x8814>
   196ac:	b	196c0 <__assert_fail@plt+0x86a8>
   196b0:	ldr	r0, [fp, #-16]
   196b4:	cmp	r0, #1
   196b8:	bcc	196d0 <__assert_fail@plt+0x86b8>
   196bc:	b	196dc <__assert_fail@plt+0x86c4>
   196c0:	ldr	r0, [fp, #-16]
   196c4:	movw	r1, #0
   196c8:	cmp	r1, r0
   196cc:	bcs	196dc <__assert_fail@plt+0x86c4>
   196d0:	movw	r0, #0
   196d4:	str	r0, [fp, #-24]	; 0xffffffe8
   196d8:	b	196f4 <__assert_fail@plt+0x86dc>
   196dc:	ldr	r0, [fp, #-16]
   196e0:	movw	r1, #0
   196e4:	sub	r0, r1, r0
   196e8:	movw	r1, #127	; 0x7f
   196ec:	udiv	r0, r1, r0
   196f0:	str	r0, [fp, #-24]	; 0xffffffe8
   196f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196f8:	ldr	r1, [fp, #-12]
   196fc:	mvn	r2, #0
   19700:	sub	r1, r2, r1
   19704:	cmp	r0, r1
   19708:	bls	19814 <__assert_fail@plt+0x87fc>
   1970c:	b	1982c <__assert_fail@plt+0x8814>
   19710:	ldr	r0, [fp, #-16]
   19714:	cmn	r0, #1
   19718:	bne	19764 <__assert_fail@plt+0x874c>
   1971c:	b	1973c <__assert_fail@plt+0x8724>
   19720:	ldr	r0, [fp, #-12]
   19724:	mvn	r1, #127	; 0x7f
   19728:	add	r0, r0, r1
   1972c:	movw	r1, #0
   19730:	cmp	r1, r0
   19734:	bcc	19814 <__assert_fail@plt+0x87fc>
   19738:	b	1982c <__assert_fail@plt+0x8814>
   1973c:	ldr	r0, [fp, #-12]
   19740:	movw	r1, #0
   19744:	cmp	r1, r0
   19748:	bcs	1982c <__assert_fail@plt+0x8814>
   1974c:	ldr	r0, [fp, #-12]
   19750:	sub	r0, r0, #1
   19754:	movw	r1, #127	; 0x7f
   19758:	cmp	r1, r0
   1975c:	bcc	19814 <__assert_fail@plt+0x87fc>
   19760:	b	1982c <__assert_fail@plt+0x8814>
   19764:	ldr	r0, [fp, #-16]
   19768:	mvn	r1, #127	; 0x7f
   1976c:	udiv	r0, r1, r0
   19770:	ldr	r1, [fp, #-12]
   19774:	cmp	r0, r1
   19778:	bcc	19814 <__assert_fail@plt+0x87fc>
   1977c:	b	1982c <__assert_fail@plt+0x8814>
   19780:	ldr	r0, [fp, #-16]
   19784:	cmp	r0, #0
   19788:	bne	19790 <__assert_fail@plt+0x8778>
   1978c:	b	1982c <__assert_fail@plt+0x8814>
   19790:	ldr	r0, [fp, #-12]
   19794:	cmp	r0, #0
   19798:	bcs	197fc <__assert_fail@plt+0x87e4>
   1979c:	ldr	r0, [fp, #-12]
   197a0:	cmn	r0, #1
   197a4:	bne	197e0 <__assert_fail@plt+0x87c8>
   197a8:	b	197c8 <__assert_fail@plt+0x87b0>
   197ac:	ldr	r0, [fp, #-16]
   197b0:	mvn	r1, #127	; 0x7f
   197b4:	add	r0, r0, r1
   197b8:	movw	r1, #0
   197bc:	cmp	r1, r0
   197c0:	bcc	19814 <__assert_fail@plt+0x87fc>
   197c4:	b	1982c <__assert_fail@plt+0x8814>
   197c8:	ldr	r0, [fp, #-16]
   197cc:	sub	r0, r0, #1
   197d0:	movw	r1, #127	; 0x7f
   197d4:	cmp	r1, r0
   197d8:	bcc	19814 <__assert_fail@plt+0x87fc>
   197dc:	b	1982c <__assert_fail@plt+0x8814>
   197e0:	ldr	r0, [fp, #-12]
   197e4:	mvn	r1, #127	; 0x7f
   197e8:	udiv	r0, r1, r0
   197ec:	ldr	r1, [fp, #-16]
   197f0:	cmp	r0, r1
   197f4:	bcc	19814 <__assert_fail@plt+0x87fc>
   197f8:	b	1982c <__assert_fail@plt+0x8814>
   197fc:	ldr	r0, [fp, #-16]
   19800:	movw	r1, #127	; 0x7f
   19804:	udiv	r0, r1, r0
   19808:	ldr	r1, [fp, #-12]
   1980c:	cmp	r0, r1
   19810:	bcs	1982c <__assert_fail@plt+0x8814>
   19814:	ldr	r0, [fp, #-12]
   19818:	ldr	r1, [fp, #-16]
   1981c:	mul	r0, r0, r1
   19820:	sxtb	r0, r0
   19824:	str	r0, [fp, #-20]	; 0xffffffec
   19828:	b	1a954 <__assert_fail@plt+0x993c>
   1982c:	ldr	r0, [fp, #-12]
   19830:	ldr	r1, [fp, #-16]
   19834:	mul	r0, r0, r1
   19838:	sxtb	r0, r0
   1983c:	str	r0, [fp, #-20]	; 0xffffffec
   19840:	b	1a96c <__assert_fail@plt+0x9954>
   19844:	ldr	r0, [fp, #-16]
   19848:	cmp	r0, #0
   1984c:	bcs	19958 <__assert_fail@plt+0x8940>
   19850:	ldr	r0, [fp, #-12]
   19854:	cmp	r0, #0
   19858:	bcs	198e0 <__assert_fail@plt+0x88c8>
   1985c:	b	1987c <__assert_fail@plt+0x8864>
   19860:	ldr	r0, [fp, #-12]
   19864:	ldr	r1, [fp, #-16]
   19868:	movw	r2, #255	; 0xff
   1986c:	udiv	r1, r2, r1
   19870:	cmp	r0, r1
   19874:	bcc	199f4 <__assert_fail@plt+0x89dc>
   19878:	b	19a0c <__assert_fail@plt+0x89f4>
   1987c:	b	19890 <__assert_fail@plt+0x8878>
   19880:	ldr	r0, [fp, #-16]
   19884:	cmp	r0, #1
   19888:	bcc	198a0 <__assert_fail@plt+0x8888>
   1988c:	b	198ac <__assert_fail@plt+0x8894>
   19890:	ldr	r0, [fp, #-16]
   19894:	movw	r1, #0
   19898:	cmp	r1, r0
   1989c:	bcs	198ac <__assert_fail@plt+0x8894>
   198a0:	movw	r0, #0
   198a4:	str	r0, [fp, #-28]	; 0xffffffe4
   198a8:	b	198c4 <__assert_fail@plt+0x88ac>
   198ac:	ldr	r0, [fp, #-16]
   198b0:	movw	r1, #0
   198b4:	sub	r0, r1, r0
   198b8:	movw	r1, #255	; 0xff
   198bc:	udiv	r0, r1, r0
   198c0:	str	r0, [fp, #-28]	; 0xffffffe4
   198c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   198c8:	ldr	r1, [fp, #-12]
   198cc:	mvn	r2, #0
   198d0:	sub	r1, r2, r1
   198d4:	cmp	r0, r1
   198d8:	bls	199f4 <__assert_fail@plt+0x89dc>
   198dc:	b	19a0c <__assert_fail@plt+0x89f4>
   198e0:	b	198e8 <__assert_fail@plt+0x88d0>
   198e4:	b	198ec <__assert_fail@plt+0x88d4>
   198e8:	b	1993c <__assert_fail@plt+0x8924>
   198ec:	ldr	r0, [fp, #-16]
   198f0:	cmn	r0, #1
   198f4:	bne	1993c <__assert_fail@plt+0x8924>
   198f8:	b	19914 <__assert_fail@plt+0x88fc>
   198fc:	ldr	r0, [fp, #-12]
   19900:	add	r0, r0, #0
   19904:	movw	r1, #0
   19908:	cmp	r1, r0
   1990c:	bcc	199f4 <__assert_fail@plt+0x89dc>
   19910:	b	19a0c <__assert_fail@plt+0x89f4>
   19914:	ldr	r0, [fp, #-12]
   19918:	movw	r1, #0
   1991c:	cmp	r1, r0
   19920:	bcs	19a0c <__assert_fail@plt+0x89f4>
   19924:	ldr	r0, [fp, #-12]
   19928:	sub	r0, r0, #1
   1992c:	mvn	r1, #0
   19930:	cmp	r1, r0
   19934:	bcc	199f4 <__assert_fail@plt+0x89dc>
   19938:	b	19a0c <__assert_fail@plt+0x89f4>
   1993c:	ldr	r0, [fp, #-16]
   19940:	movw	r1, #0
   19944:	udiv	r0, r1, r0
   19948:	ldr	r1, [fp, #-12]
   1994c:	cmp	r0, r1
   19950:	bcc	199f4 <__assert_fail@plt+0x89dc>
   19954:	b	19a0c <__assert_fail@plt+0x89f4>
   19958:	ldr	r0, [fp, #-16]
   1995c:	cmp	r0, #0
   19960:	bne	19968 <__assert_fail@plt+0x8950>
   19964:	b	19a0c <__assert_fail@plt+0x89f4>
   19968:	ldr	r0, [fp, #-12]
   1996c:	cmp	r0, #0
   19970:	bcs	199dc <__assert_fail@plt+0x89c4>
   19974:	b	1997c <__assert_fail@plt+0x8964>
   19978:	b	19980 <__assert_fail@plt+0x8968>
   1997c:	b	199c0 <__assert_fail@plt+0x89a8>
   19980:	ldr	r0, [fp, #-12]
   19984:	cmn	r0, #1
   19988:	bne	199c0 <__assert_fail@plt+0x89a8>
   1998c:	b	199a8 <__assert_fail@plt+0x8990>
   19990:	ldr	r0, [fp, #-16]
   19994:	add	r0, r0, #0
   19998:	movw	r1, #0
   1999c:	cmp	r1, r0
   199a0:	bcc	199f4 <__assert_fail@plt+0x89dc>
   199a4:	b	19a0c <__assert_fail@plt+0x89f4>
   199a8:	ldr	r0, [fp, #-16]
   199ac:	sub	r0, r0, #1
   199b0:	mvn	r1, #0
   199b4:	cmp	r1, r0
   199b8:	bcc	199f4 <__assert_fail@plt+0x89dc>
   199bc:	b	19a0c <__assert_fail@plt+0x89f4>
   199c0:	ldr	r0, [fp, #-12]
   199c4:	movw	r1, #0
   199c8:	udiv	r0, r1, r0
   199cc:	ldr	r1, [fp, #-16]
   199d0:	cmp	r0, r1
   199d4:	bcc	199f4 <__assert_fail@plt+0x89dc>
   199d8:	b	19a0c <__assert_fail@plt+0x89f4>
   199dc:	ldr	r0, [fp, #-16]
   199e0:	movw	r1, #255	; 0xff
   199e4:	udiv	r0, r1, r0
   199e8:	ldr	r1, [fp, #-12]
   199ec:	cmp	r0, r1
   199f0:	bcs	19a0c <__assert_fail@plt+0x89f4>
   199f4:	ldr	r0, [fp, #-12]
   199f8:	ldr	r1, [fp, #-16]
   199fc:	mul	r0, r0, r1
   19a00:	and	r0, r0, #255	; 0xff
   19a04:	str	r0, [fp, #-20]	; 0xffffffec
   19a08:	b	1a954 <__assert_fail@plt+0x993c>
   19a0c:	ldr	r0, [fp, #-12]
   19a10:	ldr	r1, [fp, #-16]
   19a14:	mul	r0, r0, r1
   19a18:	and	r0, r0, #255	; 0xff
   19a1c:	str	r0, [fp, #-20]	; 0xffffffec
   19a20:	b	1a96c <__assert_fail@plt+0x9954>
   19a24:	b	19ddc <__assert_fail@plt+0x8dc4>
   19a28:	b	19bfc <__assert_fail@plt+0x8be4>
   19a2c:	ldr	r0, [fp, #-16]
   19a30:	cmp	r0, #0
   19a34:	bcs	19b38 <__assert_fail@plt+0x8b20>
   19a38:	ldr	r0, [fp, #-12]
   19a3c:	cmp	r0, #0
   19a40:	bcs	19ac8 <__assert_fail@plt+0x8ab0>
   19a44:	b	19a64 <__assert_fail@plt+0x8a4c>
   19a48:	ldr	r0, [fp, #-12]
   19a4c:	ldr	r1, [fp, #-16]
   19a50:	movw	r2, #32767	; 0x7fff
   19a54:	udiv	r1, r2, r1
   19a58:	cmp	r0, r1
   19a5c:	bcc	19bcc <__assert_fail@plt+0x8bb4>
   19a60:	b	19be4 <__assert_fail@plt+0x8bcc>
   19a64:	b	19a78 <__assert_fail@plt+0x8a60>
   19a68:	ldr	r0, [fp, #-16]
   19a6c:	cmp	r0, #1
   19a70:	bcc	19a88 <__assert_fail@plt+0x8a70>
   19a74:	b	19a94 <__assert_fail@plt+0x8a7c>
   19a78:	ldr	r0, [fp, #-16]
   19a7c:	movw	r1, #0
   19a80:	cmp	r1, r0
   19a84:	bcs	19a94 <__assert_fail@plt+0x8a7c>
   19a88:	movw	r0, #0
   19a8c:	str	r0, [fp, #-32]	; 0xffffffe0
   19a90:	b	19aac <__assert_fail@plt+0x8a94>
   19a94:	ldr	r0, [fp, #-16]
   19a98:	movw	r1, #0
   19a9c:	sub	r0, r1, r0
   19aa0:	movw	r1, #32767	; 0x7fff
   19aa4:	udiv	r0, r1, r0
   19aa8:	str	r0, [fp, #-32]	; 0xffffffe0
   19aac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ab0:	ldr	r1, [fp, #-12]
   19ab4:	mvn	r2, #0
   19ab8:	sub	r1, r2, r1
   19abc:	cmp	r0, r1
   19ac0:	bls	19bcc <__assert_fail@plt+0x8bb4>
   19ac4:	b	19be4 <__assert_fail@plt+0x8bcc>
   19ac8:	ldr	r0, [fp, #-16]
   19acc:	cmn	r0, #1
   19ad0:	bne	19b1c <__assert_fail@plt+0x8b04>
   19ad4:	b	19af4 <__assert_fail@plt+0x8adc>
   19ad8:	ldr	r0, [pc, #3760]	; 1a990 <__assert_fail@plt+0x9978>
   19adc:	ldr	r1, [fp, #-12]
   19ae0:	add	r0, r1, r0
   19ae4:	movw	r1, #0
   19ae8:	cmp	r1, r0
   19aec:	bcc	19bcc <__assert_fail@plt+0x8bb4>
   19af0:	b	19be4 <__assert_fail@plt+0x8bcc>
   19af4:	ldr	r0, [fp, #-12]
   19af8:	movw	r1, #0
   19afc:	cmp	r1, r0
   19b00:	bcs	19be4 <__assert_fail@plt+0x8bcc>
   19b04:	ldr	r0, [fp, #-12]
   19b08:	sub	r0, r0, #1
   19b0c:	movw	r1, #32767	; 0x7fff
   19b10:	cmp	r1, r0
   19b14:	bcc	19bcc <__assert_fail@plt+0x8bb4>
   19b18:	b	19be4 <__assert_fail@plt+0x8bcc>
   19b1c:	ldr	r0, [pc, #3692]	; 1a990 <__assert_fail@plt+0x9978>
   19b20:	ldr	r1, [fp, #-16]
   19b24:	udiv	r0, r0, r1
   19b28:	ldr	r1, [fp, #-12]
   19b2c:	cmp	r0, r1
   19b30:	bcc	19bcc <__assert_fail@plt+0x8bb4>
   19b34:	b	19be4 <__assert_fail@plt+0x8bcc>
   19b38:	ldr	r0, [fp, #-16]
   19b3c:	cmp	r0, #0
   19b40:	bne	19b48 <__assert_fail@plt+0x8b30>
   19b44:	b	19be4 <__assert_fail@plt+0x8bcc>
   19b48:	ldr	r0, [fp, #-12]
   19b4c:	cmp	r0, #0
   19b50:	bcs	19bb4 <__assert_fail@plt+0x8b9c>
   19b54:	ldr	r0, [fp, #-12]
   19b58:	cmn	r0, #1
   19b5c:	bne	19b98 <__assert_fail@plt+0x8b80>
   19b60:	b	19b80 <__assert_fail@plt+0x8b68>
   19b64:	ldr	r0, [pc, #3620]	; 1a990 <__assert_fail@plt+0x9978>
   19b68:	ldr	r1, [fp, #-16]
   19b6c:	add	r0, r1, r0
   19b70:	movw	r1, #0
   19b74:	cmp	r1, r0
   19b78:	bcc	19bcc <__assert_fail@plt+0x8bb4>
   19b7c:	b	19be4 <__assert_fail@plt+0x8bcc>
   19b80:	ldr	r0, [fp, #-16]
   19b84:	sub	r0, r0, #1
   19b88:	movw	r1, #32767	; 0x7fff
   19b8c:	cmp	r1, r0
   19b90:	bcc	19bcc <__assert_fail@plt+0x8bb4>
   19b94:	b	19be4 <__assert_fail@plt+0x8bcc>
   19b98:	ldr	r0, [pc, #3568]	; 1a990 <__assert_fail@plt+0x9978>
   19b9c:	ldr	r1, [fp, #-12]
   19ba0:	udiv	r0, r0, r1
   19ba4:	ldr	r1, [fp, #-16]
   19ba8:	cmp	r0, r1
   19bac:	bcc	19bcc <__assert_fail@plt+0x8bb4>
   19bb0:	b	19be4 <__assert_fail@plt+0x8bcc>
   19bb4:	ldr	r0, [fp, #-16]
   19bb8:	movw	r1, #32767	; 0x7fff
   19bbc:	udiv	r0, r1, r0
   19bc0:	ldr	r1, [fp, #-12]
   19bc4:	cmp	r0, r1
   19bc8:	bcs	19be4 <__assert_fail@plt+0x8bcc>
   19bcc:	ldr	r0, [fp, #-12]
   19bd0:	ldr	r1, [fp, #-16]
   19bd4:	mul	r0, r0, r1
   19bd8:	sxth	r0, r0
   19bdc:	str	r0, [fp, #-20]	; 0xffffffec
   19be0:	b	1a954 <__assert_fail@plt+0x993c>
   19be4:	ldr	r0, [fp, #-12]
   19be8:	ldr	r1, [fp, #-16]
   19bec:	mul	r0, r0, r1
   19bf0:	sxth	r0, r0
   19bf4:	str	r0, [fp, #-20]	; 0xffffffec
   19bf8:	b	1a96c <__assert_fail@plt+0x9954>
   19bfc:	ldr	r0, [fp, #-16]
   19c00:	cmp	r0, #0
   19c04:	bcs	19d10 <__assert_fail@plt+0x8cf8>
   19c08:	ldr	r0, [fp, #-12]
   19c0c:	cmp	r0, #0
   19c10:	bcs	19c98 <__assert_fail@plt+0x8c80>
   19c14:	b	19c34 <__assert_fail@plt+0x8c1c>
   19c18:	ldr	r0, [fp, #-12]
   19c1c:	ldr	r1, [fp, #-16]
   19c20:	movw	r2, #65535	; 0xffff
   19c24:	udiv	r1, r2, r1
   19c28:	cmp	r0, r1
   19c2c:	bcc	19dac <__assert_fail@plt+0x8d94>
   19c30:	b	19dc4 <__assert_fail@plt+0x8dac>
   19c34:	b	19c48 <__assert_fail@plt+0x8c30>
   19c38:	ldr	r0, [fp, #-16]
   19c3c:	cmp	r0, #1
   19c40:	bcc	19c58 <__assert_fail@plt+0x8c40>
   19c44:	b	19c64 <__assert_fail@plt+0x8c4c>
   19c48:	ldr	r0, [fp, #-16]
   19c4c:	movw	r1, #0
   19c50:	cmp	r1, r0
   19c54:	bcs	19c64 <__assert_fail@plt+0x8c4c>
   19c58:	movw	r0, #0
   19c5c:	str	r0, [fp, #-36]	; 0xffffffdc
   19c60:	b	19c7c <__assert_fail@plt+0x8c64>
   19c64:	ldr	r0, [fp, #-16]
   19c68:	movw	r1, #0
   19c6c:	sub	r0, r1, r0
   19c70:	movw	r1, #65535	; 0xffff
   19c74:	udiv	r0, r1, r0
   19c78:	str	r0, [fp, #-36]	; 0xffffffdc
   19c7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19c80:	ldr	r1, [fp, #-12]
   19c84:	mvn	r2, #0
   19c88:	sub	r1, r2, r1
   19c8c:	cmp	r0, r1
   19c90:	bls	19dac <__assert_fail@plt+0x8d94>
   19c94:	b	19dc4 <__assert_fail@plt+0x8dac>
   19c98:	b	19ca0 <__assert_fail@plt+0x8c88>
   19c9c:	b	19ca4 <__assert_fail@plt+0x8c8c>
   19ca0:	b	19cf4 <__assert_fail@plt+0x8cdc>
   19ca4:	ldr	r0, [fp, #-16]
   19ca8:	cmn	r0, #1
   19cac:	bne	19cf4 <__assert_fail@plt+0x8cdc>
   19cb0:	b	19ccc <__assert_fail@plt+0x8cb4>
   19cb4:	ldr	r0, [fp, #-12]
   19cb8:	add	r0, r0, #0
   19cbc:	movw	r1, #0
   19cc0:	cmp	r1, r0
   19cc4:	bcc	19dac <__assert_fail@plt+0x8d94>
   19cc8:	b	19dc4 <__assert_fail@plt+0x8dac>
   19ccc:	ldr	r0, [fp, #-12]
   19cd0:	movw	r1, #0
   19cd4:	cmp	r1, r0
   19cd8:	bcs	19dc4 <__assert_fail@plt+0x8dac>
   19cdc:	ldr	r0, [fp, #-12]
   19ce0:	sub	r0, r0, #1
   19ce4:	mvn	r1, #0
   19ce8:	cmp	r1, r0
   19cec:	bcc	19dac <__assert_fail@plt+0x8d94>
   19cf0:	b	19dc4 <__assert_fail@plt+0x8dac>
   19cf4:	ldr	r0, [fp, #-16]
   19cf8:	movw	r1, #0
   19cfc:	udiv	r0, r1, r0
   19d00:	ldr	r1, [fp, #-12]
   19d04:	cmp	r0, r1
   19d08:	bcc	19dac <__assert_fail@plt+0x8d94>
   19d0c:	b	19dc4 <__assert_fail@plt+0x8dac>
   19d10:	ldr	r0, [fp, #-16]
   19d14:	cmp	r0, #0
   19d18:	bne	19d20 <__assert_fail@plt+0x8d08>
   19d1c:	b	19dc4 <__assert_fail@plt+0x8dac>
   19d20:	ldr	r0, [fp, #-12]
   19d24:	cmp	r0, #0
   19d28:	bcs	19d94 <__assert_fail@plt+0x8d7c>
   19d2c:	b	19d34 <__assert_fail@plt+0x8d1c>
   19d30:	b	19d38 <__assert_fail@plt+0x8d20>
   19d34:	b	19d78 <__assert_fail@plt+0x8d60>
   19d38:	ldr	r0, [fp, #-12]
   19d3c:	cmn	r0, #1
   19d40:	bne	19d78 <__assert_fail@plt+0x8d60>
   19d44:	b	19d60 <__assert_fail@plt+0x8d48>
   19d48:	ldr	r0, [fp, #-16]
   19d4c:	add	r0, r0, #0
   19d50:	movw	r1, #0
   19d54:	cmp	r1, r0
   19d58:	bcc	19dac <__assert_fail@plt+0x8d94>
   19d5c:	b	19dc4 <__assert_fail@plt+0x8dac>
   19d60:	ldr	r0, [fp, #-16]
   19d64:	sub	r0, r0, #1
   19d68:	mvn	r1, #0
   19d6c:	cmp	r1, r0
   19d70:	bcc	19dac <__assert_fail@plt+0x8d94>
   19d74:	b	19dc4 <__assert_fail@plt+0x8dac>
   19d78:	ldr	r0, [fp, #-12]
   19d7c:	movw	r1, #0
   19d80:	udiv	r0, r1, r0
   19d84:	ldr	r1, [fp, #-16]
   19d88:	cmp	r0, r1
   19d8c:	bcc	19dac <__assert_fail@plt+0x8d94>
   19d90:	b	19dc4 <__assert_fail@plt+0x8dac>
   19d94:	ldr	r0, [fp, #-16]
   19d98:	movw	r1, #65535	; 0xffff
   19d9c:	udiv	r0, r1, r0
   19da0:	ldr	r1, [fp, #-12]
   19da4:	cmp	r0, r1
   19da8:	bcs	19dc4 <__assert_fail@plt+0x8dac>
   19dac:	ldr	r0, [fp, #-12]
   19db0:	ldr	r1, [fp, #-16]
   19db4:	mul	r0, r0, r1
   19db8:	uxth	r0, r0
   19dbc:	str	r0, [fp, #-20]	; 0xffffffec
   19dc0:	b	1a954 <__assert_fail@plt+0x993c>
   19dc4:	ldr	r0, [fp, #-12]
   19dc8:	ldr	r1, [fp, #-16]
   19dcc:	mul	r0, r0, r1
   19dd0:	uxth	r0, r0
   19dd4:	str	r0, [fp, #-20]	; 0xffffffec
   19dd8:	b	1a96c <__assert_fail@plt+0x9954>
   19ddc:	b	19de0 <__assert_fail@plt+0x8dc8>
   19de0:	b	19fa4 <__assert_fail@plt+0x8f8c>
   19de4:	ldr	r0, [fp, #-16]
   19de8:	cmp	r0, #0
   19dec:	bcs	19eec <__assert_fail@plt+0x8ed4>
   19df0:	ldr	r0, [fp, #-12]
   19df4:	cmp	r0, #0
   19df8:	bcs	19e80 <__assert_fail@plt+0x8e68>
   19dfc:	b	19e1c <__assert_fail@plt+0x8e04>
   19e00:	ldr	r0, [pc, #2944]	; 1a988 <__assert_fail@plt+0x9970>
   19e04:	ldr	r1, [fp, #-12]
   19e08:	ldr	r2, [fp, #-16]
   19e0c:	udiv	r0, r0, r2
   19e10:	cmp	r1, r0
   19e14:	bcc	19f7c <__assert_fail@plt+0x8f64>
   19e18:	b	19f90 <__assert_fail@plt+0x8f78>
   19e1c:	b	19e30 <__assert_fail@plt+0x8e18>
   19e20:	ldr	r0, [fp, #-16]
   19e24:	cmp	r0, #1
   19e28:	bcc	19e40 <__assert_fail@plt+0x8e28>
   19e2c:	b	19e4c <__assert_fail@plt+0x8e34>
   19e30:	ldr	r0, [fp, #-16]
   19e34:	movw	r1, #0
   19e38:	cmp	r1, r0
   19e3c:	bcs	19e4c <__assert_fail@plt+0x8e34>
   19e40:	movw	r0, #0
   19e44:	str	r0, [fp, #-40]	; 0xffffffd8
   19e48:	b	19e64 <__assert_fail@plt+0x8e4c>
   19e4c:	ldr	r0, [pc, #2868]	; 1a988 <__assert_fail@plt+0x9970>
   19e50:	ldr	r1, [fp, #-16]
   19e54:	movw	r2, #0
   19e58:	sub	r1, r2, r1
   19e5c:	udiv	r0, r0, r1
   19e60:	str	r0, [fp, #-40]	; 0xffffffd8
   19e64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19e68:	ldr	r1, [fp, #-12]
   19e6c:	mvn	r2, #0
   19e70:	sub	r1, r2, r1
   19e74:	cmp	r0, r1
   19e78:	bls	19f7c <__assert_fail@plt+0x8f64>
   19e7c:	b	19f90 <__assert_fail@plt+0x8f78>
   19e80:	ldr	r0, [fp, #-16]
   19e84:	cmn	r0, #1
   19e88:	bne	19ed0 <__assert_fail@plt+0x8eb8>
   19e8c:	b	19ea8 <__assert_fail@plt+0x8e90>
   19e90:	ldr	r0, [fp, #-12]
   19e94:	add	r0, r0, #-2147483648	; 0x80000000
   19e98:	movw	r1, #0
   19e9c:	cmp	r1, r0
   19ea0:	bcc	19f7c <__assert_fail@plt+0x8f64>
   19ea4:	b	19f90 <__assert_fail@plt+0x8f78>
   19ea8:	ldr	r0, [fp, #-12]
   19eac:	movw	r1, #0
   19eb0:	cmp	r1, r0
   19eb4:	bcs	19f90 <__assert_fail@plt+0x8f78>
   19eb8:	ldr	r0, [pc, #2760]	; 1a988 <__assert_fail@plt+0x9970>
   19ebc:	ldr	r1, [fp, #-12]
   19ec0:	sub	r1, r1, #1
   19ec4:	cmp	r0, r1
   19ec8:	bcc	19f7c <__assert_fail@plt+0x8f64>
   19ecc:	b	19f90 <__assert_fail@plt+0x8f78>
   19ed0:	ldr	r0, [pc, #2740]	; 1a98c <__assert_fail@plt+0x9974>
   19ed4:	ldr	r1, [fp, #-16]
   19ed8:	udiv	r0, r0, r1
   19edc:	ldr	r1, [fp, #-12]
   19ee0:	cmp	r0, r1
   19ee4:	bcc	19f7c <__assert_fail@plt+0x8f64>
   19ee8:	b	19f90 <__assert_fail@plt+0x8f78>
   19eec:	ldr	r0, [fp, #-16]
   19ef0:	cmp	r0, #0
   19ef4:	bne	19efc <__assert_fail@plt+0x8ee4>
   19ef8:	b	19f90 <__assert_fail@plt+0x8f78>
   19efc:	ldr	r0, [fp, #-12]
   19f00:	cmp	r0, #0
   19f04:	bcs	19f64 <__assert_fail@plt+0x8f4c>
   19f08:	ldr	r0, [fp, #-12]
   19f0c:	cmn	r0, #1
   19f10:	bne	19f48 <__assert_fail@plt+0x8f30>
   19f14:	b	19f30 <__assert_fail@plt+0x8f18>
   19f18:	ldr	r0, [fp, #-16]
   19f1c:	add	r0, r0, #-2147483648	; 0x80000000
   19f20:	movw	r1, #0
   19f24:	cmp	r1, r0
   19f28:	bcc	19f7c <__assert_fail@plt+0x8f64>
   19f2c:	b	19f90 <__assert_fail@plt+0x8f78>
   19f30:	ldr	r0, [pc, #2640]	; 1a988 <__assert_fail@plt+0x9970>
   19f34:	ldr	r1, [fp, #-16]
   19f38:	sub	r1, r1, #1
   19f3c:	cmp	r0, r1
   19f40:	bcc	19f7c <__assert_fail@plt+0x8f64>
   19f44:	b	19f90 <__assert_fail@plt+0x8f78>
   19f48:	ldr	r0, [pc, #2620]	; 1a98c <__assert_fail@plt+0x9974>
   19f4c:	ldr	r1, [fp, #-12]
   19f50:	udiv	r0, r0, r1
   19f54:	ldr	r1, [fp, #-16]
   19f58:	cmp	r0, r1
   19f5c:	bcc	19f7c <__assert_fail@plt+0x8f64>
   19f60:	b	19f90 <__assert_fail@plt+0x8f78>
   19f64:	ldr	r0, [pc, #2588]	; 1a988 <__assert_fail@plt+0x9970>
   19f68:	ldr	r1, [fp, #-16]
   19f6c:	udiv	r0, r0, r1
   19f70:	ldr	r1, [fp, #-12]
   19f74:	cmp	r0, r1
   19f78:	bcs	19f90 <__assert_fail@plt+0x8f78>
   19f7c:	ldr	r0, [fp, #-12]
   19f80:	ldr	r1, [fp, #-16]
   19f84:	mul	r0, r0, r1
   19f88:	str	r0, [fp, #-20]	; 0xffffffec
   19f8c:	b	1a954 <__assert_fail@plt+0x993c>
   19f90:	ldr	r0, [fp, #-12]
   19f94:	ldr	r1, [fp, #-16]
   19f98:	mul	r0, r0, r1
   19f9c:	str	r0, [fp, #-20]	; 0xffffffec
   19fa0:	b	1a96c <__assert_fail@plt+0x9954>
   19fa4:	ldr	r0, [fp, #-16]
   19fa8:	cmp	r0, #0
   19fac:	bcs	1a0b8 <__assert_fail@plt+0x90a0>
   19fb0:	ldr	r0, [fp, #-12]
   19fb4:	cmp	r0, #0
   19fb8:	bcs	1a040 <__assert_fail@plt+0x9028>
   19fbc:	b	19fdc <__assert_fail@plt+0x8fc4>
   19fc0:	ldr	r0, [fp, #-12]
   19fc4:	ldr	r1, [fp, #-16]
   19fc8:	mvn	r2, #0
   19fcc:	udiv	r1, r2, r1
   19fd0:	cmp	r0, r1
   19fd4:	bcc	1a154 <__assert_fail@plt+0x913c>
   19fd8:	b	1a168 <__assert_fail@plt+0x9150>
   19fdc:	b	19ff0 <__assert_fail@plt+0x8fd8>
   19fe0:	ldr	r0, [fp, #-16]
   19fe4:	cmp	r0, #1
   19fe8:	bcc	1a000 <__assert_fail@plt+0x8fe8>
   19fec:	b	1a00c <__assert_fail@plt+0x8ff4>
   19ff0:	ldr	r0, [fp, #-16]
   19ff4:	movw	r1, #0
   19ff8:	cmp	r1, r0
   19ffc:	bcs	1a00c <__assert_fail@plt+0x8ff4>
   1a000:	movw	r0, #1
   1a004:	str	r0, [fp, #-44]	; 0xffffffd4
   1a008:	b	1a024 <__assert_fail@plt+0x900c>
   1a00c:	ldr	r0, [fp, #-16]
   1a010:	movw	r1, #0
   1a014:	sub	r0, r1, r0
   1a018:	mvn	r1, #0
   1a01c:	udiv	r0, r1, r0
   1a020:	str	r0, [fp, #-44]	; 0xffffffd4
   1a024:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a028:	ldr	r1, [fp, #-12]
   1a02c:	mvn	r2, #0
   1a030:	sub	r1, r2, r1
   1a034:	cmp	r0, r1
   1a038:	bls	1a154 <__assert_fail@plt+0x913c>
   1a03c:	b	1a168 <__assert_fail@plt+0x9150>
   1a040:	b	1a048 <__assert_fail@plt+0x9030>
   1a044:	b	1a04c <__assert_fail@plt+0x9034>
   1a048:	b	1a09c <__assert_fail@plt+0x9084>
   1a04c:	ldr	r0, [fp, #-16]
   1a050:	cmn	r0, #1
   1a054:	bne	1a09c <__assert_fail@plt+0x9084>
   1a058:	b	1a074 <__assert_fail@plt+0x905c>
   1a05c:	ldr	r0, [fp, #-12]
   1a060:	add	r0, r0, #0
   1a064:	movw	r1, #0
   1a068:	cmp	r1, r0
   1a06c:	bcc	1a154 <__assert_fail@plt+0x913c>
   1a070:	b	1a168 <__assert_fail@plt+0x9150>
   1a074:	ldr	r0, [fp, #-12]
   1a078:	movw	r1, #0
   1a07c:	cmp	r1, r0
   1a080:	bcs	1a168 <__assert_fail@plt+0x9150>
   1a084:	ldr	r0, [fp, #-12]
   1a088:	sub	r0, r0, #1
   1a08c:	mvn	r1, #0
   1a090:	cmp	r1, r0
   1a094:	bcc	1a154 <__assert_fail@plt+0x913c>
   1a098:	b	1a168 <__assert_fail@plt+0x9150>
   1a09c:	ldr	r0, [fp, #-16]
   1a0a0:	movw	r1, #0
   1a0a4:	udiv	r0, r1, r0
   1a0a8:	ldr	r1, [fp, #-12]
   1a0ac:	cmp	r0, r1
   1a0b0:	bcc	1a154 <__assert_fail@plt+0x913c>
   1a0b4:	b	1a168 <__assert_fail@plt+0x9150>
   1a0b8:	ldr	r0, [fp, #-16]
   1a0bc:	cmp	r0, #0
   1a0c0:	bne	1a0c8 <__assert_fail@plt+0x90b0>
   1a0c4:	b	1a168 <__assert_fail@plt+0x9150>
   1a0c8:	ldr	r0, [fp, #-12]
   1a0cc:	cmp	r0, #0
   1a0d0:	bcs	1a13c <__assert_fail@plt+0x9124>
   1a0d4:	b	1a0dc <__assert_fail@plt+0x90c4>
   1a0d8:	b	1a0e0 <__assert_fail@plt+0x90c8>
   1a0dc:	b	1a120 <__assert_fail@plt+0x9108>
   1a0e0:	ldr	r0, [fp, #-12]
   1a0e4:	cmn	r0, #1
   1a0e8:	bne	1a120 <__assert_fail@plt+0x9108>
   1a0ec:	b	1a108 <__assert_fail@plt+0x90f0>
   1a0f0:	ldr	r0, [fp, #-16]
   1a0f4:	add	r0, r0, #0
   1a0f8:	movw	r1, #0
   1a0fc:	cmp	r1, r0
   1a100:	bcc	1a154 <__assert_fail@plt+0x913c>
   1a104:	b	1a168 <__assert_fail@plt+0x9150>
   1a108:	ldr	r0, [fp, #-16]
   1a10c:	sub	r0, r0, #1
   1a110:	mvn	r1, #0
   1a114:	cmp	r1, r0
   1a118:	bcc	1a154 <__assert_fail@plt+0x913c>
   1a11c:	b	1a168 <__assert_fail@plt+0x9150>
   1a120:	ldr	r0, [fp, #-12]
   1a124:	movw	r1, #0
   1a128:	udiv	r0, r1, r0
   1a12c:	ldr	r1, [fp, #-16]
   1a130:	cmp	r0, r1
   1a134:	bcc	1a154 <__assert_fail@plt+0x913c>
   1a138:	b	1a168 <__assert_fail@plt+0x9150>
   1a13c:	ldr	r0, [fp, #-16]
   1a140:	mvn	r1, #0
   1a144:	udiv	r0, r1, r0
   1a148:	ldr	r1, [fp, #-12]
   1a14c:	cmp	r0, r1
   1a150:	bcs	1a168 <__assert_fail@plt+0x9150>
   1a154:	ldr	r0, [fp, #-12]
   1a158:	ldr	r1, [fp, #-16]
   1a15c:	mul	r0, r0, r1
   1a160:	str	r0, [fp, #-20]	; 0xffffffec
   1a164:	b	1a954 <__assert_fail@plt+0x993c>
   1a168:	ldr	r0, [fp, #-12]
   1a16c:	ldr	r1, [fp, #-16]
   1a170:	mul	r0, r0, r1
   1a174:	str	r0, [fp, #-20]	; 0xffffffec
   1a178:	b	1a96c <__assert_fail@plt+0x9954>
   1a17c:	b	1a180 <__assert_fail@plt+0x9168>
   1a180:	b	1a344 <__assert_fail@plt+0x932c>
   1a184:	ldr	r0, [fp, #-16]
   1a188:	cmp	r0, #0
   1a18c:	bcs	1a28c <__assert_fail@plt+0x9274>
   1a190:	ldr	r0, [fp, #-12]
   1a194:	cmp	r0, #0
   1a198:	bcs	1a220 <__assert_fail@plt+0x9208>
   1a19c:	b	1a1bc <__assert_fail@plt+0x91a4>
   1a1a0:	ldr	r0, [pc, #2016]	; 1a988 <__assert_fail@plt+0x9970>
   1a1a4:	ldr	r1, [fp, #-12]
   1a1a8:	ldr	r2, [fp, #-16]
   1a1ac:	udiv	r0, r0, r2
   1a1b0:	cmp	r1, r0
   1a1b4:	bcc	1a31c <__assert_fail@plt+0x9304>
   1a1b8:	b	1a330 <__assert_fail@plt+0x9318>
   1a1bc:	b	1a1d0 <__assert_fail@plt+0x91b8>
   1a1c0:	ldr	r0, [fp, #-16]
   1a1c4:	cmp	r0, #1
   1a1c8:	bcc	1a1e0 <__assert_fail@plt+0x91c8>
   1a1cc:	b	1a1ec <__assert_fail@plt+0x91d4>
   1a1d0:	ldr	r0, [fp, #-16]
   1a1d4:	movw	r1, #0
   1a1d8:	cmp	r1, r0
   1a1dc:	bcs	1a1ec <__assert_fail@plt+0x91d4>
   1a1e0:	movw	r0, #0
   1a1e4:	str	r0, [sp, #48]	; 0x30
   1a1e8:	b	1a204 <__assert_fail@plt+0x91ec>
   1a1ec:	ldr	r0, [pc, #1940]	; 1a988 <__assert_fail@plt+0x9970>
   1a1f0:	ldr	r1, [fp, #-16]
   1a1f4:	movw	r2, #0
   1a1f8:	sub	r1, r2, r1
   1a1fc:	udiv	r0, r0, r1
   1a200:	str	r0, [sp, #48]	; 0x30
   1a204:	ldr	r0, [sp, #48]	; 0x30
   1a208:	ldr	r1, [fp, #-12]
   1a20c:	mvn	r2, #0
   1a210:	sub	r1, r2, r1
   1a214:	cmp	r0, r1
   1a218:	bls	1a31c <__assert_fail@plt+0x9304>
   1a21c:	b	1a330 <__assert_fail@plt+0x9318>
   1a220:	ldr	r0, [fp, #-16]
   1a224:	cmn	r0, #1
   1a228:	bne	1a270 <__assert_fail@plt+0x9258>
   1a22c:	b	1a248 <__assert_fail@plt+0x9230>
   1a230:	ldr	r0, [fp, #-12]
   1a234:	add	r0, r0, #-2147483648	; 0x80000000
   1a238:	movw	r1, #0
   1a23c:	cmp	r1, r0
   1a240:	bcc	1a31c <__assert_fail@plt+0x9304>
   1a244:	b	1a330 <__assert_fail@plt+0x9318>
   1a248:	ldr	r0, [fp, #-12]
   1a24c:	movw	r1, #0
   1a250:	cmp	r1, r0
   1a254:	bcs	1a330 <__assert_fail@plt+0x9318>
   1a258:	ldr	r0, [pc, #1832]	; 1a988 <__assert_fail@plt+0x9970>
   1a25c:	ldr	r1, [fp, #-12]
   1a260:	sub	r1, r1, #1
   1a264:	cmp	r0, r1
   1a268:	bcc	1a31c <__assert_fail@plt+0x9304>
   1a26c:	b	1a330 <__assert_fail@plt+0x9318>
   1a270:	ldr	r0, [pc, #1812]	; 1a98c <__assert_fail@plt+0x9974>
   1a274:	ldr	r1, [fp, #-16]
   1a278:	udiv	r0, r0, r1
   1a27c:	ldr	r1, [fp, #-12]
   1a280:	cmp	r0, r1
   1a284:	bcc	1a31c <__assert_fail@plt+0x9304>
   1a288:	b	1a330 <__assert_fail@plt+0x9318>
   1a28c:	ldr	r0, [fp, #-16]
   1a290:	cmp	r0, #0
   1a294:	bne	1a29c <__assert_fail@plt+0x9284>
   1a298:	b	1a330 <__assert_fail@plt+0x9318>
   1a29c:	ldr	r0, [fp, #-12]
   1a2a0:	cmp	r0, #0
   1a2a4:	bcs	1a304 <__assert_fail@plt+0x92ec>
   1a2a8:	ldr	r0, [fp, #-12]
   1a2ac:	cmn	r0, #1
   1a2b0:	bne	1a2e8 <__assert_fail@plt+0x92d0>
   1a2b4:	b	1a2d0 <__assert_fail@plt+0x92b8>
   1a2b8:	ldr	r0, [fp, #-16]
   1a2bc:	add	r0, r0, #-2147483648	; 0x80000000
   1a2c0:	movw	r1, #0
   1a2c4:	cmp	r1, r0
   1a2c8:	bcc	1a31c <__assert_fail@plt+0x9304>
   1a2cc:	b	1a330 <__assert_fail@plt+0x9318>
   1a2d0:	ldr	r0, [pc, #1712]	; 1a988 <__assert_fail@plt+0x9970>
   1a2d4:	ldr	r1, [fp, #-16]
   1a2d8:	sub	r1, r1, #1
   1a2dc:	cmp	r0, r1
   1a2e0:	bcc	1a31c <__assert_fail@plt+0x9304>
   1a2e4:	b	1a330 <__assert_fail@plt+0x9318>
   1a2e8:	ldr	r0, [pc, #1692]	; 1a98c <__assert_fail@plt+0x9974>
   1a2ec:	ldr	r1, [fp, #-12]
   1a2f0:	udiv	r0, r0, r1
   1a2f4:	ldr	r1, [fp, #-16]
   1a2f8:	cmp	r0, r1
   1a2fc:	bcc	1a31c <__assert_fail@plt+0x9304>
   1a300:	b	1a330 <__assert_fail@plt+0x9318>
   1a304:	ldr	r0, [pc, #1660]	; 1a988 <__assert_fail@plt+0x9970>
   1a308:	ldr	r1, [fp, #-16]
   1a30c:	udiv	r0, r0, r1
   1a310:	ldr	r1, [fp, #-12]
   1a314:	cmp	r0, r1
   1a318:	bcs	1a330 <__assert_fail@plt+0x9318>
   1a31c:	ldr	r0, [fp, #-12]
   1a320:	ldr	r1, [fp, #-16]
   1a324:	mul	r0, r0, r1
   1a328:	str	r0, [fp, #-20]	; 0xffffffec
   1a32c:	b	1a954 <__assert_fail@plt+0x993c>
   1a330:	ldr	r0, [fp, #-12]
   1a334:	ldr	r1, [fp, #-16]
   1a338:	mul	r0, r0, r1
   1a33c:	str	r0, [fp, #-20]	; 0xffffffec
   1a340:	b	1a96c <__assert_fail@plt+0x9954>
   1a344:	ldr	r0, [fp, #-16]
   1a348:	cmp	r0, #0
   1a34c:	bcs	1a458 <__assert_fail@plt+0x9440>
   1a350:	ldr	r0, [fp, #-12]
   1a354:	cmp	r0, #0
   1a358:	bcs	1a3e0 <__assert_fail@plt+0x93c8>
   1a35c:	b	1a37c <__assert_fail@plt+0x9364>
   1a360:	ldr	r0, [fp, #-12]
   1a364:	ldr	r1, [fp, #-16]
   1a368:	mvn	r2, #0
   1a36c:	udiv	r1, r2, r1
   1a370:	cmp	r0, r1
   1a374:	bcc	1a4f4 <__assert_fail@plt+0x94dc>
   1a378:	b	1a508 <__assert_fail@plt+0x94f0>
   1a37c:	b	1a390 <__assert_fail@plt+0x9378>
   1a380:	ldr	r0, [fp, #-16]
   1a384:	cmp	r0, #1
   1a388:	bcc	1a3a0 <__assert_fail@plt+0x9388>
   1a38c:	b	1a3ac <__assert_fail@plt+0x9394>
   1a390:	ldr	r0, [fp, #-16]
   1a394:	movw	r1, #0
   1a398:	cmp	r1, r0
   1a39c:	bcs	1a3ac <__assert_fail@plt+0x9394>
   1a3a0:	movw	r0, #1
   1a3a4:	str	r0, [sp, #44]	; 0x2c
   1a3a8:	b	1a3c4 <__assert_fail@plt+0x93ac>
   1a3ac:	ldr	r0, [fp, #-16]
   1a3b0:	movw	r1, #0
   1a3b4:	sub	r0, r1, r0
   1a3b8:	mvn	r1, #0
   1a3bc:	udiv	r0, r1, r0
   1a3c0:	str	r0, [sp, #44]	; 0x2c
   1a3c4:	ldr	r0, [sp, #44]	; 0x2c
   1a3c8:	ldr	r1, [fp, #-12]
   1a3cc:	mvn	r2, #0
   1a3d0:	sub	r1, r2, r1
   1a3d4:	cmp	r0, r1
   1a3d8:	bls	1a4f4 <__assert_fail@plt+0x94dc>
   1a3dc:	b	1a508 <__assert_fail@plt+0x94f0>
   1a3e0:	b	1a3e8 <__assert_fail@plt+0x93d0>
   1a3e4:	b	1a3ec <__assert_fail@plt+0x93d4>
   1a3e8:	b	1a43c <__assert_fail@plt+0x9424>
   1a3ec:	ldr	r0, [fp, #-16]
   1a3f0:	cmn	r0, #1
   1a3f4:	bne	1a43c <__assert_fail@plt+0x9424>
   1a3f8:	b	1a414 <__assert_fail@plt+0x93fc>
   1a3fc:	ldr	r0, [fp, #-12]
   1a400:	add	r0, r0, #0
   1a404:	movw	r1, #0
   1a408:	cmp	r1, r0
   1a40c:	bcc	1a4f4 <__assert_fail@plt+0x94dc>
   1a410:	b	1a508 <__assert_fail@plt+0x94f0>
   1a414:	ldr	r0, [fp, #-12]
   1a418:	movw	r1, #0
   1a41c:	cmp	r1, r0
   1a420:	bcs	1a508 <__assert_fail@plt+0x94f0>
   1a424:	ldr	r0, [fp, #-12]
   1a428:	sub	r0, r0, #1
   1a42c:	mvn	r1, #0
   1a430:	cmp	r1, r0
   1a434:	bcc	1a4f4 <__assert_fail@plt+0x94dc>
   1a438:	b	1a508 <__assert_fail@plt+0x94f0>
   1a43c:	ldr	r0, [fp, #-16]
   1a440:	movw	r1, #0
   1a444:	udiv	r0, r1, r0
   1a448:	ldr	r1, [fp, #-12]
   1a44c:	cmp	r0, r1
   1a450:	bcc	1a4f4 <__assert_fail@plt+0x94dc>
   1a454:	b	1a508 <__assert_fail@plt+0x94f0>
   1a458:	ldr	r0, [fp, #-16]
   1a45c:	cmp	r0, #0
   1a460:	bne	1a468 <__assert_fail@plt+0x9450>
   1a464:	b	1a508 <__assert_fail@plt+0x94f0>
   1a468:	ldr	r0, [fp, #-12]
   1a46c:	cmp	r0, #0
   1a470:	bcs	1a4dc <__assert_fail@plt+0x94c4>
   1a474:	b	1a47c <__assert_fail@plt+0x9464>
   1a478:	b	1a480 <__assert_fail@plt+0x9468>
   1a47c:	b	1a4c0 <__assert_fail@plt+0x94a8>
   1a480:	ldr	r0, [fp, #-12]
   1a484:	cmn	r0, #1
   1a488:	bne	1a4c0 <__assert_fail@plt+0x94a8>
   1a48c:	b	1a4a8 <__assert_fail@plt+0x9490>
   1a490:	ldr	r0, [fp, #-16]
   1a494:	add	r0, r0, #0
   1a498:	movw	r1, #0
   1a49c:	cmp	r1, r0
   1a4a0:	bcc	1a4f4 <__assert_fail@plt+0x94dc>
   1a4a4:	b	1a508 <__assert_fail@plt+0x94f0>
   1a4a8:	ldr	r0, [fp, #-16]
   1a4ac:	sub	r0, r0, #1
   1a4b0:	mvn	r1, #0
   1a4b4:	cmp	r1, r0
   1a4b8:	bcc	1a4f4 <__assert_fail@plt+0x94dc>
   1a4bc:	b	1a508 <__assert_fail@plt+0x94f0>
   1a4c0:	ldr	r0, [fp, #-12]
   1a4c4:	movw	r1, #0
   1a4c8:	udiv	r0, r1, r0
   1a4cc:	ldr	r1, [fp, #-16]
   1a4d0:	cmp	r0, r1
   1a4d4:	bcc	1a4f4 <__assert_fail@plt+0x94dc>
   1a4d8:	b	1a508 <__assert_fail@plt+0x94f0>
   1a4dc:	ldr	r0, [fp, #-16]
   1a4e0:	mvn	r1, #0
   1a4e4:	udiv	r0, r1, r0
   1a4e8:	ldr	r1, [fp, #-12]
   1a4ec:	cmp	r0, r1
   1a4f0:	bcs	1a508 <__assert_fail@plt+0x94f0>
   1a4f4:	ldr	r0, [fp, #-12]
   1a4f8:	ldr	r1, [fp, #-16]
   1a4fc:	mul	r0, r0, r1
   1a500:	str	r0, [fp, #-20]	; 0xffffffec
   1a504:	b	1a954 <__assert_fail@plt+0x993c>
   1a508:	ldr	r0, [fp, #-12]
   1a50c:	ldr	r1, [fp, #-16]
   1a510:	mul	r0, r0, r1
   1a514:	str	r0, [fp, #-20]	; 0xffffffec
   1a518:	b	1a96c <__assert_fail@plt+0x9954>
   1a51c:	b	1a738 <__assert_fail@plt+0x9720>
   1a520:	ldr	r0, [fp, #-16]
   1a524:	cmp	r0, #0
   1a528:	bcs	1a668 <__assert_fail@plt+0x9650>
   1a52c:	ldr	r0, [fp, #-12]
   1a530:	cmp	r0, #0
   1a534:	bcs	1a5f4 <__assert_fail@plt+0x95dc>
   1a538:	b	1a53c <__assert_fail@plt+0x9524>
   1a53c:	ldr	r0, [fp, #-12]
   1a540:	ldr	r2, [fp, #-16]
   1a544:	mvn	r1, #0
   1a548:	mvn	r3, #-2147483648	; 0x80000000
   1a54c:	mov	ip, #0
   1a550:	str	r0, [sp, #40]	; 0x28
   1a554:	mov	r0, r1
   1a558:	mov	r1, r3
   1a55c:	mov	r3, ip
   1a560:	bl	1b2a0 <__assert_fail@plt+0xa288>
   1a564:	ldr	r2, [sp, #40]	; 0x28
   1a568:	subs	r0, r2, r0
   1a56c:	rscs	r1, r1, #0
   1a570:	blt	1a710 <__assert_fail@plt+0x96f8>
   1a574:	b	1a724 <__assert_fail@plt+0x970c>
   1a578:	b	1a58c <__assert_fail@plt+0x9574>
   1a57c:	ldr	r0, [fp, #-16]
   1a580:	cmp	r0, #1
   1a584:	bcc	1a59c <__assert_fail@plt+0x9584>
   1a588:	b	1a5b0 <__assert_fail@plt+0x9598>
   1a58c:	ldr	r0, [fp, #-16]
   1a590:	movw	r1, #0
   1a594:	cmp	r1, r0
   1a598:	bcs	1a5b0 <__assert_fail@plt+0x9598>
   1a59c:	mov	r0, #0
   1a5a0:	mvn	r1, #0
   1a5a4:	str	r1, [sp, #36]	; 0x24
   1a5a8:	str	r0, [sp, #32]
   1a5ac:	b	1a5d4 <__assert_fail@plt+0x95bc>
   1a5b0:	ldr	r0, [fp, #-16]
   1a5b4:	rsb	r2, r0, #0
   1a5b8:	mvn	r0, #0
   1a5bc:	mvn	r1, #-2147483648	; 0x80000000
   1a5c0:	mov	r3, #0
   1a5c4:	bl	1b2a0 <__assert_fail@plt+0xa288>
   1a5c8:	str	r0, [sp, #36]	; 0x24
   1a5cc:	str	r1, [sp, #32]
   1a5d0:	b	1a5d4 <__assert_fail@plt+0x95bc>
   1a5d4:	ldr	r0, [sp, #32]
   1a5d8:	ldr	r1, [sp, #36]	; 0x24
   1a5dc:	ldr	r2, [fp, #-12]
   1a5e0:	mvn	r2, r2
   1a5e4:	subs	r1, r2, r1
   1a5e8:	rscs	r0, r0, #0
   1a5ec:	bge	1a710 <__assert_fail@plt+0x96f8>
   1a5f0:	b	1a724 <__assert_fail@plt+0x970c>
   1a5f4:	ldr	r0, [fp, #-16]
   1a5f8:	cmn	r0, #1
   1a5fc:	bne	1a63c <__assert_fail@plt+0x9624>
   1a600:	b	1a61c <__assert_fail@plt+0x9604>
   1a604:	ldr	r0, [fp, #-12]
   1a608:	rsbs	r0, r0, #0
   1a60c:	mov	r1, #0
   1a610:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a614:	blt	1a710 <__assert_fail@plt+0x96f8>
   1a618:	b	1a724 <__assert_fail@plt+0x970c>
   1a61c:	ldr	r0, [fp, #-12]
   1a620:	movw	r1, #0
   1a624:	cmp	r1, r0
   1a628:	bcs	1a724 <__assert_fail@plt+0x970c>
   1a62c:	mov	r0, #0
   1a630:	cmp	r0, #0
   1a634:	bne	1a710 <__assert_fail@plt+0x96f8>
   1a638:	b	1a724 <__assert_fail@plt+0x970c>
   1a63c:	ldr	r2, [fp, #-16]
   1a640:	mov	r1, #-2147483648	; 0x80000000
   1a644:	mov	r0, #0
   1a648:	str	r0, [sp, #28]
   1a64c:	ldr	r3, [sp, #28]
   1a650:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   1a654:	ldr	r2, [fp, #-12]
   1a658:	subs	r0, r0, r2
   1a65c:	sbcs	r1, r1, #0
   1a660:	blt	1a710 <__assert_fail@plt+0x96f8>
   1a664:	b	1a724 <__assert_fail@plt+0x970c>
   1a668:	ldr	r0, [fp, #-16]
   1a66c:	cmp	r0, #0
   1a670:	bne	1a678 <__assert_fail@plt+0x9660>
   1a674:	b	1a724 <__assert_fail@plt+0x970c>
   1a678:	ldr	r0, [fp, #-12]
   1a67c:	cmp	r0, #0
   1a680:	bcs	1a6e8 <__assert_fail@plt+0x96d0>
   1a684:	ldr	r0, [fp, #-12]
   1a688:	cmn	r0, #1
   1a68c:	bne	1a6bc <__assert_fail@plt+0x96a4>
   1a690:	b	1a6ac <__assert_fail@plt+0x9694>
   1a694:	ldr	r0, [fp, #-16]
   1a698:	rsbs	r0, r0, #0
   1a69c:	mov	r1, #0
   1a6a0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a6a4:	blt	1a710 <__assert_fail@plt+0x96f8>
   1a6a8:	b	1a724 <__assert_fail@plt+0x970c>
   1a6ac:	mov	r0, #0
   1a6b0:	cmp	r0, #0
   1a6b4:	bne	1a710 <__assert_fail@plt+0x96f8>
   1a6b8:	b	1a724 <__assert_fail@plt+0x970c>
   1a6bc:	ldr	r2, [fp, #-12]
   1a6c0:	mov	r1, #-2147483648	; 0x80000000
   1a6c4:	mov	r0, #0
   1a6c8:	str	r0, [sp, #24]
   1a6cc:	ldr	r3, [sp, #24]
   1a6d0:	bl	1b1cc <__assert_fail@plt+0xa1b4>
   1a6d4:	ldr	r2, [fp, #-16]
   1a6d8:	subs	r0, r0, r2
   1a6dc:	sbcs	r1, r1, #0
   1a6e0:	blt	1a710 <__assert_fail@plt+0x96f8>
   1a6e4:	b	1a724 <__assert_fail@plt+0x970c>
   1a6e8:	ldr	r2, [fp, #-16]
   1a6ec:	mvn	r0, #0
   1a6f0:	mvn	r1, #-2147483648	; 0x80000000
   1a6f4:	mov	r3, #0
   1a6f8:	bl	1b2a0 <__assert_fail@plt+0xa288>
   1a6fc:	ldr	r2, [fp, #-12]
   1a700:	subs	r0, r0, r2
   1a704:	sbcs	r1, r1, #0
   1a708:	bge	1a724 <__assert_fail@plt+0x970c>
   1a70c:	b	1a710 <__assert_fail@plt+0x96f8>
   1a710:	ldr	r0, [fp, #-12]
   1a714:	ldr	r1, [fp, #-16]
   1a718:	mul	r0, r0, r1
   1a71c:	str	r0, [fp, #-20]	; 0xffffffec
   1a720:	b	1a954 <__assert_fail@plt+0x993c>
   1a724:	ldr	r0, [fp, #-12]
   1a728:	ldr	r1, [fp, #-16]
   1a72c:	mul	r0, r0, r1
   1a730:	str	r0, [fp, #-20]	; 0xffffffec
   1a734:	b	1a96c <__assert_fail@plt+0x9954>
   1a738:	ldr	r0, [fp, #-16]
   1a73c:	cmp	r0, #0
   1a740:	bcs	1a87c <__assert_fail@plt+0x9864>
   1a744:	ldr	r0, [fp, #-12]
   1a748:	cmp	r0, #0
   1a74c:	bcs	1a804 <__assert_fail@plt+0x97ec>
   1a750:	b	1a784 <__assert_fail@plt+0x976c>
   1a754:	ldr	r0, [fp, #-12]
   1a758:	ldr	r2, [fp, #-16]
   1a75c:	mvn	r1, #0
   1a760:	mov	r3, #0
   1a764:	str	r0, [sp, #20]
   1a768:	mov	r0, r1
   1a76c:	bl	1b2a0 <__assert_fail@plt+0xa288>
   1a770:	ldr	r2, [sp, #20]
   1a774:	subs	r0, r2, r0
   1a778:	rscs	r1, r1, #0
   1a77c:	bcc	1a92c <__assert_fail@plt+0x9914>
   1a780:	b	1a940 <__assert_fail@plt+0x9928>
   1a784:	b	1a798 <__assert_fail@plt+0x9780>
   1a788:	ldr	r0, [fp, #-16]
   1a78c:	cmp	r0, #1
   1a790:	bcc	1a7a8 <__assert_fail@plt+0x9790>
   1a794:	b	1a7bc <__assert_fail@plt+0x97a4>
   1a798:	ldr	r0, [fp, #-16]
   1a79c:	movw	r1, #0
   1a7a0:	cmp	r1, r0
   1a7a4:	bcs	1a7bc <__assert_fail@plt+0x97a4>
   1a7a8:	mov	r0, #1
   1a7ac:	mvn	r1, #0
   1a7b0:	str	r1, [sp, #16]
   1a7b4:	str	r0, [sp, #12]
   1a7b8:	b	1a7e4 <__assert_fail@plt+0x97cc>
   1a7bc:	ldr	r0, [fp, #-16]
   1a7c0:	rsb	r2, r0, #0
   1a7c4:	mvn	r0, #0
   1a7c8:	mov	r3, #0
   1a7cc:	str	r0, [sp, #8]
   1a7d0:	ldr	r1, [sp, #8]
   1a7d4:	bl	1b2a0 <__assert_fail@plt+0xa288>
   1a7d8:	str	r0, [sp, #16]
   1a7dc:	str	r1, [sp, #12]
   1a7e0:	b	1a7e4 <__assert_fail@plt+0x97cc>
   1a7e4:	ldr	r0, [sp, #12]
   1a7e8:	ldr	r1, [sp, #16]
   1a7ec:	ldr	r2, [fp, #-12]
   1a7f0:	mvn	r2, r2
   1a7f4:	subs	r1, r2, r1
   1a7f8:	rscs	r0, r0, #0
   1a7fc:	bcs	1a92c <__assert_fail@plt+0x9914>
   1a800:	b	1a940 <__assert_fail@plt+0x9928>
   1a804:	b	1a80c <__assert_fail@plt+0x97f4>
   1a808:	b	1a810 <__assert_fail@plt+0x97f8>
   1a80c:	b	1a860 <__assert_fail@plt+0x9848>
   1a810:	ldr	r0, [fp, #-16]
   1a814:	cmn	r0, #1
   1a818:	bne	1a860 <__assert_fail@plt+0x9848>
   1a81c:	b	1a838 <__assert_fail@plt+0x9820>
   1a820:	ldr	r0, [fp, #-12]
   1a824:	add	r0, r0, #0
   1a828:	movw	r1, #0
   1a82c:	cmp	r1, r0
   1a830:	bcc	1a92c <__assert_fail@plt+0x9914>
   1a834:	b	1a940 <__assert_fail@plt+0x9928>
   1a838:	ldr	r0, [fp, #-12]
   1a83c:	movw	r1, #0
   1a840:	cmp	r1, r0
   1a844:	bcs	1a940 <__assert_fail@plt+0x9928>
   1a848:	ldr	r0, [fp, #-12]
   1a84c:	sub	r0, r0, #1
   1a850:	mvn	r1, #0
   1a854:	cmp	r1, r0
   1a858:	bcc	1a92c <__assert_fail@plt+0x9914>
   1a85c:	b	1a940 <__assert_fail@plt+0x9928>
   1a860:	ldr	r0, [fp, #-16]
   1a864:	movw	r1, #0
   1a868:	udiv	r0, r1, r0
   1a86c:	ldr	r1, [fp, #-12]
   1a870:	cmp	r0, r1
   1a874:	bcc	1a92c <__assert_fail@plt+0x9914>
   1a878:	b	1a940 <__assert_fail@plt+0x9928>
   1a87c:	ldr	r0, [fp, #-16]
   1a880:	cmp	r0, #0
   1a884:	bne	1a88c <__assert_fail@plt+0x9874>
   1a888:	b	1a940 <__assert_fail@plt+0x9928>
   1a88c:	ldr	r0, [fp, #-12]
   1a890:	cmp	r0, #0
   1a894:	bcs	1a900 <__assert_fail@plt+0x98e8>
   1a898:	b	1a8a0 <__assert_fail@plt+0x9888>
   1a89c:	b	1a8a4 <__assert_fail@plt+0x988c>
   1a8a0:	b	1a8e4 <__assert_fail@plt+0x98cc>
   1a8a4:	ldr	r0, [fp, #-12]
   1a8a8:	cmn	r0, #1
   1a8ac:	bne	1a8e4 <__assert_fail@plt+0x98cc>
   1a8b0:	b	1a8cc <__assert_fail@plt+0x98b4>
   1a8b4:	ldr	r0, [fp, #-16]
   1a8b8:	add	r0, r0, #0
   1a8bc:	movw	r1, #0
   1a8c0:	cmp	r1, r0
   1a8c4:	bcc	1a92c <__assert_fail@plt+0x9914>
   1a8c8:	b	1a940 <__assert_fail@plt+0x9928>
   1a8cc:	ldr	r0, [fp, #-16]
   1a8d0:	sub	r0, r0, #1
   1a8d4:	mvn	r1, #0
   1a8d8:	cmp	r1, r0
   1a8dc:	bcc	1a92c <__assert_fail@plt+0x9914>
   1a8e0:	b	1a940 <__assert_fail@plt+0x9928>
   1a8e4:	ldr	r0, [fp, #-12]
   1a8e8:	movw	r1, #0
   1a8ec:	udiv	r0, r1, r0
   1a8f0:	ldr	r1, [fp, #-16]
   1a8f4:	cmp	r0, r1
   1a8f8:	bcc	1a92c <__assert_fail@plt+0x9914>
   1a8fc:	b	1a940 <__assert_fail@plt+0x9928>
   1a900:	ldr	r2, [fp, #-16]
   1a904:	mvn	r0, #0
   1a908:	mov	r3, #0
   1a90c:	str	r0, [sp, #4]
   1a910:	ldr	r1, [sp, #4]
   1a914:	bl	1b2a0 <__assert_fail@plt+0xa288>
   1a918:	ldr	r2, [fp, #-12]
   1a91c:	subs	r0, r0, r2
   1a920:	sbcs	r1, r1, #0
   1a924:	bcs	1a940 <__assert_fail@plt+0x9928>
   1a928:	b	1a92c <__assert_fail@plt+0x9914>
   1a92c:	ldr	r0, [fp, #-12]
   1a930:	ldr	r1, [fp, #-16]
   1a934:	mul	r0, r0, r1
   1a938:	str	r0, [fp, #-20]	; 0xffffffec
   1a93c:	b	1a954 <__assert_fail@plt+0x993c>
   1a940:	ldr	r0, [fp, #-12]
   1a944:	ldr	r1, [fp, #-16]
   1a948:	mul	r0, r0, r1
   1a94c:	str	r0, [fp, #-20]	; 0xffffffec
   1a950:	b	1a96c <__assert_fail@plt+0x9954>
   1a954:	bl	10f70 <__errno_location@plt>
   1a958:	movw	r1, #12
   1a95c:	str	r1, [r0]
   1a960:	movw	r0, #0
   1a964:	str	r0, [fp, #-4]
   1a968:	b	1a97c <__assert_fail@plt+0x9964>
   1a96c:	ldr	r0, [fp, #-8]
   1a970:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a974:	bl	19108 <__assert_fail@plt+0x80f0>
   1a978:	str	r0, [fp, #-4]
   1a97c:	ldr	r0, [fp, #-4]
   1a980:	mov	sp, fp
   1a984:	pop	{fp, pc}
   1a988:	svcvc	0x00ffffff
   1a98c:	andhi	r0, r0, r0
   1a990:			; <UNDEFINED> instruction: 0xffff8000
   1a994:	sub	sp, sp, #12
   1a998:	str	r0, [sp, #4]
   1a99c:	ldr	r0, [sp, #4]
   1a9a0:	sub	r1, r0, #48	; 0x30
   1a9a4:	cmp	r1, #10
   1a9a8:	str	r0, [sp]
   1a9ac:	bcc	1a9dc <__assert_fail@plt+0x99c4>
   1a9b0:	b	1a9b4 <__assert_fail@plt+0x999c>
   1a9b4:	ldr	r0, [sp]
   1a9b8:	sub	r1, r0, #65	; 0x41
   1a9bc:	cmp	r1, #26
   1a9c0:	bcc	1a9dc <__assert_fail@plt+0x99c4>
   1a9c4:	b	1a9c8 <__assert_fail@plt+0x99b0>
   1a9c8:	ldr	r0, [sp]
   1a9cc:	sub	r1, r0, #97	; 0x61
   1a9d0:	cmp	r1, #25
   1a9d4:	bhi	1a9ec <__assert_fail@plt+0x99d4>
   1a9d8:	b	1a9dc <__assert_fail@plt+0x99c4>
   1a9dc:	movw	r0, #1
   1a9e0:	and	r0, r0, #1
   1a9e4:	strb	r0, [sp, #11]
   1a9e8:	b	1a9f8 <__assert_fail@plt+0x99e0>
   1a9ec:	movw	r0, #0
   1a9f0:	and	r0, r0, #1
   1a9f4:	strb	r0, [sp, #11]
   1a9f8:	ldrb	r0, [sp, #11]
   1a9fc:	and	r0, r0, #1
   1aa00:	add	sp, sp, #12
   1aa04:	bx	lr
   1aa08:	sub	sp, sp, #12
   1aa0c:	str	r0, [sp, #4]
   1aa10:	ldr	r0, [sp, #4]
   1aa14:	sub	r1, r0, #65	; 0x41
   1aa18:	cmp	r1, #26
   1aa1c:	str	r0, [sp]
   1aa20:	bcc	1aa3c <__assert_fail@plt+0x9a24>
   1aa24:	b	1aa28 <__assert_fail@plt+0x9a10>
   1aa28:	ldr	r0, [sp]
   1aa2c:	sub	r1, r0, #97	; 0x61
   1aa30:	cmp	r1, #25
   1aa34:	bhi	1aa4c <__assert_fail@plt+0x9a34>
   1aa38:	b	1aa3c <__assert_fail@plt+0x9a24>
   1aa3c:	movw	r0, #1
   1aa40:	and	r0, r0, #1
   1aa44:	strb	r0, [sp, #11]
   1aa48:	b	1aa58 <__assert_fail@plt+0x9a40>
   1aa4c:	movw	r0, #0
   1aa50:	and	r0, r0, #1
   1aa54:	strb	r0, [sp, #11]
   1aa58:	ldrb	r0, [sp, #11]
   1aa5c:	and	r0, r0, #1
   1aa60:	add	sp, sp, #12
   1aa64:	bx	lr
   1aa68:	sub	sp, sp, #8
   1aa6c:	str	r0, [sp]
   1aa70:	ldr	r0, [sp]
   1aa74:	cmp	r0, #127	; 0x7f
   1aa78:	bhi	1aa90 <__assert_fail@plt+0x9a78>
   1aa7c:	b	1aa80 <__assert_fail@plt+0x9a68>
   1aa80:	movw	r0, #1
   1aa84:	and	r0, r0, #1
   1aa88:	strb	r0, [sp, #7]
   1aa8c:	b	1aa9c <__assert_fail@plt+0x9a84>
   1aa90:	movw	r0, #0
   1aa94:	and	r0, r0, #1
   1aa98:	strb	r0, [sp, #7]
   1aa9c:	ldrb	r0, [sp, #7]
   1aaa0:	and	r0, r0, #1
   1aaa4:	add	sp, sp, #8
   1aaa8:	bx	lr
   1aaac:	sub	sp, sp, #8
   1aab0:	str	r0, [sp, #4]
   1aab4:	ldr	r0, [sp, #4]
   1aab8:	cmp	r0, #32
   1aabc:	movw	r0, #1
   1aac0:	str	r0, [sp]
   1aac4:	beq	1aadc <__assert_fail@plt+0x9ac4>
   1aac8:	ldr	r0, [sp, #4]
   1aacc:	cmp	r0, #9
   1aad0:	movw	r0, #0
   1aad4:	moveq	r0, #1
   1aad8:	str	r0, [sp]
   1aadc:	ldr	r0, [sp]
   1aae0:	and	r0, r0, #1
   1aae4:	add	sp, sp, #8
   1aae8:	bx	lr
   1aaec:	sub	sp, sp, #12
   1aaf0:	str	r0, [sp, #4]
   1aaf4:	ldr	r0, [sp, #4]
   1aaf8:	cmp	r0, #32
   1aafc:	str	r0, [sp]
   1ab00:	bcc	1ab18 <__assert_fail@plt+0x9b00>
   1ab04:	b	1ab08 <__assert_fail@plt+0x9af0>
   1ab08:	ldr	r0, [sp]
   1ab0c:	cmp	r0, #127	; 0x7f
   1ab10:	bne	1ab28 <__assert_fail@plt+0x9b10>
   1ab14:	b	1ab18 <__assert_fail@plt+0x9b00>
   1ab18:	movw	r0, #1
   1ab1c:	and	r0, r0, #1
   1ab20:	strb	r0, [sp, #11]
   1ab24:	b	1ab34 <__assert_fail@plt+0x9b1c>
   1ab28:	movw	r0, #0
   1ab2c:	and	r0, r0, #1
   1ab30:	strb	r0, [sp, #11]
   1ab34:	ldrb	r0, [sp, #11]
   1ab38:	and	r0, r0, #1
   1ab3c:	add	sp, sp, #12
   1ab40:	bx	lr
   1ab44:	sub	sp, sp, #8
   1ab48:	str	r0, [sp]
   1ab4c:	ldr	r0, [sp]
   1ab50:	sub	r0, r0, #48	; 0x30
   1ab54:	cmp	r0, #9
   1ab58:	bhi	1ab70 <__assert_fail@plt+0x9b58>
   1ab5c:	b	1ab60 <__assert_fail@plt+0x9b48>
   1ab60:	movw	r0, #1
   1ab64:	and	r0, r0, #1
   1ab68:	strb	r0, [sp, #7]
   1ab6c:	b	1ab7c <__assert_fail@plt+0x9b64>
   1ab70:	movw	r0, #0
   1ab74:	and	r0, r0, #1
   1ab78:	strb	r0, [sp, #7]
   1ab7c:	ldrb	r0, [sp, #7]
   1ab80:	and	r0, r0, #1
   1ab84:	add	sp, sp, #8
   1ab88:	bx	lr
   1ab8c:	sub	sp, sp, #8
   1ab90:	str	r0, [sp]
   1ab94:	ldr	r0, [sp]
   1ab98:	sub	r0, r0, #33	; 0x21
   1ab9c:	cmp	r0, #93	; 0x5d
   1aba0:	bhi	1abb8 <__assert_fail@plt+0x9ba0>
   1aba4:	b	1aba8 <__assert_fail@plt+0x9b90>
   1aba8:	movw	r0, #1
   1abac:	and	r0, r0, #1
   1abb0:	strb	r0, [sp, #7]
   1abb4:	b	1abc4 <__assert_fail@plt+0x9bac>
   1abb8:	movw	r0, #0
   1abbc:	and	r0, r0, #1
   1abc0:	strb	r0, [sp, #7]
   1abc4:	ldrb	r0, [sp, #7]
   1abc8:	and	r0, r0, #1
   1abcc:	add	sp, sp, #8
   1abd0:	bx	lr
   1abd4:	sub	sp, sp, #8
   1abd8:	str	r0, [sp]
   1abdc:	ldr	r0, [sp]
   1abe0:	sub	r0, r0, #97	; 0x61
   1abe4:	cmp	r0, #25
   1abe8:	bhi	1ac00 <__assert_fail@plt+0x9be8>
   1abec:	b	1abf0 <__assert_fail@plt+0x9bd8>
   1abf0:	movw	r0, #1
   1abf4:	and	r0, r0, #1
   1abf8:	strb	r0, [sp, #7]
   1abfc:	b	1ac0c <__assert_fail@plt+0x9bf4>
   1ac00:	movw	r0, #0
   1ac04:	and	r0, r0, #1
   1ac08:	strb	r0, [sp, #7]
   1ac0c:	ldrb	r0, [sp, #7]
   1ac10:	and	r0, r0, #1
   1ac14:	add	sp, sp, #8
   1ac18:	bx	lr
   1ac1c:	sub	sp, sp, #8
   1ac20:	str	r0, [sp]
   1ac24:	ldr	r0, [sp]
   1ac28:	sub	r0, r0, #32
   1ac2c:	cmp	r0, #94	; 0x5e
   1ac30:	bhi	1ac48 <__assert_fail@plt+0x9c30>
   1ac34:	b	1ac38 <__assert_fail@plt+0x9c20>
   1ac38:	movw	r0, #1
   1ac3c:	and	r0, r0, #1
   1ac40:	strb	r0, [sp, #7]
   1ac44:	b	1ac54 <__assert_fail@plt+0x9c3c>
   1ac48:	movw	r0, #0
   1ac4c:	and	r0, r0, #1
   1ac50:	strb	r0, [sp, #7]
   1ac54:	ldrb	r0, [sp, #7]
   1ac58:	and	r0, r0, #1
   1ac5c:	add	sp, sp, #8
   1ac60:	bx	lr
   1ac64:	sub	sp, sp, #12
   1ac68:	str	r0, [sp, #4]
   1ac6c:	ldr	r0, [sp, #4]
   1ac70:	sub	r0, r0, #33	; 0x21
   1ac74:	cmp	r0, #93	; 0x5d
   1ac78:	str	r0, [sp]
   1ac7c:	bhi	1ae18 <__assert_fail@plt+0x9e00>
   1ac80:	add	r0, pc, #8
   1ac84:	ldr	r1, [sp]
   1ac88:	ldr	r0, [r0, r1, lsl #2]
   1ac8c:	mov	pc, r0
   1ac90:	andeq	sl, r1, r8, lsl #28
   1ac94:	andeq	sl, r1, r8, lsl #28
   1ac98:	andeq	sl, r1, r8, lsl #28
   1ac9c:	andeq	sl, r1, r8, lsl #28
   1aca0:	andeq	sl, r1, r8, lsl #28
   1aca4:	andeq	sl, r1, r8, lsl #28
   1aca8:	andeq	sl, r1, r8, lsl #28
   1acac:	andeq	sl, r1, r8, lsl #28
   1acb0:	andeq	sl, r1, r8, lsl #28
   1acb4:	andeq	sl, r1, r8, lsl #28
   1acb8:	andeq	sl, r1, r8, lsl #28
   1acbc:	andeq	sl, r1, r8, lsl #28
   1acc0:	andeq	sl, r1, r8, lsl #28
   1acc4:	andeq	sl, r1, r8, lsl #28
   1acc8:	andeq	sl, r1, r8, lsl #28
   1accc:	andeq	sl, r1, r8, lsl lr
   1acd0:	andeq	sl, r1, r8, lsl lr
   1acd4:	andeq	sl, r1, r8, lsl lr
   1acd8:	andeq	sl, r1, r8, lsl lr
   1acdc:	andeq	sl, r1, r8, lsl lr
   1ace0:	andeq	sl, r1, r8, lsl lr
   1ace4:	andeq	sl, r1, r8, lsl lr
   1ace8:	andeq	sl, r1, r8, lsl lr
   1acec:	andeq	sl, r1, r8, lsl lr
   1acf0:	andeq	sl, r1, r8, lsl lr
   1acf4:	andeq	sl, r1, r8, lsl #28
   1acf8:	andeq	sl, r1, r8, lsl #28
   1acfc:	andeq	sl, r1, r8, lsl #28
   1ad00:	andeq	sl, r1, r8, lsl #28
   1ad04:	andeq	sl, r1, r8, lsl #28
   1ad08:	andeq	sl, r1, r8, lsl #28
   1ad0c:	andeq	sl, r1, r8, lsl #28
   1ad10:	andeq	sl, r1, r8, lsl lr
   1ad14:	andeq	sl, r1, r8, lsl lr
   1ad18:	andeq	sl, r1, r8, lsl lr
   1ad1c:	andeq	sl, r1, r8, lsl lr
   1ad20:	andeq	sl, r1, r8, lsl lr
   1ad24:	andeq	sl, r1, r8, lsl lr
   1ad28:	andeq	sl, r1, r8, lsl lr
   1ad2c:	andeq	sl, r1, r8, lsl lr
   1ad30:	andeq	sl, r1, r8, lsl lr
   1ad34:	andeq	sl, r1, r8, lsl lr
   1ad38:	andeq	sl, r1, r8, lsl lr
   1ad3c:	andeq	sl, r1, r8, lsl lr
   1ad40:	andeq	sl, r1, r8, lsl lr
   1ad44:	andeq	sl, r1, r8, lsl lr
   1ad48:	andeq	sl, r1, r8, lsl lr
   1ad4c:	andeq	sl, r1, r8, lsl lr
   1ad50:	andeq	sl, r1, r8, lsl lr
   1ad54:	andeq	sl, r1, r8, lsl lr
   1ad58:	andeq	sl, r1, r8, lsl lr
   1ad5c:	andeq	sl, r1, r8, lsl lr
   1ad60:	andeq	sl, r1, r8, lsl lr
   1ad64:	andeq	sl, r1, r8, lsl lr
   1ad68:	andeq	sl, r1, r8, lsl lr
   1ad6c:	andeq	sl, r1, r8, lsl lr
   1ad70:	andeq	sl, r1, r8, lsl lr
   1ad74:	andeq	sl, r1, r8, lsl lr
   1ad78:	andeq	sl, r1, r8, lsl #28
   1ad7c:	andeq	sl, r1, r8, lsl #28
   1ad80:	andeq	sl, r1, r8, lsl #28
   1ad84:	andeq	sl, r1, r8, lsl #28
   1ad88:	andeq	sl, r1, r8, lsl #28
   1ad8c:	andeq	sl, r1, r8, lsl #28
   1ad90:	andeq	sl, r1, r8, lsl lr
   1ad94:	andeq	sl, r1, r8, lsl lr
   1ad98:	andeq	sl, r1, r8, lsl lr
   1ad9c:	andeq	sl, r1, r8, lsl lr
   1ada0:	andeq	sl, r1, r8, lsl lr
   1ada4:	andeq	sl, r1, r8, lsl lr
   1ada8:	andeq	sl, r1, r8, lsl lr
   1adac:	andeq	sl, r1, r8, lsl lr
   1adb0:	andeq	sl, r1, r8, lsl lr
   1adb4:	andeq	sl, r1, r8, lsl lr
   1adb8:	andeq	sl, r1, r8, lsl lr
   1adbc:	andeq	sl, r1, r8, lsl lr
   1adc0:	andeq	sl, r1, r8, lsl lr
   1adc4:	andeq	sl, r1, r8, lsl lr
   1adc8:	andeq	sl, r1, r8, lsl lr
   1adcc:	andeq	sl, r1, r8, lsl lr
   1add0:	andeq	sl, r1, r8, lsl lr
   1add4:	andeq	sl, r1, r8, lsl lr
   1add8:	andeq	sl, r1, r8, lsl lr
   1addc:	andeq	sl, r1, r8, lsl lr
   1ade0:	andeq	sl, r1, r8, lsl lr
   1ade4:	andeq	sl, r1, r8, lsl lr
   1ade8:	andeq	sl, r1, r8, lsl lr
   1adec:	andeq	sl, r1, r8, lsl lr
   1adf0:	andeq	sl, r1, r8, lsl lr
   1adf4:	andeq	sl, r1, r8, lsl lr
   1adf8:	andeq	sl, r1, r8, lsl #28
   1adfc:	andeq	sl, r1, r8, lsl #28
   1ae00:	andeq	sl, r1, r8, lsl #28
   1ae04:	andeq	sl, r1, r8, lsl #28
   1ae08:	movw	r0, #1
   1ae0c:	and	r0, r0, #1
   1ae10:	strb	r0, [sp, #11]
   1ae14:	b	1ae24 <__assert_fail@plt+0x9e0c>
   1ae18:	movw	r0, #0
   1ae1c:	and	r0, r0, #1
   1ae20:	strb	r0, [sp, #11]
   1ae24:	ldrb	r0, [sp, #11]
   1ae28:	and	r0, r0, #1
   1ae2c:	add	sp, sp, #12
   1ae30:	bx	lr
   1ae34:	sub	sp, sp, #12
   1ae38:	str	r0, [sp, #4]
   1ae3c:	ldr	r0, [sp, #4]
   1ae40:	sub	r1, r0, #9
   1ae44:	cmp	r1, #5
   1ae48:	str	r0, [sp]
   1ae4c:	bcc	1ae64 <__assert_fail@plt+0x9e4c>
   1ae50:	b	1ae54 <__assert_fail@plt+0x9e3c>
   1ae54:	ldr	r0, [sp]
   1ae58:	cmp	r0, #32
   1ae5c:	bne	1ae74 <__assert_fail@plt+0x9e5c>
   1ae60:	b	1ae64 <__assert_fail@plt+0x9e4c>
   1ae64:	movw	r0, #1
   1ae68:	and	r0, r0, #1
   1ae6c:	strb	r0, [sp, #11]
   1ae70:	b	1ae80 <__assert_fail@plt+0x9e68>
   1ae74:	movw	r0, #0
   1ae78:	and	r0, r0, #1
   1ae7c:	strb	r0, [sp, #11]
   1ae80:	ldrb	r0, [sp, #11]
   1ae84:	and	r0, r0, #1
   1ae88:	add	sp, sp, #12
   1ae8c:	bx	lr
   1ae90:	sub	sp, sp, #8
   1ae94:	str	r0, [sp]
   1ae98:	ldr	r0, [sp]
   1ae9c:	sub	r0, r0, #65	; 0x41
   1aea0:	cmp	r0, #25
   1aea4:	bhi	1aebc <__assert_fail@plt+0x9ea4>
   1aea8:	b	1aeac <__assert_fail@plt+0x9e94>
   1aeac:	movw	r0, #1
   1aeb0:	and	r0, r0, #1
   1aeb4:	strb	r0, [sp, #7]
   1aeb8:	b	1aec8 <__assert_fail@plt+0x9eb0>
   1aebc:	movw	r0, #0
   1aec0:	and	r0, r0, #1
   1aec4:	strb	r0, [sp, #7]
   1aec8:	ldrb	r0, [sp, #7]
   1aecc:	and	r0, r0, #1
   1aed0:	add	sp, sp, #8
   1aed4:	bx	lr
   1aed8:	sub	sp, sp, #12
   1aedc:	str	r0, [sp, #4]
   1aee0:	ldr	r0, [sp, #4]
   1aee4:	sub	r1, r0, #48	; 0x30
   1aee8:	cmp	r1, #10
   1aeec:	str	r0, [sp]
   1aef0:	bcc	1af20 <__assert_fail@plt+0x9f08>
   1aef4:	b	1aef8 <__assert_fail@plt+0x9ee0>
   1aef8:	ldr	r0, [sp]
   1aefc:	sub	r1, r0, #65	; 0x41
   1af00:	cmp	r1, #6
   1af04:	bcc	1af20 <__assert_fail@plt+0x9f08>
   1af08:	b	1af0c <__assert_fail@plt+0x9ef4>
   1af0c:	ldr	r0, [sp]
   1af10:	sub	r1, r0, #97	; 0x61
   1af14:	cmp	r1, #5
   1af18:	bhi	1af30 <__assert_fail@plt+0x9f18>
   1af1c:	b	1af20 <__assert_fail@plt+0x9f08>
   1af20:	movw	r0, #1
   1af24:	and	r0, r0, #1
   1af28:	strb	r0, [sp, #11]
   1af2c:	b	1af3c <__assert_fail@plt+0x9f24>
   1af30:	movw	r0, #0
   1af34:	and	r0, r0, #1
   1af38:	strb	r0, [sp, #11]
   1af3c:	ldrb	r0, [sp, #11]
   1af40:	and	r0, r0, #1
   1af44:	add	sp, sp, #12
   1af48:	bx	lr
   1af4c:	sub	sp, sp, #8
   1af50:	str	r0, [sp]
   1af54:	ldr	r0, [sp]
   1af58:	sub	r0, r0, #65	; 0x41
   1af5c:	cmp	r0, #25
   1af60:	bhi	1af7c <__assert_fail@plt+0x9f64>
   1af64:	b	1af68 <__assert_fail@plt+0x9f50>
   1af68:	ldr	r0, [sp]
   1af6c:	sub	r0, r0, #65	; 0x41
   1af70:	add	r0, r0, #97	; 0x61
   1af74:	str	r0, [sp, #4]
   1af78:	b	1af84 <__assert_fail@plt+0x9f6c>
   1af7c:	ldr	r0, [sp]
   1af80:	str	r0, [sp, #4]
   1af84:	ldr	r0, [sp, #4]
   1af88:	add	sp, sp, #8
   1af8c:	bx	lr
   1af90:	sub	sp, sp, #8
   1af94:	str	r0, [sp]
   1af98:	ldr	r0, [sp]
   1af9c:	sub	r0, r0, #97	; 0x61
   1afa0:	cmp	r0, #25
   1afa4:	bhi	1afc0 <__assert_fail@plt+0x9fa8>
   1afa8:	b	1afac <__assert_fail@plt+0x9f94>
   1afac:	ldr	r0, [sp]
   1afb0:	sub	r0, r0, #97	; 0x61
   1afb4:	add	r0, r0, #65	; 0x41
   1afb8:	str	r0, [sp, #4]
   1afbc:	b	1afc8 <__assert_fail@plt+0x9fb0>
   1afc0:	ldr	r0, [sp]
   1afc4:	str	r0, [sp, #4]
   1afc8:	ldr	r0, [sp, #4]
   1afcc:	add	sp, sp, #8
   1afd0:	bx	lr
   1afd4:	push	{r4, r5, fp, lr}
   1afd8:	add	fp, sp, #8
   1afdc:	sub	sp, sp, #272	; 0x110
   1afe0:	add	r1, sp, #7
   1afe4:	str	r0, [fp, #-16]
   1afe8:	ldr	r0, [fp, #-16]
   1afec:	movw	r2, #257	; 0x101
   1aff0:	bl	1b070 <__assert_fail@plt+0xa058>
   1aff4:	cmp	r0, #0
   1aff8:	beq	1b00c <__assert_fail@plt+0x9ff4>
   1affc:	movw	r0, #0
   1b000:	and	r0, r0, #1
   1b004:	strb	r0, [fp, #-9]
   1b008:	b	1b060 <__assert_fail@plt+0xa048>
   1b00c:	add	r0, sp, #7
   1b010:	movw	r1, #48451	; 0xbd43
   1b014:	movt	r1, #1
   1b018:	bl	10de4 <strcmp@plt>
   1b01c:	cmp	r0, #0
   1b020:	movw	r0, #1
   1b024:	str	r0, [sp]
   1b028:	beq	1b04c <__assert_fail@plt+0xa034>
   1b02c:	add	r0, sp, #7
   1b030:	movw	r1, #48453	; 0xbd45
   1b034:	movt	r1, #1
   1b038:	bl	10de4 <strcmp@plt>
   1b03c:	cmp	r0, #0
   1b040:	movw	r0, #0
   1b044:	moveq	r0, #1
   1b048:	str	r0, [sp]
   1b04c:	ldr	r0, [sp]
   1b050:	mvn	r1, #0
   1b054:	eor	r0, r0, r1
   1b058:	and	r0, r0, #1
   1b05c:	strb	r0, [fp, #-9]
   1b060:	ldrb	r0, [fp, #-9]
   1b064:	and	r0, r0, #1
   1b068:	sub	sp, fp, #8
   1b06c:	pop	{r4, r5, fp, pc}
   1b070:	push	{fp, lr}
   1b074:	mov	fp, sp
   1b078:	sub	sp, sp, #16
   1b07c:	str	r0, [fp, #-4]
   1b080:	str	r1, [sp, #8]
   1b084:	str	r2, [sp, #4]
   1b088:	ldr	r0, [fp, #-4]
   1b08c:	ldr	r1, [sp, #8]
   1b090:	ldr	r2, [sp, #4]
   1b094:	bl	1b0a0 <__assert_fail@plt+0xa088>
   1b098:	mov	sp, fp
   1b09c:	pop	{fp, pc}
   1b0a0:	push	{fp, lr}
   1b0a4:	mov	fp, sp
   1b0a8:	sub	sp, sp, #24
   1b0ac:	str	r0, [fp, #-8]
   1b0b0:	str	r1, [sp, #12]
   1b0b4:	str	r2, [sp, #8]
   1b0b8:	ldr	r0, [fp, #-8]
   1b0bc:	bl	1b1a0 <__assert_fail@plt+0xa188>
   1b0c0:	str	r0, [sp, #4]
   1b0c4:	ldr	r0, [sp, #4]
   1b0c8:	movw	r1, #0
   1b0cc:	cmp	r0, r1
   1b0d0:	bne	1b0f8 <__assert_fail@plt+0xa0e0>
   1b0d4:	ldr	r0, [sp, #8]
   1b0d8:	cmp	r0, #0
   1b0dc:	bls	1b0ec <__assert_fail@plt+0xa0d4>
   1b0e0:	ldr	r0, [sp, #12]
   1b0e4:	movw	r1, #0
   1b0e8:	strb	r1, [r0]
   1b0ec:	movw	r0, #22
   1b0f0:	str	r0, [fp, #-4]
   1b0f4:	b	1b174 <__assert_fail@plt+0xa15c>
   1b0f8:	ldr	r0, [sp, #4]
   1b0fc:	bl	10f58 <strlen@plt>
   1b100:	str	r0, [sp]
   1b104:	ldr	r0, [sp]
   1b108:	ldr	r1, [sp, #8]
   1b10c:	cmp	r0, r1
   1b110:	bcs	1b134 <__assert_fail@plt+0xa11c>
   1b114:	ldr	r0, [sp, #12]
   1b118:	ldr	r1, [sp, #4]
   1b11c:	ldr	r2, [sp]
   1b120:	add	r2, r2, #1
   1b124:	bl	10e2c <memcpy@plt>
   1b128:	movw	r0, #0
   1b12c:	str	r0, [fp, #-4]
   1b130:	b	1b174 <__assert_fail@plt+0xa15c>
   1b134:	ldr	r0, [sp, #8]
   1b138:	cmp	r0, #0
   1b13c:	bls	1b16c <__assert_fail@plt+0xa154>
   1b140:	ldr	r0, [sp, #12]
   1b144:	ldr	r1, [sp, #4]
   1b148:	ldr	r2, [sp, #8]
   1b14c:	sub	r2, r2, #1
   1b150:	bl	10e2c <memcpy@plt>
   1b154:	ldr	r0, [sp, #12]
   1b158:	ldr	r1, [sp, #8]
   1b15c:	sub	r1, r1, #1
   1b160:	add	r0, r0, r1
   1b164:	movw	r1, #0
   1b168:	strb	r1, [r0]
   1b16c:	movw	r0, #34	; 0x22
   1b170:	str	r0, [fp, #-4]
   1b174:	ldr	r0, [fp, #-4]
   1b178:	mov	sp, fp
   1b17c:	pop	{fp, pc}
   1b180:	push	{fp, lr}
   1b184:	mov	fp, sp
   1b188:	sub	sp, sp, #8
   1b18c:	str	r0, [sp, #4]
   1b190:	ldr	r0, [sp, #4]
   1b194:	bl	1b1a0 <__assert_fail@plt+0xa188>
   1b198:	mov	sp, fp
   1b19c:	pop	{fp, pc}
   1b1a0:	push	{fp, lr}
   1b1a4:	mov	fp, sp
   1b1a8:	sub	sp, sp, #8
   1b1ac:	str	r0, [sp, #4]
   1b1b0:	ldr	r0, [sp, #4]
   1b1b4:	movw	r1, #0
   1b1b8:	bl	10fb8 <setlocale@plt>
   1b1bc:	str	r0, [sp]
   1b1c0:	ldr	r0, [sp]
   1b1c4:	mov	sp, fp
   1b1c8:	pop	{fp, pc}
   1b1cc:	cmp	r3, #0
   1b1d0:	cmpeq	r2, #0
   1b1d4:	bne	1b1f8 <__assert_fail@plt+0xa1e0>
   1b1d8:	cmp	r1, #0
   1b1dc:	movlt	r1, #-2147483648	; 0x80000000
   1b1e0:	movlt	r0, #0
   1b1e4:	blt	1b1f4 <__assert_fail@plt+0xa1dc>
   1b1e8:	cmpeq	r0, #0
   1b1ec:	mvnne	r1, #-2147483648	; 0x80000000
   1b1f0:	mvnne	r0, #0
   1b1f4:	b	1b2dc <__assert_fail@plt+0xa2c4>
   1b1f8:	sub	sp, sp, #8
   1b1fc:	push	{sp, lr}
   1b200:	cmp	r1, #0
   1b204:	blt	1b224 <__assert_fail@plt+0xa20c>
   1b208:	cmp	r3, #0
   1b20c:	blt	1b258 <__assert_fail@plt+0xa240>
   1b210:	bl	1b2ec <__assert_fail@plt+0xa2d4>
   1b214:	ldr	lr, [sp, #4]
   1b218:	add	sp, sp, #8
   1b21c:	pop	{r2, r3}
   1b220:	bx	lr
   1b224:	rsbs	r0, r0, #0
   1b228:	sbc	r1, r1, r1, lsl #1
   1b22c:	cmp	r3, #0
   1b230:	blt	1b27c <__assert_fail@plt+0xa264>
   1b234:	bl	1b2ec <__assert_fail@plt+0xa2d4>
   1b238:	ldr	lr, [sp, #4]
   1b23c:	add	sp, sp, #8
   1b240:	pop	{r2, r3}
   1b244:	rsbs	r0, r0, #0
   1b248:	sbc	r1, r1, r1, lsl #1
   1b24c:	rsbs	r2, r2, #0
   1b250:	sbc	r3, r3, r3, lsl #1
   1b254:	bx	lr
   1b258:	rsbs	r2, r2, #0
   1b25c:	sbc	r3, r3, r3, lsl #1
   1b260:	bl	1b2ec <__assert_fail@plt+0xa2d4>
   1b264:	ldr	lr, [sp, #4]
   1b268:	add	sp, sp, #8
   1b26c:	pop	{r2, r3}
   1b270:	rsbs	r0, r0, #0
   1b274:	sbc	r1, r1, r1, lsl #1
   1b278:	bx	lr
   1b27c:	rsbs	r2, r2, #0
   1b280:	sbc	r3, r3, r3, lsl #1
   1b284:	bl	1b2ec <__assert_fail@plt+0xa2d4>
   1b288:	ldr	lr, [sp, #4]
   1b28c:	add	sp, sp, #8
   1b290:	pop	{r2, r3}
   1b294:	rsbs	r2, r2, #0
   1b298:	sbc	r3, r3, r3, lsl #1
   1b29c:	bx	lr
   1b2a0:	cmp	r3, #0
   1b2a4:	cmpeq	r2, #0
   1b2a8:	bne	1b2c0 <__assert_fail@plt+0xa2a8>
   1b2ac:	cmp	r1, #0
   1b2b0:	cmpeq	r0, #0
   1b2b4:	mvnne	r1, #0
   1b2b8:	mvnne	r0, #0
   1b2bc:	b	1b2dc <__assert_fail@plt+0xa2c4>
   1b2c0:	sub	sp, sp, #8
   1b2c4:	push	{sp, lr}
   1b2c8:	bl	1b2ec <__assert_fail@plt+0xa2d4>
   1b2cc:	ldr	lr, [sp, #4]
   1b2d0:	add	sp, sp, #8
   1b2d4:	pop	{r2, r3}
   1b2d8:	bx	lr
   1b2dc:	push	{r1, lr}
   1b2e0:	mov	r0, #8
   1b2e4:	bl	10dd8 <raise@plt>
   1b2e8:	pop	{r1, pc}
   1b2ec:	cmp	r1, r3
   1b2f0:	cmpeq	r0, r2
   1b2f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2f8:	mov	r4, r0
   1b2fc:	movcc	r0, #0
   1b300:	mov	r5, r1
   1b304:	ldr	lr, [sp, #36]	; 0x24
   1b308:	movcc	r1, r0
   1b30c:	bcc	1b408 <__assert_fail@plt+0xa3f0>
   1b310:	cmp	r3, #0
   1b314:	clzeq	ip, r2
   1b318:	clzne	ip, r3
   1b31c:	addeq	ip, ip, #32
   1b320:	cmp	r5, #0
   1b324:	clzeq	r1, r4
   1b328:	addeq	r1, r1, #32
   1b32c:	clzne	r1, r5
   1b330:	sub	ip, ip, r1
   1b334:	sub	sl, ip, #32
   1b338:	lsl	r9, r3, ip
   1b33c:	rsb	fp, ip, #32
   1b340:	orr	r9, r9, r2, lsl sl
   1b344:	orr	r9, r9, r2, lsr fp
   1b348:	lsl	r8, r2, ip
   1b34c:	cmp	r5, r9
   1b350:	cmpeq	r4, r8
   1b354:	movcc	r0, #0
   1b358:	movcc	r1, r0
   1b35c:	bcc	1b378 <__assert_fail@plt+0xa360>
   1b360:	mov	r0, #1
   1b364:	subs	r4, r4, r8
   1b368:	lsl	r1, r0, sl
   1b36c:	orr	r1, r1, r0, lsr fp
   1b370:	lsl	r0, r0, ip
   1b374:	sbc	r5, r5, r9
   1b378:	cmp	ip, #0
   1b37c:	beq	1b408 <__assert_fail@plt+0xa3f0>
   1b380:	lsr	r6, r8, #1
   1b384:	orr	r6, r6, r9, lsl #31
   1b388:	lsr	r7, r9, #1
   1b38c:	mov	r2, ip
   1b390:	b	1b3b4 <__assert_fail@plt+0xa39c>
   1b394:	subs	r3, r4, r6
   1b398:	sbc	r8, r5, r7
   1b39c:	adds	r3, r3, r3
   1b3a0:	adc	r8, r8, r8
   1b3a4:	adds	r4, r3, #1
   1b3a8:	adc	r5, r8, #0
   1b3ac:	subs	r2, r2, #1
   1b3b0:	beq	1b3d0 <__assert_fail@plt+0xa3b8>
   1b3b4:	cmp	r5, r7
   1b3b8:	cmpeq	r4, r6
   1b3bc:	bcs	1b394 <__assert_fail@plt+0xa37c>
   1b3c0:	adds	r4, r4, r4
   1b3c4:	adc	r5, r5, r5
   1b3c8:	subs	r2, r2, #1
   1b3cc:	bne	1b3b4 <__assert_fail@plt+0xa39c>
   1b3d0:	lsr	r3, r4, ip
   1b3d4:	orr	r3, r3, r5, lsl fp
   1b3d8:	lsr	r2, r5, ip
   1b3dc:	orr	r3, r3, r5, lsr sl
   1b3e0:	adds	r0, r0, r4
   1b3e4:	mov	r4, r3
   1b3e8:	lsl	r3, r2, ip
   1b3ec:	orr	r3, r3, r4, lsl sl
   1b3f0:	lsl	ip, r4, ip
   1b3f4:	orr	r3, r3, r4, lsr fp
   1b3f8:	adc	r1, r1, r5
   1b3fc:	subs	r0, r0, ip
   1b400:	mov	r5, r2
   1b404:	sbc	r1, r1, r3
   1b408:	cmp	lr, #0
   1b40c:	strdne	r4, [lr]
   1b410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b414:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b418:	mov	r7, r0
   1b41c:	ldr	r6, [pc, #72]	; 1b46c <__assert_fail@plt+0xa454>
   1b420:	ldr	r5, [pc, #72]	; 1b470 <__assert_fail@plt+0xa458>
   1b424:	add	r6, pc, r6
   1b428:	add	r5, pc, r5
   1b42c:	sub	r6, r6, r5
   1b430:	mov	r8, r1
   1b434:	mov	r9, r2
   1b438:	bl	10da0 <calloc@plt-0x20>
   1b43c:	asrs	r6, r6, #2
   1b440:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b444:	mov	r4, #0
   1b448:	add	r4, r4, #1
   1b44c:	ldr	r3, [r5], #4
   1b450:	mov	r2, r9
   1b454:	mov	r1, r8
   1b458:	mov	r0, r7
   1b45c:	blx	r3
   1b460:	cmp	r6, r4
   1b464:	bne	1b448 <__assert_fail@plt+0xa430>
   1b468:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b46c:	andeq	r0, r1, r0, ror #21
   1b470:	ldrdeq	r0, [r1], -r8
   1b474:	bx	lr
   1b478:	ldr	r3, [pc, #12]	; 1b48c <__assert_fail@plt+0xa474>
   1b47c:	mov	r1, #0
   1b480:	add	r3, pc, r3
   1b484:	ldr	r2, [r3]
   1b488:	b	10f7c <__cxa_atexit@plt>
   1b48c:	andeq	r0, r1, r8, asr ip

Disassembly of section .fini:

0001b490 <.fini>:
   1b490:	push	{r3, lr}
   1b494:	pop	{r3, pc}
