
../repos/inetutils/src/rsh:     file format elf32-littlearm


Disassembly of section .init:

00010fcc <.init>:
   10fcc:	push	{r3, lr}
   10fd0:	bl	1179c <putc_unlocked@plt+0x4bc>
   10fd4:	pop	{r3, pc}

Disassembly of section .plt:

00010fd8 <fputs_unlocked@plt-0x14>:
   10fd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10fdc:	ldr	lr, [pc, #4]	; 10fe8 <fputs_unlocked@plt-0x4>
   10fe0:	add	lr, pc, lr
   10fe4:	ldr	pc, [lr, #8]!
   10fe8:	andeq	r7, r1, r8, lsl r0

00010fec <fputs_unlocked@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #24]!

00010ff8 <strcmp@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #16]!

00011004 <getpwuid@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #8]!

00011010 <setsockopt@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #0]!

0001101c <printf@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #90112	; 0x16000
   11024:	ldr	pc, [ip, #4088]!	; 0xff8

00011028 <read@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #90112	; 0x16000
   11030:	ldr	pc, [ip, #4080]!	; 0xff0

00011034 <getuid@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #90112	; 0x16000
   1103c:	ldr	pc, [ip, #4072]!	; 0xfe8

00011040 <sigprocmask@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #90112	; 0x16000
   11048:	ldr	pc, [ip, #4064]!	; 0xfe0

0001104c <memmove@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #90112	; 0x16000
   11054:	ldr	pc, [ip, #4056]!	; 0xfd8

00011058 <strchrnul@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #90112	; 0x16000
   11060:	ldr	pc, [ip, #4048]!	; 0xfd0

00011064 <free@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #90112	; 0x16000
   1106c:	ldr	pc, [ip, #4040]!	; 0xfc8

00011070 <strndup@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #90112	; 0x16000
   11078:	ldr	pc, [ip, #4032]!	; 0xfc0

0001107c <memcpy@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #90112	; 0x16000
   11084:	ldr	pc, [ip, #4024]!	; 0xfb8

00011088 <signal@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #90112	; 0x16000
   11090:	ldr	pc, [ip, #4016]!	; 0xfb0

00011094 <fwrite_unlocked@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #90112	; 0x16000
   1109c:	ldr	pc, [ip, #4008]!	; 0xfa8

000110a0 <select@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #90112	; 0x16000
   110a8:	ldr	pc, [ip, #4000]!	; 0xfa0

000110ac <sleep@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #90112	; 0x16000
   110b4:	ldr	pc, [ip, #3992]!	; 0xf98

000110b8 <realloc@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #90112	; 0x16000
   110c0:	ldr	pc, [ip, #3984]!	; 0xf90

000110c4 <strcasecmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #90112	; 0x16000
   110cc:	ldr	pc, [ip, #3976]!	; 0xf88

000110d0 <funlockfile@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #90112	; 0x16000
   110d8:	ldr	pc, [ip, #3968]!	; 0xf80

000110dc <seteuid@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #90112	; 0x16000
   110e4:	ldr	pc, [ip, #3960]!	; 0xf78

000110e8 <sigaction@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #90112	; 0x16000
   110f0:	ldr	pc, [ip, #3952]!	; 0xf70

000110f4 <ioctl@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #90112	; 0x16000
   110fc:	ldr	pc, [ip, #3944]!	; 0xf68

00011100 <strcpy@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #90112	; 0x16000
   11108:	ldr	pc, [ip, #3936]!	; 0xf60

0001110c <error@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #90112	; 0x16000
   11114:	ldr	pc, [ip, #3928]!	; 0xf58

00011118 <getenv@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #90112	; 0x16000
   11120:	ldr	pc, [ip, #3920]!	; 0xf50

00011124 <malloc@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #90112	; 0x16000
   1112c:	ldr	pc, [ip, #3912]!	; 0xf48

00011130 <sigaddset@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #90112	; 0x16000
   11138:	ldr	pc, [ip, #3904]!	; 0xf40

0001113c <__libc_start_main@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #90112	; 0x16000
   11144:	ldr	pc, [ip, #3896]!	; 0xf38

00011148 <strerror@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #90112	; 0x16000
   11150:	ldr	pc, [ip, #3888]!	; 0xf30

00011154 <__ctype_tolower_loc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #90112	; 0x16000
   1115c:	ldr	pc, [ip, #3880]!	; 0xf28

00011160 <__gmon_start__@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #90112	; 0x16000
   11168:	ldr	pc, [ip, #3872]!	; 0xf20

0001116c <rcmd_af@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #90112	; 0x16000
   11174:	ldr	pc, [ip, #3864]!	; 0xf18

00011178 <mempcpy@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #90112	; 0x16000
   11180:	ldr	pc, [ip, #3856]!	; 0xf10

00011184 <kill@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #90112	; 0x16000
   1118c:	ldr	pc, [ip, #3848]!	; 0xf08

00011190 <__ctype_b_loc@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #90112	; 0x16000
   11198:	ldr	pc, [ip, #3840]!	; 0xf00

0001119c <exit@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #90112	; 0x16000
   111a4:	ldr	pc, [ip, #3832]!	; 0xef8

000111a8 <strlen@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #90112	; 0x16000
   111b0:	ldr	pc, [ip, #3824]!	; 0xef0

000111b4 <strchr@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #90112	; 0x16000
   111bc:	ldr	pc, [ip, #3816]!	; 0xee8

000111c0 <fprintf@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #90112	; 0x16000
   111c8:	ldr	pc, [ip, #3808]!	; 0xee0

000111cc <execv@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #90112	; 0x16000
   111d4:	ldr	pc, [ip, #3800]!	; 0xed8

000111d8 <__errno_location@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #90112	; 0x16000
   111e0:	ldr	pc, [ip, #3792]!	; 0xed0

000111e4 <getservbyname@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #90112	; 0x16000
   111ec:	ldr	pc, [ip, #3784]!	; 0xec8

000111f0 <strerror_r@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #90112	; 0x16000
   111f8:	ldr	pc, [ip, #3776]!	; 0xec0

000111fc <memset@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #90112	; 0x16000
   11204:	ldr	pc, [ip, #3768]!	; 0xeb8

00011208 <write@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #90112	; 0x16000
   11210:	ldr	pc, [ip, #3760]!	; 0xeb0

00011214 <memchr@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #90112	; 0x16000
   1121c:	ldr	pc, [ip, #3752]!	; 0xea8

00011220 <shutdown@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #90112	; 0x16000
   11228:	ldr	pc, [ip, #3744]!	; 0xea0

0001122c <sigemptyset@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #90112	; 0x16000
   11234:	ldr	pc, [ip, #3736]!	; 0xe98

00011238 <fork@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #90112	; 0x16000
   11240:	ldr	pc, [ip, #3728]!	; 0xe90

00011244 <strrchr@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #90112	; 0x16000
   1124c:	ldr	pc, [ip, #3720]!	; 0xe88

00011250 <vfprintf@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #90112	; 0x16000
   11258:	ldr	pc, [ip, #3712]!	; 0xe80

0001125c <fputc@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #90112	; 0x16000
   11264:	ldr	pc, [ip, #3704]!	; 0xe78

00011268 <setuid@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #90112	; 0x16000
   11270:	ldr	pc, [ip, #3696]!	; 0xe70

00011274 <flockfile@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #90112	; 0x16000
   1127c:	ldr	pc, [ip, #3688]!	; 0xe68

00011280 <vsnprintf@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #90112	; 0x16000
   11288:	ldr	pc, [ip, #3680]!	; 0xe60

0001128c <atoi@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #90112	; 0x16000
   11294:	ldr	pc, [ip, #3672]!	; 0xe58

00011298 <qsort@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #90112	; 0x16000
   112a0:	ldr	pc, [ip, #3664]!	; 0xe50

000112a4 <fputs@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #90112	; 0x16000
   112ac:	ldr	pc, [ip, #3656]!	; 0xe48

000112b0 <strncmp@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #90112	; 0x16000
   112b8:	ldr	pc, [ip, #3648]!	; 0xe40

000112bc <abort@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #90112	; 0x16000
   112c4:	ldr	pc, [ip, #3640]!	; 0xe38

000112c8 <close@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #90112	; 0x16000
   112d0:	ldr	pc, [ip, #3632]!	; 0xe30

000112d4 <__assert_fail@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #90112	; 0x16000
   112dc:	ldr	pc, [ip, #3624]!	; 0xe28

000112e0 <putc_unlocked@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #90112	; 0x16000
   112e8:	ldr	pc, [ip, #3616]!	; 0xe20

Disassembly of section .text:

000112ec <argp_parse@@Base-0x106c>:
   112ec:	push	{r4, r5, r6, r7, r8, lr}
   112f0:	mov	r5, r1
   112f4:	ldr	r4, [pc, #1036]	; 11708 <putc_unlocked@plt+0x428>
   112f8:	sub	sp, sp, #288	; 0x120
   112fc:	mov	r7, r0
   11300:	ldr	r0, [r1]
   11304:	bl	12f14 <argp_parse@@Base+0xbbc>
   11308:	mov	r3, #0
   1130c:	str	r3, [r4, #8]
   11310:	ldr	r6, [r5]
   11314:	mov	r1, #47	; 0x2f
   11318:	mov	r0, r6
   1131c:	str	r3, [sp, #24]
   11320:	bl	11244 <strrchr@plt>
   11324:	ldr	r1, [pc, #992]	; 1170c <putc_unlocked@plt+0x42c>
   11328:	cmp	r0, #0
   1132c:	addne	r6, r0, #1
   11330:	mov	r0, r6
   11334:	bl	10ff8 <strcmp@plt>
   11338:	ldr	r3, [pc, #976]	; 11710 <putc_unlocked@plt+0x430>
   1133c:	ldr	r2, [pc, #976]	; 11714 <putc_unlocked@plt+0x434>
   11340:	ldr	r1, [pc, #976]	; 11718 <putc_unlocked@plt+0x438>
   11344:	str	r2, [r3]
   11348:	cmp	r0, #0
   1134c:	ldr	r0, [pc, #952]	; 1170c <putc_unlocked@plt+0x42c>
   11350:	strne	r6, [sp, #24]
   11354:	moveq	r6, #1
   11358:	movne	r6, #0
   1135c:	bl	12d40 <argp_parse@@Base+0x9e8>
   11360:	mov	r3, #0
   11364:	str	r3, [sp, #4]
   11368:	add	r3, sp, #20
   1136c:	mov	r2, r5
   11370:	str	r3, [sp]
   11374:	mov	r1, r7
   11378:	mov	r3, #8
   1137c:	ldr	r0, [pc, #920]	; 1171c <putc_unlocked@plt+0x43c>
   11380:	bl	12358 <argp_parse@@Base>
   11384:	ldr	r3, [sp, #20]
   11388:	cmp	r7, r3
   1138c:	addgt	r2, r3, #1
   11390:	ldrgt	r3, [r5, r3, lsl #2]
   11394:	strgt	r3, [sp, #24]
   11398:	ldr	r1, [sp, #24]
   1139c:	strgt	r2, [sp, #20]
   113a0:	cmp	r1, #0
   113a4:	bne	113b4 <putc_unlocked@plt+0xd4>
   113a8:	ldr	r2, [pc, #880]	; 11720 <putc_unlocked@plt+0x440>
   113ac:	mov	r0, #1
   113b0:	bl	1110c <error@plt>
   113b4:	ldr	r3, [sp, #20]
   113b8:	ldr	r3, [r5, r3, lsl #2]
   113bc:	cmp	r3, #0
   113c0:	bne	11404 <putc_unlocked@plt+0x124>
   113c4:	cmp	r6, #0
   113c8:	ldrne	r3, [pc, #852]	; 11724 <putc_unlocked@plt+0x444>
   113cc:	strne	r3, [r5]
   113d0:	bl	11034 <getuid@plt>
   113d4:	bl	110dc <seteuid@plt>
   113d8:	bl	11034 <getuid@plt>
   113dc:	bl	11268 <setuid@plt>
   113e0:	mov	r1, r5
   113e4:	ldr	r0, [pc, #828]	; 11728 <putc_unlocked@plt+0x448>
   113e8:	bl	111cc <execv@plt>
   113ec:	bl	111d8 <__errno_location@plt>
   113f0:	ldr	r3, [pc, #816]	; 11728 <putc_unlocked@plt+0x448>
   113f4:	ldr	r2, [pc, #816]	; 1172c <putc_unlocked@plt+0x44c>
   113f8:	ldr	r1, [r0]
   113fc:	mov	r0, #1
   11400:	bl	1110c <error@plt>
   11404:	ldr	r3, [sp, #20]
   11408:	add	r5, r5, r3, lsl #2
   1140c:	bl	11034 <getuid@plt>
   11410:	mov	r6, r0
   11414:	bl	11004 <getpwuid@plt>
   11418:	subs	r7, r0, #0
   1141c:	bne	11430 <putc_unlocked@plt+0x150>
   11420:	ldr	r2, [pc, #776]	; 11730 <putc_unlocked@plt+0x450>
   11424:	mov	r1, r7
   11428:	mov	r0, #1
   1142c:	bl	1110c <error@plt>
   11430:	mov	r1, #64	; 0x40
   11434:	ldr	r0, [sp, #24]
   11438:	bl	111b4 <strchr@plt>
   1143c:	cmp	r0, #0
   11440:	beq	11484 <putc_unlocked@plt+0x1a4>
   11444:	mov	r3, #0
   11448:	strb	r3, [r0]
   1144c:	ldr	r3, [r4, #8]
   11450:	cmp	r3, #0
   11454:	bne	11464 <putc_unlocked@plt+0x184>
   11458:	ldr	r3, [sp, #24]
   1145c:	cmp	r0, r3
   11460:	strhi	r3, [r4, #8]
   11464:	add	r3, r0, #1
   11468:	str	r3, [sp, #24]
   1146c:	ldrb	r1, [r0, #1]
   11470:	cmp	r1, #0
   11474:	bne	11484 <putc_unlocked@plt+0x1a4>
   11478:	ldr	r2, [pc, #692]	; 11734 <putc_unlocked@plt+0x454>
   1147c:	mov	r0, #1
   11480:	bl	1110c <error@plt>
   11484:	mov	r0, r5
   11488:	bl	11d74 <putc_unlocked@plt+0xa94>
   1148c:	ldr	r1, [pc, #676]	; 11738 <putc_unlocked@plt+0x458>
   11490:	mov	r8, r0
   11494:	ldr	r0, [pc, #672]	; 1173c <putc_unlocked@plt+0x45c>
   11498:	bl	111e4 <getservbyname@plt>
   1149c:	subs	r5, r0, #0
   114a0:	bne	114b4 <putc_unlocked@plt+0x1d4>
   114a4:	ldr	r2, [pc, #660]	; 11740 <putc_unlocked@plt+0x460>
   114a8:	mov	r1, r5
   114ac:	mov	r0, #1
   114b0:	bl	1110c <error@plt>
   114b4:	ldr	r3, [r4, #8]
   114b8:	ldrh	r1, [r5, #8]
   114bc:	cmp	r3, #0
   114c0:	ldr	r5, [pc, #636]	; 11744 <putc_unlocked@plt+0x464>
   114c4:	ldreq	r3, [r7]
   114c8:	add	r0, sp, #24
   114cc:	streq	r3, [r4, #8]
   114d0:	ldrh	r3, [r4]
   114d4:	str	r8, [sp]
   114d8:	str	r5, [sp, #4]
   114dc:	str	r3, [sp, #8]
   114e0:	ldr	r3, [r4, #8]
   114e4:	ldr	r2, [r7]
   114e8:	bl	1116c <rcmd_af@plt>
   114ec:	subs	r8, r0, #0
   114f0:	bge	1151c <putc_unlocked@plt+0x23c>
   114f4:	bl	111d8 <__errno_location@plt>
   114f8:	ldr	r3, [r0]
   114fc:	cmp	r3, #13
   11500:	bne	11514 <putc_unlocked@plt+0x234>
   11504:	ldr	r2, [pc, #572]	; 11748 <putc_unlocked@plt+0x468>
   11508:	mov	r1, #0
   1150c:	mov	r0, #1
   11510:	bl	1110c <error@plt>
   11514:	mov	r0, #1
   11518:	bl	1119c <exit@plt>
   1151c:	ldr	r3, [r5]
   11520:	cmp	r3, #0
   11524:	bge	11538 <putc_unlocked@plt+0x258>
   11528:	ldr	r2, [pc, #540]	; 1174c <putc_unlocked@plt+0x46c>
   1152c:	mov	r1, #0
   11530:	mov	r0, #1
   11534:	bl	1110c <error@plt>
   11538:	ldr	r3, [r4, #4]
   1153c:	cmp	r3, #0
   11540:	beq	115b8 <putc_unlocked@plt+0x2d8>
   11544:	mov	r2, #1
   11548:	mov	r3, #4
   1154c:	str	r3, [sp]
   11550:	mov	r1, r2
   11554:	add	r3, sp, #160	; 0xa0
   11558:	mov	r0, r8
   1155c:	str	r2, [sp, #160]	; 0xa0
   11560:	bl	11010 <setsockopt@plt>
   11564:	cmp	r0, #0
   11568:	bge	11580 <putc_unlocked@plt+0x2a0>
   1156c:	bl	111d8 <__errno_location@plt>
   11570:	ldr	r2, [pc, #472]	; 11750 <putc_unlocked@plt+0x470>
   11574:	ldr	r1, [r0]
   11578:	mov	r0, #0
   1157c:	bl	1110c <error@plt>
   11580:	mov	r3, #4
   11584:	mov	r2, #1
   11588:	str	r3, [sp]
   1158c:	mov	r1, r2
   11590:	add	r3, sp, #160	; 0xa0
   11594:	ldr	r0, [r5]
   11598:	bl	11010 <setsockopt@plt>
   1159c:	cmp	r0, #0
   115a0:	bge	115b8 <putc_unlocked@plt+0x2d8>
   115a4:	bl	111d8 <__errno_location@plt>
   115a8:	ldr	r2, [pc, #416]	; 11750 <putc_unlocked@plt+0x470>
   115ac:	ldr	r1, [r0]
   115b0:	mov	r0, #0
   115b4:	bl	1110c <error@plt>
   115b8:	mov	r0, r6
   115bc:	bl	110dc <seteuid@plt>
   115c0:	mov	r0, r6
   115c4:	bl	11268 <setuid@plt>
   115c8:	add	r0, sp, #32
   115cc:	bl	1122c <sigemptyset@plt>
   115d0:	mov	r1, #2
   115d4:	add	r0, sp, #32
   115d8:	bl	11130 <sigaddset@plt>
   115dc:	mov	r1, #3
   115e0:	add	r0, sp, #32
   115e4:	bl	11130 <sigaddset@plt>
   115e8:	mov	r1, #15
   115ec:	add	r0, sp, #32
   115f0:	bl	11130 <sigaddset@plt>
   115f4:	add	r2, sp, #160	; 0xa0
   115f8:	add	r1, sp, #32
   115fc:	mov	r0, #0
   11600:	bl	11040 <sigprocmask@plt>
   11604:	mov	r1, #1
   11608:	mov	r0, #2
   1160c:	bl	11088 <signal@plt>
   11610:	cmp	r0, #1
   11614:	beq	11624 <putc_unlocked@plt+0x344>
   11618:	ldr	r1, [pc, #308]	; 11754 <putc_unlocked@plt+0x474>
   1161c:	mov	r0, #2
   11620:	bl	11088 <signal@plt>
   11624:	mov	r1, #1
   11628:	mov	r0, #3
   1162c:	bl	11088 <signal@plt>
   11630:	cmp	r0, #1
   11634:	beq	11644 <putc_unlocked@plt+0x364>
   11638:	ldr	r1, [pc, #276]	; 11754 <putc_unlocked@plt+0x474>
   1163c:	mov	r0, #3
   11640:	bl	11088 <signal@plt>
   11644:	mov	r1, #1
   11648:	mov	r0, #15
   1164c:	bl	11088 <signal@plt>
   11650:	cmp	r0, #1
   11654:	beq	11664 <putc_unlocked@plt+0x384>
   11658:	ldr	r1, [pc, #244]	; 11754 <putc_unlocked@plt+0x474>
   1165c:	mov	r0, #15
   11660:	bl	11088 <signal@plt>
   11664:	ldr	r3, [r4, #12]
   11668:	cmp	r3, #0
   1166c:	beq	116e4 <putc_unlocked@plt+0x404>
   11670:	mov	r1, #1
   11674:	mov	r0, r8
   11678:	bl	11220 <shutdown@plt>
   1167c:	mov	r7, #0
   11680:	add	r6, sp, #288	; 0x120
   11684:	mov	r3, #1
   11688:	str	r3, [r6, #-260]!	; 0xfffffefc
   1168c:	ldr	r1, [pc, #196]	; 11758 <putc_unlocked@plt+0x478>
   11690:	mov	r2, r6
   11694:	ldr	r0, [r5]
   11698:	bl	12ee8 <argp_parse@@Base+0xb90>
   1169c:	mov	r2, r6
   116a0:	ldr	r1, [pc, #176]	; 11758 <putc_unlocked@plt+0x478>
   116a4:	mov	r0, r8
   116a8:	bl	12ee8 <argp_parse@@Base+0xb90>
   116ac:	mov	r3, r8
   116b0:	mov	r2, r7
   116b4:	add	r1, sp, #160	; 0xa0
   116b8:	ldr	r0, [r4, #12]
   116bc:	bl	11970 <putc_unlocked@plt+0x690>
   116c0:	ldr	r3, [r4, #12]
   116c4:	cmp	r3, #0
   116c8:	bne	116d8 <putc_unlocked@plt+0x3f8>
   116cc:	mov	r1, #9
   116d0:	mov	r0, r7
   116d4:	bl	11184 <kill@plt>
   116d8:	mov	r0, #0
   116dc:	add	sp, sp, #288	; 0x120
   116e0:	pop	{r4, r5, r6, r7, r8, pc}
   116e4:	bl	11238 <fork@plt>
   116e8:	subs	r7, r0, #0
   116ec:	bge	11680 <putc_unlocked@plt+0x3a0>
   116f0:	bl	111d8 <__errno_location@plt>
   116f4:	ldr	r2, [pc, #96]	; 1175c <putc_unlocked@plt+0x47c>
   116f8:	ldr	r1, [r0]
   116fc:	mov	r0, #1
   11700:	bl	1110c <error@plt>
   11704:	b	11680 <putc_unlocked@plt+0x3a0>
   11708:	andeq	r8, r2, ip, asr #4
   1170c:	andeq	r7, r1, r0, asr #4
   11710:	muleq	r2, ip, r2
   11714:	andeq	r7, r1, r4, asr #4
   11718:	strdeq	r8, [r2], -r4
   1171c:	andeq	r8, r2, r8, lsl r1
   11720:	andeq	r7, r1, ip, asr r2
   11724:	andeq	r7, r1, lr, ror r2
   11728:	andeq	r7, r1, pc, ror #4
   1172c:	andeq	r7, r1, r5, lsl #5
   11730:	muleq	r1, r7, r2
   11734:	andeq	r7, r1, r7, lsr #5
   11738:			; <UNDEFINED> instruction: 0x000172b7
   1173c:			; <UNDEFINED> instruction: 0x000172bb
   11740:	andeq	r7, r1, r1, asr #5
   11744:	muleq	r2, r8, r2
   11748:	ldrdeq	r7, [r1], -ip
   1174c:	strdeq	r7, [r1], -fp
   11750:	andeq	r7, r1, r2, lsl r3
   11754:	andeq	r1, r1, r8, asr #18
   11758:	andeq	r5, r0, r1, lsr #8
   1175c:	andeq	r7, r1, sp, lsr #6
   11760:	mov	fp, #0
   11764:	mov	lr, #0
   11768:	pop	{r1}		; (ldr r1, [sp], #4)
   1176c:	mov	r2, sp
   11770:	push	{r2}		; (str r2, [sp, #-4]!)
   11774:	push	{r0}		; (str r0, [sp, #-4]!)
   11778:	ldr	ip, [pc, #16]	; 11790 <putc_unlocked@plt+0x4b0>
   1177c:	push	{ip}		; (str ip, [sp, #-4]!)
   11780:	ldr	r0, [pc, #12]	; 11794 <putc_unlocked@plt+0x4b4>
   11784:	ldr	r3, [pc, #12]	; 11798 <putc_unlocked@plt+0x4b8>
   11788:	bl	1113c <__libc_start_main@plt>
   1178c:	bl	112bc <abort@plt>
   11790:	strdeq	r7, [r1], -r4
   11794:	andeq	r1, r1, ip, ror #5
   11798:	muleq	r1, r4, r1
   1179c:	ldr	r3, [pc, #20]	; 117b8 <putc_unlocked@plt+0x4d8>
   117a0:	ldr	r2, [pc, #20]	; 117bc <putc_unlocked@plt+0x4dc>
   117a4:	add	r3, pc, r3
   117a8:	ldr	r2, [r3, r2]
   117ac:	cmp	r2, #0
   117b0:	bxeq	lr
   117b4:	b	11160 <__gmon_start__@plt>
   117b8:	andeq	r6, r1, r4, asr r8
   117bc:	andeq	r0, r0, ip, lsl #2
   117c0:	ldr	r3, [pc, #28]	; 117e4 <putc_unlocked@plt+0x504>
   117c4:	ldr	r0, [pc, #28]	; 117e8 <putc_unlocked@plt+0x508>
   117c8:	sub	r3, r3, r0
   117cc:	cmp	r3, #6
   117d0:	bxls	lr
   117d4:	ldr	r3, [pc, #16]	; 117ec <putc_unlocked@plt+0x50c>
   117d8:	cmp	r3, #0
   117dc:	bxeq	lr
   117e0:	bx	r3
   117e4:	andeq	r8, r2, r7, lsr r2
   117e8:	andeq	r8, r2, r4, lsr r2
   117ec:	andeq	r0, r0, r0
   117f0:	ldr	r1, [pc, #36]	; 1181c <putc_unlocked@plt+0x53c>
   117f4:	ldr	r0, [pc, #36]	; 11820 <putc_unlocked@plt+0x540>
   117f8:	sub	r1, r1, r0
   117fc:	asr	r1, r1, #2
   11800:	add	r1, r1, r1, lsr #31
   11804:	asrs	r1, r1, #1
   11808:	bxeq	lr
   1180c:	ldr	r3, [pc, #16]	; 11824 <putc_unlocked@plt+0x544>
   11810:	cmp	r3, #0
   11814:	bxeq	lr
   11818:	bx	r3
   1181c:	andeq	r8, r2, r4, lsr r2
   11820:	andeq	r8, r2, r4, lsr r2
   11824:	andeq	r0, r0, r0
   11828:	push	{r4, lr}
   1182c:	ldr	r4, [pc, #24]	; 1184c <putc_unlocked@plt+0x56c>
   11830:	ldrb	r3, [r4]
   11834:	cmp	r3, #0
   11838:	popne	{r4, pc}
   1183c:	bl	117c0 <putc_unlocked@plt+0x4e0>
   11840:	mov	r3, #1
   11844:	strb	r3, [r4]
   11848:	pop	{r4, pc}
   1184c:	andeq	r8, r2, r8, asr #4
   11850:	ldr	r0, [pc, #40]	; 11880 <putc_unlocked@plt+0x5a0>
   11854:	ldr	r3, [r0]
   11858:	cmp	r3, #0
   1185c:	bne	11864 <putc_unlocked@plt+0x584>
   11860:	b	117f0 <putc_unlocked@plt+0x510>
   11864:	ldr	r3, [pc, #24]	; 11884 <putc_unlocked@plt+0x5a4>
   11868:	cmp	r3, #0
   1186c:	beq	11860 <putc_unlocked@plt+0x580>
   11870:	push	{r4, lr}
   11874:	blx	r3
   11878:	pop	{r4, lr}
   1187c:	b	117f0 <putc_unlocked@plt+0x510>
   11880:	andeq	r7, r2, ip, lsl #30
   11884:	andeq	r0, r0, r0
   11888:	cmp	r0, #100	; 0x64
   1188c:	beq	11900 <putc_unlocked@plt+0x620>
   11890:	bgt	118cc <putc_unlocked@plt+0x5ec>
   11894:	cmp	r0, #54	; 0x36
   11898:	beq	118f0 <putc_unlocked@plt+0x610>
   1189c:	bgt	118b4 <putc_unlocked@plt+0x5d4>
   118a0:	cmp	r0, #52	; 0x34
   118a4:	moveq	r2, #2
   118a8:	beq	118f4 <putc_unlocked@plt+0x614>
   118ac:	mov	r0, #7
   118b0:	bx	lr
   118b4:	cmp	r0, #56	; 0x38
   118b8:	beq	118c4 <putc_unlocked@plt+0x5e4>
   118bc:	cmp	r0, #76	; 0x4c
   118c0:	bne	118ac <putc_unlocked@plt+0x5cc>
   118c4:	mov	r0, #0
   118c8:	bx	lr
   118cc:	cmp	r0, #108	; 0x6c
   118d0:	beq	11910 <putc_unlocked@plt+0x630>
   118d4:	bgt	118e0 <putc_unlocked@plt+0x600>
   118d8:	cmp	r0, #101	; 0x65
   118dc:	b	118c0 <putc_unlocked@plt+0x5e0>
   118e0:	cmp	r0, #110	; 0x6e
   118e4:	beq	1191c <putc_unlocked@plt+0x63c>
   118e8:	cmp	r0, #119	; 0x77
   118ec:	b	118c0 <putc_unlocked@plt+0x5e0>
   118f0:	mov	r2, #10
   118f4:	ldr	r3, [pc, #48]	; 1192c <putc_unlocked@plt+0x64c>
   118f8:	strh	r2, [r3]
   118fc:	b	118c4 <putc_unlocked@plt+0x5e4>
   11900:	ldr	r3, [pc, #36]	; 1192c <putc_unlocked@plt+0x64c>
   11904:	mov	r2, #1
   11908:	str	r2, [r3, #4]
   1190c:	b	118c4 <putc_unlocked@plt+0x5e4>
   11910:	ldr	r3, [pc, #20]	; 1192c <putc_unlocked@plt+0x64c>
   11914:	str	r1, [r3, #8]
   11918:	b	118c4 <putc_unlocked@plt+0x5e4>
   1191c:	ldr	r3, [pc, #8]	; 1192c <putc_unlocked@plt+0x64c>
   11920:	mov	r2, #1
   11924:	str	r2, [r3, #12]
   11928:	b	118c4 <putc_unlocked@plt+0x5e4>
   1192c:	andeq	r8, r2, ip, asr #4
   11930:	ldr	r2, [pc, #12]	; 11944 <putc_unlocked@plt+0x664>
   11934:	ldr	r3, [r2, #16]
   11938:	add	r3, r3, #1
   1193c:	str	r3, [r2, #16]
   11940:	bx	lr
   11944:	andeq	r8, r2, ip, asr #4
   11948:	ldr	r3, [pc, #28]	; 1196c <putc_unlocked@plt+0x68c>
   1194c:	push	{r0, r1, r2, lr}
   11950:	add	r1, sp, #8
   11954:	mov	r2, #1
   11958:	strb	r0, [r1, #-1]!
   1195c:	ldr	r0, [r3]
   11960:	bl	11208 <write@plt>
   11964:	add	sp, sp, #12
   11968:	pop	{pc}		; (ldr pc, [sp], #4)
   1196c:	muleq	r2, r8, r2
   11970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11974:	sub	sp, sp, #8576	; 0x2180
   11978:	cmp	r0, #0
   1197c:	cmpeq	r2, #0
   11980:	sub	sp, sp, #36	; 0x24
   11984:	mov	r4, r3
   11988:	moveq	r5, #1
   1198c:	movne	r5, #0
   11990:	add	r6, sp, #276	; 0x114
   11994:	bne	11ab8 <putc_unlocked@plt+0x7d8>
   11998:	ldr	r3, [pc, #964]	; 11d64 <putc_unlocked@plt+0xa84>
   1199c:	add	r5, r4, #31
   119a0:	mov	r7, #1
   119a4:	ldr	r0, [r3]
   119a8:	bl	112c8 <close@plt>
   119ac:	bl	111d8 <__errno_location@plt>
   119b0:	cmp	r4, #0
   119b4:	movge	r5, r4
   119b8:	rsbs	r2, r4, #0
   119bc:	and	r2, r2, #31
   119c0:	and	r3, r4, #31
   119c4:	rsbpl	r3, r2, #0
   119c8:	asr	r5, r5, #5
   119cc:	lsl	r7, r7, r3
   119d0:	add	r3, sp, #416	; 0x1a0
   119d4:	mov	r8, #0
   119d8:	add	r5, r3, r5, lsl #2
   119dc:	mov	sl, r0
   119e0:	str	r8, [sl]
   119e4:	mov	r2, #8192	; 0x2000
   119e8:	add	r1, sp, #416	; 0x1a0
   119ec:	mov	r0, #0
   119f0:	bl	11028 <read@plt>
   119f4:	subs	r9, r0, #0
   119f8:	ble	11a94 <putc_unlocked@plt+0x7b4>
   119fc:	add	fp, sp, #416	; 0x1a0
   11a00:	add	r3, r4, #1
   11a04:	str	r3, [sp, #12]
   11a08:	mov	r3, #0
   11a0c:	str	r8, [r6, r3, lsl #2]
   11a10:	add	r3, r3, #1
   11a14:	cmp	r3, #32
   11a18:	bne	11a0c <putc_unlocked@plt+0x72c>
   11a1c:	ldr	r3, [r5, #-140]	; 0xffffff74
   11a20:	mov	r2, r6
   11a24:	orr	r3, r3, r7
   11a28:	str	r3, [r5, #-140]	; 0xffffff74
   11a2c:	mov	r1, #0
   11a30:	str	r8, [sp]
   11a34:	mov	r3, r8
   11a38:	ldr	r0, [sp, #12]
   11a3c:	bl	110a0 <select@plt>
   11a40:	cmp	r0, #0
   11a44:	bge	11a64 <putc_unlocked@plt+0x784>
   11a48:	ldr	r1, [sl]
   11a4c:	cmp	r1, #4
   11a50:	beq	11a08 <putc_unlocked@plt+0x728>
   11a54:	ldr	r2, [pc, #780]	; 11d68 <putc_unlocked@plt+0xa88>
   11a58:	mov	r0, #1
   11a5c:	bl	1110c <error@plt>
   11a60:	b	11a08 <putc_unlocked@plt+0x728>
   11a64:	ldr	r3, [r5, #-140]	; 0xffffff74
   11a68:	tst	r7, r3
   11a6c:	beq	11a08 <putc_unlocked@plt+0x728>
   11a70:	mov	r2, r9
   11a74:	mov	r1, fp
   11a78:	mov	r0, r4
   11a7c:	bl	11208 <write@plt>
   11a80:	cmp	r0, #0
   11a84:	bge	11aa8 <putc_unlocked@plt+0x7c8>
   11a88:	ldr	r3, [sl]
   11a8c:	cmp	r3, #11
   11a90:	beq	11a08 <putc_unlocked@plt+0x728>
   11a94:	mov	r1, #1
   11a98:	mov	r0, r4
   11a9c:	bl	11220 <shutdown@plt>
   11aa0:	mov	r0, #0
   11aa4:	bl	1119c <exit@plt>
   11aa8:	subs	r9, r9, r0
   11aac:	add	fp, fp, r0
   11ab0:	bne	11a08 <putc_unlocked@plt+0x728>
   11ab4:	b	119e0 <putc_unlocked@plt+0x700>
   11ab8:	mov	r2, r5
   11abc:	mov	r0, #2
   11ac0:	bl	11040 <sigprocmask@plt>
   11ac4:	add	r0, r6, #4
   11ac8:	bl	1122c <sigemptyset@plt>
   11acc:	mov	r3, #268435456	; 0x10000000
   11ad0:	str	r3, [sp, #408]	; 0x198
   11ad4:	ldr	r3, [pc, #656]	; 11d6c <putc_unlocked@plt+0xa8c>
   11ad8:	mov	r2, r5
   11adc:	mov	r1, r6
   11ae0:	mov	r0, #13
   11ae4:	str	r3, [sp, #276]	; 0x114
   11ae8:	bl	110e8 <sigaction@plt>
   11aec:	mov	r2, r5
   11af0:	add	r3, sp, #20
   11af4:	mov	r1, r5
   11af8:	str	r1, [r3, r2, lsl #2]
   11afc:	add	r2, r2, #1
   11b00:	cmp	r2, #32
   11b04:	bne	11af8 <putc_unlocked@plt+0x818>
   11b08:	ldr	r8, [pc, #596]	; 11d64 <putc_unlocked@plt+0xa84>
   11b0c:	add	r1, sp, #416	; 0x1a0
   11b10:	mov	r6, #1
   11b14:	ldr	r3, [r8]
   11b18:	add	r5, r4, #31
   11b1c:	cmp	r3, #0
   11b20:	add	r2, r3, #31
   11b24:	movge	r2, r3
   11b28:	and	r7, r4, #31
   11b2c:	asr	r2, r2, #5
   11b30:	ldr	r9, [pc, #568]	; 11d70 <putc_unlocked@plt+0xa90>
   11b34:	add	r2, r1, r2, lsl #2
   11b38:	rsbs	r1, r3, #0
   11b3c:	and	r1, r1, #31
   11b40:	and	r3, r3, #31
   11b44:	rsbpl	r3, r1, #0
   11b48:	ldr	r1, [r2, #-396]	; 0xfffffe74
   11b4c:	cmp	r4, #0
   11b50:	orr	r3, r1, r6, lsl r3
   11b54:	movge	r5, r4
   11b58:	str	r3, [r2, #-396]	; 0xfffffe74
   11b5c:	asr	r5, r5, #5
   11b60:	rsbs	r3, r4, #0
   11b64:	and	r3, r3, #31
   11b68:	rsbpl	r7, r3, #0
   11b6c:	lsl	r5, r5, #2
   11b70:	add	r3, sp, #416	; 0x1a0
   11b74:	add	r2, r3, r5
   11b78:	lsl	r7, r6, r7
   11b7c:	ldr	r3, [r2, #-396]	; 0xfffffe74
   11b80:	orr	r3, r3, r7
   11b84:	str	r3, [r2, #-396]	; 0xfffffe74
   11b88:	ldr	r0, [r8]
   11b8c:	add	r3, sp, #416	; 0x1a0
   11b90:	cmp	r4, r0
   11b94:	movlt	fp, r0
   11b98:	movge	fp, r4
   11b9c:	mov	sl, #0
   11ba0:	mov	r2, #128	; 0x80
   11ba4:	add	r1, sp, #20
   11ba8:	sub	r0, r3, #268	; 0x10c
   11bac:	bl	1107c <memcpy@plt>
   11bb0:	str	sl, [sp]
   11bb4:	mov	r3, sl
   11bb8:	mov	r2, sl
   11bbc:	add	r1, sp, #148	; 0x94
   11bc0:	add	r0, fp, #1
   11bc4:	bl	110a0 <select@plt>
   11bc8:	cmp	r0, sl
   11bcc:	bge	11c50 <putc_unlocked@plt+0x970>
   11bd0:	bl	111d8 <__errno_location@plt>
   11bd4:	ldr	r1, [r0]
   11bd8:	cmp	r1, #4
   11bdc:	beq	11bec <putc_unlocked@plt+0x90c>
   11be0:	ldr	r2, [pc, #384]	; 11d68 <putc_unlocked@plt+0xa88>
   11be4:	mov	r0, r6
   11be8:	bl	1110c <error@plt>
   11bec:	ldr	r3, [r8]
   11bf0:	add	r1, sp, #416	; 0x1a0
   11bf4:	cmp	r3, #0
   11bf8:	add	r2, r3, #31
   11bfc:	movge	r2, r3
   11c00:	asr	r2, r2, #5
   11c04:	add	r2, r1, r2, lsl #2
   11c08:	rsbs	r1, r3, #0
   11c0c:	and	r1, r1, #31
   11c10:	and	r3, r3, #31
   11c14:	ldr	r2, [r2, #-396]	; 0xfffffe74
   11c18:	rsbpl	r3, r1, #0
   11c1c:	ands	r3, r2, r6, lsl r3
   11c20:	bne	11c38 <putc_unlocked@plt+0x958>
   11c24:	add	r3, sp, #416	; 0x1a0
   11c28:	add	r3, r3, r5
   11c2c:	ldr	r3, [r3, #-396]	; 0xfffffe74
   11c30:	tst	r7, r3
   11c34:	beq	11c44 <putc_unlocked@plt+0x964>
   11c38:	ldr	r3, [r9, #16]
   11c3c:	cmp	r3, #0
   11c40:	beq	11b88 <putc_unlocked@plt+0x8a8>
   11c44:	add	sp, sp, #8576	; 0x2180
   11c48:	add	sp, sp, #36	; 0x24
   11c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c50:	ldr	r3, [r8]
   11c54:	add	r1, sp, #416	; 0x1a0
   11c58:	cmp	r3, #0
   11c5c:	add	r2, r3, #31
   11c60:	movge	r2, r3
   11c64:	asr	r2, r2, #5
   11c68:	add	r2, r1, r2, lsl #2
   11c6c:	rsbs	r1, r3, #0
   11c70:	and	r1, r1, #31
   11c74:	and	r3, r3, #31
   11c78:	ldr	r2, [r2, #-268]	; 0xfffffef4
   11c7c:	rsbpl	r3, r1, #0
   11c80:	ands	r3, r2, r6, lsl r3
   11c84:	beq	11cf0 <putc_unlocked@plt+0xa10>
   11c88:	bl	111d8 <__errno_location@plt>
   11c8c:	mov	r2, #8192	; 0x2000
   11c90:	add	r1, sp, #416	; 0x1a0
   11c94:	str	sl, [r0]
   11c98:	mov	fp, r0
   11c9c:	ldr	r0, [r8]
   11ca0:	bl	11028 <read@plt>
   11ca4:	subs	r2, r0, #0
   11ca8:	bgt	11d44 <putc_unlocked@plt+0xa64>
   11cac:	ldr	r3, [fp]
   11cb0:	cmp	r3, #11
   11cb4:	beq	11cf0 <putc_unlocked@plt+0xa10>
   11cb8:	ldr	r3, [r8]
   11cbc:	add	r1, sp, #416	; 0x1a0
   11cc0:	cmp	r3, #0
   11cc4:	add	r2, r3, #31
   11cc8:	movge	r2, r3
   11ccc:	asr	r2, r2, #5
   11cd0:	add	r2, r1, r2, lsl #2
   11cd4:	rsbs	r1, r3, #0
   11cd8:	and	r1, r1, #31
   11cdc:	and	r3, r3, #31
   11ce0:	rsbpl	r3, r1, #0
   11ce4:	ldr	r1, [r2, #-396]	; 0xfffffe74
   11ce8:	bic	r3, r1, r6, lsl r3
   11cec:	str	r3, [r2, #-396]	; 0xfffffe74
   11cf0:	add	r3, sp, #416	; 0x1a0
   11cf4:	add	sl, r3, r5
   11cf8:	ldr	r3, [sl, #-268]	; 0xfffffef4
   11cfc:	tst	r7, r3
   11d00:	beq	11bec <putc_unlocked@plt+0x90c>
   11d04:	bl	111d8 <__errno_location@plt>
   11d08:	mov	r3, #0
   11d0c:	mov	r2, #8192	; 0x2000
   11d10:	add	r1, sp, #416	; 0x1a0
   11d14:	str	r3, [r0]
   11d18:	mov	fp, r0
   11d1c:	mov	r0, r4
   11d20:	bl	11028 <read@plt>
   11d24:	subs	r2, r0, #0
   11d28:	bgt	11d54 <putc_unlocked@plt+0xa74>
   11d2c:	ldr	r3, [fp]
   11d30:	cmp	r3, #11
   11d34:	ldrne	r3, [sl, #-396]	; 0xfffffe74
   11d38:	bicne	r3, r3, r7
   11d3c:	strne	r3, [sl, #-396]	; 0xfffffe74
   11d40:	b	11bec <putc_unlocked@plt+0x90c>
   11d44:	add	r1, sp, #416	; 0x1a0
   11d48:	mov	r0, #2
   11d4c:	bl	11208 <write@plt>
   11d50:	b	11cf0 <putc_unlocked@plt+0xa10>
   11d54:	add	r1, sp, #416	; 0x1a0
   11d58:	mov	r0, r6
   11d5c:	bl	11208 <write@plt>
   11d60:	b	11bec <putc_unlocked@plt+0x90c>
   11d64:	muleq	r2, r8, r2
   11d68:	andeq	r7, r1, r0, lsr r2
   11d6c:	andeq	r1, r1, r0, lsr r9
   11d70:	andeq	r8, r2, ip, asr #4
   11d74:	push	{r4, r5, r6, r7, r8, lr}
   11d78:	mov	r4, r0
   11d7c:	sub	r6, r0, #4
   11d80:	mov	r5, #0
   11d84:	ldr	r0, [r6, #4]!
   11d88:	cmp	r0, #0
   11d8c:	bne	11dd0 <putc_unlocked@plt+0xaf0>
   11d90:	mov	r0, r5
   11d94:	bl	133a0 <argp_parse@@Base+0x1048>
   11d98:	subs	r6, r0, #0
   11d9c:	bne	11db4 <putc_unlocked@plt+0xad4>
   11da0:	bl	111d8 <__errno_location@plt>
   11da4:	ldr	r2, [pc, #112]	; 11e1c <putc_unlocked@plt+0xb3c>
   11da8:	ldr	r1, [r0]
   11dac:	mov	r0, #1
   11db0:	bl	1110c <error@plt>
   11db4:	mov	r3, r6
   11db8:	mov	r7, #32
   11dbc:	ldr	r5, [r4], #4
   11dc0:	cmp	r5, #0
   11dc4:	bne	11de0 <putc_unlocked@plt+0xb00>
   11dc8:	mov	r0, r6
   11dcc:	pop	{r4, r5, r6, r7, r8, pc}
   11dd0:	bl	111a8 <strlen@plt>
   11dd4:	add	r5, r5, #1
   11dd8:	add	r5, r5, r0
   11ddc:	b	11d84 <putc_unlocked@plt+0xaa4>
   11de0:	mov	r1, r5
   11de4:	mov	r0, r3
   11de8:	bl	11100 <strcpy@plt>
   11dec:	mov	r1, r5
   11df0:	bl	11100 <strcpy@plt>
   11df4:	mov	r3, r0
   11df8:	add	r0, r0, #1
   11dfc:	ldrb	r2, [r3]
   11e00:	cmp	r2, #0
   11e04:	bne	11df4 <putc_unlocked@plt+0xb14>
   11e08:	ldr	r2, [r4]
   11e0c:	cmp	r2, #0
   11e10:	strbne	r7, [r3]
   11e14:	movne	r3, r0
   11e18:	b	11dbc <putc_unlocked@plt+0xadc>
   11e1c:	andeq	r7, r1, r7, lsr r2
   11e20:	push	{r4, r5, r6, lr}
   11e24:	ldr	r6, [r0]
   11e28:	cmp	r6, #0
   11e2c:	beq	11e78 <putc_unlocked@plt+0xb98>
   11e30:	mov	ip, r2
   11e34:	ldr	r2, [r0, #32]
   11e38:	mov	r5, r1
   11e3c:	str	r2, [r1, #36]	; 0x24
   11e40:	ldr	r2, [r0, #24]
   11e44:	mov	r4, r0
   11e48:	str	r2, [r1, #28]
   11e4c:	ldr	r2, [r0, #28]
   11e50:	str	r2, [r1, #32]
   11e54:	ldr	r2, [r0, #12]
   11e58:	mov	r0, ip
   11e5c:	str	r2, [r1, #20]
   11e60:	mov	r2, r1
   11e64:	mov	r1, r3
   11e68:	blx	r6
   11e6c:	ldr	r3, [r5, #36]	; 0x24
   11e70:	str	r3, [r4, #32]
   11e74:	pop	{r4, r5, r6, pc}
   11e78:	mov	r0, #7
   11e7c:	pop	{r4, r5, r6, pc}
   11e80:	ldr	r3, [r0]
   11e84:	push	{r4, r5, r6, lr}
   11e88:	cmp	r3, #0
   11e8c:	ldr	r4, [r0, #16]
   11e90:	bne	11ea0 <putc_unlocked@plt+0xbc0>
   11e94:	ldr	r2, [r0, #4]
   11e98:	cmp	r2, #0
   11e9c:	beq	11f08 <putc_unlocked@plt+0xc28>
   11ea0:	ldr	r2, [r1, #8]
   11ea4:	cmp	r3, #0
   11ea8:	add	r2, r2, #1
   11eac:	str	r2, [r1, #8]
   11eb0:	beq	11f08 <putc_unlocked@plt+0xc28>
   11eb4:	mov	r2, #0
   11eb8:	add	r3, r3, #24
   11ebc:	ldr	r0, [r3, #-20]	; 0xffffffec
   11ec0:	cmp	r0, #0
   11ec4:	bne	11f44 <putc_unlocked@plt+0xc64>
   11ec8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11ecc:	cmp	r0, #0
   11ed0:	bne	11f44 <putc_unlocked@plt+0xc64>
   11ed4:	ldr	r0, [r3, #-8]
   11ed8:	cmp	r0, #0
   11edc:	bne	11f44 <putc_unlocked@plt+0xc64>
   11ee0:	ldr	r0, [r3, #-4]
   11ee4:	cmp	r0, #0
   11ee8:	bne	11f44 <putc_unlocked@plt+0xc64>
   11eec:	ldr	r3, [r1]
   11ef0:	add	r0, r2, r2, lsl #1
   11ef4:	add	r3, r3, r0
   11ef8:	str	r3, [r1]
   11efc:	ldr	r3, [r1, #4]
   11f00:	add	r2, r3, r2
   11f04:	str	r2, [r1, #4]
   11f08:	cmp	r4, #0
   11f0c:	movne	r5, r1
   11f10:	addne	r4, r4, #16
   11f14:	bne	11f30 <putc_unlocked@plt+0xc50>
   11f18:	pop	{r4, r5, r6, pc}
   11f1c:	mov	r1, r5
   11f20:	bl	11e80 <putc_unlocked@plt+0xba0>
   11f24:	ldr	r3, [r5, #12]
   11f28:	add	r3, r3, #1
   11f2c:	str	r3, [r5, #12]
   11f30:	add	r4, r4, #16
   11f34:	ldr	r0, [r4, #-32]	; 0xffffffe0
   11f38:	cmp	r0, #0
   11f3c:	bne	11f1c <putc_unlocked@plt+0xc3c>
   11f40:	pop	{r4, r5, r6, pc}
   11f44:	add	r2, r2, #1
   11f48:	b	11eb8 <putc_unlocked@plt+0xbd8>
   11f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f50:	sub	sp, sp, #36	; 0x24
   11f54:	ldr	r6, [r0]
   11f58:	mov	r9, r0
   11f5c:	cmp	r6, #0
   11f60:	str	r1, [sp, #16]
   11f64:	str	r2, [sp, #20]
   11f68:	mov	r4, r3
   11f6c:	ldr	r5, [sp, #72]	; 0x48
   11f70:	ldr	sl, [r0, #16]
   11f74:	addne	r7, r6, #24
   11f78:	movne	fp, #0
   11f7c:	bne	120f8 <putc_unlocked@plt+0xe18>
   11f80:	ldr	r6, [r0, #4]
   11f84:	cmp	r6, #0
   11f88:	beq	11fec <putc_unlocked@plt+0xd0c>
   11f8c:	ldr	r3, [r9, #4]
   11f90:	ldr	r2, [sp, #16]
   11f94:	stm	r4, {r3, r9}
   11f98:	ldr	r3, [r5, #4]
   11f9c:	str	r2, [r4, #16]
   11fa0:	str	r3, [r4, #8]
   11fa4:	ldr	r2, [sp, #20]
   11fa8:	mov	r3, #0
   11fac:	cmp	sl, r3
   11fb0:	str	r3, [r4, #12]
   11fb4:	str	r2, [r4, #20]
   11fb8:	str	r3, [r4, #24]
   11fbc:	str	r3, [r4, #32]
   11fc0:	str	r3, [r4, #28]
   11fc4:	beq	11fe4 <putc_unlocked@plt+0xd04>
   11fc8:	ldr	r2, [sl, r3, lsl #4]
   11fcc:	cmp	r2, #0
   11fd0:	bne	12154 <putc_unlocked@plt+0xe74>
   11fd4:	ldr	r2, [r5, #12]
   11fd8:	add	r3, r2, r3, lsl #2
   11fdc:	str	r2, [r4, #28]
   11fe0:	str	r3, [r5, #12]
   11fe4:	mov	r6, r4
   11fe8:	add	r4, r4, #36	; 0x24
   11fec:	cmp	sl, #0
   11ff0:	movne	r2, #0
   11ff4:	bne	12178 <putc_unlocked@plt+0xe98>
   11ff8:	mov	r0, r4
   11ffc:	add	sp, sp, #36	; 0x24
   12000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12004:	tst	r2, #8
   12008:	bne	12030 <putc_unlocked@plt+0xd50>
   1200c:	sub	r3, r8, #1
   12010:	cmp	r3, #254	; 0xfe
   12014:	bhi	12030 <putc_unlocked@plt+0xd50>
   12018:	bl	11190 <__ctype_b_loc@plt>
   1201c:	lsl	r3, r8, #1
   12020:	ldr	r2, [r0]
   12024:	ldrh	r3, [r2, r3]
   12028:	tst	r3, #16384	; 0x4000
   1202c:	bne	12188 <putc_unlocked@plt+0xea8>
   12030:	ldr	r3, [r7, #-24]	; 0xffffffe8
   12034:	cmp	r3, #0
   12038:	beq	120f4 <putc_unlocked@plt+0xe14>
   1203c:	ldr	r2, [r5]
   12040:	str	r2, [sp, #12]
   12044:	ldr	r2, [r2, #8]
   12048:	mov	r8, r2
   1204c:	ldr	r0, [r8]
   12050:	cmp	r0, #0
   12054:	beq	12084 <putc_unlocked@plt+0xda4>
   12058:	mov	r1, r3
   1205c:	str	r2, [sp, #28]
   12060:	str	r3, [sp, #24]
   12064:	bl	10ff8 <strcmp@plt>
   12068:	ldr	r3, [sp, #24]
   1206c:	ldr	r2, [sp, #28]
   12070:	cmp	r0, #0
   12074:	bne	1214c <putc_unlocked@plt+0xe6c>
   12078:	sub	r8, r8, r2
   1207c:	cmn	r8, #15
   12080:	bge	120f4 <putc_unlocked@plt+0xe14>
   12084:	ldr	r1, [r5, #8]
   12088:	str	r3, [r1]
   1208c:	ldr	r3, [r6, #8]
   12090:	cmp	r3, #0
   12094:	beq	120ac <putc_unlocked@plt+0xdcc>
   12098:	ldr	r3, [r6, #12]
   1209c:	tst	r3, #1
   120a0:	movne	r3, #2
   120a4:	moveq	r3, #1
   120a8:	str	r3, [sp, #8]
   120ac:	ldr	r2, [sp, #12]
   120b0:	ldr	r3, [sp, #8]
   120b4:	ldr	r0, [pc, #292]	; 121e0 <putc_unlocked@plt+0xf00>
   120b8:	ldr	r2, [r2, #48]	; 0x30
   120bc:	stmib	r1, {r3, fp}
   120c0:	sub	r2, r4, r2
   120c4:	ldr	r3, [r7, #-20]	; 0xffffffec
   120c8:	asr	r2, r2, #2
   120cc:	cmp	r3, #0
   120d0:	mul	r2, r0, r2
   120d4:	ldreq	r3, [r6, #4]
   120d8:	add	r2, r2, #1
   120dc:	bic	r3, r3, #-16777216	; 0xff000000
   120e0:	add	r3, r3, r2, lsl #24
   120e4:	str	r3, [r1, #12]
   120e8:	add	r3, r1, #16
   120ec:	str	r3, [r5, #8]
   120f0:	str	fp, [r1, #16]
   120f4:	add	r7, r7, #24
   120f8:	ldr	r8, [r7, #-20]	; 0xffffffec
   120fc:	sub	r3, r7, #24
   12100:	cmp	r8, #0
   12104:	bne	1212c <putc_unlocked@plt+0xe4c>
   12108:	ldr	r2, [r7, #-24]	; 0xffffffe8
   1210c:	cmp	r2, #0
   12110:	bne	1212c <putc_unlocked@plt+0xe4c>
   12114:	ldr	r2, [r7, #-8]
   12118:	cmp	r2, #0
   1211c:	bne	1212c <putc_unlocked@plt+0xe4c>
   12120:	ldr	r2, [r7, #-4]
   12124:	cmp	r2, #0
   12128:	beq	11f8c <putc_unlocked@plt+0xcac>
   1212c:	ldr	r2, [r7, #-12]
   12130:	tst	r2, #4
   12134:	moveq	r6, r3
   12138:	ldr	r3, [r6, #12]
   1213c:	ands	r3, r3, #8
   12140:	str	r3, [sp, #8]
   12144:	beq	12004 <putc_unlocked@plt+0xd24>
   12148:	b	120f4 <putc_unlocked@plt+0xe14>
   1214c:	add	r8, r8, #16
   12150:	b	1204c <putc_unlocked@plt+0xd6c>
   12154:	add	r3, r3, #1
   12158:	b	11fc8 <putc_unlocked@plt+0xce8>
   1215c:	mov	r3, r4
   12160:	str	r5, [sp]
   12164:	mov	r1, r6
   12168:	add	r7, r2, #1
   1216c:	bl	11f4c <putc_unlocked@plt+0xc6c>
   12170:	mov	r2, r7
   12174:	mov	r4, r0
   12178:	ldr	r0, [sl, r2, lsl #4]
   1217c:	cmp	r0, #0
   12180:	bne	1215c <putc_unlocked@plt+0xe7c>
   12184:	b	11ff8 <putc_unlocked@plt+0xd18>
   12188:	ldr	r3, [r5, #4]
   1218c:	add	r2, r3, #1
   12190:	str	r2, [r5, #4]
   12194:	strb	r8, [r3]
   12198:	ldr	r3, [r6, #8]
   1219c:	cmp	r3, #0
   121a0:	beq	121d4 <putc_unlocked@plt+0xef4>
   121a4:	ldr	r3, [r5, #4]
   121a8:	add	r2, r3, #1
   121ac:	str	r2, [r5, #4]
   121b0:	mov	r2, #58	; 0x3a
   121b4:	strb	r2, [r3]
   121b8:	ldr	r3, [r6, #12]
   121bc:	tst	r3, #1
   121c0:	ldrne	r3, [r5, #4]
   121c4:	addne	r2, r3, #1
   121c8:	strne	r2, [r5, #4]
   121cc:	movne	r2, #58	; 0x3a
   121d0:	strbne	r2, [r3]
   121d4:	ldr	r3, [r5, #4]
   121d8:	strb	fp, [r3]
   121dc:	b	12030 <putc_unlocked@plt+0xd50>
   121e0:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   121e4:	cmp	r0, #86	; 0x56
   121e8:	bne	12254 <putc_unlocked@plt+0xf74>
   121ec:	ldr	r3, [pc, #112]	; 12264 <putc_unlocked@plt+0xf84>
   121f0:	push	{r4, lr}
   121f4:	mov	r4, r2
   121f8:	ldr	r3, [r3]
   121fc:	cmp	r3, #0
   12200:	beq	12220 <putc_unlocked@plt+0xf40>
   12204:	mov	r1, r2
   12208:	ldr	r0, [r2, #48]	; 0x30
   1220c:	blx	r3
   12210:	ldr	r0, [r4, #16]
   12214:	ands	r0, r0, #32
   12218:	bne	1225c <putc_unlocked@plt+0xf7c>
   1221c:	bl	1119c <exit@plt>
   12220:	ldr	r3, [pc, #64]	; 12268 <putc_unlocked@plt+0xf88>
   12224:	ldr	r2, [r3]
   12228:	cmp	r2, #0
   1222c:	beq	12240 <putc_unlocked@plt+0xf60>
   12230:	ldr	r1, [pc, #52]	; 1226c <putc_unlocked@plt+0xf8c>
   12234:	ldr	r0, [r4, #48]	; 0x30
   12238:	bl	111c0 <fprintf@plt>
   1223c:	b	12210 <putc_unlocked@plt+0xf30>
   12240:	ldr	r2, [pc, #40]	; 12270 <putc_unlocked@plt+0xf90>
   12244:	ldr	r1, [pc, #40]	; 12274 <putc_unlocked@plt+0xf94>
   12248:	mov	r0, r4
   1224c:	bl	15fa0 <argp_error@@Base>
   12250:	b	12210 <putc_unlocked@plt+0xf30>
   12254:	mov	r0, #7
   12258:	bx	lr
   1225c:	mov	r0, #0
   12260:	pop	{r4, pc}
   12264:	andeq	r8, r2, r4, ror #4
   12268:	andeq	r8, r2, r0, lsr #5
   1226c:	andeq	r7, r1, lr, ror #13
   12270:	andeq	r7, r1, r4, lsl #11
   12274:	andeq	r7, r1, r6, lsr #24
   12278:	cmn	r0, #3
   1227c:	push	{r4, r5, r6, lr}
   12280:	mov	r4, r2
   12284:	beq	122c8 <putc_unlocked@plt+0xfe8>
   12288:	mov	r5, r1
   1228c:	bgt	122a0 <putc_unlocked@plt+0xfc0>
   12290:	cmn	r0, #4
   12294:	beq	12304 <putc_unlocked@plt+0x1024>
   12298:	mov	r0, #7
   1229c:	pop	{r4, r5, r6, pc}
   122a0:	cmn	r0, #2
   122a4:	beq	122d0 <putc_unlocked@plt+0xff0>
   122a8:	cmp	r0, #63	; 0x3f
   122ac:	ldreq	r2, [pc, #140]	; 12340 <putc_unlocked@plt+0x1060>
   122b0:	bne	12298 <putc_unlocked@plt+0xfb8>
   122b4:	ldr	r1, [r4, #48]	; 0x30
   122b8:	mov	r0, r4
   122bc:	bl	15f00 <argp_state_help@@Base>
   122c0:	mov	r0, #0
   122c4:	pop	{r4, r5, r6, pc}
   122c8:	ldr	r2, [pc, #116]	; 12344 <putc_unlocked@plt+0x1064>
   122cc:	b	122b4 <putc_unlocked@plt+0xfd4>
   122d0:	ldr	r3, [pc, #112]	; 12348 <putc_unlocked@plt+0x1068>
   122d4:	mov	r0, r1
   122d8:	str	r1, [r3]
   122dc:	bl	12d64 <argp_parse@@Base+0xa0c>
   122e0:	ldr	r3, [pc, #100]	; 1234c <putc_unlocked@plt+0x106c>
   122e4:	str	r0, [r3]
   122e8:	ldr	r3, [r4, #16]
   122ec:	str	r0, [r4, #40]	; 0x28
   122f0:	and	r3, r3, #3
   122f4:	cmp	r3, #1
   122f8:	ldreq	r3, [r4, #8]
   122fc:	streq	r5, [r3]
   12300:	b	122c0 <putc_unlocked@plt+0xfe0>
   12304:	cmp	r1, #0
   12308:	ldr	r0, [pc, #64]	; 12350 <putc_unlocked@plt+0x1070>
   1230c:	movne	r0, r1
   12310:	bl	1128c <atoi@plt>
   12314:	ldr	r4, [pc, #56]	; 12354 <putc_unlocked@plt+0x1074>
   12318:	mov	r5, #1
   1231c:	str	r0, [r4]
   12320:	ldr	r3, [r4]
   12324:	sub	r2, r3, #1
   12328:	cmp	r3, #0
   1232c:	str	r2, [r4]
   12330:	ble	122c0 <putc_unlocked@plt+0xfe0>
   12334:	mov	r0, r5
   12338:	bl	110ac <sleep@plt>
   1233c:	b	12320 <putc_unlocked@plt+0x1040>
   12340:	andeq	r0, r0, sl, ror r2
   12344:	andeq	r0, r0, r1, lsl #4
   12348:	andeq	r8, r2, ip, lsr r2
   1234c:	andeq	r8, r2, r8, lsr r2
   12350:	andeq	r7, r1, r7, lsr #11
   12354:	andeq	r8, r2, r0, ror #4

00012358 <argp_parse@@Base>:
   12358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1235c:	add	fp, sp, #32
   12360:	tst	r3, #1
   12364:	sub	sp, sp, #220	; 0xdc
   12368:	mov	r4, r0
   1236c:	mov	r8, r2
   12370:	str	r1, [fp, #-240]	; 0xffffff10
   12374:	mov	sl, r3
   12378:	bne	123ac <argp_parse@@Base+0x54>
   1237c:	ldr	r3, [pc, #2296]	; 12c7c <argp_parse@@Base+0x924>
   12380:	ldr	r5, [pc, #2296]	; 12c80 <argp_parse@@Base+0x928>
   12384:	ldr	r2, [r3]
   12388:	cmp	r2, #0
   1238c:	ldreq	r2, [r8]
   12390:	streq	r2, [r3]
   12394:	ldr	r3, [r5]
   12398:	cmp	r3, #0
   1239c:	bne	123ac <argp_parse@@Base+0x54>
   123a0:	ldr	r0, [r8]
   123a4:	bl	12d64 <argp_parse@@Base+0xa0c>
   123a8:	str	r0, [r5]
   123ac:	ands	r7, sl, #16
   123b0:	bne	12438 <argp_parse@@Base+0xe0>
   123b4:	sub	sp, sp, #72	; 0x48
   123b8:	add	r5, sp, #8
   123bc:	sub	sp, sp, #40	; 0x28
   123c0:	add	r6, sp, #8
   123c4:	mov	r2, #28
   123c8:	mov	r1, r7
   123cc:	mov	r0, r6
   123d0:	bl	111fc <memset@plt>
   123d4:	str	r5, [r6, #16]
   123d8:	mov	r0, r5
   123dc:	mov	r2, #64	; 0x40
   123e0:	mov	r1, r7
   123e4:	bl	111fc <memset@plt>
   123e8:	cmp	r4, #0
   123ec:	strne	r4, [r5]
   123f0:	ldr	r3, [pc, #2188]	; 12c84 <argp_parse@@Base+0x92c>
   123f4:	addne	r5, r5, #16
   123f8:	str	r3, [r5]
   123fc:	ldr	r3, [pc, #2180]	; 12c88 <argp_parse@@Base+0x930>
   12400:	ldr	r3, [r3]
   12404:	cmp	r3, #0
   12408:	bne	12420 <argp_parse@@Base+0xc8>
   1240c:	ldr	r3, [pc, #2168]	; 12c8c <argp_parse@@Base+0x934>
   12410:	ldr	r3, [r3]
   12414:	cmp	r3, #0
   12418:	addeq	r3, r5, #16
   1241c:	beq	1242c <argp_parse@@Base+0xd4>
   12420:	ldr	r2, [pc, #2152]	; 12c90 <argp_parse@@Base+0x938>
   12424:	add	r3, r5, #32
   12428:	str	r2, [r5, #16]
   1242c:	mov	r4, r6
   12430:	mov	r2, #0
   12434:	str	r2, [r3]
   12438:	mov	r2, #36	; 0x24
   1243c:	mov	r1, #0
   12440:	sub	r0, fp, #196	; 0xc4
   12444:	bl	111fc <memset@plt>
   12448:	ands	r3, sl, #4
   1244c:	moveq	r3, #1
   12450:	movne	r3, #0
   12454:	str	r3, [fp, #-228]	; 0xffffff1c
   12458:	mov	r3, #0
   1245c:	cmp	r4, r3
   12460:	str	r3, [fp, #-224]	; 0xffffff20
   12464:	str	r3, [fp, #-220]	; 0xffffff24
   12468:	str	r3, [fp, #-216]	; 0xffffff28
   1246c:	beq	1247c <argp_parse@@Base+0x124>
   12470:	sub	r1, fp, #228	; 0xe4
   12474:	mov	r0, r4
   12478:	bl	11e80 <putc_unlocked@plt+0xba0>
   1247c:	ldr	r9, [fp, #-220]	; 0xffffff24
   12480:	ldr	r5, [fp, #-216]	; 0xffffff28
   12484:	add	r3, r9, #1
   12488:	mov	r9, #36	; 0x24
   1248c:	ldr	r6, [fp, #-224]	; 0xffffff20
   12490:	mul	r9, r9, r3
   12494:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12498:	lsl	r5, r5, #2
   1249c:	add	r6, r6, #1
   124a0:	add	r3, r9, r5
   124a4:	add	r6, r3, r6, lsl #4
   124a8:	add	r0, r0, #1
   124ac:	add	r0, r0, r6
   124b0:	str	r3, [fp, #-236]	; 0xffffff14
   124b4:	bl	133a0 <argp_parse@@Base+0x1048>
   124b8:	cmp	r0, #0
   124bc:	mov	r7, r0
   124c0:	str	r0, [fp, #-40]	; 0xffffffd8
   124c4:	moveq	r4, #12
   124c8:	beq	12648 <argp_parse@@Base+0x2f0>
   124cc:	add	r3, r0, r9
   124d0:	str	r3, [fp, #-232]	; 0xffffff18
   124d4:	str	r3, [fp, #-104]	; 0xffffff98
   124d8:	ldr	r3, [fp, #-236]	; 0xffffff14
   124dc:	sub	lr, fp, #196	; 0xc4
   124e0:	add	r3, r0, r3
   124e4:	str	r3, [fp, #-236]	; 0xffffff14
   124e8:	str	r3, [fp, #-152]	; 0xffffff68
   124ec:	mov	r3, #1
   124f0:	add	r9, r0, r6
   124f4:	str	r0, [fp, #-112]	; 0xffffff90
   124f8:	str	r3, [fp, #-196]	; 0xffffff3c
   124fc:	str	r3, [fp, #-192]	; 0xffffff40
   12500:	ldm	lr!, {r0, r1, r2, r3}
   12504:	sub	ip, fp, #148	; 0x94
   12508:	str	r9, [fp, #-156]	; 0xffffff64
   1250c:	stmia	ip!, {r0, r1, r2, r3}
   12510:	ldm	lr!, {r0, r1, r2, r3}
   12514:	stmia	ip!, {r0, r1, r2, r3}
   12518:	mov	r2, r5
   1251c:	ldr	r3, [lr]
   12520:	mov	r1, #0
   12524:	ldr	r0, [fp, #-232]	; 0xffffff18
   12528:	str	r3, [ip]
   1252c:	bl	111fc <memset@plt>
   12530:	ldr	r3, [fp, #-236]	; 0xffffff14
   12534:	tst	sl, #8
   12538:	str	r3, [fp, #-204]	; 0xffffff34
   1253c:	ldr	r3, [fp, #-232]	; 0xffffff18
   12540:	str	r9, [fp, #-208]	; 0xffffff30
   12544:	sub	r5, fp, #160	; 0xa0
   12548:	addne	r9, r9, #1
   1254c:	str	r3, [fp, #-200]	; 0xffffff38
   12550:	str	r5, [fp, #-212]	; 0xffffff2c
   12554:	strne	r9, [fp, #-208]	; 0xffffff30
   12558:	movne	r3, #45	; 0x2d
   1255c:	bne	12578 <argp_parse@@Base+0x220>
   12560:	ands	r3, sl, #4
   12564:	cmp	r3, #0
   12568:	beq	1257c <argp_parse@@Base+0x224>
   1256c:	mov	r3, #43	; 0x2b
   12570:	add	r9, r9, #1
   12574:	str	r9, [fp, #-208]	; 0xffffff30
   12578:	strb	r3, [r7, r6]
   1257c:	ldr	r3, [fp, #-208]	; 0xffffff30
   12580:	mov	r2, #0
   12584:	cmp	r4, r2
   12588:	strb	r2, [r3]
   1258c:	ldr	r3, [fp, #-204]	; 0xffffff34
   12590:	str	r2, [r3]
   12594:	ldreq	r3, [fp, #-112]	; 0xffffff90
   12598:	str	r4, [fp, #-160]	; 0xffffff60
   1259c:	streq	r3, [fp, #-108]	; 0xffffff94
   125a0:	beq	125c0 <argp_parse@@Base+0x268>
   125a4:	sub	r3, fp, #212	; 0xd4
   125a8:	str	r3, [sp]
   125ac:	mov	r1, r2
   125b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   125b4:	mov	r0, r4
   125b8:	bl	11f4c <putc_unlocked@plt+0xc6c>
   125bc:	str	r0, [fp, #-108]	; 0xffffff94
   125c0:	mov	r2, #56	; 0x38
   125c4:	mov	r1, #0
   125c8:	add	r0, r5, #64	; 0x40
   125cc:	bl	111fc <memset@plt>
   125d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   125d4:	ldr	r6, [fp, #-112]	; 0xffffff90
   125d8:	str	r3, [fp, #-96]	; 0xffffffa0
   125dc:	ldr	r3, [fp, #-240]	; 0xffffff10
   125e0:	str	sl, [fp, #-80]	; 0xffffffb0
   125e4:	str	r3, [fp, #-92]	; 0xffffffa4
   125e8:	ldr	r3, [pc, #1700]	; 12c94 <argp_parse@@Base+0x93c>
   125ec:	mov	r4, #0
   125f0:	ldr	sl, [pc, #1696]	; 12c98 <argp_parse@@Base+0x940>
   125f4:	ldr	r3, [r3]
   125f8:	add	r7, r5, #64	; 0x40
   125fc:	str	r3, [fp, #-52]	; 0xffffffcc
   12600:	ldr	r3, [pc, #1684]	; 12c9c <argp_parse@@Base+0x944>
   12604:	mov	r9, r4
   12608:	str	r8, [fp, #-88]	; 0xffffffa8
   1260c:	ldr	r3, [r3]
   12610:	str	r5, [fp, #-44]	; 0xffffffd4
   12614:	str	r3, [fp, #-48]	; 0xffffffd0
   12618:	mov	r3, #1
   1261c:	str	r3, [fp, #-100]	; 0xffffff9c
   12620:	ldr	r3, [fp, #-108]	; 0xffffff94
   12624:	cmp	r6, r3
   12628:	ldrcc	r3, [fp, #8]
   1262c:	strcc	r3, [r6, #24]
   12630:	ldr	r3, [fp, #-108]	; 0xffffff94
   12634:	cmp	r6, r3
   12638:	bcs	126bc <argp_parse@@Base+0x364>
   1263c:	cmp	r4, #7
   12640:	cmpne	r4, #0
   12644:	beq	12654 <argp_parse@@Base+0x2fc>
   12648:	mov	r0, r4
   1264c:	sub	sp, fp, #32
   12650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12654:	ldr	r3, [r6, #16]
   12658:	cmp	r3, #0
   1265c:	ldrne	r3, [r3, #28]
   12660:	ldrne	r2, [r6, #20]
   12664:	ldrne	r3, [r3, r2, lsl #2]
   12668:	strne	r3, [r6, #24]
   1266c:	ldr	r3, [r6]
   12670:	cmp	r3, #0
   12674:	bne	1269c <argp_parse@@Base+0x344>
   12678:	ldr	r3, [r6, #4]
   1267c:	ldr	r3, [r3, #16]
   12680:	cmp	r3, #0
   12684:	beq	1269c <argp_parse@@Base+0x344>
   12688:	ldr	r3, [r3]
   1268c:	cmp	r3, #0
   12690:	ldrne	r3, [r6, #28]
   12694:	ldrne	r2, [r6, #24]
   12698:	strne	r2, [r3]
   1269c:	mov	r0, r6
   126a0:	mov	r3, r9
   126a4:	mov	r2, sl
   126a8:	mov	r1, r7
   126ac:	bl	11e20 <putc_unlocked@plt+0xb40>
   126b0:	add	r6, r6, #36	; 0x24
   126b4:	mov	r4, r0
   126b8:	b	12630 <argp_parse@@Base+0x2d8>
   126bc:	cmp	r4, #7
   126c0:	beq	126cc <argp_parse@@Base+0x374>
   126c4:	cmp	r4, #0
   126c8:	bne	12648 <argp_parse@@Base+0x2f0>
   126cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   126d0:	tst	r3, #2
   126d4:	moveq	r3, #1
   126d8:	streq	r3, [fp, #-144]	; 0xffffff70
   126dc:	beq	12704 <argp_parse@@Base+0x3ac>
   126e0:	tst	r3, #1
   126e4:	mov	r2, #0
   126e8:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   126ec:	str	r2, [fp, #-144]	; 0xffffff70
   126f0:	subne	r3, r3, #4
   126f4:	strne	r3, [fp, #-88]	; 0xffffffa8
   126f8:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   126fc:	addne	r3, r3, #1
   12700:	strne	r3, [fp, #-92]	; 0xffffffa4
   12704:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12708:	cmp	r8, r3
   1270c:	bne	12730 <argp_parse@@Base+0x3d8>
   12710:	ldr	r0, [r8]
   12714:	cmp	r0, #0
   12718:	beq	12730 <argp_parse@@Base+0x3d8>
   1271c:	bl	12d64 <argp_parse@@Base+0xa0c>
   12720:	str	r0, [fp, #-56]	; 0xffffffc8
   12724:	add	r8, r5, #64	; 0x40
   12728:	ldr	r9, [pc, #1392]	; 12ca0 <argp_parse@@Base+0x948>
   1272c:	b	128f4 <argp_parse@@Base+0x59c>
   12730:	ldr	r3, [pc, #1352]	; 12c80 <argp_parse@@Base+0x928>
   12734:	ldr	r3, [r3]
   12738:	str	r3, [fp, #-56]	; 0xffffffc8
   1273c:	b	12724 <argp_parse@@Base+0x3cc>
   12740:	bl	12e6c <argp_parse@@Base+0xb14>
   12744:	b	12960 <argp_parse@@Base+0x608>
   12748:	cmp	r0, #63	; 0x3f
   1274c:	bne	12c10 <argp_parse@@Base+0x8b8>
   12750:	ldr	r3, [fp, #-140]	; 0xffffff74
   12754:	cmn	r3, #1
   12758:	bne	12bb4 <argp_parse@@Base+0x85c>
   1275c:	asrs	r3, r6, #24
   12760:	bne	12a1c <argp_parse@@Base+0x6c4>
   12764:	mov	r1, r6
   12768:	ldr	r0, [fp, #-156]	; 0xffffff64
   1276c:	bl	111b4 <strchr@plt>
   12770:	subs	r2, r0, #0
   12774:	beq	127b0 <argp_parse@@Base+0x458>
   12778:	ldr	r0, [fp, #-112]	; 0xffffff90
   1277c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12780:	cmp	r0, r3
   12784:	bcs	127b0 <argp_parse@@Base+0x458>
   12788:	ldr	r1, [r0, #8]
   1278c:	cmp	r2, r1
   12790:	bcs	12a14 <argp_parse@@Base+0x6bc>
   12794:	ldr	r3, [fp, #-136]	; 0xffffff78
   12798:	mov	r2, r6
   1279c:	mov	r1, r8
   127a0:	bl	11e20 <putc_unlocked@plt+0xb40>
   127a4:	cmp	r0, #7
   127a8:	mov	r4, r0
   127ac:	bne	12aa8 <argp_parse@@Base+0x750>
   127b0:	ldr	r3, [pc, #1260]	; 12ca4 <argp_parse@@Base+0x94c>
   127b4:	ldr	r1, [pc, #1260]	; 12ca8 <argp_parse@@Base+0x950>
   127b8:	mov	r2, r6
   127bc:	add	r0, r5, #64	; 0x40
   127c0:	bl	15fa0 <argp_error@@Base>
   127c4:	sub	r7, r6, #1
   127c8:	mov	r4, #7
   127cc:	clz	r7, r7
   127d0:	lsr	r7, r7, #5
   127d4:	cmp	r4, #7
   127d8:	movne	r7, #0
   127dc:	andeq	r7, r7, #1
   127e0:	cmp	r7, #0
   127e4:	beq	12b28 <argp_parse@@Base+0x7d0>
   127e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   127ec:	ldr	r2, [fp, #-92]	; 0xffffffa4
   127f0:	cmp	r3, r2
   127f4:	bne	12b80 <argp_parse@@Base+0x828>
   127f8:	mov	r4, #0
   127fc:	ldr	r7, [fp, #-112]	; 0xffffff90
   12800:	ldr	sl, [pc, #1188]	; 12cac <argp_parse@@Base+0x954>
   12804:	add	r8, r5, #64	; 0x40
   12808:	mov	r9, r4
   1280c:	ldr	r6, [fp, #-108]	; 0xffffff94
   12810:	cmp	r7, r6
   12814:	bcc	12ab4 <argp_parse@@Base+0x75c>
   12818:	ldr	r9, [pc, #1168]	; 12cb0 <argp_parse@@Base+0x958>
   1281c:	sub	r6, r6, #36	; 0x24
   12820:	add	r7, r5, #64	; 0x40
   12824:	mov	r8, #0
   12828:	ldr	r3, [fp, #-112]	; 0xffffff90
   1282c:	cmp	r6, r3
   12830:	bcc	12b0c <argp_parse@@Base+0x7b4>
   12834:	cmp	r4, #7
   12838:	cmpne	r4, #0
   1283c:	beq	12aec <argp_parse@@Base+0x794>
   12840:	ldr	r3, [fp, #4]
   12844:	cmp	r3, #0
   12848:	beq	12b28 <argp_parse@@Base+0x7d0>
   1284c:	ldr	r2, [fp, #4]
   12850:	ldr	r3, [fp, #-84]	; 0xffffffac
   12854:	str	r3, [r2]
   12858:	b	12b20 <argp_parse@@Base+0x7c8>
   1285c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12860:	tst	r2, #4
   12864:	bne	127e8 <argp_parse@@Base+0x490>
   12868:	add	r2, r3, #1
   1286c:	str	r2, [fp, #-84]	; 0xffffffac
   12870:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12874:	ldr	r3, [r2, r3, lsl #2]
   12878:	str	r3, [fp, #-136]	; 0xffffff78
   1287c:	ldr	r3, [fp, #-136]	; 0xffffff78
   12880:	ldr	r7, [fp, #-84]	; 0xffffffac
   12884:	str	r3, [fp, #-232]	; 0xffffff18
   12888:	ldr	r6, [fp, #-112]	; 0xffffff90
   1288c:	mov	r3, #0
   12890:	mov	r4, #7
   12894:	mov	sl, r3
   12898:	sub	r7, r7, #1
   1289c:	str	r7, [fp, #-84]	; 0xffffffac
   128a0:	ldr	r2, [fp, #-108]	; 0xffffff94
   128a4:	cmp	r6, r2
   128a8:	movcs	r2, #0
   128ac:	movcc	r2, #1
   128b0:	cmp	r4, #7
   128b4:	movne	r2, #0
   128b8:	cmp	r2, #0
   128bc:	bne	129b4 <argp_parse@@Base+0x65c>
   128c0:	cmp	r4, #0
   128c4:	bne	12a98 <argp_parse@@Base+0x740>
   128c8:	cmp	r3, r9
   128cc:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   128d0:	streq	r3, [fp, #-84]	; 0xffffffac
   128d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   128d8:	cmp	r7, r3
   128dc:	sublt	r7, r3, r7
   128e0:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   128e4:	movge	r3, #1
   128e8:	addlt	r7, r3, r7
   128ec:	strlt	r7, [r6, #-24]	; 0xffffffe8
   128f0:	strge	r3, [fp, #-100]	; 0xffffff9c
   128f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   128f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   128fc:	cmp	r2, #0
   12900:	beq	12910 <argp_parse@@Base+0x5b8>
   12904:	cmp	r2, r3
   12908:	movgt	r2, #0
   1290c:	strgt	r2, [fp, #-72]	; 0xffffffb8
   12910:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12914:	cmp	r2, #0
   12918:	beq	129a0 <argp_parse@@Base+0x648>
   1291c:	ldr	r7, [fp, #-72]	; 0xffffffb8
   12920:	cmp	r7, #0
   12924:	bne	129a0 <argp_parse@@Base+0x648>
   12928:	str	r3, [fp, #-148]	; 0xffffff6c
   1292c:	mvn	r3, #0
   12930:	str	r3, [fp, #-140]	; 0xffffff74
   12934:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12938:	str	r7, [sp]
   1293c:	tst	r3, #64	; 0x40
   12940:	add	r3, r5, #12
   12944:	str	r3, [sp, #4]
   12948:	ldr	r2, [fp, #-156]	; 0xffffff64
   1294c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12950:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12954:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12958:	beq	12740 <argp_parse@@Base+0x3e8>
   1295c:	bl	12eb8 <argp_parse@@Base+0xb60>
   12960:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12964:	cmn	r0, #1
   12968:	mov	r6, r0
   1296c:	str	r4, [fp, #-84]	; 0xffffffac
   12970:	bne	12748 <argp_parse@@Base+0x3f0>
   12974:	mov	r3, #0
   12978:	cmp	r4, #1
   1297c:	str	r3, [fp, #-100]	; 0xffffff9c
   12980:	ble	129a0 <argp_parse@@Base+0x648>
   12984:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12988:	sub	r3, r4, #-1073741823	; 0xc0000001
   1298c:	ldr	r1, [pc, #800]	; 12cb4 <argp_parse@@Base+0x95c>
   12990:	ldr	r0, [r2, r3, lsl #2]
   12994:	bl	10ff8 <strcmp@plt>
   12998:	cmp	r0, #0
   1299c:	streq	r4, [fp, #-72]	; 0xffffffb8
   129a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   129a4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   129a8:	cmp	r3, r2
   129ac:	bge	127e8 <argp_parse@@Base+0x490>
   129b0:	b	1285c <argp_parse@@Base+0x504>
   129b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   129b8:	mov	r2, sl
   129bc:	add	r3, r3, #1
   129c0:	str	r3, [fp, #-84]	; 0xffffffac
   129c4:	mov	r1, r8
   129c8:	ldr	r3, [fp, #-232]	; 0xffffff18
   129cc:	mov	r0, r6
   129d0:	bl	11e20 <putc_unlocked@plt+0xb40>
   129d4:	cmp	r0, #7
   129d8:	mov	r4, r0
   129dc:	movne	r3, sl
   129e0:	bne	12a0c <argp_parse@@Base+0x6b4>
   129e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   129e8:	mov	r2, r9
   129ec:	sub	r3, r3, #1
   129f0:	str	r3, [fp, #-84]	; 0xffffffac
   129f4:	mov	r1, r8
   129f8:	mov	r3, sl
   129fc:	mov	r0, r6
   12a00:	bl	11e20 <putc_unlocked@plt+0xb40>
   12a04:	mov	r3, r9
   12a08:	mov	r4, r0
   12a0c:	add	r6, r6, #36	; 0x24
   12a10:	b	128a0 <argp_parse@@Base+0x548>
   12a14:	add	r0, r0, #36	; 0x24
   12a18:	b	12780 <argp_parse@@Base+0x428>
   12a1c:	mov	r0, #36	; 0x24
   12a20:	ands	r1, r6, #8388608	; 0x800000
   12a24:	mul	r0, r0, r3
   12a28:	ldr	ip, [fp, #-112]	; 0xffffff90
   12a2c:	movne	r1, #-16777216	; 0xff000000
   12a30:	bic	r2, r6, #-16777216	; 0xff000000
   12a34:	sub	r0, r0, #36	; 0x24
   12a38:	orr	r2, r2, r1
   12a3c:	ldr	r3, [fp, #-136]	; 0xffffff78
   12a40:	mov	r1, r8
   12a44:	add	r0, ip, r0
   12a48:	bl	11e20 <putc_unlocked@plt+0xb40>
   12a4c:	cmp	r0, #7
   12a50:	mov	r4, r0
   12a54:	bne	12aa8 <argp_parse@@Base+0x750>
   12a58:	ldr	r3, [fp, #-152]	; 0xffffff68
   12a5c:	b	12a70 <argp_parse@@Base+0x718>
   12a60:	ldr	r2, [r3]
   12a64:	cmp	r2, #0
   12a68:	beq	12a7c <argp_parse@@Base+0x724>
   12a6c:	add	r3, r3, #16
   12a70:	ldr	r2, [r3, #12]
   12a74:	cmp	r2, r6
   12a78:	bne	12a60 <argp_parse@@Base+0x708>
   12a7c:	ldr	r2, [r3]
   12a80:	ldr	r1, [pc, #560]	; 12cb8 <argp_parse@@Base+0x960>
   12a84:	cmp	r2, #0
   12a88:	moveq	r2, r1
   12a8c:	ldr	r3, [pc, #528]	; 12ca4 <argp_parse@@Base+0x94c>
   12a90:	ldr	r1, [pc, #548]	; 12cbc <argp_parse@@Base+0x964>
   12a94:	b	127bc <argp_parse@@Base+0x464>
   12a98:	cmp	r4, #7
   12a9c:	bne	12b30 <argp_parse@@Base+0x7d8>
   12aa0:	mov	r6, #1
   12aa4:	b	127c4 <argp_parse@@Base+0x46c>
   12aa8:	cmp	r4, #0
   12aac:	beq	128f4 <argp_parse@@Base+0x59c>
   12ab0:	b	127d4 <argp_parse@@Base+0x47c>
   12ab4:	cmp	r4, #7
   12ab8:	cmpne	r4, #0
   12abc:	bne	12818 <argp_parse@@Base+0x4c0>
   12ac0:	ldr	r3, [r7, #12]
   12ac4:	cmp	r3, #0
   12ac8:	bne	12ae4 <argp_parse@@Base+0x78c>
   12acc:	mov	r3, r9
   12ad0:	mov	r2, sl
   12ad4:	mov	r1, r8
   12ad8:	mov	r0, r7
   12adc:	bl	11e20 <putc_unlocked@plt+0xb40>
   12ae0:	mov	r4, r0
   12ae4:	add	r7, r7, #36	; 0x24
   12ae8:	b	1280c <argp_parse@@Base+0x4b4>
   12aec:	mov	r0, r6
   12af0:	mov	r3, r8
   12af4:	mov	r2, r9
   12af8:	mov	r1, r7
   12afc:	bl	11e20 <putc_unlocked@plt+0xb40>
   12b00:	sub	r6, r6, #36	; 0x24
   12b04:	mov	r4, r0
   12b08:	b	12828 <argp_parse@@Base+0x4d0>
   12b0c:	cmp	r4, #7
   12b10:	beq	12c1c <argp_parse@@Base+0x8c4>
   12b14:	ldr	r3, [fp, #4]
   12b18:	cmp	r3, #0
   12b1c:	bne	1284c <argp_parse@@Base+0x4f4>
   12b20:	cmp	r4, #0
   12b24:	beq	12c2c <argp_parse@@Base+0x8d4>
   12b28:	cmp	r4, #7
   12b2c:	beq	12bb4 <argp_parse@@Base+0x85c>
   12b30:	ldr	r6, [fp, #-112]	; 0xffffff90
   12b34:	ldr	r9, [pc, #388]	; 12cc0 <argp_parse@@Base+0x968>
   12b38:	add	r7, r5, #64	; 0x40
   12b3c:	mov	r8, #0
   12b40:	ldr	r3, [fp, #-108]	; 0xffffff94
   12b44:	cmp	r6, r3
   12b48:	bcc	12bcc <argp_parse@@Base+0x874>
   12b4c:	ldr	r6, [fp, #-108]	; 0xffffff94
   12b50:	ldr	r8, [pc, #364]	; 12cc4 <argp_parse@@Base+0x96c>
   12b54:	sub	r6, r6, #36	; 0x24
   12b58:	add	r5, r5, #64	; 0x40
   12b5c:	mov	r7, #0
   12b60:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b64:	cmp	r6, r3
   12b68:	bcs	12bf4 <argp_parse@@Base+0x89c>
   12b6c:	cmp	r4, #7
   12b70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b74:	moveq	r4, #22
   12b78:	bl	12df4 <argp_parse@@Base+0xa9c>
   12b7c:	b	12648 <argp_parse@@Base+0x2f0>
   12b80:	ldr	r2, [fp, #4]
   12b84:	cmp	r2, #0
   12b88:	strne	r3, [r2]
   12b8c:	bne	12c2c <argp_parse@@Base+0x8d4>
   12b90:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b94:	tst	r3, #2
   12b98:	bne	12bb4 <argp_parse@@Base+0x85c>
   12b9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ba0:	cmp	r0, #0
   12ba4:	beq	12bb4 <argp_parse@@Base+0x85c>
   12ba8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12bac:	ldr	r1, [pc, #276]	; 12cc8 <argp_parse@@Base+0x970>
   12bb0:	bl	111c0 <fprintf@plt>
   12bb4:	mov	r2, #260	; 0x104
   12bb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12bbc:	add	r0, r5, #64	; 0x40
   12bc0:	bl	15f00 <argp_state_help@@Base>
   12bc4:	mov	r4, #7
   12bc8:	b	12b30 <argp_parse@@Base+0x7d8>
   12bcc:	mov	r0, r6
   12bd0:	mov	r3, r8
   12bd4:	mov	r2, r9
   12bd8:	mov	r1, r7
   12bdc:	bl	11e20 <putc_unlocked@plt+0xb40>
   12be0:	add	r6, r6, #36	; 0x24
   12be4:	b	12b40 <argp_parse@@Base+0x7e8>
   12be8:	cmp	r4, #7
   12bec:	moveq	r4, #0
   12bf0:	b	12b4c <argp_parse@@Base+0x7f4>
   12bf4:	mov	r0, r6
   12bf8:	mov	r3, r7
   12bfc:	mov	r2, r8
   12c00:	mov	r1, r5
   12c04:	bl	11e20 <putc_unlocked@plt+0xb40>
   12c08:	sub	r6, r6, #36	; 0x24
   12c0c:	b	12b60 <argp_parse@@Base+0x808>
   12c10:	cmp	r0, #1
   12c14:	bne	1275c <argp_parse@@Base+0x404>
   12c18:	b	1287c <argp_parse@@Base+0x524>
   12c1c:	ldr	r3, [fp, #4]
   12c20:	cmp	r3, #0
   12c24:	movne	r4, #0
   12c28:	bne	1284c <argp_parse@@Base+0x4f4>
   12c2c:	ldr	r6, [fp, #-108]	; 0xffffff94
   12c30:	mov	r4, #0
   12c34:	ldr	r9, [pc, #144]	; 12ccc <argp_parse@@Base+0x974>
   12c38:	sub	r6, r6, #36	; 0x24
   12c3c:	add	r7, r5, #64	; 0x40
   12c40:	mov	r8, r4
   12c44:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c48:	cmp	r6, r3
   12c4c:	bcc	12be8 <argp_parse@@Base+0x890>
   12c50:	cmp	r4, #7
   12c54:	cmpne	r4, #0
   12c58:	bne	12b4c <argp_parse@@Base+0x7f4>
   12c5c:	mov	r0, r6
   12c60:	mov	r3, r8
   12c64:	mov	r2, r9
   12c68:	mov	r1, r7
   12c6c:	bl	11e20 <putc_unlocked@plt+0xb40>
   12c70:	sub	r6, r6, #36	; 0x24
   12c74:	mov	r4, r0
   12c78:	b	12c44 <argp_parse@@Base+0x8ec>
   12c7c:	andeq	r8, r2, ip, lsr r2
   12c80:	andeq	r8, r2, r8, lsr r2
   12c84:	andeq	r7, r1, ip, ror #8
   12c88:	andeq	r8, r2, r0, lsr #5
   12c8c:	andeq	r8, r2, r4, ror #4
   12c90:	andeq	r7, r1, r8, lsl #9
   12c94:	andeq	r8, r2, r0, asr #4
   12c98:	tsteq	r0, r3
   12c9c:	andeq	r8, r2, r4, asr #4
   12ca0:	tsteq	r0, r6
   12ca4:	andeq	r7, r1, r4, lsr #9
   12ca8:			; <UNDEFINED> instruction: 0x000175b3
   12cac:	tsteq	r0, r2
   12cb0:	tsteq	r0, r1
   12cb4:			; <UNDEFINED> instruction: 0x000175b0
   12cb8:	andeq	r7, r1, ip, lsr #11
   12cbc:			; <UNDEFINED> instruction: 0x000175bb
   12cc0:	tsteq	r0, r5
   12cc4:	tsteq	r0, r7
   12cc8:	andeq	r7, r1, r4, asr #11
   12ccc:	tsteq	r0, r4
   12cd0:	cmp	r1, #0
   12cd4:	ldrne	r2, [r1, #52]	; 0x34
   12cd8:	ldrne	r3, [r2, #48]	; 0x30
   12cdc:	ldrne	r2, [r2, #52]	; 0x34
   12ce0:	bne	12cf0 <argp_parse@@Base+0x998>
   12ce4:	mov	r0, #0
   12ce8:	bx	lr
   12cec:	add	r3, r3, #36	; 0x24
   12cf0:	cmp	r3, r2
   12cf4:	bcs	12ce4 <argp_parse@@Base+0x98c>
   12cf8:	ldr	r1, [r3, #4]
   12cfc:	cmp	r1, r0
   12d00:	bne	12cec <argp_parse@@Base+0x994>
   12d04:	ldr	r0, [r3, #24]
   12d08:	bx	lr
   12d0c:	push	{r0, r1, r2, lr}
   12d10:	ldr	r1, [pc, #28]	; 12d34 <argp_parse@@Base+0x9dc>
   12d14:	ldr	r2, [pc, #28]	; 12d38 <argp_parse@@Base+0x9e0>
   12d18:	ldr	r3, [r1, #4]
   12d1c:	str	r3, [sp]
   12d20:	ldr	r3, [pc, #20]	; 12d3c <argp_parse@@Base+0x9e4>
   12d24:	ldr	r1, [r1]
   12d28:	bl	1329c <argp_parse@@Base+0xf44>
   12d2c:	add	sp, sp, #12
   12d30:	pop	{pc}		; (ldr pc, [sp], #4)
   12d34:	andeq	r8, r2, r8, ror #4
   12d38:	muleq	r1, r4, r6
   12d3c:	andeq	r7, r1, r7, lsl #13
   12d40:	ldr	r3, [pc, #16]	; 12d58 <argp_parse@@Base+0xa00>
   12d44:	ldr	r2, [pc, #16]	; 12d5c <argp_parse@@Base+0xa04>
   12d48:	str	r2, [r3]
   12d4c:	ldr	r3, [pc, #12]	; 12d60 <argp_parse@@Base+0xa08>
   12d50:	stm	r3, {r0, r1}
   12d54:	bx	lr
   12d58:	andeq	r8, r2, r4, ror #4
   12d5c:	andeq	r2, r1, ip, lsl #26
   12d60:	andeq	r8, r2, r8, ror #4
   12d64:	mov	r2, r0
   12d68:	push	{r4, lr}
   12d6c:	mov	r0, r2
   12d70:	ldrb	r3, [r2]
   12d74:	add	r1, r2, #1
   12d78:	cmp	r3, #47	; 0x2f
   12d7c:	beq	12da0 <argp_parse@@Base+0xa48>
   12d80:	mov	r3, #0
   12d84:	mov	lr, #1
   12d88:	mov	r4, r3
   12d8c:	mov	ip, r2
   12d90:	ldrb	r1, [r2], #1
   12d94:	cmp	r1, #0
   12d98:	bne	12da8 <argp_parse@@Base+0xa50>
   12d9c:	pop	{r4, pc}
   12da0:	mov	r2, r1
   12da4:	b	12d6c <argp_parse@@Base+0xa14>
   12da8:	cmp	r1, #47	; 0x2f
   12dac:	moveq	r3, lr
   12db0:	beq	12d8c <argp_parse@@Base+0xa34>
   12db4:	cmp	r3, #0
   12db8:	movne	r0, ip
   12dbc:	movne	r3, r4
   12dc0:	b	12d8c <argp_parse@@Base+0xa34>
   12dc4:	push	{r4, lr}
   12dc8:	mov	r4, r0
   12dcc:	bl	111a8 <strlen@plt>
   12dd0:	cmp	r0, #1
   12dd4:	popls	{r4, pc}
   12dd8:	sub	r3, r0, #1
   12ddc:	ldrb	r2, [r4, r3]
   12de0:	cmp	r2, #47	; 0x2f
   12de4:	beq	12dec <argp_parse@@Base+0xa94>
   12de8:	pop	{r4, pc}
   12dec:	mov	r0, r3
   12df0:	b	12dd0 <argp_parse@@Base+0xa78>
   12df4:	push	{r0, r1, r2, r4, r5, lr}
   12df8:	mov	r5, r0
   12dfc:	bl	111d8 <__errno_location@plt>
   12e00:	ldr	r3, [r0]
   12e04:	mov	r4, r0
   12e08:	str	r3, [sp]
   12e0c:	str	r3, [sp, #4]
   12e10:	mov	r3, #0
   12e14:	str	r3, [r0]
   12e18:	mov	r0, r5
   12e1c:	bl	11064 <free@plt>
   12e20:	ldr	r3, [r4]
   12e24:	add	r2, sp, #8
   12e28:	cmp	r3, #0
   12e2c:	moveq	r3, #4
   12e30:	movne	r3, #0
   12e34:	add	r3, r2, r3
   12e38:	ldr	r3, [r3, #-8]
   12e3c:	str	r3, [r4]
   12e40:	add	sp, sp, #12
   12e44:	pop	{r4, r5, pc}
   12e48:	push	{r0, r1, r2, r3, r4, lr}
   12e4c:	mov	ip, #0
   12e50:	str	ip, [sp, #8]
   12e54:	str	ip, [sp, #4]
   12e58:	ldr	ip, [sp, #24]
   12e5c:	str	ip, [sp]
   12e60:	bl	16a84 <argp_error@@Base+0xae4>
   12e64:	add	sp, sp, #20
   12e68:	pop	{pc}		; (ldr pc, [sp], #4)
   12e6c:	push	{r0, r1, r2, r3, r4, lr}
   12e70:	mov	ip, #0
   12e74:	ldr	lr, [sp, #28]
   12e78:	str	ip, [sp, #12]
   12e7c:	stmib	sp, {ip, lr}
   12e80:	ldr	ip, [sp, #24]
   12e84:	str	ip, [sp]
   12e88:	bl	1658c <argp_error@@Base+0x5ec>
   12e8c:	add	sp, sp, #20
   12e90:	pop	{pc}		; (ldr pc, [sp], #4)
   12e94:	push	{r0, r1, r2, r3, r4, lr}
   12e98:	mov	ip, #1
   12e9c:	mov	lr, #0
   12ea0:	stmib	sp, {ip, lr}
   12ea4:	ldr	ip, [sp, #24]
   12ea8:	str	ip, [sp]
   12eac:	bl	16a84 <argp_error@@Base+0xae4>
   12eb0:	add	sp, sp, #20
   12eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb8:	push	{r0, r1, r2, r3, r4, lr}
   12ebc:	mov	ip, #0
   12ec0:	str	ip, [sp, #12]
   12ec4:	ldr	ip, [sp, #28]
   12ec8:	str	ip, [sp, #8]
   12ecc:	mov	ip, #1
   12ed0:	str	ip, [sp, #4]
   12ed4:	ldr	ip, [sp, #24]
   12ed8:	str	ip, [sp]
   12edc:	bl	1658c <argp_error@@Base+0x5ec>
   12ee0:	add	sp, sp, #20
   12ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ee8:	push	{r1, r2, r3}
   12eec:	push	{r0, r1, lr}
   12ef0:	add	r3, sp, #16
   12ef4:	ldr	r2, [sp, #16]
   12ef8:	ldr	r1, [sp, #12]
   12efc:	str	r3, [sp, #4]
   12f00:	bl	110f4 <ioctl@plt>
   12f04:	add	sp, sp, #8
   12f08:	pop	{lr}		; (ldr lr, [sp], #4)
   12f0c:	add	sp, sp, #12
   12f10:	bx	lr
   12f14:	push	{r4, r5, r6, lr}
   12f18:	subs	r5, r0, #0
   12f1c:	bne	12f34 <argp_parse@@Base+0xbdc>
   12f20:	ldr	r3, [pc, #124]	; 12fa4 <argp_parse@@Base+0xc4c>
   12f24:	ldr	r0, [pc, #124]	; 12fa8 <argp_parse@@Base+0xc50>
   12f28:	ldr	r1, [r3]
   12f2c:	bl	112a4 <fputs@plt>
   12f30:	bl	112bc <abort@plt>
   12f34:	mov	r1, #47	; 0x2f
   12f38:	bl	11244 <strrchr@plt>
   12f3c:	cmp	r0, #0
   12f40:	addne	r4, r0, #1
   12f44:	moveq	r4, r5
   12f48:	sub	r3, r4, r5
   12f4c:	cmp	r3, #6
   12f50:	ble	12f90 <argp_parse@@Base+0xc38>
   12f54:	mov	r2, #7
   12f58:	ldr	r1, [pc, #76]	; 12fac <argp_parse@@Base+0xc54>
   12f5c:	sub	r0, r4, #7
   12f60:	bl	112b0 <strncmp@plt>
   12f64:	cmp	r0, #0
   12f68:	bne	12f90 <argp_parse@@Base+0xc38>
   12f6c:	mov	r2, #3
   12f70:	ldr	r1, [pc, #56]	; 12fb0 <argp_parse@@Base+0xc58>
   12f74:	mov	r0, r4
   12f78:	bl	112b0 <strncmp@plt>
   12f7c:	cmp	r0, #0
   12f80:	movne	r5, r4
   12f84:	ldreq	r3, [pc, #40]	; 12fb4 <argp_parse@@Base+0xc5c>
   12f88:	addeq	r5, r4, #3
   12f8c:	streq	r5, [r3]
   12f90:	ldr	r3, [pc, #32]	; 12fb8 <argp_parse@@Base+0xc60>
   12f94:	str	r5, [r3]
   12f98:	ldr	r3, [pc, #28]	; 12fbc <argp_parse@@Base+0xc64>
   12f9c:	str	r5, [r3]
   12fa0:	pop	{r4, r5, r6, pc}
   12fa4:	andeq	r8, r2, r0, asr #4
   12fa8:	andeq	r7, r1, r2, lsr #13
   12fac:	ldrdeq	r7, [r1], -sl
   12fb0:	andeq	r7, r1, r2, ror #13
   12fb4:	andeq	r8, r2, r8, lsr r2
   12fb8:	andeq	r8, r2, r0, ror r2
   12fbc:	andeq	r8, r2, ip, lsr r2
   12fc0:	push	{r4, r5, r6, lr}
   12fc4:	sub	sp, sp, #32
   12fc8:	cmp	r1, #0
   12fcc:	mov	r5, r0
   12fd0:	ldr	r4, [sp, #48]	; 0x30
   12fd4:	ldr	r6, [sp, #52]	; 0x34
   12fd8:	beq	13060 <argp_parse@@Base+0xd08>
   12fdc:	str	r3, [sp]
   12fe0:	mov	r3, r2
   12fe4:	mov	r2, r1
   12fe8:	ldr	r1, [pc, #616]	; 13258 <argp_parse@@Base+0xf00>
   12fec:	bl	111c0 <fprintf@plt>
   12ff0:	ldr	r3, [pc, #612]	; 1325c <argp_parse@@Base+0xf04>
   12ff4:	ldr	r2, [pc, #612]	; 13260 <argp_parse@@Base+0xf08>
   12ff8:	ldr	r1, [pc, #612]	; 13264 <argp_parse@@Base+0xf0c>
   12ffc:	mov	r0, r5
   13000:	bl	111c0 <fprintf@plt>
   13004:	mov	r1, r5
   13008:	mov	r0, #10
   1300c:	bl	1125c <fputc@plt>
   13010:	ldr	r1, [pc, #592]	; 13268 <argp_parse@@Base+0xf10>
   13014:	ldr	r2, [pc, #592]	; 1326c <argp_parse@@Base+0xf14>
   13018:	mov	r0, r5
   1301c:	bl	111c0 <fprintf@plt>
   13020:	mov	r1, r5
   13024:	mov	r0, #10
   13028:	bl	1125c <fputc@plt>
   1302c:	cmp	r6, #9
   13030:	ldrls	pc, [pc, r6, lsl #2]
   13034:	b	13214 <argp_parse@@Base+0xebc>
   13038:	andeq	r3, r1, ip, lsl #2
   1303c:	andeq	r3, r1, ip, rrx
   13040:	andeq	r3, r1, r4, lsl #1
   13044:	muleq	r1, ip, r0
   13048:	strheq	r3, [r1], -ip
   1304c:	andeq	r3, r1, r4, ror #1
   13050:	andeq	r3, r1, r4, lsl r1
   13054:	andeq	r3, r1, r8, asr #2
   13058:	andeq	r3, r1, r4, lsl #3
   1305c:	andeq	r3, r1, r8, asr #3
   13060:	ldr	r1, [pc, #520]	; 13270 <argp_parse@@Base+0xf18>
   13064:	bl	111c0 <fprintf@plt>
   13068:	b	12ff0 <argp_parse@@Base+0xc98>
   1306c:	ldr	r2, [r4]
   13070:	ldr	r1, [pc, #508]	; 13274 <argp_parse@@Base+0xf1c>
   13074:	mov	r0, r5
   13078:	add	sp, sp, #32
   1307c:	pop	{r4, r5, r6, lr}
   13080:	b	111c0 <fprintf@plt>
   13084:	ldm	r4, {r2, r3}
   13088:	ldr	r1, [pc, #488]	; 13278 <argp_parse@@Base+0xf20>
   1308c:	mov	r0, r5
   13090:	add	sp, sp, #32
   13094:	pop	{r4, r5, r6, lr}
   13098:	b	111c0 <fprintf@plt>
   1309c:	ldr	r3, [r4, #8]
   130a0:	ldr	r1, [pc, #468]	; 1327c <argp_parse@@Base+0xf24>
   130a4:	str	r3, [sp, #48]	; 0x30
   130a8:	mov	r0, r5
   130ac:	ldm	r4, {r2, r3}
   130b0:	add	sp, sp, #32
   130b4:	pop	{r4, r5, r6, lr}
   130b8:	b	111c0 <fprintf@plt>
   130bc:	ldr	r3, [r4, #12]
   130c0:	ldr	r1, [pc, #440]	; 13280 <argp_parse@@Base+0xf28>
   130c4:	str	r3, [sp, #52]	; 0x34
   130c8:	ldr	r3, [r4, #8]
   130cc:	mov	r0, r5
   130d0:	str	r3, [sp, #48]	; 0x30
   130d4:	ldm	r4, {r2, r3}
   130d8:	add	sp, sp, #32
   130dc:	pop	{r4, r5, r6, lr}
   130e0:	b	111c0 <fprintf@plt>
   130e4:	ldr	r3, [r4, #16]
   130e8:	ldr	r1, [pc, #404]	; 13284 <argp_parse@@Base+0xf2c>
   130ec:	str	r3, [sp, #8]
   130f0:	ldr	r3, [r4, #12]
   130f4:	mov	r0, r5
   130f8:	str	r3, [sp, #4]
   130fc:	ldr	r3, [r4, #8]
   13100:	str	r3, [sp]
   13104:	ldm	r4, {r2, r3}
   13108:	bl	111c0 <fprintf@plt>
   1310c:	add	sp, sp, #32
   13110:	pop	{r4, r5, r6, pc}
   13114:	ldr	r3, [r4, #20]
   13118:	ldr	r1, [pc, #360]	; 13288 <argp_parse@@Base+0xf30>
   1311c:	str	r3, [sp, #12]
   13120:	ldr	r3, [r4, #16]
   13124:	mov	r0, r5
   13128:	str	r3, [sp, #8]
   1312c:	ldr	r3, [r4, #12]
   13130:	str	r3, [sp, #4]
   13134:	ldr	r3, [r4, #8]
   13138:	str	r3, [sp]
   1313c:	ldm	r4, {r2, r3}
   13140:	bl	111c0 <fprintf@plt>
   13144:	b	1310c <argp_parse@@Base+0xdb4>
   13148:	ldr	r3, [r4, #24]
   1314c:	ldr	r1, [pc, #312]	; 1328c <argp_parse@@Base+0xf34>
   13150:	str	r3, [sp, #16]
   13154:	ldr	r3, [r4, #20]
   13158:	mov	r0, r5
   1315c:	str	r3, [sp, #12]
   13160:	ldr	r3, [r4, #16]
   13164:	str	r3, [sp, #8]
   13168:	ldr	r3, [r4, #12]
   1316c:	str	r3, [sp, #4]
   13170:	ldr	r3, [r4, #8]
   13174:	str	r3, [sp]
   13178:	ldm	r4, {r2, r3}
   1317c:	bl	111c0 <fprintf@plt>
   13180:	b	1310c <argp_parse@@Base+0xdb4>
   13184:	ldr	r3, [r4, #28]
   13188:	ldr	r1, [pc, #256]	; 13290 <argp_parse@@Base+0xf38>
   1318c:	str	r3, [sp, #20]
   13190:	ldr	r3, [r4, #24]
   13194:	mov	r0, r5
   13198:	str	r3, [sp, #16]
   1319c:	ldr	r3, [r4, #20]
   131a0:	str	r3, [sp, #12]
   131a4:	ldr	r3, [r4, #16]
   131a8:	str	r3, [sp, #8]
   131ac:	ldr	r3, [r4, #12]
   131b0:	str	r3, [sp, #4]
   131b4:	ldr	r3, [r4, #8]
   131b8:	str	r3, [sp]
   131bc:	ldm	r4, {r2, r3}
   131c0:	bl	111c0 <fprintf@plt>
   131c4:	b	1310c <argp_parse@@Base+0xdb4>
   131c8:	ldr	r3, [r4, #32]
   131cc:	ldr	r1, [pc, #192]	; 13294 <argp_parse@@Base+0xf3c>
   131d0:	str	r3, [sp, #24]
   131d4:	ldr	r3, [r4, #28]
   131d8:	str	r3, [sp, #20]
   131dc:	ldr	r3, [r4, #24]
   131e0:	str	r3, [sp, #16]
   131e4:	ldr	r3, [r4, #20]
   131e8:	str	r3, [sp, #12]
   131ec:	ldr	r3, [r4, #16]
   131f0:	str	r3, [sp, #8]
   131f4:	ldr	r3, [r4, #12]
   131f8:	str	r3, [sp, #4]
   131fc:	ldr	r3, [r4, #8]
   13200:	str	r3, [sp]
   13204:	ldm	r4, {r2, r3}
   13208:	mov	r0, r5
   1320c:	bl	111c0 <fprintf@plt>
   13210:	b	1310c <argp_parse@@Base+0xdb4>
   13214:	ldr	r3, [r4, #32]
   13218:	ldr	r1, [pc, #120]	; 13298 <argp_parse@@Base+0xf40>
   1321c:	str	r3, [sp, #24]
   13220:	ldr	r3, [r4, #28]
   13224:	str	r3, [sp, #20]
   13228:	ldr	r3, [r4, #24]
   1322c:	str	r3, [sp, #16]
   13230:	ldr	r3, [r4, #20]
   13234:	str	r3, [sp, #12]
   13238:	ldr	r3, [r4, #16]
   1323c:	str	r3, [sp, #8]
   13240:	ldr	r3, [r4, #12]
   13244:	str	r3, [sp, #4]
   13248:	ldr	r3, [r4, #8]
   1324c:	str	r3, [sp]
   13250:	ldm	r4, {r2, r3}
   13254:	b	13208 <argp_parse@@Base+0xeb0>
   13258:	andeq	r7, r1, r6, ror #13
   1325c:	andeq	r0, r0, r6, ror #15
   13260:	strdeq	r7, [r1], -r9
   13264:	andeq	r7, r1, lr, ror #19
   13268:	andeq	r7, r1, pc, lsl r7
   1326c:	strdeq	r7, [r1], -sp
   13270:	strdeq	r7, [r1], -r2
   13274:	andeq	r7, r1, sl, asr #15
   13278:	ldrdeq	r7, [r1], -sl
   1327c:	strdeq	r7, [r1], -r1
   13280:	andeq	r7, r1, sp, lsl #16
   13284:	andeq	r7, r1, sp, lsr #16
   13288:	andeq	r7, r1, r1, asr r8
   1328c:	andeq	r7, r1, r9, ror r8
   13290:	andeq	r7, r1, r5, lsr #17
   13294:	ldrdeq	r7, [r1], -r5
   13298:	andeq	r7, r1, r9, lsl #18
   1329c:	push	{r0, r1, r4, lr}
   132a0:	mov	ip, #0
   132a4:	ldr	lr, [sp, #16]
   132a8:	ldr	r4, [lr, ip, lsl #2]
   132ac:	cmp	r4, #0
   132b0:	bne	132c8 <argp_parse@@Base+0xf70>
   132b4:	str	ip, [sp, #4]
   132b8:	str	lr, [sp]
   132bc:	bl	12fc0 <argp_parse@@Base+0xc68>
   132c0:	add	sp, sp, #8
   132c4:	pop	{r4, pc}
   132c8:	add	ip, ip, #1
   132cc:	b	132a8 <argp_parse@@Base+0xf50>
   132d0:	push	{r4, r5, lr}
   132d4:	sub	sp, sp, #52	; 0x34
   132d8:	mov	ip, #0
   132dc:	ldr	r5, [sp, #64]	; 0x40
   132e0:	add	lr, sp, #8
   132e4:	ldr	r4, [r5, ip, lsl #2]
   132e8:	cmp	r4, #0
   132ec:	str	r4, [lr, ip, lsl #2]
   132f0:	beq	13300 <argp_parse@@Base+0xfa8>
   132f4:	add	ip, ip, #1
   132f8:	cmp	ip, #10
   132fc:	bne	132e4 <argp_parse@@Base+0xf8c>
   13300:	str	ip, [sp, #4]
   13304:	str	lr, [sp]
   13308:	bl	12fc0 <argp_parse@@Base+0xc68>
   1330c:	add	sp, sp, #52	; 0x34
   13310:	pop	{r4, r5, pc}
   13314:	push	{r3}		; (str r3, [sp, #-4]!)
   13318:	push	{r0, r1, r2, r3, lr}
   1331c:	add	r3, sp, #24
   13320:	str	r3, [sp, #12]
   13324:	str	r3, [sp]
   13328:	ldr	r3, [sp, #20]
   1332c:	bl	132d0 <argp_parse@@Base+0xf78>
   13330:	add	sp, sp, #16
   13334:	pop	{lr}		; (ldr lr, [sp], #4)
   13338:	add	sp, sp, #4
   1333c:	bx	lr
   13340:	ldr	r3, [pc, #56]	; 13380 <argp_parse@@Base+0x1028>
   13344:	push	{r4, lr}
   13348:	mov	r0, #10
   1334c:	ldr	r1, [r3]
   13350:	bl	1125c <fputc@plt>
   13354:	ldr	r1, [pc, #40]	; 13384 <argp_parse@@Base+0x102c>
   13358:	ldr	r0, [pc, #40]	; 13388 <argp_parse@@Base+0x1030>
   1335c:	bl	1101c <printf@plt>
   13360:	ldr	r1, [pc, #36]	; 1338c <argp_parse@@Base+0x1034>
   13364:	ldr	r2, [pc, #36]	; 13390 <argp_parse@@Base+0x1038>
   13368:	ldr	r0, [pc, #36]	; 13394 <argp_parse@@Base+0x103c>
   1336c:	bl	1101c <printf@plt>
   13370:	ldr	r1, [pc, #32]	; 13398 <argp_parse@@Base+0x1040>
   13374:	ldr	r0, [pc, #32]	; 1339c <argp_parse@@Base+0x1044>
   13378:	pop	{r4, lr}
   1337c:	b	1101c <printf@plt>
   13380:	andeq	r8, r2, r4, asr #4
   13384:	andeq	r7, r1, r5, asr #18
   13388:	andeq	r7, r1, fp, asr r9
   1338c:	muleq	r1, r4, r6
   13390:	andeq	r7, r1, pc, ror #18
   13394:	muleq	r1, r6, r9
   13398:	andeq	r7, r1, sl, lsr #19
   1339c:	andeq	r7, r1, r7, asr #19
   133a0:	cmp	r0, #0
   133a4:	mov	r3, #0
   133a8:	moveq	r0, #1
   133ac:	adds	r3, r3, #0
   133b0:	movne	r3, #1
   133b4:	cmp	r0, #0
   133b8:	blt	133c8 <argp_parse@@Base+0x1070>
   133bc:	cmp	r3, #0
   133c0:	bne	133c8 <argp_parse@@Base+0x1070>
   133c4:	b	11124 <malloc@plt>
   133c8:	push	{r4, lr}
   133cc:	bl	111d8 <__errno_location@plt>
   133d0:	mov	r3, #12
   133d4:	str	r3, [r0]
   133d8:	mov	r0, #0
   133dc:	pop	{r4, pc}
   133e0:	ldr	r2, [r0, #4]
   133e4:	ldr	r3, [r0]
   133e8:	cmp	r2, #0
   133ec:	add	r3, r3, #24
   133f0:	bne	133fc <argp_parse@@Base+0x10a4>
   133f4:	mov	r0, r2
   133f8:	bx	lr
   133fc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13400:	cmp	r0, #0
   13404:	beq	13414 <argp_parse@@Base+0x10bc>
   13408:	ldr	r1, [r3, #-12]
   1340c:	tst	r1, #2
   13410:	bxeq	lr
   13414:	sub	r2, r2, #1
   13418:	b	133e8 <argp_parse@@Base+0x1090>
   1341c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13420:	mov	sl, r3
   13424:	ldm	r0, {r5, r6, r7}
   13428:	mov	r3, #0
   1342c:	sub	sp, sp, #20
   13430:	mov	r8, r1
   13434:	mov	r9, r2
   13438:	mov	r4, r5
   1343c:	mov	fp, r3
   13440:	adds	r2, r6, #0
   13444:	movne	r2, #1
   13448:	cmp	r3, #0
   1344c:	movne	r2, #0
   13450:	cmp	r2, #0
   13454:	bne	13464 <argp_parse@@Base+0x110c>
   13458:	mov	r0, r3
   1345c:	add	sp, sp, #20
   13460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13464:	ldr	r2, [r4, #12]
   13468:	ands	r3, r2, #8
   1346c:	str	r2, [sp, #12]
   13470:	movne	r3, fp
   13474:	bne	134b4 <argp_parse@@Base+0x115c>
   13478:	ldr	r1, [r4, #4]
   1347c:	sub	r0, r1, #1
   13480:	cmp	r0, #254	; 0xfe
   13484:	str	r1, [sp, #8]
   13488:	bhi	134b4 <argp_parse@@Base+0x115c>
   1348c:	str	r3, [sp, #4]
   13490:	bl	11190 <__ctype_b_loc@plt>
   13494:	ldr	r1, [sp, #8]
   13498:	ldr	r3, [sp, #4]
   1349c:	ldr	r2, [sp, #12]
   134a0:	ldr	ip, [r0]
   134a4:	lsl	r0, r1, #1
   134a8:	ldrh	r0, [ip, r0]
   134ac:	tst	r0, #16384	; 0x4000
   134b0:	bne	134c0 <argp_parse@@Base+0x1168>
   134b4:	add	r4, r4, #24
   134b8:	sub	r6, r6, #1
   134bc:	b	13440 <argp_parse@@Base+0x10e8>
   134c0:	ldrb	r0, [r7]
   134c4:	cmp	r0, r1
   134c8:	bne	134b4 <argp_parse@@Base+0x115c>
   134cc:	tst	r2, #4
   134d0:	moveq	r5, r4
   134d4:	tst	r2, #2
   134d8:	bne	134f4 <argp_parse@@Base+0x119c>
   134dc:	mov	r3, sl
   134e0:	mov	r2, r9
   134e4:	mov	r1, r5
   134e8:	mov	r0, r4
   134ec:	blx	r8
   134f0:	mov	r3, r0
   134f4:	add	r7, r7, #1
   134f8:	b	134b4 <argp_parse@@Base+0x115c>
   134fc:	ldr	r3, [r0, #12]
   13500:	ands	r3, r3, #8
   13504:	bne	1353c <argp_parse@@Base+0x11e4>
   13508:	push	{r4, lr}
   1350c:	ldr	r4, [r0, #4]
   13510:	sub	r2, r4, #1
   13514:	cmp	r2, #254	; 0xfe
   13518:	bhi	13534 <argp_parse@@Base+0x11dc>
   1351c:	bl	11190 <__ctype_b_loc@plt>
   13520:	lsl	r3, r4, #1
   13524:	ldr	r2, [r0]
   13528:	ldrh	r3, [r2, r3]
   1352c:	ands	r3, r3, #16384	; 0x4000
   13530:	movne	r3, r4
   13534:	mov	r0, r3
   13538:	pop	{r4, pc}
   1353c:	mov	r3, #0
   13540:	mov	r0, r3
   13544:	bx	lr
   13548:	push	{r4, lr}
   1354c:	mov	r4, r0
   13550:	bl	11190 <__ctype_b_loc@plt>
   13554:	ldr	r1, [r0]
   13558:	ldr	r3, [r4]
   1355c:	ldrb	r0, [r3]
   13560:	lsl	r2, r0, #1
   13564:	ldrh	r2, [r1, r2]
   13568:	tst	r2, #8192	; 0x2000
   1356c:	bne	1359c <argp_parse@@Base+0x1244>
   13570:	subs	r0, r0, #45	; 0x2d
   13574:	movne	r0, #1
   13578:	ldr	r2, [r4]
   1357c:	ldrb	r3, [r2]
   13580:	cmp	r3, #0
   13584:	popeq	{r4, pc}
   13588:	lsl	r3, r3, #1
   1358c:	ldrh	r3, [r1, r3]
   13590:	tst	r3, #8
   13594:	beq	135a8 <argp_parse@@Base+0x1250>
   13598:	pop	{r4, pc}
   1359c:	add	r3, r3, #1
   135a0:	str	r3, [r4]
   135a4:	b	13558 <argp_parse@@Base+0x1200>
   135a8:	add	r2, r2, #1
   135ac:	str	r2, [r4]
   135b0:	b	13578 <argp_parse@@Base+0x1220>
   135b4:	push	{r4, r5, r6, lr}
   135b8:	mov	r4, r0
   135bc:	ldr	r0, [r0, #12]
   135c0:	cmp	r0, #0
   135c4:	bne	135f0 <argp_parse@@Base+0x1298>
   135c8:	ldr	r3, [r4, #4]
   135cc:	cmp	r3, #0
   135d0:	beq	135e4 <argp_parse@@Base+0x128c>
   135d4:	ldr	r0, [r4]
   135d8:	bl	12df4 <argp_parse@@Base+0xa9c>
   135dc:	ldr	r0, [r4, #8]
   135e0:	bl	12df4 <argp_parse@@Base+0xa9c>
   135e4:	mov	r0, r4
   135e8:	pop	{r4, r5, r6, lr}
   135ec:	b	12df4 <argp_parse@@Base+0xa9c>
   135f0:	ldr	r5, [r0, #24]
   135f4:	bl	12df4 <argp_parse@@Base+0xa9c>
   135f8:	mov	r0, r5
   135fc:	b	135c0 <argp_parse@@Base+0x1268>
   13600:	push	{r4, r5, r6, lr}
   13604:	ldr	r5, [r0, #16]
   13608:	ldr	r0, [r0, #8]
   1360c:	cmp	r0, #0
   13610:	beq	13624 <argp_parse@@Base+0x12cc>
   13614:	mov	r1, #10
   13618:	bl	111b4 <strchr@plt>
   1361c:	adds	r0, r0, #0
   13620:	movne	r0, #1
   13624:	cmp	r5, #0
   13628:	mov	r4, r0
   1362c:	addne	r5, r5, #16
   13630:	bne	13644 <argp_parse@@Base+0x12ec>
   13634:	mov	r0, r4
   13638:	pop	{r4, r5, r6, pc}
   1363c:	bl	13600 <argp_parse@@Base+0x12a8>
   13640:	add	r4, r4, r0
   13644:	add	r5, r5, #16
   13648:	ldr	r0, [r5, #-32]	; 0xffffffe0
   1364c:	cmp	r0, #0
   13650:	bne	1363c <argp_parse@@Base+0x12e4>
   13654:	b	13634 <argp_parse@@Base+0x12dc>
   13658:	ldr	r2, [r0, #24]
   1365c:	ldr	r3, [r0, #28]
   13660:	push	{r4, r5, r6, r7, r8, lr}
   13664:	sub	r3, r3, r2
   13668:	ldr	r2, [r0, #16]
   1366c:	mov	r4, r0
   13670:	cmp	r3, r2
   13674:	mov	r5, r1
   13678:	bls	13680 <argp_parse@@Base+0x1328>
   1367c:	bl	16b90 <argp_error@@Base+0xbf0>
   13680:	ldr	r1, [r4, #20]
   13684:	mov	r6, #1
   13688:	cmp	r1, #0
   1368c:	subge	r5, r5, r1
   13690:	mov	r7, #32
   13694:	cmp	r5, #0
   13698:	bgt	136a0 <argp_parse@@Base+0x1348>
   1369c:	pop	{r4, r5, r6, r7, r8, pc}
   136a0:	ldr	r2, [r4, #28]
   136a4:	ldr	r3, [r4, #32]
   136a8:	cmp	r2, r3
   136ac:	bcs	136c8 <argp_parse@@Base+0x1370>
   136b0:	ldr	r3, [r4, #28]
   136b4:	add	r2, r3, #1
   136b8:	str	r2, [r4, #28]
   136bc:	strb	r7, [r3]
   136c0:	sub	r5, r5, #1
   136c4:	b	13694 <argp_parse@@Base+0x133c>
   136c8:	mov	r1, r6
   136cc:	mov	r0, r4
   136d0:	bl	16fe0 <argp_error@@Base+0x1040>
   136d4:	cmp	r0, #0
   136d8:	bne	136b0 <argp_parse@@Base+0x1358>
   136dc:	b	136c0 <argp_parse@@Base+0x1368>
   136e0:	push	{r4, r5, r6, lr}
   136e4:	subs	r4, r2, #0
   136e8:	popeq	{r4, r5, r6, pc}
   136ec:	ldr	r2, [r4, #20]
   136f0:	cmp	r2, #0
   136f4:	popeq	{r4, r5, r6, pc}
   136f8:	mov	r6, r1
   136fc:	mov	r5, r0
   13700:	mov	r1, r3
   13704:	mov	r0, r4
   13708:	bl	12cd0 <argp_parse@@Base+0x978>
   1370c:	ldr	r3, [r4, #20]
   13710:	mov	r1, r5
   13714:	mov	r2, r0
   13718:	mov	r0, r6
   1371c:	pop	{r4, r5, r6, lr}
   13720:	bx	r3
   13724:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13728:	mov	r4, r2
   1372c:	ldr	r3, [r2, #16]
   13730:	mov	r2, r1
   13734:	ldr	r1, [pc, #440]	; 138f4 <argp_parse@@Base+0x159c>
   13738:	mov	r7, r0
   1373c:	bl	136e0 <argp_parse@@Base+0x1388>
   13740:	subs	r6, r0, #0
   13744:	beq	13898 <argp_parse@@Base+0x1540>
   13748:	ldrb	r3, [r6]
   1374c:	cmp	r3, #0
   13750:	beq	1388c <argp_parse@@Base+0x1534>
   13754:	ldr	r3, [r4, #8]
   13758:	ldr	r3, [r3]
   1375c:	cmp	r3, #0
   13760:	beq	1378c <argp_parse@@Base+0x1434>
   13764:	ldr	r5, [r4, #4]
   13768:	ldr	r2, [r5, #28]
   1376c:	ldr	r3, [r5, #32]
   13770:	cmp	r2, r3
   13774:	bcs	138ac <argp_parse@@Base+0x1554>
   13778:	ldr	r3, [r5, #28]
   1377c:	add	r2, r3, #1
   13780:	str	r2, [r5, #28]
   13784:	mov	r2, #10
   13788:	strb	r2, [r3]
   1378c:	ldr	r8, [pc, #356]	; 138f8 <argp_parse@@Base+0x15a0>
   13790:	ldr	r0, [r4, #4]
   13794:	ldr	r1, [r8, #24]
   13798:	bl	13658 <argp_parse@@Base+0x1300>
   1379c:	ldr	r9, [r4, #4]
   137a0:	ldr	sl, [r8, #24]
   137a4:	ldr	r2, [r9, #24]
   137a8:	ldr	r3, [r9, #28]
   137ac:	sub	r3, r3, r2
   137b0:	ldr	r2, [r9, #16]
   137b4:	cmp	r3, r2
   137b8:	bls	137c4 <argp_parse@@Base+0x146c>
   137bc:	mov	r0, r9
   137c0:	bl	16b90 <argp_error@@Base+0xbf0>
   137c4:	ldr	r5, [r4, #4]
   137c8:	str	sl, [r9, #4]
   137cc:	ldr	r8, [r8, #24]
   137d0:	ldr	r2, [r5, #24]
   137d4:	ldr	r3, [r5, #28]
   137d8:	sub	r3, r3, r2
   137dc:	ldr	r2, [r5, #16]
   137e0:	cmp	r3, r2
   137e4:	bls	137f0 <argp_parse@@Base+0x1498>
   137e8:	mov	r0, r5
   137ec:	bl	16b90 <argp_error@@Base+0xbf0>
   137f0:	str	r8, [r5, #12]
   137f4:	mov	r0, r6
   137f8:	bl	111a8 <strlen@plt>
   137fc:	subs	r8, r0, #0
   13800:	beq	13838 <argp_parse@@Base+0x14e0>
   13804:	ldr	r5, [r4, #4]
   13808:	ldr	r3, [r5, #28]
   1380c:	ldr	r2, [r5, #32]
   13810:	add	r3, r3, r8
   13814:	cmp	r2, r3
   13818:	bcc	138c4 <argp_parse@@Base+0x156c>
   1381c:	mov	r2, r8
   13820:	mov	r1, r6
   13824:	ldr	r0, [r5, #28]
   13828:	bl	1107c <memcpy@plt>
   1382c:	ldr	r3, [r5, #28]
   13830:	add	r8, r3, r8
   13834:	str	r8, [r5, #28]
   13838:	ldr	r5, [r4, #4]
   1383c:	ldr	r2, [r5, #24]
   13840:	ldr	r3, [r5, #28]
   13844:	sub	r3, r3, r2
   13848:	ldr	r2, [r5, #16]
   1384c:	cmp	r3, r2
   13850:	bls	1385c <argp_parse@@Base+0x1504>
   13854:	mov	r0, r5
   13858:	bl	16b90 <argp_error@@Base+0xbf0>
   1385c:	mov	r3, #0
   13860:	str	r3, [r5, #4]
   13864:	ldr	r5, [r4, #4]
   13868:	ldr	r2, [r5, #28]
   1386c:	ldr	r3, [r5, #32]
   13870:	cmp	r2, r3
   13874:	bcs	138dc <argp_parse@@Base+0x1584>
   13878:	ldr	r3, [r5, #28]
   1387c:	add	r2, r3, #1
   13880:	str	r2, [r5, #28]
   13884:	mov	r2, #10
   13888:	strb	r2, [r3]
   1388c:	ldr	r3, [r4, #8]
   13890:	mov	r2, #1
   13894:	str	r2, [r3, #4]
   13898:	cmp	r7, r6
   1389c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   138a0:	mov	r0, r6
   138a4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   138a8:	b	12df4 <argp_parse@@Base+0xa9c>
   138ac:	mov	r1, #1
   138b0:	mov	r0, r5
   138b4:	bl	16fe0 <argp_error@@Base+0x1040>
   138b8:	cmp	r0, #0
   138bc:	bne	13778 <argp_parse@@Base+0x1420>
   138c0:	b	1378c <argp_parse@@Base+0x1434>
   138c4:	mov	r1, r8
   138c8:	mov	r0, r5
   138cc:	bl	16fe0 <argp_error@@Base+0x1040>
   138d0:	cmp	r0, #0
   138d4:	bne	1381c <argp_parse@@Base+0x14c4>
   138d8:	b	13838 <argp_parse@@Base+0x14e0>
   138dc:	mov	r1, #1
   138e0:	mov	r0, r5
   138e4:	bl	16fe0 <argp_error@@Base+0x1040>
   138e8:	cmp	r0, #0
   138ec:	bne	13878 <argp_parse@@Base+0x1520>
   138f0:	b	1388c <argp_parse@@Base+0x1534>
   138f4:	andeq	r0, r0, #3
   138f8:	strdeq	r8, [r2], -ip
   138fc:	ldr	r3, [r1, #12]
   13900:	push	{r4, r5, r6, r7, r8, lr}
   13904:	cmp	r3, #0
   13908:	mov	r7, r0
   1390c:	mov	r4, r1
   13910:	beq	13a28 <argp_parse@@Base+0x16d0>
   13914:	ldr	r2, [r1, #8]
   13918:	ldr	r3, [r1]
   1391c:	ldr	r8, [r2]
   13920:	ldr	r2, [r2, #4]
   13924:	ldr	r5, [r3, #16]
   13928:	cmp	r2, #0
   1392c:	cmpne	r8, #0
   13930:	beq	1396c <argp_parse@@Base+0x1614>
   13934:	ldr	r2, [r3, #12]
   13938:	ldr	r3, [r8, #12]
   1393c:	cmp	r2, r3
   13940:	beq	1396c <argp_parse@@Base+0x1614>
   13944:	ldr	r6, [r1, #4]
   13948:	ldr	r2, [r6, #28]
   1394c:	ldr	r3, [r6, #32]
   13950:	cmp	r2, r3
   13954:	bcs	13a08 <argp_parse@@Base+0x16b0>
   13958:	ldr	r3, [r6, #28]
   1395c:	add	r2, r3, #1
   13960:	str	r2, [r6, #28]
   13964:	mov	r2, #10
   13968:	strb	r2, [r3]
   1396c:	cmp	r5, #0
   13970:	beq	139f0 <argp_parse@@Base+0x1698>
   13974:	ldr	r0, [r5]
   13978:	cmp	r0, #0
   1397c:	beq	139f0 <argp_parse@@Base+0x1698>
   13980:	ldrb	r3, [r0]
   13984:	cmp	r3, #0
   13988:	beq	139f0 <argp_parse@@Base+0x1698>
   1398c:	cmp	r8, #0
   13990:	beq	139b4 <argp_parse@@Base+0x165c>
   13994:	ldr	r3, [r8, #16]
   13998:	cmp	r5, r3
   1399c:	beq	139f0 <argp_parse@@Base+0x1698>
   139a0:	cmp	r3, #0
   139a4:	cmpne	r5, r3
   139a8:	bne	13a20 <argp_parse@@Base+0x16c8>
   139ac:	cmp	r5, r3
   139b0:	beq	139f0 <argp_parse@@Base+0x1698>
   139b4:	ldr	r3, [r4, #4]
   139b8:	mov	r2, r4
   139bc:	ldr	r1, [r5, #16]
   139c0:	ldr	r6, [r3, #12]
   139c4:	bl	13724 <argp_parse@@Base+0x13cc>
   139c8:	ldr	r5, [r4, #4]
   139cc:	ldr	r2, [r5, #24]
   139d0:	ldr	r3, [r5, #28]
   139d4:	sub	r3, r3, r2
   139d8:	ldr	r2, [r5, #16]
   139dc:	cmp	r3, r2
   139e0:	bls	139ec <argp_parse@@Base+0x1694>
   139e4:	mov	r0, r5
   139e8:	bl	16b90 <argp_error@@Base+0xbf0>
   139ec:	str	r6, [r5, #12]
   139f0:	mov	r3, #0
   139f4:	str	r3, [r4, #12]
   139f8:	mov	r1, r7
   139fc:	ldr	r0, [r4, #4]
   13a00:	pop	{r4, r5, r6, r7, r8, lr}
   13a04:	b	13658 <argp_parse@@Base+0x1300>
   13a08:	mov	r1, #1
   13a0c:	mov	r0, r6
   13a10:	bl	16fe0 <argp_error@@Base+0x1040>
   13a14:	cmp	r0, #0
   13a18:	bne	13958 <argp_parse@@Base+0x1600>
   13a1c:	b	1396c <argp_parse@@Base+0x1614>
   13a20:	ldr	r3, [r3, #12]
   13a24:	b	139a0 <argp_parse@@Base+0x1648>
   13a28:	ldr	r5, [r1, #4]
   13a2c:	ldr	r3, [r5, #28]
   13a30:	ldr	r2, [r5, #32]
   13a34:	add	r3, r3, #2
   13a38:	cmp	r2, r3
   13a3c:	bcc	13a60 <argp_parse@@Base+0x1708>
   13a40:	ldr	r2, [pc, #48]	; 13a78 <argp_parse@@Base+0x1720>
   13a44:	ldr	r3, [r5, #28]
   13a48:	ldrh	r2, [r2]
   13a4c:	strh	r2, [r3]
   13a50:	ldr	r3, [r5, #28]
   13a54:	add	r3, r3, #2
   13a58:	str	r3, [r5, #28]
   13a5c:	b	139f8 <argp_parse@@Base+0x16a0>
   13a60:	mov	r1, #2
   13a64:	mov	r0, r5
   13a68:	bl	16fe0 <argp_error@@Base+0x1040>
   13a6c:	cmp	r0, #0
   13a70:	bne	13a40 <argp_parse@@Base+0x16e8>
   13a74:	b	139f8 <argp_parse@@Base+0x16a0>
   13a78:	andeq	r7, r1, r1, asr #21
   13a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a80:	sub	sp, sp, #28
   13a84:	ldr	r7, [r0, #12]
   13a88:	str	r3, [sp, #8]
   13a8c:	cmp	r7, #0
   13a90:	ldr	r3, [r0, #16]
   13a94:	moveq	r5, r7
   13a98:	mov	r8, r0
   13a9c:	str	r1, [sp, #16]
   13aa0:	mov	fp, r2
   13aa4:	ldr	r4, [sp, #68]	; 0x44
   13aa8:	str	r3, [sp, #12]
   13aac:	moveq	r6, r5
   13ab0:	beq	13af0 <argp_parse@@Base+0x1798>
   13ab4:	mov	r1, #11
   13ab8:	mov	r0, r7
   13abc:	bl	111b4 <strchr@plt>
   13ac0:	cmp	fp, #0
   13ac4:	moveq	r5, r7
   13ac8:	beq	13ad8 <argp_parse@@Base+0x1780>
   13acc:	cmp	r0, #0
   13ad0:	addne	r5, r0, #1
   13ad4:	moveq	r5, r0
   13ad8:	cmp	r0, #0
   13adc:	clz	r6, fp
   13ae0:	lsr	r6, r6, #5
   13ae4:	moveq	r6, #0
   13ae8:	cmp	r6, #0
   13aec:	subne	r6, r0, r7
   13af0:	ldr	r9, [r8, #20]
   13af4:	cmp	r9, #0
   13af8:	moveq	sl, r5
   13afc:	beq	13b50 <argp_parse@@Base+0x17f8>
   13b00:	cmp	r6, #0
   13b04:	beq	13b18 <argp_parse@@Base+0x17c0>
   13b08:	mov	r0, r5
   13b0c:	mov	r1, r6
   13b10:	bl	11070 <strndup@plt>
   13b14:	mov	r5, r0
   13b18:	ldr	r1, [sp, #16]
   13b1c:	mov	r0, r8
   13b20:	bl	12cd0 <argp_parse@@Base+0x978>
   13b24:	ldr	ip, [pc, #928]	; 13ecc <argp_parse@@Base+0x1b74>
   13b28:	cmp	fp, #0
   13b2c:	mov	r1, r5
   13b30:	ldr	r3, [r8, #20]
   13b34:	mov	sl, r5
   13b38:	mov	r2, r0
   13b3c:	mov	r9, r0
   13b40:	ldr	r0, [pc, #904]	; 13ed0 <argp_parse@@Base+0x1b78>
   13b44:	movne	r0, ip
   13b48:	blx	r3
   13b4c:	mov	r5, r0
   13b50:	cmp	r5, #0
   13b54:	moveq	r7, r5
   13b58:	beq	13c10 <argp_parse@@Base+0x18b8>
   13b5c:	ldr	r3, [sp, #8]
   13b60:	cmp	r3, #0
   13b64:	beq	13b8c <argp_parse@@Base+0x1834>
   13b68:	ldr	r2, [r4, #28]
   13b6c:	ldr	r3, [r4, #32]
   13b70:	cmp	r2, r3
   13b74:	bcs	13d3c <argp_parse@@Base+0x19e4>
   13b78:	ldr	r3, [r4, #28]
   13b7c:	add	r2, r3, #1
   13b80:	str	r2, [r4, #28]
   13b84:	mov	r2, #10
   13b88:	strb	r2, [r3]
   13b8c:	cmp	r6, #0
   13b90:	sub	r3, r5, sl
   13b94:	clz	r3, r3
   13b98:	lsr	r3, r3, #5
   13b9c:	moveq	r3, #0
   13ba0:	cmp	r3, #0
   13ba4:	ldr	r3, [r4, #28]
   13ba8:	beq	13d6c <argp_parse@@Base+0x1a14>
   13bac:	ldr	r2, [r4, #32]
   13bb0:	add	r3, r3, r6
   13bb4:	cmp	r2, r3
   13bb8:	bcc	13d54 <argp_parse@@Base+0x19fc>
   13bbc:	mov	r2, r6
   13bc0:	mov	r1, sl
   13bc4:	ldr	r0, [r4, #28]
   13bc8:	bl	1107c <memcpy@plt>
   13bcc:	ldr	r3, [r4, #28]
   13bd0:	add	r3, r3, r6
   13bd4:	str	r3, [r4, #28]
   13bd8:	ldr	r2, [r4, #24]
   13bdc:	ldr	r3, [r4, #28]
   13be0:	sub	r3, r3, r2
   13be4:	ldr	r2, [r4, #16]
   13be8:	cmp	r3, r2
   13bec:	bls	13bf8 <argp_parse@@Base+0x18a0>
   13bf0:	mov	r0, r4
   13bf4:	bl	16b90 <argp_error@@Base+0xbf0>
   13bf8:	ldr	r3, [r4, #20]
   13bfc:	ldr	r2, [r4, #4]
   13c00:	bic	r3, r3, r3, asr #31
   13c04:	cmp	r2, r3
   13c08:	bcc	13dcc <argp_parse@@Base+0x1a74>
   13c0c:	mov	r7, #1
   13c10:	cmp	r5, #0
   13c14:	cmpne	r5, sl
   13c18:	beq	13c24 <argp_parse@@Base+0x18cc>
   13c1c:	mov	r0, r5
   13c20:	bl	12df4 <argp_parse@@Base+0xa9c>
   13c24:	cmp	sl, #0
   13c28:	cmpne	r6, #0
   13c2c:	beq	13c44 <argp_parse@@Base+0x18ec>
   13c30:	ldr	r3, [r8, #20]
   13c34:	cmp	r3, #0
   13c38:	beq	13d20 <argp_parse@@Base+0x19c8>
   13c3c:	mov	r0, sl
   13c40:	bl	12df4 <argp_parse@@Base+0xa9c>
   13c44:	cmp	fp, #0
   13c48:	beq	13d20 <argp_parse@@Base+0x19c8>
   13c4c:	ldr	r3, [r8, #20]
   13c50:	cmp	r3, #0
   13c54:	beq	13d20 <argp_parse@@Base+0x19c8>
   13c58:	mov	r2, r9
   13c5c:	mov	r1, #0
   13c60:	ldr	r0, [pc, #620]	; 13ed4 <argp_parse@@Base+0x1b7c>
   13c64:	blx	r3
   13c68:	subs	r5, r0, #0
   13c6c:	beq	13d20 <argp_parse@@Base+0x19c8>
   13c70:	ldr	r3, [sp, #8]
   13c74:	orrs	r3, r7, r3
   13c78:	beq	13ca0 <argp_parse@@Base+0x1948>
   13c7c:	ldr	r2, [r4, #28]
   13c80:	ldr	r3, [r4, #32]
   13c84:	cmp	r2, r3
   13c88:	bcs	13e0c <argp_parse@@Base+0x1ab4>
   13c8c:	ldr	r3, [r4, #28]
   13c90:	add	r2, r3, #1
   13c94:	str	r2, [r4, #28]
   13c98:	mov	r2, #10
   13c9c:	strb	r2, [r3]
   13ca0:	mov	r0, r5
   13ca4:	bl	111a8 <strlen@plt>
   13ca8:	subs	r6, r0, #0
   13cac:	beq	13ce0 <argp_parse@@Base+0x1988>
   13cb0:	ldr	r3, [r4, #28]
   13cb4:	ldr	r2, [r4, #32]
   13cb8:	add	r3, r3, r6
   13cbc:	cmp	r2, r3
   13cc0:	bcc	13e24 <argp_parse@@Base+0x1acc>
   13cc4:	mov	r2, r6
   13cc8:	mov	r1, r5
   13ccc:	ldr	r0, [r4, #28]
   13cd0:	bl	1107c <memcpy@plt>
   13cd4:	ldr	r3, [r4, #28]
   13cd8:	add	r6, r3, r6
   13cdc:	str	r6, [r4, #28]
   13ce0:	mov	r0, r5
   13ce4:	bl	12df4 <argp_parse@@Base+0xa9c>
   13ce8:	ldr	r2, [r4, #24]
   13cec:	ldr	r3, [r4, #28]
   13cf0:	sub	r3, r3, r2
   13cf4:	ldr	r2, [r4, #16]
   13cf8:	cmp	r3, r2
   13cfc:	bls	13d08 <argp_parse@@Base+0x19b0>
   13d00:	mov	r0, r4
   13d04:	bl	16b90 <argp_error@@Base+0xbf0>
   13d08:	ldr	r3, [r4, #20]
   13d0c:	ldr	r2, [r4, #4]
   13d10:	bic	r3, r3, r3, asr #31
   13d14:	cmp	r2, r3
   13d18:	bcc	13e3c <argp_parse@@Base+0x1ae4>
   13d1c:	mov	r7, #1
   13d20:	ldr	r3, [sp, #12]
   13d24:	cmp	r3, #0
   13d28:	addne	r5, r3, #16
   13d2c:	bne	13ea8 <argp_parse@@Base+0x1b50>
   13d30:	mov	r0, r7
   13d34:	add	sp, sp, #28
   13d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d3c:	mov	r1, #1
   13d40:	mov	r0, r4
   13d44:	bl	16fe0 <argp_error@@Base+0x1040>
   13d48:	cmp	r0, #0
   13d4c:	bne	13b78 <argp_parse@@Base+0x1820>
   13d50:	b	13b8c <argp_parse@@Base+0x1834>
   13d54:	mov	r1, r6
   13d58:	mov	r0, r4
   13d5c:	bl	16fe0 <argp_error@@Base+0x1040>
   13d60:	cmp	r0, #0
   13d64:	bne	13bbc <argp_parse@@Base+0x1864>
   13d68:	b	13bd8 <argp_parse@@Base+0x1880>
   13d6c:	mov	r0, r5
   13d70:	str	r3, [sp, #20]
   13d74:	bl	111a8 <strlen@plt>
   13d78:	subs	r7, r0, #0
   13d7c:	beq	13bd8 <argp_parse@@Base+0x1880>
   13d80:	ldr	r3, [sp, #20]
   13d84:	ldr	r2, [r4, #32]
   13d88:	add	r3, r3, r7
   13d8c:	cmp	r2, r3
   13d90:	bcc	13db4 <argp_parse@@Base+0x1a5c>
   13d94:	mov	r2, r7
   13d98:	mov	r1, r5
   13d9c:	ldr	r0, [r4, #28]
   13da0:	bl	1107c <memcpy@plt>
   13da4:	ldr	r3, [r4, #28]
   13da8:	add	r7, r3, r7
   13dac:	str	r7, [r4, #28]
   13db0:	b	13bd8 <argp_parse@@Base+0x1880>
   13db4:	mov	r1, r7
   13db8:	mov	r0, r4
   13dbc:	bl	16fe0 <argp_error@@Base+0x1040>
   13dc0:	cmp	r0, #0
   13dc4:	bne	13d94 <argp_parse@@Base+0x1a3c>
   13dc8:	b	13bd8 <argp_parse@@Base+0x1880>
   13dcc:	ldr	r2, [r4, #28]
   13dd0:	ldr	r3, [r4, #32]
   13dd4:	cmp	r2, r3
   13dd8:	bcs	13df4 <argp_parse@@Base+0x1a9c>
   13ddc:	ldr	r3, [r4, #28]
   13de0:	add	r2, r3, #1
   13de4:	str	r2, [r4, #28]
   13de8:	mov	r2, #10
   13dec:	strb	r2, [r3]
   13df0:	b	13c0c <argp_parse@@Base+0x18b4>
   13df4:	mov	r1, #1
   13df8:	mov	r0, r4
   13dfc:	bl	16fe0 <argp_error@@Base+0x1040>
   13e00:	cmp	r0, #0
   13e04:	bne	13ddc <argp_parse@@Base+0x1a84>
   13e08:	b	13c0c <argp_parse@@Base+0x18b4>
   13e0c:	mov	r1, #1
   13e10:	mov	r0, r4
   13e14:	bl	16fe0 <argp_error@@Base+0x1040>
   13e18:	cmp	r0, #0
   13e1c:	bne	13c8c <argp_parse@@Base+0x1934>
   13e20:	b	13ca0 <argp_parse@@Base+0x1948>
   13e24:	mov	r1, r6
   13e28:	mov	r0, r4
   13e2c:	bl	16fe0 <argp_error@@Base+0x1040>
   13e30:	cmp	r0, #0
   13e34:	bne	13cc4 <argp_parse@@Base+0x196c>
   13e38:	b	13ce0 <argp_parse@@Base+0x1988>
   13e3c:	ldr	r2, [r4, #28]
   13e40:	ldr	r3, [r4, #32]
   13e44:	cmp	r2, r3
   13e48:	bcs	13e64 <argp_parse@@Base+0x1b0c>
   13e4c:	ldr	r3, [r4, #28]
   13e50:	add	r2, r3, #1
   13e54:	str	r2, [r4, #28]
   13e58:	mov	r2, #10
   13e5c:	strb	r2, [r3]
   13e60:	b	13d1c <argp_parse@@Base+0x19c4>
   13e64:	mov	r1, #1
   13e68:	mov	r0, r4
   13e6c:	bl	16fe0 <argp_error@@Base+0x1040>
   13e70:	cmp	r0, #0
   13e74:	bne	13e4c <argp_parse@@Base+0x1af4>
   13e78:	b	13d1c <argp_parse@@Base+0x19c4>
   13e7c:	ldr	r3, [sp, #8]
   13e80:	str	r4, [sp, #4]
   13e84:	orrs	r3, r7, r3
   13e88:	ldr	r3, [sp, #64]	; 0x40
   13e8c:	mov	r2, fp
   13e90:	str	r3, [sp]
   13e94:	ldr	r1, [sp, #16]
   13e98:	movne	r3, #1
   13e9c:	moveq	r3, #0
   13ea0:	bl	13a7c <argp_parse@@Base+0x1724>
   13ea4:	orr	r7, r7, r0
   13ea8:	ldr	r0, [r5, #-16]
   13eac:	cmp	r0, #0
   13eb0:	beq	13d30 <argp_parse@@Base+0x19d8>
   13eb4:	ldr	r3, [sp, #64]	; 0x40
   13eb8:	add	r5, r5, #16
   13ebc:	cmp	r7, #0
   13ec0:	cmpne	r3, #0
   13ec4:	beq	13e7c <argp_parse@@Base+0x1b24>
   13ec8:	b	13d30 <argp_parse@@Base+0x19d8>
   13ecc:	andeq	r0, r0, #2
   13ed0:	andeq	r0, r0, #1
   13ed4:	andeq	r0, r0, #4
   13ed8:	ldr	r2, [r0, #24]
   13edc:	ldr	r3, [r0, #28]
   13ee0:	push	{r4, r5, r6, lr}
   13ee4:	sub	r3, r3, r2
   13ee8:	ldr	r2, [r0, #16]
   13eec:	mov	r4, r0
   13ef0:	cmp	r3, r2
   13ef4:	mov	r5, r1
   13ef8:	bls	13f00 <argp_parse@@Base+0x1ba8>
   13efc:	bl	16b90 <argp_error@@Base+0xbf0>
   13f00:	ldr	r1, [r4, #20]
   13f04:	ldr	r3, [r4, #8]
   13f08:	cmp	r1, #0
   13f0c:	addge	r5, r5, r1
   13f10:	cmp	r5, r3
   13f14:	ldr	r2, [r4, #28]
   13f18:	ldr	r3, [r4, #32]
   13f1c:	bcc	13f58 <argp_parse@@Base+0x1c00>
   13f20:	cmp	r2, r3
   13f24:	bcs	13f40 <argp_parse@@Base+0x1be8>
   13f28:	ldr	r3, [r4, #28]
   13f2c:	add	r2, r3, #1
   13f30:	str	r2, [r4, #28]
   13f34:	mov	r2, #10
   13f38:	strb	r2, [r3]
   13f3c:	pop	{r4, r5, r6, pc}
   13f40:	mov	r1, #1
   13f44:	mov	r0, r4
   13f48:	bl	16fe0 <argp_error@@Base+0x1040>
   13f4c:	cmp	r0, #0
   13f50:	bne	13f28 <argp_parse@@Base+0x1bd0>
   13f54:	pop	{r4, r5, r6, pc}
   13f58:	cmp	r2, r3
   13f5c:	bcs	13f74 <argp_parse@@Base+0x1c1c>
   13f60:	ldr	r3, [r4, #28]
   13f64:	add	r2, r3, #1
   13f68:	str	r2, [r4, #28]
   13f6c:	mov	r2, #32
   13f70:	b	13f38 <argp_parse@@Base+0x1be0>
   13f74:	mov	r1, #1
   13f78:	mov	r0, r4
   13f7c:	bl	16fe0 <argp_error@@Base+0x1040>
   13f80:	cmp	r0, #0
   13f84:	bne	13f60 <argp_parse@@Base+0x1c08>
   13f88:	pop	{r4, r5, r6, pc}
   13f8c:	push	{r4, r5, r6, lr}
   13f90:	ldr	r5, [r0, #8]
   13f94:	ldr	r2, [r0, #12]
   13f98:	ldr	ip, [r1, #12]
   13f9c:	cmp	r5, #0
   13fa0:	orr	r2, r2, ip
   13fa4:	bne	13fb4 <argp_parse@@Base+0x1c5c>
   13fa8:	ldr	r5, [r1, #8]
   13fac:	cmp	r5, #0
   13fb0:	beq	13fe0 <argp_parse@@Base+0x1c88>
   13fb4:	tst	r2, #16
   13fb8:	bne	13fe0 <argp_parse@@Base+0x1c88>
   13fbc:	tst	r2, #1
   13fc0:	mov	r6, r3
   13fc4:	mov	r4, r0
   13fc8:	beq	13fe8 <argp_parse@@Base+0x1c90>
   13fcc:	ldr	r2, [r0, #4]
   13fd0:	ldr	r1, [pc, #52]	; 1400c <argp_parse@@Base+0x1cb4>
   13fd4:	mov	r3, r5
   13fd8:	mov	r0, r6
   13fdc:	bl	170c4 <argp_error@@Base+0x1124>
   13fe0:	mov	r0, #0
   13fe4:	pop	{r4, r5, r6, pc}
   13fe8:	mov	r0, r5
   13fec:	bl	111a8 <strlen@plt>
   13ff0:	add	r1, r0, #6
   13ff4:	mov	r0, r6
   13ff8:	bl	13ed8 <argp_parse@@Base+0x1b80>
   13ffc:	mov	r3, r5
   14000:	ldr	r2, [r4, #4]
   14004:	ldr	r1, [pc, #4]	; 14010 <argp_parse@@Base+0x1cb8>
   14008:	b	13fd8 <argp_parse@@Base+0x1c80>
   1400c:	andeq	r7, r1, r4, asr #21
   14010:	andeq	r7, r1, pc, asr #21
   14014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14018:	mov	r6, r3
   1401c:	sub	sp, sp, #36	; 0x24
   14020:	ldr	r3, [r0, #16]
   14024:	str	r1, [sp, #20]
   14028:	str	r3, [sp, #12]
   1402c:	ldr	r3, [r0, #8]
   14030:	ldr	sl, [r2]
   14034:	str	r3, [sp, #16]
   14038:	mov	fp, r2
   1403c:	mov	r3, r1
   14040:	mov	r2, r0
   14044:	ldr	r1, [pc, #404]	; 141e0 <argp_parse@@Base+0x1e88>
   14048:	ldr	r0, [sp, #16]
   1404c:	ldr	r5, [sp, #72]	; 0x48
   14050:	bl	136e0 <argp_parse@@Base+0x1388>
   14054:	subs	r8, r0, #0
   14058:	moveq	r7, r8
   1405c:	moveq	r4, r8
   14060:	beq	140f4 <argp_parse@@Base+0x1d9c>
   14064:	mov	r1, #10
   14068:	bl	11058 <strchrnul@plt>
   1406c:	ldrb	r4, [r0]
   14070:	mov	r7, r0
   14074:	cmp	r4, #0
   14078:	moveq	r9, r8
   1407c:	beq	140a8 <argp_parse@@Base+0x1d50>
   14080:	ldrb	r3, [sl]
   14084:	mov	r9, r8
   14088:	mov	r4, #0
   1408c:	mov	r2, #10
   14090:	cmp	r4, r3
   14094:	blt	14164 <argp_parse@@Base+0x1e0c>
   14098:	ldr	r3, [fp]
   1409c:	mov	r4, #1
   140a0:	add	r3, r3, #1
   140a4:	str	r3, [fp]
   140a8:	add	r1, r7, #1
   140ac:	sub	r1, r1, r9
   140b0:	mov	r0, r5
   140b4:	bl	13ed8 <argp_parse@@Base+0x1b80>
   140b8:	ldr	r2, [r5, #28]
   140bc:	sub	r3, r7, r9
   140c0:	ldr	r1, [r5, #32]
   140c4:	add	r2, r2, r3
   140c8:	cmp	r1, r2
   140cc:	bcc	14190 <argp_parse@@Base+0x1e38>
   140d0:	mov	r2, r3
   140d4:	mov	r1, r9
   140d8:	ldr	r0, [r5, #28]
   140dc:	str	r3, [sp, #24]
   140e0:	bl	1107c <memcpy@plt>
   140e4:	ldr	r2, [r5, #28]
   140e8:	ldr	r3, [sp, #24]
   140ec:	add	r3, r2, r3
   140f0:	str	r3, [r5, #28]
   140f4:	ldr	r3, [sp, #16]
   140f8:	cmp	r8, #0
   140fc:	cmpne	r3, r8
   14100:	beq	1410c <argp_parse@@Base+0x1db4>
   14104:	mov	r0, r8
   14108:	bl	12df4 <argp_parse@@Base+0xa9c>
   1410c:	ldr	r3, [sp, #12]
   14110:	cmp	r3, #0
   14114:	addne	r8, r3, #16
   14118:	bne	141cc <argp_parse@@Base+0x1e74>
   1411c:	cmp	r6, #0
   14120:	moveq	r4, #0
   14124:	andne	r4, r4, #1
   14128:	cmp	r4, #0
   1412c:	beq	14154 <argp_parse@@Base+0x1dfc>
   14130:	ldrb	r2, [r7]
   14134:	ldrb	r3, [sl]
   14138:	cmp	r2, #0
   1413c:	addne	r3, r3, #1
   14140:	strbne	r3, [sl]
   14144:	movne	r6, #0
   14148:	bne	14154 <argp_parse@@Base+0x1dfc>
   1414c:	cmp	r3, #0
   14150:	strbne	r2, [sl]
   14154:	clz	r0, r6
   14158:	lsr	r0, r0, #5
   1415c:	add	sp, sp, #36	; 0x24
   14160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14164:	add	r9, r7, #1
   14168:	mov	r1, r2
   1416c:	mov	r0, r9
   14170:	str	r3, [sp, #28]
   14174:	str	r2, [sp, #24]
   14178:	bl	11058 <strchrnul@plt>
   1417c:	add	r4, r4, #1
   14180:	ldr	r3, [sp, #28]
   14184:	ldr	r2, [sp, #24]
   14188:	mov	r7, r0
   1418c:	b	14090 <argp_parse@@Base+0x1d38>
   14190:	mov	r1, r3
   14194:	mov	r0, r5
   14198:	str	r3, [sp, #24]
   1419c:	bl	16fe0 <argp_error@@Base+0x1040>
   141a0:	ldr	r3, [sp, #24]
   141a4:	cmp	r0, #0
   141a8:	bne	140d0 <argp_parse@@Base+0x1d78>
   141ac:	b	140f4 <argp_parse@@Base+0x1d9c>
   141b0:	mov	r3, r6
   141b4:	str	r5, [sp]
   141b8:	mov	r2, fp
   141bc:	ldr	r1, [sp, #20]
   141c0:	bl	14014 <argp_parse@@Base+0x1cbc>
   141c4:	clz	r6, r0
   141c8:	lsr	r6, r6, #5
   141cc:	add	r8, r8, #16
   141d0:	ldr	r0, [r8, #-32]	; 0xffffffe0
   141d4:	cmp	r0, #0
   141d8:	bne	141b0 <argp_parse@@Base+0x1e58>
   141dc:	b	1411c <argp_parse@@Base+0x1dc4>
   141e0:	andeq	r0, r0, #6
   141e4:	ldr	r2, [r0, #8]
   141e8:	cmp	r2, #0
   141ec:	bne	14220 <argp_parse@@Base+0x1ec8>
   141f0:	ldr	r2, [r1, #8]
   141f4:	cmp	r2, #0
   141f8:	bne	14220 <argp_parse@@Base+0x1ec8>
   141fc:	ldr	r1, [r1, #12]
   14200:	ldr	r2, [r0, #12]
   14204:	orr	r2, r2, r1
   14208:	tst	r2, #16
   1420c:	ldreq	r2, [r3]
   14210:	addeq	r1, r2, #1
   14214:	streq	r1, [r3]
   14218:	ldreq	r3, [r0, #4]
   1421c:	strbeq	r3, [r2]
   14220:	mov	r0, #0
   14224:	bx	lr
   14228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1422c:	add	fp, sp, #32
   14230:	sub	sp, sp, #12
   14234:	ldr	r6, [r0, #4]
   14238:	cmp	r6, #0
   1423c:	beq	142e0 <argp_parse@@Base+0x1f88>
   14240:	mov	r5, r0
   14244:	ldr	r0, [r0, #8]
   14248:	mov	r4, r1
   1424c:	bl	111a8 <strlen@plt>
   14250:	ldr	sl, [pc, #324]	; 1439c <argp_parse@@Base+0x2044>
   14254:	ldr	r7, [r5]
   14258:	sub	r9, fp, #36	; 0x24
   1425c:	add	r0, r0, #15
   14260:	bic	r0, r0, #7
   14264:	sub	sp, sp, r0
   14268:	mov	r8, sp
   1426c:	str	sp, [r9, #-4]!
   14270:	ldr	r2, [r7, #20]
   14274:	mov	r0, r7
   14278:	mov	r3, r9
   1427c:	ldr	r2, [r2, #24]
   14280:	mov	r1, sl
   14284:	bl	1341c <argp_parse@@Base+0x10c4>
   14288:	subs	r6, r6, #1
   1428c:	add	r7, r7, #28
   14290:	bne	14270 <argp_parse@@Base+0x1f18>
   14294:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14298:	cmp	r8, r3
   1429c:	bcs	142bc <argp_parse@@Base+0x1f64>
   142a0:	add	r2, r3, #1
   142a4:	str	r2, [fp, #-40]	; 0xffffffd8
   142a8:	ldr	r1, [pc, #240]	; 143a0 <argp_parse@@Base+0x2048>
   142ac:	strb	r6, [r3]
   142b0:	mov	r2, r8
   142b4:	mov	r0, r4
   142b8:	bl	170c4 <argp_error@@Base+0x1124>
   142bc:	ldm	r5, {r6, r7}
   142c0:	ldr	r8, [pc, #220]	; 143a4 <argp_parse@@Base+0x204c>
   142c4:	cmp	r7, #0
   142c8:	bne	142e8 <argp_parse@@Base+0x1f90>
   142cc:	ldm	r5, {r5, r8}
   142d0:	ldr	sl, [pc, #208]	; 143a8 <argp_parse@@Base+0x2050>
   142d4:	add	r5, r5, #28
   142d8:	cmp	r8, #0
   142dc:	bne	1430c <argp_parse@@Base+0x1fb4>
   142e0:	sub	sp, fp, #32
   142e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142e8:	ldr	r2, [r6, #20]
   142ec:	mov	r0, r6
   142f0:	mov	r3, r4
   142f4:	ldr	r2, [r2, #24]
   142f8:	mov	r1, r8
   142fc:	bl	1341c <argp_parse@@Base+0x10c4>
   14300:	add	r6, r6, #28
   14304:	sub	r7, r7, #1
   14308:	b	142c4 <argp_parse@@Base+0x1f6c>
   1430c:	ldr	r7, [r5, #-28]	; 0xffffffe4
   14310:	ldr	r9, [r5, #-24]	; 0xffffffe8
   14314:	mov	r6, r7
   14318:	cmp	r9, #0
   1431c:	subeq	r8, r8, #1
   14320:	addeq	r5, r5, #28
   14324:	beq	142d8 <argp_parse@@Base+0x1f80>
   14328:	ldr	r2, [r6]
   1432c:	cmp	r2, #0
   14330:	beq	14380 <argp_parse@@Base+0x2028>
   14334:	ldr	r1, [r6, #12]
   14338:	tst	r1, #4
   1433c:	moveq	r7, r6
   14340:	tst	r1, #2
   14344:	bne	14380 <argp_parse@@Base+0x2028>
   14348:	ldr	r3, [r6, #8]
   1434c:	ldr	r0, [r7, #12]
   14350:	cmp	r3, #0
   14354:	orr	r1, r1, r0
   14358:	ldreq	r3, [r7, #8]
   1435c:	tst	r1, #16
   14360:	bne	14380 <argp_parse@@Base+0x2028>
   14364:	cmp	r3, #0
   14368:	beq	1438c <argp_parse@@Base+0x2034>
   1436c:	tst	r1, #1
   14370:	movne	r1, sl
   14374:	ldreq	r1, [pc, #48]	; 143ac <argp_parse@@Base+0x2054>
   14378:	mov	r0, r4
   1437c:	bl	170c4 <argp_error@@Base+0x1124>
   14380:	add	r6, r6, #24
   14384:	sub	r9, r9, #1
   14388:	b	14318 <argp_parse@@Base+0x1fc0>
   1438c:	ldr	r1, [pc, #28]	; 143b0 <argp_parse@@Base+0x2058>
   14390:	mov	r0, r4
   14394:	bl	170c4 <argp_error@@Base+0x1124>
   14398:	b	14380 <argp_parse@@Base+0x2028>
   1439c:	andeq	r4, r1, r4, ror #3
   143a0:	ldrdeq	r7, [r1], -r8
   143a4:	andeq	r3, r1, ip, lsl #31
   143a8:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   143ac:	andeq	r7, r1, ip, ror #21
   143b0:	strdeq	r7, [r1], -r7	; <UNPREDICTABLE>
   143b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143b8:	mov	r8, r1
   143bc:	ldm	r0, {r5, r6}
   143c0:	cmp	r6, #0
   143c4:	bne	143cc <argp_parse@@Base+0x2074>
   143c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143cc:	ldm	r5, {r4, r9}
   143d0:	mov	r7, #0
   143d4:	add	r4, r4, #24
   143d8:	cmp	r9, r7
   143dc:	subeq	r6, r6, #1
   143e0:	addeq	r5, r5, #28
   143e4:	beq	143c0 <argp_parse@@Base+0x2068>
   143e8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   143ec:	cmp	r0, #0
   143f0:	beq	14410 <argp_parse@@Base+0x20b8>
   143f4:	ldr	r3, [r4, #-12]
   143f8:	tst	r3, #2
   143fc:	bne	14410 <argp_parse@@Base+0x20b8>
   14400:	mov	r1, r8
   14404:	bl	10ff8 <strcmp@plt>
   14408:	cmp	r0, #0
   1440c:	beq	1441c <argp_parse@@Base+0x20c4>
   14410:	add	r7, r7, #1
   14414:	add	r4, r4, #24
   14418:	b	143d8 <argp_parse@@Base+0x2080>
   1441c:	mvn	r3, #0
   14420:	str	r3, [r5, #12]
   14424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1442c:	sub	sp, sp, #44	; 0x2c
   14430:	ldr	r6, [r0, #16]
   14434:	str	r0, [sp, #8]
   14438:	ldr	r5, [r0]
   1443c:	mov	r0, #16
   14440:	mov	r9, r1
   14444:	bl	133a0 <argp_parse@@Base+0x1048>
   14448:	subs	r4, r0, #0
   1444c:	bne	14464 <argp_parse@@Base+0x210c>
   14450:	ldr	r3, [pc, #1444]	; 149fc <argp_parse@@Base+0x26a4>
   14454:	ldr	r2, [pc, #1444]	; 14a00 <argp_parse@@Base+0x26a8>
   14458:	ldr	r1, [pc, #1444]	; 14a04 <argp_parse@@Base+0x26ac>
   1445c:	ldr	r0, [pc, #1444]	; 14a08 <argp_parse@@Base+0x26b0>
   14460:	bl	112d4 <__assert_fail@plt>
   14464:	mov	r3, #0
   14468:	cmp	r5, r3
   1446c:	str	r3, [r4, #4]
   14470:	str	r3, [r4, #12]
   14474:	beq	149c8 <argp_parse@@Base+0x2670>
   14478:	ldr	r8, [r5, #12]
   1447c:	ands	r8, r8, #4
   14480:	addeq	r7, r5, #24
   14484:	moveq	fp, r8
   14488:	beq	14830 <argp_parse@@Base+0x24d8>
   1448c:	ldr	r3, [pc, #1384]	; 149fc <argp_parse@@Base+0x26a4>
   14490:	mov	r2, #460	; 0x1cc
   14494:	ldr	r1, [pc, #1384]	; 14a04 <argp_parse@@Base+0x26ac>
   14498:	ldr	r0, [pc, #1388]	; 14a0c <argp_parse@@Base+0x26b4>
   1449c:	b	14460 <argp_parse@@Base+0x2108>
   144a0:	ldr	r2, [pc, #1384]	; 14a10 <argp_parse@@Base+0x26b8>
   144a4:	ldr	r0, [r4, #4]
   144a8:	cmp	r0, r2
   144ac:	addls	r7, r7, #28
   144b0:	movls	sl, r3
   144b4:	movls	r2, r1
   144b8:	bls	14994 <argp_parse@@Base+0x263c>
   144bc:	ldr	r3, [pc, #1336]	; 149fc <argp_parse@@Base+0x26a4>
   144c0:	mov	r2, #476	; 0x1dc
   144c4:	ldr	r1, [pc, #1336]	; 14a04 <argp_parse@@Base+0x26ac>
   144c8:	ldr	r0, [pc, #1348]	; 14a14 <argp_parse@@Base+0x26bc>
   144cc:	b	14460 <argp_parse@@Base+0x2108>
   144d0:	ldrb	r0, [r0]
   144d4:	add	r1, r1, #1
   144d8:	cmp	r0, r8
   144dc:	beq	14958 <argp_parse@@Base+0x2600>
   144e0:	cmp	sl, r1
   144e4:	mov	r0, r1
   144e8:	bhi	144d0 <argp_parse@@Base+0x2178>
   144ec:	strb	r8, [sl]
   144f0:	add	sl, sl, #1
   144f4:	b	14958 <argp_parse@@Base+0x2600>
   144f8:	ldr	r8, [r6, #-4]
   144fc:	ldr	r7, [r6, #-8]
   14500:	cmp	r8, #0
   14504:	bne	14514 <argp_parse@@Base+0x21bc>
   14508:	cmp	r7, #0
   1450c:	moveq	r1, r9
   14510:	beq	14570 <argp_parse@@Base+0x2218>
   14514:	ldr	r3, [sp, #8]
   14518:	sub	r5, r6, #16
   1451c:	mov	r0, #28
   14520:	ldr	r3, [r3, #16]
   14524:	sub	r5, r5, r3
   14528:	bl	133a0 <argp_parse@@Base+0x1048>
   1452c:	asr	r5, r5, #4
   14530:	subs	r1, r0, #0
   14534:	beq	14570 <argp_parse@@Base+0x2218>
   14538:	ldr	r3, [sp, #8]
   1453c:	cmp	r9, #0
   14540:	str	r3, [r1, #16]
   14544:	ldrne	r3, [r9, #20]
   14548:	moveq	r3, #0
   1454c:	addne	r3, r3, #1
   14550:	str	r3, [r1, #20]
   14554:	ldr	r3, [r4, #12]
   14558:	str	r8, [r1, #8]
   1455c:	str	r7, [r1]
   14560:	str	r5, [r1, #4]
   14564:	str	r9, [r1, #12]
   14568:	str	r3, [r1, #24]
   1456c:	str	r1, [r4, #12]
   14570:	ldr	r0, [r6, #-16]
   14574:	bl	14428 <argp_parse@@Base+0x20d0>
   14578:	ldr	r2, [sp, #28]
   1457c:	ldr	r3, [r4, #12]
   14580:	mov	r5, r0
   14584:	cmp	r3, #0
   14588:	bne	145e4 <argp_parse@@Base+0x228c>
   1458c:	ldr	r1, [r5, #12]
   14590:	str	r1, [r2]
   14594:	ldr	r2, [r5, #4]
   14598:	str	r3, [r5, #12]
   1459c:	cmp	r2, #0
   145a0:	beq	145c8 <argp_parse@@Base+0x2270>
   145a4:	ldr	r1, [r4, #4]
   145a8:	cmp	r1, #0
   145ac:	bne	145f0 <argp_parse@@Base+0x2298>
   145b0:	str	r2, [r4, #4]
   145b4:	ldr	r2, [r5]
   145b8:	str	r2, [r4]
   145bc:	ldr	r2, [r5, #8]
   145c0:	str	r2, [r4, #8]
   145c4:	str	r3, [r5, #4]
   145c8:	mov	r0, r5
   145cc:	bl	135b4 <argp_parse@@Base+0x125c>
   145d0:	add	r6, r6, #16
   145d4:	ldr	r3, [r6, #-16]
   145d8:	cmp	r3, #0
   145dc:	bne	144f8 <argp_parse@@Base+0x21a0>
   145e0:	b	149dc <argp_parse@@Base+0x2684>
   145e4:	add	r2, r3, #24
   145e8:	ldr	r3, [r3, #24]
   145ec:	b	14584 <argp_parse@@Base+0x222c>
   145f0:	add	r3, r2, r1
   145f4:	mov	r7, #28
   145f8:	str	r3, [sp, #12]
   145fc:	mul	r0, r7, r3
   14600:	bl	133a0 <argp_parse@@Base+0x1048>
   14604:	str	r0, [sp]
   14608:	ldr	r0, [r4, #8]
   1460c:	bl	111a8 <strlen@plt>
   14610:	mov	fp, r0
   14614:	ldr	r0, [r5, #8]
   14618:	bl	111a8 <strlen@plt>
   1461c:	add	r0, fp, r0
   14620:	add	r0, r0, #1
   14624:	bl	133a0 <argp_parse@@Base+0x1048>
   14628:	ldr	r3, [sp]
   1462c:	cmp	r3, #0
   14630:	cmpne	r0, #0
   14634:	mov	r8, r0
   14638:	ldreq	r3, [pc, #984]	; 14a18 <argp_parse@@Base+0x26c0>
   1463c:	ldreq	r2, [pc, #984]	; 14a1c <argp_parse@@Base+0x26c4>
   14640:	ldreq	r1, [pc, #956]	; 14a04 <argp_parse@@Base+0x26ac>
   14644:	ldreq	r0, [pc, #980]	; 14a20 <argp_parse@@Base+0x26c8>
   14648:	beq	14460 <argp_parse@@Base+0x2108>
   1464c:	ldr	r3, [sp, #12]
   14650:	ldr	r2, [pc, #952]	; 14a10 <argp_parse@@Base+0x26b8>
   14654:	cmp	r3, r2
   14658:	ldrhi	r3, [pc, #952]	; 14a18 <argp_parse@@Base+0x26c0>
   1465c:	movhi	r2, #972	; 0x3cc
   14660:	ldrhi	r1, [pc, #924]	; 14a04 <argp_parse@@Base+0x26ac>
   14664:	ldrhi	r0, [pc, #952]	; 14a24 <argp_parse@@Base+0x26cc>
   14668:	bhi	14460 <argp_parse@@Base+0x2108>
   1466c:	ldr	sl, [r4, #4]
   14670:	ldr	r3, [r4]
   14674:	ldr	r0, [sp]
   14678:	str	r3, [sp, #16]
   1467c:	mul	r3, r7, sl
   14680:	ldr	r1, [sp, #16]
   14684:	mov	r2, r3
   14688:	str	r3, [sp, #24]
   1468c:	bl	11178 <mempcpy@plt>
   14690:	ldr	r3, [r5, #4]
   14694:	ldr	r1, [r5]
   14698:	str	r3, [sp, #4]
   1469c:	mul	r2, r7, r3
   146a0:	bl	1107c <memcpy@plt>
   146a4:	ldr	r3, [r4, #8]
   146a8:	mov	r2, fp
   146ac:	mov	r1, r3
   146b0:	mov	r0, r8
   146b4:	str	r3, [sp, #20]
   146b8:	bl	1107c <memcpy@plt>
   146bc:	ldr	r1, [sp]
   146c0:	ldr	r3, [sp, #20]
   146c4:	cmp	sl, #0
   146c8:	bne	14724 <argp_parse@@Base+0x23cc>
   146cc:	add	r3, r8, fp
   146d0:	str	r3, [sp, #20]
   146d4:	ldr	r3, [sp, #24]
   146d8:	ldr	r1, [r5, #8]
   146dc:	add	r7, r3, #28
   146e0:	ldr	r3, [sp]
   146e4:	ldr	sl, [sp, #20]
   146e8:	add	r7, r3, r7
   146ec:	ldr	r3, [sp, #4]
   146f0:	cmp	r3, #0
   146f4:	bne	14740 <argp_parse@@Base+0x23e8>
   146f8:	ldrb	r3, [sp, #4]
   146fc:	ldr	r0, [sp, #16]
   14700:	strb	r3, [sl]
   14704:	bl	12df4 <argp_parse@@Base+0xa9c>
   14708:	ldr	r0, [r4, #8]
   1470c:	bl	12df4 <argp_parse@@Base+0xa9c>
   14710:	ldr	r3, [sp]
   14714:	str	r3, [r4]
   14718:	ldr	r3, [sp, #12]
   1471c:	stmib	r4, {r3, r8}
   14720:	b	145c8 <argp_parse@@Base+0x2270>
   14724:	ldr	r2, [r1, #8]
   14728:	sub	sl, sl, #1
   1472c:	sub	r2, r2, r3
   14730:	add	r2, r8, r2
   14734:	str	r2, [r1, #8]
   14738:	add	r1, r1, #28
   1473c:	b	146c4 <argp_parse@@Base+0x236c>
   14740:	ldr	r3, [r7, #-24]	; 0xffffffe8
   14744:	ldr	fp, [r7, #-28]	; 0xffffffe4
   14748:	str	sl, [r7, #-20]	; 0xffffffec
   1474c:	cmp	r3, #0
   14750:	ldreq	r3, [sp, #4]
   14754:	addeq	r7, r7, #28
   14758:	subeq	r3, r3, #1
   1475c:	streq	r3, [sp, #4]
   14760:	beq	146ec <argp_parse@@Base+0x2394>
   14764:	ldr	r2, [fp, #12]
   14768:	tst	r2, #8
   1476c:	bne	147b0 <argp_parse@@Base+0x2458>
   14770:	ldr	r2, [fp, #4]
   14774:	sub	r0, r2, #1
   14778:	cmp	r0, #254	; 0xfe
   1477c:	str	r2, [sp, #36]	; 0x24
   14780:	bhi	147b0 <argp_parse@@Base+0x2458>
   14784:	str	r3, [sp, #32]
   14788:	str	r1, [sp, #24]
   1478c:	bl	11190 <__ctype_b_loc@plt>
   14790:	ldr	r2, [sp, #36]	; 0x24
   14794:	ldr	r1, [sp, #24]
   14798:	ldr	r3, [sp, #32]
   1479c:	ldr	ip, [r0]
   147a0:	lsl	r0, r2, #1
   147a4:	ldrh	r0, [ip, r0]
   147a8:	tst	r0, #16384	; 0x4000
   147ac:	bne	149e8 <argp_parse@@Base+0x2690>
   147b0:	add	fp, fp, #24
   147b4:	sub	r3, r3, #1
   147b8:	b	1474c <argp_parse@@Base+0x23f4>
   147bc:	ldrb	ip, [ip]
   147c0:	add	r2, r2, #1
   147c4:	cmp	ip, r0
   147c8:	beq	147e4 <argp_parse@@Base+0x248c>
   147cc:	ldr	lr, [sp, #20]
   147d0:	mov	ip, r2
   147d4:	cmp	lr, r2
   147d8:	bhi	147bc <argp_parse@@Base+0x2464>
   147dc:	strb	r0, [sl]
   147e0:	add	sl, sl, #1
   147e4:	add	r1, r1, #1
   147e8:	b	147b0 <argp_parse@@Base+0x2458>
   147ec:	ldr	r1, [r7, #-12]
   147f0:	tst	r1, #4
   147f4:	ldreq	r2, [r4, #4]
   147f8:	addeq	r2, r2, #1
   147fc:	streq	r2, [r4, #4]
   14800:	tst	r1, #8
   14804:	bne	1482c <argp_parse@@Base+0x24d4>
   14808:	sub	r2, sl, #1
   1480c:	cmp	r2, #254	; 0xfe
   14810:	bhi	1482c <argp_parse@@Base+0x24d4>
   14814:	bl	11190 <__ctype_b_loc@plt>
   14818:	lsl	sl, sl, #1
   1481c:	ldr	r2, [r0]
   14820:	ldrh	r2, [r2, sl]
   14824:	tst	r2, #16384	; 0x4000
   14828:	addne	fp, fp, #1
   1482c:	add	r7, r7, #24
   14830:	ldr	sl, [r7, #-20]	; 0xffffffec
   14834:	cmp	sl, #0
   14838:	bne	147ec <argp_parse@@Base+0x2494>
   1483c:	ldr	r2, [r7, #-24]	; 0xffffffe8
   14840:	cmp	r2, #0
   14844:	bne	147ec <argp_parse@@Base+0x2494>
   14848:	ldr	r2, [r7, #-8]
   1484c:	cmp	r2, #0
   14850:	bne	147ec <argp_parse@@Base+0x2494>
   14854:	ldr	r1, [r7, #-4]
   14858:	cmp	r1, #0
   1485c:	bne	147ec <argp_parse@@Base+0x2494>
   14860:	ldr	r2, [r4, #4]
   14864:	mov	r0, #28
   14868:	str	r1, [sp]
   1486c:	mul	r0, r0, r2
   14870:	bl	133a0 <argp_parse@@Base+0x1048>
   14874:	str	r0, [r4]
   14878:	add	r0, fp, #1
   1487c:	bl	133a0 <argp_parse@@Base+0x1048>
   14880:	ldr	r7, [r4]
   14884:	ldr	r1, [sp]
   14888:	cmp	r0, #0
   1488c:	cmpne	r7, #0
   14890:	mov	r3, r0
   14894:	str	r0, [r4, #8]
   14898:	bne	144a0 <argp_parse@@Base+0x2148>
   1489c:	ldr	r3, [pc, #344]	; 149fc <argp_parse@@Base+0x26a4>
   148a0:	ldr	r2, [pc, #384]	; 14a28 <argp_parse@@Base+0x26d0>
   148a4:	ldr	r1, [pc, #344]	; 14a04 <argp_parse@@Base+0x26ac>
   148a8:	ldr	r0, [pc, #380]	; 14a2c <argp_parse@@Base+0x26d4>
   148ac:	b	14460 <argp_parse@@Base+0x2108>
   148b0:	uxtb	r8, r8
   148b4:	mov	r1, r3
   148b8:	b	144e0 <argp_parse@@Base+0x2188>
   148bc:	ldr	r1, [r5, #12]
   148c0:	tst	r1, #4
   148c4:	bne	14908 <argp_parse@@Base+0x25b0>
   148c8:	b	1498c <argp_parse@@Base+0x2634>
   148cc:	str	r2, [r7, #-24]	; 0xffffffe8
   148d0:	ldr	fp, [r5, #20]
   148d4:	str	r5, [r7, #-28]	; 0xffffffe4
   148d8:	cmp	fp, #0
   148dc:	str	sl, [r7, #-20]	; 0xffffffec
   148e0:	bne	148f8 <argp_parse@@Base+0x25a0>
   148e4:	ldr	r1, [r5]
   148e8:	cmp	r1, #0
   148ec:	cmpeq	r0, #0
   148f0:	addeq	fp, r8, #1
   148f4:	movne	fp, r8
   148f8:	ldr	r1, [sp, #8]
   148fc:	str	fp, [r7, #-16]
   14900:	str	r9, [r7, #-12]
   14904:	str	r1, [r7, #-8]
   14908:	ldr	r1, [r7, #-24]	; 0xffffffe8
   1490c:	add	r1, r1, #1
   14910:	str	r1, [r7, #-24]	; 0xffffffe8
   14914:	ldr	r1, [r5, #12]
   14918:	tst	r1, #8
   1491c:	bne	14958 <argp_parse@@Base+0x2600>
   14920:	ldr	r8, [r5, #4]
   14924:	sub	r1, r8, #1
   14928:	cmp	r1, #254	; 0xfe
   1492c:	bhi	14958 <argp_parse@@Base+0x2600>
   14930:	str	r2, [sp, #4]
   14934:	str	r3, [sp]
   14938:	bl	11190 <__ctype_b_loc@plt>
   1493c:	lsl	r1, r8, #1
   14940:	ldr	r3, [sp]
   14944:	ldr	r2, [sp, #4]
   14948:	ldr	r0, [r0]
   1494c:	ldrh	r1, [r0, r1]
   14950:	tst	r1, #16384	; 0x4000
   14954:	bne	148b0 <argp_parse@@Base+0x2558>
   14958:	add	r5, r5, #24
   1495c:	ldr	r1, [r5, #4]
   14960:	cmp	r1, #0
   14964:	bne	148bc <argp_parse@@Base+0x2564>
   14968:	ldr	r1, [r5]
   1496c:	cmp	r1, #0
   14970:	bne	148bc <argp_parse@@Base+0x2564>
   14974:	ldr	r1, [r5, #16]
   14978:	cmp	r1, #0
   1497c:	bne	148bc <argp_parse@@Base+0x2564>
   14980:	ldr	r1, [r5, #20]
   14984:	cmp	r1, #0
   14988:	bne	148bc <argp_parse@@Base+0x2564>
   1498c:	add	r7, r7, #28
   14990:	mov	r8, fp
   14994:	ldr	r0, [r5, #4]
   14998:	cmp	r0, #0
   1499c:	bne	148cc <argp_parse@@Base+0x2574>
   149a0:	ldr	r1, [r5]
   149a4:	cmp	r1, #0
   149a8:	bne	148cc <argp_parse@@Base+0x2574>
   149ac:	ldr	r1, [r5, #16]
   149b0:	cmp	r1, #0
   149b4:	bne	148cc <argp_parse@@Base+0x2574>
   149b8:	ldr	r1, [r5, #20]
   149bc:	cmp	r1, #0
   149c0:	bne	148cc <argp_parse@@Base+0x2574>
   149c4:	strb	r1, [sl]
   149c8:	cmp	r6, #0
   149cc:	addne	r3, r4, #12
   149d0:	addne	r6, r6, #16
   149d4:	strne	r3, [sp, #28]
   149d8:	bne	145d4 <argp_parse@@Base+0x227c>
   149dc:	mov	r0, r4
   149e0:	add	sp, sp, #44	; 0x2c
   149e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149e8:	ldrb	r0, [r1]
   149ec:	cmp	r0, r2
   149f0:	moveq	r2, r8
   149f4:	bne	147b0 <argp_parse@@Base+0x2458>
   149f8:	b	147cc <argp_parse@@Base+0x2474>
   149fc:	andeq	r7, r1, sp, lsl sl
   14a00:	andeq	r0, r0, r2, asr #3
   14a04:	strdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   14a08:	andeq	r7, r1, fp, lsl #22
   14a0c:	andeq	r7, r1, pc, lsl #22
   14a10:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14a14:	andeq	r7, r1, r2, asr #22
   14a18:	andeq	r7, r1, r6, lsr #20
   14a1c:	andeq	r0, r0, sl, asr #7
   14a20:	andeq	r7, r1, fp, ror fp
   14a24:	andeq	r7, r1, r7, asr #22
   14a28:	ldrdeq	r0, [r0], -sl
   14a2c:	andeq	r7, r1, pc, lsl fp
   14a30:	push	{r4, r5, r6, lr}
   14a34:	mov	r4, r0
   14a38:	mov	r5, r1
   14a3c:	ldr	r0, [r0, #12]
   14a40:	ldr	r1, [r1, #12]
   14a44:	cmp	r0, r1
   14a48:	bne	14a80 <argp_parse@@Base+0x2728>
   14a4c:	ldr	r0, [r5, #8]
   14a50:	ldr	r3, [r4, #8]
   14a54:	mvn	r2, r0
   14a58:	lsr	r2, r2, #31
   14a5c:	cmp	r2, r3, lsr #31
   14a60:	subne	r0, r3, r0
   14a64:	subeq	r0, r0, r3
   14a68:	cmp	r0, #0
   14a6c:	popne	{r4, r5, r6, pc}
   14a70:	ldr	r0, [r5, #4]
   14a74:	ldr	r3, [r4, #4]
   14a78:	sub	r0, r0, r3
   14a7c:	pop	{r4, r5, r6, pc}
   14a80:	bl	14a30 <argp_parse@@Base+0x26d8>
   14a84:	cmp	r0, #0
   14a88:	popne	{r4, r5, r6, pc}
   14a8c:	ldr	r0, [r5, #8]
   14a90:	ldr	r3, [r4, #8]
   14a94:	mvn	r2, r0
   14a98:	lsr	r2, r2, #31
   14a9c:	cmp	r2, r3, lsr #31
   14aa0:	subne	r0, r3, r0
   14aa4:	subeq	r0, r0, r3
   14aa8:	cmp	r0, #0
   14aac:	beq	14a70 <argp_parse@@Base+0x2718>
   14ab0:	pop	{r4, r5, r6, pc}
   14ab4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14ab8:	mov	r6, r0
   14abc:	ldr	r0, [r0, #16]
   14ac0:	mov	r5, r1
   14ac4:	cmp	r0, #0
   14ac8:	movne	r3, r0
   14acc:	bne	14adc <argp_parse@@Base+0x2784>
   14ad0:	ldr	r3, [r6, #12]
   14ad4:	b	14aec <argp_parse@@Base+0x2794>
   14ad8:	mov	r3, r2
   14adc:	ldr	r2, [r3, #12]
   14ae0:	cmp	r2, #0
   14ae4:	bne	14ad8 <argp_parse@@Base+0x2780>
   14ae8:	ldr	r3, [r3, #8]
   14aec:	ldr	r1, [r5, #16]
   14af0:	cmp	r1, #0
   14af4:	movne	r2, r1
   14af8:	bne	14b08 <argp_parse@@Base+0x27b0>
   14afc:	ldr	r4, [r5, #12]
   14b00:	b	14b18 <argp_parse@@Base+0x27c0>
   14b04:	mov	r2, ip
   14b08:	ldr	ip, [r2, #12]
   14b0c:	cmp	ip, #0
   14b10:	bne	14b04 <argp_parse@@Base+0x27ac>
   14b14:	ldr	r4, [r2, #8]
   14b18:	mvn	r2, r4
   14b1c:	lsr	r2, r2, #31
   14b20:	cmp	r2, r3, lsr #31
   14b24:	subne	r4, r3, r4
   14b28:	subeq	r4, r4, r3
   14b2c:	cmp	r4, #0
   14b30:	bne	14b88 <argp_parse@@Base+0x2830>
   14b34:	adds	r4, r1, #0
   14b38:	movne	r4, #1
   14b3c:	cmp	r0, #0
   14b40:	rsbeq	r4, r4, #0
   14b44:	rsbne	r4, r4, #1
   14b48:	cmp	r4, #0
   14b4c:	bne	14b88 <argp_parse@@Base+0x2830>
   14b50:	cmp	r0, #0
   14b54:	beq	14bc4 <argp_parse@@Base+0x286c>
   14b58:	ldr	r3, [r0, #20]
   14b5c:	ldr	r2, [r1, #20]
   14b60:	cmp	r3, r2
   14b64:	ble	14b94 <argp_parse@@Base+0x283c>
   14b68:	ldr	r0, [r0, #12]
   14b6c:	ldr	r3, [r0, #20]
   14b70:	cmp	r2, r3
   14b74:	blt	14b68 <argp_parse@@Base+0x2810>
   14b78:	bl	14a30 <argp_parse@@Base+0x26d8>
   14b7c:	cmp	r0, #0
   14b80:	movne	r4, r0
   14b84:	moveq	r4, #1
   14b88:	mov	r0, r4
   14b8c:	add	sp, sp, #8
   14b90:	pop	{r4, r5, r6, r7, r8, pc}
   14b94:	bge	14bb8 <argp_parse@@Base+0x2860>
   14b98:	ldr	r1, [r1, #12]
   14b9c:	ldr	r2, [r1, #20]
   14ba0:	cmp	r3, r2
   14ba4:	blt	14b98 <argp_parse@@Base+0x2840>
   14ba8:	bl	14a30 <argp_parse@@Base+0x26d8>
   14bac:	subs	r4, r0, #0
   14bb0:	mvneq	r4, #0
   14bb4:	b	14b88 <argp_parse@@Base+0x2830>
   14bb8:	bl	14a30 <argp_parse@@Base+0x26d8>
   14bbc:	subs	r4, r0, #0
   14bc0:	bne	14b88 <argp_parse@@Base+0x2830>
   14bc4:	ldr	r4, [r5, #12]
   14bc8:	ldr	r3, [r6, #12]
   14bcc:	mvn	r2, r4
   14bd0:	lsr	r2, r2, #31
   14bd4:	cmp	r2, r3, lsr #31
   14bd8:	subne	r4, r3, r4
   14bdc:	subeq	r4, r4, r3
   14be0:	cmp	r4, #0
   14be4:	bne	14b88 <argp_parse@@Base+0x2830>
   14be8:	mov	r0, r6
   14bec:	bl	133e0 <argp_parse@@Base+0x1088>
   14bf0:	mov	r7, r0
   14bf4:	str	r0, [sp]
   14bf8:	mov	r0, r5
   14bfc:	bl	133e0 <argp_parse@@Base+0x1088>
   14c00:	ldr	r3, [r6]
   14c04:	adds	r7, r7, #0
   14c08:	movne	r7, #1
   14c0c:	ldr	r3, [r3, #12]
   14c10:	ands	r3, r7, r3, lsr #3
   14c14:	moveq	r7, r4
   14c18:	str	r0, [sp, #4]
   14c1c:	beq	14c30 <argp_parse@@Base+0x28d8>
   14c20:	mov	r0, sp
   14c24:	bl	13548 <argp_parse@@Base+0x11f0>
   14c28:	adds	r7, r0, #0
   14c2c:	movne	r7, #1
   14c30:	ldr	r3, [r5]
   14c34:	ldr	r0, [r3, #12]
   14c38:	ands	r0, r0, #8
   14c3c:	beq	14c60 <argp_parse@@Base+0x2908>
   14c40:	ldr	r3, [sp, #4]
   14c44:	cmp	r3, #0
   14c48:	moveq	r0, r4
   14c4c:	beq	14c60 <argp_parse@@Base+0x2908>
   14c50:	add	r0, sp, #4
   14c54:	bl	13548 <argp_parse@@Base+0x11f0>
   14c58:	adds	r0, r0, #0
   14c5c:	movne	r0, #1
   14c60:	subs	r4, r7, r0
   14c64:	bne	14b88 <argp_parse@@Base+0x2830>
   14c68:	ldr	r2, [r6, #20]
   14c6c:	mov	r3, r4
   14c70:	ldr	r1, [pc, #224]	; 14d58 <argp_parse@@Base+0x2a00>
   14c74:	ldr	r2, [r2, #24]
   14c78:	mov	r0, r6
   14c7c:	bl	1341c <argp_parse@@Base+0x10c4>
   14c80:	ldr	r2, [r5, #20]
   14c84:	mov	r3, r4
   14c88:	ldr	r1, [pc, #200]	; 14d58 <argp_parse@@Base+0x2a00>
   14c8c:	ldr	r2, [r2, #24]
   14c90:	uxtb	r8, r0
   14c94:	mov	r0, r5
   14c98:	bl	1341c <argp_parse@@Base+0x10c4>
   14c9c:	cmp	r8, #0
   14ca0:	uxtb	r5, r0
   14ca4:	beq	14cb0 <argp_parse@@Base+0x2958>
   14ca8:	mov	r6, r8
   14cac:	b	14cc0 <argp_parse@@Base+0x2968>
   14cb0:	ldr	r3, [sp]
   14cb4:	cmp	r3, #0
   14cb8:	ldrbne	r6, [r3]
   14cbc:	beq	14ca8 <argp_parse@@Base+0x2950>
   14cc0:	cmp	r5, #0
   14cc4:	beq	14cd0 <argp_parse@@Base+0x2978>
   14cc8:	mov	r7, r5
   14ccc:	b	14ce0 <argp_parse@@Base+0x2988>
   14cd0:	ldr	r3, [sp, #4]
   14cd4:	cmp	r3, #0
   14cd8:	ldrbne	r7, [r3]
   14cdc:	beq	14cc8 <argp_parse@@Base+0x2970>
   14ce0:	bl	11154 <__ctype_tolower_loc@plt>
   14ce4:	ldr	r3, [r0]
   14ce8:	ldr	r4, [r3, r6, lsl #2]
   14cec:	ldr	r3, [r3, r7, lsl #2]
   14cf0:	subs	r4, r4, r3
   14cf4:	bne	14b88 <argp_parse@@Base+0x2830>
   14cf8:	subs	r4, r7, r6
   14cfc:	bne	14b88 <argp_parse@@Base+0x2830>
   14d00:	adds	r4, r5, #0
   14d04:	movne	r4, #1
   14d08:	cmp	r8, #0
   14d0c:	rsbeq	r4, r4, #0
   14d10:	rsbne	r4, r4, #1
   14d14:	cmp	r4, #0
   14d18:	bne	14b88 <argp_parse@@Base+0x2830>
   14d1c:	cmp	r8, #0
   14d20:	bne	14b88 <argp_parse@@Base+0x2830>
   14d24:	ldm	sp, {r0, r1}
   14d28:	adds	r4, r1, #0
   14d2c:	movne	r4, #1
   14d30:	cmp	r0, #0
   14d34:	rsbeq	r4, r4, #0
   14d38:	rsbne	r4, r4, #1
   14d3c:	cmp	r4, #0
   14d40:	bne	14b88 <argp_parse@@Base+0x2830>
   14d44:	cmp	r0, #0
   14d48:	beq	14b88 <argp_parse@@Base+0x2830>
   14d4c:	bl	110c4 <strcasecmp@plt>
   14d50:	mov	r4, r0
   14d54:	b	14b88 <argp_parse@@Base+0x2830>
   14d58:	strdeq	r3, [r1], -ip

00014d5c <argp_failure@@Base>:
   14d5c:	push	{r3}		; (str r3, [sp, #-4]!)
   14d60:	push	{r4, r5, r6, r7, r8, lr}
   14d64:	sub	sp, sp, #204	; 0xcc
   14d68:	subs	r5, r0, #0
   14d6c:	mov	r7, r1
   14d70:	mov	r6, r2
   14d74:	ldr	r8, [sp, #228]	; 0xe4
   14d78:	beq	14da4 <argp_failure@@Base+0x48>
   14d7c:	ldr	r3, [r5, #16]
   14d80:	tst	r3, #2
   14d84:	bne	14d94 <argp_failure@@Base+0x38>
   14d88:	ldr	r4, [r5, #44]	; 0x2c
   14d8c:	cmp	r4, #0
   14d90:	bne	14dc8 <argp_failure@@Base+0x6c>
   14d94:	add	sp, sp, #204	; 0xcc
   14d98:	pop	{r4, r5, r6, r7, r8, lr}
   14d9c:	add	sp, sp, #4
   14da0:	bx	lr
   14da4:	ldr	r3, [pc, #244]	; 14ea0 <argp_failure@@Base+0x144>
   14da8:	ldr	r4, [r3]
   14dac:	cmp	r4, #0
   14db0:	beq	14d94 <argp_failure@@Base+0x38>
   14db4:	mov	r0, r4
   14db8:	bl	11274 <flockfile@plt>
   14dbc:	ldr	r3, [pc, #224]	; 14ea4 <argp_failure@@Base+0x148>
   14dc0:	ldr	r0, [r3]
   14dc4:	b	14dd4 <argp_failure@@Base+0x78>
   14dc8:	mov	r0, r4
   14dcc:	bl	11274 <flockfile@plt>
   14dd0:	ldr	r0, [r5, #40]	; 0x28
   14dd4:	mov	r1, r4
   14dd8:	bl	10fec <fputs_unlocked@plt>
   14ddc:	cmp	r8, #0
   14de0:	beq	14e14 <argp_failure@@Base+0xb8>
   14de4:	add	r3, sp, #232	; 0xe8
   14de8:	mov	r1, r4
   14dec:	mov	r0, #58	; 0x3a
   14df0:	str	r3, [sp]
   14df4:	bl	112e0 <putc_unlocked@plt>
   14df8:	mov	r1, r4
   14dfc:	mov	r0, #32
   14e00:	bl	112e0 <putc_unlocked@plt>
   14e04:	ldr	r2, [sp]
   14e08:	mov	r1, r8
   14e0c:	mov	r0, r4
   14e10:	bl	11250 <vfprintf@plt>
   14e14:	cmp	r6, #0
   14e18:	beq	14e68 <argp_failure@@Base+0x10c>
   14e1c:	mov	r1, r4
   14e20:	mov	r0, #58	; 0x3a
   14e24:	bl	112e0 <putc_unlocked@plt>
   14e28:	mov	r1, r4
   14e2c:	mov	r0, #32
   14e30:	bl	112e0 <putc_unlocked@plt>
   14e34:	mov	r2, #200	; 0xc8
   14e38:	mov	r1, sp
   14e3c:	mov	r0, r6
   14e40:	bl	111f0 <strerror_r@plt>
   14e44:	cmp	r0, #0
   14e48:	bne	14e60 <argp_failure@@Base+0x104>
   14e4c:	mov	r0, r6
   14e50:	bl	11148 <strerror@plt>
   14e54:	ldr	r3, [pc, #76]	; 14ea8 <argp_failure@@Base+0x14c>
   14e58:	cmp	r0, #0
   14e5c:	moveq	r0, r3
   14e60:	mov	r1, r4
   14e64:	bl	10fec <fputs_unlocked@plt>
   14e68:	mov	r1, r4
   14e6c:	mov	r0, #10
   14e70:	bl	112e0 <putc_unlocked@plt>
   14e74:	mov	r0, r4
   14e78:	bl	110d0 <funlockfile@plt>
   14e7c:	cmp	r7, #0
   14e80:	beq	14d94 <argp_failure@@Base+0x38>
   14e84:	cmp	r5, #0
   14e88:	beq	14e98 <argp_failure@@Base+0x13c>
   14e8c:	ldr	r3, [r5, #16]
   14e90:	tst	r3, #32
   14e94:	bne	14d94 <argp_failure@@Base+0x38>
   14e98:	mov	r0, r7
   14e9c:	bl	1119c <exit@plt>
   14ea0:	andeq	r8, r2, r0, asr #4
   14ea4:	andeq	r8, r2, r8, lsr r2
   14ea8:	muleq	r1, r4, fp
   14eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14eb0:	add	fp, sp, #32
   14eb4:	sub	sp, sp, #116	; 0x74
   14eb8:	str	r3, [fp, #-104]	; 0xffffff98
   14ebc:	subs	r3, r2, #0
   14ec0:	str	r0, [fp, #-108]	; 0xffffff94
   14ec4:	str	r1, [fp, #-96]	; 0xffffffa0
   14ec8:	str	r3, [fp, #-112]	; 0xffffff90
   14ecc:	beq	14f48 <argp_failure@@Base+0x1ec>
   14ed0:	ldr	r5, [pc, #3996]	; 15e74 <argp_failure@@Base+0x1118>
   14ed4:	mov	r0, r3
   14ed8:	bl	11274 <flockfile@plt>
   14edc:	ldr	r9, [r5, #36]	; 0x24
   14ee0:	cmp	r9, #0
   14ee4:	bne	14f20 <argp_failure@@Base+0x1c4>
   14ee8:	ldr	r0, [pc, #3976]	; 15e78 <argp_failure@@Base+0x111c>
   14eec:	bl	11118 <getenv@plt>
   14ef0:	mov	ip, r5
   14ef4:	sub	lr, fp, #76	; 0x4c
   14ef8:	mov	r4, r0
   14efc:	ldm	ip!, {r0, r1, r2, r3}
   14f00:	cmp	r4, #0
   14f04:	movne	r5, #1
   14f08:	stmia	lr!, {r0, r1, r2, r3}
   14f0c:	ldm	ip!, {r0, r1, r2, r3}
   14f10:	stmia	lr!, {r0, r1, r2, r3}
   14f14:	ldm	ip, {r0, r1}
   14f18:	stm	lr, {r0, r1}
   14f1c:	bne	1519c <argp_failure@@Base+0x440>
   14f20:	ldr	r5, [pc, #3916]	; 15e74 <argp_failure@@Base+0x1118>
   14f24:	mov	r3, #0
   14f28:	mov	r1, r3
   14f2c:	ldr	r2, [r5, #32]
   14f30:	ldr	r0, [fp, #-112]	; 0xffffff90
   14f34:	bl	16b18 <argp_error@@Base+0xb78>
   14f38:	subs	r4, r0, #0
   14f3c:	bne	15230 <argp_failure@@Base+0x4d4>
   14f40:	ldr	r0, [fp, #-112]	; 0xffffff90
   14f44:	bl	110d0 <funlockfile@plt>
   14f48:	sub	sp, fp, #32
   14f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f50:	mov	r3, r1
   14f54:	mov	r1, r3
   14f58:	str	r3, [fp, #-100]	; 0xffffff9c
   14f5c:	ldrb	r0, [r1], #1
   14f60:	lsl	r2, r0, #1
   14f64:	ldrh	r2, [r6, r2]
   14f68:	tst	r2, #8192	; 0x2000
   14f6c:	bne	14f50 <argp_failure@@Base+0x1f4>
   14f70:	ands	r2, r2, #1024	; 0x400
   14f74:	movne	r2, r3
   14f78:	bne	14ff4 <argp_failure@@Base+0x298>
   14f7c:	cmp	r0, #0
   14f80:	beq	151ec <argp_failure@@Base+0x490>
   14f84:	str	r3, [sp]
   14f88:	mov	r1, r2
   14f8c:	ldr	r3, [pc, #3816]	; 15e7c <argp_failure@@Base+0x1120>
   14f90:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14f94:	bl	14d5c <argp_failure@@Base>
   14f98:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14f9c:	ldr	r3, [pc, #3804]	; 15e80 <argp_failure@@Base+0x1124>
   14fa0:	mov	r0, #9
   14fa4:	ldrb	r2, [r3, #14]
   14fa8:	cmp	r2, #0
   14fac:	bne	151f4 <argp_failure@@Base+0x498>
   14fb0:	ldrb	r1, [r3, #15]
   14fb4:	cmp	r1, #32
   14fb8:	beq	151f4 <argp_failure@@Base+0x498>
   14fbc:	sub	lr, fp, #36	; 0x24
   14fc0:	add	r1, lr, r1
   14fc4:	ldr	r1, [r1, #-40]	; 0xffffffd8
   14fc8:	cmp	r1, ip
   14fcc:	blt	151f4 <argp_failure@@Base+0x498>
   14fd0:	str	r3, [sp, #4]
   14fd4:	ldr	r3, [pc, #3752]	; 15e84 <argp_failure@@Base+0x1128>
   14fd8:	mov	r1, r2
   14fdc:	str	r3, [sp]
   14fe0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14fe4:	ldr	r3, [pc, #3740]	; 15e88 <argp_failure@@Base+0x112c>
   14fe8:	bl	14d5c <argp_failure@@Base>
   14fec:	b	14f20 <argp_failure@@Base+0x1c4>
   14ff0:	mov	r2, lr
   14ff4:	mov	lr, r2
   14ff8:	ldrb	r1, [lr], #1
   14ffc:	cmp	r1, #95	; 0x5f
   15000:	cmpne	r1, #45	; 0x2d
   15004:	lsl	ip, r1, #1
   15008:	moveq	r1, #1
   1500c:	ldrh	ip, [r6, ip]
   15010:	movne	r1, #0
   15014:	lsl	ip, ip, #28
   15018:	orrs	r1, r1, ip, lsr #31
   1501c:	bne	14ff0 <argp_failure@@Base+0x294>
   15020:	sub	r8, r2, r3
   15024:	mov	r4, r2
   15028:	ldrb	r1, [r2], #1
   1502c:	lsl	ip, r1, #1
   15030:	ldrh	ip, [r6, ip]
   15034:	tst	ip, #8192	; 0x2000
   15038:	bne	15024 <argp_failure@@Base+0x2c8>
   1503c:	cmp	r1, #44	; 0x2c
   15040:	cmpne	r1, #0
   15044:	beq	15db4 <argp_failure@@Base+0x1058>
   15048:	cmp	r1, #61	; 0x3d
   1504c:	bne	1506c <argp_failure@@Base+0x310>
   15050:	mov	r4, r2
   15054:	add	r2, r2, #1
   15058:	ldrb	r3, [r4]
   1505c:	lsl	r3, r3, #1
   15060:	ldrh	r3, [r6, r3]
   15064:	tst	r3, #8192	; 0x2000
   15068:	bne	15050 <argp_failure@@Base+0x2f4>
   1506c:	ldrb	r3, [r4]
   15070:	lsl	r3, r3, #1
   15074:	ldrh	r3, [r6, r3]
   15078:	tst	r3, #2048	; 0x800
   1507c:	moveq	sl, r9
   15080:	moveq	r7, r9
   15084:	beq	15100 <argp_failure@@Base+0x3a4>
   15088:	mov	r0, r4
   1508c:	bl	1128c <atoi@plt>
   15090:	mov	r3, r4
   15094:	mov	r7, r0
   15098:	ldrb	r2, [r3]
   1509c:	add	r1, r3, #1
   150a0:	lsl	r2, r2, #1
   150a4:	ldrh	r2, [r6, r2]
   150a8:	tst	r2, #2048	; 0x800
   150ac:	bne	151b8 <argp_failure@@Base+0x45c>
   150b0:	mov	r4, r3
   150b4:	add	r3, r3, #1
   150b8:	ldrb	r2, [r4]
   150bc:	lsl	r2, r2, #1
   150c0:	ldrh	r2, [r6, r2]
   150c4:	tst	r2, #8192	; 0x2000
   150c8:	bne	150b0 <argp_failure@@Base+0x354>
   150cc:	mov	sl, r9
   150d0:	b	15100 <argp_failure@@Base+0x3a4>
   150d4:	ldrb	r2, [r3, #1]
   150d8:	cmp	r2, #111	; 0x6f
   150dc:	bne	15dbc <argp_failure@@Base+0x1060>
   150e0:	ldrb	r2, [r3, #2]
   150e4:	cmp	r2, #45	; 0x2d
   150e8:	bne	15dbc <argp_failure@@Base+0x1060>
   150ec:	sub	r8, r8, #3
   150f0:	mov	r7, r9
   150f4:	mov	sl, r5
   150f8:	add	r3, r3, #3
   150fc:	str	r3, [fp, #-100]	; 0xffffff9c
   15100:	ldr	r6, [pc, #3448]	; 15e80 <argp_failure@@Base+0x1124>
   15104:	mov	r3, #9
   15108:	str	r3, [fp, #-116]	; 0xffffff8c
   1510c:	mov	r0, r6
   15110:	bl	111a8 <strlen@plt>
   15114:	cmp	r0, r8
   15118:	bne	151d4 <argp_failure@@Base+0x478>
   1511c:	mov	r2, r8
   15120:	mov	r1, r6
   15124:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15128:	bl	112b0 <strncmp@plt>
   1512c:	cmp	r0, #0
   15130:	bne	151d4 <argp_failure@@Base+0x478>
   15134:	cmp	sl, #0
   15138:	beq	151c0 <argp_failure@@Base+0x464>
   1513c:	ldrb	r2, [r6, #14]
   15140:	cmp	r2, #0
   15144:	bne	151c0 <argp_failure@@Base+0x464>
   15148:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1514c:	str	r8, [sp]
   15150:	str	r3, [sp, #4]
   15154:	mov	r1, r2
   15158:	ldr	r3, [pc, #3372]	; 15e8c <argp_failure@@Base+0x1130>
   1515c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15160:	bl	14d5c <argp_failure@@Base>
   15164:	ldr	r3, [pc, #3364]	; 15e90 <argp_failure@@Base+0x1134>
   15168:	cmp	r6, r3
   1516c:	bne	15190 <argp_failure@@Base+0x434>
   15170:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15174:	mov	r2, #0
   15178:	str	r3, [sp, #4]
   1517c:	str	r8, [sp]
   15180:	ldr	r3, [pc, #3340]	; 15e94 <argp_failure@@Base+0x1138>
   15184:	mov	r1, r2
   15188:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1518c:	bl	14d5c <argp_failure@@Base>
   15190:	ldrb	r3, [r4]
   15194:	cmp	r3, #44	; 0x2c
   15198:	addeq	r4, r4, #1
   1519c:	ldrb	r3, [r4]
   151a0:	cmp	r3, #0
   151a4:	beq	14f98 <argp_failure@@Base+0x23c>
   151a8:	bl	11190 <__ctype_b_loc@plt>
   151ac:	mov	r3, r4
   151b0:	ldr	r6, [r0]
   151b4:	b	14f54 <argp_failure@@Base+0x1f8>
   151b8:	mov	r3, r1
   151bc:	b	15098 <argp_failure@@Base+0x33c>
   151c0:	ldrb	r3, [r6, #15]
   151c4:	sub	r2, fp, #36	; 0x24
   151c8:	add	r3, r2, r3
   151cc:	str	r7, [r3, #-40]	; 0xffffffd8
   151d0:	b	15164 <argp_failure@@Base+0x408>
   151d4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   151d8:	add	r6, r6, #16
   151dc:	subs	r3, r3, #1
   151e0:	str	r3, [fp, #-116]	; 0xffffff8c
   151e4:	bne	1510c <argp_failure@@Base+0x3b0>
   151e8:	b	15164 <argp_failure@@Base+0x408>
   151ec:	mov	r4, r3
   151f0:	b	1519c <argp_failure@@Base+0x440>
   151f4:	subs	r0, r0, #1
   151f8:	add	r3, r3, #16
   151fc:	bne	14fa4 <argp_failure@@Base+0x248>
   15200:	sub	lr, fp, #76	; 0x4c
   15204:	ldr	r4, [pc, #3176]	; 15e74 <argp_failure@@Base+0x1118>
   15208:	ldm	lr!, {r0, r1, r2, r3}
   1520c:	mov	ip, r4
   15210:	stmia	ip!, {r0, r1, r2, r3}
   15214:	ldm	lr!, {r0, r1, r2, r3}
   15218:	stmia	ip!, {r0, r1, r2, r3}
   1521c:	mov	r3, #1
   15220:	ldm	lr, {r0, r1}
   15224:	stm	ip, {r0, r1}
   15228:	str	r3, [r4, #36]	; 0x24
   1522c:	b	14f20 <argp_failure@@Base+0x1c4>
   15230:	ldr	r3, [fp, #-104]	; 0xffffff98
   15234:	ands	r3, r3, #11
   15238:	moveq	sl, r3
   1523c:	beq	1529c <argp_failure@@Base+0x540>
   15240:	mov	r1, #0
   15244:	ldr	r0, [fp, #-108]	; 0xffffff94
   15248:	bl	14428 <argp_parse@@Base+0x20d0>
   1524c:	ldr	r1, [pc, #3140]	; 15e98 <argp_failure@@Base+0x113c>
   15250:	mov	sl, r0
   15254:	bl	143b4 <argp_parse@@Base+0x205c>
   15258:	ldr	r1, [pc, #3132]	; 15e9c <argp_failure@@Base+0x1140>
   1525c:	mov	r0, sl
   15260:	bl	143b4 <argp_parse@@Base+0x205c>
   15264:	ldr	r1, [sl, #4]
   15268:	cmp	r1, #0
   1526c:	beq	1529c <argp_failure@@Base+0x540>
   15270:	ldr	r0, [sl]
   15274:	mov	r3, #0
   15278:	mov	r2, r0
   1527c:	str	r3, [r2, #24]
   15280:	add	r3, r3, #1
   15284:	cmp	r1, r3
   15288:	add	r2, r2, #28
   1528c:	bne	1527c <argp_failure@@Base+0x520>
   15290:	ldr	r3, [pc, #3080]	; 15ea0 <argp_failure@@Base+0x1144>
   15294:	mov	r2, #28
   15298:	bl	11298 <qsort@plt>
   1529c:	ldr	r3, [fp, #-104]	; 0xffffff98
   152a0:	ands	r3, r3, #3
   152a4:	moveq	r5, r3
   152a8:	beq	15448 <argp_failure@@Base+0x6ec>
   152ac:	ldr	r0, [fp, #-108]	; 0xffffff94
   152b0:	bl	13600 <argp_parse@@Base+0x12a8>
   152b4:	mov	r1, #0
   152b8:	ldr	r6, [pc, #3044]	; 15ea4 <argp_failure@@Base+0x1148>
   152bc:	mov	r9, #1
   152c0:	add	r3, r0, #14
   152c4:	bic	r3, r3, #7
   152c8:	sub	sp, sp, r3
   152cc:	add	r7, sp, #8
   152d0:	mov	r2, r0
   152d4:	mov	r0, r7
   152d8:	bl	111fc <memset@plt>
   152dc:	ldr	r2, [r4, #24]
   152e0:	ldr	r3, [r4, #28]
   152e4:	ldr	r8, [r5, #28]
   152e8:	sub	r3, r3, r2
   152ec:	ldr	r2, [r4, #16]
   152f0:	cmp	r3, r2
   152f4:	bls	15300 <argp_failure@@Base+0x5a4>
   152f8:	mov	r0, r4
   152fc:	bl	16b90 <argp_error@@Base+0xbf0>
   15300:	ldr	r3, [r4, #12]
   15304:	cmp	r9, #0
   15308:	str	r8, [r4, #12]
   1530c:	ldrne	r2, [pc, #2964]	; 15ea8 <argp_failure@@Base+0x114c>
   15310:	ldreq	r2, [pc, #2964]	; 15eac <argp_failure@@Base+0x1150>
   15314:	str	r3, [fp, #-100]	; 0xffffff9c
   15318:	ldr	r1, [pc, #2960]	; 15eb0 <argp_failure@@Base+0x1154>
   1531c:	ldr	r3, [fp, #4]
   15320:	mov	r0, r4
   15324:	str	r7, [fp, #-76]	; 0xffffffb4
   15328:	bl	170c4 <argp_error@@Base+0x1124>
   1532c:	ldr	r2, [r4, #24]
   15330:	ldr	r3, [r4, #28]
   15334:	ldr	r8, [r5, #28]
   15338:	sub	r3, r3, r2
   1533c:	ldr	r2, [r4, #16]
   15340:	cmp	r3, r2
   15344:	bls	15350 <argp_failure@@Base+0x5f4>
   15348:	mov	r0, r4
   1534c:	bl	16b90 <argp_error@@Base+0xbf0>
   15350:	ldr	r3, [fp, #-104]	; 0xffffff98
   15354:	ldr	r9, [r4, #4]
   15358:	tst	r3, #2
   1535c:	str	r8, [r4, #4]
   15360:	beq	156c4 <argp_failure@@Base+0x968>
   15364:	ldr	r3, [sl, #4]
   15368:	cmp	r3, #0
   1536c:	beq	153ac <argp_failure@@Base+0x650>
   15370:	ldr	r3, [r4, #28]
   15374:	ldr	r2, [r4, #32]
   15378:	add	r3, r3, #12
   1537c:	cmp	r2, r3
   15380:	bcc	156ac <argp_failure@@Base+0x950>
   15384:	ldr	r2, [r4, #28]
   15388:	ldr	r3, [r6]
   1538c:	str	r3, [r2]
   15390:	ldr	r3, [r6, #4]
   15394:	str	r3, [r2, #4]
   15398:	ldr	r3, [r6, #8]
   1539c:	str	r3, [r2, #8]
   153a0:	ldr	r3, [r4, #28]
   153a4:	add	r3, r3, #12
   153a8:	str	r3, [r4, #28]
   153ac:	mov	r3, #1
   153b0:	sub	r2, fp, #76	; 0x4c
   153b4:	str	r4, [sp]
   153b8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   153bc:	ldr	r0, [fp, #-108]	; 0xffffff94
   153c0:	bl	14014 <argp_parse@@Base+0x1cbc>
   153c4:	ldr	r2, [r4, #24]
   153c8:	ldr	r3, [r4, #28]
   153cc:	sub	r3, r3, r2
   153d0:	ldr	r2, [r4, #16]
   153d4:	cmp	r3, r2
   153d8:	mov	r8, r0
   153dc:	bls	153e8 <argp_failure@@Base+0x68c>
   153e0:	mov	r0, r4
   153e4:	bl	16b90 <argp_error@@Base+0xbf0>
   153e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   153ec:	ldr	r2, [r4, #24]
   153f0:	str	r3, [r4, #12]
   153f4:	ldr	r3, [r4, #28]
   153f8:	sub	r3, r3, r2
   153fc:	ldr	r2, [r4, #16]
   15400:	cmp	r3, r2
   15404:	bls	15410 <argp_failure@@Base+0x6b4>
   15408:	mov	r0, r4
   1540c:	bl	16b90 <argp_error@@Base+0xbf0>
   15410:	ldr	r2, [r4, #28]
   15414:	ldr	r3, [r4, #32]
   15418:	str	r9, [r4, #4]
   1541c:	cmp	r2, r3
   15420:	bcs	156e0 <argp_failure@@Base+0x984>
   15424:	ldr	r3, [r4, #28]
   15428:	add	r2, r3, #1
   1542c:	str	r2, [r4, #28]
   15430:	mov	r2, #10
   15434:	strb	r2, [r3]
   15438:	mov	r9, #0
   1543c:	cmp	r8, r9
   15440:	bne	152dc <argp_failure@@Base+0x580>
   15444:	mov	r5, #1
   15448:	ldr	r3, [fp, #-104]	; 0xffffff98
   1544c:	tst	r3, #16
   15450:	beq	15478 <argp_failure@@Base+0x71c>
   15454:	mov	r3, #1
   15458:	str	r3, [sp]
   1545c:	mov	r3, #0
   15460:	str	r4, [sp, #4]
   15464:	mov	r2, r3
   15468:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1546c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15470:	bl	13a7c <argp_parse@@Base+0x1724>
   15474:	orr	r5, r5, r0
   15478:	ldr	r3, [fp, #-104]	; 0xffffff98
   1547c:	tst	r3, #4
   15480:	beq	1549c <argp_failure@@Base+0x740>
   15484:	ldr	r3, [fp, #4]
   15488:	ldr	r1, [pc, #2596]	; 15eb4 <argp_failure@@Base+0x1158>
   1548c:	mov	r2, r3
   15490:	mov	r0, r4
   15494:	bl	170c4 <argp_error@@Base+0x1124>
   15498:	mov	r5, #1
   1549c:	ldr	r3, [fp, #-104]	; 0xffffff98
   154a0:	tst	r3, #8
   154a4:	beq	155fc <argp_failure@@Base+0x8a0>
   154a8:	ldr	r3, [sl, #4]
   154ac:	cmp	r3, #0
   154b0:	beq	155fc <argp_failure@@Base+0x8a0>
   154b4:	cmp	r5, #0
   154b8:	beq	154e0 <argp_failure@@Base+0x784>
   154bc:	ldr	r2, [r4, #28]
   154c0:	ldr	r3, [r4, #32]
   154c4:	cmp	r2, r3
   154c8:	bcs	156f8 <argp_failure@@Base+0x99c>
   154cc:	ldr	r3, [r4, #28]
   154d0:	add	r2, r3, #1
   154d4:	str	r2, [r4, #28]
   154d8:	mov	r2, #10
   154dc:	strb	r2, [r3]
   154e0:	mov	r3, #0
   154e4:	str	r3, [fp, #-88]	; 0xffffffa8
   154e8:	str	r3, [fp, #-84]	; 0xffffffac
   154ec:	str	r3, [fp, #-80]	; 0xffffffb0
   154f0:	ldr	r3, [sl]
   154f4:	str	r3, [fp, #-100]	; 0xffffff9c
   154f8:	ldr	r3, [sl, #4]
   154fc:	str	r3, [fp, #-116]	; 0xffffff8c
   15500:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15504:	cmp	r3, #0
   15508:	bne	15710 <argp_failure@@Base+0x9b4>
   1550c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15510:	cmp	r3, #0
   15514:	beq	155f8 <argp_failure@@Base+0x89c>
   15518:	ldr	r3, [pc, #2388]	; 15e74 <argp_failure@@Base+0x1118>
   1551c:	ldr	r3, [r3, #4]
   15520:	cmp	r3, #0
   15524:	beq	155f8 <argp_failure@@Base+0x89c>
   15528:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1552c:	ldr	r1, [pc, #2436]	; 15eb8 <argp_failure@@Base+0x115c>
   15530:	cmp	r3, #0
   15534:	ldr	r0, [pc, #2432]	; 15ebc <argp_failure@@Base+0x1160>
   15538:	ldrne	r2, [r3]
   1553c:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   15540:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15544:	bl	136e0 <argp_parse@@Base+0x1388>
   15548:	subs	r5, r0, #0
   1554c:	beq	155f8 <argp_failure@@Base+0x89c>
   15550:	ldrb	r3, [r5]
   15554:	cmp	r3, #0
   15558:	beq	155e4 <argp_failure@@Base+0x888>
   1555c:	ldr	r2, [r4, #28]
   15560:	ldr	r3, [r4, #32]
   15564:	cmp	r2, r3
   15568:	bcs	15d54 <argp_failure@@Base+0xff8>
   1556c:	ldr	r3, [r4, #28]
   15570:	add	r2, r3, #1
   15574:	str	r2, [r4, #28]
   15578:	mov	r2, #10
   1557c:	strb	r2, [r3]
   15580:	mov	r0, r5
   15584:	bl	111a8 <strlen@plt>
   15588:	subs	r6, r0, #0
   1558c:	beq	155c0 <argp_failure@@Base+0x864>
   15590:	ldr	r3, [r4, #28]
   15594:	ldr	r2, [r4, #32]
   15598:	add	r3, r3, r6
   1559c:	cmp	r2, r3
   155a0:	bcc	15d6c <argp_failure@@Base+0x1010>
   155a4:	mov	r2, r6
   155a8:	mov	r1, r5
   155ac:	ldr	r0, [r4, #28]
   155b0:	bl	1107c <memcpy@plt>
   155b4:	ldr	r3, [r4, #28]
   155b8:	add	r6, r3, r6
   155bc:	str	r6, [r4, #28]
   155c0:	ldr	r2, [r4, #28]
   155c4:	ldr	r3, [r4, #32]
   155c8:	cmp	r2, r3
   155cc:	bcs	15d84 <argp_failure@@Base+0x1028>
   155d0:	ldr	r3, [r4, #28]
   155d4:	add	r2, r3, #1
   155d8:	str	r2, [r4, #28]
   155dc:	mov	r2, #10
   155e0:	strb	r2, [r3]
   155e4:	ldr	r3, [pc, #2256]	; 15ebc <argp_failure@@Base+0x1160>
   155e8:	cmp	r5, r3
   155ec:	beq	155f8 <argp_failure@@Base+0x89c>
   155f0:	mov	r0, r5
   155f4:	bl	12df4 <argp_parse@@Base+0xa9c>
   155f8:	mov	r5, #1
   155fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   15600:	tst	r3, #32
   15604:	beq	1562c <argp_failure@@Base+0x8d0>
   15608:	mov	r3, #0
   1560c:	str	r3, [sp]
   15610:	str	r4, [sp, #4]
   15614:	mov	r3, r5
   15618:	mov	r2, #1
   1561c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15620:	ldr	r0, [fp, #-108]	; 0xffffff94
   15624:	bl	13a7c <argp_parse@@Base+0x1724>
   15628:	orr	r5, r5, r0
   1562c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15630:	tst	r3, #64	; 0x40
   15634:	beq	15688 <argp_failure@@Base+0x92c>
   15638:	ldr	r3, [pc, #2176]	; 15ec0 <argp_failure@@Base+0x1164>
   1563c:	mov	r6, r3
   15640:	ldr	r2, [r3]
   15644:	cmp	r2, #0
   15648:	beq	15688 <argp_failure@@Base+0x92c>
   1564c:	cmp	r5, #0
   15650:	beq	15678 <argp_failure@@Base+0x91c>
   15654:	ldr	r2, [r4, #28]
   15658:	ldr	r3, [r4, #32]
   1565c:	cmp	r2, r3
   15660:	bcs	15d9c <argp_failure@@Base+0x1040>
   15664:	ldr	r3, [r4, #28]
   15668:	add	r2, r3, #1
   1566c:	str	r2, [r4, #28]
   15670:	mov	r2, #10
   15674:	strb	r2, [r3]
   15678:	ldr	r2, [r6]
   1567c:	ldr	r1, [pc, #2112]	; 15ec4 <argp_failure@@Base+0x1168>
   15680:	mov	r0, r4
   15684:	bl	170c4 <argp_error@@Base+0x1124>
   15688:	ldr	r0, [fp, #-112]	; 0xffffff90
   1568c:	bl	110d0 <funlockfile@plt>
   15690:	cmp	sl, #0
   15694:	beq	156a0 <argp_failure@@Base+0x944>
   15698:	mov	r0, sl
   1569c:	bl	135b4 <argp_parse@@Base+0x125c>
   156a0:	mov	r0, r4
   156a4:	bl	16fa0 <argp_error@@Base+0x1000>
   156a8:	b	14f48 <argp_failure@@Base+0x1ec>
   156ac:	mov	r1, #12
   156b0:	mov	r0, r4
   156b4:	bl	16fe0 <argp_error@@Base+0x1040>
   156b8:	cmp	r0, #0
   156bc:	bne	15384 <argp_failure@@Base+0x628>
   156c0:	b	153ac <argp_failure@@Base+0x650>
   156c4:	mov	r1, r4
   156c8:	mov	r0, sl
   156cc:	bl	14228 <argp_parse@@Base+0x1ed0>
   156d0:	ldr	r3, [fp, #-104]	; 0xffffff98
   156d4:	orr	r3, r3, #2
   156d8:	str	r3, [fp, #-104]	; 0xffffff98
   156dc:	b	153ac <argp_failure@@Base+0x650>
   156e0:	mov	r1, #1
   156e4:	mov	r0, r4
   156e8:	bl	16fe0 <argp_error@@Base+0x1040>
   156ec:	cmp	r0, #0
   156f0:	bne	15424 <argp_failure@@Base+0x6c8>
   156f4:	b	15438 <argp_failure@@Base+0x6dc>
   156f8:	mov	r1, #1
   156fc:	mov	r0, r4
   15700:	bl	16fe0 <argp_error@@Base+0x1040>
   15704:	cmp	r0, #0
   15708:	bne	154cc <argp_failure@@Base+0x770>
   1570c:	b	154e0 <argp_failure@@Base+0x784>
   15710:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15714:	ldr	r2, [r4, #24]
   15718:	ldr	r5, [r3]
   1571c:	ldr	r9, [r3, #8]
   15720:	ldr	r3, [r4, #28]
   15724:	sub	r3, r3, r2
   15728:	ldr	r2, [r4, #16]
   1572c:	cmp	r3, r2
   15730:	bls	1573c <argp_failure@@Base+0x9e0>
   15734:	mov	r0, r4
   15738:	bl	16b90 <argp_error@@Base+0xbf0>
   1573c:	ldr	r2, [r4, #12]
   15740:	ldr	r3, [r4, #4]
   15744:	str	r2, [fp, #-128]	; 0xffffff80
   15748:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1574c:	str	r3, [fp, #-124]	; 0xffffff84
   15750:	mov	r3, #0
   15754:	str	r3, [r4, #4]
   15758:	str	r2, [fp, #-76]	; 0xffffffb4
   1575c:	sub	r2, fp, #88	; 0x58
   15760:	str	r2, [fp, #-68]	; 0xffffffbc
   15764:	mov	r2, #1
   15768:	str	r2, [fp, #-64]	; 0xffffffc0
   1576c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15770:	str	r4, [fp, #-72]	; 0xffffffb8
   15774:	str	r2, [fp, #-60]	; 0xffffffc4
   15778:	ldr	r2, [r5, #12]
   1577c:	ands	r2, r2, #8
   15780:	str	r2, [fp, #-120]	; 0xffffff88
   15784:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   15788:	ldreq	r2, [r3, #4]
   1578c:	addeq	r3, r5, #24
   15790:	beq	157bc <argp_failure@@Base+0xa60>
   15794:	str	r3, [fp, #-120]	; 0xffffff88
   15798:	b	157c4 <argp_failure@@Base+0xa68>
   1579c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   157a0:	cmp	r1, #0
   157a4:	beq	157b4 <argp_failure@@Base+0xa58>
   157a8:	ldr	r1, [r3, #-12]
   157ac:	tst	r1, #2
   157b0:	beq	1594c <argp_failure@@Base+0xbf0>
   157b4:	sub	r2, r2, #1
   157b8:	add	r3, r3, #24
   157bc:	cmp	r2, #0
   157c0:	bne	1579c <argp_failure@@Base+0xa40>
   157c4:	ldr	r3, [pc, #1704]	; 15e74 <argp_failure@@Base+0x1118>
   157c8:	ldr	r2, [r4, #24]
   157cc:	ldr	r6, [r3, #8]
   157d0:	ldr	r3, [r4, #28]
   157d4:	sub	r3, r3, r2
   157d8:	ldr	r2, [r4, #16]
   157dc:	cmp	r3, r2
   157e0:	bls	157ec <argp_failure@@Base+0xa90>
   157e4:	mov	r0, r4
   157e8:	bl	16b90 <argp_error@@Base+0xbf0>
   157ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   157f0:	str	r6, [r4, #12]
   157f4:	ldr	r7, [pc, #1656]	; 15e74 <argp_failure@@Base+0x1118>
   157f8:	ldr	r8, [r3, #4]
   157fc:	mov	r6, r5
   15800:	cmp	r8, #0
   15804:	bne	15954 <argp_failure@@Base+0xbf8>
   15808:	ldr	r3, [r5, #12]
   1580c:	ldr	r1, [pc, #1632]	; 15e74 <argp_failure@@Base+0x1118>
   15810:	tst	r3, #8
   15814:	ldr	r2, [r4, #24]
   15818:	ldr	r3, [r4, #28]
   1581c:	beq	15a80 <argp_failure@@Base+0xd24>
   15820:	sub	r3, r3, r2
   15824:	ldr	r2, [r4, #16]
   15828:	ldr	r6, [r1, #16]
   1582c:	cmp	r3, r2
   15830:	bls	1583c <argp_failure@@Base+0xae0>
   15834:	mov	r0, r4
   15838:	bl	16b90 <argp_error@@Base+0xbf0>
   1583c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15840:	str	r6, [r4, #12]
   15844:	add	r6, r5, #24
   15848:	ldr	r7, [r3, #4]
   1584c:	cmp	r7, #0
   15850:	bne	159f0 <argp_failure@@Base+0xc94>
   15854:	ldr	r2, [r4, #24]
   15858:	ldr	r3, [r4, #28]
   1585c:	sub	r3, r3, r2
   15860:	ldr	r2, [r4, #16]
   15864:	cmp	r3, r2
   15868:	bls	15874 <argp_failure@@Base+0xb18>
   1586c:	mov	r0, r4
   15870:	bl	16b90 <argp_error@@Base+0xbf0>
   15874:	mov	r3, #0
   15878:	str	r3, [r4, #4]
   1587c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15880:	cmp	r3, #0
   15884:	beq	15b20 <argp_failure@@Base+0xdc4>
   15888:	ldr	r3, [r5, #12]
   1588c:	tst	r3, #8
   15890:	bne	158bc <argp_failure@@Base+0xb60>
   15894:	ldr	r6, [r5, #4]
   15898:	sub	r3, r6, #1
   1589c:	cmp	r3, #254	; 0xfe
   158a0:	bhi	158bc <argp_failure@@Base+0xb60>
   158a4:	bl	11190 <__ctype_b_loc@plt>
   158a8:	lsl	r6, r6, #1
   158ac:	ldr	r3, [r0]
   158b0:	ldrh	r3, [r3, r6]
   158b4:	tst	r3, #16384	; 0x4000
   158b8:	bne	158e4 <argp_failure@@Base+0xb88>
   158bc:	ldr	r3, [r5]
   158c0:	cmp	r3, #0
   158c4:	bne	158e4 <argp_failure@@Base+0xb88>
   158c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   158cc:	sub	r2, fp, #76	; 0x4c
   158d0:	ldr	r0, [r5, #16]
   158d4:	ldr	r1, [r3, #20]
   158d8:	bl	13724 <argp_parse@@Base+0x13cc>
   158dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   158e0:	str	r3, [fp, #-88]	; 0xffffffa8
   158e4:	ldr	r2, [r4, #24]
   158e8:	ldr	r3, [r4, #28]
   158ec:	sub	r3, r3, r2
   158f0:	ldr	r2, [r4, #16]
   158f4:	cmp	r3, r2
   158f8:	bls	15904 <argp_failure@@Base+0xba8>
   158fc:	mov	r0, r4
   15900:	bl	16b90 <argp_error@@Base+0xbf0>
   15904:	ldr	r3, [fp, #-124]	; 0xffffff84
   15908:	ldr	r2, [r4, #24]
   1590c:	str	r3, [r4, #4]
   15910:	ldr	r3, [r4, #28]
   15914:	sub	r3, r3, r2
   15918:	ldr	r2, [r4, #16]
   1591c:	cmp	r3, r2
   15920:	bls	1592c <argp_failure@@Base+0xbd0>
   15924:	mov	r0, r4
   15928:	bl	16b90 <argp_error@@Base+0xbf0>
   1592c:	ldr	r3, [fp, #-128]	; 0xffffff80
   15930:	str	r3, [r4, #12]
   15934:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15938:	add	r3, r3, #28
   1593c:	str	r3, [fp, #-100]	; 0xffffff9c
   15940:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15944:	sub	r3, r3, #1
   15948:	b	154fc <argp_failure@@Base+0x7a0>
   1594c:	mov	r3, #1
   15950:	b	15794 <argp_failure@@Base+0xa38>
   15954:	ldr	r2, [r6, #12]
   15958:	tst	r2, #8
   1595c:	str	r2, [fp, #-136]	; 0xffffff78
   15960:	bne	15998 <argp_failure@@Base+0xc3c>
   15964:	ldr	r3, [r6, #4]
   15968:	sub	r1, r3, #1
   1596c:	cmp	r1, #254	; 0xfe
   15970:	str	r3, [fp, #-132]	; 0xffffff7c
   15974:	bhi	15998 <argp_failure@@Base+0xc3c>
   15978:	bl	11190 <__ctype_b_loc@plt>
   1597c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15980:	ldr	r2, [fp, #-136]	; 0xffffff78
   15984:	lsl	r1, r3, #1
   15988:	ldr	r0, [r0]
   1598c:	ldrh	r1, [r0, r1]
   15990:	tst	r1, #16384	; 0x4000
   15994:	bne	15dc8 <argp_failure@@Base+0x106c>
   15998:	add	r6, r6, #24
   1599c:	sub	r8, r8, #1
   159a0:	b	15800 <argp_failure@@Base+0xaa4>
   159a4:	mov	r1, #1
   159a8:	mov	r0, r4
   159ac:	bl	16fe0 <argp_error@@Base+0x1040>
   159b0:	cmp	r0, #0
   159b4:	bne	15df8 <argp_failure@@Base+0x109c>
   159b8:	b	15e0c <argp_failure@@Base+0x10b0>
   159bc:	mov	r1, #1
   159c0:	mov	r0, r4
   159c4:	str	r2, [fp, #-132]	; 0xffffff7c
   159c8:	bl	16fe0 <argp_error@@Base+0x1040>
   159cc:	ldr	r2, [fp, #-132]	; 0xffffff7c
   159d0:	cmp	r0, #0
   159d4:	bne	15e20 <argp_failure@@Base+0x10c4>
   159d8:	b	15e30 <argp_failure@@Base+0x10d4>
   159dc:	ldr	r3, [r5, #8]
   159e0:	cmp	r3, #0
   159e4:	movne	r3, #1
   159e8:	strne	r3, [fp, #-80]	; 0xffffffb0
   159ec:	b	15e6c <argp_failure@@Base+0x1110>
   159f0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   159f4:	cmp	r3, #0
   159f8:	beq	15a5c <argp_failure@@Base+0xd00>
   159fc:	ldr	r3, [r6, #-12]
   15a00:	tst	r3, #2
   15a04:	bne	15a5c <argp_failure@@Base+0xd00>
   15a08:	ldr	r3, [pc, #1124]	; 15e74 <argp_failure@@Base+0x1118>
   15a0c:	sub	r1, fp, #76	; 0x4c
   15a10:	ldr	r0, [r3, #16]
   15a14:	bl	138fc <argp_parse@@Base+0x15a4>
   15a18:	ldr	r8, [r6, #-24]	; 0xffffffe8
   15a1c:	mov	r0, r8
   15a20:	bl	111a8 <strlen@plt>
   15a24:	subs	r9, r0, #0
   15a28:	beq	15a5c <argp_failure@@Base+0xd00>
   15a2c:	ldr	r3, [r4, #28]
   15a30:	ldr	r2, [r4, #32]
   15a34:	add	r3, r3, r9
   15a38:	cmp	r2, r3
   15a3c:	bcc	15a68 <argp_failure@@Base+0xd0c>
   15a40:	mov	r2, r9
   15a44:	mov	r1, r8
   15a48:	ldr	r0, [r4, #28]
   15a4c:	bl	1107c <memcpy@plt>
   15a50:	ldr	r3, [r4, #28]
   15a54:	add	r9, r3, r9
   15a58:	str	r9, [r4, #28]
   15a5c:	sub	r7, r7, #1
   15a60:	add	r6, r6, #24
   15a64:	b	1584c <argp_failure@@Base+0xaf0>
   15a68:	mov	r1, r9
   15a6c:	mov	r0, r4
   15a70:	bl	16fe0 <argp_error@@Base+0x1040>
   15a74:	cmp	r0, #0
   15a78:	bne	15a40 <argp_failure@@Base+0xce4>
   15a7c:	b	15a5c <argp_failure@@Base+0xd00>
   15a80:	sub	r3, r3, r2
   15a84:	ldr	r2, [r4, #16]
   15a88:	ldr	r6, [r1, #12]
   15a8c:	cmp	r3, r2
   15a90:	bls	15a9c <argp_failure@@Base+0xd40>
   15a94:	mov	r0, r4
   15a98:	bl	16b90 <argp_error@@Base+0xbf0>
   15a9c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15aa0:	str	r6, [r4, #12]
   15aa4:	ldr	r7, [pc, #968]	; 15e74 <argp_failure@@Base+0x1118>
   15aa8:	ldr	r6, [r3, #4]
   15aac:	ldr	r8, [pc, #1044]	; 15ec8 <argp_failure@@Base+0x116c>
   15ab0:	add	r9, r5, #24
   15ab4:	cmp	r6, #0
   15ab8:	beq	15854 <argp_failure@@Base+0xaf8>
   15abc:	ldr	r3, [r9, #-24]	; 0xffffffe8
   15ac0:	cmp	r3, #0
   15ac4:	beq	15b14 <argp_failure@@Base+0xdb8>
   15ac8:	ldr	r3, [r9, #-12]
   15acc:	tst	r3, #2
   15ad0:	bne	15b14 <argp_failure@@Base+0xdb8>
   15ad4:	sub	r1, fp, #76	; 0x4c
   15ad8:	ldr	r0, [r7, #12]
   15adc:	bl	138fc <argp_parse@@Base+0x15a4>
   15ae0:	ldr	r2, [r9, #-24]	; 0xffffffe8
   15ae4:	mov	r1, r8
   15ae8:	mov	r0, r4
   15aec:	bl	170c4 <argp_error@@Base+0x1124>
   15af0:	ldr	r2, [r5, #8]
   15af4:	cmp	r2, #0
   15af8:	beq	15b14 <argp_failure@@Base+0xdb8>
   15afc:	ldr	r3, [r5, #12]
   15b00:	mov	r0, r4
   15b04:	tst	r3, #1
   15b08:	ldrne	r1, [pc, #956]	; 15ecc <argp_failure@@Base+0x1170>
   15b0c:	ldreq	r1, [pc, #956]	; 15ed0 <argp_failure@@Base+0x1174>
   15b10:	bl	170c4 <argp_error@@Base+0x1124>
   15b14:	sub	r6, r6, #1
   15b18:	add	r9, r9, #24
   15b1c:	b	15ab4 <argp_failure@@Base+0xd58>
   15b20:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15b24:	ldr	r6, [r5, #16]
   15b28:	ldr	r1, [r5, #4]
   15b2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15b30:	ldr	r2, [r2, #20]
   15b34:	mov	r0, r6
   15b38:	bl	136e0 <argp_parse@@Base+0x1388>
   15b3c:	subs	r5, r0, #0
   15b40:	beq	15c54 <argp_failure@@Base+0xef8>
   15b44:	ldrb	r3, [r5]
   15b48:	cmp	r3, #0
   15b4c:	beq	15c44 <argp_failure@@Base+0xee8>
   15b50:	ldr	r2, [r4, #24]
   15b54:	ldr	r3, [r4, #28]
   15b58:	sub	r3, r3, r2
   15b5c:	ldr	r2, [r4, #16]
   15b60:	cmp	r3, r2
   15b64:	bls	15b70 <argp_failure@@Base+0xe14>
   15b68:	mov	r0, r4
   15b6c:	bl	16b90 <argp_error@@Base+0xbf0>
   15b70:	ldr	r2, [r4, #24]
   15b74:	ldr	r3, [r4, #28]
   15b78:	ldr	r7, [r4, #20]
   15b7c:	sub	r3, r3, r2
   15b80:	ldr	r8, [pc, #748]	; 15e74 <argp_failure@@Base+0x1118>
   15b84:	ldr	r2, [r4, #16]
   15b88:	bic	r7, r7, r7, asr #31
   15b8c:	cmp	r3, r2
   15b90:	ldr	r9, [r8, #20]
   15b94:	bls	15ba0 <argp_failure@@Base+0xe44>
   15b98:	mov	r0, r4
   15b9c:	bl	16b90 <argp_error@@Base+0xbf0>
   15ba0:	ldr	r2, [r4, #24]
   15ba4:	ldr	r3, [r4, #28]
   15ba8:	str	r9, [r4, #4]
   15bac:	sub	r3, r3, r2
   15bb0:	ldr	r2, [r4, #16]
   15bb4:	ldr	r8, [r8, #20]
   15bb8:	cmp	r3, r2
   15bbc:	bls	15bc8 <argp_failure@@Base+0xe6c>
   15bc0:	mov	r0, r4
   15bc4:	bl	16b90 <argp_error@@Base+0xbf0>
   15bc8:	ldr	r3, [pc, #676]	; 15e74 <argp_failure@@Base+0x1118>
   15bcc:	str	r8, [r4, #12]
   15bd0:	ldr	r1, [r3, #20]
   15bd4:	add	r3, r1, #3
   15bd8:	cmp	r7, r3
   15bdc:	bls	15cbc <argp_failure@@Base+0xf60>
   15be0:	ldr	r2, [r4, #28]
   15be4:	ldr	r3, [r4, #32]
   15be8:	cmp	r2, r3
   15bec:	bcs	15ca4 <argp_failure@@Base+0xf48>
   15bf0:	ldr	r3, [r4, #28]
   15bf4:	add	r2, r3, #1
   15bf8:	str	r2, [r4, #28]
   15bfc:	mov	r2, #10
   15c00:	strb	r2, [r3]
   15c04:	mov	r0, r5
   15c08:	bl	111a8 <strlen@plt>
   15c0c:	subs	r7, r0, #0
   15c10:	beq	15c44 <argp_failure@@Base+0xee8>
   15c14:	ldr	r3, [r4, #28]
   15c18:	ldr	r2, [r4, #32]
   15c1c:	add	r3, r3, r7
   15c20:	cmp	r2, r3
   15c24:	bcc	15d24 <argp_failure@@Base+0xfc8>
   15c28:	mov	r2, r7
   15c2c:	mov	r1, r5
   15c30:	ldr	r0, [r4, #28]
   15c34:	bl	1107c <memcpy@plt>
   15c38:	ldr	r3, [r4, #28]
   15c3c:	add	r7, r3, r7
   15c40:	str	r7, [r4, #28]
   15c44:	cmp	r6, r5
   15c48:	beq	15c54 <argp_failure@@Base+0xef8>
   15c4c:	mov	r0, r5
   15c50:	bl	12df4 <argp_parse@@Base+0xa9c>
   15c54:	ldr	r2, [r4, #24]
   15c58:	ldr	r3, [r4, #28]
   15c5c:	sub	r3, r3, r2
   15c60:	ldr	r2, [r4, #16]
   15c64:	cmp	r3, r2
   15c68:	bls	15c74 <argp_failure@@Base+0xf18>
   15c6c:	mov	r0, r4
   15c70:	bl	16b90 <argp_error@@Base+0xbf0>
   15c74:	mov	r3, #0
   15c78:	str	r3, [r4, #4]
   15c7c:	ldr	r2, [r4, #28]
   15c80:	ldr	r3, [r4, #32]
   15c84:	cmp	r2, r3
   15c88:	bcs	15d3c <argp_failure@@Base+0xfe0>
   15c8c:	ldr	r3, [r4, #28]
   15c90:	add	r2, r3, #1
   15c94:	str	r2, [r4, #28]
   15c98:	mov	r2, #10
   15c9c:	strb	r2, [r3]
   15ca0:	b	158dc <argp_failure@@Base+0xb80>
   15ca4:	mov	r1, #1
   15ca8:	mov	r0, r4
   15cac:	bl	16fe0 <argp_error@@Base+0x1040>
   15cb0:	cmp	r0, #0
   15cb4:	bne	15bf0 <argp_failure@@Base+0xe94>
   15cb8:	b	15c04 <argp_failure@@Base+0xea8>
   15cbc:	cmp	r7, r1
   15cc0:	bcc	15d18 <argp_failure@@Base+0xfbc>
   15cc4:	ldr	r3, [r4, #28]
   15cc8:	ldr	r2, [r4, #32]
   15ccc:	add	r3, r3, #3
   15cd0:	cmp	r2, r3
   15cd4:	bcc	15d00 <argp_failure@@Base+0xfa4>
   15cd8:	ldr	r2, [pc, #500]	; 15ed4 <argp_failure@@Base+0x1178>
   15cdc:	ldr	r3, [r4, #28]
   15ce0:	ldrh	r1, [r2]
   15ce4:	ldrb	r2, [r2, #2]
   15ce8:	strh	r1, [r3]
   15cec:	strb	r2, [r3, #2]
   15cf0:	ldr	r3, [r4, #28]
   15cf4:	add	r3, r3, #3
   15cf8:	str	r3, [r4, #28]
   15cfc:	b	15c04 <argp_failure@@Base+0xea8>
   15d00:	mov	r1, #3
   15d04:	mov	r0, r4
   15d08:	bl	16fe0 <argp_error@@Base+0x1040>
   15d0c:	cmp	r0, #0
   15d10:	bne	15cd8 <argp_failure@@Base+0xf7c>
   15d14:	b	15c04 <argp_failure@@Base+0xea8>
   15d18:	mov	r0, r4
   15d1c:	bl	13658 <argp_parse@@Base+0x1300>
   15d20:	b	15c04 <argp_failure@@Base+0xea8>
   15d24:	mov	r1, r7
   15d28:	mov	r0, r4
   15d2c:	bl	16fe0 <argp_error@@Base+0x1040>
   15d30:	cmp	r0, #0
   15d34:	bne	15c28 <argp_failure@@Base+0xecc>
   15d38:	b	15c44 <argp_failure@@Base+0xee8>
   15d3c:	mov	r1, #1
   15d40:	mov	r0, r4
   15d44:	bl	16fe0 <argp_error@@Base+0x1040>
   15d48:	cmp	r0, #0
   15d4c:	bne	15c8c <argp_failure@@Base+0xf30>
   15d50:	b	158dc <argp_failure@@Base+0xb80>
   15d54:	mov	r1, #1
   15d58:	mov	r0, r4
   15d5c:	bl	16fe0 <argp_error@@Base+0x1040>
   15d60:	cmp	r0, #0
   15d64:	bne	1556c <argp_failure@@Base+0x810>
   15d68:	b	15580 <argp_failure@@Base+0x824>
   15d6c:	mov	r1, r6
   15d70:	mov	r0, r4
   15d74:	bl	16fe0 <argp_error@@Base+0x1040>
   15d78:	cmp	r0, #0
   15d7c:	bne	155a4 <argp_failure@@Base+0x848>
   15d80:	b	155c0 <argp_failure@@Base+0x864>
   15d84:	mov	r1, #1
   15d88:	mov	r0, r4
   15d8c:	bl	16fe0 <argp_error@@Base+0x1040>
   15d90:	cmp	r0, #0
   15d94:	bne	155d0 <argp_failure@@Base+0x874>
   15d98:	b	155e4 <argp_failure@@Base+0x888>
   15d9c:	mov	r1, #1
   15da0:	mov	r0, r4
   15da4:	bl	16fe0 <argp_error@@Base+0x1040>
   15da8:	cmp	r0, #0
   15dac:	bne	15664 <argp_failure@@Base+0x908>
   15db0:	b	15678 <argp_failure@@Base+0x91c>
   15db4:	cmp	r0, #110	; 0x6e
   15db8:	beq	150d4 <argp_failure@@Base+0x378>
   15dbc:	mov	sl, r5
   15dc0:	mov	r7, r5
   15dc4:	b	15100 <argp_failure@@Base+0x3a4>
   15dc8:	ldrb	r1, [r9]
   15dcc:	cmp	r3, r1
   15dd0:	bne	15998 <argp_failure@@Base+0xc3c>
   15dd4:	tst	r2, #2
   15dd8:	bne	15e6c <argp_failure@@Base+0x1110>
   15ddc:	sub	r1, fp, #76	; 0x4c
   15de0:	ldr	r0, [r7, #8]
   15de4:	bl	138fc <argp_parse@@Base+0x15a4>
   15de8:	ldr	r2, [r4, #28]
   15dec:	ldr	r3, [r4, #32]
   15df0:	cmp	r2, r3
   15df4:	bcs	159a4 <argp_failure@@Base+0xc48>
   15df8:	ldr	r3, [r4, #28]
   15dfc:	add	r2, r3, #1
   15e00:	str	r2, [r4, #28]
   15e04:	mov	r2, #45	; 0x2d
   15e08:	strb	r2, [r3]
   15e0c:	ldr	r1, [r4, #28]
   15e10:	ldr	r3, [r4, #32]
   15e14:	ldrb	r2, [r9]
   15e18:	cmp	r1, r3
   15e1c:	bcs	159bc <argp_failure@@Base+0xc60>
   15e20:	ldr	r3, [r4, #28]
   15e24:	add	r1, r3, #1
   15e28:	str	r1, [r4, #28]
   15e2c:	strb	r2, [r3]
   15e30:	ldr	r3, [fp, #-120]	; 0xffffff88
   15e34:	cmp	r3, #0
   15e38:	beq	15e48 <argp_failure@@Base+0x10ec>
   15e3c:	ldr	r3, [r7]
   15e40:	cmp	r3, #0
   15e44:	beq	159dc <argp_failure@@Base+0xc80>
   15e48:	ldr	r2, [r5, #8]
   15e4c:	cmp	r2, #0
   15e50:	beq	15e6c <argp_failure@@Base+0x1110>
   15e54:	ldr	r3, [r5, #12]
   15e58:	mov	r0, r4
   15e5c:	tst	r3, #1
   15e60:	ldrne	r1, [pc, #112]	; 15ed8 <argp_failure@@Base+0x117c>
   15e64:	ldreq	r1, [pc, #112]	; 15edc <argp_failure@@Base+0x1180>
   15e68:	bl	170c4 <argp_error@@Base+0x1124>
   15e6c:	add	r9, r9, #1
   15e70:	b	15998 <argp_failure@@Base+0xc3c>
   15e74:	strdeq	r8, [r2], -ip
   15e78:	andeq	r7, r1, r9, lsr #23
   15e7c:	andeq	r7, r1, ip, lsl #24
   15e80:	andeq	r7, r1, r1, lsr sl
   15e84:	andeq	r7, r1, sp, asr ip
   15e88:	andeq	r7, r1, r9, lsr #24
   15e8c:			; <UNDEFINED> instruction: 0x00017bb7
   15e90:	andeq	r7, r1, r1, asr #21
   15e94:	andeq	r7, r1, r6, ror #23
   15e98:	strdeq	r7, [r1], -r7	; <UNPREDICTABLE>
   15e9c:	andeq	r7, r1, pc, ror #11
   15ea0:			; <UNDEFINED> instruction: 0x00014ab4
   15ea4:	andeq	r7, r1, r9, ror ip
   15ea8:	andeq	r7, r1, r5, ror #24
   15eac:	andeq	r7, r1, r2, ror ip
   15eb0:	andeq	r7, r1, ip, ror #24
   15eb4:	andeq	r7, r1, r6, lsl #25
   15eb8:	andeq	r0, r0, #5
   15ebc:	ldrdeq	r7, [r1], -r5
   15ec0:	muleq	r2, ip, r2
   15ec4:	andeq	r7, r1, r9, asr #26
   15ec8:	andeq	r7, r1, r2, asr #25
   15ecc:	andeq	r7, r1, r7, asr #25
   15ed0:	andeq	r7, r1, sp, asr #25
   15ed4:	ldrdeq	r7, [r1], -r1
   15ed8:			; <UNDEFINED> instruction: 0x00017cbd
   15edc:	andeq	r7, r1, r5, lsr #24

00015ee0 <argp_help@@Base>:
   15ee0:	push	{r0, r1, r2, lr}
   15ee4:	str	r3, [sp]
   15ee8:	mov	r3, r2
   15eec:	mov	r2, r1
   15ef0:	mov	r1, #0
   15ef4:	bl	14eac <argp_failure@@Base+0x150>
   15ef8:	add	sp, sp, #12
   15efc:	pop	{pc}		; (ldr pc, [sp], #4)

00015f00 <argp_state_help@@Base>:
   15f00:	push	{r0, r1, r2, r4, r5, lr}
   15f04:	subs	r4, r0, #0
   15f08:	mov	r5, r2
   15f0c:	beq	15f24 <argp_state_help@@Base+0x24>
   15f10:	ldr	r3, [r4, #16]
   15f14:	tst	r3, #2
   15f18:	beq	15f3c <argp_state_help@@Base+0x3c>
   15f1c:	add	sp, sp, #12
   15f20:	pop	{r4, r5, pc}
   15f24:	cmp	r1, #0
   15f28:	beq	15f1c <argp_state_help@@Base+0x1c>
   15f2c:	ldr	r3, [pc, #100]	; 15f98 <argp_state_help@@Base+0x98>
   15f30:	mov	r0, r4
   15f34:	ldr	r3, [r3]
   15f38:	b	15f54 <argp_state_help@@Base+0x54>
   15f3c:	cmp	r1, #0
   15f40:	beq	15f1c <argp_state_help@@Base+0x1c>
   15f44:	tst	r3, #64	; 0x40
   15f48:	ldr	r0, [r4]
   15f4c:	ldr	r3, [r4, #40]	; 0x28
   15f50:	orrne	r5, r5, #128	; 0x80
   15f54:	str	r3, [sp]
   15f58:	mov	r2, r1
   15f5c:	mov	r3, r5
   15f60:	mov	r1, r4
   15f64:	bl	14eac <argp_failure@@Base+0x150>
   15f68:	cmp	r4, #0
   15f6c:	beq	15f7c <argp_state_help@@Base+0x7c>
   15f70:	ldr	r3, [r4, #16]
   15f74:	tst	r3, #32
   15f78:	bne	15f1c <argp_state_help@@Base+0x1c>
   15f7c:	ands	r0, r5, #256	; 0x100
   15f80:	ldrne	r3, [pc, #20]	; 15f9c <argp_state_help@@Base+0x9c>
   15f84:	ldrne	r0, [r3]
   15f88:	bne	15f94 <argp_state_help@@Base+0x94>
   15f8c:	tst	r5, #512	; 0x200
   15f90:	beq	15f1c <argp_state_help@@Base+0x1c>
   15f94:	bl	1119c <exit@plt>
   15f98:	andeq	r8, r2, r8, lsr r2
   15f9c:	andeq	r8, r2, r0, lsr r2

00015fa0 <argp_error@@Base>:
   15fa0:	push	{r1, r2, r3}
   15fa4:	push	{r0, r1, r4, r5, lr}
   15fa8:	subs	r5, r0, #0
   15fac:	beq	15fd8 <argp_error@@Base+0x38>
   15fb0:	ldr	r3, [r5, #16]
   15fb4:	tst	r3, #2
   15fb8:	bne	15fc8 <argp_error@@Base+0x28>
   15fbc:	ldr	r4, [r5, #44]	; 0x2c
   15fc0:	cmp	r4, #0
   15fc4:	bne	16004 <argp_error@@Base+0x64>
   15fc8:	add	sp, sp, #8
   15fcc:	pop	{r4, r5, lr}
   15fd0:	add	sp, sp, #12
   15fd4:	bx	lr
   15fd8:	ldr	r3, [pc, #144]	; 16070 <argp_error@@Base+0xd0>
   15fdc:	ldr	r4, [r3]
   15fe0:	cmp	r4, #0
   15fe4:	beq	15fc8 <argp_error@@Base+0x28>
   15fe8:	mov	r0, r4
   15fec:	bl	11274 <flockfile@plt>
   15ff0:	add	r3, sp, #24
   15ff4:	str	r3, [sp, #4]
   15ff8:	ldr	r3, [pc, #116]	; 16074 <argp_error@@Base+0xd4>
   15ffc:	ldr	r0, [r3]
   16000:	b	16018 <argp_error@@Base+0x78>
   16004:	mov	r0, r4
   16008:	bl	11274 <flockfile@plt>
   1600c:	ldr	r0, [r5, #40]	; 0x28
   16010:	add	r3, sp, #24
   16014:	str	r3, [sp, #4]
   16018:	mov	r1, r4
   1601c:	bl	10fec <fputs_unlocked@plt>
   16020:	mov	r1, r4
   16024:	mov	r0, #58	; 0x3a
   16028:	bl	112e0 <putc_unlocked@plt>
   1602c:	mov	r1, r4
   16030:	mov	r0, #32
   16034:	bl	112e0 <putc_unlocked@plt>
   16038:	ldr	r2, [sp, #4]
   1603c:	ldr	r1, [sp, #20]
   16040:	mov	r0, r4
   16044:	bl	11250 <vfprintf@plt>
   16048:	mov	r1, r4
   1604c:	mov	r0, #10
   16050:	bl	112e0 <putc_unlocked@plt>
   16054:	mov	r0, r5
   16058:	mov	r2, #260	; 0x104
   1605c:	mov	r1, r4
   16060:	bl	15f00 <argp_state_help@@Base>
   16064:	mov	r0, r4
   16068:	bl	110d0 <funlockfile@plt>
   1606c:	b	15fc8 <argp_error@@Base+0x28>
   16070:	andeq	r8, r2, r0, asr #4
   16074:	andeq	r8, r2, r8, lsr r2
   16078:	ldr	r3, [r1, #32]
   1607c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16080:	ldr	r7, [r1, #28]
   16084:	ldr	r6, [r1]
   16088:	add	r8, r0, r3, lsl #2
   1608c:	mov	lr, r6
   16090:	mov	r4, r7
   16094:	cmp	lr, r3
   16098:	movle	r2, #0
   1609c:	movgt	r2, #1
   160a0:	cmp	r4, r3
   160a4:	movge	r2, #0
   160a8:	cmp	r2, #0
   160ac:	bne	160c4 <argp_error@@Base+0x124>
   160b0:	sub	r3, r6, r3
   160b4:	add	r3, r3, r7
   160b8:	str	r3, [r1, #28]
   160bc:	str	r6, [r1, #32]
   160c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160c4:	sub	r2, r3, r4
   160c8:	sub	r5, lr, r3
   160cc:	cmp	r5, r2
   160d0:	lsl	ip, r4, #2
   160d4:	addle	r2, r0, ip
   160d8:	movle	r9, r8
   160dc:	movle	ip, #0
   160e0:	ble	16114 <argp_error@@Base+0x174>
   160e4:	sub	r2, lr, r2
   160e8:	add	ip, r0, ip
   160ec:	add	r5, r0, r2, lsl #2
   160f0:	add	lr, r0, lr, lsl #2
   160f4:	ldr	r9, [ip]
   160f8:	ldr	sl, [r5]
   160fc:	str	sl, [ip], #4
   16100:	str	r9, [r5], #4
   16104:	cmp	lr, r5
   16108:	bne	160f4 <argp_error@@Base+0x154>
   1610c:	mov	lr, r2
   16110:	b	16094 <argp_error@@Base+0xf4>
   16114:	ldr	sl, [r2]
   16118:	ldr	fp, [r9]
   1611c:	add	ip, ip, #1
   16120:	cmp	r5, ip
   16124:	str	fp, [r2], #4
   16128:	str	sl, [r9], #4
   1612c:	bgt	16114 <argp_error@@Base+0x174>
   16130:	add	r4, r4, r5
   16134:	mov	r2, lr
   16138:	b	1610c <argp_error@@Base+0x16c>
   1613c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16140:	sub	sp, sp, #44	; 0x2c
   16144:	mov	sl, r1
   16148:	ldr	r4, [sp, #88]	; 0x58
   1614c:	str	r0, [sp, #36]	; 0x24
   16150:	str	r2, [sp, #32]
   16154:	ldr	r8, [r4, #20]
   16158:	str	r3, [sp, #20]
   1615c:	mov	r9, r8
   16160:	mov	r3, r9
   16164:	ldrb	r6, [r3], #1
   16168:	cmp	r6, #0
   1616c:	cmpne	r6, #61	; 0x3d
   16170:	movne	r6, #1
   16174:	moveq	r6, #0
   16178:	bne	16240 <argp_error@@Base+0x2a0>
   1617c:	sub	r3, r9, r8
   16180:	str	r3, [sp, #24]
   16184:	ldr	r3, [sp, #20]
   16188:	add	r7, r3, r6, lsl #4
   1618c:	ldr	r5, [r3, r6, lsl #4]
   16190:	cmp	r5, #0
   16194:	bne	16248 <argp_error@@Base+0x2a8>
   16198:	mov	r8, r5
   1619c:	mov	r7, r5
   161a0:	mov	fp, r3
   161a4:	mvn	r3, #0
   161a8:	str	r3, [sp, #16]
   161ac:	str	r5, [sp, #28]
   161b0:	str	r5, [sp, #12]
   161b4:	ldr	r0, [fp]
   161b8:	cmp	r0, #0
   161bc:	bne	1627c <argp_error@@Base+0x2dc>
   161c0:	cmp	r5, #0
   161c4:	cmpeq	r8, #0
   161c8:	beq	163b4 <argp_error@@Base+0x414>
   161cc:	ldr	r3, [sp, #92]	; 0x5c
   161d0:	cmp	r3, #0
   161d4:	beq	16200 <argp_error@@Base+0x260>
   161d8:	cmp	r5, #0
   161dc:	ldr	r7, [pc, #908]	; 16570 <argp_error@@Base+0x5d0>
   161e0:	beq	16340 <argp_error@@Base+0x3a0>
   161e4:	ldr	r3, [r4, #20]
   161e8:	ldr	r2, [sl]
   161ec:	str	r3, [sp]
   161f0:	ldr	r1, [pc, #892]	; 16574 <argp_error@@Base+0x5d4>
   161f4:	ldr	r3, [sp, #96]	; 0x60
   161f8:	ldr	r0, [r7]
   161fc:	bl	111c0 <fprintf@plt>
   16200:	ldr	r3, [sp, #28]
   16204:	cmp	r3, #0
   16208:	beq	16214 <argp_error@@Base+0x274>
   1620c:	mov	r0, r8
   16210:	bl	12df4 <argp_parse@@Base+0xa9c>
   16214:	ldr	r5, [r4, #20]
   16218:	mov	r0, r5
   1621c:	bl	111a8 <strlen@plt>
   16220:	ldr	r3, [r4]
   16224:	add	r3, r3, #1
   16228:	str	r3, [r4]
   1622c:	mov	r3, #0
   16230:	add	r0, r5, r0
   16234:	str	r0, [r4, #20]
   16238:	str	r3, [r4, #8]
   1623c:	b	1643c <argp_error@@Base+0x49c>
   16240:	mov	r9, r3
   16244:	b	16160 <argp_error@@Base+0x1c0>
   16248:	ldr	r2, [sp, #24]
   1624c:	mov	r1, r8
   16250:	mov	r0, r5
   16254:	bl	112b0 <strncmp@plt>
   16258:	cmp	r0, #0
   1625c:	bne	16274 <argp_error@@Base+0x2d4>
   16260:	mov	r0, r5
   16264:	bl	111a8 <strlen@plt>
   16268:	ldr	r3, [sp, #24]
   1626c:	cmp	r3, r0
   16270:	beq	16448 <argp_error@@Base+0x4a8>
   16274:	add	r6, r6, #1
   16278:	b	16184 <argp_error@@Base+0x1e4>
   1627c:	ldr	r2, [sp, #24]
   16280:	ldr	r1, [r4, #20]
   16284:	bl	112b0 <strncmp@plt>
   16288:	cmp	r0, #0
   1628c:	bne	1632c <argp_error@@Base+0x38c>
   16290:	cmp	r7, #0
   16294:	moveq	r7, fp
   16298:	ldreq	r3, [sp, #12]
   1629c:	streq	r3, [sp, #16]
   162a0:	beq	1632c <argp_error@@Base+0x38c>
   162a4:	ldr	r3, [sp, #84]	; 0x54
   162a8:	cmp	r3, #0
   162ac:	bne	162e0 <argp_error@@Base+0x340>
   162b0:	ldr	r1, [r7, #4]
   162b4:	ldr	r2, [fp, #4]
   162b8:	cmp	r1, r2
   162bc:	bne	162e0 <argp_error@@Base+0x340>
   162c0:	ldr	r1, [r7, #8]
   162c4:	ldr	r2, [fp, #8]
   162c8:	cmp	r1, r2
   162cc:	bne	162e0 <argp_error@@Base+0x340>
   162d0:	ldr	r1, [r7, #12]
   162d4:	ldr	r2, [fp, #12]
   162d8:	cmp	r1, r2
   162dc:	beq	1632c <argp_error@@Base+0x38c>
   162e0:	cmp	r5, #0
   162e4:	bne	1632c <argp_error@@Base+0x38c>
   162e8:	ldr	r3, [sp, #92]	; 0x5c
   162ec:	cmp	r3, #0
   162f0:	beq	16314 <argp_error@@Base+0x374>
   162f4:	cmp	r8, #0
   162f8:	bne	16320 <argp_error@@Base+0x380>
   162fc:	mov	r0, r6
   16300:	bl	133a0 <argp_parse@@Base+0x1048>
   16304:	subs	r8, r0, #0
   16308:	bne	1654c <argp_error@@Base+0x5ac>
   1630c:	mov	r5, #1
   16310:	b	1632c <argp_error@@Base+0x38c>
   16314:	cmp	r8, #0
   16318:	mov	r5, #1
   1631c:	beq	1632c <argp_error@@Base+0x38c>
   16320:	ldr	r3, [sp, #12]
   16324:	mov	r2, #1
   16328:	strb	r2, [r8, r3]
   1632c:	ldr	r3, [sp, #12]
   16330:	add	fp, fp, #16
   16334:	add	r3, r3, #1
   16338:	str	r3, [sp, #12]
   1633c:	b	161b4 <argp_error@@Base+0x214>
   16340:	ldr	r0, [r7]
   16344:	bl	11274 <flockfile@plt>
   16348:	ldr	r3, [r4, #20]
   1634c:	ldr	r2, [sl]
   16350:	str	r3, [sp]
   16354:	ldr	r1, [pc, #540]	; 16578 <argp_error@@Base+0x5d8>
   16358:	ldr	r3, [sp, #96]	; 0x60
   1635c:	ldr	r0, [r7]
   16360:	bl	111c0 <fprintf@plt>
   16364:	ldr	r9, [pc, #528]	; 1657c <argp_error@@Base+0x5dc>
   16368:	cmp	r6, r5
   1636c:	bne	16388 <argp_error@@Base+0x3e8>
   16370:	ldr	r1, [r7]
   16374:	mov	r0, #10
   16378:	bl	1125c <fputc@plt>
   1637c:	ldr	r0, [r7]
   16380:	bl	110d0 <funlockfile@plt>
   16384:	b	16200 <argp_error@@Base+0x260>
   16388:	ldrb	r3, [r8, r5]
   1638c:	cmp	r3, #0
   16390:	beq	163ac <argp_error@@Base+0x40c>
   16394:	ldr	r3, [sp, #20]
   16398:	ldr	r2, [sp, #96]	; 0x60
   1639c:	mov	r1, r9
   163a0:	ldr	r3, [r3, r5, lsl #4]
   163a4:	ldr	r0, [r7]
   163a8:	bl	111c0 <fprintf@plt>
   163ac:	add	r5, r5, #1
   163b0:	b	16368 <argp_error@@Base+0x3c8>
   163b4:	cmp	r7, #0
   163b8:	bne	1644c <argp_error@@Base+0x4ac>
   163bc:	ldr	r3, [sp, #84]	; 0x54
   163c0:	cmp	r3, #0
   163c4:	beq	163f8 <argp_error@@Base+0x458>
   163c8:	ldr	r3, [r4]
   163cc:	ldr	r3, [sl, r3, lsl #2]
   163d0:	ldrb	r3, [r3, #1]
   163d4:	cmp	r3, #45	; 0x2d
   163d8:	beq	163f8 <argp_error@@Base+0x458>
   163dc:	ldr	r3, [r4, #20]
   163e0:	ldr	r0, [sp, #32]
   163e4:	ldrb	r1, [r3]
   163e8:	bl	111b4 <strchr@plt>
   163ec:	cmp	r0, #0
   163f0:	mvnne	r0, #0
   163f4:	bne	16440 <argp_error@@Base+0x4a0>
   163f8:	ldr	r3, [sp, #92]	; 0x5c
   163fc:	cmp	r3, #0
   16400:	beq	16424 <argp_error@@Base+0x484>
   16404:	ldr	r0, [pc, #356]	; 16570 <argp_error@@Base+0x5d0>
   16408:	ldr	r3, [r4, #20]
   1640c:	ldr	r2, [sl]
   16410:	str	r3, [sp]
   16414:	ldr	r1, [pc, #356]	; 16580 <argp_error@@Base+0x5e0>
   16418:	ldr	r3, [sp, #96]	; 0x60
   1641c:	ldr	r0, [r0]
   16420:	bl	111c0 <fprintf@plt>
   16424:	ldr	r3, [r4]
   16428:	mov	r2, #0
   1642c:	add	r3, r3, #1
   16430:	str	r2, [r4, #20]
   16434:	str	r3, [r4]
   16438:	str	r2, [r4, #8]
   1643c:	mov	r0, #63	; 0x3f
   16440:	add	sp, sp, #44	; 0x2c
   16444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16448:	str	r6, [sp, #16]
   1644c:	ldr	r3, [r4]
   16450:	mov	r1, #0
   16454:	add	r2, r3, #1
   16458:	str	r2, [r4]
   1645c:	str	r1, [r4, #20]
   16460:	ldrb	r1, [r9]
   16464:	cmp	r1, #0
   16468:	ldr	r1, [r7, #4]
   1646c:	beq	164b4 <argp_error@@Base+0x514>
   16470:	cmp	r1, #0
   16474:	addne	r9, r9, #1
   16478:	strne	r9, [r4, #12]
   1647c:	bne	164d8 <argp_error@@Base+0x538>
   16480:	ldr	r3, [sp, #92]	; 0x5c
   16484:	cmp	r3, #0
   16488:	beq	164ac <argp_error@@Base+0x50c>
   1648c:	ldr	r0, [pc, #220]	; 16570 <argp_error@@Base+0x5d0>
   16490:	ldr	r3, [r7]
   16494:	ldr	r2, [sl]
   16498:	str	r3, [sp]
   1649c:	ldr	r1, [pc, #224]	; 16584 <argp_error@@Base+0x5e4>
   164a0:	ldr	r3, [sp, #96]	; 0x60
   164a4:	ldr	r0, [r0]
   164a8:	bl	111c0 <fprintf@plt>
   164ac:	ldr	r3, [r7, #12]
   164b0:	b	16238 <argp_error@@Base+0x298>
   164b4:	cmp	r1, #1
   164b8:	bne	164d8 <argp_error@@Base+0x538>
   164bc:	ldr	r1, [sp, #36]	; 0x24
   164c0:	cmp	r2, r1
   164c4:	bge	16500 <argp_error@@Base+0x560>
   164c8:	add	r3, r3, #2
   164cc:	str	r3, [r4]
   164d0:	ldr	r3, [sl, r2, lsl #2]
   164d4:	str	r3, [r4, #12]
   164d8:	ldr	r3, [sp, #80]	; 0x50
   164dc:	cmp	r3, #0
   164e0:	ldrne	r2, [sp, #16]
   164e4:	strne	r2, [r3]
   164e8:	ldr	r3, [r7, #8]
   164ec:	ldr	r0, [r7, #12]
   164f0:	cmp	r3, #0
   164f4:	strne	r0, [r3]
   164f8:	movne	r0, #0
   164fc:	b	16440 <argp_error@@Base+0x4a0>
   16500:	ldr	r3, [sp, #92]	; 0x5c
   16504:	cmp	r3, #0
   16508:	beq	1652c <argp_error@@Base+0x58c>
   1650c:	ldr	r0, [pc, #92]	; 16570 <argp_error@@Base+0x5d0>
   16510:	ldr	r3, [r7]
   16514:	ldr	r2, [sl]
   16518:	str	r3, [sp]
   1651c:	ldr	r1, [pc, #100]	; 16588 <argp_error@@Base+0x5e8>
   16520:	ldr	r3, [sp, #96]	; 0x60
   16524:	ldr	r0, [r0]
   16528:	bl	111c0 <fprintf@plt>
   1652c:	ldr	r3, [r7, #12]
   16530:	str	r3, [r4, #8]
   16534:	ldr	r3, [sp, #32]
   16538:	ldrb	r0, [r3]
   1653c:	cmp	r0, #58	; 0x3a
   16540:	moveq	r0, #58	; 0x3a
   16544:	movne	r0, #63	; 0x3f
   16548:	b	16440 <argp_error@@Base+0x4a0>
   1654c:	mov	r2, r6
   16550:	mov	r1, #0
   16554:	bl	111fc <memset@plt>
   16558:	ldr	r3, [sp, #16]
   1655c:	mov	r2, #1
   16560:	strb	r2, [r8, r3]
   16564:	mov	r3, #1
   16568:	str	r3, [sp, #28]
   1656c:	b	16320 <argp_error@@Base+0x380>
   16570:	andeq	r8, r2, r0, asr #4
   16574:	andeq	r7, r1, sp, asr sp
   16578:	andeq	r7, r1, sp, ror sp
   1657c:	andeq	r7, r1, ip, lsr #27
   16580:			; <UNDEFINED> instruction: 0x00017db4
   16584:	ldrdeq	r7, [r1], -r4
   16588:	andeq	r7, r1, r1, lsl #28
   1658c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16590:	sub	sp, sp, #36	; 0x24
   16594:	subs	r8, r0, #0
   16598:	ldr	r4, [sp, #80]	; 0x50
   1659c:	ldr	fp, [sp, #72]	; 0x48
   165a0:	ldr	r5, [sp, #76]	; 0x4c
   165a4:	ldr	r9, [r4, #4]
   165a8:	bgt	165b8 <argp_error@@Base+0x618>
   165ac:	mvn	r0, #0
   165b0:	add	sp, sp, #36	; 0x24
   165b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165b8:	mov	sl, r3
   165bc:	mov	r3, #0
   165c0:	str	r3, [r4, #12]
   165c4:	ldr	r3, [r4]
   165c8:	mov	r7, r1
   165cc:	cmp	r3, #0
   165d0:	mov	r6, r2
   165d4:	beq	165f8 <argp_error@@Base+0x658>
   165d8:	ldr	r3, [r4, #16]
   165dc:	cmp	r3, #0
   165e0:	beq	16600 <argp_error@@Base+0x660>
   165e4:	ldrb	r3, [r2]
   165e8:	sub	r3, r3, #43	; 0x2b
   165ec:	tst	r3, #253	; 0xfd
   165f0:	addeq	r6, r2, #1
   165f4:	b	1663c <argp_error@@Base+0x69c>
   165f8:	mov	r3, #1
   165fc:	str	r3, [r4]
   16600:	ldr	r3, [r4]
   16604:	str	r3, [r4, #32]
   16608:	str	r3, [r4, #28]
   1660c:	mov	r3, #0
   16610:	str	r3, [r4, #20]
   16614:	ldrb	r2, [r6]
   16618:	cmp	r2, #45	; 0x2d
   1661c:	moveq	r3, #2
   16620:	beq	1662c <argp_error@@Base+0x68c>
   16624:	cmp	r2, #43	; 0x2b
   16628:	bne	1673c <argp_error@@Base+0x79c>
   1662c:	add	r6, r6, #1
   16630:	str	r3, [r4, #24]
   16634:	mov	r3, #1
   16638:	str	r3, [r4, #16]
   1663c:	ldrb	r3, [r6]
   16640:	cmp	r3, #58	; 0x3a
   16644:	ldr	r3, [r4, #20]
   16648:	moveq	r9, #0
   1664c:	cmp	r3, #0
   16650:	beq	16660 <argp_error@@Base+0x6c0>
   16654:	ldrb	r3, [r3]
   16658:	cmp	r3, #0
   1665c:	bne	167f4 <argp_error@@Base+0x854>
   16660:	ldr	r3, [r4]
   16664:	ldr	r2, [r4, #32]
   16668:	cmp	r2, r3
   1666c:	ldr	r2, [r4, #28]
   16670:	strgt	r3, [r4, #32]
   16674:	cmp	r3, r2
   16678:	ldr	r2, [r4, #24]
   1667c:	strlt	r3, [r4, #28]
   16680:	cmp	r2, #1
   16684:	bne	166bc <argp_error@@Base+0x71c>
   16688:	ldr	r1, [r4, #32]
   1668c:	ldr	r2, [r4, #28]
   16690:	cmp	r2, r1
   16694:	beq	1676c <argp_error@@Base+0x7cc>
   16698:	cmp	r3, r1
   1669c:	beq	166ac <argp_error@@Base+0x70c>
   166a0:	mov	r1, r4
   166a4:	mov	r0, r7
   166a8:	bl	16078 <argp_error@@Base+0xd8>
   166ac:	ldr	r3, [r4]
   166b0:	cmp	r8, r3
   166b4:	bgt	16778 <argp_error@@Base+0x7d8>
   166b8:	str	r3, [r4, #32]
   166bc:	ldr	r3, [r4]
   166c0:	cmp	r8, r3
   166c4:	beq	1671c <argp_error@@Base+0x77c>
   166c8:	ldr	r1, [pc, #920]	; 16a68 <argp_error@@Base+0xac8>
   166cc:	ldr	r0, [r7, r3, lsl #2]
   166d0:	str	r3, [sp, #24]
   166d4:	bl	10ff8 <strcmp@plt>
   166d8:	cmp	r0, #0
   166dc:	bne	1671c <argp_error@@Base+0x77c>
   166e0:	ldr	r1, [r4, #28]
   166e4:	ldr	r3, [sp, #24]
   166e8:	ldr	r2, [r4, #32]
   166ec:	add	r3, r3, #1
   166f0:	cmp	r1, r2
   166f4:	str	r3, [r4]
   166f8:	streq	r3, [r4, #28]
   166fc:	beq	16714 <argp_error@@Base+0x774>
   16700:	cmp	r3, r2
   16704:	beq	16714 <argp_error@@Base+0x774>
   16708:	mov	r1, r4
   1670c:	mov	r0, r7
   16710:	bl	16078 <argp_error@@Base+0xd8>
   16714:	str	r8, [r4, #32]
   16718:	str	r8, [r4]
   1671c:	ldr	r2, [r4]
   16720:	cmp	r8, r2
   16724:	bne	167a0 <argp_error@@Base+0x800>
   16728:	ldr	r3, [r4, #28]
   1672c:	ldr	r2, [r4, #32]
   16730:	cmp	r3, r2
   16734:	strne	r3, [r4]
   16738:	b	165ac <argp_error@@Base+0x60c>
   1673c:	ldr	r3, [sp, #84]	; 0x54
   16740:	cmp	r3, #0
   16744:	beq	16754 <argp_error@@Base+0x7b4>
   16748:	mov	r3, #0
   1674c:	str	r3, [r4, #24]
   16750:	b	16634 <argp_error@@Base+0x694>
   16754:	ldr	r0, [pc, #784]	; 16a6c <argp_error@@Base+0xacc>
   16758:	bl	11118 <getenv@plt>
   1675c:	cmp	r0, #0
   16760:	bne	16748 <argp_error@@Base+0x7a8>
   16764:	mov	r3, #1
   16768:	b	1674c <argp_error@@Base+0x7ac>
   1676c:	cmp	r3, r2
   16770:	strne	r3, [r4, #28]
   16774:	b	166ac <argp_error@@Base+0x70c>
   16778:	ldr	r2, [r7, r3, lsl #2]
   1677c:	ldrb	r1, [r2]
   16780:	cmp	r1, #45	; 0x2d
   16784:	bne	16794 <argp_error@@Base+0x7f4>
   16788:	ldrb	r2, [r2, #1]
   1678c:	cmp	r2, #0
   16790:	bne	166b8 <argp_error@@Base+0x718>
   16794:	add	r3, r3, #1
   16798:	str	r3, [r4]
   1679c:	b	166ac <argp_error@@Base+0x70c>
   167a0:	ldr	r3, [r7, r2, lsl #2]
   167a4:	ldrb	r1, [r3]
   167a8:	cmp	r1, #45	; 0x2d
   167ac:	bne	167bc <argp_error@@Base+0x81c>
   167b0:	ldrb	r1, [r3, #1]
   167b4:	cmp	r1, #0
   167b8:	bne	167dc <argp_error@@Base+0x83c>
   167bc:	ldr	r1, [r4, #24]
   167c0:	cmp	r1, #0
   167c4:	beq	165ac <argp_error@@Base+0x60c>
   167c8:	add	r2, r2, #1
   167cc:	str	r2, [r4]
   167d0:	str	r3, [r4, #12]
   167d4:	mov	r0, #1
   167d8:	b	165b0 <argp_error@@Base+0x610>
   167dc:	cmp	sl, #0
   167e0:	bne	16870 <argp_error@@Base+0x8d0>
   167e4:	ldr	r3, [r4]
   167e8:	ldr	r3, [r7, r3, lsl #2]
   167ec:	add	r3, r3, #1
   167f0:	str	r3, [r4, #20]
   167f4:	ldr	r3, [r4, #20]
   167f8:	mov	r0, r6
   167fc:	add	r2, r3, #1
   16800:	str	r2, [r4, #20]
   16804:	ldrb	r5, [r3]
   16808:	str	r2, [sp, #28]
   1680c:	str	r3, [sp, #24]
   16810:	mov	r1, r5
   16814:	bl	111b4 <strchr@plt>
   16818:	ldr	r3, [sp, #24]
   1681c:	ldr	r2, [sp, #28]
   16820:	ldrb	r1, [r3, #1]
   16824:	cmp	r1, #0
   16828:	ldreq	r1, [r4]
   1682c:	addeq	r1, r1, #1
   16830:	streq	r1, [r4]
   16834:	sub	r1, r5, #58	; 0x3a
   16838:	cmp	r0, #0
   1683c:	cmpne	r1, #1
   16840:	bhi	1691c <argp_error@@Base+0x97c>
   16844:	cmp	r9, #0
   16848:	beq	16864 <argp_error@@Base+0x8c4>
   1684c:	ldr	r0, [pc, #540]	; 16a70 <argp_error@@Base+0xad0>
   16850:	mov	r3, r5
   16854:	ldr	r2, [r7]
   16858:	ldr	r1, [pc, #532]	; 16a74 <argp_error@@Base+0xad4>
   1685c:	ldr	r0, [r0]
   16860:	bl	111c0 <fprintf@plt>
   16864:	str	r5, [r4, #8]
   16868:	mov	r0, #63	; 0x3f
   1686c:	b	165b0 <argp_error@@Base+0x610>
   16870:	cmp	r1, #45	; 0x2d
   16874:	bne	168b0 <argp_error@@Base+0x910>
   16878:	add	r3, r3, #2
   1687c:	str	r3, [r4, #20]
   16880:	ldr	r3, [pc, #480]	; 16a68 <argp_error@@Base+0xac8>
   16884:	str	r9, [sp, #12]
   16888:	str	r3, [sp, #16]
   1688c:	str	r4, [sp, #8]
   16890:	str	r5, [sp, #4]
   16894:	str	fp, [sp]
   16898:	mov	r3, sl
   1689c:	mov	r2, r6
   168a0:	mov	r1, r7
   168a4:	mov	r0, r8
   168a8:	bl	1613c <argp_error@@Base+0x19c>
   168ac:	b	165b0 <argp_error@@Base+0x610>
   168b0:	cmp	r5, #0
   168b4:	beq	167e4 <argp_error@@Base+0x844>
   168b8:	ldrb	r2, [r3, #2]
   168bc:	cmp	r2, #0
   168c0:	bne	168dc <argp_error@@Base+0x93c>
   168c4:	mov	r0, r6
   168c8:	str	r3, [sp, #24]
   168cc:	bl	111b4 <strchr@plt>
   168d0:	ldr	r3, [sp, #24]
   168d4:	cmp	r0, #0
   168d8:	bne	167e4 <argp_error@@Base+0x844>
   168dc:	add	r3, r3, #1
   168e0:	str	r3, [r4, #20]
   168e4:	ldr	r3, [pc, #396]	; 16a78 <argp_error@@Base+0xad8>
   168e8:	str	r9, [sp, #12]
   168ec:	str	r3, [sp, #16]
   168f0:	str	r4, [sp, #8]
   168f4:	str	r5, [sp, #4]
   168f8:	str	fp, [sp]
   168fc:	mov	r3, sl
   16900:	mov	r2, r6
   16904:	mov	r1, r7
   16908:	mov	r0, r8
   1690c:	bl	1613c <argp_error@@Base+0x19c>
   16910:	cmn	r0, #1
   16914:	bne	165b0 <argp_error@@Base+0x610>
   16918:	b	167e4 <argp_error@@Base+0x844>
   1691c:	ldrb	r1, [r0]
   16920:	cmp	r1, #87	; 0x57
   16924:	ldrb	r1, [r0, #1]
   16928:	bne	169c4 <argp_error@@Base+0xa24>
   1692c:	cmp	sl, #0
   16930:	sub	ip, r1, #59	; 0x3b
   16934:	clz	ip, ip
   16938:	lsr	ip, ip, #5
   1693c:	moveq	ip, #0
   16940:	cmp	ip, #0
   16944:	beq	169c4 <argp_error@@Base+0xa24>
   16948:	ldrb	r3, [r3, #1]
   1694c:	cmp	r3, #0
   16950:	strne	r2, [r4, #12]
   16954:	bne	169a4 <argp_error@@Base+0xa04>
   16958:	ldr	r3, [r4]
   1695c:	cmp	r8, r3
   16960:	ldrne	r3, [r7, r3, lsl #2]
   16964:	strne	r3, [r4, #12]
   16968:	bne	169a4 <argp_error@@Base+0xa04>
   1696c:	cmp	r9, #0
   16970:	beq	1698c <argp_error@@Base+0x9ec>
   16974:	ldr	r0, [pc, #244]	; 16a70 <argp_error@@Base+0xad0>
   16978:	mov	r3, r5
   1697c:	ldr	r2, [r7]
   16980:	ldr	r1, [pc, #244]	; 16a7c <argp_error@@Base+0xadc>
   16984:	ldr	r0, [r0]
   16988:	bl	111c0 <fprintf@plt>
   1698c:	str	r5, [r4, #8]
   16990:	ldrb	r0, [r6]
   16994:	cmp	r0, #58	; 0x3a
   16998:	moveq	r0, #58	; 0x3a
   1699c:	movne	r0, #63	; 0x3f
   169a0:	b	165b0 <argp_error@@Base+0x610>
   169a4:	ldr	r3, [r4, #12]
   169a8:	ldr	r2, [pc, #208]	; 16a80 <argp_error@@Base+0xae0>
   169ac:	str	r3, [r4, #20]
   169b0:	mov	r3, #0
   169b4:	str	r3, [r4, #12]
   169b8:	str	r2, [sp, #16]
   169bc:	stmib	sp, {r3, r4, r9}
   169c0:	b	16894 <argp_error@@Base+0x8f4>
   169c4:	cmp	r1, #58	; 0x3a
   169c8:	bne	16a14 <argp_error@@Base+0xa74>
   169cc:	ldrb	r1, [r0, #2]
   169d0:	ldrb	r3, [r3, #1]
   169d4:	cmp	r1, #58	; 0x3a
   169d8:	bne	169f4 <argp_error@@Base+0xa54>
   169dc:	cmp	r3, #0
   169e0:	strne	r2, [r4, #12]
   169e4:	ldrne	r3, [r4]
   169e8:	bne	16a04 <argp_error@@Base+0xa64>
   169ec:	str	r3, [r4, #12]
   169f0:	b	16a0c <argp_error@@Base+0xa6c>
   169f4:	cmp	r3, #0
   169f8:	ldr	r3, [r4]
   169fc:	beq	16a1c <argp_error@@Base+0xa7c>
   16a00:	str	r2, [r4, #12]
   16a04:	add	r3, r3, #1
   16a08:	str	r3, [r4]
   16a0c:	mov	r3, #0
   16a10:	str	r3, [r4, #20]
   16a14:	mov	r0, r5
   16a18:	b	165b0 <argp_error@@Base+0x610>
   16a1c:	cmp	r8, r3
   16a20:	addne	r2, r3, #1
   16a24:	strne	r2, [r4]
   16a28:	ldrne	r3, [r7, r3, lsl #2]
   16a2c:	bne	169ec <argp_error@@Base+0xa4c>
   16a30:	cmp	r9, #0
   16a34:	beq	16a50 <argp_error@@Base+0xab0>
   16a38:	ldr	r0, [pc, #48]	; 16a70 <argp_error@@Base+0xad0>
   16a3c:	mov	r3, r5
   16a40:	ldr	r2, [r7]
   16a44:	ldr	r1, [pc, #48]	; 16a7c <argp_error@@Base+0xadc>
   16a48:	ldr	r0, [r0]
   16a4c:	bl	111c0 <fprintf@plt>
   16a50:	str	r5, [r4, #8]
   16a54:	ldrb	r5, [r6]
   16a58:	cmp	r5, #58	; 0x3a
   16a5c:	moveq	r5, #58	; 0x3a
   16a60:	movne	r5, #63	; 0x3f
   16a64:	b	16a0c <argp_error@@Base+0xa6c>
   16a68:			; <UNDEFINED> instruction: 0x000175b0
   16a6c:	andeq	r7, r1, r9, lsr #28
   16a70:	andeq	r8, r2, r0, asr #4
   16a74:	andeq	r7, r1, r9, lsr lr
   16a78:			; <UNDEFINED> instruction: 0x000175b1
   16a7c:	andeq	r7, r1, r5, asr lr
   16a80:	andeq	r7, r1, lr, ror lr
   16a84:	push	{r4, r5, lr}
   16a88:	sub	sp, sp, #20
   16a8c:	ldr	r5, [pc, #84]	; 16ae8 <argp_error@@Base+0xb48>
   16a90:	ldr	r4, [pc, #84]	; 16aec <argp_error@@Base+0xb4c>
   16a94:	ldr	ip, [r5]
   16a98:	str	r4, [sp, #8]
   16a9c:	str	ip, [r4]
   16aa0:	ldr	ip, [r5, #4]
   16aa4:	str	ip, [r4, #4]
   16aa8:	ldr	ip, [sp, #40]	; 0x28
   16aac:	str	ip, [sp, #12]
   16ab0:	ldr	ip, [sp, #36]	; 0x24
   16ab4:	str	ip, [sp, #4]
   16ab8:	ldr	ip, [sp, #32]
   16abc:	str	ip, [sp]
   16ac0:	bl	1658c <argp_error@@Base+0x5ec>
   16ac4:	ldr	r3, [r4]
   16ac8:	ldr	r2, [r4, #12]
   16acc:	str	r3, [r5]
   16ad0:	ldr	r3, [pc, #24]	; 16af0 <argp_error@@Base+0xb50>
   16ad4:	str	r2, [r3]
   16ad8:	ldr	r3, [r4, #8]
   16adc:	str	r3, [r5, #8]
   16ae0:	add	sp, sp, #20
   16ae4:	pop	{r4, r5, pc}
   16ae8:	andeq	r8, r2, r4, lsr #4
   16aec:	andeq	r8, r2, r4, ror r2
   16af0:	andeq	r8, r2, r4, lsr #5
   16af4:	push	{r0, r1, r2, r3, r4, lr}
   16af8:	mov	r3, #1
   16afc:	str	r3, [sp, #8]
   16b00:	mov	r3, #0
   16b04:	str	r3, [sp, #4]
   16b08:	str	r3, [sp]
   16b0c:	bl	16a84 <argp_error@@Base+0xae4>
   16b10:	add	sp, sp, #20
   16b14:	pop	{pc}		; (ldr pc, [sp], #4)
   16b18:	push	{r4, r5, r6, r7, r8, lr}
   16b1c:	mov	r8, r0
   16b20:	mov	r0, #36	; 0x24
   16b24:	mov	r7, r1
   16b28:	mov	r6, r2
   16b2c:	mov	r5, r3
   16b30:	bl	133a0 <argp_parse@@Base+0x1048>
   16b34:	subs	r4, r0, #0
   16b38:	beq	16b88 <argp_error@@Base+0xbe8>
   16b3c:	mov	r3, #0
   16b40:	str	r5, [r4, #12]
   16b44:	str	r8, [r4]
   16b48:	str	r7, [r4, #4]
   16b4c:	str	r6, [r4, #8]
   16b50:	str	r3, [r4, #20]
   16b54:	str	r3, [r4, #16]
   16b58:	mov	r0, #200	; 0xc8
   16b5c:	bl	133a0 <argp_parse@@Base+0x1048>
   16b60:	cmp	r0, #0
   16b64:	mov	r5, r0
   16b68:	addne	r5, r0, #200	; 0xc8
   16b6c:	str	r0, [r4, #24]
   16b70:	strne	r0, [r4, #28]
   16b74:	strne	r5, [r4, #32]
   16b78:	bne	16b88 <argp_error@@Base+0xbe8>
   16b7c:	mov	r0, r4
   16b80:	bl	12df4 <argp_parse@@Base+0xa9c>
   16b84:	mov	r4, r5
   16b88:	mov	r0, r4
   16b8c:	pop	{r4, r5, r6, r7, r8, pc}
   16b90:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b94:	mov	r4, r0
   16b98:	ldr	r6, [r0, #24]
   16b9c:	ldr	r3, [r0, #16]
   16ba0:	add	r6, r6, r3
   16ba4:	ldr	r2, [r4, #28]
   16ba8:	cmp	r6, r2
   16bac:	bcs	16c5c <argp_error@@Base+0xcbc>
   16bb0:	ldr	r7, [r4, #20]
   16bb4:	cmp	r7, #0
   16bb8:	bne	16c10 <argp_error@@Base+0xc70>
   16bbc:	ldr	r5, [r4, #4]
   16bc0:	cmp	r5, #0
   16bc4:	beq	16c10 <argp_error@@Base+0xc70>
   16bc8:	ldr	r1, [r4, #32]
   16bcc:	add	r3, r2, r5
   16bd0:	cmp	r1, r3
   16bd4:	bls	16c74 <argp_error@@Base+0xcd4>
   16bd8:	add	r7, r6, r5
   16bdc:	sub	r2, r2, r6
   16be0:	mov	r1, r6
   16be4:	mov	r0, r7
   16be8:	bl	1104c <memmove@plt>
   16bec:	ldr	r3, [r4, #28]
   16bf0:	mov	r0, r6
   16bf4:	add	r3, r3, r5
   16bf8:	str	r3, [r4, #28]
   16bfc:	mov	r2, r5
   16c00:	mov	r1, #32
   16c04:	bl	111fc <memset@plt>
   16c08:	mov	r6, r7
   16c0c:	str	r5, [r4, #20]
   16c10:	ldr	r9, [r4, #28]
   16c14:	mov	r1, #10
   16c18:	sub	r8, r9, r6
   16c1c:	mov	r2, r8
   16c20:	mov	r0, r6
   16c24:	bl	11214 <memchr@plt>
   16c28:	ldr	r2, [r4, #20]
   16c2c:	ldr	r5, [r4, #8]
   16c30:	cmp	r2, #0
   16c34:	movlt	r3, #0
   16c38:	strlt	r3, [r4, #20]
   16c3c:	cmp	r0, #0
   16c40:	mov	fp, r0
   16c44:	ldr	r0, [r4, #20]
   16c48:	bne	16c90 <argp_error@@Base+0xcf0>
   16c4c:	add	r3, r8, r0
   16c50:	cmp	r3, r5
   16c54:	bcs	16cb0 <argp_error@@Base+0xd10>
   16c58:	str	r3, [r4, #20]
   16c5c:	ldr	r3, [r4, #28]
   16c60:	ldr	r2, [r4, #24]
   16c64:	sub	r3, r3, r2
   16c68:	str	r3, [r4, #16]
   16c6c:	add	sp, sp, #12
   16c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c74:	ldr	r1, [r4]
   16c78:	mov	r0, #32
   16c7c:	add	r7, r7, #1
   16c80:	bl	112e0 <putc_unlocked@plt>
   16c84:	cmp	r5, r7
   16c88:	bne	16c74 <argp_error@@Base+0xcd4>
   16c8c:	b	16c0c <argp_error@@Base+0xc6c>
   16c90:	sub	r2, fp, r6
   16c94:	add	r2, r2, r0
   16c98:	cmp	r2, r5
   16c9c:	bge	16cb4 <argp_error@@Base+0xd14>
   16ca0:	mov	r3, #0
   16ca4:	str	r3, [r4, #20]
   16ca8:	add	r3, fp, #1
   16cac:	b	16d14 <argp_error@@Base+0xd74>
   16cb0:	mov	fp, r9
   16cb4:	ldr	sl, [r4, #12]
   16cb8:	cmp	sl, #0
   16cbc:	subge	r5, r5, r0
   16cc0:	addge	r5, r6, r5
   16cc4:	movge	r7, r5
   16cc8:	bge	16d34 <argp_error@@Base+0xd94>
   16ccc:	cmp	fp, r9
   16cd0:	sub	sl, r5, #1
   16cd4:	bcs	16d1c <argp_error@@Base+0xd7c>
   16cd8:	sub	r0, sl, r0
   16cdc:	sub	r2, r9, fp
   16ce0:	mov	r1, fp
   16ce4:	add	r0, r6, r0
   16ce8:	bl	1104c <memmove@plt>
   16cec:	ldr	r8, [r4, #20]
   16cf0:	sub	sl, sl, r8
   16cf4:	add	sl, r6, sl
   16cf8:	sub	r3, sl, fp
   16cfc:	ldr	sl, [r4, #28]
   16d00:	sub	r3, sl, r3
   16d04:	str	r3, [r4, #28]
   16d08:	mov	r3, #0
   16d0c:	str	r3, [r4, #20]
   16d10:	add	r3, r6, r5
   16d14:	mov	r6, r3
   16d18:	b	16ba4 <argp_error@@Base+0xc04>
   16d1c:	add	r0, r8, r0
   16d20:	str	r0, [r4, #20]
   16d24:	sub	r0, sl, r0
   16d28:	add	r9, r9, r0
   16d2c:	str	r9, [r4, #28]
   16d30:	b	16c5c <argp_error@@Base+0xcbc>
   16d34:	cmp	r6, r7
   16d38:	mov	r2, r7
   16d3c:	bhi	16d68 <argp_error@@Base+0xdc8>
   16d40:	str	r7, [sp, #4]
   16d44:	bl	11190 <__ctype_b_loc@plt>
   16d48:	ldr	r2, [sp, #4]
   16d4c:	sub	r7, r7, #1
   16d50:	ldrb	r1, [r2]
   16d54:	lsl	r1, r1, #1
   16d58:	ldr	r0, [r0]
   16d5c:	ldrh	r1, [r0, r1]
   16d60:	tst	r1, #1
   16d64:	beq	16d34 <argp_error@@Base+0xd94>
   16d68:	add	r7, r2, #1
   16d6c:	cmp	r6, r7
   16d70:	bcs	16de8 <argp_error@@Base+0xe48>
   16d74:	cmp	r6, r2
   16d78:	bhi	16db4 <argp_error@@Base+0xe14>
   16d7c:	sub	r5, r2, #1
   16d80:	cmp	r6, r5
   16d84:	mov	r2, r5
   16d88:	bhi	16db4 <argp_error@@Base+0xe14>
   16d8c:	str	r5, [sp, #4]
   16d90:	bl	11190 <__ctype_b_loc@plt>
   16d94:	ldr	r2, [sp, #4]
   16d98:	sub	r5, r5, #1
   16d9c:	ldrb	r3, [r2]
   16da0:	lsl	r3, r3, #1
   16da4:	ldr	r1, [r0]
   16da8:	ldrh	r3, [r1, r3]
   16dac:	tst	r3, #1
   16db0:	bne	16d80 <argp_error@@Base+0xde0>
   16db4:	add	r5, r2, #1
   16db8:	add	r3, r8, #1
   16dbc:	add	r3, r6, r3
   16dc0:	cmp	r7, r3
   16dc4:	bne	16e50 <argp_error@@Base+0xeb0>
   16dc8:	ldr	r3, [r4, #32]
   16dcc:	sub	r3, r3, r5
   16dd0:	cmp	sl, r3
   16dd4:	bge	16e60 <argp_error@@Base+0xec0>
   16dd8:	mov	r3, #10
   16ddc:	add	r9, r5, #1
   16de0:	strb	r3, [r5]
   16de4:	b	16ee0 <argp_error@@Base+0xf40>
   16de8:	cmp	fp, r5
   16dec:	bls	16e44 <argp_error@@Base+0xea4>
   16df0:	add	r7, r5, #1
   16df4:	cmp	fp, r7
   16df8:	mov	r5, r7
   16dfc:	beq	16e44 <argp_error@@Base+0xea4>
   16e00:	bl	11190 <__ctype_b_loc@plt>
   16e04:	ldrb	r2, [r5]
   16e08:	add	r7, r7, #1
   16e0c:	lsl	r2, r2, #1
   16e10:	ldr	r1, [r0]
   16e14:	ldrh	r2, [r1, r2]
   16e18:	tst	r2, #1
   16e1c:	beq	16df4 <argp_error@@Base+0xe54>
   16e20:	bl	11190 <__ctype_b_loc@plt>
   16e24:	mov	r7, r5
   16e28:	ldr	r2, [r0]
   16e2c:	ldrb	r3, [r7, #1]!
   16e30:	lsl	r3, r3, #1
   16e34:	ldrh	r3, [r2, r3]
   16e38:	tst	r3, #1
   16e3c:	bne	16e2c <argp_error@@Base+0xe8c>
   16e40:	b	16db8 <argp_error@@Base+0xe18>
   16e44:	cmp	fp, r5
   16e48:	bne	16e20 <argp_error@@Base+0xe80>
   16e4c:	b	16ca0 <argp_error@@Base+0xd00>
   16e50:	add	r3, r5, #1
   16e54:	sub	r3, r7, r3
   16e58:	cmp	sl, r3
   16e5c:	ble	16dd8 <argp_error@@Base+0xe38>
   16e60:	cmp	r7, r9
   16e64:	bcs	16dd8 <argp_error@@Base+0xe38>
   16e68:	ldr	r3, [r4, #32]
   16e6c:	add	r0, sl, #1
   16e70:	sub	r3, r3, r9
   16e74:	cmp	r3, r0
   16e78:	ble	16ea8 <argp_error@@Base+0xf08>
   16e7c:	sub	r9, r9, r7
   16e80:	mov	r2, r9
   16e84:	mov	r1, r7
   16e88:	add	r0, r5, r0
   16e8c:	bl	1104c <memmove@plt>
   16e90:	ldr	r7, [r4, #12]
   16e94:	add	r7, r7, #1
   16e98:	add	r7, r5, r7
   16e9c:	add	r9, r7, r9
   16ea0:	sub	r8, r9, r6
   16ea4:	b	16dd8 <argp_error@@Base+0xe38>
   16ea8:	ldr	r0, [r4, #24]
   16eac:	cmp	r5, r0
   16eb0:	bls	16ec4 <argp_error@@Base+0xf24>
   16eb4:	ldr	r3, [r4]
   16eb8:	sub	r2, r5, r0
   16ebc:	mov	r1, #1
   16ec0:	bl	11094 <fwrite_unlocked@plt>
   16ec4:	ldr	r1, [r4]
   16ec8:	mov	r0, #10
   16ecc:	bl	112e0 <putc_unlocked@plt>
   16ed0:	ldr	r9, [r4, #24]
   16ed4:	sub	r6, r6, r9
   16ed8:	add	r8, r8, r6
   16edc:	mov	r6, r9
   16ee0:	ldr	r2, [r4, #12]
   16ee4:	sub	r3, r7, r9
   16ee8:	cmp	r3, r2
   16eec:	bge	16f28 <argp_error@@Base+0xf88>
   16ef0:	add	r3, r8, #1
   16ef4:	add	r3, r6, r3
   16ef8:	cmp	r7, r3
   16efc:	bne	16f10 <argp_error@@Base+0xf70>
   16f00:	ldr	r3, [r4, #32]
   16f04:	sub	r3, r3, r7
   16f08:	cmp	r2, r3
   16f0c:	ble	16f28 <argp_error@@Base+0xf88>
   16f10:	mov	r5, #0
   16f14:	ldr	r3, [r4, #12]
   16f18:	cmp	r5, r3
   16f1c:	blt	16f8c <argp_error@@Base+0xfec>
   16f20:	mov	r3, r9
   16f24:	b	16f3c <argp_error@@Base+0xf9c>
   16f28:	mov	r3, r9
   16f2c:	ldr	r1, [r4, #12]
   16f30:	sub	r2, r3, r9
   16f34:	cmp	r1, r2
   16f38:	bgt	16f80 <argp_error@@Base+0xfe0>
   16f3c:	cmp	r3, r7
   16f40:	bcs	16f5c <argp_error@@Base+0xfbc>
   16f44:	add	r2, r6, r8
   16f48:	mov	r0, r3
   16f4c:	sub	r2, r2, r7
   16f50:	mov	r1, r7
   16f54:	bl	1104c <memmove@plt>
   16f58:	mov	r3, r0
   16f5c:	ldr	r2, [r4, #12]
   16f60:	sub	r6, r7, r6
   16f64:	sub	r6, r8, r6
   16f68:	cmp	r2, #0
   16f6c:	add	r6, r3, r6
   16f70:	mvneq	r2, #0
   16f74:	str	r6, [r4, #28]
   16f78:	str	r2, [r4, #20]
   16f7c:	b	16d14 <argp_error@@Base+0xd74>
   16f80:	mov	r2, #32
   16f84:	strb	r2, [r3], #1
   16f88:	b	16f2c <argp_error@@Base+0xf8c>
   16f8c:	ldr	r1, [r4]
   16f90:	mov	r0, #32
   16f94:	bl	112e0 <putc_unlocked@plt>
   16f98:	add	r5, r5, #1
   16f9c:	b	16f14 <argp_error@@Base+0xf74>
   16fa0:	push	{r4, lr}
   16fa4:	mov	r4, r0
   16fa8:	bl	16b90 <argp_error@@Base+0xbf0>
   16fac:	ldr	r2, [r4, #28]
   16fb0:	ldr	r0, [r4, #24]
   16fb4:	cmp	r2, r0
   16fb8:	bls	16fcc <argp_error@@Base+0x102c>
   16fbc:	ldr	r3, [r4]
   16fc0:	sub	r2, r2, r0
   16fc4:	mov	r1, #1
   16fc8:	bl	11094 <fwrite_unlocked@plt>
   16fcc:	ldr	r0, [r4, #24]
   16fd0:	bl	12df4 <argp_parse@@Base+0xa9c>
   16fd4:	mov	r0, r4
   16fd8:	pop	{r4, lr}
   16fdc:	b	12df4 <argp_parse@@Base+0xa9c>
   16fe0:	ldr	r3, [r0, #32]
   16fe4:	ldr	r2, [r0, #28]
   16fe8:	sub	r3, r3, r2
   16fec:	cmp	r3, r1
   16ff0:	bcc	16ffc <argp_error@@Base+0x105c>
   16ff4:	mov	r0, #1
   16ff8:	bx	lr
   16ffc:	push	{r4, r5, r6, lr}
   17000:	mov	r4, r0
   17004:	mov	r5, r1
   17008:	bl	16b90 <argp_error@@Base+0xbf0>
   1700c:	ldr	r0, [r4, #24]
   17010:	ldr	r2, [r4, #28]
   17014:	ldr	r3, [r4]
   17018:	sub	r2, r2, r0
   1701c:	mov	r1, #1
   17020:	bl	11094 <fwrite_unlocked@plt>
   17024:	ldr	r2, [r4, #28]
   17028:	mov	r1, r0
   1702c:	ldr	r0, [r4, #24]
   17030:	sub	r3, r2, r0
   17034:	cmp	r1, r3
   17038:	bne	17060 <argp_error@@Base+0x10c0>
   1703c:	ldr	r1, [r4, #32]
   17040:	mov	r3, #0
   17044:	sub	r1, r1, r0
   17048:	cmp	r5, r1
   1704c:	str	r0, [r4, #28]
   17050:	str	r3, [r4, #16]
   17054:	bhi	17088 <argp_error@@Base+0x10e8>
   17058:	mov	r0, #1
   1705c:	pop	{r4, r5, r6, pc}
   17060:	ldr	r3, [r4, #16]
   17064:	sub	r2, r2, r1
   17068:	sub	r3, r3, r1
   1706c:	str	r2, [r4, #28]
   17070:	str	r3, [r4, #16]
   17074:	sub	r2, r2, r0
   17078:	add	r1, r0, r1
   1707c:	bl	1104c <memmove@plt>
   17080:	mov	r0, #0
   17084:	pop	{r4, r5, r6, pc}
   17088:	adds	r5, r5, r1
   1708c:	bcc	170a0 <argp_error@@Base+0x1100>
   17090:	bl	111d8 <__errno_location@plt>
   17094:	mov	r3, #12
   17098:	str	r3, [r0]
   1709c:	b	17080 <argp_error@@Base+0x10e0>
   170a0:	mov	r1, r5
   170a4:	bl	17138 <argp_error@@Base+0x1198>
   170a8:	cmp	r0, #0
   170ac:	beq	17090 <argp_error@@Base+0x10f0>
   170b0:	add	r5, r0, r5
   170b4:	str	r0, [r4, #24]
   170b8:	str	r5, [r4, #32]
   170bc:	str	r0, [r4, #28]
   170c0:	b	17058 <argp_error@@Base+0x10b8>
   170c4:	push	{r1, r2, r3}
   170c8:	push	{r0, r1, r2, r4, r5, r6, lr}
   170cc:	mov	r4, r0
   170d0:	mov	r1, #150	; 0x96
   170d4:	add	r6, sp, #32
   170d8:	mov	r0, r4
   170dc:	bl	16fe0 <argp_error@@Base+0x1040>
   170e0:	cmp	r0, #0
   170e4:	bne	170fc <argp_error@@Base+0x115c>
   170e8:	mvn	r0, #0
   170ec:	add	sp, sp, #12
   170f0:	pop	{r4, r5, r6, lr}
   170f4:	add	sp, sp, #12
   170f8:	bx	lr
   170fc:	ldr	r0, [r4, #28]
   17100:	ldr	r5, [r4, #32]
   17104:	mov	r3, r6
   17108:	sub	r5, r5, r0
   1710c:	ldr	r2, [sp, #28]
   17110:	mov	r1, r5
   17114:	str	r6, [sp, #4]
   17118:	bl	11280 <vsnprintf@plt>
   1711c:	cmp	r5, r0
   17120:	addls	r1, r0, #1
   17124:	bls	170d8 <argp_error@@Base+0x1138>
   17128:	ldr	r3, [r4, #28]
   1712c:	add	r3, r3, r0
   17130:	str	r3, [r4, #28]
   17134:	b	170ec <argp_error@@Base+0x114c>
   17138:	cmp	r0, #0
   1713c:	push	{r4, lr}
   17140:	mov	r4, r1
   17144:	bne	17154 <argp_error@@Base+0x11b4>
   17148:	mov	r0, r1
   1714c:	pop	{r4, lr}
   17150:	b	133a0 <argp_parse@@Base+0x1048>
   17154:	cmp	r1, #0
   17158:	bne	17168 <argp_error@@Base+0x11c8>
   1715c:	bl	12df4 <argp_parse@@Base+0xa9c>
   17160:	mov	r0, #0
   17164:	pop	{r4, pc}
   17168:	cmp	r1, #0
   1716c:	blt	1717c <argp_error@@Base+0x11dc>
   17170:	mov	r3, #0
   17174:	cmp	r3, r3
   17178:	beq	1718c <argp_error@@Base+0x11ec>
   1717c:	bl	111d8 <__errno_location@plt>
   17180:	mov	r3, #12
   17184:	str	r3, [r0]
   17188:	b	17160 <argp_error@@Base+0x11c0>
   1718c:	pop	{r4, lr}
   17190:	b	110b8 <realloc@plt>
   17194:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17198:	mov	r7, r0
   1719c:	ldr	r6, [pc, #72]	; 171ec <argp_error@@Base+0x124c>
   171a0:	ldr	r5, [pc, #72]	; 171f0 <argp_error@@Base+0x1250>
   171a4:	add	r6, pc, r6
   171a8:	add	r5, pc, r5
   171ac:	sub	r6, r6, r5
   171b0:	mov	r8, r1
   171b4:	mov	r9, r2
   171b8:	bl	10fcc <fputs_unlocked@plt-0x20>
   171bc:	asrs	r6, r6, #2
   171c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   171c4:	mov	r4, #0
   171c8:	add	r4, r4, #1
   171cc:	ldr	r3, [r5], #4
   171d0:	mov	r2, r9
   171d4:	mov	r1, r8
   171d8:	mov	r0, r7
   171dc:	blx	r3
   171e0:	cmp	r6, r4
   171e4:	bne	171c8 <argp_error@@Base+0x1228>
   171e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   171ec:	andeq	r0, r1, ip, asr sp
   171f0:	andeq	r0, r1, r4, asr sp
   171f4:	bx	lr

Disassembly of section .fini:

000171f8 <.fini>:
   171f8:	push	{r3, lr}
   171fc:	pop	{r3, pc}
