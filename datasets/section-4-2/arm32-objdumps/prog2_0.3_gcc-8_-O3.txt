
../repos/prog2/0.3:     file format elf32-littlearm


Disassembly of section .init:

000105c8 <.init>:
   105c8:	push	{r3, lr}
   105cc:	bl	108e4 <_start@@Base+0x3c>
   105d0:	pop	{r3, pc}

Disassembly of section .plt:

000105d4 <printf@plt-0x14>:
   105d4:	push	{lr}		; (str lr, [sp, #-4]!)
   105d8:	ldr	lr, [pc, #4]	; 105e4 <printf@plt-0x4>
   105dc:	add	lr, pc, lr
   105e0:	ldr	pc, [lr, #8]!
   105e4:	andeq	r0, r1, ip, lsl sl

000105e8 <printf@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #16, 20	; 0x10000
   105f0:	ldr	pc, [ip, #2588]!	; 0xa1c

000105f4 <__libc_start_main@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #16, 20	; 0x10000
   105fc:	ldr	pc, [ip, #2580]!	; 0xa14

00010600 <__gmon_start__@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #16, 20	; 0x10000
   10608:	ldr	pc, [ip, #2572]!	; 0xa0c

0001060c <putchar@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #16, 20	; 0x10000
   10614:	ldr	pc, [ip, #2564]!	; 0xa04

00010618 <__isoc99_scanf@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #16, 20	; 0x10000
   10620:	ldr	pc, [ip, #2556]!	; 0x9fc

00010624 <abort@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #16, 20	; 0x10000
   1062c:	ldr	pc, [ip, #2548]!	; 0x9f4

Disassembly of section .text:

00010630 <main@@Base>:
   10630:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10634:	mov	r4, #0
   10638:	strd	r6, [sp, #8]
   1063c:	movw	r7, #3000	; 0xbb8
   10640:	movt	r7, #1
   10644:	str	r8, [sp, #16]
   10648:	movw	r8, #2976	; 0xba0
   1064c:	movt	r8, #1
   10650:	str	lr, [sp, #20]
   10654:	sub	sp, sp, #40	; 0x28
   10658:	mov	r5, sp
   1065c:	mov	r6, r5
   10660:	add	r4, r4, #1
   10664:	mov	r0, r8
   10668:	mov	r1, r4
   1066c:	bl	105e8 <printf@plt>
   10670:	mov	r1, r6
   10674:	mov	r0, r7
   10678:	bl	10618 <__isoc99_scanf@plt>
   1067c:	cmp	r4, #10
   10680:	add	r6, r6, #4
   10684:	bne	10660 <main@@Base+0x30>
   10688:	vldr	s15, [pc, #528]	; 108a0 <main@@Base+0x270>
   1068c:	movw	r0, #3004	; 0xbbc
   10690:	movt	r0, #1
   10694:	movw	r4, #3060	; 0xbf4
   10698:	movt	r4, #1
   1069c:	vldr	s14, [sp]
   106a0:	add	r6, r5, #40	; 0x28
   106a4:	vldr	s12, [sp, #4]
   106a8:	vldr	s13, [sp, #8]
   106ac:	vadd.f32	s14, s14, s15
   106b0:	vldr	s7, [sp, #12]
   106b4:	vldr	s15, [sp, #16]
   106b8:	vldr	s8, [sp, #20]
   106bc:	vadd.f32	s14, s14, s12
   106c0:	vldr	s9, [sp, #24]
   106c4:	vldr	s10, [sp, #28]
   106c8:	vldr	s11, [sp, #32]
   106cc:	vadd.f32	s14, s14, s13
   106d0:	vldr	s12, [sp, #36]	; 0x24
   106d4:	vldr	s13, [pc, #456]	; 108a4 <main@@Base+0x274>
   106d8:	vadd.f32	s14, s14, s7
   106dc:	vadd.f32	s15, s14, s15
   106e0:	vadd.f32	s15, s15, s8
   106e4:	vadd.f32	s15, s15, s9
   106e8:	vadd.f32	s15, s15, s10
   106ec:	vadd.f32	s15, s15, s11
   106f0:	vadd.f32	s15, s15, s12
   106f4:	vdiv.f32	s14, s15, s13
   106f8:	vcvt.f64.f32	d7, s14
   106fc:	vmov	r2, r3, d7
   10700:	bl	105e8 <printf@plt>
   10704:	vldr	s15, [sp]
   10708:	movw	r0, #3020	; 0xbcc
   1070c:	movt	r0, #1
   10710:	vldr	s14, [sp, #4]
   10714:	vldr	s7, [sp, #8]
   10718:	vldr	s8, [sp, #12]
   1071c:	vcmp.f32	s15, s14
   10720:	vldr	s9, [sp, #16]
   10724:	vldr	s10, [sp, #20]
   10728:	vldr	s11, [sp, #24]
   1072c:	vldr	s12, [sp, #28]
   10730:	vmrs	APSR_nzcv, fpscr
   10734:	vldr	s13, [sp, #32]
   10738:	vmovmi.f32	s15, s14
   1073c:	vldr	s14, [sp, #36]	; 0x24
   10740:	vcmp.f32	s15, s7
   10744:	vmrs	APSR_nzcv, fpscr
   10748:	vmovmi.f32	s15, s7
   1074c:	vcmp.f32	s15, s8
   10750:	vmrs	APSR_nzcv, fpscr
   10754:	vmovmi.f32	s15, s8
   10758:	vcmp.f32	s15, s9
   1075c:	vmrs	APSR_nzcv, fpscr
   10760:	vmovmi.f32	s15, s9
   10764:	vcmp.f32	s15, s10
   10768:	vmrs	APSR_nzcv, fpscr
   1076c:	vmovmi.f32	s15, s10
   10770:	vcmp.f32	s15, s11
   10774:	vmrs	APSR_nzcv, fpscr
   10778:	vmovmi.f32	s15, s11
   1077c:	vcmp.f32	s15, s12
   10780:	vmrs	APSR_nzcv, fpscr
   10784:	vmovmi.f32	s15, s12
   10788:	vcmp.f32	s15, s13
   1078c:	vmrs	APSR_nzcv, fpscr
   10790:	vmovmi.f32	s15, s13
   10794:	vcmp.f32	s14, s15
   10798:	vmrs	APSR_nzcv, fpscr
   1079c:	vmovgt.f32	s15, s14
   107a0:	vcvt.f64.f32	d7, s15
   107a4:	vmov	r2, r3, d7
   107a8:	bl	105e8 <printf@plt>
   107ac:	vldr	s15, [sp]
   107b0:	movw	r0, #3036	; 0xbdc
   107b4:	movt	r0, #1
   107b8:	vldr	s14, [sp, #4]
   107bc:	vldr	s7, [sp, #8]
   107c0:	vldr	s8, [sp, #12]
   107c4:	vcmp.f32	s15, s14
   107c8:	vldr	s9, [sp, #16]
   107cc:	vldr	s10, [sp, #20]
   107d0:	vldr	s11, [sp, #24]
   107d4:	vldr	s12, [sp, #28]
   107d8:	vmrs	APSR_nzcv, fpscr
   107dc:	vldr	s13, [sp, #32]
   107e0:	vmovgt.f32	s15, s14
   107e4:	vldr	s14, [sp, #36]	; 0x24
   107e8:	vcmp.f32	s15, s7
   107ec:	vmrs	APSR_nzcv, fpscr
   107f0:	vmovgt.f32	s15, s7
   107f4:	vcmp.f32	s15, s8
   107f8:	vmrs	APSR_nzcv, fpscr
   107fc:	vmovgt.f32	s15, s8
   10800:	vcmp.f32	s15, s9
   10804:	vmrs	APSR_nzcv, fpscr
   10808:	vmovgt.f32	s15, s9
   1080c:	vcmp.f32	s15, s10
   10810:	vmrs	APSR_nzcv, fpscr
   10814:	vmovgt.f32	s15, s10
   10818:	vcmp.f32	s15, s11
   1081c:	vmrs	APSR_nzcv, fpscr
   10820:	vmovgt.f32	s15, s11
   10824:	vcmp.f32	s15, s12
   10828:	vmrs	APSR_nzcv, fpscr
   1082c:	vmovgt.f32	s15, s12
   10830:	vcmp.f32	s15, s13
   10834:	vmrs	APSR_nzcv, fpscr
   10838:	vmovgt.f32	s15, s13
   1083c:	vcmp.f32	s14, s15
   10840:	vmrs	APSR_nzcv, fpscr
   10844:	vmovmi.f32	s15, s14
   10848:	vcvt.f64.f32	d7, s15
   1084c:	vmov	r2, r3, d7
   10850:	bl	105e8 <printf@plt>
   10854:	movw	r0, #3052	; 0xbec
   10858:	movt	r0, #1
   1085c:	bl	105e8 <printf@plt>
   10860:	vldmia	r5!, {s15}
   10864:	mov	r0, r4
   10868:	vcvt.f64.f32	d7, s15
   1086c:	vmov	r2, r3, d7
   10870:	bl	105e8 <printf@plt>
   10874:	cmp	r6, r5
   10878:	bne	10860 <main@@Base+0x230>
   1087c:	mov	r0, #10
   10880:	bl	1060c <putchar@plt>
   10884:	mov	r0, #0
   10888:	add	sp, sp, #40	; 0x28
   1088c:	ldrd	r4, [sp]
   10890:	ldrd	r6, [sp, #8]
   10894:	ldr	r8, [sp, #16]
   10898:	add	sp, sp, #20
   1089c:	pop	{pc}		; (ldr pc, [sp], #4)
   108a0:	andeq	r0, r0, r0
   108a4:			; <UNDEFINED> instruction: 0x41200000

000108a8 <_start@@Base>:
   108a8:	mov	fp, #0
   108ac:	mov	lr, #0
   108b0:	pop	{r1}		; (ldr r1, [sp], #4)
   108b4:	mov	r2, sp
   108b8:	push	{r2}		; (str r2, [sp, #-4]!)
   108bc:	push	{r0}		; (str r0, [sp, #-4]!)
   108c0:	ldr	ip, [pc, #16]	; 108d8 <_start@@Base+0x30>
   108c4:	push	{ip}		; (str ip, [sp, #-4]!)
   108c8:	ldr	r0, [pc, #12]	; 108dc <_start@@Base+0x34>
   108cc:	ldr	r3, [pc, #12]	; 108e0 <_start@@Base+0x38>
   108d0:	bl	105f4 <__libc_start_main@plt>
   108d4:	bl	10624 <abort@plt>
   108d8:	muleq	r1, r0, fp
   108dc:	andeq	r0, r1, r0, lsr r6
   108e0:	andeq	r0, r1, r0, lsr fp
   108e4:	ldr	r3, [pc, #20]	; 10900 <_start@@Base+0x58>
   108e8:	ldr	r2, [pc, #20]	; 10904 <_start@@Base+0x5c>
   108ec:	add	r3, pc, r3
   108f0:	ldr	r2, [r3, r2]
   108f4:	cmp	r2, #0
   108f8:	bxeq	lr
   108fc:	b	10600 <__gmon_start__@plt>
   10900:	andeq	r0, r1, ip, lsl #14
   10904:	andeq	r0, r0, r4, lsr #32
   10908:	ldr	r0, [pc, #24]	; 10928 <_start@@Base+0x80>
   1090c:	ldr	r3, [pc, #24]	; 1092c <_start@@Base+0x84>
   10910:	cmp	r3, r0
   10914:	bxeq	lr
   10918:	ldr	r3, [pc, #16]	; 10930 <_start@@Base+0x88>
   1091c:	cmp	r3, #0
   10920:	bxeq	lr
   10924:	bx	r3
   10928:	andeq	r1, r2, r0, lsr r0
   1092c:	andeq	r1, r2, r0, lsr r0
   10930:	andeq	r0, r0, r0
   10934:	ldr	r0, [pc, #36]	; 10960 <_start@@Base+0xb8>
   10938:	ldr	r1, [pc, #36]	; 10964 <_start@@Base+0xbc>
   1093c:	sub	r1, r1, r0
   10940:	asr	r1, r1, #2
   10944:	add	r1, r1, r1, lsr #31
   10948:	asrs	r1, r1, #1
   1094c:	bxeq	lr
   10950:	ldr	r3, [pc, #16]	; 10968 <_start@@Base+0xc0>
   10954:	cmp	r3, #0
   10958:	bxeq	lr
   1095c:	bx	r3
   10960:	andeq	r1, r2, r0, lsr r0
   10964:	andeq	r1, r2, r0, lsr r0
   10968:	andeq	r0, r0, r0
   1096c:	push	{r4, lr}
   10970:	ldr	r4, [pc, #24]	; 10990 <_start@@Base+0xe8>
   10974:	ldrb	r3, [r4]
   10978:	cmp	r3, #0
   1097c:	popne	{r4, pc}
   10980:	bl	10908 <_start@@Base+0x60>
   10984:	mov	r3, #1
   10988:	strb	r3, [r4]
   1098c:	pop	{r4, pc}
   10990:	andeq	r1, r2, r0, lsr r0
   10994:	b	10934 <_start@@Base+0x8c>

00010998 <avg@@Base>:
   10998:	vldr	s15, [pc, #88]	; 109f8 <avg@@Base+0x60>
   1099c:	vldr	s14, [r0]
   109a0:	vldr	s12, [r0, #4]
   109a4:	vldr	s13, [r0, #8]
   109a8:	vadd.f32	s14, s14, s15
   109ac:	vldr	s8, [r0, #12]
   109b0:	vldr	s15, [r0, #16]
   109b4:	vldr	s9, [r0, #20]
   109b8:	vadd.f32	s14, s14, s12
   109bc:	vldr	s10, [r0, #24]
   109c0:	vldr	s11, [r0, #28]
   109c4:	vldr	s12, [r0, #32]
   109c8:	vadd.f32	s14, s14, s13
   109cc:	vldr	s13, [r0, #36]	; 0x24
   109d0:	vldr	s0, [pc, #36]	; 109fc <avg@@Base+0x64>
   109d4:	vadd.f32	s14, s14, s8
   109d8:	vadd.f32	s15, s14, s15
   109dc:	vadd.f32	s15, s15, s9
   109e0:	vadd.f32	s15, s15, s10
   109e4:	vadd.f32	s15, s15, s11
   109e8:	vadd.f32	s15, s15, s12
   109ec:	vadd.f32	s15, s15, s13
   109f0:	vdiv.f32	s0, s15, s0
   109f4:	bx	lr
   109f8:	andeq	r0, r0, r0
   109fc:			; <UNDEFINED> instruction: 0x41200000

00010a00 <max@@Base>:
   10a00:	vldr	s15, [r0]
   10a04:	vldr	s7, [r0, #4]
   10a08:	vldr	s8, [r0, #8]
   10a0c:	vldr	s9, [r0, #12]
   10a10:	vcmp.f32	s7, s15
   10a14:	vldr	s10, [r0, #16]
   10a18:	vldr	s11, [r0, #20]
   10a1c:	vldr	s12, [r0, #24]
   10a20:	vldr	s13, [r0, #28]
   10a24:	vmrs	APSR_nzcv, fpscr
   10a28:	vldr	s14, [r0, #32]
   10a2c:	vldr	s0, [r0, #36]	; 0x24
   10a30:	vmovgt.f32	s15, s7
   10a34:	vcmp.f32	s15, s8
   10a38:	vmrs	APSR_nzcv, fpscr
   10a3c:	vmovmi.f32	s15, s8
   10a40:	vcmp.f32	s15, s9
   10a44:	vmrs	APSR_nzcv, fpscr
   10a48:	vmovmi.f32	s15, s9
   10a4c:	vcmp.f32	s15, s10
   10a50:	vmrs	APSR_nzcv, fpscr
   10a54:	vmovmi.f32	s15, s10
   10a58:	vcmp.f32	s15, s11
   10a5c:	vmrs	APSR_nzcv, fpscr
   10a60:	vmovmi.f32	s15, s11
   10a64:	vcmp.f32	s15, s12
   10a68:	vmrs	APSR_nzcv, fpscr
   10a6c:	vmovmi.f32	s15, s12
   10a70:	vcmp.f32	s15, s13
   10a74:	vmrs	APSR_nzcv, fpscr
   10a78:	vmovmi.f32	s15, s13
   10a7c:	vcmp.f32	s15, s14
   10a80:	vmrs	APSR_nzcv, fpscr
   10a84:	vmovmi.f32	s15, s14
   10a88:	vcmp.f32	s0, s15
   10a8c:	vmrs	APSR_nzcv, fpscr
   10a90:	vmovle.f32	s0, s15
   10a94:	bx	lr

00010a98 <min@@Base>:
   10a98:	vldr	s15, [r0]
   10a9c:	vldr	s7, [r0, #4]
   10aa0:	vldr	s8, [r0, #8]
   10aa4:	vldr	s9, [r0, #12]
   10aa8:	vcmp.f32	s7, s15
   10aac:	vldr	s10, [r0, #16]
   10ab0:	vldr	s11, [r0, #20]
   10ab4:	vldr	s12, [r0, #24]
   10ab8:	vldr	s13, [r0, #28]
   10abc:	vmrs	APSR_nzcv, fpscr
   10ac0:	vldr	s14, [r0, #32]
   10ac4:	vldr	s0, [r0, #36]	; 0x24
   10ac8:	vmovmi.f32	s15, s7
   10acc:	vcmp.f32	s15, s8
   10ad0:	vmrs	APSR_nzcv, fpscr
   10ad4:	vmovgt.f32	s15, s8
   10ad8:	vcmp.f32	s15, s9
   10adc:	vmrs	APSR_nzcv, fpscr
   10ae0:	vmovgt.f32	s15, s9
   10ae4:	vcmp.f32	s15, s10
   10ae8:	vmrs	APSR_nzcv, fpscr
   10aec:	vmovgt.f32	s15, s10
   10af0:	vcmp.f32	s15, s11
   10af4:	vmrs	APSR_nzcv, fpscr
   10af8:	vmovgt.f32	s15, s11
   10afc:	vcmp.f32	s15, s12
   10b00:	vmrs	APSR_nzcv, fpscr
   10b04:	vmovgt.f32	s15, s12
   10b08:	vcmp.f32	s15, s13
   10b0c:	vmrs	APSR_nzcv, fpscr
   10b10:	vmovgt.f32	s15, s13
   10b14:	vcmp.f32	s15, s14
   10b18:	vmrs	APSR_nzcv, fpscr
   10b1c:	vmovgt.f32	s15, s14
   10b20:	vcmp.f32	s0, s15
   10b24:	vmrs	APSR_nzcv, fpscr
   10b28:	vmovpl.f32	s0, s15
   10b2c:	bx	lr

00010b30 <__libc_csu_init@@Base>:
   10b30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b34:	mov	r7, r0
   10b38:	ldr	r6, [pc, #72]	; 10b88 <__libc_csu_init@@Base+0x58>
   10b3c:	ldr	r5, [pc, #72]	; 10b8c <__libc_csu_init@@Base+0x5c>
   10b40:	add	r6, pc, r6
   10b44:	add	r5, pc, r5
   10b48:	sub	r6, r6, r5
   10b4c:	mov	r8, r1
   10b50:	mov	r9, r2
   10b54:	bl	105c8 <printf@plt-0x20>
   10b58:	asrs	r6, r6, #2
   10b5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b60:	mov	r4, #0
   10b64:	add	r4, r4, #1
   10b68:	ldr	r3, [r5], #4
   10b6c:	mov	r2, r9
   10b70:	mov	r1, r8
   10b74:	mov	r0, r7
   10b78:	blx	r3
   10b7c:	cmp	r6, r4
   10b80:	bne	10b64 <__libc_csu_init@@Base+0x34>
   10b84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b88:	andeq	r0, r1, ip, asr #7
   10b8c:	andeq	r0, r1, r4, asr #7

00010b90 <__libc_csu_fini@@Base>:
   10b90:	bx	lr

Disassembly of section .fini:

00010b94 <.fini>:
   10b94:	push	{r3, lr}
   10b98:	pop	{r3, pc}
