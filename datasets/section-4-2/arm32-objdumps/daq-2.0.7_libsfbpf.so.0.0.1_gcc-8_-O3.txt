
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000cc8 <_init>:
 cc8:	push	{r3, lr}
 ccc:	bl	ed4 <call_weak_fn>
 cd0:	pop	{r3, pc}

Disassembly of section .plt:

00000cd4 <.plt>:
 cd4:	push	{lr}		; (str lr, [sp, #-4]!)
 cd8:	ldr	lr, [pc, #4]	; ce4 <.plt+0x10>
 cdc:	add	lr, pc, lr
 ce0:	ldr	pc, [lr, #8]!
 ce4:	.word	0x0003d31c

00000ce8 <calloc@plt>:
 ce8:	add	ip, pc, #0, 12
 cec:	add	ip, ip, #249856	; 0x3d000
 cf0:	ldr	pc, [ip, #796]!	; 0x31c

00000cf4 <strcmp@plt>:
 cf4:	add	ip, pc, #0, 12
 cf8:	add	ip, ip, #249856	; 0x3d000
 cfc:	ldr	pc, [ip, #788]!	; 0x314

00000d00 <__cxa_finalize@plt>:
 d00:	add	ip, pc, #0, 12
 d04:	add	ip, ip, #249856	; 0x3d000
 d08:	ldr	pc, [ip, #780]!	; 0x30c

00000d0c <printf@plt>:
 d0c:	add	ip, pc, #0, 12
 d10:	add	ip, ip, #249856	; 0x3d000
 d14:	ldr	pc, [ip, #772]!	; 0x304

00000d18 <fopen@plt>:
 d18:	add	ip, pc, #0, 12
 d1c:	add	ip, ip, #249856	; 0x3d000
 d20:	ldr	pc, [ip, #764]!	; 0x2fc

00000d24 <getprotobyname@plt>:
 d24:	add	ip, pc, #0, 12
 d28:	add	ip, ip, #249856	; 0x3d000
 d2c:	ldr	pc, [ip, #756]!	; 0x2f4

00000d30 <longjmp@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #249856	; 0x3d000
 d38:	ldr	pc, [ip, #748]!	; 0x2ec

00000d3c <_setjmp@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #249856	; 0x3d000
 d44:	ldr	pc, [ip, #740]!	; 0x2e4

00000d48 <free@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #249856	; 0x3d000
 d50:	ldr	pc, [ip, #732]!	; 0x2dc

00000d54 <getnetbyname@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #249856	; 0x3d000
 d5c:	ldr	pc, [ip, #724]!	; 0x2d4

00000d60 <ferror@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #249856	; 0x3d000
 d68:	ldr	pc, [ip, #716]!	; 0x2cc

00000d6c <memcpy@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #249856	; 0x3d000
 d74:	ldr	pc, [ip, #708]!	; 0x2c4

00000d78 <strdup@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #249856	; 0x3d000
 d80:	ldr	pc, [ip, #700]!	; 0x2bc

00000d84 <rewind@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #249856	; 0x3d000
 d8c:	ldr	pc, [ip, #692]!	; 0x2b4

00000d90 <realloc@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #249856	; 0x3d000
 d98:	ldr	pc, [ip, #684]!	; 0x2ac

00000d9c <fwrite@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #249856	; 0x3d000
 da4:	ldr	pc, [ip, #676]!	; 0x2a4

00000da8 <fread@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #249856	; 0x3d000
 db0:	ldr	pc, [ip, #668]!	; 0x29c

00000db4 <puts@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #249856	; 0x3d000
 dbc:	ldr	pc, [ip, #660]!	; 0x294

00000dc0 <malloc@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #249856	; 0x3d000
 dc8:	ldr	pc, [ip, #652]!	; 0x28c

00000dcc <__gmon_start__@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #249856	; 0x3d000
 dd4:	ldr	pc, [ip, #644]!	; 0x284

00000dd8 <__ctype_b_loc@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #249856	; 0x3d000
 de0:	ldr	pc, [ip, #636]!	; 0x27c

00000de4 <exit@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #249856	; 0x3d000
 dec:	ldr	pc, [ip, #628]!	; 0x274

00000df0 <strlen@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #249856	; 0x3d000
 df8:	ldr	pc, [ip, #620]!	; 0x26c

00000dfc <strchr@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #249856	; 0x3d000
 e04:	ldr	pc, [ip, #612]!	; 0x264

00000e08 <fprintf@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #249856	; 0x3d000
 e10:	ldr	pc, [ip, #604]!	; 0x25c

00000e14 <__errno_location@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #249856	; 0x3d000
 e1c:	ldr	pc, [ip, #596]!	; 0x254

00000e20 <getservbyname@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #249856	; 0x3d000
 e28:	ldr	pc, [ip, #588]!	; 0x24c

00000e2c <memset@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #249856	; 0x3d000
 e34:	ldr	pc, [ip, #580]!	; 0x244

00000e38 <putchar@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #249856	; 0x3d000
 e40:	ldr	pc, [ip, #572]!	; 0x23c

00000e44 <strncpy@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #249856	; 0x3d000
 e4c:	ldr	pc, [ip, #564]!	; 0x234

00000e50 <fileno@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #249856	; 0x3d000
 e58:	ldr	pc, [ip, #556]!	; 0x22c

00000e5c <sscanf@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #249856	; 0x3d000
 e64:	ldr	pc, [ip, #548]!	; 0x224

00000e68 <clearerr@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #249856	; 0x3d000
 e70:	ldr	pc, [ip, #540]!	; 0x21c

00000e74 <vsnprintf@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #249856	; 0x3d000
 e7c:	ldr	pc, [ip, #532]!	; 0x214

00000e80 <freeaddrinfo@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #249856	; 0x3d000
 e88:	ldr	pc, [ip, #524]!	; 0x20c

00000e8c <getaddrinfo@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #249856	; 0x3d000
 e94:	ldr	pc, [ip, #516]!	; 0x204

00000e98 <ffs@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #249856	; 0x3d000
 ea0:	ldr	pc, [ip, #508]!	; 0x1fc

00000ea4 <gethostbyname@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #249856	; 0x3d000
 eac:	ldr	pc, [ip, #500]!	; 0x1f4

00000eb0 <isatty@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #249856	; 0x3d000
 eb8:	ldr	pc, [ip, #492]!	; 0x1ec

00000ebc <abort@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #249856	; 0x3d000
 ec4:	ldr	pc, [ip, #484]!	; 0x1e4

00000ec8 <getc@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #249856	; 0x3d000
 ed0:	ldr	pc, [ip, #476]!	; 0x1dc

Disassembly of section .text:

00000ed4 <call_weak_fn>:
     ed4:	ldr	r3, [pc, #20]	; ef0 <call_weak_fn+0x1c>
     ed8:	ldr	r2, [pc, #20]	; ef4 <call_weak_fn+0x20>
     edc:	add	r3, pc, r3
     ee0:	ldr	r2, [r3, r2]
     ee4:	cmp	r2, #0
     ee8:	bxeq	lr
     eec:	b	dcc <__gmon_start__@plt>
     ef0:	.word	0x0003d11c
     ef4:	.word	0x000000dc

00000ef8 <deregister_tm_clones>:
     ef8:	ldr	r0, [pc, #44]	; f2c <deregister_tm_clones+0x34>
     efc:	ldr	r3, [pc, #44]	; f30 <deregister_tm_clones+0x38>
     f00:	add	r0, pc, r0
     f04:	add	r3, pc, r3
     f08:	cmp	r3, r0
     f0c:	ldr	r3, [pc, #32]	; f34 <deregister_tm_clones+0x3c>
     f10:	add	r3, pc, r3
     f14:	bxeq	lr
     f18:	ldr	r2, [pc, #24]	; f38 <deregister_tm_clones+0x40>
     f1c:	ldr	r3, [r3, r2]
     f20:	cmp	r3, #0
     f24:	bxeq	lr
     f28:	bx	r3
     f2c:	.word	0x0003d454
     f30:	.word	0x0003d450
     f34:	.word	0x0003d0e8
     f38:	.word	0x000000bc

00000f3c <register_tm_clones>:
     f3c:	ldr	r0, [pc, #56]	; f7c <register_tm_clones+0x40>
     f40:	ldr	r3, [pc, #56]	; f80 <register_tm_clones+0x44>
     f44:	add	r0, pc, r0
     f48:	add	r3, pc, r3
     f4c:	sub	r1, r3, r0
     f50:	ldr	r3, [pc, #44]	; f84 <register_tm_clones+0x48>
     f54:	asr	r1, r1, #2
     f58:	add	r3, pc, r3
     f5c:	add	r1, r1, r1, lsr #31
     f60:	asrs	r1, r1, #1
     f64:	bxeq	lr
     f68:	ldr	r2, [pc, #24]	; f88 <register_tm_clones+0x4c>
     f6c:	ldr	r3, [r3, r2]
     f70:	cmp	r3, #0
     f74:	bxeq	lr
     f78:	bx	r3
     f7c:	.word	0x0003d410
     f80:	.word	0x0003d40c
     f84:	.word	0x0003d0a0
     f88:	.word	0x000000f8

00000f8c <__do_global_dtors_aux>:
     f8c:	ldr	r3, [pc, #76]	; fe0 <__do_global_dtors_aux+0x54>
     f90:	ldr	r2, [pc, #76]	; fe4 <__do_global_dtors_aux+0x58>
     f94:	add	r3, pc, r3
     f98:	add	r2, pc, r2
     f9c:	ldrb	r3, [r3]
     fa0:	cmp	r3, #0
     fa4:	bxne	lr
     fa8:	ldr	r3, [pc, #56]	; fe8 <__do_global_dtors_aux+0x5c>
     fac:	push	{r4, lr}
     fb0:	ldr	r3, [r2, r3]
     fb4:	cmp	r3, #0
     fb8:	beq	fc8 <__do_global_dtors_aux+0x3c>
     fbc:	ldr	r3, [pc, #40]	; fec <__do_global_dtors_aux+0x60>
     fc0:	ldr	r0, [pc, r3]
     fc4:	bl	d00 <__cxa_finalize@plt>
     fc8:	bl	ef8 <deregister_tm_clones>
     fcc:	ldr	r3, [pc, #28]	; ff0 <__do_global_dtors_aux+0x64>
     fd0:	mov	r2, #1
     fd4:	add	r3, pc, r3
     fd8:	strb	r2, [r3]
     fdc:	pop	{r4, pc}
     fe0:	.word	0x0003d3c4
     fe4:	.word	0x0003d060
     fe8:	.word	0x000000b8
     fec:	.word	0x0003d13c
     ff0:	.word	0x0003d384

00000ff4 <frame_dummy>:
     ff4:	b	f3c <register_tm_clones>

00000ff8 <sfbpf_filter>:
     ff8:	cmp	r0, #0
     ffc:	bne	1008 <sfbpf_filter+0x10>
    1000:	mvn	r0, #0
    1004:	bx	lr
    1008:	strd	r4, [sp, #-16]!
    100c:	mov	r4, #0
    1010:	sub	ip, r0, #8
    1014:	mov	r0, r4
    1018:	str	r6, [sp, #8]
    101c:	str	lr, [sp, #12]
    1020:	sub	sp, sp, #64	; 0x40
    1024:	ldrh	lr, [ip, #8]
    1028:	add	r5, ip, #8
    102c:	cmp	lr, #177	; 0xb1
    1030:	addls	pc, pc, lr, lsl #2
    1034:	b	1618 <sfbpf_filter+0x620>
    1038:	b	14ac <sfbpf_filter+0x4b4>
    103c:	b	14a0 <sfbpf_filter+0x4a8>
    1040:	b	1488 <sfbpf_filter+0x490>
    1044:	b	1470 <sfbpf_filter+0x478>
    1048:	b	1460 <sfbpf_filter+0x468>
    104c:	b	1454 <sfbpf_filter+0x45c>
    1050:	b	144c <sfbpf_filter+0x454>
    1054:	b	14ec <sfbpf_filter+0x4f4>
    1058:	b	1618 <sfbpf_filter+0x620>
    105c:	b	1618 <sfbpf_filter+0x620>
    1060:	b	1618 <sfbpf_filter+0x620>
    1064:	b	1618 <sfbpf_filter+0x620>
    1068:	b	14e0 <sfbpf_filter+0x4e8>
    106c:	b	1618 <sfbpf_filter+0x620>
    1070:	b	1618 <sfbpf_filter+0x620>
    1074:	b	1618 <sfbpf_filter+0x620>
    1078:	b	1618 <sfbpf_filter+0x620>
    107c:	b	1618 <sfbpf_filter+0x620>
    1080:	b	1618 <sfbpf_filter+0x620>
    1084:	b	1618 <sfbpf_filter+0x620>
    1088:	b	14d0 <sfbpf_filter+0x4d8>
    108c:	b	14b8 <sfbpf_filter+0x4c0>
    1090:	b	130c <sfbpf_filter+0x314>
    1094:	b	1618 <sfbpf_filter+0x620>
    1098:	b	1618 <sfbpf_filter+0x620>
    109c:	b	1618 <sfbpf_filter+0x620>
    10a0:	b	1618 <sfbpf_filter+0x620>
    10a4:	b	1618 <sfbpf_filter+0x620>
    10a8:	b	1504 <sfbpf_filter+0x50c>
    10ac:	b	14f8 <sfbpf_filter+0x500>
    10b0:	b	1618 <sfbpf_filter+0x620>
    10b4:	b	1618 <sfbpf_filter+0x620>
    10b8:	b	142c <sfbpf_filter+0x434>
    10bc:	b	1618 <sfbpf_filter+0x620>
    10c0:	b	1618 <sfbpf_filter+0x620>
    10c4:	b	1618 <sfbpf_filter+0x620>
    10c8:	b	141c <sfbpf_filter+0x424>
    10cc:	b	15dc <sfbpf_filter+0x5e4>
    10d0:	b	1618 <sfbpf_filter+0x620>
    10d4:	b	1618 <sfbpf_filter+0x620>
    10d8:	b	15c8 <sfbpf_filter+0x5d0>
    10dc:	b	1618 <sfbpf_filter+0x620>
    10e0:	b	1618 <sfbpf_filter+0x620>
    10e4:	b	1618 <sfbpf_filter+0x620>
    10e8:	b	15ec <sfbpf_filter+0x5f4>
    10ec:	b	158c <sfbpf_filter+0x594>
    10f0:	b	1618 <sfbpf_filter+0x620>
    10f4:	b	1618 <sfbpf_filter+0x620>
    10f8:	b	15a8 <sfbpf_filter+0x5b0>
    10fc:	b	1618 <sfbpf_filter+0x620>
    1100:	b	1618 <sfbpf_filter+0x620>
    1104:	b	1618 <sfbpf_filter+0x620>
    1108:	b	1598 <sfbpf_filter+0x5a0>
    110c:	b	15b8 <sfbpf_filter+0x5c0>
    1110:	b	1618 <sfbpf_filter+0x620>
    1114:	b	1618 <sfbpf_filter+0x620>
    1118:	b	1618 <sfbpf_filter+0x620>
    111c:	b	1618 <sfbpf_filter+0x620>
    1120:	b	1618 <sfbpf_filter+0x620>
    1124:	b	1618 <sfbpf_filter+0x620>
    1128:	b	1300 <sfbpf_filter+0x308>
    112c:	b	1548 <sfbpf_filter+0x550>
    1130:	b	1618 <sfbpf_filter+0x620>
    1134:	b	1618 <sfbpf_filter+0x620>
    1138:	b	1530 <sfbpf_filter+0x538>
    113c:	b	1618 <sfbpf_filter+0x620>
    1140:	b	1618 <sfbpf_filter+0x620>
    1144:	b	1618 <sfbpf_filter+0x620>
    1148:	b	1520 <sfbpf_filter+0x528>
    114c:	b	1510 <sfbpf_filter+0x518>
    1150:	b	1618 <sfbpf_filter+0x620>
    1154:	b	1618 <sfbpf_filter+0x620>
    1158:	b	1560 <sfbpf_filter+0x568>
    115c:	b	1618 <sfbpf_filter+0x620>
    1160:	b	1618 <sfbpf_filter+0x620>
    1164:	b	1618 <sfbpf_filter+0x620>
    1168:	b	1554 <sfbpf_filter+0x55c>
    116c:	b	1404 <sfbpf_filter+0x40c>
    1170:	b	1618 <sfbpf_filter+0x620>
    1174:	b	1618 <sfbpf_filter+0x620>
    1178:	b	13e8 <sfbpf_filter+0x3f0>
    117c:	b	1618 <sfbpf_filter+0x620>
    1180:	b	1618 <sfbpf_filter+0x620>
    1184:	b	1618 <sfbpf_filter+0x620>
    1188:	b	13d8 <sfbpf_filter+0x3e0>
    118c:	b	1618 <sfbpf_filter+0x620>
    1190:	b	1618 <sfbpf_filter+0x620>
    1194:	b	1618 <sfbpf_filter+0x620>
    1198:	b	1618 <sfbpf_filter+0x620>
    119c:	b	1618 <sfbpf_filter+0x620>
    11a0:	b	1618 <sfbpf_filter+0x620>
    11a4:	b	1618 <sfbpf_filter+0x620>
    11a8:	b	13cc <sfbpf_filter+0x3d4>
    11ac:	b	1618 <sfbpf_filter+0x620>
    11b0:	b	1618 <sfbpf_filter+0x620>
    11b4:	b	1618 <sfbpf_filter+0x620>
    11b8:	b	13b4 <sfbpf_filter+0x3bc>
    11bc:	b	139c <sfbpf_filter+0x3a4>
    11c0:	b	1618 <sfbpf_filter+0x620>
    11c4:	b	1618 <sfbpf_filter+0x620>
    11c8:	b	138c <sfbpf_filter+0x394>
    11cc:	b	1618 <sfbpf_filter+0x620>
    11d0:	b	1618 <sfbpf_filter+0x620>
    11d4:	b	1618 <sfbpf_filter+0x620>
    11d8:	b	1618 <sfbpf_filter+0x620>
    11dc:	b	1618 <sfbpf_filter+0x620>
    11e0:	b	1618 <sfbpf_filter+0x620>
    11e4:	b	1618 <sfbpf_filter+0x620>
    11e8:	b	1380 <sfbpf_filter+0x388>
    11ec:	b	1618 <sfbpf_filter+0x620>
    11f0:	b	1618 <sfbpf_filter+0x620>
    11f4:	b	1618 <sfbpf_filter+0x620>
    11f8:	b	1618 <sfbpf_filter+0x620>
    11fc:	b	1618 <sfbpf_filter+0x620>
    1200:	b	1618 <sfbpf_filter+0x620>
    1204:	b	1618 <sfbpf_filter+0x620>
    1208:	b	1370 <sfbpf_filter+0x378>
    120c:	b	1618 <sfbpf_filter+0x620>
    1210:	b	1618 <sfbpf_filter+0x620>
    1214:	b	1618 <sfbpf_filter+0x620>
    1218:	b	1618 <sfbpf_filter+0x620>
    121c:	b	1618 <sfbpf_filter+0x620>
    1220:	b	1618 <sfbpf_filter+0x620>
    1224:	b	1618 <sfbpf_filter+0x620>
    1228:	b	1364 <sfbpf_filter+0x36c>
    122c:	b	1618 <sfbpf_filter+0x620>
    1230:	b	1618 <sfbpf_filter+0x620>
    1234:	b	1618 <sfbpf_filter+0x620>
    1238:	b	134c <sfbpf_filter+0x354>
    123c:	b	1340 <sfbpf_filter+0x348>
    1240:	b	1618 <sfbpf_filter+0x620>
    1244:	b	1618 <sfbpf_filter+0x620>
    1248:	b	1358 <sfbpf_filter+0x360>
    124c:	b	1618 <sfbpf_filter+0x620>
    1250:	b	1618 <sfbpf_filter+0x620>
    1254:	b	1334 <sfbpf_filter+0x33c>
    1258:	b	1618 <sfbpf_filter+0x620>
    125c:	b	1618 <sfbpf_filter+0x620>
    1260:	b	1618 <sfbpf_filter+0x620>
    1264:	b	1618 <sfbpf_filter+0x620>
    1268:	b	1618 <sfbpf_filter+0x620>
    126c:	b	1618 <sfbpf_filter+0x620>
    1270:	b	1618 <sfbpf_filter+0x620>
    1274:	b	1618 <sfbpf_filter+0x620>
    1278:	b	1618 <sfbpf_filter+0x620>
    127c:	b	1618 <sfbpf_filter+0x620>
    1280:	b	1618 <sfbpf_filter+0x620>
    1284:	b	1618 <sfbpf_filter+0x620>
    1288:	b	1618 <sfbpf_filter+0x620>
    128c:	b	1618 <sfbpf_filter+0x620>
    1290:	b	1618 <sfbpf_filter+0x620>
    1294:	b	1618 <sfbpf_filter+0x620>
    1298:	b	1618 <sfbpf_filter+0x620>
    129c:	b	1618 <sfbpf_filter+0x620>
    12a0:	b	1618 <sfbpf_filter+0x620>
    12a4:	b	1618 <sfbpf_filter+0x620>
    12a8:	b	1618 <sfbpf_filter+0x620>
    12ac:	b	1618 <sfbpf_filter+0x620>
    12b0:	b	1618 <sfbpf_filter+0x620>
    12b4:	b	1618 <sfbpf_filter+0x620>
    12b8:	b	1618 <sfbpf_filter+0x620>
    12bc:	b	1618 <sfbpf_filter+0x620>
    12c0:	b	1618 <sfbpf_filter+0x620>
    12c4:	b	1618 <sfbpf_filter+0x620>
    12c8:	b	1618 <sfbpf_filter+0x620>
    12cc:	b	1618 <sfbpf_filter+0x620>
    12d0:	b	1618 <sfbpf_filter+0x620>
    12d4:	b	1618 <sfbpf_filter+0x620>
    12d8:	b	1618 <sfbpf_filter+0x620>
    12dc:	b	1618 <sfbpf_filter+0x620>
    12e0:	b	1618 <sfbpf_filter+0x620>
    12e4:	b	1618 <sfbpf_filter+0x620>
    12e8:	b	1618 <sfbpf_filter+0x620>
    12ec:	b	1618 <sfbpf_filter+0x620>
    12f0:	b	1618 <sfbpf_filter+0x620>
    12f4:	b	1618 <sfbpf_filter+0x620>
    12f8:	b	1618 <sfbpf_filter+0x620>
    12fc:	b	1320 <sfbpf_filter+0x328>
    1300:	cmp	r4, #0
    1304:	bne	160c <sfbpf_filter+0x614>
    1308:	mov	r0, r4
    130c:	add	sp, sp, #64	; 0x40
    1310:	ldrd	r4, [sp]
    1314:	ldr	r6, [sp, #8]
    1318:	add	sp, sp, #12
    131c:	pop	{pc}		; (ldr pc, [sp], #4)
    1320:	ldr	ip, [ip, #12]
    1324:	cmp	ip, r3
    1328:	bcc	15f8 <sfbpf_filter+0x600>
    132c:	mov	r0, #0
    1330:	b	130c <sfbpf_filter+0x314>
    1334:	mov	ip, r5
    1338:	mov	r0, r4
    133c:	b	1024 <sfbpf_filter+0x2c>
    1340:	mov	ip, r5
    1344:	mov	r4, r2
    1348:	b	1024 <sfbpf_filter+0x2c>
    134c:	mov	ip, r5
    1350:	mov	r0, r2
    1354:	b	1024 <sfbpf_filter+0x2c>
    1358:	rsb	r0, r0, #0
    135c:	mov	ip, r5
    1360:	b	1024 <sfbpf_filter+0x2c>
    1364:	lsr	r0, r0, r4
    1368:	mov	ip, r5
    136c:	b	1024 <sfbpf_filter+0x2c>
    1370:	ldr	lr, [ip, #12]
    1374:	mov	ip, r5
    1378:	lsr	r0, r0, lr
    137c:	b	1024 <sfbpf_filter+0x2c>
    1380:	lsl	r0, r0, r4
    1384:	mov	ip, r5
    1388:	b	1024 <sfbpf_filter+0x2c>
    138c:	ldr	lr, [ip, #12]
    1390:	mov	ip, r5
    1394:	lsl	r0, r0, lr
    1398:	b	1024 <sfbpf_filter+0x2c>
    139c:	ldr	lr, [ip, #12]
    13a0:	add	r4, sp, #64	; 0x40
    13a4:	mov	ip, r5
    13a8:	add	lr, r4, lr, lsl #2
    13ac:	ldr	r4, [lr, #-64]	; 0xffffffc0
    13b0:	b	1024 <sfbpf_filter+0x2c>
    13b4:	ldr	r0, [ip, #12]
    13b8:	add	lr, sp, #64	; 0x40
    13bc:	mov	ip, r5
    13c0:	add	r0, lr, r0, lsl #2
    13c4:	ldr	r0, [r0, #-64]	; 0xffffffc0
    13c8:	b	1024 <sfbpf_filter+0x2c>
    13cc:	and	r0, r0, r4
    13d0:	mov	ip, r5
    13d4:	b	1024 <sfbpf_filter+0x2c>
    13d8:	ldr	lr, [ip, #12]
    13dc:	mov	ip, r5
    13e0:	and	r0, r0, lr
    13e4:	b	1024 <sfbpf_filter+0x2c>
    13e8:	ldr	r0, [ip, #12]
    13ec:	add	r0, r4, r0
    13f0:	cmp	r0, r3
    13f4:	bcs	132c <sfbpf_filter+0x334>
    13f8:	ldrb	r0, [r1, r0]
    13fc:	mov	ip, r5
    1400:	b	1024 <sfbpf_filter+0x2c>
    1404:	tst	r0, r4
    1408:	bne	14c4 <sfbpf_filter+0x4cc>
    140c:	ldrb	ip, [ip, #11]
    1410:	lsl	ip, ip, #3
    1414:	add	ip, r5, ip
    1418:	b	1024 <sfbpf_filter+0x2c>
    141c:	ldr	lr, [ip, #12]
    1420:	mov	ip, r5
    1424:	mul	r0, lr, r0
    1428:	b	1024 <sfbpf_filter+0x2c>
    142c:	ldr	r0, [ip, #12]
    1430:	add	ip, r0, #4
    1434:	cmp	ip, r3
    1438:	bhi	132c <sfbpf_filter+0x334>
    143c:	ldr	r0, [r1, r0]
    1440:	mov	ip, r5
    1444:	rev	r0, r0
    1448:	b	1024 <sfbpf_filter+0x2c>
    144c:	ldr	r0, [ip, #12]
    1450:	b	130c <sfbpf_filter+0x314>
    1454:	ldr	ip, [ip, #12]
    1458:	add	ip, r5, ip, lsl #3
    145c:	b	1024 <sfbpf_filter+0x2c>
    1460:	ldr	lr, [ip, #12]
    1464:	mov	ip, r5
    1468:	add	r0, r0, lr
    146c:	b	1024 <sfbpf_filter+0x2c>
    1470:	ldr	lr, [ip, #12]
    1474:	mov	ip, r5
    1478:	add	r5, sp, #64	; 0x40
    147c:	add	lr, r5, lr, lsl #2
    1480:	str	r4, [lr, #-64]	; 0xffffffc0
    1484:	b	1024 <sfbpf_filter+0x2c>
    1488:	ldr	lr, [ip, #12]
    148c:	mov	ip, r5
    1490:	add	r5, sp, #64	; 0x40
    1494:	add	lr, r5, lr, lsl #2
    1498:	str	r0, [lr, #-64]	; 0xffffffc0
    149c:	b	1024 <sfbpf_filter+0x2c>
    14a0:	ldr	r4, [ip, #12]
    14a4:	mov	ip, r5
    14a8:	b	1024 <sfbpf_filter+0x2c>
    14ac:	ldr	r0, [ip, #12]
    14b0:	mov	ip, r5
    14b4:	b	1024 <sfbpf_filter+0x2c>
    14b8:	ldr	lr, [ip, #12]
    14bc:	cmp	lr, r0
    14c0:	bne	140c <sfbpf_filter+0x414>
    14c4:	ldrb	ip, [ip, #10]
    14c8:	lsl	ip, ip, #3
    14cc:	b	1414 <sfbpf_filter+0x41c>
    14d0:	ldr	lr, [ip, #12]
    14d4:	mov	ip, r5
    14d8:	sub	r0, r0, lr
    14dc:	b	1024 <sfbpf_filter+0x2c>
    14e0:	add	r0, r0, r4
    14e4:	mov	ip, r5
    14e8:	b	1024 <sfbpf_filter+0x2c>
    14ec:	mov	ip, r5
    14f0:	mov	r4, r0
    14f4:	b	1024 <sfbpf_filter+0x2c>
    14f8:	cmp	r0, r4
    14fc:	bne	140c <sfbpf_filter+0x414>
    1500:	b	14c4 <sfbpf_filter+0x4cc>
    1504:	sub	r0, r0, r4
    1508:	mov	ip, r5
    150c:	b	1024 <sfbpf_filter+0x2c>
    1510:	ldr	lr, [ip, #12]
    1514:	tst	r0, lr
    1518:	beq	140c <sfbpf_filter+0x414>
    151c:	b	14c4 <sfbpf_filter+0x4cc>
    1520:	ldr	lr, [ip, #12]
    1524:	mov	ip, r5
    1528:	orr	r0, r0, lr
    152c:	b	1024 <sfbpf_filter+0x2c>
    1530:	ldr	r0, [ip, #12]
    1534:	add	r0, r4, r0
    1538:	add	ip, r0, #4
    153c:	cmp	ip, r3
    1540:	bhi	132c <sfbpf_filter+0x334>
    1544:	b	143c <sfbpf_filter+0x444>
    1548:	cmp	r0, r4
    154c:	bcc	140c <sfbpf_filter+0x414>
    1550:	b	14c4 <sfbpf_filter+0x4cc>
    1554:	orr	r0, r0, r4
    1558:	mov	ip, r5
    155c:	b	1024 <sfbpf_filter+0x2c>
    1560:	ldr	r0, [ip, #12]
    1564:	add	r0, r4, r0
    1568:	add	ip, r0, #2
    156c:	cmp	ip, r3
    1570:	bhi	132c <sfbpf_filter+0x334>
    1574:	add	r6, r1, r0
    1578:	ldrb	lr, [r1, r0]
    157c:	mov	ip, r5
    1580:	ldrb	r0, [r6, #1]
    1584:	orr	r0, r0, lr, lsl #8
    1588:	b	1024 <sfbpf_filter+0x2c>
    158c:	cmp	r0, r4
    1590:	bls	140c <sfbpf_filter+0x414>
    1594:	b	14c4 <sfbpf_filter+0x4cc>
    1598:	ldr	lr, [ip, #12]
    159c:	mov	ip, r5
    15a0:	udiv	r0, r0, lr
    15a4:	b	1024 <sfbpf_filter+0x2c>
    15a8:	ldr	r0, [ip, #12]
    15ac:	cmp	r0, r3
    15b0:	bcs	132c <sfbpf_filter+0x334>
    15b4:	b	13f8 <sfbpf_filter+0x400>
    15b8:	ldr	lr, [ip, #12]
    15bc:	cmp	lr, r0
    15c0:	bhi	140c <sfbpf_filter+0x414>
    15c4:	b	14c4 <sfbpf_filter+0x4cc>
    15c8:	ldr	r0, [ip, #12]
    15cc:	add	ip, r0, #2
    15d0:	cmp	ip, r3
    15d4:	bhi	132c <sfbpf_filter+0x334>
    15d8:	b	1574 <sfbpf_filter+0x57c>
    15dc:	ldr	lr, [ip, #12]
    15e0:	cmp	lr, r0
    15e4:	bcs	140c <sfbpf_filter+0x414>
    15e8:	b	14c4 <sfbpf_filter+0x4cc>
    15ec:	mul	r0, r4, r0
    15f0:	mov	ip, r5
    15f4:	b	1024 <sfbpf_filter+0x2c>
    15f8:	ldrb	r4, [r1, ip]
    15fc:	mov	ip, r5
    1600:	lsl	r4, r4, #2
    1604:	and	r4, r4, #60	; 0x3c
    1608:	b	1024 <sfbpf_filter+0x2c>
    160c:	udiv	r0, r0, r4
    1610:	mov	ip, r5
    1614:	b	1024 <sfbpf_filter+0x2c>
    1618:	bl	ebc <abort@plt>

0000161c <sfbpf_validate>:
    161c:	cmp	r1, #0
    1620:	ble	17b4 <sfbpf_validate+0x198>
    1624:	mov	ip, #0
    1628:	push	{lr}		; (str lr, [sp, #-4]!)
    162c:	mov	lr, r0
    1630:	ldrh	r2, [lr]
    1634:	and	r3, r2, #7
    1638:	sub	r3, r3, #2
    163c:	cmp	r3, #5
    1640:	addls	pc, pc, r3, lsl #2
    1644:	b	1700 <sfbpf_validate+0xe4>
    1648:	b	1728 <sfbpf_validate+0x10c>
    164c:	b	1728 <sfbpf_validate+0x10c>
    1650:	b	1660 <sfbpf_validate+0x44>
    1654:	b	16d0 <sfbpf_validate+0xb4>
    1658:	b	16a0 <sfbpf_validate+0x84>
    165c:	b	16a0 <sfbpf_validate+0x84>
    1660:	and	r3, r2, #240	; 0xf0
    1664:	cmp	r3, #64	; 0x40
    1668:	beq	16a0 <sfbpf_validate+0x84>
    166c:	bhi	1788 <sfbpf_validate+0x16c>
    1670:	cmp	r3, #16
    1674:	beq	16a0 <sfbpf_validate+0x84>
    1678:	bls	177c <sfbpf_validate+0x160>
    167c:	cmp	r3, #32
    1680:	beq	16a0 <sfbpf_validate+0x84>
    1684:	cmp	r3, #48	; 0x30
    1688:	bne	1740 <sfbpf_validate+0x124>
    168c:	tst	r2, #24
    1690:	bne	16a0 <sfbpf_validate+0x84>
    1694:	ldr	r3, [lr, #4]
    1698:	cmp	r3, #0
    169c:	beq	1740 <sfbpf_validate+0x124>
    16a0:	add	r3, ip, #1
    16a4:	cmp	r1, r3
    16a8:	mov	ip, r3
    16ac:	add	lr, lr, #8
    16b0:	bhi	1630 <sfbpf_validate+0x14>
    16b4:	add	r1, r0, r1, lsl #3
    16b8:	ldrh	r0, [r1, #-8]
    16bc:	and	r0, r0, #7
    16c0:	sub	r0, r0, #6
    16c4:	clz	r0, r0
    16c8:	lsr	r0, r0, #5
    16cc:	b	1744 <sfbpf_validate+0x128>
    16d0:	and	r2, r2, #240	; 0xf0
    16d4:	add	r3, ip, #1
    16d8:	cmp	r2, #32
    16dc:	beq	1758 <sfbpf_validate+0x13c>
    16e0:	bhi	1748 <sfbpf_validate+0x12c>
    16e4:	cmp	r2, #0
    16e8:	bne	1738 <sfbpf_validate+0x11c>
    16ec:	ldr	ip, [lr, #4]
    16f0:	add	ip, r3, ip
    16f4:	cmp	ip, r1
    16f8:	bcc	16a4 <sfbpf_validate+0x88>
    16fc:	b	1740 <sfbpf_validate+0x124>
    1700:	and	r2, r2, #224	; 0xe0
    1704:	cmp	r2, #64	; 0x40
    1708:	beq	16a0 <sfbpf_validate+0x84>
    170c:	bls	17bc <sfbpf_validate+0x1a0>
    1710:	cmp	r2, #128	; 0x80
    1714:	beq	16a0 <sfbpf_validate+0x84>
    1718:	cmp	r2, #160	; 0xa0
    171c:	beq	16a0 <sfbpf_validate+0x84>
    1720:	cmp	r2, #96	; 0x60
    1724:	bne	1740 <sfbpf_validate+0x124>
    1728:	ldr	r3, [lr, #4]
    172c:	cmp	r3, #15
    1730:	bls	16a0 <sfbpf_validate+0x84>
    1734:	b	1740 <sfbpf_validate+0x124>
    1738:	cmp	r2, #16
    173c:	beq	1758 <sfbpf_validate+0x13c>
    1740:	mov	r0, #0
    1744:	pop	{pc}		; (ldr pc, [sp], #4)
    1748:	cmp	r2, #48	; 0x30
    174c:	beq	1758 <sfbpf_validate+0x13c>
    1750:	cmp	r2, #64	; 0x40
    1754:	bne	1740 <sfbpf_validate+0x124>
    1758:	ldrb	r2, [lr, #2]
    175c:	add	r2, r2, r3
    1760:	cmp	r2, r1
    1764:	bcs	1740 <sfbpf_validate+0x124>
    1768:	ldrb	r2, [lr, #3]
    176c:	add	r2, r2, r3
    1770:	cmp	r2, r1
    1774:	bcc	16a4 <sfbpf_validate+0x88>
    1778:	b	1740 <sfbpf_validate+0x124>
    177c:	cmp	r3, #0
    1780:	bne	1740 <sfbpf_validate+0x124>
    1784:	b	16a0 <sfbpf_validate+0x84>
    1788:	cmp	r3, #96	; 0x60
    178c:	beq	16a0 <sfbpf_validate+0x84>
    1790:	bls	17a8 <sfbpf_validate+0x18c>
    1794:	cmp	r3, #112	; 0x70
    1798:	beq	16a0 <sfbpf_validate+0x84>
    179c:	cmp	r3, #128	; 0x80
    17a0:	bne	1740 <sfbpf_validate+0x124>
    17a4:	b	16a0 <sfbpf_validate+0x84>
    17a8:	cmp	r3, #80	; 0x50
    17ac:	bne	1740 <sfbpf_validate+0x124>
    17b0:	b	16a0 <sfbpf_validate+0x84>
    17b4:	mov	r0, #0
    17b8:	bx	lr
    17bc:	cmp	r2, #0
    17c0:	beq	16a0 <sfbpf_validate+0x84>
    17c4:	cmp	r2, #32
    17c8:	bne	1740 <sfbpf_validate+0x124>
    17cc:	b	16a0 <sfbpf_validate+0x84>

000017d0 <sfbpf_print>:
    17d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    17d4:	mov	r5, r0
    17d8:	ldr	r0, [pc, #2124]	; 202c <sfbpf_print+0x85c>
    17dc:	strd	r6, [sp, #8]
    17e0:	mov	r6, r1
    17e4:	strd	r8, [sp, #16]
    17e8:	strd	sl, [sp, #24]
    17ec:	str	lr, [sp, #32]
    17f0:	sub	sp, sp, #12
    17f4:	add	r0, pc, r0
    17f8:	bl	db4 <puts@plt>
    17fc:	ldr	r3, [r5]
    1800:	cmp	r3, #0
    1804:	beq	1944 <sfbpf_print+0x174>
    1808:	ldr	r7, [pc, #2080]	; 2030 <sfbpf_print+0x860>
    180c:	mov	r4, #0
    1810:	ldr	r8, [pc, #2076]	; 2034 <sfbpf_print+0x864>
    1814:	ldr	r3, [pc, #2076]	; 2038 <sfbpf_print+0x868>
    1818:	add	r7, pc, r7
    181c:	add	r8, pc, r8
    1820:	add	r3, pc, r3
    1824:	str	r3, [sp, #4]
    1828:	ldr	r9, [r5, #4]
    182c:	mov	r1, r4
    1830:	lsl	fp, r4, #3
    1834:	mov	r0, r7
    1838:	add	r4, r4, #1
    183c:	bl	d0c <printf@plt>
    1840:	cmp	r6, #0
    1844:	add	sl, r9, fp
    1848:	beq	1b7c <sfbpf_print+0x3ac>
    184c:	ldr	r3, [pc, #2024]	; 203c <sfbpf_print+0x86c>
    1850:	ldrh	r0, [r9, fp]
    1854:	add	r3, pc, r3
    1858:	ldr	r1, [r3, #4]
    185c:	and	r0, r0, #7
    1860:	cmp	r1, #0
    1864:	beq	1890 <sfbpf_print+0xc0>
    1868:	ldr	ip, [r3]
    186c:	cmp	r0, ip
    1870:	bne	1884 <sfbpf_print+0xb4>
    1874:	b	1890 <sfbpf_print+0xc0>
    1878:	ldr	ip, [r3, #8]!
    187c:	cmp	r0, ip
    1880:	beq	1890 <sfbpf_print+0xc0>
    1884:	ldr	r1, [r3, #12]
    1888:	cmp	r1, #0
    188c:	bne	1878 <sfbpf_print+0xa8>
    1890:	ldr	r0, [pc, #1960]	; 2040 <sfbpf_print+0x870>
    1894:	add	r0, pc, r0
    1898:	bl	d0c <printf@plt>
    189c:	ldrh	r3, [r9, fp]
    18a0:	and	r2, r3, #7
    18a4:	cmp	r2, #7
    18a8:	addls	pc, pc, r2, lsl #2
    18ac:	b	1920 <sfbpf_print+0x150>
    18b0:	b	1ae4 <sfbpf_print+0x314>
    18b4:	b	1ae4 <sfbpf_print+0x314>
    18b8:	b	1920 <sfbpf_print+0x150>
    18bc:	b	1920 <sfbpf_print+0x150>
    18c0:	b	1a4c <sfbpf_print+0x27c>
    18c4:	b	19b4 <sfbpf_print+0x1e4>
    18c8:	b	1960 <sfbpf_print+0x190>
    18cc:	b	18d0 <sfbpf_print+0x100>
    18d0:	ldr	r2, [pc, #1900]	; 2044 <sfbpf_print+0x874>
    18d4:	and	r3, r3, #248	; 0xf8
    18d8:	add	r2, pc, r2
    18dc:	ldr	r1, [r2, #348]	; 0x15c
    18e0:	cmp	r1, #0
    18e4:	beq	1914 <sfbpf_print+0x144>
    18e8:	ldr	r0, [r2, #344]	; 0x158
    18ec:	cmp	r3, r0
    18f0:	beq	1914 <sfbpf_print+0x144>
    18f4:	add	r2, r2, #344	; 0x158
    18f8:	b	1908 <sfbpf_print+0x138>
    18fc:	ldr	r0, [r2, #8]!
    1900:	cmp	r3, r0
    1904:	beq	1914 <sfbpf_print+0x144>
    1908:	ldr	r1, [r2, #12]
    190c:	cmp	r1, #0
    1910:	bne	18fc <sfbpf_print+0x12c>
    1914:	ldr	r0, [pc, #1836]	; 2048 <sfbpf_print+0x878>
    1918:	add	r0, pc, r0
    191c:	bl	d0c <printf@plt>
    1920:	ldr	r0, [pc, #1828]	; 204c <sfbpf_print+0x87c>
    1924:	ldrb	r2, [sl, #3]
    1928:	ldrb	r1, [sl, #2]
    192c:	add	r0, pc, r0
    1930:	ldr	r3, [sl, #4]
    1934:	bl	d0c <printf@plt>
    1938:	ldr	r3, [r5]
    193c:	cmp	r3, r4
    1940:	bhi	1828 <sfbpf_print+0x58>
    1944:	add	sp, sp, #12
    1948:	ldrd	r4, [sp]
    194c:	ldrd	r6, [sp, #8]
    1950:	ldrd	r8, [sp, #16]
    1954:	ldrd	sl, [sp, #24]
    1958:	add	sp, sp, #32
    195c:	pop	{pc}		; (ldr pc, [sp], #4)
    1960:	ldr	r2, [pc, #1768]	; 2050 <sfbpf_print+0x880>
    1964:	and	r3, r3, #24
    1968:	add	r2, pc, r2
    196c:	ldr	r1, [r2, #316]	; 0x13c
    1970:	cmp	r1, #0
    1974:	beq	19a4 <sfbpf_print+0x1d4>
    1978:	ldr	r0, [r2, #312]	; 0x138
    197c:	cmp	r3, r0
    1980:	beq	19a4 <sfbpf_print+0x1d4>
    1984:	add	r2, r2, #312	; 0x138
    1988:	b	1998 <sfbpf_print+0x1c8>
    198c:	ldr	r0, [r2, #8]!
    1990:	cmp	r3, r0
    1994:	beq	19a4 <sfbpf_print+0x1d4>
    1998:	ldr	r1, [r2, #12]
    199c:	cmp	r1, #0
    19a0:	bne	198c <sfbpf_print+0x1bc>
    19a4:	ldr	r0, [pc, #1704]	; 2054 <sfbpf_print+0x884>
    19a8:	add	r0, pc, r0
    19ac:	bl	d0c <printf@plt>
    19b0:	b	1920 <sfbpf_print+0x150>
    19b4:	ldr	r2, [pc, #1692]	; 2058 <sfbpf_print+0x888>
    19b8:	and	ip, r3, #240	; 0xf0
    19bc:	add	r2, pc, r2
    19c0:	ldr	r1, [r2, #268]	; 0x10c
    19c4:	cmp	r1, #0
    19c8:	beq	19f8 <sfbpf_print+0x228>
    19cc:	ldr	r0, [r2, #264]	; 0x108
    19d0:	cmp	ip, r0
    19d4:	beq	19f8 <sfbpf_print+0x228>
    19d8:	add	r2, r2, #264	; 0x108
    19dc:	b	19ec <sfbpf_print+0x21c>
    19e0:	ldr	r0, [r2, #8]!
    19e4:	cmp	ip, r0
    19e8:	beq	19f8 <sfbpf_print+0x228>
    19ec:	ldr	r1, [r2, #12]
    19f0:	cmp	r1, #0
    19f4:	bne	19e0 <sfbpf_print+0x210>
    19f8:	ldr	r0, [pc, #1628]	; 205c <sfbpf_print+0x88c>
    19fc:	and	r3, r3, #8
    1a00:	add	r0, pc, r0
    1a04:	ldr	r2, [r0, #244]	; 0xf4
    1a08:	cmp	r2, #0
    1a0c:	beq	1a3c <sfbpf_print+0x26c>
    1a10:	ldr	ip, [r0, #240]	; 0xf0
    1a14:	cmp	r3, ip
    1a18:	beq	1a3c <sfbpf_print+0x26c>
    1a1c:	add	r0, r0, #240	; 0xf0
    1a20:	b	1a30 <sfbpf_print+0x260>
    1a24:	ldr	ip, [r0, #8]!
    1a28:	cmp	r3, ip
    1a2c:	beq	1a3c <sfbpf_print+0x26c>
    1a30:	ldr	r2, [r0, #12]
    1a34:	cmp	r2, #0
    1a38:	bne	1a24 <sfbpf_print+0x254>
    1a3c:	ldr	r0, [pc, #1564]	; 2060 <sfbpf_print+0x890>
    1a40:	add	r0, pc, r0
    1a44:	bl	d0c <printf@plt>
    1a48:	b	1920 <sfbpf_print+0x150>
    1a4c:	ldr	r2, [pc, #1552]	; 2064 <sfbpf_print+0x894>
    1a50:	and	ip, r3, #240	; 0xf0
    1a54:	add	r2, pc, r2
    1a58:	ldr	r1, [r2, #164]	; 0xa4
    1a5c:	cmp	r1, #0
    1a60:	beq	1a90 <sfbpf_print+0x2c0>
    1a64:	ldr	r0, [r2, #160]	; 0xa0
    1a68:	cmp	ip, r0
    1a6c:	beq	1a90 <sfbpf_print+0x2c0>
    1a70:	add	r2, r2, #160	; 0xa0
    1a74:	b	1a84 <sfbpf_print+0x2b4>
    1a78:	ldr	r0, [r2, #8]!
    1a7c:	cmp	ip, r0
    1a80:	beq	1a90 <sfbpf_print+0x2c0>
    1a84:	ldr	r1, [r2, #12]
    1a88:	cmp	r1, #0
    1a8c:	bne	1a78 <sfbpf_print+0x2a8>
    1a90:	ldr	r0, [pc, #1488]	; 2068 <sfbpf_print+0x898>
    1a94:	and	r3, r3, #8
    1a98:	add	r0, pc, r0
    1a9c:	ldr	r2, [r0, #244]	; 0xf4
    1aa0:	cmp	r2, #0
    1aa4:	beq	1ad4 <sfbpf_print+0x304>
    1aa8:	ldr	ip, [r0, #240]	; 0xf0
    1aac:	cmp	r3, ip
    1ab0:	beq	1ad4 <sfbpf_print+0x304>
    1ab4:	add	r0, r0, #240	; 0xf0
    1ab8:	b	1ac8 <sfbpf_print+0x2f8>
    1abc:	ldr	ip, [r0, #8]!
    1ac0:	cmp	r3, ip
    1ac4:	beq	1ad4 <sfbpf_print+0x304>
    1ac8:	ldr	r2, [r0, #12]
    1acc:	cmp	r2, #0
    1ad0:	bne	1abc <sfbpf_print+0x2ec>
    1ad4:	ldr	r0, [pc, #1424]	; 206c <sfbpf_print+0x89c>
    1ad8:	add	r0, pc, r0
    1adc:	bl	d0c <printf@plt>
    1ae0:	b	1920 <sfbpf_print+0x150>
    1ae4:	ldr	r2, [pc, #1412]	; 2070 <sfbpf_print+0x8a0>
    1ae8:	and	ip, r3, #24
    1aec:	add	r2, pc, r2
    1af0:	ldr	r1, [r2, #76]	; 0x4c
    1af4:	cmp	r1, #0
    1af8:	beq	1b28 <sfbpf_print+0x358>
    1afc:	ldr	r0, [r2, #72]	; 0x48
    1b00:	cmp	ip, r0
    1b04:	beq	1b28 <sfbpf_print+0x358>
    1b08:	add	r2, r2, #72	; 0x48
    1b0c:	b	1b1c <sfbpf_print+0x34c>
    1b10:	ldr	r0, [r2, #8]!
    1b14:	cmp	ip, r0
    1b18:	beq	1b28 <sfbpf_print+0x358>
    1b1c:	ldr	r1, [r2, #12]
    1b20:	cmp	r1, #0
    1b24:	bne	1b10 <sfbpf_print+0x340>
    1b28:	ldr	r0, [pc, #1348]	; 2074 <sfbpf_print+0x8a4>
    1b2c:	and	r3, r3, #224	; 0xe0
    1b30:	add	r0, pc, r0
    1b34:	ldr	r2, [r0, #108]	; 0x6c
    1b38:	cmp	r2, #0
    1b3c:	beq	1b6c <sfbpf_print+0x39c>
    1b40:	ldr	ip, [r0, #104]	; 0x68
    1b44:	cmp	r3, ip
    1b48:	beq	1b6c <sfbpf_print+0x39c>
    1b4c:	add	r0, r0, #104	; 0x68
    1b50:	b	1b60 <sfbpf_print+0x390>
    1b54:	ldr	ip, [r0, #8]!
    1b58:	cmp	r3, ip
    1b5c:	beq	1b6c <sfbpf_print+0x39c>
    1b60:	ldr	r2, [r0, #12]
    1b64:	cmp	r2, #0
    1b68:	bne	1b54 <sfbpf_print+0x384>
    1b6c:	ldr	r0, [pc, #1284]	; 2078 <sfbpf_print+0x8a8>
    1b70:	add	r0, pc, r0
    1b74:	bl	d0c <printf@plt>
    1b78:	b	1920 <sfbpf_print+0x150>
    1b7c:	ldrh	r1, [r9, fp]
    1b80:	and	r3, r1, #7
    1b84:	sub	r3, r3, #1
    1b88:	cmp	r3, #6
    1b8c:	addls	pc, pc, r3, lsl #2
    1b90:	b	1e30 <sfbpf_print+0x660>
    1b94:	b	1cf8 <sfbpf_print+0x528>
    1b98:	b	1ce4 <sfbpf_print+0x514>
    1b9c:	b	1cd0 <sfbpf_print+0x500>
    1ba0:	b	1c68 <sfbpf_print+0x498>
    1ba4:	b	1bf8 <sfbpf_print+0x428>
    1ba8:	b	1bb0 <sfbpf_print+0x3e0>
    1bac:	b	1d3c <sfbpf_print+0x56c>
    1bb0:	ldr	r0, [pc, #1220]	; 207c <sfbpf_print+0x8ac>
    1bb4:	add	r0, pc, r0
    1bb8:	bl	d0c <printf@plt>
    1bbc:	ldrh	r3, [r9, fp]
    1bc0:	and	r3, r3, #24
    1bc4:	cmp	r3, #8
    1bc8:	beq	1ef8 <sfbpf_print+0x728>
    1bcc:	cmp	r3, #16
    1bd0:	beq	1eec <sfbpf_print+0x71c>
    1bd4:	cmp	r3, #0
    1bd8:	beq	1ed8 <sfbpf_print+0x708>
    1bdc:	ldr	r0, [pc, #1180]	; 2080 <sfbpf_print+0x8b0>
    1be0:	add	r0, pc, r0
    1be4:	bl	d0c <printf@plt>
    1be8:	ldr	r0, [pc, #1172]	; 2084 <sfbpf_print+0x8b4>
    1bec:	add	r0, pc, r0
    1bf0:	bl	db4 <puts@plt>
    1bf4:	b	1938 <sfbpf_print+0x168>
    1bf8:	and	r1, r1, #240	; 0xf0
    1bfc:	cmp	r1, #32
    1c00:	beq	1f64 <sfbpf_print+0x794>
    1c04:	bhi	1dd4 <sfbpf_print+0x604>
    1c08:	cmp	r1, #0
    1c0c:	beq	1f4c <sfbpf_print+0x77c>
    1c10:	cmp	r1, #16
    1c14:	bne	1dc8 <sfbpf_print+0x5f8>
    1c18:	ldr	r1, [pc, #1128]	; 2088 <sfbpf_print+0x8b8>
    1c1c:	add	r1, pc, r1
    1c20:	ldr	r0, [pc, #1124]	; 208c <sfbpf_print+0x8bc>
    1c24:	add	r0, pc, r0
    1c28:	bl	d0c <printf@plt>
    1c2c:	ldrh	r3, [r9, fp]
    1c30:	ands	r3, r3, #8
    1c34:	beq	1ec4 <sfbpf_print+0x6f4>
    1c38:	cmp	r3, #8
    1c3c:	bne	1e70 <sfbpf_print+0x6a0>
    1c40:	mov	r0, #88	; 0x58
    1c44:	bl	e38 <putchar@plt>
    1c48:	ldrb	r2, [sl, #3]
    1c4c:	ldrb	r1, [sl, #2]
    1c50:	ldr	r0, [pc, #1080]	; 2090 <sfbpf_print+0x8c0>
    1c54:	add	r2, r2, r4
    1c58:	add	r1, r1, r4
    1c5c:	add	r0, pc, r0
    1c60:	bl	d0c <printf@plt>
    1c64:	b	1938 <sfbpf_print+0x168>
    1c68:	and	r1, r1, #240	; 0xf0
    1c6c:	cmp	r1, #64	; 0x40
    1c70:	beq	1f70 <sfbpf_print+0x7a0>
    1c74:	bhi	1d7c <sfbpf_print+0x5ac>
    1c78:	cmp	r1, #16
    1c7c:	beq	1f04 <sfbpf_print+0x734>
    1c80:	bls	1d68 <sfbpf_print+0x598>
    1c84:	cmp	r1, #32
    1c88:	beq	1e8c <sfbpf_print+0x6bc>
    1c8c:	cmp	r1, #48	; 0x30
    1c90:	bne	1e08 <sfbpf_print+0x638>
    1c94:	ldr	r1, [pc, #1016]	; 2094 <sfbpf_print+0x8c4>
    1c98:	add	r1, pc, r1
    1c9c:	ldr	r0, [pc, #1012]	; 2098 <sfbpf_print+0x8c8>
    1ca0:	add	r0, pc, r0
    1ca4:	bl	d0c <printf@plt>
    1ca8:	ldrh	r3, [r9, fp]
    1cac:	ands	r3, r3, #8
    1cb0:	beq	1eb0 <sfbpf_print+0x6e0>
    1cb4:	cmp	r3, #8
    1cb8:	bne	1e60 <sfbpf_print+0x690>
    1cbc:	mov	r0, #88	; 0x58
    1cc0:	bl	e38 <putchar@plt>
    1cc4:	mov	r0, #10
    1cc8:	bl	e38 <putchar@plt>
    1ccc:	b	1938 <sfbpf_print+0x168>
    1cd0:	ldr	r0, [pc, #964]	; 209c <sfbpf_print+0x8cc>
    1cd4:	ldr	r1, [sl, #4]
    1cd8:	add	r0, pc, r0
    1cdc:	bl	d0c <printf@plt>
    1ce0:	b	1938 <sfbpf_print+0x168>
    1ce4:	ldr	r0, [pc, #948]	; 20a0 <sfbpf_print+0x8d0>
    1ce8:	ldr	r1, [sl, #4]
    1cec:	add	r0, pc, r0
    1cf0:	bl	d0c <printf@plt>
    1cf4:	b	1938 <sfbpf_print+0x168>
    1cf8:	ldr	r0, [pc, #932]	; 20a4 <sfbpf_print+0x8d4>
    1cfc:	add	r0, pc, r0
    1d00:	bl	d0c <printf@plt>
    1d04:	ldrh	r3, [r9, fp]
    1d08:	and	r3, r3, #224	; 0xe0
    1d0c:	cmp	r3, #96	; 0x60
    1d10:	beq	1f2c <sfbpf_print+0x75c>
    1d14:	bls	1e14 <sfbpf_print+0x644>
    1d18:	cmp	r3, #128	; 0x80
    1d1c:	beq	1f1c <sfbpf_print+0x74c>
    1d20:	cmp	r3, #160	; 0xa0
    1d24:	bne	1cc4 <sfbpf_print+0x4f4>
    1d28:	ldr	r0, [pc, #888]	; 20a8 <sfbpf_print+0x8d8>
    1d2c:	ldr	r1, [sl, #4]
    1d30:	add	r0, pc, r0
    1d34:	bl	d0c <printf@plt>
    1d38:	b	1cc4 <sfbpf_print+0x4f4>
    1d3c:	mov	r0, r8
    1d40:	bl	d0c <printf@plt>
    1d44:	ldrh	r3, [r9, fp]
    1d48:	ands	r3, r3, #248	; 0xf8
    1d4c:	beq	1ea4 <sfbpf_print+0x6d4>
    1d50:	cmp	r3, #128	; 0x80
    1d54:	bne	1e60 <sfbpf_print+0x690>
    1d58:	ldr	r0, [pc, #844]	; 20ac <sfbpf_print+0x8dc>
    1d5c:	add	r0, pc, r0
    1d60:	bl	d0c <printf@plt>
    1d64:	b	1cc4 <sfbpf_print+0x4f4>
    1d68:	cmp	r1, #0
    1d6c:	bne	1da8 <sfbpf_print+0x5d8>
    1d70:	ldr	r1, [pc, #824]	; 20b0 <sfbpf_print+0x8e0>
    1d74:	add	r1, pc, r1
    1d78:	b	1c9c <sfbpf_print+0x4cc>
    1d7c:	cmp	r1, #96	; 0x60
    1d80:	beq	1f10 <sfbpf_print+0x740>
    1d84:	bls	1db4 <sfbpf_print+0x5e4>
    1d88:	cmp	r1, #112	; 0x70
    1d8c:	beq	1e80 <sfbpf_print+0x6b0>
    1d90:	cmp	r1, #128	; 0x80
    1d94:	bne	1f40 <sfbpf_print+0x770>
    1d98:	ldr	r0, [pc, #788]	; 20b4 <sfbpf_print+0x8e4>
    1d9c:	add	r0, pc, r0
    1da0:	bl	db4 <puts@plt>
    1da4:	b	1938 <sfbpf_print+0x168>
    1da8:	ldr	r1, [pc, #776]	; 20b8 <sfbpf_print+0x8e8>
    1dac:	add	r1, pc, r1
    1db0:	b	1c9c <sfbpf_print+0x4cc>
    1db4:	cmp	r1, #80	; 0x50
    1db8:	bne	1df0 <sfbpf_print+0x620>
    1dbc:	ldr	r1, [pc, #760]	; 20bc <sfbpf_print+0x8ec>
    1dc0:	add	r1, pc, r1
    1dc4:	b	1c9c <sfbpf_print+0x4cc>
    1dc8:	ldr	r1, [pc, #752]	; 20c0 <sfbpf_print+0x8f0>
    1dcc:	add	r1, pc, r1
    1dd0:	b	1c20 <sfbpf_print+0x450>
    1dd4:	cmp	r1, #48	; 0x30
    1dd8:	beq	1e98 <sfbpf_print+0x6c8>
    1ddc:	cmp	r1, #64	; 0x40
    1de0:	bne	1dfc <sfbpf_print+0x62c>
    1de4:	ldr	r1, [pc, #728]	; 20c4 <sfbpf_print+0x8f4>
    1de8:	add	r1, pc, r1
    1dec:	b	1c20 <sfbpf_print+0x450>
    1df0:	ldr	r1, [pc, #720]	; 20c8 <sfbpf_print+0x8f8>
    1df4:	add	r1, pc, r1
    1df8:	b	1c9c <sfbpf_print+0x4cc>
    1dfc:	ldr	r1, [pc, #712]	; 20cc <sfbpf_print+0x8fc>
    1e00:	add	r1, pc, r1
    1e04:	b	1c20 <sfbpf_print+0x450>
    1e08:	ldr	r1, [pc, #704]	; 20d0 <sfbpf_print+0x900>
    1e0c:	add	r1, pc, r1
    1e10:	b	1c9c <sfbpf_print+0x4cc>
    1e14:	cmp	r3, #0
    1e18:	bne	1cc4 <sfbpf_print+0x4f4>
    1e1c:	ldr	r0, [pc, #688]	; 20d4 <sfbpf_print+0x904>
    1e20:	ldr	r1, [sl, #4]
    1e24:	add	r0, pc, r0
    1e28:	bl	d0c <printf@plt>
    1e2c:	b	1cc4 <sfbpf_print+0x4f4>
    1e30:	ldr	r0, [pc, #672]	; 20d8 <sfbpf_print+0x908>
    1e34:	add	r0, pc, r0
    1e38:	bl	d0c <printf@plt>
    1e3c:	ldrh	r3, [r9, fp]
    1e40:	and	r2, r3, #224	; 0xe0
    1e44:	cmp	r2, #64	; 0x40
    1e48:	beq	1f7c <sfbpf_print+0x7ac>
    1e4c:	bhi	1fb0 <sfbpf_print+0x7e0>
    1e50:	cmp	r2, #0
    1e54:	beq	1fe4 <sfbpf_print+0x814>
    1e58:	cmp	r2, #32
    1e5c:	beq	1ff8 <sfbpf_print+0x828>
    1e60:	ldr	r0, [pc, #628]	; 20dc <sfbpf_print+0x90c>
    1e64:	add	r0, pc, r0
    1e68:	bl	d0c <printf@plt>
    1e6c:	b	1cc4 <sfbpf_print+0x4f4>
    1e70:	ldr	r0, [pc, #616]	; 20e0 <sfbpf_print+0x910>
    1e74:	add	r0, pc, r0
    1e78:	bl	d0c <printf@plt>
    1e7c:	b	1c48 <sfbpf_print+0x478>
    1e80:	ldr	r1, [pc, #604]	; 20e4 <sfbpf_print+0x914>
    1e84:	add	r1, pc, r1
    1e88:	b	1c9c <sfbpf_print+0x4cc>
    1e8c:	ldr	r1, [pc, #596]	; 20e8 <sfbpf_print+0x918>
    1e90:	add	r1, pc, r1
    1e94:	b	1c9c <sfbpf_print+0x4cc>
    1e98:	ldr	r1, [pc, #588]	; 20ec <sfbpf_print+0x91c>
    1e9c:	add	r1, pc, r1
    1ea0:	b	1c20 <sfbpf_print+0x450>
    1ea4:	ldr	r0, [sp, #4]
    1ea8:	bl	d0c <printf@plt>
    1eac:	b	1cc4 <sfbpf_print+0x4f4>
    1eb0:	ldr	r0, [pc, #568]	; 20f0 <sfbpf_print+0x920>
    1eb4:	ldr	r1, [sl, #4]
    1eb8:	add	r0, pc, r0
    1ebc:	bl	d0c <printf@plt>
    1ec0:	b	1cc4 <sfbpf_print+0x4f4>
    1ec4:	ldr	r0, [pc, #552]	; 20f4 <sfbpf_print+0x924>
    1ec8:	ldr	r1, [sl, #4]
    1ecc:	add	r0, pc, r0
    1ed0:	bl	d0c <printf@plt>
    1ed4:	b	1c48 <sfbpf_print+0x478>
    1ed8:	ldr	r0, [pc, #536]	; 20f8 <sfbpf_print+0x928>
    1edc:	ldr	r1, [sl, #4]
    1ee0:	add	r0, pc, r0
    1ee4:	bl	d0c <printf@plt>
    1ee8:	b	1be8 <sfbpf_print+0x418>
    1eec:	mov	r0, #65	; 0x41
    1ef0:	bl	e38 <putchar@plt>
    1ef4:	b	1be8 <sfbpf_print+0x418>
    1ef8:	mov	r0, #88	; 0x58
    1efc:	bl	e38 <putchar@plt>
    1f00:	b	1be8 <sfbpf_print+0x418>
    1f04:	ldr	r1, [pc, #496]	; 20fc <sfbpf_print+0x92c>
    1f08:	add	r1, pc, r1
    1f0c:	b	1c9c <sfbpf_print+0x4cc>
    1f10:	ldr	r1, [pc, #488]	; 2100 <sfbpf_print+0x930>
    1f14:	add	r1, pc, r1
    1f18:	b	1c9c <sfbpf_print+0x4cc>
    1f1c:	ldr	r0, [pc, #480]	; 2104 <sfbpf_print+0x934>
    1f20:	add	r0, pc, r0
    1f24:	bl	d0c <printf@plt>
    1f28:	b	1cc4 <sfbpf_print+0x4f4>
    1f2c:	ldr	r0, [pc, #468]	; 2108 <sfbpf_print+0x938>
    1f30:	ldr	r1, [sl, #4]
    1f34:	add	r0, pc, r0
    1f38:	bl	d0c <printf@plt>
    1f3c:	b	1cc4 <sfbpf_print+0x4f4>
    1f40:	ldr	r1, [pc, #452]	; 210c <sfbpf_print+0x93c>
    1f44:	add	r1, pc, r1
    1f48:	b	1c9c <sfbpf_print+0x4cc>
    1f4c:	ldr	r0, [pc, #444]	; 2110 <sfbpf_print+0x940>
    1f50:	ldr	r1, [sl, #4]
    1f54:	add	r0, pc, r0
    1f58:	add	r1, r4, r1
    1f5c:	bl	d0c <printf@plt>
    1f60:	b	1938 <sfbpf_print+0x168>
    1f64:	ldr	r1, [pc, #424]	; 2114 <sfbpf_print+0x944>
    1f68:	add	r1, pc, r1
    1f6c:	b	1c20 <sfbpf_print+0x450>
    1f70:	ldr	r1, [pc, #416]	; 2118 <sfbpf_print+0x948>
    1f74:	add	r1, pc, r1
    1f78:	b	1c9c <sfbpf_print+0x4cc>
    1f7c:	ands	r3, r3, #24
    1f80:	ldr	r1, [sl, #4]
    1f84:	moveq	r2, #4
    1f88:	beq	1fa0 <sfbpf_print+0x7d0>
    1f8c:	cmp	r3, #8
    1f90:	subne	r2, r3, #16
    1f94:	moveq	r2, #2
    1f98:	clzne	r2, r2
    1f9c:	lsrne	r2, r2, #5
    1fa0:	ldr	r0, [pc, #372]	; 211c <sfbpf_print+0x94c>
    1fa4:	add	r0, pc, r0
    1fa8:	bl	d0c <printf@plt>
    1fac:	b	1cc4 <sfbpf_print+0x4f4>
    1fb0:	cmp	r2, #96	; 0x60
    1fb4:	beq	1fd0 <sfbpf_print+0x800>
    1fb8:	cmp	r2, #128	; 0x80
    1fbc:	bne	1e60 <sfbpf_print+0x690>
    1fc0:	ldr	r0, [pc, #344]	; 2120 <sfbpf_print+0x950>
    1fc4:	add	r0, pc, r0
    1fc8:	bl	d0c <printf@plt>
    1fcc:	b	1cc4 <sfbpf_print+0x4f4>
    1fd0:	ldr	r0, [pc, #332]	; 2124 <sfbpf_print+0x954>
    1fd4:	ldr	r1, [sl, #4]
    1fd8:	add	r0, pc, r0
    1fdc:	bl	d0c <printf@plt>
    1fe0:	b	1cc4 <sfbpf_print+0x4f4>
    1fe4:	ldr	r0, [pc, #316]	; 2128 <sfbpf_print+0x958>
    1fe8:	ldr	r1, [sl, #4]
    1fec:	add	r0, pc, r0
    1ff0:	bl	d0c <printf@plt>
    1ff4:	b	1cc4 <sfbpf_print+0x4f4>
    1ff8:	ands	r3, r3, #24
    1ffc:	ldr	r1, [sl, #4]
    2000:	moveq	r2, #4
    2004:	beq	201c <sfbpf_print+0x84c>
    2008:	cmp	r3, #8
    200c:	subne	r2, r3, #16
    2010:	moveq	r2, #2
    2014:	clzne	r2, r2
    2018:	lsrne	r2, r2, #5
    201c:	ldr	r0, [pc, #264]	; 212c <sfbpf_print+0x95c>
    2020:	add	r0, pc, r0
    2024:	bl	d0c <printf@plt>
    2028:	b	1cc4 <sfbpf_print+0x4f4>
    202c:	.word	0x0001e77c
    2030:	.word	0x0001e768
    2034:	.word	0x0001e890
    2038:	.word	0x0001e894
    203c:	.word	0x0003c8ac
    2040:	.word	0x0001e7ec
    2044:	.word	0x0003c828
    2048:	.word	0x0001e6a0
    204c:	.word	0x0001e694
    2050:	.word	0x0003c798
    2054:	.word	0x0001e604
    2058:	.word	0x0003c744
    205c:	.word	0x0003c700
    2060:	.word	0x0001e55c
    2064:	.word	0x0003c6ac
    2068:	.word	0x0003c668
    206c:	.word	0x0001e4c4
    2070:	.word	0x0003c614
    2074:	.word	0x0003c5d0
    2078:	.word	0x0001e418
    207c:	.word	0x0001e4e0
    2080:	.word	0x0001e360
    2084:	.word	0x0001e4b8
    2088:	.word	0x0001e348
    208c:	.word	0x0001e454
    2090:	.word	0x0001e428
    2094:	.word	0x0001e2b4
    2098:	.word	0x0001e3b8
    209c:	.word	0x0001e364
    20a0:	.word	0x0001e33c
    20a4:	.word	0x0001e310
    20a8:	.word	0x0001e2e8
    20ac:	.word	0x0001e360
    20b0:	.word	0x0001e1d0
    20b4:	.word	0x0001e2b4
    20b8:	.word	0x0001e194
    20bc:	.word	0x0001e194
    20c0:	.word	0x0001e174
    20c4:	.word	0x0001e16c
    20c8:	.word	0x0001e14c
    20cc:	.word	0x0001e140
    20d0:	.word	0x0001e134
    20d4:	.word	0x0001e1dc
    20d8:	.word	0x0001e1a4
    20dc:	.word	0x0001e0dc
    20e0:	.word	0x0001e0cc
    20e4:	.word	0x0001e0d8
    20e8:	.word	0x0001e0b8
    20ec:	.word	0x0001e0cc
    20f0:	.word	0x0001e148
    20f4:	.word	0x0001e134
    20f8:	.word	0x0001e120
    20fc:	.word	0x0001e058
    2100:	.word	0x0001e044
    2104:	.word	0x0001e0dc
    2108:	.word	0x0001e0d0
    210c:	.word	0x0001dffc
    2110:	.word	0x0001e118
    2114:	.word	0x0001e004
    2118:	.word	0x0001dfdc
    211c:	.word	0x0001e04c
    2120:	.word	0x0001e038
    2124:	.word	0x0001e02c
    2128:	.word	0x0001e014
    212c:	.word	0x0001dfc4

00002130 <sf_bpf_error>:
    2130:	ldr	r4, [pc, #52]	; 216c <sf_bpf_error+0x3c>
    2134:	push	{r0, r1, r2, r3}
    2138:	mov	r1, #256	; 0x100
    213c:	push	{lr}		; (str lr, [sp, #-4]!)
    2140:	sub	sp, sp, #12
    2144:	add	r0, sp, #20
    2148:	add	r4, pc, r4
    214c:	ldr	r2, [sp, #16]
    2150:	mov	r3, r0
    2154:	str	r0, [sp, #4]
    2158:	mov	r0, r4
    215c:	bl	e74 <vsnprintf@plt>
    2160:	add	r0, r4, #264	; 0x108
    2164:	mov	r1, #1
    2168:	bl	d30 <longjmp@plt>
    216c:	.word	0x0003c218

00002170 <lookup_proto>:
    2170:	str	r4, [sp, #-8]!
    2174:	mov	r4, r0
    2178:	str	lr, [sp, #4]
    217c:	cmp	r1, #24
    2180:	addls	pc, pc, r1, lsl #2
    2184:	b	2288 <lookup_proto+0x118>
    2188:	b	2270 <lookup_proto+0x100>
    218c:	b	2244 <lookup_proto+0xd4>
    2190:	b	2270 <lookup_proto+0x100>
    2194:	b	2288 <lookup_proto+0x118>
    2198:	b	2288 <lookup_proto+0x118>
    219c:	b	2288 <lookup_proto+0x118>
    21a0:	b	2288 <lookup_proto+0x118>
    21a4:	b	2288 <lookup_proto+0x118>
    21a8:	b	2288 <lookup_proto+0x118>
    21ac:	b	2288 <lookup_proto+0x118>
    21b0:	b	2288 <lookup_proto+0x118>
    21b4:	b	2288 <lookup_proto+0x118>
    21b8:	b	2288 <lookup_proto+0x118>
    21bc:	b	2288 <lookup_proto+0x118>
    21c0:	b	2288 <lookup_proto+0x118>
    21c4:	b	2288 <lookup_proto+0x118>
    21c8:	b	2288 <lookup_proto+0x118>
    21cc:	b	2270 <lookup_proto+0x100>
    21d0:	b	2288 <lookup_proto+0x118>
    21d4:	b	2288 <lookup_proto+0x118>
    21d8:	b	2288 <lookup_proto+0x118>
    21dc:	b	2288 <lookup_proto+0x118>
    21e0:	b	2288 <lookup_proto+0x118>
    21e4:	b	2288 <lookup_proto+0x118>
    21e8:	b	21ec <lookup_proto+0x7c>
    21ec:	ldr	r1, [pc, #196]	; 22b8 <lookup_proto+0x148>
    21f0:	add	r1, pc, r1
    21f4:	bl	cf4 <strcmp@plt>
    21f8:	cmp	r0, #0
    21fc:	beq	2298 <lookup_proto+0x128>
    2200:	ldr	r1, [pc, #180]	; 22bc <lookup_proto+0x14c>
    2204:	mov	r0, r4
    2208:	add	r1, pc, r1
    220c:	bl	cf4 <strcmp@plt>
    2210:	cmp	r0, #0
    2214:	beq	22a0 <lookup_proto+0x130>
    2218:	ldr	r1, [pc, #160]	; 22c0 <lookup_proto+0x150>
    221c:	mov	r0, r4
    2220:	add	r1, pc, r1
    2224:	bl	cf4 <strcmp@plt>
    2228:	cmp	r0, #0
    222c:	moveq	r0, #129	; 0x81
    2230:	beq	227c <lookup_proto+0x10c>
    2234:	ldr	r0, [pc, #136]	; 22c4 <lookup_proto+0x154>
    2238:	mov	r1, r4
    223c:	add	r0, pc, r0
    2240:	bl	2130 <sf_bpf_error>
    2244:	bl	13074 <pcap_nametoeproto>
    2248:	cmn	r0, #1
    224c:	bne	227c <lookup_proto+0x10c>
    2250:	mov	r0, r4
    2254:	bl	130e4 <pcap_nametollc>
    2258:	cmn	r0, #1
    225c:	bne	227c <lookup_proto+0x10c>
    2260:	ldr	r0, [pc, #96]	; 22c8 <lookup_proto+0x158>
    2264:	mov	r1, r4
    2268:	add	r0, pc, r0
    226c:	bl	2130 <sf_bpf_error>
    2270:	bl	13050 <pcap_nametoproto>
    2274:	cmn	r0, #1
    2278:	beq	22a8 <lookup_proto+0x138>
    227c:	ldr	r4, [sp]
    2280:	add	sp, sp, #4
    2284:	pop	{pc}		; (ldr pc, [sp], #4)
    2288:	ldr	r4, [sp]
    228c:	add	sp, sp, #4
    2290:	mvn	r0, #0
    2294:	pop	{pc}		; (ldr pc, [sp], #4)
    2298:	mov	r0, #130	; 0x82
    229c:	b	227c <lookup_proto+0x10c>
    22a0:	mov	r0, #131	; 0x83
    22a4:	b	227c <lookup_proto+0x10c>
    22a8:	ldr	r0, [pc, #28]	; 22cc <lookup_proto+0x15c>
    22ac:	mov	r1, r4
    22b0:	add	r0, pc, r0
    22b4:	bl	2130 <sf_bpf_error>
    22b8:	.word	0x0001dfcc
    22bc:	.word	0x0001dfbc
    22c0:	.word	0x0001dfac
    22c4:	.word	0x0001df98
    22c8:	.word	0x0001df38
    22cc:	.word	0x0001ded8

000022d0 <newchunk.constprop.25>:
    22d0:	ldr	r2, [pc, #160]	; 2378 <newchunk.constprop.25+0xa8>
    22d4:	strd	r4, [sp, #-16]!
    22d8:	str	r6, [sp, #8]
    22dc:	str	lr, [sp, #12]
    22e0:	add	r2, pc, r2
    22e4:	ldr	r4, [r2, #656]	; 0x290
    22e8:	add	r3, r2, #660	; 0x294
    22ec:	lsl	r5, r4, #3
    22f0:	add	r1, r2, r5
    22f4:	add	r5, r3, r5
    22f8:	ldr	r1, [r1, #660]	; 0x294
    22fc:	cmp	r1, #19
    2300:	bhi	2350 <newchunk.constprop.25+0x80>
    2304:	add	r3, r4, #1
    2308:	add	r6, r5, #8
    230c:	cmp	r3, #15
    2310:	str	r3, [r2, #656]	; 0x290
    2314:	bgt	2344 <newchunk.constprop.25+0x74>
    2318:	mov	r4, #1024	; 0x400
    231c:	mov	r1, #1
    2320:	lsl	r4, r4, r3
    2324:	mov	r0, r4
    2328:	bl	ce8 <calloc@plt>
    232c:	cmp	r0, #0
    2330:	str	r0, [r5, #12]
    2334:	beq	2344 <newchunk.constprop.25+0x74>
    2338:	cmp	r4, #19
    233c:	str	r4, [r5, #8]
    2340:	bhi	235c <newchunk.constprop.25+0x8c>
    2344:	ldr	r0, [pc, #48]	; 237c <newchunk.constprop.25+0xac>
    2348:	add	r0, pc, r0
    234c:	bl	2130 <sf_bpf_error>
    2350:	ldr	r4, [r3, r4, lsl #3]
    2354:	mov	r6, r5
    2358:	ldr	r0, [r5, #4]
    235c:	sub	r4, r4, #20
    2360:	add	r0, r0, r4
    2364:	str	r4, [r6]
    2368:	ldrd	r4, [sp]
    236c:	ldr	r6, [sp, #8]
    2370:	add	sp, sp, #12
    2374:	pop	{pc}		; (ldr pc, [sp], #4)
    2378:	.word	0x0003c080
    237c:	.word	0x0001dea4

00002380 <gen_load_ppi_llprefixlen>:
    2380:	ldr	r3, [pc, #332]	; 24d4 <gen_load_ppi_llprefixlen+0x154>
    2384:	strd	r4, [sp, #-16]!
    2388:	str	r6, [sp, #8]
    238c:	str	lr, [sp, #12]
    2390:	add	r3, pc, r3
    2394:	ldr	r5, [r3, #788]	; 0x314
    2398:	cmn	r5, #1
    239c:	moveq	r4, #0
    23a0:	beq	24c0 <gen_load_ppi_llprefixlen+0x140>
    23a4:	bl	22d0 <newchunk.constprop.25>
    23a8:	mov	r2, #48	; 0x30
    23ac:	mov	r3, #3
    23b0:	mov	r4, r0
    23b4:	str	r2, [r0]
    23b8:	str	r3, [r0, #12]
    23bc:	bl	22d0 <newchunk.constprop.25>
    23c0:	mov	r3, #100	; 0x64
    23c4:	mov	r2, r4
    23c8:	str	r3, [r0]
    23cc:	b	23d4 <gen_load_ppi_llprefixlen+0x54>
    23d0:	mov	r2, r3
    23d4:	ldr	r3, [r2, #16]
    23d8:	cmp	r3, #0
    23dc:	bne	23d0 <gen_load_ppi_llprefixlen+0x50>
    23e0:	mov	r3, #8
    23e4:	str	r0, [r2, #16]
    23e8:	str	r3, [r0, #12]
    23ec:	bl	22d0 <newchunk.constprop.25>
    23f0:	mov	r3, #7
    23f4:	mov	r2, r4
    23f8:	str	r3, [r0]
    23fc:	b	2404 <gen_load_ppi_llprefixlen+0x84>
    2400:	mov	r2, r3
    2404:	ldr	r3, [r2, #16]
    2408:	cmp	r3, #0
    240c:	bne	2400 <gen_load_ppi_llprefixlen+0x80>
    2410:	str	r0, [r2, #16]
    2414:	bl	22d0 <newchunk.constprop.25>
    2418:	mov	r3, #48	; 0x30
    241c:	mov	r2, r4
    2420:	str	r3, [r0]
    2424:	b	242c <gen_load_ppi_llprefixlen+0xac>
    2428:	mov	r2, r3
    242c:	ldr	r3, [r2, #16]
    2430:	cmp	r3, #0
    2434:	bne	2428 <gen_load_ppi_llprefixlen+0xa8>
    2438:	mov	r3, #2
    243c:	str	r0, [r2, #16]
    2440:	str	r3, [r0, #12]
    2444:	bl	22d0 <newchunk.constprop.25>
    2448:	mov	r3, #76	; 0x4c
    244c:	mov	r2, r4
    2450:	str	r3, [r0]
    2454:	b	245c <gen_load_ppi_llprefixlen+0xdc>
    2458:	mov	r2, r3
    245c:	ldr	r3, [r2, #16]
    2460:	cmp	r3, #0
    2464:	bne	2458 <gen_load_ppi_llprefixlen+0xd8>
    2468:	str	r0, [r2, #16]
    246c:	bl	22d0 <newchunk.constprop.25>
    2470:	mov	r3, #2
    2474:	mov	r2, r4
    2478:	str	r3, [r0]
    247c:	str	r5, [r0, #12]
    2480:	b	2488 <gen_load_ppi_llprefixlen+0x108>
    2484:	mov	r2, r3
    2488:	ldr	r3, [r2, #16]
    248c:	cmp	r3, #0
    2490:	bne	2484 <gen_load_ppi_llprefixlen+0x104>
    2494:	str	r0, [r2, #16]
    2498:	bl	22d0 <newchunk.constprop.25>
    249c:	mov	r3, #7
    24a0:	mov	r2, r4
    24a4:	str	r3, [r0]
    24a8:	b	24b0 <gen_load_ppi_llprefixlen+0x130>
    24ac:	mov	r2, r3
    24b0:	ldr	r3, [r2, #16]
    24b4:	cmp	r3, #0
    24b8:	bne	24ac <gen_load_ppi_llprefixlen+0x12c>
    24bc:	str	r0, [r2, #16]
    24c0:	mov	r0, r4
    24c4:	ldrd	r4, [sp]
    24c8:	ldr	r6, [sp, #8]
    24cc:	add	sp, sp, #12
    24d0:	pop	{pc}		; (ldr pc, [sp], #4)
    24d4:	.word	0x0003bfd0

000024d8 <newchunk.constprop.26>:
    24d8:	ldr	r2, [pc, #160]	; 2580 <newchunk.constprop.26+0xa8>
    24dc:	strd	r4, [sp, #-16]!
    24e0:	str	r6, [sp, #8]
    24e4:	str	lr, [sp, #12]
    24e8:	add	r2, pc, r2
    24ec:	ldr	r4, [r2, #656]	; 0x290
    24f0:	add	r3, r2, #660	; 0x294
    24f4:	lsl	r5, r4, #3
    24f8:	add	r1, r2, r5
    24fc:	add	r5, r3, r5
    2500:	ldr	r1, [r1, #660]	; 0x294
    2504:	cmp	r1, #207	; 0xcf
    2508:	bhi	2558 <newchunk.constprop.26+0x80>
    250c:	add	r3, r4, #1
    2510:	add	r6, r5, #8
    2514:	cmp	r3, #15
    2518:	str	r3, [r2, #656]	; 0x290
    251c:	bgt	254c <newchunk.constprop.26+0x74>
    2520:	mov	r4, #1024	; 0x400
    2524:	mov	r1, #1
    2528:	lsl	r4, r4, r3
    252c:	mov	r0, r4
    2530:	bl	ce8 <calloc@plt>
    2534:	cmp	r0, #0
    2538:	str	r0, [r5, #12]
    253c:	beq	254c <newchunk.constprop.26+0x74>
    2540:	cmp	r4, #207	; 0xcf
    2544:	str	r4, [r5, #8]
    2548:	bhi	2564 <newchunk.constprop.26+0x8c>
    254c:	ldr	r0, [pc, #48]	; 2584 <newchunk.constprop.26+0xac>
    2550:	add	r0, pc, r0
    2554:	bl	2130 <sf_bpf_error>
    2558:	ldr	r4, [r3, r4, lsl #3]
    255c:	mov	r6, r5
    2560:	ldr	r0, [r5, #4]
    2564:	sub	r4, r4, #208	; 0xd0
    2568:	add	r0, r0, r4
    256c:	str	r4, [r6]
    2570:	ldrd	r4, [sp]
    2574:	ldr	r6, [sp, #8]
    2578:	add	sp, sp, #12
    257c:	pop	{pc}		; (ldr pc, [sp], #4)
    2580:	.word	0x0003be78
    2584:	.word	0x0001dc9c

00002588 <gen_load_macplrel>:
    2588:	strd	r4, [sp, #-24]!	; 0xffffffe8
    258c:	strd	r6, [sp, #8]
    2590:	mov	r7, r0
    2594:	mov	r6, r1
    2598:	str	r8, [sp, #16]
    259c:	ldr	r8, [pc, #848]	; 28f4 <gen_load_macplrel+0x36c>
    25a0:	str	lr, [sp, #20]
    25a4:	add	r8, pc, r8
    25a8:	ldr	r2, [r8, #792]	; 0x318
    25ac:	cmp	r2, #0
    25b0:	beq	2618 <gen_load_macplrel+0x90>
    25b4:	ldr	r4, [r8, #800]	; 0x320
    25b8:	cmn	r4, #1
    25bc:	beq	2638 <gen_load_macplrel+0xb0>
    25c0:	bl	22d0 <newchunk.constprop.25>
    25c4:	mov	r3, #97	; 0x61
    25c8:	orr	r6, r6, #64	; 0x40
    25cc:	mov	r5, r0
    25d0:	str	r3, [r0]
    25d4:	str	r4, [r0, #12]
    25d8:	bl	22d0 <newchunk.constprop.25>
    25dc:	mov	r2, r5
    25e0:	str	r6, [r0]
    25e4:	str	r7, [r0, #12]
    25e8:	b	25f0 <gen_load_macplrel+0x68>
    25ec:	mov	r2, r3
    25f0:	ldr	r3, [r2, #16]
    25f4:	cmp	r3, #0
    25f8:	bne	25ec <gen_load_macplrel+0x64>
    25fc:	str	r0, [r2, #16]
    2600:	mov	r0, r5
    2604:	ldrd	r4, [sp]
    2608:	ldrd	r6, [sp, #8]
    260c:	ldr	r8, [sp, #16]
    2610:	add	sp, sp, #20
    2614:	pop	{pc}		; (ldr pc, [sp], #4)
    2618:	bl	22d0 <newchunk.constprop.25>
    261c:	ldr	r3, [r8, #796]	; 0x31c
    2620:	orr	r6, r6, #32
    2624:	mov	r5, r0
    2628:	str	r6, [r0]
    262c:	add	r7, r3, r7
    2630:	str	r7, [r0, #12]
    2634:	b	2600 <gen_load_macplrel+0x78>
    2638:	ldr	r4, [r8, #804]	; 0x324
    263c:	lsl	r2, r4, #2
    2640:	add	r3, r8, r2
    2644:	ldr	r3, [r3, #808]	; 0x328
    2648:	cmp	r3, #0
    264c:	beq	28d8 <gen_load_macplrel+0x350>
    2650:	add	r4, r4, #1
    2654:	rsbs	r2, r4, #0
    2658:	and	r4, r4, #15
    265c:	and	r2, r2, #15
    2660:	rsbpl	r4, r2, #0
    2664:	lsl	r2, r4, #2
    2668:	str	r4, [r8, #804]	; 0x324
    266c:	add	r3, r8, r2
    2670:	ldr	r3, [r3, #808]	; 0x328
    2674:	cmp	r3, #0
    2678:	beq	28d8 <gen_load_macplrel+0x350>
    267c:	add	r4, r4, #1
    2680:	rsbs	r3, r4, #0
    2684:	and	r4, r4, #15
    2688:	and	r3, r3, #15
    268c:	rsbpl	r4, r3, #0
    2690:	lsl	r2, r4, #2
    2694:	add	r3, r8, r2
    2698:	ldr	r3, [r3, #808]	; 0x328
    269c:	cmp	r3, #0
    26a0:	beq	28cc <gen_load_macplrel+0x344>
    26a4:	add	r4, r4, #1
    26a8:	rsbs	r3, r4, #0
    26ac:	and	r4, r4, #15
    26b0:	and	r3, r3, #15
    26b4:	rsbpl	r4, r3, #0
    26b8:	lsl	r2, r4, #2
    26bc:	add	r3, r8, r2
    26c0:	ldr	r3, [r3, #808]	; 0x328
    26c4:	cmp	r3, #0
    26c8:	beq	28cc <gen_load_macplrel+0x344>
    26cc:	add	r4, r4, #1
    26d0:	rsbs	r3, r4, #0
    26d4:	and	r4, r4, #15
    26d8:	and	r3, r3, #15
    26dc:	rsbpl	r4, r3, #0
    26e0:	lsl	r2, r4, #2
    26e4:	add	r3, r8, r2
    26e8:	ldr	r3, [r3, #808]	; 0x328
    26ec:	cmp	r3, #0
    26f0:	beq	28cc <gen_load_macplrel+0x344>
    26f4:	add	r4, r4, #1
    26f8:	rsbs	r3, r4, #0
    26fc:	and	r4, r4, #15
    2700:	and	r3, r3, #15
    2704:	rsbpl	r4, r3, #0
    2708:	lsl	r2, r4, #2
    270c:	add	r3, r8, r2
    2710:	ldr	r3, [r3, #808]	; 0x328
    2714:	cmp	r3, #0
    2718:	beq	28cc <gen_load_macplrel+0x344>
    271c:	add	r4, r4, #1
    2720:	rsbs	r3, r4, #0
    2724:	and	r4, r4, #15
    2728:	and	r3, r3, #15
    272c:	rsbpl	r4, r3, #0
    2730:	lsl	r2, r4, #2
    2734:	add	r3, r8, r2
    2738:	ldr	r3, [r3, #808]	; 0x328
    273c:	cmp	r3, #0
    2740:	beq	28cc <gen_load_macplrel+0x344>
    2744:	add	r4, r4, #1
    2748:	rsbs	r3, r4, #0
    274c:	and	r4, r4, #15
    2750:	and	r3, r3, #15
    2754:	rsbpl	r4, r3, #0
    2758:	lsl	r2, r4, #2
    275c:	add	r3, r8, r2
    2760:	ldr	r3, [r3, #808]	; 0x328
    2764:	cmp	r3, #0
    2768:	beq	28cc <gen_load_macplrel+0x344>
    276c:	add	r4, r4, #1
    2770:	ldr	r3, [pc, #384]	; 28f8 <gen_load_macplrel+0x370>
    2774:	rsbs	r2, r4, #0
    2778:	and	r4, r4, #15
    277c:	and	r2, r2, #15
    2780:	rsbpl	r4, r2, #0
    2784:	lsl	r2, r4, #2
    2788:	add	r3, pc, r3
    278c:	add	r1, r3, r2
    2790:	ldr	r1, [r1, #808]	; 0x328
    2794:	cmp	r1, #0
    2798:	beq	28cc <gen_load_macplrel+0x344>
    279c:	add	r4, r4, #1
    27a0:	rsbs	r2, r4, #0
    27a4:	and	r4, r4, #15
    27a8:	and	r2, r2, #15
    27ac:	rsbpl	r4, r2, #0
    27b0:	lsl	r2, r4, #2
    27b4:	add	r1, r3, r2
    27b8:	ldr	r1, [r1, #808]	; 0x328
    27bc:	cmp	r1, #0
    27c0:	beq	28cc <gen_load_macplrel+0x344>
    27c4:	add	r4, r4, #1
    27c8:	rsbs	r2, r4, #0
    27cc:	and	r4, r4, #15
    27d0:	and	r2, r2, #15
    27d4:	rsbpl	r4, r2, #0
    27d8:	lsl	r2, r4, #2
    27dc:	add	r1, r3, r2
    27e0:	ldr	r1, [r1, #808]	; 0x328
    27e4:	cmp	r1, #0
    27e8:	beq	28cc <gen_load_macplrel+0x344>
    27ec:	add	r4, r4, #1
    27f0:	rsbs	r2, r4, #0
    27f4:	and	r4, r4, #15
    27f8:	and	r2, r2, #15
    27fc:	rsbpl	r4, r2, #0
    2800:	lsl	r2, r4, #2
    2804:	add	r1, r3, r2
    2808:	ldr	r1, [r1, #808]	; 0x328
    280c:	cmp	r1, #0
    2810:	beq	28cc <gen_load_macplrel+0x344>
    2814:	add	r4, r4, #1
    2818:	rsbs	r2, r4, #0
    281c:	and	r4, r4, #15
    2820:	and	r2, r2, #15
    2824:	rsbpl	r4, r2, #0
    2828:	lsl	r2, r4, #2
    282c:	add	r1, r3, r2
    2830:	ldr	r1, [r1, #808]	; 0x328
    2834:	cmp	r1, #0
    2838:	beq	28cc <gen_load_macplrel+0x344>
    283c:	add	r4, r4, #1
    2840:	rsbs	r2, r4, #0
    2844:	and	r4, r4, #15
    2848:	and	r2, r2, #15
    284c:	rsbpl	r4, r2, #0
    2850:	lsl	r2, r4, #2
    2854:	add	r1, r3, r2
    2858:	ldr	r1, [r1, #808]	; 0x328
    285c:	cmp	r1, #0
    2860:	beq	28cc <gen_load_macplrel+0x344>
    2864:	add	r4, r4, #1
    2868:	rsbs	r2, r4, #0
    286c:	and	r4, r4, #15
    2870:	and	r2, r2, #15
    2874:	rsbpl	r4, r2, #0
    2878:	lsl	r2, r4, #2
    287c:	add	r1, r3, r2
    2880:	ldr	r1, [r1, #808]	; 0x328
    2884:	cmp	r1, #0
    2888:	beq	28cc <gen_load_macplrel+0x344>
    288c:	add	r4, r4, #1
    2890:	rsbs	r2, r4, #0
    2894:	and	r4, r4, #15
    2898:	and	r2, r2, #15
    289c:	rsbpl	r4, r2, #0
    28a0:	lsl	r2, r4, #2
    28a4:	add	r1, r3, r2
    28a8:	ldr	r1, [r1, #808]	; 0x328
    28ac:	cmp	r1, #0
    28b0:	beq	28cc <gen_load_macplrel+0x344>
    28b4:	ldr	r0, [pc, #64]	; 28fc <gen_load_macplrel+0x374>
    28b8:	add	r2, r4, #1
    28bc:	and	r2, r2, #15
    28c0:	str	r2, [r3, #804]	; 0x324
    28c4:	add	r0, pc, r0
    28c8:	bl	2130 <sf_bpf_error>
    28cc:	ldr	r3, [pc, #44]	; 2900 <gen_load_macplrel+0x378>
    28d0:	add	r3, pc, r3
    28d4:	str	r4, [r3, #804]	; 0x324
    28d8:	ldr	r3, [pc, #36]	; 2904 <gen_load_macplrel+0x37c>
    28dc:	mov	r1, #1
    28e0:	add	r3, pc, r3
    28e4:	add	r2, r3, r2
    28e8:	str	r4, [r3, #800]	; 0x320
    28ec:	str	r1, [r2, #808]	; 0x328
    28f0:	b	25c0 <gen_load_macplrel+0x38>
    28f4:	.word	0x0003bdbc
    28f8:	.word	0x0003bbd8
    28fc:	.word	0x0001d938
    2900:	.word	0x0003ba90
    2904:	.word	0x0003ba80

00002908 <gen_portrangeatom6>:
    2908:	ldr	r3, [pc, #324]	; 2a54 <gen_portrangeatom6+0x14c>
    290c:	cmp	r1, r2
    2910:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2914:	strd	r6, [sp, #8]
    2918:	mov	r6, r1
    291c:	mov	r1, #8
    2920:	str	r8, [sp, #16]
    2924:	movle	r7, r6
    2928:	movgt	r7, r2
    292c:	str	lr, [sp, #20]
    2930:	movle	r6, r2
    2934:	add	r3, pc, r3
    2938:	ldr	r5, [r3, #872]	; 0x368
    293c:	add	r5, r5, #40	; 0x28
    2940:	add	r5, r5, r0
    2944:	mov	r0, r5
    2948:	bl	2588 <gen_load_macplrel>
    294c:	mov	r8, r0
    2950:	bl	24d8 <newchunk.constprop.26>
    2954:	mov	r4, r0
    2958:	mov	r3, #53	; 0x35
    295c:	mov	r1, #8
    2960:	mov	r0, r5
    2964:	str	r8, [r4, #4]
    2968:	str	r3, [r4, #8]
    296c:	str	r7, [r4, #20]
    2970:	str	r4, [r4, #96]	; 0x60
    2974:	bl	2588 <gen_load_macplrel>
    2978:	mov	r5, r0
    297c:	bl	24d8 <newchunk.constprop.26>
    2980:	mov	r3, r0
    2984:	mov	r1, #37	; 0x25
    2988:	ldr	r2, [r3, #44]	; 0x2c
    298c:	mov	r0, r4
    2990:	str	r5, [r3, #4]
    2994:	str	r1, [r3, #8]
    2998:	str	r6, [r3, #20]
    299c:	str	r3, [r3, #96]	; 0x60
    29a0:	clz	r2, r2
    29a4:	lsr	r2, r2, #5
    29a8:	str	r2, [r3, #44]	; 0x2c
    29ac:	b	29c4 <gen_portrangeatom6+0xbc>
    29b0:	ldr	r2, [r0, #60]	; 0x3c
    29b4:	str	r3, [r0, #60]	; 0x3c
    29b8:	cmp	r2, #0
    29bc:	beq	29e0 <gen_portrangeatom6+0xd8>
    29c0:	mov	r0, r2
    29c4:	ldr	r2, [r0, #44]	; 0x2c
    29c8:	cmp	r2, #0
    29cc:	beq	29b0 <gen_portrangeatom6+0xa8>
    29d0:	ldr	r2, [r0, #84]	; 0x54
    29d4:	str	r3, [r0, #84]	; 0x54
    29d8:	cmp	r2, #0
    29dc:	bne	29c0 <gen_portrangeatom6+0xb8>
    29e0:	ldr	r2, [r4, #44]	; 0x2c
    29e4:	mov	r1, r3
    29e8:	clz	r2, r2
    29ec:	lsr	r2, r2, #5
    29f0:	str	r2, [r4, #44]	; 0x2c
    29f4:	ldr	r2, [r3, #44]	; 0x2c
    29f8:	clz	r2, r2
    29fc:	lsr	r2, r2, #5
    2a00:	str	r2, [r3, #44]	; 0x2c
    2a04:	ldr	r0, [r1, #44]	; 0x2c
    2a08:	add	r2, r1, #84	; 0x54
    2a0c:	cmp	r0, #0
    2a10:	addeq	r2, r1, #60	; 0x3c
    2a14:	ldr	r1, [r2]
    2a18:	cmp	r1, #0
    2a1c:	bne	2a04 <gen_portrangeatom6+0xfc>
    2a20:	str	r4, [r2]
    2a24:	mov	r0, r3
    2a28:	ldr	r2, [r3, #44]	; 0x2c
    2a2c:	clz	r2, r2
    2a30:	lsr	r2, r2, #5
    2a34:	str	r2, [r3, #44]	; 0x2c
    2a38:	ldr	r2, [r4, #96]	; 0x60
    2a3c:	str	r2, [r3, #96]	; 0x60
    2a40:	ldrd	r4, [sp]
    2a44:	ldrd	r6, [sp, #8]
    2a48:	ldr	r8, [sp, #16]
    2a4c:	add	sp, sp, #20
    2a50:	pop	{pc}		; (ldr pc, [sp], #4)
    2a54:	.word	0x0003ba2c

00002a58 <gen_snap>:
    2a58:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2a5c:	mov	r2, #0
    2a60:	movw	r3, #43690	; 0xaaaa
    2a64:	movt	r3, #65535	; 0xffff
    2a68:	ldr	r4, [pc, #1332]	; 2fa4 <gen_snap+0x54c>
    2a6c:	lsr	ip, r0, #16
    2a70:	strd	r8, [sp, #16]
    2a74:	rev16	r1, r1
    2a78:	ldr	r9, [pc, #1320]	; 2fa8 <gen_snap+0x550>
    2a7c:	strd	r6, [sp, #8]
    2a80:	mov	r7, r2
    2a84:	strd	sl, [sp, #24]
    2a88:	mov	fp, #8
    2a8c:	str	lr, [sp, #32]
    2a90:	sub	sp, sp, #28
    2a94:	add	r4, pc, r4
    2a98:	add	lr, sp, #24
    2a9c:	add	r9, pc, r9
    2aa0:	str	lr, [sp, #4]
    2aa4:	strh	r3, [sp, #16]
    2aa8:	add	r3, r9, #660	; 0x294
    2aac:	strb	r2, [sp, #20]
    2ab0:	mov	r2, #3
    2ab4:	str	r3, [sp, #8]
    2ab8:	strb	r2, [sp, #18]
    2abc:	strb	ip, [sp, #19]
    2ac0:	strb	r0, [sp, #21]
    2ac4:	strh	r1, [sp, #22]
    2ac8:	ldr	r3, [sp, #4]
    2acc:	sub	fp, fp, #4
    2ad0:	ldr	r2, [r4, #792]	; 0x318
    2ad4:	ldr	sl, [r3, #-4]!
    2ad8:	cmp	r2, #0
    2adc:	rev	sl, sl
    2ae0:	str	r3, [sp, #4]
    2ae4:	beq	2c90 <gen_snap+0x238>
    2ae8:	ldr	r5, [r4, #800]	; 0x320
    2aec:	cmn	r5, #1
    2af0:	beq	2cb0 <gen_snap+0x258>
    2af4:	bl	22d0 <newchunk.constprop.25>
    2af8:	mov	r2, #97	; 0x61
    2afc:	mov	r8, r0
    2b00:	str	r2, [r0]
    2b04:	str	r5, [r0, #12]
    2b08:	bl	22d0 <newchunk.constprop.25>
    2b0c:	mov	r1, #64	; 0x40
    2b10:	mov	r2, r8
    2b14:	str	r1, [r0]
    2b18:	str	fp, [r0, #12]
    2b1c:	b	2b24 <gen_snap+0xcc>
    2b20:	mov	r2, r3
    2b24:	ldr	r3, [r2, #16]
    2b28:	cmp	r3, #0
    2b2c:	bne	2b20 <gen_snap+0xc8>
    2b30:	str	r0, [r2, #16]
    2b34:	ldr	r5, [r9, #656]	; 0x290
    2b38:	ldr	r3, [sp, #8]
    2b3c:	lsl	r6, r5, #3
    2b40:	add	r2, r9, r6
    2b44:	add	r6, r3, r6
    2b48:	ldr	r2, [r2, #660]	; 0x294
    2b4c:	cmp	r2, #207	; 0xcf
    2b50:	bhi	2c80 <gen_snap+0x228>
    2b54:	add	r0, r5, #1
    2b58:	add	r2, r6, #8
    2b5c:	cmp	r0, #15
    2b60:	str	r0, [r9, #656]	; 0x290
    2b64:	bgt	2f98 <gen_snap+0x540>
    2b68:	mov	r5, #1024	; 0x400
    2b6c:	mov	r1, #1
    2b70:	str	r2, [sp, #12]
    2b74:	lsl	r5, r5, r0
    2b78:	mov	r0, r5
    2b7c:	bl	ce8 <calloc@plt>
    2b80:	cmp	r0, #0
    2b84:	str	r0, [r6, #12]
    2b88:	beq	2f98 <gen_snap+0x540>
    2b8c:	cmp	r5, #207	; 0xcf
    2b90:	str	r5, [r6, #8]
    2b94:	ldr	r2, [sp, #12]
    2b98:	bls	2f98 <gen_snap+0x540>
    2b9c:	sub	r5, r5, #208	; 0xd0
    2ba0:	mov	r1, #21
    2ba4:	add	r0, r0, r5
    2ba8:	cmp	r7, #0
    2bac:	str	r5, [r2]
    2bb0:	str	r8, [r0, #4]
    2bb4:	str	r1, [r0, #8]
    2bb8:	str	sl, [r0, #20]
    2bbc:	str	r0, [r0, #96]	; 0x60
    2bc0:	beq	2c58 <gen_snap+0x200>
    2bc4:	mov	r2, r7
    2bc8:	b	2be0 <gen_snap+0x188>
    2bcc:	ldr	r3, [r2, #60]	; 0x3c
    2bd0:	str	r0, [r2, #60]	; 0x3c
    2bd4:	cmp	r3, #0
    2bd8:	beq	2bfc <gen_snap+0x1a4>
    2bdc:	mov	r2, r3
    2be0:	ldr	r3, [r2, #44]	; 0x2c
    2be4:	cmp	r3, #0
    2be8:	beq	2bcc <gen_snap+0x174>
    2bec:	ldr	r3, [r2, #84]	; 0x54
    2bf0:	str	r0, [r2, #84]	; 0x54
    2bf4:	cmp	r3, #0
    2bf8:	bne	2bdc <gen_snap+0x184>
    2bfc:	ldr	r2, [r7, #44]	; 0x2c
    2c00:	mov	r1, r0
    2c04:	clz	r2, r2
    2c08:	lsr	r2, r2, #5
    2c0c:	str	r2, [r7, #44]	; 0x2c
    2c10:	ldr	r2, [r0, #44]	; 0x2c
    2c14:	clz	r2, r2
    2c18:	lsr	r2, r2, #5
    2c1c:	str	r2, [r0, #44]	; 0x2c
    2c20:	ldr	r3, [r1, #44]	; 0x2c
    2c24:	cmp	r3, #0
    2c28:	addeq	r2, r1, #60	; 0x3c
    2c2c:	addne	r2, r1, #84	; 0x54
    2c30:	ldr	r1, [r2]
    2c34:	cmp	r1, #0
    2c38:	bne	2c20 <gen_snap+0x1c8>
    2c3c:	str	r7, [r2]
    2c40:	ldr	r2, [r0, #44]	; 0x2c
    2c44:	clz	r2, r2
    2c48:	lsr	r2, r2, #5
    2c4c:	str	r2, [r0, #44]	; 0x2c
    2c50:	ldr	r2, [r7, #96]	; 0x60
    2c54:	str	r2, [r0, #96]	; 0x60
    2c58:	cmp	fp, #0
    2c5c:	mov	r7, r0
    2c60:	bne	2ac8 <gen_snap+0x70>
    2c64:	add	sp, sp, #28
    2c68:	ldrd	r4, [sp]
    2c6c:	ldrd	r6, [sp, #8]
    2c70:	ldrd	r8, [sp, #16]
    2c74:	ldrd	sl, [sp, #24]
    2c78:	add	sp, sp, #32
    2c7c:	pop	{pc}		; (ldr pc, [sp], #4)
    2c80:	mov	r2, r6
    2c84:	ldr	r5, [r3, r5, lsl #3]
    2c88:	ldr	r0, [r6, #4]
    2c8c:	b	2b9c <gen_snap+0x144>
    2c90:	bl	22d0 <newchunk.constprop.25>
    2c94:	ldr	r2, [r4, #796]	; 0x31c
    2c98:	mov	r1, #32
    2c9c:	mov	r8, r0
    2ca0:	str	r1, [r0]
    2ca4:	add	r2, r2, fp
    2ca8:	str	r2, [r0, #12]
    2cac:	b	2b34 <gen_snap+0xdc>
    2cb0:	ldr	r5, [r4, #804]	; 0x324
    2cb4:	lsl	r2, r5, #2
    2cb8:	add	r1, r4, r2
    2cbc:	ldr	r1, [r1, #808]	; 0x328
    2cc0:	cmp	r1, #0
    2cc4:	beq	2f7c <gen_snap+0x524>
    2cc8:	add	r5, r5, #1
    2ccc:	rsbs	r2, r5, #0
    2cd0:	and	r5, r5, #15
    2cd4:	and	r2, r2, #15
    2cd8:	rsbpl	r5, r2, #0
    2cdc:	lsl	r2, r5, #2
    2ce0:	str	r5, [r4, #804]	; 0x324
    2ce4:	add	r1, r4, r2
    2ce8:	ldr	r1, [r1, #808]	; 0x328
    2cec:	cmp	r1, #0
    2cf0:	beq	2f7c <gen_snap+0x524>
    2cf4:	add	r5, r5, #1
    2cf8:	rsbs	r2, r5, #0
    2cfc:	and	r5, r5, #15
    2d00:	and	r2, r2, #15
    2d04:	rsbpl	r5, r2, #0
    2d08:	lsl	r2, r5, #2
    2d0c:	str	r5, [r4, #804]	; 0x324
    2d10:	add	r1, r4, r2
    2d14:	ldr	r1, [r1, #808]	; 0x328
    2d18:	cmp	r1, #0
    2d1c:	beq	2f7c <gen_snap+0x524>
    2d20:	add	r5, r5, #1
    2d24:	rsbs	r2, r5, #0
    2d28:	and	r5, r5, #15
    2d2c:	and	r2, r2, #15
    2d30:	rsbpl	r5, r2, #0
    2d34:	lsl	r2, r5, #2
    2d38:	str	r5, [r4, #804]	; 0x324
    2d3c:	add	r1, r4, r2
    2d40:	ldr	r1, [r1, #808]	; 0x328
    2d44:	cmp	r1, #0
    2d48:	beq	2f7c <gen_snap+0x524>
    2d4c:	add	r5, r5, #1
    2d50:	rsbs	r2, r5, #0
    2d54:	and	r5, r5, #15
    2d58:	and	r2, r2, #15
    2d5c:	rsbpl	r5, r2, #0
    2d60:	lsl	r2, r5, #2
    2d64:	str	r5, [r4, #804]	; 0x324
    2d68:	add	r1, r4, r2
    2d6c:	ldr	r1, [r1, #808]	; 0x328
    2d70:	cmp	r1, #0
    2d74:	beq	2f7c <gen_snap+0x524>
    2d78:	add	r5, r5, #1
    2d7c:	rsbs	r2, r5, #0
    2d80:	and	r5, r5, #15
    2d84:	and	r2, r2, #15
    2d88:	rsbpl	r5, r2, #0
    2d8c:	lsl	r2, r5, #2
    2d90:	str	r5, [r4, #804]	; 0x324
    2d94:	add	r1, r4, r2
    2d98:	ldr	r1, [r1, #808]	; 0x328
    2d9c:	cmp	r1, #0
    2da0:	beq	2f7c <gen_snap+0x524>
    2da4:	add	r5, r5, #1
    2da8:	rsbs	r2, r5, #0
    2dac:	and	r5, r5, #15
    2db0:	and	r2, r2, #15
    2db4:	rsbpl	r5, r2, #0
    2db8:	lsl	r2, r5, #2
    2dbc:	str	r5, [r4, #804]	; 0x324
    2dc0:	add	r1, r4, r2
    2dc4:	ldr	r1, [r1, #808]	; 0x328
    2dc8:	cmp	r1, #0
    2dcc:	beq	2f7c <gen_snap+0x524>
    2dd0:	add	r5, r5, #1
    2dd4:	rsbs	r2, r5, #0
    2dd8:	and	r5, r5, #15
    2ddc:	and	r2, r2, #15
    2de0:	rsbpl	r5, r2, #0
    2de4:	lsl	r2, r5, #2
    2de8:	str	r5, [r4, #804]	; 0x324
    2dec:	add	r1, r4, r2
    2df0:	ldr	r1, [r1, #808]	; 0x328
    2df4:	cmp	r1, #0
    2df8:	beq	2f7c <gen_snap+0x524>
    2dfc:	add	r5, r5, #1
    2e00:	ldr	r1, [pc, #420]	; 2fac <gen_snap+0x554>
    2e04:	rsbs	r2, r5, #0
    2e08:	and	r5, r5, #15
    2e0c:	and	r2, r2, #15
    2e10:	rsbpl	r5, r2, #0
    2e14:	lsl	r2, r5, #2
    2e18:	add	r1, pc, r1
    2e1c:	add	r0, r1, r2
    2e20:	ldr	r0, [r0, #808]	; 0x328
    2e24:	str	r5, [r1, #804]	; 0x324
    2e28:	cmp	r0, #0
    2e2c:	beq	2f7c <gen_snap+0x524>
    2e30:	add	r5, r5, #1
    2e34:	rsbs	r2, r5, #0
    2e38:	and	r5, r5, #15
    2e3c:	and	r2, r2, #15
    2e40:	rsbpl	r5, r2, #0
    2e44:	lsl	r2, r5, #2
    2e48:	str	r5, [r1, #804]	; 0x324
    2e4c:	add	r0, r1, r2
    2e50:	ldr	r0, [r0, #808]	; 0x328
    2e54:	cmp	r0, #0
    2e58:	beq	2f7c <gen_snap+0x524>
    2e5c:	add	r5, r5, #1
    2e60:	rsbs	r2, r5, #0
    2e64:	and	r5, r5, #15
    2e68:	and	r2, r2, #15
    2e6c:	rsbpl	r5, r2, #0
    2e70:	lsl	r2, r5, #2
    2e74:	str	r5, [r1, #804]	; 0x324
    2e78:	add	r0, r1, r2
    2e7c:	ldr	r0, [r0, #808]	; 0x328
    2e80:	cmp	r0, #0
    2e84:	beq	2f7c <gen_snap+0x524>
    2e88:	add	r5, r5, #1
    2e8c:	rsbs	r2, r5, #0
    2e90:	and	r5, r5, #15
    2e94:	and	r2, r2, #15
    2e98:	rsbpl	r5, r2, #0
    2e9c:	lsl	r2, r5, #2
    2ea0:	str	r5, [r1, #804]	; 0x324
    2ea4:	add	r0, r1, r2
    2ea8:	ldr	r0, [r0, #808]	; 0x328
    2eac:	cmp	r0, #0
    2eb0:	beq	2f7c <gen_snap+0x524>
    2eb4:	add	r5, r5, #1
    2eb8:	rsbs	r2, r5, #0
    2ebc:	and	r5, r5, #15
    2ec0:	and	r2, r2, #15
    2ec4:	rsbpl	r5, r2, #0
    2ec8:	lsl	r2, r5, #2
    2ecc:	str	r5, [r1, #804]	; 0x324
    2ed0:	add	r0, r1, r2
    2ed4:	ldr	r0, [r0, #808]	; 0x328
    2ed8:	cmp	r0, #0
    2edc:	beq	2f7c <gen_snap+0x524>
    2ee0:	add	r5, r5, #1
    2ee4:	rsbs	r2, r5, #0
    2ee8:	and	r5, r5, #15
    2eec:	and	r2, r2, #15
    2ef0:	rsbpl	r5, r2, #0
    2ef4:	lsl	r2, r5, #2
    2ef8:	str	r5, [r1, #804]	; 0x324
    2efc:	add	r0, r1, r2
    2f00:	ldr	r0, [r0, #808]	; 0x328
    2f04:	cmp	r0, #0
    2f08:	beq	2f7c <gen_snap+0x524>
    2f0c:	add	r5, r5, #1
    2f10:	rsbs	r2, r5, #0
    2f14:	and	r5, r5, #15
    2f18:	and	r2, r2, #15
    2f1c:	rsbpl	r5, r2, #0
    2f20:	lsl	r2, r5, #2
    2f24:	str	r5, [r1, #804]	; 0x324
    2f28:	add	r0, r1, r2
    2f2c:	ldr	r0, [r0, #808]	; 0x328
    2f30:	cmp	r0, #0
    2f34:	beq	2f7c <gen_snap+0x524>
    2f38:	add	r5, r5, #1
    2f3c:	rsbs	r2, r5, #0
    2f40:	and	r5, r5, #15
    2f44:	and	r2, r2, #15
    2f48:	rsbpl	r5, r2, #0
    2f4c:	lsl	r2, r5, #2
    2f50:	str	r5, [r1, #804]	; 0x324
    2f54:	add	r0, r1, r2
    2f58:	ldr	r0, [r0, #808]	; 0x328
    2f5c:	cmp	r0, #0
    2f60:	beq	2f7c <gen_snap+0x524>
    2f64:	ldr	r0, [pc, #68]	; 2fb0 <gen_snap+0x558>
    2f68:	add	r5, r5, #1
    2f6c:	and	r5, r5, #15
    2f70:	str	r5, [r1, #804]	; 0x324
    2f74:	add	r0, pc, r0
    2f78:	bl	2130 <sf_bpf_error>
    2f7c:	ldr	r1, [pc, #48]	; 2fb4 <gen_snap+0x55c>
    2f80:	mov	r0, #1
    2f84:	add	r1, pc, r1
    2f88:	add	r2, r1, r2
    2f8c:	str	r5, [r1, #800]	; 0x320
    2f90:	str	r0, [r2, #808]	; 0x328
    2f94:	b	2af4 <gen_snap+0x9c>
    2f98:	ldr	r0, [pc, #24]	; 2fb8 <gen_snap+0x560>
    2f9c:	add	r0, pc, r0
    2fa0:	bl	2130 <sf_bpf_error>
    2fa4:	.word	0x0003b8cc
    2fa8:	.word	0x0003b8c4
    2fac:	.word	0x0003b548
    2fb0:	.word	0x0001d288
    2fb4:	.word	0x0003b3dc
    2fb8:	.word	0x0001d250

00002fbc <gen_llc_linktype>:
    2fbc:	cmp	r0, #240	; 0xf0
    2fc0:	strd	r4, [sp, #-16]!
    2fc4:	mov	r4, r0
    2fc8:	str	r6, [sp, #8]
    2fcc:	str	lr, [sp, #12]
    2fd0:	beq	3054 <gen_llc_linktype+0x98>
    2fd4:	bgt	3020 <gen_llc_linktype+0x64>
    2fd8:	cmp	r0, #6
    2fdc:	beq	3054 <gen_llc_linktype+0x98>
    2fe0:	cmp	r0, #224	; 0xe0
    2fe4:	bne	3064 <gen_llc_linktype+0xa8>
    2fe8:	mov	r1, #16
    2fec:	mov	r0, #0
    2ff0:	bl	2588 <gen_load_macplrel>
    2ff4:	mov	r5, r0
    2ff8:	bl	24d8 <newchunk.constprop.26>
    2ffc:	mov	r3, #21
    3000:	str	r5, [r0, #4]
    3004:	str	r3, [r0, #8]
    3008:	str	r4, [r0, #20]
    300c:	str	r0, [r0, #96]	; 0x60
    3010:	ldrd	r4, [sp]
    3014:	ldr	r6, [sp, #8]
    3018:	add	sp, sp, #12
    301c:	pop	{pc}		; (ldr pc, [sp], #4)
    3020:	cmp	r0, #254	; 0xfe
    3024:	beq	3054 <gen_llc_linktype+0x98>
    3028:	movw	r3, #32923	; 0x809b
    302c:	cmp	r0, r3
    3030:	bne	3064 <gen_llc_linktype+0xa8>
    3034:	mov	r1, r0
    3038:	mov	r0, #7
    303c:	movt	r0, #8
    3040:	ldrd	r4, [sp]
    3044:	ldr	r6, [sp, #8]
    3048:	ldr	lr, [sp, #12]
    304c:	add	sp, sp, #16
    3050:	b	2a58 <gen_snap>
    3054:	orr	r4, r4, r4, lsl #8
    3058:	mov	r1, #8
    305c:	mov	r0, #0
    3060:	b	2ff0 <gen_llc_linktype+0x34>
    3064:	movw	r3, #1500	; 0x5dc
    3068:	cmp	r4, r3
    306c:	movgt	r1, #8
    3070:	movgt	r0, #6
    3074:	bgt	2ff0 <gen_llc_linktype+0x34>
    3078:	b	2fe8 <gen_llc_linktype+0x2c>

0000307c <gen_loadx_iphdrlen>:
    307c:	strd	r4, [sp, #-16]!
    3080:	str	r6, [sp, #8]
    3084:	ldr	r6, [pc, #1036]	; 3498 <gen_loadx_iphdrlen+0x41c>
    3088:	str	lr, [sp, #12]
    308c:	add	r6, pc, r6
    3090:	ldr	r2, [r6, #792]	; 0x318
    3094:	cmp	r2, #0
    3098:	beq	31b8 <gen_loadx_iphdrlen+0x13c>
    309c:	ldr	r4, [r6, #800]	; 0x320
    30a0:	cmn	r4, #1
    30a4:	beq	31dc <gen_loadx_iphdrlen+0x160>
    30a8:	bl	22d0 <newchunk.constprop.25>
    30ac:	mov	r3, #97	; 0x61
    30b0:	mov	r5, r0
    30b4:	str	r3, [r0]
    30b8:	str	r4, [r0, #12]
    30bc:	bl	22d0 <newchunk.constprop.25>
    30c0:	ldr	r3, [pc, #980]	; 349c <gen_loadx_iphdrlen+0x420>
    30c4:	mov	r1, #80	; 0x50
    30c8:	mov	r2, r5
    30cc:	str	r1, [r0]
    30d0:	add	r3, pc, r3
    30d4:	ldr	r3, [r3, #872]	; 0x368
    30d8:	str	r3, [r0, #12]
    30dc:	b	30e4 <gen_loadx_iphdrlen+0x68>
    30e0:	mov	r2, r3
    30e4:	ldr	r3, [r2, #16]
    30e8:	cmp	r3, #0
    30ec:	bne	30e0 <gen_loadx_iphdrlen+0x64>
    30f0:	str	r0, [r2, #16]
    30f4:	bl	22d0 <newchunk.constprop.25>
    30f8:	mov	r1, #84	; 0x54
    30fc:	mov	r3, #15
    3100:	mov	r2, r5
    3104:	str	r1, [r0]
    3108:	str	r3, [r0, #12]
    310c:	b	3114 <gen_loadx_iphdrlen+0x98>
    3110:	mov	r2, r3
    3114:	ldr	r3, [r2, #16]
    3118:	cmp	r3, #0
    311c:	bne	3110 <gen_loadx_iphdrlen+0x94>
    3120:	str	r0, [r2, #16]
    3124:	bl	22d0 <newchunk.constprop.25>
    3128:	mov	r1, #100	; 0x64
    312c:	mov	r3, #2
    3130:	mov	r2, r5
    3134:	str	r1, [r0]
    3138:	str	r3, [r0, #12]
    313c:	b	3144 <gen_loadx_iphdrlen+0xc8>
    3140:	mov	r2, r3
    3144:	ldr	r3, [r2, #16]
    3148:	cmp	r3, #0
    314c:	bne	3140 <gen_loadx_iphdrlen+0xc4>
    3150:	str	r0, [r2, #16]
    3154:	bl	22d0 <newchunk.constprop.25>
    3158:	mov	r3, #12
    315c:	mov	r2, r5
    3160:	str	r3, [r0]
    3164:	b	316c <gen_loadx_iphdrlen+0xf0>
    3168:	mov	r2, r3
    316c:	ldr	r3, [r2, #16]
    3170:	cmp	r3, #0
    3174:	bne	3168 <gen_loadx_iphdrlen+0xec>
    3178:	str	r0, [r2, #16]
    317c:	bl	22d0 <newchunk.constprop.25>
    3180:	mov	r3, #7
    3184:	mov	r2, r5
    3188:	str	r3, [r0]
    318c:	b	3194 <gen_loadx_iphdrlen+0x118>
    3190:	mov	r2, r3
    3194:	ldr	r3, [r2, #16]
    3198:	cmp	r3, #0
    319c:	bne	3190 <gen_loadx_iphdrlen+0x114>
    31a0:	str	r0, [r2, #16]
    31a4:	mov	r0, r5
    31a8:	ldrd	r4, [sp]
    31ac:	ldr	r6, [sp, #8]
    31b0:	add	sp, sp, #12
    31b4:	pop	{pc}		; (ldr pc, [sp], #4)
    31b8:	bl	22d0 <newchunk.constprop.25>
    31bc:	ldr	r3, [r6, #796]	; 0x31c
    31c0:	mov	r1, #177	; 0xb1
    31c4:	mov	r5, r0
    31c8:	ldr	r2, [r6, #872]	; 0x368
    31cc:	str	r1, [r0]
    31d0:	add	r3, r3, r2
    31d4:	str	r3, [r0, #12]
    31d8:	b	31a4 <gen_loadx_iphdrlen+0x128>
    31dc:	ldr	r4, [r6, #804]	; 0x324
    31e0:	lsl	r2, r4, #2
    31e4:	add	r3, r6, r2
    31e8:	ldr	r3, [r3, #808]	; 0x328
    31ec:	cmp	r3, #0
    31f0:	beq	347c <gen_loadx_iphdrlen+0x400>
    31f4:	add	r4, r4, #1
    31f8:	rsbs	r2, r4, #0
    31fc:	and	r4, r4, #15
    3200:	and	r2, r2, #15
    3204:	rsbpl	r4, r2, #0
    3208:	lsl	r2, r4, #2
    320c:	str	r4, [r6, #804]	; 0x324
    3210:	add	r3, r6, r2
    3214:	ldr	r3, [r3, #808]	; 0x328
    3218:	cmp	r3, #0
    321c:	beq	347c <gen_loadx_iphdrlen+0x400>
    3220:	add	r4, r4, #1
    3224:	rsbs	r3, r4, #0
    3228:	and	r4, r4, #15
    322c:	and	r3, r3, #15
    3230:	rsbpl	r4, r3, #0
    3234:	lsl	r2, r4, #2
    3238:	add	r3, r6, r2
    323c:	ldr	r3, [r3, #808]	; 0x328
    3240:	cmp	r3, #0
    3244:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3248:	add	r4, r4, #1
    324c:	rsbs	r3, r4, #0
    3250:	and	r4, r4, #15
    3254:	and	r3, r3, #15
    3258:	rsbpl	r4, r3, #0
    325c:	lsl	r2, r4, #2
    3260:	add	r3, r6, r2
    3264:	ldr	r3, [r3, #808]	; 0x328
    3268:	cmp	r3, #0
    326c:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3270:	add	r4, r4, #1
    3274:	rsbs	r3, r4, #0
    3278:	and	r4, r4, #15
    327c:	and	r3, r3, #15
    3280:	rsbpl	r4, r3, #0
    3284:	lsl	r2, r4, #2
    3288:	add	r3, r6, r2
    328c:	ldr	r3, [r3, #808]	; 0x328
    3290:	cmp	r3, #0
    3294:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3298:	add	r4, r4, #1
    329c:	rsbs	r3, r4, #0
    32a0:	and	r4, r4, #15
    32a4:	and	r3, r3, #15
    32a8:	rsbpl	r4, r3, #0
    32ac:	lsl	r2, r4, #2
    32b0:	add	r3, r6, r2
    32b4:	ldr	r3, [r3, #808]	; 0x328
    32b8:	cmp	r3, #0
    32bc:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    32c0:	add	r4, r4, #1
    32c4:	rsbs	r3, r4, #0
    32c8:	and	r4, r4, #15
    32cc:	and	r3, r3, #15
    32d0:	rsbpl	r4, r3, #0
    32d4:	lsl	r2, r4, #2
    32d8:	add	r3, r6, r2
    32dc:	ldr	r3, [r3, #808]	; 0x328
    32e0:	cmp	r3, #0
    32e4:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    32e8:	add	r4, r4, #1
    32ec:	rsbs	r3, r4, #0
    32f0:	and	r4, r4, #15
    32f4:	and	r3, r3, #15
    32f8:	rsbpl	r4, r3, #0
    32fc:	lsl	r2, r4, #2
    3300:	add	r3, r6, r2
    3304:	ldr	r3, [r3, #808]	; 0x328
    3308:	cmp	r3, #0
    330c:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3310:	add	r4, r4, #1
    3314:	ldr	r3, [pc, #388]	; 34a0 <gen_loadx_iphdrlen+0x424>
    3318:	rsbs	r2, r4, #0
    331c:	and	r4, r4, #15
    3320:	and	r2, r2, #15
    3324:	rsbpl	r4, r2, #0
    3328:	lsl	r2, r4, #2
    332c:	add	r3, pc, r3
    3330:	add	r1, r3, r2
    3334:	ldr	r1, [r1, #808]	; 0x328
    3338:	cmp	r1, #0
    333c:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3340:	add	r4, r4, #1
    3344:	rsbs	r2, r4, #0
    3348:	and	r4, r4, #15
    334c:	and	r2, r2, #15
    3350:	rsbpl	r4, r2, #0
    3354:	lsl	r2, r4, #2
    3358:	add	r1, r3, r2
    335c:	ldr	r1, [r1, #808]	; 0x328
    3360:	cmp	r1, #0
    3364:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3368:	add	r4, r4, #1
    336c:	rsbs	r2, r4, #0
    3370:	and	r4, r4, #15
    3374:	and	r2, r2, #15
    3378:	rsbpl	r4, r2, #0
    337c:	lsl	r2, r4, #2
    3380:	add	r1, r3, r2
    3384:	ldr	r1, [r1, #808]	; 0x328
    3388:	cmp	r1, #0
    338c:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3390:	add	r4, r4, #1
    3394:	rsbs	r2, r4, #0
    3398:	and	r4, r4, #15
    339c:	and	r2, r2, #15
    33a0:	rsbpl	r4, r2, #0
    33a4:	lsl	r2, r4, #2
    33a8:	add	r1, r3, r2
    33ac:	ldr	r1, [r1, #808]	; 0x328
    33b0:	cmp	r1, #0
    33b4:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    33b8:	add	r4, r4, #1
    33bc:	rsbs	r2, r4, #0
    33c0:	and	r4, r4, #15
    33c4:	and	r2, r2, #15
    33c8:	rsbpl	r4, r2, #0
    33cc:	lsl	r2, r4, #2
    33d0:	add	r1, r3, r2
    33d4:	ldr	r1, [r1, #808]	; 0x328
    33d8:	cmp	r1, #0
    33dc:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    33e0:	add	r4, r4, #1
    33e4:	rsbs	r2, r4, #0
    33e8:	and	r4, r4, #15
    33ec:	and	r2, r2, #15
    33f0:	rsbpl	r4, r2, #0
    33f4:	lsl	r2, r4, #2
    33f8:	add	r1, r3, r2
    33fc:	ldr	r1, [r1, #808]	; 0x328
    3400:	cmp	r1, #0
    3404:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3408:	add	r4, r4, #1
    340c:	rsbs	r2, r4, #0
    3410:	and	r4, r4, #15
    3414:	and	r2, r2, #15
    3418:	rsbpl	r4, r2, #0
    341c:	lsl	r2, r4, #2
    3420:	add	r1, r3, r2
    3424:	ldr	r1, [r1, #808]	; 0x328
    3428:	cmp	r1, #0
    342c:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3430:	add	r4, r4, #1
    3434:	rsbs	r2, r4, #0
    3438:	and	r4, r4, #15
    343c:	and	r2, r2, #15
    3440:	rsbpl	r4, r2, #0
    3444:	lsl	r2, r4, #2
    3448:	add	r1, r3, r2
    344c:	ldr	r1, [r1, #808]	; 0x328
    3450:	cmp	r1, #0
    3454:	beq	3470 <gen_loadx_iphdrlen+0x3f4>
    3458:	ldr	r0, [pc, #68]	; 34a4 <gen_loadx_iphdrlen+0x428>
    345c:	add	r2, r4, #1
    3460:	and	r2, r2, #15
    3464:	str	r2, [r3, #804]	; 0x324
    3468:	add	r0, pc, r0
    346c:	bl	2130 <sf_bpf_error>
    3470:	ldr	r3, [pc, #48]	; 34a8 <gen_loadx_iphdrlen+0x42c>
    3474:	add	r3, pc, r3
    3478:	str	r4, [r3, #804]	; 0x324
    347c:	ldr	r3, [pc, #40]	; 34ac <gen_loadx_iphdrlen+0x430>
    3480:	mov	r1, #1
    3484:	add	r3, pc, r3
    3488:	add	r2, r3, r2
    348c:	str	r4, [r3, #800]	; 0x320
    3490:	str	r1, [r2, #808]	; 0x328
    3494:	b	30a8 <gen_loadx_iphdrlen+0x2c>
    3498:	.word	0x0003b2d4
    349c:	.word	0x0003b290
    34a0:	.word	0x0003b034
    34a4:	.word	0x0001cd94
    34a8:	.word	0x0003aeec
    34ac:	.word	0x0003aedc

000034b0 <gen_portrangeatom>:
    34b0:	cmp	r1, r2
    34b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    34b8:	mov	r4, r0
    34bc:	strd	r6, [sp, #8]
    34c0:	movle	r6, r2
    34c4:	movgt	r6, r1
    34c8:	str	r8, [sp, #16]
    34cc:	movgt	r8, r2
    34d0:	movle	r8, r1
    34d4:	str	lr, [sp, #20]
    34d8:	bl	307c <gen_loadx_iphdrlen>
    34dc:	mov	r7, r0
    34e0:	bl	22d0 <newchunk.constprop.25>
    34e4:	ldr	r3, [pc, #352]	; 364c <gen_portrangeatom+0x19c>
    34e8:	mov	r2, #72	; 0x48
    34ec:	str	r2, [r0]
    34f0:	mov	r2, r7
    34f4:	add	r3, pc, r3
    34f8:	ldr	r5, [r3, #796]	; 0x31c
    34fc:	ldr	r3, [r3, #872]	; 0x368
    3500:	add	r5, r5, r3
    3504:	add	r5, r5, r4
    3508:	str	r5, [r0, #12]
    350c:	b	3514 <gen_portrangeatom+0x64>
    3510:	mov	r2, r3
    3514:	ldr	r3, [r2, #16]
    3518:	cmp	r3, #0
    351c:	bne	3510 <gen_portrangeatom+0x60>
    3520:	str	r0, [r2, #16]
    3524:	bl	24d8 <newchunk.constprop.26>
    3528:	mov	r4, r0
    352c:	mov	r3, #53	; 0x35
    3530:	str	r7, [r0, #4]
    3534:	str	r3, [r0, #8]
    3538:	str	r8, [r0, #20]
    353c:	str	r0, [r4, #96]	; 0x60
    3540:	bl	307c <gen_loadx_iphdrlen>
    3544:	mov	r7, r0
    3548:	bl	22d0 <newchunk.constprop.25>
    354c:	mov	r2, #72	; 0x48
    3550:	mov	r3, r7
    3554:	str	r2, [r0]
    3558:	str	r5, [r0, #12]
    355c:	b	3564 <gen_portrangeatom+0xb4>
    3560:	mov	r3, r2
    3564:	ldr	r2, [r3, #16]
    3568:	cmp	r2, #0
    356c:	bne	3560 <gen_portrangeatom+0xb0>
    3570:	str	r0, [r3, #16]
    3574:	bl	24d8 <newchunk.constprop.26>
    3578:	mov	r3, r0
    357c:	mov	r1, #37	; 0x25
    3580:	ldr	r2, [r3, #44]	; 0x2c
    3584:	mov	r0, r4
    3588:	str	r7, [r3, #4]
    358c:	str	r1, [r3, #8]
    3590:	str	r6, [r3, #20]
    3594:	str	r3, [r3, #96]	; 0x60
    3598:	clz	r2, r2
    359c:	lsr	r2, r2, #5
    35a0:	str	r2, [r3, #44]	; 0x2c
    35a4:	b	35bc <gen_portrangeatom+0x10c>
    35a8:	ldr	r2, [r0, #60]	; 0x3c
    35ac:	str	r3, [r0, #60]	; 0x3c
    35b0:	cmp	r2, #0
    35b4:	beq	35d8 <gen_portrangeatom+0x128>
    35b8:	mov	r0, r2
    35bc:	ldr	r2, [r0, #44]	; 0x2c
    35c0:	cmp	r2, #0
    35c4:	beq	35a8 <gen_portrangeatom+0xf8>
    35c8:	ldr	r2, [r0, #84]	; 0x54
    35cc:	str	r3, [r0, #84]	; 0x54
    35d0:	cmp	r2, #0
    35d4:	bne	35b8 <gen_portrangeatom+0x108>
    35d8:	ldr	r2, [r4, #44]	; 0x2c
    35dc:	mov	r1, r3
    35e0:	clz	r2, r2
    35e4:	lsr	r2, r2, #5
    35e8:	str	r2, [r4, #44]	; 0x2c
    35ec:	ldr	r2, [r3, #44]	; 0x2c
    35f0:	clz	r2, r2
    35f4:	lsr	r2, r2, #5
    35f8:	str	r2, [r3, #44]	; 0x2c
    35fc:	ldr	r0, [r1, #44]	; 0x2c
    3600:	add	r2, r1, #84	; 0x54
    3604:	cmp	r0, #0
    3608:	addeq	r2, r1, #60	; 0x3c
    360c:	ldr	r1, [r2]
    3610:	cmp	r1, #0
    3614:	bne	35fc <gen_portrangeatom+0x14c>
    3618:	str	r4, [r2]
    361c:	mov	r0, r3
    3620:	ldr	r2, [r3, #44]	; 0x2c
    3624:	clz	r2, r2
    3628:	lsr	r2, r2, #5
    362c:	str	r2, [r3, #44]	; 0x2c
    3630:	ldr	r2, [r4, #96]	; 0x60
    3634:	str	r2, [r3, #96]	; 0x60
    3638:	ldrd	r4, [sp]
    363c:	ldrd	r6, [sp, #8]
    3640:	ldr	r8, [sp, #16]
    3644:	add	sp, sp, #20
    3648:	pop	{pc}		; (ldr pc, [sp], #4)
    364c:	.word	0x0003ae6c

00003650 <gen_llprefixlen>:
    3650:	ldr	r1, [pc, #2964]	; 41ec <gen_llprefixlen+0xb9c>
    3654:	str	r4, [sp, #-8]!
    3658:	str	lr, [sp, #4]
    365c:	add	r1, pc, r1
    3660:	ldr	r3, [r1, #876]	; 0x36c
    3664:	cmp	r3, #127	; 0x7f
    3668:	beq	3c10 <gen_llprefixlen+0x5c0>
    366c:	ble	36a8 <gen_llprefixlen+0x58>
    3670:	cmp	r3, #163	; 0xa3
    3674:	beq	3968 <gen_llprefixlen+0x318>
    3678:	cmp	r3, #192	; 0xc0
    367c:	bne	3958 <gen_llprefixlen+0x308>
    3680:	ldr	r4, [r1, #788]	; 0x314
    3684:	cmn	r4, #1
    3688:	beq	3eb0 <gen_llprefixlen+0x860>
    368c:	bl	22d0 <newchunk.constprop.25>
    3690:	mov	r3, #97	; 0x61
    3694:	str	r3, [r0]
    3698:	str	r4, [r0, #12]
    369c:	ldr	r4, [sp]
    36a0:	add	sp, sp, #4
    36a4:	pop	{pc}		; (ldr pc, [sp], #4)
    36a8:	cmp	r3, #119	; 0x77
    36ac:	bne	3958 <gen_llprefixlen+0x308>
    36b0:	ldr	r4, [r1, #788]	; 0x314
    36b4:	cmn	r4, #1
    36b8:	bne	368c <gen_llprefixlen+0x3c>
    36bc:	ldr	r4, [r1, #804]	; 0x324
    36c0:	lsl	r2, r4, #2
    36c4:	add	r3, r1, r2
    36c8:	ldr	r3, [r3, #808]	; 0x328
    36cc:	cmp	r3, #0
    36d0:	beq	41d0 <gen_llprefixlen+0xb80>
    36d4:	add	r4, r4, #1
    36d8:	rsbs	r3, r4, #0
    36dc:	and	r4, r4, #15
    36e0:	and	r3, r3, #15
    36e4:	rsbpl	r4, r3, #0
    36e8:	lsl	r2, r4, #2
    36ec:	str	r4, [r1, #804]	; 0x324
    36f0:	add	r3, r1, r2
    36f4:	ldr	r3, [r3, #808]	; 0x328
    36f8:	cmp	r3, #0
    36fc:	beq	41d0 <gen_llprefixlen+0xb80>
    3700:	add	r4, r4, #1
    3704:	rsbs	r3, r4, #0
    3708:	and	r4, r4, #15
    370c:	and	r3, r3, #15
    3710:	rsbpl	r4, r3, #0
    3714:	lsl	r2, r4, #2
    3718:	add	r3, r1, r2
    371c:	ldr	r3, [r3, #808]	; 0x328
    3720:	cmp	r3, #0
    3724:	beq	41c4 <gen_llprefixlen+0xb74>
    3728:	add	r4, r4, #1
    372c:	rsbs	r3, r4, #0
    3730:	and	r4, r4, #15
    3734:	and	r3, r3, #15
    3738:	rsbpl	r4, r3, #0
    373c:	lsl	r2, r4, #2
    3740:	add	r3, r1, r2
    3744:	ldr	r3, [r3, #808]	; 0x328
    3748:	cmp	r3, #0
    374c:	beq	41c4 <gen_llprefixlen+0xb74>
    3750:	add	r4, r4, #1
    3754:	rsbs	r3, r4, #0
    3758:	and	r4, r4, #15
    375c:	and	r3, r3, #15
    3760:	rsbpl	r4, r3, #0
    3764:	lsl	r2, r4, #2
    3768:	add	r3, r1, r2
    376c:	ldr	r3, [r3, #808]	; 0x328
    3770:	cmp	r3, #0
    3774:	beq	41c4 <gen_llprefixlen+0xb74>
    3778:	add	r4, r4, #1
    377c:	rsbs	r3, r4, #0
    3780:	and	r4, r4, #15
    3784:	and	r3, r3, #15
    3788:	rsbpl	r4, r3, #0
    378c:	lsl	r2, r4, #2
    3790:	add	r3, r1, r2
    3794:	ldr	r3, [r3, #808]	; 0x328
    3798:	cmp	r3, #0
    379c:	beq	41c4 <gen_llprefixlen+0xb74>
    37a0:	add	r4, r4, #1
    37a4:	ldr	r3, [pc, #2628]	; 41f0 <gen_llprefixlen+0xba0>
    37a8:	rsbs	r2, r4, #0
    37ac:	and	r4, r4, #15
    37b0:	and	r2, r2, #15
    37b4:	rsbpl	r4, r2, #0
    37b8:	lsl	r2, r4, #2
    37bc:	add	r3, pc, r3
    37c0:	add	r1, r3, r2
    37c4:	ldr	r1, [r1, #808]	; 0x328
    37c8:	cmp	r1, #0
    37cc:	beq	41c4 <gen_llprefixlen+0xb74>
    37d0:	add	r4, r4, #1
    37d4:	rsbs	r2, r4, #0
    37d8:	and	r4, r4, #15
    37dc:	and	r2, r2, #15
    37e0:	rsbpl	r4, r2, #0
    37e4:	lsl	r2, r4, #2
    37e8:	add	r1, r3, r2
    37ec:	ldr	r1, [r1, #808]	; 0x328
    37f0:	cmp	r1, #0
    37f4:	beq	41c4 <gen_llprefixlen+0xb74>
    37f8:	add	r4, r4, #1
    37fc:	rsbs	r2, r4, #0
    3800:	and	r4, r4, #15
    3804:	and	r2, r2, #15
    3808:	rsbpl	r4, r2, #0
    380c:	lsl	r2, r4, #2
    3810:	add	r1, r3, r2
    3814:	ldr	r1, [r1, #808]	; 0x328
    3818:	cmp	r1, #0
    381c:	beq	41c4 <gen_llprefixlen+0xb74>
    3820:	add	r4, r4, #1
    3824:	rsbs	r2, r4, #0
    3828:	and	r4, r4, #15
    382c:	and	r2, r2, #15
    3830:	rsbpl	r4, r2, #0
    3834:	lsl	r2, r4, #2
    3838:	add	r1, r3, r2
    383c:	ldr	r1, [r1, #808]	; 0x328
    3840:	cmp	r1, #0
    3844:	beq	41c4 <gen_llprefixlen+0xb74>
    3848:	add	r4, r4, #1
    384c:	rsbs	r2, r4, #0
    3850:	and	r4, r4, #15
    3854:	and	r2, r2, #15
    3858:	rsbpl	r4, r2, #0
    385c:	lsl	r2, r4, #2
    3860:	add	r1, r3, r2
    3864:	ldr	r1, [r1, #808]	; 0x328
    3868:	cmp	r1, #0
    386c:	beq	41c4 <gen_llprefixlen+0xb74>
    3870:	add	r4, r4, #1
    3874:	rsbs	r2, r4, #0
    3878:	and	r4, r4, #15
    387c:	and	r2, r2, #15
    3880:	rsbpl	r4, r2, #0
    3884:	lsl	r2, r4, #2
    3888:	add	r1, r3, r2
    388c:	ldr	r1, [r1, #808]	; 0x328
    3890:	cmp	r1, #0
    3894:	beq	41c4 <gen_llprefixlen+0xb74>
    3898:	add	r4, r4, #1
    389c:	rsbs	r2, r4, #0
    38a0:	and	r4, r4, #15
    38a4:	and	r2, r2, #15
    38a8:	rsbpl	r4, r2, #0
    38ac:	lsl	r2, r4, #2
    38b0:	add	r1, r3, r2
    38b4:	ldr	r1, [r1, #808]	; 0x328
    38b8:	cmp	r1, #0
    38bc:	beq	41c4 <gen_llprefixlen+0xb74>
    38c0:	add	r4, r4, #1
    38c4:	rsbs	r2, r4, #0
    38c8:	and	r4, r4, #15
    38cc:	and	r2, r2, #15
    38d0:	rsbpl	r4, r2, #0
    38d4:	lsl	r2, r4, #2
    38d8:	add	r1, r3, r2
    38dc:	ldr	r1, [r1, #808]	; 0x328
    38e0:	cmp	r1, #0
    38e4:	beq	41c4 <gen_llprefixlen+0xb74>
    38e8:	add	r4, r4, #1
    38ec:	rsbs	r2, r4, #0
    38f0:	and	r4, r4, #15
    38f4:	and	r2, r2, #15
    38f8:	rsbpl	r4, r2, #0
    38fc:	lsl	r2, r4, #2
    3900:	add	r1, r3, r2
    3904:	ldr	r1, [r1, #808]	; 0x328
    3908:	cmp	r1, #0
    390c:	beq	41c4 <gen_llprefixlen+0xb74>
    3910:	add	r4, r4, #1
    3914:	rsbs	r2, r4, #0
    3918:	and	r4, r4, #15
    391c:	and	r2, r2, #15
    3920:	rsbpl	r4, r2, #0
    3924:	lsl	r2, r4, #2
    3928:	add	r3, r3, r2
    392c:	ldr	r3, [r3, #808]	; 0x328
    3930:	cmp	r3, #0
    3934:	beq	41c4 <gen_llprefixlen+0xb74>
    3938:	ldr	r3, [pc, #2228]	; 41f4 <gen_llprefixlen+0xba4>
    393c:	add	r4, r4, #1
    3940:	and	r4, r4, #15
    3944:	ldr	r0, [pc, #2220]	; 41f8 <gen_llprefixlen+0xba8>
    3948:	add	r3, pc, r3
    394c:	add	r0, pc, r0
    3950:	str	r4, [r3, #804]	; 0x324
    3954:	bl	2130 <sf_bpf_error>
    3958:	ldr	r4, [sp]
    395c:	add	sp, sp, #4
    3960:	mov	r0, #0
    3964:	pop	{pc}		; (ldr pc, [sp], #4)
    3968:	ldr	r4, [r1, #788]	; 0x314
    396c:	cmn	r4, #1
    3970:	bne	368c <gen_llprefixlen+0x3c>
    3974:	ldr	r4, [r1, #804]	; 0x324
    3978:	lsl	r2, r4, #2
    397c:	add	r3, r1, r2
    3980:	ldr	r3, [r3, #808]	; 0x328
    3984:	cmp	r3, #0
    3988:	beq	4180 <gen_llprefixlen+0xb30>
    398c:	add	r4, r4, #1
    3990:	rsbs	r3, r4, #0
    3994:	and	r4, r4, #15
    3998:	and	r3, r3, #15
    399c:	rsbpl	r4, r3, #0
    39a0:	lsl	r2, r4, #2
    39a4:	str	r4, [r1, #804]	; 0x324
    39a8:	add	r3, r1, r2
    39ac:	ldr	r3, [r3, #808]	; 0x328
    39b0:	cmp	r3, #0
    39b4:	beq	4180 <gen_llprefixlen+0xb30>
    39b8:	add	r4, r4, #1
    39bc:	rsbs	r3, r4, #0
    39c0:	and	r4, r4, #15
    39c4:	and	r3, r3, #15
    39c8:	rsbpl	r4, r3, #0
    39cc:	lsl	r2, r4, #2
    39d0:	add	r3, r1, r2
    39d4:	ldr	r3, [r3, #808]	; 0x328
    39d8:	cmp	r3, #0
    39dc:	beq	4174 <gen_llprefixlen+0xb24>
    39e0:	add	r4, r4, #1
    39e4:	rsbs	r3, r4, #0
    39e8:	and	r4, r4, #15
    39ec:	and	r3, r3, #15
    39f0:	rsbpl	r4, r3, #0
    39f4:	lsl	r2, r4, #2
    39f8:	add	r3, r1, r2
    39fc:	ldr	r3, [r3, #808]	; 0x328
    3a00:	cmp	r3, #0
    3a04:	beq	4174 <gen_llprefixlen+0xb24>
    3a08:	add	r4, r4, #1
    3a0c:	rsbs	r3, r4, #0
    3a10:	and	r4, r4, #15
    3a14:	and	r3, r3, #15
    3a18:	rsbpl	r4, r3, #0
    3a1c:	lsl	r2, r4, #2
    3a20:	add	r3, r1, r2
    3a24:	ldr	r3, [r3, #808]	; 0x328
    3a28:	cmp	r3, #0
    3a2c:	beq	4174 <gen_llprefixlen+0xb24>
    3a30:	add	r4, r4, #1
    3a34:	rsbs	r3, r4, #0
    3a38:	and	r4, r4, #15
    3a3c:	and	r3, r3, #15
    3a40:	rsbpl	r4, r3, #0
    3a44:	lsl	r2, r4, #2
    3a48:	add	r3, r1, r2
    3a4c:	ldr	r3, [r3, #808]	; 0x328
    3a50:	cmp	r3, #0
    3a54:	beq	4174 <gen_llprefixlen+0xb24>
    3a58:	add	r4, r4, #1
    3a5c:	ldr	r3, [pc, #1944]	; 41fc <gen_llprefixlen+0xbac>
    3a60:	rsbs	r2, r4, #0
    3a64:	and	r4, r4, #15
    3a68:	and	r2, r2, #15
    3a6c:	rsbpl	r4, r2, #0
    3a70:	lsl	r2, r4, #2
    3a74:	add	r3, pc, r3
    3a78:	add	r1, r3, r2
    3a7c:	ldr	r1, [r1, #808]	; 0x328
    3a80:	cmp	r1, #0
    3a84:	beq	4174 <gen_llprefixlen+0xb24>
    3a88:	add	r4, r4, #1
    3a8c:	rsbs	r2, r4, #0
    3a90:	and	r4, r4, #15
    3a94:	and	r2, r2, #15
    3a98:	rsbpl	r4, r2, #0
    3a9c:	lsl	r2, r4, #2
    3aa0:	add	r1, r3, r2
    3aa4:	ldr	r1, [r1, #808]	; 0x328
    3aa8:	cmp	r1, #0
    3aac:	beq	4174 <gen_llprefixlen+0xb24>
    3ab0:	add	r4, r4, #1
    3ab4:	rsbs	r2, r4, #0
    3ab8:	and	r4, r4, #15
    3abc:	and	r2, r2, #15
    3ac0:	rsbpl	r4, r2, #0
    3ac4:	lsl	r2, r4, #2
    3ac8:	add	r1, r3, r2
    3acc:	ldr	r1, [r1, #808]	; 0x328
    3ad0:	cmp	r1, #0
    3ad4:	beq	4174 <gen_llprefixlen+0xb24>
    3ad8:	add	r4, r4, #1
    3adc:	rsbs	r2, r4, #0
    3ae0:	and	r4, r4, #15
    3ae4:	and	r2, r2, #15
    3ae8:	rsbpl	r4, r2, #0
    3aec:	lsl	r2, r4, #2
    3af0:	add	r1, r3, r2
    3af4:	ldr	r1, [r1, #808]	; 0x328
    3af8:	cmp	r1, #0
    3afc:	beq	4174 <gen_llprefixlen+0xb24>
    3b00:	add	r4, r4, #1
    3b04:	rsbs	r2, r4, #0
    3b08:	and	r4, r4, #15
    3b0c:	and	r2, r2, #15
    3b10:	rsbpl	r4, r2, #0
    3b14:	lsl	r2, r4, #2
    3b18:	add	r1, r3, r2
    3b1c:	ldr	r1, [r1, #808]	; 0x328
    3b20:	cmp	r1, #0
    3b24:	beq	4174 <gen_llprefixlen+0xb24>
    3b28:	add	r4, r4, #1
    3b2c:	rsbs	r2, r4, #0
    3b30:	and	r4, r4, #15
    3b34:	and	r2, r2, #15
    3b38:	rsbpl	r4, r2, #0
    3b3c:	lsl	r2, r4, #2
    3b40:	add	r1, r3, r2
    3b44:	ldr	r1, [r1, #808]	; 0x328
    3b48:	cmp	r1, #0
    3b4c:	beq	4174 <gen_llprefixlen+0xb24>
    3b50:	add	r4, r4, #1
    3b54:	rsbs	r2, r4, #0
    3b58:	and	r4, r4, #15
    3b5c:	and	r2, r2, #15
    3b60:	rsbpl	r4, r2, #0
    3b64:	lsl	r2, r4, #2
    3b68:	add	r1, r3, r2
    3b6c:	ldr	r1, [r1, #808]	; 0x328
    3b70:	cmp	r1, #0
    3b74:	beq	4174 <gen_llprefixlen+0xb24>
    3b78:	add	r4, r4, #1
    3b7c:	rsbs	r2, r4, #0
    3b80:	and	r4, r4, #15
    3b84:	and	r2, r2, #15
    3b88:	rsbpl	r4, r2, #0
    3b8c:	lsl	r2, r4, #2
    3b90:	add	r1, r3, r2
    3b94:	ldr	r1, [r1, #808]	; 0x328
    3b98:	cmp	r1, #0
    3b9c:	beq	4174 <gen_llprefixlen+0xb24>
    3ba0:	add	r4, r4, #1
    3ba4:	rsbs	r2, r4, #0
    3ba8:	and	r4, r4, #15
    3bac:	and	r2, r2, #15
    3bb0:	rsbpl	r4, r2, #0
    3bb4:	lsl	r2, r4, #2
    3bb8:	add	r1, r3, r2
    3bbc:	ldr	r1, [r1, #808]	; 0x328
    3bc0:	cmp	r1, #0
    3bc4:	beq	4174 <gen_llprefixlen+0xb24>
    3bc8:	add	r4, r4, #1
    3bcc:	rsbs	r2, r4, #0
    3bd0:	and	r4, r4, #15
    3bd4:	and	r2, r2, #15
    3bd8:	rsbpl	r4, r2, #0
    3bdc:	lsl	r2, r4, #2
    3be0:	add	r3, r3, r2
    3be4:	ldr	r3, [r3, #808]	; 0x328
    3be8:	cmp	r3, #0
    3bec:	beq	4174 <gen_llprefixlen+0xb24>
    3bf0:	ldr	r3, [pc, #1544]	; 4200 <gen_llprefixlen+0xbb0>
    3bf4:	add	r4, r4, #1
    3bf8:	and	r4, r4, #15
    3bfc:	ldr	r0, [pc, #1536]	; 4204 <gen_llprefixlen+0xbb4>
    3c00:	add	r3, pc, r3
    3c04:	add	r0, pc, r0
    3c08:	str	r4, [r3, #804]	; 0x324
    3c0c:	bl	2130 <sf_bpf_error>
    3c10:	ldr	r4, [r1, #788]	; 0x314
    3c14:	cmn	r4, #1
    3c18:	bne	368c <gen_llprefixlen+0x3c>
    3c1c:	ldr	r4, [r1, #804]	; 0x324
    3c20:	lsl	r2, r4, #2
    3c24:	add	r3, r1, r2
    3c28:	ldr	r3, [r3, #808]	; 0x328
    3c2c:	cmp	r3, #0
    3c30:	beq	41a8 <gen_llprefixlen+0xb58>
    3c34:	add	r4, r4, #1
    3c38:	rsbs	r3, r4, #0
    3c3c:	and	r4, r4, #15
    3c40:	and	r3, r3, #15
    3c44:	rsbpl	r4, r3, #0
    3c48:	lsl	r2, r4, #2
    3c4c:	str	r4, [r1, #804]	; 0x324
    3c50:	add	r3, r1, r2
    3c54:	ldr	r3, [r3, #808]	; 0x328
    3c58:	cmp	r3, #0
    3c5c:	beq	41a8 <gen_llprefixlen+0xb58>
    3c60:	add	r4, r4, #1
    3c64:	rsbs	r3, r4, #0
    3c68:	and	r4, r4, #15
    3c6c:	and	r3, r3, #15
    3c70:	rsbpl	r4, r3, #0
    3c74:	lsl	r2, r4, #2
    3c78:	add	r3, r1, r2
    3c7c:	ldr	r3, [r3, #808]	; 0x328
    3c80:	cmp	r3, #0
    3c84:	beq	419c <gen_llprefixlen+0xb4c>
    3c88:	add	r4, r4, #1
    3c8c:	rsbs	r3, r4, #0
    3c90:	and	r4, r4, #15
    3c94:	and	r3, r3, #15
    3c98:	rsbpl	r4, r3, #0
    3c9c:	lsl	r2, r4, #2
    3ca0:	add	r3, r1, r2
    3ca4:	ldr	r3, [r3, #808]	; 0x328
    3ca8:	cmp	r3, #0
    3cac:	beq	419c <gen_llprefixlen+0xb4c>
    3cb0:	add	r4, r4, #1
    3cb4:	rsbs	r3, r4, #0
    3cb8:	and	r4, r4, #15
    3cbc:	and	r3, r3, #15
    3cc0:	rsbpl	r4, r3, #0
    3cc4:	lsl	r2, r4, #2
    3cc8:	add	r3, r1, r2
    3ccc:	ldr	r3, [r3, #808]	; 0x328
    3cd0:	cmp	r3, #0
    3cd4:	beq	419c <gen_llprefixlen+0xb4c>
    3cd8:	add	r4, r4, #1
    3cdc:	rsbs	r3, r4, #0
    3ce0:	and	r4, r4, #15
    3ce4:	and	r3, r3, #15
    3ce8:	rsbpl	r4, r3, #0
    3cec:	lsl	r2, r4, #2
    3cf0:	add	r3, r1, r2
    3cf4:	ldr	r3, [r3, #808]	; 0x328
    3cf8:	cmp	r3, #0
    3cfc:	beq	419c <gen_llprefixlen+0xb4c>
    3d00:	add	r4, r4, #1
    3d04:	rsbs	r3, r4, #0
    3d08:	and	r4, r4, #15
    3d0c:	and	r3, r3, #15
    3d10:	rsbpl	r4, r3, #0
    3d14:	lsl	r2, r4, #2
    3d18:	add	r3, r1, r2
    3d1c:	ldr	r3, [r3, #808]	; 0x328
    3d20:	cmp	r3, #0
    3d24:	beq	419c <gen_llprefixlen+0xb4c>
    3d28:	add	r4, r4, #1
    3d2c:	rsbs	r3, r4, #0
    3d30:	and	r4, r4, #15
    3d34:	and	r3, r3, #15
    3d38:	rsbpl	r4, r3, #0
    3d3c:	lsl	r2, r4, #2
    3d40:	add	r3, r1, r2
    3d44:	ldr	r3, [r3, #808]	; 0x328
    3d48:	cmp	r3, #0
    3d4c:	beq	419c <gen_llprefixlen+0xb4c>
    3d50:	add	r4, r4, #1
    3d54:	ldr	r3, [pc, #1196]	; 4208 <gen_llprefixlen+0xbb8>
    3d58:	rsbs	r2, r4, #0
    3d5c:	and	r4, r4, #15
    3d60:	and	r2, r2, #15
    3d64:	rsbpl	r4, r2, #0
    3d68:	lsl	r2, r4, #2
    3d6c:	add	r3, pc, r3
    3d70:	add	r1, r3, r2
    3d74:	ldr	r1, [r1, #808]	; 0x328
    3d78:	cmp	r1, #0
    3d7c:	beq	419c <gen_llprefixlen+0xb4c>
    3d80:	add	r4, r4, #1
    3d84:	rsbs	r2, r4, #0
    3d88:	and	r4, r4, #15
    3d8c:	and	r2, r2, #15
    3d90:	rsbpl	r4, r2, #0
    3d94:	lsl	r2, r4, #2
    3d98:	add	r1, r3, r2
    3d9c:	ldr	r1, [r1, #808]	; 0x328
    3da0:	cmp	r1, #0
    3da4:	beq	419c <gen_llprefixlen+0xb4c>
    3da8:	add	r4, r4, #1
    3dac:	rsbs	r2, r4, #0
    3db0:	and	r4, r4, #15
    3db4:	and	r2, r2, #15
    3db8:	rsbpl	r4, r2, #0
    3dbc:	lsl	r2, r4, #2
    3dc0:	add	r1, r3, r2
    3dc4:	ldr	r1, [r1, #808]	; 0x328
    3dc8:	cmp	r1, #0
    3dcc:	beq	419c <gen_llprefixlen+0xb4c>
    3dd0:	add	r4, r4, #1
    3dd4:	rsbs	r2, r4, #0
    3dd8:	and	r4, r4, #15
    3ddc:	and	r2, r2, #15
    3de0:	rsbpl	r4, r2, #0
    3de4:	lsl	r2, r4, #2
    3de8:	add	r1, r3, r2
    3dec:	ldr	r1, [r1, #808]	; 0x328
    3df0:	cmp	r1, #0
    3df4:	beq	419c <gen_llprefixlen+0xb4c>
    3df8:	add	r4, r4, #1
    3dfc:	rsbs	r2, r4, #0
    3e00:	and	r4, r4, #15
    3e04:	and	r2, r2, #15
    3e08:	rsbpl	r4, r2, #0
    3e0c:	lsl	r2, r4, #2
    3e10:	add	r1, r3, r2
    3e14:	ldr	r1, [r1, #808]	; 0x328
    3e18:	cmp	r1, #0
    3e1c:	beq	419c <gen_llprefixlen+0xb4c>
    3e20:	add	r4, r4, #1
    3e24:	rsbs	r2, r4, #0
    3e28:	and	r4, r4, #15
    3e2c:	and	r2, r2, #15
    3e30:	rsbpl	r4, r2, #0
    3e34:	lsl	r2, r4, #2
    3e38:	add	r1, r3, r2
    3e3c:	ldr	r1, [r1, #808]	; 0x328
    3e40:	cmp	r1, #0
    3e44:	beq	419c <gen_llprefixlen+0xb4c>
    3e48:	add	r4, r4, #1
    3e4c:	rsbs	r2, r4, #0
    3e50:	and	r4, r4, #15
    3e54:	and	r2, r2, #15
    3e58:	rsbpl	r4, r2, #0
    3e5c:	lsl	r2, r4, #2
    3e60:	add	r1, r3, r2
    3e64:	ldr	r1, [r1, #808]	; 0x328
    3e68:	cmp	r1, #0
    3e6c:	beq	419c <gen_llprefixlen+0xb4c>
    3e70:	add	r4, r4, #1
    3e74:	rsbs	r2, r4, #0
    3e78:	and	r4, r4, #15
    3e7c:	and	r2, r2, #15
    3e80:	rsbpl	r4, r2, #0
    3e84:	lsl	r2, r4, #2
    3e88:	add	r1, r3, r2
    3e8c:	ldr	r1, [r1, #808]	; 0x328
    3e90:	cmp	r1, #0
    3e94:	beq	419c <gen_llprefixlen+0xb4c>
    3e98:	ldr	r0, [pc, #876]	; 420c <gen_llprefixlen+0xbbc>
    3e9c:	add	r4, r4, #1
    3ea0:	and	r4, r4, #15
    3ea4:	str	r4, [r3, #804]	; 0x324
    3ea8:	add	r0, pc, r0
    3eac:	bl	2130 <sf_bpf_error>
    3eb0:	ldr	r4, [r1, #804]	; 0x324
    3eb4:	lsl	r2, r4, #2
    3eb8:	add	r3, r1, r2
    3ebc:	ldr	r3, [r3, #808]	; 0x328
    3ec0:	cmp	r3, #0
    3ec4:	beq	4158 <gen_llprefixlen+0xb08>
    3ec8:	add	r4, r4, #1
    3ecc:	rsbs	r2, r4, #0
    3ed0:	and	r4, r4, #15
    3ed4:	and	r2, r2, #15
    3ed8:	rsbpl	r4, r2, #0
    3edc:	lsl	r2, r4, #2
    3ee0:	str	r4, [r1, #804]	; 0x324
    3ee4:	add	r3, r1, r2
    3ee8:	ldr	r3, [r3, #808]	; 0x328
    3eec:	cmp	r3, #0
    3ef0:	beq	4158 <gen_llprefixlen+0xb08>
    3ef4:	add	r4, r4, #1
    3ef8:	rsbs	r3, r4, #0
    3efc:	and	r4, r4, #15
    3f00:	and	r3, r3, #15
    3f04:	rsbpl	r4, r3, #0
    3f08:	lsl	r2, r4, #2
    3f0c:	add	r3, r1, r2
    3f10:	ldr	r3, [r3, #808]	; 0x328
    3f14:	cmp	r3, #0
    3f18:	beq	414c <gen_llprefixlen+0xafc>
    3f1c:	add	r4, r4, #1
    3f20:	rsbs	r3, r4, #0
    3f24:	and	r4, r4, #15
    3f28:	and	r3, r3, #15
    3f2c:	rsbpl	r4, r3, #0
    3f30:	lsl	r2, r4, #2
    3f34:	add	r3, r1, r2
    3f38:	ldr	r3, [r3, #808]	; 0x328
    3f3c:	cmp	r3, #0
    3f40:	beq	414c <gen_llprefixlen+0xafc>
    3f44:	add	r4, r4, #1
    3f48:	rsbs	r3, r4, #0
    3f4c:	and	r4, r4, #15
    3f50:	and	r3, r3, #15
    3f54:	rsbpl	r4, r3, #0
    3f58:	lsl	r2, r4, #2
    3f5c:	add	r3, r1, r2
    3f60:	ldr	r3, [r3, #808]	; 0x328
    3f64:	cmp	r3, #0
    3f68:	beq	414c <gen_llprefixlen+0xafc>
    3f6c:	add	r4, r4, #1
    3f70:	ldr	r3, [pc, #664]	; 4210 <gen_llprefixlen+0xbc0>
    3f74:	rsbs	r2, r4, #0
    3f78:	and	r4, r4, #15
    3f7c:	and	r2, r2, #15
    3f80:	rsbpl	r4, r2, #0
    3f84:	lsl	r2, r4, #2
    3f88:	add	r3, pc, r3
    3f8c:	add	r1, r3, r2
    3f90:	ldr	r1, [r1, #808]	; 0x328
    3f94:	cmp	r1, #0
    3f98:	beq	414c <gen_llprefixlen+0xafc>
    3f9c:	add	r4, r4, #1
    3fa0:	rsbs	r2, r4, #0
    3fa4:	and	r4, r4, #15
    3fa8:	and	r2, r2, #15
    3fac:	rsbpl	r4, r2, #0
    3fb0:	lsl	r2, r4, #2
    3fb4:	add	r1, r3, r2
    3fb8:	ldr	r1, [r1, #808]	; 0x328
    3fbc:	cmp	r1, #0
    3fc0:	beq	414c <gen_llprefixlen+0xafc>
    3fc4:	add	r4, r4, #1
    3fc8:	rsbs	r2, r4, #0
    3fcc:	and	r4, r4, #15
    3fd0:	and	r2, r2, #15
    3fd4:	rsbpl	r4, r2, #0
    3fd8:	lsl	r2, r4, #2
    3fdc:	add	r1, r3, r2
    3fe0:	ldr	r1, [r1, #808]	; 0x328
    3fe4:	cmp	r1, #0
    3fe8:	beq	414c <gen_llprefixlen+0xafc>
    3fec:	add	r4, r4, #1
    3ff0:	rsbs	r2, r4, #0
    3ff4:	and	r4, r4, #15
    3ff8:	and	r2, r2, #15
    3ffc:	rsbpl	r4, r2, #0
    4000:	lsl	r2, r4, #2
    4004:	add	r1, r3, r2
    4008:	ldr	r1, [r1, #808]	; 0x328
    400c:	cmp	r1, #0
    4010:	beq	414c <gen_llprefixlen+0xafc>
    4014:	add	r4, r4, #1
    4018:	rsbs	r2, r4, #0
    401c:	and	r4, r4, #15
    4020:	and	r2, r2, #15
    4024:	rsbpl	r4, r2, #0
    4028:	lsl	r2, r4, #2
    402c:	add	r1, r3, r2
    4030:	ldr	r1, [r1, #808]	; 0x328
    4034:	cmp	r1, #0
    4038:	beq	414c <gen_llprefixlen+0xafc>
    403c:	add	r4, r4, #1
    4040:	rsbs	r2, r4, #0
    4044:	and	r4, r4, #15
    4048:	and	r2, r2, #15
    404c:	rsbpl	r4, r2, #0
    4050:	lsl	r2, r4, #2
    4054:	add	r1, r3, r2
    4058:	ldr	r1, [r1, #808]	; 0x328
    405c:	cmp	r1, #0
    4060:	beq	414c <gen_llprefixlen+0xafc>
    4064:	add	r4, r4, #1
    4068:	rsbs	r2, r4, #0
    406c:	and	r4, r4, #15
    4070:	and	r2, r2, #15
    4074:	rsbpl	r4, r2, #0
    4078:	lsl	r2, r4, #2
    407c:	add	r1, r3, r2
    4080:	ldr	r1, [r1, #808]	; 0x328
    4084:	cmp	r1, #0
    4088:	beq	414c <gen_llprefixlen+0xafc>
    408c:	add	r4, r4, #1
    4090:	rsbs	r2, r4, #0
    4094:	and	r4, r4, #15
    4098:	and	r2, r2, #15
    409c:	rsbpl	r4, r2, #0
    40a0:	lsl	r2, r4, #2
    40a4:	add	r1, r3, r2
    40a8:	ldr	r1, [r1, #808]	; 0x328
    40ac:	cmp	r1, #0
    40b0:	beq	414c <gen_llprefixlen+0xafc>
    40b4:	add	r4, r4, #1
    40b8:	rsbs	r2, r4, #0
    40bc:	and	r4, r4, #15
    40c0:	and	r2, r2, #15
    40c4:	rsbpl	r4, r2, #0
    40c8:	lsl	r2, r4, #2
    40cc:	add	r1, r3, r2
    40d0:	ldr	r1, [r1, #808]	; 0x328
    40d4:	cmp	r1, #0
    40d8:	beq	414c <gen_llprefixlen+0xafc>
    40dc:	add	r4, r4, #1
    40e0:	rsbs	r2, r4, #0
    40e4:	and	r4, r4, #15
    40e8:	and	r2, r2, #15
    40ec:	rsbpl	r4, r2, #0
    40f0:	lsl	r2, r4, #2
    40f4:	add	r3, r3, r2
    40f8:	ldr	r3, [r3, #808]	; 0x328
    40fc:	cmp	r3, #0
    4100:	beq	414c <gen_llprefixlen+0xafc>
    4104:	add	r4, r4, #1
    4108:	ldr	r1, [pc, #260]	; 4214 <gen_llprefixlen+0xbc4>
    410c:	rsbs	r3, r4, #0
    4110:	and	r4, r4, #15
    4114:	and	r3, r3, #15
    4118:	rsbpl	r4, r3, #0
    411c:	lsl	r2, r4, #2
    4120:	add	r1, pc, r1
    4124:	add	r3, r1, r2
    4128:	ldr	r3, [r3, #808]	; 0x328
    412c:	cmp	r3, #0
    4130:	beq	414c <gen_llprefixlen+0xafc>
    4134:	ldr	r0, [pc, #220]	; 4218 <gen_llprefixlen+0xbc8>
    4138:	add	r4, r4, #1
    413c:	and	r4, r4, #15
    4140:	str	r4, [r1, #804]	; 0x324
    4144:	add	r0, pc, r0
    4148:	bl	2130 <sf_bpf_error>
    414c:	ldr	r3, [pc, #200]	; 421c <gen_llprefixlen+0xbcc>
    4150:	add	r3, pc, r3
    4154:	str	r4, [r3, #804]	; 0x324
    4158:	ldr	r3, [pc, #192]	; 4220 <gen_llprefixlen+0xbd0>
    415c:	mov	r1, #1
    4160:	add	r3, pc, r3
    4164:	add	r2, r3, r2
    4168:	str	r4, [r3, #788]	; 0x314
    416c:	str	r1, [r2, #808]	; 0x328
    4170:	b	368c <gen_llprefixlen+0x3c>
    4174:	ldr	r3, [pc, #168]	; 4224 <gen_llprefixlen+0xbd4>
    4178:	add	r3, pc, r3
    417c:	str	r4, [r3, #804]	; 0x324
    4180:	ldr	r3, [pc, #160]	; 4228 <gen_llprefixlen+0xbd8>
    4184:	mov	r1, #1
    4188:	add	r3, pc, r3
    418c:	add	r2, r3, r2
    4190:	str	r4, [r3, #788]	; 0x314
    4194:	str	r1, [r2, #808]	; 0x328
    4198:	b	368c <gen_llprefixlen+0x3c>
    419c:	ldr	r3, [pc, #136]	; 422c <gen_llprefixlen+0xbdc>
    41a0:	add	r3, pc, r3
    41a4:	str	r4, [r3, #804]	; 0x324
    41a8:	ldr	r3, [pc, #128]	; 4230 <gen_llprefixlen+0xbe0>
    41ac:	mov	r1, #1
    41b0:	add	r3, pc, r3
    41b4:	add	r2, r3, r2
    41b8:	str	r4, [r3, #788]	; 0x314
    41bc:	str	r1, [r2, #808]	; 0x328
    41c0:	b	368c <gen_llprefixlen+0x3c>
    41c4:	ldr	r3, [pc, #104]	; 4234 <gen_llprefixlen+0xbe4>
    41c8:	add	r3, pc, r3
    41cc:	str	r4, [r3, #804]	; 0x324
    41d0:	ldr	r3, [pc, #96]	; 4238 <gen_llprefixlen+0xbe8>
    41d4:	mov	r1, #1
    41d8:	add	r3, pc, r3
    41dc:	add	r2, r3, r2
    41e0:	str	r4, [r3, #788]	; 0x314
    41e4:	str	r1, [r2, #808]	; 0x328
    41e8:	b	368c <gen_llprefixlen+0x3c>
    41ec:	.word	0x0003ad04
    41f0:	.word	0x0003aba4
    41f4:	.word	0x0003aa18
    41f8:	.word	0x0001c8b0
    41fc:	.word	0x0003a8ec
    4200:	.word	0x0003a760
    4204:	.word	0x0001c5f8
    4208:	.word	0x0003a5f4
    420c:	.word	0x0001c354
    4210:	.word	0x0003a3d8
    4214:	.word	0x0003a240
    4218:	.word	0x0001c0b8
    421c:	.word	0x0003a210
    4220:	.word	0x0003a200
    4224:	.word	0x0003a1e8
    4228:	.word	0x0003a1d8
    422c:	.word	0x0003a1c0
    4230:	.word	0x0003a1b0
    4234:	.word	0x0003a198
    4238:	.word	0x0003a188

0000423c <gen_load_llrel.constprop.24>:
    423c:	ldr	r2, [pc, #3052]	; 4e30 <gen_load_llrel.constprop.24+0xbf4>
    4240:	strd	r4, [sp, #-16]!
    4244:	str	r6, [sp, #8]
    4248:	mov	r6, r0
    424c:	str	lr, [sp, #12]
    4250:	add	r2, pc, r2
    4254:	ldr	r3, [r2, #876]	; 0x36c
    4258:	cmp	r3, #127	; 0x7f
    425c:	beq	45ac <gen_load_llrel.constprop.24+0x370>
    4260:	ble	42d4 <gen_load_llrel.constprop.24+0x98>
    4264:	cmp	r3, #163	; 0xa3
    4268:	beq	484c <gen_load_llrel.constprop.24+0x610>
    426c:	cmp	r3, #192	; 0xc0
    4270:	bne	4584 <gen_load_llrel.constprop.24+0x348>
    4274:	ldr	r5, [r2, #788]	; 0x314
    4278:	cmn	r5, #1
    427c:	beq	4af4 <gen_load_llrel.constprop.24+0x8b8>
    4280:	bl	22d0 <newchunk.constprop.25>
    4284:	mov	r3, #97	; 0x61
    4288:	mov	r4, r0
    428c:	str	r3, [r0]
    4290:	str	r5, [r0, #12]
    4294:	bl	22d0 <newchunk.constprop.25>
    4298:	mov	r3, #80	; 0x50
    429c:	mov	r2, r4
    42a0:	str	r3, [r0]
    42a4:	str	r6, [r0, #12]
    42a8:	b	42b0 <gen_load_llrel.constprop.24+0x74>
    42ac:	mov	r2, r3
    42b0:	ldr	r3, [r2, #16]
    42b4:	cmp	r3, #0
    42b8:	bne	42ac <gen_load_llrel.constprop.24+0x70>
    42bc:	str	r0, [r2, #16]
    42c0:	mov	r0, r4
    42c4:	ldrd	r4, [sp]
    42c8:	ldr	r6, [sp, #8]
    42cc:	add	sp, sp, #12
    42d0:	pop	{pc}		; (ldr pc, [sp], #4)
    42d4:	cmp	r3, #119	; 0x77
    42d8:	bne	4584 <gen_load_llrel.constprop.24+0x348>
    42dc:	ldr	r5, [r2, #788]	; 0x314
    42e0:	cmn	r5, #1
    42e4:	bne	4280 <gen_load_llrel.constprop.24+0x44>
    42e8:	ldr	r5, [r2, #804]	; 0x324
    42ec:	lsl	r3, r5, #2
    42f0:	add	r1, r2, r3
    42f4:	ldr	r1, [r1, #808]	; 0x328
    42f8:	cmp	r1, #0
    42fc:	beq	4dc4 <gen_load_llrel.constprop.24+0xb88>
    4300:	add	r5, r5, #1
    4304:	rsbs	r3, r5, #0
    4308:	and	r5, r5, #15
    430c:	and	r3, r3, #15
    4310:	rsbpl	r5, r3, #0
    4314:	lsl	r3, r5, #2
    4318:	str	r5, [r2, #804]	; 0x324
    431c:	add	r1, r2, r3
    4320:	ldr	r1, [r1, #808]	; 0x328
    4324:	cmp	r1, #0
    4328:	beq	4dc4 <gen_load_llrel.constprop.24+0xb88>
    432c:	add	r5, r5, #1
    4330:	rsbs	r3, r5, #0
    4334:	and	r5, r5, #15
    4338:	and	r3, r3, #15
    433c:	rsbpl	r5, r3, #0
    4340:	lsl	r3, r5, #2
    4344:	add	r1, r2, r3
    4348:	ldr	r1, [r1, #808]	; 0x328
    434c:	cmp	r1, #0
    4350:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    4354:	add	r5, r5, #1
    4358:	rsbs	r3, r5, #0
    435c:	and	r5, r5, #15
    4360:	and	r3, r3, #15
    4364:	rsbpl	r5, r3, #0
    4368:	lsl	r3, r5, #2
    436c:	add	r1, r2, r3
    4370:	ldr	r1, [r1, #808]	; 0x328
    4374:	cmp	r1, #0
    4378:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    437c:	add	r5, r5, #1
    4380:	rsbs	r3, r5, #0
    4384:	and	r5, r5, #15
    4388:	and	r3, r3, #15
    438c:	rsbpl	r5, r3, #0
    4390:	lsl	r3, r5, #2
    4394:	add	r1, r2, r3
    4398:	ldr	r1, [r1, #808]	; 0x328
    439c:	cmp	r1, #0
    43a0:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    43a4:	add	r5, r5, #1
    43a8:	rsbs	r3, r5, #0
    43ac:	and	r5, r5, #15
    43b0:	and	r3, r3, #15
    43b4:	rsbpl	r5, r3, #0
    43b8:	lsl	r3, r5, #2
    43bc:	add	r2, r2, r3
    43c0:	ldr	r2, [r2, #808]	; 0x328
    43c4:	cmp	r2, #0
    43c8:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    43cc:	add	r5, r5, #1
    43d0:	ldr	r2, [pc, #2652]	; 4e34 <gen_load_llrel.constprop.24+0xbf8>
    43d4:	rsbs	r3, r5, #0
    43d8:	and	r5, r5, #15
    43dc:	and	r3, r3, #15
    43e0:	rsbpl	r5, r3, #0
    43e4:	lsl	r3, r5, #2
    43e8:	add	r2, pc, r2
    43ec:	add	r1, r2, r3
    43f0:	ldr	r1, [r1, #808]	; 0x328
    43f4:	cmp	r1, #0
    43f8:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    43fc:	add	r5, r5, #1
    4400:	rsbs	r3, r5, #0
    4404:	and	r5, r5, #15
    4408:	and	r3, r3, #15
    440c:	rsbpl	r5, r3, #0
    4410:	lsl	r3, r5, #2
    4414:	add	r1, r2, r3
    4418:	ldr	r1, [r1, #808]	; 0x328
    441c:	cmp	r1, #0
    4420:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    4424:	add	r5, r5, #1
    4428:	rsbs	r3, r5, #0
    442c:	and	r5, r5, #15
    4430:	and	r3, r3, #15
    4434:	rsbpl	r5, r3, #0
    4438:	lsl	r3, r5, #2
    443c:	add	r1, r2, r3
    4440:	ldr	r1, [r1, #808]	; 0x328
    4444:	cmp	r1, #0
    4448:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    444c:	add	r5, r5, #1
    4450:	rsbs	r3, r5, #0
    4454:	and	r5, r5, #15
    4458:	and	r3, r3, #15
    445c:	rsbpl	r5, r3, #0
    4460:	lsl	r3, r5, #2
    4464:	add	r1, r2, r3
    4468:	ldr	r1, [r1, #808]	; 0x328
    446c:	cmp	r1, #0
    4470:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    4474:	add	r5, r5, #1
    4478:	rsbs	r3, r5, #0
    447c:	and	r5, r5, #15
    4480:	and	r3, r3, #15
    4484:	rsbpl	r5, r3, #0
    4488:	lsl	r3, r5, #2
    448c:	add	r1, r2, r3
    4490:	ldr	r1, [r1, #808]	; 0x328
    4494:	cmp	r1, #0
    4498:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    449c:	add	r5, r5, #1
    44a0:	rsbs	r3, r5, #0
    44a4:	and	r5, r5, #15
    44a8:	and	r3, r3, #15
    44ac:	rsbpl	r5, r3, #0
    44b0:	lsl	r3, r5, #2
    44b4:	add	r1, r2, r3
    44b8:	ldr	r1, [r1, #808]	; 0x328
    44bc:	cmp	r1, #0
    44c0:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    44c4:	add	r5, r5, #1
    44c8:	rsbs	r3, r5, #0
    44cc:	and	r5, r5, #15
    44d0:	and	r3, r3, #15
    44d4:	rsbpl	r5, r3, #0
    44d8:	lsl	r3, r5, #2
    44dc:	add	r1, r2, r3
    44e0:	ldr	r1, [r1, #808]	; 0x328
    44e4:	cmp	r1, #0
    44e8:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    44ec:	add	r5, r5, #1
    44f0:	rsbs	r3, r5, #0
    44f4:	and	r5, r5, #15
    44f8:	and	r3, r3, #15
    44fc:	rsbpl	r5, r3, #0
    4500:	lsl	r3, r5, #2
    4504:	add	r1, r2, r3
    4508:	ldr	r1, [r1, #808]	; 0x328
    450c:	cmp	r1, #0
    4510:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    4514:	add	r5, r5, #1
    4518:	rsbs	r3, r5, #0
    451c:	and	r5, r5, #15
    4520:	and	r3, r3, #15
    4524:	rsbpl	r5, r3, #0
    4528:	lsl	r3, r5, #2
    452c:	add	r1, r2, r3
    4530:	ldr	r1, [r1, #808]	; 0x328
    4534:	cmp	r1, #0
    4538:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    453c:	add	r5, r5, #1
    4540:	rsbs	r3, r5, #0
    4544:	and	r5, r5, #15
    4548:	and	r3, r3, #15
    454c:	rsbpl	r5, r3, #0
    4550:	lsl	r3, r5, #2
    4554:	add	r2, r2, r3
    4558:	ldr	r2, [r2, #808]	; 0x328
    455c:	cmp	r2, #0
    4560:	beq	4db8 <gen_load_llrel.constprop.24+0xb7c>
    4564:	ldr	r2, [pc, #2252]	; 4e38 <gen_load_llrel.constprop.24+0xbfc>
    4568:	add	r3, r5, #1
    456c:	and	r3, r3, #15
    4570:	ldr	r0, [pc, #2244]	; 4e3c <gen_load_llrel.constprop.24+0xc00>
    4574:	add	r2, pc, r2
    4578:	add	r0, pc, r0
    457c:	str	r3, [r2, #804]	; 0x324
    4580:	bl	2130 <sf_bpf_error>
    4584:	bl	22d0 <newchunk.constprop.25>
    4588:	ldr	r3, [pc, #2224]	; 4e40 <gen_load_llrel.constprop.24+0xc04>
    458c:	mov	r2, #48	; 0x30
    4590:	mov	r4, r0
    4594:	str	r2, [r0]
    4598:	add	r3, pc, r3
    459c:	ldr	r3, [r3, #880]	; 0x370
    45a0:	add	r6, r3, r6
    45a4:	str	r6, [r0, #12]
    45a8:	b	42c0 <gen_load_llrel.constprop.24+0x84>
    45ac:	ldr	r5, [r2, #788]	; 0x314
    45b0:	cmn	r5, #1
    45b4:	bne	4280 <gen_load_llrel.constprop.24+0x44>
    45b8:	ldr	r5, [r2, #804]	; 0x324
    45bc:	lsl	r3, r5, #2
    45c0:	add	r1, r2, r3
    45c4:	ldr	r1, [r1, #808]	; 0x328
    45c8:	cmp	r1, #0
    45cc:	beq	4e14 <gen_load_llrel.constprop.24+0xbd8>
    45d0:	add	r5, r5, #1
    45d4:	rsbs	r3, r5, #0
    45d8:	and	r5, r5, #15
    45dc:	and	r3, r3, #15
    45e0:	rsbpl	r5, r3, #0
    45e4:	lsl	r3, r5, #2
    45e8:	str	r5, [r2, #804]	; 0x324
    45ec:	add	r1, r2, r3
    45f0:	ldr	r1, [r1, #808]	; 0x328
    45f4:	cmp	r1, #0
    45f8:	beq	4e14 <gen_load_llrel.constprop.24+0xbd8>
    45fc:	add	r5, r5, #1
    4600:	rsbs	r3, r5, #0
    4604:	and	r5, r5, #15
    4608:	and	r3, r3, #15
    460c:	rsbpl	r5, r3, #0
    4610:	lsl	r3, r5, #2
    4614:	add	r1, r2, r3
    4618:	ldr	r1, [r1, #808]	; 0x328
    461c:	cmp	r1, #0
    4620:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    4624:	add	r5, r5, #1
    4628:	rsbs	r3, r5, #0
    462c:	and	r5, r5, #15
    4630:	and	r3, r3, #15
    4634:	rsbpl	r5, r3, #0
    4638:	lsl	r3, r5, #2
    463c:	add	r1, r2, r3
    4640:	ldr	r1, [r1, #808]	; 0x328
    4644:	cmp	r1, #0
    4648:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    464c:	add	r5, r5, #1
    4650:	rsbs	r3, r5, #0
    4654:	and	r5, r5, #15
    4658:	and	r3, r3, #15
    465c:	rsbpl	r5, r3, #0
    4660:	lsl	r3, r5, #2
    4664:	add	r1, r2, r3
    4668:	ldr	r1, [r1, #808]	; 0x328
    466c:	cmp	r1, #0
    4670:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    4674:	add	r5, r5, #1
    4678:	rsbs	r3, r5, #0
    467c:	and	r5, r5, #15
    4680:	and	r3, r3, #15
    4684:	rsbpl	r5, r3, #0
    4688:	lsl	r3, r5, #2
    468c:	add	r1, r2, r3
    4690:	ldr	r1, [r1, #808]	; 0x328
    4694:	cmp	r1, #0
    4698:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    469c:	add	r5, r5, #1
    46a0:	rsbs	r3, r5, #0
    46a4:	and	r5, r5, #15
    46a8:	and	r3, r3, #15
    46ac:	rsbpl	r5, r3, #0
    46b0:	lsl	r3, r5, #2
    46b4:	add	r1, r2, r3
    46b8:	ldr	r1, [r1, #808]	; 0x328
    46bc:	cmp	r1, #0
    46c0:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    46c4:	add	r5, r5, #1
    46c8:	rsbs	r3, r5, #0
    46cc:	and	r5, r5, #15
    46d0:	and	r3, r3, #15
    46d4:	rsbpl	r5, r3, #0
    46d8:	lsl	r3, r5, #2
    46dc:	add	r2, r2, r3
    46e0:	ldr	r2, [r2, #808]	; 0x328
    46e4:	cmp	r2, #0
    46e8:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    46ec:	add	r5, r5, #1
    46f0:	ldr	r2, [pc, #1868]	; 4e44 <gen_load_llrel.constprop.24+0xc08>
    46f4:	rsbs	r3, r5, #0
    46f8:	and	r5, r5, #15
    46fc:	and	r3, r3, #15
    4700:	rsbpl	r5, r3, #0
    4704:	lsl	r3, r5, #2
    4708:	add	r2, pc, r2
    470c:	add	r1, r2, r3
    4710:	ldr	r1, [r1, #808]	; 0x328
    4714:	cmp	r1, #0
    4718:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    471c:	add	r5, r5, #1
    4720:	rsbs	r3, r5, #0
    4724:	and	r5, r5, #15
    4728:	and	r3, r3, #15
    472c:	rsbpl	r5, r3, #0
    4730:	lsl	r3, r5, #2
    4734:	add	r1, r2, r3
    4738:	ldr	r1, [r1, #808]	; 0x328
    473c:	cmp	r1, #0
    4740:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    4744:	add	r5, r5, #1
    4748:	rsbs	r3, r5, #0
    474c:	and	r5, r5, #15
    4750:	and	r3, r3, #15
    4754:	rsbpl	r5, r3, #0
    4758:	lsl	r3, r5, #2
    475c:	add	r1, r2, r3
    4760:	ldr	r1, [r1, #808]	; 0x328
    4764:	cmp	r1, #0
    4768:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    476c:	add	r5, r5, #1
    4770:	rsbs	r3, r5, #0
    4774:	and	r5, r5, #15
    4778:	and	r3, r3, #15
    477c:	rsbpl	r5, r3, #0
    4780:	lsl	r3, r5, #2
    4784:	add	r1, r2, r3
    4788:	ldr	r1, [r1, #808]	; 0x328
    478c:	cmp	r1, #0
    4790:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    4794:	add	r5, r5, #1
    4798:	rsbs	r3, r5, #0
    479c:	and	r5, r5, #15
    47a0:	and	r3, r3, #15
    47a4:	rsbpl	r5, r3, #0
    47a8:	lsl	r3, r5, #2
    47ac:	add	r1, r2, r3
    47b0:	ldr	r1, [r1, #808]	; 0x328
    47b4:	cmp	r1, #0
    47b8:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    47bc:	add	r5, r5, #1
    47c0:	rsbs	r3, r5, #0
    47c4:	and	r5, r5, #15
    47c8:	and	r3, r3, #15
    47cc:	rsbpl	r5, r3, #0
    47d0:	lsl	r3, r5, #2
    47d4:	add	r1, r2, r3
    47d8:	ldr	r1, [r1, #808]	; 0x328
    47dc:	cmp	r1, #0
    47e0:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    47e4:	add	r5, r5, #1
    47e8:	rsbs	r3, r5, #0
    47ec:	and	r5, r5, #15
    47f0:	and	r3, r3, #15
    47f4:	rsbpl	r5, r3, #0
    47f8:	lsl	r3, r5, #2
    47fc:	add	r1, r2, r3
    4800:	ldr	r1, [r1, #808]	; 0x328
    4804:	cmp	r1, #0
    4808:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    480c:	add	r5, r5, #1
    4810:	rsbs	r3, r5, #0
    4814:	and	r5, r5, #15
    4818:	and	r3, r3, #15
    481c:	rsbpl	r5, r3, #0
    4820:	lsl	r3, r5, #2
    4824:	add	r1, r2, r3
    4828:	ldr	r1, [r1, #808]	; 0x328
    482c:	cmp	r1, #0
    4830:	beq	4e08 <gen_load_llrel.constprop.24+0xbcc>
    4834:	ldr	r0, [pc, #1548]	; 4e48 <gen_load_llrel.constprop.24+0xc0c>
    4838:	add	r3, r5, #1
    483c:	and	r3, r3, #15
    4840:	str	r3, [r2, #804]	; 0x324
    4844:	add	r0, pc, r0
    4848:	bl	2130 <sf_bpf_error>
    484c:	ldr	r5, [r2, #788]	; 0x314
    4850:	cmn	r5, #1
    4854:	bne	4280 <gen_load_llrel.constprop.24+0x44>
    4858:	ldr	r5, [r2, #804]	; 0x324
    485c:	lsl	r3, r5, #2
    4860:	add	r1, r2, r3
    4864:	ldr	r1, [r1, #808]	; 0x328
    4868:	cmp	r1, #0
    486c:	beq	4dec <gen_load_llrel.constprop.24+0xbb0>
    4870:	add	r5, r5, #1
    4874:	rsbs	r3, r5, #0
    4878:	and	r5, r5, #15
    487c:	and	r3, r3, #15
    4880:	rsbpl	r5, r3, #0
    4884:	lsl	r3, r5, #2
    4888:	str	r5, [r2, #804]	; 0x324
    488c:	add	r1, r2, r3
    4890:	ldr	r1, [r1, #808]	; 0x328
    4894:	cmp	r1, #0
    4898:	beq	4dec <gen_load_llrel.constprop.24+0xbb0>
    489c:	add	r5, r5, #1
    48a0:	rsbs	r3, r5, #0
    48a4:	and	r5, r5, #15
    48a8:	and	r3, r3, #15
    48ac:	rsbpl	r5, r3, #0
    48b0:	lsl	r3, r5, #2
    48b4:	add	r1, r2, r3
    48b8:	ldr	r1, [r1, #808]	; 0x328
    48bc:	cmp	r1, #0
    48c0:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    48c4:	add	r5, r5, #1
    48c8:	rsbs	r3, r5, #0
    48cc:	and	r5, r5, #15
    48d0:	and	r3, r3, #15
    48d4:	rsbpl	r5, r3, #0
    48d8:	lsl	r3, r5, #2
    48dc:	add	r1, r2, r3
    48e0:	ldr	r1, [r1, #808]	; 0x328
    48e4:	cmp	r1, #0
    48e8:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    48ec:	add	r5, r5, #1
    48f0:	rsbs	r3, r5, #0
    48f4:	and	r5, r5, #15
    48f8:	and	r3, r3, #15
    48fc:	rsbpl	r5, r3, #0
    4900:	lsl	r3, r5, #2
    4904:	add	r1, r2, r3
    4908:	ldr	r1, [r1, #808]	; 0x328
    490c:	cmp	r1, #0
    4910:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4914:	add	r5, r5, #1
    4918:	rsbs	r3, r5, #0
    491c:	and	r5, r5, #15
    4920:	and	r3, r3, #15
    4924:	rsbpl	r5, r3, #0
    4928:	lsl	r3, r5, #2
    492c:	add	r2, r2, r3
    4930:	ldr	r2, [r2, #808]	; 0x328
    4934:	cmp	r2, #0
    4938:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    493c:	add	r5, r5, #1
    4940:	ldr	r2, [pc, #1284]	; 4e4c <gen_load_llrel.constprop.24+0xc10>
    4944:	rsbs	r3, r5, #0
    4948:	and	r5, r5, #15
    494c:	and	r3, r3, #15
    4950:	rsbpl	r5, r3, #0
    4954:	lsl	r3, r5, #2
    4958:	add	r2, pc, r2
    495c:	add	r1, r2, r3
    4960:	ldr	r1, [r1, #808]	; 0x328
    4964:	cmp	r1, #0
    4968:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    496c:	add	r5, r5, #1
    4970:	rsbs	r3, r5, #0
    4974:	and	r5, r5, #15
    4978:	and	r3, r3, #15
    497c:	rsbpl	r5, r3, #0
    4980:	lsl	r3, r5, #2
    4984:	add	r1, r2, r3
    4988:	ldr	r1, [r1, #808]	; 0x328
    498c:	cmp	r1, #0
    4990:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4994:	add	r5, r5, #1
    4998:	rsbs	r3, r5, #0
    499c:	and	r5, r5, #15
    49a0:	and	r3, r3, #15
    49a4:	rsbpl	r5, r3, #0
    49a8:	lsl	r3, r5, #2
    49ac:	add	r1, r2, r3
    49b0:	ldr	r1, [r1, #808]	; 0x328
    49b4:	cmp	r1, #0
    49b8:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    49bc:	add	r5, r5, #1
    49c0:	rsbs	r3, r5, #0
    49c4:	and	r5, r5, #15
    49c8:	and	r3, r3, #15
    49cc:	rsbpl	r5, r3, #0
    49d0:	lsl	r3, r5, #2
    49d4:	add	r1, r2, r3
    49d8:	ldr	r1, [r1, #808]	; 0x328
    49dc:	cmp	r1, #0
    49e0:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    49e4:	add	r5, r5, #1
    49e8:	rsbs	r3, r5, #0
    49ec:	and	r5, r5, #15
    49f0:	and	r3, r3, #15
    49f4:	rsbpl	r5, r3, #0
    49f8:	lsl	r3, r5, #2
    49fc:	add	r1, r2, r3
    4a00:	ldr	r1, [r1, #808]	; 0x328
    4a04:	cmp	r1, #0
    4a08:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4a0c:	add	r5, r5, #1
    4a10:	rsbs	r3, r5, #0
    4a14:	and	r5, r5, #15
    4a18:	and	r3, r3, #15
    4a1c:	rsbpl	r5, r3, #0
    4a20:	lsl	r3, r5, #2
    4a24:	add	r1, r2, r3
    4a28:	ldr	r1, [r1, #808]	; 0x328
    4a2c:	cmp	r1, #0
    4a30:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4a34:	add	r5, r5, #1
    4a38:	rsbs	r3, r5, #0
    4a3c:	and	r5, r5, #15
    4a40:	and	r3, r3, #15
    4a44:	rsbpl	r5, r3, #0
    4a48:	lsl	r3, r5, #2
    4a4c:	add	r1, r2, r3
    4a50:	ldr	r1, [r1, #808]	; 0x328
    4a54:	cmp	r1, #0
    4a58:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4a5c:	add	r5, r5, #1
    4a60:	rsbs	r3, r5, #0
    4a64:	and	r5, r5, #15
    4a68:	and	r3, r3, #15
    4a6c:	rsbpl	r5, r3, #0
    4a70:	lsl	r3, r5, #2
    4a74:	add	r1, r2, r3
    4a78:	ldr	r1, [r1, #808]	; 0x328
    4a7c:	cmp	r1, #0
    4a80:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4a84:	add	r5, r5, #1
    4a88:	rsbs	r3, r5, #0
    4a8c:	and	r5, r5, #15
    4a90:	and	r3, r3, #15
    4a94:	rsbpl	r5, r3, #0
    4a98:	lsl	r3, r5, #2
    4a9c:	add	r1, r2, r3
    4aa0:	ldr	r1, [r1, #808]	; 0x328
    4aa4:	cmp	r1, #0
    4aa8:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4aac:	add	r5, r5, #1
    4ab0:	rsbs	r3, r5, #0
    4ab4:	and	r5, r5, #15
    4ab8:	and	r3, r3, #15
    4abc:	rsbpl	r5, r3, #0
    4ac0:	lsl	r3, r5, #2
    4ac4:	add	r2, r2, r3
    4ac8:	ldr	r2, [r2, #808]	; 0x328
    4acc:	cmp	r2, #0
    4ad0:	beq	4de0 <gen_load_llrel.constprop.24+0xba4>
    4ad4:	ldr	r2, [pc, #884]	; 4e50 <gen_load_llrel.constprop.24+0xc14>
    4ad8:	add	r3, r5, #1
    4adc:	and	r3, r3, #15
    4ae0:	ldr	r0, [pc, #876]	; 4e54 <gen_load_llrel.constprop.24+0xc18>
    4ae4:	add	r2, pc, r2
    4ae8:	add	r0, pc, r0
    4aec:	str	r3, [r2, #804]	; 0x324
    4af0:	bl	2130 <sf_bpf_error>
    4af4:	ldr	r5, [r2, #804]	; 0x324
    4af8:	lsl	r3, r5, #2
    4afc:	add	r1, r2, r3
    4b00:	ldr	r1, [r1, #808]	; 0x328
    4b04:	cmp	r1, #0
    4b08:	beq	4d9c <gen_load_llrel.constprop.24+0xb60>
    4b0c:	add	r5, r5, #1
    4b10:	rsbs	r3, r5, #0
    4b14:	and	r5, r5, #15
    4b18:	and	r3, r3, #15
    4b1c:	rsbpl	r5, r3, #0
    4b20:	lsl	r3, r5, #2
    4b24:	str	r5, [r2, #804]	; 0x324
    4b28:	add	r1, r2, r3
    4b2c:	ldr	r1, [r1, #808]	; 0x328
    4b30:	cmp	r1, #0
    4b34:	beq	4d9c <gen_load_llrel.constprop.24+0xb60>
    4b38:	add	r5, r5, #1
    4b3c:	rsbs	r3, r5, #0
    4b40:	and	r5, r5, #15
    4b44:	and	r3, r3, #15
    4b48:	rsbpl	r5, r3, #0
    4b4c:	lsl	r3, r5, #2
    4b50:	add	r1, r2, r3
    4b54:	ldr	r1, [r1, #808]	; 0x328
    4b58:	cmp	r1, #0
    4b5c:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4b60:	add	r5, r5, #1
    4b64:	rsbs	r3, r5, #0
    4b68:	and	r5, r5, #15
    4b6c:	and	r3, r3, #15
    4b70:	rsbpl	r5, r3, #0
    4b74:	lsl	r3, r5, #2
    4b78:	add	r1, r2, r3
    4b7c:	ldr	r1, [r1, #808]	; 0x328
    4b80:	cmp	r1, #0
    4b84:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4b88:	add	r5, r5, #1
    4b8c:	rsbs	r3, r5, #0
    4b90:	and	r5, r5, #15
    4b94:	and	r3, r3, #15
    4b98:	rsbpl	r5, r3, #0
    4b9c:	lsl	r3, r5, #2
    4ba0:	add	r2, r2, r3
    4ba4:	ldr	r2, [r2, #808]	; 0x328
    4ba8:	cmp	r2, #0
    4bac:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4bb0:	add	r5, r5, #1
    4bb4:	ldr	r2, [pc, #668]	; 4e58 <gen_load_llrel.constprop.24+0xc1c>
    4bb8:	rsbs	r3, r5, #0
    4bbc:	and	r5, r5, #15
    4bc0:	and	r3, r3, #15
    4bc4:	rsbpl	r5, r3, #0
    4bc8:	lsl	r3, r5, #2
    4bcc:	add	r2, pc, r2
    4bd0:	add	r1, r2, r3
    4bd4:	ldr	r1, [r1, #808]	; 0x328
    4bd8:	cmp	r1, #0
    4bdc:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4be0:	add	r5, r5, #1
    4be4:	rsbs	r3, r5, #0
    4be8:	and	r5, r5, #15
    4bec:	and	r3, r3, #15
    4bf0:	rsbpl	r5, r3, #0
    4bf4:	lsl	r3, r5, #2
    4bf8:	add	r1, r2, r3
    4bfc:	ldr	r1, [r1, #808]	; 0x328
    4c00:	cmp	r1, #0
    4c04:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4c08:	add	r5, r5, #1
    4c0c:	rsbs	r3, r5, #0
    4c10:	and	r5, r5, #15
    4c14:	and	r3, r3, #15
    4c18:	rsbpl	r5, r3, #0
    4c1c:	lsl	r3, r5, #2
    4c20:	add	r1, r2, r3
    4c24:	ldr	r1, [r1, #808]	; 0x328
    4c28:	cmp	r1, #0
    4c2c:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4c30:	add	r5, r5, #1
    4c34:	rsbs	r3, r5, #0
    4c38:	and	r5, r5, #15
    4c3c:	and	r3, r3, #15
    4c40:	rsbpl	r5, r3, #0
    4c44:	lsl	r3, r5, #2
    4c48:	add	r1, r2, r3
    4c4c:	ldr	r1, [r1, #808]	; 0x328
    4c50:	cmp	r1, #0
    4c54:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4c58:	add	r5, r5, #1
    4c5c:	rsbs	r3, r5, #0
    4c60:	and	r5, r5, #15
    4c64:	and	r3, r3, #15
    4c68:	rsbpl	r5, r3, #0
    4c6c:	lsl	r3, r5, #2
    4c70:	add	r1, r2, r3
    4c74:	ldr	r1, [r1, #808]	; 0x328
    4c78:	cmp	r1, #0
    4c7c:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4c80:	add	r5, r5, #1
    4c84:	rsbs	r3, r5, #0
    4c88:	and	r5, r5, #15
    4c8c:	and	r3, r3, #15
    4c90:	rsbpl	r5, r3, #0
    4c94:	lsl	r3, r5, #2
    4c98:	add	r1, r2, r3
    4c9c:	ldr	r1, [r1, #808]	; 0x328
    4ca0:	cmp	r1, #0
    4ca4:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4ca8:	add	r5, r5, #1
    4cac:	rsbs	r3, r5, #0
    4cb0:	and	r5, r5, #15
    4cb4:	and	r3, r3, #15
    4cb8:	rsbpl	r5, r3, #0
    4cbc:	lsl	r3, r5, #2
    4cc0:	add	r1, r2, r3
    4cc4:	ldr	r1, [r1, #808]	; 0x328
    4cc8:	cmp	r1, #0
    4ccc:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4cd0:	add	r5, r5, #1
    4cd4:	rsbs	r3, r5, #0
    4cd8:	and	r5, r5, #15
    4cdc:	and	r3, r3, #15
    4ce0:	rsbpl	r5, r3, #0
    4ce4:	lsl	r3, r5, #2
    4ce8:	add	r1, r2, r3
    4cec:	ldr	r1, [r1, #808]	; 0x328
    4cf0:	cmp	r1, #0
    4cf4:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4cf8:	add	r5, r5, #1
    4cfc:	rsbs	r3, r5, #0
    4d00:	and	r5, r5, #15
    4d04:	and	r3, r3, #15
    4d08:	rsbpl	r5, r3, #0
    4d0c:	lsl	r3, r5, #2
    4d10:	add	r1, r2, r3
    4d14:	ldr	r1, [r1, #808]	; 0x328
    4d18:	cmp	r1, #0
    4d1c:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4d20:	add	r5, r5, #1
    4d24:	rsbs	r3, r5, #0
    4d28:	and	r5, r5, #15
    4d2c:	and	r3, r3, #15
    4d30:	rsbpl	r5, r3, #0
    4d34:	lsl	r3, r5, #2
    4d38:	add	r2, r2, r3
    4d3c:	ldr	r2, [r2, #808]	; 0x328
    4d40:	cmp	r2, #0
    4d44:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4d48:	add	r5, r5, #1
    4d4c:	ldr	r2, [pc, #264]	; 4e5c <gen_load_llrel.constprop.24+0xc20>
    4d50:	rsbs	r3, r5, #0
    4d54:	and	r5, r5, #15
    4d58:	and	r3, r3, #15
    4d5c:	rsbpl	r5, r3, #0
    4d60:	lsl	r3, r5, #2
    4d64:	add	r2, pc, r2
    4d68:	add	r1, r2, r3
    4d6c:	ldr	r1, [r1, #808]	; 0x328
    4d70:	cmp	r1, #0
    4d74:	beq	4d90 <gen_load_llrel.constprop.24+0xb54>
    4d78:	ldr	r0, [pc, #224]	; 4e60 <gen_load_llrel.constprop.24+0xc24>
    4d7c:	add	r3, r5, #1
    4d80:	and	r3, r3, #15
    4d84:	str	r3, [r2, #804]	; 0x324
    4d88:	add	r0, pc, r0
    4d8c:	bl	2130 <sf_bpf_error>
    4d90:	ldr	r2, [pc, #204]	; 4e64 <gen_load_llrel.constprop.24+0xc28>
    4d94:	add	r2, pc, r2
    4d98:	str	r5, [r2, #804]	; 0x324
    4d9c:	ldr	r2, [pc, #196]	; 4e68 <gen_load_llrel.constprop.24+0xc2c>
    4da0:	mov	r1, #1
    4da4:	add	r2, pc, r2
    4da8:	add	r3, r2, r3
    4dac:	str	r5, [r2, #788]	; 0x314
    4db0:	str	r1, [r3, #808]	; 0x328
    4db4:	b	4280 <gen_load_llrel.constprop.24+0x44>
    4db8:	ldr	r2, [pc, #172]	; 4e6c <gen_load_llrel.constprop.24+0xc30>
    4dbc:	add	r2, pc, r2
    4dc0:	str	r5, [r2, #804]	; 0x324
    4dc4:	ldr	r2, [pc, #164]	; 4e70 <gen_load_llrel.constprop.24+0xc34>
    4dc8:	mov	r1, #1
    4dcc:	add	r2, pc, r2
    4dd0:	add	r3, r2, r3
    4dd4:	str	r5, [r2, #788]	; 0x314
    4dd8:	str	r1, [r3, #808]	; 0x328
    4ddc:	b	4280 <gen_load_llrel.constprop.24+0x44>
    4de0:	ldr	r2, [pc, #140]	; 4e74 <gen_load_llrel.constprop.24+0xc38>
    4de4:	add	r2, pc, r2
    4de8:	str	r5, [r2, #804]	; 0x324
    4dec:	ldr	r2, [pc, #132]	; 4e78 <gen_load_llrel.constprop.24+0xc3c>
    4df0:	mov	r1, #1
    4df4:	add	r2, pc, r2
    4df8:	add	r3, r2, r3
    4dfc:	str	r5, [r2, #788]	; 0x314
    4e00:	str	r1, [r3, #808]	; 0x328
    4e04:	b	4280 <gen_load_llrel.constprop.24+0x44>
    4e08:	ldr	r2, [pc, #108]	; 4e7c <gen_load_llrel.constprop.24+0xc40>
    4e0c:	add	r2, pc, r2
    4e10:	str	r5, [r2, #804]	; 0x324
    4e14:	ldr	r2, [pc, #100]	; 4e80 <gen_load_llrel.constprop.24+0xc44>
    4e18:	mov	r1, #1
    4e1c:	add	r2, pc, r2
    4e20:	add	r3, r2, r3
    4e24:	str	r5, [r2, #788]	; 0x314
    4e28:	str	r1, [r3, #808]	; 0x328
    4e2c:	b	4280 <gen_load_llrel.constprop.24+0x44>
    4e30:	.word	0x0003a110
    4e34:	.word	0x00039f78
    4e38:	.word	0x00039dec
    4e3c:	.word	0x0001bc84
    4e40:	.word	0x00039dc8
    4e44:	.word	0x00039c58
    4e48:	.word	0x0001b9b8
    4e4c:	.word	0x00039a08
    4e50:	.word	0x0003987c
    4e54:	.word	0x0001b714
    4e58:	.word	0x00039794
    4e5c:	.word	0x000395fc
    4e60:	.word	0x0001b474
    4e64:	.word	0x000395cc
    4e68:	.word	0x000395bc
    4e6c:	.word	0x000395a4
    4e70:	.word	0x00039594
    4e74:	.word	0x0003957c
    4e78:	.word	0x0003956c
    4e7c:	.word	0x00039554
    4e80:	.word	0x00039544

00004e84 <gen_load_llrel>:
    4e84:	ldr	r2, [pc, #3064]	; 5a84 <gen_load_llrel+0xc00>
    4e88:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4e8c:	mov	r5, r1
    4e90:	strd	r6, [sp, #8]
    4e94:	mov	r7, r0
    4e98:	str	r8, [sp, #16]
    4e9c:	str	lr, [sp, #20]
    4ea0:	add	r2, pc, r2
    4ea4:	ldr	r3, [r2, #876]	; 0x36c
    4ea8:	cmp	r3, #127	; 0x7f
    4eac:	beq	5200 <gen_load_llrel+0x37c>
    4eb0:	ble	4f28 <gen_load_llrel+0xa4>
    4eb4:	cmp	r3, #163	; 0xa3
    4eb8:	beq	54a0 <gen_load_llrel+0x61c>
    4ebc:	cmp	r3, #192	; 0xc0
    4ec0:	bne	51d8 <gen_load_llrel+0x354>
    4ec4:	ldr	r6, [r2, #788]	; 0x314
    4ec8:	cmn	r6, #1
    4ecc:	beq	5748 <gen_load_llrel+0x8c4>
    4ed0:	bl	22d0 <newchunk.constprop.25>
    4ed4:	mov	r3, #97	; 0x61
    4ed8:	orr	r5, r5, #64	; 0x40
    4edc:	mov	r4, r0
    4ee0:	str	r3, [r0]
    4ee4:	str	r6, [r0, #12]
    4ee8:	bl	22d0 <newchunk.constprop.25>
    4eec:	mov	r2, r4
    4ef0:	str	r5, [r0]
    4ef4:	str	r7, [r0, #12]
    4ef8:	b	4f00 <gen_load_llrel+0x7c>
    4efc:	mov	r2, r3
    4f00:	ldr	r3, [r2, #16]
    4f04:	cmp	r3, #0
    4f08:	bne	4efc <gen_load_llrel+0x78>
    4f0c:	str	r0, [r2, #16]
    4f10:	mov	r0, r4
    4f14:	ldrd	r4, [sp]
    4f18:	ldrd	r6, [sp, #8]
    4f1c:	ldr	r8, [sp, #16]
    4f20:	add	sp, sp, #20
    4f24:	pop	{pc}		; (ldr pc, [sp], #4)
    4f28:	cmp	r3, #119	; 0x77
    4f2c:	bne	51d8 <gen_load_llrel+0x354>
    4f30:	ldr	r6, [r2, #788]	; 0x314
    4f34:	cmn	r6, #1
    4f38:	bne	4ed0 <gen_load_llrel+0x4c>
    4f3c:	ldr	r6, [r2, #804]	; 0x324
    4f40:	lsl	r3, r6, #2
    4f44:	add	r1, r2, r3
    4f48:	ldr	r1, [r1, #808]	; 0x328
    4f4c:	cmp	r1, #0
    4f50:	beq	5a18 <gen_load_llrel+0xb94>
    4f54:	add	r6, r6, #1
    4f58:	rsbs	r3, r6, #0
    4f5c:	and	r6, r6, #15
    4f60:	and	r3, r3, #15
    4f64:	rsbpl	r6, r3, #0
    4f68:	lsl	r3, r6, #2
    4f6c:	str	r6, [r2, #804]	; 0x324
    4f70:	add	r1, r2, r3
    4f74:	ldr	r1, [r1, #808]	; 0x328
    4f78:	cmp	r1, #0
    4f7c:	beq	5a18 <gen_load_llrel+0xb94>
    4f80:	add	r6, r6, #1
    4f84:	rsbs	r3, r6, #0
    4f88:	and	r6, r6, #15
    4f8c:	and	r3, r3, #15
    4f90:	rsbpl	r6, r3, #0
    4f94:	lsl	r3, r6, #2
    4f98:	add	r1, r2, r3
    4f9c:	ldr	r1, [r1, #808]	; 0x328
    4fa0:	cmp	r1, #0
    4fa4:	beq	5a0c <gen_load_llrel+0xb88>
    4fa8:	add	r6, r6, #1
    4fac:	rsbs	r3, r6, #0
    4fb0:	and	r6, r6, #15
    4fb4:	and	r3, r3, #15
    4fb8:	rsbpl	r6, r3, #0
    4fbc:	lsl	r3, r6, #2
    4fc0:	add	r1, r2, r3
    4fc4:	ldr	r1, [r1, #808]	; 0x328
    4fc8:	cmp	r1, #0
    4fcc:	beq	5a0c <gen_load_llrel+0xb88>
    4fd0:	add	r6, r6, #1
    4fd4:	rsbs	r3, r6, #0
    4fd8:	and	r6, r6, #15
    4fdc:	and	r3, r3, #15
    4fe0:	rsbpl	r6, r3, #0
    4fe4:	lsl	r3, r6, #2
    4fe8:	add	r1, r2, r3
    4fec:	ldr	r1, [r1, #808]	; 0x328
    4ff0:	cmp	r1, #0
    4ff4:	beq	5a0c <gen_load_llrel+0xb88>
    4ff8:	add	r6, r6, #1
    4ffc:	rsbs	r3, r6, #0
    5000:	and	r6, r6, #15
    5004:	and	r3, r3, #15
    5008:	rsbpl	r6, r3, #0
    500c:	lsl	r3, r6, #2
    5010:	add	r2, r2, r3
    5014:	ldr	r2, [r2, #808]	; 0x328
    5018:	cmp	r2, #0
    501c:	beq	5a0c <gen_load_llrel+0xb88>
    5020:	add	r6, r6, #1
    5024:	ldr	r2, [pc, #2652]	; 5a88 <gen_load_llrel+0xc04>
    5028:	rsbs	r3, r6, #0
    502c:	and	r6, r6, #15
    5030:	and	r3, r3, #15
    5034:	rsbpl	r6, r3, #0
    5038:	lsl	r3, r6, #2
    503c:	add	r2, pc, r2
    5040:	add	r1, r2, r3
    5044:	ldr	r1, [r1, #808]	; 0x328
    5048:	cmp	r1, #0
    504c:	beq	5a0c <gen_load_llrel+0xb88>
    5050:	add	r6, r6, #1
    5054:	rsbs	r3, r6, #0
    5058:	and	r6, r6, #15
    505c:	and	r3, r3, #15
    5060:	rsbpl	r6, r3, #0
    5064:	lsl	r3, r6, #2
    5068:	add	r1, r2, r3
    506c:	ldr	r1, [r1, #808]	; 0x328
    5070:	cmp	r1, #0
    5074:	beq	5a0c <gen_load_llrel+0xb88>
    5078:	add	r6, r6, #1
    507c:	rsbs	r3, r6, #0
    5080:	and	r6, r6, #15
    5084:	and	r3, r3, #15
    5088:	rsbpl	r6, r3, #0
    508c:	lsl	r3, r6, #2
    5090:	add	r1, r2, r3
    5094:	ldr	r1, [r1, #808]	; 0x328
    5098:	cmp	r1, #0
    509c:	beq	5a0c <gen_load_llrel+0xb88>
    50a0:	add	r6, r6, #1
    50a4:	rsbs	r3, r6, #0
    50a8:	and	r6, r6, #15
    50ac:	and	r3, r3, #15
    50b0:	rsbpl	r6, r3, #0
    50b4:	lsl	r3, r6, #2
    50b8:	add	r1, r2, r3
    50bc:	ldr	r1, [r1, #808]	; 0x328
    50c0:	cmp	r1, #0
    50c4:	beq	5a0c <gen_load_llrel+0xb88>
    50c8:	add	r6, r6, #1
    50cc:	rsbs	r3, r6, #0
    50d0:	and	r6, r6, #15
    50d4:	and	r3, r3, #15
    50d8:	rsbpl	r6, r3, #0
    50dc:	lsl	r3, r6, #2
    50e0:	add	r1, r2, r3
    50e4:	ldr	r1, [r1, #808]	; 0x328
    50e8:	cmp	r1, #0
    50ec:	beq	5a0c <gen_load_llrel+0xb88>
    50f0:	add	r6, r6, #1
    50f4:	rsbs	r3, r6, #0
    50f8:	and	r6, r6, #15
    50fc:	and	r3, r3, #15
    5100:	rsbpl	r6, r3, #0
    5104:	lsl	r3, r6, #2
    5108:	add	r1, r2, r3
    510c:	ldr	r1, [r1, #808]	; 0x328
    5110:	cmp	r1, #0
    5114:	beq	5a0c <gen_load_llrel+0xb88>
    5118:	add	r6, r6, #1
    511c:	rsbs	r3, r6, #0
    5120:	and	r6, r6, #15
    5124:	and	r3, r3, #15
    5128:	rsbpl	r6, r3, #0
    512c:	lsl	r3, r6, #2
    5130:	add	r1, r2, r3
    5134:	ldr	r1, [r1, #808]	; 0x328
    5138:	cmp	r1, #0
    513c:	beq	5a0c <gen_load_llrel+0xb88>
    5140:	add	r6, r6, #1
    5144:	rsbs	r3, r6, #0
    5148:	and	r6, r6, #15
    514c:	and	r3, r3, #15
    5150:	rsbpl	r6, r3, #0
    5154:	lsl	r3, r6, #2
    5158:	add	r1, r2, r3
    515c:	ldr	r1, [r1, #808]	; 0x328
    5160:	cmp	r1, #0
    5164:	beq	5a0c <gen_load_llrel+0xb88>
    5168:	add	r6, r6, #1
    516c:	rsbs	r3, r6, #0
    5170:	and	r6, r6, #15
    5174:	and	r3, r3, #15
    5178:	rsbpl	r6, r3, #0
    517c:	lsl	r3, r6, #2
    5180:	add	r1, r2, r3
    5184:	ldr	r1, [r1, #808]	; 0x328
    5188:	cmp	r1, #0
    518c:	beq	5a0c <gen_load_llrel+0xb88>
    5190:	add	r6, r6, #1
    5194:	rsbs	r3, r6, #0
    5198:	and	r6, r6, #15
    519c:	and	r3, r3, #15
    51a0:	rsbpl	r6, r3, #0
    51a4:	lsl	r3, r6, #2
    51a8:	add	r2, r2, r3
    51ac:	ldr	r2, [r2, #808]	; 0x328
    51b0:	cmp	r2, #0
    51b4:	beq	5a0c <gen_load_llrel+0xb88>
    51b8:	ldr	r2, [pc, #2252]	; 5a8c <gen_load_llrel+0xc08>
    51bc:	add	r3, r6, #1
    51c0:	and	r3, r3, #15
    51c4:	ldr	r0, [pc, #2244]	; 5a90 <gen_load_llrel+0xc0c>
    51c8:	add	r2, pc, r2
    51cc:	add	r0, pc, r0
    51d0:	str	r3, [r2, #804]	; 0x324
    51d4:	bl	2130 <sf_bpf_error>
    51d8:	bl	22d0 <newchunk.constprop.25>
    51dc:	ldr	r3, [pc, #2224]	; 5a94 <gen_load_llrel+0xc10>
    51e0:	orr	r5, r5, #32
    51e4:	mov	r4, r0
    51e8:	str	r5, [r0]
    51ec:	add	r3, pc, r3
    51f0:	ldr	r3, [r3, #880]	; 0x370
    51f4:	add	r7, r3, r7
    51f8:	str	r7, [r0, #12]
    51fc:	b	4f10 <gen_load_llrel+0x8c>
    5200:	ldr	r6, [r2, #788]	; 0x314
    5204:	cmn	r6, #1
    5208:	bne	4ed0 <gen_load_llrel+0x4c>
    520c:	ldr	r6, [r2, #804]	; 0x324
    5210:	lsl	r3, r6, #2
    5214:	add	r1, r2, r3
    5218:	ldr	r1, [r1, #808]	; 0x328
    521c:	cmp	r1, #0
    5220:	beq	5a68 <gen_load_llrel+0xbe4>
    5224:	add	r6, r6, #1
    5228:	rsbs	r3, r6, #0
    522c:	and	r6, r6, #15
    5230:	and	r3, r3, #15
    5234:	rsbpl	r6, r3, #0
    5238:	lsl	r3, r6, #2
    523c:	str	r6, [r2, #804]	; 0x324
    5240:	add	r1, r2, r3
    5244:	ldr	r1, [r1, #808]	; 0x328
    5248:	cmp	r1, #0
    524c:	beq	5a68 <gen_load_llrel+0xbe4>
    5250:	add	r6, r6, #1
    5254:	rsbs	r3, r6, #0
    5258:	and	r6, r6, #15
    525c:	and	r3, r3, #15
    5260:	rsbpl	r6, r3, #0
    5264:	lsl	r3, r6, #2
    5268:	add	r1, r2, r3
    526c:	ldr	r1, [r1, #808]	; 0x328
    5270:	cmp	r1, #0
    5274:	beq	5a5c <gen_load_llrel+0xbd8>
    5278:	add	r6, r6, #1
    527c:	rsbs	r3, r6, #0
    5280:	and	r6, r6, #15
    5284:	and	r3, r3, #15
    5288:	rsbpl	r6, r3, #0
    528c:	lsl	r3, r6, #2
    5290:	add	r1, r2, r3
    5294:	ldr	r1, [r1, #808]	; 0x328
    5298:	cmp	r1, #0
    529c:	beq	5a5c <gen_load_llrel+0xbd8>
    52a0:	add	r6, r6, #1
    52a4:	rsbs	r3, r6, #0
    52a8:	and	r6, r6, #15
    52ac:	and	r3, r3, #15
    52b0:	rsbpl	r6, r3, #0
    52b4:	lsl	r3, r6, #2
    52b8:	add	r1, r2, r3
    52bc:	ldr	r1, [r1, #808]	; 0x328
    52c0:	cmp	r1, #0
    52c4:	beq	5a5c <gen_load_llrel+0xbd8>
    52c8:	add	r6, r6, #1
    52cc:	rsbs	r3, r6, #0
    52d0:	and	r6, r6, #15
    52d4:	and	r3, r3, #15
    52d8:	rsbpl	r6, r3, #0
    52dc:	lsl	r3, r6, #2
    52e0:	add	r1, r2, r3
    52e4:	ldr	r1, [r1, #808]	; 0x328
    52e8:	cmp	r1, #0
    52ec:	beq	5a5c <gen_load_llrel+0xbd8>
    52f0:	add	r6, r6, #1
    52f4:	rsbs	r3, r6, #0
    52f8:	and	r6, r6, #15
    52fc:	and	r3, r3, #15
    5300:	rsbpl	r6, r3, #0
    5304:	lsl	r3, r6, #2
    5308:	add	r1, r2, r3
    530c:	ldr	r1, [r1, #808]	; 0x328
    5310:	cmp	r1, #0
    5314:	beq	5a5c <gen_load_llrel+0xbd8>
    5318:	add	r6, r6, #1
    531c:	rsbs	r3, r6, #0
    5320:	and	r6, r6, #15
    5324:	and	r3, r3, #15
    5328:	rsbpl	r6, r3, #0
    532c:	lsl	r3, r6, #2
    5330:	add	r2, r2, r3
    5334:	ldr	r2, [r2, #808]	; 0x328
    5338:	cmp	r2, #0
    533c:	beq	5a5c <gen_load_llrel+0xbd8>
    5340:	add	r6, r6, #1
    5344:	ldr	r2, [pc, #1868]	; 5a98 <gen_load_llrel+0xc14>
    5348:	rsbs	r3, r6, #0
    534c:	and	r6, r6, #15
    5350:	and	r3, r3, #15
    5354:	rsbpl	r6, r3, #0
    5358:	lsl	r3, r6, #2
    535c:	add	r2, pc, r2
    5360:	add	r1, r2, r3
    5364:	ldr	r1, [r1, #808]	; 0x328
    5368:	cmp	r1, #0
    536c:	beq	5a5c <gen_load_llrel+0xbd8>
    5370:	add	r6, r6, #1
    5374:	rsbs	r3, r6, #0
    5378:	and	r6, r6, #15
    537c:	and	r3, r3, #15
    5380:	rsbpl	r6, r3, #0
    5384:	lsl	r3, r6, #2
    5388:	add	r1, r2, r3
    538c:	ldr	r1, [r1, #808]	; 0x328
    5390:	cmp	r1, #0
    5394:	beq	5a5c <gen_load_llrel+0xbd8>
    5398:	add	r6, r6, #1
    539c:	rsbs	r3, r6, #0
    53a0:	and	r6, r6, #15
    53a4:	and	r3, r3, #15
    53a8:	rsbpl	r6, r3, #0
    53ac:	lsl	r3, r6, #2
    53b0:	add	r1, r2, r3
    53b4:	ldr	r1, [r1, #808]	; 0x328
    53b8:	cmp	r1, #0
    53bc:	beq	5a5c <gen_load_llrel+0xbd8>
    53c0:	add	r6, r6, #1
    53c4:	rsbs	r3, r6, #0
    53c8:	and	r6, r6, #15
    53cc:	and	r3, r3, #15
    53d0:	rsbpl	r6, r3, #0
    53d4:	lsl	r3, r6, #2
    53d8:	add	r1, r2, r3
    53dc:	ldr	r1, [r1, #808]	; 0x328
    53e0:	cmp	r1, #0
    53e4:	beq	5a5c <gen_load_llrel+0xbd8>
    53e8:	add	r6, r6, #1
    53ec:	rsbs	r3, r6, #0
    53f0:	and	r6, r6, #15
    53f4:	and	r3, r3, #15
    53f8:	rsbpl	r6, r3, #0
    53fc:	lsl	r3, r6, #2
    5400:	add	r1, r2, r3
    5404:	ldr	r1, [r1, #808]	; 0x328
    5408:	cmp	r1, #0
    540c:	beq	5a5c <gen_load_llrel+0xbd8>
    5410:	add	r6, r6, #1
    5414:	rsbs	r3, r6, #0
    5418:	and	r6, r6, #15
    541c:	and	r3, r3, #15
    5420:	rsbpl	r6, r3, #0
    5424:	lsl	r3, r6, #2
    5428:	add	r1, r2, r3
    542c:	ldr	r1, [r1, #808]	; 0x328
    5430:	cmp	r1, #0
    5434:	beq	5a5c <gen_load_llrel+0xbd8>
    5438:	add	r6, r6, #1
    543c:	rsbs	r3, r6, #0
    5440:	and	r6, r6, #15
    5444:	and	r3, r3, #15
    5448:	rsbpl	r6, r3, #0
    544c:	lsl	r3, r6, #2
    5450:	add	r1, r2, r3
    5454:	ldr	r1, [r1, #808]	; 0x328
    5458:	cmp	r1, #0
    545c:	beq	5a5c <gen_load_llrel+0xbd8>
    5460:	add	r6, r6, #1
    5464:	rsbs	r3, r6, #0
    5468:	and	r6, r6, #15
    546c:	and	r3, r3, #15
    5470:	rsbpl	r6, r3, #0
    5474:	lsl	r3, r6, #2
    5478:	add	r1, r2, r3
    547c:	ldr	r1, [r1, #808]	; 0x328
    5480:	cmp	r1, #0
    5484:	beq	5a5c <gen_load_llrel+0xbd8>
    5488:	ldr	r0, [pc, #1548]	; 5a9c <gen_load_llrel+0xc18>
    548c:	add	r3, r6, #1
    5490:	and	r3, r3, #15
    5494:	str	r3, [r2, #804]	; 0x324
    5498:	add	r0, pc, r0
    549c:	bl	2130 <sf_bpf_error>
    54a0:	ldr	r6, [r2, #788]	; 0x314
    54a4:	cmn	r6, #1
    54a8:	bne	4ed0 <gen_load_llrel+0x4c>
    54ac:	ldr	r6, [r2, #804]	; 0x324
    54b0:	lsl	r3, r6, #2
    54b4:	add	r1, r2, r3
    54b8:	ldr	r1, [r1, #808]	; 0x328
    54bc:	cmp	r1, #0
    54c0:	beq	5a40 <gen_load_llrel+0xbbc>
    54c4:	add	r6, r6, #1
    54c8:	rsbs	r3, r6, #0
    54cc:	and	r6, r6, #15
    54d0:	and	r3, r3, #15
    54d4:	rsbpl	r6, r3, #0
    54d8:	lsl	r3, r6, #2
    54dc:	str	r6, [r2, #804]	; 0x324
    54e0:	add	r1, r2, r3
    54e4:	ldr	r1, [r1, #808]	; 0x328
    54e8:	cmp	r1, #0
    54ec:	beq	5a40 <gen_load_llrel+0xbbc>
    54f0:	add	r6, r6, #1
    54f4:	rsbs	r3, r6, #0
    54f8:	and	r6, r6, #15
    54fc:	and	r3, r3, #15
    5500:	rsbpl	r6, r3, #0
    5504:	lsl	r3, r6, #2
    5508:	add	r1, r2, r3
    550c:	ldr	r1, [r1, #808]	; 0x328
    5510:	cmp	r1, #0
    5514:	beq	5a34 <gen_load_llrel+0xbb0>
    5518:	add	r6, r6, #1
    551c:	rsbs	r3, r6, #0
    5520:	and	r6, r6, #15
    5524:	and	r3, r3, #15
    5528:	rsbpl	r6, r3, #0
    552c:	lsl	r3, r6, #2
    5530:	add	r1, r2, r3
    5534:	ldr	r1, [r1, #808]	; 0x328
    5538:	cmp	r1, #0
    553c:	beq	5a34 <gen_load_llrel+0xbb0>
    5540:	add	r6, r6, #1
    5544:	rsbs	r3, r6, #0
    5548:	and	r6, r6, #15
    554c:	and	r3, r3, #15
    5550:	rsbpl	r6, r3, #0
    5554:	lsl	r3, r6, #2
    5558:	add	r1, r2, r3
    555c:	ldr	r1, [r1, #808]	; 0x328
    5560:	cmp	r1, #0
    5564:	beq	5a34 <gen_load_llrel+0xbb0>
    5568:	add	r6, r6, #1
    556c:	rsbs	r3, r6, #0
    5570:	and	r6, r6, #15
    5574:	and	r3, r3, #15
    5578:	rsbpl	r6, r3, #0
    557c:	lsl	r3, r6, #2
    5580:	add	r2, r2, r3
    5584:	ldr	r2, [r2, #808]	; 0x328
    5588:	cmp	r2, #0
    558c:	beq	5a34 <gen_load_llrel+0xbb0>
    5590:	add	r6, r6, #1
    5594:	ldr	r2, [pc, #1284]	; 5aa0 <gen_load_llrel+0xc1c>
    5598:	rsbs	r3, r6, #0
    559c:	and	r6, r6, #15
    55a0:	and	r3, r3, #15
    55a4:	rsbpl	r6, r3, #0
    55a8:	lsl	r3, r6, #2
    55ac:	add	r2, pc, r2
    55b0:	add	r1, r2, r3
    55b4:	ldr	r1, [r1, #808]	; 0x328
    55b8:	cmp	r1, #0
    55bc:	beq	5a34 <gen_load_llrel+0xbb0>
    55c0:	add	r6, r6, #1
    55c4:	rsbs	r3, r6, #0
    55c8:	and	r6, r6, #15
    55cc:	and	r3, r3, #15
    55d0:	rsbpl	r6, r3, #0
    55d4:	lsl	r3, r6, #2
    55d8:	add	r1, r2, r3
    55dc:	ldr	r1, [r1, #808]	; 0x328
    55e0:	cmp	r1, #0
    55e4:	beq	5a34 <gen_load_llrel+0xbb0>
    55e8:	add	r6, r6, #1
    55ec:	rsbs	r3, r6, #0
    55f0:	and	r6, r6, #15
    55f4:	and	r3, r3, #15
    55f8:	rsbpl	r6, r3, #0
    55fc:	lsl	r3, r6, #2
    5600:	add	r1, r2, r3
    5604:	ldr	r1, [r1, #808]	; 0x328
    5608:	cmp	r1, #0
    560c:	beq	5a34 <gen_load_llrel+0xbb0>
    5610:	add	r6, r6, #1
    5614:	rsbs	r3, r6, #0
    5618:	and	r6, r6, #15
    561c:	and	r3, r3, #15
    5620:	rsbpl	r6, r3, #0
    5624:	lsl	r3, r6, #2
    5628:	add	r1, r2, r3
    562c:	ldr	r1, [r1, #808]	; 0x328
    5630:	cmp	r1, #0
    5634:	beq	5a34 <gen_load_llrel+0xbb0>
    5638:	add	r6, r6, #1
    563c:	rsbs	r3, r6, #0
    5640:	and	r6, r6, #15
    5644:	and	r3, r3, #15
    5648:	rsbpl	r6, r3, #0
    564c:	lsl	r3, r6, #2
    5650:	add	r1, r2, r3
    5654:	ldr	r1, [r1, #808]	; 0x328
    5658:	cmp	r1, #0
    565c:	beq	5a34 <gen_load_llrel+0xbb0>
    5660:	add	r6, r6, #1
    5664:	rsbs	r3, r6, #0
    5668:	and	r6, r6, #15
    566c:	and	r3, r3, #15
    5670:	rsbpl	r6, r3, #0
    5674:	lsl	r3, r6, #2
    5678:	add	r1, r2, r3
    567c:	ldr	r1, [r1, #808]	; 0x328
    5680:	cmp	r1, #0
    5684:	beq	5a34 <gen_load_llrel+0xbb0>
    5688:	add	r6, r6, #1
    568c:	rsbs	r3, r6, #0
    5690:	and	r6, r6, #15
    5694:	and	r3, r3, #15
    5698:	rsbpl	r6, r3, #0
    569c:	lsl	r3, r6, #2
    56a0:	add	r1, r2, r3
    56a4:	ldr	r1, [r1, #808]	; 0x328
    56a8:	cmp	r1, #0
    56ac:	beq	5a34 <gen_load_llrel+0xbb0>
    56b0:	add	r6, r6, #1
    56b4:	rsbs	r3, r6, #0
    56b8:	and	r6, r6, #15
    56bc:	and	r3, r3, #15
    56c0:	rsbpl	r6, r3, #0
    56c4:	lsl	r3, r6, #2
    56c8:	add	r1, r2, r3
    56cc:	ldr	r1, [r1, #808]	; 0x328
    56d0:	cmp	r1, #0
    56d4:	beq	5a34 <gen_load_llrel+0xbb0>
    56d8:	add	r6, r6, #1
    56dc:	rsbs	r3, r6, #0
    56e0:	and	r6, r6, #15
    56e4:	and	r3, r3, #15
    56e8:	rsbpl	r6, r3, #0
    56ec:	lsl	r3, r6, #2
    56f0:	add	r1, r2, r3
    56f4:	ldr	r1, [r1, #808]	; 0x328
    56f8:	cmp	r1, #0
    56fc:	beq	5a34 <gen_load_llrel+0xbb0>
    5700:	add	r6, r6, #1
    5704:	rsbs	r3, r6, #0
    5708:	and	r6, r6, #15
    570c:	and	r3, r3, #15
    5710:	rsbpl	r6, r3, #0
    5714:	lsl	r3, r6, #2
    5718:	add	r2, r2, r3
    571c:	ldr	r2, [r2, #808]	; 0x328
    5720:	cmp	r2, #0
    5724:	beq	5a34 <gen_load_llrel+0xbb0>
    5728:	ldr	r2, [pc, #884]	; 5aa4 <gen_load_llrel+0xc20>
    572c:	add	r3, r6, #1
    5730:	and	r3, r3, #15
    5734:	ldr	r0, [pc, #876]	; 5aa8 <gen_load_llrel+0xc24>
    5738:	add	r2, pc, r2
    573c:	add	r0, pc, r0
    5740:	str	r3, [r2, #804]	; 0x324
    5744:	bl	2130 <sf_bpf_error>
    5748:	ldr	r6, [r2, #804]	; 0x324
    574c:	lsl	r3, r6, #2
    5750:	add	r1, r2, r3
    5754:	ldr	r1, [r1, #808]	; 0x328
    5758:	cmp	r1, #0
    575c:	beq	59f0 <gen_load_llrel+0xb6c>
    5760:	add	r6, r6, #1
    5764:	rsbs	r3, r6, #0
    5768:	and	r6, r6, #15
    576c:	and	r3, r3, #15
    5770:	rsbpl	r6, r3, #0
    5774:	lsl	r3, r6, #2
    5778:	str	r6, [r2, #804]	; 0x324
    577c:	add	r1, r2, r3
    5780:	ldr	r1, [r1, #808]	; 0x328
    5784:	cmp	r1, #0
    5788:	beq	59f0 <gen_load_llrel+0xb6c>
    578c:	add	r6, r6, #1
    5790:	rsbs	r3, r6, #0
    5794:	and	r6, r6, #15
    5798:	and	r3, r3, #15
    579c:	rsbpl	r6, r3, #0
    57a0:	lsl	r3, r6, #2
    57a4:	add	r1, r2, r3
    57a8:	ldr	r1, [r1, #808]	; 0x328
    57ac:	cmp	r1, #0
    57b0:	beq	59e4 <gen_load_llrel+0xb60>
    57b4:	add	r6, r6, #1
    57b8:	rsbs	r3, r6, #0
    57bc:	and	r6, r6, #15
    57c0:	and	r3, r3, #15
    57c4:	rsbpl	r6, r3, #0
    57c8:	lsl	r3, r6, #2
    57cc:	add	r1, r2, r3
    57d0:	ldr	r1, [r1, #808]	; 0x328
    57d4:	cmp	r1, #0
    57d8:	beq	59e4 <gen_load_llrel+0xb60>
    57dc:	add	r6, r6, #1
    57e0:	rsbs	r3, r6, #0
    57e4:	and	r6, r6, #15
    57e8:	and	r3, r3, #15
    57ec:	rsbpl	r6, r3, #0
    57f0:	lsl	r3, r6, #2
    57f4:	add	r2, r2, r3
    57f8:	ldr	r2, [r2, #808]	; 0x328
    57fc:	cmp	r2, #0
    5800:	beq	59e4 <gen_load_llrel+0xb60>
    5804:	add	r6, r6, #1
    5808:	ldr	r2, [pc, #668]	; 5aac <gen_load_llrel+0xc28>
    580c:	rsbs	r3, r6, #0
    5810:	and	r6, r6, #15
    5814:	and	r3, r3, #15
    5818:	rsbpl	r6, r3, #0
    581c:	lsl	r3, r6, #2
    5820:	add	r2, pc, r2
    5824:	add	r1, r2, r3
    5828:	ldr	r1, [r1, #808]	; 0x328
    582c:	cmp	r1, #0
    5830:	beq	59e4 <gen_load_llrel+0xb60>
    5834:	add	r6, r6, #1
    5838:	rsbs	r3, r6, #0
    583c:	and	r6, r6, #15
    5840:	and	r3, r3, #15
    5844:	rsbpl	r6, r3, #0
    5848:	lsl	r3, r6, #2
    584c:	add	r1, r2, r3
    5850:	ldr	r1, [r1, #808]	; 0x328
    5854:	cmp	r1, #0
    5858:	beq	59e4 <gen_load_llrel+0xb60>
    585c:	add	r6, r6, #1
    5860:	rsbs	r3, r6, #0
    5864:	and	r6, r6, #15
    5868:	and	r3, r3, #15
    586c:	rsbpl	r6, r3, #0
    5870:	lsl	r3, r6, #2
    5874:	add	r1, r2, r3
    5878:	ldr	r1, [r1, #808]	; 0x328
    587c:	cmp	r1, #0
    5880:	beq	59e4 <gen_load_llrel+0xb60>
    5884:	add	r6, r6, #1
    5888:	rsbs	r3, r6, #0
    588c:	and	r6, r6, #15
    5890:	and	r3, r3, #15
    5894:	rsbpl	r6, r3, #0
    5898:	lsl	r3, r6, #2
    589c:	add	r1, r2, r3
    58a0:	ldr	r1, [r1, #808]	; 0x328
    58a4:	cmp	r1, #0
    58a8:	beq	59e4 <gen_load_llrel+0xb60>
    58ac:	add	r6, r6, #1
    58b0:	rsbs	r3, r6, #0
    58b4:	and	r6, r6, #15
    58b8:	and	r3, r3, #15
    58bc:	rsbpl	r6, r3, #0
    58c0:	lsl	r3, r6, #2
    58c4:	add	r1, r2, r3
    58c8:	ldr	r1, [r1, #808]	; 0x328
    58cc:	cmp	r1, #0
    58d0:	beq	59e4 <gen_load_llrel+0xb60>
    58d4:	add	r6, r6, #1
    58d8:	rsbs	r3, r6, #0
    58dc:	and	r6, r6, #15
    58e0:	and	r3, r3, #15
    58e4:	rsbpl	r6, r3, #0
    58e8:	lsl	r3, r6, #2
    58ec:	add	r1, r2, r3
    58f0:	ldr	r1, [r1, #808]	; 0x328
    58f4:	cmp	r1, #0
    58f8:	beq	59e4 <gen_load_llrel+0xb60>
    58fc:	add	r6, r6, #1
    5900:	rsbs	r3, r6, #0
    5904:	and	r6, r6, #15
    5908:	and	r3, r3, #15
    590c:	rsbpl	r6, r3, #0
    5910:	lsl	r3, r6, #2
    5914:	add	r1, r2, r3
    5918:	ldr	r1, [r1, #808]	; 0x328
    591c:	cmp	r1, #0
    5920:	beq	59e4 <gen_load_llrel+0xb60>
    5924:	add	r6, r6, #1
    5928:	rsbs	r3, r6, #0
    592c:	and	r6, r6, #15
    5930:	and	r3, r3, #15
    5934:	rsbpl	r6, r3, #0
    5938:	lsl	r3, r6, #2
    593c:	add	r1, r2, r3
    5940:	ldr	r1, [r1, #808]	; 0x328
    5944:	cmp	r1, #0
    5948:	beq	59e4 <gen_load_llrel+0xb60>
    594c:	add	r6, r6, #1
    5950:	rsbs	r3, r6, #0
    5954:	and	r6, r6, #15
    5958:	and	r3, r3, #15
    595c:	rsbpl	r6, r3, #0
    5960:	lsl	r3, r6, #2
    5964:	add	r1, r2, r3
    5968:	ldr	r1, [r1, #808]	; 0x328
    596c:	cmp	r1, #0
    5970:	beq	59e4 <gen_load_llrel+0xb60>
    5974:	add	r6, r6, #1
    5978:	rsbs	r3, r6, #0
    597c:	and	r6, r6, #15
    5980:	and	r3, r3, #15
    5984:	rsbpl	r6, r3, #0
    5988:	lsl	r3, r6, #2
    598c:	add	r2, r2, r3
    5990:	ldr	r2, [r2, #808]	; 0x328
    5994:	cmp	r2, #0
    5998:	beq	59e4 <gen_load_llrel+0xb60>
    599c:	add	r6, r6, #1
    59a0:	ldr	r2, [pc, #264]	; 5ab0 <gen_load_llrel+0xc2c>
    59a4:	rsbs	r3, r6, #0
    59a8:	and	r6, r6, #15
    59ac:	and	r3, r3, #15
    59b0:	rsbpl	r6, r3, #0
    59b4:	lsl	r3, r6, #2
    59b8:	add	r2, pc, r2
    59bc:	add	r1, r2, r3
    59c0:	ldr	r1, [r1, #808]	; 0x328
    59c4:	cmp	r1, #0
    59c8:	beq	59e4 <gen_load_llrel+0xb60>
    59cc:	ldr	r0, [pc, #224]	; 5ab4 <gen_load_llrel+0xc30>
    59d0:	add	r3, r6, #1
    59d4:	and	r3, r3, #15
    59d8:	str	r3, [r2, #804]	; 0x324
    59dc:	add	r0, pc, r0
    59e0:	bl	2130 <sf_bpf_error>
    59e4:	ldr	r2, [pc, #204]	; 5ab8 <gen_load_llrel+0xc34>
    59e8:	add	r2, pc, r2
    59ec:	str	r6, [r2, #804]	; 0x324
    59f0:	ldr	r2, [pc, #196]	; 5abc <gen_load_llrel+0xc38>
    59f4:	mov	r1, #1
    59f8:	add	r2, pc, r2
    59fc:	add	r3, r2, r3
    5a00:	str	r6, [r2, #788]	; 0x314
    5a04:	str	r1, [r3, #808]	; 0x328
    5a08:	b	4ed0 <gen_load_llrel+0x4c>
    5a0c:	ldr	r2, [pc, #172]	; 5ac0 <gen_load_llrel+0xc3c>
    5a10:	add	r2, pc, r2
    5a14:	str	r6, [r2, #804]	; 0x324
    5a18:	ldr	r2, [pc, #164]	; 5ac4 <gen_load_llrel+0xc40>
    5a1c:	mov	r1, #1
    5a20:	add	r2, pc, r2
    5a24:	add	r3, r2, r3
    5a28:	str	r6, [r2, #788]	; 0x314
    5a2c:	str	r1, [r3, #808]	; 0x328
    5a30:	b	4ed0 <gen_load_llrel+0x4c>
    5a34:	ldr	r2, [pc, #140]	; 5ac8 <gen_load_llrel+0xc44>
    5a38:	add	r2, pc, r2
    5a3c:	str	r6, [r2, #804]	; 0x324
    5a40:	ldr	r2, [pc, #132]	; 5acc <gen_load_llrel+0xc48>
    5a44:	mov	r1, #1
    5a48:	add	r2, pc, r2
    5a4c:	add	r3, r2, r3
    5a50:	str	r6, [r2, #788]	; 0x314
    5a54:	str	r1, [r3, #808]	; 0x328
    5a58:	b	4ed0 <gen_load_llrel+0x4c>
    5a5c:	ldr	r2, [pc, #108]	; 5ad0 <gen_load_llrel+0xc4c>
    5a60:	add	r2, pc, r2
    5a64:	str	r6, [r2, #804]	; 0x324
    5a68:	ldr	r2, [pc, #100]	; 5ad4 <gen_load_llrel+0xc50>
    5a6c:	mov	r1, #1
    5a70:	add	r2, pc, r2
    5a74:	add	r3, r2, r3
    5a78:	str	r6, [r2, #788]	; 0x314
    5a7c:	str	r1, [r3, #808]	; 0x328
    5a80:	b	4ed0 <gen_load_llrel+0x4c>
    5a84:	.word	0x000394c0
    5a88:	.word	0x00039324
    5a8c:	.word	0x00039198
    5a90:	.word	0x0001b030
    5a94:	.word	0x00039174
    5a98:	.word	0x00039004
    5a9c:	.word	0x0001ad64
    5aa0:	.word	0x00038db4
    5aa4:	.word	0x00038c28
    5aa8:	.word	0x0001aac0
    5aac:	.word	0x00038b40
    5ab0:	.word	0x000389a8
    5ab4:	.word	0x0001a820
    5ab8:	.word	0x00038978
    5abc:	.word	0x00038968
    5ac0:	.word	0x00038950
    5ac4:	.word	0x00038940
    5ac8:	.word	0x00038928
    5acc:	.word	0x00038918
    5ad0:	.word	0x00038900
    5ad4:	.word	0x000388f0

00005ad8 <gen_cmp.constprop.20>:
    5ad8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5adc:	mov	r5, r0
    5ae0:	mov	r4, r1
    5ae4:	strd	r6, [sp, #8]
    5ae8:	mov	r6, r2
    5aec:	str	r8, [sp, #16]
    5af0:	str	lr, [sp, #20]
    5af4:	bl	3650 <gen_llprefixlen>
    5af8:	subs	r7, r0, #0
    5afc:	beq	5be4 <gen_cmp.constprop.20+0x10c>
    5b00:	orr	r4, r4, #64	; 0x40
    5b04:	bl	22d0 <newchunk.constprop.25>
    5b08:	mov	r3, r7
    5b0c:	str	r4, [r0]
    5b10:	str	r5, [r0, #12]
    5b14:	b	5b1c <gen_cmp.constprop.20+0x44>
    5b18:	mov	r3, r2
    5b1c:	ldr	r2, [r3, #16]
    5b20:	cmp	r2, #0
    5b24:	bne	5b18 <gen_cmp.constprop.20+0x40>
    5b28:	str	r0, [r3, #16]
    5b2c:	ldr	r2, [pc, #216]	; 5c0c <gen_cmp.constprop.20+0x134>
    5b30:	add	r2, pc, r2
    5b34:	ldr	r4, [r2, #656]	; 0x290
    5b38:	add	r3, r2, #660	; 0x294
    5b3c:	lsl	r5, r4, #3
    5b40:	add	r1, r2, r5
    5b44:	add	r5, r3, r5
    5b48:	ldr	r1, [r1, #660]	; 0x294
    5b4c:	cmp	r1, #207	; 0xcf
    5b50:	bhi	5ba0 <gen_cmp.constprop.20+0xc8>
    5b54:	add	r3, r4, #1
    5b58:	add	r8, r5, #8
    5b5c:	cmp	r3, #15
    5b60:	str	r3, [r2, #656]	; 0x290
    5b64:	bgt	5b94 <gen_cmp.constprop.20+0xbc>
    5b68:	mov	r4, #1024	; 0x400
    5b6c:	mov	r1, #1
    5b70:	lsl	r4, r4, r3
    5b74:	mov	r0, r4
    5b78:	bl	ce8 <calloc@plt>
    5b7c:	cmp	r0, #0
    5b80:	str	r0, [r5, #12]
    5b84:	beq	5b94 <gen_cmp.constprop.20+0xbc>
    5b88:	cmp	r4, #207	; 0xcf
    5b8c:	str	r4, [r5, #8]
    5b90:	bhi	5bac <gen_cmp.constprop.20+0xd4>
    5b94:	ldr	r0, [pc, #116]	; 5c10 <gen_cmp.constprop.20+0x138>
    5b98:	add	r0, pc, r0
    5b9c:	bl	2130 <sf_bpf_error>
    5ba0:	ldr	r4, [r3, r4, lsl #3]
    5ba4:	mov	r8, r5
    5ba8:	ldr	r0, [r5, #4]
    5bac:	sub	r4, r4, #208	; 0xd0
    5bb0:	mov	r2, #21
    5bb4:	add	r3, r0, r4
    5bb8:	str	r4, [r8]
    5bbc:	mov	r0, r3
    5bc0:	str	r7, [r3, #4]
    5bc4:	str	r2, [r3, #8]
    5bc8:	str	r6, [r3, #20]
    5bcc:	str	r3, [r3, #96]	; 0x60
    5bd0:	ldrd	r4, [sp]
    5bd4:	ldrd	r6, [sp, #8]
    5bd8:	ldr	r8, [sp, #16]
    5bdc:	add	sp, sp, #20
    5be0:	pop	{pc}		; (ldr pc, [sp], #4)
    5be4:	bl	22d0 <newchunk.constprop.25>
    5be8:	ldr	r3, [pc, #36]	; 5c14 <gen_cmp.constprop.20+0x13c>
    5bec:	orr	r4, r4, #32
    5bf0:	mov	r7, r0
    5bf4:	str	r4, [r0]
    5bf8:	add	r3, pc, r3
    5bfc:	ldr	r3, [r3, #880]	; 0x370
    5c00:	add	r5, r3, r5
    5c04:	str	r5, [r0, #12]
    5c08:	b	5b2c <gen_cmp.constprop.20+0x54>
    5c0c:	.word	0x00038830
    5c10:	.word	0x0001a654
    5c14:	.word	0x00038768

00005c18 <gen_cmp.constprop.18>:
    5c18:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5c1c:	strd	r6, [sp, #8]
    5c20:	mov	r6, r2
    5c24:	str	r8, [sp, #16]
    5c28:	str	lr, [sp, #20]
    5c2c:	bl	2588 <gen_load_macplrel>
    5c30:	ldr	r2, [pc, #180]	; 5cec <gen_cmp.constprop.18+0xd4>
    5c34:	mov	r7, r0
    5c38:	add	r2, pc, r2
    5c3c:	ldr	r4, [r2, #656]	; 0x290
    5c40:	add	r3, r2, #660	; 0x294
    5c44:	lsl	r5, r4, #3
    5c48:	add	r1, r2, r5
    5c4c:	add	r5, r3, r5
    5c50:	ldr	r1, [r1, #660]	; 0x294
    5c54:	cmp	r1, #207	; 0xcf
    5c58:	bhi	5ca8 <gen_cmp.constprop.18+0x90>
    5c5c:	add	r3, r4, #1
    5c60:	add	r8, r5, #8
    5c64:	cmp	r3, #15
    5c68:	str	r3, [r2, #656]	; 0x290
    5c6c:	bgt	5c9c <gen_cmp.constprop.18+0x84>
    5c70:	mov	r4, #1024	; 0x400
    5c74:	mov	r1, #1
    5c78:	lsl	r4, r4, r3
    5c7c:	mov	r0, r4
    5c80:	bl	ce8 <calloc@plt>
    5c84:	cmp	r0, #0
    5c88:	str	r0, [r5, #12]
    5c8c:	beq	5c9c <gen_cmp.constprop.18+0x84>
    5c90:	cmp	r4, #207	; 0xcf
    5c94:	str	r4, [r5, #8]
    5c98:	bhi	5cb4 <gen_cmp.constprop.18+0x9c>
    5c9c:	ldr	r0, [pc, #76]	; 5cf0 <gen_cmp.constprop.18+0xd8>
    5ca0:	add	r0, pc, r0
    5ca4:	bl	2130 <sf_bpf_error>
    5ca8:	ldr	r4, [r3, r4, lsl #3]
    5cac:	mov	r8, r5
    5cb0:	ldr	r0, [r5, #4]
    5cb4:	sub	r4, r4, #208	; 0xd0
    5cb8:	mov	r2, #21
    5cbc:	add	r3, r0, r4
    5cc0:	str	r4, [r8]
    5cc4:	mov	r0, r3
    5cc8:	str	r7, [r3, #4]
    5ccc:	str	r2, [r3, #8]
    5cd0:	str	r6, [r3, #20]
    5cd4:	str	r3, [r3, #96]	; 0x60
    5cd8:	ldrd	r4, [sp]
    5cdc:	ldrd	r6, [sp, #8]
    5ce0:	ldr	r8, [sp, #16]
    5ce4:	add	sp, sp, #20
    5ce8:	pop	{pc}		; (ldr pc, [sp], #4)
    5cec:	.word	0x00038728
    5cf0:	.word	0x0001a54c

00005cf4 <gen_uncond>:
    5cf4:	ldr	r3, [pc, #348]	; 5e58 <gen_uncond+0x164>
    5cf8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5cfc:	strd	r6, [sp, #8]
    5d00:	strd	r8, [sp, #16]
    5d04:	mov	r9, r0
    5d08:	str	sl, [sp, #24]
    5d0c:	add	r3, pc, r3
    5d10:	str	lr, [sp, #28]
    5d14:	ldr	r5, [r3, #656]	; 0x290
    5d18:	add	r7, r3, #660	; 0x294
    5d1c:	lsl	r6, r5, #3
    5d20:	add	r2, r3, r6
    5d24:	add	r8, r7, r6
    5d28:	ldr	r2, [r2, #660]	; 0x294
    5d2c:	cmp	r2, #19
    5d30:	bhi	5d88 <gen_uncond+0x94>
    5d34:	add	r5, r5, #1
    5d38:	add	sl, r8, #8
    5d3c:	cmp	r5, #15
    5d40:	str	r5, [r3, #656]	; 0x290
    5d44:	bgt	5e08 <gen_uncond+0x114>
    5d48:	mov	r3, #1024	; 0x400
    5d4c:	mov	r1, #1
    5d50:	lsl	r4, r3, r5
    5d54:	mov	r0, r4
    5d58:	bl	ce8 <calloc@plt>
    5d5c:	cmp	r0, #0
    5d60:	str	r0, [r8, #12]
    5d64:	beq	5e08 <gen_uncond+0x114>
    5d68:	cmp	r4, #19
    5d6c:	str	r4, [r8, #8]
    5d70:	bls	5e08 <gen_uncond+0x114>
    5d74:	add	r3, r6, #8
    5d78:	mov	r8, sl
    5d7c:	lsl	r6, r5, #3
    5d80:	add	r7, r7, r3
    5d84:	b	5d94 <gen_uncond+0xa0>
    5d88:	ldr	r0, [r8, #4]
    5d8c:	ldr	r4, [r7, r5, lsl #3]
    5d90:	mov	r7, r8
    5d94:	sub	r3, r4, #20
    5d98:	eor	r9, r9, #1
    5d9c:	ldr	r2, [pc, #184]	; 5e5c <gen_uncond+0x168>
    5da0:	add	r4, r0, r3
    5da4:	mov	r1, #0
    5da8:	str	r3, [r8]
    5dac:	str	r1, [r0, r3]
    5db0:	str	r9, [r4, #12]
    5db4:	add	r2, pc, r2
    5db8:	add	r6, r2, r6
    5dbc:	ldr	r3, [r6, #660]	; 0x294
    5dc0:	cmp	r3, #207	; 0xcf
    5dc4:	bhi	5e14 <gen_uncond+0x120>
    5dc8:	add	r5, r5, #1
    5dcc:	add	r6, r7, #8
    5dd0:	cmp	r5, #15
    5dd4:	str	r5, [r2, #656]	; 0x290
    5dd8:	bgt	5e08 <gen_uncond+0x114>
    5ddc:	mov	r3, #1024	; 0x400
    5de0:	mov	r1, #1
    5de4:	lsl	r5, r3, r5
    5de8:	mov	r0, r5
    5dec:	bl	ce8 <calloc@plt>
    5df0:	cmp	r0, #0
    5df4:	str	r0, [r7, #12]
    5df8:	beq	5e08 <gen_uncond+0x114>
    5dfc:	cmp	r5, #207	; 0xcf
    5e00:	str	r5, [r7, #8]
    5e04:	bhi	5e20 <gen_uncond+0x12c>
    5e08:	ldr	r0, [pc, #80]	; 5e60 <gen_uncond+0x16c>
    5e0c:	add	r0, pc, r0
    5e10:	bl	2130 <sf_bpf_error>
    5e14:	ldr	r5, [r7]
    5e18:	mov	r6, r7
    5e1c:	ldr	r0, [r7, #4]
    5e20:	sub	r5, r5, #208	; 0xd0
    5e24:	mov	r2, #21
    5e28:	add	r3, r0, r5
    5e2c:	str	r5, [r6]
    5e30:	mov	r0, r3
    5e34:	str	r4, [r3, #4]
    5e38:	str	r2, [r3, #8]
    5e3c:	str	r3, [r3, #96]	; 0x60
    5e40:	ldrd	r4, [sp]
    5e44:	ldrd	r6, [sp, #8]
    5e48:	ldrd	r8, [sp, #16]
    5e4c:	ldr	sl, [sp, #24]
    5e50:	add	sp, sp, #28
    5e54:	pop	{pc}		; (ldr pc, [sp], #4)
    5e58:	.word	0x00038654
    5e5c:	.word	0x000385ac
    5e60:	.word	0x0001a3e0

00005e64 <gen_ncmp.constprop.16>:
    5e64:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5e68:	mov	r4, r2
    5e6c:	mov	r5, r3
    5e70:	strd	r6, [sp, #8]
    5e74:	strd	r8, [sp, #16]
    5e78:	str	sl, [sp, #24]
    5e7c:	str	lr, [sp, #28]
    5e80:	bl	4e84 <gen_load_llrel>
    5e84:	cmn	r4, #1
    5e88:	mov	r7, r0
    5e8c:	bne	5f70 <gen_ncmp.constprop.16+0x10c>
    5e90:	ldr	r2, [pc, #264]	; 5fa0 <gen_ncmp.constprop.16+0x13c>
    5e94:	orr	r8, r5, #5
    5e98:	add	r2, pc, r2
    5e9c:	ldr	r4, [r2, #656]	; 0x290
    5ea0:	add	r3, r2, #660	; 0x294
    5ea4:	lsl	r6, r4, #3
    5ea8:	add	r1, r2, r6
    5eac:	add	r6, r3, r6
    5eb0:	ldr	r1, [r1, #660]	; 0x294
    5eb4:	cmp	r1, #207	; 0xcf
    5eb8:	bhi	5f08 <gen_ncmp.constprop.16+0xa4>
    5ebc:	add	r3, r4, #1
    5ec0:	add	r9, r6, #8
    5ec4:	cmp	r3, #15
    5ec8:	str	r3, [r2, #656]	; 0x290
    5ecc:	bgt	5efc <gen_ncmp.constprop.16+0x98>
    5ed0:	mov	r4, #1024	; 0x400
    5ed4:	mov	r1, #1
    5ed8:	lsl	r4, r4, r3
    5edc:	mov	r0, r4
    5ee0:	bl	ce8 <calloc@plt>
    5ee4:	cmp	r0, #0
    5ee8:	str	r0, [r6, #12]
    5eec:	beq	5efc <gen_ncmp.constprop.16+0x98>
    5ef0:	cmp	r4, #207	; 0xcf
    5ef4:	str	r4, [r6, #8]
    5ef8:	bhi	5f14 <gen_ncmp.constprop.16+0xb0>
    5efc:	ldr	r0, [pc, #160]	; 5fa4 <gen_ncmp.constprop.16+0x140>
    5f00:	add	r0, pc, r0
    5f04:	bl	2130 <sf_bpf_error>
    5f08:	ldr	r4, [r3, r4, lsl #3]
    5f0c:	mov	r9, r6
    5f10:	ldr	r0, [r6, #4]
    5f14:	sub	r4, r4, #208	; 0xd0
    5f18:	ldr	r3, [sp, #32]
    5f1c:	add	r0, r0, r4
    5f20:	str	r4, [r9]
    5f24:	stmib	r0, {r7, r8}
    5f28:	str	r0, [r0, #96]	; 0x60
    5f2c:	cmp	r3, #0
    5f30:	ldr	r3, [sp, #36]	; 0x24
    5f34:	str	r3, [r0, #20]
    5f38:	beq	5f58 <gen_ncmp.constprop.16+0xf4>
    5f3c:	bic	r5, r5, #16
    5f40:	cmp	r5, #32
    5f44:	bne	5f58 <gen_ncmp.constprop.16+0xf4>
    5f48:	ldr	r3, [r0, #44]	; 0x2c
    5f4c:	clz	r3, r3
    5f50:	lsr	r3, r3, #5
    5f54:	str	r3, [r0, #44]	; 0x2c
    5f58:	ldrd	r4, [sp]
    5f5c:	ldrd	r6, [sp, #8]
    5f60:	ldrd	r8, [sp, #16]
    5f64:	ldr	sl, [sp, #24]
    5f68:	add	sp, sp, #28
    5f6c:	pop	{pc}		; (ldr pc, [sp], #4)
    5f70:	bl	22d0 <newchunk.constprop.25>
    5f74:	mov	r3, #84	; 0x54
    5f78:	mov	r2, r7
    5f7c:	str	r3, [r0]
    5f80:	str	r4, [r0, #12]
    5f84:	b	5f8c <gen_ncmp.constprop.16+0x128>
    5f88:	mov	r2, r3
    5f8c:	ldr	r3, [r2, #16]
    5f90:	cmp	r3, #0
    5f94:	bne	5f88 <gen_ncmp.constprop.16+0x124>
    5f98:	str	r0, [r2, #16]
    5f9c:	b	5e90 <gen_ncmp.constprop.16+0x2c>
    5fa0:	.word	0x000384c8
    5fa4:	.word	0x0001a2ec

00005fa8 <sf_gen_atmfield_code.constprop.11>:
    5fa8:	sub	r0, r0, #51	; 0x33
    5fac:	strd	r4, [sp, #-12]!
    5fb0:	mov	r4, r1
    5fb4:	str	lr, [sp, #8]
    5fb8:	sub	sp, sp, #12
    5fbc:	cmp	r0, #4
    5fc0:	addls	pc, pc, r0, lsl #2
    5fc4:	b	6050 <sf_gen_atmfield_code.constprop.11+0xa8>
    5fc8:	b	6030 <sf_gen_atmfield_code.constprop.11+0x88>
    5fcc:	b	6054 <sf_gen_atmfield_code.constprop.11+0xac>
    5fd0:	b	607c <sf_gen_atmfield_code.constprop.11+0xd4>
    5fd4:	b	60bc <sf_gen_atmfield_code.constprop.11+0x114>
    5fd8:	b	5fdc <sf_gen_atmfield_code.constprop.11+0x34>
    5fdc:	ldr	r3, [pc, #280]	; 60fc <sf_gen_atmfield_code.constprop.11+0x154>
    5fe0:	add	r3, pc, r3
    5fe4:	ldr	r2, [r3, #884]	; 0x374
    5fe8:	cmp	r2, #0
    5fec:	beq	60d8 <sf_gen_atmfield_code.constprop.11+0x130>
    5ff0:	ldr	r0, [r3, #896]	; 0x380
    5ff4:	cmn	r0, #1
    5ff8:	beq	6050 <sf_gen_atmfield_code.constprop.11+0xa8>
    5ffc:	mov	r1, #16
    6000:	bl	4e84 <gen_load_llrel>
    6004:	mov	r5, r0
    6008:	bl	24d8 <newchunk.constprop.26>
    600c:	mov	r3, #21
    6010:	str	r5, [r0, #4]
    6014:	str	r3, [r0, #8]
    6018:	str	r4, [r0, #20]
    601c:	str	r0, [r0, #96]	; 0x60
    6020:	add	sp, sp, #12
    6024:	ldrd	r4, [sp]
    6028:	add	sp, sp, #8
    602c:	pop	{pc}		; (ldr pc, [sp], #4)
    6030:	ldr	r3, [pc, #200]	; 6100 <sf_gen_atmfield_code.constprop.11+0x158>
    6034:	add	r3, pc, r3
    6038:	ldr	r2, [r3, #884]	; 0x374
    603c:	cmp	r2, #0
    6040:	beq	60f0 <sf_gen_atmfield_code.constprop.11+0x148>
    6044:	ldr	r0, [r3, #888]	; 0x378
    6048:	cmn	r0, #1
    604c:	bne	5ffc <sf_gen_atmfield_code.constprop.11+0x54>
    6050:	bl	ebc <abort@plt>
    6054:	ldr	r3, [pc, #168]	; 6104 <sf_gen_atmfield_code.constprop.11+0x15c>
    6058:	add	r3, pc, r3
    605c:	ldr	r2, [r3, #884]	; 0x374
    6060:	cmp	r2, #0
    6064:	beq	60e4 <sf_gen_atmfield_code.constprop.11+0x13c>
    6068:	ldr	r0, [r3, #892]	; 0x37c
    606c:	cmn	r0, #1
    6070:	beq	6050 <sf_gen_atmfield_code.constprop.11+0xa8>
    6074:	mov	r1, #8
    6078:	b	6000 <sf_gen_atmfield_code.constprop.11+0x58>
    607c:	ldr	r3, [pc, #132]	; 6108 <sf_gen_atmfield_code.constprop.11+0x160>
    6080:	add	r3, pc, r3
    6084:	ldr	r0, [r3, #896]	; 0x380
    6088:	cmn	r0, #1
    608c:	beq	6050 <sf_gen_atmfield_code.constprop.11+0xa8>
    6090:	mov	ip, #0
    6094:	mov	r3, #16
    6098:	mov	r1, r3
    609c:	mov	r2, #15
    60a0:	str	ip, [sp]
    60a4:	str	r4, [sp, #4]
    60a8:	bl	5e64 <gen_ncmp.constprop.16>
    60ac:	add	sp, sp, #12
    60b0:	ldrd	r4, [sp]
    60b4:	add	sp, sp, #8
    60b8:	pop	{pc}		; (ldr pc, [sp], #4)
    60bc:	ldr	r3, [pc, #72]	; 610c <sf_gen_atmfield_code.constprop.11+0x164>
    60c0:	add	r3, pc, r3
    60c4:	ldr	r0, [r3, #900]	; 0x384
    60c8:	cmn	r0, #1
    60cc:	beq	6050 <sf_gen_atmfield_code.constprop.11+0xa8>
    60d0:	add	r0, r0, #5
    60d4:	b	5ffc <sf_gen_atmfield_code.constprop.11+0x54>
    60d8:	ldr	r0, [pc, #48]	; 6110 <sf_gen_atmfield_code.constprop.11+0x168>
    60dc:	add	r0, pc, r0
    60e0:	bl	2130 <sf_bpf_error>
    60e4:	ldr	r0, [pc, #40]	; 6114 <sf_gen_atmfield_code.constprop.11+0x16c>
    60e8:	add	r0, pc, r0
    60ec:	bl	2130 <sf_bpf_error>
    60f0:	ldr	r0, [pc, #32]	; 6118 <sf_gen_atmfield_code.constprop.11+0x170>
    60f4:	add	r0, pc, r0
    60f8:	bl	2130 <sf_bpf_error>
    60fc:	.word	0x00038380
    6100:	.word	0x0003832c
    6104:	.word	0x00038308
    6108:	.word	0x000382e0
    610c:	.word	0x000382a0
    6110:	.word	0x0001a194
    6114:	.word	0x0001a168
    6118:	.word	0x0001a13c

0000611c <sf_sdup>:
    611c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6120:	strd	r6, [sp, #8]
    6124:	mov	r7, r0
    6128:	strd	r8, [sp, #16]
    612c:	str	sl, [sp, #24]
    6130:	str	lr, [sp, #28]
    6134:	bl	df0 <strlen@plt>
    6138:	ldr	r3, [pc, #196]	; 6204 <sf_sdup+0xe8>
    613c:	add	r4, r0, #4
    6140:	mov	r6, r0
    6144:	bic	r9, r4, #3
    6148:	add	sl, r0, #1
    614c:	add	r3, pc, r3
    6150:	ldr	r4, [r3, #656]	; 0x290
    6154:	add	r2, r3, #660	; 0x294
    6158:	lsl	r5, r4, #3
    615c:	add	r1, r3, r5
    6160:	add	r5, r2, r5
    6164:	ldr	r1, [r1, #660]	; 0x294
    6168:	cmp	r9, r1
    616c:	bls	61bc <sf_sdup+0xa0>
    6170:	add	r4, r4, #1
    6174:	add	r8, r5, #8
    6178:	cmp	r4, #15
    617c:	str	r4, [r3, #656]	; 0x290
    6180:	bgt	61b0 <sf_sdup+0x94>
    6184:	mov	r3, #1024	; 0x400
    6188:	mov	r1, #1
    618c:	lsl	r4, r3, r4
    6190:	mov	r0, r4
    6194:	bl	ce8 <calloc@plt>
    6198:	cmp	r0, #0
    619c:	str	r0, [r5, #12]
    61a0:	beq	61b0 <sf_sdup+0x94>
    61a4:	cmp	r9, r4
    61a8:	str	r4, [r5, #8]
    61ac:	bls	61c8 <sf_sdup+0xac>
    61b0:	ldr	r0, [pc, #80]	; 6208 <sf_sdup+0xec>
    61b4:	add	r0, pc, r0
    61b8:	bl	2130 <sf_bpf_error>
    61bc:	ldr	r4, [r2, r4, lsl #3]
    61c0:	mov	r8, r5
    61c4:	ldr	r0, [r5, #4]
    61c8:	sub	r4, r4, r9
    61cc:	mov	r2, sl
    61d0:	add	r3, r0, r4
    61d4:	mov	r1, r7
    61d8:	mov	r0, r3
    61dc:	str	r4, [r8]
    61e0:	bl	e44 <strncpy@plt>
    61e4:	mov	r2, #0
    61e8:	strb	r2, [r0, r6]
    61ec:	ldrd	r4, [sp]
    61f0:	ldrd	r6, [sp, #8]
    61f4:	ldrd	r8, [sp, #16]
    61f8:	ldr	sl, [sp, #24]
    61fc:	add	sp, sp, #28
    6200:	pop	{pc}		; (ldr pc, [sp], #4)
    6204:	.word	0x00038214
    6208:	.word	0x0001a038

0000620c <sfbpf_compile>:
    620c:	strd	r4, [sp, #-20]!	; 0xffffffec
    6210:	mov	ip, #0
    6214:	strd	r6, [sp, #8]
    6218:	str	lr, [sp, #16]
    621c:	sub	sp, sp, #28
    6220:	ldr	lr, [pc, #2888]	; 6d70 <sfbpf_compile+0xb64>
    6224:	strd	r0, [sp, #4]
    6228:	mov	r1, ip
    622c:	ldr	r0, [pc, #2880]	; 6d74 <sfbpf_compile+0xb68>
    6230:	str	r2, [sp, #12]
    6234:	mov	r2, #64	; 0x40
    6238:	str	r3, [sp, #16]
    623c:	add	lr, pc, lr
    6240:	ldr	r3, [pc, #2864]	; 6d78 <sfbpf_compile+0xb6c>
    6244:	str	lr, [sp]
    6248:	ldr	r0, [lr, r0]
    624c:	ldr	r4, [pc, #2856]	; 6d7c <sfbpf_compile+0xb70>
    6250:	str	ip, [r0]
    6254:	ldr	r3, [lr, r3]
    6258:	add	r4, pc, r4
    625c:	add	r0, r4, #808	; 0x328
    6260:	str	ip, [r4, #804]	; 0x324
    6264:	str	ip, [r4, #904]	; 0x388
    6268:	str	ip, [r3]
    626c:	bl	e2c <memset@plt>
    6270:	add	r0, r4, #264	; 0x108
    6274:	bl	d3c <_setjmp@plt>
    6278:	cmp	r0, #0
    627c:	beq	62fc <sfbpf_compile+0xf0>
    6280:	ldr	r4, [pc, #2808]	; 6d80 <sfbpf_compile+0xb74>
    6284:	add	r4, pc, r4
    6288:	ldr	r0, [r4, #908]	; 0x38c
    628c:	cmp	r0, #0
    6290:	beq	62a0 <sfbpf_compile+0x94>
    6294:	bl	e80 <freeaddrinfo@plt>
    6298:	mov	r3, #0
    629c:	str	r3, [r4, #908]	; 0x38c
    62a0:	bl	1feb8 <sf_lex_cleanup>
    62a4:	ldr	r3, [pc, #2776]	; 6d84 <sfbpf_compile+0xb78>
    62a8:	mov	r2, #0
    62ac:	mov	r6, r2
    62b0:	add	r3, pc, r3
    62b4:	add	r4, r3, #660	; 0x294
    62b8:	add	r5, r3, #788	; 0x314
    62bc:	str	r2, [r3, #656]	; 0x290
    62c0:	ldr	r0, [r4, #4]
    62c4:	cmp	r0, #0
    62c8:	beq	62d4 <sfbpf_compile+0xc8>
    62cc:	bl	d48 <free@plt>
    62d0:	str	r6, [r4, #4]
    62d4:	add	r4, r4, #8
    62d8:	cmp	r5, r4
    62dc:	bne	62c0 <sfbpf_compile+0xb4>
    62e0:	mvn	r5, #0
    62e4:	mov	r0, r5
    62e8:	add	sp, sp, #28
    62ec:	ldrd	r4, [sp]
    62f0:	ldrd	r6, [sp, #8]
    62f4:	add	sp, sp, #16
    62f8:	pop	{pc}		; (ldr pc, [sp], #4)
    62fc:	ldr	ip, [pc, #2692]	; 6d88 <sfbpf_compile+0xb7c>
    6300:	ldr	r3, [sp, #4]
    6304:	ldr	r2, [sp, #52]	; 0x34
    6308:	add	ip, pc, ip
    630c:	cmp	r3, #0
    6310:	str	r2, [ip, #912]	; 0x390
    6314:	str	r3, [ip, #916]	; 0x394
    6318:	beq	6810 <sfbpf_compile+0x604>
    631c:	ldr	r3, [sp, #16]
    6320:	cmp	r3, #0
    6324:	beq	6844 <sfbpf_compile+0x638>
    6328:	ldr	r0, [sp, #16]
    632c:	bl	1fde0 <sf_lex_init>
    6330:	ldr	r0, [pc, #2644]	; 6d8c <sfbpf_compile+0xb80>
    6334:	mvn	r2, #0
    6338:	mov	r1, #0
    633c:	ldr	r3, [pc, #2636]	; 6d90 <sfbpf_compile+0xb84>
    6340:	add	r0, pc, r0
    6344:	str	r2, [r0]
    6348:	add	r3, pc, r3
    634c:	str	r1, [r0, #4]
    6350:	ldr	r0, [sp, #8]
    6354:	str	r2, [r3, #788]	; 0x314
    6358:	str	r1, [r3, #792]	; 0x318
    635c:	str	r1, [r3, #796]	; 0x31c
    6360:	str	r2, [r3, #800]	; 0x320
    6364:	str	r0, [r3, #876]	; 0x36c
    6368:	str	r1, [r3, #880]	; 0x370
    636c:	str	r1, [r3, #884]	; 0x374
    6370:	str	r2, [r3, #888]	; 0x378
    6374:	str	r2, [r3, #892]	; 0x37c
    6378:	str	r2, [r3, #896]	; 0x380
    637c:	str	r2, [r3, #900]	; 0x384
    6380:	str	r1, [r3, #920]	; 0x398
    6384:	str	r1, [r3, #924]	; 0x39c
    6388:	str	r1, [r3, #928]	; 0x3a0
    638c:	str	r2, [r3, #932]	; 0x3a4
    6390:	str	r2, [r3, #936]	; 0x3a8
    6394:	str	r2, [r3, #940]	; 0x3ac
    6398:	str	r2, [r3, #944]	; 0x3b0
    639c:	str	r2, [r3, #948]	; 0x3b4
    63a0:	cmp	r0, #229	; 0xe5
    63a4:	addls	pc, pc, r0, lsl #2
    63a8:	b	6d54 <sfbpf_compile+0xb48>
    63ac:	b	6b60 <sfbpf_compile+0x954>
    63b0:	b	6b70 <sfbpf_compile+0x964>
    63b4:	b	6d54 <sfbpf_compile+0xb48>
    63b8:	b	6d54 <sfbpf_compile+0xb48>
    63bc:	b	6d54 <sfbpf_compile+0xb48>
    63c0:	b	6d54 <sfbpf_compile+0xb48>
    63c4:	b	697c <sfbpf_compile+0x770>
    63c8:	b	69a4 <sfbpf_compile+0x798>
    63cc:	b	69b8 <sfbpf_compile+0x7ac>
    63d0:	b	69cc <sfbpf_compile+0x7c0>
    63d4:	b	69e0 <sfbpf_compile+0x7d4>
    63d8:	b	6a08 <sfbpf_compile+0x7fc>
    63dc:	b	68b0 <sfbpf_compile+0x6a4>
    63e0:	b	6d54 <sfbpf_compile+0xb48>
    63e4:	b	6d54 <sfbpf_compile+0xb48>
    63e8:	b	6a2c <sfbpf_compile+0x820>
    63ec:	b	6954 <sfbpf_compile+0x748>
    63f0:	b	6d54 <sfbpf_compile+0xb48>
    63f4:	b	6d54 <sfbpf_compile+0xb48>
    63f8:	b	6a08 <sfbpf_compile+0x7fc>
    63fc:	b	6d54 <sfbpf_compile+0xb48>
    6400:	b	6d54 <sfbpf_compile+0xb48>
    6404:	b	6d54 <sfbpf_compile+0xb48>
    6408:	b	6d54 <sfbpf_compile+0xb48>
    640c:	b	6d54 <sfbpf_compile+0xb48>
    6410:	b	6d54 <sfbpf_compile+0xb48>
    6414:	b	6d54 <sfbpf_compile+0xb48>
    6418:	b	6d54 <sfbpf_compile+0xb48>
    641c:	b	6d54 <sfbpf_compile+0xb48>
    6420:	b	6d54 <sfbpf_compile+0xb48>
    6424:	b	6d54 <sfbpf_compile+0xb48>
    6428:	b	6d54 <sfbpf_compile+0xb48>
    642c:	b	6d54 <sfbpf_compile+0xb48>
    6430:	b	6d54 <sfbpf_compile+0xb48>
    6434:	b	6d54 <sfbpf_compile+0xb48>
    6438:	b	6d54 <sfbpf_compile+0xb48>
    643c:	b	6d54 <sfbpf_compile+0xb48>
    6440:	b	6d54 <sfbpf_compile+0xb48>
    6444:	b	6d54 <sfbpf_compile+0xb48>
    6448:	b	6d54 <sfbpf_compile+0xb48>
    644c:	b	6d54 <sfbpf_compile+0xb48>
    6450:	b	6d54 <sfbpf_compile+0xb48>
    6454:	b	6d54 <sfbpf_compile+0xb48>
    6458:	b	6d54 <sfbpf_compile+0xb48>
    645c:	b	6d54 <sfbpf_compile+0xb48>
    6460:	b	6d54 <sfbpf_compile+0xb48>
    6464:	b	6d54 <sfbpf_compile+0xb48>
    6468:	b	6d54 <sfbpf_compile+0xb48>
    646c:	b	6d54 <sfbpf_compile+0xb48>
    6470:	b	6d54 <sfbpf_compile+0xb48>
    6474:	b	69cc <sfbpf_compile+0x7c0>
    6478:	b	6968 <sfbpf_compile+0x75c>
    647c:	b	6d54 <sfbpf_compile+0xb48>
    6480:	b	6d54 <sfbpf_compile+0xb48>
    6484:	b	6d54 <sfbpf_compile+0xb48>
    6488:	b	6d54 <sfbpf_compile+0xb48>
    648c:	b	6d54 <sfbpf_compile+0xb48>
    6490:	b	6d54 <sfbpf_compile+0xb48>
    6494:	b	6d54 <sfbpf_compile+0xb48>
    6498:	b	6d54 <sfbpf_compile+0xb48>
    649c:	b	6d54 <sfbpf_compile+0xb48>
    64a0:	b	6d54 <sfbpf_compile+0xb48>
    64a4:	b	6d54 <sfbpf_compile+0xb48>
    64a8:	b	6d54 <sfbpf_compile+0xb48>
    64ac:	b	6d54 <sfbpf_compile+0xb48>
    64b0:	b	6d54 <sfbpf_compile+0xb48>
    64b4:	b	6d54 <sfbpf_compile+0xb48>
    64b8:	b	6d54 <sfbpf_compile+0xb48>
    64bc:	b	6d54 <sfbpf_compile+0xb48>
    64c0:	b	6d54 <sfbpf_compile+0xb48>
    64c4:	b	6d54 <sfbpf_compile+0xb48>
    64c8:	b	6d54 <sfbpf_compile+0xb48>
    64cc:	b	6d54 <sfbpf_compile+0xb48>
    64d0:	b	6d54 <sfbpf_compile+0xb48>
    64d4:	b	6d54 <sfbpf_compile+0xb48>
    64d8:	b	6d54 <sfbpf_compile+0xb48>
    64dc:	b	6d54 <sfbpf_compile+0xb48>
    64e0:	b	6d54 <sfbpf_compile+0xb48>
    64e4:	b	6d54 <sfbpf_compile+0xb48>
    64e8:	b	6d54 <sfbpf_compile+0xb48>
    64ec:	b	6d54 <sfbpf_compile+0xb48>
    64f0:	b	6d54 <sfbpf_compile+0xb48>
    64f4:	b	6d54 <sfbpf_compile+0xb48>
    64f8:	b	6d54 <sfbpf_compile+0xb48>
    64fc:	b	6d54 <sfbpf_compile+0xb48>
    6500:	b	6d54 <sfbpf_compile+0xb48>
    6504:	b	6d54 <sfbpf_compile+0xb48>
    6508:	b	6d54 <sfbpf_compile+0xb48>
    650c:	b	6d54 <sfbpf_compile+0xb48>
    6510:	b	6d54 <sfbpf_compile+0xb48>
    6514:	b	6d54 <sfbpf_compile+0xb48>
    6518:	b	6d54 <sfbpf_compile+0xb48>
    651c:	b	6d54 <sfbpf_compile+0xb48>
    6520:	b	6d54 <sfbpf_compile+0xb48>
    6524:	b	6d54 <sfbpf_compile+0xb48>
    6528:	b	6d54 <sfbpf_compile+0xb48>
    652c:	b	6d54 <sfbpf_compile+0xb48>
    6530:	b	6d54 <sfbpf_compile+0xb48>
    6534:	b	6d54 <sfbpf_compile+0xb48>
    6538:	b	692c <sfbpf_compile+0x720>
    653c:	b	6d54 <sfbpf_compile+0xb48>
    6540:	b	6d54 <sfbpf_compile+0xb48>
    6544:	b	6d54 <sfbpf_compile+0xb48>
    6548:	b	6d54 <sfbpf_compile+0xb48>
    654c:	b	69cc <sfbpf_compile+0x7c0>
    6550:	b	6900 <sfbpf_compile+0x6f4>
    6554:	b	6d54 <sfbpf_compile+0xb48>
    6558:	b	68b0 <sfbpf_compile+0x6a4>
    655c:	b	6b60 <sfbpf_compile+0x954>
    6560:	b	6b18 <sfbpf_compile+0x90c>
    6564:	b	6d54 <sfbpf_compile+0xb48>
    6568:	b	6d54 <sfbpf_compile+0xb48>
    656c:	b	6d54 <sfbpf_compile+0xb48>
    6570:	b	6b3c <sfbpf_compile+0x930>
    6574:	b	68b0 <sfbpf_compile+0x6a4>
    6578:	b	6d54 <sfbpf_compile+0xb48>
    657c:	b	6d54 <sfbpf_compile+0xb48>
    6580:	b	6d54 <sfbpf_compile+0xb48>
    6584:	b	6d54 <sfbpf_compile+0xb48>
    6588:	b	6900 <sfbpf_compile+0x6f4>
    658c:	b	6d54 <sfbpf_compile+0xb48>
    6590:	b	6d54 <sfbpf_compile+0xb48>
    6594:	b	6c04 <sfbpf_compile+0x9f8>
    6598:	b	6c2c <sfbpf_compile+0xa20>
    659c:	b	6d54 <sfbpf_compile+0xb48>
    65a0:	b	6d54 <sfbpf_compile+0xb48>
    65a4:	b	6d54 <sfbpf_compile+0xb48>
    65a8:	b	6900 <sfbpf_compile+0x6f4>
    65ac:	b	6d54 <sfbpf_compile+0xb48>
    65b0:	b	6c7c <sfbpf_compile+0xa70>
    65b4:	b	6c8c <sfbpf_compile+0xa80>
    65b8:	b	6c8c <sfbpf_compile+0xa80>
    65bc:	b	6cb4 <sfbpf_compile+0xaa8>
    65c0:	b	6cc4 <sfbpf_compile+0xab8>
    65c4:	b	6c8c <sfbpf_compile+0xa80>
    65c8:	b	6cd8 <sfbpf_compile+0xacc>
    65cc:	b	6d00 <sfbpf_compile+0xaf4>
    65d0:	b	6d10 <sfbpf_compile+0xb04>
    65d4:	b	6d24 <sfbpf_compile+0xb18>
    65d8:	b	6d38 <sfbpf_compile+0xb2c>
    65dc:	b	6a40 <sfbpf_compile+0x834>
    65e0:	b	6d54 <sfbpf_compile+0xb48>
    65e4:	b	6d54 <sfbpf_compile+0xb48>
    65e8:	b	68f4 <sfbpf_compile+0x6e8>
    65ec:	b	68f4 <sfbpf_compile+0x6e8>
    65f0:	b	6d54 <sfbpf_compile+0xb48>
    65f4:	b	6d54 <sfbpf_compile+0xb48>
    65f8:	b	6d54 <sfbpf_compile+0xb48>
    65fc:	b	6d54 <sfbpf_compile+0xb48>
    6600:	b	6d54 <sfbpf_compile+0xb48>
    6604:	b	6d54 <sfbpf_compile+0xb48>
    6608:	b	6d54 <sfbpf_compile+0xb48>
    660c:	b	6d54 <sfbpf_compile+0xb48>
    6610:	b	6d54 <sfbpf_compile+0xb48>
    6614:	b	6d54 <sfbpf_compile+0xb48>
    6618:	b	6d54 <sfbpf_compile+0xb48>
    661c:	b	6d54 <sfbpf_compile+0xb48>
    6620:	b	6d54 <sfbpf_compile+0xb48>
    6624:	b	6d54 <sfbpf_compile+0xb48>
    6628:	b	6d54 <sfbpf_compile+0xb48>
    662c:	b	6d54 <sfbpf_compile+0xb48>
    6630:	b	6d54 <sfbpf_compile+0xb48>
    6634:	b	6d54 <sfbpf_compile+0xb48>
    6638:	b	6900 <sfbpf_compile+0x6f4>
    663c:	b	6a84 <sfbpf_compile+0x878>
    6640:	b	6d54 <sfbpf_compile+0xb48>
    6644:	b	69cc <sfbpf_compile+0x7c0>
    6648:	b	6aac <sfbpf_compile+0x8a0>
    664c:	b	6ad8 <sfbpf_compile+0x8cc>
    6650:	b	6d54 <sfbpf_compile+0xb48>
    6654:	b	6d54 <sfbpf_compile+0xb48>
    6658:	b	6d54 <sfbpf_compile+0xb48>
    665c:	b	6d54 <sfbpf_compile+0xb48>
    6660:	b	6d54 <sfbpf_compile+0xb48>
    6664:	b	6d54 <sfbpf_compile+0xb48>
    6668:	b	6d54 <sfbpf_compile+0xb48>
    666c:	b	6d54 <sfbpf_compile+0xb48>
    6670:	b	6744 <sfbpf_compile+0x538>
    6674:	b	6aac <sfbpf_compile+0x8a0>
    6678:	b	6c8c <sfbpf_compile+0xa80>
    667c:	b	6c8c <sfbpf_compile+0xa80>
    6680:	b	6c8c <sfbpf_compile+0xa80>
    6684:	b	6bc4 <sfbpf_compile+0x9b8>
    6688:	b	68d0 <sfbpf_compile+0x6c4>
    668c:	b	6d54 <sfbpf_compile+0xb48>
    6690:	b	6d54 <sfbpf_compile+0xb48>
    6694:	b	6744 <sfbpf_compile+0x538>
    6698:	b	6744 <sfbpf_compile+0x538>
    669c:	b	6d54 <sfbpf_compile+0xb48>
    66a0:	b	6744 <sfbpf_compile+0x538>
    66a4:	b	6744 <sfbpf_compile+0x538>
    66a8:	b	6744 <sfbpf_compile+0x538>
    66ac:	b	6900 <sfbpf_compile+0x6f4>
    66b0:	b	6744 <sfbpf_compile+0x538>
    66b4:	b	6b50 <sfbpf_compile+0x944>
    66b8:	b	6744 <sfbpf_compile+0x538>
    66bc:	b	6744 <sfbpf_compile+0x538>
    66c0:	b	6be8 <sfbpf_compile+0x9dc>
    66c4:	b	6744 <sfbpf_compile+0x538>
    66c8:	b	6744 <sfbpf_compile+0x538>
    66cc:	b	68d0 <sfbpf_compile+0x6c4>
    66d0:	b	6744 <sfbpf_compile+0x538>
    66d4:	b	6b9c <sfbpf_compile+0x990>
    66d8:	b	6d54 <sfbpf_compile+0xb48>
    66dc:	b	6d54 <sfbpf_compile+0xb48>
    66e0:	b	6d54 <sfbpf_compile+0xb48>
    66e4:	b	6d54 <sfbpf_compile+0xb48>
    66e8:	b	6d54 <sfbpf_compile+0xb48>
    66ec:	b	6d54 <sfbpf_compile+0xb48>
    66f0:	b	6d54 <sfbpf_compile+0xb48>
    66f4:	b	6d54 <sfbpf_compile+0xb48>
    66f8:	b	6d54 <sfbpf_compile+0xb48>
    66fc:	b	6d54 <sfbpf_compile+0xb48>
    6700:	b	6d54 <sfbpf_compile+0xb48>
    6704:	b	6d54 <sfbpf_compile+0xb48>
    6708:	b	6744 <sfbpf_compile+0x538>
    670c:	b	6d54 <sfbpf_compile+0xb48>
    6710:	b	6d54 <sfbpf_compile+0xb48>
    6714:	b	6d54 <sfbpf_compile+0xb48>
    6718:	b	6744 <sfbpf_compile+0x538>
    671c:	b	6744 <sfbpf_compile+0x538>
    6720:	b	6d54 <sfbpf_compile+0xb48>
    6724:	b	6d54 <sfbpf_compile+0xb48>
    6728:	b	6d54 <sfbpf_compile+0xb48>
    672c:	b	6d54 <sfbpf_compile+0xb48>
    6730:	b	6d54 <sfbpf_compile+0xb48>
    6734:	b	6b04 <sfbpf_compile+0x8f8>
    6738:	b	6744 <sfbpf_compile+0x538>
    673c:	b	68b0 <sfbpf_compile+0x6a4>
    6740:	b	68b0 <sfbpf_compile+0x6a4>
    6744:	ldr	r3, [pc, #1608]	; 6d94 <sfbpf_compile+0xb88>
    6748:	add	r3, pc, r3
    674c:	mvn	r2, #0
    6750:	str	r2, [r3, #796]	; 0x31c
    6754:	str	r2, [r3, #872]	; 0x368
    6758:	str	r2, [r3, #952]	; 0x3b8
    675c:	str	r2, [r3, #956]	; 0x3bc
    6760:	bl	1bf00 <sfbpf_parse>
    6764:	ldr	r3, [pc, #1548]	; 6d78 <sfbpf_compile+0xb6c>
    6768:	ldr	r2, [sp]
    676c:	ldr	r3, [r2, r3]
    6770:	ldr	r5, [r3]
    6774:	cmp	r5, #0
    6778:	bne	6d64 <sfbpf_compile+0xb58>
    677c:	ldr	r4, [pc, #1556]	; 6d98 <sfbpf_compile+0xb8c>
    6780:	add	r4, pc, r4
    6784:	ldr	r0, [r4, #904]	; 0x388
    6788:	cmp	r0, #0
    678c:	beq	6890 <sfbpf_compile+0x684>
    6790:	ldr	r3, [sp, #48]	; 0x30
    6794:	cmp	r3, #0
    6798:	beq	67b4 <sfbpf_compile+0x5a8>
    679c:	ldr	r3, [pc, #1488]	; 6d74 <sfbpf_compile+0xb68>
    67a0:	ldr	r2, [sp]
    67a4:	ldr	r3, [r2, r3]
    67a8:	ldr	r3, [r3]
    67ac:	cmp	r3, #0
    67b0:	beq	6850 <sfbpf_compile+0x644>
    67b4:	add	r1, sp, #20
    67b8:	bl	19e68 <sf_icode_to_fcode>
    67bc:	ldr	r2, [sp, #12]
    67c0:	ldr	r3, [sp, #20]
    67c4:	str	r3, [r2]
    67c8:	str	r0, [r2, #4]
    67cc:	bl	1feb8 <sf_lex_cleanup>
    67d0:	ldr	r3, [pc, #1476]	; 6d9c <sfbpf_compile+0xb90>
    67d4:	mov	r2, #0
    67d8:	mov	r7, r2
    67dc:	add	r3, pc, r3
    67e0:	add	r4, r3, #660	; 0x294
    67e4:	add	r6, r3, #788	; 0x314
    67e8:	str	r2, [r3, #656]	; 0x290
    67ec:	ldr	r0, [r4, #4]
    67f0:	cmp	r0, #0
    67f4:	beq	6800 <sfbpf_compile+0x5f4>
    67f8:	bl	d48 <free@plt>
    67fc:	str	r7, [r4, #4]
    6800:	add	r4, r4, #8
    6804:	cmp	r6, r4
    6808:	bne	67ec <sfbpf_compile+0x5e0>
    680c:	b	62e4 <sfbpf_compile+0xd8>
    6810:	ldr	lr, [pc, #1416]	; 6da0 <sfbpf_compile+0xb94>
    6814:	add	lr, pc, lr
    6818:	ldrb	r4, [lr, #32]
    681c:	ldrd	r0, [lr]
    6820:	ldrd	r2, [lr, #8]
    6824:	strd	r0, [ip]
    6828:	strb	r4, [ip, #32]
    682c:	ldrd	r4, [lr, #16]
    6830:	strd	r2, [ip, #8]
    6834:	ldrd	r0, [lr, #24]
    6838:	strd	r4, [ip, #16]
    683c:	strd	r0, [ip, #24]
    6840:	b	62e0 <sfbpf_compile+0xd4>
    6844:	ldr	r0, [pc, #1368]	; 6da4 <sfbpf_compile+0xb98>
    6848:	add	r0, pc, r0
    684c:	b	632c <sfbpf_compile+0x120>
    6850:	ldr	r4, [pc, #1360]	; 6da8 <sfbpf_compile+0xb9c>
    6854:	add	r4, pc, r4
    6858:	add	r0, r4, #904	; 0x388
    685c:	bl	19638 <sf_bpf_optimize>
    6860:	ldr	r0, [r4, #904]	; 0x388
    6864:	cmp	r0, #0
    6868:	beq	6884 <sfbpf_compile+0x678>
    686c:	ldr	r3, [r0, #8]
    6870:	cmp	r3, #6
    6874:	bne	67b4 <sfbpf_compile+0x5a8>
    6878:	ldr	r3, [r0, #20]
    687c:	cmp	r3, #0
    6880:	bne	67b4 <sfbpf_compile+0x5a8>
    6884:	ldr	r0, [pc, #1312]	; 6dac <sfbpf_compile+0xba0>
    6888:	add	r0, pc, r0
    688c:	bl	2130 <sf_bpf_error>
    6890:	ldr	r6, [r4, #916]	; 0x394
    6894:	bl	24d8 <newchunk.constprop.26>
    6898:	mov	r3, #6
    689c:	str	r0, [r4, #904]	; 0x388
    68a0:	str	r3, [r0, #8]
    68a4:	str	r6, [r0, #20]
    68a8:	str	r0, [r0, #96]	; 0x60
    68ac:	b	6790 <sfbpf_compile+0x584>
    68b0:	ldr	r3, [pc, #1272]	; 6db0 <sfbpf_compile+0xba4>
    68b4:	mov	r2, #0
    68b8:	mvn	r1, #0
    68bc:	add	r3, pc, r3
    68c0:	str	r2, [r3, #872]	; 0x368
    68c4:	str	r1, [r3, #952]	; 0x3b8
    68c8:	str	r2, [r3, #956]	; 0x3bc
    68cc:	b	6760 <sfbpf_compile+0x554>
    68d0:	ldr	r3, [pc, #1244]	; 6db4 <sfbpf_compile+0xba8>
    68d4:	mov	r1, #18
    68d8:	add	r3, pc, r3
    68dc:	mvn	r2, #0
    68e0:	str	r2, [r3, #796]	; 0x31c
    68e4:	str	r2, [r3, #872]	; 0x368
    68e8:	str	r1, [r3, #952]	; 0x3b8
    68ec:	str	r2, [r3, #956]	; 0x3bc
    68f0:	b	6760 <sfbpf_compile+0x554>
    68f4:	ldr	r3, [pc, #1212]	; 6db8 <sfbpf_compile+0xbac>
    68f8:	add	r3, pc, r3
    68fc:	b	674c <sfbpf_compile+0x540>
    6900:	ldr	r3, [pc, #1204]	; 6dbc <sfbpf_compile+0xbb0>
    6904:	mov	r1, #24
    6908:	mov	ip, #1
    690c:	mov	r0, #8
    6910:	mov	r2, #3
    6914:	add	r3, pc, r3
    6918:	str	ip, [r3, #792]	; 0x318
    691c:	str	r0, [r3, #872]	; 0x368
    6920:	str	r1, [r3, #952]	; 0x3b8
    6924:	str	r2, [r3, #956]	; 0x3bc
    6928:	b	6760 <sfbpf_compile+0x554>
    692c:	ldr	r3, [pc, #1164]	; 6dc0 <sfbpf_compile+0xbb4>
    6930:	mov	r1, #6
    6934:	mov	r0, #44	; 0x2c
    6938:	add	r3, pc, r3
    693c:	mov	r2, #0
    6940:	str	r0, [r3, #796]	; 0x31c
    6944:	str	r2, [r3, #872]	; 0x368
    6948:	str	r1, [r3, #952]	; 0x3b8
    694c:	str	r2, [r3, #956]	; 0x3bc
    6950:	b	6760 <sfbpf_compile+0x554>
    6954:	ldr	r3, [pc, #1128]	; 6dc4 <sfbpf_compile+0xbb8>
    6958:	mov	r1, #5
    695c:	mov	r0, #24
    6960:	add	r3, pc, r3
    6964:	b	693c <sfbpf_compile+0x730>
    6968:	ldr	r3, [pc, #1112]	; 6dc8 <sfbpf_compile+0xbbc>
    696c:	mov	r1, #6
    6970:	add	r3, pc, r3
    6974:	mov	r0, #8
    6978:	b	693c <sfbpf_compile+0x730>
    697c:	ldr	r3, [pc, #1096]	; 6dcc <sfbpf_compile+0xbc0>
    6980:	mov	r2, #14
    6984:	mov	r0, #8
    6988:	mov	r1, #3
    698c:	add	r3, pc, r3
    6990:	str	r2, [r3, #796]	; 0x31c
    6994:	str	r0, [r3, #872]	; 0x368
    6998:	str	r2, [r3, #952]	; 0x3b8
    699c:	str	r1, [r3, #956]	; 0x3bc
    69a0:	b	6760 <sfbpf_compile+0x554>
    69a4:	ldr	r3, [pc, #1060]	; 6dd0 <sfbpf_compile+0xbc4>
    69a8:	mov	r1, #2
    69ac:	mov	r0, #6
    69b0:	add	r3, pc, r3
    69b4:	b	693c <sfbpf_compile+0x730>
    69b8:	ldr	r3, [pc, #1044]	; 6dd4 <sfbpf_compile+0xbc8>
    69bc:	mvn	r1, #0
    69c0:	mov	r0, #16
    69c4:	add	r3, pc, r3
    69c8:	b	693c <sfbpf_compile+0x730>
    69cc:	ldr	r3, [pc, #1028]	; 6dd8 <sfbpf_compile+0xbcc>
    69d0:	mov	r1, #2
    69d4:	mov	r0, #4
    69d8:	add	r3, pc, r3
    69dc:	b	693c <sfbpf_compile+0x730>
    69e0:	ldr	r3, [pc, #1012]	; 6ddc <sfbpf_compile+0xbd0>
    69e4:	mov	r2, #13
    69e8:	mov	r0, #8
    69ec:	mov	r1, #3
    69f0:	add	r3, pc, r3
    69f4:	str	r2, [r3, #796]	; 0x31c
    69f8:	str	r0, [r3, #872]	; 0x368
    69fc:	str	r2, [r3, #952]	; 0x3b8
    6a00:	str	r1, [r3, #956]	; 0x3bc
    6a04:	b	6760 <sfbpf_compile+0x554>
    6a08:	ldr	r3, [pc, #976]	; 6de0 <sfbpf_compile+0xbd4>
    6a0c:	mov	r1, #0
    6a10:	mov	r0, #8
    6a14:	mov	r2, #3
    6a18:	add	r3, pc, r3
    6a1c:	str	r0, [r3, #872]	; 0x368
    6a20:	str	r1, [r3, #952]	; 0x3b8
    6a24:	str	r2, [r3, #956]	; 0x3bc
    6a28:	b	6760 <sfbpf_compile+0x554>
    6a2c:	ldr	r3, [pc, #944]	; 6de4 <sfbpf_compile+0xbd8>
    6a30:	mvn	r1, #0
    6a34:	mov	r0, #24
    6a38:	add	r3, pc, r3
    6a3c:	b	693c <sfbpf_compile+0x730>
    6a40:	ldr	r3, [pc, #928]	; 6de8 <sfbpf_compile+0xbdc>
    6a44:	mov	lr, #2
    6a48:	mov	ip, #3
    6a4c:	mov	r0, #7
    6a50:	mov	r1, #4
    6a54:	add	r3, pc, r3
    6a58:	mvn	r2, #0
    6a5c:	str	r2, [r3, #796]	; 0x31c
    6a60:	str	r2, [r3, #872]	; 0x368
    6a64:	str	lr, [r3, #932]	; 0x3a4
    6a68:	str	ip, [r3, #936]	; 0x3a8
    6a6c:	str	r1, [r3, #940]	; 0x3ac
    6a70:	str	r1, [r3, #944]	; 0x3b0
    6a74:	str	r0, [r3, #948]	; 0x3b4
    6a78:	str	r2, [r3, #952]	; 0x3b8
    6a7c:	str	r2, [r3, #956]	; 0x3bc
    6a80:	b	6760 <sfbpf_compile+0x554>
    6a84:	ldr	r3, [pc, #864]	; 6dec <sfbpf_compile+0xbe0>
    6a88:	mov	r2, #12
    6a8c:	mov	r0, #0
    6a90:	mvn	r1, #0
    6a94:	add	r3, pc, r3
    6a98:	str	r2, [r3, #796]	; 0x31c
    6a9c:	str	r0, [r3, #872]	; 0x368
    6aa0:	str	r2, [r3, #952]	; 0x3b8
    6aa4:	str	r1, [r3, #956]	; 0x3bc
    6aa8:	b	6760 <sfbpf_compile+0x554>
    6aac:	ldr	r3, [pc, #828]	; 6df0 <sfbpf_compile+0xbe4>
    6ab0:	mov	ip, #14
    6ab4:	mov	r1, #16
    6ab8:	mov	r0, #18
    6abc:	mov	r2, #21
    6ac0:	add	r3, pc, r3
    6ac4:	str	ip, [r3, #796]	; 0x31c
    6ac8:	str	r0, [r3, #872]	; 0x368
    6acc:	str	r1, [r3, #952]	; 0x3b8
    6ad0:	str	r2, [r3, #956]	; 0x3bc
    6ad4:	b	6760 <sfbpf_compile+0x554>
    6ad8:	ldr	r3, [pc, #788]	; 6df4 <sfbpf_compile+0xbe8>
    6adc:	mov	r1, #4
    6ae0:	mov	ip, #6
    6ae4:	add	r3, pc, r3
    6ae8:	mov	r0, #0
    6aec:	mvn	r2, #0
    6af0:	str	ip, [r3, #796]	; 0x31c
    6af4:	str	r0, [r3, #872]	; 0x368
    6af8:	str	r1, [r3, #952]	; 0x3b8
    6afc:	str	r2, [r3, #956]	; 0x3bc
    6b00:	b	6760 <sfbpf_compile+0x554>
    6b04:	ldr	r3, [pc, #748]	; 6df8 <sfbpf_compile+0xbec>
    6b08:	mov	r1, #1
    6b0c:	mov	ip, #24
    6b10:	add	r3, pc, r3
    6b14:	b	6ae8 <sfbpf_compile+0x8dc>
    6b18:	ldr	r3, [pc, #732]	; 6dfc <sfbpf_compile+0xbf0>
    6b1c:	mov	r1, #12
    6b20:	add	r3, pc, r3
    6b24:	mov	r2, #0
    6b28:	str	r1, [r3, #796]	; 0x31c
    6b2c:	str	r2, [r3, #872]	; 0x368
    6b30:	str	r2, [r3, #952]	; 0x3b8
    6b34:	str	r2, [r3, #956]	; 0x3bc
    6b38:	b	6760 <sfbpf_compile+0x554>
    6b3c:	ldr	r3, [pc, #700]	; 6e00 <sfbpf_compile+0xbf4>
    6b40:	mov	r1, #14
    6b44:	mov	r0, #16
    6b48:	add	r3, pc, r3
    6b4c:	b	693c <sfbpf_compile+0x730>
    6b50:	ldr	r3, [pc, #684]	; 6e04 <sfbpf_compile+0xbf8>
    6b54:	mov	r1, #8
    6b58:	add	r3, pc, r3
    6b5c:	b	68dc <sfbpf_compile+0x6d0>
    6b60:	ldr	r3, [pc, #672]	; 6e08 <sfbpf_compile+0xbfc>
    6b64:	mov	r1, #4
    6b68:	add	r3, pc, r3
    6b6c:	b	6b24 <sfbpf_compile+0x918>
    6b70:	ldr	r3, [pc, #660]	; 6e0c <sfbpf_compile+0xc00>
    6b74:	mov	r1, #12
    6b78:	mov	ip, #14
    6b7c:	mov	r0, #0
    6b80:	mov	r2, #3
    6b84:	add	r3, pc, r3
    6b88:	str	ip, [r3, #796]	; 0x31c
    6b8c:	str	r0, [r3, #872]	; 0x368
    6b90:	str	r1, [r3, #952]	; 0x3b8
    6b94:	str	r2, [r3, #956]	; 0x3bc
    6b98:	b	6760 <sfbpf_compile+0x554>
    6b9c:	ldr	r3, [pc, #620]	; 6e10 <sfbpf_compile+0xc04>
    6ba0:	mvn	r2, #0
    6ba4:	mov	r1, #1
    6ba8:	add	r3, pc, r3
    6bac:	str	r2, [r3, #796]	; 0x31c
    6bb0:	str	r2, [r3, #872]	; 0x368
    6bb4:	str	r1, [r3, #920]	; 0x398
    6bb8:	str	r2, [r3, #952]	; 0x3b8
    6bbc:	str	r2, [r3, #956]	; 0x3bc
    6bc0:	b	6760 <sfbpf_compile+0x554>
    6bc4:	ldr	r3, [pc, #584]	; 6e14 <sfbpf_compile+0xc08>
    6bc8:	mvn	r1, #0
    6bcc:	mov	r0, #4
    6bd0:	mov	r2, #0
    6bd4:	add	r3, pc, r3
    6bd8:	str	r0, [r3, #872]	; 0x368
    6bdc:	str	r1, [r3, #952]	; 0x3b8
    6be0:	str	r2, [r3, #956]	; 0x3bc
    6be4:	b	6760 <sfbpf_compile+0x554>
    6be8:	ldr	r3, [pc, #552]	; 6e18 <sfbpf_compile+0xc0c>
    6bec:	mov	lr, #22
    6bf0:	mov	ip, #23
    6bf4:	mov	r0, #27
    6bf8:	mov	r1, #24
    6bfc:	add	r3, pc, r3
    6c00:	b	6a58 <sfbpf_compile+0x84c>
    6c04:	ldr	r3, [pc, #528]	; 6e1c <sfbpf_compile+0xc10>
    6c08:	mov	r2, #16
    6c0c:	mov	r0, #8
    6c10:	mov	r1, #3
    6c14:	add	r3, pc, r3
    6c18:	str	r2, [r3, #796]	; 0x31c
    6c1c:	str	r0, [r3, #872]	; 0x368
    6c20:	str	r2, [r3, #952]	; 0x3b8
    6c24:	str	r1, [r3, #956]	; 0x3bc
    6c28:	b	6760 <sfbpf_compile+0x554>
    6c2c:	ldr	r3, [pc, #492]	; 6e20 <sfbpf_compile+0xc14>
    6c30:	mov	r2, #1
    6c34:	mov	lr, #2
    6c38:	mov	ip, #0
    6c3c:	mvn	r0, #0
    6c40:	mov	r4, #8
    6c44:	mov	r1, #3
    6c48:	add	r3, pc, r3
    6c4c:	str	r4, [r3, #872]	; 0x368
    6c50:	str	r2, [r3, #884]	; 0x374
    6c54:	str	r2, [r3, #888]	; 0x378
    6c58:	mov	r2, #4
    6c5c:	str	r2, [r3, #796]	; 0x31c
    6c60:	str	lr, [r3, #892]	; 0x37c
    6c64:	str	ip, [r3, #896]	; 0x380
    6c68:	str	r2, [r3, #900]	; 0x384
    6c6c:	str	r0, [r3, #920]	; 0x398
    6c70:	str	r2, [r3, #952]	; 0x3b8
    6c74:	str	r1, [r3, #956]	; 0x3bc
    6c78:	b	6760 <sfbpf_compile+0x554>
    6c7c:	ldr	r3, [pc, #416]	; 6e24 <sfbpf_compile+0xc18>
    6c80:	mov	r1, #4
    6c84:	add	r3, pc, r3
    6c88:	b	6974 <sfbpf_compile+0x768>
    6c8c:	ldr	r3, [pc, #404]	; 6e28 <sfbpf_compile+0xc1c>
    6c90:	mov	r0, #0
    6c94:	mvn	r1, #0
    6c98:	add	r3, pc, r3
    6c9c:	mov	r2, #4
    6ca0:	str	r2, [r3, #796]	; 0x31c
    6ca4:	str	r0, [r3, #872]	; 0x368
    6ca8:	str	r2, [r3, #952]	; 0x3b8
    6cac:	str	r1, [r3, #956]	; 0x3bc
    6cb0:	b	6760 <sfbpf_compile+0x554>
    6cb4:	ldr	r3, [pc, #368]	; 6e2c <sfbpf_compile+0xc20>
    6cb8:	mov	r1, #6
    6cbc:	add	r3, pc, r3
    6cc0:	b	68dc <sfbpf_compile+0x6d0>
    6cc4:	ldr	r3, [pc, #356]	; 6e30 <sfbpf_compile+0xc24>
    6cc8:	mov	r1, #6
    6ccc:	mov	ip, #12
    6cd0:	add	r3, pc, r3
    6cd4:	b	6ae8 <sfbpf_compile+0x8dc>
    6cd8:	ldr	r3, [pc, #340]	; 6e34 <sfbpf_compile+0xc28>
    6cdc:	mov	r2, #8
    6ce0:	mov	r0, #0
    6ce4:	mov	r1, #10
    6ce8:	add	r3, pc, r3
    6cec:	str	r2, [r3, #796]	; 0x31c
    6cf0:	str	r0, [r3, #872]	; 0x368
    6cf4:	str	r2, [r3, #952]	; 0x3b8
    6cf8:	str	r1, [r3, #956]	; 0x3bc
    6cfc:	b	6760 <sfbpf_compile+0x554>
    6d00:	ldr	r3, [pc, #304]	; 6e38 <sfbpf_compile+0xc2c>
    6d04:	mov	r1, #12
    6d08:	add	r3, pc, r3
    6d0c:	b	68dc <sfbpf_compile+0x6d0>
    6d10:	ldr	r3, [pc, #292]	; 6e3c <sfbpf_compile+0xc30>
    6d14:	mov	r0, #0
    6d18:	mov	r1, #10
    6d1c:	add	r3, pc, r3
    6d20:	b	6c9c <sfbpf_compile+0xa90>
    6d24:	ldr	r3, [pc, #276]	; 6e40 <sfbpf_compile+0xc34>
    6d28:	mov	r1, #16
    6d2c:	mov	r0, #18
    6d30:	add	r3, pc, r3
    6d34:	b	693c <sfbpf_compile+0x730>
    6d38:	ldr	r3, [pc, #260]	; 6e44 <sfbpf_compile+0xc38>
    6d3c:	mov	lr, #6
    6d40:	mov	ip, #7
    6d44:	mov	r0, #11
    6d48:	mov	r1, #8
    6d4c:	add	r3, pc, r3
    6d50:	b	6a58 <sfbpf_compile+0x84c>
    6d54:	ldr	r0, [pc, #236]	; 6e48 <sfbpf_compile+0xc3c>
    6d58:	ldr	r1, [sp, #8]
    6d5c:	add	r0, pc, r0
    6d60:	bl	2130 <sf_bpf_error>
    6d64:	ldr	r0, [pc, #224]	; 6e4c <sfbpf_compile+0xc40>
    6d68:	add	r0, pc, r0
    6d6c:	bl	2130 <sf_bpf_error>
    6d70:	.word	0x00037dbc
    6d74:	.word	0x000000fc
    6d78:	.word	0x000000d4
    6d7c:	.word	0x00038108
    6d80:	.word	0x000380dc
    6d84:	.word	0x000380b0
    6d88:	.word	0x00038058
    6d8c:	.word	0x00037f30
    6d90:	.word	0x00038018
    6d94:	.word	0x00037c18
    6d98:	.word	0x00037be0
    6d9c:	.word	0x00037b84
    6da0:	.word	0x00019a80
    6da4:	.word	0x00019820
    6da8:	.word	0x00037b0c
    6dac:	.word	0x00019a70
    6db0:	.word	0x00037aa4
    6db4:	.word	0x00037a88
    6db8:	.word	0x00037a68
    6dbc:	.word	0x00037a4c
    6dc0:	.word	0x00037a28
    6dc4:	.word	0x00037a00
    6dc8:	.word	0x000379f0
    6dcc:	.word	0x000379d4
    6dd0:	.word	0x000379b0
    6dd4:	.word	0x0003799c
    6dd8:	.word	0x00037988
    6ddc:	.word	0x00037970
    6de0:	.word	0x00037948
    6de4:	.word	0x00037928
    6de8:	.word	0x0003790c
    6dec:	.word	0x000378cc
    6df0:	.word	0x000378a0
    6df4:	.word	0x0003787c
    6df8:	.word	0x00037850
    6dfc:	.word	0x00037840
    6e00:	.word	0x00037818
    6e04:	.word	0x00037808
    6e08:	.word	0x000377f8
    6e0c:	.word	0x000377dc
    6e10:	.word	0x000377b8
    6e14:	.word	0x0003778c
    6e18:	.word	0x00037764
    6e1c:	.word	0x0003774c
    6e20:	.word	0x00037718
    6e24:	.word	0x000376dc
    6e28:	.word	0x000376c8
    6e2c:	.word	0x000376a4
    6e30:	.word	0x00037690
    6e34:	.word	0x00037678
    6e38:	.word	0x00037658
    6e3c:	.word	0x00037644
    6e40:	.word	0x00037630
    6e44:	.word	0x00037614
    6e48:	.word	0x0001955c
    6e4c:	.word	0x0001956c

00006e50 <sfbpf_freecode>:
    6e50:	strd	r4, [sp, #-16]!
    6e54:	mov	r5, #0
    6e58:	str	r6, [sp, #8]
    6e5c:	str	lr, [sp, #12]
    6e60:	ldr	r3, [r0, #4]
    6e64:	str	r5, [r0]
    6e68:	cmp	r3, r5
    6e6c:	beq	6e80 <sfbpf_freecode+0x30>
    6e70:	mov	r4, r0
    6e74:	mov	r0, r3
    6e78:	bl	d48 <free@plt>
    6e7c:	str	r5, [r4, #4]
    6e80:	ldrd	r4, [sp]
    6e84:	ldr	r6, [sp, #8]
    6e88:	add	sp, sp, #12
    6e8c:	pop	{pc}		; (ldr pc, [sp], #4)

00006e90 <sf_finish_parse>:
    6e90:	ldr	r3, [pc, #2508]	; 7864 <sf_finish_parse+0x9d4>
    6e94:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6e98:	mov	r4, r0
    6e9c:	strd	r6, [sp, #8]
    6ea0:	strd	r8, [sp, #16]
    6ea4:	strd	sl, [sp, #24]
    6ea8:	add	r3, pc, r3
    6eac:	str	lr, [sp, #32]
    6eb0:	sub	sp, sp, #12
    6eb4:	ldr	r5, [r3, #876]	; 0x36c
    6eb8:	ldr	fp, [pc, #2472]	; 7868 <sf_finish_parse+0x9d8>
    6ebc:	ldr	r8, [r0, #96]	; 0x60
    6ec0:	cmp	r5, #127	; 0x7f
    6ec4:	add	fp, pc, fp
    6ec8:	beq	7544 <sf_finish_parse+0x6b4>
    6ecc:	ble	6eec <sf_finish_parse+0x5c>
    6ed0:	cmp	r5, #163	; 0xa3
    6ed4:	beq	74c8 <sf_finish_parse+0x638>
    6ed8:	cmp	r5, #192	; 0xc0
    6edc:	bne	7398 <sf_finish_parse+0x508>
    6ee0:	bl	2380 <gen_load_ppi_llprefixlen>
    6ee4:	mov	r7, r0
    6ee8:	b	754c <sf_finish_parse+0x6bc>
    6eec:	cmp	r5, #119	; 0x77
    6ef0:	bne	73a0 <sf_finish_parse+0x510>
    6ef4:	ldr	r0, [r3, #788]	; 0x314
    6ef8:	mov	r1, #1
    6efc:	ldr	r2, [pc, #2408]	; 786c <sf_finish_parse+0x9dc>
    6f00:	ldr	sl, [r3, #800]	; 0x320
    6f04:	str	r0, [sp]
    6f08:	cmn	r0, #1
    6f0c:	ldr	r3, [fp, r2]
    6f10:	str	r1, [r3]
    6f14:	beq	7580 <sf_finish_parse+0x6f0>
    6f18:	bl	22d0 <newchunk.constprop.25>
    6f1c:	mov	r2, #32
    6f20:	mov	r3, #0
    6f24:	mov	r7, r0
    6f28:	str	r2, [r0]
    6f2c:	str	r3, [r0, #12]
    6f30:	bl	22d0 <newchunk.constprop.25>
    6f34:	mov	r2, #84	; 0x54
    6f38:	mov	r3, #61440	; 0xf000
    6f3c:	movt	r3, #65535	; 0xffff
    6f40:	str	r2, [r0]
    6f44:	mov	r2, r7
    6f48:	str	r3, [r0, #12]
    6f4c:	b	6f54 <sf_finish_parse+0xc4>
    6f50:	mov	r2, r3
    6f54:	ldr	r3, [r2, #16]
    6f58:	cmp	r3, #0
    6f5c:	bne	6f50 <sf_finish_parse+0xc0>
    6f60:	str	r0, [r2, #16]
    6f64:	bl	22d0 <newchunk.constprop.25>
    6f68:	mov	r2, #21
    6f6c:	mov	r3, #4096	; 0x1000
    6f70:	movt	r3, #32801	; 0x8021
    6f74:	mov	r9, r0
    6f78:	str	r2, [r0]
    6f7c:	mov	r2, r7
    6f80:	str	r3, [r0, #12]
    6f84:	b	6f8c <sf_finish_parse+0xfc>
    6f88:	mov	r2, r3
    6f8c:	ldr	r3, [r2, #16]
    6f90:	cmp	r3, #0
    6f94:	bne	6f88 <sf_finish_parse+0xf8>
    6f98:	str	r9, [r2, #16]
    6f9c:	bl	22d0 <newchunk.constprop.25>
    6fa0:	mov	r2, #32
    6fa4:	mov	r3, #4
    6fa8:	str	r2, [r0]
    6fac:	mov	r2, r7
    6fb0:	str	r3, [r0, #12]
    6fb4:	b	6fbc <sf_finish_parse+0x12c>
    6fb8:	mov	r2, r3
    6fbc:	ldr	r3, [r2, #16]
    6fc0:	cmp	r3, #0
    6fc4:	bne	6fb8 <sf_finish_parse+0x128>
    6fc8:	str	r0, [r2, #16]
    6fcc:	str	r0, [r9, #4]
    6fd0:	bl	22d0 <newchunk.constprop.25>
    6fd4:	mov	r2, r0
    6fd8:	mov	r3, #5
    6fdc:	mov	r0, #1
    6fe0:	str	r3, [r2]
    6fe4:	mov	r3, r7
    6fe8:	str	r0, [r2, #12]
    6fec:	b	6ff4 <sf_finish_parse+0x164>
    6ff0:	mov	r3, r6
    6ff4:	ldr	r6, [r3, #16]
    6ff8:	cmp	r6, #0
    6ffc:	bne	6ff0 <sf_finish_parse+0x160>
    7000:	str	r2, [r3, #16]
    7004:	str	r2, [sp, #4]
    7008:	bl	22d0 <newchunk.constprop.25>
    700c:	mov	r3, #144	; 0x90
    7010:	mov	ip, r7
    7014:	str	r6, [r0]
    7018:	ldr	r2, [sp, #4]
    701c:	str	r3, [r0, #12]
    7020:	b	7028 <sf_finish_parse+0x198>
    7024:	mov	ip, r3
    7028:	ldr	r3, [ip, #16]
    702c:	cmp	r3, #0
    7030:	bne	7024 <sf_finish_parse+0x194>
    7034:	str	r0, [ip, #16]
    7038:	str	r0, [r9, #8]
    703c:	str	r2, [sp, #4]
    7040:	bl	22d0 <newchunk.constprop.25>
    7044:	mov	r3, #2
    7048:	mov	r1, r7
    704c:	ldr	r2, [sp, #4]
    7050:	str	r3, [r0]
    7054:	ldr	r3, [sp]
    7058:	str	r3, [r0, #12]
    705c:	b	7064 <sf_finish_parse+0x1d4>
    7060:	mov	r1, r3
    7064:	ldr	r3, [r1, #16]
    7068:	cmp	r3, #0
    706c:	bne	7060 <sf_finish_parse+0x1d0>
    7070:	str	r0, [r1, #16]
    7074:	str	r0, [r2, #8]
    7078:	bl	22d0 <newchunk.constprop.25>
    707c:	mov	r3, #7
    7080:	mov	r2, r7
    7084:	str	r3, [r0]
    7088:	b	7090 <sf_finish_parse+0x200>
    708c:	mov	r2, r3
    7090:	ldr	r3, [r2, #16]
    7094:	cmp	r3, #0
    7098:	bne	708c <sf_finish_parse+0x1fc>
    709c:	cmn	sl, #1
    70a0:	str	r0, [r2, #16]
    70a4:	ldr	r9, [r8, #4]
    70a8:	beq	72b4 <sf_finish_parse+0x424>
    70ac:	mov	r2, #1
    70b0:	ldr	r3, [pc, #1972]	; 786c <sf_finish_parse+0x9dc>
    70b4:	ldr	r3, [fp, r3]
    70b8:	str	r2, [r3]
    70bc:	bl	22d0 <newchunk.constprop.25>
    70c0:	mov	r3, #135	; 0x87
    70c4:	mov	r2, r7
    70c8:	str	r3, [r0]
    70cc:	b	70d4 <sf_finish_parse+0x244>
    70d0:	mov	r2, r3
    70d4:	ldr	r3, [r2, #16]
    70d8:	cmp	r3, #0
    70dc:	bne	70d0 <sf_finish_parse+0x240>
    70e0:	str	r0, [r2, #16]
    70e4:	bl	22d0 <newchunk.constprop.25>
    70e8:	mov	r2, #4
    70ec:	mov	r3, #24
    70f0:	str	r2, [r0]
    70f4:	mov	r2, r7
    70f8:	str	r3, [r0, #12]
    70fc:	b	7104 <sf_finish_parse+0x274>
    7100:	mov	r2, r3
    7104:	ldr	r3, [r2, #16]
    7108:	cmp	r3, #0
    710c:	bne	7100 <sf_finish_parse+0x270>
    7110:	str	r0, [r2, #16]
    7114:	bl	22d0 <newchunk.constprop.25>
    7118:	mov	r2, #2
    711c:	mov	r3, r7
    7120:	str	r2, [r0]
    7124:	str	sl, [r0, #12]
    7128:	b	7130 <sf_finish_parse+0x2a0>
    712c:	mov	r3, r6
    7130:	ldr	r6, [r3, #16]
    7134:	cmp	r6, #0
    7138:	bne	712c <sf_finish_parse+0x29c>
    713c:	str	r0, [r3, #16]
    7140:	bl	22d0 <newchunk.constprop.25>
    7144:	mov	r3, #80	; 0x50
    7148:	mov	r2, r7
    714c:	str	r3, [r0]
    7150:	str	r6, [r0, #12]
    7154:	b	715c <sf_finish_parse+0x2cc>
    7158:	mov	r2, r3
    715c:	ldr	r3, [r2, #16]
    7160:	cmp	r3, #0
    7164:	bne	7158 <sf_finish_parse+0x2c8>
    7168:	str	r0, [r2, #16]
    716c:	bl	22d0 <newchunk.constprop.25>
    7170:	mov	r2, #69	; 0x45
    7174:	mov	r3, #8
    7178:	mov	r6, r0
    717c:	str	r2, [r0]
    7180:	mov	r2, r7
    7184:	str	r3, [r0, #12]
    7188:	b	7190 <sf_finish_parse+0x300>
    718c:	mov	r2, r3
    7190:	ldr	r3, [r2, #16]
    7194:	cmp	r3, #0
    7198:	bne	718c <sf_finish_parse+0x2fc>
    719c:	str	r6, [r2, #16]
    71a0:	bl	22d0 <newchunk.constprop.25>
    71a4:	mov	r2, #69	; 0x45
    71a8:	mov	r3, #4
    71ac:	mov	fp, r0
    71b0:	str	r2, [r0]
    71b4:	mov	r2, r7
    71b8:	str	r0, [r6, #4]
    71bc:	str	r3, [r0, #12]
    71c0:	b	71c8 <sf_finish_parse+0x338>
    71c4:	mov	r2, r3
    71c8:	ldr	r3, [r2, #16]
    71cc:	cmp	r3, #0
    71d0:	bne	71c4 <sf_finish_parse+0x334>
    71d4:	str	fp, [r2, #16]
    71d8:	str	r9, [r6, #8]
    71dc:	str	r9, [fp, #4]
    71e0:	bl	22d0 <newchunk.constprop.25>
    71e4:	mov	r2, #69	; 0x45
    71e8:	mov	r3, #128	; 0x80
    71ec:	mov	r6, r0
    71f0:	str	r2, [r0]
    71f4:	mov	r2, r7
    71f8:	str	r0, [fp, #8]
    71fc:	str	r3, [r0, #12]
    7200:	b	7208 <sf_finish_parse+0x378>
    7204:	mov	r2, r3
    7208:	ldr	r3, [r2, #16]
    720c:	cmp	r3, #0
    7210:	bne	7204 <sf_finish_parse+0x374>
    7214:	str	r6, [r2, #16]
    7218:	bl	22d0 <newchunk.constprop.25>
    721c:	mov	r3, #96	; 0x60
    7220:	mov	r2, r7
    7224:	str	r3, [r0]
    7228:	str	r0, [r6, #4]
    722c:	str	sl, [r0, #12]
    7230:	b	7238 <sf_finish_parse+0x3a8>
    7234:	mov	r2, r3
    7238:	ldr	r3, [r2, #16]
    723c:	cmp	r3, #0
    7240:	bne	7234 <sf_finish_parse+0x3a4>
    7244:	str	r0, [r2, #16]
    7248:	bl	22d0 <newchunk.constprop.25>
    724c:	mov	r2, #4
    7250:	mov	r3, #2
    7254:	str	r2, [r0]
    7258:	mov	r2, r7
    725c:	str	r3, [r0, #12]
    7260:	b	7268 <sf_finish_parse+0x3d8>
    7264:	mov	r2, r3
    7268:	ldr	r3, [r2, #16]
    726c:	cmp	r3, #0
    7270:	bne	7264 <sf_finish_parse+0x3d4>
    7274:	str	r0, [r2, #16]
    7278:	bl	22d0 <newchunk.constprop.25>
    727c:	mov	r3, #2
    7280:	mov	r2, r7
    7284:	str	r3, [r0]
    7288:	str	sl, [r0, #12]
    728c:	b	7294 <sf_finish_parse+0x404>
    7290:	mov	r2, r3
    7294:	ldr	r3, [r2, #16]
    7298:	cmp	r3, #0
    729c:	bne	7290 <sf_finish_parse+0x400>
    72a0:	cmp	r5, #127	; 0x7f
    72a4:	str	r0, [r2, #16]
    72a8:	beq	75d0 <sf_finish_parse+0x740>
    72ac:	str	r9, [r6, #8]
    72b0:	ldr	r9, [r8, #4]
    72b4:	mov	r2, r7
    72b8:	b	72c0 <sf_finish_parse+0x430>
    72bc:	mov	r2, r3
    72c0:	ldr	r3, [r2, #16]
    72c4:	cmp	r3, #0
    72c8:	bne	72bc <sf_finish_parse+0x42c>
    72cc:	cmp	r5, #192	; 0xc0
    72d0:	str	r9, [r2, #16]
    72d4:	str	r7, [r8, #4]
    72d8:	bne	73b8 <sf_finish_parse+0x528>
    72dc:	bl	22d0 <newchunk.constprop.25>
    72e0:	mov	r2, #32
    72e4:	mov	r3, #4
    72e8:	mov	r5, r0
    72ec:	str	r2, [r0]
    72f0:	str	r3, [r0, #12]
    72f4:	bl	24d8 <newchunk.constprop.26>
    72f8:	mov	r1, #21
    72fc:	mov	r2, #1761607680	; 0x69000000
    7300:	str	r5, [r0, #4]
    7304:	mov	r3, r0
    7308:	str	r1, [r0, #8]
    730c:	str	r2, [r0, #20]
    7310:	str	r0, [r0, #96]	; 0x60
    7314:	ldr	r1, [r4, #96]	; 0x60
    7318:	ldr	r2, [r3, #44]	; 0x2c
    731c:	cmp	r2, #0
    7320:	bne	74b0 <sf_finish_parse+0x620>
    7324:	ldr	r2, [r3, #60]	; 0x3c
    7328:	str	r1, [r3, #60]	; 0x3c
    732c:	cmp	r2, #0
    7330:	mov	r3, r2
    7334:	bne	7318 <sf_finish_parse+0x488>
    7338:	ldr	r2, [r0, #44]	; 0x2c
    733c:	mov	r3, r4
    7340:	clz	r2, r2
    7344:	lsr	r2, r2, #5
    7348:	str	r2, [r0, #44]	; 0x2c
    734c:	ldr	r2, [r4, #44]	; 0x2c
    7350:	clz	r2, r2
    7354:	lsr	r2, r2, #5
    7358:	str	r2, [r4, #44]	; 0x2c
    735c:	ldr	r1, [r3, #44]	; 0x2c
    7360:	add	r2, r3, #84	; 0x54
    7364:	cmp	r1, #0
    7368:	addeq	r2, r3, #60	; 0x3c
    736c:	ldr	r3, [r2]
    7370:	cmp	r3, #0
    7374:	bne	735c <sf_finish_parse+0x4cc>
    7378:	str	r0, [r2]
    737c:	ldr	r3, [r4, #44]	; 0x2c
    7380:	clz	r3, r3
    7384:	lsr	r3, r3, #5
    7388:	str	r3, [r4, #44]	; 0x2c
    738c:	ldr	r3, [r0, #96]	; 0x60
    7390:	str	r3, [r4, #96]	; 0x60
    7394:	b	73b8 <sf_finish_parse+0x528>
    7398:	cmp	r5, #119	; 0x77
    739c:	beq	7838 <sf_finish_parse+0x9a8>
    73a0:	cmp	r5, #119	; 0x77
    73a4:	ble	749c <sf_finish_parse+0x60c>
    73a8:	cmp	r5, #163	; 0xa3
    73ac:	beq	7838 <sf_finish_parse+0x9a8>
    73b0:	cmp	r5, #192	; 0xc0
    73b4:	beq	7838 <sf_finish_parse+0x9a8>
    73b8:	ldr	r3, [pc, #1200]	; 7870 <sf_finish_parse+0x9e0>
    73bc:	add	r3, pc, r3
    73c0:	ldr	r5, [r3, #916]	; 0x394
    73c4:	bl	24d8 <newchunk.constprop.26>
    73c8:	mov	r2, #6
    73cc:	mov	r3, r4
    73d0:	str	r2, [r0, #8]
    73d4:	str	r5, [r0, #20]
    73d8:	str	r0, [r0, #96]	; 0x60
    73dc:	b	73f4 <sf_finish_parse+0x564>
    73e0:	ldr	r2, [r3, #60]	; 0x3c
    73e4:	str	r0, [r3, #60]	; 0x3c
    73e8:	cmp	r2, #0
    73ec:	beq	7410 <sf_finish_parse+0x580>
    73f0:	mov	r3, r2
    73f4:	ldr	r2, [r3, #44]	; 0x2c
    73f8:	cmp	r2, #0
    73fc:	beq	73e0 <sf_finish_parse+0x550>
    7400:	ldr	r2, [r3, #84]	; 0x54
    7404:	str	r0, [r3, #84]	; 0x54
    7408:	cmp	r2, #0
    740c:	bne	73f0 <sf_finish_parse+0x560>
    7410:	ldr	r3, [r4, #44]	; 0x2c
    7414:	clz	r3, r3
    7418:	lsr	r3, r3, #5
    741c:	str	r3, [r4, #44]	; 0x2c
    7420:	bl	24d8 <newchunk.constprop.26>
    7424:	mov	r1, #6
    7428:	mov	r2, #0
    742c:	mov	r3, r4
    7430:	str	r1, [r0, #8]
    7434:	str	r2, [r0, #20]
    7438:	str	r0, [r0, #96]	; 0x60
    743c:	b	7454 <sf_finish_parse+0x5c4>
    7440:	ldr	r2, [r3, #60]	; 0x3c
    7444:	str	r0, [r3, #60]	; 0x3c
    7448:	cmp	r2, #0
    744c:	beq	7470 <sf_finish_parse+0x5e0>
    7450:	mov	r3, r2
    7454:	ldr	r2, [r3, #44]	; 0x2c
    7458:	cmp	r2, #0
    745c:	beq	7440 <sf_finish_parse+0x5b0>
    7460:	ldr	r2, [r3, #84]	; 0x54
    7464:	str	r0, [r3, #84]	; 0x54
    7468:	cmp	r2, #0
    746c:	bne	7450 <sf_finish_parse+0x5c0>
    7470:	ldr	r3, [pc, #1020]	; 7874 <sf_finish_parse+0x9e4>
    7474:	ldr	r2, [r4, #96]	; 0x60
    7478:	add	r3, pc, r3
    747c:	str	r2, [r3, #904]	; 0x388
    7480:	add	sp, sp, #12
    7484:	ldrd	r4, [sp]
    7488:	ldrd	r6, [sp, #8]
    748c:	ldrd	r8, [sp, #16]
    7490:	ldrd	sl, [sp, #24]
    7494:	add	sp, sp, #32
    7498:	pop	{pc}		; (ldr pc, [sp], #4)
    749c:	cmp	r5, #105	; 0x69
    74a0:	beq	7838 <sf_finish_parse+0x9a8>
    74a4:	cmp	r5, #192	; 0xc0
    74a8:	beq	72dc <sf_finish_parse+0x44c>
    74ac:	b	73b8 <sf_finish_parse+0x528>
    74b0:	ldr	r2, [r3, #84]	; 0x54
    74b4:	str	r1, [r3, #84]	; 0x54
    74b8:	cmp	r2, #0
    74bc:	mov	r3, r2
    74c0:	bne	7318 <sf_finish_parse+0x488>
    74c4:	b	7338 <sf_finish_parse+0x4a8>
    74c8:	ldr	r6, [r3, #788]	; 0x314
    74cc:	ldr	sl, [r3, #800]	; 0x320
    74d0:	cmn	r6, #1
    74d4:	beq	7590 <sf_finish_parse+0x700>
    74d8:	bl	22d0 <newchunk.constprop.25>
    74dc:	mov	r2, #32
    74e0:	mov	r3, #4
    74e4:	mov	r7, r0
    74e8:	str	r2, [r0]
    74ec:	str	r3, [r0, #12]
    74f0:	bl	22d0 <newchunk.constprop.25>
    74f4:	mov	r3, #2
    74f8:	mov	r2, r7
    74fc:	str	r3, [r0]
    7500:	str	r6, [r0, #12]
    7504:	b	750c <sf_finish_parse+0x67c>
    7508:	mov	r2, r3
    750c:	ldr	r3, [r2, #16]
    7510:	cmp	r3, #0
    7514:	bne	7508 <sf_finish_parse+0x678>
    7518:	str	r0, [r2, #16]
    751c:	bl	22d0 <newchunk.constprop.25>
    7520:	mov	r3, #7
    7524:	mov	r2, r7
    7528:	str	r3, [r0]
    752c:	b	7534 <sf_finish_parse+0x6a4>
    7530:	mov	r2, r3
    7534:	ldr	r3, [r2, #16]
    7538:	cmp	r3, #0
    753c:	bne	7530 <sf_finish_parse+0x6a0>
    7540:	b	709c <sf_finish_parse+0x20c>
    7544:	bl	2380 <gen_load_ppi_llprefixlen>
    7548:	mov	r7, r0
    754c:	ldr	r3, [pc, #804]	; 7878 <sf_finish_parse+0x9e8>
    7550:	add	r3, pc, r3
    7554:	ldr	sl, [r3, #800]	; 0x320
    7558:	cmn	sl, #1
    755c:	beq	7828 <sf_finish_parse+0x998>
    7560:	ldr	r3, [pc, #772]	; 786c <sf_finish_parse+0x9dc>
    7564:	mov	r2, #1
    7568:	cmp	r7, #0
    756c:	ldr	r9, [r8, #4]
    7570:	ldr	r3, [fp, r3]
    7574:	str	r2, [r3]
    7578:	bne	70bc <sf_finish_parse+0x22c>
    757c:	b	75ac <sf_finish_parse+0x71c>
    7580:	cmn	sl, #1
    7584:	beq	73b8 <sf_finish_parse+0x528>
    7588:	ldr	r9, [r8, #4]
    758c:	b	75a4 <sf_finish_parse+0x714>
    7590:	cmn	sl, #1
    7594:	beq	73b8 <sf_finish_parse+0x528>
    7598:	ldr	r3, [pc, #716]	; 786c <sf_finish_parse+0x9dc>
    759c:	ldr	r9, [r8, #4]
    75a0:	ldr	r3, [fp, r3]
    75a4:	mov	r2, #1
    75a8:	str	r2, [r3]
    75ac:	bl	22d0 <newchunk.constprop.25>
    75b0:	ldr	r3, [pc, #708]	; 787c <sf_finish_parse+0x9ec>
    75b4:	mov	r2, #1
    75b8:	mov	r7, r0
    75bc:	str	r2, [r0]
    75c0:	add	r3, pc, r3
    75c4:	ldr	r3, [r3, #880]	; 0x370
    75c8:	str	r3, [r0, #12]
    75cc:	b	70bc <sf_finish_parse+0x22c>
    75d0:	bl	22d0 <newchunk.constprop.25>
    75d4:	mov	r2, #32
    75d8:	mov	r3, #4
    75dc:	str	r2, [r0]
    75e0:	mov	r2, r7
    75e4:	str	r0, [r6, #8]
    75e8:	str	r3, [r0, #12]
    75ec:	b	75f4 <sf_finish_parse+0x764>
    75f0:	mov	r2, r3
    75f4:	ldr	r3, [r2, #16]
    75f8:	cmp	r3, #0
    75fc:	bne	75f0 <sf_finish_parse+0x760>
    7600:	str	r0, [r2, #16]
    7604:	bl	22d0 <newchunk.constprop.25>
    7608:	mov	r2, #69	; 0x45
    760c:	mov	r3, #33554432	; 0x2000000
    7610:	mov	fp, r0
    7614:	str	r2, [r0]
    7618:	mov	r2, r7
    761c:	str	r3, [r0, #12]
    7620:	b	7628 <sf_finish_parse+0x798>
    7624:	mov	r2, r3
    7628:	ldr	r3, [r2, #16]
    762c:	cmp	r3, #0
    7630:	bne	7624 <sf_finish_parse+0x794>
    7634:	str	fp, [r2, #16]
    7638:	str	r9, [fp, #8]
    763c:	bl	22d0 <newchunk.constprop.25>
    7640:	mov	r2, #69	; 0x45
    7644:	mov	r3, #16777216	; 0x1000000
    7648:	mov	r6, r0
    764c:	str	r2, [r0]
    7650:	mov	r2, r7
    7654:	str	r0, [fp, #4]
    7658:	str	r3, [r0, #12]
    765c:	b	7664 <sf_finish_parse+0x7d4>
    7660:	mov	r2, r3
    7664:	ldr	r3, [r2, #16]
    7668:	cmp	r3, #0
    766c:	bne	7660 <sf_finish_parse+0x7d0>
    7670:	str	r6, [r2, #16]
    7674:	bl	22d0 <newchunk.constprop.25>
    7678:	mov	r2, #48	; 0x30
    767c:	mov	r3, #16
    7680:	str	r2, [r0]
    7684:	mov	r2, r7
    7688:	str	r0, [r6, #4]
    768c:	str	r3, [r0, #12]
    7690:	b	7698 <sf_finish_parse+0x808>
    7694:	mov	r2, r3
    7698:	ldr	r3, [r2, #16]
    769c:	cmp	r3, #0
    76a0:	bne	7694 <sf_finish_parse+0x804>
    76a4:	str	r0, [r2, #16]
    76a8:	bl	22d0 <newchunk.constprop.25>
    76ac:	mov	r2, #69	; 0x45
    76b0:	mov	r3, #32
    76b4:	mov	fp, r0
    76b8:	str	r2, [r0]
    76bc:	mov	r2, r7
    76c0:	str	r3, [r0, #12]
    76c4:	b	76cc <sf_finish_parse+0x83c>
    76c8:	mov	r2, r3
    76cc:	ldr	r3, [r2, #16]
    76d0:	cmp	r3, #0
    76d4:	bne	76c8 <sf_finish_parse+0x838>
    76d8:	str	fp, [r2, #16]
    76dc:	bl	22d0 <newchunk.constprop.25>
    76e0:	mov	r2, #48	; 0x30
    76e4:	mov	r3, #8
    76e8:	str	r2, [r0]
    76ec:	mov	r2, r7
    76f0:	str	r0, [r6, #8]
    76f4:	str	r3, [r0, #12]
    76f8:	b	7700 <sf_finish_parse+0x870>
    76fc:	mov	r2, r3
    7700:	ldr	r3, [r2, #16]
    7704:	cmp	r3, #0
    7708:	bne	76fc <sf_finish_parse+0x86c>
    770c:	str	r0, [r2, #16]
    7710:	bl	22d0 <newchunk.constprop.25>
    7714:	mov	r2, #69	; 0x45
    7718:	mov	r3, #32
    771c:	mov	r6, r0
    7720:	str	r2, [r0]
    7724:	mov	r2, r7
    7728:	str	r3, [r0, #12]
    772c:	b	7734 <sf_finish_parse+0x8a4>
    7730:	mov	r2, r3
    7734:	ldr	r3, [r2, #16]
    7738:	cmp	r3, #0
    773c:	bne	7730 <sf_finish_parse+0x8a0>
    7740:	str	r6, [r2, #16]
    7744:	bl	22d0 <newchunk.constprop.25>
    7748:	mov	r3, #96	; 0x60
    774c:	mov	r2, r0
    7750:	mov	r1, r7
    7754:	str	r3, [r0]
    7758:	str	sl, [r0, #12]
    775c:	b	7764 <sf_finish_parse+0x8d4>
    7760:	mov	r1, r3
    7764:	ldr	r3, [r1, #16]
    7768:	cmp	r3, #0
    776c:	bne	7760 <sf_finish_parse+0x8d0>
    7770:	str	r2, [r1, #16]
    7774:	str	r2, [sp]
    7778:	bl	22d0 <newchunk.constprop.25>
    777c:	mov	r1, #4
    7780:	mov	r3, #3
    7784:	ldr	r2, [sp]
    7788:	str	r1, [r0]
    778c:	mov	r1, r7
    7790:	str	r3, [r0, #12]
    7794:	b	779c <sf_finish_parse+0x90c>
    7798:	mov	r1, r3
    779c:	ldr	r3, [r1, #16]
    77a0:	cmp	r3, #0
    77a4:	bne	7798 <sf_finish_parse+0x908>
    77a8:	str	r0, [r1, #16]
    77ac:	str	r2, [sp]
    77b0:	bl	22d0 <newchunk.constprop.25>
    77b4:	mov	r1, #84	; 0x54
    77b8:	mvn	r3, #3
    77bc:	ldr	r2, [sp]
    77c0:	str	r1, [r0]
    77c4:	mov	r1, r7
    77c8:	str	r3, [r0, #12]
    77cc:	b	77d4 <sf_finish_parse+0x944>
    77d0:	mov	r1, r3
    77d4:	ldr	r3, [r1, #16]
    77d8:	cmp	r3, #0
    77dc:	bne	77d0 <sf_finish_parse+0x940>
    77e0:	str	r0, [r1, #16]
    77e4:	str	r2, [sp]
    77e8:	bl	22d0 <newchunk.constprop.25>
    77ec:	mov	r3, #2
    77f0:	mov	r1, r7
    77f4:	ldr	r2, [sp]
    77f8:	str	r3, [r0]
    77fc:	str	sl, [r0, #12]
    7800:	b	7808 <sf_finish_parse+0x978>
    7804:	mov	r1, r3
    7808:	ldr	r3, [r1, #16]
    780c:	cmp	r3, #0
    7810:	bne	7804 <sf_finish_parse+0x974>
    7814:	str	r0, [r1, #16]
    7818:	stmib	fp, {r2, r9}
    781c:	stmib	r6, {r2, r9}
    7820:	ldr	r9, [r8, #4]
    7824:	b	72b4 <sf_finish_parse+0x424>
    7828:	cmp	r7, #0
    782c:	beq	74a4 <sf_finish_parse+0x614>
    7830:	ldr	r9, [r8, #4]
    7834:	b	72b4 <sf_finish_parse+0x424>
    7838:	ldr	r3, [pc, #64]	; 7880 <sf_finish_parse+0x9f0>
    783c:	add	r3, pc, r3
    7840:	ldr	sl, [r3, #800]	; 0x320
    7844:	cmn	sl, #1
    7848:	beq	74a4 <sf_finish_parse+0x614>
    784c:	ldr	r3, [pc, #24]	; 786c <sf_finish_parse+0x9dc>
    7850:	mov	r2, #1
    7854:	ldr	r9, [r8, #4]
    7858:	ldr	r3, [fp, r3]
    785c:	str	r2, [r3]
    7860:	b	75ac <sf_finish_parse+0x71c>
    7864:	.word	0x000374b8
    7868:	.word	0x00037134
    786c:	.word	0x000000fc
    7870:	.word	0x00036fa4
    7874:	.word	0x00036ee8
    7878:	.word	0x00036e10
    787c:	.word	0x00036da0
    7880:	.word	0x00036b24

00007884 <sf_gen_and>:
    7884:	cmp	r0, #0
    7888:	ldr	ip, [r1, #96]	; 0x60
    788c:	movne	r3, r0
    7890:	beq	78b4 <sf_gen_and+0x30>
    7894:	ldr	r2, [r3, #44]	; 0x2c
    7898:	cmp	r2, #0
    789c:	bne	7914 <sf_gen_and+0x90>
    78a0:	ldr	r2, [r3, #60]	; 0x3c
    78a4:	str	ip, [r3, #60]	; 0x3c
    78a8:	cmp	r2, #0
    78ac:	mov	r3, r2
    78b0:	bne	7894 <sf_gen_and+0x10>
    78b4:	ldr	r2, [r0, #44]	; 0x2c
    78b8:	mov	r3, r1
    78bc:	clz	r2, r2
    78c0:	lsr	r2, r2, #5
    78c4:	str	r2, [r0, #44]	; 0x2c
    78c8:	ldr	r2, [r1, #44]	; 0x2c
    78cc:	clz	r2, r2
    78d0:	lsr	r2, r2, #5
    78d4:	str	r2, [r1, #44]	; 0x2c
    78d8:	ldr	ip, [r3, #44]	; 0x2c
    78dc:	add	r2, r3, #84	; 0x54
    78e0:	cmp	ip, #0
    78e4:	addeq	r2, r3, #60	; 0x3c
    78e8:	ldr	r3, [r2]
    78ec:	cmp	r3, #0
    78f0:	bne	78d8 <sf_gen_and+0x54>
    78f4:	str	r0, [r2]
    78f8:	ldr	r3, [r1, #44]	; 0x2c
    78fc:	clz	r3, r3
    7900:	lsr	r3, r3, #5
    7904:	str	r3, [r1, #44]	; 0x2c
    7908:	ldr	r3, [r0, #96]	; 0x60
    790c:	str	r3, [r1, #96]	; 0x60
    7910:	bx	lr
    7914:	ldr	r2, [r3, #84]	; 0x54
    7918:	str	ip, [r3, #84]	; 0x54
    791c:	cmp	r2, #0
    7920:	mov	r3, r2
    7924:	bne	7894 <sf_gen_and+0x10>
    7928:	b	78b4 <sf_gen_and+0x30>

0000792c <gen_bcmp.constprop.12>:
    792c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7930:	cmp	r1, #3
    7934:	strd	r6, [sp, #8]
    7938:	strd	r8, [sp, #16]
    793c:	strd	sl, [sp, #24]
    7940:	mov	sl, r1
    7944:	str	lr, [sp, #32]
    7948:	sub	sp, sp, #28
    794c:	str	r2, [sp, #8]
    7950:	str	r0, [sp, #12]
    7954:	bls	7c8c <gen_bcmp.constprop.12+0x360>
    7958:	ldr	r3, [pc, #916]	; 7cf4 <gen_bcmp.constprop.12+0x3c8>
    795c:	mov	r7, #0
    7960:	ldr	r9, [pc, #912]	; 7cf8 <gen_bcmp.constprop.12+0x3cc>
    7964:	add	r3, pc, r3
    7968:	add	r9, pc, r9
    796c:	str	r3, [sp, #20]
    7970:	add	r3, r9, #660	; 0x294
    7974:	str	r3, [sp, #4]
    7978:	ldr	r3, [sp, #8]
    797c:	sub	r6, sl, #4
    7980:	ldr	r8, [r3, r6]
    7984:	ldr	r3, [sp, #12]
    7988:	rev	r8, r8
    798c:	add	r4, r6, r3
    7990:	bl	3650 <gen_llprefixlen>
    7994:	subs	fp, r0, #0
    7998:	beq	7b10 <gen_bcmp.constprop.12+0x1e4>
    799c:	bl	22d0 <newchunk.constprop.25>
    79a0:	mov	r2, #64	; 0x40
    79a4:	str	r2, [r0]
    79a8:	mov	r2, fp
    79ac:	str	r4, [r0, #12]
    79b0:	b	79b8 <gen_bcmp.constprop.12+0x8c>
    79b4:	mov	r2, r3
    79b8:	ldr	r3, [r2, #16]
    79bc:	cmp	r3, #0
    79c0:	bne	79b4 <gen_bcmp.constprop.12+0x88>
    79c4:	str	r0, [r2, #16]
    79c8:	ldr	r4, [r9, #656]	; 0x290
    79cc:	ldr	r3, [sp, #4]
    79d0:	lsl	r5, r4, #3
    79d4:	add	r2, r9, r5
    79d8:	add	r5, r3, r5
    79dc:	ldr	r2, [r2, #660]	; 0x294
    79e0:	cmp	r2, #207	; 0xcf
    79e4:	bhi	7b00 <gen_bcmp.constprop.12+0x1d4>
    79e8:	add	r4, r4, #1
    79ec:	add	r2, r5, #8
    79f0:	cmp	r4, #15
    79f4:	str	r4, [r9, #656]	; 0x290
    79f8:	bgt	7ce8 <gen_bcmp.constprop.12+0x3bc>
    79fc:	mov	r0, #1024	; 0x400
    7a00:	mov	r1, #1
    7a04:	str	r2, [sp, #16]
    7a08:	lsl	r4, r0, r4
    7a0c:	mov	r0, r4
    7a10:	bl	ce8 <calloc@plt>
    7a14:	cmp	r0, #0
    7a18:	str	r0, [r5, #12]
    7a1c:	beq	7ce8 <gen_bcmp.constprop.12+0x3bc>
    7a20:	cmp	r4, #207	; 0xcf
    7a24:	str	r4, [r5, #8]
    7a28:	ldr	r2, [sp, #16]
    7a2c:	bls	7ce8 <gen_bcmp.constprop.12+0x3bc>
    7a30:	sub	r4, r4, #208	; 0xd0
    7a34:	mov	r1, #21
    7a38:	add	r0, r0, r4
    7a3c:	cmp	r7, #0
    7a40:	str	r4, [r2]
    7a44:	str	fp, [r0, #4]
    7a48:	str	r1, [r0, #8]
    7a4c:	str	r8, [r0, #20]
    7a50:	str	r0, [r0, #96]	; 0x60
    7a54:	beq	7aec <gen_bcmp.constprop.12+0x1c0>
    7a58:	mov	r3, r7
    7a5c:	b	7a74 <gen_bcmp.constprop.12+0x148>
    7a60:	ldr	r2, [r3, #60]	; 0x3c
    7a64:	str	r0, [r3, #60]	; 0x3c
    7a68:	cmp	r2, #0
    7a6c:	beq	7a90 <gen_bcmp.constprop.12+0x164>
    7a70:	mov	r3, r2
    7a74:	ldr	r2, [r3, #44]	; 0x2c
    7a78:	cmp	r2, #0
    7a7c:	beq	7a60 <gen_bcmp.constprop.12+0x134>
    7a80:	ldr	r2, [r3, #84]	; 0x54
    7a84:	str	r0, [r3, #84]	; 0x54
    7a88:	cmp	r2, #0
    7a8c:	bne	7a70 <gen_bcmp.constprop.12+0x144>
    7a90:	ldr	r2, [r7, #44]	; 0x2c
    7a94:	mov	r3, r0
    7a98:	clz	r2, r2
    7a9c:	lsr	r2, r2, #5
    7aa0:	str	r2, [r7, #44]	; 0x2c
    7aa4:	ldr	r2, [r0, #44]	; 0x2c
    7aa8:	clz	r2, r2
    7aac:	lsr	r2, r2, #5
    7ab0:	str	r2, [r0, #44]	; 0x2c
    7ab4:	ldr	r2, [r3, #44]	; 0x2c
    7ab8:	cmp	r2, #0
    7abc:	addeq	r2, r3, #60	; 0x3c
    7ac0:	addne	r2, r3, #84	; 0x54
    7ac4:	ldr	r3, [r2]
    7ac8:	cmp	r3, #0
    7acc:	bne	7ab4 <gen_bcmp.constprop.12+0x188>
    7ad0:	str	r7, [r2]
    7ad4:	ldr	r3, [r0, #44]	; 0x2c
    7ad8:	clz	r3, r3
    7adc:	lsr	r3, r3, #5
    7ae0:	str	r3, [r0, #44]	; 0x2c
    7ae4:	ldr	r3, [r7, #96]	; 0x60
    7ae8:	str	r3, [r0, #96]	; 0x60
    7aec:	cmp	r6, #4
    7af0:	mov	r7, r0
    7af4:	bne	7b34 <gen_bcmp.constprop.12+0x208>
    7af8:	mov	sl, r6
    7afc:	b	7978 <gen_bcmp.constprop.12+0x4c>
    7b00:	mov	r2, r5
    7b04:	ldr	r4, [r3, r4, lsl #3]
    7b08:	ldr	r0, [r5, #4]
    7b0c:	b	7a30 <gen_bcmp.constprop.12+0x104>
    7b10:	bl	22d0 <newchunk.constprop.25>
    7b14:	ldr	r3, [sp, #20]
    7b18:	mov	r1, #32
    7b1c:	mov	fp, r0
    7b20:	str	r1, [r0]
    7b24:	ldr	r2, [r3, #880]	; 0x370
    7b28:	add	r4, r2, r4
    7b2c:	str	r4, [r0, #12]
    7b30:	b	79c8 <gen_bcmp.constprop.12+0x9c>
    7b34:	cmp	r6, #1
    7b38:	mov	r4, r0
    7b3c:	bls	7c2c <gen_bcmp.constprop.12+0x300>
    7b40:	ldr	r3, [sp, #12]
    7b44:	sub	r5, sl, #6
    7b48:	mov	r1, #8
    7b4c:	sub	r0, r3, #2
    7b50:	ldr	r3, [sp, #8]
    7b54:	add	r0, r0, r6
    7b58:	ldrh	r2, [r3, r5]
    7b5c:	rev16	r2, r2
    7b60:	uxth	r2, r2
    7b64:	bl	5ad8 <gen_cmp.constprop.20>
    7b68:	mov	r3, r7
    7b6c:	ldr	r1, [r0, #96]	; 0x60
    7b70:	b	7b88 <gen_bcmp.constprop.12+0x25c>
    7b74:	ldr	r2, [r3, #60]	; 0x3c
    7b78:	str	r1, [r3, #60]	; 0x3c
    7b7c:	cmp	r2, #0
    7b80:	beq	7ba4 <gen_bcmp.constprop.12+0x278>
    7b84:	mov	r3, r2
    7b88:	ldr	r2, [r3, #44]	; 0x2c
    7b8c:	cmp	r2, #0
    7b90:	beq	7b74 <gen_bcmp.constprop.12+0x248>
    7b94:	ldr	r2, [r3, #84]	; 0x54
    7b98:	str	r1, [r3, #84]	; 0x54
    7b9c:	cmp	r2, #0
    7ba0:	bne	7b84 <gen_bcmp.constprop.12+0x258>
    7ba4:	ldr	r2, [r4, #44]	; 0x2c
    7ba8:	mov	r3, r0
    7bac:	clz	r2, r2
    7bb0:	lsr	r2, r2, #5
    7bb4:	str	r2, [r4, #44]	; 0x2c
    7bb8:	ldr	r2, [r0, #44]	; 0x2c
    7bbc:	clz	r2, r2
    7bc0:	lsr	r2, r2, #5
    7bc4:	str	r2, [r0, #44]	; 0x2c
    7bc8:	ldr	r2, [r3, #44]	; 0x2c
    7bcc:	cmp	r2, #0
    7bd0:	addeq	r2, r3, #60	; 0x3c
    7bd4:	addne	r2, r3, #84	; 0x54
    7bd8:	ldr	r3, [r2]
    7bdc:	cmp	r3, #0
    7be0:	bne	7bc8 <gen_bcmp.constprop.12+0x29c>
    7be4:	str	r4, [r2]
    7be8:	ldr	r3, [r0, #44]	; 0x2c
    7bec:	clz	r3, r3
    7bf0:	lsr	r3, r3, #5
    7bf4:	str	r3, [r0, #44]	; 0x2c
    7bf8:	ldr	r3, [r4, #96]	; 0x60
    7bfc:	mov	r4, r0
    7c00:	str	r3, [r0, #96]	; 0x60
    7c04:	cmp	r5, #0
    7c08:	bne	7c60 <gen_bcmp.constprop.12+0x334>
    7c0c:	mov	r0, r4
    7c10:	add	sp, sp, #28
    7c14:	ldrd	r4, [sp]
    7c18:	ldrd	r6, [sp, #8]
    7c1c:	ldrd	r8, [sp, #16]
    7c20:	ldrd	sl, [sp, #24]
    7c24:	add	sp, sp, #32
    7c28:	pop	{pc}		; (ldr pc, [sp], #4)
    7c2c:	cmp	r6, #0
    7c30:	beq	7c0c <gen_bcmp.constprop.12+0x2e0>
    7c34:	ldr	r3, [sp, #8]
    7c38:	mov	r1, #16
    7c3c:	ldr	r0, [sp, #12]
    7c40:	ldrb	r2, [r3]
    7c44:	bl	5ad8 <gen_cmp.constprop.20>
    7c48:	mov	r3, r4
    7c4c:	mov	r4, r0
    7c50:	mov	r0, r3
    7c54:	mov	r1, r4
    7c58:	bl	7884 <sf_gen_and>
    7c5c:	b	7c0c <gen_bcmp.constprop.12+0x2e0>
    7c60:	ldr	r3, [sp, #8]
    7c64:	mov	r1, #16
    7c68:	ldr	r0, [sp, #12]
    7c6c:	ldrb	r2, [r3]
    7c70:	bl	5ad8 <gen_cmp.constprop.20>
    7c74:	cmp	r4, #0
    7c78:	moveq	r4, r0
    7c7c:	beq	7c0c <gen_bcmp.constprop.12+0x2e0>
    7c80:	mov	r3, r4
    7c84:	mov	r4, r0
    7c88:	b	7c50 <gen_bcmp.constprop.12+0x324>
    7c8c:	cmp	r1, #1
    7c90:	bne	7cbc <gen_bcmp.constprop.12+0x390>
    7c94:	ldrb	r2, [r2]
    7c98:	mov	r1, #16
    7c9c:	add	sp, sp, #28
    7ca0:	ldrd	r4, [sp]
    7ca4:	ldrd	r6, [sp, #8]
    7ca8:	ldrd	r8, [sp, #16]
    7cac:	ldrd	sl, [sp, #24]
    7cb0:	ldr	lr, [sp, #32]
    7cb4:	add	sp, sp, #36	; 0x24
    7cb8:	b	5ad8 <gen_cmp.constprop.20>
    7cbc:	ldr	r3, [sp, #8]
    7cc0:	sub	r5, sl, #2
    7cc4:	sub	r0, r0, #2
    7cc8:	add	r0, r0, sl
    7ccc:	mov	r1, #8
    7cd0:	ldrh	r2, [r3, r5]
    7cd4:	rev16	r2, r2
    7cd8:	uxth	r2, r2
    7cdc:	bl	5ad8 <gen_cmp.constprop.20>
    7ce0:	mov	r4, r0
    7ce4:	b	7c04 <gen_bcmp.constprop.12+0x2d8>
    7ce8:	ldr	r0, [pc, #12]	; 7cfc <gen_bcmp.constprop.12+0x3d0>
    7cec:	add	r0, pc, r0
    7cf0:	bl	2130 <sf_bpf_error>
    7cf4:	.word	0x000369fc
    7cf8:	.word	0x000369f8
    7cfc:	.word	0x00018500

00007d00 <gen_ehostop>:
    7d00:	strd	r4, [sp, #-16]!
    7d04:	mov	r4, r0
    7d08:	str	r6, [sp, #8]
    7d0c:	str	lr, [sp, #12]
    7d10:	cmp	r1, #4
    7d14:	addls	pc, pc, r1, lsl #2
    7d18:	b	7e58 <gen_ehostop+0x158>
    7d1c:	b	7db0 <gen_ehostop+0xb0>
    7d20:	b	7d94 <gen_ehostop+0x94>
    7d24:	b	7d6c <gen_ehostop+0x6c>
    7d28:	b	7db0 <gen_ehostop+0xb0>
    7d2c:	b	7d30 <gen_ehostop+0x30>
    7d30:	mov	r1, #1
    7d34:	bl	7d00 <gen_ehostop>
    7d38:	mov	r5, r0
    7d3c:	mov	r1, #2
    7d40:	mov	r0, r4
    7d44:	bl	7d00 <gen_ehostop>
    7d48:	mov	r4, r0
    7d4c:	mov	r1, r0
    7d50:	mov	r0, r5
    7d54:	bl	7884 <sf_gen_and>
    7d58:	mov	r0, r4
    7d5c:	ldrd	r4, [sp]
    7d60:	ldr	r6, [sp, #8]
    7d64:	add	sp, sp, #12
    7d68:	pop	{pc}		; (ldr pc, [sp], #4)
    7d6c:	ldr	r3, [pc, #232]	; 7e5c <gen_ehostop+0x15c>
    7d70:	mov	r2, r0
    7d74:	mov	r1, #6
    7d78:	add	r3, pc, r3
    7d7c:	ldr	r0, [r3, #920]	; 0x398
    7d80:	ldrd	r4, [sp]
    7d84:	ldr	r6, [sp, #8]
    7d88:	ldr	lr, [sp, #12]
    7d8c:	add	sp, sp, #16
    7d90:	b	792c <gen_bcmp.constprop.12>
    7d94:	ldr	r3, [pc, #196]	; 7e60 <gen_ehostop+0x160>
    7d98:	mov	r2, r0
    7d9c:	mov	r1, #6
    7da0:	add	r3, pc, r3
    7da4:	ldr	r0, [r3, #920]	; 0x398
    7da8:	add	r0, r0, r1
    7dac:	b	7d80 <gen_ehostop+0x80>
    7db0:	mov	r1, #1
    7db4:	bl	7d00 <gen_ehostop>
    7db8:	mov	r5, r0
    7dbc:	mov	r1, #2
    7dc0:	mov	r0, r4
    7dc4:	bl	7d00 <gen_ehostop>
    7dc8:	ldr	r3, [r5, #44]	; 0x2c
    7dcc:	mov	r4, r0
    7dd0:	mov	r2, r5
    7dd4:	clz	r3, r3
    7dd8:	lsr	r3, r3, #5
    7ddc:	str	r3, [r5, #44]	; 0x2c
    7de0:	ldr	r1, [r0, #96]	; 0x60
    7de4:	b	7e00 <gen_ehostop+0x100>
    7de8:	ldr	r3, [r2, #60]	; 0x3c
    7dec:	str	r1, [r2, #60]	; 0x3c
    7df0:	cmp	r3, #0
    7df4:	beq	7e18 <gen_ehostop+0x118>
    7df8:	mov	r2, r3
    7dfc:	ldr	r3, [r3, #44]	; 0x2c
    7e00:	cmp	r3, #0
    7e04:	beq	7de8 <gen_ehostop+0xe8>
    7e08:	ldr	r3, [r2, #84]	; 0x54
    7e0c:	str	r1, [r2, #84]	; 0x54
    7e10:	cmp	r3, #0
    7e14:	bne	7df8 <gen_ehostop+0xf8>
    7e18:	ldr	r2, [r5, #44]	; 0x2c
    7e1c:	mov	r3, r4
    7e20:	clz	r2, r2
    7e24:	lsr	r2, r2, #5
    7e28:	str	r2, [r5, #44]	; 0x2c
    7e2c:	ldr	r2, [r3, #44]	; 0x2c
    7e30:	cmp	r2, #0
    7e34:	addeq	r2, r3, #60	; 0x3c
    7e38:	addne	r2, r3, #84	; 0x54
    7e3c:	ldr	r3, [r2]
    7e40:	cmp	r3, #0
    7e44:	bne	7e2c <gen_ehostop+0x12c>
    7e48:	str	r5, [r2]
    7e4c:	ldr	r3, [r5, #96]	; 0x60
    7e50:	str	r3, [r4, #96]	; 0x60
    7e54:	b	7d58 <gen_ehostop+0x58>
    7e58:	bl	ebc <abort@plt>
    7e5c:	.word	0x000365e8
    7e60:	.word	0x000365c0

00007e64 <gen_fhostop>:
    7e64:	strd	r4, [sp, #-16]!
    7e68:	mov	r4, r0
    7e6c:	str	r6, [sp, #8]
    7e70:	str	lr, [sp, #12]
    7e74:	cmp	r1, #4
    7e78:	addls	pc, pc, r1, lsl #2
    7e7c:	b	7fa8 <gen_fhostop+0x144>
    7e80:	b	7f00 <gen_fhostop+0x9c>
    7e84:	b	7ef0 <gen_fhostop+0x8c>
    7e88:	b	7ed0 <gen_fhostop+0x6c>
    7e8c:	b	7f00 <gen_fhostop+0x9c>
    7e90:	b	7e94 <gen_fhostop+0x30>
    7e94:	mov	r1, #1
    7e98:	bl	7e64 <gen_fhostop>
    7e9c:	mov	r5, r0
    7ea0:	mov	r1, #2
    7ea4:	mov	r0, r4
    7ea8:	bl	7e64 <gen_fhostop>
    7eac:	mov	r4, r0
    7eb0:	mov	r1, r0
    7eb4:	mov	r0, r5
    7eb8:	bl	7884 <sf_gen_and>
    7ebc:	mov	r0, r4
    7ec0:	ldrd	r4, [sp]
    7ec4:	ldr	r6, [sp, #8]
    7ec8:	add	sp, sp, #12
    7ecc:	pop	{pc}		; (ldr pc, [sp], #4)
    7ed0:	mov	r2, r0
    7ed4:	mov	r1, #6
    7ed8:	mov	r0, #1
    7edc:	ldrd	r4, [sp]
    7ee0:	ldr	r6, [sp, #8]
    7ee4:	ldr	lr, [sp, #12]
    7ee8:	add	sp, sp, #16
    7eec:	b	792c <gen_bcmp.constprop.12>
    7ef0:	mov	r2, r0
    7ef4:	mov	r1, #6
    7ef8:	mov	r0, #7
    7efc:	b	7edc <gen_fhostop+0x78>
    7f00:	mov	r1, #1
    7f04:	bl	7e64 <gen_fhostop>
    7f08:	mov	r5, r0
    7f0c:	mov	r1, #2
    7f10:	mov	r0, r4
    7f14:	bl	7e64 <gen_fhostop>
    7f18:	ldr	r3, [r5, #44]	; 0x2c
    7f1c:	mov	r4, r0
    7f20:	mov	r2, r5
    7f24:	clz	r3, r3
    7f28:	lsr	r3, r3, #5
    7f2c:	str	r3, [r5, #44]	; 0x2c
    7f30:	ldr	r1, [r0, #96]	; 0x60
    7f34:	b	7f50 <gen_fhostop+0xec>
    7f38:	ldr	r3, [r2, #60]	; 0x3c
    7f3c:	str	r1, [r2, #60]	; 0x3c
    7f40:	cmp	r3, #0
    7f44:	beq	7f68 <gen_fhostop+0x104>
    7f48:	mov	r2, r3
    7f4c:	ldr	r3, [r3, #44]	; 0x2c
    7f50:	cmp	r3, #0
    7f54:	beq	7f38 <gen_fhostop+0xd4>
    7f58:	ldr	r3, [r2, #84]	; 0x54
    7f5c:	str	r1, [r2, #84]	; 0x54
    7f60:	cmp	r3, #0
    7f64:	bne	7f48 <gen_fhostop+0xe4>
    7f68:	ldr	r2, [r5, #44]	; 0x2c
    7f6c:	mov	r3, r4
    7f70:	clz	r2, r2
    7f74:	lsr	r2, r2, #5
    7f78:	str	r2, [r5, #44]	; 0x2c
    7f7c:	ldr	r2, [r3, #44]	; 0x2c
    7f80:	cmp	r2, #0
    7f84:	addeq	r2, r3, #60	; 0x3c
    7f88:	addne	r2, r3, #84	; 0x54
    7f8c:	ldr	r3, [r2]
    7f90:	cmp	r3, #0
    7f94:	bne	7f7c <gen_fhostop+0x118>
    7f98:	str	r5, [r2]
    7f9c:	ldr	r3, [r5, #96]	; 0x60
    7fa0:	str	r3, [r4, #96]	; 0x60
    7fa4:	b	7ebc <gen_fhostop+0x58>
    7fa8:	bl	ebc <abort@plt>

00007fac <gen_thostop>:
    7fac:	strd	r4, [sp, #-16]!
    7fb0:	mov	r4, r0
    7fb4:	str	r6, [sp, #8]
    7fb8:	str	lr, [sp, #12]
    7fbc:	cmp	r1, #4
    7fc0:	addls	pc, pc, r1, lsl #2
    7fc4:	b	80f0 <gen_thostop+0x144>
    7fc8:	b	8048 <gen_thostop+0x9c>
    7fcc:	b	8038 <gen_thostop+0x8c>
    7fd0:	b	8018 <gen_thostop+0x6c>
    7fd4:	b	8048 <gen_thostop+0x9c>
    7fd8:	b	7fdc <gen_thostop+0x30>
    7fdc:	mov	r1, #1
    7fe0:	bl	7fac <gen_thostop>
    7fe4:	mov	r5, r0
    7fe8:	mov	r1, #2
    7fec:	mov	r0, r4
    7ff0:	bl	7fac <gen_thostop>
    7ff4:	mov	r4, r0
    7ff8:	mov	r1, r0
    7ffc:	mov	r0, r5
    8000:	bl	7884 <sf_gen_and>
    8004:	mov	r0, r4
    8008:	ldrd	r4, [sp]
    800c:	ldr	r6, [sp, #8]
    8010:	add	sp, sp, #12
    8014:	pop	{pc}		; (ldr pc, [sp], #4)
    8018:	mov	r2, r0
    801c:	mov	r1, #6
    8020:	mov	r0, #2
    8024:	ldrd	r4, [sp]
    8028:	ldr	r6, [sp, #8]
    802c:	ldr	lr, [sp, #12]
    8030:	add	sp, sp, #16
    8034:	b	792c <gen_bcmp.constprop.12>
    8038:	mov	r2, r0
    803c:	mov	r1, #6
    8040:	mov	r0, #8
    8044:	b	8024 <gen_thostop+0x78>
    8048:	mov	r1, #1
    804c:	bl	7fac <gen_thostop>
    8050:	mov	r5, r0
    8054:	mov	r1, #2
    8058:	mov	r0, r4
    805c:	bl	7fac <gen_thostop>
    8060:	ldr	r3, [r5, #44]	; 0x2c
    8064:	mov	r4, r0
    8068:	mov	r2, r5
    806c:	clz	r3, r3
    8070:	lsr	r3, r3, #5
    8074:	str	r3, [r5, #44]	; 0x2c
    8078:	ldr	r1, [r0, #96]	; 0x60
    807c:	b	8098 <gen_thostop+0xec>
    8080:	ldr	r3, [r2, #60]	; 0x3c
    8084:	str	r1, [r2, #60]	; 0x3c
    8088:	cmp	r3, #0
    808c:	beq	80b0 <gen_thostop+0x104>
    8090:	mov	r2, r3
    8094:	ldr	r3, [r3, #44]	; 0x2c
    8098:	cmp	r3, #0
    809c:	beq	8080 <gen_thostop+0xd4>
    80a0:	ldr	r3, [r2, #84]	; 0x54
    80a4:	str	r1, [r2, #84]	; 0x54
    80a8:	cmp	r3, #0
    80ac:	bne	8090 <gen_thostop+0xe4>
    80b0:	ldr	r2, [r5, #44]	; 0x2c
    80b4:	mov	r3, r4
    80b8:	clz	r2, r2
    80bc:	lsr	r2, r2, #5
    80c0:	str	r2, [r5, #44]	; 0x2c
    80c4:	ldr	r2, [r3, #44]	; 0x2c
    80c8:	cmp	r2, #0
    80cc:	addeq	r2, r3, #60	; 0x3c
    80d0:	addne	r2, r3, #84	; 0x54
    80d4:	ldr	r3, [r2]
    80d8:	cmp	r3, #0
    80dc:	bne	80c4 <gen_thostop+0x118>
    80e0:	str	r5, [r2]
    80e4:	ldr	r3, [r5, #96]	; 0x60
    80e8:	str	r3, [r4, #96]	; 0x60
    80ec:	b	8004 <gen_thostop+0x58>
    80f0:	bl	ebc <abort@plt>

000080f4 <gen_ipfchostop>:
    80f4:	strd	r4, [sp, #-16]!
    80f8:	mov	r4, r0
    80fc:	str	r6, [sp, #8]
    8100:	str	lr, [sp, #12]
    8104:	cmp	r1, #4
    8108:	addls	pc, pc, r1, lsl #2
    810c:	b	8238 <gen_ipfchostop+0x144>
    8110:	b	8190 <gen_ipfchostop+0x9c>
    8114:	b	8180 <gen_ipfchostop+0x8c>
    8118:	b	8160 <gen_ipfchostop+0x6c>
    811c:	b	8190 <gen_ipfchostop+0x9c>
    8120:	b	8124 <gen_ipfchostop+0x30>
    8124:	mov	r1, #1
    8128:	bl	80f4 <gen_ipfchostop>
    812c:	mov	r5, r0
    8130:	mov	r1, #2
    8134:	mov	r0, r4
    8138:	bl	80f4 <gen_ipfchostop>
    813c:	mov	r4, r0
    8140:	mov	r1, r0
    8144:	mov	r0, r5
    8148:	bl	7884 <sf_gen_and>
    814c:	mov	r0, r4
    8150:	ldrd	r4, [sp]
    8154:	ldr	r6, [sp, #8]
    8158:	add	sp, sp, #12
    815c:	pop	{pc}		; (ldr pc, [sp], #4)
    8160:	mov	r2, r0
    8164:	mov	r1, #6
    8168:	mov	r0, #2
    816c:	ldrd	r4, [sp]
    8170:	ldr	r6, [sp, #8]
    8174:	ldr	lr, [sp, #12]
    8178:	add	sp, sp, #16
    817c:	b	792c <gen_bcmp.constprop.12>
    8180:	mov	r2, r0
    8184:	mov	r1, #6
    8188:	mov	r0, #10
    818c:	b	816c <gen_ipfchostop+0x78>
    8190:	mov	r1, #1
    8194:	bl	80f4 <gen_ipfchostop>
    8198:	mov	r5, r0
    819c:	mov	r1, #2
    81a0:	mov	r0, r4
    81a4:	bl	80f4 <gen_ipfchostop>
    81a8:	ldr	r3, [r5, #44]	; 0x2c
    81ac:	mov	r4, r0
    81b0:	mov	r2, r5
    81b4:	clz	r3, r3
    81b8:	lsr	r3, r3, #5
    81bc:	str	r3, [r5, #44]	; 0x2c
    81c0:	ldr	r1, [r0, #96]	; 0x60
    81c4:	b	81e0 <gen_ipfchostop+0xec>
    81c8:	ldr	r3, [r2, #60]	; 0x3c
    81cc:	str	r1, [r2, #60]	; 0x3c
    81d0:	cmp	r3, #0
    81d4:	beq	81f8 <gen_ipfchostop+0x104>
    81d8:	mov	r2, r3
    81dc:	ldr	r3, [r3, #44]	; 0x2c
    81e0:	cmp	r3, #0
    81e4:	beq	81c8 <gen_ipfchostop+0xd4>
    81e8:	ldr	r3, [r2, #84]	; 0x54
    81ec:	str	r1, [r2, #84]	; 0x54
    81f0:	cmp	r3, #0
    81f4:	bne	81d8 <gen_ipfchostop+0xe4>
    81f8:	ldr	r2, [r5, #44]	; 0x2c
    81fc:	mov	r3, r4
    8200:	clz	r2, r2
    8204:	lsr	r2, r2, #5
    8208:	str	r2, [r5, #44]	; 0x2c
    820c:	ldr	r2, [r3, #44]	; 0x2c
    8210:	cmp	r2, #0
    8214:	addeq	r2, r3, #60	; 0x3c
    8218:	addne	r2, r3, #84	; 0x54
    821c:	ldr	r3, [r2]
    8220:	cmp	r3, #0
    8224:	bne	820c <gen_ipfchostop+0x118>
    8228:	str	r5, [r2]
    822c:	ldr	r3, [r5, #96]	; 0x60
    8230:	str	r3, [r4, #96]	; 0x60
    8234:	b	814c <gen_ipfchostop+0x58>
    8238:	bl	ebc <abort@plt>

0000823c <sf_gen_or>:
    823c:	ldr	r3, [r0, #44]	; 0x2c
    8240:	mov	r2, r0
    8244:	clz	r3, r3
    8248:	lsr	r3, r3, #5
    824c:	str	r3, [r0, #44]	; 0x2c
    8250:	ldr	ip, [r1, #96]	; 0x60
    8254:	b	8270 <sf_gen_or+0x34>
    8258:	ldr	r3, [r2, #60]	; 0x3c
    825c:	str	ip, [r2, #60]	; 0x3c
    8260:	cmp	r3, #0
    8264:	beq	8288 <sf_gen_or+0x4c>
    8268:	mov	r2, r3
    826c:	ldr	r3, [r3, #44]	; 0x2c
    8270:	cmp	r3, #0
    8274:	beq	8258 <sf_gen_or+0x1c>
    8278:	ldr	r3, [r2, #84]	; 0x54
    827c:	str	ip, [r2, #84]	; 0x54
    8280:	cmp	r3, #0
    8284:	bne	8268 <sf_gen_or+0x2c>
    8288:	ldr	r2, [r0, #44]	; 0x2c
    828c:	mov	r3, r1
    8290:	clz	r2, r2
    8294:	lsr	r2, r2, #5
    8298:	str	r2, [r0, #44]	; 0x2c
    829c:	ldr	ip, [r3, #44]	; 0x2c
    82a0:	add	r2, r3, #84	; 0x54
    82a4:	cmp	ip, #0
    82a8:	addeq	r2, r3, #60	; 0x3c
    82ac:	ldr	r3, [r2]
    82b0:	cmp	r3, #0
    82b4:	bne	829c <sf_gen_or+0x60>
    82b8:	str	r0, [r2]
    82bc:	ldr	r3, [r0, #96]	; 0x60
    82c0:	str	r3, [r1, #96]	; 0x60
    82c4:	bx	lr

000082c8 <gen_ether_linktype>:
    82c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    82cc:	cmp	r0, #240	; 0xf0
    82d0:	mov	r4, r0
    82d4:	strd	r6, [sp, #8]
    82d8:	ldr	r7, [pc, #1052]	; 86fc <gen_ether_linktype+0x434>
    82dc:	strd	r8, [sp, #16]
    82e0:	str	sl, [sp, #24]
    82e4:	str	lr, [sp, #28]
    82e8:	add	r7, pc, r7
    82ec:	ldr	r6, [r7, #952]	; 0x3b8
    82f0:	beq	84b8 <gen_ether_linktype+0x1f0>
    82f4:	bgt	8400 <gen_ether_linktype+0x138>
    82f8:	cmp	r0, #6
    82fc:	beq	84b8 <gen_ether_linktype+0x1f0>
    8300:	cmp	r0, #224	; 0xe0
    8304:	bne	8420 <gen_ether_linktype+0x158>
    8308:	mov	r1, #16
    830c:	mov	r0, #0
    8310:	bl	2588 <gen_load_macplrel>
    8314:	mov	r5, r0
    8318:	mov	r9, #21
    831c:	bl	24d8 <newchunk.constprop.26>
    8320:	mov	r8, r0
    8324:	mov	r1, #8
    8328:	mov	r0, #0
    832c:	stmib	r8, {r5, r9}
    8330:	str	r4, [r8, #20]
    8334:	str	r8, [r8, #96]	; 0x60
    8338:	bl	2588 <gen_load_macplrel>
    833c:	mov	r4, r0
    8340:	bl	24d8 <newchunk.constprop.26>
    8344:	mov	r5, r0
    8348:	movw	r3, #65535	; 0xffff
    834c:	mov	r0, r8
    8350:	mov	r1, r5
    8354:	stmib	r5, {r4, r9}
    8358:	str	r3, [r5, #20]
    835c:	str	r5, [r5, #96]	; 0x60
    8360:	bl	823c <sf_gen_or>
    8364:	movw	r1, #33079	; 0x8137
    8368:	mov	r0, #0
    836c:	bl	2a58 <gen_snap>
    8370:	mov	r1, r5
    8374:	bl	823c <sf_gen_or>
    8378:	bl	3650 <gen_llprefixlen>
    837c:	subs	r4, r0, #0
    8380:	beq	864c <gen_ether_linktype+0x384>
    8384:	bl	22d0 <newchunk.constprop.25>
    8388:	mov	r3, #72	; 0x48
    838c:	mov	r2, r4
    8390:	str	r3, [r0]
    8394:	str	r6, [r0, #12]
    8398:	b	83a0 <gen_ether_linktype+0xd8>
    839c:	mov	r2, r3
    83a0:	ldr	r3, [r2, #16]
    83a4:	cmp	r3, #0
    83a8:	bne	839c <gen_ether_linktype+0xd4>
    83ac:	str	r0, [r2, #16]
    83b0:	bl	24d8 <newchunk.constprop.26>
    83b4:	ldr	r2, [r0, #44]	; 0x2c
    83b8:	mov	r3, r0
    83bc:	mov	ip, #37	; 0x25
    83c0:	movw	r1, #1500	; 0x5dc
    83c4:	stmib	r0, {r4, ip}
    83c8:	str	r1, [r0, #20]
    83cc:	mov	r1, r5
    83d0:	clz	r2, r2
    83d4:	lsr	r2, r2, #5
    83d8:	str	r2, [r0, #44]	; 0x2c
    83dc:	str	r0, [r3, #96]	; 0x60
    83e0:	bl	7884 <sf_gen_and>
    83e4:	mov	r0, r6
    83e8:	movw	r2, #33079	; 0x8137
    83ec:	mov	r1, #8
    83f0:	bl	5ad8 <gen_cmp.constprop.20>
    83f4:	mov	r1, r5
    83f8:	bl	823c <sf_gen_or>
    83fc:	b	8608 <gen_ether_linktype+0x340>
    8400:	movw	r3, #32923	; 0x809b
    8404:	cmp	r0, r3
    8408:	beq	8560 <gen_ether_linktype+0x298>
    840c:	movw	r3, #33011	; 0x80f3
    8410:	cmp	r0, r3
    8414:	beq	8560 <gen_ether_linktype+0x298>
    8418:	cmp	r0, #254	; 0xfe
    841c:	beq	84b8 <gen_ether_linktype+0x1f0>
    8420:	movw	r3, #1500	; 0x5dc
    8424:	cmp	r4, r3
    8428:	bgt	8624 <gen_ether_linktype+0x35c>
    842c:	bl	3650 <gen_llprefixlen>
    8430:	subs	r5, r0, #0
    8434:	beq	86d4 <gen_ether_linktype+0x40c>
    8438:	bl	22d0 <newchunk.constprop.25>
    843c:	mov	r3, #72	; 0x48
    8440:	mov	r2, r5
    8444:	str	r3, [r0]
    8448:	str	r6, [r0, #12]
    844c:	b	8454 <gen_ether_linktype+0x18c>
    8450:	mov	r2, r3
    8454:	ldr	r3, [r2, #16]
    8458:	cmp	r3, #0
    845c:	bne	8450 <gen_ether_linktype+0x188>
    8460:	str	r0, [r2, #16]
    8464:	bl	24d8 <newchunk.constprop.26>
    8468:	mov	r7, r0
    846c:	movw	ip, #1500	; 0x5dc
    8470:	ldr	r3, [r7, #44]	; 0x2c
    8474:	mov	r1, #37	; 0x25
    8478:	mov	r2, r4
    847c:	add	r0, r6, #2
    8480:	str	r5, [r7, #4]
    8484:	str	r1, [r7, #8]
    8488:	mov	r1, #16
    848c:	str	ip, [r7, #20]
    8490:	str	r7, [r7, #96]	; 0x60
    8494:	clz	r3, r3
    8498:	lsr	r3, r3, #5
    849c:	str	r3, [r7, #44]	; 0x2c
    84a0:	bl	5ad8 <gen_cmp.constprop.20>
    84a4:	mov	r5, r0
    84a8:	mov	r1, r0
    84ac:	mov	r0, r7
    84b0:	bl	7884 <sf_gen_and>
    84b4:	b	8608 <gen_ether_linktype+0x340>
    84b8:	bl	3650 <gen_llprefixlen>
    84bc:	subs	r5, r0, #0
    84c0:	beq	866c <gen_ether_linktype+0x3a4>
    84c4:	bl	22d0 <newchunk.constprop.25>
    84c8:	mov	r3, #72	; 0x48
    84cc:	mov	r2, r5
    84d0:	str	r3, [r0]
    84d4:	str	r6, [r0, #12]
    84d8:	b	84e0 <gen_ether_linktype+0x218>
    84dc:	mov	r2, r3
    84e0:	ldr	r3, [r2, #16]
    84e4:	cmp	r3, #0
    84e8:	bne	84dc <gen_ether_linktype+0x214>
    84ec:	str	r0, [r2, #16]
    84f0:	bl	24d8 <newchunk.constprop.26>
    84f4:	mov	r6, r0
    84f8:	movw	r2, #1500	; 0x5dc
    84fc:	orr	r4, r4, r4, lsl #8
    8500:	ldr	r3, [r6, #44]	; 0x2c
    8504:	mov	r0, #37	; 0x25
    8508:	mov	r1, #8
    850c:	str	r5, [r6, #4]
    8510:	str	r0, [r6, #8]
    8514:	mov	r0, #0
    8518:	str	r2, [r6, #20]
    851c:	str	r6, [r6, #96]	; 0x60
    8520:	clz	r3, r3
    8524:	lsr	r3, r3, #5
    8528:	str	r3, [r6, #44]	; 0x2c
    852c:	bl	2588 <gen_load_macplrel>
    8530:	mov	r7, r0
    8534:	bl	24d8 <newchunk.constprop.26>
    8538:	mov	r5, r0
    853c:	mov	r3, #21
    8540:	mov	r0, r6
    8544:	mov	r1, r5
    8548:	str	r7, [r5, #4]
    854c:	str	r3, [r5, #8]
    8550:	str	r4, [r5, #20]
    8554:	str	r5, [r5, #96]	; 0x60
    8558:	bl	7884 <sf_gen_and>
    855c:	b	8608 <gen_ether_linktype+0x340>
    8560:	bl	3650 <gen_llprefixlen>
    8564:	subs	r5, r0, #0
    8568:	beq	8694 <gen_ether_linktype+0x3cc>
    856c:	bl	22d0 <newchunk.constprop.25>
    8570:	mov	r3, #72	; 0x48
    8574:	mov	r2, r5
    8578:	str	r3, [r0]
    857c:	str	r6, [r0, #12]
    8580:	b	8588 <gen_ether_linktype+0x2c0>
    8584:	mov	r2, r3
    8588:	ldr	r3, [r2, #16]
    858c:	cmp	r3, #0
    8590:	bne	8584 <gen_ether_linktype+0x2bc>
    8594:	str	r0, [r2, #16]
    8598:	bl	24d8 <newchunk.constprop.26>
    859c:	mov	r7, r0
    85a0:	mov	r1, #37	; 0x25
    85a4:	ldr	r3, [r7, #44]	; 0x2c
    85a8:	movw	r2, #1500	; 0x5dc
    85ac:	movw	r0, #32923	; 0x809b
    85b0:	cmp	r4, r0
    85b4:	str	r5, [r7, #4]
    85b8:	str	r1, [r7, #8]
    85bc:	str	r2, [r7, #20]
    85c0:	str	r7, [r7, #96]	; 0x60
    85c4:	clz	r3, r3
    85c8:	lsr	r3, r3, #5
    85cc:	str	r3, [r7, #44]	; 0x2c
    85d0:	beq	86bc <gen_ether_linktype+0x3f4>
    85d4:	movw	r1, #33011	; 0x80f3
    85d8:	mov	r0, #0
    85dc:	bl	2a58 <gen_snap>
    85e0:	mov	r5, r0
    85e4:	mov	r0, r7
    85e8:	mov	r1, r5
    85ec:	bl	7884 <sf_gen_and>
    85f0:	mov	r1, #8
    85f4:	mov	r2, r4
    85f8:	mov	r0, r6
    85fc:	bl	5ad8 <gen_cmp.constprop.20>
    8600:	mov	r1, r5
    8604:	bl	823c <sf_gen_or>
    8608:	mov	r0, r5
    860c:	ldrd	r4, [sp]
    8610:	ldrd	r6, [sp, #8]
    8614:	ldrd	r8, [sp, #16]
    8618:	ldr	sl, [sp, #24]
    861c:	add	sp, sp, #28
    8620:	pop	{pc}		; (ldr pc, [sp], #4)
    8624:	mov	r2, r4
    8628:	mov	r0, r6
    862c:	ldrd	r4, [sp]
    8630:	mov	r1, #8
    8634:	ldrd	r6, [sp, #8]
    8638:	ldrd	r8, [sp, #16]
    863c:	ldr	sl, [sp, #24]
    8640:	ldr	lr, [sp, #28]
    8644:	add	sp, sp, #32
    8648:	b	5ad8 <gen_cmp.constprop.20>
    864c:	bl	22d0 <newchunk.constprop.25>
    8650:	ldr	r3, [r7, #880]	; 0x370
    8654:	mov	r2, #40	; 0x28
    8658:	mov	r4, r0
    865c:	str	r2, [r0]
    8660:	add	r3, r3, r6
    8664:	str	r3, [r0, #12]
    8668:	b	83b0 <gen_ether_linktype+0xe8>
    866c:	bl	22d0 <newchunk.constprop.25>
    8670:	ldr	r3, [pc, #136]	; 8700 <gen_ether_linktype+0x438>
    8674:	mov	r2, #40	; 0x28
    8678:	mov	r5, r0
    867c:	str	r2, [r0]
    8680:	add	r3, pc, r3
    8684:	ldr	r3, [r3, #880]	; 0x370
    8688:	add	r6, r3, r6
    868c:	str	r6, [r0, #12]
    8690:	b	84f0 <gen_ether_linktype+0x228>
    8694:	bl	22d0 <newchunk.constprop.25>
    8698:	ldr	r3, [pc, #100]	; 8704 <gen_ether_linktype+0x43c>
    869c:	mov	r2, #40	; 0x28
    86a0:	mov	r5, r0
    86a4:	str	r2, [r0]
    86a8:	add	r3, pc, r3
    86ac:	ldr	r3, [r3, #880]	; 0x370
    86b0:	add	r3, r3, r6
    86b4:	str	r3, [r0, #12]
    86b8:	b	8598 <gen_ether_linktype+0x2d0>
    86bc:	mov	r0, #7
    86c0:	movt	r0, #8
    86c4:	mov	r1, r4
    86c8:	bl	2a58 <gen_snap>
    86cc:	mov	r5, r0
    86d0:	b	85e4 <gen_ether_linktype+0x31c>
    86d4:	bl	22d0 <newchunk.constprop.25>
    86d8:	ldr	r3, [pc, #40]	; 8708 <gen_ether_linktype+0x440>
    86dc:	mov	r2, #40	; 0x28
    86e0:	mov	r5, r0
    86e4:	str	r2, [r0]
    86e8:	add	r3, pc, r3
    86ec:	ldr	r3, [r3, #880]	; 0x370
    86f0:	add	r3, r3, r6
    86f4:	str	r3, [r0, #12]
    86f8:	b	8464 <gen_ether_linktype+0x19c>
    86fc:	.word	0x00036078
    8700:	.word	0x00035ce0
    8704:	.word	0x00035cb8
    8708:	.word	0x00035c78

0000870c <gen_wlanhostop>:
    870c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8710:	mov	r5, r0
    8714:	strd	r6, [sp, #8]
    8718:	strd	r8, [sp, #16]
    871c:	strd	sl, [sp, #24]
    8720:	str	lr, [sp, #32]
    8724:	sub	sp, sp, #12
    8728:	cmp	r1, #8
    872c:	addls	pc, pc, r1, lsl #2
    8730:	b	8c3c <gen_wlanhostop+0x530>
    8734:	b	87bc <gen_wlanhostop+0xb0>
    8738:	b	87e8 <gen_wlanhostop+0xdc>
    873c:	b	89e8 <gen_wlanhostop+0x2dc>
    8740:	b	87bc <gen_wlanhostop+0xb0>
    8744:	b	8ae8 <gen_wlanhostop+0x3dc>
    8748:	b	8b14 <gen_wlanhostop+0x408>
    874c:	b	8b40 <gen_wlanhostop+0x434>
    8750:	b	8bf8 <gen_wlanhostop+0x4ec>
    8754:	b	8758 <gen_wlanhostop+0x4c>
    8758:	mov	ip, #3
    875c:	mov	r1, #0
    8760:	mov	r3, #16
    8764:	mov	r2, ip
    8768:	mov	r0, #1
    876c:	stm	sp, {r1, ip}
    8770:	mov	r1, r3
    8774:	bl	5e64 <gen_ncmp.constprop.16>
    8778:	mov	r6, r0
    877c:	mov	r2, r5
    8780:	mov	r1, #6
    8784:	mov	r0, #24
    8788:	bl	792c <gen_bcmp.constprop.12>
    878c:	mov	r4, r0
    8790:	mov	r1, r0
    8794:	mov	r0, r6
    8798:	bl	7884 <sf_gen_and>
    879c:	mov	r0, r4
    87a0:	add	sp, sp, #12
    87a4:	ldrd	r4, [sp]
    87a8:	ldrd	r6, [sp, #8]
    87ac:	ldrd	r8, [sp, #16]
    87b0:	ldrd	sl, [sp, #24]
    87b4:	add	sp, sp, #32
    87b8:	pop	{pc}		; (ldr pc, [sp], #4)
    87bc:	mov	r1, #1
    87c0:	bl	870c <gen_wlanhostop>
    87c4:	mov	r6, r0
    87c8:	mov	r1, #2
    87cc:	mov	r0, r5
    87d0:	bl	870c <gen_wlanhostop>
    87d4:	mov	r4, r0
    87d8:	mov	r1, r0
    87dc:	mov	r0, r6
    87e0:	bl	823c <sf_gen_or>
    87e4:	b	879c <gen_wlanhostop+0x90>
    87e8:	mov	r0, #1
    87ec:	mov	sl, #1
    87f0:	bl	423c <gen_load_llrel.constprop.24>
    87f4:	mov	r4, r0
    87f8:	mov	r7, #69	; 0x45
    87fc:	bl	24d8 <newchunk.constprop.26>
    8800:	mov	r6, r0
    8804:	mov	r2, r5
    8808:	mov	r1, #6
    880c:	mov	r0, #24
    8810:	stmib	r6, {r4, r7}
    8814:	mov	r9, #2
    8818:	str	sl, [r6, #20]
    881c:	str	r6, [r6, #96]	; 0x60
    8820:	bl	792c <gen_bcmp.constprop.12>
    8824:	mov	r4, r0
    8828:	mov	r1, r0
    882c:	mov	r0, r6
    8830:	bl	7884 <sf_gen_and>
    8834:	mov	r0, sl
    8838:	bl	423c <gen_load_llrel.constprop.24>
    883c:	mov	r8, r0
    8840:	bl	24d8 <newchunk.constprop.26>
    8844:	mov	r6, r0
    8848:	mov	r2, r5
    884c:	ldr	r3, [r6, #44]	; 0x2c
    8850:	mov	r1, #6
    8854:	mov	r0, #16
    8858:	str	r8, [r6, #4]
    885c:	mov	r8, #8
    8860:	str	r7, [r6, #8]
    8864:	str	sl, [r6, #20]
    8868:	str	r6, [r6, #96]	; 0x60
    886c:	clz	r3, r3
    8870:	lsr	r3, r3, #5
    8874:	str	r3, [r6, #44]	; 0x2c
    8878:	bl	792c <gen_bcmp.constprop.12>
    887c:	mov	r1, r0
    8880:	mov	fp, r0
    8884:	mov	r0, r6
    8888:	bl	7884 <sf_gen_and>
    888c:	mov	r1, r4
    8890:	mov	r0, fp
    8894:	bl	823c <sf_gen_or>
    8898:	mov	r0, sl
    889c:	bl	423c <gen_load_llrel.constprop.24>
    88a0:	mov	r6, r0
    88a4:	bl	24d8 <newchunk.constprop.26>
    88a8:	mov	r3, r0
    88ac:	mov	r1, r4
    88b0:	strd	r6, [r0, #4]
    88b4:	str	r9, [r0, #20]
    88b8:	str	r0, [r3, #96]	; 0x60
    88bc:	bl	7884 <sf_gen_and>
    88c0:	mov	r0, sl
    88c4:	bl	423c <gen_load_llrel.constprop.24>
    88c8:	mov	sl, r0
    88cc:	bl	24d8 <newchunk.constprop.26>
    88d0:	mov	r6, r0
    88d4:	mov	r2, r5
    88d8:	ldr	r3, [r6, #44]	; 0x2c
    88dc:	mov	r1, #6
    88e0:	mov	r0, #10
    88e4:	str	sl, [r6, #4]
    88e8:	str	r7, [r6, #8]
    88ec:	str	r9, [r6, #20]
    88f0:	str	r6, [r6, #96]	; 0x60
    88f4:	clz	r3, r3
    88f8:	lsr	r3, r3, #5
    88fc:	str	r3, [r6, #44]	; 0x2c
    8900:	bl	792c <gen_bcmp.constprop.12>
    8904:	mov	r9, r0
    8908:	mov	r1, r0
    890c:	mov	r0, r6
    8910:	bl	7884 <sf_gen_and>
    8914:	mov	r1, r4
    8918:	mov	r0, r9
    891c:	bl	823c <sf_gen_or>
    8920:	mov	r0, #0
    8924:	bl	423c <gen_load_llrel.constprop.24>
    8928:	mov	r6, r0
    892c:	bl	24d8 <newchunk.constprop.26>
    8930:	mov	r3, r0
    8934:	mov	r1, r4
    8938:	strd	r6, [r0, #4]
    893c:	str	r8, [r0, #20]
    8940:	str	r0, [r3, #96]	; 0x60
    8944:	bl	7884 <sf_gen_and>
    8948:	mov	r0, #0
    894c:	bl	423c <gen_load_llrel.constprop.24>
    8950:	mov	r9, r0
    8954:	bl	24d8 <newchunk.constprop.26>
    8958:	mov	r6, r0
    895c:	mov	r2, r5
    8960:	ldr	r3, [r6, #44]	; 0x2c
    8964:	mov	r1, #6
    8968:	mov	r0, #10
    896c:	str	r9, [r6, #4]
    8970:	clz	r3, r3
    8974:	str	r7, [r6, #8]
    8978:	lsr	r3, r3, #5
    897c:	str	r8, [r6, #20]
    8980:	str	r3, [r6, #44]	; 0x2c
    8984:	str	r6, [r6, #96]	; 0x60
    8988:	bl	792c <gen_bcmp.constprop.12>
    898c:	mov	r5, r0
    8990:	mov	r1, r0
    8994:	mov	r0, r6
    8998:	bl	7884 <sf_gen_and>
    899c:	mov	r1, r4
    89a0:	mov	r0, r5
    89a4:	bl	823c <sf_gen_or>
    89a8:	mov	r0, #0
    89ac:	bl	423c <gen_load_llrel.constprop.24>
    89b0:	mov	r5, r0
    89b4:	bl	24d8 <newchunk.constprop.26>
    89b8:	ldr	r2, [r0, #44]	; 0x2c
    89bc:	mov	r3, r0
    89c0:	mov	ip, #4
    89c4:	mov	r1, r4
    89c8:	stmib	r0, {r5, r7}
    89cc:	str	ip, [r0, #20]
    89d0:	clz	r2, r2
    89d4:	lsr	r2, r2, #5
    89d8:	str	r2, [r0, #44]	; 0x2c
    89dc:	str	r0, [r3, #96]	; 0x60
    89e0:	bl	7884 <sf_gen_and>
    89e4:	b	879c <gen_wlanhostop+0x90>
    89e8:	mov	r0, #1
    89ec:	mov	r9, #1
    89f0:	bl	423c <gen_load_llrel.constprop.24>
    89f4:	mov	r4, r0
    89f8:	mov	r7, #69	; 0x45
    89fc:	bl	24d8 <newchunk.constprop.26>
    8a00:	mov	r6, r0
    8a04:	mov	r2, r5
    8a08:	mov	r1, #6
    8a0c:	mov	r0, #16
    8a10:	stmib	r6, {r4, r7}
    8a14:	mov	r8, #8
    8a18:	str	r9, [r6, #20]
    8a1c:	str	r6, [r6, #96]	; 0x60
    8a20:	bl	792c <gen_bcmp.constprop.12>
    8a24:	mov	r1, r0
    8a28:	mov	r4, r0
    8a2c:	mov	r0, r6
    8a30:	bl	7884 <sf_gen_and>
    8a34:	mov	r0, r9
    8a38:	bl	423c <gen_load_llrel.constprop.24>
    8a3c:	mov	sl, r0
    8a40:	bl	24d8 <newchunk.constprop.26>
    8a44:	mov	r6, r0
    8a48:	mov	r2, r5
    8a4c:	ldr	r3, [r6, #44]	; 0x2c
    8a50:	mov	r1, #6
    8a54:	mov	r0, #4
    8a58:	str	sl, [r6, #4]
    8a5c:	str	r7, [r6, #8]
    8a60:	str	r9, [r6, #20]
    8a64:	str	r6, [r6, #96]	; 0x60
    8a68:	clz	r3, r3
    8a6c:	lsr	r3, r3, #5
    8a70:	str	r3, [r6, #44]	; 0x2c
    8a74:	bl	792c <gen_bcmp.constprop.12>
    8a78:	mov	r9, r0
    8a7c:	mov	r1, r0
    8a80:	mov	r0, r6
    8a84:	bl	7884 <sf_gen_and>
    8a88:	mov	r1, r4
    8a8c:	mov	r0, r9
    8a90:	bl	823c <sf_gen_or>
    8a94:	mov	r0, #0
    8a98:	bl	423c <gen_load_llrel.constprop.24>
    8a9c:	mov	r6, r0
    8aa0:	bl	24d8 <newchunk.constprop.26>
    8aa4:	mov	r3, r0
    8aa8:	mov	r1, r4
    8aac:	strd	r6, [r0, #4]
    8ab0:	str	r8, [r0, #20]
    8ab4:	str	r0, [r3, #96]	; 0x60
    8ab8:	bl	7884 <sf_gen_and>
    8abc:	mov	r0, #0
    8ac0:	bl	423c <gen_load_llrel.constprop.24>
    8ac4:	mov	r9, r0
    8ac8:	bl	24d8 <newchunk.constprop.26>
    8acc:	mov	r6, r0
    8ad0:	mov	r2, r5
    8ad4:	mov	r1, #6
    8ad8:	mov	r0, #4
    8adc:	ldr	r3, [r6, #44]	; 0x2c
    8ae0:	str	r9, [r6, #4]
    8ae4:	b	8970 <gen_wlanhostop+0x264>
    8ae8:	mov	r1, #1
    8aec:	bl	870c <gen_wlanhostop>
    8af0:	mov	r6, r0
    8af4:	mov	r1, #2
    8af8:	mov	r0, r5
    8afc:	bl	870c <gen_wlanhostop>
    8b00:	mov	r4, r0
    8b04:	mov	r1, r0
    8b08:	mov	r0, r6
    8b0c:	bl	7884 <sf_gen_and>
    8b10:	b	879c <gen_wlanhostop+0x90>
    8b14:	mov	r2, r0
    8b18:	mov	r1, #6
    8b1c:	mov	r0, #4
    8b20:	add	sp, sp, #12
    8b24:	ldrd	r4, [sp]
    8b28:	ldrd	r6, [sp, #8]
    8b2c:	ldrd	r8, [sp, #16]
    8b30:	ldrd	sl, [sp, #24]
    8b34:	ldr	lr, [sp, #32]
    8b38:	add	sp, sp, #36	; 0x24
    8b3c:	b	792c <gen_bcmp.constprop.12>
    8b40:	mov	r4, #0
    8b44:	mov	ip, #4
    8b48:	mov	r3, #16
    8b4c:	mov	r2, #12
    8b50:	mov	r1, r3
    8b54:	mov	r0, r4
    8b58:	stm	sp, {r4, ip}
    8b5c:	bl	5e64 <gen_ncmp.constprop.16>
    8b60:	mov	r7, r0
    8b64:	mov	lr, #192	; 0xc0
    8b68:	ldr	ip, [r7, #44]	; 0x2c
    8b6c:	mov	r3, #16
    8b70:	mov	r2, #240	; 0xf0
    8b74:	mov	r1, r3
    8b78:	mov	r0, r4
    8b7c:	clz	ip, ip
    8b80:	lsr	ip, ip, #5
    8b84:	str	ip, [r7, #44]	; 0x2c
    8b88:	stm	sp, {r4, lr}
    8b8c:	bl	5e64 <gen_ncmp.constprop.16>
    8b90:	mov	r8, r0
    8b94:	mov	lr, #208	; 0xd0
    8b98:	ldr	ip, [r8, #44]	; 0x2c
    8b9c:	mov	r3, #16
    8ba0:	mov	r2, #240	; 0xf0
    8ba4:	mov	r1, r3
    8ba8:	mov	r0, r4
    8bac:	clz	ip, ip
    8bb0:	lsr	ip, ip, #5
    8bb4:	str	ip, [r8, #44]	; 0x2c
    8bb8:	stm	sp, {r4, lr}
    8bbc:	bl	5e64 <gen_ncmp.constprop.16>
    8bc0:	mov	r6, r0
    8bc4:	mov	r0, r8
    8bc8:	ldr	r3, [r6, #44]	; 0x2c
    8bcc:	mov	r1, r6
    8bd0:	clz	r3, r3
    8bd4:	lsr	r3, r3, #5
    8bd8:	str	r3, [r6, #44]	; 0x2c
    8bdc:	bl	7884 <sf_gen_and>
    8be0:	mov	r0, r7
    8be4:	bl	823c <sf_gen_or>
    8be8:	mov	r2, r5
    8bec:	mov	r1, #6
    8bf0:	mov	r0, #10
    8bf4:	b	8788 <gen_wlanhostop+0x7c>
    8bf8:	mov	r2, #0
    8bfc:	mov	ip, #4
    8c00:	mov	r3, #16
    8c04:	mov	r0, r2
    8c08:	mov	r1, r3
    8c0c:	stm	sp, {r2, ip}
    8c10:	mov	r2, #12
    8c14:	bl	5e64 <gen_ncmp.constprop.16>
    8c18:	mov	r6, r0
    8c1c:	mov	r2, r5
    8c20:	ldr	r3, [r6, #44]	; 0x2c
    8c24:	mov	r1, #6
    8c28:	mov	r0, #16
    8c2c:	clz	r3, r3
    8c30:	lsr	r3, r3, #5
    8c34:	str	r3, [r6, #44]	; 0x2c
    8c38:	b	8788 <gen_wlanhostop+0x7c>
    8c3c:	bl	ebc <abort@plt>

00008c40 <gen_linktype.part.7>:
    8c40:	ldr	r3, [pc, #3072]	; 9848 <gen_linktype.part.7+0xc08>
    8c44:	strd	r4, [sp, #-20]!	; 0xffffffec
    8c48:	mov	r4, r0
    8c4c:	strd	r6, [sp, #8]
    8c50:	str	lr, [sp, #16]
    8c54:	sub	sp, sp, #12
    8c58:	add	r3, pc, r3
    8c5c:	ldr	r3, [r3, #876]	; 0x36c
    8c60:	cmp	r3, #229	; 0xe5
    8c64:	addls	pc, pc, r3, lsl #2
    8c68:	b	948c <gen_linktype.part.7+0x84c>
    8c6c:	b	917c <gen_linktype.part.7+0x53c>
    8c70:	b	9164 <gen_linktype.part.7+0x524>
    8c74:	b	948c <gen_linktype.part.7+0x84c>
    8c78:	b	948c <gen_linktype.part.7+0x84c>
    8c7c:	b	948c <gen_linktype.part.7+0x84c>
    8c80:	b	948c <gen_linktype.part.7+0x84c>
    8c84:	b	9004 <gen_linktype.part.7+0x3c4>
    8c88:	b	9218 <gen_linktype.part.7+0x5d8>
    8c8c:	b	91dc <gen_linktype.part.7+0x59c>
    8c90:	b	9040 <gen_linktype.part.7+0x400>
    8c94:	b	9004 <gen_linktype.part.7+0x3c4>
    8c98:	b	9004 <gen_linktype.part.7+0x3c4>
    8c9c:	b	91dc <gen_linktype.part.7+0x59c>
    8ca0:	b	948c <gen_linktype.part.7+0x84c>
    8ca4:	b	948c <gen_linktype.part.7+0x84c>
    8ca8:	b	91dc <gen_linktype.part.7+0x59c>
    8cac:	b	9310 <gen_linktype.part.7+0x6d0>
    8cb0:	b	948c <gen_linktype.part.7+0x84c>
    8cb4:	b	948c <gen_linktype.part.7+0x84c>
    8cb8:	b	9004 <gen_linktype.part.7+0x3c4>
    8cbc:	b	948c <gen_linktype.part.7+0x84c>
    8cc0:	b	948c <gen_linktype.part.7+0x84c>
    8cc4:	b	948c <gen_linktype.part.7+0x84c>
    8cc8:	b	948c <gen_linktype.part.7+0x84c>
    8ccc:	b	948c <gen_linktype.part.7+0x84c>
    8cd0:	b	948c <gen_linktype.part.7+0x84c>
    8cd4:	b	948c <gen_linktype.part.7+0x84c>
    8cd8:	b	948c <gen_linktype.part.7+0x84c>
    8cdc:	b	948c <gen_linktype.part.7+0x84c>
    8ce0:	b	948c <gen_linktype.part.7+0x84c>
    8ce4:	b	948c <gen_linktype.part.7+0x84c>
    8ce8:	b	948c <gen_linktype.part.7+0x84c>
    8cec:	b	948c <gen_linktype.part.7+0x84c>
    8cf0:	b	948c <gen_linktype.part.7+0x84c>
    8cf4:	b	948c <gen_linktype.part.7+0x84c>
    8cf8:	b	948c <gen_linktype.part.7+0x84c>
    8cfc:	b	948c <gen_linktype.part.7+0x84c>
    8d00:	b	948c <gen_linktype.part.7+0x84c>
    8d04:	b	948c <gen_linktype.part.7+0x84c>
    8d08:	b	948c <gen_linktype.part.7+0x84c>
    8d0c:	b	948c <gen_linktype.part.7+0x84c>
    8d10:	b	948c <gen_linktype.part.7+0x84c>
    8d14:	b	948c <gen_linktype.part.7+0x84c>
    8d18:	b	948c <gen_linktype.part.7+0x84c>
    8d1c:	b	948c <gen_linktype.part.7+0x84c>
    8d20:	b	948c <gen_linktype.part.7+0x84c>
    8d24:	b	948c <gen_linktype.part.7+0x84c>
    8d28:	b	948c <gen_linktype.part.7+0x84c>
    8d2c:	b	948c <gen_linktype.part.7+0x84c>
    8d30:	b	948c <gen_linktype.part.7+0x84c>
    8d34:	b	9040 <gen_linktype.part.7+0x400>
    8d38:	b	9040 <gen_linktype.part.7+0x400>
    8d3c:	b	948c <gen_linktype.part.7+0x84c>
    8d40:	b	948c <gen_linktype.part.7+0x84c>
    8d44:	b	948c <gen_linktype.part.7+0x84c>
    8d48:	b	948c <gen_linktype.part.7+0x84c>
    8d4c:	b	948c <gen_linktype.part.7+0x84c>
    8d50:	b	948c <gen_linktype.part.7+0x84c>
    8d54:	b	948c <gen_linktype.part.7+0x84c>
    8d58:	b	948c <gen_linktype.part.7+0x84c>
    8d5c:	b	948c <gen_linktype.part.7+0x84c>
    8d60:	b	948c <gen_linktype.part.7+0x84c>
    8d64:	b	948c <gen_linktype.part.7+0x84c>
    8d68:	b	948c <gen_linktype.part.7+0x84c>
    8d6c:	b	948c <gen_linktype.part.7+0x84c>
    8d70:	b	948c <gen_linktype.part.7+0x84c>
    8d74:	b	948c <gen_linktype.part.7+0x84c>
    8d78:	b	948c <gen_linktype.part.7+0x84c>
    8d7c:	b	948c <gen_linktype.part.7+0x84c>
    8d80:	b	948c <gen_linktype.part.7+0x84c>
    8d84:	b	948c <gen_linktype.part.7+0x84c>
    8d88:	b	948c <gen_linktype.part.7+0x84c>
    8d8c:	b	948c <gen_linktype.part.7+0x84c>
    8d90:	b	948c <gen_linktype.part.7+0x84c>
    8d94:	b	948c <gen_linktype.part.7+0x84c>
    8d98:	b	948c <gen_linktype.part.7+0x84c>
    8d9c:	b	948c <gen_linktype.part.7+0x84c>
    8da0:	b	948c <gen_linktype.part.7+0x84c>
    8da4:	b	948c <gen_linktype.part.7+0x84c>
    8da8:	b	948c <gen_linktype.part.7+0x84c>
    8dac:	b	948c <gen_linktype.part.7+0x84c>
    8db0:	b	948c <gen_linktype.part.7+0x84c>
    8db4:	b	948c <gen_linktype.part.7+0x84c>
    8db8:	b	948c <gen_linktype.part.7+0x84c>
    8dbc:	b	948c <gen_linktype.part.7+0x84c>
    8dc0:	b	948c <gen_linktype.part.7+0x84c>
    8dc4:	b	948c <gen_linktype.part.7+0x84c>
    8dc8:	b	948c <gen_linktype.part.7+0x84c>
    8dcc:	b	948c <gen_linktype.part.7+0x84c>
    8dd0:	b	948c <gen_linktype.part.7+0x84c>
    8dd4:	b	948c <gen_linktype.part.7+0x84c>
    8dd8:	b	948c <gen_linktype.part.7+0x84c>
    8ddc:	b	948c <gen_linktype.part.7+0x84c>
    8de0:	b	948c <gen_linktype.part.7+0x84c>
    8de4:	b	948c <gen_linktype.part.7+0x84c>
    8de8:	b	948c <gen_linktype.part.7+0x84c>
    8dec:	b	948c <gen_linktype.part.7+0x84c>
    8df0:	b	948c <gen_linktype.part.7+0x84c>
    8df4:	b	948c <gen_linktype.part.7+0x84c>
    8df8:	b	948c <gen_linktype.part.7+0x84c>
    8dfc:	b	948c <gen_linktype.part.7+0x84c>
    8e00:	b	948c <gen_linktype.part.7+0x84c>
    8e04:	b	948c <gen_linktype.part.7+0x84c>
    8e08:	b	948c <gen_linktype.part.7+0x84c>
    8e0c:	b	92f0 <gen_linktype.part.7+0x6b0>
    8e10:	b	9404 <gen_linktype.part.7+0x7c4>
    8e14:	b	948c <gen_linktype.part.7+0x84c>
    8e18:	b	9280 <gen_linktype.part.7+0x640>
    8e1c:	b	917c <gen_linktype.part.7+0x53c>
    8e20:	b	917c <gen_linktype.part.7+0x53c>
    8e24:	b	948c <gen_linktype.part.7+0x84c>
    8e28:	b	948c <gen_linktype.part.7+0x84c>
    8e2c:	b	948c <gen_linktype.part.7+0x84c>
    8e30:	b	9360 <gen_linktype.part.7+0x720>
    8e34:	b	9140 <gen_linktype.part.7+0x500>
    8e38:	b	948c <gen_linktype.part.7+0x84c>
    8e3c:	b	948c <gen_linktype.part.7+0x84c>
    8e40:	b	948c <gen_linktype.part.7+0x84c>
    8e44:	b	948c <gen_linktype.part.7+0x84c>
    8e48:	b	9404 <gen_linktype.part.7+0x7c4>
    8e4c:	b	948c <gen_linktype.part.7+0x84c>
    8e50:	b	948c <gen_linktype.part.7+0x84c>
    8e54:	b	9004 <gen_linktype.part.7+0x3c4>
    8e58:	b	90ec <gen_linktype.part.7+0x4ac>
    8e5c:	b	948c <gen_linktype.part.7+0x84c>
    8e60:	b	948c <gen_linktype.part.7+0x84c>
    8e64:	b	948c <gen_linktype.part.7+0x84c>
    8e68:	b	9404 <gen_linktype.part.7+0x7c4>
    8e6c:	b	948c <gen_linktype.part.7+0x84c>
    8e70:	b	9218 <gen_linktype.part.7+0x5d8>
    8e74:	b	90a8 <gen_linktype.part.7+0x468>
    8e78:	b	90a8 <gen_linktype.part.7+0x468>
    8e7c:	b	90a8 <gen_linktype.part.7+0x468>
    8e80:	b	90a8 <gen_linktype.part.7+0x468>
    8e84:	b	90a8 <gen_linktype.part.7+0x468>
    8e88:	b	90a8 <gen_linktype.part.7+0x468>
    8e8c:	b	90a8 <gen_linktype.part.7+0x468>
    8e90:	b	90a8 <gen_linktype.part.7+0x468>
    8e94:	b	948c <gen_linktype.part.7+0x84c>
    8e98:	b	952c <gen_linktype.part.7+0x8ec>
    8e9c:	b	952c <gen_linktype.part.7+0x8ec>
    8ea0:	b	948c <gen_linktype.part.7+0x84c>
    8ea4:	b	948c <gen_linktype.part.7+0x84c>
    8ea8:	b	9520 <gen_linktype.part.7+0x8e0>
    8eac:	b	9514 <gen_linktype.part.7+0x8d4>
    8eb0:	b	948c <gen_linktype.part.7+0x84c>
    8eb4:	b	948c <gen_linktype.part.7+0x84c>
    8eb8:	b	948c <gen_linktype.part.7+0x84c>
    8ebc:	b	948c <gen_linktype.part.7+0x84c>
    8ec0:	b	948c <gen_linktype.part.7+0x84c>
    8ec4:	b	948c <gen_linktype.part.7+0x84c>
    8ec8:	b	948c <gen_linktype.part.7+0x84c>
    8ecc:	b	948c <gen_linktype.part.7+0x84c>
    8ed0:	b	948c <gen_linktype.part.7+0x84c>
    8ed4:	b	948c <gen_linktype.part.7+0x84c>
    8ed8:	b	948c <gen_linktype.part.7+0x84c>
    8edc:	b	948c <gen_linktype.part.7+0x84c>
    8ee0:	b	948c <gen_linktype.part.7+0x84c>
    8ee4:	b	948c <gen_linktype.part.7+0x84c>
    8ee8:	b	948c <gen_linktype.part.7+0x84c>
    8eec:	b	948c <gen_linktype.part.7+0x84c>
    8ef0:	b	948c <gen_linktype.part.7+0x84c>
    8ef4:	b	948c <gen_linktype.part.7+0x84c>
    8ef8:	b	9404 <gen_linktype.part.7+0x7c4>
    8efc:	b	90a8 <gen_linktype.part.7+0x468>
    8f00:	b	948c <gen_linktype.part.7+0x84c>
    8f04:	b	9040 <gen_linktype.part.7+0x400>
    8f08:	b	90a8 <gen_linktype.part.7+0x468>
    8f0c:	b	90a8 <gen_linktype.part.7+0x468>
    8f10:	b	948c <gen_linktype.part.7+0x84c>
    8f14:	b	948c <gen_linktype.part.7+0x84c>
    8f18:	b	948c <gen_linktype.part.7+0x84c>
    8f1c:	b	948c <gen_linktype.part.7+0x84c>
    8f20:	b	948c <gen_linktype.part.7+0x84c>
    8f24:	b	948c <gen_linktype.part.7+0x84c>
    8f28:	b	948c <gen_linktype.part.7+0x84c>
    8f2c:	b	948c <gen_linktype.part.7+0x84c>
    8f30:	b	9508 <gen_linktype.part.7+0x8c8>
    8f34:	b	90a8 <gen_linktype.part.7+0x468>
    8f38:	b	90a8 <gen_linktype.part.7+0x468>
    8f3c:	b	90a8 <gen_linktype.part.7+0x468>
    8f40:	b	90a8 <gen_linktype.part.7+0x468>
    8f44:	b	9544 <gen_linktype.part.7+0x904>
    8f48:	b	90a8 <gen_linktype.part.7+0x468>
    8f4c:	b	948c <gen_linktype.part.7+0x84c>
    8f50:	b	948c <gen_linktype.part.7+0x84c>
    8f54:	b	9538 <gen_linktype.part.7+0x8f8>
    8f58:	b	9550 <gen_linktype.part.7+0x910>
    8f5c:	b	948c <gen_linktype.part.7+0x84c>
    8f60:	b	9538 <gen_linktype.part.7+0x8f8>
    8f64:	b	94a8 <gen_linktype.part.7+0x868>
    8f68:	b	94d8 <gen_linktype.part.7+0x898>
    8f6c:	b	9404 <gen_linktype.part.7+0x7c4>
    8f70:	b	94cc <gen_linktype.part.7+0x88c>
    8f74:	b	90a8 <gen_linktype.part.7+0x468>
    8f78:	b	94d8 <gen_linktype.part.7+0x898>
    8f7c:	b	94c0 <gen_linktype.part.7+0x880>
    8f80:	b	94b4 <gen_linktype.part.7+0x874>
    8f84:	b	94f0 <gen_linktype.part.7+0x8b0>
    8f88:	b	94e4 <gen_linktype.part.7+0x8a4>
    8f8c:	b	90a8 <gen_linktype.part.7+0x468>
    8f90:	b	9550 <gen_linktype.part.7+0x910>
    8f94:	b	94fc <gen_linktype.part.7+0x8bc>
    8f98:	b	948c <gen_linktype.part.7+0x84c>
    8f9c:	b	948c <gen_linktype.part.7+0x84c>
    8fa0:	b	948c <gen_linktype.part.7+0x84c>
    8fa4:	b	948c <gen_linktype.part.7+0x84c>
    8fa8:	b	948c <gen_linktype.part.7+0x84c>
    8fac:	b	948c <gen_linktype.part.7+0x84c>
    8fb0:	b	948c <gen_linktype.part.7+0x84c>
    8fb4:	b	948c <gen_linktype.part.7+0x84c>
    8fb8:	b	948c <gen_linktype.part.7+0x84c>
    8fbc:	b	948c <gen_linktype.part.7+0x84c>
    8fc0:	b	948c <gen_linktype.part.7+0x84c>
    8fc4:	b	948c <gen_linktype.part.7+0x84c>
    8fc8:	b	94d8 <gen_linktype.part.7+0x898>
    8fcc:	b	948c <gen_linktype.part.7+0x84c>
    8fd0:	b	948c <gen_linktype.part.7+0x84c>
    8fd4:	b	948c <gen_linktype.part.7+0x84c>
    8fd8:	b	948c <gen_linktype.part.7+0x84c>
    8fdc:	b	9538 <gen_linktype.part.7+0x8f8>
    8fe0:	b	948c <gen_linktype.part.7+0x84c>
    8fe4:	b	948c <gen_linktype.part.7+0x84c>
    8fe8:	b	948c <gen_linktype.part.7+0x84c>
    8fec:	b	948c <gen_linktype.part.7+0x84c>
    8ff0:	b	948c <gen_linktype.part.7+0x84c>
    8ff4:	b	91b0 <gen_linktype.part.7+0x570>
    8ff8:	b	94a8 <gen_linktype.part.7+0x868>
    8ffc:	b	901c <gen_linktype.part.7+0x3dc>
    9000:	b	9154 <gen_linktype.part.7+0x514>
    9004:	add	sp, sp, #12
    9008:	ldrd	r4, [sp]
    900c:	ldrd	r6, [sp, #8]
    9010:	ldr	lr, [sp, #16]
    9014:	add	sp, sp, #20
    9018:	b	2fbc <gen_llc_linktype>
    901c:	cmp	r0, #2048	; 0x800
    9020:	beq	914c <gen_linktype.part.7+0x50c>
    9024:	mov	r0, #0
    9028:	add	sp, sp, #12
    902c:	ldrd	r4, [sp]
    9030:	ldrd	r6, [sp, #8]
    9034:	ldr	lr, [sp, #16]
    9038:	add	sp, sp, #20
    903c:	b	5cf4 <gen_uncond>
    9040:	cmp	r0, #1536	; 0x600
    9044:	beq	981c <gen_linktype.part.7+0xbdc>
    9048:	ble	9598 <gen_linktype.part.7+0x958>
    904c:	movw	r3, #24579	; 0x6003
    9050:	cmp	r0, r3
    9054:	moveq	r4, #39	; 0x27
    9058:	beq	907c <gen_linktype.part.7+0x43c>
    905c:	ble	955c <gen_linktype.part.7+0x91c>
    9060:	movw	r3, #32923	; 0x809b
    9064:	cmp	r4, r3
    9068:	moveq	r4, #41	; 0x29
    906c:	beq	907c <gen_linktype.part.7+0x43c>
    9070:	movw	r3, #34525	; 0x86dd
    9074:	cmp	r4, r3
    9078:	moveq	r4, #87	; 0x57
    907c:	ldr	r3, [pc, #1992]	; 984c <gen_linktype.part.7+0xc0c>
    9080:	mov	r2, r4
    9084:	mov	r1, #8
    9088:	add	r3, pc, r3
    908c:	ldr	r0, [r3, #952]	; 0x3b8
    9090:	add	sp, sp, #12
    9094:	ldrd	r4, [sp]
    9098:	ldrd	r6, [sp, #8]
    909c:	ldr	lr, [sp, #16]
    90a0:	add	sp, sp, #20
    90a4:	b	5ad8 <gen_cmp.constprop.20>
    90a8:	mov	ip, #0
    90ac:	mov	r2, #17152	; 0x4300
    90b0:	movt	r2, #19783	; 0x4d47
    90b4:	mov	r3, #16
    90b8:	mov	r1, ip
    90bc:	mov	r0, ip
    90c0:	str	ip, [sp]
    90c4:	str	r2, [sp, #4]
    90c8:	mvn	r2, #255	; 0xff
    90cc:	bl	5e64 <gen_ncmp.constprop.16>
    90d0:	mov	r5, r0
    90d4:	mov	r0, r5
    90d8:	add	sp, sp, #12
    90dc:	ldrd	r4, [sp]
    90e0:	ldrd	r6, [sp, #8]
    90e4:	add	sp, sp, #16
    90e8:	pop	{pc}		; (ldr pc, [sp], #4)
    90ec:	ldr	r3, [pc, #1884]	; 9850 <gen_linktype.part.7+0xc10>
    90f0:	add	r3, pc, r3
    90f4:	ldr	r2, [r3, #924]	; 0x39c
    90f8:	cmp	r2, #0
    90fc:	beq	9658 <gen_linktype.part.7+0xa18>
    9100:	mov	r2, #65280	; 0xff00
    9104:	mov	r1, #8
    9108:	mov	r0, #4
    910c:	bl	5ad8 <gen_cmp.constprop.20>
    9110:	mov	r6, r0
    9114:	mov	r0, r4
    9118:	ldr	r3, [r6, #44]	; 0x2c
    911c:	clz	r3, r3
    9120:	lsr	r3, r3, #5
    9124:	str	r3, [r6, #44]	; 0x2c
    9128:	bl	82c8 <gen_ether_linktype>
    912c:	mov	r5, r0
    9130:	mov	r1, r0
    9134:	mov	r0, r6
    9138:	bl	7884 <sf_gen_and>
    913c:	b	90d4 <gen_linktype.part.7+0x494>
    9140:	movw	r3, #32923	; 0x809b
    9144:	cmp	r0, r3
    9148:	bne	9024 <gen_linktype.part.7+0x3e4>
    914c:	mov	r0, #1
    9150:	b	9028 <gen_linktype.part.7+0x3e8>
    9154:	movw	r3, #34525	; 0x86dd
    9158:	cmp	r0, r3
    915c:	bne	9024 <gen_linktype.part.7+0x3e4>
    9160:	b	914c <gen_linktype.part.7+0x50c>
    9164:	add	sp, sp, #12
    9168:	ldrd	r4, [sp]
    916c:	ldrd	r6, [sp, #8]
    9170:	ldr	lr, [sp, #16]
    9174:	add	sp, sp, #20
    9178:	b	82c8 <gen_ether_linktype>
    917c:	cmp	r0, #2048	; 0x800
    9180:	beq	96dc <gen_linktype.part.7+0xa9c>
    9184:	movw	r2, #34525	; 0x86dd
    9188:	cmp	r0, r2
    918c:	moveq	r2, #167772160	; 0xa000000
    9190:	moveq	r0, #10
    9194:	bne	9024 <gen_linktype.part.7+0x3e4>
    9198:	cmp	r3, #109	; 0x6d
    919c:	cmpne	r3, #0
    91a0:	mov	r1, #0
    91a4:	movne	r2, r0
    91a8:	mov	r0, r1
    91ac:	b	9090 <gen_linktype.part.7+0x450>
    91b0:	cmp	r0, #2048	; 0x800
    91b4:	beq	96e8 <gen_linktype.part.7+0xaa8>
    91b8:	movw	r3, #34525	; 0x86dd
    91bc:	cmp	r0, r3
    91c0:	bne	9024 <gen_linktype.part.7+0x3e4>
    91c4:	ldr	r3, [pc, #1672]	; 9854 <gen_linktype.part.7+0xc14>
    91c8:	mov	r2, #26
    91cc:	mov	r1, #16
    91d0:	add	r3, pc, r3
    91d4:	ldr	r0, [r3, #952]	; 0x3b8
    91d8:	b	9090 <gen_linktype.part.7+0x450>
    91dc:	cmp	r0, #2048	; 0x800
    91e0:	beq	9700 <gen_linktype.part.7+0xac0>
    91e4:	movw	r3, #34525	; 0x86dd
    91e8:	cmp	r0, r3
    91ec:	bne	9024 <gen_linktype.part.7+0x3e4>
    91f0:	mov	ip, #96	; 0x60
    91f4:	mov	r2, #0
    91f8:	mov	r3, #16
    91fc:	mov	r0, r2
    9200:	mov	r1, r3
    9204:	stm	sp, {r2, ip}
    9208:	mov	r2, #240	; 0xf0
    920c:	bl	5e64 <gen_ncmp.constprop.16>
    9210:	mov	r5, r0
    9214:	b	90d4 <gen_linktype.part.7+0x494>
    9218:	movw	r3, #32821	; 0x8035
    921c:	cmp	r0, r3
    9220:	beq	97f8 <gen_linktype.part.7+0xbb8>
    9224:	bgt	9568 <gen_linktype.part.7+0x928>
    9228:	cmp	r0, #2048	; 0x800
    922c:	beq	97d0 <gen_linktype.part.7+0xb90>
    9230:	movw	r3, #2054	; 0x806
    9234:	cmp	r0, r3
    9238:	bne	9024 <gen_linktype.part.7+0x3e4>
    923c:	ldr	r3, [pc, #1556]	; 9858 <gen_linktype.part.7+0xc18>
    9240:	mov	r2, #213	; 0xd5
    9244:	mov	r1, #16
    9248:	add	r3, pc, r3
    924c:	ldr	r4, [r3, #952]	; 0x3b8
    9250:	mov	r0, r4
    9254:	bl	5ad8 <gen_cmp.constprop.20>
    9258:	mov	r6, r0
    925c:	mov	r2, #241	; 0xf1
    9260:	mov	r0, r4
    9264:	mov	r1, #16
    9268:	bl	5ad8 <gen_cmp.constprop.20>
    926c:	mov	r5, r0
    9270:	mov	r1, r0
    9274:	mov	r0, r6
    9278:	bl	823c <sf_gen_or>
    927c:	b	90d4 <gen_linktype.part.7+0x494>
    9280:	cmp	r0, #2048	; 0x800
    9284:	beq	97a8 <gen_linktype.part.7+0xb68>
    9288:	movw	r3, #34525	; 0x86dd
    928c:	cmp	r0, r3
    9290:	beq	9798 <gen_linktype.part.7+0xb58>
    9294:	cmp	r0, #254	; 0xfe
    9298:	bne	9024 <gen_linktype.part.7+0x3e4>
    929c:	movw	r2, #897	; 0x381
    92a0:	mov	r1, #8
    92a4:	mov	r0, #2
    92a8:	bl	5ad8 <gen_cmp.constprop.20>
    92ac:	mov	r4, r0
    92b0:	movw	r2, #898	; 0x382
    92b4:	mov	r1, #8
    92b8:	mov	r0, #2
    92bc:	bl	5ad8 <gen_cmp.constprop.20>
    92c0:	mov	r6, r0
    92c4:	movw	r2, #899	; 0x383
    92c8:	mov	r1, #8
    92cc:	mov	r0, #2
    92d0:	bl	5ad8 <gen_cmp.constprop.20>
    92d4:	mov	r1, r0
    92d8:	mov	r5, r0
    92dc:	mov	r0, r6
    92e0:	bl	823c <sf_gen_or>
    92e4:	mov	r0, r4
    92e8:	bl	823c <sf_gen_or>
    92ec:	b	90d4 <gen_linktype.part.7+0x494>
    92f0:	ldr	r3, [pc, #1380]	; 985c <gen_linktype.part.7+0xc1c>
    92f4:	cmp	r0, #254	; 0xfe
    92f8:	movw	r2, #65278	; 0xfefe
    92fc:	mov	r1, #8
    9300:	movne	r2, r0
    9304:	add	r3, pc, r3
    9308:	ldr	r0, [r3, #952]	; 0x3b8
    930c:	b	9090 <gen_linktype.part.7+0x450>
    9310:	ldr	r3, [pc, #1352]	; 9860 <gen_linktype.part.7+0xc20>
    9314:	cmp	r0, #2048	; 0x800
    9318:	add	r3, pc, r3
    931c:	ldr	r5, [r3, #952]	; 0x3b8
    9320:	beq	9684 <gen_linktype.part.7+0xa44>
    9324:	cmp	r0, #1536	; 0x600
    9328:	beq	983c <gen_linktype.part.7+0xbfc>
    932c:	bgt	9628 <gen_linktype.part.7+0x9e8>
    9330:	cmp	r0, #224	; 0xe0
    9334:	moveq	r4, #43	; 0x2b
    9338:	beq	9350 <gen_linktype.part.7+0x710>
    933c:	cmp	r4, #254	; 0xfe
    9340:	moveq	r4, #35	; 0x23
    9344:	beq	9350 <gen_linktype.part.7+0x710>
    9348:	cmp	r4, #66	; 0x42
    934c:	moveq	r4, #49	; 0x31
    9350:	mov	r2, r4
    9354:	mov	r0, r5
    9358:	mov	r1, #8
    935c:	b	9090 <gen_linktype.part.7+0x450>
    9360:	ldr	r3, [pc, #1276]	; 9864 <gen_linktype.part.7+0xc24>
    9364:	cmp	r0, #240	; 0xf0
    9368:	add	r3, pc, r3
    936c:	ldr	r6, [r3, #952]	; 0x3b8
    9370:	beq	9760 <gen_linktype.part.7+0xb20>
    9374:	bgt	95bc <gen_linktype.part.7+0x97c>
    9378:	cmp	r0, #6
    937c:	beq	9760 <gen_linktype.part.7+0xb20>
    9380:	cmp	r0, #224	; 0xe0
    9384:	bne	95dc <gen_linktype.part.7+0x99c>
    9388:	mov	r2, r0
    938c:	mov	r1, #16
    9390:	mov	r0, #0
    9394:	bl	5c18 <gen_cmp.constprop.18>
    9398:	mov	r4, r0
    939c:	movw	r1, #33079	; 0x8137
    93a0:	mov	r0, #0
    93a4:	bl	2a58 <gen_snap>
    93a8:	mov	r5, r0
    93ac:	mov	r1, r0
    93b0:	mov	r0, r4
    93b4:	bl	823c <sf_gen_or>
    93b8:	mov	r2, #4
    93bc:	mov	r1, #8
    93c0:	mov	r0, r6
    93c4:	bl	5ad8 <gen_cmp.constprop.20>
    93c8:	mov	r1, r5
    93cc:	bl	7884 <sf_gen_and>
    93d0:	mov	r2, #1
    93d4:	mov	r1, #8
    93d8:	mov	r0, r6
    93dc:	bl	5ad8 <gen_cmp.constprop.20>
    93e0:	mov	r1, r5
    93e4:	bl	823c <sf_gen_or>
    93e8:	mov	r0, r6
    93ec:	movw	r2, #33079	; 0x8137
    93f0:	mov	r1, #8
    93f4:	bl	5ad8 <gen_cmp.constprop.20>
    93f8:	mov	r1, r5
    93fc:	bl	823c <sf_gen_or>
    9400:	b	90d4 <gen_linktype.part.7+0x494>
    9404:	mov	r0, #0
    9408:	mov	r5, #69	; 0x45
    940c:	bl	423c <gen_load_llrel.constprop.24>
    9410:	mov	r7, r0
    9414:	bl	24d8 <newchunk.constprop.26>
    9418:	mov	r6, r0
    941c:	mov	r3, #8
    9420:	mov	r0, #0
    9424:	str	r7, [r6, #4]
    9428:	str	r5, [r6, #8]
    942c:	str	r3, [r6, #20]
    9430:	str	r6, [r6, #96]	; 0x60
    9434:	bl	423c <gen_load_llrel.constprop.24>
    9438:	mov	r7, r0
    943c:	bl	24d8 <newchunk.constprop.26>
    9440:	ldr	r2, [r0, #44]	; 0x2c
    9444:	mov	r3, r0
    9448:	mov	ip, #4
    944c:	mov	r1, r6
    9450:	str	r7, [r0, #4]
    9454:	str	r5, [r0, #8]
    9458:	str	ip, [r0, #20]
    945c:	clz	r2, r2
    9460:	lsr	r2, r2, #5
    9464:	str	r2, [r0, #44]	; 0x2c
    9468:	str	r0, [r3, #96]	; 0x60
    946c:	bl	7884 <sf_gen_and>
    9470:	mov	r0, r4
    9474:	bl	2fbc <gen_llc_linktype>
    9478:	mov	r5, r0
    947c:	mov	r1, r0
    9480:	mov	r0, r6
    9484:	bl	7884 <sf_gen_and>
    9488:	b	90d4 <gen_linktype.part.7+0x494>
    948c:	ldr	r3, [pc, #980]	; 9868 <gen_linktype.part.7+0xc28>
    9490:	add	r3, pc, r3
    9494:	ldr	r0, [r3, #952]	; 0x3b8
    9498:	cmn	r0, #1
    949c:	beq	9844 <gen_linktype.part.7+0xc04>
    94a0:	mov	r2, r4
    94a4:	b	9358 <gen_linktype.part.7+0x718>
    94a8:	ldr	r0, [pc, #956]	; 986c <gen_linktype.part.7+0xc2c>
    94ac:	add	r0, pc, r0
    94b0:	bl	2130 <sf_bpf_error>
    94b4:	ldr	r0, [pc, #948]	; 9870 <gen_linktype.part.7+0xc30>
    94b8:	add	r0, pc, r0
    94bc:	bl	2130 <sf_bpf_error>
    94c0:	ldr	r0, [pc, #940]	; 9874 <gen_linktype.part.7+0xc34>
    94c4:	add	r0, pc, r0
    94c8:	bl	2130 <sf_bpf_error>
    94cc:	ldr	r0, [pc, #932]	; 9878 <gen_linktype.part.7+0xc38>
    94d0:	add	r0, pc, r0
    94d4:	bl	2130 <sf_bpf_error>
    94d8:	ldr	r0, [pc, #924]	; 987c <gen_linktype.part.7+0xc3c>
    94dc:	add	r0, pc, r0
    94e0:	bl	2130 <sf_bpf_error>
    94e4:	ldr	r0, [pc, #916]	; 9880 <gen_linktype.part.7+0xc40>
    94e8:	add	r0, pc, r0
    94ec:	bl	2130 <sf_bpf_error>
    94f0:	ldr	r0, [pc, #908]	; 9884 <gen_linktype.part.7+0xc44>
    94f4:	add	r0, pc, r0
    94f8:	bl	2130 <sf_bpf_error>
    94fc:	ldr	r0, [pc, #900]	; 9888 <gen_linktype.part.7+0xc48>
    9500:	add	r0, pc, r0
    9504:	bl	2130 <sf_bpf_error>
    9508:	ldr	r0, [pc, #892]	; 988c <gen_linktype.part.7+0xc4c>
    950c:	add	r0, pc, r0
    9510:	bl	2130 <sf_bpf_error>
    9514:	ldr	r0, [pc, #884]	; 9890 <gen_linktype.part.7+0xc50>
    9518:	add	r0, pc, r0
    951c:	bl	2130 <sf_bpf_error>
    9520:	ldr	r0, [pc, #876]	; 9894 <gen_linktype.part.7+0xc54>
    9524:	add	r0, pc, r0
    9528:	bl	2130 <sf_bpf_error>
    952c:	ldr	r0, [pc, #868]	; 9898 <gen_linktype.part.7+0xc58>
    9530:	add	r0, pc, r0
    9534:	bl	2130 <sf_bpf_error>
    9538:	ldr	r0, [pc, #860]	; 989c <gen_linktype.part.7+0xc5c>
    953c:	add	r0, pc, r0
    9540:	bl	2130 <sf_bpf_error>
    9544:	ldr	r0, [pc, #852]	; 98a0 <gen_linktype.part.7+0xc60>
    9548:	add	r0, pc, r0
    954c:	bl	2130 <sf_bpf_error>
    9550:	ldr	r0, [pc, #844]	; 98a4 <gen_linktype.part.7+0xc64>
    9554:	add	r0, pc, r0
    9558:	bl	2130 <sf_bpf_error>
    955c:	cmp	r4, #2048	; 0x800
    9560:	moveq	r4, #33	; 0x21
    9564:	b	907c <gen_linktype.part.7+0x43c>
    9568:	movw	r3, #32923	; 0x809b
    956c:	cmp	r0, r3
    9570:	beq	97b8 <gen_linktype.part.7+0xb78>
    9574:	movw	r3, #34525	; 0x86dd
    9578:	cmp	r0, r3
    957c:	bne	9024 <gen_linktype.part.7+0x3e4>
    9580:	ldr	r3, [pc, #800]	; 98a8 <gen_linktype.part.7+0xc68>
    9584:	mov	r2, #196	; 0xc4
    9588:	mov	r1, #16
    958c:	add	r3, pc, r3
    9590:	ldr	r0, [r3, #952]	; 0x3b8
    9594:	b	9090 <gen_linktype.part.7+0x450>
    9598:	cmp	r0, #224	; 0xe0
    959c:	moveq	r4, #43	; 0x2b
    95a0:	beq	907c <gen_linktype.part.7+0x43c>
    95a4:	cmp	r4, #254	; 0xfe
    95a8:	moveq	r4, #35	; 0x23
    95ac:	beq	907c <gen_linktype.part.7+0x43c>
    95b0:	cmp	r4, #66	; 0x42
    95b4:	moveq	r4, #49	; 0x31
    95b8:	b	907c <gen_linktype.part.7+0x43c>
    95bc:	movw	r3, #32923	; 0x809b
    95c0:	cmp	r0, r3
    95c4:	beq	9708 <gen_linktype.part.7+0xac8>
    95c8:	movw	r3, #33011	; 0x80f3
    95cc:	cmp	r0, r3
    95d0:	beq	9708 <gen_linktype.part.7+0xac8>
    95d4:	cmp	r0, #254	; 0xfe
    95d8:	beq	9760 <gen_linktype.part.7+0xb20>
    95dc:	movw	r3, #1500	; 0x5dc
    95e0:	cmp	r4, r3
    95e4:	bgt	9810 <gen_linktype.part.7+0xbd0>
    95e8:	mov	r0, r6
    95ec:	mov	r2, #4
    95f0:	mov	r1, #8
    95f4:	bl	5ad8 <gen_cmp.constprop.20>
    95f8:	ldr	r3, [pc, #684]	; 98ac <gen_linktype.part.7+0xc6c>
    95fc:	mov	r6, r0
    9600:	mov	r2, r4
    9604:	mov	r1, #16
    9608:	add	r3, pc, r3
    960c:	ldr	r0, [r3, #796]	; 0x31c
    9610:	bl	5ad8 <gen_cmp.constprop.20>
    9614:	mov	r5, r0
    9618:	mov	r1, r0
    961c:	mov	r0, r6
    9620:	bl	7884 <sf_gen_and>
    9624:	b	90d4 <gen_linktype.part.7+0x494>
    9628:	movw	r3, #32923	; 0x809b
    962c:	cmp	r0, r3
    9630:	moveq	r4, #41	; 0x29
    9634:	beq	9350 <gen_linktype.part.7+0x710>
    9638:	movw	r3, #34525	; 0x86dd
    963c:	cmp	r4, r3
    9640:	moveq	r4, #87	; 0x57
    9644:	beq	9350 <gen_linktype.part.7+0x710>
    9648:	movw	r3, #24579	; 0x6003
    964c:	cmp	r4, r3
    9650:	moveq	r4, #39	; 0x27
    9654:	b	9350 <gen_linktype.part.7+0x710>
    9658:	ldr	r0, [r3, #896]	; 0x380
    965c:	cmn	r0, #1
    9660:	beq	9844 <gen_linktype.part.7+0xc04>
    9664:	mov	ip, #2
    9668:	mov	r3, #16
    966c:	mov	r1, r3
    9670:	stm	sp, {r2, ip}
    9674:	mov	r2, #15
    9678:	bl	5e64 <gen_ncmp.constprop.16>
    967c:	mov	r6, r0
    9680:	b	9470 <gen_linktype.part.7+0x830>
    9684:	mov	r2, #33	; 0x21
    9688:	mov	r1, #8
    968c:	mov	r0, r5
    9690:	bl	5ad8 <gen_cmp.constprop.20>
    9694:	mov	r6, r0
    9698:	mov	r2, #45	; 0x2d
    969c:	mov	r1, #8
    96a0:	mov	r0, r5
    96a4:	bl	5ad8 <gen_cmp.constprop.20>
    96a8:	mov	r4, r0
    96ac:	mov	r1, r0
    96b0:	mov	r0, r6
    96b4:	bl	823c <sf_gen_or>
    96b8:	mov	r0, r5
    96bc:	mov	r2, #47	; 0x2f
    96c0:	mov	r1, #8
    96c4:	bl	5ad8 <gen_cmp.constprop.20>
    96c8:	mov	r5, r0
    96cc:	mov	r1, r0
    96d0:	mov	r0, r4
    96d4:	bl	823c <sf_gen_or>
    96d8:	b	90d4 <gen_linktype.part.7+0x494>
    96dc:	mov	r2, #33554432	; 0x2000000
    96e0:	mov	r0, #2
    96e4:	b	9198 <gen_linktype.part.7+0x558>
    96e8:	ldr	r3, [pc, #448]	; 98b0 <gen_linktype.part.7+0xc70>
    96ec:	mov	r2, #2
    96f0:	mov	r1, #16
    96f4:	add	r3, pc, r3
    96f8:	ldr	r0, [r3, #952]	; 0x3b8
    96fc:	b	9090 <gen_linktype.part.7+0x450>
    9700:	mov	ip, #64	; 0x40
    9704:	b	91f4 <gen_linktype.part.7+0x5b4>
    9708:	mov	r2, #4
    970c:	mov	r1, #8
    9710:	mov	r0, r6
    9714:	bl	5ad8 <gen_cmp.constprop.20>
    9718:	movw	r3, #32923	; 0x809b
    971c:	mov	r7, r0
    9720:	cmp	r4, r3
    9724:	beq	9824 <gen_linktype.part.7+0xbe4>
    9728:	movw	r1, #33011	; 0x80f3
    972c:	mov	r0, #0
    9730:	bl	2a58 <gen_snap>
    9734:	mov	r5, r0
    9738:	mov	r0, r7
    973c:	mov	r1, r5
    9740:	bl	7884 <sf_gen_and>
    9744:	mov	r2, r4
    9748:	mov	r0, r6
    974c:	mov	r1, #8
    9750:	bl	5ad8 <gen_cmp.constprop.20>
    9754:	mov	r1, r5
    9758:	bl	823c <sf_gen_or>
    975c:	b	90d4 <gen_linktype.part.7+0x494>
    9760:	mov	r0, r6
    9764:	mov	r2, #4
    9768:	mov	r1, #8
    976c:	bl	5ad8 <gen_cmp.constprop.20>
    9770:	mov	r6, r0
    9774:	orr	r2, r4, r4, lsl #8
    9778:	mov	r1, #8
    977c:	mov	r0, #0
    9780:	bl	5c18 <gen_cmp.constprop.18>
    9784:	mov	r5, r0
    9788:	mov	r1, r0
    978c:	mov	r0, r6
    9790:	bl	7884 <sf_gen_and>
    9794:	b	90d4 <gen_linktype.part.7+0x494>
    9798:	movw	r2, #910	; 0x38e
    979c:	mov	r1, #8
    97a0:	mov	r0, #2
    97a4:	b	9090 <gen_linktype.part.7+0x450>
    97a8:	mov	r2, #972	; 0x3cc
    97ac:	mov	r1, #8
    97b0:	mov	r0, #2
    97b4:	b	9090 <gen_linktype.part.7+0x450>
    97b8:	ldr	r3, [pc, #244]	; 98b4 <gen_linktype.part.7+0xc74>
    97bc:	mov	r2, #221	; 0xdd
    97c0:	mov	r1, #16
    97c4:	add	r3, pc, r3
    97c8:	ldr	r0, [r3, #952]	; 0x3b8
    97cc:	b	9090 <gen_linktype.part.7+0x450>
    97d0:	ldr	r3, [pc, #224]	; 98b8 <gen_linktype.part.7+0xc78>
    97d4:	mov	r2, #212	; 0xd4
    97d8:	mov	r1, #16
    97dc:	add	r3, pc, r3
    97e0:	ldr	r4, [r3, #952]	; 0x3b8
    97e4:	mov	r0, r4
    97e8:	bl	5ad8 <gen_cmp.constprop.20>
    97ec:	mov	r6, r0
    97f0:	mov	r2, #240	; 0xf0
    97f4:	b	9260 <gen_linktype.part.7+0x620>
    97f8:	ldr	r3, [pc, #188]	; 98bc <gen_linktype.part.7+0xc7c>
    97fc:	mov	r2, #214	; 0xd6
    9800:	mov	r1, #16
    9804:	add	r3, pc, r3
    9808:	ldr	r0, [r3, #952]	; 0x3b8
    980c:	b	9090 <gen_linktype.part.7+0x450>
    9810:	mov	r2, r4
    9814:	mov	r0, r6
    9818:	b	9358 <gen_linktype.part.7+0x718>
    981c:	mov	r4, #37	; 0x25
    9820:	b	907c <gen_linktype.part.7+0x43c>
    9824:	mov	r0, #7
    9828:	movt	r0, #8
    982c:	mov	r1, r4
    9830:	bl	2a58 <gen_snap>
    9834:	mov	r5, r0
    9838:	b	9738 <gen_linktype.part.7+0xaf8>
    983c:	mov	r4, #37	; 0x25
    9840:	b	9350 <gen_linktype.part.7+0x710>
    9844:	bl	ebc <abort@plt>
    9848:	.word	0x00035708
    984c:	.word	0x000352d8
    9850:	.word	0x00035270
    9854:	.word	0x00035190
    9858:	.word	0x00035118
    985c:	.word	0x0003505c
    9860:	.word	0x00035048
    9864:	.word	0x00034ff8
    9868:	.word	0x00034ed0
    986c:	.word	0x00017008
    9870:	.word	0x00016f38
    9874:	.word	0x00017090
    9878:	.word	0x0001704c
    987c:	.word	0x00017008
    9880:	.word	0x000170cc
    9884:	.word	0x00017090
    9888:	.word	0x000170e4
    988c:	.word	0x00016f14
    9890:	.word	0x00016e44
    9894:	.word	0x00016e68
    9898:	.word	0x00016e90
    989c:	.word	0x00016f14
    98a0:	.word	0x00016dd0
    98a4:	.word	0x00016f2c
    98a8:	.word	0x00034dd4
    98ac:	.word	0x00034d58
    98b0:	.word	0x00034c6c
    98b4:	.word	0x00034b9c
    98b8:	.word	0x00034b84
    98bc:	.word	0x00034b5c

000098c0 <gen_linktype>:
    98c0:	ldr	r3, [pc, #884]	; 9c3c <gen_linktype+0x37c>
    98c4:	strd	r4, [sp, #-16]!
    98c8:	mov	r5, r0
    98cc:	str	r6, [sp, #8]
    98d0:	str	lr, [sp, #12]
    98d4:	add	r3, pc, r3
    98d8:	ldr	r3, [r3, #4]
    98dc:	cmp	r3, #0
    98e0:	beq	9b54 <gen_linktype+0x294>
    98e4:	cmp	r0, #87	; 0x57
    98e8:	beq	9a78 <gen_linktype+0x1b8>
    98ec:	ble	9b7c <gen_linktype+0x2bc>
    98f0:	cmp	r0, #2048	; 0x800
    98f4:	bne	9a6c <gen_linktype+0x1ac>
    98f8:	ldr	r3, [pc, #832]	; 9c40 <gen_linktype+0x380>
    98fc:	mov	r1, #16
    9900:	add	r3, pc, r3
    9904:	ldr	r6, [r3, #872]	; 0x368
    9908:	sub	r0, r6, #2
    990c:	bl	2588 <gen_load_macplrel>
    9910:	mov	r4, r0
    9914:	bl	22d0 <newchunk.constprop.25>
    9918:	mov	r1, #84	; 0x54
    991c:	mov	r3, #1
    9920:	mov	r2, r4
    9924:	str	r1, [r0]
    9928:	str	r3, [r0, #12]
    992c:	b	9934 <gen_linktype+0x74>
    9930:	mov	r2, r3
    9934:	ldr	r3, [r2, #16]
    9938:	cmp	r3, #0
    993c:	bne	9930 <gen_linktype+0x70>
    9940:	str	r0, [r2, #16]
    9944:	bl	24d8 <newchunk.constprop.26>
    9948:	mov	r5, r0
    994c:	mov	r2, #21
    9950:	mov	r3, #1
    9954:	mov	r1, #16
    9958:	mov	r0, r6
    995c:	str	r4, [r5, #4]
    9960:	str	r2, [r5, #8]
    9964:	str	r3, [r5, #20]
    9968:	str	r5, [r5, #96]	; 0x60
    996c:	bl	2588 <gen_load_macplrel>
    9970:	mov	r6, r0
    9974:	bl	22d0 <newchunk.constprop.25>
    9978:	mov	r1, #84	; 0x54
    997c:	mov	r3, #240	; 0xf0
    9980:	mov	r2, r6
    9984:	str	r1, [r0]
    9988:	str	r3, [r0, #12]
    998c:	b	9994 <gen_linktype+0xd4>
    9990:	mov	r2, r3
    9994:	ldr	r3, [r2, #16]
    9998:	cmp	r3, #0
    999c:	bne	9990 <gen_linktype+0xd0>
    99a0:	str	r0, [r2, #16]
    99a4:	bl	24d8 <newchunk.constprop.26>
    99a8:	mov	r4, r0
    99ac:	mov	r1, #21
    99b0:	str	r6, [r0, #4]
    99b4:	mov	r2, #64	; 0x40
    99b8:	mov	r3, r5
    99bc:	str	r1, [r0, #8]
    99c0:	str	r2, [r0, #20]
    99c4:	str	r0, [r4, #96]	; 0x60
    99c8:	b	99e0 <gen_linktype+0x120>
    99cc:	ldr	r2, [r3, #60]	; 0x3c
    99d0:	str	r4, [r3, #60]	; 0x3c
    99d4:	cmp	r2, #0
    99d8:	beq	99fc <gen_linktype+0x13c>
    99dc:	mov	r3, r2
    99e0:	ldr	r2, [r3, #44]	; 0x2c
    99e4:	cmp	r2, #0
    99e8:	beq	99cc <gen_linktype+0x10c>
    99ec:	ldr	r2, [r3, #84]	; 0x54
    99f0:	str	r4, [r3, #84]	; 0x54
    99f4:	cmp	r2, #0
    99f8:	bne	99dc <gen_linktype+0x11c>
    99fc:	ldr	r2, [r5, #44]	; 0x2c
    9a00:	mov	r3, r4
    9a04:	clz	r2, r2
    9a08:	lsr	r2, r2, #5
    9a0c:	str	r2, [r5, #44]	; 0x2c
    9a10:	ldr	r2, [r4, #44]	; 0x2c
    9a14:	clz	r2, r2
    9a18:	lsr	r2, r2, #5
    9a1c:	str	r2, [r4, #44]	; 0x2c
    9a20:	ldr	r2, [r3, #44]	; 0x2c
    9a24:	cmp	r2, #0
    9a28:	addeq	r2, r3, #60	; 0x3c
    9a2c:	addne	r2, r3, #84	; 0x54
    9a30:	ldr	r3, [r2]
    9a34:	cmp	r3, #0
    9a38:	bne	9a20 <gen_linktype+0x160>
    9a3c:	str	r5, [r2]
    9a40:	ldr	r3, [r4, #44]	; 0x2c
    9a44:	clz	r3, r3
    9a48:	lsr	r3, r3, #5
    9a4c:	str	r3, [r4, #44]	; 0x2c
    9a50:	ldr	r3, [r5, #96]	; 0x60
    9a54:	str	r3, [r4, #96]	; 0x60
    9a58:	mov	r0, r4
    9a5c:	ldrd	r4, [sp]
    9a60:	ldr	r6, [sp, #8]
    9a64:	add	sp, sp, #12
    9a68:	pop	{pc}		; (ldr pc, [sp], #4)
    9a6c:	movw	r3, #34525	; 0x86dd
    9a70:	cmp	r0, r3
    9a74:	bne	9b84 <gen_linktype+0x2c4>
    9a78:	ldr	r3, [pc, #452]	; 9c44 <gen_linktype+0x384>
    9a7c:	mov	r1, #16
    9a80:	add	r3, pc, r3
    9a84:	ldr	r6, [r3, #872]	; 0x368
    9a88:	sub	r0, r6, #2
    9a8c:	bl	2588 <gen_load_macplrel>
    9a90:	mov	r4, r0
    9a94:	bl	22d0 <newchunk.constprop.25>
    9a98:	mov	r1, #84	; 0x54
    9a9c:	mov	r3, #1
    9aa0:	mov	r2, r4
    9aa4:	str	r1, [r0]
    9aa8:	str	r3, [r0, #12]
    9aac:	b	9ab4 <gen_linktype+0x1f4>
    9ab0:	mov	r2, r3
    9ab4:	ldr	r3, [r2, #16]
    9ab8:	cmp	r3, #0
    9abc:	bne	9ab0 <gen_linktype+0x1f0>
    9ac0:	str	r0, [r2, #16]
    9ac4:	bl	24d8 <newchunk.constprop.26>
    9ac8:	mov	r5, r0
    9acc:	mov	r2, #21
    9ad0:	mov	r3, #1
    9ad4:	mov	r1, #16
    9ad8:	mov	r0, r6
    9adc:	str	r4, [r5, #4]
    9ae0:	str	r2, [r5, #8]
    9ae4:	str	r3, [r5, #20]
    9ae8:	str	r5, [r5, #96]	; 0x60
    9aec:	bl	2588 <gen_load_macplrel>
    9af0:	mov	r6, r0
    9af4:	bl	22d0 <newchunk.constprop.25>
    9af8:	mov	r1, #84	; 0x54
    9afc:	mov	r3, #240	; 0xf0
    9b00:	mov	r2, r6
    9b04:	str	r1, [r0]
    9b08:	str	r3, [r0, #12]
    9b0c:	b	9b14 <gen_linktype+0x254>
    9b10:	mov	r2, r3
    9b14:	ldr	r3, [r2, #16]
    9b18:	cmp	r3, #0
    9b1c:	bne	9b10 <gen_linktype+0x250>
    9b20:	str	r0, [r2, #16]
    9b24:	bl	24d8 <newchunk.constprop.26>
    9b28:	mov	r4, r0
    9b2c:	mov	r2, #21
    9b30:	mov	r3, #96	; 0x60
    9b34:	mov	r0, r5
    9b38:	mov	r1, r4
    9b3c:	str	r6, [r4, #4]
    9b40:	str	r2, [r4, #8]
    9b44:	str	r3, [r4, #20]
    9b48:	str	r4, [r4, #96]	; 0x60
    9b4c:	bl	7884 <sf_gen_and>
    9b50:	b	9a58 <gen_linktype+0x198>
    9b54:	ldr	r3, [pc, #236]	; 9c48 <gen_linktype+0x388>
    9b58:	add	r3, pc, r3
    9b5c:	ldr	r3, [r3, #928]	; 0x3a0
    9b60:	cmp	r3, #0
    9b64:	bne	9b90 <gen_linktype+0x2d0>
    9b68:	ldrd	r4, [sp]
    9b6c:	ldr	r6, [sp, #8]
    9b70:	ldr	lr, [sp, #12]
    9b74:	add	sp, sp, #16
    9b78:	b	8c40 <gen_linktype.part.7>
    9b7c:	cmp	r0, #33	; 0x21
    9b80:	beq	98f8 <gen_linktype+0x38>
    9b84:	ldr	r0, [pc, #192]	; 9c4c <gen_linktype+0x38c>
    9b88:	add	r0, pc, r0
    9b8c:	bl	2130 <sf_bpf_error>
    9b90:	cmp	r0, #1536	; 0x600
    9b94:	beq	9c34 <gen_linktype+0x374>
    9b98:	ble	9c04 <gen_linktype+0x344>
    9b9c:	movw	r3, #24579	; 0x6003
    9ba0:	cmp	r0, r3
    9ba4:	moveq	r5, #39	; 0x27
    9ba8:	beq	9bcc <gen_linktype+0x30c>
    9bac:	ble	9c28 <gen_linktype+0x368>
    9bb0:	movw	r3, #32923	; 0x809b
    9bb4:	cmp	r5, r3
    9bb8:	moveq	r5, #41	; 0x29
    9bbc:	beq	9bcc <gen_linktype+0x30c>
    9bc0:	movw	r3, #34525	; 0x86dd
    9bc4:	cmp	r5, r3
    9bc8:	moveq	r5, #87	; 0x57
    9bcc:	ldr	r3, [pc, #124]	; 9c50 <gen_linktype+0x390>
    9bd0:	mov	r1, #8
    9bd4:	add	r3, pc, r3
    9bd8:	ldr	r0, [r3, #952]	; 0x3b8
    9bdc:	bl	2588 <gen_load_macplrel>
    9be0:	mov	r6, r0
    9be4:	bl	24d8 <newchunk.constprop.26>
    9be8:	mov	r4, r0
    9bec:	mov	r3, #21
    9bf0:	str	r6, [r0, #4]
    9bf4:	str	r3, [r0, #8]
    9bf8:	str	r5, [r0, #20]
    9bfc:	str	r0, [r4, #96]	; 0x60
    9c00:	b	9a58 <gen_linktype+0x198>
    9c04:	cmp	r0, #224	; 0xe0
    9c08:	moveq	r5, #43	; 0x2b
    9c0c:	beq	9bcc <gen_linktype+0x30c>
    9c10:	cmp	r5, #254	; 0xfe
    9c14:	moveq	r5, #35	; 0x23
    9c18:	beq	9bcc <gen_linktype+0x30c>
    9c1c:	cmp	r5, #66	; 0x42
    9c20:	moveq	r5, #49	; 0x31
    9c24:	b	9bcc <gen_linktype+0x30c>
    9c28:	cmp	r5, #2048	; 0x800
    9c2c:	moveq	r5, #33	; 0x21
    9c30:	b	9bcc <gen_linktype+0x30c>
    9c34:	mov	r5, #37	; 0x25
    9c38:	b	9bcc <gen_linktype+0x30c>
    9c3c:	.word	0x0003499c
    9c40:	.word	0x00034a60
    9c44:	.word	0x000348e0
    9c48:	.word	0x00034808
    9c4c:	.word	0x00016a8c
    9c50:	.word	0x0003478c

00009c54 <gen_proto>:
    9c54:	cmp	r2, #0
    9c58:	strd	r4, [sp, #-32]!	; 0xffffffe0
    9c5c:	strd	r6, [sp, #8]
    9c60:	strd	r8, [sp, #16]
    9c64:	str	sl, [sp, #24]
    9c68:	str	lr, [sp, #28]
    9c6c:	bne	a054 <gen_proto+0x400>
    9c70:	mov	r5, r0
    9c74:	cmp	r1, #40	; 0x28
    9c78:	addls	pc, pc, r1, lsl #2
    9c7c:	b	a06c <gen_proto+0x418>
    9c80:	b	9d98 <gen_proto+0x144>
    9c84:	b	9dcc <gen_proto+0x178>
    9c88:	b	9de8 <gen_proto+0x194>
    9c8c:	b	9f88 <gen_proto+0x334>
    9c90:	b	9f7c <gen_proto+0x328>
    9c94:	b	9f70 <gen_proto+0x31c>
    9c98:	b	a048 <gen_proto+0x3f4>
    9c9c:	b	a03c <gen_proto+0x3e8>
    9ca0:	b	a030 <gen_proto+0x3dc>
    9ca4:	b	a024 <gen_proto+0x3d0>
    9ca8:	b	a018 <gen_proto+0x3c4>
    9cac:	b	9fc4 <gen_proto+0x370>
    9cb0:	b	9fb8 <gen_proto+0x364>
    9cb4:	b	9fac <gen_proto+0x358>
    9cb8:	b	9fa0 <gen_proto+0x34c>
    9cbc:	b	9fe8 <gen_proto+0x394>
    9cc0:	b	9fdc <gen_proto+0x388>
    9cc4:	b	9e0c <gen_proto+0x1b8>
    9cc8:	b	9fd0 <gen_proto+0x37c>
    9ccc:	b	9f4c <gen_proto+0x2f8>
    9cd0:	b	9f4c <gen_proto+0x2f8>
    9cd4:	b	9f94 <gen_proto+0x340>
    9cd8:	b	9f64 <gen_proto+0x310>
    9cdc:	b	a06c <gen_proto+0x418>
    9ce0:	b	9e30 <gen_proto+0x1dc>
    9ce4:	b	a06c <gen_proto+0x418>
    9ce8:	b	9d24 <gen_proto+0xd0>
    9cec:	b	a06c <gen_proto+0x418>
    9cf0:	b	a00c <gen_proto+0x3b8>
    9cf4:	b	a000 <gen_proto+0x3ac>
    9cf8:	b	9ff4 <gen_proto+0x3a0>
    9cfc:	b	a06c <gen_proto+0x418>
    9d00:	b	a06c <gen_proto+0x418>
    9d04:	b	a06c <gen_proto+0x418>
    9d08:	b	a06c <gen_proto+0x418>
    9d0c:	b	a06c <gen_proto+0x418>
    9d10:	b	a06c <gen_proto+0x418>
    9d14:	b	a06c <gen_proto+0x418>
    9d18:	b	a06c <gen_proto+0x418>
    9d1c:	b	a06c <gen_proto+0x418>
    9d20:	b	9f58 <gen_proto+0x304>
    9d24:	mov	r1, #24
    9d28:	mov	r2, #0
    9d2c:	mov	r0, #131	; 0x83
    9d30:	bl	9c54 <gen_proto>
    9d34:	ldr	r3, [pc, #820]	; a070 <gen_proto+0x41c>
    9d38:	mov	r7, r0
    9d3c:	mov	r1, #16
    9d40:	add	r3, pc, r3
    9d44:	ldr	r0, [r3, #956]	; 0x3bc
    9d48:	add	r0, r0, #4
    9d4c:	bl	2588 <gen_load_macplrel>
    9d50:	mov	r6, r0
    9d54:	bl	24d8 <newchunk.constprop.26>
    9d58:	mov	r4, r0
    9d5c:	mov	r3, #21
    9d60:	mov	r0, r7
    9d64:	mov	r1, r4
    9d68:	str	r6, [r4, #4]
    9d6c:	str	r3, [r4, #8]
    9d70:	str	r5, [r4, #20]
    9d74:	str	r4, [r4, #96]	; 0x60
    9d78:	bl	7884 <sf_gen_and>
    9d7c:	mov	r0, r4
    9d80:	ldrd	r4, [sp]
    9d84:	ldrd	r6, [sp, #8]
    9d88:	ldrd	r8, [sp, #16]
    9d8c:	ldr	sl, [sp, #24]
    9d90:	add	sp, sp, #28
    9d94:	pop	{pc}		; (ldr pc, [sp], #4)
    9d98:	mov	r2, #0
    9d9c:	mov	r1, #2
    9da0:	bl	9c54 <gen_proto>
    9da4:	mov	r6, r0
    9da8:	mov	r2, #0
    9dac:	mov	r0, r5
    9db0:	mov	r1, #17
    9db4:	bl	9c54 <gen_proto>
    9db8:	mov	r4, r0
    9dbc:	mov	r1, r0
    9dc0:	mov	r0, r6
    9dc4:	bl	823c <sf_gen_or>
    9dc8:	b	9d7c <gen_proto+0x128>
    9dcc:	ldrd	r4, [sp]
    9dd0:	ldrd	r6, [sp, #8]
    9dd4:	ldrd	r8, [sp, #16]
    9dd8:	ldr	sl, [sp, #24]
    9ddc:	ldr	lr, [sp, #28]
    9de0:	add	sp, sp, #32
    9de4:	b	98c0 <gen_linktype>
    9de8:	mov	r0, #2048	; 0x800
    9dec:	bl	98c0 <gen_linktype>
    9df0:	ldr	r3, [pc, #636]	; a074 <gen_proto+0x420>
    9df4:	mov	r7, r0
    9df8:	mov	r1, #16
    9dfc:	add	r3, pc, r3
    9e00:	ldr	r0, [r3, #872]	; 0x368
    9e04:	add	r0, r0, #9
    9e08:	b	9d4c <gen_proto+0xf8>
    9e0c:	movw	r0, #34525	; 0x86dd
    9e10:	bl	98c0 <gen_linktype>
    9e14:	ldr	r3, [pc, #604]	; a078 <gen_proto+0x424>
    9e18:	mov	r7, r0
    9e1c:	mov	r1, #16
    9e20:	add	r3, pc, r3
    9e24:	ldr	r0, [r3, #872]	; 0x368
    9e28:	add	r0, r0, #6
    9e2c:	b	9d4c <gen_proto+0xf8>
    9e30:	ldr	r4, [pc, #580]	; a07c <gen_proto+0x428>
    9e34:	add	r4, pc, r4
    9e38:	ldr	r3, [r4, #876]	; 0x36c
    9e3c:	cmp	r3, #104	; 0x68
    9e40:	beq	9f20 <gen_proto+0x2cc>
    9e44:	cmp	r3, #107	; 0x6b
    9e48:	bne	9e74 <gen_proto+0x220>
    9e4c:	orr	r2, r0, #768	; 0x300
    9e50:	mov	r1, #8
    9e54:	ldrd	r4, [sp]
    9e58:	mov	r0, #2
    9e5c:	ldrd	r6, [sp, #8]
    9e60:	ldrd	r8, [sp, #16]
    9e64:	ldr	sl, [sp, #24]
    9e68:	ldr	lr, [sp, #28]
    9e6c:	add	sp, sp, #32
    9e70:	b	5ad8 <gen_cmp.constprop.20>
    9e74:	mov	r0, #254	; 0xfe
    9e78:	bl	98c0 <gen_linktype>
    9e7c:	mov	r8, r0
    9e80:	ldr	r0, [r4, #956]	; 0x3bc
    9e84:	mov	r1, #16
    9e88:	bl	2588 <gen_load_macplrel>
    9e8c:	ldr	r6, [r4, #656]	; 0x290
    9e90:	add	r3, r4, #660	; 0x294
    9e94:	mov	r9, r0
    9e98:	lsl	r7, r6, #3
    9e9c:	add	r2, r4, r7
    9ea0:	add	r7, r3, r7
    9ea4:	ldr	r2, [r2, #660]	; 0x294
    9ea8:	cmp	r2, #207	; 0xcf
    9eac:	bhi	9f3c <gen_proto+0x2e8>
    9eb0:	add	r3, r6, #1
    9eb4:	add	sl, r7, #8
    9eb8:	cmp	r3, #15
    9ebc:	str	r3, [r4, #656]	; 0x290
    9ec0:	bgt	a060 <gen_proto+0x40c>
    9ec4:	mov	r6, #1024	; 0x400
    9ec8:	mov	r1, #1
    9ecc:	lsl	r6, r6, r3
    9ed0:	mov	r0, r6
    9ed4:	bl	ce8 <calloc@plt>
    9ed8:	cmp	r0, #0
    9edc:	str	r0, [r7, #12]
    9ee0:	beq	a060 <gen_proto+0x40c>
    9ee4:	cmp	r6, #207	; 0xcf
    9ee8:	str	r6, [r7, #8]
    9eec:	bls	a060 <gen_proto+0x40c>
    9ef0:	sub	r6, r6, #208	; 0xd0
    9ef4:	mov	r3, #21
    9ef8:	add	r4, r0, r6
    9efc:	mov	r0, r8
    9f00:	mov	r1, r4
    9f04:	str	r6, [sl]
    9f08:	str	r9, [r4, #4]
    9f0c:	str	r3, [r4, #8]
    9f10:	str	r5, [r4, #20]
    9f14:	str	r4, [r4, #96]	; 0x60
    9f18:	bl	7884 <sf_gen_and>
    9f1c:	b	9d7c <gen_proto+0x128>
    9f20:	movw	r0, #65278	; 0xfefe
    9f24:	bl	98c0 <gen_linktype>
    9f28:	mov	r8, r0
    9f2c:	ldr	r0, [r4, #956]	; 0x3bc
    9f30:	mov	r1, #16
    9f34:	add	r0, r0, #1
    9f38:	b	9e88 <gen_proto+0x234>
    9f3c:	mov	sl, r7
    9f40:	ldr	r6, [r3, r6, lsl #3]
    9f44:	ldr	r0, [r7, #4]
    9f48:	b	9ef0 <gen_proto+0x29c>
    9f4c:	ldr	r0, [pc, #300]	; a080 <gen_proto+0x42c>
    9f50:	add	r0, pc, r0
    9f54:	bl	2130 <sf_bpf_error>
    9f58:	ldr	r0, [pc, #292]	; a084 <gen_proto+0x430>
    9f5c:	add	r0, pc, r0
    9f60:	bl	2130 <sf_bpf_error>
    9f64:	ldr	r0, [pc, #284]	; a088 <gen_proto+0x434>
    9f68:	add	r0, pc, r0
    9f6c:	bl	2130 <sf_bpf_error>
    9f70:	ldr	r0, [pc, #276]	; a08c <gen_proto+0x438>
    9f74:	add	r0, pc, r0
    9f78:	bl	2130 <sf_bpf_error>
    9f7c:	ldr	r0, [pc, #268]	; a090 <gen_proto+0x43c>
    9f80:	add	r0, pc, r0
    9f84:	bl	2130 <sf_bpf_error>
    9f88:	ldr	r0, [pc, #260]	; a094 <gen_proto+0x440>
    9f8c:	add	r0, pc, r0
    9f90:	bl	2130 <sf_bpf_error>
    9f94:	ldr	r0, [pc, #252]	; a098 <gen_proto+0x444>
    9f98:	add	r0, pc, r0
    9f9c:	bl	2130 <sf_bpf_error>
    9fa0:	ldr	r0, [pc, #244]	; a09c <gen_proto+0x448>
    9fa4:	add	r0, pc, r0
    9fa8:	bl	2130 <sf_bpf_error>
    9fac:	ldr	r0, [pc, #236]	; a0a0 <gen_proto+0x44c>
    9fb0:	add	r0, pc, r0
    9fb4:	bl	2130 <sf_bpf_error>
    9fb8:	ldr	r0, [pc, #228]	; a0a4 <gen_proto+0x450>
    9fbc:	add	r0, pc, r0
    9fc0:	bl	2130 <sf_bpf_error>
    9fc4:	ldr	r0, [pc, #220]	; a0a8 <gen_proto+0x454>
    9fc8:	add	r0, pc, r0
    9fcc:	bl	2130 <sf_bpf_error>
    9fd0:	ldr	r0, [pc, #212]	; a0ac <gen_proto+0x458>
    9fd4:	add	r0, pc, r0
    9fd8:	bl	2130 <sf_bpf_error>
    9fdc:	ldr	r0, [pc, #204]	; a0b0 <gen_proto+0x45c>
    9fe0:	add	r0, pc, r0
    9fe4:	bl	2130 <sf_bpf_error>
    9fe8:	ldr	r0, [pc, #196]	; a0b4 <gen_proto+0x460>
    9fec:	add	r0, pc, r0
    9ff0:	bl	2130 <sf_bpf_error>
    9ff4:	ldr	r0, [pc, #188]	; a0b8 <gen_proto+0x464>
    9ff8:	add	r0, pc, r0
    9ffc:	bl	2130 <sf_bpf_error>
    a000:	ldr	r0, [pc, #180]	; a0bc <gen_proto+0x468>
    a004:	add	r0, pc, r0
    a008:	bl	2130 <sf_bpf_error>
    a00c:	ldr	r0, [pc, #172]	; a0c0 <gen_proto+0x46c>
    a010:	add	r0, pc, r0
    a014:	bl	2130 <sf_bpf_error>
    a018:	ldr	r0, [pc, #164]	; a0c4 <gen_proto+0x470>
    a01c:	add	r0, pc, r0
    a020:	bl	2130 <sf_bpf_error>
    a024:	ldr	r0, [pc, #156]	; a0c8 <gen_proto+0x474>
    a028:	add	r0, pc, r0
    a02c:	bl	2130 <sf_bpf_error>
    a030:	ldr	r0, [pc, #148]	; a0cc <gen_proto+0x478>
    a034:	add	r0, pc, r0
    a038:	bl	2130 <sf_bpf_error>
    a03c:	ldr	r0, [pc, #140]	; a0d0 <gen_proto+0x47c>
    a040:	add	r0, pc, r0
    a044:	bl	2130 <sf_bpf_error>
    a048:	ldr	r0, [pc, #132]	; a0d4 <gen_proto+0x480>
    a04c:	add	r0, pc, r0
    a050:	bl	2130 <sf_bpf_error>
    a054:	ldr	r0, [pc, #124]	; a0d8 <gen_proto+0x484>
    a058:	add	r0, pc, r0
    a05c:	bl	2130 <sf_bpf_error>
    a060:	ldr	r0, [pc, #116]	; a0dc <gen_proto+0x488>
    a064:	add	r0, pc, r0
    a068:	bl	2130 <sf_bpf_error>
    a06c:	bl	ebc <abort@plt>
    a070:	.word	0x00034620
    a074:	.word	0x00034564
    a078:	.word	0x00034540
    a07c:	.word	0x0003452c
    a080:	.word	0x00016934
    a084:	.word	0x00016988
    a088:	.word	0x000168ec
    a08c:	.word	0x00016868
    a090:	.word	0x00016700
    a094:	.word	0x000166c8
    a098:	.word	0x000168a4
    a09c:	.word	0x00016758
    a0a0:	.word	0x00016778
    a0a4:	.word	0x00016718
    a0a8:	.word	0x000166e4
    a0ac:	.word	0x00016898
    a0b0:	.word	0x000167a0
    a0b4:	.word	0x00016768
    a0b8:	.word	0x000168d0
    a0bc:	.word	0x000168ac
    a0c0:	.word	0x00016888
    a0c4:	.word	0x00016808
    a0c8:	.word	0x000167e4
    a0cc:	.word	0x000167c0
    a0d0:	.word	0x0001676c
    a0d4:	.word	0x00016778
    a0d8:	.word	0x000165dc
    a0dc:	.word	0x00016188

0000a0e0 <gen_hostop>:
    a0e0:	strd	r4, [sp, #-28]!	; 0xffffffe4
    a0e4:	mov	r5, r3
    a0e8:	strd	r6, [sp, #8]
    a0ec:	mov	r7, r0
    a0f0:	mov	r6, r1
    a0f4:	strd	r8, [sp, #16]
    a0f8:	str	lr, [sp, #24]
    a0fc:	sub	sp, sp, #12
    a100:	ldr	r4, [sp, #40]	; 0x28
    a104:	ldr	r8, [sp, #44]	; 0x2c
    a108:	cmp	r2, #4
    a10c:	addls	pc, pc, r2, lsl #2
    a110:	b	a2d4 <gen_hostop+0x1f4>
    a114:	b	a244 <gen_hostop+0x164>
    a118:	b	a12c <gen_hostop+0x4c>
    a11c:	b	a128 <gen_hostop+0x48>
    a120:	b	a244 <gen_hostop+0x164>
    a124:	b	a298 <gen_hostop+0x1b8>
    a128:	mov	r4, r8
    a12c:	mov	r0, r5
    a130:	bl	98c0 <gen_linktype>
    a134:	ldr	r3, [pc, #412]	; a2d8 <gen_hostop+0x1f8>
    a138:	mov	r5, r0
    a13c:	mov	r1, #0
    a140:	add	r3, pc, r3
    a144:	ldr	r0, [r3, #872]	; 0x368
    a148:	add	r0, r4, r0
    a14c:	bl	2588 <gen_load_macplrel>
    a150:	cmn	r6, #1
    a154:	mov	r8, r0
    a158:	beq	a188 <gen_hostop+0xa8>
    a15c:	bl	22d0 <newchunk.constprop.25>
    a160:	mov	r3, #84	; 0x54
    a164:	mov	r2, r8
    a168:	str	r3, [r0]
    a16c:	str	r6, [r0, #12]
    a170:	b	a178 <gen_hostop+0x98>
    a174:	mov	r2, r3
    a178:	ldr	r3, [r2, #16]
    a17c:	cmp	r3, #0
    a180:	bne	a174 <gen_hostop+0x94>
    a184:	str	r0, [r2, #16]
    a188:	bl	24d8 <newchunk.constprop.26>
    a18c:	mov	r4, r0
    a190:	mov	r3, #21
    a194:	str	r8, [r0, #4]
    a198:	cmp	r5, #0
    a19c:	str	r3, [r0, #8]
    a1a0:	movne	r3, r5
    a1a4:	str	r7, [r0, #20]
    a1a8:	str	r0, [r4, #96]	; 0x60
    a1ac:	bne	a1c8 <gen_hostop+0xe8>
    a1b0:	b	a1e4 <gen_hostop+0x104>
    a1b4:	ldr	r2, [r3, #60]	; 0x3c
    a1b8:	str	r4, [r3, #60]	; 0x3c
    a1bc:	cmp	r2, #0
    a1c0:	beq	a1e4 <gen_hostop+0x104>
    a1c4:	mov	r3, r2
    a1c8:	ldr	r2, [r3, #44]	; 0x2c
    a1cc:	cmp	r2, #0
    a1d0:	beq	a1b4 <gen_hostop+0xd4>
    a1d4:	ldr	r2, [r3, #84]	; 0x54
    a1d8:	str	r4, [r3, #84]	; 0x54
    a1dc:	cmp	r2, #0
    a1e0:	bne	a1c4 <gen_hostop+0xe4>
    a1e4:	ldr	r2, [r5, #44]	; 0x2c
    a1e8:	mov	r3, r4
    a1ec:	clz	r2, r2
    a1f0:	lsr	r2, r2, #5
    a1f4:	str	r2, [r5, #44]	; 0x2c
    a1f8:	ldr	r2, [r4, #44]	; 0x2c
    a1fc:	clz	r2, r2
    a200:	lsr	r2, r2, #5
    a204:	str	r2, [r4, #44]	; 0x2c
    a208:	ldr	r2, [r3, #44]	; 0x2c
    a20c:	cmp	r2, #0
    a210:	addeq	r2, r3, #60	; 0x3c
    a214:	addne	r2, r3, #84	; 0x54
    a218:	ldr	r3, [r2]
    a21c:	cmp	r3, #0
    a220:	bne	a208 <gen_hostop+0x128>
    a224:	str	r5, [r2]
    a228:	ldr	r3, [r4, #44]	; 0x2c
    a22c:	clz	r3, r3
    a230:	lsr	r3, r3, #5
    a234:	str	r3, [r4, #44]	; 0x2c
    a238:	ldr	r3, [r5, #96]	; 0x60
    a23c:	str	r3, [r4, #96]	; 0x60
    a240:	b	a27c <gen_hostop+0x19c>
    a244:	mov	r2, #1
    a248:	stm	sp, {r4, r8}
    a24c:	bl	a0e0 <gen_hostop>
    a250:	mov	r9, r0
    a254:	mov	r1, r6
    a258:	stm	sp, {r4, r8}
    a25c:	mov	r3, r5
    a260:	mov	r0, r7
    a264:	mov	r2, #2
    a268:	bl	a0e0 <gen_hostop>
    a26c:	mov	r4, r0
    a270:	mov	r1, r0
    a274:	mov	r0, r9
    a278:	bl	823c <sf_gen_or>
    a27c:	mov	r0, r4
    a280:	add	sp, sp, #12
    a284:	ldrd	r4, [sp]
    a288:	ldrd	r6, [sp, #8]
    a28c:	ldrd	r8, [sp, #16]
    a290:	add	sp, sp, #24
    a294:	pop	{pc}		; (ldr pc, [sp], #4)
    a298:	mov	r2, #1
    a29c:	stm	sp, {r4, r8}
    a2a0:	bl	a0e0 <gen_hostop>
    a2a4:	mov	r9, r0
    a2a8:	mov	r1, r6
    a2ac:	stm	sp, {r4, r8}
    a2b0:	mov	r3, r5
    a2b4:	mov	r0, r7
    a2b8:	mov	r2, #2
    a2bc:	bl	a0e0 <gen_hostop>
    a2c0:	mov	r4, r0
    a2c4:	mov	r1, r0
    a2c8:	mov	r0, r9
    a2cc:	bl	7884 <sf_gen_and>
    a2d0:	b	a27c <gen_hostop+0x19c>
    a2d4:	bl	ebc <abort@plt>
    a2d8:	.word	0x00034220

0000a2dc <gen_dnhostop>:
    a2dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a2e0:	strd	r6, [sp, #8]
    a2e4:	mov	r6, r0
    a2e8:	strd	r8, [sp, #16]
    a2ec:	strd	sl, [sp, #24]
    a2f0:	str	lr, [sp, #32]
    a2f4:	sub	sp, sp, #12
    a2f8:	cmp	r1, #24
    a2fc:	addls	pc, pc, r1, lsl #2
    a300:	b	a8a0 <gen_dnhostop+0x5c4>
    a304:	b	a39c <gen_dnhostop+0xc0>
    a308:	b	a390 <gen_dnhostop+0xb4>
    a30c:	b	a368 <gen_dnhostop+0x8c>
    a310:	b	a39c <gen_dnhostop+0xc0>
    a314:	b	a3e4 <gen_dnhostop+0x108>
    a318:	b	a8a0 <gen_dnhostop+0x5c4>
    a31c:	b	a8a0 <gen_dnhostop+0x5c4>
    a320:	b	a8a0 <gen_dnhostop+0x5c4>
    a324:	b	a8a0 <gen_dnhostop+0x5c4>
    a328:	b	a8a0 <gen_dnhostop+0x5c4>
    a32c:	b	a8a0 <gen_dnhostop+0x5c4>
    a330:	b	a8a0 <gen_dnhostop+0x5c4>
    a334:	b	a8a0 <gen_dnhostop+0x5c4>
    a338:	b	a8a0 <gen_dnhostop+0x5c4>
    a33c:	b	a8a0 <gen_dnhostop+0x5c4>
    a340:	b	a8a0 <gen_dnhostop+0x5c4>
    a344:	b	a8a0 <gen_dnhostop+0x5c4>
    a348:	b	a8a0 <gen_dnhostop+0x5c4>
    a34c:	b	a8a0 <gen_dnhostop+0x5c4>
    a350:	b	a8a0 <gen_dnhostop+0x5c4>
    a354:	b	a8a0 <gen_dnhostop+0x5c4>
    a358:	b	a8a0 <gen_dnhostop+0x5c4>
    a35c:	b	a8a0 <gen_dnhostop+0x5c4>
    a360:	b	a8a0 <gen_dnhostop+0x5c4>
    a364:	b	a894 <gen_dnhostop+0x5b8>
    a368:	mov	r7, #1
    a36c:	mov	r9, #7
    a370:	ldr	r3, [pc, #1324]	; a8a4 <gen_dnhostop+0x5c8>
    a374:	add	r3, pc, r3
    a378:	ldr	r3, [r3, #4]
    a37c:	cmp	r3, #0
    a380:	beq	a410 <gen_dnhostop+0x134>
    a384:	ldr	r0, [pc, #1308]	; a8a8 <gen_dnhostop+0x5cc>
    a388:	add	r0, pc, r0
    a38c:	bl	2130 <sf_bpf_error>
    a390:	mov	r7, #3
    a394:	mov	r9, #15
    a398:	b	a370 <gen_dnhostop+0x94>
    a39c:	mov	r1, #1
    a3a0:	bl	a2dc <gen_dnhostop>
    a3a4:	mov	r5, r0
    a3a8:	mov	r1, #2
    a3ac:	mov	r0, r6
    a3b0:	bl	a2dc <gen_dnhostop>
    a3b4:	mov	r4, r0
    a3b8:	mov	r1, r0
    a3bc:	mov	r0, r5
    a3c0:	bl	823c <sf_gen_or>
    a3c4:	mov	r0, r4
    a3c8:	add	sp, sp, #12
    a3cc:	ldrd	r4, [sp]
    a3d0:	ldrd	r6, [sp, #8]
    a3d4:	ldrd	r8, [sp, #16]
    a3d8:	ldrd	sl, [sp, #24]
    a3dc:	add	sp, sp, #32
    a3e0:	pop	{pc}		; (ldr pc, [sp], #4)
    a3e4:	mov	r1, #1
    a3e8:	bl	a2dc <gen_dnhostop>
    a3ec:	mov	r5, r0
    a3f0:	mov	r1, #2
    a3f4:	mov	r0, r6
    a3f8:	bl	a2dc <gen_dnhostop>
    a3fc:	mov	r4, r0
    a400:	mov	r1, r0
    a404:	mov	r0, r5
    a408:	bl	7884 <sf_gen_and>
    a40c:	b	a3c4 <gen_dnhostop+0xe8>
    a410:	ldr	r3, [pc, #1172]	; a8ac <gen_dnhostop+0x5d0>
    a414:	add	r3, pc, r3
    a418:	ldr	r2, [r3, #928]	; 0x3a0
    a41c:	cmp	r2, #0
    a420:	bne	a860 <gen_dnhostop+0x584>
    a424:	movw	r0, #24579	; 0x6003
    a428:	bl	8c40 <gen_linktype.part.7>
    a42c:	mov	r5, r0
    a430:	ldr	r3, [pc, #1144]	; a8b0 <gen_dnhostop+0x5d4>
    a434:	mov	r1, #8
    a438:	add	r3, pc, r3
    a43c:	ldr	r4, [r3, #872]	; 0x368
    a440:	add	r8, r4, #2
    a444:	mov	r0, r8
    a448:	bl	2588 <gen_load_macplrel>
    a44c:	mov	fp, r0
    a450:	bl	22d0 <newchunk.constprop.25>
    a454:	mov	r2, #84	; 0x54
    a458:	movw	r3, #65287	; 0xff07
    a45c:	str	r2, [r0]
    a460:	mov	r2, fp
    a464:	str	r3, [r0, #12]
    a468:	b	a470 <gen_dnhostop+0x194>
    a46c:	mov	r2, r3
    a470:	ldr	r3, [r2, #16]
    a474:	cmp	r3, #0
    a478:	bne	a46c <gen_dnhostop+0x190>
    a47c:	str	r0, [r2, #16]
    a480:	mov	sl, #21
    a484:	rev16	r6, r6
    a488:	bl	24d8 <newchunk.constprop.26>
    a48c:	mov	r3, r0
    a490:	movw	r2, #33030	; 0x8106
    a494:	add	r0, r4, #3
    a498:	mov	r1, #8
    a49c:	add	r0, r0, r9
    a4a0:	str	fp, [r3, #4]
    a4a4:	uxth	r6, r6
    a4a8:	str	sl, [r3, #8]
    a4ac:	str	r2, [r3, #20]
    a4b0:	str	r3, [r3, #96]	; 0x60
    a4b4:	str	r3, [sp, #4]
    a4b8:	bl	2588 <gen_load_macplrel>
    a4bc:	mov	fp, r0
    a4c0:	bl	24d8 <newchunk.constprop.26>
    a4c4:	ldr	r3, [sp, #4]
    a4c8:	mov	r4, r0
    a4cc:	mov	r1, r0
    a4d0:	str	fp, [r4, #4]
    a4d4:	str	sl, [r4, #8]
    a4d8:	str	r6, [r4, #20]
    a4dc:	mov	r0, r3
    a4e0:	str	r4, [r4, #96]	; 0x60
    a4e4:	bl	7884 <sf_gen_and>
    a4e8:	mov	r1, #16
    a4ec:	mov	r0, r8
    a4f0:	bl	2588 <gen_load_macplrel>
    a4f4:	mov	fp, r0
    a4f8:	bl	22d0 <newchunk.constprop.25>
    a4fc:	mov	r2, #84	; 0x54
    a500:	mov	r3, #7
    a504:	str	r2, [r0]
    a508:	mov	r2, fp
    a50c:	str	r3, [r0, #12]
    a510:	b	a518 <gen_dnhostop+0x23c>
    a514:	mov	r2, r3
    a518:	ldr	r3, [r2, #16]
    a51c:	cmp	r3, #0
    a520:	bne	a514 <gen_dnhostop+0x238>
    a524:	str	r0, [r2, #16]
    a528:	mov	sl, #21
    a52c:	bl	24d8 <newchunk.constprop.26>
    a530:	mov	r3, r0
    a534:	mov	r2, #6
    a538:	add	r0, r9, r8
    a53c:	mov	r1, #8
    a540:	str	fp, [r3, #4]
    a544:	str	sl, [r3, #8]
    a548:	str	r2, [r3, #20]
    a54c:	str	r3, [r3, #96]	; 0x60
    a550:	str	r3, [sp, #4]
    a554:	bl	2588 <gen_load_macplrel>
    a558:	mov	r9, r0
    a55c:	bl	24d8 <newchunk.constprop.26>
    a560:	ldr	r3, [sp, #4]
    a564:	mov	r8, r0
    a568:	mov	r1, r0
    a56c:	stmib	r8, {r9, sl}
    a570:	str	r6, [r8, #20]
    a574:	str	r8, [r8, #96]	; 0x60
    a578:	mov	r0, r3
    a57c:	bl	7884 <sf_gen_and>
    a580:	ldr	r3, [r8, #44]	; 0x2c
    a584:	mov	r2, r8
    a588:	clz	r3, r3
    a58c:	lsr	r3, r3, #5
    a590:	str	r3, [r8, #44]	; 0x2c
    a594:	ldr	r1, [r4, #96]	; 0x60
    a598:	b	a5b4 <gen_dnhostop+0x2d8>
    a59c:	ldr	r3, [r2, #60]	; 0x3c
    a5a0:	str	r1, [r2, #60]	; 0x3c
    a5a4:	cmp	r3, #0
    a5a8:	beq	a5cc <gen_dnhostop+0x2f0>
    a5ac:	mov	r2, r3
    a5b0:	ldr	r3, [r3, #44]	; 0x2c
    a5b4:	cmp	r3, #0
    a5b8:	beq	a59c <gen_dnhostop+0x2c0>
    a5bc:	ldr	r3, [r2, #84]	; 0x54
    a5c0:	str	r1, [r2, #84]	; 0x54
    a5c4:	cmp	r3, #0
    a5c8:	bne	a5ac <gen_dnhostop+0x2d0>
    a5cc:	ldr	r2, [r8, #44]	; 0x2c
    a5d0:	mov	r3, r4
    a5d4:	clz	r2, r2
    a5d8:	lsr	r2, r2, #5
    a5dc:	str	r2, [r8, #44]	; 0x2c
    a5e0:	ldr	r2, [r3, #44]	; 0x2c
    a5e4:	cmp	r2, #0
    a5e8:	addeq	r2, r3, #60	; 0x3c
    a5ec:	addne	r2, r3, #84	; 0x54
    a5f0:	ldr	r3, [r2]
    a5f4:	cmp	r3, #0
    a5f8:	bne	a5e0 <gen_dnhostop+0x304>
    a5fc:	ldr	r3, [pc, #688]	; a8b4 <gen_dnhostop+0x5d8>
    a600:	mov	r1, #8
    a604:	str	r8, [r2]
    a608:	ldr	r2, [r8, #96]	; 0x60
    a60c:	add	r3, pc, r3
    a610:	ldr	r8, [r3, #872]	; 0x368
    a614:	str	r2, [r4, #96]	; 0x60
    a618:	add	r0, r8, #2
    a61c:	bl	2588 <gen_load_macplrel>
    a620:	mov	r9, r0
    a624:	bl	22d0 <newchunk.constprop.25>
    a628:	mov	r2, #84	; 0x54
    a62c:	movw	r3, #65287	; 0xff07
    a630:	str	r2, [r0]
    a634:	mov	r2, r9
    a638:	str	r3, [r0, #12]
    a63c:	b	a644 <gen_dnhostop+0x368>
    a640:	mov	r2, r3
    a644:	ldr	r3, [r2, #16]
    a648:	cmp	r3, #0
    a64c:	bne	a640 <gen_dnhostop+0x364>
    a650:	str	r0, [r2, #16]
    a654:	mov	sl, #21
    a658:	bl	24d8 <newchunk.constprop.26>
    a65c:	mov	fp, r0
    a660:	movw	r3, #33026	; 0x8102
    a664:	add	r0, r8, #3
    a668:	mov	r1, #8
    a66c:	add	r0, r0, r7
    a670:	stmib	fp, {r9, sl}
    a674:	str	r3, [fp, #20]
    a678:	str	fp, [fp, #96]	; 0x60
    a67c:	bl	2588 <gen_load_macplrel>
    a680:	mov	r9, r0
    a684:	bl	24d8 <newchunk.constprop.26>
    a688:	mov	r8, r0
    a68c:	mov	r0, fp
    a690:	mov	r1, r8
    a694:	stmib	r8, {r9, sl}
    a698:	str	r6, [r8, #20]
    a69c:	str	r8, [r8, #96]	; 0x60
    a6a0:	bl	7884 <sf_gen_and>
    a6a4:	ldr	r3, [r8, #44]	; 0x2c
    a6a8:	mov	r2, r8
    a6ac:	clz	r3, r3
    a6b0:	lsr	r3, r3, #5
    a6b4:	str	r3, [r8, #44]	; 0x2c
    a6b8:	ldr	r1, [r4, #96]	; 0x60
    a6bc:	b	a6d8 <gen_dnhostop+0x3fc>
    a6c0:	ldr	r3, [r2, #60]	; 0x3c
    a6c4:	str	r1, [r2, #60]	; 0x3c
    a6c8:	cmp	r3, #0
    a6cc:	beq	a6f0 <gen_dnhostop+0x414>
    a6d0:	mov	r2, r3
    a6d4:	ldr	r3, [r3, #44]	; 0x2c
    a6d8:	cmp	r3, #0
    a6dc:	beq	a6c0 <gen_dnhostop+0x3e4>
    a6e0:	ldr	r3, [r2, #84]	; 0x54
    a6e4:	str	r1, [r2, #84]	; 0x54
    a6e8:	cmp	r3, #0
    a6ec:	bne	a6d0 <gen_dnhostop+0x3f4>
    a6f0:	ldr	r2, [r8, #44]	; 0x2c
    a6f4:	mov	r3, r4
    a6f8:	clz	r2, r2
    a6fc:	lsr	r2, r2, #5
    a700:	str	r2, [r8, #44]	; 0x2c
    a704:	ldr	r2, [r3, #44]	; 0x2c
    a708:	cmp	r2, #0
    a70c:	addeq	r2, r3, #60	; 0x3c
    a710:	addne	r2, r3, #84	; 0x54
    a714:	ldr	r3, [r2]
    a718:	cmp	r3, #0
    a71c:	bne	a704 <gen_dnhostop+0x428>
    a720:	ldr	r3, [pc, #400]	; a8b8 <gen_dnhostop+0x5dc>
    a724:	mov	r1, #16
    a728:	str	r8, [r2]
    a72c:	ldr	r2, [r8, #96]	; 0x60
    a730:	add	r3, pc, r3
    a734:	ldr	r8, [r3, #872]	; 0x368
    a738:	str	r2, [r4, #96]	; 0x60
    a73c:	add	r8, r8, #2
    a740:	mov	r0, r8
    a744:	bl	2588 <gen_load_macplrel>
    a748:	mov	r9, r0
    a74c:	bl	22d0 <newchunk.constprop.25>
    a750:	mov	r2, #84	; 0x54
    a754:	mov	r3, #7
    a758:	str	r2, [r0]
    a75c:	mov	r2, r9
    a760:	str	r3, [r0, #12]
    a764:	b	a76c <gen_dnhostop+0x490>
    a768:	mov	r2, r3
    a76c:	ldr	r3, [r2, #16]
    a770:	cmp	r3, #0
    a774:	bne	a768 <gen_dnhostop+0x48c>
    a778:	str	r0, [r2, #16]
    a77c:	mov	sl, #21
    a780:	bl	24d8 <newchunk.constprop.26>
    a784:	mov	fp, r0
    a788:	mov	r3, #2
    a78c:	add	r0, r7, r8
    a790:	mov	r1, #8
    a794:	stmib	fp, {r9, sl}
    a798:	str	r3, [fp, #20]
    a79c:	str	fp, [fp, #96]	; 0x60
    a7a0:	bl	2588 <gen_load_macplrel>
    a7a4:	mov	r8, r0
    a7a8:	bl	24d8 <newchunk.constprop.26>
    a7ac:	mov	r7, r0
    a7b0:	mov	r0, fp
    a7b4:	mov	r1, r7
    a7b8:	stmib	r7, {r8, sl}
    a7bc:	str	r6, [r7, #20]
    a7c0:	str	r7, [r7, #96]	; 0x60
    a7c4:	bl	7884 <sf_gen_and>
    a7c8:	ldr	r3, [r7, #44]	; 0x2c
    a7cc:	mov	r2, r7
    a7d0:	clz	r3, r3
    a7d4:	lsr	r3, r3, #5
    a7d8:	str	r3, [r7, #44]	; 0x2c
    a7dc:	ldr	r1, [r4, #96]	; 0x60
    a7e0:	b	a7fc <gen_dnhostop+0x520>
    a7e4:	ldr	r3, [r2, #60]	; 0x3c
    a7e8:	str	r1, [r2, #60]	; 0x3c
    a7ec:	cmp	r3, #0
    a7f0:	beq	a814 <gen_dnhostop+0x538>
    a7f4:	mov	r2, r3
    a7f8:	ldr	r3, [r3, #44]	; 0x2c
    a7fc:	cmp	r3, #0
    a800:	beq	a7e4 <gen_dnhostop+0x508>
    a804:	ldr	r3, [r2, #84]	; 0x54
    a808:	str	r1, [r2, #84]	; 0x54
    a80c:	cmp	r3, #0
    a810:	bne	a7f4 <gen_dnhostop+0x518>
    a814:	ldr	r2, [r7, #44]	; 0x2c
    a818:	mov	r3, r4
    a81c:	clz	r2, r2
    a820:	lsr	r2, r2, #5
    a824:	str	r2, [r7, #44]	; 0x2c
    a828:	ldr	r2, [r3, #44]	; 0x2c
    a82c:	cmp	r2, #0
    a830:	addeq	r2, r3, #60	; 0x3c
    a834:	addne	r2, r3, #84	; 0x54
    a838:	ldr	r3, [r2]
    a83c:	cmp	r3, #0
    a840:	bne	a828 <gen_dnhostop+0x54c>
    a844:	str	r7, [r2]
    a848:	mov	r0, r5
    a84c:	mov	r1, r4
    a850:	ldr	r3, [r7, #96]	; 0x60
    a854:	str	r3, [r4, #96]	; 0x60
    a858:	bl	7884 <sf_gen_and>
    a85c:	b	a3c4 <gen_dnhostop+0xe8>
    a860:	mov	r1, #8
    a864:	ldr	r0, [r3, #952]	; 0x3b8
    a868:	bl	2588 <gen_load_macplrel>
    a86c:	mov	r4, r0
    a870:	bl	24d8 <newchunk.constprop.26>
    a874:	mov	r5, r0
    a878:	mov	r2, #21
    a87c:	str	r4, [r0, #4]
    a880:	mov	r3, #39	; 0x27
    a884:	str	r2, [r0, #8]
    a888:	str	r3, [r0, #20]
    a88c:	str	r0, [r5, #96]	; 0x60
    a890:	b	a430 <gen_dnhostop+0x154>
    a894:	ldr	r0, [pc, #32]	; a8bc <gen_dnhostop+0x5e0>
    a898:	add	r0, pc, r0
    a89c:	bl	2130 <sf_bpf_error>
    a8a0:	bl	ebc <abort@plt>
    a8a4:	.word	0x00033efc
    a8a8:	.word	0x0001628c
    a8ac:	.word	0x00033f4c
    a8b0:	.word	0x00033f28
    a8b4:	.word	0x00033d54
    a8b8:	.word	0x00033c30
    a8bc:	.word	0x00016064

0000a8c0 <gen_host>:
    a8c0:	strd	r4, [sp, #-28]!	; 0xffffffe4
    a8c4:	mov	r5, r0
    a8c8:	strd	r6, [sp, #8]
    a8cc:	mov	r7, r1
    a8d0:	mov	r6, r3
    a8d4:	strd	r8, [sp, #16]
    a8d8:	str	lr, [sp, #24]
    a8dc:	sub	sp, sp, #12
    a8e0:	ldr	r4, [sp, #40]	; 0x28
    a8e4:	cmp	r4, #2
    a8e8:	beq	a9a4 <gen_host+0xe4>
    a8ec:	ldr	r1, [pc, #820]	; ac28 <gen_host+0x368>
    a8f0:	add	r1, pc, r1
    a8f4:	cmp	r2, #40	; 0x28
    a8f8:	addls	pc, pc, r2, lsl #2
    a8fc:	b	ac24 <gen_host+0x364>
    a900:	b	a9d4 <gen_host+0x114>
    a904:	b	ac24 <gen_host+0x364>
    a908:	b	aa20 <gen_host+0x160>
    a90c:	b	aa48 <gen_host+0x188>
    a910:	b	aa70 <gen_host+0x1b0>
    a914:	b	aaf8 <gen_host+0x238>
    a918:	b	ab10 <gen_host+0x250>
    a91c:	b	ab04 <gen_host+0x244>
    a920:	b	ab7c <gen_host+0x2bc>
    a924:	b	ab70 <gen_host+0x2b0>
    a928:	b	ab64 <gen_host+0x2a4>
    a92c:	b	ab58 <gen_host+0x298>
    a930:	b	a9b0 <gen_host+0xf0>
    a934:	b	ab94 <gen_host+0x2d4>
    a938:	b	ab88 <gen_host+0x2c8>
    a93c:	b	aaec <gen_host+0x22c>
    a940:	b	ac18 <gen_host+0x358>
    a944:	b	ac0c <gen_host+0x34c>
    a948:	b	ac00 <gen_host+0x340>
    a94c:	b	abf4 <gen_host+0x334>
    a950:	b	abe8 <gen_host+0x328>
    a954:	b	abdc <gen_host+0x31c>
    a958:	b	abd0 <gen_host+0x310>
    a95c:	b	abc4 <gen_host+0x304>
    a960:	b	abb8 <gen_host+0x2f8>
    a964:	b	abac <gen_host+0x2ec>
    a968:	b	aba0 <gen_host+0x2e0>
    a96c:	b	ab4c <gen_host+0x28c>
    a970:	b	ab40 <gen_host+0x280>
    a974:	b	ab34 <gen_host+0x274>
    a978:	b	ab28 <gen_host+0x268>
    a97c:	b	ac24 <gen_host+0x364>
    a980:	b	ac24 <gen_host+0x364>
    a984:	b	ac24 <gen_host+0x364>
    a988:	b	ac24 <gen_host+0x364>
    a98c:	b	ac24 <gen_host+0x364>
    a990:	b	ac24 <gen_host+0x364>
    a994:	b	ac24 <gen_host+0x364>
    a998:	b	ac24 <gen_host+0x364>
    a99c:	b	ac24 <gen_host+0x364>
    a9a0:	b	ab1c <gen_host+0x25c>
    a9a4:	ldr	r1, [pc, #640]	; ac2c <gen_host+0x36c>
    a9a8:	add	r1, pc, r1
    a9ac:	b	a8f4 <gen_host+0x34>
    a9b0:	mov	r1, r6
    a9b4:	mov	r0, r5
    a9b8:	add	sp, sp, #12
    a9bc:	ldrd	r4, [sp]
    a9c0:	ldrd	r6, [sp, #8]
    a9c4:	ldrd	r8, [sp, #16]
    a9c8:	ldr	lr, [sp, #24]
    a9cc:	add	sp, sp, #28
    a9d0:	b	a2dc <gen_dnhostop>
    a9d4:	mov	r3, r6
    a9d8:	mov	r2, #2
    a9dc:	str	r4, [sp]
    a9e0:	mov	r1, r7
    a9e4:	mov	r0, r5
    a9e8:	bl	a8c0 <gen_host>
    a9ec:	ldr	r3, [pc, #572]	; ac30 <gen_host+0x370>
    a9f0:	mov	r8, r0
    a9f4:	add	r3, pc, r3
    a9f8:	ldr	r3, [r3, #4]
    a9fc:	cmp	r3, #0
    aa00:	beq	aa98 <gen_host+0x1d8>
    aa04:	mov	r0, r8
    aa08:	add	sp, sp, #12
    aa0c:	ldrd	r4, [sp]
    aa10:	ldrd	r6, [sp, #8]
    aa14:	ldrd	r8, [sp, #16]
    aa18:	add	sp, sp, #24
    aa1c:	pop	{pc}		; (ldr pc, [sp], #4)
    aa20:	mov	ip, #16
    aa24:	mov	r3, #12
    aa28:	mov	r2, r6
    aa2c:	mov	r1, r7
    aa30:	mov	r0, r5
    aa34:	stm	sp, {r3, ip}
    aa38:	mov	r3, #2048	; 0x800
    aa3c:	bl	a0e0 <gen_hostop>
    aa40:	mov	r8, r0
    aa44:	b	aa04 <gen_host+0x144>
    aa48:	mov	ip, #24
    aa4c:	mov	r3, #14
    aa50:	mov	r2, r6
    aa54:	mov	r1, r7
    aa58:	mov	r0, r5
    aa5c:	stm	sp, {r3, ip}
    aa60:	movw	r3, #2054	; 0x806
    aa64:	bl	a0e0 <gen_hostop>
    aa68:	mov	r8, r0
    aa6c:	b	aa04 <gen_host+0x144>
    aa70:	mov	ip, #24
    aa74:	mov	r3, #14
    aa78:	mov	r2, r6
    aa7c:	mov	r1, r7
    aa80:	mov	r0, r5
    aa84:	stm	sp, {r3, ip}
    aa88:	movw	r3, #32821	; 0x8035
    aa8c:	bl	a0e0 <gen_hostop>
    aa90:	mov	r8, r0
    aa94:	b	aa04 <gen_host+0x144>
    aa98:	mov	r3, r6
    aa9c:	mov	r2, #3
    aaa0:	str	r4, [sp]
    aaa4:	mov	r1, r7
    aaa8:	mov	r0, r5
    aaac:	bl	a8c0 <gen_host>
    aab0:	mov	r9, r0
    aab4:	mov	r1, r0
    aab8:	mov	r0, r8
    aabc:	bl	823c <sf_gen_or>
    aac0:	mov	r1, r7
    aac4:	mov	r3, r6
    aac8:	str	r4, [sp]
    aacc:	mov	r0, r5
    aad0:	mov	r2, #4
    aad4:	bl	a8c0 <gen_host>
    aad8:	mov	r8, r0
    aadc:	mov	r1, r0
    aae0:	mov	r0, r9
    aae4:	bl	823c <sf_gen_or>
    aae8:	b	aa04 <gen_host+0x144>
    aaec:	ldr	r0, [pc, #320]	; ac34 <gen_host+0x374>
    aaf0:	add	r0, pc, r0
    aaf4:	bl	2130 <sf_bpf_error>
    aaf8:	ldr	r0, [pc, #312]	; ac38 <gen_host+0x378>
    aafc:	add	r0, pc, r0
    ab00:	bl	2130 <sf_bpf_error>
    ab04:	ldr	r0, [pc, #304]	; ac3c <gen_host+0x37c>
    ab08:	add	r0, pc, r0
    ab0c:	bl	2130 <sf_bpf_error>
    ab10:	ldr	r0, [pc, #296]	; ac40 <gen_host+0x380>
    ab14:	add	r0, pc, r0
    ab18:	bl	2130 <sf_bpf_error>
    ab1c:	ldr	r0, [pc, #288]	; ac44 <gen_host+0x384>
    ab20:	add	r0, pc, r0
    ab24:	bl	2130 <sf_bpf_error>
    ab28:	ldr	r0, [pc, #280]	; ac48 <gen_host+0x388>
    ab2c:	add	r0, pc, r0
    ab30:	bl	2130 <sf_bpf_error>
    ab34:	ldr	r0, [pc, #272]	; ac4c <gen_host+0x38c>
    ab38:	add	r0, pc, r0
    ab3c:	bl	2130 <sf_bpf_error>
    ab40:	ldr	r0, [pc, #264]	; ac50 <gen_host+0x390>
    ab44:	add	r0, pc, r0
    ab48:	bl	2130 <sf_bpf_error>
    ab4c:	ldr	r0, [pc, #256]	; ac54 <gen_host+0x394>
    ab50:	add	r0, pc, r0
    ab54:	bl	2130 <sf_bpf_error>
    ab58:	ldr	r0, [pc, #248]	; ac58 <gen_host+0x398>
    ab5c:	add	r0, pc, r0
    ab60:	bl	2130 <sf_bpf_error>
    ab64:	ldr	r0, [pc, #240]	; ac5c <gen_host+0x39c>
    ab68:	add	r0, pc, r0
    ab6c:	bl	2130 <sf_bpf_error>
    ab70:	ldr	r0, [pc, #232]	; ac60 <gen_host+0x3a0>
    ab74:	add	r0, pc, r0
    ab78:	bl	2130 <sf_bpf_error>
    ab7c:	ldr	r0, [pc, #224]	; ac64 <gen_host+0x3a4>
    ab80:	add	r0, pc, r0
    ab84:	bl	2130 <sf_bpf_error>
    ab88:	ldr	r0, [pc, #216]	; ac68 <gen_host+0x3a8>
    ab8c:	add	r0, pc, r0
    ab90:	bl	2130 <sf_bpf_error>
    ab94:	ldr	r0, [pc, #208]	; ac6c <gen_host+0x3ac>
    ab98:	add	r0, pc, r0
    ab9c:	bl	2130 <sf_bpf_error>
    aba0:	ldr	r0, [pc, #200]	; ac70 <gen_host+0x3b0>
    aba4:	add	r0, pc, r0
    aba8:	bl	2130 <sf_bpf_error>
    abac:	ldr	r0, [pc, #192]	; ac74 <gen_host+0x3b4>
    abb0:	add	r0, pc, r0
    abb4:	bl	2130 <sf_bpf_error>
    abb8:	ldr	r0, [pc, #184]	; ac78 <gen_host+0x3b8>
    abbc:	add	r0, pc, r0
    abc0:	bl	2130 <sf_bpf_error>
    abc4:	ldr	r0, [pc, #176]	; ac7c <gen_host+0x3bc>
    abc8:	add	r0, pc, r0
    abcc:	bl	2130 <sf_bpf_error>
    abd0:	ldr	r0, [pc, #168]	; ac80 <gen_host+0x3c0>
    abd4:	add	r0, pc, r0
    abd8:	bl	2130 <sf_bpf_error>
    abdc:	ldr	r0, [pc, #160]	; ac84 <gen_host+0x3c4>
    abe0:	add	r0, pc, r0
    abe4:	bl	2130 <sf_bpf_error>
    abe8:	ldr	r0, [pc, #152]	; ac88 <gen_host+0x3c8>
    abec:	add	r0, pc, r0
    abf0:	bl	2130 <sf_bpf_error>
    abf4:	ldr	r0, [pc, #144]	; ac8c <gen_host+0x3cc>
    abf8:	add	r0, pc, r0
    abfc:	bl	2130 <sf_bpf_error>
    ac00:	ldr	r0, [pc, #136]	; ac90 <gen_host+0x3d0>
    ac04:	add	r0, pc, r0
    ac08:	bl	2130 <sf_bpf_error>
    ac0c:	ldr	r0, [pc, #128]	; ac94 <gen_host+0x3d4>
    ac10:	add	r0, pc, r0
    ac14:	bl	2130 <sf_bpf_error>
    ac18:	ldr	r0, [pc, #120]	; ac98 <gen_host+0x3d8>
    ac1c:	add	r0, pc, r0
    ac20:	bl	2130 <sf_bpf_error>
    ac24:	bl	ebc <abort@plt>
    ac28:	.word	0x00018474
    ac2c:	.word	0x00015f78
    ac30:	.word	0x0003387c
    ac34:	.word	0x00015ff0
    ac38:	.word	0x00015e48
    ac3c:	.word	0x00015e5c
    ac40:	.word	0x00015e10
    ac44:	.word	0x00016130
    ac48:	.word	0x00016100
    ac4c:	.word	0x000160d0
    ac50:	.word	0x000160a4
    ac54:	.word	0x00016078
    ac58:	.word	0x00015ec8
    ac5c:	.word	0x00015e5c
    ac60:	.word	0x00015e30
    ac64:	.word	0x00015e04
    ac68:	.word	0x00015ee4
    ac6c:	.word	0x00015efc
    ac70:	.word	0x00016004
    ac74:	.word	0x00015fd8
    ac78:	.word	0x00015d40
    ac7c:	.word	0x00015e84
    ac80:	.word	0x00015e30
    ac84:	.word	0x00015e04
    ac88:	.word	0x00015f7c
    ac8c:	.word	0x00015f54
    ac90:	.word	0x00015f28
    ac94:	.word	0x00015ef8
    ac98:	.word	0x00015e9c

0000ac9c <gen_protochain>:
    ac9c:	ldr	ip, [pc, #2576]	; b6b4 <gen_protochain+0xa18>
    aca0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    aca4:	strd	r6, [sp, #8]
    aca8:	mov	r7, r2
    acac:	mov	r6, r1
    acb0:	strd	r8, [sp, #16]
    acb4:	strd	sl, [sp, #24]
    acb8:	add	ip, pc, ip
    acbc:	str	lr, [sp, #32]
    acc0:	sub	sp, sp, #468	; 0x1d4
    acc4:	ldr	r4, [ip, #804]	; 0x324
    acc8:	str	r0, [sp]
    accc:	ldr	r8, [pc, #2532]	; b6b8 <gen_protochain+0xa1c>
    acd0:	lsl	r5, r4, #2
    acd4:	add	r2, ip, r5
    acd8:	add	r8, pc, r8
    acdc:	ldr	r2, [r2, #808]	; 0x328
    ace0:	cmp	r2, #0
    ace4:	beq	af70 <gen_protochain+0x2d4>
    ace8:	add	r4, r4, #1
    acec:	rsbs	r3, r4, #0
    acf0:	and	r4, r4, #15
    acf4:	and	r3, r3, #15
    acf8:	rsbpl	r4, r3, #0
    acfc:	lsl	r5, r4, #2
    ad00:	str	r4, [ip, #804]	; 0x324
    ad04:	add	r2, ip, r5
    ad08:	ldr	r2, [r2, #808]	; 0x328
    ad0c:	cmp	r2, #0
    ad10:	beq	af70 <gen_protochain+0x2d4>
    ad14:	add	r4, r4, #1
    ad18:	rsbs	r3, r4, #0
    ad1c:	and	r4, r4, #15
    ad20:	and	r3, r3, #15
    ad24:	rsbpl	r4, r3, #0
    ad28:	lsl	r5, r4, #2
    ad2c:	add	r2, ip, r5
    ad30:	ldr	r2, [r2, #808]	; 0x328
    ad34:	cmp	r2, #0
    ad38:	beq	af64 <gen_protochain+0x2c8>
    ad3c:	add	r4, r4, #1
    ad40:	rsbs	r3, r4, #0
    ad44:	and	r4, r4, #15
    ad48:	and	r3, r3, #15
    ad4c:	rsbpl	r4, r3, #0
    ad50:	lsl	r5, r4, #2
    ad54:	add	r2, ip, r5
    ad58:	ldr	r2, [r2, #808]	; 0x328
    ad5c:	cmp	r2, #0
    ad60:	beq	af64 <gen_protochain+0x2c8>
    ad64:	add	r4, r4, #1
    ad68:	rsbs	r3, r4, #0
    ad6c:	and	r4, r4, #15
    ad70:	and	r3, r3, #15
    ad74:	rsbpl	r4, r3, #0
    ad78:	lsl	r5, r4, #2
    ad7c:	add	r2, ip, r5
    ad80:	ldr	r2, [r2, #808]	; 0x328
    ad84:	cmp	r2, #0
    ad88:	beq	af64 <gen_protochain+0x2c8>
    ad8c:	add	r4, r4, #1
    ad90:	rsbs	r3, r4, #0
    ad94:	and	r4, r4, #15
    ad98:	and	r3, r3, #15
    ad9c:	rsbpl	r4, r3, #0
    ada0:	lsl	r5, r4, #2
    ada4:	add	r2, ip, r5
    ada8:	ldr	r2, [r2, #808]	; 0x328
    adac:	cmp	r2, #0
    adb0:	beq	af64 <gen_protochain+0x2c8>
    adb4:	add	r4, r4, #1
    adb8:	rsbs	r3, r4, #0
    adbc:	and	r4, r4, #15
    adc0:	and	r3, r3, #15
    adc4:	rsbpl	r4, r3, #0
    adc8:	lsl	r5, r4, #2
    adcc:	add	r2, ip, r5
    add0:	ldr	r2, [r2, #808]	; 0x328
    add4:	cmp	r2, #0
    add8:	beq	af64 <gen_protochain+0x2c8>
    addc:	add	r4, r4, #1
    ade0:	rsbs	r3, r4, #0
    ade4:	and	r4, r4, #15
    ade8:	and	r3, r3, #15
    adec:	rsbpl	r4, r3, #0
    adf0:	lsl	r5, r4, #2
    adf4:	add	r2, ip, r5
    adf8:	ldr	r2, [r2, #808]	; 0x328
    adfc:	cmp	r2, #0
    ae00:	beq	af64 <gen_protochain+0x2c8>
    ae04:	add	r4, r4, #1
    ae08:	rsbs	r3, r4, #0
    ae0c:	and	r4, r4, #15
    ae10:	and	r3, r3, #15
    ae14:	rsbpl	r4, r3, #0
    ae18:	lsl	r5, r4, #2
    ae1c:	add	r2, ip, r5
    ae20:	ldr	r2, [r2, #808]	; 0x328
    ae24:	cmp	r2, #0
    ae28:	beq	af64 <gen_protochain+0x2c8>
    ae2c:	add	r4, r4, #1
    ae30:	rsbs	r3, r4, #0
    ae34:	and	r4, r4, #15
    ae38:	and	r3, r3, #15
    ae3c:	rsbpl	r4, r3, #0
    ae40:	lsl	r5, r4, #2
    ae44:	add	ip, ip, r5
    ae48:	ldr	r2, [ip, #808]	; 0x328
    ae4c:	cmp	r2, #0
    ae50:	beq	af64 <gen_protochain+0x2c8>
    ae54:	add	r4, r4, #1
    ae58:	ldr	r2, [pc, #2140]	; b6bc <gen_protochain+0xa20>
    ae5c:	rsbs	r3, r4, #0
    ae60:	and	r4, r4, #15
    ae64:	and	r3, r3, #15
    ae68:	rsbpl	r4, r3, #0
    ae6c:	lsl	r5, r4, #2
    ae70:	add	r2, pc, r2
    ae74:	add	r1, r2, r5
    ae78:	ldr	r1, [r1, #808]	; 0x328
    ae7c:	cmp	r1, #0
    ae80:	beq	af64 <gen_protochain+0x2c8>
    ae84:	add	r4, r4, #1
    ae88:	rsbs	r3, r4, #0
    ae8c:	and	r4, r4, #15
    ae90:	and	r3, r3, #15
    ae94:	rsbpl	r4, r3, #0
    ae98:	lsl	r5, r4, #2
    ae9c:	add	r1, r2, r5
    aea0:	ldr	r1, [r1, #808]	; 0x328
    aea4:	cmp	r1, #0
    aea8:	beq	af64 <gen_protochain+0x2c8>
    aeac:	add	r4, r4, #1
    aeb0:	rsbs	r3, r4, #0
    aeb4:	and	r4, r4, #15
    aeb8:	and	r3, r3, #15
    aebc:	rsbpl	r4, r3, #0
    aec0:	lsl	r5, r4, #2
    aec4:	add	r1, r2, r5
    aec8:	ldr	r1, [r1, #808]	; 0x328
    aecc:	cmp	r1, #0
    aed0:	beq	af64 <gen_protochain+0x2c8>
    aed4:	add	r4, r4, #1
    aed8:	rsbs	r3, r4, #0
    aedc:	and	r4, r4, #15
    aee0:	and	r3, r3, #15
    aee4:	rsbpl	r4, r3, #0
    aee8:	lsl	r5, r4, #2
    aeec:	add	r1, r2, r5
    aef0:	ldr	r1, [r1, #808]	; 0x328
    aef4:	cmp	r1, #0
    aef8:	beq	af64 <gen_protochain+0x2c8>
    aefc:	add	r4, r4, #1
    af00:	rsbs	r3, r4, #0
    af04:	and	r4, r4, #15
    af08:	and	r3, r3, #15
    af0c:	rsbpl	r4, r3, #0
    af10:	lsl	r5, r4, #2
    af14:	add	r1, r2, r5
    af18:	ldr	r1, [r1, #808]	; 0x328
    af1c:	cmp	r1, #0
    af20:	beq	af64 <gen_protochain+0x2c8>
    af24:	add	r4, r4, #1
    af28:	rsbs	r3, r4, #0
    af2c:	and	r4, r4, #15
    af30:	and	r3, r3, #15
    af34:	rsbpl	r4, r3, #0
    af38:	lsl	r5, r4, #2
    af3c:	add	r1, r2, r5
    af40:	ldr	r1, [r1, #808]	; 0x328
    af44:	cmp	r1, #0
    af48:	beq	af64 <gen_protochain+0x2c8>
    af4c:	ldr	r0, [pc, #1900]	; b6c0 <gen_protochain+0xa24>
    af50:	add	r4, r4, #1
    af54:	and	r4, r4, #15
    af58:	str	r4, [r2, #804]	; 0x324
    af5c:	add	r0, pc, r0
    af60:	bl	2130 <sf_bpf_error>
    af64:	ldr	r2, [pc, #1880]	; b6c4 <gen_protochain+0xa28>
    af68:	add	r2, pc, r2
    af6c:	str	r4, [r2, #804]	; 0x324
    af70:	ldr	ip, [pc, #1872]	; b6c8 <gen_protochain+0xa2c>
    af74:	mov	lr, #1
    af78:	add	r0, sp, #64	; 0x40
    af7c:	mov	r2, #400	; 0x190
    af80:	mov	r1, #0
    af84:	str	r0, [sp, #8]
    af88:	add	ip, pc, ip
    af8c:	add	ip, ip, r5
    af90:	str	lr, [ip, #808]	; 0x328
    af94:	bl	e2c <memset@plt>
    af98:	cmp	r6, #2
    af9c:	beq	b008 <gen_protochain+0x36c>
    afa0:	cmp	r6, #17
    afa4:	beq	b008 <gen_protochain+0x36c>
    afa8:	cmp	r6, #0
    afac:	bne	b69c <gen_protochain+0xa00>
    afb0:	ldr	r4, [sp]
    afb4:	mov	r2, r7
    afb8:	mov	r1, #2
    afbc:	mov	r0, r4
    afc0:	bl	ac9c <gen_protochain>
    afc4:	mov	r6, r0
    afc8:	mov	r1, #17
    afcc:	mov	r0, r4
    afd0:	mov	r2, r7
    afd4:	bl	ac9c <gen_protochain>
    afd8:	mov	r4, r0
    afdc:	mov	r1, r0
    afe0:	mov	r0, r6
    afe4:	bl	823c <sf_gen_or>
    afe8:	mov	r0, r4
    afec:	add	sp, sp, #468	; 0x1d4
    aff0:	ldrd	r4, [sp]
    aff4:	ldrd	r6, [sp, #8]
    aff8:	ldrd	r8, [sp, #16]
    affc:	ldrd	sl, [sp, #24]
    b000:	add	sp, sp, #32
    b004:	pop	{pc}		; (ldr pc, [sp], #4)
    b008:	ldr	r2, [pc, #1724]	; b6cc <gen_protochain+0xa30>
    b00c:	add	r2, pc, r2
    b010:	ldr	r2, [r2, #876]	; 0x36c
    b014:	cmp	r2, #127	; 0x7f
    b018:	beq	b55c <gen_protochain+0x8c0>
    b01c:	ble	b54c <gen_protochain+0x8b0>
    b020:	cmp	r2, #163	; 0xa3
    b024:	beq	b55c <gen_protochain+0x8c0>
    b028:	cmp	r2, #192	; 0xc0
    b02c:	beq	b55c <gen_protochain+0x8c0>
    b030:	ldr	r2, [pc, #1688]	; b6d0 <gen_protochain+0xa34>
    b034:	mov	sl, #1
    b038:	mov	r7, #0
    b03c:	ldr	r2, [r8, r2]
    b040:	str	sl, [r2]
    b044:	bl	22d0 <newchunk.constprop.25>
    b048:	cmp	r6, #2
    b04c:	str	r7, [r0]
    b050:	str	r0, [sp, #64]	; 0x40
    b054:	beq	b568 <gen_protochain+0x8cc>
    b058:	cmp	r6, #17
    b05c:	bne	b6a8 <gen_protochain+0xa0c>
    b060:	movw	r0, #34525	; 0x86dd
    b064:	mov	r8, #21
    b068:	bl	98c0 <gen_linktype>
    b06c:	str	r0, [sp, #16]
    b070:	bl	22d0 <newchunk.constprop.25>
    b074:	ldr	r1, [pc, #1624]	; b6d4 <gen_protochain+0xa38>
    b078:	mov	r2, #48	; 0x30
    b07c:	mov	r3, #34	; 0x22
    b080:	str	r2, [r0]
    b084:	str	r3, [sp, #12]
    b088:	mov	r3, #33	; 0x21
    b08c:	str	r0, [sp, #68]	; 0x44
    b090:	add	r1, pc, r1
    b094:	str	r3, [sp, #20]
    b098:	ldr	r2, [r1, #796]	; 0x31c
    b09c:	str	r8, [sp, #60]	; 0x3c
    b0a0:	ldr	r1, [r1, #872]	; 0x368
    b0a4:	add	r2, r2, r1
    b0a8:	add	r1, r2, #6
    b0ac:	str	r2, [sp, #4]
    b0b0:	str	r1, [r0, #12]
    b0b4:	mov	r1, #31
    b0b8:	mov	r0, #32
    b0bc:	strd	r0, [sp, #24]
    b0c0:	bl	22d0 <newchunk.constprop.25>
    b0c4:	mov	r2, #40	; 0x28
    b0c8:	str	sl, [r0]
    b0cc:	str	r0, [sp, #72]	; 0x48
    b0d0:	str	r2, [r0, #12]
    b0d4:	bl	22d0 <newchunk.constprop.25>
    b0d8:	ldr	r1, [sp]
    b0dc:	mov	r9, r0
    b0e0:	str	r8, [r0]
    b0e4:	str	r7, [r0, #4]
    b0e8:	str	r7, [r0, #8]
    b0ec:	str	r0, [sp, #76]	; 0x4c
    b0f0:	str	r1, [r0, #12]
    b0f4:	bl	22d0 <newchunk.constprop.25>
    b0f8:	mov	r2, #59	; 0x3b
    b0fc:	mov	r6, r0
    b100:	str	r8, [r0]
    b104:	str	r7, [r0, #4]
    b108:	str	r7, [r0, #8]
    b10c:	str	r2, [r0, #12]
    b110:	str	r0, [r9, #8]
    b114:	str	r0, [sp, #80]	; 0x50
    b118:	bl	22d0 <newchunk.constprop.25>
    b11c:	str	r8, [r0]
    b120:	str	r7, [r0, #4]
    b124:	str	r7, [r0, #8]
    b128:	str	r7, [r0, #12]
    b12c:	str	r0, [r6, #8]
    b130:	str	r0, [sp, #32]
    b134:	str	r0, [sp, #84]	; 0x54
    b138:	bl	22d0 <newchunk.constprop.25>
    b13c:	ldr	r2, [sp, #32]
    b140:	mov	r1, #60	; 0x3c
    b144:	mov	fp, r0
    b148:	str	r8, [r0]
    b14c:	str	r0, [r2, #8]
    b150:	str	r7, [r0, #4]
    b154:	str	r7, [r0, #8]
    b158:	str	r1, [r0, #12]
    b15c:	str	r2, [sp, #48]	; 0x30
    b160:	str	r0, [sp, #88]	; 0x58
    b164:	bl	22d0 <newchunk.constprop.25>
    b168:	mov	r1, #43	; 0x2b
    b16c:	str	r8, [r0]
    b170:	mov	r6, r0
    b174:	str	r0, [fp, #8]
    b178:	str	r7, [r0, #4]
    b17c:	str	r7, [r0, #8]
    b180:	str	r1, [r0, #12]
    b184:	str	r0, [sp, #92]	; 0x5c
    b188:	bl	22d0 <newchunk.constprop.25>
    b18c:	mov	r1, #44	; 0x2c
    b190:	str	r8, [r0]
    b194:	mov	r9, r0
    b198:	str	r0, [r6, #8]
    b19c:	str	r7, [r0, #4]
    b1a0:	str	r7, [r0, #8]
    b1a4:	str	r1, [r0, #12]
    b1a8:	str	r0, [sp, #96]	; 0x60
    b1ac:	bl	22d0 <newchunk.constprop.25>
    b1b0:	mov	r1, r0
    b1b4:	mov	r0, #135	; 0x87
    b1b8:	str	r0, [r1]
    b1bc:	str	r1, [sp, #44]	; 0x2c
    b1c0:	str	r1, [sp, #100]	; 0x64
    b1c4:	bl	22d0 <newchunk.constprop.25>
    b1c8:	ldr	r3, [sp, #4]
    b1cc:	mov	r1, #80	; 0x50
    b1d0:	str	r0, [sp, #104]	; 0x68
    b1d4:	str	r1, [r0]
    b1d8:	str	r3, [r0, #12]
    b1dc:	bl	22d0 <newchunk.constprop.25>
    b1e0:	mov	ip, #2
    b1e4:	str	r0, [sp, #108]	; 0x6c
    b1e8:	str	ip, [r0]
    b1ec:	str	r4, [r0, #12]
    b1f0:	bl	22d0 <newchunk.constprop.25>
    b1f4:	mov	r2, #135	; 0x87
    b1f8:	str	r0, [sp, #112]	; 0x70
    b1fc:	str	r2, [r0]
    b200:	bl	22d0 <newchunk.constprop.25>
    b204:	mov	r2, #4
    b208:	str	r0, [sp, #116]	; 0x74
    b20c:	str	r2, [r0]
    b210:	str	sl, [r0, #12]
    b214:	bl	22d0 <newchunk.constprop.25>
    b218:	mov	ip, #7
    b21c:	str	r0, [sp, #120]	; 0x78
    b220:	str	ip, [r0]
    b224:	bl	22d0 <newchunk.constprop.25>
    b228:	ldr	r3, [sp, #4]
    b22c:	mov	r1, #80	; 0x50
    b230:	str	r0, [sp, #124]	; 0x7c
    b234:	str	r1, [r0]
    b238:	str	r3, [r0, #12]
    b23c:	bl	22d0 <newchunk.constprop.25>
    b240:	mov	r2, #4
    b244:	mov	r3, #30
    b248:	str	r2, [r0]
    b24c:	str	sl, [r0, #12]
    b250:	str	r3, [sp, #32]
    b254:	str	r0, [sp, #128]	; 0x80
    b258:	bl	22d0 <newchunk.constprop.25>
    b25c:	mov	lr, #36	; 0x24
    b260:	mov	ip, #8
    b264:	str	r0, [sp, #132]	; 0x84
    b268:	str	lr, [r0]
    b26c:	str	ip, [r0, #12]
    b270:	bl	22d0 <newchunk.constprop.25>
    b274:	mov	ip, #7
    b278:	mov	r3, #29
    b27c:	str	ip, [r0]
    b280:	str	r3, [sp, #36]	; 0x24
    b284:	str	r0, [sp, #136]	; 0x88
    b288:	bl	22d0 <newchunk.constprop.25>
    b28c:	mov	sl, r0
    b290:	mov	r0, #96	; 0x60
    b294:	str	r0, [sl]
    b298:	str	r4, [sl, #12]
    b29c:	str	sl, [sp, #140]	; 0x8c
    b2a0:	bl	22d0 <newchunk.constprop.25>
    b2a4:	ldr	r1, [sp, #44]	; 0x2c
    b2a8:	mov	lr, #5
    b2ac:	mvn	ip, #17
    b2b0:	mov	r3, #28
    b2b4:	ldr	r2, [sp, #48]	; 0x30
    b2b8:	str	lr, [r0]
    b2bc:	str	ip, [r0, #12]
    b2c0:	str	r0, [sl, #8]
    b2c4:	mov	sl, #22
    b2c8:	str	r3, [sp, #40]	; 0x28
    b2cc:	mov	r3, #27
    b2d0:	str	r1, [r2, #4]
    b2d4:	str	r1, [fp, #4]
    b2d8:	str	r1, [r6, #4]
    b2dc:	mov	r6, #24
    b2e0:	str	r1, [r9, #4]
    b2e4:	mov	r1, #25
    b2e8:	str	r0, [sp, #144]	; 0x90
    b2ec:	mov	r0, #26
    b2f0:	str	r3, [sp, #44]	; 0x2c
    b2f4:	strd	r0, [sp, #48]	; 0x30
    b2f8:	bl	22d0 <newchunk.constprop.25>
    b2fc:	mov	r2, #51	; 0x33
    b300:	mvn	r3, #30
    b304:	str	r8, [r0]
    b308:	mov	r8, #23
    b30c:	str	r7, [r0, #4]
    b310:	str	r7, [r0, #8]
    b314:	str	r2, [r0, #12]
    b318:	str	r0, [r9, #8]
    b31c:	str	r3, [sp, #56]	; 0x38
    b320:	str	r0, [sp, #148]	; 0x94
    b324:	bl	22d0 <newchunk.constprop.25>
    b328:	ldr	r1, [sp, #60]	; 0x3c
    b32c:	add	r3, sp, #464	; 0x1d0
    b330:	mov	r2, #135	; 0x87
    b334:	add	sl, r3, sl, lsl #2
    b338:	mov	fp, #80	; 0x50
    b33c:	mov	r7, #4
    b340:	str	r2, [r0]
    b344:	add	r6, r3, r6, lsl #2
    b348:	mov	r9, #7
    b34c:	str	r0, [sl, #-400]	; 0xfffffe70
    b350:	mov	sl, #2
    b354:	add	r1, r3, r1, lsl #2
    b358:	ldr	ip, [r1, #-400]	; 0xfffffe70
    b35c:	str	r1, [sp, #60]	; 0x3c
    b360:	str	r0, [ip, #4]
    b364:	bl	22d0 <newchunk.constprop.25>
    b368:	add	r3, sp, #464	; 0x1d0
    b36c:	str	fp, [r0]
    b370:	add	r8, r3, r8, lsl sl
    b374:	ldr	r3, [sp, #4]
    b378:	str	r0, [r8, #-400]	; 0xfffffe70
    b37c:	str	r3, [r0, #12]
    b380:	bl	22d0 <newchunk.constprop.25>
    b384:	str	sl, [r0]
    b388:	str	r4, [r0, #12]
    b38c:	str	r0, [r6, #-400]	; 0xfffffe70
    b390:	bl	22d0 <newchunk.constprop.25>
    b394:	ldr	r1, [sp, #52]	; 0x34
    b398:	add	r2, sp, #464	; 0x1d0
    b39c:	add	ip, r2, r1, lsl sl
    b3a0:	mov	r2, #135	; 0x87
    b3a4:	str	r2, [r0]
    b3a8:	str	r0, [ip, #-400]	; 0xfffffe70
    b3ac:	ldr	r2, [r6, #-400]	; 0xfffffe70
    b3b0:	str	r0, [r2, #4]
    b3b4:	bl	22d0 <newchunk.constprop.25>
    b3b8:	ldr	r1, [sp, #48]	; 0x30
    b3bc:	add	r2, sp, #464	; 0x1d0
    b3c0:	mov	ip, #1
    b3c4:	str	r7, [r0]
    b3c8:	str	ip, [r0, #12]
    b3cc:	add	r2, r2, r1, lsl sl
    b3d0:	str	r0, [r2, #-400]	; 0xfffffe70
    b3d4:	bl	22d0 <newchunk.constprop.25>
    b3d8:	ldr	r1, [sp, #44]	; 0x2c
    b3dc:	add	r2, sp, #464	; 0x1d0
    b3e0:	str	r9, [r0]
    b3e4:	add	r2, r2, r1, lsl sl
    b3e8:	str	r0, [r2, #-400]	; 0xfffffe70
    b3ec:	bl	22d0 <newchunk.constprop.25>
    b3f0:	ldr	r3, [sp, #4]
    b3f4:	add	r2, sp, #464	; 0x1d0
    b3f8:	str	fp, [r0]
    b3fc:	ldr	r1, [sp, #40]	; 0x28
    b400:	str	r3, [r0, #12]
    b404:	add	r2, r2, r1, lsl sl
    b408:	str	r0, [r2, #-400]	; 0xfffffe70
    b40c:	bl	22d0 <newchunk.constprop.25>
    b410:	ldr	r2, [sp, #36]	; 0x24
    b414:	add	r3, sp, #464	; 0x1d0
    b418:	str	r7, [r0]
    b41c:	str	sl, [r0, #12]
    b420:	add	r2, r3, r2, lsl sl
    b424:	str	r0, [r2, #-400]	; 0xfffffe70
    b428:	bl	22d0 <newchunk.constprop.25>
    b42c:	ldr	r2, [sp, #32]
    b430:	add	r3, sp, #464	; 0x1d0
    b434:	mov	ip, #36	; 0x24
    b438:	str	ip, [r0]
    b43c:	str	r7, [r0, #12]
    b440:	add	r2, r3, r2, lsl sl
    b444:	str	r0, [r2, #-400]	; 0xfffffe70
    b448:	bl	22d0 <newchunk.constprop.25>
    b44c:	ldr	r2, [sp, #28]
    b450:	add	r3, sp, #464	; 0x1d0
    b454:	str	r9, [r0]
    b458:	add	r2, r3, r2, lsl sl
    b45c:	str	r0, [r2, #-400]	; 0xfffffe70
    b460:	bl	22d0 <newchunk.constprop.25>
    b464:	ldr	r2, [sp, #24]
    b468:	add	r3, sp, #464	; 0x1d0
    b46c:	mov	ip, #96	; 0x60
    b470:	str	ip, [r0]
    b474:	str	r4, [r0, #12]
    b478:	mov	r4, #0
    b47c:	add	r2, r3, r2, lsl sl
    b480:	str	r0, [r2, #-400]	; 0xfffffe70
    b484:	bl	22d0 <newchunk.constprop.25>
    b488:	ldr	r2, [sp, #20]
    b48c:	add	r3, sp, #464	; 0x1d0
    b490:	mov	ip, #5
    b494:	str	ip, [r0]
    b498:	add	r2, r3, r2, lsl sl
    b49c:	ldr	r3, [sp, #56]	; 0x38
    b4a0:	str	r0, [r2, #-400]	; 0xfffffe70
    b4a4:	str	r3, [r0, #12]
    b4a8:	bl	22d0 <newchunk.constprop.25>
    b4ac:	ldrd	r2, [sp, #8]
    b4b0:	str	r7, [r0]
    b4b4:	ldr	r1, [sp, #60]	; 0x3c
    b4b8:	str	r4, [r0, #12]
    b4bc:	lsl	lr, r3, sl
    b4c0:	add	r3, sp, #464	; 0x1d0
    b4c4:	add	ip, r3, lr
    b4c8:	add	lr, r2, lr
    b4cc:	str	r0, [ip, #-400]	; 0xfffffe70
    b4d0:	ldr	r4, [r1, #-400]	; 0xfffffe70
    b4d4:	ldr	ip, [sp, #64]	; 0x40
    b4d8:	ldr	r1, [sp, #76]	; 0x4c
    b4dc:	ldr	r6, [sp, #80]	; 0x50
    b4e0:	str	r0, [r6, #4]
    b4e4:	str	r0, [r4, #8]
    b4e8:	str	r0, [r1, #4]
    b4ec:	ldr	r3, [r2, #4]!
    b4f0:	cmp	r2, lr
    b4f4:	str	r3, [ip, #16]
    b4f8:	mov	ip, r3
    b4fc:	bne	b4ec <gen_protochain+0x850>
    b500:	mov	r6, #0
    b504:	str	r6, [r0, #16]
    b508:	bl	24d8 <newchunk.constprop.26>
    b50c:	ldr	r2, [pc, #452]	; b6d8 <gen_protochain+0xa3c>
    b510:	mov	r4, r0
    b514:	mov	r1, #21
    b518:	ldr	r3, [sp]
    b51c:	str	r1, [r4, #8]
    b520:	mov	r1, r4
    b524:	ldr	r0, [sp, #16]
    b528:	add	r2, pc, r2
    b52c:	ldr	ip, [sp, #68]	; 0x44
    b530:	str	r4, [r4, #96]	; 0x60
    b534:	str	r3, [r4, #20]
    b538:	add	r3, r2, r5
    b53c:	str	ip, [r4, #4]
    b540:	str	r6, [r3, #808]	; 0x328
    b544:	bl	7884 <sf_gen_and>
    b548:	b	afe8 <gen_protochain+0x34c>
    b54c:	cmp	r2, #105	; 0x69
    b550:	beq	b55c <gen_protochain+0x8c0>
    b554:	cmp	r2, #119	; 0x77
    b558:	bne	b030 <gen_protochain+0x394>
    b55c:	ldr	r0, [pc, #376]	; b6dc <gen_protochain+0xa40>
    b560:	add	r0, pc, r0
    b564:	bl	2130 <sf_bpf_error>
    b568:	mov	r0, #2048	; 0x800
    b56c:	mov	r6, #9
    b570:	bl	98c0 <gen_linktype>
    b574:	mov	r3, #19
    b578:	mov	r9, #21
    b57c:	mov	r8, #8
    b580:	mov	sl, #7
    b584:	str	r3, [sp, #12]
    b588:	str	r0, [sp, #16]
    b58c:	bl	22d0 <newchunk.constprop.25>
    b590:	ldr	r1, [pc, #328]	; b6e0 <gen_protochain+0xa44>
    b594:	mov	r2, #48	; 0x30
    b598:	mov	r3, #18
    b59c:	str	r2, [r0]
    b5a0:	str	r0, [sp, #68]	; 0x44
    b5a4:	str	r3, [sp, #20]
    b5a8:	mov	r3, #17
    b5ac:	add	r1, pc, r1
    b5b0:	ldr	r2, [r1, #796]	; 0x31c
    b5b4:	str	r3, [sp, #24]
    b5b8:	ldr	r1, [r1, #872]	; 0x368
    b5bc:	add	r2, r2, r1
    b5c0:	add	r1, r2, r6
    b5c4:	mov	fp, r2
    b5c8:	str	r2, [sp, #4]
    b5cc:	str	r1, [r0, #12]
    b5d0:	mov	r0, #16
    b5d4:	mov	r1, #15
    b5d8:	strd	r0, [sp, #28]
    b5dc:	mov	r0, #14
    b5e0:	mov	r1, #13
    b5e4:	strd	r0, [sp, #36]	; 0x24
    b5e8:	mov	r0, #12
    b5ec:	mov	r1, #11
    b5f0:	strd	r0, [sp, #44]	; 0x2c
    b5f4:	mvn	r1, #15
    b5f8:	mov	r0, #10
    b5fc:	strd	r0, [sp, #52]	; 0x34
    b600:	bl	22d0 <newchunk.constprop.25>
    b604:	mov	r2, #177	; 0xb1
    b608:	str	r0, [sp, #72]	; 0x48
    b60c:	str	r2, [r0]
    b610:	str	fp, [r0, #12]
    b614:	bl	22d0 <newchunk.constprop.25>
    b618:	ldr	r3, [sp]
    b61c:	str	r9, [r0]
    b620:	str	r7, [r0, #4]
    b624:	str	r7, [r0, #8]
    b628:	str	r0, [sp, #60]	; 0x3c
    b62c:	str	r3, [r0, #12]
    b630:	str	r0, [sp, #76]	; 0x4c
    b634:	bl	22d0 <newchunk.constprop.25>
    b638:	ldr	r2, [sp, #60]	; 0x3c
    b63c:	mov	r1, #59	; 0x3b
    b640:	mov	fp, r0
    b644:	str	r9, [r0]
    b648:	str	r7, [r0, #4]
    b64c:	str	r7, [r0, #8]
    b650:	str	r1, [r0, #12]
    b654:	str	r0, [r2, #8]
    b658:	str	r0, [sp, #80]	; 0x50
    b65c:	bl	22d0 <newchunk.constprop.25>
    b660:	mov	r2, #4
    b664:	str	r0, [sp, #84]	; 0x54
    b668:	str	r2, [r0]
    b66c:	str	r7, [r0, #12]
    b670:	str	r0, [fp, #8]
    b674:	bl	22d0 <newchunk.constprop.25>
    b678:	mov	r2, #51	; 0x33
    b67c:	mov	r3, #6
    b680:	str	r9, [r0]
    b684:	str	r7, [r0, #4]
    b688:	str	r7, [r0, #8]
    b68c:	str	r2, [r0, #12]
    b690:	str	r3, [sp, #60]	; 0x3c
    b694:	str	r0, [sp, #88]	; 0x58
    b698:	b	b324 <gen_protochain+0x688>
    b69c:	ldr	r0, [pc, #64]	; b6e4 <gen_protochain+0xa48>
    b6a0:	add	r0, pc, r0
    b6a4:	bl	2130 <sf_bpf_error>
    b6a8:	ldr	r0, [pc, #56]	; b6e8 <gen_protochain+0xa4c>
    b6ac:	add	r0, pc, r0
    b6b0:	bl	2130 <sf_bpf_error>
    b6b4:	.word	0x000336a8
    b6b8:	.word	0x00033320
    b6bc:	.word	0x000334f0
    b6c0:	.word	0x000152a0
    b6c4:	.word	0x000333f8
    b6c8:	.word	0x000333d8
    b6cc:	.word	0x00033354
    b6d0:	.word	0x000000fc
    b6d4:	.word	0x000332d0
    b6d8:	.word	0x00032e38
    b6dc:	.word	0x00015738
    b6e0:	.word	0x00032db4
    b6e4:	.word	0x000155d0
    b6e8:	.word	0x00015614

0000b6ec <gen_hostop6.constprop.9>:
    b6ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
    b6f0:	mov	r5, r0
    b6f4:	strd	r6, [sp, #8]
    b6f8:	mov	r6, r1
    b6fc:	strd	r8, [sp, #16]
    b700:	strd	sl, [sp, #24]
    b704:	str	lr, [sp, #32]
    b708:	sub	sp, sp, #4
    b70c:	cmp	r2, #4
    b710:	addls	pc, pc, r2, lsl #2
    b714:	b	b9b8 <gen_hostop6.constprop.9+0x2cc>
    b718:	b	b934 <gen_hostop6.constprop.9+0x248>
    b71c:	b	b72c <gen_hostop6.constprop.9+0x40>
    b720:	b	b9b0 <gen_hostop6.constprop.9+0x2c4>
    b724:	b	b934 <gen_hostop6.constprop.9+0x248>
    b728:	b	b980 <gen_hostop6.constprop.9+0x294>
    b72c:	mov	r8, #8
    b730:	ldr	r3, [pc, #644]	; b9bc <gen_hostop6.constprop.9+0x2d0>
    b734:	mov	r1, #0
    b738:	ldr	r4, [r6, #12]
    b73c:	ldr	r9, [r5, #12]
    b740:	add	r3, pc, r3
    b744:	ldr	r7, [r3, #872]	; 0x368
    b748:	rev	r4, r4
    b74c:	rev	r9, r9
    b750:	add	r0, r7, #12
    b754:	add	r0, r0, r8
    b758:	bl	2588 <gen_load_macplrel>
    b75c:	cmn	r4, #1
    b760:	mov	sl, r0
    b764:	beq	b794 <gen_hostop6.constprop.9+0xa8>
    b768:	bl	22d0 <newchunk.constprop.25>
    b76c:	mov	r3, #84	; 0x54
    b770:	mov	r2, sl
    b774:	str	r3, [r0]
    b778:	str	r4, [r0, #12]
    b77c:	b	b784 <gen_hostop6.constprop.9+0x98>
    b780:	mov	r2, r3
    b784:	ldr	r3, [r2, #16]
    b788:	cmp	r3, #0
    b78c:	bne	b780 <gen_hostop6.constprop.9+0x94>
    b790:	str	r0, [r2, #16]
    b794:	bl	24d8 <newchunk.constprop.26>
    b798:	mov	r4, r0
    b79c:	mov	r3, #21
    b7a0:	add	r0, r7, #8
    b7a4:	mov	r1, #0
    b7a8:	str	sl, [r4, #4]
    b7ac:	add	r0, r0, r8
    b7b0:	str	r3, [r4, #8]
    b7b4:	str	r9, [r4, #20]
    b7b8:	str	r4, [r4, #96]	; 0x60
    b7bc:	ldr	fp, [r6, #8]
    b7c0:	ldr	r9, [r5, #8]
    b7c4:	bl	2588 <gen_load_macplrel>
    b7c8:	mov	sl, r0
    b7cc:	rev	fp, fp
    b7d0:	cmn	fp, #1
    b7d4:	rev	r9, r9
    b7d8:	beq	b808 <gen_hostop6.constprop.9+0x11c>
    b7dc:	bl	22d0 <newchunk.constprop.25>
    b7e0:	mov	r3, #84	; 0x54
    b7e4:	mov	r2, sl
    b7e8:	str	r3, [r0]
    b7ec:	str	fp, [r0, #12]
    b7f0:	b	b7f8 <gen_hostop6.constprop.9+0x10c>
    b7f4:	mov	r2, r3
    b7f8:	ldr	r3, [r2, #16]
    b7fc:	cmp	r3, #0
    b800:	bne	b7f4 <gen_hostop6.constprop.9+0x108>
    b804:	str	r0, [r2, #16]
    b808:	bl	24d8 <newchunk.constprop.26>
    b80c:	mov	r3, r0
    b810:	mov	r2, #21
    b814:	str	sl, [r0, #4]
    b818:	mov	r1, r4
    b81c:	str	r2, [r0, #8]
    b820:	str	r9, [r0, #20]
    b824:	str	r0, [r3, #96]	; 0x60
    b828:	bl	7884 <sf_gen_and>
    b82c:	ldr	fp, [r6, #4]
    b830:	add	r0, r7, #4
    b834:	mov	r1, #0
    b838:	add	r0, r0, r8
    b83c:	ldr	r9, [r5, #4]
    b840:	bl	2588 <gen_load_macplrel>
    b844:	mov	sl, r0
    b848:	rev	fp, fp
    b84c:	cmn	fp, #1
    b850:	rev	r9, r9
    b854:	beq	b884 <gen_hostop6.constprop.9+0x198>
    b858:	bl	22d0 <newchunk.constprop.25>
    b85c:	mov	r3, #84	; 0x54
    b860:	mov	r2, sl
    b864:	str	r3, [r0]
    b868:	str	fp, [r0, #12]
    b86c:	b	b874 <gen_hostop6.constprop.9+0x188>
    b870:	mov	r2, r3
    b874:	ldr	r3, [r2, #16]
    b878:	cmp	r3, #0
    b87c:	bne	b870 <gen_hostop6.constprop.9+0x184>
    b880:	str	r0, [r2, #16]
    b884:	bl	24d8 <newchunk.constprop.26>
    b888:	mov	r3, r0
    b88c:	mov	r2, #21
    b890:	str	sl, [r0, #4]
    b894:	mov	r1, r4
    b898:	str	r2, [r0, #8]
    b89c:	str	r9, [r0, #20]
    b8a0:	str	r0, [r3, #96]	; 0x60
    b8a4:	bl	7884 <sf_gen_and>
    b8a8:	ldr	r3, [r6]
    b8ac:	add	r0, r8, r7
    b8b0:	mov	r1, #0
    b8b4:	ldr	r6, [r5]
    b8b8:	rev	r5, r3
    b8bc:	bl	2588 <gen_load_macplrel>
    b8c0:	cmn	r5, #1
    b8c4:	rev	r6, r6
    b8c8:	mov	r7, r0
    b8cc:	beq	b8fc <gen_hostop6.constprop.9+0x210>
    b8d0:	bl	22d0 <newchunk.constprop.25>
    b8d4:	mov	r3, #84	; 0x54
    b8d8:	mov	r2, r7
    b8dc:	str	r3, [r0]
    b8e0:	str	r5, [r0, #12]
    b8e4:	b	b8ec <gen_hostop6.constprop.9+0x200>
    b8e8:	mov	r2, r3
    b8ec:	ldr	r3, [r2, #16]
    b8f0:	cmp	r3, #0
    b8f4:	bne	b8e8 <gen_hostop6.constprop.9+0x1fc>
    b8f8:	str	r0, [r2, #16]
    b8fc:	bl	24d8 <newchunk.constprop.26>
    b900:	mov	r3, r0
    b904:	mov	r2, #21
    b908:	str	r7, [r0, #4]
    b90c:	mov	r1, r4
    b910:	str	r2, [r0, #8]
    b914:	str	r6, [r0, #20]
    b918:	str	r0, [r3, #96]	; 0x60
    b91c:	bl	7884 <sf_gen_and>
    b920:	movw	r0, #34525	; 0x86dd
    b924:	bl	98c0 <gen_linktype>
    b928:	mov	r1, r4
    b92c:	bl	7884 <sf_gen_and>
    b930:	b	b960 <gen_hostop6.constprop.9+0x274>
    b934:	mov	r2, #1
    b938:	bl	b6ec <gen_hostop6.constprop.9>
    b93c:	mov	r7, r0
    b940:	mov	r1, r6
    b944:	mov	r0, r5
    b948:	mov	r2, #2
    b94c:	bl	b6ec <gen_hostop6.constprop.9>
    b950:	mov	r4, r0
    b954:	mov	r1, r0
    b958:	mov	r0, r7
    b95c:	bl	823c <sf_gen_or>
    b960:	mov	r0, r4
    b964:	add	sp, sp, #4
    b968:	ldrd	r4, [sp]
    b96c:	ldrd	r6, [sp, #8]
    b970:	ldrd	r8, [sp, #16]
    b974:	ldrd	sl, [sp, #24]
    b978:	add	sp, sp, #32
    b97c:	pop	{pc}		; (ldr pc, [sp], #4)
    b980:	mov	r2, #1
    b984:	bl	b6ec <gen_hostop6.constprop.9>
    b988:	mov	r7, r0
    b98c:	mov	r1, r6
    b990:	mov	r0, r5
    b994:	mov	r2, #2
    b998:	bl	b6ec <gen_hostop6.constprop.9>
    b99c:	mov	r4, r0
    b9a0:	mov	r1, r0
    b9a4:	mov	r0, r7
    b9a8:	bl	7884 <sf_gen_and>
    b9ac:	b	b960 <gen_hostop6.constprop.9+0x274>
    b9b0:	mov	r8, #24
    b9b4:	b	b730 <gen_hostop6.constprop.9+0x44>
    b9b8:	bl	ebc <abort@plt>
    b9bc:	.word	0x00032c20

0000b9c0 <gen_host6>:
    b9c0:	str	r4, [sp, #-8]!
    b9c4:	str	lr, [sp, #4]
    b9c8:	ldr	lr, [pc, #652]	; bc5c <gen_host6+0x29c>
    b9cc:	ldr	r4, [sp, #8]
    b9d0:	ldr	ip, [pc, #648]	; bc60 <gen_host6+0x2a0>
    b9d4:	add	lr, pc, lr
    b9d8:	cmp	r4, #2
    b9dc:	add	ip, pc, ip
    b9e0:	movne	ip, lr
    b9e4:	cmp	r2, #40	; 0x28
    b9e8:	addls	pc, pc, r2, lsl #2
    b9ec:	b	bc58 <gen_host6+0x298>
    b9f0:	b	ba94 <gen_host6+0xd4>
    b9f4:	b	bc58 <gen_host6+0x298>
    b9f8:	b	bc38 <gen_host6+0x278>
    b9fc:	b	bc28 <gen_host6+0x268>
    ba00:	b	bc18 <gen_host6+0x258>
    ba04:	b	bc08 <gen_host6+0x248>
    ba08:	b	bbf8 <gen_host6+0x238>
    ba0c:	b	bbe8 <gen_host6+0x228>
    ba10:	b	bbd8 <gen_host6+0x218>
    ba14:	b	bbc8 <gen_host6+0x208>
    ba18:	b	bbb8 <gen_host6+0x1f8>
    ba1c:	b	bbac <gen_host6+0x1ec>
    ba20:	b	bb9c <gen_host6+0x1dc>
    ba24:	b	bb90 <gen_host6+0x1d0>
    ba28:	b	bb84 <gen_host6+0x1c4>
    ba2c:	b	bb78 <gen_host6+0x1b8>
    ba30:	b	bb6c <gen_host6+0x1ac>
    ba34:	b	ba94 <gen_host6+0xd4>
    ba38:	b	bb5c <gen_host6+0x19c>
    ba3c:	b	bb4c <gen_host6+0x18c>
    ba40:	b	bb3c <gen_host6+0x17c>
    ba44:	b	bb2c <gen_host6+0x16c>
    ba48:	b	bb1c <gen_host6+0x15c>
    ba4c:	b	bb10 <gen_host6+0x150>
    ba50:	b	bb04 <gen_host6+0x144>
    ba54:	b	baf4 <gen_host6+0x134>
    ba58:	b	bae4 <gen_host6+0x124>
    ba5c:	b	bad4 <gen_host6+0x114>
    ba60:	b	bac4 <gen_host6+0x104>
    ba64:	b	bab8 <gen_host6+0xf8>
    ba68:	b	baa8 <gen_host6+0xe8>
    ba6c:	b	bc58 <gen_host6+0x298>
    ba70:	b	bc58 <gen_host6+0x298>
    ba74:	b	bc58 <gen_host6+0x298>
    ba78:	b	bc58 <gen_host6+0x298>
    ba7c:	b	bc58 <gen_host6+0x298>
    ba80:	b	bc58 <gen_host6+0x298>
    ba84:	b	bc58 <gen_host6+0x298>
    ba88:	b	bc58 <gen_host6+0x298>
    ba8c:	b	bc58 <gen_host6+0x298>
    ba90:	b	bc48 <gen_host6+0x288>
    ba94:	mov	r2, r3
    ba98:	ldr	r4, [sp]
    ba9c:	ldr	lr, [sp, #4]
    baa0:	add	sp, sp, #8
    baa4:	b	b6ec <gen_hostop6.constprop.9>
    baa8:	ldr	r0, [pc, #436]	; bc64 <gen_host6+0x2a4>
    baac:	mov	r1, ip
    bab0:	add	r0, pc, r0
    bab4:	bl	2130 <sf_bpf_error>
    bab8:	ldr	r0, [pc, #424]	; bc68 <gen_host6+0x2a8>
    babc:	add	r0, pc, r0
    bac0:	bl	2130 <sf_bpf_error>
    bac4:	ldr	r0, [pc, #416]	; bc6c <gen_host6+0x2ac>
    bac8:	mov	r1, ip
    bacc:	add	r0, pc, r0
    bad0:	bl	2130 <sf_bpf_error>
    bad4:	ldr	r0, [pc, #404]	; bc70 <gen_host6+0x2b0>
    bad8:	mov	r1, ip
    badc:	add	r0, pc, r0
    bae0:	bl	2130 <sf_bpf_error>
    bae4:	ldr	r0, [pc, #392]	; bc74 <gen_host6+0x2b4>
    bae8:	mov	r1, ip
    baec:	add	r0, pc, r0
    baf0:	bl	2130 <sf_bpf_error>
    baf4:	ldr	r0, [pc, #380]	; bc78 <gen_host6+0x2b8>
    baf8:	mov	r1, ip
    bafc:	add	r0, pc, r0
    bb00:	bl	2130 <sf_bpf_error>
    bb04:	ldr	r0, [pc, #368]	; bc7c <gen_host6+0x2bc>
    bb08:	add	r0, pc, r0
    bb0c:	bl	2130 <sf_bpf_error>
    bb10:	ldr	r0, [pc, #360]	; bc80 <gen_host6+0x2c0>
    bb14:	add	r0, pc, r0
    bb18:	bl	2130 <sf_bpf_error>
    bb1c:	ldr	r0, [pc, #352]	; bc84 <gen_host6+0x2c4>
    bb20:	mov	r1, ip
    bb24:	add	r0, pc, r0
    bb28:	bl	2130 <sf_bpf_error>
    bb2c:	ldr	r0, [pc, #340]	; bc88 <gen_host6+0x2c8>
    bb30:	mov	r1, ip
    bb34:	add	r0, pc, r0
    bb38:	bl	2130 <sf_bpf_error>
    bb3c:	ldr	r0, [pc, #328]	; bc8c <gen_host6+0x2cc>
    bb40:	mov	r1, ip
    bb44:	add	r0, pc, r0
    bb48:	bl	2130 <sf_bpf_error>
    bb4c:	ldr	r0, [pc, #316]	; bc90 <gen_host6+0x2d0>
    bb50:	mov	r1, ip
    bb54:	add	r0, pc, r0
    bb58:	bl	2130 <sf_bpf_error>
    bb5c:	ldr	r0, [pc, #304]	; bc94 <gen_host6+0x2d4>
    bb60:	mov	r1, ip
    bb64:	add	r0, pc, r0
    bb68:	bl	2130 <sf_bpf_error>
    bb6c:	ldr	r0, [pc, #292]	; bc98 <gen_host6+0x2d8>
    bb70:	add	r0, pc, r0
    bb74:	bl	2130 <sf_bpf_error>
    bb78:	ldr	r0, [pc, #284]	; bc9c <gen_host6+0x2dc>
    bb7c:	add	r0, pc, r0
    bb80:	bl	2130 <sf_bpf_error>
    bb84:	ldr	r0, [pc, #276]	; bca0 <gen_host6+0x2e0>
    bb88:	add	r0, pc, r0
    bb8c:	bl	2130 <sf_bpf_error>
    bb90:	ldr	r0, [pc, #268]	; bca4 <gen_host6+0x2e4>
    bb94:	add	r0, pc, r0
    bb98:	bl	2130 <sf_bpf_error>
    bb9c:	ldr	r0, [pc, #260]	; bca8 <gen_host6+0x2e8>
    bba0:	mov	r1, ip
    bba4:	add	r0, pc, r0
    bba8:	bl	2130 <sf_bpf_error>
    bbac:	ldr	r0, [pc, #248]	; bcac <gen_host6+0x2ec>
    bbb0:	add	r0, pc, r0
    bbb4:	bl	2130 <sf_bpf_error>
    bbb8:	ldr	r0, [pc, #240]	; bcb0 <gen_host6+0x2f0>
    bbbc:	mov	r1, ip
    bbc0:	add	r0, pc, r0
    bbc4:	bl	2130 <sf_bpf_error>
    bbc8:	ldr	r0, [pc, #228]	; bcb4 <gen_host6+0x2f4>
    bbcc:	mov	r1, ip
    bbd0:	add	r0, pc, r0
    bbd4:	bl	2130 <sf_bpf_error>
    bbd8:	ldr	r0, [pc, #216]	; bcb8 <gen_host6+0x2f8>
    bbdc:	mov	r1, ip
    bbe0:	add	r0, pc, r0
    bbe4:	bl	2130 <sf_bpf_error>
    bbe8:	ldr	r0, [pc, #204]	; bcbc <gen_host6+0x2fc>
    bbec:	mov	r1, ip
    bbf0:	add	r0, pc, r0
    bbf4:	bl	2130 <sf_bpf_error>
    bbf8:	ldr	r0, [pc, #192]	; bcc0 <gen_host6+0x300>
    bbfc:	mov	r1, ip
    bc00:	add	r0, pc, r0
    bc04:	bl	2130 <sf_bpf_error>
    bc08:	ldr	r0, [pc, #180]	; bcc4 <gen_host6+0x304>
    bc0c:	mov	r1, ip
    bc10:	add	r0, pc, r0
    bc14:	bl	2130 <sf_bpf_error>
    bc18:	ldr	r0, [pc, #168]	; bcc8 <gen_host6+0x308>
    bc1c:	mov	r1, ip
    bc20:	add	r0, pc, r0
    bc24:	bl	2130 <sf_bpf_error>
    bc28:	ldr	r0, [pc, #156]	; bccc <gen_host6+0x30c>
    bc2c:	mov	r1, ip
    bc30:	add	r0, pc, r0
    bc34:	bl	2130 <sf_bpf_error>
    bc38:	ldr	r0, [pc, #144]	; bcd0 <gen_host6+0x310>
    bc3c:	mov	r1, ip
    bc40:	add	r0, pc, r0
    bc44:	bl	2130 <sf_bpf_error>
    bc48:	ldr	r0, [pc, #132]	; bcd4 <gen_host6+0x314>
    bc4c:	mov	r1, ip
    bc50:	add	r0, pc, r0
    bc54:	bl	2130 <sf_bpf_error>
    bc58:	bl	ebc <abort@plt>
    bc5c:	.word	0x00017390
    bc60:	.word	0x00014f44
    bc64:	.word	0x0001517c
    bc68:	.word	0x0001514c
    bc6c:	.word	0x0001511c
    bc70:	.word	0x000150ec
    bc74:	.word	0x000150bc
    bc78:	.word	0x0001508c
    bc7c:	.word	0x00014df4
    bc80:	.word	0x00014f38
    bc84:	.word	0x00014ee0
    bc88:	.word	0x00014eb0
    bc8c:	.word	0x00015024
    bc90:	.word	0x00014ff8
    bc94:	.word	0x00014fc8
    bc98:	.word	0x00014f48
    bc9c:	.word	0x00014f64
    bca0:	.word	0x00014ee8
    bca4:	.word	0x00014f00
    bca8:	.word	0x000151a8
    bcac:	.word	0x00014e74
    bcb0:	.word	0x00014e04
    bcb4:	.word	0x00014dd4
    bcb8:	.word	0x00014da4
    bcbc:	.word	0x00014d74
    bcc0:	.word	0x00014d24
    bcc4:	.word	0x00014d34
    bcc8:	.word	0x000150e4
    bccc:	.word	0x000150f8
    bcd0:	.word	0x000150a4
    bcd4:	.word	0x00015000

0000bcd8 <sf_gen_not>:
    bcd8:	ldr	r3, [r0, #44]	; 0x2c
    bcdc:	clz	r3, r3
    bce0:	lsr	r3, r3, #5
    bce4:	str	r3, [r0, #44]	; 0x2c
    bce8:	bx	lr

0000bcec <sf_gen_proto_abbrev>:
    bcec:	sub	r0, r0, #1
    bcf0:	strd	r4, [sp, #-16]!
    bcf4:	str	r6, [sp, #8]
    bcf8:	str	lr, [sp, #12]
    bcfc:	cmp	r0, #39	; 0x27
    bd00:	addls	pc, pc, r0, lsl #2
    bd04:	b	c21c <sf_gen_proto_abbrev+0x530>
    bd08:	b	c204 <sf_gen_proto_abbrev+0x518>
    bd0c:	b	c1fc <sf_gen_proto_abbrev+0x510>
    bd10:	b	c1f4 <sf_gen_proto_abbrev+0x508>
    bd14:	b	c1ec <sf_gen_proto_abbrev+0x500>
    bd18:	b	c1bc <sf_gen_proto_abbrev+0x4d0>
    bd1c:	b	c18c <sf_gen_proto_abbrev+0x4a0>
    bd20:	b	c15c <sf_gen_proto_abbrev+0x470>
    bd24:	b	c14c <sf_gen_proto_abbrev+0x460>
    bd28:	b	c13c <sf_gen_proto_abbrev+0x450>
    bd2c:	b	c12c <sf_gen_proto_abbrev+0x440>
    bd30:	b	c124 <sf_gen_proto_abbrev+0x438>
    bd34:	b	c11c <sf_gen_proto_abbrev+0x430>
    bd38:	b	c114 <sf_gen_proto_abbrev+0x428>
    bd3c:	b	c10c <sf_gen_proto_abbrev+0x420>
    bd40:	b	c104 <sf_gen_proto_abbrev+0x418>
    bd44:	b	c0fc <sf_gen_proto_abbrev+0x410>
    bd48:	b	c0f4 <sf_gen_proto_abbrev+0x408>
    bd4c:	b	c0e4 <sf_gen_proto_abbrev+0x3f8>
    bd50:	b	c0b4 <sf_gen_proto_abbrev+0x3c8>
    bd54:	b	c084 <sf_gen_proto_abbrev+0x398>
    bd58:	b	c054 <sf_gen_proto_abbrev+0x368>
    bd5c:	b	c044 <sf_gen_proto_abbrev+0x358>
    bd60:	b	c03c <sf_gen_proto_abbrev+0x350>
    bd64:	b	c034 <sf_gen_proto_abbrev+0x348>
    bd68:	b	c024 <sf_gen_proto_abbrev+0x338>
    bd6c:	b	c014 <sf_gen_proto_abbrev+0x328>
    bd70:	b	bff4 <sf_gen_proto_abbrev+0x308>
    bd74:	b	bfec <sf_gen_proto_abbrev+0x300>
    bd78:	b	bfe4 <sf_gen_proto_abbrev+0x2f8>
    bd7c:	b	bfcc <sf_gen_proto_abbrev+0x2e0>
    bd80:	b	bf4c <sf_gen_proto_abbrev+0x260>
    bd84:	b	bef0 <sf_gen_proto_abbrev+0x204>
    bd88:	b	bea0 <sf_gen_proto_abbrev+0x1b4>
    bd8c:	b	c21c <sf_gen_proto_abbrev+0x530>
    bd90:	b	c21c <sf_gen_proto_abbrev+0x530>
    bd94:	b	be38 <sf_gen_proto_abbrev+0x14c>
    bd98:	b	be14 <sf_gen_proto_abbrev+0x128>
    bd9c:	b	bdf0 <sf_gen_proto_abbrev+0x104>
    bda0:	b	bda8 <sf_gen_proto_abbrev+0xbc>
    bda4:	b	c210 <sf_gen_proto_abbrev+0x524>
    bda8:	mov	r2, #0
    bdac:	mov	r1, #26
    bdb0:	mov	r0, #18
    bdb4:	bl	9c54 <gen_proto>
    bdb8:	mov	r5, r0
    bdbc:	mov	r2, #0
    bdc0:	mov	r1, #26
    bdc4:	mov	r0, #20
    bdc8:	bl	9c54 <gen_proto>
    bdcc:	mov	r4, r0
    bdd0:	mov	r1, r0
    bdd4:	mov	r0, r5
    bdd8:	bl	823c <sf_gen_or>
    bddc:	mov	r0, r4
    bde0:	ldrd	r4, [sp]
    bde4:	ldr	r6, [sp, #8]
    bde8:	add	sp, sp, #12
    bdec:	pop	{pc}		; (ldr pc, [sp], #4)
    bdf0:	mov	r1, #26
    bdf4:	mov	r2, #0
    bdf8:	mov	r0, r1
    bdfc:	bl	9c54 <gen_proto>
    be00:	mov	r5, r0
    be04:	mov	r2, #0
    be08:	mov	r1, #26
    be0c:	mov	r0, #27
    be10:	b	bdc8 <sf_gen_proto_abbrev+0xdc>
    be14:	mov	r2, #0
    be18:	mov	r1, #26
    be1c:	mov	r0, #24
    be20:	bl	9c54 <gen_proto>
    be24:	mov	r5, r0
    be28:	mov	r2, #0
    be2c:	mov	r1, #26
    be30:	mov	r0, #25
    be34:	b	bdc8 <sf_gen_proto_abbrev+0xdc>
    be38:	mov	r2, #0
    be3c:	mov	r1, #26
    be40:	mov	r0, #24
    be44:	bl	9c54 <gen_proto>
    be48:	mov	r5, r0
    be4c:	mov	r2, #0
    be50:	mov	r1, #26
    be54:	mov	r0, #25
    be58:	bl	9c54 <gen_proto>
    be5c:	mov	r1, r0
    be60:	mov	r4, r0
    be64:	mov	r0, r5
    be68:	bl	823c <sf_gen_or>
    be6c:	mov	r1, #26
    be70:	mov	r2, #0
    be74:	mov	r0, r1
    be78:	bl	9c54 <gen_proto>
    be7c:	mov	r1, r4
    be80:	bl	823c <sf_gen_or>
    be84:	mov	r2, #0
    be88:	mov	r1, #26
    be8c:	mov	r0, #27
    be90:	bl	9c54 <gen_proto>
    be94:	mov	r1, r4
    be98:	bl	823c <sf_gen_or>
    be9c:	b	bddc <sf_gen_proto_abbrev+0xf0>
    bea0:	mov	r2, #0
    bea4:	mov	r1, #26
    bea8:	mov	r0, #15
    beac:	bl	9c54 <gen_proto>
    beb0:	mov	r5, r0
    beb4:	mov	r2, #0
    beb8:	mov	r1, #26
    bebc:	mov	r0, #16
    bec0:	bl	9c54 <gen_proto>
    bec4:	mov	r4, r0
    bec8:	mov	r1, r0
    becc:	mov	r0, r5
    bed0:	bl	823c <sf_gen_or>
    bed4:	mov	r2, #0
    bed8:	mov	r1, #26
    bedc:	mov	r0, #17
    bee0:	bl	9c54 <gen_proto>
    bee4:	mov	r1, r4
    bee8:	bl	823c <sf_gen_or>
    beec:	b	bddc <sf_gen_proto_abbrev+0xf0>
    bef0:	mov	r2, #0
    bef4:	mov	r1, #26
    bef8:	mov	r0, #16
    befc:	bl	9c54 <gen_proto>
    bf00:	mov	r5, r0
    bf04:	mov	r2, #0
    bf08:	mov	r1, #26
    bf0c:	mov	r0, #17
    bf10:	bl	9c54 <gen_proto>
    bf14:	mov	r1, r0
    bf18:	mov	r4, r0
    bf1c:	mov	r0, r5
    bf20:	bl	823c <sf_gen_or>
    bf24:	mov	r2, #0
    bf28:	mov	r1, #26
    bf2c:	mov	r0, #20
    bf30:	bl	9c54 <gen_proto>
    bf34:	mov	r1, r4
    bf38:	bl	823c <sf_gen_or>
    bf3c:	mov	r2, #0
    bf40:	mov	r1, #26
    bf44:	mov	r0, #25
    bf48:	b	be78 <sf_gen_proto_abbrev+0x18c>
    bf4c:	mov	r2, #0
    bf50:	mov	r1, #26
    bf54:	mov	r0, #15
    bf58:	bl	9c54 <gen_proto>
    bf5c:	mov	r5, r0
    bf60:	mov	r2, #0
    bf64:	mov	r1, #26
    bf68:	mov	r0, #17
    bf6c:	bl	9c54 <gen_proto>
    bf70:	mov	r4, r0
    bf74:	mov	r1, r0
    bf78:	mov	r0, r5
    bf7c:	bl	823c <sf_gen_or>
    bf80:	mov	r2, #0
    bf84:	mov	r1, #26
    bf88:	mov	r0, #18
    bf8c:	bl	9c54 <gen_proto>
    bf90:	mov	r1, r4
    bf94:	bl	823c <sf_gen_or>
    bf98:	mov	r2, #0
    bf9c:	mov	r1, #26
    bfa0:	mov	r0, #24
    bfa4:	bl	9c54 <gen_proto>
    bfa8:	mov	r1, r4
    bfac:	bl	823c <sf_gen_or>
    bfb0:	mov	r1, #26
    bfb4:	mov	r2, #0
    bfb8:	mov	r0, r1
    bfbc:	bl	9c54 <gen_proto>
    bfc0:	mov	r1, r4
    bfc4:	bl	823c <sf_gen_or>
    bfc8:	b	bddc <sf_gen_proto_abbrev+0xf0>
    bfcc:	mov	r0, #240	; 0xf0
    bfd0:	ldrd	r4, [sp]
    bfd4:	ldr	r6, [sp, #8]
    bfd8:	ldr	lr, [sp, #12]
    bfdc:	add	sp, sp, #16
    bfe0:	b	98c0 <gen_linktype>
    bfe4:	mov	r0, #224	; 0xe0
    bfe8:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    bfec:	mov	r0, #66	; 0x42
    bff0:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    bff4:	mov	r2, #0
    bff8:	mov	r1, #24
    bffc:	mov	r0, #129	; 0x81
    c000:	ldrd	r4, [sp]
    c004:	ldr	r6, [sp, #8]
    c008:	ldr	lr, [sp, #12]
    c00c:	add	sp, sp, #16
    c010:	b	9c54 <gen_proto>
    c014:	mov	r2, #0
    c018:	mov	r1, #24
    c01c:	mov	r0, #131	; 0x83
    c020:	b	c000 <sf_gen_proto_abbrev+0x314>
    c024:	mov	r2, #0
    c028:	mov	r1, #24
    c02c:	mov	r0, #130	; 0x82
    c030:	b	c000 <sf_gen_proto_abbrev+0x314>
    c034:	mov	r0, #254	; 0xfe
    c038:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c03c:	movw	r0, #33011	; 0x80f3
    c040:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c044:	mov	r2, #0
    c048:	mov	r1, #2
    c04c:	mov	r0, #112	; 0x70
    c050:	b	c000 <sf_gen_proto_abbrev+0x314>
    c054:	mov	r2, #0
    c058:	mov	r1, #2
    c05c:	mov	r0, #103	; 0x67
    c060:	bl	9c54 <gen_proto>
    c064:	mov	r4, r0
    c068:	mov	r2, #0
    c06c:	mov	r1, #17
    c070:	mov	r0, #103	; 0x67
    c074:	bl	9c54 <gen_proto>
    c078:	mov	r1, r4
    c07c:	bl	823c <sf_gen_or>
    c080:	b	bddc <sf_gen_proto_abbrev+0xf0>
    c084:	mov	r2, #0
    c088:	mov	r1, #2
    c08c:	mov	r0, #50	; 0x32
    c090:	bl	9c54 <gen_proto>
    c094:	mov	r4, r0
    c098:	mov	r2, #0
    c09c:	mov	r1, #17
    c0a0:	mov	r0, #50	; 0x32
    c0a4:	bl	9c54 <gen_proto>
    c0a8:	mov	r1, r4
    c0ac:	bl	823c <sf_gen_or>
    c0b0:	b	bddc <sf_gen_proto_abbrev+0xf0>
    c0b4:	mov	r2, #0
    c0b8:	mov	r1, #2
    c0bc:	mov	r0, #51	; 0x33
    c0c0:	bl	9c54 <gen_proto>
    c0c4:	mov	r4, r0
    c0c8:	mov	r2, #0
    c0cc:	mov	r1, #17
    c0d0:	mov	r0, #51	; 0x33
    c0d4:	bl	9c54 <gen_proto>
    c0d8:	mov	r1, r4
    c0dc:	bl	823c <sf_gen_or>
    c0e0:	b	bddc <sf_gen_proto_abbrev+0xf0>
    c0e4:	mov	r2, #0
    c0e8:	mov	r1, #17
    c0ec:	mov	r0, #58	; 0x3a
    c0f0:	b	c000 <sf_gen_proto_abbrev+0x314>
    c0f4:	movw	r0, #34525	; 0x86dd
    c0f8:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c0fc:	movw	r0, #24577	; 0x6001
    c100:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c104:	movw	r0, #24578	; 0x6002
    c108:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c10c:	movw	r0, #24583	; 0x6007
    c110:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c114:	movw	r0, #24580	; 0x6004
    c118:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c11c:	movw	r0, #24579	; 0x6003
    c120:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c124:	movw	r0, #32923	; 0x809b
    c128:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c12c:	mov	r2, #0
    c130:	mov	r1, #2
    c134:	mov	r0, #9
    c138:	b	c000 <sf_gen_proto_abbrev+0x314>
    c13c:	mov	r1, #2
    c140:	mov	r2, #0
    c144:	mov	r0, r1
    c148:	b	c000 <sf_gen_proto_abbrev+0x314>
    c14c:	mov	r2, #0
    c150:	mov	r1, #2
    c154:	mov	r0, #1
    c158:	b	c000 <sf_gen_proto_abbrev+0x314>
    c15c:	mov	r2, #0
    c160:	mov	r1, #2
    c164:	mov	r0, #17
    c168:	bl	9c54 <gen_proto>
    c16c:	mov	r1, #17
    c170:	mov	r4, r0
    c174:	mov	r2, #0
    c178:	mov	r0, r1
    c17c:	bl	9c54 <gen_proto>
    c180:	mov	r1, r4
    c184:	bl	823c <sf_gen_or>
    c188:	b	bddc <sf_gen_proto_abbrev+0xf0>
    c18c:	mov	r2, #0
    c190:	mov	r1, #2
    c194:	mov	r0, #6
    c198:	bl	9c54 <gen_proto>
    c19c:	mov	r4, r0
    c1a0:	mov	r2, #0
    c1a4:	mov	r1, #17
    c1a8:	mov	r0, #6
    c1ac:	bl	9c54 <gen_proto>
    c1b0:	mov	r1, r4
    c1b4:	bl	823c <sf_gen_or>
    c1b8:	b	bddc <sf_gen_proto_abbrev+0xf0>
    c1bc:	mov	r2, #0
    c1c0:	mov	r1, #2
    c1c4:	mov	r0, #132	; 0x84
    c1c8:	bl	9c54 <gen_proto>
    c1cc:	mov	r4, r0
    c1d0:	mov	r2, #0
    c1d4:	mov	r1, #17
    c1d8:	mov	r0, #132	; 0x84
    c1dc:	bl	9c54 <gen_proto>
    c1e0:	mov	r1, r4
    c1e4:	bl	823c <sf_gen_or>
    c1e8:	b	bddc <sf_gen_proto_abbrev+0xf0>
    c1ec:	movw	r0, #32821	; 0x8035
    c1f0:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c1f4:	movw	r0, #2054	; 0x806
    c1f8:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c1fc:	mov	r0, #2048	; 0x800
    c200:	b	bfd0 <sf_gen_proto_abbrev+0x2e4>
    c204:	ldr	r0, [pc, #20]	; c220 <sf_gen_proto_abbrev+0x534>
    c208:	add	r0, pc, r0
    c20c:	bl	2130 <sf_bpf_error>
    c210:	ldr	r0, [pc, #12]	; c224 <sf_gen_proto_abbrev+0x538>
    c214:	add	r0, pc, r0
    c218:	bl	2130 <sf_bpf_error>
    c21c:	bl	ebc <abort@plt>
    c220:	.word	0x00014b68
    c224:	.word	0x00014b80

0000c228 <sf_gen_portop>:
    c228:	ldr	r3, [pc, #1088]	; c670 <sf_gen_portop+0x448>
    c22c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    c230:	strd	r6, [sp, #8]
    c234:	mov	r6, r0
    c238:	mov	r7, r2
    c23c:	strd	r8, [sp, #16]
    c240:	mov	r8, r1
    c244:	mov	r1, #16
    c248:	str	sl, [sp, #24]
    c24c:	add	r3, pc, r3
    c250:	str	lr, [sp, #28]
    c254:	ldr	r4, [r3, #872]	; 0x368
    c258:	add	r0, r4, #9
    c25c:	bl	2588 <gen_load_macplrel>
    c260:	mov	r9, r0
    c264:	bl	24d8 <newchunk.constprop.26>
    c268:	mov	r5, r0
    c26c:	mov	r3, #21
    c270:	mov	r1, #8
    c274:	add	r0, r4, #6
    c278:	str	r9, [r5, #4]
    c27c:	str	r3, [r5, #8]
    c280:	str	r8, [r5, #20]
    c284:	str	r5, [r5, #96]	; 0x60
    c288:	bl	2588 <gen_load_macplrel>
    c28c:	mov	r8, r0
    c290:	bl	24d8 <newchunk.constprop.26>
    c294:	mov	r4, r0
    c298:	movw	r1, #8191	; 0x1fff
    c29c:	ldr	r2, [r4, #44]	; 0x2c
    c2a0:	mov	r0, #69	; 0x45
    c2a4:	mov	r3, r5
    c2a8:	str	r8, [r4, #4]
    c2ac:	str	r0, [r4, #8]
    c2b0:	str	r1, [r4, #20]
    c2b4:	str	r4, [r4, #96]	; 0x60
    c2b8:	clz	r2, r2
    c2bc:	lsr	r2, r2, #5
    c2c0:	str	r2, [r4, #44]	; 0x2c
    c2c4:	b	c2dc <sf_gen_portop+0xb4>
    c2c8:	ldr	r2, [r3, #60]	; 0x3c
    c2cc:	str	r4, [r3, #60]	; 0x3c
    c2d0:	cmp	r2, #0
    c2d4:	beq	c2f8 <sf_gen_portop+0xd0>
    c2d8:	mov	r3, r2
    c2dc:	ldr	r2, [r3, #44]	; 0x2c
    c2e0:	cmp	r2, #0
    c2e4:	beq	c2c8 <sf_gen_portop+0xa0>
    c2e8:	ldr	r2, [r3, #84]	; 0x54
    c2ec:	str	r4, [r3, #84]	; 0x54
    c2f0:	cmp	r2, #0
    c2f4:	bne	c2d8 <sf_gen_portop+0xb0>
    c2f8:	ldr	r3, [r5, #44]	; 0x2c
    c2fc:	mov	r2, r4
    c300:	clz	r3, r3
    c304:	lsr	r3, r3, #5
    c308:	str	r3, [r5, #44]	; 0x2c
    c30c:	ldr	r3, [r4, #44]	; 0x2c
    c310:	clz	r3, r3
    c314:	lsr	r3, r3, #5
    c318:	str	r3, [r4, #44]	; 0x2c
    c31c:	ldr	r3, [r2, #44]	; 0x2c
    c320:	cmp	r3, #0
    c324:	addeq	r3, r2, #60	; 0x3c
    c328:	addne	r3, r2, #84	; 0x54
    c32c:	ldr	r2, [r3]
    c330:	cmp	r2, #0
    c334:	bne	c31c <sf_gen_portop+0xf4>
    c338:	str	r5, [r3]
    c33c:	ldr	r3, [r4, #44]	; 0x2c
    c340:	clz	r3, r3
    c344:	lsr	r3, r3, #5
    c348:	str	r3, [r4, #44]	; 0x2c
    c34c:	ldr	r3, [r5, #96]	; 0x60
    c350:	str	r3, [r4, #96]	; 0x60
    c354:	cmp	r7, #4
    c358:	addls	pc, pc, r7, lsl #2
    c35c:	b	c66c <sf_gen_portop+0x444>
    c360:	b	c558 <sf_gen_portop+0x330>
    c364:	b	c624 <sf_gen_portop+0x3fc>
    c368:	b	c440 <sf_gen_portop+0x218>
    c36c:	b	c558 <sf_gen_portop+0x330>
    c370:	b	c374 <sf_gen_portop+0x14c>
    c374:	bl	307c <gen_loadx_iphdrlen>
    c378:	mov	r8, r0
    c37c:	bl	22d0 <newchunk.constprop.25>
    c380:	ldr	r3, [pc, #748]	; c674 <sf_gen_portop+0x44c>
    c384:	mov	r1, #72	; 0x48
    c388:	mov	r2, r8
    c38c:	str	r1, [r0]
    c390:	add	r3, pc, r3
    c394:	ldr	r5, [r3, #796]	; 0x31c
    c398:	ldr	r3, [r3, #872]	; 0x368
    c39c:	add	r5, r5, r3
    c3a0:	str	r5, [r0, #12]
    c3a4:	b	c3ac <sf_gen_portop+0x184>
    c3a8:	mov	r2, r3
    c3ac:	ldr	r3, [r2, #16]
    c3b0:	cmp	r3, #0
    c3b4:	bne	c3a8 <sf_gen_portop+0x180>
    c3b8:	str	r0, [r2, #16]
    c3bc:	add	r5, r5, #2
    c3c0:	bl	24d8 <newchunk.constprop.26>
    c3c4:	mov	r7, r0
    c3c8:	mov	r3, #21
    c3cc:	str	r8, [r0, #4]
    c3d0:	str	r3, [r0, #8]
    c3d4:	str	r6, [r0, #20]
    c3d8:	str	r0, [r7, #96]	; 0x60
    c3dc:	bl	307c <gen_loadx_iphdrlen>
    c3e0:	mov	r8, r0
    c3e4:	bl	22d0 <newchunk.constprop.25>
    c3e8:	mov	r3, #72	; 0x48
    c3ec:	mov	r2, r8
    c3f0:	str	r3, [r0]
    c3f4:	str	r5, [r0, #12]
    c3f8:	b	c400 <sf_gen_portop+0x1d8>
    c3fc:	mov	r2, r3
    c400:	ldr	r3, [r2, #16]
    c404:	cmp	r3, #0
    c408:	bne	c3fc <sf_gen_portop+0x1d4>
    c40c:	str	r0, [r2, #16]
    c410:	bl	24d8 <newchunk.constprop.26>
    c414:	mov	r5, r0
    c418:	mov	r3, #21
    c41c:	mov	r0, r7
    c420:	mov	r1, r5
    c424:	str	r8, [r5, #4]
    c428:	str	r3, [r5, #8]
    c42c:	str	r6, [r5, #20]
    c430:	str	r5, [r5, #96]	; 0x60
    c434:	bl	7884 <sf_gen_and>
    c438:	ldr	r0, [r5, #96]	; 0x60
    c43c:	b	c4a8 <sf_gen_portop+0x280>
    c440:	bl	307c <gen_loadx_iphdrlen>
    c444:	mov	r7, r0
    c448:	bl	22d0 <newchunk.constprop.25>
    c44c:	ldr	r1, [pc, #548]	; c678 <sf_gen_portop+0x450>
    c450:	mov	r3, #72	; 0x48
    c454:	mov	r2, r7
    c458:	str	r3, [r0]
    c45c:	add	r1, pc, r1
    c460:	ldr	r3, [r1, #796]	; 0x31c
    c464:	ldr	r1, [r1, #872]	; 0x368
    c468:	add	r3, r3, r1
    c46c:	add	r3, r3, #2
    c470:	str	r3, [r0, #12]
    c474:	b	c47c <sf_gen_portop+0x254>
    c478:	mov	r2, r3
    c47c:	ldr	r3, [r2, #16]
    c480:	cmp	r3, #0
    c484:	bne	c478 <sf_gen_portop+0x250>
    c488:	str	r0, [r2, #16]
    c48c:	bl	24d8 <newchunk.constprop.26>
    c490:	mov	r5, r0
    c494:	mov	r3, #21
    c498:	str	r7, [r0, #4]
    c49c:	str	r3, [r0, #8]
    c4a0:	str	r6, [r0, #20]
    c4a4:	str	r0, [r0, #96]	; 0x60
    c4a8:	mov	r3, r4
    c4ac:	b	c4c4 <sf_gen_portop+0x29c>
    c4b0:	ldr	r2, [r3, #60]	; 0x3c
    c4b4:	str	r0, [r3, #60]	; 0x3c
    c4b8:	cmp	r2, #0
    c4bc:	beq	c4e0 <sf_gen_portop+0x2b8>
    c4c0:	mov	r3, r2
    c4c4:	ldr	r2, [r3, #44]	; 0x2c
    c4c8:	cmp	r2, #0
    c4cc:	beq	c4b0 <sf_gen_portop+0x288>
    c4d0:	ldr	r2, [r3, #84]	; 0x54
    c4d4:	str	r0, [r3, #84]	; 0x54
    c4d8:	cmp	r2, #0
    c4dc:	bne	c4c0 <sf_gen_portop+0x298>
    c4e0:	ldr	r2, [r4, #44]	; 0x2c
    c4e4:	mov	r3, r5
    c4e8:	clz	r2, r2
    c4ec:	lsr	r2, r2, #5
    c4f0:	str	r2, [r4, #44]	; 0x2c
    c4f4:	ldr	r2, [r5, #44]	; 0x2c
    c4f8:	clz	r2, r2
    c4fc:	lsr	r2, r2, #5
    c500:	str	r2, [r5, #44]	; 0x2c
    c504:	ldr	r2, [r3, #44]	; 0x2c
    c508:	cmp	r2, #0
    c50c:	addeq	r2, r3, #60	; 0x3c
    c510:	addne	r2, r3, #84	; 0x54
    c514:	ldr	r3, [r2]
    c518:	cmp	r3, #0
    c51c:	bne	c504 <sf_gen_portop+0x2dc>
    c520:	str	r4, [r2]
    c524:	mov	r0, r5
    c528:	ldr	r3, [r5, #44]	; 0x2c
    c52c:	clz	r3, r3
    c530:	lsr	r3, r3, #5
    c534:	str	r3, [r5, #44]	; 0x2c
    c538:	ldr	r3, [r4, #96]	; 0x60
    c53c:	str	r3, [r5, #96]	; 0x60
    c540:	ldrd	r4, [sp]
    c544:	ldrd	r6, [sp, #8]
    c548:	ldrd	r8, [sp, #16]
    c54c:	ldr	sl, [sp, #24]
    c550:	add	sp, sp, #28
    c554:	pop	{pc}		; (ldr pc, [sp], #4)
    c558:	bl	307c <gen_loadx_iphdrlen>
    c55c:	mov	r8, r0
    c560:	bl	22d0 <newchunk.constprop.25>
    c564:	ldr	r3, [pc, #272]	; c67c <sf_gen_portop+0x454>
    c568:	mov	r1, #72	; 0x48
    c56c:	mov	r2, r8
    c570:	str	r1, [r0]
    c574:	add	r3, pc, r3
    c578:	ldr	r5, [r3, #796]	; 0x31c
    c57c:	ldr	r3, [r3, #872]	; 0x368
    c580:	add	r5, r5, r3
    c584:	str	r5, [r0, #12]
    c588:	b	c590 <sf_gen_portop+0x368>
    c58c:	mov	r2, r3
    c590:	ldr	r3, [r2, #16]
    c594:	cmp	r3, #0
    c598:	bne	c58c <sf_gen_portop+0x364>
    c59c:	str	r0, [r2, #16]
    c5a0:	add	r5, r5, #2
    c5a4:	bl	24d8 <newchunk.constprop.26>
    c5a8:	mov	r7, r0
    c5ac:	mov	r3, #21
    c5b0:	str	r8, [r0, #4]
    c5b4:	str	r3, [r0, #8]
    c5b8:	str	r6, [r0, #20]
    c5bc:	str	r0, [r7, #96]	; 0x60
    c5c0:	bl	307c <gen_loadx_iphdrlen>
    c5c4:	mov	r8, r0
    c5c8:	bl	22d0 <newchunk.constprop.25>
    c5cc:	mov	r3, #72	; 0x48
    c5d0:	mov	r2, r8
    c5d4:	str	r3, [r0]
    c5d8:	str	r5, [r0, #12]
    c5dc:	b	c5e4 <sf_gen_portop+0x3bc>
    c5e0:	mov	r2, r3
    c5e4:	ldr	r3, [r2, #16]
    c5e8:	cmp	r3, #0
    c5ec:	bne	c5e0 <sf_gen_portop+0x3b8>
    c5f0:	str	r0, [r2, #16]
    c5f4:	bl	24d8 <newchunk.constprop.26>
    c5f8:	mov	r5, r0
    c5fc:	mov	r3, #21
    c600:	mov	r0, r7
    c604:	mov	r1, r5
    c608:	str	r8, [r5, #4]
    c60c:	str	r3, [r5, #8]
    c610:	str	r6, [r5, #20]
    c614:	str	r5, [r5, #96]	; 0x60
    c618:	bl	823c <sf_gen_or>
    c61c:	ldr	r0, [r5, #96]	; 0x60
    c620:	b	c4a8 <sf_gen_portop+0x280>
    c624:	bl	307c <gen_loadx_iphdrlen>
    c628:	mov	r7, r0
    c62c:	bl	22d0 <newchunk.constprop.25>
    c630:	ldr	r3, [pc, #72]	; c680 <sf_gen_portop+0x458>
    c634:	mov	r1, #72	; 0x48
    c638:	mov	r2, r7
    c63c:	str	r1, [r0]
    c640:	add	r3, pc, r3
    c644:	ldr	r1, [r3, #796]	; 0x31c
    c648:	ldr	r3, [r3, #872]	; 0x368
    c64c:	add	r3, r1, r3
    c650:	str	r3, [r0, #12]
    c654:	b	c65c <sf_gen_portop+0x434>
    c658:	mov	r2, r3
    c65c:	ldr	r3, [r2, #16]
    c660:	cmp	r3, #0
    c664:	bne	c658 <sf_gen_portop+0x430>
    c668:	b	c488 <sf_gen_portop+0x260>
    c66c:	bl	ebc <abort@plt>
    c670:	.word	0x00032114
    c674:	.word	0x00031fd0
    c678:	.word	0x00031f04
    c67c:	.word	0x00031dec
    c680:	.word	0x00031d20

0000c684 <gen_port>:
    c684:	strd	r4, [sp, #-24]!	; 0xffffffe8
    c688:	mov	r4, r1
    c68c:	strd	r6, [sp, #8]
    c690:	mov	r6, r0
    c694:	mov	r0, #2048	; 0x800
    c698:	mov	r7, r2
    c69c:	str	r8, [sp, #16]
    c6a0:	str	lr, [sp, #20]
    c6a4:	bl	98c0 <gen_linktype>
    c6a8:	cmp	r4, #6
    c6ac:	mov	r5, r0
    c6b0:	beq	c8c8 <gen_port+0x244>
    c6b4:	bgt	c8c0 <gen_port+0x23c>
    c6b8:	cmn	r4, #1
    c6bc:	bne	c8ec <gen_port+0x268>
    c6c0:	mov	r2, r7
    c6c4:	mov	r1, #6
    c6c8:	mov	r0, r6
    c6cc:	bl	c228 <sf_gen_portop>
    c6d0:	mov	r8, r0
    c6d4:	mov	r2, r7
    c6d8:	mov	r1, #17
    c6dc:	mov	r0, r6
    c6e0:	bl	c228 <sf_gen_portop>
    c6e4:	ldr	r3, [r8, #44]	; 0x2c
    c6e8:	mov	r4, r0
    c6ec:	mov	r2, r8
    c6f0:	clz	r3, r3
    c6f4:	lsr	r3, r3, #5
    c6f8:	cmp	r3, #0
    c6fc:	str	r3, [r8, #44]	; 0x2c
    c700:	ldr	r1, [r0, #96]	; 0x60
    c704:	bne	c728 <gen_port+0xa4>
    c708:	ldr	r3, [r2, #60]	; 0x3c
    c70c:	str	r1, [r2, #60]	; 0x3c
    c710:	cmp	r3, #0
    c714:	beq	c738 <gen_port+0xb4>
    c718:	mov	r2, r3
    c71c:	ldr	r3, [r3, #44]	; 0x2c
    c720:	cmp	r3, #0
    c724:	beq	c708 <gen_port+0x84>
    c728:	ldr	r3, [r2, #84]	; 0x54
    c72c:	str	r1, [r2, #84]	; 0x54
    c730:	cmp	r3, #0
    c734:	bne	c718 <gen_port+0x94>
    c738:	ldr	r2, [r8, #44]	; 0x2c
    c73c:	mov	r3, r4
    c740:	clz	r2, r2
    c744:	lsr	r2, r2, #5
    c748:	str	r2, [r8, #44]	; 0x2c
    c74c:	ldr	r2, [r3, #44]	; 0x2c
    c750:	cmp	r2, #0
    c754:	addeq	r2, r3, #60	; 0x3c
    c758:	addne	r2, r3, #84	; 0x54
    c75c:	ldr	r3, [r2]
    c760:	cmp	r3, #0
    c764:	bne	c74c <gen_port+0xc8>
    c768:	str	r8, [r2]
    c76c:	mov	r1, #132	; 0x84
    c770:	mov	r2, r7
    c774:	ldr	r3, [r8, #96]	; 0x60
    c778:	mov	r0, r6
    c77c:	str	r3, [r4, #96]	; 0x60
    c780:	bl	c228 <sf_gen_portop>
    c784:	ldr	r3, [r0, #44]	; 0x2c
    c788:	mov	r2, r0
    c78c:	clz	r3, r3
    c790:	lsr	r3, r3, #5
    c794:	str	r3, [r0, #44]	; 0x2c
    c798:	ldr	r1, [r4, #96]	; 0x60
    c79c:	b	c7b8 <gen_port+0x134>
    c7a0:	ldr	r3, [r2, #60]	; 0x3c
    c7a4:	str	r1, [r2, #60]	; 0x3c
    c7a8:	cmp	r3, #0
    c7ac:	beq	c7d0 <gen_port+0x14c>
    c7b0:	mov	r2, r3
    c7b4:	ldr	r3, [r3, #44]	; 0x2c
    c7b8:	cmp	r3, #0
    c7bc:	beq	c7a0 <gen_port+0x11c>
    c7c0:	ldr	r3, [r2, #84]	; 0x54
    c7c4:	str	r1, [r2, #84]	; 0x54
    c7c8:	cmp	r3, #0
    c7cc:	bne	c7b0 <gen_port+0x12c>
    c7d0:	ldr	r2, [r0, #44]	; 0x2c
    c7d4:	mov	r3, r4
    c7d8:	clz	r2, r2
    c7dc:	lsr	r2, r2, #5
    c7e0:	str	r2, [r0, #44]	; 0x2c
    c7e4:	ldr	r2, [r3, #44]	; 0x2c
    c7e8:	cmp	r2, #0
    c7ec:	addeq	r2, r3, #60	; 0x3c
    c7f0:	addne	r2, r3, #84	; 0x54
    c7f4:	ldr	r3, [r2]
    c7f8:	cmp	r3, #0
    c7fc:	bne	c7e4 <gen_port+0x160>
    c800:	str	r0, [r2]
    c804:	ldr	r1, [r0, #96]	; 0x60
    c808:	str	r1, [r4, #96]	; 0x60
    c80c:	cmp	r5, #0
    c810:	movne	r3, r5
    c814:	bne	c830 <gen_port+0x1ac>
    c818:	b	c84c <gen_port+0x1c8>
    c81c:	ldr	r2, [r3, #60]	; 0x3c
    c820:	str	r1, [r3, #60]	; 0x3c
    c824:	cmp	r2, #0
    c828:	beq	c84c <gen_port+0x1c8>
    c82c:	mov	r3, r2
    c830:	ldr	r2, [r3, #44]	; 0x2c
    c834:	cmp	r2, #0
    c838:	beq	c81c <gen_port+0x198>
    c83c:	ldr	r2, [r3, #84]	; 0x54
    c840:	str	r1, [r3, #84]	; 0x54
    c844:	cmp	r2, #0
    c848:	bne	c82c <gen_port+0x1a8>
    c84c:	ldr	r2, [r5, #44]	; 0x2c
    c850:	mov	r3, r4
    c854:	clz	r2, r2
    c858:	lsr	r2, r2, #5
    c85c:	str	r2, [r5, #44]	; 0x2c
    c860:	ldr	r2, [r4, #44]	; 0x2c
    c864:	clz	r2, r2
    c868:	lsr	r2, r2, #5
    c86c:	str	r2, [r4, #44]	; 0x2c
    c870:	ldr	r2, [r3, #44]	; 0x2c
    c874:	cmp	r2, #0
    c878:	addeq	r2, r3, #60	; 0x3c
    c87c:	addne	r2, r3, #84	; 0x54
    c880:	ldr	r3, [r2]
    c884:	cmp	r3, #0
    c888:	bne	c870 <gen_port+0x1ec>
    c88c:	str	r5, [r2]
    c890:	mov	r0, r4
    c894:	ldr	r3, [r4, #44]	; 0x2c
    c898:	clz	r3, r3
    c89c:	lsr	r3, r3, #5
    c8a0:	str	r3, [r4, #44]	; 0x2c
    c8a4:	ldr	r3, [r5, #96]	; 0x60
    c8a8:	str	r3, [r4, #96]	; 0x60
    c8ac:	ldrd	r4, [sp]
    c8b0:	ldrd	r6, [sp, #8]
    c8b4:	ldr	r8, [sp, #16]
    c8b8:	add	sp, sp, #20
    c8bc:	pop	{pc}		; (ldr pc, [sp], #4)
    c8c0:	cmp	r4, #17
    c8c4:	bne	c8e4 <gen_port+0x260>
    c8c8:	mov	r1, r4
    c8cc:	mov	r2, r7
    c8d0:	mov	r0, r6
    c8d4:	bl	c228 <sf_gen_portop>
    c8d8:	mov	r4, r0
    c8dc:	ldr	r1, [r0, #96]	; 0x60
    c8e0:	b	c80c <gen_port+0x188>
    c8e4:	cmp	r4, #132	; 0x84
    c8e8:	beq	c8c8 <gen_port+0x244>
    c8ec:	bl	ebc <abort@plt>

0000c8f0 <sf_gen_portop6>:
    c8f0:	ldr	r3, [pc, #552]	; cb20 <sf_gen_portop6+0x230>
    c8f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    c8f8:	strd	r6, [sp, #8]
    c8fc:	mov	r7, r0
    c900:	mov	r6, r2
    c904:	strd	r8, [sp, #16]
    c908:	mov	r8, r1
    c90c:	mov	r1, #16
    c910:	str	sl, [sp, #24]
    c914:	add	r3, pc, r3
    c918:	str	lr, [sp, #28]
    c91c:	ldr	r4, [r3, #872]	; 0x368
    c920:	add	r0, r4, #6
    c924:	bl	2588 <gen_load_macplrel>
    c928:	mov	r9, r0
    c92c:	bl	24d8 <newchunk.constprop.26>
    c930:	mov	r3, #21
    c934:	mov	r5, r0
    c938:	str	r9, [r0, #4]
    c93c:	str	r3, [r0, #8]
    c940:	str	r8, [r0, #20]
    c944:	str	r0, [r0, #96]	; 0x60
    c948:	cmp	r6, #4
    c94c:	addls	pc, pc, r6, lsl #2
    c950:	b	cb1c <sf_gen_portop6+0x22c>
    c954:	b	cab4 <sf_gen_portop6+0x1c4>
    c958:	b	caac <sf_gen_portop6+0x1bc>
    c95c:	b	ca7c <sf_gen_portop6+0x18c>
    c960:	b	cab4 <sf_gen_portop6+0x1c4>
    c964:	b	c968 <sf_gen_portop6+0x78>
    c968:	mov	r1, #8
    c96c:	add	r0, r4, #40	; 0x28
    c970:	bl	2588 <gen_load_macplrel>
    c974:	mov	r9, r0
    c978:	mov	r8, #21
    c97c:	bl	24d8 <newchunk.constprop.26>
    c980:	mov	r6, r0
    c984:	mov	r1, #8
    c988:	add	r0, r4, #42	; 0x2a
    c98c:	str	r9, [r6, #4]
    c990:	str	r8, [r6, #8]
    c994:	str	r7, [r6, #20]
    c998:	str	r6, [r6, #96]	; 0x60
    c99c:	bl	2588 <gen_load_macplrel>
    c9a0:	mov	r9, r0
    c9a4:	bl	24d8 <newchunk.constprop.26>
    c9a8:	mov	r4, r0
    c9ac:	mov	r0, r6
    c9b0:	mov	r1, r4
    c9b4:	str	r9, [r4, #4]
    c9b8:	str	r8, [r4, #8]
    c9bc:	str	r7, [r4, #20]
    c9c0:	str	r4, [r4, #96]	; 0x60
    c9c4:	bl	7884 <sf_gen_and>
    c9c8:	ldr	r0, [r4, #96]	; 0x60
    c9cc:	mov	r3, r5
    c9d0:	b	c9e8 <sf_gen_portop6+0xf8>
    c9d4:	ldr	r2, [r3, #60]	; 0x3c
    c9d8:	str	r0, [r3, #60]	; 0x3c
    c9dc:	cmp	r2, #0
    c9e0:	beq	ca04 <sf_gen_portop6+0x114>
    c9e4:	mov	r3, r2
    c9e8:	ldr	r2, [r3, #44]	; 0x2c
    c9ec:	cmp	r2, #0
    c9f0:	beq	c9d4 <sf_gen_portop6+0xe4>
    c9f4:	ldr	r2, [r3, #84]	; 0x54
    c9f8:	str	r0, [r3, #84]	; 0x54
    c9fc:	cmp	r2, #0
    ca00:	bne	c9e4 <sf_gen_portop6+0xf4>
    ca04:	ldr	r2, [r5, #44]	; 0x2c
    ca08:	mov	r3, r4
    ca0c:	clz	r2, r2
    ca10:	lsr	r2, r2, #5
    ca14:	str	r2, [r5, #44]	; 0x2c
    ca18:	ldr	r2, [r4, #44]	; 0x2c
    ca1c:	clz	r2, r2
    ca20:	lsr	r2, r2, #5
    ca24:	str	r2, [r4, #44]	; 0x2c
    ca28:	ldr	r2, [r3, #44]	; 0x2c
    ca2c:	cmp	r2, #0
    ca30:	addeq	r2, r3, #60	; 0x3c
    ca34:	addne	r2, r3, #84	; 0x54
    ca38:	ldr	r3, [r2]
    ca3c:	cmp	r3, #0
    ca40:	bne	ca28 <sf_gen_portop6+0x138>
    ca44:	str	r5, [r2]
    ca48:	mov	r0, r4
    ca4c:	ldr	r3, [r4, #44]	; 0x2c
    ca50:	clz	r3, r3
    ca54:	lsr	r3, r3, #5
    ca58:	str	r3, [r4, #44]	; 0x2c
    ca5c:	ldr	r3, [r5, #96]	; 0x60
    ca60:	str	r3, [r4, #96]	; 0x60
    ca64:	ldrd	r4, [sp]
    ca68:	ldrd	r6, [sp, #8]
    ca6c:	ldrd	r8, [sp, #16]
    ca70:	ldr	sl, [sp, #24]
    ca74:	add	sp, sp, #28
    ca78:	pop	{pc}		; (ldr pc, [sp], #4)
    ca7c:	add	r0, r4, #42	; 0x2a
    ca80:	mov	r1, #8
    ca84:	bl	2588 <gen_load_macplrel>
    ca88:	mov	r6, r0
    ca8c:	bl	24d8 <newchunk.constprop.26>
    ca90:	mov	r3, #21
    ca94:	mov	r4, r0
    ca98:	str	r6, [r0, #4]
    ca9c:	str	r3, [r0, #8]
    caa0:	str	r7, [r0, #20]
    caa4:	str	r0, [r0, #96]	; 0x60
    caa8:	b	c9cc <sf_gen_portop6+0xdc>
    caac:	add	r0, r4, #40	; 0x28
    cab0:	b	ca80 <sf_gen_portop6+0x190>
    cab4:	mov	r1, #8
    cab8:	add	r0, r4, #40	; 0x28
    cabc:	bl	2588 <gen_load_macplrel>
    cac0:	mov	r9, r0
    cac4:	mov	r8, #21
    cac8:	bl	24d8 <newchunk.constprop.26>
    cacc:	mov	r6, r0
    cad0:	mov	r1, #8
    cad4:	add	r0, r4, #42	; 0x2a
    cad8:	str	r9, [r6, #4]
    cadc:	str	r8, [r6, #8]
    cae0:	str	r7, [r6, #20]
    cae4:	str	r6, [r6, #96]	; 0x60
    cae8:	bl	2588 <gen_load_macplrel>
    caec:	mov	r9, r0
    caf0:	bl	24d8 <newchunk.constprop.26>
    caf4:	mov	r4, r0
    caf8:	mov	r0, r6
    cafc:	mov	r1, r4
    cb00:	str	r9, [r4, #4]
    cb04:	str	r8, [r4, #8]
    cb08:	str	r7, [r4, #20]
    cb0c:	str	r4, [r4, #96]	; 0x60
    cb10:	bl	823c <sf_gen_or>
    cb14:	ldr	r0, [r4, #96]	; 0x60
    cb18:	b	c9cc <sf_gen_portop6+0xdc>
    cb1c:	bl	ebc <abort@plt>
    cb20:	.word	0x00031a4c

0000cb24 <gen_port6>:
    cb24:	ldr	r3, [pc, #932]	; ced0 <gen_port6+0x3ac>
    cb28:	strd	r4, [sp, #-32]!	; 0xffffffe0
    cb2c:	mov	r4, r1
    cb30:	strd	r6, [sp, #8]
    cb34:	mov	r6, r0
    cb38:	mov	r7, r2
    cb3c:	strd	r8, [sp, #16]
    cb40:	str	sl, [sp, #24]
    cb44:	add	r3, pc, r3
    cb48:	str	lr, [sp, #28]
    cb4c:	ldr	r3, [r3, #4]
    cb50:	cmp	r3, #0
    cb54:	beq	ce74 <gen_port6+0x350>
    cb58:	ldr	r3, [pc, #884]	; ced4 <gen_port6+0x3b0>
    cb5c:	mov	r1, #16
    cb60:	add	r3, pc, r3
    cb64:	ldr	r9, [r3, #872]	; 0x368
    cb68:	sub	r0, r9, #2
    cb6c:	bl	2588 <gen_load_macplrel>
    cb70:	mov	r5, r0
    cb74:	bl	22d0 <newchunk.constprop.25>
    cb78:	mov	r3, #84	; 0x54
    cb7c:	mov	r2, #1
    cb80:	str	r3, [r0]
    cb84:	mov	r3, r5
    cb88:	str	r2, [r0, #12]
    cb8c:	b	cb94 <gen_port6+0x70>
    cb90:	mov	r3, r2
    cb94:	ldr	r2, [r3, #16]
    cb98:	cmp	r2, #0
    cb9c:	bne	cb90 <gen_port6+0x6c>
    cba0:	str	r0, [r3, #16]
    cba4:	bl	24d8 <newchunk.constprop.26>
    cba8:	mov	r8, r0
    cbac:	mov	r2, #21
    cbb0:	mov	r3, #1
    cbb4:	mov	r0, r9
    cbb8:	mov	r1, #16
    cbbc:	str	r5, [r8, #4]
    cbc0:	str	r2, [r8, #8]
    cbc4:	str	r3, [r8, #20]
    cbc8:	str	r8, [r8, #96]	; 0x60
    cbcc:	bl	2588 <gen_load_macplrel>
    cbd0:	mov	r9, r0
    cbd4:	bl	22d0 <newchunk.constprop.25>
    cbd8:	mov	r3, #84	; 0x54
    cbdc:	mov	r2, #240	; 0xf0
    cbe0:	str	r3, [r0]
    cbe4:	mov	r3, r9
    cbe8:	str	r2, [r0, #12]
    cbec:	b	cbf4 <gen_port6+0xd0>
    cbf0:	mov	r3, r2
    cbf4:	ldr	r2, [r3, #16]
    cbf8:	cmp	r2, #0
    cbfc:	bne	cbf0 <gen_port6+0xcc>
    cc00:	str	r0, [r3, #16]
    cc04:	bl	24d8 <newchunk.constprop.26>
    cc08:	mov	r5, r0
    cc0c:	mov	r2, #21
    cc10:	mov	r3, #96	; 0x60
    cc14:	mov	r0, r8
    cc18:	mov	r1, r5
    cc1c:	str	r9, [r5, #4]
    cc20:	str	r2, [r5, #8]
    cc24:	str	r3, [r5, #20]
    cc28:	str	r5, [r5, #96]	; 0x60
    cc2c:	bl	7884 <sf_gen_and>
    cc30:	cmp	r4, #6
    cc34:	beq	ce58 <gen_port6+0x334>
    cc38:	bgt	ce48 <gen_port6+0x324>
    cc3c:	cmn	r4, #1
    cc40:	bne	cecc <gen_port6+0x3a8>
    cc44:	mov	r2, r7
    cc48:	mov	r1, #6
    cc4c:	mov	r0, r6
    cc50:	bl	c8f0 <sf_gen_portop6>
    cc54:	mov	r8, r0
    cc58:	mov	r2, r7
    cc5c:	mov	r1, #17
    cc60:	mov	r0, r6
    cc64:	bl	c8f0 <sf_gen_portop6>
    cc68:	ldr	r3, [r8, #44]	; 0x2c
    cc6c:	mov	r4, r0
    cc70:	mov	r2, r8
    cc74:	clz	r3, r3
    cc78:	lsr	r3, r3, #5
    cc7c:	cmp	r3, #0
    cc80:	str	r3, [r8, #44]	; 0x2c
    cc84:	ldr	r1, [r0, #96]	; 0x60
    cc88:	bne	ccac <gen_port6+0x188>
    cc8c:	ldr	r3, [r2, #60]	; 0x3c
    cc90:	str	r1, [r2, #60]	; 0x3c
    cc94:	cmp	r3, #0
    cc98:	beq	ccbc <gen_port6+0x198>
    cc9c:	mov	r2, r3
    cca0:	ldr	r3, [r3, #44]	; 0x2c
    cca4:	cmp	r3, #0
    cca8:	beq	cc8c <gen_port6+0x168>
    ccac:	ldr	r3, [r2, #84]	; 0x54
    ccb0:	str	r1, [r2, #84]	; 0x54
    ccb4:	cmp	r3, #0
    ccb8:	bne	cc9c <gen_port6+0x178>
    ccbc:	ldr	r2, [r8, #44]	; 0x2c
    ccc0:	mov	r3, r4
    ccc4:	clz	r2, r2
    ccc8:	lsr	r2, r2, #5
    cccc:	str	r2, [r8, #44]	; 0x2c
    ccd0:	ldr	r2, [r3, #44]	; 0x2c
    ccd4:	cmp	r2, #0
    ccd8:	addeq	r2, r3, #60	; 0x3c
    ccdc:	addne	r2, r3, #84	; 0x54
    cce0:	ldr	r3, [r2]
    cce4:	cmp	r3, #0
    cce8:	bne	ccd0 <gen_port6+0x1ac>
    ccec:	str	r8, [r2]
    ccf0:	mov	r1, #132	; 0x84
    ccf4:	mov	r2, r7
    ccf8:	ldr	r3, [r8, #96]	; 0x60
    ccfc:	mov	r0, r6
    cd00:	str	r3, [r4, #96]	; 0x60
    cd04:	bl	c8f0 <sf_gen_portop6>
    cd08:	ldr	r3, [r0, #44]	; 0x2c
    cd0c:	mov	r2, r0
    cd10:	clz	r3, r3
    cd14:	lsr	r3, r3, #5
    cd18:	str	r3, [r0, #44]	; 0x2c
    cd1c:	ldr	r1, [r4, #96]	; 0x60
    cd20:	b	cd3c <gen_port6+0x218>
    cd24:	ldr	r3, [r2, #60]	; 0x3c
    cd28:	str	r1, [r2, #60]	; 0x3c
    cd2c:	cmp	r3, #0
    cd30:	beq	cd54 <gen_port6+0x230>
    cd34:	mov	r2, r3
    cd38:	ldr	r3, [r3, #44]	; 0x2c
    cd3c:	cmp	r3, #0
    cd40:	beq	cd24 <gen_port6+0x200>
    cd44:	ldr	r3, [r2, #84]	; 0x54
    cd48:	str	r1, [r2, #84]	; 0x54
    cd4c:	cmp	r3, #0
    cd50:	bne	cd34 <gen_port6+0x210>
    cd54:	ldr	r2, [r0, #44]	; 0x2c
    cd58:	mov	r3, r4
    cd5c:	clz	r2, r2
    cd60:	lsr	r2, r2, #5
    cd64:	str	r2, [r0, #44]	; 0x2c
    cd68:	ldr	r2, [r3, #44]	; 0x2c
    cd6c:	cmp	r2, #0
    cd70:	addeq	r2, r3, #60	; 0x3c
    cd74:	addne	r2, r3, #84	; 0x54
    cd78:	ldr	r3, [r2]
    cd7c:	cmp	r3, #0
    cd80:	bne	cd68 <gen_port6+0x244>
    cd84:	str	r0, [r2]
    cd88:	ldr	r1, [r0, #96]	; 0x60
    cd8c:	str	r1, [r4, #96]	; 0x60
    cd90:	cmp	r5, #0
    cd94:	movne	r3, r5
    cd98:	bne	cdb4 <gen_port6+0x290>
    cd9c:	b	cdd0 <gen_port6+0x2ac>
    cda0:	ldr	r2, [r3, #60]	; 0x3c
    cda4:	str	r1, [r3, #60]	; 0x3c
    cda8:	cmp	r2, #0
    cdac:	beq	cdd0 <gen_port6+0x2ac>
    cdb0:	mov	r3, r2
    cdb4:	ldr	r2, [r3, #44]	; 0x2c
    cdb8:	cmp	r2, #0
    cdbc:	beq	cda0 <gen_port6+0x27c>
    cdc0:	ldr	r2, [r3, #84]	; 0x54
    cdc4:	str	r1, [r3, #84]	; 0x54
    cdc8:	cmp	r2, #0
    cdcc:	bne	cdb0 <gen_port6+0x28c>
    cdd0:	ldr	r2, [r5, #44]	; 0x2c
    cdd4:	mov	r3, r4
    cdd8:	clz	r2, r2
    cddc:	lsr	r2, r2, #5
    cde0:	str	r2, [r5, #44]	; 0x2c
    cde4:	ldr	r2, [r4, #44]	; 0x2c
    cde8:	clz	r2, r2
    cdec:	lsr	r2, r2, #5
    cdf0:	str	r2, [r4, #44]	; 0x2c
    cdf4:	ldr	r2, [r3, #44]	; 0x2c
    cdf8:	cmp	r2, #0
    cdfc:	addeq	r2, r3, #60	; 0x3c
    ce00:	addne	r2, r3, #84	; 0x54
    ce04:	ldr	r3, [r2]
    ce08:	cmp	r3, #0
    ce0c:	bne	cdf4 <gen_port6+0x2d0>
    ce10:	str	r5, [r2]
    ce14:	mov	r0, r4
    ce18:	ldr	r3, [r4, #44]	; 0x2c
    ce1c:	clz	r3, r3
    ce20:	lsr	r3, r3, #5
    ce24:	str	r3, [r4, #44]	; 0x2c
    ce28:	ldr	r3, [r5, #96]	; 0x60
    ce2c:	str	r3, [r4, #96]	; 0x60
    ce30:	ldrd	r4, [sp]
    ce34:	ldrd	r6, [sp, #8]
    ce38:	ldrd	r8, [sp, #16]
    ce3c:	ldr	sl, [sp, #24]
    ce40:	add	sp, sp, #28
    ce44:	pop	{pc}		; (ldr pc, [sp], #4)
    ce48:	cmp	r4, #17
    ce4c:	beq	ce58 <gen_port6+0x334>
    ce50:	cmp	r4, #132	; 0x84
    ce54:	bne	cecc <gen_port6+0x3a8>
    ce58:	mov	r1, r4
    ce5c:	mov	r2, r7
    ce60:	mov	r0, r6
    ce64:	bl	c8f0 <sf_gen_portop6>
    ce68:	mov	r4, r0
    ce6c:	ldr	r1, [r0, #96]	; 0x60
    ce70:	b	cd90 <gen_port6+0x26c>
    ce74:	ldr	r3, [pc, #92]	; ced8 <gen_port6+0x3b4>
    ce78:	add	r3, pc, r3
    ce7c:	ldr	r2, [r3, #928]	; 0x3a0
    ce80:	cmp	r2, #0
    ce84:	bne	ce98 <gen_port6+0x374>
    ce88:	movw	r0, #34525	; 0x86dd
    ce8c:	bl	8c40 <gen_linktype.part.7>
    ce90:	mov	r5, r0
    ce94:	b	cc30 <gen_port6+0x10c>
    ce98:	mov	r1, #8
    ce9c:	ldr	r0, [r3, #952]	; 0x3b8
    cea0:	bl	2588 <gen_load_macplrel>
    cea4:	mov	r8, r0
    cea8:	bl	24d8 <newchunk.constprop.26>
    ceac:	mov	r5, r0
    ceb0:	mov	r2, #21
    ceb4:	str	r8, [r0, #4]
    ceb8:	mov	r3, #87	; 0x57
    cebc:	str	r2, [r0, #8]
    cec0:	str	r3, [r0, #20]
    cec4:	str	r0, [r5, #96]	; 0x60
    cec8:	b	cc30 <gen_port6+0x10c>
    cecc:	bl	ebc <abort@plt>
    ced0:	.word	0x0003172c
    ced4:	.word	0x00031800
    ced8:	.word	0x000314e8

0000cedc <sf_gen_portrangeop>:
    cedc:	ldr	ip, [pc, #668]	; d180 <sf_gen_portrangeop+0x2a4>
    cee0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    cee4:	strd	r6, [sp, #8]
    cee8:	mov	r6, r0
    ceec:	mov	r7, r1
    cef0:	strd	r8, [sp, #16]
    cef4:	mov	r1, #16
    cef8:	mov	r9, r2
    cefc:	str	sl, [sp, #24]
    cf00:	mov	r8, r3
    cf04:	add	ip, pc, ip
    cf08:	str	lr, [sp, #28]
    cf0c:	ldr	r4, [ip, #872]	; 0x368
    cf10:	add	r0, r4, #9
    cf14:	bl	2588 <gen_load_macplrel>
    cf18:	mov	sl, r0
    cf1c:	bl	24d8 <newchunk.constprop.26>
    cf20:	mov	r5, r0
    cf24:	mov	r3, #21
    cf28:	mov	r1, #8
    cf2c:	add	r0, r4, #6
    cf30:	str	sl, [r5, #4]
    cf34:	str	r3, [r5, #8]
    cf38:	str	r9, [r5, #20]
    cf3c:	str	r5, [r5, #96]	; 0x60
    cf40:	bl	2588 <gen_load_macplrel>
    cf44:	mov	r9, r0
    cf48:	bl	24d8 <newchunk.constprop.26>
    cf4c:	mov	r4, r0
    cf50:	movw	r1, #8191	; 0x1fff
    cf54:	ldr	r3, [r4, #44]	; 0x2c
    cf58:	mov	r0, #69	; 0x45
    cf5c:	mov	r2, r5
    cf60:	str	r9, [r4, #4]
    cf64:	str	r0, [r4, #8]
    cf68:	str	r1, [r4, #20]
    cf6c:	str	r4, [r4, #96]	; 0x60
    cf70:	clz	r3, r3
    cf74:	lsr	r3, r3, #5
    cf78:	str	r3, [r4, #44]	; 0x2c
    cf7c:	b	cf94 <sf_gen_portrangeop+0xb8>
    cf80:	ldr	r3, [r2, #60]	; 0x3c
    cf84:	str	r4, [r2, #60]	; 0x3c
    cf88:	cmp	r3, #0
    cf8c:	beq	cfb0 <sf_gen_portrangeop+0xd4>
    cf90:	mov	r2, r3
    cf94:	ldr	r3, [r2, #44]	; 0x2c
    cf98:	cmp	r3, #0
    cf9c:	beq	cf80 <sf_gen_portrangeop+0xa4>
    cfa0:	ldr	r3, [r2, #84]	; 0x54
    cfa4:	str	r4, [r2, #84]	; 0x54
    cfa8:	cmp	r3, #0
    cfac:	bne	cf90 <sf_gen_portrangeop+0xb4>
    cfb0:	ldr	r3, [r5, #44]	; 0x2c
    cfb4:	mov	r1, r4
    cfb8:	clz	r3, r3
    cfbc:	lsr	r3, r3, #5
    cfc0:	str	r3, [r5, #44]	; 0x2c
    cfc4:	ldr	r2, [r4, #44]	; 0x2c
    cfc8:	clz	r2, r2
    cfcc:	lsr	r2, r2, #5
    cfd0:	str	r2, [r4, #44]	; 0x2c
    cfd4:	ldr	r3, [r1, #44]	; 0x2c
    cfd8:	cmp	r3, #0
    cfdc:	addeq	r3, r1, #60	; 0x3c
    cfe0:	addne	r3, r1, #84	; 0x54
    cfe4:	ldr	r1, [r3]
    cfe8:	cmp	r1, #0
    cfec:	bne	cfd4 <sf_gen_portrangeop+0xf8>
    cff0:	str	r5, [r3]
    cff4:	ldr	r2, [r4, #44]	; 0x2c
    cff8:	clz	r2, r2
    cffc:	lsr	r2, r2, #5
    d000:	str	r2, [r4, #44]	; 0x2c
    d004:	ldr	r3, [r5, #96]	; 0x60
    d008:	str	r3, [r4, #96]	; 0x60
    d00c:	cmp	r8, #4
    d010:	addls	pc, pc, r8, lsl #2
    d014:	b	d17c <sf_gen_portrangeop+0x2a0>
    d018:	b	d144 <sf_gen_portrangeop+0x268>
    d01c:	b	d12c <sf_gen_portrangeop+0x250>
    d020:	b	d114 <sf_gen_portrangeop+0x238>
    d024:	b	d144 <sf_gen_portrangeop+0x268>
    d028:	b	d02c <sf_gen_portrangeop+0x150>
    d02c:	mov	r2, r7
    d030:	mov	r1, r6
    d034:	mov	r0, #0
    d038:	bl	34b0 <gen_portrangeatom>
    d03c:	mov	r8, r0
    d040:	mov	r1, r6
    d044:	mov	r2, r7
    d048:	mov	r0, #2
    d04c:	bl	34b0 <gen_portrangeatom>
    d050:	mov	r5, r0
    d054:	mov	r1, r0
    d058:	mov	r0, r8
    d05c:	bl	7884 <sf_gen_and>
    d060:	mov	r3, r4
    d064:	ldr	r1, [r5, #96]	; 0x60
    d068:	b	d080 <sf_gen_portrangeop+0x1a4>
    d06c:	ldr	r2, [r3, #60]	; 0x3c
    d070:	str	r1, [r3, #60]	; 0x3c
    d074:	cmp	r2, #0
    d078:	beq	d09c <sf_gen_portrangeop+0x1c0>
    d07c:	mov	r3, r2
    d080:	ldr	r2, [r3, #44]	; 0x2c
    d084:	cmp	r2, #0
    d088:	beq	d06c <sf_gen_portrangeop+0x190>
    d08c:	ldr	r2, [r3, #84]	; 0x54
    d090:	str	r1, [r3, #84]	; 0x54
    d094:	cmp	r2, #0
    d098:	bne	d07c <sf_gen_portrangeop+0x1a0>
    d09c:	ldr	r2, [r4, #44]	; 0x2c
    d0a0:	mov	r3, r5
    d0a4:	clz	r2, r2
    d0a8:	lsr	r2, r2, #5
    d0ac:	str	r2, [r4, #44]	; 0x2c
    d0b0:	ldr	r2, [r5, #44]	; 0x2c
    d0b4:	clz	r2, r2
    d0b8:	lsr	r2, r2, #5
    d0bc:	str	r2, [r5, #44]	; 0x2c
    d0c0:	ldr	r2, [r3, #44]	; 0x2c
    d0c4:	cmp	r2, #0
    d0c8:	addeq	r2, r3, #60	; 0x3c
    d0cc:	addne	r2, r3, #84	; 0x54
    d0d0:	ldr	r3, [r2]
    d0d4:	cmp	r3, #0
    d0d8:	bne	d0c0 <sf_gen_portrangeop+0x1e4>
    d0dc:	str	r4, [r2]
    d0e0:	mov	r0, r5
    d0e4:	ldr	r3, [r5, #44]	; 0x2c
    d0e8:	clz	r3, r3
    d0ec:	lsr	r3, r3, #5
    d0f0:	str	r3, [r5, #44]	; 0x2c
    d0f4:	ldr	r3, [r4, #96]	; 0x60
    d0f8:	str	r3, [r5, #96]	; 0x60
    d0fc:	ldrd	r4, [sp]
    d100:	ldrd	r6, [sp, #8]
    d104:	ldrd	r8, [sp, #16]
    d108:	ldr	sl, [sp, #24]
    d10c:	add	sp, sp, #28
    d110:	pop	{pc}		; (ldr pc, [sp], #4)
    d114:	mov	r2, r7
    d118:	mov	r1, r6
    d11c:	mov	r0, #2
    d120:	bl	34b0 <gen_portrangeatom>
    d124:	mov	r5, r0
    d128:	b	d060 <sf_gen_portrangeop+0x184>
    d12c:	mov	r2, r7
    d130:	mov	r1, r6
    d134:	mov	r0, #0
    d138:	bl	34b0 <gen_portrangeatom>
    d13c:	mov	r5, r0
    d140:	b	d060 <sf_gen_portrangeop+0x184>
    d144:	mov	r2, r7
    d148:	mov	r1, r6
    d14c:	mov	r0, #0
    d150:	bl	34b0 <gen_portrangeatom>
    d154:	mov	r8, r0
    d158:	mov	r1, r6
    d15c:	mov	r2, r7
    d160:	mov	r0, #2
    d164:	bl	34b0 <gen_portrangeatom>
    d168:	mov	r5, r0
    d16c:	mov	r1, r0
    d170:	mov	r0, r8
    d174:	bl	823c <sf_gen_or>
    d178:	b	d060 <sf_gen_portrangeop+0x184>
    d17c:	bl	ebc <abort@plt>
    d180:	.word	0x0003145c

0000d184 <gen_portrange>:
    d184:	strd	r4, [sp, #-32]!	; 0xffffffe0
    d188:	mov	r4, r2
    d18c:	strd	r6, [sp, #8]
    d190:	mov	r7, r0
    d194:	mov	r0, #2048	; 0x800
    d198:	strd	r8, [sp, #16]
    d19c:	mov	r8, r1
    d1a0:	mov	r9, r3
    d1a4:	str	sl, [sp, #24]
    d1a8:	str	lr, [sp, #28]
    d1ac:	bl	98c0 <gen_linktype>
    d1b0:	cmp	r4, #6
    d1b4:	mov	r5, r0
    d1b8:	beq	d3e0 <gen_portrange+0x25c>
    d1bc:	bgt	d3d8 <gen_portrange+0x254>
    d1c0:	cmn	r4, #1
    d1c4:	bne	d408 <gen_portrange+0x284>
    d1c8:	mov	r3, r9
    d1cc:	mov	r2, #6
    d1d0:	mov	r1, r8
    d1d4:	mov	r0, r7
    d1d8:	bl	cedc <sf_gen_portrangeop>
    d1dc:	mov	r6, r0
    d1e0:	mov	r3, r9
    d1e4:	mov	r2, #17
    d1e8:	mov	r1, r8
    d1ec:	mov	r0, r7
    d1f0:	bl	cedc <sf_gen_portrangeop>
    d1f4:	ldr	r3, [r6, #44]	; 0x2c
    d1f8:	mov	r4, r0
    d1fc:	mov	r2, r6
    d200:	clz	r3, r3
    d204:	lsr	r3, r3, #5
    d208:	cmp	r3, #0
    d20c:	str	r3, [r6, #44]	; 0x2c
    d210:	ldr	r1, [r0, #96]	; 0x60
    d214:	bne	d238 <gen_portrange+0xb4>
    d218:	ldr	r3, [r2, #60]	; 0x3c
    d21c:	str	r1, [r2, #60]	; 0x3c
    d220:	cmp	r3, #0
    d224:	beq	d248 <gen_portrange+0xc4>
    d228:	mov	r2, r3
    d22c:	ldr	r3, [r3, #44]	; 0x2c
    d230:	cmp	r3, #0
    d234:	beq	d218 <gen_portrange+0x94>
    d238:	ldr	r3, [r2, #84]	; 0x54
    d23c:	str	r1, [r2, #84]	; 0x54
    d240:	cmp	r3, #0
    d244:	bne	d228 <gen_portrange+0xa4>
    d248:	ldr	r2, [r6, #44]	; 0x2c
    d24c:	mov	r3, r4
    d250:	clz	r2, r2
    d254:	lsr	r2, r2, #5
    d258:	str	r2, [r6, #44]	; 0x2c
    d25c:	ldr	r2, [r3, #44]	; 0x2c
    d260:	cmp	r2, #0
    d264:	addeq	r2, r3, #60	; 0x3c
    d268:	addne	r2, r3, #84	; 0x54
    d26c:	ldr	r3, [r2]
    d270:	cmp	r3, #0
    d274:	bne	d25c <gen_portrange+0xd8>
    d278:	str	r6, [r2]
    d27c:	mov	r3, r9
    d280:	mov	r1, r8
    d284:	ldr	ip, [r6, #96]	; 0x60
    d288:	mov	r2, #132	; 0x84
    d28c:	mov	r0, r7
    d290:	str	ip, [r4, #96]	; 0x60
    d294:	bl	cedc <sf_gen_portrangeop>
    d298:	ldr	r3, [r0, #44]	; 0x2c
    d29c:	mov	r2, r0
    d2a0:	clz	r3, r3
    d2a4:	lsr	r3, r3, #5
    d2a8:	str	r3, [r0, #44]	; 0x2c
    d2ac:	ldr	r1, [r4, #96]	; 0x60
    d2b0:	b	d2cc <gen_portrange+0x148>
    d2b4:	ldr	r3, [r2, #60]	; 0x3c
    d2b8:	str	r1, [r2, #60]	; 0x3c
    d2bc:	cmp	r3, #0
    d2c0:	beq	d2e4 <gen_portrange+0x160>
    d2c4:	mov	r2, r3
    d2c8:	ldr	r3, [r3, #44]	; 0x2c
    d2cc:	cmp	r3, #0
    d2d0:	beq	d2b4 <gen_portrange+0x130>
    d2d4:	ldr	r3, [r2, #84]	; 0x54
    d2d8:	str	r1, [r2, #84]	; 0x54
    d2dc:	cmp	r3, #0
    d2e0:	bne	d2c4 <gen_portrange+0x140>
    d2e4:	ldr	r2, [r0, #44]	; 0x2c
    d2e8:	mov	r3, r4
    d2ec:	clz	r2, r2
    d2f0:	lsr	r2, r2, #5
    d2f4:	str	r2, [r0, #44]	; 0x2c
    d2f8:	ldr	r2, [r3, #44]	; 0x2c
    d2fc:	cmp	r2, #0
    d300:	addeq	r2, r3, #60	; 0x3c
    d304:	addne	r2, r3, #84	; 0x54
    d308:	ldr	r3, [r2]
    d30c:	cmp	r3, #0
    d310:	bne	d2f8 <gen_portrange+0x174>
    d314:	str	r0, [r2]
    d318:	ldr	r1, [r0, #96]	; 0x60
    d31c:	str	r1, [r4, #96]	; 0x60
    d320:	cmp	r5, #0
    d324:	movne	r3, r5
    d328:	bne	d344 <gen_portrange+0x1c0>
    d32c:	b	d360 <gen_portrange+0x1dc>
    d330:	ldr	r2, [r3, #60]	; 0x3c
    d334:	str	r1, [r3, #60]	; 0x3c
    d338:	cmp	r2, #0
    d33c:	beq	d360 <gen_portrange+0x1dc>
    d340:	mov	r3, r2
    d344:	ldr	r2, [r3, #44]	; 0x2c
    d348:	cmp	r2, #0
    d34c:	beq	d330 <gen_portrange+0x1ac>
    d350:	ldr	r2, [r3, #84]	; 0x54
    d354:	str	r1, [r3, #84]	; 0x54
    d358:	cmp	r2, #0
    d35c:	bne	d340 <gen_portrange+0x1bc>
    d360:	ldr	r2, [r5, #44]	; 0x2c
    d364:	mov	r3, r4
    d368:	clz	r2, r2
    d36c:	lsr	r2, r2, #5
    d370:	str	r2, [r5, #44]	; 0x2c
    d374:	ldr	r2, [r4, #44]	; 0x2c
    d378:	clz	r2, r2
    d37c:	lsr	r2, r2, #5
    d380:	str	r2, [r4, #44]	; 0x2c
    d384:	ldr	r2, [r3, #44]	; 0x2c
    d388:	cmp	r2, #0
    d38c:	addeq	r2, r3, #60	; 0x3c
    d390:	addne	r2, r3, #84	; 0x54
    d394:	ldr	r3, [r2]
    d398:	cmp	r3, #0
    d39c:	bne	d384 <gen_portrange+0x200>
    d3a0:	str	r5, [r2]
    d3a4:	mov	r0, r4
    d3a8:	ldr	r3, [r4, #44]	; 0x2c
    d3ac:	clz	r3, r3
    d3b0:	lsr	r3, r3, #5
    d3b4:	str	r3, [r4, #44]	; 0x2c
    d3b8:	ldr	r3, [r5, #96]	; 0x60
    d3bc:	str	r3, [r4, #96]	; 0x60
    d3c0:	ldrd	r4, [sp]
    d3c4:	ldrd	r6, [sp, #8]
    d3c8:	ldrd	r8, [sp, #16]
    d3cc:	ldr	sl, [sp, #24]
    d3d0:	add	sp, sp, #28
    d3d4:	pop	{pc}		; (ldr pc, [sp], #4)
    d3d8:	cmp	r4, #17
    d3dc:	bne	d400 <gen_portrange+0x27c>
    d3e0:	mov	r2, r4
    d3e4:	mov	r1, r8
    d3e8:	mov	r3, r9
    d3ec:	mov	r0, r7
    d3f0:	bl	cedc <sf_gen_portrangeop>
    d3f4:	mov	r4, r0
    d3f8:	ldr	r1, [r0, #96]	; 0x60
    d3fc:	b	d320 <gen_portrange+0x19c>
    d400:	cmp	r4, #132	; 0x84
    d404:	beq	d3e0 <gen_portrange+0x25c>
    d408:	bl	ebc <abort@plt>

0000d40c <sf_gen_portrangeop6>:
    d40c:	ldr	ip, [pc, #456]	; d5dc <sf_gen_portrangeop6+0x1d0>
    d410:	strd	r4, [sp, #-32]!	; 0xffffffe0
    d414:	mov	r5, r3
    d418:	strd	r6, [sp, #8]
    d41c:	mov	r6, r0
    d420:	mov	r7, r1
    d424:	strd	r8, [sp, #16]
    d428:	mov	r1, #16
    d42c:	mov	r8, r2
    d430:	str	sl, [sp, #24]
    d434:	add	ip, pc, ip
    d438:	str	lr, [sp, #28]
    d43c:	ldr	r0, [ip, #872]	; 0x368
    d440:	add	r0, r0, #6
    d444:	bl	2588 <gen_load_macplrel>
    d448:	mov	r9, r0
    d44c:	bl	24d8 <newchunk.constprop.26>
    d450:	mov	r3, #21
    d454:	mov	r4, r0
    d458:	str	r9, [r0, #4]
    d45c:	str	r3, [r0, #8]
    d460:	str	r8, [r0, #20]
    d464:	str	r0, [r0, #96]	; 0x60
    d468:	cmp	r5, #4
    d46c:	addls	pc, pc, r5, lsl #2
    d470:	b	d5d8 <sf_gen_portrangeop6+0x1cc>
    d474:	b	d5a0 <sf_gen_portrangeop6+0x194>
    d478:	b	d588 <sf_gen_portrangeop6+0x17c>
    d47c:	b	d570 <sf_gen_portrangeop6+0x164>
    d480:	b	d5a0 <sf_gen_portrangeop6+0x194>
    d484:	b	d488 <sf_gen_portrangeop6+0x7c>
    d488:	mov	r2, r7
    d48c:	mov	r1, r6
    d490:	mov	r0, #0
    d494:	bl	2908 <gen_portrangeatom6>
    d498:	mov	r8, r0
    d49c:	mov	r1, r6
    d4a0:	mov	r2, r7
    d4a4:	mov	r0, #2
    d4a8:	bl	2908 <gen_portrangeatom6>
    d4ac:	mov	r5, r0
    d4b0:	mov	r1, r0
    d4b4:	mov	r0, r8
    d4b8:	bl	7884 <sf_gen_and>
    d4bc:	mov	r3, r4
    d4c0:	ldr	r1, [r5, #96]	; 0x60
    d4c4:	b	d4dc <sf_gen_portrangeop6+0xd0>
    d4c8:	ldr	r2, [r3, #60]	; 0x3c
    d4cc:	str	r1, [r3, #60]	; 0x3c
    d4d0:	cmp	r2, #0
    d4d4:	beq	d4f8 <sf_gen_portrangeop6+0xec>
    d4d8:	mov	r3, r2
    d4dc:	ldr	r2, [r3, #44]	; 0x2c
    d4e0:	cmp	r2, #0
    d4e4:	beq	d4c8 <sf_gen_portrangeop6+0xbc>
    d4e8:	ldr	r2, [r3, #84]	; 0x54
    d4ec:	str	r1, [r3, #84]	; 0x54
    d4f0:	cmp	r2, #0
    d4f4:	bne	d4d8 <sf_gen_portrangeop6+0xcc>
    d4f8:	ldr	r2, [r4, #44]	; 0x2c
    d4fc:	mov	r3, r5
    d500:	clz	r2, r2
    d504:	lsr	r2, r2, #5
    d508:	str	r2, [r4, #44]	; 0x2c
    d50c:	ldr	r2, [r5, #44]	; 0x2c
    d510:	clz	r2, r2
    d514:	lsr	r2, r2, #5
    d518:	str	r2, [r5, #44]	; 0x2c
    d51c:	ldr	r2, [r3, #44]	; 0x2c
    d520:	cmp	r2, #0
    d524:	addeq	r2, r3, #60	; 0x3c
    d528:	addne	r2, r3, #84	; 0x54
    d52c:	ldr	r3, [r2]
    d530:	cmp	r3, #0
    d534:	bne	d51c <sf_gen_portrangeop6+0x110>
    d538:	str	r4, [r2]
    d53c:	mov	r0, r5
    d540:	ldr	r3, [r5, #44]	; 0x2c
    d544:	clz	r3, r3
    d548:	lsr	r3, r3, #5
    d54c:	str	r3, [r5, #44]	; 0x2c
    d550:	ldr	r3, [r4, #96]	; 0x60
    d554:	str	r3, [r5, #96]	; 0x60
    d558:	ldrd	r4, [sp]
    d55c:	ldrd	r6, [sp, #8]
    d560:	ldrd	r8, [sp, #16]
    d564:	ldr	sl, [sp, #24]
    d568:	add	sp, sp, #28
    d56c:	pop	{pc}		; (ldr pc, [sp], #4)
    d570:	mov	r2, r7
    d574:	mov	r1, r6
    d578:	mov	r0, #2
    d57c:	bl	2908 <gen_portrangeatom6>
    d580:	mov	r5, r0
    d584:	b	d4bc <sf_gen_portrangeop6+0xb0>
    d588:	mov	r2, r7
    d58c:	mov	r1, r6
    d590:	mov	r0, #0
    d594:	bl	2908 <gen_portrangeatom6>
    d598:	mov	r5, r0
    d59c:	b	d4bc <sf_gen_portrangeop6+0xb0>
    d5a0:	mov	r2, r7
    d5a4:	mov	r1, r6
    d5a8:	mov	r0, #0
    d5ac:	bl	2908 <gen_portrangeatom6>
    d5b0:	mov	r8, r0
    d5b4:	mov	r1, r6
    d5b8:	mov	r2, r7
    d5bc:	mov	r0, #2
    d5c0:	bl	2908 <gen_portrangeatom6>
    d5c4:	mov	r5, r0
    d5c8:	mov	r1, r0
    d5cc:	mov	r0, r8
    d5d0:	bl	823c <sf_gen_or>
    d5d4:	b	d4bc <sf_gen_portrangeop6+0xb0>
    d5d8:	bl	ebc <abort@plt>
    d5dc:	.word	0x00030f2c

0000d5e0 <gen_portrange6>:
    d5e0:	ldr	ip, [pc, #952]	; d9a0 <gen_portrange6+0x3c0>
    d5e4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    d5e8:	mov	r4, r2
    d5ec:	strd	r6, [sp, #8]
    d5f0:	mov	r7, r0
    d5f4:	strd	r8, [sp, #16]
    d5f8:	mov	r9, r3
    d5fc:	mov	r8, r1
    d600:	str	sl, [sp, #24]
    d604:	add	ip, pc, ip
    d608:	str	lr, [sp, #28]
    d60c:	ldr	r3, [ip, #4]
    d610:	cmp	r3, #0
    d614:	beq	d944 <gen_portrange6+0x364>
    d618:	ldr	r3, [pc, #900]	; d9a4 <gen_portrange6+0x3c4>
    d61c:	mov	r1, #16
    d620:	add	r3, pc, r3
    d624:	ldr	sl, [r3, #872]	; 0x368
    d628:	sub	r0, sl, #2
    d62c:	bl	2588 <gen_load_macplrel>
    d630:	mov	r5, r0
    d634:	bl	22d0 <newchunk.constprop.25>
    d638:	mov	r3, #84	; 0x54
    d63c:	mov	r2, #1
    d640:	str	r3, [r0]
    d644:	mov	r3, r5
    d648:	str	r2, [r0, #12]
    d64c:	b	d654 <gen_portrange6+0x74>
    d650:	mov	r3, r2
    d654:	ldr	r2, [r3, #16]
    d658:	cmp	r2, #0
    d65c:	bne	d650 <gen_portrange6+0x70>
    d660:	str	r0, [r3, #16]
    d664:	bl	24d8 <newchunk.constprop.26>
    d668:	mov	r6, r0
    d66c:	mov	r2, #21
    d670:	mov	r3, #1
    d674:	mov	r0, sl
    d678:	mov	r1, #16
    d67c:	str	r5, [r6, #4]
    d680:	str	r2, [r6, #8]
    d684:	str	r3, [r6, #20]
    d688:	str	r6, [r6, #96]	; 0x60
    d68c:	bl	2588 <gen_load_macplrel>
    d690:	mov	sl, r0
    d694:	bl	22d0 <newchunk.constprop.25>
    d698:	mov	r3, #84	; 0x54
    d69c:	mov	r2, #240	; 0xf0
    d6a0:	str	r3, [r0]
    d6a4:	mov	r3, sl
    d6a8:	str	r2, [r0, #12]
    d6ac:	b	d6b4 <gen_portrange6+0xd4>
    d6b0:	mov	r3, r2
    d6b4:	ldr	r2, [r3, #16]
    d6b8:	cmp	r2, #0
    d6bc:	bne	d6b0 <gen_portrange6+0xd0>
    d6c0:	str	r0, [r3, #16]
    d6c4:	bl	24d8 <newchunk.constprop.26>
    d6c8:	mov	r5, r0
    d6cc:	mov	r2, #21
    d6d0:	mov	r3, #96	; 0x60
    d6d4:	mov	r0, r6
    d6d8:	mov	r1, r5
    d6dc:	str	sl, [r5, #4]
    d6e0:	str	r2, [r5, #8]
    d6e4:	str	r3, [r5, #20]
    d6e8:	str	r5, [r5, #96]	; 0x60
    d6ec:	bl	7884 <sf_gen_and>
    d6f0:	cmp	r4, #6
    d6f4:	beq	d924 <gen_portrange6+0x344>
    d6f8:	bgt	d914 <gen_portrange6+0x334>
    d6fc:	cmn	r4, #1
    d700:	bne	d99c <gen_portrange6+0x3bc>
    d704:	mov	r3, r9
    d708:	mov	r2, #6
    d70c:	mov	r1, r8
    d710:	mov	r0, r7
    d714:	bl	d40c <sf_gen_portrangeop6>
    d718:	mov	r6, r0
    d71c:	mov	r3, r9
    d720:	mov	r2, #17
    d724:	mov	r1, r8
    d728:	mov	r0, r7
    d72c:	bl	d40c <sf_gen_portrangeop6>
    d730:	ldr	r3, [r6, #44]	; 0x2c
    d734:	mov	r4, r0
    d738:	mov	r2, r6
    d73c:	clz	r3, r3
    d740:	lsr	r3, r3, #5
    d744:	cmp	r3, #0
    d748:	str	r3, [r6, #44]	; 0x2c
    d74c:	ldr	r1, [r0, #96]	; 0x60
    d750:	bne	d774 <gen_portrange6+0x194>
    d754:	ldr	r3, [r2, #60]	; 0x3c
    d758:	str	r1, [r2, #60]	; 0x3c
    d75c:	cmp	r3, #0
    d760:	beq	d784 <gen_portrange6+0x1a4>
    d764:	mov	r2, r3
    d768:	ldr	r3, [r3, #44]	; 0x2c
    d76c:	cmp	r3, #0
    d770:	beq	d754 <gen_portrange6+0x174>
    d774:	ldr	r3, [r2, #84]	; 0x54
    d778:	str	r1, [r2, #84]	; 0x54
    d77c:	cmp	r3, #0
    d780:	bne	d764 <gen_portrange6+0x184>
    d784:	ldr	r2, [r6, #44]	; 0x2c
    d788:	mov	r3, r4
    d78c:	clz	r2, r2
    d790:	lsr	r2, r2, #5
    d794:	str	r2, [r6, #44]	; 0x2c
    d798:	ldr	r2, [r3, #44]	; 0x2c
    d79c:	cmp	r2, #0
    d7a0:	addeq	r2, r3, #60	; 0x3c
    d7a4:	addne	r2, r3, #84	; 0x54
    d7a8:	ldr	r3, [r2]
    d7ac:	cmp	r3, #0
    d7b0:	bne	d798 <gen_portrange6+0x1b8>
    d7b4:	str	r6, [r2]
    d7b8:	mov	r3, r9
    d7bc:	mov	r1, r8
    d7c0:	ldr	ip, [r6, #96]	; 0x60
    d7c4:	mov	r2, #132	; 0x84
    d7c8:	mov	r0, r7
    d7cc:	str	ip, [r4, #96]	; 0x60
    d7d0:	bl	d40c <sf_gen_portrangeop6>
    d7d4:	ldr	r3, [r0, #44]	; 0x2c
    d7d8:	mov	r2, r0
    d7dc:	clz	r3, r3
    d7e0:	lsr	r3, r3, #5
    d7e4:	str	r3, [r0, #44]	; 0x2c
    d7e8:	ldr	r1, [r4, #96]	; 0x60
    d7ec:	b	d808 <gen_portrange6+0x228>
    d7f0:	ldr	r3, [r2, #60]	; 0x3c
    d7f4:	str	r1, [r2, #60]	; 0x3c
    d7f8:	cmp	r3, #0
    d7fc:	beq	d820 <gen_portrange6+0x240>
    d800:	mov	r2, r3
    d804:	ldr	r3, [r3, #44]	; 0x2c
    d808:	cmp	r3, #0
    d80c:	beq	d7f0 <gen_portrange6+0x210>
    d810:	ldr	r3, [r2, #84]	; 0x54
    d814:	str	r1, [r2, #84]	; 0x54
    d818:	cmp	r3, #0
    d81c:	bne	d800 <gen_portrange6+0x220>
    d820:	ldr	r2, [r0, #44]	; 0x2c
    d824:	mov	r3, r4
    d828:	clz	r2, r2
    d82c:	lsr	r2, r2, #5
    d830:	str	r2, [r0, #44]	; 0x2c
    d834:	ldr	r2, [r3, #44]	; 0x2c
    d838:	cmp	r2, #0
    d83c:	addeq	r2, r3, #60	; 0x3c
    d840:	addne	r2, r3, #84	; 0x54
    d844:	ldr	r3, [r2]
    d848:	cmp	r3, #0
    d84c:	bne	d834 <gen_portrange6+0x254>
    d850:	str	r0, [r2]
    d854:	ldr	r1, [r0, #96]	; 0x60
    d858:	str	r1, [r4, #96]	; 0x60
    d85c:	cmp	r5, #0
    d860:	movne	r3, r5
    d864:	bne	d880 <gen_portrange6+0x2a0>
    d868:	b	d89c <gen_portrange6+0x2bc>
    d86c:	ldr	r2, [r3, #60]	; 0x3c
    d870:	str	r1, [r3, #60]	; 0x3c
    d874:	cmp	r2, #0
    d878:	beq	d89c <gen_portrange6+0x2bc>
    d87c:	mov	r3, r2
    d880:	ldr	r2, [r3, #44]	; 0x2c
    d884:	cmp	r2, #0
    d888:	beq	d86c <gen_portrange6+0x28c>
    d88c:	ldr	r2, [r3, #84]	; 0x54
    d890:	str	r1, [r3, #84]	; 0x54
    d894:	cmp	r2, #0
    d898:	bne	d87c <gen_portrange6+0x29c>
    d89c:	ldr	r2, [r5, #44]	; 0x2c
    d8a0:	mov	r3, r4
    d8a4:	clz	r2, r2
    d8a8:	lsr	r2, r2, #5
    d8ac:	str	r2, [r5, #44]	; 0x2c
    d8b0:	ldr	r2, [r4, #44]	; 0x2c
    d8b4:	clz	r2, r2
    d8b8:	lsr	r2, r2, #5
    d8bc:	str	r2, [r4, #44]	; 0x2c
    d8c0:	ldr	r2, [r3, #44]	; 0x2c
    d8c4:	cmp	r2, #0
    d8c8:	addeq	r2, r3, #60	; 0x3c
    d8cc:	addne	r2, r3, #84	; 0x54
    d8d0:	ldr	r3, [r2]
    d8d4:	cmp	r3, #0
    d8d8:	bne	d8c0 <gen_portrange6+0x2e0>
    d8dc:	str	r5, [r2]
    d8e0:	mov	r0, r4
    d8e4:	ldr	r3, [r4, #44]	; 0x2c
    d8e8:	clz	r3, r3
    d8ec:	lsr	r3, r3, #5
    d8f0:	str	r3, [r4, #44]	; 0x2c
    d8f4:	ldr	r3, [r5, #96]	; 0x60
    d8f8:	str	r3, [r4, #96]	; 0x60
    d8fc:	ldrd	r4, [sp]
    d900:	ldrd	r6, [sp, #8]
    d904:	ldrd	r8, [sp, #16]
    d908:	ldr	sl, [sp, #24]
    d90c:	add	sp, sp, #28
    d910:	pop	{pc}		; (ldr pc, [sp], #4)
    d914:	cmp	r4, #17
    d918:	beq	d924 <gen_portrange6+0x344>
    d91c:	cmp	r4, #132	; 0x84
    d920:	bne	d99c <gen_portrange6+0x3bc>
    d924:	mov	r2, r4
    d928:	mov	r1, r8
    d92c:	mov	r3, r9
    d930:	mov	r0, r7
    d934:	bl	d40c <sf_gen_portrangeop6>
    d938:	mov	r4, r0
    d93c:	ldr	r1, [r0, #96]	; 0x60
    d940:	b	d85c <gen_portrange6+0x27c>
    d944:	ldr	r3, [pc, #92]	; d9a8 <gen_portrange6+0x3c8>
    d948:	add	r3, pc, r3
    d94c:	ldr	r2, [r3, #928]	; 0x3a0
    d950:	cmp	r2, #0
    d954:	bne	d968 <gen_portrange6+0x388>
    d958:	movw	r0, #34525	; 0x86dd
    d95c:	bl	8c40 <gen_linktype.part.7>
    d960:	mov	r5, r0
    d964:	b	d6f0 <gen_portrange6+0x110>
    d968:	mov	r1, #8
    d96c:	ldr	r0, [r3, #952]	; 0x3b8
    d970:	bl	2588 <gen_load_macplrel>
    d974:	mov	r6, r0
    d978:	bl	24d8 <newchunk.constprop.26>
    d97c:	mov	r5, r0
    d980:	mov	r2, #21
    d984:	str	r6, [r0, #4]
    d988:	mov	r3, #87	; 0x57
    d98c:	str	r2, [r0, #8]
    d990:	str	r3, [r0, #20]
    d994:	str	r0, [r5, #96]	; 0x60
    d998:	b	d6f0 <gen_portrange6+0x110>
    d99c:	bl	ebc <abort@plt>
    d9a0:	.word	0x00030c6c
    d9a4:	.word	0x00030d40
    d9a8:	.word	0x00030a18

0000d9ac <sf_gen_scode>:
    d9ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d9b0:	uxtb	r4, r1
    d9b4:	ubfx	r5, r1, #8, #8
    d9b8:	strd	r6, [sp, #8]
    d9bc:	cmp	r4, #4
    d9c0:	ubfx	r7, r1, #16, #8
    d9c4:	strd	r8, [sp, #16]
    d9c8:	strd	sl, [sp, #24]
    d9cc:	str	lr, [sp, #32]
    d9d0:	sub	sp, sp, #52	; 0x34
    d9d4:	str	r1, [sp, #20]
    d9d8:	beq	e0f0 <sf_gen_scode+0x744>
    d9dc:	mov	r9, r0
    d9e0:	bls	da94 <sf_gen_scode+0xe8>
    d9e4:	cmp	r4, #6
    d9e8:	beq	ddf4 <sf_gen_scode+0x448>
    d9ec:	bcc	dd50 <sf_gen_scode+0x3a4>
    d9f0:	cmp	r4, #7
    d9f4:	bne	db18 <sf_gen_scode+0x16c>
    d9f8:	cmp	r5, #0
    d9fc:	cmpne	r5, #7
    da00:	beq	dc00 <sf_gen_scode+0x254>
    da04:	sub	r3, r5, #5
    da08:	cmp	r3, #1
    da0c:	bhi	e1c4 <sf_gen_scode+0x818>
    da10:	add	r3, sp, #24
    da14:	add	r2, sp, #32
    da18:	add	r1, sp, #28
    da1c:	bl	12ddc <pcap_nametoportrange>
    da20:	cmp	r0, #0
    da24:	beq	e0d0 <sf_gen_scode+0x724>
    da28:	cmp	r5, #6
    da2c:	bne	de60 <sf_gen_scode+0x4b4>
    da30:	ldr	r3, [sp, #24]
    da34:	cmp	r3, #17
    da38:	beq	e1d0 <sf_gen_scode+0x824>
    da3c:	cmp	r3, #132	; 0x84
    da40:	beq	dc40 <sf_gen_scode+0x294>
    da44:	str	r5, [sp, #24]
    da48:	mov	r2, r5
    da4c:	mov	r3, r7
    da50:	ldrd	r0, [sp, #28]
    da54:	bl	d184 <gen_portrange>
    da58:	mov	r6, r0
    da5c:	mov	r3, r7
    da60:	ldr	r2, [sp, #24]
    da64:	ldrd	r0, [sp, #28]
    da68:	bl	d5e0 <gen_portrange6>
    da6c:	mov	r1, r6
    da70:	bl	823c <sf_gen_or>
    da74:	mov	r0, r6
    da78:	add	sp, sp, #52	; 0x34
    da7c:	ldrd	r4, [sp]
    da80:	ldrd	r6, [sp, #8]
    da84:	ldrd	r8, [sp, #16]
    da88:	ldrd	sl, [sp, #24]
    da8c:	add	sp, sp, #32
    da90:	pop	{pc}		; (ldr pc, [sp], #4)
    da94:	cmp	r4, #2
    da98:	beq	de1c <sf_gen_scode+0x470>
    da9c:	bhi	dd78 <sf_gen_scode+0x3cc>
    daa0:	cmp	r5, #1
    daa4:	beq	dbb0 <sf_gen_scode+0x204>
    daa8:	cmp	r5, #12
    daac:	beq	df98 <sf_gen_scode+0x5ec>
    dab0:	mvn	r2, #0
    dab4:	mvn	r3, #0
    dab8:	add	fp, sp, #32
    dabc:	strd	r2, [sp, #32]
    dac0:	strd	r2, [fp, #8]
    dac4:	bl	12c64 <pcap_nametoaddrinfo>
    dac8:	subs	sl, r0, #0
    dacc:	beq	e1a8 <sf_gen_scode+0x7fc>
    dad0:	ldr	r3, [pc, #1804]	; e1e4 <sf_gen_scode+0x838>
    dad4:	add	r3, pc, r3
    dad8:	ldr	r6, [r3, #952]	; 0x3b8
    dadc:	str	sl, [r3, #908]	; 0x38c
    dae0:	cmn	r6, #1
    dae4:	movne	r6, #0
    dae8:	moveq	r6, #1
    daec:	cmp	r5, #0
    daf0:	movne	r6, #0
    daf4:	cmp	r6, #0
    daf8:	movne	r0, #17
    dafc:	movne	r1, #2
    db00:	strdne	r0, [sp, #8]
    db04:	beq	dfb8 <sf_gen_scode+0x60c>
    db08:	mov	r8, sl
    db0c:	mov	r6, #0
    db10:	str	r5, [sp, #16]
    db14:	b	db7c <sf_gen_scode+0x1d0>
    db18:	cmp	r4, #255	; 0xff
    db1c:	bne	e1e0 <sf_gen_scode+0x834>
    db20:	ldr	r0, [pc, #1728]	; e1e8 <sf_gen_scode+0x83c>
    db24:	add	r0, pc, r0
    db28:	bl	2130 <sf_bpf_error>
    db2c:	cmp	r3, #10
    db30:	bne	db70 <sf_gen_scode+0x1c4>
    db34:	ldr	r0, [r8, #20]
    db38:	mov	r3, r7
    db3c:	mov	r1, fp
    db40:	str	r4, [sp]
    db44:	ldr	r2, [sp, #8]
    db48:	add	r0, r0, #8
    db4c:	bl	b9c0 <gen_host6>
    db50:	mov	r5, r0
    db54:	cmp	r6, #0
    db58:	moveq	r6, r5
    db5c:	beq	db70 <sf_gen_scode+0x1c4>
    db60:	mov	r0, r6
    db64:	mov	r1, r5
    db68:	mov	r6, r5
    db6c:	bl	823c <sf_gen_or>
    db70:	ldr	r8, [r8, #28]
    db74:	cmp	r8, #0
    db78:	beq	df54 <sf_gen_scode+0x5a8>
    db7c:	ldr	r3, [r8, #4]
    db80:	cmp	r3, #2
    db84:	bne	db2c <sf_gen_scode+0x180>
    db88:	ldr	r0, [r8, #20]
    db8c:	mov	r3, r7
    db90:	mvn	r1, #0
    db94:	ldr	r2, [sp, #12]
    db98:	ldr	r0, [r0, #4]
    db9c:	str	r4, [sp]
    dba0:	rev	r0, r0
    dba4:	bl	a8c0 <gen_host>
    dba8:	mov	r5, r0
    dbac:	b	db54 <sf_gen_scode+0x1a8>
    dbb0:	ldr	r3, [pc, #1588]	; e1ec <sf_gen_scode+0x840>
    dbb4:	add	r3, pc, r3
    dbb8:	ldr	r3, [r3, #876]	; 0x36c
    dbbc:	cmp	r3, #119	; 0x77
    dbc0:	beq	dd14 <sf_gen_scode+0x368>
    dbc4:	bgt	dc7c <sf_gen_scode+0x2d0>
    dbc8:	cmp	r3, #6
    dbcc:	beq	df30 <sf_gen_scode+0x584>
    dbd0:	ble	dc50 <sf_gen_scode+0x2a4>
    dbd4:	cmp	r3, #10
    dbd8:	bne	dd3c <sf_gen_scode+0x390>
    dbdc:	bl	13348 <pcap_ether_hostton>
    dbe0:	subs	r4, r0, #0
    dbe4:	beq	e158 <sf_gen_scode+0x7ac>
    dbe8:	mov	r1, r7
    dbec:	bl	7e64 <gen_fhostop>
    dbf0:	mov	r6, r0
    dbf4:	mov	r0, r4
    dbf8:	bl	d48 <free@plt>
    dbfc:	b	da74 <sf_gen_scode+0xc8>
    dc00:	add	r3, sp, #24
    dc04:	add	r2, sp, #32
    dc08:	add	r1, sp, #28
    dc0c:	bl	12ddc <pcap_nametoportrange>
    dc10:	cmp	r0, #0
    dc14:	beq	e0d0 <sf_gen_scode+0x724>
    dc18:	cmp	r5, #7
    dc1c:	bne	da28 <sf_gen_scode+0x7c>
    dc20:	ldr	r3, [sp, #24]
    dc24:	cmp	r3, #6
    dc28:	beq	e168 <sf_gen_scode+0x7bc>
    dc2c:	cmp	r3, #132	; 0x84
    dc30:	movne	r3, #17
    dc34:	movne	r5, r3
    dc38:	strne	r3, [sp, #24]
    dc3c:	bne	da48 <sf_gen_scode+0x9c>
    dc40:	ldr	r0, [pc, #1448]	; e1f0 <sf_gen_scode+0x844>
    dc44:	mov	r1, r9
    dc48:	add	r0, pc, r0
    dc4c:	bl	2130 <sf_bpf_error>
    dc50:	cmp	r3, #1
    dc54:	bne	dd44 <sf_gen_scode+0x398>
    dc58:	bl	13348 <pcap_ether_hostton>
    dc5c:	subs	r4, r0, #0
    dc60:	beq	e148 <sf_gen_scode+0x79c>
    dc64:	mov	r1, r7
    dc68:	bl	7d00 <gen_ehostop>
    dc6c:	mov	r6, r0
    dc70:	mov	r0, r4
    dc74:	bl	d48 <free@plt>
    dc78:	b	da74 <sf_gen_scode+0xc8>
    dc7c:	cmp	r3, #127	; 0x7f
    dc80:	beq	dd14 <sf_gen_scode+0x368>
    dc84:	bgt	dd04 <sf_gen_scode+0x358>
    dc88:	cmp	r3, #122	; 0x7a
    dc8c:	beq	df0c <sf_gen_scode+0x560>
    dc90:	cmp	r3, #123	; 0x7b
    dc94:	bne	dd44 <sf_gen_scode+0x398>
    dc98:	ldr	r3, [pc, #1364]	; e1f4 <sf_gen_scode+0x848>
    dc9c:	add	r3, pc, r3
    dca0:	ldr	r3, [r3, #924]	; 0x39c
    dca4:	cmp	r3, #0
    dca8:	beq	dd44 <sf_gen_scode+0x398>
    dcac:	mov	r2, #65280	; 0xff00
    dcb0:	mov	r1, #8
    dcb4:	mov	r0, #4
    dcb8:	bl	5ad8 <gen_cmp.constprop.20>
    dcbc:	mov	r4, r0
    dcc0:	mov	r0, r9
    dcc4:	ldr	r3, [r4, #44]	; 0x2c
    dcc8:	clz	r3, r3
    dccc:	lsr	r3, r3, #5
    dcd0:	str	r3, [r4, #44]	; 0x2c
    dcd4:	bl	13348 <pcap_ether_hostton>
    dcd8:	subs	r5, r0, #0
    dcdc:	beq	e148 <sf_gen_scode+0x79c>
    dce0:	mov	r1, r7
    dce4:	bl	7d00 <gen_ehostop>
    dce8:	mov	r1, r0
    dcec:	mov	r6, r0
    dcf0:	mov	r0, r4
    dcf4:	bl	7884 <sf_gen_and>
    dcf8:	mov	r0, r5
    dcfc:	bl	d48 <free@plt>
    dd00:	b	da74 <sf_gen_scode+0xc8>
    dd04:	cmp	r3, #163	; 0xa3
    dd08:	beq	dd14 <sf_gen_scode+0x368>
    dd0c:	cmp	r3, #192	; 0xc0
    dd10:	bne	dd44 <sf_gen_scode+0x398>
    dd14:	mov	r0, r9
    dd18:	bl	13348 <pcap_ether_hostton>
    dd1c:	subs	r4, r0, #0
    dd20:	beq	e128 <sf_gen_scode+0x77c>
    dd24:	mov	r1, r7
    dd28:	bl	870c <gen_wlanhostop>
    dd2c:	mov	r6, r0
    dd30:	mov	r0, r4
    dd34:	bl	d48 <free@plt>
    dd38:	b	da74 <sf_gen_scode+0xc8>
    dd3c:	cmp	r3, #105	; 0x69
    dd40:	beq	dd14 <sf_gen_scode+0x368>
    dd44:	ldr	r0, [pc, #1196]	; e1f8 <sf_gen_scode+0x84c>
    dd48:	add	r0, pc, r0
    dd4c:	bl	2130 <sf_bpf_error>
    dd50:	mov	r1, r5
    dd54:	bl	2170 <lookup_proto>
    dd58:	cmp	r0, #0
    dd5c:	str	r0, [sp, #24]
    dd60:	blt	e0fc <sf_gen_scode+0x750>
    dd64:	mov	r2, r7
    dd68:	mov	r1, r5
    dd6c:	bl	9c54 <gen_proto>
    dd70:	mov	r6, r0
    dd74:	b	da74 <sf_gen_scode+0xc8>
    dd78:	cmp	r5, #0
    dd7c:	cmpne	r5, #7
    dd80:	beq	dec0 <sf_gen_scode+0x514>
    dd84:	sub	r3, r5, #5
    dd88:	cmp	r3, #1
    dd8c:	bhi	e10c <sf_gen_scode+0x760>
    dd90:	add	r2, sp, #24
    dd94:	add	r1, sp, #32
    dd98:	bl	12ce8 <pcap_nametoport>
    dd9c:	cmp	r0, #0
    dda0:	beq	e0e0 <sf_gen_scode+0x734>
    dda4:	cmp	r5, #6
    dda8:	bne	de90 <sf_gen_scode+0x4e4>
    ddac:	ldr	r3, [sp, #24]
    ddb0:	cmp	r3, #17
    ddb4:	beq	e188 <sf_gen_scode+0x7dc>
    ddb8:	cmp	r3, #132	; 0x84
    ddbc:	beq	defc <sf_gen_scode+0x550>
    ddc0:	str	r5, [sp, #24]
    ddc4:	mov	r1, r5
    ddc8:	mov	r2, r7
    ddcc:	ldr	r0, [sp, #32]
    ddd0:	bl	c684 <gen_port>
    ddd4:	mov	r6, r0
    ddd8:	mov	r2, r7
    dddc:	ldr	r1, [sp, #24]
    dde0:	ldr	r0, [sp, #32]
    dde4:	bl	cb24 <gen_port6>
    dde8:	mov	r1, r6
    ddec:	bl	823c <sf_gen_or>
    ddf0:	b	da74 <sf_gen_scode+0xc8>
    ddf4:	mov	r1, r5
    ddf8:	bl	2170 <lookup_proto>
    ddfc:	cmp	r0, #0
    de00:	str	r0, [sp, #24]
    de04:	blt	e0fc <sf_gen_scode+0x750>
    de08:	mov	r2, r7
    de0c:	mov	r1, r5
    de10:	bl	ac9c <gen_protochain>
    de14:	mov	r6, r0
    de18:	b	da74 <sf_gen_scode+0xc8>
    de1c:	bl	12cc8 <pcap_nametonetaddr>
    de20:	cmp	r0, #0
    de24:	beq	e118 <sf_gen_scode+0x76c>
    de28:	tst	r0, #-16777216	; 0xff000000
    de2c:	mvn	r1, #0
    de30:	bne	de44 <sf_gen_scode+0x498>
    de34:	lsl	r0, r0, #8
    de38:	lsl	r1, r1, #8
    de3c:	tst	r0, #-16777216	; 0xff000000
    de40:	beq	de34 <sf_gen_scode+0x488>
    de44:	mov	ip, #2
    de48:	mov	r3, r7
    de4c:	mov	r2, r5
    de50:	str	ip, [sp]
    de54:	bl	a8c0 <gen_host>
    de58:	mov	r6, r0
    de5c:	b	da74 <sf_gen_scode+0xc8>
    de60:	cmp	r5, #5
    de64:	ldrne	r5, [sp, #24]
    de68:	bne	da48 <sf_gen_scode+0x9c>
    de6c:	ldr	r3, [sp, #24]
    de70:	cmp	r3, #17
    de74:	beq	e1d0 <sf_gen_scode+0x824>
    de78:	cmp	r3, #6
    de7c:	beq	e168 <sf_gen_scode+0x7bc>
    de80:	mov	r3, #132	; 0x84
    de84:	mov	r5, r3
    de88:	str	r3, [sp, #24]
    de8c:	b	da48 <sf_gen_scode+0x9c>
    de90:	cmp	r5, #5
    de94:	ldrne	r5, [sp, #24]
    de98:	bne	ddc4 <sf_gen_scode+0x418>
    de9c:	ldr	r3, [sp, #24]
    dea0:	cmp	r3, #17
    dea4:	beq	e188 <sf_gen_scode+0x7dc>
    dea8:	cmp	r3, #6
    deac:	beq	e198 <sf_gen_scode+0x7ec>
    deb0:	mov	r3, #132	; 0x84
    deb4:	mov	r5, r3
    deb8:	str	r3, [sp, #24]
    debc:	b	ddc4 <sf_gen_scode+0x418>
    dec0:	add	r2, sp, #24
    dec4:	add	r1, sp, #32
    dec8:	bl	12ce8 <pcap_nametoport>
    decc:	cmp	r0, #0
    ded0:	beq	e0e0 <sf_gen_scode+0x734>
    ded4:	cmp	r5, #7
    ded8:	bne	dda4 <sf_gen_scode+0x3f8>
    dedc:	ldr	r3, [sp, #24]
    dee0:	cmp	r3, #6
    dee4:	beq	e198 <sf_gen_scode+0x7ec>
    dee8:	cmp	r3, #132	; 0x84
    deec:	movne	r3, #17
    def0:	movne	r5, r3
    def4:	strne	r3, [sp, #24]
    def8:	bne	ddc4 <sf_gen_scode+0x418>
    defc:	ldr	r0, [pc, #760]	; e1fc <sf_gen_scode+0x850>
    df00:	mov	r1, r9
    df04:	add	r0, pc, r0
    df08:	bl	2130 <sf_bpf_error>
    df0c:	bl	13348 <pcap_ether_hostton>
    df10:	subs	r4, r0, #0
    df14:	beq	e178 <sf_gen_scode+0x7cc>
    df18:	mov	r1, r7
    df1c:	bl	80f4 <gen_ipfchostop>
    df20:	mov	r6, r0
    df24:	mov	r0, r4
    df28:	bl	d48 <free@plt>
    df2c:	b	da74 <sf_gen_scode+0xc8>
    df30:	bl	13348 <pcap_ether_hostton>
    df34:	subs	r4, r0, #0
    df38:	beq	e138 <sf_gen_scode+0x78c>
    df3c:	mov	r1, r7
    df40:	bl	7fac <gen_thostop>
    df44:	mov	r6, r0
    df48:	mov	r0, r4
    df4c:	bl	d48 <free@plt>
    df50:	b	da74 <sf_gen_scode+0xc8>
    df54:	ldr	r5, [sp, #16]
    df58:	mov	r2, #0
    df5c:	mov	r0, sl
    df60:	ldr	r3, [pc, #664]	; e200 <sf_gen_scode+0x854>
    df64:	add	r3, pc, r3
    df68:	str	r2, [r3, #908]	; 0x38c
    df6c:	bl	e80 <freeaddrinfo@plt>
    df70:	cmp	r6, #0
    df74:	bne	da74 <sf_gen_scode+0xc8>
    df78:	cmp	r5, #0
    df7c:	bne	e1b8 <sf_gen_scode+0x80c>
    df80:	ldr	r2, [pc, #636]	; e204 <sf_gen_scode+0x858>
    df84:	add	r2, pc, r2
    df88:	ldr	r0, [pc, #632]	; e208 <sf_gen_scode+0x85c>
    df8c:	mov	r1, r9
    df90:	add	r0, pc, r0
    df94:	bl	2130 <sf_bpf_error>
    df98:	bl	13434 <__pcap_nametodnaddr>
    df9c:	mov	r3, r7
    dfa0:	mov	r2, r5
    dfa4:	str	r4, [sp]
    dfa8:	mov	r1, #0
    dfac:	bl	a8c0 <gen_host>
    dfb0:	mov	r6, r0
    dfb4:	b	da74 <sf_gen_scode+0xc8>
    dfb8:	cmp	r5, #2
    dfbc:	moveq	r5, sl
    dfc0:	beq	dfd4 <sf_gen_scode+0x628>
    dfc4:	b	e024 <sf_gen_scode+0x678>
    dfc8:	ldr	r5, [r5, #28]
    dfcc:	cmp	r5, #0
    dfd0:	beq	e0a8 <sf_gen_scode+0x6fc>
    dfd4:	ldr	r2, [r5, #4]
    dfd8:	cmp	r2, #2
    dfdc:	bne	dfc8 <sf_gen_scode+0x61c>
    dfe0:	ldr	r0, [r5, #20]
    dfe4:	mov	r3, r7
    dfe8:	mvn	r1, #0
    dfec:	ldr	r0, [r0, #4]
    dff0:	str	r4, [sp]
    dff4:	rev	r0, r0
    dff8:	bl	a8c0 <gen_host>
    dffc:	cmp	r6, #0
    e000:	mov	r8, r0
    e004:	beq	e01c <sf_gen_scode+0x670>
    e008:	mov	r0, r6
    e00c:	mov	r1, r8
    e010:	bl	823c <sf_gen_or>
    e014:	mov	r6, r8
    e018:	b	dfc8 <sf_gen_scode+0x61c>
    e01c:	mov	r6, r0
    e020:	b	dfc8 <sf_gen_scode+0x61c>
    e024:	cmp	r5, #17
    e028:	strne	r5, [sp, #8]
    e02c:	strne	r5, [sp, #12]
    e030:	bne	db08 <sf_gen_scode+0x15c>
    e034:	mov	r8, sl
    e038:	mov	r6, #0
    e03c:	str	r5, [sp, #8]
    e040:	b	e050 <sf_gen_scode+0x6a4>
    e044:	ldr	r8, [r8, #28]
    e048:	cmp	r8, #0
    e04c:	beq	e0a0 <sf_gen_scode+0x6f4>
    e050:	ldr	r3, [r8, #4]
    e054:	cmp	r3, #10
    e058:	bne	e044 <sf_gen_scode+0x698>
    e05c:	ldr	r0, [r8, #20]
    e060:	mov	r3, r7
    e064:	mov	r2, #17
    e068:	mov	r1, fp
    e06c:	str	r4, [sp]
    e070:	add	r0, r0, #8
    e074:	bl	b9c0 <gen_host6>
    e078:	cmp	r6, #0
    e07c:	mov	r5, r0
    e080:	beq	e098 <sf_gen_scode+0x6ec>
    e084:	mov	r0, r6
    e088:	mov	r1, r5
    e08c:	bl	823c <sf_gen_or>
    e090:	mov	r6, r5
    e094:	b	e044 <sf_gen_scode+0x698>
    e098:	mov	r6, r0
    e09c:	b	e044 <sf_gen_scode+0x698>
    e0a0:	ldr	r5, [sp, #8]
    e0a4:	b	df58 <sf_gen_scode+0x5ac>
    e0a8:	ldr	r3, [pc, #348]	; e20c <sf_gen_scode+0x860>
    e0ac:	mov	r0, sl
    e0b0:	add	r3, pc, r3
    e0b4:	str	r5, [r3, #908]	; 0x38c
    e0b8:	bl	e80 <freeaddrinfo@plt>
    e0bc:	cmp	r6, #0
    e0c0:	bne	da74 <sf_gen_scode+0xc8>
    e0c4:	ldr	r2, [pc, #324]	; e210 <sf_gen_scode+0x864>
    e0c8:	add	r2, pc, r2
    e0cc:	b	df88 <sf_gen_scode+0x5dc>
    e0d0:	ldr	r0, [pc, #316]	; e214 <sf_gen_scode+0x868>
    e0d4:	mov	r1, r9
    e0d8:	add	r0, pc, r0
    e0dc:	bl	2130 <sf_bpf_error>
    e0e0:	ldr	r0, [pc, #304]	; e218 <sf_gen_scode+0x86c>
    e0e4:	mov	r1, r9
    e0e8:	add	r0, pc, r0
    e0ec:	bl	2130 <sf_bpf_error>
    e0f0:	ldr	r0, [pc, #292]	; e21c <sf_gen_scode+0x870>
    e0f4:	add	r0, pc, r0
    e0f8:	bl	2130 <sf_bpf_error>
    e0fc:	ldr	r0, [pc, #284]	; e220 <sf_gen_scode+0x874>
    e100:	mov	r1, r9
    e104:	add	r0, pc, r0
    e108:	bl	2130 <sf_bpf_error>
    e10c:	ldr	r0, [pc, #272]	; e224 <sf_gen_scode+0x878>
    e110:	add	r0, pc, r0
    e114:	bl	2130 <sf_bpf_error>
    e118:	ldr	r0, [pc, #264]	; e228 <sf_gen_scode+0x87c>
    e11c:	mov	r1, r9
    e120:	add	r0, pc, r0
    e124:	bl	2130 <sf_bpf_error>
    e128:	ldr	r0, [pc, #252]	; e22c <sf_gen_scode+0x880>
    e12c:	mov	r1, r9
    e130:	add	r0, pc, r0
    e134:	bl	2130 <sf_bpf_error>
    e138:	ldr	r0, [pc, #240]	; e230 <sf_gen_scode+0x884>
    e13c:	mov	r1, r9
    e140:	add	r0, pc, r0
    e144:	bl	2130 <sf_bpf_error>
    e148:	ldr	r0, [pc, #228]	; e234 <sf_gen_scode+0x888>
    e14c:	mov	r1, r9
    e150:	add	r0, pc, r0
    e154:	bl	2130 <sf_bpf_error>
    e158:	ldr	r0, [pc, #216]	; e238 <sf_gen_scode+0x88c>
    e15c:	mov	r1, r9
    e160:	add	r0, pc, r0
    e164:	bl	2130 <sf_bpf_error>
    e168:	ldr	r0, [pc, #204]	; e23c <sf_gen_scode+0x890>
    e16c:	mov	r1, r9
    e170:	add	r0, pc, r0
    e174:	bl	2130 <sf_bpf_error>
    e178:	ldr	r0, [pc, #192]	; e240 <sf_gen_scode+0x894>
    e17c:	mov	r1, r9
    e180:	add	r0, pc, r0
    e184:	bl	2130 <sf_bpf_error>
    e188:	ldr	r0, [pc, #180]	; e244 <sf_gen_scode+0x898>
    e18c:	mov	r1, r9
    e190:	add	r0, pc, r0
    e194:	bl	2130 <sf_bpf_error>
    e198:	ldr	r0, [pc, #168]	; e248 <sf_gen_scode+0x89c>
    e19c:	mov	r1, r9
    e1a0:	add	r0, pc, r0
    e1a4:	bl	2130 <sf_bpf_error>
    e1a8:	ldr	r0, [pc, #156]	; e24c <sf_gen_scode+0x8a0>
    e1ac:	mov	r1, r9
    e1b0:	add	r0, pc, r0
    e1b4:	bl	2130 <sf_bpf_error>
    e1b8:	ldr	r2, [pc, #144]	; e250 <sf_gen_scode+0x8a4>
    e1bc:	add	r2, pc, r2
    e1c0:	b	df88 <sf_gen_scode+0x5dc>
    e1c4:	ldr	r0, [pc, #136]	; e254 <sf_gen_scode+0x8a8>
    e1c8:	add	r0, pc, r0
    e1cc:	bl	2130 <sf_bpf_error>
    e1d0:	ldr	r0, [pc, #128]	; e258 <sf_gen_scode+0x8ac>
    e1d4:	mov	r1, r9
    e1d8:	add	r0, pc, r0
    e1dc:	bl	2130 <sf_bpf_error>
    e1e0:	bl	ebc <abort@plt>
    e1e4:	.word	0x0003088c
    e1e8:	.word	0x000127b0
    e1ec:	.word	0x000307ac
    e1f0:	.word	0x00013384
    e1f4:	.word	0x000306c4
    e1f8:	.word	0x00013138
    e1fc:	.word	0x00013044
    e200:	.word	0x000303fc
    e204:	.word	0x000120e4
    e208:	.word	0x00012f60
    e20c:	.word	0x000302b0
    e210:	.word	0x00012cf4
    e214:	.word	0x00012ebc
    e218:	.word	0x00012e38
    e21c:	.word	0x00012f10
    e220:	.word	0x00012f30
    e224:	.word	0x00012df4
    e228:	.word	0x00012cbc
    e22c:	.word	0x00012d14
    e230:	.word	0x00012ce4
    e234:	.word	0x00012ca4
    e238:	.word	0x00012cac
    e23c:	.word	0x00012e40
    e240:	.word	0x00012ce0
    e244:	.word	0x00012dcc
    e248:	.word	0x00012d94
    e24c:	.word	0x00012d2c
    e250:	.word	0x00012c00
    e254:	.word	0x00012da8
    e258:	.word	0x00012e10

0000e25c <sf_gen_mcode>:
    e25c:	strd	r4, [sp, #-20]!	; 0xffffffec
    e260:	mov	r5, r1
    e264:	uxtb	r4, r3
    e268:	strd	r6, [sp, #8]
    e26c:	mov	r7, r2
    e270:	mov	r6, r0
    e274:	str	lr, [sp, #16]
    e278:	sub	sp, sp, #28
    e27c:	add	r1, sp, #16
    e280:	str	r3, [sp, #12]
    e284:	bl	13158 <__pcap_atoin>
    e288:	ldr	r3, [sp, #16]
    e28c:	rsb	r0, r0, #32
    e290:	cmp	r5, #0
    e294:	lsl	r0, r3, r0
    e298:	str	r0, [sp, #16]
    e29c:	beq	e2f0 <sf_gen_mcode+0x94>
    e2a0:	add	r1, sp, #20
    e2a4:	mov	r0, r5
    e2a8:	bl	13158 <__pcap_atoin>
    e2ac:	rsb	r3, r0, #32
    e2b0:	ldrd	r0, [sp, #16]
    e2b4:	lsl	r1, r1, r3
    e2b8:	bics	r3, r0, r1
    e2bc:	str	r1, [sp, #20]
    e2c0:	bne	e344 <sf_gen_mcode+0xe8>
    e2c4:	cmp	r4, #2
    e2c8:	bne	e338 <sf_gen_mcode+0xdc>
    e2cc:	ldrb	r3, [sp, #14]
    e2d0:	str	r4, [sp]
    e2d4:	ldrb	r2, [sp, #13]
    e2d8:	bl	a8c0 <gen_host>
    e2dc:	add	sp, sp, #28
    e2e0:	ldrd	r4, [sp]
    e2e4:	ldrd	r6, [sp, #8]
    e2e8:	add	sp, sp, #16
    e2ec:	pop	{pc}		; (ldr pc, [sp], #4)
    e2f0:	cmp	r7, #32
    e2f4:	bgt	e358 <sf_gen_mcode+0xfc>
    e2f8:	cmp	r7, #0
    e2fc:	moveq	r3, r0
    e300:	moveq	r1, r7
    e304:	beq	e318 <sf_gen_mcode+0xbc>
    e308:	rsb	r3, r7, #32
    e30c:	mvn	r1, #0
    e310:	lsl	r1, r1, r3
    e314:	bic	r3, r0, r1
    e318:	cmp	r3, #0
    e31c:	str	r1, [sp, #20]
    e320:	beq	e2c4 <sf_gen_mcode+0x68>
    e324:	ldr	r0, [pc, #56]	; e364 <sf_gen_mcode+0x108>
    e328:	mov	r2, r7
    e32c:	mov	r1, r6
    e330:	add	r0, pc, r0
    e334:	bl	2130 <sf_bpf_error>
    e338:	ldr	r0, [pc, #40]	; e368 <sf_gen_mcode+0x10c>
    e33c:	add	r0, pc, r0
    e340:	bl	2130 <sf_bpf_error>
    e344:	ldr	r0, [pc, #32]	; e36c <sf_gen_mcode+0x110>
    e348:	mov	r2, r5
    e34c:	mov	r1, r6
    e350:	add	r0, pc, r0
    e354:	bl	2130 <sf_bpf_error>
    e358:	ldr	r0, [pc, #16]	; e370 <sf_gen_mcode+0x114>
    e35c:	add	r0, pc, r0
    e360:	bl	2130 <sf_bpf_error>
    e364:	.word	0x00012d60
    e368:	.word	0x00012d74
    e36c:	.word	0x00012cfc
    e370:	.word	0x00012d18

0000e374 <sf_gen_ncode>:
    e374:	strd	r4, [sp, #-16]!
    e378:	cmp	r0, #0
    e37c:	uxtb	r4, r2
    e380:	str	r6, [sp, #8]
    e384:	ubfx	r5, r2, #8, #8
    e388:	str	lr, [sp, #12]
    e38c:	sub	sp, sp, #16
    e390:	ubfx	r6, r2, #16, #8
    e394:	str	r2, [sp, #8]
    e398:	str	r1, [sp, #12]
    e39c:	beq	e4d0 <sf_gen_ncode+0x15c>
    e3a0:	cmp	r5, #12
    e3a4:	add	r1, sp, #12
    e3a8:	beq	e3f4 <sf_gen_ncode+0x80>
    e3ac:	bl	13158 <__pcap_atoin>
    e3b0:	cmp	r4, #4
    e3b4:	beq	e608 <sf_gen_ncode+0x294>
    e3b8:	bls	e4b0 <sf_gen_ncode+0x13c>
    e3bc:	cmp	r4, #6
    e3c0:	beq	e588 <sf_gen_ncode+0x214>
    e3c4:	bcs	e44c <sf_gen_ncode+0xd8>
    e3c8:	mov	r2, r6
    e3cc:	mov	r1, r5
    e3d0:	ldr	r0, [sp, #12]
    e3d4:	bl	9c54 <gen_proto>
    e3d8:	mov	r4, r0
    e3dc:	mov	r0, r4
    e3e0:	add	sp, sp, #16
    e3e4:	ldrd	r4, [sp]
    e3e8:	ldr	r6, [sp, #8]
    e3ec:	add	sp, sp, #12
    e3f0:	pop	{pc}		; (ldr pc, [sp], #4)
    e3f4:	bl	131d4 <__pcap_atodn>
    e3f8:	cmp	r4, #4
    e3fc:	beq	e608 <sf_gen_ncode+0x294>
    e400:	bls	e424 <sf_gen_ncode+0xb0>
    e404:	cmp	r4, #6
    e408:	beq	e588 <sf_gen_ncode+0x214>
    e40c:	bcc	e3c8 <sf_gen_ncode+0x54>
    e410:	cmp	r4, #7
    e414:	bne	e438 <sf_gen_ncode+0xc4>
    e418:	ldr	r0, [pc, #504]	; e618 <sf_gen_ncode+0x2a4>
    e41c:	add	r0, pc, r0
    e420:	bl	2130 <sf_bpf_error>
    e424:	cmp	r4, #2
    e428:	bls	e5a0 <sf_gen_ncode+0x22c>
    e42c:	ldr	r0, [pc, #488]	; e61c <sf_gen_ncode+0x2a8>
    e430:	add	r0, pc, r0
    e434:	bl	2130 <sf_bpf_error>
    e438:	cmp	r4, #255	; 0xff
    e43c:	bne	e614 <sf_gen_ncode+0x2a0>
    e440:	ldr	r0, [pc, #472]	; e620 <sf_gen_ncode+0x2ac>
    e444:	add	r0, pc, r0
    e448:	bl	2130 <sf_bpf_error>
    e44c:	cmp	r4, #7
    e450:	bne	e438 <sf_gen_ncode+0xc4>
    e454:	cmp	r5, #7
    e458:	beq	e5c0 <sf_gen_ncode+0x24c>
    e45c:	cmp	r5, #6
    e460:	beq	e478 <sf_gen_ncode+0x104>
    e464:	cmp	r5, #5
    e468:	beq	e5d0 <sf_gen_ncode+0x25c>
    e46c:	cmp	r5, #0
    e470:	mvneq	r5, #0
    e474:	bne	e418 <sf_gen_ncode+0xa4>
    e478:	ldr	r1, [sp, #12]
    e47c:	mov	r3, r6
    e480:	mov	r2, r5
    e484:	mov	r0, r1
    e488:	bl	d184 <gen_portrange>
    e48c:	ldr	r1, [sp, #12]
    e490:	mov	r4, r0
    e494:	mov	r3, r6
    e498:	mov	r2, r5
    e49c:	mov	r0, r1
    e4a0:	bl	d5e0 <gen_portrange6>
    e4a4:	mov	r1, r4
    e4a8:	bl	823c <sf_gen_or>
    e4ac:	b	e3dc <sf_gen_ncode+0x68>
    e4b0:	cmp	r4, #2
    e4b4:	bhi	e534 <sf_gen_ncode+0x1c0>
    e4b8:	cmp	r5, #1
    e4bc:	ldrne	ip, [sp, #12]
    e4c0:	bne	e504 <sf_gen_ncode+0x190>
    e4c4:	ldr	r0, [pc, #344]	; e624 <sf_gen_ncode+0x2b0>
    e4c8:	add	r0, pc, r0
    e4cc:	bl	2130 <sf_bpf_error>
    e4d0:	cmp	r4, #4
    e4d4:	beq	e608 <sf_gen_ncode+0x294>
    e4d8:	bhi	e3bc <sf_gen_ncode+0x48>
    e4dc:	cmp	r4, #2
    e4e0:	bhi	e534 <sf_gen_ncode+0x1c0>
    e4e4:	cmp	r5, #12
    e4e8:	beq	e5a0 <sf_gen_ncode+0x22c>
    e4ec:	cmp	r5, #1
    e4f0:	beq	e4c4 <sf_gen_ncode+0x150>
    e4f4:	cmp	r4, #2
    e4f8:	mov	ip, r1
    e4fc:	movne	r0, #32
    e500:	beq	e5e0 <sf_gen_ncode+0x26c>
    e504:	rsb	r0, r0, #32
    e508:	mvn	r1, #0
    e50c:	lsl	ip, ip, r0
    e510:	lsl	r1, r1, r0
    e514:	str	ip, [sp, #12]
    e518:	mov	r3, r6
    e51c:	mov	r2, r5
    e520:	str	r4, [sp]
    e524:	mov	r0, ip
    e528:	bl	a8c0 <gen_host>
    e52c:	mov	r4, r0
    e530:	b	e3dc <sf_gen_ncode+0x68>
    e534:	cmp	r5, #7
    e538:	beq	e5c8 <sf_gen_ncode+0x254>
    e53c:	cmp	r5, #6
    e540:	beq	e558 <sf_gen_ncode+0x1e4>
    e544:	cmp	r5, #5
    e548:	beq	e5d8 <sf_gen_ncode+0x264>
    e54c:	cmp	r5, #0
    e550:	mvneq	r5, #0
    e554:	bne	e42c <sf_gen_ncode+0xb8>
    e558:	mov	r2, r6
    e55c:	mov	r1, r5
    e560:	ldr	r0, [sp, #12]
    e564:	bl	c684 <gen_port>
    e568:	mov	r4, r0
    e56c:	mov	r1, r5
    e570:	ldr	r0, [sp, #12]
    e574:	mov	r2, r6
    e578:	bl	cb24 <gen_port6>
    e57c:	mov	r1, r4
    e580:	bl	823c <sf_gen_or>
    e584:	b	e3dc <sf_gen_ncode+0x68>
    e588:	mov	r2, r6
    e58c:	mov	r1, r5
    e590:	ldr	r0, [sp, #12]
    e594:	bl	ac9c <gen_protochain>
    e598:	mov	r4, r0
    e59c:	b	e3dc <sf_gen_ncode+0x68>
    e5a0:	mov	r3, r6
    e5a4:	mov	r2, #12
    e5a8:	str	r4, [sp]
    e5ac:	mov	r1, #0
    e5b0:	ldr	r0, [sp, #12]
    e5b4:	bl	a8c0 <gen_host>
    e5b8:	mov	r4, r0
    e5bc:	b	e3dc <sf_gen_ncode+0x68>
    e5c0:	mov	r5, #17
    e5c4:	b	e478 <sf_gen_ncode+0x104>
    e5c8:	mov	r5, #17
    e5cc:	b	e558 <sf_gen_ncode+0x1e4>
    e5d0:	mov	r5, #132	; 0x84
    e5d4:	b	e478 <sf_gen_ncode+0x104>
    e5d8:	mov	r5, #132	; 0x84
    e5dc:	b	e558 <sf_gen_ncode+0x1e4>
    e5e0:	cmp	ip, #0
    e5e4:	mvn	r1, #0
    e5e8:	beq	e518 <sf_gen_ncode+0x1a4>
    e5ec:	tst	ip, #-16777216	; 0xff000000
    e5f0:	bne	e518 <sf_gen_ncode+0x1a4>
    e5f4:	lsl	ip, ip, #8
    e5f8:	lsl	r1, r1, #8
    e5fc:	tst	ip, #-16777216	; 0xff000000
    e600:	beq	e5f4 <sf_gen_ncode+0x280>
    e604:	b	e514 <sf_gen_ncode+0x1a0>
    e608:	ldr	r0, [pc, #24]	; e628 <sf_gen_ncode+0x2b4>
    e60c:	add	r0, pc, r0
    e610:	bl	2130 <sf_bpf_error>
    e614:	bl	ebc <abort@plt>
    e618:	.word	0x00012b54
    e61c:	.word	0x00012ad4
    e620:	.word	0x00011e90
    e624:	.word	0x00012c08
    e628:	.word	0x00012ae0

0000e62c <sf_gen_mcode6>:
    e62c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e630:	cmp	r1, #0
    e634:	strd	r6, [sp, #8]
    e638:	strd	r8, [sp, #16]
    e63c:	strd	sl, [sp, #24]
    e640:	str	lr, [sp, #32]
    e644:	sub	sp, sp, #36	; 0x24
    e648:	str	r0, [sp, #8]
    e64c:	str	r3, [sp, #12]
    e650:	bne	e7c8 <sf_gen_mcode6+0x19c>
    e654:	mov	r5, r2
    e658:	uxtb	r7, r3
    e65c:	bl	12c64 <pcap_nametoaddrinfo>
    e660:	subs	r6, r0, #0
    e664:	beq	e7e4 <sf_gen_mcode6+0x1b8>
    e668:	ldr	r3, [pc, #388]	; e7f4 <sf_gen_mcode6+0x1c8>
    e66c:	ldr	r2, [r6, #28]
    e670:	add	r3, pc, r3
    e674:	cmp	r2, #0
    e678:	str	r6, [r3, #908]	; 0x38c
    e67c:	bne	e7d4 <sf_gen_mcode6+0x1a8>
    e680:	ldr	r4, [r6, #20]
    e684:	cmp	r5, #128	; 0x80
    e688:	add	sl, r4, #8
    e68c:	bhi	e7b8 <sf_gen_mcode6+0x18c>
    e690:	asr	fp, r5, #3
    e694:	add	r3, sp, #16
    e698:	mov	r8, #0
    e69c:	mov	r9, #0
    e6a0:	mov	r0, r3
    e6a4:	mov	r2, fp
    e6a8:	mov	r1, #255	; 0xff
    e6ac:	strd	r8, [sp, #16]
    e6b0:	strd	r8, [sp, #24]
    e6b4:	bl	e2c <memset@plt>
    e6b8:	ands	r2, r5, #7
    e6bc:	mov	r3, r0
    e6c0:	bne	e768 <sf_gen_mcode6+0x13c>
    e6c4:	ldr	r2, [r4, #8]
    e6c8:	ldr	r1, [sp, #16]
    e6cc:	bics	r2, r2, r1
    e6d0:	bne	e798 <sf_gen_mcode6+0x16c>
    e6d4:	ldr	r2, [r4, #12]
    e6d8:	ldr	r1, [sp, #20]
    e6dc:	bics	r2, r2, r1
    e6e0:	bne	e798 <sf_gen_mcode6+0x16c>
    e6e4:	ldr	r2, [r4, #16]
    e6e8:	ldr	r1, [sp, #24]
    e6ec:	bics	r2, r2, r1
    e6f0:	bne	e798 <sf_gen_mcode6+0x16c>
    e6f4:	ldr	r2, [r4, #20]
    e6f8:	ldr	r1, [sp, #28]
    e6fc:	bics	r2, r2, r1
    e700:	bne	e798 <sf_gen_mcode6+0x16c>
    e704:	cmp	r7, #1
    e708:	bls	e784 <sf_gen_mcode6+0x158>
    e70c:	cmp	r7, #2
    e710:	bne	e7ac <sf_gen_mcode6+0x180>
    e714:	mov	r1, r3
    e718:	ldrb	r2, [sp, #13]
    e71c:	mov	r0, sl
    e720:	str	r7, [sp]
    e724:	ldrb	r3, [sp, #14]
    e728:	bl	b9c0 <gen_host6>
    e72c:	ldr	r3, [pc, #196]	; e7f8 <sf_gen_mcode6+0x1cc>
    e730:	mov	r2, #0
    e734:	mov	r4, r0
    e738:	mov	r0, r6
    e73c:	add	r3, pc, r3
    e740:	str	r2, [r3, #908]	; 0x38c
    e744:	bl	e80 <freeaddrinfo@plt>
    e748:	mov	r0, r4
    e74c:	add	sp, sp, #36	; 0x24
    e750:	ldrd	r4, [sp]
    e754:	ldrd	r6, [sp, #8]
    e758:	ldrd	r8, [sp, #16]
    e75c:	ldrd	sl, [sp, #24]
    e760:	add	sp, sp, #32
    e764:	pop	{pc}		; (ldr pc, [sp], #4)
    e768:	mov	r1, #255	; 0xff
    e76c:	rsb	r2, r2, #8
    e770:	lsl	r2, r1, r2
    e774:	add	r1, sp, #32
    e778:	add	fp, r1, fp
    e77c:	strb	r2, [fp, #-16]
    e780:	b	e6c4 <sf_gen_mcode6+0x98>
    e784:	cmp	r5, #128	; 0x80
    e788:	beq	e714 <sf_gen_mcode6+0xe8>
    e78c:	ldr	r0, [pc, #104]	; e7fc <sf_gen_mcode6+0x1d0>
    e790:	add	r0, pc, r0
    e794:	bl	2130 <sf_bpf_error>
    e798:	ldr	r0, [pc, #96]	; e800 <sf_gen_mcode6+0x1d4>
    e79c:	mov	r2, r5
    e7a0:	ldr	r1, [sp, #8]
    e7a4:	add	r0, pc, r0
    e7a8:	bl	2130 <sf_bpf_error>
    e7ac:	ldr	r0, [pc, #80]	; e804 <sf_gen_mcode6+0x1d8>
    e7b0:	add	r0, pc, r0
    e7b4:	bl	2130 <sf_bpf_error>
    e7b8:	ldr	r0, [pc, #72]	; e808 <sf_gen_mcode6+0x1dc>
    e7bc:	mov	r1, #128	; 0x80
    e7c0:	add	r0, pc, r0
    e7c4:	bl	2130 <sf_bpf_error>
    e7c8:	ldr	r0, [pc, #60]	; e80c <sf_gen_mcode6+0x1e0>
    e7cc:	add	r0, pc, r0
    e7d0:	bl	2130 <sf_bpf_error>
    e7d4:	ldr	r0, [pc, #52]	; e810 <sf_gen_mcode6+0x1e4>
    e7d8:	ldr	r1, [sp, #8]
    e7dc:	add	r0, pc, r0
    e7e0:	bl	2130 <sf_bpf_error>
    e7e4:	ldr	r0, [pc, #40]	; e814 <sf_gen_mcode6+0x1e8>
    e7e8:	ldr	r1, [sp, #8]
    e7ec:	add	r0, pc, r0
    e7f0:	bl	2130 <sf_bpf_error>
    e7f4:	.word	0x0002fcf0
    e7f8:	.word	0x0002fc24
    e7fc:	.word	0x00012920
    e800:	.word	0x000128ec
    e804:	.word	0x000129c4
    e808:	.word	0x00012998
    e80c:	.word	0x0001293c
    e810:	.word	0x0001295c
    e814:	.word	0x00012934

0000e818 <sf_gen_ecode>:
    e818:	uxtb	r3, r1
    e81c:	strd	r4, [sp, #-16]!
    e820:	ubfx	r4, r1, #16, #8
    e824:	str	r6, [sp, #8]
    e828:	cmp	r3, #1
    e82c:	str	lr, [sp, #12]
    e830:	sub	sp, sp, #8
    e834:	str	r1, [sp, #4]
    e838:	bhi	e9b4 <sf_gen_ecode+0x19c>
    e83c:	ldrb	r3, [sp, #5]
    e840:	cmp	r3, #1
    e844:	bne	e9b4 <sf_gen_ecode+0x19c>
    e848:	ldr	r2, [pc, #368]	; e9c0 <sf_gen_ecode+0x1a8>
    e84c:	mov	r5, r0
    e850:	add	r2, pc, r2
    e854:	ldr	r3, [r2, #876]	; 0x36c
    e858:	cmp	r3, #119	; 0x77
    e85c:	beq	e924 <sf_gen_ecode+0x10c>
    e860:	bgt	e894 <sf_gen_ecode+0x7c>
    e864:	cmp	r3, #6
    e868:	beq	e998 <sf_gen_ecode+0x180>
    e86c:	ble	e958 <sf_gen_ecode+0x140>
    e870:	cmp	r3, #10
    e874:	bne	e944 <sf_gen_ecode+0x12c>
    e878:	mov	r1, r4
    e87c:	add	sp, sp, #8
    e880:	ldrd	r4, [sp]
    e884:	ldr	r6, [sp, #8]
    e888:	ldr	lr, [sp, #12]
    e88c:	add	sp, sp, #16
    e890:	b	7e64 <gen_fhostop>
    e894:	cmp	r3, #127	; 0x7f
    e898:	beq	e924 <sf_gen_ecode+0x10c>
    e89c:	bgt	e914 <sf_gen_ecode+0xfc>
    e8a0:	cmp	r3, #122	; 0x7a
    e8a4:	beq	e97c <sf_gen_ecode+0x164>
    e8a8:	cmp	r3, #123	; 0x7b
    e8ac:	bne	e94c <sf_gen_ecode+0x134>
    e8b0:	ldr	r3, [r2, #924]	; 0x39c
    e8b4:	cmp	r3, #0
    e8b8:	beq	e9b4 <sf_gen_ecode+0x19c>
    e8bc:	mov	r2, #65280	; 0xff00
    e8c0:	mov	r1, #8
    e8c4:	mov	r0, #4
    e8c8:	bl	5ad8 <gen_cmp.constprop.20>
    e8cc:	mov	r6, r0
    e8d0:	mov	r1, r4
    e8d4:	ldr	r3, [r6, #44]	; 0x2c
    e8d8:	mov	r0, r5
    e8dc:	clz	r3, r3
    e8e0:	lsr	r3, r3, #5
    e8e4:	str	r3, [r6, #44]	; 0x2c
    e8e8:	bl	7d00 <gen_ehostop>
    e8ec:	mov	r4, r0
    e8f0:	mov	r1, r0
    e8f4:	mov	r0, r6
    e8f8:	bl	7884 <sf_gen_and>
    e8fc:	mov	r0, r4
    e900:	add	sp, sp, #8
    e904:	ldrd	r4, [sp]
    e908:	ldr	r6, [sp, #8]
    e90c:	add	sp, sp, #12
    e910:	pop	{pc}		; (ldr pc, [sp], #4)
    e914:	cmp	r3, #163	; 0xa3
    e918:	beq	e924 <sf_gen_ecode+0x10c>
    e91c:	cmp	r3, #192	; 0xc0
    e920:	bne	e94c <sf_gen_ecode+0x134>
    e924:	mov	r1, r4
    e928:	mov	r0, r5
    e92c:	add	sp, sp, #8
    e930:	ldrd	r4, [sp]
    e934:	ldr	r6, [sp, #8]
    e938:	ldr	lr, [sp, #12]
    e93c:	add	sp, sp, #16
    e940:	b	870c <gen_wlanhostop>
    e944:	cmp	r3, #105	; 0x69
    e948:	beq	e924 <sf_gen_ecode+0x10c>
    e94c:	ldr	r0, [pc, #112]	; e9c4 <sf_gen_ecode+0x1ac>
    e950:	add	r0, pc, r0
    e954:	bl	2130 <sf_bpf_error>
    e958:	cmp	r3, #1
    e95c:	bne	e94c <sf_gen_ecode+0x134>
    e960:	mov	r1, r4
    e964:	add	sp, sp, #8
    e968:	ldrd	r4, [sp]
    e96c:	ldr	r6, [sp, #8]
    e970:	ldr	lr, [sp, #12]
    e974:	add	sp, sp, #16
    e978:	b	7d00 <gen_ehostop>
    e97c:	mov	r1, r4
    e980:	add	sp, sp, #8
    e984:	ldrd	r4, [sp]
    e988:	ldr	r6, [sp, #8]
    e98c:	ldr	lr, [sp, #12]
    e990:	add	sp, sp, #16
    e994:	b	80f4 <gen_ipfchostop>
    e998:	mov	r1, r4
    e99c:	add	sp, sp, #8
    e9a0:	ldrd	r4, [sp]
    e9a4:	ldr	r6, [sp, #8]
    e9a8:	ldr	lr, [sp, #12]
    e9ac:	add	sp, sp, #16
    e9b0:	b	7fac <gen_thostop>
    e9b4:	ldr	r0, [pc, #12]	; e9c8 <sf_gen_ecode+0x1b0>
    e9b8:	add	r0, pc, r0
    e9bc:	bl	2130 <sf_bpf_error>
    e9c0:	.word	0x0002fb10
    e9c4:	.word	0x0001284c
    e9c8:	.word	0x00012840

0000e9cc <sf_append>:
    e9cc:	b	e9d4 <sf_append+0x8>
    e9d0:	mov	r0, r3
    e9d4:	ldr	r3, [r0, #16]
    e9d8:	cmp	r3, #0
    e9dc:	bne	e9d0 <sf_append+0x4>
    e9e0:	str	r1, [r0, #16]
    e9e4:	bx	lr

0000e9e8 <sf_gen_load>:
    e9e8:	ldr	ip, [pc, #2832]	; f500 <sf_gen_load+0xb18>
    e9ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e9f0:	mov	r5, r1
    e9f4:	strd	r6, [sp, #8]
    e9f8:	mov	r6, r0
    e9fc:	strd	r8, [sp, #16]
    ea00:	str	sl, [sp, #24]
    ea04:	add	ip, pc, ip
    ea08:	str	lr, [sp, #28]
    ea0c:	ldr	r4, [ip, #804]	; 0x324
    ea10:	lsl	r3, r4, #2
    ea14:	add	r1, ip, r3
    ea18:	ldr	r1, [r1, #808]	; 0x328
    ea1c:	cmp	r1, #0
    ea20:	beq	ecac <sf_gen_load+0x2c4>
    ea24:	add	r4, r4, #1
    ea28:	rsbs	r3, r4, #0
    ea2c:	and	r4, r4, #15
    ea30:	and	r3, r3, #15
    ea34:	rsbpl	r4, r3, #0
    ea38:	lsl	r3, r4, #2
    ea3c:	str	r4, [ip, #804]	; 0x324
    ea40:	add	r1, ip, r3
    ea44:	ldr	r1, [r1, #808]	; 0x328
    ea48:	cmp	r1, #0
    ea4c:	beq	ecac <sf_gen_load+0x2c4>
    ea50:	add	r4, r4, #1
    ea54:	rsbs	r3, r4, #0
    ea58:	and	r4, r4, #15
    ea5c:	and	r3, r3, #15
    ea60:	rsbpl	r4, r3, #0
    ea64:	lsl	r3, r4, #2
    ea68:	add	r1, ip, r3
    ea6c:	ldr	r1, [r1, #808]	; 0x328
    ea70:	cmp	r1, #0
    ea74:	beq	eca0 <sf_gen_load+0x2b8>
    ea78:	add	r4, r4, #1
    ea7c:	rsbs	r3, r4, #0
    ea80:	and	r4, r4, #15
    ea84:	and	r3, r3, #15
    ea88:	rsbpl	r4, r3, #0
    ea8c:	lsl	r3, r4, #2
    ea90:	add	r1, ip, r3
    ea94:	ldr	r1, [r1, #808]	; 0x328
    ea98:	cmp	r1, #0
    ea9c:	beq	eca0 <sf_gen_load+0x2b8>
    eaa0:	add	r4, r4, #1
    eaa4:	rsbs	r3, r4, #0
    eaa8:	and	r4, r4, #15
    eaac:	and	r3, r3, #15
    eab0:	rsbpl	r4, r3, #0
    eab4:	lsl	r3, r4, #2
    eab8:	add	r1, ip, r3
    eabc:	ldr	r1, [r1, #808]	; 0x328
    eac0:	cmp	r1, #0
    eac4:	beq	eca0 <sf_gen_load+0x2b8>
    eac8:	add	r4, r4, #1
    eacc:	rsbs	r3, r4, #0
    ead0:	and	r4, r4, #15
    ead4:	and	r3, r3, #15
    ead8:	rsbpl	r4, r3, #0
    eadc:	lsl	r3, r4, #2
    eae0:	add	r1, ip, r3
    eae4:	ldr	r1, [r1, #808]	; 0x328
    eae8:	cmp	r1, #0
    eaec:	beq	eca0 <sf_gen_load+0x2b8>
    eaf0:	add	r4, r4, #1
    eaf4:	rsbs	r3, r4, #0
    eaf8:	and	r4, r4, #15
    eafc:	and	r3, r3, #15
    eb00:	rsbpl	r4, r3, #0
    eb04:	lsl	r3, r4, #2
    eb08:	add	r1, ip, r3
    eb0c:	ldr	r1, [r1, #808]	; 0x328
    eb10:	cmp	r1, #0
    eb14:	beq	eca0 <sf_gen_load+0x2b8>
    eb18:	add	r4, r4, #1
    eb1c:	rsbs	r3, r4, #0
    eb20:	and	r4, r4, #15
    eb24:	and	r3, r3, #15
    eb28:	rsbpl	r4, r3, #0
    eb2c:	lsl	r3, r4, #2
    eb30:	add	r1, ip, r3
    eb34:	ldr	r1, [r1, #808]	; 0x328
    eb38:	cmp	r1, #0
    eb3c:	beq	eca0 <sf_gen_load+0x2b8>
    eb40:	add	r4, r4, #1
    eb44:	rsbs	r3, r4, #0
    eb48:	and	r4, r4, #15
    eb4c:	and	r3, r3, #15
    eb50:	rsbpl	r4, r3, #0
    eb54:	lsl	r3, r4, #2
    eb58:	add	r1, ip, r3
    eb5c:	ldr	r1, [r1, #808]	; 0x328
    eb60:	cmp	r1, #0
    eb64:	beq	eca0 <sf_gen_load+0x2b8>
    eb68:	add	r4, r4, #1
    eb6c:	rsbs	r3, r4, #0
    eb70:	and	r4, r4, #15
    eb74:	and	r3, r3, #15
    eb78:	rsbpl	r4, r3, #0
    eb7c:	lsl	r3, r4, #2
    eb80:	add	ip, ip, r3
    eb84:	ldr	r1, [ip, #808]	; 0x328
    eb88:	cmp	r1, #0
    eb8c:	beq	eca0 <sf_gen_load+0x2b8>
    eb90:	add	r4, r4, #1
    eb94:	ldr	r1, [pc, #2408]	; f504 <sf_gen_load+0xb1c>
    eb98:	rsbs	r3, r4, #0
    eb9c:	and	r4, r4, #15
    eba0:	and	r3, r3, #15
    eba4:	rsbpl	r4, r3, #0
    eba8:	lsl	r3, r4, #2
    ebac:	add	r1, pc, r1
    ebb0:	add	r0, r1, r3
    ebb4:	ldr	r0, [r0, #808]	; 0x328
    ebb8:	cmp	r0, #0
    ebbc:	beq	eca0 <sf_gen_load+0x2b8>
    ebc0:	add	r4, r4, #1
    ebc4:	rsbs	r3, r4, #0
    ebc8:	and	r4, r4, #15
    ebcc:	and	r3, r3, #15
    ebd0:	rsbpl	r4, r3, #0
    ebd4:	lsl	r3, r4, #2
    ebd8:	add	r0, r1, r3
    ebdc:	ldr	r0, [r0, #808]	; 0x328
    ebe0:	cmp	r0, #0
    ebe4:	beq	eca0 <sf_gen_load+0x2b8>
    ebe8:	add	r4, r4, #1
    ebec:	rsbs	r3, r4, #0
    ebf0:	and	r4, r4, #15
    ebf4:	and	r3, r3, #15
    ebf8:	rsbpl	r4, r3, #0
    ebfc:	lsl	r3, r4, #2
    ec00:	add	r0, r1, r3
    ec04:	ldr	r0, [r0, #808]	; 0x328
    ec08:	cmp	r0, #0
    ec0c:	beq	eca0 <sf_gen_load+0x2b8>
    ec10:	add	r4, r4, #1
    ec14:	rsbs	r3, r4, #0
    ec18:	and	r4, r4, #15
    ec1c:	and	r3, r3, #15
    ec20:	rsbpl	r4, r3, #0
    ec24:	lsl	r3, r4, #2
    ec28:	add	r0, r1, r3
    ec2c:	ldr	r0, [r0, #808]	; 0x328
    ec30:	cmp	r0, #0
    ec34:	beq	eca0 <sf_gen_load+0x2b8>
    ec38:	add	r4, r4, #1
    ec3c:	rsbs	r3, r4, #0
    ec40:	and	r4, r4, #15
    ec44:	and	r3, r3, #15
    ec48:	rsbpl	r4, r3, #0
    ec4c:	lsl	r3, r4, #2
    ec50:	add	r0, r1, r3
    ec54:	ldr	r0, [r0, #808]	; 0x328
    ec58:	cmp	r0, #0
    ec5c:	beq	eca0 <sf_gen_load+0x2b8>
    ec60:	add	r4, r4, #1
    ec64:	rsbs	r3, r4, #0
    ec68:	and	r4, r4, #15
    ec6c:	and	r3, r3, #15
    ec70:	rsbpl	r4, r3, #0
    ec74:	lsl	r3, r4, #2
    ec78:	add	r0, r1, r3
    ec7c:	ldr	r0, [r0, #808]	; 0x328
    ec80:	cmp	r0, #0
    ec84:	beq	eca0 <sf_gen_load+0x2b8>
    ec88:	ldr	r0, [pc, #2168]	; f508 <sf_gen_load+0xb20>
    ec8c:	add	r4, r4, #1
    ec90:	and	r4, r4, #15
    ec94:	str	r4, [r1, #804]	; 0x324
    ec98:	add	r0, pc, r0
    ec9c:	bl	2130 <sf_bpf_error>
    eca0:	ldr	r1, [pc, #2148]	; f50c <sf_gen_load+0xb24>
    eca4:	add	r1, pc, r1
    eca8:	str	r4, [r1, #804]	; 0x324
    ecac:	ldr	r1, [pc, #2140]	; f510 <sf_gen_load+0xb28>
    ecb0:	mov	ip, #1
    ecb4:	mov	r0, #0
    ecb8:	cmp	r2, #2
    ecbc:	add	r1, pc, r1
    ecc0:	add	r3, r1, r3
    ecc4:	str	ip, [r3, #808]	; 0x328
    ecc8:	ldr	r3, [r5, #8]
    eccc:	add	r1, r1, r3, lsl #2
    ecd0:	str	r0, [r1, #808]	; 0x328
    ecd4:	beq	f1e0 <sf_gen_load+0x7f8>
    ecd8:	cmp	r2, #4
    ecdc:	bne	ed94 <sf_gen_load+0x3ac>
    ece0:	mov	r8, #64	; 0x40
    ece4:	sub	r3, r6, #1
    ece8:	cmp	r3, #39	; 0x27
    ecec:	addls	pc, pc, r3, lsl #2
    ecf0:	b	f4e8 <sf_gen_load+0xb00>
    ecf4:	b	f104 <sf_gen_load+0x71c>
    ecf8:	b	efd0 <sf_gen_load+0x5e8>
    ecfc:	b	efd0 <sf_gen_load+0x5e8>
    ed00:	b	efd0 <sf_gen_load+0x5e8>
    ed04:	b	ee70 <sf_gen_load+0x488>
    ed08:	b	ee70 <sf_gen_load+0x488>
    ed0c:	b	ee70 <sf_gen_load+0x488>
    ed10:	b	ee70 <sf_gen_load+0x488>
    ed14:	b	ee70 <sf_gen_load+0x488>
    ed18:	b	ee70 <sf_gen_load+0x488>
    ed1c:	b	efd0 <sf_gen_load+0x5e8>
    ed20:	b	efd0 <sf_gen_load+0x5e8>
    ed24:	b	efd0 <sf_gen_load+0x5e8>
    ed28:	b	efd0 <sf_gen_load+0x5e8>
    ed2c:	b	efd0 <sf_gen_load+0x5e8>
    ed30:	b	efd0 <sf_gen_load+0x5e8>
    ed34:	b	efd0 <sf_gen_load+0x5e8>
    ed38:	b	f4f4 <sf_gen_load+0xb0c>
    ed3c:	b	f4e8 <sf_gen_load+0xb00>
    ed40:	b	f4e8 <sf_gen_load+0xb00>
    ed44:	b	ee70 <sf_gen_load+0x488>
    ed48:	b	ee70 <sf_gen_load+0x488>
    ed4c:	b	f4e8 <sf_gen_load+0xb00>
    ed50:	b	f4e8 <sf_gen_load+0xb00>
    ed54:	b	f4e8 <sf_gen_load+0xb00>
    ed58:	b	f4e8 <sf_gen_load+0xb00>
    ed5c:	b	f4e8 <sf_gen_load+0xb00>
    ed60:	b	f4e8 <sf_gen_load+0xb00>
    ed64:	b	f4e8 <sf_gen_load+0xb00>
    ed68:	b	f4e8 <sf_gen_load+0xb00>
    ed6c:	b	f4e8 <sf_gen_load+0xb00>
    ed70:	b	f4e8 <sf_gen_load+0xb00>
    ed74:	b	f4e8 <sf_gen_load+0xb00>
    ed78:	b	f4e8 <sf_gen_load+0xb00>
    ed7c:	b	f4e8 <sf_gen_load+0xb00>
    ed80:	b	f4e8 <sf_gen_load+0xb00>
    ed84:	b	f4e8 <sf_gen_load+0xb00>
    ed88:	b	f4e8 <sf_gen_load+0xb00>
    ed8c:	b	f4e8 <sf_gen_load+0xb00>
    ed90:	b	edb0 <sf_gen_load+0x3c8>
    ed94:	cmp	r2, ip
    ed98:	beq	eda8 <sf_gen_load+0x3c0>
    ed9c:	ldr	r0, [pc, #1904]	; f514 <sf_gen_load+0xb2c>
    eda0:	add	r0, pc, r0
    eda4:	bl	2130 <sf_bpf_error>
    eda8:	mov	r8, #80	; 0x50
    edac:	b	ece4 <sf_gen_load+0x2fc>
    edb0:	ldr	r3, [pc, #1888]	; f518 <sf_gen_load+0xb30>
    edb4:	add	r3, pc, r3
    edb8:	ldr	r3, [r3, #876]	; 0x36c
    edbc:	bic	r2, r3, #8
    edc0:	cmp	r2, #119	; 0x77
    edc4:	cmpne	r3, #163	; 0xa3
    edc8:	bne	f4dc <sf_gen_load+0xaf4>
    edcc:	bl	22d0 <newchunk.constprop.25>
    edd0:	mov	r3, #97	; 0x61
    edd4:	mov	r6, r0
    edd8:	str	r3, [r0]
    eddc:	ldr	r3, [r5, #8]
    ede0:	str	r3, [r0, #12]
    ede4:	bl	22d0 <newchunk.constprop.25>
    ede8:	mov	r2, r6
    edec:	str	r8, [r0]
    edf0:	b	edf8 <sf_gen_load+0x410>
    edf4:	mov	r2, r3
    edf8:	ldr	r3, [r2, #16]
    edfc:	cmp	r3, #0
    ee00:	bne	edf4 <sf_gen_load+0x40c>
    ee04:	str	r0, [r2, #16]
    ee08:	ldr	r2, [r5, #4]
    ee0c:	b	ee14 <sf_gen_load+0x42c>
    ee10:	mov	r2, r3
    ee14:	ldr	r3, [r2, #16]
    ee18:	cmp	r3, #0
    ee1c:	bne	ee10 <sf_gen_load+0x428>
    ee20:	str	r6, [r2, #16]
    ee24:	str	r4, [r5, #8]
    ee28:	bl	22d0 <newchunk.constprop.25>
    ee2c:	mov	r3, #2
    ee30:	str	r3, [r0]
    ee34:	str	r4, [r0, #12]
    ee38:	ldr	r2, [r5, #4]
    ee3c:	b	ee44 <sf_gen_load+0x45c>
    ee40:	mov	r2, r3
    ee44:	ldr	r3, [r2, #16]
    ee48:	cmp	r3, #0
    ee4c:	bne	ee40 <sf_gen_load+0x458>
    ee50:	str	r0, [r2, #16]
    ee54:	mov	r0, r5
    ee58:	ldrd	r4, [sp]
    ee5c:	ldrd	r6, [sp, #8]
    ee60:	ldrd	r8, [sp, #16]
    ee64:	ldr	sl, [sp, #24]
    ee68:	add	sp, sp, #28
    ee6c:	pop	{pc}		; (ldr pc, [sp], #4)
    ee70:	bl	307c <gen_loadx_iphdrlen>
    ee74:	mov	r7, r0
    ee78:	bl	22d0 <newchunk.constprop.25>
    ee7c:	mov	r3, #96	; 0x60
    ee80:	mov	r2, r7
    ee84:	str	r3, [r0]
    ee88:	ldr	r3, [r5, #8]
    ee8c:	str	r3, [r0, #12]
    ee90:	b	ee98 <sf_gen_load+0x4b0>
    ee94:	mov	r2, r3
    ee98:	ldr	r3, [r2, #16]
    ee9c:	cmp	r3, #0
    eea0:	bne	ee94 <sf_gen_load+0x4ac>
    eea4:	str	r0, [r2, #16]
    eea8:	bl	22d0 <newchunk.constprop.25>
    eeac:	mov	r3, #12
    eeb0:	mov	r2, r7
    eeb4:	str	r3, [r0]
    eeb8:	b	eec0 <sf_gen_load+0x4d8>
    eebc:	mov	r2, r3
    eec0:	ldr	r3, [r2, #16]
    eec4:	cmp	r3, #0
    eec8:	bne	eebc <sf_gen_load+0x4d4>
    eecc:	str	r0, [r2, #16]
    eed0:	bl	22d0 <newchunk.constprop.25>
    eed4:	mov	r3, #7
    eed8:	mov	r2, r7
    eedc:	str	r3, [r0]
    eee0:	b	eee8 <sf_gen_load+0x500>
    eee4:	mov	r2, r3
    eee8:	ldr	r3, [r2, #16]
    eeec:	cmp	r3, #0
    eef0:	bne	eee4 <sf_gen_load+0x4fc>
    eef4:	str	r0, [r2, #16]
    eef8:	bl	22d0 <newchunk.constprop.25>
    eefc:	mov	r2, r7
    ef00:	str	r8, [r0]
    ef04:	b	ef0c <sf_gen_load+0x524>
    ef08:	mov	r2, r3
    ef0c:	ldr	r3, [r2, #16]
    ef10:	cmp	r3, #0
    ef14:	bne	ef08 <sf_gen_load+0x520>
    ef18:	ldr	r3, [pc, #1532]	; f51c <sf_gen_load+0xb34>
    ef1c:	str	r0, [r2, #16]
    ef20:	add	r3, pc, r3
    ef24:	ldr	r2, [r3, #796]	; 0x31c
    ef28:	ldr	r8, [r3, #872]	; 0x368
    ef2c:	add	r3, r2, r8
    ef30:	str	r3, [r0, #12]
    ef34:	ldr	r2, [r5, #4]
    ef38:	b	ef40 <sf_gen_load+0x558>
    ef3c:	mov	r2, r3
    ef40:	ldr	r3, [r2, #16]
    ef44:	cmp	r3, #0
    ef48:	bne	ef3c <sf_gen_load+0x554>
    ef4c:	mov	r0, r6
    ef50:	str	r7, [r2, #16]
    ef54:	bl	bcec <sf_gen_proto_abbrev>
    ef58:	mov	r9, r0
    ef5c:	mov	r1, #8
    ef60:	add	r0, r8, #6
    ef64:	bl	2588 <gen_load_macplrel>
    ef68:	mov	r7, r0
    ef6c:	bl	24d8 <newchunk.constprop.26>
    ef70:	mov	r6, r0
    ef74:	mov	r1, #69	; 0x45
    ef78:	ldr	r3, [r6, #44]	; 0x2c
    ef7c:	movw	r2, #8191	; 0x1fff
    ef80:	mov	r0, r9
    ef84:	str	r7, [r6, #4]
    ef88:	str	r1, [r6, #8]
    ef8c:	mov	r1, r6
    ef90:	str	r2, [r6, #20]
    ef94:	str	r6, [r6, #96]	; 0x60
    ef98:	clz	r3, r3
    ef9c:	lsr	r3, r3, #5
    efa0:	str	r3, [r6, #44]	; 0x2c
    efa4:	bl	7884 <sf_gen_and>
    efa8:	ldr	r0, [r5]
    efac:	cmp	r0, #0
    efb0:	beq	efb8 <sf_gen_load+0x5d0>
    efb4:	bl	7884 <sf_gen_and>
    efb8:	mov	r0, #2
    efbc:	bl	bcec <sf_gen_proto_abbrev>
    efc0:	mov	r1, r6
    efc4:	bl	7884 <sf_gen_and>
    efc8:	str	r6, [r5]
    efcc:	b	ee24 <sf_gen_load+0x43c>
    efd0:	ldr	r3, [pc, #1352]	; f520 <sf_gen_load+0xb38>
    efd4:	add	r3, pc, r3
    efd8:	ldr	r2, [r3, #792]	; 0x318
    efdc:	cmp	r2, #0
    efe0:	beq	f204 <sf_gen_load+0x81c>
    efe4:	ldr	r9, [r3, #800]	; 0x320
    efe8:	cmn	r9, #1
    efec:	beq	f220 <sf_gen_load+0x838>
    eff0:	bl	22d0 <newchunk.constprop.25>
    eff4:	mov	r3, #97	; 0x61
    eff8:	mov	r7, r0
    effc:	str	r3, [r0]
    f000:	str	r9, [r0, #12]
    f004:	bl	22d0 <newchunk.constprop.25>
    f008:	mov	r3, #96	; 0x60
    f00c:	mov	r2, r7
    f010:	str	r3, [r0]
    f014:	ldr	r3, [r5, #8]
    f018:	str	r3, [r0, #12]
    f01c:	b	f024 <sf_gen_load+0x63c>
    f020:	mov	r2, r3
    f024:	ldr	r3, [r2, #16]
    f028:	cmp	r3, #0
    f02c:	bne	f020 <sf_gen_load+0x638>
    f030:	str	r0, [r2, #16]
    f034:	bl	22d0 <newchunk.constprop.25>
    f038:	mov	r3, #12
    f03c:	mov	r2, r7
    f040:	str	r3, [r0]
    f044:	b	f04c <sf_gen_load+0x664>
    f048:	mov	r2, r3
    f04c:	ldr	r3, [r2, #16]
    f050:	cmp	r3, #0
    f054:	bne	f048 <sf_gen_load+0x660>
    f058:	str	r0, [r2, #16]
    f05c:	bl	22d0 <newchunk.constprop.25>
    f060:	mov	r3, #7
    f064:	mov	r2, r7
    f068:	str	r3, [r0]
    f06c:	b	f074 <sf_gen_load+0x68c>
    f070:	mov	r2, r3
    f074:	ldr	r3, [r2, #16]
    f078:	cmp	r3, #0
    f07c:	bne	f070 <sf_gen_load+0x688>
    f080:	str	r0, [r2, #16]
    f084:	bl	22d0 <newchunk.constprop.25>
    f088:	ldr	r3, [pc, #1172]	; f524 <sf_gen_load+0xb3c>
    f08c:	mov	r2, r7
    f090:	str	r8, [r0]
    f094:	add	r3, pc, r3
    f098:	ldr	r1, [r3, #796]	; 0x31c
    f09c:	ldr	r3, [r3, #872]	; 0x368
    f0a0:	add	r3, r1, r3
    f0a4:	str	r3, [r0, #12]
    f0a8:	b	f0b0 <sf_gen_load+0x6c8>
    f0ac:	mov	r2, r3
    f0b0:	ldr	r3, [r2, #16]
    f0b4:	cmp	r3, #0
    f0b8:	bne	f0ac <sf_gen_load+0x6c4>
    f0bc:	str	r0, [r2, #16]
    f0c0:	ldr	r2, [r5, #4]
    f0c4:	b	f0cc <sf_gen_load+0x6e4>
    f0c8:	mov	r2, r3
    f0cc:	ldr	r3, [r2, #16]
    f0d0:	cmp	r3, #0
    f0d4:	bne	f0c8 <sf_gen_load+0x6e0>
    f0d8:	mov	r0, r6
    f0dc:	str	r7, [r2, #16]
    f0e0:	bl	bcec <sf_gen_proto_abbrev>
    f0e4:	mov	r6, r0
    f0e8:	ldr	r0, [r5]
    f0ec:	cmp	r0, #0
    f0f0:	beq	f0fc <sf_gen_load+0x714>
    f0f4:	mov	r1, r6
    f0f8:	bl	7884 <sf_gen_and>
    f0fc:	str	r6, [r5]
    f100:	b	ee24 <sf_gen_load+0x43c>
    f104:	bl	3650 <gen_llprefixlen>
    f108:	subs	r6, r0, #0
    f10c:	beq	f1e8 <sf_gen_load+0x800>
    f110:	bl	22d0 <newchunk.constprop.25>
    f114:	mov	r3, #96	; 0x60
    f118:	mov	r2, r6
    f11c:	str	r3, [r0]
    f120:	ldr	r3, [r5, #8]
    f124:	str	r3, [r0, #12]
    f128:	b	f130 <sf_gen_load+0x748>
    f12c:	mov	r2, r3
    f130:	ldr	r3, [r2, #16]
    f134:	cmp	r3, #0
    f138:	bne	f12c <sf_gen_load+0x744>
    f13c:	str	r0, [r2, #16]
    f140:	bl	22d0 <newchunk.constprop.25>
    f144:	mov	r3, #12
    f148:	mov	r2, r6
    f14c:	str	r3, [r0]
    f150:	b	f158 <sf_gen_load+0x770>
    f154:	mov	r2, r3
    f158:	ldr	r3, [r2, #16]
    f15c:	cmp	r3, #0
    f160:	bne	f154 <sf_gen_load+0x76c>
    f164:	str	r0, [r2, #16]
    f168:	bl	22d0 <newchunk.constprop.25>
    f16c:	mov	r3, #7
    f170:	mov	r2, r6
    f174:	str	r3, [r0]
    f178:	b	f180 <sf_gen_load+0x798>
    f17c:	mov	r2, r3
    f180:	ldr	r3, [r2, #16]
    f184:	cmp	r3, #0
    f188:	bne	f17c <sf_gen_load+0x794>
    f18c:	str	r0, [r2, #16]
    f190:	bl	22d0 <newchunk.constprop.25>
    f194:	ldr	r3, [pc, #908]	; f528 <sf_gen_load+0xb40>
    f198:	mov	r2, r6
    f19c:	str	r8, [r0]
    f1a0:	add	r3, pc, r3
    f1a4:	ldr	r3, [r3, #880]	; 0x370
    f1a8:	str	r3, [r0, #12]
    f1ac:	b	f1b4 <sf_gen_load+0x7cc>
    f1b0:	mov	r2, r3
    f1b4:	ldr	r3, [r2, #16]
    f1b8:	cmp	r3, #0
    f1bc:	bne	f1b0 <sf_gen_load+0x7c8>
    f1c0:	str	r0, [r2, #16]
    f1c4:	ldr	r2, [r5, #4]
    f1c8:	b	f1d0 <sf_gen_load+0x7e8>
    f1cc:	mov	r2, r3
    f1d0:	ldr	r3, [r2, #16]
    f1d4:	cmp	r3, #0
    f1d8:	bne	f1cc <sf_gen_load+0x7e4>
    f1dc:	b	ee20 <sf_gen_load+0x438>
    f1e0:	mov	r8, #72	; 0x48
    f1e4:	b	ece4 <sf_gen_load+0x2fc>
    f1e8:	bl	22d0 <newchunk.constprop.25>
    f1ec:	mov	r3, #97	; 0x61
    f1f0:	mov	r6, r0
    f1f4:	str	r3, [r0]
    f1f8:	ldr	r3, [r5, #8]
    f1fc:	str	r3, [r0, #12]
    f200:	b	f190 <sf_gen_load+0x7a8>
    f204:	bl	22d0 <newchunk.constprop.25>
    f208:	mov	r3, #97	; 0x61
    f20c:	mov	r7, r0
    f210:	str	r3, [r0]
    f214:	ldr	r3, [r5, #8]
    f218:	str	r3, [r0, #12]
    f21c:	b	f084 <sf_gen_load+0x69c>
    f220:	ldr	r9, [r3, #804]	; 0x324
    f224:	lsl	r2, r9, #2
    f228:	add	r1, r3, r2
    f22c:	ldr	r1, [r1, #808]	; 0x328
    f230:	cmp	r1, #0
    f234:	beq	f4c0 <sf_gen_load+0xad8>
    f238:	add	r9, r9, #1
    f23c:	rsbs	r2, r9, #0
    f240:	and	r9, r9, #15
    f244:	and	r2, r2, #15
    f248:	rsbpl	r9, r2, #0
    f24c:	lsl	r2, r9, #2
    f250:	str	r9, [r3, #804]	; 0x324
    f254:	add	r1, r3, r2
    f258:	ldr	r1, [r1, #808]	; 0x328
    f25c:	cmp	r1, #0
    f260:	beq	f4c0 <sf_gen_load+0xad8>
    f264:	add	r9, r9, #1
    f268:	rsbs	r2, r9, #0
    f26c:	and	r9, r9, #15
    f270:	and	r2, r2, #15
    f274:	rsbpl	r9, r2, #0
    f278:	lsl	r2, r9, #2
    f27c:	add	r1, r3, r2
    f280:	ldr	r1, [r1, #808]	; 0x328
    f284:	cmp	r1, #0
    f288:	beq	f4b4 <sf_gen_load+0xacc>
    f28c:	add	r9, r9, #1
    f290:	rsbs	r2, r9, #0
    f294:	and	r9, r9, #15
    f298:	and	r2, r2, #15
    f29c:	rsbpl	r9, r2, #0
    f2a0:	lsl	r2, r9, #2
    f2a4:	add	r1, r3, r2
    f2a8:	ldr	r1, [r1, #808]	; 0x328
    f2ac:	cmp	r1, #0
    f2b0:	beq	f4b4 <sf_gen_load+0xacc>
    f2b4:	add	r9, r9, #1
    f2b8:	rsbs	r2, r9, #0
    f2bc:	and	r9, r9, #15
    f2c0:	and	r2, r2, #15
    f2c4:	rsbpl	r9, r2, #0
    f2c8:	lsl	r2, r9, #2
    f2cc:	add	r1, r3, r2
    f2d0:	ldr	r1, [r1, #808]	; 0x328
    f2d4:	cmp	r1, #0
    f2d8:	beq	f4b4 <sf_gen_load+0xacc>
    f2dc:	add	r9, r9, #1
    f2e0:	rsbs	r2, r9, #0
    f2e4:	and	r9, r9, #15
    f2e8:	and	r2, r2, #15
    f2ec:	rsbpl	r9, r2, #0
    f2f0:	lsl	r2, r9, #2
    f2f4:	add	r1, r3, r2
    f2f8:	ldr	r1, [r1, #808]	; 0x328
    f2fc:	cmp	r1, #0
    f300:	beq	f4b4 <sf_gen_load+0xacc>
    f304:	add	r9, r9, #1
    f308:	rsbs	r2, r9, #0
    f30c:	and	r9, r9, #15
    f310:	and	r2, r2, #15
    f314:	rsbpl	r9, r2, #0
    f318:	lsl	r2, r9, #2
    f31c:	add	r1, r3, r2
    f320:	ldr	r1, [r1, #808]	; 0x328
    f324:	cmp	r1, #0
    f328:	beq	f4b4 <sf_gen_load+0xacc>
    f32c:	add	r9, r9, #1
    f330:	rsbs	r2, r9, #0
    f334:	and	r9, r9, #15
    f338:	and	r2, r2, #15
    f33c:	rsbpl	r9, r2, #0
    f340:	lsl	r2, r9, #2
    f344:	add	r3, r3, r2
    f348:	ldr	r3, [r3, #808]	; 0x328
    f34c:	cmp	r3, #0
    f350:	beq	f4b4 <sf_gen_load+0xacc>
    f354:	add	r9, r9, #1
    f358:	ldr	r3, [pc, #460]	; f52c <sf_gen_load+0xb44>
    f35c:	rsbs	r2, r9, #0
    f360:	and	r9, r9, #15
    f364:	and	r2, r2, #15
    f368:	rsbpl	r9, r2, #0
    f36c:	lsl	r2, r9, #2
    f370:	add	r3, pc, r3
    f374:	add	r1, r3, r2
    f378:	ldr	r1, [r1, #808]	; 0x328
    f37c:	cmp	r1, #0
    f380:	beq	f4b4 <sf_gen_load+0xacc>
    f384:	add	r9, r9, #1
    f388:	rsbs	r2, r9, #0
    f38c:	and	r9, r9, #15
    f390:	and	r2, r2, #15
    f394:	rsbpl	r9, r2, #0
    f398:	lsl	r2, r9, #2
    f39c:	add	r1, r3, r2
    f3a0:	ldr	r1, [r1, #808]	; 0x328
    f3a4:	cmp	r1, #0
    f3a8:	beq	f4b4 <sf_gen_load+0xacc>
    f3ac:	add	r9, r9, #1
    f3b0:	rsbs	r2, r9, #0
    f3b4:	and	r9, r9, #15
    f3b8:	and	r2, r2, #15
    f3bc:	rsbpl	r9, r2, #0
    f3c0:	lsl	r2, r9, #2
    f3c4:	add	r1, r3, r2
    f3c8:	ldr	r1, [r1, #808]	; 0x328
    f3cc:	cmp	r1, #0
    f3d0:	beq	f4b4 <sf_gen_load+0xacc>
    f3d4:	add	r9, r9, #1
    f3d8:	rsbs	r2, r9, #0
    f3dc:	and	r9, r9, #15
    f3e0:	and	r2, r2, #15
    f3e4:	rsbpl	r9, r2, #0
    f3e8:	lsl	r2, r9, #2
    f3ec:	add	r1, r3, r2
    f3f0:	ldr	r1, [r1, #808]	; 0x328
    f3f4:	cmp	r1, #0
    f3f8:	beq	f4b4 <sf_gen_load+0xacc>
    f3fc:	add	r9, r9, #1
    f400:	rsbs	r2, r9, #0
    f404:	and	r9, r9, #15
    f408:	and	r2, r2, #15
    f40c:	rsbpl	r9, r2, #0
    f410:	lsl	r2, r9, #2
    f414:	add	r1, r3, r2
    f418:	ldr	r1, [r1, #808]	; 0x328
    f41c:	cmp	r1, #0
    f420:	beq	f4b4 <sf_gen_load+0xacc>
    f424:	add	r9, r9, #1
    f428:	rsbs	r2, r9, #0
    f42c:	and	r9, r9, #15
    f430:	and	r2, r2, #15
    f434:	rsbpl	r9, r2, #0
    f438:	lsl	r2, r9, #2
    f43c:	add	r1, r3, r2
    f440:	ldr	r1, [r1, #808]	; 0x328
    f444:	cmp	r1, #0
    f448:	beq	f4b4 <sf_gen_load+0xacc>
    f44c:	add	r9, r9, #1
    f450:	rsbs	r2, r9, #0
    f454:	and	r9, r9, #15
    f458:	and	r2, r2, #15
    f45c:	rsbpl	r9, r2, #0
    f460:	lsl	r2, r9, #2
    f464:	add	r1, r3, r2
    f468:	ldr	r1, [r1, #808]	; 0x328
    f46c:	cmp	r1, #0
    f470:	beq	f4b4 <sf_gen_load+0xacc>
    f474:	add	r9, r9, #1
    f478:	rsbs	r2, r9, #0
    f47c:	and	r9, r9, #15
    f480:	and	r2, r2, #15
    f484:	rsbpl	r9, r2, #0
    f488:	lsl	r2, r9, #2
    f48c:	add	r1, r3, r2
    f490:	ldr	r1, [r1, #808]	; 0x328
    f494:	cmp	r1, #0
    f498:	beq	f4b4 <sf_gen_load+0xacc>
    f49c:	ldr	r0, [pc, #140]	; f530 <sf_gen_load+0xb48>
    f4a0:	add	r2, r9, #1
    f4a4:	and	r2, r2, #15
    f4a8:	str	r2, [r3, #804]	; 0x324
    f4ac:	add	r0, pc, r0
    f4b0:	bl	2130 <sf_bpf_error>
    f4b4:	ldr	r3, [pc, #120]	; f534 <sf_gen_load+0xb4c>
    f4b8:	add	r3, pc, r3
    f4bc:	str	r9, [r3, #804]	; 0x324
    f4c0:	ldr	r3, [pc, #112]	; f538 <sf_gen_load+0xb50>
    f4c4:	mov	r1, #1
    f4c8:	add	r3, pc, r3
    f4cc:	add	r2, r3, r2
    f4d0:	str	r9, [r3, #800]	; 0x320
    f4d4:	str	r1, [r2, #808]	; 0x328
    f4d8:	b	eff0 <sf_gen_load+0x608>
    f4dc:	ldr	r0, [pc, #88]	; f53c <sf_gen_load+0xb54>
    f4e0:	add	r0, pc, r0
    f4e4:	bl	2130 <sf_bpf_error>
    f4e8:	ldr	r0, [pc, #80]	; f540 <sf_gen_load+0xb58>
    f4ec:	add	r0, pc, r0
    f4f0:	bl	2130 <sf_bpf_error>
    f4f4:	ldr	r0, [pc, #72]	; f544 <sf_gen_load+0xb5c>
    f4f8:	add	r0, pc, r0
    f4fc:	bl	2130 <sf_bpf_error>
    f500:	.word	0x0002f95c
    f504:	.word	0x0002f7b4
    f508:	.word	0x00011564
    f50c:	.word	0x0002f6bc
    f510:	.word	0x0002f6a4
    f514:	.word	0x00012488
    f518:	.word	0x0002f5ac
    f51c:	.word	0x0002f440
    f520:	.word	0x0002f38c
    f524:	.word	0x0002f2cc
    f528:	.word	0x0002f1c0
    f52c:	.word	0x0002eff0
    f530:	.word	0x00010d50
    f534:	.word	0x0002eea8
    f538:	.word	0x0002ee98
    f53c:	.word	0x00011d84
    f540:	.word	0x00011d5c
    f544:	.word	0x00011d98

0000f548 <sf_gen_relation>:
    f548:	strd	r4, [sp, #-32]!	; 0xffffffe0
    f54c:	mov	r4, r1
    f550:	mov	r5, r2
    f554:	strd	r6, [sp, #8]
    f558:	strd	r8, [sp, #16]
    f55c:	mov	r9, r0
    f560:	mov	r8, r3
    f564:	str	sl, [sp, #24]
    f568:	str	lr, [sp, #28]
    f56c:	bl	22d0 <newchunk.constprop.25>
    f570:	mov	r3, #97	; 0x61
    f574:	mov	r6, r0
    f578:	str	r3, [r0]
    f57c:	ldr	r3, [r5, #8]
    f580:	str	r3, [r0, #12]
    f584:	bl	22d0 <newchunk.constprop.25>
    f588:	mov	r3, #96	; 0x60
    f58c:	cmp	r9, #16
    f590:	mov	r7, r0
    f594:	str	r3, [r0]
    f598:	ldr	r3, [r4, #8]
    f59c:	str	r3, [r0, #12]
    f5a0:	beq	f7cc <sf_gen_relation+0x284>
    f5a4:	orr	r9, r9, #13
    f5a8:	bl	24d8 <newchunk.constprop.26>
    f5ac:	str	r9, [r0, #8]
    f5b0:	str	r0, [r0, #96]	; 0x60
    f5b4:	cmp	r8, #0
    f5b8:	beq	f5cc <sf_gen_relation+0x84>
    f5bc:	ldr	r3, [r0, #44]	; 0x2c
    f5c0:	clz	r3, r3
    f5c4:	lsr	r3, r3, #5
    f5c8:	str	r3, [r0, #44]	; 0x2c
    f5cc:	mov	ip, r6
    f5d0:	b	f5d8 <sf_gen_relation+0x90>
    f5d4:	mov	ip, r3
    f5d8:	ldr	r3, [ip, #16]
    f5dc:	cmp	r3, #0
    f5e0:	bne	f5d4 <sf_gen_relation+0x8c>
    f5e4:	str	r7, [ip, #16]
    f5e8:	ldr	ip, [r5, #4]
    f5ec:	b	f5f4 <sf_gen_relation+0xac>
    f5f0:	mov	ip, r3
    f5f4:	ldr	r3, [ip, #16]
    f5f8:	cmp	r3, #0
    f5fc:	bne	f5f0 <sf_gen_relation+0xa8>
    f600:	str	r6, [ip, #16]
    f604:	ldr	ip, [r4, #4]
    f608:	ldr	r2, [r5, #4]
    f60c:	b	f614 <sf_gen_relation+0xcc>
    f610:	mov	ip, r3
    f614:	ldr	r3, [ip, #16]
    f618:	cmp	r3, #0
    f61c:	bne	f610 <sf_gen_relation+0xc8>
    f620:	str	r2, [ip, #16]
    f624:	ldr	r1, [r4, #4]
    f628:	ldr	r2, [pc, #476]	; f80c <sf_gen_relation+0x2c4>
    f62c:	str	r1, [r0, #4]
    f630:	ldr	r1, [r4, #8]
    f634:	add	r2, pc, r2
    f638:	add	r1, r2, r1, lsl #2
    f63c:	str	r3, [r1, #808]	; 0x328
    f640:	ldr	r1, [r5, #8]
    f644:	add	r2, r2, r1, lsl #2
    f648:	str	r3, [r2, #808]	; 0x328
    f64c:	ldr	ip, [r4]
    f650:	cmp	ip, #0
    f654:	beq	f7b8 <sf_gen_relation+0x270>
    f658:	ldr	lr, [r5]
    f65c:	ldr	r2, [ip, #44]	; 0x2c
    f660:	cmp	lr, #0
    f664:	beq	f704 <sf_gen_relation+0x1bc>
    f668:	mov	r1, ip
    f66c:	ldr	r4, [lr, #96]	; 0x60
    f670:	b	f68c <sf_gen_relation+0x144>
    f674:	ldr	r3, [r1, #60]	; 0x3c
    f678:	str	r4, [r1, #60]	; 0x3c
    f67c:	cmp	r3, #0
    f680:	beq	f6a4 <sf_gen_relation+0x15c>
    f684:	ldr	r2, [r3, #44]	; 0x2c
    f688:	mov	r1, r3
    f68c:	cmp	r2, #0
    f690:	beq	f674 <sf_gen_relation+0x12c>
    f694:	ldr	r3, [r1, #84]	; 0x54
    f698:	str	r4, [r1, #84]	; 0x54
    f69c:	cmp	r3, #0
    f6a0:	bne	f684 <sf_gen_relation+0x13c>
    f6a4:	ldr	r2, [ip, #44]	; 0x2c
    f6a8:	mov	r3, lr
    f6ac:	clz	r2, r2
    f6b0:	lsr	r2, r2, #5
    f6b4:	str	r2, [ip, #44]	; 0x2c
    f6b8:	ldr	r2, [lr, #44]	; 0x2c
    f6bc:	clz	r2, r2
    f6c0:	lsr	r2, r2, #5
    f6c4:	str	r2, [lr, #44]	; 0x2c
    f6c8:	ldr	r1, [r3, #44]	; 0x2c
    f6cc:	add	r2, r3, #84	; 0x54
    f6d0:	cmp	r1, #0
    f6d4:	addeq	r2, r3, #60	; 0x3c
    f6d8:	ldr	r3, [r2]
    f6dc:	cmp	r3, #0
    f6e0:	bne	f6c8 <sf_gen_relation+0x180>
    f6e4:	str	ip, [r2]
    f6e8:	ldr	r2, [lr, #44]	; 0x2c
    f6ec:	clz	r2, r2
    f6f0:	lsr	r2, r2, #5
    f6f4:	str	r2, [lr, #44]	; 0x2c
    f6f8:	ldr	r3, [ip, #96]	; 0x60
    f6fc:	mov	ip, lr
    f700:	str	r3, [lr, #96]	; 0x60
    f704:	mov	r3, ip
    f708:	ldr	r1, [r0, #96]	; 0x60
    f70c:	b	f728 <sf_gen_relation+0x1e0>
    f710:	ldr	r2, [r3, #60]	; 0x3c
    f714:	str	r1, [r3, #60]	; 0x3c
    f718:	cmp	r2, #0
    f71c:	mov	r3, r2
    f720:	beq	f744 <sf_gen_relation+0x1fc>
    f724:	ldr	r2, [r3, #44]	; 0x2c
    f728:	cmp	r2, #0
    f72c:	beq	f710 <sf_gen_relation+0x1c8>
    f730:	ldr	r2, [r3, #84]	; 0x54
    f734:	str	r1, [r3, #84]	; 0x54
    f738:	cmp	r2, #0
    f73c:	mov	r3, r2
    f740:	bne	f724 <sf_gen_relation+0x1dc>
    f744:	ldr	r2, [ip, #44]	; 0x2c
    f748:	mov	r3, r0
    f74c:	clz	r2, r2
    f750:	lsr	r2, r2, #5
    f754:	str	r2, [ip, #44]	; 0x2c
    f758:	ldr	r2, [r0, #44]	; 0x2c
    f75c:	clz	r2, r2
    f760:	lsr	r2, r2, #5
    f764:	str	r2, [r0, #44]	; 0x2c
    f768:	ldr	r1, [r3, #44]	; 0x2c
    f76c:	add	r2, r3, #84	; 0x54
    f770:	cmp	r1, #0
    f774:	addeq	r2, r3, #60	; 0x3c
    f778:	ldr	r3, [r2]
    f77c:	cmp	r3, #0
    f780:	bne	f768 <sf_gen_relation+0x220>
    f784:	str	ip, [r2]
    f788:	ldr	r3, [r0, #44]	; 0x2c
    f78c:	clz	r3, r3
    f790:	lsr	r3, r3, #5
    f794:	str	r3, [r0, #44]	; 0x2c
    f798:	ldr	r3, [ip, #96]	; 0x60
    f79c:	str	r3, [r0, #96]	; 0x60
    f7a0:	ldrd	r4, [sp]
    f7a4:	ldrd	r6, [sp, #8]
    f7a8:	ldrd	r8, [sp, #16]
    f7ac:	ldr	sl, [sp, #24]
    f7b0:	add	sp, sp, #28
    f7b4:	pop	{pc}		; (ldr pc, [sp], #4)
    f7b8:	ldr	ip, [r5]
    f7bc:	cmp	ip, #0
    f7c0:	beq	f7a0 <sf_gen_relation+0x258>
    f7c4:	ldr	r2, [ip, #44]	; 0x2c
    f7c8:	b	f704 <sf_gen_relation+0x1bc>
    f7cc:	bl	22d0 <newchunk.constprop.25>
    f7d0:	mov	r3, #28
    f7d4:	mov	r9, r0
    f7d8:	str	r3, [r0]
    f7dc:	bl	24d8 <newchunk.constprop.26>
    f7e0:	mov	r3, #21
    f7e4:	mov	r2, r7
    f7e8:	str	r3, [r0, #8]
    f7ec:	str	r0, [r0, #96]	; 0x60
    f7f0:	b	f7f8 <sf_gen_relation+0x2b0>
    f7f4:	mov	r2, r3
    f7f8:	ldr	r3, [r2, #16]
    f7fc:	cmp	r3, #0
    f800:	bne	f7f4 <sf_gen_relation+0x2ac>
    f804:	str	r9, [r2, #16]
    f808:	b	f5b4 <sf_gen_relation+0x6c>
    f80c:	.word	0x0002ed2c

0000f810 <sf_gen_loadlen>:
    f810:	ldr	r2, [pc, #908]	; fba4 <sf_gen_loadlen+0x394>
    f814:	strd	r4, [sp, #-24]!	; 0xffffffe8
    f818:	strd	r6, [sp, #8]
    f81c:	str	r8, [sp, #16]
    f820:	str	lr, [sp, #20]
    f824:	add	r2, pc, r2
    f828:	ldr	r4, [r2, #804]	; 0x324
    f82c:	lsl	r3, r4, #2
    f830:	add	r1, r2, r3
    f834:	ldr	r1, [r1, #808]	; 0x328
    f838:	cmp	r1, #0
    f83c:	beq	fac8 <sf_gen_loadlen+0x2b8>
    f840:	add	r4, r4, #1
    f844:	rsbs	r3, r4, #0
    f848:	and	r4, r4, #15
    f84c:	and	r3, r3, #15
    f850:	rsbpl	r4, r3, #0
    f854:	lsl	r3, r4, #2
    f858:	str	r4, [r2, #804]	; 0x324
    f85c:	add	r1, r2, r3
    f860:	ldr	r1, [r1, #808]	; 0x328
    f864:	cmp	r1, #0
    f868:	beq	fac8 <sf_gen_loadlen+0x2b8>
    f86c:	add	r4, r4, #1
    f870:	rsbs	r3, r4, #0
    f874:	and	r4, r4, #15
    f878:	and	r3, r3, #15
    f87c:	rsbpl	r4, r3, #0
    f880:	lsl	r3, r4, #2
    f884:	add	r1, r2, r3
    f888:	ldr	r1, [r1, #808]	; 0x328
    f88c:	cmp	r1, #0
    f890:	beq	fabc <sf_gen_loadlen+0x2ac>
    f894:	add	r4, r4, #1
    f898:	rsbs	r3, r4, #0
    f89c:	and	r4, r4, #15
    f8a0:	and	r3, r3, #15
    f8a4:	rsbpl	r4, r3, #0
    f8a8:	lsl	r3, r4, #2
    f8ac:	add	r1, r2, r3
    f8b0:	ldr	r1, [r1, #808]	; 0x328
    f8b4:	cmp	r1, #0
    f8b8:	beq	fabc <sf_gen_loadlen+0x2ac>
    f8bc:	add	r4, r4, #1
    f8c0:	rsbs	r3, r4, #0
    f8c4:	and	r4, r4, #15
    f8c8:	and	r3, r3, #15
    f8cc:	rsbpl	r4, r3, #0
    f8d0:	lsl	r3, r4, #2
    f8d4:	add	r1, r2, r3
    f8d8:	ldr	r1, [r1, #808]	; 0x328
    f8dc:	cmp	r1, #0
    f8e0:	beq	fabc <sf_gen_loadlen+0x2ac>
    f8e4:	add	r4, r4, #1
    f8e8:	rsbs	r3, r4, #0
    f8ec:	and	r4, r4, #15
    f8f0:	and	r3, r3, #15
    f8f4:	rsbpl	r4, r3, #0
    f8f8:	lsl	r3, r4, #2
    f8fc:	add	r1, r2, r3
    f900:	ldr	r1, [r1, #808]	; 0x328
    f904:	cmp	r1, #0
    f908:	beq	fabc <sf_gen_loadlen+0x2ac>
    f90c:	add	r4, r4, #1
    f910:	rsbs	r3, r4, #0
    f914:	and	r4, r4, #15
    f918:	and	r3, r3, #15
    f91c:	rsbpl	r4, r3, #0
    f920:	lsl	r3, r4, #2
    f924:	add	r1, r2, r3
    f928:	ldr	r1, [r1, #808]	; 0x328
    f92c:	cmp	r1, #0
    f930:	beq	fabc <sf_gen_loadlen+0x2ac>
    f934:	add	r4, r4, #1
    f938:	rsbs	r3, r4, #0
    f93c:	and	r4, r4, #15
    f940:	and	r3, r3, #15
    f944:	rsbpl	r4, r3, #0
    f948:	lsl	r3, r4, #2
    f94c:	add	r1, r2, r3
    f950:	ldr	r1, [r1, #808]	; 0x328
    f954:	cmp	r1, #0
    f958:	beq	fabc <sf_gen_loadlen+0x2ac>
    f95c:	add	r4, r4, #1
    f960:	rsbs	r3, r4, #0
    f964:	and	r4, r4, #15
    f968:	and	r3, r3, #15
    f96c:	rsbpl	r4, r3, #0
    f970:	lsl	r3, r4, #2
    f974:	add	r1, r2, r3
    f978:	ldr	r1, [r1, #808]	; 0x328
    f97c:	cmp	r1, #0
    f980:	beq	fabc <sf_gen_loadlen+0x2ac>
    f984:	add	r4, r4, #1
    f988:	rsbs	r3, r4, #0
    f98c:	and	r4, r4, #15
    f990:	and	r3, r3, #15
    f994:	rsbpl	r4, r3, #0
    f998:	lsl	r3, r4, #2
    f99c:	add	r2, r2, r3
    f9a0:	ldr	r2, [r2, #808]	; 0x328
    f9a4:	cmp	r2, #0
    f9a8:	beq	fabc <sf_gen_loadlen+0x2ac>
    f9ac:	add	r4, r4, #1
    f9b0:	ldr	r2, [pc, #496]	; fba8 <sf_gen_loadlen+0x398>
    f9b4:	rsbs	r3, r4, #0
    f9b8:	and	r4, r4, #15
    f9bc:	and	r3, r3, #15
    f9c0:	rsbpl	r4, r3, #0
    f9c4:	lsl	r3, r4, #2
    f9c8:	add	r2, pc, r2
    f9cc:	add	r1, r2, r3
    f9d0:	ldr	r1, [r1, #808]	; 0x328
    f9d4:	cmp	r1, #0
    f9d8:	beq	fabc <sf_gen_loadlen+0x2ac>
    f9dc:	add	r4, r4, #1
    f9e0:	rsbs	r3, r4, #0
    f9e4:	and	r4, r4, #15
    f9e8:	and	r3, r3, #15
    f9ec:	rsbpl	r4, r3, #0
    f9f0:	lsl	r3, r4, #2
    f9f4:	add	r1, r2, r3
    f9f8:	ldr	r1, [r1, #808]	; 0x328
    f9fc:	cmp	r1, #0
    fa00:	beq	fabc <sf_gen_loadlen+0x2ac>
    fa04:	add	r4, r4, #1
    fa08:	rsbs	r3, r4, #0
    fa0c:	and	r4, r4, #15
    fa10:	and	r3, r3, #15
    fa14:	rsbpl	r4, r3, #0
    fa18:	lsl	r3, r4, #2
    fa1c:	add	r1, r2, r3
    fa20:	ldr	r1, [r1, #808]	; 0x328
    fa24:	cmp	r1, #0
    fa28:	beq	fabc <sf_gen_loadlen+0x2ac>
    fa2c:	add	r4, r4, #1
    fa30:	rsbs	r3, r4, #0
    fa34:	and	r4, r4, #15
    fa38:	and	r3, r3, #15
    fa3c:	rsbpl	r4, r3, #0
    fa40:	lsl	r3, r4, #2
    fa44:	add	r1, r2, r3
    fa48:	ldr	r1, [r1, #808]	; 0x328
    fa4c:	cmp	r1, #0
    fa50:	beq	fabc <sf_gen_loadlen+0x2ac>
    fa54:	add	r4, r4, #1
    fa58:	rsbs	r3, r4, #0
    fa5c:	and	r4, r4, #15
    fa60:	and	r3, r3, #15
    fa64:	rsbpl	r4, r3, #0
    fa68:	lsl	r3, r4, #2
    fa6c:	add	r1, r2, r3
    fa70:	ldr	r1, [r1, #808]	; 0x328
    fa74:	cmp	r1, #0
    fa78:	beq	fabc <sf_gen_loadlen+0x2ac>
    fa7c:	add	r4, r4, #1
    fa80:	rsbs	r3, r4, #0
    fa84:	and	r4, r4, #15
    fa88:	and	r3, r3, #15
    fa8c:	rsbpl	r4, r3, #0
    fa90:	lsl	r3, r4, #2
    fa94:	add	r1, r2, r3
    fa98:	ldr	r1, [r1, #808]	; 0x328
    fa9c:	cmp	r1, #0
    faa0:	beq	fabc <sf_gen_loadlen+0x2ac>
    faa4:	ldr	r0, [pc, #256]	; fbac <sf_gen_loadlen+0x39c>
    faa8:	add	r4, r4, #1
    faac:	and	r4, r4, #15
    fab0:	str	r4, [r2, #804]	; 0x324
    fab4:	add	r0, pc, r0
    fab8:	bl	2130 <sf_bpf_error>
    fabc:	ldr	r2, [pc, #236]	; fbb0 <sf_gen_loadlen+0x3a0>
    fac0:	add	r2, pc, r2
    fac4:	str	r4, [r2, #804]	; 0x324
    fac8:	ldr	r2, [pc, #228]	; fbb4 <sf_gen_loadlen+0x3a4>
    facc:	mov	r1, #1
    fad0:	add	r2, pc, r2
    fad4:	ldr	r5, [r2, #656]	; 0x290
    fad8:	add	r3, r2, r3
    fadc:	add	r0, r2, #660	; 0x294
    fae0:	str	r1, [r3, #808]	; 0x328
    fae4:	lsl	r6, r5, #3
    fae8:	add	r3, r2, r6
    faec:	add	r6, r0, r6
    faf0:	ldr	r3, [r3, #660]	; 0x294
    faf4:	cmp	r3, #11
    faf8:	bhi	fb88 <sf_gen_loadlen+0x378>
    fafc:	add	r3, r5, r1
    fb00:	add	r7, r6, #8
    fb04:	cmp	r3, #15
    fb08:	str	r3, [r2, #656]	; 0x290
    fb0c:	bgt	fb98 <sf_gen_loadlen+0x388>
    fb10:	mov	r5, #1024	; 0x400
    fb14:	lsl	r5, r5, r3
    fb18:	mov	r0, r5
    fb1c:	bl	ce8 <calloc@plt>
    fb20:	cmp	r0, #0
    fb24:	str	r0, [r6, #12]
    fb28:	beq	fb98 <sf_gen_loadlen+0x388>
    fb2c:	cmp	r5, #11
    fb30:	str	r5, [r6, #8]
    fb34:	bls	fb98 <sf_gen_loadlen+0x388>
    fb38:	sub	r5, r5, #12
    fb3c:	add	r6, r0, r5
    fb40:	str	r5, [r7]
    fb44:	bl	22d0 <newchunk.constprop.25>
    fb48:	mov	r3, #128	; 0x80
    fb4c:	mov	r5, r0
    fb50:	str	r3, [r0]
    fb54:	bl	22d0 <newchunk.constprop.25>
    fb58:	mov	r3, #2
    fb5c:	str	r3, [r0]
    fb60:	str	r0, [r5, #16]
    fb64:	str	r4, [r0, #12]
    fb68:	mov	r0, r6
    fb6c:	str	r5, [r6, #4]
    fb70:	str	r4, [r6, #8]
    fb74:	ldrd	r4, [sp]
    fb78:	ldrd	r6, [sp, #8]
    fb7c:	ldr	r8, [sp, #16]
    fb80:	add	sp, sp, #20
    fb84:	pop	{pc}		; (ldr pc, [sp], #4)
    fb88:	mov	r7, r6
    fb8c:	ldr	r5, [r0, r5, lsl #3]
    fb90:	ldr	r0, [r6, #4]
    fb94:	b	fb38 <sf_gen_loadlen+0x328>
    fb98:	ldr	r0, [pc, #24]	; fbb8 <sf_gen_loadlen+0x3a8>
    fb9c:	add	r0, pc, r0
    fba0:	bl	2130 <sf_bpf_error>
    fba4:	.word	0x0002eb3c
    fba8:	.word	0x0002e998
    fbac:	.word	0x00010748
    fbb0:	.word	0x0002e8a0
    fbb4:	.word	0x0002e890
    fbb8:	.word	0x00010650

0000fbbc <sf_gen_loadi>:
    fbbc:	ldr	r3, [pc, #924]	; ff60 <sf_gen_loadi+0x3a4>
    fbc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    fbc4:	mov	r5, r0
    fbc8:	strd	r6, [sp, #8]
    fbcc:	str	r8, [sp, #16]
    fbd0:	str	lr, [sp, #20]
    fbd4:	add	r3, pc, r3
    fbd8:	ldr	r0, [r3, #656]	; 0x290
    fbdc:	add	r2, r3, #660	; 0x294
    fbe0:	lsl	r4, r0, #3
    fbe4:	add	r1, r3, r4
    fbe8:	add	r4, r2, r4
    fbec:	ldr	r1, [r1, #660]	; 0x294
    fbf0:	cmp	r1, #11
    fbf4:	bhi	fc44 <sf_gen_loadi+0x88>
    fbf8:	add	r0, r0, #1
    fbfc:	add	r7, r4, #8
    fc00:	cmp	r0, #15
    fc04:	str	r0, [r3, #656]	; 0x290
    fc08:	bgt	fc38 <sf_gen_loadi+0x7c>
    fc0c:	mov	r6, #1024	; 0x400
    fc10:	mov	r1, #1
    fc14:	lsl	r6, r6, r0
    fc18:	mov	r0, r6
    fc1c:	bl	ce8 <calloc@plt>
    fc20:	cmp	r0, #0
    fc24:	str	r0, [r4, #12]
    fc28:	beq	fc38 <sf_gen_loadi+0x7c>
    fc2c:	cmp	r6, #11
    fc30:	str	r6, [r4, #8]
    fc34:	bhi	fc50 <sf_gen_loadi+0x94>
    fc38:	ldr	r0, [pc, #804]	; ff64 <sf_gen_loadi+0x3a8>
    fc3c:	add	r0, pc, r0
    fc40:	bl	2130 <sf_bpf_error>
    fc44:	ldr	r6, [r2, r0, lsl #3]
    fc48:	mov	r7, r4
    fc4c:	ldr	r0, [r4, #4]
    fc50:	sub	r6, r6, #12
    fc54:	ldr	r2, [pc, #780]	; ff68 <sf_gen_loadi+0x3ac>
    fc58:	str	r6, [r7]
    fc5c:	add	r2, pc, r2
    fc60:	ldr	r4, [r2, #804]	; 0x324
    fc64:	lsl	r3, r4, #2
    fc68:	add	r1, r2, r3
    fc6c:	ldr	r1, [r1, #808]	; 0x328
    fc70:	cmp	r1, #0
    fc74:	beq	ff00 <sf_gen_loadi+0x344>
    fc78:	add	r4, r4, #1
    fc7c:	rsbs	r3, r4, #0
    fc80:	and	r4, r4, #15
    fc84:	and	r3, r3, #15
    fc88:	rsbpl	r4, r3, #0
    fc8c:	lsl	r3, r4, #2
    fc90:	str	r4, [r2, #804]	; 0x324
    fc94:	add	r1, r2, r3
    fc98:	ldr	r1, [r1, #808]	; 0x328
    fc9c:	cmp	r1, #0
    fca0:	beq	ff00 <sf_gen_loadi+0x344>
    fca4:	add	r4, r4, #1
    fca8:	rsbs	r3, r4, #0
    fcac:	and	r4, r4, #15
    fcb0:	and	r3, r3, #15
    fcb4:	rsbpl	r4, r3, #0
    fcb8:	lsl	r3, r4, #2
    fcbc:	add	r1, r2, r3
    fcc0:	ldr	r1, [r1, #808]	; 0x328
    fcc4:	cmp	r1, #0
    fcc8:	beq	fef4 <sf_gen_loadi+0x338>
    fccc:	add	r4, r4, #1
    fcd0:	rsbs	r3, r4, #0
    fcd4:	and	r4, r4, #15
    fcd8:	and	r3, r3, #15
    fcdc:	rsbpl	r4, r3, #0
    fce0:	lsl	r3, r4, #2
    fce4:	add	r1, r2, r3
    fce8:	ldr	r1, [r1, #808]	; 0x328
    fcec:	cmp	r1, #0
    fcf0:	beq	fef4 <sf_gen_loadi+0x338>
    fcf4:	add	r4, r4, #1
    fcf8:	rsbs	r3, r4, #0
    fcfc:	and	r4, r4, #15
    fd00:	and	r3, r3, #15
    fd04:	rsbpl	r4, r3, #0
    fd08:	lsl	r3, r4, #2
    fd0c:	add	r1, r2, r3
    fd10:	ldr	r1, [r1, #808]	; 0x328
    fd14:	cmp	r1, #0
    fd18:	beq	fef4 <sf_gen_loadi+0x338>
    fd1c:	add	r4, r4, #1
    fd20:	rsbs	r3, r4, #0
    fd24:	and	r4, r4, #15
    fd28:	and	r3, r3, #15
    fd2c:	rsbpl	r4, r3, #0
    fd30:	lsl	r3, r4, #2
    fd34:	add	r1, r2, r3
    fd38:	ldr	r1, [r1, #808]	; 0x328
    fd3c:	cmp	r1, #0
    fd40:	beq	fef4 <sf_gen_loadi+0x338>
    fd44:	add	r4, r4, #1
    fd48:	rsbs	r3, r4, #0
    fd4c:	and	r4, r4, #15
    fd50:	and	r3, r3, #15
    fd54:	rsbpl	r4, r3, #0
    fd58:	lsl	r3, r4, #2
    fd5c:	add	r1, r2, r3
    fd60:	ldr	r1, [r1, #808]	; 0x328
    fd64:	cmp	r1, #0
    fd68:	beq	fef4 <sf_gen_loadi+0x338>
    fd6c:	add	r4, r4, #1
    fd70:	rsbs	r3, r4, #0
    fd74:	and	r4, r4, #15
    fd78:	and	r3, r3, #15
    fd7c:	rsbpl	r4, r3, #0
    fd80:	lsl	r3, r4, #2
    fd84:	add	r1, r2, r3
    fd88:	ldr	r1, [r1, #808]	; 0x328
    fd8c:	cmp	r1, #0
    fd90:	beq	fef4 <sf_gen_loadi+0x338>
    fd94:	add	r4, r4, #1
    fd98:	rsbs	r3, r4, #0
    fd9c:	and	r4, r4, #15
    fda0:	and	r3, r3, #15
    fda4:	rsbpl	r4, r3, #0
    fda8:	lsl	r3, r4, #2
    fdac:	add	r1, r2, r3
    fdb0:	ldr	r1, [r1, #808]	; 0x328
    fdb4:	cmp	r1, #0
    fdb8:	beq	fef4 <sf_gen_loadi+0x338>
    fdbc:	add	r4, r4, #1
    fdc0:	rsbs	r3, r4, #0
    fdc4:	and	r4, r4, #15
    fdc8:	and	r3, r3, #15
    fdcc:	rsbpl	r4, r3, #0
    fdd0:	lsl	r3, r4, #2
    fdd4:	add	r2, r2, r3
    fdd8:	ldr	r2, [r2, #808]	; 0x328
    fddc:	cmp	r2, #0
    fde0:	beq	fef4 <sf_gen_loadi+0x338>
    fde4:	add	r4, r4, #1
    fde8:	ldr	r2, [pc, #380]	; ff6c <sf_gen_loadi+0x3b0>
    fdec:	rsbs	r3, r4, #0
    fdf0:	and	r4, r4, #15
    fdf4:	and	r3, r3, #15
    fdf8:	rsbpl	r4, r3, #0
    fdfc:	lsl	r3, r4, #2
    fe00:	add	r2, pc, r2
    fe04:	add	r1, r2, r3
    fe08:	ldr	r1, [r1, #808]	; 0x328
    fe0c:	cmp	r1, #0
    fe10:	beq	fef4 <sf_gen_loadi+0x338>
    fe14:	add	r4, r4, #1
    fe18:	rsbs	r3, r4, #0
    fe1c:	and	r4, r4, #15
    fe20:	and	r3, r3, #15
    fe24:	rsbpl	r4, r3, #0
    fe28:	lsl	r3, r4, #2
    fe2c:	add	r1, r2, r3
    fe30:	ldr	r1, [r1, #808]	; 0x328
    fe34:	cmp	r1, #0
    fe38:	beq	fef4 <sf_gen_loadi+0x338>
    fe3c:	add	r4, r4, #1
    fe40:	rsbs	r3, r4, #0
    fe44:	and	r4, r4, #15
    fe48:	and	r3, r3, #15
    fe4c:	rsbpl	r4, r3, #0
    fe50:	lsl	r3, r4, #2
    fe54:	add	r1, r2, r3
    fe58:	ldr	r1, [r1, #808]	; 0x328
    fe5c:	cmp	r1, #0
    fe60:	beq	fef4 <sf_gen_loadi+0x338>
    fe64:	add	r4, r4, #1
    fe68:	rsbs	r3, r4, #0
    fe6c:	and	r4, r4, #15
    fe70:	and	r3, r3, #15
    fe74:	rsbpl	r4, r3, #0
    fe78:	lsl	r3, r4, #2
    fe7c:	add	r1, r2, r3
    fe80:	ldr	r1, [r1, #808]	; 0x328
    fe84:	cmp	r1, #0
    fe88:	beq	fef4 <sf_gen_loadi+0x338>
    fe8c:	add	r4, r4, #1
    fe90:	rsbs	r3, r4, #0
    fe94:	and	r4, r4, #15
    fe98:	and	r3, r3, #15
    fe9c:	rsbpl	r4, r3, #0
    fea0:	lsl	r3, r4, #2
    fea4:	add	r1, r2, r3
    fea8:	ldr	r1, [r1, #808]	; 0x328
    feac:	cmp	r1, #0
    feb0:	beq	fef4 <sf_gen_loadi+0x338>
    feb4:	add	r4, r4, #1
    feb8:	rsbs	r3, r4, #0
    febc:	and	r4, r4, #15
    fec0:	and	r3, r3, #15
    fec4:	rsbpl	r4, r3, #0
    fec8:	lsl	r3, r4, #2
    fecc:	add	r1, r2, r3
    fed0:	ldr	r1, [r1, #808]	; 0x328
    fed4:	cmp	r1, #0
    fed8:	beq	fef4 <sf_gen_loadi+0x338>
    fedc:	ldr	r0, [pc, #140]	; ff70 <sf_gen_loadi+0x3b4>
    fee0:	add	r4, r4, #1
    fee4:	and	r4, r4, #15
    fee8:	str	r4, [r2, #804]	; 0x324
    feec:	add	r0, pc, r0
    fef0:	bl	2130 <sf_bpf_error>
    fef4:	ldr	r2, [pc, #120]	; ff74 <sf_gen_loadi+0x3b8>
    fef8:	add	r2, pc, r2
    fefc:	str	r4, [r2, #804]	; 0x324
    ff00:	ldr	r2, [pc, #112]	; ff78 <sf_gen_loadi+0x3bc>
    ff04:	mov	r1, #1
    ff08:	add	r6, r0, r6
    ff0c:	add	r2, pc, r2
    ff10:	add	r3, r2, r3
    ff14:	str	r1, [r3, #808]	; 0x328
    ff18:	bl	22d0 <newchunk.constprop.25>
    ff1c:	mov	r3, #0
    ff20:	mov	r7, r0
    ff24:	str	r3, [r0]
    ff28:	str	r5, [r0, #12]
    ff2c:	bl	22d0 <newchunk.constprop.25>
    ff30:	mov	r3, #2
    ff34:	str	r3, [r0]
    ff38:	str	r0, [r7, #16]
    ff3c:	str	r4, [r0, #12]
    ff40:	mov	r0, r6
    ff44:	str	r7, [r6, #4]
    ff48:	str	r4, [r6, #8]
    ff4c:	ldrd	r4, [sp]
    ff50:	ldrd	r6, [sp, #8]
    ff54:	ldr	r8, [sp, #16]
    ff58:	add	sp, sp, #20
    ff5c:	pop	{pc}		; (ldr pc, [sp], #4)
    ff60:	.word	0x0002e78c
    ff64:	.word	0x000105b0
    ff68:	.word	0x0002e704
    ff6c:	.word	0x0002e560
    ff70:	.word	0x00010310
    ff74:	.word	0x0002e468
    ff78:	.word	0x0002e454

0000ff7c <sf_gen_neg>:
    ff7c:	ldr	r2, [pc, #316]	; 100c0 <sf_gen_neg+0x144>
    ff80:	strd	r4, [sp, #-24]!	; 0xffffffe8
    ff84:	mov	r5, r0
    ff88:	strd	r6, [sp, #8]
    ff8c:	str	r8, [sp, #16]
    ff90:	str	lr, [sp, #20]
    ff94:	add	r2, pc, r2
    ff98:	ldr	r3, [r2, #656]	; 0x290
    ff9c:	add	r1, r2, #660	; 0x294
    ffa0:	lsl	r6, r3, #3
    ffa4:	add	r0, r2, r6
    ffa8:	add	r6, r1, r6
    ffac:	ldr	r0, [r0, #660]	; 0x294
    ffb0:	cmp	r0, #19
    ffb4:	bhi	10004 <sf_gen_neg+0x88>
    ffb8:	add	r4, r3, #1
    ffbc:	add	r7, r6, #8
    ffc0:	cmp	r4, #15
    ffc4:	str	r4, [r2, #656]	; 0x290
    ffc8:	bgt	fff8 <sf_gen_neg+0x7c>
    ffcc:	mov	r3, #1024	; 0x400
    ffd0:	mov	r1, #1
    ffd4:	lsl	r4, r3, r4
    ffd8:	mov	r0, r4
    ffdc:	bl	ce8 <calloc@plt>
    ffe0:	cmp	r0, #0
    ffe4:	str	r0, [r6, #12]
    ffe8:	beq	fff8 <sf_gen_neg+0x7c>
    ffec:	cmp	r4, #19
    fff0:	str	r4, [r6, #8]
    fff4:	bhi	10010 <sf_gen_neg+0x94>
    fff8:	ldr	r0, [pc, #196]	; 100c4 <sf_gen_neg+0x148>
    fffc:	add	r0, pc, r0
   10000:	bl	2130 <sf_bpf_error>
   10004:	ldr	r4, [r1, r3, lsl #3]
   10008:	mov	r7, r6
   1000c:	ldr	r0, [r6, #4]
   10010:	sub	r3, r4, #20
   10014:	mov	r1, #96	; 0x60
   10018:	add	r2, r0, r3
   1001c:	str	r3, [r7]
   10020:	str	r1, [r0, r3]
   10024:	ldr	r3, [r5, #8]
   10028:	str	r3, [r2, #12]
   1002c:	ldr	r3, [r5, #4]
   10030:	b	10038 <sf_gen_neg+0xbc>
   10034:	mov	r3, r4
   10038:	ldr	r4, [r3, #16]
   1003c:	cmp	r4, #0
   10040:	bne	10034 <sf_gen_neg+0xb8>
   10044:	str	r2, [r3, #16]
   10048:	bl	22d0 <newchunk.constprop.25>
   1004c:	mov	r3, #132	; 0x84
   10050:	str	r3, [r0]
   10054:	str	r4, [r0, #12]
   10058:	ldr	r2, [r5, #4]
   1005c:	b	10064 <sf_gen_neg+0xe8>
   10060:	mov	r2, r3
   10064:	ldr	r3, [r2, #16]
   10068:	cmp	r3, #0
   1006c:	bne	10060 <sf_gen_neg+0xe4>
   10070:	str	r0, [r2, #16]
   10074:	bl	22d0 <newchunk.constprop.25>
   10078:	mov	r3, #2
   1007c:	mov	r1, r0
   10080:	str	r3, [r0]
   10084:	ldr	r3, [r5, #8]
   10088:	str	r3, [r0, #12]
   1008c:	ldr	r2, [r5, #4]
   10090:	b	10098 <sf_gen_neg+0x11c>
   10094:	mov	r2, r3
   10098:	ldr	r3, [r2, #16]
   1009c:	cmp	r3, #0
   100a0:	bne	10094 <sf_gen_neg+0x118>
   100a4:	str	r1, [r2, #16]
   100a8:	mov	r0, r5
   100ac:	ldrd	r4, [sp]
   100b0:	ldrd	r6, [sp, #8]
   100b4:	ldr	r8, [sp, #16]
   100b8:	add	sp, sp, #20
   100bc:	pop	{pc}		; (ldr pc, [sp], #4)
   100c0:	.word	0x0002e3cc
   100c4:	.word	0x000101f0

000100c8 <sf_gen_arth>:
   100c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   100cc:	mov	r4, r1
   100d0:	strd	r6, [sp, #8]
   100d4:	mov	r6, r2
   100d8:	str	r8, [sp, #16]
   100dc:	mov	r8, r0
   100e0:	str	lr, [sp, #20]
   100e4:	orr	r8, r8, #12
   100e8:	bl	22d0 <newchunk.constprop.25>
   100ec:	mov	r3, #97	; 0x61
   100f0:	mov	r5, r0
   100f4:	str	r3, [r0]
   100f8:	ldr	r3, [r6, #8]
   100fc:	str	r3, [r0, #12]
   10100:	bl	22d0 <newchunk.constprop.25>
   10104:	mov	r3, #96	; 0x60
   10108:	mov	r7, r0
   1010c:	str	r3, [r0]
   10110:	ldr	r3, [r4, #8]
   10114:	str	r3, [r0, #12]
   10118:	bl	22d0 <newchunk.constprop.25>
   1011c:	mov	r1, r7
   10120:	str	r8, [r0]
   10124:	b	1012c <sf_gen_arth+0x64>
   10128:	mov	r1, r3
   1012c:	ldr	r3, [r1, #16]
   10130:	cmp	r3, #0
   10134:	bne	10128 <sf_gen_arth+0x60>
   10138:	str	r0, [r1, #16]
   1013c:	mov	r0, r5
   10140:	b	10148 <sf_gen_arth+0x80>
   10144:	mov	r0, r3
   10148:	ldr	r3, [r0, #16]
   1014c:	cmp	r3, #0
   10150:	bne	10144 <sf_gen_arth+0x7c>
   10154:	str	r7, [r0, #16]
   10158:	ldr	r0, [r6, #4]
   1015c:	b	10164 <sf_gen_arth+0x9c>
   10160:	mov	r0, r3
   10164:	ldr	r3, [r0, #16]
   10168:	cmp	r3, #0
   1016c:	bne	10160 <sf_gen_arth+0x98>
   10170:	str	r5, [r0, #16]
   10174:	ldr	r0, [r4, #4]
   10178:	ldr	r2, [r6, #4]
   1017c:	b	10184 <sf_gen_arth+0xbc>
   10180:	mov	r0, r3
   10184:	ldr	r3, [r0, #16]
   10188:	cmp	r3, #0
   1018c:	bne	10180 <sf_gen_arth+0xb8>
   10190:	ldr	r5, [pc, #792]	; 104b0 <sf_gen_arth+0x3e8>
   10194:	str	r2, [r0, #16]
   10198:	ldr	r2, [r4, #8]
   1019c:	add	r5, pc, r5
   101a0:	add	r2, r5, r2, lsl #2
   101a4:	str	r3, [r2, #808]	; 0x328
   101a8:	ldr	r2, [r6, #8]
   101ac:	add	r2, r5, r2, lsl #2
   101b0:	str	r3, [r2, #808]	; 0x328
   101b4:	bl	22d0 <newchunk.constprop.25>
   101b8:	ldr	r3, [r5, #804]	; 0x324
   101bc:	mov	r2, #2
   101c0:	str	r2, [r0]
   101c4:	lsl	r2, r3, r2
   101c8:	add	r1, r5, r2
   101cc:	ldr	r1, [r1, #808]	; 0x328
   101d0:	cmp	r1, #0
   101d4:	beq	10460 <sf_gen_arth+0x398>
   101d8:	add	r3, r3, #1
   101dc:	rsbs	r2, r3, #0
   101e0:	and	r3, r3, #15
   101e4:	and	r2, r2, #15
   101e8:	rsbpl	r3, r2, #0
   101ec:	lsl	r2, r3, #2
   101f0:	str	r3, [r5, #804]	; 0x324
   101f4:	add	r1, r5, r2
   101f8:	ldr	r1, [r1, #808]	; 0x328
   101fc:	cmp	r1, #0
   10200:	beq	10460 <sf_gen_arth+0x398>
   10204:	add	r3, r3, #1
   10208:	rsbs	r2, r3, #0
   1020c:	and	r3, r3, #15
   10210:	and	r2, r2, #15
   10214:	rsbpl	r3, r2, #0
   10218:	lsl	r2, r3, #2
   1021c:	add	r1, r5, r2
   10220:	ldr	r1, [r1, #808]	; 0x328
   10224:	cmp	r1, #0
   10228:	beq	10454 <sf_gen_arth+0x38c>
   1022c:	add	r3, r3, #1
   10230:	rsbs	r2, r3, #0
   10234:	and	r3, r3, #15
   10238:	and	r2, r2, #15
   1023c:	rsbpl	r3, r2, #0
   10240:	lsl	r2, r3, #2
   10244:	add	r1, r5, r2
   10248:	ldr	r1, [r1, #808]	; 0x328
   1024c:	cmp	r1, #0
   10250:	beq	10454 <sf_gen_arth+0x38c>
   10254:	add	r3, r3, #1
   10258:	rsbs	r2, r3, #0
   1025c:	and	r3, r3, #15
   10260:	and	r2, r2, #15
   10264:	rsbpl	r3, r2, #0
   10268:	lsl	r2, r3, #2
   1026c:	add	r1, r5, r2
   10270:	ldr	r1, [r1, #808]	; 0x328
   10274:	cmp	r1, #0
   10278:	beq	10454 <sf_gen_arth+0x38c>
   1027c:	add	r3, r3, #1
   10280:	rsbs	r2, r3, #0
   10284:	and	r3, r3, #15
   10288:	and	r2, r2, #15
   1028c:	rsbpl	r3, r2, #0
   10290:	lsl	r2, r3, #2
   10294:	add	r1, r5, r2
   10298:	ldr	r1, [r1, #808]	; 0x328
   1029c:	cmp	r1, #0
   102a0:	beq	10454 <sf_gen_arth+0x38c>
   102a4:	add	r3, r3, #1
   102a8:	rsbs	r2, r3, #0
   102ac:	and	r3, r3, #15
   102b0:	and	r2, r2, #15
   102b4:	rsbpl	r3, r2, #0
   102b8:	lsl	r2, r3, #2
   102bc:	add	r1, r5, r2
   102c0:	ldr	r1, [r1, #808]	; 0x328
   102c4:	cmp	r1, #0
   102c8:	beq	10454 <sf_gen_arth+0x38c>
   102cc:	add	r3, r3, #1
   102d0:	rsbs	r2, r3, #0
   102d4:	and	r3, r3, #15
   102d8:	and	r2, r2, #15
   102dc:	rsbpl	r3, r2, #0
   102e0:	lsl	r2, r3, #2
   102e4:	add	r1, r5, r2
   102e8:	ldr	r1, [r1, #808]	; 0x328
   102ec:	cmp	r1, #0
   102f0:	beq	10454 <sf_gen_arth+0x38c>
   102f4:	add	r3, r3, #1
   102f8:	rsbs	r2, r3, #0
   102fc:	and	r3, r3, #15
   10300:	and	r2, r2, #15
   10304:	rsbpl	r3, r2, #0
   10308:	lsl	r2, r3, #2
   1030c:	add	r5, r5, r2
   10310:	ldr	r1, [r5, #808]	; 0x328
   10314:	cmp	r1, #0
   10318:	beq	10454 <sf_gen_arth+0x38c>
   1031c:	add	r3, r3, #1
   10320:	ldr	r1, [pc, #396]	; 104b4 <sf_gen_arth+0x3ec>
   10324:	rsbs	r2, r3, #0
   10328:	and	r3, r3, #15
   1032c:	and	r2, r2, #15
   10330:	rsbpl	r3, r2, #0
   10334:	lsl	r2, r3, #2
   10338:	add	r1, pc, r1
   1033c:	add	ip, r1, r2
   10340:	ldr	ip, [ip, #808]	; 0x328
   10344:	cmp	ip, #0
   10348:	beq	10454 <sf_gen_arth+0x38c>
   1034c:	add	r3, r3, #1
   10350:	rsbs	r2, r3, #0
   10354:	and	r3, r3, #15
   10358:	and	r2, r2, #15
   1035c:	rsbpl	r3, r2, #0
   10360:	lsl	r2, r3, #2
   10364:	add	ip, r1, r2
   10368:	ldr	ip, [ip, #808]	; 0x328
   1036c:	cmp	ip, #0
   10370:	beq	10454 <sf_gen_arth+0x38c>
   10374:	add	r3, r3, #1
   10378:	rsbs	r2, r3, #0
   1037c:	and	r3, r3, #15
   10380:	and	r2, r2, #15
   10384:	rsbpl	r3, r2, #0
   10388:	lsl	r2, r3, #2
   1038c:	add	ip, r1, r2
   10390:	ldr	ip, [ip, #808]	; 0x328
   10394:	cmp	ip, #0
   10398:	beq	10454 <sf_gen_arth+0x38c>
   1039c:	add	r3, r3, #1
   103a0:	rsbs	r2, r3, #0
   103a4:	and	r3, r3, #15
   103a8:	and	r2, r2, #15
   103ac:	rsbpl	r3, r2, #0
   103b0:	lsl	r2, r3, #2
   103b4:	add	ip, r1, r2
   103b8:	ldr	ip, [ip, #808]	; 0x328
   103bc:	cmp	ip, #0
   103c0:	beq	10454 <sf_gen_arth+0x38c>
   103c4:	add	r3, r3, #1
   103c8:	rsbs	r2, r3, #0
   103cc:	and	r3, r3, #15
   103d0:	and	r2, r2, #15
   103d4:	rsbpl	r3, r2, #0
   103d8:	lsl	r2, r3, #2
   103dc:	add	ip, r1, r2
   103e0:	ldr	ip, [ip, #808]	; 0x328
   103e4:	cmp	ip, #0
   103e8:	beq	10454 <sf_gen_arth+0x38c>
   103ec:	add	r3, r3, #1
   103f0:	rsbs	r2, r3, #0
   103f4:	and	r3, r3, #15
   103f8:	and	r2, r2, #15
   103fc:	rsbpl	r3, r2, #0
   10400:	lsl	r2, r3, #2
   10404:	add	ip, r1, r2
   10408:	ldr	ip, [ip, #808]	; 0x328
   1040c:	cmp	ip, #0
   10410:	beq	10454 <sf_gen_arth+0x38c>
   10414:	add	r3, r3, #1
   10418:	rsbs	r2, r3, #0
   1041c:	and	r3, r3, #15
   10420:	and	r2, r2, #15
   10424:	rsbpl	r3, r2, #0
   10428:	lsl	r2, r3, #2
   1042c:	add	ip, r1, r2
   10430:	ldr	ip, [ip, #808]	; 0x328
   10434:	cmp	ip, #0
   10438:	beq	10454 <sf_gen_arth+0x38c>
   1043c:	ldr	r0, [pc, #116]	; 104b8 <sf_gen_arth+0x3f0>
   10440:	add	r3, r3, #1
   10444:	and	r3, r3, #15
   10448:	str	r3, [r1, #804]	; 0x324
   1044c:	add	r0, pc, r0
   10450:	bl	2130 <sf_bpf_error>
   10454:	ldr	r1, [pc, #96]	; 104bc <sf_gen_arth+0x3f4>
   10458:	add	r1, pc, r1
   1045c:	str	r3, [r1, #804]	; 0x324
   10460:	ldr	r1, [pc, #88]	; 104c0 <sf_gen_arth+0x3f8>
   10464:	mov	ip, #1
   10468:	add	r1, pc, r1
   1046c:	add	r2, r1, r2
   10470:	str	ip, [r2, #808]	; 0x328
   10474:	str	r3, [r0, #12]
   10478:	str	r3, [r4, #8]
   1047c:	ldr	r2, [r4, #4]
   10480:	b	10488 <sf_gen_arth+0x3c0>
   10484:	mov	r2, r3
   10488:	ldr	r3, [r2, #16]
   1048c:	cmp	r3, #0
   10490:	bne	10484 <sf_gen_arth+0x3bc>
   10494:	str	r0, [r2, #16]
   10498:	mov	r0, r4
   1049c:	ldrd	r4, [sp]
   104a0:	ldrd	r6, [sp, #8]
   104a4:	ldr	r8, [sp, #16]
   104a8:	add	sp, sp, #20
   104ac:	pop	{pc}		; (ldr pc, [sp], #4)
   104b0:	.word	0x0002e1c4
   104b4:	.word	0x0002e028
   104b8:	.word	0x0000fdb0
   104bc:	.word	0x0002df08
   104c0:	.word	0x0002def8

000104c4 <sf_gen_greater>:
   104c4:	ldr	r3, [pc, #344]	; 10624 <sf_gen_greater+0x160>
   104c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   104cc:	strd	r6, [sp, #8]
   104d0:	mov	r6, r0
   104d4:	strd	r8, [sp, #16]
   104d8:	str	sl, [sp, #24]
   104dc:	add	r3, pc, r3
   104e0:	str	lr, [sp, #28]
   104e4:	ldr	r5, [r3, #656]	; 0x290
   104e8:	add	r7, r3, #660	; 0x294
   104ec:	lsl	r8, r5, #3
   104f0:	add	r2, r3, r8
   104f4:	add	r9, r7, r8
   104f8:	ldr	r2, [r2, #660]	; 0x294
   104fc:	cmp	r2, #19
   10500:	bhi	10558 <sf_gen_greater+0x94>
   10504:	add	r5, r5, #1
   10508:	add	sl, r9, #8
   1050c:	cmp	r5, #15
   10510:	str	r5, [r3, #656]	; 0x290
   10514:	bgt	105d0 <sf_gen_greater+0x10c>
   10518:	mov	r3, #1024	; 0x400
   1051c:	mov	r1, #1
   10520:	lsl	r4, r3, r5
   10524:	mov	r0, r4
   10528:	bl	ce8 <calloc@plt>
   1052c:	cmp	r0, #0
   10530:	str	r0, [r9, #12]
   10534:	beq	105d0 <sf_gen_greater+0x10c>
   10538:	cmp	r4, #19
   1053c:	str	r4, [r9, #8]
   10540:	bls	105d0 <sf_gen_greater+0x10c>
   10544:	add	r3, r8, #8
   10548:	mov	r9, sl
   1054c:	lsl	r8, r5, #3
   10550:	add	r7, r7, r3
   10554:	b	10564 <sf_gen_greater+0xa0>
   10558:	ldr	r0, [r9, #4]
   1055c:	ldr	r4, [r7, r5, lsl #3]
   10560:	mov	r7, r9
   10564:	sub	r3, r4, #20
   10568:	mov	r1, #128	; 0x80
   1056c:	ldr	r2, [pc, #180]	; 10628 <sf_gen_greater+0x164>
   10570:	add	r4, r0, r3
   10574:	str	r3, [r9]
   10578:	str	r1, [r0, r3]
   1057c:	add	r2, pc, r2
   10580:	add	r8, r2, r8
   10584:	ldr	r3, [r8, #660]	; 0x294
   10588:	cmp	r3, #207	; 0xcf
   1058c:	bhi	105dc <sf_gen_greater+0x118>
   10590:	add	r5, r5, #1
   10594:	add	r8, r7, #8
   10598:	cmp	r5, #15
   1059c:	str	r5, [r2, #656]	; 0x290
   105a0:	bgt	105d0 <sf_gen_greater+0x10c>
   105a4:	mov	r2, #1024	; 0x400
   105a8:	mov	r1, #1
   105ac:	lsl	r5, r2, r5
   105b0:	mov	r0, r5
   105b4:	bl	ce8 <calloc@plt>
   105b8:	cmp	r0, #0
   105bc:	str	r0, [r7, #12]
   105c0:	beq	105d0 <sf_gen_greater+0x10c>
   105c4:	cmp	r5, #207	; 0xcf
   105c8:	str	r5, [r7, #8]
   105cc:	bhi	105e8 <sf_gen_greater+0x124>
   105d0:	ldr	r0, [pc, #84]	; 1062c <sf_gen_greater+0x168>
   105d4:	add	r0, pc, r0
   105d8:	bl	2130 <sf_bpf_error>
   105dc:	ldr	r5, [r7]
   105e0:	mov	r8, r7
   105e4:	ldr	r0, [r7, #4]
   105e8:	sub	r5, r5, #208	; 0xd0
   105ec:	mov	r2, #53	; 0x35
   105f0:	add	r3, r0, r5
   105f4:	str	r5, [r8]
   105f8:	mov	r0, r3
   105fc:	str	r4, [r3, #4]
   10600:	str	r2, [r3, #8]
   10604:	str	r6, [r3, #20]
   10608:	str	r3, [r3, #96]	; 0x60
   1060c:	ldrd	r4, [sp]
   10610:	ldrd	r6, [sp, #8]
   10614:	ldrd	r8, [sp, #16]
   10618:	ldr	sl, [sp, #24]
   1061c:	add	sp, sp, #28
   10620:	pop	{pc}		; (ldr pc, [sp], #4)
   10624:	.word	0x0002de84
   10628:	.word	0x0002dde4
   1062c:	.word	0x0000fc18

00010630 <sf_gen_less>:
   10630:	ldr	r3, [pc, #360]	; 107a0 <sf_gen_less+0x170>
   10634:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10638:	strd	r6, [sp, #8]
   1063c:	mov	r6, r0
   10640:	strd	r8, [sp, #16]
   10644:	str	sl, [sp, #24]
   10648:	add	r3, pc, r3
   1064c:	str	lr, [sp, #28]
   10650:	ldr	r5, [r3, #656]	; 0x290
   10654:	add	r7, r3, #660	; 0x294
   10658:	lsl	r8, r5, #3
   1065c:	add	r2, r3, r8
   10660:	add	r9, r7, r8
   10664:	ldr	r2, [r2, #660]	; 0x294
   10668:	cmp	r2, #19
   1066c:	bhi	106c4 <sf_gen_less+0x94>
   10670:	add	r5, r5, #1
   10674:	add	sl, r9, #8
   10678:	cmp	r5, #15
   1067c:	str	r5, [r3, #656]	; 0x290
   10680:	bgt	1073c <sf_gen_less+0x10c>
   10684:	mov	r3, #1024	; 0x400
   10688:	mov	r1, #1
   1068c:	lsl	r4, r3, r5
   10690:	mov	r0, r4
   10694:	bl	ce8 <calloc@plt>
   10698:	cmp	r0, #0
   1069c:	str	r0, [r9, #12]
   106a0:	beq	1073c <sf_gen_less+0x10c>
   106a4:	cmp	r4, #19
   106a8:	str	r4, [r9, #8]
   106ac:	bls	1073c <sf_gen_less+0x10c>
   106b0:	add	r3, r8, #8
   106b4:	mov	r9, sl
   106b8:	lsl	r8, r5, #3
   106bc:	add	r7, r7, r3
   106c0:	b	106d0 <sf_gen_less+0xa0>
   106c4:	ldr	r0, [r9, #4]
   106c8:	ldr	r4, [r7, r5, lsl #3]
   106cc:	mov	r7, r9
   106d0:	sub	r3, r4, #20
   106d4:	mov	r1, #128	; 0x80
   106d8:	ldr	r2, [pc, #196]	; 107a4 <sf_gen_less+0x174>
   106dc:	add	r4, r0, r3
   106e0:	str	r3, [r9]
   106e4:	str	r1, [r0, r3]
   106e8:	add	r2, pc, r2
   106ec:	add	r8, r2, r8
   106f0:	ldr	r3, [r8, #660]	; 0x294
   106f4:	cmp	r3, #207	; 0xcf
   106f8:	bhi	10748 <sf_gen_less+0x118>
   106fc:	add	r5, r5, #1
   10700:	add	r8, r7, #8
   10704:	cmp	r5, #15
   10708:	str	r5, [r2, #656]	; 0x290
   1070c:	bgt	1073c <sf_gen_less+0x10c>
   10710:	mov	r2, #1024	; 0x400
   10714:	mov	r1, #1
   10718:	lsl	r5, r2, r5
   1071c:	mov	r0, r5
   10720:	bl	ce8 <calloc@plt>
   10724:	cmp	r0, #0
   10728:	str	r0, [r7, #12]
   1072c:	beq	1073c <sf_gen_less+0x10c>
   10730:	cmp	r5, #207	; 0xcf
   10734:	str	r5, [r7, #8]
   10738:	bhi	10754 <sf_gen_less+0x124>
   1073c:	ldr	r0, [pc, #100]	; 107a8 <sf_gen_less+0x178>
   10740:	add	r0, pc, r0
   10744:	bl	2130 <sf_bpf_error>
   10748:	ldr	r5, [r7]
   1074c:	mov	r8, r7
   10750:	ldr	r0, [r7, #4]
   10754:	sub	r5, r5, #208	; 0xd0
   10758:	mov	r1, #37	; 0x25
   1075c:	add	r3, r0, r5
   10760:	str	r5, [r8]
   10764:	mov	r0, r3
   10768:	ldr	r2, [r3, #44]	; 0x2c
   1076c:	str	r4, [r3, #4]
   10770:	str	r1, [r3, #8]
   10774:	str	r6, [r3, #20]
   10778:	str	r3, [r3, #96]	; 0x60
   1077c:	clz	r2, r2
   10780:	lsr	r2, r2, #5
   10784:	str	r2, [r3, #44]	; 0x2c
   10788:	ldrd	r4, [sp]
   1078c:	ldrd	r6, [sp, #8]
   10790:	ldrd	r8, [sp, #16]
   10794:	ldr	sl, [sp, #24]
   10798:	add	sp, sp, #28
   1079c:	pop	{pc}		; (ldr pc, [sp], #4)
   107a0:	.word	0x0002dd18
   107a4:	.word	0x0002dc78
   107a8:	.word	0x0000faac

000107ac <sf_gen_byteop>:
   107ac:	cmp	r0, #61	; 0x3d
   107b0:	beq	108c4 <sf_gen_byteop+0x118>
   107b4:	strd	r4, [sp, #-16]!
   107b8:	mov	r4, r2
   107bc:	str	r6, [sp, #8]
   107c0:	str	lr, [sp, #12]
   107c4:	bgt	10818 <sf_gen_byteop+0x6c>
   107c8:	cmp	r0, #38	; 0x26
   107cc:	bne	10874 <sf_gen_byteop+0xc8>
   107d0:	bl	22d0 <newchunk.constprop.25>
   107d4:	mov	r5, r0
   107d8:	mov	r3, #84	; 0x54
   107dc:	str	r3, [r0]
   107e0:	str	r4, [r5, #12]
   107e4:	bl	24d8 <newchunk.constprop.26>
   107e8:	ldr	r3, [r0, #44]	; 0x2c
   107ec:	mov	r2, #21
   107f0:	str	r5, [r0, #4]
   107f4:	str	r2, [r0, #8]
   107f8:	str	r0, [r0, #96]	; 0x60
   107fc:	clz	r3, r3
   10800:	lsr	r3, r3, #5
   10804:	str	r3, [r0, #44]	; 0x2c
   10808:	ldrd	r4, [sp]
   1080c:	ldr	r6, [sp, #8]
   10810:	add	sp, sp, #12
   10814:	pop	{pc}		; (ldr pc, [sp], #4)
   10818:	cmp	r0, #62	; 0x3e
   1081c:	bne	10858 <sf_gen_byteop+0xac>
   10820:	mov	r0, r1
   10824:	mov	r1, #16
   10828:	bl	4e84 <gen_load_llrel>
   1082c:	mov	r5, r0
   10830:	bl	24d8 <newchunk.constprop.26>
   10834:	mov	r3, #37	; 0x25
   10838:	str	r5, [r0, #4]
   1083c:	str	r3, [r0, #8]
   10840:	str	r4, [r0, #20]
   10844:	str	r0, [r0, #96]	; 0x60
   10848:	ldrd	r4, [sp]
   1084c:	ldr	r6, [sp, #8]
   10850:	add	sp, sp, #12
   10854:	pop	{pc}		; (ldr pc, [sp], #4)
   10858:	cmp	r0, #124	; 0x7c
   1085c:	bne	108d0 <sf_gen_byteop+0x124>
   10860:	bl	22d0 <newchunk.constprop.25>
   10864:	mov	r3, #68	; 0x44
   10868:	mov	r5, r0
   1086c:	str	r3, [r0]
   10870:	b	107e0 <sf_gen_byteop+0x34>
   10874:	cmp	r0, #60	; 0x3c
   10878:	bne	108d0 <sf_gen_byteop+0x124>
   1087c:	mov	r0, r1
   10880:	mov	r1, #16
   10884:	bl	4e84 <gen_load_llrel>
   10888:	mov	r5, r0
   1088c:	bl	24d8 <newchunk.constprop.26>
   10890:	ldr	r3, [r0, #44]	; 0x2c
   10894:	mov	r2, #53	; 0x35
   10898:	str	r5, [r0, #4]
   1089c:	str	r2, [r0, #8]
   108a0:	str	r4, [r0, #20]
   108a4:	str	r0, [r0, #96]	; 0x60
   108a8:	clz	r3, r3
   108ac:	lsr	r3, r3, #5
   108b0:	str	r3, [r0, #44]	; 0x2c
   108b4:	ldrd	r4, [sp]
   108b8:	ldr	r6, [sp, #8]
   108bc:	add	sp, sp, #12
   108c0:	pop	{pc}		; (ldr pc, [sp], #4)
   108c4:	mov	r0, r1
   108c8:	mov	r1, #16
   108cc:	b	5ad8 <gen_cmp.constprop.20>
   108d0:	bl	ebc <abort@plt>

000108d4 <sf_gen_broadcast>:
   108d4:	cmp	r0, #0
   108d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   108dc:	strd	r6, [sp, #8]
   108e0:	strd	r8, [sp, #16]
   108e4:	str	sl, [sp, #24]
   108e8:	str	lr, [sp, #28]
   108ec:	blt	10cd4 <sf_gen_broadcast+0x400>
   108f0:	cmp	r0, #1
   108f4:	ble	10b24 <sf_gen_broadcast+0x250>
   108f8:	cmp	r0, #2
   108fc:	bne	10cd4 <sf_gen_broadcast+0x400>
   10900:	ldr	r4, [pc, #996]	; 10cec <sf_gen_broadcast+0x418>
   10904:	add	r4, pc, r4
   10908:	ldr	r7, [r4, #912]	; 0x390
   1090c:	cmn	r7, #1
   10910:	beq	10cc8 <sf_gen_broadcast+0x3f4>
   10914:	mov	r0, #2048	; 0x800
   10918:	mvn	r7, r7
   1091c:	bl	98c0 <gen_linktype>
   10920:	ldr	r8, [r4, #872]	; 0x368
   10924:	mov	r6, r0
   10928:	mov	r1, #0
   1092c:	add	r8, r8, #16
   10930:	mov	r0, r8
   10934:	bl	2588 <gen_load_macplrel>
   10938:	cmn	r7, #1
   1093c:	mov	r9, r0
   10940:	beq	10c94 <sf_gen_broadcast+0x3c0>
   10944:	bl	22d0 <newchunk.constprop.25>
   10948:	mov	r2, #84	; 0x54
   1094c:	mov	r3, r9
   10950:	str	r2, [r0]
   10954:	str	r7, [r0, #12]
   10958:	b	10960 <sf_gen_broadcast+0x8c>
   1095c:	mov	r3, r4
   10960:	ldr	r4, [r3, #16]
   10964:	cmp	r4, #0
   10968:	bne	1095c <sf_gen_broadcast+0x88>
   1096c:	str	r0, [r3, #16]
   10970:	bl	24d8 <newchunk.constprop.26>
   10974:	mov	r5, r0
   10978:	mov	r3, #21
   1097c:	mov	r0, r8
   10980:	mov	r1, r4
   10984:	str	r9, [r5, #4]
   10988:	str	r3, [r5, #8]
   1098c:	str	r4, [r5, #20]
   10990:	str	r5, [r5, #96]	; 0x60
   10994:	bl	2588 <gen_load_macplrel>
   10998:	mov	r8, r0
   1099c:	bl	22d0 <newchunk.constprop.25>
   109a0:	mov	r3, #84	; 0x54
   109a4:	mov	r2, r8
   109a8:	str	r3, [r0]
   109ac:	str	r7, [r0, #12]
   109b0:	b	109b8 <sf_gen_broadcast+0xe4>
   109b4:	mov	r2, r3
   109b8:	ldr	r3, [r2, #16]
   109bc:	cmp	r3, #0
   109c0:	bne	109b4 <sf_gen_broadcast+0xe0>
   109c4:	str	r0, [r2, #16]
   109c8:	bl	24d8 <newchunk.constprop.26>
   109cc:	mov	r4, r0
   109d0:	mov	r3, #21
   109d4:	str	r8, [r0, #4]
   109d8:	mov	r2, r5
   109dc:	str	r3, [r0, #8]
   109e0:	str	r7, [r0, #20]
   109e4:	str	r0, [r4, #96]	; 0x60
   109e8:	ldr	r3, [r5, #44]	; 0x2c
   109ec:	clz	r3, r3
   109f0:	lsr	r3, r3, #5
   109f4:	str	r3, [r5, #44]	; 0x2c
   109f8:	ldr	r1, [r0, #96]	; 0x60
   109fc:	b	10a18 <sf_gen_broadcast+0x144>
   10a00:	ldr	r3, [r2, #60]	; 0x3c
   10a04:	str	r1, [r2, #60]	; 0x3c
   10a08:	cmp	r3, #0
   10a0c:	beq	10a30 <sf_gen_broadcast+0x15c>
   10a10:	mov	r2, r3
   10a14:	ldr	r3, [r3, #44]	; 0x2c
   10a18:	cmp	r3, #0
   10a1c:	beq	10a00 <sf_gen_broadcast+0x12c>
   10a20:	ldr	r3, [r2, #84]	; 0x54
   10a24:	str	r1, [r2, #84]	; 0x54
   10a28:	cmp	r3, #0
   10a2c:	bne	10a10 <sf_gen_broadcast+0x13c>
   10a30:	ldr	r2, [r5, #44]	; 0x2c
   10a34:	mov	r3, r4
   10a38:	clz	r2, r2
   10a3c:	lsr	r2, r2, #5
   10a40:	str	r2, [r5, #44]	; 0x2c
   10a44:	ldr	r2, [r3, #44]	; 0x2c
   10a48:	cmp	r2, #0
   10a4c:	addeq	r2, r3, #60	; 0x3c
   10a50:	addne	r2, r3, #84	; 0x54
   10a54:	ldr	r3, [r2]
   10a58:	cmp	r3, #0
   10a5c:	bne	10a44 <sf_gen_broadcast+0x170>
   10a60:	str	r5, [r2]
   10a64:	cmp	r6, #0
   10a68:	ldr	r1, [r5, #96]	; 0x60
   10a6c:	movne	r3, r6
   10a70:	str	r1, [r4, #96]	; 0x60
   10a74:	bne	10a90 <sf_gen_broadcast+0x1bc>
   10a78:	b	10aac <sf_gen_broadcast+0x1d8>
   10a7c:	ldr	r2, [r3, #60]	; 0x3c
   10a80:	str	r1, [r3, #60]	; 0x3c
   10a84:	cmp	r2, #0
   10a88:	beq	10aac <sf_gen_broadcast+0x1d8>
   10a8c:	mov	r3, r2
   10a90:	ldr	r2, [r3, #44]	; 0x2c
   10a94:	cmp	r2, #0
   10a98:	beq	10a7c <sf_gen_broadcast+0x1a8>
   10a9c:	ldr	r2, [r3, #84]	; 0x54
   10aa0:	str	r1, [r3, #84]	; 0x54
   10aa4:	cmp	r2, #0
   10aa8:	bne	10a8c <sf_gen_broadcast+0x1b8>
   10aac:	ldr	r2, [r6, #44]	; 0x2c
   10ab0:	mov	r3, r4
   10ab4:	clz	r2, r2
   10ab8:	lsr	r2, r2, #5
   10abc:	str	r2, [r6, #44]	; 0x2c
   10ac0:	ldr	r2, [r4, #44]	; 0x2c
   10ac4:	clz	r2, r2
   10ac8:	lsr	r2, r2, #5
   10acc:	str	r2, [r4, #44]	; 0x2c
   10ad0:	ldr	r2, [r3, #44]	; 0x2c
   10ad4:	cmp	r2, #0
   10ad8:	addeq	r2, r3, #60	; 0x3c
   10adc:	addne	r2, r3, #84	; 0x54
   10ae0:	ldr	r3, [r2]
   10ae4:	cmp	r3, #0
   10ae8:	bne	10ad0 <sf_gen_broadcast+0x1fc>
   10aec:	str	r6, [r2]
   10af0:	ldr	r3, [r4, #44]	; 0x2c
   10af4:	clz	r3, r3
   10af8:	lsr	r3, r3, #5
   10afc:	str	r3, [r4, #44]	; 0x2c
   10b00:	ldr	r3, [r6, #96]	; 0x60
   10b04:	str	r3, [r4, #96]	; 0x60
   10b08:	mov	r0, r4
   10b0c:	ldrd	r4, [sp]
   10b10:	ldrd	r6, [sp, #8]
   10b14:	ldrd	r8, [sp, #16]
   10b18:	ldr	sl, [sp, #24]
   10b1c:	add	sp, sp, #28
   10b20:	pop	{pc}		; (ldr pc, [sp], #4)
   10b24:	ldr	r4, [pc, #452]	; 10cf0 <sf_gen_broadcast+0x41c>
   10b28:	add	r4, pc, r4
   10b2c:	ldr	r3, [r4, #876]	; 0x36c
   10b30:	cmp	r3, #119	; 0x77
   10b34:	beq	10c38 <sf_gen_broadcast+0x364>
   10b38:	bgt	10bb8 <sf_gen_broadcast+0x2e4>
   10b3c:	cmp	r3, #7
   10b40:	beq	10c7c <sf_gen_broadcast+0x3a8>
   10b44:	bgt	10b9c <sf_gen_broadcast+0x2c8>
   10b48:	cmp	r3, #1
   10b4c:	bne	10b80 <sf_gen_broadcast+0x2ac>
   10b50:	ldr	r2, [pc, #412]	; 10cf4 <sf_gen_broadcast+0x420>
   10b54:	mov	r1, #6
   10b58:	ldr	r0, [r4, #920]	; 0x398
   10b5c:	add	r2, pc, r2
   10b60:	add	r2, r2, #8
   10b64:	ldrd	r4, [sp]
   10b68:	ldrd	r6, [sp, #8]
   10b6c:	ldrd	r8, [sp, #16]
   10b70:	ldr	sl, [sp, #24]
   10b74:	ldr	lr, [sp, #28]
   10b78:	add	sp, sp, #32
   10b7c:	b	792c <gen_bcmp.constprop.12>
   10b80:	cmp	r3, #6
   10b84:	bne	10ce0 <sf_gen_broadcast+0x40c>
   10b88:	ldr	r2, [pc, #360]	; 10cf8 <sf_gen_broadcast+0x424>
   10b8c:	mov	r1, #6
   10b90:	mov	r0, #2
   10b94:	add	r2, pc, r2
   10b98:	b	10b60 <sf_gen_broadcast+0x28c>
   10b9c:	cmp	r3, #10
   10ba0:	bne	10c30 <sf_gen_broadcast+0x35c>
   10ba4:	ldr	r2, [pc, #336]	; 10cfc <sf_gen_broadcast+0x428>
   10ba8:	mov	r1, #6
   10bac:	mov	r0, #1
   10bb0:	add	r2, pc, r2
   10bb4:	b	10b60 <sf_gen_broadcast+0x28c>
   10bb8:	cmp	r3, #127	; 0x7f
   10bbc:	beq	10c38 <sf_gen_broadcast+0x364>
   10bc0:	bgt	10c64 <sf_gen_broadcast+0x390>
   10bc4:	cmp	r3, #122	; 0x7a
   10bc8:	beq	10b88 <sf_gen_broadcast+0x2b4>
   10bcc:	cmp	r3, #123	; 0x7b
   10bd0:	bne	10ce0 <sf_gen_broadcast+0x40c>
   10bd4:	ldr	r3, [r4, #924]	; 0x39c
   10bd8:	cmp	r3, #0
   10bdc:	beq	10cd4 <sf_gen_broadcast+0x400>
   10be0:	mov	r2, #65280	; 0xff00
   10be4:	mov	r1, #8
   10be8:	mov	r0, #4
   10bec:	bl	5ad8 <gen_cmp.constprop.20>
   10bf0:	mov	r5, r0
   10bf4:	ldr	r2, [pc, #260]	; 10d00 <sf_gen_broadcast+0x42c>
   10bf8:	mov	r1, #6
   10bfc:	ldr	r3, [r5, #44]	; 0x2c
   10c00:	ldr	r0, [r4, #920]	; 0x398
   10c04:	add	r2, pc, r2
   10c08:	add	r2, r2, #8
   10c0c:	clz	r3, r3
   10c10:	lsr	r3, r3, #5
   10c14:	str	r3, [r5, #44]	; 0x2c
   10c18:	bl	792c <gen_bcmp.constprop.12>
   10c1c:	mov	r4, r0
   10c20:	mov	r1, r0
   10c24:	mov	r0, r5
   10c28:	bl	7884 <sf_gen_and>
   10c2c:	b	10b08 <sf_gen_broadcast+0x234>
   10c30:	cmp	r3, #105	; 0x69
   10c34:	bne	10ce0 <sf_gen_broadcast+0x40c>
   10c38:	ldr	r0, [pc, #196]	; 10d04 <sf_gen_broadcast+0x430>
   10c3c:	mov	r1, #2
   10c40:	ldrd	r4, [sp]
   10c44:	ldrd	r6, [sp, #8]
   10c48:	add	r0, pc, r0
   10c4c:	add	r0, r0, #8
   10c50:	ldrd	r8, [sp, #16]
   10c54:	ldr	sl, [sp, #24]
   10c58:	ldr	lr, [sp, #28]
   10c5c:	add	sp, sp, #32
   10c60:	b	870c <gen_wlanhostop>
   10c64:	cmp	r3, #163	; 0xa3
   10c68:	beq	10c38 <sf_gen_broadcast+0x364>
   10c6c:	cmp	r3, #192	; 0xc0
   10c70:	beq	10c38 <sf_gen_broadcast+0x364>
   10c74:	cmp	r3, #129	; 0x81
   10c78:	bne	10ce0 <sf_gen_broadcast+0x40c>
   10c7c:	ldr	r2, [pc, #132]	; 10d08 <sf_gen_broadcast+0x434>
   10c80:	mov	r1, #1
   10c84:	mov	r0, r1
   10c88:	add	r2, pc, r2
   10c8c:	add	r2, r2, #960	; 0x3c0
   10c90:	b	10b64 <sf_gen_broadcast+0x290>
   10c94:	bl	24d8 <newchunk.constprop.26>
   10c98:	mov	r5, r0
   10c9c:	mov	r3, #0
   10ca0:	mov	r2, #21
   10ca4:	mov	r0, r8
   10ca8:	mov	r1, r3
   10cac:	str	r9, [r5, #4]
   10cb0:	str	r2, [r5, #8]
   10cb4:	str	r3, [r5, #20]
   10cb8:	str	r5, [r5, #96]	; 0x60
   10cbc:	bl	2588 <gen_load_macplrel>
   10cc0:	mov	r8, r0
   10cc4:	b	109c8 <sf_gen_broadcast+0xf4>
   10cc8:	ldr	r0, [pc, #60]	; 10d0c <sf_gen_broadcast+0x438>
   10ccc:	add	r0, pc, r0
   10cd0:	bl	2130 <sf_bpf_error>
   10cd4:	ldr	r0, [pc, #52]	; 10d10 <sf_gen_broadcast+0x43c>
   10cd8:	add	r0, pc, r0
   10cdc:	bl	2130 <sf_bpf_error>
   10ce0:	ldr	r0, [pc, #44]	; 10d14 <sf_gen_broadcast+0x440>
   10ce4:	add	r0, pc, r0
   10ce8:	bl	2130 <sf_bpf_error>
   10cec:	.word	0x0002da5c
   10cf0:	.word	0x0002d838
   10cf4:	.word	0x0002d714
   10cf8:	.word	0x0002d6dc
   10cfc:	.word	0x0002d6c0
   10d00:	.word	0x0002d66c
   10d04:	.word	0x0002d628
   10d08:	.word	0x0002d6d8
   10d0c:	.word	0x00010614
   10d10:	.word	0x0001063c
   10d14:	.word	0x000105e4

00010d18 <sf_gen_multicast>:
   10d18:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10d1c:	strd	r6, [sp, #8]
   10d20:	strd	r8, [sp, #16]
   10d24:	str	sl, [sp, #24]
   10d28:	str	lr, [sp, #28]
   10d2c:	cmp	r0, #17
   10d30:	addls	pc, pc, r0, lsl #2
   10d34:	b	1113c <sf_gen_multicast+0x424>
   10d38:	b	10e2c <sf_gen_multicast+0x114>
   10d3c:	b	10e2c <sf_gen_multicast+0x114>
   10d40:	b	10df0 <sf_gen_multicast+0xd8>
   10d44:	b	1113c <sf_gen_multicast+0x424>
   10d48:	b	1113c <sf_gen_multicast+0x424>
   10d4c:	b	1113c <sf_gen_multicast+0x424>
   10d50:	b	1113c <sf_gen_multicast+0x424>
   10d54:	b	1113c <sf_gen_multicast+0x424>
   10d58:	b	1113c <sf_gen_multicast+0x424>
   10d5c:	b	1113c <sf_gen_multicast+0x424>
   10d60:	b	1113c <sf_gen_multicast+0x424>
   10d64:	b	1113c <sf_gen_multicast+0x424>
   10d68:	b	1113c <sf_gen_multicast+0x424>
   10d6c:	b	1113c <sf_gen_multicast+0x424>
   10d70:	b	1113c <sf_gen_multicast+0x424>
   10d74:	b	1113c <sf_gen_multicast+0x424>
   10d78:	b	1113c <sf_gen_multicast+0x424>
   10d7c:	b	10d80 <sf_gen_multicast+0x68>
   10d80:	movw	r0, #34525	; 0x86dd
   10d84:	bl	98c0 <gen_linktype>
   10d88:	ldr	r3, [pc, #952]	; 11148 <sf_gen_multicast+0x430>
   10d8c:	mov	r6, r0
   10d90:	mov	r1, #16
   10d94:	add	r3, pc, r3
   10d98:	ldr	r0, [r3, #872]	; 0x368
   10d9c:	add	r0, r0, #24
   10da0:	bl	2588 <gen_load_macplrel>
   10da4:	mov	r5, r0
   10da8:	bl	24d8 <newchunk.constprop.26>
   10dac:	mov	r4, r0
   10db0:	mov	r2, #21
   10db4:	mov	r3, #255	; 0xff
   10db8:	mov	r0, r6
   10dbc:	str	r5, [r4, #4]
   10dc0:	mov	r1, r4
   10dc4:	str	r2, [r4, #8]
   10dc8:	str	r3, [r4, #20]
   10dcc:	str	r4, [r4, #96]	; 0x60
   10dd0:	bl	7884 <sf_gen_and>
   10dd4:	mov	r0, r4
   10dd8:	ldrd	r4, [sp]
   10ddc:	ldrd	r6, [sp, #8]
   10de0:	ldrd	r8, [sp, #16]
   10de4:	ldr	sl, [sp, #24]
   10de8:	add	sp, sp, #28
   10dec:	pop	{pc}		; (ldr pc, [sp], #4)
   10df0:	mov	r0, #2048	; 0x800
   10df4:	bl	98c0 <gen_linktype>
   10df8:	ldr	r3, [pc, #844]	; 1114c <sf_gen_multicast+0x434>
   10dfc:	mov	r6, r0
   10e00:	mov	r1, #16
   10e04:	add	r3, pc, r3
   10e08:	ldr	r0, [r3, #872]	; 0x368
   10e0c:	add	r0, r0, r1
   10e10:	bl	2588 <gen_load_macplrel>
   10e14:	mov	r5, r0
   10e18:	bl	24d8 <newchunk.constprop.26>
   10e1c:	mov	r4, r0
   10e20:	mov	r2, #53	; 0x35
   10e24:	mov	r3, #224	; 0xe0
   10e28:	b	10db8 <sf_gen_multicast+0xa0>
   10e2c:	ldr	r4, [pc, #796]	; 11150 <sf_gen_multicast+0x438>
   10e30:	add	r4, pc, r4
   10e34:	ldr	r5, [r4, #876]	; 0x36c
   10e38:	cmp	r5, #119	; 0x77
   10e3c:	beq	10f64 <sf_gen_multicast+0x24c>
   10e40:	bgt	10e68 <sf_gen_multicast+0x150>
   10e44:	cmp	r5, #7
   10e48:	beq	10ef4 <sf_gen_multicast+0x1dc>
   10e4c:	bgt	10f24 <sf_gen_multicast+0x20c>
   10e50:	cmp	r5, #1
   10e54:	beq	11110 <sf_gen_multicast+0x3f8>
   10e58:	cmp	r5, #6
   10e5c:	bne	1113c <sf_gen_multicast+0x424>
   10e60:	mov	r0, #2
   10e64:	b	10f30 <sf_gen_multicast+0x218>
   10e68:	cmp	r5, #127	; 0x7f
   10e6c:	beq	10f64 <sf_gen_multicast+0x24c>
   10e70:	bgt	10edc <sf_gen_multicast+0x1c4>
   10e74:	cmp	r5, #122	; 0x7a
   10e78:	beq	10e60 <sf_gen_multicast+0x148>
   10e7c:	cmp	r5, #123	; 0x7b
   10e80:	bne	1113c <sf_gen_multicast+0x424>
   10e84:	ldr	r3, [r4, #924]	; 0x39c
   10e88:	cmp	r3, #0
   10e8c:	beq	1113c <sf_gen_multicast+0x424>
   10e90:	mov	r2, #65280	; 0xff00
   10e94:	mov	r1, #8
   10e98:	mov	r0, #4
   10e9c:	bl	5ad8 <gen_cmp.constprop.20>
   10ea0:	mov	r5, r0
   10ea4:	ldr	r0, [r4, #920]	; 0x398
   10ea8:	ldr	r3, [r5, #44]	; 0x2c
   10eac:	clz	r3, r3
   10eb0:	lsr	r3, r3, #5
   10eb4:	str	r3, [r5, #44]	; 0x2c
   10eb8:	bl	423c <gen_load_llrel.constprop.24>
   10ebc:	mov	r6, r0
   10ec0:	bl	24d8 <newchunk.constprop.26>
   10ec4:	mov	r4, r0
   10ec8:	mov	r2, #69	; 0x45
   10ecc:	mov	r3, #1
   10ed0:	mov	r0, r5
   10ed4:	str	r6, [r4, #4]
   10ed8:	b	10dc0 <sf_gen_multicast+0xa8>
   10edc:	cmp	r5, #163	; 0xa3
   10ee0:	beq	10f64 <sf_gen_multicast+0x24c>
   10ee4:	cmp	r5, #192	; 0xc0
   10ee8:	beq	10f64 <sf_gen_multicast+0x24c>
   10eec:	cmp	r5, #129	; 0x81
   10ef0:	bne	1113c <sf_gen_multicast+0x424>
   10ef4:	ldr	r2, [pc, #600]	; 11154 <sf_gen_multicast+0x43c>
   10ef8:	mov	r1, #1
   10efc:	mov	r0, r1
   10f00:	ldrd	r4, [sp]
   10f04:	ldrd	r6, [sp, #8]
   10f08:	add	r2, pc, r2
   10f0c:	add	r2, r2, #960	; 0x3c0
   10f10:	ldrd	r8, [sp, #16]
   10f14:	ldr	sl, [sp, #24]
   10f18:	ldr	lr, [sp, #28]
   10f1c:	add	sp, sp, #32
   10f20:	b	792c <gen_bcmp.constprop.12>
   10f24:	cmp	r5, #10
   10f28:	moveq	r0, #1
   10f2c:	bne	10f5c <sf_gen_multicast+0x244>
   10f30:	bl	423c <gen_load_llrel.constprop.24>
   10f34:	mov	r5, r0
   10f38:	bl	24d8 <newchunk.constprop.26>
   10f3c:	mov	r4, r0
   10f40:	mov	r2, #69	; 0x45
   10f44:	str	r5, [r0, #4]
   10f48:	mov	r3, #1
   10f4c:	str	r2, [r0, #8]
   10f50:	str	r3, [r0, #20]
   10f54:	str	r0, [r4, #96]	; 0x60
   10f58:	b	10dd4 <sf_gen_multicast+0xbc>
   10f5c:	cmp	r5, #105	; 0x69
   10f60:	bne	1113c <sf_gen_multicast+0x424>
   10f64:	mov	r0, #1
   10f68:	mov	r5, #69	; 0x45
   10f6c:	bl	423c <gen_load_llrel.constprop.24>
   10f70:	mov	r4, r0
   10f74:	mov	r8, #1
   10f78:	bl	24d8 <newchunk.constprop.26>
   10f7c:	mov	r6, r0
   10f80:	mov	r0, #16
   10f84:	mov	r9, #8
   10f88:	strd	r4, [r6, #4]
   10f8c:	str	r8, [r6, #20]
   10f90:	str	r6, [r6, #96]	; 0x60
   10f94:	bl	423c <gen_load_llrel.constprop.24>
   10f98:	mov	r7, r0
   10f9c:	bl	24d8 <newchunk.constprop.26>
   10fa0:	mov	r4, r0
   10fa4:	mov	r0, r6
   10fa8:	mov	r1, r4
   10fac:	str	r7, [r4, #4]
   10fb0:	str	r5, [r4, #8]
   10fb4:	str	r8, [r4, #20]
   10fb8:	str	r4, [r4, #96]	; 0x60
   10fbc:	bl	7884 <sf_gen_and>
   10fc0:	mov	r0, r8
   10fc4:	bl	423c <gen_load_llrel.constprop.24>
   10fc8:	mov	r7, r0
   10fcc:	bl	24d8 <newchunk.constprop.26>
   10fd0:	mov	r6, r0
   10fd4:	mov	r0, #4
   10fd8:	ldr	r3, [r6, #44]	; 0x2c
   10fdc:	str	r7, [r6, #4]
   10fe0:	str	r5, [r6, #8]
   10fe4:	str	r8, [r6, #20]
   10fe8:	str	r6, [r6, #96]	; 0x60
   10fec:	clz	r3, r3
   10ff0:	lsr	r3, r3, #5
   10ff4:	str	r3, [r6, #44]	; 0x2c
   10ff8:	bl	423c <gen_load_llrel.constprop.24>
   10ffc:	mov	sl, r0
   11000:	bl	24d8 <newchunk.constprop.26>
   11004:	mov	r7, r0
   11008:	mov	r0, r6
   1100c:	mov	r1, r7
   11010:	str	sl, [r7, #4]
   11014:	str	r5, [r7, #8]
   11018:	str	r8, [r7, #20]
   1101c:	str	r7, [r7, #96]	; 0x60
   11020:	bl	7884 <sf_gen_and>
   11024:	mov	r1, r4
   11028:	mov	r0, r7
   1102c:	bl	823c <sf_gen_or>
   11030:	mov	r0, #0
   11034:	bl	423c <gen_load_llrel.constprop.24>
   11038:	mov	r6, r0
   1103c:	bl	24d8 <newchunk.constprop.26>
   11040:	mov	r3, r0
   11044:	mov	r1, r4
   11048:	str	r6, [r0, #4]
   1104c:	str	r5, [r0, #8]
   11050:	str	r9, [r0, #20]
   11054:	str	r0, [r3, #96]	; 0x60
   11058:	bl	7884 <sf_gen_and>
   1105c:	mov	r0, #0
   11060:	bl	423c <gen_load_llrel.constprop.24>
   11064:	mov	r7, r0
   11068:	bl	24d8 <newchunk.constprop.26>
   1106c:	mov	r6, r0
   11070:	mov	r0, #4
   11074:	ldr	r3, [r6, #44]	; 0x2c
   11078:	str	r7, [r6, #4]
   1107c:	str	r5, [r6, #8]
   11080:	str	r9, [r6, #20]
   11084:	str	r6, [r6, #96]	; 0x60
   11088:	clz	r3, r3
   1108c:	lsr	r3, r3, #5
   11090:	str	r3, [r6, #44]	; 0x2c
   11094:	bl	423c <gen_load_llrel.constprop.24>
   11098:	mov	r9, r0
   1109c:	bl	24d8 <newchunk.constprop.26>
   110a0:	mov	r7, r0
   110a4:	mov	r0, r6
   110a8:	mov	r1, r7
   110ac:	str	r9, [r7, #4]
   110b0:	str	r5, [r7, #8]
   110b4:	str	r8, [r7, #20]
   110b8:	str	r7, [r7, #96]	; 0x60
   110bc:	bl	7884 <sf_gen_and>
   110c0:	mov	r1, r4
   110c4:	mov	r0, r7
   110c8:	bl	823c <sf_gen_or>
   110cc:	mov	r0, #0
   110d0:	bl	423c <gen_load_llrel.constprop.24>
   110d4:	mov	r6, r0
   110d8:	bl	24d8 <newchunk.constprop.26>
   110dc:	ldr	r2, [r0, #44]	; 0x2c
   110e0:	mov	r3, r0
   110e4:	mov	ip, #4
   110e8:	mov	r1, r4
   110ec:	str	r6, [r0, #4]
   110f0:	str	r5, [r0, #8]
   110f4:	str	ip, [r0, #20]
   110f8:	clz	r2, r2
   110fc:	lsr	r2, r2, #5
   11100:	str	r2, [r0, #44]	; 0x2c
   11104:	str	r0, [r3, #96]	; 0x60
   11108:	bl	7884 <sf_gen_and>
   1110c:	b	10dd4 <sf_gen_multicast+0xbc>
   11110:	mov	r0, #0
   11114:	bl	423c <gen_load_llrel.constprop.24>
   11118:	mov	r6, r0
   1111c:	bl	24d8 <newchunk.constprop.26>
   11120:	mov	r4, r0
   11124:	mov	r3, #69	; 0x45
   11128:	str	r6, [r0, #4]
   1112c:	str	r3, [r0, #8]
   11130:	str	r5, [r0, #20]
   11134:	str	r0, [r4, #96]	; 0x60
   11138:	b	10dd4 <sf_gen_multicast+0xbc>
   1113c:	ldr	r0, [pc, #20]	; 11158 <sf_gen_multicast+0x440>
   11140:	add	r0, pc, r0
   11144:	bl	2130 <sf_bpf_error>
   11148:	.word	0x0002d5cc
   1114c:	.word	0x0002d55c
   11150:	.word	0x0002d530
   11154:	.word	0x0002d458
   11158:	.word	0x00010204

0001115c <sf_gen_inbound>:
   1115c:	ldr	r3, [pc, #424]	; 1130c <sf_gen_inbound+0x1b0>
   11160:	strd	r4, [sp, #-12]!
   11164:	mov	r4, r0
   11168:	str	lr, [sp, #8]
   1116c:	sub	sp, sp, #12
   11170:	add	r3, pc, r3
   11174:	ldr	r1, [r3, #876]	; 0x36c
   11178:	cmp	r1, #168	; 0xa8
   1117c:	bgt	11208 <sf_gen_inbound+0xac>
   11180:	cmp	r1, #167	; 0xa7
   11184:	bge	11248 <sf_gen_inbound+0xec>
   11188:	cmp	r1, #137	; 0x89
   1118c:	bgt	111d8 <sf_gen_inbound+0x7c>
   11190:	cmp	r1, #130	; 0x82
   11194:	bge	11248 <sf_gen_inbound+0xec>
   11198:	cmp	r1, #8
   1119c:	beq	112c4 <sf_gen_inbound+0x168>
   111a0:	cmp	r1, #113	; 0x71
   111a4:	bne	11284 <sf_gen_inbound+0x128>
   111a8:	cmp	r0, #0
   111ac:	moveq	r2, r0
   111b0:	moveq	r1, #8
   111b4:	beq	111c4 <sf_gen_inbound+0x68>
   111b8:	mov	r2, #4
   111bc:	mov	r1, #8
   111c0:	mov	r0, #0
   111c4:	add	sp, sp, #12
   111c8:	ldrd	r4, [sp]
   111cc:	ldr	lr, [sp, #8]
   111d0:	add	sp, sp, #12
   111d4:	b	5ad8 <gen_cmp.constprop.20>
   111d8:	cmp	r1, #164	; 0xa4
   111dc:	beq	11248 <sf_gen_inbound+0xec>
   111e0:	cmp	r1, #166	; 0xa6
   111e4:	bne	11284 <sf_gen_inbound+0x128>
   111e8:	cmp	r0, #0
   111ec:	moveq	r2, r0
   111f0:	moveq	r1, #16
   111f4:	beq	111c4 <sf_gen_inbound+0x68>
   111f8:	mov	r2, #1
   111fc:	mov	r1, #16
   11200:	mov	r0, #0
   11204:	b	111c4 <sf_gen_inbound+0x68>
   11208:	cmp	r1, #183	; 0xb7
   1120c:	beq	11248 <sf_gen_inbound+0xec>
   11210:	ble	1123c <sf_gen_inbound+0xe0>
   11214:	cmp	r1, #200	; 0xc8
   11218:	beq	11248 <sf_gen_inbound+0xec>
   1121c:	cmp	r1, #226	; 0xe2
   11220:	bne	1127c <sf_gen_inbound+0x120>
   11224:	cmp	r0, #0
   11228:	beq	11290 <sf_gen_inbound+0x134>
   1122c:	mov	r2, #1
   11230:	mov	r1, #8
   11234:	mov	r0, #2
   11238:	b	111c4 <sf_gen_inbound+0x68>
   1123c:	sub	r3, r1, #178	; 0xb2
   11240:	cmp	r3, #3
   11244:	bhi	11284 <sf_gen_inbound+0x128>
   11248:	cmp	r4, #0
   1124c:	bne	112a0 <sf_gen_inbound+0x144>
   11250:	mov	ip, #1
   11254:	mov	r3, #16
   11258:	mov	r2, ip
   1125c:	mov	r1, r3
   11260:	mov	r0, #3
   11264:	stm	sp, {r4, ip}
   11268:	bl	5e64 <gen_ncmp.constprop.16>
   1126c:	add	sp, sp, #12
   11270:	ldrd	r4, [sp]
   11274:	add	sp, sp, #8
   11278:	pop	{pc}		; (ldr pc, [sp], #4)
   1127c:	cmp	r1, #194	; 0xc2
   11280:	beq	11248 <sf_gen_inbound+0xec>
   11284:	ldr	r0, [pc, #132]	; 11310 <sf_gen_inbound+0x1b4>
   11288:	add	r0, pc, r0
   1128c:	bl	2130 <sf_bpf_error>
   11290:	mov	r2, #2
   11294:	mov	r1, #8
   11298:	mov	r0, r2
   1129c:	b	111c4 <sf_gen_inbound+0x68>
   112a0:	mov	ip, #0
   112a4:	mov	r3, #16
   112a8:	mov	r1, r3
   112ac:	mov	r2, #1
   112b0:	mov	r0, #3
   112b4:	str	ip, [sp]
   112b8:	str	ip, [sp, #4]
   112bc:	bl	5e64 <gen_ncmp.constprop.16>
   112c0:	b	1126c <sf_gen_inbound+0x110>
   112c4:	mov	r0, #0
   112c8:	bl	fbbc <sf_gen_loadi>
   112cc:	mov	r2, #1
   112d0:	mov	r1, r0
   112d4:	mov	r0, r2
   112d8:	bl	e9e8 <sf_gen_load>
   112dc:	mov	r5, r0
   112e0:	mov	r0, #0
   112e4:	bl	fbbc <sf_gen_loadi>
   112e8:	mov	r2, r0
   112ec:	mov	r3, r4
   112f0:	mov	r1, r5
   112f4:	mov	r0, #16
   112f8:	add	sp, sp, #12
   112fc:	ldrd	r4, [sp]
   11300:	ldr	lr, [sp, #8]
   11304:	add	sp, sp, #12
   11308:	b	f548 <sf_gen_relation>
   1130c:	.word	0x0002d1f0
   11310:	.word	0x0001012c

00011314 <sf_gen_pf_ifname>:
   11314:	ldr	r0, [pc, #12]	; 11328 <sf_gen_pf_ifname+0x14>
   11318:	str	r4, [sp, #-8]!
   1131c:	str	lr, [sp, #4]
   11320:	add	r0, pc, r0
   11324:	bl	2130 <sf_bpf_error>
   11328:	.word	0x000100c4

0001132c <sf_gen_pf_ruleset>:
   1132c:	ldr	r0, [pc, #12]	; 11340 <sf_gen_pf_ruleset+0x14>
   11330:	str	r4, [sp, #-8]!
   11334:	str	lr, [sp, #4]
   11338:	add	r0, pc, r0
   1133c:	bl	2130 <sf_bpf_error>
   11340:	.word	0x000100d4

00011344 <sf_gen_pf_rnr>:
   11344:	ldr	r0, [pc, #12]	; 11358 <sf_gen_pf_rnr+0x14>
   11348:	str	r4, [sp, #-8]!
   1134c:	str	lr, [sp, #4]
   11350:	add	r0, pc, r0
   11354:	bl	2130 <sf_bpf_error>
   11358:	.word	0x000100bc

0001135c <sf_gen_pf_srnr>:
   1135c:	ldr	r0, [pc, #12]	; 11370 <sf_gen_pf_srnr+0x14>
   11360:	str	r4, [sp, #-8]!
   11364:	str	lr, [sp, #4]
   11368:	add	r0, pc, r0
   1136c:	bl	2130 <sf_bpf_error>
   11370:	.word	0x000100a4

00011374 <sf_gen_pf_reason>:
   11374:	ldr	r0, [pc, #12]	; 11388 <sf_gen_pf_reason+0x14>
   11378:	str	r4, [sp, #-8]!
   1137c:	str	lr, [sp, #4]
   11380:	add	r0, pc, r0
   11384:	bl	2130 <sf_bpf_error>
   11388:	.word	0x0001008c

0001138c <sf_gen_pf_action>:
   1138c:	ldr	r0, [pc, #12]	; 113a0 <sf_gen_pf_action+0x14>
   11390:	str	r4, [sp, #-8]!
   11394:	str	lr, [sp, #4]
   11398:	add	r0, pc, r0
   1139c:	bl	2130 <sf_bpf_error>
   113a0:	.word	0x00010074

000113a4 <sf_gen_p80211_type>:
   113a4:	ldr	r3, [pc, #328]	; 114f4 <sf_gen_p80211_type+0x150>
   113a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   113ac:	mov	r4, r1
   113b0:	strd	r6, [sp, #8]
   113b4:	mov	r6, r0
   113b8:	str	r8, [sp, #16]
   113bc:	str	lr, [sp, #20]
   113c0:	add	r3, pc, r3
   113c4:	ldr	r3, [r3, #876]	; 0x36c
   113c8:	cmp	r3, #119	; 0x77
   113cc:	beq	113e4 <sf_gen_p80211_type+0x40>
   113d0:	ble	11470 <sf_gen_p80211_type+0xcc>
   113d4:	cmp	r3, #127	; 0x7f
   113d8:	beq	113e4 <sf_gen_p80211_type+0x40>
   113dc:	cmp	r3, #163	; 0xa3
   113e0:	bne	11478 <sf_gen_p80211_type+0xd4>
   113e4:	mov	r1, #16
   113e8:	mov	r0, #0
   113ec:	bl	4e84 <gen_load_llrel>
   113f0:	cmn	r4, #1
   113f4:	mov	r7, r0
   113f8:	bne	114c4 <sf_gen_p80211_type+0x120>
   113fc:	ldr	r2, [pc, #244]	; 114f8 <sf_gen_p80211_type+0x154>
   11400:	add	r2, pc, r2
   11404:	ldr	r4, [r2, #656]	; 0x290
   11408:	add	r3, r2, #660	; 0x294
   1140c:	lsl	r5, r4, #3
   11410:	add	r1, r2, r5
   11414:	add	r5, r3, r5
   11418:	ldr	r1, [r1, #660]	; 0x294
   1141c:	cmp	r1, #207	; 0xcf
   11420:	bhi	11484 <sf_gen_p80211_type+0xe0>
   11424:	add	r3, r4, #1
   11428:	add	r8, r5, #8
   1142c:	cmp	r3, #15
   11430:	str	r3, [r2, #656]	; 0x290
   11434:	bgt	11464 <sf_gen_p80211_type+0xc0>
   11438:	mov	r4, #1024	; 0x400
   1143c:	mov	r1, #1
   11440:	lsl	r4, r4, r3
   11444:	mov	r0, r4
   11448:	bl	ce8 <calloc@plt>
   1144c:	cmp	r0, #0
   11450:	str	r0, [r5, #12]
   11454:	beq	11464 <sf_gen_p80211_type+0xc0>
   11458:	cmp	r4, #207	; 0xcf
   1145c:	str	r4, [r5, #8]
   11460:	bhi	11490 <sf_gen_p80211_type+0xec>
   11464:	ldr	r0, [pc, #144]	; 114fc <sf_gen_p80211_type+0x158>
   11468:	add	r0, pc, r0
   1146c:	bl	2130 <sf_bpf_error>
   11470:	cmp	r3, #105	; 0x69
   11474:	beq	113e4 <sf_gen_p80211_type+0x40>
   11478:	ldr	r0, [pc, #128]	; 11500 <sf_gen_p80211_type+0x15c>
   1147c:	add	r0, pc, r0
   11480:	bl	2130 <sf_bpf_error>
   11484:	ldr	r4, [r3, r4, lsl #3]
   11488:	mov	r8, r5
   1148c:	ldr	r0, [r5, #4]
   11490:	sub	r4, r4, #208	; 0xd0
   11494:	mov	r3, #21
   11498:	add	r0, r0, r4
   1149c:	str	r4, [r8]
   114a0:	str	r7, [r0, #4]
   114a4:	str	r3, [r0, #8]
   114a8:	str	r6, [r0, #20]
   114ac:	str	r0, [r0, #96]	; 0x60
   114b0:	ldrd	r4, [sp]
   114b4:	ldrd	r6, [sp, #8]
   114b8:	ldr	r8, [sp, #16]
   114bc:	add	sp, sp, #20
   114c0:	pop	{pc}		; (ldr pc, [sp], #4)
   114c4:	bl	22d0 <newchunk.constprop.25>
   114c8:	mov	r3, #84	; 0x54
   114cc:	mov	r2, r7
   114d0:	str	r3, [r0]
   114d4:	str	r4, [r0, #12]
   114d8:	b	114e0 <sf_gen_p80211_type+0x13c>
   114dc:	mov	r2, r3
   114e0:	ldr	r3, [r2, #16]
   114e4:	cmp	r3, #0
   114e8:	bne	114dc <sf_gen_p80211_type+0x138>
   114ec:	str	r0, [r2, #16]
   114f0:	b	113fc <sf_gen_p80211_type+0x58>
   114f4:	.word	0x0002cfa0
   114f8:	.word	0x0002cf60
   114fc:	.word	0x0000ed84
   11500:	.word	0x0000ffc8

00011504 <sf_gen_p80211_fcdir>:
   11504:	ldr	r3, [pc, #320]	; 1164c <sf_gen_p80211_fcdir+0x148>
   11508:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1150c:	strd	r6, [sp, #8]
   11510:	mov	r6, r0
   11514:	str	r8, [sp, #16]
   11518:	str	lr, [sp, #20]
   1151c:	add	r3, pc, r3
   11520:	ldr	r3, [r3, #876]	; 0x36c
   11524:	cmp	r3, #119	; 0x77
   11528:	beq	11540 <sf_gen_p80211_fcdir+0x3c>
   1152c:	ble	115f4 <sf_gen_p80211_fcdir+0xf0>
   11530:	cmp	r3, #127	; 0x7f
   11534:	beq	11540 <sf_gen_p80211_fcdir+0x3c>
   11538:	cmp	r3, #163	; 0xa3
   1153c:	bne	115fc <sf_gen_p80211_fcdir+0xf8>
   11540:	mov	r1, #16
   11544:	mov	r0, #1
   11548:	bl	4e84 <gen_load_llrel>
   1154c:	mov	r7, r0
   11550:	bl	22d0 <newchunk.constprop.25>
   11554:	mov	r1, #84	; 0x54
   11558:	mov	r2, #3
   1155c:	mov	r3, r7
   11560:	str	r1, [r0]
   11564:	str	r2, [r0, #12]
   11568:	b	11570 <sf_gen_p80211_fcdir+0x6c>
   1156c:	mov	r3, r2
   11570:	ldr	r2, [r3, #16]
   11574:	cmp	r2, #0
   11578:	bne	1156c <sf_gen_p80211_fcdir+0x68>
   1157c:	ldr	r2, [pc, #204]	; 11650 <sf_gen_p80211_fcdir+0x14c>
   11580:	str	r0, [r3, #16]
   11584:	add	r2, pc, r2
   11588:	ldr	r4, [r2, #656]	; 0x290
   1158c:	add	r3, r2, #660	; 0x294
   11590:	lsl	r5, r4, #3
   11594:	add	r1, r2, r5
   11598:	add	r5, r3, r5
   1159c:	ldr	r1, [r1, #660]	; 0x294
   115a0:	cmp	r1, #207	; 0xcf
   115a4:	bhi	11608 <sf_gen_p80211_fcdir+0x104>
   115a8:	add	r3, r4, #1
   115ac:	add	r8, r5, #8
   115b0:	cmp	r3, #15
   115b4:	str	r3, [r2, #656]	; 0x290
   115b8:	bgt	115e8 <sf_gen_p80211_fcdir+0xe4>
   115bc:	mov	r4, #1024	; 0x400
   115c0:	mov	r1, #1
   115c4:	lsl	r4, r4, r3
   115c8:	mov	r0, r4
   115cc:	bl	ce8 <calloc@plt>
   115d0:	cmp	r0, #0
   115d4:	str	r0, [r5, #12]
   115d8:	beq	115e8 <sf_gen_p80211_fcdir+0xe4>
   115dc:	cmp	r4, #207	; 0xcf
   115e0:	str	r4, [r5, #8]
   115e4:	bhi	11614 <sf_gen_p80211_fcdir+0x110>
   115e8:	ldr	r0, [pc, #100]	; 11654 <sf_gen_p80211_fcdir+0x150>
   115ec:	add	r0, pc, r0
   115f0:	bl	2130 <sf_bpf_error>
   115f4:	cmp	r3, #105	; 0x69
   115f8:	beq	11540 <sf_gen_p80211_fcdir+0x3c>
   115fc:	ldr	r0, [pc, #84]	; 11658 <sf_gen_p80211_fcdir+0x154>
   11600:	add	r0, pc, r0
   11604:	bl	2130 <sf_bpf_error>
   11608:	ldr	r4, [r3, r4, lsl #3]
   1160c:	mov	r8, r5
   11610:	ldr	r0, [r5, #4]
   11614:	sub	r4, r4, #208	; 0xd0
   11618:	mov	r2, #21
   1161c:	add	r3, r0, r4
   11620:	str	r4, [r8]
   11624:	mov	r0, r3
   11628:	str	r7, [r3, #4]
   1162c:	str	r2, [r3, #8]
   11630:	str	r6, [r3, #20]
   11634:	str	r3, [r3, #96]	; 0x60
   11638:	ldrd	r4, [sp]
   1163c:	ldrd	r6, [sp, #8]
   11640:	ldr	r8, [sp, #16]
   11644:	add	sp, sp, #20
   11648:	pop	{pc}		; (ldr pc, [sp], #4)
   1164c:	.word	0x0002ce44
   11650:	.word	0x0002cddc
   11654:	.word	0x0000ec00
   11658:	.word	0x0000fe78

0001165c <sf_gen_acode>:
   1165c:	ldr	r3, [pc, #576]	; 118a4 <sf_gen_acode+0x248>
   11660:	strd	r4, [sp, #-12]!
   11664:	mov	r4, r0
   11668:	str	lr, [sp, #8]
   1166c:	sub	sp, sp, #12
   11670:	str	r1, [sp, #4]
   11674:	add	r3, pc, r3
   11678:	ldr	r3, [r3, #876]	; 0x36c
   1167c:	cmp	r3, #7
   11680:	beq	1168c <sf_gen_acode+0x30>
   11684:	cmp	r3, #129	; 0x81
   11688:	bne	11894 <sf_gen_acode+0x238>
   1168c:	ldrb	r3, [sp, #4]
   11690:	cmp	r3, #1
   11694:	bhi	11888 <sf_gen_acode+0x22c>
   11698:	ldrb	r3, [sp, #5]
   1169c:	cmp	r3, #1
   116a0:	bne	11888 <sf_gen_acode+0x22c>
   116a4:	ldrb	r3, [sp, #6]
   116a8:	cmp	r3, #4
   116ac:	addls	pc, pc, r3, lsl #2
   116b0:	b	118a0 <sf_gen_acode+0x244>
   116b4:	b	117cc <sf_gen_acode+0x170>
   116b8:	b	117bc <sf_gen_acode+0x160>
   116bc:	b	1179c <sf_gen_acode+0x140>
   116c0:	b	117cc <sf_gen_acode+0x170>
   116c4:	b	116c8 <sf_gen_acode+0x6c>
   116c8:	mov	r2, r4
   116cc:	mov	r1, #1
   116d0:	mov	r0, #0
   116d4:	bl	792c <gen_bcmp.constprop.12>
   116d8:	mov	r1, #1
   116dc:	mov	r5, r0
   116e0:	mov	r2, r4
   116e4:	mov	r0, r1
   116e8:	bl	792c <gen_bcmp.constprop.12>
   116ec:	cmp	r5, #0
   116f0:	ldr	r1, [r0, #96]	; 0x60
   116f4:	movne	r3, r5
   116f8:	bne	11714 <sf_gen_acode+0xb8>
   116fc:	b	11730 <sf_gen_acode+0xd4>
   11700:	ldr	r2, [r3, #60]	; 0x3c
   11704:	str	r1, [r3, #60]	; 0x3c
   11708:	cmp	r2, #0
   1170c:	beq	11730 <sf_gen_acode+0xd4>
   11710:	mov	r3, r2
   11714:	ldr	r2, [r3, #44]	; 0x2c
   11718:	cmp	r2, #0
   1171c:	beq	11700 <sf_gen_acode+0xa4>
   11720:	ldr	r2, [r3, #84]	; 0x54
   11724:	str	r1, [r3, #84]	; 0x54
   11728:	cmp	r2, #0
   1172c:	bne	11710 <sf_gen_acode+0xb4>
   11730:	ldr	r2, [r5, #44]	; 0x2c
   11734:	mov	r3, r0
   11738:	clz	r2, r2
   1173c:	lsr	r2, r2, #5
   11740:	str	r2, [r5, #44]	; 0x2c
   11744:	ldr	r2, [r0, #44]	; 0x2c
   11748:	clz	r2, r2
   1174c:	lsr	r2, r2, #5
   11750:	str	r2, [r0, #44]	; 0x2c
   11754:	ldr	r2, [r3, #44]	; 0x2c
   11758:	cmp	r2, #0
   1175c:	addeq	r2, r3, #60	; 0x3c
   11760:	addne	r2, r3, #84	; 0x54
   11764:	ldr	r3, [r2]
   11768:	cmp	r3, #0
   1176c:	bne	11754 <sf_gen_acode+0xf8>
   11770:	str	r5, [r2]
   11774:	ldr	r3, [r0, #44]	; 0x2c
   11778:	clz	r3, r3
   1177c:	lsr	r3, r3, #5
   11780:	str	r3, [r0, #44]	; 0x2c
   11784:	ldr	r3, [r5, #96]	; 0x60
   11788:	str	r3, [r0, #96]	; 0x60
   1178c:	add	sp, sp, #12
   11790:	ldrd	r4, [sp]
   11794:	add	sp, sp, #8
   11798:	pop	{pc}		; (ldr pc, [sp], #4)
   1179c:	mov	r1, #1
   117a0:	mov	r2, r4
   117a4:	mov	r0, r1
   117a8:	add	sp, sp, #12
   117ac:	ldrd	r4, [sp]
   117b0:	ldr	lr, [sp, #8]
   117b4:	add	sp, sp, #12
   117b8:	b	792c <gen_bcmp.constprop.12>
   117bc:	mov	r2, r4
   117c0:	mov	r1, #1
   117c4:	mov	r0, #0
   117c8:	b	117a8 <sf_gen_acode+0x14c>
   117cc:	mov	r2, r4
   117d0:	mov	r1, #1
   117d4:	mov	r0, #0
   117d8:	bl	792c <gen_bcmp.constprop.12>
   117dc:	mov	r1, #1
   117e0:	mov	r5, r0
   117e4:	mov	r2, r4
   117e8:	mov	r0, r1
   117ec:	bl	792c <gen_bcmp.constprop.12>
   117f0:	ldr	r3, [r5, #44]	; 0x2c
   117f4:	mov	r2, r5
   117f8:	clz	r3, r3
   117fc:	lsr	r3, r3, #5
   11800:	str	r3, [r5, #44]	; 0x2c
   11804:	ldr	r1, [r0, #96]	; 0x60
   11808:	b	11824 <sf_gen_acode+0x1c8>
   1180c:	ldr	r3, [r2, #60]	; 0x3c
   11810:	str	r1, [r2, #60]	; 0x3c
   11814:	cmp	r3, #0
   11818:	beq	1183c <sf_gen_acode+0x1e0>
   1181c:	mov	r2, r3
   11820:	ldr	r3, [r3, #44]	; 0x2c
   11824:	cmp	r3, #0
   11828:	beq	1180c <sf_gen_acode+0x1b0>
   1182c:	ldr	r3, [r2, #84]	; 0x54
   11830:	str	r1, [r2, #84]	; 0x54
   11834:	cmp	r3, #0
   11838:	bne	1181c <sf_gen_acode+0x1c0>
   1183c:	ldr	r2, [r5, #44]	; 0x2c
   11840:	mov	r3, r0
   11844:	clz	r2, r2
   11848:	lsr	r2, r2, #5
   1184c:	str	r2, [r5, #44]	; 0x2c
   11850:	ldr	r2, [r3, #44]	; 0x2c
   11854:	cmp	r2, #0
   11858:	addeq	r2, r3, #60	; 0x3c
   1185c:	addne	r2, r3, #84	; 0x54
   11860:	ldr	r3, [r2]
   11864:	cmp	r3, #0
   11868:	bne	11850 <sf_gen_acode+0x1f4>
   1186c:	str	r5, [r2]
   11870:	ldr	r3, [r5, #96]	; 0x60
   11874:	str	r3, [r0, #96]	; 0x60
   11878:	add	sp, sp, #12
   1187c:	ldrd	r4, [sp]
   11880:	add	sp, sp, #8
   11884:	pop	{pc}		; (ldr pc, [sp], #4)
   11888:	ldr	r0, [pc, #24]	; 118a8 <sf_gen_acode+0x24c>
   1188c:	add	r0, pc, r0
   11890:	bl	2130 <sf_bpf_error>
   11894:	ldr	r0, [pc, #16]	; 118ac <sf_gen_acode+0x250>
   11898:	add	r0, pc, r0
   1189c:	bl	2130 <sf_bpf_error>
   118a0:	bl	ebc <abort@plt>
   118a4:	.word	0x0002ccec
   118a8:	.word	0x0000fc20
   118ac:	.word	0x0000fc40

000118b0 <sf_gen_vlan>:
   118b0:	ldr	r3, [pc, #664]	; 11b50 <sf_gen_vlan+0x2a0>
   118b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   118b8:	strd	r6, [sp, #8]
   118bc:	strd	r8, [sp, #16]
   118c0:	str	sl, [sp, #24]
   118c4:	add	r3, pc, r3
   118c8:	str	lr, [sp, #28]
   118cc:	ldr	r2, [r3, #4]
   118d0:	cmp	r2, #0
   118d4:	bne	11b44 <sf_gen_vlan+0x294>
   118d8:	ldr	r4, [pc, #628]	; 11b54 <sf_gen_vlan+0x2a4>
   118dc:	add	r4, pc, r4
   118e0:	ldr	r2, [r4, #872]	; 0x368
   118e4:	ldr	r1, [r4, #876]	; 0x36c
   118e8:	str	r2, [r3]
   118ec:	cmp	r1, #1
   118f0:	bne	11b38 <sf_gen_vlan+0x288>
   118f4:	mov	r7, r0
   118f8:	ldr	r8, [r4, #952]	; 0x3b8
   118fc:	bl	3650 <gen_llprefixlen>
   11900:	subs	r9, r0, #0
   11904:	beq	11b18 <sf_gen_vlan+0x268>
   11908:	bl	22d0 <newchunk.constprop.25>
   1190c:	mov	r2, #72	; 0x48
   11910:	mov	r3, r9
   11914:	str	r2, [r0]
   11918:	str	r8, [r0, #12]
   1191c:	b	11924 <sf_gen_vlan+0x74>
   11920:	mov	r3, r2
   11924:	ldr	r2, [r3, #16]
   11928:	cmp	r2, #0
   1192c:	bne	11920 <sf_gen_vlan+0x70>
   11930:	str	r0, [r3, #16]
   11934:	ldr	r2, [pc, #540]	; 11b58 <sf_gen_vlan+0x2a8>
   11938:	add	r2, pc, r2
   1193c:	ldr	r5, [r2, #656]	; 0x290
   11940:	add	r3, r2, #660	; 0x294
   11944:	lsl	r6, r5, #3
   11948:	add	r1, r2, r6
   1194c:	add	r6, r3, r6
   11950:	ldr	r1, [r1, #660]	; 0x294
   11954:	cmp	r1, #207	; 0xcf
   11958:	bhi	119a8 <sf_gen_vlan+0xf8>
   1195c:	add	r3, r5, #1
   11960:	add	sl, r6, #8
   11964:	cmp	r3, #15
   11968:	str	r3, [r2, #656]	; 0x290
   1196c:	bgt	1199c <sf_gen_vlan+0xec>
   11970:	mov	r5, #1024	; 0x400
   11974:	mov	r1, #1
   11978:	lsl	r5, r5, r3
   1197c:	mov	r0, r5
   11980:	bl	ce8 <calloc@plt>
   11984:	cmp	r0, #0
   11988:	str	r0, [r6, #12]
   1198c:	beq	1199c <sf_gen_vlan+0xec>
   11990:	cmp	r5, #207	; 0xcf
   11994:	str	r5, [r6, #8]
   11998:	bhi	119b4 <sf_gen_vlan+0x104>
   1199c:	ldr	r0, [pc, #440]	; 11b5c <sf_gen_vlan+0x2ac>
   119a0:	add	r0, pc, r0
   119a4:	bl	2130 <sf_bpf_error>
   119a8:	ldr	r5, [r3, r5, lsl #3]
   119ac:	mov	sl, r6
   119b0:	ldr	r0, [r6, #4]
   119b4:	sub	r5, r5, #208	; 0xd0
   119b8:	mov	r2, #21
   119bc:	add	r4, r0, r5
   119c0:	mov	r3, #33024	; 0x8100
   119c4:	cmp	r7, #0
   119c8:	str	r5, [sl]
   119cc:	str	r9, [r4, #4]
   119d0:	str	r2, [r4, #8]
   119d4:	str	r3, [r4, #20]
   119d8:	str	r4, [r4, #96]	; 0x60
   119dc:	bge	11a18 <sf_gen_vlan+0x168>
   119e0:	ldr	r3, [pc, #376]	; 11b60 <sf_gen_vlan+0x2b0>
   119e4:	add	r8, r8, #4
   119e8:	mov	r0, r4
   119ec:	add	r3, pc, r3
   119f0:	ldr	r2, [r3, #796]	; 0x31c
   119f4:	str	r8, [r3, #952]	; 0x3b8
   119f8:	add	r2, r2, #4
   119fc:	str	r2, [r3, #796]	; 0x31c
   11a00:	ldrd	r4, [sp]
   11a04:	ldrd	r6, [sp, #8]
   11a08:	ldrd	r8, [sp, #16]
   11a0c:	ldr	sl, [sp, #24]
   11a10:	add	sp, sp, #28
   11a14:	pop	{pc}		; (ldr pc, [sp], #4)
   11a18:	mov	r1, #8
   11a1c:	mov	r0, #0
   11a20:	bl	2588 <gen_load_macplrel>
   11a24:	mov	r5, r0
   11a28:	bl	22d0 <newchunk.constprop.25>
   11a2c:	mov	r2, #84	; 0x54
   11a30:	movw	r3, #4095	; 0xfff
   11a34:	str	r2, [r0]
   11a38:	mov	r2, r5
   11a3c:	str	r3, [r0, #12]
   11a40:	b	11a48 <sf_gen_vlan+0x198>
   11a44:	mov	r2, r3
   11a48:	ldr	r3, [r2, #16]
   11a4c:	cmp	r3, #0
   11a50:	bne	11a44 <sf_gen_vlan+0x194>
   11a54:	str	r0, [r2, #16]
   11a58:	bl	24d8 <newchunk.constprop.26>
   11a5c:	mov	r2, #21
   11a60:	mov	r3, r4
   11a64:	str	r5, [r0, #4]
   11a68:	str	r2, [r0, #8]
   11a6c:	str	r7, [r0, #20]
   11a70:	str	r0, [r0, #96]	; 0x60
   11a74:	b	11a8c <sf_gen_vlan+0x1dc>
   11a78:	ldr	r2, [r3, #60]	; 0x3c
   11a7c:	str	r0, [r3, #60]	; 0x3c
   11a80:	cmp	r2, #0
   11a84:	beq	11aa8 <sf_gen_vlan+0x1f8>
   11a88:	mov	r3, r2
   11a8c:	ldr	r2, [r3, #44]	; 0x2c
   11a90:	cmp	r2, #0
   11a94:	beq	11a78 <sf_gen_vlan+0x1c8>
   11a98:	ldr	r2, [r3, #84]	; 0x54
   11a9c:	str	r0, [r3, #84]	; 0x54
   11aa0:	cmp	r2, #0
   11aa4:	bne	11a88 <sf_gen_vlan+0x1d8>
   11aa8:	ldr	r2, [r4, #44]	; 0x2c
   11aac:	mov	r3, r0
   11ab0:	clz	r2, r2
   11ab4:	lsr	r2, r2, #5
   11ab8:	str	r2, [r4, #44]	; 0x2c
   11abc:	ldr	r2, [r0, #44]	; 0x2c
   11ac0:	clz	r2, r2
   11ac4:	lsr	r2, r2, #5
   11ac8:	str	r2, [r0, #44]	; 0x2c
   11acc:	ldr	r2, [r3, #44]	; 0x2c
   11ad0:	cmp	r2, #0
   11ad4:	addeq	r2, r3, #60	; 0x3c
   11ad8:	addne	r2, r3, #84	; 0x54
   11adc:	ldr	r3, [r2]
   11ae0:	cmp	r3, #0
   11ae4:	bne	11acc <sf_gen_vlan+0x21c>
   11ae8:	str	r4, [r2]
   11aec:	ldr	r3, [r0, #44]	; 0x2c
   11af0:	ldr	r2, [pc, #108]	; 11b64 <sf_gen_vlan+0x2b4>
   11af4:	clz	r3, r3
   11af8:	lsr	r3, r3, #5
   11afc:	add	r2, pc, r2
   11b00:	ldr	r8, [r2, #952]	; 0x3b8
   11b04:	str	r3, [r0, #44]	; 0x2c
   11b08:	ldr	r3, [r4, #96]	; 0x60
   11b0c:	mov	r4, r0
   11b10:	str	r3, [r0, #96]	; 0x60
   11b14:	b	119e0 <sf_gen_vlan+0x130>
   11b18:	bl	22d0 <newchunk.constprop.25>
   11b1c:	ldr	r3, [r4, #880]	; 0x370
   11b20:	mov	r2, #40	; 0x28
   11b24:	mov	r9, r0
   11b28:	str	r2, [r0]
   11b2c:	add	r3, r3, r8
   11b30:	str	r3, [r0, #12]
   11b34:	b	11934 <sf_gen_vlan+0x84>
   11b38:	ldr	r0, [pc, #40]	; 11b68 <sf_gen_vlan+0x2b8>
   11b3c:	add	r0, pc, r0
   11b40:	bl	2130 <sf_bpf_error>
   11b44:	ldr	r0, [pc, #32]	; 11b6c <sf_gen_vlan+0x2bc>
   11b48:	add	r0, pc, r0
   11b4c:	bl	2130 <sf_bpf_error>
   11b50:	.word	0x0002c9ac
   11b54:	.word	0x0002ca84
   11b58:	.word	0x0002ca28
   11b5c:	.word	0x0000e84c
   11b60:	.word	0x0002c974
   11b64:	.word	0x0002c864
   11b68:	.word	0x0000f9d8
   11b6c:	.word	0x0000f9b0

00011b70 <sf_gen_mpls>:
   11b70:	ldr	r3, [pc, #716]	; 11e44 <sf_gen_mpls+0x2d4>
   11b74:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b78:	ldr	r2, [pc, #712]	; 11e48 <sf_gen_mpls+0x2d8>
   11b7c:	strd	r6, [sp, #8]
   11b80:	strd	r8, [sp, #16]
   11b84:	mov	r8, r0
   11b88:	add	r3, pc, r3
   11b8c:	str	sl, [sp, #24]
   11b90:	str	lr, [sp, #28]
   11b94:	add	r2, pc, r2
   11b98:	ldr	r6, [r3, #4]
   11b9c:	ldr	r5, [r2, #872]	; 0x368
   11ba0:	cmp	r6, #0
   11ba4:	str	r5, [r3]
   11ba8:	bne	11bd4 <sf_gen_mpls+0x64>
   11bac:	ldr	r1, [r2, #876]	; 0x36c
   11bb0:	cmp	r1, #9
   11bb4:	beq	11d9c <sf_gen_mpls+0x22c>
   11bb8:	cmp	r1, #104	; 0x68
   11bbc:	beq	11db8 <sf_gen_mpls+0x248>
   11bc0:	cmp	r1, #1
   11bc4:	beq	11db8 <sf_gen_mpls+0x248>
   11bc8:	ldr	r0, [pc, #636]	; 11e4c <sf_gen_mpls+0x2dc>
   11bcc:	add	r0, pc, r0
   11bd0:	bl	2130 <sf_bpf_error>
   11bd4:	mov	r1, #16
   11bd8:	sub	r0, r5, #2
   11bdc:	bl	2588 <gen_load_macplrel>
   11be0:	mov	r9, r0
   11be4:	bl	22d0 <newchunk.constprop.25>
   11be8:	mov	r3, #84	; 0x54
   11bec:	mov	r2, #1
   11bf0:	str	r3, [r0]
   11bf4:	mov	r3, r9
   11bf8:	str	r2, [r0, #12]
   11bfc:	b	11c04 <sf_gen_mpls+0x94>
   11c00:	mov	r3, r7
   11c04:	ldr	r7, [r3, #16]
   11c08:	cmp	r7, #0
   11c0c:	bne	11c00 <sf_gen_mpls+0x90>
   11c10:	str	r0, [r3, #16]
   11c14:	bl	24d8 <newchunk.constprop.26>
   11c18:	mov	r4, r0
   11c1c:	mov	r3, #21
   11c20:	str	r9, [r0, #4]
   11c24:	str	r3, [r0, #8]
   11c28:	str	r7, [r0, #20]
   11c2c:	str	r0, [r4, #96]	; 0x60
   11c30:	cmp	r8, #0
   11c34:	bge	11c80 <sf_gen_mpls+0x110>
   11c38:	ldr	r3, [pc, #528]	; 11e50 <sf_gen_mpls+0x2e0>
   11c3c:	add	r5, r5, #4
   11c40:	add	r6, r6, #1
   11c44:	mov	r0, r4
   11c48:	ldr	r1, [pc, #516]	; 11e54 <sf_gen_mpls+0x2e4>
   11c4c:	add	r3, pc, r3
   11c50:	ldr	r2, [r3, #956]	; 0x3bc
   11c54:	add	r1, pc, r1
   11c58:	str	r5, [r3, #872]	; 0x368
   11c5c:	str	r6, [r1, #4]
   11c60:	add	r2, r2, #4
   11c64:	str	r2, [r3, #956]	; 0x3bc
   11c68:	ldrd	r4, [sp]
   11c6c:	ldrd	r6, [sp, #8]
   11c70:	ldrd	r8, [sp, #16]
   11c74:	ldr	sl, [sp, #24]
   11c78:	add	sp, sp, #28
   11c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c80:	mov	r0, r5
   11c84:	mov	r1, #0
   11c88:	lsl	r8, r8, #12
   11c8c:	bl	2588 <gen_load_macplrel>
   11c90:	mov	r5, r0
   11c94:	bl	22d0 <newchunk.constprop.25>
   11c98:	mov	r2, #84	; 0x54
   11c9c:	mov	r3, #61440	; 0xf000
   11ca0:	movt	r3, #65535	; 0xffff
   11ca4:	str	r2, [r0]
   11ca8:	mov	r2, r5
   11cac:	str	r3, [r0, #12]
   11cb0:	b	11cb8 <sf_gen_mpls+0x148>
   11cb4:	mov	r2, r3
   11cb8:	ldr	r3, [r2, #16]
   11cbc:	cmp	r3, #0
   11cc0:	bne	11cb4 <sf_gen_mpls+0x144>
   11cc4:	str	r0, [r2, #16]
   11cc8:	bl	24d8 <newchunk.constprop.26>
   11ccc:	mov	r3, #21
   11cd0:	cmp	r4, #0
   11cd4:	str	r5, [r0, #4]
   11cd8:	str	r3, [r0, #8]
   11cdc:	movne	r3, r4
   11ce0:	str	r8, [r0, #20]
   11ce4:	str	r0, [r0, #96]	; 0x60
   11ce8:	bne	11d04 <sf_gen_mpls+0x194>
   11cec:	b	11d20 <sf_gen_mpls+0x1b0>
   11cf0:	ldr	r2, [r3, #60]	; 0x3c
   11cf4:	str	r0, [r3, #60]	; 0x3c
   11cf8:	cmp	r2, #0
   11cfc:	beq	11d20 <sf_gen_mpls+0x1b0>
   11d00:	mov	r3, r2
   11d04:	ldr	r2, [r3, #44]	; 0x2c
   11d08:	cmp	r2, #0
   11d0c:	beq	11cf0 <sf_gen_mpls+0x180>
   11d10:	ldr	r2, [r3, #84]	; 0x54
   11d14:	str	r0, [r3, #84]	; 0x54
   11d18:	cmp	r2, #0
   11d1c:	bne	11d00 <sf_gen_mpls+0x190>
   11d20:	ldr	r2, [r4, #44]	; 0x2c
   11d24:	mov	r3, r0
   11d28:	clz	r2, r2
   11d2c:	lsr	r2, r2, #5
   11d30:	str	r2, [r4, #44]	; 0x2c
   11d34:	ldr	r2, [r0, #44]	; 0x2c
   11d38:	clz	r2, r2
   11d3c:	lsr	r2, r2, #5
   11d40:	str	r2, [r0, #44]	; 0x2c
   11d44:	ldr	r2, [r3, #44]	; 0x2c
   11d48:	cmp	r2, #0
   11d4c:	addeq	r2, r3, #60	; 0x3c
   11d50:	addne	r2, r3, #84	; 0x54
   11d54:	ldr	r3, [r2]
   11d58:	cmp	r3, #0
   11d5c:	bne	11d44 <sf_gen_mpls+0x1d4>
   11d60:	str	r4, [r2]
   11d64:	ldr	r3, [r0, #44]	; 0x2c
   11d68:	ldr	r1, [pc, #232]	; 11e58 <sf_gen_mpls+0x2e8>
   11d6c:	ldr	r2, [pc, #232]	; 11e5c <sf_gen_mpls+0x2ec>
   11d70:	clz	r3, r3
   11d74:	lsr	r3, r3, #5
   11d78:	add	r1, pc, r1
   11d7c:	ldr	r5, [r1, #872]	; 0x368
   11d80:	str	r3, [r0, #44]	; 0x2c
   11d84:	add	r2, pc, r2
   11d88:	ldr	r3, [r4, #96]	; 0x60
   11d8c:	mov	r4, r0
   11d90:	ldr	r6, [r2, #4]
   11d94:	str	r3, [r0, #96]	; 0x60
   11d98:	b	11c38 <sf_gen_mpls+0xc8>
   11d9c:	ldr	r3, [r2, #928]	; 0x3a0
   11da0:	cmp	r3, #0
   11da4:	bne	11e10 <sf_gen_mpls+0x2a0>
   11da8:	movw	r0, #641	; 0x281
   11dac:	bl	8c40 <gen_linktype.part.7>
   11db0:	mov	r4, r0
   11db4:	b	11c30 <sf_gen_mpls+0xc0>
   11db8:	ldr	r3, [pc, #160]	; 11e60 <sf_gen_mpls+0x2f0>
   11dbc:	add	r3, pc, r3
   11dc0:	ldr	r2, [r3, #928]	; 0x3a0
   11dc4:	cmp	r2, #0
   11dc8:	bne	11ddc <sf_gen_mpls+0x26c>
   11dcc:	movw	r0, #34887	; 0x8847
   11dd0:	bl	8c40 <gen_linktype.part.7>
   11dd4:	mov	r4, r0
   11dd8:	b	11c30 <sf_gen_mpls+0xc0>
   11ddc:	mov	r1, #8
   11de0:	ldr	r0, [r3, #952]	; 0x3b8
   11de4:	bl	2588 <gen_load_macplrel>
   11de8:	mov	r7, r0
   11dec:	bl	24d8 <newchunk.constprop.26>
   11df0:	mov	r4, r0
   11df4:	mov	r2, #21
   11df8:	str	r7, [r0, #4]
   11dfc:	movw	r3, #34887	; 0x8847
   11e00:	str	r2, [r0, #8]
   11e04:	str	r3, [r0, #20]
   11e08:	str	r0, [r4, #96]	; 0x60
   11e0c:	b	11c30 <sf_gen_mpls+0xc0>
   11e10:	mov	r1, #8
   11e14:	ldr	r0, [r2, #952]	; 0x3b8
   11e18:	bl	2588 <gen_load_macplrel>
   11e1c:	mov	r7, r0
   11e20:	bl	24d8 <newchunk.constprop.26>
   11e24:	mov	r4, r0
   11e28:	mov	r2, #21
   11e2c:	str	r7, [r0, #4]
   11e30:	movw	r3, #641	; 0x281
   11e34:	str	r2, [r0, #8]
   11e38:	str	r3, [r0, #20]
   11e3c:	str	r0, [r4, #96]	; 0x60
   11e40:	b	11c30 <sf_gen_mpls+0xc0>
   11e44:	.word	0x0002c6e8
   11e48:	.word	0x0002c7cc
   11e4c:	.word	0x0000f970
   11e50:	.word	0x0002c714
   11e54:	.word	0x0002c61c
   11e58:	.word	0x0002c5e8
   11e5c:	.word	0x0002c4ec
   11e60:	.word	0x0002c5a4

00011e64 <sf_gen_pppoed>:
   11e64:	ldr	r3, [pc, #132]	; 11ef0 <sf_gen_pppoed+0x8c>
   11e68:	str	r4, [sp, #-8]!
   11e6c:	str	lr, [sp, #4]
   11e70:	add	r3, pc, r3
   11e74:	ldr	r3, [r3, #4]
   11e78:	cmp	r3, #0
   11e7c:	beq	11e8c <sf_gen_pppoed+0x28>
   11e80:	ldr	r0, [pc, #108]	; 11ef4 <sf_gen_pppoed+0x90>
   11e84:	add	r0, pc, r0
   11e88:	bl	2130 <sf_bpf_error>
   11e8c:	ldr	r3, [pc, #100]	; 11ef8 <sf_gen_pppoed+0x94>
   11e90:	add	r3, pc, r3
   11e94:	ldr	r2, [r3, #928]	; 0x3a0
   11e98:	cmp	r2, #0
   11e9c:	bne	11eb4 <sf_gen_pppoed+0x50>
   11ea0:	movw	r0, #34915	; 0x8863
   11ea4:	ldr	r4, [sp]
   11ea8:	ldr	lr, [sp, #4]
   11eac:	add	sp, sp, #8
   11eb0:	b	8c40 <gen_linktype.part.7>
   11eb4:	mov	r1, #8
   11eb8:	ldr	r0, [r3, #952]	; 0x3b8
   11ebc:	bl	2588 <gen_load_macplrel>
   11ec0:	mov	r4, r0
   11ec4:	bl	24d8 <newchunk.constprop.26>
   11ec8:	mov	r3, r0
   11ecc:	mov	r1, #21
   11ed0:	str	r4, [r0, #4]
   11ed4:	movw	r2, #34915	; 0x8863
   11ed8:	str	r1, [r0, #8]
   11edc:	str	r2, [r0, #20]
   11ee0:	str	r0, [r3, #96]	; 0x60
   11ee4:	ldr	r4, [sp]
   11ee8:	add	sp, sp, #4
   11eec:	pop	{pc}		; (ldr pc, [sp], #4)
   11ef0:	.word	0x0002c400
   11ef4:	.word	0x0000e790
   11ef8:	.word	0x0002c4d0

00011efc <sf_gen_pppoes>:
   11efc:	ldr	r3, [pc, #172]	; 11fb0 <sf_gen_pppoes+0xb4>
   11f00:	str	r4, [sp, #-8]!
   11f04:	str	lr, [sp, #4]
   11f08:	add	r3, pc, r3
   11f0c:	ldr	r3, [r3, #4]
   11f10:	cmp	r3, #0
   11f14:	beq	11f24 <sf_gen_pppoes+0x28>
   11f18:	ldr	r0, [pc, #148]	; 11fb4 <sf_gen_pppoes+0xb8>
   11f1c:	add	r0, pc, r0
   11f20:	bl	2130 <sf_bpf_error>
   11f24:	ldr	r3, [pc, #140]	; 11fb8 <sf_gen_pppoes+0xbc>
   11f28:	add	r3, pc, r3
   11f2c:	ldr	r2, [r3, #928]	; 0x3a0
   11f30:	cmp	r2, #0
   11f34:	bne	11f80 <sf_gen_pppoes+0x84>
   11f38:	movw	r0, #34916	; 0x8864
   11f3c:	bl	8c40 <gen_linktype.part.7>
   11f40:	ldr	r3, [pc, #116]	; 11fbc <sf_gen_pppoes+0xc0>
   11f44:	mov	r1, #8
   11f48:	mov	lr, #1
   11f4c:	ldr	ip, [pc, #108]	; 11fc0 <sf_gen_pppoes+0xc4>
   11f50:	add	r3, pc, r3
   11f54:	ldr	r2, [r3, #872]	; 0x368
   11f58:	add	ip, pc, ip
   11f5c:	str	r1, [r3, #872]	; 0x368
   11f60:	str	lr, [r3, #928]	; 0x3a0
   11f64:	str	r1, [r3, #956]	; 0x3bc
   11f68:	add	r1, r2, #6
   11f6c:	str	r2, [ip]
   11f70:	str	r1, [r3, #952]	; 0x3b8
   11f74:	ldr	r4, [sp]
   11f78:	add	sp, sp, #4
   11f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f80:	mov	r1, #8
   11f84:	ldr	r0, [r3, #952]	; 0x3b8
   11f88:	bl	2588 <gen_load_macplrel>
   11f8c:	mov	r4, r0
   11f90:	bl	24d8 <newchunk.constprop.26>
   11f94:	mov	r2, #21
   11f98:	movw	r3, #34916	; 0x8864
   11f9c:	str	r4, [r0, #4]
   11fa0:	str	r2, [r0, #8]
   11fa4:	str	r3, [r0, #20]
   11fa8:	str	r0, [r0, #96]	; 0x60
   11fac:	b	11f40 <sf_gen_pppoes+0x44>
   11fb0:	.word	0x0002c368
   11fb4:	.word	0x0000e6f8
   11fb8:	.word	0x0002c438
   11fbc:	.word	0x0002c410
   11fc0:	.word	0x0002c318

00011fc4 <sf_gen_atmfield_code>:
   11fc4:	sub	r0, r0, #51	; 0x33
   11fc8:	mov	ip, r1
   11fcc:	push	{lr}		; (str lr, [sp, #-4]!)
   11fd0:	mov	r1, r3
   11fd4:	sub	sp, sp, #12
   11fd8:	cmp	r0, #4
   11fdc:	addls	pc, pc, r0, lsl #2
   11fe0:	b	12054 <sf_gen_atmfield_code+0x90>
   11fe4:	b	12034 <sf_gen_atmfield_code+0x70>
   11fe8:	b	12058 <sf_gen_atmfield_code+0x94>
   11fec:	b	12094 <sf_gen_atmfield_code+0xd0>
   11ff0:	b	120c4 <sf_gen_atmfield_code+0x100>
   11ff4:	b	11ff8 <sf_gen_atmfield_code+0x34>
   11ff8:	ldr	r3, [pc, #264]	; 12108 <sf_gen_atmfield_code+0x144>
   11ffc:	add	r3, pc, r3
   12000:	ldr	r0, [r3, #884]	; 0x374
   12004:	cmp	r0, #0
   12008:	beq	120e4 <sf_gen_atmfield_code+0x120>
   1200c:	ldr	r0, [r3, #896]	; 0x380
   12010:	cmn	r0, #1
   12014:	beq	12054 <sf_gen_atmfield_code+0x90>
   12018:	mov	r3, r2
   1201c:	mvn	r2, #0
   12020:	stm	sp, {r1, ip}
   12024:	mov	r1, #16
   12028:	bl	5e64 <gen_ncmp.constprop.16>
   1202c:	add	sp, sp, #12
   12030:	pop	{pc}		; (ldr pc, [sp], #4)
   12034:	ldr	r3, [pc, #208]	; 1210c <sf_gen_atmfield_code+0x148>
   12038:	add	r3, pc, r3
   1203c:	ldr	r0, [r3, #884]	; 0x374
   12040:	cmp	r0, #0
   12044:	beq	120fc <sf_gen_atmfield_code+0x138>
   12048:	ldr	r0, [r3, #888]	; 0x378
   1204c:	cmn	r0, #1
   12050:	bne	12018 <sf_gen_atmfield_code+0x54>
   12054:	bl	ebc <abort@plt>
   12058:	ldr	r3, [pc, #176]	; 12110 <sf_gen_atmfield_code+0x14c>
   1205c:	add	r3, pc, r3
   12060:	ldr	r0, [r3, #884]	; 0x374
   12064:	cmp	r0, #0
   12068:	beq	120f0 <sf_gen_atmfield_code+0x12c>
   1206c:	ldr	r0, [r3, #892]	; 0x37c
   12070:	cmn	r0, #1
   12074:	beq	12054 <sf_gen_atmfield_code+0x90>
   12078:	mov	r3, r2
   1207c:	mvn	r2, #0
   12080:	stm	sp, {r1, ip}
   12084:	mov	r1, #8
   12088:	bl	5e64 <gen_ncmp.constprop.16>
   1208c:	add	sp, sp, #12
   12090:	pop	{pc}		; (ldr pc, [sp], #4)
   12094:	ldr	r3, [pc, #120]	; 12114 <sf_gen_atmfield_code+0x150>
   12098:	add	r3, pc, r3
   1209c:	ldr	r0, [r3, #896]	; 0x380
   120a0:	cmn	r0, #1
   120a4:	beq	12054 <sf_gen_atmfield_code+0x90>
   120a8:	mov	r3, r2
   120ac:	mov	r2, #15
   120b0:	stm	sp, {r1, ip}
   120b4:	mov	r1, #16
   120b8:	bl	5e64 <gen_ncmp.constprop.16>
   120bc:	add	sp, sp, #12
   120c0:	pop	{pc}		; (ldr pc, [sp], #4)
   120c4:	ldr	r3, [pc, #76]	; 12118 <sf_gen_atmfield_code+0x154>
   120c8:	add	r3, pc, r3
   120cc:	ldr	r0, [r3, #900]	; 0x384
   120d0:	cmn	r0, #1
   120d4:	beq	12054 <sf_gen_atmfield_code+0x90>
   120d8:	mov	r3, r2
   120dc:	add	r0, r0, #5
   120e0:	b	1201c <sf_gen_atmfield_code+0x58>
   120e4:	ldr	r0, [pc, #48]	; 1211c <sf_gen_atmfield_code+0x158>
   120e8:	add	r0, pc, r0
   120ec:	bl	2130 <sf_bpf_error>
   120f0:	ldr	r0, [pc, #40]	; 12120 <sf_gen_atmfield_code+0x15c>
   120f4:	add	r0, pc, r0
   120f8:	bl	2130 <sf_bpf_error>
   120fc:	ldr	r0, [pc, #32]	; 12124 <sf_gen_atmfield_code+0x160>
   12100:	add	r0, pc, r0
   12104:	bl	2130 <sf_bpf_error>
   12108:	.word	0x0002c364
   1210c:	.word	0x0002c328
   12110:	.word	0x0002c304
   12114:	.word	0x0002c2c8
   12118:	.word	0x0002c298
   1211c:	.word	0x0000e188
   12120:	.word	0x0000e15c
   12124:	.word	0x0000e130

00012128 <sf_gen_atmtype_abbrev>:
   12128:	sub	r0, r0, #22
   1212c:	strd	r4, [sp, #-20]!	; 0xffffffec
   12130:	strd	r6, [sp, #8]
   12134:	str	lr, [sp, #16]
   12138:	sub	sp, sp, #12
   1213c:	cmp	r0, #9
   12140:	addls	pc, pc, r0, lsl #2
   12144:	b	123c0 <sf_gen_atmtype_abbrev+0x298>
   12148:	b	121cc <sf_gen_atmtype_abbrev+0xa4>
   1214c:	b	12210 <sf_gen_atmtype_abbrev+0xe8>
   12150:	b	1223c <sf_gen_atmtype_abbrev+0x114>
   12154:	b	12268 <sf_gen_atmtype_abbrev+0x140>
   12158:	b	12294 <sf_gen_atmtype_abbrev+0x16c>
   1215c:	b	122c0 <sf_gen_atmtype_abbrev+0x198>
   12160:	b	123c0 <sf_gen_atmtype_abbrev+0x298>
   12164:	b	123c0 <sf_gen_atmtype_abbrev+0x298>
   12168:	b	122ec <sf_gen_atmtype_abbrev+0x1c4>
   1216c:	b	12170 <sf_gen_atmtype_abbrev+0x48>
   12170:	ldr	r5, [pc, #588]	; 123c4 <sf_gen_atmtype_abbrev+0x29c>
   12174:	add	r5, pc, r5
   12178:	ldr	r3, [r5, #884]	; 0x374
   1217c:	cmp	r3, #0
   12180:	beq	12360 <sf_gen_atmtype_abbrev+0x238>
   12184:	ldr	r0, [r5, #896]	; 0x380
   12188:	cmn	r0, #1
   1218c:	beq	123c0 <sf_gen_atmtype_abbrev+0x298>
   12190:	mov	ip, #2
   12194:	mov	r6, #0
   12198:	mov	r3, #16
   1219c:	mov	r2, #15
   121a0:	mov	r1, r3
   121a4:	stm	sp, {r6, ip}
   121a8:	bl	5e64 <gen_ncmp.constprop.16>
   121ac:	mov	r4, r0
   121b0:	str	r6, [r5, #924]	; 0x39c
   121b4:	mov	r0, r4
   121b8:	add	sp, sp, #12
   121bc:	ldrd	r4, [sp]
   121c0:	ldrd	r6, [sp, #8]
   121c4:	add	sp, sp, #16
   121c8:	pop	{pc}		; (ldr pc, [sp], #4)
   121cc:	ldr	r3, [pc, #500]	; 123c8 <sf_gen_atmtype_abbrev+0x2a0>
   121d0:	add	r3, pc, r3
   121d4:	ldr	r3, [r3, #884]	; 0x374
   121d8:	cmp	r3, #0
   121dc:	beq	123b4 <sf_gen_atmtype_abbrev+0x28c>
   121e0:	mov	r1, #0
   121e4:	mov	r0, #51	; 0x33
   121e8:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   121ec:	mov	r5, r0
   121f0:	mov	r1, #1
   121f4:	mov	r0, #52	; 0x34
   121f8:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   121fc:	mov	r4, r0
   12200:	mov	r1, r0
   12204:	mov	r0, r5
   12208:	bl	7884 <sf_gen_and>
   1220c:	b	121b4 <sf_gen_atmtype_abbrev+0x8c>
   12210:	ldr	r3, [pc, #436]	; 123cc <sf_gen_atmtype_abbrev+0x2a4>
   12214:	add	r3, pc, r3
   12218:	ldr	r3, [r3, #884]	; 0x374
   1221c:	cmp	r3, #0
   12220:	beq	123a8 <sf_gen_atmtype_abbrev+0x280>
   12224:	mov	r1, #0
   12228:	mov	r0, #51	; 0x33
   1222c:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12230:	mov	r5, r0
   12234:	mov	r1, #2
   12238:	b	121f4 <sf_gen_atmtype_abbrev+0xcc>
   1223c:	ldr	r3, [pc, #396]	; 123d0 <sf_gen_atmtype_abbrev+0x2a8>
   12240:	add	r3, pc, r3
   12244:	ldr	r3, [r3, #884]	; 0x374
   12248:	cmp	r3, #0
   1224c:	beq	1239c <sf_gen_atmtype_abbrev+0x274>
   12250:	mov	r1, #0
   12254:	mov	r0, #51	; 0x33
   12258:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   1225c:	mov	r5, r0
   12260:	mov	r1, #3
   12264:	b	121f4 <sf_gen_atmtype_abbrev+0xcc>
   12268:	ldr	r3, [pc, #356]	; 123d4 <sf_gen_atmtype_abbrev+0x2ac>
   1226c:	add	r3, pc, r3
   12270:	ldr	r3, [r3, #884]	; 0x374
   12274:	cmp	r3, #0
   12278:	beq	12390 <sf_gen_atmtype_abbrev+0x268>
   1227c:	mov	r1, #0
   12280:	mov	r0, #51	; 0x33
   12284:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12288:	mov	r5, r0
   1228c:	mov	r1, #4
   12290:	b	121f4 <sf_gen_atmtype_abbrev+0xcc>
   12294:	ldr	r3, [pc, #316]	; 123d8 <sf_gen_atmtype_abbrev+0x2b0>
   12298:	add	r3, pc, r3
   1229c:	ldr	r3, [r3, #884]	; 0x374
   122a0:	cmp	r3, #0
   122a4:	beq	12384 <sf_gen_atmtype_abbrev+0x25c>
   122a8:	mov	r1, #0
   122ac:	mov	r0, #51	; 0x33
   122b0:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   122b4:	mov	r5, r0
   122b8:	mov	r1, #5
   122bc:	b	121f4 <sf_gen_atmtype_abbrev+0xcc>
   122c0:	ldr	r3, [pc, #276]	; 123dc <sf_gen_atmtype_abbrev+0x2b4>
   122c4:	add	r3, pc, r3
   122c8:	ldr	r3, [r3, #884]	; 0x374
   122cc:	cmp	r3, #0
   122d0:	beq	12378 <sf_gen_atmtype_abbrev+0x250>
   122d4:	mov	r1, #0
   122d8:	mov	r0, #51	; 0x33
   122dc:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   122e0:	mov	r5, r0
   122e4:	mov	r1, #16
   122e8:	b	121f4 <sf_gen_atmtype_abbrev+0xcc>
   122ec:	ldr	r5, [pc, #236]	; 123e0 <sf_gen_atmtype_abbrev+0x2b8>
   122f0:	add	r5, pc, r5
   122f4:	ldr	r3, [r5, #884]	; 0x374
   122f8:	cmp	r3, #0
   122fc:	beq	1236c <sf_gen_atmtype_abbrev+0x244>
   12300:	ldr	r0, [r5, #896]	; 0x380
   12304:	cmn	r0, #1
   12308:	beq	123c0 <sf_gen_atmtype_abbrev+0x298>
   1230c:	mov	r6, #1
   12310:	mov	r7, #0
   12314:	mov	r3, #16
   12318:	mov	r2, #15
   1231c:	mov	r1, r3
   12320:	str	r7, [sp]
   12324:	str	r6, [sp, #4]
   12328:	bl	5e64 <gen_ncmp.constprop.16>
   1232c:	ldr	r3, [r5, #900]	; 0x384
   12330:	mov	r2, #3
   12334:	mov	r4, r0
   12338:	str	r7, [r5, #872]	; 0x368
   1233c:	str	r6, [r5, #924]	; 0x39c
   12340:	str	r2, [r5, #956]	; 0x3bc
   12344:	add	r1, r3, #2
   12348:	add	r2, r3, #14
   1234c:	add	r3, r3, #16
   12350:	str	r3, [r5, #796]	; 0x31c
   12354:	str	r1, [r5, #920]	; 0x398
   12358:	str	r2, [r5, #952]	; 0x3b8
   1235c:	b	121b4 <sf_gen_atmtype_abbrev+0x8c>
   12360:	ldr	r0, [pc, #124]	; 123e4 <sf_gen_atmtype_abbrev+0x2bc>
   12364:	add	r0, pc, r0
   12368:	bl	2130 <sf_bpf_error>
   1236c:	ldr	r0, [pc, #116]	; 123e8 <sf_gen_atmtype_abbrev+0x2c0>
   12370:	add	r0, pc, r0
   12374:	bl	2130 <sf_bpf_error>
   12378:	ldr	r0, [pc, #108]	; 123ec <sf_gen_atmtype_abbrev+0x2c4>
   1237c:	add	r0, pc, r0
   12380:	bl	2130 <sf_bpf_error>
   12384:	ldr	r0, [pc, #100]	; 123f0 <sf_gen_atmtype_abbrev+0x2c8>
   12388:	add	r0, pc, r0
   1238c:	bl	2130 <sf_bpf_error>
   12390:	ldr	r0, [pc, #92]	; 123f4 <sf_gen_atmtype_abbrev+0x2cc>
   12394:	add	r0, pc, r0
   12398:	bl	2130 <sf_bpf_error>
   1239c:	ldr	r0, [pc, #84]	; 123f8 <sf_gen_atmtype_abbrev+0x2d0>
   123a0:	add	r0, pc, r0
   123a4:	bl	2130 <sf_bpf_error>
   123a8:	ldr	r0, [pc, #76]	; 123fc <sf_gen_atmtype_abbrev+0x2d4>
   123ac:	add	r0, pc, r0
   123b0:	bl	2130 <sf_bpf_error>
   123b4:	ldr	r0, [pc, #68]	; 12400 <sf_gen_atmtype_abbrev+0x2d8>
   123b8:	add	r0, pc, r0
   123bc:	bl	2130 <sf_bpf_error>
   123c0:	bl	ebc <abort@plt>
   123c4:	.word	0x0002c1ec
   123c8:	.word	0x0002c190
   123cc:	.word	0x0002c14c
   123d0:	.word	0x0002c120
   123d4:	.word	0x0002c0f4
   123d8:	.word	0x0002c0c8
   123dc:	.word	0x0002c09c
   123e0:	.word	0x0002c070
   123e4:	.word	0x0000f2f4
   123e8:	.word	0x0000f2c4
   123ec:	.word	0x0000f294
   123f0:	.word	0x0000f268
   123f4:	.word	0x0000f238
   123f8:	.word	0x0000f208
   123fc:	.word	0x0000f1dc
   12400:	.word	0x0000f1ac

00012404 <sf_gen_mtp2type_abbrev>:
   12404:	cmp	r0, #23
   12408:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1240c:	strd	r6, [sp, #8]
   12410:	str	r8, [sp, #16]
   12414:	str	lr, [sp, #20]
   12418:	beq	124cc <sf_gen_mtp2type_abbrev+0xc8>
   1241c:	cmp	r0, #24
   12420:	bne	124c0 <sf_gen_mtp2type_abbrev+0xbc>
   12424:	ldr	r3, [pc, #584]	; 12674 <sf_gen_mtp2type_abbrev+0x270>
   12428:	add	r3, pc, r3
   1242c:	ldr	r2, [r3, #876]	; 0x36c
   12430:	sub	r1, r2, #139	; 0x8b
   12434:	cmp	r2, #197	; 0xc5
   12438:	cmpne	r1, #1
   1243c:	bhi	12650 <sf_gen_mtp2type_abbrev+0x24c>
   12440:	ldr	r4, [r3, #932]	; 0x3a4
   12444:	bl	22d0 <newchunk.constprop.25>
   12448:	mov	r3, #48	; 0x30
   1244c:	mov	r5, r0
   12450:	str	r3, [r0]
   12454:	str	r4, [r0, #12]
   12458:	bl	22d0 <newchunk.constprop.25>
   1245c:	mov	r1, #84	; 0x54
   12460:	mov	r3, #63	; 0x3f
   12464:	mov	r2, r5
   12468:	str	r1, [r0]
   1246c:	str	r3, [r0, #12]
   12470:	b	12478 <sf_gen_mtp2type_abbrev+0x74>
   12474:	mov	r2, r3
   12478:	ldr	r3, [r2, #16]
   1247c:	cmp	r3, #0
   12480:	bne	12474 <sf_gen_mtp2type_abbrev+0x70>
   12484:	str	r0, [r2, #16]
   12488:	bl	24d8 <newchunk.constprop.26>
   1248c:	mov	r4, r0
   12490:	mov	r2, #37	; 0x25
   12494:	str	r5, [r0, #4]
   12498:	mov	r3, #2
   1249c:	str	r2, [r0, #8]
   124a0:	str	r3, [r0, #20]
   124a4:	str	r0, [r4, #96]	; 0x60
   124a8:	mov	r0, r4
   124ac:	ldrd	r4, [sp]
   124b0:	ldrd	r6, [sp, #8]
   124b4:	ldr	r8, [sp, #16]
   124b8:	add	sp, sp, #20
   124bc:	pop	{pc}		; (ldr pc, [sp], #4)
   124c0:	cmp	r0, #22
   124c4:	beq	125cc <sf_gen_mtp2type_abbrev+0x1c8>
   124c8:	bl	ebc <abort@plt>
   124cc:	ldr	r3, [pc, #420]	; 12678 <sf_gen_mtp2type_abbrev+0x274>
   124d0:	add	r3, pc, r3
   124d4:	ldr	r2, [r3, #876]	; 0x36c
   124d8:	sub	r1, r2, #139	; 0x8b
   124dc:	cmp	r2, #197	; 0xc5
   124e0:	cmpne	r1, #1
   124e4:	bhi	1265c <sf_gen_mtp2type_abbrev+0x258>
   124e8:	ldr	r7, [r3, #932]	; 0x3a4
   124ec:	bl	22d0 <newchunk.constprop.25>
   124f0:	mov	r3, #48	; 0x30
   124f4:	mov	r5, r0
   124f8:	str	r3, [r0]
   124fc:	str	r7, [r0, #12]
   12500:	bl	22d0 <newchunk.constprop.25>
   12504:	mov	r1, #84	; 0x54
   12508:	mov	r3, #63	; 0x3f
   1250c:	mov	r2, r5
   12510:	str	r1, [r0]
   12514:	str	r3, [r0, #12]
   12518:	b	12520 <sf_gen_mtp2type_abbrev+0x11c>
   1251c:	mov	r2, r3
   12520:	ldr	r3, [r2, #16]
   12524:	cmp	r3, #0
   12528:	bne	1251c <sf_gen_mtp2type_abbrev+0x118>
   1252c:	str	r0, [r2, #16]
   12530:	bl	24d8 <newchunk.constprop.26>
   12534:	ldr	r3, [r0, #44]	; 0x2c
   12538:	mov	r1, #37	; 0x25
   1253c:	mov	r2, #2
   12540:	mov	r4, r0
   12544:	str	r5, [r0, #4]
   12548:	str	r1, [r0, #8]
   1254c:	str	r2, [r0, #20]
   12550:	clz	r3, r3
   12554:	lsr	r3, r3, #5
   12558:	str	r3, [r0, #44]	; 0x2c
   1255c:	str	r0, [r4, #96]	; 0x60
   12560:	bl	22d0 <newchunk.constprop.25>
   12564:	mov	r3, #48	; 0x30
   12568:	mov	r6, r0
   1256c:	str	r3, [r0]
   12570:	str	r7, [r0, #12]
   12574:	bl	22d0 <newchunk.constprop.25>
   12578:	mov	r1, #84	; 0x54
   1257c:	mov	r2, #63	; 0x3f
   12580:	mov	r3, r6
   12584:	str	r1, [r0]
   12588:	str	r2, [r0, #12]
   1258c:	b	12594 <sf_gen_mtp2type_abbrev+0x190>
   12590:	mov	r3, r5
   12594:	ldr	r5, [r3, #16]
   12598:	cmp	r5, #0
   1259c:	bne	12590 <sf_gen_mtp2type_abbrev+0x18c>
   125a0:	str	r0, [r3, #16]
   125a4:	bl	24d8 <newchunk.constprop.26>
   125a8:	mov	r3, r0
   125ac:	mov	r2, #37	; 0x25
   125b0:	str	r6, [r0, #4]
   125b4:	mov	r1, r4
   125b8:	str	r2, [r0, #8]
   125bc:	str	r5, [r0, #20]
   125c0:	str	r0, [r3, #96]	; 0x60
   125c4:	bl	7884 <sf_gen_and>
   125c8:	b	124a8 <sf_gen_mtp2type_abbrev+0xa4>
   125cc:	ldr	r3, [pc, #168]	; 1267c <sf_gen_mtp2type_abbrev+0x278>
   125d0:	add	r3, pc, r3
   125d4:	ldr	r2, [r3, #876]	; 0x36c
   125d8:	sub	r1, r2, #139	; 0x8b
   125dc:	cmp	r2, #197	; 0xc5
   125e0:	cmpne	r1, #1
   125e4:	bhi	12668 <sf_gen_mtp2type_abbrev+0x264>
   125e8:	ldr	r4, [r3, #932]	; 0x3a4
   125ec:	bl	22d0 <newchunk.constprop.25>
   125f0:	mov	r3, #48	; 0x30
   125f4:	mov	r6, r0
   125f8:	str	r3, [r0]
   125fc:	str	r4, [r0, #12]
   12600:	bl	22d0 <newchunk.constprop.25>
   12604:	mov	r1, #84	; 0x54
   12608:	mov	r2, #63	; 0x3f
   1260c:	mov	r3, r6
   12610:	str	r1, [r0]
   12614:	str	r2, [r0, #12]
   12618:	b	12620 <sf_gen_mtp2type_abbrev+0x21c>
   1261c:	mov	r3, r5
   12620:	ldr	r5, [r3, #16]
   12624:	cmp	r5, #0
   12628:	bne	1261c <sf_gen_mtp2type_abbrev+0x218>
   1262c:	str	r0, [r3, #16]
   12630:	bl	24d8 <newchunk.constprop.26>
   12634:	mov	r4, r0
   12638:	mov	r3, #21
   1263c:	str	r6, [r0, #4]
   12640:	str	r3, [r0, #8]
   12644:	str	r5, [r0, #20]
   12648:	str	r0, [r4, #96]	; 0x60
   1264c:	b	124a8 <sf_gen_mtp2type_abbrev+0xa4>
   12650:	ldr	r0, [pc, #40]	; 12680 <sf_gen_mtp2type_abbrev+0x27c>
   12654:	add	r0, pc, r0
   12658:	bl	2130 <sf_bpf_error>
   1265c:	ldr	r0, [pc, #32]	; 12684 <sf_gen_mtp2type_abbrev+0x280>
   12660:	add	r0, pc, r0
   12664:	bl	2130 <sf_bpf_error>
   12668:	ldr	r0, [pc, #24]	; 12688 <sf_gen_mtp2type_abbrev+0x284>
   1266c:	add	r0, pc, r0
   12670:	bl	2130 <sf_bpf_error>
   12674:	.word	0x0002bf38
   12678:	.word	0x0002be90
   1267c:	.word	0x0002bd90
   12680:	.word	0x0000f064
   12684:	.word	0x0000f038
   12688:	.word	0x0000f00c

0001268c <sf_gen_mtp3field_code>:
   1268c:	sub	r0, r0, #1
   12690:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12694:	mov	r4, r1
   12698:	mov	r5, r2
   1269c:	strd	r6, [sp, #8]
   126a0:	mov	r6, r3
   126a4:	str	r8, [sp, #16]
   126a8:	str	lr, [sp, #20]
   126ac:	cmp	r0, #3
   126b0:	addls	pc, pc, r0, lsl #2
   126b4:	b	128fc <sf_gen_mtp3field_code+0x270>
   126b8:	b	12868 <sf_gen_mtp3field_code+0x1dc>
   126bc:	b	127ec <sf_gen_mtp3field_code+0x160>
   126c0:	b	1277c <sf_gen_mtp3field_code+0xf0>
   126c4:	b	126c8 <sf_gen_mtp3field_code+0x3c>
   126c8:	ldr	r3, [pc, #560]	; 12900 <sf_gen_mtp3field_code+0x274>
   126cc:	add	r3, pc, r3
   126d0:	ldr	r8, [r3, #948]	; 0x3b4
   126d4:	cmn	r8, #1
   126d8:	beq	1289c <sf_gen_mtp3field_code+0x210>
   126dc:	cmp	r1, #15
   126e0:	bhi	128a8 <sf_gen_mtp3field_code+0x21c>
   126e4:	bl	22d0 <newchunk.constprop.25>
   126e8:	mov	r3, #48	; 0x30
   126ec:	mov	r7, r0
   126f0:	lsl	r4, r4, #4
   126f4:	str	r3, [r0]
   126f8:	str	r8, [r0, #12]
   126fc:	bl	22d0 <newchunk.constprop.25>
   12700:	mov	r2, #84	; 0x54
   12704:	mov	r3, #240	; 0xf0
   12708:	str	r2, [r0]
   1270c:	mov	r2, r7
   12710:	str	r3, [r0, #12]
   12714:	b	1271c <sf_gen_mtp3field_code+0x90>
   12718:	mov	r2, r3
   1271c:	ldr	r3, [r2, #16]
   12720:	cmp	r3, #0
   12724:	bne	12718 <sf_gen_mtp3field_code+0x8c>
   12728:	str	r0, [r2, #16]
   1272c:	bl	24d8 <newchunk.constprop.26>
   12730:	orr	r3, r5, #5
   12734:	cmp	r6, #0
   12738:	str	r7, [r0, #4]
   1273c:	str	r3, [r0, #8]
   12740:	str	r4, [r0, #20]
   12744:	str	r0, [r0, #96]	; 0x60
   12748:	beq	12768 <sf_gen_mtp3field_code+0xdc>
   1274c:	bic	r5, r5, #16
   12750:	cmp	r5, #32
   12754:	bne	12768 <sf_gen_mtp3field_code+0xdc>
   12758:	ldr	r3, [r0, #44]	; 0x2c
   1275c:	clz	r3, r3
   12760:	lsr	r3, r3, #5
   12764:	str	r3, [r0, #44]	; 0x2c
   12768:	ldrd	r4, [sp]
   1276c:	ldrd	r6, [sp, #8]
   12770:	ldr	r8, [sp, #16]
   12774:	add	sp, sp, #20
   12778:	pop	{pc}		; (ldr pc, [sp], #4)
   1277c:	ldr	r3, [pc, #384]	; 12904 <sf_gen_mtp3field_code+0x278>
   12780:	add	r3, pc, r3
   12784:	ldr	r8, [r3, #944]	; 0x3b0
   12788:	cmn	r8, #1
   1278c:	beq	128b4 <sf_gen_mtp3field_code+0x228>
   12790:	cmp	r1, #16384	; 0x4000
   12794:	bcs	128c0 <sf_gen_mtp3field_code+0x234>
   12798:	lsl	r1, r1, #8
   1279c:	and	r1, r1, #4128768	; 0x3f0000
   127a0:	add	r4, r1, r4, lsl #24
   127a4:	bl	22d0 <newchunk.constprop.25>
   127a8:	mov	r3, #32
   127ac:	mov	r7, r0
   127b0:	str	r3, [r0]
   127b4:	str	r8, [r0, #12]
   127b8:	bl	22d0 <newchunk.constprop.25>
   127bc:	mov	r2, #84	; 0x54
   127c0:	mov	r3, #0
   127c4:	movt	r3, #65343	; 0xff3f
   127c8:	str	r2, [r0]
   127cc:	mov	r2, r7
   127d0:	str	r3, [r0, #12]
   127d4:	b	127dc <sf_gen_mtp3field_code+0x150>
   127d8:	mov	r2, r3
   127dc:	ldr	r3, [r2, #16]
   127e0:	cmp	r3, #0
   127e4:	bne	127d8 <sf_gen_mtp3field_code+0x14c>
   127e8:	b	12728 <sf_gen_mtp3field_code+0x9c>
   127ec:	ldr	r3, [pc, #276]	; 12908 <sf_gen_mtp3field_code+0x27c>
   127f0:	add	r3, pc, r3
   127f4:	ldr	r8, [r3, #940]	; 0x3ac
   127f8:	cmn	r8, #1
   127fc:	beq	128cc <sf_gen_mtp3field_code+0x240>
   12800:	cmp	r1, #16384	; 0x4000
   12804:	bcs	128d8 <sf_gen_mtp3field_code+0x24c>
   12808:	lsl	r1, r1, #6
   1280c:	lsl	r3, r4, #22
   12810:	and	r1, r1, #65280	; 0xff00
   12814:	orr	r4, r1, r4, lsr #10
   12818:	and	r3, r3, #12582912	; 0xc00000
   1281c:	add	r4, r4, r3
   12820:	bl	22d0 <newchunk.constprop.25>
   12824:	mov	r3, #32
   12828:	mov	r7, r0
   1282c:	str	r3, [r0]
   12830:	str	r8, [r0, #12]
   12834:	bl	22d0 <newchunk.constprop.25>
   12838:	mov	r2, #84	; 0x54
   1283c:	movw	r3, #65295	; 0xff0f
   12840:	movt	r3, #192	; 0xc0
   12844:	str	r2, [r0]
   12848:	mov	r2, r7
   1284c:	str	r3, [r0, #12]
   12850:	b	12858 <sf_gen_mtp3field_code+0x1cc>
   12854:	mov	r2, r3
   12858:	ldr	r3, [r2, #16]
   1285c:	cmp	r3, #0
   12860:	bne	12854 <sf_gen_mtp3field_code+0x1c8>
   12864:	b	12728 <sf_gen_mtp3field_code+0x9c>
   12868:	ldr	r3, [pc, #156]	; 1290c <sf_gen_mtp3field_code+0x280>
   1286c:	add	r3, pc, r3
   12870:	ldr	r8, [r3, #936]	; 0x3a8
   12874:	cmn	r8, #1
   12878:	beq	128e4 <sf_gen_mtp3field_code+0x258>
   1287c:	cmp	r1, #255	; 0xff
   12880:	bhi	128f0 <sf_gen_mtp3field_code+0x264>
   12884:	bl	22d0 <newchunk.constprop.25>
   12888:	mov	r3, #48	; 0x30
   1288c:	mov	r7, r0
   12890:	str	r3, [r0]
   12894:	str	r8, [r0, #12]
   12898:	b	1272c <sf_gen_mtp3field_code+0xa0>
   1289c:	ldr	r0, [pc, #108]	; 12910 <sf_gen_mtp3field_code+0x284>
   128a0:	add	r0, pc, r0
   128a4:	bl	2130 <sf_bpf_error>
   128a8:	ldr	r0, [pc, #100]	; 12914 <sf_gen_mtp3field_code+0x288>
   128ac:	add	r0, pc, r0
   128b0:	bl	2130 <sf_bpf_error>
   128b4:	ldr	r0, [pc, #92]	; 12918 <sf_gen_mtp3field_code+0x28c>
   128b8:	add	r0, pc, r0
   128bc:	bl	2130 <sf_bpf_error>
   128c0:	ldr	r0, [pc, #84]	; 1291c <sf_gen_mtp3field_code+0x290>
   128c4:	add	r0, pc, r0
   128c8:	bl	2130 <sf_bpf_error>
   128cc:	ldr	r0, [pc, #76]	; 12920 <sf_gen_mtp3field_code+0x294>
   128d0:	add	r0, pc, r0
   128d4:	bl	2130 <sf_bpf_error>
   128d8:	ldr	r0, [pc, #68]	; 12924 <sf_gen_mtp3field_code+0x298>
   128dc:	add	r0, pc, r0
   128e0:	bl	2130 <sf_bpf_error>
   128e4:	ldr	r0, [pc, #60]	; 12928 <sf_gen_mtp3field_code+0x29c>
   128e8:	add	r0, pc, r0
   128ec:	bl	2130 <sf_bpf_error>
   128f0:	ldr	r0, [pc, #52]	; 1292c <sf_gen_mtp3field_code+0x2a0>
   128f4:	add	r0, pc, r0
   128f8:	bl	2130 <sf_bpf_error>
   128fc:	bl	ebc <abort@plt>
   12900:	.word	0x0002bc94
   12904:	.word	0x0002bbe0
   12908:	.word	0x0002bb70
   1290c:	.word	0x0002baf4
   12910:	.word	0x0000ef04
   12914:	.word	0x0000ef14
   12918:	.word	0x0000eea8
   1291c:	.word	0x0000eeb8
   12920:	.word	0x0000ee4c
   12924:	.word	0x0000ee5c
   12928:	.word	0x0000edf0
   1292c:	.word	0x0000ee00

00012930 <sf_gen_atmmulti_abbrev>:
   12930:	cmp	r0, #29
   12934:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12938:	strd	r6, [sp, #8]
   1293c:	str	r8, [sp, #16]
   12940:	str	lr, [sp, #20]
   12944:	beq	12bc8 <sf_gen_atmmulti_abbrev+0x298>
   12948:	ble	129fc <sf_gen_atmmulti_abbrev+0xcc>
   1294c:	cmp	r0, #70	; 0x46
   12950:	bne	12ad0 <sf_gen_atmmulti_abbrev+0x1a0>
   12954:	ldr	r3, [pc, #656]	; 12bec <sf_gen_atmmulti_abbrev+0x2bc>
   12958:	add	r3, pc, r3
   1295c:	ldr	r3, [r3, #884]	; 0x374
   12960:	cmp	r3, #0
   12964:	beq	12bbc <sf_gen_atmmulti_abbrev+0x28c>
   12968:	mov	r1, #5
   1296c:	mov	r0, #54	; 0x36
   12970:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12974:	mov	r5, r0
   12978:	mov	r1, #2
   1297c:	mov	r0, #54	; 0x36
   12980:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12984:	mov	r4, r0
   12988:	mov	r1, r0
   1298c:	mov	r0, r5
   12990:	bl	823c <sf_gen_or>
   12994:	mov	r1, #7
   12998:	mov	r0, #54	; 0x36
   1299c:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   129a0:	mov	r1, r4
   129a4:	bl	823c <sf_gen_or>
   129a8:	mov	r1, #15
   129ac:	mov	r0, #54	; 0x36
   129b0:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   129b4:	mov	r1, r4
   129b8:	bl	823c <sf_gen_or>
   129bc:	mov	r1, #77	; 0x4d
   129c0:	mov	r0, #54	; 0x36
   129c4:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   129c8:	mov	r1, r4
   129cc:	bl	823c <sf_gen_or>
   129d0:	mov	r1, #90	; 0x5a
   129d4:	mov	r0, #54	; 0x36
   129d8:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   129dc:	mov	r1, r4
   129e0:	bl	823c <sf_gen_or>
   129e4:	mov	r1, #0
   129e8:	mov	r0, #51	; 0x33
   129ec:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   129f0:	mov	r6, r0
   129f4:	mov	r1, #5
   129f8:	b	12b68 <sf_gen_atmmulti_abbrev+0x238>
   129fc:	cmp	r0, #28
   12a00:	bne	12be8 <sf_gen_atmmulti_abbrev+0x2b8>
   12a04:	ldr	r3, [pc, #484]	; 12bf0 <sf_gen_atmmulti_abbrev+0x2c0>
   12a08:	add	r3, pc, r3
   12a0c:	ldr	r3, [r3, #884]	; 0x374
   12a10:	cmp	r3, #0
   12a14:	beq	12ba4 <sf_gen_atmmulti_abbrev+0x274>
   12a18:	ldr	r7, [pc, #468]	; 12bf4 <sf_gen_atmmulti_abbrev+0x2c4>
   12a1c:	add	r7, pc, r7
   12a20:	ldr	r4, [r7, #892]	; 0x37c
   12a24:	cmn	r4, #1
   12a28:	beq	12be8 <sf_gen_atmmulti_abbrev+0x2b8>
   12a2c:	mov	r1, #8
   12a30:	mov	r0, r4
   12a34:	bl	4e84 <gen_load_llrel>
   12a38:	mov	r8, r0
   12a3c:	mov	r6, #21
   12a40:	bl	24d8 <newchunk.constprop.26>
   12a44:	mov	r5, r0
   12a48:	mov	r3, #3
   12a4c:	mov	r1, #8
   12a50:	mov	r0, r4
   12a54:	str	r8, [r5, #4]
   12a58:	str	r6, [r5, #8]
   12a5c:	str	r3, [r5, #20]
   12a60:	str	r5, [r5, #96]	; 0x60
   12a64:	bl	4e84 <gen_load_llrel>
   12a68:	mov	r8, r0
   12a6c:	bl	24d8 <newchunk.constprop.26>
   12a70:	mov	r4, r0
   12a74:	mov	r3, #4
   12a78:	mov	r0, r5
   12a7c:	mov	r1, r4
   12a80:	str	r8, [r4, #4]
   12a84:	str	r6, [r4, #8]
   12a88:	str	r3, [r4, #20]
   12a8c:	str	r4, [r4, #96]	; 0x60
   12a90:	bl	823c <sf_gen_or>
   12a94:	ldr	r0, [r7, #888]	; 0x378
   12a98:	cmn	r0, #1
   12a9c:	beq	12be8 <sf_gen_atmmulti_abbrev+0x2b8>
   12aa0:	mov	r1, #16
   12aa4:	bl	4e84 <gen_load_llrel>
   12aa8:	mov	r5, r0
   12aac:	bl	24d8 <newchunk.constprop.26>
   12ab0:	mov	r3, r0
   12ab4:	mov	r2, #0
   12ab8:	stmib	r0, {r5, r6}
   12abc:	mov	r1, r4
   12ac0:	str	r2, [r0, #20]
   12ac4:	str	r0, [r3, #96]	; 0x60
   12ac8:	bl	7884 <sf_gen_and>
   12acc:	b	12b8c <sf_gen_atmmulti_abbrev+0x25c>
   12ad0:	cmp	r0, #71	; 0x47
   12ad4:	bne	12be8 <sf_gen_atmmulti_abbrev+0x2b8>
   12ad8:	ldr	r3, [pc, #280]	; 12bf8 <sf_gen_atmmulti_abbrev+0x2c8>
   12adc:	add	r3, pc, r3
   12ae0:	ldr	r3, [r3, #884]	; 0x374
   12ae4:	cmp	r3, #0
   12ae8:	beq	12bb0 <sf_gen_atmmulti_abbrev+0x280>
   12aec:	mov	r1, #5
   12af0:	mov	r0, #54	; 0x36
   12af4:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12af8:	mov	r5, r0
   12afc:	mov	r1, #2
   12b00:	mov	r0, #54	; 0x36
   12b04:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12b08:	mov	r4, r0
   12b0c:	mov	r1, r0
   12b10:	mov	r0, r5
   12b14:	bl	823c <sf_gen_or>
   12b18:	mov	r1, #7
   12b1c:	mov	r0, #54	; 0x36
   12b20:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12b24:	mov	r1, r4
   12b28:	bl	823c <sf_gen_or>
   12b2c:	mov	r1, #77	; 0x4d
   12b30:	mov	r0, #54	; 0x36
   12b34:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12b38:	mov	r1, r4
   12b3c:	bl	823c <sf_gen_or>
   12b40:	mov	r1, #90	; 0x5a
   12b44:	mov	r0, #54	; 0x36
   12b48:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12b4c:	mov	r1, r4
   12b50:	bl	823c <sf_gen_or>
   12b54:	mov	r1, #0
   12b58:	mov	r0, #51	; 0x33
   12b5c:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12b60:	mov	r6, r0
   12b64:	mov	r1, #1
   12b68:	mov	r0, #52	; 0x34
   12b6c:	bl	5fa8 <sf_gen_atmfield_code.constprop.11>
   12b70:	mov	r1, r0
   12b74:	mov	r5, r0
   12b78:	mov	r0, r6
   12b7c:	bl	7884 <sf_gen_and>
   12b80:	mov	r1, r4
   12b84:	mov	r0, r5
   12b88:	bl	7884 <sf_gen_and>
   12b8c:	mov	r0, r4
   12b90:	ldrd	r4, [sp]
   12b94:	ldrd	r6, [sp, #8]
   12b98:	ldr	r8, [sp, #16]
   12b9c:	add	sp, sp, #20
   12ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba4:	ldr	r0, [pc, #80]	; 12bfc <sf_gen_atmmulti_abbrev+0x2cc>
   12ba8:	add	r0, pc, r0
   12bac:	bl	2130 <sf_bpf_error>
   12bb0:	ldr	r0, [pc, #72]	; 12c00 <sf_gen_atmmulti_abbrev+0x2d0>
   12bb4:	add	r0, pc, r0
   12bb8:	bl	2130 <sf_bpf_error>
   12bbc:	ldr	r0, [pc, #64]	; 12c04 <sf_gen_atmmulti_abbrev+0x2d4>
   12bc0:	add	r0, pc, r0
   12bc4:	bl	2130 <sf_bpf_error>
   12bc8:	ldr	r3, [pc, #56]	; 12c08 <sf_gen_atmmulti_abbrev+0x2d8>
   12bcc:	add	r3, pc, r3
   12bd0:	ldr	r3, [r3, #884]	; 0x374
   12bd4:	cmp	r3, #0
   12bd8:	bne	12a18 <sf_gen_atmmulti_abbrev+0xe8>
   12bdc:	ldr	r0, [pc, #40]	; 12c0c <sf_gen_atmmulti_abbrev+0x2dc>
   12be0:	add	r0, pc, r0
   12be4:	bl	2130 <sf_bpf_error>
   12be8:	bl	ebc <abort@plt>
   12bec:	.word	0x0002ba08
   12bf0:	.word	0x0002b958
   12bf4:	.word	0x0002b944
   12bf8:	.word	0x0002b884
   12bfc:	.word	0x0000ec40
   12c00:	.word	0x0000eca0
   12c04:	.word	0x0000ec6c
   12c08:	.word	0x0002b794
   12c0c:	.word	0x0000ec28

00012c10 <pcap_nametoaddr>:
   12c10:	str	r4, [sp, #-8]!
   12c14:	str	lr, [sp, #4]
   12c18:	bl	ea4 <gethostbyname@plt>
   12c1c:	cmp	r0, #0
   12c20:	beq	12c50 <pcap_nametoaddr+0x40>
   12c24:	ldr	r1, [r0, #16]
   12c28:	ldr	r3, [r1]
   12c2c:	cmp	r3, #0
   12c30:	beq	12c5c <pcap_nametoaddr+0x4c>
   12c34:	ldr	r2, [r3]
   12c38:	rev	r2, r2
   12c3c:	str	r2, [r3]
   12c40:	ldr	r3, [r1, #4]!
   12c44:	cmp	r3, #0
   12c48:	bne	12c34 <pcap_nametoaddr+0x24>
   12c4c:	ldr	r0, [r0, #16]
   12c50:	ldr	r4, [sp]
   12c54:	add	sp, sp, #4
   12c58:	pop	{pc}		; (ldr pc, [sp], #4)
   12c5c:	mov	r0, r1
   12c60:	b	12c50 <pcap_nametoaddr+0x40>

00012c64 <pcap_nametoaddrinfo>:
   12c64:	strd	r4, [sp, #-20]!	; 0xffffffec
   12c68:	mov	r4, #0
   12c6c:	mov	r5, #0
   12c70:	strd	r6, [sp, #8]
   12c74:	mov	r6, #1
   12c78:	mov	r7, #6
   12c7c:	str	lr, [sp, #16]
   12c80:	sub	sp, sp, #44	; 0x2c
   12c84:	mov	r1, #0
   12c88:	add	ip, sp, #8
   12c8c:	add	r3, sp, #4
   12c90:	mov	r2, ip
   12c94:	strd	r4, [sp, #8]
   12c98:	strd	r6, [sp, #16]
   12c9c:	strd	r4, [sp, #24]
   12ca0:	strd	r4, [sp, #32]
   12ca4:	bl	e8c <getaddrinfo@plt>
   12ca8:	cmp	r0, #0
   12cac:	ldreq	r0, [sp, #4]
   12cb0:	movne	r0, #0
   12cb4:	add	sp, sp, #44	; 0x2c
   12cb8:	ldrd	r4, [sp]
   12cbc:	ldrd	r6, [sp, #8]
   12cc0:	add	sp, sp, #16
   12cc4:	pop	{pc}		; (ldr pc, [sp], #4)

00012cc8 <pcap_nametonetaddr>:
   12cc8:	str	r4, [sp, #-8]!
   12ccc:	str	lr, [sp, #4]
   12cd0:	bl	d54 <getnetbyname@plt>
   12cd4:	cmp	r0, #0
   12cd8:	ldr	r4, [sp]
   12cdc:	add	sp, sp, #4
   12ce0:	ldrne	r0, [r0, #12]
   12ce4:	pop	{pc}		; (ldr pc, [sp], #4)

00012ce8 <pcap_nametoport>:
   12ce8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12cec:	mov	r5, r1
   12cf0:	ldr	r1, [pc, #216]	; 12dd0 <pcap_nametoport+0xe8>
   12cf4:	strd	r6, [sp, #8]
   12cf8:	mov	r6, r2
   12cfc:	mov	r7, r0
   12d00:	str	r8, [sp, #16]
   12d04:	str	lr, [sp, #20]
   12d08:	add	r1, pc, r1
   12d0c:	bl	e20 <getservbyname@plt>
   12d10:	cmp	r0, #0
   12d14:	beq	12d88 <pcap_nametoport+0xa0>
   12d18:	ldr	r1, [pc, #180]	; 12dd4 <pcap_nametoport+0xec>
   12d1c:	ldr	r4, [r0, #8]
   12d20:	mov	r0, r7
   12d24:	add	r1, pc, r1
   12d28:	bl	e20 <getservbyname@plt>
   12d2c:	rev16	r4, r4
   12d30:	cmp	r0, #0
   12d34:	uxth	r4, r4
   12d38:	bne	12d60 <pcap_nametoport+0x78>
   12d3c:	mov	r3, #6
   12d40:	mov	r0, #1
   12d44:	str	r4, [r5]
   12d48:	str	r3, [r6]
   12d4c:	ldrd	r4, [sp]
   12d50:	ldrd	r6, [sp, #8]
   12d54:	ldr	r8, [sp, #16]
   12d58:	add	sp, sp, #20
   12d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d60:	ldr	r3, [r0, #8]
   12d64:	str	r4, [r5]
   12d68:	rev16	r3, r3
   12d6c:	uxth	r3, r3
   12d70:	cmp	r4, r3
   12d74:	beq	12dc0 <pcap_nametoport+0xd8>
   12d78:	mov	r3, #6
   12d7c:	mov	r0, #1
   12d80:	str	r3, [r6]
   12d84:	b	12d4c <pcap_nametoport+0x64>
   12d88:	ldr	r1, [pc, #72]	; 12dd8 <pcap_nametoport+0xf0>
   12d8c:	mov	r0, r7
   12d90:	add	r1, pc, r1
   12d94:	bl	e20 <getservbyname@plt>
   12d98:	cmp	r0, #0
   12d9c:	beq	12d4c <pcap_nametoport+0x64>
   12da0:	ldr	r3, [r0, #8]
   12da4:	mov	r2, #17
   12da8:	mov	r0, #1
   12dac:	rev16	r3, r3
   12db0:	uxth	r3, r3
   12db4:	str	r3, [r5]
   12db8:	str	r2, [r6]
   12dbc:	b	12d4c <pcap_nametoport+0x64>
   12dc0:	mvn	r3, #0
   12dc4:	mov	r0, #1
   12dc8:	str	r3, [r6]
   12dcc:	b	12d4c <pcap_nametoport+0x64>
   12dd0:	.word	0x0000eb74
   12dd4:	.word	0x0000eb5c
   12dd8:	.word	0x0000eaf0

00012ddc <pcap_nametoportrange>:
   12ddc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12de0:	mov	r5, r3
   12de4:	mov	r4, r0
   12de8:	strd	r6, [sp, #8]
   12dec:	mov	r6, r1
   12df0:	mov	r7, r2
   12df4:	ldr	r1, [pc, #568]	; 13034 <pcap_nametoportrange+0x258>
   12df8:	strd	r8, [sp, #16]
   12dfc:	str	sl, [sp, #24]
   12e00:	str	lr, [sp, #28]
   12e04:	sub	sp, sp, #8
   12e08:	mov	r2, sp
   12e0c:	add	r3, sp, #4
   12e10:	add	r1, pc, r1
   12e14:	bl	e5c <sscanf@plt>
   12e18:	cmp	r0, #2
   12e1c:	bne	12e54 <pcap_nametoportrange+0x78>
   12e20:	ldm	sp, {r1, r2}
   12e24:	mvn	r3, #0
   12e28:	mov	r0, #1
   12e2c:	str	r1, [r6]
   12e30:	str	r2, [r7]
   12e34:	str	r3, [r5]
   12e38:	add	sp, sp, #8
   12e3c:	ldrd	r4, [sp]
   12e40:	ldrd	r6, [sp, #8]
   12e44:	ldrd	r8, [sp, #16]
   12e48:	ldr	sl, [sp, #24]
   12e4c:	add	sp, sp, #28
   12e50:	pop	{pc}		; (ldr pc, [sp], #4)
   12e54:	mov	r0, r4
   12e58:	bl	d78 <strdup@plt>
   12e5c:	subs	r9, r0, #0
   12e60:	moveq	r0, r9
   12e64:	beq	12e38 <pcap_nametoportrange+0x5c>
   12e68:	mov	r1, #45	; 0x2d
   12e6c:	bl	dfc <strchr@plt>
   12e70:	subs	r8, r0, #0
   12e74:	beq	12fe0 <pcap_nametoportrange+0x204>
   12e78:	ldr	r1, [pc, #440]	; 13038 <pcap_nametoportrange+0x25c>
   12e7c:	mov	r3, #0
   12e80:	mov	r0, r9
   12e84:	strb	r3, [r8]
   12e88:	add	r1, pc, r1
   12e8c:	bl	e20 <getservbyname@plt>
   12e90:	cmp	r0, #0
   12e94:	beq	12f80 <pcap_nametoportrange+0x1a4>
   12e98:	ldr	r1, [pc, #412]	; 1303c <pcap_nametoportrange+0x260>
   12e9c:	ldr	r4, [r0, #8]
   12ea0:	mov	r0, r9
   12ea4:	add	r1, pc, r1
   12ea8:	bl	e20 <getservbyname@plt>
   12eac:	rev16	r4, r4
   12eb0:	cmp	r0, #0
   12eb4:	uxth	r4, r4
   12eb8:	bne	12f58 <pcap_nametoportrange+0x17c>
   12ebc:	mov	r3, #6
   12ec0:	str	r4, [r6]
   12ec4:	mov	sl, r3
   12ec8:	str	r3, [r5]
   12ecc:	ldr	r1, [pc, #364]	; 13040 <pcap_nametoportrange+0x264>
   12ed0:	add	r8, r8, #1
   12ed4:	mov	r0, r8
   12ed8:	add	r1, pc, r1
   12edc:	bl	e20 <getservbyname@plt>
   12ee0:	cmp	r0, #0
   12ee4:	beq	12fb8 <pcap_nametoportrange+0x1dc>
   12ee8:	ldr	r1, [pc, #340]	; 13044 <pcap_nametoportrange+0x268>
   12eec:	ldr	r4, [r0, #8]
   12ef0:	mov	r0, r8
   12ef4:	add	r1, pc, r1
   12ef8:	bl	e20 <getservbyname@plt>
   12efc:	rev16	r4, r4
   12f00:	cmp	r0, #0
   12f04:	uxth	r4, r4
   12f08:	beq	13010 <pcap_nametoportrange+0x234>
   12f0c:	ldr	r3, [r0, #8]
   12f10:	str	r4, [r7]
   12f14:	rev16	r3, r3
   12f18:	uxth	r3, r3
   12f1c:	cmp	r4, r3
   12f20:	mvneq	r2, #0
   12f24:	moveq	r3, r2
   12f28:	streq	r2, [r5]
   12f2c:	beq	12f3c <pcap_nametoportrange+0x160>
   12f30:	mov	r2, #6
   12f34:	mov	r3, r2
   12f38:	str	r2, [r5]
   12f3c:	cmp	r3, sl
   12f40:	moveq	r0, #1
   12f44:	beq	12e38 <pcap_nametoportrange+0x5c>
   12f48:	mvn	r3, #0
   12f4c:	mov	r0, #1
   12f50:	str	r3, [r5]
   12f54:	b	12e38 <pcap_nametoportrange+0x5c>
   12f58:	ldr	r3, [r0, #8]
   12f5c:	str	r4, [r6]
   12f60:	rev16	r3, r3
   12f64:	uxth	r3, r3
   12f68:	cmp	r4, r3
   12f6c:	beq	13024 <pcap_nametoportrange+0x248>
   12f70:	mov	r3, #6
   12f74:	mov	sl, r3
   12f78:	str	r3, [r5]
   12f7c:	b	12ecc <pcap_nametoportrange+0xf0>
   12f80:	ldr	r1, [pc, #192]	; 13048 <pcap_nametoportrange+0x26c>
   12f84:	mov	r0, r9
   12f88:	add	r1, pc, r1
   12f8c:	bl	e20 <getservbyname@plt>
   12f90:	subs	r4, r0, #0
   12f94:	beq	12fd0 <pcap_nametoportrange+0x1f4>
   12f98:	ldr	r3, [r4, #8]
   12f9c:	mov	r2, #17
   12fa0:	mov	sl, r2
   12fa4:	rev16	r3, r3
   12fa8:	uxth	r3, r3
   12fac:	str	r3, [r6]
   12fb0:	str	r2, [r5]
   12fb4:	b	12ecc <pcap_nametoportrange+0xf0>
   12fb8:	ldr	r1, [pc, #140]	; 1304c <pcap_nametoportrange+0x270>
   12fbc:	mov	r0, r8
   12fc0:	add	r1, pc, r1
   12fc4:	bl	e20 <getservbyname@plt>
   12fc8:	subs	r4, r0, #0
   12fcc:	bne	12ff0 <pcap_nametoportrange+0x214>
   12fd0:	mov	r0, r9
   12fd4:	bl	d48 <free@plt>
   12fd8:	mov	r0, r4
   12fdc:	b	12e38 <pcap_nametoportrange+0x5c>
   12fe0:	mov	r0, r9
   12fe4:	bl	d48 <free@plt>
   12fe8:	mov	r0, r8
   12fec:	b	12e38 <pcap_nametoportrange+0x5c>
   12ff0:	ldr	r2, [r4, #8]
   12ff4:	mov	r1, #17
   12ff8:	mov	r3, r1
   12ffc:	rev16	r2, r2
   13000:	uxth	r2, r2
   13004:	str	r2, [r7]
   13008:	str	r1, [r5]
   1300c:	b	12f3c <pcap_nametoportrange+0x160>
   13010:	mov	r2, #6
   13014:	str	r4, [r7]
   13018:	mov	r3, r2
   1301c:	str	r2, [r5]
   13020:	b	12f3c <pcap_nametoportrange+0x160>
   13024:	mvn	r3, #0
   13028:	mov	sl, r3
   1302c:	str	r3, [r5]
   13030:	b	12ecc <pcap_nametoportrange+0xf0>
   13034:	.word	0x0000ea74
   13038:	.word	0x0000e9f4
   1303c:	.word	0x0000e9dc
   13040:	.word	0x0000e9a4
   13044:	.word	0x0000e98c
   13048:	.word	0x0000e8f8
   1304c:	.word	0x0000e8c0

00013050 <pcap_nametoproto>:
   13050:	str	r4, [sp, #-8]!
   13054:	str	lr, [sp, #4]
   13058:	bl	d24 <getprotobyname@plt>
   1305c:	cmp	r0, #0
   13060:	ldr	r4, [sp]
   13064:	add	sp, sp, #4
   13068:	mvneq	r0, #0
   1306c:	ldrne	r0, [r0, #8]
   13070:	pop	{pc}		; (ldr pc, [sp], #4)

00013074 <pcap_nametoeproto>:
   13074:	strd	r4, [sp, #-16]!
   13078:	mov	r5, r0
   1307c:	ldr	r4, [pc, #92]	; 130e0 <pcap_nametoeproto+0x6c>
   13080:	str	r6, [sp, #8]
   13084:	str	lr, [sp, #12]
   13088:	add	r4, pc, r4
   1308c:	ldr	r0, [r4]
   13090:	cmp	r0, #0
   13094:	bne	130a8 <pcap_nametoeproto+0x34>
   13098:	b	130cc <pcap_nametoeproto+0x58>
   1309c:	ldr	r0, [r4, #8]!
   130a0:	cmp	r0, #0
   130a4:	beq	130cc <pcap_nametoeproto+0x58>
   130a8:	mov	r1, r5
   130ac:	bl	cf4 <strcmp@plt>
   130b0:	cmp	r0, #0
   130b4:	bne	1309c <pcap_nametoeproto+0x28>
   130b8:	ldrh	r0, [r4, #4]
   130bc:	ldrd	r4, [sp]
   130c0:	ldr	r6, [sp, #8]
   130c4:	add	sp, sp, #12
   130c8:	pop	{pc}		; (ldr pc, [sp], #4)
   130cc:	ldrd	r4, [sp]
   130d0:	mvn	r0, #0
   130d4:	ldr	r6, [sp, #8]
   130d8:	add	sp, sp, #12
   130dc:	pop	{pc}		; (ldr pc, [sp], #4)
   130e0:	.word	0x0002b1f8

000130e4 <pcap_nametollc>:
   130e4:	strd	r4, [sp, #-16]!
   130e8:	mov	r5, r0
   130ec:	ldr	r4, [pc, #96]	; 13154 <pcap_nametollc+0x70>
   130f0:	str	r6, [sp, #8]
   130f4:	str	lr, [sp, #12]
   130f8:	add	r4, pc, r4
   130fc:	ldr	r0, [r4, #168]	; 0xa8
   13100:	cmp	r0, #0
   13104:	beq	13140 <pcap_nametollc+0x5c>
   13108:	add	r4, r4, #168	; 0xa8
   1310c:	b	1311c <pcap_nametollc+0x38>
   13110:	ldr	r0, [r4, #8]!
   13114:	cmp	r0, #0
   13118:	beq	13140 <pcap_nametollc+0x5c>
   1311c:	mov	r1, r5
   13120:	bl	cf4 <strcmp@plt>
   13124:	cmp	r0, #0
   13128:	bne	13110 <pcap_nametollc+0x2c>
   1312c:	ldrh	r0, [r4, #4]
   13130:	ldrd	r4, [sp]
   13134:	ldr	r6, [sp, #8]
   13138:	add	sp, sp, #12
   1313c:	pop	{pc}		; (ldr pc, [sp], #4)
   13140:	ldrd	r4, [sp]
   13144:	mvn	r0, #0
   13148:	ldr	r6, [sp, #8]
   1314c:	add	sp, sp, #12
   13150:	pop	{pc}		; (ldr pc, [sp], #4)
   13154:	.word	0x0002b188

00013158 <__pcap_atoin>:
   13158:	mov	r3, #0
   1315c:	push	{lr}		; (str lr, [sp, #-4]!)
   13160:	mov	ip, r3
   13164:	mov	lr, r3
   13168:	str	r3, [r1]
   1316c:	ldrb	r2, [r0]
   13170:	subs	r3, r2, #46	; 0x2e
   13174:	movne	r3, #1
   13178:	cmp	r2, #0
   1317c:	moveq	r3, #0
   13180:	cmp	r3, #0
   13184:	beq	131ac <__pcap_atoin+0x54>
   13188:	mov	r3, #0
   1318c:	add	r3, r3, r3, lsl #2
   13190:	add	r3, r2, r3, lsl #1
   13194:	ldrb	r2, [r0, #1]!
   13198:	sub	r3, r3, #48	; 0x30
   1319c:	cmp	r2, #0
   131a0:	cmpne	r2, #46	; 0x2e
   131a4:	bne	1318c <__pcap_atoin+0x34>
   131a8:	uxtb	r3, r3
   131ac:	orr	ip, r3, ip, lsl #8
   131b0:	add	lr, lr, #8
   131b4:	str	ip, [r1]
   131b8:	ldrb	r3, [r0]
   131bc:	cmp	r3, #0
   131c0:	beq	131cc <__pcap_atoin+0x74>
   131c4:	add	r0, r0, #1
   131c8:	b	1316c <__pcap_atoin+0x14>
   131cc:	mov	r0, lr
   131d0:	pop	{pc}		; (ldr pc, [sp], #4)

000131d4 <__pcap_atodn>:
   131d4:	strd	r4, [sp, #-12]!
   131d8:	mov	r4, r1
   131dc:	mov	r5, r0
   131e0:	ldr	r1, [pc, #88]	; 13240 <__pcap_atodn+0x6c>
   131e4:	str	lr, [sp, #8]
   131e8:	sub	sp, sp, #12
   131ec:	mov	r3, sp
   131f0:	add	r2, sp, #4
   131f4:	add	r1, pc, r1
   131f8:	bl	e5c <sscanf@plt>
   131fc:	cmp	r0, #2
   13200:	bne	13230 <__pcap_atodn+0x5c>
   13204:	ldrd	r2, [sp]
   13208:	mov	r0, #32
   1320c:	lsl	r3, r3, #10
   13210:	ubfx	r2, r2, #0, #10
   13214:	uxth	r3, r3
   13218:	orr	r3, r3, r2
   1321c:	str	r3, [r4]
   13220:	add	sp, sp, #12
   13224:	ldrd	r4, [sp]
   13228:	add	sp, sp, #8
   1322c:	pop	{pc}		; (ldr pc, [sp], #4)
   13230:	ldr	r0, [pc, #12]	; 13244 <__pcap_atodn+0x70>
   13234:	mov	r1, r5
   13238:	add	r0, pc, r0
   1323c:	bl	2130 <sf_bpf_error>
   13240:	.word	0x0000e698
   13244:	.word	0x0000e65c

00013248 <pcap_ether_aton>:
   13248:	strd	r4, [sp, #-16]!
   1324c:	mov	r5, r0
   13250:	mov	r0, #6
   13254:	str	r6, [sp, #8]
   13258:	str	lr, [sp, #12]
   1325c:	bl	dc0 <malloc@plt>
   13260:	subs	r6, r0, #0
   13264:	beq	13334 <pcap_ether_aton+0xec>
   13268:	ldrb	r4, [r5]
   1326c:	cmp	r4, #0
   13270:	beq	13334 <pcap_ether_aton+0xec>
   13274:	bl	dd8 <__ctype_b_loc@plt>
   13278:	ldr	ip, [r0]
   1327c:	mov	r0, r6
   13280:	b	132fc <pcap_ether_aton+0xb4>
   13284:	ldrb	r4, [r5, #2]
   13288:	add	r5, r5, #2
   1328c:	sxth	r2, r3
   13290:	lsl	r2, r2, #1
   13294:	ldrh	r2, [ip, r2]
   13298:	tst	r2, #2048	; 0x800
   1329c:	subne	r3, r3, #48	; 0x30
   132a0:	bne	132b0 <pcap_ether_aton+0x68>
   132a4:	tst	r2, #512	; 0x200
   132a8:	subne	r3, r3, #87	; 0x57
   132ac:	subeq	r3, r3, #55	; 0x37
   132b0:	sxth	r2, r4
   132b4:	mov	lr, r3
   132b8:	lsl	r2, r2, #1
   132bc:	ldrh	r2, [ip, r2]
   132c0:	tst	r2, #4096	; 0x1000
   132c4:	beq	132f0 <pcap_ether_aton+0xa8>
   132c8:	tst	r2, #2048	; 0x800
   132cc:	lsl	r3, r3, #4
   132d0:	add	r5, r1, #2
   132d4:	subne	lr, r4, #48	; 0x30
   132d8:	bne	132e8 <pcap_ether_aton+0xa0>
   132dc:	tst	r2, #512	; 0x200
   132e0:	subne	lr, r4, #87	; 0x57
   132e4:	subeq	lr, r4, #55	; 0x37
   132e8:	ldrb	r4, [r1, #2]
   132ec:	orr	lr, lr, r3
   132f0:	cmp	r4, #0
   132f4:	strb	lr, [r0], #1
   132f8:	beq	13334 <pcap_ether_aton+0xec>
   132fc:	sub	r2, r4, #45	; 0x2d
   13300:	add	r1, r5, #1
   13304:	ldrb	r3, [r5, #1]
   13308:	uxtb	r2, r2
   1330c:	cmp	r4, #58	; 0x3a
   13310:	cmpne	r2, #1
   13314:	bls	13284 <pcap_ether_aton+0x3c>
   13318:	mov	lr, r3
   1331c:	mov	r2, r1
   13320:	mov	r3, r4
   13324:	mov	r1, r5
   13328:	mov	r4, lr
   1332c:	mov	r5, r2
   13330:	b	1328c <pcap_ether_aton+0x44>
   13334:	mov	r0, r6
   13338:	ldrd	r4, [sp]
   1333c:	ldr	r6, [sp, #8]
   13340:	add	sp, sp, #12
   13344:	pop	{pc}		; (ldr pc, [sp], #4)

00013348 <pcap_ether_hostton>:
   13348:	strd	r4, [sp, #-16]!
   1334c:	mov	r5, r0
   13350:	ldr	r4, [pc, #204]	; 13424 <pcap_ether_hostton+0xdc>
   13354:	str	r6, [sp, #8]
   13358:	str	lr, [sp, #12]
   1335c:	add	r4, pc, r4
   13360:	ldr	r3, [r4]
   13364:	cmp	r3, #0
   13368:	beq	133f4 <pcap_ether_hostton+0xac>
   1336c:	ldr	r0, [r4, #4]
   13370:	cmp	r0, #0
   13374:	beq	133b0 <pcap_ether_hostton+0x68>
   13378:	bl	d84 <rewind@plt>
   1337c:	ldr	r0, [r4, #4]
   13380:	ldr	r6, [pc, #160]	; 13428 <pcap_ether_hostton+0xe0>
   13384:	add	r6, pc, r6
   13388:	b	1339c <pcap_ether_hostton+0x54>
   1338c:	bl	cf4 <strcmp@plt>
   13390:	cmp	r0, #0
   13394:	beq	133c4 <pcap_ether_hostton+0x7c>
   13398:	ldr	r0, [r6, #4]
   1339c:	bl	1bca0 <pcap_next_etherent>
   133a0:	subs	r4, r0, #0
   133a4:	mov	r1, r5
   133a8:	add	r0, r4, #6
   133ac:	bne	1338c <pcap_ether_hostton+0x44>
   133b0:	mov	r0, #0
   133b4:	ldrd	r4, [sp]
   133b8:	ldr	r6, [sp, #8]
   133bc:	add	sp, sp, #12
   133c0:	pop	{pc}		; (ldr pc, [sp], #4)
   133c4:	mov	r0, #6
   133c8:	bl	dc0 <malloc@plt>
   133cc:	cmp	r0, #0
   133d0:	beq	133b4 <pcap_ether_hostton+0x6c>
   133d4:	ldr	r3, [r4]
   133d8:	str	r3, [r0]
   133dc:	ldrh	r3, [r4, #4]
   133e0:	strh	r3, [r0, #4]
   133e4:	ldrd	r4, [sp]
   133e8:	ldr	r6, [sp, #8]
   133ec:	add	sp, sp, #12
   133f0:	pop	{pc}		; (ldr pc, [sp], #4)
   133f4:	ldr	r1, [pc, #48]	; 1342c <pcap_ether_hostton+0xe4>
   133f8:	ldr	r0, [pc, #48]	; 13430 <pcap_ether_hostton+0xe8>
   133fc:	add	r1, pc, r1
   13400:	add	r0, pc, r0
   13404:	bl	d18 <fopen@plt>
   13408:	ldr	r3, [r4]
   1340c:	cmp	r0, #0
   13410:	str	r0, [r4, #4]
   13414:	add	r3, r3, #1
   13418:	str	r3, [r4]
   1341c:	bne	13380 <pcap_ether_hostton+0x38>
   13420:	b	133b0 <pcap_ether_hostton+0x68>
   13424:	.word	0x0002b3c8
   13428:	.word	0x0002b3a0
   1342c:	.word	0x0000e4b8
   13430:	.word	0x0000e4b8

00013434 <__pcap_nametodnaddr>:
   13434:	mov	r1, r0
   13438:	ldr	r0, [pc, #12]	; 1344c <__pcap_nametodnaddr+0x18>
   1343c:	str	r4, [sp, #-8]!
   13440:	str	lr, [sp, #4]
   13444:	add	r0, pc, r0
   13448:	bl	2130 <sf_bpf_error>
   1344c:	.word	0x0000e480

00013450 <find_levels_r>:
   13450:	ldr	r3, [pc, #156]	; 134f4 <find_levels_r+0xa4>
   13454:	strd	r4, [sp, #-16]!
   13458:	str	r6, [sp, #8]
   1345c:	str	lr, [sp, #12]
   13460:	ldr	r2, [r0, #24]
   13464:	add	r3, pc, r3
   13468:	ldr	r3, [r3]
   1346c:	ldr	r5, [pc, #132]	; 134f8 <find_levels_r+0xa8>
   13470:	cmp	r2, r3
   13474:	add	r5, pc, r5
   13478:	beq	134e4 <find_levels_r+0x94>
   1347c:	mov	r4, r0
   13480:	ldr	r0, [r0, #60]	; 0x3c
   13484:	mov	r2, #0
   13488:	str	r3, [r4, #24]
   1348c:	str	r2, [r4, #100]	; 0x64
   13490:	cmp	r0, r2
   13494:	moveq	r3, r0
   13498:	beq	134c8 <find_levels_r+0x78>
   1349c:	bl	13450 <find_levels_r>
   134a0:	ldr	r0, [r4, #84]	; 0x54
   134a4:	bl	13450 <find_levels_r>
   134a8:	ldr	r2, [r4, #60]	; 0x3c
   134ac:	ldr	r3, [r4, #84]	; 0x54
   134b0:	ldr	r2, [r2, #36]	; 0x24
   134b4:	ldr	r3, [r3, #36]	; 0x24
   134b8:	cmp	r3, r2
   134bc:	movlt	r3, r2
   134c0:	add	r3, r3, #1
   134c4:	lsl	r0, r3, #2
   134c8:	ldr	r2, [pc, #44]	; 134fc <find_levels_r+0xac>
   134cc:	str	r3, [r4, #36]	; 0x24
   134d0:	ldr	r3, [r5, r2]
   134d4:	ldr	r3, [r3]
   134d8:	ldr	r2, [r3, r0]
   134dc:	str	r2, [r4, #100]	; 0x64
   134e0:	str	r4, [r3, r0]
   134e4:	ldrd	r4, [sp]
   134e8:	ldr	r6, [sp, #8]
   134ec:	add	sp, sp, #12
   134f0:	pop	{pc}		; (ldr pc, [sp], #4)
   134f4:	.word	0x0002b2c8
   134f8:	.word	0x0002ab84
   134fc:	.word	0x000000c4

00013500 <propedom>:
   13500:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13504:	strd	r6, [sp, #8]
   13508:	strd	r8, [sp, #16]
   1350c:	strd	sl, [sp, #24]
   13510:	str	lr, [sp, #32]
   13514:	mov	lr, #1
   13518:	ldr	r3, [r0]
   1351c:	ldr	r1, [r0, #8]
   13520:	lsr	ip, r3, #5
   13524:	and	r3, r3, #31
   13528:	ldr	r2, [r1, ip, lsl #2]
   1352c:	orr	r3, r2, lr, lsl r3
   13530:	str	r3, [r1, ip, lsl #2]
   13534:	ldr	r2, [r0, #12]
   13538:	cmp	r2, #0
   1353c:	beq	13690 <propedom+0x190>
   13540:	ldr	r3, [pc, #420]	; 136ec <propedom+0x1ec>
   13544:	ldr	r8, [r0, #8]
   13548:	ldr	r2, [r2, #56]	; 0x38
   1354c:	add	r3, pc, r3
   13550:	ldr	lr, [r3, #4]
   13554:	subs	r5, lr, #1
   13558:	bmi	13690 <propedom+0x190>
   1355c:	add	r3, r2, #8
   13560:	add	r4, r8, #8
   13564:	mov	r1, r3
   13568:	orr	ip, r8, r2
   1356c:	cmp	r2, r4
   13570:	cmpcc	r8, r1
   13574:	mov	r3, r4
   13578:	movcs	r3, #1
   1357c:	movcc	r3, #0
   13580:	cmp	r5, #6
   13584:	movls	r6, #0
   13588:	movhi	r6, #1
   1358c:	tst	ip, #7
   13590:	andeq	r3, r6, r3
   13594:	movne	r3, #0
   13598:	cmp	r3, #0
   1359c:	beq	136c8 <propedom+0x1c8>
   135a0:	lsr	r9, lr, #1
   135a4:	sub	r7, r8, #8
   135a8:	mov	r3, r2
   135ac:	mov	r4, #0
   135b0:	ldr	ip, [r7, #8]!
   135b4:	add	r4, r4, #1
   135b8:	add	r3, r3, #8
   135bc:	cmp	r4, r9
   135c0:	ldr	fp, [r3, #-8]
   135c4:	ldr	sl, [r3, #-4]
   135c8:	ldr	r1, [r7, #4]
   135cc:	and	ip, ip, fp
   135d0:	str	ip, [r3, #-8]
   135d4:	and	r1, r1, sl
   135d8:	str	r1, [r3, #-4]
   135dc:	bne	135b0 <propedom+0xb0>
   135e0:	bic	r1, lr, #1
   135e4:	cmp	lr, r1
   135e8:	beq	135fc <propedom+0xfc>
   135ec:	ldr	ip, [r8, r1, lsl #2]
   135f0:	ldr	r3, [r2, r1, lsl #2]
   135f4:	and	r3, r3, ip
   135f8:	str	r3, [r2, r1, lsl #2]
   135fc:	ldr	r7, [r0, #8]
   13600:	ldr	r3, [r0, #12]
   13604:	ldr	r2, [r3, #80]	; 0x50
   13608:	add	r3, r7, #8
   1360c:	add	r0, r2, #8
   13610:	orr	r1, r2, r7
   13614:	cmp	r7, r0
   13618:	cmpcc	r2, r3
   1361c:	movcs	r3, #1
   13620:	movcc	r3, #0
   13624:	tst	r1, #7
   13628:	andeq	r6, r6, r3
   1362c:	movne	r6, #0
   13630:	cmp	r6, #0
   13634:	beq	136a8 <propedom+0x1a8>
   13638:	lsr	r8, lr, #1
   1363c:	sub	r4, r7, #8
   13640:	mov	r3, r2
   13644:	mov	ip, #0
   13648:	ldr	r0, [r4, #8]!
   1364c:	add	ip, ip, #1
   13650:	add	r3, r3, #8
   13654:	cmp	ip, r8
   13658:	ldr	r6, [r3, #-8]
   1365c:	ldr	r5, [r3, #-4]
   13660:	ldr	r1, [r4, #4]
   13664:	and	r0, r0, r6
   13668:	and	r1, r1, r5
   1366c:	strd	r0, [r3, #-8]
   13670:	bne	13648 <propedom+0x148>
   13674:	bic	r1, lr, #1
   13678:	cmp	r1, lr
   1367c:	beq	13690 <propedom+0x190>
   13680:	ldr	r0, [r7, r1, lsl #2]
   13684:	ldr	r3, [r2, r1, lsl #2]
   13688:	and	r3, r3, r0
   1368c:	str	r3, [r2, r1, lsl #2]
   13690:	ldrd	r4, [sp]
   13694:	ldrd	r6, [sp, #8]
   13698:	ldrd	r8, [sp, #16]
   1369c:	ldrd	sl, [sp, #24]
   136a0:	add	sp, sp, #32
   136a4:	pop	{pc}		; (ldr pc, [sp], #4)
   136a8:	ldr	r3, [r2], #4
   136ac:	sub	r5, r5, #1
   136b0:	cmn	r5, #1
   136b4:	ldr	r1, [r7], #4
   136b8:	and	r3, r3, r1
   136bc:	str	r3, [r2, #-4]
   136c0:	bne	136a8 <propedom+0x1a8>
   136c4:	b	13690 <propedom+0x190>
   136c8:	mov	r1, r5
   136cc:	ldr	r3, [r2], #4
   136d0:	sub	r1, r1, #1
   136d4:	cmn	r1, #1
   136d8:	ldr	ip, [r8], #4
   136dc:	and	r3, r3, ip
   136e0:	str	r3, [r2, #-4]
   136e4:	bne	136cc <propedom+0x1cc>
   136e8:	b	135fc <propedom+0xfc>
   136ec:	.word	0x0002b1e0

000136f0 <F>:
   136f0:	strd	r4, [sp, #-16]!
   136f4:	movw	r3, #8923	; 0x22db
   136f8:	movt	r3, #39383	; 0x99d7
   136fc:	str	r6, [sp, #8]
   13700:	mov	r4, #213	; 0xd5
   13704:	str	lr, [sp, #12]
   13708:	mov	lr, r0
   1370c:	eor	ip, lr, r2, lsl #8
   13710:	ldr	r0, [pc, #236]	; 13804 <F+0x114>
   13714:	eor	ip, ip, r1, lsl #4
   13718:	ldr	r5, [pc, #232]	; 13808 <F+0x118>
   1371c:	umull	r6, r3, r3, ip
   13720:	add	r0, pc, r0
   13724:	add	r5, pc, r5
   13728:	lsr	r3, r3, #7
   1372c:	mls	r3, r4, r3, ip
   13730:	lsl	r4, r3, #2
   13734:	add	r0, r0, r4
   13738:	ldr	r3, [r0, #8]
   1373c:	cmp	r3, #0
   13740:	bne	13754 <F+0x64>
   13744:	b	13780 <F+0x90>
   13748:	ldr	r3, [r3, #16]
   1374c:	cmp	r3, #0
   13750:	beq	13780 <F+0x90>
   13754:	ldr	ip, [r3]
   13758:	cmp	ip, lr
   1375c:	bne	13748 <F+0x58>
   13760:	ldr	r0, [r3, #4]
   13764:	cmp	r0, r1
   13768:	bne	13748 <F+0x58>
   1376c:	ldr	r0, [r3, #8]
   13770:	cmp	r0, r2
   13774:	bne	13748 <F+0x58>
   13778:	ldr	r0, [r3, #12]
   1377c:	b	137d4 <F+0xe4>
   13780:	ldr	r3, [pc, #132]	; 1380c <F+0x11c>
   13784:	tst	lr, #230	; 0xe6
   13788:	add	r3, pc, r3
   1378c:	ldr	r0, [r3, #860]	; 0x35c
   13790:	add	r0, r0, #1
   13794:	str	r0, [r3, #860]	; 0x35c
   13798:	beq	137e4 <F+0xf4>
   1379c:	ldr	ip, [pc, #108]	; 13810 <F+0x120>
   137a0:	ldr	r3, [pc, #108]	; 13814 <F+0x124>
   137a4:	ldr	r5, [r5, ip]
   137a8:	add	r3, pc, r3
   137ac:	add	r3, r3, r4
   137b0:	ldr	ip, [r5]
   137b4:	add	r4, ip, #20
   137b8:	stmib	ip, {r1, r2}
   137bc:	str	r0, [ip, #12]
   137c0:	str	r4, [r5]
   137c4:	str	lr, [ip]
   137c8:	ldr	r2, [r3, #8]
   137cc:	str	r2, [ip, #16]
   137d0:	str	ip, [r3, #8]
   137d4:	ldrd	r4, [sp]
   137d8:	ldr	r6, [sp, #8]
   137dc:	add	sp, sp, #12
   137e0:	pop	{pc}		; (ldr pc, [sp], #4)
   137e4:	ldr	r3, [pc, #44]	; 13818 <F+0x128>
   137e8:	mov	ip, #1
   137ec:	ldr	r3, [r5, r3]
   137f0:	ldr	r3, [r3]
   137f4:	add	r6, r3, r0, lsl #3
   137f8:	str	r1, [r6, #4]
   137fc:	str	ip, [r3, r0, lsl #3]
   13800:	b	1379c <F+0xac>
   13804:	.word	0x0002b00c
   13808:	.word	0x0002a8d4
   1380c:	.word	0x0002afa4
   13810:	.word	0x000000ec
   13814:	.word	0x0002af84
   13818:	.word	0x00000100

0001381c <make_marks>:
   1381c:	ldr	r3, [pc, #92]	; 13880 <make_marks+0x64>
   13820:	strd	r4, [sp, #-16]!
   13824:	str	r6, [sp, #8]
   13828:	str	lr, [sp, #12]
   1382c:	ldr	r2, [r0, #24]
   13830:	add	r3, pc, r3
   13834:	ldr	r5, [r3]
   13838:	cmp	r2, r5
   1383c:	beq	13870 <make_marks+0x54>
   13840:	mov	r4, r0
   13844:	ldr	r3, [r4, #8]
   13848:	str	r5, [r4, #24]
   1384c:	and	r3, r3, #7
   13850:	cmp	r3, #6
   13854:	beq	13870 <make_marks+0x54>
   13858:	ldr	r0, [r4, #60]	; 0x3c
   1385c:	bl	1381c <make_marks>
   13860:	ldr	r4, [r4, #84]	; 0x54
   13864:	ldr	r3, [r4, #24]
   13868:	cmp	r3, r5
   1386c:	bne	13844 <make_marks+0x28>
   13870:	ldrd	r4, [sp]
   13874:	ldr	r6, [sp, #8]
   13878:	add	sp, sp, #12
   1387c:	pop	{pc}		; (ldr pc, [sp], #4)
   13880:	.word	0x0002aefc

00013884 <count_blocks>:
   13884:	strd	r4, [sp, #-16]!
   13888:	subs	r4, r0, #0
   1388c:	str	r6, [sp, #8]
   13890:	str	lr, [sp, #12]
   13894:	beq	138f4 <count_blocks+0x70>
   13898:	ldr	r3, [pc, #92]	; 138fc <count_blocks+0x78>
   1389c:	mov	r5, #0
   138a0:	ldr	r2, [r4, #24]
   138a4:	add	r3, pc, r3
   138a8:	ldr	r6, [r3]
   138ac:	cmp	r2, r6
   138b0:	beq	138e0 <count_blocks+0x5c>
   138b4:	str	r6, [r4, #24]
   138b8:	ldr	r0, [r4, #60]	; 0x3c
   138bc:	bl	13884 <count_blocks>
   138c0:	ldr	r4, [r4, #84]	; 0x54
   138c4:	add	r0, r0, #1
   138c8:	add	r5, r5, r0
   138cc:	cmp	r4, #0
   138d0:	beq	138e0 <count_blocks+0x5c>
   138d4:	ldr	r3, [r4, #24]
   138d8:	cmp	r3, r6
   138dc:	bne	138b4 <count_blocks+0x30>
   138e0:	mov	r0, r5
   138e4:	ldrd	r4, [sp]
   138e8:	ldr	r6, [sp, #8]
   138ec:	add	sp, sp, #12
   138f0:	pop	{pc}		; (ldr pc, [sp], #4)
   138f4:	mov	r5, r4
   138f8:	b	138e0 <count_blocks+0x5c>
   138fc:	.word	0x0002ae88

00013900 <number_blks_r>:
   13900:	ldr	r2, [pc, #136]	; 13990 <number_blks_r+0x90>
   13904:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13908:	subs	r4, r0, #0
   1390c:	strd	r6, [sp, #8]
   13910:	str	r8, [sp, #16]
   13914:	str	lr, [sp, #20]
   13918:	add	r2, pc, r2
   1391c:	beq	1397c <number_blks_r+0x7c>
   13920:	ldr	r5, [pc, #108]	; 13994 <number_blks_r+0x94>
   13924:	ldr	r3, [r4, #24]
   13928:	add	r5, pc, r5
   1392c:	ldr	r6, [r5]
   13930:	cmp	r3, r6
   13934:	beq	1397c <number_blks_r+0x7c>
   13938:	ldr	r3, [pc, #88]	; 13998 <number_blks_r+0x98>
   1393c:	ldr	r7, [r2, r3]
   13940:	str	r6, [r4, #24]
   13944:	ldr	r3, [r5, #864]	; 0x360
   13948:	str	r3, [r4]
   1394c:	add	r1, r3, #1
   13950:	ldr	r2, [r7]
   13954:	str	r1, [r5, #864]	; 0x360
   13958:	str	r4, [r2, r3, lsl #2]
   1395c:	ldr	r0, [r4, #60]	; 0x3c
   13960:	bl	13900 <number_blks_r>
   13964:	ldr	r4, [r4, #84]	; 0x54
   13968:	cmp	r4, #0
   1396c:	beq	1397c <number_blks_r+0x7c>
   13970:	ldr	r3, [r4, #24]
   13974:	cmp	r3, r6
   13978:	bne	13940 <number_blks_r+0x40>
   1397c:	ldrd	r4, [sp]
   13980:	ldrd	r6, [sp, #8]
   13984:	ldr	r8, [sp, #16]
   13988:	add	sp, sp, #20
   1398c:	pop	{pc}		; (ldr pc, [sp], #4)
   13990:	.word	0x0002a6e0
   13994:	.word	0x0002ae04
   13998:	.word	0x000000cc

0001399c <count_stmts>:
   1399c:	strd	r4, [sp, #-16]!
   139a0:	subs	r4, r0, #0
   139a4:	str	r6, [sp, #8]
   139a8:	str	lr, [sp, #12]
   139ac:	beq	13a34 <count_stmts+0x98>
   139b0:	ldr	r3, [pc, #144]	; 13a48 <count_stmts+0xac>
   139b4:	ldr	r2, [r4, #24]
   139b8:	add	r3, pc, r3
   139bc:	ldr	r3, [r3]
   139c0:	cmp	r2, r3
   139c4:	beq	13a34 <count_stmts+0x98>
   139c8:	str	r3, [r4, #24]
   139cc:	ldr	r0, [r4, #60]	; 0x3c
   139d0:	bl	1399c <count_stmts>
   139d4:	mov	r5, r0
   139d8:	ldr	r0, [r4, #84]	; 0x54
   139dc:	bl	1399c <count_stmts>
   139e0:	ldr	r3, [r4, #4]
   139e4:	add	r0, r5, r0
   139e8:	cmp	r3, #0
   139ec:	beq	13a10 <count_stmts+0x74>
   139f0:	mov	r1, #0
   139f4:	ldr	r2, [r3]
   139f8:	ldr	r3, [r3, #16]
   139fc:	cmn	r2, #1
   13a00:	addne	r1, r1, #1
   13a04:	cmp	r3, #0
   13a08:	bne	139f4 <count_stmts+0x58>
   13a0c:	add	r0, r0, r1
   13a10:	ldr	r3, [r4, #28]
   13a14:	add	r0, r0, #1
   13a18:	ldr	r4, [r4, #32]
   13a1c:	ldr	r6, [sp, #8]
   13a20:	add	r0, r0, r3
   13a24:	add	r0, r0, r4
   13a28:	ldrd	r4, [sp]
   13a2c:	add	sp, sp, #12
   13a30:	pop	{pc}		; (ldr pc, [sp], #4)
   13a34:	ldrd	r4, [sp]
   13a38:	mov	r0, #0
   13a3c:	ldr	r6, [sp, #8]
   13a40:	add	sp, sp, #12
   13a44:	pop	{pc}		; (ldr pc, [sp], #4)
   13a48:	.word	0x0002ad74

00013a4c <convert_code_r>:
   13a4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13a50:	strd	r6, [sp, #8]
   13a54:	strd	r8, [sp, #16]
   13a58:	subs	r9, r0, #0
   13a5c:	strd	sl, [sp, #24]
   13a60:	str	lr, [sp, #32]
   13a64:	sub	sp, sp, #4
   13a68:	beq	13aa0 <convert_code_r+0x54>
   13a6c:	ldr	r5, [pc, #908]	; 13e00 <convert_code_r+0x3b4>
   13a70:	ldr	r2, [r9, #24]
   13a74:	add	r5, pc, r5
   13a78:	ldr	r3, [r5]
   13a7c:	cmp	r2, r3
   13a80:	beq	13aa0 <convert_code_r+0x54>
   13a84:	str	r3, [r9, #24]
   13a88:	ldr	r0, [r9, #84]	; 0x54
   13a8c:	bl	13a4c <convert_code_r>
   13a90:	cmp	r0, #0
   13a94:	bne	13ac0 <convert_code_r+0x74>
   13a98:	mov	r0, #0
   13a9c:	b	13aa4 <convert_code_r+0x58>
   13aa0:	mov	r0, #1
   13aa4:	add	sp, sp, #4
   13aa8:	ldrd	r4, [sp]
   13aac:	ldrd	r6, [sp, #8]
   13ab0:	ldrd	r8, [sp, #16]
   13ab4:	ldrd	sl, [sp, #24]
   13ab8:	add	sp, sp, #32
   13abc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ac0:	ldr	r0, [r9, #60]	; 0x3c
   13ac4:	bl	13a4c <convert_code_r>
   13ac8:	cmp	r0, #0
   13acc:	beq	13a98 <convert_code_r+0x4c>
   13ad0:	ldr	r4, [r9, #4]
   13ad4:	ldr	ip, [r9, #28]
   13ad8:	ldr	lr, [r9, #32]
   13adc:	cmp	r4, #0
   13ae0:	ldr	r6, [r5, #868]	; 0x364
   13ae4:	ldr	r1, [r5, #872]	; 0x368
   13ae8:	beq	13d94 <convert_code_r+0x348>
   13aec:	mov	r0, r4
   13af0:	mov	r7, #0
   13af4:	ldr	r2, [r0]
   13af8:	add	r3, r7, #1
   13afc:	cmn	r2, #1
   13b00:	beq	13b10 <convert_code_r+0xc4>
   13b04:	add	r2, r7, #2
   13b08:	mov	r7, r3
   13b0c:	mov	r3, r2
   13b10:	ldr	r0, [r0, #16]
   13b14:	cmp	r0, #0
   13b18:	bne	13af4 <convert_code_r+0xa8>
   13b1c:	add	r3, ip, r3
   13b20:	ldr	r2, [pc, #732]	; 13e04 <convert_code_r+0x3b8>
   13b24:	cmp	r7, #0
   13b28:	add	r3, r3, lr
   13b2c:	sub	r6, r6, r3, lsl #3
   13b30:	sub	r3, r6, r1
   13b34:	asr	r3, r3, #3
   13b38:	add	r2, pc, r2
   13b3c:	str	r6, [r2, #868]	; 0x364
   13b40:	str	r3, [r9, #40]	; 0x28
   13b44:	bne	13cec <convert_code_r+0x2a0>
   13b48:	mov	r2, #0
   13b4c:	sub	fp, r7, #2
   13b50:	b	13b68 <convert_code_r+0x11c>
   13b54:	add	r6, r6, #8
   13b58:	add	r2, r2, #1
   13b5c:	ldr	r4, [r4, #16]
   13b60:	cmp	r4, #0
   13b64:	beq	13c6c <convert_code_r+0x220>
   13b68:	ldr	r3, [r4]
   13b6c:	cmn	r3, #1
   13b70:	beq	13b5c <convert_code_r+0x110>
   13b74:	strh	r3, [r6]
   13b78:	ldr	r3, [r4, #12]
   13b7c:	str	r3, [r6, #4]
   13b80:	ldr	r3, [r4]
   13b84:	sub	r5, r3, #5
   13b88:	and	r1, r3, #7
   13b8c:	clz	r5, r5
   13b90:	lsr	r5, r5, #5
   13b94:	cmp	r1, #5
   13b98:	orrne	r5, r5, #1
   13b9c:	cmp	r5, #0
   13ba0:	bne	13b54 <convert_code_r+0x108>
   13ba4:	cmp	fp, r2
   13ba8:	beq	13b54 <convert_code_r+0x108>
   13bac:	ldr	ip, [r4, #4]
   13bb0:	cmp	ip, #0
   13bb4:	beq	13dec <convert_code_r+0x3a0>
   13bb8:	ldr	r3, [r4, #8]
   13bbc:	cmp	r3, #0
   13bc0:	beq	13dec <convert_code_r+0x3a0>
   13bc4:	cmp	r7, #0
   13bc8:	beq	13c58 <convert_code_r+0x20c>
   13bcc:	sub	lr, r0, #4
   13bd0:	mov	r8, r5
   13bd4:	mov	r3, r5
   13bd8:	mvn	sl, r2
   13bdc:	b	13bfc <convert_code_r+0x1b0>
   13be0:	ldr	ip, [r4, #8]
   13be4:	cmp	r1, ip
   13be8:	beq	13c28 <convert_code_r+0x1dc>
   13bec:	add	r3, r3, #1
   13bf0:	cmp	r3, r7
   13bf4:	beq	13c48 <convert_code_r+0x1fc>
   13bf8:	ldr	ip, [r4, #4]
   13bfc:	ldr	r1, [lr, #4]!
   13c00:	cmp	r1, ip
   13c04:	bne	13be0 <convert_code_r+0x194>
   13c08:	cmp	r8, #0
   13c0c:	bne	13dcc <convert_code_r+0x380>
   13c10:	add	ip, sl, r3
   13c14:	mov	r8, #1
   13c18:	strb	ip, [r6, #2]
   13c1c:	ldr	ip, [r4, #8]
   13c20:	cmp	r1, ip
   13c24:	bne	13bec <convert_code_r+0x1a0>
   13c28:	cmp	r5, #0
   13c2c:	bne	13db8 <convert_code_r+0x36c>
   13c30:	add	r1, sl, r3
   13c34:	add	r3, r3, #1
   13c38:	cmp	r3, r7
   13c3c:	mov	r5, #1
   13c40:	strb	r1, [r6, #3]
   13c44:	bne	13bf8 <convert_code_r+0x1ac>
   13c48:	eor	r8, r8, #1
   13c4c:	eor	r5, r5, #1
   13c50:	orrs	r3, r8, r5
   13c54:	beq	13b54 <convert_code_r+0x108>
   13c58:	ldr	r1, [pc, #424]	; 13e08 <convert_code_r+0x3bc>
   13c5c:	ldr	r0, [pc, #424]	; 13e0c <convert_code_r+0x3c0>
   13c60:	add	r1, pc, r1
   13c64:	add	r0, pc, r0
   13c68:	bl	2130 <sf_bpf_error>
   13c6c:	cmp	r0, #0
   13c70:	beq	13c78 <convert_code_r+0x22c>
   13c74:	bl	d48 <free@plt>
   13c78:	ldr	r3, [r9, #8]
   13c7c:	strh	r3, [r6]
   13c80:	ldr	r3, [r9, #20]
   13c84:	str	r3, [r6, #4]
   13c88:	ldr	r3, [r9, #60]	; 0x3c
   13c8c:	cmp	r3, #0
   13c90:	beq	13aa0 <convert_code_r+0x54>
   13c94:	ldr	r2, [r9, #40]	; 0x28
   13c98:	ldr	r3, [r3, #40]	; 0x28
   13c9c:	add	r2, r7, r2
   13ca0:	sub	r3, r3, r2
   13ca4:	sub	r2, r3, #1
   13ca8:	cmp	r2, #255	; 0xff
   13cac:	bls	13d28 <convert_code_r+0x2dc>
   13cb0:	ldr	r0, [r9, #28]
   13cb4:	cmp	r0, #0
   13cb8:	moveq	r3, #1
   13cbc:	streq	r3, [r9, #28]
   13cc0:	beq	13aa4 <convert_code_r+0x58>
   13cc4:	sub	r3, r3, #2
   13cc8:	mov	r0, #0
   13ccc:	mov	r2, #5
   13cd0:	mov	r1, #16
   13cd4:	mov	lr, #2
   13cd8:	mov	ip, #1
   13cdc:	strb	r0, [r6, #2]
   13ce0:	strh	r2, [r6, #8]
   13ce4:	str	r3, [r6, #12]
   13ce8:	b	13d38 <convert_code_r+0x2ec>
   13cec:	mov	r1, #4
   13cf0:	mov	r0, r7
   13cf4:	bl	ce8 <calloc@plt>
   13cf8:	cmp	r0, #0
   13cfc:	subne	r1, r0, #4
   13d00:	movne	r3, r4
   13d04:	movne	r2, #0
   13d08:	beq	13de0 <convert_code_r+0x394>
   13d0c:	str	r3, [r1, #4]!
   13d10:	add	r2, r2, #1
   13d14:	ldr	r3, [r3, #16]
   13d18:	cmp	r3, #0
   13d1c:	cmpne	r7, r2
   13d20:	bhi	13d0c <convert_code_r+0x2c0>
   13d24:	b	13b48 <convert_code_r+0xfc>
   13d28:	mov	r1, #8
   13d2c:	mov	lr, #1
   13d30:	strb	r2, [r6, #2]
   13d34:	mov	ip, #0
   13d38:	ldr	r2, [r9, #40]	; 0x28
   13d3c:	ldr	r3, [r9, #84]	; 0x54
   13d40:	add	r7, r7, r2
   13d44:	ldr	r3, [r3, #40]	; 0x28
   13d48:	sub	r3, r3, r7
   13d4c:	sub	r3, r3, #1
   13d50:	cmp	r3, #255	; 0xff
   13d54:	movls	r0, #1
   13d58:	strbls	r3, [r6, #3]
   13d5c:	bls	13aa4 <convert_code_r+0x58>
   13d60:	ldr	r0, [r9, #32]
   13d64:	cmp	r0, #0
   13d68:	moveq	r3, #1
   13d6c:	streq	r3, [r9, #32]
   13d70:	beq	13aa4 <convert_code_r+0x58>
   13d74:	sub	r3, r3, lr
   13d78:	add	r2, r6, r1
   13d7c:	strb	ip, [r6, #3]
   13d80:	mov	lr, #5
   13d84:	mov	r0, #1
   13d88:	strh	lr, [r6, r1]
   13d8c:	str	r3, [r2, #4]
   13d90:	b	13aa4 <convert_code_r+0x58>
   13d94:	add	r3, ip, #1
   13d98:	mov	r7, r4
   13d9c:	add	r3, r3, lr
   13da0:	sub	r6, r6, r3, lsl #3
   13da4:	sub	r3, r6, r1
   13da8:	asr	r3, r3, #3
   13dac:	str	r6, [r5, #868]	; 0x364
   13db0:	str	r3, [r9, #40]	; 0x28
   13db4:	b	13c78 <convert_code_r+0x22c>
   13db8:	ldr	r1, [pc, #80]	; 13e10 <convert_code_r+0x3c4>
   13dbc:	ldr	r0, [pc, #80]	; 13e14 <convert_code_r+0x3c8>
   13dc0:	add	r1, pc, r1
   13dc4:	add	r0, pc, r0
   13dc8:	bl	2130 <sf_bpf_error>
   13dcc:	ldr	r1, [pc, #68]	; 13e18 <convert_code_r+0x3cc>
   13dd0:	ldr	r0, [pc, #68]	; 13e1c <convert_code_r+0x3d0>
   13dd4:	add	r1, pc, r1
   13dd8:	add	r0, pc, r0
   13ddc:	bl	2130 <sf_bpf_error>
   13de0:	ldr	r0, [pc, #56]	; 13e20 <convert_code_r+0x3d4>
   13de4:	add	r0, pc, r0
   13de8:	bl	2130 <sf_bpf_error>
   13dec:	ldr	r1, [pc, #48]	; 13e24 <convert_code_r+0x3d8>
   13df0:	ldr	r0, [pc, #48]	; 13e28 <convert_code_r+0x3dc>
   13df4:	add	r1, pc, r1
   13df8:	add	r0, pc, r0
   13dfc:	bl	2130 <sf_bpf_error>
   13e00:	.word	0x0002acb8
   13e04:	.word	0x0002abf4
   13e08:	.word	0x0000dd58
   13e0c:	.word	0x0000dd6c
   13e10:	.word	0x0000dc50
   13e14:	.word	0x0000dc0c
   13e18:	.word	0x0000dc3c
   13e1c:	.word	0x0000dbf8
   13e20:	.word	0x0000dbc4
   13e24:	.word	0x0000dc08
   13e28:	.word	0x0000dbd8

00013e2c <atomuse.isra.8>:
   13e2c:	cmn	r0, #1
   13e30:	beq	13e78 <atomuse.isra.8+0x4c>
   13e34:	and	r3, r0, #7
   13e38:	sub	r3, r3, #2
   13e3c:	cmp	r3, #5
   13e40:	addls	pc, pc, r3, lsl #2
   13e44:	b	13e60 <atomuse.isra.8+0x34>
   13e48:	b	13e7c <atomuse.isra.8+0x50>
   13e4c:	b	13e84 <atomuse.isra.8+0x58>
   13e50:	b	13e8c <atomuse.isra.8+0x60>
   13e54:	b	13e8c <atomuse.isra.8+0x60>
   13e58:	b	13e9c <atomuse.isra.8+0x70>
   13e5c:	b	13eb8 <atomuse.isra.8+0x8c>
   13e60:	and	r0, r0, #224	; 0xe0
   13e64:	cmp	r0, #64	; 0x40
   13e68:	beq	13e84 <atomuse.isra.8+0x58>
   13e6c:	cmp	r0, #96	; 0x60
   13e70:	beq	13ecc <atomuse.isra.8+0xa0>
   13e74:	mvn	r0, #0
   13e78:	bx	lr
   13e7c:	mov	r0, #16
   13e80:	bx	lr
   13e84:	mov	r0, #17
   13e88:	bx	lr
   13e8c:	tst	r0, #8
   13e90:	moveq	r0, #16
   13e94:	movne	r0, #18
   13e98:	bx	lr
   13e9c:	and	r0, r0, #24
   13ea0:	cmp	r0, #16
   13ea4:	beq	13e78 <atomuse.isra.8+0x4c>
   13ea8:	cmp	r0, #8
   13eac:	mvnne	r0, #0
   13eb0:	moveq	r0, #17
   13eb4:	bx	lr
   13eb8:	and	r0, r0, #248	; 0xf8
   13ebc:	cmp	r0, #128	; 0x80
   13ec0:	movne	r0, #16
   13ec4:	moveq	r0, #17
   13ec8:	bx	lr
   13ecc:	ldr	r0, [r1]
   13ed0:	bx	lr

00013ed4 <fold_op.isra.10>:
   13ed4:	str	r4, [sp, #-8]!
   13ed8:	str	lr, [sp, #4]
   13edc:	ldr	lr, [pc, #244]	; 13fd8 <fold_op.isra.10+0x104>
   13ee0:	ldr	r4, [pc, #244]	; 13fdc <fold_op.isra.10+0x108>
   13ee4:	ldr	ip, [r0]
   13ee8:	add	lr, pc, lr
   13eec:	ldr	lr, [lr, r4]
   13ef0:	and	ip, ip, #240	; 0xf0
   13ef4:	cmp	ip, #64	; 0x40
   13ef8:	ldr	lr, [lr]
   13efc:	add	r2, lr, r2, lsl #3
   13f00:	add	r3, lr, r3, lsl #3
   13f04:	ldr	r2, [r2, #4]
   13f08:	ldr	r3, [r3, #4]
   13f0c:	beq	13fbc <fold_op.isra.10+0xe8>
   13f10:	bgt	13f78 <fold_op.isra.10+0xa4>
   13f14:	cmp	ip, #16
   13f18:	beq	13fc4 <fold_op.isra.10+0xf0>
   13f1c:	ble	13f68 <fold_op.isra.10+0x94>
   13f20:	cmp	ip, #32
   13f24:	bne	13f50 <fold_op.isra.10+0x7c>
   13f28:	mul	r2, r3, r2
   13f2c:	ldr	r3, [pc, #172]	; 13fe0 <fold_op.isra.10+0x10c>
   13f30:	mov	ip, #0
   13f34:	str	r2, [r1]
   13f38:	str	ip, [r0]
   13f3c:	add	r3, pc, r3
   13f40:	str	ip, [r3, #876]	; 0x36c
   13f44:	ldr	r4, [sp]
   13f48:	add	sp, sp, #4
   13f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f50:	cmp	ip, #48	; 0x30
   13f54:	bne	13f74 <fold_op.isra.10+0xa0>
   13f58:	cmp	r3, #0
   13f5c:	beq	13fcc <fold_op.isra.10+0xf8>
   13f60:	udiv	r2, r2, r3
   13f64:	b	13f2c <fold_op.isra.10+0x58>
   13f68:	cmp	ip, #0
   13f6c:	addeq	r2, r2, r3
   13f70:	beq	13f2c <fold_op.isra.10+0x58>
   13f74:	bl	ebc <abort@plt>
   13f78:	cmp	ip, #96	; 0x60
   13f7c:	beq	13fb4 <fold_op.isra.10+0xe0>
   13f80:	ble	13f94 <fold_op.isra.10+0xc0>
   13f84:	cmp	ip, #112	; 0x70
   13f88:	bne	13fa4 <fold_op.isra.10+0xd0>
   13f8c:	lsr	r2, r2, r3
   13f90:	b	13f2c <fold_op.isra.10+0x58>
   13f94:	cmp	ip, #80	; 0x50
   13f98:	andeq	r2, r2, r3
   13f9c:	beq	13f2c <fold_op.isra.10+0x58>
   13fa0:	b	13f74 <fold_op.isra.10+0xa0>
   13fa4:	cmp	ip, #128	; 0x80
   13fa8:	rsbeq	r2, r2, #0
   13fac:	beq	13f2c <fold_op.isra.10+0x58>
   13fb0:	b	13f74 <fold_op.isra.10+0xa0>
   13fb4:	lsl	r2, r2, r3
   13fb8:	b	13f2c <fold_op.isra.10+0x58>
   13fbc:	orr	r2, r2, r3
   13fc0:	b	13f2c <fold_op.isra.10+0x58>
   13fc4:	sub	r2, r2, r3
   13fc8:	b	13f2c <fold_op.isra.10+0x58>
   13fcc:	ldr	r0, [pc, #16]	; 13fe4 <fold_op.isra.10+0x110>
   13fd0:	add	r0, pc, r0
   13fd4:	bl	2130 <sf_bpf_error>
   13fd8:	.word	0x0002a110
   13fdc:	.word	0x00000100
   13fe0:	.word	0x0002a7f0
   13fe4:	.word	0x0000da54

00013fe8 <opt_j>:
   13fe8:	ldr	r3, [r0, #12]
   13fec:	ldr	r1, [pc, #612]	; 14258 <opt_j+0x270>
   13ff0:	ldr	r2, [r3, #60]	; 0x3c
   13ff4:	add	r1, pc, r1
   13ff8:	cmp	r2, #0
   13ffc:	bxeq	lr
   14000:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14004:	strd	r6, [sp, #8]
   14008:	strd	r8, [sp, #16]
   1400c:	strd	sl, [sp, #24]
   14010:	str	lr, [sp, #32]
   14014:	sub	sp, sp, #28
   14018:	ldr	r3, [r3, #84]	; 0x54
   1401c:	cmp	r2, r3
   14020:	beq	141f8 <opt_j+0x210>
   14024:	ldr	r3, [pc, #560]	; 1425c <opt_j+0x274>
   14028:	add	r3, pc, r3
   1402c:	ldr	r3, [r3, #876]	; 0x36c
   14030:	str	r3, [sp, #12]
   14034:	ldr	r2, [pc, #548]	; 14260 <opt_j+0x278>
   14038:	ldr	r3, [pc, #548]	; 14264 <opt_j+0x27c>
   1403c:	add	r2, pc, r2
   14040:	ldr	r2, [r2, #4]
   14044:	str	r2, [sp, #20]
   14048:	cmp	r2, #0
   1404c:	ldr	r3, [r1, r3]
   14050:	ldr	r8, [r3]
   14054:	ble	1418c <opt_j+0x1a4>
   14058:	mov	r3, #0
   1405c:	mov	r9, r0
   14060:	mov	r4, #1
   14064:	str	r3, [sp, #8]
   14068:	ldr	r3, [r0, #8]
   1406c:	sub	r3, r3, #4
   14070:	str	r3, [sp, #16]
   14074:	ldr	r3, [sp, #16]
   14078:	str	r3, [sp]
   1407c:	mov	r3, #0
   14080:	str	r3, [sp, #4]
   14084:	ldr	r3, [sp]
   14088:	ldr	r5, [r3, #4]!
   1408c:	cmp	r5, #0
   14090:	str	r3, [sp]
   14094:	beq	141b0 <opt_j+0x1c8>
   14098:	ldr	sl, [r9, #12]
   1409c:	ldr	r3, [sp, #4]
   140a0:	ldr	r6, [sl, #8]
   140a4:	lsl	r7, r3, #5
   140a8:	mov	r0, r5
   140ac:	bl	e98 <ffs@plt>
   140b0:	sub	r0, r0, #1
   140b4:	add	r3, r0, r7
   140b8:	bic	r5, r5, r4, lsl r0
   140bc:	ldr	r1, [r8, r3, lsl #2]
   140c0:	ldr	r3, [r1, #4]
   140c4:	cmp	r3, #0
   140c8:	rsblt	r3, r3, #0
   140cc:	movlt	r2, #0
   140d0:	movge	r2, #1
   140d4:	cmp	r6, r3
   140d8:	bne	141a8 <opt_j+0x1c0>
   140dc:	ldr	r3, [r1, #16]
   140e0:	ldr	r0, [sl, #200]	; 0xc8
   140e4:	ldr	r1, [r3, #200]	; 0xc8
   140e8:	cmp	r0, r1
   140ec:	bne	141a8 <opt_j+0x1c0>
   140f0:	ldr	r3, [r3, #132]	; 0x84
   140f4:	ldr	r1, [sl, #132]	; 0x84
   140f8:	cmp	r1, r3
   140fc:	beq	141e8 <opt_j+0x200>
   14100:	cmp	r6, #21
   14104:	movne	r2, #0
   14108:	andeq	r2, r2, #1
   1410c:	cmp	r2, #0
   14110:	beq	141a8 <opt_j+0x1c0>
   14114:	ldr	fp, [sl, #84]	; 0x54
   14118:	cmp	fp, #0
   1411c:	beq	141a8 <opt_j+0x1c0>
   14120:	ldr	r2, [fp, #128]	; 0x80
   14124:	cmp	r2, #0
   14128:	beq	14160 <opt_j+0x178>
   1412c:	ldr	ip, [r9, #16]
   14130:	mov	r3, #0
   14134:	add	lr, fp, #136	; 0x88
   14138:	add	ip, ip, #136	; 0x88
   1413c:	ands	r1, r2, r4, lsl r3
   14140:	beq	14154 <opt_j+0x16c>
   14144:	ldr	r0, [ip, r3, lsl #2]
   14148:	ldr	r1, [lr, r3, lsl #2]
   1414c:	cmp	r0, r1
   14150:	bne	141a8 <opt_j+0x1c0>
   14154:	add	r3, r3, #1
   14158:	cmp	r3, #18
   1415c:	bne	1413c <opt_j+0x154>
   14160:	mov	r3, #0
   14164:	str	fp, [r9, #12]
   14168:	str	r3, [sp, #12]
   1416c:	mov	r3, #1
   14170:	str	r3, [sp, #8]
   14174:	ldr	r3, [fp, #60]	; 0x3c
   14178:	cmp	r3, #0
   1417c:	bne	14074 <opt_j+0x8c>
   14180:	ldr	r2, [pc, #224]	; 14268 <opt_j+0x280>
   14184:	add	r2, pc, r2
   14188:	str	r3, [r2, #876]	; 0x36c
   1418c:	add	sp, sp, #28
   14190:	ldrd	r4, [sp]
   14194:	ldrd	r6, [sp, #8]
   14198:	ldrd	r8, [sp, #16]
   1419c:	ldrd	sl, [sp, #24]
   141a0:	add	sp, sp, #32
   141a4:	pop	{pc}		; (ldr pc, [sp], #4)
   141a8:	cmp	r5, #0
   141ac:	bne	140a8 <opt_j+0xc0>
   141b0:	ldr	r3, [sp, #4]
   141b4:	ldr	r2, [sp, #20]
   141b8:	add	r3, r3, #1
   141bc:	cmp	r3, r2
   141c0:	str	r3, [sp, #4]
   141c4:	bne	14084 <opt_j+0x9c>
   141c8:	ldr	r3, [sp, #8]
   141cc:	cmp	r3, #0
   141d0:	beq	1418c <opt_j+0x1a4>
   141d4:	ldr	r3, [pc, #144]	; 1426c <opt_j+0x284>
   141d8:	ldr	r2, [sp, #12]
   141dc:	add	r3, pc, r3
   141e0:	str	r2, [r3, #876]	; 0x36c
   141e4:	b	1418c <opt_j+0x1a4>
   141e8:	cmp	r2, #0
   141ec:	beq	14114 <opt_j+0x12c>
   141f0:	ldr	fp, [sl, #60]	; 0x3c
   141f4:	b	14118 <opt_j+0x130>
   141f8:	ldr	ip, [r2, #128]	; 0x80
   141fc:	cmp	ip, #0
   14200:	beq	1423c <opt_j+0x254>
   14204:	ldr	r6, [r0, #16]
   14208:	mov	r3, #0
   1420c:	mov	lr, #1
   14210:	add	r7, r2, #136	; 0x88
   14214:	add	r6, r6, #136	; 0x88
   14218:	ands	r4, ip, lr, lsl r3
   1421c:	beq	14230 <opt_j+0x248>
   14220:	ldr	r5, [r6, r3, lsl #2]
   14224:	ldr	r4, [r7, r3, lsl #2]
   14228:	cmp	r5, r4
   1422c:	bne	14024 <opt_j+0x3c>
   14230:	add	r3, r3, #1
   14234:	cmp	r3, #18
   14238:	bne	14218 <opt_j+0x230>
   1423c:	ldr	r3, [pc, #44]	; 14270 <opt_j+0x288>
   14240:	mov	ip, #0
   14244:	str	r2, [r0, #12]
   14248:	str	ip, [sp, #12]
   1424c:	add	r3, pc, r3
   14250:	str	ip, [r3, #876]	; 0x36c
   14254:	b	14034 <opt_j+0x4c>
   14258:	.word	0x0002a004
   1425c:	.word	0x0002a704
   14260:	.word	0x0002a6f0
   14264:	.word	0x000000e4
   14268:	.word	0x0002a5a8
   1426c:	.word	0x0002a550
   14270:	.word	0x0002a4e0

00014274 <opt_blks>:
   14274:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14278:	mov	r4, #0
   1427c:	ldr	r5, [pc, #4080]	; 15274 <opt_blks+0x1000>
   14280:	strd	r6, [sp, #8]
   14284:	mov	r7, r0
   14288:	ldr	r6, [pc, #4072]	; 15278 <opt_blks+0x1004>
   1428c:	strd	r8, [sp, #16]
   14290:	strd	sl, [sp, #24]
   14294:	mov	sl, r1
   14298:	mov	r1, r4
   1429c:	str	lr, [sp, #32]
   142a0:	sub	sp, sp, #124	; 0x7c
   142a4:	add	r5, pc, r5
   142a8:	ldr	r2, [pc, #4044]	; 1527c <opt_blks+0x1008>
   142ac:	str	r0, [sp, #40]	; 0x28
   142b0:	add	r6, pc, r6
   142b4:	ldr	r0, [pc, #4036]	; 15280 <opt_blks+0x100c>
   142b8:	str	r6, [sp, #32]
   142bc:	str	r4, [r5, #860]	; 0x35c
   142c0:	ldr	r3, [pc, #4028]	; 15284 <opt_blks+0x1010>
   142c4:	ldr	r0, [r6, r0]
   142c8:	ldr	ip, [r6, r2]
   142cc:	ldr	r2, [r5, #880]	; 0x370
   142d0:	ldr	r0, [r0]
   142d4:	str	ip, [sp, #36]	; 0x24
   142d8:	lsl	r2, r2, #3
   142dc:	str	r0, [ip]
   142e0:	ldr	r9, [r6, r3]
   142e4:	ldr	r0, [r9]
   142e8:	bl	e2c <memset@plt>
   142ec:	mov	r1, r4
   142f0:	add	r0, r5, #8
   142f4:	mov	r2, #852	; 0x354
   142f8:	bl	e2c <memset@plt>
   142fc:	ldr	r0, [r5, #864]	; 0x360
   14300:	ldr	r3, [r7, #36]	; 0x24
   14304:	cmp	r0, r4
   14308:	str	r3, [sp, #28]
   1430c:	ble	15c2c <opt_blks+0x19b8>
   14310:	ldr	r3, [pc, #3952]	; 15288 <opt_blks+0x1014>
   14314:	mov	r1, r4
   14318:	ldr	r3, [r6, r3]
   1431c:	ldr	r3, [r3]
   14320:	add	r0, r3, r0, lsl #2
   14324:	ldr	r2, [r3], #4
   14328:	cmp	r0, r3
   1432c:	str	r1, [r2, #112]	; 0x70
   14330:	bne	14324 <opt_blks+0xb0>
   14334:	ldr	r3, [sp, #40]	; 0x28
   14338:	ldr	ip, [r3, #36]	; 0x24
   1433c:	cmp	ip, #0
   14340:	ble	143a0 <opt_blks+0x12c>
   14344:	ldr	r3, [pc, #3904]	; 1528c <opt_blks+0x1018>
   14348:	ldr	r2, [sp, #32]
   1434c:	ldr	r3, [r2, r3]
   14350:	ldr	lr, [r3]
   14354:	add	ip, lr, ip, lsl #2
   14358:	ldr	r3, [ip], #-4
   1435c:	cmp	r3, #0
   14360:	beq	14398 <opt_blks+0x124>
   14364:	ldr	r2, [r3, #60]	; 0x3c
   14368:	add	r0, r3, #48	; 0x30
   1436c:	add	r1, r3, #72	; 0x48
   14370:	ldr	r4, [r2, #112]	; 0x70
   14374:	str	r4, [r3, #68]	; 0x44
   14378:	str	r0, [r2, #112]	; 0x70
   1437c:	ldr	r2, [r3, #84]	; 0x54
   14380:	ldr	r0, [r2, #112]	; 0x70
   14384:	str	r0, [r3, #92]	; 0x5c
   14388:	str	r1, [r2, #112]	; 0x70
   1438c:	ldr	r3, [r3, #100]	; 0x64
   14390:	cmp	r3, #0
   14394:	bne	14364 <opt_blks+0xf0>
   14398:	cmp	lr, ip
   1439c:	bne	14358 <opt_blks+0xe4>
   143a0:	ldr	r3, [sp, #28]
   143a4:	cmp	r3, #0
   143a8:	blt	14e0c <opt_blks+0xb98>
   143ac:	mov	r2, r3
   143b0:	ldr	r3, [pc, #3796]	; 1528c <opt_blks+0x1018>
   143b4:	str	r2, [sp, #12]
   143b8:	ldr	r2, [pc, #3792]	; 15290 <opt_blks+0x101c>
   143bc:	add	r2, pc, r2
   143c0:	str	r2, [sp, #20]
   143c4:	ldr	r2, [pc, #3784]	; 15294 <opt_blks+0x1020>
   143c8:	add	r2, pc, r2
   143cc:	str	r2, [sp, #24]
   143d0:	ldr	r2, [pc, #3776]	; 15298 <opt_blks+0x1024>
   143d4:	add	r2, pc, r2
   143d8:	str	r2, [sp, #44]	; 0x2c
   143dc:	ldr	r2, [sp, #32]
   143e0:	ldr	r3, [r2, r3]
   143e4:	str	r9, [sp]
   143e8:	str	r3, [sp, #16]
   143ec:	ldrd	r2, [sp, #12]
   143f0:	ldr	r3, [r3]
   143f4:	ldr	r4, [r3, r2, lsl #2]
   143f8:	cmp	r4, #0
   143fc:	beq	14df8 <opt_blks+0xb84>
   14400:	mov	r9, #0
   14404:	ldr	r5, [r4, #112]	; 0x70
   14408:	add	r6, r4, #136	; 0x88
   1440c:	cmp	r5, #0
   14410:	beq	15548 <opt_blks+0x12d4>
   14414:	ldr	r1, [r5, #16]
   14418:	mov	r2, #72	; 0x48
   1441c:	mov	r0, r6
   14420:	add	r1, r1, #136	; 0x88
   14424:	bl	d6c <memcpy@plt>
   14428:	ldr	r3, [r5, #20]
   1442c:	cmp	r3, #0
   14430:	beq	14470 <opt_blks+0x1fc>
   14434:	add	r5, r4, #132	; 0x84
   14438:	mov	r1, r5
   1443c:	mov	r2, #0
   14440:	ldr	lr, [r3, #16]
   14444:	add	r0, r2, #34	; 0x22
   14448:	add	r2, r2, #1
   1444c:	ldr	ip, [r1, #4]!
   14450:	ldr	r0, [lr, r0, lsl #2]
   14454:	cmp	ip, r0
   14458:	strne	r9, [r1]
   1445c:	cmp	r2, #18
   14460:	bne	14440 <opt_blks+0x1cc>
   14464:	ldr	r3, [r3, #20]
   14468:	cmp	r3, #0
   1446c:	bne	14438 <opt_blks+0x1c4>
   14470:	ldr	r5, [r4, #4]
   14474:	ldr	r0, [r4, #200]	; 0xc8
   14478:	ldr	r8, [r4, #204]	; 0xcc
   1447c:	cmp	r5, #0
   14480:	beq	15748 <opt_blks+0x14d4>
   14484:	ldr	fp, [sp]
   14488:	mov	r7, r0
   1448c:	ldr	r3, [r5]
   14490:	cmp	r3, #177	; 0xb1
   14494:	addls	pc, pc, r3, lsl #2
   14498:	b	1478c <opt_blks+0x518>
   1449c:	b	14cf4 <opt_blks+0xa80>
   144a0:	b	14d10 <opt_blks+0xa9c>
   144a4:	b	14cd0 <opt_blks+0xa5c>
   144a8:	b	14d2c <opt_blks+0xab8>
   144ac:	b	14c50 <opt_blks+0x9dc>
   144b0:	b	1478c <opt_blks+0x518>
   144b4:	b	1478c <opt_blks+0x518>
   144b8:	b	14c40 <opt_blks+0x9cc>
   144bc:	b	1478c <opt_blks+0x518>
   144c0:	b	1478c <opt_blks+0x518>
   144c4:	b	1478c <opt_blks+0x518>
   144c8:	b	1478c <opt_blks+0x518>
   144cc:	b	14bdc <opt_blks+0x968>
   144d0:	b	1478c <opt_blks+0x518>
   144d4:	b	1478c <opt_blks+0x518>
   144d8:	b	1478c <opt_blks+0x518>
   144dc:	b	1478c <opt_blks+0x518>
   144e0:	b	1478c <opt_blks+0x518>
   144e4:	b	1478c <opt_blks+0x518>
   144e8:	b	1478c <opt_blks+0x518>
   144ec:	b	14c50 <opt_blks+0x9dc>
   144f0:	b	1478c <opt_blks+0x518>
   144f4:	b	1478c <opt_blks+0x518>
   144f8:	b	1478c <opt_blks+0x518>
   144fc:	b	1478c <opt_blks+0x518>
   14500:	b	1478c <opt_blks+0x518>
   14504:	b	1478c <opt_blks+0x518>
   14508:	b	1478c <opt_blks+0x518>
   1450c:	b	14bdc <opt_blks+0x968>
   14510:	b	1478c <opt_blks+0x518>
   14514:	b	1478c <opt_blks+0x518>
   14518:	b	1478c <opt_blks+0x518>
   1451c:	b	14bc0 <opt_blks+0x94c>
   14520:	b	1478c <opt_blks+0x518>
   14524:	b	1478c <opt_blks+0x518>
   14528:	b	1478c <opt_blks+0x518>
   1452c:	b	14c50 <opt_blks+0x9dc>
   14530:	b	1478c <opt_blks+0x518>
   14534:	b	1478c <opt_blks+0x518>
   14538:	b	1478c <opt_blks+0x518>
   1453c:	b	14bc0 <opt_blks+0x94c>
   14540:	b	1478c <opt_blks+0x518>
   14544:	b	1478c <opt_blks+0x518>
   14548:	b	1478c <opt_blks+0x518>
   1454c:	b	14bdc <opt_blks+0x968>
   14550:	b	1478c <opt_blks+0x518>
   14554:	b	1478c <opt_blks+0x518>
   14558:	b	1478c <opt_blks+0x518>
   1455c:	b	14bc0 <opt_blks+0x94c>
   14560:	b	1478c <opt_blks+0x518>
   14564:	b	1478c <opt_blks+0x518>
   14568:	b	1478c <opt_blks+0x518>
   1456c:	b	14c50 <opt_blks+0x9dc>
   14570:	b	1478c <opt_blks+0x518>
   14574:	b	1478c <opt_blks+0x518>
   14578:	b	1478c <opt_blks+0x518>
   1457c:	b	1478c <opt_blks+0x518>
   14580:	b	1478c <opt_blks+0x518>
   14584:	b	1478c <opt_blks+0x518>
   14588:	b	1478c <opt_blks+0x518>
   1458c:	b	14bdc <opt_blks+0x968>
   14590:	b	1478c <opt_blks+0x518>
   14594:	b	1478c <opt_blks+0x518>
   14598:	b	1478c <opt_blks+0x518>
   1459c:	b	14b7c <opt_blks+0x908>
   145a0:	b	1478c <opt_blks+0x518>
   145a4:	b	1478c <opt_blks+0x518>
   145a8:	b	1478c <opt_blks+0x518>
   145ac:	b	14c50 <opt_blks+0x9dc>
   145b0:	b	1478c <opt_blks+0x518>
   145b4:	b	1478c <opt_blks+0x518>
   145b8:	b	1478c <opt_blks+0x518>
   145bc:	b	14b7c <opt_blks+0x908>
   145c0:	b	1478c <opt_blks+0x518>
   145c4:	b	1478c <opt_blks+0x518>
   145c8:	b	1478c <opt_blks+0x518>
   145cc:	b	14bdc <opt_blks+0x968>
   145d0:	b	1478c <opt_blks+0x518>
   145d4:	b	1478c <opt_blks+0x518>
   145d8:	b	1478c <opt_blks+0x518>
   145dc:	b	14b7c <opt_blks+0x908>
   145e0:	b	1478c <opt_blks+0x518>
   145e4:	b	1478c <opt_blks+0x518>
   145e8:	b	1478c <opt_blks+0x518>
   145ec:	b	14c50 <opt_blks+0x9dc>
   145f0:	b	1478c <opt_blks+0x518>
   145f4:	b	1478c <opt_blks+0x518>
   145f8:	b	1478c <opt_blks+0x518>
   145fc:	b	1478c <opt_blks+0x518>
   14600:	b	1478c <opt_blks+0x518>
   14604:	b	1478c <opt_blks+0x518>
   14608:	b	1478c <opt_blks+0x518>
   1460c:	b	14bdc <opt_blks+0x968>
   14610:	b	1478c <opt_blks+0x518>
   14614:	b	1478c <opt_blks+0x518>
   14618:	b	1478c <opt_blks+0x518>
   1461c:	b	14b24 <opt_blks+0x8b0>
   14620:	b	14acc <opt_blks+0x858>
   14624:	b	1478c <opt_blks+0x518>
   14628:	b	1478c <opt_blks+0x518>
   1462c:	b	14c50 <opt_blks+0x9dc>
   14630:	b	1478c <opt_blks+0x518>
   14634:	b	1478c <opt_blks+0x518>
   14638:	b	1478c <opt_blks+0x518>
   1463c:	b	1478c <opt_blks+0x518>
   14640:	b	1478c <opt_blks+0x518>
   14644:	b	1478c <opt_blks+0x518>
   14648:	b	1478c <opt_blks+0x518>
   1464c:	b	14bdc <opt_blks+0x968>
   14650:	b	1478c <opt_blks+0x518>
   14654:	b	1478c <opt_blks+0x518>
   14658:	b	1478c <opt_blks+0x518>
   1465c:	b	1478c <opt_blks+0x518>
   14660:	b	1478c <opt_blks+0x518>
   14664:	b	1478c <opt_blks+0x518>
   14668:	b	1478c <opt_blks+0x518>
   1466c:	b	14c50 <opt_blks+0x9dc>
   14670:	b	1478c <opt_blks+0x518>
   14674:	b	1478c <opt_blks+0x518>
   14678:	b	1478c <opt_blks+0x518>
   1467c:	b	1478c <opt_blks+0x518>
   14680:	b	1478c <opt_blks+0x518>
   14684:	b	1478c <opt_blks+0x518>
   14688:	b	1478c <opt_blks+0x518>
   1468c:	b	14bdc <opt_blks+0x968>
   14690:	b	1478c <opt_blks+0x518>
   14694:	b	1478c <opt_blks+0x518>
   14698:	b	1478c <opt_blks+0x518>
   1469c:	b	14a80 <opt_blks+0x80c>
   146a0:	b	1478c <opt_blks+0x518>
   146a4:	b	1478c <opt_blks+0x518>
   146a8:	b	1478c <opt_blks+0x518>
   146ac:	b	14a50 <opt_blks+0x7dc>
   146b0:	b	1478c <opt_blks+0x518>
   146b4:	b	1478c <opt_blks+0x518>
   146b8:	b	14aac <opt_blks+0x838>
   146bc:	b	1478c <opt_blks+0x518>
   146c0:	b	1478c <opt_blks+0x518>
   146c4:	b	1478c <opt_blks+0x518>
   146c8:	b	1478c <opt_blks+0x518>
   146cc:	b	1478c <opt_blks+0x518>
   146d0:	b	1478c <opt_blks+0x518>
   146d4:	b	1478c <opt_blks+0x518>
   146d8:	b	1478c <opt_blks+0x518>
   146dc:	b	1478c <opt_blks+0x518>
   146e0:	b	1478c <opt_blks+0x518>
   146e4:	b	1478c <opt_blks+0x518>
   146e8:	b	1478c <opt_blks+0x518>
   146ec:	b	1478c <opt_blks+0x518>
   146f0:	b	1478c <opt_blks+0x518>
   146f4:	b	1478c <opt_blks+0x518>
   146f8:	b	1478c <opt_blks+0x518>
   146fc:	b	1478c <opt_blks+0x518>
   14700:	b	1478c <opt_blks+0x518>
   14704:	b	1478c <opt_blks+0x518>
   14708:	b	1478c <opt_blks+0x518>
   1470c:	b	1478c <opt_blks+0x518>
   14710:	b	1478c <opt_blks+0x518>
   14714:	b	1478c <opt_blks+0x518>
   14718:	b	1478c <opt_blks+0x518>
   1471c:	b	1478c <opt_blks+0x518>
   14720:	b	1478c <opt_blks+0x518>
   14724:	b	1478c <opt_blks+0x518>
   14728:	b	1478c <opt_blks+0x518>
   1472c:	b	1478c <opt_blks+0x518>
   14730:	b	1478c <opt_blks+0x518>
   14734:	b	1478c <opt_blks+0x518>
   14738:	b	1478c <opt_blks+0x518>
   1473c:	b	1478c <opt_blks+0x518>
   14740:	b	1478c <opt_blks+0x518>
   14744:	b	1478c <opt_blks+0x518>
   14748:	b	1478c <opt_blks+0x518>
   1474c:	b	1478c <opt_blks+0x518>
   14750:	b	1478c <opt_blks+0x518>
   14754:	b	1478c <opt_blks+0x518>
   14758:	b	1478c <opt_blks+0x518>
   1475c:	b	1478c <opt_blks+0x518>
   14760:	b	14764 <opt_blks+0x4f0>
   14764:	mov	r2, #0
   14768:	mov	r0, #177	; 0xb1
   1476c:	ldr	r1, [r5, #12]
   14770:	bl	136f0 <F>
   14774:	cmp	sl, #0
   14778:	beq	14788 <opt_blks+0x514>
   1477c:	ldr	r3, [r4, #204]	; 0xcc
   14780:	cmp	r0, r3
   14784:	beq	14b70 <opt_blks+0x8fc>
   14788:	str	r0, [r4, #204]	; 0xcc
   1478c:	ldr	r5, [r5, #16]
   14790:	cmp	r5, #0
   14794:	bne	1448c <opt_blks+0x218>
   14798:	cmp	sl, #0
   1479c:	mov	r0, r7
   147a0:	ldr	r5, [r4, #4]
   147a4:	beq	147d4 <opt_blks+0x560>
   147a8:	adds	r2, r0, #0
   147ac:	ldr	r3, [r4, #8]
   147b0:	movne	r2, #1
   147b4:	ldr	r1, [r4, #128]	; 0x80
   147b8:	cmp	r1, #0
   147bc:	movne	r2, #0
   147c0:	cmp	r2, #0
   147c4:	bne	155e4 <opt_blks+0x1370>
   147c8:	and	r2, r3, #7
   147cc:	cmp	r2, #6
   147d0:	beq	15610 <opt_blks+0x139c>
   147d4:	cmp	r5, #0
   147d8:	beq	15750 <opt_blks+0x14dc>
   147dc:	ldr	r3, [pc, #2744]	; 1529c <opt_blks+0x1028>
   147e0:	mov	r6, #0
   147e4:	mov	fp, #1
   147e8:	ldr	lr, [r5]
   147ec:	ldr	r2, [r5, #16]
   147f0:	add	r3, pc, r3
   147f4:	ldr	ip, [r3, #876]	; 0x36c
   147f8:	cmn	lr, #1
   147fc:	movne	r3, r2
   14800:	movne	r0, lr
   14804:	movne	r2, r5
   14808:	bne	15360 <opt_blks+0x10ec>
   1480c:	cmp	r2, #0
   14810:	beq	1482c <opt_blks+0x5b8>
   14814:	ldr	r0, [r2]
   14818:	ldr	r3, [r2, #16]
   1481c:	cmn	r0, #1
   14820:	bne	15360 <opt_blks+0x10ec>
   14824:	subs	r2, r3, #0
   14828:	bne	14814 <opt_blks+0x5a0>
   1482c:	cmp	r6, #0
   14830:	beq	14840 <opt_blks+0x5cc>
   14834:	ldr	r3, [pc, #2660]	; 152a0 <opt_blks+0x102c>
   14838:	add	r3, pc, r3
   1483c:	str	ip, [r3, #876]	; 0x36c
   14840:	ldr	r3, [r4, #8]
   14844:	cmp	r3, #21
   14848:	beq	15494 <opt_blks+0x1220>
   1484c:	ldr	r2, [sp]
   14850:	cmp	r3, #69	; 0x45
   14854:	ldr	r1, [r4, #204]	; 0xcc
   14858:	ldr	r2, [r2]
   1485c:	add	ip, r2, r1, lsl #3
   14860:	beq	1562c <opt_blks+0x13b8>
   14864:	ldr	r1, [r2, r1, lsl #3]
   14868:	cmp	r1, #0
   1486c:	ldr	r0, [r4, #200]	; 0xc8
   14870:	add	r1, r2, r0, lsl #3
   14874:	beq	154f0 <opt_blks+0x127c>
   14878:	tst	r3, #8
   1487c:	beq	14890 <opt_blks+0x61c>
   14880:	ldr	r2, [ip, #4]
   14884:	bic	r3, r3, #8
   14888:	str	r3, [r4, #8]
   1488c:	str	r2, [r4, #20]
   14890:	ldr	r2, [r1]
   14894:	cmp	r2, #0
   14898:	beq	15504 <opt_blks+0x1290>
   1489c:	and	r3, r3, #240	; 0xf0
   148a0:	ldr	r2, [r1, #4]
   148a4:	cmp	r3, #32
   148a8:	beq	156c0 <opt_blks+0x144c>
   148ac:	bgt	15678 <opt_blks+0x1404>
   148b0:	cmp	r3, #16
   148b4:	bne	15c50 <opt_blks+0x19dc>
   148b8:	ldr	r0, [r4, #20]
   148bc:	sub	r2, r0, r2
   148c0:	clz	r2, r2
   148c4:	lsr	r2, r2, #5
   148c8:	ldr	r1, [r4, #60]	; 0x3c
   148cc:	ldr	r3, [r4, #84]	; 0x54
   148d0:	cmp	r3, r1
   148d4:	beq	148e4 <opt_blks+0x670>
   148d8:	ldr	r0, [pc, #2500]	; 152a4 <opt_blks+0x1030>
   148dc:	add	r0, pc, r0
   148e0:	str	r9, [r0, #876]	; 0x36c
   148e4:	ldr	r5, [r4, #4]
   148e8:	cmp	r2, #0
   148ec:	strne	r1, [r4, #84]	; 0x54
   148f0:	streq	r3, [r4, #60]	; 0x3c
   148f4:	add	r8, sp, #48	; 0x30
   148f8:	mov	r2, #72	; 0x48
   148fc:	mov	r0, r8
   14900:	mov	r1, #0
   14904:	bl	e2c <memset@plt>
   14908:	cmp	r5, #0
   1490c:	beq	149bc <opt_blks+0x748>
   14910:	ldr	fp, [pc, #2448]	; 152a8 <opt_blks+0x1034>
   14914:	mov	r6, #0
   14918:	mov	r7, #0
   1491c:	add	fp, pc, fp
   14920:	mov	r1, r5
   14924:	ldr	r2, [r1], #12
   14928:	mov	r0, r2
   1492c:	bl	13e2c <atomuse.isra.8>
   14930:	cmp	r0, #0
   14934:	blt	1494c <opt_blks+0x6d8>
   14938:	cmp	r0, #18
   1493c:	addne	r3, sp, #120	; 0x78
   14940:	addne	r0, r3, r0, lsl #2
   14944:	strdeq	r6, [sp, #112]	; 0x70
   14948:	strne	r9, [r0, #-72]	; 0xffffffb8
   1494c:	cmn	r2, #1
   14950:	beq	149b0 <opt_blks+0x73c>
   14954:	and	r3, r2, #7
   14958:	cmp	r3, #7
   1495c:	addls	pc, pc, r3, lsl #2
   14960:	b	149b0 <opt_blks+0x73c>
   14964:	b	14a34 <opt_blks+0x7c0>
   14968:	b	14a2c <opt_blks+0x7b8>
   1496c:	b	14a3c <opt_blks+0x7c8>
   14970:	b	14a3c <opt_blks+0x7c8>
   14974:	b	14a34 <opt_blks+0x7c0>
   14978:	b	149b0 <opt_blks+0x73c>
   1497c:	b	149b0 <opt_blks+0x73c>
   14980:	b	14984 <opt_blks+0x710>
   14984:	tst	r2, #248	; 0xf8
   14988:	movne	r3, #64	; 0x40
   1498c:	moveq	r3, #68	; 0x44
   14990:	ldr	r2, [r8, r3]
   14994:	add	r3, r8, r3
   14998:	cmp	r2, #0
   1499c:	beq	149ac <opt_blks+0x738>
   149a0:	mvn	r1, #0
   149a4:	str	r9, [fp, #876]	; 0x36c
   149a8:	str	r1, [r2]
   149ac:	str	r5, [r3]
   149b0:	ldr	r5, [r5, #16]
   149b4:	cmp	r5, #0
   149b8:	bne	14920 <opt_blks+0x6ac>
   149bc:	ldr	r2, [r4, #8]
   149c0:	add	r1, r4, #20
   149c4:	mov	r0, r2
   149c8:	bl	13e2c <atomuse.isra.8>
   149cc:	cmp	r0, #0
   149d0:	blt	149f4 <opt_blks+0x780>
   149d4:	cmp	r0, #18
   149d8:	moveq	r0, #0
   149dc:	moveq	r1, #0
   149e0:	strdeq	r0, [sp, #112]	; 0x70
   149e4:	beq	149f4 <opt_blks+0x780>
   149e8:	add	r3, sp, #120	; 0x78
   149ec:	add	r0, r3, r0, lsl #2
   149f0:	str	r9, [r0, #-72]	; 0xffffffb8
   149f4:	cmn	r2, #1
   149f8:	beq	15340 <opt_blks+0x10cc>
   149fc:	and	r3, r2, #7
   14a00:	cmp	r3, #7
   14a04:	addls	pc, pc, r3, lsl #2
   14a08:	b	15350 <opt_blks+0x10dc>
   14a0c:	b	152fc <opt_blks+0x1088>
   14a10:	b	14d40 <opt_blks+0xacc>
   14a14:	b	15330 <opt_blks+0x10bc>
   14a18:	b	15330 <opt_blks+0x10bc>
   14a1c:	b	152fc <opt_blks+0x1088>
   14a20:	b	15350 <opt_blks+0x10dc>
   14a24:	b	15350 <opt_blks+0x10dc>
   14a28:	b	15320 <opt_blks+0x10ac>
   14a2c:	mov	r3, #68	; 0x44
   14a30:	b	14990 <opt_blks+0x71c>
   14a34:	mov	r3, #64	; 0x40
   14a38:	b	14990 <opt_blks+0x71c>
   14a3c:	ldr	r3, [r5, #12]
   14a40:	cmp	r3, #0
   14a44:	lslge	r3, r3, #2
   14a48:	blt	149b0 <opt_blks+0x73c>
   14a4c:	b	14990 <opt_blks+0x71c>
   14a50:	cmp	sl, #0
   14a54:	ldr	r1, [r4, #200]	; 0xc8
   14a58:	beq	14a6c <opt_blks+0x7f8>
   14a5c:	ldr	r3, [fp]
   14a60:	ldr	r3, [r3, r1, lsl #3]
   14a64:	cmp	r3, #0
   14a68:	bne	15714 <opt_blks+0x14a0>
   14a6c:	mov	r2, #0
   14a70:	mov	r0, #132	; 0x84
   14a74:	bl	136f0 <F>
   14a78:	str	r0, [r4, #200]	; 0xc8
   14a7c:	b	1478c <opt_blks+0x518>
   14a80:	mov	r2, #0
   14a84:	mov	r0, #128	; 0x80
   14a88:	mov	r1, r2
   14a8c:	bl	136f0 <F>
   14a90:	cmp	sl, #0
   14a94:	beq	14aa4 <opt_blks+0x830>
   14a98:	ldr	r3, [r4, #200]	; 0xc8
   14a9c:	cmp	r0, r3
   14aa0:	beq	14b70 <opt_blks+0x8fc>
   14aa4:	str	r0, [r4, #200]	; 0xc8
   14aa8:	b	1478c <opt_blks+0x518>
   14aac:	cmp	sl, #0
   14ab0:	ldr	r3, [r4, #204]	; 0xcc
   14ab4:	beq	14ac4 <opt_blks+0x850>
   14ab8:	ldr	r2, [r4, #200]	; 0xc8
   14abc:	cmp	r3, r2
   14ac0:	beq	14b70 <opt_blks+0x8fc>
   14ac4:	str	r3, [r4, #200]	; 0xc8
   14ac8:	b	1478c <opt_blks+0x518>
   14acc:	ldr	r3, [r5, #12]
   14ad0:	cmp	sl, #0
   14ad4:	ldr	r3, [r6, r3, lsl #2]
   14ad8:	beq	14b1c <opt_blks+0x8a8>
   14adc:	lsl	r0, r3, #3
   14ae0:	ldr	r1, [fp]
   14ae4:	ldr	r1, [r1, r3, lsl #3]
   14ae8:	cmp	r1, #0
   14aec:	beq	14b10 <opt_blks+0x89c>
   14af0:	mov	r2, #1
   14af4:	ldr	r1, [sp, #20]
   14af8:	str	r2, [r5]
   14afc:	ldr	r2, [fp]
   14b00:	str	r9, [r1, #876]	; 0x36c
   14b04:	add	r2, r2, r0
   14b08:	ldr	r2, [r2, #4]
   14b0c:	str	r2, [r5, #12]
   14b10:	ldr	r2, [r4, #204]	; 0xcc
   14b14:	cmp	r3, r2
   14b18:	beq	14b70 <opt_blks+0x8fc>
   14b1c:	str	r3, [r4, #204]	; 0xcc
   14b20:	b	1478c <opt_blks+0x518>
   14b24:	ldr	r3, [r5, #12]
   14b28:	cmp	sl, #0
   14b2c:	ldr	r3, [r6, r3, lsl #2]
   14b30:	beq	14ac4 <opt_blks+0x850>
   14b34:	lsl	r0, r3, #3
   14b38:	ldr	r1, [fp]
   14b3c:	ldr	r1, [r1, r3, lsl #3]
   14b40:	cmp	r1, #0
   14b44:	beq	14ab8 <opt_blks+0x844>
   14b48:	str	r9, [r5]
   14b4c:	ldr	r2, [fp]
   14b50:	ldr	r1, [sp, #24]
   14b54:	add	r2, r2, r0
   14b58:	ldr	r2, [r2, #4]
   14b5c:	str	r9, [r1, #876]	; 0x36c
   14b60:	str	r2, [r5, #12]
   14b64:	ldr	r2, [r4, #200]	; 0xc8
   14b68:	cmp	r3, r2
   14b6c:	bne	14ac4 <opt_blks+0x850>
   14b70:	mvn	r3, #0
   14b74:	str	r3, [r5]
   14b78:	b	1478c <opt_blks+0x518>
   14b7c:	cmp	sl, #0
   14b80:	ldr	r1, [r5, #12]
   14b84:	ldr	r2, [r4, #204]	; 0xcc
   14b88:	beq	154e4 <opt_blks+0x1270>
   14b8c:	lsl	ip, r2, #3
   14b90:	ldr	r0, [fp]
   14b94:	ldr	r0, [r0, r2, lsl #3]
   14b98:	cmp	r0, #0
   14b9c:	bne	156d4 <opt_blks+0x1460>
   14ba0:	mov	r0, r3
   14ba4:	bl	136f0 <F>
   14ba8:	ldr	r3, [r4, #200]	; 0xc8
   14bac:	cmp	r3, r0
   14bb0:	bne	14aa4 <opt_blks+0x830>
   14bb4:	mvn	r3, #0
   14bb8:	str	r3, [r5]
   14bbc:	b	1478c <opt_blks+0x518>
   14bc0:	mov	r0, r3
   14bc4:	mov	r2, #0
   14bc8:	ldr	r1, [r5, #12]
   14bcc:	bl	136f0 <F>
   14bd0:	cmp	sl, #0
   14bd4:	beq	14aa4 <opt_blks+0x830>
   14bd8:	b	14a98 <opt_blks+0x824>
   14bdc:	cmp	sl, #0
   14be0:	ldr	r1, [r4, #200]	; 0xc8
   14be4:	ldr	r2, [r4, #204]	; 0xcc
   14be8:	beq	154e4 <opt_blks+0x1270>
   14bec:	and	r0, r3, #240	; 0xf0
   14bf0:	ldr	ip, [fp]
   14bf4:	str	r0, [sp, #4]
   14bf8:	ldr	lr, [ip, r2, lsl #3]
   14bfc:	add	r0, ip, r1, lsl #3
   14c00:	ldr	ip, [ip, r1, lsl #3]
   14c04:	cmp	lr, #0
   14c08:	beq	155a8 <opt_blks+0x1334>
   14c0c:	cmp	ip, #0
   14c10:	beq	157fc <opt_blks+0x1588>
   14c14:	mov	r3, r2
   14c18:	mov	r2, r1
   14c1c:	add	r1, r5, #12
   14c20:	mov	r0, r5
   14c24:	bl	13ed4 <fold_op.isra.10>
   14c28:	mov	r2, #0
   14c2c:	ldr	r1, [r5, #12]
   14c30:	mov	r0, r2
   14c34:	bl	136f0 <F>
   14c38:	str	r0, [r4, #200]	; 0xc8
   14c3c:	b	1478c <opt_blks+0x518>
   14c40:	cmp	sl, #0
   14c44:	ldr	r3, [r4, #200]	; 0xc8
   14c48:	beq	14b1c <opt_blks+0x8a8>
   14c4c:	b	14b10 <opt_blks+0x89c>
   14c50:	cmp	sl, #0
   14c54:	ldr	r1, [r5, #12]
   14c58:	beq	1566c <opt_blks+0x13f8>
   14c5c:	cmp	r1, #0
   14c60:	bne	14c90 <opt_blks+0xa1c>
   14c64:	and	r2, r3, #224	; 0xe0
   14c68:	and	r0, r3, #176	; 0xb0
   14c6c:	cmp	r0, #0
   14c70:	cmpne	r2, #96	; 0x60
   14c74:	moveq	r2, #1
   14c78:	movne	r2, #0
   14c7c:	beq	14b70 <opt_blks+0x8fc>
   14c80:	and	r0, r3, #240	; 0xf0
   14c84:	cmp	r0, #80	; 0x50
   14c88:	cmpne	r0, #32
   14c8c:	beq	15b78 <opt_blks+0x1904>
   14c90:	ldr	r2, [fp]
   14c94:	ldr	r0, [r4, #200]	; 0xc8
   14c98:	ldr	r2, [r2, r0, lsl #3]
   14c9c:	str	r0, [sp, #4]
   14ca0:	cmp	r2, #0
   14ca4:	bne	157e4 <opt_blks+0x1570>
   14ca8:	mov	r2, #0
   14cac:	str	r3, [sp, #8]
   14cb0:	mov	r0, r2
   14cb4:	bl	136f0 <F>
   14cb8:	ldmib	sp, {r1, r3}
   14cbc:	mov	r2, r0
   14cc0:	mov	r0, r3
   14cc4:	bl	136f0 <F>
   14cc8:	str	r0, [r4, #200]	; 0xc8
   14ccc:	b	1478c <opt_blks+0x518>
   14cd0:	cmp	sl, #0
   14cd4:	ldr	r3, [r5, #12]
   14cd8:	ldr	r2, [r4, #200]	; 0xc8
   14cdc:	beq	14cec <opt_blks+0xa78>
   14ce0:	ldr	r1, [r6, r3, lsl #2]
   14ce4:	cmp	r2, r1
   14ce8:	beq	14b70 <opt_blks+0x8fc>
   14cec:	str	r2, [r6, r3, lsl #2]
   14cf0:	b	1478c <opt_blks+0x518>
   14cf4:	mov	r2, #0
   14cf8:	ldr	r1, [r5, #12]
   14cfc:	mov	r0, r2
   14d00:	bl	136f0 <F>
   14d04:	cmp	sl, #0
   14d08:	beq	14aa4 <opt_blks+0x830>
   14d0c:	b	14a98 <opt_blks+0x824>
   14d10:	mov	r2, #0
   14d14:	ldr	r1, [r5, #12]
   14d18:	mov	r0, r2
   14d1c:	bl	136f0 <F>
   14d20:	cmp	sl, #0
   14d24:	beq	14788 <opt_blks+0x514>
   14d28:	b	1477c <opt_blks+0x508>
   14d2c:	cmp	sl, #0
   14d30:	ldr	r3, [r5, #12]
   14d34:	ldr	r2, [r4, #204]	; 0xcc
   14d38:	beq	14cec <opt_blks+0xa78>
   14d3c:	b	14ce0 <opt_blks+0xa6c>
   14d40:	mov	r3, #68	; 0x44
   14d44:	ldr	r2, [r8, r3]
   14d48:	add	r8, r8, r3
   14d4c:	cmp	r2, #0
   14d50:	beq	15310 <opt_blks+0x109c>
   14d54:	ldr	r3, [pc, #1360]	; 152ac <opt_blks+0x1038>
   14d58:	mvn	r1, #0
   14d5c:	mov	r5, #0
   14d60:	str	r1, [r2]
   14d64:	add	r3, pc, r3
   14d68:	str	r9, [r3, #876]	; 0x36c
   14d6c:	add	r3, r4, #8
   14d70:	str	r3, [r8]
   14d74:	mov	r0, #0
   14d78:	add	lr, sp, #44	; 0x2c
   14d7c:	mov	r3, r0
   14d80:	mov	ip, #1
   14d84:	mvn	r6, #0
   14d88:	ldr	r1, [lr, #4]!
   14d8c:	cmp	r1, #0
   14d90:	beq	14dac <opt_blks+0xb38>
   14d94:	ldr	r2, [r4, #128]	; 0x80
   14d98:	ands	r2, r2, ip, lsl r3
   14d9c:	bne	14dac <opt_blks+0xb38>
   14da0:	mov	r5, r2
   14da4:	mov	r0, #1
   14da8:	str	r6, [r1]
   14dac:	add	r3, r3, #1
   14db0:	cmp	r3, #18
   14db4:	bne	14d88 <opt_blks+0xb14>
   14db8:	cmp	r0, #0
   14dbc:	beq	14dcc <opt_blks+0xb58>
   14dc0:	ldr	r3, [pc, #1256]	; 152b0 <opt_blks+0x103c>
   14dc4:	add	r3, pc, r3
   14dc8:	str	r5, [r3, #876]	; 0x36c
   14dcc:	ldr	r3, [r4, #8]
   14dd0:	ands	r2, r3, #8
   14dd4:	beq	1550c <opt_blks+0x1298>
   14dd8:	ldr	r2, [r4, #204]	; 0xcc
   14ddc:	rsb	r1, r3, #0
   14de0:	str	r3, [r4, #52]	; 0x34
   14de4:	str	r1, [r4, #76]	; 0x4c
   14de8:	str	r2, [r4, #132]	; 0x84
   14dec:	ldr	r4, [r4, #100]	; 0x64
   14df0:	cmp	r4, #0
   14df4:	bne	14404 <opt_blks+0x190>
   14df8:	ldr	r3, [sp, #12]
   14dfc:	sub	r3, r3, #1
   14e00:	cmn	r3, #1
   14e04:	str	r3, [sp, #12]
   14e08:	bne	143ec <opt_blks+0x178>
   14e0c:	cmp	sl, #0
   14e10:	bne	15258 <opt_blks+0xfe4>
   14e14:	ldr	r3, [sp, #28]
   14e18:	cmp	r3, #0
   14e1c:	ble	14e70 <opt_blks+0xbfc>
   14e20:	mov	r2, r3
   14e24:	ldr	r3, [pc, #1120]	; 1528c <opt_blks+0x1018>
   14e28:	mov	r5, #1
   14e2c:	add	r6, r2, #1
   14e30:	ldr	r2, [sp, #32]
   14e34:	ldr	r7, [r2, r3]
   14e38:	ldr	r3, [r7]
   14e3c:	ldr	r4, [r3, r5, lsl #2]
   14e40:	cmp	r4, #0
   14e44:	beq	14e64 <opt_blks+0xbf0>
   14e48:	add	r0, r4, #48	; 0x30
   14e4c:	bl	13fe8 <opt_j>
   14e50:	add	r0, r4, #72	; 0x48
   14e54:	bl	13fe8 <opt_j>
   14e58:	ldr	r4, [r4, #100]	; 0x64
   14e5c:	cmp	r4, #0
   14e60:	bne	14e48 <opt_blks+0xbd4>
   14e64:	add	r5, r5, #1
   14e68:	cmp	r5, r6
   14e6c:	bne	14e38 <opt_blks+0xbc4>
   14e70:	ldr	r3, [pc, #1084]	; 152b4 <opt_blks+0x1040>
   14e74:	add	r3, pc, r3
   14e78:	ldr	r1, [r3, #864]	; 0x360
   14e7c:	cmp	r1, #0
   14e80:	ble	14eac <opt_blks+0xc38>
   14e84:	ldr	r3, [pc, #1020]	; 15288 <opt_blks+0x1014>
   14e88:	mov	r0, #0
   14e8c:	ldr	r2, [sp, #32]
   14e90:	ldr	r3, [r2, r3]
   14e94:	ldr	r3, [r3]
   14e98:	add	r1, r3, r1, lsl #2
   14e9c:	ldr	r2, [r3], #4
   14ea0:	cmp	r1, r3
   14ea4:	str	r0, [r2, #112]	; 0x70
   14ea8:	bne	14e9c <opt_blks+0xc28>
   14eac:	ldr	r3, [sp, #40]	; 0x28
   14eb0:	ldr	lr, [r3, #36]	; 0x24
   14eb4:	cmp	lr, #0
   14eb8:	ble	14f18 <opt_blks+0xca4>
   14ebc:	ldr	r3, [pc, #968]	; 1528c <opt_blks+0x1018>
   14ec0:	ldr	r2, [sp, #32]
   14ec4:	ldr	r3, [r2, r3]
   14ec8:	ldr	r4, [r3]
   14ecc:	add	lr, r4, lr, lsl #2
   14ed0:	ldr	r3, [lr], #-4
   14ed4:	cmp	r3, #0
   14ed8:	beq	14f10 <opt_blks+0xc9c>
   14edc:	ldr	r2, [r3, #60]	; 0x3c
   14ee0:	add	r0, r3, #48	; 0x30
   14ee4:	add	r1, r3, #72	; 0x48
   14ee8:	ldr	ip, [r2, #112]	; 0x70
   14eec:	str	ip, [r3, #68]	; 0x44
   14ef0:	str	r0, [r2, #112]	; 0x70
   14ef4:	ldr	r2, [r3, #84]	; 0x54
   14ef8:	ldr	r0, [r2, #112]	; 0x70
   14efc:	str	r0, [r3, #92]	; 0x5c
   14f00:	str	r1, [r2, #112]	; 0x70
   14f04:	ldr	r3, [r3, #100]	; 0x64
   14f08:	cmp	r3, #0
   14f0c:	bne	14edc <opt_blks+0xc68>
   14f10:	cmp	lr, r4
   14f14:	bne	14ed0 <opt_blks+0xc5c>
   14f18:	ldr	r3, [sp, #28]
   14f1c:	cmp	r3, #0
   14f20:	ble	15258 <opt_blks+0xfe4>
   14f24:	ldr	r2, [pc, #908]	; 152b8 <opt_blks+0x1044>
   14f28:	mov	fp, #1
   14f2c:	add	r3, r3, fp
   14f30:	str	fp, [sp]
   14f34:	str	r3, [sp, #4]
   14f38:	mov	r3, #0
   14f3c:	add	r2, pc, r2
   14f40:	str	r3, [sp, #8]
   14f44:	ldr	r2, [r2, #876]	; 0x36c
   14f48:	ldr	r3, [pc, #828]	; 1528c <opt_blks+0x1018>
   14f4c:	str	r2, [sp, #12]
   14f50:	ldr	r2, [sp, #32]
   14f54:	ldr	r3, [r2, r3]
   14f58:	str	r3, [sp, #16]
   14f5c:	ldr	r2, [sp]
   14f60:	ldr	r3, [sp, #16]
   14f64:	ldr	r3, [r3]
   14f68:	ldr	ip, [r3, r2, lsl #2]
   14f6c:	cmp	ip, #0
   14f70:	beq	15224 <opt_blks+0xfb0>
   14f74:	ldr	r3, [ip, #112]	; 0x70
   14f78:	cmp	r3, #0
   14f7c:	beq	15218 <opt_blks+0xfa4>
   14f80:	ldr	lr, [r3, #16]
   14f84:	ldr	r2, [r3, #20]
   14f88:	ldr	r1, [lr, #200]	; 0xc8
   14f8c:	cmp	r2, #0
   14f90:	beq	14fc8 <opt_blks+0xd54>
   14f94:	ldr	r3, [r2, #16]
   14f98:	ldr	r3, [r3, #200]	; 0xc8
   14f9c:	cmp	r1, r3
   14fa0:	bne	150dc <opt_blks+0xe68>
   14fa4:	mov	r3, r2
   14fa8:	b	14fbc <opt_blks+0xd48>
   14fac:	ldr	r0, [r3, #16]
   14fb0:	ldr	r0, [r0, #200]	; 0xc8
   14fb4:	cmp	r1, r0
   14fb8:	bne	150dc <opt_blks+0xe68>
   14fbc:	ldr	r3, [r3, #20]
   14fc0:	cmp	r3, #0
   14fc4:	bne	14fac <opt_blks+0xd38>
   14fc8:	ldr	r3, [lr, #60]	; 0x3c
   14fcc:	cmp	r3, ip
   14fd0:	addeq	r8, lr, #60	; 0x3c
   14fd4:	moveq	r3, ip
   14fd8:	beq	14fec <opt_blks+0xd78>
   14fdc:	ldr	r3, [lr, #84]	; 0x54
   14fe0:	add	r8, lr, #84	; 0x54
   14fe4:	cmp	r3, #0
   14fe8:	beq	150d4 <opt_blks+0xe60>
   14fec:	ldr	r0, [r3, #60]	; 0x3c
   14ff0:	ldr	r5, [ip, #60]	; 0x3c
   14ff4:	cmp	r0, r5
   14ff8:	bne	150d4 <opt_blks+0xe60>
   14ffc:	ldr	r4, [ip]
   15000:	ldr	r0, [r3, #104]	; 0x68
   15004:	lsr	sl, r4, #5
   15008:	and	r4, r4, #31
   1500c:	lsl	r4, fp, r4
   15010:	ldr	r0, [r0, sl, lsl #2]
   15014:	lsl	r7, sl, #2
   15018:	tst	r4, r0
   1501c:	beq	150d4 <opt_blks+0xe60>
   15020:	mov	r9, #1
   15024:	b	15058 <opt_blks+0xde4>
   15028:	cmp	r0, #0
   1502c:	beq	150d4 <opt_blks+0xe60>
   15030:	ldr	r6, [r0, #60]	; 0x3c
   15034:	cmp	r6, r5
   15038:	bne	150d4 <opt_blks+0xe60>
   1503c:	ldr	r6, [r0, #104]	; 0x68
   15040:	mov	r8, r3
   15044:	mov	r3, r0
   15048:	mov	r9, #0
   1504c:	ldr	r0, [r6, r7]
   15050:	tst	r4, r0
   15054:	beq	150d4 <opt_blks+0xe60>
   15058:	ldr	r6, [r3, #200]	; 0xc8
   1505c:	ldr	r0, [r3, #84]!	; 0x54
   15060:	cmp	r1, r6
   15064:	beq	15028 <opt_blks+0xdb4>
   15068:	cmp	r0, #0
   1506c:	beq	150d4 <opt_blks+0xe60>
   15070:	ldr	r6, [r0, #60]	; 0x3c
   15074:	cmp	r6, r5
   15078:	bne	150d4 <opt_blks+0xe60>
   1507c:	ldr	r6, [r0, #104]	; 0x68
   15080:	ldr	r6, [r6, sl, lsl #2]
   15084:	tst	r4, r6
   15088:	beq	150d4 <opt_blks+0xe60>
   1508c:	ldr	r6, [r0, #200]	; 0xc8
   15090:	cmp	r1, r6
   15094:	bne	150c8 <opt_blks+0xe54>
   15098:	b	15c3c <opt_blks+0x19c8>
   1509c:	ldr	r3, [r6, #60]	; 0x3c
   150a0:	cmp	r3, r5
   150a4:	bne	150d4 <opt_blks+0xe60>
   150a8:	ldr	r3, [r6, #104]	; 0x68
   150ac:	ldr	r3, [r3, r7]
   150b0:	tst	r4, r3
   150b4:	beq	150d4 <opt_blks+0xe60>
   150b8:	ldr	r3, [r6, #200]	; 0xc8
   150bc:	cmp	r1, r3
   150c0:	beq	15af0 <opt_blks+0x187c>
   150c4:	mov	r0, r6
   150c8:	ldr	r6, [r0, #84]	; 0x54
   150cc:	cmp	r6, #0
   150d0:	bne	1509c <opt_blks+0xe28>
   150d4:	cmp	r2, #0
   150d8:	beq	1510c <opt_blks+0xe98>
   150dc:	ldr	r3, [r2, #16]
   150e0:	ldr	r3, [r3, #200]	; 0xc8
   150e4:	cmp	r1, r3
   150e8:	beq	15100 <opt_blks+0xe8c>
   150ec:	b	15218 <opt_blks+0xfa4>
   150f0:	ldr	r3, [r2, #16]
   150f4:	ldr	r3, [r3, #200]	; 0xc8
   150f8:	cmp	r3, r1
   150fc:	bne	15218 <opt_blks+0xfa4>
   15100:	ldr	r2, [r2, #20]
   15104:	cmp	r2, #0
   15108:	bne	150f0 <opt_blks+0xe7c>
   1510c:	ldr	r3, [lr, #60]	; 0x3c
   15110:	cmp	r3, ip
   15114:	addeq	lr, lr, #60	; 0x3c
   15118:	moveq	r3, ip
   1511c:	beq	15130 <opt_blks+0xebc>
   15120:	ldr	r3, [lr, #84]	; 0x54
   15124:	add	lr, lr, #84	; 0x54
   15128:	cmp	r3, #0
   1512c:	beq	15218 <opt_blks+0xfa4>
   15130:	ldr	r2, [r3, #84]	; 0x54
   15134:	ldr	r5, [ip, #84]	; 0x54
   15138:	cmp	r5, r2
   1513c:	bne	15218 <opt_blks+0xfa4>
   15140:	ldr	r0, [ip]
   15144:	ldr	r2, [r3, #104]	; 0x68
   15148:	lsr	r8, r0, #5
   1514c:	and	r0, r0, #31
   15150:	lsl	r0, fp, r0
   15154:	ldr	r2, [r2, r8, lsl #2]
   15158:	lsl	r6, r8, #2
   1515c:	tst	r0, r2
   15160:	beq	15218 <opt_blks+0xfa4>
   15164:	mov	r7, #1
   15168:	b	1519c <opt_blks+0xf28>
   1516c:	cmp	r2, #0
   15170:	beq	15218 <opt_blks+0xfa4>
   15174:	ldr	lr, [r2, #84]	; 0x54
   15178:	cmp	lr, r5
   1517c:	bne	15218 <opt_blks+0xfa4>
   15180:	ldr	r4, [r2, #104]	; 0x68
   15184:	mov	lr, r3
   15188:	mov	r3, r2
   1518c:	mov	r7, #0
   15190:	ldr	r2, [r4, r6]
   15194:	tst	r0, r2
   15198:	beq	15218 <opt_blks+0xfa4>
   1519c:	ldr	r4, [r3, #200]	; 0xc8
   151a0:	ldr	r2, [r3, #60]!	; 0x3c
   151a4:	cmp	r4, r1
   151a8:	beq	1516c <opt_blks+0xef8>
   151ac:	cmp	r2, #0
   151b0:	beq	15218 <opt_blks+0xfa4>
   151b4:	ldr	r4, [r2, #84]	; 0x54
   151b8:	cmp	r5, r4
   151bc:	bne	15218 <opt_blks+0xfa4>
   151c0:	ldr	r4, [r2, #104]	; 0x68
   151c4:	ldr	r4, [r4, r8, lsl #2]
   151c8:	tst	r0, r4
   151cc:	beq	15218 <opt_blks+0xfa4>
   151d0:	ldr	r4, [r2, #200]	; 0xc8
   151d4:	cmp	r1, r4
   151d8:	bne	1520c <opt_blks+0xf98>
   151dc:	b	15c34 <opt_blks+0x19c0>
   151e0:	ldr	r3, [r4, #84]	; 0x54
   151e4:	cmp	r3, r5
   151e8:	bne	15218 <opt_blks+0xfa4>
   151ec:	ldr	r3, [r4, #104]	; 0x68
   151f0:	ldr	r3, [r3, r6]
   151f4:	tst	r0, r3
   151f8:	beq	15218 <opt_blks+0xfa4>
   151fc:	ldr	r3, [r4, #200]	; 0xc8
   15200:	cmp	r3, r1
   15204:	beq	15a68 <opt_blks+0x17f4>
   15208:	mov	r2, r4
   1520c:	ldr	r4, [r2, #60]	; 0x3c
   15210:	cmp	r4, #0
   15214:	bne	151e0 <opt_blks+0xf6c>
   15218:	ldr	ip, [ip, #100]	; 0x64
   1521c:	cmp	ip, #0
   15220:	bne	14f74 <opt_blks+0xd00>
   15224:	ldr	r3, [sp]
   15228:	ldr	r2, [sp, #4]
   1522c:	add	r3, r3, #1
   15230:	cmp	r3, r2
   15234:	str	r3, [sp]
   15238:	bne	14f5c <opt_blks+0xce8>
   1523c:	ldr	r3, [sp, #8]
   15240:	cmp	r3, #0
   15244:	beq	15258 <opt_blks+0xfe4>
   15248:	ldr	r3, [pc, #108]	; 152bc <opt_blks+0x1048>
   1524c:	ldr	r2, [sp, #12]
   15250:	add	r3, pc, r3
   15254:	str	r2, [r3, #876]	; 0x36c
   15258:	add	sp, sp, #124	; 0x7c
   1525c:	ldrd	r4, [sp]
   15260:	ldrd	r6, [sp, #8]
   15264:	ldrd	r8, [sp, #16]
   15268:	ldrd	sl, [sp, #24]
   1526c:	add	sp, sp, #32
   15270:	pop	{pc}		; (ldr pc, [sp], #4)
   15274:	.word	0x0002a488
   15278:	.word	0x00029d48
   1527c:	.word	0x000000ec
   15280:	.word	0x000000f4
   15284:	.word	0x00000100
   15288:	.word	0x000000cc
   1528c:	.word	0x000000c4
   15290:	.word	0x0002a370
   15294:	.word	0x0002a364
   15298:	.word	0x0002a358
   1529c:	.word	0x00029f3c
   152a0:	.word	0x00029ef4
   152a4:	.word	0x00029e50
   152a8:	.word	0x00029e10
   152ac:	.word	0x000299c8
   152b0:	.word	0x00029968
   152b4:	.word	0x000298b8
   152b8:	.word	0x000297f0
   152bc:	.word	0x000294dc
   152c0:	.word	0x00029418
   152c4:	.word	0x000293e8
   152c8:	.word	0x000293d8
   152cc:	.word	0x000292ac
   152d0:	.word	0x00029254
   152d4:	.word	0x0002910c
   152d8:	.word	0x00029024
   152dc:	.word	0x00028f1c
   152e0:	.word	0x00028e80
   152e4:	.word	0x00028ddc
   152e8:	.word	0x00028db8
   152ec:	.word	0x00028d30
   152f0:	.word	0x00028cec
   152f4:	.word	0x00028bac
   152f8:	.word	0x00028b54
   152fc:	mov	r3, #64	; 0x40
   15300:	ldr	r2, [r8, r3]
   15304:	add	r8, r8, r3
   15308:	cmp	r2, #0
   1530c:	bne	14d54 <opt_blks+0xae0>
   15310:	ldr	r3, [pc, #-88]	; 152c0 <opt_blks+0x104c>
   15314:	add	r3, pc, r3
   15318:	ldr	r5, [r3, #876]	; 0x36c
   1531c:	b	14d6c <opt_blks+0xaf8>
   15320:	tst	r2, #248	; 0xf8
   15324:	movne	r3, #64	; 0x40
   15328:	moveq	r3, #68	; 0x44
   1532c:	b	14d44 <opt_blks+0xad0>
   15330:	ldr	r3, [r4, #20]
   15334:	cmp	r3, #0
   15338:	lslge	r3, r3, #2
   1533c:	bge	14d44 <opt_blks+0xad0>
   15340:	ldr	r3, [pc, #-132]	; 152c4 <opt_blks+0x1050>
   15344:	add	r3, pc, r3
   15348:	ldr	r5, [r3, #876]	; 0x36c
   1534c:	b	14d74 <opt_blks+0xb00>
   15350:	ldr	r3, [pc, #-144]	; 152c8 <opt_blks+0x1054>
   15354:	add	r3, pc, r3
   15358:	ldr	r5, [r3, #876]	; 0x36c
   1535c:	b	14d74 <opt_blks+0xb00>
   15360:	mov	r8, #135	; 0x87
   15364:	cmp	r3, #0
   15368:	bne	1537c <opt_blks+0x1108>
   1536c:	b	15474 <opt_blks+0x1200>
   15370:	ldr	r3, [r3, #16]
   15374:	cmp	r3, #0
   15378:	beq	154cc <opt_blks+0x1258>
   1537c:	ldr	r1, [r3]
   15380:	cmn	r1, #1
   15384:	beq	15370 <opt_blks+0x10fc>
   15388:	cmp	r0, #2
   1538c:	beq	15404 <opt_blks+0x1190>
   15390:	cmp	r0, #0
   15394:	bne	153f4 <opt_blks+0x1180>
   15398:	cmp	r1, #7
   1539c:	beq	15430 <opt_blks+0x11bc>
   153a0:	ldr	r0, [r4, #128]	; 0x80
   153a4:	tst	r0, #131072	; 0x20000
   153a8:	bne	153f4 <opt_blks+0x1180>
   153ac:	cmp	r1, #177	; 0xb1
   153b0:	beq	15568 <opt_blks+0x12f4>
   153b4:	mov	lr, r1
   153b8:	mov	r0, r3
   153bc:	cmp	lr, #12
   153c0:	bne	153f4 <opt_blks+0x1180>
   153c4:	ldr	lr, [r0, #16]
   153c8:	cmp	lr, #0
   153cc:	bne	153e0 <opt_blks+0x116c>
   153d0:	b	153f4 <opt_blks+0x1180>
   153d4:	ldr	lr, [lr, #16]
   153d8:	cmp	lr, #0
   153dc:	beq	153f4 <opt_blks+0x1180>
   153e0:	ldr	r5, [lr]
   153e4:	cmn	r5, #1
   153e8:	beq	153d4 <opt_blks+0x1160>
   153ec:	cmp	r5, #7
   153f0:	beq	1577c <opt_blks+0x1508>
   153f4:	ldr	r2, [r3, #16]
   153f8:	mov	r5, r3
   153fc:	mov	lr, r1
   15400:	b	147f8 <opt_blks+0x584>
   15404:	cmp	r1, #97	; 0x61
   15408:	bne	153f4 <opt_blks+0x1180>
   1540c:	ldr	lr, [r2, #12]
   15410:	ldr	r0, [r3, #12]
   15414:	cmp	lr, r0
   15418:	bne	153f4 <opt_blks+0x1180>
   1541c:	mov	r1, #7
   15420:	str	r1, [r3]
   15424:	ldr	r1, [r2]
   15428:	cmp	r1, #0
   1542c:	bne	1585c <opt_blks+0x15e8>
   15430:	str	fp, [r2]
   15434:	str	r8, [r3]
   15438:	ldr	ip, [r2]
   1543c:	cmp	ip, #0
   15440:	bne	15c44 <opt_blks+0x19d0>
   15444:	ldr	r2, [r4, #128]	; 0x80
   15448:	tst	r2, #131072	; 0x20000
   1544c:	bne	1555c <opt_blks+0x12e8>
   15450:	ldr	r7, [r3, #16]
   15454:	mov	lr, #135	; 0x87
   15458:	mov	r6, #1
   1545c:	mov	r0, lr
   15460:	mov	r2, r3
   15464:	mov	r5, r3
   15468:	mov	r3, r7
   1546c:	cmp	r3, #0
   15470:	bne	1537c <opt_blks+0x1108>
   15474:	cmp	r6, #0
   15478:	beq	14840 <opt_blks+0x5cc>
   1547c:	ldr	r3, [pc, #-440]	; 152cc <opt_blks+0x1058>
   15480:	add	r3, pc, r3
   15484:	str	ip, [r3, #876]	; 0x36c
   15488:	ldr	r3, [r4, #8]
   1548c:	cmp	r3, #21
   15490:	bne	1484c <opt_blks+0x5d8>
   15494:	ldr	r2, [r4, #128]	; 0x80
   15498:	ands	r2, r2, #65536	; 0x10000
   1549c:	bne	154b8 <opt_blks+0x1244>
   154a0:	cmp	lr, #28
   154a4:	beq	15880 <opt_blks+0x160c>
   154a8:	cmp	lr, #20
   154ac:	beq	1593c <opt_blks+0x16c8>
   154b0:	cmp	lr, #84	; 0x54
   154b4:	beq	15a14 <opt_blks+0x17a0>
   154b8:	ldr	r2, [sp]
   154bc:	ldr	r1, [r4, #204]	; 0xcc
   154c0:	ldr	r2, [r2]
   154c4:	add	ip, r2, r1, lsl #3
   154c8:	b	14864 <opt_blks+0x5f0>
   154cc:	cmp	r6, #0
   154d0:	beq	14840 <opt_blks+0x5cc>
   154d4:	ldr	r3, [pc, #-524]	; 152d0 <opt_blks+0x105c>
   154d8:	add	r3, pc, r3
   154dc:	str	ip, [r3, #876]	; 0x36c
   154e0:	b	14840 <opt_blks+0x5cc>
   154e4:	mov	r0, r3
   154e8:	bl	136f0 <F>
   154ec:	b	14aa4 <opt_blks+0x830>
   154f0:	ldr	r2, [r2, r0, lsl #3]
   154f4:	cmp	r2, #0
   154f8:	beq	15504 <opt_blks+0x1290>
   154fc:	tst	r3, #8
   15500:	beq	1489c <opt_blks+0x628>
   15504:	ldr	r5, [r4, #4]
   15508:	b	148f4 <opt_blks+0x680>
   1550c:	mov	r0, r2
   15510:	ldr	r1, [r4, #20]
   15514:	bl	136f0 <F>
   15518:	ldr	r3, [r4, #8]
   1551c:	rsb	r2, r3, #0
   15520:	str	r3, [r4, #52]	; 0x34
   15524:	str	r0, [r4, #132]	; 0x84
   15528:	str	r2, [r4, #76]	; 0x4c
   1552c:	ldr	r4, [r4, #100]	; 0x64
   15530:	cmp	r4, #0
   15534:	beq	14df8 <opt_blks+0xb84>
   15538:	ldr	r5, [r4, #112]	; 0x70
   1553c:	add	r6, r4, #136	; 0x88
   15540:	cmp	r5, #0
   15544:	bne	14414 <opt_blks+0x1a0>
   15548:	mov	r1, r5
   1554c:	mov	r2, #72	; 0x48
   15550:	mov	r0, r6
   15554:	bl	e2c <memset@plt>
   15558:	b	14470 <opt_blks+0x1fc>
   1555c:	mov	r1, #135	; 0x87
   15560:	mov	r6, #1
   15564:	b	153f4 <opt_blks+0x1180>
   15568:	ldr	r7, [r3, #16]
   1556c:	cmp	r7, #0
   15570:	beq	15a5c <opt_blks+0x17e8>
   15574:	ldr	lr, [r7]
   15578:	mov	r0, r7
   1557c:	cmn	lr, #1
   15580:	beq	15594 <opt_blks+0x1320>
   15584:	b	153bc <opt_blks+0x1148>
   15588:	ldr	lr, [r0]
   1558c:	cmn	lr, #1
   15590:	bne	153bc <opt_blks+0x1148>
   15594:	ldr	r0, [r0, #16]
   15598:	cmp	r0, #0
   1559c:	bne	15588 <opt_blks+0x1314>
   155a0:	mov	r2, r7
   155a4:	b	153f8 <opt_blks+0x1184>
   155a8:	cmp	ip, #0
   155ac:	beq	154e4 <opt_blks+0x1270>
   155b0:	ldr	ip, [r0, #4]
   155b4:	cmp	ip, #0
   155b8:	bne	154e4 <opt_blks+0x1270>
   155bc:	tst	r3, #176	; 0xb0
   155c0:	bne	158c8 <opt_blks+0x1654>
   155c4:	mov	r3, #135	; 0x87
   155c8:	str	r3, [r5]
   155cc:	ldrd	r2, [r4, #200]	; 0xc8
   155d0:	cmp	r3, r2
   155d4:	bne	14ac4 <opt_blks+0x850>
   155d8:	mvn	r3, #0
   155dc:	str	r3, [r5]
   155e0:	b	1478c <opt_blks+0x518>
   155e4:	ldr	r2, [r4, #200]	; 0xc8
   155e8:	cmp	r8, #0
   155ec:	sub	r7, r2, r0
   155f0:	clz	r7, r7
   155f4:	lsr	r7, r7, #5
   155f8:	moveq	r7, #0
   155fc:	cmp	r7, #0
   15600:	beq	147c8 <opt_blks+0x554>
   15604:	ldr	r2, [r4, #204]	; 0xcc
   15608:	cmp	r8, r2
   1560c:	bne	147c8 <opt_blks+0x554>
   15610:	cmp	r5, #0
   15614:	beq	14dd0 <opt_blks+0xb5c>
   15618:	ldr	r2, [pc, #-844]	; 152d4 <opt_blks+0x1060>
   1561c:	str	r9, [r4, #4]
   15620:	add	r2, pc, r2
   15624:	str	r9, [r2, #876]	; 0x36c
   15628:	b	14dd0 <opt_blks+0xb5c>
   1562c:	ldr	r0, [r4, #20]
   15630:	cmp	r0, #0
   15634:	bne	15768 <opt_blks+0x14f4>
   15638:	ldr	r1, [r4, #84]	; 0x54
   1563c:	str	r1, [r4, #60]	; 0x3c
   15640:	ldr	r1, [ip]
   15644:	cmp	r1, #0
   15648:	ldr	ip, [r4, #200]	; 0xc8
   1564c:	add	r1, r2, ip, lsl #3
   15650:	beq	156ac <opt_blks+0x1438>
   15654:	ldr	r3, [r2, ip, lsl #3]
   15658:	cmp	r3, #0
   1565c:	beq	15504 <opt_blks+0x1290>
   15660:	ldr	r2, [r1, #4]
   15664:	and	r2, r2, r0
   15668:	b	148c8 <opt_blks+0x654>
   1566c:	ldr	r2, [r4, #200]	; 0xc8
   15670:	str	r2, [sp, #4]
   15674:	b	14ca8 <opt_blks+0xa34>
   15678:	cmp	r3, #48	; 0x30
   1567c:	bne	15694 <opt_blks+0x1420>
   15680:	ldr	r0, [r4, #20]
   15684:	cmp	r0, r2
   15688:	movhi	r2, #0
   1568c:	movls	r2, #1
   15690:	b	148c8 <opt_blks+0x654>
   15694:	cmp	r3, #64	; 0x40
   15698:	bne	15c50 <opt_blks+0x19dc>
   1569c:	ldr	r0, [r4, #20]
   156a0:	b	15664 <opt_blks+0x13f0>
   156a4:	ldr	r2, [r4, #200]	; 0xc8
   156a8:	add	r1, r1, r2, lsl #3
   156ac:	ldr	r2, [r1]
   156b0:	cmp	r2, #0
   156b4:	bne	1489c <opt_blks+0x628>
   156b8:	ldr	r5, [r4, #4]
   156bc:	b	148f4 <opt_blks+0x680>
   156c0:	ldr	r0, [r4, #20]
   156c4:	cmp	r0, r2
   156c8:	movcs	r2, #0
   156cc:	movcc	r2, #1
   156d0:	b	148c8 <opt_blks+0x654>
   156d4:	and	r3, r3, #24
   156d8:	mov	r2, #0
   156dc:	orr	r3, r3, #32
   156e0:	mov	r0, r3
   156e4:	str	r3, [r5]
   156e8:	ldr	r3, [fp]
   156ec:	add	ip, r3, ip
   156f0:	ldr	r3, [ip, #4]
   156f4:	add	r3, r1, r3
   156f8:	mov	r1, r3
   156fc:	str	r3, [r5, #12]
   15700:	bl	136f0 <F>
   15704:	ldr	r3, [pc, #-1076]	; 152d8 <opt_blks+0x1064>
   15708:	add	r3, pc, r3
   1570c:	str	r9, [r3, #876]	; 0x36c
   15710:	b	14ba8 <opt_blks+0x934>
   15714:	str	r9, [r5]
   15718:	mov	r2, #0
   1571c:	ldr	r3, [fp]
   15720:	mov	r0, r2
   15724:	ldr	r1, [r4, #200]	; 0xc8
   15728:	add	r3, r3, r1, lsl #3
   1572c:	ldr	r3, [r3, #4]
   15730:	rsb	r3, r3, #0
   15734:	mov	r1, r3
   15738:	str	r3, [r5, #12]
   1573c:	bl	136f0 <F>
   15740:	str	r0, [r4, #200]	; 0xc8
   15744:	b	1478c <opt_blks+0x518>
   15748:	cmp	sl, #0
   1574c:	bne	147a8 <opt_blks+0x534>
   15750:	add	r8, sp, #48	; 0x30
   15754:	mov	r2, #72	; 0x48
   15758:	mov	r0, r8
   1575c:	mov	r1, #0
   15760:	bl	e2c <memset@plt>
   15764:	b	149bc <opt_blks+0x748>
   15768:	cmn	r0, #1
   1576c:	ldreq	r1, [r4, #60]	; 0x3c
   15770:	streq	r1, [r4, #84]	; 0x54
   15774:	ldr	r1, [ip]
   15778:	b	15644 <opt_blks+0x13d0>
   1577c:	ldr	r5, [lr, #16]
   15780:	cmp	r5, #0
   15784:	bne	15798 <opt_blks+0x1524>
   15788:	b	153f4 <opt_blks+0x1180>
   1578c:	ldr	r5, [r5, #16]
   15790:	cmp	r5, #0
   15794:	beq	153f4 <opt_blks+0x1180>
   15798:	ldr	r7, [r5]
   1579c:	cmn	r7, #1
   157a0:	beq	1578c <opt_blks+0x1518>
   157a4:	and	r7, r7, #231	; 0xe7
   157a8:	cmp	r7, #64	; 0x40
   157ac:	bne	153f4 <opt_blks+0x1180>
   157b0:	ldr	r8, [r2, #12]
   157b4:	mvn	r1, #0
   157b8:	mov	ip, #0
   157bc:	mov	r6, #1
   157c0:	ldr	r7, [r5, #12]
   157c4:	add	r7, r7, r8
   157c8:	str	r7, [r5, #12]
   157cc:	str	r1, [r2]
   157d0:	str	r1, [r0]
   157d4:	str	r1, [lr]
   157d8:	ldr	r1, [r3]
   157dc:	ldr	r2, [r3, #16]
   157e0:	b	153f8 <opt_blks+0x1184>
   157e4:	mov	r2, #0
   157e8:	mov	r0, r2
   157ec:	bl	136f0 <F>
   157f0:	mov	r3, r0
   157f4:	ldr	r2, [sp, #4]
   157f8:	b	14c1c <opt_blks+0x9a8>
   157fc:	ldr	r3, [sp, #4]
   15800:	mov	r2, ip
   15804:	mov	r0, ip
   15808:	ldr	r1, [pc, #-1332]	; 152dc <opt_blks+0x1068>
   1580c:	orr	r3, r3, #4
   15810:	add	r1, pc, r1
   15814:	str	r3, [r5]
   15818:	str	r3, [sp, #4]
   1581c:	str	ip, [r1, #876]	; 0x36c
   15820:	ldr	r3, [fp]
   15824:	ldr	ip, [r4, #204]	; 0xcc
   15828:	add	r3, r3, ip, lsl #3
   1582c:	ldr	r3, [r3, #4]
   15830:	mov	r1, r3
   15834:	str	r3, [r5, #12]
   15838:	ldr	r3, [r4, #200]	; 0xc8
   1583c:	str	r3, [sp, #8]
   15840:	bl	136f0 <F>
   15844:	mov	r2, r0
   15848:	ldmib	sp, {r0, r3}
   1584c:	mov	r1, r3
   15850:	bl	136f0 <F>
   15854:	str	r0, [r4, #200]	; 0xc8
   15858:	b	1478c <opt_blks+0x518>
   1585c:	ldr	r1, [r3, #16]
   15860:	mov	lr, #7
   15864:	mov	r5, r3
   15868:	mov	r2, r3
   1586c:	mov	ip, #0
   15870:	mov	r3, r1
   15874:	mov	r6, #1
   15878:	mov	r0, lr
   1587c:	b	15364 <opt_blks+0x10f0>
   15880:	ldr	r1, [sp]
   15884:	ldr	r0, [r4, #20]
   15888:	ldr	ip, [r4, #204]	; 0xcc
   1588c:	ldr	r1, [r1]
   15890:	ldr	lr, [r1, ip, lsl #3]
   15894:	add	ip, r1, ip, lsl #3
   15898:	cmp	lr, #0
   1589c:	beq	159d4 <opt_blks+0x1760>
   158a0:	ldr	r3, [pc, #-1480]	; 152e0 <opt_blks+0x106c>
   158a4:	ldr	r1, [ip, #4]
   158a8:	mvn	ip, #0
   158ac:	add	r3, pc, r3
   158b0:	add	r0, r1, r0
   158b4:	str	r2, [r3, #876]	; 0x36c
   158b8:	str	r0, [r4, #20]
   158bc:	str	ip, [r5]
   158c0:	ldr	r3, [r4, #8]
   158c4:	b	1484c <opt_blks+0x5d8>
   158c8:	and	ip, r3, #224	; 0xe0
   158cc:	cmp	ip, #32
   158d0:	beq	158e8 <opt_blks+0x1674>
   158d4:	and	ip, r3, #208	; 0xd0
   158d8:	and	r0, r3, #240	; 0xf0
   158dc:	cmp	r0, #96	; 0x60
   158e0:	cmpne	ip, #80	; 0x50
   158e4:	bne	154e4 <opt_blks+0x1270>
   158e8:	ldr	r3, [sp, #44]	; 0x2c
   158ec:	str	r9, [r5]
   158f0:	str	r9, [r5, #12]
   158f4:	ldr	r3, [r3, #8]
   158f8:	cmp	r3, #0
   158fc:	bne	15910 <opt_blks+0x169c>
   15900:	b	15968 <opt_blks+0x16f4>
   15904:	ldr	r3, [r3, #16]
   15908:	cmp	r3, #0
   1590c:	beq	15968 <opt_blks+0x16f4>
   15910:	ldr	r2, [r3]
   15914:	cmp	r2, #0
   15918:	bne	15904 <opt_blks+0x1690>
   1591c:	ldr	r2, [r3, #4]
   15920:	cmp	r2, #0
   15924:	bne	15904 <opt_blks+0x1690>
   15928:	ldr	r2, [r3, #8]
   1592c:	cmp	r2, #0
   15930:	bne	15904 <opt_blks+0x1690>
   15934:	ldr	r3, [r3, #12]
   15938:	b	159bc <opt_blks+0x1748>
   1593c:	mvn	r1, #0
   15940:	ldr	r3, [r5, #12]
   15944:	str	r1, [r5]
   15948:	ldr	r1, [pc, #-1644]	; 152e4 <opt_blks+0x1070>
   1594c:	ldr	r0, [r4, #20]
   15950:	add	r1, pc, r1
   15954:	add	r0, r0, r3
   15958:	str	r2, [r1, #876]	; 0x36c
   1595c:	ldr	r3, [r4, #8]
   15960:	str	r0, [r4, #20]
   15964:	b	1484c <opt_blks+0x5d8>
   15968:	ldr	r1, [pc, #-1672]	; 152e8 <opt_blks+0x1074>
   1596c:	mov	r0, #1
   15970:	ldr	r2, [fp]
   15974:	add	r1, pc, r1
   15978:	ldr	r3, [r1, #860]	; 0x35c
   1597c:	add	r3, r3, r0
   15980:	add	ip, r2, r3, lsl #3
   15984:	str	r3, [r1, #860]	; 0x35c
   15988:	str	r9, [ip, #4]
   1598c:	ldr	ip, [sp, #36]	; 0x24
   15990:	str	r0, [r2, r3, lsl #3]
   15994:	ldr	r2, [ip]
   15998:	add	r0, r2, #20
   1599c:	str	r9, [r2, #4]
   159a0:	str	r9, [r2, #8]
   159a4:	str	r0, [ip]
   159a8:	str	r9, [r2]
   159ac:	str	r3, [r2, #12]
   159b0:	ldr	r0, [r1, #8]
   159b4:	str	r0, [r2, #16]
   159b8:	str	r2, [r1, #8]
   159bc:	ldr	r2, [r4, #200]	; 0xc8
   159c0:	cmp	r2, r3
   159c4:	bne	14ac4 <opt_blks+0x850>
   159c8:	mvn	r3, #0
   159cc:	str	r3, [r5]
   159d0:	b	1478c <opt_blks+0x518>
   159d4:	cmp	r0, #0
   159d8:	bne	156a4 <opt_blks+0x1430>
   159dc:	mvn	r2, #0
   159e0:	ldr	r1, [pc, #-1788]	; 152ec <opt_blks+0x1078>
   159e4:	mov	ip, #29
   159e8:	mov	r3, ip
   159ec:	str	r2, [r5]
   159f0:	ldr	r2, [sp]
   159f4:	str	ip, [r4, #8]
   159f8:	ldr	lr, [r4, #204]	; 0xcc
   159fc:	add	r1, pc, r1
   15a00:	str	r0, [r1, #876]	; 0x36c
   15a04:	ldr	r2, [r2]
   15a08:	add	ip, r2, lr, lsl #3
   15a0c:	ldr	r1, [r2, lr, lsl #3]
   15a10:	b	14868 <opt_blks+0x5f4>
   15a14:	ldr	r0, [r4, #20]
   15a18:	cmp	r0, #0
   15a1c:	bne	154b8 <opt_blks+0x1244>
   15a20:	ldr	r1, [r5, #12]
   15a24:	mov	r3, #69	; 0x45
   15a28:	mvn	r2, #0
   15a2c:	str	r3, [r4, #8]
   15a30:	ldr	r3, [pc, #-1864]	; 152f0 <opt_blks+0x107c>
   15a34:	str	r1, [r4, #20]
   15a38:	str	r2, [r5]
   15a3c:	ldr	r1, [r4, #60]	; 0x3c
   15a40:	add	r3, pc, r3
   15a44:	ldr	r2, [r4, #84]	; 0x54
   15a48:	str	r0, [r3, #876]	; 0x36c
   15a4c:	ldr	r3, [r4, #8]
   15a50:	str	r2, [r4, #60]	; 0x3c
   15a54:	str	r1, [r4, #84]	; 0x54
   15a58:	b	1484c <opt_blks+0x5d8>
   15a5c:	mov	r0, r1
   15a60:	mov	lr, r1
   15a64:	b	15460 <opt_blks+0x11ec>
   15a68:	add	r3, r2, #60	; 0x3c
   15a6c:	ldr	r2, [r4, #60]	; 0x3c
   15a70:	cmp	r7, #0
   15a74:	str	r2, [r3]
   15a78:	ldr	r3, [lr]
   15a7c:	str	r3, [r4, #60]	; 0x3c
   15a80:	streq	r4, [lr]
   15a84:	beq	15ab4 <opt_blks+0x1840>
   15a88:	ldr	r3, [ip, #112]	; 0x70
   15a8c:	cmp	r3, #0
   15a90:	beq	15ab4 <opt_blks+0x1840>
   15a94:	ldr	r2, [r3, #16]
   15a98:	ldr	r1, [r2, #60]	; 0x3c
   15a9c:	cmp	ip, r1
   15aa0:	beq	15ad0 <opt_blks+0x185c>
   15aa4:	str	r4, [r2, #84]	; 0x54
   15aa8:	ldr	r3, [r3, #20]
   15aac:	cmp	r3, #0
   15ab0:	bne	15a94 <opt_blks+0x1820>
   15ab4:	mov	r0, #1
   15ab8:	mov	r1, #0
   15abc:	strd	r0, [sp, #8]
   15ac0:	ldr	ip, [ip, #100]	; 0x64
   15ac4:	cmp	ip, #0
   15ac8:	bne	14f74 <opt_blks+0xd00>
   15acc:	b	15224 <opt_blks+0xfb0>
   15ad0:	str	r4, [r2, #60]	; 0x3c
   15ad4:	ldr	r3, [r3, #20]
   15ad8:	cmp	r3, #0
   15adc:	bne	15a94 <opt_blks+0x1820>
   15ae0:	mov	r0, #1
   15ae4:	mov	r1, #0
   15ae8:	strd	r0, [sp, #8]
   15aec:	b	15ac0 <opt_blks+0x184c>
   15af0:	add	r3, r0, #84	; 0x54
   15af4:	ldr	r2, [r6, #84]	; 0x54
   15af8:	cmp	r9, #0
   15afc:	str	r2, [r3]
   15b00:	ldr	r3, [r8]
   15b04:	str	r3, [r6, #84]	; 0x54
   15b08:	beq	15c24 <opt_blks+0x19b0>
   15b0c:	ldr	r3, [ip, #112]	; 0x70
   15b10:	cmp	r3, #0
   15b14:	beq	15ab4 <opt_blks+0x1840>
   15b18:	ldr	r2, [r3, #16]
   15b1c:	ldr	r1, [r2, #60]	; 0x3c
   15b20:	cmp	ip, r1
   15b24:	beq	15b64 <opt_blks+0x18f0>
   15b28:	str	r6, [r2, #84]	; 0x54
   15b2c:	ldr	r3, [r3, #20]
   15b30:	cmp	r3, #0
   15b34:	bne	15b18 <opt_blks+0x18a4>
   15b38:	ldr	r3, [ip, #112]	; 0x70
   15b3c:	cmp	r3, #0
   15b40:	beq	15ab4 <opt_blks+0x1840>
   15b44:	ldr	lr, [r3, #16]
   15b48:	mov	r2, #0
   15b4c:	str	r2, [sp, #12]
   15b50:	mov	r2, #1
   15b54:	str	r2, [sp, #8]
   15b58:	ldr	r2, [r3, #20]
   15b5c:	ldr	r1, [lr, #200]	; 0xc8
   15b60:	b	150d4 <opt_blks+0xe60>
   15b64:	str	r6, [r2, #60]	; 0x3c
   15b68:	ldr	r3, [r3, #20]
   15b6c:	cmp	r3, #0
   15b70:	bne	15b18 <opt_blks+0x18a4>
   15b74:	b	15b38 <opt_blks+0x18c4>
   15b78:	ldr	r3, [pc, #-2188]	; 152f4 <opt_blks+0x1080>
   15b7c:	str	r2, [r5]
   15b80:	add	r3, pc, r3
   15b84:	ldr	r3, [r3, #8]
   15b88:	cmp	r3, #0
   15b8c:	bne	15ba0 <opt_blks+0x192c>
   15b90:	b	15bcc <opt_blks+0x1958>
   15b94:	ldr	r3, [r3, #16]
   15b98:	cmp	r3, #0
   15b9c:	beq	15bcc <opt_blks+0x1958>
   15ba0:	ldr	r2, [r3]
   15ba4:	cmp	r2, #0
   15ba8:	bne	15b94 <opt_blks+0x1920>
   15bac:	ldr	r2, [r3, #4]
   15bb0:	cmp	r2, #0
   15bb4:	bne	15b94 <opt_blks+0x1920>
   15bb8:	ldr	r2, [r3, #8]
   15bbc:	cmp	r2, #0
   15bc0:	bne	15b94 <opt_blks+0x1920>
   15bc4:	ldr	r3, [r3, #12]
   15bc8:	b	14ac4 <opt_blks+0x850>
   15bcc:	ldr	r1, [pc, #-2268]	; 152f8 <opt_blks+0x1084>
   15bd0:	mov	r0, #1
   15bd4:	ldr	r2, [fp]
   15bd8:	add	r1, pc, r1
   15bdc:	ldr	r3, [r1, #860]	; 0x35c
   15be0:	add	r3, r3, r0
   15be4:	add	ip, r2, r3, lsl #3
   15be8:	str	r3, [r1, #860]	; 0x35c
   15bec:	str	r9, [ip, #4]
   15bf0:	ldr	ip, [sp, #36]	; 0x24
   15bf4:	str	r0, [r2, r3, lsl #3]
   15bf8:	ldr	r2, [ip]
   15bfc:	add	r0, r2, #20
   15c00:	str	r9, [r2, #4]
   15c04:	str	r9, [r2, #8]
   15c08:	str	r0, [ip]
   15c0c:	str	r9, [r2]
   15c10:	str	r3, [r2, #12]
   15c14:	ldr	r0, [r1, #8]
   15c18:	str	r0, [r2, #16]
   15c1c:	str	r2, [r1, #8]
   15c20:	b	14ac4 <opt_blks+0x850>
   15c24:	str	r6, [r8]
   15c28:	b	15b38 <opt_blks+0x18c4>
   15c2c:	mov	ip, r3
   15c30:	b	1433c <opt_blks+0xc8>
   15c34:	mov	r4, r2
   15c38:	b	15a6c <opt_blks+0x17f8>
   15c3c:	mov	r6, r0
   15c40:	b	15af4 <opt_blks+0x1880>
   15c44:	mov	lr, #135	; 0x87
   15c48:	ldr	r1, [r3, #16]
   15c4c:	b	15864 <opt_blks+0x15f0>
   15c50:	bl	ebc <abort@plt>

00015c54 <opt_loop>:
   15c54:	ldr	r3, [pc, #4052]	; 16c30 <opt_loop+0xfdc>
   15c58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15c5c:	strd	r6, [sp, #8]
   15c60:	strd	r8, [sp, #16]
   15c64:	mov	r9, r0
   15c68:	strd	sl, [sp, #24]
   15c6c:	str	lr, [sp, #32]
   15c70:	sub	sp, sp, #68	; 0x44
   15c74:	add	r3, pc, r3
   15c78:	ldr	ip, [pc, #4020]	; 16c34 <opt_loop+0xfe0>
   15c7c:	str	r3, [sp, #52]	; 0x34
   15c80:	str	r1, [sp, #60]	; 0x3c
   15c84:	ldr	r2, [pc, #4012]	; 16c38 <opt_loop+0xfe4>
   15c88:	ldr	r1, [r3, #864]	; 0x360
   15c8c:	add	ip, pc, ip
   15c90:	ldr	r0, [r3]
   15c94:	ldr	lr, [r3, #892]	; 0x37c
   15c98:	lsl	r4, r1, #2
   15c9c:	sub	sl, lr, #1
   15ca0:	mul	r1, r1, lr
   15ca4:	str	lr, [sp, #12]
   15ca8:	str	r4, [sp, #44]	; 0x2c
   15cac:	ldr	fp, [ip, r2]
   15cb0:	bic	ip, lr, #1
   15cb4:	lsr	r2, lr, #1
   15cb8:	lsl	r4, ip, #2
   15cbc:	ldr	lr, [r3, #884]	; 0x374
   15cc0:	str	ip, [sp, #4]
   15cc4:	ldr	r3, [r3, #888]	; 0x378
   15cc8:	str	r2, [sp, #8]
   15ccc:	add	r2, r0, #1
   15cd0:	str	lr, [sp, #40]	; 0x28
   15cd4:	str	r1, [sp, #48]	; 0x30
   15cd8:	str	r3, [sp, #56]	; 0x38
   15cdc:	lsl	r3, r1, #2
   15ce0:	strd	r2, [sp, #20]
   15ce4:	mov	r3, sl
   15ce8:	mov	sl, r9
   15cec:	mov	r9, r3
   15cf0:	mov	r3, #1
   15cf4:	mov	r1, #0
   15cf8:	ldr	r0, [fp]
   15cfc:	ldr	r5, [sp, #52]	; 0x34
   15d00:	ldr	r2, [sp, #44]	; 0x2c
   15d04:	str	r3, [r5, #876]	; 0x36c
   15d08:	bl	e2c <memset@plt>
   15d0c:	ldr	ip, [sp, #20]
   15d10:	ldr	r3, [sl, #24]
   15d14:	str	ip, [r5]
   15d18:	cmp	ip, r3
   15d1c:	beq	18de0 <opt_loop+0x318c>
   15d20:	ldr	r1, [sl, #60]	; 0x3c
   15d24:	mov	r3, #0
   15d28:	str	ip, [sl, #24]
   15d2c:	str	r3, [sl, #100]	; 0x64
   15d30:	cmp	r1, r3
   15d34:	moveq	r3, r1
   15d38:	beq	18dcc <opt_loop+0x3178>
   15d3c:	ldr	r2, [r1, #24]
   15d40:	cmp	ip, r2
   15d44:	beq	17660 <opt_loop+0x1a0c>
   15d48:	ldr	r5, [r1, #60]	; 0x3c
   15d4c:	str	ip, [r1, #24]
   15d50:	str	r3, [r1, #100]	; 0x64
   15d54:	cmp	r5, r3
   15d58:	moveq	r3, r5
   15d5c:	beq	1764c <opt_loop+0x19f8>
   15d60:	ldr	r2, [r5, #24]
   15d64:	cmp	ip, r2
   15d68:	beq	169bc <opt_loop+0xd68>
   15d6c:	ldr	r6, [r5, #60]	; 0x3c
   15d70:	str	ip, [r5, #24]
   15d74:	str	r3, [r5, #100]	; 0x64
   15d78:	cmp	r6, r3
   15d7c:	moveq	r3, r6
   15d80:	beq	169a8 <opt_loop+0xd54>
   15d84:	ldr	r2, [r6, #24]
   15d88:	cmp	ip, r2
   15d8c:	beq	163f8 <opt_loop+0x7a4>
   15d90:	ldr	r7, [r6, #60]	; 0x3c
   15d94:	str	ip, [r6, #24]
   15d98:	str	r3, [r6, #100]	; 0x64
   15d9c:	cmp	r7, r3
   15da0:	moveq	r3, r7
   15da4:	beq	163e4 <opt_loop+0x790>
   15da8:	ldr	r2, [r7, #24]
   15dac:	cmp	ip, r2
   15db0:	beq	160b4 <opt_loop+0x460>
   15db4:	ldr	r8, [r7, #60]	; 0x3c
   15db8:	str	ip, [r7, #24]
   15dbc:	str	r3, [r7, #100]	; 0x64
   15dc0:	cmp	r8, r3
   15dc4:	moveq	r2, #0
   15dc8:	moveq	r3, r2
   15dcc:	beq	160a0 <opt_loop+0x44c>
   15dd0:	ldr	r3, [r8, #24]
   15dd4:	cmp	ip, r3
   15dd8:	beq	15f24 <opt_loop+0x2d0>
   15ddc:	ldr	r3, [r8, #60]	; 0x3c
   15de0:	mov	r2, #0
   15de4:	str	ip, [r8, #24]
   15de8:	str	r2, [r8, #100]	; 0x64
   15dec:	cmp	r3, r2
   15df0:	moveq	r0, r3
   15df4:	moveq	r3, r0
   15df8:	beq	15f10 <opt_loop+0x2bc>
   15dfc:	ldr	r0, [r3, #24]
   15e00:	cmp	ip, r0
   15e04:	beq	15e70 <opt_loop+0x21c>
   15e08:	ldr	r0, [r3, #60]	; 0x3c
   15e0c:	str	ip, [r3, #24]
   15e10:	str	r2, [r3, #100]	; 0x64
   15e14:	cmp	r0, r2
   15e18:	moveq	ip, r0
   15e1c:	moveq	r2, ip
   15e20:	beq	15e5c <opt_loop+0x208>
   15e24:	str	r3, [sp, #16]
   15e28:	bl	13450 <find_levels_r>
   15e2c:	ldr	r3, [sp, #16]
   15e30:	ldr	r0, [r3, #84]	; 0x54
   15e34:	bl	13450 <find_levels_r>
   15e38:	ldr	r3, [sp, #16]
   15e3c:	ldr	r2, [r3, #60]	; 0x3c
   15e40:	ldr	r0, [r3, #84]	; 0x54
   15e44:	ldr	r2, [r2, #36]	; 0x24
   15e48:	ldr	r0, [r0, #36]	; 0x24
   15e4c:	cmp	r0, r2
   15e50:	movge	r2, r0
   15e54:	add	r2, r2, #1
   15e58:	lsl	ip, r2, #2
   15e5c:	ldr	r0, [fp]
   15e60:	str	r2, [r3, #36]	; 0x24
   15e64:	ldr	r2, [r0, ip]
   15e68:	str	r2, [r3, #100]	; 0x64
   15e6c:	str	r3, [r0, ip]
   15e70:	ldr	r2, [r8, #84]	; 0x54
   15e74:	ldr	ip, [sp, #20]
   15e78:	ldr	r3, [r2, #24]
   15e7c:	cmp	ip, r3
   15e80:	beq	15ef4 <opt_loop+0x2a0>
   15e84:	ldr	r0, [r2, #60]	; 0x3c
   15e88:	mov	r3, #0
   15e8c:	str	ip, [r2, #24]
   15e90:	str	r3, [r2, #100]	; 0x64
   15e94:	cmp	r0, r3
   15e98:	moveq	r3, r0
   15e9c:	moveq	ip, r3
   15ea0:	beq	15edc <opt_loop+0x288>
   15ea4:	str	r2, [sp, #16]
   15ea8:	bl	13450 <find_levels_r>
   15eac:	ldr	r2, [sp, #16]
   15eb0:	ldr	r0, [r2, #84]	; 0x54
   15eb4:	bl	13450 <find_levels_r>
   15eb8:	ldr	r2, [sp, #16]
   15ebc:	ldr	r0, [r2, #60]	; 0x3c
   15ec0:	ldr	r3, [r2, #84]	; 0x54
   15ec4:	ldr	r0, [r0, #36]	; 0x24
   15ec8:	ldr	r3, [r3, #36]	; 0x24
   15ecc:	cmp	r3, r0
   15ed0:	movlt	r3, r0
   15ed4:	add	ip, r3, #1
   15ed8:	lsl	r3, ip, #2
   15edc:	ldr	r0, [fp]
   15ee0:	str	ip, [r2, #36]	; 0x24
   15ee4:	ldr	ip, [r0, r3]
   15ee8:	str	ip, [r2, #100]	; 0x64
   15eec:	str	r2, [r0, r3]
   15ef0:	ldr	r2, [r8, #84]	; 0x54
   15ef4:	ldr	r3, [r8, #60]	; 0x3c
   15ef8:	ldr	r2, [r2, #36]	; 0x24
   15efc:	ldr	r3, [r3, #36]	; 0x24
   15f00:	cmp	r3, r2
   15f04:	movlt	r3, r2
   15f08:	add	r3, r3, #1
   15f0c:	lsl	r0, r3, #2
   15f10:	ldr	r2, [fp]
   15f14:	str	r3, [r8, #36]	; 0x24
   15f18:	ldr	r3, [r2, r0]
   15f1c:	str	r3, [r8, #100]	; 0x64
   15f20:	str	r8, [r2, r0]
   15f24:	ldr	r8, [r7, #84]	; 0x54
   15f28:	ldr	ip, [sp, #20]
   15f2c:	ldr	r3, [r8, #24]
   15f30:	cmp	ip, r3
   15f34:	beq	16084 <opt_loop+0x430>
   15f38:	ldr	r3, [r8, #60]	; 0x3c
   15f3c:	mov	r2, #0
   15f40:	str	ip, [r8, #24]
   15f44:	str	r2, [r8, #100]	; 0x64
   15f48:	cmp	r3, r2
   15f4c:	moveq	r0, r3
   15f50:	moveq	r3, r0
   15f54:	beq	1606c <opt_loop+0x418>
   15f58:	ldr	r0, [r3, #24]
   15f5c:	cmp	ip, r0
   15f60:	beq	15fcc <opt_loop+0x378>
   15f64:	ldr	r0, [r3, #60]	; 0x3c
   15f68:	str	ip, [r3, #24]
   15f6c:	str	r2, [r3, #100]	; 0x64
   15f70:	cmp	r0, r2
   15f74:	moveq	ip, r0
   15f78:	moveq	r2, ip
   15f7c:	beq	15fb8 <opt_loop+0x364>
   15f80:	str	r3, [sp, #16]
   15f84:	bl	13450 <find_levels_r>
   15f88:	ldr	r3, [sp, #16]
   15f8c:	ldr	r0, [r3, #84]	; 0x54
   15f90:	bl	13450 <find_levels_r>
   15f94:	ldr	r3, [sp, #16]
   15f98:	ldr	r2, [r3, #60]	; 0x3c
   15f9c:	ldr	r0, [r3, #84]	; 0x54
   15fa0:	ldr	r2, [r2, #36]	; 0x24
   15fa4:	ldr	r0, [r0, #36]	; 0x24
   15fa8:	cmp	r0, r2
   15fac:	movge	r2, r0
   15fb0:	add	r2, r2, #1
   15fb4:	lsl	ip, r2, #2
   15fb8:	ldr	r0, [fp]
   15fbc:	str	r2, [r3, #36]	; 0x24
   15fc0:	ldr	r2, [r0, ip]
   15fc4:	str	r2, [r3, #100]	; 0x64
   15fc8:	str	r3, [r0, ip]
   15fcc:	ldr	r2, [r8, #84]	; 0x54
   15fd0:	ldr	ip, [sp, #20]
   15fd4:	ldr	r3, [r2, #24]
   15fd8:	cmp	ip, r3
   15fdc:	beq	16050 <opt_loop+0x3fc>
   15fe0:	ldr	r0, [r2, #60]	; 0x3c
   15fe4:	mov	r3, #0
   15fe8:	str	ip, [r2, #24]
   15fec:	str	r3, [r2, #100]	; 0x64
   15ff0:	cmp	r0, r3
   15ff4:	moveq	r3, r0
   15ff8:	moveq	ip, r3
   15ffc:	beq	16038 <opt_loop+0x3e4>
   16000:	str	r2, [sp, #16]
   16004:	bl	13450 <find_levels_r>
   16008:	ldr	r2, [sp, #16]
   1600c:	ldr	r0, [r2, #84]	; 0x54
   16010:	bl	13450 <find_levels_r>
   16014:	ldr	r2, [sp, #16]
   16018:	ldr	r0, [r2, #60]	; 0x3c
   1601c:	ldr	r3, [r2, #84]	; 0x54
   16020:	ldr	r0, [r0, #36]	; 0x24
   16024:	ldr	r3, [r3, #36]	; 0x24
   16028:	cmp	r3, r0
   1602c:	movlt	r3, r0
   16030:	add	ip, r3, #1
   16034:	lsl	r3, ip, #2
   16038:	ldr	r0, [fp]
   1603c:	str	ip, [r2, #36]	; 0x24
   16040:	ldr	ip, [r0, r3]
   16044:	str	ip, [r2, #100]	; 0x64
   16048:	str	r2, [r0, r3]
   1604c:	ldr	r2, [r8, #84]	; 0x54
   16050:	ldr	r3, [r8, #60]	; 0x3c
   16054:	ldr	r2, [r2, #36]	; 0x24
   16058:	ldr	r3, [r3, #36]	; 0x24
   1605c:	cmp	r3, r2
   16060:	movlt	r3, r2
   16064:	add	r3, r3, #1
   16068:	lsl	r0, r3, #2
   1606c:	ldr	r2, [fp]
   16070:	str	r3, [r8, #36]	; 0x24
   16074:	ldr	r3, [r2, r0]
   16078:	str	r3, [r8, #100]	; 0x64
   1607c:	str	r8, [r2, r0]
   16080:	ldr	r8, [r7, #84]	; 0x54
   16084:	ldr	r3, [r7, #60]	; 0x3c
   16088:	ldr	r2, [r8, #36]	; 0x24
   1608c:	ldr	r3, [r3, #36]	; 0x24
   16090:	cmp	r3, r2
   16094:	movlt	r3, r2
   16098:	add	r3, r3, #1
   1609c:	lsl	r2, r3, #2
   160a0:	ldr	r0, [fp]
   160a4:	str	r3, [r7, #36]	; 0x24
   160a8:	ldr	r3, [r0, r2]
   160ac:	str	r3, [r7, #100]	; 0x64
   160b0:	str	r7, [r0, r2]
   160b4:	ldr	r7, [r6, #84]	; 0x54
   160b8:	ldr	ip, [sp, #20]
   160bc:	ldr	r3, [r7, #24]
   160c0:	cmp	ip, r3
   160c4:	beq	163c8 <opt_loop+0x774>
   160c8:	ldr	r8, [r7, #60]	; 0x3c
   160cc:	mov	r3, #0
   160d0:	str	ip, [r7, #24]
   160d4:	str	r3, [r7, #100]	; 0x64
   160d8:	cmp	r8, r3
   160dc:	moveq	r3, r8
   160e0:	beq	163b0 <opt_loop+0x75c>
   160e4:	ldr	r2, [r8, #24]
   160e8:	cmp	ip, r2
   160ec:	beq	16234 <opt_loop+0x5e0>
   160f0:	ldr	r2, [r8, #60]	; 0x3c
   160f4:	str	ip, [r8, #24]
   160f8:	str	r3, [r8, #100]	; 0x64
   160fc:	cmp	r2, r3
   16100:	moveq	r0, r2
   16104:	moveq	r3, r0
   16108:	beq	16220 <opt_loop+0x5cc>
   1610c:	ldr	r0, [r2, #24]
   16110:	cmp	ip, r0
   16114:	beq	16180 <opt_loop+0x52c>
   16118:	ldr	r0, [r2, #60]	; 0x3c
   1611c:	str	ip, [r2, #24]
   16120:	str	r3, [r2, #100]	; 0x64
   16124:	cmp	r0, r3
   16128:	moveq	r3, r0
   1612c:	moveq	ip, r3
   16130:	beq	1616c <opt_loop+0x518>
   16134:	str	r2, [sp, #16]
   16138:	bl	13450 <find_levels_r>
   1613c:	ldr	r2, [sp, #16]
   16140:	ldr	r0, [r2, #84]	; 0x54
   16144:	bl	13450 <find_levels_r>
   16148:	ldr	r2, [sp, #16]
   1614c:	ldr	r0, [r2, #60]	; 0x3c
   16150:	ldr	r3, [r2, #84]	; 0x54
   16154:	ldr	r0, [r0, #36]	; 0x24
   16158:	ldr	r3, [r3, #36]	; 0x24
   1615c:	cmp	r3, r0
   16160:	movlt	r3, r0
   16164:	add	ip, r3, #1
   16168:	lsl	r3, ip, #2
   1616c:	ldr	r0, [fp]
   16170:	str	ip, [r2, #36]	; 0x24
   16174:	ldr	ip, [r0, r3]
   16178:	str	ip, [r2, #100]	; 0x64
   1617c:	str	r2, [r0, r3]
   16180:	ldr	r2, [r8, #84]	; 0x54
   16184:	ldr	ip, [sp, #20]
   16188:	ldr	r3, [r2, #24]
   1618c:	cmp	ip, r3
   16190:	beq	16204 <opt_loop+0x5b0>
   16194:	ldr	r0, [r2, #60]	; 0x3c
   16198:	mov	r3, #0
   1619c:	str	ip, [r2, #24]
   161a0:	str	r3, [r2, #100]	; 0x64
   161a4:	cmp	r0, r3
   161a8:	moveq	r3, r0
   161ac:	moveq	ip, r3
   161b0:	beq	161ec <opt_loop+0x598>
   161b4:	str	r2, [sp, #16]
   161b8:	bl	13450 <find_levels_r>
   161bc:	ldr	r2, [sp, #16]
   161c0:	ldr	r0, [r2, #84]	; 0x54
   161c4:	bl	13450 <find_levels_r>
   161c8:	ldr	r2, [sp, #16]
   161cc:	ldr	r0, [r2, #60]	; 0x3c
   161d0:	ldr	r3, [r2, #84]	; 0x54
   161d4:	ldr	r0, [r0, #36]	; 0x24
   161d8:	ldr	r3, [r3, #36]	; 0x24
   161dc:	cmp	r3, r0
   161e0:	movlt	r3, r0
   161e4:	add	ip, r3, #1
   161e8:	lsl	r3, ip, #2
   161ec:	ldr	r0, [fp]
   161f0:	str	ip, [r2, #36]	; 0x24
   161f4:	ldr	ip, [r0, r3]
   161f8:	str	ip, [r2, #100]	; 0x64
   161fc:	str	r2, [r0, r3]
   16200:	ldr	r2, [r8, #84]	; 0x54
   16204:	ldr	r3, [r8, #60]	; 0x3c
   16208:	ldr	r2, [r2, #36]	; 0x24
   1620c:	ldr	r3, [r3, #36]	; 0x24
   16210:	cmp	r3, r2
   16214:	movlt	r3, r2
   16218:	add	r3, r3, #1
   1621c:	lsl	r0, r3, #2
   16220:	ldr	r2, [fp]
   16224:	str	r3, [r8, #36]	; 0x24
   16228:	ldr	r3, [r2, r0]
   1622c:	str	r3, [r8, #100]	; 0x64
   16230:	str	r8, [r2, r0]
   16234:	ldr	r8, [r7, #84]	; 0x54
   16238:	ldr	ip, [sp, #20]
   1623c:	ldr	r3, [r8, #24]
   16240:	cmp	ip, r3
   16244:	beq	16394 <opt_loop+0x740>
   16248:	ldr	r3, [r8, #60]	; 0x3c
   1624c:	mov	r2, #0
   16250:	str	ip, [r8, #24]
   16254:	str	r2, [r8, #100]	; 0x64
   16258:	cmp	r3, r2
   1625c:	moveq	r0, r3
   16260:	moveq	r3, r0
   16264:	beq	1637c <opt_loop+0x728>
   16268:	ldr	r0, [r3, #24]
   1626c:	cmp	ip, r0
   16270:	beq	162dc <opt_loop+0x688>
   16274:	ldr	r0, [r3, #60]	; 0x3c
   16278:	str	ip, [r3, #24]
   1627c:	str	r2, [r3, #100]	; 0x64
   16280:	cmp	r0, r2
   16284:	moveq	ip, r0
   16288:	moveq	r2, ip
   1628c:	beq	162c8 <opt_loop+0x674>
   16290:	str	r3, [sp, #16]
   16294:	bl	13450 <find_levels_r>
   16298:	ldr	r3, [sp, #16]
   1629c:	ldr	r0, [r3, #84]	; 0x54
   162a0:	bl	13450 <find_levels_r>
   162a4:	ldr	r3, [sp, #16]
   162a8:	ldr	r2, [r3, #60]	; 0x3c
   162ac:	ldr	r0, [r3, #84]	; 0x54
   162b0:	ldr	r2, [r2, #36]	; 0x24
   162b4:	ldr	r0, [r0, #36]	; 0x24
   162b8:	cmp	r0, r2
   162bc:	movge	r2, r0
   162c0:	add	r2, r2, #1
   162c4:	lsl	ip, r2, #2
   162c8:	ldr	r0, [fp]
   162cc:	str	r2, [r3, #36]	; 0x24
   162d0:	ldr	r2, [r0, ip]
   162d4:	str	r2, [r3, #100]	; 0x64
   162d8:	str	r3, [r0, ip]
   162dc:	ldr	r2, [r8, #84]	; 0x54
   162e0:	ldr	ip, [sp, #20]
   162e4:	ldr	r3, [r2, #24]
   162e8:	cmp	ip, r3
   162ec:	beq	16360 <opt_loop+0x70c>
   162f0:	ldr	r0, [r2, #60]	; 0x3c
   162f4:	mov	r3, #0
   162f8:	str	ip, [r2, #24]
   162fc:	str	r3, [r2, #100]	; 0x64
   16300:	cmp	r0, r3
   16304:	moveq	r3, r0
   16308:	moveq	ip, r3
   1630c:	beq	16348 <opt_loop+0x6f4>
   16310:	str	r2, [sp, #16]
   16314:	bl	13450 <find_levels_r>
   16318:	ldr	r2, [sp, #16]
   1631c:	ldr	r0, [r2, #84]	; 0x54
   16320:	bl	13450 <find_levels_r>
   16324:	ldr	r2, [sp, #16]
   16328:	ldr	r0, [r2, #60]	; 0x3c
   1632c:	ldr	r3, [r2, #84]	; 0x54
   16330:	ldr	r0, [r0, #36]	; 0x24
   16334:	ldr	r3, [r3, #36]	; 0x24
   16338:	cmp	r3, r0
   1633c:	movlt	r3, r0
   16340:	add	ip, r3, #1
   16344:	lsl	r3, ip, #2
   16348:	ldr	r0, [fp]
   1634c:	str	ip, [r2, #36]	; 0x24
   16350:	ldr	ip, [r0, r3]
   16354:	str	ip, [r2, #100]	; 0x64
   16358:	str	r2, [r0, r3]
   1635c:	ldr	r2, [r8, #84]	; 0x54
   16360:	ldr	r3, [r8, #60]	; 0x3c
   16364:	ldr	r2, [r2, #36]	; 0x24
   16368:	ldr	r3, [r3, #36]	; 0x24
   1636c:	cmp	r3, r2
   16370:	movlt	r3, r2
   16374:	add	r3, r3, #1
   16378:	lsl	r0, r3, #2
   1637c:	ldr	r2, [fp]
   16380:	str	r3, [r8, #36]	; 0x24
   16384:	ldr	r3, [r2, r0]
   16388:	str	r3, [r8, #100]	; 0x64
   1638c:	str	r8, [r2, r0]
   16390:	ldr	r8, [r7, #84]	; 0x54
   16394:	ldr	r3, [r7, #60]	; 0x3c
   16398:	ldr	r2, [r8, #36]	; 0x24
   1639c:	ldr	r3, [r3, #36]	; 0x24
   163a0:	cmp	r3, r2
   163a4:	movlt	r3, r2
   163a8:	add	r3, r3, #1
   163ac:	lsl	r8, r3, #2
   163b0:	ldr	r2, [fp]
   163b4:	str	r3, [r7, #36]	; 0x24
   163b8:	ldr	r3, [r2, r8]
   163bc:	str	r3, [r7, #100]	; 0x64
   163c0:	str	r7, [r2, r8]
   163c4:	ldr	r7, [r6, #84]	; 0x54
   163c8:	ldr	r3, [r6, #60]	; 0x3c
   163cc:	ldr	r2, [r7, #36]	; 0x24
   163d0:	ldr	r3, [r3, #36]	; 0x24
   163d4:	cmp	r3, r2
   163d8:	movlt	r3, r2
   163dc:	add	r3, r3, #1
   163e0:	lsl	r7, r3, #2
   163e4:	ldr	r2, [fp]
   163e8:	str	r3, [r6, #36]	; 0x24
   163ec:	ldr	r3, [r2, r7]
   163f0:	str	r3, [r6, #100]	; 0x64
   163f4:	str	r6, [r2, r7]
   163f8:	ldr	r7, [r5, #84]	; 0x54
   163fc:	ldr	ip, [sp, #20]
   16400:	ldr	r3, [r7, #24]
   16404:	cmp	ip, r3
   16408:	beq	1698c <opt_loop+0xd38>
   1640c:	ldr	r8, [r7, #60]	; 0x3c
   16410:	mov	r3, #0
   16414:	str	ip, [r7, #24]
   16418:	str	r3, [r7, #100]	; 0x64
   1641c:	cmp	r8, r3
   16420:	moveq	r3, r8
   16424:	beq	16974 <opt_loop+0xd20>
   16428:	ldr	r2, [r8, #24]
   1642c:	cmp	ip, r2
   16430:	beq	16644 <opt_loop+0x9f0>
   16434:	ldr	r6, [r8, #60]	; 0x3c
   16438:	str	ip, [r8, #24]
   1643c:	str	r3, [r8, #100]	; 0x64
   16440:	cmp	r6, r3
   16444:	moveq	r3, r6
   16448:	beq	16630 <opt_loop+0x9dc>
   1644c:	ldr	r2, [r6, #24]
   16450:	cmp	ip, r2
   16454:	beq	164b4 <opt_loop+0x860>
   16458:	ldr	r0, [r6, #60]	; 0x3c
   1645c:	str	ip, [r6, #24]
   16460:	str	r3, [r6, #100]	; 0x64
   16464:	cmp	r0, r3
   16468:	moveq	r3, r0
   1646c:	moveq	r2, r3
   16470:	beq	164a0 <opt_loop+0x84c>
   16474:	bl	13450 <find_levels_r>
   16478:	ldr	r0, [r6, #84]	; 0x54
   1647c:	bl	13450 <find_levels_r>
   16480:	ldr	r2, [r6, #60]	; 0x3c
   16484:	ldr	r3, [r6, #84]	; 0x54
   16488:	ldr	r2, [r2, #36]	; 0x24
   1648c:	ldr	r3, [r3, #36]	; 0x24
   16490:	cmp	r3, r2
   16494:	movlt	r3, r2
   16498:	add	r2, r3, #1
   1649c:	lsl	r3, r2, #2
   164a0:	ldr	r0, [fp]
   164a4:	str	r2, [r6, #36]	; 0x24
   164a8:	ldr	r2, [r0, r3]
   164ac:	str	r2, [r6, #100]	; 0x64
   164b0:	str	r6, [r0, r3]
   164b4:	ldr	r6, [r8, #84]	; 0x54
   164b8:	ldr	ip, [sp, #20]
   164bc:	ldr	r3, [r6, #24]
   164c0:	cmp	ip, r3
   164c4:	beq	16614 <opt_loop+0x9c0>
   164c8:	ldr	r3, [r6, #60]	; 0x3c
   164cc:	mov	r2, #0
   164d0:	str	ip, [r6, #24]
   164d4:	str	r2, [r6, #100]	; 0x64
   164d8:	cmp	r3, r2
   164dc:	moveq	r0, r3
   164e0:	moveq	r3, r0
   164e4:	beq	165fc <opt_loop+0x9a8>
   164e8:	ldr	r0, [r3, #24]
   164ec:	cmp	ip, r0
   164f0:	beq	1655c <opt_loop+0x908>
   164f4:	ldr	r0, [r3, #60]	; 0x3c
   164f8:	str	ip, [r3, #24]
   164fc:	str	r2, [r3, #100]	; 0x64
   16500:	cmp	r0, r2
   16504:	moveq	ip, r0
   16508:	moveq	r2, ip
   1650c:	beq	16548 <opt_loop+0x8f4>
   16510:	str	r3, [sp, #16]
   16514:	bl	13450 <find_levels_r>
   16518:	ldr	r3, [sp, #16]
   1651c:	ldr	r0, [r3, #84]	; 0x54
   16520:	bl	13450 <find_levels_r>
   16524:	ldr	r3, [sp, #16]
   16528:	ldr	r2, [r3, #60]	; 0x3c
   1652c:	ldr	r0, [r3, #84]	; 0x54
   16530:	ldr	r2, [r2, #36]	; 0x24
   16534:	ldr	r0, [r0, #36]	; 0x24
   16538:	cmp	r0, r2
   1653c:	movge	r2, r0
   16540:	add	r2, r2, #1
   16544:	lsl	ip, r2, #2
   16548:	ldr	r0, [fp]
   1654c:	str	r2, [r3, #36]	; 0x24
   16550:	ldr	r2, [r0, ip]
   16554:	str	r2, [r3, #100]	; 0x64
   16558:	str	r3, [r0, ip]
   1655c:	ldr	r2, [r6, #84]	; 0x54
   16560:	ldr	ip, [sp, #20]
   16564:	ldr	r3, [r2, #24]
   16568:	cmp	ip, r3
   1656c:	beq	165e0 <opt_loop+0x98c>
   16570:	ldr	r0, [r2, #60]	; 0x3c
   16574:	mov	r3, #0
   16578:	str	ip, [r2, #24]
   1657c:	str	r3, [r2, #100]	; 0x64
   16580:	cmp	r0, r3
   16584:	moveq	r3, r0
   16588:	moveq	ip, r3
   1658c:	beq	165c8 <opt_loop+0x974>
   16590:	str	r2, [sp, #16]
   16594:	bl	13450 <find_levels_r>
   16598:	ldr	r2, [sp, #16]
   1659c:	ldr	r0, [r2, #84]	; 0x54
   165a0:	bl	13450 <find_levels_r>
   165a4:	ldr	r2, [sp, #16]
   165a8:	ldr	r0, [r2, #60]	; 0x3c
   165ac:	ldr	r3, [r2, #84]	; 0x54
   165b0:	ldr	r0, [r0, #36]	; 0x24
   165b4:	ldr	r3, [r3, #36]	; 0x24
   165b8:	cmp	r3, r0
   165bc:	movlt	r3, r0
   165c0:	add	ip, r3, #1
   165c4:	lsl	r3, ip, #2
   165c8:	ldr	r0, [fp]
   165cc:	str	ip, [r2, #36]	; 0x24
   165d0:	ldr	ip, [r0, r3]
   165d4:	str	ip, [r2, #100]	; 0x64
   165d8:	str	r2, [r0, r3]
   165dc:	ldr	r2, [r6, #84]	; 0x54
   165e0:	ldr	r3, [r6, #60]	; 0x3c
   165e4:	ldr	r2, [r2, #36]	; 0x24
   165e8:	ldr	r3, [r3, #36]	; 0x24
   165ec:	cmp	r3, r2
   165f0:	movlt	r3, r2
   165f4:	add	r3, r3, #1
   165f8:	lsl	r0, r3, #2
   165fc:	ldr	r2, [fp]
   16600:	str	r3, [r6, #36]	; 0x24
   16604:	ldr	r3, [r2, r0]
   16608:	str	r3, [r6, #100]	; 0x64
   1660c:	str	r6, [r2, r0]
   16610:	ldr	r6, [r8, #84]	; 0x54
   16614:	ldr	r3, [r8, #60]	; 0x3c
   16618:	ldr	r2, [r6, #36]	; 0x24
   1661c:	ldr	r3, [r3, #36]	; 0x24
   16620:	cmp	r3, r2
   16624:	movlt	r3, r2
   16628:	add	r3, r3, #1
   1662c:	lsl	r6, r3, #2
   16630:	ldr	r2, [fp]
   16634:	str	r3, [r8, #36]	; 0x24
   16638:	ldr	r3, [r2, r6]
   1663c:	str	r3, [r8, #100]	; 0x64
   16640:	str	r8, [r2, r6]
   16644:	ldr	r6, [r7, #84]	; 0x54
   16648:	ldr	ip, [sp, #20]
   1664c:	ldr	r3, [r6, #24]
   16650:	cmp	ip, r3
   16654:	beq	16958 <opt_loop+0xd04>
   16658:	ldr	r8, [r6, #60]	; 0x3c
   1665c:	mov	r3, #0
   16660:	str	ip, [r6, #24]
   16664:	str	r3, [r6, #100]	; 0x64
   16668:	cmp	r8, r3
   1666c:	moveq	r3, r8
   16670:	beq	16940 <opt_loop+0xcec>
   16674:	ldr	r2, [r8, #24]
   16678:	cmp	ip, r2
   1667c:	beq	167c4 <opt_loop+0xb70>
   16680:	ldr	r2, [r8, #60]	; 0x3c
   16684:	str	ip, [r8, #24]
   16688:	str	r3, [r8, #100]	; 0x64
   1668c:	cmp	r2, r3
   16690:	moveq	r0, r2
   16694:	moveq	r3, r0
   16698:	beq	167b0 <opt_loop+0xb5c>
   1669c:	ldr	r0, [r2, #24]
   166a0:	cmp	ip, r0
   166a4:	beq	16710 <opt_loop+0xabc>
   166a8:	ldr	r0, [r2, #60]	; 0x3c
   166ac:	str	ip, [r2, #24]
   166b0:	str	r3, [r2, #100]	; 0x64
   166b4:	cmp	r0, r3
   166b8:	moveq	r3, r0
   166bc:	moveq	ip, r3
   166c0:	beq	166fc <opt_loop+0xaa8>
   166c4:	str	r2, [sp, #16]
   166c8:	bl	13450 <find_levels_r>
   166cc:	ldr	r2, [sp, #16]
   166d0:	ldr	r0, [r2, #84]	; 0x54
   166d4:	bl	13450 <find_levels_r>
   166d8:	ldr	r2, [sp, #16]
   166dc:	ldr	r0, [r2, #60]	; 0x3c
   166e0:	ldr	r3, [r2, #84]	; 0x54
   166e4:	ldr	r0, [r0, #36]	; 0x24
   166e8:	ldr	r3, [r3, #36]	; 0x24
   166ec:	cmp	r3, r0
   166f0:	movlt	r3, r0
   166f4:	add	ip, r3, #1
   166f8:	lsl	r3, ip, #2
   166fc:	ldr	r0, [fp]
   16700:	str	ip, [r2, #36]	; 0x24
   16704:	ldr	ip, [r0, r3]
   16708:	str	ip, [r2, #100]	; 0x64
   1670c:	str	r2, [r0, r3]
   16710:	ldr	r2, [r8, #84]	; 0x54
   16714:	ldr	ip, [sp, #20]
   16718:	ldr	r3, [r2, #24]
   1671c:	cmp	ip, r3
   16720:	beq	16794 <opt_loop+0xb40>
   16724:	ldr	r0, [r2, #60]	; 0x3c
   16728:	mov	r3, #0
   1672c:	str	ip, [r2, #24]
   16730:	str	r3, [r2, #100]	; 0x64
   16734:	cmp	r0, r3
   16738:	moveq	r3, r0
   1673c:	moveq	ip, r3
   16740:	beq	1677c <opt_loop+0xb28>
   16744:	str	r2, [sp, #16]
   16748:	bl	13450 <find_levels_r>
   1674c:	ldr	r2, [sp, #16]
   16750:	ldr	r0, [r2, #84]	; 0x54
   16754:	bl	13450 <find_levels_r>
   16758:	ldr	r2, [sp, #16]
   1675c:	ldr	r0, [r2, #60]	; 0x3c
   16760:	ldr	r3, [r2, #84]	; 0x54
   16764:	ldr	r0, [r0, #36]	; 0x24
   16768:	ldr	r3, [r3, #36]	; 0x24
   1676c:	cmp	r3, r0
   16770:	movlt	r3, r0
   16774:	add	ip, r3, #1
   16778:	lsl	r3, ip, #2
   1677c:	ldr	r0, [fp]
   16780:	str	ip, [r2, #36]	; 0x24
   16784:	ldr	ip, [r0, r3]
   16788:	str	ip, [r2, #100]	; 0x64
   1678c:	str	r2, [r0, r3]
   16790:	ldr	r2, [r8, #84]	; 0x54
   16794:	ldr	r3, [r8, #60]	; 0x3c
   16798:	ldr	r2, [r2, #36]	; 0x24
   1679c:	ldr	r3, [r3, #36]	; 0x24
   167a0:	cmp	r3, r2
   167a4:	movlt	r3, r2
   167a8:	add	r3, r3, #1
   167ac:	lsl	r0, r3, #2
   167b0:	ldr	r2, [fp]
   167b4:	str	r3, [r8, #36]	; 0x24
   167b8:	ldr	r3, [r2, r0]
   167bc:	str	r3, [r8, #100]	; 0x64
   167c0:	str	r8, [r2, r0]
   167c4:	ldr	r8, [r6, #84]	; 0x54
   167c8:	ldr	ip, [sp, #20]
   167cc:	ldr	r3, [r8, #24]
   167d0:	cmp	ip, r3
   167d4:	beq	16924 <opt_loop+0xcd0>
   167d8:	ldr	r3, [r8, #60]	; 0x3c
   167dc:	mov	r2, #0
   167e0:	str	ip, [r8, #24]
   167e4:	str	r2, [r8, #100]	; 0x64
   167e8:	cmp	r3, r2
   167ec:	moveq	r0, r3
   167f0:	moveq	r3, r0
   167f4:	beq	1690c <opt_loop+0xcb8>
   167f8:	ldr	r0, [r3, #24]
   167fc:	cmp	ip, r0
   16800:	beq	1686c <opt_loop+0xc18>
   16804:	ldr	r0, [r3, #60]	; 0x3c
   16808:	str	ip, [r3, #24]
   1680c:	str	r2, [r3, #100]	; 0x64
   16810:	cmp	r0, r2
   16814:	moveq	ip, r0
   16818:	moveq	r2, ip
   1681c:	beq	16858 <opt_loop+0xc04>
   16820:	str	r3, [sp, #16]
   16824:	bl	13450 <find_levels_r>
   16828:	ldr	r3, [sp, #16]
   1682c:	ldr	r0, [r3, #84]	; 0x54
   16830:	bl	13450 <find_levels_r>
   16834:	ldr	r3, [sp, #16]
   16838:	ldr	r2, [r3, #60]	; 0x3c
   1683c:	ldr	r0, [r3, #84]	; 0x54
   16840:	ldr	r2, [r2, #36]	; 0x24
   16844:	ldr	r0, [r0, #36]	; 0x24
   16848:	cmp	r0, r2
   1684c:	movge	r2, r0
   16850:	add	r2, r2, #1
   16854:	lsl	ip, r2, #2
   16858:	ldr	r0, [fp]
   1685c:	str	r2, [r3, #36]	; 0x24
   16860:	ldr	r2, [r0, ip]
   16864:	str	r2, [r3, #100]	; 0x64
   16868:	str	r3, [r0, ip]
   1686c:	ldr	r2, [r8, #84]	; 0x54
   16870:	ldr	ip, [sp, #20]
   16874:	ldr	r3, [r2, #24]
   16878:	cmp	ip, r3
   1687c:	beq	168f0 <opt_loop+0xc9c>
   16880:	ldr	r0, [r2, #60]	; 0x3c
   16884:	mov	r3, #0
   16888:	str	ip, [r2, #24]
   1688c:	str	r3, [r2, #100]	; 0x64
   16890:	cmp	r0, r3
   16894:	moveq	r3, r0
   16898:	moveq	ip, r3
   1689c:	beq	168d8 <opt_loop+0xc84>
   168a0:	str	r2, [sp, #16]
   168a4:	bl	13450 <find_levels_r>
   168a8:	ldr	r2, [sp, #16]
   168ac:	ldr	r0, [r2, #84]	; 0x54
   168b0:	bl	13450 <find_levels_r>
   168b4:	ldr	r2, [sp, #16]
   168b8:	ldr	r0, [r2, #60]	; 0x3c
   168bc:	ldr	r3, [r2, #84]	; 0x54
   168c0:	ldr	r0, [r0, #36]	; 0x24
   168c4:	ldr	r3, [r3, #36]	; 0x24
   168c8:	cmp	r3, r0
   168cc:	movlt	r3, r0
   168d0:	add	ip, r3, #1
   168d4:	lsl	r3, ip, #2
   168d8:	ldr	r0, [fp]
   168dc:	str	ip, [r2, #36]	; 0x24
   168e0:	ldr	ip, [r0, r3]
   168e4:	str	ip, [r2, #100]	; 0x64
   168e8:	str	r2, [r0, r3]
   168ec:	ldr	r2, [r8, #84]	; 0x54
   168f0:	ldr	r3, [r8, #60]	; 0x3c
   168f4:	ldr	r2, [r2, #36]	; 0x24
   168f8:	ldr	r3, [r3, #36]	; 0x24
   168fc:	cmp	r3, r2
   16900:	movlt	r3, r2
   16904:	add	r3, r3, #1
   16908:	lsl	r0, r3, #2
   1690c:	ldr	r2, [fp]
   16910:	str	r3, [r8, #36]	; 0x24
   16914:	ldr	r3, [r2, r0]
   16918:	str	r3, [r8, #100]	; 0x64
   1691c:	str	r8, [r2, r0]
   16920:	ldr	r8, [r6, #84]	; 0x54
   16924:	ldr	r3, [r6, #60]	; 0x3c
   16928:	ldr	r2, [r8, #36]	; 0x24
   1692c:	ldr	r3, [r3, #36]	; 0x24
   16930:	cmp	r3, r2
   16934:	movlt	r3, r2
   16938:	add	r3, r3, #1
   1693c:	lsl	r8, r3, #2
   16940:	ldr	r2, [fp]
   16944:	str	r3, [r6, #36]	; 0x24
   16948:	ldr	r3, [r2, r8]
   1694c:	str	r3, [r6, #100]	; 0x64
   16950:	str	r6, [r2, r8]
   16954:	ldr	r6, [r7, #84]	; 0x54
   16958:	ldr	r3, [r7, #60]	; 0x3c
   1695c:	ldr	r2, [r6, #36]	; 0x24
   16960:	ldr	r3, [r3, #36]	; 0x24
   16964:	cmp	r3, r2
   16968:	movlt	r3, r2
   1696c:	add	r3, r3, #1
   16970:	lsl	r8, r3, #2
   16974:	ldr	r2, [fp]
   16978:	str	r3, [r7, #36]	; 0x24
   1697c:	ldr	r3, [r2, r8]
   16980:	str	r3, [r7, #100]	; 0x64
   16984:	str	r7, [r2, r8]
   16988:	ldr	r7, [r5, #84]	; 0x54
   1698c:	ldr	r3, [r5, #60]	; 0x3c
   16990:	ldr	r2, [r7, #36]	; 0x24
   16994:	ldr	r3, [r3, #36]	; 0x24
   16998:	cmp	r3, r2
   1699c:	movlt	r3, r2
   169a0:	add	r3, r3, #1
   169a4:	lsl	r6, r3, #2
   169a8:	ldr	r2, [fp]
   169ac:	str	r3, [r5, #36]	; 0x24
   169b0:	ldr	r3, [r2, r6]
   169b4:	str	r3, [r5, #100]	; 0x64
   169b8:	str	r5, [r2, r6]
   169bc:	ldr	r5, [r1, #84]	; 0x54
   169c0:	ldr	ip, [sp, #20]
   169c4:	ldr	r3, [r5, #24]
   169c8:	cmp	ip, r3
   169cc:	beq	17630 <opt_loop+0x19dc>
   169d0:	ldr	r6, [r5, #60]	; 0x3c
   169d4:	mov	r3, #0
   169d8:	str	ip, [r5, #24]
   169dc:	str	r3, [r5, #100]	; 0x64
   169e0:	cmp	r6, r3
   169e4:	moveq	r3, r6
   169e8:	beq	17618 <opt_loop+0x19c4>
   169ec:	ldr	r2, [r6, #24]
   169f0:	cmp	ip, r2
   169f4:	beq	17068 <opt_loop+0x1414>
   169f8:	ldr	r7, [r6, #60]	; 0x3c
   169fc:	str	ip, [r6, #24]
   16a00:	str	r3, [r6, #100]	; 0x64
   16a04:	cmp	r7, r3
   16a08:	moveq	r3, r7
   16a0c:	beq	17054 <opt_loop+0x1400>
   16a10:	ldr	r2, [r7, #24]
   16a14:	cmp	ip, r2
   16a18:	beq	16d24 <opt_loop+0x10d0>
   16a1c:	ldr	r8, [r7, #60]	; 0x3c
   16a20:	str	ip, [r7, #24]
   16a24:	str	r3, [r7, #100]	; 0x64
   16a28:	cmp	r8, r3
   16a2c:	moveq	r3, r8
   16a30:	beq	16d10 <opt_loop+0x10bc>
   16a34:	ldr	r2, [r8, #24]
   16a38:	cmp	ip, r2
   16a3c:	beq	16b84 <opt_loop+0xf30>
   16a40:	ldr	r2, [r8, #60]	; 0x3c
   16a44:	str	ip, [r8, #24]
   16a48:	str	r3, [r8, #100]	; 0x64
   16a4c:	cmp	r2, r3
   16a50:	moveq	r0, r2
   16a54:	moveq	r3, r0
   16a58:	beq	16b70 <opt_loop+0xf1c>
   16a5c:	ldr	r0, [r2, #24]
   16a60:	cmp	ip, r0
   16a64:	beq	16ad0 <opt_loop+0xe7c>
   16a68:	ldr	r0, [r2, #60]	; 0x3c
   16a6c:	str	ip, [r2, #24]
   16a70:	str	r3, [r2, #100]	; 0x64
   16a74:	cmp	r0, r3
   16a78:	moveq	ip, #0
   16a7c:	moveq	r3, ip
   16a80:	beq	16abc <opt_loop+0xe68>
   16a84:	str	r2, [sp, #16]
   16a88:	bl	13450 <find_levels_r>
   16a8c:	ldr	r2, [sp, #16]
   16a90:	ldr	r0, [r2, #84]	; 0x54
   16a94:	bl	13450 <find_levels_r>
   16a98:	ldr	r2, [sp, #16]
   16a9c:	ldr	r0, [r2, #60]	; 0x3c
   16aa0:	ldr	r3, [r2, #84]	; 0x54
   16aa4:	ldr	r0, [r0, #36]	; 0x24
   16aa8:	ldr	r3, [r3, #36]	; 0x24
   16aac:	cmp	r3, r0
   16ab0:	movlt	r3, r0
   16ab4:	add	r3, r3, #1
   16ab8:	lsl	ip, r3, #2
   16abc:	ldr	r0, [fp]
   16ac0:	str	r3, [r2, #36]	; 0x24
   16ac4:	ldr	r3, [r0, ip]
   16ac8:	str	r3, [r2, #100]	; 0x64
   16acc:	str	r2, [r0, ip]
   16ad0:	ldr	r2, [r8, #84]	; 0x54
   16ad4:	ldr	ip, [sp, #20]
   16ad8:	ldr	r3, [r2, #24]
   16adc:	cmp	ip, r3
   16ae0:	beq	16b54 <opt_loop+0xf00>
   16ae4:	ldr	r0, [r2, #60]	; 0x3c
   16ae8:	mov	r3, #0
   16aec:	str	ip, [r2, #24]
   16af0:	str	r3, [r2, #100]	; 0x64
   16af4:	cmp	r0, r3
   16af8:	moveq	r3, r0
   16afc:	moveq	ip, r3
   16b00:	beq	16b3c <opt_loop+0xee8>
   16b04:	str	r2, [sp, #16]
   16b08:	bl	13450 <find_levels_r>
   16b0c:	ldr	r2, [sp, #16]
   16b10:	ldr	r0, [r2, #84]	; 0x54
   16b14:	bl	13450 <find_levels_r>
   16b18:	ldr	r2, [sp, #16]
   16b1c:	ldr	r0, [r2, #60]	; 0x3c
   16b20:	ldr	r3, [r2, #84]	; 0x54
   16b24:	ldr	r0, [r0, #36]	; 0x24
   16b28:	ldr	r3, [r3, #36]	; 0x24
   16b2c:	cmp	r3, r0
   16b30:	movlt	r3, r0
   16b34:	add	ip, r3, #1
   16b38:	lsl	r3, ip, #2
   16b3c:	ldr	r0, [fp]
   16b40:	str	ip, [r2, #36]	; 0x24
   16b44:	ldr	ip, [r0, r3]
   16b48:	str	ip, [r2, #100]	; 0x64
   16b4c:	str	r2, [r0, r3]
   16b50:	ldr	r2, [r8, #84]	; 0x54
   16b54:	ldr	r3, [r8, #60]	; 0x3c
   16b58:	ldr	r2, [r2, #36]	; 0x24
   16b5c:	ldr	r3, [r3, #36]	; 0x24
   16b60:	cmp	r3, r2
   16b64:	movlt	r3, r2
   16b68:	add	r3, r3, #1
   16b6c:	lsl	r0, r3, #2
   16b70:	ldr	r2, [fp]
   16b74:	str	r3, [r8, #36]	; 0x24
   16b78:	ldr	r3, [r2, r0]
   16b7c:	str	r3, [r8, #100]	; 0x64
   16b80:	str	r8, [r2, r0]
   16b84:	ldr	r8, [r7, #84]	; 0x54
   16b88:	ldr	ip, [sp, #20]
   16b8c:	ldr	r3, [r8, #24]
   16b90:	cmp	ip, r3
   16b94:	beq	16cf4 <opt_loop+0x10a0>
   16b98:	ldr	r3, [r8, #60]	; 0x3c
   16b9c:	mov	r2, #0
   16ba0:	str	ip, [r8, #24]
   16ba4:	str	r2, [r8, #100]	; 0x64
   16ba8:	cmp	r3, r2
   16bac:	moveq	r0, r3
   16bb0:	moveq	r3, r0
   16bb4:	beq	16cdc <opt_loop+0x1088>
   16bb8:	ldr	r0, [r3, #24]
   16bbc:	cmp	ip, r0
   16bc0:	beq	16c3c <opt_loop+0xfe8>
   16bc4:	ldr	r0, [r3, #60]	; 0x3c
   16bc8:	str	ip, [r3, #24]
   16bcc:	str	r2, [r3, #100]	; 0x64
   16bd0:	cmp	r0, r2
   16bd4:	moveq	ip, r0
   16bd8:	moveq	r2, ip
   16bdc:	beq	16c18 <opt_loop+0xfc4>
   16be0:	str	r3, [sp, #16]
   16be4:	bl	13450 <find_levels_r>
   16be8:	ldr	r3, [sp, #16]
   16bec:	ldr	r0, [r3, #84]	; 0x54
   16bf0:	bl	13450 <find_levels_r>
   16bf4:	ldr	r3, [sp, #16]
   16bf8:	ldr	r2, [r3, #60]	; 0x3c
   16bfc:	ldr	r0, [r3, #84]	; 0x54
   16c00:	ldr	r2, [r2, #36]	; 0x24
   16c04:	ldr	r0, [r0, #36]	; 0x24
   16c08:	cmp	r0, r2
   16c0c:	movge	r2, r0
   16c10:	add	r2, r2, #1
   16c14:	lsl	ip, r2, #2
   16c18:	ldr	r0, [fp]
   16c1c:	str	r2, [r3, #36]	; 0x24
   16c20:	ldr	r2, [r0, ip]
   16c24:	str	r2, [r3, #100]	; 0x64
   16c28:	str	r3, [r0, ip]
   16c2c:	b	16c3c <opt_loop+0xfe8>
   16c30:	.word	0x00028ab8
   16c34:	.word	0x0002836c
   16c38:	.word	0x000000c4
   16c3c:	ldr	r2, [r8, #84]	; 0x54
   16c40:	ldr	ip, [sp, #20]
   16c44:	ldr	r3, [r2, #24]
   16c48:	cmp	ip, r3
   16c4c:	beq	16cc0 <opt_loop+0x106c>
   16c50:	ldr	r0, [r2, #60]	; 0x3c
   16c54:	mov	r3, #0
   16c58:	str	ip, [r2, #24]
   16c5c:	str	r3, [r2, #100]	; 0x64
   16c60:	cmp	r0, r3
   16c64:	moveq	r3, r0
   16c68:	moveq	ip, r3
   16c6c:	beq	16ca8 <opt_loop+0x1054>
   16c70:	str	r2, [sp, #16]
   16c74:	bl	13450 <find_levels_r>
   16c78:	ldr	r2, [sp, #16]
   16c7c:	ldr	r0, [r2, #84]	; 0x54
   16c80:	bl	13450 <find_levels_r>
   16c84:	ldr	r2, [sp, #16]
   16c88:	ldr	r0, [r2, #60]	; 0x3c
   16c8c:	ldr	r3, [r2, #84]	; 0x54
   16c90:	ldr	r0, [r0, #36]	; 0x24
   16c94:	ldr	r3, [r3, #36]	; 0x24
   16c98:	cmp	r3, r0
   16c9c:	movlt	r3, r0
   16ca0:	add	ip, r3, #1
   16ca4:	lsl	r3, ip, #2
   16ca8:	ldr	r0, [fp]
   16cac:	str	ip, [r2, #36]	; 0x24
   16cb0:	ldr	ip, [r0, r3]
   16cb4:	str	ip, [r2, #100]	; 0x64
   16cb8:	str	r2, [r0, r3]
   16cbc:	ldr	r2, [r8, #84]	; 0x54
   16cc0:	ldr	r3, [r8, #60]	; 0x3c
   16cc4:	ldr	r2, [r2, #36]	; 0x24
   16cc8:	ldr	r3, [r3, #36]	; 0x24
   16ccc:	cmp	r3, r2
   16cd0:	movlt	r3, r2
   16cd4:	add	r3, r3, #1
   16cd8:	lsl	r0, r3, #2
   16cdc:	ldr	r2, [fp]
   16ce0:	str	r3, [r8, #36]	; 0x24
   16ce4:	ldr	r3, [r2, r0]
   16ce8:	str	r3, [r8, #100]	; 0x64
   16cec:	str	r8, [r2, r0]
   16cf0:	ldr	r8, [r7, #84]	; 0x54
   16cf4:	ldr	r3, [r7, #60]	; 0x3c
   16cf8:	ldr	r2, [r8, #36]	; 0x24
   16cfc:	ldr	r3, [r3, #36]	; 0x24
   16d00:	cmp	r3, r2
   16d04:	movlt	r3, r2
   16d08:	add	r3, r3, #1
   16d0c:	lsl	r8, r3, #2
   16d10:	ldr	r2, [fp]
   16d14:	str	r3, [r7, #36]	; 0x24
   16d18:	ldr	r3, [r2, r8]
   16d1c:	str	r3, [r7, #100]	; 0x64
   16d20:	str	r7, [r2, r8]
   16d24:	ldr	r7, [r6, #84]	; 0x54
   16d28:	ldr	ip, [sp, #20]
   16d2c:	ldr	r3, [r7, #24]
   16d30:	cmp	ip, r3
   16d34:	beq	17038 <opt_loop+0x13e4>
   16d38:	ldr	r8, [r7, #60]	; 0x3c
   16d3c:	mov	r3, #0
   16d40:	str	ip, [r7, #24]
   16d44:	str	r3, [r7, #100]	; 0x64
   16d48:	cmp	r8, r3
   16d4c:	moveq	r3, r8
   16d50:	beq	17020 <opt_loop+0x13cc>
   16d54:	ldr	r2, [r8, #24]
   16d58:	cmp	ip, r2
   16d5c:	beq	16ea4 <opt_loop+0x1250>
   16d60:	ldr	r2, [r8, #60]	; 0x3c
   16d64:	str	ip, [r8, #24]
   16d68:	str	r3, [r8, #100]	; 0x64
   16d6c:	cmp	r2, r3
   16d70:	moveq	r0, r2
   16d74:	moveq	r3, r0
   16d78:	beq	16e90 <opt_loop+0x123c>
   16d7c:	ldr	r0, [r2, #24]
   16d80:	cmp	ip, r0
   16d84:	beq	16df0 <opt_loop+0x119c>
   16d88:	ldr	r0, [r2, #60]	; 0x3c
   16d8c:	str	ip, [r2, #24]
   16d90:	str	r3, [r2, #100]	; 0x64
   16d94:	cmp	r0, r3
   16d98:	moveq	r3, r0
   16d9c:	moveq	ip, r3
   16da0:	beq	16ddc <opt_loop+0x1188>
   16da4:	str	r2, [sp, #16]
   16da8:	bl	13450 <find_levels_r>
   16dac:	ldr	r2, [sp, #16]
   16db0:	ldr	r0, [r2, #84]	; 0x54
   16db4:	bl	13450 <find_levels_r>
   16db8:	ldr	r2, [sp, #16]
   16dbc:	ldr	r0, [r2, #60]	; 0x3c
   16dc0:	ldr	r3, [r2, #84]	; 0x54
   16dc4:	ldr	r0, [r0, #36]	; 0x24
   16dc8:	ldr	r3, [r3, #36]	; 0x24
   16dcc:	cmp	r3, r0
   16dd0:	movlt	r3, r0
   16dd4:	add	ip, r3, #1
   16dd8:	lsl	r3, ip, #2
   16ddc:	ldr	r0, [fp]
   16de0:	str	ip, [r2, #36]	; 0x24
   16de4:	ldr	ip, [r0, r3]
   16de8:	str	ip, [r2, #100]	; 0x64
   16dec:	str	r2, [r0, r3]
   16df0:	ldr	r2, [r8, #84]	; 0x54
   16df4:	ldr	ip, [sp, #20]
   16df8:	ldr	r3, [r2, #24]
   16dfc:	cmp	ip, r3
   16e00:	beq	16e74 <opt_loop+0x1220>
   16e04:	ldr	r0, [r2, #60]	; 0x3c
   16e08:	mov	r3, #0
   16e0c:	str	ip, [r2, #24]
   16e10:	str	r3, [r2, #100]	; 0x64
   16e14:	cmp	r0, r3
   16e18:	moveq	r3, r0
   16e1c:	moveq	ip, r3
   16e20:	beq	16e5c <opt_loop+0x1208>
   16e24:	str	r2, [sp, #16]
   16e28:	bl	13450 <find_levels_r>
   16e2c:	ldr	r2, [sp, #16]
   16e30:	ldr	r0, [r2, #84]	; 0x54
   16e34:	bl	13450 <find_levels_r>
   16e38:	ldr	r2, [sp, #16]
   16e3c:	ldr	r0, [r2, #60]	; 0x3c
   16e40:	ldr	r3, [r2, #84]	; 0x54
   16e44:	ldr	r0, [r0, #36]	; 0x24
   16e48:	ldr	r3, [r3, #36]	; 0x24
   16e4c:	cmp	r3, r0
   16e50:	movlt	r3, r0
   16e54:	add	ip, r3, #1
   16e58:	lsl	r3, ip, #2
   16e5c:	ldr	r0, [fp]
   16e60:	str	ip, [r2, #36]	; 0x24
   16e64:	ldr	ip, [r0, r3]
   16e68:	str	ip, [r2, #100]	; 0x64
   16e6c:	str	r2, [r0, r3]
   16e70:	ldr	r2, [r8, #84]	; 0x54
   16e74:	ldr	r3, [r8, #60]	; 0x3c
   16e78:	ldr	r2, [r2, #36]	; 0x24
   16e7c:	ldr	r3, [r3, #36]	; 0x24
   16e80:	cmp	r3, r2
   16e84:	movlt	r3, r2
   16e88:	add	r3, r3, #1
   16e8c:	lsl	r0, r3, #2
   16e90:	ldr	r2, [fp]
   16e94:	str	r3, [r8, #36]	; 0x24
   16e98:	ldr	r3, [r2, r0]
   16e9c:	str	r3, [r8, #100]	; 0x64
   16ea0:	str	r8, [r2, r0]
   16ea4:	ldr	r8, [r7, #84]	; 0x54
   16ea8:	ldr	ip, [sp, #20]
   16eac:	ldr	r3, [r8, #24]
   16eb0:	cmp	ip, r3
   16eb4:	beq	17004 <opt_loop+0x13b0>
   16eb8:	ldr	r3, [r8, #60]	; 0x3c
   16ebc:	mov	r2, #0
   16ec0:	str	ip, [r8, #24]
   16ec4:	str	r2, [r8, #100]	; 0x64
   16ec8:	cmp	r3, r2
   16ecc:	moveq	r0, r3
   16ed0:	moveq	r3, r0
   16ed4:	beq	16fec <opt_loop+0x1398>
   16ed8:	ldr	r0, [r3, #24]
   16edc:	cmp	ip, r0
   16ee0:	beq	16f4c <opt_loop+0x12f8>
   16ee4:	ldr	r0, [r3, #60]	; 0x3c
   16ee8:	str	ip, [r3, #24]
   16eec:	str	r2, [r3, #100]	; 0x64
   16ef0:	cmp	r0, r2
   16ef4:	moveq	ip, r0
   16ef8:	moveq	r2, ip
   16efc:	beq	16f38 <opt_loop+0x12e4>
   16f00:	str	r3, [sp, #16]
   16f04:	bl	13450 <find_levels_r>
   16f08:	ldr	r3, [sp, #16]
   16f0c:	ldr	r0, [r3, #84]	; 0x54
   16f10:	bl	13450 <find_levels_r>
   16f14:	ldr	r3, [sp, #16]
   16f18:	ldr	r2, [r3, #60]	; 0x3c
   16f1c:	ldr	r0, [r3, #84]	; 0x54
   16f20:	ldr	r2, [r2, #36]	; 0x24
   16f24:	ldr	r0, [r0, #36]	; 0x24
   16f28:	cmp	r0, r2
   16f2c:	movge	r2, r0
   16f30:	add	r2, r2, #1
   16f34:	lsl	ip, r2, #2
   16f38:	ldr	r0, [fp]
   16f3c:	str	r2, [r3, #36]	; 0x24
   16f40:	ldr	r2, [r0, ip]
   16f44:	str	r2, [r3, #100]	; 0x64
   16f48:	str	r3, [r0, ip]
   16f4c:	ldr	r2, [r8, #84]	; 0x54
   16f50:	ldr	ip, [sp, #20]
   16f54:	ldr	r3, [r2, #24]
   16f58:	cmp	ip, r3
   16f5c:	beq	16fd0 <opt_loop+0x137c>
   16f60:	ldr	r0, [r2, #60]	; 0x3c
   16f64:	mov	r3, #0
   16f68:	str	ip, [r2, #24]
   16f6c:	str	r3, [r2, #100]	; 0x64
   16f70:	cmp	r0, r3
   16f74:	moveq	r3, r0
   16f78:	moveq	ip, r3
   16f7c:	beq	16fb8 <opt_loop+0x1364>
   16f80:	str	r2, [sp, #16]
   16f84:	bl	13450 <find_levels_r>
   16f88:	ldr	r2, [sp, #16]
   16f8c:	ldr	r0, [r2, #84]	; 0x54
   16f90:	bl	13450 <find_levels_r>
   16f94:	ldr	r2, [sp, #16]
   16f98:	ldr	r0, [r2, #60]	; 0x3c
   16f9c:	ldr	r3, [r2, #84]	; 0x54
   16fa0:	ldr	r0, [r0, #36]	; 0x24
   16fa4:	ldr	r3, [r3, #36]	; 0x24
   16fa8:	cmp	r3, r0
   16fac:	movlt	r3, r0
   16fb0:	add	ip, r3, #1
   16fb4:	lsl	r3, ip, #2
   16fb8:	ldr	r0, [fp]
   16fbc:	str	ip, [r2, #36]	; 0x24
   16fc0:	ldr	ip, [r0, r3]
   16fc4:	str	ip, [r2, #100]	; 0x64
   16fc8:	str	r2, [r0, r3]
   16fcc:	ldr	r2, [r8, #84]	; 0x54
   16fd0:	ldr	r3, [r8, #60]	; 0x3c
   16fd4:	ldr	r2, [r2, #36]	; 0x24
   16fd8:	ldr	r3, [r3, #36]	; 0x24
   16fdc:	cmp	r3, r2
   16fe0:	movlt	r3, r2
   16fe4:	add	r3, r3, #1
   16fe8:	lsl	r0, r3, #2
   16fec:	ldr	r2, [fp]
   16ff0:	str	r3, [r8, #36]	; 0x24
   16ff4:	ldr	r3, [r2, r0]
   16ff8:	str	r3, [r8, #100]	; 0x64
   16ffc:	str	r8, [r2, r0]
   17000:	ldr	r8, [r7, #84]	; 0x54
   17004:	ldr	r3, [r7, #60]	; 0x3c
   17008:	ldr	r2, [r8, #36]	; 0x24
   1700c:	ldr	r3, [r3, #36]	; 0x24
   17010:	cmp	r3, r2
   17014:	movlt	r3, r2
   17018:	add	r3, r3, #1
   1701c:	lsl	r8, r3, #2
   17020:	ldr	r2, [fp]
   17024:	str	r3, [r7, #36]	; 0x24
   17028:	ldr	r3, [r2, r8]
   1702c:	str	r3, [r7, #100]	; 0x64
   17030:	str	r7, [r2, r8]
   17034:	ldr	r7, [r6, #84]	; 0x54
   17038:	ldr	r3, [r6, #60]	; 0x3c
   1703c:	ldr	r2, [r7, #36]	; 0x24
   17040:	ldr	r3, [r3, #36]	; 0x24
   17044:	cmp	r3, r2
   17048:	movlt	r3, r2
   1704c:	add	r3, r3, #1
   17050:	lsl	r7, r3, #2
   17054:	ldr	r2, [fp]
   17058:	str	r3, [r6, #36]	; 0x24
   1705c:	ldr	r3, [r2, r7]
   17060:	str	r3, [r6, #100]	; 0x64
   17064:	str	r6, [r2, r7]
   17068:	ldr	r7, [r5, #84]	; 0x54
   1706c:	ldr	ip, [sp, #20]
   17070:	ldr	r3, [r7, #24]
   17074:	cmp	ip, r3
   17078:	beq	175fc <opt_loop+0x19a8>
   1707c:	ldr	r8, [r7, #60]	; 0x3c
   17080:	mov	r3, #0
   17084:	str	ip, [r7, #24]
   17088:	str	r3, [r7, #100]	; 0x64
   1708c:	cmp	r8, r3
   17090:	moveq	r3, r8
   17094:	beq	175e4 <opt_loop+0x1990>
   17098:	ldr	r2, [r8, #24]
   1709c:	cmp	ip, r2
   170a0:	beq	172b4 <opt_loop+0x1660>
   170a4:	ldr	r6, [r8, #60]	; 0x3c
   170a8:	str	ip, [r8, #24]
   170ac:	str	r3, [r8, #100]	; 0x64
   170b0:	cmp	r6, r3
   170b4:	moveq	r3, r6
   170b8:	beq	172a0 <opt_loop+0x164c>
   170bc:	ldr	r2, [r6, #24]
   170c0:	cmp	ip, r2
   170c4:	beq	1720c <opt_loop+0x15b8>
   170c8:	ldr	r2, [r6, #60]	; 0x3c
   170cc:	str	ip, [r6, #24]
   170d0:	str	r3, [r6, #100]	; 0x64
   170d4:	cmp	r2, r3
   170d8:	moveq	r0, r2
   170dc:	moveq	r3, r0
   170e0:	beq	171f8 <opt_loop+0x15a4>
   170e4:	ldr	r0, [r2, #24]
   170e8:	cmp	ip, r0
   170ec:	beq	17158 <opt_loop+0x1504>
   170f0:	ldr	r0, [r2, #60]	; 0x3c
   170f4:	str	ip, [r2, #24]
   170f8:	str	r3, [r2, #100]	; 0x64
   170fc:	cmp	r0, r3
   17100:	moveq	r3, r0
   17104:	moveq	ip, r3
   17108:	beq	17144 <opt_loop+0x14f0>
   1710c:	str	r2, [sp, #16]
   17110:	bl	13450 <find_levels_r>
   17114:	ldr	r2, [sp, #16]
   17118:	ldr	r0, [r2, #84]	; 0x54
   1711c:	bl	13450 <find_levels_r>
   17120:	ldr	r2, [sp, #16]
   17124:	ldr	r0, [r2, #60]	; 0x3c
   17128:	ldr	r3, [r2, #84]	; 0x54
   1712c:	ldr	r0, [r0, #36]	; 0x24
   17130:	ldr	r3, [r3, #36]	; 0x24
   17134:	cmp	r3, r0
   17138:	movlt	r3, r0
   1713c:	add	ip, r3, #1
   17140:	lsl	r3, ip, #2
   17144:	ldr	r0, [fp]
   17148:	str	ip, [r2, #36]	; 0x24
   1714c:	ldr	ip, [r0, r3]
   17150:	str	ip, [r2, #100]	; 0x64
   17154:	str	r2, [r0, r3]
   17158:	ldr	r2, [r6, #84]	; 0x54
   1715c:	ldr	ip, [sp, #20]
   17160:	ldr	r3, [r2, #24]
   17164:	cmp	ip, r3
   17168:	beq	171dc <opt_loop+0x1588>
   1716c:	ldr	r0, [r2, #60]	; 0x3c
   17170:	mov	r3, #0
   17174:	str	ip, [r2, #24]
   17178:	str	r3, [r2, #100]	; 0x64
   1717c:	cmp	r0, r3
   17180:	moveq	r3, r0
   17184:	moveq	ip, r3
   17188:	beq	171c4 <opt_loop+0x1570>
   1718c:	str	r2, [sp, #16]
   17190:	bl	13450 <find_levels_r>
   17194:	ldr	r2, [sp, #16]
   17198:	ldr	r0, [r2, #84]	; 0x54
   1719c:	bl	13450 <find_levels_r>
   171a0:	ldr	r2, [sp, #16]
   171a4:	ldr	r0, [r2, #60]	; 0x3c
   171a8:	ldr	r3, [r2, #84]	; 0x54
   171ac:	ldr	r0, [r0, #36]	; 0x24
   171b0:	ldr	r3, [r3, #36]	; 0x24
   171b4:	cmp	r3, r0
   171b8:	movlt	r3, r0
   171bc:	add	ip, r3, #1
   171c0:	lsl	r3, ip, #2
   171c4:	ldr	r0, [fp]
   171c8:	str	ip, [r2, #36]	; 0x24
   171cc:	ldr	ip, [r0, r3]
   171d0:	str	ip, [r2, #100]	; 0x64
   171d4:	str	r2, [r0, r3]
   171d8:	ldr	r2, [r6, #84]	; 0x54
   171dc:	ldr	r3, [r6, #60]	; 0x3c
   171e0:	ldr	r2, [r2, #36]	; 0x24
   171e4:	ldr	r3, [r3, #36]	; 0x24
   171e8:	cmp	r3, r2
   171ec:	movlt	r3, r2
   171f0:	add	r3, r3, #1
   171f4:	lsl	r0, r3, #2
   171f8:	ldr	r2, [fp]
   171fc:	str	r3, [r6, #36]	; 0x24
   17200:	ldr	r3, [r2, r0]
   17204:	str	r3, [r6, #100]	; 0x64
   17208:	str	r6, [r2, r0]
   1720c:	ldr	r6, [r8, #84]	; 0x54
   17210:	ldr	r2, [sp, #20]
   17214:	ldr	r3, [r6, #24]
   17218:	cmp	r2, r3
   1721c:	beq	17284 <opt_loop+0x1630>
   17220:	ldr	r0, [r6, #60]	; 0x3c
   17224:	mov	r3, #0
   17228:	str	r2, [r6, #24]
   1722c:	str	r3, [r6, #100]	; 0x64
   17230:	cmp	r0, r3
   17234:	moveq	r3, r0
   17238:	moveq	r2, r3
   1723c:	beq	1726c <opt_loop+0x1618>
   17240:	bl	13450 <find_levels_r>
   17244:	ldr	r0, [r6, #84]	; 0x54
   17248:	bl	13450 <find_levels_r>
   1724c:	ldr	r2, [r6, #60]	; 0x3c
   17250:	ldr	r3, [r6, #84]	; 0x54
   17254:	ldr	r2, [r2, #36]	; 0x24
   17258:	ldr	r3, [r3, #36]	; 0x24
   1725c:	cmp	r3, r2
   17260:	movlt	r3, r2
   17264:	add	r2, r3, #1
   17268:	lsl	r3, r2, #2
   1726c:	ldr	r0, [fp]
   17270:	str	r2, [r6, #36]	; 0x24
   17274:	ldr	r2, [r0, r3]
   17278:	str	r2, [r6, #100]	; 0x64
   1727c:	str	r6, [r0, r3]
   17280:	ldr	r6, [r8, #84]	; 0x54
   17284:	ldr	r3, [r8, #60]	; 0x3c
   17288:	ldr	r2, [r6, #36]	; 0x24
   1728c:	ldr	r3, [r3, #36]	; 0x24
   17290:	cmp	r3, r2
   17294:	movlt	r3, r2
   17298:	add	r3, r3, #1
   1729c:	lsl	r6, r3, #2
   172a0:	ldr	r2, [fp]
   172a4:	str	r3, [r8, #36]	; 0x24
   172a8:	ldr	r3, [r2, r6]
   172ac:	str	r3, [r8, #100]	; 0x64
   172b0:	str	r8, [r2, r6]
   172b4:	ldr	r6, [r7, #84]	; 0x54
   172b8:	ldr	ip, [sp, #20]
   172bc:	ldr	r3, [r6, #24]
   172c0:	cmp	ip, r3
   172c4:	beq	175c8 <opt_loop+0x1974>
   172c8:	ldr	r8, [r6, #60]	; 0x3c
   172cc:	mov	r3, #0
   172d0:	str	ip, [r6, #24]
   172d4:	str	r3, [r6, #100]	; 0x64
   172d8:	cmp	r8, r3
   172dc:	moveq	r3, r8
   172e0:	beq	175b0 <opt_loop+0x195c>
   172e4:	ldr	r2, [r8, #24]
   172e8:	cmp	ip, r2
   172ec:	beq	17434 <opt_loop+0x17e0>
   172f0:	ldr	r2, [r8, #60]	; 0x3c
   172f4:	str	ip, [r8, #24]
   172f8:	str	r3, [r8, #100]	; 0x64
   172fc:	cmp	r2, r3
   17300:	moveq	r0, r2
   17304:	moveq	r3, r0
   17308:	beq	17420 <opt_loop+0x17cc>
   1730c:	ldr	r0, [r2, #24]
   17310:	cmp	ip, r0
   17314:	beq	17380 <opt_loop+0x172c>
   17318:	ldr	r0, [r2, #60]	; 0x3c
   1731c:	str	ip, [r2, #24]
   17320:	str	r3, [r2, #100]	; 0x64
   17324:	cmp	r0, r3
   17328:	moveq	r3, r0
   1732c:	moveq	ip, r3
   17330:	beq	1736c <opt_loop+0x1718>
   17334:	str	r2, [sp, #16]
   17338:	bl	13450 <find_levels_r>
   1733c:	ldr	r2, [sp, #16]
   17340:	ldr	r0, [r2, #84]	; 0x54
   17344:	bl	13450 <find_levels_r>
   17348:	ldr	r2, [sp, #16]
   1734c:	ldr	r0, [r2, #60]	; 0x3c
   17350:	ldr	r3, [r2, #84]	; 0x54
   17354:	ldr	r0, [r0, #36]	; 0x24
   17358:	ldr	r3, [r3, #36]	; 0x24
   1735c:	cmp	r3, r0
   17360:	movlt	r3, r0
   17364:	add	ip, r3, #1
   17368:	lsl	r3, ip, #2
   1736c:	ldr	r0, [fp]
   17370:	str	ip, [r2, #36]	; 0x24
   17374:	ldr	ip, [r0, r3]
   17378:	str	ip, [r2, #100]	; 0x64
   1737c:	str	r2, [r0, r3]
   17380:	ldr	r2, [r8, #84]	; 0x54
   17384:	ldr	ip, [sp, #20]
   17388:	ldr	r3, [r2, #24]
   1738c:	cmp	ip, r3
   17390:	beq	17404 <opt_loop+0x17b0>
   17394:	ldr	r0, [r2, #60]	; 0x3c
   17398:	mov	r3, #0
   1739c:	str	ip, [r2, #24]
   173a0:	str	r3, [r2, #100]	; 0x64
   173a4:	cmp	r0, r3
   173a8:	moveq	r3, r0
   173ac:	moveq	ip, r3
   173b0:	beq	173ec <opt_loop+0x1798>
   173b4:	str	r2, [sp, #16]
   173b8:	bl	13450 <find_levels_r>
   173bc:	ldr	r2, [sp, #16]
   173c0:	ldr	r0, [r2, #84]	; 0x54
   173c4:	bl	13450 <find_levels_r>
   173c8:	ldr	r2, [sp, #16]
   173cc:	ldr	r0, [r2, #60]	; 0x3c
   173d0:	ldr	r3, [r2, #84]	; 0x54
   173d4:	ldr	r0, [r0, #36]	; 0x24
   173d8:	ldr	r3, [r3, #36]	; 0x24
   173dc:	cmp	r3, r0
   173e0:	movlt	r3, r0
   173e4:	add	ip, r3, #1
   173e8:	lsl	r3, ip, #2
   173ec:	ldr	r0, [fp]
   173f0:	str	ip, [r2, #36]	; 0x24
   173f4:	ldr	ip, [r0, r3]
   173f8:	str	ip, [r2, #100]	; 0x64
   173fc:	str	r2, [r0, r3]
   17400:	ldr	r2, [r8, #84]	; 0x54
   17404:	ldr	r3, [r8, #60]	; 0x3c
   17408:	ldr	r2, [r2, #36]	; 0x24
   1740c:	ldr	r3, [r3, #36]	; 0x24
   17410:	cmp	r3, r2
   17414:	movlt	r3, r2
   17418:	add	r3, r3, #1
   1741c:	lsl	r0, r3, #2
   17420:	ldr	r2, [fp]
   17424:	str	r3, [r8, #36]	; 0x24
   17428:	ldr	r3, [r2, r0]
   1742c:	str	r3, [r8, #100]	; 0x64
   17430:	str	r8, [r2, r0]
   17434:	ldr	r8, [r6, #84]	; 0x54
   17438:	ldr	ip, [sp, #20]
   1743c:	ldr	r3, [r8, #24]
   17440:	cmp	ip, r3
   17444:	beq	17594 <opt_loop+0x1940>
   17448:	ldr	r3, [r8, #60]	; 0x3c
   1744c:	mov	r2, #0
   17450:	str	ip, [r8, #24]
   17454:	str	r2, [r8, #100]	; 0x64
   17458:	cmp	r3, r2
   1745c:	moveq	r0, r3
   17460:	moveq	r3, r0
   17464:	beq	1757c <opt_loop+0x1928>
   17468:	ldr	r0, [r3, #24]
   1746c:	cmp	ip, r0
   17470:	beq	174dc <opt_loop+0x1888>
   17474:	ldr	r0, [r3, #60]	; 0x3c
   17478:	str	ip, [r3, #24]
   1747c:	str	r2, [r3, #100]	; 0x64
   17480:	cmp	r0, r2
   17484:	moveq	ip, r0
   17488:	moveq	r2, ip
   1748c:	beq	174c8 <opt_loop+0x1874>
   17490:	str	r3, [sp, #16]
   17494:	bl	13450 <find_levels_r>
   17498:	ldr	r3, [sp, #16]
   1749c:	ldr	r0, [r3, #84]	; 0x54
   174a0:	bl	13450 <find_levels_r>
   174a4:	ldr	r3, [sp, #16]
   174a8:	ldr	r2, [r3, #60]	; 0x3c
   174ac:	ldr	r0, [r3, #84]	; 0x54
   174b0:	ldr	r2, [r2, #36]	; 0x24
   174b4:	ldr	r0, [r0, #36]	; 0x24
   174b8:	cmp	r0, r2
   174bc:	movge	r2, r0
   174c0:	add	r2, r2, #1
   174c4:	lsl	ip, r2, #2
   174c8:	ldr	r0, [fp]
   174cc:	str	r2, [r3, #36]	; 0x24
   174d0:	ldr	r2, [r0, ip]
   174d4:	str	r2, [r3, #100]	; 0x64
   174d8:	str	r3, [r0, ip]
   174dc:	ldr	r2, [r8, #84]	; 0x54
   174e0:	ldr	ip, [sp, #20]
   174e4:	ldr	r3, [r2, #24]
   174e8:	cmp	ip, r3
   174ec:	beq	17560 <opt_loop+0x190c>
   174f0:	ldr	r0, [r2, #60]	; 0x3c
   174f4:	mov	r3, #0
   174f8:	str	ip, [r2, #24]
   174fc:	str	r3, [r2, #100]	; 0x64
   17500:	cmp	r0, r3
   17504:	moveq	r3, r0
   17508:	moveq	ip, r3
   1750c:	beq	17548 <opt_loop+0x18f4>
   17510:	str	r2, [sp, #16]
   17514:	bl	13450 <find_levels_r>
   17518:	ldr	r2, [sp, #16]
   1751c:	ldr	r0, [r2, #84]	; 0x54
   17520:	bl	13450 <find_levels_r>
   17524:	ldr	r2, [sp, #16]
   17528:	ldr	r0, [r2, #60]	; 0x3c
   1752c:	ldr	r3, [r2, #84]	; 0x54
   17530:	ldr	r0, [r0, #36]	; 0x24
   17534:	ldr	r3, [r3, #36]	; 0x24
   17538:	cmp	r3, r0
   1753c:	movlt	r3, r0
   17540:	add	ip, r3, #1
   17544:	lsl	r3, ip, #2
   17548:	ldr	r0, [fp]
   1754c:	str	ip, [r2, #36]	; 0x24
   17550:	ldr	ip, [r0, r3]
   17554:	str	ip, [r2, #100]	; 0x64
   17558:	str	r2, [r0, r3]
   1755c:	ldr	r2, [r8, #84]	; 0x54
   17560:	ldr	r3, [r8, #60]	; 0x3c
   17564:	ldr	r2, [r2, #36]	; 0x24
   17568:	ldr	r3, [r3, #36]	; 0x24
   1756c:	cmp	r3, r2
   17570:	movlt	r3, r2
   17574:	add	r3, r3, #1
   17578:	lsl	r0, r3, #2
   1757c:	ldr	r2, [fp]
   17580:	str	r3, [r8, #36]	; 0x24
   17584:	ldr	r3, [r2, r0]
   17588:	str	r3, [r8, #100]	; 0x64
   1758c:	str	r8, [r2, r0]
   17590:	ldr	r8, [r6, #84]	; 0x54
   17594:	ldr	r3, [r6, #60]	; 0x3c
   17598:	ldr	r2, [r8, #36]	; 0x24
   1759c:	ldr	r3, [r3, #36]	; 0x24
   175a0:	cmp	r3, r2
   175a4:	movlt	r3, r2
   175a8:	add	r3, r3, #1
   175ac:	lsl	r8, r3, #2
   175b0:	ldr	r2, [fp]
   175b4:	str	r3, [r6, #36]	; 0x24
   175b8:	ldr	r3, [r2, r8]
   175bc:	str	r3, [r6, #100]	; 0x64
   175c0:	str	r6, [r2, r8]
   175c4:	ldr	r6, [r7, #84]	; 0x54
   175c8:	ldr	r3, [r7, #60]	; 0x3c
   175cc:	ldr	r2, [r6, #36]	; 0x24
   175d0:	ldr	r3, [r3, #36]	; 0x24
   175d4:	cmp	r3, r2
   175d8:	movlt	r3, r2
   175dc:	add	r3, r3, #1
   175e0:	lsl	r8, r3, #2
   175e4:	ldr	r2, [fp]
   175e8:	str	r3, [r7, #36]	; 0x24
   175ec:	ldr	r3, [r2, r8]
   175f0:	str	r3, [r7, #100]	; 0x64
   175f4:	str	r7, [r2, r8]
   175f8:	ldr	r7, [r5, #84]	; 0x54
   175fc:	ldr	r3, [r5, #60]	; 0x3c
   17600:	ldr	r2, [r7, #36]	; 0x24
   17604:	ldr	r3, [r3, #36]	; 0x24
   17608:	cmp	r3, r2
   1760c:	movlt	r3, r2
   17610:	add	r3, r3, #1
   17614:	lsl	r6, r3, #2
   17618:	ldr	r2, [fp]
   1761c:	str	r3, [r5, #36]	; 0x24
   17620:	ldr	r3, [r2, r6]
   17624:	str	r3, [r5, #100]	; 0x64
   17628:	str	r5, [r2, r6]
   1762c:	ldr	r5, [r1, #84]	; 0x54
   17630:	ldr	r3, [r1, #60]	; 0x3c
   17634:	ldr	r2, [r5, #36]	; 0x24
   17638:	ldr	r3, [r3, #36]	; 0x24
   1763c:	cmp	r3, r2
   17640:	movlt	r3, r2
   17644:	add	r3, r3, #1
   17648:	lsl	r5, r3, #2
   1764c:	ldr	r2, [fp]
   17650:	str	r3, [r1, #36]	; 0x24
   17654:	ldr	r3, [r2, r5]
   17658:	str	r3, [r1, #100]	; 0x64
   1765c:	str	r1, [r2, r5]
   17660:	ldr	r1, [sl, #84]	; 0x54
   17664:	ldr	ip, [sp, #20]
   17668:	ldr	r3, [r1, #24]
   1766c:	cmp	ip, r3
   17670:	beq	18db0 <opt_loop+0x315c>
   17674:	ldr	r5, [r1, #60]	; 0x3c
   17678:	mov	r3, #0
   1767c:	str	ip, [r1, #24]
   17680:	str	r3, [r1, #100]	; 0x64
   17684:	cmp	r5, r3
   17688:	moveq	r3, r5
   1768c:	beq	18d98 <opt_loop+0x3144>
   17690:	ldr	r2, [r5, #24]
   17694:	cmp	ip, r2
   17698:	beq	18200 <opt_loop+0x25ac>
   1769c:	ldr	r7, [r5, #60]	; 0x3c
   176a0:	str	ip, [r5, #24]
   176a4:	str	r3, [r5, #100]	; 0x64
   176a8:	cmp	r7, r3
   176ac:	moveq	r3, r7
   176b0:	beq	181ec <opt_loop+0x2598>
   176b4:	ldr	r2, [r7, #24]
   176b8:	cmp	ip, r2
   176bc:	beq	17c3c <opt_loop+0x1fe8>
   176c0:	ldr	r8, [r7, #60]	; 0x3c
   176c4:	str	ip, [r7, #24]
   176c8:	str	r3, [r7, #100]	; 0x64
   176cc:	cmp	r8, r3
   176d0:	moveq	r3, r8
   176d4:	beq	17c28 <opt_loop+0x1fd4>
   176d8:	ldr	r2, [r8, #24]
   176dc:	cmp	ip, r2
   176e0:	beq	178f8 <opt_loop+0x1ca4>
   176e4:	ldr	r6, [r8, #60]	; 0x3c
   176e8:	str	ip, [r8, #24]
   176ec:	str	r3, [r8, #100]	; 0x64
   176f0:	cmp	r6, r3
   176f4:	moveq	r3, r6
   176f8:	beq	178e4 <opt_loop+0x1c90>
   176fc:	ldr	r2, [r6, #24]
   17700:	cmp	ip, r2
   17704:	beq	17850 <opt_loop+0x1bfc>
   17708:	ldr	r2, [r6, #60]	; 0x3c
   1770c:	str	ip, [r6, #24]
   17710:	str	r3, [r6, #100]	; 0x64
   17714:	cmp	r2, r3
   17718:	moveq	r2, #0
   1771c:	moveq	r3, r2
   17720:	beq	1783c <opt_loop+0x1be8>
   17724:	ldr	r3, [r2, #24]
   17728:	cmp	ip, r3
   1772c:	beq	1779c <opt_loop+0x1b48>
   17730:	ldr	r0, [r2, #60]	; 0x3c
   17734:	mov	r3, #0
   17738:	str	ip, [r2, #24]
   1773c:	str	r3, [r2, #100]	; 0x64
   17740:	cmp	r0, r3
   17744:	moveq	r3, r0
   17748:	moveq	ip, r3
   1774c:	beq	17788 <opt_loop+0x1b34>
   17750:	str	r2, [sp, #16]
   17754:	bl	13450 <find_levels_r>
   17758:	ldr	r2, [sp, #16]
   1775c:	ldr	r0, [r2, #84]	; 0x54
   17760:	bl	13450 <find_levels_r>
   17764:	ldr	r2, [sp, #16]
   17768:	ldr	r0, [r2, #60]	; 0x3c
   1776c:	ldr	r3, [r2, #84]	; 0x54
   17770:	ldr	r0, [r0, #36]	; 0x24
   17774:	ldr	r3, [r3, #36]	; 0x24
   17778:	cmp	r3, r0
   1777c:	movlt	r3, r0
   17780:	add	ip, r3, #1
   17784:	lsl	r3, ip, #2
   17788:	ldr	r0, [fp]
   1778c:	str	ip, [r2, #36]	; 0x24
   17790:	ldr	ip, [r0, r3]
   17794:	str	ip, [r2, #100]	; 0x64
   17798:	str	r2, [r0, r3]
   1779c:	ldr	r2, [r6, #84]	; 0x54
   177a0:	ldr	ip, [sp, #20]
   177a4:	ldr	r3, [r2, #24]
   177a8:	cmp	ip, r3
   177ac:	beq	17820 <opt_loop+0x1bcc>
   177b0:	ldr	r0, [r2, #60]	; 0x3c
   177b4:	mov	r3, #0
   177b8:	str	ip, [r2, #24]
   177bc:	str	r3, [r2, #100]	; 0x64
   177c0:	cmp	r0, r3
   177c4:	moveq	r3, r0
   177c8:	moveq	ip, r3
   177cc:	beq	17808 <opt_loop+0x1bb4>
   177d0:	str	r2, [sp, #16]
   177d4:	bl	13450 <find_levels_r>
   177d8:	ldr	r2, [sp, #16]
   177dc:	ldr	r0, [r2, #84]	; 0x54
   177e0:	bl	13450 <find_levels_r>
   177e4:	ldr	r2, [sp, #16]
   177e8:	ldr	r0, [r2, #60]	; 0x3c
   177ec:	ldr	r3, [r2, #84]	; 0x54
   177f0:	ldr	r0, [r0, #36]	; 0x24
   177f4:	ldr	r3, [r3, #36]	; 0x24
   177f8:	cmp	r3, r0
   177fc:	movlt	r3, r0
   17800:	add	ip, r3, #1
   17804:	lsl	r3, ip, #2
   17808:	ldr	r0, [fp]
   1780c:	str	ip, [r2, #36]	; 0x24
   17810:	ldr	ip, [r0, r3]
   17814:	str	ip, [r2, #100]	; 0x64
   17818:	str	r2, [r0, r3]
   1781c:	ldr	r2, [r6, #84]	; 0x54
   17820:	ldr	r3, [r6, #60]	; 0x3c
   17824:	ldr	r2, [r2, #36]	; 0x24
   17828:	ldr	r3, [r3, #36]	; 0x24
   1782c:	cmp	r3, r2
   17830:	movlt	r3, r2
   17834:	add	r3, r3, #1
   17838:	lsl	r2, r3, #2
   1783c:	ldr	r0, [fp]
   17840:	str	r3, [r6, #36]	; 0x24
   17844:	ldr	r3, [r0, r2]
   17848:	str	r3, [r6, #100]	; 0x64
   1784c:	str	r6, [r0, r2]
   17850:	ldr	r6, [r8, #84]	; 0x54
   17854:	ldr	r2, [sp, #20]
   17858:	ldr	r3, [r6, #24]
   1785c:	cmp	r2, r3
   17860:	beq	178c8 <opt_loop+0x1c74>
   17864:	ldr	r0, [r6, #60]	; 0x3c
   17868:	mov	r3, #0
   1786c:	str	r2, [r6, #24]
   17870:	str	r3, [r6, #100]	; 0x64
   17874:	cmp	r0, r3
   17878:	moveq	r3, r0
   1787c:	moveq	r2, r3
   17880:	beq	178b0 <opt_loop+0x1c5c>
   17884:	bl	13450 <find_levels_r>
   17888:	ldr	r0, [r6, #84]	; 0x54
   1788c:	bl	13450 <find_levels_r>
   17890:	ldr	r2, [r6, #60]	; 0x3c
   17894:	ldr	r3, [r6, #84]	; 0x54
   17898:	ldr	r2, [r2, #36]	; 0x24
   1789c:	ldr	r3, [r3, #36]	; 0x24
   178a0:	cmp	r3, r2
   178a4:	movlt	r3, r2
   178a8:	add	r2, r3, #1
   178ac:	lsl	r3, r2, #2
   178b0:	ldr	r0, [fp]
   178b4:	str	r2, [r6, #36]	; 0x24
   178b8:	ldr	r2, [r0, r3]
   178bc:	str	r2, [r6, #100]	; 0x64
   178c0:	str	r6, [r0, r3]
   178c4:	ldr	r6, [r8, #84]	; 0x54
   178c8:	ldr	r3, [r8, #60]	; 0x3c
   178cc:	ldr	r2, [r6, #36]	; 0x24
   178d0:	ldr	r3, [r3, #36]	; 0x24
   178d4:	cmp	r3, r2
   178d8:	movlt	r3, r2
   178dc:	add	r3, r3, #1
   178e0:	lsl	r6, r3, #2
   178e4:	ldr	r2, [fp]
   178e8:	str	r3, [r8, #36]	; 0x24
   178ec:	ldr	r3, [r2, r6]
   178f0:	str	r3, [r8, #100]	; 0x64
   178f4:	str	r8, [r2, r6]
   178f8:	ldr	r6, [r7, #84]	; 0x54
   178fc:	ldr	ip, [sp, #20]
   17900:	ldr	r3, [r6, #24]
   17904:	cmp	ip, r3
   17908:	beq	17c0c <opt_loop+0x1fb8>
   1790c:	ldr	r8, [r6, #60]	; 0x3c
   17910:	mov	r3, #0
   17914:	str	ip, [r6, #24]
   17918:	str	r3, [r6, #100]	; 0x64
   1791c:	cmp	r8, r3
   17920:	moveq	r3, r8
   17924:	beq	17bf4 <opt_loop+0x1fa0>
   17928:	ldr	r2, [r8, #24]
   1792c:	cmp	ip, r2
   17930:	beq	17a78 <opt_loop+0x1e24>
   17934:	ldr	r2, [r8, #60]	; 0x3c
   17938:	str	ip, [r8, #24]
   1793c:	str	r3, [r8, #100]	; 0x64
   17940:	cmp	r2, r3
   17944:	moveq	r0, r2
   17948:	moveq	r3, r0
   1794c:	beq	17a64 <opt_loop+0x1e10>
   17950:	ldr	r0, [r2, #24]
   17954:	cmp	ip, r0
   17958:	beq	179c4 <opt_loop+0x1d70>
   1795c:	ldr	r0, [r2, #60]	; 0x3c
   17960:	str	ip, [r2, #24]
   17964:	str	r3, [r2, #100]	; 0x64
   17968:	cmp	r0, r3
   1796c:	moveq	r3, r0
   17970:	moveq	ip, r3
   17974:	beq	179b0 <opt_loop+0x1d5c>
   17978:	str	r2, [sp, #16]
   1797c:	bl	13450 <find_levels_r>
   17980:	ldr	r2, [sp, #16]
   17984:	ldr	r0, [r2, #84]	; 0x54
   17988:	bl	13450 <find_levels_r>
   1798c:	ldr	r2, [sp, #16]
   17990:	ldr	r0, [r2, #60]	; 0x3c
   17994:	ldr	r3, [r2, #84]	; 0x54
   17998:	ldr	r0, [r0, #36]	; 0x24
   1799c:	ldr	r3, [r3, #36]	; 0x24
   179a0:	cmp	r3, r0
   179a4:	movlt	r3, r0
   179a8:	add	ip, r3, #1
   179ac:	lsl	r3, ip, #2
   179b0:	ldr	r0, [fp]
   179b4:	str	ip, [r2, #36]	; 0x24
   179b8:	ldr	ip, [r0, r3]
   179bc:	str	ip, [r2, #100]	; 0x64
   179c0:	str	r2, [r0, r3]
   179c4:	ldr	r2, [r8, #84]	; 0x54
   179c8:	ldr	ip, [sp, #20]
   179cc:	ldr	r3, [r2, #24]
   179d0:	cmp	ip, r3
   179d4:	beq	17a48 <opt_loop+0x1df4>
   179d8:	ldr	r0, [r2, #60]	; 0x3c
   179dc:	mov	r3, #0
   179e0:	str	ip, [r2, #24]
   179e4:	str	r3, [r2, #100]	; 0x64
   179e8:	cmp	r0, r3
   179ec:	moveq	r3, r0
   179f0:	moveq	ip, r3
   179f4:	beq	17a30 <opt_loop+0x1ddc>
   179f8:	str	r2, [sp, #16]
   179fc:	bl	13450 <find_levels_r>
   17a00:	ldr	r2, [sp, #16]
   17a04:	ldr	r0, [r2, #84]	; 0x54
   17a08:	bl	13450 <find_levels_r>
   17a0c:	ldr	r2, [sp, #16]
   17a10:	ldr	r0, [r2, #60]	; 0x3c
   17a14:	ldr	r3, [r2, #84]	; 0x54
   17a18:	ldr	r0, [r0, #36]	; 0x24
   17a1c:	ldr	r3, [r3, #36]	; 0x24
   17a20:	cmp	r3, r0
   17a24:	movlt	r3, r0
   17a28:	add	ip, r3, #1
   17a2c:	lsl	r3, ip, #2
   17a30:	ldr	r0, [fp]
   17a34:	str	ip, [r2, #36]	; 0x24
   17a38:	ldr	ip, [r0, r3]
   17a3c:	str	ip, [r2, #100]	; 0x64
   17a40:	str	r2, [r0, r3]
   17a44:	ldr	r2, [r8, #84]	; 0x54
   17a48:	ldr	r3, [r8, #60]	; 0x3c
   17a4c:	ldr	r2, [r2, #36]	; 0x24
   17a50:	ldr	r3, [r3, #36]	; 0x24
   17a54:	cmp	r3, r2
   17a58:	movlt	r3, r2
   17a5c:	add	r3, r3, #1
   17a60:	lsl	r0, r3, #2
   17a64:	ldr	r2, [fp]
   17a68:	str	r3, [r8, #36]	; 0x24
   17a6c:	ldr	r3, [r2, r0]
   17a70:	str	r3, [r8, #100]	; 0x64
   17a74:	str	r8, [r2, r0]
   17a78:	ldr	r8, [r6, #84]	; 0x54
   17a7c:	ldr	ip, [sp, #20]
   17a80:	ldr	r3, [r8, #24]
   17a84:	cmp	ip, r3
   17a88:	beq	17bd8 <opt_loop+0x1f84>
   17a8c:	ldr	r3, [r8, #60]	; 0x3c
   17a90:	mov	r2, #0
   17a94:	str	ip, [r8, #24]
   17a98:	str	r2, [r8, #100]	; 0x64
   17a9c:	cmp	r3, r2
   17aa0:	moveq	r0, r3
   17aa4:	moveq	r3, r0
   17aa8:	beq	17bc0 <opt_loop+0x1f6c>
   17aac:	ldr	r0, [r3, #24]
   17ab0:	cmp	ip, r0
   17ab4:	beq	17b20 <opt_loop+0x1ecc>
   17ab8:	ldr	r0, [r3, #60]	; 0x3c
   17abc:	str	ip, [r3, #24]
   17ac0:	str	r2, [r3, #100]	; 0x64
   17ac4:	cmp	r0, r2
   17ac8:	moveq	ip, r0
   17acc:	moveq	r2, ip
   17ad0:	beq	17b0c <opt_loop+0x1eb8>
   17ad4:	str	r3, [sp, #16]
   17ad8:	bl	13450 <find_levels_r>
   17adc:	ldr	r3, [sp, #16]
   17ae0:	ldr	r0, [r3, #84]	; 0x54
   17ae4:	bl	13450 <find_levels_r>
   17ae8:	ldr	r3, [sp, #16]
   17aec:	ldr	r2, [r3, #60]	; 0x3c
   17af0:	ldr	r0, [r3, #84]	; 0x54
   17af4:	ldr	r2, [r2, #36]	; 0x24
   17af8:	ldr	r0, [r0, #36]	; 0x24
   17afc:	cmp	r0, r2
   17b00:	movge	r2, r0
   17b04:	add	r2, r2, #1
   17b08:	lsl	ip, r2, #2
   17b0c:	ldr	r0, [fp]
   17b10:	str	r2, [r3, #36]	; 0x24
   17b14:	ldr	r2, [r0, ip]
   17b18:	str	r2, [r3, #100]	; 0x64
   17b1c:	str	r3, [r0, ip]
   17b20:	ldr	r2, [r8, #84]	; 0x54
   17b24:	ldr	ip, [sp, #20]
   17b28:	ldr	r3, [r2, #24]
   17b2c:	cmp	ip, r3
   17b30:	beq	17ba4 <opt_loop+0x1f50>
   17b34:	ldr	r0, [r2, #60]	; 0x3c
   17b38:	mov	r3, #0
   17b3c:	str	ip, [r2, #24]
   17b40:	str	r3, [r2, #100]	; 0x64
   17b44:	cmp	r0, r3
   17b48:	moveq	r3, r0
   17b4c:	moveq	ip, r3
   17b50:	beq	17b8c <opt_loop+0x1f38>
   17b54:	str	r2, [sp, #16]
   17b58:	bl	13450 <find_levels_r>
   17b5c:	ldr	r2, [sp, #16]
   17b60:	ldr	r0, [r2, #84]	; 0x54
   17b64:	bl	13450 <find_levels_r>
   17b68:	ldr	r2, [sp, #16]
   17b6c:	ldr	r0, [r2, #60]	; 0x3c
   17b70:	ldr	r3, [r2, #84]	; 0x54
   17b74:	ldr	r0, [r0, #36]	; 0x24
   17b78:	ldr	r3, [r3, #36]	; 0x24
   17b7c:	cmp	r3, r0
   17b80:	movlt	r3, r0
   17b84:	add	ip, r3, #1
   17b88:	lsl	r3, ip, #2
   17b8c:	ldr	r0, [fp]
   17b90:	str	ip, [r2, #36]	; 0x24
   17b94:	ldr	ip, [r0, r3]
   17b98:	str	ip, [r2, #100]	; 0x64
   17b9c:	str	r2, [r0, r3]
   17ba0:	ldr	r2, [r8, #84]	; 0x54
   17ba4:	ldr	r3, [r8, #60]	; 0x3c
   17ba8:	ldr	r2, [r2, #36]	; 0x24
   17bac:	ldr	r3, [r3, #36]	; 0x24
   17bb0:	cmp	r3, r2
   17bb4:	movlt	r3, r2
   17bb8:	add	r3, r3, #1
   17bbc:	lsl	r0, r3, #2
   17bc0:	ldr	r2, [fp]
   17bc4:	str	r3, [r8, #36]	; 0x24
   17bc8:	ldr	r3, [r2, r0]
   17bcc:	str	r3, [r8, #100]	; 0x64
   17bd0:	str	r8, [r2, r0]
   17bd4:	ldr	r8, [r6, #84]	; 0x54
   17bd8:	ldr	r3, [r6, #60]	; 0x3c
   17bdc:	ldr	r2, [r8, #36]	; 0x24
   17be0:	ldr	r3, [r3, #36]	; 0x24
   17be4:	cmp	r3, r2
   17be8:	movlt	r3, r2
   17bec:	add	r3, r3, #1
   17bf0:	lsl	r8, r3, #2
   17bf4:	ldr	r2, [fp]
   17bf8:	str	r3, [r6, #36]	; 0x24
   17bfc:	ldr	r3, [r2, r8]
   17c00:	str	r3, [r6, #100]	; 0x64
   17c04:	str	r6, [r2, r8]
   17c08:	ldr	r6, [r7, #84]	; 0x54
   17c0c:	ldr	r3, [r7, #60]	; 0x3c
   17c10:	ldr	r2, [r6, #36]	; 0x24
   17c14:	ldr	r3, [r3, #36]	; 0x24
   17c18:	cmp	r3, r2
   17c1c:	movlt	r3, r2
   17c20:	add	r3, r3, #1
   17c24:	lsl	r8, r3, #2
   17c28:	ldr	r2, [fp]
   17c2c:	str	r3, [r7, #36]	; 0x24
   17c30:	ldr	r3, [r2, r8]
   17c34:	str	r3, [r7, #100]	; 0x64
   17c38:	str	r7, [r2, r8]
   17c3c:	ldr	r7, [r5, #84]	; 0x54
   17c40:	ldr	ip, [sp, #20]
   17c44:	ldr	r3, [r7, #24]
   17c48:	cmp	ip, r3
   17c4c:	beq	181d0 <opt_loop+0x257c>
   17c50:	ldr	r6, [r7, #60]	; 0x3c
   17c54:	mov	r3, #0
   17c58:	str	ip, [r7, #24]
   17c5c:	str	r3, [r7, #100]	; 0x64
   17c60:	cmp	r6, r3
   17c64:	moveq	r3, r6
   17c68:	beq	181b8 <opt_loop+0x2564>
   17c6c:	ldr	r2, [r6, #24]
   17c70:	cmp	ip, r2
   17c74:	beq	17f70 <opt_loop+0x231c>
   17c78:	ldr	r8, [r6, #60]	; 0x3c
   17c7c:	str	ip, [r6, #24]
   17c80:	str	r3, [r6, #100]	; 0x64
   17c84:	cmp	r8, r3
   17c88:	moveq	r3, r8
   17c8c:	beq	17f5c <opt_loop+0x2308>
   17c90:	ldr	r2, [r8, #24]
   17c94:	cmp	ip, r2
   17c98:	beq	17de0 <opt_loop+0x218c>
   17c9c:	ldr	r2, [r8, #60]	; 0x3c
   17ca0:	str	ip, [r8, #24]
   17ca4:	str	r3, [r8, #100]	; 0x64
   17ca8:	cmp	r2, r3
   17cac:	moveq	r0, r2
   17cb0:	moveq	r3, r0
   17cb4:	beq	17dcc <opt_loop+0x2178>
   17cb8:	ldr	r0, [r2, #24]
   17cbc:	cmp	ip, r0
   17cc0:	beq	17d2c <opt_loop+0x20d8>
   17cc4:	ldr	r0, [r2, #60]	; 0x3c
   17cc8:	str	ip, [r2, #24]
   17ccc:	str	r3, [r2, #100]	; 0x64
   17cd0:	cmp	r0, r3
   17cd4:	moveq	r3, r0
   17cd8:	moveq	ip, r3
   17cdc:	beq	17d18 <opt_loop+0x20c4>
   17ce0:	str	r2, [sp, #16]
   17ce4:	bl	13450 <find_levels_r>
   17ce8:	ldr	r2, [sp, #16]
   17cec:	ldr	r0, [r2, #84]	; 0x54
   17cf0:	bl	13450 <find_levels_r>
   17cf4:	ldr	r2, [sp, #16]
   17cf8:	ldr	r0, [r2, #60]	; 0x3c
   17cfc:	ldr	r3, [r2, #84]	; 0x54
   17d00:	ldr	r0, [r0, #36]	; 0x24
   17d04:	ldr	r3, [r3, #36]	; 0x24
   17d08:	cmp	r3, r0
   17d0c:	movlt	r3, r0
   17d10:	add	ip, r3, #1
   17d14:	lsl	r3, ip, #2
   17d18:	ldr	r0, [fp]
   17d1c:	str	ip, [r2, #36]	; 0x24
   17d20:	ldr	ip, [r0, r3]
   17d24:	str	ip, [r2, #100]	; 0x64
   17d28:	str	r2, [r0, r3]
   17d2c:	ldr	r2, [r8, #84]	; 0x54
   17d30:	ldr	ip, [sp, #20]
   17d34:	ldr	r3, [r2, #24]
   17d38:	cmp	ip, r3
   17d3c:	beq	17db0 <opt_loop+0x215c>
   17d40:	ldr	r0, [r2, #60]	; 0x3c
   17d44:	mov	r3, #0
   17d48:	str	ip, [r2, #24]
   17d4c:	str	r3, [r2, #100]	; 0x64
   17d50:	cmp	r0, r3
   17d54:	moveq	r3, r0
   17d58:	moveq	ip, r3
   17d5c:	beq	17d98 <opt_loop+0x2144>
   17d60:	str	r2, [sp, #16]
   17d64:	bl	13450 <find_levels_r>
   17d68:	ldr	r2, [sp, #16]
   17d6c:	ldr	r0, [r2, #84]	; 0x54
   17d70:	bl	13450 <find_levels_r>
   17d74:	ldr	r2, [sp, #16]
   17d78:	ldr	r0, [r2, #60]	; 0x3c
   17d7c:	ldr	r3, [r2, #84]	; 0x54
   17d80:	ldr	r0, [r0, #36]	; 0x24
   17d84:	ldr	r3, [r3, #36]	; 0x24
   17d88:	cmp	r3, r0
   17d8c:	movlt	r3, r0
   17d90:	add	ip, r3, #1
   17d94:	lsl	r3, ip, #2
   17d98:	ldr	r0, [fp]
   17d9c:	str	ip, [r2, #36]	; 0x24
   17da0:	ldr	ip, [r0, r3]
   17da4:	str	ip, [r2, #100]	; 0x64
   17da8:	str	r2, [r0, r3]
   17dac:	ldr	r2, [r8, #84]	; 0x54
   17db0:	ldr	r3, [r8, #60]	; 0x3c
   17db4:	ldr	r2, [r2, #36]	; 0x24
   17db8:	ldr	r3, [r3, #36]	; 0x24
   17dbc:	cmp	r3, r2
   17dc0:	movlt	r3, r2
   17dc4:	add	r3, r3, #1
   17dc8:	lsl	r0, r3, #2
   17dcc:	ldr	r2, [fp]
   17dd0:	str	r3, [r8, #36]	; 0x24
   17dd4:	ldr	r3, [r2, r0]
   17dd8:	str	r3, [r8, #100]	; 0x64
   17ddc:	str	r8, [r2, r0]
   17de0:	ldr	r8, [r6, #84]	; 0x54
   17de4:	ldr	ip, [sp, #20]
   17de8:	ldr	r3, [r8, #24]
   17dec:	cmp	ip, r3
   17df0:	beq	17f40 <opt_loop+0x22ec>
   17df4:	ldr	r3, [r8, #60]	; 0x3c
   17df8:	mov	r2, #0
   17dfc:	str	ip, [r8, #24]
   17e00:	str	r2, [r8, #100]	; 0x64
   17e04:	cmp	r3, r2
   17e08:	moveq	r0, r3
   17e0c:	moveq	r3, r0
   17e10:	beq	17f28 <opt_loop+0x22d4>
   17e14:	ldr	r0, [r3, #24]
   17e18:	cmp	ip, r0
   17e1c:	beq	17e88 <opt_loop+0x2234>
   17e20:	ldr	r0, [r3, #60]	; 0x3c
   17e24:	str	ip, [r3, #24]
   17e28:	str	r2, [r3, #100]	; 0x64
   17e2c:	cmp	r0, r2
   17e30:	moveq	ip, r0
   17e34:	moveq	r2, ip
   17e38:	beq	17e74 <opt_loop+0x2220>
   17e3c:	str	r3, [sp, #16]
   17e40:	bl	13450 <find_levels_r>
   17e44:	ldr	r3, [sp, #16]
   17e48:	ldr	r0, [r3, #84]	; 0x54
   17e4c:	bl	13450 <find_levels_r>
   17e50:	ldr	r3, [sp, #16]
   17e54:	ldr	r2, [r3, #60]	; 0x3c
   17e58:	ldr	r0, [r3, #84]	; 0x54
   17e5c:	ldr	r2, [r2, #36]	; 0x24
   17e60:	ldr	r0, [r0, #36]	; 0x24
   17e64:	cmp	r0, r2
   17e68:	movge	r2, r0
   17e6c:	add	r2, r2, #1
   17e70:	lsl	ip, r2, #2
   17e74:	ldr	r0, [fp]
   17e78:	str	r2, [r3, #36]	; 0x24
   17e7c:	ldr	r2, [r0, ip]
   17e80:	str	r2, [r3, #100]	; 0x64
   17e84:	str	r3, [r0, ip]
   17e88:	ldr	r2, [r8, #84]	; 0x54
   17e8c:	ldr	ip, [sp, #20]
   17e90:	ldr	r3, [r2, #24]
   17e94:	cmp	ip, r3
   17e98:	beq	17f0c <opt_loop+0x22b8>
   17e9c:	ldr	r0, [r2, #60]	; 0x3c
   17ea0:	mov	r3, #0
   17ea4:	str	ip, [r2, #24]
   17ea8:	str	r3, [r2, #100]	; 0x64
   17eac:	cmp	r0, r3
   17eb0:	moveq	r3, r0
   17eb4:	moveq	ip, r3
   17eb8:	beq	17ef4 <opt_loop+0x22a0>
   17ebc:	str	r2, [sp, #16]
   17ec0:	bl	13450 <find_levels_r>
   17ec4:	ldr	r2, [sp, #16]
   17ec8:	ldr	r0, [r2, #84]	; 0x54
   17ecc:	bl	13450 <find_levels_r>
   17ed0:	ldr	r2, [sp, #16]
   17ed4:	ldr	r0, [r2, #60]	; 0x3c
   17ed8:	ldr	r3, [r2, #84]	; 0x54
   17edc:	ldr	r0, [r0, #36]	; 0x24
   17ee0:	ldr	r3, [r3, #36]	; 0x24
   17ee4:	cmp	r3, r0
   17ee8:	movlt	r3, r0
   17eec:	add	ip, r3, #1
   17ef0:	lsl	r3, ip, #2
   17ef4:	ldr	r0, [fp]
   17ef8:	str	ip, [r2, #36]	; 0x24
   17efc:	ldr	ip, [r0, r3]
   17f00:	str	ip, [r2, #100]	; 0x64
   17f04:	str	r2, [r0, r3]
   17f08:	ldr	r2, [r8, #84]	; 0x54
   17f0c:	ldr	r3, [r8, #60]	; 0x3c
   17f10:	ldr	r2, [r2, #36]	; 0x24
   17f14:	ldr	r3, [r3, #36]	; 0x24
   17f18:	cmp	r3, r2
   17f1c:	movlt	r3, r2
   17f20:	add	r3, r3, #1
   17f24:	lsl	r0, r3, #2
   17f28:	ldr	r2, [fp]
   17f2c:	str	r3, [r8, #36]	; 0x24
   17f30:	ldr	r3, [r2, r0]
   17f34:	str	r3, [r8, #100]	; 0x64
   17f38:	str	r8, [r2, r0]
   17f3c:	ldr	r8, [r6, #84]	; 0x54
   17f40:	ldr	r3, [r6, #60]	; 0x3c
   17f44:	ldr	r2, [r8, #36]	; 0x24
   17f48:	ldr	r3, [r3, #36]	; 0x24
   17f4c:	cmp	r3, r2
   17f50:	movlt	r3, r2
   17f54:	add	r3, r3, #1
   17f58:	lsl	r8, r3, #2
   17f5c:	ldr	r2, [fp]
   17f60:	str	r3, [r6, #36]	; 0x24
   17f64:	ldr	r3, [r2, r8]
   17f68:	str	r3, [r6, #100]	; 0x64
   17f6c:	str	r6, [r2, r8]
   17f70:	ldr	r8, [r7, #84]	; 0x54
   17f74:	ldr	ip, [sp, #20]
   17f78:	ldr	r3, [r8, #24]
   17f7c:	cmp	ip, r3
   17f80:	beq	1819c <opt_loop+0x2548>
   17f84:	ldr	r6, [r8, #60]	; 0x3c
   17f88:	mov	r2, #0
   17f8c:	str	ip, [r8, #24]
   17f90:	str	r2, [r8, #100]	; 0x64
   17f94:	cmp	r6, r2
   17f98:	moveq	r3, r6
   17f9c:	beq	18184 <opt_loop+0x2530>
   17fa0:	ldr	r3, [r6, #24]
   17fa4:	cmp	ip, r3
   17fa8:	beq	18008 <opt_loop+0x23b4>
   17fac:	ldr	r0, [r6, #60]	; 0x3c
   17fb0:	str	ip, [r6, #24]
   17fb4:	str	r2, [r6, #100]	; 0x64
   17fb8:	cmp	r0, r2
   17fbc:	moveq	r3, r0
   17fc0:	moveq	r2, r3
   17fc4:	beq	17ff4 <opt_loop+0x23a0>
   17fc8:	bl	13450 <find_levels_r>
   17fcc:	ldr	r0, [r6, #84]	; 0x54
   17fd0:	bl	13450 <find_levels_r>
   17fd4:	ldr	r2, [r6, #60]	; 0x3c
   17fd8:	ldr	r3, [r6, #84]	; 0x54
   17fdc:	ldr	r2, [r2, #36]	; 0x24
   17fe0:	ldr	r3, [r3, #36]	; 0x24
   17fe4:	cmp	r3, r2
   17fe8:	movlt	r3, r2
   17fec:	add	r2, r3, #1
   17ff0:	lsl	r3, r2, #2
   17ff4:	ldr	r0, [fp]
   17ff8:	str	r2, [r6, #36]	; 0x24
   17ffc:	ldr	r2, [r0, r3]
   18000:	str	r2, [r6, #100]	; 0x64
   18004:	str	r6, [r0, r3]
   18008:	ldr	r6, [r8, #84]	; 0x54
   1800c:	ldr	ip, [sp, #20]
   18010:	ldr	r3, [r6, #24]
   18014:	cmp	ip, r3
   18018:	beq	18168 <opt_loop+0x2514>
   1801c:	ldr	r3, [r6, #60]	; 0x3c
   18020:	mov	r2, #0
   18024:	str	ip, [r6, #24]
   18028:	str	r2, [r6, #100]	; 0x64
   1802c:	cmp	r3, r2
   18030:	moveq	r0, r3
   18034:	moveq	r3, r0
   18038:	beq	18150 <opt_loop+0x24fc>
   1803c:	ldr	r0, [r3, #24]
   18040:	cmp	ip, r0
   18044:	beq	180b0 <opt_loop+0x245c>
   18048:	ldr	r0, [r3, #60]	; 0x3c
   1804c:	str	ip, [r3, #24]
   18050:	str	r2, [r3, #100]	; 0x64
   18054:	cmp	r0, r2
   18058:	moveq	ip, r0
   1805c:	moveq	r2, ip
   18060:	beq	1809c <opt_loop+0x2448>
   18064:	str	r3, [sp, #16]
   18068:	bl	13450 <find_levels_r>
   1806c:	ldr	r3, [sp, #16]
   18070:	ldr	r0, [r3, #84]	; 0x54
   18074:	bl	13450 <find_levels_r>
   18078:	ldr	r3, [sp, #16]
   1807c:	ldr	r2, [r3, #60]	; 0x3c
   18080:	ldr	r0, [r3, #84]	; 0x54
   18084:	ldr	r2, [r2, #36]	; 0x24
   18088:	ldr	r0, [r0, #36]	; 0x24
   1808c:	cmp	r0, r2
   18090:	movge	r2, r0
   18094:	add	r2, r2, #1
   18098:	lsl	ip, r2, #2
   1809c:	ldr	r0, [fp]
   180a0:	str	r2, [r3, #36]	; 0x24
   180a4:	ldr	r2, [r0, ip]
   180a8:	str	r2, [r3, #100]	; 0x64
   180ac:	str	r3, [r0, ip]
   180b0:	ldr	r2, [r6, #84]	; 0x54
   180b4:	ldr	ip, [sp, #20]
   180b8:	ldr	r3, [r2, #24]
   180bc:	cmp	ip, r3
   180c0:	beq	18134 <opt_loop+0x24e0>
   180c4:	ldr	r0, [r2, #60]	; 0x3c
   180c8:	mov	r3, #0
   180cc:	str	ip, [r2, #24]
   180d0:	str	r3, [r2, #100]	; 0x64
   180d4:	cmp	r0, r3
   180d8:	moveq	r3, r0
   180dc:	moveq	ip, r3
   180e0:	beq	1811c <opt_loop+0x24c8>
   180e4:	str	r2, [sp, #16]
   180e8:	bl	13450 <find_levels_r>
   180ec:	ldr	r2, [sp, #16]
   180f0:	ldr	r0, [r2, #84]	; 0x54
   180f4:	bl	13450 <find_levels_r>
   180f8:	ldr	r2, [sp, #16]
   180fc:	ldr	r0, [r2, #60]	; 0x3c
   18100:	ldr	r3, [r2, #84]	; 0x54
   18104:	ldr	r0, [r0, #36]	; 0x24
   18108:	ldr	r3, [r3, #36]	; 0x24
   1810c:	cmp	r3, r0
   18110:	movlt	r3, r0
   18114:	add	ip, r3, #1
   18118:	lsl	r3, ip, #2
   1811c:	ldr	r0, [fp]
   18120:	str	ip, [r2, #36]	; 0x24
   18124:	ldr	ip, [r0, r3]
   18128:	str	ip, [r2, #100]	; 0x64
   1812c:	str	r2, [r0, r3]
   18130:	ldr	r2, [r6, #84]	; 0x54
   18134:	ldr	r3, [r6, #60]	; 0x3c
   18138:	ldr	r2, [r2, #36]	; 0x24
   1813c:	ldr	r3, [r3, #36]	; 0x24
   18140:	cmp	r3, r2
   18144:	movlt	r3, r2
   18148:	add	r3, r3, #1
   1814c:	lsl	r0, r3, #2
   18150:	ldr	r2, [fp]
   18154:	str	r3, [r6, #36]	; 0x24
   18158:	ldr	r3, [r2, r0]
   1815c:	str	r3, [r6, #100]	; 0x64
   18160:	str	r6, [r2, r0]
   18164:	ldr	r6, [r8, #84]	; 0x54
   18168:	ldr	r3, [r8, #60]	; 0x3c
   1816c:	ldr	r2, [r6, #36]	; 0x24
   18170:	ldr	r3, [r3, #36]	; 0x24
   18174:	cmp	r3, r2
   18178:	movlt	r3, r2
   1817c:	add	r3, r3, #1
   18180:	lsl	r6, r3, #2
   18184:	ldr	r2, [fp]
   18188:	str	r3, [r8, #36]	; 0x24
   1818c:	ldr	r3, [r2, r6]
   18190:	str	r3, [r8, #100]	; 0x64
   18194:	str	r8, [r2, r6]
   18198:	ldr	r8, [r7, #84]	; 0x54
   1819c:	ldr	r3, [r7, #60]	; 0x3c
   181a0:	ldr	r2, [r8, #36]	; 0x24
   181a4:	ldr	r3, [r3, #36]	; 0x24
   181a8:	cmp	r3, r2
   181ac:	movlt	r3, r2
   181b0:	add	r3, r3, #1
   181b4:	lsl	r6, r3, #2
   181b8:	ldr	r2, [fp]
   181bc:	str	r3, [r7, #36]	; 0x24
   181c0:	ldr	r3, [r2, r6]
   181c4:	str	r3, [r7, #100]	; 0x64
   181c8:	str	r7, [r2, r6]
   181cc:	ldr	r7, [r5, #84]	; 0x54
   181d0:	ldr	r3, [r5, #60]	; 0x3c
   181d4:	ldr	r2, [r7, #36]	; 0x24
   181d8:	ldr	r3, [r3, #36]	; 0x24
   181dc:	cmp	r3, r2
   181e0:	movlt	r3, r2
   181e4:	add	r3, r3, #1
   181e8:	lsl	r7, r3, #2
   181ec:	ldr	r2, [fp]
   181f0:	str	r3, [r5, #36]	; 0x24
   181f4:	ldr	r3, [r2, r7]
   181f8:	str	r3, [r5, #100]	; 0x64
   181fc:	str	r5, [r2, r7]
   18200:	ldr	r5, [r1, #84]	; 0x54
   18204:	ldr	ip, [sp, #20]
   18208:	ldr	r3, [r5, #24]
   1820c:	cmp	ip, r3
   18210:	beq	18d7c <opt_loop+0x3128>
   18214:	ldr	r7, [r5, #60]	; 0x3c
   18218:	mov	r3, #0
   1821c:	str	ip, [r5, #24]
   18220:	str	r3, [r5, #100]	; 0x64
   18224:	cmp	r7, r3
   18228:	moveq	r3, r7
   1822c:	beq	18d64 <opt_loop+0x3110>
   18230:	ldr	r2, [r7, #24]
   18234:	cmp	ip, r2
   18238:	beq	187b4 <opt_loop+0x2b60>
   1823c:	ldr	r8, [r7, #60]	; 0x3c
   18240:	str	ip, [r7, #24]
   18244:	str	r3, [r7, #100]	; 0x64
   18248:	cmp	r8, r3
   1824c:	moveq	r3, r8
   18250:	beq	187a0 <opt_loop+0x2b4c>
   18254:	ldr	r2, [r8, #24]
   18258:	cmp	ip, r2
   1825c:	beq	18470 <opt_loop+0x281c>
   18260:	ldr	r6, [r8, #60]	; 0x3c
   18264:	str	ip, [r8, #24]
   18268:	str	r3, [r8, #100]	; 0x64
   1826c:	cmp	r6, r3
   18270:	moveq	r3, r6
   18274:	beq	1845c <opt_loop+0x2808>
   18278:	ldr	r2, [r6, #24]
   1827c:	cmp	ip, r2
   18280:	beq	183c8 <opt_loop+0x2774>
   18284:	ldr	r2, [r6, #60]	; 0x3c
   18288:	str	ip, [r6, #24]
   1828c:	str	r3, [r6, #100]	; 0x64
   18290:	cmp	r2, r3
   18294:	moveq	r0, r2
   18298:	moveq	r3, r0
   1829c:	beq	183b4 <opt_loop+0x2760>
   182a0:	ldr	r0, [r2, #24]
   182a4:	cmp	ip, r0
   182a8:	beq	18314 <opt_loop+0x26c0>
   182ac:	ldr	r0, [r2, #60]	; 0x3c
   182b0:	str	ip, [r2, #24]
   182b4:	str	r3, [r2, #100]	; 0x64
   182b8:	cmp	r0, r3
   182bc:	moveq	ip, #0
   182c0:	moveq	r3, ip
   182c4:	beq	18300 <opt_loop+0x26ac>
   182c8:	str	r2, [sp, #16]
   182cc:	bl	13450 <find_levels_r>
   182d0:	ldr	r2, [sp, #16]
   182d4:	ldr	r0, [r2, #84]	; 0x54
   182d8:	bl	13450 <find_levels_r>
   182dc:	ldr	r2, [sp, #16]
   182e0:	ldr	r0, [r2, #60]	; 0x3c
   182e4:	ldr	r3, [r2, #84]	; 0x54
   182e8:	ldr	r0, [r0, #36]	; 0x24
   182ec:	ldr	r3, [r3, #36]	; 0x24
   182f0:	cmp	r3, r0
   182f4:	movlt	r3, r0
   182f8:	add	r3, r3, #1
   182fc:	lsl	ip, r3, #2
   18300:	ldr	r0, [fp]
   18304:	str	r3, [r2, #36]	; 0x24
   18308:	ldr	r3, [r0, ip]
   1830c:	str	r3, [r2, #100]	; 0x64
   18310:	str	r2, [r0, ip]
   18314:	ldr	r2, [r6, #84]	; 0x54
   18318:	ldr	ip, [sp, #20]
   1831c:	ldr	r3, [r2, #24]
   18320:	cmp	ip, r3
   18324:	beq	18398 <opt_loop+0x2744>
   18328:	ldr	r0, [r2, #60]	; 0x3c
   1832c:	mov	r3, #0
   18330:	str	ip, [r2, #24]
   18334:	str	r3, [r2, #100]	; 0x64
   18338:	cmp	r0, r3
   1833c:	moveq	r3, r0
   18340:	moveq	ip, r3
   18344:	beq	18380 <opt_loop+0x272c>
   18348:	str	r2, [sp, #16]
   1834c:	bl	13450 <find_levels_r>
   18350:	ldr	r2, [sp, #16]
   18354:	ldr	r0, [r2, #84]	; 0x54
   18358:	bl	13450 <find_levels_r>
   1835c:	ldr	r2, [sp, #16]
   18360:	ldr	r0, [r2, #60]	; 0x3c
   18364:	ldr	r3, [r2, #84]	; 0x54
   18368:	ldr	r0, [r0, #36]	; 0x24
   1836c:	ldr	r3, [r3, #36]	; 0x24
   18370:	cmp	r3, r0
   18374:	movlt	r3, r0
   18378:	add	ip, r3, #1
   1837c:	lsl	r3, ip, #2
   18380:	ldr	r0, [fp]
   18384:	str	ip, [r2, #36]	; 0x24
   18388:	ldr	ip, [r0, r3]
   1838c:	str	ip, [r2, #100]	; 0x64
   18390:	str	r2, [r0, r3]
   18394:	ldr	r2, [r6, #84]	; 0x54
   18398:	ldr	r3, [r6, #60]	; 0x3c
   1839c:	ldr	r2, [r2, #36]	; 0x24
   183a0:	ldr	r3, [r3, #36]	; 0x24
   183a4:	cmp	r3, r2
   183a8:	movlt	r3, r2
   183ac:	add	r3, r3, #1
   183b0:	lsl	r0, r3, #2
   183b4:	ldr	r2, [fp]
   183b8:	str	r3, [r6, #36]	; 0x24
   183bc:	ldr	r3, [r2, r0]
   183c0:	str	r3, [r6, #100]	; 0x64
   183c4:	str	r6, [r2, r0]
   183c8:	ldr	r6, [r8, #84]	; 0x54
   183cc:	ldr	r2, [sp, #20]
   183d0:	ldr	r3, [r6, #24]
   183d4:	cmp	r2, r3
   183d8:	beq	18440 <opt_loop+0x27ec>
   183dc:	ldr	r0, [r6, #60]	; 0x3c
   183e0:	mov	r3, #0
   183e4:	str	r2, [r6, #24]
   183e8:	str	r3, [r6, #100]	; 0x64
   183ec:	cmp	r0, r3
   183f0:	moveq	r3, r0
   183f4:	moveq	r2, r3
   183f8:	beq	18428 <opt_loop+0x27d4>
   183fc:	bl	13450 <find_levels_r>
   18400:	ldr	r0, [r6, #84]	; 0x54
   18404:	bl	13450 <find_levels_r>
   18408:	ldr	r2, [r6, #60]	; 0x3c
   1840c:	ldr	r3, [r6, #84]	; 0x54
   18410:	ldr	r2, [r2, #36]	; 0x24
   18414:	ldr	r3, [r3, #36]	; 0x24
   18418:	cmp	r3, r2
   1841c:	movlt	r3, r2
   18420:	add	r2, r3, #1
   18424:	lsl	r3, r2, #2
   18428:	ldr	r0, [fp]
   1842c:	str	r2, [r6, #36]	; 0x24
   18430:	ldr	r2, [r0, r3]
   18434:	str	r2, [r6, #100]	; 0x64
   18438:	str	r6, [r0, r3]
   1843c:	ldr	r6, [r8, #84]	; 0x54
   18440:	ldr	r3, [r8, #60]	; 0x3c
   18444:	ldr	r2, [r6, #36]	; 0x24
   18448:	ldr	r3, [r3, #36]	; 0x24
   1844c:	cmp	r3, r2
   18450:	movlt	r3, r2
   18454:	add	r3, r3, #1
   18458:	lsl	r6, r3, #2
   1845c:	ldr	r2, [fp]
   18460:	str	r3, [r8, #36]	; 0x24
   18464:	ldr	r3, [r2, r6]
   18468:	str	r3, [r8, #100]	; 0x64
   1846c:	str	r8, [r2, r6]
   18470:	ldr	r6, [r7, #84]	; 0x54
   18474:	ldr	ip, [sp, #20]
   18478:	ldr	r3, [r6, #24]
   1847c:	cmp	ip, r3
   18480:	beq	18784 <opt_loop+0x2b30>
   18484:	ldr	r8, [r6, #60]	; 0x3c
   18488:	mov	r3, #0
   1848c:	str	ip, [r6, #24]
   18490:	str	r3, [r6, #100]	; 0x64
   18494:	cmp	r8, r3
   18498:	moveq	r3, r8
   1849c:	beq	1876c <opt_loop+0x2b18>
   184a0:	ldr	r2, [r8, #24]
   184a4:	cmp	ip, r2
   184a8:	beq	185f0 <opt_loop+0x299c>
   184ac:	ldr	r2, [r8, #60]	; 0x3c
   184b0:	str	ip, [r8, #24]
   184b4:	str	r3, [r8, #100]	; 0x64
   184b8:	cmp	r2, r3
   184bc:	moveq	r0, r2
   184c0:	moveq	r3, r0
   184c4:	beq	185dc <opt_loop+0x2988>
   184c8:	ldr	r0, [r2, #24]
   184cc:	cmp	ip, r0
   184d0:	beq	1853c <opt_loop+0x28e8>
   184d4:	ldr	r0, [r2, #60]	; 0x3c
   184d8:	str	ip, [r2, #24]
   184dc:	str	r3, [r2, #100]	; 0x64
   184e0:	cmp	r0, r3
   184e4:	moveq	r3, r0
   184e8:	moveq	ip, r3
   184ec:	beq	18528 <opt_loop+0x28d4>
   184f0:	str	r2, [sp, #16]
   184f4:	bl	13450 <find_levels_r>
   184f8:	ldr	r2, [sp, #16]
   184fc:	ldr	r0, [r2, #84]	; 0x54
   18500:	bl	13450 <find_levels_r>
   18504:	ldr	r2, [sp, #16]
   18508:	ldr	r0, [r2, #60]	; 0x3c
   1850c:	ldr	r3, [r2, #84]	; 0x54
   18510:	ldr	r0, [r0, #36]	; 0x24
   18514:	ldr	r3, [r3, #36]	; 0x24
   18518:	cmp	r3, r0
   1851c:	movlt	r3, r0
   18520:	add	ip, r3, #1
   18524:	lsl	r3, ip, #2
   18528:	ldr	r0, [fp]
   1852c:	str	ip, [r2, #36]	; 0x24
   18530:	ldr	ip, [r0, r3]
   18534:	str	ip, [r2, #100]	; 0x64
   18538:	str	r2, [r0, r3]
   1853c:	ldr	r2, [r8, #84]	; 0x54
   18540:	ldr	ip, [sp, #20]
   18544:	ldr	r3, [r2, #24]
   18548:	cmp	ip, r3
   1854c:	beq	185c0 <opt_loop+0x296c>
   18550:	ldr	r0, [r2, #60]	; 0x3c
   18554:	mov	r3, #0
   18558:	str	ip, [r2, #24]
   1855c:	str	r3, [r2, #100]	; 0x64
   18560:	cmp	r0, r3
   18564:	moveq	r3, r0
   18568:	moveq	ip, r3
   1856c:	beq	185a8 <opt_loop+0x2954>
   18570:	str	r2, [sp, #16]
   18574:	bl	13450 <find_levels_r>
   18578:	ldr	r2, [sp, #16]
   1857c:	ldr	r0, [r2, #84]	; 0x54
   18580:	bl	13450 <find_levels_r>
   18584:	ldr	r2, [sp, #16]
   18588:	ldr	r0, [r2, #60]	; 0x3c
   1858c:	ldr	r3, [r2, #84]	; 0x54
   18590:	ldr	r0, [r0, #36]	; 0x24
   18594:	ldr	r3, [r3, #36]	; 0x24
   18598:	cmp	r3, r0
   1859c:	movlt	r3, r0
   185a0:	add	ip, r3, #1
   185a4:	lsl	r3, ip, #2
   185a8:	ldr	r0, [fp]
   185ac:	str	ip, [r2, #36]	; 0x24
   185b0:	ldr	ip, [r0, r3]
   185b4:	str	ip, [r2, #100]	; 0x64
   185b8:	str	r2, [r0, r3]
   185bc:	ldr	r2, [r8, #84]	; 0x54
   185c0:	ldr	r3, [r8, #60]	; 0x3c
   185c4:	ldr	r2, [r2, #36]	; 0x24
   185c8:	ldr	r3, [r3, #36]	; 0x24
   185cc:	cmp	r3, r2
   185d0:	movlt	r3, r2
   185d4:	add	r3, r3, #1
   185d8:	lsl	r0, r3, #2
   185dc:	ldr	r2, [fp]
   185e0:	str	r3, [r8, #36]	; 0x24
   185e4:	ldr	r3, [r2, r0]
   185e8:	str	r3, [r8, #100]	; 0x64
   185ec:	str	r8, [r2, r0]
   185f0:	ldr	r8, [r6, #84]	; 0x54
   185f4:	ldr	ip, [sp, #20]
   185f8:	ldr	r3, [r8, #24]
   185fc:	cmp	ip, r3
   18600:	beq	18750 <opt_loop+0x2afc>
   18604:	ldr	r3, [r8, #60]	; 0x3c
   18608:	mov	r2, #0
   1860c:	str	ip, [r8, #24]
   18610:	str	r2, [r8, #100]	; 0x64
   18614:	cmp	r3, r2
   18618:	moveq	r0, r3
   1861c:	moveq	r3, r0
   18620:	beq	18738 <opt_loop+0x2ae4>
   18624:	ldr	r0, [r3, #24]
   18628:	cmp	ip, r0
   1862c:	beq	18698 <opt_loop+0x2a44>
   18630:	ldr	r0, [r3, #60]	; 0x3c
   18634:	str	ip, [r3, #24]
   18638:	str	r2, [r3, #100]	; 0x64
   1863c:	cmp	r0, r2
   18640:	moveq	ip, r0
   18644:	moveq	r2, ip
   18648:	beq	18684 <opt_loop+0x2a30>
   1864c:	str	r3, [sp, #16]
   18650:	bl	13450 <find_levels_r>
   18654:	ldr	r3, [sp, #16]
   18658:	ldr	r0, [r3, #84]	; 0x54
   1865c:	bl	13450 <find_levels_r>
   18660:	ldr	r3, [sp, #16]
   18664:	ldr	r2, [r3, #60]	; 0x3c
   18668:	ldr	r0, [r3, #84]	; 0x54
   1866c:	ldr	r2, [r2, #36]	; 0x24
   18670:	ldr	r0, [r0, #36]	; 0x24
   18674:	cmp	r0, r2
   18678:	movge	r2, r0
   1867c:	add	r2, r2, #1
   18680:	lsl	ip, r2, #2
   18684:	ldr	r0, [fp]
   18688:	str	r2, [r3, #36]	; 0x24
   1868c:	ldr	r2, [r0, ip]
   18690:	str	r2, [r3, #100]	; 0x64
   18694:	str	r3, [r0, ip]
   18698:	ldr	r2, [r8, #84]	; 0x54
   1869c:	ldr	ip, [sp, #20]
   186a0:	ldr	r3, [r2, #24]
   186a4:	cmp	ip, r3
   186a8:	beq	1871c <opt_loop+0x2ac8>
   186ac:	ldr	r0, [r2, #60]	; 0x3c
   186b0:	mov	r3, #0
   186b4:	str	ip, [r2, #24]
   186b8:	str	r3, [r2, #100]	; 0x64
   186bc:	cmp	r0, r3
   186c0:	moveq	r3, r0
   186c4:	moveq	ip, r3
   186c8:	beq	18704 <opt_loop+0x2ab0>
   186cc:	str	r2, [sp, #16]
   186d0:	bl	13450 <find_levels_r>
   186d4:	ldr	r2, [sp, #16]
   186d8:	ldr	r0, [r2, #84]	; 0x54
   186dc:	bl	13450 <find_levels_r>
   186e0:	ldr	r2, [sp, #16]
   186e4:	ldr	r0, [r2, #60]	; 0x3c
   186e8:	ldr	r3, [r2, #84]	; 0x54
   186ec:	ldr	r0, [r0, #36]	; 0x24
   186f0:	ldr	r3, [r3, #36]	; 0x24
   186f4:	cmp	r3, r0
   186f8:	movlt	r3, r0
   186fc:	add	ip, r3, #1
   18700:	lsl	r3, ip, #2
   18704:	ldr	r0, [fp]
   18708:	str	ip, [r2, #36]	; 0x24
   1870c:	ldr	ip, [r0, r3]
   18710:	str	ip, [r2, #100]	; 0x64
   18714:	str	r2, [r0, r3]
   18718:	ldr	r2, [r8, #84]	; 0x54
   1871c:	ldr	r3, [r8, #60]	; 0x3c
   18720:	ldr	r2, [r2, #36]	; 0x24
   18724:	ldr	r3, [r3, #36]	; 0x24
   18728:	cmp	r3, r2
   1872c:	movlt	r3, r2
   18730:	add	r3, r3, #1
   18734:	lsl	r0, r3, #2
   18738:	ldr	r2, [fp]
   1873c:	str	r3, [r8, #36]	; 0x24
   18740:	ldr	r3, [r2, r0]
   18744:	str	r3, [r8, #100]	; 0x64
   18748:	str	r8, [r2, r0]
   1874c:	ldr	r8, [r6, #84]	; 0x54
   18750:	ldr	r3, [r6, #60]	; 0x3c
   18754:	ldr	r2, [r8, #36]	; 0x24
   18758:	ldr	r3, [r3, #36]	; 0x24
   1875c:	cmp	r3, r2
   18760:	movlt	r3, r2
   18764:	add	r3, r3, #1
   18768:	lsl	r8, r3, #2
   1876c:	ldr	r2, [fp]
   18770:	str	r3, [r6, #36]	; 0x24
   18774:	ldr	r3, [r2, r8]
   18778:	str	r3, [r6, #100]	; 0x64
   1877c:	str	r6, [r2, r8]
   18780:	ldr	r6, [r7, #84]	; 0x54
   18784:	ldr	r3, [r7, #60]	; 0x3c
   18788:	ldr	r2, [r6, #36]	; 0x24
   1878c:	ldr	r3, [r3, #36]	; 0x24
   18790:	cmp	r3, r2
   18794:	movlt	r3, r2
   18798:	add	r3, r3, #1
   1879c:	lsl	r8, r3, #2
   187a0:	ldr	r2, [fp]
   187a4:	str	r3, [r7, #36]	; 0x24
   187a8:	ldr	r3, [r2, r8]
   187ac:	str	r3, [r7, #100]	; 0x64
   187b0:	str	r7, [r2, r8]
   187b4:	ldr	r7, [r5, #84]	; 0x54
   187b8:	ldr	ip, [sp, #20]
   187bc:	ldr	r3, [r7, #24]
   187c0:	cmp	ip, r3
   187c4:	beq	18d48 <opt_loop+0x30f4>
   187c8:	ldr	r6, [r7, #60]	; 0x3c
   187cc:	mov	r3, #0
   187d0:	str	ip, [r7, #24]
   187d4:	str	r3, [r7, #100]	; 0x64
   187d8:	cmp	r6, r3
   187dc:	moveq	r3, r6
   187e0:	beq	18d30 <opt_loop+0x30dc>
   187e4:	ldr	r2, [r6, #24]
   187e8:	cmp	ip, r2
   187ec:	beq	18ae8 <opt_loop+0x2e94>
   187f0:	ldr	r8, [r6, #60]	; 0x3c
   187f4:	str	ip, [r6, #24]
   187f8:	str	r3, [r6, #100]	; 0x64
   187fc:	cmp	r8, r3
   18800:	moveq	r3, r8
   18804:	beq	18ad4 <opt_loop+0x2e80>
   18808:	ldr	r2, [r8, #24]
   1880c:	cmp	ip, r2
   18810:	beq	18958 <opt_loop+0x2d04>
   18814:	ldr	r2, [r8, #60]	; 0x3c
   18818:	str	ip, [r8, #24]
   1881c:	str	r3, [r8, #100]	; 0x64
   18820:	cmp	r2, r3
   18824:	moveq	r0, r2
   18828:	moveq	r3, r0
   1882c:	beq	18944 <opt_loop+0x2cf0>
   18830:	ldr	r0, [r2, #24]
   18834:	cmp	ip, r0
   18838:	beq	188a4 <opt_loop+0x2c50>
   1883c:	ldr	r0, [r2, #60]	; 0x3c
   18840:	str	ip, [r2, #24]
   18844:	str	r3, [r2, #100]	; 0x64
   18848:	cmp	r0, r3
   1884c:	moveq	r3, r0
   18850:	moveq	ip, r3
   18854:	beq	18890 <opt_loop+0x2c3c>
   18858:	str	r2, [sp, #16]
   1885c:	bl	13450 <find_levels_r>
   18860:	ldr	r2, [sp, #16]
   18864:	ldr	r0, [r2, #84]	; 0x54
   18868:	bl	13450 <find_levels_r>
   1886c:	ldr	r2, [sp, #16]
   18870:	ldr	r0, [r2, #60]	; 0x3c
   18874:	ldr	r3, [r2, #84]	; 0x54
   18878:	ldr	r0, [r0, #36]	; 0x24
   1887c:	ldr	r3, [r3, #36]	; 0x24
   18880:	cmp	r3, r0
   18884:	movlt	r3, r0
   18888:	add	ip, r3, #1
   1888c:	lsl	r3, ip, #2
   18890:	ldr	r0, [fp]
   18894:	str	ip, [r2, #36]	; 0x24
   18898:	ldr	ip, [r0, r3]
   1889c:	str	ip, [r2, #100]	; 0x64
   188a0:	str	r2, [r0, r3]
   188a4:	ldr	r2, [r8, #84]	; 0x54
   188a8:	ldr	ip, [sp, #20]
   188ac:	ldr	r3, [r2, #24]
   188b0:	cmp	ip, r3
   188b4:	beq	18928 <opt_loop+0x2cd4>
   188b8:	ldr	r0, [r2, #60]	; 0x3c
   188bc:	mov	r3, #0
   188c0:	str	ip, [r2, #24]
   188c4:	str	r3, [r2, #100]	; 0x64
   188c8:	cmp	r0, r3
   188cc:	moveq	r3, r0
   188d0:	moveq	ip, r3
   188d4:	beq	18910 <opt_loop+0x2cbc>
   188d8:	str	r2, [sp, #16]
   188dc:	bl	13450 <find_levels_r>
   188e0:	ldr	r2, [sp, #16]
   188e4:	ldr	r0, [r2, #84]	; 0x54
   188e8:	bl	13450 <find_levels_r>
   188ec:	ldr	r2, [sp, #16]
   188f0:	ldr	r0, [r2, #60]	; 0x3c
   188f4:	ldr	r3, [r2, #84]	; 0x54
   188f8:	ldr	r0, [r0, #36]	; 0x24
   188fc:	ldr	r3, [r3, #36]	; 0x24
   18900:	cmp	r3, r0
   18904:	movlt	r3, r0
   18908:	add	ip, r3, #1
   1890c:	lsl	r3, ip, #2
   18910:	ldr	r0, [fp]
   18914:	str	ip, [r2, #36]	; 0x24
   18918:	ldr	ip, [r0, r3]
   1891c:	str	ip, [r2, #100]	; 0x64
   18920:	str	r2, [r0, r3]
   18924:	ldr	r2, [r8, #84]	; 0x54
   18928:	ldr	r3, [r8, #60]	; 0x3c
   1892c:	ldr	r2, [r2, #36]	; 0x24
   18930:	ldr	r3, [r3, #36]	; 0x24
   18934:	cmp	r3, r2
   18938:	movlt	r3, r2
   1893c:	add	r3, r3, #1
   18940:	lsl	r0, r3, #2
   18944:	ldr	r2, [fp]
   18948:	str	r3, [r8, #36]	; 0x24
   1894c:	ldr	r3, [r2, r0]
   18950:	str	r3, [r8, #100]	; 0x64
   18954:	str	r8, [r2, r0]
   18958:	ldr	r8, [r6, #84]	; 0x54
   1895c:	ldr	ip, [sp, #20]
   18960:	ldr	r3, [r8, #24]
   18964:	cmp	ip, r3
   18968:	beq	18ab8 <opt_loop+0x2e64>
   1896c:	ldr	r3, [r8, #60]	; 0x3c
   18970:	mov	r2, #0
   18974:	str	ip, [r8, #24]
   18978:	str	r2, [r8, #100]	; 0x64
   1897c:	cmp	r3, r2
   18980:	moveq	r0, r3
   18984:	moveq	r3, r0
   18988:	beq	18aa0 <opt_loop+0x2e4c>
   1898c:	ldr	r0, [r3, #24]
   18990:	cmp	ip, r0
   18994:	beq	18a00 <opt_loop+0x2dac>
   18998:	ldr	r0, [r3, #60]	; 0x3c
   1899c:	str	ip, [r3, #24]
   189a0:	str	r2, [r3, #100]	; 0x64
   189a4:	cmp	r0, r2
   189a8:	moveq	ip, r0
   189ac:	moveq	r2, ip
   189b0:	beq	189ec <opt_loop+0x2d98>
   189b4:	str	r3, [sp, #16]
   189b8:	bl	13450 <find_levels_r>
   189bc:	ldr	r3, [sp, #16]
   189c0:	ldr	r0, [r3, #84]	; 0x54
   189c4:	bl	13450 <find_levels_r>
   189c8:	ldr	r3, [sp, #16]
   189cc:	ldr	r2, [r3, #60]	; 0x3c
   189d0:	ldr	r0, [r3, #84]	; 0x54
   189d4:	ldr	r2, [r2, #36]	; 0x24
   189d8:	ldr	r0, [r0, #36]	; 0x24
   189dc:	cmp	r0, r2
   189e0:	movge	r2, r0
   189e4:	add	r2, r2, #1
   189e8:	lsl	ip, r2, #2
   189ec:	ldr	r0, [fp]
   189f0:	str	r2, [r3, #36]	; 0x24
   189f4:	ldr	r2, [r0, ip]
   189f8:	str	r2, [r3, #100]	; 0x64
   189fc:	str	r3, [r0, ip]
   18a00:	ldr	r2, [r8, #84]	; 0x54
   18a04:	ldr	ip, [sp, #20]
   18a08:	ldr	r3, [r2, #24]
   18a0c:	cmp	ip, r3
   18a10:	beq	18a84 <opt_loop+0x2e30>
   18a14:	ldr	r0, [r2, #60]	; 0x3c
   18a18:	mov	r3, #0
   18a1c:	str	ip, [r2, #24]
   18a20:	str	r3, [r2, #100]	; 0x64
   18a24:	cmp	r0, r3
   18a28:	moveq	r3, r0
   18a2c:	moveq	ip, r3
   18a30:	beq	18a6c <opt_loop+0x2e18>
   18a34:	str	r2, [sp, #16]
   18a38:	bl	13450 <find_levels_r>
   18a3c:	ldr	r2, [sp, #16]
   18a40:	ldr	r0, [r2, #84]	; 0x54
   18a44:	bl	13450 <find_levels_r>
   18a48:	ldr	r2, [sp, #16]
   18a4c:	ldr	r0, [r2, #60]	; 0x3c
   18a50:	ldr	r3, [r2, #84]	; 0x54
   18a54:	ldr	r0, [r0, #36]	; 0x24
   18a58:	ldr	r3, [r3, #36]	; 0x24
   18a5c:	cmp	r3, r0
   18a60:	movlt	r3, r0
   18a64:	add	ip, r3, #1
   18a68:	lsl	r3, ip, #2
   18a6c:	ldr	r0, [fp]
   18a70:	str	ip, [r2, #36]	; 0x24
   18a74:	ldr	ip, [r0, r3]
   18a78:	str	ip, [r2, #100]	; 0x64
   18a7c:	str	r2, [r0, r3]
   18a80:	ldr	r2, [r8, #84]	; 0x54
   18a84:	ldr	r3, [r8, #60]	; 0x3c
   18a88:	ldr	r2, [r2, #36]	; 0x24
   18a8c:	ldr	r3, [r3, #36]	; 0x24
   18a90:	cmp	r3, r2
   18a94:	movlt	r3, r2
   18a98:	add	r3, r3, #1
   18a9c:	lsl	r0, r3, #2
   18aa0:	ldr	r2, [fp]
   18aa4:	str	r3, [r8, #36]	; 0x24
   18aa8:	ldr	r3, [r2, r0]
   18aac:	str	r3, [r8, #100]	; 0x64
   18ab0:	str	r8, [r2, r0]
   18ab4:	ldr	r8, [r6, #84]	; 0x54
   18ab8:	ldr	r3, [r6, #60]	; 0x3c
   18abc:	ldr	r2, [r8, #36]	; 0x24
   18ac0:	ldr	r3, [r3, #36]	; 0x24
   18ac4:	cmp	r3, r2
   18ac8:	movlt	r3, r2
   18acc:	add	r3, r3, #1
   18ad0:	lsl	r8, r3, #2
   18ad4:	ldr	r2, [fp]
   18ad8:	str	r3, [r6, #36]	; 0x24
   18adc:	ldr	r3, [r2, r8]
   18ae0:	str	r3, [r6, #100]	; 0x64
   18ae4:	str	r6, [r2, r8]
   18ae8:	ldr	r8, [r7, #84]	; 0x54
   18aec:	ldr	ip, [sp, #20]
   18af0:	ldr	r3, [r8, #24]
   18af4:	cmp	ip, r3
   18af8:	beq	18d14 <opt_loop+0x30c0>
   18afc:	ldr	r6, [r8, #60]	; 0x3c
   18b00:	mov	r2, #0
   18b04:	str	ip, [r8, #24]
   18b08:	str	r2, [r8, #100]	; 0x64
   18b0c:	cmp	r6, r2
   18b10:	moveq	r3, r6
   18b14:	beq	18cfc <opt_loop+0x30a8>
   18b18:	ldr	r3, [r6, #24]
   18b1c:	cmp	ip, r3
   18b20:	beq	18b80 <opt_loop+0x2f2c>
   18b24:	ldr	r0, [r6, #60]	; 0x3c
   18b28:	str	ip, [r6, #24]
   18b2c:	str	r2, [r6, #100]	; 0x64
   18b30:	cmp	r0, r2
   18b34:	moveq	r3, r0
   18b38:	moveq	r2, r3
   18b3c:	beq	18b6c <opt_loop+0x2f18>
   18b40:	bl	13450 <find_levels_r>
   18b44:	ldr	r0, [r6, #84]	; 0x54
   18b48:	bl	13450 <find_levels_r>
   18b4c:	ldr	r2, [r6, #60]	; 0x3c
   18b50:	ldr	r3, [r6, #84]	; 0x54
   18b54:	ldr	r2, [r2, #36]	; 0x24
   18b58:	ldr	r3, [r3, #36]	; 0x24
   18b5c:	cmp	r3, r2
   18b60:	movlt	r3, r2
   18b64:	add	r2, r3, #1
   18b68:	lsl	r3, r2, #2
   18b6c:	ldr	r0, [fp]
   18b70:	str	r2, [r6, #36]	; 0x24
   18b74:	ldr	r2, [r0, r3]
   18b78:	str	r2, [r6, #100]	; 0x64
   18b7c:	str	r6, [r0, r3]
   18b80:	ldr	r6, [r8, #84]	; 0x54
   18b84:	ldr	ip, [sp, #20]
   18b88:	ldr	r3, [r6, #24]
   18b8c:	cmp	ip, r3
   18b90:	beq	18ce0 <opt_loop+0x308c>
   18b94:	ldr	r3, [r6, #60]	; 0x3c
   18b98:	mov	r2, #0
   18b9c:	str	ip, [r6, #24]
   18ba0:	str	r2, [r6, #100]	; 0x64
   18ba4:	cmp	r3, r2
   18ba8:	moveq	r0, r3
   18bac:	moveq	r3, r0
   18bb0:	beq	18cc8 <opt_loop+0x3074>
   18bb4:	ldr	r0, [r3, #24]
   18bb8:	cmp	ip, r0
   18bbc:	beq	18c28 <opt_loop+0x2fd4>
   18bc0:	ldr	r0, [r3, #60]	; 0x3c
   18bc4:	str	ip, [r3, #24]
   18bc8:	str	r2, [r3, #100]	; 0x64
   18bcc:	cmp	r0, r2
   18bd0:	moveq	ip, r0
   18bd4:	moveq	r2, ip
   18bd8:	beq	18c14 <opt_loop+0x2fc0>
   18bdc:	str	r3, [sp, #16]
   18be0:	bl	13450 <find_levels_r>
   18be4:	ldr	r3, [sp, #16]
   18be8:	ldr	r0, [r3, #84]	; 0x54
   18bec:	bl	13450 <find_levels_r>
   18bf0:	ldr	r3, [sp, #16]
   18bf4:	ldr	r2, [r3, #60]	; 0x3c
   18bf8:	ldr	r0, [r3, #84]	; 0x54
   18bfc:	ldr	r2, [r2, #36]	; 0x24
   18c00:	ldr	r0, [r0, #36]	; 0x24
   18c04:	cmp	r0, r2
   18c08:	movge	r2, r0
   18c0c:	add	r2, r2, #1
   18c10:	lsl	ip, r2, #2
   18c14:	ldr	r0, [fp]
   18c18:	str	r2, [r3, #36]	; 0x24
   18c1c:	ldr	r2, [r0, ip]
   18c20:	str	r2, [r3, #100]	; 0x64
   18c24:	str	r3, [r0, ip]
   18c28:	ldr	r2, [r6, #84]	; 0x54
   18c2c:	ldr	ip, [sp, #20]
   18c30:	ldr	r3, [r2, #24]
   18c34:	cmp	ip, r3
   18c38:	beq	18cac <opt_loop+0x3058>
   18c3c:	ldr	r0, [r2, #60]	; 0x3c
   18c40:	mov	r3, #0
   18c44:	str	ip, [r2, #24]
   18c48:	str	r3, [r2, #100]	; 0x64
   18c4c:	cmp	r0, r3
   18c50:	moveq	r3, r0
   18c54:	moveq	ip, r3
   18c58:	beq	18c94 <opt_loop+0x3040>
   18c5c:	str	r2, [sp, #16]
   18c60:	bl	13450 <find_levels_r>
   18c64:	ldr	r2, [sp, #16]
   18c68:	ldr	r0, [r2, #84]	; 0x54
   18c6c:	bl	13450 <find_levels_r>
   18c70:	ldr	r2, [sp, #16]
   18c74:	ldr	r0, [r2, #60]	; 0x3c
   18c78:	ldr	r3, [r2, #84]	; 0x54
   18c7c:	ldr	r0, [r0, #36]	; 0x24
   18c80:	ldr	r3, [r3, #36]	; 0x24
   18c84:	cmp	r3, r0
   18c88:	movlt	r3, r0
   18c8c:	add	ip, r3, #1
   18c90:	lsl	r3, ip, #2
   18c94:	ldr	r0, [fp]
   18c98:	str	ip, [r2, #36]	; 0x24
   18c9c:	ldr	ip, [r0, r3]
   18ca0:	str	ip, [r2, #100]	; 0x64
   18ca4:	str	r2, [r0, r3]
   18ca8:	ldr	r2, [r6, #84]	; 0x54
   18cac:	ldr	r3, [r6, #60]	; 0x3c
   18cb0:	ldr	r2, [r2, #36]	; 0x24
   18cb4:	ldr	r3, [r3, #36]	; 0x24
   18cb8:	cmp	r3, r2
   18cbc:	movlt	r3, r2
   18cc0:	add	r3, r3, #1
   18cc4:	lsl	r0, r3, #2
   18cc8:	ldr	r2, [fp]
   18ccc:	str	r3, [r6, #36]	; 0x24
   18cd0:	ldr	r3, [r2, r0]
   18cd4:	str	r3, [r6, #100]	; 0x64
   18cd8:	str	r6, [r2, r0]
   18cdc:	ldr	r6, [r8, #84]	; 0x54
   18ce0:	ldr	r3, [r8, #60]	; 0x3c
   18ce4:	ldr	r2, [r6, #36]	; 0x24
   18ce8:	ldr	r3, [r3, #36]	; 0x24
   18cec:	cmp	r3, r2
   18cf0:	movlt	r3, r2
   18cf4:	add	r3, r3, #1
   18cf8:	lsl	r6, r3, #2
   18cfc:	ldr	r2, [fp]
   18d00:	str	r3, [r8, #36]	; 0x24
   18d04:	ldr	r3, [r2, r6]
   18d08:	str	r3, [r8, #100]	; 0x64
   18d0c:	str	r8, [r2, r6]
   18d10:	ldr	r8, [r7, #84]	; 0x54
   18d14:	ldr	r3, [r7, #60]	; 0x3c
   18d18:	ldr	r2, [r8, #36]	; 0x24
   18d1c:	ldr	r3, [r3, #36]	; 0x24
   18d20:	cmp	r3, r2
   18d24:	movlt	r3, r2
   18d28:	add	r3, r3, #1
   18d2c:	lsl	r6, r3, #2
   18d30:	ldr	r2, [fp]
   18d34:	str	r3, [r7, #36]	; 0x24
   18d38:	ldr	r3, [r2, r6]
   18d3c:	str	r3, [r7, #100]	; 0x64
   18d40:	str	r7, [r2, r6]
   18d44:	ldr	r7, [r5, #84]	; 0x54
   18d48:	ldr	r3, [r5, #60]	; 0x3c
   18d4c:	ldr	r2, [r7, #36]	; 0x24
   18d50:	ldr	r3, [r3, #36]	; 0x24
   18d54:	cmp	r3, r2
   18d58:	movlt	r3, r2
   18d5c:	add	r3, r3, #1
   18d60:	lsl	r7, r3, #2
   18d64:	ldr	r2, [fp]
   18d68:	str	r3, [r5, #36]	; 0x24
   18d6c:	ldr	r3, [r2, r7]
   18d70:	str	r3, [r5, #100]	; 0x64
   18d74:	str	r5, [r2, r7]
   18d78:	ldr	r5, [r1, #84]	; 0x54
   18d7c:	ldr	r3, [r1, #60]	; 0x3c
   18d80:	ldr	r2, [r5, #36]	; 0x24
   18d84:	ldr	r3, [r3, #36]	; 0x24
   18d88:	cmp	r3, r2
   18d8c:	movlt	r3, r2
   18d90:	add	r3, r3, #1
   18d94:	lsl	r5, r3, #2
   18d98:	ldr	r2, [fp]
   18d9c:	str	r3, [r1, #36]	; 0x24
   18da0:	ldr	r3, [r2, r5]
   18da4:	str	r3, [r1, #100]	; 0x64
   18da8:	str	r1, [r2, r5]
   18dac:	ldr	r1, [sl, #84]	; 0x54
   18db0:	ldr	r3, [sl, #60]	; 0x3c
   18db4:	ldr	r2, [r1, #36]	; 0x24
   18db8:	ldr	r3, [r3, #36]	; 0x24
   18dbc:	cmp	r3, r2
   18dc0:	movlt	r3, r2
   18dc4:	add	r3, r3, #1
   18dc8:	lsl	r1, r3, #2
   18dcc:	ldr	r2, [fp]
   18dd0:	str	r3, [sl, #36]	; 0x24
   18dd4:	ldr	r3, [r2, r1]
   18dd8:	str	r3, [sl, #100]	; 0x64
   18ddc:	str	sl, [r2, r1]
   18de0:	ldr	r3, [sp, #48]	; 0x30
   18de4:	cmp	r3, #0
   18de8:	ble	18dfc <opt_loop+0x31a8>
   18dec:	mov	r1, #255	; 0xff
   18df0:	ldr	r2, [sp, #24]
   18df4:	ldr	r0, [sp, #56]	; 0x38
   18df8:	bl	e2c <memset@plt>
   18dfc:	cmp	r9, #0
   18e00:	movge	r3, r9
   18e04:	movge	r1, #0
   18e08:	blt	18e1c <opt_loop+0x31c8>
   18e0c:	ldr	r2, [sl, #104]	; 0x68
   18e10:	str	r1, [r2, r3, lsl #2]
   18e14:	subs	r3, r3, #1
   18e18:	bcs	18e0c <opt_loop+0x31b8>
   18e1c:	ldr	lr, [sl, #36]	; 0x24
   18e20:	cmp	lr, #0
   18e24:	blt	18fe0 <opt_loop+0x338c>
   18e28:	str	sl, [sp, #28]
   18e2c:	ldr	sl, [sp, #12]
   18e30:	ldr	r3, [fp]
   18e34:	ldr	r3, [r3, lr, lsl #2]
   18e38:	cmp	r3, #0
   18e3c:	movne	r8, lr
   18e40:	beq	18fd4 <opt_loop+0x3380>
   18e44:	ldr	r2, [r3]
   18e48:	mov	lr, #1
   18e4c:	ldr	r0, [r3, #104]	; 0x68
   18e50:	lsr	ip, r2, #5
   18e54:	and	r2, r2, #31
   18e58:	ldr	r1, [r0, ip, lsl #2]
   18e5c:	orr	r2, r1, lr, lsl r2
   18e60:	str	r2, [r0, ip, lsl #2]
   18e64:	ldr	r2, [r3, #60]	; 0x3c
   18e68:	cmp	r2, #0
   18e6c:	beq	18fc4 <opt_loop+0x3370>
   18e70:	cmp	r9, #0
   18e74:	ldr	r2, [r2, #104]	; 0x68
   18e78:	ldr	r1, [r3, #104]	; 0x68
   18e7c:	blt	18fc4 <opt_loop+0x3370>
   18e80:	add	r0, r1, #8
   18e84:	add	r5, r2, #8
   18e88:	mov	ip, r0
   18e8c:	orr	lr, r2, r1
   18e90:	cmp	r1, r5
   18e94:	cmpcc	r2, ip
   18e98:	mov	r0, r5
   18e9c:	movcs	r0, #1
   18ea0:	movcc	r0, #0
   18ea4:	cmp	r9, #6
   18ea8:	movls	ip, #0
   18eac:	movhi	ip, #1
   18eb0:	tst	lr, #7
   18eb4:	andeq	r0, ip, r0
   18eb8:	movne	r0, #0
   18ebc:	cmp	r0, #0
   18ec0:	beq	195d0 <opt_loop+0x397c>
   18ec4:	sub	r5, r1, #8
   18ec8:	mov	r0, r2
   18ecc:	str	r3, [sp, #16]
   18ed0:	mov	lr, #0
   18ed4:	mov	r7, r5
   18ed8:	ldr	r3, [r0]
   18edc:	add	lr, lr, #1
   18ee0:	ldr	r5, [r7, #8]!
   18ee4:	ldr	r6, [sp, #8]
   18ee8:	and	r5, r5, r3
   18eec:	ldr	r3, [r0, #4]
   18ef0:	cmp	r6, lr
   18ef4:	ldr	r6, [r7, #4]
   18ef8:	and	r6, r6, r3
   18efc:	stm	r0, {r5, r6}
   18f00:	add	r0, r0, #8
   18f04:	bne	18ed8 <opt_loop+0x3284>
   18f08:	ldr	r0, [sp, #4]
   18f0c:	ldr	r3, [sp, #16]
   18f10:	cmp	r0, sl
   18f14:	beq	18f28 <opt_loop+0x32d4>
   18f18:	ldr	r0, [r1, r4]
   18f1c:	ldr	r1, [r2, r4]
   18f20:	and	r1, r1, r0
   18f24:	str	r1, [r2, r4]
   18f28:	ldr	r2, [r3, #84]	; 0x54
   18f2c:	ldr	r1, [r3, #104]	; 0x68
   18f30:	ldr	r2, [r2, #104]	; 0x68
   18f34:	add	r0, r1, #8
   18f38:	add	r5, r2, #8
   18f3c:	orr	lr, r2, r1
   18f40:	cmp	r1, r5
   18f44:	cmpcc	r2, r0
   18f48:	movcs	r0, #1
   18f4c:	movcc	r0, #0
   18f50:	tst	lr, #7
   18f54:	andeq	ip, ip, r0
   18f58:	movne	ip, #0
   18f5c:	cmp	ip, #0
   18f60:	moveq	r0, r9
   18f64:	beq	19230 <opt_loop+0x35dc>
   18f68:	sub	lr, r1, #8
   18f6c:	mov	r0, r2
   18f70:	mov	ip, #0
   18f74:	ldr	r5, [sp, #8]
   18f78:	add	ip, ip, #1
   18f7c:	add	r0, r0, #8
   18f80:	ldr	r7, [lr, #8]!
   18f84:	cmp	ip, r5
   18f88:	ldr	r5, [r0, #-8]
   18f8c:	ldr	r6, [lr, #4]
   18f90:	and	r5, r5, r7
   18f94:	str	r5, [r0, #-8]
   18f98:	ldr	r5, [r0, #-4]
   18f9c:	and	r6, r6, r5
   18fa0:	str	r6, [r0, #-4]
   18fa4:	bne	18f74 <opt_loop+0x3320>
   18fa8:	ldr	r0, [sp, #4]
   18fac:	cmp	r0, sl
   18fb0:	beq	18fc4 <opt_loop+0x3370>
   18fb4:	ldr	r0, [r1, r4]
   18fb8:	ldr	r1, [r2, r4]
   18fbc:	and	r1, r1, r0
   18fc0:	str	r1, [r2, r4]
   18fc4:	ldr	r3, [r3, #100]	; 0x64
   18fc8:	cmp	r3, #0
   18fcc:	bne	18e44 <opt_loop+0x31f0>
   18fd0:	mov	lr, r8
   18fd4:	subs	lr, lr, #1
   18fd8:	bcs	18e30 <opt_loop+0x31dc>
   18fdc:	ldr	sl, [sp, #28]
   18fe0:	mov	r1, #0
   18fe4:	ldr	r2, [sp, #24]
   18fe8:	ldr	r0, [sp, #40]	; 0x28
   18fec:	bl	e2c <memset@plt>
   18ff0:	ldr	lr, [sl, #36]	; 0x24
   18ff4:	cmp	lr, #0
   18ff8:	strge	sl, [sp, #16]
   18ffc:	blt	19390 <opt_loop+0x373c>
   19000:	ldr	r3, [fp]
   19004:	ldr	r3, [r3, lr, lsl #2]
   19008:	cmp	r3, #0
   1900c:	beq	19198 <opt_loop+0x3544>
   19010:	ldr	r2, [r3]
   19014:	mov	r5, #1
   19018:	ldr	r0, [r3, #108]	; 0x6c
   1901c:	lsr	ip, r2, #5
   19020:	and	r2, r2, #31
   19024:	ldr	r1, [r0, ip, lsl #2]
   19028:	orr	r2, r1, r5, lsl r2
   1902c:	str	r2, [r0, ip, lsl #2]
   19030:	ldr	r2, [r3, #60]	; 0x3c
   19034:	cmp	r2, #0
   19038:	beq	1918c <opt_loop+0x3538>
   1903c:	cmp	r9, #0
   19040:	ldr	r2, [r2, #108]	; 0x6c
   19044:	ldr	r1, [r3, #108]	; 0x6c
   19048:	blt	1918c <opt_loop+0x3538>
   1904c:	add	r0, r1, #8
   19050:	add	r6, r2, #8
   19054:	mov	ip, r0
   19058:	orr	r5, r2, r1
   1905c:	cmp	r1, r6
   19060:	cmpcc	r2, ip
   19064:	mov	r0, r6
   19068:	movcs	r0, #1
   1906c:	movcc	r0, #0
   19070:	cmp	r9, #6
   19074:	movls	ip, #0
   19078:	movhi	ip, #1
   1907c:	tst	r5, #7
   19080:	andeq	r0, ip, r0
   19084:	movne	r0, #0
   19088:	cmp	r0, #0
   1908c:	beq	195ac <opt_loop+0x3958>
   19090:	sub	r6, r1, #8
   19094:	mov	r0, r2
   19098:	mov	r5, #0
   1909c:	ldr	r7, [sp, #8]
   190a0:	add	r5, r5, #1
   190a4:	add	r0, r0, #8
   190a8:	ldr	sl, [r6, #8]!
   190ac:	cmp	r5, r7
   190b0:	ldr	r7, [r0, #-8]
   190b4:	ldr	r8, [r6, #4]
   190b8:	orr	r7, r7, sl
   190bc:	str	r7, [r0, #-8]
   190c0:	ldr	r7, [r0, #-4]
   190c4:	orr	r8, r7, r8
   190c8:	str	r8, [r0, #-4]
   190cc:	bne	1909c <opt_loop+0x3448>
   190d0:	ldr	r0, [sp, #4]
   190d4:	ldr	r5, [sp, #12]
   190d8:	cmp	r0, r5
   190dc:	beq	190f0 <opt_loop+0x349c>
   190e0:	ldr	r0, [r1, r4]
   190e4:	ldr	r1, [r2, r4]
   190e8:	orr	r1, r1, r0
   190ec:	str	r1, [r2, r4]
   190f0:	ldr	r2, [r3, #84]	; 0x54
   190f4:	ldr	r1, [r3, #108]	; 0x6c
   190f8:	ldr	r2, [r2, #108]	; 0x6c
   190fc:	add	r6, r1, #8
   19100:	add	r0, r2, #8
   19104:	orr	r5, r1, r2
   19108:	cmp	r2, r6
   1910c:	cmpcc	r1, r0
   19110:	movcs	r0, #1
   19114:	movcc	r0, #0
   19118:	tst	r5, #7
   1911c:	andeq	ip, ip, r0
   19120:	movne	ip, #0
   19124:	cmp	ip, #0
   19128:	moveq	r0, r9
   1912c:	beq	19250 <opt_loop+0x35fc>
   19130:	sub	r5, r1, #8
   19134:	mov	r0, r2
   19138:	mov	ip, #0
   1913c:	ldr	sl, [r5, #8]!
   19140:	add	ip, ip, #1
   19144:	ldr	r6, [sp, #8]
   19148:	ldm	r0, {r7, r8}
   1914c:	add	r0, r0, #8
   19150:	cmp	ip, r6
   19154:	ldr	r6, [r5, #4]
   19158:	orr	r7, r7, sl
   1915c:	str	r7, [r0, #-8]
   19160:	orr	r6, r6, r8
   19164:	str	r6, [r0, #-4]
   19168:	bne	1913c <opt_loop+0x34e8>
   1916c:	ldr	r0, [sp, #4]
   19170:	ldr	ip, [sp, #12]
   19174:	cmp	r0, ip
   19178:	beq	1918c <opt_loop+0x3538>
   1917c:	ldr	r0, [r1, r4]
   19180:	ldr	r1, [r2, r4]
   19184:	orr	r1, r1, r0
   19188:	str	r1, [r2, r4]
   1918c:	ldr	r3, [r3, #100]	; 0x64
   19190:	cmp	r3, #0
   19194:	bne	19010 <opt_loop+0x33bc>
   19198:	subs	lr, lr, #1
   1919c:	bcs	19000 <opt_loop+0x33ac>
   191a0:	ldr	sl, [sp, #16]
   191a4:	ldr	r8, [sl, #36]	; 0x24
   191a8:	cmp	r8, #0
   191ac:	str	r8, [sp, #16]
   191b0:	blt	19390 <opt_loop+0x373c>
   191b4:	ldr	r3, [fp]
   191b8:	lsl	r2, r8, #2
   191bc:	str	r2, [sp, #28]
   191c0:	str	r4, [sp, #32]
   191c4:	add	r3, r3, r2
   191c8:	str	r9, [sp, #36]	; 0x24
   191cc:	mov	r7, r3
   191d0:	ldr	r4, [r7], #-4
   191d4:	cmp	r4, #0
   191d8:	beq	19314 <opt_loop+0x36c0>
   191dc:	mov	r9, #0
   191e0:	ldr	r1, [r4, #4]
   191e4:	cmp	r1, #0
   191e8:	beq	195f4 <opt_loop+0x39a0>
   191ec:	mov	r6, #0
   191f0:	mov	r5, r6
   191f4:	mov	r2, r6
   191f8:	ldr	r0, [r1]
   191fc:	cmn	r0, #1
   19200:	beq	192dc <opt_loop+0x3688>
   19204:	and	ip, r0, #7
   19208:	sub	r3, ip, #2
   1920c:	cmp	r3, #5
   19210:	addls	pc, pc, r3, lsl #2
   19214:	b	194a0 <opt_loop+0x384c>
   19218:	b	19478 <opt_loop+0x3824>
   1921c:	b	194ac <opt_loop+0x3858>
   19220:	b	19488 <opt_loop+0x3834>
   19224:	b	19488 <opt_loop+0x3834>
   19228:	b	19270 <opt_loop+0x361c>
   1922c:	b	194b4 <opt_loop+0x3860>
   19230:	ldr	ip, [r2], #4
   19234:	sub	r0, r0, #1
   19238:	cmn	r0, #1
   1923c:	ldr	lr, [r1], #4
   19240:	and	ip, ip, lr
   19244:	str	ip, [r2, #-4]
   19248:	bne	19230 <opt_loop+0x35dc>
   1924c:	b	18fc4 <opt_loop+0x3370>
   19250:	ldr	ip, [r2], #4
   19254:	sub	r0, r0, #1
   19258:	cmn	r0, #1
   1925c:	ldr	r5, [r1], #4
   19260:	orr	ip, ip, r5
   19264:	str	ip, [r2, #-4]
   19268:	bne	19250 <opt_loop+0x35fc>
   1926c:	b	1918c <opt_loop+0x3538>
   19270:	and	r3, r0, #24
   19274:	cmp	r3, #16
   19278:	beq	19520 <opt_loop+0x38cc>
   1927c:	cmp	r3, #8
   19280:	moveq	r3, #131072	; 0x20000
   19284:	bne	192dc <opt_loop+0x3688>
   19288:	tst	r2, r3
   1928c:	bne	192dc <opt_loop+0x3688>
   19290:	orr	r5, r5, r3
   19294:	cmp	ip, #7
   19298:	addls	pc, pc, ip, lsl #2
   1929c:	b	192dc <opt_loop+0x3688>
   192a0:	b	19500 <opt_loop+0x38ac>
   192a4:	b	19508 <opt_loop+0x38b4>
   192a8:	b	194cc <opt_loop+0x3878>
   192ac:	b	194cc <opt_loop+0x3878>
   192b0:	b	19500 <opt_loop+0x38ac>
   192b4:	b	192dc <opt_loop+0x3688>
   192b8:	b	192dc <opt_loop+0x3688>
   192bc:	b	192c0 <opt_loop+0x366c>
   192c0:	and	r3, r0, #248	; 0xf8
   192c4:	cmp	r3, #0
   192c8:	moveq	r3, #131072	; 0x20000
   192cc:	movne	r3, #65536	; 0x10000
   192d0:	tst	r5, r3
   192d4:	orreq	r6, r6, r3
   192d8:	orr	r2, r2, r3
   192dc:	ldr	r1, [r1, #16]
   192e0:	cmp	r1, #0
   192e4:	bne	191f8 <opt_loop+0x35a4>
   192e8:	ldr	r0, [r4, #8]
   192ec:	and	r3, r0, #7
   192f0:	cmp	r3, #5
   192f4:	beq	19528 <opt_loop+0x38d4>
   192f8:	str	r2, [r4, #116]	; 0x74
   192fc:	str	r6, [r4, #120]	; 0x78
   19300:	str	r5, [r4, #124]	; 0x7c
   19304:	str	r9, [r4, #128]	; 0x80
   19308:	ldr	r4, [r4, #100]	; 0x64
   1930c:	cmp	r4, #0
   19310:	bne	191e0 <opt_loop+0x358c>
   19314:	subs	r8, r8, #1
   19318:	bcs	191d0 <opt_loop+0x357c>
   1931c:	ldr	r3, [sp, #16]
   19320:	ldr	r4, [sp, #32]
   19324:	ldr	r9, [sp, #36]	; 0x24
   19328:	cmp	r3, #0
   1932c:	ble	19390 <opt_loop+0x373c>
   19330:	ldr	r1, [fp]
   19334:	ldr	r3, [sp, #28]
   19338:	add	ip, r3, r1
   1933c:	ldr	r3, [r1, #4]!
   19340:	cmp	r3, #0
   19344:	beq	19388 <opt_loop+0x3734>
   19348:	ldr	r2, [r3, #60]	; 0x3c
   1934c:	ldr	r0, [r3, #84]	; 0x54
   19350:	ldr	lr, [r3, #120]	; 0x78
   19354:	ldr	r2, [r2, #124]	; 0x7c
   19358:	ldr	r6, [r0, #124]	; 0x7c
   1935c:	ldr	r5, [r3, #128]	; 0x80
   19360:	ldr	r0, [r3, #124]	; 0x7c
   19364:	orr	r2, r2, r6
   19368:	orr	r2, r2, r5
   1936c:	bic	lr, r2, lr
   19370:	str	r2, [r3, #128]	; 0x80
   19374:	orr	r2, r0, lr
   19378:	str	r2, [r3, #124]	; 0x7c
   1937c:	ldr	r3, [r3, #100]	; 0x64
   19380:	cmp	r3, #0
   19384:	bne	19348 <opt_loop+0x36f4>
   19388:	cmp	ip, r1
   1938c:	bne	1933c <opt_loop+0x36e8>
   19390:	ldr	r3, [pc, #664]	; 19630 <opt_loop+0x39dc>
   19394:	add	r3, pc, r3
   19398:	ldr	r5, [r3, #4]
   1939c:	ldr	ip, [r3, #896]	; 0x380
   193a0:	ldr	r2, [r3, #900]	; 0x384
   193a4:	mul	r2, r2, r5
   193a8:	subs	r0, r2, #1
   193ac:	bmi	193cc <opt_loop+0x3778>
   193b0:	rsb	r3, r2, r2, lsl #30
   193b4:	mov	r1, #255	; 0xff
   193b8:	lsl	r2, r2, #2
   193bc:	add	r0, r3, r0
   193c0:	add	r0, r0, #1
   193c4:	add	r0, ip, r0, lsl #2
   193c8:	bl	e2c <memset@plt>
   193cc:	lsl	r5, r5, #2
   193d0:	mov	r1, #0
   193d4:	ldr	r0, [sl, #56]	; 0x38
   193d8:	mov	r2, r5
   193dc:	bl	e2c <memset@plt>
   193e0:	mov	r2, r5
   193e4:	mov	r1, #0
   193e8:	ldr	r0, [sl, #80]	; 0x50
   193ec:	bl	e2c <memset@plt>
   193f0:	ldr	r6, [sl, #36]	; 0x24
   193f4:	cmp	r6, #0
   193f8:	blt	19430 <opt_loop+0x37dc>
   193fc:	ldr	r3, [fp]
   19400:	ldr	r5, [r3, r6, lsl #2]
   19404:	cmp	r5, #0
   19408:	beq	19428 <opt_loop+0x37d4>
   1940c:	add	r0, r5, #48	; 0x30
   19410:	bl	13500 <propedom>
   19414:	add	r0, r5, #72	; 0x48
   19418:	bl	13500 <propedom>
   1941c:	ldr	r5, [r5, #100]	; 0x64
   19420:	cmp	r5, #0
   19424:	bne	1940c <opt_loop+0x37b8>
   19428:	subs	r6, r6, #1
   1942c:	bcs	193fc <opt_loop+0x37a8>
   19430:	mov	r0, sl
   19434:	ldr	r1, [sp, #60]	; 0x3c
   19438:	bl	14274 <opt_blks>
   1943c:	ldr	r3, [pc, #496]	; 19634 <opt_loop+0x39e0>
   19440:	ldr	r2, [sp, #20]
   19444:	add	r3, pc, r3
   19448:	ldr	r3, [r3, #876]	; 0x36c
   1944c:	add	r2, r2, #1
   19450:	str	r2, [sp, #20]
   19454:	cmp	r3, #0
   19458:	beq	15cf0 <opt_loop+0x9c>
   1945c:	add	sp, sp, #68	; 0x44
   19460:	ldrd	r4, [sp]
   19464:	ldrd	r6, [sp, #8]
   19468:	ldrd	r8, [sp, #16]
   1946c:	ldrd	sl, [sp, #24]
   19470:	add	sp, sp, #32
   19474:	pop	{pc}		; (ldr pc, [sp], #4)
   19478:	tst	r2, #65536	; 0x10000
   1947c:	bne	194cc <opt_loop+0x3878>
   19480:	mov	r3, #65536	; 0x10000
   19484:	b	19290 <opt_loop+0x363c>
   19488:	tst	r0, #8
   1948c:	moveq	r3, #65536	; 0x10000
   19490:	bne	19564 <opt_loop+0x3910>
   19494:	tst	r2, r3
   19498:	bne	19294 <opt_loop+0x3640>
   1949c:	b	19290 <opt_loop+0x363c>
   194a0:	and	r3, r0, #224	; 0xe0
   194a4:	cmp	r3, #64	; 0x40
   194a8:	bne	194e4 <opt_loop+0x3890>
   194ac:	mov	r3, #131072	; 0x20000
   194b0:	b	19494 <opt_loop+0x3840>
   194b4:	and	r3, r0, #248	; 0xf8
   194b8:	cmp	r3, #128	; 0x80
   194bc:	beq	19510 <opt_loop+0x38bc>
   194c0:	tst	r2, #65536	; 0x10000
   194c4:	bne	192c4 <opt_loop+0x3670>
   194c8:	b	19480 <opt_loop+0x382c>
   194cc:	ldr	r3, [r1, #12]
   194d0:	cmp	r3, #0
   194d4:	movge	r0, #1
   194d8:	lslge	r3, r0, r3
   194dc:	blt	192dc <opt_loop+0x3688>
   194e0:	b	192d0 <opt_loop+0x367c>
   194e4:	cmp	r3, #96	; 0x60
   194e8:	bne	19294 <opt_loop+0x3640>
   194ec:	ldr	r3, [r1, #12]
   194f0:	cmp	r3, #0
   194f4:	bge	1955c <opt_loop+0x3908>
   194f8:	cmp	ip, #1
   194fc:	beq	19508 <opt_loop+0x38b4>
   19500:	mov	r3, #65536	; 0x10000
   19504:	b	192d0 <opt_loop+0x367c>
   19508:	mov	r3, #131072	; 0x20000
   1950c:	b	192d0 <opt_loop+0x367c>
   19510:	tst	r2, #131072	; 0x20000
   19514:	bne	19500 <opt_loop+0x38ac>
   19518:	mov	r3, #131072	; 0x20000
   1951c:	b	19290 <opt_loop+0x363c>
   19520:	mov	r3, #65536	; 0x10000
   19524:	b	19288 <opt_loop+0x3634>
   19528:	add	r1, r4, #20
   1952c:	bl	13e2c <atomuse.isra.8>
   19530:	cmp	r0, #0
   19534:	blt	192f8 <opt_loop+0x36a4>
   19538:	cmp	r0, #18
   1953c:	beq	19604 <opt_loop+0x39b0>
   19540:	cmp	r0, #17
   19544:	bgt	19620 <opt_loop+0x39cc>
   19548:	mov	r3, #1
   1954c:	lsl	r0, r3, r0
   19550:	tst	r2, r0
   19554:	orreq	r5, r5, r0
   19558:	b	192f8 <opt_loop+0x36a4>
   1955c:	cmp	r3, #18
   19560:	bne	19618 <opt_loop+0x39c4>
   19564:	tst	r2, #131072	; 0x20000
   19568:	orreq	r5, r5, #131072	; 0x20000
   1956c:	tst	r2, #65536	; 0x10000
   19570:	bne	19294 <opt_loop+0x3640>
   19574:	orr	r5, r5, #65536	; 0x10000
   19578:	cmp	ip, #7
   1957c:	addls	pc, pc, ip, lsl #2
   19580:	b	192dc <opt_loop+0x3688>
   19584:	b	195a4 <opt_loop+0x3950>
   19588:	b	19508 <opt_loop+0x38b4>
   1958c:	b	194cc <opt_loop+0x3878>
   19590:	b	194cc <opt_loop+0x3878>
   19594:	b	195a4 <opt_loop+0x3950>
   19598:	b	192dc <opt_loop+0x3688>
   1959c:	b	192dc <opt_loop+0x3688>
   195a0:	b	192c0 <opt_loop+0x366c>
   195a4:	mov	r3, #65536	; 0x10000
   195a8:	b	192d8 <opt_loop+0x3684>
   195ac:	mov	r0, r9
   195b0:	ldr	r5, [r2], #4
   195b4:	sub	r0, r0, #1
   195b8:	cmn	r0, #1
   195bc:	ldr	r6, [r1], #4
   195c0:	orr	r5, r5, r6
   195c4:	str	r5, [r2, #-4]
   195c8:	bne	195b0 <opt_loop+0x395c>
   195cc:	b	190f0 <opt_loop+0x349c>
   195d0:	mov	r0, r9
   195d4:	ldr	lr, [r2], #4
   195d8:	sub	r0, r0, #1
   195dc:	cmn	r0, #1
   195e0:	ldr	r5, [r1], #4
   195e4:	and	lr, lr, r5
   195e8:	str	lr, [r2, #-4]
   195ec:	bne	195d4 <opt_loop+0x3980>
   195f0:	b	18f28 <opt_loop+0x32d4>
   195f4:	mov	r6, r1
   195f8:	mov	r5, r1
   195fc:	mov	r2, r1
   19600:	b	192e8 <opt_loop+0x3694>
   19604:	tst	r2, #131072	; 0x20000
   19608:	orreq	r5, r5, #131072	; 0x20000
   1960c:	tst	r2, #65536	; 0x10000
   19610:	orreq	r5, r5, #65536	; 0x10000
   19614:	b	192f8 <opt_loop+0x36a4>
   19618:	cmp	r3, #17
   1961c:	ble	19624 <opt_loop+0x39d0>
   19620:	bl	ebc <abort@plt>
   19624:	mov	lr, #1
   19628:	lsl	r3, lr, r3
   1962c:	b	19494 <opt_loop+0x3840>
   19630:	.word	0x00025398
   19634:	.word	0x000252e8

00019638 <sf_bpf_optimize>:
   19638:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1963c:	strd	r6, [sp, #8]
   19640:	strd	r8, [sp, #16]
   19644:	ldr	r9, [pc, #2020]	; 19e30 <sf_bpf_optimize+0x7f8>
   19648:	strd	sl, [sp, #24]
   1964c:	str	lr, [sp, #32]
   19650:	sub	sp, sp, #60	; 0x3c
   19654:	ldr	r6, [r0]
   19658:	str	r0, [sp, #8]
   1965c:	add	r9, pc, r9
   19660:	ldr	r7, [pc, #1996]	; 19e34 <sf_bpf_optimize+0x7fc>
   19664:	ldr	sl, [r9]
   19668:	cmp	r6, #0
   1966c:	add	r7, pc, r7
   19670:	add	r5, sl, #1
   19674:	str	r5, [r9]
   19678:	beq	19da0 <sf_bpf_optimize+0x768>
   1967c:	ldr	r3, [r6, #24]
   19680:	cmp	r5, r3
   19684:	beq	19dfc <sf_bpf_optimize+0x7c4>
   19688:	mov	r1, r6
   1968c:	mov	r9, #0
   19690:	str	r5, [r1, #24]
   19694:	ldr	r0, [r1, #60]	; 0x3c
   19698:	bl	13884 <count_blocks>
   1969c:	ldr	r1, [r1, #84]	; 0x54
   196a0:	add	r0, r0, #1
   196a4:	add	r9, r9, r0
   196a8:	cmp	r1, #0
   196ac:	beq	196bc <sf_bpf_optimize+0x84>
   196b0:	ldr	r3, [r1, #24]
   196b4:	cmp	r5, r3
   196b8:	bne	19690 <sf_bpf_optimize+0x58>
   196bc:	mov	r0, r9
   196c0:	mov	r1, #4
   196c4:	bl	ce8 <calloc@plt>
   196c8:	ldr	r3, [pc, #1896]	; 19e38 <sf_bpf_optimize+0x800>
   196cc:	cmp	r0, #0
   196d0:	ldr	fp, [r7, r3]
   196d4:	str	r0, [fp]
   196d8:	beq	19e24 <sf_bpf_optimize+0x7ec>
   196dc:	ldr	r3, [pc, #1880]	; 19e3c <sf_bpf_optimize+0x804>
   196e0:	add	sl, sl, #2
   196e4:	mov	r4, #0
   196e8:	ldr	r2, [r6, #24]
   196ec:	add	r3, pc, r3
   196f0:	cmp	r2, sl
   196f4:	str	sl, [r3]
   196f8:	str	r4, [r3, #864]	; 0x360
   196fc:	beq	19e08 <sf_bpf_optimize+0x7d0>
   19700:	mov	r8, r3
   19704:	mov	r5, r6
   19708:	str	r4, [r5]
   1970c:	add	r2, r4, #1
   19710:	ldr	r3, [fp]
   19714:	str	sl, [r5, #24]
   19718:	str	r2, [r8, #864]	; 0x360
   1971c:	str	r5, [r3, r4, lsl #2]
   19720:	ldr	r0, [r5, #60]	; 0x3c
   19724:	bl	13900 <number_blks_r>
   19728:	ldr	r5, [r5, #84]	; 0x54
   1972c:	cmp	r5, #0
   19730:	beq	19d98 <sf_bpf_optimize+0x760>
   19734:	ldr	r3, [r5, #24]
   19738:	ldr	r4, [r8, #864]	; 0x360
   1973c:	cmp	r3, sl
   19740:	bne	19708 <sf_bpf_optimize+0xd0>
   19744:	lsl	r8, r4, #1
   19748:	mov	r5, r8
   1974c:	ldr	sl, [pc, #1772]	; 19e40 <sf_bpf_optimize+0x808>
   19750:	mov	r1, #4
   19754:	mov	r0, r5
   19758:	add	sl, pc, sl
   1975c:	str	r8, [sl, #900]	; 0x384
   19760:	bl	ce8 <calloc@plt>
   19764:	ldr	r3, [pc, #1752]	; 19e44 <sf_bpf_optimize+0x80c>
   19768:	cmp	r0, #0
   1976c:	str	r0, [sp, #4]
   19770:	ldr	r3, [r7, r3]
   19774:	str	r0, [r3]
   19778:	str	r3, [sp, #16]
   1977c:	beq	19e24 <sf_bpf_optimize+0x7ec>
   19780:	mov	r1, #4
   19784:	mov	r0, r4
   19788:	bl	ce8 <calloc@plt>
   1978c:	ldr	r3, [pc, #1716]	; 19e48 <sf_bpf_optimize+0x810>
   19790:	cmp	r0, #0
   19794:	ldr	r3, [r7, r3]
   19798:	str	r0, [r3]
   1979c:	str	r3, [sp, #40]	; 0x28
   197a0:	beq	19e24 <sf_bpf_optimize+0x7ec>
   197a4:	lsr	r5, r5, #5
   197a8:	lsr	r3, r4, #5
   197ac:	add	r5, r5, #1
   197b0:	add	r3, r3, #1
   197b4:	mul	r8, r8, r5
   197b8:	str	r5, [sl, #4]
   197bc:	mul	r0, r4, r3
   197c0:	str	r3, [sp, #12]
   197c4:	str	r3, [sl, #892]	; 0x37c
   197c8:	add	r0, r8, r0, lsl #1
   197cc:	lsl	r0, r0, #2
   197d0:	bl	dc0 <malloc@plt>
   197d4:	ldr	r2, [pc, #1648]	; 19e4c <sf_bpf_optimize+0x814>
   197d8:	cmp	r0, #0
   197dc:	ldr	r3, [r7, r2]
   197e0:	str	r0, [r3]
   197e4:	str	r3, [sp, #52]	; 0x34
   197e8:	beq	19e24 <sf_bpf_optimize+0x7ec>
   197ec:	cmp	r9, #0
   197f0:	str	r0, [sl, #888]	; 0x378
   197f4:	ble	19de0 <sf_bpf_optimize+0x7a8>
   197f8:	ldr	r3, [sp, #12]
   197fc:	lsl	ip, r9, #2
   19800:	mov	r8, r0
   19804:	ldr	r2, [fp]
   19808:	str	ip, [sp, #20]
   1980c:	lsl	r3, r3, #2
   19810:	add	lr, ip, r2
   19814:	mov	r1, r2
   19818:	mov	ip, r2
   1981c:	ldr	sl, [ip], #4
   19820:	cmp	lr, ip
   19824:	str	r8, [sl, #104]	; 0x68
   19828:	add	r8, r8, r3
   1982c:	bne	1981c <sf_bpf_optimize+0x1e4>
   19830:	ldr	ip, [pc, #1560]	; 19e50 <sf_bpf_optimize+0x818>
   19834:	mul	r8, r9, r3
   19838:	add	r0, r0, r8
   1983c:	mov	sl, r0
   19840:	add	ip, pc, ip
   19844:	str	r0, [ip, #884]	; 0x374
   19848:	ldr	ip, [r1], #4
   1984c:	cmp	lr, r1
   19850:	str	sl, [ip, #108]	; 0x6c
   19854:	add	sl, sl, r3
   19858:	bne	19848 <sf_bpf_optimize+0x210>
   1985c:	ldr	r3, [pc, #1520]	; 19e54 <sf_bpf_optimize+0x81c>
   19860:	add	r0, r0, r8
   19864:	lsl	lr, r5, #2
   19868:	mov	ip, r4
   1986c:	lsl	r5, r5, #3
   19870:	mov	r1, #0
   19874:	str	r4, [sp, #12]
   19878:	ldr	r4, [sp, #4]
   1987c:	add	r3, pc, r3
   19880:	ldr	sl, [sp, #16]
   19884:	str	r0, [r3, #896]	; 0x380
   19888:	mov	r3, r2
   1988c:	b	198a0 <sf_bpf_optimize+0x268>
   19890:	ldr	r2, [sl]
   19894:	ldr	r3, [fp]
   19898:	mov	r4, r2
   1989c:	str	r2, [sp, #4]
   198a0:	ldr	r3, [r3, r1, lsl #2]
   198a4:	add	r2, lr, r0
   198a8:	mov	r8, r3
   198ac:	str	r0, [r3, #56]	; 0x38
   198b0:	add	r0, r5, r0
   198b4:	str	r2, [r3, #80]	; 0x50
   198b8:	mov	r2, r3
   198bc:	str	r1, [r8, #48]!	; 0x30
   198c0:	str	r8, [r4, r1, lsl #2]
   198c4:	add	r1, r1, #1
   198c8:	ldr	r8, [sl]
   198cc:	cmp	r1, r9
   198d0:	str	ip, [r2, #72]!	; 0x48
   198d4:	str	r2, [r8, ip, lsl #2]
   198d8:	add	ip, ip, #1
   198dc:	str	r3, [r3, #64]	; 0x40
   198e0:	str	r3, [r3, #88]	; 0x58
   198e4:	bne	19890 <sf_bpf_optimize+0x258>
   198e8:	ldr	r0, [fp]
   198ec:	mov	r3, #0
   198f0:	ldr	r4, [sp, #12]
   198f4:	ldr	r2, [sp, #20]
   198f8:	add	r5, r2, r0
   198fc:	ldr	r2, [r0], #4
   19900:	ldr	r2, [r2, #4]
   19904:	cmp	r2, #0
   19908:	beq	19d24 <sf_bpf_optimize+0x6ec>
   1990c:	mov	ip, #0
   19910:	ldr	lr, [r2]
   19914:	add	r1, ip, #1
   19918:	cmn	lr, #1
   1991c:	beq	1992c <sf_bpf_optimize+0x2f4>
   19920:	add	lr, ip, #2
   19924:	mov	ip, r1
   19928:	mov	r1, lr
   1992c:	ldr	r2, [r2, #16]
   19930:	cmp	r2, #0
   19934:	bne	19910 <sf_bpf_optimize+0x2d8>
   19938:	cmp	r5, r0
   1993c:	add	r3, r3, r1
   19940:	bne	198fc <sf_bpf_optimize+0x2c4>
   19944:	add	r3, r3, r3, lsl #1
   19948:	mov	r9, r3
   1994c:	ldr	r5, [pc, #1284]	; 19e58 <sf_bpf_optimize+0x820>
   19950:	mov	r1, #8
   19954:	mov	r0, r9
   19958:	add	r5, pc, r5
   1995c:	str	r3, [r5, #880]	; 0x370
   19960:	bl	ce8 <calloc@plt>
   19964:	ldr	r3, [pc, #1264]	; 19e5c <sf_bpf_optimize+0x824>
   19968:	mov	r8, r0
   1996c:	mov	r1, #20
   19970:	mov	r0, r9
   19974:	ldr	r3, [r7, r3]
   19978:	str	r8, [r3]
   1997c:	clz	r8, r8
   19980:	str	r3, [sp, #44]	; 0x2c
   19984:	lsr	r8, r8, #5
   19988:	bl	ce8 <calloc@plt>
   1998c:	ldr	r3, [pc, #1228]	; 19e60 <sf_bpf_optimize+0x828>
   19990:	cmp	r0, #0
   19994:	moveq	r8, #1
   19998:	cmp	r8, #0
   1999c:	ldr	r3, [r7, r3]
   199a0:	str	r0, [r3]
   199a4:	str	r3, [sp, #48]	; 0x30
   199a8:	bne	19e24 <sf_bpf_optimize+0x7ec>
   199ac:	lsl	r3, r4, #2
   199b0:	mov	r1, r8
   199b4:	mov	r0, r6
   199b8:	str	r3, [sp, #12]
   199bc:	bl	15c54 <opt_loop>
   199c0:	mov	r1, #1
   199c4:	mov	r0, r6
   199c8:	bl	15c54 <opt_loop>
   199cc:	sub	r3, r4, #1
   199d0:	ldr	r1, [r5]
   199d4:	str	r3, [sp, #20]
   199d8:	lsl	r3, r3, #2
   199dc:	add	r1, r1, #1
   199e0:	str	r3, [sp, #24]
   199e4:	sub	r3, r4, #2
   199e8:	str	r5, [sp, #32]
   199ec:	str	r3, [sp, #28]
   199f0:	str	r8, [sp, #36]	; 0x24
   199f4:	cmp	r4, #0
   199f8:	ble	19a1c <sf_bpf_optimize+0x3e4>
   199fc:	ldr	r3, [fp]
   19a00:	ldr	r2, [sp, #12]
   19a04:	add	r2, r2, r3
   19a08:	ldr	r0, [r3], #4
   19a0c:	ldr	ip, [sp, #36]	; 0x24
   19a10:	cmp	r2, r3
   19a14:	str	ip, [r0, #100]	; 0x64
   19a18:	bne	19a08 <sf_bpf_optimize+0x3d0>
   19a1c:	ldr	r3, [r6, #24]
   19a20:	ldr	r2, [sp, #32]
   19a24:	cmp	r1, r3
   19a28:	str	r1, [r2]
   19a2c:	beq	19a74 <sf_bpf_optimize+0x43c>
   19a30:	ldr	r3, [r6, #8]
   19a34:	str	r1, [r6, #24]
   19a38:	and	r3, r3, #7
   19a3c:	cmp	r3, #6
   19a40:	movne	r5, r6
   19a44:	beq	19a74 <sf_bpf_optimize+0x43c>
   19a48:	ldr	r0, [r5, #60]	; 0x3c
   19a4c:	bl	1381c <make_marks>
   19a50:	ldr	r5, [r5, #84]	; 0x54
   19a54:	ldr	r3, [r5, #24]
   19a58:	cmp	r1, r3
   19a5c:	beq	19a74 <sf_bpf_optimize+0x43c>
   19a60:	ldr	r3, [r5, #8]
   19a64:	str	r1, [r5, #24]
   19a68:	and	r3, r3, #7
   19a6c:	cmp	r3, #6
   19a70:	bne	19a48 <sf_bpf_optimize+0x410>
   19a74:	ldr	r3, [sp, #28]
   19a78:	ldr	sl, [fp]
   19a7c:	cmp	r3, #0
   19a80:	blt	19bc0 <sf_bpf_optimize+0x588>
   19a84:	ldr	lr, [sp, #20]
   19a88:	ldr	r3, [sp, #24]
   19a8c:	add	r5, sl, r3
   19a90:	b	19aa0 <sf_bpf_optimize+0x468>
   19a94:	subs	lr, lr, #1
   19a98:	sub	r5, r5, #4
   19a9c:	beq	19bc0 <sf_bpf_optimize+0x588>
   19aa0:	ldr	ip, [r5, #-4]
   19aa4:	mov	r8, lr
   19aa8:	ldr	r3, [ip, #24]
   19aac:	cmp	r1, r3
   19ab0:	bne	19a94 <sf_bpf_optimize+0x45c>
   19ab4:	cmp	r4, lr
   19ab8:	ble	19a94 <sf_bpf_optimize+0x45c>
   19abc:	mov	r9, r5
   19ac0:	b	19ad0 <sf_bpf_optimize+0x498>
   19ac4:	add	r8, r8, #1
   19ac8:	cmp	r8, r4
   19acc:	beq	19a94 <sf_bpf_optimize+0x45c>
   19ad0:	ldr	r0, [r9], #4
   19ad4:	ldr	r3, [r0, #24]
   19ad8:	cmp	r1, r3
   19adc:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19ae0:	ldr	r3, [r0, #8]
   19ae4:	ldr	r2, [ip, #8]
   19ae8:	cmp	r2, r3
   19aec:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19af0:	ldr	r3, [r0, #20]
   19af4:	ldr	r2, [ip, #20]
   19af8:	cmp	r2, r3
   19afc:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19b00:	ldr	r3, [r0, #60]	; 0x3c
   19b04:	ldr	r2, [ip, #60]	; 0x3c
   19b08:	cmp	r2, r3
   19b0c:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19b10:	ldr	r3, [r0, #84]	; 0x54
   19b14:	ldr	r2, [ip, #84]	; 0x54
   19b18:	cmp	r2, r3
   19b1c:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19b20:	ldr	r3, [ip, #4]
   19b24:	str	r0, [sp, #4]
   19b28:	ldr	r2, [r0, #4]
   19b2c:	cmp	r3, #0
   19b30:	beq	19d70 <sf_bpf_optimize+0x738>
   19b34:	ldr	r0, [r3]
   19b38:	cmn	r0, #1
   19b3c:	bne	19d8c <sf_bpf_optimize+0x754>
   19b40:	ldr	r7, [sp, #4]
   19b44:	b	19b54 <sf_bpf_optimize+0x51c>
   19b48:	ldr	r0, [r3]
   19b4c:	cmn	r0, #1
   19b50:	bne	19d88 <sf_bpf_optimize+0x750>
   19b54:	ldr	r3, [r3, #16]
   19b58:	cmp	r3, #0
   19b5c:	bne	19b48 <sf_bpf_optimize+0x510>
   19b60:	cmp	r2, #0
   19b64:	str	r7, [sp, #4]
   19b68:	beq	19e14 <sf_bpf_optimize+0x7dc>
   19b6c:	ldr	r0, [r2]
   19b70:	cmn	r0, #1
   19b74:	bne	19d3c <sf_bpf_optimize+0x704>
   19b78:	ldr	r7, [sp, #4]
   19b7c:	b	19b8c <sf_bpf_optimize+0x554>
   19b80:	ldr	r0, [r2]
   19b84:	cmn	r0, #1
   19b88:	bne	19d38 <sf_bpf_optimize+0x700>
   19b8c:	ldr	r2, [r2, #16]
   19b90:	cmp	r2, #0
   19b94:	bne	19b80 <sf_bpf_optimize+0x548>
   19b98:	cmp	r3, #0
   19b9c:	mov	r0, r7
   19ba0:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19ba4:	ldr	r3, [r0, #100]	; 0x64
   19ba8:	sub	r5, r5, #4
   19bac:	cmp	r3, #0
   19bb0:	moveq	r3, r0
   19bb4:	subs	lr, lr, #1
   19bb8:	str	r3, [ip, #100]	; 0x64
   19bbc:	bne	19aa0 <sf_bpf_optimize+0x468>
   19bc0:	cmp	r4, #0
   19bc4:	ble	19c20 <sf_bpf_optimize+0x5e8>
   19bc8:	ldr	r2, [sp, #12]
   19bcc:	mov	r3, sl
   19bd0:	mov	r0, #1
   19bd4:	add	lr, sl, r2
   19bd8:	ldr	r2, [r3], #4
   19bdc:	ldr	ip, [r2, #60]	; 0x3c
   19be0:	cmp	ip, #0
   19be4:	beq	19c0c <sf_bpf_optimize+0x5d4>
   19be8:	ldr	ip, [ip, #100]	; 0x64
   19bec:	cmp	ip, #0
   19bf0:	movne	r0, #0
   19bf4:	strne	ip, [r2, #60]	; 0x3c
   19bf8:	ldr	ip, [r2, #84]	; 0x54
   19bfc:	ldr	ip, [ip, #100]	; 0x64
   19c00:	cmp	ip, #0
   19c04:	movne	r0, #0
   19c08:	strne	ip, [r2, #84]	; 0x54
   19c0c:	cmp	r3, lr
   19c10:	bne	19bd8 <sf_bpf_optimize+0x5a0>
   19c14:	cmp	r0, #0
   19c18:	add	r1, r1, #1
   19c1c:	beq	199f4 <sf_bpf_optimize+0x3bc>
   19c20:	ldr	r1, [sp, #8]
   19c24:	mov	r2, #0
   19c28:	ldr	r3, [r1]
   19c2c:	ldr	r4, [r3, #4]
   19c30:	str	r2, [r3, #4]
   19c34:	ldr	r2, [r1]
   19c38:	ldr	r3, [r2, #8]
   19c3c:	and	r3, r3, #7
   19c40:	cmp	r3, #5
   19c44:	bne	19df4 <sf_bpf_optimize+0x7bc>
   19c48:	ldr	r3, [r2, #60]	; 0x3c
   19c4c:	ldr	r1, [r2, #84]	; 0x54
   19c50:	cmp	r3, r1
   19c54:	beq	19c70 <sf_bpf_optimize+0x638>
   19c58:	b	19df4 <sf_bpf_optimize+0x7bc>
   19c5c:	ldr	r2, [r3, #60]	; 0x3c
   19c60:	ldr	r1, [r3, #84]	; 0x54
   19c64:	cmp	r2, r1
   19c68:	bne	19c88 <sf_bpf_optimize+0x650>
   19c6c:	mov	r3, r2
   19c70:	ldr	r2, [sp, #8]
   19c74:	str	r3, [r2]
   19c78:	ldr	r2, [r3, #8]
   19c7c:	and	r2, r2, #7
   19c80:	cmp	r2, #5
   19c84:	beq	19c5c <sf_bpf_optimize+0x624>
   19c88:	ldr	r1, [r3, #4]
   19c8c:	cmp	r1, #0
   19c90:	beq	19ca4 <sf_bpf_optimize+0x66c>
   19c94:	mov	r0, r4
   19c98:	bl	e9cc <sf_append>
   19c9c:	ldr	r3, [sp, #8]
   19ca0:	ldr	r3, [r3]
   19ca4:	str	r4, [r3, #4]
   19ca8:	ldr	r3, [sp, #8]
   19cac:	ldr	r2, [r3]
   19cb0:	ldr	r3, [r2, #8]
   19cb4:	and	r3, r3, #7
   19cb8:	cmp	r3, #6
   19cbc:	moveq	r3, #0
   19cc0:	streq	r3, [r2, #4]
   19cc4:	ldr	r3, [sp, #48]	; 0x30
   19cc8:	ldr	r0, [r3]
   19ccc:	bl	d48 <free@plt>
   19cd0:	ldr	r3, [sp, #44]	; 0x2c
   19cd4:	ldr	r0, [r3]
   19cd8:	bl	d48 <free@plt>
   19cdc:	ldr	r3, [sp, #16]
   19ce0:	ldr	r0, [r3]
   19ce4:	bl	d48 <free@plt>
   19ce8:	ldr	r3, [sp, #52]	; 0x34
   19cec:	ldr	r0, [r3]
   19cf0:	bl	d48 <free@plt>
   19cf4:	ldr	r3, [sp, #40]	; 0x28
   19cf8:	ldr	r0, [r3]
   19cfc:	bl	d48 <free@plt>
   19d00:	ldr	r0, [fp]
   19d04:	add	sp, sp, #60	; 0x3c
   19d08:	ldrd	r4, [sp]
   19d0c:	ldrd	r6, [sp, #8]
   19d10:	ldrd	r8, [sp, #16]
   19d14:	ldrd	sl, [sp, #24]
   19d18:	ldr	lr, [sp, #32]
   19d1c:	add	sp, sp, #36	; 0x24
   19d20:	b	d48 <free@plt>
   19d24:	mov	r1, #1
   19d28:	cmp	r5, r0
   19d2c:	add	r3, r3, r1
   19d30:	bne	198fc <sf_bpf_optimize+0x2c4>
   19d34:	b	19944 <sf_bpf_optimize+0x30c>
   19d38:	str	r7, [sp, #4]
   19d3c:	cmp	r3, #0
   19d40:	beq	19ac4 <sf_bpf_optimize+0x48c>
   19d44:	ldr	r7, [r3]
   19d48:	cmp	r7, r0
   19d4c:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19d50:	ldr	r0, [r2, #12]
   19d54:	ldr	r7, [r3, #12]
   19d58:	cmp	r7, r0
   19d5c:	bne	19ac4 <sf_bpf_optimize+0x48c>
   19d60:	ldr	r3, [r3, #16]
   19d64:	ldr	r2, [r2, #16]
   19d68:	cmp	r3, #0
   19d6c:	bne	19b34 <sf_bpf_optimize+0x4fc>
   19d70:	cmp	r2, #0
   19d74:	beq	19e1c <sf_bpf_optimize+0x7e4>
   19d78:	ldr	r0, [r2]
   19d7c:	cmn	r0, #1
   19d80:	beq	19b78 <sf_bpf_optimize+0x540>
   19d84:	b	19ac4 <sf_bpf_optimize+0x48c>
   19d88:	str	r7, [sp, #4]
   19d8c:	cmp	r2, #0
   19d90:	bne	19b6c <sf_bpf_optimize+0x534>
   19d94:	b	19ac4 <sf_bpf_optimize+0x48c>
   19d98:	ldr	r4, [r8, #864]	; 0x360
   19d9c:	b	19744 <sf_bpf_optimize+0x10c>
   19da0:	mov	r1, #4
   19da4:	mov	r0, r6
   19da8:	bl	ce8 <calloc@plt>
   19dac:	ldr	r3, [pc, #132]	; 19e38 <sf_bpf_optimize+0x800>
   19db0:	cmp	r0, #0
   19db4:	ldr	fp, [r7, r3]
   19db8:	str	r0, [fp]
   19dbc:	beq	19e24 <sf_bpf_optimize+0x7ec>
   19dc0:	add	r3, sl, #2
   19dc4:	mov	r5, r6
   19dc8:	mov	r8, r6
   19dcc:	mov	r4, r6
   19dd0:	str	r3, [r9]
   19dd4:	str	r6, [r9, #864]	; 0x360
   19dd8:	mov	r9, r6
   19ddc:	b	1974c <sf_bpf_optimize+0x114>
   19de0:	mov	r9, #0
   19de4:	str	r0, [sl, #884]	; 0x374
   19de8:	mov	r3, r9
   19dec:	str	r0, [sl, #896]	; 0x380
   19df0:	b	1994c <sf_bpf_optimize+0x314>
   19df4:	mov	r3, r2
   19df8:	b	19c88 <sf_bpf_optimize+0x650>
   19dfc:	mov	r0, #0
   19e00:	mov	r9, r0
   19e04:	b	196c0 <sf_bpf_optimize+0x88>
   19e08:	mov	r5, r4
   19e0c:	mov	r8, r4
   19e10:	b	1974c <sf_bpf_optimize+0x114>
   19e14:	mov	r0, r7
   19e18:	b	19ba4 <sf_bpf_optimize+0x56c>
   19e1c:	ldr	r0, [sp, #4]
   19e20:	b	19ba4 <sf_bpf_optimize+0x56c>
   19e24:	ldr	r0, [pc, #56]	; 19e64 <sf_bpf_optimize+0x82c>
   19e28:	add	r0, pc, r0
   19e2c:	bl	2130 <sf_bpf_error>
   19e30:	.word	0x000250d0
   19e34:	.word	0x0002498c
   19e38:	.word	0x000000cc
   19e3c:	.word	0x00025040
   19e40:	.word	0x00024fd4
   19e44:	.word	0x000000e4
   19e48:	.word	0x000000c4
   19e4c:	.word	0x000000b4
   19e50:	.word	0x00024eec
   19e54:	.word	0x00024eb0
   19e58:	.word	0x00024dd4
   19e5c:	.word	0x00000100
   19e60:	.word	0x000000f4
   19e64:	.word	0x00007c10

00019e68 <sf_icode_to_fcode>:
   19e68:	ldr	r3, [pc, #60]	; 19eac <sf_icode_to_fcode+0x44>
   19e6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19e70:	strd	r6, [sp, #8]
   19e74:	strd	r8, [sp, #16]
   19e78:	strd	sl, [sp, #24]
   19e7c:	mov	sl, r0
   19e80:	add	r3, pc, r3
   19e84:	str	lr, [sp, #32]
   19e88:	sub	sp, sp, #36	; 0x24
   19e8c:	ldr	r2, [r3]
   19e90:	cmp	sl, #0
   19e94:	stmib	sp, {r1, r3}
   19e98:	ldr	r3, [sp, #8]
   19e9c:	add	fp, r2, #1
   19ea0:	str	fp, [r3]
   19ea4:	beq	1bbcc <sf_icode_to_fcode+0x1d64>
   19ea8:	b	19eb0 <sf_icode_to_fcode+0x48>
   19eac:	.word	0x000248ac
   19eb0:	ldr	r3, [sl, #24]
   19eb4:	cmp	fp, r3
   19eb8:	beq	1bbd8 <sf_icode_to_fcode+0x1d70>
   19ebc:	ldr	r5, [sl, #60]	; 0x3c
   19ec0:	str	fp, [sl, #24]
   19ec4:	cmp	r5, #0
   19ec8:	beq	1acbc <sf_icode_to_fcode+0xe54>
   19ecc:	ldr	r3, [r5, #24]
   19ed0:	cmp	fp, r3
   19ed4:	moveq	r5, #0
   19ed8:	beq	1acbc <sf_icode_to_fcode+0xe54>
   19edc:	ldr	r4, [r5, #60]	; 0x3c
   19ee0:	str	fp, [r5, #24]
   19ee4:	cmp	r4, #0
   19ee8:	beq	1a598 <sf_icode_to_fcode+0x730>
   19eec:	ldr	r3, [r4, #24]
   19ef0:	cmp	fp, r3
   19ef4:	moveq	r4, #0
   19ef8:	beq	1a598 <sf_icode_to_fcode+0x730>
   19efc:	ldr	r6, [r4, #60]	; 0x3c
   19f00:	str	fp, [r4, #24]
   19f04:	cmp	r6, #0
   19f08:	beq	1a220 <sf_icode_to_fcode+0x3b8>
   19f0c:	ldr	r3, [r6, #24]
   19f10:	cmp	fp, r3
   19f14:	moveq	r6, #0
   19f18:	beq	1a220 <sf_icode_to_fcode+0x3b8>
   19f1c:	ldr	r7, [r6, #60]	; 0x3c
   19f20:	str	fp, [r6, #24]
   19f24:	cmp	r7, #0
   19f28:	beq	1a078 <sf_icode_to_fcode+0x210>
   19f2c:	ldr	r3, [r7, #24]
   19f30:	cmp	fp, r3
   19f34:	moveq	r7, #0
   19f38:	beq	1a078 <sf_icode_to_fcode+0x210>
   19f3c:	ldr	r8, [r7, #60]	; 0x3c
   19f40:	str	fp, [r7, #24]
   19f44:	cmp	r8, #0
   19f48:	beq	19fb8 <sf_icode_to_fcode+0x150>
   19f4c:	ldr	r3, [r8, #24]
   19f50:	cmp	fp, r3
   19f54:	moveq	r8, #0
   19f58:	beq	19fb8 <sf_icode_to_fcode+0x150>
   19f5c:	str	fp, [r8, #24]
   19f60:	ldr	r0, [r8, #60]	; 0x3c
   19f64:	bl	1399c <count_stmts>
   19f68:	mov	r9, r0
   19f6c:	ldr	r0, [r8, #84]	; 0x54
   19f70:	bl	1399c <count_stmts>
   19f74:	ldr	r3, [r8, #4]
   19f78:	add	r0, r9, r0
   19f7c:	cmp	r3, #0
   19f80:	beq	19fa4 <sf_icode_to_fcode+0x13c>
   19f84:	mov	r1, #0
   19f88:	ldr	r2, [r3]
   19f8c:	ldr	r3, [r3, #16]
   19f90:	cmn	r2, #1
   19f94:	addne	r1, r1, #1
   19f98:	cmp	r3, #0
   19f9c:	bne	19f88 <sf_icode_to_fcode+0x120>
   19fa0:	add	r0, r0, r1
   19fa4:	ldr	r3, [r8, #28]
   19fa8:	add	r0, r0, #1
   19fac:	ldr	r8, [r8, #32]
   19fb0:	add	r0, r0, r3
   19fb4:	add	r8, r0, r8
   19fb8:	ldr	r9, [r7, #84]	; 0x54
   19fbc:	cmp	r9, #0
   19fc0:	beq	1a038 <sf_icode_to_fcode+0x1d0>
   19fc4:	ldr	r2, [r9, #24]
   19fc8:	cmp	fp, r2
   19fcc:	beq	1a038 <sf_icode_to_fcode+0x1d0>
   19fd0:	str	fp, [r9, #24]
   19fd4:	ldr	r0, [r9, #60]	; 0x3c
   19fd8:	bl	1399c <count_stmts>
   19fdc:	mov	r3, r0
   19fe0:	ldr	r0, [r9, #84]	; 0x54
   19fe4:	str	r3, [sp, #12]
   19fe8:	bl	1399c <count_stmts>
   19fec:	ldr	r2, [r9, #4]
   19ff0:	ldr	r3, [sp, #12]
   19ff4:	cmp	r2, #0
   19ff8:	add	r0, r3, r0
   19ffc:	beq	1a020 <sf_icode_to_fcode+0x1b8>
   1a000:	mov	ip, #0
   1a004:	ldr	r3, [r2]
   1a008:	ldr	r2, [r2, #16]
   1a00c:	cmn	r3, #1
   1a010:	addne	ip, ip, #1
   1a014:	cmp	r2, #0
   1a018:	bne	1a004 <sf_icode_to_fcode+0x19c>
   1a01c:	add	r0, r0, ip
   1a020:	ldr	r1, [r9, #28]
   1a024:	add	r0, r0, #1
   1a028:	ldr	r2, [r9, #32]
   1a02c:	add	r3, r0, r1
   1a030:	add	r3, r3, r2
   1a034:	add	r8, r8, r3
   1a038:	ldr	r3, [r7, #4]
   1a03c:	cmp	r3, #0
   1a040:	beq	1a064 <sf_icode_to_fcode+0x1fc>
   1a044:	mov	r1, #0
   1a048:	ldr	r2, [r3]
   1a04c:	ldr	r3, [r3, #16]
   1a050:	cmn	r2, #1
   1a054:	addne	r1, r1, #1
   1a058:	cmp	r3, #0
   1a05c:	bne	1a048 <sf_icode_to_fcode+0x1e0>
   1a060:	add	r8, r8, r1
   1a064:	ldr	r3, [r7, #28]
   1a068:	add	r8, r8, #1
   1a06c:	ldr	r7, [r7, #32]
   1a070:	add	r8, r8, r3
   1a074:	add	r7, r8, r7
   1a078:	ldr	r9, [r6, #84]	; 0x54
   1a07c:	cmp	r9, #0
   1a080:	beq	1a1e0 <sf_icode_to_fcode+0x378>
   1a084:	ldr	r3, [r9, #24]
   1a088:	cmp	fp, r3
   1a08c:	beq	1a1e0 <sf_icode_to_fcode+0x378>
   1a090:	ldr	r8, [r9, #60]	; 0x3c
   1a094:	str	fp, [r9, #24]
   1a098:	cmp	r8, #0
   1a09c:	beq	1a114 <sf_icode_to_fcode+0x2ac>
   1a0a0:	ldr	r3, [r8, #24]
   1a0a4:	cmp	fp, r3
   1a0a8:	moveq	r8, #0
   1a0ac:	beq	1a114 <sf_icode_to_fcode+0x2ac>
   1a0b0:	str	fp, [r8, #24]
   1a0b4:	ldr	r0, [r8, #60]	; 0x3c
   1a0b8:	bl	1399c <count_stmts>
   1a0bc:	mov	r3, r0
   1a0c0:	ldr	r0, [r8, #84]	; 0x54
   1a0c4:	str	r3, [sp, #12]
   1a0c8:	bl	1399c <count_stmts>
   1a0cc:	ldr	r2, [r8, #4]
   1a0d0:	ldr	r3, [sp, #12]
   1a0d4:	cmp	r2, #0
   1a0d8:	add	r3, r3, r0
   1a0dc:	beq	1a100 <sf_icode_to_fcode+0x298>
   1a0e0:	mov	ip, #0
   1a0e4:	ldr	r1, [r2]
   1a0e8:	ldr	r2, [r2, #16]
   1a0ec:	cmn	r1, #1
   1a0f0:	addne	ip, ip, #1
   1a0f4:	cmp	r2, #0
   1a0f8:	bne	1a0e4 <sf_icode_to_fcode+0x27c>
   1a0fc:	add	r3, r3, ip
   1a100:	ldr	r2, [r8, #28]
   1a104:	add	r3, r3, #1
   1a108:	ldr	r8, [r8, #32]
   1a10c:	add	r3, r3, r2
   1a110:	add	r8, r3, r8
   1a114:	ldr	r2, [r9, #84]	; 0x54
   1a118:	cmp	r2, #0
   1a11c:	beq	1a19c <sf_icode_to_fcode+0x334>
   1a120:	ldr	r3, [r2, #24]
   1a124:	cmp	fp, r3
   1a128:	beq	1a19c <sf_icode_to_fcode+0x334>
   1a12c:	str	fp, [r2, #24]
   1a130:	ldr	r0, [r2, #60]	; 0x3c
   1a134:	str	r2, [sp, #12]
   1a138:	bl	1399c <count_stmts>
   1a13c:	ldr	r2, [sp, #12]
   1a140:	mov	r3, r0
   1a144:	str	r3, [sp, #16]
   1a148:	ldr	r0, [r2, #84]	; 0x54
   1a14c:	bl	1399c <count_stmts>
   1a150:	ldrd	r2, [sp, #12]
   1a154:	ldr	r1, [r2, #4]
   1a158:	add	r3, r3, r0
   1a15c:	cmp	r1, #0
   1a160:	beq	1a184 <sf_icode_to_fcode+0x31c>
   1a164:	mov	lr, #0
   1a168:	ldr	r0, [r1]
   1a16c:	ldr	r1, [r1, #16]
   1a170:	cmn	r0, #1
   1a174:	addne	lr, lr, #1
   1a178:	cmp	r1, #0
   1a17c:	bne	1a168 <sf_icode_to_fcode+0x300>
   1a180:	add	r3, r3, lr
   1a184:	ldr	r1, [r2, #28]
   1a188:	add	r3, r3, #1
   1a18c:	ldr	r2, [r2, #32]
   1a190:	add	r3, r3, r1
   1a194:	add	r3, r3, r2
   1a198:	add	r8, r8, r3
   1a19c:	ldr	r3, [r9, #4]
   1a1a0:	cmp	r3, #0
   1a1a4:	beq	1a1c8 <sf_icode_to_fcode+0x360>
   1a1a8:	mov	r1, #0
   1a1ac:	ldr	r2, [r3]
   1a1b0:	ldr	r3, [r3, #16]
   1a1b4:	cmn	r2, #1
   1a1b8:	addne	r1, r1, #1
   1a1bc:	cmp	r3, #0
   1a1c0:	bne	1a1ac <sf_icode_to_fcode+0x344>
   1a1c4:	add	r8, r8, r1
   1a1c8:	ldr	r1, [r9, #28]
   1a1cc:	add	r3, r8, #1
   1a1d0:	ldr	r2, [r9, #32]
   1a1d4:	add	r3, r3, r1
   1a1d8:	add	r3, r3, r2
   1a1dc:	add	r7, r7, r3
   1a1e0:	ldr	r3, [r6, #4]
   1a1e4:	cmp	r3, #0
   1a1e8:	beq	1a20c <sf_icode_to_fcode+0x3a4>
   1a1ec:	mov	r1, #0
   1a1f0:	ldr	r2, [r3]
   1a1f4:	ldr	r3, [r3, #16]
   1a1f8:	cmn	r2, #1
   1a1fc:	addne	r1, r1, #1
   1a200:	cmp	r3, #0
   1a204:	bne	1a1f0 <sf_icode_to_fcode+0x388>
   1a208:	add	r7, r7, r1
   1a20c:	ldr	r3, [r6, #28]
   1a210:	add	r7, r7, #1
   1a214:	ldr	r6, [r6, #32]
   1a218:	add	r7, r7, r3
   1a21c:	add	r6, r7, r6
   1a220:	ldr	r8, [r4, #84]	; 0x54
   1a224:	cmp	r8, #0
   1a228:	beq	1a558 <sf_icode_to_fcode+0x6f0>
   1a22c:	ldr	r3, [r8, #24]
   1a230:	cmp	fp, r3
   1a234:	beq	1a558 <sf_icode_to_fcode+0x6f0>
   1a238:	ldr	r7, [r8, #60]	; 0x3c
   1a23c:	str	fp, [r8, #24]
   1a240:	cmp	r7, #0
   1a244:	beq	1a3a4 <sf_icode_to_fcode+0x53c>
   1a248:	ldr	r3, [r7, #24]
   1a24c:	cmp	fp, r3
   1a250:	moveq	r7, #0
   1a254:	beq	1a3a4 <sf_icode_to_fcode+0x53c>
   1a258:	ldr	r9, [r7, #60]	; 0x3c
   1a25c:	str	fp, [r7, #24]
   1a260:	cmp	r9, #0
   1a264:	beq	1a2dc <sf_icode_to_fcode+0x474>
   1a268:	ldr	r3, [r9, #24]
   1a26c:	cmp	fp, r3
   1a270:	moveq	r9, #0
   1a274:	beq	1a2dc <sf_icode_to_fcode+0x474>
   1a278:	str	fp, [r9, #24]
   1a27c:	ldr	r0, [r9, #60]	; 0x3c
   1a280:	bl	1399c <count_stmts>
   1a284:	mov	r3, r0
   1a288:	ldr	r0, [r9, #84]	; 0x54
   1a28c:	str	r3, [sp, #12]
   1a290:	bl	1399c <count_stmts>
   1a294:	ldr	r2, [r9, #4]
   1a298:	ldr	r3, [sp, #12]
   1a29c:	cmp	r2, #0
   1a2a0:	add	r3, r3, r0
   1a2a4:	beq	1a2c8 <sf_icode_to_fcode+0x460>
   1a2a8:	mov	ip, #0
   1a2ac:	ldr	r1, [r2]
   1a2b0:	ldr	r2, [r2, #16]
   1a2b4:	cmn	r1, #1
   1a2b8:	addne	ip, ip, #1
   1a2bc:	cmp	r2, #0
   1a2c0:	bne	1a2ac <sf_icode_to_fcode+0x444>
   1a2c4:	add	r3, r3, ip
   1a2c8:	ldr	r2, [r9, #28]
   1a2cc:	add	r3, r3, #1
   1a2d0:	ldr	r9, [r9, #32]
   1a2d4:	add	r3, r3, r2
   1a2d8:	add	r9, r3, r9
   1a2dc:	ldr	r2, [r7, #84]	; 0x54
   1a2e0:	cmp	r2, #0
   1a2e4:	beq	1a364 <sf_icode_to_fcode+0x4fc>
   1a2e8:	ldr	r3, [r2, #24]
   1a2ec:	cmp	fp, r3
   1a2f0:	beq	1a364 <sf_icode_to_fcode+0x4fc>
   1a2f4:	str	fp, [r2, #24]
   1a2f8:	ldr	r0, [r2, #60]	; 0x3c
   1a2fc:	str	r2, [sp, #12]
   1a300:	bl	1399c <count_stmts>
   1a304:	ldr	r2, [sp, #12]
   1a308:	mov	r3, r0
   1a30c:	str	r3, [sp, #16]
   1a310:	ldr	r0, [r2, #84]	; 0x54
   1a314:	bl	1399c <count_stmts>
   1a318:	ldrd	r2, [sp, #12]
   1a31c:	ldr	r1, [r2, #4]
   1a320:	add	r3, r3, r0
   1a324:	cmp	r1, #0
   1a328:	beq	1a34c <sf_icode_to_fcode+0x4e4>
   1a32c:	mov	lr, #0
   1a330:	ldr	r0, [r1]
   1a334:	ldr	r1, [r1, #16]
   1a338:	cmn	r0, #1
   1a33c:	addne	lr, lr, #1
   1a340:	cmp	r1, #0
   1a344:	bne	1a330 <sf_icode_to_fcode+0x4c8>
   1a348:	add	r3, r3, lr
   1a34c:	ldr	r1, [r2, #28]
   1a350:	add	r3, r3, #1
   1a354:	ldr	r2, [r2, #32]
   1a358:	add	r3, r3, r1
   1a35c:	add	r3, r3, r2
   1a360:	add	r9, r9, r3
   1a364:	ldr	r3, [r7, #4]
   1a368:	cmp	r3, #0
   1a36c:	beq	1a390 <sf_icode_to_fcode+0x528>
   1a370:	mov	r1, #0
   1a374:	ldr	r2, [r3]
   1a378:	ldr	r3, [r3, #16]
   1a37c:	cmn	r2, #1
   1a380:	addne	r1, r1, #1
   1a384:	cmp	r3, #0
   1a388:	bne	1a374 <sf_icode_to_fcode+0x50c>
   1a38c:	add	r9, r9, r1
   1a390:	ldr	r3, [r7, #28]
   1a394:	add	r9, r9, #1
   1a398:	ldr	r7, [r7, #32]
   1a39c:	add	r9, r9, r3
   1a3a0:	add	r7, r9, r7
   1a3a4:	ldr	r3, [r8, #84]	; 0x54
   1a3a8:	cmp	r3, #0
   1a3ac:	beq	1a518 <sf_icode_to_fcode+0x6b0>
   1a3b0:	ldr	r2, [r3, #24]
   1a3b4:	cmp	fp, r2
   1a3b8:	beq	1a518 <sf_icode_to_fcode+0x6b0>
   1a3bc:	ldr	r9, [r3, #60]	; 0x3c
   1a3c0:	str	fp, [r3, #24]
   1a3c4:	cmp	r9, #0
   1a3c8:	beq	1a444 <sf_icode_to_fcode+0x5dc>
   1a3cc:	ldr	r2, [r9, #24]
   1a3d0:	cmp	fp, r2
   1a3d4:	moveq	r9, #0
   1a3d8:	beq	1a444 <sf_icode_to_fcode+0x5dc>
   1a3dc:	str	fp, [r9, #24]
   1a3e0:	ldr	r0, [r9, #60]	; 0x3c
   1a3e4:	str	r3, [sp, #16]
   1a3e8:	bl	1399c <count_stmts>
   1a3ec:	mov	r2, r0
   1a3f0:	ldr	r0, [r9, #84]	; 0x54
   1a3f4:	str	r2, [sp, #12]
   1a3f8:	bl	1399c <count_stmts>
   1a3fc:	ldr	r1, [r9, #4]
   1a400:	ldrd	r2, [sp, #12]
   1a404:	cmp	r1, #0
   1a408:	add	r2, r2, r0
   1a40c:	beq	1a430 <sf_icode_to_fcode+0x5c8>
   1a410:	mov	lr, #0
   1a414:	ldr	r0, [r1]
   1a418:	ldr	r1, [r1, #16]
   1a41c:	cmn	r0, #1
   1a420:	addne	lr, lr, #1
   1a424:	cmp	r1, #0
   1a428:	bne	1a414 <sf_icode_to_fcode+0x5ac>
   1a42c:	add	r2, r2, lr
   1a430:	ldr	r1, [r9, #28]
   1a434:	add	r2, r2, #1
   1a438:	ldr	r9, [r9, #32]
   1a43c:	add	r2, r2, r1
   1a440:	add	r9, r2, r9
   1a444:	ldr	r1, [r3, #84]	; 0x54
   1a448:	cmp	r1, #0
   1a44c:	beq	1a4d4 <sf_icode_to_fcode+0x66c>
   1a450:	ldr	r2, [r1, #24]
   1a454:	cmp	fp, r2
   1a458:	beq	1a4d4 <sf_icode_to_fcode+0x66c>
   1a45c:	str	fp, [r1, #24]
   1a460:	ldr	r0, [r1, #60]	; 0x3c
   1a464:	str	r1, [sp, #12]
   1a468:	str	r3, [sp, #20]
   1a46c:	bl	1399c <count_stmts>
   1a470:	ldr	r1, [sp, #12]
   1a474:	mov	r2, r0
   1a478:	str	r2, [sp, #16]
   1a47c:	ldr	r0, [r1, #84]	; 0x54
   1a480:	bl	1399c <count_stmts>
   1a484:	add	r1, sp, #12
   1a488:	ldm	r1, {r1, r2, r3}
   1a48c:	ldr	ip, [r1, #4]
   1a490:	add	r0, r2, r0
   1a494:	cmp	ip, #0
   1a498:	beq	1a4bc <sf_icode_to_fcode+0x654>
   1a49c:	mov	r2, #0
   1a4a0:	ldr	lr, [ip]
   1a4a4:	ldr	ip, [ip, #16]
   1a4a8:	cmn	lr, #1
   1a4ac:	addne	r2, r2, #1
   1a4b0:	cmp	ip, #0
   1a4b4:	bne	1a4a0 <sf_icode_to_fcode+0x638>
   1a4b8:	add	r0, r0, r2
   1a4bc:	ldr	ip, [r1, #28]
   1a4c0:	add	r2, r0, #1
   1a4c4:	ldr	r1, [r1, #32]
   1a4c8:	add	r2, r2, ip
   1a4cc:	add	r2, r2, r1
   1a4d0:	add	r9, r9, r2
   1a4d4:	ldr	r2, [r3, #4]
   1a4d8:	cmp	r2, #0
   1a4dc:	beq	1a500 <sf_icode_to_fcode+0x698>
   1a4e0:	mov	r0, #0
   1a4e4:	ldr	r1, [r2]
   1a4e8:	ldr	r2, [r2, #16]
   1a4ec:	cmn	r1, #1
   1a4f0:	addne	r0, r0, #1
   1a4f4:	cmp	r2, #0
   1a4f8:	bne	1a4e4 <sf_icode_to_fcode+0x67c>
   1a4fc:	add	r9, r9, r0
   1a500:	ldr	r1, [r3, #28]
   1a504:	add	r9, r9, #1
   1a508:	ldr	r2, [r3, #32]
   1a50c:	add	r3, r9, r1
   1a510:	add	r3, r3, r2
   1a514:	add	r7, r7, r3
   1a518:	ldr	r3, [r8, #4]
   1a51c:	cmp	r3, #0
   1a520:	beq	1a544 <sf_icode_to_fcode+0x6dc>
   1a524:	mov	r1, #0
   1a528:	ldr	r2, [r3]
   1a52c:	ldr	r3, [r3, #16]
   1a530:	cmn	r2, #1
   1a534:	addne	r1, r1, #1
   1a538:	cmp	r3, #0
   1a53c:	bne	1a528 <sf_icode_to_fcode+0x6c0>
   1a540:	add	r7, r7, r1
   1a544:	ldrd	r2, [r8, #28]
   1a548:	add	r7, r7, #1
   1a54c:	add	r7, r7, r2
   1a550:	add	r7, r7, r3
   1a554:	add	r6, r6, r7
   1a558:	ldr	r3, [r4, #4]
   1a55c:	cmp	r3, #0
   1a560:	beq	1a584 <sf_icode_to_fcode+0x71c>
   1a564:	mov	r1, #0
   1a568:	ldr	r2, [r3]
   1a56c:	ldr	r3, [r3, #16]
   1a570:	cmn	r2, #1
   1a574:	addne	r1, r1, #1
   1a578:	cmp	r3, #0
   1a57c:	bne	1a568 <sf_icode_to_fcode+0x700>
   1a580:	add	r6, r6, r1
   1a584:	ldr	r3, [r4, #28]
   1a588:	add	r6, r6, #1
   1a58c:	ldr	r4, [r4, #32]
   1a590:	add	r6, r6, r3
   1a594:	add	r4, r6, r4
   1a598:	ldr	r7, [r5, #84]	; 0x54
   1a59c:	cmp	r7, #0
   1a5a0:	beq	1ac80 <sf_icode_to_fcode+0xe18>
   1a5a4:	ldr	r3, [r7, #24]
   1a5a8:	cmp	fp, r3
   1a5ac:	beq	1ac80 <sf_icode_to_fcode+0xe18>
   1a5b0:	ldr	r6, [r7, #60]	; 0x3c
   1a5b4:	str	fp, [r7, #24]
   1a5b8:	cmp	r6, #0
   1a5bc:	beq	1a8f0 <sf_icode_to_fcode+0xa88>
   1a5c0:	ldr	r3, [r6, #24]
   1a5c4:	cmp	fp, r3
   1a5c8:	moveq	r6, #0
   1a5cc:	beq	1a8f0 <sf_icode_to_fcode+0xa88>
   1a5d0:	ldr	r8, [r6, #60]	; 0x3c
   1a5d4:	str	fp, [r6, #24]
   1a5d8:	cmp	r8, #0
   1a5dc:	beq	1a73c <sf_icode_to_fcode+0x8d4>
   1a5e0:	ldr	r3, [r8, #24]
   1a5e4:	cmp	fp, r3
   1a5e8:	moveq	r8, #0
   1a5ec:	beq	1a73c <sf_icode_to_fcode+0x8d4>
   1a5f0:	ldr	r9, [r8, #60]	; 0x3c
   1a5f4:	str	fp, [r8, #24]
   1a5f8:	cmp	r9, #0
   1a5fc:	beq	1a674 <sf_icode_to_fcode+0x80c>
   1a600:	ldr	r3, [r9, #24]
   1a604:	cmp	fp, r3
   1a608:	moveq	r9, #0
   1a60c:	beq	1a674 <sf_icode_to_fcode+0x80c>
   1a610:	str	fp, [r9, #24]
   1a614:	ldr	r0, [r9, #60]	; 0x3c
   1a618:	bl	1399c <count_stmts>
   1a61c:	mov	r3, r0
   1a620:	ldr	r0, [r9, #84]	; 0x54
   1a624:	str	r3, [sp, #12]
   1a628:	bl	1399c <count_stmts>
   1a62c:	ldr	r2, [r9, #4]
   1a630:	ldr	r3, [sp, #12]
   1a634:	cmp	r2, #0
   1a638:	add	r3, r3, r0
   1a63c:	beq	1a660 <sf_icode_to_fcode+0x7f8>
   1a640:	mov	ip, #0
   1a644:	ldr	r1, [r2]
   1a648:	ldr	r2, [r2, #16]
   1a64c:	cmn	r1, #1
   1a650:	addne	ip, ip, #1
   1a654:	cmp	r2, #0
   1a658:	bne	1a644 <sf_icode_to_fcode+0x7dc>
   1a65c:	add	r3, r3, ip
   1a660:	ldr	r2, [r9, #28]
   1a664:	add	r3, r3, #1
   1a668:	ldr	r9, [r9, #32]
   1a66c:	add	r3, r3, r2
   1a670:	add	r9, r3, r9
   1a674:	ldr	r2, [r8, #84]	; 0x54
   1a678:	cmp	r2, #0
   1a67c:	beq	1a6fc <sf_icode_to_fcode+0x894>
   1a680:	ldr	r3, [r2, #24]
   1a684:	cmp	fp, r3
   1a688:	beq	1a6fc <sf_icode_to_fcode+0x894>
   1a68c:	str	fp, [r2, #24]
   1a690:	ldr	r0, [r2, #60]	; 0x3c
   1a694:	str	r2, [sp, #12]
   1a698:	bl	1399c <count_stmts>
   1a69c:	ldr	r2, [sp, #12]
   1a6a0:	mov	r3, r0
   1a6a4:	str	r3, [sp, #16]
   1a6a8:	ldr	r0, [r2, #84]	; 0x54
   1a6ac:	bl	1399c <count_stmts>
   1a6b0:	ldrd	r2, [sp, #12]
   1a6b4:	ldr	r1, [r2, #4]
   1a6b8:	add	r3, r3, r0
   1a6bc:	cmp	r1, #0
   1a6c0:	beq	1a6e4 <sf_icode_to_fcode+0x87c>
   1a6c4:	mov	lr, #0
   1a6c8:	ldr	r0, [r1]
   1a6cc:	ldr	r1, [r1, #16]
   1a6d0:	cmn	r0, #1
   1a6d4:	addne	lr, lr, #1
   1a6d8:	cmp	r1, #0
   1a6dc:	bne	1a6c8 <sf_icode_to_fcode+0x860>
   1a6e0:	add	r3, r3, lr
   1a6e4:	ldr	r1, [r2, #28]
   1a6e8:	add	r3, r3, #1
   1a6ec:	ldr	r2, [r2, #32]
   1a6f0:	add	r3, r3, r1
   1a6f4:	add	r3, r3, r2
   1a6f8:	add	r9, r9, r3
   1a6fc:	ldr	r3, [r8, #4]
   1a700:	cmp	r3, #0
   1a704:	beq	1a728 <sf_icode_to_fcode+0x8c0>
   1a708:	mov	r1, #0
   1a70c:	ldr	r2, [r3]
   1a710:	ldr	r3, [r3, #16]
   1a714:	cmn	r2, #1
   1a718:	addne	r1, r1, #1
   1a71c:	cmp	r3, #0
   1a720:	bne	1a70c <sf_icode_to_fcode+0x8a4>
   1a724:	add	r9, r9, r1
   1a728:	ldr	r3, [r8, #28]
   1a72c:	add	r9, r9, #1
   1a730:	ldr	r8, [r8, #32]
   1a734:	add	r9, r9, r3
   1a738:	add	r8, r9, r8
   1a73c:	ldr	r3, [r6, #84]	; 0x54
   1a740:	cmp	r3, #0
   1a744:	beq	1a8b0 <sf_icode_to_fcode+0xa48>
   1a748:	ldr	r2, [r3, #24]
   1a74c:	cmp	fp, r2
   1a750:	beq	1a8b0 <sf_icode_to_fcode+0xa48>
   1a754:	ldr	r9, [r3, #60]	; 0x3c
   1a758:	str	fp, [r3, #24]
   1a75c:	cmp	r9, #0
   1a760:	beq	1a7dc <sf_icode_to_fcode+0x974>
   1a764:	ldr	r2, [r9, #24]
   1a768:	cmp	fp, r2
   1a76c:	moveq	r9, #0
   1a770:	beq	1a7dc <sf_icode_to_fcode+0x974>
   1a774:	str	fp, [r9, #24]
   1a778:	ldr	r0, [r9, #60]	; 0x3c
   1a77c:	str	r3, [sp, #16]
   1a780:	bl	1399c <count_stmts>
   1a784:	mov	r2, r0
   1a788:	ldr	r0, [r9, #84]	; 0x54
   1a78c:	str	r2, [sp, #12]
   1a790:	bl	1399c <count_stmts>
   1a794:	ldr	r1, [r9, #4]
   1a798:	ldrd	r2, [sp, #12]
   1a79c:	cmp	r1, #0
   1a7a0:	add	r2, r2, r0
   1a7a4:	beq	1a7c8 <sf_icode_to_fcode+0x960>
   1a7a8:	mov	lr, #0
   1a7ac:	ldr	r0, [r1]
   1a7b0:	ldr	r1, [r1, #16]
   1a7b4:	cmn	r0, #1
   1a7b8:	addne	lr, lr, #1
   1a7bc:	cmp	r1, #0
   1a7c0:	bne	1a7ac <sf_icode_to_fcode+0x944>
   1a7c4:	add	r2, r2, lr
   1a7c8:	ldr	r1, [r9, #28]
   1a7cc:	add	r2, r2, #1
   1a7d0:	ldr	r9, [r9, #32]
   1a7d4:	add	r2, r2, r1
   1a7d8:	add	r9, r2, r9
   1a7dc:	ldr	r1, [r3, #84]	; 0x54
   1a7e0:	cmp	r1, #0
   1a7e4:	beq	1a86c <sf_icode_to_fcode+0xa04>
   1a7e8:	ldr	r2, [r1, #24]
   1a7ec:	cmp	fp, r2
   1a7f0:	beq	1a86c <sf_icode_to_fcode+0xa04>
   1a7f4:	str	fp, [r1, #24]
   1a7f8:	ldr	r0, [r1, #60]	; 0x3c
   1a7fc:	str	r1, [sp, #12]
   1a800:	str	r3, [sp, #20]
   1a804:	bl	1399c <count_stmts>
   1a808:	ldr	r1, [sp, #12]
   1a80c:	mov	r2, r0
   1a810:	str	r2, [sp, #16]
   1a814:	ldr	r0, [r1, #84]	; 0x54
   1a818:	bl	1399c <count_stmts>
   1a81c:	add	r1, sp, #12
   1a820:	ldm	r1, {r1, r2, r3}
   1a824:	ldr	ip, [r1, #4]
   1a828:	add	r0, r2, r0
   1a82c:	cmp	ip, #0
   1a830:	beq	1a854 <sf_icode_to_fcode+0x9ec>
   1a834:	mov	r2, #0
   1a838:	ldr	lr, [ip]
   1a83c:	ldr	ip, [ip, #16]
   1a840:	cmn	lr, #1
   1a844:	addne	r2, r2, #1
   1a848:	cmp	ip, #0
   1a84c:	bne	1a838 <sf_icode_to_fcode+0x9d0>
   1a850:	add	r0, r0, r2
   1a854:	ldr	ip, [r1, #28]
   1a858:	add	r2, r0, #1
   1a85c:	ldr	r1, [r1, #32]
   1a860:	add	r2, r2, ip
   1a864:	add	r2, r2, r1
   1a868:	add	r9, r9, r2
   1a86c:	ldr	r2, [r3, #4]
   1a870:	cmp	r2, #0
   1a874:	beq	1a898 <sf_icode_to_fcode+0xa30>
   1a878:	mov	r0, #0
   1a87c:	ldr	r1, [r2]
   1a880:	ldr	r2, [r2, #16]
   1a884:	cmn	r1, #1
   1a888:	addne	r0, r0, #1
   1a88c:	cmp	r2, #0
   1a890:	bne	1a87c <sf_icode_to_fcode+0xa14>
   1a894:	add	r9, r9, r0
   1a898:	ldr	r1, [r3, #28]
   1a89c:	add	r9, r9, #1
   1a8a0:	ldr	r2, [r3, #32]
   1a8a4:	add	r3, r9, r1
   1a8a8:	add	r3, r3, r2
   1a8ac:	add	r8, r8, r3
   1a8b0:	ldr	r3, [r6, #4]
   1a8b4:	cmp	r3, #0
   1a8b8:	beq	1a8dc <sf_icode_to_fcode+0xa74>
   1a8bc:	mov	r1, #0
   1a8c0:	ldr	r2, [r3]
   1a8c4:	ldr	r3, [r3, #16]
   1a8c8:	cmn	r2, #1
   1a8cc:	addne	r1, r1, #1
   1a8d0:	cmp	r3, #0
   1a8d4:	bne	1a8c0 <sf_icode_to_fcode+0xa58>
   1a8d8:	add	r8, r8, r1
   1a8dc:	ldr	r3, [r6, #28]
   1a8e0:	add	r8, r8, #1
   1a8e4:	ldr	r6, [r6, #32]
   1a8e8:	add	r8, r8, r3
   1a8ec:	add	r6, r8, r6
   1a8f0:	ldr	r9, [r7, #84]	; 0x54
   1a8f4:	cmp	r9, #0
   1a8f8:	beq	1ac40 <sf_icode_to_fcode+0xdd8>
   1a8fc:	ldr	r3, [r9, #24]
   1a900:	cmp	fp, r3
   1a904:	beq	1ac40 <sf_icode_to_fcode+0xdd8>
   1a908:	ldr	r3, [r9, #60]	; 0x3c
   1a90c:	str	fp, [r9, #24]
   1a910:	cmp	r3, #0
   1a914:	beq	1bc24 <sf_icode_to_fcode+0x1dbc>
   1a918:	ldr	r2, [r3, #24]
   1a91c:	cmp	fp, r2
   1a920:	beq	1bc24 <sf_icode_to_fcode+0x1dbc>
   1a924:	ldr	r8, [r3, #60]	; 0x3c
   1a928:	str	fp, [r3, #24]
   1a92c:	cmp	r8, #0
   1a930:	beq	1a9ac <sf_icode_to_fcode+0xb44>
   1a934:	ldr	r2, [r8, #24]
   1a938:	cmp	fp, r2
   1a93c:	moveq	r8, #0
   1a940:	beq	1a9ac <sf_icode_to_fcode+0xb44>
   1a944:	str	fp, [r8, #24]
   1a948:	ldr	r0, [r8, #60]	; 0x3c
   1a94c:	str	r3, [sp, #16]
   1a950:	bl	1399c <count_stmts>
   1a954:	mov	r2, r0
   1a958:	ldr	r0, [r8, #84]	; 0x54
   1a95c:	str	r2, [sp, #12]
   1a960:	bl	1399c <count_stmts>
   1a964:	ldr	r1, [r8, #4]
   1a968:	ldrd	r2, [sp, #12]
   1a96c:	cmp	r1, #0
   1a970:	add	r2, r2, r0
   1a974:	beq	1a998 <sf_icode_to_fcode+0xb30>
   1a978:	mov	lr, #0
   1a97c:	ldr	r0, [r1]
   1a980:	ldr	r1, [r1, #16]
   1a984:	cmn	r0, #1
   1a988:	addne	lr, lr, #1
   1a98c:	cmp	r1, #0
   1a990:	bne	1a97c <sf_icode_to_fcode+0xb14>
   1a994:	add	r2, r2, lr
   1a998:	ldr	r1, [r8, #28]
   1a99c:	add	r2, r2, #1
   1a9a0:	ldr	r8, [r8, #32]
   1a9a4:	add	r2, r2, r1
   1a9a8:	add	r8, r2, r8
   1a9ac:	ldr	r1, [r3, #84]	; 0x54
   1a9b0:	cmp	r1, #0
   1a9b4:	beq	1aa3c <sf_icode_to_fcode+0xbd4>
   1a9b8:	ldr	r2, [r1, #24]
   1a9bc:	cmp	fp, r2
   1a9c0:	beq	1aa3c <sf_icode_to_fcode+0xbd4>
   1a9c4:	str	fp, [r1, #24]
   1a9c8:	ldr	r0, [r1, #60]	; 0x3c
   1a9cc:	str	r1, [sp, #12]
   1a9d0:	str	r3, [sp, #20]
   1a9d4:	bl	1399c <count_stmts>
   1a9d8:	ldr	r1, [sp, #12]
   1a9dc:	mov	r2, r0
   1a9e0:	str	r2, [sp, #16]
   1a9e4:	ldr	r0, [r1, #84]	; 0x54
   1a9e8:	bl	1399c <count_stmts>
   1a9ec:	add	r1, sp, #12
   1a9f0:	ldm	r1, {r1, r2, r3}
   1a9f4:	ldr	ip, [r1, #4]
   1a9f8:	add	r0, r2, r0
   1a9fc:	cmp	ip, #0
   1aa00:	beq	1aa24 <sf_icode_to_fcode+0xbbc>
   1aa04:	mov	r2, #0
   1aa08:	ldr	lr, [ip]
   1aa0c:	ldr	ip, [ip, #16]
   1aa10:	cmn	lr, #1
   1aa14:	addne	r2, r2, #1
   1aa18:	cmp	ip, #0
   1aa1c:	bne	1aa08 <sf_icode_to_fcode+0xba0>
   1aa20:	add	r0, r0, r2
   1aa24:	ldr	ip, [r1, #28]
   1aa28:	add	r2, r0, #1
   1aa2c:	ldr	r1, [r1, #32]
   1aa30:	add	r2, r2, ip
   1aa34:	add	r2, r2, r1
   1aa38:	add	r8, r8, r2
   1aa3c:	ldr	r2, [r3, #4]
   1aa40:	cmp	r2, #0
   1aa44:	beq	1aa68 <sf_icode_to_fcode+0xc00>
   1aa48:	mov	r0, #0
   1aa4c:	ldr	r1, [r2]
   1aa50:	ldr	r2, [r2, #16]
   1aa54:	cmn	r1, #1
   1aa58:	addne	r0, r0, #1
   1aa5c:	cmp	r2, #0
   1aa60:	bne	1aa4c <sf_icode_to_fcode+0xbe4>
   1aa64:	add	r8, r8, r0
   1aa68:	ldrd	r2, [r3, #28]
   1aa6c:	add	r8, r8, #1
   1aa70:	add	r8, r8, r2
   1aa74:	add	r8, r8, r3
   1aa78:	ldr	r3, [r9, #84]	; 0x54
   1aa7c:	cmp	r3, #0
   1aa80:	beq	1ac00 <sf_icode_to_fcode+0xd98>
   1aa84:	ldr	r2, [r3, #24]
   1aa88:	cmp	fp, r2
   1aa8c:	beq	1ac00 <sf_icode_to_fcode+0xd98>
   1aa90:	ldr	r2, [r3, #60]	; 0x3c
   1aa94:	str	fp, [r3, #24]
   1aa98:	cmp	r2, #0
   1aa9c:	beq	1bc44 <sf_icode_to_fcode+0x1ddc>
   1aaa0:	ldr	r1, [r2, #24]
   1aaa4:	cmp	fp, r1
   1aaa8:	beq	1bc44 <sf_icode_to_fcode+0x1ddc>
   1aaac:	str	fp, [r2, #24]
   1aab0:	ldr	r0, [r2, #60]	; 0x3c
   1aab4:	str	r2, [sp, #12]
   1aab8:	str	r3, [sp, #20]
   1aabc:	bl	1399c <count_stmts>
   1aac0:	ldr	r2, [sp, #12]
   1aac4:	mov	r1, r0
   1aac8:	str	r1, [sp, #16]
   1aacc:	ldr	r0, [r2, #84]	; 0x54
   1aad0:	bl	1399c <count_stmts>
   1aad4:	ldr	r2, [sp, #12]
   1aad8:	ldr	r1, [sp, #16]
   1aadc:	ldr	r3, [sp, #20]
   1aae0:	ldr	ip, [r2, #4]
   1aae4:	add	r0, r1, r0
   1aae8:	cmp	ip, #0
   1aaec:	beq	1ab10 <sf_icode_to_fcode+0xca8>
   1aaf0:	mov	r1, #0
   1aaf4:	ldr	lr, [ip]
   1aaf8:	ldr	ip, [ip, #16]
   1aafc:	cmn	lr, #1
   1ab00:	addne	r1, r1, #1
   1ab04:	cmp	ip, #0
   1ab08:	bne	1aaf4 <sf_icode_to_fcode+0xc8c>
   1ab0c:	add	r0, r0, r1
   1ab10:	ldr	ip, [r2, #28]
   1ab14:	add	r1, r0, #1
   1ab18:	ldr	r2, [r2, #32]
   1ab1c:	add	r1, r1, ip
   1ab20:	add	r1, r1, r2
   1ab24:	ldr	r2, [r3, #84]	; 0x54
   1ab28:	cmp	r2, #0
   1ab2c:	beq	1abc0 <sf_icode_to_fcode+0xd58>
   1ab30:	ldr	r0, [r2, #24]
   1ab34:	cmp	fp, r0
   1ab38:	beq	1abc0 <sf_icode_to_fcode+0xd58>
   1ab3c:	str	fp, [r2, #24]
   1ab40:	ldr	r0, [r2, #60]	; 0x3c
   1ab44:	strd	r2, [sp, #16]
   1ab48:	str	r1, [sp, #24]
   1ab4c:	bl	1399c <count_stmts>
   1ab50:	ldr	r2, [sp, #16]
   1ab54:	str	r0, [sp, #12]
   1ab58:	ldr	r0, [r2, #84]	; 0x54
   1ab5c:	bl	1399c <count_stmts>
   1ab60:	ldr	r3, [sp, #12]
   1ab64:	ldr	r2, [sp, #16]
   1ab68:	ldr	r1, [sp, #24]
   1ab6c:	add	lr, r3, r0
   1ab70:	ldr	r3, [sp, #20]
   1ab74:	ldr	ip, [r2, #4]
   1ab78:	cmp	ip, #0
   1ab7c:	beq	1aba8 <sf_icode_to_fcode+0xd40>
   1ab80:	mov	r0, #0
   1ab84:	str	r3, [sp, #12]
   1ab88:	ldr	r3, [ip]
   1ab8c:	ldr	ip, [ip, #16]
   1ab90:	cmn	r3, #1
   1ab94:	addne	r0, r0, #1
   1ab98:	cmp	ip, #0
   1ab9c:	bne	1ab88 <sf_icode_to_fcode+0xd20>
   1aba0:	ldr	r3, [sp, #12]
   1aba4:	add	lr, lr, r0
   1aba8:	add	lr, lr, #1
   1abac:	ldr	ip, [r2, #28]
   1abb0:	ldr	r0, [r2, #32]
   1abb4:	add	r2, lr, ip
   1abb8:	add	r2, r2, r0
   1abbc:	add	r1, r1, r2
   1abc0:	ldr	r2, [r3, #4]
   1abc4:	cmp	r2, #0
   1abc8:	beq	1abec <sf_icode_to_fcode+0xd84>
   1abcc:	mov	r0, #0
   1abd0:	ldr	ip, [r2]
   1abd4:	ldr	r2, [r2, #16]
   1abd8:	cmn	ip, #1
   1abdc:	addne	r0, r0, #1
   1abe0:	cmp	r2, #0
   1abe4:	bne	1abd0 <sf_icode_to_fcode+0xd68>
   1abe8:	add	r1, r1, r0
   1abec:	add	r2, r1, #1
   1abf0:	ldrd	r0, [r3, #28]
   1abf4:	add	r3, r2, r0
   1abf8:	add	r3, r3, r1
   1abfc:	add	r8, r8, r3
   1ac00:	ldr	r3, [r9, #4]
   1ac04:	cmp	r3, #0
   1ac08:	beq	1ac2c <sf_icode_to_fcode+0xdc4>
   1ac0c:	mov	r1, #0
   1ac10:	ldr	r2, [r3]
   1ac14:	ldr	r3, [r3, #16]
   1ac18:	cmn	r2, #1
   1ac1c:	addne	r1, r1, #1
   1ac20:	cmp	r3, #0
   1ac24:	bne	1ac10 <sf_icode_to_fcode+0xda8>
   1ac28:	add	r8, r8, r1
   1ac2c:	ldrd	r2, [r9, #28]
   1ac30:	add	r8, r8, #1
   1ac34:	add	r8, r8, r2
   1ac38:	add	r8, r8, r3
   1ac3c:	add	r6, r6, r8
   1ac40:	ldr	r3, [r7, #4]
   1ac44:	cmp	r3, #0
   1ac48:	beq	1ac6c <sf_icode_to_fcode+0xe04>
   1ac4c:	mov	r1, #0
   1ac50:	ldr	r2, [r3]
   1ac54:	ldr	r3, [r3, #16]
   1ac58:	cmn	r2, #1
   1ac5c:	addne	r1, r1, #1
   1ac60:	cmp	r3, #0
   1ac64:	bne	1ac50 <sf_icode_to_fcode+0xde8>
   1ac68:	add	r6, r6, r1
   1ac6c:	ldrd	r2, [r7, #28]
   1ac70:	add	r6, r6, #1
   1ac74:	add	r6, r6, r2
   1ac78:	add	r6, r6, r3
   1ac7c:	add	r4, r4, r6
   1ac80:	ldr	r3, [r5, #4]
   1ac84:	cmp	r3, #0
   1ac88:	beq	1acac <sf_icode_to_fcode+0xe44>
   1ac8c:	mov	r2, #0
   1ac90:	ldr	r1, [r3]
   1ac94:	ldr	r3, [r3, #16]
   1ac98:	cmn	r1, #1
   1ac9c:	addne	r2, r2, #1
   1aca0:	cmp	r3, #0
   1aca4:	bne	1ac90 <sf_icode_to_fcode+0xe28>
   1aca8:	add	r4, r4, r2
   1acac:	ldrd	r2, [r5, #28]
   1acb0:	add	r4, r4, #1
   1acb4:	add	r5, r4, r2
   1acb8:	add	r5, r5, r3
   1acbc:	ldr	r6, [sl, #84]	; 0x54
   1acc0:	cmp	r6, #0
   1acc4:	beq	1bb28 <sf_icode_to_fcode+0x1cc0>
   1acc8:	ldr	r3, [r6, #24]
   1accc:	cmp	fp, r3
   1acd0:	beq	1bb28 <sf_icode_to_fcode+0x1cc0>
   1acd4:	ldr	r7, [r6, #60]	; 0x3c
   1acd8:	str	fp, [r6, #24]
   1acdc:	cmp	r7, #0
   1ace0:	beq	1b3c0 <sf_icode_to_fcode+0x1558>
   1ace4:	ldr	r3, [r7, #24]
   1ace8:	cmp	fp, r3
   1acec:	moveq	r7, #0
   1acf0:	beq	1b3c0 <sf_icode_to_fcode+0x1558>
   1acf4:	ldr	r4, [r7, #60]	; 0x3c
   1acf8:	str	fp, [r7, #24]
   1acfc:	cmp	r4, #0
   1ad00:	beq	1b034 <sf_icode_to_fcode+0x11cc>
   1ad04:	ldr	r3, [r4, #24]
   1ad08:	cmp	fp, r3
   1ad0c:	moveq	r4, #0
   1ad10:	beq	1b034 <sf_icode_to_fcode+0x11cc>
   1ad14:	ldr	r8, [r4, #60]	; 0x3c
   1ad18:	str	fp, [r4, #24]
   1ad1c:	cmp	r8, #0
   1ad20:	beq	1ae80 <sf_icode_to_fcode+0x1018>
   1ad24:	ldr	r3, [r8, #24]
   1ad28:	cmp	fp, r3
   1ad2c:	moveq	r8, #0
   1ad30:	beq	1ae80 <sf_icode_to_fcode+0x1018>
   1ad34:	ldr	r9, [r8, #60]	; 0x3c
   1ad38:	str	fp, [r8, #24]
   1ad3c:	cmp	r9, #0
   1ad40:	beq	1adb8 <sf_icode_to_fcode+0xf50>
   1ad44:	ldr	r3, [r9, #24]
   1ad48:	cmp	fp, r3
   1ad4c:	moveq	r9, #0
   1ad50:	beq	1adb8 <sf_icode_to_fcode+0xf50>
   1ad54:	str	fp, [r9, #24]
   1ad58:	ldr	r0, [r9, #60]	; 0x3c
   1ad5c:	bl	1399c <count_stmts>
   1ad60:	mov	r3, r0
   1ad64:	ldr	r0, [r9, #84]	; 0x54
   1ad68:	str	r3, [sp, #12]
   1ad6c:	bl	1399c <count_stmts>
   1ad70:	ldr	r2, [r9, #4]
   1ad74:	ldr	r3, [sp, #12]
   1ad78:	cmp	r2, #0
   1ad7c:	add	r3, r3, r0
   1ad80:	beq	1ada4 <sf_icode_to_fcode+0xf3c>
   1ad84:	mov	ip, #0
   1ad88:	ldr	r1, [r2]
   1ad8c:	ldr	r2, [r2, #16]
   1ad90:	cmn	r1, #1
   1ad94:	addne	ip, ip, #1
   1ad98:	cmp	r2, #0
   1ad9c:	bne	1ad88 <sf_icode_to_fcode+0xf20>
   1ada0:	add	r3, r3, ip
   1ada4:	ldr	r2, [r9, #28]
   1ada8:	add	r3, r3, #1
   1adac:	ldr	r9, [r9, #32]
   1adb0:	add	r3, r3, r2
   1adb4:	add	r9, r3, r9
   1adb8:	ldr	r2, [r8, #84]	; 0x54
   1adbc:	cmp	r2, #0
   1adc0:	beq	1ae40 <sf_icode_to_fcode+0xfd8>
   1adc4:	ldr	r3, [r2, #24]
   1adc8:	cmp	fp, r3
   1adcc:	beq	1ae40 <sf_icode_to_fcode+0xfd8>
   1add0:	str	fp, [r2, #24]
   1add4:	ldr	r0, [r2, #60]	; 0x3c
   1add8:	str	r2, [sp, #12]
   1addc:	bl	1399c <count_stmts>
   1ade0:	ldr	r2, [sp, #12]
   1ade4:	mov	r3, r0
   1ade8:	str	r3, [sp, #16]
   1adec:	ldr	r0, [r2, #84]	; 0x54
   1adf0:	bl	1399c <count_stmts>
   1adf4:	ldrd	r2, [sp, #12]
   1adf8:	ldr	r1, [r2, #4]
   1adfc:	add	r3, r3, r0
   1ae00:	cmp	r1, #0
   1ae04:	beq	1ae28 <sf_icode_to_fcode+0xfc0>
   1ae08:	mov	lr, #0
   1ae0c:	ldr	r0, [r1]
   1ae10:	ldr	r1, [r1, #16]
   1ae14:	cmn	r0, #1
   1ae18:	addne	lr, lr, #1
   1ae1c:	cmp	r1, #0
   1ae20:	bne	1ae0c <sf_icode_to_fcode+0xfa4>
   1ae24:	add	r3, r3, lr
   1ae28:	ldr	r1, [r2, #28]
   1ae2c:	add	r3, r3, #1
   1ae30:	ldr	r2, [r2, #32]
   1ae34:	add	r3, r3, r1
   1ae38:	add	r3, r3, r2
   1ae3c:	add	r9, r9, r3
   1ae40:	ldr	r3, [r8, #4]
   1ae44:	cmp	r3, #0
   1ae48:	beq	1ae6c <sf_icode_to_fcode+0x1004>
   1ae4c:	mov	r1, #0
   1ae50:	ldr	r2, [r3]
   1ae54:	ldr	r3, [r3, #16]
   1ae58:	cmn	r2, #1
   1ae5c:	addne	r1, r1, #1
   1ae60:	cmp	r3, #0
   1ae64:	bne	1ae50 <sf_icode_to_fcode+0xfe8>
   1ae68:	add	r9, r9, r1
   1ae6c:	ldr	r3, [r8, #28]
   1ae70:	add	r9, r9, #1
   1ae74:	ldr	r8, [r8, #32]
   1ae78:	add	r9, r9, r3
   1ae7c:	add	r8, r9, r8
   1ae80:	ldr	r3, [r4, #84]	; 0x54
   1ae84:	cmp	r3, #0
   1ae88:	beq	1aff4 <sf_icode_to_fcode+0x118c>
   1ae8c:	ldr	r2, [r3, #24]
   1ae90:	cmp	fp, r2
   1ae94:	beq	1aff4 <sf_icode_to_fcode+0x118c>
   1ae98:	ldr	r9, [r3, #60]	; 0x3c
   1ae9c:	str	fp, [r3, #24]
   1aea0:	cmp	r9, #0
   1aea4:	beq	1af20 <sf_icode_to_fcode+0x10b8>
   1aea8:	ldr	r2, [r9, #24]
   1aeac:	cmp	fp, r2
   1aeb0:	moveq	r9, #0
   1aeb4:	beq	1af20 <sf_icode_to_fcode+0x10b8>
   1aeb8:	str	fp, [r9, #24]
   1aebc:	ldr	r0, [r9, #60]	; 0x3c
   1aec0:	str	r3, [sp, #16]
   1aec4:	bl	1399c <count_stmts>
   1aec8:	mov	r2, r0
   1aecc:	ldr	r0, [r9, #84]	; 0x54
   1aed0:	str	r2, [sp, #12]
   1aed4:	bl	1399c <count_stmts>
   1aed8:	ldr	r1, [r9, #4]
   1aedc:	ldrd	r2, [sp, #12]
   1aee0:	cmp	r1, #0
   1aee4:	add	r2, r2, r0
   1aee8:	beq	1af0c <sf_icode_to_fcode+0x10a4>
   1aeec:	mov	lr, #0
   1aef0:	ldr	r0, [r1]
   1aef4:	ldr	r1, [r1, #16]
   1aef8:	cmn	r0, #1
   1aefc:	addne	lr, lr, #1
   1af00:	cmp	r1, #0
   1af04:	bne	1aef0 <sf_icode_to_fcode+0x1088>
   1af08:	add	r2, r2, lr
   1af0c:	ldr	r1, [r9, #28]
   1af10:	add	r2, r2, #1
   1af14:	ldr	r9, [r9, #32]
   1af18:	add	r2, r2, r1
   1af1c:	add	r9, r2, r9
   1af20:	ldr	r1, [r3, #84]	; 0x54
   1af24:	cmp	r1, #0
   1af28:	beq	1afb0 <sf_icode_to_fcode+0x1148>
   1af2c:	ldr	r2, [r1, #24]
   1af30:	cmp	fp, r2
   1af34:	beq	1afb0 <sf_icode_to_fcode+0x1148>
   1af38:	str	fp, [r1, #24]
   1af3c:	ldr	r0, [r1, #60]	; 0x3c
   1af40:	str	r1, [sp, #12]
   1af44:	str	r3, [sp, #20]
   1af48:	bl	1399c <count_stmts>
   1af4c:	ldr	r1, [sp, #12]
   1af50:	mov	r2, r0
   1af54:	str	r2, [sp, #16]
   1af58:	ldr	r0, [r1, #84]	; 0x54
   1af5c:	bl	1399c <count_stmts>
   1af60:	add	r1, sp, #12
   1af64:	ldm	r1, {r1, r2, r3}
   1af68:	ldr	ip, [r1, #4]
   1af6c:	add	r0, r2, r0
   1af70:	cmp	ip, #0
   1af74:	beq	1af98 <sf_icode_to_fcode+0x1130>
   1af78:	mov	r2, #0
   1af7c:	ldr	lr, [ip]
   1af80:	ldr	ip, [ip, #16]
   1af84:	cmn	lr, #1
   1af88:	addne	r2, r2, #1
   1af8c:	cmp	ip, #0
   1af90:	bne	1af7c <sf_icode_to_fcode+0x1114>
   1af94:	add	r0, r0, r2
   1af98:	ldr	ip, [r1, #28]
   1af9c:	add	r2, r0, #1
   1afa0:	ldr	r1, [r1, #32]
   1afa4:	add	r2, r2, ip
   1afa8:	add	r2, r2, r1
   1afac:	add	r9, r9, r2
   1afb0:	ldr	r2, [r3, #4]
   1afb4:	cmp	r2, #0
   1afb8:	beq	1afdc <sf_icode_to_fcode+0x1174>
   1afbc:	mov	r0, #0
   1afc0:	ldr	r1, [r2]
   1afc4:	ldr	r2, [r2, #16]
   1afc8:	cmn	r1, #1
   1afcc:	addne	r0, r0, #1
   1afd0:	cmp	r2, #0
   1afd4:	bne	1afc0 <sf_icode_to_fcode+0x1158>
   1afd8:	add	r9, r9, r0
   1afdc:	ldr	r1, [r3, #28]
   1afe0:	add	r9, r9, #1
   1afe4:	ldr	r2, [r3, #32]
   1afe8:	add	r3, r9, r1
   1afec:	add	r3, r3, r2
   1aff0:	add	r8, r8, r3
   1aff4:	ldr	r3, [r4, #4]
   1aff8:	cmp	r3, #0
   1affc:	beq	1b020 <sf_icode_to_fcode+0x11b8>
   1b000:	mov	r1, #0
   1b004:	ldr	r2, [r3]
   1b008:	ldr	r3, [r3, #16]
   1b00c:	cmn	r2, #1
   1b010:	addne	r1, r1, #1
   1b014:	cmp	r3, #0
   1b018:	bne	1b004 <sf_icode_to_fcode+0x119c>
   1b01c:	add	r8, r8, r1
   1b020:	ldr	r3, [r4, #28]
   1b024:	add	r8, r8, #1
   1b028:	ldr	r4, [r4, #32]
   1b02c:	add	r8, r8, r3
   1b030:	add	r4, r8, r4
   1b034:	ldr	r9, [r7, #84]	; 0x54
   1b038:	cmp	r9, #0
   1b03c:	beq	1b384 <sf_icode_to_fcode+0x151c>
   1b040:	ldr	r3, [r9, #24]
   1b044:	cmp	fp, r3
   1b048:	beq	1b384 <sf_icode_to_fcode+0x151c>
   1b04c:	ldr	r3, [r9, #60]	; 0x3c
   1b050:	str	fp, [r9, #24]
   1b054:	cmp	r3, #0
   1b058:	beq	1bc1c <sf_icode_to_fcode+0x1db4>
   1b05c:	ldr	r2, [r3, #24]
   1b060:	cmp	fp, r2
   1b064:	beq	1bc1c <sf_icode_to_fcode+0x1db4>
   1b068:	ldr	r8, [r3, #60]	; 0x3c
   1b06c:	str	fp, [r3, #24]
   1b070:	cmp	r8, #0
   1b074:	beq	1b0f0 <sf_icode_to_fcode+0x1288>
   1b078:	ldr	r2, [r8, #24]
   1b07c:	cmp	fp, r2
   1b080:	moveq	r8, #0
   1b084:	beq	1b0f0 <sf_icode_to_fcode+0x1288>
   1b088:	str	fp, [r8, #24]
   1b08c:	ldr	r0, [r8, #60]	; 0x3c
   1b090:	str	r3, [sp, #16]
   1b094:	bl	1399c <count_stmts>
   1b098:	mov	r2, r0
   1b09c:	ldr	r0, [r8, #84]	; 0x54
   1b0a0:	str	r2, [sp, #12]
   1b0a4:	bl	1399c <count_stmts>
   1b0a8:	ldr	r1, [r8, #4]
   1b0ac:	ldrd	r2, [sp, #12]
   1b0b0:	cmp	r1, #0
   1b0b4:	add	r2, r2, r0
   1b0b8:	beq	1b0dc <sf_icode_to_fcode+0x1274>
   1b0bc:	mov	lr, #0
   1b0c0:	ldr	r0, [r1]
   1b0c4:	ldr	r1, [r1, #16]
   1b0c8:	cmn	r0, #1
   1b0cc:	addne	lr, lr, #1
   1b0d0:	cmp	r1, #0
   1b0d4:	bne	1b0c0 <sf_icode_to_fcode+0x1258>
   1b0d8:	add	r2, r2, lr
   1b0dc:	ldr	r1, [r8, #28]
   1b0e0:	add	r2, r2, #1
   1b0e4:	ldr	r8, [r8, #32]
   1b0e8:	add	r2, r2, r1
   1b0ec:	add	r8, r2, r8
   1b0f0:	ldr	r1, [r3, #84]	; 0x54
   1b0f4:	cmp	r1, #0
   1b0f8:	beq	1b180 <sf_icode_to_fcode+0x1318>
   1b0fc:	ldr	r2, [r1, #24]
   1b100:	cmp	fp, r2
   1b104:	beq	1b180 <sf_icode_to_fcode+0x1318>
   1b108:	str	fp, [r1, #24]
   1b10c:	ldr	r0, [r1, #60]	; 0x3c
   1b110:	str	r1, [sp, #12]
   1b114:	str	r3, [sp, #20]
   1b118:	bl	1399c <count_stmts>
   1b11c:	ldr	r1, [sp, #12]
   1b120:	mov	r2, r0
   1b124:	str	r2, [sp, #16]
   1b128:	ldr	r0, [r1, #84]	; 0x54
   1b12c:	bl	1399c <count_stmts>
   1b130:	add	r1, sp, #12
   1b134:	ldm	r1, {r1, r2, r3}
   1b138:	ldr	ip, [r1, #4]
   1b13c:	add	r0, r2, r0
   1b140:	cmp	ip, #0
   1b144:	beq	1b168 <sf_icode_to_fcode+0x1300>
   1b148:	mov	r2, #0
   1b14c:	ldr	lr, [ip]
   1b150:	ldr	ip, [ip, #16]
   1b154:	cmn	lr, #1
   1b158:	addne	r2, r2, #1
   1b15c:	cmp	ip, #0
   1b160:	bne	1b14c <sf_icode_to_fcode+0x12e4>
   1b164:	add	r0, r0, r2
   1b168:	ldr	ip, [r1, #28]
   1b16c:	add	r2, r0, #1
   1b170:	ldr	r1, [r1, #32]
   1b174:	add	r2, r2, ip
   1b178:	add	r2, r2, r1
   1b17c:	add	r8, r8, r2
   1b180:	ldr	r2, [r3, #4]
   1b184:	cmp	r2, #0
   1b188:	beq	1b1ac <sf_icode_to_fcode+0x1344>
   1b18c:	mov	r0, #0
   1b190:	ldr	r1, [r2]
   1b194:	ldr	r2, [r2, #16]
   1b198:	cmn	r1, #1
   1b19c:	addne	r0, r0, #1
   1b1a0:	cmp	r2, #0
   1b1a4:	bne	1b190 <sf_icode_to_fcode+0x1328>
   1b1a8:	add	r8, r8, r0
   1b1ac:	ldrd	r2, [r3, #28]
   1b1b0:	add	r8, r8, #1
   1b1b4:	add	r8, r8, r2
   1b1b8:	add	r8, r8, r3
   1b1bc:	ldr	r3, [r9, #84]	; 0x54
   1b1c0:	cmp	r3, #0
   1b1c4:	beq	1b344 <sf_icode_to_fcode+0x14dc>
   1b1c8:	ldr	r2, [r3, #24]
   1b1cc:	cmp	fp, r2
   1b1d0:	beq	1b344 <sf_icode_to_fcode+0x14dc>
   1b1d4:	ldr	r2, [r3, #60]	; 0x3c
   1b1d8:	str	fp, [r3, #24]
   1b1dc:	cmp	r2, #0
   1b1e0:	beq	1bc2c <sf_icode_to_fcode+0x1dc4>
   1b1e4:	ldr	r1, [r2, #24]
   1b1e8:	cmp	fp, r1
   1b1ec:	beq	1bc2c <sf_icode_to_fcode+0x1dc4>
   1b1f0:	str	fp, [r2, #24]
   1b1f4:	ldr	r0, [r2, #60]	; 0x3c
   1b1f8:	str	r2, [sp, #12]
   1b1fc:	str	r3, [sp, #20]
   1b200:	bl	1399c <count_stmts>
   1b204:	ldr	r2, [sp, #12]
   1b208:	mov	r1, r0
   1b20c:	str	r1, [sp, #16]
   1b210:	ldr	r0, [r2, #84]	; 0x54
   1b214:	bl	1399c <count_stmts>
   1b218:	ldr	r2, [sp, #12]
   1b21c:	ldr	r1, [sp, #16]
   1b220:	ldr	r3, [sp, #20]
   1b224:	ldr	ip, [r2, #4]
   1b228:	add	r0, r1, r0
   1b22c:	cmp	ip, #0
   1b230:	beq	1b254 <sf_icode_to_fcode+0x13ec>
   1b234:	mov	r1, #0
   1b238:	ldr	lr, [ip]
   1b23c:	ldr	ip, [ip, #16]
   1b240:	cmn	lr, #1
   1b244:	addne	r1, r1, #1
   1b248:	cmp	ip, #0
   1b24c:	bne	1b238 <sf_icode_to_fcode+0x13d0>
   1b250:	add	r0, r0, r1
   1b254:	ldr	ip, [r2, #28]
   1b258:	add	r1, r0, #1
   1b25c:	ldr	r2, [r2, #32]
   1b260:	add	r1, r1, ip
   1b264:	add	r1, r1, r2
   1b268:	ldr	r2, [r3, #84]	; 0x54
   1b26c:	cmp	r2, #0
   1b270:	beq	1b304 <sf_icode_to_fcode+0x149c>
   1b274:	ldr	r0, [r2, #24]
   1b278:	cmp	fp, r0
   1b27c:	beq	1b304 <sf_icode_to_fcode+0x149c>
   1b280:	str	fp, [r2, #24]
   1b284:	ldr	r0, [r2, #60]	; 0x3c
   1b288:	strd	r2, [sp, #16]
   1b28c:	str	r1, [sp, #24]
   1b290:	bl	1399c <count_stmts>
   1b294:	ldr	r2, [sp, #16]
   1b298:	str	r0, [sp, #12]
   1b29c:	ldr	r0, [r2, #84]	; 0x54
   1b2a0:	bl	1399c <count_stmts>
   1b2a4:	ldr	r3, [sp, #12]
   1b2a8:	ldr	r2, [sp, #16]
   1b2ac:	ldr	r1, [sp, #24]
   1b2b0:	add	lr, r3, r0
   1b2b4:	ldr	r3, [sp, #20]
   1b2b8:	ldr	ip, [r2, #4]
   1b2bc:	cmp	ip, #0
   1b2c0:	beq	1b2ec <sf_icode_to_fcode+0x1484>
   1b2c4:	mov	r0, #0
   1b2c8:	str	r3, [sp, #12]
   1b2cc:	ldr	r3, [ip]
   1b2d0:	ldr	ip, [ip, #16]
   1b2d4:	cmn	r3, #1
   1b2d8:	addne	r0, r0, #1
   1b2dc:	cmp	ip, #0
   1b2e0:	bne	1b2cc <sf_icode_to_fcode+0x1464>
   1b2e4:	ldr	r3, [sp, #12]
   1b2e8:	add	lr, lr, r0
   1b2ec:	add	lr, lr, #1
   1b2f0:	ldr	ip, [r2, #28]
   1b2f4:	ldr	r0, [r2, #32]
   1b2f8:	add	r2, lr, ip
   1b2fc:	add	r2, r2, r0
   1b300:	add	r1, r1, r2
   1b304:	ldr	r2, [r3, #4]
   1b308:	cmp	r2, #0
   1b30c:	beq	1b330 <sf_icode_to_fcode+0x14c8>
   1b310:	mov	r0, #0
   1b314:	ldr	ip, [r2]
   1b318:	ldr	r2, [r2, #16]
   1b31c:	cmn	ip, #1
   1b320:	addne	r0, r0, #1
   1b324:	cmp	r2, #0
   1b328:	bne	1b314 <sf_icode_to_fcode+0x14ac>
   1b32c:	add	r1, r1, r0
   1b330:	add	r2, r1, #1
   1b334:	ldrd	r0, [r3, #28]
   1b338:	add	r3, r2, r0
   1b33c:	add	r3, r3, r1
   1b340:	add	r8, r8, r3
   1b344:	ldr	r3, [r9, #4]
   1b348:	cmp	r3, #0
   1b34c:	beq	1b370 <sf_icode_to_fcode+0x1508>
   1b350:	mov	r1, #0
   1b354:	ldr	r2, [r3]
   1b358:	ldr	r3, [r3, #16]
   1b35c:	cmn	r2, #1
   1b360:	addne	r1, r1, #1
   1b364:	cmp	r3, #0
   1b368:	bne	1b354 <sf_icode_to_fcode+0x14ec>
   1b36c:	add	r8, r8, r1
   1b370:	ldrd	r2, [r9, #28]
   1b374:	add	r8, r8, #1
   1b378:	add	r8, r8, r2
   1b37c:	add	r8, r8, r3
   1b380:	add	r4, r4, r8
   1b384:	ldr	r3, [r7, #4]
   1b388:	cmp	r3, #0
   1b38c:	beq	1b3b0 <sf_icode_to_fcode+0x1548>
   1b390:	mov	r1, #0
   1b394:	ldr	r2, [r3]
   1b398:	ldr	r3, [r3, #16]
   1b39c:	cmn	r2, #1
   1b3a0:	addne	r1, r1, #1
   1b3a4:	cmp	r3, #0
   1b3a8:	bne	1b394 <sf_icode_to_fcode+0x152c>
   1b3ac:	add	r4, r4, r1
   1b3b0:	ldrd	r2, [r7, #28]
   1b3b4:	add	r4, r4, #1
   1b3b8:	add	r7, r4, r2
   1b3bc:	add	r7, r7, r3
   1b3c0:	ldr	r4, [r6, #84]	; 0x54
   1b3c4:	cmp	r4, #0
   1b3c8:	beq	1bae8 <sf_icode_to_fcode+0x1c80>
   1b3cc:	ldr	r3, [r4, #24]
   1b3d0:	cmp	fp, r3
   1b3d4:	beq	1bae8 <sf_icode_to_fcode+0x1c80>
   1b3d8:	ldr	r9, [r4, #60]	; 0x3c
   1b3dc:	str	fp, [r4, #24]
   1b3e0:	cmp	r9, #0
   1b3e4:	streq	r9, [sp, #12]
   1b3e8:	beq	1b730 <sf_icode_to_fcode+0x18c8>
   1b3ec:	ldr	r3, [r9, #24]
   1b3f0:	cmp	fp, r3
   1b3f4:	beq	1bc00 <sf_icode_to_fcode+0x1d98>
   1b3f8:	ldr	r3, [r9, #60]	; 0x3c
   1b3fc:	str	fp, [r9, #24]
   1b400:	cmp	r3, #0
   1b404:	beq	1bc0c <sf_icode_to_fcode+0x1da4>
   1b408:	ldr	r2, [r3, #24]
   1b40c:	cmp	fp, r2
   1b410:	beq	1bc0c <sf_icode_to_fcode+0x1da4>
   1b414:	ldr	r8, [r3, #60]	; 0x3c
   1b418:	str	fp, [r3, #24]
   1b41c:	cmp	r8, #0
   1b420:	beq	1b49c <sf_icode_to_fcode+0x1634>
   1b424:	ldr	r2, [r8, #24]
   1b428:	cmp	fp, r2
   1b42c:	moveq	r8, #0
   1b430:	beq	1b49c <sf_icode_to_fcode+0x1634>
   1b434:	str	fp, [r8, #24]
   1b438:	ldr	r0, [r8, #60]	; 0x3c
   1b43c:	str	r3, [sp, #16]
   1b440:	bl	1399c <count_stmts>
   1b444:	mov	r2, r0
   1b448:	ldr	r0, [r8, #84]	; 0x54
   1b44c:	str	r2, [sp, #12]
   1b450:	bl	1399c <count_stmts>
   1b454:	ldr	r1, [r8, #4]
   1b458:	ldrd	r2, [sp, #12]
   1b45c:	cmp	r1, #0
   1b460:	add	r2, r2, r0
   1b464:	beq	1b488 <sf_icode_to_fcode+0x1620>
   1b468:	mov	lr, #0
   1b46c:	ldr	r0, [r1]
   1b470:	ldr	r1, [r1, #16]
   1b474:	cmn	r0, #1
   1b478:	addne	lr, lr, #1
   1b47c:	cmp	r1, #0
   1b480:	bne	1b46c <sf_icode_to_fcode+0x1604>
   1b484:	add	r2, r2, lr
   1b488:	ldr	r1, [r8, #28]
   1b48c:	add	r2, r2, #1
   1b490:	ldr	r8, [r8, #32]
   1b494:	add	r2, r2, r1
   1b498:	add	r8, r2, r8
   1b49c:	ldr	r1, [r3, #84]	; 0x54
   1b4a0:	cmp	r1, #0
   1b4a4:	beq	1b52c <sf_icode_to_fcode+0x16c4>
   1b4a8:	ldr	r2, [r1, #24]
   1b4ac:	cmp	fp, r2
   1b4b0:	beq	1b52c <sf_icode_to_fcode+0x16c4>
   1b4b4:	str	fp, [r1, #24]
   1b4b8:	ldr	r0, [r1, #60]	; 0x3c
   1b4bc:	str	r1, [sp, #12]
   1b4c0:	str	r3, [sp, #20]
   1b4c4:	bl	1399c <count_stmts>
   1b4c8:	ldr	r1, [sp, #12]
   1b4cc:	mov	r2, r0
   1b4d0:	str	r2, [sp, #16]
   1b4d4:	ldr	r0, [r1, #84]	; 0x54
   1b4d8:	bl	1399c <count_stmts>
   1b4dc:	add	r1, sp, #12
   1b4e0:	ldm	r1, {r1, r2, r3}
   1b4e4:	ldr	ip, [r1, #4]
   1b4e8:	add	r0, r2, r0
   1b4ec:	cmp	ip, #0
   1b4f0:	beq	1b514 <sf_icode_to_fcode+0x16ac>
   1b4f4:	mov	r2, #0
   1b4f8:	ldr	lr, [ip]
   1b4fc:	ldr	ip, [ip, #16]
   1b500:	cmn	lr, #1
   1b504:	addne	r2, r2, #1
   1b508:	cmp	ip, #0
   1b50c:	bne	1b4f8 <sf_icode_to_fcode+0x1690>
   1b510:	add	r0, r0, r2
   1b514:	ldr	ip, [r1, #28]
   1b518:	add	r2, r0, #1
   1b51c:	ldr	r1, [r1, #32]
   1b520:	add	r2, r2, ip
   1b524:	add	r2, r2, r1
   1b528:	add	r8, r8, r2
   1b52c:	ldr	r2, [r3, #4]
   1b530:	cmp	r2, #0
   1b534:	beq	1b558 <sf_icode_to_fcode+0x16f0>
   1b538:	mov	r0, #0
   1b53c:	ldr	r1, [r2]
   1b540:	ldr	r2, [r2, #16]
   1b544:	cmn	r1, #1
   1b548:	addne	r0, r0, #1
   1b54c:	cmp	r2, #0
   1b550:	bne	1b53c <sf_icode_to_fcode+0x16d4>
   1b554:	add	r8, r8, r0
   1b558:	ldrd	r2, [r3, #28]
   1b55c:	add	r8, r8, #1
   1b560:	add	r8, r8, r2
   1b564:	add	r8, r8, r3
   1b568:	ldr	r3, [r9, #84]	; 0x54
   1b56c:	cmp	r3, #0
   1b570:	beq	1b6f0 <sf_icode_to_fcode+0x1888>
   1b574:	ldr	r2, [r3, #24]
   1b578:	cmp	fp, r2
   1b57c:	beq	1b6f0 <sf_icode_to_fcode+0x1888>
   1b580:	ldr	r2, [r3, #60]	; 0x3c
   1b584:	str	fp, [r3, #24]
   1b588:	cmp	r2, #0
   1b58c:	beq	1bc34 <sf_icode_to_fcode+0x1dcc>
   1b590:	ldr	r1, [r2, #24]
   1b594:	cmp	fp, r1
   1b598:	beq	1bc34 <sf_icode_to_fcode+0x1dcc>
   1b59c:	str	fp, [r2, #24]
   1b5a0:	ldr	r0, [r2, #60]	; 0x3c
   1b5a4:	str	r2, [sp, #12]
   1b5a8:	str	r3, [sp, #20]
   1b5ac:	bl	1399c <count_stmts>
   1b5b0:	ldr	r2, [sp, #12]
   1b5b4:	mov	r1, r0
   1b5b8:	str	r1, [sp, #16]
   1b5bc:	ldr	r0, [r2, #84]	; 0x54
   1b5c0:	bl	1399c <count_stmts>
   1b5c4:	ldr	r2, [sp, #12]
   1b5c8:	ldr	r1, [sp, #16]
   1b5cc:	ldr	r3, [sp, #20]
   1b5d0:	ldr	ip, [r2, #4]
   1b5d4:	add	r0, r1, r0
   1b5d8:	cmp	ip, #0
   1b5dc:	beq	1b600 <sf_icode_to_fcode+0x1798>
   1b5e0:	mov	r1, #0
   1b5e4:	ldr	lr, [ip]
   1b5e8:	ldr	ip, [ip, #16]
   1b5ec:	cmn	lr, #1
   1b5f0:	addne	r1, r1, #1
   1b5f4:	cmp	ip, #0
   1b5f8:	bne	1b5e4 <sf_icode_to_fcode+0x177c>
   1b5fc:	add	r0, r0, r1
   1b600:	ldr	ip, [r2, #28]
   1b604:	add	r1, r0, #1
   1b608:	ldr	r2, [r2, #32]
   1b60c:	add	r1, r1, ip
   1b610:	add	r1, r1, r2
   1b614:	ldr	r2, [r3, #84]	; 0x54
   1b618:	cmp	r2, #0
   1b61c:	beq	1b6b0 <sf_icode_to_fcode+0x1848>
   1b620:	ldr	r0, [r2, #24]
   1b624:	cmp	fp, r0
   1b628:	beq	1b6b0 <sf_icode_to_fcode+0x1848>
   1b62c:	str	fp, [r2, #24]
   1b630:	ldr	r0, [r2, #60]	; 0x3c
   1b634:	strd	r2, [sp, #16]
   1b638:	str	r1, [sp, #24]
   1b63c:	bl	1399c <count_stmts>
   1b640:	ldr	r2, [sp, #16]
   1b644:	str	r0, [sp, #12]
   1b648:	ldr	r0, [r2, #84]	; 0x54
   1b64c:	bl	1399c <count_stmts>
   1b650:	ldr	r3, [sp, #12]
   1b654:	ldr	r2, [sp, #16]
   1b658:	ldr	r1, [sp, #24]
   1b65c:	add	lr, r3, r0
   1b660:	ldr	r3, [sp, #20]
   1b664:	ldr	ip, [r2, #4]
   1b668:	cmp	ip, #0
   1b66c:	beq	1b698 <sf_icode_to_fcode+0x1830>
   1b670:	mov	r0, #0
   1b674:	str	r3, [sp, #12]
   1b678:	ldr	r3, [ip]
   1b67c:	ldr	ip, [ip, #16]
   1b680:	cmn	r3, #1
   1b684:	addne	r0, r0, #1
   1b688:	cmp	ip, #0
   1b68c:	bne	1b678 <sf_icode_to_fcode+0x1810>
   1b690:	ldr	r3, [sp, #12]
   1b694:	add	lr, lr, r0
   1b698:	add	lr, lr, #1
   1b69c:	ldr	ip, [r2, #28]
   1b6a0:	ldr	r0, [r2, #32]
   1b6a4:	add	r2, lr, ip
   1b6a8:	add	r2, r2, r0
   1b6ac:	add	r1, r1, r2
   1b6b0:	ldr	r2, [r3, #4]
   1b6b4:	cmp	r2, #0
   1b6b8:	beq	1b6dc <sf_icode_to_fcode+0x1874>
   1b6bc:	mov	r0, #0
   1b6c0:	ldr	ip, [r2]
   1b6c4:	ldr	r2, [r2, #16]
   1b6c8:	cmn	ip, #1
   1b6cc:	addne	r0, r0, #1
   1b6d0:	cmp	r2, #0
   1b6d4:	bne	1b6c0 <sf_icode_to_fcode+0x1858>
   1b6d8:	add	r1, r1, r0
   1b6dc:	add	r2, r1, #1
   1b6e0:	ldrd	r0, [r3, #28]
   1b6e4:	add	r3, r2, r0
   1b6e8:	add	r3, r3, r1
   1b6ec:	add	r8, r8, r3
   1b6f0:	ldr	r3, [r9, #4]
   1b6f4:	cmp	r3, #0
   1b6f8:	beq	1b71c <sf_icode_to_fcode+0x18b4>
   1b6fc:	mov	r1, #0
   1b700:	ldr	r2, [r3]
   1b704:	ldr	r3, [r3, #16]
   1b708:	cmn	r2, #1
   1b70c:	addne	r1, r1, #1
   1b710:	cmp	r3, #0
   1b714:	bne	1b700 <sf_icode_to_fcode+0x1898>
   1b718:	add	r8, r8, r1
   1b71c:	ldrd	r2, [r9, #28]
   1b720:	add	r8, r8, #1
   1b724:	add	r9, r8, r2
   1b728:	add	r3, r9, r3
   1b72c:	str	r3, [sp, #12]
   1b730:	ldr	r8, [r4, #84]	; 0x54
   1b734:	cmp	r8, #0
   1b738:	beq	1ba98 <sf_icode_to_fcode+0x1c30>
   1b73c:	ldr	r3, [r8, #24]
   1b740:	cmp	fp, r3
   1b744:	beq	1ba98 <sf_icode_to_fcode+0x1c30>
   1b748:	ldr	r3, [r8, #60]	; 0x3c
   1b74c:	str	fp, [r8, #24]
   1b750:	cmp	r3, #0
   1b754:	beq	1bc14 <sf_icode_to_fcode+0x1dac>
   1b758:	ldr	r2, [r3, #24]
   1b75c:	cmp	fp, r2
   1b760:	beq	1bc14 <sf_icode_to_fcode+0x1dac>
   1b764:	ldr	r9, [r3, #60]	; 0x3c
   1b768:	str	fp, [r3, #24]
   1b76c:	cmp	r9, #0
   1b770:	beq	1b7ec <sf_icode_to_fcode+0x1984>
   1b774:	ldr	r2, [r9, #24]
   1b778:	cmp	fp, r2
   1b77c:	moveq	r9, #0
   1b780:	beq	1b7ec <sf_icode_to_fcode+0x1984>
   1b784:	str	fp, [r9, #24]
   1b788:	ldr	r0, [r9, #60]	; 0x3c
   1b78c:	str	r3, [sp, #20]
   1b790:	bl	1399c <count_stmts>
   1b794:	mov	r2, r0
   1b798:	ldr	r0, [r9, #84]	; 0x54
   1b79c:	str	r2, [sp, #16]
   1b7a0:	bl	1399c <count_stmts>
   1b7a4:	ldr	r1, [r9, #4]
   1b7a8:	ldrd	r2, [sp, #16]
   1b7ac:	cmp	r1, #0
   1b7b0:	add	r2, r2, r0
   1b7b4:	beq	1b7d8 <sf_icode_to_fcode+0x1970>
   1b7b8:	mov	lr, #0
   1b7bc:	ldr	r0, [r1]
   1b7c0:	ldr	r1, [r1, #16]
   1b7c4:	cmn	r0, #1
   1b7c8:	addne	lr, lr, #1
   1b7cc:	cmp	r1, #0
   1b7d0:	bne	1b7bc <sf_icode_to_fcode+0x1954>
   1b7d4:	add	r2, r2, lr
   1b7d8:	ldr	ip, [r9, #28]
   1b7dc:	add	r2, r2, #1
   1b7e0:	ldr	r1, [r9, #32]
   1b7e4:	add	r2, r2, ip
   1b7e8:	add	r9, r2, r1
   1b7ec:	ldr	r2, [r3, #84]	; 0x54
   1b7f0:	cmp	r2, #0
   1b7f4:	beq	1b880 <sf_icode_to_fcode+0x1a18>
   1b7f8:	ldr	r1, [r2, #24]
   1b7fc:	cmp	fp, r1
   1b800:	beq	1b880 <sf_icode_to_fcode+0x1a18>
   1b804:	str	fp, [r2, #24]
   1b808:	ldr	r0, [r2, #60]	; 0x3c
   1b80c:	str	r2, [sp, #16]
   1b810:	str	r3, [sp, #24]
   1b814:	bl	1399c <count_stmts>
   1b818:	ldr	r2, [sp, #16]
   1b81c:	mov	r1, r0
   1b820:	str	r1, [sp, #20]
   1b824:	ldr	r0, [r2, #84]	; 0x54
   1b828:	bl	1399c <count_stmts>
   1b82c:	ldr	r2, [sp, #16]
   1b830:	ldr	r1, [sp, #20]
   1b834:	ldr	r3, [sp, #24]
   1b838:	ldr	ip, [r2, #4]
   1b83c:	add	r1, r1, r0
   1b840:	cmp	ip, #0
   1b844:	beq	1b868 <sf_icode_to_fcode+0x1a00>
   1b848:	mov	r0, #0
   1b84c:	ldr	lr, [ip]
   1b850:	ldr	ip, [ip, #16]
   1b854:	cmn	lr, #1
   1b858:	addne	r0, r0, #1
   1b85c:	cmp	ip, #0
   1b860:	bne	1b84c <sf_icode_to_fcode+0x19e4>
   1b864:	add	r1, r1, r0
   1b868:	ldr	ip, [r2, #28]
   1b86c:	add	r1, r1, #1
   1b870:	ldr	r0, [r2, #32]
   1b874:	add	r2, r1, ip
   1b878:	add	r2, r2, r0
   1b87c:	add	r9, r9, r2
   1b880:	ldr	r2, [r3, #4]
   1b884:	cmp	r2, #0
   1b888:	beq	1b8ac <sf_icode_to_fcode+0x1a44>
   1b88c:	mov	r0, #0
   1b890:	ldr	r1, [r2]
   1b894:	ldr	r2, [r2, #16]
   1b898:	cmn	r1, #1
   1b89c:	addne	r0, r0, #1
   1b8a0:	cmp	r2, #0
   1b8a4:	bne	1b890 <sf_icode_to_fcode+0x1a28>
   1b8a8:	add	r9, r9, r0
   1b8ac:	ldr	r2, [r3, #28]
   1b8b0:	add	r9, r9, #1
   1b8b4:	ldr	r1, [r3, #32]
   1b8b8:	add	r3, r9, r2
   1b8bc:	add	r1, r3, r1
   1b8c0:	ldr	r9, [r8, #84]	; 0x54
   1b8c4:	cmp	r9, #0
   1b8c8:	beq	1ba4c <sf_icode_to_fcode+0x1be4>
   1b8cc:	ldr	r3, [r9, #24]
   1b8d0:	cmp	fp, r3
   1b8d4:	beq	1ba4c <sf_icode_to_fcode+0x1be4>
   1b8d8:	ldr	r3, [r9, #60]	; 0x3c
   1b8dc:	str	fp, [r9, #24]
   1b8e0:	cmp	r3, #0
   1b8e4:	beq	1bc3c <sf_icode_to_fcode+0x1dd4>
   1b8e8:	ldr	r2, [r3, #24]
   1b8ec:	cmp	fp, r2
   1b8f0:	beq	1bc3c <sf_icode_to_fcode+0x1dd4>
   1b8f4:	str	fp, [r3, #24]
   1b8f8:	ldr	r0, [r3, #60]	; 0x3c
   1b8fc:	str	r3, [sp, #16]
   1b900:	str	r1, [sp, #24]
   1b904:	bl	1399c <count_stmts>
   1b908:	ldr	r3, [sp, #16]
   1b90c:	mov	r2, r0
   1b910:	str	r2, [sp, #20]
   1b914:	ldr	r0, [r3, #84]	; 0x54
   1b918:	bl	1399c <count_stmts>
   1b91c:	ldr	r3, [sp, #16]
   1b920:	ldr	r2, [sp, #20]
   1b924:	ldr	r1, [sp, #24]
   1b928:	ldr	ip, [r3, #4]
   1b92c:	add	r2, r2, r0
   1b930:	cmp	ip, #0
   1b934:	beq	1b958 <sf_icode_to_fcode+0x1af0>
   1b938:	mov	r0, #0
   1b93c:	ldr	lr, [ip]
   1b940:	ldr	ip, [ip, #16]
   1b944:	cmn	lr, #1
   1b948:	addne	r0, r0, #1
   1b94c:	cmp	ip, #0
   1b950:	bne	1b93c <sf_icode_to_fcode+0x1ad4>
   1b954:	add	r2, r2, r0
   1b958:	ldr	ip, [r3, #28]
   1b95c:	add	r2, r2, #1
   1b960:	ldr	r0, [r3, #32]
   1b964:	add	r3, r2, ip
   1b968:	add	r2, r3, r0
   1b96c:	ldr	r3, [r9, #84]	; 0x54
   1b970:	cmp	r3, #0
   1b974:	beq	1ba08 <sf_icode_to_fcode+0x1ba0>
   1b978:	ldr	r0, [r3, #24]
   1b97c:	cmp	fp, r0
   1b980:	beq	1ba08 <sf_icode_to_fcode+0x1ba0>
   1b984:	str	fp, [r3, #24]
   1b988:	ldr	r0, [r3, #60]	; 0x3c
   1b98c:	str	r3, [sp, #20]
   1b990:	str	r1, [sp, #24]
   1b994:	str	r2, [sp, #28]
   1b998:	bl	1399c <count_stmts>
   1b99c:	ldr	r3, [sp, #20]
   1b9a0:	str	r0, [sp, #16]
   1b9a4:	ldr	r0, [r3, #84]	; 0x54
   1b9a8:	bl	1399c <count_stmts>
   1b9ac:	ldrd	r2, [sp, #16]
   1b9b0:	ldr	r1, [sp, #24]
   1b9b4:	ldr	ip, [r3, #4]
   1b9b8:	add	lr, r2, r0
   1b9bc:	ldr	r2, [sp, #28]
   1b9c0:	cmp	ip, #0
   1b9c4:	beq	1b9f0 <sf_icode_to_fcode+0x1b88>
   1b9c8:	mov	r0, #0
   1b9cc:	str	r3, [sp, #16]
   1b9d0:	ldr	r3, [ip]
   1b9d4:	ldr	ip, [ip, #16]
   1b9d8:	cmn	r3, #1
   1b9dc:	addne	r0, r0, #1
   1b9e0:	cmp	ip, #0
   1b9e4:	bne	1b9d0 <sf_icode_to_fcode+0x1b68>
   1b9e8:	ldr	r3, [sp, #16]
   1b9ec:	add	lr, lr, r0
   1b9f0:	add	lr, lr, #1
   1b9f4:	ldr	ip, [r3, #28]
   1b9f8:	ldr	r0, [r3, #32]
   1b9fc:	add	r3, lr, ip
   1ba00:	add	r3, r3, r0
   1ba04:	add	r2, r2, r3
   1ba08:	ldr	r3, [r9, #4]
   1ba0c:	cmp	r3, #0
   1ba10:	beq	1ba34 <sf_icode_to_fcode+0x1bcc>
   1ba14:	mov	r0, #0
   1ba18:	ldr	ip, [r3]
   1ba1c:	ldr	r3, [r3, #16]
   1ba20:	cmn	ip, #1
   1ba24:	addne	r0, r0, #1
   1ba28:	cmp	r3, #0
   1ba2c:	bne	1ba18 <sf_icode_to_fcode+0x1bb0>
   1ba30:	add	r2, r2, r0
   1ba34:	ldr	r0, [r9, #28]
   1ba38:	add	r3, r2, #1
   1ba3c:	ldr	r2, [r9, #32]
   1ba40:	add	r3, r3, r0
   1ba44:	add	r3, r3, r2
   1ba48:	add	r1, r1, r3
   1ba4c:	ldr	r3, [r8, #4]
   1ba50:	cmp	r3, #0
   1ba54:	beq	1ba78 <sf_icode_to_fcode+0x1c10>
   1ba58:	mov	r0, #0
   1ba5c:	ldr	r2, [r3]
   1ba60:	ldr	r3, [r3, #16]
   1ba64:	cmn	r2, #1
   1ba68:	addne	r0, r0, #1
   1ba6c:	cmp	r3, #0
   1ba70:	bne	1ba5c <sf_icode_to_fcode+0x1bf4>
   1ba74:	add	r1, r1, r0
   1ba78:	ldr	r0, [r8, #28]
   1ba7c:	add	r3, r1, #1
   1ba80:	ldr	r2, [r8, #32]
   1ba84:	add	r3, r3, r0
   1ba88:	add	r3, r3, r2
   1ba8c:	ldr	r2, [sp, #12]
   1ba90:	add	r3, r2, r3
   1ba94:	str	r3, [sp, #12]
   1ba98:	ldr	r3, [r4, #4]
   1ba9c:	cmp	r3, #0
   1baa0:	beq	1bacc <sf_icode_to_fcode+0x1c64>
   1baa4:	mov	r1, #0
   1baa8:	ldr	r2, [r3]
   1baac:	ldr	r3, [r3, #16]
   1bab0:	cmn	r2, #1
   1bab4:	addne	r1, r1, #1
   1bab8:	cmp	r3, #0
   1babc:	bne	1baa8 <sf_icode_to_fcode+0x1c40>
   1bac0:	ldr	r3, [sp, #12]
   1bac4:	add	r3, r3, r1
   1bac8:	str	r3, [sp, #12]
   1bacc:	ldr	r3, [sp, #12]
   1bad0:	ldr	r2, [r4, #28]
   1bad4:	add	r9, r3, #1
   1bad8:	ldr	r3, [r4, #32]
   1badc:	add	r9, r9, r2
   1bae0:	add	r9, r9, r3
   1bae4:	add	r7, r7, r9
   1bae8:	ldr	r3, [r6, #4]
   1baec:	cmp	r3, #0
   1baf0:	beq	1bb14 <sf_icode_to_fcode+0x1cac>
   1baf4:	mov	r2, #0
   1baf8:	ldr	r1, [r3]
   1bafc:	ldr	r3, [r3, #16]
   1bb00:	cmn	r1, #1
   1bb04:	addne	r2, r2, #1
   1bb08:	cmp	r3, #0
   1bb0c:	bne	1baf8 <sf_icode_to_fcode+0x1c90>
   1bb10:	add	r7, r7, r2
   1bb14:	ldrd	r2, [r6, #28]
   1bb18:	add	r7, r7, #1
   1bb1c:	add	r7, r7, r2
   1bb20:	add	r7, r7, r3
   1bb24:	add	r5, r5, r7
   1bb28:	ldr	r3, [sl, #4]
   1bb2c:	cmp	r3, #0
   1bb30:	beq	1bb54 <sf_icode_to_fcode+0x1cec>
   1bb34:	mov	r2, #0
   1bb38:	ldr	r1, [r3]
   1bb3c:	ldr	r3, [r3, #16]
   1bb40:	cmn	r1, #1
   1bb44:	addne	r2, r2, #1
   1bb48:	cmp	r3, #0
   1bb4c:	bne	1bb38 <sf_icode_to_fcode+0x1cd0>
   1bb50:	add	r5, r5, r2
   1bb54:	ldrd	r2, [sl, #28]
   1bb58:	add	r5, r5, #1
   1bb5c:	add	r5, r5, r2
   1bb60:	add	r5, r5, r3
   1bb64:	lsl	r6, r5, #3
   1bb68:	ldr	r3, [sp, #4]
   1bb6c:	mov	r1, #1
   1bb70:	mov	r0, r6
   1bb74:	str	r5, [r3]
   1bb78:	bl	ce8 <calloc@plt>
   1bb7c:	subs	r4, r0, #0
   1bb80:	beq	1bc4c <sf_icode_to_fcode+0x1de4>
   1bb84:	ldr	r3, [pc, #204]	; 1bc58 <sf_icode_to_fcode+0x1df0>
   1bb88:	add	r2, fp, #1
   1bb8c:	add	r6, r4, r6
   1bb90:	mov	r0, sl
   1bb94:	add	fp, fp, #2
   1bb98:	add	r3, pc, r3
   1bb9c:	str	r2, [r3]
   1bba0:	str	r6, [r3, #868]	; 0x364
   1bba4:	str	r4, [r3, #872]	; 0x368
   1bba8:	bl	13a4c <convert_code_r>
   1bbac:	cmp	r0, #0
   1bbb0:	mov	r0, r4
   1bbb4:	bne	1bbe4 <sf_icode_to_fcode+0x1d7c>
   1bbb8:	bl	d48 <free@plt>
   1bbbc:	ldr	r3, [sp, #8]
   1bbc0:	cmp	sl, #0
   1bbc4:	str	fp, [r3]
   1bbc8:	bne	19eb0 <sf_icode_to_fcode+0x48>
   1bbcc:	mov	r6, sl
   1bbd0:	mov	r5, sl
   1bbd4:	b	1bb68 <sf_icode_to_fcode+0x1d00>
   1bbd8:	mov	r6, #0
   1bbdc:	mov	r5, r6
   1bbe0:	b	1bb68 <sf_icode_to_fcode+0x1d00>
   1bbe4:	add	sp, sp, #36	; 0x24
   1bbe8:	ldrd	r4, [sp]
   1bbec:	ldrd	r6, [sp, #8]
   1bbf0:	ldrd	r8, [sp, #16]
   1bbf4:	ldrd	sl, [sp, #24]
   1bbf8:	add	sp, sp, #32
   1bbfc:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc00:	mov	r3, #0
   1bc04:	str	r3, [sp, #12]
   1bc08:	b	1b730 <sf_icode_to_fcode+0x18c8>
   1bc0c:	mov	r8, #0
   1bc10:	b	1b568 <sf_icode_to_fcode+0x1700>
   1bc14:	mov	r1, #0
   1bc18:	b	1b8c0 <sf_icode_to_fcode+0x1a58>
   1bc1c:	mov	r8, #0
   1bc20:	b	1b1bc <sf_icode_to_fcode+0x1354>
   1bc24:	mov	r8, #0
   1bc28:	b	1aa78 <sf_icode_to_fcode+0xc10>
   1bc2c:	mov	r1, #0
   1bc30:	b	1b268 <sf_icode_to_fcode+0x1400>
   1bc34:	mov	r1, #0
   1bc38:	b	1b614 <sf_icode_to_fcode+0x17ac>
   1bc3c:	mov	r2, #0
   1bc40:	b	1b96c <sf_icode_to_fcode+0x1b04>
   1bc44:	mov	r1, #0
   1bc48:	b	1ab24 <sf_icode_to_fcode+0xcbc>
   1bc4c:	ldr	r0, [pc, #8]	; 1bc5c <sf_icode_to_fcode+0x1df4>
   1bc50:	add	r0, pc, r0
   1bc54:	bl	2130 <sf_bpf_error>
   1bc58:	.word	0x00022b94
   1bc5c:	.word	0x00005de8

0001bc60 <sfbpf_strcasecmp>:
   1bc60:	ldr	r3, [pc, #52]	; 1bc9c <sfbpf_strcasecmp+0x3c>
   1bc64:	sub	r2, r0, #1
   1bc68:	push	{lr}		; (str lr, [sp, #-4]!)
   1bc6c:	add	r3, pc, r3
   1bc70:	b	1bc7c <sfbpf_strcasecmp+0x1c>
   1bc74:	cmp	r0, #0
   1bc78:	beq	1bc98 <sfbpf_strcasecmp+0x38>
   1bc7c:	ldrb	r0, [r2, #1]!
   1bc80:	ldrb	ip, [r1], #1
   1bc84:	ldrb	lr, [r3, r0]
   1bc88:	ldrb	ip, [r3, ip]
   1bc8c:	cmp	lr, ip
   1bc90:	beq	1bc74 <sfbpf_strcasecmp+0x14>
   1bc94:	sub	r0, lr, ip
   1bc98:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc9c:	.word	0x00005dd4

0001bca0 <pcap_next_etherent>:
   1bca0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bca4:	mov	r4, r0
   1bca8:	mov	r2, #128	; 0x80
   1bcac:	ldr	r0, [pc, #568]	; 1beec <pcap_next_etherent+0x24c>
   1bcb0:	mov	r1, #0
   1bcb4:	strd	r6, [sp, #8]
   1bcb8:	str	r8, [sp, #16]
   1bcbc:	str	lr, [sp, #20]
   1bcc0:	add	r0, pc, r0
   1bcc4:	bl	e2c <memset@plt>
   1bcc8:	bl	dd8 <__ctype_b_loc@plt>
   1bccc:	mov	r5, r0
   1bcd0:	mov	r0, r4
   1bcd4:	bl	ec8 <getc@plt>
   1bcd8:	ldr	r2, [r5]
   1bcdc:	lsl	r3, r0, #1
   1bce0:	ldrh	r3, [r2, r3]
   1bce4:	tst	r3, #8192	; 0x2000
   1bce8:	bne	1bcd0 <pcap_next_etherent+0x30>
   1bcec:	cmp	r0, #10
   1bcf0:	beq	1bcd0 <pcap_next_etherent+0x30>
   1bcf4:	tst	r3, #4096	; 0x1000
   1bcf8:	beq	1bd74 <pcap_next_etherent+0xd4>
   1bcfc:	ldr	r6, [pc, #492]	; 1bef0 <pcap_next_etherent+0x250>
   1bd00:	tst	r3, #2048	; 0x800
   1bd04:	subne	r7, r0, #48	; 0x30
   1bd08:	add	r6, pc, r6
   1bd0c:	add	r8, r6, #6
   1bd10:	bne	1bd20 <pcap_next_etherent+0x80>
   1bd14:	tst	r3, #512	; 0x200
   1bd18:	subne	r7, r0, #87	; 0x57
   1bd1c:	subeq	r7, r0, #55	; 0x37
   1bd20:	mov	r0, r4
   1bd24:	bl	ec8 <getc@plt>
   1bd28:	ldr	r2, [r5]
   1bd2c:	lsl	r3, r0, #1
   1bd30:	ldrh	r3, [r2, r3]
   1bd34:	tst	r3, #4096	; 0x1000
   1bd38:	bne	1bd98 <pcap_next_etherent+0xf8>
   1bd3c:	cmp	r0, #58	; 0x3a
   1bd40:	strb	r7, [r6], #1
   1bd44:	bne	1bdcc <pcap_next_etherent+0x12c>
   1bd48:	mov	r0, r4
   1bd4c:	bl	ec8 <getc@plt>
   1bd50:	cmp	r8, r6
   1bd54:	beq	1bdcc <pcap_next_etherent+0x12c>
   1bd58:	ldr	r2, [r5]
   1bd5c:	lsl	r3, r0, #1
   1bd60:	ldrh	r3, [r2, r3]
   1bd64:	tst	r3, #2048	; 0x800
   1bd68:	subne	r7, r0, #48	; 0x30
   1bd6c:	beq	1bd14 <pcap_next_etherent+0x74>
   1bd70:	b	1bd20 <pcap_next_etherent+0x80>
   1bd74:	mov	r0, r4
   1bd78:	bl	ec8 <getc@plt>
   1bd7c:	cmp	r0, #10
   1bd80:	cmnne	r0, #1
   1bd84:	bne	1bd74 <pcap_next_etherent+0xd4>
   1bd88:	cmn	r0, #1
   1bd8c:	bne	1bcd0 <pcap_next_etherent+0x30>
   1bd90:	mov	r0, #0
   1bd94:	b	1be8c <pcap_next_etherent+0x1ec>
   1bd98:	tst	r3, #2048	; 0x800
   1bd9c:	lsl	r7, r7, #4
   1bda0:	subne	r3, r0, #48	; 0x30
   1bda4:	bne	1bdb4 <pcap_next_etherent+0x114>
   1bda8:	tst	r3, #512	; 0x200
   1bdac:	subne	r3, r0, #87	; 0x57
   1bdb0:	subeq	r3, r0, #55	; 0x37
   1bdb4:	mov	r0, r4
   1bdb8:	orr	r7, r7, r3
   1bdbc:	bl	ec8 <getc@plt>
   1bdc0:	cmp	r0, #58	; 0x3a
   1bdc4:	strb	r7, [r6], #1
   1bdc8:	beq	1bd48 <pcap_next_etherent+0xa8>
   1bdcc:	cmn	r0, #1
   1bdd0:	beq	1bd90 <pcap_next_etherent+0xf0>
   1bdd4:	ldr	r3, [r5]
   1bdd8:	lsl	r0, r0, #1
   1bddc:	ldrh	r3, [r3, r0]
   1bde0:	tst	r3, #8192	; 0x2000
   1bde4:	bne	1bdf4 <pcap_next_etherent+0x154>
   1bde8:	b	1bea0 <pcap_next_etherent+0x200>
   1bdec:	cmp	r0, #10
   1bdf0:	beq	1bcd0 <pcap_next_etherent+0x30>
   1bdf4:	mov	r0, r4
   1bdf8:	bl	ec8 <getc@plt>
   1bdfc:	ldr	r1, [r5]
   1be00:	lsl	r2, r0, #1
   1be04:	mov	r3, r0
   1be08:	ldrh	r2, [r1, r2]
   1be0c:	tst	r2, #8192	; 0x2000
   1be10:	bne	1bdec <pcap_next_etherent+0x14c>
   1be14:	cmp	r0, #10
   1be18:	beq	1bcd0 <pcap_next_etherent+0x30>
   1be1c:	cmp	r0, #35	; 0x23
   1be20:	beq	1beb8 <pcap_next_etherent+0x218>
   1be24:	ldr	r6, [pc, #200]	; 1bef4 <pcap_next_etherent+0x254>
   1be28:	ldr	r7, [pc, #200]	; 1bef8 <pcap_next_etherent+0x258>
   1be2c:	add	r6, pc, r6
   1be30:	add	r6, r6, #6
   1be34:	add	r7, pc, r7
   1be38:	add	r7, r7, #127	; 0x7f
   1be3c:	b	1be50 <pcap_next_etherent+0x1b0>
   1be40:	cmn	r0, #1
   1be44:	beq	1bed0 <pcap_next_etherent+0x230>
   1be48:	cmp	r6, r7
   1be4c:	beq	1be74 <pcap_next_etherent+0x1d4>
   1be50:	mov	r0, r4
   1be54:	strb	r3, [r6], #1
   1be58:	bl	ec8 <getc@plt>
   1be5c:	ldr	r1, [r5]
   1be60:	lsl	r2, r0, #1
   1be64:	mov	r3, r0
   1be68:	ldrh	r2, [r1, r2]
   1be6c:	ands	r2, r2, #8192	; 0x2000
   1be70:	beq	1be40 <pcap_next_etherent+0x1a0>
   1be74:	mov	r2, #0
   1be78:	cmp	r3, #10
   1be7c:	strb	r2, [r6]
   1be80:	bne	1bed4 <pcap_next_etherent+0x234>
   1be84:	ldr	r0, [pc, #112]	; 1befc <pcap_next_etherent+0x25c>
   1be88:	add	r0, pc, r0
   1be8c:	ldrd	r4, [sp]
   1be90:	ldrd	r6, [sp, #8]
   1be94:	ldr	r8, [sp, #16]
   1be98:	add	sp, sp, #20
   1be9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bea0:	mov	r0, r4
   1bea4:	bl	ec8 <getc@plt>
   1bea8:	cmp	r0, #10
   1beac:	cmnne	r0, #1
   1beb0:	bne	1bea0 <pcap_next_etherent+0x200>
   1beb4:	b	1bd88 <pcap_next_etherent+0xe8>
   1beb8:	mov	r0, r4
   1bebc:	bl	ec8 <getc@plt>
   1bec0:	cmp	r0, #10
   1bec4:	cmnne	r0, #1
   1bec8:	bne	1beb8 <pcap_next_etherent+0x218>
   1becc:	b	1bd88 <pcap_next_etherent+0xe8>
   1bed0:	strb	r2, [r6]
   1bed4:	mov	r0, r4
   1bed8:	bl	ec8 <getc@plt>
   1bedc:	cmp	r0, #10
   1bee0:	cmnne	r0, #1
   1bee4:	bne	1bed4 <pcap_next_etherent+0x234>
   1bee8:	b	1be84 <pcap_next_etherent+0x1e4>
   1beec:	.word	0x00022df4
   1bef0:	.word	0x00022dac
   1bef4:	.word	0x00022c88
   1bef8:	.word	0x00022c80
   1befc:	.word	0x00022c2c

0001bf00 <sfbpf_parse>:
   1bf00:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bf04:	mov	r3, #0
   1bf08:	mvn	r0, #1
   1bf0c:	ldr	r2, [pc, #4064]	; 1cef4 <sfbpf_parse+0xff4>
   1bf10:	mov	r4, r3
   1bf14:	str	lr, [sp, #32]
   1bf18:	ldr	lr, [pc, #4056]	; 1cef8 <sfbpf_parse+0xff8>
   1bf1c:	strd	r6, [sp, #8]
   1bf20:	ldr	ip, [pc, #4052]	; 1cefc <sfbpf_parse+0xffc>
   1bf24:	strd	r8, [sp, #16]
   1bf28:	mov	r9, #200	; 0xc8
   1bf2c:	strd	sl, [sp, #24]
   1bf30:	sub	sp, sp, #3664	; 0xe50
   1bf34:	sub	sp, sp, #12
   1bf38:	add	lr, pc, lr
   1bf3c:	ldr	r1, [pc, #4028]	; 1cf00 <sfbpf_parse+0x1000>
   1bf40:	add	r5, sp, #72	; 0x48
   1bf44:	add	r8, sp, #472	; 0x1d8
   1bf48:	add	ip, pc, ip
   1bf4c:	mov	sl, r5
   1bf50:	str	r8, [sp, #16]
   1bf54:	sub	ip, ip, #3888	; 0xf30
   1bf58:	str	r5, [sp, #24]
   1bf5c:	sub	ip, ip, #12
   1bf60:	str	lr, [sp, #28]
   1bf64:	ldr	r6, [lr, r2]
   1bf68:	str	ip, [sp, #20]
   1bf6c:	ldr	r2, [pc, #3984]	; 1cf04 <sfbpf_parse+0x1004>
   1bf70:	str	r3, [r6]
   1bf74:	str	r6, [sp, #36]	; 0x24
   1bf78:	mov	r6, r5
   1bf7c:	ldr	r1, [lr, r1]
   1bf80:	add	r2, pc, r2
   1bf84:	add	r2, r2, #400	; 0x190
   1bf88:	str	r0, [r1]
   1bf8c:	str	r1, [sp, #12]
   1bf90:	str	r2, [sp, #32]
   1bf94:	strh	r3, [sp, #72]	; 0x48
   1bf98:	b	1c10c <sfbpf_parse+0x20c>
   1bf9c:	movw	r3, #365	; 0x16d
   1bfa0:	cmp	r0, r3
   1bfa4:	addgt	r5, r5, #2
   1bfa8:	movgt	r2, #2
   1bfac:	bgt	1bfc4 <sfbpf_parse+0xc4>
   1bfb0:	ldr	r3, [pc, #3920]	; 1cf08 <sfbpf_parse+0x1008>
   1bfb4:	add	r3, pc, r3
   1bfb8:	add	r0, r3, r0
   1bfbc:	ldrb	r2, [r0, #548]	; 0x224
   1bfc0:	add	r5, r5, r2
   1bfc4:	movw	r3, #669	; 0x29d
   1bfc8:	cmp	r5, r3
   1bfcc:	bhi	1c158 <sfbpf_parse+0x258>
   1bfd0:	ldr	r3, [pc, #3892]	; 1cf0c <sfbpf_parse+0x100c>
   1bfd4:	lsl	r5, r5, #1
   1bfd8:	add	r3, pc, r3
   1bfdc:	add	r1, r3, #916	; 0x394
   1bfe0:	ldrsh	r1, [r1, r5]
   1bfe4:	cmp	r1, r2
   1bfe8:	bne	1c158 <sfbpf_parse+0x258>
   1bfec:	add	r3, r3, #2256	; 0x8d0
   1bff0:	ldrsh	r4, [r3, r5]
   1bff4:	cmp	r4, #0
   1bff8:	mov	ip, r4
   1bffc:	rsble	r4, r4, #0
   1c000:	ble	1c170 <sfbpf_parse+0x270>
   1c004:	ldr	r1, [sp, #12]
   1c008:	mvn	r2, #1
   1c00c:	add	lr, r8, #16
   1c010:	ldr	r3, [pc, #3832]	; 1cf10 <sfbpf_parse+0x1010>
   1c014:	str	r2, [r1]
   1c018:	ldr	r2, [sp, #28]
   1c01c:	ldr	r3, [r2, r3]
   1c020:	ldrd	r0, [r3]
   1c024:	ldrd	r2, [r3, #8]
   1c028:	strd	r0, [r8, #16]
   1c02c:	mov	r8, lr
   1c030:	strd	r2, [lr, #8]
   1c034:	sub	r3, r9, #-2147483647	; 0x80000001
   1c038:	add	r6, r6, #2
   1c03c:	strh	ip, [r6]
   1c040:	lsl	r3, r3, #1
   1c044:	add	r2, sl, r3
   1c048:	cmp	r6, r2
   1c04c:	bcc	1c104 <sfbpf_parse+0x204>
   1c050:	sub	r5, r6, sl
   1c054:	movw	r2, #9999	; 0x270f
   1c058:	asr	r5, r5, #1
   1c05c:	cmp	r9, r2
   1c060:	add	r5, r5, #1
   1c064:	bhi	1d5e8 <sfbpf_parse+0x16e8>
   1c068:	add	r3, r3, #2
   1c06c:	movw	r9, #10000	; 0x2710
   1c070:	cmp	r3, r9
   1c074:	movcc	r9, r3
   1c078:	add	r0, r9, r9, lsl #3
   1c07c:	lsl	r0, r0, #1
   1c080:	add	r0, r0, #15
   1c084:	bl	dc0 <malloc@plt>
   1c088:	subs	fp, r0, #0
   1c08c:	beq	1d5e8 <sfbpf_parse+0x16e8>
   1c090:	lsl	r8, r9, #1
   1c094:	mov	r1, sl
   1c098:	str	fp, [sp, #4]
   1c09c:	lsl	r6, r5, #1
   1c0a0:	add	r7, r8, #15
   1c0a4:	lsl	r5, r5, #4
   1c0a8:	bic	r7, r7, #15
   1c0ac:	mov	r2, r6
   1c0b0:	add	r7, fp, r7
   1c0b4:	bl	d6c <memcpy@plt>
   1c0b8:	mov	r2, r5
   1c0bc:	mov	r0, r7
   1c0c0:	ldr	r1, [sp, #16]
   1c0c4:	bl	d6c <memcpy@plt>
   1c0c8:	ldr	r3, [sp, #24]
   1c0cc:	cmp	sl, r3
   1c0d0:	beq	1c0dc <sfbpf_parse+0x1dc>
   1c0d4:	mov	r0, sl
   1c0d8:	bl	d48 <free@plt>
   1c0dc:	sub	r6, r6, #2
   1c0e0:	sub	r8, r8, #2
   1c0e4:	add	r8, fp, r8
   1c0e8:	add	r6, fp, r6
   1c0ec:	cmp	r6, r8
   1c0f0:	sub	r5, r5, #16
   1c0f4:	add	r8, r7, r5
   1c0f8:	bcs	1c710 <sfbpf_parse+0x810>
   1c0fc:	mov	sl, fp
   1c100:	str	r7, [sp, #16]
   1c104:	cmp	r4, #3
   1c108:	beq	1c5d8 <sfbpf_parse+0x6d8>
   1c10c:	ldr	r3, [pc, #3584]	; 1cf14 <sfbpf_parse+0x1014>
   1c110:	lsl	r2, r4, #1
   1c114:	add	r3, pc, r3
   1c118:	ldrsh	r5, [r3, r2]
   1c11c:	cmn	r5, #198	; 0xc6
   1c120:	beq	1c158 <sfbpf_parse+0x258>
   1c124:	ldr	r3, [sp, #12]
   1c128:	ldr	r0, [r3]
   1c12c:	cmn	r0, #2
   1c130:	beq	1c5b8 <sfbpf_parse+0x6b8>
   1c134:	cmp	r0, #0
   1c138:	bgt	1bf9c <sfbpf_parse+0x9c>
   1c13c:	ldr	r1, [sp, #12]
   1c140:	mov	r3, #0
   1c144:	mov	r2, r3
   1c148:	str	r3, [r1]
   1c14c:	movw	r3, #669	; 0x29d
   1c150:	cmp	r5, r3
   1c154:	bls	1bfd0 <sfbpf_parse+0xd0>
   1c158:	ldr	r3, [pc, #3512]	; 1cf18 <sfbpf_parse+0x1018>
   1c15c:	add	r3, pc, r3
   1c160:	add	r4, r3, r4
   1c164:	ldrb	r4, [r4, #3596]	; 0xe0c
   1c168:	cmp	r4, #0
   1c16c:	beq	1d5b0 <sfbpf_parse+0x16b0>
   1c170:	ldr	r3, [pc, #3492]	; 1cf1c <sfbpf_parse+0x101c>
   1c174:	add	r7, sp, #56	; 0x38
   1c178:	sub	ip, r4, #2
   1c17c:	add	r3, pc, r3
   1c180:	add	r3, r3, r4
   1c184:	ldrb	r5, [r3, #3872]	; 0xf20
   1c188:	rsb	r3, r5, #1
   1c18c:	lsl	r3, r3, #4
   1c190:	add	lr, r8, r3
   1c194:	ldrd	r2, [r3, r8]
   1c198:	ldrd	r0, [lr, #8]
   1c19c:	ldr	fp, [lr, #12]
   1c1a0:	strd	r2, [r7]
   1c1a4:	ldr	r3, [lr, #4]
   1c1a8:	strd	r0, [r7, #8]
   1c1ac:	str	r3, [sp, #8]
   1c1b0:	ldr	r3, [lr, #8]
   1c1b4:	str	r3, [sp, #4]
   1c1b8:	cmp	ip, #200	; 0xc8
   1c1bc:	addls	pc, pc, ip, lsl #2
   1c1c0:	b	1c524 <sfbpf_parse+0x624>
   1c1c4:	b	1d38c <sfbpf_parse+0x148c>
   1c1c8:	b	1c524 <sfbpf_parse+0x624>
   1c1cc:	b	1d398 <sfbpf_parse+0x1498>
   1c1d0:	b	1c524 <sfbpf_parse+0x624>
   1c1d4:	b	1d3ac <sfbpf_parse+0x14ac>
   1c1d8:	b	1d3e0 <sfbpf_parse+0x14e0>
   1c1dc:	b	1d414 <sfbpf_parse+0x1514>
   1c1e0:	b	1d448 <sfbpf_parse+0x1548>
   1c1e4:	b	1d47c <sfbpf_parse+0x157c>
   1c1e8:	b	1d4a4 <sfbpf_parse+0x15a4>
   1c1ec:	b	1c524 <sfbpf_parse+0x624>
   1c1f0:	b	1c6cc <sfbpf_parse+0x7cc>
   1c1f4:	b	1d534 <sfbpf_parse+0x1634>
   1c1f8:	b	1d55c <sfbpf_parse+0x165c>
   1c1fc:	b	1cb70 <sfbpf_parse+0xc70>
   1c200:	b	1cb94 <sfbpf_parse+0xc94>
   1c204:	b	1c4e8 <sfbpf_parse+0x5e8>
   1c208:	b	1cbb8 <sfbpf_parse+0xcb8>
   1c20c:	b	1cbdc <sfbpf_parse+0xcdc>
   1c210:	b	1cc00 <sfbpf_parse+0xd00>
   1c214:	b	1cc30 <sfbpf_parse+0xd30>
   1c218:	b	1cc60 <sfbpf_parse+0xd60>
   1c21c:	b	1cc90 <sfbpf_parse+0xd90>
   1c220:	b	1ccb8 <sfbpf_parse+0xdb8>
   1c224:	b	1c524 <sfbpf_parse+0x624>
   1c228:	b	1cce0 <sfbpf_parse+0xde0>
   1c22c:	b	1cd14 <sfbpf_parse+0xe14>
   1c230:	b	1c6cc <sfbpf_parse+0x7cc>
   1c234:	b	1c524 <sfbpf_parse+0x624>
   1c238:	b	1c524 <sfbpf_parse+0x624>
   1c23c:	b	1c990 <sfbpf_parse+0xa90>
   1c240:	b	1c9c0 <sfbpf_parse+0xac0>
   1c244:	b	1c9dc <sfbpf_parse+0xadc>
   1c248:	b	1c698 <sfbpf_parse+0x798>
   1c24c:	b	1d4f0 <sfbpf_parse+0x15f0>
   1c250:	b	1d50c <sfbpf_parse+0x160c>
   1c254:	b	1c698 <sfbpf_parse+0x798>
   1c258:	b	1d260 <sfbpf_parse+0x1360>
   1c25c:	b	1cb14 <sfbpf_parse+0xc14>
   1c260:	b	1cb24 <sfbpf_parse+0xc24>
   1c264:	b	1cb44 <sfbpf_parse+0xc44>
   1c268:	b	1c900 <sfbpf_parse+0xa00>
   1c26c:	b	1c92c <sfbpf_parse+0xa2c>
   1c270:	b	1c944 <sfbpf_parse+0xa44>
   1c274:	b	1c964 <sfbpf_parse+0xa64>
   1c278:	b	1c680 <sfbpf_parse+0x780>
   1c27c:	b	1ceb0 <sfbpf_parse+0xfb0>
   1c280:	b	1c680 <sfbpf_parse+0x780>
   1c284:	b	1c524 <sfbpf_parse+0x624>
   1c288:	b	1ced0 <sfbpf_parse+0xfd0>
   1c28c:	b	1c638 <sfbpf_parse+0x738>
   1c290:	b	1c62c <sfbpf_parse+0x72c>
   1c294:	b	1c620 <sfbpf_parse+0x720>
   1c298:	b	1c620 <sfbpf_parse+0x720>
   1c29c:	b	1c614 <sfbpf_parse+0x714>
   1c2a0:	b	1c614 <sfbpf_parse+0x714>
   1c2a4:	b	1ce64 <sfbpf_parse+0xf64>
   1c2a8:	b	1ce70 <sfbpf_parse+0xf70>
   1c2ac:	b	1c644 <sfbpf_parse+0x744>
   1c2b0:	b	1c8cc <sfbpf_parse+0x9cc>
   1c2b4:	b	1c638 <sfbpf_parse+0x738>
   1c2b8:	b	1c62c <sfbpf_parse+0x72c>
   1c2bc:	b	1c620 <sfbpf_parse+0x720>
   1c2c0:	b	1c644 <sfbpf_parse+0x744>
   1c2c4:	b	1c614 <sfbpf_parse+0x714>
   1c2c8:	b	1c638 <sfbpf_parse+0x738>
   1c2cc:	b	1c62c <sfbpf_parse+0x72c>
   1c2d0:	b	1c620 <sfbpf_parse+0x720>
   1c2d4:	b	1c614 <sfbpf_parse+0x714>
   1c2d8:	b	1d08c <sfbpf_parse+0x118c>
   1c2dc:	b	1d098 <sfbpf_parse+0x1198>
   1c2e0:	b	1c644 <sfbpf_parse+0x744>
   1c2e4:	b	1d0a4 <sfbpf_parse+0x11a4>
   1c2e8:	b	1d05c <sfbpf_parse+0x115c>
   1c2ec:	b	1d068 <sfbpf_parse+0x1168>
   1c2f0:	b	1d074 <sfbpf_parse+0x1174>
   1c2f4:	b	1d080 <sfbpf_parse+0x1180>
   1c2f8:	b	1cffc <sfbpf_parse+0x10fc>
   1c2fc:	b	1d008 <sfbpf_parse+0x1108>
   1c300:	b	1d014 <sfbpf_parse+0x1114>
   1c304:	b	1d020 <sfbpf_parse+0x1120>
   1c308:	b	1d02c <sfbpf_parse+0x112c>
   1c30c:	b	1d038 <sfbpf_parse+0x1138>
   1c310:	b	1d044 <sfbpf_parse+0x1144>
   1c314:	b	1d050 <sfbpf_parse+0x1150>
   1c318:	b	1c7f4 <sfbpf_parse+0x8f4>
   1c31c:	b	1c800 <sfbpf_parse+0x900>
   1c320:	b	1c80c <sfbpf_parse+0x90c>
   1c324:	b	1c818 <sfbpf_parse+0x918>
   1c328:	b	1c824 <sfbpf_parse+0x924>
   1c32c:	b	1c830 <sfbpf_parse+0x930>
   1c330:	b	1c83c <sfbpf_parse+0x93c>
   1c334:	b	1c848 <sfbpf_parse+0x948>
   1c338:	b	1c854 <sfbpf_parse+0x954>
   1c33c:	b	1c860 <sfbpf_parse+0x960>
   1c340:	b	1c86c <sfbpf_parse+0x96c>
   1c344:	b	1c878 <sfbpf_parse+0x978>
   1c348:	b	1c884 <sfbpf_parse+0x984>
   1c34c:	b	1c890 <sfbpf_parse+0x990>
   1c350:	b	1c89c <sfbpf_parse+0x99c>
   1c354:	b	1cff0 <sfbpf_parse+0x10f0>
   1c358:	b	1d0cc <sfbpf_parse+0x11cc>
   1c35c:	b	1d0d8 <sfbpf_parse+0x11d8>
   1c360:	b	1d0e4 <sfbpf_parse+0x11e4>
   1c364:	b	1d0f4 <sfbpf_parse+0x11f4>
   1c368:	b	1d104 <sfbpf_parse+0x1204>
   1c36c:	b	1d114 <sfbpf_parse+0x1214>
   1c370:	b	1d124 <sfbpf_parse+0x1224>
   1c374:	b	1d13c <sfbpf_parse+0x123c>
   1c378:	b	1d14c <sfbpf_parse+0x124c>
   1c37c:	b	1d15c <sfbpf_parse+0x125c>
   1c380:	b	1d16c <sfbpf_parse+0x126c>
   1c384:	b	1d17c <sfbpf_parse+0x127c>
   1c388:	b	1d18c <sfbpf_parse+0x128c>
   1c38c:	b	1d19c <sfbpf_parse+0x129c>
   1c390:	b	1d1a8 <sfbpf_parse+0x12a8>
   1c394:	b	1c6b4 <sfbpf_parse+0x7b4>
   1c398:	b	1c6b4 <sfbpf_parse+0x7b4>
   1c39c:	b	1d250 <sfbpf_parse+0x1350>
   1c3a0:	b	1d230 <sfbpf_parse+0x1330>
   1c3a4:	b	1d240 <sfbpf_parse+0x1340>
   1c3a8:	b	1d1e4 <sfbpf_parse+0x12e4>
   1c3ac:	b	1d1f4 <sfbpf_parse+0x12f4>
   1c3b0:	b	1d204 <sfbpf_parse+0x1304>
   1c3b4:	b	1d214 <sfbpf_parse+0x1314>
   1c3b8:	b	1d288 <sfbpf_parse+0x1388>
   1c3bc:	b	1d29c <sfbpf_parse+0x139c>
   1c3c0:	b	1d2b0 <sfbpf_parse+0x13b0>
   1c3c4:	b	1c524 <sfbpf_parse+0x624>
   1c3c8:	b	1d2c0 <sfbpf_parse+0x13c0>
   1c3cc:	b	1c524 <sfbpf_parse+0x624>
   1c3d0:	b	1c7cc <sfbpf_parse+0x8cc>
   1c3d4:	b	1c720 <sfbpf_parse+0x820>
   1c3d8:	b	1c524 <sfbpf_parse+0x624>
   1c3dc:	b	1ca80 <sfbpf_parse+0xb80>
   1c3e0:	b	1cb08 <sfbpf_parse+0xc08>
   1c3e4:	b	1d5a4 <sfbpf_parse+0x16a4>
   1c3e8:	b	1d5a4 <sfbpf_parse+0x16a4>
   1c3ec:	b	1c704 <sfbpf_parse+0x804>
   1c3f0:	b	1c6f8 <sfbpf_parse+0x7f8>
   1c3f4:	b	1c6ec <sfbpf_parse+0x7ec>
   1c3f8:	b	1c704 <sfbpf_parse+0x804>
   1c3fc:	b	1c6f8 <sfbpf_parse+0x7f8>
   1c400:	b	1c6ec <sfbpf_parse+0x7ec>
   1c404:	b	1cd78 <sfbpf_parse+0xe78>
   1c408:	b	1c524 <sfbpf_parse+0x624>
   1c40c:	b	1cd88 <sfbpf_parse+0xe88>
   1c410:	b	1cda0 <sfbpf_parse+0xea0>
   1c414:	b	1cdb8 <sfbpf_parse+0xeb8>
   1c418:	b	1cdd0 <sfbpf_parse+0xed0>
   1c41c:	b	1cde8 <sfbpf_parse+0xee8>
   1c420:	b	1ce00 <sfbpf_parse+0xf00>
   1c424:	b	1ce18 <sfbpf_parse+0xf18>
   1c428:	b	1cedc <sfbpf_parse+0xfdc>
   1c42c:	b	1cfc0 <sfbpf_parse+0x10c0>
   1c430:	b	1cfd8 <sfbpf_parse+0x10d8>
   1c434:	b	1c9f8 <sfbpf_parse+0xaf8>
   1c438:	b	1ca08 <sfbpf_parse+0xb08>
   1c43c:	b	1ca14 <sfbpf_parse+0xb14>
   1c440:	b	1ca20 <sfbpf_parse+0xb20>
   1c444:	b	1ca2c <sfbpf_parse+0xb2c>
   1c448:	b	1ca38 <sfbpf_parse+0xb38>
   1c44c:	b	1ca44 <sfbpf_parse+0xb44>
   1c450:	b	1ca50 <sfbpf_parse+0xb50>
   1c454:	b	1c524 <sfbpf_parse+0x624>
   1c458:	b	1ca5c <sfbpf_parse+0xb5c>
   1c45c:	b	1ca68 <sfbpf_parse+0xb68>
   1c460:	b	1ca74 <sfbpf_parse+0xb74>
   1c464:	b	1c6c0 <sfbpf_parse+0x7c0>
   1c468:	b	1c650 <sfbpf_parse+0x750>
   1c46c:	b	1d4cc <sfbpf_parse+0x15cc>
   1c470:	b	1c65c <sfbpf_parse+0x75c>
   1c474:	b	1d4e4 <sfbpf_parse+0x15e4>
   1c478:	b	1d528 <sfbpf_parse+0x1628>
   1c47c:	b	1c8c0 <sfbpf_parse+0x9c0>
   1c480:	b	1d364 <sfbpf_parse+0x1464>
   1c484:	b	1c984 <sfbpf_parse+0xa84>
   1c488:	b	1d4d8 <sfbpf_parse+0x15d8>
   1c48c:	b	1c7c0 <sfbpf_parse+0x8c0>
   1c490:	b	1c8b4 <sfbpf_parse+0x9b4>
   1c494:	b	1c524 <sfbpf_parse+0x624>
   1c498:	b	1d0b0 <sfbpf_parse+0x11b0>
   1c49c:	b	1d370 <sfbpf_parse+0x1470>
   1c4a0:	b	1c668 <sfbpf_parse+0x768>
   1c4a4:	b	1cd48 <sfbpf_parse+0xe48>
   1c4a8:	b	1c524 <sfbpf_parse+0x624>
   1c4ac:	b	1ce7c <sfbpf_parse+0xf7c>
   1c4b0:	b	1c6c0 <sfbpf_parse+0x7c0>
   1c4b4:	b	1c650 <sfbpf_parse+0x750>
   1c4b8:	b	1c65c <sfbpf_parse+0x75c>
   1c4bc:	b	1c8a8 <sfbpf_parse+0x9a8>
   1c4c0:	b	1ce58 <sfbpf_parse+0xf58>
   1c4c4:	b	1ce4c <sfbpf_parse+0xf4c>
   1c4c8:	b	1c8f4 <sfbpf_parse+0x9f4>
   1c4cc:	b	1c524 <sfbpf_parse+0x624>
   1c4d0:	b	1ce30 <sfbpf_parse+0xf30>
   1c4d4:	b	1c8d8 <sfbpf_parse+0x9d8>
   1c4d8:	b	1c668 <sfbpf_parse+0x768>
   1c4dc:	b	1d1b4 <sfbpf_parse+0x12b4>
   1c4e0:	b	1c524 <sfbpf_parse+0x624>
   1c4e4:	b	1d330 <sfbpf_parse+0x1430>
   1c4e8:	ldr	r2, [r8, #-16]
   1c4ec:	uxtb	r3, r2
   1c4f0:	str	r2, [sp, #56]	; 0x38
   1c4f4:	cmp	r3, #3
   1c4f8:	beq	1d6d4 <sfbpf_parse+0x17d4>
   1c4fc:	cmp	r3, #7
   1c500:	beq	1d6c8 <sfbpf_parse+0x17c8>
   1c504:	cmp	r3, #5
   1c508:	beq	1d6bc <sfbpf_parse+0x17bc>
   1c50c:	cmp	r3, #6
   1c510:	beq	1d6b0 <sfbpf_parse+0x17b0>
   1c514:	mov	r1, #0
   1c518:	ldr	r0, [r8]
   1c51c:	bl	e374 <sf_gen_ncode>
   1c520:	mov	fp, r0
   1c524:	ldr	r2, [sp, #8]
   1c528:	sxth	r3, r5
   1c52c:	movw	ip, #669	; 0x29d
   1c530:	sub	r0, r8, r3, lsl #4
   1c534:	sub	r6, r6, r3, lsl #1
   1c538:	ldr	r1, [pc, #2528]	; 1cf20 <sfbpf_parse+0x1020>
   1c53c:	add	r8, r0, #16
   1c540:	str	r2, [sp, #60]	; 0x3c
   1c544:	ldr	r2, [sp, #4]
   1c548:	add	r1, pc, r1
   1c54c:	add	r4, r1, r4
   1c550:	ldrb	lr, [r4, #4080]	; 0xff0
   1c554:	str	r2, [sp, #64]	; 0x40
   1c558:	str	fp, [sp, #68]	; 0x44
   1c55c:	ldrd	r2, [r7]
   1c560:	sub	lr, lr, #126	; 0x7e
   1c564:	lsl	lr, lr, #1
   1c568:	strd	r2, [r0, #16]
   1c56c:	ldrd	r2, [r7, #8]
   1c570:	strd	r2, [r8, #8]
   1c574:	ldr	r3, [sp, #20]
   1c578:	ldrsh	r2, [r6]
   1c57c:	ldrsh	r3, [r3, lr]
   1c580:	add	r3, r3, r2
   1c584:	cmp	r3, ip
   1c588:	bhi	1c5a0 <sfbpf_parse+0x6a0>
   1c58c:	lsl	r3, r3, #1
   1c590:	add	r0, r1, #916	; 0x394
   1c594:	ldrsh	r0, [r0, r3]
   1c598:	cmp	r0, r2
   1c59c:	beq	1c5c8 <sfbpf_parse+0x6c8>
   1c5a0:	ldr	r3, [pc, #2428]	; 1cf24 <sfbpf_parse+0x1024>
   1c5a4:	add	r3, pc, r3
   1c5a8:	sub	r3, r3, #3808	; 0xee0
   1c5ac:	ldrsh	ip, [r3, lr]
   1c5b0:	mov	r4, ip
   1c5b4:	b	1c034 <sfbpf_parse+0x134>
   1c5b8:	bl	1dc08 <sfbpf_lex>
   1c5bc:	ldr	r3, [sp, #12]
   1c5c0:	str	r0, [r3]
   1c5c4:	b	1c134 <sfbpf_parse+0x234>
   1c5c8:	add	r1, r1, #2256	; 0x8d0
   1c5cc:	ldrsh	ip, [r1, r3]
   1c5d0:	mov	r4, ip
   1c5d4:	b	1c034 <sfbpf_parse+0x134>
   1c5d8:	ldr	r2, [sp, #24]
   1c5dc:	cmp	sl, r2
   1c5e0:	movne	r4, #0
   1c5e4:	strne	sl, [sp, #4]
   1c5e8:	bne	1c714 <sfbpf_parse+0x814>
   1c5ec:	mov	r4, #0
   1c5f0:	mov	r0, r4
   1c5f4:	add	sp, sp, #3664	; 0xe50
   1c5f8:	add	sp, sp, #12
   1c5fc:	ldrd	r4, [sp]
   1c600:	ldrd	r6, [sp, #8]
   1c604:	ldrd	r8, [sp, #16]
   1c608:	ldrd	sl, [sp, #24]
   1c60c:	add	sp, sp, #32
   1c610:	pop	{pc}		; (ldr pc, [sp], #4)
   1c614:	mov	r3, #4
   1c618:	str	r3, [sp, #56]	; 0x38
   1c61c:	b	1c524 <sfbpf_parse+0x624>
   1c620:	mov	r3, #3
   1c624:	str	r3, [sp, #56]	; 0x38
   1c628:	b	1c524 <sfbpf_parse+0x624>
   1c62c:	mov	r3, #2
   1c630:	str	r3, [sp, #56]	; 0x38
   1c634:	b	1c524 <sfbpf_parse+0x624>
   1c638:	mov	r3, #1
   1c63c:	str	r3, [sp, #56]	; 0x38
   1c640:	b	1c524 <sfbpf_parse+0x624>
   1c644:	mov	r3, #7
   1c648:	str	r3, [sp, #56]	; 0x38
   1c64c:	b	1c524 <sfbpf_parse+0x624>
   1c650:	mov	r3, #23
   1c654:	str	r3, [sp, #56]	; 0x38
   1c658:	b	1c524 <sfbpf_parse+0x624>
   1c65c:	mov	r3, #24
   1c660:	str	r3, [sp, #56]	; 0x38
   1c664:	b	1c524 <sfbpf_parse+0x624>
   1c668:	ldr	r3, [pc, #2232]	; 1cf28 <sfbpf_parse+0x1028>
   1c66c:	ldr	fp, [r8, #-4]
   1c670:	add	r3, pc, r3
   1c674:	ldr	r3, [r3, #4076]	; 0xfec
   1c678:	str	r3, [sp, #56]	; 0x38
   1c67c:	b	1c524 <sfbpf_parse+0x624>
   1c680:	ldr	r3, [pc, #2212]	; 1cf2c <sfbpf_parse+0x102c>
   1c684:	ldr	fp, [r8, #12]
   1c688:	add	r3, pc, r3
   1c68c:	ldr	r3, [r3, #4076]	; 0xfec
   1c690:	str	r3, [sp, #56]	; 0x38
   1c694:	b	1c524 <sfbpf_parse+0x624>
   1c698:	ldr	r2, [r8, #-16]
   1c69c:	mov	r1, #0
   1c6a0:	ldr	r3, [r8]
   1c6a4:	strb	r3, [sp, #56]	; 0x38
   1c6a8:	strb	r2, [sp, #57]	; 0x39
   1c6ac:	strb	r1, [sp, #58]	; 0x3a
   1c6b0:	b	1c524 <sfbpf_parse+0x624>
   1c6b4:	ldr	r3, [r8]
   1c6b8:	str	r3, [sp, #56]	; 0x38
   1c6bc:	b	1c524 <sfbpf_parse+0x624>
   1c6c0:	mov	r3, #22
   1c6c4:	str	r3, [sp, #56]	; 0x38
   1c6c8:	b	1c524 <sfbpf_parse+0x624>
   1c6cc:	ldr	r3, [r8, #-16]
   1c6d0:	mov	r0, #0
   1c6d4:	ldr	r1, [r8]
   1c6d8:	mov	r2, r3
   1c6dc:	str	r3, [sp, #56]	; 0x38
   1c6e0:	bl	e374 <sf_gen_ncode>
   1c6e4:	mov	fp, r0
   1c6e8:	b	1c524 <sfbpf_parse+0x624>
   1c6ec:	mov	r3, #16
   1c6f0:	str	r3, [sp, #56]	; 0x38
   1c6f4:	b	1c524 <sfbpf_parse+0x624>
   1c6f8:	mov	r3, #48	; 0x30
   1c6fc:	str	r3, [sp, #56]	; 0x38
   1c700:	b	1c524 <sfbpf_parse+0x624>
   1c704:	mov	r3, #32
   1c708:	str	r3, [sp, #56]	; 0x38
   1c70c:	b	1c524 <sfbpf_parse+0x624>
   1c710:	mov	r4, #1
   1c714:	ldr	r0, [sp, #4]
   1c718:	bl	d48 <free@plt>
   1c71c:	b	1c5f0 <sfbpf_parse+0x6f0>
   1c720:	ldr	r0, [pc, #2056]	; 1cf30 <sfbpf_parse+0x1030>
   1c724:	mov	r2, #0
   1c728:	str	r5, [sp, #40]	; 0x28
   1c72c:	mov	r5, r2
   1c730:	ldr	r3, [pc, #2044]	; 1cf34 <sfbpf_parse+0x1034>
   1c734:	str	fp, [sp, #44]	; 0x2c
   1c738:	str	r4, [sp, #48]	; 0x30
   1c73c:	add	r0, pc, r0
   1c740:	str	r6, [sp, #52]	; 0x34
   1c744:	cmp	r0, #0
   1c748:	ldr	r4, [r8]
   1c74c:	add	r3, pc, r3
   1c750:	ldr	fp, [sp, #32]
   1c754:	beq	1c7b4 <sfbpf_parse+0x8b4>
   1c758:	mov	r6, r3
   1c75c:	b	1c770 <sfbpf_parse+0x870>
   1c760:	add	r6, r6, #8
   1c764:	ldr	r0, [r6, #4]
   1c768:	cmp	r0, #0
   1c76c:	beq	1c7b4 <sfbpf_parse+0x8b4>
   1c770:	mov	r1, r4
   1c774:	bl	1bc60 <sfbpf_strcasecmp>
   1c778:	cmp	r0, #0
   1c77c:	bne	1c760 <sfbpf_parse+0x860>
   1c780:	ldr	r3, [r6]
   1c784:	cmn	r3, #1
   1c788:	str	r3, [sp, #56]	; 0x38
   1c78c:	bne	1d578 <sfbpf_parse+0x1678>
   1c790:	add	r5, r5, #1
   1c794:	add	r3, fp, r5, lsl #3
   1c798:	ldr	r3, [r3, #4]
   1c79c:	cmp	r3, #0
   1c7a0:	beq	1d324 <sfbpf_parse+0x1424>
   1c7a4:	ldr	r0, [r3, #4]
   1c7a8:	ldr	r4, [r8]
   1c7ac:	cmp	r0, #0
   1c7b0:	bne	1c758 <sfbpf_parse+0x858>
   1c7b4:	mvn	r3, #0
   1c7b8:	str	r3, [sp, #56]	; 0x38
   1c7bc:	b	1c790 <sfbpf_parse+0x890>
   1c7c0:	mov	r3, #51	; 0x33
   1c7c4:	str	r3, [sp, #8]
   1c7c8:	b	1c524 <sfbpf_parse+0x624>
   1c7cc:	ldr	r3, [r8, #-32]	; 0xffffffe0
   1c7d0:	cmp	r3, #0
   1c7d4:	beq	1d67c <sfbpf_parse+0x177c>
   1c7d8:	cmp	r3, #4
   1c7dc:	beq	1d610 <sfbpf_parse+0x1710>
   1c7e0:	cmp	r3, #8
   1c7e4:	beq	1d694 <sfbpf_parse+0x1794>
   1c7e8:	ldr	r0, [pc, #1864]	; 1cf38 <sfbpf_parse+0x1038>
   1c7ec:	add	r0, pc, r0
   1c7f0:	bl	2130 <sf_bpf_error>
   1c7f4:	mov	r3, #18
   1c7f8:	str	r3, [sp, #56]	; 0x38
   1c7fc:	b	1c524 <sfbpf_parse+0x624>
   1c800:	mov	r3, #19
   1c804:	str	r3, [sp, #56]	; 0x38
   1c808:	b	1c524 <sfbpf_parse+0x624>
   1c80c:	mov	r3, #20
   1c810:	str	r3, [sp, #56]	; 0x38
   1c814:	b	1c524 <sfbpf_parse+0x624>
   1c818:	mov	r3, #24
   1c81c:	str	r3, [sp, #56]	; 0x38
   1c820:	b	1c524 <sfbpf_parse+0x624>
   1c824:	mov	r3, #25
   1c828:	str	r3, [sp, #56]	; 0x38
   1c82c:	b	1c524 <sfbpf_parse+0x624>
   1c830:	mov	r3, #26
   1c834:	str	r3, [sp, #56]	; 0x38
   1c838:	b	1c524 <sfbpf_parse+0x624>
   1c83c:	mov	r3, #31
   1c840:	str	r3, [sp, #56]	; 0x38
   1c844:	b	1c524 <sfbpf_parse+0x624>
   1c848:	mov	r3, #32
   1c84c:	str	r3, [sp, #56]	; 0x38
   1c850:	b	1c524 <sfbpf_parse+0x624>
   1c854:	mov	r3, #33	; 0x21
   1c858:	str	r3, [sp, #56]	; 0x38
   1c85c:	b	1c524 <sfbpf_parse+0x624>
   1c860:	mov	r3, #39	; 0x27
   1c864:	str	r3, [sp, #56]	; 0x38
   1c868:	b	1c524 <sfbpf_parse+0x624>
   1c86c:	mov	r3, #36	; 0x24
   1c870:	str	r3, [sp, #56]	; 0x38
   1c874:	b	1c524 <sfbpf_parse+0x624>
   1c878:	mov	r3, #38	; 0x26
   1c87c:	str	r3, [sp, #56]	; 0x38
   1c880:	b	1c524 <sfbpf_parse+0x624>
   1c884:	mov	r3, #37	; 0x25
   1c888:	str	r3, [sp, #56]	; 0x38
   1c88c:	b	1c524 <sfbpf_parse+0x624>
   1c890:	mov	r3, #27
   1c894:	str	r3, [sp, #56]	; 0x38
   1c898:	b	1c524 <sfbpf_parse+0x624>
   1c89c:	mov	r3, #28
   1c8a0:	str	r3, [sp, #56]	; 0x38
   1c8a4:	b	1c524 <sfbpf_parse+0x624>
   1c8a8:	mov	r3, #1
   1c8ac:	str	r3, [sp, #4]
   1c8b0:	b	1c524 <sfbpf_parse+0x624>
   1c8b4:	mov	r3, #52	; 0x34
   1c8b8:	str	r3, [sp, #8]
   1c8bc:	b	1c524 <sfbpf_parse+0x624>
   1c8c0:	mov	r3, #28
   1c8c4:	str	r3, [sp, #56]	; 0x38
   1c8c8:	b	1c524 <sfbpf_parse+0x624>
   1c8cc:	mov	r3, #8
   1c8d0:	str	r3, [sp, #56]	; 0x38
   1c8d4:	b	1c524 <sfbpf_parse+0x624>
   1c8d8:	mov	r3, #1
   1c8dc:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1c8e0:	ldr	r2, [r8, #-16]
   1c8e4:	ldr	r1, [r8]
   1c8e8:	bl	1268c <sf_gen_mtp3field_code>
   1c8ec:	mov	fp, r0
   1c8f0:	b	1c524 <sfbpf_parse+0x624>
   1c8f4:	mov	r3, #4
   1c8f8:	str	r3, [sp, #4]
   1c8fc:	b	1c524 <sfbpf_parse+0x624>
   1c900:	mov	r3, #1
   1c904:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1c908:	ldr	r0, [r8, #-16]
   1c90c:	ldr	r2, [r8]
   1c910:	bl	f548 <sf_gen_relation>
   1c914:	ldr	r3, [pc, #1568]	; 1cf3c <sfbpf_parse+0x103c>
   1c918:	mov	fp, r0
   1c91c:	add	r3, pc, r3
   1c920:	ldr	r3, [r3, #4076]	; 0xfec
   1c924:	str	r3, [sp, #56]	; 0x38
   1c928:	b	1c524 <sfbpf_parse+0x624>
   1c92c:	ldr	r3, [pc, #1548]	; 1cf40 <sfbpf_parse+0x1040>
   1c930:	ldr	fp, [r8]
   1c934:	add	r3, pc, r3
   1c938:	ldr	r3, [r3, #4076]	; 0xfec
   1c93c:	str	r3, [sp, #56]	; 0x38
   1c940:	b	1c524 <sfbpf_parse+0x624>
   1c944:	ldr	r0, [r8]
   1c948:	bl	12128 <sf_gen_atmtype_abbrev>
   1c94c:	ldr	r3, [pc, #1520]	; 1cf44 <sfbpf_parse+0x1044>
   1c950:	mov	fp, r0
   1c954:	add	r3, pc, r3
   1c958:	ldr	r3, [r3, #4076]	; 0xfec
   1c95c:	str	r3, [sp, #56]	; 0x38
   1c960:	b	1c524 <sfbpf_parse+0x624>
   1c964:	ldr	r0, [r8]
   1c968:	bl	12930 <sf_gen_atmmulti_abbrev>
   1c96c:	ldr	r3, [pc, #1492]	; 1cf48 <sfbpf_parse+0x1048>
   1c970:	mov	fp, r0
   1c974:	add	r3, pc, r3
   1c978:	ldr	r3, [r3, #4076]	; 0xfec
   1c97c:	str	r3, [sp, #56]	; 0x38
   1c980:	b	1c524 <sfbpf_parse+0x624>
   1c984:	mov	r3, #70	; 0x46
   1c988:	str	r3, [sp, #56]	; 0x38
   1c98c:	b	1c524 <sfbpf_parse+0x624>
   1c990:	ldr	fp, [r8, #12]
   1c994:	mov	r0, fp
   1c998:	bl	bcd8 <sf_gen_not>
   1c99c:	ldrd	r2, [r8]
   1c9a0:	ldrd	r0, [r8, #8]
   1c9a4:	strd	r2, [r7]
   1c9a8:	ldr	r3, [r8, #4]
   1c9ac:	strd	r0, [r7, #8]
   1c9b0:	str	r3, [sp, #8]
   1c9b4:	ldr	r3, [r8, #8]
   1c9b8:	str	r3, [sp, #4]
   1c9bc:	b	1c524 <sfbpf_parse+0x624>
   1c9c0:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1c9c4:	ldr	r2, [r8, #-16]
   1c9c8:	ldr	r3, [r8]
   1c9cc:	strb	r3, [sp, #56]	; 0x38
   1c9d0:	strb	r1, [sp, #57]	; 0x39
   1c9d4:	strb	r2, [sp, #58]	; 0x3a
   1c9d8:	b	1c524 <sfbpf_parse+0x624>
   1c9dc:	ldr	r2, [r8, #-16]
   1c9e0:	mov	r1, #0
   1c9e4:	ldr	r3, [r8]
   1c9e8:	strb	r1, [sp, #56]	; 0x38
   1c9ec:	strb	r2, [sp, #57]	; 0x39
   1c9f0:	strb	r3, [sp, #58]	; 0x3a
   1c9f4:	b	1c524 <sfbpf_parse+0x624>
   1c9f8:	ldr	r0, [r8]
   1c9fc:	bl	ff7c <sf_gen_neg>
   1ca00:	str	r0, [sp, #56]	; 0x38
   1ca04:	b	1c524 <sfbpf_parse+0x624>
   1ca08:	ldr	r3, [r8, #-16]
   1ca0c:	str	r3, [sp, #56]	; 0x38
   1ca10:	b	1c524 <sfbpf_parse+0x624>
   1ca14:	bl	f810 <sf_gen_loadlen>
   1ca18:	str	r0, [sp, #56]	; 0x38
   1ca1c:	b	1c524 <sfbpf_parse+0x624>
   1ca20:	mov	r3, #38	; 0x26
   1ca24:	str	r3, [sp, #56]	; 0x38
   1ca28:	b	1c524 <sfbpf_parse+0x624>
   1ca2c:	mov	r3, #124	; 0x7c
   1ca30:	str	r3, [sp, #56]	; 0x38
   1ca34:	b	1c524 <sfbpf_parse+0x624>
   1ca38:	mov	r3, #60	; 0x3c
   1ca3c:	str	r3, [sp, #56]	; 0x38
   1ca40:	b	1c524 <sfbpf_parse+0x624>
   1ca44:	mov	r3, #62	; 0x3e
   1ca48:	str	r3, [sp, #56]	; 0x38
   1ca4c:	b	1c524 <sfbpf_parse+0x624>
   1ca50:	mov	r3, #61	; 0x3d
   1ca54:	str	r3, [sp, #56]	; 0x38
   1ca58:	b	1c524 <sfbpf_parse+0x624>
   1ca5c:	ldr	r3, [r8, #-16]
   1ca60:	str	r3, [sp, #56]	; 0x38
   1ca64:	b	1c524 <sfbpf_parse+0x624>
   1ca68:	mov	r3, #30
   1ca6c:	str	r3, [sp, #56]	; 0x38
   1ca70:	b	1c524 <sfbpf_parse+0x624>
   1ca74:	mov	r3, #31
   1ca78:	str	r3, [sp, #56]	; 0x38
   1ca7c:	b	1c524 <sfbpf_parse+0x624>
   1ca80:	ldr	r1, [pc, #1220]	; 1cf4c <sfbpf_parse+0x104c>
   1ca84:	ldr	r3, [r8]
   1ca88:	add	r1, pc, r1
   1ca8c:	mov	r0, r3
   1ca90:	str	r3, [sp, #40]	; 0x28
   1ca94:	bl	1bc60 <sfbpf_strcasecmp>
   1ca98:	cmp	r0, #0
   1ca9c:	streq	r0, [sp, #56]	; 0x38
   1caa0:	beq	1c524 <sfbpf_parse+0x624>
   1caa4:	ldr	r1, [pc, #1188]	; 1cf50 <sfbpf_parse+0x1050>
   1caa8:	ldr	r0, [sp, #40]	; 0x28
   1caac:	add	r1, pc, r1
   1cab0:	bl	1bc60 <sfbpf_strcasecmp>
   1cab4:	cmp	r0, #0
   1cab8:	moveq	r3, #1
   1cabc:	streq	r3, [sp, #56]	; 0x38
   1cac0:	beq	1c524 <sfbpf_parse+0x624>
   1cac4:	ldr	r1, [pc, #1160]	; 1cf54 <sfbpf_parse+0x1054>
   1cac8:	ldr	r0, [sp, #40]	; 0x28
   1cacc:	add	r1, pc, r1
   1cad0:	bl	1bc60 <sfbpf_strcasecmp>
   1cad4:	cmp	r0, #0
   1cad8:	moveq	r3, #2
   1cadc:	streq	r3, [sp, #56]	; 0x38
   1cae0:	beq	1c524 <sfbpf_parse+0x624>
   1cae4:	ldr	r1, [pc, #1132]	; 1cf58 <sfbpf_parse+0x1058>
   1cae8:	ldr	r0, [sp, #40]	; 0x28
   1caec:	add	r1, pc, r1
   1caf0:	bl	1bc60 <sfbpf_strcasecmp>
   1caf4:	cmp	r0, #0
   1caf8:	bne	1d6a4 <sfbpf_parse+0x17a4>
   1cafc:	mov	r3, #3
   1cb00:	str	r3, [sp, #56]	; 0x38
   1cb04:	b	1c524 <sfbpf_parse+0x624>
   1cb08:	ldr	r3, [r8]
   1cb0c:	str	r3, [sp, #56]	; 0x38
   1cb10:	b	1c524 <sfbpf_parse+0x624>
   1cb14:	ldr	r3, [r8, #-32]	; 0xffffffe0
   1cb18:	ldr	fp, [r8, #-4]
   1cb1c:	str	r3, [sp, #56]	; 0x38
   1cb20:	b	1c524 <sfbpf_parse+0x624>
   1cb24:	ldr	r0, [r8]
   1cb28:	bl	bcec <sf_gen_proto_abbrev>
   1cb2c:	ldr	r3, [pc, #1064]	; 1cf5c <sfbpf_parse+0x105c>
   1cb30:	mov	fp, r0
   1cb34:	add	r3, pc, r3
   1cb38:	ldr	r3, [r3, #4076]	; 0xfec
   1cb3c:	str	r3, [sp, #56]	; 0x38
   1cb40:	b	1c524 <sfbpf_parse+0x624>
   1cb44:	mov	r3, #0
   1cb48:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1cb4c:	ldr	r0, [r8, #-16]
   1cb50:	ldr	r2, [r8]
   1cb54:	bl	f548 <sf_gen_relation>
   1cb58:	ldr	r3, [pc, #1024]	; 1cf60 <sfbpf_parse+0x1060>
   1cb5c:	mov	fp, r0
   1cb60:	add	r3, pc, r3
   1cb64:	ldr	r3, [r3, #4076]	; 0xfec
   1cb68:	str	r3, [sp, #56]	; 0x38
   1cb6c:	b	1c524 <sfbpf_parse+0x624>
   1cb70:	ldr	ip, [r8, #-48]	; 0xffffffd0
   1cb74:	mov	r1, #0
   1cb78:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1cb7c:	ldr	r2, [r8]
   1cb80:	mov	r3, ip
   1cb84:	str	ip, [sp, #56]	; 0x38
   1cb88:	bl	e25c <sf_gen_mcode>
   1cb8c:	mov	fp, r0
   1cb90:	b	1c524 <sfbpf_parse+0x624>
   1cb94:	ldr	ip, [r8, #-48]	; 0xffffffd0
   1cb98:	mov	r2, #0
   1cb9c:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1cba0:	ldr	r1, [r8]
   1cba4:	mov	r3, ip
   1cba8:	str	ip, [sp, #56]	; 0x38
   1cbac:	bl	e25c <sf_gen_mcode>
   1cbb0:	mov	fp, r0
   1cbb4:	b	1c524 <sfbpf_parse+0x624>
   1cbb8:	ldr	ip, [r8, #-48]	; 0xffffffd0
   1cbbc:	mov	r1, #0
   1cbc0:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1cbc4:	ldr	r2, [r8]
   1cbc8:	mov	r3, ip
   1cbcc:	str	ip, [sp, #56]	; 0x38
   1cbd0:	bl	e62c <sf_gen_mcode6>
   1cbd4:	mov	fp, r0
   1cbd8:	b	1c524 <sfbpf_parse+0x624>
   1cbdc:	ldr	ip, [r8, #-16]
   1cbe0:	mov	r2, #128	; 0x80
   1cbe4:	mov	r1, #0
   1cbe8:	ldr	r0, [r8]
   1cbec:	mov	r3, ip
   1cbf0:	str	ip, [sp, #56]	; 0x38
   1cbf4:	bl	e62c <sf_gen_mcode6>
   1cbf8:	mov	fp, r0
   1cbfc:	b	1c524 <sfbpf_parse+0x624>
   1cc00:	ldr	r3, [r8, #-16]
   1cc04:	ldr	r2, [r8]
   1cc08:	mov	r1, r3
   1cc0c:	mov	r0, r2
   1cc10:	str	r2, [sp, #40]	; 0x28
   1cc14:	str	r3, [sp, #56]	; 0x38
   1cc18:	bl	e818 <sf_gen_ecode>
   1cc1c:	ldr	r2, [sp, #40]	; 0x28
   1cc20:	mov	fp, r0
   1cc24:	mov	r0, r2
   1cc28:	bl	d48 <free@plt>
   1cc2c:	b	1c524 <sfbpf_parse+0x624>
   1cc30:	ldr	r3, [r8, #-16]
   1cc34:	ldr	r2, [r8]
   1cc38:	mov	r1, r3
   1cc3c:	mov	r0, r2
   1cc40:	str	r2, [sp, #40]	; 0x28
   1cc44:	str	r3, [sp, #56]	; 0x38
   1cc48:	bl	1165c <sf_gen_acode>
   1cc4c:	ldr	r2, [sp, #40]	; 0x28
   1cc50:	mov	fp, r0
   1cc54:	mov	r0, r2
   1cc58:	bl	d48 <free@plt>
   1cc5c:	b	1c524 <sfbpf_parse+0x624>
   1cc60:	ldr	fp, [r8, #12]
   1cc64:	mov	r0, fp
   1cc68:	bl	bcd8 <sf_gen_not>
   1cc6c:	ldrd	r2, [r8]
   1cc70:	ldrd	r0, [r8, #8]
   1cc74:	strd	r2, [r7]
   1cc78:	ldr	r3, [r8, #4]
   1cc7c:	strd	r0, [r7, #8]
   1cc80:	str	r3, [sp, #8]
   1cc84:	ldr	r3, [r8, #8]
   1cc88:	str	r3, [sp, #4]
   1cc8c:	b	1c524 <sfbpf_parse+0x624>
   1cc90:	ldrd	r2, [r8, #-16]
   1cc94:	ldrd	r0, [r8, #-8]
   1cc98:	ldr	fp, [r8, #-4]
   1cc9c:	strd	r2, [r7]
   1cca0:	ldr	r3, [r8, #-12]
   1cca4:	strd	r0, [r7, #8]
   1cca8:	str	r3, [sp, #8]
   1ccac:	ldr	r3, [r8, #-8]
   1ccb0:	str	r3, [sp, #4]
   1ccb4:	b	1c524 <sfbpf_parse+0x624>
   1ccb8:	ldrd	r2, [r8, #-16]
   1ccbc:	ldrd	r0, [r8, #-8]
   1ccc0:	ldr	fp, [r8, #-4]
   1ccc4:	strd	r2, [r7]
   1ccc8:	ldr	r3, [r8, #-12]
   1cccc:	strd	r0, [r7, #8]
   1ccd0:	str	r3, [sp, #8]
   1ccd4:	ldr	r3, [r8, #-8]
   1ccd8:	str	r3, [sp, #4]
   1ccdc:	b	1c524 <sfbpf_parse+0x624>
   1cce0:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cce4:	ldr	fp, [r8, #12]
   1cce8:	mov	r1, fp
   1ccec:	bl	7884 <sf_gen_and>
   1ccf0:	ldrd	r2, [r8]
   1ccf4:	ldrd	r0, [r8, #8]
   1ccf8:	strd	r2, [r7]
   1ccfc:	ldr	r3, [r8, #4]
   1cd00:	strd	r0, [r7, #8]
   1cd04:	str	r3, [sp, #8]
   1cd08:	ldr	r3, [r8, #8]
   1cd0c:	str	r3, [sp, #4]
   1cd10:	b	1c524 <sfbpf_parse+0x624>
   1cd14:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cd18:	ldr	fp, [r8, #12]
   1cd1c:	mov	r1, fp
   1cd20:	bl	823c <sf_gen_or>
   1cd24:	ldrd	r2, [r8]
   1cd28:	ldrd	r0, [r8, #8]
   1cd2c:	strd	r2, [r7]
   1cd30:	ldr	r3, [r8, #4]
   1cd34:	strd	r0, [r7, #8]
   1cd38:	str	r3, [sp, #8]
   1cd3c:	ldr	r3, [r8, #8]
   1cd40:	str	r3, [sp, #4]
   1cd44:	b	1c524 <sfbpf_parse+0x624>
   1cd48:	ldr	r3, [r8, #-12]
   1cd4c:	str	r3, [sp, #8]
   1cd50:	sub	r3, r3, #51	; 0x33
   1cd54:	cmp	r3, #1
   1cd58:	bhi	1c524 <sfbpf_parse+0x624>
   1cd5c:	mov	r3, #0
   1cd60:	mov	r2, #16
   1cd64:	ldr	r1, [r8]
   1cd68:	ldr	r0, [sp, #8]
   1cd6c:	bl	11fc4 <sf_gen_atmfield_code>
   1cd70:	mov	fp, r0
   1cd74:	b	1c524 <sfbpf_parse+0x624>
   1cd78:	ldr	r0, [r8]
   1cd7c:	bl	fbbc <sf_gen_loadi>
   1cd80:	str	r0, [sp, #56]	; 0x38
   1cd84:	b	1c524 <sfbpf_parse+0x624>
   1cd88:	mov	r2, #1
   1cd8c:	ldr	r0, [r8, #-48]	; 0xffffffd0
   1cd90:	ldr	r1, [r8, #-16]
   1cd94:	bl	e9e8 <sf_gen_load>
   1cd98:	str	r0, [sp, #56]	; 0x38
   1cd9c:	b	1c524 <sfbpf_parse+0x624>
   1cda0:	ldr	r0, [r8, #-80]	; 0xffffffb0
   1cda4:	ldr	r1, [r8, #-48]	; 0xffffffd0
   1cda8:	ldr	r2, [r8, #-16]
   1cdac:	bl	e9e8 <sf_gen_load>
   1cdb0:	str	r0, [sp, #56]	; 0x38
   1cdb4:	b	1c524 <sfbpf_parse+0x624>
   1cdb8:	mov	r0, #0
   1cdbc:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1cdc0:	ldr	r2, [r8]
   1cdc4:	bl	100c8 <sf_gen_arth>
   1cdc8:	str	r0, [sp, #56]	; 0x38
   1cdcc:	b	1c524 <sfbpf_parse+0x624>
   1cdd0:	mov	r0, #16
   1cdd4:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1cdd8:	ldr	r2, [r8]
   1cddc:	bl	100c8 <sf_gen_arth>
   1cde0:	str	r0, [sp, #56]	; 0x38
   1cde4:	b	1c524 <sfbpf_parse+0x624>
   1cde8:	mov	r0, #32
   1cdec:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1cdf0:	ldr	r2, [r8]
   1cdf4:	bl	100c8 <sf_gen_arth>
   1cdf8:	str	r0, [sp, #56]	; 0x38
   1cdfc:	b	1c524 <sfbpf_parse+0x624>
   1ce00:	mov	r0, #48	; 0x30
   1ce04:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1ce08:	ldr	r2, [r8]
   1ce0c:	bl	100c8 <sf_gen_arth>
   1ce10:	str	r0, [sp, #56]	; 0x38
   1ce14:	b	1c524 <sfbpf_parse+0x624>
   1ce18:	mov	r0, #80	; 0x50
   1ce1c:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1ce20:	ldr	r2, [r8]
   1ce24:	bl	100c8 <sf_gen_arth>
   1ce28:	str	r0, [sp, #56]	; 0x38
   1ce2c:	b	1c524 <sfbpf_parse+0x624>
   1ce30:	mov	r3, #0
   1ce34:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1ce38:	ldr	r2, [r8, #-16]
   1ce3c:	ldr	r1, [r8]
   1ce40:	bl	1268c <sf_gen_mtp3field_code>
   1ce44:	mov	fp, r0
   1ce48:	b	1c524 <sfbpf_parse+0x624>
   1ce4c:	mov	r3, #3
   1ce50:	str	r3, [sp, #4]
   1ce54:	b	1c524 <sfbpf_parse+0x624>
   1ce58:	mov	r3, #2
   1ce5c:	str	r3, [sp, #4]
   1ce60:	b	1c524 <sfbpf_parse+0x624>
   1ce64:	mov	r3, #5
   1ce68:	str	r3, [sp, #56]	; 0x38
   1ce6c:	b	1c524 <sfbpf_parse+0x624>
   1ce70:	mov	r3, #6
   1ce74:	str	r3, [sp, #56]	; 0x38
   1ce78:	b	1c524 <sfbpf_parse+0x624>
   1ce7c:	ldr	r0, [r8, #-20]	; 0xffffffec
   1ce80:	ldr	fp, [r8, #12]
   1ce84:	mov	r1, fp
   1ce88:	bl	823c <sf_gen_or>
   1ce8c:	ldrd	r2, [r8]
   1ce90:	ldrd	r0, [r8, #8]
   1ce94:	strd	r2, [r7]
   1ce98:	ldr	r3, [r8, #4]
   1ce9c:	strd	r0, [r7, #8]
   1cea0:	str	r3, [sp, #8]
   1cea4:	ldr	r3, [r8, #8]
   1cea8:	str	r3, [sp, #4]
   1ceac:	b	1c524 <sfbpf_parse+0x624>
   1ceb0:	ldr	r0, [r8]
   1ceb4:	bl	12404 <sf_gen_mtp2type_abbrev>
   1ceb8:	ldr	r3, [pc, #164]	; 1cf64 <sfbpf_parse+0x1064>
   1cebc:	mov	fp, r0
   1cec0:	add	r3, pc, r3
   1cec4:	ldr	r3, [r3, #4076]	; 0xfec
   1cec8:	str	r3, [sp, #56]	; 0x38
   1cecc:	b	1c524 <sfbpf_parse+0x624>
   1ced0:	mov	r3, #0
   1ced4:	str	r3, [sp, #56]	; 0x38
   1ced8:	b	1c524 <sfbpf_parse+0x624>
   1cedc:	mov	r0, #64	; 0x40
   1cee0:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1cee4:	ldr	r2, [r8]
   1cee8:	bl	100c8 <sf_gen_arth>
   1ceec:	str	r0, [sp, #56]	; 0x38
   1cef0:	b	1c524 <sfbpf_parse+0x624>
   1cef4:	.word	0x000000c8
   1cef8:	.word	0x000220c0
   1cefc:	.word	0x00007bf0
   1cf00:	.word	0x000000b0
   1cf04:	.word	0x00021de0
   1cf08:	.word	0x00005b8c
   1cf0c:	.word	0x00005b68
   1cf10:	.word	0x000000f0
   1cf14:	.word	0x00005a2c
   1cf18:	.word	0x000059e4
   1cf1c:	.word	0x000059c4
   1cf20:	.word	0x000055f8
   1cf24:	.word	0x00007594
   1cf28:	.word	0x000054d0
   1cf2c:	.word	0x000054b8
   1cf30:	.word	0x00006578
   1cf34:	.word	0x00021614
   1cf38:	.word	0x0000659c
   1cf3c:	.word	0x00005224
   1cf40:	.word	0x0000520c
   1cf44:	.word	0x000051ec
   1cf48:	.word	0x000051cc
   1cf4c:	.word	0x00006330
   1cf50:	.word	0x00006314
   1cf54:	.word	0x000062fc
   1cf58:	.word	0x000062e4
   1cf5c:	.word	0x0000500c
   1cf60:	.word	0x00004fe0
   1cf64:	.word	0x00004c80
   1cf68:	.word	0x00020a8c
   1cf6c:	.word	0x00005b40
   1cf70:	.word	0x00005a44
   1cf74:	.word	0x000047a4
   1cf78:	.word	0x000207dc
   1cf7c:	.word	0x00003e64
   1cf80:	.word	0x00021578
   1cf84:	.word	0x000056f8
   1cf88:	.word	0x0000356c
   1cf8c:	.word	0x00021540
   1cf90:	.word	0x000057f8
   1cf94:	.word	0x00003548
   1cf98:	.word	0x0002074c
   1cf9c:	.word	0x00005728
   1cfa0:	.word	0x000206d8
   1cfa4:	.word	0x00005628
   1cfa8:	.word	0x000206c8
   1cfac:	.word	0x00005730
   1cfb0:	.word	0x0000568c
   1cfb4:	.word	0x0000565c
   1cfb8:	.word	0x00005628
   1cfbc:	.word	0x000055f8
   1cfc0:	mov	r0, #96	; 0x60
   1cfc4:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1cfc8:	ldr	r2, [r8]
   1cfcc:	bl	100c8 <sf_gen_arth>
   1cfd0:	str	r0, [sp, #56]	; 0x38
   1cfd4:	b	1c524 <sfbpf_parse+0x624>
   1cfd8:	mov	r0, #112	; 0x70
   1cfdc:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1cfe0:	ldr	r2, [r8]
   1cfe4:	bl	100c8 <sf_gen_arth>
   1cfe8:	str	r0, [sp, #56]	; 0x38
   1cfec:	b	1c524 <sfbpf_parse+0x624>
   1cff0:	mov	r3, #29
   1cff4:	str	r3, [sp, #56]	; 0x38
   1cff8:	b	1c524 <sfbpf_parse+0x624>
   1cffc:	mov	r3, #11
   1d000:	str	r3, [sp, #56]	; 0x38
   1d004:	b	1c524 <sfbpf_parse+0x624>
   1d008:	mov	r3, #23
   1d00c:	str	r3, [sp, #56]	; 0x38
   1d010:	b	1c524 <sfbpf_parse+0x624>
   1d014:	mov	r3, #12
   1d018:	str	r3, [sp, #56]	; 0x38
   1d01c:	b	1c524 <sfbpf_parse+0x624>
   1d020:	mov	r3, #13
   1d024:	str	r3, [sp, #56]	; 0x38
   1d028:	b	1c524 <sfbpf_parse+0x624>
   1d02c:	mov	r3, #14
   1d030:	str	r3, [sp, #56]	; 0x38
   1d034:	b	1c524 <sfbpf_parse+0x624>
   1d038:	mov	r3, #16
   1d03c:	str	r3, [sp, #56]	; 0x38
   1d040:	b	1c524 <sfbpf_parse+0x624>
   1d044:	mov	r3, #15
   1d048:	str	r3, [sp, #56]	; 0x38
   1d04c:	b	1c524 <sfbpf_parse+0x624>
   1d050:	mov	r3, #17
   1d054:	str	r3, [sp, #56]	; 0x38
   1d058:	b	1c524 <sfbpf_parse+0x624>
   1d05c:	mov	r3, #9
   1d060:	str	r3, [sp, #56]	; 0x38
   1d064:	b	1c524 <sfbpf_parse+0x624>
   1d068:	mov	r3, #10
   1d06c:	str	r3, [sp, #56]	; 0x38
   1d070:	b	1c524 <sfbpf_parse+0x624>
   1d074:	mov	r3, #21
   1d078:	str	r3, [sp, #56]	; 0x38
   1d07c:	b	1c524 <sfbpf_parse+0x624>
   1d080:	mov	r3, #22
   1d084:	str	r3, [sp, #56]	; 0x38
   1d088:	b	1c524 <sfbpf_parse+0x624>
   1d08c:	mov	r3, #5
   1d090:	str	r3, [sp, #56]	; 0x38
   1d094:	b	1c524 <sfbpf_parse+0x624>
   1d098:	mov	r3, #6
   1d09c:	str	r3, [sp, #56]	; 0x38
   1d0a0:	b	1c524 <sfbpf_parse+0x624>
   1d0a4:	mov	r3, #8
   1d0a8:	str	r3, [sp, #56]	; 0x38
   1d0ac:	b	1c524 <sfbpf_parse+0x624>
   1d0b0:	mov	r3, #0
   1d0b4:	ldr	r0, [r8, #-28]	; 0xffffffe4
   1d0b8:	ldr	r2, [r8, #-16]
   1d0bc:	ldr	r1, [r8]
   1d0c0:	bl	11fc4 <sf_gen_atmfield_code>
   1d0c4:	mov	fp, r0
   1d0c8:	b	1c524 <sfbpf_parse+0x624>
   1d0cc:	mov	r3, #30
   1d0d0:	str	r3, [sp, #56]	; 0x38
   1d0d4:	b	1c524 <sfbpf_parse+0x624>
   1d0d8:	mov	r3, #40	; 0x28
   1d0dc:	str	r3, [sp, #56]	; 0x38
   1d0e0:	b	1c524 <sfbpf_parse+0x624>
   1d0e4:	ldr	r0, [r8, #-16]
   1d0e8:	bl	108d4 <sf_gen_broadcast>
   1d0ec:	str	r0, [sp, #56]	; 0x38
   1d0f0:	b	1c524 <sfbpf_parse+0x624>
   1d0f4:	ldr	r0, [r8, #-16]
   1d0f8:	bl	10d18 <sf_gen_multicast>
   1d0fc:	str	r0, [sp, #56]	; 0x38
   1d100:	b	1c524 <sfbpf_parse+0x624>
   1d104:	ldr	r0, [r8]
   1d108:	bl	10630 <sf_gen_less>
   1d10c:	str	r0, [sp, #56]	; 0x38
   1d110:	b	1c524 <sfbpf_parse+0x624>
   1d114:	ldr	r0, [r8]
   1d118:	bl	104c4 <sf_gen_greater>
   1d11c:	str	r0, [sp, #56]	; 0x38
   1d120:	b	1c524 <sfbpf_parse+0x624>
   1d124:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1d128:	ldr	r0, [r8, #-16]
   1d12c:	ldr	r2, [r8]
   1d130:	bl	107ac <sf_gen_byteop>
   1d134:	str	r0, [sp, #56]	; 0x38
   1d138:	b	1c524 <sfbpf_parse+0x624>
   1d13c:	mov	r0, #0
   1d140:	bl	1115c <sf_gen_inbound>
   1d144:	str	r0, [sp, #56]	; 0x38
   1d148:	b	1c524 <sfbpf_parse+0x624>
   1d14c:	mov	r0, #1
   1d150:	bl	1115c <sf_gen_inbound>
   1d154:	str	r0, [sp, #56]	; 0x38
   1d158:	b	1c524 <sfbpf_parse+0x624>
   1d15c:	ldr	r0, [r8]
   1d160:	bl	118b0 <sf_gen_vlan>
   1d164:	str	r0, [sp, #56]	; 0x38
   1d168:	b	1c524 <sfbpf_parse+0x624>
   1d16c:	mvn	r0, #0
   1d170:	bl	118b0 <sf_gen_vlan>
   1d174:	str	r0, [sp, #56]	; 0x38
   1d178:	b	1c524 <sfbpf_parse+0x624>
   1d17c:	ldr	r0, [r8]
   1d180:	bl	11b70 <sf_gen_mpls>
   1d184:	str	r0, [sp, #56]	; 0x38
   1d188:	b	1c524 <sfbpf_parse+0x624>
   1d18c:	mvn	r0, #0
   1d190:	bl	11b70 <sf_gen_mpls>
   1d194:	str	r0, [sp, #56]	; 0x38
   1d198:	b	1c524 <sfbpf_parse+0x624>
   1d19c:	bl	11e64 <sf_gen_pppoed>
   1d1a0:	str	r0, [sp, #56]	; 0x38
   1d1a4:	b	1c524 <sfbpf_parse+0x624>
   1d1a8:	bl	11efc <sf_gen_pppoes>
   1d1ac:	str	r0, [sp, #56]	; 0x38
   1d1b0:	b	1c524 <sfbpf_parse+0x624>
   1d1b4:	ldr	r3, [r8, #-8]
   1d1b8:	str	r3, [sp, #4]
   1d1bc:	sub	r3, r3, #1
   1d1c0:	cmp	r3, #3
   1d1c4:	bhi	1c524 <sfbpf_parse+0x624>
   1d1c8:	mov	r3, #0
   1d1cc:	mov	r2, #16
   1d1d0:	ldr	r1, [r8]
   1d1d4:	ldr	r0, [sp, #4]
   1d1d8:	bl	1268c <sf_gen_mtp3field_code>
   1d1dc:	mov	fp, r0
   1d1e0:	b	1c524 <sfbpf_parse+0x624>
   1d1e4:	ldr	r0, [r8]
   1d1e8:	bl	1135c <sf_gen_pf_srnr>
   1d1ec:	str	r0, [sp, #56]	; 0x38
   1d1f0:	b	1c524 <sfbpf_parse+0x624>
   1d1f4:	ldr	r0, [r8]
   1d1f8:	bl	11374 <sf_gen_pf_reason>
   1d1fc:	str	r0, [sp, #56]	; 0x38
   1d200:	b	1c524 <sfbpf_parse+0x624>
   1d204:	ldr	r0, [r8]
   1d208:	bl	1138c <sf_gen_pf_action>
   1d20c:	str	r0, [sp, #56]	; 0x38
   1d210:	b	1c524 <sfbpf_parse+0x624>
   1d214:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1d218:	mov	r1, #252	; 0xfc
   1d21c:	ldr	r3, [r8]
   1d220:	orr	r0, r0, r3
   1d224:	bl	113a4 <sf_gen_p80211_type>
   1d228:	str	r0, [sp, #56]	; 0x38
   1d22c:	b	1c524 <sfbpf_parse+0x624>
   1d230:	ldr	r0, [r8]
   1d234:	bl	1132c <sf_gen_pf_ruleset>
   1d238:	str	r0, [sp, #56]	; 0x38
   1d23c:	b	1c524 <sfbpf_parse+0x624>
   1d240:	ldr	r0, [r8]
   1d244:	bl	11344 <sf_gen_pf_rnr>
   1d248:	str	r0, [sp, #56]	; 0x38
   1d24c:	b	1c524 <sfbpf_parse+0x624>
   1d250:	ldr	r0, [r8]
   1d254:	bl	11314 <sf_gen_pf_ifname>
   1d258:	str	r0, [sp, #56]	; 0x38
   1d25c:	b	1c524 <sfbpf_parse+0x624>
   1d260:	ldrd	r2, [r8]
   1d264:	ldrd	r0, [r8, #8]
   1d268:	ldr	fp, [r8, #12]
   1d26c:	strd	r2, [r7]
   1d270:	ldr	r3, [r8, #4]
   1d274:	strd	r0, [r7, #8]
   1d278:	str	r3, [sp, #8]
   1d27c:	ldr	r3, [r8, #8]
   1d280:	str	r3, [sp, #4]
   1d284:	b	1c524 <sfbpf_parse+0x624>
   1d288:	mov	r1, #12
   1d28c:	ldr	r0, [r8]
   1d290:	bl	113a4 <sf_gen_p80211_type>
   1d294:	str	r0, [sp, #56]	; 0x38
   1d298:	b	1c524 <sfbpf_parse+0x624>
   1d29c:	mov	r1, #252	; 0xfc
   1d2a0:	ldr	r0, [r8]
   1d2a4:	bl	113a4 <sf_gen_p80211_type>
   1d2a8:	str	r0, [sp, #56]	; 0x38
   1d2ac:	b	1c524 <sfbpf_parse+0x624>
   1d2b0:	ldr	r0, [r8]
   1d2b4:	bl	11504 <sf_gen_p80211_fcdir>
   1d2b8:	str	r0, [sp, #56]	; 0x38
   1d2bc:	b	1c524 <sfbpf_parse+0x624>
   1d2c0:	ldr	r3, [pc, #-864]	; 1cf68 <sfbpf_parse+0x1068>
   1d2c4:	str	r5, [sp, #40]	; 0x28
   1d2c8:	ldr	r0, [pc, #-868]	; 1cf6c <sfbpf_parse+0x106c>
   1d2cc:	str	r4, [sp, #44]	; 0x2c
   1d2d0:	ldr	r2, [r8]
   1d2d4:	add	r3, pc, r3
   1d2d8:	add	r3, r3, #352	; 0x160
   1d2dc:	add	r0, pc, r0
   1d2e0:	mov	r4, r3
   1d2e4:	mov	r5, r2
   1d2e8:	b	1d2fc <sfbpf_parse+0x13fc>
   1d2ec:	add	r4, r4, #8
   1d2f0:	ldr	r0, [r4, #4]
   1d2f4:	cmp	r0, #0
   1d2f8:	beq	1d324 <sfbpf_parse+0x1424>
   1d2fc:	mov	r1, r5
   1d300:	bl	1bc60 <sfbpf_strcasecmp>
   1d304:	cmp	r0, #0
   1d308:	bne	1d2ec <sfbpf_parse+0x13ec>
   1d30c:	ldr	r3, [r4]
   1d310:	ldr	r5, [sp, #40]	; 0x28
   1d314:	ldr	r4, [sp, #44]	; 0x2c
   1d318:	cmn	r3, #1
   1d31c:	str	r3, [sp, #56]	; 0x38
   1d320:	bne	1c524 <sfbpf_parse+0x624>
   1d324:	ldr	r0, [pc, #-956]	; 1cf70 <sfbpf_parse+0x1070>
   1d328:	add	r0, pc, r0
   1d32c:	bl	2130 <sf_bpf_error>
   1d330:	ldr	r0, [r8, #-20]	; 0xffffffec
   1d334:	ldr	fp, [r8, #12]
   1d338:	mov	r1, fp
   1d33c:	bl	823c <sf_gen_or>
   1d340:	ldrd	r2, [r8]
   1d344:	ldr	r1, [r8, #4]
   1d348:	strd	r2, [r7]
   1d34c:	ldr	r3, [r8, #8]
   1d350:	str	r1, [sp, #8]
   1d354:	ldrd	r0, [r8, #8]
   1d358:	str	r3, [sp, #4]
   1d35c:	strd	r0, [r7, #8]
   1d360:	b	1c524 <sfbpf_parse+0x624>
   1d364:	mov	r3, #29
   1d368:	str	r3, [sp, #56]	; 0x38
   1d36c:	b	1c524 <sfbpf_parse+0x624>
   1d370:	mov	r3, #1
   1d374:	ldr	r0, [r8, #-28]	; 0xffffffe4
   1d378:	ldr	r2, [r8, #-16]
   1d37c:	ldr	r1, [r8]
   1d380:	bl	11fc4 <sf_gen_atmfield_code>
   1d384:	mov	fp, r0
   1d388:	b	1c524 <sfbpf_parse+0x624>
   1d38c:	ldr	r0, [r8, #12]
   1d390:	bl	6e90 <sf_finish_parse>
   1d394:	b	1c524 <sfbpf_parse+0x624>
   1d398:	ldr	r3, [pc, #-1068]	; 1cf74 <sfbpf_parse+0x1074>
   1d39c:	add	r3, pc, r3
   1d3a0:	ldr	r3, [r3, #4076]	; 0xfec
   1d3a4:	str	r3, [sp, #56]	; 0x38
   1d3a8:	b	1c524 <sfbpf_parse+0x624>
   1d3ac:	ldr	r0, [r8, #-20]	; 0xffffffec
   1d3b0:	ldr	fp, [r8, #12]
   1d3b4:	mov	r1, fp
   1d3b8:	bl	7884 <sf_gen_and>
   1d3bc:	ldrd	r2, [r8]
   1d3c0:	ldrd	r0, [r8, #8]
   1d3c4:	strd	r2, [r7]
   1d3c8:	ldr	r3, [r8, #4]
   1d3cc:	strd	r0, [r7, #8]
   1d3d0:	str	r3, [sp, #8]
   1d3d4:	ldr	r3, [r8, #8]
   1d3d8:	str	r3, [sp, #4]
   1d3dc:	b	1c524 <sfbpf_parse+0x624>
   1d3e0:	ldr	r0, [r8, #-20]	; 0xffffffec
   1d3e4:	ldr	fp, [r8, #12]
   1d3e8:	mov	r1, fp
   1d3ec:	bl	7884 <sf_gen_and>
   1d3f0:	ldrd	r2, [r8]
   1d3f4:	ldrd	r0, [r8, #8]
   1d3f8:	strd	r2, [r7]
   1d3fc:	ldr	r3, [r8, #4]
   1d400:	strd	r0, [r7, #8]
   1d404:	str	r3, [sp, #8]
   1d408:	ldr	r3, [r8, #8]
   1d40c:	str	r3, [sp, #4]
   1d410:	b	1c524 <sfbpf_parse+0x624>
   1d414:	ldr	r0, [r8, #-20]	; 0xffffffec
   1d418:	ldr	fp, [r8, #12]
   1d41c:	mov	r1, fp
   1d420:	bl	823c <sf_gen_or>
   1d424:	ldrd	r2, [r8]
   1d428:	ldrd	r0, [r8, #8]
   1d42c:	strd	r2, [r7]
   1d430:	ldr	r3, [r8, #4]
   1d434:	strd	r0, [r7, #8]
   1d438:	str	r3, [sp, #8]
   1d43c:	ldr	r3, [r8, #8]
   1d440:	str	r3, [sp, #4]
   1d444:	b	1c524 <sfbpf_parse+0x624>
   1d448:	ldr	r0, [r8, #-20]	; 0xffffffec
   1d44c:	ldr	fp, [r8, #12]
   1d450:	mov	r1, fp
   1d454:	bl	823c <sf_gen_or>
   1d458:	ldrd	r2, [r8]
   1d45c:	ldrd	r0, [r8, #8]
   1d460:	strd	r2, [r7]
   1d464:	ldr	r3, [r8, #4]
   1d468:	strd	r0, [r7, #8]
   1d46c:	str	r3, [sp, #8]
   1d470:	ldr	r3, [r8, #8]
   1d474:	str	r3, [sp, #4]
   1d478:	b	1c524 <sfbpf_parse+0x624>
   1d47c:	ldrd	r2, [r8, #-16]
   1d480:	ldrd	r0, [r8, #-8]
   1d484:	ldr	fp, [r8, #-4]
   1d488:	strd	r2, [r7]
   1d48c:	ldr	r3, [r8, #-12]
   1d490:	strd	r0, [r7, #8]
   1d494:	str	r3, [sp, #8]
   1d498:	ldr	r3, [r8, #-8]
   1d49c:	str	r3, [sp, #4]
   1d4a0:	b	1c524 <sfbpf_parse+0x624>
   1d4a4:	ldrd	r2, [r8, #-16]
   1d4a8:	ldrd	r0, [r8, #-8]
   1d4ac:	ldr	fp, [r8, #-4]
   1d4b0:	strd	r2, [r7]
   1d4b4:	ldr	r3, [r8, #-12]
   1d4b8:	strd	r0, [r7, #8]
   1d4bc:	str	r3, [sp, #8]
   1d4c0:	ldr	r3, [r8, #-8]
   1d4c4:	str	r3, [sp, #4]
   1d4c8:	b	1c524 <sfbpf_parse+0x624>
   1d4cc:	mov	r3, #25
   1d4d0:	str	r3, [sp, #56]	; 0x38
   1d4d4:	b	1c524 <sfbpf_parse+0x624>
   1d4d8:	mov	r3, #71	; 0x47
   1d4dc:	str	r3, [sp, #56]	; 0x38
   1d4e0:	b	1c524 <sfbpf_parse+0x624>
   1d4e4:	mov	r3, #26
   1d4e8:	str	r3, [sp, #56]	; 0x38
   1d4ec:	b	1c524 <sfbpf_parse+0x624>
   1d4f0:	ldr	r3, [r8, #-16]
   1d4f4:	mov	r2, #0
   1d4f8:	mov	r1, #5
   1d4fc:	strb	r1, [sp, #56]	; 0x38
   1d500:	strb	r3, [sp, #57]	; 0x39
   1d504:	strb	r2, [sp, #58]	; 0x3a
   1d508:	b	1c524 <sfbpf_parse+0x624>
   1d50c:	ldr	r3, [r8, #-16]
   1d510:	mov	r2, #0
   1d514:	mov	r1, #6
   1d518:	strb	r1, [sp, #56]	; 0x38
   1d51c:	strb	r3, [sp, #57]	; 0x39
   1d520:	strb	r2, [sp, #58]	; 0x3a
   1d524:	b	1c524 <sfbpf_parse+0x624>
   1d528:	mov	r3, #27
   1d52c:	str	r3, [sp, #56]	; 0x38
   1d530:	b	1c524 <sfbpf_parse+0x624>
   1d534:	ldrd	r2, [r8, #-16]
   1d538:	ldrd	r0, [r8, #-8]
   1d53c:	ldr	fp, [r8, #-4]
   1d540:	strd	r2, [r7]
   1d544:	ldr	r3, [r8, #-12]
   1d548:	strd	r0, [r7, #8]
   1d54c:	str	r3, [sp, #8]
   1d550:	ldr	r3, [r8, #-8]
   1d554:	str	r3, [sp, #4]
   1d558:	b	1c524 <sfbpf_parse+0x624>
   1d55c:	ldr	r3, [r8, #-16]
   1d560:	ldr	r0, [r8]
   1d564:	mov	r1, r3
   1d568:	str	r3, [sp, #56]	; 0x38
   1d56c:	bl	d9ac <sf_gen_scode>
   1d570:	mov	fp, r0
   1d574:	b	1c524 <sfbpf_parse+0x624>
   1d578:	ldr	r2, [pc, #-1544]	; 1cf78 <sfbpf_parse+0x1078>
   1d57c:	ldr	fp, [sp, #44]	; 0x2c
   1d580:	ldr	r4, [sp, #48]	; 0x30
   1d584:	add	r2, pc, r2
   1d588:	add	r2, r2, r5, lsl #3
   1d58c:	ldr	r5, [sp, #40]	; 0x28
   1d590:	ldr	r2, [r2, #400]	; 0x190
   1d594:	ldr	r6, [sp, #52]	; 0x34
   1d598:	orr	r3, r2, r3
   1d59c:	str	r3, [sp, #56]	; 0x38
   1d5a0:	b	1c524 <sfbpf_parse+0x624>
   1d5a4:	ldr	r0, [pc, #-1584]	; 1cf7c <sfbpf_parse+0x107c>
   1d5a8:	add	r0, pc, r0
   1d5ac:	bl	2130 <sf_bpf_error>
   1d5b0:	ldr	ip, [pc, #-1592]	; 1cf80 <sfbpf_parse+0x1080>
   1d5b4:	ldr	lr, [sp, #36]	; 0x24
   1d5b8:	ldr	r1, [pc, #-1596]	; 1cf84 <sfbpf_parse+0x1084>
   1d5bc:	add	ip, pc, ip
   1d5c0:	ldr	r3, [ip]
   1d5c4:	ldr	r2, [lr]
   1d5c8:	add	r1, pc, r1
   1d5cc:	ldr	r0, [pc, #-1612]	; 1cf88 <sfbpf_parse+0x1088>
   1d5d0:	add	r3, r3, #1
   1d5d4:	add	r2, r2, #1
   1d5d8:	str	r3, [ip]
   1d5dc:	add	r0, pc, r0
   1d5e0:	str	r2, [lr]
   1d5e4:	bl	2130 <sf_bpf_error>
   1d5e8:	ldr	r2, [pc, #-1636]	; 1cf8c <sfbpf_parse+0x108c>
   1d5ec:	ldr	r1, [pc, #-1636]	; 1cf90 <sfbpf_parse+0x1090>
   1d5f0:	ldr	r0, [pc, #-1636]	; 1cf94 <sfbpf_parse+0x1094>
   1d5f4:	add	r2, pc, r2
   1d5f8:	ldr	r3, [r2]
   1d5fc:	add	r1, pc, r1
   1d600:	add	r0, pc, r0
   1d604:	add	r3, r3, #1
   1d608:	str	r3, [r2]
   1d60c:	bl	2130 <sf_bpf_error>
   1d610:	ldr	r3, [pc, #-1664]	; 1cf98 <sfbpf_parse+0x1098>
   1d614:	add	r3, pc, r3
   1d618:	add	r3, r3, #168	; 0xa8
   1d61c:	ldr	r2, [r8]
   1d620:	ldr	r0, [r3, #4]
   1d624:	str	r5, [sp, #40]	; 0x28
   1d628:	mov	r5, r2
   1d62c:	str	r4, [sp, #44]	; 0x2c
   1d630:	mov	r4, r3
   1d634:	b	1d648 <sfbpf_parse+0x1748>
   1d638:	add	r4, r4, #8
   1d63c:	ldr	r0, [r4, #4]
   1d640:	cmp	r0, #0
   1d644:	beq	1d670 <sfbpf_parse+0x1770>
   1d648:	mov	r1, r5
   1d64c:	bl	1bc60 <sfbpf_strcasecmp>
   1d650:	cmp	r0, #0
   1d654:	bne	1d638 <sfbpf_parse+0x1738>
   1d658:	ldr	r3, [r4]
   1d65c:	ldr	r5, [sp, #40]	; 0x28
   1d660:	ldr	r4, [sp, #44]	; 0x2c
   1d664:	cmn	r3, #1
   1d668:	str	r3, [sp, #56]	; 0x38
   1d66c:	bne	1c524 <sfbpf_parse+0x624>
   1d670:	ldr	r0, [pc, #-1756]	; 1cf9c <sfbpf_parse+0x109c>
   1d674:	add	r0, pc, r0
   1d678:	bl	2130 <sf_bpf_error>
   1d67c:	ldr	r3, [pc, #-1764]	; 1cfa0 <sfbpf_parse+0x10a0>
   1d680:	ldr	r0, [pc, #-1764]	; 1cfa4 <sfbpf_parse+0x10a4>
   1d684:	ldr	r2, [r8]
   1d688:	add	r3, pc, r3
   1d68c:	add	r0, pc, r0
   1d690:	b	1d624 <sfbpf_parse+0x1724>
   1d694:	ldr	r3, [pc, #-1780]	; 1cfa8 <sfbpf_parse+0x10a8>
   1d698:	add	r3, pc, r3
   1d69c:	add	r3, r3, #224	; 0xe0
   1d6a0:	b	1d61c <sfbpf_parse+0x171c>
   1d6a4:	ldr	r0, [pc, #-1792]	; 1cfac <sfbpf_parse+0x10ac>
   1d6a8:	add	r0, pc, r0
   1d6ac:	bl	2130 <sf_bpf_error>
   1d6b0:	ldr	r0, [pc, #-1800]	; 1cfb0 <sfbpf_parse+0x10b0>
   1d6b4:	add	r0, pc, r0
   1d6b8:	bl	2130 <sf_bpf_error>
   1d6bc:	ldr	r0, [pc, #-1808]	; 1cfb4 <sfbpf_parse+0x10b4>
   1d6c0:	add	r0, pc, r0
   1d6c4:	bl	2130 <sf_bpf_error>
   1d6c8:	ldr	r0, [pc, #-1816]	; 1cfb8 <sfbpf_parse+0x10b8>
   1d6cc:	add	r0, pc, r0
   1d6d0:	bl	2130 <sf_bpf_error>
   1d6d4:	ldr	r0, [pc, #-1824]	; 1cfbc <sfbpf_parse+0x10bc>
   1d6d8:	add	r0, pc, r0
   1d6dc:	bl	2130 <sf_bpf_error>

0001d6e0 <yy_fatal_error>:
   1d6e0:	ldr	r3, [pc, #44]	; 1d714 <yy_fatal_error+0x34>
   1d6e4:	mov	r2, r0
   1d6e8:	str	r4, [sp, #-8]!
   1d6ec:	ldr	r0, [pc, #36]	; 1d718 <yy_fatal_error+0x38>
   1d6f0:	str	lr, [sp, #4]
   1d6f4:	ldr	r1, [pc, #32]	; 1d71c <yy_fatal_error+0x3c>
   1d6f8:	add	r3, pc, r3
   1d6fc:	ldr	r3, [r3, r0]
   1d700:	add	r1, pc, r1
   1d704:	ldr	r0, [r3]
   1d708:	bl	e08 <fprintf@plt>
   1d70c:	mov	r0, #2
   1d710:	bl	de4 <exit@plt>
   1d714:	.word	0x00020900
   1d718:	.word	0x000000d0
   1d71c:	.word	0x0000f72c

0001d720 <sfbpf_ensure_buffer_stack>:
   1d720:	strd	r4, [sp, #-16]!
   1d724:	ldr	r4, [pc, #200]	; 1d7f4 <sfbpf_ensure_buffer_stack+0xd4>
   1d728:	str	r6, [sp, #8]
   1d72c:	str	lr, [sp, #12]
   1d730:	add	r4, pc, r4
   1d734:	ldr	r6, [r4]
   1d738:	cmp	r6, #0
   1d73c:	beq	1d7b8 <sfbpf_ensure_buffer_stack+0x98>
   1d740:	ldr	r3, [r4, #4]
   1d744:	ldr	r2, [r4, #8]
   1d748:	sub	r1, r3, #1
   1d74c:	cmp	r1, r2
   1d750:	bls	1d764 <sfbpf_ensure_buffer_stack+0x44>
   1d754:	ldrd	r4, [sp]
   1d758:	ldr	r6, [sp, #8]
   1d75c:	add	sp, sp, #12
   1d760:	pop	{pc}		; (ldr pc, [sp], #4)
   1d764:	add	r5, r3, #8
   1d768:	mov	r0, r6
   1d76c:	lsl	r6, r5, #2
   1d770:	mov	r1, r6
   1d774:	bl	d90 <realloc@plt>
   1d778:	cmp	r0, #0
   1d77c:	str	r0, [r4]
   1d780:	beq	1d7e8 <sfbpf_ensure_buffer_stack+0xc8>
   1d784:	sub	r6, r6, #32
   1d788:	mov	r2, #0
   1d78c:	str	r5, [r4, #4]
   1d790:	mov	r3, #0
   1d794:	add	r1, r0, r6
   1d798:	strd	r2, [r0, r6]
   1d79c:	strd	r2, [r1, #8]
   1d7a0:	strd	r2, [r1, #16]
   1d7a4:	strd	r2, [r1, #24]
   1d7a8:	ldrd	r4, [sp]
   1d7ac:	ldr	r6, [sp, #8]
   1d7b0:	add	sp, sp, #12
   1d7b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d7b8:	mov	r1, #1
   1d7bc:	mov	r0, #4
   1d7c0:	bl	ce8 <calloc@plt>
   1d7c4:	cmp	r0, #0
   1d7c8:	str	r0, [r4]
   1d7cc:	beq	1d7e8 <sfbpf_ensure_buffer_stack+0xc8>
   1d7d0:	mov	r3, #1
   1d7d4:	stmib	r4, {r3, r6}
   1d7d8:	ldrd	r4, [sp]
   1d7dc:	ldr	r6, [sp, #8]
   1d7e0:	add	sp, sp, #12
   1d7e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d7e8:	ldr	r0, [pc, #8]	; 1d7f8 <sfbpf_ensure_buffer_stack+0xd8>
   1d7ec:	add	r0, pc, r0
   1d7f0:	bl	1d6e0 <yy_fatal_error>
   1d7f4:	.word	0x00021408
   1d7f8:	.word	0x0000f644

0001d7fc <sfbpf__switch_to_buffer>:
   1d7fc:	strd	r4, [sp, #-16]!
   1d800:	mov	r4, r0
   1d804:	str	r6, [sp, #8]
   1d808:	str	lr, [sp, #12]
   1d80c:	bl	1d720 <sfbpf_ensure_buffer_stack>
   1d810:	ldr	r2, [pc, #176]	; 1d8c8 <sfbpf__switch_to_buffer+0xcc>
   1d814:	ldr	r5, [pc, #176]	; 1d8cc <sfbpf__switch_to_buffer+0xd0>
   1d818:	add	r2, pc, r2
   1d81c:	ldr	r3, [r2]
   1d820:	add	r5, pc, r5
   1d824:	cmp	r3, #0
   1d828:	beq	1d8b4 <sfbpf__switch_to_buffer+0xb8>
   1d82c:	ldr	r1, [r2, #8]
   1d830:	ldr	ip, [r3, r1, lsl #2]
   1d834:	add	r0, r3, r1, lsl #2
   1d838:	cmp	ip, r4
   1d83c:	beq	1d8a4 <sfbpf__switch_to_buffer+0xa8>
   1d840:	cmp	ip, #0
   1d844:	beq	1d868 <sfbpf__switch_to_buffer+0x6c>
   1d848:	ldrb	lr, [r2, #16]
   1d84c:	ldr	ip, [r2, #12]
   1d850:	ldr	r2, [r2, #20]
   1d854:	strb	lr, [ip]
   1d858:	ldr	lr, [r3, r1, lsl #2]
   1d85c:	str	ip, [lr, #8]
   1d860:	ldr	r3, [r3, r1, lsl #2]
   1d864:	str	r2, [r3, #16]
   1d868:	ldr	r3, [pc, #96]	; 1d8d0 <sfbpf__switch_to_buffer+0xd4>
   1d86c:	str	r4, [r0]
   1d870:	ldr	r1, [pc, #92]	; 1d8d4 <sfbpf__switch_to_buffer+0xd8>
   1d874:	ldr	r2, [r4, #8]
   1d878:	add	r3, pc, r3
   1d87c:	ldr	ip, [r4, #16]
   1d880:	str	r2, [r3, #12]
   1d884:	str	ip, [r3, #20]
   1d888:	ldr	r1, [r5, r1]
   1d88c:	str	r2, [r1]
   1d890:	ldr	r1, [r0]
   1d894:	ldr	r1, [r1]
   1d898:	str	r1, [r3, #24]
   1d89c:	ldrb	r2, [r2]
   1d8a0:	strb	r2, [r3, #16]
   1d8a4:	ldrd	r4, [sp]
   1d8a8:	ldr	r6, [sp, #8]
   1d8ac:	add	sp, sp, #12
   1d8b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d8b4:	cmp	r4, #0
   1d8b8:	beq	1d8a4 <sfbpf__switch_to_buffer+0xa8>
   1d8bc:	ldr	r0, [r2, #8]
   1d8c0:	lsl	r0, r0, #2
   1d8c4:	b	1d868 <sfbpf__switch_to_buffer+0x6c>
   1d8c8:	.word	0x00021320
   1d8cc:	.word	0x000207d8
   1d8d0:	.word	0x000212c0
   1d8d4:	.word	0x000000d8

0001d8d8 <sfbpf__create_buffer>:
   1d8d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d8dc:	mov	r5, r0
   1d8e0:	mov	r0, #48	; 0x30
   1d8e4:	strd	r6, [sp, #8]
   1d8e8:	mov	r6, r1
   1d8ec:	ldr	r7, [pc, #304]	; 1da24 <sfbpf__create_buffer+0x14c>
   1d8f0:	strd	r8, [sp, #16]
   1d8f4:	str	sl, [sp, #24]
   1d8f8:	str	lr, [sp, #28]
   1d8fc:	bl	dc0 <malloc@plt>
   1d900:	subs	r4, r0, #0
   1d904:	add	r7, pc, r7
   1d908:	beq	1da18 <sfbpf__create_buffer+0x140>
   1d90c:	add	r0, r6, #2
   1d910:	str	r6, [r4, #12]
   1d914:	bl	dc0 <malloc@plt>
   1d918:	cmp	r0, #0
   1d91c:	mov	r6, r0
   1d920:	str	r0, [r4, #4]
   1d924:	beq	1da18 <sfbpf__create_buffer+0x140>
   1d928:	bl	e14 <__errno_location@plt>
   1d92c:	ldr	r3, [pc, #244]	; 1da28 <sfbpf__create_buffer+0x150>
   1d930:	mov	r8, r0
   1d934:	mov	r1, #1
   1d938:	mov	r0, #0
   1d93c:	mov	ip, #0
   1d940:	str	r6, [r4, #8]
   1d944:	ldr	r9, [r8]
   1d948:	strd	r0, [r4, #16]
   1d94c:	mov	r1, #1
   1d950:	strh	ip, [r6]
   1d954:	add	r3, pc, r3
   1d958:	str	r1, [r4, #28]
   1d95c:	ldr	r2, [r3]
   1d960:	str	ip, [r4, #44]	; 0x2c
   1d964:	cmp	r2, ip
   1d968:	beq	1da0c <sfbpf__create_buffer+0x134>
   1d96c:	ldr	r1, [r3, #8]
   1d970:	ldr	r0, [r2, r1, lsl #2]
   1d974:	cmp	r4, r0
   1d978:	beq	1d9e4 <sfbpf__create_buffer+0x10c>
   1d97c:	mov	r3, #1
   1d980:	str	r5, [r4]
   1d984:	str	r3, [r4, #40]	; 0x28
   1d988:	ldr	r3, [r2, r1, lsl #2]
   1d98c:	cmp	r4, r3
   1d990:	beq	1d9a0 <sfbpf__create_buffer+0xc8>
   1d994:	mov	r2, #1
   1d998:	mov	r3, #0
   1d99c:	strd	r2, [r4, #32]
   1d9a0:	cmp	r5, #0
   1d9a4:	beq	1d9c0 <sfbpf__create_buffer+0xe8>
   1d9a8:	mov	r0, r5
   1d9ac:	bl	e50 <fileno@plt>
   1d9b0:	bl	eb0 <isatty@plt>
   1d9b4:	cmp	r0, #0
   1d9b8:	movle	r5, #0
   1d9bc:	movgt	r5, #1
   1d9c0:	str	r9, [r8]
   1d9c4:	mov	r0, r4
   1d9c8:	str	r5, [r4, #24]
   1d9cc:	ldrd	r4, [sp]
   1d9d0:	ldrd	r6, [sp, #8]
   1d9d4:	ldrd	r8, [sp, #16]
   1d9d8:	ldr	sl, [sp, #24]
   1d9dc:	add	sp, sp, #28
   1d9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9e4:	ldr	r0, [pc, #64]	; 1da2c <sfbpf__create_buffer+0x154>
   1d9e8:	str	r6, [r3, #12]
   1d9ec:	str	ip, [r3, #20]
   1d9f0:	ldr	r0, [r7, r0]
   1d9f4:	strb	ip, [r3, #16]
   1d9f8:	str	r6, [r0]
   1d9fc:	ldr	r0, [r2, r1, lsl #2]
   1da00:	ldr	r0, [r0]
   1da04:	str	r0, [r3, #24]
   1da08:	b	1d97c <sfbpf__create_buffer+0xa4>
   1da0c:	str	r5, [r4]
   1da10:	str	r1, [r4, #40]	; 0x28
   1da14:	b	1d994 <sfbpf__create_buffer+0xbc>
   1da18:	ldr	r0, [pc, #16]	; 1da30 <sfbpf__create_buffer+0x158>
   1da1c:	add	r0, pc, r0
   1da20:	bl	1d6e0 <yy_fatal_error>
   1da24:	.word	0x000206f4
   1da28:	.word	0x000211e4
   1da2c:	.word	0x000000d8
   1da30:	.word	0x0000f448

0001da34 <sfbpf_restart>:
   1da34:	ldr	r3, [pc, #436]	; 1dbf0 <sfbpf_restart+0x1bc>
   1da38:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1da3c:	strd	r6, [sp, #8]
   1da40:	mov	r6, r0
   1da44:	strd	r8, [sp, #16]
   1da48:	str	sl, [sp, #24]
   1da4c:	add	r3, pc, r3
   1da50:	str	lr, [sp, #28]
   1da54:	ldr	r5, [r3]
   1da58:	ldr	r7, [pc, #404]	; 1dbf4 <sfbpf_restart+0x1c0>
   1da5c:	cmp	r5, #0
   1da60:	add	r7, pc, r7
   1da64:	beq	1db98 <sfbpf_restart+0x164>
   1da68:	ldr	r3, [r3, #8]
   1da6c:	ldr	r4, [r5, r3, lsl #2]
   1da70:	add	r5, r5, r3, lsl #2
   1da74:	cmp	r4, #0
   1da78:	beq	1db98 <sfbpf_restart+0x164>
   1da7c:	bl	e14 <__errno_location@plt>
   1da80:	ldr	r9, [r0]
   1da84:	mov	r8, r0
   1da88:	mov	r3, #0
   1da8c:	mov	r1, #1
   1da90:	ldr	r2, [r4, #4]
   1da94:	str	r3, [r4, #16]
   1da98:	strb	r3, [r2]
   1da9c:	ldr	r2, [r4, #4]
   1daa0:	strb	r3, [r2, #1]
   1daa4:	ldr	r2, [r4, #4]
   1daa8:	str	r2, [r4, #8]
   1daac:	str	r1, [r4, #28]
   1dab0:	str	r3, [r4, #44]	; 0x2c
   1dab4:	ldr	r3, [r5]
   1dab8:	cmp	r4, r3
   1dabc:	beq	1db60 <sfbpf_restart+0x12c>
   1dac0:	ldr	r3, [pc, #304]	; 1dbf8 <sfbpf_restart+0x1c4>
   1dac4:	ldr	r7, [r7, r3]
   1dac8:	mov	r3, #1
   1dacc:	str	r6, [r4]
   1dad0:	str	r3, [r4, #40]	; 0x28
   1dad4:	ldr	r2, [r5]
   1dad8:	cmp	r4, r2
   1dadc:	beq	1daec <sfbpf_restart+0xb8>
   1dae0:	mov	r2, #0
   1dae4:	str	r3, [r4, #32]
   1dae8:	str	r2, [r4, #36]	; 0x24
   1daec:	cmp	r6, #0
   1daf0:	beq	1db0c <sfbpf_restart+0xd8>
   1daf4:	mov	r0, r6
   1daf8:	bl	e50 <fileno@plt>
   1dafc:	bl	eb0 <isatty@plt>
   1db00:	cmp	r0, #0
   1db04:	movle	r6, #0
   1db08:	movgt	r6, #1
   1db0c:	str	r6, [r4, #24]
   1db10:	str	r9, [r8]
   1db14:	ldr	r1, [r5]
   1db18:	ldr	r3, [pc, #220]	; 1dbfc <sfbpf_restart+0x1c8>
   1db1c:	ldr	r2, [r1, #8]
   1db20:	ldr	r0, [r1, #16]
   1db24:	add	r3, pc, r3
   1db28:	str	r2, [r7]
   1db2c:	ldr	r1, [r5]
   1db30:	str	r2, [r3, #12]
   1db34:	str	r0, [r3, #20]
   1db38:	ldr	r1, [r1]
   1db3c:	str	r1, [r3, #24]
   1db40:	ldrb	r2, [r2]
   1db44:	strb	r2, [r3, #16]
   1db48:	ldrd	r4, [sp]
   1db4c:	ldrd	r6, [sp, #8]
   1db50:	ldrd	r8, [sp, #16]
   1db54:	ldr	sl, [sp, #24]
   1db58:	add	sp, sp, #28
   1db5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1db60:	ldr	r3, [pc, #152]	; 1dc00 <sfbpf_restart+0x1cc>
   1db64:	ldr	r1, [pc, #140]	; 1dbf8 <sfbpf_restart+0x1c4>
   1db68:	ldr	r0, [r4, #16]
   1db6c:	add	r3, pc, r3
   1db70:	str	r2, [r3, #12]
   1db74:	str	r0, [r3, #20]
   1db78:	ldr	r7, [r7, r1]
   1db7c:	str	r2, [r7]
   1db80:	ldr	r1, [r5]
   1db84:	ldr	r1, [r1]
   1db88:	str	r1, [r3, #24]
   1db8c:	ldrb	r2, [r2]
   1db90:	strb	r2, [r3, #16]
   1db94:	b	1dac8 <sfbpf_restart+0x94>
   1db98:	bl	1d720 <sfbpf_ensure_buffer_stack>
   1db9c:	ldr	r3, [pc, #96]	; 1dc04 <sfbpf_restart+0x1d0>
   1dba0:	mov	r1, #16384	; 0x4000
   1dba4:	add	r3, pc, r3
   1dba8:	ldr	r8, [r3]
   1dbac:	ldr	r9, [r3, #8]
   1dbb0:	ldr	r0, [r3, #24]
   1dbb4:	bl	1d8d8 <sfbpf__create_buffer>
   1dbb8:	cmp	r8, #0
   1dbbc:	mov	r4, r0
   1dbc0:	add	r5, r8, r9, lsl #2
   1dbc4:	str	r0, [r8, r9, lsl #2]
   1dbc8:	beq	1dbe8 <sfbpf_restart+0x1b4>
   1dbcc:	bl	e14 <__errno_location@plt>
   1dbd0:	cmp	r4, #0
   1dbd4:	mov	r8, r0
   1dbd8:	ldr	r9, [r0]
   1dbdc:	bne	1da88 <sfbpf_restart+0x54>
   1dbe0:	str	r6, [r4]
   1dbe4:	udf	#0
   1dbe8:	str	r6, [r8]
   1dbec:	udf	#0
   1dbf0:	.word	0x000210ec
   1dbf4:	.word	0x00020598
   1dbf8:	.word	0x000000d8
   1dbfc:	.word	0x00021014
   1dc00:	.word	0x00020fcc
   1dc04:	.word	0x00020f94

0001dc08 <sfbpf_lex>:
   1dc08:	ldr	r3, [pc, #3880]	; 1eb38 <sfbpf_lex+0xf30>
   1dc0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1dc10:	strd	r6, [sp, #8]
   1dc14:	ldr	r6, [pc, #3872]	; 1eb3c <sfbpf_lex+0xf34>
   1dc18:	strd	r8, [sp, #16]
   1dc1c:	add	r3, pc, r3
   1dc20:	strd	sl, [sp, #24]
   1dc24:	str	lr, [sp, #32]
   1dc28:	sub	sp, sp, #92	; 0x5c
   1dc2c:	ldr	fp, [r3, #28]
   1dc30:	add	r6, pc, r6
   1dc34:	ldr	r2, [r3, #32]
   1dc38:	str	r6, [sp, #8]
   1dc3c:	cmp	r2, #0
   1dc40:	beq	1e110 <sfbpf_lex+0x508>
   1dc44:	ldr	r1, [pc, #3828]	; 1eb40 <sfbpf_lex+0xf38>
   1dc48:	lsl	r0, fp, #1
   1dc4c:	ldr	ip, [pc, #3824]	; 1eb44 <sfbpf_lex+0xf3c>
   1dc50:	ldrb	r2, [r3, #16]
   1dc54:	add	r1, pc, r1
   1dc58:	add	lr, r1, #2864	; 0xb30
   1dc5c:	ldrsh	r4, [r1, r0]
   1dc60:	add	lr, lr, #4
   1dc64:	ldrsh	r5, [lr, r0]
   1dc68:	ldr	r1, [r6, ip]
   1dc6c:	mov	ip, r6
   1dc70:	ldr	r7, [r3, #12]
   1dc74:	str	r1, [sp, #12]
   1dc78:	ldr	r3, [pc, #3784]	; 1eb48 <sfbpf_lex+0xf40>
   1dc7c:	ldr	r0, [pc, #3784]	; 1eb4c <sfbpf_lex+0xf44>
   1dc80:	ldr	r1, [pc, #3784]	; 1eb50 <sfbpf_lex+0xf48>
   1dc84:	add	r3, pc, r3
   1dc88:	add	r9, r3, #2864	; 0xb30
   1dc8c:	ldr	r0, [ip, r0]
   1dc90:	add	r9, r9, #4
   1dc94:	mov	r3, r9
   1dc98:	add	r1, pc, r1
   1dc9c:	add	r8, r1, #2864	; 0xb30
   1dca0:	add	r8, r8, #4
   1dca4:	mov	r9, r8
   1dca8:	mov	r8, r3
   1dcac:	str	r0, [sp, #20]
   1dcb0:	ldr	r3, [pc, #3740]	; 1eb54 <sfbpf_lex+0xf4c>
   1dcb4:	mov	sl, r9
   1dcb8:	mov	r9, r8
   1dcbc:	mov	r8, r7
   1dcc0:	strb	r2, [r7]
   1dcc4:	str	r7, [sp]
   1dcc8:	str	r7, [sp, #16]
   1dccc:	add	r3, pc, r3
   1dcd0:	ldr	r3, [r3, #40]	; 0x28
   1dcd4:	str	r3, [sp, #4]
   1dcd8:	mov	r3, #0
   1dcdc:	ldr	r7, [pc, #3700]	; 1eb58 <sfbpf_lex+0xf50>
   1dce0:	mov	r2, fp
   1dce4:	str	r3, [sp]
   1dce8:	ldr	r3, [pc, #3692]	; 1eb5c <sfbpf_lex+0xf54>
   1dcec:	add	r7, pc, r7
   1dcf0:	sub	lr, r7, #1264	; 0x4f0
   1dcf4:	sub	lr, lr, #8
   1dcf8:	add	r3, pc, r3
   1dcfc:	ldr	r3, [r3, #44]	; 0x2c
   1dd00:	mov	fp, r3
   1dd04:	mov	r1, r8
   1dd08:	ldr	r3, [pc, #3664]	; 1eb60 <sfbpf_lex+0xf58>
   1dd0c:	cmp	r4, #0
   1dd10:	add	r8, r8, #1
   1dd14:	ldrb	r0, [r1]
   1dd18:	add	r3, pc, r3
   1dd1c:	add	r3, r3, r0
   1dd20:	ldrb	r0, [r3, #-1528]	; 0xfffffa08
   1dd24:	beq	1dd38 <sfbpf_lex+0x130>
   1dd28:	mov	r3, #1
   1dd2c:	mov	fp, r1
   1dd30:	str	r3, [sp]
   1dd34:	str	r2, [sp, #4]
   1dd38:	ldr	r1, [pc, #3620]	; 1eb64 <sfbpf_lex+0xf5c>
   1dd3c:	add	r3, r5, r0
   1dd40:	lsl	r3, r3, #1
   1dd44:	add	r1, pc, r1
   1dd48:	ldrsh	r1, [r1, r3]
   1dd4c:	cmp	r2, r1
   1dd50:	beq	1dd9c <sfbpf_lex+0x194>
   1dd54:	ldr	r6, [pc, #3596]	; 1eb68 <sfbpf_lex+0xf60>
   1dd58:	lsl	r1, r2, #1
   1dd5c:	movw	ip, #1433	; 0x599
   1dd60:	ldr	r5, [pc, #3588]	; 1eb6c <sfbpf_lex+0xf64>
   1dd64:	add	r6, pc, r6
   1dd68:	add	r5, pc, r5
   1dd6c:	ldrsh	r2, [lr, r1]
   1dd70:	cmp	r2, ip
   1dd74:	lsl	r1, r2, #1
   1dd78:	ble	1dddc <sfbpf_lex+0x1d4>
   1dd7c:	add	r0, r7, r0
   1dd80:	ldrsh	r3, [r9, r1]
   1dd84:	ldrb	r0, [r0, #2516]	; 0x9d4
   1dd88:	add	r3, r3, r0
   1dd8c:	lsl	r3, r3, #1
   1dd90:	ldrsh	r4, [r5, r3]
   1dd94:	cmp	r2, r4
   1dd98:	bne	1dd6c <sfbpf_lex+0x164>
   1dd9c:	ldr	r2, [pc, #3532]	; 1eb70 <sfbpf_lex+0xf68>
   1dda0:	movw	ip, #7401	; 0x1ce9
   1dda4:	mov	r4, r8
   1dda8:	ldr	r0, [pc, #3524]	; 1eb74 <sfbpf_lex+0xf6c>
   1ddac:	add	r2, pc, r2
   1ddb0:	ldrsh	r3, [r2, r3]
   1ddb4:	add	r0, pc, r0
   1ddb8:	mov	r2, r3
   1ddbc:	add	r3, r0, #2864	; 0xb30
   1ddc0:	lsl	r1, r2, #1
   1ddc4:	add	r3, r3, #4
   1ddc8:	ldrsh	r5, [r3, r1]
   1ddcc:	cmp	r5, ip
   1ddd0:	beq	1ddf8 <sfbpf_lex+0x1f0>
   1ddd4:	ldrsh	r4, [r0, r1]
   1ddd8:	b	1dd04 <sfbpf_lex+0xfc>
   1dddc:	ldrsh	r3, [sl, r1]
   1dde0:	add	r3, r3, r0
   1dde4:	lsl	r3, r3, #1
   1dde8:	ldrsh	r4, [r6, r3]
   1ddec:	cmp	r4, r2
   1ddf0:	bne	1dd6c <sfbpf_lex+0x164>
   1ddf4:	b	1dd9c <sfbpf_lex+0x194>
   1ddf8:	ldr	r3, [sp]
   1ddfc:	cmp	r3, #0
   1de00:	beq	1de18 <sfbpf_lex+0x210>
   1de04:	ldr	r3, [pc, #3436]	; 1eb78 <sfbpf_lex+0xf70>
   1de08:	ldr	r2, [sp, #4]
   1de0c:	add	r3, pc, r3
   1de10:	str	r2, [r3, #40]	; 0x28
   1de14:	str	fp, [r3, #44]	; 0x2c
   1de18:	ldr	r2, [pc, #3420]	; 1eb7c <sfbpf_lex+0xf74>
   1de1c:	str	sl, [sp]
   1de20:	ldr	r3, [pc, #3416]	; 1eb80 <sfbpf_lex+0xf78>
   1de24:	str	r9, [sp, #4]
   1de28:	add	r2, pc, r2
   1de2c:	add	r5, r2, #2864	; 0xb30
   1de30:	add	r3, pc, r3
   1de34:	add	r5, r5, #4
   1de38:	add	r7, r3, #2864	; 0xb30
   1de3c:	add	r7, r7, #4
   1de40:	str	r5, [sp, #28]
   1de44:	ldr	r2, [pc, #3384]	; 1eb84 <sfbpf_lex+0xf7c>
   1de48:	add	r2, pc, r2
   1de4c:	ldrsh	r3, [r2, r1]
   1de50:	cmp	r3, #0
   1de54:	bne	1de70 <sfbpf_lex+0x268>
   1de58:	ldr	r1, [pc, #3368]	; 1eb88 <sfbpf_lex+0xf80>
   1de5c:	add	r1, pc, r1
   1de60:	ldr	r3, [r1, #40]	; 0x28
   1de64:	ldr	r4, [r1, #44]	; 0x2c
   1de68:	lsl	r3, r3, #1
   1de6c:	ldrsh	r3, [r2, r3]
   1de70:	add	r0, sp, #12
   1de74:	mov	lr, r4
   1de78:	ldm	r0, {r0, r2, ip}
   1de7c:	ldr	r5, [pc, #3336]	; 1eb8c <sfbpf_lex+0xf84>
   1de80:	sub	r1, r4, r2
   1de84:	str	r2, [r0]
   1de88:	mov	r0, #0
   1de8c:	ldr	r2, [pc, #3324]	; 1eb90 <sfbpf_lex+0xf88>
   1de90:	str	r1, [ip]
   1de94:	ldrb	r1, [r4]
   1de98:	strb	r0, [r4]
   1de9c:	add	r5, pc, r5
   1dea0:	ldr	r0, [pc, #3308]	; 1eb94 <sfbpf_lex+0xf8c>
   1dea4:	add	r2, pc, r2
   1dea8:	str	r4, [r2, #12]
   1deac:	strb	r1, [r2, #16]
   1deb0:	add	r0, pc, r0
   1deb4:	str	r0, [sp, #24]
   1deb8:	cmp	r3, #146	; 0x92
   1debc:	addls	pc, pc, r3, lsl #2
   1dec0:	b	1f724 <sfbpf_lex+0x1b1c>
   1dec4:	b	1e3d4 <sfbpf_lex+0x7cc>
   1dec8:	b	1e3cc <sfbpf_lex+0x7c4>
   1decc:	b	1e3c4 <sfbpf_lex+0x7bc>
   1ded0:	b	1e2cc <sfbpf_lex+0x6c4>
   1ded4:	b	1e2cc <sfbpf_lex+0x6c4>
   1ded8:	b	1e32c <sfbpf_lex+0x724>
   1dedc:	b	1e324 <sfbpf_lex+0x71c>
   1dee0:	b	1e36c <sfbpf_lex+0x764>
   1dee4:	b	1e364 <sfbpf_lex+0x75c>
   1dee8:	b	1e5e4 <sfbpf_lex+0x9dc>
   1deec:	b	1e5dc <sfbpf_lex+0x9d4>
   1def0:	b	1e5d4 <sfbpf_lex+0x9cc>
   1def4:	b	1e5cc <sfbpf_lex+0x9c4>
   1def8:	b	1e5c4 <sfbpf_lex+0x9bc>
   1defc:	b	1e5bc <sfbpf_lex+0x9b4>
   1df00:	b	1e51c <sfbpf_lex+0x914>
   1df04:	b	1eb00 <sfbpf_lex+0xef8>
   1df08:	b	1eaf8 <sfbpf_lex+0xef0>
   1df0c:	b	1eaf0 <sfbpf_lex+0xee8>
   1df10:	b	1eae8 <sfbpf_lex+0xee0>
   1df14:	b	1eae0 <sfbpf_lex+0xed8>
   1df18:	b	1ead8 <sfbpf_lex+0xed0>
   1df1c:	b	1ead0 <sfbpf_lex+0xec8>
   1df20:	b	1eac8 <sfbpf_lex+0xec0>
   1df24:	b	1e3bc <sfbpf_lex+0x7b4>
   1df28:	b	1e3b4 <sfbpf_lex+0x7ac>
   1df2c:	b	1e3ac <sfbpf_lex+0x7a4>
   1df30:	b	1e3a4 <sfbpf_lex+0x79c>
   1df34:	b	1e39c <sfbpf_lex+0x794>
   1df38:	b	1e2c4 <sfbpf_lex+0x6bc>
   1df3c:	b	1e2c4 <sfbpf_lex+0x6bc>
   1df40:	b	1e2bc <sfbpf_lex+0x6b4>
   1df44:	b	1e2bc <sfbpf_lex+0x6b4>
   1df48:	b	1e524 <sfbpf_lex+0x91c>
   1df4c:	b	1e648 <sfbpf_lex+0xa40>
   1df50:	b	1e5ec <sfbpf_lex+0x9e4>
   1df54:	b	1e53c <sfbpf_lex+0x934>
   1df58:	b	1e534 <sfbpf_lex+0x92c>
   1df5c:	b	1e52c <sfbpf_lex+0x924>
   1df60:	b	1e544 <sfbpf_lex+0x93c>
   1df64:	b	1e624 <sfbpf_lex+0xa1c>
   1df68:	b	1e61c <sfbpf_lex+0xa14>
   1df6c:	b	1e614 <sfbpf_lex+0xa0c>
   1df70:	b	1e60c <sfbpf_lex+0xa04>
   1df74:	b	1e604 <sfbpf_lex+0x9fc>
   1df78:	b	1e5fc <sfbpf_lex+0x9f4>
   1df7c:	b	1e5f4 <sfbpf_lex+0x9ec>
   1df80:	b	1e658 <sfbpf_lex+0xa50>
   1df84:	b	1e31c <sfbpf_lex+0x714>
   1df88:	b	1e314 <sfbpf_lex+0x70c>
   1df8c:	b	1e30c <sfbpf_lex+0x704>
   1df90:	b	1e304 <sfbpf_lex+0x6fc>
   1df94:	b	1e2fc <sfbpf_lex+0x6f4>
   1df98:	b	1e2f4 <sfbpf_lex+0x6ec>
   1df9c:	b	1e2ec <sfbpf_lex+0x6e4>
   1dfa0:	b	1e2e4 <sfbpf_lex+0x6dc>
   1dfa4:	b	1e57c <sfbpf_lex+0x974>
   1dfa8:	b	1e574 <sfbpf_lex+0x96c>
   1dfac:	b	1e56c <sfbpf_lex+0x964>
   1dfb0:	b	1e564 <sfbpf_lex+0x95c>
   1dfb4:	b	1e55c <sfbpf_lex+0x954>
   1dfb8:	b	1e554 <sfbpf_lex+0x94c>
   1dfbc:	b	1e54c <sfbpf_lex+0x944>
   1dfc0:	b	1e2dc <sfbpf_lex+0x6d4>
   1dfc4:	b	1e2d4 <sfbpf_lex+0x6cc>
   1dfc8:	b	1e35c <sfbpf_lex+0x754>
   1dfcc:	b	1e354 <sfbpf_lex+0x74c>
   1dfd0:	b	1e34c <sfbpf_lex+0x744>
   1dfd4:	b	1e344 <sfbpf_lex+0x73c>
   1dfd8:	b	1e33c <sfbpf_lex+0x734>
   1dfdc:	b	1e334 <sfbpf_lex+0x72c>
   1dfe0:	b	1eac0 <sfbpf_lex+0xeb8>
   1dfe4:	b	1eab8 <sfbpf_lex+0xeb0>
   1dfe8:	b	1eab0 <sfbpf_lex+0xea8>
   1dfec:	b	1eaa8 <sfbpf_lex+0xea0>
   1dff0:	b	1eaa0 <sfbpf_lex+0xe98>
   1dff4:	b	1ea98 <sfbpf_lex+0xe90>
   1dff8:	b	1ea90 <sfbpf_lex+0xe88>
   1dffc:	b	1ea88 <sfbpf_lex+0xe80>
   1e000:	b	1ea80 <sfbpf_lex+0xe78>
   1e004:	b	1ea78 <sfbpf_lex+0xe70>
   1e008:	b	1ea70 <sfbpf_lex+0xe68>
   1e00c:	b	1ea68 <sfbpf_lex+0xe60>
   1e010:	b	1ea60 <sfbpf_lex+0xe58>
   1e014:	b	1ea58 <sfbpf_lex+0xe50>
   1e018:	b	1ea50 <sfbpf_lex+0xe48>
   1e01c:	b	1ea48 <sfbpf_lex+0xe40>
   1e020:	b	1ea40 <sfbpf_lex+0xe38>
   1e024:	b	1ea38 <sfbpf_lex+0xe30>
   1e028:	b	1ea30 <sfbpf_lex+0xe28>
   1e02c:	b	1ea28 <sfbpf_lex+0xe20>
   1e030:	b	1ea20 <sfbpf_lex+0xe18>
   1e034:	b	1ea18 <sfbpf_lex+0xe10>
   1e038:	b	1ea10 <sfbpf_lex+0xe08>
   1e03c:	b	1ea08 <sfbpf_lex+0xe00>
   1e040:	b	1e2b4 <sfbpf_lex+0x6ac>
   1e044:	b	1e2b4 <sfbpf_lex+0x6ac>
   1e048:	b	1e68c <sfbpf_lex+0xa84>
   1e04c:	b	1e684 <sfbpf_lex+0xa7c>
   1e050:	b	1e6e0 <sfbpf_lex+0xad8>
   1e054:	b	1e6d8 <sfbpf_lex+0xad0>
   1e058:	b	1e6d0 <sfbpf_lex+0xac8>
   1e05c:	b	1e694 <sfbpf_lex+0xa8c>
   1e060:	b	1e740 <sfbpf_lex+0xb38>
   1e064:	b	1e738 <sfbpf_lex+0xb30>
   1e068:	b	1e730 <sfbpf_lex+0xb28>
   1e06c:	b	1e728 <sfbpf_lex+0xb20>
   1e070:	b	1e720 <sfbpf_lex+0xb18>
   1e074:	b	1e718 <sfbpf_lex+0xb10>
   1e078:	b	1e710 <sfbpf_lex+0xb08>
   1e07c:	b	1e6e8 <sfbpf_lex+0xae0>
   1e080:	b	1e904 <sfbpf_lex+0xcfc>
   1e084:	b	1e88c <sfbpf_lex+0xc84>
   1e088:	b	1e868 <sfbpf_lex+0xc60>
   1e08c:	b	1e7fc <sfbpf_lex+0xbf4>
   1e090:	b	1ee3c <sfbpf_lex+0x1234>
   1e094:	b	1e298 <sfbpf_lex+0x690>
   1e098:	b	1e62c <sfbpf_lex+0xa24>
   1e09c:	b	1e298 <sfbpf_lex+0x690>
   1e0a0:	b	1e9ec <sfbpf_lex+0xde4>
   1e0a4:	b	1e9d0 <sfbpf_lex+0xdc8>
   1e0a8:	b	1e9b4 <sfbpf_lex+0xdac>
   1e0ac:	b	1e998 <sfbpf_lex+0xd90>
   1e0b0:	b	1e97c <sfbpf_lex+0xd74>
   1e0b4:	b	1e960 <sfbpf_lex+0xd58>
   1e0b8:	b	1e944 <sfbpf_lex+0xd3c>
   1e0bc:	b	1e928 <sfbpf_lex+0xd20>
   1e0c0:	b	1e27c <sfbpf_lex+0x674>
   1e0c4:	b	1e41c <sfbpf_lex+0x814>
   1e0c8:	b	1e400 <sfbpf_lex+0x7f8>
   1e0cc:	b	1e244 <sfbpf_lex+0x63c>
   1e0d0:	b	1e5a0 <sfbpf_lex+0x998>
   1e0d4:	b	1e584 <sfbpf_lex+0x97c>
   1e0d8:	b	1e27c <sfbpf_lex+0x674>
   1e0dc:	b	1e454 <sfbpf_lex+0x84c>
   1e0e0:	b	1e7e0 <sfbpf_lex+0xbd8>
   1e0e4:	b	1e7c4 <sfbpf_lex+0xbbc>
   1e0e8:	b	1e7a8 <sfbpf_lex+0xba0>
   1e0ec:	b	1e244 <sfbpf_lex+0x63c>
   1e0f0:	b	1e438 <sfbpf_lex+0x830>
   1e0f4:	b	1e660 <sfbpf_lex+0xa58>
   1e0f8:	b	1e374 <sfbpf_lex+0x76c>
   1e0fc:	b	1ee50 <sfbpf_lex+0x1248>
   1e100:	b	1ee64 <sfbpf_lex+0x125c>
   1e104:	b	1e750 <sfbpf_lex+0xb48>
   1e108:	b	1e470 <sfbpf_lex+0x868>
   1e10c:	b	1e650 <sfbpf_lex+0xa48>
   1e110:	mov	r2, #1
   1e114:	cmp	fp, #0
   1e118:	str	r2, [r3, #32]
   1e11c:	beq	1e1d4 <sfbpf_lex+0x5cc>
   1e120:	ldr	r3, [pc, #2672]	; 1eb98 <sfbpf_lex+0xf90>
   1e124:	lsl	r0, fp, r2
   1e128:	add	r3, pc, r3
   1e12c:	add	r2, r3, #2864	; 0xb30
   1e130:	ldrsh	r4, [r3, r0]
   1e134:	add	r2, r2, #4
   1e138:	ldrsh	r5, [r2, r0]
   1e13c:	ldr	r3, [pc, #2648]	; 1eb9c <sfbpf_lex+0xf94>
   1e140:	add	r3, pc, r3
   1e144:	ldr	r2, [r3, #24]
   1e148:	cmp	r2, #0
   1e14c:	beq	1e22c <sfbpf_lex+0x624>
   1e150:	ldr	r3, [pc, #2632]	; 1eba0 <sfbpf_lex+0xf98>
   1e154:	add	r3, pc, r3
   1e158:	ldr	r2, [r3, #36]	; 0x24
   1e15c:	cmp	r2, #0
   1e160:	beq	1e214 <sfbpf_lex+0x60c>
   1e164:	ldr	r2, [pc, #2616]	; 1eba4 <sfbpf_lex+0xf9c>
   1e168:	add	r2, pc, r2
   1e16c:	ldr	r3, [r2]
   1e170:	cmp	r3, #0
   1e174:	beq	1e1e8 <sfbpf_lex+0x5e0>
   1e178:	ldr	r2, [r2, #8]
   1e17c:	ldr	r0, [r3, r2, lsl #2]
   1e180:	add	r3, r3, r2, lsl #2
   1e184:	cmp	r0, #0
   1e188:	beq	1e1e8 <sfbpf_lex+0x5e0>
   1e18c:	ldr	r1, [pc, #2580]	; 1eba8 <sfbpf_lex+0xfa0>
   1e190:	ldr	r2, [pc, #2476]	; 1eb44 <sfbpf_lex+0xf3c>
   1e194:	ldr	r7, [r0, #8]
   1e198:	add	r1, pc, r1
   1e19c:	ldr	ip, [r0, #16]
   1e1a0:	ldr	r0, [sp, #8]
   1e1a4:	str	r7, [r1, #12]
   1e1a8:	str	ip, [r1, #20]
   1e1ac:	ldr	r2, [r0, r2]
   1e1b0:	mov	ip, r0
   1e1b4:	str	r7, [r2]
   1e1b8:	ldr	r3, [r3]
   1e1bc:	str	r2, [sp, #12]
   1e1c0:	ldr	r3, [r3]
   1e1c4:	str	r3, [r1, #24]
   1e1c8:	ldrb	r2, [r7]
   1e1cc:	strb	r2, [r1, #16]
   1e1d0:	b	1dc78 <sfbpf_lex+0x70>
   1e1d4:	mov	r5, fp
   1e1d8:	mov	r4, fp
   1e1dc:	str	r2, [r3, #28]
   1e1e0:	mov	fp, r2
   1e1e4:	b	1e13c <sfbpf_lex+0x534>
   1e1e8:	bl	1d720 <sfbpf_ensure_buffer_stack>
   1e1ec:	ldr	r3, [pc, #2488]	; 1ebac <sfbpf_lex+0xfa4>
   1e1f0:	mov	r1, #16384	; 0x4000
   1e1f4:	add	r3, pc, r3
   1e1f8:	ldr	r6, [r3]
   1e1fc:	ldr	r7, [r3, #8]
   1e200:	ldr	r0, [r3, #24]
   1e204:	bl	1d8d8 <sfbpf__create_buffer>
   1e208:	add	r3, r6, r7, lsl #2
   1e20c:	str	r0, [r6, r7, lsl #2]
   1e210:	b	1e18c <sfbpf_lex+0x584>
   1e214:	ldr	r2, [pc, #2452]	; 1ebb0 <sfbpf_lex+0xfa8>
   1e218:	ldr	r1, [sp, #8]
   1e21c:	ldr	r2, [r1, r2]
   1e220:	ldr	r2, [r2]
   1e224:	str	r2, [r3, #36]	; 0x24
   1e228:	b	1e164 <sfbpf_lex+0x55c>
   1e22c:	ldr	r2, [pc, #2432]	; 1ebb4 <sfbpf_lex+0xfac>
   1e230:	ldr	r1, [sp, #8]
   1e234:	ldr	r2, [r1, r2]
   1e238:	ldr	r2, [r2]
   1e23c:	str	r2, [r3, #24]
   1e240:	b	1e150 <sfbpf_lex+0x548>
   1e244:	ldr	r2, [pc, #2412]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e248:	mov	r1, #16
   1e24c:	movw	r3, #291	; 0x123
   1e250:	ldr	r0, [sp, #8]
   1e254:	ldr	r2, [r0, r2]
   1e258:	str	r1, [r2]
   1e25c:	mov	r0, r3
   1e260:	add	sp, sp, #92	; 0x5c
   1e264:	ldrd	r4, [sp]
   1e268:	ldrd	r6, [sp, #8]
   1e26c:	ldrd	r8, [sp, #16]
   1e270:	ldrd	sl, [sp, #24]
   1e274:	add	sp, sp, #32
   1e278:	pop	{pc}		; (ldr pc, [sp], #4)
   1e27c:	ldr	r2, [pc, #2356]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e280:	mov	r1, #13
   1e284:	movw	r3, #291	; 0x123
   1e288:	ldr	r0, [sp, #8]
   1e28c:	ldr	r2, [r0, r2]
   1e290:	str	r1, [r2]
   1e294:	b	1e25c <sfbpf_lex+0x654>
   1e298:	ldr	r2, [pc, #2328]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e29c:	mov	r1, #0
   1e2a0:	movw	r3, #291	; 0x123
   1e2a4:	ldr	r0, [sp, #8]
   1e2a8:	ldr	r2, [r0, r2]
   1e2ac:	str	r1, [r2]
   1e2b0:	b	1e25c <sfbpf_lex+0x654>
   1e2b4:	movw	r3, #357	; 0x165
   1e2b8:	b	1e25c <sfbpf_lex+0x654>
   1e2bc:	movw	r3, #330	; 0x14a
   1e2c0:	b	1e25c <sfbpf_lex+0x654>
   1e2c4:	mov	r3, #328	; 0x148
   1e2c8:	b	1e25c <sfbpf_lex+0x654>
   1e2cc:	movw	r3, #307	; 0x133
   1e2d0:	b	1e25c <sfbpf_lex+0x654>
   1e2d4:	mov	r3, #364	; 0x16c
   1e2d8:	b	1e25c <sfbpf_lex+0x654>
   1e2dc:	movw	r3, #290	; 0x122
   1e2e0:	b	1e25c <sfbpf_lex+0x654>
   1e2e4:	movw	r3, #303	; 0x12f
   1e2e8:	b	1e25c <sfbpf_lex+0x654>
   1e2ec:	movw	r3, #302	; 0x12e
   1e2f0:	b	1e25c <sfbpf_lex+0x654>
   1e2f4:	movw	r3, #301	; 0x12d
   1e2f8:	b	1e25c <sfbpf_lex+0x654>
   1e2fc:	mov	r3, #300	; 0x12c
   1e300:	b	1e25c <sfbpf_lex+0x654>
   1e304:	movw	r3, #261	; 0x105
   1e308:	b	1e25c <sfbpf_lex+0x654>
   1e30c:	movw	r3, #269	; 0x10d
   1e310:	b	1e25c <sfbpf_lex+0x654>
   1e314:	mov	r3, #268	; 0x10c
   1e318:	b	1e25c <sfbpf_lex+0x654>
   1e31c:	movw	r3, #265	; 0x109
   1e320:	b	1e25c <sfbpf_lex+0x654>
   1e324:	mov	r3, #272	; 0x110
   1e328:	b	1e25c <sfbpf_lex+0x654>
   1e32c:	movw	r3, #271	; 0x10f
   1e330:	b	1e25c <sfbpf_lex+0x654>
   1e334:	movw	r3, #323	; 0x143
   1e338:	b	1e25c <sfbpf_lex+0x654>
   1e33c:	movw	r3, #293	; 0x125
   1e340:	b	1e25c <sfbpf_lex+0x654>
   1e344:	mov	r3, #292	; 0x124
   1e348:	b	1e25c <sfbpf_lex+0x654>
   1e34c:	movw	r3, #318	; 0x13e
   1e350:	b	1e25c <sfbpf_lex+0x654>
   1e354:	mov	r3, #33	; 0x21
   1e358:	b	1e25c <sfbpf_lex+0x654>
   1e35c:	movw	r3, #363	; 0x16b
   1e360:	b	1e25c <sfbpf_lex+0x654>
   1e364:	movw	r3, #274	; 0x112
   1e368:	b	1e25c <sfbpf_lex+0x654>
   1e36c:	movw	r3, #273	; 0x111
   1e370:	b	1e25c <sfbpf_lex+0x654>
   1e374:	ldr	r3, [sp, #12]
   1e378:	ldr	r0, [r3]
   1e37c:	add	r0, r0, #1
   1e380:	bl	611c <sf_sdup>
   1e384:	ldr	r2, [pc, #2092]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e388:	movw	r3, #311	; 0x137
   1e38c:	ldr	r1, [sp, #8]
   1e390:	ldr	r2, [r1, r2]
   1e394:	str	r0, [r2]
   1e398:	b	1e25c <sfbpf_lex+0x654>
   1e39c:	movw	r3, #327	; 0x147
   1e3a0:	b	1e25c <sfbpf_lex+0x654>
   1e3a4:	mov	r3, #288	; 0x120
   1e3a8:	b	1e25c <sfbpf_lex+0x654>
   1e3ac:	movw	r3, #287	; 0x11f
   1e3b0:	b	1e25c <sfbpf_lex+0x654>
   1e3b4:	movw	r3, #286	; 0x11e
   1e3b8:	b	1e25c <sfbpf_lex+0x654>
   1e3bc:	movw	r3, #285	; 0x11d
   1e3c0:	b	1e25c <sfbpf_lex+0x654>
   1e3c4:	movw	r3, #259	; 0x103
   1e3c8:	b	1e25c <sfbpf_lex+0x654>
   1e3cc:	movw	r3, #258	; 0x102
   1e3d0:	b	1e25c <sfbpf_lex+0x654>
   1e3d4:	ldr	r3, [pc, #2016]	; 1ebbc <sfbpf_lex+0xfb4>
   1e3d8:	ldr	r8, [sp, #16]
   1e3dc:	add	r3, pc, r3
   1e3e0:	ldrb	r2, [r3, #16]
   1e3e4:	ldr	r0, [r3, #40]	; 0x28
   1e3e8:	ldr	fp, [r3, #44]	; 0x2c
   1e3ec:	strb	r2, [r4]
   1e3f0:	lsl	r1, r0, #1
   1e3f4:	mov	r4, fp
   1e3f8:	str	r8, [sp, #16]
   1e3fc:	b	1de44 <sfbpf_lex+0x23c>
   1e400:	ldr	r2, [pc, #1968]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e404:	mov	r1, #15
   1e408:	movw	r3, #291	; 0x123
   1e40c:	ldr	r0, [sp, #8]
   1e410:	ldr	r2, [r0, r2]
   1e414:	str	r1, [r2]
   1e418:	b	1e25c <sfbpf_lex+0x654>
   1e41c:	ldr	r2, [pc, #1940]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e420:	mov	r1, #14
   1e424:	movw	r3, #291	; 0x123
   1e428:	ldr	r0, [sp, #8]
   1e42c:	ldr	r2, [r0, r2]
   1e430:	str	r1, [r2]
   1e434:	b	1e25c <sfbpf_lex+0x654>
   1e438:	ldr	r2, [pc, #1912]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e43c:	mov	r1, #32
   1e440:	movw	r3, #291	; 0x123
   1e444:	ldr	r0, [sp, #8]
   1e448:	ldr	r2, [r0, r2]
   1e44c:	str	r1, [r2]
   1e450:	b	1e25c <sfbpf_lex+0x654>
   1e454:	ldr	r2, [pc, #1884]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e458:	mov	r1, #1
   1e45c:	movw	r3, #291	; 0x123
   1e460:	ldr	r0, [sp, #8]
   1e464:	ldr	r2, [r0, r2]
   1e468:	str	r1, [r2]
   1e46c:	b	1e25c <sfbpf_lex+0x654>
   1e470:	ldr	r2, [sp, #12]
   1e474:	ldrb	r1, [r5, #16]
   1e478:	ldr	sl, [r5]
   1e47c:	ldr	r3, [r5, #8]
   1e480:	ldr	r2, [r2]
   1e484:	strb	r1, [r4]
   1e488:	ldr	r1, [sl, r3, lsl #2]
   1e48c:	add	r9, sl, r3, lsl #2
   1e490:	sub	r2, r4, r2
   1e494:	sub	r2, r2, #1
   1e498:	str	r2, [sp, #36]	; 0x24
   1e49c:	ldr	r2, [r1, #44]	; 0x2c
   1e4a0:	cmp	r2, #0
   1e4a4:	beq	1f270 <sfbpf_lex+0x1668>
   1e4a8:	ldr	r0, [r5, #20]
   1e4ac:	ldr	r2, [r1, #4]
   1e4b0:	ldr	ip, [sp, #12]
   1e4b4:	add	fp, r2, r0
   1e4b8:	cmp	fp, lr
   1e4bc:	ldr	r8, [ip]
   1e4c0:	bcs	1efd8 <sfbpf_lex+0x13d0>
   1e4c4:	add	r0, r0, #1
   1e4c8:	add	r0, r2, r0
   1e4cc:	cmp	lr, r0
   1e4d0:	bhi	1efcc <sfbpf_lex+0x13c4>
   1e4d4:	ldr	r0, [r1, #40]	; 0x28
   1e4d8:	sub	ip, lr, r8
   1e4dc:	str	ip, [sp, #32]
   1e4e0:	cmp	r0, #0
   1e4e4:	bne	1ee7c <sfbpf_lex+0x1274>
   1e4e8:	cmp	ip, #1
   1e4ec:	bne	1ecc4 <sfbpf_lex+0x10bc>
   1e4f0:	ldr	r2, [pc, #1736]	; 1ebc0 <sfbpf_lex+0xfb8>
   1e4f4:	ldr	r3, [sp, #12]
   1e4f8:	add	r2, pc, r2
   1e4fc:	ldr	lr, [r3]
   1e500:	ldr	r3, [r2, #28]
   1e504:	str	lr, [r2, #12]
   1e508:	sub	r3, r3, #1
   1e50c:	add	r3, r3, r3, lsr #31
   1e510:	asr	r3, r3, #1
   1e514:	add	r3, r3, #146	; 0x92
   1e518:	b	1deb8 <sfbpf_lex+0x2b0>
   1e51c:	movw	r3, #281	; 0x119
   1e520:	b	1e25c <sfbpf_lex+0x654>
   1e524:	movw	r3, #331	; 0x14b
   1e528:	b	1e25c <sfbpf_lex+0x654>
   1e52c:	mov	r3, #336	; 0x150
   1e530:	b	1e25c <sfbpf_lex+0x654>
   1e534:	movw	r3, #335	; 0x14f
   1e538:	b	1e25c <sfbpf_lex+0x654>
   1e53c:	movw	r3, #334	; 0x14e
   1e540:	b	1e25c <sfbpf_lex+0x654>
   1e544:	movw	r3, #337	; 0x151
   1e548:	b	1e25c <sfbpf_lex+0x654>
   1e54c:	movw	r3, #289	; 0x121
   1e550:	b	1e25c <sfbpf_lex+0x654>
   1e554:	movw	r3, #270	; 0x10e
   1e558:	b	1e25c <sfbpf_lex+0x654>
   1e55c:	movw	r3, #267	; 0x10b
   1e560:	b	1e25c <sfbpf_lex+0x654>
   1e564:	movw	r3, #266	; 0x10a
   1e568:	b	1e25c <sfbpf_lex+0x654>
   1e56c:	movw	r3, #306	; 0x132
   1e570:	b	1e25c <sfbpf_lex+0x654>
   1e574:	movw	r3, #305	; 0x131
   1e578:	b	1e25c <sfbpf_lex+0x654>
   1e57c:	mov	r3, #304	; 0x130
   1e580:	b	1e25c <sfbpf_lex+0x654>
   1e584:	ldr	r2, [pc, #1580]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e588:	mov	r1, #18
   1e58c:	movw	r3, #291	; 0x123
   1e590:	ldr	r0, [sp, #8]
   1e594:	ldr	r2, [r0, r2]
   1e598:	str	r1, [r2]
   1e59c:	b	1e25c <sfbpf_lex+0x654>
   1e5a0:	ldr	r2, [pc, #1552]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e5a4:	mov	r1, #17
   1e5a8:	movw	r3, #291	; 0x123
   1e5ac:	ldr	r0, [sp, #8]
   1e5b0:	ldr	r2, [r0, r2]
   1e5b4:	str	r1, [r2]
   1e5b8:	b	1e25c <sfbpf_lex+0x654>
   1e5bc:	mov	r3, #280	; 0x118
   1e5c0:	b	1e25c <sfbpf_lex+0x654>
   1e5c4:	movw	r3, #279	; 0x117
   1e5c8:	b	1e25c <sfbpf_lex+0x654>
   1e5cc:	movw	r3, #278	; 0x116
   1e5d0:	b	1e25c <sfbpf_lex+0x654>
   1e5d4:	movw	r3, #277	; 0x115
   1e5d8:	b	1e25c <sfbpf_lex+0x654>
   1e5dc:	mov	r3, #276	; 0x114
   1e5e0:	b	1e25c <sfbpf_lex+0x654>
   1e5e4:	movw	r3, #275	; 0x113
   1e5e8:	b	1e25c <sfbpf_lex+0x654>
   1e5ec:	movw	r3, #333	; 0x14d
   1e5f0:	b	1e25c <sfbpf_lex+0x654>
   1e5f4:	movw	r3, #263	; 0x107
   1e5f8:	b	1e25c <sfbpf_lex+0x654>
   1e5fc:	movw	r3, #262	; 0x106
   1e600:	b	1e25c <sfbpf_lex+0x654>
   1e604:	mov	r3, #260	; 0x104
   1e608:	b	1e25c <sfbpf_lex+0x654>
   1e60c:	mov	r3, #340	; 0x154
   1e610:	b	1e25c <sfbpf_lex+0x654>
   1e614:	movw	r3, #339	; 0x153
   1e618:	b	1e25c <sfbpf_lex+0x654>
   1e61c:	movw	r3, #338	; 0x152
   1e620:	b	1e25c <sfbpf_lex+0x654>
   1e624:	movw	r3, #329	; 0x149
   1e628:	b	1e25c <sfbpf_lex+0x654>
   1e62c:	ldr	r2, [pc, #1412]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e630:	mov	r1, #1
   1e634:	movw	r3, #291	; 0x123
   1e638:	ldr	r0, [sp, #8]
   1e63c:	ldr	r2, [r0, r2]
   1e640:	str	r1, [r2]
   1e644:	b	1e25c <sfbpf_lex+0x654>
   1e648:	mov	r3, #332	; 0x14c
   1e64c:	b	1e25c <sfbpf_lex+0x654>
   1e650:	mov	r3, #0
   1e654:	b	1e25c <sfbpf_lex+0x654>
   1e658:	mov	r3, #264	; 0x108
   1e65c:	b	1e25c <sfbpf_lex+0x654>
   1e660:	ldr	r3, [sp, #12]
   1e664:	ldr	r0, [r3]
   1e668:	bl	611c <sf_sdup>
   1e66c:	ldr	r2, [pc, #1348]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e670:	movw	r3, #311	; 0x137
   1e674:	ldr	r1, [sp, #8]
   1e678:	ldr	r2, [r1, r2]
   1e67c:	str	r0, [r2]
   1e680:	b	1e25c <sfbpf_lex+0x654>
   1e684:	movw	r3, #359	; 0x167
   1e688:	b	1e25c <sfbpf_lex+0x654>
   1e68c:	movw	r3, #358	; 0x166
   1e690:	b	1e25c <sfbpf_lex+0x654>
   1e694:	ldr	r3, [pc, #1320]	; 1ebc4 <sfbpf_lex+0xfbc>
   1e698:	mov	r7, lr
   1e69c:	ldr	r1, [pc, #1316]	; 1ebc8 <sfbpf_lex+0xfc0>
   1e6a0:	ldr	r9, [sp]
   1e6a4:	add	r3, pc, r3
   1e6a8:	ldr	fp, [r3, #28]
   1e6ac:	add	r1, pc, r1
   1e6b0:	add	r0, r1, #2864	; 0xb30
   1e6b4:	ldrb	r2, [r3, #16]
   1e6b8:	add	r0, r0, #4
   1e6bc:	ldr	r8, [sp, #4]
   1e6c0:	lsl	r3, fp, #1
   1e6c4:	ldrsh	r4, [r1, r3]
   1e6c8:	ldrsh	r5, [r0, r3]
   1e6cc:	b	1dcb0 <sfbpf_lex+0xa8>
   1e6d0:	movw	r3, #362	; 0x16a
   1e6d4:	b	1e25c <sfbpf_lex+0x654>
   1e6d8:	movw	r3, #361	; 0x169
   1e6dc:	b	1e25c <sfbpf_lex+0x654>
   1e6e0:	mov	r3, #360	; 0x168
   1e6e4:	b	1e25c <sfbpf_lex+0x654>
   1e6e8:	ldr	r3, [sp, #12]
   1e6ec:	ldr	r0, [r3]
   1e6f0:	add	r0, r0, #1
   1e6f4:	bl	13248 <pcap_ether_aton>
   1e6f8:	ldr	r2, [pc, #1208]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e6fc:	movw	r3, #315	; 0x13b
   1e700:	ldr	r1, [sp, #8]
   1e704:	ldr	r2, [r1, r2]
   1e708:	str	r0, [r2]
   1e70c:	b	1e25c <sfbpf_lex+0x654>
   1e710:	movw	r3, #317	; 0x13d
   1e714:	b	1e25c <sfbpf_lex+0x654>
   1e718:	mov	r3, #316	; 0x13c
   1e71c:	b	1e25c <sfbpf_lex+0x654>
   1e720:	mov	r3, #61	; 0x3d
   1e724:	b	1e25c <sfbpf_lex+0x654>
   1e728:	movw	r3, #310	; 0x136
   1e72c:	b	1e25c <sfbpf_lex+0x654>
   1e730:	movw	r3, #309	; 0x135
   1e734:	b	1e25c <sfbpf_lex+0x654>
   1e738:	mov	r3, #308	; 0x134
   1e73c:	b	1e25c <sfbpf_lex+0x654>
   1e740:	ldr	r3, [sp, #12]
   1e744:	ldr	r3, [r3]
   1e748:	ldrb	r3, [r3]
   1e74c:	b	1e25c <sfbpf_lex+0x654>
   1e750:	ldr	r4, [pc, #1140]	; 1ebcc <sfbpf_lex+0xfc4>
   1e754:	mov	r2, #1
   1e758:	ldr	r3, [sp, #20]
   1e75c:	ldr	r9, [sp]
   1e760:	add	r4, pc, r4
   1e764:	ldr	r8, [sp, #4]
   1e768:	ldr	r1, [r3]
   1e76c:	ldr	r3, [sp, #12]
   1e770:	ldr	r0, [r3]
   1e774:	ldr	r3, [r4, #36]	; 0x24
   1e778:	bl	d9c <fwrite@plt>
   1e77c:	ldr	r1, [pc, #1100]	; 1ebd0 <sfbpf_lex+0xfc8>
   1e780:	ldrb	r2, [r4, #16]
   1e784:	ldr	fp, [r4, #28]
   1e788:	add	r1, pc, r1
   1e78c:	add	r0, r1, #2864	; 0xb30
   1e790:	ldr	r7, [r4, #12]
   1e794:	add	r0, r0, #4
   1e798:	lsl	r3, fp, #1
   1e79c:	ldrsh	r4, [r1, r3]
   1e7a0:	ldrsh	r5, [r0, r3]
   1e7a4:	b	1dcb0 <sfbpf_lex+0xa8>
   1e7a8:	ldr	r2, [pc, #1032]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e7ac:	mov	r1, #8
   1e7b0:	movw	r3, #291	; 0x123
   1e7b4:	ldr	r0, [sp, #8]
   1e7b8:	ldr	r2, [r0, r2]
   1e7bc:	str	r1, [r2]
   1e7c0:	b	1e25c <sfbpf_lex+0x654>
   1e7c4:	ldr	r2, [pc, #1004]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e7c8:	mov	r1, #4
   1e7cc:	movw	r3, #291	; 0x123
   1e7d0:	ldr	r0, [sp, #8]
   1e7d4:	ldr	r2, [r0, r2]
   1e7d8:	str	r1, [r2]
   1e7dc:	b	1e25c <sfbpf_lex+0x654>
   1e7e0:	ldr	r2, [pc, #976]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e7e4:	mov	r1, #2
   1e7e8:	movw	r3, #291	; 0x123
   1e7ec:	ldr	r0, [sp, #8]
   1e7f0:	ldr	r2, [r0, r2]
   1e7f4:	str	r1, [r2]
   1e7f8:	b	1e25c <sfbpf_lex+0x654>
   1e7fc:	ldr	r3, [sp, #12]
   1e800:	mov	r2, #4
   1e804:	mov	r4, #0
   1e808:	mov	r5, #0
   1e80c:	mov	r1, #0
   1e810:	strd	r4, [sp, #64]	; 0x40
   1e814:	strd	r4, [sp, #72]	; 0x48
   1e818:	ldr	r0, [r3]
   1e81c:	mov	r3, #10
   1e820:	strd	r2, [sp, #56]	; 0x38
   1e824:	add	r3, sp, #52	; 0x34
   1e828:	add	r2, sp, #56	; 0x38
   1e82c:	strd	r4, [sp, #80]	; 0x50
   1e830:	bl	e8c <getaddrinfo@plt>
   1e834:	cmp	r0, #0
   1e838:	bne	1ee28 <sfbpf_lex+0x1220>
   1e83c:	ldr	r0, [sp, #52]	; 0x34
   1e840:	bl	e80 <freeaddrinfo@plt>
   1e844:	ldr	r3, [sp, #12]
   1e848:	ldr	r0, [r3]
   1e84c:	bl	611c <sf_sdup>
   1e850:	ldr	r2, [pc, #864]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e854:	movw	r3, #314	; 0x13a
   1e858:	ldr	r1, [sp, #8]
   1e85c:	ldr	r2, [r1, r2]
   1e860:	str	r0, [r2]
   1e864:	b	1e25c <sfbpf_lex+0x654>
   1e868:	ldr	r3, [sp, #12]
   1e86c:	ldr	r0, [r3]
   1e870:	bl	611c <sf_sdup>
   1e874:	ldr	r2, [pc, #828]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e878:	movw	r3, #313	; 0x139
   1e87c:	ldr	r1, [sp, #8]
   1e880:	ldr	r2, [r1, r2]
   1e884:	str	r0, [r2]
   1e888:	b	1e25c <sfbpf_lex+0x654>
   1e88c:	ldr	r3, [sp, #12]
   1e890:	ldr	r5, [r3]
   1e894:	ldrb	r4, [r5]
   1e898:	cmp	r4, #48	; 0x30
   1e89c:	movne	r6, #10
   1e8a0:	beq	1eb10 <sfbpf_lex+0xf08>
   1e8a4:	cmp	r4, #0
   1e8a8:	beq	1eb08 <sfbpf_lex+0xf00>
   1e8ac:	bl	dd8 <__ctype_b_loc@plt>
   1e8b0:	ldr	r1, [r0]
   1e8b4:	mov	r2, #0
   1e8b8:	lsl	r3, r4, #1
   1e8bc:	mul	r2, r2, r6
   1e8c0:	ldrh	r3, [r1, r3]
   1e8c4:	tst	r3, #2048	; 0x800
   1e8c8:	subne	r3, r4, #48	; 0x30
   1e8cc:	bne	1e8dc <sfbpf_lex+0xcd4>
   1e8d0:	tst	r3, #512	; 0x200
   1e8d4:	subne	r3, r4, #87	; 0x57
   1e8d8:	subeq	r3, r4, #55	; 0x37
   1e8dc:	ldrb	r4, [r5, #1]!
   1e8e0:	add	r2, r2, r3
   1e8e4:	cmp	r4, #0
   1e8e8:	bne	1e8b8 <sfbpf_lex+0xcb0>
   1e8ec:	ldr	r1, [pc, #708]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e8f0:	movw	r3, #291	; 0x123
   1e8f4:	ldr	r0, [sp, #8]
   1e8f8:	ldr	r1, [r0, r1]
   1e8fc:	str	r2, [r1]
   1e900:	b	1e25c <sfbpf_lex+0x654>
   1e904:	ldr	r3, [sp, #12]
   1e908:	ldr	r0, [r3]
   1e90c:	bl	13248 <pcap_ether_aton>
   1e910:	ldr	r2, [pc, #672]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e914:	mov	r3, #312	; 0x138
   1e918:	ldr	r1, [sp, #8]
   1e91c:	ldr	r2, [r1, r2]
   1e920:	str	r0, [r2]
   1e924:	b	1e25c <sfbpf_lex+0x654>
   1e928:	ldr	r2, [pc, #648]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e92c:	mov	r1, #12
   1e930:	movw	r3, #291	; 0x123
   1e934:	ldr	r0, [sp, #8]
   1e938:	ldr	r2, [r0, r2]
   1e93c:	str	r1, [r2]
   1e940:	b	1e25c <sfbpf_lex+0x654>
   1e944:	ldr	r2, [pc, #620]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e948:	mov	r1, #11
   1e94c:	movw	r3, #291	; 0x123
   1e950:	ldr	r0, [sp, #8]
   1e954:	ldr	r2, [r0, r2]
   1e958:	str	r1, [r2]
   1e95c:	b	1e25c <sfbpf_lex+0x654>
   1e960:	ldr	r2, [pc, #592]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e964:	mov	r1, #10
   1e968:	movw	r3, #291	; 0x123
   1e96c:	ldr	r0, [sp, #8]
   1e970:	ldr	r2, [r0, r2]
   1e974:	str	r1, [r2]
   1e978:	b	1e25c <sfbpf_lex+0x654>
   1e97c:	ldr	r2, [pc, #564]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e980:	mov	r1, #9
   1e984:	movw	r3, #291	; 0x123
   1e988:	ldr	r0, [sp, #8]
   1e98c:	ldr	r2, [r0, r2]
   1e990:	str	r1, [r2]
   1e994:	b	1e25c <sfbpf_lex+0x654>
   1e998:	ldr	r2, [pc, #536]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e99c:	mov	r1, #8
   1e9a0:	movw	r3, #291	; 0x123
   1e9a4:	ldr	r0, [sp, #8]
   1e9a8:	ldr	r2, [r0, r2]
   1e9ac:	str	r1, [r2]
   1e9b0:	b	1e25c <sfbpf_lex+0x654>
   1e9b4:	ldr	r2, [pc, #508]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e9b8:	mov	r1, #5
   1e9bc:	movw	r3, #291	; 0x123
   1e9c0:	ldr	r0, [sp, #8]
   1e9c4:	ldr	r2, [r0, r2]
   1e9c8:	str	r1, [r2]
   1e9cc:	b	1e25c <sfbpf_lex+0x654>
   1e9d0:	ldr	r2, [pc, #480]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e9d4:	mov	r1, #4
   1e9d8:	movw	r3, #291	; 0x123
   1e9dc:	ldr	r0, [sp, #8]
   1e9e0:	ldr	r2, [r0, r2]
   1e9e4:	str	r1, [r2]
   1e9e8:	b	1e25c <sfbpf_lex+0x654>
   1e9ec:	ldr	r2, [pc, #452]	; 1ebb8 <sfbpf_lex+0xfb0>
   1e9f0:	mov	r1, #3
   1e9f4:	movw	r3, #291	; 0x123
   1e9f8:	ldr	r0, [sp, #8]
   1e9fc:	ldr	r2, [r0, r2]
   1ea00:	str	r1, [r2]
   1ea04:	b	1e25c <sfbpf_lex+0x654>
   1ea08:	mov	r3, #356	; 0x164
   1ea0c:	b	1e25c <sfbpf_lex+0x654>
   1ea10:	movw	r3, #299	; 0x12b
   1ea14:	b	1e25c <sfbpf_lex+0x654>
   1ea18:	movw	r3, #298	; 0x12a
   1ea1c:	b	1e25c <sfbpf_lex+0x654>
   1ea20:	movw	r3, #297	; 0x129
   1ea24:	b	1e25c <sfbpf_lex+0x654>
   1ea28:	mov	r3, #296	; 0x128
   1ea2c:	b	1e25c <sfbpf_lex+0x654>
   1ea30:	movw	r3, #295	; 0x127
   1ea34:	b	1e25c <sfbpf_lex+0x654>
   1ea38:	movw	r3, #294	; 0x126
   1ea3c:	b	1e25c <sfbpf_lex+0x654>
   1ea40:	mov	r3, #352	; 0x160
   1ea44:	b	1e25c <sfbpf_lex+0x654>
   1ea48:	movw	r3, #351	; 0x15f
   1ea4c:	b	1e25c <sfbpf_lex+0x654>
   1ea50:	movw	r3, #354	; 0x162
   1ea54:	b	1e25c <sfbpf_lex+0x654>
   1ea58:	movw	r3, #353	; 0x161
   1ea5c:	b	1e25c <sfbpf_lex+0x654>
   1ea60:	movw	r3, #346	; 0x15a
   1ea64:	b	1e25c <sfbpf_lex+0x654>
   1ea68:	movw	r3, #345	; 0x159
   1ea6c:	b	1e25c <sfbpf_lex+0x654>
   1ea70:	mov	r3, #348	; 0x15c
   1ea74:	b	1e25c <sfbpf_lex+0x654>
   1ea78:	movw	r3, #347	; 0x15b
   1ea7c:	b	1e25c <sfbpf_lex+0x654>
   1ea80:	movw	r3, #350	; 0x15e
   1ea84:	b	1e25c <sfbpf_lex+0x654>
   1ea88:	movw	r3, #349	; 0x15d
   1ea8c:	b	1e25c <sfbpf_lex+0x654>
   1ea90:	mov	r3, #344	; 0x158
   1ea94:	b	1e25c <sfbpf_lex+0x654>
   1ea98:	movw	r3, #343	; 0x157
   1ea9c:	b	1e25c <sfbpf_lex+0x654>
   1eaa0:	movw	r3, #342	; 0x156
   1eaa4:	b	1e25c <sfbpf_lex+0x654>
   1eaa8:	movw	r3, #341	; 0x155
   1eaac:	b	1e25c <sfbpf_lex+0x654>
   1eab0:	movw	r3, #326	; 0x146
   1eab4:	b	1e25c <sfbpf_lex+0x654>
   1eab8:	movw	r3, #325	; 0x145
   1eabc:	b	1e25c <sfbpf_lex+0x654>
   1eac0:	mov	r3, #324	; 0x144
   1eac4:	b	1e25c <sfbpf_lex+0x654>
   1eac8:	mov	r3, #284	; 0x11c
   1eacc:	b	1e25c <sfbpf_lex+0x654>
   1ead0:	movw	r3, #283	; 0x11b
   1ead4:	b	1e25c <sfbpf_lex+0x654>
   1ead8:	movw	r3, #282	; 0x11a
   1eadc:	b	1e25c <sfbpf_lex+0x654>
   1eae0:	movw	r3, #322	; 0x142
   1eae4:	b	1e25c <sfbpf_lex+0x654>
   1eae8:	movw	r3, #321	; 0x141
   1eaec:	b	1e25c <sfbpf_lex+0x654>
   1eaf0:	mov	r3, #320	; 0x140
   1eaf4:	b	1e25c <sfbpf_lex+0x654>
   1eaf8:	movw	r3, #319	; 0x13f
   1eafc:	b	1e25c <sfbpf_lex+0x654>
   1eb00:	movw	r3, #355	; 0x163
   1eb04:	b	1e25c <sfbpf_lex+0x654>
   1eb08:	mov	r2, r4
   1eb0c:	b	1e8ec <sfbpf_lex+0xce4>
   1eb10:	ldrb	r4, [r5, #1]
   1eb14:	and	r3, r4, #223	; 0xdf
   1eb18:	cmp	r3, #88	; 0x58
   1eb1c:	addne	r5, r5, #1
   1eb20:	movne	r6, #8
   1eb24:	bne	1e8a4 <sfbpf_lex+0xc9c>
   1eb28:	ldrb	r4, [r5, #2]
   1eb2c:	mov	r6, #16
   1eb30:	add	r5, r5, #2
   1eb34:	b	1e8a4 <sfbpf_lex+0xc9c>
   1eb38:	.word	0x00020f1c
   1eb3c:	.word	0x000203c8
   1eb40:	.word	0x00005354
   1eb44:	.word	0x000000d8
   1eb48:	.word	0x00005324
   1eb4c:	.word	0x000000c0
   1eb50:	.word	0x00005310
   1eb54:	.word	0x00020e6c
   1eb58:	.word	0x000072b4
   1eb5c:	.word	0x00020e40
   1eb60:	.word	0x00007288
   1eb64:	.word	0x00007c68
   1eb68:	.word	0x00007c48
   1eb6c:	.word	0x00007c44
   1eb70:	.word	0x0000b640
   1eb74:	.word	0x000051f4
   1eb78:	.word	0x00020d2c
   1eb7c:	.word	0x00005180
   1eb80:	.word	0x00005178
   1eb84:	.word	0x00005160
   1eb88:	.word	0x00020cdc
   1eb8c:	.word	0x00020c9c
   1eb90:	.word	0x00020c94
   1eb94:	.word	0x00020c88
   1eb98:	.word	0x00004e80
   1eb9c:	.word	0x000209f8
   1eba0:	.word	0x000209e4
   1eba4:	.word	0x000209d0
   1eba8:	.word	0x000209a0
   1ebac:	.word	0x00020944
   1ebb0:	.word	0x000000e8
   1ebb4:	.word	0x000000e0
   1ebb8:	.word	0x000000f0
   1ebbc:	.word	0x0002075c
   1ebc0:	.word	0x00020640
   1ebc4:	.word	0x00020494
   1ebc8:	.word	0x000048fc
   1ebcc:	.word	0x000203d8
   1ebd0:	.word	0x00004820
   1ebd4:	.word	0x0001fe6c
   1ebd8:	.word	0x000042b8
   1ebdc:	.word	0x000062a4
   1ebe0:	.word	0x00006274
   1ebe4:	.word	0x00004268
   1ebe8:	.word	0x00006c40
   1ebec:	.word	0x00006c20
   1ebf0:	.word	0x00006c1c
   1ebf4:	.word	0x0000a610
   1ebf8:	.word	0x0001fd40
   1ebfc:	.word	0x0000e060
   1ec00:	.word	0x0000e064
   1ec04:	.word	0x0000e06c
   1ec08:	.word	0x0000e068
   1ec0c:	.word	0x0000df60
   1ec10:	.word	0x0000df1c
   1ec14:	.word	0x0001fb58
   1ec18:	.word	0x00003f98
   1ec1c:	.word	0x00003f8c
   1ec20:	.word	0x00003f7c
   1ec24:	.word	0x00005f64
   1ec28:	.word	0x00005f30
   1ec2c:	.word	0x00003f24
   1ec30:	.word	0x000068f8
   1ec34:	.word	0x000068d8
   1ec38:	.word	0x000068d4
   1ec3c:	.word	0x0000a2ac
   1ec40:	.word	0x0001f9d8
   1ec44:	.word	0x00003e30
   1ec48:	.word	0x0001f9ac
   1ec4c:	.word	0x00003e08
   1ec50:	.word	0x00006800
   1ec54:	.word	0x00005dd0
   1ec58:	.word	0x0000a1e8
   1ec5c:	.word	0x0001f900
   1ec60:	.word	0x00003d50
   1ec64:	.word	0x0001f878
   1ec68:	.word	0x0001f828
   1ec6c:	.word	0x0001f7f8
   1ec70:	.word	0x0001f7d8
   1ec74:	.word	0x0001f7a0
   1ec78:	.word	0x00003b98
   1ec7c:	.word	0x00003b8c
   1ec80:	.word	0x00003b80
   1ec84:	.word	0x00005b6c
   1ec88:	.word	0x00005b44
   1ec8c:	.word	0x00003b38
   1ec90:	.word	0x0000650c
   1ec94:	.word	0x000064f8
   1ec98:	.word	0x000064e0
   1ec9c:	.word	0x00009ed4
   1eca0:	.word	0x0001f5f8
   1eca4:	.word	0x0001f58c
   1eca8:	.word	0x0000d9a0
   1ecac:	.word	0x0001f504
   1ecb0:	.word	0x0000d874
   1ecb4:	.word	0x0000d878
   1ecb8:	ldr	r3, [r9]
   1ecbc:	ldr	fp, [r3, #4]
   1ecc0:	add	fp, fp, r6
   1ecc4:	ldr	r3, [pc, #-248]	; 1ebd4 <sfbpf_lex+0xfcc>
   1ecc8:	cmp	fp, r8
   1eccc:	add	r3, pc, r3
   1ecd0:	ldr	r0, [r3, #28]
   1ecd4:	str	fp, [r3, #12]
   1ecd8:	bls	1e3f0 <sfbpf_lex+0x7e8>
   1ecdc:	ldr	r2, [pc, #-268]	; 1ebd8 <sfbpf_lex+0xfd0>
   1ece0:	mov	sl, r8
   1ece4:	mov	r6, #0
   1ece8:	ldr	r1, [pc, #-276]	; 1ebdc <sfbpf_lex+0xfd4>
   1ecec:	ldr	r4, [r3, #40]	; 0x28
   1ecf0:	add	r2, pc, r2
   1ecf4:	ldr	r3, [r3, #44]	; 0x2c
   1ecf8:	add	lr, r2, #2864	; 0xb30
   1ecfc:	add	r1, pc, r1
   1ed00:	add	lr, lr, #4
   1ed04:	str	r3, [sp, #16]
   1ed08:	sub	r3, r1, #1264	; 0x4f0
   1ed0c:	str	r1, [sp, #32]
   1ed10:	str	r3, [sp, #36]	; 0x24
   1ed14:	mov	ip, sl
   1ed18:	ldrb	r2, [sl], #1
   1ed1c:	cmp	r2, #0
   1ed20:	moveq	r2, #1
   1ed24:	beq	1ed38 <sfbpf_lex+0x1130>
   1ed28:	ldr	r3, [pc, #-336]	; 1ebe0 <sfbpf_lex+0xfd8>
   1ed2c:	add	r3, pc, r3
   1ed30:	add	r3, r3, r2
   1ed34:	ldrb	r2, [r3, #-1528]	; 0xfffffa08
   1ed38:	lsl	r1, r0, #1
   1ed3c:	ldr	r3, [pc, #-352]	; 1ebe4 <sfbpf_lex+0xfdc>
   1ed40:	add	r3, pc, r3
   1ed44:	ldrsh	r3, [r3, r1]
   1ed48:	cmp	r3, #0
   1ed4c:	beq	1ed5c <sfbpf_lex+0x1154>
   1ed50:	mov	r4, r0
   1ed54:	mov	r6, #1
   1ed58:	str	ip, [sp, #16]
   1ed5c:	ldrsh	r3, [lr, r1]
   1ed60:	ldr	ip, [pc, #-384]	; 1ebe8 <sfbpf_lex+0xfe0>
   1ed64:	add	r3, r3, r2
   1ed68:	lsl	r3, r3, #1
   1ed6c:	add	ip, pc, ip
   1ed70:	ldrsh	ip, [ip, r3]
   1ed74:	cmp	r0, ip
   1ed78:	beq	1edd4 <sfbpf_lex+0x11cc>
   1ed7c:	ldr	r3, [sp, #36]	; 0x24
   1ed80:	ldr	r5, [pc, #-412]	; 1ebec <sfbpf_lex+0xfe4>
   1ed84:	sub	ip, r3, #8
   1ed88:	ldr	r3, [pc, #-416]	; 1ebf0 <sfbpf_lex+0xfe8>
   1ed8c:	add	r5, pc, r5
   1ed90:	add	r3, pc, r3
   1ed94:	str	r3, [sp, #24]
   1ed98:	ldrsh	r0, [ip, r1]
   1ed9c:	movw	r3, #1433	; 0x599
   1eda0:	cmp	r0, r3
   1eda4:	lsl	r1, r0, #1
   1eda8:	ble	1ee08 <sfbpf_lex+0x1200>
   1edac:	ldr	r9, [sp, #24]
   1edb0:	ldr	r3, [sp, #32]
   1edb4:	add	r2, r3, r2
   1edb8:	ldrsh	r3, [r7, r1]
   1edbc:	ldrb	r2, [r2, #2516]	; 0x9d4
   1edc0:	add	r3, r3, r2
   1edc4:	lsl	r3, r3, #1
   1edc8:	ldrsh	r9, [r9, r3]
   1edcc:	cmp	r0, r9
   1edd0:	bne	1ed98 <sfbpf_lex+0x1190>
   1edd4:	ldr	r2, [pc, #-488]	; 1ebf4 <sfbpf_lex+0xfec>
   1edd8:	cmp	fp, sl
   1eddc:	add	r2, pc, r2
   1ede0:	ldrsh	r0, [r2, r3]
   1ede4:	bne	1ed14 <sfbpf_lex+0x110c>
   1ede8:	cmp	r6, #0
   1edec:	beq	1e3f0 <sfbpf_lex+0x7e8>
   1edf0:	ldr	r3, [pc, #-512]	; 1ebf8 <sfbpf_lex+0xff0>
   1edf4:	ldr	r2, [sp, #16]
   1edf8:	add	r3, pc, r3
   1edfc:	str	r4, [r3, #40]	; 0x28
   1ee00:	str	r2, [r3, #44]	; 0x2c
   1ee04:	b	1e3f0 <sfbpf_lex+0x7e8>
   1ee08:	ldr	r3, [sp, #28]
   1ee0c:	ldrsh	r3, [r3, r1]
   1ee10:	add	r3, r3, r2
   1ee14:	lsl	r3, r3, #1
   1ee18:	ldrsh	r9, [r5, r3]
   1ee1c:	cmp	r0, r9
   1ee20:	bne	1ed98 <sfbpf_lex+0x1190>
   1ee24:	b	1edd4 <sfbpf_lex+0x11cc>
   1ee28:	ldr	r0, [pc, #-564]	; 1ebfc <sfbpf_lex+0xff4>
   1ee2c:	ldr	r3, [sp, #12]
   1ee30:	add	r0, pc, r0
   1ee34:	ldr	r1, [r3]
   1ee38:	bl	2130 <sf_bpf_error>
   1ee3c:	ldr	r0, [pc, #-580]	; 1ec00 <sfbpf_lex+0xff8>
   1ee40:	ldr	r3, [sp, #12]
   1ee44:	add	r0, pc, r0
   1ee48:	ldr	r1, [r3]
   1ee4c:	bl	2130 <sf_bpf_error>
   1ee50:	ldr	r0, [pc, #-596]	; 1ec04 <sfbpf_lex+0xffc>
   1ee54:	ldr	r3, [sp, #12]
   1ee58:	add	r0, pc, r0
   1ee5c:	ldr	r1, [r3]
   1ee60:	bl	2130 <sf_bpf_error>
   1ee64:	ldr	r3, [sp, #12]
   1ee68:	ldr	r0, [pc, #-616]	; 1ec08 <sfbpf_lex+0x1000>
   1ee6c:	ldr	r3, [r3]
   1ee70:	add	r0, pc, r0
   1ee74:	ldrb	r1, [r3]
   1ee78:	bl	2130 <sf_bpf_error>
   1ee7c:	sub	r6, ip, #1
   1ee80:	cmp	r6, #0
   1ee84:	ble	1ef20 <sfbpf_lex+0x1318>
   1ee88:	add	r1, r8, #4
   1ee8c:	add	r0, r2, #4
   1ee90:	cmp	r8, r0
   1ee94:	cmpcc	r2, r1
   1ee98:	ldr	r0, [sp, #32]
   1ee9c:	movcs	r1, #1
   1eea0:	movcc	r1, #0
   1eea4:	sub	r0, r0, #2
   1eea8:	cmp	r0, #7
   1eeac:	movls	r1, #0
   1eeb0:	andhi	r1, r1, #1
   1eeb4:	cmp	r1, #0
   1eeb8:	beq	1f708 <sfbpf_lex+0x1b00>
   1eebc:	bic	r1, r6, #3
   1eec0:	mov	r0, r2
   1eec4:	add	r1, r1, r2
   1eec8:	mov	ip, r8
   1eecc:	ldr	fp, [ip], #4
   1eed0:	str	fp, [r0], #4
   1eed4:	cmp	r1, r0
   1eed8:	bne	1eecc <sfbpf_lex+0x12c4>
   1eedc:	bic	r1, r6, #3
   1eee0:	cmp	r1, r6
   1eee4:	add	ip, r8, r1
   1eee8:	add	r0, r2, r1
   1eeec:	beq	1ef1c <sfbpf_lex+0x1314>
   1eef0:	ldrb	r8, [r8, r1]
   1eef4:	add	fp, r1, #1
   1eef8:	cmp	r6, fp
   1eefc:	strb	r8, [r2, r1]
   1ef00:	ble	1ef1c <sfbpf_lex+0x1314>
   1ef04:	ldrb	r2, [ip, #1]
   1ef08:	add	r1, r1, #2
   1ef0c:	cmp	r1, r6
   1ef10:	strb	r2, [r0, #1]
   1ef14:	ldrblt	r2, [ip, #2]
   1ef18:	strblt	r2, [r0, #2]
   1ef1c:	ldr	r1, [r9]
   1ef20:	mov	fp, r1
   1ef24:	ldr	r2, [r1, #44]	; 0x2c
   1ef28:	cmp	r2, #2
   1ef2c:	beq	1f334 <sfbpf_lex+0x172c>
   1ef30:	ldr	r1, [r1, #12]
   1ef34:	sub	r8, r1, r6
   1ef38:	sub	r8, r8, #1
   1ef3c:	cmp	r8, #0
   1ef40:	bgt	1f2a0 <sfbpf_lex+0x1698>
   1ef44:	str	r7, [sp, #40]	; 0x28
   1ef48:	mov	r7, r5
   1ef4c:	mov	r5, r3
   1ef50:	b	1efa8 <sfbpf_lex+0x13a0>
   1ef54:	cmp	r1, #0
   1ef58:	lslgt	r1, r1, #1
   1ef5c:	bgt	1ef6c <sfbpf_lex+0x1364>
   1ef60:	add	r2, r1, #7
   1ef64:	movge	r2, r1
   1ef68:	add	r1, r1, r2, asr #3
   1ef6c:	str	r1, [fp, #12]
   1ef70:	add	r1, r1, #2
   1ef74:	bl	d90 <realloc@plt>
   1ef78:	cmp	r0, #0
   1ef7c:	str	r0, [fp, #4]
   1ef80:	beq	1efc0 <sfbpf_lex+0x13b8>
   1ef84:	ldr	fp, [r9]
   1ef88:	add	lr, r0, r8
   1ef8c:	ldr	r3, [sp, #24]
   1ef90:	ldr	r1, [fp, #12]
   1ef94:	str	lr, [r3, #12]
   1ef98:	sub	r8, r1, r6
   1ef9c:	sub	r8, r8, #1
   1efa0:	cmp	r8, #0
   1efa4:	bgt	1f294 <sfbpf_lex+0x168c>
   1efa8:	ldr	r0, [fp, #4]
   1efac:	ldr	ip, [fp, #20]
   1efb0:	sub	r8, lr, r0
   1efb4:	cmp	ip, #0
   1efb8:	bne	1ef54 <sfbpf_lex+0x134c>
   1efbc:	str	ip, [fp, #4]
   1efc0:	ldr	r0, [pc, #-956]	; 1ec0c <sfbpf_lex+0x1004>
   1efc4:	add	r0, pc, r0
   1efc8:	bl	1d6e0 <yy_fatal_error>
   1efcc:	ldr	r0, [pc, #-964]	; 1ec10 <sfbpf_lex+0x1008>
   1efd0:	add	r0, pc, r0
   1efd4:	bl	1d6e0 <yy_fatal_error>
   1efd8:	ldr	r3, [pc, #-972]	; 1ec14 <sfbpf_lex+0x100c>
   1efdc:	ldr	r2, [sp, #36]	; 0x24
   1efe0:	add	r3, pc, r3
   1efe4:	ldr	r0, [r3, #28]
   1efe8:	add	fp, r8, r2
   1efec:	cmp	fp, r8
   1eff0:	str	fp, [r3, #12]
   1eff4:	bls	1f170 <sfbpf_lex+0x1568>
   1eff8:	ldr	ip, [pc, #-1000]	; 1ec18 <sfbpf_lex+0x1010>
   1effc:	mov	r2, #0
   1f000:	mov	sl, r8
   1f004:	ldr	r1, [pc, #-1008]	; 1ec1c <sfbpf_lex+0x1014>
   1f008:	str	r2, [sp, #16]
   1f00c:	ldr	r2, [pc, #-1012]	; 1ec20 <sfbpf_lex+0x1018>
   1f010:	add	ip, pc, ip
   1f014:	add	r6, ip, #2864	; 0xb30
   1f018:	ldr	ip, [pc, #-1020]	; 1ec24 <sfbpf_lex+0x101c>
   1f01c:	add	r1, pc, r1
   1f020:	add	r6, r6, #4
   1f024:	add	r4, r1, #2864	; 0xb30
   1f028:	ldr	r1, [r3, #40]	; 0x28
   1f02c:	add	r2, pc, r2
   1f030:	add	r4, r4, #4
   1f034:	ldr	r3, [r3, #44]	; 0x2c
   1f038:	add	lr, r2, #2864	; 0xb30
   1f03c:	add	ip, pc, ip
   1f040:	add	lr, lr, #4
   1f044:	str	r1, [sp, #24]
   1f048:	str	r3, [sp, #32]
   1f04c:	sub	r3, ip, #1264	; 0x4f0
   1f050:	str	ip, [sp, #40]	; 0x28
   1f054:	str	r3, [sp, #44]	; 0x2c
   1f058:	mov	ip, sl
   1f05c:	ldrb	r2, [sl], #1
   1f060:	cmp	r2, #0
   1f064:	moveq	r2, #1
   1f068:	beq	1f07c <sfbpf_lex+0x1474>
   1f06c:	ldr	r3, [pc, #-1100]	; 1ec28 <sfbpf_lex+0x1020>
   1f070:	add	r3, pc, r3
   1f074:	add	r3, r3, r2
   1f078:	ldrb	r2, [r3, #-1528]	; 0xfffffa08
   1f07c:	lsl	r1, r0, #1
   1f080:	ldr	r3, [pc, #-1116]	; 1ec2c <sfbpf_lex+0x1024>
   1f084:	add	r3, pc, r3
   1f088:	ldrsh	r3, [r3, r1]
   1f08c:	cmp	r3, #0
   1f090:	beq	1f0a4 <sfbpf_lex+0x149c>
   1f094:	mov	r3, #1
   1f098:	str	r3, [sp, #16]
   1f09c:	str	r0, [sp, #24]
   1f0a0:	str	ip, [sp, #32]
   1f0a4:	ldrsh	r3, [r6, r1]
   1f0a8:	ldr	ip, [pc, #-1152]	; 1ec30 <sfbpf_lex+0x1028>
   1f0ac:	add	r3, r3, r2
   1f0b0:	lsl	r3, r3, #1
   1f0b4:	add	ip, pc, ip
   1f0b8:	ldrsh	ip, [ip, r3]
   1f0bc:	cmp	r0, ip
   1f0c0:	beq	1f138 <sfbpf_lex+0x1530>
   1f0c4:	ldr	r3, [sp, #44]	; 0x2c
   1f0c8:	ldr	r5, [pc, #-1180]	; 1ec34 <sfbpf_lex+0x102c>
   1f0cc:	sub	ip, r3, #8
   1f0d0:	ldr	r3, [pc, #-1184]	; 1ec38 <sfbpf_lex+0x1030>
   1f0d4:	add	r5, pc, r5
   1f0d8:	add	r3, pc, r3
   1f0dc:	str	r3, [sp, #36]	; 0x24
   1f0e0:	ldrsh	r0, [ip, r1]
   1f0e4:	movw	r3, #1433	; 0x599
   1f0e8:	cmp	r0, r3
   1f0ec:	lsl	r1, r0, #1
   1f0f0:	ble	1f120 <sfbpf_lex+0x1518>
   1f0f4:	ldr	r9, [sp, #36]	; 0x24
   1f0f8:	ldr	r3, [sp, #40]	; 0x28
   1f0fc:	add	r2, r3, r2
   1f100:	ldrsh	r3, [lr, r1]
   1f104:	ldrb	r2, [r2, #2516]	; 0x9d4
   1f108:	add	r3, r3, r2
   1f10c:	lsl	r3, r3, #1
   1f110:	ldrsh	r9, [r9, r3]
   1f114:	cmp	r9, r0
   1f118:	bne	1f0e0 <sfbpf_lex+0x14d8>
   1f11c:	b	1f138 <sfbpf_lex+0x1530>
   1f120:	ldrsh	r3, [r4, r1]
   1f124:	add	r3, r3, r2
   1f128:	lsl	r3, r3, #1
   1f12c:	ldrsh	r9, [r5, r3]
   1f130:	cmp	r0, r9
   1f134:	bne	1f0e0 <sfbpf_lex+0x14d8>
   1f138:	ldr	r2, [pc, #-1284]	; 1ec3c <sfbpf_lex+0x1034>
   1f13c:	cmp	sl, fp
   1f140:	add	r2, pc, r2
   1f144:	ldrsh	r0, [r2, r3]
   1f148:	bne	1f058 <sfbpf_lex+0x1450>
   1f14c:	ldr	r3, [sp, #16]
   1f150:	cmp	r3, #0
   1f154:	beq	1f170 <sfbpf_lex+0x1568>
   1f158:	ldr	r3, [pc, #-1312]	; 1ec40 <sfbpf_lex+0x1038>
   1f15c:	ldr	r2, [sp, #24]
   1f160:	add	r3, pc, r3
   1f164:	str	r2, [r3, #40]	; 0x28
   1f168:	ldr	r2, [sp, #32]
   1f16c:	str	r2, [r3, #44]	; 0x2c
   1f170:	ldr	r3, [pc, #-1332]	; 1ec44 <sfbpf_lex+0x103c>
   1f174:	lsl	r1, r0, #1
   1f178:	add	r3, pc, r3
   1f17c:	ldrsh	r3, [r3, r1]
   1f180:	cmp	r3, #0
   1f184:	beq	1f198 <sfbpf_lex+0x1590>
   1f188:	ldr	r3, [pc, #-1352]	; 1ec48 <sfbpf_lex+0x1040>
   1f18c:	add	r3, pc, r3
   1f190:	str	r0, [r3, #40]	; 0x28
   1f194:	str	fp, [r3, #44]	; 0x2c
   1f198:	ldr	r2, [pc, #-1364]	; 1ec4c <sfbpf_lex+0x1044>
   1f19c:	ldr	ip, [pc, #-1364]	; 1ec50 <sfbpf_lex+0x1048>
   1f1a0:	add	r2, pc, r2
   1f1a4:	add	r2, r2, #2864	; 0xb30
   1f1a8:	add	r2, r2, #4
   1f1ac:	add	ip, pc, ip
   1f1b0:	ldrsh	r3, [r2, r1]
   1f1b4:	add	r3, r3, #1
   1f1b8:	lsl	r3, r3, #1
   1f1bc:	ldrsh	r1, [ip, r3]
   1f1c0:	cmp	r1, r0
   1f1c4:	beq	1f1fc <sfbpf_lex+0x15f4>
   1f1c8:	ldr	r1, [pc, #-1404]	; 1ec54 <sfbpf_lex+0x104c>
   1f1cc:	lsl	lr, r0, #1
   1f1d0:	add	r1, pc, r1
   1f1d4:	sub	r1, r1, #1264	; 0x4f0
   1f1d8:	sub	r1, r1, #8
   1f1dc:	ldrsh	r4, [r1, lr]
   1f1e0:	lsl	lr, r4, #1
   1f1e4:	ldrsh	r3, [r2, lr]
   1f1e8:	add	r3, r3, #1
   1f1ec:	lsl	r3, r3, #1
   1f1f0:	ldrsh	r5, [ip, r3]
   1f1f4:	cmp	r4, r5
   1f1f8:	bne	1f1dc <sfbpf_lex+0x15d4>
   1f1fc:	ldr	r2, [pc, #-1452]	; 1ec58 <sfbpf_lex+0x1050>
   1f200:	movw	r1, #1433	; 0x599
   1f204:	add	r2, pc, r2
   1f208:	ldrsh	r3, [r2, r3]
   1f20c:	cmp	r3, #0
   1f210:	cmpne	r3, r1
   1f214:	beq	1e3f0 <sfbpf_lex+0x7e8>
   1f218:	mov	r2, fp
   1f21c:	mov	fp, r3
   1f220:	ldr	r3, [pc, #-1484]	; 1ec5c <sfbpf_lex+0x1054>
   1f224:	add	r2, r2, #1
   1f228:	mov	r6, r8
   1f22c:	ldr	sl, [sp]
   1f230:	str	r2, [sp]
   1f234:	ldr	r9, [sp, #4]
   1f238:	add	r3, pc, r3
   1f23c:	str	r2, [r3, #12]
   1f240:	ldr	r3, [r3, #40]	; 0x28
   1f244:	str	r3, [sp, #4]
   1f248:	ldr	r3, [pc, #-1520]	; 1ec60 <sfbpf_lex+0x1058>
   1f24c:	lsl	r1, fp, #1
   1f250:	str	r6, [sp, #16]
   1f254:	ldr	r8, [sp]
   1f258:	add	r3, pc, r3
   1f25c:	add	r2, r3, #2864	; 0xb30
   1f260:	ldrsh	r4, [r3, r1]
   1f264:	add	r2, r2, #4
   1f268:	ldrsh	r5, [r2, r1]
   1f26c:	b	1dcd8 <sfbpf_lex+0xd0>
   1f270:	ldr	r2, [r5, #24]
   1f274:	mov	ip, #1
   1f278:	ldr	r0, [r1, #16]
   1f27c:	str	r2, [r1]
   1f280:	ldr	r2, [sl, r3, lsl #2]
   1f284:	str	r0, [r5, #20]
   1f288:	str	ip, [r2, #44]	; 0x2c
   1f28c:	ldr	r1, [sl, r3, lsl #2]
   1f290:	b	1e4ac <sfbpf_lex+0x8a4>
   1f294:	mov	r3, r5
   1f298:	mov	r5, r7
   1f29c:	ldr	r7, [sp, #40]	; 0x28
   1f2a0:	cmp	r8, #8192	; 0x2000
   1f2a4:	ldr	fp, [fp, #24]
   1f2a8:	movge	r8, #8192	; 0x2000
   1f2ac:	cmp	fp, #0
   1f2b0:	beq	1f618 <sfbpf_lex+0x1a10>
   1f2b4:	ldr	fp, [pc, #-1624]	; 1ec64 <sfbpf_lex+0x105c>
   1f2b8:	mov	sl, #0
   1f2bc:	ldr	r3, [sp, #32]
   1f2c0:	add	fp, pc, fp
   1f2c4:	sub	r9, r3, #2
   1f2c8:	ldr	r0, [fp, #24]
   1f2cc:	bl	ec8 <getc@plt>
   1f2d0:	cmn	r0, #1
   1f2d4:	beq	1f5e4 <sfbpf_lex+0x19dc>
   1f2d8:	ldr	r2, [fp]
   1f2dc:	add	sl, sl, #1
   1f2e0:	cmp	r0, #10
   1f2e4:	add	r3, r9, sl
   1f2e8:	ldr	r1, [fp, #8]
   1f2ec:	ldr	r2, [r2, r1, lsl #2]
   1f2f0:	ldr	r2, [r2, #4]
   1f2f4:	add	r1, r2, r3
   1f2f8:	beq	1f5d8 <sfbpf_lex+0x19d0>
   1f2fc:	cmp	r8, sl
   1f300:	strb	r0, [r2, r3]
   1f304:	bne	1f2c8 <sfbpf_lex+0x16c0>
   1f308:	ldr	r3, [pc, #-1704]	; 1ec68 <sfbpf_lex+0x1060>
   1f30c:	mov	sl, r8
   1f310:	add	r3, pc, r3
   1f314:	ldr	r9, [r3]
   1f318:	str	r8, [r3, #20]
   1f31c:	ldr	r3, [r3, #8]
   1f320:	ldr	r2, [r9, r3, lsl #2]
   1f324:	add	r9, r9, r3, lsl #2
   1f328:	str	r8, [r2, #16]
   1f32c:	mov	fp, #0
   1f330:	b	1f36c <sfbpf_lex+0x1764>
   1f334:	ldr	r3, [pc, #-1744]	; 1ec6c <sfbpf_lex+0x1064>
   1f338:	mov	r2, #0
   1f33c:	str	r2, [r1, #16]
   1f340:	add	r3, pc, r3
   1f344:	str	r2, [r3, #20]
   1f348:	cmp	r6, #0
   1f34c:	beq	1f5a4 <sfbpf_lex+0x199c>
   1f350:	ldr	r3, [pc, #-1768]	; 1ec70 <sfbpf_lex+0x1068>
   1f354:	mov	r2, #2
   1f358:	mov	fp, r2
   1f35c:	ldr	r1, [r9]
   1f360:	add	r3, pc, r3
   1f364:	ldr	sl, [r3, #20]
   1f368:	str	r2, [r1, #44]	; 0x2c
   1f36c:	ldr	r8, [r9]
   1f370:	add	r6, r6, sl
   1f374:	ldr	r0, [r8, #4]
   1f378:	ldr	r3, [r8, #12]
   1f37c:	cmp	r6, r3
   1f380:	bgt	1f570 <sfbpf_lex+0x1968>
   1f384:	mov	r2, #0
   1f388:	ldr	r3, [pc, #-1820]	; 1ec74 <sfbpf_lex+0x106c>
   1f38c:	cmp	fp, #1
   1f390:	strb	r2, [r0, r6]
   1f394:	ldr	r1, [r9]
   1f398:	add	r3, pc, r3
   1f39c:	str	r6, [r3, #20]
   1f3a0:	ldr	r1, [r1, #4]
   1f3a4:	add	r1, r1, r6
   1f3a8:	strb	r2, [r1, #1]
   1f3ac:	ldr	r1, [r9]
   1f3b0:	ldr	r8, [r1, #4]
   1f3b4:	ldr	r1, [sp, #12]
   1f3b8:	str	r8, [r1]
   1f3bc:	beq	1e4f0 <sfbpf_lex+0x8e8>
   1f3c0:	cmp	fp, #2
   1f3c4:	beq	1ecb8 <sfbpf_lex+0x10b0>
   1f3c8:	ldr	fp, [r3, #28]
   1f3cc:	mov	r6, r8
   1f3d0:	ldr	r1, [sp, #36]	; 0x24
   1f3d4:	ldr	r4, [r3, #40]	; 0x28
   1f3d8:	ldr	sl, [sp]
   1f3dc:	add	r1, r8, r1
   1f3e0:	cmp	r1, r8
   1f3e4:	ldr	r9, [sp, #4]
   1f3e8:	str	r1, [r3, #12]
   1f3ec:	ldr	r3, [r3, #44]	; 0x2c
   1f3f0:	stm	sp, {r1, r4}
   1f3f4:	str	r3, [sp, #16]
   1f3f8:	bls	1f248 <sfbpf_lex+0x1640>
   1f3fc:	mov	r7, r8
   1f400:	ldr	r3, [pc, #-1936]	; 1ec78 <sfbpf_lex+0x1070>
   1f404:	str	r2, [sp, #24]
   1f408:	ldr	r8, [pc, #-1940]	; 1ec7c <sfbpf_lex+0x1074>
   1f40c:	ldr	r2, [pc, #-1940]	; 1ec80 <sfbpf_lex+0x1078>
   1f410:	add	r3, pc, r3
   1f414:	ldr	r5, [pc, #-1944]	; 1ec84 <sfbpf_lex+0x107c>
   1f418:	add	ip, r3, #2864	; 0xb30
   1f41c:	add	r8, pc, r8
   1f420:	add	ip, ip, #4
   1f424:	add	r8, r8, #2864	; 0xb30
   1f428:	add	r2, pc, r2
   1f42c:	add	r8, r8, #4
   1f430:	add	lr, r2, #2864	; 0xb30
   1f434:	add	r5, pc, r5
   1f438:	add	lr, lr, #4
   1f43c:	sub	r3, r5, #1264	; 0x4f0
   1f440:	str	r3, [sp, #40]	; 0x28
   1f444:	mov	r0, r7
   1f448:	ldrb	r2, [r7], #1
   1f44c:	cmp	r2, #0
   1f450:	moveq	r2, #1
   1f454:	beq	1f468 <sfbpf_lex+0x1860>
   1f458:	ldr	r3, [pc, #-2008]	; 1ec88 <sfbpf_lex+0x1080>
   1f45c:	add	r3, pc, r3
   1f460:	add	r3, r3, r2
   1f464:	ldrb	r2, [r3, #-1528]	; 0xfffffa08
   1f468:	lsl	r1, fp, #1
   1f46c:	ldr	r3, [pc, #-2024]	; 1ec8c <sfbpf_lex+0x1084>
   1f470:	add	r3, pc, r3
   1f474:	ldrsh	r3, [r3, r1]
   1f478:	cmp	r3, #0
   1f47c:	beq	1f490 <sfbpf_lex+0x1888>
   1f480:	mov	r3, #1
   1f484:	mov	r4, fp
   1f488:	str	r0, [sp, #16]
   1f48c:	str	r3, [sp, #24]
   1f490:	ldrsh	r3, [r8, r1]
   1f494:	ldr	r0, [pc, #-2060]	; 1ec90 <sfbpf_lex+0x1088>
   1f498:	add	r3, r3, r2
   1f49c:	lsl	r3, r3, #1
   1f4a0:	add	r0, pc, r0
   1f4a4:	ldrsh	r0, [r0, r3]
   1f4a8:	cmp	fp, r0
   1f4ac:	beq	1f510 <sfbpf_lex+0x1908>
   1f4b0:	ldr	r3, [pc, #-2084]	; 1ec94 <sfbpf_lex+0x108c>
   1f4b4:	add	r3, pc, r3
   1f4b8:	str	r3, [sp, #32]
   1f4bc:	ldr	r3, [sp, #40]	; 0x28
   1f4c0:	sub	r3, r3, #8
   1f4c4:	str	r3, [sp, #28]
   1f4c8:	ldr	r3, [pc, #-2104]	; 1ec98 <sfbpf_lex+0x1090>
   1f4cc:	add	r3, pc, r3
   1f4d0:	str	r3, [sp, #36]	; 0x24
   1f4d4:	ldr	r3, [sp, #28]
   1f4d8:	ldrsh	r0, [r3, r1]
   1f4dc:	movw	r3, #1433	; 0x599
   1f4e0:	cmp	r0, r3
   1f4e4:	lsl	r1, r0, #1
   1f4e8:	ble	1f550 <sfbpf_lex+0x1948>
   1f4ec:	add	r2, r5, r2
   1f4f0:	ldrsh	r3, [ip, r1]
   1f4f4:	ldrb	r2, [r2, #2516]	; 0x9d4
   1f4f8:	ldr	fp, [sp, #36]	; 0x24
   1f4fc:	add	r3, r3, r2
   1f500:	lsl	r3, r3, #1
   1f504:	ldrsh	fp, [fp, r3]
   1f508:	cmp	r0, fp
   1f50c:	bne	1f4d4 <sfbpf_lex+0x18cc>
   1f510:	ldr	r2, [pc, #-2172]	; 1ec9c <sfbpf_lex+0x1094>
   1f514:	ldr	r1, [sp]
   1f518:	add	r2, pc, r2
   1f51c:	ldrsh	fp, [r2, r3]
   1f520:	cmp	r7, r1
   1f524:	bne	1f444 <sfbpf_lex+0x183c>
   1f528:	ldr	r3, [sp, #24]
   1f52c:	cmp	r3, #0
   1f530:	beq	1f248 <sfbpf_lex+0x1640>
   1f534:	ldr	r3, [pc, #-2204]	; 1eca0 <sfbpf_lex+0x1098>
   1f538:	str	r4, [sp, #4]
   1f53c:	ldr	r2, [sp, #16]
   1f540:	add	r3, pc, r3
   1f544:	str	r4, [r3, #40]	; 0x28
   1f548:	str	r2, [r3, #44]	; 0x2c
   1f54c:	b	1f248 <sfbpf_lex+0x1640>
   1f550:	ldrsh	r3, [lr, r1]
   1f554:	ldr	fp, [sp, #32]
   1f558:	add	r3, r3, r2
   1f55c:	lsl	r3, r3, #1
   1f560:	ldrsh	fp, [fp, r3]
   1f564:	cmp	r0, fp
   1f568:	bne	1f4d4 <sfbpf_lex+0x18cc>
   1f56c:	b	1f510 <sfbpf_lex+0x1908>
   1f570:	add	sl, r6, sl, asr #1
   1f574:	mov	r1, sl
   1f578:	bl	d90 <realloc@plt>
   1f57c:	str	r0, [r8, #4]
   1f580:	ldr	r3, [r9]
   1f584:	ldr	r2, [r3, #4]
   1f588:	cmp	r2, #0
   1f58c:	beq	1f5cc <sfbpf_lex+0x19c4>
   1f590:	sub	sl, sl, #2
   1f594:	str	sl, [r3, #12]
   1f598:	ldr	r3, [r9]
   1f59c:	ldr	r0, [r3, #4]
   1f5a0:	b	1f384 <sfbpf_lex+0x177c>
   1f5a4:	ldr	r8, [pc, #-2312]	; 1eca4 <sfbpf_lex+0x109c>
   1f5a8:	mov	fp, #1
   1f5ac:	add	r8, pc, r8
   1f5b0:	ldr	r0, [r8, #24]
   1f5b4:	bl	1da34 <sfbpf_restart>
   1f5b8:	ldr	r9, [r8]
   1f5bc:	ldr	r3, [r8, #8]
   1f5c0:	ldr	sl, [r8, #20]
   1f5c4:	add	r9, r9, r3, lsl #2
   1f5c8:	b	1f36c <sfbpf_lex+0x1764>
   1f5cc:	ldr	r0, [pc, #-2348]	; 1eca8 <sfbpf_lex+0x10a0>
   1f5d0:	add	r0, pc, r0
   1f5d4:	bl	1d6e0 <yy_fatal_error>
   1f5d8:	mov	r8, sl
   1f5dc:	strb	r0, [r1]
   1f5e0:	b	1f308 <sfbpf_lex+0x1700>
   1f5e4:	ldr	r0, [fp, #24]
   1f5e8:	bl	d60 <ferror@plt>
   1f5ec:	cmp	r0, #0
   1f5f0:	bne	1f6d8 <sfbpf_lex+0x1ad0>
   1f5f4:	ldr	r9, [fp]
   1f5f8:	cmp	sl, #0
   1f5fc:	str	sl, [fp, #20]
   1f600:	ldr	r3, [fp, #8]
   1f604:	ldr	r2, [r9, r3, lsl #2]
   1f608:	add	r9, r9, r3, lsl #2
   1f60c:	str	sl, [r2, #16]
   1f610:	bne	1f32c <sfbpf_lex+0x1724>
   1f614:	b	1f348 <sfbpf_lex+0x1740>
   1f618:	ldr	r9, [pc, #-2420]	; 1ecac <sfbpf_lex+0x10a4>
   1f61c:	str	r3, [sp, #40]	; 0x28
   1f620:	bl	e14 <__errno_location@plt>
   1f624:	mov	r3, r0
   1f628:	mov	r0, sl
   1f62c:	mov	sl, r7
   1f630:	mov	r7, r5
   1f634:	add	r9, pc, r9
   1f638:	mov	r5, r4
   1f63c:	str	fp, [r3]
   1f640:	str	r3, [sp, #32]
   1f644:	ldr	r3, [sp, #40]	; 0x28
   1f648:	b	1f680 <sfbpf_lex+0x1a78>
   1f64c:	ldr	r0, [r9, #24]
   1f650:	bl	d60 <ferror@plt>
   1f654:	cmp	r0, #0
   1f658:	beq	1f6e4 <sfbpf_lex+0x1adc>
   1f65c:	ldr	r3, [sp, #32]
   1f660:	ldr	r2, [r3]
   1f664:	cmp	r2, #4
   1f668:	bne	1f6d8 <sfbpf_lex+0x1ad0>
   1f66c:	str	r4, [r3]
   1f670:	ldr	r0, [r9, #24]
   1f674:	bl	e68 <clearerr@plt>
   1f678:	ldr	r0, [r9]
   1f67c:	ldr	r3, [r9, #8]
   1f680:	mov	r2, r8
   1f684:	mov	r1, #1
   1f688:	ldr	r0, [r0, r3, lsl #2]
   1f68c:	ldr	r3, [r9, #24]
   1f690:	ldr	r0, [r0, #4]
   1f694:	add	r0, r0, r6
   1f698:	bl	da8 <fread@plt>
   1f69c:	cmp	r0, #0
   1f6a0:	mov	r4, r0
   1f6a4:	str	r0, [r9, #20]
   1f6a8:	beq	1f64c <sfbpf_lex+0x1a44>
   1f6ac:	mov	r3, sl
   1f6b0:	mov	r4, r5
   1f6b4:	mov	r5, r7
   1f6b8:	mov	r7, r3
   1f6bc:	ldr	r3, [r9]
   1f6c0:	mov	sl, r0
   1f6c4:	ldr	r9, [r9, #8]
   1f6c8:	ldr	r2, [r3, r9, lsl #2]
   1f6cc:	add	r9, r3, r9, lsl #2
   1f6d0:	str	r0, [r2, #16]
   1f6d4:	b	1f36c <sfbpf_lex+0x1764>
   1f6d8:	ldr	r0, [pc, #-2608]	; 1ecb0 <sfbpf_lex+0x10a8>
   1f6dc:	add	r0, pc, r0
   1f6e0:	bl	1d6e0 <yy_fatal_error>
   1f6e4:	ldr	r3, [r9]
   1f6e8:	mov	r4, r5
   1f6ec:	mov	r5, r7
   1f6f0:	mov	r7, sl
   1f6f4:	ldr	r9, [r9, #8]
   1f6f8:	ldr	r2, [r3, r9, lsl #2]
   1f6fc:	add	r9, r3, r9, lsl #2
   1f700:	str	r0, [r2, #16]
   1f704:	b	1f348 <sfbpf_lex+0x1740>
   1f708:	sub	r2, r2, #1
   1f70c:	add	r1, r8, r6
   1f710:	ldrb	r0, [r8], #1
   1f714:	cmp	r1, r8
   1f718:	strb	r0, [r2, #1]!
   1f71c:	bne	1f710 <sfbpf_lex+0x1b08>
   1f720:	b	1ef1c <sfbpf_lex+0x1314>
   1f724:	ldr	r0, [pc, #-2680]	; 1ecb4 <sfbpf_lex+0x10ac>
   1f728:	add	r0, pc, r0
   1f72c:	bl	1d6e0 <yy_fatal_error>

0001f730 <sfbpf__delete_buffer>:
   1f730:	str	r4, [sp, #-8]!
   1f734:	subs	r4, r0, #0
   1f738:	str	lr, [sp, #4]
   1f73c:	beq	1f794 <sfbpf__delete_buffer+0x64>
   1f740:	ldr	r2, [pc, #88]	; 1f7a0 <sfbpf__delete_buffer+0x70>
   1f744:	add	r2, pc, r2
   1f748:	ldr	r3, [r2]
   1f74c:	cmp	r3, #0
   1f750:	beq	1f768 <sfbpf__delete_buffer+0x38>
   1f754:	ldr	r2, [r2, #8]
   1f758:	ldr	r1, [r3, r2, lsl #2]
   1f75c:	cmp	r4, r1
   1f760:	moveq	r1, #0
   1f764:	streq	r1, [r3, r2, lsl #2]
   1f768:	ldr	r3, [r4, #20]
   1f76c:	cmp	r3, #0
   1f770:	bne	1f788 <sfbpf__delete_buffer+0x58>
   1f774:	mov	r0, r4
   1f778:	ldr	r4, [sp]
   1f77c:	ldr	lr, [sp, #4]
   1f780:	add	sp, sp, #8
   1f784:	b	d48 <free@plt>
   1f788:	ldr	r0, [r4, #4]
   1f78c:	bl	d48 <free@plt>
   1f790:	b	1f774 <sfbpf__delete_buffer+0x44>
   1f794:	ldr	r4, [sp]
   1f798:	add	sp, sp, #4
   1f79c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f7a0:	.word	0x0001f3f4

0001f7a4 <sfbpf__flush_buffer>:
   1f7a4:	str	r4, [sp, #-8]!
   1f7a8:	cmp	r0, #0
   1f7ac:	str	lr, [sp, #4]
   1f7b0:	ldr	lr, [pc, #152]	; 1f850 <sfbpf__flush_buffer+0xac>
   1f7b4:	add	lr, pc, lr
   1f7b8:	beq	1f80c <sfbpf__flush_buffer+0x68>
   1f7bc:	ldr	r1, [r0, #4]
   1f7c0:	mov	r3, #0
   1f7c4:	mov	r4, #1
   1f7c8:	ldr	r2, [pc, #132]	; 1f854 <sfbpf__flush_buffer+0xb0>
   1f7cc:	str	r3, [r0, #16]
   1f7d0:	strb	r3, [r1]
   1f7d4:	ldr	ip, [r0, #4]
   1f7d8:	add	r2, pc, r2
   1f7dc:	ldr	r1, [r2]
   1f7e0:	strb	r3, [ip, #1]
   1f7e4:	ldr	ip, [r0, #4]
   1f7e8:	cmp	r1, r3
   1f7ec:	str	ip, [r0, #8]
   1f7f0:	str	r4, [r0, #28]
   1f7f4:	str	r3, [r0, #44]	; 0x2c
   1f7f8:	beq	1f80c <sfbpf__flush_buffer+0x68>
   1f7fc:	ldr	r3, [r2, #8]
   1f800:	ldr	r4, [r1, r3, lsl #2]
   1f804:	cmp	r0, r4
   1f808:	beq	1f818 <sfbpf__flush_buffer+0x74>
   1f80c:	ldr	r4, [sp]
   1f810:	add	sp, sp, #4
   1f814:	pop	{pc}		; (ldr pc, [sp], #4)
   1f818:	ldr	r4, [r0, #16]
   1f81c:	str	ip, [r2, #12]
   1f820:	ldr	r0, [pc, #48]	; 1f858 <sfbpf__flush_buffer+0xb4>
   1f824:	str	r4, [r2, #20]
   1f828:	ldr	r0, [lr, r0]
   1f82c:	str	ip, [r0]
   1f830:	ldr	r3, [r1, r3, lsl #2]
   1f834:	ldr	r3, [r3]
   1f838:	str	r3, [r2, #24]
   1f83c:	ldrb	r3, [ip]
   1f840:	strb	r3, [r2, #16]
   1f844:	ldr	r4, [sp]
   1f848:	add	sp, sp, #4
   1f84c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f850:	.word	0x0001e844
   1f854:	.word	0x0001f360
   1f858:	.word	0x000000d8

0001f85c <sfbpf_push_buffer_state>:
   1f85c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f860:	subs	r4, r0, #0
   1f864:	ldr	r5, [pc, #216]	; 1f944 <sfbpf_push_buffer_state+0xe8>
   1f868:	strd	r6, [sp, #8]
   1f86c:	str	r8, [sp, #16]
   1f870:	str	lr, [sp, #20]
   1f874:	add	r5, pc, r5
   1f878:	beq	1f924 <sfbpf_push_buffer_state+0xc8>
   1f87c:	bl	1d720 <sfbpf_ensure_buffer_stack>
   1f880:	ldr	r1, [pc, #192]	; 1f948 <sfbpf_push_buffer_state+0xec>
   1f884:	add	r1, pc, r1
   1f888:	ldr	r3, [r1]
   1f88c:	cmp	r3, #0
   1f890:	beq	1f938 <sfbpf_push_buffer_state+0xdc>
   1f894:	ldr	r2, [r1, #8]
   1f898:	ldr	lr, [r3, r2, lsl #2]
   1f89c:	lsl	r0, r2, #2
   1f8a0:	add	ip, r3, r0
   1f8a4:	cmp	lr, #0
   1f8a8:	beq	1f8e8 <sfbpf_push_buffer_state+0x8c>
   1f8ac:	ldrb	r7, [r1, #16]
   1f8b0:	ldr	lr, [r1, #12]
   1f8b4:	ldr	r6, [r1, #20]
   1f8b8:	strb	r7, [lr]
   1f8bc:	ldr	r7, [r3, r2, lsl #2]
   1f8c0:	str	lr, [r7, #8]
   1f8c4:	ldr	lr, [r3, r2, lsl #2]
   1f8c8:	str	r6, [lr, #16]
   1f8cc:	ldr	lr, [r3, r2, lsl #2]
   1f8d0:	cmp	lr, #0
   1f8d4:	beq	1f8e8 <sfbpf_push_buffer_state+0x8c>
   1f8d8:	add	r0, r0, #4
   1f8dc:	add	r2, r2, #1
   1f8e0:	add	ip, r3, r0
   1f8e4:	str	r2, [r1, #8]
   1f8e8:	ldr	r3, [pc, #92]	; 1f94c <sfbpf_push_buffer_state+0xf0>
   1f8ec:	str	r4, [ip]
   1f8f0:	ldr	r1, [pc, #88]	; 1f950 <sfbpf_push_buffer_state+0xf4>
   1f8f4:	ldr	r2, [r4, #8]
   1f8f8:	add	r3, pc, r3
   1f8fc:	ldr	r0, [r4, #16]
   1f900:	str	r2, [r3, #12]
   1f904:	str	r0, [r3, #20]
   1f908:	ldr	r1, [r5, r1]
   1f90c:	str	r2, [r1]
   1f910:	ldr	r1, [ip]
   1f914:	ldr	r1, [r1]
   1f918:	str	r1, [r3, #24]
   1f91c:	ldrb	r2, [r2]
   1f920:	strb	r2, [r3, #16]
   1f924:	ldrd	r4, [sp]
   1f928:	ldrd	r6, [sp, #8]
   1f92c:	ldr	r8, [sp, #16]
   1f930:	add	sp, sp, #20
   1f934:	pop	{pc}		; (ldr pc, [sp], #4)
   1f938:	ldr	r0, [r1, #8]
   1f93c:	lsl	ip, r0, #2
   1f940:	b	1f8e8 <sfbpf_push_buffer_state+0x8c>
   1f944:	.word	0x0001e784
   1f948:	.word	0x0001f2b4
   1f94c:	.word	0x0001f240
   1f950:	.word	0x000000d8

0001f954 <sfbpf_pop_buffer_state>:
   1f954:	ldr	r3, [pc, #204]	; 1fa28 <sfbpf_pop_buffer_state+0xd4>
   1f958:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f95c:	strd	r6, [sp, #8]
   1f960:	str	r8, [sp, #16]
   1f964:	str	lr, [sp, #20]
   1f968:	add	r3, pc, r3
   1f96c:	ldr	r7, [pc, #184]	; 1fa2c <sfbpf_pop_buffer_state+0xd8>
   1f970:	ldr	r5, [r3]
   1f974:	add	r7, pc, r7
   1f978:	cmp	r5, #0
   1f97c:	beq	1fa08 <sfbpf_pop_buffer_state+0xb4>
   1f980:	ldr	r4, [r3, #8]
   1f984:	ldr	r6, [r5, r4, lsl #2]
   1f988:	cmp	r6, #0
   1f98c:	beq	1fa08 <sfbpf_pop_buffer_state+0xb4>
   1f990:	mov	r3, #0
   1f994:	str	r3, [r5, r4, lsl #2]
   1f998:	ldr	r3, [r6, #20]
   1f99c:	cmp	r3, #0
   1f9a0:	bne	1fa1c <sfbpf_pop_buffer_state+0xc8>
   1f9a4:	mov	r0, r6
   1f9a8:	bl	d48 <free@plt>
   1f9ac:	mov	r3, #0
   1f9b0:	cmp	r4, r3
   1f9b4:	str	r3, [r5, r4, lsl #2]
   1f9b8:	beq	1fa08 <sfbpf_pop_buffer_state+0xb4>
   1f9bc:	sub	r4, r4, #1
   1f9c0:	ldr	r3, [pc, #104]	; 1fa30 <sfbpf_pop_buffer_state+0xdc>
   1f9c4:	ldr	r2, [r5, r4, lsl #2]
   1f9c8:	add	r3, pc, r3
   1f9cc:	cmp	r2, #0
   1f9d0:	str	r4, [r3, #8]
   1f9d4:	beq	1fa08 <sfbpf_pop_buffer_state+0xb4>
   1f9d8:	ldr	r1, [pc, #84]	; 1fa34 <sfbpf_pop_buffer_state+0xe0>
   1f9dc:	ldr	r0, [r2, #16]
   1f9e0:	ldr	r2, [r2, #8]
   1f9e4:	str	r2, [r3, #12]
   1f9e8:	str	r0, [r3, #20]
   1f9ec:	ldr	r1, [r7, r1]
   1f9f0:	str	r2, [r1]
   1f9f4:	ldr	r1, [r5, r4, lsl #2]
   1f9f8:	ldr	r1, [r1]
   1f9fc:	str	r1, [r3, #24]
   1fa00:	ldrb	r2, [r2]
   1fa04:	strb	r2, [r3, #16]
   1fa08:	ldrd	r4, [sp]
   1fa0c:	ldrd	r6, [sp, #8]
   1fa10:	ldr	r8, [sp, #16]
   1fa14:	add	sp, sp, #20
   1fa18:	pop	{pc}		; (ldr pc, [sp], #4)
   1fa1c:	ldr	r0, [r6, #4]
   1fa20:	bl	d48 <free@plt>
   1fa24:	b	1f9a4 <sfbpf_pop_buffer_state+0x50>
   1fa28:	.word	0x0001f1d0
   1fa2c:	.word	0x0001e684
   1fa30:	.word	0x0001f170
   1fa34:	.word	0x000000d8

0001fa38 <sfbpf__scan_buffer>:
   1fa38:	cmp	r1, #1
   1fa3c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1fa40:	strd	r6, [sp, #8]
   1fa44:	str	r8, [sp, #16]
   1fa48:	str	lr, [sp, #20]
   1fa4c:	bls	1fad0 <sfbpf__scan_buffer+0x98>
   1fa50:	sub	r7, r1, #2
   1fa54:	ldrb	r4, [r0, r7]
   1fa58:	cmp	r4, #0
   1fa5c:	bne	1fad0 <sfbpf__scan_buffer+0x98>
   1fa60:	add	r1, r0, r1
   1fa64:	ldrb	r6, [r1, #-1]
   1fa68:	cmp	r6, #0
   1fa6c:	bne	1fab8 <sfbpf__scan_buffer+0x80>
   1fa70:	mov	r5, r0
   1fa74:	mov	r0, #48	; 0x30
   1fa78:	bl	dc0 <malloc@plt>
   1fa7c:	subs	r4, r0, #0
   1fa80:	beq	1fad8 <sfbpf__scan_buffer+0xa0>
   1fa84:	mov	r1, #1
   1fa88:	mov	r2, #0
   1fa8c:	str	r6, [r4]
   1fa90:	mov	r3, #0
   1fa94:	str	r5, [r4, #4]
   1fa98:	str	r5, [r4, #8]
   1fa9c:	str	r7, [r4, #12]
   1faa0:	str	r7, [r4, #16]
   1faa4:	str	r6, [r4, #20]
   1faa8:	str	r6, [r4, #24]
   1faac:	str	r1, [r4, #28]
   1fab0:	strd	r2, [r4, #40]	; 0x28
   1fab4:	bl	1d7fc <sfbpf__switch_to_buffer>
   1fab8:	mov	r0, r4
   1fabc:	ldrd	r4, [sp]
   1fac0:	ldrd	r6, [sp, #8]
   1fac4:	ldr	r8, [sp, #16]
   1fac8:	add	sp, sp, #20
   1facc:	pop	{pc}		; (ldr pc, [sp], #4)
   1fad0:	mov	r4, #0
   1fad4:	b	1fab8 <sfbpf__scan_buffer+0x80>
   1fad8:	ldr	r0, [pc, #4]	; 1fae4 <sfbpf__scan_buffer+0xac>
   1fadc:	add	r0, pc, r0
   1fae0:	bl	1d6e0 <yy_fatal_error>
   1fae4:	.word	0x0000d4f8

0001fae8 <sfbpf__scan_string>:
   1fae8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1faec:	mov	r4, r0
   1faf0:	strd	r6, [sp, #8]
   1faf4:	str	r8, [sp, #16]
   1faf8:	str	lr, [sp, #20]
   1fafc:	bl	df0 <strlen@plt>
   1fb00:	mov	r5, r0
   1fb04:	add	r0, r0, #2
   1fb08:	bl	dc0 <malloc@plt>
   1fb0c:	subs	r7, r0, #0
   1fb10:	beq	1fb94 <sfbpf__scan_string+0xac>
   1fb14:	cmp	r5, #0
   1fb18:	beq	1fb28 <sfbpf__scan_string+0x40>
   1fb1c:	mov	r1, r4
   1fb20:	mov	r2, r5
   1fb24:	bl	d6c <memcpy@plt>
   1fb28:	add	r3, r7, r5
   1fb2c:	mov	r6, #0
   1fb30:	mov	r0, #48	; 0x30
   1fb34:	strb	r6, [r3, #1]
   1fb38:	strb	r6, [r7, r5]
   1fb3c:	bl	dc0 <malloc@plt>
   1fb40:	subs	r4, r0, #0
   1fb44:	beq	1fba0 <sfbpf__scan_string+0xb8>
   1fb48:	mov	r8, #1
   1fb4c:	mov	r2, #0
   1fb50:	strd	r6, [r4]
   1fb54:	mov	r3, #0
   1fb58:	str	r7, [r4, #8]
   1fb5c:	str	r5, [r4, #12]
   1fb60:	str	r5, [r4, #16]
   1fb64:	str	r6, [r4, #20]
   1fb68:	str	r6, [r4, #24]
   1fb6c:	str	r8, [r4, #28]
   1fb70:	strd	r2, [r4, #40]	; 0x28
   1fb74:	bl	1d7fc <sfbpf__switch_to_buffer>
   1fb78:	str	r8, [r4, #20]
   1fb7c:	mov	r0, r4
   1fb80:	ldrd	r4, [sp]
   1fb84:	ldrd	r6, [sp, #8]
   1fb88:	ldr	r8, [sp, #16]
   1fb8c:	add	sp, sp, #20
   1fb90:	pop	{pc}		; (ldr pc, [sp], #4)
   1fb94:	ldr	r0, [pc, #16]	; 1fbac <sfbpf__scan_string+0xc4>
   1fb98:	add	r0, pc, r0
   1fb9c:	bl	1d6e0 <yy_fatal_error>
   1fba0:	ldr	r0, [pc, #8]	; 1fbb0 <sfbpf__scan_string+0xc8>
   1fba4:	add	r0, pc, r0
   1fba8:	bl	1d6e0 <yy_fatal_error>
   1fbac:	.word	0x0000d468
   1fbb0:	.word	0x0000d430

0001fbb4 <sfbpf__scan_bytes>:
   1fbb4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1fbb8:	add	r4, r1, #2
   1fbbc:	mov	r5, r1
   1fbc0:	strd	r6, [sp, #8]
   1fbc4:	mov	r6, r0
   1fbc8:	mov	r0, r4
   1fbcc:	str	r8, [sp, #16]
   1fbd0:	str	lr, [sp, #20]
   1fbd4:	bl	dc0 <malloc@plt>
   1fbd8:	subs	r7, r0, #0
   1fbdc:	beq	1fc80 <sfbpf__scan_bytes+0xcc>
   1fbe0:	cmp	r5, #0
   1fbe4:	ble	1fbf4 <sfbpf__scan_bytes+0x40>
   1fbe8:	mov	r1, r6
   1fbec:	mov	r2, r5
   1fbf0:	bl	d6c <memcpy@plt>
   1fbf4:	mov	r6, #0
   1fbf8:	add	r3, r7, r5
   1fbfc:	cmp	r4, #1
   1fc00:	strb	r6, [r3, #1]
   1fc04:	strb	r6, [r7, r5]
   1fc08:	bls	1fc68 <sfbpf__scan_bytes+0xb4>
   1fc0c:	mov	r0, #48	; 0x30
   1fc10:	bl	dc0 <malloc@plt>
   1fc14:	subs	r4, r0, #0
   1fc18:	beq	1fc74 <sfbpf__scan_bytes+0xc0>
   1fc1c:	mov	r8, #1
   1fc20:	mov	r2, #0
   1fc24:	strd	r6, [r4]
   1fc28:	mov	r3, #0
   1fc2c:	str	r7, [r4, #8]
   1fc30:	str	r5, [r4, #12]
   1fc34:	str	r5, [r4, #16]
   1fc38:	str	r6, [r4, #20]
   1fc3c:	str	r6, [r4, #24]
   1fc40:	str	r8, [r4, #28]
   1fc44:	strd	r2, [r4, #40]	; 0x28
   1fc48:	bl	1d7fc <sfbpf__switch_to_buffer>
   1fc4c:	str	r8, [r4, #20]
   1fc50:	mov	r0, r4
   1fc54:	ldrd	r4, [sp]
   1fc58:	ldrd	r6, [sp, #8]
   1fc5c:	ldr	r8, [sp, #16]
   1fc60:	add	sp, sp, #20
   1fc64:	pop	{pc}		; (ldr pc, [sp], #4)
   1fc68:	ldr	r0, [pc, #28]	; 1fc8c <sfbpf__scan_bytes+0xd8>
   1fc6c:	add	r0, pc, r0
   1fc70:	bl	1d6e0 <yy_fatal_error>
   1fc74:	ldr	r0, [pc, #20]	; 1fc90 <sfbpf__scan_bytes+0xdc>
   1fc78:	add	r0, pc, r0
   1fc7c:	bl	1d6e0 <yy_fatal_error>
   1fc80:	ldr	r0, [pc, #12]	; 1fc94 <sfbpf__scan_bytes+0xe0>
   1fc84:	add	r0, pc, r0
   1fc88:	bl	1d6e0 <yy_fatal_error>
   1fc8c:	.word	0x0000d3c0
   1fc90:	.word	0x0000d35c
   1fc94:	.word	0x0000d37c

0001fc98 <sfbpf_get_debug>:
   1fc98:	ldr	r3, [pc, #8]	; 1fca8 <sfbpf_get_debug+0x10>
   1fc9c:	add	r3, pc, r3
   1fca0:	ldr	r0, [r3, #48]	; 0x30
   1fca4:	bx	lr
   1fca8:	.word	0x0001ee9c

0001fcac <sfbpf_set_debug>:
   1fcac:	ldr	r3, [pc, #8]	; 1fcbc <sfbpf_set_debug+0x10>
   1fcb0:	add	r3, pc, r3
   1fcb4:	str	r0, [r3, #48]	; 0x30
   1fcb8:	bx	lr
   1fcbc:	.word	0x0001ee88

0001fcc0 <sfbpf_lex_destroy>:
   1fcc0:	ldr	r3, [pc, #252]	; 1fdc4 <sfbpf_lex_destroy+0x104>
   1fcc4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1fcc8:	strd	r6, [sp, #8]
   1fccc:	strd	r8, [sp, #16]
   1fcd0:	str	sl, [sp, #24]
   1fcd4:	add	r3, pc, r3
   1fcd8:	str	lr, [sp, #28]
   1fcdc:	ldr	r6, [r3]
   1fce0:	cmp	r6, #0
   1fce4:	beq	1fd74 <sfbpf_lex_destroy+0xb4>
   1fce8:	ldr	r4, [r3, #8]
   1fcec:	ldr	r5, [r6, r4, lsl #2]
   1fcf0:	add	r4, r6, r4, lsl #2
   1fcf4:	cmp	r5, #0
   1fcf8:	beq	1fd74 <sfbpf_lex_destroy+0xb4>
   1fcfc:	ldr	r8, [pc, #196]	; 1fdc8 <sfbpf_lex_destroy+0x108>
   1fd00:	mov	r7, #0
   1fd04:	ldr	r9, [pc, #192]	; 1fdcc <sfbpf_lex_destroy+0x10c>
   1fd08:	add	r8, pc, r8
   1fd0c:	add	r9, pc, r9
   1fd10:	b	1fd34 <sfbpf_lex_destroy+0x74>
   1fd14:	bl	d48 <free@plt>
   1fd18:	str	sl, [r4]
   1fd1c:	bl	1f954 <sfbpf_pop_buffer_state>
   1fd20:	ldr	r4, [r8, #8]
   1fd24:	ldr	r5, [r6, r4, lsl #2]
   1fd28:	add	r4, r6, r4, lsl #2
   1fd2c:	cmp	r5, #0
   1fd30:	beq	1fd74 <sfbpf_lex_destroy+0xb4>
   1fd34:	str	r7, [r4]
   1fd38:	mov	r0, r5
   1fd3c:	ldr	sl, [r5, #20]
   1fd40:	cmp	sl, #0
   1fd44:	beq	1fd14 <sfbpf_lex_destroy+0x54>
   1fd48:	ldr	r0, [r5, #4]
   1fd4c:	bl	d48 <free@plt>
   1fd50:	mov	r0, r5
   1fd54:	bl	d48 <free@plt>
   1fd58:	str	r7, [r4]
   1fd5c:	bl	1f954 <sfbpf_pop_buffer_state>
   1fd60:	ldr	r4, [r9, #8]
   1fd64:	ldr	r5, [r6, r4, lsl #2]
   1fd68:	add	r4, r6, r4, lsl #2
   1fd6c:	cmp	r5, #0
   1fd70:	bne	1fd34 <sfbpf_lex_destroy+0x74>
   1fd74:	mov	r0, r6
   1fd78:	bl	d48 <free@plt>
   1fd7c:	ldr	r3, [pc, #76]	; 1fdd0 <sfbpf_lex_destroy+0x110>
   1fd80:	mov	r2, #0
   1fd84:	mov	r0, r2
   1fd88:	add	r3, pc, r3
   1fd8c:	str	r2, [r3]
   1fd90:	str	r2, [r3, #4]
   1fd94:	str	r2, [r3, #8]
   1fd98:	str	r2, [r3, #12]
   1fd9c:	str	r2, [r3, #24]
   1fda0:	str	r2, [r3, #28]
   1fda4:	str	r2, [r3, #32]
   1fda8:	str	r2, [r3, #36]	; 0x24
   1fdac:	ldrd	r4, [sp]
   1fdb0:	ldrd	r6, [sp, #8]
   1fdb4:	ldrd	r8, [sp, #16]
   1fdb8:	ldr	sl, [sp, #24]
   1fdbc:	add	sp, sp, #28
   1fdc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1fdc4:	.word	0x0001ee64
   1fdc8:	.word	0x0001ee30
   1fdcc:	.word	0x0001ee2c
   1fdd0:	.word	0x0001edb0

0001fdd4 <sfbpf_alloc>:
   1fdd4:	b	dc0 <malloc@plt>

0001fdd8 <sfbpf_realloc>:
   1fdd8:	b	d90 <realloc@plt>

0001fddc <sfbpf_free>:
   1fddc:	b	d48 <free@plt>

0001fde0 <sf_lex_init>:
   1fde0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1fde4:	mov	r4, r0
   1fde8:	strd	r6, [sp, #8]
   1fdec:	str	r8, [sp, #16]
   1fdf0:	str	lr, [sp, #20]
   1fdf4:	bl	df0 <strlen@plt>
   1fdf8:	mov	r5, r0
   1fdfc:	add	r0, r0, #2
   1fe00:	bl	dc0 <malloc@plt>
   1fe04:	subs	r7, r0, #0
   1fe08:	beq	1fe94 <sf_lex_init+0xb4>
   1fe0c:	cmp	r5, #0
   1fe10:	beq	1fe20 <sf_lex_init+0x40>
   1fe14:	mov	r1, r4
   1fe18:	mov	r2, r5
   1fe1c:	bl	d6c <memcpy@plt>
   1fe20:	add	r3, r7, r5
   1fe24:	mov	r6, #0
   1fe28:	mov	r0, #48	; 0x30
   1fe2c:	strb	r6, [r3, #1]
   1fe30:	strb	r6, [r7, r5]
   1fe34:	bl	dc0 <malloc@plt>
   1fe38:	subs	r4, r0, #0
   1fe3c:	beq	1fea0 <sf_lex_init+0xc0>
   1fe40:	mov	r8, #1
   1fe44:	mov	r3, #0
   1fe48:	strd	r6, [r4]
   1fe4c:	mov	r2, #0
   1fe50:	str	r7, [r4, #8]
   1fe54:	str	r5, [r4, #12]
   1fe58:	str	r5, [r4, #16]
   1fe5c:	str	r6, [r4, #20]
   1fe60:	str	r6, [r4, #24]
   1fe64:	str	r8, [r4, #28]
   1fe68:	strd	r2, [r4, #40]	; 0x28
   1fe6c:	bl	1d7fc <sfbpf__switch_to_buffer>
   1fe70:	ldr	r3, [pc, #52]	; 1feac <sf_lex_init+0xcc>
   1fe74:	str	r8, [r4, #20]
   1fe78:	add	r3, pc, r3
   1fe7c:	str	r4, [r3, #52]	; 0x34
   1fe80:	ldrd	r4, [sp]
   1fe84:	ldrd	r6, [sp, #8]
   1fe88:	ldr	r8, [sp, #16]
   1fe8c:	add	sp, sp, #20
   1fe90:	pop	{pc}		; (ldr pc, [sp], #4)
   1fe94:	ldr	r0, [pc, #20]	; 1feb0 <sf_lex_init+0xd0>
   1fe98:	add	r0, pc, r0
   1fe9c:	bl	1d6e0 <yy_fatal_error>
   1fea0:	ldr	r0, [pc, #12]	; 1feb4 <sf_lex_init+0xd4>
   1fea4:	add	r0, pc, r0
   1fea8:	bl	1d6e0 <yy_fatal_error>
   1feac:	.word	0x0001ecc0
   1feb0:	.word	0x0000d168
   1feb4:	.word	0x0000d130

0001feb8 <sf_lex_cleanup>:
   1feb8:	ldr	r3, [pc, #112]	; 1ff30 <sf_lex_cleanup+0x78>
   1febc:	str	r4, [sp, #-8]!
   1fec0:	str	lr, [sp, #4]
   1fec4:	add	r3, pc, r3
   1fec8:	ldr	r4, [r3, #52]	; 0x34
   1fecc:	cmp	r4, #0
   1fed0:	beq	1ff08 <sf_lex_cleanup+0x50>
   1fed4:	ldr	r2, [r3]
   1fed8:	cmp	r2, #0
   1fedc:	beq	1fef4 <sf_lex_cleanup+0x3c>
   1fee0:	ldr	r3, [r3, #8]
   1fee4:	ldr	r1, [r2, r3, lsl #2]
   1fee8:	cmp	r4, r1
   1feec:	moveq	r1, #0
   1fef0:	streq	r1, [r2, r3, lsl #2]
   1fef4:	ldr	r3, [r4, #20]
   1fef8:	cmp	r3, #0
   1fefc:	bne	1ff24 <sf_lex_cleanup+0x6c>
   1ff00:	mov	r0, r4
   1ff04:	bl	d48 <free@plt>
   1ff08:	ldr	r3, [pc, #36]	; 1ff34 <sf_lex_cleanup+0x7c>
   1ff0c:	mov	r2, #0
   1ff10:	add	r3, pc, r3
   1ff14:	str	r2, [r3, #52]	; 0x34
   1ff18:	ldr	r4, [sp]
   1ff1c:	add	sp, sp, #4
   1ff20:	pop	{pc}		; (ldr pc, [sp], #4)
   1ff24:	ldr	r0, [r4, #4]
   1ff28:	bl	d48 <free@plt>
   1ff2c:	b	1ff00 <sf_lex_cleanup+0x48>
   1ff30:	.word	0x0001ec74
   1ff34:	.word	0x0001ec28

0001ff38 <sfbpf_wrap>:
   1ff38:	mov	r0, #1
   1ff3c:	bx	lr

Disassembly of section .fini:

0001ff40 <_fini>:
   1ff40:	push	{r3, lr}
   1ff44:	pop	{r3, pc}
