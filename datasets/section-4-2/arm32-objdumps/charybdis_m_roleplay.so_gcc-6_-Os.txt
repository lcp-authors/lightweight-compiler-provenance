
../repos/charybdis/extensions/.libs/m_roleplay.so:     file format elf32-littlearm


Disassembly of section .init:

00000844 <_init>:
 844:	push	{r3, lr}
 848:	bl	924 <call_weak_fn>
 84c:	pop	{r3, pc}

Disassembly of section .plt:

00000850 <.plt>:
 850:	push	{lr}		; (str lr, [sp, #-4]!)
 854:	ldr	lr, [pc, #4]	; 860 <.plt+0x10>
 858:	add	lr, pc, lr
 85c:	ldr	pc, [lr, #8]!
 860:	.word	0x000117a0

00000864 <sendto_channel_local@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #1952]!	; 0x7a0

00000870 <can_send@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #1944]!	; 0x798

0000087c <cflag_add@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #1936]!	; 0x790

00000888 <sendto_match_servs@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #1928]!	; 0x788

00000894 <__cxa_finalize@plt>:
 894:	add	ip, pc, #0, 12
 898:	add	ip, ip, #69632	; 0x11000
 89c:	ldr	pc, [ip, #1920]!	; 0x780

000008a0 <sendto_one@plt>:
 8a0:	add	ip, pc, #0, 12
 8a4:	add	ip, ip, #69632	; 0x11000
 8a8:	ldr	pc, [ip, #1912]!	; 0x778

000008ac <find_channel@plt>:
 8ac:	add	ip, pc, #0, 12
 8b0:	add	ip, ip, #69632	; 0x11000
 8b4:	ldr	pc, [ip, #1904]!	; 0x770

000008b8 <find_channel_membership@plt>:
 8b8:	add	ip, pc, #0, 12
 8bc:	add	ip, ip, #69632	; 0x11000
 8c0:	ldr	pc, [ip, #1896]!	; 0x768

000008c4 <__gmon_start__@plt>:
 8c4:	add	ip, pc, #0, 12
 8c8:	add	ip, ip, #69632	; 0x11000
 8cc:	ldr	pc, [ip, #1888]!	; 0x760

000008d0 <sendto_one_numeric@plt>:
 8d0:	add	ip, pc, #0, 12
 8d4:	add	ip, ip, #69632	; 0x11000
 8d8:	ldr	pc, [ip, #1880]!	; 0x758

000008dc <add_channel_target@plt>:
 8dc:	add	ip, pc, #0, 12
 8e0:	add	ip, ip, #69632	; 0x11000
 8e4:	ldr	pc, [ip, #1872]!	; 0x750

000008e8 <snprintf@plt>:
 8e8:	add	ip, pc, #0, 12
 8ec:	add	ip, ip, #69632	; 0x11000
 8f0:	ldr	pc, [ip, #1864]!	; 0x748

000008f4 <flood_endgrace@plt>:
 8f4:	add	ip, pc, #0, 12
 8f8:	add	ip, ip, #69632	; 0x11000
 8fc:	ldr	pc, [ip, #1856]!	; 0x740

00000900 <rb_strlcpy@plt>:
 900:	add	ip, pc, #0, 12
 904:	add	ip, ip, #69632	; 0x11000
 908:	ldr	pc, [ip, #1848]!	; 0x738

0000090c <flood_attack_channel@plt>:
 90c:	add	ip, pc, #0, 12
 910:	add	ip, ip, #69632	; 0x11000
 914:	ldr	pc, [ip, #1840]!	; 0x730

00000918 <cflag_orphan@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1832]!	; 0x728

Disassembly of section .text:

00000924 <call_weak_fn>:
 924:	ldr	r3, [pc, #20]	; 940 <call_weak_fn+0x1c>
 928:	ldr	r2, [pc, #20]	; 944 <call_weak_fn+0x20>
 92c:	add	r3, pc, r3
 930:	ldr	r2, [r3, r2]
 934:	cmp	r2, #0
 938:	bxeq	lr
 93c:	b	8c4 <__gmon_start__@plt>
 940:	.word	0x000116cc
 944:	.word	0x00000058

00000948 <deregister_tm_clones>:
 948:	ldr	r3, [pc, #52]	; 984 <deregister_tm_clones+0x3c>
 94c:	ldr	r0, [pc, #52]	; 988 <deregister_tm_clones+0x40>
 950:	add	r3, pc, r3
 954:	add	r0, pc, r0
 958:	add	r3, r3, #3
 95c:	sub	r3, r3, r0
 960:	cmp	r3, #6
 964:	ldr	r3, [pc, #32]	; 98c <deregister_tm_clones+0x44>
 968:	add	r3, pc, r3
 96c:	bxls	lr
 970:	ldr	r2, [pc, #24]	; 990 <deregister_tm_clones+0x48>
 974:	ldr	r3, [r3, r2]
 978:	cmp	r3, #0
 97c:	bxeq	lr
 980:	bx	r3
 984:	.word	0x00011944
 988:	.word	0x00011940
 98c:	.word	0x00011690
 990:	.word	0x00000050

00000994 <register_tm_clones>:
 994:	ldr	r1, [pc, #56]	; 9d4 <register_tm_clones+0x40>
 998:	ldr	r0, [pc, #56]	; 9d8 <register_tm_clones+0x44>
 99c:	add	r1, pc, r1
 9a0:	add	r0, pc, r0
 9a4:	sub	r1, r1, r0
 9a8:	ldr	r3, [pc, #44]	; 9dc <register_tm_clones+0x48>
 9ac:	asr	r1, r1, #2
 9b0:	add	r3, pc, r3
 9b4:	add	r1, r1, r1, lsr #31
 9b8:	asrs	r1, r1, #1
 9bc:	bxeq	lr
 9c0:	ldr	r2, [pc, #24]	; 9e0 <register_tm_clones+0x4c>
 9c4:	ldr	r3, [r3, r2]
 9c8:	cmp	r3, #0
 9cc:	bxeq	lr
 9d0:	bx	r3
 9d4:	.word	0x000118f8
 9d8:	.word	0x000118f4
 9dc:	.word	0x00011648
 9e0:	.word	0x00000068

000009e4 <__do_global_dtors_aux>:
 9e4:	ldr	r3, [pc, #76]	; a38 <__do_global_dtors_aux+0x54>
 9e8:	ldr	r2, [pc, #76]	; a3c <__do_global_dtors_aux+0x58>
 9ec:	add	r3, pc, r3
 9f0:	add	r2, pc, r2
 9f4:	ldrb	r3, [r3]
 9f8:	cmp	r3, #0
 9fc:	bxne	lr
 a00:	ldr	r3, [pc, #56]	; a40 <__do_global_dtors_aux+0x5c>
 a04:	push	{r4, lr}
 a08:	ldr	r3, [r2, r3]
 a0c:	cmp	r3, #0
 a10:	beq	a20 <__do_global_dtors_aux+0x3c>
 a14:	ldr	r3, [pc, #40]	; a44 <__do_global_dtors_aux+0x60>
 a18:	ldr	r0, [pc, r3]
 a1c:	bl	894 <__cxa_finalize@plt>
 a20:	bl	948 <deregister_tm_clones>
 a24:	ldr	r3, [pc, #28]	; a48 <__do_global_dtors_aux+0x64>
 a28:	mov	r2, #1
 a2c:	add	r3, pc, r3
 a30:	strb	r2, [r3]
 a34:	pop	{r4, pc}
 a38:	.word	0x000118a8
 a3c:	.word	0x00011608
 a40:	.word	0x0000004c
 a44:	.word	0x00011654
 a48:	.word	0x00011868

00000a4c <frame_dummy>:
 a4c:	ldr	r0, [pc, #56]	; a8c <frame_dummy+0x40>
 a50:	ldr	r3, [pc, #56]	; a90 <frame_dummy+0x44>
 a54:	add	r0, pc, r0
 a58:	ldr	r2, [r0]
 a5c:	add	r3, pc, r3
 a60:	cmp	r2, #0
 a64:	bne	a6c <frame_dummy+0x20>
 a68:	b	994 <register_tm_clones>
 a6c:	ldr	r2, [pc, #32]	; a94 <frame_dummy+0x48>
 a70:	ldr	r3, [r3, r2]
 a74:	cmp	r3, #0
 a78:	beq	a68 <frame_dummy+0x1c>
 a7c:	push	{r4, lr}
 a80:	blx	r3
 a84:	pop	{r4, lr}
 a88:	b	994 <register_tm_clones>
 a8c:	.word	0x000114a0
 a90:	.word	0x0001159c
 a94:	.word	0x00000064

00000a98 <strip_unprintable>:
 a98:	push	{r4, lr}
 a9c:	mov	r2, r0
 aa0:	ldr	lr, [pc, #200]	; b70 <strip_unprintable+0xd8>
 aa4:	mov	r3, r0
 aa8:	mov	ip, #0
 aac:	add	lr, pc, lr
 ab0:	cmp	r3, #0
 ab4:	bne	b30 <strip_unprintable+0x98>
 ab8:	mov	r3, #0
 abc:	cmp	ip, r3
 ac0:	strb	r3, [r2]
 ac4:	bne	b68 <strip_unprintable+0xd0>
 ac8:	pop	{r4, pc}
 acc:	ldr	r1, [pc, #160]	; b74 <strip_unprintable+0xdc>
 ad0:	ldrb	r4, [r3, #1]
 ad4:	ldr	r1, [lr, r1]
 ad8:	ldr	r4, [r1, r4, lsl #2]
 adc:	tst	r4, #16
 ae0:	beq	b28 <strip_unprintable+0x90>
 ae4:	ldrb	r4, [r3, #2]
 ae8:	ldr	r4, [r1, r4, lsl #2]
 aec:	tst	r4, #16
 af0:	addeq	r3, r3, #1
 af4:	addne	r3, r3, #2
 af8:	ldrb	r4, [r3, #1]
 afc:	cmp	r4, #44	; 0x2c
 b00:	bne	b28 <strip_unprintable+0x90>
 b04:	ldrb	r4, [r3, #2]
 b08:	ldr	r4, [r1, r4, lsl #2]
 b0c:	tst	r4, #16
 b10:	beq	b28 <strip_unprintable+0x90>
 b14:	ldrb	r4, [r3, #3]
 b18:	ldr	r1, [r1, r4, lsl #2]
 b1c:	tst	r1, #16
 b20:	addeq	r3, r3, #2
 b24:	addne	r3, r3, #3
 b28:	add	r3, r3, #1
 b2c:	b	ab0 <strip_unprintable+0x18>
 b30:	ldrb	r1, [r3]
 b34:	cmp	r1, #0
 b38:	beq	ab8 <strip_unprintable+0x20>
 b3c:	cmp	r1, #3
 b40:	beq	acc <strip_unprintable+0x34>
 b44:	cmp	r1, #32
 b48:	strbeq	r1, [r2]
 b4c:	addeq	r2, r2, #1
 b50:	beq	b28 <strip_unprintable+0x90>
 b54:	cmp	r1, #31
 b58:	addhi	ip, r2, #1
 b5c:	strbhi	r1, [r2]
 b60:	movhi	r2, ip
 b64:	b	b28 <strip_unprintable+0x90>
 b68:	strb	r3, [ip]
 b6c:	pop	{r4, pc}
 b70:	.word	0x0001154c
 b74:	.word	0x0000005c

00000b78 <me_roleplay>:
 b78:	push	{r4, r5, lr}
 b7c:	sub	sp, sp, #20
 b80:	mov	r5, r2
 b84:	ldr	r4, [sp, #32]
 b88:	ldr	r0, [r4, #4]
 b8c:	bl	8ac <find_channel@plt>
 b90:	subs	r2, r0, #0
 b94:	beq	bcc <me_roleplay+0x54>
 b98:	ldr	r3, [r4, #12]
 b9c:	mov	r1, #0
 ba0:	str	r3, [sp, #12]
 ba4:	ldr	r3, [r4, #4]
 ba8:	mov	r0, r5
 bac:	str	r3, [sp, #8]
 bb0:	add	r3, r5, #88	; 0x58
 bb4:	str	r3, [sp, #4]
 bb8:	ldr	r3, [r4, #8]
 bbc:	str	r3, [sp]
 bc0:	ldr	r3, [pc, #12]	; bd4 <me_roleplay+0x5c>
 bc4:	add	r3, pc, r3
 bc8:	bl	864 <sendto_channel_local@plt>
 bcc:	add	sp, sp, #20
 bd0:	pop	{r4, r5, pc}
 bd4:	.word	0x0000047e

00000bd8 <_moddeinit>:
 bd8:	mov	r0, #78	; 0x4e
 bdc:	b	918 <cflag_orphan@plt>

00000be0 <_modinit>:
 be0:	ldr	r3, [pc, #48]	; c18 <_modinit+0x38>
 be4:	push	{r0, r1, r2, lr}
 be8:	add	r3, pc, r3
 bec:	ldr	r2, [pc, #40]	; c1c <_modinit+0x3c>
 bf0:	mov	r0, #78	; 0x4e
 bf4:	ldr	r3, [r3, r2]
 bf8:	mov	r1, r3
 bfc:	str	r3, [sp, #4]
 c00:	bl	87c <cflag_add@plt>
 c04:	cmp	r0, #0
 c08:	movne	r0, #0
 c0c:	mvneq	r0, #0
 c10:	add	sp, sp, #12
 c14:	pop	{pc}		; (ldr pc, [sp], #4)
 c18:	.word	0x00011410
 c1c:	.word	0x00000054

00000c20 <m_displaymsg.isra.0>:
 c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c24:	sub	sp, sp, #1104	; 0x450
 c28:	sub	sp, sp, #12
 c2c:	mov	r4, r0
 c30:	add	sl, sp, #52	; 0x34
 c34:	mov	r6, r1
 c38:	mov	r7, r2
 c3c:	ldr	r1, [sp, #1152]	; 0x480
 c40:	mov	r2, #33	; 0x21
 c44:	mov	r0, sl
 c48:	mov	r8, r3
 c4c:	bl	900 <rb_strlcpy@plt>
 c50:	ldrd	r2, [r4, #64]	; 0x40
 c54:	ldr	r9, [pc, #564]	; e90 <m_displaymsg.isra.0+0x270>
 c58:	mov	r3, #0
 c5c:	and	r2, r2, #256	; 0x100
 c60:	orrs	r3, r2, r3
 c64:	add	r9, pc, r9
 c68:	bne	c74 <m_displaymsg.isra.0+0x54>
 c6c:	mov	r0, r4
 c70:	bl	8f4 <flood_endgrace@plt>
 c74:	mov	r0, r6
 c78:	bl	8ac <find_channel@plt>
 c7c:	subs	r5, r0, #0
 c80:	bne	ca8 <m_displaymsg.isra.0+0x88>
 c84:	ldr	r2, [pc, #520]	; e94 <m_displaymsg.isra.0+0x274>
 c88:	ldr	r1, [pc, #520]	; e98 <m_displaymsg.isra.0+0x278>
 c8c:	mov	r3, r6
 c90:	add	r2, pc, r2
 c94:	mov	r0, r4
 c98:	bl	8d0 <sendto_one_numeric@plt>
 c9c:	add	sp, sp, #1104	; 0x450
 ca0:	add	sp, sp, #12
 ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 ca8:	mov	r1, r4
 cac:	bl	8b8 <find_channel_membership@plt>
 cb0:	subs	fp, r0, #0
 cb4:	ldreq	r2, [pc, #480]	; e9c <m_displaymsg.isra.0+0x27c>
 cb8:	ldreq	r3, [r5, #236]	; 0xec
 cbc:	addeq	r2, pc, r2
 cc0:	ldreq	r1, [pc, #472]	; ea0 <m_displaymsg.isra.0+0x280>
 cc4:	beq	c94 <m_displaymsg.isra.0+0x74>
 cc8:	ldr	r3, [pc, #468]	; ea4 <m_displaymsg.isra.0+0x284>
 ccc:	ldr	r2, [r5, #12]
 cd0:	ldr	r3, [r9, r3]
 cd4:	ldr	r3, [r3, #312]	; 0x138
 cd8:	tst	r2, r3
 cdc:	bne	cf4 <m_displaymsg.isra.0+0xd4>
 ce0:	ldr	r2, [pc, #448]	; ea8 <m_displaymsg.isra.0+0x288>
 ce4:	ldr	r3, [r5, #236]	; 0xec
 ce8:	add	r2, pc, r2
 cec:	ldr	r1, [pc, #440]	; eac <m_displaymsg.isra.0+0x28c>
 cf0:	b	c94 <m_displaymsg.isra.0+0x74>
 cf4:	mov	r2, fp
 cf8:	mov	r1, r4
 cfc:	mov	r0, r5
 d00:	bl	870 <can_send@plt>
 d04:	ldr	r3, [r5, #236]	; 0xec
 d08:	cmp	r0, #0
 d0c:	ldreq	r2, [pc, #412]	; eb0 <m_displaymsg.isra.0+0x290>
 d10:	addeq	r2, pc, r2
 d14:	beq	cec <m_displaymsg.isra.0+0xcc>
 d18:	mov	r2, r5
 d1c:	mov	r1, r4
 d20:	mov	r0, #0
 d24:	bl	90c <flood_attack_channel@plt>
 d28:	cmp	r0, #0
 d2c:	bne	c9c <m_displaymsg.isra.0+0x7c>
 d30:	ldr	r3, [fp, #44]	; 0x2c
 d34:	tst	r3, #3
 d38:	bne	d88 <m_displaymsg.isra.0+0x168>
 d3c:	ldr	r3, [r4, #56]	; 0x38
 d40:	tst	r3, #4096	; 0x1000
 d44:	bne	d88 <m_displaymsg.isra.0+0x168>
 d48:	mov	r1, r5
 d4c:	mov	r0, r4
 d50:	bl	8dc <add_channel_target@plt>
 d54:	cmp	r0, #0
 d58:	bne	d88 <m_displaymsg.isra.0+0x168>
 d5c:	ldr	r3, [pc, #336]	; eb4 <m_displaymsg.isra.0+0x294>
 d60:	ldr	r1, [pc, #336]	; eb8 <m_displaymsg.isra.0+0x298>
 d64:	mov	r0, r4
 d68:	ldr	r2, [r9, r3]
 d6c:	ldr	r3, [r5, #236]	; 0xec
 d70:	add	r2, r2, #88	; 0x58
 d74:	str	r3, [sp]
 d78:	add	r1, pc, r1
 d7c:	add	r3, r4, #88	; 0x58
 d80:	bl	8a0 <sendto_one@plt>
 d84:	b	c9c <m_displaymsg.isra.0+0x7c>
 d88:	cmp	r7, #0
 d8c:	mov	r0, sl
 d90:	add	r7, sp, #16
 d94:	beq	dd0 <m_displaymsg.isra.0+0x1b0>
 d98:	bl	a98 <strip_unprintable>
 d9c:	ldr	r2, [pc, #280]	; ebc <m_displaymsg.isra.0+0x29c>
 da0:	add	r2, pc, r2
 da4:	mov	r3, r0
 da8:	mov	r1, #33	; 0x21
 dac:	mov	r0, r7
 db0:	bl	8e8 <snprintf@plt>
 db4:	ldrb	r3, [sp, #52]	; 0x34
 db8:	cmp	r3, #0
 dbc:	bne	de4 <m_displaymsg.isra.0+0x1c4>
 dc0:	ldr	r2, [pc, #248]	; ec0 <m_displaymsg.isra.0+0x2a0>
 dc4:	ldr	r3, [r5, #236]	; 0xec
 dc8:	add	r2, pc, r2
 dcc:	b	cec <m_displaymsg.isra.0+0xcc>
 dd0:	bl	a98 <strip_unprintable>
 dd4:	ldr	r2, [pc, #232]	; ec4 <m_displaymsg.isra.0+0x2a4>
 dd8:	add	r2, pc, r2
 ddc:	mov	r3, r0
 de0:	b	da8 <m_displaymsg.isra.0+0x188>
 de4:	ldr	r2, [pc, #220]	; ec8 <m_displaymsg.isra.0+0x2a8>
 de8:	add	sl, sp, #88	; 0x58
 dec:	add	fp, r4, #88	; 0x58
 df0:	ldr	r3, [sp, #1156]	; 0x484
 df4:	str	fp, [sp]
 df8:	add	r2, pc, r2
 dfc:	mov	r1, #512	; 0x200
 e00:	mov	r0, sl
 e04:	bl	8e8 <snprintf@plt>
 e08:	cmp	r8, #0
 e0c:	mov	r3, sl
 e10:	add	r8, sp, #600	; 0x258
 e14:	beq	e84 <m_displaymsg.isra.0+0x264>
 e18:	ldr	r2, [pc, #172]	; ecc <m_displaymsg.isra.0+0x2ac>
 e1c:	add	r2, pc, r2
 e20:	mov	r1, #512	; 0x200
 e24:	mov	r0, r8
 e28:	bl	8e8 <snprintf@plt>
 e2c:	ldr	r3, [pc, #156]	; ed0 <m_displaymsg.isra.0+0x2b0>
 e30:	mov	r2, r5
 e34:	mov	r0, r4
 e38:	str	r8, [sp, #12]
 e3c:	str	r6, [sp, #8]
 e40:	stm	sp, {r7, fp}
 e44:	add	r3, pc, r3
 e48:	mov	r1, #0
 e4c:	bl	864 <sendto_channel_local@plt>
 e50:	ldr	r3, [pc, #124]	; ed4 <m_displaymsg.isra.0+0x2b4>
 e54:	ldr	r1, [pc, #124]	; ed8 <m_displaymsg.isra.0+0x2b8>
 e58:	mov	r0, r4
 e5c:	ldr	r2, [r9, r3]
 e60:	ldr	r3, [pc, #116]	; edc <m_displaymsg.isra.0+0x2bc>
 e64:	stmib	sp, {r6, r7, r8}
 e68:	add	r3, pc, r3
 e6c:	str	r3, [sp]
 e70:	add	r1, pc, r1
 e74:	mov	r3, #0
 e78:	ldr	r2, [r2]
 e7c:	bl	888 <sendto_match_servs@plt>
 e80:	b	c9c <m_displaymsg.isra.0+0x7c>
 e84:	ldr	r2, [pc, #84]	; ee0 <m_displaymsg.isra.0+0x2c0>
 e88:	add	r2, pc, r2
 e8c:	b	e20 <m_displaymsg.isra.0+0x200>
 e90:	.word	0x00011394
 e94:	.word	0x000003dd
 e98:	.word	0x00000193
 e9c:	.word	0x000003c5
 ea0:	.word	0x000001ba
 ea4:	.word	0x00000060
 ea8:	.word	0x000003b8
 eac:	.word	0x0000023d
 eb0:	.word	0x000003c7
 eb4:	.word	0x0000006c
 eb8:	.word	0x0000037b
 ebc:	.word	0x0000038d
 ec0:	.word	0x0000036a
 ec4:	.word	0x00000292
 ec8:	.word	0x0000036a
 ecc:	.word	0x0000034e
 ed0:	.word	0x000001fe
 ed4:	.word	0x00000070
 ed8:	.word	0x0000030a
 edc:	.word	0x00000314
 ee0:	.word	0x000001e2

00000ee4 <m_scene>:
 ee4:	push	{r0, r1, r2, lr}
 ee8:	mov	r0, r2
 eec:	ldr	r1, [sp, #16]
 ef0:	ldr	r3, [r1, #8]
 ef4:	str	r3, [sp, #4]
 ef8:	ldr	r3, [pc, #28]	; f1c <m_scene+0x38>
 efc:	add	r3, pc, r3
 f00:	str	r3, [sp]
 f04:	mov	r3, #0
 f08:	mov	r2, r3
 f0c:	ldr	r1, [r1, #4]
 f10:	bl	c20 <m_displaymsg.isra.0>
 f14:	add	sp, sp, #12
 f18:	pop	{pc}		; (ldr pc, [sp], #4)
 f1c:	.word	0x0000029b

00000f20 <m_fsay>:
 f20:	push	{r0, r1, r2, lr}
 f24:	mov	r0, r2
 f28:	ldr	r1, [sp, #16]
 f2c:	ldr	r3, [r1, #12]
 f30:	str	r3, [sp, #4]
 f34:	ldr	r3, [r1, #8]
 f38:	str	r3, [sp]
 f3c:	mov	r3, #0
 f40:	mov	r2, r3
 f44:	ldr	r1, [r1, #4]
 f48:	bl	c20 <m_displaymsg.isra.0>
 f4c:	add	sp, sp, #12
 f50:	pop	{pc}		; (ldr pc, [sp], #4)

00000f54 <m_npc>:
 f54:	push	{r0, r1, r2, lr}
 f58:	mov	r0, r2
 f5c:	ldr	r1, [sp, #16]
 f60:	mov	r2, #1
 f64:	ldr	r3, [r1, #12]
 f68:	str	r3, [sp, #4]
 f6c:	ldr	r3, [r1, #8]
 f70:	str	r3, [sp]
 f74:	mov	r3, #0
 f78:	ldr	r1, [r1, #4]
 f7c:	bl	c20 <m_displaymsg.isra.0>
 f80:	add	sp, sp, #12
 f84:	pop	{pc}		; (ldr pc, [sp], #4)

00000f88 <m_faction>:
 f88:	push	{r0, r1, r2, lr}
 f8c:	mov	r0, r2
 f90:	ldr	r1, [sp, #16]
 f94:	mov	r2, #0
 f98:	ldr	r3, [r1, #12]
 f9c:	str	r3, [sp, #4]
 fa0:	ldr	r3, [r1, #8]
 fa4:	str	r3, [sp]
 fa8:	mov	r3, #1
 fac:	ldr	r1, [r1, #4]
 fb0:	bl	c20 <m_displaymsg.isra.0>
 fb4:	add	sp, sp, #12
 fb8:	pop	{pc}		; (ldr pc, [sp], #4)

00000fbc <m_npca>:
 fbc:	push	{r0, r1, r2, lr}
 fc0:	mov	r0, r2
 fc4:	ldr	r1, [sp, #16]
 fc8:	ldr	r3, [r1, #12]
 fcc:	str	r3, [sp, #4]
 fd0:	ldr	r3, [r1, #8]
 fd4:	str	r3, [sp]
 fd8:	mov	r3, #1
 fdc:	mov	r2, r3
 fe0:	ldr	r1, [r1, #4]
 fe4:	bl	c20 <m_displaymsg.isra.0>
 fe8:	add	sp, sp, #12
 fec:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00000ff0 <_fini>:
 ff0:	push	{r3, lr}
 ff4:	pop	{r3, pc}
