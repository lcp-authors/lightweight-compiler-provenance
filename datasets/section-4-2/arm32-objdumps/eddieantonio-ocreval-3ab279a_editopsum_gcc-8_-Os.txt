
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

000106b4 <.init>:
   106b4:	push	{r3, lr}
   106b8:	bl	10878 <abort@plt+0xb4>
   106bc:	pop	{r3, pc}

Disassembly of section .plt:

000106c0 <calloc@plt-0x14>:
   106c0:	push	{lr}		; (str lr, [sp, #-4]!)
   106c4:	ldr	lr, [pc, #4]	; 106d0 <calloc@plt-0x4>
   106c8:	add	lr, pc, lr
   106cc:	ldr	pc, [lr, #8]!
   106d0:	andeq	r1, r1, r0, lsr r9

000106d4 <calloc@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2352]!	; 0x930

000106e0 <strcmp@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2344]!	; 0x928

000106ec <fopen@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2336]!	; 0x920

000106f8 <free@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2328]!	; 0x918

00010704 <fgets@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2320]!	; 0x910

00010710 <strdup@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2312]!	; 0x908

0001071c <unlink@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2304]!	; 0x900

00010728 <__xstat@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2296]!	; 0x8f8

00010734 <__libc_start_main@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010740 <__sysv_signal@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2280]!	; 0x8e8

0001074c <__gmon_start__@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2272]!	; 0x8e0

00010758 <getpid@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2264]!	; 0x8d8

00010764 <exit@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010770 <strlen@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2248]!	; 0x8c8

0001077c <fprintf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2240]!	; 0x8c0

00010788 <__isoc99_sscanf@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2232]!	; 0x8b8

00010794 <fclose@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2224]!	; 0x8b0

000107a0 <sprintf@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2216]!	; 0x8a8

000107ac <fputs@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2208]!	; 0x8a0

000107b8 <strncmp@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2200]!	; 0x898

000107c4 <abort@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2192]!	; 0x890

Disassembly of section .text:

000107d0 <error@@Base-0x634>:
   107d0:	push	{r0, r1, r2, r4, r5, lr}
   107d4:	mov	r3, #0
   107d8:	mov	r5, r1
   107dc:	ldr	r2, [pc, #76]	; 10830 <abort@plt+0x6c>
   107e0:	str	r0, [sp, #4]
   107e4:	add	r0, sp, #4
   107e8:	bl	10f24 <error@@Base+0x120>
   107ec:	ldr	r3, [sp, #4]
   107f0:	cmp	r3, #1
   107f4:	movgt	r4, #0
   107f8:	bgt	10804 <abort@plt+0x40>
   107fc:	ldr	r0, [pc, #48]	; 10834 <abort@plt+0x70>
   10800:	bl	10e04 <error@@Base>
   10804:	ldr	r0, [pc, #44]	; 10838 <abort@plt+0x74>
   10808:	ldr	r1, [r5, r4, lsl #2]
   1080c:	add	r4, r4, #1
   10810:	bl	109a4 <abort@plt+0x1e0>
   10814:	ldr	r3, [sp, #4]
   10818:	cmp	r3, r4
   1081c:	bgt	10804 <abort@plt+0x40>
   10820:	mov	r1, #0
   10824:	ldr	r0, [pc, #12]	; 10838 <abort@plt+0x74>
   10828:	bl	10b20 <abort@plt+0x35c>
   1082c:	bl	10dac <abort@plt+0x5e8>
   10830:	andeq	r1, r1, r4, lsr #3
   10834:	ldrdeq	r1, [r1], -r5
   10838:	strdeq	r2, [r2], -r4
   1083c:	mov	fp, #0
   10840:	mov	lr, #0
   10844:	pop	{r1}		; (ldr r1, [sp], #4)
   10848:	mov	r2, sp
   1084c:	push	{r2}		; (str r2, [sp, #-4]!)
   10850:	push	{r0}		; (str r0, [sp, #-4]!)
   10854:	ldr	ip, [pc, #16]	; 1086c <abort@plt+0xa8>
   10858:	push	{ip}		; (str ip, [sp, #-4]!)
   1085c:	ldr	r0, [pc, #12]	; 10870 <abort@plt+0xac>
   10860:	ldr	r3, [pc, #12]	; 10874 <abort@plt+0xb0>
   10864:	bl	10734 <__libc_start_main@plt>
   10868:	bl	107c4 <abort@plt>
   1086c:	andeq	r1, r1, r4, lsl #3
   10870:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10874:	andeq	r1, r1, r4, lsr #2
   10878:	ldr	r3, [pc, #20]	; 10894 <abort@plt+0xd0>
   1087c:	ldr	r2, [pc, #20]	; 10898 <abort@plt+0xd4>
   10880:	add	r3, pc, r3
   10884:	ldr	r2, [r3, r2]
   10888:	cmp	r2, #0
   1088c:	bxeq	lr
   10890:	b	1074c <__gmon_start__@plt>
   10894:	andeq	r1, r1, r8, ror r7
   10898:	andeq	r0, r0, r0, rrx
   1089c:	ldr	r0, [pc, #24]	; 108bc <abort@plt+0xf8>
   108a0:	ldr	r3, [pc, #24]	; 108c0 <abort@plt+0xfc>
   108a4:	cmp	r3, r0
   108a8:	bxeq	lr
   108ac:	ldr	r3, [pc, #16]	; 108c4 <abort@plt+0x100>
   108b0:	cmp	r3, #0
   108b4:	bxeq	lr
   108b8:	bx	r3
   108bc:	andeq	r2, r2, r4, ror r0
   108c0:	andeq	r2, r2, r4, ror r0
   108c4:	andeq	r0, r0, r0
   108c8:	ldr	r0, [pc, #36]	; 108f4 <abort@plt+0x130>
   108cc:	ldr	r1, [pc, #36]	; 108f8 <abort@plt+0x134>
   108d0:	sub	r1, r1, r0
   108d4:	asr	r1, r1, #2
   108d8:	add	r1, r1, r1, lsr #31
   108dc:	asrs	r1, r1, #1
   108e0:	bxeq	lr
   108e4:	ldr	r3, [pc, #16]	; 108fc <abort@plt+0x138>
   108e8:	cmp	r3, #0
   108ec:	bxeq	lr
   108f0:	bx	r3
   108f4:	andeq	r2, r2, r4, ror r0
   108f8:	andeq	r2, r2, r4, ror r0
   108fc:	andeq	r0, r0, r0
   10900:	push	{r4, lr}
   10904:	ldr	r4, [pc, #24]	; 10924 <abort@plt+0x160>
   10908:	ldrb	r3, [r4]
   1090c:	cmp	r3, #0
   10910:	popne	{r4, pc}
   10914:	bl	1089c <abort@plt+0xd8>
   10918:	mov	r3, #1
   1091c:	strb	r3, [r4]
   10920:	pop	{r4, pc}
   10924:	andeq	r2, r2, r8, lsl #1
   10928:	b	108c8 <abort@plt+0x104>
   1092c:	mov	r2, r0
   10930:	push	{r4, lr}
   10934:	mov	r1, #99	; 0x63
   10938:	ldr	r0, [pc, #12]	; 1094c <abort@plt+0x188>
   1093c:	bl	10704 <fgets@plt>
   10940:	adds	r0, r0, #0
   10944:	movne	r0, #1
   10948:	pop	{r4, pc}
   1094c:	andeq	r2, r2, r9, lsl #1
   10950:	push	{r4, r5, r6, lr}
   10954:	mov	r5, r1
   10958:	mov	r4, r2
   1095c:	bl	1092c <abort@plt+0x168>
   10960:	cmp	r0, #0
   10964:	bne	10970 <abort@plt+0x1ac>
   10968:	mov	r0, #0
   1096c:	pop	{r4, r5, r6, pc}
   10970:	mov	r2, r5
   10974:	ldr	r1, [pc, #32]	; 1099c <abort@plt+0x1d8>
   10978:	ldr	r0, [pc, #32]	; 109a0 <abort@plt+0x1dc>
   1097c:	bl	10788 <__isoc99_sscanf@plt>
   10980:	cmp	r0, #1
   10984:	bne	10968 <abort@plt+0x1a4>
   10988:	ldr	r3, [r4]
   1098c:	ldr	r2, [r5]
   10990:	add	r3, r3, r2
   10994:	str	r3, [r4]
   10998:	pop	{r4, r5, r6, pc}
   1099c:	andeq	r1, r1, r2, asr r2
   109a0:	andeq	r2, r2, r9, lsl #1
   109a4:	push	{r4, r5, r6, r7, lr}
   109a8:	mov	r6, r1
   109ac:	sub	sp, sp, #20
   109b0:	mov	r5, r0
   109b4:	mov	r0, r6
   109b8:	ldr	r1, [pc, #324]	; 10b04 <abort@plt+0x340>
   109bc:	bl	10ec8 <error@@Base+0xc4>
   109c0:	mov	r4, r0
   109c4:	bl	1092c <abort@plt+0x168>
   109c8:	cmp	r0, #0
   109cc:	beq	10af0 <abort@plt+0x32c>
   109d0:	mov	r2, #42	; 0x2a
   109d4:	ldr	r1, [pc, #300]	; 10b08 <abort@plt+0x344>
   109d8:	ldr	r0, [pc, #300]	; 10b0c <abort@plt+0x348>
   109dc:	bl	107b8 <strncmp@plt>
   109e0:	cmp	r0, #0
   109e4:	bne	10af0 <abort@plt+0x32c>
   109e8:	mov	r0, r4
   109ec:	bl	1092c <abort@plt+0x168>
   109f0:	cmp	r0, #0
   109f4:	beq	10af0 <abort@plt+0x32c>
   109f8:	ldr	r1, [pc, #272]	; 10b10 <abort@plt+0x34c>
   109fc:	ldr	r0, [pc, #264]	; 10b0c <abort@plt+0x348>
   10a00:	bl	106e0 <strcmp@plt>
   10a04:	cmp	r0, #0
   10a08:	bne	10af0 <abort@plt+0x32c>
   10a0c:	mov	r2, r5
   10a10:	add	r1, sp, #8
   10a14:	mov	r0, r4
   10a18:	bl	10950 <abort@plt+0x18c>
   10a1c:	cmp	r0, #0
   10a20:	beq	10af0 <abort@plt+0x32c>
   10a24:	add	r2, r5, #4
   10a28:	add	r1, sp, #8
   10a2c:	mov	r0, r4
   10a30:	bl	10950 <abort@plt+0x18c>
   10a34:	cmp	r0, #0
   10a38:	beq	10af0 <abort@plt+0x32c>
   10a3c:	add	r2, r5, #8
   10a40:	add	r1, sp, #4
   10a44:	mov	r0, r4
   10a48:	bl	10950 <abort@plt+0x18c>
   10a4c:	cmp	r0, #0
   10a50:	beq	10af0 <abort@plt+0x32c>
   10a54:	ldr	r3, [sp, #4]
   10a58:	cmp	r3, #0
   10a5c:	ble	10ac4 <abort@plt+0x300>
   10a60:	mov	r0, r4
   10a64:	bl	1092c <abort@plt+0x168>
   10a68:	cmp	r0, #0
   10a6c:	beq	10ac4 <abort@plt+0x300>
   10a70:	mov	r0, r4
   10a74:	bl	1092c <abort@plt+0x168>
   10a78:	cmp	r0, #0
   10a7c:	beq	10ac4 <abort@plt+0x300>
   10a80:	mov	r0, r4
   10a84:	bl	1092c <abort@plt+0x168>
   10a88:	cmp	r0, #0
   10a8c:	beq	10ac4 <abort@plt+0x300>
   10a90:	ldr	r7, [pc, #124]	; 10b14 <abort@plt+0x350>
   10a94:	ldr	r6, [pc, #112]	; 10b0c <abort@plt+0x348>
   10a98:	mov	r0, r4
   10a9c:	bl	1092c <abort@plt+0x168>
   10aa0:	cmp	r0, #0
   10aa4:	beq	10ac4 <abort@plt+0x300>
   10aa8:	add	r3, sp, #12
   10aac:	add	r2, sp, #8
   10ab0:	mov	r1, r7
   10ab4:	mov	r0, r6
   10ab8:	bl	10788 <__isoc99_sscanf@plt>
   10abc:	cmp	r0, #2
   10ac0:	beq	10ad4 <abort@plt+0x310>
   10ac4:	mov	r0, r4
   10ac8:	bl	10cec <abort@plt+0x528>
   10acc:	add	sp, sp, #20
   10ad0:	pop	{r4, r5, r6, r7, pc}
   10ad4:	ldr	r1, [sp, #8]
   10ad8:	ldr	r3, [sp, #12]
   10adc:	add	r3, r5, r3, lsl #2
   10ae0:	ldr	r2, [r3, #12]
   10ae4:	add	r2, r2, r1
   10ae8:	str	r2, [r3, #12]
   10aec:	b	10a98 <abort@plt+0x2d4>
   10af0:	cmp	r6, #0
   10af4:	ldr	r1, [pc, #28]	; 10b18 <abort@plt+0x354>
   10af8:	movne	r1, r6
   10afc:	ldr	r0, [pc, #24]	; 10b1c <abort@plt+0x358>
   10b00:	bl	10e88 <error@@Base+0x84>
   10b04:	strdeq	r1, [r1], -r2
   10b08:	strdeq	r1, [r1], -r4
   10b0c:	andeq	r2, r2, r9, lsl #1
   10b10:	andeq	r1, r1, r1, lsr #4
   10b14:	andeq	r1, r1, lr, asr #4
   10b18:	andeq	r1, r1, ip, ror #3
   10b1c:	andeq	r1, r1, r6, asr r2
   10b20:	push	{r4, r5, r6, r7, r8, lr}
   10b24:	mov	r4, r0
   10b28:	mov	r0, r1
   10b2c:	ldr	r1, [pc, #168]	; 10bdc <abort@plt+0x418>
   10b30:	bl	10ec8 <error@@Base+0xc4>
   10b34:	mov	r5, r0
   10b38:	ldr	r3, [pc, #160]	; 10be0 <abort@plt+0x41c>
   10b3c:	ldr	r2, [pc, #160]	; 10be4 <abort@plt+0x420>
   10b40:	ldr	r1, [pc, #160]	; 10be8 <abort@plt+0x424>
   10b44:	bl	1077c <fprintf@plt>
   10b48:	ldr	r3, [pc, #156]	; 10bec <abort@plt+0x428>
   10b4c:	mov	r0, r5
   10b50:	ldr	r1, [pc, #152]	; 10bf0 <abort@plt+0x42c>
   10b54:	ldr	r2, [r4]
   10b58:	bl	1077c <fprintf@plt>
   10b5c:	ldr	r3, [pc, #144]	; 10bf4 <abort@plt+0x430>
   10b60:	mov	r0, r5
   10b64:	ldr	r1, [pc, #132]	; 10bf0 <abort@plt+0x42c>
   10b68:	ldr	r2, [r4, #4]
   10b6c:	bl	1077c <fprintf@plt>
   10b70:	ldr	r3, [pc, #128]	; 10bf8 <abort@plt+0x434>
   10b74:	mov	r0, r5
   10b78:	ldr	r1, [pc, #112]	; 10bf0 <abort@plt+0x42c>
   10b7c:	ldr	r2, [r4, #8]
   10b80:	bl	1077c <fprintf@plt>
   10b84:	ldr	r3, [r4, #8]
   10b88:	cmp	r3, #0
   10b8c:	ble	10bd0 <abort@plt+0x40c>
   10b90:	ldr	r7, [pc, #100]	; 10bfc <abort@plt+0x438>
   10b94:	mov	r1, r5
   10b98:	add	r4, r4, #16
   10b9c:	mov	r6, #1
   10ba0:	ldr	r0, [pc, #88]	; 10c00 <abort@plt+0x43c>
   10ba4:	bl	107ac <fputs@plt>
   10ba8:	ldr	r2, [r4], #4
   10bac:	cmp	r2, #0
   10bb0:	ble	10bc4 <abort@plt+0x400>
   10bb4:	mov	r3, r6
   10bb8:	mov	r1, r7
   10bbc:	mov	r0, r5
   10bc0:	bl	1077c <fprintf@plt>
   10bc4:	add	r6, r6, #1
   10bc8:	cmp	r6, #101	; 0x65
   10bcc:	bne	10ba8 <abort@plt+0x3e4>
   10bd0:	mov	r0, r5
   10bd4:	pop	{r4, r5, r6, r7, r8, lr}
   10bd8:	b	10cec <abort@plt+0x528>
   10bdc:	andeq	r1, r1, r8, ror #4
   10be0:	andeq	r1, r1, r1, lsr #4
   10be4:	strdeq	r1, [r1], -r4
   10be8:	andeq	r1, r1, sl, ror #4
   10bec:	andeq	r1, r1, pc, ror #4
   10bf0:	andeq	r1, r1, sl, ror r2
   10bf4:	andeq	r1, r1, r5, lsl #5
   10bf8:	andeq	r1, r1, pc, lsl #5
   10bfc:	andeq	r1, r1, pc, lsr #5
   10c00:	muleq	r1, r5, r2
   10c04:	ldr	r3, [pc, #56]	; 10c44 <abort@plt+0x480>
   10c08:	push	{r4, r5, lr}
   10c0c:	sub	sp, sp, #116	; 0x74
   10c10:	mov	r5, r0
   10c14:	ldr	r4, [r3]
   10c18:	bl	10758 <getpid@plt>
   10c1c:	ldr	r1, [pc, #36]	; 10c48 <abort@plt+0x484>
   10c20:	mov	r3, r0
   10c24:	add	r0, sp, #12
   10c28:	str	r5, [sp]
   10c2c:	mov	r2, r4
   10c30:	bl	107a0 <sprintf@plt>
   10c34:	add	r0, sp, #12
   10c38:	bl	10710 <strdup@plt>
   10c3c:	add	sp, sp, #116	; 0x74
   10c40:	pop	{r4, r5, pc}
   10c44:	muleq	r2, r8, r2
   10c48:			; <UNDEFINED> instruction: 0x000112ba
   10c4c:	ldr	r3, [pc, #84]	; 10ca8 <abort@plt+0x4e4>
   10c50:	mov	r5, r0
   10c54:	push	{r7, lr}
   10c58:	ldr	r3, [r3]
   10c5c:	cmp	r3, #0
   10c60:	beq	10c68 <abort@plt+0x4a4>
   10c64:	blx	r3
   10c68:	ldr	r6, [pc, #60]	; 10cac <abort@plt+0x4e8>
   10c6c:	mov	r4, #1
   10c70:	ldrsh	r3, [r6]
   10c74:	cmp	r3, r4
   10c78:	bge	10c84 <abort@plt+0x4c0>
   10c7c:	mov	r0, r5
   10c80:	bl	10764 <exit@plt>
   10c84:	mov	r0, r4
   10c88:	add	r4, r4, #1
   10c8c:	bl	10c04 <abort@plt+0x440>
   10c90:	mov	r7, r0
   10c94:	sxth	r4, r4
   10c98:	bl	1071c <unlink@plt>
   10c9c:	mov	r0, r7
   10ca0:	bl	106f8 <free@plt>
   10ca4:	b	10c70 <abort@plt+0x4ac>
   10ca8:	muleq	r2, ip, r2
   10cac:	andeq	r2, r2, lr, ror #1
   10cb0:	sub	r2, r0, #1
   10cb4:	sub	r1, r1, #1
   10cb8:	ldrb	r3, [r2, #1]!
   10cbc:	ldrb	r0, [r1, #1]!
   10cc0:	cmp	r3, #0
   10cc4:	beq	10ce0 <abort@plt+0x51c>
   10cc8:	cmp	r3, r0
   10ccc:	beq	10cb8 <abort@plt+0x4f4>
   10cd0:	cmp	r3, r0
   10cd4:	mvncc	r0, #0
   10cd8:	movcs	r0, #1
   10cdc:	bx	lr
   10ce0:	cmp	r0, #0
   10ce4:	bxeq	lr
   10ce8:	b	10cd0 <abort@plt+0x50c>
   10cec:	ldr	r2, [pc, #28]	; 10d10 <abort@plt+0x54c>
   10cf0:	ldr	r2, [r2]
   10cf4:	cmp	r2, r0
   10cf8:	bxeq	lr
   10cfc:	ldr	r2, [pc, #16]	; 10d14 <abort@plt+0x550>
   10d00:	ldr	r2, [r2]
   10d04:	cmp	r2, r0
   10d08:	bxeq	lr
   10d0c:	b	10794 <fclose@plt>
   10d10:	andeq	r2, r2, r0, lsl #1
   10d14:	andeq	r2, r2, r4, lsl #1
   10d18:	push	{lr}		; (str lr, [sp, #-4]!)
   10d1c:	sub	sp, sp, #92	; 0x5c
   10d20:	mov	r1, sp
   10d24:	bl	11188 <error@@Base+0x384>
   10d28:	clz	r0, r0
   10d2c:	lsr	r0, r0, #5
   10d30:	add	sp, sp, #92	; 0x5c
   10d34:	pop	{pc}		; (ldr pc, [sp], #4)
   10d38:	ldr	r3, [pc, #36]	; 10d64 <abort@plt+0x5a0>
   10d3c:	push	{r4, lr}
   10d40:	ldrh	r0, [r3]
   10d44:	add	r0, r0, #1
   10d48:	sxth	r0, r0
   10d4c:	strh	r0, [r3]
   10d50:	bl	10c04 <abort@plt+0x440>
   10d54:	mov	r4, r0
   10d58:	bl	1071c <unlink@plt>
   10d5c:	mov	r0, r4
   10d60:	pop	{r4, pc}
   10d64:	andeq	r2, r2, lr, ror #1
   10d68:	push	{r4, lr}
   10d6c:	mov	r4, r0
   10d70:	bl	10770 <strlen@plt>
   10d74:	sub	r0, r0, #1
   10d78:	add	r1, r4, #1
   10d7c:	sxth	r0, r0
   10d80:	tst	r0, #32768	; 0x8000
   10d84:	bne	10d98 <abort@plt+0x5d4>
   10d88:	sub	r3, r0, #1
   10d8c:	ldrb	r2, [r1, r3]
   10d90:	cmp	r2, #47	; 0x2f
   10d94:	bne	10da4 <abort@plt+0x5e0>
   10d98:	add	r0, r0, #1
   10d9c:	add	r0, r4, r0
   10da0:	pop	{r4, pc}
   10da4:	mov	r0, r3
   10da8:	b	10d80 <abort@plt+0x5bc>
   10dac:	push	{r4, lr}
   10db0:	mov	r0, #0
   10db4:	bl	10c4c <abort@plt+0x488>
   10db8:	ldr	r2, [pc, #52]	; 10df4 <abort@plt+0x630>
   10dbc:	push	{r4, lr}
   10dc0:	ldr	r2, [r2]
   10dc4:	cmp	r2, #0
   10dc8:	beq	10dd4 <abort@plt+0x610>
   10dcc:	blx	r2
   10dd0:	bl	10dac <abort@plt+0x5e8>
   10dd4:	mov	r3, r0
   10dd8:	ldr	r2, [pc, #24]	; 10df8 <abort@plt+0x634>
   10ddc:	ldr	r0, [pc, #24]	; 10dfc <abort@plt+0x638>
   10de0:	ldr	r1, [pc, #24]	; 10e00 <abort@plt+0x63c>
   10de4:	ldr	r2, [r2]
   10de8:	ldr	r0, [r0]
   10dec:	bl	1077c <fprintf@plt>
   10df0:	b	10dd0 <abort@plt+0x60c>
   10df4:	muleq	r2, r4, r2
   10df8:	muleq	r2, r8, r2
   10dfc:	andeq	r2, r2, r8, ror r0
   10e00:	andeq	r1, r1, r8, asr #5

00010e04 <error@@Base>:
   10e04:	mov	r3, r0
   10e08:	ldr	r2, [pc, #32]	; 10e30 <error@@Base+0x2c>
   10e0c:	push	{r4, lr}
   10e10:	ldr	r0, [pc, #28]	; 10e34 <error@@Base+0x30>
   10e14:	ldr	r1, [pc, #28]	; 10e38 <error@@Base+0x34>
   10e18:	ldr	r2, [r2]
   10e1c:	ldr	r0, [r0]
   10e20:	bl	1077c <fprintf@plt>
   10e24:	ldr	r3, [pc, #16]	; 10e3c <error@@Base+0x38>
   10e28:	ldr	r0, [r3]
   10e2c:	bl	10c4c <abort@plt+0x488>
   10e30:	muleq	r2, r8, r2
   10e34:	andeq	r2, r2, r8, ror r0
   10e38:	ldrdeq	r1, [r1], -r7
   10e3c:	andeq	r2, r2, ip, rrx
   10e40:	push	{r4, lr}
   10e44:	bl	106d4 <calloc@plt>
   10e48:	cmp	r0, #0
   10e4c:	popne	{r4, pc}
   10e50:	ldr	r0, [pc]	; 10e58 <error@@Base+0x54>
   10e54:	bl	10e04 <error@@Base>
   10e58:	ldrdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10e5c:	ldr	r3, [pc, #28]	; 10e80 <error@@Base+0x7c>
   10e60:	ldrb	r2, [r3, #2]
   10e64:	cmp	r2, #0
   10e68:	bxne	lr
   10e6c:	mov	r2, #1
   10e70:	push	{r4, lr}
   10e74:	ldr	r0, [pc, #8]	; 10e84 <error@@Base+0x80>
   10e78:	strb	r2, [r3, #2]
   10e7c:	bl	10e04 <error@@Base>
   10e80:	andeq	r2, r2, lr, ror #1
   10e84:	strdeq	r1, [r1], -r9
   10e88:	push	{r0, r1, r2, lr}
   10e8c:	mov	r3, r0
   10e90:	ldr	r2, [pc, #32]	; 10eb8 <error@@Base+0xb4>
   10e94:	str	r1, [sp]
   10e98:	ldr	r0, [pc, #28]	; 10ebc <error@@Base+0xb8>
   10e9c:	ldr	r1, [pc, #28]	; 10ec0 <error@@Base+0xbc>
   10ea0:	ldr	r2, [r2]
   10ea4:	ldr	r0, [r0]
   10ea8:	bl	1077c <fprintf@plt>
   10eac:	ldr	r3, [pc, #16]	; 10ec4 <error@@Base+0xc0>
   10eb0:	ldr	r0, [r3]
   10eb4:	bl	10c4c <abort@plt+0x488>
   10eb8:	muleq	r2, r8, r2
   10ebc:	andeq	r2, r2, r8, ror r0
   10ec0:	andeq	r1, r1, r8, lsl #6
   10ec4:	andeq	r2, r2, ip, rrx
   10ec8:	push	{r4, r5, r6, lr}
   10ecc:	subs	r4, r0, #0
   10ed0:	mov	r5, r1
   10ed4:	bne	10ef0 <error@@Base+0xec>
   10ed8:	ldrb	r3, [r1]
   10edc:	cmp	r3, #114	; 0x72
   10ee0:	ldreq	r3, [pc, #44]	; 10f14 <error@@Base+0x110>
   10ee4:	ldrne	r3, [pc, #44]	; 10f18 <error@@Base+0x114>
   10ee8:	ldr	r0, [r3]
   10eec:	pop	{r4, r5, r6, pc}
   10ef0:	bl	106ec <fopen@plt>
   10ef4:	cmp	r0, #0
   10ef8:	popne	{r4, r5, r6, pc}
   10efc:	mov	r1, r4
   10f00:	ldrb	r3, [r5]
   10f04:	cmp	r3, #119	; 0x77
   10f08:	ldreq	r0, [pc, #12]	; 10f1c <error@@Base+0x118>
   10f0c:	ldrne	r0, [pc, #12]	; 10f20 <error@@Base+0x11c>
   10f10:	bl	10e88 <error@@Base+0x84>
   10f14:	andeq	r2, r2, r0, lsl #1
   10f18:	andeq	r2, r2, r4, lsl #1
   10f1c:	andeq	r1, r1, r5, lsl r3
   10f20:	andeq	r1, r1, fp, lsr #6
   10f24:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f28:	mov	r8, r0
   10f2c:	mov	r7, r1
   10f30:	mov	r9, r3
   10f34:	ldr	r0, [r1]
   10f38:	str	r2, [sp]
   10f3c:	bl	10d68 <abort@plt+0x5a4>
   10f40:	ldr	r3, [pc, #396]	; 110d4 <error@@Base+0x2d0>
   10f44:	ldr	r1, [pc, #396]	; 110d8 <error@@Base+0x2d4>
   10f48:	str	r0, [r3]
   10f4c:	mov	r0, #2
   10f50:	bl	10740 <__sysv_signal@plt>
   10f54:	ldr	r1, [pc, #380]	; 110d8 <error@@Base+0x2d4>
   10f58:	mov	r0, #15
   10f5c:	bl	10740 <__sysv_signal@plt>
   10f60:	ldr	r4, [r8]
   10f64:	cmp	r4, #1
   10f68:	movne	r6, #0
   10f6c:	movne	r4, #1
   10f70:	bne	11094 <error@@Base+0x290>
   10f74:	ldr	r3, [pc, #352]	; 110dc <error@@Base+0x2d8>
   10f78:	ldrb	r6, [r3, #4]
   10f7c:	cmp	r6, #0
   10f80:	beq	11094 <error@@Base+0x290>
   10f84:	ldr	r0, [sp]
   10f88:	bl	10db8 <abort@plt+0x5f4>
   10f8c:	ldr	r5, [r7, r4, lsl #2]
   10f90:	lsl	sl, r4, #2
   10f94:	ldrb	r3, [r5]
   10f98:	cmp	r3, #45	; 0x2d
   10f9c:	bne	110c4 <error@@Base+0x2c0>
   10fa0:	ldrb	r3, [r5, #1]
   10fa4:	cmp	r3, #0
   10fa8:	str	r3, [sp, #4]
   10fac:	beq	110c4 <error@@Base+0x2c0>
   10fb0:	mov	r0, r5
   10fb4:	bl	10770 <strlen@plt>
   10fb8:	mov	r2, r0
   10fbc:	mov	r1, r5
   10fc0:	ldr	r0, [pc, #280]	; 110e0 <error@@Base+0x2dc>
   10fc4:	bl	107b8 <strncmp@plt>
   10fc8:	cmp	r0, #0
   10fcc:	beq	10f84 <error@@Base+0x180>
   10fd0:	add	r0, r4, #1
   10fd4:	ldr	r3, [sp, #4]
   10fd8:	cmp	r0, fp
   10fdc:	addlt	sl, r7, sl
   10fe0:	movge	r1, #0
   10fe4:	ldrlt	r1, [sl, #4]
   10fe8:	cmp	r9, #0
   10fec:	beq	110ac <error@@Base+0x2a8>
   10ff0:	mov	ip, #0
   10ff4:	sxth	r2, ip
   10ff8:	add	r2, r2, r2, lsl #1
   10ffc:	add	lr, r9, r2, lsl #2
   11000:	ldrb	r2, [r9, r2, lsl #2]
   11004:	cmp	r2, #0
   11008:	beq	110ac <error@@Base+0x2a8>
   1100c:	cmp	r3, r2
   11010:	add	ip, ip, #1
   11014:	bne	10ff4 <error@@Base+0x1f0>
   11018:	ldr	r3, [lr, #4]
   1101c:	cmp	r3, #0
   11020:	bne	11054 <error@@Base+0x250>
   11024:	ldr	r3, [lr, #8]
   11028:	cmp	r3, #0
   1102c:	beq	110ac <error@@Base+0x2a8>
   11030:	ldrb	r2, [r5, #2]
   11034:	cmp	r2, #0
   11038:	bne	110ac <error@@Base+0x2a8>
   1103c:	ldrb	r2, [r3]
   11040:	cmp	r2, #0
   11044:	bne	110b8 <error@@Base+0x2b4>
   11048:	mov	r2, #1
   1104c:	strb	r2, [r3]
   11050:	b	1108c <error@@Base+0x288>
   11054:	ldrb	r2, [r5, #2]
   11058:	cmp	r1, #0
   1105c:	cmpeq	r2, #0
   11060:	beq	11024 <error@@Base+0x220>
   11064:	ldr	ip, [r3]
   11068:	cmp	ip, #0
   1106c:	bne	110b8 <error@@Base+0x2b4>
   11070:	cmp	r2, #0
   11074:	sxth	r0, r0
   11078:	addne	r1, r5, #2
   1107c:	str	r1, [r3]
   11080:	ldrb	r3, [r5, #2]
   11084:	cmp	r3, #0
   11088:	moveq	r4, r0
   1108c:	add	r4, r4, #1
   11090:	sxth	r4, r4
   11094:	ldr	fp, [r8]
   11098:	cmp	r4, fp
   1109c:	blt	10f8c <error@@Base+0x188>
   110a0:	str	r6, [r8]
   110a4:	add	sp, sp, #12
   110a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110ac:	ldr	r0, [pc, #48]	; 110e4 <error@@Base+0x2e0>
   110b0:	mov	r1, r5
   110b4:	bl	10e88 <error@@Base+0x84>
   110b8:	mov	r1, r5
   110bc:	ldr	r0, [pc, #36]	; 110e8 <error@@Base+0x2e4>
   110c0:	b	110b4 <error@@Base+0x2b0>
   110c4:	add	r3, r6, #1
   110c8:	str	r5, [r7, r6, lsl #2]
   110cc:	sxth	r6, r3
   110d0:	b	1108c <error@@Base+0x288>
   110d4:	muleq	r2, r8, r2
   110d8:	andeq	r0, r1, ip, asr lr
   110dc:	andeq	r2, r2, ip, rrx
   110e0:	andeq	r1, r1, pc, lsr r3
   110e4:	andeq	r1, r1, r5, asr #6
   110e8:	andeq	r1, r1, r4, asr r3
   110ec:	push	{r0, r1, r2, lr}
   110f0:	mov	r3, r0
   110f4:	ldr	r2, [pc, #28]	; 11118 <error@@Base+0x314>
   110f8:	str	r1, [sp]
   110fc:	ldr	r0, [pc, #24]	; 1111c <error@@Base+0x318>
   11100:	ldr	r1, [pc, #24]	; 11120 <error@@Base+0x31c>
   11104:	ldr	r2, [r2]
   11108:	ldr	r0, [r0]
   1110c:	bl	1077c <fprintf@plt>
   11110:	add	sp, sp, #12
   11114:	pop	{pc}		; (ldr pc, [sp], #4)
   11118:	muleq	r2, r8, r2
   1111c:	andeq	r2, r2, r8, ror r0
   11120:	andeq	r1, r1, r8, lsl #6
   11124:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11128:	mov	r7, r0
   1112c:	ldr	r6, [pc, #72]	; 1117c <error@@Base+0x378>
   11130:	ldr	r5, [pc, #72]	; 11180 <error@@Base+0x37c>
   11134:	add	r6, pc, r6
   11138:	add	r5, pc, r5
   1113c:	sub	r6, r6, r5
   11140:	mov	r8, r1
   11144:	mov	r9, r2
   11148:	bl	106b4 <calloc@plt-0x20>
   1114c:	asrs	r6, r6, #2
   11150:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11154:	mov	r4, #0
   11158:	add	r4, r4, #1
   1115c:	ldr	r3, [r5], #4
   11160:	mov	r2, r9
   11164:	mov	r1, r8
   11168:	mov	r0, r7
   1116c:	blx	r3
   11170:	cmp	r6, r4
   11174:	bne	11158 <error@@Base+0x354>
   11178:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1117c:	andeq	r0, r1, r8, asr #27
   11180:	andeq	r0, r1, r0, asr #27
   11184:	bx	lr
   11188:	mov	r2, r1
   1118c:	mov	r1, r0
   11190:	mov	r0, #3
   11194:	b	10728 <__xstat@plt>

Disassembly of section .fini:

00011198 <.fini>:
   11198:	push	{r3, lr}
   1119c:	pop	{r3, pc}
