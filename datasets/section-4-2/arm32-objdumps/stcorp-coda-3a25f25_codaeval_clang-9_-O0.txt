
../repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010d94 <.init>:
   10d94:	push	{r3, lr}
   10d98:	bl	10f94 <_start@@Base+0x3c>
   10d9c:	pop	{r3, pc}

Disassembly of section .plt:

00010da0 <coda_match_filefilter@plt-0x14>:
   10da0:	push	{lr}		; (str lr, [sp, #-4]!)
   10da4:	ldr	lr, [pc, #4]	; 10db0 <coda_match_filefilter@plt-0x4>
   10da8:	add	lr, pc, lr
   10dac:	ldr	pc, [lr, #8]!
   10db0:	andeq	r3, r1, r0, asr r2

00010db4 <coda_match_filefilter@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #77824	; 0x13000
   10dbc:	ldr	pc, [ip, #592]!	; 0x250

00010dc0 <coda_expression_eval_integer@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #77824	; 0x13000
   10dc8:	ldr	pc, [ip, #584]!	; 0x248

00010dcc <strcmp@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #77824	; 0x13000
   10dd4:	ldr	pc, [ip, #576]!	; 0x240

00010dd8 <printf@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #77824	; 0x13000
   10de0:	ldr	pc, [ip, #568]!	; 0x238

00010de4 <coda_set_error@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #77824	; 0x13000
   10dec:	ldr	pc, [ip, #560]!	; 0x230

00010df0 <coda_open@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #77824	; 0x13000
   10df8:	ldr	pc, [ip, #552]!	; 0x228

00010dfc <free@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #77824	; 0x13000
   10e04:	ldr	pc, [ip, #544]!	; 0x220

00010e08 <coda_set_definition_path_conditional@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #77824	; 0x13000
   10e10:	ldr	pc, [ip, #536]!	; 0x218

00010e14 <coda_set_definition_path@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #77824	; 0x13000
   10e1c:	ldr	pc, [ip, #528]!	; 0x210

00010e20 <coda_expression_eval_bool@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #77824	; 0x13000
   10e28:	ldr	pc, [ip, #520]!	; 0x208

00010e2c <coda_cursor_set_product@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #77824	; 0x13000
   10e34:	ldr	pc, [ip, #512]!	; 0x200

00010e38 <coda_done@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #77824	; 0x13000
   10e40:	ldr	pc, [ip, #504]!	; 0x1f8

00010e44 <__libc_start_main@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #77824	; 0x13000
   10e4c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e50 <coda_expression_delete@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #77824	; 0x13000
   10e58:	ldr	pc, [ip, #488]!	; 0x1e8

00010e5c <__gmon_start__@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #77824	; 0x13000
   10e64:	ldr	pc, [ip, #480]!	; 0x1e0

00010e68 <__ctype_b_loc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #77824	; 0x13000
   10e70:	ldr	pc, [ip, #472]!	; 0x1d8

00010e74 <exit@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #77824	; 0x13000
   10e7c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e80 <strlen@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #77824	; 0x13000
   10e88:	ldr	pc, [ip, #456]!	; 0x1c8

00010e8c <fprintf@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #77824	; 0x13000
   10e94:	ldr	pc, [ip, #448]!	; 0x1c0

00010e98 <coda_init@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #77824	; 0x13000
   10ea0:	ldr	pc, [ip, #440]!	; 0x1b8

00010ea4 <coda_set_option_perform_conversions@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #77824	; 0x13000
   10eac:	ldr	pc, [ip, #432]!	; 0x1b0

00010eb0 <coda_expression_eval_string@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #77824	; 0x13000
   10eb8:	ldr	pc, [ip, #424]!	; 0x1a8

00010ebc <coda_expression_get_type@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #77824	; 0x13000
   10ec4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec8 <coda_close@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #77824	; 0x13000
   10ed0:	ldr	pc, [ip, #408]!	; 0x198

00010ed4 <coda_expression_is_constant@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #77824	; 0x13000
   10edc:	ldr	pc, [ip, #400]!	; 0x190

00010ee0 <coda_expression_eval_float@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #77824	; 0x13000
   10ee8:	ldr	pc, [ip, #392]!	; 0x188

00010eec <coda_expression_eval_node@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #77824	; 0x13000
   10ef4:	ldr	pc, [ip, #384]!	; 0x180

00010ef8 <coda_errno_to_string@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #77824	; 0x13000
   10f00:	ldr	pc, [ip, #376]!	; 0x178

00010f04 <coda_expression_get_type_name@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #77824	; 0x13000
   10f0c:	ldr	pc, [ip, #368]!	; 0x170

00010f10 <coda_expression_from_string@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #77824	; 0x13000
   10f18:	ldr	pc, [ip, #360]!	; 0x168

00010f1c <coda_get_libcoda_version@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #77824	; 0x13000
   10f24:	ldr	pc, [ip, #352]!	; 0x160

00010f28 <coda_get_errno@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #77824	; 0x13000
   10f30:	ldr	pc, [ip, #344]!	; 0x158

00010f34 <abort@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #77824	; 0x13000
   10f3c:	ldr	pc, [ip, #336]!	; 0x150

00010f40 <coda_str64@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #77824	; 0x13000
   10f48:	ldr	pc, [ip, #328]!	; 0x148

00010f4c <__assert_fail@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #77824	; 0x13000
   10f54:	ldr	pc, [ip, #320]!	; 0x140

Disassembly of section .text:

00010f58 <_start@@Base>:
   10f58:	mov	fp, #0
   10f5c:	mov	lr, #0
   10f60:	pop	{r1}		; (ldr r1, [sp], #4)
   10f64:	mov	r2, sp
   10f68:	push	{r2}		; (str r2, [sp, #-4]!)
   10f6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f70:	ldr	ip, [pc, #16]	; 10f88 <_start@@Base+0x30>
   10f74:	push	{ip}		; (str ip, [sp, #-4]!)
   10f78:	ldr	r0, [pc, #12]	; 10f8c <_start@@Base+0x34>
   10f7c:	ldr	r3, [pc, #12]	; 10f90 <_start@@Base+0x38>
   10f80:	bl	10e44 <__libc_start_main@plt>
   10f84:	bl	10f34 <abort@plt>
   10f88:	muleq	r1, r0, r5
   10f8c:			; <UNDEFINED> instruction: 0x000112bc
   10f90:	andeq	r2, r1, r0, lsr r5
   10f94:	ldr	r3, [pc, #20]	; 10fb0 <_start@@Base+0x58>
   10f98:	ldr	r2, [pc, #20]	; 10fb4 <_start@@Base+0x5c>
   10f9c:	add	r3, pc, r3
   10fa0:	ldr	r2, [r3, r2]
   10fa4:	cmp	r2, #0
   10fa8:	bxeq	lr
   10fac:	b	10e5c <__gmon_start__@plt>
   10fb0:	andeq	r3, r1, ip, asr r0
   10fb4:	muleq	r0, ip, r0
   10fb8:	ldr	r0, [pc, #24]	; 10fd8 <_start@@Base+0x80>
   10fbc:	ldr	r3, [pc, #24]	; 10fdc <_start@@Base+0x84>
   10fc0:	cmp	r3, r0
   10fc4:	bxeq	lr
   10fc8:	ldr	r3, [pc, #16]	; 10fe0 <_start@@Base+0x88>
   10fcc:	cmp	r3, #0
   10fd0:	bxeq	lr
   10fd4:	bx	r3
   10fd8:	andeq	r4, r2, ip, lsr #1
   10fdc:	andeq	r4, r2, ip, lsr #1
   10fe0:	andeq	r0, r0, r0
   10fe4:	ldr	r0, [pc, #36]	; 11010 <_start@@Base+0xb8>
   10fe8:	ldr	r1, [pc, #36]	; 11014 <_start@@Base+0xbc>
   10fec:	sub	r1, r1, r0
   10ff0:	asr	r1, r1, #2
   10ff4:	add	r1, r1, r1, lsr #31
   10ff8:	asrs	r1, r1, #1
   10ffc:	bxeq	lr
   11000:	ldr	r3, [pc, #16]	; 11018 <_start@@Base+0xc0>
   11004:	cmp	r3, #0
   11008:	bxeq	lr
   1100c:	bx	r3
   11010:	andeq	r4, r2, ip, lsr #1
   11014:	andeq	r4, r2, ip, lsr #1
   11018:	andeq	r0, r0, r0
   1101c:	push	{r4, lr}
   11020:	ldr	r4, [pc, #24]	; 11040 <_start@@Base+0xe8>
   11024:	ldrb	r3, [r4]
   11028:	cmp	r3, #0
   1102c:	popne	{r4, pc}
   11030:	bl	10fb8 <_start@@Base+0x60>
   11034:	mov	r3, #1
   11038:	strb	r3, [r4]
   1103c:	pop	{r4, pc}
   11040:	andeq	r4, r2, ip, lsr #1
   11044:	b	10fe4 <_start@@Base+0x8c>

00011048 <callback@@Base>:
   11048:	push	{fp, lr}
   1104c:	mov	fp, sp
   11050:	sub	sp, sp, #24
   11054:	str	r0, [fp, #-8]
   11058:	str	r1, [sp, #12]
   1105c:	str	r2, [sp, #8]
   11060:	str	r3, [sp, #4]
   11064:	ldr	r0, [sp, #12]
   11068:	cmp	r0, #0
   1106c:	bne	11094 <callback@@Base+0x4c>
   11070:	ldr	r0, [pc, #188]	; 11134 <callback@@Base+0xec>
   11074:	add	r1, pc, r0
   11078:	ldr	r0, [pc, #184]	; 11138 <callback@@Base+0xf0>
   1107c:	ldr	r0, [pc, r0]
   11080:	ldr	r0, [r0]
   11084:	ldr	r2, [sp, #8]
   11088:	ldr	r3, [fp, #-8]
   1108c:	bl	10e8c <fprintf@plt>
   11090:	b	110f4 <callback@@Base+0xac>
   11094:	ldr	r0, [sp, #12]
   11098:	cmp	r0, #2
   1109c:	bne	110c0 <callback@@Base+0x78>
   110a0:	ldr	r0, [pc, #132]	; 1112c <callback@@Base+0xe4>
   110a4:	add	r1, pc, r0
   110a8:	ldr	r0, [pc, #128]	; 11130 <callback@@Base+0xe8>
   110ac:	ldr	r0, [pc, r0]
   110b0:	ldr	r0, [r0]
   110b4:	ldr	r2, [fp, #-8]
   110b8:	bl	10e8c <fprintf@plt>
   110bc:	b	110f0 <callback@@Base+0xa8>
   110c0:	ldr	r0, [sp, #12]
   110c4:	cmp	r0, #1
   110c8:	bne	110ec <callback@@Base+0xa4>
   110cc:	ldr	r0, [pc, #80]	; 11124 <callback@@Base+0xdc>
   110d0:	add	r1, pc, r0
   110d4:	ldr	r0, [pc, #76]	; 11128 <callback@@Base+0xe0>
   110d8:	ldr	r0, [pc, r0]
   110dc:	ldr	r0, [r0]
   110e0:	ldr	r2, [fp, #-8]
   110e4:	ldr	r3, [sp, #8]
   110e8:	bl	10e8c <fprintf@plt>
   110ec:	b	110f0 <callback@@Base+0xa8>
   110f0:	b	110f4 <callback@@Base+0xac>
   110f4:	ldr	r0, [sp, #12]
   110f8:	cmp	r0, #4
   110fc:	bne	11110 <callback@@Base+0xc8>
   11100:	ldr	r0, [fp, #-8]
   11104:	bl	1113c <callback@@Base+0xf4>
   11108:	str	r0, [fp, #-4]
   1110c:	b	11118 <callback@@Base+0xd0>
   11110:	movw	r0, #0
   11114:	str	r0, [fp, #-4]
   11118:	ldr	r0, [fp, #-4]
   1111c:	mov	sp, fp
   11120:	pop	{fp, pc}
   11124:	andeq	r1, r0, r0, lsl #10
   11128:			; <UNDEFINED> instruction: 0x00012fb8
   1112c:	andeq	r1, r0, r6, lsl #10
   11130:	andeq	r2, r1, r4, ror #31
   11134:	andeq	r1, r0, r4, lsr #10
   11138:	andeq	r3, r1, r4, lsl r0
   1113c:	push	{r4, r5, fp, lr}
   11140:	add	fp, sp, #8
   11144:	sub	sp, sp, #560	; 0x230
   11148:	str	r0, [fp, #-16]
   1114c:	movw	r0, #0
   11150:	str	r0, [fp, #-20]	; 0xffffffec
   11154:	ldr	r0, [fp, #-16]
   11158:	sub	r1, fp, #20
   1115c:	bl	10df0 <coda_open@plt>
   11160:	cmp	r0, #0
   11164:	beq	11174 <callback@@Base+0x12c>
   11168:	movw	r0, #1
   1116c:	str	r0, [fp, #-12]
   11170:	b	11298 <callback@@Base+0x250>
   11174:	ldr	r1, [fp, #-20]	; 0xffffffec
   11178:	add	r0, sp, #24
   1117c:	bl	10e2c <coda_cursor_set_product@plt>
   11180:	cmp	r0, #0
   11184:	beq	1119c <callback@@Base+0x154>
   11188:	ldr	r0, [fp, #-20]	; 0xffffffec
   1118c:	bl	10ec8 <coda_close@plt>
   11190:	movw	r1, #1
   11194:	str	r1, [fp, #-12]
   11198:	b	11298 <callback@@Base+0x250>
   1119c:	ldr	r0, [pc, #256]	; 112a4 <callback@@Base+0x25c>
   111a0:	add	r0, pc, r0
   111a4:	ldr	r0, [r0]
   111a8:	movw	r1, #0
   111ac:	cmp	r0, r1
   111b0:	beq	11228 <callback@@Base+0x1e0>
   111b4:	ldr	r0, [pc, #236]	; 112a8 <callback@@Base+0x260>
   111b8:	add	r0, pc, r0
   111bc:	ldr	r0, [r0]
   111c0:	add	r1, sp, #24
   111c4:	bl	10eec <coda_expression_eval_node@plt>
   111c8:	cmp	r0, #0
   111cc:	beq	11224 <callback@@Base+0x1dc>
   111d0:	ldr	r0, [pc, #224]	; 112b8 <callback@@Base+0x270>
   111d4:	ldr	r0, [pc, r0]
   111d8:	ldr	r0, [r0]
   111dc:	str	r0, [sp, #20]
   111e0:	bl	10f28 <coda_get_errno@plt>
   111e4:	ldr	r0, [r0]
   111e8:	bl	10ef8 <coda_errno_to_string@plt>
   111ec:	ldr	r1, [pc, #192]	; 112b4 <callback@@Base+0x26c>
   111f0:	add	r1, pc, r1
   111f4:	ldr	r2, [sp, #20]
   111f8:	str	r0, [sp, #16]
   111fc:	mov	r0, r2
   11200:	ldr	r2, [sp, #16]
   11204:	bl	10e8c <fprintf@plt>
   11208:	ldr	r1, [fp, #-20]	; 0xffffffec
   1120c:	str	r0, [sp, #12]
   11210:	mov	r0, r1
   11214:	bl	10ec8 <coda_close@plt>
   11218:	movw	r1, #0
   1121c:	str	r1, [fp, #-12]
   11220:	b	11298 <callback@@Base+0x250>
   11224:	b	11228 <callback@@Base+0x1e0>
   11228:	add	r0, sp, #24
   1122c:	bl	11b20 <main@@Base+0x864>
   11230:	cmp	r0, #0
   11234:	beq	11274 <callback@@Base+0x22c>
   11238:	ldr	r0, [pc, #112]	; 112b0 <callback@@Base+0x268>
   1123c:	ldr	r0, [pc, r0]
   11240:	ldr	r0, [r0]
   11244:	str	r0, [sp, #8]
   11248:	bl	10f28 <coda_get_errno@plt>
   1124c:	ldr	r0, [r0]
   11250:	bl	10ef8 <coda_errno_to_string@plt>
   11254:	ldr	r1, [pc, #80]	; 112ac <callback@@Base+0x264>
   11258:	add	r1, pc, r1
   1125c:	ldr	r3, [fp, #-16]
   11260:	ldr	r2, [sp, #8]
   11264:	str	r0, [sp, #4]
   11268:	mov	r0, r2
   1126c:	ldr	r2, [sp, #4]
   11270:	bl	10e8c <fprintf@plt>
   11274:	ldr	r0, [fp, #-20]	; 0xffffffec
   11278:	bl	10ec8 <coda_close@plt>
   1127c:	cmp	r0, #0
   11280:	beq	11290 <callback@@Base+0x248>
   11284:	movw	r0, #1
   11288:	str	r0, [fp, #-12]
   1128c:	b	11298 <callback@@Base+0x250>
   11290:	movw	r0, #0
   11294:	str	r0, [fp, #-12]
   11298:	ldr	r0, [fp, #-12]
   1129c:	sub	sp, fp, #8
   112a0:	pop	{r4, r5, fp, pc}
   112a4:	andeq	r2, r1, r8, lsl #30
   112a8:	strdeq	r2, [r1], -r0
   112ac:	andeq	r1, r0, r0, asr #6
   112b0:	andeq	r2, r1, r4, asr lr
   112b4:	andeq	r1, r0, r9, asr #11
   112b8:			; <UNDEFINED> instruction: 0x00012ebc

000112bc <main@@Base>:
   112bc:	push	{fp, lr}
   112c0:	mov	fp, sp
   112c4:	sub	sp, sp, #160	; 0xa0
   112c8:	movw	r2, #0
   112cc:	str	r2, [fp, #-4]
   112d0:	str	r0, [fp, #-8]
   112d4:	str	r1, [fp, #-12]
   112d8:	movw	r0, #1
   112dc:	str	r0, [fp, #-16]
   112e0:	str	r2, [fp, #-20]	; 0xffffffec
   112e4:	ldr	r0, [fp, #-8]
   112e8:	cmp	r0, #1
   112ec:	beq	11328 <main@@Base+0x6c>
   112f0:	ldr	r0, [fp, #-12]
   112f4:	ldr	r0, [r0, #4]
   112f8:	ldr	r1, [pc, #2040]	; 11af8 <main@@Base+0x83c>
   112fc:	add	r1, pc, r1
   11300:	bl	10dcc <strcmp@plt>
   11304:	cmp	r0, #0
   11308:	beq	11328 <main@@Base+0x6c>
   1130c:	ldr	r0, [fp, #-12]
   11310:	ldr	r0, [r0, #4]
   11314:	ldr	r1, [pc, #2016]	; 11afc <main@@Base+0x840>
   11318:	add	r1, pc, r1
   1131c:	bl	10dcc <strcmp@plt>
   11320:	cmp	r0, #0
   11324:	bne	11334 <main@@Base+0x78>
   11328:	bl	11df0 <main@@Base+0xb34>
   1132c:	movw	r0, #0
   11330:	bl	10e74 <exit@plt>
   11334:	ldr	r0, [fp, #-12]
   11338:	ldr	r0, [r0, #4]
   1133c:	ldr	r1, [pc, #1980]	; 11b00 <main@@Base+0x844>
   11340:	add	r1, pc, r1
   11344:	bl	10dcc <strcmp@plt>
   11348:	cmp	r0, #0
   1134c:	beq	1136c <main@@Base+0xb0>
   11350:	ldr	r0, [fp, #-12]
   11354:	ldr	r0, [r0, #4]
   11358:	ldr	r1, [pc, #1956]	; 11b04 <main@@Base+0x848>
   1135c:	add	r1, pc, r1
   11360:	bl	10dcc <strcmp@plt>
   11364:	cmp	r0, #0
   11368:	bne	11378 <main@@Base+0xbc>
   1136c:	bl	1218c <main@@Base+0xed0>
   11370:	movw	r0, #0
   11374:	bl	10e74 <exit@plt>
   11378:	movw	r0, #1
   1137c:	str	r0, [fp, #-24]	; 0xffffffe8
   11380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11384:	add	r0, r0, #1
   11388:	ldr	r1, [fp, #-8]
   1138c:	cmp	r0, r1
   11390:	bge	113e0 <main@@Base+0x124>
   11394:	ldr	r0, [fp, #-12]
   11398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1139c:	add	r0, r0, r1, lsl #2
   113a0:	ldr	r0, [r0]
   113a4:	ldr	r1, [pc, #1884]	; 11b08 <main@@Base+0x84c>
   113a8:	add	r1, pc, r1
   113ac:	bl	10dcc <strcmp@plt>
   113b0:	cmp	r0, #0
   113b4:	bne	113e0 <main@@Base+0x124>
   113b8:	ldr	r0, [fp, #-12]
   113bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   113c0:	add	r1, r1, #1
   113c4:	add	r0, r0, r1, lsl #2
   113c8:	ldr	r0, [r0]
   113cc:	bl	10e14 <coda_set_definition_path@plt>
   113d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   113d4:	add	r1, r1, #2
   113d8:	str	r1, [fp, #-24]	; 0xffffffe8
   113dc:	b	11454 <main@@Base+0x198>
   113e0:	ldr	r0, [pc, #1644]	; 11a54 <main@@Base+0x798>
   113e4:	add	r0, pc, r0
   113e8:	str	r0, [fp, #-28]	; 0xffffffe4
   113ec:	ldr	r0, [fp, #-12]
   113f0:	ldr	r0, [r0]
   113f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   113f8:	movw	r1, #0
   113fc:	bl	10e08 <coda_set_definition_path_conditional@plt>
   11400:	cmp	r0, #0
   11404:	beq	11450 <main@@Base+0x194>
   11408:	ldr	r0, [pc, #1612]	; 11a5c <main@@Base+0x7a0>
   1140c:	ldr	r0, [pc, r0]
   11410:	ldr	r0, [r0]
   11414:	str	r0, [fp, #-32]	; 0xffffffe0
   11418:	bl	10f28 <coda_get_errno@plt>
   1141c:	ldr	r0, [r0]
   11420:	bl	10ef8 <coda_errno_to_string@plt>
   11424:	ldr	r1, [pc, #1580]	; 11a58 <main@@Base+0x79c>
   11428:	add	r1, pc, r1
   1142c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11430:	str	r0, [fp, #-36]	; 0xffffffdc
   11434:	mov	r0, r2
   11438:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1143c:	bl	10e8c <fprintf@plt>
   11440:	movw	r1, #1
   11444:	str	r0, [fp, #-40]	; 0xffffffd8
   11448:	mov	r0, r1
   1144c:	bl	10e74 <exit@plt>
   11450:	b	11454 <main@@Base+0x198>
   11454:	b	11458 <main@@Base+0x19c>
   11458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1145c:	ldr	r1, [fp, #-8]
   11460:	cmp	r0, r1
   11464:	bge	11648 <main@@Base+0x38c>
   11468:	ldr	r0, [fp, #-12]
   1146c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11470:	add	r0, r0, r1, lsl #2
   11474:	ldr	r0, [r0]
   11478:	ldr	r1, [pc, #1676]	; 11b0c <main@@Base+0x850>
   1147c:	add	r1, pc, r1
   11480:	bl	10dcc <strcmp@plt>
   11484:	cmp	r0, #0
   11488:	beq	114b0 <main@@Base+0x1f4>
   1148c:	ldr	r0, [fp, #-12]
   11490:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11494:	add	r0, r0, r1, lsl #2
   11498:	ldr	r0, [r0]
   1149c:	ldr	r1, [pc, #1644]	; 11b10 <main@@Base+0x854>
   114a0:	add	r1, pc, r1
   114a4:	bl	10dcc <strcmp@plt>
   114a8:	cmp	r0, #0
   114ac:	bne	114bc <main@@Base+0x200>
   114b0:	movw	r0, #1
   114b4:	str	r0, [fp, #-20]	; 0xffffffec
   114b8:	b	11638 <main@@Base+0x37c>
   114bc:	ldr	r0, [fp, #-12]
   114c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114c4:	add	r0, r0, r1, lsl #2
   114c8:	ldr	r0, [r0]
   114cc:	ldr	r1, [pc, #1600]	; 11b14 <main@@Base+0x858>
   114d0:	add	r1, pc, r1
   114d4:	bl	10dcc <strcmp@plt>
   114d8:	cmp	r0, #0
   114dc:	beq	11504 <main@@Base+0x248>
   114e0:	ldr	r0, [fp, #-12]
   114e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114e8:	add	r0, r0, r1, lsl #2
   114ec:	ldr	r0, [r0]
   114f0:	ldr	r1, [pc, #1568]	; 11b18 <main@@Base+0x85c>
   114f4:	add	r1, pc, r1
   114f8:	bl	10dcc <strcmp@plt>
   114fc:	cmp	r0, #0
   11500:	bne	11510 <main@@Base+0x254>
   11504:	movw	r0, #0
   11508:	str	r0, [fp, #-16]
   1150c:	b	11634 <main@@Base+0x378>
   11510:	ldr	r0, [fp, #-12]
   11514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11518:	add	r0, r0, r1, lsl #2
   1151c:	ldr	r0, [r0]
   11520:	ldr	r1, [pc, #1524]	; 11b1c <main@@Base+0x860>
   11524:	add	r1, pc, r1
   11528:	bl	10dcc <strcmp@plt>
   1152c:	cmp	r0, #0
   11530:	bne	115e8 <main@@Base+0x32c>
   11534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11538:	add	r0, r0, #1
   1153c:	ldr	r1, [fp, #-8]
   11540:	cmp	r0, r1
   11544:	bge	115e8 <main@@Base+0x32c>
   11548:	ldr	r0, [fp, #-12]
   1154c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11550:	add	r1, r1, #1
   11554:	add	r0, r0, r1, lsl #2
   11558:	ldr	r0, [r0]
   1155c:	ldrb	r0, [r0]
   11560:	cmp	r0, #45	; 0x2d
   11564:	beq	115e8 <main@@Base+0x32c>
   11568:	ldr	r0, [pc, #1404]	; 11aec <main@@Base+0x830>
   1156c:	add	r1, pc, r0
   11570:	ldr	r0, [fp, #-12]
   11574:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11578:	add	r2, r2, #1
   1157c:	add	r0, r0, r2, lsl #2
   11580:	ldr	r0, [r0]
   11584:	bl	10f10 <coda_expression_from_string@plt>
   11588:	cmp	r0, #0
   1158c:	beq	115d8 <main@@Base+0x31c>
   11590:	ldr	r0, [pc, #1372]	; 11af4 <main@@Base+0x838>
   11594:	ldr	r0, [pc, r0]
   11598:	ldr	r0, [r0]
   1159c:	str	r0, [fp, #-44]	; 0xffffffd4
   115a0:	bl	10f28 <coda_get_errno@plt>
   115a4:	ldr	r0, [r0]
   115a8:	bl	10ef8 <coda_errno_to_string@plt>
   115ac:	ldr	r1, [pc, #1340]	; 11af0 <main@@Base+0x834>
   115b0:	add	r1, pc, r1
   115b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   115b8:	str	r0, [fp, #-48]	; 0xffffffd0
   115bc:	mov	r0, r2
   115c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   115c4:	bl	10e8c <fprintf@plt>
   115c8:	movw	r1, #1
   115cc:	str	r0, [fp, #-52]	; 0xffffffcc
   115d0:	mov	r0, r1
   115d4:	bl	10e74 <exit@plt>
   115d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115dc:	add	r0, r0, #1
   115e0:	str	r0, [fp, #-24]	; 0xffffffe8
   115e4:	b	11630 <main@@Base+0x374>
   115e8:	ldr	r0, [fp, #-12]
   115ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115f0:	add	r0, r0, r1, lsl #2
   115f4:	ldr	r0, [r0]
   115f8:	ldrb	r0, [r0]
   115fc:	cmp	r0, #45	; 0x2d
   11600:	beq	11608 <main@@Base+0x34c>
   11604:	b	11648 <main@@Base+0x38c>
   11608:	ldr	r0, [pc, #1104]	; 11a60 <main@@Base+0x7a4>
   1160c:	add	r1, pc, r0
   11610:	ldr	r0, [pc, #1100]	; 11a64 <main@@Base+0x7a8>
   11614:	ldr	r0, [pc, r0]
   11618:	ldr	r0, [r0]
   1161c:	bl	10e8c <fprintf@plt>
   11620:	str	r0, [fp, #-56]	; 0xffffffc8
   11624:	bl	11df0 <main@@Base+0xb34>
   11628:	movw	r0, #1
   1162c:	bl	10e74 <exit@plt>
   11630:	b	11634 <main@@Base+0x378>
   11634:	b	11638 <main@@Base+0x37c>
   11638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1163c:	add	r0, r0, #1
   11640:	str	r0, [fp, #-24]	; 0xffffffe8
   11644:	b	11458 <main@@Base+0x19c>
   11648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1164c:	ldr	r1, [fp, #-8]
   11650:	cmp	r0, r1
   11654:	blt	11680 <main@@Base+0x3c4>
   11658:	ldr	r0, [pc, #1156]	; 11ae4 <main@@Base+0x828>
   1165c:	add	r1, pc, r0
   11660:	ldr	r0, [pc, #1152]	; 11ae8 <main@@Base+0x82c>
   11664:	ldr	r0, [pc, r0]
   11668:	ldr	r0, [r0]
   1166c:	bl	10e8c <fprintf@plt>
   11670:	str	r0, [fp, #-60]	; 0xffffffc4
   11674:	bl	11df0 <main@@Base+0xb34>
   11678:	movw	r0, #1
   1167c:	bl	10e74 <exit@plt>
   11680:	ldr	r0, [pc, #992]	; 11a68 <main@@Base+0x7ac>
   11684:	add	r1, pc, r0
   11688:	ldr	r0, [fp, #-12]
   1168c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11690:	add	r0, r0, r2, lsl #2
   11694:	ldr	r0, [r0]
   11698:	bl	10f10 <coda_expression_from_string@plt>
   1169c:	cmp	r0, #0
   116a0:	beq	116ec <main@@Base+0x430>
   116a4:	ldr	r0, [pc, #1076]	; 11ae0 <main@@Base+0x824>
   116a8:	ldr	r0, [pc, r0]
   116ac:	ldr	r0, [r0]
   116b0:	str	r0, [fp, #-64]	; 0xffffffc0
   116b4:	bl	10f28 <coda_get_errno@plt>
   116b8:	ldr	r0, [r0]
   116bc:	bl	10ef8 <coda_errno_to_string@plt>
   116c0:	ldr	r1, [pc, #1044]	; 11adc <main@@Base+0x820>
   116c4:	add	r1, pc, r1
   116c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   116cc:	str	r0, [fp, #-68]	; 0xffffffbc
   116d0:	mov	r0, r2
   116d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   116d8:	bl	10e8c <fprintf@plt>
   116dc:	movw	r1, #1
   116e0:	str	r0, [fp, #-72]	; 0xffffffb8
   116e4:	mov	r0, r1
   116e8:	bl	10e74 <exit@plt>
   116ec:	ldr	r0, [pc, #888]	; 11a6c <main@@Base+0x7b0>
   116f0:	add	r1, pc, r0
   116f4:	ldr	r0, [pc, #884]	; 11a70 <main@@Base+0x7b4>
   116f8:	add	r0, pc, r0
   116fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11700:	add	r2, r2, #1
   11704:	str	r2, [fp, #-24]	; 0xffffffe8
   11708:	ldr	r0, [r0]
   1170c:	bl	10ebc <coda_expression_get_type@plt>
   11710:	cmp	r0, #0
   11714:	beq	11760 <main@@Base+0x4a4>
   11718:	ldr	r0, [pc, #952]	; 11ad8 <main@@Base+0x81c>
   1171c:	ldr	r0, [pc, r0]
   11720:	ldr	r0, [r0]
   11724:	str	r0, [fp, #-76]	; 0xffffffb4
   11728:	bl	10f28 <coda_get_errno@plt>
   1172c:	ldr	r0, [r0]
   11730:	bl	10ef8 <coda_errno_to_string@plt>
   11734:	ldr	r1, [pc, #920]	; 11ad4 <main@@Base+0x818>
   11738:	add	r1, pc, r1
   1173c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11740:	str	r0, [sp, #80]	; 0x50
   11744:	mov	r0, r2
   11748:	ldr	r2, [sp, #80]	; 0x50
   1174c:	bl	10e8c <fprintf@plt>
   11750:	movw	r1, #1
   11754:	str	r0, [sp, #76]	; 0x4c
   11758:	mov	r0, r1
   1175c:	bl	10e74 <exit@plt>
   11760:	ldr	r0, [pc, #780]	; 11a74 <main@@Base+0x7b8>
   11764:	add	r0, pc, r0
   11768:	ldr	r0, [r0]
   1176c:	cmp	r0, #4
   11770:	beq	11788 <main@@Base+0x4cc>
   11774:	ldr	r0, [pc, #764]	; 11a78 <main@@Base+0x7bc>
   11778:	add	r0, pc, r0
   1177c:	ldr	r0, [r0]
   11780:	cmp	r0, #5
   11784:	bne	117d4 <main@@Base+0x518>
   11788:	ldr	r0, [pc, #828]	; 11acc <main@@Base+0x810>
   1178c:	add	r0, pc, r0
   11790:	ldr	r1, [pc, #824]	; 11ad0 <main@@Base+0x814>
   11794:	ldr	r1, [pc, r1]
   11798:	ldr	r1, [r1]
   1179c:	ldr	r0, [r0]
   117a0:	str	r1, [sp, #72]	; 0x48
   117a4:	bl	10f04 <coda_expression_get_type_name@plt>
   117a8:	ldr	r1, [pc, #792]	; 11ac8 <main@@Base+0x80c>
   117ac:	add	r1, pc, r1
   117b0:	ldr	r2, [sp, #72]	; 0x48
   117b4:	str	r0, [sp, #68]	; 0x44
   117b8:	mov	r0, r2
   117bc:	ldr	r2, [sp, #68]	; 0x44
   117c0:	bl	10e8c <fprintf@plt>
   117c4:	movw	r1, #1
   117c8:	str	r0, [sp, #64]	; 0x40
   117cc:	mov	r0, r1
   117d0:	bl	10e74 <exit@plt>
   117d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   117d8:	cmp	r0, #0
   117dc:	beq	11824 <main@@Base+0x568>
   117e0:	ldr	r0, [pc, #728]	; 11ac0 <main@@Base+0x804>
   117e4:	add	r0, pc, r0
   117e8:	ldr	r0, [r0]
   117ec:	bl	10e50 <coda_expression_delete@plt>
   117f0:	ldr	r0, [pc, #708]	; 11abc <main@@Base+0x800>
   117f4:	add	r0, pc, r0
   117f8:	ldr	r0, [r0]
   117fc:	movw	r1, #0
   11800:	cmp	r0, r1
   11804:	beq	11818 <main@@Base+0x55c>
   11808:	ldr	r0, [pc, #692]	; 11ac4 <main@@Base+0x808>
   1180c:	add	r0, pc, r0
   11810:	ldr	r0, [r0]
   11814:	bl	10e50 <coda_expression_delete@plt>
   11818:	movw	r0, #0
   1181c:	str	r0, [fp, #-4]
   11820:	b	11a48 <main@@Base+0x78c>
   11824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11828:	ldr	r1, [fp, #-8]
   1182c:	cmp	r0, r1
   11830:	bge	1192c <main@@Base+0x670>
   11834:	bl	10e98 <coda_init@plt>
   11838:	cmp	r0, #0
   1183c:	beq	11888 <main@@Base+0x5cc>
   11840:	ldr	r0, [pc, #624]	; 11ab8 <main@@Base+0x7fc>
   11844:	ldr	r0, [pc, r0]
   11848:	ldr	r0, [r0]
   1184c:	str	r0, [sp, #60]	; 0x3c
   11850:	bl	10f28 <coda_get_errno@plt>
   11854:	ldr	r0, [r0]
   11858:	bl	10ef8 <coda_errno_to_string@plt>
   1185c:	ldr	r1, [pc, #592]	; 11ab4 <main@@Base+0x7f8>
   11860:	add	r1, pc, r1
   11864:	ldr	r2, [sp, #60]	; 0x3c
   11868:	str	r0, [sp, #56]	; 0x38
   1186c:	mov	r0, r2
   11870:	ldr	r2, [sp, #56]	; 0x38
   11874:	bl	10e8c <fprintf@plt>
   11878:	movw	r1, #1
   1187c:	str	r0, [sp, #52]	; 0x34
   11880:	mov	r0, r1
   11884:	bl	10e74 <exit@plt>
   11888:	ldr	r0, [pc, #524]	; 11a9c <main@@Base+0x7e0>
   1188c:	ldr	r3, [pc, r0]
   11890:	ldr	r0, [fp, #-16]
   11894:	str	r3, [sp, #48]	; 0x30
   11898:	bl	10ea4 <coda_set_option_perform_conversions@plt>
   1189c:	ldr	r1, [fp, #-8]
   118a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   118a4:	sub	r1, r1, r2
   118a8:	ldr	r3, [fp, #-12]
   118ac:	add	r2, r3, r2, lsl #2
   118b0:	movw	r3, #0
   118b4:	str	r0, [sp, #44]	; 0x2c
   118b8:	mov	r0, r3
   118bc:	ldr	ip, [sp, #48]	; 0x30
   118c0:	str	r3, [sp, #40]	; 0x28
   118c4:	mov	r3, ip
   118c8:	ldr	lr, [sp, #40]	; 0x28
   118cc:	str	lr, [sp]
   118d0:	bl	10db4 <coda_match_filefilter@plt>
   118d4:	cmp	r0, #0
   118d8:	beq	11924 <main@@Base+0x668>
   118dc:	ldr	r0, [pc, #460]	; 11ab0 <main@@Base+0x7f4>
   118e0:	ldr	r0, [pc, r0]
   118e4:	ldr	r0, [r0]
   118e8:	str	r0, [sp, #36]	; 0x24
   118ec:	bl	10f28 <coda_get_errno@plt>
   118f0:	ldr	r0, [r0]
   118f4:	bl	10ef8 <coda_errno_to_string@plt>
   118f8:	ldr	r1, [pc, #428]	; 11aac <main@@Base+0x7f0>
   118fc:	add	r1, pc, r1
   11900:	ldr	r2, [sp, #36]	; 0x24
   11904:	str	r0, [sp, #32]
   11908:	mov	r0, r2
   1190c:	ldr	r2, [sp, #32]
   11910:	bl	10e8c <fprintf@plt>
   11914:	movw	r1, #1
   11918:	str	r0, [sp, #28]
   1191c:	mov	r0, r1
   11920:	bl	10e74 <exit@plt>
   11924:	bl	10e38 <coda_done@plt>
   11928:	b	11a08 <main@@Base+0x74c>
   1192c:	ldr	r0, [pc, #328]	; 11a7c <main@@Base+0x7c0>
   11930:	add	r0, pc, r0
   11934:	ldr	r0, [r0]
   11938:	movw	r1, #0
   1193c:	cmp	r0, r1
   11940:	beq	1196c <main@@Base+0x6b0>
   11944:	ldr	r0, [pc, #328]	; 11a94 <main@@Base+0x7d8>
   11948:	add	r1, pc, r0
   1194c:	ldr	r0, [pc, #324]	; 11a98 <main@@Base+0x7dc>
   11950:	ldr	r0, [pc, r0]
   11954:	ldr	r0, [r0]
   11958:	bl	10e8c <fprintf@plt>
   1195c:	movw	r1, #1
   11960:	str	r0, [sp, #24]
   11964:	mov	r0, r1
   11968:	bl	10e74 <exit@plt>
   1196c:	ldr	r0, [pc, #268]	; 11a80 <main@@Base+0x7c4>
   11970:	add	r0, pc, r0
   11974:	ldr	r0, [r0]
   11978:	bl	10ed4 <coda_expression_is_constant@plt>
   1197c:	cmp	r0, #0
   11980:	bne	119ac <main@@Base+0x6f0>
   11984:	ldr	r0, [pc, #248]	; 11a84 <main@@Base+0x7c8>
   11988:	add	r1, pc, r0
   1198c:	ldr	r0, [pc, #244]	; 11a88 <main@@Base+0x7cc>
   11990:	ldr	r0, [pc, r0]
   11994:	ldr	r0, [r0]
   11998:	bl	10e8c <fprintf@plt>
   1199c:	movw	r1, #1
   119a0:	str	r0, [sp, #20]
   119a4:	mov	r0, r1
   119a8:	bl	10e74 <exit@plt>
   119ac:	movw	r0, #0
   119b0:	bl	11b20 <main@@Base+0x864>
   119b4:	cmp	r0, #0
   119b8:	beq	11a04 <main@@Base+0x748>
   119bc:	ldr	r0, [pc, #204]	; 11a90 <main@@Base+0x7d4>
   119c0:	ldr	r0, [pc, r0]
   119c4:	ldr	r0, [r0]
   119c8:	str	r0, [sp, #16]
   119cc:	bl	10f28 <coda_get_errno@plt>
   119d0:	ldr	r0, [r0]
   119d4:	bl	10ef8 <coda_errno_to_string@plt>
   119d8:	ldr	r1, [pc, #172]	; 11a8c <main@@Base+0x7d0>
   119dc:	add	r1, pc, r1
   119e0:	ldr	r2, [sp, #16]
   119e4:	str	r0, [sp, #12]
   119e8:	mov	r0, r2
   119ec:	ldr	r2, [sp, #12]
   119f0:	bl	10e8c <fprintf@plt>
   119f4:	movw	r1, #1
   119f8:	str	r0, [sp, #8]
   119fc:	mov	r0, r1
   11a00:	bl	10e74 <exit@plt>
   11a04:	b	11a08 <main@@Base+0x74c>
   11a08:	ldr	r0, [pc, #148]	; 11aa4 <main@@Base+0x7e8>
   11a0c:	add	r0, pc, r0
   11a10:	ldr	r0, [r0]
   11a14:	bl	10e50 <coda_expression_delete@plt>
   11a18:	ldr	r0, [pc, #128]	; 11aa0 <main@@Base+0x7e4>
   11a1c:	add	r0, pc, r0
   11a20:	ldr	r0, [r0]
   11a24:	movw	r1, #0
   11a28:	cmp	r0, r1
   11a2c:	beq	11a40 <main@@Base+0x784>
   11a30:	ldr	r0, [pc, #112]	; 11aa8 <main@@Base+0x7ec>
   11a34:	add	r0, pc, r0
   11a38:	ldr	r0, [r0]
   11a3c:	bl	10e50 <coda_expression_delete@plt>
   11a40:	movw	r0, #0
   11a44:	str	r0, [fp, #-4]
   11a48:	ldr	r0, [fp, #-4]
   11a4c:	mov	sp, fp
   11a50:	pop	{fp, pc}
   11a54:	andeq	r1, r0, sl, lsr #4
   11a58:	andeq	r1, r0, r0, lsl #4
   11a5c:	andeq	r2, r1, r4, lsl #25
   11a60:	andeq	r1, r0, r3, ror r0
   11a64:	andeq	r2, r1, ip, ror sl
   11a68:	andeq	r2, r1, r8, lsr #20
   11a6c:	andeq	r2, r1, r0, asr #19
   11a70:			; <UNDEFINED> instruction: 0x000129b4
   11a74:	andeq	r2, r1, ip, asr #18
   11a78:	andeq	r2, r1, r8, lsr r9
   11a7c:	andeq	r2, r1, r8, ror r7
   11a80:	andeq	r2, r1, ip, lsr r7
   11a84:	andeq	r0, r0, r1, asr #27
   11a88:	andeq	r2, r1, r0, lsl #14
   11a8c:	andeq	r0, r0, ip, asr #24
   11a90:	ldrdeq	r2, [r1], -r0
   11a94:	andeq	r0, r0, r0, lsr #27
   11a98:	andeq	r2, r1, r0, asr #14
   11a9c:	andeq	r2, r1, ip, lsl #16
   11aa0:	andeq	r2, r1, ip, lsl #13
   11aa4:	andeq	r2, r1, r0, lsr #13
   11aa8:	andeq	r2, r1, r4, ror r6
   11aac:	andeq	r0, r0, ip, lsr #26
   11ab0:			; <UNDEFINED> instruction: 0x000127b0
   11ab4:	andeq	r0, r0, r8, asr #27
   11ab8:	andeq	r2, r1, ip, asr #16
   11abc:			; <UNDEFINED> instruction: 0x000128b4
   11ac0:	andeq	r2, r1, r8, asr #17
   11ac4:	muleq	r1, ip, r8
   11ac8:	andeq	r0, r0, sp, lsl #30
   11acc:	andeq	r2, r1, r4, lsr #18
   11ad0:	strdeq	r2, [r1], -ip
   11ad4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11ad8:	andeq	r2, r1, r4, ror r9
   11adc:	ldrdeq	r0, [r0], -r5
   11ae0:	andeq	r2, r1, r8, ror #19
   11ae4:	andeq	r1, r0, r3, lsr #32
   11ae8:	andeq	r2, r1, ip, lsr #20
   11aec:	andeq	r2, r1, ip, lsr fp
   11af0:	andeq	r1, r0, sl, lsr #1
   11af4:	strdeq	r2, [r1], -ip
   11af8:	strdeq	r1, [r0], -r8
   11afc:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11b00:			; <UNDEFINED> instruction: 0x000012be
   11b04:	andeq	r1, r0, r5, lsr #5
   11b08:	andeq	r1, r0, r3, ror #4
   11b0c:			; <UNDEFINED> instruction: 0x000011b7
   11b10:	muleq	r0, r6, r1
   11b14:	andeq	r1, r0, lr, ror #2
   11b18:	andeq	r1, r0, sp, asr #2
   11b1c:	andeq	r1, r0, r3, lsr r1
   11b20:	push	{fp, lr}
   11b24:	mov	fp, sp
   11b28:	sub	sp, sp, #88	; 0x58
   11b2c:	str	r0, [fp, #-8]
   11b30:	ldr	r0, [pc, #692]	; 11dec <main@@Base+0xb30>
   11b34:	ldr	r0, [pc, r0]
   11b38:	cmp	r0, #5
   11b3c:	str	r0, [sp, #20]
   11b40:	bhi	11d94 <main@@Base+0xad8>
   11b44:	add	r0, pc, #8
   11b48:	ldr	r1, [sp, #20]
   11b4c:	ldr	r2, [r0, r1, lsl #2]
   11b50:	add	pc, r0, r2
   11b54:	andeq	r0, r0, r8, lsl r0
   11b58:	andeq	r0, r0, r8, lsr #1
   11b5c:	andeq	r0, r0, r0, lsr #2
   11b60:	andeq	r0, r0, ip, lsl #3
   11b64:	andeq	r0, r0, r0, lsr #4
   11b68:	andeq	r0, r0, r0, lsr #4
   11b6c:	ldr	r0, [pc, #612]	; 11dd8 <main@@Base+0xb1c>
   11b70:	add	r0, pc, r0
   11b74:	ldr	r0, [r0]
   11b78:	ldr	r1, [fp, #-8]
   11b7c:	sub	r2, fp, #12
   11b80:	bl	10e20 <coda_expression_eval_bool@plt>
   11b84:	cmp	r0, #0
   11b88:	beq	11bc0 <main@@Base+0x904>
   11b8c:	bl	10f28 <coda_get_errno@plt>
   11b90:	ldr	r0, [r0]
   11b94:	bl	10ef8 <coda_errno_to_string@plt>
   11b98:	ldr	r1, [pc, #584]	; 11de8 <main@@Base+0xb2c>
   11b9c:	add	r1, pc, r1
   11ba0:	mvn	r2, #400	; 0x190
   11ba4:	str	r0, [sp, #16]
   11ba8:	mov	r0, r2
   11bac:	ldr	r2, [sp, #16]
   11bb0:	bl	10de4 <coda_set_error@plt>
   11bb4:	mvn	r0, #0
   11bb8:	str	r0, [fp, #-4]
   11bbc:	b	11d9c <main@@Base+0xae0>
   11bc0:	ldr	r0, [pc, #532]	; 11ddc <main@@Base+0xb20>
   11bc4:	add	r0, pc, r0
   11bc8:	ldr	r1, [pc, #528]	; 11de0 <main@@Base+0xb24>
   11bcc:	add	r1, pc, r1
   11bd0:	ldr	r2, [pc, #524]	; 11de4 <main@@Base+0xb28>
   11bd4:	add	r2, pc, r2
   11bd8:	ldr	r3, [fp, #-12]
   11bdc:	cmp	r3, #0
   11be0:	movw	r3, #0
   11be4:	movne	r3, #1
   11be8:	tst	r3, #1
   11bec:	movne	r2, r1
   11bf0:	mov	r1, r2
   11bf4:	bl	10dd8 <printf@plt>
   11bf8:	b	11d94 <main@@Base+0xad8>
   11bfc:	ldr	r0, [pc, #456]	; 11dcc <main@@Base+0xb10>
   11c00:	add	r0, pc, r0
   11c04:	ldr	r0, [r0]
   11c08:	ldr	r1, [fp, #-8]
   11c0c:	sub	r2, fp, #24
   11c10:	bl	10dc0 <coda_expression_eval_integer@plt>
   11c14:	cmp	r0, #0
   11c18:	beq	11c50 <main@@Base+0x994>
   11c1c:	bl	10f28 <coda_get_errno@plt>
   11c20:	ldr	r0, [r0]
   11c24:	bl	10ef8 <coda_errno_to_string@plt>
   11c28:	ldr	r1, [pc, #420]	; 11dd4 <main@@Base+0xb18>
   11c2c:	add	r1, pc, r1
   11c30:	mvn	r2, #400	; 0x190
   11c34:	str	r0, [sp, #12]
   11c38:	mov	r0, r2
   11c3c:	ldr	r2, [sp, #12]
   11c40:	bl	10de4 <coda_set_error@plt>
   11c44:	mvn	r0, #0
   11c48:	str	r0, [fp, #-4]
   11c4c:	b	11d9c <main@@Base+0xae0>
   11c50:	add	r2, sp, #43	; 0x2b
   11c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c58:	ldr	r1, [fp, #-20]	; 0xffffffec
   11c5c:	bl	10f40 <coda_str64@plt>
   11c60:	ldr	r0, [pc, #360]	; 11dd0 <main@@Base+0xb14>
   11c64:	add	r0, pc, r0
   11c68:	add	r1, sp, #43	; 0x2b
   11c6c:	bl	10dd8 <printf@plt>
   11c70:	b	11d94 <main@@Base+0xad8>
   11c74:	ldr	r0, [pc, #324]	; 11dc0 <main@@Base+0xb04>
   11c78:	add	r0, pc, r0
   11c7c:	ldr	r0, [r0]
   11c80:	ldr	r1, [fp, #-8]
   11c84:	add	r2, sp, #32
   11c88:	bl	10ee0 <coda_expression_eval_float@plt>
   11c8c:	cmp	r0, #0
   11c90:	beq	11cc8 <main@@Base+0xa0c>
   11c94:	bl	10f28 <coda_get_errno@plt>
   11c98:	ldr	r0, [r0]
   11c9c:	bl	10ef8 <coda_errno_to_string@plt>
   11ca0:	ldr	r1, [pc, #288]	; 11dc8 <main@@Base+0xb0c>
   11ca4:	add	r1, pc, r1
   11ca8:	mvn	r2, #400	; 0x190
   11cac:	str	r0, [sp, #8]
   11cb0:	mov	r0, r2
   11cb4:	ldr	r2, [sp, #8]
   11cb8:	bl	10de4 <coda_set_error@plt>
   11cbc:	mvn	r0, #0
   11cc0:	str	r0, [fp, #-4]
   11cc4:	b	11d9c <main@@Base+0xae0>
   11cc8:	ldr	r0, [pc, #244]	; 11dc4 <main@@Base+0xb08>
   11ccc:	add	r0, pc, r0
   11cd0:	vldr	d16, [sp, #32]
   11cd4:	vmov	r2, r3, d16
   11cd8:	bl	10dd8 <printf@plt>
   11cdc:	b	11d94 <main@@Base+0xad8>
   11ce0:	ldr	r0, [pc, #204]	; 11db4 <main@@Base+0xaf8>
   11ce4:	add	r0, pc, r0
   11ce8:	movw	r1, #0
   11cec:	str	r1, [sp, #28]
   11cf0:	ldr	r0, [r0]
   11cf4:	ldr	r1, [fp, #-8]
   11cf8:	add	r2, sp, #28
   11cfc:	add	r3, sp, #24
   11d00:	bl	10eb0 <coda_expression_eval_string@plt>
   11d04:	cmp	r0, #0
   11d08:	beq	11d40 <main@@Base+0xa84>
   11d0c:	bl	10f28 <coda_get_errno@plt>
   11d10:	ldr	r0, [r0]
   11d14:	bl	10ef8 <coda_errno_to_string@plt>
   11d18:	ldr	r1, [pc, #156]	; 11dbc <main@@Base+0xb00>
   11d1c:	add	r1, pc, r1
   11d20:	mvn	r2, #400	; 0x190
   11d24:	str	r0, [sp, #4]
   11d28:	mov	r0, r2
   11d2c:	ldr	r2, [sp, #4]
   11d30:	bl	10de4 <coda_set_error@plt>
   11d34:	mvn	r0, #0
   11d38:	str	r0, [fp, #-4]
   11d3c:	b	11d9c <main@@Base+0xae0>
   11d40:	ldr	r0, [sp, #28]
   11d44:	ldr	r1, [sp, #24]
   11d48:	bl	121f0 <main@@Base+0xf34>
   11d4c:	ldr	r0, [pc, #100]	; 11db8 <main@@Base+0xafc>
   11d50:	add	r0, pc, r0
   11d54:	bl	10dd8 <printf@plt>
   11d58:	ldr	r1, [sp, #28]
   11d5c:	movw	r2, #0
   11d60:	cmp	r1, r2
   11d64:	beq	11d70 <main@@Base+0xab4>
   11d68:	ldr	r0, [sp, #28]
   11d6c:	bl	10dfc <free@plt>
   11d70:	b	11d94 <main@@Base+0xad8>
   11d74:	ldr	r0, [pc, #44]	; 11da8 <main@@Base+0xaec>
   11d78:	add	r0, pc, r0
   11d7c:	ldr	r1, [pc, #40]	; 11dac <main@@Base+0xaf0>
   11d80:	add	r1, pc, r1
   11d84:	ldr	r2, [pc, #36]	; 11db0 <main@@Base+0xaf4>
   11d88:	add	r3, pc, r2
   11d8c:	movw	r2, #230	; 0xe6
   11d90:	bl	10f4c <__assert_fail@plt>
   11d94:	movw	r0, #0
   11d98:	str	r0, [fp, #-4]
   11d9c:	ldr	r0, [fp, #-4]
   11da0:	mov	sp, fp
   11da4:	pop	{fp, pc}
   11da8:	andeq	r1, r0, ip, lsr r2
   11dac:	andeq	r1, r0, r6, lsr r2
   11db0:	andeq	r1, r0, sl, lsl #5
   11db4:	andeq	r2, r1, r8, asr #7
   11db8:	andeq	r0, r0, r1, ror sp
   11dbc:	andeq	r1, r0, r1, ror r2
   11dc0:	andeq	r2, r1, r4, lsr r4
   11dc4:			; <UNDEFINED> instruction: 0x000012ba
   11dc8:			; <UNDEFINED> instruction: 0x000012b3
   11dcc:	andeq	r2, r1, ip, lsr #9
   11dd0:	andeq	r0, r0, fp, asr #19
   11dd4:	andeq	r1, r0, r3, lsl #6
   11dd8:	andeq	r2, r1, ip, lsr r5
   11ddc:	andeq	r0, r0, fp, ror #20
   11de0:	andeq	r1, r0, r8, asr r3
   11de4:	andeq	r1, r0, r5, asr r3
   11de8:	andeq	r1, r0, r0, ror #6
   11dec:	andeq	r2, r1, ip, ror r5
   11df0:	push	{fp, lr}
   11df4:	mov	fp, sp
   11df8:	sub	sp, sp, #152	; 0x98
   11dfc:	ldr	r0, [pc, #900]	; 12188 <main@@Base+0xecc>
   11e00:	add	r0, pc, r0
   11e04:	bl	10dd8 <printf@plt>
   11e08:	ldr	r1, [pc, #884]	; 12184 <main@@Base+0xec8>
   11e0c:	add	r1, pc, r1
   11e10:	str	r0, [fp, #-4]
   11e14:	mov	r0, r1
   11e18:	bl	10dd8 <printf@plt>
   11e1c:	ldr	r1, [pc, #860]	; 12180 <main@@Base+0xec4>
   11e20:	add	r1, pc, r1
   11e24:	str	r0, [fp, #-8]
   11e28:	mov	r0, r1
   11e2c:	bl	10dd8 <printf@plt>
   11e30:	ldr	r1, [pc, #836]	; 1217c <main@@Base+0xec0>
   11e34:	add	r1, pc, r1
   11e38:	str	r0, [fp, #-12]
   11e3c:	mov	r0, r1
   11e40:	bl	10dd8 <printf@plt>
   11e44:	ldr	r1, [pc, #812]	; 12178 <main@@Base+0xebc>
   11e48:	add	r1, pc, r1
   11e4c:	str	r0, [fp, #-16]
   11e50:	mov	r0, r1
   11e54:	bl	10dd8 <printf@plt>
   11e58:	ldr	r1, [pc, #788]	; 12174 <main@@Base+0xeb8>
   11e5c:	add	r1, pc, r1
   11e60:	str	r0, [fp, #-20]	; 0xffffffec
   11e64:	mov	r0, r1
   11e68:	bl	10dd8 <printf@plt>
   11e6c:	ldr	r1, [pc, #764]	; 12170 <main@@Base+0xeb4>
   11e70:	add	r1, pc, r1
   11e74:	str	r0, [fp, #-24]	; 0xffffffe8
   11e78:	mov	r0, r1
   11e7c:	bl	10dd8 <printf@plt>
   11e80:	ldr	r1, [pc, #740]	; 1216c <main@@Base+0xeb0>
   11e84:	add	r1, pc, r1
   11e88:	str	r0, [fp, #-28]	; 0xffffffe4
   11e8c:	mov	r0, r1
   11e90:	bl	10dd8 <printf@plt>
   11e94:	ldr	r1, [pc, #716]	; 12168 <main@@Base+0xeac>
   11e98:	add	r1, pc, r1
   11e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   11ea0:	mov	r0, r1
   11ea4:	bl	10dd8 <printf@plt>
   11ea8:	ldr	r1, [pc, #692]	; 12164 <main@@Base+0xea8>
   11eac:	add	r1, pc, r1
   11eb0:	str	r0, [fp, #-36]	; 0xffffffdc
   11eb4:	mov	r0, r1
   11eb8:	bl	10dd8 <printf@plt>
   11ebc:	ldr	r1, [pc, #668]	; 12160 <main@@Base+0xea4>
   11ec0:	add	r1, pc, r1
   11ec4:	str	r0, [fp, #-40]	; 0xffffffd8
   11ec8:	mov	r0, r1
   11ecc:	bl	10dd8 <printf@plt>
   11ed0:	ldr	r1, [pc, #644]	; 1215c <main@@Base+0xea0>
   11ed4:	add	r1, pc, r1
   11ed8:	str	r0, [fp, #-44]	; 0xffffffd4
   11edc:	mov	r0, r1
   11ee0:	bl	10dd8 <printf@plt>
   11ee4:	ldr	r1, [pc, #620]	; 12158 <main@@Base+0xe9c>
   11ee8:	add	r1, pc, r1
   11eec:	str	r0, [fp, #-48]	; 0xffffffd0
   11ef0:	mov	r0, r1
   11ef4:	bl	10dd8 <printf@plt>
   11ef8:	ldr	r1, [pc, #596]	; 12154 <main@@Base+0xe98>
   11efc:	add	r1, pc, r1
   11f00:	str	r0, [fp, #-52]	; 0xffffffcc
   11f04:	mov	r0, r1
   11f08:	bl	10dd8 <printf@plt>
   11f0c:	ldr	r1, [pc, #572]	; 12150 <main@@Base+0xe94>
   11f10:	add	r1, pc, r1
   11f14:	str	r0, [fp, #-56]	; 0xffffffc8
   11f18:	mov	r0, r1
   11f1c:	bl	10dd8 <printf@plt>
   11f20:	ldr	r1, [pc, #548]	; 1214c <main@@Base+0xe90>
   11f24:	add	r1, pc, r1
   11f28:	str	r0, [fp, #-60]	; 0xffffffc4
   11f2c:	mov	r0, r1
   11f30:	bl	10dd8 <printf@plt>
   11f34:	ldr	r1, [pc, #524]	; 12148 <main@@Base+0xe8c>
   11f38:	add	r1, pc, r1
   11f3c:	str	r0, [fp, #-64]	; 0xffffffc0
   11f40:	mov	r0, r1
   11f44:	bl	10dd8 <printf@plt>
   11f48:	ldr	r1, [pc, #500]	; 12144 <main@@Base+0xe88>
   11f4c:	add	r1, pc, r1
   11f50:	str	r0, [fp, #-68]	; 0xffffffbc
   11f54:	mov	r0, r1
   11f58:	bl	10dd8 <printf@plt>
   11f5c:	ldr	r1, [pc, #476]	; 12140 <main@@Base+0xe84>
   11f60:	add	r1, pc, r1
   11f64:	str	r0, [fp, #-72]	; 0xffffffb8
   11f68:	mov	r0, r1
   11f6c:	bl	10dd8 <printf@plt>
   11f70:	ldr	r1, [pc, #452]	; 1213c <main@@Base+0xe80>
   11f74:	add	r1, pc, r1
   11f78:	str	r0, [sp, #76]	; 0x4c
   11f7c:	mov	r0, r1
   11f80:	bl	10dd8 <printf@plt>
   11f84:	ldr	r1, [pc, #428]	; 12138 <main@@Base+0xe7c>
   11f88:	add	r1, pc, r1
   11f8c:	str	r0, [sp, #72]	; 0x48
   11f90:	mov	r0, r1
   11f94:	bl	10dd8 <printf@plt>
   11f98:	ldr	r1, [pc, #404]	; 12134 <main@@Base+0xe78>
   11f9c:	add	r1, pc, r1
   11fa0:	str	r0, [sp, #68]	; 0x44
   11fa4:	mov	r0, r1
   11fa8:	bl	10dd8 <printf@plt>
   11fac:	ldr	r1, [pc, #380]	; 12130 <main@@Base+0xe74>
   11fb0:	add	r1, pc, r1
   11fb4:	str	r0, [sp, #64]	; 0x40
   11fb8:	mov	r0, r1
   11fbc:	bl	10dd8 <printf@plt>
   11fc0:	ldr	r1, [pc, #356]	; 1212c <main@@Base+0xe70>
   11fc4:	add	r1, pc, r1
   11fc8:	str	r0, [sp, #60]	; 0x3c
   11fcc:	mov	r0, r1
   11fd0:	bl	10dd8 <printf@plt>
   11fd4:	ldr	r1, [pc, #332]	; 12128 <main@@Base+0xe6c>
   11fd8:	add	r1, pc, r1
   11fdc:	str	r0, [sp, #56]	; 0x38
   11fe0:	mov	r0, r1
   11fe4:	bl	10dd8 <printf@plt>
   11fe8:	ldr	r1, [pc, #308]	; 12124 <main@@Base+0xe68>
   11fec:	add	r1, pc, r1
   11ff0:	str	r0, [sp, #52]	; 0x34
   11ff4:	mov	r0, r1
   11ff8:	bl	10dd8 <printf@plt>
   11ffc:	ldr	r1, [pc, #284]	; 12120 <main@@Base+0xe64>
   12000:	add	r1, pc, r1
   12004:	str	r0, [sp, #48]	; 0x30
   12008:	mov	r0, r1
   1200c:	bl	10dd8 <printf@plt>
   12010:	ldr	r1, [pc, #260]	; 1211c <main@@Base+0xe60>
   12014:	add	r1, pc, r1
   12018:	str	r0, [sp, #44]	; 0x2c
   1201c:	mov	r0, r1
   12020:	bl	10dd8 <printf@plt>
   12024:	ldr	r1, [pc, #236]	; 12118 <main@@Base+0xe5c>
   12028:	add	r1, pc, r1
   1202c:	str	r0, [sp, #40]	; 0x28
   12030:	mov	r0, r1
   12034:	bl	10dd8 <printf@plt>
   12038:	ldr	r1, [pc, #212]	; 12114 <main@@Base+0xe58>
   1203c:	add	r1, pc, r1
   12040:	str	r0, [sp, #36]	; 0x24
   12044:	mov	r0, r1
   12048:	bl	10dd8 <printf@plt>
   1204c:	ldr	r1, [pc, #188]	; 12110 <main@@Base+0xe54>
   12050:	add	r1, pc, r1
   12054:	str	r0, [sp, #32]
   12058:	mov	r0, r1
   1205c:	bl	10dd8 <printf@plt>
   12060:	ldr	r1, [pc, #164]	; 1210c <main@@Base+0xe50>
   12064:	add	r1, pc, r1
   12068:	str	r0, [sp, #28]
   1206c:	mov	r0, r1
   12070:	bl	10dd8 <printf@plt>
   12074:	ldr	r1, [pc, #140]	; 12108 <main@@Base+0xe4c>
   12078:	add	r1, pc, r1
   1207c:	str	r0, [sp, #24]
   12080:	mov	r0, r1
   12084:	bl	10dd8 <printf@plt>
   12088:	ldr	r1, [pc, #116]	; 12104 <main@@Base+0xe48>
   1208c:	add	r1, pc, r1
   12090:	str	r0, [sp, #20]
   12094:	mov	r0, r1
   12098:	bl	10dd8 <printf@plt>
   1209c:	ldr	r1, [pc, #92]	; 12100 <main@@Base+0xe44>
   120a0:	add	r1, pc, r1
   120a4:	str	r0, [sp, #16]
   120a8:	mov	r0, r1
   120ac:	bl	10dd8 <printf@plt>
   120b0:	ldr	r1, [pc, #68]	; 120fc <main@@Base+0xe40>
   120b4:	add	r1, pc, r1
   120b8:	str	r0, [sp, #12]
   120bc:	mov	r0, r1
   120c0:	bl	10dd8 <printf@plt>
   120c4:	ldr	r1, [pc, #44]	; 120f8 <main@@Base+0xe3c>
   120c8:	add	r1, pc, r1
   120cc:	str	r0, [sp, #8]
   120d0:	mov	r0, r1
   120d4:	bl	10dd8 <printf@plt>
   120d8:	ldr	r1, [pc, #20]	; 120f4 <main@@Base+0xe38>
   120dc:	add	r1, pc, r1
   120e0:	str	r0, [sp, #4]
   120e4:	mov	r0, r1
   120e8:	bl	10dd8 <printf@plt>
   120ec:	mov	sp, fp
   120f0:	pop	{fp, pc}
   120f4:	andeq	r0, r0, r5, ror #19
   120f8:			; <UNDEFINED> instruction: 0x00000db6
   120fc:	andeq	r0, r0, sl, lsl #27
   12100:	andeq	r0, r0, r4, asr sp
   12104:	andeq	r0, r0, lr, lsl sp
   12108:	andeq	r0, r0, r3, lsl #26
   1210c:	andeq	r0, r0, ip, asr #25
   12110:	muleq	r0, r5, ip
   12114:	andeq	r0, r0, r5, lsl #21
   12118:	andeq	r0, r0, sl, lsl #25
   1211c:	andeq	r0, r0, r2, lsl #25
   12120:	andeq	r0, r0, r1, asr #21
   12124:	andeq	r0, r0, fp, lsl #25
   12128:	andeq	r0, r0, r7, lsl #25
   1212c:	strdeq	r0, [r0], -sp
   12130:	muleq	r0, r7, ip
   12134:	andeq	r0, r0, sl, asr ip
   12138:	andeq	r0, r0, r9, lsr fp
   1213c:	andeq	r0, r0, r2, asr ip
   12140:	andeq	r0, r0, r9, lsl ip
   12144:	andeq	r0, r0, lr, lsl #24
   12148:	ldrdeq	r0, [r0], -r6
   1214c:	muleq	r0, pc, fp	; <UNPREDICTABLE>
   12150:	muleq	r0, sl, fp
   12154:	andeq	r0, r0, r3, ror fp
   12158:	andeq	r0, r0, r0, ror #22
   1215c:	andeq	r0, r0, r3, lsr #22
   12160:	andeq	r0, r0, r6, ror #21
   12164:	andeq	r0, r0, r1, ror #21
   12168:	andeq	r0, r0, r3, ror #21
   1216c:	andeq	r0, r0, sp, lsr ip
   12170:	ldrdeq	r0, [r0], -sl
   12174:	andeq	r0, r0, r2, lsr #21
   12178:	andeq	r0, r0, fp, ror #20
   1217c:	andeq	r0, r0, sl, asr sl
   12180:	andeq	r0, r0, pc, lsl sl
   12184:	andeq	r0, r0, r4, ror #19
   12188:	andeq	r0, r0, r8, ror #19
   1218c:	push	{fp, lr}
   12190:	mov	fp, sp
   12194:	sub	sp, sp, #16
   12198:	bl	10f1c <coda_get_libcoda_version@plt>
   1219c:	ldr	r1, [pc, #72]	; 121ec <main@@Base+0xf30>
   121a0:	add	r1, pc, r1
   121a4:	str	r0, [fp, #-4]
   121a8:	mov	r0, r1
   121ac:	ldr	r1, [fp, #-4]
   121b0:	bl	10dd8 <printf@plt>
   121b4:	ldr	r1, [pc, #44]	; 121e8 <main@@Base+0xf2c>
   121b8:	add	r1, pc, r1
   121bc:	str	r0, [sp, #8]
   121c0:	mov	r0, r1
   121c4:	bl	10dd8 <printf@plt>
   121c8:	ldr	r1, [pc, #20]	; 121e4 <main@@Base+0xf28>
   121cc:	add	r1, pc, r1
   121d0:	str	r0, [sp, #4]
   121d4:	mov	r0, r1
   121d8:	bl	10dd8 <printf@plt>
   121dc:	mov	sp, fp
   121e0:	pop	{fp, pc}
   121e4:	strdeq	r0, [r0], -r5
   121e8:	andeq	r0, r0, r4, lsl sp
   121ec:	andeq	r0, r0, pc, lsl sp
   121f0:	push	{fp, lr}
   121f4:	mov	fp, sp
   121f8:	sub	sp, sp, #16
   121fc:	str	r0, [fp, #-4]
   12200:	str	r1, [sp, #8]
   12204:	movw	r0, #0
   12208:	str	r0, [sp, #4]
   1220c:	ldr	r0, [sp, #8]
   12210:	cmp	r0, #0
   12214:	beq	12228 <main@@Base+0xf6c>
   12218:	ldr	r0, [fp, #-4]
   1221c:	movw	r1, #0
   12220:	cmp	r0, r1
   12224:	bne	1222c <main@@Base+0xf70>
   12228:	b	124f8 <main@@Base+0x123c>
   1222c:	ldr	r0, [sp, #8]
   12230:	cmp	r0, #0
   12234:	bge	12244 <main@@Base+0xf88>
   12238:	ldr	r0, [fp, #-4]
   1223c:	bl	10e80 <strlen@plt>
   12240:	str	r0, [sp, #8]
   12244:	b	12248 <main@@Base+0xf8c>
   12248:	ldr	r0, [sp, #4]
   1224c:	ldr	r1, [sp, #8]
   12250:	cmp	r0, r1
   12254:	bge	124f8 <main@@Base+0x123c>
   12258:	ldr	r0, [fp, #-4]
   1225c:	ldr	r1, [sp, #4]
   12260:	ldrb	r0, [r0, r1]
   12264:	sub	r0, r0, #7
   12268:	cmp	r0, #85	; 0x55
   1226c:	str	r0, [sp]
   12270:	bhi	1247c <main@@Base+0x11c0>
   12274:	add	r0, pc, #8
   12278:	ldr	r1, [sp]
   1227c:	ldr	r2, [r0, r1, lsl #2]
   12280:	add	pc, r0, r2
   12284:	andeq	r0, r0, r8, ror #2
   12288:	andeq	r0, r0, r8, ror r1
   1228c:			; <UNDEFINED> instruction: 0x000001b8
   12290:	muleq	r0, r8, r1
   12294:	andeq	r0, r0, r8, asr #3
   12298:	andeq	r0, r0, r8, lsl #3
   1229c:	andeq	r0, r0, r8, lsr #3
   122a0:	strdeq	r0, [r0], -r8
   122a4:	strdeq	r0, [r0], -r8
   122a8:	strdeq	r0, [r0], -r8
   122ac:	strdeq	r0, [r0], -r8
   122b0:	strdeq	r0, [r0], -r8
   122b4:	strdeq	r0, [r0], -r8
   122b8:	strdeq	r0, [r0], -r8
   122bc:	strdeq	r0, [r0], -r8
   122c0:	strdeq	r0, [r0], -r8
   122c4:	strdeq	r0, [r0], -r8
   122c8:	strdeq	r0, [r0], -r8
   122cc:	strdeq	r0, [r0], -r8
   122d0:	strdeq	r0, [r0], -r8
   122d4:	andeq	r0, r0, r8, asr r1
   122d8:	strdeq	r0, [r0], -r8
   122dc:	strdeq	r0, [r0], -r8
   122e0:	strdeq	r0, [r0], -r8
   122e4:	strdeq	r0, [r0], -r8
   122e8:	strdeq	r0, [r0], -r8
   122ec:	strdeq	r0, [r0], -r8
   122f0:	andeq	r0, r0, r8, ror #3
   122f4:	strdeq	r0, [r0], -r8
   122f8:	strdeq	r0, [r0], -r8
   122fc:	strdeq	r0, [r0], -r8
   12300:	strdeq	r0, [r0], -r8
   12304:	strdeq	r0, [r0], -r8
   12308:	strdeq	r0, [r0], -r8
   1230c:	strdeq	r0, [r0], -r8
   12310:	strdeq	r0, [r0], -r8
   12314:	strdeq	r0, [r0], -r8
   12318:	strdeq	r0, [r0], -r8
   1231c:	strdeq	r0, [r0], -r8
   12320:	strdeq	r0, [r0], -r8
   12324:	strdeq	r0, [r0], -r8
   12328:	strdeq	r0, [r0], -r8
   1232c:	strdeq	r0, [r0], -r8
   12330:	strdeq	r0, [r0], -r8
   12334:	strdeq	r0, [r0], -r8
   12338:	strdeq	r0, [r0], -r8
   1233c:	strdeq	r0, [r0], -r8
   12340:	strdeq	r0, [r0], -r8
   12344:	strdeq	r0, [r0], -r8
   12348:	strdeq	r0, [r0], -r8
   1234c:	strdeq	r0, [r0], -r8
   12350:	strdeq	r0, [r0], -r8
   12354:	strdeq	r0, [r0], -r8
   12358:	strdeq	r0, [r0], -r8
   1235c:	strdeq	r0, [r0], -r8
   12360:	strdeq	r0, [r0], -r8
   12364:	strdeq	r0, [r0], -r8
   12368:	strdeq	r0, [r0], -r8
   1236c:	strdeq	r0, [r0], -r8
   12370:	strdeq	r0, [r0], -r8
   12374:	strdeq	r0, [r0], -r8
   12378:	strdeq	r0, [r0], -r8
   1237c:	strdeq	r0, [r0], -r8
   12380:	strdeq	r0, [r0], -r8
   12384:	strdeq	r0, [r0], -r8
   12388:	strdeq	r0, [r0], -r8
   1238c:	strdeq	r0, [r0], -r8
   12390:	strdeq	r0, [r0], -r8
   12394:	strdeq	r0, [r0], -r8
   12398:	strdeq	r0, [r0], -r8
   1239c:	strdeq	r0, [r0], -r8
   123a0:	strdeq	r0, [r0], -r8
   123a4:	strdeq	r0, [r0], -r8
   123a8:	strdeq	r0, [r0], -r8
   123ac:	strdeq	r0, [r0], -r8
   123b0:	strdeq	r0, [r0], -r8
   123b4:	strdeq	r0, [r0], -r8
   123b8:	strdeq	r0, [r0], -r8
   123bc:	strdeq	r0, [r0], -r8
   123c0:	strdeq	r0, [r0], -r8
   123c4:	strdeq	r0, [r0], -r8
   123c8:	strdeq	r0, [r0], -r8
   123cc:	strdeq	r0, [r0], -r8
   123d0:	strdeq	r0, [r0], -r8
   123d4:	strdeq	r0, [r0], -r8
   123d8:	ldrdeq	r0, [r0], -r8
   123dc:	ldr	r0, [pc, #320]	; 12524 <main@@Base+0x1268>
   123e0:	add	r0, pc, r0
   123e4:	bl	10dd8 <printf@plt>
   123e8:	b	124e8 <main@@Base+0x122c>
   123ec:	ldr	r0, [pc, #300]	; 12520 <main@@Base+0x1264>
   123f0:	add	r0, pc, r0
   123f4:	bl	10dd8 <printf@plt>
   123f8:	b	124e8 <main@@Base+0x122c>
   123fc:	ldr	r0, [pc, #280]	; 1251c <main@@Base+0x1260>
   12400:	add	r0, pc, r0
   12404:	bl	10dd8 <printf@plt>
   12408:	b	124e8 <main@@Base+0x122c>
   1240c:	ldr	r0, [pc, #260]	; 12518 <main@@Base+0x125c>
   12410:	add	r0, pc, r0
   12414:	bl	10dd8 <printf@plt>
   12418:	b	124e8 <main@@Base+0x122c>
   1241c:	ldr	r0, [pc, #240]	; 12514 <main@@Base+0x1258>
   12420:	add	r0, pc, r0
   12424:	bl	10dd8 <printf@plt>
   12428:	b	124e8 <main@@Base+0x122c>
   1242c:	ldr	r0, [pc, #220]	; 12510 <main@@Base+0x1254>
   12430:	add	r0, pc, r0
   12434:	bl	10dd8 <printf@plt>
   12438:	b	124e8 <main@@Base+0x122c>
   1243c:	ldr	r0, [pc, #200]	; 1250c <main@@Base+0x1250>
   12440:	add	r0, pc, r0
   12444:	bl	10dd8 <printf@plt>
   12448:	b	124e8 <main@@Base+0x122c>
   1244c:	ldr	r0, [pc, #180]	; 12508 <main@@Base+0x124c>
   12450:	add	r0, pc, r0
   12454:	bl	10dd8 <printf@plt>
   12458:	b	124e8 <main@@Base+0x122c>
   1245c:	ldr	r0, [pc, #160]	; 12504 <main@@Base+0x1248>
   12460:	add	r0, pc, r0
   12464:	bl	10dd8 <printf@plt>
   12468:	b	124e8 <main@@Base+0x122c>
   1246c:	ldr	r0, [pc, #140]	; 12500 <main@@Base+0x1244>
   12470:	add	r0, pc, r0
   12474:	bl	10dd8 <printf@plt>
   12478:	b	124e8 <main@@Base+0x122c>
   1247c:	bl	10e68 <__ctype_b_loc@plt>
   12480:	ldr	r0, [r0]
   12484:	ldr	r1, [fp, #-4]
   12488:	ldr	r2, [sp, #4]
   1248c:	ldrb	r1, [r1, r2]
   12490:	mov	r2, r1
   12494:	add	r0, r0, r1, lsl #1
   12498:	ldrh	r0, [r0]
   1249c:	and	r0, r0, #16384	; 0x4000
   124a0:	cmp	r0, #0
   124a4:	bne	124c8 <main@@Base+0x120c>
   124a8:	ldr	r0, [pc, #120]	; 12528 <main@@Base+0x126c>
   124ac:	add	r0, pc, r0
   124b0:	ldr	r1, [fp, #-4]
   124b4:	ldr	r2, [sp, #4]
   124b8:	add	r1, r1, r2
   124bc:	ldrb	r1, [r1]
   124c0:	bl	10dd8 <printf@plt>
   124c4:	b	124e4 <main@@Base+0x1228>
   124c8:	ldr	r0, [pc, #92]	; 1252c <main@@Base+0x1270>
   124cc:	add	r0, pc, r0
   124d0:	ldr	r1, [fp, #-4]
   124d4:	ldr	r2, [sp, #4]
   124d8:	add	r1, r1, r2
   124dc:	ldrb	r1, [r1]
   124e0:	bl	10dd8 <printf@plt>
   124e4:	b	124e8 <main@@Base+0x122c>
   124e8:	ldr	r0, [sp, #4]
   124ec:	add	r0, r0, #1
   124f0:	str	r0, [sp, #4]
   124f4:	b	12248 <main@@Base+0xf8c>
   124f8:	mov	sp, fp
   124fc:	pop	{fp, pc}
   12500:	andeq	r0, r0, r0, ror #23
   12504:	andeq	r0, r0, sp, ror #23
   12508:	strdeq	r0, [r0], -sl
   1250c:	andeq	r0, r0, r7, lsl #24
   12510:	andeq	r0, r0, r4, lsl ip
   12514:	andeq	r0, r0, r1, lsr #24
   12518:	andeq	r0, r0, lr, lsr #24
   1251c:	andeq	r0, r0, fp, lsr ip
   12520:	andeq	r0, r0, r8, asr #24
   12524:	andeq	r0, r0, r5, asr ip
   12528:	andeq	r0, r0, r7, lsr #23
   1252c:	andeq	r0, r0, sp, lsl #23

00012530 <__libc_csu_init@@Base>:
   12530:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12534:	mov	r7, r0
   12538:	ldr	r6, [pc, #72]	; 12588 <__libc_csu_init@@Base+0x58>
   1253c:	ldr	r5, [pc, #72]	; 1258c <__libc_csu_init@@Base+0x5c>
   12540:	add	r6, pc, r6
   12544:	add	r5, pc, r5
   12548:	sub	r6, r6, r5
   1254c:	mov	r8, r1
   12550:	mov	r9, r2
   12554:	bl	10d94 <coda_match_filefilter@plt-0x20>
   12558:	asrs	r6, r6, #2
   1255c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12560:	mov	r4, #0
   12564:	add	r4, r4, #1
   12568:	ldr	r3, [r5], #4
   1256c:	mov	r2, r9
   12570:	mov	r1, r8
   12574:	mov	r0, r7
   12578:	blx	r3
   1257c:	cmp	r6, r4
   12580:	bne	12564 <__libc_csu_init@@Base+0x34>
   12584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12588:	andeq	r1, r1, ip, lsr #19
   1258c:	andeq	r1, r1, r4, lsr #19

00012590 <__libc_csu_fini@@Base>:
   12590:	bx	lr

Disassembly of section .fini:

00012594 <.fini>:
   12594:	push	{r3, lr}
   12598:	pop	{r3, pc}
