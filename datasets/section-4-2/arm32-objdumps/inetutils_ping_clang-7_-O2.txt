
../repos/inetutils/ping/ping:     file format elf32-littlearm


Disassembly of section .init:

0001130c <.init>:
   1130c:	push	{r3, lr}
   11310:	bl	116cc <__assert_fail@plt+0x4c>
   11314:	pop	{r3, pc}

Disassembly of section .plt:

00011318 <calloc@plt-0x14>:
   11318:	push	{lr}		; (str lr, [sp, #-4]!)
   1131c:	ldr	lr, [pc, #4]	; 11328 <calloc@plt-0x4>
   11320:	add	lr, pc, lr
   11324:	ldr	pc, [lr, #8]!
   11328:	ldrdeq	ip, [r1], -r8

0001132c <calloc@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #28, 20	; 0x1c000
   11334:	ldr	pc, [ip, #3288]!	; 0xcd8

00011338 <fputs_unlocked@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #28, 20	; 0x1c000
   11340:	ldr	pc, [ip, #3280]!	; 0xcd0

00011344 <strcmp@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #28, 20	; 0x1c000
   1134c:	ldr	pc, [ip, #3272]!	; 0xcc8

00011350 <strtol@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #28, 20	; 0x1c000
   11358:	ldr	pc, [ip, #3264]!	; 0xcc0

0001135c <setsockopt@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #28, 20	; 0x1c000
   11364:	ldr	pc, [ip, #3256]!	; 0xcb8

00011368 <printf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #28, 20	; 0x1c000
   11370:	ldr	pc, [ip, #3248]!	; 0xcb0

00011374 <getprotobyname@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #28, 20	; 0x1c000
   1137c:	ldr	pc, [ip, #3240]!	; 0xca8

00011380 <fflush@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #28, 20	; 0x1c000
   11388:	ldr	pc, [ip, #3232]!	; 0xca0

0001138c <getuid@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #28, 20	; 0x1c000
   11394:	ldr	pc, [ip, #3224]!	; 0xc98

00011398 <memmove@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #28, 20	; 0x1c000
   113a0:	ldr	pc, [ip, #3216]!	; 0xc90

000113a4 <strchrnul@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #28, 20	; 0x1c000
   113ac:	ldr	pc, [ip, #3208]!	; 0xc88

000113b0 <free@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #28, 20	; 0x1c000
   113b8:	ldr	pc, [ip, #3200]!	; 0xc80

000113bc <gai_strerror@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #28, 20	; 0x1c000
   113c4:	ldr	pc, [ip, #3192]!	; 0xc78

000113c8 <strndup@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #28, 20	; 0x1c000
   113d0:	ldr	pc, [ip, #3184]!	; 0xc70

000113d4 <memcpy@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #28, 20	; 0x1c000
   113dc:	ldr	pc, [ip, #3176]!	; 0xc68

000113e0 <signal@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #28, 20	; 0x1c000
   113e8:	ldr	pc, [ip, #3168]!	; 0xc60

000113ec <fwrite_unlocked@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #28, 20	; 0x1c000
   113f4:	ldr	pc, [ip, #3160]!	; 0xc58

000113f8 <memcmp@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #28, 20	; 0x1c000
   11400:	ldr	pc, [ip, #3152]!	; 0xc50

00011404 <inet_ntoa@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #28, 20	; 0x1c000
   1140c:	ldr	pc, [ip, #3144]!	; 0xc48

00011410 <select@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #28, 20	; 0x1c000
   11418:	ldr	pc, [ip, #3136]!	; 0xc40

0001141c <sleep@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #28, 20	; 0x1c000
   11424:	ldr	pc, [ip, #3128]!	; 0xc38

00011428 <gethostbyaddr@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #28, 20	; 0x1c000
   11430:	ldr	pc, [ip, #3120]!	; 0xc30

00011434 <recvfrom@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #28, 20	; 0x1c000
   1143c:	ldr	pc, [ip, #3112]!	; 0xc28

00011440 <strdup@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #28, 20	; 0x1c000
   11448:	ldr	pc, [ip, #3104]!	; 0xc20

0001144c <realloc@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #28, 20	; 0x1c000
   11454:	ldr	pc, [ip, #3096]!	; 0xc18

00011458 <strcasecmp@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #28, 20	; 0x1c000
   11460:	ldr	pc, [ip, #3088]!	; 0xc10

00011464 <funlockfile@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #28, 20	; 0x1c000
   1146c:	ldr	pc, [ip, #3080]!	; 0xc08

00011470 <fwrite@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #28, 20	; 0x1c000
   11478:	ldr	pc, [ip, #3072]!	; 0xc00

0001147c <gettimeofday@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #28, 20	; 0x1c000
   11484:	ldr	pc, [ip, #3064]!	; 0xbf8

00011488 <error@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #28, 20	; 0x1c000
   11490:	ldr	pc, [ip, #3056]!	; 0xbf0

00011494 <getenv@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #28, 20	; 0x1c000
   1149c:	ldr	pc, [ip, #3048]!	; 0xbe8

000114a0 <puts@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #28, 20	; 0x1c000
   114a8:	ldr	pc, [ip, #3040]!	; 0xbe0

000114ac <malloc@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #28, 20	; 0x1c000
   114b4:	ldr	pc, [ip, #3032]!	; 0xbd8

000114b8 <__libc_start_main@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #28, 20	; 0x1c000
   114c0:	ldr	pc, [ip, #3024]!	; 0xbd0

000114c4 <strerror@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #28, 20	; 0x1c000
   114cc:	ldr	pc, [ip, #3016]!	; 0xbc8

000114d0 <__ctype_tolower_loc@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #28, 20	; 0x1c000
   114d8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114dc <__gmon_start__@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #28, 20	; 0x1c000
   114e4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114e8 <__ctype_b_loc@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #28, 20	; 0x1c000
   114f0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114f4 <getpid@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #28, 20	; 0x1c000
   114fc:	ldr	pc, [ip, #2984]!	; 0xba8

00011500 <exit@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #28, 20	; 0x1c000
   11508:	ldr	pc, [ip, #2976]!	; 0xba0

0001150c <strtoul@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #28, 20	; 0x1c000
   11514:	ldr	pc, [ip, #2968]!	; 0xb98

00011518 <strlen@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #28, 20	; 0x1c000
   11520:	ldr	pc, [ip, #2960]!	; 0xb90

00011524 <strchr@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #28, 20	; 0x1c000
   1152c:	ldr	pc, [ip, #2952]!	; 0xb88

00011530 <fprintf@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #28, 20	; 0x1c000
   11538:	ldr	pc, [ip, #2944]!	; 0xb80

0001153c <__errno_location@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #28, 20	; 0x1c000
   11544:	ldr	pc, [ip, #2936]!	; 0xb78

00011548 <snprintf@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #28, 20	; 0x1c000
   11550:	ldr	pc, [ip, #2928]!	; 0xb70

00011554 <strerror_r@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #28, 20	; 0x1c000
   1155c:	ldr	pc, [ip, #2920]!	; 0xb68

00011560 <setvbuf@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #28, 20	; 0x1c000
   11568:	ldr	pc, [ip, #2912]!	; 0xb60

0001156c <memset@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #28, 20	; 0x1c000
   11574:	ldr	pc, [ip, #2904]!	; 0xb58

00011578 <putchar@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #28, 20	; 0x1c000
   11580:	ldr	pc, [ip, #2896]!	; 0xb50

00011584 <strtod@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #28, 20	; 0x1c000
   1158c:	ldr	pc, [ip, #2888]!	; 0xb48

00011590 <memchr@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #28, 20	; 0x1c000
   11598:	ldr	pc, [ip, #2880]!	; 0xb40

0001159c <sendto@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #28, 20	; 0x1c000
   115a4:	ldr	pc, [ip, #2872]!	; 0xb38

000115a8 <__overflow@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #28, 20	; 0x1c000
   115b0:	ldr	pc, [ip, #2864]!	; 0xb30

000115b4 <setlocale@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #28, 20	; 0x1c000
   115bc:	ldr	pc, [ip, #2856]!	; 0xb28

000115c0 <getnameinfo@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #28, 20	; 0x1c000
   115c8:	ldr	pc, [ip, #2848]!	; 0xb20

000115cc <strrchr@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #28, 20	; 0x1c000
   115d4:	ldr	pc, [ip, #2840]!	; 0xb18

000115d8 <vfprintf@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #28, 20	; 0x1c000
   115e0:	ldr	pc, [ip, #2832]!	; 0xb10

000115e4 <fputc@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #28, 20	; 0x1c000
   115ec:	ldr	pc, [ip, #2824]!	; 0xb08

000115f0 <setuid@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #28, 20	; 0x1c000
   115f8:	ldr	pc, [ip, #2816]!	; 0xb00

000115fc <sscanf@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #28, 20	; 0x1c000
   11604:	ldr	pc, [ip, #2808]!	; 0xaf8

00011608 <putc@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #28, 20	; 0x1c000
   11610:	ldr	pc, [ip, #2800]!	; 0xaf0

00011614 <flockfile@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #28, 20	; 0x1c000
   1161c:	ldr	pc, [ip, #2792]!	; 0xae8

00011620 <vsnprintf@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #28, 20	; 0x1c000
   11628:	ldr	pc, [ip, #2784]!	; 0xae0

0001162c <qsort@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #28, 20	; 0x1c000
   11634:	ldr	pc, [ip, #2776]!	; 0xad8

00011638 <freeaddrinfo@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #28, 20	; 0x1c000
   11640:	ldr	pc, [ip, #2768]!	; 0xad0

00011644 <getaddrinfo@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #28, 20	; 0x1c000
   1164c:	ldr	pc, [ip, #2760]!	; 0xac8

00011650 <socket@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #28, 20	; 0x1c000
   11658:	ldr	pc, [ip, #2752]!	; 0xac0

0001165c <strncmp@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #28, 20	; 0x1c000
   11664:	ldr	pc, [ip, #2744]!	; 0xab8

00011668 <abort@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #28, 20	; 0x1c000
   11670:	ldr	pc, [ip, #2736]!	; 0xab0

00011674 <close@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #28, 20	; 0x1c000
   1167c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011680 <__assert_fail@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #28, 20	; 0x1c000
   11688:	ldr	pc, [ip, #2720]!	; 0xaa0

Disassembly of section .text:

00011690 <argp_help@@Base-0x37e4>:
   11690:	mov	fp, #0
   11694:	mov	lr, #0
   11698:	pop	{r1}		; (ldr r1, [sp], #4)
   1169c:	mov	r2, sp
   116a0:	push	{r2}		; (str r2, [sp, #-4]!)
   116a4:	push	{r0}		; (str r0, [sp, #-4]!)
   116a8:	ldr	ip, [pc, #16]	; 116c0 <__assert_fail@plt+0x40>
   116ac:	push	{ip}		; (str ip, [sp, #-4]!)
   116b0:	ldr	r0, [pc, #12]	; 116c4 <__assert_fail@plt+0x44>
   116b4:	ldr	r3, [pc, #12]	; 116c8 <__assert_fail@plt+0x48>
   116b8:	bl	114b8 <__libc_start_main@plt>
   116bc:	bl	11668 <abort@plt>
   116c0:	andeq	fp, r1, r8, asr #24
   116c4:	andeq	r1, r1, r0, lsl #15
   116c8:	andeq	fp, r1, r8, ror #23
   116cc:	ldr	r3, [pc, #20]	; 116e8 <__assert_fail@plt+0x68>
   116d0:	ldr	r2, [pc, #20]	; 116ec <__assert_fail@plt+0x6c>
   116d4:	add	r3, pc, r3
   116d8:	ldr	r2, [r3, r2]
   116dc:	cmp	r2, #0
   116e0:	bxeq	lr
   116e4:	b	114dc <__gmon_start__@plt>
   116e8:	andeq	ip, r1, r4, lsr #18
   116ec:	andeq	r0, r0, ip, lsr #2
   116f0:	ldr	r0, [pc, #24]	; 11710 <__assert_fail@plt+0x90>
   116f4:	ldr	r3, [pc, #24]	; 11714 <__assert_fail@plt+0x94>
   116f8:	cmp	r3, r0
   116fc:	bxeq	lr
   11700:	ldr	r3, [pc, #16]	; 11718 <__assert_fail@plt+0x98>
   11704:	cmp	r3, #0
   11708:	bxeq	lr
   1170c:	bx	r3
   11710:	andeq	lr, r2, ip, lsl r6
   11714:	andeq	lr, r2, ip, lsl r6
   11718:	andeq	r0, r0, r0
   1171c:	ldr	r0, [pc, #36]	; 11748 <__assert_fail@plt+0xc8>
   11720:	ldr	r1, [pc, #36]	; 1174c <__assert_fail@plt+0xcc>
   11724:	sub	r1, r1, r0
   11728:	asr	r1, r1, #2
   1172c:	add	r1, r1, r1, lsr #31
   11730:	asrs	r1, r1, #1
   11734:	bxeq	lr
   11738:	ldr	r3, [pc, #16]	; 11750 <__assert_fail@plt+0xd0>
   1173c:	cmp	r3, #0
   11740:	bxeq	lr
   11744:	bx	r3
   11748:	andeq	lr, r2, ip, lsl r6
   1174c:	andeq	lr, r2, ip, lsl r6
   11750:	andeq	r0, r0, r0
   11754:	push	{r4, lr}
   11758:	ldr	r4, [pc, #24]	; 11778 <__assert_fail@plt+0xf8>
   1175c:	ldrb	r3, [r4]
   11760:	cmp	r3, #0
   11764:	popne	{r4, pc}
   11768:	bl	116f0 <__assert_fail@plt+0x70>
   1176c:	mov	r3, #1
   11770:	strb	r3, [r4]
   11774:	pop	{r4, pc}
   11778:	andeq	lr, r2, r0, lsr r6
   1177c:	b	1171c <__assert_fail@plt+0x9c>
   11780:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11784:	add	fp, sp, #24
   11788:	sub	sp, sp, #16
   1178c:	mov	r4, #1
   11790:	mov	r8, r0
   11794:	mov	r7, r1
   11798:	str	r4, [sp, #8]
   1179c:	ldr	r0, [r1]
   117a0:	bl	19738 <argp_parse@@Base+0x13c0>
   117a4:	movw	r1, #54237	; 0xd3dd
   117a8:	mov	r0, #6
   117ac:	movt	r1, #1
   117b0:	bl	115b4 <setlocale@plt>
   117b4:	bl	1138c <getuid@plt>
   117b8:	cmp	r0, #0
   117bc:	movw	r1, #48369	; 0xbcf1
   117c0:	movweq	r0, #58932	; 0xe634
   117c4:	movt	r1, #1
   117c8:	movteq	r0, #2
   117cc:	strbeq	r4, [r0]
   117d0:	movw	r0, #59104	; 0xe6e0
   117d4:	movt	r0, #2
   117d8:	str	r1, [r0]
   117dc:	movw	r0, #48393	; 0xbd09
   117e0:	movw	r1, #57680	; 0xe150
   117e4:	movt	r0, #1
   117e8:	movt	r1, #2
   117ec:	bl	19550 <argp_parse@@Base+0x11d8>
   117f0:	mov	r0, #0
   117f4:	add	r1, sp, #12
   117f8:	mov	r2, r7
   117fc:	mov	r3, #0
   11800:	str	r0, [sp, #4]
   11804:	movw	r0, #57688	; 0xe158
   11808:	str	r1, [sp]
   1180c:	mov	r1, r8
   11810:	movt	r0, #2
   11814:	bl	18378 <argp_parse@@Base>
   11818:	bl	114f4 <getpid@plt>
   1181c:	mov	r1, r0
   11820:	mov	r0, #8
   11824:	bl	14508 <__assert_fail@plt+0x2e88>
   11828:	movw	r9, #59092	; 0xe6d4
   1182c:	cmp	r0, #0
   11830:	movt	r9, #2
   11834:	str	r0, [r9]
   11838:	beq	11a38 <__assert_fail@plt+0x3b8>
   1183c:	add	r2, sp, #8
   11840:	mov	r1, #6
   11844:	mov	r3, #4
   11848:	bl	12e60 <__assert_fail@plt+0x17e0>
   1184c:	bl	1138c <getuid@plt>
   11850:	bl	115f0 <setuid@plt>
   11854:	cmp	r0, #0
   11858:	beq	11874 <__assert_fail@plt+0x1f4>
   1185c:	bl	1153c <__errno_location@plt>
   11860:	ldr	r1, [r0]
   11864:	movw	r2, #48398	; 0xbd0e
   11868:	mov	r0, #1
   1186c:	movt	r2, #1
   11870:	bl	11488 <error@plt>
   11874:	movw	r0, #58924	; 0xe62c
   11878:	mov	r1, #0
   1187c:	mov	r2, #1
   11880:	mov	r3, #0
   11884:	movt	r0, #2
   11888:	ldr	r0, [r0]
   1188c:	bl	11560 <setvbuf@plt>
   11890:	movw	r0, #58936	; 0xe638
   11894:	ldr	r5, [sp, #12]
   11898:	movt	r0, #2
   1189c:	ldr	r1, [r0]
   118a0:	cmp	r1, #0
   118a4:	beq	118b0 <__assert_fail@plt+0x230>
   118a8:	ldr	r0, [r9]
   118ac:	bl	12e58 <__assert_fail@plt+0x17d8>
   118b0:	movw	r0, #59088	; 0xe6d0
   118b4:	movt	r0, #2
   118b8:	ldr	r1, [r0]
   118bc:	cmp	r1, #0
   118c0:	beq	118d4 <__assert_fail@plt+0x254>
   118c4:	ldr	r0, [r9]
   118c8:	add	r2, sp, #8
   118cc:	mov	r3, #4
   118d0:	bl	12e60 <__assert_fail@plt+0x17e0>
   118d4:	movw	r0, #59084	; 0xe6cc
   118d8:	movt	r0, #2
   118dc:	ldrb	r0, [r0]
   118e0:	tst	r0, #2
   118e4:	beq	118fc <__assert_fail@plt+0x27c>
   118e8:	movw	r0, #59100	; 0xe6dc
   118ec:	movt	r0, #2
   118f0:	ldr	r1, [r0]
   118f4:	ldr	r0, [r9]
   118f8:	bl	12e94 <__assert_fail@plt+0x1814>
   118fc:	movw	r0, #58944	; 0xe640
   11900:	movt	r0, #2
   11904:	ldr	r0, [r0]
   11908:	cmp	r0, #1
   1190c:	blt	11954 <__assert_fail@plt+0x2d4>
   11910:	ldr	r0, [r9]
   11914:	movw	r3, #58944	; 0xe640
   11918:	mov	r1, #4
   1191c:	mov	r2, #2
   11920:	movt	r3, #2
   11924:	ldr	r0, [r0]
   11928:	str	r1, [sp]
   1192c:	mov	r1, #0
   11930:	bl	1135c <setsockopt@plt>
   11934:	cmn	r0, #1
   11938:	bgt	11954 <__assert_fail@plt+0x2d4>
   1193c:	bl	1153c <__errno_location@plt>
   11940:	ldr	r1, [r0]
   11944:	movw	r2, #48405	; 0xbd15
   11948:	mov	r0, #0
   1194c:	movt	r2, #1
   11950:	bl	11488 <error@plt>
   11954:	movw	r0, #57664	; 0xe140
   11958:	sub	r4, r8, r5
   1195c:	movt	r0, #2
   11960:	ldr	r0, [r0]
   11964:	cmp	r0, #0
   11968:	blt	119b0 <__assert_fail@plt+0x330>
   1196c:	ldr	r0, [r9]
   11970:	movw	r3, #57664	; 0xe140
   11974:	mov	r1, #4
   11978:	mov	r2, #1
   1197c:	movt	r3, #2
   11980:	ldr	r0, [r0]
   11984:	str	r1, [sp]
   11988:	mov	r1, #0
   1198c:	bl	1135c <setsockopt@plt>
   11990:	cmn	r0, #1
   11994:	bgt	119b0 <__assert_fail@plt+0x330>
   11998:	bl	1153c <__errno_location@plt>
   1199c:	ldr	r1, [r0]
   119a0:	movw	r2, #48424	; 0xbd28
   119a4:	mov	r0, #0
   119a8:	movt	r2, #1
   119ac:	bl	11488 <error@plt>
   119b0:	movw	r0, #57656	; 0xe138
   119b4:	movt	r0, #2
   119b8:	ldr	r1, [r0]
   119bc:	movw	r0, #59076	; 0xe6c4
   119c0:	movt	r0, #2
   119c4:	ldr	r0, [r0]
   119c8:	bl	12ac4 <__assert_fail@plt+0x1444>
   119cc:	cmp	r4, #0
   119d0:	beq	11a10 <__assert_fail@plt+0x390>
   119d4:	sub	r6, r5, r8
   119d8:	movw	r8, #57676	; 0xe14c
   119dc:	add	r7, r7, r5, lsl #2
   119e0:	mov	r4, #0
   119e4:	movt	r8, #2
   119e8:	ldr	r0, [r7], #4
   119ec:	ldr	r1, [r8]
   119f0:	blx	r1
   119f4:	mov	r5, r0
   119f8:	ldr	r0, [r9]
   119fc:	bl	146c4 <__assert_fail@plt+0x3044>
   11a00:	orr	r4, r5, r4
   11a04:	adds	r6, r6, #1
   11a08:	bne	119e8 <__assert_fail@plt+0x368>
   11a0c:	b	11a14 <__assert_fail@plt+0x394>
   11a10:	mov	r4, #0
   11a14:	ldr	r0, [r9]
   11a18:	bl	19648 <argp_parse@@Base+0x12d0>
   11a1c:	movw	r0, #59080	; 0xe6c8
   11a20:	movt	r0, #2
   11a24:	ldr	r0, [r0]
   11a28:	bl	19648 <argp_parse@@Base+0x12d0>
   11a2c:	mov	r0, r4
   11a30:	sub	sp, fp, #24
   11a34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11a38:	mov	r0, #1
   11a3c:	bl	11500 <exit@plt>
   11a40:	push	{r4, r5, fp, lr}
   11a44:	add	fp, sp, #8
   11a48:	movw	r1, #48443	; 0xbd3b
   11a4c:	mov	r4, r0
   11a50:	movt	r1, #1
   11a54:	bl	11458 <strcasecmp@plt>
   11a58:	cmp	r0, #0
   11a5c:	beq	11ad4 <__assert_fail@plt+0x454>
   11a60:	movw	r1, #49582	; 0xc1ae
   11a64:	mov	r0, r4
   11a68:	movt	r1, #1
   11a6c:	bl	11458 <strcasecmp@plt>
   11a70:	cmp	r0, #0
   11a74:	beq	11ae4 <__assert_fail@plt+0x464>
   11a78:	movw	r1, #48768	; 0xbe80
   11a7c:	mov	r0, r4
   11a80:	movt	r1, #1
   11a84:	bl	11458 <strcasecmp@plt>
   11a88:	movw	r5, #16812	; 0x41ac
   11a8c:	cmp	r0, #0
   11a90:	movt	r5, #1
   11a94:	beq	11acc <__assert_fail@plt+0x44c>
   11a98:	movw	r1, #48448	; 0xbd40
   11a9c:	mov	r0, r4
   11aa0:	movt	r1, #1
   11aa4:	bl	11458 <strcasecmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	beq	11acc <__assert_fail@plt+0x44c>
   11ab0:	movw	r2, #48453	; 0xbd45
   11ab4:	mov	r0, #1
   11ab8:	mov	r1, #0
   11abc:	mov	r3, r4
   11ac0:	mov	r5, #0
   11ac4:	movt	r2, #1
   11ac8:	bl	11488 <error@plt>
   11acc:	mov	r0, r5
   11ad0:	pop	{r4, r5, fp, pc}
   11ad4:	movw	r5, #12664	; 0x3178
   11ad8:	movt	r5, #1
   11adc:	mov	r0, r5
   11ae0:	pop	{r4, r5, fp, pc}
   11ae4:	movw	r5, #17168	; 0x4310
   11ae8:	movt	r5, #1
   11aec:	mov	r0, r5
   11af0:	pop	{r4, r5, fp, pc}
   11af4:	movw	r0, #58948	; 0xe644
   11af8:	mov	r1, #1
   11afc:	movt	r0, #2
   11b00:	str	r1, [r0]
   11b04:	bx	lr
   11b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b0c:	add	fp, sp, #28
   11b10:	sub	sp, sp, #4
   11b14:	vpush	{d8-d9}
   11b18:	sub	sp, sp, #216	; 0xd8
   11b1c:	mov	r4, r1
   11b20:	movw	r1, #6900	; 0x1af4
   11b24:	mov	r8, r0
   11b28:	mov	r0, #2
   11b2c:	movt	r1, #1
   11b30:	bl	113e0 <signal@plt>
   11b34:	movw	r7, #58940	; 0xe63c
   11b38:	ldr	sl, [r8]
   11b3c:	mov	r6, #0
   11b40:	movt	r7, #2
   11b44:	str	r6, [sp, #60]	; 0x3c
   11b48:	str	r6, [sp, #56]	; 0x38
   11b4c:	str	r6, [sp, #76]	; 0x4c
   11b50:	str	r6, [sp, #72]	; 0x48
   11b54:	ldr	r0, [r7]
   11b58:	cmp	r0, #0
   11b5c:	beq	11b78 <__assert_fail@plt+0x4f8>
   11b60:	mov	r0, r8
   11b64:	bl	11f44 <__assert_fail@plt+0x8c4>
   11b68:	ldr	r0, [r7]
   11b6c:	add	r6, r6, #1
   11b70:	cmp	r6, r0
   11b74:	bcc	11b60 <__assert_fail@plt+0x4e0>
   11b78:	movw	r0, #59084	; 0xe6cc
   11b7c:	str	r4, [sp, #12]
   11b80:	movt	r0, #2
   11b84:	ldrb	r0, [r0]
   11b88:	tst	r0, #1
   11b8c:	bne	11bb4 <__assert_fail@plt+0x534>
   11b90:	ldr	r0, [r8, #20]
   11b94:	movw	r1, #19923	; 0x4dd3
   11b98:	movt	r1, #4194	; 0x1062
   11b9c:	umull	r1, r2, r0, r1
   11ba0:	lsr	r4, r2, #6
   11ba4:	mov	r1, #1000	; 0x3e8
   11ba8:	mls	r0, r4, r1, r0
   11bac:	mul	r5, r0, r1
   11bb0:	b	11bbc <__assert_fail@plt+0x53c>
   11bb4:	movw	r5, #10000	; 0x2710
   11bb8:	mov	r4, #0
   11bbc:	add	r0, sp, #64	; 0x40
   11bc0:	mov	r1, #0
   11bc4:	bl	1147c <gettimeofday@plt>
   11bc8:	mov	r0, r8
   11bcc:	bl	11f44 <__assert_fail@plt+0x8c4>
   11bd0:	movw	r7, #58948	; 0xe644
   11bd4:	movt	r7, #2
   11bd8:	ldr	r0, [r7]
   11bdc:	cmp	r0, #0
   11be0:	bne	11f18 <__assert_fail@plt+0x898>
   11be4:	movw	r9, #16960	; 0x4240
   11be8:	add	r0, sl, #1
   11bec:	add	sl, sp, #80	; 0x50
   11bf0:	vmov.i32	q4, #0	; 0x00000000
   11bf4:	movt	r9, #15
   11bf8:	str	r0, [sp, #48]	; 0x30
   11bfc:	add	r0, r5, r9
   11c00:	str	r0, [sp, #20]
   11c04:	sub	r0, r9, #1
   11c08:	str	r0, [sp, #52]	; 0x34
   11c0c:	sub	r0, r0, r5
   11c10:	str	r0, [sp, #16]
   11c14:	add	r0, r8, #12
   11c18:	str	r0, [sp, #28]
   11c1c:	add	r0, sl, #96	; 0x60
   11c20:	str	r0, [sp, #44]	; 0x2c
   11c24:	add	r0, sl, #80	; 0x50
   11c28:	str	r0, [sp, #40]	; 0x28
   11c2c:	add	r0, sl, #64	; 0x40
   11c30:	str	r0, [sp, #36]	; 0x24
   11c34:	mov	r0, #0
   11c38:	str	r0, [sp, #32]
   11c3c:	mov	r0, #0
   11c40:	str	r0, [sp, #8]
   11c44:	mov	r0, #0
   11c48:	str	r0, [sp, #24]
   11c4c:	mov	r0, sl
   11c50:	mov	r1, #112	; 0x70
   11c54:	mov	r3, #1
   11c58:	vst1.64	{d8-d9}, [r0], r1
   11c5c:	vst1.64	{d8-d9}, [r0]
   11c60:	ldr	r0, [sp, #44]	; 0x2c
   11c64:	vst1.64	{d8-d9}, [r0]
   11c68:	ldr	r0, [sp, #40]	; 0x28
   11c6c:	vst1.64	{d8-d9}, [r0]
   11c70:	ldr	r0, [sp, #36]	; 0x24
   11c74:	vst1.64	{d8-d9}, [r0]
   11c78:	add	r0, sl, #48	; 0x30
   11c7c:	vst1.64	{d8-d9}, [r0]
   11c80:	add	r0, sl, #32
   11c84:	vst1.64	{d8-d9}, [r0]
   11c88:	add	r0, sl, #16
   11c8c:	vst1.64	{d8-d9}, [r0]
   11c90:	ldr	r0, [r8]
   11c94:	asr	r1, r0, #31
   11c98:	add	r1, r0, r1, lsr #27
   11c9c:	and	r0, r0, #31
   11ca0:	asr	r1, r1, #5
   11ca4:	ldr	r2, [sl, r1, lsl #2]
   11ca8:	orr	r0, r2, r3, lsl r0
   11cac:	str	r0, [sl, r1, lsl #2]
   11cb0:	add	r0, sp, #56	; 0x38
   11cb4:	mov	r1, #0
   11cb8:	bl	1147c <gettimeofday@plt>
   11cbc:	ldr	r0, [sp, #64]	; 0x40
   11cc0:	ldr	r2, [sp, #68]	; 0x44
   11cc4:	ldr	r1, [sp, #56]	; 0x38
   11cc8:	ldr	r3, [sp, #60]	; 0x3c
   11ccc:	add	r0, r0, r4
   11cd0:	sub	r0, r0, r1
   11cd4:	add	r1, r2, r5
   11cd8:	sub	r1, r1, r3
   11cdc:	str	r0, [sp, #72]	; 0x48
   11ce0:	cmn	r1, #1
   11ce4:	str	r1, [sp, #76]	; 0x4c
   11ce8:	bgt	11d50 <__assert_fail@plt+0x6d0>
   11cec:	mov	lr, r4
   11cf0:	mov	r4, r7
   11cf4:	ldr	r7, [sp, #16]
   11cf8:	movw	r6, #48576	; 0xbdc0
   11cfc:	mov	ip, r5
   11d00:	movt	r6, #65520	; 0xfff0
   11d04:	cmp	r1, r6
   11d08:	movle	r1, r6
   11d0c:	movw	r6, #56963	; 0xde83
   11d10:	add	r7, r7, r3
   11d14:	movt	r6, #17179	; 0x431b
   11d18:	add	r1, r7, r1
   11d1c:	sub	r1, r1, r2
   11d20:	umull	r1, r7, r1, r6
   11d24:	mvn	r1, r7, lsr #18
   11d28:	add	r0, r0, r1
   11d2c:	lsr	r1, r7, #18
   11d30:	mov	r7, r4
   11d34:	ldr	r4, [sp, #20]
   11d38:	str	r0, [sp, #72]	; 0x48
   11d3c:	add	r2, r4, r2
   11d40:	mov	r4, lr
   11d44:	mla	r1, r1, r9, r2
   11d48:	sub	r1, r1, r3
   11d4c:	str	r1, [sp, #76]	; 0x4c
   11d50:	ldr	r2, [sp, #52]	; 0x34
   11d54:	cmp	r1, r2
   11d58:	ble	11da8 <__assert_fail@plt+0x728>
   11d5c:	movw	r6, #31616	; 0x7b80
   11d60:	mvn	r3, r1
   11d64:	add	r2, r1, r9
   11d68:	movt	r6, #65505	; 0xffe1
   11d6c:	cmp	r3, r6
   11d70:	movle	r3, r6
   11d74:	add	r2, r2, r3
   11d78:	movw	r3, #56963	; 0xde83
   11d7c:	movt	r3, #17179	; 0x431b
   11d80:	umull	r2, r3, r2, r3
   11d84:	add	r0, r0, r3, lsr #18
   11d88:	lsr	r2, r3, #18
   11d8c:	movw	r3, #48576	; 0xbdc0
   11d90:	movt	r3, #65520	; 0xfff0
   11d94:	add	r0, r0, #1
   11d98:	add	r1, r1, r3
   11d9c:	str	r0, [sp, #72]	; 0x48
   11da0:	mla	r1, r2, r3, r1
   11da4:	str	r1, [sp, #76]	; 0x4c
   11da8:	cmn	r0, #1
   11dac:	mov	r1, sl
   11db0:	mov	r2, #0
   11db4:	mov	r3, #0
   11db8:	movle	r0, #0
   11dbc:	strle	r0, [sp, #72]	; 0x48
   11dc0:	strle	r0, [sp, #76]	; 0x4c
   11dc4:	add	r0, sp, #72	; 0x48
   11dc8:	str	r0, [sp]
   11dcc:	ldr	r0, [sp, #48]	; 0x30
   11dd0:	bl	11410 <select@plt>
   11dd4:	cmn	r0, #1
   11dd8:	ble	11e50 <__assert_fail@plt+0x7d0>
   11ddc:	cmp	r0, #1
   11de0:	bne	11e74 <__assert_fail@plt+0x7f4>
   11de4:	mov	r0, r8
   11de8:	bl	14850 <__assert_fail@plt+0x31d0>
   11dec:	cmp	r0, #0
   11df0:	ldr	r0, [sp, #32]
   11df4:	addeq	r0, r0, #1
   11df8:	str	r0, [sp, #32]
   11dfc:	ldr	r0, [sp, #24]
   11e00:	cmp	r0, #0
   11e04:	bne	11e1c <__assert_fail@plt+0x79c>
   11e08:	add	r6, sp, #56	; 0x38
   11e0c:	mov	r1, #0
   11e10:	mov	r0, r6
   11e14:	bl	1147c <gettimeofday@plt>
   11e18:	str	r6, [sp, #24]
   11e1c:	movw	r0, #57668	; 0xe144
   11e20:	movt	r0, #2
   11e24:	ldr	r1, [r0]
   11e28:	ldr	r0, [sp, #28]
   11e2c:	bl	12edc <__assert_fail@plt+0x185c>
   11e30:	cmp	r0, #0
   11e34:	bne	11f18 <__assert_fail@plt+0x898>
   11e38:	ldr	r0, [r8, #8]
   11e3c:	ldr	r1, [sp, #32]
   11e40:	sub	r0, r0, #1
   11e44:	cmp	r0, r1
   11e48:	bcs	11f0c <__assert_fail@plt+0x88c>
   11e4c:	b	11f18 <__assert_fail@plt+0x898>
   11e50:	bl	1153c <__errno_location@plt>
   11e54:	ldr	r1, [r0]
   11e58:	cmp	r1, #4
   11e5c:	beq	11f0c <__assert_fail@plt+0x88c>
   11e60:	movw	r2, #48481	; 0xbd61
   11e64:	mov	r0, #1
   11e68:	movt	r2, #1
   11e6c:	bl	11488 <error@plt>
   11e70:	b	11f0c <__assert_fail@plt+0x88c>
   11e74:	ldr	r0, [r8, #8]
   11e78:	cmp	r0, #0
   11e7c:	beq	11e8c <__assert_fail@plt+0x80c>
   11e80:	ldr	r1, [r8, #112]	; 0x70
   11e84:	cmp	r1, r0
   11e88:	bcs	11ee0 <__assert_fail@plt+0x860>
   11e8c:	mov	r0, r8
   11e90:	bl	11f44 <__assert_fail@plt+0x8c4>
   11e94:	movw	r0, #59084	; 0xe6cc
   11e98:	movt	r0, #2
   11e9c:	ldr	r0, [r0]
   11ea0:	and	r0, r0, #9
   11ea4:	cmp	r0, #1
   11ea8:	bne	11ec0 <__assert_fail@plt+0x840>
   11eac:	movw	r0, #58924	; 0xe62c
   11eb0:	movt	r0, #2
   11eb4:	ldr	r1, [r0]
   11eb8:	mov	r0, #46	; 0x2e
   11ebc:	bl	11608 <putc@plt>
   11ec0:	movw	r0, #57668	; 0xe144
   11ec4:	movt	r0, #2
   11ec8:	ldr	r1, [r0]
   11ecc:	ldr	r0, [sp, #28]
   11ed0:	bl	12edc <__assert_fail@plt+0x185c>
   11ed4:	cmp	r0, #0
   11ed8:	beq	11f00 <__assert_fail@plt+0x880>
   11edc:	b	11f18 <__assert_fail@plt+0x898>
   11ee0:	ldr	r0, [sp, #8]
   11ee4:	cmp	r0, #0
   11ee8:	bne	11f18 <__assert_fail@plt+0x898>
   11eec:	movw	r0, #57672	; 0xe148
   11ef0:	movt	r0, #2
   11ef4:	ldr	r4, [r0]
   11ef8:	mov	r0, #1
   11efc:	str	r0, [sp, #8]
   11f00:	add	r0, sp, #64	; 0x40
   11f04:	mov	r1, #0
   11f08:	bl	1147c <gettimeofday@plt>
   11f0c:	ldr	r0, [r7]
   11f10:	cmp	r0, #0
   11f14:	beq	11c4c <__assert_fail@plt+0x5cc>
   11f18:	mov	r0, r8
   11f1c:	bl	12e9c <__assert_fail@plt+0x181c>
   11f20:	ldr	r1, [sp, #12]
   11f24:	mov	r0, #0
   11f28:	cmp	r1, #0
   11f2c:	beq	11f34 <__assert_fail@plt+0x8b4>
   11f30:	blx	r1
   11f34:	sub	sp, fp, #48	; 0x30
   11f38:	vpop	{d8-d9}
   11f3c:	add	sp, sp, #4
   11f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f44:	push	{r4, r5, r6, r7, fp, lr}
   11f48:	add	fp, sp, #16
   11f4c:	sub	sp, sp, #16
   11f50:	movw	r7, #57660	; 0xe13c
   11f54:	mov	r4, r0
   11f58:	mov	r5, #0
   11f5c:	movt	r7, #2
   11f60:	ldr	r0, [r7]
   11f64:	cmp	r0, #8
   11f68:	bcc	11f9c <__assert_fail@plt+0x91c>
   11f6c:	add	r6, sp, #8
   11f70:	mov	r1, #0
   11f74:	mov	r5, #0
   11f78:	mov	r0, r6
   11f7c:	bl	1147c <gettimeofday@plt>
   11f80:	mov	r0, r4
   11f84:	mov	r1, r6
   11f88:	mov	r2, #0
   11f8c:	mov	r3, #8
   11f90:	str	r5, [sp]
   11f94:	mov	r5, #8
   11f98:	bl	12da4 <__assert_fail@plt+0x1724>
   11f9c:	movw	r0, #59080	; 0xe6c8
   11fa0:	movt	r0, #2
   11fa4:	ldr	r1, [r0]
   11fa8:	cmp	r1, #0
   11fac:	beq	11fd0 <__assert_fail@plt+0x950>
   11fb0:	ldr	r0, [r7]
   11fb4:	mov	r2, #0
   11fb8:	str	r2, [sp]
   11fbc:	mov	r2, r5
   11fc0:	subs	r3, r0, r5
   11fc4:	movls	r3, r0
   11fc8:	mov	r0, r4
   11fcc:	bl	12da4 <__assert_fail@plt+0x1724>
   11fd0:	mov	r0, r4
   11fd4:	bl	146e0 <__assert_fail@plt+0x3060>
   11fd8:	cmn	r0, #1
   11fdc:	ble	11fe8 <__assert_fail@plt+0x968>
   11fe0:	sub	sp, fp, #16
   11fe4:	pop	{r4, r5, r6, r7, fp, pc}
   11fe8:	bl	1153c <__errno_location@plt>
   11fec:	ldr	r1, [r0]
   11ff0:	movw	r2, #49842	; 0xc2b2
   11ff4:	mov	r0, #1
   11ff8:	movt	r2, #1
   11ffc:	bl	11488 <error@plt>
   12000:	sub	sp, fp, #16
   12004:	pop	{r4, r5, r6, r7, fp, pc}
   12008:	push	{r4, r5, fp, lr}
   1200c:	add	fp, sp, #8
   12010:	movw	r4, #58924	; 0xe62c
   12014:	movt	r4, #2
   12018:	ldr	r0, [r4]
   1201c:	bl	11380 <fflush@plt>
   12020:	movw	r5, #59092	; 0xe6d4
   12024:	movt	r5, #2
   12028:	ldr	r0, [r5]
   1202c:	ldr	r1, [r0, #52]	; 0x34
   12030:	movw	r0, #48495	; 0xbd6f
   12034:	movt	r0, #1
   12038:	bl	11368 <printf@plt>
   1203c:	ldr	r0, [r5]
   12040:	ldr	r1, [r0, #112]	; 0x70
   12044:	movw	r0, #48523	; 0xbd8b
   12048:	movt	r0, #1
   1204c:	bl	11368 <printf@plt>
   12050:	ldr	r0, [r5]
   12054:	ldr	r1, [r0, #116]	; 0x74
   12058:	movw	r0, #48549	; 0xbda5
   1205c:	movt	r0, #1
   12060:	bl	11368 <printf@plt>
   12064:	ldr	r0, [r5]
   12068:	ldr	r1, [r0, #120]	; 0x78
   1206c:	cmp	r1, #0
   12070:	beq	12084 <__assert_fail@plt+0xa04>
   12074:	movw	r0, #48572	; 0xbdbc
   12078:	movt	r0, #1
   1207c:	bl	11368 <printf@plt>
   12080:	ldr	r0, [r5]
   12084:	ldr	r1, [r0, #112]	; 0x70
   12088:	cmp	r1, #0
   1208c:	beq	120c8 <__assert_fail@plt+0xa48>
   12090:	ldr	r0, [r0, #116]	; 0x74
   12094:	cmp	r1, r0
   12098:	bcs	120ac <__assert_fail@plt+0xa2c>
   1209c:	movw	r0, #48590	; 0xbdce
   120a0:	movt	r0, #1
   120a4:	bl	11368 <printf@plt>
   120a8:	b	120c8 <__assert_fail@plt+0xa48>
   120ac:	sub	r0, r1, r0
   120b0:	mov	r2, #100	; 0x64
   120b4:	mul	r0, r0, r2
   120b8:	udiv	r1, r0, r1
   120bc:	movw	r0, #48630	; 0xbdf6
   120c0:	movt	r0, #1
   120c4:	bl	11368 <printf@plt>
   120c8:	ldr	r1, [r4]
   120cc:	mov	r0, #10
   120d0:	bl	11608 <putc@plt>
   120d4:	mov	r0, #0
   120d8:	pop	{r4, r5, fp, pc}
   120dc:	nop	{0}
   120e0:	push	{r4, r5, r6, sl, fp, lr}
   120e4:	add	fp, sp, #16
   120e8:	vpush	{d8}
   120ec:	sub	sp, sp, #8
   120f0:	mov	r4, r1
   120f4:	sub	r1, r0, #82	; 0x52
   120f8:	mov	r6, r2
   120fc:	mov	r5, #7
   12100:	cmp	r1, #179	; 0xb3
   12104:	bhi	123fc <__assert_fail@plt+0xd7c>
   12108:	add	r0, pc, #0
   1210c:	ldr	pc, [r0, r1, lsl #2]
   12110:	andeq	r2, r1, r8, ror #7
   12114:	andeq	r2, r1, r0, lsl sl
   12118:	andeq	r2, r1, r0, lsr #8
   1211c:	andeq	r2, r1, r0, lsl sl
   12120:	andeq	r2, r1, r0, lsl sl
   12124:	andeq	r2, r1, ip, lsr r4
   12128:	andeq	r2, r1, r0, lsl sl
   1212c:	andeq	r2, r1, r0, lsl sl
   12130:	andeq	r2, r1, r0, lsl sl
   12134:	andeq	r2, r1, r0, lsl sl
   12138:	andeq	r2, r1, r0, lsl sl
   1213c:	andeq	r2, r1, r0, lsl sl
   12140:	andeq	r2, r1, r0, lsl sl
   12144:	andeq	r2, r1, r0, lsl sl
   12148:	andeq	r2, r1, r0, lsl sl
   1214c:	andeq	r2, r1, r0, lsl sl
   12150:	andeq	r2, r1, r0, lsl sl
   12154:	andeq	r2, r1, r0, ror #8
   12158:	andeq	r2, r1, r4, lsl #9
   1215c:	andeq	r2, r1, r0, lsl sl
   12160:	muleq	r1, r0, r4
   12164:	andeq	r2, r1, r0, lsl sl
   12168:	andeq	r2, r1, r0, lsl sl
   1216c:	andeq	r2, r1, r4, lsr #9
   12170:	andeq	r2, r1, r0, lsl sl
   12174:	andeq	r2, r1, r0, lsl sl
   12178:	andeq	r2, r1, ip, lsr r5
   1217c:	andeq	r2, r1, r0, lsl sl
   12180:	muleq	r1, r4, r5
   12184:	andeq	r2, r1, r0, lsl sl
   12188:	andeq	r2, r1, r8, lsr #11
   1218c:	ldrdeq	r2, [r1], -r0
   12190:	andeq	r2, r1, r4, ror #11
   12194:	strdeq	r2, [r1], -r8
   12198:	andeq	r2, r1, r8, lsl r6
   1219c:	andeq	r2, r1, r0, lsl sl
   121a0:	andeq	r2, r1, r0, lsr #13
   121a4:			; <UNDEFINED> instruction: 0x000126b4
   121a8:	andeq	r2, r1, r0, lsl sl
   121ac:	andeq	r2, r1, r0, lsl sl
   121b0:	andeq	r2, r1, r0, lsl sl
   121b4:	andeq	r2, r1, r0, lsl sl
   121b8:	andeq	r2, r1, r0, lsl sl
   121bc:	andeq	r2, r1, r0, lsl sl
   121c0:	andeq	r2, r1, r0, lsl sl
   121c4:	andeq	r2, r1, r0, lsl sl
   121c8:	andeq	r2, r1, r0, lsl sl
   121cc:	andeq	r2, r1, r0, lsl sl
   121d0:	andeq	r2, r1, r0, lsl sl
   121d4:	andeq	r2, r1, r0, lsl sl
   121d8:	andeq	r2, r1, r0, lsl sl
   121dc:	andeq	r2, r1, r0, lsl sl
   121e0:	andeq	r2, r1, r0, lsl sl
   121e4:	andeq	r2, r1, r0, lsl sl
   121e8:	andeq	r2, r1, r0, lsl sl
   121ec:	andeq	r2, r1, r0, lsl sl
   121f0:	andeq	r2, r1, r0, lsl sl
   121f4:	andeq	r2, r1, r0, lsl sl
   121f8:	andeq	r2, r1, r0, lsl sl
   121fc:	andeq	r2, r1, r0, lsl sl
   12200:	andeq	r2, r1, r0, lsl sl
   12204:	andeq	r2, r1, r0, lsl sl
   12208:	andeq	r2, r1, r0, lsl sl
   1220c:	andeq	r2, r1, r0, lsl sl
   12210:	andeq	r2, r1, r0, lsl sl
   12214:	andeq	r2, r1, r0, lsl sl
   12218:	andeq	r2, r1, r0, lsl sl
   1221c:	andeq	r2, r1, r0, lsl sl
   12220:	andeq	r2, r1, r0, lsl sl
   12224:	andeq	r2, r1, r0, lsl sl
   12228:	andeq	r2, r1, r0, lsl sl
   1222c:	andeq	r2, r1, r0, lsl sl
   12230:	andeq	r2, r1, r0, lsl sl
   12234:	andeq	r2, r1, r0, lsl sl
   12238:	andeq	r2, r1, r0, lsl sl
   1223c:	andeq	r2, r1, r0, lsl sl
   12240:	andeq	r2, r1, r0, lsl sl
   12244:	andeq	r2, r1, r0, lsl sl
   12248:	andeq	r2, r1, r0, lsl sl
   1224c:	andeq	r2, r1, r0, lsl sl
   12250:	andeq	r2, r1, r0, lsl sl
   12254:	andeq	r2, r1, r0, lsl sl
   12258:	andeq	r2, r1, r0, lsl sl
   1225c:	andeq	r2, r1, r0, lsl sl
   12260:	andeq	r2, r1, r0, lsl sl
   12264:	andeq	r2, r1, r0, lsl sl
   12268:	andeq	r2, r1, r0, lsl sl
   1226c:	andeq	r2, r1, r0, lsl sl
   12270:	andeq	r2, r1, r0, lsl sl
   12274:	andeq	r2, r1, r0, lsl sl
   12278:	andeq	r2, r1, r0, lsl sl
   1227c:	andeq	r2, r1, r0, lsl sl
   12280:	andeq	r2, r1, r0, lsl sl
   12284:	andeq	r2, r1, r0, lsl sl
   12288:	andeq	r2, r1, r0, lsl sl
   1228c:	andeq	r2, r1, r0, lsl sl
   12290:	andeq	r2, r1, r0, lsl sl
   12294:	andeq	r2, r1, r0, lsl sl
   12298:	andeq	r2, r1, r0, lsl sl
   1229c:	andeq	r2, r1, r0, lsl sl
   122a0:	andeq	r2, r1, r0, lsl sl
   122a4:	andeq	r2, r1, r0, lsl sl
   122a8:	andeq	r2, r1, r0, lsl sl
   122ac:	andeq	r2, r1, r0, lsl sl
   122b0:	andeq	r2, r1, r0, lsl sl
   122b4:	andeq	r2, r1, r0, lsl sl
   122b8:	andeq	r2, r1, r0, lsl sl
   122bc:	andeq	r2, r1, r0, lsl sl
   122c0:	andeq	r2, r1, r0, lsl sl
   122c4:	andeq	r2, r1, r0, lsl sl
   122c8:	andeq	r2, r1, r0, lsl sl
   122cc:	andeq	r2, r1, r0, lsl sl
   122d0:	andeq	r2, r1, r0, lsl sl
   122d4:	andeq	r2, r1, r0, lsl sl
   122d8:	andeq	r2, r1, r0, lsl sl
   122dc:	andeq	r2, r1, r0, lsl sl
   122e0:	andeq	r2, r1, r0, lsl sl
   122e4:	andeq	r2, r1, r0, lsl sl
   122e8:	andeq	r2, r1, r0, lsl sl
   122ec:	andeq	r2, r1, r0, lsl sl
   122f0:	andeq	r2, r1, r0, lsl sl
   122f4:	andeq	r2, r1, r0, lsl sl
   122f8:	andeq	r2, r1, r0, lsl sl
   122fc:	andeq	r2, r1, r0, lsl sl
   12300:	andeq	r2, r1, r0, lsl sl
   12304:	andeq	r2, r1, r0, lsl sl
   12308:	andeq	r2, r1, r0, lsl sl
   1230c:	andeq	r2, r1, r0, lsl sl
   12310:	andeq	r2, r1, r0, lsl sl
   12314:	andeq	r2, r1, r0, lsl sl
   12318:	andeq	r2, r1, r0, lsl sl
   1231c:	andeq	r2, r1, r0, lsl sl
   12320:	andeq	r2, r1, r0, lsl sl
   12324:	andeq	r2, r1, r0, lsl sl
   12328:	andeq	r2, r1, r0, lsl sl
   1232c:	andeq	r2, r1, r0, lsl sl
   12330:	andeq	r2, r1, r0, lsl sl
   12334:	andeq	r2, r1, r0, lsl sl
   12338:	andeq	r2, r1, r0, lsl sl
   1233c:	andeq	r2, r1, r0, lsl sl
   12340:	andeq	r2, r1, r0, lsl sl
   12344:	andeq	r2, r1, r0, lsl sl
   12348:	andeq	r2, r1, r0, lsl sl
   1234c:	andeq	r2, r1, r0, lsl sl
   12350:	andeq	r2, r1, r0, lsl sl
   12354:	andeq	r2, r1, r0, lsl sl
   12358:	andeq	r2, r1, r0, lsl sl
   1235c:	andeq	r2, r1, r0, lsl sl
   12360:	andeq	r2, r1, r0, lsl sl
   12364:	andeq	r2, r1, r0, lsl sl
   12368:	andeq	r2, r1, r0, lsl sl
   1236c:	andeq	r2, r1, r0, lsl sl
   12370:	andeq	r2, r1, r0, lsl sl
   12374:	andeq	r2, r1, r0, lsl sl
   12378:	andeq	r2, r1, r0, lsl sl
   1237c:	andeq	r2, r1, r0, lsl sl
   12380:	andeq	r2, r1, r0, lsl sl
   12384:	andeq	r2, r1, r0, lsl sl
   12388:	andeq	r2, r1, r0, lsl sl
   1238c:	andeq	r2, r1, r0, lsl sl
   12390:	andeq	r2, r1, r0, lsl sl
   12394:	andeq	r2, r1, r0, lsl sl
   12398:	andeq	r2, r1, r0, lsl sl
   1239c:	andeq	r2, r1, r0, lsl sl
   123a0:	andeq	r2, r1, r0, lsl sl
   123a4:	andeq	r2, r1, r0, lsl sl
   123a8:	andeq	r2, r1, r0, lsl sl
   123ac:	andeq	r2, r1, r0, lsl sl
   123b0:	andeq	r2, r1, r0, lsl sl
   123b4:	andeq	r2, r1, r0, lsl sl
   123b8:	andeq	r2, r1, r0, lsl sl
   123bc:	andeq	r2, r1, r0, lsl sl
   123c0:	andeq	r2, r1, r0, lsl sl
   123c4:	andeq	r2, r1, r0, lsl sl
   123c8:	ldrdeq	r2, [r1], -r8
   123cc:	andeq	r2, r1, r4, ror #14
   123d0:	strdeq	r2, [r1], -r0
   123d4:	andeq	r2, r1, ip, ror r8
   123d8:	andeq	r2, r1, r4, lsr #18
   123dc:	andeq	r2, r1, r8, asr #18
   123e0:	andeq	r0, r0, r0
   123e4:	addmi	r4, pc, r0
   123e8:	movw	r0, #59084	; 0xe6cc
   123ec:	movt	r0, #2
   123f0:	ldr	r1, [r0]
   123f4:	orr	r1, r1, #16
   123f8:	b	12a08 <__assert_fail@plt+0x1388>
   123fc:	movw	r1, #2
   12400:	movt	r1, #256	; 0x100
   12404:	cmp	r0, r1
   12408:	bne	12a10 <__assert_fail@plt+0x1390>
   1240c:	movw	r1, #49776	; 0xc270
   12410:	mov	r0, r6
   12414:	movt	r1, #1
   12418:	bl	16428 <argp_error@@Base>
   1241c:	b	12a10 <__assert_fail@plt+0x1390>
   12420:	mov	r0, r4
   12424:	mov	r1, #255	; 0xff
   12428:	mov	r2, #1
   1242c:	bl	12a20 <__assert_fail@plt+0x13a0>
   12430:	movw	r1, #57664	; 0xe140
   12434:	movt	r1, #2
   12438:	b	12610 <__assert_fail@plt+0xf90>
   1243c:	mov	r0, r4
   12440:	mvn	r1, #-2147483648	; 0x80000000
   12444:	mov	r2, #0
   12448:	mov	r5, #0
   1244c:	bl	12a20 <__assert_fail@plt+0x13a0>
   12450:	movw	r1, #57672	; 0xe148
   12454:	movt	r1, #2
   12458:	str	r0, [r1]
   1245c:	b	12a10 <__assert_fail@plt+0x1390>
   12460:	mov	r0, r4
   12464:	mov	r1, #0
   12468:	mov	r2, #1
   1246c:	mov	r5, #0
   12470:	bl	12a20 <__assert_fail@plt+0x13a0>
   12474:	movw	r1, #58936	; 0xe638
   12478:	movt	r1, #2
   1247c:	str	r0, [r1]
   12480:	b	12a10 <__assert_fail@plt+0x1390>
   12484:	movw	r0, #59088	; 0xe6d0
   12488:	movt	r0, #2
   1248c:	b	12498 <__assert_fail@plt+0xe18>
   12490:	movw	r0, #59084	; 0xe6cc
   12494:	movt	r0, #2
   12498:	ldr	r1, [r0]
   1249c:	orr	r1, r1, #1
   124a0:	b	12a08 <__assert_fail@plt+0x1388>
   124a4:	add	r1, sp, #4
   124a8:	mov	r0, r4
   124ac:	bl	11584 <strtod@plt>
   124b0:	ldr	r3, [sp, #4]
   124b4:	vmov.f64	d8, d0
   124b8:	ldrb	r0, [r3]
   124bc:	cmp	r0, #0
   124c0:	beq	124d8 <__assert_fail@plt+0xe58>
   124c4:	movw	r1, #49691	; 0xc21b
   124c8:	mov	r0, r6
   124cc:	mov	r2, r4
   124d0:	movt	r1, #1
   124d4:	bl	16428 <argp_error@@Base>
   124d8:	vldr	d16, [pc, #-256]	; 123e0 <__assert_fail@plt+0xd60>
   124dc:	movw	r0, #59100	; 0xe6dc
   124e0:	mov	r5, #0
   124e4:	movt	r0, #2
   124e8:	vmul.f64	d16, d8, d16
   124ec:	vcvt.u32.f64	s0, d16
   124f0:	vcvt.u32.f64	s2, d16
   124f4:	vstr	s0, [r0]
   124f8:	movw	r0, #59084	; 0xe6cc
   124fc:	movt	r0, #2
   12500:	ldr	r1, [r0]
   12504:	orr	r1, r1, #2
   12508:	str	r1, [r0]
   1250c:	vmov	r0, s2
   12510:	cmp	r0, #199	; 0xc7
   12514:	bhi	12a10 <__assert_fail@plt+0x1390>
   12518:	movw	r0, #58932	; 0xe634
   1251c:	movt	r0, #2
   12520:	ldrb	r0, [r0]
   12524:	cmp	r0, #0
   12528:	bne	12a10 <__assert_fail@plt+0x1390>
   1252c:	movw	r2, #49722	; 0xc23a
   12530:	mov	r5, #0
   12534:	movt	r2, #1
   12538:	b	12580 <__assert_fail@plt+0xf00>
   1253c:	add	r1, sp, #4
   12540:	mov	r0, r4
   12544:	mov	r2, #0
   12548:	mov	r5, #0
   1254c:	bl	1150c <strtoul@plt>
   12550:	movw	r1, #58940	; 0xe63c
   12554:	cmp	r0, #0
   12558:	movt	r1, #2
   1255c:	str	r0, [r1]
   12560:	blt	12574 <__assert_fail@plt+0xef4>
   12564:	ldr	r0, [sp, #4]
   12568:	ldrb	r0, [r0]
   1256c:	cmp	r0, #0
   12570:	beq	12a10 <__assert_fail@plt+0x1390>
   12574:	movw	r2, #49749	; 0xc255
   12578:	mov	r5, #0
   1257c:	movt	r2, #1
   12580:	mov	r0, #1
   12584:	mov	r1, #0
   12588:	mov	r3, r4
   1258c:	bl	11488 <error@plt>
   12590:	b	12a10 <__assert_fail@plt+0x1390>
   12594:	movw	r0, #59084	; 0xe6cc
   12598:	movt	r0, #2
   1259c:	ldr	r1, [r0]
   125a0:	orr	r1, r1, #4
   125a4:	b	12a08 <__assert_fail@plt+0x1388>
   125a8:	movw	r5, #58952	; 0xe648
   125ac:	movw	r1, #57656	; 0xe138
   125b0:	mov	r0, r4
   125b4:	movt	r5, #2
   125b8:	movt	r1, #2
   125bc:	mov	r2, r5
   125c0:	bl	12b80 <__assert_fail@plt+0x1500>
   125c4:	movw	r0, #59076	; 0xe6c4
   125c8:	movt	r0, #2
   125cc:	b	129ec <__assert_fail@plt+0x136c>
   125d0:	movw	r0, #59084	; 0xe6cc
   125d4:	movt	r0, #2
   125d8:	ldr	r1, [r0]
   125dc:	orr	r1, r1, #8
   125e0:	b	12a08 <__assert_fail@plt+0x1388>
   125e4:	movw	r0, #59088	; 0xe6d0
   125e8:	movt	r0, #2
   125ec:	ldr	r1, [r0]
   125f0:	orr	r1, r1, #5
   125f4:	b	12a08 <__assert_fail@plt+0x1388>
   125f8:	mov	r0, r4
   125fc:	movw	r1, #65399	; 0xff77
   12600:	mov	r2, #1
   12604:	bl	12a20 <__assert_fail@plt+0x13a0>
   12608:	movw	r1, #57660	; 0xe13c
   1260c:	movt	r1, #2
   12610:	str	r0, [r1]
   12614:	b	12a0c <__assert_fail@plt+0x138c>
   12618:	movw	r1, #48443	; 0xbd3b
   1261c:	mov	r0, r4
   12620:	movt	r1, #1
   12624:	bl	11458 <strcasecmp@plt>
   12628:	cmp	r0, #0
   1262c:	beq	129c8 <__assert_fail@plt+0x1348>
   12630:	movw	r1, #49582	; 0xc1ae
   12634:	mov	r0, r4
   12638:	movt	r1, #1
   1263c:	bl	11458 <strcasecmp@plt>
   12640:	cmp	r0, #0
   12644:	beq	129dc <__assert_fail@plt+0x135c>
   12648:	movw	r1, #48768	; 0xbe80
   1264c:	mov	r0, r4
   12650:	movt	r1, #1
   12654:	bl	11458 <strcasecmp@plt>
   12658:	movw	r5, #16812	; 0x41ac
   1265c:	cmp	r0, #0
   12660:	movt	r5, #1
   12664:	beq	129e4 <__assert_fail@plt+0x1364>
   12668:	movw	r1, #48448	; 0xbd40
   1266c:	mov	r0, r4
   12670:	movt	r1, #1
   12674:	bl	11458 <strcasecmp@plt>
   12678:	cmp	r0, #0
   1267c:	beq	129e4 <__assert_fail@plt+0x1364>
   12680:	movw	r2, #48453	; 0xbd45
   12684:	mov	r0, #1
   12688:	mov	r1, #0
   1268c:	mov	r3, r4
   12690:	mov	r5, #0
   12694:	movt	r2, #1
   12698:	bl	11488 <error@plt>
   1269c:	b	129e4 <__assert_fail@plt+0x1364>
   126a0:	movw	r0, #59084	; 0xe6cc
   126a4:	movt	r0, #2
   126a8:	ldr	r1, [r0]
   126ac:	orr	r1, r1, #32
   126b0:	b	12a08 <__assert_fail@plt+0x1388>
   126b4:	mov	r0, r4
   126b8:	mvn	r1, #-2147483648	; 0x80000000
   126bc:	mov	r2, #0
   126c0:	mov	r5, #0
   126c4:	bl	12a20 <__assert_fail@plt+0x13a0>
   126c8:	movw	r1, #57668	; 0xe144
   126cc:	movt	r1, #2
   126d0:	str	r0, [r1]
   126d4:	b	12a10 <__assert_fail@plt+0x1390>
   126d8:	movw	r0, #48443	; 0xbd3b
   126dc:	movt	r0, #1
   126e0:	mov	r1, r0
   126e4:	bl	11458 <strcasecmp@plt>
   126e8:	cmp	r0, #0
   126ec:	beq	12918 <__assert_fail@plt+0x1298>
   126f0:	movw	r0, #48443	; 0xbd3b
   126f4:	movw	r1, #49582	; 0xc1ae
   126f8:	movt	r0, #1
   126fc:	movt	r1, #1
   12700:	bl	11458 <strcasecmp@plt>
   12704:	cmp	r0, #0
   12708:	beq	129ac <__assert_fail@plt+0x132c>
   1270c:	movw	r0, #48443	; 0xbd3b
   12710:	movw	r1, #48768	; 0xbe80
   12714:	movt	r0, #1
   12718:	movt	r1, #1
   1271c:	bl	11458 <strcasecmp@plt>
   12720:	movw	r4, #16812	; 0x41ac
   12724:	cmp	r0, #0
   12728:	movt	r4, #1
   1272c:	beq	129b4 <__assert_fail@plt+0x1334>
   12730:	movw	r0, #48443	; 0xbd3b
   12734:	movw	r1, #48448	; 0xbd40
   12738:	movt	r0, #1
   1273c:	movt	r1, #1
   12740:	bl	11458 <strcasecmp@plt>
   12744:	cmp	r0, #0
   12748:	beq	129b4 <__assert_fail@plt+0x1334>
   1274c:	movw	r2, #48453	; 0xbd45
   12750:	movw	r3, #48443	; 0xbd3b
   12754:	mov	r4, #0
   12758:	movt	r2, #1
   1275c:	movt	r3, #1
   12760:	b	12908 <__assert_fail@plt+0x1288>
   12764:	movw	r0, #48768	; 0xbe80
   12768:	movw	r1, #48443	; 0xbd3b
   1276c:	movt	r0, #1
   12770:	movt	r1, #1
   12774:	bl	11458 <strcasecmp@plt>
   12778:	cmp	r0, #0
   1277c:	beq	12918 <__assert_fail@plt+0x1298>
   12780:	movw	r0, #48768	; 0xbe80
   12784:	movw	r1, #49582	; 0xc1ae
   12788:	movt	r0, #1
   1278c:	movt	r1, #1
   12790:	bl	11458 <strcasecmp@plt>
   12794:	cmp	r0, #0
   12798:	beq	129ac <__assert_fail@plt+0x132c>
   1279c:	movw	r0, #48768	; 0xbe80
   127a0:	movt	r0, #1
   127a4:	mov	r1, r0
   127a8:	bl	11458 <strcasecmp@plt>
   127ac:	movw	r4, #16812	; 0x41ac
   127b0:	cmp	r0, #0
   127b4:	movt	r4, #1
   127b8:	beq	129b4 <__assert_fail@plt+0x1334>
   127bc:	movw	r0, #48768	; 0xbe80
   127c0:	movw	r1, #48448	; 0xbd40
   127c4:	movt	r0, #1
   127c8:	movt	r1, #1
   127cc:	bl	11458 <strcasecmp@plt>
   127d0:	cmp	r0, #0
   127d4:	beq	129b4 <__assert_fail@plt+0x1334>
   127d8:	movw	r2, #48453	; 0xbd45
   127dc:	movw	r3, #48768	; 0xbe80
   127e0:	mov	r4, #0
   127e4:	movt	r2, #1
   127e8:	movt	r3, #1
   127ec:	b	12908 <__assert_fail@plt+0x1288>
   127f0:	movw	r0, #49582	; 0xc1ae
   127f4:	movw	r1, #48443	; 0xbd3b
   127f8:	movt	r0, #1
   127fc:	movt	r1, #1
   12800:	bl	11458 <strcasecmp@plt>
   12804:	cmp	r0, #0
   12808:	beq	12918 <__assert_fail@plt+0x1298>
   1280c:	movw	r0, #49582	; 0xc1ae
   12810:	movt	r0, #1
   12814:	mov	r1, r0
   12818:	bl	11458 <strcasecmp@plt>
   1281c:	cmp	r0, #0
   12820:	beq	129ac <__assert_fail@plt+0x132c>
   12824:	movw	r0, #49582	; 0xc1ae
   12828:	movw	r1, #48768	; 0xbe80
   1282c:	movt	r0, #1
   12830:	movt	r1, #1
   12834:	bl	11458 <strcasecmp@plt>
   12838:	movw	r4, #16812	; 0x41ac
   1283c:	cmp	r0, #0
   12840:	movt	r4, #1
   12844:	beq	129b4 <__assert_fail@plt+0x1334>
   12848:	movw	r0, #49582	; 0xc1ae
   1284c:	movw	r1, #48448	; 0xbd40
   12850:	movt	r0, #1
   12854:	movt	r1, #1
   12858:	bl	11458 <strcasecmp@plt>
   1285c:	cmp	r0, #0
   12860:	beq	129b4 <__assert_fail@plt+0x1334>
   12864:	movw	r2, #48453	; 0xbd45
   12868:	movw	r3, #49582	; 0xc1ae
   1286c:	mov	r4, #0
   12870:	movt	r2, #1
   12874:	movt	r3, #1
   12878:	b	12908 <__assert_fail@plt+0x1288>
   1287c:	movw	r0, #48832	; 0xbec0
   12880:	movw	r1, #48443	; 0xbd3b
   12884:	movt	r0, #1
   12888:	movt	r1, #1
   1288c:	bl	11458 <strcasecmp@plt>
   12890:	cmp	r0, #0
   12894:	beq	12918 <__assert_fail@plt+0x1298>
   12898:	movw	r0, #48832	; 0xbec0
   1289c:	movw	r1, #49582	; 0xc1ae
   128a0:	movt	r0, #1
   128a4:	movt	r1, #1
   128a8:	bl	11458 <strcasecmp@plt>
   128ac:	cmp	r0, #0
   128b0:	beq	129ac <__assert_fail@plt+0x132c>
   128b4:	movw	r0, #48832	; 0xbec0
   128b8:	movw	r1, #48768	; 0xbe80
   128bc:	movt	r0, #1
   128c0:	movt	r1, #1
   128c4:	bl	11458 <strcasecmp@plt>
   128c8:	movw	r4, #16812	; 0x41ac
   128cc:	cmp	r0, #0
   128d0:	movt	r4, #1
   128d4:	beq	129b4 <__assert_fail@plt+0x1334>
   128d8:	movw	r0, #48832	; 0xbec0
   128dc:	movw	r1, #48448	; 0xbd40
   128e0:	movt	r0, #1
   128e4:	movt	r1, #1
   128e8:	bl	11458 <strcasecmp@plt>
   128ec:	cmp	r0, #0
   128f0:	beq	129b4 <__assert_fail@plt+0x1334>
   128f4:	movw	r2, #48453	; 0xbd45
   128f8:	movw	r3, #48832	; 0xbec0
   128fc:	mov	r4, #0
   12900:	movt	r2, #1
   12904:	movt	r3, #1
   12908:	mov	r0, #1
   1290c:	mov	r1, #0
   12910:	bl	11488 <error@plt>
   12914:	b	129b4 <__assert_fail@plt+0x1334>
   12918:	movw	r4, #12664	; 0x3178
   1291c:	movt	r4, #1
   12920:	b	129b4 <__assert_fail@plt+0x1334>
   12924:	mov	r0, r4
   12928:	mov	r1, #255	; 0xff
   1292c:	mov	r2, #0
   12930:	mov	r5, #0
   12934:	bl	12a20 <__assert_fail@plt+0x13a0>
   12938:	movw	r1, #58944	; 0xe640
   1293c:	movt	r1, #2
   12940:	str	r0, [r1]
   12944:	b	12a10 <__assert_fail@plt+0x1390>
   12948:	movw	r0, #59084	; 0xe6cc
   1294c:	movt	r0, #2
   12950:	ldr	r1, [r0]
   12954:	orr	r1, r1, #64	; 0x40
   12958:	str	r1, [r0]
   1295c:	movw	r1, #49797	; 0xc285
   12960:	mov	r0, r4
   12964:	movt	r1, #1
   12968:	bl	11458 <strcasecmp@plt>
   1296c:	cmp	r0, #0
   12970:	beq	129d4 <__assert_fail@plt+0x1354>
   12974:	movw	r1, #49804	; 0xc28c
   12978:	mov	r0, r4
   1297c:	movt	r1, #1
   12980:	bl	11458 <strcasecmp@plt>
   12984:	cmp	r0, #0
   12988:	beq	129f4 <__assert_fail@plt+0x1374>
   1298c:	movw	r2, #49811	; 0xc293
   12990:	mov	r0, #1
   12994:	mov	r1, #0
   12998:	mov	r3, r4
   1299c:	mov	r5, #0
   129a0:	movt	r2, #1
   129a4:	bl	11488 <error@plt>
   129a8:	b	129f8 <__assert_fail@plt+0x1378>
   129ac:	movw	r4, #17168	; 0x4310
   129b0:	movt	r4, #1
   129b4:	movw	r0, #57676	; 0xe14c
   129b8:	mov	r5, #0
   129bc:	movt	r0, #2
   129c0:	str	r4, [r0]
   129c4:	b	12a10 <__assert_fail@plt+0x1390>
   129c8:	movw	r5, #12664	; 0x3178
   129cc:	movt	r5, #1
   129d0:	b	129e4 <__assert_fail@plt+0x1364>
   129d4:	mov	r5, #1
   129d8:	b	129f8 <__assert_fail@plt+0x1378>
   129dc:	movw	r5, #17168	; 0x4310
   129e0:	movt	r5, #1
   129e4:	movw	r0, #57676	; 0xe14c
   129e8:	movt	r0, #2
   129ec:	str	r5, [r0]
   129f0:	b	12a0c <__assert_fail@plt+0x138c>
   129f4:	mov	r5, #2
   129f8:	movw	r0, #59096	; 0xe6d8
   129fc:	movt	r0, #2
   12a00:	ldr	r1, [r0]
   12a04:	orr	r1, r1, r5
   12a08:	str	r1, [r0]
   12a0c:	mov	r5, #0
   12a10:	mov	r0, r5
   12a14:	sub	sp, fp, #24
   12a18:	vpop	{d8}
   12a1c:	pop	{r4, r5, r6, sl, fp, pc}
   12a20:	push	{r4, r5, r6, r7, fp, lr}
   12a24:	add	fp, sp, #16
   12a28:	sub	sp, sp, #8
   12a2c:	mov	r7, r2
   12a30:	mov	r6, r1
   12a34:	add	r1, sp, #4
   12a38:	mov	r2, #0
   12a3c:	mov	r4, r0
   12a40:	bl	1150c <strtoul@plt>
   12a44:	mov	r5, r0
   12a48:	ldr	r0, [sp, #4]
   12a4c:	ldrb	r1, [r0]
   12a50:	cmp	r1, #0
   12a54:	beq	12a74 <__assert_fail@plt+0x13f4>
   12a58:	movw	r2, #49691	; 0xc21b
   12a5c:	str	r0, [sp]
   12a60:	mov	r0, #1
   12a64:	mov	r1, #0
   12a68:	mov	r3, r4
   12a6c:	movt	r2, #1
   12a70:	bl	11488 <error@plt>
   12a74:	orrs	r0, r5, r7
   12a78:	bne	12a94 <__assert_fail@plt+0x1414>
   12a7c:	movw	r2, #49722	; 0xc23a
   12a80:	mov	r0, #1
   12a84:	mov	r1, #0
   12a88:	mov	r3, r4
   12a8c:	movt	r2, #1
   12a90:	bl	11488 <error@plt>
   12a94:	cmp	r6, #0
   12a98:	cmpne	r5, r6
   12a9c:	bls	12ab8 <__assert_fail@plt+0x1438>
   12aa0:	movw	r2, #49857	; 0xc2c1
   12aa4:	mov	r0, #1
   12aa8:	mov	r1, #0
   12aac:	mov	r3, r4
   12ab0:	movt	r2, #1
   12ab4:	bl	11488 <error@plt>
   12ab8:	mov	r0, r5
   12abc:	sub	sp, fp, #16
   12ac0:	pop	{r4, r5, r6, r7, fp, pc}
   12ac4:	push	{r4, r5, r6, r7, fp, lr}
   12ac8:	add	fp, sp, #16
   12acc:	movw	r7, #57660	; 0xe13c
   12ad0:	mov	r5, r0
   12ad4:	movt	r7, #2
   12ad8:	ldr	r0, [r7]
   12adc:	cmp	r0, #0
   12ae0:	beq	12b7c <__assert_fail@plt+0x14fc>
   12ae4:	mov	r4, r1
   12ae8:	bl	19da0 <argp_parse@@Base+0x1a28>
   12aec:	ldr	r2, [r7]
   12af0:	movw	ip, #59080	; 0xe6c8
   12af4:	cmp	r5, #0
   12af8:	movt	ip, #2
   12afc:	str	r0, [ip]
   12b00:	beq	12b44 <__assert_fail@plt+0x14c4>
   12b04:	cmp	r2, #1
   12b08:	blt	12b7c <__assert_fail@plt+0x14fc>
   12b0c:	mov	r2, #0
   12b10:	mov	r3, #0
   12b14:	add	r1, r3, #1
   12b18:	ldrb	r3, [r5, r3]
   12b1c:	ldr	r6, [ip]
   12b20:	cmp	r1, r4
   12b24:	movcs	r1, r2
   12b28:	strb	r3, [r0], #1
   12b2c:	ldr	r3, [r7]
   12b30:	add	r3, r6, r3
   12b34:	cmp	r0, r3
   12b38:	mov	r3, r1
   12b3c:	bcc	12b14 <__assert_fail@plt+0x1494>
   12b40:	b	12b7c <__assert_fail@plt+0x14fc>
   12b44:	cmp	r2, #0
   12b48:	beq	12b7c <__assert_fail@plt+0x14fc>
   12b4c:	mov	r2, #0
   12b50:	strb	r2, [r0]
   12b54:	ldr	r0, [r7]
   12b58:	cmp	r0, #2
   12b5c:	popcc	{r4, r5, r6, r7, fp, pc}
   12b60:	mov	r0, #1
   12b64:	ldr	r1, [ip]
   12b68:	strb	r0, [r1, r0]
   12b6c:	add	r0, r0, #1
   12b70:	ldr	r1, [r7]
   12b74:	cmp	r0, r1
   12b78:	bcc	12b64 <__assert_fail@plt+0x14e4>
   12b7c:	pop	{r4, r5, r6, r7, fp, pc}
   12b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b84:	add	fp, sp, #28
   12b88:	sub	sp, sp, #12
   12b8c:	mov	r6, r0
   12b90:	ldrb	r0, [r0]
   12b94:	mov	r4, r1
   12b98:	cmp	r0, #0
   12b9c:	beq	12c14 <__assert_fail@plt+0x1594>
   12ba0:	movw	r8, #49882	; 0xc2da
   12ba4:	mov	r5, r2
   12ba8:	mov	sl, #0
   12bac:	add	r9, sp, #8
   12bb0:	add	r7, sp, #4
   12bb4:	movt	r8, #1
   12bb8:	ldr	r0, [r4]
   12bbc:	cmp	sl, r0
   12bc0:	bge	12c18 <__assert_fail@plt+0x1598>
   12bc4:	mov	r0, r6
   12bc8:	mov	r1, r8
   12bcc:	mov	r2, r9
   12bd0:	mov	r3, r7
   12bd4:	bl	115fc <sscanf@plt>
   12bd8:	cmp	r0, #1
   12bdc:	beq	12bf8 <__assert_fail@plt+0x1578>
   12be0:	movw	r2, #49888	; 0xc2e0
   12be4:	mov	r0, #1
   12be8:	mov	r1, #0
   12bec:	mov	r3, r6
   12bf0:	movt	r2, #1
   12bf4:	bl	11488 <error@plt>
   12bf8:	ldmib	sp, {r0, r1}
   12bfc:	strb	r1, [r5, sl]
   12c00:	add	sl, sl, #1
   12c04:	ldrb	r0, [r6, r0]!
   12c08:	cmp	r0, #0
   12c0c:	bne	12bb8 <__assert_fail@plt+0x1538>
   12c10:	b	12c18 <__assert_fail@plt+0x1598>
   12c14:	mov	sl, #0
   12c18:	str	sl, [r4]
   12c1c:	sub	sp, fp, #28
   12c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c24:	ldr	r3, [r1, #4]
   12c28:	ldr	r2, [r0, #4]
   12c2c:	ldr	ip, [r0]
   12c30:	sub	r3, r2, r3
   12c34:	cmn	r3, #1
   12c38:	str	r3, [r0, #4]
   12c3c:	bgt	12c54 <__assert_fail@plt+0x15d4>
   12c40:	add	r2, r3, #576	; 0x240
   12c44:	sub	ip, ip, #1
   12c48:	add	r2, r2, #999424	; 0xf4000
   12c4c:	str	ip, [r0]
   12c50:	str	r2, [r0, #4]
   12c54:	ldr	r1, [r1]
   12c58:	sub	r1, ip, r1
   12c5c:	str	r1, [r0]
   12c60:	bx	lr
   12c64:	vcmpe.f64	d0, #0.0
   12c68:	vneg.f64	d16, d0
   12c6c:	vmrs	APSR_nzcv, fpscr
   12c70:	vmovmi.f64	d0, d16
   12c74:	bx	lr
   12c78:	vcmpe.f64	d0, #0.0
   12c7c:	vmov.i32	d16, #0	; 0x00000000
   12c80:	vmrs	APSR_nzcv, fpscr
   12c84:	vcmpepl.f64	d0, d1
   12c88:	vmrspl	APSR_nzcv, fpscr
   12c8c:	bmi	12cc8 <__assert_fail@plt+0x1648>
   12c90:	vmov.f64	d17, #96	; 0x3f000000  0.5
   12c94:	vmul.f64	d18, d0, d17
   12c98:	vdiv.f64	d16, d0, d18
   12c9c:	vadd.f64	d16, d18, d16
   12ca0:	vmul.f64	d16, d16, d17
   12ca4:	vsub.f64	d18, d16, d18
   12ca8:	vcmpe.f64	d18, #0.0
   12cac:	vneg.f64	d19, d18
   12cb0:	vmrs	APSR_nzcv, fpscr
   12cb4:	vmovmi.f64	d18, d19
   12cb8:	vcmpe.f64	d18, d1
   12cbc:	vmov.f64	d18, d16
   12cc0:	vmrs	APSR_nzcv, fpscr
   12cc4:	bgt	12c98 <__assert_fail@plt+0x1618>
   12cc8:	vorr	d0, d16, d16
   12ccc:	bx	lr
   12cd0:	mov	r1, #1
   12cd4:	eor	r0, r1, r0, lsr #31
   12cd8:	bx	lr
   12cdc:	push	{r4, sl, fp, lr}
   12ce0:	add	fp, sp, #8
   12ce4:	mov	r4, r0
   12ce8:	bic	r3, r2, #-2147483648	; 0x80000000
   12cec:	cmp	r2, #0
   12cf0:	blt	12d00 <__assert_fail@plt+0x1680>
   12cf4:	movw	r2, #50055	; 0xc387
   12cf8:	movt	r2, #1
   12cfc:	b	12d08 <__assert_fail@plt+0x1688>
   12d00:	movw	r2, #49913	; 0xc2f9
   12d04:	movt	r2, #1
   12d08:	mov	r0, r4
   12d0c:	bl	11548 <snprintf@plt>
   12d10:	mov	r0, r4
   12d14:	pop	{r4, sl, fp, pc}
   12d18:	push	{r4, r5, fp, lr}
   12d1c:	add	fp, sp, #8
   12d20:	mov	r4, r0
   12d24:	ldr	r0, [r0, #80]	; 0x50
   12d28:	cmp	r0, #0
   12d2c:	bne	12d54 <__assert_fail@plt+0x16d4>
   12d30:	cmp	r1, #0
   12d34:	ldr	r1, [r4, #56]	; 0x38
   12d38:	mov	r0, #80	; 0x50
   12d3c:	movwne	r0, #8
   12d40:	add	r0, r1, r0
   12d44:	bl	1a384 <argp_parse@@Base+0x200c>
   12d48:	cmp	r0, #0
   12d4c:	str	r0, [r4, #80]	; 0x50
   12d50:	beq	12d98 <__assert_fail@plt+0x1718>
   12d54:	ldr	r0, [r4, #76]	; 0x4c
   12d58:	mov	r5, #0
   12d5c:	cmp	r0, #0
   12d60:	beq	12d6c <__assert_fail@plt+0x16ec>
   12d64:	mov	r0, r5
   12d68:	pop	{r4, r5, fp, pc}
   12d6c:	ldr	r0, [r4, #72]	; 0x48
   12d70:	bl	1a384 <argp_parse@@Base+0x200c>
   12d74:	cmp	r0, #0
   12d78:	str	r0, [r4, #76]	; 0x4c
   12d7c:	beq	12d98 <__assert_fail@plt+0x1718>
   12d80:	ldr	r2, [r4, #72]	; 0x48
   12d84:	mov	r1, #0
   12d88:	mov	r5, #0
   12d8c:	bl	1156c <memset@plt>
   12d90:	mov	r0, r5
   12d94:	pop	{r4, r5, fp, pc}
   12d98:	mvn	r5, #0
   12d9c:	mov	r0, r5
   12da0:	pop	{r4, r5, fp, pc}
   12da4:	push	{r4, r5, r6, r7, fp, lr}
   12da8:	add	fp, sp, #16
   12dac:	mov	r7, r0
   12db0:	ldr	r0, [r0, #80]	; 0x50
   12db4:	mov	r4, r3
   12db8:	mov	r6, r2
   12dbc:	mov	r5, r1
   12dc0:	cmp	r0, #0
   12dc4:	bne	12df0 <__assert_fail@plt+0x1770>
   12dc8:	ldr	r0, [fp, #8]
   12dcc:	mov	r1, #80	; 0x50
   12dd0:	cmp	r0, #0
   12dd4:	ldr	r0, [r7, #56]	; 0x38
   12dd8:	movwne	r1, #8
   12ddc:	add	r0, r0, r1
   12de0:	bl	1a384 <argp_parse@@Base+0x200c>
   12de4:	cmp	r0, #0
   12de8:	str	r0, [r7, #80]	; 0x50
   12dec:	beq	12e50 <__assert_fail@plt+0x17d0>
   12df0:	ldr	r0, [r7, #76]	; 0x4c
   12df4:	cmp	r0, #0
   12df8:	bne	12e1c <__assert_fail@plt+0x179c>
   12dfc:	ldr	r0, [r7, #72]	; 0x48
   12e00:	bl	1a384 <argp_parse@@Base+0x200c>
   12e04:	cmp	r0, #0
   12e08:	str	r0, [r7, #76]	; 0x4c
   12e0c:	beq	12e50 <__assert_fail@plt+0x17d0>
   12e10:	ldr	r2, [r7, #72]	; 0x48
   12e14:	mov	r1, #0
   12e18:	bl	1156c <memset@plt>
   12e1c:	ldr	r2, [r7, #56]	; 0x38
   12e20:	add	r1, r4, r6
   12e24:	mvn	r0, #0
   12e28:	cmp	r2, r1
   12e2c:	popcc	{r4, r5, r6, r7, fp, pc}
   12e30:	ldr	r0, [r7, #80]	; 0x50
   12e34:	mov	r1, r5
   12e38:	mov	r2, r4
   12e3c:	add	r0, r0, r6
   12e40:	add	r0, r0, #8
   12e44:	bl	113d4 <memcpy@plt>
   12e48:	mov	r0, #0
   12e4c:	pop	{r4, r5, r6, r7, fp, pc}
   12e50:	mvn	r0, #0
   12e54:	pop	{r4, r5, r6, r7, fp, pc}
   12e58:	str	r1, [r0, #8]
   12e5c:	bx	lr
   12e60:	push	{fp, lr}
   12e64:	mov	fp, sp
   12e68:	sub	sp, sp, #8
   12e6c:	str	r2, [sp, #4]
   12e70:	mov	ip, r1
   12e74:	mov	r1, #1
   12e78:	ldr	r0, [r0]
   12e7c:	str	r3, [sp]
   12e80:	add	r3, sp, #4
   12e84:	mov	r2, ip
   12e88:	bl	1135c <setsockopt@plt>
   12e8c:	mov	sp, fp
   12e90:	pop	{fp, pc}
   12e94:	str	r1, [r0, #20]
   12e98:	bx	lr
   12e9c:	push	{r4, sl, fp, lr}
   12ea0:	add	fp, sp, #8
   12ea4:	mov	r4, r0
   12ea8:	ldr	r0, [r0, #80]	; 0x50
   12eac:	cmp	r0, #0
   12eb0:	beq	12ec0 <__assert_fail@plt+0x1840>
   12eb4:	bl	19648 <argp_parse@@Base+0x12d0>
   12eb8:	mov	r0, #0
   12ebc:	str	r0, [r4, #80]	; 0x50
   12ec0:	ldr	r0, [r4, #76]	; 0x4c
   12ec4:	cmp	r0, #0
   12ec8:	popeq	{r4, sl, fp, pc}
   12ecc:	bl	19648 <argp_parse@@Base+0x12d0>
   12ed0:	mov	r0, #0
   12ed4:	str	r0, [r4, #76]	; 0x4c
   12ed8:	pop	{r4, sl, fp, pc}
   12edc:	push	{r4, r5, fp, lr}
   12ee0:	add	fp, sp, #8
   12ee4:	sub	sp, sp, #8
   12ee8:	mov	r4, r1
   12eec:	mov	r5, r0
   12ef0:	mov	r0, sp
   12ef4:	mov	r1, #0
   12ef8:	bl	1147c <gettimeofday@plt>
   12efc:	cmn	r4, #1
   12f00:	beq	12f50 <__assert_fail@plt+0x18d0>
   12f04:	ldr	r1, [r5, #4]
   12f08:	ldm	sp, {r0, r2}
   12f0c:	sub	r1, r2, r1
   12f10:	cmn	r1, #1
   12f14:	str	r1, [sp, #4]
   12f18:	bgt	12f30 <__assert_fail@plt+0x18b0>
   12f1c:	add	r1, r1, #576	; 0x240
   12f20:	sub	r0, r0, #1
   12f24:	add	r1, r1, #999424	; 0xf4000
   12f28:	str	r1, [sp, #4]
   12f2c:	str	r0, [sp]
   12f30:	ldr	r1, [r5]
   12f34:	sub	r1, r0, r1
   12f38:	mov	r0, #1
   12f3c:	cmp	r1, r4
   12f40:	str	r1, [sp]
   12f44:	movlt	r0, #0
   12f48:	sub	sp, fp, #8
   12f4c:	pop	{r4, r5, fp, pc}
   12f50:	mov	r0, #0
   12f54:	sub	sp, fp, #8
   12f58:	pop	{r4, r5, fp, pc}
   12f5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f60:	add	fp, sp, #24
   12f64:	sub	sp, sp, #320	; 0x140
   12f68:	mov	r5, r1
   12f6c:	mov	r1, #0
   12f70:	mov	r6, r0
   12f74:	mov	r0, #1
   12f78:	sub	r4, fp, #70	; 0x46
   12f7c:	mov	r3, #46	; 0x2e
   12f80:	str	r0, [sp, #8]
   12f84:	str	r1, [sp]
   12f88:	str	r1, [sp, #4]
   12f8c:	mov	r0, r6
   12f90:	mov	r1, r5
   12f94:	mov	r2, r4
   12f98:	bl	115c0 <getnameinfo@plt>
   12f9c:	cmp	r0, #0
   12fa0:	bne	13048 <__assert_fail@plt+0x19c8>
   12fa4:	movw	r0, #59084	; 0xe6cc
   12fa8:	movt	r0, #2
   12fac:	ldrb	r0, [r0]
   12fb0:	tst	r0, #4
   12fb4:	bne	12fe8 <__assert_fail@plt+0x1968>
   12fb8:	mov	r1, #0
   12fbc:	mov	r0, #40	; 0x28
   12fc0:	add	r2, sp, #18
   12fc4:	mov	r3, #256	; 0x100
   12fc8:	str	r0, [sp, #8]
   12fcc:	str	r1, [sp]
   12fd0:	str	r1, [sp, #4]
   12fd4:	mov	r0, r6
   12fd8:	mov	r1, r5
   12fdc:	bl	115c0 <getnameinfo@plt>
   12fe0:	cmp	r0, #0
   12fe4:	beq	13000 <__assert_fail@plt+0x1980>
   12fe8:	sub	r0, fp, #70	; 0x46
   12fec:	bl	1a2c0 <argp_parse@@Base+0x1f48>
   12ff0:	mov	r5, r0
   12ff4:	mov	r0, r5
   12ff8:	sub	sp, fp, #24
   12ffc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13000:	mov	r0, r4
   13004:	bl	11518 <strlen@plt>
   13008:	add	r6, sp, #18
   1300c:	mov	r5, r0
   13010:	mov	r0, r6
   13014:	bl	11518 <strlen@plt>
   13018:	add	r0, r5, r0
   1301c:	add	r7, r0, #4
   13020:	mov	r0, r7
   13024:	bl	19da0 <argp_parse@@Base+0x1a28>
   13028:	movw	r2, #49949	; 0xc31d
   1302c:	mov	r1, r7
   13030:	mov	r3, r6
   13034:	mov	r5, r0
   13038:	str	r4, [sp]
   1303c:	movt	r2, #1
   13040:	bl	11548 <snprintf@plt>
   13044:	b	12ff4 <__assert_fail@plt+0x1974>
   13048:	cmn	r0, #11
   1304c:	bne	13060 <__assert_fail@plt+0x19e0>
   13050:	bl	1153c <__errno_location@plt>
   13054:	ldr	r0, [r0]
   13058:	bl	114c4 <strerror@plt>
   1305c:	b	13064 <__assert_fail@plt+0x19e4>
   13060:	bl	113bc <gai_strerror@plt>
   13064:	mov	r2, r0
   13068:	movw	r0, #58920	; 0xe628
   1306c:	movw	r1, #49918	; 0xc2fe
   13070:	movt	r0, #2
   13074:	movt	r1, #1
   13078:	ldr	r0, [r0]
   1307c:	bl	11530 <fprintf@plt>
   13080:	movw	r0, #49941	; 0xc315
   13084:	movt	r0, #1
   13088:	b	12fec <__assert_fail@plt+0x196c>
   1308c:	push	{r4, r5, r6, r7, fp, lr}
   13090:	add	fp, sp, #16
   13094:	sub	sp, sp, #8
   13098:	movw	r1, #59084	; 0xe6cc
   1309c:	str	r0, [sp, #4]
   130a0:	movt	r1, #2
   130a4:	ldrb	r1, [r1]
   130a8:	tst	r1, #4
   130ac:	bne	13100 <__assert_fail@plt+0x1a80>
   130b0:	add	r0, sp, #4
   130b4:	mov	r1, #4
   130b8:	mov	r2, #2
   130bc:	bl	11428 <gethostbyaddr@plt>
   130c0:	mov	r5, r0
   130c4:	ldr	r0, [sp, #4]
   130c8:	bl	11404 <inet_ntoa@plt>
   130cc:	mov	r4, r0
   130d0:	cmp	r5, #0
   130d4:	beq	13110 <__assert_fail@plt+0x1a90>
   130d8:	mov	r0, r4
   130dc:	bl	11518 <strlen@plt>
   130e0:	mov	r6, r0
   130e4:	ldr	r0, [r5]
   130e8:	cmp	r0, #0
   130ec:	beq	13120 <__assert_fail@plt+0x1aa0>
   130f0:	bl	11518 <strlen@plt>
   130f4:	add	r0, r6, r0
   130f8:	add	r7, r0, #5
   130fc:	b	13124 <__assert_fail@plt+0x1aa4>
   13100:	bl	11404 <inet_ntoa@plt>
   13104:	sub	sp, fp, #16
   13108:	pop	{r4, r5, r6, r7, fp, lr}
   1310c:	b	1a2c0 <argp_parse@@Base+0x1f48>
   13110:	mov	r0, r4
   13114:	bl	1a2c0 <argp_parse@@Base+0x1f48>
   13118:	mov	r6, r0
   1311c:	b	1316c <__assert_fail@plt+0x1aec>
   13120:	add	r7, r6, #1
   13124:	mov	r0, r7
   13128:	bl	19da0 <argp_parse@@Base+0x1a28>
   1312c:	ldr	r3, [r5]
   13130:	mov	r6, r0
   13134:	cmp	r3, #0
   13138:	beq	13154 <__assert_fail@plt+0x1ad4>
   1313c:	movw	r2, #49949	; 0xc31d
   13140:	str	r4, [sp]
   13144:	mov	r0, r6
   13148:	mov	r1, r7
   1314c:	movt	r2, #1
   13150:	b	13168 <__assert_fail@plt+0x1ae8>
   13154:	movw	r2, #51183	; 0xc7ef
   13158:	mov	r0, r6
   1315c:	mov	r1, r7
   13160:	mov	r3, r4
   13164:	movt	r2, #1
   13168:	bl	11548 <snprintf@plt>
   1316c:	mov	r0, r6
   13170:	sub	sp, fp, #16
   13174:	pop	{r4, r5, r6, r7, fp, pc}
   13178:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1317c:	add	fp, sp, #24
   13180:	sub	sp, sp, #80	; 0x50
   13184:	movw	r7, #59084	; 0xe6cc
   13188:	mov	r4, r0
   1318c:	movt	r7, #2
   13190:	ldr	r0, [r7]
   13194:	and	r0, r0, #3
   13198:	cmp	r0, #3
   1319c:	bne	131b4 <__assert_fail@plt+0x1b34>
   131a0:	movw	r2, #49957	; 0xc325
   131a4:	mov	r0, #1
   131a8:	mov	r1, #0
   131ac:	movt	r2, #1
   131b0:	bl	11488 <error@plt>
   131b4:	add	r5, sp, #8
   131b8:	vmov.i32	q8, #0	; 0x00000000
   131bc:	movw	r6, #59092	; 0xe6d4
   131c0:	mov	r1, #8
   131c4:	add	r0, r5, #8
   131c8:	movt	r6, #2
   131cc:	vst1.64	{d16-d17}, [r0]
   131d0:	mov	r0, #0
   131d4:	str	r0, [sp, #36]	; 0x24
   131d8:	str	r0, [sp, #32]
   131dc:	movw	r0, #52580	; 0xcd64
   131e0:	movt	r0, #16845	; 0x41cd
   131e4:	str	r0, [sp, #12]
   131e8:	movw	r0, #0
   131ec:	movt	r0, #65408	; 0xff80
   131f0:	str	r0, [sp, #8]
   131f4:	ldr	r0, [r6]
   131f8:	bl	146d8 <__assert_fail@plt+0x3058>
   131fc:	movw	r8, #57660	; 0xe13c
   13200:	ldr	r0, [r6]
   13204:	movt	r8, #2
   13208:	ldr	r1, [r8]
   1320c:	bl	14aa8 <__assert_fail@plt+0x3428>
   13210:	ldr	r0, [r6]
   13214:	movw	r1, #13296	; 0x33f0
   13218:	mov	r2, r5
   1321c:	movt	r1, #1
   13220:	bl	14a9c <__assert_fail@plt+0x341c>
   13224:	ldr	r0, [r6]
   13228:	mov	r1, r4
   1322c:	bl	14ab0 <__assert_fail@plt+0x3430>
   13230:	cmp	r0, #0
   13234:	beq	1324c <__assert_fail@plt+0x1bcc>
   13238:	movw	r2, #49988	; 0xc344
   1323c:	mov	r0, #1
   13240:	mov	r1, #0
   13244:	movt	r2, #1
   13248:	bl	11488 <error@plt>
   1324c:	ldr	r0, [r7]
   13250:	tst	r0, #16
   13254:	bne	132ac <__assert_fail@plt+0x1c2c>
   13258:	tst	r0, #64	; 0x40
   1325c:	beq	13364 <__assert_fail@plt+0x1ce4>
   13260:	movw	r0, #59096	; 0xe6d8
   13264:	movt	r0, #2
   13268:	ldr	r1, [r0]
   1326c:	mov	r0, #3
   13270:	tst	r1, #4
   13274:	moveq	r0, #1
   13278:	tsteq	r1, #2
   1327c:	beq	132e8 <__assert_fail@plt+0x1c68>
   13280:	add	r1, sp, #40	; 0x28
   13284:	vmov.i32	q8, #0	; 0x00000000
   13288:	add	r2, r1, #17
   1328c:	add	r1, r1, #1
   13290:	vst1.8	{d16-d17}, [r1]
   13294:	mov	r1, #0
   13298:	vst1.8	{d16-d17}, [r2]
   1329c:	str	r1, [sp, #76]	; 0x4c
   132a0:	str	r1, [sp, #72]	; 0x48
   132a4:	mov	r1, #36	; 0x24
   132a8:	b	13310 <__assert_fail@plt+0x1c90>
   132ac:	add	r3, sp, #40	; 0x28
   132b0:	vmov.i32	q8, #0	; 0x00000000
   132b4:	mov	r1, #40	; 0x28
   132b8:	add	r0, r3, #19
   132bc:	vst1.8	{d16-d17}, [r0]
   132c0:	add	r0, r3, #3
   132c4:	vst1.8	{d16-d17}, [r0]
   132c8:	mov	r0, #0
   132cc:	str	r0, [sp, #76]	; 0x4c
   132d0:	str	r0, [sp, #72]	; 0x48
   132d4:	movw	r0, #9991	; 0x2707
   132d8:	strh	r0, [sp, #40]	; 0x28
   132dc:	mov	r0, #4
   132e0:	strb	r0, [sp, #42]	; 0x2a
   132e4:	b	1332c <__assert_fail@plt+0x1cac>
   132e8:	add	r0, sp, #40	; 0x28
   132ec:	vmov.i32	q8, #0	; 0x00000000
   132f0:	add	r1, r0, #17
   132f4:	add	r0, r0, #1
   132f8:	vst1.8	{d16-d17}, [r1]
   132fc:	vst1.8	{d16-d17}, [r0]
   13300:	mov	r0, #0
   13304:	mov	r1, #40	; 0x28
   13308:	str	r0, [sp, #76]	; 0x4c
   1330c:	str	r0, [sp, #72]	; 0x48
   13310:	mov	r2, #68	; 0x44
   13314:	strb	r1, [sp, #41]	; 0x29
   13318:	add	r3, sp, #40	; 0x28
   1331c:	strb	r2, [sp, #40]	; 0x28
   13320:	mov	r2, #5
   13324:	strb	r2, [sp, #42]	; 0x2a
   13328:	strb	r0, [sp, #43]	; 0x2b
   1332c:	ldr	r0, [r6]
   13330:	ldr	r0, [r0]
   13334:	str	r1, [sp]
   13338:	mov	r1, #0
   1333c:	mov	r2, #4
   13340:	bl	1135c <setsockopt@plt>
   13344:	cmn	r0, #1
   13348:	bgt	13364 <__assert_fail@plt+0x1ce4>
   1334c:	bl	1153c <__errno_location@plt>
   13350:	ldr	r1, [r0]
   13354:	movw	r2, #50001	; 0xc351
   13358:	mov	r0, #1
   1335c:	movt	r2, #1
   13360:	bl	11488 <error@plt>
   13364:	ldr	r1, [r6]
   13368:	ldr	r0, [r1, #28]
   1336c:	ldr	r4, [r1, #52]	; 0x34
   13370:	bl	11404 <inet_ntoa@plt>
   13374:	ldr	r3, [r8]
   13378:	mov	r2, r0
   1337c:	movw	r0, #50012	; 0xc35c
   13380:	mov	r1, r4
   13384:	movt	r0, #1
   13388:	bl	11368 <printf@plt>
   1338c:	ldrb	r0, [r7]
   13390:	tst	r0, #32
   13394:	beq	133b0 <__assert_fail@plt+0x1d30>
   13398:	ldr	r0, [r6]
   1339c:	ldr	r1, [r0, #60]	; 0x3c
   133a0:	movw	r0, #50041	; 0xc379
   133a4:	movt	r0, #1
   133a8:	mov	r2, r1
   133ac:	bl	11368 <printf@plt>
   133b0:	movw	r0, #58924	; 0xe62c
   133b4:	movt	r0, #2
   133b8:	ldr	r1, [r0]
   133bc:	mov	r0, #10
   133c0:	bl	11608 <putc@plt>
   133c4:	ldr	r0, [r6]
   133c8:	movw	r1, #13392	; 0x3450
   133cc:	movt	r1, #1
   133d0:	bl	11b08 <__assert_fail@plt+0x488>
   133d4:	mov	r4, r0
   133d8:	ldr	r0, [r6]
   133dc:	ldr	r0, [r0, #52]	; 0x34
   133e0:	bl	19648 <argp_parse@@Base+0x12d0>
   133e4:	mov	r0, r4
   133e8:	sub	sp, fp, #24
   133ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   133f0:	push	{fp, lr}
   133f4:	mov	fp, sp
   133f8:	sub	sp, sp, #16
   133fc:	ldr	ip, [fp, #16]
   13400:	ldr	r2, [fp, #12]
   13404:	ldr	lr, [fp, #8]
   13408:	cmp	r0, #2
   1340c:	bcs	1342c <__assert_fail@plt+0x1dac>
   13410:	sub	r0, r0, #1
   13414:	str	lr, [sp]
   13418:	stmib	sp, {r2, ip}
   1341c:	clz	r0, r0
   13420:	lsr	r0, r0, #5
   13424:	bl	13508 <__assert_fail@plt+0x1e88>
   13428:	b	13440 <__assert_fail@plt+0x1dc0>
   1342c:	bne	13440 <__assert_fail@plt+0x1dc0>
   13430:	mov	r0, r3
   13434:	mov	r1, lr
   13438:	mov	r3, ip
   1343c:	bl	13ff8 <__assert_fail@plt+0x2978>
   13440:	mov	r0, #0
   13444:	mov	sp, fp
   13448:	pop	{fp, pc}
   1344c:	nop	{0}
   13450:	push	{r4, sl, fp, lr}
   13454:	add	fp, sp, #8
   13458:	vpush	{d8-d10}
   1345c:	sub	sp, sp, #24
   13460:	bl	12008 <__assert_fail@plt+0x988>
   13464:	movw	r4, #59092	; 0xe6d4
   13468:	movt	r4, #2
   1346c:	ldr	r1, [r4]
   13470:	ldr	r0, [r1, #116]	; 0x74
   13474:	cmp	r0, #0
   13478:	beq	134e8 <__assert_fail@plt+0x1e68>
   1347c:	movw	r2, #57660	; 0xe13c
   13480:	movt	r2, #2
   13484:	ldr	r2, [r2]
   13488:	cmp	r2, #8
   1348c:	bcc	134e8 <__assert_fail@plt+0x1e68>
   13490:	ldr	r2, [r1, #68]	; 0x44
   13494:	ldr	r1, [r1, #120]	; 0x78
   13498:	vldr	d1, [pc, #96]	; 13500 <__assert_fail@plt+0x1e80>
   1349c:	vldmia	r2, {d8-d9}
   134a0:	vldr	d16, [r2, #16]
   134a4:	vldr	d17, [r2, #24]
   134a8:	add	r0, r1, r0
   134ac:	vmov	s0, r0
   134b0:	vcvt.f64.u32	d18, s0
   134b4:	vdiv.f64	d10, d16, d18
   134b8:	vdiv.f64	d0, d17, d18
   134bc:	vmls.f64	d0, d10, d10
   134c0:	bl	12c78 <__assert_fail@plt+0x15f8>
   134c4:	movw	r0, #51297	; 0xc861
   134c8:	vmov	r2, r3, d8
   134cc:	vstr	d10, [sp]
   134d0:	vstr	d9, [sp, #8]
   134d4:	vstr	d0, [sp, #16]
   134d8:	movt	r0, #1
   134dc:	bl	11368 <printf@plt>
   134e0:	ldr	r0, [r4]
   134e4:	ldr	r0, [r0, #116]	; 0x74
   134e8:	clz	r0, r0
   134ec:	lsr	r0, r0, #5
   134f0:	sub	sp, fp, #32
   134f4:	vpop	{d8-d10}
   134f8:	pop	{r4, sl, fp, pc}
   134fc:	nop	{0}
   13500:	rscsle	sl, r1, #252, 18	; 0x3f0000
   13504:	svccc	0x0040624d
   13508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1350c:	add	fp, sp, #28
   13510:	sub	sp, sp, #4
   13514:	vpush	{d8}
   13518:	sub	sp, sp, #40	; 0x28
   1351c:	mov	r7, r1
   13520:	mov	r8, r0
   13524:	add	r0, sp, #16
   13528:	mov	r1, #0
   1352c:	mov	r9, r3
   13530:	mov	r4, #0
   13534:	bl	1147c <gettimeofday@plt>
   13538:	ldr	r0, [fp, #8]
   1353c:	mov	r1, #60	; 0x3c
   13540:	ldr	r5, [fp, #12]
   13544:	vmov.i32	d8, #0	; 0x00000000
   13548:	ldrb	r0, [r0]
   1354c:	and	r1, r1, r0, lsl #2
   13550:	ldr	r0, [fp, #16]
   13554:	mov	sl, r1
   13558:	sub	r6, r0, r1
   1355c:	bic	r0, r6, #7
   13560:	cmp	r0, #8
   13564:	beq	135dc <__assert_fail@plt+0x1f5c>
   13568:	ldr	r0, [r5, #8]
   1356c:	ldr	r1, [r5, #12]
   13570:	str	r1, [sp, #28]
   13574:	str	r0, [sp, #24]
   13578:	add	r0, sp, #16
   1357c:	add	r1, sp, #24
   13580:	bl	12c24 <__assert_fail@plt+0x15a4>
   13584:	vldr	s2, [sp, #20]
   13588:	vldr	s0, [sp, #16]
   1358c:	vldr	d16, [pc, #1012]	; 13988 <__assert_fail@plt+0x2308>
   13590:	vldr	d17, [r7]
   13594:	vldr	d18, [r7, #16]
   13598:	vldr	d19, [r7, #24]
   1359c:	mov	r4, #1
   135a0:	vcvt.f64.s32	d20, s2
   135a4:	vcvt.f64.s32	d21, s0
   135a8:	vdiv.f64	d8, d20, d16
   135ac:	vmla.f64	d8, d21, d16
   135b0:	vcmpe.f64	d8, d17
   135b4:	vadd.f64	d16, d18, d8
   135b8:	vmla.f64	d19, d8, d8
   135bc:	vmrs	APSR_nzcv, fpscr
   135c0:	vstr	d16, [r7, #16]
   135c4:	vstr	d19, [r7, #24]
   135c8:	vstrmi	d8, [r7]
   135cc:	vldr	d16, [r7, #8]
   135d0:	vcmpe.f64	d8, d16
   135d4:	vmrs	APSR_nzcv, fpscr
   135d8:	vstrgt	d8, [r7, #8]
   135dc:	movw	r0, #59084	; 0xe6cc
   135e0:	movt	r0, #2
   135e4:	ldr	r0, [r0]
   135e8:	tst	r0, #8
   135ec:	bne	13afc <__assert_fail@plt+0x247c>
   135f0:	tst	r0, #1
   135f4:	bne	13ad4 <__assert_fail@plt+0x2454>
   135f8:	ldr	r0, [r9, #4]
   135fc:	bl	11404 <inet_ntoa@plt>
   13600:	mov	r2, r0
   13604:	ldrh	r0, [r5, #6]
   13608:	mov	r1, r6
   1360c:	rev16	r3, r0
   13610:	movw	r0, #50058	; 0xc38a
   13614:	movt	r0, #1
   13618:	bl	11368 <printf@plt>
   1361c:	ldr	r0, [fp, #8]
   13620:	ldrb	r1, [r0, #8]
   13624:	movw	r0, #50088	; 0xc3a8
   13628:	movt	r0, #1
   1362c:	bl	11368 <printf@plt>
   13630:	cmp	r4, #0
   13634:	beq	13648 <__assert_fail@plt+0x1fc8>
   13638:	movw	r0, #50096	; 0xc3b0
   1363c:	vmov	r2, r3, d8
   13640:	movt	r0, #1
   13644:	bl	11368 <printf@plt>
   13648:	cmp	r8, #0
   1364c:	beq	1365c <__assert_fail@plt+0x1fdc>
   13650:	movw	r0, #50110	; 0xc3be
   13654:	movt	r0, #1
   13658:	bl	11368 <printf@plt>
   1365c:	cmp	sl, #21
   13660:	bcc	13ae8 <__assert_fail@plt+0x2468>
   13664:	ldr	r0, [fp, #8]
   13668:	mov	r4, sl
   1366c:	mov	r9, #0
   13670:	add	r6, r0, #20
   13674:	add	r0, r0, #24
   13678:	str	r0, [sp]
   1367c:	mov	r0, r6
   13680:	str	r6, [sp, #8]
   13684:	ldrb	r1, [r6, r9]
   13688:	cmp	r1, #67	; 0x43
   1368c:	ble	13780 <__assert_fail@plt+0x2100>
   13690:	cmp	r1, #68	; 0x44
   13694:	beq	137bc <__assert_fail@plt+0x213c>
   13698:	cmp	r1, #137	; 0x89
   1369c:	cmpne	r1, #131	; 0x83
   136a0:	bne	1380c <__assert_fail@plt+0x218c>
   136a4:	movw	r0, #51164	; 0xc7dc
   136a8:	cmp	r1, #131	; 0x83
   136ac:	mov	r1, #83	; 0x53
   136b0:	movweq	r1, #76	; 0x4c
   136b4:	movt	r0, #1
   136b8:	bl	11368 <printf@plt>
   136bc:	add	r0, r6, r9
   136c0:	ldrb	r5, [r0, #1]
   136c4:	cmp	r5, #5
   136c8:	bcc	137e4 <__assert_fail@plt+0x2164>
   136cc:	ldr	r0, [fp, #8]
   136d0:	mov	r7, #0
   136d4:	str	r4, [sp, #12]
   136d8:	add	sl, r0, r9
   136dc:	mvn	r0, r5
   136e0:	cmn	r0, #9
   136e4:	mvnls	r0, #8
   136e8:	add	r0, r5, r0
   136ec:	add	r0, r0, #4
   136f0:	bic	r8, r0, #3
   136f4:	b	13710 <__assert_fail@plt+0x2090>
   136f8:	movw	r0, #58924	; 0xe62c
   136fc:	movt	r0, #2
   13700:	ldr	r1, [r0]
   13704:	mov	r0, #10
   13708:	bl	11608 <putc@plt>
   1370c:	sub	r7, r7, #4
   13710:	sub	r0, sl, r7
   13714:	add	r6, r5, r7
   13718:	ldr	r0, [r0, #23]
   1371c:	rev	r0, r0
   13720:	cmp	r0, #0
   13724:	beq	13758 <__assert_fail@plt+0x20d8>
   13728:	rev	r0, r0
   1372c:	bl	1308c <__assert_fail@plt+0x1a0c>
   13730:	mov	r4, r0
   13734:	movw	r0, #51182	; 0xc7ee
   13738:	movt	r0, #1
   1373c:	mov	r1, r4
   13740:	bl	11368 <printf@plt>
   13744:	mov	r0, r4
   13748:	bl	19648 <argp_parse@@Base+0x12d0>
   1374c:	cmp	r6, #9
   13750:	bge	136f8 <__assert_fail@plt+0x2078>
   13754:	b	1376c <__assert_fail@plt+0x20ec>
   13758:	movw	r0, #51173	; 0xc7e5
   1375c:	movt	r0, #1
   13760:	bl	11368 <printf@plt>
   13764:	cmp	r6, #9
   13768:	bge	136f8 <__assert_fail@plt+0x2078>
   1376c:	ldr	r0, [sp, #12]
   13770:	sub	r0, r0, #6
   13774:	sub	sl, r0, r8
   13778:	add	r0, r9, r8
   1377c:	b	13a58 <__assert_fail@plt+0x23d8>
   13780:	cmp	r1, #1
   13784:	beq	137f0 <__assert_fail@plt+0x2170>
   13788:	cmp	r1, #7
   1378c:	bne	13804 <__assert_fail@plt+0x2184>
   13790:	add	r1, r9, #2
   13794:	mov	r7, r6
   13798:	ldrb	r0, [r0, #1]
   1379c:	sub	sl, r4, #2
   137a0:	ldrb	r5, [r7, r1]!
   137a4:	cmp	r5, r0
   137a8:	movhi	r5, r0
   137ac:	cmp	r5, #5
   137b0:	bcs	13820 <__assert_fail@plt+0x21a0>
   137b4:	mov	r9, r1
   137b8:	b	13a60 <__assert_fail@plt+0x23e0>
   137bc:	add	r1, r9, #2
   137c0:	ldrb	r2, [r0, #1]
   137c4:	ldrb	r7, [r6, r1]
   137c8:	cmp	r7, r2
   137cc:	movhi	r7, r2
   137d0:	cmp	r2, #9
   137d4:	bcs	1386c <__assert_fail@plt+0x21ec>
   137d8:	sub	sl, r4, #2
   137dc:	mov	r9, r1
   137e0:	b	13a60 <__assert_fail@plt+0x23e0>
   137e4:	add	r9, r9, #2
   137e8:	sub	sl, r4, #2
   137ec:	b	13a60 <__assert_fail@plt+0x23e0>
   137f0:	movw	r0, #51273	; 0xc849
   137f4:	movt	r0, #1
   137f8:	bl	11368 <printf@plt>
   137fc:	mov	sl, r4
   13800:	b	13a60 <__assert_fail@plt+0x23e0>
   13804:	cmp	r1, #0
   13808:	beq	13ae8 <__assert_fail@plt+0x2468>
   1380c:	movw	r0, #51278	; 0xc84e
   13810:	movt	r0, #1
   13814:	bl	11368 <printf@plt>
   13818:	mov	sl, r4
   1381c:	b	13a60 <__assert_fail@plt+0x23e0>
   13820:	cmp	r9, #0
   13824:	sub	r8, r5, #4
   13828:	str	r4, [sp, #12]
   1382c:	movweq	r0, #58968	; 0xe658
   13830:	movteq	r0, #2
   13834:	ldreq	r0, [r0]
   13838:	cmpeq	r8, r0
   1383c:	beq	13a78 <__assert_fail@plt+0x23f8>
   13840:	cmp	r5, #43	; 0x2b
   13844:	bhi	13990 <__assert_fail@plt+0x2310>
   13848:	movw	r0, #58968	; 0xe658
   1384c:	mov	r1, r7
   13850:	mov	r2, r8
   13854:	movt	r0, #2
   13858:	str	r8, [r0]
   1385c:	movw	r0, #58976	; 0xe660
   13860:	movt	r0, #2
   13864:	bl	11398 <memmove@plt>
   13868:	b	139a0 <__assert_fail@plt+0x2320>
   1386c:	ldrb	r8, [r0, #3]
   13870:	movw	r0, #51227	; 0xc81b
   13874:	str	r4, [sp, #12]
   13878:	movt	r0, #1
   1387c:	bl	11368 <printf@plt>
   13880:	ldr	r0, [sp]
   13884:	cmp	r7, #9
   13888:	and	sl, r8, #15
   1388c:	mov	r6, #0
   13890:	add	r5, r0, r9
   13894:	mov	r0, r7
   13898:	movls	r0, #9
   1389c:	sub	r0, r0, #6
   138a0:	bic	r0, r0, #3
   138a4:	str	r0, [sp, #4]
   138a8:	ldr	r0, [r5, r6]
   138ac:	cmp	sl, #0
   138b0:	addne	r1, r6, #5
   138b4:	andsne	r1, r1, #4
   138b8:	bne	1391c <__assert_fail@plt+0x229c>
   138bc:	rev	r2, r0
   138c0:	add	r0, sp, #24
   138c4:	mov	r1, #16
   138c8:	bl	12cdc <__assert_fail@plt+0x165c>
   138cc:	mov	r1, r0
   138d0:	movw	r0, #51232	; 0xc820
   138d4:	movt	r0, #1
   138d8:	bl	11368 <printf@plt>
   138dc:	movw	r0, #59084	; 0xe6cc
   138e0:	movt	r0, #2
   138e4:	ldrb	r0, [r0]
   138e8:	tst	r0, #32
   138ec:	beq	13904 <__assert_fail@plt+0x2284>
   138f0:	ldr	r0, [r5, r6]
   138f4:	rev	r1, r0
   138f8:	movw	r0, #51239	; 0xc827
   138fc:	movt	r0, #1
   13900:	bl	11368 <printf@plt>
   13904:	movw	r0, #58924	; 0xe62c
   13908:	movt	r0, #2
   1390c:	ldr	r1, [r0]
   13910:	mov	r0, #10
   13914:	bl	11608 <putc@plt>
   13918:	b	1393c <__assert_fail@plt+0x22bc>
   1391c:	bl	1308c <__assert_fail@plt+0x1a0c>
   13920:	mov	r4, r0
   13924:	movw	r0, #51182	; 0xc7ee
   13928:	movt	r0, #1
   1392c:	mov	r1, r4
   13930:	bl	11368 <printf@plt>
   13934:	mov	r0, r4
   13938:	bl	19648 <argp_parse@@Base+0x12d0>
   1393c:	add	r1, r6, #9
   13940:	add	r0, r6, #4
   13944:	cmp	r1, r7
   13948:	mov	r6, r0
   1394c:	bcc	138a8 <__assert_fail@plt+0x2228>
   13950:	ldr	r0, [sp, #12]
   13954:	ldr	r1, [sp, #4]
   13958:	tst	r8, #240	; 0xf0
   1395c:	sub	r0, r0, #8
   13960:	sub	sl, r0, r1
   13964:	add	r0, r9, r1
   13968:	add	r9, r0, #8
   1396c:	beq	13a5c <__assert_fail@plt+0x23dc>
   13970:	movw	r0, #51249	; 0xc831
   13974:	lsr	r1, r8, #4
   13978:	movt	r0, #1
   1397c:	bl	11368 <printf@plt>
   13980:	b	13a5c <__assert_fail@plt+0x23dc>
   13984:	nop	{0}
   13988:	andeq	r0, r0, r0
   1398c:	addmi	r4, pc, r0
   13990:	movw	r1, #58968	; 0xe658
   13994:	mov	r0, #0
   13998:	movt	r1, #2
   1399c:	str	r0, [r1]
   139a0:	movw	r0, #51201	; 0xc801
   139a4:	movt	r0, #1
   139a8:	bl	11368 <printf@plt>
   139ac:	ldr	r0, [fp, #8]
   139b0:	mov	r5, #0
   139b4:	add	r6, r0, r9
   139b8:	b	139d8 <__assert_fail@plt+0x2358>
   139bc:	movw	r0, #58924	; 0xe62c
   139c0:	sub	r8, r8, #4
   139c4:	movt	r0, #2
   139c8:	ldr	r1, [r0]
   139cc:	mov	r0, #10
   139d0:	bl	11608 <putc@plt>
   139d4:	mov	r5, r4
   139d8:	add	r0, r6, r5
   139dc:	ldr	r0, [r0, #23]
   139e0:	rev	r0, r0
   139e4:	cmp	r0, #0
   139e8:	beq	13a1c <__assert_fail@plt+0x239c>
   139ec:	rev	r0, r0
   139f0:	bl	1308c <__assert_fail@plt+0x1a0c>
   139f4:	mov	r4, r0
   139f8:	movw	r0, #51182	; 0xc7ee
   139fc:	movt	r0, #1
   13a00:	mov	r1, r4
   13a04:	bl	11368 <printf@plt>
   13a08:	mov	r0, r4
   13a0c:	bl	19648 <argp_parse@@Base+0x12d0>
   13a10:	cmp	r8, #5
   13a14:	bge	13a30 <__assert_fail@plt+0x23b0>
   13a18:	b	13a48 <__assert_fail@plt+0x23c8>
   13a1c:	movw	r0, #51173	; 0xc7e5
   13a20:	movt	r0, #1
   13a24:	bl	11368 <printf@plt>
   13a28:	cmp	r8, #5
   13a2c:	blt	13a48 <__assert_fail@plt+0x23c8>
   13a30:	add	r4, r5, #4
   13a34:	cmp	r4, #40	; 0x28
   13a38:	bcc	139bc <__assert_fail@plt+0x233c>
   13a3c:	movw	r0, #51207	; 0xc807
   13a40:	movt	r0, #1
   13a44:	bl	11368 <printf@plt>
   13a48:	ldr	r0, [sp, #12]
   13a4c:	sub	r0, r0, #6
   13a50:	sub	sl, r0, r5
   13a54:	add	r0, r9, r5
   13a58:	add	r9, r0, #6
   13a5c:	ldr	r6, [sp, #8]
   13a60:	add	r9, r9, #1
   13a64:	sub	r4, sl, #1
   13a68:	cmp	sl, #21
   13a6c:	add	r0, r6, r9
   13a70:	bgt	13684 <__assert_fail@plt+0x2004>
   13a74:	b	13ae8 <__assert_fail@plt+0x2468>
   13a78:	mov	r6, r1
   13a7c:	movw	r1, #58976	; 0xe660
   13a80:	mov	r0, r7
   13a84:	mov	r2, r8
   13a88:	movt	r1, #2
   13a8c:	bl	113f8 <memcmp@plt>
   13a90:	cmp	r0, #0
   13a94:	bne	13840 <__assert_fail@plt+0x21c0>
   13a98:	movw	r0, #59084	; 0xe6cc
   13a9c:	movt	r0, #2
   13aa0:	ldrb	r0, [r0]
   13aa4:	tst	r0, #1
   13aa8:	bne	13840 <__assert_fail@plt+0x21c0>
   13aac:	movw	r0, #51186	; 0xc7f2
   13ab0:	movt	r0, #1
   13ab4:	bl	11368 <printf@plt>
   13ab8:	sub	r0, r5, #1
   13abc:	asr	r1, r0, #31
   13ac0:	add	r0, r0, r1, lsr #30
   13ac4:	bic	r0, r0, #3
   13ac8:	add	r9, r0, r6
   13acc:	sub	sl, sl, r0
   13ad0:	b	13a5c <__assert_fail@plt+0x23dc>
   13ad4:	movw	r0, #58924	; 0xe62c
   13ad8:	movt	r0, #2
   13adc:	ldr	r1, [r0]
   13ae0:	mov	r0, #8
   13ae4:	b	13af8 <__assert_fail@plt+0x2478>
   13ae8:	movw	r0, #58924	; 0xe62c
   13aec:	movt	r0, #2
   13af0:	ldr	r1, [r0]
   13af4:	mov	r0, #10
   13af8:	bl	11608 <putc@plt>
   13afc:	mov	r0, #0
   13b00:	sub	sp, fp, #40	; 0x28
   13b04:	vpop	{d8}
   13b08:	add	sp, sp, #4
   13b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b14:	add	fp, sp, #28
   13b18:	sub	sp, sp, #4
   13b1c:	mov	r6, r0
   13b20:	mov	r9, r0
   13b24:	mov	r1, #60	; 0x3c
   13b28:	ldrb	r0, [r6, #8]!
   13b2c:	and	r7, r1, r0, lsl #2
   13b30:	movw	r0, #59084	; 0xe6cc
   13b34:	movt	r0, #2
   13b38:	ldrb	r0, [r0]
   13b3c:	tst	r0, #32
   13b40:	beq	13bb0 <__assert_fail@plt+0x2530>
   13b44:	movw	r0, #51022	; 0xc74e
   13b48:	str	r6, [sp]
   13b4c:	movt	r0, #1
   13b50:	bl	11368 <printf@plt>
   13b54:	movw	sl, #54237	; 0xd3dd
   13b58:	movw	r8, #51035	; 0xc75b
   13b5c:	movw	r5, #51037	; 0xc75d
   13b60:	add	r6, r9, #8
   13b64:	mov	r4, #0
   13b68:	movt	sl, #1
   13b6c:	movt	r8, #1
   13b70:	movt	r5, #1
   13b74:	ldrb	r1, [r6, r4]
   13b78:	tst	r4, #1
   13b7c:	mov	r2, r8
   13b80:	mov	r0, r5
   13b84:	moveq	r2, sl
   13b88:	bl	11368 <printf@plt>
   13b8c:	add	r4, r4, #1
   13b90:	cmp	r4, #20
   13b94:	bne	13b74 <__assert_fail@plt+0x24f4>
   13b98:	movw	r0, #58924	; 0xe62c
   13b9c:	movt	r0, #2
   13ba0:	ldr	r1, [r0]
   13ba4:	mov	r0, #10
   13ba8:	bl	11608 <putc@plt>
   13bac:	ldr	r6, [sp]
   13bb0:	movw	r0, #51360	; 0xc8a0
   13bb4:	movt	r0, #1
   13bb8:	bl	114a0 <puts@plt>
   13bbc:	ldrb	r0, [r9, #8]
   13bc0:	ldrb	r3, [r9, #9]
   13bc4:	lsr	r1, r0, #4
   13bc8:	and	r2, r0, #15
   13bcc:	movw	r0, #51044	; 0xc764
   13bd0:	movt	r0, #1
   13bd4:	bl	11368 <printf@plt>
   13bd8:	ldrh	r1, [r9, #10]
   13bdc:	rev	r0, r1
   13be0:	cmp	r1, #8192	; 0x2000
   13be4:	rorhi	r1, r0, #16
   13be8:	ldrh	r0, [r9, #12]
   13bec:	rev16	r2, r0
   13bf0:	movw	r0, #51060	; 0xc774
   13bf4:	movt	r0, #1
   13bf8:	bl	11368 <printf@plt>
   13bfc:	ldrh	r0, [r9, #14]
   13c00:	rev	r0, r0
   13c04:	lsr	r1, r0, #29
   13c08:	ubfx	r2, r0, #16, #13
   13c0c:	movw	r0, #51071	; 0xc77f
   13c10:	movt	r0, #1
   13c14:	bl	11368 <printf@plt>
   13c18:	ldrh	r0, [r9, #18]
   13c1c:	ldrb	r1, [r9, #16]
   13c20:	ldrb	r2, [r9, #17]
   13c24:	rev16	r3, r0
   13c28:	movw	r0, #51083	; 0xc78b
   13c2c:	movt	r0, #1
   13c30:	bl	11368 <printf@plt>
   13c34:	ldr	r0, [r9, #20]
   13c38:	bl	11404 <inet_ntoa@plt>
   13c3c:	movw	r5, #51101	; 0xc79d
   13c40:	mov	r1, r0
   13c44:	movt	r5, #1
   13c48:	mov	r0, r5
   13c4c:	bl	11368 <printf@plt>
   13c50:	ldr	r0, [r9, #24]
   13c54:	bl	11404 <inet_ntoa@plt>
   13c58:	mov	r1, r0
   13c5c:	mov	r0, r5
   13c60:	bl	11368 <printf@plt>
   13c64:	cmp	r7, #21
   13c68:	bcc	13c90 <__assert_fail@plt+0x2610>
   13c6c:	movw	r5, #51055	; 0xc76f
   13c70:	add	r4, r6, #20
   13c74:	movt	r5, #1
   13c78:	ldrb	r1, [r4], #1
   13c7c:	mov	r0, r5
   13c80:	bl	11368 <printf@plt>
   13c84:	sub	r7, r7, #1
   13c88:	cmp	r7, #20
   13c8c:	bhi	13c78 <__assert_fail@plt+0x25f8>
   13c90:	movw	r5, #58924	; 0xe62c
   13c94:	mov	r0, #10
   13c98:	movt	r5, #2
   13c9c:	ldr	r1, [r5]
   13ca0:	bl	11608 <putc@plt>
   13ca4:	ldrb	r1, [r9, #8]
   13ca8:	ldrb	r0, [r9, #17]
   13cac:	mov	r2, #60	; 0x3c
   13cb0:	and	r1, r2, r1, lsl #2
   13cb4:	cmp	r0, #1
   13cb8:	add	r6, r6, r1
   13cbc:	beq	13d24 <__assert_fail@plt+0x26a4>
   13cc0:	cmp	r0, #17
   13cc4:	beq	13cf8 <__assert_fail@plt+0x2678>
   13cc8:	cmp	r0, #6
   13ccc:	subne	sp, fp, #28
   13cd0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cd4:	ldrb	r0, [r6]
   13cd8:	ldrb	r1, [r6, #1]
   13cdc:	ldrb	r2, [r6, #2]
   13ce0:	ldrb	r3, [r6, #3]
   13ce4:	orr	r1, r1, r0, lsl #8
   13ce8:	movw	r0, #50626	; 0xc5c2
   13cec:	orr	r2, r3, r2, lsl #8
   13cf0:	movt	r0, #1
   13cf4:	b	13d18 <__assert_fail@plt+0x2698>
   13cf8:	ldrb	r0, [r6]
   13cfc:	ldrb	r1, [r6, #1]
   13d00:	ldrb	r2, [r6, #2]
   13d04:	ldrb	r3, [r6, #3]
   13d08:	orr	r1, r1, r0, lsl #8
   13d0c:	movw	r0, #50667	; 0xc5eb
   13d10:	orr	r2, r3, r2, lsl #8
   13d14:	movt	r0, #1
   13d18:	sub	sp, fp, #28
   13d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d20:	b	11368 <printf@plt>
   13d24:	ldrh	r0, [r9, #10]
   13d28:	ldrb	r4, [r6]
   13d2c:	ldrb	r2, [r6, #1]
   13d30:	rev	r0, r0
   13d34:	rsb	r3, r1, r0, lsr #16
   13d38:	movw	r0, #50708	; 0xc614
   13d3c:	mov	r1, r4
   13d40:	movt	r0, #1
   13d44:	bl	11368 <printf@plt>
   13d48:	orr	r0, r4, #8
   13d4c:	cmp	r0, #8
   13d50:	bne	13d78 <__assert_fail@plt+0x26f8>
   13d54:	ldrb	r0, [r6, #4]
   13d58:	ldrb	r1, [r6, #5]
   13d5c:	ldrb	r2, [r6, #6]
   13d60:	ldrb	r3, [r6, #7]
   13d64:	orr	r1, r1, r0, lsl #8
   13d68:	movw	r0, #50740	; 0xc634
   13d6c:	orr	r2, r3, r2, lsl #8
   13d70:	movt	r0, #1
   13d74:	bl	11368 <printf@plt>
   13d78:	ldr	r1, [r5]
   13d7c:	mov	r0, #10
   13d80:	sub	sp, fp, #28
   13d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d88:	b	11608 <putc@plt>
   13d8c:	push	{r4, sl, fp, lr}
   13d90:	add	fp, sp, #8
   13d94:	movw	r3, #58364	; 0xe3fc
   13d98:	mov	r4, r0
   13d9c:	movt	r3, #2
   13da0:	ldrb	lr, [r4]
   13da4:	ldrb	r2, [r4, #1]
   13da8:	ldr	r0, [r3]
   13dac:	cmp	r0, lr
   13db0:	ldreq	r0, [r3, #4]
   13db4:	cmpeq	r0, r2
   13db8:	beq	13f90 <__assert_fail@plt+0x2910>
   13dbc:	movw	ip, #58364	; 0xe3fc
   13dc0:	movt	ip, #2
   13dc4:	mov	r3, ip
   13dc8:	ldr	r0, [r3, #12]!
   13dcc:	cmp	r0, lr
   13dd0:	ldreq	r0, [r3, #4]
   13dd4:	cmpeq	r0, r2
   13dd8:	beq	13f90 <__assert_fail@plt+0x2910>
   13ddc:	mov	r3, ip
   13de0:	ldr	r0, [r3, #24]!
   13de4:	cmp	r0, lr
   13de8:	ldreq	r0, [r3, #4]
   13dec:	cmpeq	r0, r2
   13df0:	beq	13f90 <__assert_fail@plt+0x2910>
   13df4:	mov	r3, ip
   13df8:	ldr	r0, [r3, #36]!	; 0x24
   13dfc:	cmp	r0, lr
   13e00:	ldreq	r0, [r3, #4]
   13e04:	cmpeq	r0, r2
   13e08:	beq	13f90 <__assert_fail@plt+0x2910>
   13e0c:	mov	r3, ip
   13e10:	ldr	r0, [r3, #48]!	; 0x30
   13e14:	cmp	r0, lr
   13e18:	ldreq	r0, [r3, #4]
   13e1c:	cmpeq	r0, r2
   13e20:	beq	13f90 <__assert_fail@plt+0x2910>
   13e24:	mov	r3, ip
   13e28:	ldr	r0, [r3, #60]!	; 0x3c
   13e2c:	cmp	r0, lr
   13e30:	ldreq	r0, [r3, #4]
   13e34:	cmpeq	r0, r2
   13e38:	beq	13f90 <__assert_fail@plt+0x2910>
   13e3c:	mov	r3, ip
   13e40:	ldr	r0, [r3, #72]!	; 0x48
   13e44:	cmp	r0, lr
   13e48:	ldreq	r0, [r3, #4]
   13e4c:	cmpeq	r0, r2
   13e50:	beq	13f90 <__assert_fail@plt+0x2910>
   13e54:	mov	r3, ip
   13e58:	ldr	r0, [r3, #84]!	; 0x54
   13e5c:	cmp	r0, lr
   13e60:	ldreq	r0, [r3, #4]
   13e64:	cmpeq	r0, r2
   13e68:	beq	13f90 <__assert_fail@plt+0x2910>
   13e6c:	mov	r3, ip
   13e70:	ldr	r0, [r3, #96]!	; 0x60
   13e74:	cmp	r0, lr
   13e78:	ldreq	r0, [r3, #4]
   13e7c:	cmpeq	r0, r2
   13e80:	beq	13f90 <__assert_fail@plt+0x2910>
   13e84:	mov	r3, ip
   13e88:	ldr	r0, [r3, #108]!	; 0x6c
   13e8c:	cmp	r0, lr
   13e90:	ldreq	r0, [r3, #4]
   13e94:	cmpeq	r0, r2
   13e98:	beq	13f90 <__assert_fail@plt+0x2910>
   13e9c:	mov	r3, ip
   13ea0:	ldr	r0, [r3, #120]!	; 0x78
   13ea4:	cmp	r0, lr
   13ea8:	ldreq	r0, [r3, #4]
   13eac:	cmpeq	r0, r2
   13eb0:	beq	13f90 <__assert_fail@plt+0x2910>
   13eb4:	mov	r3, ip
   13eb8:	ldr	r0, [r3, #132]!	; 0x84
   13ebc:	cmp	r0, lr
   13ec0:	ldreq	r0, [r3, #4]
   13ec4:	cmpeq	r0, r2
   13ec8:	beq	13f90 <__assert_fail@plt+0x2910>
   13ecc:	mov	r3, ip
   13ed0:	ldr	r0, [r3, #144]!	; 0x90
   13ed4:	cmp	r0, lr
   13ed8:	ldreq	r0, [r3, #4]
   13edc:	cmpeq	r0, r2
   13ee0:	beq	13f90 <__assert_fail@plt+0x2910>
   13ee4:	mov	r3, ip
   13ee8:	ldr	r0, [r3, #156]!	; 0x9c
   13eec:	cmp	r0, lr
   13ef0:	ldreq	r0, [r3, #4]
   13ef4:	cmpeq	r0, r2
   13ef8:	beq	13f90 <__assert_fail@plt+0x2910>
   13efc:	mov	r3, ip
   13f00:	ldr	r0, [r3, #168]!	; 0xa8
   13f04:	cmp	r0, lr
   13f08:	ldreq	r0, [r3, #4]
   13f0c:	cmpeq	r0, r2
   13f10:	beq	13f90 <__assert_fail@plt+0x2910>
   13f14:	mov	r3, ip
   13f18:	ldr	r0, [r3, #180]!	; 0xb4
   13f1c:	cmp	r0, lr
   13f20:	ldreq	r0, [r3, #4]
   13f24:	cmpeq	r0, r2
   13f28:	beq	13f90 <__assert_fail@plt+0x2910>
   13f2c:	mov	r3, ip
   13f30:	ldr	r0, [r3, #192]!	; 0xc0
   13f34:	cmp	r0, lr
   13f38:	ldreq	r0, [r3, #4]
   13f3c:	cmpeq	r0, r2
   13f40:	beq	13f90 <__assert_fail@plt+0x2910>
   13f44:	mov	r3, ip
   13f48:	ldr	r0, [r3, #204]!	; 0xcc
   13f4c:	cmp	r0, lr
   13f50:	ldreq	r0, [r3, #4]
   13f54:	cmpeq	r0, r2
   13f58:	beq	13f90 <__assert_fail@plt+0x2910>
   13f5c:	mov	r3, ip
   13f60:	ldr	r0, [r3, #216]!	; 0xd8
   13f64:	cmp	r0, lr
   13f68:	ldreq	r0, [r3, #4]
   13f6c:	cmpeq	r0, r2
   13f70:	beq	13f90 <__assert_fail@plt+0x2910>
   13f74:	ldr	r0, [ip, #228]!	; 0xe4
   13f78:	cmp	r0, lr
   13f7c:	bne	13fb8 <__assert_fail@plt+0x2938>
   13f80:	ldr	r0, [ip, #4]
   13f84:	mov	r3, ip
   13f88:	cmp	r0, r2
   13f8c:	bne	13fb8 <__assert_fail@plt+0x2938>
   13f90:	ldr	r0, [r3, #8]
   13f94:	bl	114a0 <puts@plt>
   13f98:	movw	r0, #59084	; 0xe6cc
   13f9c:	movt	r0, #2
   13fa0:	ldrb	r0, [r0]
   13fa4:	tst	r0, #32
   13fa8:	popeq	{r4, sl, fp, pc}
   13fac:	mov	r0, r4
   13fb0:	pop	{r4, sl, fp, lr}
   13fb4:	b	13b10 <__assert_fail@plt+0x2490>
   13fb8:	movw	r0, #51106	; 0xc7a2
   13fbc:	movt	r0, #1
   13fc0:	bl	11368 <printf@plt>
   13fc4:	b	13f98 <__assert_fail@plt+0x2918>
   13fc8:	push	{r4, sl, fp, lr}
   13fcc:	add	fp, sp, #8
   13fd0:	mov	r4, r0
   13fd4:	ldr	r0, [r0, #4]
   13fd8:	bl	11404 <inet_ntoa@plt>
   13fdc:	mov	r1, r0
   13fe0:	movw	r0, #51128	; 0xc7b8
   13fe4:	movt	r0, #1
   13fe8:	bl	11368 <printf@plt>
   13fec:	mov	r0, r4
   13ff0:	pop	{r4, sl, fp, lr}
   13ff4:	b	13b10 <__assert_fail@plt+0x2490>
   13ff8:	push	{r4, r5, r6, r7, fp, lr}
   13ffc:	add	fp, sp, #16
   14000:	mov	r4, r2
   14004:	movw	r2, #59084	; 0xe6cc
   14008:	ldrb	r1, [r1]
   1400c:	mov	r5, r3
   14010:	movt	r2, #2
   14014:	ldrb	r2, [r2]
   14018:	tst	r2, #32
   1401c:	bne	1403c <__assert_fail@plt+0x29bc>
   14020:	movw	r3, #59092	; 0xe6d4
   14024:	ldr	r2, [r4, #24]
   14028:	movt	r3, #2
   1402c:	ldr	r3, [r3]
   14030:	ldr	r3, [r3, #28]
   14034:	cmp	r2, r3
   14038:	popne	{r4, r5, r6, r7, fp, pc}
   1403c:	mov	r2, #60	; 0x3c
   14040:	and	r7, r2, r1, lsl #2
   14044:	mov	r1, #16
   14048:	bl	12f5c <__assert_fail@plt+0x18dc>
   1404c:	mov	r6, r0
   14050:	movw	r0, #50984	; 0xc728
   14054:	sub	r1, r5, r7
   14058:	movt	r0, #1
   1405c:	mov	r2, r6
   14060:	bl	11368 <printf@plt>
   14064:	mov	r0, r6
   14068:	bl	19648 <argp_parse@@Base+0x12d0>
   1406c:	movw	r5, #58604	; 0xe4ec
   14070:	ldrb	r1, [r4]
   14074:	movt	r5, #2
   14078:	ldr	r0, [r5]
   1407c:	cmp	r0, r1
   14080:	beq	1416c <__assert_fail@plt+0x2aec>
   14084:	movw	r0, #58604	; 0xe4ec
   14088:	movt	r0, #2
   1408c:	mov	r5, r0
   14090:	ldr	r2, [r5, #16]!
   14094:	cmp	r2, r1
   14098:	beq	1416c <__assert_fail@plt+0x2aec>
   1409c:	mov	r5, r0
   140a0:	ldr	r2, [r5, #32]!
   140a4:	cmp	r2, r1
   140a8:	beq	1416c <__assert_fail@plt+0x2aec>
   140ac:	mov	r5, r0
   140b0:	ldr	r2, [r5, #48]!	; 0x30
   140b4:	cmp	r2, r1
   140b8:	beq	1416c <__assert_fail@plt+0x2aec>
   140bc:	mov	r5, r0
   140c0:	ldr	r2, [r5, #64]!	; 0x40
   140c4:	cmp	r2, r1
   140c8:	beq	1416c <__assert_fail@plt+0x2aec>
   140cc:	mov	r5, r0
   140d0:	ldr	r2, [r5, #80]!	; 0x50
   140d4:	cmp	r2, r1
   140d8:	beq	1416c <__assert_fail@plt+0x2aec>
   140dc:	mov	r5, r0
   140e0:	ldr	r2, [r5, #96]!	; 0x60
   140e4:	cmp	r2, r1
   140e8:	beq	1416c <__assert_fail@plt+0x2aec>
   140ec:	mov	r5, r0
   140f0:	ldr	r2, [r5, #112]!	; 0x70
   140f4:	cmp	r2, r1
   140f8:	beq	1416c <__assert_fail@plt+0x2aec>
   140fc:	mov	r5, r0
   14100:	ldr	r2, [r5, #128]!	; 0x80
   14104:	cmp	r2, r1
   14108:	beq	1416c <__assert_fail@plt+0x2aec>
   1410c:	mov	r5, r0
   14110:	ldr	r2, [r5, #144]!	; 0x90
   14114:	cmp	r2, r1
   14118:	beq	1416c <__assert_fail@plt+0x2aec>
   1411c:	mov	r5, r0
   14120:	ldr	r2, [r5, #160]!	; 0xa0
   14124:	cmp	r2, r1
   14128:	beq	1416c <__assert_fail@plt+0x2aec>
   1412c:	mov	r5, r0
   14130:	ldr	r2, [r5, #176]!	; 0xb0
   14134:	cmp	r2, r1
   14138:	beq	1416c <__assert_fail@plt+0x2aec>
   1413c:	mov	r5, r0
   14140:	ldr	r2, [r5, #192]!	; 0xc0
   14144:	cmp	r2, r1
   14148:	beq	1416c <__assert_fail@plt+0x2aec>
   1414c:	mov	r5, r0
   14150:	ldr	r2, [r5, #208]!	; 0xd0
   14154:	cmp	r2, r1
   14158:	beq	1416c <__assert_fail@plt+0x2aec>
   1415c:	ldr	r2, [r0, #224]!	; 0xe0
   14160:	cmp	r2, r1
   14164:	mov	r5, r0
   14168:	bne	1419c <__assert_fail@plt+0x2b1c>
   1416c:	ldr	r0, [r5, #4]
   14170:	cmp	r0, #0
   14174:	beq	1417c <__assert_fail@plt+0x2afc>
   14178:	bl	114a0 <puts@plt>
   1417c:	ldr	r2, [r5, #8]
   14180:	cmp	r2, #0
   14184:	beq	14198 <__assert_fail@plt+0x2b18>
   14188:	ldr	r1, [r5, #12]
   1418c:	mov	r0, r4
   14190:	pop	{r4, r5, r6, r7, fp, lr}
   14194:	bx	r2
   14198:	pop	{r4, r5, r6, r7, fp, pc}
   1419c:	movw	r0, #51003	; 0xc73b
   141a0:	movt	r0, #1
   141a4:	pop	{r4, r5, r6, r7, fp, lr}
   141a8:	b	11368 <printf@plt>
   141ac:	push	{r4, r5, fp, lr}
   141b0:	add	fp, sp, #8
   141b4:	movw	r5, #59092	; 0xe6d4
   141b8:	mov	r4, r0
   141bc:	mov	r1, #17
   141c0:	movt	r5, #2
   141c4:	ldr	r0, [r5]
   141c8:	bl	146d8 <__assert_fail@plt+0x3058>
   141cc:	ldr	r0, [r5]
   141d0:	movw	r1, #16984	; 0x4258
   141d4:	mov	r2, #0
   141d8:	movt	r1, #1
   141dc:	bl	14a9c <__assert_fail@plt+0x341c>
   141e0:	ldr	r0, [r5]
   141e4:	mov	r1, #12
   141e8:	bl	14aa8 <__assert_fail@plt+0x3428>
   141ec:	ldr	r0, [r5]
   141f0:	mov	r1, #1
   141f4:	bl	12e58 <__assert_fail@plt+0x17d8>
   141f8:	ldr	r0, [r5]
   141fc:	mov	r1, r4
   14200:	bl	14ab0 <__assert_fail@plt+0x3430>
   14204:	cmp	r0, #0
   14208:	beq	14220 <__assert_fail@plt+0x2ba0>
   1420c:	movw	r2, #49988	; 0xc344
   14210:	mov	r0, #1
   14214:	mov	r1, #0
   14218:	movt	r2, #1
   1421c:	bl	11488 <error@plt>
   14220:	ldr	r1, [r5]
   14224:	ldr	r0, [r1, #28]
   14228:	ldr	r4, [r1, #52]	; 0x34
   1422c:	bl	11404 <inet_ntoa@plt>
   14230:	mov	r2, r0
   14234:	movw	r0, #51424	; 0xc8e0
   14238:	mov	r1, r4
   1423c:	movt	r0, #1
   14240:	bl	11368 <printf@plt>
   14244:	ldr	r0, [r5]
   14248:	movw	r1, #17152	; 0x4300
   1424c:	movt	r1, #1
   14250:	pop	{r4, r5, fp, lr}
   14254:	b	11b08 <__assert_fail@plt+0x488>
   14258:	push	{r4, r5, r6, sl, fp, lr}
   1425c:	add	fp, sp, #16
   14260:	ldr	r5, [fp, #16]
   14264:	ldr	r4, [fp, #12]
   14268:	cmp	r0, #2
   1426c:	bcs	142d8 <__assert_fail@plt+0x2c58>
   14270:	mov	r6, r0
   14274:	ldr	r0, [r3, #4]
   14278:	bl	11404 <inet_ntoa@plt>
   1427c:	mov	r2, r0
   14280:	ldrh	r0, [r4, #6]
   14284:	mov	r1, r5
   14288:	rev16	r3, r0
   1428c:	movw	r0, #50058	; 0xc38a
   14290:	movt	r0, #1
   14294:	bl	11368 <printf@plt>
   14298:	cmp	r6, #1
   1429c:	bne	142ac <__assert_fail@plt+0x2c2c>
   142a0:	movw	r0, #50110	; 0xc3be
   142a4:	movt	r0, #1
   142a8:	bl	11368 <printf@plt>
   142ac:	mov	r0, #10
   142b0:	bl	11578 <putchar@plt>
   142b4:	ldr	r0, [r4, #8]
   142b8:	bl	11404 <inet_ntoa@plt>
   142bc:	mov	r1, r0
   142c0:	movw	r0, #51468	; 0xc90c
   142c4:	movt	r0, #1
   142c8:	bl	11368 <printf@plt>
   142cc:	mov	r0, #10
   142d0:	bl	11578 <putchar@plt>
   142d4:	b	142f8 <__assert_fail@plt+0x2c78>
   142d8:	bne	142f8 <__assert_fail@plt+0x2c78>
   142dc:	ldr	r1, [fp, #8]
   142e0:	mov	r0, r3
   142e4:	mov	r2, r4
   142e8:	mov	r3, r5
   142ec:	bl	13ff8 <__assert_fail@plt+0x2978>
   142f0:	mov	r0, #0
   142f4:	pop	{r4, r5, r6, sl, fp, pc}
   142f8:	mov	r0, #0
   142fc:	pop	{r4, r5, r6, sl, fp, pc}
   14300:	mov	r0, #0
   14304:	bx	lr
   14308:	mov	r0, #0
   1430c:	bx	lr
   14310:	push	{r4, r5, fp, lr}
   14314:	add	fp, sp, #8
   14318:	movw	r5, #59092	; 0xe6d4
   1431c:	mov	r4, r0
   14320:	mov	r1, #13
   14324:	movt	r5, #2
   14328:	ldr	r0, [r5]
   1432c:	bl	146d8 <__assert_fail@plt+0x3058>
   14330:	ldr	r0, [r5]
   14334:	movw	r1, #17328	; 0x43b0
   14338:	mov	r2, #0
   1433c:	movt	r1, #1
   14340:	bl	14a9c <__assert_fail@plt+0x341c>
   14344:	ldr	r0, [r5]
   14348:	mov	r1, #20
   1434c:	bl	14aa8 <__assert_fail@plt+0x3428>
   14350:	ldr	r0, [r5]
   14354:	mov	r1, r4
   14358:	bl	14ab0 <__assert_fail@plt+0x3430>
   1435c:	cmp	r0, #0
   14360:	beq	14378 <__assert_fail@plt+0x2cf8>
   14364:	movw	r2, #49988	; 0xc344
   14368:	mov	r0, #1
   1436c:	mov	r1, #0
   14370:	movt	r2, #1
   14374:	bl	11488 <error@plt>
   14378:	ldr	r1, [r5]
   1437c:	ldr	r0, [r1, #28]
   14380:	ldr	r4, [r1, #52]	; 0x34
   14384:	bl	11404 <inet_ntoa@plt>
   14388:	mov	r2, r0
   1438c:	movw	r0, #51483	; 0xc91b
   14390:	mov	r1, r4
   14394:	movt	r0, #1
   14398:	bl	11368 <printf@plt>
   1439c:	ldr	r0, [r5]
   143a0:	movw	r1, #17668	; 0x4504
   143a4:	movt	r1, #1
   143a8:	pop	{r4, r5, fp, lr}
   143ac:	b	11b08 <__assert_fail@plt+0x488>
   143b0:	push	{r4, r5, r6, sl, fp, lr}
   143b4:	add	fp, sp, #16
   143b8:	sub	sp, sp, #16
   143bc:	ldr	r5, [fp, #16]
   143c0:	ldr	r4, [fp, #12]
   143c4:	cmp	r0, #2
   143c8:	bcs	144e0 <__assert_fail@plt+0x2e60>
   143cc:	mov	r6, r0
   143d0:	ldr	r0, [r3, #4]
   143d4:	bl	11404 <inet_ntoa@plt>
   143d8:	mov	r2, r0
   143dc:	ldrh	r0, [r4, #6]
   143e0:	mov	r1, r5
   143e4:	rev16	r3, r0
   143e8:	movw	r0, #50058	; 0xc38a
   143ec:	movt	r0, #1
   143f0:	bl	11368 <printf@plt>
   143f4:	cmp	r6, #1
   143f8:	bne	14408 <__assert_fail@plt+0x2d88>
   143fc:	movw	r0, #50110	; 0xc3be
   14400:	movt	r0, #1
   14404:	bl	11368 <printf@plt>
   14408:	mov	r0, #10
   1440c:	bl	11578 <putchar@plt>
   14410:	ldr	r0, [r4, #8]
   14414:	mov	r5, sp
   14418:	mov	r1, #16
   1441c:	rev	r2, r0
   14420:	mov	r0, r5
   14424:	bl	12cdc <__assert_fail@plt+0x165c>
   14428:	mov	r1, r0
   1442c:	movw	r0, #51525	; 0xc945
   14430:	movt	r0, #1
   14434:	bl	11368 <printf@plt>
   14438:	ldr	r0, [r4, #12]
   1443c:	mov	r1, #16
   14440:	rev	r2, r0
   14444:	mov	r0, r5
   14448:	bl	12cdc <__assert_fail@plt+0x165c>
   1444c:	mov	r1, r0
   14450:	movw	r0, #51542	; 0xc956
   14454:	movt	r0, #1
   14458:	bl	11368 <printf@plt>
   1445c:	ldr	r0, [r4, #16]
   14460:	mov	r1, #16
   14464:	rev	r2, r0
   14468:	mov	r0, r5
   1446c:	bl	12cdc <__assert_fail@plt+0x165c>
   14470:	mov	r1, r0
   14474:	movw	r0, #51559	; 0xc967
   14478:	movt	r0, #1
   1447c:	bl	11368 <printf@plt>
   14480:	movw	r0, #59084	; 0xe6cc
   14484:	movt	r0, #2
   14488:	ldrb	r0, [r0]
   1448c:	tst	r0, #32
   14490:	beq	144f8 <__assert_fail@plt+0x2e78>
   14494:	ldr	r0, [r4, #8]
   14498:	rev	r0, r0
   1449c:	bl	12cd0 <__assert_fail@plt+0x1650>
   144a0:	cmp	r0, #0
   144a4:	beq	144f8 <__assert_fail@plt+0x2e78>
   144a8:	ldr	r0, [r4, #8]
   144ac:	rev	r0, r0
   144b0:	bl	12cd0 <__assert_fail@plt+0x1650>
   144b4:	cmp	r0, #0
   144b8:	beq	144f8 <__assert_fail@plt+0x2e78>
   144bc:	ldr	r0, [r4, #8]
   144c0:	ldr	r1, [r4, #16]
   144c4:	rev	r0, r0
   144c8:	rev	r1, r1
   144cc:	sub	r1, r1, r0
   144d0:	movw	r0, #51576	; 0xc978
   144d4:	movt	r0, #1
   144d8:	bl	11368 <printf@plt>
   144dc:	b	144f8 <__assert_fail@plt+0x2e78>
   144e0:	bne	144f8 <__assert_fail@plt+0x2e78>
   144e4:	ldr	r1, [fp, #8]
   144e8:	mov	r0, r3
   144ec:	mov	r2, r4
   144f0:	mov	r3, r5
   144f4:	bl	13ff8 <__assert_fail@plt+0x2978>
   144f8:	mov	r0, #0
   144fc:	sub	sp, fp, #16
   14500:	pop	{r4, r5, r6, sl, fp, pc}
   14504:	b	12008 <__assert_fail@plt+0x988>
   14508:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1450c:	add	fp, sp, #24
   14510:	mov	r9, r0
   14514:	movw	r0, #51596	; 0xc98c
   14518:	mov	r8, r1
   1451c:	movt	r0, #1
   14520:	bl	11374 <getprotobyname@plt>
   14524:	cmp	r0, #0
   14528:	beq	1463c <__assert_fail@plt+0x2fbc>
   1452c:	ldr	r2, [r0, #8]
   14530:	mov	r7, r0
   14534:	mov	r0, #2
   14538:	mov	r1, #3
   1453c:	bl	11650 <socket@plt>
   14540:	mov	r4, r0
   14544:	cmn	r0, #1
   14548:	bgt	145a0 <__assert_fail@plt+0x2f20>
   1454c:	bl	1153c <__errno_location@plt>
   14550:	mov	r5, r0
   14554:	ldr	r0, [r0]
   14558:	cmp	r0, #13
   1455c:	movne	r6, #0
   14560:	cmpne	r0, #1
   14564:	bne	14624 <__assert_fail@plt+0x2fa4>
   14568:	mov	r0, #0
   1456c:	mov	r1, #2
   14570:	str	r0, [r5]
   14574:	mov	r0, #2
   14578:	ldr	r2, [r7, #8]
   1457c:	bl	11650 <socket@plt>
   14580:	cmn	r0, #1
   14584:	ble	14668 <__assert_fail@plt+0x2fe8>
   14588:	mov	r4, r0
   1458c:	movw	r0, #59016	; 0xe688
   14590:	movt	r0, #2
   14594:	ldr	r1, [r0]
   14598:	add	r1, r1, #1
   1459c:	str	r1, [r0]
   145a0:	mov	r0, #124	; 0x7c
   145a4:	bl	1a384 <argp_parse@@Base+0x200c>
   145a8:	mov	r6, r0
   145ac:	cmp	r0, #0
   145b0:	beq	1462c <__assert_fail@plt+0x2fac>
   145b4:	vmov.i32	q8, #0	; 0x00000000
   145b8:	add	r1, r6, #44	; 0x2c
   145bc:	add	r0, r6, #12
   145c0:	uxth	r2, r8
   145c4:	vst1.32	{d16-d17}, [r1]
   145c8:	add	r1, r6, #60	; 0x3c
   145cc:	vst1.32	{d16-d17}, [r0]
   145d0:	vst1.32	{d16-d17}, [r1]
   145d4:	mov	r1, #0
   145d8:	stm	r6, {r4, r9}
   145dc:	str	r1, [r6, #8]
   145e0:	add	r1, r6, #108	; 0x6c
   145e4:	vst1.32	{d16-d17}, [r1]
   145e8:	add	r1, r6, #92	; 0x5c
   145ec:	vst1.32	{d16-d17}, [r1]
   145f0:	add	r1, r6, #76	; 0x4c
   145f4:	vst1.32	{d16-d17}, [r1]
   145f8:	add	r1, r6, #28
   145fc:	vst1.32	{d16-d17}, [r1]
   14600:	mov	r1, #1000	; 0x3e8
   14604:	str	r1, [r6, #20]
   14608:	mov	r1, #28
   1460c:	str	r1, [r6, #56]	; 0x38
   14610:	mov	r1, #128	; 0x80
   14614:	str	r2, [r6, #60]	; 0x3c
   14618:	str	r1, [r6, #72]	; 0x48
   1461c:	mov	r1, #0
   14620:	bl	1147c <gettimeofday@plt>
   14624:	mov	r0, r6
   14628:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1462c:	mov	r0, r4
   14630:	bl	11674 <close@plt>
   14634:	mov	r0, r6
   14638:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1463c:	movw	r0, #58920	; 0xe628
   14640:	mov	r1, #29
   14644:	movt	r0, #2
   14648:	ldr	r3, [r0]
   1464c:	movw	r0, #51601	; 0xc991
   14650:	movt	r0, #1
   14654:	mov	r2, #1
   14658:	bl	11470 <fwrite@plt>
   1465c:	mov	r6, #0
   14660:	mov	r0, r6
   14664:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14668:	ldr	r0, [r5]
   1466c:	cmp	r0, #1
   14670:	cmpne	r0, #93	; 0x5d
   14674:	bne	14694 <__assert_fail@plt+0x3014>
   14678:	movw	r0, #58920	; 0xe628
   1467c:	mov	r1, #41	; 0x29
   14680:	movt	r0, #2
   14684:	ldr	r3, [r0]
   14688:	movw	r0, #51631	; 0xc9af
   1468c:	movt	r0, #1
   14690:	b	14654 <__assert_fail@plt+0x2fd4>
   14694:	cmp	r0, #13
   14698:	beq	14678 <__assert_fail@plt+0x2ff8>
   1469c:	movw	r1, #58920	; 0xe628
   146a0:	movt	r1, #2
   146a4:	ldr	r4, [r1]
   146a8:	bl	114c4 <strerror@plt>
   146ac:	movw	r1, #51673	; 0xc9d9
   146b0:	mov	r2, r0
   146b4:	mov	r0, r4
   146b8:	movt	r1, #1
   146bc:	bl	11530 <fprintf@plt>
   146c0:	b	1465c <__assert_fail@plt+0x2fdc>
   146c4:	mov	r1, #0
   146c8:	str	r1, [r0, #112]	; 0x70
   146cc:	str	r1, [r0, #116]	; 0x74
   146d0:	str	r1, [r0, #120]	; 0x78
   146d4:	bx	lr
   146d8:	str	r1, [r0, #4]
   146dc:	bx	lr
   146e0:	push	{r4, r5, r6, r7, fp, lr}
   146e4:	add	fp, sp, #16
   146e8:	sub	sp, sp, #8
   146ec:	mov	r1, #0
   146f0:	mov	r4, r0
   146f4:	bl	12d18 <__assert_fail@plt+0x1698>
   146f8:	mvn	r5, #0
   146fc:	cmp	r0, #0
   14700:	bne	14844 <__assert_fail@plt+0x31c4>
   14704:	ldr	r0, [r4, #4]
   14708:	sub	r0, r0, #13
   1470c:	cmp	r0, #6
   14710:	bcs	14728 <__assert_fail@plt+0x30a8>
   14714:	uxtb	r1, r0
   14718:	mov	r2, #51	; 0x33
   1471c:	mov	r3, #1
   14720:	tst	r3, r2, lsr r1
   14724:	bne	14734 <__assert_fail@plt+0x30b4>
   14728:	ldr	r0, [r4, #56]	; 0x38
   1472c:	add	r7, r0, #8
   14730:	b	14740 <__assert_fail@plt+0x30c0>
   14734:	movw	r1, #51792	; 0xca50
   14738:	movt	r1, #1
   1473c:	ldr	r7, [r1, r0, lsl #2]
   14740:	ldr	r0, [r4, #72]	; 0x48
   14744:	ldr	r2, [r4, #112]	; 0x70
   14748:	ldr	r1, [r4, #76]	; 0x4c
   1474c:	mov	r6, #1
   14750:	lsl	r0, r0, #3
   14754:	udiv	r3, r2, r0
   14758:	mls	r0, r3, r0, r2
   1475c:	ldrb	r2, [r1, r0, asr #3]
   14760:	and	r3, r0, #7
   14764:	bic	r2, r2, r6, lsl r3
   14768:	strb	r2, [r1, r0, asr #3]
   1476c:	ldr	r2, [r4, #4]
   14770:	cmp	r2, #17
   14774:	beq	147a0 <__assert_fail@plt+0x3120>
   14778:	cmp	r2, #13
   1477c:	beq	147b8 <__assert_fail@plt+0x3138>
   14780:	cmp	r2, #8
   14784:	bne	147d0 <__assert_fail@plt+0x3150>
   14788:	ldr	r2, [r4, #60]	; 0x3c
   1478c:	ldr	r0, [r4, #80]	; 0x50
   14790:	ldr	r3, [r4, #112]	; 0x70
   14794:	mov	r1, r7
   14798:	bl	14c04 <__assert_fail@plt+0x3584>
   1479c:	b	147e8 <__assert_fail@plt+0x3168>
   147a0:	ldr	r2, [r4, #60]	; 0x3c
   147a4:	ldr	r0, [r4, #80]	; 0x50
   147a8:	ldr	r3, [r4, #112]	; 0x70
   147ac:	mov	r1, r7
   147b0:	bl	14d54 <__assert_fail@plt+0x36d4>
   147b4:	b	147e8 <__assert_fail@plt+0x3168>
   147b8:	ldr	r2, [r4, #60]	; 0x3c
   147bc:	ldr	r0, [r4, #80]	; 0x50
   147c0:	ldr	r3, [r4, #112]	; 0x70
   147c4:	mov	r1, r7
   147c8:	bl	14ca4 <__assert_fail@plt+0x3624>
   147cc:	b	147e8 <__assert_fail@plt+0x3168>
   147d0:	ldr	r1, [r4, #112]	; 0x70
   147d4:	ldr	r3, [r4, #60]	; 0x3c
   147d8:	ldr	r0, [r4, #80]	; 0x50
   147dc:	str	r1, [sp]
   147e0:	mov	r1, r7
   147e4:	bl	14b58 <__assert_fail@plt+0x34d8>
   147e8:	ldr	r0, [r4]
   147ec:	ldr	r1, [r4, #80]	; 0x50
   147f0:	mov	r2, #16
   147f4:	add	r3, r4, #24
   147f8:	str	r3, [sp]
   147fc:	str	r2, [sp, #4]
   14800:	mov	r2, r7
   14804:	mov	r3, #0
   14808:	bl	1159c <sendto@plt>
   1480c:	cmp	r0, #0
   14810:	blt	14844 <__assert_fail@plt+0x31c4>
   14814:	mov	r3, r0
   14818:	ldr	r0, [r4, #112]	; 0x70
   1481c:	cmp	r3, r7
   14820:	add	r0, r0, #1
   14824:	str	r0, [r4, #112]	; 0x70
   14828:	beq	14840 <__assert_fail@plt+0x31c0>
   1482c:	ldr	r1, [r4, #52]	; 0x34
   14830:	movw	r0, #51683	; 0xc9e3
   14834:	mov	r2, r7
   14838:	movt	r0, #1
   1483c:	bl	11368 <printf@plt>
   14840:	mov	r5, #0
   14844:	mov	r0, r5
   14848:	sub	sp, fp, #16
   1484c:	pop	{r4, r5, r6, r7, fp, pc}
   14850:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14854:	add	fp, sp, #24
   14858:	sub	sp, sp, #24
   1485c:	mov	r4, r0
   14860:	mov	r0, #16
   14864:	add	r3, sp, #20
   14868:	str	r0, [sp, #20]
   1486c:	add	r8, r4, #84	; 0x54
   14870:	ldr	r2, [r4, #56]	; 0x38
   14874:	ldr	r0, [r4]
   14878:	ldr	r1, [r4, #80]	; 0x50
   1487c:	str	r3, [sp, #4]
   14880:	mov	r3, #0
   14884:	str	r8, [sp]
   14888:	add	r2, r2, #80	; 0x50
   1488c:	bl	11434 <recvfrom@plt>
   14890:	mvn	r7, #0
   14894:	cmp	r0, #0
   14898:	blt	14a5c <__assert_fail@plt+0x33dc>
   1489c:	mov	r6, r0
   148a0:	ldr	r0, [r4, #80]	; 0x50
   148a4:	add	r2, sp, #12
   148a8:	add	r3, sp, #16
   148ac:	mov	r1, r6
   148b0:	bl	14ba8 <__assert_fail@plt+0x3528>
   148b4:	cmn	r0, #1
   148b8:	ble	14a30 <__assert_fail@plt+0x33b0>
   148bc:	ldr	r2, [sp, #16]
   148c0:	ldrb	r1, [r2]
   148c4:	cmp	r1, #18
   148c8:	bhi	14978 <__assert_fail@plt+0x32f8>
   148cc:	movw	r5, #8448	; 0x2100
   148d0:	mov	r3, #1
   148d4:	movt	r5, #2
   148d8:	tst	r5, r3, lsl r1
   148dc:	bne	14a5c <__assert_fail@plt+0x33dc>
   148e0:	movw	r5, #16385	; 0x4001
   148e4:	movt	r5, #4
   148e8:	tst	r5, r3, lsl r1
   148ec:	beq	14978 <__assert_fail@plt+0x32f8>
   148f0:	ldrh	r3, [r2, #4]!
   148f4:	ldr	r1, [r4, #60]	; 0x3c
   148f8:	rev	r3, r3
   148fc:	cmp	r1, r3, lsr #16
   14900:	beq	14918 <__assert_fail@plt+0x3298>
   14904:	movw	r1, #59016	; 0xe688
   14908:	movt	r1, #2
   1490c:	ldr	r1, [r1]
   14910:	cmp	r1, #0
   14914:	beq	14a5c <__assert_fail@plt+0x33dc>
   14918:	cmp	r0, #0
   1491c:	bne	14a68 <__assert_fail@plt+0x33e8>
   14920:	ldr	r3, [r4, #116]	; 0x74
   14924:	ldr	r0, [r4, #72]	; 0x48
   14928:	ldr	ip, [r4, #76]	; 0x4c
   1492c:	add	r1, r3, #1
   14930:	lsl	r0, r0, #3
   14934:	str	r1, [r4, #116]	; 0x74
   14938:	ldrh	r1, [r2, #2]
   1493c:	rev	r1, r1
   14940:	lsr	r2, r1, #16
   14944:	sdiv	r2, r2, r0
   14948:	mul	r0, r2, r0
   1494c:	rsb	r2, r0, r1, lsr #16
   14950:	mov	r0, #1
   14954:	ldrb	r7, [ip, r2, lsr #3]
   14958:	and	r1, r2, #7
   1495c:	tst	r7, r0, lsl r1
   14960:	beq	149ec <__assert_fail@plt+0x336c>
   14964:	str	r3, [r4, #116]	; 0x74
   14968:	ldr	r1, [r4, #120]	; 0x78
   1496c:	add	r1, r1, #1
   14970:	str	r1, [r4, #120]	; 0x78
   14974:	b	14a00 <__assert_fail@plt+0x3380>
   14978:	ldr	r0, [r4, #28]
   1497c:	ldr	r1, [r2, #24]
   14980:	cmp	r1, r0
   14984:	bne	14a5c <__assert_fail@plt+0x33dc>
   14988:	ldrb	r0, [r2, #17]
   1498c:	cmp	r0, #1
   14990:	ldrbeq	r0, [r2, #28]
   14994:	cmpeq	r0, #8
   14998:	bne	14a5c <__assert_fail@plt+0x33dc>
   1499c:	movw	r0, #59016	; 0xe688
   149a0:	movt	r0, #2
   149a4:	ldr	r0, [r0]
   149a8:	cmp	r0, #0
   149ac:	bne	149c4 <__assert_fail@plt+0x3344>
   149b0:	ldrh	r1, [r2, #32]
   149b4:	ldr	r0, [r4, #60]	; 0x3c
   149b8:	rev16	r1, r1
   149bc:	cmp	r0, r1
   149c0:	bne	14a5c <__assert_fail@plt+0x33dc>
   149c4:	ldr	ip, [r4, #64]	; 0x40
   149c8:	mov	r7, #0
   149cc:	cmp	ip, #0
   149d0:	beq	14a5c <__assert_fail@plt+0x33dc>
   149d4:	ldr	r0, [sp, #12]
   149d8:	ldr	r1, [r4, #68]	; 0x44
   149dc:	stm	sp, {r0, r2, r6}
   149e0:	add	r2, r4, #24
   149e4:	mov	r0, #2
   149e8:	b	14a24 <__assert_fail@plt+0x33a4>
   149ec:	lsl	r0, r0, r1
   149f0:	lsr	r1, r2, #3
   149f4:	orr	r0, r7, r0
   149f8:	strb	r0, [ip, r1]
   149fc:	mov	r0, #0
   14a00:	ldr	ip, [r4, #64]	; 0x40
   14a04:	mov	r7, #0
   14a08:	cmp	ip, #0
   14a0c:	beq	14a5c <__assert_fail@plt+0x33dc>
   14a10:	ldr	r2, [sp, #12]
   14a14:	ldr	r3, [sp, #16]
   14a18:	ldr	r1, [r4, #68]	; 0x44
   14a1c:	stm	sp, {r2, r3, r6}
   14a20:	add	r2, r4, #24
   14a24:	mov	r3, r8
   14a28:	blx	ip
   14a2c:	b	14a5c <__assert_fail@plt+0x33dc>
   14a30:	movw	r0, #58920	; 0xe628
   14a34:	movt	r0, #2
   14a38:	ldr	r5, [r0]
   14a3c:	ldr	r0, [r4, #88]	; 0x58
   14a40:	bl	11404 <inet_ntoa@plt>
   14a44:	movw	r1, #51716	; 0xca04
   14a48:	mov	r3, r0
   14a4c:	mov	r0, r5
   14a50:	mov	r2, r6
   14a54:	movt	r1, #1
   14a58:	bl	11530 <fprintf@plt>
   14a5c:	mov	r0, r7
   14a60:	sub	sp, fp, #24
   14a64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a68:	movw	r0, #58920	; 0xe628
   14a6c:	movt	r0, #2
   14a70:	ldr	r7, [r0]
   14a74:	ldr	r0, [r4, #88]	; 0x58
   14a78:	bl	11404 <inet_ntoa@plt>
   14a7c:	movw	r1, #51753	; 0xca29
   14a80:	mov	r2, r0
   14a84:	mov	r0, r7
   14a88:	movt	r1, #1
   14a8c:	bl	11530 <fprintf@plt>
   14a90:	ldr	r0, [sp, #16]
   14a94:	add	r2, r0, #4
   14a98:	b	14920 <__assert_fail@plt+0x32a0>
   14a9c:	str	r1, [r0, #64]	; 0x40
   14aa0:	str	r2, [r0, #68]	; 0x44
   14aa4:	bx	lr
   14aa8:	str	r1, [r0, #56]	; 0x38
   14aac:	bx	lr
   14ab0:	push	{r4, r5, r6, sl, fp, lr}
   14ab4:	add	fp, sp, #16
   14ab8:	sub	sp, sp, #40	; 0x28
   14abc:	add	r2, sp, #8
   14ac0:	mov	r4, r0
   14ac4:	vmov.i32	q8, #0	; 0x00000000
   14ac8:	mov	r5, r1
   14acc:	add	r3, sp, #4
   14ad0:	add	r0, r2, #8
   14ad4:	vst1.64	{d16-d17}, [r0]
   14ad8:	mov	r0, #0
   14adc:	str	r0, [sp, #36]	; 0x24
   14ae0:	str	r0, [sp, #32]
   14ae4:	mov	r0, #2
   14ae8:	str	r0, [sp, #12]
   14aec:	mov	r0, #194	; 0xc2
   14af0:	str	r0, [sp, #8]
   14af4:	mov	r0, r1
   14af8:	mov	r1, #0
   14afc:	bl	11644 <getaddrinfo@plt>
   14b00:	cmp	r0, #0
   14b04:	beq	14b1c <__assert_fail@plt+0x349c>
   14b08:	mov	r0, #0
   14b0c:	bl	19648 <argp_parse@@Base+0x12d0>
   14b10:	mov	r0, #1
   14b14:	sub	sp, fp, #16
   14b18:	pop	{r4, r5, r6, sl, fp, pc}
   14b1c:	ldr	r6, [sp, #4]
   14b20:	add	r0, r4, #24
   14b24:	ldr	r2, [r6, #16]
   14b28:	ldr	r1, [r6, #20]
   14b2c:	bl	113d4 <memcpy@plt>
   14b30:	ldr	r0, [r6, #24]
   14b34:	cmp	r0, #0
   14b38:	moveq	r0, r5
   14b3c:	bl	11440 <strdup@plt>
   14b40:	str	r0, [r4, #52]	; 0x34
   14b44:	ldr	r0, [sp, #4]
   14b48:	bl	11638 <freeaddrinfo@plt>
   14b4c:	mov	r0, #0
   14b50:	sub	sp, fp, #16
   14b54:	pop	{r4, r5, r6, sl, fp, pc}
   14b58:	push	{r4, r5, fp, lr}
   14b5c:	add	fp, sp, #8
   14b60:	mvn	r4, #0
   14b64:	cmp	r1, #8
   14b68:	bcc	14ba0 <__assert_fail@plt+0x3520>
   14b6c:	mov	r5, r0
   14b70:	ldr	r0, [fp, #8]
   14b74:	mov	r4, #0
   14b78:	strb	r4, [r5, #1]
   14b7c:	strb	r2, [r5]
   14b80:	strh	r4, [r5, #2]
   14b84:	rev16	r0, r0
   14b88:	strh	r0, [r5, #6]
   14b8c:	rev16	r0, r3
   14b90:	strh	r0, [r5, #4]
   14b94:	mov	r0, r5
   14b98:	bl	14d94 <__assert_fail@plt+0x3714>
   14b9c:	strh	r0, [r5, #2]
   14ba0:	mov	r0, r4
   14ba4:	pop	{r4, r5, fp, pc}
   14ba8:	push	{r4, r5, fp, lr}
   14bac:	add	fp, sp, #8
   14bb0:	ldrb	ip, [r0]
   14bb4:	mov	r4, #60	; 0x3c
   14bb8:	and	lr, r4, ip, lsl #2
   14bbc:	mvn	ip, #0
   14bc0:	add	r4, lr, #8
   14bc4:	cmp	r4, r1
   14bc8:	bhi	14bfc <__assert_fail@plt+0x357c>
   14bcc:	add	r4, r0, lr
   14bd0:	str	r0, [r2]
   14bd4:	mov	r0, #0
   14bd8:	sub	r1, r1, lr
   14bdc:	str	r4, [r3]
   14be0:	ldrh	r5, [r4, #2]
   14be4:	strh	r0, [r4, #2]
   14be8:	mov	r0, r4
   14bec:	bl	14d94 <__assert_fail@plt+0x3714>
   14bf0:	subs	ip, r0, r5
   14bf4:	strh	r0, [r4, #2]
   14bf8:	movwne	ip, #1
   14bfc:	mov	r0, ip
   14c00:	pop	{r4, r5, fp, pc}
   14c04:	push	{r4, sl, fp, lr}
   14c08:	add	fp, sp, #8
   14c0c:	mov	r4, r0
   14c10:	mvn	r0, #0
   14c14:	cmp	r1, #8
   14c18:	popcc	{r4, sl, fp, pc}
   14c1c:	mov	r0, #8
   14c20:	str	r0, [r4]
   14c24:	rev16	r0, r3
   14c28:	strh	r0, [r4, #6]
   14c2c:	rev16	r0, r2
   14c30:	strh	r0, [r4, #4]
   14c34:	mov	r0, r4
   14c38:	bl	14d94 <__assert_fail@plt+0x3714>
   14c3c:	strh	r0, [r4, #2]
   14c40:	mov	r0, #0
   14c44:	pop	{r4, sl, fp, pc}
   14c48:	push	{r4, r5, fp, lr}
   14c4c:	add	fp, sp, #8
   14c50:	ldrb	ip, [r0]
   14c54:	mov	r4, #60	; 0x3c
   14c58:	and	lr, r4, ip, lsl #2
   14c5c:	mvn	ip, #0
   14c60:	add	r4, lr, #8
   14c64:	cmp	r4, r1
   14c68:	bhi	14c9c <__assert_fail@plt+0x361c>
   14c6c:	add	r4, r0, lr
   14c70:	str	r0, [r2]
   14c74:	mov	r0, #0
   14c78:	sub	r1, r1, lr
   14c7c:	str	r4, [r3]
   14c80:	ldrh	r5, [r4, #2]
   14c84:	strh	r0, [r4, #2]
   14c88:	mov	r0, r4
   14c8c:	bl	14d94 <__assert_fail@plt+0x3714>
   14c90:	subs	ip, r0, r5
   14c94:	strh	r0, [r4, #2]
   14c98:	movwne	ip, #1
   14c9c:	mov	r0, ip
   14ca0:	pop	{r4, r5, fp, pc}
   14ca4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ca8:	add	fp, sp, #24
   14cac:	sub	sp, sp, #16
   14cb0:	mvn	r5, #0
   14cb4:	cmp	r1, #20
   14cb8:	bcc	14d48 <__assert_fail@plt+0x36c8>
   14cbc:	mov	r6, r1
   14cc0:	mov	r4, r0
   14cc4:	add	r0, sp, #8
   14cc8:	mov	r1, #0
   14ccc:	mov	r7, r3
   14cd0:	mov	r8, r2
   14cd4:	mov	r5, #0
   14cd8:	bl	1147c <gettimeofday@plt>
   14cdc:	ldr	r1, [sp, #12]
   14ce0:	movw	r2, #19923	; 0x4dd3
   14ce4:	ldr	r0, [sp, #8]
   14ce8:	movt	r2, #4194	; 0x1062
   14cec:	smmul	r1, r1, r2
   14cf0:	asr	r2, r1, #6
   14cf4:	add	r1, r2, r1, lsr #31
   14cf8:	movw	r2, #17671	; 0x4507
   14cfc:	movt	r2, #49710	; 0xc22e
   14d00:	smmla	r2, r0, r2, r0
   14d04:	asr	r3, r2, #16
   14d08:	add	r2, r3, r2, lsr #31
   14d0c:	movw	r3, #675	; 0x2a3
   14d10:	mul	r2, r2, r3
   14d14:	mov	r3, r8
   14d18:	sub	r0, r0, r2, lsl #7
   14d1c:	mov	r2, #1000	; 0x3e8
   14d20:	mla	r0, r0, r2, r1
   14d24:	mov	r1, r6
   14d28:	mov	r2, #13
   14d2c:	rev	r0, r0
   14d30:	str	r0, [r4, #8]
   14d34:	str	r0, [r4, #12]
   14d38:	str	r0, [r4, #16]
   14d3c:	mov	r0, r4
   14d40:	str	r7, [sp]
   14d44:	bl	14b58 <__assert_fail@plt+0x34d8>
   14d48:	mov	r0, r5
   14d4c:	sub	sp, fp, #24
   14d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d54:	push	{r4, sl, fp, lr}
   14d58:	add	fp, sp, #8
   14d5c:	sub	sp, sp, #8
   14d60:	mvn	r4, #0
   14d64:	cmp	r1, #12
   14d68:	bcc	14d88 <__assert_fail@plt+0x3708>
   14d6c:	mov	ip, r2
   14d70:	mov	r4, #0
   14d74:	mov	r2, #17
   14d78:	str	r4, [r0, #8]
   14d7c:	str	r3, [sp]
   14d80:	mov	r3, ip
   14d84:	bl	14b58 <__assert_fail@plt+0x34d8>
   14d88:	mov	r0, r4
   14d8c:	sub	sp, fp, #8
   14d90:	pop	{r4, sl, fp, pc}
   14d94:	mov	r3, #0
   14d98:	cmp	r1, #2
   14d9c:	blt	14e50 <__assert_fail@plt+0x37d0>
   14da0:	push	{r4, r5, fp, lr}
   14da4:	add	fp, sp, #8
   14da8:	mvn	r2, r1
   14dac:	mov	r3, #1
   14db0:	sub	lr, r1, #2
   14db4:	cmn	r2, #4
   14db8:	mvnle	r2, #3
   14dbc:	add	r2, r2, r1
   14dc0:	add	r2, r2, #2
   14dc4:	add	r3, r3, r2, lsr #1
   14dc8:	bic	r2, r2, #1
   14dcc:	add	ip, r0, r2
   14dd0:	cmp	r3, #4
   14dd4:	bcs	14de4 <__assert_fail@plt+0x3764>
   14dd8:	mov	r3, #0
   14ddc:	mov	r4, r0
   14de0:	b	14e2c <__assert_fail@plt+0x37ac>
   14de4:	and	r5, r3, #3
   14de8:	vmov.i32	q8, #0	; 0x00000000
   14dec:	add	r1, r1, r5, lsl #1
   14df0:	sub	r3, r3, r5
   14df4:	sub	r1, r1, #2
   14df8:	add	r4, r0, r3, lsl #1
   14dfc:	sub	r1, r1, r2
   14e00:	vld1.16	{d18}, [r0]!
   14e04:	subs	r3, r3, #4
   14e08:	vaddw.u16	q8, q8, d18
   14e0c:	bne	14e00 <__assert_fail@plt+0x3780>
   14e10:	vext.8	q9, q8, q8, #8
   14e14:	cmp	r5, #0
   14e18:	vadd.i32	q8, q8, q9
   14e1c:	vdup.32	q9, d16[1]
   14e20:	vadd.i32	q8, q8, q9
   14e24:	vmov.32	r3, d16[0]
   14e28:	beq	14e44 <__assert_fail@plt+0x37c4>
   14e2c:	add	r0, r1, #2
   14e30:	ldrh	r1, [r4], #2
   14e34:	sub	r0, r0, #2
   14e38:	cmp	r0, #3
   14e3c:	add	r3, r3, r1
   14e40:	bgt	14e30 <__assert_fail@plt+0x37b0>
   14e44:	add	r0, ip, #2
   14e48:	sub	r1, lr, r2
   14e4c:	pop	{r4, r5, fp, lr}
   14e50:	cmp	r1, #1
   14e54:	ldrbeq	r0, [r0]
   14e58:	addeq	r3, r3, r0
   14e5c:	asr	r0, r3, #16
   14e60:	uxtah	r0, r0, r3
   14e64:	add	r0, r0, r0, lsr #16
   14e68:	mvn	r0, r0
   14e6c:	uxth	r0, r0
   14e70:	bx	lr

00014e74 <argp_help@@Base>:
   14e74:	push	{fp, lr}
   14e78:	mov	fp, sp
   14e7c:	sub	sp, sp, #8
   14e80:	mov	ip, r2
   14e84:	mov	r2, r1
   14e88:	str	r3, [sp]
   14e8c:	mov	r1, #0
   14e90:	mov	r3, ip
   14e94:	bl	14ea0 <argp_help@@Base+0x2c>
   14e98:	mov	sp, fp
   14e9c:	pop	{fp, pc}
   14ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ea4:	add	fp, sp, #28
   14ea8:	sub	sp, sp, #108	; 0x6c
   14eac:	cmp	r2, #0
   14eb0:	str	r1, [fp, #-96]	; 0xffffffa0
   14eb4:	str	r0, [fp, #-112]	; 0xffffff90
   14eb8:	beq	15910 <argp_help@@Base+0xa9c>
   14ebc:	ldr	r0, [fp, #8]
   14ec0:	mov	r6, r3
   14ec4:	mov	r5, r2
   14ec8:	str	r0, [fp, #-100]	; 0xffffff9c
   14ecc:	mov	r0, r2
   14ed0:	bl	11614 <flockfile@plt>
   14ed4:	movw	r8, #58848	; 0xe5e0
   14ed8:	str	r6, [fp, #-132]	; 0xffffff7c
   14edc:	movt	r8, #2
   14ee0:	ldr	r0, [r8, #36]	; 0x24
   14ee4:	cmp	r0, #0
   14ee8:	bne	15410 <argp_help@@Base+0x59c>
   14eec:	movw	r0, #51937	; 0xcae1
   14ef0:	movt	r0, #1
   14ef4:	bl	11494 <getenv@plt>
   14ef8:	mov	r1, r8
   14efc:	mov	r8, r0
   14f00:	mov	r0, #32
   14f04:	sub	r2, fp, #88	; 0x58
   14f08:	add	r3, r1, #16
   14f0c:	vld1.64	{d16-d17}, [r1], r0
   14f10:	add	r7, r2, #16
   14f14:	cmp	r8, #0
   14f18:	vld1.64	{d18-d19}, [r3]
   14f1c:	vldr	d20, [r1]
   14f20:	mov	r1, r2
   14f24:	vst1.64	{d16-d17}, [r1], r0
   14f28:	vst1.64	{d18-d19}, [r7]
   14f2c:	vstr	d20, [r1]
   14f30:	beq	15408 <argp_help@@Base+0x594>
   14f34:	str	r7, [fp, #-108]	; 0xffffff94
   14f38:	str	r3, [fp, #-104]	; 0xffffff98
   14f3c:	str	r5, [fp, #-136]	; 0xffffff78
   14f40:	ldrb	r5, [r8]
   14f44:	cmp	r5, #0
   14f48:	beq	15310 <argp_help@@Base+0x49c>
   14f4c:	bl	114e8 <__ctype_b_loc@plt>
   14f50:	movw	r7, #52600	; 0xcd78
   14f54:	str	r0, [fp, #-92]	; 0xffffffa4
   14f58:	movt	r7, #1
   14f5c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14f60:	uxtb	r1, r5
   14f64:	ldr	r0, [r0]
   14f68:	add	r1, r0, r1, lsl #1
   14f6c:	b	14f78 <argp_help@@Base+0x104>
   14f70:	ldrb	r5, [r8, #1]!
   14f74:	add	r1, r0, r5, lsl #1
   14f78:	ldrh	r1, [r1]
   14f7c:	tst	r1, #8192	; 0x2000
   14f80:	bne	14f70 <argp_help@@Base+0xfc>
   14f84:	tst	r1, #1024	; 0x400
   14f88:	beq	152e4 <argp_help@@Base+0x470>
   14f8c:	mov	r3, r5
   14f90:	mov	r2, r8
   14f94:	b	14f9c <argp_help@@Base+0x128>
   14f98:	ldrb	r3, [r2, #1]!
   14f9c:	uxtb	r6, r3
   14fa0:	add	r1, r0, r6, lsl #1
   14fa4:	ldrh	r1, [r1]
   14fa8:	tst	r1, #8
   14fac:	bne	14f98 <argp_help@@Base+0x124>
   14fb0:	cmp	r6, #95	; 0x5f
   14fb4:	cmpne	r6, #45	; 0x2d
   14fb8:	beq	14f98 <argp_help@@Base+0x124>
   14fbc:	tst	r1, #8192	; 0x2000
   14fc0:	mov	r4, r2
   14fc4:	beq	14fe0 <argp_help@@Base+0x16c>
   14fc8:	mov	r4, r2
   14fcc:	ldrb	r3, [r4, #1]!
   14fd0:	add	r1, r0, r3, lsl #1
   14fd4:	ldrh	r1, [r1]
   14fd8:	tst	r1, #8192	; 0x2000
   14fdc:	bne	14fcc <argp_help@@Base+0x158>
   14fe0:	sub	r9, r2, r8
   14fe4:	uxtb	r2, r3
   14fe8:	cmp	r2, #0
   14fec:	cmpne	r2, #44	; 0x2c
   14ff0:	bne	15040 <argp_help@@Base+0x1cc>
   14ff4:	uxtb	r0, r5
   14ff8:	mov	sl, #1
   14ffc:	cmp	r0, #110	; 0x6e
   15000:	bne	15038 <argp_help@@Base+0x1c4>
   15004:	ldrb	r0, [r8, #1]
   15008:	mov	sl, #1
   1500c:	cmp	r0, #111	; 0x6f
   15010:	bne	15038 <argp_help@@Base+0x1c4>
   15014:	ldrb	r0, [r8, #2]
   15018:	mov	sl, #1
   1501c:	cmp	r0, #45	; 0x2d
   15020:	bne	15038 <argp_help@@Base+0x1c4>
   15024:	sub	r9, r9, #3
   15028:	add	r8, r8, #3
   1502c:	mov	r5, #0
   15030:	mov	sl, #1
   15034:	b	150c4 <argp_help@@Base+0x250>
   15038:	mov	r5, #1
   1503c:	b	150c4 <argp_help@@Base+0x250>
   15040:	cmp	r2, #61	; 0x3d
   15044:	bne	1505c <argp_help@@Base+0x1e8>
   15048:	ldrb	r1, [r4, #1]!
   1504c:	add	r1, r0, r1, lsl #1
   15050:	ldrh	r1, [r1]
   15054:	tst	r1, #8192	; 0x2000
   15058:	bne	15048 <argp_help@@Base+0x1d4>
   1505c:	mov	sl, #0
   15060:	tst	r1, #2048	; 0x800
   15064:	bne	15070 <argp_help@@Base+0x1fc>
   15068:	mov	r5, #0
   1506c:	b	150c4 <argp_help@@Base+0x250>
   15070:	mov	r0, r4
   15074:	mov	r1, #0
   15078:	mov	r2, #10
   1507c:	bl	11350 <strtol@plt>
   15080:	mov	r5, r0
   15084:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15088:	sub	r4, r4, #1
   1508c:	ldr	r0, [r0]
   15090:	ldrb	r1, [r4, #1]!
   15094:	add	r1, r0, r1, lsl #1
   15098:	ldrh	r1, [r1]
   1509c:	tst	r1, #2048	; 0x800
   150a0:	bne	15090 <argp_help@@Base+0x21c>
   150a4:	mov	sl, #0
   150a8:	tst	r1, #8192	; 0x2000
   150ac:	beq	150c4 <argp_help@@Base+0x250>
   150b0:	ldrb	r1, [r4, #1]!
   150b4:	add	r1, r0, r1, lsl #1
   150b8:	ldrb	r1, [r1, #1]
   150bc:	tst	r1, #32
   150c0:	bne	150b0 <argp_help@@Base+0x23c>
   150c4:	mov	r0, r7
   150c8:	bl	11518 <strlen@plt>
   150cc:	cmp	r0, r9
   150d0:	bne	150f0 <argp_help@@Base+0x27c>
   150d4:	mov	r0, r8
   150d8:	mov	r1, r7
   150dc:	mov	r2, r9
   150e0:	bl	1165c <strncmp@plt>
   150e4:	cmp	r0, #0
   150e8:	mov	r6, r7
   150ec:	beq	15274 <argp_help@@Base+0x400>
   150f0:	add	r6, r7, #16
   150f4:	mov	r0, r6
   150f8:	bl	11518 <strlen@plt>
   150fc:	cmp	r0, r9
   15100:	bne	1511c <argp_help@@Base+0x2a8>
   15104:	mov	r0, r8
   15108:	mov	r1, r6
   1510c:	mov	r2, r9
   15110:	bl	1165c <strncmp@plt>
   15114:	cmp	r0, #0
   15118:	beq	15274 <argp_help@@Base+0x400>
   1511c:	add	r6, r7, #32
   15120:	mov	r0, r6
   15124:	bl	11518 <strlen@plt>
   15128:	cmp	r0, r9
   1512c:	bne	15148 <argp_help@@Base+0x2d4>
   15130:	mov	r0, r8
   15134:	mov	r1, r6
   15138:	mov	r2, r9
   1513c:	bl	1165c <strncmp@plt>
   15140:	cmp	r0, #0
   15144:	beq	15274 <argp_help@@Base+0x400>
   15148:	add	r6, r7, #48	; 0x30
   1514c:	mov	r0, r6
   15150:	bl	11518 <strlen@plt>
   15154:	cmp	r0, r9
   15158:	bne	15174 <argp_help@@Base+0x300>
   1515c:	mov	r0, r8
   15160:	mov	r1, r6
   15164:	mov	r2, r9
   15168:	bl	1165c <strncmp@plt>
   1516c:	cmp	r0, #0
   15170:	beq	15274 <argp_help@@Base+0x400>
   15174:	add	r6, r7, #64	; 0x40
   15178:	mov	r0, r6
   1517c:	bl	11518 <strlen@plt>
   15180:	cmp	r0, r9
   15184:	bne	151a0 <argp_help@@Base+0x32c>
   15188:	mov	r0, r8
   1518c:	mov	r1, r6
   15190:	mov	r2, r9
   15194:	bl	1165c <strncmp@plt>
   15198:	cmp	r0, #0
   1519c:	beq	15274 <argp_help@@Base+0x400>
   151a0:	add	r6, r7, #80	; 0x50
   151a4:	mov	r0, r6
   151a8:	bl	11518 <strlen@plt>
   151ac:	cmp	r0, r9
   151b0:	bne	151cc <argp_help@@Base+0x358>
   151b4:	mov	r0, r8
   151b8:	mov	r1, r6
   151bc:	mov	r2, r9
   151c0:	bl	1165c <strncmp@plt>
   151c4:	cmp	r0, #0
   151c8:	beq	15274 <argp_help@@Base+0x400>
   151cc:	add	r6, r7, #96	; 0x60
   151d0:	mov	r0, r6
   151d4:	bl	11518 <strlen@plt>
   151d8:	cmp	r0, r9
   151dc:	bne	151f8 <argp_help@@Base+0x384>
   151e0:	mov	r0, r8
   151e4:	mov	r1, r6
   151e8:	mov	r2, r9
   151ec:	bl	1165c <strncmp@plt>
   151f0:	cmp	r0, #0
   151f4:	beq	15274 <argp_help@@Base+0x400>
   151f8:	add	r6, r7, #112	; 0x70
   151fc:	mov	r0, r6
   15200:	bl	11518 <strlen@plt>
   15204:	cmp	r0, r9
   15208:	bne	15224 <argp_help@@Base+0x3b0>
   1520c:	mov	r0, r8
   15210:	mov	r1, r6
   15214:	mov	r2, r9
   15218:	bl	1165c <strncmp@plt>
   1521c:	cmp	r0, #0
   15220:	beq	15274 <argp_help@@Base+0x400>
   15224:	add	r6, r7, #128	; 0x80
   15228:	mov	r0, r6
   1522c:	bl	11518 <strlen@plt>
   15230:	cmp	r0, r9
   15234:	bne	15250 <argp_help@@Base+0x3dc>
   15238:	mov	r0, r8
   1523c:	mov	r1, r6
   15240:	mov	r2, r9
   15244:	bl	1165c <strncmp@plt>
   15248:	cmp	r0, #0
   1524c:	beq	15274 <argp_help@@Base+0x400>
   15250:	sub	sp, sp, #8
   15254:	str	r9, [sp]
   15258:	str	r8, [sp, #4]
   1525c:	movw	r3, #51998	; 0xcb1e
   15260:	mov	r1, #0
   15264:	mov	r2, #0
   15268:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1526c:	movt	r3, #1
   15270:	b	152b8 <argp_help@@Base+0x444>
   15274:	cmp	sl, #0
   15278:	beq	15288 <argp_help@@Base+0x414>
   1527c:	ldrb	r0, [r6, #14]
   15280:	cmp	r0, #0
   15284:	beq	15298 <argp_help@@Base+0x424>
   15288:	ldrb	r0, [r6, #15]
   1528c:	sub	r1, fp, #88	; 0x58
   15290:	str	r5, [r1, r0]
   15294:	b	152c0 <argp_help@@Base+0x44c>
   15298:	sub	sp, sp, #8
   1529c:	str	r9, [sp]
   152a0:	str	r8, [sp, #4]
   152a4:	movw	r3, #51951	; 0xcaef
   152a8:	mov	r1, #0
   152ac:	mov	r2, #0
   152b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   152b4:	movt	r3, #1
   152b8:	bl	1656c <argp_failure@@Base>
   152bc:	add	sp, sp, #8
   152c0:	mov	r8, r4
   152c4:	ldr	r6, [fp, #-132]	; 0xffffff7c
   152c8:	ldrb	r0, [r8], #1
   152cc:	cmp	r0, #44	; 0x2c
   152d0:	movne	r8, r4
   152d4:	ldrb	r5, [r8]
   152d8:	cmp	r5, #0
   152dc:	bne	14f5c <argp_help@@Base+0xe8>
   152e0:	b	15310 <argp_help@@Base+0x49c>
   152e4:	tst	r5, #255	; 0xff
   152e8:	beq	15310 <argp_help@@Base+0x49c>
   152ec:	sub	sp, sp, #8
   152f0:	str	r8, [sp]
   152f4:	movw	r3, #52036	; 0xcb44
   152f8:	mov	r1, #0
   152fc:	mov	r2, #0
   15300:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15304:	movt	r3, #1
   15308:	bl	1656c <argp_failure@@Base>
   1530c:	add	sp, sp, #8
   15310:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15314:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15318:	movw	r0, #52600	; 0xcd78
   1531c:	movt	r0, #1
   15320:	cmp	r2, r1
   15324:	bge	153b0 <argp_help@@Base+0x53c>
   15328:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1532c:	cmp	r2, r1
   15330:	bge	153b8 <argp_help@@Base+0x544>
   15334:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15338:	cmp	r2, r1
   1533c:	bge	153c0 <argp_help@@Base+0x54c>
   15340:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15344:	cmp	r2, r1
   15348:	bge	153c8 <argp_help@@Base+0x554>
   1534c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15350:	cmp	r2, r1
   15354:	bge	153d0 <argp_help@@Base+0x55c>
   15358:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1535c:	ldr	r5, [fp, #-136]	; 0xffffff78
   15360:	cmp	r2, r1
   15364:	bge	16364 <argp_help@@Base+0x14f0>
   15368:	ldr	r0, [fp, #-108]	; 0xffffff94
   1536c:	sub	r1, fp, #88	; 0x58
   15370:	movw	r2, #58848	; 0xe5e0
   15374:	mov	r3, r1
   15378:	movt	r2, #2
   1537c:	mov	r1, r2
   15380:	vld1.64	{d16-d17}, [r0]
   15384:	mov	r0, #32
   15388:	vld1.64	{d18-d19}, [r3], r0
   1538c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15390:	vst1.64	{d16-d17}, [r0]
   15394:	mov	r0, #36	; 0x24
   15398:	vst1.64	{d18-d19}, [r1], r0
   1539c:	mov	r0, #1
   153a0:	str	r0, [r1]
   153a4:	ldr	r0, [r3]
   153a8:	str	r0, [r2, #32]
   153ac:	b	15408 <argp_help@@Base+0x594>
   153b0:	add	r0, r0, #32
   153b4:	b	153d4 <argp_help@@Base+0x560>
   153b8:	add	r0, r0, #48	; 0x30
   153bc:	b	153d4 <argp_help@@Base+0x560>
   153c0:	add	r0, r0, #64	; 0x40
   153c4:	b	153d4 <argp_help@@Base+0x560>
   153c8:	add	r0, r0, #80	; 0x50
   153cc:	b	153d4 <argp_help@@Base+0x560>
   153d0:	add	r0, r0, #96	; 0x60
   153d4:	ldr	r5, [fp, #-136]	; 0xffffff78
   153d8:	sub	sp, sp, #8
   153dc:	movw	r1, #52117	; 0xcb95
   153e0:	str	r0, [sp, #4]
   153e4:	movw	r3, #52065	; 0xcb61
   153e8:	mov	r2, #0
   153ec:	movt	r1, #1
   153f0:	movt	r3, #1
   153f4:	str	r1, [sp]
   153f8:	mov	r1, #0
   153fc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15400:	bl	1656c <argp_failure@@Base>
   15404:	add	sp, sp, #8
   15408:	movw	r8, #58848	; 0xe5e0
   1540c:	movt	r8, #2
   15410:	ldr	r2, [r8, #32]
   15414:	mov	r0, #0
   15418:	mov	r1, #0
   1541c:	mov	r3, #0
   15420:	str	r0, [fp, #-108]	; 0xffffff94
   15424:	mov	r0, r5
   15428:	bl	1a408 <argp_parse@@Base+0x2090>
   1542c:	cmp	r0, #0
   15430:	beq	154cc <argp_help@@Base+0x658>
   15434:	mov	r4, r0
   15438:	tst	r6, #11
   1543c:	str	r5, [fp, #-136]	; 0xffffff78
   15440:	beq	1559c <argp_help@@Base+0x728>
   15444:	ldr	r0, [fp, #-112]	; 0xffffff90
   15448:	mov	r1, #0
   1544c:	bl	16774 <argp_failure@@Base+0x208>
   15450:	ldr	sl, [r0, #4]
   15454:	str	r0, [fp, #-108]	; 0xffffff94
   15458:	cmp	sl, #0
   1545c:	beq	1559c <argp_help@@Base+0x728>
   15460:	ldr	r6, [r0]
   15464:	movw	r9, #51837	; 0xca7d
   15468:	mov	r5, sl
   1546c:	movt	r9, #1
   15470:	str	r6, [fp, #-104]	; 0xffffff98
   15474:	ldr	r7, [r6, #4]
   15478:	cmp	r7, #0
   1547c:	beq	154bc <argp_help@@Base+0x648>
   15480:	ldr	r0, [r6]
   15484:	add	r8, r0, #12
   15488:	ldr	r0, [r8, #-12]
   1548c:	cmp	r0, #0
   15490:	beq	154b0 <argp_help@@Base+0x63c>
   15494:	ldrb	r1, [r8]
   15498:	tst	r1, #2
   1549c:	bne	154b0 <argp_help@@Base+0x63c>
   154a0:	mov	r1, r9
   154a4:	bl	11344 <strcmp@plt>
   154a8:	cmp	r0, #0
   154ac:	beq	154dc <argp_help@@Base+0x668>
   154b0:	subs	r7, r7, #1
   154b4:	add	r8, r8, #24
   154b8:	bne	15488 <argp_help@@Base+0x614>
   154bc:	subs	r5, r5, #1
   154c0:	add	r6, r6, #28
   154c4:	bne	15474 <argp_help@@Base+0x600>
   154c8:	b	154e8 <argp_help@@Base+0x674>
   154cc:	mov	r0, r5
   154d0:	sub	sp, fp, #28
   154d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154d8:	b	11464 <funlockfile@plt>
   154dc:	cmp	r6, #0
   154e0:	mvnne	r0, #0
   154e4:	strne	r0, [r6, #12]
   154e8:	ldr	r6, [fp, #-104]	; 0xffffff98
   154ec:	movw	r9, #53184	; 0xcfc0
   154f0:	mov	r8, sl
   154f4:	movt	r9, #1
   154f8:	ldr	r5, [r6, #4]
   154fc:	cmp	r5, #0
   15500:	beq	15540 <argp_help@@Base+0x6cc>
   15504:	ldr	r0, [r6]
   15508:	add	r7, r0, #12
   1550c:	ldr	r0, [r7, #-12]
   15510:	cmp	r0, #0
   15514:	beq	15534 <argp_help@@Base+0x6c0>
   15518:	ldrb	r1, [r7]
   1551c:	tst	r1, #2
   15520:	bne	15534 <argp_help@@Base+0x6c0>
   15524:	mov	r1, r9
   15528:	bl	11344 <strcmp@plt>
   1552c:	cmp	r0, #0
   15530:	beq	15550 <argp_help@@Base+0x6dc>
   15534:	subs	r5, r5, #1
   15538:	add	r7, r7, #24
   1553c:	bne	1550c <argp_help@@Base+0x698>
   15540:	subs	r8, r8, #1
   15544:	add	r6, r6, #28
   15548:	bne	154f8 <argp_help@@Base+0x684>
   1554c:	b	1555c <argp_help@@Base+0x6e8>
   15550:	cmp	r6, #0
   15554:	mvnne	r0, #0
   15558:	strne	r0, [r6, #12]
   1555c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15560:	mov	r1, #0
   15564:	add	r0, r0, #24
   15568:	str	r1, [r0], #28
   1556c:	add	r1, r1, #1
   15570:	cmp	sl, r1
   15574:	bne	15568 <argp_help@@Base+0x6f4>
   15578:	ldr	r0, [fp, #-104]	; 0xffffff98
   1557c:	movw	r3, #31048	; 0x7948
   15580:	mov	r1, sl
   15584:	mov	r2, #28
   15588:	movt	r3, #1
   1558c:	bl	1162c <qsort@plt>
   15590:	ldr	r6, [fp, #-132]	; 0xffffff7c
   15594:	movw	r8, #58848	; 0xe5e0
   15598:	movt	r8, #2
   1559c:	tst	r6, #3
   155a0:	beq	15918 <argp_help@@Base+0xaa4>
   155a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   155a8:	bl	16df8 <argp_failure@@Base+0x88c>
   155ac:	mov	r2, r0
   155b0:	add	r0, r0, #7
   155b4:	bic	r0, r0, #7
   155b8:	sub	r0, sp, r0
   155bc:	mov	sp, r0
   155c0:	mov	r1, #0
   155c4:	str	r0, [fp, #-104]	; 0xffffff98
   155c8:	bl	1156c <memset@plt>
   155cc:	mov	r7, #1
   155d0:	ldr	r1, [r4, #24]
   155d4:	ldr	r2, [r4, #28]
   155d8:	ldr	r0, [r4, #16]
   155dc:	mov	r5, r6
   155e0:	ldr	r6, [r8, #28]
   155e4:	sub	r1, r2, r1
   155e8:	cmp	r1, r0
   155ec:	bls	155f8 <argp_help@@Base+0x784>
   155f0:	mov	r0, r4
   155f4:	bl	1a4cc <argp_parse@@Base+0x2154>
   155f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   155fc:	ldr	r9, [r4, #12]
   15600:	movw	r1, #51842	; 0xca82
   15604:	str	r6, [r4, #12]
   15608:	tst	r7, #1
   1560c:	movt	r1, #1
   15610:	str	r0, [fp, #-88]	; 0xffffffa8
   15614:	mov	r0, r4
   15618:	beq	15628 <argp_help@@Base+0x7b4>
   1561c:	movw	r2, #51848	; 0xca88
   15620:	movt	r2, #1
   15624:	b	15630 <argp_help@@Base+0x7bc>
   15628:	movw	r2, #51855	; 0xca8f
   1562c:	movt	r2, #1
   15630:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15634:	bl	1ab18 <argp_parse@@Base+0x27a0>
   15638:	ldr	r1, [r4, #24]
   1563c:	ldr	r2, [r4, #28]
   15640:	ldr	r0, [r4, #16]
   15644:	ldr	r6, [r8, #28]
   15648:	sub	r1, r2, r1
   1564c:	cmp	r1, r0
   15650:	bls	1565c <argp_help@@Base+0x7e8>
   15654:	mov	r0, r4
   15658:	bl	1a4cc <argp_parse@@Base+0x2154>
   1565c:	ldr	r8, [r4, #4]
   15660:	str	r6, [r4, #4]
   15664:	mov	r6, r5
   15668:	tst	r5, #2
   1566c:	bne	15684 <argp_help@@Base+0x810>
   15670:	ldr	r0, [fp, #-108]	; 0xffffff94
   15674:	mov	r1, r4
   15678:	bl	16e60 <argp_failure@@Base+0x8f4>
   1567c:	orr	r6, r6, #2
   15680:	b	156e8 <argp_help@@Base+0x874>
   15684:	ldr	r0, [fp, #-108]	; 0xffffff94
   15688:	ldr	r0, [r0, #4]
   1568c:	cmp	r0, #0
   15690:	beq	156e8 <argp_help@@Base+0x874>
   15694:	ldr	r0, [r4, #28]
   15698:	ldr	r1, [r4, #32]
   1569c:	add	r2, r0, #12
   156a0:	cmp	r2, r1
   156a4:	bls	156c0 <argp_help@@Base+0x84c>
   156a8:	mov	r0, r4
   156ac:	mov	r1, #12
   156b0:	bl	1aa2c <argp_parse@@Base+0x26b4>
   156b4:	cmp	r0, #0
   156b8:	beq	156e8 <argp_help@@Base+0x874>
   156bc:	ldr	r0, [r4, #28]
   156c0:	movw	r1, #52584	; 0xcd68
   156c4:	movt	r1, #1
   156c8:	vldr	d16, [r1]
   156cc:	movw	r1, #11822	; 0x2e2e
   156d0:	movt	r1, #23854	; 0x5d2e
   156d4:	str	r1, [r0, #8]
   156d8:	vst1.8	{d16}, [r0]
   156dc:	ldr	r0, [r4, #28]
   156e0:	add	r0, r0, #12
   156e4:	str	r0, [r4, #28]
   156e8:	sub	sp, sp, #8
   156ec:	str	r4, [sp]
   156f0:	sub	r2, fp, #88	; 0x58
   156f4:	mov	r3, #1
   156f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   156fc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15700:	bl	17210 <argp_failure@@Base+0xca4>
   15704:	add	sp, sp, #8
   15708:	mov	sl, r0
   1570c:	ldr	r2, [r4, #24]
   15710:	ldr	r0, [r4, #28]
   15714:	ldr	r1, [r4, #16]
   15718:	sub	r2, r0, r2
   1571c:	cmp	r2, r1
   15720:	bls	1573c <argp_help@@Base+0x8c8>
   15724:	mov	r0, r4
   15728:	bl	1a4cc <argp_parse@@Base+0x2154>
   1572c:	ldr	r2, [r4, #24]
   15730:	ldr	r0, [r4, #28]
   15734:	ldr	r1, [r4, #16]
   15738:	sub	r2, r0, r2
   1573c:	cmp	r2, r1
   15740:	str	r9, [r4, #12]
   15744:	bls	15754 <argp_help@@Base+0x8e0>
   15748:	mov	r0, r4
   1574c:	bl	1a4cc <argp_parse@@Base+0x2154>
   15750:	ldr	r0, [r4, #28]
   15754:	str	r8, [r4, #4]
   15758:	movw	r8, #58848	; 0xe5e0
   1575c:	ldr	r1, [r4, #32]
   15760:	movt	r8, #2
   15764:	cmp	r0, r1
   15768:	bcc	15784 <argp_help@@Base+0x910>
   1576c:	mov	r0, r4
   15770:	mov	r1, #1
   15774:	bl	1aa2c <argp_parse@@Base+0x26b4>
   15778:	cmp	r0, #0
   1577c:	beq	15794 <argp_help@@Base+0x920>
   15780:	ldr	r0, [r4, #28]
   15784:	add	r1, r0, #1
   15788:	str	r1, [r4, #28]
   1578c:	mov	r1, #10
   15790:	strb	r1, [r0]
   15794:	mov	r7, #0
   15798:	cmp	sl, #0
   1579c:	bne	155d0 <argp_help@@Base+0x75c>
   157a0:	mov	r5, #1
   157a4:	tst	r6, #16
   157a8:	beq	157d4 <argp_help@@Base+0x960>
   157ac:	sub	sp, sp, #8
   157b0:	mov	r0, #1
   157b4:	mov	r2, #0
   157b8:	mov	r3, #0
   157bc:	stm	sp, {r0, r4}
   157c0:	ldr	r0, [fp, #-112]	; 0xffffff90
   157c4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   157c8:	bl	174bc <argp_failure@@Base+0xf50>
   157cc:	add	sp, sp, #8
   157d0:	orr	r5, r0, r5
   157d4:	ldr	r0, [fp, #-108]	; 0xffffff94
   157d8:	tst	r6, #4
   157dc:	beq	15800 <argp_help@@Base+0x98c>
   157e0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   157e4:	movw	r1, #51862	; 0xca96
   157e8:	mov	r0, r4
   157ec:	movt	r1, #1
   157f0:	mov	r3, r2
   157f4:	bl	1ab18 <argp_parse@@Base+0x27a0>
   157f8:	ldr	r0, [fp, #-108]	; 0xffffff94
   157fc:	mov	r5, #1
   15800:	tst	r6, #8
   15804:	ldrne	r1, [r0, #4]
   15808:	cmpne	r1, #0
   1580c:	bne	15928 <argp_help@@Base+0xab4>
   15810:	tst	r6, #32
   15814:	beq	15840 <argp_help@@Base+0x9cc>
   15818:	sub	sp, sp, #8
   1581c:	mov	r0, #0
   15820:	mov	r2, #1
   15824:	mov	r3, r5
   15828:	stm	sp, {r0, r4}
   1582c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15830:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15834:	bl	174bc <argp_failure@@Base+0xf50>
   15838:	add	sp, sp, #8
   1583c:	orr	r5, r0, r5
   15840:	tst	r6, #64	; 0x40
   15844:	movwne	r6, #59104	; 0xe6e0
   15848:	movtne	r6, #2
   1584c:	ldrne	r0, [r6]
   15850:	cmpne	r0, #0
   15854:	beq	158ac <argp_help@@Base+0xa38>
   15858:	cmp	r5, #0
   1585c:	beq	15898 <argp_help@@Base+0xa24>
   15860:	ldr	r0, [r4, #28]
   15864:	ldr	r1, [r4, #32]
   15868:	cmp	r0, r1
   1586c:	bcc	15888 <argp_help@@Base+0xa14>
   15870:	mov	r0, r4
   15874:	mov	r1, #1
   15878:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1587c:	cmp	r0, #0
   15880:	beq	15898 <argp_help@@Base+0xa24>
   15884:	ldr	r0, [r4, #28]
   15888:	add	r1, r0, #1
   1588c:	str	r1, [r4, #28]
   15890:	mov	r1, #10
   15894:	strb	r1, [r0]
   15898:	ldr	r2, [r6]
   1589c:	movw	r1, #51917	; 0xcacd
   158a0:	mov	r0, r4
   158a4:	movt	r1, #1
   158a8:	bl	1ab18 <argp_parse@@Base+0x27a0>
   158ac:	ldr	r0, [fp, #-136]	; 0xffffff78
   158b0:	bl	11464 <funlockfile@plt>
   158b4:	ldr	r0, [fp, #-108]	; 0xffffff94
   158b8:	cmp	r0, #0
   158bc:	beq	15908 <argp_help@@Base+0xa94>
   158c0:	ldr	r0, [r0, #12]
   158c4:	cmp	r0, #0
   158c8:	beq	158e0 <argp_help@@Base+0xa6c>
   158cc:	ldr	r5, [r0, #24]
   158d0:	bl	19648 <argp_parse@@Base+0x12d0>
   158d4:	cmp	r5, #0
   158d8:	mov	r0, r5
   158dc:	bne	158cc <argp_help@@Base+0xa58>
   158e0:	ldr	r5, [fp, #-108]	; 0xffffff94
   158e4:	ldr	r0, [r5, #4]
   158e8:	cmp	r0, #0
   158ec:	beq	15900 <argp_help@@Base+0xa8c>
   158f0:	ldr	r0, [r5]
   158f4:	bl	19648 <argp_parse@@Base+0x12d0>
   158f8:	ldr	r0, [r5, #8]
   158fc:	bl	19648 <argp_parse@@Base+0x12d0>
   15900:	mov	r0, r5
   15904:	bl	19648 <argp_parse@@Base+0x12d0>
   15908:	mov	r0, r4
   1590c:	bl	1a488 <argp_parse@@Base+0x2110>
   15910:	sub	sp, fp, #28
   15914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15918:	mov	r5, #0
   1591c:	tst	r6, #16
   15920:	bne	157ac <argp_help@@Base+0x938>
   15924:	b	157d4 <argp_help@@Base+0x960>
   15928:	cmp	r5, #0
   1592c:	str	r6, [fp, #-132]	; 0xffffff7c
   15930:	beq	1599c <argp_help@@Base+0xb28>
   15934:	mov	sl, r4
   15938:	ldr	r0, [sl, #28]!
   1593c:	mov	r2, sl
   15940:	ldr	r1, [r2, #4]!
   15944:	cmp	r0, r1
   15948:	str	r2, [fp, #-100]	; 0xffffff9c
   1594c:	bcc	15968 <argp_help@@Base+0xaf4>
   15950:	mov	r0, r4
   15954:	mov	r1, #1
   15958:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1595c:	cmp	r0, #0
   15960:	beq	15978 <argp_help@@Base+0xb04>
   15964:	ldr	r0, [sl]
   15968:	add	r1, r0, #1
   1596c:	str	r1, [sl]
   15970:	mov	r1, #10
   15974:	strb	r1, [r0]
   15978:	ldr	r0, [fp, #-108]	; 0xffffff94
   1597c:	ldr	r1, [r0, #4]
   15980:	mov	r0, #0
   15984:	str	r0, [fp, #-44]	; 0xffffffd4
   15988:	str	r0, [fp, #-48]	; 0xffffffd0
   1598c:	str	r0, [fp, #-40]	; 0xffffffd8
   15990:	cmp	r1, #0
   15994:	bne	159b8 <argp_help@@Base+0xb44>
   15998:	b	161f4 <argp_help@@Base+0x1380>
   1599c:	mov	r0, #0
   159a0:	add	sl, r4, #28
   159a4:	str	r0, [fp, #-44]	; 0xffffffd4
   159a8:	str	r0, [fp, #-48]	; 0xffffffd0
   159ac:	str	r0, [fp, #-40]	; 0xffffffd8
   159b0:	add	r0, r4, #32
   159b4:	str	r0, [fp, #-100]	; 0xffffff9c
   159b8:	ldr	r0, [fp, #-108]	; 0xffffff94
   159bc:	str	r4, [fp, #-92]	; 0xffffffa4
   159c0:	ldr	r6, [r0]
   159c4:	str	r1, [fp, #-116]	; 0xffffff8c
   159c8:	ldr	r1, [r4, #24]
   159cc:	ldr	r2, [sl]
   159d0:	ldr	r0, [r4, #16]
   159d4:	mov	r5, r4
   159d8:	ldr	r4, [r6]
   159dc:	ldr	r9, [r6, #8]
   159e0:	sub	r1, r2, r1
   159e4:	cmp	r1, r0
   159e8:	bls	159f4 <argp_help@@Base+0xb80>
   159ec:	mov	r0, r5
   159f0:	bl	1a4cc <argp_parse@@Base+0x2154>
   159f4:	mov	r0, #0
   159f8:	mov	r1, #0
   159fc:	ldr	r7, [r5, #4]
   15a00:	ldr	r3, [r5, #12]
   15a04:	str	r0, [fp, #-128]	; 0xffffff80
   15a08:	sub	r0, fp, #48	; 0x30
   15a0c:	str	r1, [r5, #4]
   15a10:	str	r5, [fp, #-84]	; 0xffffffac
   15a14:	str	r6, [fp, #-88]	; 0xffffffa8
   15a18:	str	r0, [fp, #-80]	; 0xffffffb0
   15a1c:	mov	r0, #1
   15a20:	str	r0, [fp, #-76]	; 0xffffffb4
   15a24:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15a28:	str	r3, [fp, #-120]	; 0xffffff88
   15a2c:	str	r7, [fp, #-124]	; 0xffffff84
   15a30:	str	r0, [fp, #-72]	; 0xffffffb8
   15a34:	ldrb	r0, [r4, #12]
   15a38:	tst	r0, #8
   15a3c:	bne	15a80 <argp_help@@Base+0xc0c>
   15a40:	ldr	r0, [r6, #4]
   15a44:	cmp	r0, #0
   15a48:	beq	15a80 <argp_help@@Base+0xc0c>
   15a4c:	add	r1, r4, #12
   15a50:	ldr	r2, [r1, #-12]
   15a54:	cmp	r2, #0
   15a58:	beq	15a68 <argp_help@@Base+0xbf4>
   15a5c:	ldrb	r2, [r1]
   15a60:	tst	r2, #2
   15a64:	beq	15a78 <argp_help@@Base+0xc04>
   15a68:	add	r1, r1, #24
   15a6c:	subs	r0, r0, #1
   15a70:	bne	15a50 <argp_help@@Base+0xbdc>
   15a74:	b	15a80 <argp_help@@Base+0xc0c>
   15a78:	mov	r0, #1
   15a7c:	str	r0, [fp, #-128]	; 0xffffff80
   15a80:	ldr	r7, [fp, #-92]	; 0xffffffa4
   15a84:	ldr	r2, [sl]
   15a88:	ldr	r1, [r7, #24]
   15a8c:	ldr	r0, [r7, #16]
   15a90:	sub	r1, r2, r1
   15a94:	movw	r2, #58848	; 0xe5e0
   15a98:	movt	r2, #2
   15a9c:	cmp	r1, r0
   15aa0:	ldr	r5, [r2, #8]
   15aa4:	bls	15ab0 <argp_help@@Base+0xc3c>
   15aa8:	mov	r0, r7
   15aac:	bl	1a4cc <argp_parse@@Base+0x2154>
   15ab0:	str	r5, [r7, #12]
   15ab4:	str	r6, [fp, #-104]	; 0xffffff98
   15ab8:	ldr	r7, [r6, #4]
   15abc:	cmp	r7, #0
   15ac0:	beq	15c1c <argp_help@@Base+0xda8>
   15ac4:	add	r6, r4, #12
   15ac8:	b	15afc <argp_help@@Base+0xc88>
   15acc:	cmp	r2, #0
   15ad0:	beq	15af4 <argp_help@@Base+0xc80>
   15ad4:	ldrb	r0, [r4, #12]
   15ad8:	tst	r0, #1
   15adc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15ae0:	movweq	r1, #52061	; 0xcb5d
   15ae4:	movteq	r1, #1
   15ae8:	movwne	r1, #52557	; 0xcd4d
   15aec:	movtne	r1, #1
   15af0:	bl	1ab18 <argp_parse@@Base+0x27a0>
   15af4:	add	r9, r9, #1
   15af8:	b	15c10 <argp_help@@Base+0xd9c>
   15afc:	ldr	r5, [r6]
   15b00:	tst	r5, #8
   15b04:	bne	15c10 <argp_help@@Base+0xd9c>
   15b08:	mov	r8, sl
   15b0c:	ldr	sl, [r6, #-8]
   15b10:	sub	r0, sl, #1
   15b14:	cmp	r0, #254	; 0xfe
   15b18:	bhi	15c0c <argp_help@@Base+0xd98>
   15b1c:	bl	114e8 <__ctype_b_loc@plt>
   15b20:	ldr	r0, [r0]
   15b24:	add	r0, r0, sl, lsl #1
   15b28:	ldrb	r0, [r0, #1]
   15b2c:	tst	r0, #64	; 0x40
   15b30:	beq	15c0c <argp_help@@Base+0xd98>
   15b34:	ldrb	r0, [r9]
   15b38:	cmp	sl, r0
   15b3c:	bne	15c0c <argp_help@@Base+0xd98>
   15b40:	tst	r5, #2
   15b44:	mov	sl, r8
   15b48:	bne	15af4 <argp_help@@Base+0xc80>
   15b4c:	movw	r0, #58848	; 0xe5e0
   15b50:	sub	r1, fp, #88	; 0x58
   15b54:	movt	r0, #2
   15b58:	ldr	r0, [r0, #8]
   15b5c:	bl	17ec4 <argp_failure@@Base+0x1958>
   15b60:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15b64:	ldr	r0, [sl]
   15b68:	ldr	r1, [r1]
   15b6c:	cmp	r0, r1
   15b70:	bcc	15b8c <argp_help@@Base+0xd18>
   15b74:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15b78:	mov	r1, #1
   15b7c:	bl	1aa2c <argp_parse@@Base+0x26b4>
   15b80:	cmp	r0, #0
   15b84:	beq	15b9c <argp_help@@Base+0xd28>
   15b88:	ldr	r0, [sl]
   15b8c:	add	r1, r0, #1
   15b90:	str	r1, [sl]
   15b94:	mov	r1, #45	; 0x2d
   15b98:	strb	r1, [r0]
   15b9c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15ba0:	ldr	r0, [sl]
   15ba4:	ldrb	r5, [r9]
   15ba8:	ldr	r1, [r1]
   15bac:	cmp	r0, r1
   15bb0:	bcc	15bcc <argp_help@@Base+0xd58>
   15bb4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15bb8:	mov	r1, #1
   15bbc:	bl	1aa2c <argp_parse@@Base+0x26b4>
   15bc0:	cmp	r0, #0
   15bc4:	beq	15bd8 <argp_help@@Base+0xd64>
   15bc8:	ldr	r0, [sl]
   15bcc:	add	r1, r0, #1
   15bd0:	str	r1, [sl]
   15bd4:	strb	r5, [r0]
   15bd8:	ldr	r0, [fp, #-128]	; 0xffffff80
   15bdc:	ldr	r2, [r4, #8]
   15be0:	cmp	r0, #0
   15be4:	beq	15acc <argp_help@@Base+0xc58>
   15be8:	movw	r0, #58848	; 0xe5e0
   15bec:	movt	r0, #2
   15bf0:	ldr	r0, [r0]
   15bf4:	cmp	r0, #0
   15bf8:	bne	15acc <argp_help@@Base+0xc58>
   15bfc:	cmp	r2, #0
   15c00:	movne	r0, #1
   15c04:	strne	r0, [fp, #-40]	; 0xffffffd8
   15c08:	b	15af4 <argp_help@@Base+0xc80>
   15c0c:	mov	sl, r8
   15c10:	add	r6, r6, #24
   15c14:	subs	r7, r7, #1
   15c18:	bne	15afc <argp_help@@Base+0xc88>
   15c1c:	ldrb	r0, [r4, #12]
   15c20:	tst	r0, #8
   15c24:	bne	15cf8 <argp_help@@Base+0xe84>
   15c28:	ldr	r6, [fp, #-92]	; 0xffffffa4
   15c2c:	ldr	r2, [sl]
   15c30:	ldr	r1, [r6, #24]
   15c34:	ldr	r0, [r6, #16]
   15c38:	sub	r1, r2, r1
   15c3c:	movw	r2, #58848	; 0xe5e0
   15c40:	movt	r2, #2
   15c44:	cmp	r1, r0
   15c48:	ldr	r5, [r2, #12]
   15c4c:	bls	15c58 <argp_help@@Base+0xde4>
   15c50:	mov	r0, r6
   15c54:	bl	1a4cc <argp_parse@@Base+0x2154>
   15c58:	ldr	r0, [fp, #-104]	; 0xffffff98
   15c5c:	str	r5, [r6, #12]
   15c60:	ldr	r5, [r0, #4]
   15c64:	cmp	r5, #0
   15c68:	beq	15dd8 <argp_help@@Base+0xf64>
   15c6c:	add	r6, r4, #12
   15c70:	ldr	r0, [r6, #-12]
   15c74:	cmp	r0, #0
   15c78:	beq	15ce8 <argp_help@@Base+0xe74>
   15c7c:	ldrb	r0, [r6]
   15c80:	tst	r0, #2
   15c84:	bne	15ce8 <argp_help@@Base+0xe74>
   15c88:	movw	r0, #58848	; 0xe5e0
   15c8c:	sub	r1, fp, #88	; 0x58
   15c90:	movt	r0, #2
   15c94:	ldr	r0, [r0, #12]
   15c98:	bl	17ec4 <argp_failure@@Base+0x1958>
   15c9c:	ldr	r2, [r6, #-12]
   15ca0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15ca4:	movw	r1, #52562	; 0xcd52
   15ca8:	movt	r1, #1
   15cac:	bl	1ab18 <argp_parse@@Base+0x27a0>
   15cb0:	ldr	r2, [r4, #8]
   15cb4:	cmp	r2, #0
   15cb8:	beq	15ce8 <argp_help@@Base+0xe74>
   15cbc:	ldrb	r0, [r4, #12]
   15cc0:	tst	r0, #1
   15cc4:	bne	15cd8 <argp_help@@Base+0xe64>
   15cc8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15ccc:	movw	r1, #52567	; 0xcd57
   15cd0:	movt	r1, #1
   15cd4:	b	15ce4 <argp_help@@Base+0xe70>
   15cd8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15cdc:	movw	r1, #52571	; 0xcd5b
   15ce0:	movt	r1, #1
   15ce4:	bl	1ab18 <argp_parse@@Base+0x27a0>
   15ce8:	add	r6, r6, #24
   15cec:	subs	r5, r5, #1
   15cf0:	bne	15c70 <argp_help@@Base+0xdfc>
   15cf4:	b	15dd8 <argp_help@@Base+0xf64>
   15cf8:	ldr	r6, [fp, #-92]	; 0xffffffa4
   15cfc:	ldr	r2, [sl]
   15d00:	ldr	r1, [r6, #24]
   15d04:	ldr	r0, [r6, #16]
   15d08:	sub	r1, r2, r1
   15d0c:	movw	r2, #58848	; 0xe5e0
   15d10:	movt	r2, #2
   15d14:	cmp	r1, r0
   15d18:	ldr	r5, [r2, #16]
   15d1c:	bls	15d28 <argp_help@@Base+0xeb4>
   15d20:	mov	r0, r6
   15d24:	bl	1a4cc <argp_parse@@Base+0x2154>
   15d28:	ldr	r0, [fp, #-104]	; 0xffffff98
   15d2c:	str	r5, [r6, #12]
   15d30:	ldr	r6, [r0, #4]
   15d34:	cmp	r6, #0
   15d38:	beq	15dd8 <argp_help@@Base+0xf64>
   15d3c:	add	r9, r4, #12
   15d40:	ldr	r0, [r9, #-12]
   15d44:	cmp	r0, #0
   15d48:	beq	15dcc <argp_help@@Base+0xf58>
   15d4c:	ldrb	r0, [r9]
   15d50:	tst	r0, #2
   15d54:	bne	15dcc <argp_help@@Base+0xf58>
   15d58:	movw	r0, #58848	; 0xe5e0
   15d5c:	sub	r1, fp, #88	; 0x58
   15d60:	movt	r0, #2
   15d64:	ldr	r0, [r0, #16]
   15d68:	bl	17ec4 <argp_failure@@Base+0x1958>
   15d6c:	ldr	r5, [r9, #-12]
   15d70:	mov	r0, r5
   15d74:	bl	11518 <strlen@plt>
   15d78:	cmp	r0, #0
   15d7c:	beq	15dcc <argp_help@@Base+0xf58>
   15d80:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15d84:	mov	r7, r0
   15d88:	ldr	r0, [sl]
   15d8c:	ldr	r2, [r2]
   15d90:	add	r1, r0, r7
   15d94:	cmp	r1, r2
   15d98:	bls	15db4 <argp_help@@Base+0xf40>
   15d9c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15da0:	mov	r1, r7
   15da4:	bl	1aa2c <argp_parse@@Base+0x26b4>
   15da8:	cmp	r0, #0
   15dac:	beq	15dcc <argp_help@@Base+0xf58>
   15db0:	ldr	r0, [sl]
   15db4:	mov	r1, r5
   15db8:	mov	r2, r7
   15dbc:	bl	113d4 <memcpy@plt>
   15dc0:	ldr	r0, [sl]
   15dc4:	add	r0, r0, r7
   15dc8:	str	r0, [sl]
   15dcc:	add	r9, r9, #24
   15dd0:	subs	r6, r6, #1
   15dd4:	bne	15d40 <argp_help@@Base+0xecc>
   15dd8:	ldr	r5, [fp, #-92]	; 0xffffffa4
   15ddc:	ldr	r2, [sl]
   15de0:	ldr	r1, [r5, #24]
   15de4:	ldr	r0, [r5, #16]
   15de8:	sub	r1, r2, r1
   15dec:	cmp	r1, r0
   15df0:	bls	15dfc <argp_help@@Base+0xf88>
   15df4:	mov	r0, r5
   15df8:	bl	1a4cc <argp_parse@@Base+0x2154>
   15dfc:	mov	r0, #0
   15e00:	ldr	r6, [fp, #-104]	; 0xffffff98
   15e04:	str	r0, [r5, #4]
   15e08:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15e0c:	cmp	r0, #0
   15e10:	beq	15e68 <argp_help@@Base+0xff4>
   15e14:	ldrb	r0, [r4, #12]
   15e18:	tst	r0, #8
   15e1c:	bne	15e48 <argp_help@@Base+0xfd4>
   15e20:	ldr	r5, [r4, #4]
   15e24:	sub	r0, r5, #1
   15e28:	cmp	r0, #254	; 0xfe
   15e2c:	bhi	15e48 <argp_help@@Base+0xfd4>
   15e30:	bl	114e8 <__ctype_b_loc@plt>
   15e34:	ldr	r0, [r0]
   15e38:	add	r0, r0, r5, lsl #1
   15e3c:	ldrb	r0, [r0, #1]
   15e40:	tst	r0, #64	; 0x40
   15e44:	bne	16174 <argp_help@@Base+0x1300>
   15e48:	ldr	r0, [r4]
   15e4c:	cmp	r0, #0
   15e50:	bne	16174 <argp_help@@Base+0x1300>
   15e54:	ldr	r1, [r6, #20]
   15e58:	ldr	r0, [r4, #16]
   15e5c:	sub	r2, fp, #88	; 0x58
   15e60:	bl	180cc <argp_failure@@Base+0x1b60>
   15e64:	b	16170 <argp_help@@Base+0x12fc>
   15e68:	ldr	r6, [r6, #20]
   15e6c:	ldr	r7, [r4, #16]
   15e70:	cmp	r6, #0
   15e74:	mov	r9, r7
   15e78:	beq	15eb4 <argp_help@@Base+0x1040>
   15e7c:	ldr	r0, [r6, #20]
   15e80:	mov	r9, r7
   15e84:	cmp	r0, #0
   15e88:	beq	15eb4 <argp_help@@Base+0x1040>
   15e8c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15e90:	ldr	r4, [r4, #4]
   15e94:	mov	r0, r6
   15e98:	bl	18fb4 <argp_parse@@Base+0xc3c>
   15e9c:	ldr	r3, [r6, #20]
   15ea0:	mov	r2, r0
   15ea4:	mov	r0, r4
   15ea8:	mov	r1, r7
   15eac:	blx	r3
   15eb0:	mov	r9, r0
   15eb4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   15eb8:	movw	r5, #58848	; 0xe5e0
   15ebc:	cmp	r9, #0
   15ec0:	movt	r5, #2
   15ec4:	beq	1610c <argp_help@@Base+0x1298>
   15ec8:	ldrb	r0, [r9]
   15ecc:	cmp	r0, #0
   15ed0:	beq	160fc <argp_help@@Base+0x1288>
   15ed4:	ldr	r1, [r4, #24]
   15ed8:	ldr	r2, [sl]
   15edc:	ldr	r0, [r4, #16]
   15ee0:	str	r7, [fp, #-128]	; 0xffffff80
   15ee4:	sub	r1, r2, r1
   15ee8:	cmp	r1, r0
   15eec:	bls	15f08 <argp_help@@Base+0x1094>
   15ef0:	mov	r0, r4
   15ef4:	bl	1a4cc <argp_parse@@Base+0x2154>
   15ef8:	ldr	r1, [r4, #24]
   15efc:	ldr	r2, [sl]
   15f00:	ldr	r0, [r4, #16]
   15f04:	sub	r1, r2, r1
   15f08:	ldr	r5, [r5, #20]
   15f0c:	ldr	r8, [r4, #20]
   15f10:	cmp	r1, r0
   15f14:	mov	r6, r5
   15f18:	bls	15f40 <argp_help@@Base+0x10cc>
   15f1c:	mov	r0, r4
   15f20:	bl	1a4cc <argp_parse@@Base+0x2154>
   15f24:	ldr	r1, [r4, #24]
   15f28:	ldr	r2, [sl]
   15f2c:	ldr	r0, [r4, #16]
   15f30:	sub	r1, r2, r1
   15f34:	movw	r2, #58848	; 0xe5e0
   15f38:	movt	r2, #2
   15f3c:	ldr	r6, [r2, #20]
   15f40:	bic	r7, r8, r8, asr #31
   15f44:	movw	r8, #58848	; 0xe5e0
   15f48:	str	r5, [r4, #4]
   15f4c:	cmp	r1, r0
   15f50:	mov	r5, r6
   15f54:	movt	r8, #2
   15f58:	bls	15f68 <argp_help@@Base+0x10f4>
   15f5c:	mov	r0, r4
   15f60:	bl	1a4cc <argp_parse@@Base+0x2154>
   15f64:	ldr	r5, [r8, #20]
   15f68:	add	r0, r5, #3
   15f6c:	str	r6, [r4, #12]
   15f70:	cmp	r7, r0
   15f74:	bls	15fbc <argp_help@@Base+0x1148>
   15f78:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15f7c:	ldr	r0, [sl]
   15f80:	ldr	r7, [fp, #-128]	; 0xffffff80
   15f84:	ldr	r1, [r1]
   15f88:	cmp	r0, r1
   15f8c:	bcc	15fa8 <argp_help@@Base+0x1134>
   15f90:	mov	r0, r4
   15f94:	mov	r1, #1
   15f98:	bl	1aa2c <argp_parse@@Base+0x26b4>
   15f9c:	cmp	r0, #0
   15fa0:	beq	160a0 <argp_help@@Base+0x122c>
   15fa4:	ldr	r0, [sl]
   15fa8:	add	r1, r0, #1
   15fac:	str	r1, [sl]
   15fb0:	mov	r1, #10
   15fb4:	strb	r1, [r0]
   15fb8:	b	160a0 <argp_help@@Base+0x122c>
   15fbc:	cmp	r7, r5
   15fc0:	bcs	16050 <argp_help@@Base+0x11dc>
   15fc4:	ldr	r1, [r4, #24]
   15fc8:	ldr	r2, [sl]
   15fcc:	ldr	r0, [r4, #16]
   15fd0:	sub	r1, r2, r1
   15fd4:	cmp	r1, r0
   15fd8:	bls	15fe4 <argp_help@@Base+0x1170>
   15fdc:	mov	r0, r4
   15fe0:	bl	1a4cc <argp_parse@@Base+0x2154>
   15fe4:	ldr	r0, [r4, #20]
   15fe8:	ldr	r7, [fp, #-128]	; 0xffffff80
   15fec:	bic	r0, r0, r0, asr #31
   15ff0:	sub	r1, r5, r0
   15ff4:	cmp	r1, #1
   15ff8:	blt	160a0 <argp_help@@Base+0x122c>
   15ffc:	add	r1, r5, #1
   16000:	sub	r6, r1, r0
   16004:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16008:	ldr	r0, [sl]
   1600c:	ldr	r1, [r1]
   16010:	cmp	r0, r1
   16014:	bcc	16030 <argp_help@@Base+0x11bc>
   16018:	mov	r0, r4
   1601c:	mov	r1, #1
   16020:	bl	1aa2c <argp_parse@@Base+0x26b4>
   16024:	cmp	r0, #0
   16028:	beq	16040 <argp_help@@Base+0x11cc>
   1602c:	ldr	r0, [sl]
   16030:	add	r1, r0, #1
   16034:	str	r1, [sl]
   16038:	mov	r1, #32
   1603c:	strb	r1, [r0]
   16040:	sub	r6, r6, #1
   16044:	cmp	r6, #1
   16048:	bgt	16004 <argp_help@@Base+0x1190>
   1604c:	b	160a0 <argp_help@@Base+0x122c>
   16050:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16054:	ldr	r7, [fp, #-128]	; 0xffffff80
   16058:	ldr	r1, [r0]
   1605c:	ldr	r0, [sl]
   16060:	add	r2, r0, #3
   16064:	cmp	r2, r1
   16068:	bls	16084 <argp_help@@Base+0x1210>
   1606c:	mov	r0, r4
   16070:	mov	r1, #3
   16074:	bl	1aa2c <argp_parse@@Base+0x26b4>
   16078:	cmp	r0, #0
   1607c:	beq	160a0 <argp_help@@Base+0x122c>
   16080:	ldr	r0, [sl]
   16084:	mov	r1, #32
   16088:	strb	r1, [r0, #2]
   1608c:	movw	r1, #8224	; 0x2020
   16090:	strh	r1, [r0]
   16094:	ldr	r0, [sl]
   16098:	add	r0, r0, #3
   1609c:	str	r0, [sl]
   160a0:	mov	r0, r9
   160a4:	bl	11518 <strlen@plt>
   160a8:	cmp	r0, #0
   160ac:	beq	160fc <argp_help@@Base+0x1288>
   160b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   160b4:	mov	r6, r0
   160b8:	ldr	r0, [sl]
   160bc:	ldr	r2, [r2]
   160c0:	add	r1, r0, r6
   160c4:	cmp	r1, r2
   160c8:	bls	160e4 <argp_help@@Base+0x1270>
   160cc:	mov	r0, r4
   160d0:	mov	r1, r6
   160d4:	bl	1aa2c <argp_parse@@Base+0x26b4>
   160d8:	cmp	r0, #0
   160dc:	beq	160fc <argp_help@@Base+0x1288>
   160e0:	ldr	r0, [sl]
   160e4:	mov	r1, r9
   160e8:	mov	r2, r6
   160ec:	bl	113d4 <memcpy@plt>
   160f0:	ldr	r0, [sl]
   160f4:	add	r0, r0, r6
   160f8:	str	r0, [sl]
   160fc:	cmp	r9, r7
   16100:	beq	1610c <argp_help@@Base+0x1298>
   16104:	mov	r0, r9
   16108:	bl	19648 <argp_parse@@Base+0x12d0>
   1610c:	ldr	r2, [r4, #24]
   16110:	ldr	r0, [sl]
   16114:	ldr	r1, [r4, #16]
   16118:	sub	r2, r0, r2
   1611c:	cmp	r2, r1
   16120:	bls	16130 <argp_help@@Base+0x12bc>
   16124:	mov	r0, r4
   16128:	bl	1a4cc <argp_parse@@Base+0x2154>
   1612c:	ldr	r0, [r4, #28]
   16130:	mov	r1, #0
   16134:	ldr	r6, [fp, #-104]	; 0xffffff98
   16138:	str	r1, [r4, #4]
   1613c:	ldr	r1, [r4, #32]
   16140:	cmp	r0, r1
   16144:	bcc	16160 <argp_help@@Base+0x12ec>
   16148:	mov	r0, r4
   1614c:	mov	r1, #1
   16150:	bl	1aa2c <argp_parse@@Base+0x26b4>
   16154:	cmp	r0, #0
   16158:	beq	16170 <argp_help@@Base+0x12fc>
   1615c:	ldr	r0, [sl]
   16160:	add	r1, r0, #1
   16164:	str	r1, [sl]
   16168:	mov	r1, #10
   1616c:	strb	r1, [r0]
   16170:	str	r6, [fp, #-48]	; 0xffffffd0
   16174:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16178:	ldr	r2, [sl]
   1617c:	ldr	r1, [r4, #24]
   16180:	ldr	r0, [r4, #16]
   16184:	sub	r1, r2, r1
   16188:	cmp	r1, r0
   1618c:	bls	161a8 <argp_help@@Base+0x1334>
   16190:	mov	r0, r4
   16194:	bl	1a4cc <argp_parse@@Base+0x2154>
   16198:	ldr	r1, [r4, #24]
   1619c:	ldr	r2, [sl]
   161a0:	ldr	r0, [r4, #16]
   161a4:	sub	r1, r2, r1
   161a8:	ldr	r2, [fp, #-124]	; 0xffffff84
   161ac:	ldr	r5, [fp, #-120]	; 0xffffff88
   161b0:	cmp	r1, r0
   161b4:	str	r2, [r4, #4]
   161b8:	bls	161c4 <argp_help@@Base+0x1350>
   161bc:	mov	r0, r4
   161c0:	bl	1a4cc <argp_parse@@Base+0x2154>
   161c4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   161c8:	add	r6, r6, #28
   161cc:	str	r5, [r4, #12]
   161d0:	subs	r1, r1, #1
   161d4:	bne	159c4 <argp_help@@Base+0xb50>
   161d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161dc:	cmp	r0, #0
   161e0:	movw	r0, #58848	; 0xe5e0
   161e4:	movt	r0, #2
   161e8:	ldrne	r0, [r0, #4]
   161ec:	cmpne	r0, #0
   161f0:	bne	16208 <argp_help@@Base+0x1394>
   161f4:	ldr	r6, [fp, #-132]	; 0xffffff7c
   161f8:	mov	r5, #1
   161fc:	tst	r6, #32
   16200:	bne	15818 <argp_help@@Base+0x9a4>
   16204:	b	15840 <argp_help@@Base+0x9cc>
   16208:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1620c:	movw	r5, #52441	; 0xccd9
   16210:	movt	r5, #1
   16214:	cmp	r0, #0
   16218:	beq	16230 <argp_help@@Base+0x13bc>
   1621c:	ldr	r6, [r0]
   16220:	cmp	r6, #0
   16224:	ldrne	r0, [r6, #20]
   16228:	cmpne	r0, #0
   1622c:	bne	1632c <argp_help@@Base+0x14b8>
   16230:	ldrb	r0, [r5]
   16234:	cmp	r0, #0
   16238:	beq	16310 <argp_help@@Base+0x149c>
   1623c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16240:	ldr	r0, [sl]
   16244:	ldr	r1, [r1]
   16248:	cmp	r0, r1
   1624c:	bcc	16268 <argp_help@@Base+0x13f4>
   16250:	mov	r0, r4
   16254:	mov	r1, #1
   16258:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1625c:	cmp	r0, #0
   16260:	beq	16278 <argp_help@@Base+0x1404>
   16264:	ldr	r0, [sl]
   16268:	add	r1, r0, #1
   1626c:	str	r1, [sl]
   16270:	mov	r1, #10
   16274:	strb	r1, [r0]
   16278:	mov	r0, r5
   1627c:	bl	11518 <strlen@plt>
   16280:	cmp	r0, #0
   16284:	beq	162d4 <argp_help@@Base+0x1460>
   16288:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1628c:	mov	r6, r0
   16290:	ldr	r0, [sl]
   16294:	ldr	r2, [r2]
   16298:	add	r1, r0, r6
   1629c:	cmp	r1, r2
   162a0:	bls	162bc <argp_help@@Base+0x1448>
   162a4:	mov	r0, r4
   162a8:	mov	r1, r6
   162ac:	bl	1aa2c <argp_parse@@Base+0x26b4>
   162b0:	cmp	r0, #0
   162b4:	beq	162d4 <argp_help@@Base+0x1460>
   162b8:	ldr	r0, [sl]
   162bc:	mov	r1, r5
   162c0:	mov	r2, r6
   162c4:	bl	113d4 <memcpy@plt>
   162c8:	ldr	r0, [sl]
   162cc:	add	r0, r0, r6
   162d0:	str	r0, [sl]
   162d4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   162d8:	ldr	r0, [sl]
   162dc:	ldr	r1, [r1]
   162e0:	cmp	r0, r1
   162e4:	bcc	16300 <argp_help@@Base+0x148c>
   162e8:	mov	r0, r4
   162ec:	mov	r1, #1
   162f0:	bl	1aa2c <argp_parse@@Base+0x26b4>
   162f4:	cmp	r0, #0
   162f8:	beq	16310 <argp_help@@Base+0x149c>
   162fc:	ldr	r0, [sl]
   16300:	add	r1, r0, #1
   16304:	str	r1, [sl]
   16308:	mov	r1, #10
   1630c:	strb	r1, [r0]
   16310:	movw	r0, #52441	; 0xccd9
   16314:	movt	r0, #1
   16318:	cmp	r5, r0
   1631c:	beq	161f4 <argp_help@@Base+0x1380>
   16320:	mov	r0, r5
   16324:	bl	19648 <argp_parse@@Base+0x12d0>
   16328:	b	161f4 <argp_help@@Base+0x1380>
   1632c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16330:	mov	r0, r6
   16334:	bl	18fb4 <argp_parse@@Base+0xc3c>
   16338:	ldr	r3, [r6, #20]
   1633c:	movw	r1, #52441	; 0xccd9
   16340:	mov	r2, r0
   16344:	movw	r0, #5
   16348:	movt	r0, #512	; 0x200
   1634c:	movt	r1, #1
   16350:	blx	r3
   16354:	mov	r5, r0
   16358:	cmp	r0, #0
   1635c:	bne	16230 <argp_help@@Base+0x13bc>
   16360:	b	161f4 <argp_help@@Base+0x1380>
   16364:	add	r0, r0, #112	; 0x70
   16368:	b	153d8 <argp_help@@Base+0x564>

0001636c <argp_state_help@@Base>:
   1636c:	push	{r4, r5, fp, lr}
   16370:	add	fp, sp, #8
   16374:	sub	sp, sp, #8
   16378:	mov	r4, r2
   1637c:	mov	r2, r1
   16380:	cmp	r0, #0
   16384:	beq	163d0 <argp_state_help@@Base+0x64>
   16388:	cmp	r2, #0
   1638c:	beq	16408 <argp_state_help@@Base+0x9c>
   16390:	ldr	r1, [r0, #16]
   16394:	mov	r5, r0
   16398:	ands	r0, r1, #2
   1639c:	bne	16408 <argp_state_help@@Base+0x9c>
   163a0:	ldr	r3, [r5, #40]	; 0x28
   163a4:	ldr	r0, [r5]
   163a8:	and	r1, r1, #64	; 0x40
   163ac:	orr	r4, r4, r1, lsl #1
   163b0:	mov	r1, r5
   163b4:	str	r3, [sp]
   163b8:	mov	r3, r4
   163bc:	bl	14ea0 <argp_help@@Base+0x2c>
   163c0:	ldrb	r0, [r5, #16]
   163c4:	tst	r0, #32
   163c8:	beq	163f8 <argp_state_help@@Base+0x8c>
   163cc:	b	16408 <argp_state_help@@Base+0x9c>
   163d0:	cmp	r2, #0
   163d4:	beq	16408 <argp_state_help@@Base+0x9c>
   163d8:	movw	r0, #58912	; 0xe620
   163dc:	mov	r1, #0
   163e0:	mov	r3, r4
   163e4:	movt	r0, #2
   163e8:	ldr	r0, [r0]
   163ec:	str	r0, [sp]
   163f0:	mov	r0, #0
   163f4:	bl	14ea0 <argp_help@@Base+0x2c>
   163f8:	tst	r4, #256	; 0x100
   163fc:	bne	16410 <argp_state_help@@Base+0xa4>
   16400:	tst	r4, #512	; 0x200
   16404:	bne	16420 <argp_state_help@@Base+0xb4>
   16408:	sub	sp, fp, #8
   1640c:	pop	{r4, r5, fp, pc}
   16410:	movw	r0, #58888	; 0xe608
   16414:	movt	r0, #2
   16418:	ldr	r0, [r0]
   1641c:	bl	11500 <exit@plt>
   16420:	mov	r0, #0
   16424:	bl	11500 <exit@plt>

00016428 <argp_error@@Base>:
   16428:	sub	sp, sp, #8
   1642c:	push	{r4, r5, r6, sl, fp, lr}
   16430:	add	fp, sp, #16
   16434:	sub	sp, sp, #8
   16438:	mov	r6, r1
   1643c:	mov	r4, r0
   16440:	cmp	r0, #0
   16444:	str	r3, [fp, #12]
   16448:	str	r2, [fp, #8]
   1644c:	beq	16464 <argp_error@@Base+0x3c>
   16450:	ldrb	r0, [r4, #16]
   16454:	tst	r0, #2
   16458:	bne	1652c <argp_error@@Base+0x104>
   1645c:	add	r0, r4, #44	; 0x2c
   16460:	b	1646c <argp_error@@Base+0x44>
   16464:	movw	r0, #58920	; 0xe628
   16468:	movt	r0, #2
   1646c:	ldr	r5, [r0]
   16470:	cmp	r5, #0
   16474:	beq	1652c <argp_error@@Base+0x104>
   16478:	mov	r0, r5
   1647c:	bl	11614 <flockfile@plt>
   16480:	add	r0, fp, #8
   16484:	cmp	r4, #0
   16488:	mov	r1, r5
   1648c:	str	r0, [sp, #4]
   16490:	movw	r0, #58912	; 0xe620
   16494:	movt	r0, #2
   16498:	addne	r0, r4, #40	; 0x28
   1649c:	ldr	r0, [r0]
   164a0:	bl	11338 <fputs_unlocked@plt>
   164a4:	ldr	r0, [r5, #20]
   164a8:	ldr	r1, [r5, #24]
   164ac:	cmp	r0, r1
   164b0:	bcs	1653c <argp_error@@Base+0x114>
   164b4:	add	r1, r0, #1
   164b8:	str	r1, [r5, #20]
   164bc:	mov	r1, #58	; 0x3a
   164c0:	strb	r1, [r0]
   164c4:	ldr	r0, [r5, #20]
   164c8:	ldr	r1, [r5, #24]
   164cc:	cmp	r0, r1
   164d0:	bcs	1654c <argp_error@@Base+0x124>
   164d4:	add	r1, r0, #1
   164d8:	str	r1, [r5, #20]
   164dc:	mov	r1, #32
   164e0:	strb	r1, [r0]
   164e4:	ldr	r2, [sp, #4]
   164e8:	mov	r0, r5
   164ec:	mov	r1, r6
   164f0:	bl	115d8 <vfprintf@plt>
   164f4:	ldr	r0, [r5, #20]
   164f8:	ldr	r1, [r5, #24]
   164fc:	cmp	r0, r1
   16500:	bcs	1655c <argp_error@@Base+0x134>
   16504:	add	r1, r0, #1
   16508:	str	r1, [r5, #20]
   1650c:	mov	r1, #10
   16510:	strb	r1, [r0]
   16514:	mov	r0, r4
   16518:	mov	r1, r5
   1651c:	mov	r2, #260	; 0x104
   16520:	bl	1636c <argp_state_help@@Base>
   16524:	mov	r0, r5
   16528:	bl	11464 <funlockfile@plt>
   1652c:	sub	sp, fp, #16
   16530:	pop	{r4, r5, r6, sl, fp, lr}
   16534:	add	sp, sp, #8
   16538:	bx	lr
   1653c:	mov	r0, r5
   16540:	mov	r1, #58	; 0x3a
   16544:	bl	115a8 <__overflow@plt>
   16548:	b	164c4 <argp_error@@Base+0x9c>
   1654c:	mov	r0, r5
   16550:	mov	r1, #32
   16554:	bl	115a8 <__overflow@plt>
   16558:	b	164e4 <argp_error@@Base+0xbc>
   1655c:	mov	r0, r5
   16560:	mov	r1, #10
   16564:	bl	115a8 <__overflow@plt>
   16568:	b	16514 <argp_error@@Base+0xec>

0001656c <argp_failure@@Base>:
   1656c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16570:	add	fp, sp, #24
   16574:	sub	sp, sp, #200	; 0xc8
   16578:	mov	r4, r3
   1657c:	mov	r9, r2
   16580:	mov	r8, r1
   16584:	mov	r5, r0
   16588:	cmp	r0, #0
   1658c:	beq	165a4 <argp_failure@@Base+0x38>
   16590:	ldrb	r0, [r5, #16]
   16594:	tst	r0, #2
   16598:	bne	1671c <argp_failure@@Base+0x1b0>
   1659c:	add	r0, r5, #44	; 0x2c
   165a0:	b	165ac <argp_failure@@Base+0x40>
   165a4:	movw	r0, #58920	; 0xe628
   165a8:	movt	r0, #2
   165ac:	ldr	r6, [r0]
   165b0:	cmp	r6, #0
   165b4:	beq	1671c <argp_failure@@Base+0x1b0>
   165b8:	mov	r0, r6
   165bc:	bl	11614 <flockfile@plt>
   165c0:	movw	r0, #58912	; 0xe620
   165c4:	cmp	r5, #0
   165c8:	mov	r1, r6
   165cc:	movt	r0, #2
   165d0:	addne	r0, r5, #40	; 0x28
   165d4:	ldr	r0, [r0]
   165d8:	bl	11338 <fputs_unlocked@plt>
   165dc:	cmp	r4, #0
   165e0:	beq	1663c <argp_failure@@Base+0xd0>
   165e4:	add	r0, fp, #8
   165e8:	str	r0, [sp]
   165ec:	ldr	r0, [r6, #20]
   165f0:	ldr	r1, [r6, #24]
   165f4:	cmp	r0, r1
   165f8:	bcs	16734 <argp_failure@@Base+0x1c8>
   165fc:	add	r1, r0, #1
   16600:	str	r1, [r6, #20]
   16604:	mov	r1, #58	; 0x3a
   16608:	strb	r1, [r0]
   1660c:	ldr	r0, [r6, #20]
   16610:	ldr	r1, [r6, #24]
   16614:	cmp	r0, r1
   16618:	bcs	16744 <argp_failure@@Base+0x1d8>
   1661c:	add	r1, r0, #1
   16620:	str	r1, [r6, #20]
   16624:	mov	r1, #32
   16628:	strb	r1, [r0]
   1662c:	ldr	r2, [sp]
   16630:	mov	r0, r6
   16634:	mov	r1, r4
   16638:	bl	115d8 <vfprintf@plt>
   1663c:	cmp	r9, #0
   16640:	beq	166cc <argp_failure@@Base+0x160>
   16644:	mov	r4, r6
   16648:	ldr	r0, [r4, #20]!
   1664c:	mov	r7, r4
   16650:	ldr	r1, [r7, #4]!
   16654:	cmp	r0, r1
   16658:	bcs	16754 <argp_failure@@Base+0x1e8>
   1665c:	add	r1, r0, #1
   16660:	str	r1, [r4]
   16664:	mov	r1, #58	; 0x3a
   16668:	strb	r1, [r0]
   1666c:	ldr	r0, [r4]
   16670:	ldr	r1, [r7]
   16674:	cmp	r0, r1
   16678:	bcs	16764 <argp_failure@@Base+0x1f8>
   1667c:	add	r1, r0, #1
   16680:	str	r1, [r4]
   16684:	mov	r1, #32
   16688:	strb	r1, [r0]
   1668c:	mov	r1, sp
   16690:	mov	r0, r9
   16694:	mov	r2, #200	; 0xc8
   16698:	bl	11554 <strerror_r@plt>
   1669c:	cmp	r0, #0
   166a0:	bne	166c0 <argp_failure@@Base+0x154>
   166a4:	mov	r0, r9
   166a8:	bl	114c4 <strerror@plt>
   166ac:	mov	r1, r0
   166b0:	movw	r0, #51816	; 0xca68
   166b4:	movt	r0, #1
   166b8:	cmp	r1, #0
   166bc:	movne	r0, r1
   166c0:	mov	r1, r6
   166c4:	bl	11338 <fputs_unlocked@plt>
   166c8:	b	166d4 <argp_failure@@Base+0x168>
   166cc:	add	r7, r6, #24
   166d0:	add	r4, r6, #20
   166d4:	ldr	r0, [r4]
   166d8:	ldr	r1, [r7]
   166dc:	cmp	r0, r1
   166e0:	bcs	16724 <argp_failure@@Base+0x1b8>
   166e4:	add	r1, r0, #1
   166e8:	str	r1, [r4]
   166ec:	mov	r1, #10
   166f0:	strb	r1, [r0]
   166f4:	mov	r0, r6
   166f8:	bl	11464 <funlockfile@plt>
   166fc:	cmp	r8, #0
   16700:	beq	1671c <argp_failure@@Base+0x1b0>
   16704:	cmp	r5, #0
   16708:	ldrbne	r0, [r5, #16]
   1670c:	tstne	r0, #32
   16710:	bne	1671c <argp_failure@@Base+0x1b0>
   16714:	mov	r0, r8
   16718:	bl	11500 <exit@plt>
   1671c:	sub	sp, fp, #24
   16720:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16724:	mov	r0, r6
   16728:	mov	r1, #10
   1672c:	bl	115a8 <__overflow@plt>
   16730:	b	166f4 <argp_failure@@Base+0x188>
   16734:	mov	r0, r6
   16738:	mov	r1, #58	; 0x3a
   1673c:	bl	115a8 <__overflow@plt>
   16740:	b	1660c <argp_failure@@Base+0xa0>
   16744:	mov	r0, r6
   16748:	mov	r1, #32
   1674c:	bl	115a8 <__overflow@plt>
   16750:	b	1662c <argp_failure@@Base+0xc0>
   16754:	mov	r0, r6
   16758:	mov	r1, #58	; 0x3a
   1675c:	bl	115a8 <__overflow@plt>
   16760:	b	1666c <argp_failure@@Base+0x100>
   16764:	mov	r0, r6
   16768:	mov	r1, #32
   1676c:	bl	115a8 <__overflow@plt>
   16770:	b	1668c <argp_failure@@Base+0x120>
   16774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16778:	add	fp, sp, #28
   1677c:	sub	sp, sp, #52	; 0x34
   16780:	ldr	r4, [r0]
   16784:	ldr	r9, [r0, #16]
   16788:	mov	r7, r0
   1678c:	mov	r0, #16
   16790:	mov	sl, r1
   16794:	bl	1a384 <argp_parse@@Base+0x200c>
   16798:	cmp	r0, #0
   1679c:	beq	16d78 <argp_failure@@Base+0x80c>
   167a0:	mov	r1, #0
   167a4:	str	r0, [fp, #-32]	; 0xffffffe0
   167a8:	cmp	r4, #0
   167ac:	str	r7, [sp, #40]	; 0x28
   167b0:	str	r1, [r0, #12]!
   167b4:	str	r0, [sp, #20]
   167b8:	str	r1, [r0, #-8]
   167bc:	beq	16a0c <argp_failure@@Base+0x4a0>
   167c0:	ldrb	r0, [r4, #12]
   167c4:	tst	r0, #4
   167c8:	bne	16d98 <argp_failure@@Base+0x82c>
   167cc:	add	r5, r4, #12
   167d0:	mov	r6, #0
   167d4:	mov	r8, #0
   167d8:	b	167e0 <argp_failure@@Base+0x274>
   167dc:	add	r5, r5, #24
   167e0:	ldr	r7, [r5, #-8]
   167e4:	cmp	r7, #0
   167e8:	bne	16810 <argp_failure@@Base+0x2a4>
   167ec:	ldr	r0, [r5, #-12]
   167f0:	cmp	r0, #0
   167f4:	bne	16810 <argp_failure@@Base+0x2a4>
   167f8:	ldr	r0, [r5, #4]
   167fc:	cmp	r0, #0
   16800:	bne	16810 <argp_failure@@Base+0x2a4>
   16804:	ldr	r0, [r5, #8]
   16808:	cmp	r0, #0
   1680c:	beq	16854 <argp_failure@@Base+0x2e8>
   16810:	ldr	r0, [r5]
   16814:	tst	r0, #4
   16818:	ldreq	r1, [fp, #-32]	; 0xffffffe0
   1681c:	addeq	r6, r6, #1
   16820:	streq	r6, [r1, #4]
   16824:	sub	r1, r7, #1
   16828:	cmp	r1, #254	; 0xfe
   1682c:	bhi	167dc <argp_failure@@Base+0x270>
   16830:	ands	r0, r0, #8
   16834:	bne	167dc <argp_failure@@Base+0x270>
   16838:	bl	114e8 <__ctype_b_loc@plt>
   1683c:	ldr	r0, [r0]
   16840:	add	r0, r0, r7, lsl #1
   16844:	ldrb	r0, [r0, #1]
   16848:	tst	r0, #64	; 0x40
   1684c:	addne	r8, r8, #1
   16850:	b	167dc <argp_failure@@Base+0x270>
   16854:	rsb	r0, r6, r6, lsl #3
   16858:	lsl	r0, r0, #2
   1685c:	bl	1a384 <argp_parse@@Base+0x200c>
   16860:	mov	r5, r0
   16864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16868:	str	r5, [r0]
   1686c:	add	r0, r8, #1
   16870:	bl	1a384 <argp_parse@@Base+0x200c>
   16874:	mov	r7, r0
   16878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1687c:	cmp	r5, #0
   16880:	cmpne	r7, #0
   16884:	str	r7, [r0, #8]
   16888:	bne	168ac <argp_failure@@Base+0x340>
   1688c:	movw	r0, #52221	; 0xcbfd
   16890:	movw	r1, #52129	; 0xcba1
   16894:	movw	r3, #52141	; 0xcbad
   16898:	movw	r2, #474	; 0x1da
   1689c:	movt	r0, #1
   168a0:	movt	r1, #1
   168a4:	movt	r3, #1
   168a8:	bl	11680 <__assert_fail@plt>
   168ac:	movw	r0, #37450	; 0x924a
   168b0:	str	r9, [sp, #12]
   168b4:	movt	r0, #2340	; 0x924
   168b8:	cmp	r6, r0
   168bc:	bcs	16db8 <argp_failure@@Base+0x84c>
   168c0:	mov	r8, #0
   168c4:	mov	r0, #0
   168c8:	b	168d8 <argp_failure@@Base+0x36c>
   168cc:	mov	r4, r0
   168d0:	add	r5, r5, #28
   168d4:	mov	r0, r9
   168d8:	ldr	r1, [r4, #4]
   168dc:	cmp	r1, #0
   168e0:	bne	16908 <argp_failure@@Base+0x39c>
   168e4:	ldr	r2, [r4]
   168e8:	cmp	r2, #0
   168ec:	bne	16908 <argp_failure@@Base+0x39c>
   168f0:	ldr	r2, [r4, #16]
   168f4:	cmp	r2, #0
   168f8:	bne	16908 <argp_failure@@Base+0x39c>
   168fc:	ldr	r2, [r4, #20]
   16900:	cmp	r2, #0
   16904:	beq	169fc <argp_failure@@Base+0x490>
   16908:	stm	r5, {r4, r8}
   1690c:	str	r7, [r5, #8]
   16910:	ldr	r9, [r4, #20]
   16914:	cmp	r9, #0
   16918:	bne	16934 <argp_failure@@Base+0x3c8>
   1691c:	ldr	r2, [r4]
   16920:	cmp	r2, #0
   16924:	bne	16930 <argp_failure@@Base+0x3c4>
   16928:	cmp	r1, #0
   1692c:	addeq	r0, r0, #1
   16930:	mov	r9, r0
   16934:	ldr	r0, [sp, #40]	; 0x28
   16938:	mov	r1, #0
   1693c:	str	r9, [r5, #12]
   16940:	str	sl, [r5, #16]
   16944:	str	r0, [r5, #20]
   16948:	b	16954 <argp_failure@@Base+0x3e8>
   1694c:	ldr	r1, [r5, #4]
   16950:	mov	r4, r0
   16954:	add	r0, r1, #1
   16958:	str	r0, [r5, #4]
   1695c:	ldrb	r0, [r4, #12]
   16960:	tst	r0, #8
   16964:	bne	169b8 <argp_failure@@Base+0x44c>
   16968:	ldr	r6, [r4, #4]
   1696c:	sub	r0, r6, #1
   16970:	cmp	r0, #254	; 0xfe
   16974:	bhi	169b8 <argp_failure@@Base+0x44c>
   16978:	bl	114e8 <__ctype_b_loc@plt>
   1697c:	ldr	r0, [r0]
   16980:	add	r0, r0, r6, lsl #1
   16984:	ldrb	r0, [r0, #1]
   16988:	tst	r0, #64	; 0x40
   1698c:	beq	169b8 <argp_failure@@Base+0x44c>
   16990:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16994:	ldr	r0, [r0, #8]
   16998:	cmp	r0, r7
   1699c:	bcs	169b4 <argp_failure@@Base+0x448>
   169a0:	ldrb	r1, [r0], #1
   169a4:	uxtb	r2, r6
   169a8:	cmp	r1, r2
   169ac:	bne	16998 <argp_failure@@Base+0x42c>
   169b0:	b	169b8 <argp_failure@@Base+0x44c>
   169b4:	strb	r6, [r7], #1
   169b8:	ldr	r1, [r4, #28]
   169bc:	add	r0, r4, #24
   169c0:	cmp	r1, #0
   169c4:	bne	169ec <argp_failure@@Base+0x480>
   169c8:	ldr	r1, [r0]
   169cc:	cmp	r1, #0
   169d0:	bne	169ec <argp_failure@@Base+0x480>
   169d4:	ldr	r1, [r4, #40]	; 0x28
   169d8:	cmp	r1, #0
   169dc:	bne	169ec <argp_failure@@Base+0x480>
   169e0:	ldr	r1, [r4, #44]	; 0x2c
   169e4:	cmp	r1, #0
   169e8:	beq	168cc <argp_failure@@Base+0x360>
   169ec:	ldrb	r1, [r4, #36]	; 0x24
   169f0:	tst	r1, #4
   169f4:	bne	1694c <argp_failure@@Base+0x3e0>
   169f8:	b	168cc <argp_failure@@Base+0x360>
   169fc:	mov	r0, #0
   16a00:	ldr	r9, [sp, #12]
   16a04:	strb	r0, [r7]
   16a08:	ldr	r7, [sp, #40]	; 0x28
   16a0c:	cmp	r9, #0
   16a10:	ldrne	r0, [r9]
   16a14:	cmpne	r0, #0
   16a18:	bne	16a28 <argp_failure@@Base+0x4bc>
   16a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a20:	sub	sp, fp, #28
   16a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a28:	str	sl, [sp, #4]
   16a2c:	ldr	r4, [r9, #12]
   16a30:	cmp	r4, #0
   16a34:	beq	16a40 <argp_failure@@Base+0x4d4>
   16a38:	ldr	r5, [r9, #8]
   16a3c:	b	16a50 <argp_failure@@Base+0x4e4>
   16a40:	ldr	r5, [r9, #8]
   16a44:	mov	r1, sl
   16a48:	cmp	r5, #0
   16a4c:	beq	16aa0 <argp_failure@@Base+0x534>
   16a50:	ldr	r6, [r7, #16]
   16a54:	mov	r0, #28
   16a58:	bl	1a384 <argp_parse@@Base+0x200c>
   16a5c:	mov	r1, r0
   16a60:	cmp	r0, #0
   16a64:	beq	16aa0 <argp_failure@@Base+0x534>
   16a68:	sub	r0, r9, r6
   16a6c:	str	r5, [r1]
   16a70:	cmp	sl, #0
   16a74:	asr	r0, r0, #4
   16a78:	stmib	r1, {r0, r4, sl}
   16a7c:	str	r7, [r1, #16]
   16a80:	ldr	r3, [sp, #20]
   16a84:	ldrne	r0, [sl, #20]
   16a88:	ldr	r2, [r3]
   16a8c:	addne	r0, r0, #1
   16a90:	str	r1, [r3]
   16a94:	moveq	r0, #0
   16a98:	str	r0, [r1, #20]
   16a9c:	str	r2, [r1, #24]
   16aa0:	ldr	r0, [r9]
   16aa4:	bl	16774 <argp_failure@@Base+0x208>
   16aa8:	ldr	r1, [sp, #20]
   16aac:	mov	r6, r0
   16ab0:	ldr	r2, [r1]
   16ab4:	mov	r0, r1
   16ab8:	add	r1, r2, #24
   16abc:	cmp	r2, #0
   16ac0:	bne	16ab0 <argp_failure@@Base+0x544>
   16ac4:	ldr	r1, [r6, #12]
   16ac8:	str	r1, [r0]
   16acc:	mov	r0, #0
   16ad0:	str	r0, [r6, #12]
   16ad4:	ldr	r0, [r6, #4]
   16ad8:	cmp	r0, #0
   16adc:	beq	16d40 <argp_failure@@Base+0x7d4>
   16ae0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16ae4:	ldr	r4, [r5, #4]
   16ae8:	cmp	r4, #0
   16aec:	beq	16c9c <argp_failure@@Base+0x730>
   16af0:	add	r0, r4, r0
   16af4:	str	r0, [sp, #16]
   16af8:	rsb	r0, r0, r0, lsl #3
   16afc:	lsl	r0, r0, #2
   16b00:	bl	1a384 <argp_parse@@Base+0x200c>
   16b04:	ldr	r8, [r5, #8]
   16b08:	str	r0, [sp, #24]
   16b0c:	mov	r0, r8
   16b10:	bl	11518 <strlen@plt>
   16b14:	mov	r7, r0
   16b18:	ldr	r0, [r6, #8]
   16b1c:	bl	11518 <strlen@plt>
   16b20:	add	r0, r7, r0
   16b24:	str	r7, [sp, #32]
   16b28:	add	r0, r0, #1
   16b2c:	bl	1a384 <argp_parse@@Base+0x200c>
   16b30:	ldr	r1, [sp, #24]
   16b34:	cmp	r1, #0
   16b38:	cmpne	r0, #0
   16b3c:	beq	16d58 <argp_failure@@Base+0x7ec>
   16b40:	ldr	r1, [sp, #16]
   16b44:	str	r0, [sp, #36]	; 0x24
   16b48:	movw	r0, #37450	; 0x924a
   16b4c:	movt	r0, #2340	; 0x924
   16b50:	cmp	r1, r0
   16b54:	bcs	16dd8 <argp_failure@@Base+0x86c>
   16b58:	ldr	r7, [sp, #24]
   16b5c:	ldr	r1, [r5]
   16b60:	rsb	r5, r4, r4, lsl #3
   16b64:	lsl	r2, r5, #2
   16b68:	str	r2, [fp, #-36]	; 0xffffffdc
   16b6c:	mov	r0, r7
   16b70:	bl	113d4 <memcpy@plt>
   16b74:	ldm	r6, {r1, r2}
   16b78:	add	r0, r7, r5, lsl #2
   16b7c:	rsb	r2, r2, r2, lsl #3
   16b80:	lsl	r2, r2, #2
   16b84:	bl	113d4 <memcpy@plt>
   16b88:	ldr	r5, [sp, #36]	; 0x24
   16b8c:	ldr	r2, [sp, #32]
   16b90:	mov	r1, r8
   16b94:	mov	r0, r5
   16b98:	bl	113d4 <memcpy@plt>
   16b9c:	add	r0, r7, #8
   16ba0:	ldr	r1, [r0]
   16ba4:	subs	r4, r4, #1
   16ba8:	sub	r1, r1, r8
   16bac:	add	r1, r5, r1
   16bb0:	str	r1, [r0], #28
   16bb4:	bne	16ba0 <argp_failure@@Base+0x634>
   16bb8:	ldr	r0, [sp, #32]
   16bbc:	ldr	r2, [r6, #4]
   16bc0:	str	r9, [sp, #12]
   16bc4:	str	r6, [sp, #8]
   16bc8:	add	r4, r5, r0
   16bcc:	cmp	r2, #0
   16bd0:	beq	16cb8 <argp_failure@@Base+0x74c>
   16bd4:	mov	r0, r6
   16bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16bdc:	ldr	r1, [sp, #24]
   16be0:	str	r4, [fp, #-36]	; 0xffffffdc
   16be4:	ldr	r7, [r0, #8]
   16be8:	add	r6, r1, r3
   16bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16bf0:	str	r2, [sp, #28]
   16bf4:	str	r0, [r6, #8]
   16bf8:	ldr	r9, [r6, #4]
   16bfc:	cmp	r9, #0
   16c00:	beq	16c88 <argp_failure@@Base+0x71c>
   16c04:	ldr	sl, [r6]
   16c08:	ldrb	r0, [sl, #12]
   16c0c:	tst	r0, #8
   16c10:	bne	16c7c <argp_failure@@Base+0x710>
   16c14:	ldr	r5, [sl, #4]
   16c18:	sub	r0, r5, #1
   16c1c:	cmp	r0, #254	; 0xfe
   16c20:	bhi	16c7c <argp_failure@@Base+0x710>
   16c24:	ldrb	r8, [r7]
   16c28:	bl	114e8 <__ctype_b_loc@plt>
   16c2c:	cmp	r5, r8
   16c30:	bne	16c7c <argp_failure@@Base+0x710>
   16c34:	ldr	r0, [r0]
   16c38:	add	r0, r0, r5, lsl #1
   16c3c:	ldrh	r0, [r0]
   16c40:	ands	r0, r0, #16384	; 0x4000
   16c44:	beq	16c7c <argp_failure@@Base+0x710>
   16c48:	ldr	r0, [sp, #32]
   16c4c:	cmp	r0, #1
   16c50:	ldr	r0, [sp, #36]	; 0x24
   16c54:	blt	16c6c <argp_failure@@Base+0x700>
   16c58:	ldrb	r1, [r0], #1
   16c5c:	cmp	r1, r8
   16c60:	beq	16c78 <argp_failure@@Base+0x70c>
   16c64:	cmp	r0, r4
   16c68:	bcc	16c58 <argp_failure@@Base+0x6ec>
   16c6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c70:	strb	r8, [r0], #1
   16c74:	str	r0, [fp, #-36]	; 0xffffffdc
   16c78:	add	r7, r7, #1
   16c7c:	subs	r9, r9, #1
   16c80:	add	sl, sl, #24
   16c84:	bne	16c08 <argp_failure@@Base+0x69c>
   16c88:	ldr	r2, [sp, #28]
   16c8c:	add	r6, r6, #28
   16c90:	subs	r2, r2, #1
   16c94:	bne	16bec <argp_failure@@Base+0x680>
   16c98:	b	16cbc <argp_failure@@Base+0x750>
   16c9c:	ldr	r1, [r6]
   16ca0:	ldr	r2, [r6, #8]
   16ca4:	str	r1, [r5]
   16ca8:	stmib	r5, {r0, r2}
   16cac:	mov	r0, #0
   16cb0:	str	r0, [r6, #4]
   16cb4:	b	16d40 <argp_failure@@Base+0x7d4>
   16cb8:	str	r4, [fp, #-36]	; 0xffffffdc
   16cbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16cc0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16cc4:	mov	r0, #0
   16cc8:	strb	r0, [r1]
   16ccc:	ldr	r0, [r4]
   16cd0:	bl	19648 <argp_parse@@Base+0x12d0>
   16cd4:	ldr	r0, [r4, #8]
   16cd8:	bl	19648 <argp_parse@@Base+0x12d0>
   16cdc:	ldr	r0, [sp, #24]
   16ce0:	ldr	r6, [sp, #8]
   16ce4:	str	r0, [r4]
   16ce8:	ldr	r0, [sp, #16]
   16cec:	str	r0, [r4, #4]
   16cf0:	ldr	r0, [sp, #36]	; 0x24
   16cf4:	str	r0, [r4, #8]
   16cf8:	ldr	r0, [r6, #12]
   16cfc:	cmp	r0, #0
   16d00:	beq	16d18 <argp_failure@@Base+0x7ac>
   16d04:	ldr	r4, [r0, #24]
   16d08:	bl	19648 <argp_parse@@Base+0x12d0>
   16d0c:	cmp	r4, #0
   16d10:	mov	r0, r4
   16d14:	bne	16d04 <argp_failure@@Base+0x798>
   16d18:	ldr	r0, [r6, #4]
   16d1c:	ldr	sl, [sp, #4]
   16d20:	ldr	r7, [sp, #40]	; 0x28
   16d24:	ldr	r9, [sp, #12]
   16d28:	cmp	r0, #0
   16d2c:	beq	16d40 <argp_failure@@Base+0x7d4>
   16d30:	ldr	r0, [r6]
   16d34:	bl	19648 <argp_parse@@Base+0x12d0>
   16d38:	ldr	r0, [r6, #8]
   16d3c:	bl	19648 <argp_parse@@Base+0x12d0>
   16d40:	mov	r0, r6
   16d44:	bl	19648 <argp_parse@@Base+0x12d0>
   16d48:	ldr	r0, [r9, #16]!
   16d4c:	cmp	r0, #0
   16d50:	bne	16a2c <argp_failure@@Base+0x4c0>
   16d54:	b	16a1c <argp_failure@@Base+0x4b0>
   16d58:	movw	r0, #52313	; 0xcc59
   16d5c:	movw	r1, #52129	; 0xcba1
   16d60:	movw	r3, #52338	; 0xcc72
   16d64:	movw	r2, #970	; 0x3ca
   16d68:	movt	r0, #1
   16d6c:	movt	r1, #1
   16d70:	movt	r3, #1
   16d74:	bl	11680 <__assert_fail@plt>
   16d78:	movw	r0, #52125	; 0xcb9d
   16d7c:	movw	r1, #52129	; 0xcba1
   16d80:	movw	r3, #52141	; 0xcbad
   16d84:	movw	r2, #450	; 0x1c2
   16d88:	movt	r0, #1
   16d8c:	movt	r1, #1
   16d90:	movt	r3, #1
   16d94:	bl	11680 <__assert_fail@plt>
   16d98:	movw	r0, #52205	; 0xcbed
   16d9c:	movw	r1, #52129	; 0xcba1
   16da0:	movw	r3, #52141	; 0xcbad
   16da4:	mov	r2, #460	; 0x1cc
   16da8:	movt	r0, #1
   16dac:	movt	r1, #1
   16db0:	movt	r3, #1
   16db4:	bl	11680 <__assert_fail@plt>
   16db8:	movw	r0, #52256	; 0xcc20
   16dbc:	movw	r1, #52129	; 0xcba1
   16dc0:	movw	r3, #52141	; 0xcbad
   16dc4:	mov	r2, #476	; 0x1dc
   16dc8:	movt	r0, #1
   16dcc:	movt	r1, #1
   16dd0:	movt	r3, #1
   16dd4:	bl	11680 <__assert_fail@plt>
   16dd8:	movw	r0, #52261	; 0xcc25
   16ddc:	movw	r1, #52129	; 0xcba1
   16de0:	movw	r3, #52338	; 0xcc72
   16de4:	mov	r2, #972	; 0x3cc
   16de8:	movt	r0, #1
   16dec:	movt	r1, #1
   16df0:	movt	r3, #1
   16df4:	bl	11680 <__assert_fail@plt>
   16df8:	push	{r4, r5, fp, lr}
   16dfc:	add	fp, sp, #8
   16e00:	mov	r1, r0
   16e04:	ldr	r0, [r0, #8]
   16e08:	ldr	r5, [r1, #16]
   16e0c:	cmp	r0, #0
   16e10:	beq	16e2c <argp_failure@@Base+0x8c0>
   16e14:	mov	r1, #10
   16e18:	bl	11524 <strchr@plt>
   16e1c:	mov	r4, r0
   16e20:	cmp	r0, #0
   16e24:	movwne	r4, #1
   16e28:	b	16e30 <argp_failure@@Base+0x8c4>
   16e2c:	mov	r4, #0
   16e30:	cmp	r5, #0
   16e34:	ldrne	r0, [r5]
   16e38:	cmpne	r0, #0
   16e3c:	beq	16e58 <argp_failure@@Base+0x8ec>
   16e40:	add	r5, r5, #16
   16e44:	bl	16df8 <argp_failure@@Base+0x88c>
   16e48:	add	r4, r0, r4
   16e4c:	ldr	r0, [r5], #16
   16e50:	cmp	r0, #0
   16e54:	bne	16e44 <argp_failure@@Base+0x8d8>
   16e58:	mov	r0, r4
   16e5c:	pop	{r4, r5, fp, pc}
   16e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e64:	add	fp, sp, #28
   16e68:	sub	sp, sp, #28
   16e6c:	ldr	r4, [r0, #4]
   16e70:	str	r1, [fp, #-40]	; 0xffffffd8
   16e74:	cmp	r4, #0
   16e78:	beq	17208 <argp_failure@@Base+0xc9c>
   16e7c:	mov	r5, r0
   16e80:	ldr	r0, [r0, #8]
   16e84:	bl	11518 <strlen@plt>
   16e88:	add	r0, r0, #8
   16e8c:	bic	r0, r0, #7
   16e90:	sub	r0, sp, r0
   16e94:	mov	sp, r0
   16e98:	ldr	r7, [r5]
   16e9c:	str	r0, [fp, #-52]	; 0xffffffcc
   16ea0:	str	r0, [fp, #-48]	; 0xffffffd0
   16ea4:	str	r5, [fp, #-44]	; 0xffffffd4
   16ea8:	ldr	r6, [r7, #4]
   16eac:	str	r4, [fp, #-36]	; 0xffffffdc
   16eb0:	cmp	r6, #0
   16eb4:	beq	16f58 <argp_failure@@Base+0x9ec>
   16eb8:	ldr	r4, [r7]
   16ebc:	ldr	r5, [r7, #8]
   16ec0:	mov	sl, r4
   16ec4:	b	16ef0 <argp_failure@@Base+0x984>
   16ec8:	ldr	r0, [r4, #8]
   16ecc:	cmp	r0, #0
   16ed0:	bne	16f48 <argp_failure@@Base+0x9dc>
   16ed4:	ldr	r0, [r4, #12]
   16ed8:	orr	r0, r0, r8
   16edc:	tst	r0, #16
   16ee0:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   16ee4:	strbeq	r9, [r0], #1
   16ee8:	streq	r0, [fp, #-48]	; 0xffffffd0
   16eec:	b	16f48 <argp_failure@@Base+0x9dc>
   16ef0:	ldr	r8, [sl, #12]
   16ef4:	tst	r8, #8
   16ef8:	bne	16f4c <argp_failure@@Base+0x9e0>
   16efc:	ldr	r9, [sl, #4]
   16f00:	sub	r0, r9, #1
   16f04:	cmp	r0, #254	; 0xfe
   16f08:	bhi	16f4c <argp_failure@@Base+0x9e0>
   16f0c:	bl	114e8 <__ctype_b_loc@plt>
   16f10:	ldr	r0, [r0]
   16f14:	add	r0, r0, r9, lsl #1
   16f18:	ldrb	r0, [r0, #1]
   16f1c:	tst	r0, #64	; 0x40
   16f20:	beq	16f4c <argp_failure@@Base+0x9e0>
   16f24:	ldrb	r0, [r5]
   16f28:	cmp	r9, r0
   16f2c:	bne	16f4c <argp_failure@@Base+0x9e0>
   16f30:	tst	r8, #4
   16f34:	moveq	r4, sl
   16f38:	tst	r8, #2
   16f3c:	ldreq	r0, [sl, #8]
   16f40:	cmpeq	r0, #0
   16f44:	beq	16ec8 <argp_failure@@Base+0x95c>
   16f48:	add	r5, r5, #1
   16f4c:	subs	r6, r6, #1
   16f50:	add	sl, sl, #24
   16f54:	bne	16ef0 <argp_failure@@Base+0x984>
   16f58:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16f5c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16f60:	add	r7, r7, #28
   16f64:	subs	r4, r4, #1
   16f68:	bne	16ea8 <argp_failure@@Base+0x93c>
   16f6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16f74:	cmp	r1, r2
   16f78:	bls	16f94 <argp_failure@@Base+0xa28>
   16f7c:	mov	r0, #0
   16f80:	strb	r0, [r1]
   16f84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16f88:	movw	r1, #52382	; 0xcc9e
   16f8c:	movt	r1, #1
   16f90:	bl	1ab18 <argp_parse@@Base+0x27a0>
   16f94:	ldr	r5, [r6, #4]
   16f98:	cmp	r5, #0
   16f9c:	beq	17208 <argp_failure@@Base+0xc9c>
   16fa0:	ldr	r8, [r6]
   16fa4:	ldr	r9, [r8, #4]
   16fa8:	cmp	r9, #0
   16fac:	beq	17140 <argp_failure@@Base+0xbd4>
   16fb0:	ldr	sl, [r8]
   16fb4:	ldr	r4, [r8, #8]
   16fb8:	str	sl, [fp, #-36]	; 0xffffffdc
   16fbc:	ldr	r6, [sl, #12]
   16fc0:	tst	r6, #8
   16fc4:	bne	17134 <argp_failure@@Base+0xbc8>
   16fc8:	ldr	r7, [sl, #4]
   16fcc:	sub	r0, r7, #1
   16fd0:	cmp	r0, #254	; 0xfe
   16fd4:	bhi	17134 <argp_failure@@Base+0xbc8>
   16fd8:	bl	114e8 <__ctype_b_loc@plt>
   16fdc:	ldr	r0, [r0]
   16fe0:	add	r0, r0, r7, lsl #1
   16fe4:	ldrb	r0, [r0, #1]
   16fe8:	tst	r0, #64	; 0x40
   16fec:	beq	17134 <argp_failure@@Base+0xbc8>
   16ff0:	ldrb	r0, [r4]
   16ff4:	cmp	r7, r0
   16ff8:	bne	17134 <argp_failure@@Base+0xbc8>
   16ffc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17000:	tst	r6, #4
   17004:	moveq	r0, sl
   17008:	tst	r6, #2
   1700c:	str	r0, [fp, #-36]	; 0xffffffdc
   17010:	bne	17130 <argp_failure@@Base+0xbc4>
   17014:	ldr	r3, [sl, #8]
   17018:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1701c:	cmp	r3, #0
   17020:	ldr	r0, [r0, #12]
   17024:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   17028:	orr	r0, r0, r6
   1702c:	ldreq	r3, [r1, #8]
   17030:	tst	r0, #16
   17034:	bne	17130 <argp_failure@@Base+0xbc4>
   17038:	cmp	r3, #0
   1703c:	beq	17130 <argp_failure@@Base+0xbc4>
   17040:	tst	r0, #1
   17044:	bne	170d0 <argp_failure@@Base+0xb64>
   17048:	mov	r0, r3
   1704c:	str	r3, [fp, #-48]	; 0xffffffd0
   17050:	bl	11518 <strlen@plt>
   17054:	ldr	r7, [fp, #-40]	; 0xffffffd8
   17058:	add	r6, r0, #6
   1705c:	ldr	r2, [r7, #24]
   17060:	ldr	r0, [r7, #28]
   17064:	ldr	r1, [r7, #16]
   17068:	sub	r2, r0, r2
   1706c:	cmp	r2, r1
   17070:	bls	17080 <argp_failure@@Base+0xb14>
   17074:	mov	r0, r7
   17078:	bl	1a4cc <argp_parse@@Base+0x2154>
   1707c:	ldr	r0, [r7, #28]
   17080:	ldr	r3, [r7, #20]
   17084:	ldr	r2, [r7, #8]
   17088:	ldr	r1, [r7, #32]
   1708c:	cmp	r3, #0
   17090:	addgt	r6, r6, r3
   17094:	cmp	r6, r2
   17098:	bcs	170e4 <argp_failure@@Base+0xb78>
   1709c:	ldr	r6, [fp, #-48]	; 0xffffffd0
   170a0:	cmp	r0, r1
   170a4:	bcc	170c0 <argp_failure@@Base+0xb54>
   170a8:	mov	r0, r7
   170ac:	mov	r1, #1
   170b0:	bl	1aa2c <argp_parse@@Base+0x26b4>
   170b4:	cmp	r0, #0
   170b8:	beq	17118 <argp_failure@@Base+0xbac>
   170bc:	ldr	r0, [r7, #28]
   170c0:	add	r1, r0, #1
   170c4:	str	r1, [r7, #28]
   170c8:	mov	r1, #32
   170cc:	b	17114 <argp_failure@@Base+0xba8>
   170d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   170d4:	movw	r1, #52389	; 0xcca5
   170d8:	mov	r2, r7
   170dc:	movt	r1, #1
   170e0:	b	1712c <argp_failure@@Base+0xbc0>
   170e4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   170e8:	cmp	r0, r1
   170ec:	bcc	17108 <argp_failure@@Base+0xb9c>
   170f0:	mov	r0, r7
   170f4:	mov	r1, #1
   170f8:	bl	1aa2c <argp_parse@@Base+0x26b4>
   170fc:	cmp	r0, #0
   17100:	beq	17118 <argp_failure@@Base+0xbac>
   17104:	ldr	r0, [r7, #28]
   17108:	add	r1, r0, #1
   1710c:	str	r1, [r7, #28]
   17110:	mov	r1, #10
   17114:	strb	r1, [r0]
   17118:	ldr	r2, [sl, #4]
   1711c:	movw	r1, #52400	; 0xccb0
   17120:	mov	r0, r7
   17124:	mov	r3, r6
   17128:	movt	r1, #1
   1712c:	bl	1ab18 <argp_parse@@Base+0x27a0>
   17130:	add	r4, r4, #1
   17134:	subs	r9, r9, #1
   17138:	add	sl, sl, #24
   1713c:	bne	16fbc <argp_failure@@Base+0xa50>
   17140:	subs	r5, r5, #1
   17144:	add	r8, r8, #28
   17148:	bne	16fa4 <argp_failure@@Base+0xa38>
   1714c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17150:	ldr	r4, [r0, #4]
   17154:	cmp	r4, #0
   17158:	beq	17208 <argp_failure@@Base+0xc9c>
   1715c:	ldr	r6, [r0]
   17160:	movw	sl, #52433	; 0xccd1
   17164:	movw	r9, #52409	; 0xccb9
   17168:	movt	sl, #1
   1716c:	movt	r9, #1
   17170:	ldr	r7, [r6, #4]
   17174:	cmp	r7, #0
   17178:	beq	171fc <argp_failure@@Base+0xc90>
   1717c:	ldr	r8, [r6]
   17180:	mov	r5, r8
   17184:	ldr	r2, [r5]
   17188:	cmp	r2, #0
   1718c:	beq	171f0 <argp_failure@@Base+0xc84>
   17190:	ldr	r0, [r5, #12]
   17194:	tst	r0, #4
   17198:	moveq	r8, r5
   1719c:	tst	r0, #2
   171a0:	bne	171f0 <argp_failure@@Base+0xc84>
   171a4:	ldr	r3, [r5, #8]
   171a8:	ldr	r1, [r8, #12]
   171ac:	cmp	r3, #0
   171b0:	orr	r0, r1, r0
   171b4:	ldreq	r3, [r8, #8]
   171b8:	tst	r0, #16
   171bc:	bne	171f0 <argp_failure@@Base+0xc84>
   171c0:	cmp	r3, #0
   171c4:	beq	171e4 <argp_failure@@Base+0xc78>
   171c8:	tst	r0, #1
   171cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   171d0:	movne	r1, r9
   171d4:	movweq	r1, #52422	; 0xccc6
   171d8:	movteq	r1, #1
   171dc:	bl	1ab18 <argp_parse@@Base+0x27a0>
   171e0:	b	171f0 <argp_failure@@Base+0xc84>
   171e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   171e8:	mov	r1, sl
   171ec:	bl	1ab18 <argp_parse@@Base+0x27a0>
   171f0:	subs	r7, r7, #1
   171f4:	add	r5, r5, #24
   171f8:	bne	17184 <argp_failure@@Base+0xc18>
   171fc:	subs	r4, r4, #1
   17200:	add	r6, r6, #28
   17204:	bne	17170 <argp_failure@@Base+0xc04>
   17208:	sub	sp, fp, #28
   1720c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17214:	add	fp, sp, #28
   17218:	sub	sp, sp, #28
   1721c:	ldr	r6, [r0, #8]
   17220:	ldr	r5, [r0, #16]
   17224:	ldr	sl, [r2]
   17228:	mov	r4, r3
   1722c:	mov	r9, r2
   17230:	mov	r8, r1
   17234:	mov	r7, r0
   17238:	cmp	r0, #0
   1723c:	mov	r0, r6
   17240:	beq	17278 <argp_failure@@Base+0xd0c>
   17244:	ldr	r0, [r7, #20]
   17248:	cmp	r0, #0
   1724c:	mov	r0, r6
   17250:	beq	17278 <argp_failure@@Base+0xd0c>
   17254:	mov	r0, r7
   17258:	mov	r1, r8
   1725c:	bl	18fb4 <argp_parse@@Base+0xc3c>
   17260:	ldr	r3, [r7, #20]
   17264:	mov	r2, r0
   17268:	movw	r0, #6
   1726c:	mov	r1, r6
   17270:	movt	r0, #512	; 0x200
   17274:	blx	r3
   17278:	cmp	r0, #0
   1727c:	str	sl, [sp, #24]
   17280:	beq	172e0 <argp_failure@@Base+0xd74>
   17284:	mov	r1, #10
   17288:	mov	sl, r0
   1728c:	bl	113a4 <strchrnul@plt>
   17290:	mov	r7, r0
   17294:	ldrb	r0, [r0]
   17298:	cmp	r0, #0
   1729c:	add	r0, sp, #12
   172a0:	stm	r0, {r5, r6, sl}
   172a4:	beq	172ec <argp_failure@@Base+0xd80>
   172a8:	ldr	r0, [sp, #24]
   172ac:	ldrb	r6, [r0]
   172b0:	cmp	r6, #0
   172b4:	beq	172f4 <argp_failure@@Base+0xd88>
   172b8:	mov	r5, #0
   172bc:	add	sl, r7, #1
   172c0:	mov	r1, #10
   172c4:	mov	r0, sl
   172c8:	bl	113a4 <strchrnul@plt>
   172cc:	add	r5, r5, #1
   172d0:	mov	r7, r0
   172d4:	cmp	r5, r6
   172d8:	bcc	172bc <argp_failure@@Base+0xd50>
   172dc:	b	172f8 <argp_failure@@Base+0xd8c>
   172e0:	mov	r7, #0
   172e4:	mov	sl, #0
   172e8:	b	17428 <argp_failure@@Base+0xebc>
   172ec:	mov	r0, #0
   172f0:	b	17308 <argp_failure@@Base+0xd9c>
   172f4:	ldr	sl, [sp, #20]
   172f8:	ldr	r0, [r9]
   172fc:	add	r0, r0, #1
   17300:	str	r0, [r9]
   17304:	mov	r0, #1
   17308:	ldr	r5, [fp, #8]
   1730c:	str	r0, [sp, #8]
   17310:	add	r0, r7, #1
   17314:	sub	r6, r0, sl
   17318:	ldr	r2, [r5, #24]
   1731c:	ldr	r0, [r5, #28]
   17320:	ldr	r1, [r5, #16]
   17324:	sub	r2, r0, r2
   17328:	cmp	r2, r1
   1732c:	bls	1733c <argp_failure@@Base+0xdd0>
   17330:	mov	r0, r5
   17334:	bl	1a4cc <argp_parse@@Base+0x2154>
   17338:	ldr	r0, [r5, #28]
   1733c:	ldr	r3, [r5, #20]
   17340:	ldr	r2, [r5, #8]
   17344:	ldr	r1, [r5, #32]
   17348:	cmp	r3, #0
   1734c:	addgt	r6, r6, r3
   17350:	cmp	r6, r2
   17354:	bcs	17388 <argp_failure@@Base+0xe1c>
   17358:	cmp	r0, r1
   1735c:	bcc	17378 <argp_failure@@Base+0xe0c>
   17360:	mov	r0, r5
   17364:	mov	r1, #1
   17368:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1736c:	cmp	r0, #0
   17370:	beq	173b8 <argp_failure@@Base+0xe4c>
   17374:	ldr	r0, [r5, #28]
   17378:	add	r1, r0, #1
   1737c:	str	r1, [r5, #28]
   17380:	mov	r1, #32
   17384:	b	173b4 <argp_failure@@Base+0xe48>
   17388:	cmp	r0, r1
   1738c:	bcc	173a8 <argp_failure@@Base+0xe3c>
   17390:	mov	r0, r5
   17394:	mov	r1, #1
   17398:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1739c:	cmp	r0, #0
   173a0:	beq	173b8 <argp_failure@@Base+0xe4c>
   173a4:	ldr	r0, [r5, #28]
   173a8:	add	r1, r0, #1
   173ac:	str	r1, [r5, #28]
   173b0:	mov	r1, #10
   173b4:	strb	r1, [r0]
   173b8:	mov	r6, r5
   173bc:	sub	r5, r7, sl
   173c0:	ldr	r0, [r6, #28]
   173c4:	ldr	r1, [r6, #32]
   173c8:	add	r2, r0, r5
   173cc:	cmp	r2, r1
   173d0:	bls	173f0 <argp_failure@@Base+0xe84>
   173d4:	mov	r0, r6
   173d8:	mov	r1, r5
   173dc:	bl	1aa2c <argp_parse@@Base+0x26b4>
   173e0:	cmp	r0, #0
   173e4:	beq	17408 <argp_failure@@Base+0xe9c>
   173e8:	ldr	r6, [fp, #8]
   173ec:	ldr	r0, [r6, #28]
   173f0:	mov	r1, sl
   173f4:	mov	r2, r5
   173f8:	bl	113d4 <memcpy@plt>
   173fc:	ldr	r0, [r6, #28]
   17400:	add	r0, r0, r5
   17404:	str	r0, [r6, #28]
   17408:	ldr	r0, [sp, #16]
   1740c:	ldr	r1, [sp, #20]
   17410:	cmp	r1, r0
   17414:	beq	17420 <argp_failure@@Base+0xeb4>
   17418:	mov	r0, r1
   1741c:	bl	19648 <argp_parse@@Base+0x12d0>
   17420:	ldr	r5, [sp, #12]
   17424:	ldr	sl, [sp, #8]
   17428:	cmp	r5, #0
   1742c:	ldrne	r0, [r5]
   17430:	cmpne	r0, #0
   17434:	beq	1746c <argp_failure@@Base+0xf00>
   17438:	add	r6, r5, #16
   1743c:	ldr	r5, [fp, #8]
   17440:	mov	r1, r8
   17444:	mov	r2, r9
   17448:	mov	r3, r4
   1744c:	str	r5, [sp]
   17450:	bl	17210 <argp_failure@@Base+0xca4>
   17454:	clz	r1, r0
   17458:	ldr	r0, [r6], #16
   1745c:	lsr	r4, r1, #5
   17460:	cmp	r0, #0
   17464:	bne	17440 <argp_failure@@Base+0xed4>
   17468:	lsr	r4, r1, #5
   1746c:	cmp	sl, #0
   17470:	cmpne	r4, #0
   17474:	bne	17488 <argp_failure@@Base+0xf1c>
   17478:	clz	r0, r4
   1747c:	lsr	r0, r0, #5
   17480:	sub	sp, fp, #28
   17484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17488:	ldr	r2, [sp, #24]
   1748c:	ldrb	r1, [r7]
   17490:	ldrb	r0, [r2]
   17494:	cmp	r1, #0
   17498:	beq	174ac <argp_failure@@Base+0xf40>
   1749c:	add	r0, r0, #1
   174a0:	mov	r4, #0
   174a4:	strb	r0, [r2]
   174a8:	b	17478 <argp_failure@@Base+0xf0c>
   174ac:	cmp	r0, #0
   174b0:	movne	r0, #0
   174b4:	strbne	r0, [r2]
   174b8:	b	17478 <argp_failure@@Base+0xf0c>
   174bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174c0:	add	fp, sp, #28
   174c4:	sub	sp, sp, #28
   174c8:	ldr	r7, [r0, #12]
   174cc:	ldr	r8, [r0, #16]
   174d0:	mov	r6, r0
   174d4:	mov	sl, r3
   174d8:	str	r1, [sp, #24]
   174dc:	str	r3, [sp, #20]
   174e0:	str	r2, [sp, #16]
   174e4:	cmp	r7, #0
   174e8:	beq	17530 <argp_failure@@Base+0xfc4>
   174ec:	mov	r0, #0
   174f0:	mov	r1, #11
   174f4:	mov	r5, r2
   174f8:	str	r0, [sp, #12]
   174fc:	mov	r0, r7
   17500:	bl	11524 <strchr@plt>
   17504:	cmp	r0, #0
   17508:	mov	r9, r0
   1750c:	mov	r4, r0
   17510:	subne	r9, r9, r7
   17514:	cmp	r5, #0
   17518:	movne	r9, #0
   1751c:	cmp	r0, #0
   17520:	addne	r4, r4, #1
   17524:	cmp	r5, #0
   17528:	moveq	r4, r7
   1752c:	b	17540 <argp_failure@@Base+0xfd4>
   17530:	mov	r0, #0
   17534:	mov	r9, #0
   17538:	mov	r4, #0
   1753c:	str	r0, [sp, #12]
   17540:	ldr	r0, [r6, #20]
   17544:	movw	r7, #1
   17548:	mov	r5, r8
   1754c:	movt	r7, #512	; 0x200
   17550:	cmp	r0, #0
   17554:	beq	17650 <argp_failure@@Base+0x10e4>
   17558:	cmp	r9, #0
   1755c:	beq	17570 <argp_failure@@Base+0x1004>
   17560:	mov	r0, r4
   17564:	mov	r1, r9
   17568:	bl	113c8 <strndup@plt>
   1756c:	mov	r4, r0
   17570:	ldr	r1, [sp, #24]
   17574:	mov	r0, r6
   17578:	bl	18fb4 <argp_parse@@Base+0xc3c>
   1757c:	mov	r2, r0
   17580:	ldr	r0, [sp, #16]
   17584:	ldr	r3, [r6, #20]
   17588:	mov	r1, r4
   1758c:	str	r2, [sp, #12]
   17590:	cmp	r0, #0
   17594:	mov	r0, r7
   17598:	addne	r0, r0, #1
   1759c:	blx	r3
   175a0:	mov	r8, r0
   175a4:	cmp	r8, #0
   175a8:	beq	1765c <argp_failure@@Base+0x10f0>
   175ac:	ldr	r0, [sp, #20]
   175b0:	cmp	r0, #0
   175b4:	beq	175f4 <argp_failure@@Base+0x1088>
   175b8:	ldr	r0, [fp, #12]
   175bc:	ldr	r2, [r0, #28]
   175c0:	ldr	r1, [r0, #32]
   175c4:	cmp	r2, r1
   175c8:	bcc	175e4 <argp_failure@@Base+0x1078>
   175cc:	mov	r1, #1
   175d0:	bl	1aa2c <argp_parse@@Base+0x26b4>
   175d4:	cmp	r0, #0
   175d8:	beq	175f4 <argp_failure@@Base+0x1088>
   175dc:	ldr	r0, [fp, #12]
   175e0:	ldr	r2, [r0, #28]
   175e4:	add	r1, r2, #1
   175e8:	str	r1, [r0, #28]
   175ec:	mov	r1, #10
   175f0:	strb	r1, [r2]
   175f4:	cmp	r9, #0
   175f8:	str	r5, [sp, #8]
   175fc:	beq	1766c <argp_failure@@Base+0x1100>
   17600:	cmp	r8, r4
   17604:	bne	1766c <argp_failure@@Base+0x1100>
   17608:	ldr	r5, [fp, #12]
   1760c:	ldr	r0, [r5, #28]!
   17610:	ldr	r2, [r5, #4]
   17614:	add	r1, r0, r9
   17618:	cmp	r1, r2
   1761c:	bls	17638 <argp_failure@@Base+0x10cc>
   17620:	ldr	r0, [fp, #12]
   17624:	mov	r1, r9
   17628:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1762c:	cmp	r0, #0
   17630:	beq	176cc <argp_failure@@Base+0x1160>
   17634:	ldr	r0, [r5]
   17638:	mov	r1, r4
   1763c:	mov	r2, r9
   17640:	bl	113d4 <memcpy@plt>
   17644:	ldr	r0, [r5]
   17648:	add	r0, r0, r9
   1764c:	b	176c8 <argp_failure@@Base+0x115c>
   17650:	mov	r8, r4
   17654:	cmp	r8, #0
   17658:	bne	175ac <argp_failure@@Base+0x1040>
   1765c:	mov	sl, #0
   17660:	cmp	r9, #0
   17664:	bne	17764 <argp_failure@@Base+0x11f8>
   17668:	b	1777c <argp_failure@@Base+0x1210>
   1766c:	mov	r0, r8
   17670:	bl	11518 <strlen@plt>
   17674:	ldr	r1, [fp, #12]
   17678:	cmp	r0, #0
   1767c:	add	r5, r1, #28
   17680:	beq	176cc <argp_failure@@Base+0x1160>
   17684:	mov	r7, r0
   17688:	ldr	r0, [r1, #28]
   1768c:	ldr	r1, [r1, #32]
   17690:	add	r2, r0, r7
   17694:	cmp	r2, r1
   17698:	bls	176b4 <argp_failure@@Base+0x1148>
   1769c:	ldr	r0, [fp, #12]
   176a0:	mov	r1, r7
   176a4:	bl	1aa2c <argp_parse@@Base+0x26b4>
   176a8:	cmp	r0, #0
   176ac:	beq	176cc <argp_failure@@Base+0x1160>
   176b0:	ldr	r0, [r5]
   176b4:	mov	r1, r8
   176b8:	mov	r2, r7
   176bc:	bl	113d4 <memcpy@plt>
   176c0:	ldr	r0, [r5]
   176c4:	add	r0, r0, r7
   176c8:	str	r0, [r5]
   176cc:	ldr	r7, [fp, #12]
   176d0:	ldr	r2, [r5]
   176d4:	ldr	r1, [r7, #24]
   176d8:	ldr	r0, [r7, #16]
   176dc:	sub	r1, r2, r1
   176e0:	cmp	r1, r0
   176e4:	bls	176f0 <argp_failure@@Base+0x1184>
   176e8:	mov	r0, r7
   176ec:	bl	1a4cc <argp_parse@@Base+0x2154>
   176f0:	ldr	r1, [r7, #20]
   176f4:	ldr	r0, [r7, #4]
   176f8:	bic	r1, r1, r1, asr #31
   176fc:	cmp	r1, r0
   17700:	bls	17744 <argp_failure@@Base+0x11d8>
   17704:	ldr	r0, [fp, #12]
   17708:	mov	r1, r0
   1770c:	ldr	r0, [r0, #28]
   17710:	ldr	r1, [r1, #32]
   17714:	cmp	r0, r1
   17718:	bcc	17734 <argp_failure@@Base+0x11c8>
   1771c:	ldr	r0, [fp, #12]
   17720:	mov	r1, #1
   17724:	bl	1aa2c <argp_parse@@Base+0x26b4>
   17728:	cmp	r0, #0
   1772c:	beq	17744 <argp_failure@@Base+0x11d8>
   17730:	ldr	r0, [r5]
   17734:	add	r1, r0, #1
   17738:	str	r1, [r5]
   1773c:	mov	r1, #10
   17740:	strb	r1, [r0]
   17744:	mov	sl, #1
   17748:	cmp	r8, r4
   1774c:	beq	17758 <argp_failure@@Base+0x11ec>
   17750:	mov	r0, r8
   17754:	bl	19648 <argp_parse@@Base+0x12d0>
   17758:	ldr	r5, [sp, #8]
   1775c:	cmp	r9, #0
   17760:	beq	1777c <argp_failure@@Base+0x1210>
   17764:	cmp	r4, #0
   17768:	ldrne	r0, [r6, #20]
   1776c:	cmpne	r0, #0
   17770:	beq	1777c <argp_failure@@Base+0x1210>
   17774:	mov	r0, r4
   17778:	bl	19648 <argp_parse@@Base+0x12d0>
   1777c:	ldr	r7, [sp, #16]
   17780:	ldr	r9, [sp, #24]
   17784:	ldr	r8, [sp, #20]
   17788:	cmp	r7, #0
   1778c:	beq	178e8 <argp_failure@@Base+0x137c>
   17790:	ldr	r3, [r6, #20]
   17794:	cmp	r3, #0
   17798:	beq	178e8 <argp_failure@@Base+0x137c>
   1779c:	ldr	r2, [sp, #12]
   177a0:	movw	r0, #1
   177a4:	mov	r1, #0
   177a8:	movt	r0, #512	; 0x200
   177ac:	add	r0, r0, #3
   177b0:	blx	r3
   177b4:	ldr	r6, [fp, #12]
   177b8:	cmp	r0, #0
   177bc:	beq	178ec <argp_failure@@Base+0x1380>
   177c0:	mov	r4, r0
   177c4:	orrs	r0, sl, r8
   177c8:	beq	17804 <argp_failure@@Base+0x1298>
   177cc:	ldr	r0, [r6, #28]
   177d0:	ldr	r1, [r6, #32]
   177d4:	cmp	r0, r1
   177d8:	bcc	177f4 <argp_failure@@Base+0x1288>
   177dc:	mov	r0, r6
   177e0:	mov	r1, #1
   177e4:	bl	1aa2c <argp_parse@@Base+0x26b4>
   177e8:	cmp	r0, #0
   177ec:	beq	17804 <argp_failure@@Base+0x1298>
   177f0:	ldr	r0, [r6, #28]
   177f4:	add	r1, r0, #1
   177f8:	str	r1, [r6, #28]
   177fc:	mov	r1, #10
   17800:	strb	r1, [r0]
   17804:	mov	r0, r4
   17808:	mov	sl, r5
   1780c:	bl	11518 <strlen@plt>
   17810:	cmp	r0, #0
   17814:	beq	17860 <argp_failure@@Base+0x12f4>
   17818:	mov	r5, r0
   1781c:	ldr	r0, [r6, #28]
   17820:	ldr	r1, [r6, #32]
   17824:	add	r2, r0, r5
   17828:	cmp	r2, r1
   1782c:	bls	17848 <argp_failure@@Base+0x12dc>
   17830:	mov	r0, r6
   17834:	mov	r1, r5
   17838:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1783c:	cmp	r0, #0
   17840:	beq	17860 <argp_failure@@Base+0x12f4>
   17844:	ldr	r0, [r6, #28]
   17848:	mov	r1, r4
   1784c:	mov	r2, r5
   17850:	bl	113d4 <memcpy@plt>
   17854:	ldr	r0, [r6, #28]
   17858:	add	r0, r0, r5
   1785c:	str	r0, [r6, #28]
   17860:	mov	r0, r4
   17864:	bl	19648 <argp_parse@@Base+0x12d0>
   17868:	ldr	r1, [r6, #24]
   1786c:	ldr	r2, [r6, #28]
   17870:	ldr	r0, [r6, #16]
   17874:	mov	r5, sl
   17878:	sub	r1, r2, r1
   1787c:	cmp	r1, r0
   17880:	bls	1788c <argp_failure@@Base+0x1320>
   17884:	mov	r0, r6
   17888:	bl	1a4cc <argp_parse@@Base+0x2154>
   1788c:	ldr	r1, [r6, #20]
   17890:	ldr	r0, [r6, #4]
   17894:	mov	sl, #1
   17898:	bic	r1, r1, r1, asr #31
   1789c:	cmp	r1, r0
   178a0:	bls	178ec <argp_failure@@Base+0x1380>
   178a4:	ldr	r0, [r6, #28]
   178a8:	ldr	r1, [r6, #32]
   178ac:	cmp	r0, r1
   178b0:	bcc	178d0 <argp_failure@@Base+0x1364>
   178b4:	mov	r0, r6
   178b8:	mov	r1, #1
   178bc:	mov	sl, #1
   178c0:	bl	1aa2c <argp_parse@@Base+0x26b4>
   178c4:	cmp	r0, #0
   178c8:	beq	178ec <argp_failure@@Base+0x1380>
   178cc:	ldr	r0, [r6, #28]
   178d0:	add	r1, r0, #1
   178d4:	mov	sl, #1
   178d8:	str	r1, [r6, #28]
   178dc:	mov	r1, #10
   178e0:	strb	r1, [r0]
   178e4:	b	178ec <argp_failure@@Base+0x1380>
   178e8:	ldr	r6, [fp, #12]
   178ec:	cmp	r5, #0
   178f0:	ldrne	r0, [r5]
   178f4:	cmpne	r0, #0
   178f8:	bne	17908 <argp_failure@@Base+0x139c>
   178fc:	mov	r0, sl
   17900:	sub	sp, fp, #28
   17904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17908:	ldr	r4, [fp, #8]
   1790c:	add	r5, r5, #16
   17910:	cmp	r4, #0
   17914:	cmpne	sl, #0
   17918:	bne	178fc <argp_failure@@Base+0x1390>
   1791c:	orrs	r3, sl, r8
   17920:	mov	r1, r9
   17924:	mov	r2, r7
   17928:	stm	sp, {r4, r6}
   1792c:	movwne	r3, #1
   17930:	bl	174bc <argp_failure@@Base+0xf50>
   17934:	orr	sl, r0, sl
   17938:	ldr	r0, [r5], #16
   1793c:	cmp	r0, #0
   17940:	bne	17910 <argp_failure@@Base+0x13a4>
   17944:	b	178fc <argp_failure@@Base+0x1390>
   17948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1794c:	add	fp, sp, #28
   17950:	sub	sp, sp, #28
   17954:	mov	r7, r0
   17958:	ldr	r0, [r0, #16]
   1795c:	mov	r5, r1
   17960:	cmp	r0, #0
   17964:	beq	17984 <argp_failure@@Base+0x1418>
   17968:	mov	r2, r0
   1796c:	mov	r1, r2
   17970:	ldr	r2, [r2, #12]
   17974:	cmp	r2, #0
   17978:	bne	1796c <argp_failure@@Base+0x1400>
   1797c:	add	r2, r1, #8
   17980:	b	17988 <argp_failure@@Base+0x141c>
   17984:	add	r2, r7, #12
   17988:	ldr	r1, [r5, #16]
   1798c:	ldr	r3, [r2]
   17990:	cmp	r1, #0
   17994:	beq	179b4 <argp_failure@@Base+0x1448>
   17998:	mov	r2, r1
   1799c:	mov	r6, r2
   179a0:	ldr	r2, [r2, #12]
   179a4:	cmp	r2, #0
   179a8:	bne	1799c <argp_failure@@Base+0x1430>
   179ac:	add	r2, r6, #8
   179b0:	b	179b8 <argp_failure@@Base+0x144c>
   179b4:	add	r2, r5, #12
   179b8:	ldr	r6, [r2]
   179bc:	orr	r4, r6, r3
   179c0:	sub	r2, r3, r6
   179c4:	cmn	r4, #1
   179c8:	mov	r4, r2
   179cc:	suble	r4, r6, r3
   179d0:	and	r3, r6, r3
   179d4:	cmp	r3, #0
   179d8:	movlt	r4, r2
   179dc:	cmp	r4, #0
   179e0:	bne	17a00 <argp_failure@@Base+0x1494>
   179e4:	cmp	r0, #0
   179e8:	mov	r4, r0
   179ec:	movwne	r4, #1
   179f0:	cmp	r1, #0
   179f4:	subne	r4, r4, #1
   179f8:	cmp	r4, #0
   179fc:	beq	17a0c <argp_failure@@Base+0x14a0>
   17a00:	mov	r0, r4
   17a04:	sub	sp, fp, #28
   17a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a0c:	cmp	r0, #0
   17a10:	beq	17a80 <argp_failure@@Base+0x1514>
   17a14:	ldr	r3, [r1, #20]
   17a18:	ldr	r2, [r0, #20]
   17a1c:	cmp	r2, r3
   17a20:	ble	17a48 <argp_failure@@Base+0x14dc>
   17a24:	ldr	r0, [r0, #12]
   17a28:	ldr	r2, [r0, #20]
   17a2c:	cmp	r2, r3
   17a30:	bgt	17a24 <argp_failure@@Base+0x14b8>
   17a34:	bl	17e5c <argp_failure@@Base+0x18f0>
   17a38:	mov	r4, r0
   17a3c:	cmp	r0, #0
   17a40:	movweq	r4, #1
   17a44:	b	17a00 <argp_failure@@Base+0x1494>
   17a48:	bge	17a70 <argp_failure@@Base+0x1504>
   17a4c:	ldr	r1, [r1, #12]
   17a50:	ldr	r3, [r1, #20]
   17a54:	cmp	r2, r3
   17a58:	blt	17a4c <argp_failure@@Base+0x14e0>
   17a5c:	bl	17e5c <argp_failure@@Base+0x18f0>
   17a60:	mov	r4, r0
   17a64:	cmp	r0, #0
   17a68:	mvneq	r4, #0
   17a6c:	b	17a00 <argp_failure@@Base+0x1494>
   17a70:	bl	17e5c <argp_failure@@Base+0x18f0>
   17a74:	mov	r4, r0
   17a78:	cmp	r0, #0
   17a7c:	bne	17a00 <argp_failure@@Base+0x1494>
   17a80:	ldr	r0, [r7, #12]
   17a84:	ldr	r1, [r5, #12]
   17a88:	orr	r2, r1, r0
   17a8c:	sub	r3, r0, r1
   17a90:	cmn	r2, #1
   17a94:	mov	r4, r3
   17a98:	suble	r4, r1, r0
   17a9c:	and	r0, r1, r0
   17aa0:	cmp	r0, #0
   17aa4:	movlt	r4, r3
   17aa8:	cmp	r4, #0
   17aac:	bne	17a00 <argp_failure@@Base+0x1494>
   17ab0:	ldr	r3, [r7, #4]
   17ab4:	mov	sl, #0
   17ab8:	cmp	r3, #0
   17abc:	beq	17af4 <argp_failure@@Base+0x1588>
   17ac0:	ldr	r0, [r7]
   17ac4:	mov	r1, r3
   17ac8:	add	r0, r0, #12
   17acc:	ldr	sl, [r0, #-12]
   17ad0:	cmp	sl, #0
   17ad4:	beq	17ae4 <argp_failure@@Base+0x1578>
   17ad8:	ldrb	r2, [r0]
   17adc:	tst	r2, #2
   17ae0:	beq	17af4 <argp_failure@@Base+0x1588>
   17ae4:	add	r0, r0, #24
   17ae8:	subs	r1, r1, #1
   17aec:	bne	17acc <argp_failure@@Base+0x1560>
   17af0:	mov	sl, #0
   17af4:	ldr	r8, [r5, #4]
   17af8:	cmp	r8, #0
   17afc:	beq	17b30 <argp_failure@@Base+0x15c4>
   17b00:	ldr	r0, [r5]
   17b04:	mov	r1, r8
   17b08:	add	r0, r0, #12
   17b0c:	ldr	r6, [r0, #-12]
   17b10:	cmp	r6, #0
   17b14:	beq	17b24 <argp_failure@@Base+0x15b8>
   17b18:	ldrb	r2, [r0]
   17b1c:	tst	r2, #2
   17b20:	beq	17b34 <argp_failure@@Base+0x15c8>
   17b24:	add	r0, r0, #24
   17b28:	subs	r1, r1, #1
   17b2c:	bne	17b0c <argp_failure@@Base+0x15a0>
   17b30:	mov	r6, #0
   17b34:	ldr	r4, [r7]
   17b38:	mov	r9, #0
   17b3c:	cmp	sl, #0
   17b40:	str	r3, [sp, #20]
   17b44:	str	r8, [sp, #16]
   17b48:	ldr	r1, [r4, #12]
   17b4c:	str	r4, [sp, #4]
   17b50:	beq	17bb8 <argp_failure@@Base+0x164c>
   17b54:	ands	r0, r1, #8
   17b58:	beq	17bb8 <argp_failure@@Base+0x164c>
   17b5c:	str	r1, [sp, #24]
   17b60:	bl	114e8 <__ctype_b_loc@plt>
   17b64:	ldrb	r1, [sl]
   17b68:	ldr	r0, [r0]
   17b6c:	b	17b74 <argp_failure@@Base+0x1608>
   17b70:	ldrb	r1, [sl, #1]!
   17b74:	add	r2, r0, r1, lsl #1
   17b78:	ldrb	r2, [r2, #1]
   17b7c:	tst	r2, #32
   17b80:	bne	17b70 <argp_failure@@Base+0x1604>
   17b84:	subs	r4, r1, #45	; 0x2d
   17b88:	movwne	r4, #1
   17b8c:	cmp	r1, #0
   17b90:	beq	17bb0 <argp_failure@@Base+0x1644>
   17b94:	uxtb	r1, r1
   17b98:	ldrb	r1, [r0, r1, lsl #1]
   17b9c:	tst	r1, #8
   17ba0:	bne	17bb0 <argp_failure@@Base+0x1644>
   17ba4:	ldrb	r1, [sl, #1]!
   17ba8:	cmp	r1, #0
   17bac:	bne	17b94 <argp_failure@@Base+0x1628>
   17bb0:	ldr	r1, [sp, #24]
   17bb4:	b	17bbc <argp_failure@@Base+0x1650>
   17bb8:	mov	r4, #0
   17bbc:	ldr	r0, [r5]
   17bc0:	cmp	r6, #0
   17bc4:	str	r0, [sp, #8]
   17bc8:	ldr	r0, [r0, #12]
   17bcc:	str	r0, [sp, #12]
   17bd0:	andsne	r0, r0, #8
   17bd4:	beq	17c30 <argp_failure@@Base+0x16c4>
   17bd8:	mov	r8, r1
   17bdc:	bl	114e8 <__ctype_b_loc@plt>
   17be0:	ldrb	r1, [r6]
   17be4:	ldr	r0, [r0]
   17be8:	b	17bf0 <argp_failure@@Base+0x1684>
   17bec:	ldrb	r1, [r6, #1]!
   17bf0:	add	r2, r0, r1, lsl #1
   17bf4:	ldrb	r2, [r2, #1]
   17bf8:	tst	r2, #32
   17bfc:	bne	17bec <argp_failure@@Base+0x1680>
   17c00:	subs	r9, r1, #45	; 0x2d
   17c04:	movwne	r9, #1
   17c08:	cmp	r1, #0
   17c0c:	beq	17c2c <argp_failure@@Base+0x16c0>
   17c10:	uxtb	r1, r1
   17c14:	ldrb	r1, [r0, r1, lsl #1]
   17c18:	tst	r1, #8
   17c1c:	bne	17c2c <argp_failure@@Base+0x16c0>
   17c20:	ldrb	r1, [r6, #1]!
   17c24:	cmp	r1, #0
   17c28:	bne	17c10 <argp_failure@@Base+0x16a4>
   17c2c:	mov	r1, r8
   17c30:	subs	r4, r4, r9
   17c34:	bne	17a00 <argp_failure@@Base+0x1494>
   17c38:	ldr	r0, [sp, #20]
   17c3c:	mov	r2, #0
   17c40:	cmp	r0, #0
   17c44:	beq	17cdc <argp_failure@@Base+0x1770>
   17c48:	rsb	r8, r0, #1
   17c4c:	ldr	r0, [sp, #4]
   17c50:	ldr	r4, [r7, #8]
   17c54:	add	r9, r0, #36	; 0x24
   17c58:	tst	r1, #8
   17c5c:	beq	17c84 <argp_failure@@Base+0x1718>
   17c60:	mov	r2, #0
   17c64:	cmp	r8, #0
   17c68:	beq	17cdc <argp_failure@@Base+0x1770>
   17c6c:	cmp	r2, #0
   17c70:	bne	17cdc <argp_failure@@Base+0x1770>
   17c74:	ldr	r1, [r9], #24
   17c78:	add	r8, r8, #1
   17c7c:	tst	r1, #8
   17c80:	bne	17c60 <argp_failure@@Base+0x16f4>
   17c84:	ldr	r7, [r9, #-32]	; 0xffffffe0
   17c88:	sub	r0, r7, #1
   17c8c:	cmp	r0, #254	; 0xfe
   17c90:	bhi	17c60 <argp_failure@@Base+0x16f4>
   17c94:	str	r1, [sp, #24]
   17c98:	bl	114e8 <__ctype_b_loc@plt>
   17c9c:	ldr	r0, [r0]
   17ca0:	add	r0, r0, r7, lsl #1
   17ca4:	ldrb	r0, [r0, #1]
   17ca8:	tst	r0, #64	; 0x40
   17cac:	beq	17c60 <argp_failure@@Base+0x16f4>
   17cb0:	ldrb	r0, [r4]
   17cb4:	mov	r2, r7
   17cb8:	cmp	r7, r0
   17cbc:	bne	17c60 <argp_failure@@Base+0x16f4>
   17cc0:	ldr	r0, [sp, #24]
   17cc4:	add	r4, r4, #1
   17cc8:	tst	r0, #2
   17ccc:	mov	r0, #0
   17cd0:	movne	r2, r0
   17cd4:	cmp	r8, #0
   17cd8:	bne	17c6c <argp_failure@@Base+0x1700>
   17cdc:	ldr	r3, [sp, #16]
   17ce0:	mov	r9, #0
   17ce4:	mov	r0, r2
   17ce8:	str	r2, [sp, #24]
   17cec:	cmp	r3, #0
   17cf0:	beq	17d94 <argp_failure@@Base+0x1828>
   17cf4:	ldr	r0, [sp, #8]
   17cf8:	ldr	r5, [r5, #8]
   17cfc:	ldr	r4, [sp, #12]
   17d00:	rsb	r7, r3, #1
   17d04:	add	r8, r0, #36	; 0x24
   17d08:	tst	r4, #8
   17d0c:	beq	17d2c <argp_failure@@Base+0x17c0>
   17d10:	b	17d80 <argp_failure@@Base+0x1814>
   17d14:	ldr	r2, [sp, #24]
   17d18:	b	17d80 <argp_failure@@Base+0x1814>
   17d1c:	ldr	r4, [r8], #24
   17d20:	add	r7, r7, #1
   17d24:	tst	r4, #8
   17d28:	bne	17d80 <argp_failure@@Base+0x1814>
   17d2c:	ldr	r9, [r8, #-32]	; 0xffffffe0
   17d30:	sub	r0, r9, #1
   17d34:	cmp	r0, #254	; 0xfe
   17d38:	bhi	17d80 <argp_failure@@Base+0x1814>
   17d3c:	bl	114e8 <__ctype_b_loc@plt>
   17d40:	ldr	r0, [r0]
   17d44:	add	r0, r0, r9, lsl #1
   17d48:	ldrb	r0, [r0, #1]
   17d4c:	tst	r0, #64	; 0x40
   17d50:	beq	17d14 <argp_failure@@Base+0x17a8>
   17d54:	ldrb	r0, [r5]
   17d58:	ldr	r2, [sp, #24]
   17d5c:	cmp	r9, r0
   17d60:	bne	17d80 <argp_failure@@Base+0x1814>
   17d64:	tst	r4, #2
   17d68:	mov	r0, #0
   17d6c:	add	r5, r5, #1
   17d70:	movne	r9, r0
   17d74:	cmp	r7, #0
   17d78:	bne	17d8c <argp_failure@@Base+0x1820>
   17d7c:	b	17d94 <argp_failure@@Base+0x1828>
   17d80:	mov	r9, #0
   17d84:	cmp	r7, #0
   17d88:	beq	17d94 <argp_failure@@Base+0x1828>
   17d8c:	cmp	r9, #0
   17d90:	beq	17d1c <argp_failure@@Base+0x17b0>
   17d94:	tst	r2, #255	; 0xff
   17d98:	mov	r5, r2
   17d9c:	bne	17dac <argp_failure@@Base+0x1840>
   17da0:	cmp	sl, #0
   17da4:	ldrbne	r5, [sl]
   17da8:	moveq	r5, #0
   17dac:	tst	r9, #255	; 0xff
   17db0:	mov	r7, r9
   17db4:	bne	17dc4 <argp_failure@@Base+0x1858>
   17db8:	cmp	r6, #0
   17dbc:	ldrbne	r7, [r6]
   17dc0:	moveq	r7, #0
   17dc4:	bl	114d0 <__ctype_tolower_loc@plt>
   17dc8:	ldr	r2, [r0]
   17dcc:	uxtb	r0, r7
   17dd0:	uxtb	r1, r5
   17dd4:	ldr	r3, [r2, r0, lsl #2]
   17dd8:	ldr	r2, [r2, r1, lsl #2]
   17ddc:	subs	r4, r2, r3
   17de0:	subseq	r4, r0, r1
   17de4:	bne	17a00 <argp_failure@@Base+0x1494>
   17de8:	ldr	r0, [sp, #24]
   17dec:	uxtb	r4, r0
   17df0:	cmp	r4, #0
   17df4:	movwne	r4, #1
   17df8:	tst	r9, #255	; 0xff
   17dfc:	subne	r4, r4, #1
   17e00:	cmp	r4, #0
   17e04:	bne	17a00 <argp_failure@@Base+0x1494>
   17e08:	ldr	r0, [sp, #24]
   17e0c:	tst	r0, #255	; 0xff
   17e10:	beq	17e1c <argp_failure@@Base+0x18b0>
   17e14:	mov	r4, #0
   17e18:	b	17a00 <argp_failure@@Base+0x1494>
   17e1c:	cmp	sl, #0
   17e20:	mov	r4, sl
   17e24:	movwne	r4, #1
   17e28:	cmp	r6, #0
   17e2c:	subne	r4, r4, #1
   17e30:	cmp	r4, #0
   17e34:	bne	17a00 <argp_failure@@Base+0x1494>
   17e38:	cmp	sl, #0
   17e3c:	beq	17e14 <argp_failure@@Base+0x18a8>
   17e40:	mov	r0, sl
   17e44:	mov	r1, r6
   17e48:	bl	11458 <strcasecmp@plt>
   17e4c:	mov	r4, r0
   17e50:	cmp	r0, #0
   17e54:	moveq	r4, #0
   17e58:	b	17a00 <argp_failure@@Base+0x1494>
   17e5c:	push	{r4, r5, fp, lr}
   17e60:	add	fp, sp, #8
   17e64:	mov	r4, r1
   17e68:	mov	r5, r0
   17e6c:	ldr	r1, [r1, #12]
   17e70:	ldr	r0, [r0, #12]
   17e74:	cmp	r0, r1
   17e78:	beq	17e88 <argp_failure@@Base+0x191c>
   17e7c:	bl	17e5c <argp_failure@@Base+0x18f0>
   17e80:	cmp	r0, #0
   17e84:	popne	{r4, r5, fp, pc}
   17e88:	ldr	r1, [r5, #8]
   17e8c:	ldr	r2, [r4, #8]
   17e90:	orr	r0, r2, r1
   17e94:	sub	r3, r1, r2
   17e98:	cmn	r0, #1
   17e9c:	mov	r0, r3
   17ea0:	suble	r0, r2, r1
   17ea4:	and	r1, r2, r1
   17ea8:	cmp	r1, #0
   17eac:	movlt	r0, r3
   17eb0:	cmp	r0, #0
   17eb4:	ldreq	r0, [r5, #4]
   17eb8:	ldreq	r1, [r4, #4]
   17ebc:	subeq	r0, r1, r0
   17ec0:	pop	{r4, r5, fp, pc}
   17ec4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ec8:	add	fp, sp, #24
   17ecc:	mov	r8, r0
   17ed0:	ldr	r0, [r1, #12]
   17ed4:	mov	r5, r1
   17ed8:	cmp	r0, #0
   17edc:	beq	17f2c <argp_failure@@Base+0x19c0>
   17ee0:	ldr	r1, [r5, #8]
   17ee4:	ldr	r0, [r5]
   17ee8:	ldr	r4, [r1]
   17eec:	ldr	r7, [r0, #16]
   17ef0:	cmp	r4, #0
   17ef4:	ldrne	r1, [r1, #4]
   17ef8:	cmpne	r1, #0
   17efc:	bne	17ff8 <argp_failure@@Base+0x1a8c>
   17f00:	cmp	r7, #0
   17f04:	beq	17f1c <argp_failure@@Base+0x19b0>
   17f08:	ldr	r0, [r7]
   17f0c:	cmp	r0, #0
   17f10:	ldrbne	r1, [r0]
   17f14:	cmpne	r1, #0
   17f18:	bne	18050 <argp_failure@@Base+0x1ae4>
   17f1c:	mov	r0, #0
   17f20:	str	r0, [r5, #12]
   17f24:	add	r5, r5, #4
   17f28:	b	17f70 <argp_failure@@Base+0x1a04>
   17f2c:	ldr	r6, [r5, #4]!
   17f30:	ldr	r0, [r6, #28]
   17f34:	ldr	r1, [r6, #32]
   17f38:	add	r2, r0, #2
   17f3c:	cmp	r2, r1
   17f40:	bls	17f5c <argp_failure@@Base+0x19f0>
   17f44:	mov	r0, r6
   17f48:	mov	r1, #2
   17f4c:	bl	1aa2c <argp_parse@@Base+0x26b4>
   17f50:	cmp	r0, #0
   17f54:	beq	17f70 <argp_failure@@Base+0x1a04>
   17f58:	ldr	r0, [r6, #28]
   17f5c:	movw	r1, #8236	; 0x202c
   17f60:	strh	r1, [r0]
   17f64:	ldr	r0, [r6, #28]
   17f68:	add	r0, r0, #2
   17f6c:	str	r0, [r6, #28]
   17f70:	ldr	r5, [r5]
   17f74:	ldr	r1, [r5, #24]
   17f78:	ldr	r2, [r5, #28]
   17f7c:	ldr	r0, [r5, #16]
   17f80:	sub	r1, r2, r1
   17f84:	cmp	r1, r0
   17f88:	bls	17f94 <argp_failure@@Base+0x1a28>
   17f8c:	mov	r0, r5
   17f90:	bl	1a4cc <argp_parse@@Base+0x2154>
   17f94:	ldr	r0, [r5, #20]
   17f98:	bic	r0, r0, r0, asr #31
   17f9c:	sub	r1, r8, r0
   17fa0:	cmp	r1, #1
   17fa4:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   17fa8:	add	r1, r8, #1
   17fac:	mov	r6, #32
   17fb0:	sub	r4, r1, r0
   17fb4:	ldr	r0, [r5, #28]
   17fb8:	ldr	r1, [r5, #32]
   17fbc:	cmp	r0, r1
   17fc0:	bcc	17fdc <argp_failure@@Base+0x1a70>
   17fc4:	mov	r0, r5
   17fc8:	mov	r1, #1
   17fcc:	bl	1aa2c <argp_parse@@Base+0x26b4>
   17fd0:	cmp	r0, #0
   17fd4:	beq	17fe8 <argp_failure@@Base+0x1a7c>
   17fd8:	ldr	r0, [r5, #28]
   17fdc:	add	r1, r0, #1
   17fe0:	str	r1, [r5, #28]
   17fe4:	strb	r6, [r0]
   17fe8:	sub	r4, r4, #1
   17fec:	cmp	r4, #1
   17ff0:	bgt	17fb4 <argp_failure@@Base+0x1a48>
   17ff4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17ff8:	ldr	r1, [r4, #12]
   17ffc:	ldr	r0, [r0, #12]
   18000:	cmp	r0, r1
   18004:	beq	17f00 <argp_failure@@Base+0x1994>
   18008:	ldr	r6, [r5, #4]
   1800c:	ldr	r0, [r6, #28]
   18010:	ldr	r1, [r6, #32]
   18014:	cmp	r0, r1
   18018:	bcc	18034 <argp_failure@@Base+0x1ac8>
   1801c:	mov	r0, r6
   18020:	mov	r1, #1
   18024:	bl	1aa2c <argp_parse@@Base+0x26b4>
   18028:	cmp	r0, #0
   1802c:	beq	17f00 <argp_failure@@Base+0x1994>
   18030:	ldr	r0, [r6, #28]
   18034:	add	r1, r0, #1
   18038:	str	r1, [r6, #28]
   1803c:	mov	r1, #10
   18040:	strb	r1, [r0]
   18044:	cmp	r7, #0
   18048:	bne	17f08 <argp_failure@@Base+0x199c>
   1804c:	b	17f1c <argp_failure@@Base+0x19b0>
   18050:	cmp	r4, #0
   18054:	beq	1808c <argp_failure@@Base+0x1b20>
   18058:	ldr	r1, [r4, #16]
   1805c:	cmp	r1, r7
   18060:	beq	17f1c <argp_failure@@Base+0x19b0>
   18064:	cmp	r1, #0
   18068:	beq	18080 <argp_failure@@Base+0x1b14>
   1806c:	ldr	r1, [r1, #12]
   18070:	cmp	r1, r7
   18074:	cmpne	r1, #0
   18078:	bne	1806c <argp_failure@@Base+0x1b00>
   1807c:	b	18084 <argp_failure@@Base+0x1b18>
   18080:	mov	r1, #0
   18084:	cmp	r1, r7
   18088:	beq	17f1c <argp_failure@@Base+0x19b0>
   1808c:	ldr	r1, [r5, #4]
   18090:	mov	r2, r5
   18094:	ldr	r4, [r1, #12]
   18098:	ldr	r1, [r7, #16]
   1809c:	bl	180cc <argp_failure@@Base+0x1b60>
   180a0:	ldr	r6, [r5, #4]
   180a4:	ldr	r1, [r6, #24]
   180a8:	ldr	r2, [r6, #28]
   180ac:	ldr	r0, [r6, #16]
   180b0:	sub	r1, r2, r1
   180b4:	cmp	r1, r0
   180b8:	bls	180c4 <argp_failure@@Base+0x1b58>
   180bc:	mov	r0, r6
   180c0:	bl	1a4cc <argp_parse@@Base+0x2154>
   180c4:	str	r4, [r6, #12]
   180c8:	b	17f1c <argp_failure@@Base+0x19b0>
   180cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   180d0:	add	fp, sp, #28
   180d4:	sub	sp, sp, #4
   180d8:	mov	r9, r2
   180dc:	mov	r8, r0
   180e0:	cmp	r1, #0
   180e4:	mov	r6, r0
   180e8:	beq	18128 <argp_failure@@Base+0x1bbc>
   180ec:	ldr	r0, [r1, #20]
   180f0:	mov	r4, r1
   180f4:	mov	r6, r8
   180f8:	cmp	r0, #0
   180fc:	beq	18128 <argp_failure@@Base+0x1bbc>
   18100:	ldr	r1, [r9, #16]
   18104:	mov	r0, r4
   18108:	bl	18fb4 <argp_parse@@Base+0xc3c>
   1810c:	ldr	r3, [r4, #20]
   18110:	mov	r2, r0
   18114:	movw	r0, #3
   18118:	mov	r1, r8
   1811c:	movt	r0, #512	; 0x200
   18120:	blx	r3
   18124:	mov	r6, r0
   18128:	cmp	r6, #0
   1812c:	beq	1835c <argp_failure@@Base+0x1df0>
   18130:	ldrb	r0, [r6]
   18134:	cmp	r0, #0
   18138:	beq	18350 <argp_failure@@Base+0x1de4>
   1813c:	ldr	r0, [r9, #8]
   18140:	ldr	r0, [r0]
   18144:	cmp	r0, #0
   18148:	beq	18188 <argp_failure@@Base+0x1c1c>
   1814c:	ldr	r4, [r9, #4]
   18150:	ldr	r0, [r4, #28]
   18154:	ldr	r1, [r4, #32]
   18158:	cmp	r0, r1
   1815c:	bcc	18178 <argp_failure@@Base+0x1c0c>
   18160:	mov	r0, r4
   18164:	mov	r1, #1
   18168:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1816c:	cmp	r0, #0
   18170:	beq	18188 <argp_failure@@Base+0x1c1c>
   18174:	ldr	r0, [r4, #28]
   18178:	add	r1, r0, #1
   1817c:	str	r1, [r4, #28]
   18180:	mov	r1, #10
   18184:	strb	r1, [r0]
   18188:	ldr	r7, [r9, #4]
   1818c:	movw	sl, #58848	; 0xe5e0
   18190:	movt	sl, #2
   18194:	ldr	r4, [sl, #24]
   18198:	ldr	r1, [r7, #24]
   1819c:	ldr	r2, [r7, #28]
   181a0:	ldr	r0, [r7, #16]
   181a4:	sub	r1, r2, r1
   181a8:	cmp	r1, r0
   181ac:	bls	181b8 <argp_failure@@Base+0x1c4c>
   181b0:	mov	r0, r7
   181b4:	bl	1a4cc <argp_parse@@Base+0x2154>
   181b8:	ldr	r0, [r7, #20]
   181bc:	bic	r0, r0, r0, asr #31
   181c0:	sub	r1, r4, r0
   181c4:	cmp	r1, #1
   181c8:	blt	18218 <argp_failure@@Base+0x1cac>
   181cc:	add	r1, r4, #1
   181d0:	mov	r5, #32
   181d4:	sub	r4, r1, r0
   181d8:	ldr	r0, [r7, #28]
   181dc:	ldr	r1, [r7, #32]
   181e0:	cmp	r0, r1
   181e4:	bcc	18200 <argp_failure@@Base+0x1c94>
   181e8:	mov	r0, r7
   181ec:	mov	r1, #1
   181f0:	bl	1aa2c <argp_parse@@Base+0x26b4>
   181f4:	cmp	r0, #0
   181f8:	beq	1820c <argp_failure@@Base+0x1ca0>
   181fc:	ldr	r0, [r7, #28]
   18200:	add	r1, r0, #1
   18204:	str	r1, [r7, #28]
   18208:	strb	r5, [r0]
   1820c:	sub	r4, r4, #1
   18210:	cmp	r4, #1
   18214:	bgt	181d8 <argp_failure@@Base+0x1c6c>
   18218:	ldr	r4, [r9, #4]
   1821c:	ldr	r5, [sl, #24]
   18220:	ldr	r1, [r4, #24]
   18224:	ldr	r2, [r4, #28]
   18228:	ldr	r0, [r4, #16]
   1822c:	mov	r7, r4
   18230:	sub	r1, r2, r1
   18234:	mov	r2, sl
   18238:	mov	sl, r5
   1823c:	cmp	r1, r0
   18240:	bls	18268 <argp_failure@@Base+0x1cfc>
   18244:	mov	r0, r4
   18248:	mov	r7, r2
   1824c:	bl	1a4cc <argp_parse@@Base+0x2154>
   18250:	ldr	sl, [r7, #24]
   18254:	ldr	r7, [r9, #4]
   18258:	ldr	r1, [r7, #24]
   1825c:	ldr	r2, [r7, #28]
   18260:	ldr	r0, [r7, #16]
   18264:	sub	r1, r2, r1
   18268:	str	r5, [r4, #4]
   1826c:	cmp	r1, r0
   18270:	mov	r5, r7
   18274:	bls	18284 <argp_failure@@Base+0x1d18>
   18278:	mov	r0, r7
   1827c:	bl	1a4cc <argp_parse@@Base+0x2154>
   18280:	ldr	r5, [r9, #4]
   18284:	mov	r0, r6
   18288:	str	sl, [r7, #12]
   1828c:	bl	11518 <strlen@plt>
   18290:	cmp	r0, #0
   18294:	beq	182e0 <argp_failure@@Base+0x1d74>
   18298:	mov	r4, r0
   1829c:	ldr	r0, [r5, #28]
   182a0:	ldr	r1, [r5, #32]
   182a4:	add	r2, r0, r4
   182a8:	cmp	r2, r1
   182ac:	bls	182c8 <argp_failure@@Base+0x1d5c>
   182b0:	mov	r0, r5
   182b4:	mov	r1, r4
   182b8:	bl	1aa2c <argp_parse@@Base+0x26b4>
   182bc:	cmp	r0, #0
   182c0:	beq	182e0 <argp_failure@@Base+0x1d74>
   182c4:	ldr	r0, [r5, #28]
   182c8:	mov	r1, r6
   182cc:	mov	r2, r4
   182d0:	bl	113d4 <memcpy@plt>
   182d4:	ldr	r0, [r5, #28]
   182d8:	add	r0, r0, r4
   182dc:	str	r0, [r5, #28]
   182e0:	ldr	r4, [r9, #4]
   182e4:	mov	r5, r4
   182e8:	ldr	r2, [r4, #24]
   182ec:	ldr	r0, [r4, #16]
   182f0:	ldr	r1, [r5, #28]!
   182f4:	sub	r2, r1, r2
   182f8:	cmp	r2, r0
   182fc:	mov	r0, r4
   18300:	bls	18318 <argp_failure@@Base+0x1dac>
   18304:	mov	r0, r4
   18308:	bl	1a4cc <argp_parse@@Base+0x2154>
   1830c:	ldr	r0, [r9, #4]
   18310:	mov	r5, r0
   18314:	ldr	r1, [r5, #28]!
   18318:	mov	r2, #0
   1831c:	str	r2, [r4, #4]
   18320:	ldr	r2, [r0, #32]
   18324:	cmp	r1, r2
   18328:	bcc	18340 <argp_failure@@Base+0x1dd4>
   1832c:	mov	r1, #1
   18330:	bl	1aa2c <argp_parse@@Base+0x26b4>
   18334:	cmp	r0, #0
   18338:	beq	18350 <argp_failure@@Base+0x1de4>
   1833c:	ldr	r1, [r5]
   18340:	add	r0, r1, #1
   18344:	str	r0, [r5]
   18348:	mov	r0, #10
   1834c:	strb	r0, [r1]
   18350:	ldr	r0, [r9, #8]
   18354:	mov	r1, #1
   18358:	str	r1, [r0, #4]
   1835c:	cmp	r6, r8
   18360:	subeq	sp, fp, #28
   18364:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18368:	mov	r0, r6
   1836c:	sub	sp, fp, #28
   18370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18374:	b	19648 <argp_parse@@Base+0x12d0>

00018378 <argp_parse@@Base>:
   18378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1837c:	add	fp, sp, #28
   18380:	sub	sp, sp, #212	; 0xd4
   18384:	mov	r5, r3
   18388:	mov	r6, r2
   1838c:	mov	r7, r1
   18390:	mov	r4, r0
   18394:	tst	r3, #1
   18398:	bne	183d4 <argp_parse@@Base+0x5c>
   1839c:	movw	r0, #58916	; 0xe624
   183a0:	movw	r8, #58912	; 0xe620
   183a4:	movt	r0, #2
   183a8:	movt	r8, #2
   183ac:	ldr	r1, [r0]
   183b0:	cmp	r1, #0
   183b4:	ldreq	r1, [r6]
   183b8:	streq	r1, [r0]
   183bc:	ldr	r0, [r8]
   183c0:	cmp	r0, #0
   183c4:	bne	183d4 <argp_parse@@Base+0x5c>
   183c8:	ldr	r0, [r6]
   183cc:	bl	195c4 <argp_parse@@Base+0x124c>
   183d0:	str	r0, [r8]
   183d4:	tst	r5, #16
   183d8:	str	r6, [fp, #-228]	; 0xffffff1c
   183dc:	bne	18488 <argp_parse@@Base+0x110>
   183e0:	mov	r1, sp
   183e4:	sub	r3, r1, #64	; 0x40
   183e8:	mov	sp, r3
   183ec:	mov	r2, sp
   183f0:	sub	r0, r2, #32
   183f4:	mov	sp, r0
   183f8:	vmov.i32	q8, #0	; 0x00000000
   183fc:	sub	r2, r2, #20
   18400:	cmp	r4, #0
   18404:	vst1.32	{d16-d17}, [r2]
   18408:	mov	r2, r0
   1840c:	vst1.64	{d16-d17}, [r2]!
   18410:	str	r3, [r2]
   18414:	sub	r2, r1, #32
   18418:	sub	r1, r1, #48	; 0x30
   1841c:	vst1.64	{d16-d17}, [r2]
   18420:	vst1.64	{d16-d17}, [r1]
   18424:	mov	r1, #48	; 0x30
   18428:	mov	r2, r3
   1842c:	vst1.64	{d16-d17}, [r2], r1
   18430:	vst1.64	{d16-d17}, [r2]
   18434:	movw	r2, #52744	; 0xce08
   18438:	strne	r4, [r3], #16
   1843c:	movt	r2, #1
   18440:	mov	r1, r3
   18444:	str	r2, [r1], #16
   18448:	movw	r2, #59108	; 0xe6e4
   1844c:	movt	r2, #2
   18450:	ldr	r2, [r2]
   18454:	cmp	r2, #0
   18458:	movweq	r2, #59024	; 0xe690
   1845c:	movteq	r2, #2
   18460:	ldreq	r2, [r2]
   18464:	cmpeq	r2, #0
   18468:	beq	1847c <argp_parse@@Base+0x104>
   1846c:	movw	r2, #52772	; 0xce24
   18470:	mov	r3, r1
   18474:	movt	r2, #1
   18478:	str	r2, [r1]
   1847c:	mov	r1, #0
   18480:	str	r1, [r3, #16]
   18484:	b	1848c <argp_parse@@Base+0x114>
   18488:	mov	r0, r4
   1848c:	sub	r9, fp, #96	; 0x60
   18490:	str	r7, [fp, #-232]	; 0xffffff18
   18494:	vmov.i32	q8, #0	; 0x00000000
   18498:	mov	r7, #12
   1849c:	mov	r4, #0
   184a0:	cmp	r0, #0
   184a4:	str	r5, [fp, #-224]	; 0xffffff20
   184a8:	str	r0, [fp, #-236]	; 0xffffff14
   184ac:	mov	r1, r9
   184b0:	vst1.64	{d16-d17}, [r1], r7
   184b4:	vst1.32	{d16-d17}, [r1]
   184b8:	mov	r1, #1
   184bc:	bic	r3, r1, r5, lsr #2
   184c0:	str	r3, [fp, #-64]	; 0xffffffc0
   184c4:	str	r4, [fp, #-60]	; 0xffffffc4
   184c8:	str	r4, [fp, #-56]	; 0xffffffc8
   184cc:	str	r4, [fp, #-52]	; 0xffffffcc
   184d0:	beq	18508 <argp_parse@@Base+0x190>
   184d4:	sub	r1, fp, #64	; 0x40
   184d8:	bl	191a4 <argp_parse@@Base+0xe2c>
   184dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   184e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   184e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   184e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   184ec:	mov	r6, #16
   184f0:	add	r1, r6, r1, lsl #4
   184f4:	add	r2, r2, r2, lsl #3
   184f8:	mov	r6, #36	; 0x24
   184fc:	lsl	r4, r0, #2
   18500:	add	r8, r6, r2, lsl #2
   18504:	b	18510 <argp_parse@@Base+0x198>
   18508:	mov	r8, #36	; 0x24
   1850c:	mov	r1, #16
   18510:	add	r5, r8, r4
   18514:	add	sl, r5, r1
   18518:	add	r0, r3, sl
   1851c:	add	r0, r0, #1
   18520:	bl	1a384 <argp_parse@@Base+0x200c>
   18524:	cmp	r0, #0
   18528:	str	r0, [fp, #-100]	; 0xffffff9c
   1852c:	beq	18f3c <argp_parse@@Base+0xbc4>
   18530:	mov	r6, r0
   18534:	mov	r0, #12
   18538:	sub	r1, fp, #220	; 0xdc
   1853c:	mov	r2, r4
   18540:	vld1.64	{d16-d17}, [r9], r0
   18544:	add	r0, r1, #20
   18548:	add	r7, r6, r8
   1854c:	add	r8, r6, r5
   18550:	add	r5, r6, sl
   18554:	vld1.32	{d18-d19}, [r9]
   18558:	vst1.32	{d16-d17}, [r0]
   1855c:	add	r0, r1, #32
   18560:	mov	r9, r1
   18564:	mov	r1, #0
   18568:	vst1.32	{d18-d19}, [r0]
   1856c:	mov	r0, #1
   18570:	str	r6, [fp, #-172]	; 0xffffff54
   18574:	str	r0, [fp, #-208]	; 0xffffff30
   18578:	str	r0, [fp, #-204]	; 0xffffff34
   1857c:	mov	r0, r7
   18580:	str	r7, [fp, #-164]	; 0xffffff5c
   18584:	str	r8, [fp, #-212]	; 0xffffff2c
   18588:	str	r5, [fp, #-216]	; 0xffffff28
   1858c:	bl	1156c <memset@plt>
   18590:	str	r5, [fp, #-44]	; 0xffffffd4
   18594:	str	r9, [fp, #-48]	; 0xffffffd0
   18598:	ldr	r9, [fp, #-224]	; 0xffffff20
   1859c:	mov	r0, #45	; 0x2d
   185a0:	str	r8, [fp, #-40]	; 0xffffffd8
   185a4:	str	r7, [fp, #-36]	; 0xffffffdc
   185a8:	tst	r9, #8
   185ac:	moveq	r0, #43	; 0x2b
   185b0:	tsteq	r9, #4
   185b4:	beq	18b84 <argp_parse@@Base+0x80c>
   185b8:	add	r1, r5, #1
   185bc:	strb	r0, [r5]
   185c0:	str	r1, [fp, #-44]	; 0xffffffd4
   185c4:	ldr	r0, [fp, #-236]	; 0xffffff14
   185c8:	ldr	sl, [fp, #-228]	; 0xffffff1c
   185cc:	mov	r5, #0
   185d0:	strb	r5, [r1]
   185d4:	str	r5, [r8]
   185d8:	cmp	r0, #0
   185dc:	str	r0, [fp, #-220]	; 0xffffff24
   185e0:	beq	18618 <argp_parse@@Base+0x2a0>
   185e4:	sub	sp, sp, #8
   185e8:	sub	r1, fp, #48	; 0x30
   185ec:	mov	r2, #0
   185f0:	mov	r3, r6
   185f4:	str	r1, [sp]
   185f8:	mov	r1, #0
   185fc:	bl	19280 <argp_parse@@Base+0xf08>
   18600:	add	sp, sp, #8
   18604:	str	r0, [fp, #-168]	; 0xffffff58
   18608:	mov	r6, r0
   1860c:	ldr	r5, [fp, #-220]	; 0xffffff24
   18610:	ldr	r4, [fp, #-172]	; 0xffffff54
   18614:	b	18620 <argp_parse@@Base+0x2a8>
   18618:	mov	r4, r6
   1861c:	str	r6, [fp, #-168]	; 0xffffff58
   18620:	ldr	r3, [fp, #-232]	; 0xffffff18
   18624:	sub	r1, fp, #220	; 0xdc
   18628:	mov	r7, #0
   1862c:	vmov.i32	q8, #0	; 0x00000000
   18630:	mov	r0, #1
   18634:	mov	r8, sl
   18638:	cmp	r4, r6
   1863c:	mov	r2, r1
   18640:	add	r1, r1, #84	; 0x54
   18644:	str	r7, [fp, #-116]	; 0xffffff8c
   18648:	str	r7, [fp, #-120]	; 0xffffff88
   1864c:	vst1.32	{d16-d17}, [r1]
   18650:	str	r5, [fp, #-156]	; 0xffffff64
   18654:	str	r3, [fp, #-152]	; 0xffffff68
   18658:	str	sl, [fp, #-148]	; 0xffffff6c
   1865c:	str	r9, [fp, #-140]	; 0xffffff74
   18660:	str	r7, [fp, #-144]	; 0xffffff70
   18664:	str	r2, [fp, #-104]	; 0xffffff98
   18668:	str	r0, [fp, #-160]	; 0xffffff60
   1866c:	movw	r0, #58920	; 0xe628
   18670:	add	sl, r2, #64	; 0x40
   18674:	movt	r0, #2
   18678:	ldr	r0, [r0]
   1867c:	str	r0, [fp, #-112]	; 0xffffff90
   18680:	movw	r0, #58924	; 0xe62c
   18684:	movt	r0, #2
   18688:	ldr	r0, [r0]
   1868c:	str	r0, [fp, #-108]	; 0xffffff94
   18690:	bcs	18774 <argp_parse@@Base+0x3fc>
   18694:	ldr	r0, [fp, #12]
   18698:	str	r0, [r4, #24]
   1869c:	cmp	r7, #7
   186a0:	cmpne	r7, #0
   186a4:	bne	18f3c <argp_parse@@Base+0xbc4>
   186a8:	ldr	r0, [r4, #16]
   186ac:	cmp	r0, #0
   186b0:	ldrne	r1, [r4, #20]
   186b4:	ldrne	r0, [r0, #28]
   186b8:	ldrne	r0, [r0, r1, lsl #2]
   186bc:	strne	r0, [r4, #24]
   186c0:	ldr	r3, [r4]
   186c4:	cmp	r3, #0
   186c8:	beq	18718 <argp_parse@@Base+0x3a0>
   186cc:	add	r0, r4, #28
   186d0:	ldr	r1, [r4, #32]
   186d4:	mov	r2, sl
   186d8:	str	r1, [fp, #-120]	; 0xffffff88
   186dc:	ldr	r1, [r4, #24]
   186e0:	str	r1, [fp, #-128]	; 0xffffff80
   186e4:	mov	r1, #0
   186e8:	ldr	r0, [r0]
   186ec:	str	r0, [fp, #-124]	; 0xffffff84
   186f0:	ldr	r0, [r4, #12]
   186f4:	str	r0, [fp, #-136]	; 0xffffff78
   186f8:	movw	r0, #6
   186fc:	movt	r0, #256	; 0x100
   18700:	sub	r0, r0, #3
   18704:	blx	r3
   18708:	mov	r7, r0
   1870c:	ldr	r0, [fp, #-120]	; 0xffffff88
   18710:	str	r0, [r4, #32]
   18714:	b	18734 <argp_parse@@Base+0x3bc>
   18718:	ldr	r0, [r4, #4]
   1871c:	mov	r7, #7
   18720:	ldr	r0, [r0, #16]
   18724:	cmp	r0, #0
   18728:	ldrne	r0, [r0]
   1872c:	cmpne	r0, #0
   18730:	bne	18748 <argp_parse@@Base+0x3d0>
   18734:	ldr	r0, [fp, #-168]	; 0xffffff58
   18738:	add	r4, r4, #36	; 0x24
   1873c:	cmp	r4, r0
   18740:	bcc	1869c <argp_parse@@Base+0x324>
   18744:	b	18768 <argp_parse@@Base+0x3f0>
   18748:	mov	r0, r4
   1874c:	ldr	r2, [r4, #24]
   18750:	ldr	r1, [r0, #28]!
   18754:	str	r2, [r1]
   18758:	ldr	r3, [r4]
   1875c:	cmp	r3, #0
   18760:	bne	186d0 <argp_parse@@Base+0x358>
   18764:	b	18734 <argp_parse@@Base+0x3bc>
   18768:	cmp	r7, #7
   1876c:	cmpne	r7, #0
   18770:	bne	18f3c <argp_parse@@Base+0xbc4>
   18774:	ldr	r0, [fp, #-140]	; 0xffffff74
   18778:	tst	r0, #2
   1877c:	bne	1878c <argp_parse@@Base+0x414>
   18780:	mov	r0, #1
   18784:	str	r0, [fp, #-204]	; 0xffffff34
   18788:	b	187b4 <argp_parse@@Base+0x43c>
   1878c:	mov	r1, #0
   18790:	tst	r0, #1
   18794:	str	r1, [fp, #-204]	; 0xffffff34
   18798:	beq	187b4 <argp_parse@@Base+0x43c>
   1879c:	ldr	r0, [fp, #-152]	; 0xffffff68
   187a0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   187a4:	sub	r1, r1, #4
   187a8:	add	r0, r0, #1
   187ac:	str	r1, [fp, #-148]	; 0xffffff6c
   187b0:	str	r0, [fp, #-152]	; 0xffffff68
   187b4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   187b8:	cmp	r0, r8
   187bc:	beq	187d0 <argp_parse@@Base+0x458>
   187c0:	movw	r0, #58912	; 0xe620
   187c4:	movt	r0, #2
   187c8:	ldr	r0, [r0]
   187cc:	b	187e0 <argp_parse@@Base+0x468>
   187d0:	ldr	r0, [r8]
   187d4:	cmp	r0, #0
   187d8:	beq	187c0 <argp_parse@@Base+0x448>
   187dc:	bl	195c4 <argp_parse@@Base+0x124c>
   187e0:	str	r0, [fp, #-116]	; 0xffffff8c
   187e4:	sub	r0, fp, #220	; 0xdc
   187e8:	mov	r8, #0
   187ec:	add	r6, r0, #12
   187f0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   187f4:	cmp	r0, #0
   187f8:	beq	1880c <argp_parse@@Base+0x494>
   187fc:	ldr	r9, [fp, #-144]	; 0xffffff70
   18800:	cmp	r9, r0
   18804:	bge	188c0 <argp_parse@@Base+0x548>
   18808:	str	r8, [fp, #-132]	; 0xffffff7c
   1880c:	ldr	r0, [fp, #-160]	; 0xffffff60
   18810:	ldr	r9, [fp, #-144]	; 0xffffff70
   18814:	cmp	r0, #0
   18818:	beq	188c0 <argp_parse@@Base+0x548>
   1881c:	mvn	r0, #0
   18820:	str	r0, [fp, #-200]	; 0xffffff38
   18824:	str	r9, [fp, #-208]	; 0xffffff30
   18828:	ldr	r2, [fp, #-216]	; 0xffffff28
   1882c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   18830:	ldr	r0, [fp, #-152]	; 0xffffff68
   18834:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18838:	ldrb	r7, [fp, #-140]	; 0xffffff74
   1883c:	sub	sp, sp, #8
   18840:	tst	r7, #64	; 0x40
   18844:	bne	18858 <argp_parse@@Base+0x4e0>
   18848:	str	r8, [sp]
   1884c:	str	r6, [sp, #4]
   18850:	bl	1969c <argp_parse@@Base+0x1324>
   18854:	b	18864 <argp_parse@@Base+0x4ec>
   18858:	str	r8, [sp]
   1885c:	str	r6, [sp, #4]
   18860:	bl	19700 <argp_parse@@Base+0x1388>
   18864:	add	sp, sp, #8
   18868:	ldr	r9, [fp, #-208]	; 0xffffff30
   1886c:	mov	r7, r0
   18870:	cmn	r0, #1
   18874:	str	r9, [fp, #-144]	; 0xffffff70
   18878:	beq	18894 <argp_parse@@Base+0x51c>
   1887c:	cmp	r7, #63	; 0x3f
   18880:	beq	18a5c <argp_parse@@Base+0x6e4>
   18884:	cmp	r7, #1
   18888:	bne	18a6c <argp_parse@@Base+0x6f4>
   1888c:	ldr	r7, [fp, #-196]	; 0xffffff3c
   18890:	b	188f8 <argp_parse@@Base+0x580>
   18894:	cmp	r9, #2
   18898:	str	r8, [fp, #-160]	; 0xffffff60
   1889c:	blt	188c0 <argp_parse@@Base+0x548>
   188a0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   188a4:	movw	r1, #53227	; 0xcfeb
   188a8:	movt	r1, #1
   188ac:	add	r0, r0, r9, lsl #2
   188b0:	ldr	r0, [r0, #-4]
   188b4:	bl	11344 <strcmp@plt>
   188b8:	cmp	r0, #0
   188bc:	streq	r9, [fp, #-132]	; 0xffffff7c
   188c0:	ldr	r2, [fp, #-152]	; 0xffffff68
   188c4:	mov	r1, #1
   188c8:	mov	r0, #7
   188cc:	cmp	r9, r2
   188d0:	bge	18bd4 <argp_parse@@Base+0x85c>
   188d4:	ldrb	r2, [fp, #-140]	; 0xffffff74
   188d8:	tst	r2, #4
   188dc:	bne	18bd4 <argp_parse@@Base+0x85c>
   188e0:	add	r0, r9, #1
   188e4:	str	r0, [fp, #-144]	; 0xffffff70
   188e8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   188ec:	ldr	r7, [r1, r9, lsl #2]
   188f0:	mov	r9, r0
   188f4:	str	r7, [fp, #-196]	; 0xffffff3c
   188f8:	sub	r0, r9, #1
   188fc:	str	r0, [fp, #-144]	; 0xffffff70
   18900:	ldr	r1, [fp, #-172]	; 0xffffff54
   18904:	ldr	r2, [fp, #-168]	; 0xffffff58
   18908:	cmp	r1, r2
   1890c:	bcs	18b8c <argp_parse@@Base+0x814>
   18910:	add	r4, r1, #24
   18914:	b	18920 <argp_parse@@Base+0x5a8>
   18918:	ldr	r0, [fp, #-144]	; 0xffffff70
   1891c:	add	r4, r4, #36	; 0x24
   18920:	add	r1, r0, #1
   18924:	str	r1, [fp, #-144]	; 0xffffff70
   18928:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1892c:	cmp	r3, #0
   18930:	beq	189d0 <argp_parse@@Base+0x658>
   18934:	ldr	r0, [r4, #8]
   18938:	mov	r1, r7
   1893c:	mov	r2, sl
   18940:	mov	r5, #0
   18944:	str	r0, [fp, #-120]	; 0xffffff88
   18948:	ldr	r0, [r4]
   1894c:	str	r0, [fp, #-128]	; 0xffffff80
   18950:	ldr	r0, [r4, #4]
   18954:	str	r0, [fp, #-124]	; 0xffffff84
   18958:	ldr	r0, [r4, #-12]
   1895c:	str	r0, [fp, #-136]	; 0xffffff78
   18960:	mov	r0, #0
   18964:	blx	r3
   18968:	ldr	r1, [fp, #-120]	; 0xffffff88
   1896c:	cmp	r0, #7
   18970:	str	r1, [r4, #8]
   18974:	bne	189f8 <argp_parse@@Base+0x680>
   18978:	ldr	r0, [fp, #-144]	; 0xffffff70
   1897c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18980:	sub	r0, r0, #1
   18984:	cmp	r3, #0
   18988:	str	r0, [fp, #-144]	; 0xffffff70
   1898c:	beq	189d4 <argp_parse@@Base+0x65c>
   18990:	ldr	r0, [r4]
   18994:	mov	r1, #0
   18998:	mov	r2, sl
   1899c:	str	r0, [fp, #-128]	; 0xffffff80
   189a0:	ldr	r0, [r4, #4]
   189a4:	str	r0, [fp, #-124]	; 0xffffff84
   189a8:	ldr	r0, [r4, #-12]
   189ac:	str	r0, [fp, #-136]	; 0xffffff78
   189b0:	movw	r0, #6
   189b4:	movt	r0, #256	; 0x100
   189b8:	blx	r3
   189bc:	ldr	r1, [fp, #-120]	; 0xffffff88
   189c0:	str	r1, [r4, #8]
   189c4:	cmp	r0, #7
   189c8:	beq	189e0 <argp_parse@@Base+0x668>
   189cc:	b	189f0 <argp_parse@@Base+0x678>
   189d0:	str	r0, [fp, #-144]	; 0xffffff70
   189d4:	mov	r0, #7
   189d8:	cmp	r0, #7
   189dc:	bne	189f0 <argp_parse@@Base+0x678>
   189e0:	ldr	r2, [fp, #-168]	; 0xffffff58
   189e4:	add	r1, r4, #12
   189e8:	cmp	r1, r2
   189ec:	bcc	18918 <argp_parse@@Base+0x5a0>
   189f0:	movw	r5, #6
   189f4:	movt	r5, #256	; 0x100
   189f8:	cmp	r0, #0
   189fc:	beq	18a0c <argp_parse@@Base+0x694>
   18a00:	cmp	r0, #7
   18a04:	bne	18b74 <argp_parse@@Base+0x7fc>
   18a08:	b	18b8c <argp_parse@@Base+0x814>
   18a0c:	movw	r0, #6
   18a10:	movt	r0, #256	; 0x100
   18a14:	cmp	r5, r0
   18a18:	ldreq	r0, [fp, #-152]	; 0xffffff68
   18a1c:	streq	r0, [fp, #-144]	; 0xffffff70
   18a20:	ldrne	r0, [fp, #-144]	; 0xffffff70
   18a24:	cmp	r0, r9
   18a28:	bge	18a38 <argp_parse@@Base+0x6c0>
   18a2c:	mov	r0, #1
   18a30:	str	r0, [fp, #-160]	; 0xffffff60
   18a34:	b	18a4c <argp_parse@@Base+0x6d4>
   18a38:	rsb	r1, r9, #1
   18a3c:	add	r0, r1, r0
   18a40:	ldr	r1, [r4, #-12]
   18a44:	add	r0, r0, r1
   18a48:	str	r0, [r4, #-12]
   18a4c:	mov	r0, #0
   18a50:	cmp	r0, #0
   18a54:	beq	187f0 <argp_parse@@Base+0x478>
   18a58:	b	18b7c <argp_parse@@Base+0x804>
   18a5c:	ldr	r0, [fp, #-200]	; 0xffffff38
   18a60:	cmn	r0, #1
   18a64:	beq	18ad4 <argp_parse@@Base+0x75c>
   18a68:	b	18f7c <argp_parse@@Base+0xc04>
   18a6c:	cmp	r8, r7, asr #24
   18a70:	beq	18ad4 <argp_parse@@Base+0x75c>
   18a74:	ldr	r1, [fp, #-172]	; 0xffffff54
   18a78:	asr	r0, r7, #24
   18a7c:	sub	r0, r0, #1
   18a80:	add	r0, r0, r0, lsl #3
   18a84:	ldr	r3, [r1, r0, lsl #2]
   18a88:	cmp	r3, #0
   18a8c:	beq	18f48 <argp_parse@@Base+0xbd0>
   18a90:	add	r4, r1, r0, lsl #2
   18a94:	tst	r7, #8388608	; 0x800000
   18a98:	mov	r2, sl
   18a9c:	ldr	r0, [r4, #32]!
   18aa0:	str	r0, [fp, #-120]	; 0xffffff88
   18aa4:	ldr	r0, [r4, #-8]
   18aa8:	str	r0, [fp, #-128]	; 0xffffff80
   18aac:	ldr	r0, [r4, #-4]
   18ab0:	str	r0, [fp, #-124]	; 0xffffff84
   18ab4:	ldr	r0, [r4, #-20]	; 0xffffffec
   18ab8:	str	r0, [fp, #-136]	; 0xffffff78
   18abc:	bic	r0, r7, #-16777216	; 0xff000000
   18ac0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   18ac4:	orrne	r0, r0, #-16777216	; 0xff000000
   18ac8:	blx	r3
   18acc:	mov	r1, #0
   18ad0:	b	18b64 <argp_parse@@Base+0x7ec>
   18ad4:	ldr	r0, [fp, #-216]	; 0xffffff28
   18ad8:	mov	r1, r7
   18adc:	bl	11524 <strchr@plt>
   18ae0:	cmp	r0, #0
   18ae4:	beq	18ba0 <argp_parse@@Base+0x828>
   18ae8:	ldr	r1, [fp, #-172]	; 0xffffff54
   18aec:	ldr	r2, [fp, #-168]	; 0xffffff58
   18af0:	cmp	r1, r2
   18af4:	bcs	18ba0 <argp_parse@@Base+0x828>
   18af8:	add	r1, r1, #24
   18afc:	ldr	r3, [r1, #-16]
   18b00:	cmp	r3, r0
   18b04:	bhi	18b20 <argp_parse@@Base+0x7a8>
   18b08:	add	r3, r1, #36	; 0x24
   18b0c:	add	r1, r1, #12
   18b10:	cmp	r1, r2
   18b14:	mov	r1, r3
   18b18:	bcc	18afc <argp_parse@@Base+0x784>
   18b1c:	b	18ba0 <argp_parse@@Base+0x828>
   18b20:	ldr	r3, [r1, #-24]	; 0xffffffe8
   18b24:	cmp	r3, #0
   18b28:	beq	18ba0 <argp_parse@@Base+0x828>
   18b2c:	mov	r4, r1
   18b30:	mov	r2, sl
   18b34:	ldr	r0, [r4, #8]!
   18b38:	str	r0, [fp, #-120]	; 0xffffff88
   18b3c:	ldr	r0, [r1]
   18b40:	str	r0, [fp, #-128]	; 0xffffff80
   18b44:	ldr	r0, [r1, #4]
   18b48:	str	r0, [fp, #-124]	; 0xffffff84
   18b4c:	ldr	r0, [r1, #-12]
   18b50:	str	r0, [fp, #-136]	; 0xffffff78
   18b54:	mov	r0, r7
   18b58:	ldr	r1, [fp, #-196]	; 0xffffff3c
   18b5c:	blx	r3
   18b60:	mov	r1, #1
   18b64:	ldr	r2, [fp, #-120]	; 0xffffff88
   18b68:	cmp	r0, #7
   18b6c:	str	r2, [r4]
   18b70:	beq	18b98 <argp_parse@@Base+0x820>
   18b74:	cmp	r0, #0
   18b78:	beq	187f0 <argp_parse@@Base+0x478>
   18b7c:	mov	r1, #0
   18b80:	b	18bd4 <argp_parse@@Base+0x85c>
   18b84:	mov	r1, r5
   18b88:	b	185c4 <argp_parse@@Base+0x24c>
   18b8c:	mov	r7, #1
   18b90:	mov	r0, #1
   18b94:	b	18bc0 <argp_parse@@Base+0x848>
   18b98:	cmp	r1, #0
   18b9c:	beq	18f48 <argp_parse@@Base+0xbd0>
   18ba0:	movw	r1, #53230	; 0xcfee
   18ba4:	movw	r3, #52968	; 0xcee8
   18ba8:	mov	r0, sl
   18bac:	mov	r2, r7
   18bb0:	movt	r1, #1
   18bb4:	movt	r3, #1
   18bb8:	bl	16428 <argp_error@@Base>
   18bbc:	mov	r0, #0
   18bc0:	add	r1, r7, #1
   18bc4:	clz	r1, r1
   18bc8:	lsr	r1, r1, #5
   18bcc:	orr	r1, r1, r0
   18bd0:	mov	r0, #7
   18bd4:	subs	r7, r0, #7
   18bd8:	movne	r7, r0
   18bdc:	cmp	r1, #0
   18be0:	moveq	r7, r0
   18be4:	cmp	r7, #0
   18be8:	beq	18c88 <argp_parse@@Base+0x910>
   18bec:	cmp	r7, #0
   18bf0:	beq	18e1c <argp_parse@@Base+0xaa4>
   18bf4:	cmp	r7, #7
   18bf8:	bne	18c10 <argp_parse@@Base+0x898>
   18bfc:	ldr	r1, [fp, #-112]	; 0xffffff90
   18c00:	mov	r0, sl
   18c04:	mov	r2, #260	; 0x104
   18c08:	bl	1636c <argp_state_help@@Base>
   18c0c:	mov	r7, #7
   18c10:	ldr	r4, [fp, #-172]	; 0xffffff54
   18c14:	ldr	r0, [fp, #-168]	; 0xffffff58
   18c18:	cmp	r4, r0
   18c1c:	bcs	18ebc <argp_parse@@Base+0xb44>
   18c20:	movw	r1, #6
   18c24:	movt	r1, #256	; 0x100
   18c28:	sub	r6, r1, #1
   18c2c:	ldr	r3, [r4]
   18c30:	cmp	r3, #0
   18c34:	beq	18c74 <argp_parse@@Base+0x8fc>
   18c38:	ldr	r0, [r4, #32]
   18c3c:	mov	r1, #0
   18c40:	mov	r2, sl
   18c44:	str	r0, [fp, #-120]	; 0xffffff88
   18c48:	ldr	r0, [r4, #24]
   18c4c:	str	r0, [fp, #-128]	; 0xffffff80
   18c50:	ldr	r0, [r4, #28]
   18c54:	str	r0, [fp, #-124]	; 0xffffff84
   18c58:	ldr	r0, [r4, #12]
   18c5c:	str	r0, [fp, #-136]	; 0xffffff78
   18c60:	mov	r0, r6
   18c64:	blx	r3
   18c68:	ldr	r0, [fp, #-120]	; 0xffffff88
   18c6c:	str	r0, [r4, #32]
   18c70:	ldr	r0, [fp, #-168]	; 0xffffff58
   18c74:	add	r4, r4, #36	; 0x24
   18c78:	cmp	r4, r0
   18c7c:	bcc	18c2c <argp_parse@@Base+0x8b4>
   18c80:	ldr	r4, [fp, #-172]	; 0xffffff54
   18c84:	b	18ebc <argp_parse@@Base+0xb44>
   18c88:	ldr	r1, [fp, #-152]	; 0xffffff68
   18c8c:	ldr	r0, [fp, #-144]	; 0xffffff70
   18c90:	cmp	r0, r1
   18c94:	bne	18dc0 <argp_parse@@Base+0xa48>
   18c98:	ldr	r4, [fp, #-172]	; 0xffffff54
   18c9c:	ldr	r1, [fp, #-168]	; 0xffffff58
   18ca0:	mov	r0, #0
   18ca4:	cmp	r4, r1
   18ca8:	bcs	18d34 <argp_parse@@Base+0x9bc>
   18cac:	movw	r0, #6
   18cb0:	mov	r7, #0
   18cb4:	movt	r0, #256	; 0x100
   18cb8:	sub	r6, r0, #4
   18cbc:	mov	r0, #0
   18cc0:	cmp	r0, #7
   18cc4:	cmpne	r0, #0
   18cc8:	bne	18d30 <argp_parse@@Base+0x9b8>
   18ccc:	ldr	r2, [r4, #12]
   18cd0:	cmp	r2, #0
   18cd4:	bne	18d24 <argp_parse@@Base+0x9ac>
   18cd8:	ldr	r3, [r4]
   18cdc:	cmp	r3, #0
   18ce0:	beq	18d20 <argp_parse@@Base+0x9a8>
   18ce4:	ldr	r0, [r4, #32]
   18ce8:	mov	r1, #0
   18cec:	mov	r2, sl
   18cf0:	str	r0, [fp, #-120]	; 0xffffff88
   18cf4:	ldr	r0, [r4, #24]
   18cf8:	str	r0, [fp, #-128]	; 0xffffff80
   18cfc:	ldr	r0, [r4, #28]
   18d00:	str	r7, [fp, #-136]	; 0xffffff78
   18d04:	str	r0, [fp, #-124]	; 0xffffff84
   18d08:	mov	r0, r6
   18d0c:	blx	r3
   18d10:	ldr	r1, [fp, #-120]	; 0xffffff88
   18d14:	str	r1, [r4, #32]
   18d18:	ldr	r1, [fp, #-168]	; 0xffffff58
   18d1c:	b	18d24 <argp_parse@@Base+0x9ac>
   18d20:	mov	r0, #7
   18d24:	add	r4, r4, #36	; 0x24
   18d28:	cmp	r4, r1
   18d2c:	bcc	18cc0 <argp_parse@@Base+0x948>
   18d30:	ldr	r4, [fp, #-172]	; 0xffffff54
   18d34:	sub	r7, r1, #36	; 0x24
   18d38:	cmp	r7, r4
   18d3c:	bcc	18db4 <argp_parse@@Base+0xa3c>
   18d40:	movw	r1, #6
   18d44:	movt	r1, #256	; 0x100
   18d48:	sub	r6, r1, #5
   18d4c:	cmp	r0, #7
   18d50:	cmpne	r0, #0
   18d54:	bne	18e00 <argp_parse@@Base+0xa88>
   18d58:	ldr	r3, [r7]
   18d5c:	cmp	r3, #0
   18d60:	beq	18da4 <argp_parse@@Base+0xa2c>
   18d64:	ldr	r0, [r7, #32]
   18d68:	mov	r1, #0
   18d6c:	mov	r2, sl
   18d70:	str	r0, [fp, #-120]	; 0xffffff88
   18d74:	ldr	r0, [r7, #24]
   18d78:	str	r0, [fp, #-128]	; 0xffffff80
   18d7c:	ldr	r0, [r7, #28]
   18d80:	str	r0, [fp, #-124]	; 0xffffff84
   18d84:	ldr	r0, [r7, #12]
   18d88:	str	r0, [fp, #-136]	; 0xffffff78
   18d8c:	mov	r0, r6
   18d90:	blx	r3
   18d94:	ldr	r1, [fp, #-120]	; 0xffffff88
   18d98:	str	r1, [r7, #32]
   18d9c:	ldr	r4, [fp, #-172]	; 0xffffff54
   18da0:	b	18da8 <argp_parse@@Base+0xa30>
   18da4:	mov	r0, #7
   18da8:	sub	r7, r7, #36	; 0x24
   18dac:	cmp	r7, r4
   18db0:	bcs	18d4c <argp_parse@@Base+0x9d4>
   18db4:	subs	r7, r0, #7
   18db8:	movne	r7, r0
   18dbc:	b	18e04 <argp_parse@@Base+0xa8c>
   18dc0:	ldr	r1, [fp, #8]
   18dc4:	cmp	r1, #0
   18dc8:	beq	18dd4 <argp_parse@@Base+0xa5c>
   18dcc:	str	r0, [r1]
   18dd0:	b	18e1c <argp_parse@@Base+0xaa4>
   18dd4:	ldrb	r0, [fp, #-140]	; 0xffffff74
   18dd8:	tst	r0, #2
   18ddc:	bne	18bfc <argp_parse@@Base+0x884>
   18de0:	ldr	r0, [fp, #-112]	; 0xffffff90
   18de4:	cmp	r0, #0
   18de8:	beq	18bfc <argp_parse@@Base+0x884>
   18dec:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18df0:	movw	r1, #53251	; 0xd003
   18df4:	movt	r1, #1
   18df8:	bl	11530 <fprintf@plt>
   18dfc:	b	18bfc <argp_parse@@Base+0x884>
   18e00:	mov	r7, r0
   18e04:	ldr	r1, [fp, #8]
   18e08:	cmp	r1, #0
   18e0c:	ldrne	r0, [fp, #-144]	; 0xffffff70
   18e10:	strne	r0, [r1]
   18e14:	cmp	r7, #0
   18e18:	bne	18bf4 <argp_parse@@Base+0x87c>
   18e1c:	ldr	r0, [fp, #-168]	; 0xffffff58
   18e20:	ldr	r4, [fp, #-172]	; 0xffffff54
   18e24:	mov	r7, #0
   18e28:	sub	r5, r0, #36	; 0x24
   18e2c:	cmp	r5, r4
   18e30:	bcc	18ebc <argp_parse@@Base+0xb44>
   18e34:	movw	r1, #6
   18e38:	mov	r0, #0
   18e3c:	movt	r1, #256	; 0x100
   18e40:	sub	r6, r1, #2
   18e44:	cmp	r0, #7
   18e48:	cmpne	r0, #0
   18e4c:	bne	18eb8 <argp_parse@@Base+0xb40>
   18e50:	ldr	r3, [r5]
   18e54:	cmp	r3, #0
   18e58:	beq	18e9c <argp_parse@@Base+0xb24>
   18e5c:	ldr	r0, [r5, #32]
   18e60:	mov	r1, #0
   18e64:	mov	r2, sl
   18e68:	str	r0, [fp, #-120]	; 0xffffff88
   18e6c:	ldr	r0, [r5, #24]
   18e70:	str	r0, [fp, #-128]	; 0xffffff80
   18e74:	ldr	r0, [r5, #28]
   18e78:	str	r0, [fp, #-124]	; 0xffffff84
   18e7c:	ldr	r0, [r5, #12]
   18e80:	str	r0, [fp, #-136]	; 0xffffff78
   18e84:	mov	r0, r6
   18e88:	blx	r3
   18e8c:	ldr	r1, [fp, #-120]	; 0xffffff88
   18e90:	str	r1, [r5, #32]
   18e94:	ldr	r4, [fp, #-172]	; 0xffffff54
   18e98:	b	18ea0 <argp_parse@@Base+0xb28>
   18e9c:	mov	r0, #7
   18ea0:	sub	r5, r5, #36	; 0x24
   18ea4:	cmp	r5, r4
   18ea8:	bcs	18e44 <argp_parse@@Base+0xacc>
   18eac:	subs	r7, r0, #7
   18eb0:	movne	r7, r0
   18eb4:	b	18ebc <argp_parse@@Base+0xb44>
   18eb8:	mov	r7, r0
   18ebc:	ldr	r0, [fp, #-168]	; 0xffffff58
   18ec0:	sub	r6, r0, #36	; 0x24
   18ec4:	cmp	r6, r4
   18ec8:	bcc	18f2c <argp_parse@@Base+0xbb4>
   18ecc:	movw	r0, #6
   18ed0:	movt	r0, #256	; 0x100
   18ed4:	add	r5, r0, #1
   18ed8:	ldr	r3, [r6]
   18edc:	cmp	r3, #0
   18ee0:	beq	18f20 <argp_parse@@Base+0xba8>
   18ee4:	ldr	r0, [r6, #32]
   18ee8:	mov	r1, #0
   18eec:	mov	r2, sl
   18ef0:	str	r0, [fp, #-120]	; 0xffffff88
   18ef4:	ldr	r0, [r6, #24]
   18ef8:	str	r0, [fp, #-128]	; 0xffffff80
   18efc:	ldr	r0, [r6, #28]
   18f00:	str	r0, [fp, #-124]	; 0xffffff84
   18f04:	ldr	r0, [r6, #12]
   18f08:	str	r0, [fp, #-136]	; 0xffffff78
   18f0c:	mov	r0, r5
   18f10:	blx	r3
   18f14:	ldr	r0, [fp, #-120]	; 0xffffff88
   18f18:	str	r0, [r6, #32]
   18f1c:	ldr	r4, [fp, #-172]	; 0xffffff54
   18f20:	sub	r6, r6, #36	; 0x24
   18f24:	cmp	r6, r4
   18f28:	bcs	18ed8 <argp_parse@@Base+0xb60>
   18f2c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18f30:	bl	19648 <argp_parse@@Base+0x12d0>
   18f34:	cmp	r7, #7
   18f38:	movweq	r7, #22
   18f3c:	mov	r0, r7
   18f40:	sub	sp, fp, #28
   18f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f48:	ldr	r0, [fp, #-212]	; 0xffffff2c
   18f4c:	ldr	r1, [r0, #12]
   18f50:	cmp	r1, r7
   18f54:	beq	18f84 <argp_parse@@Base+0xc0c>
   18f58:	ldr	r1, [r0]
   18f5c:	cmp	r1, #0
   18f60:	beq	18f84 <argp_parse@@Base+0xc0c>
   18f64:	add	r1, r0, #16
   18f68:	ldr	r0, [r0, #28]
   18f6c:	cmp	r0, r7
   18f70:	mov	r0, r1
   18f74:	bne	18f58 <argp_parse@@Base+0xbe0>
   18f78:	b	18f88 <argp_parse@@Base+0xc10>
   18f7c:	mov	r1, #0
   18f80:	b	18bd0 <argp_parse@@Base+0x858>
   18f84:	mov	r1, r0
   18f88:	ldr	r0, [r1]
   18f8c:	movw	r2, #53247	; 0xcfff
   18f90:	movw	r1, #53238	; 0xcff6
   18f94:	movw	r3, #52968	; 0xcee8
   18f98:	movt	r2, #1
   18f9c:	movt	r1, #1
   18fa0:	movt	r3, #1
   18fa4:	cmp	r0, #0
   18fa8:	movne	r2, r0
   18fac:	mov	r0, sl
   18fb0:	b	18bb8 <argp_parse@@Base+0x840>
   18fb4:	mov	ip, r0
   18fb8:	mov	r0, #0
   18fbc:	cmp	r1, #0
   18fc0:	beq	18ff0 <argp_parse@@Base+0xc78>
   18fc4:	ldr	r3, [r1, #52]	; 0x34
   18fc8:	ldr	r1, [r3, #48]	; 0x30
   18fcc:	ldr	r3, [r3, #52]	; 0x34
   18fd0:	b	18fd8 <argp_parse@@Base+0xc60>
   18fd4:	add	r1, r1, #36	; 0x24
   18fd8:	cmp	r1, r3
   18fdc:	bxcs	lr
   18fe0:	ldr	r2, [r1, #4]
   18fe4:	cmp	r2, ip
   18fe8:	bne	18fd4 <argp_parse@@Base+0xc5c>
   18fec:	ldr	r0, [r1, #24]
   18ff0:	bx	lr
   18ff4:	push	{r4, r5, r6, sl, fp, lr}
   18ff8:	add	fp, sp, #16
   18ffc:	mov	r5, r2
   19000:	mov	r6, r1
   19004:	mov	r4, #7
   19008:	cmn	r0, #3
   1900c:	bgt	19030 <argp_parse@@Base+0xcb8>
   19010:	cmn	r0, #4
   19014:	beq	1905c <argp_parse@@Base+0xce4>
   19018:	cmn	r0, #3
   1901c:	bne	190b4 <argp_parse@@Base+0xd3c>
   19020:	ldr	r1, [r5, #48]	; 0x30
   19024:	mov	r0, r5
   19028:	movw	r2, #513	; 0x201
   1902c:	b	1904c <argp_parse@@Base+0xcd4>
   19030:	cmn	r0, #2
   19034:	beq	190bc <argp_parse@@Base+0xd44>
   19038:	cmp	r0, #63	; 0x3f
   1903c:	bne	190b4 <argp_parse@@Base+0xd3c>
   19040:	ldr	r1, [r5, #48]	; 0x30
   19044:	mov	r0, r5
   19048:	movw	r2, #634	; 0x27a
   1904c:	bl	1636c <argp_state_help@@Base>
   19050:	mov	r4, #0
   19054:	mov	r0, r4
   19058:	pop	{r4, r5, r6, sl, fp, pc}
   1905c:	movw	r0, #53165	; 0xcfad
   19060:	cmp	r6, #0
   19064:	mov	r1, #0
   19068:	mov	r2, #10
   1906c:	mov	r4, #0
   19070:	movt	r0, #1
   19074:	movne	r0, r6
   19078:	bl	11350 <strtol@plt>
   1907c:	movw	r5, #59020	; 0xe68c
   19080:	movt	r5, #2
   19084:	str	r0, [r5]
   19088:	ldr	r0, [r5]
   1908c:	subs	r0, r0, #1
   19090:	str	r0, [r5]
   19094:	blt	190b4 <argp_parse@@Base+0xd3c>
   19098:	mov	r0, #1
   1909c:	bl	1141c <sleep@plt>
   190a0:	ldr	r0, [r5]
   190a4:	sub	r1, r0, #1
   190a8:	cmp	r0, #0
   190ac:	str	r1, [r5]
   190b0:	bgt	19098 <argp_parse@@Base+0xd20>
   190b4:	mov	r0, r4
   190b8:	pop	{r4, r5, r6, sl, fp, pc}
   190bc:	movw	r0, #58916	; 0xe624
   190c0:	movt	r0, #2
   190c4:	str	r6, [r0]
   190c8:	mov	r0, r6
   190cc:	bl	195c4 <argp_parse@@Base+0x124c>
   190d0:	movw	r1, #58912	; 0xe620
   190d4:	str	r0, [r5, #40]	; 0x28
   190d8:	mov	r4, #0
   190dc:	movt	r1, #2
   190e0:	str	r0, [r1]
   190e4:	ldr	r0, [r5, #16]
   190e8:	and	r0, r0, #3
   190ec:	cmp	r0, #1
   190f0:	ldreq	r0, [r5, #8]
   190f4:	streq	r6, [r0]
   190f8:	moveq	r0, r4
   190fc:	popeq	{r4, r5, r6, sl, fp, pc}
   19100:	mov	r0, r4
   19104:	pop	{r4, r5, r6, sl, fp, pc}
   19108:	push	{r4, sl, fp, lr}
   1910c:	add	fp, sp, #8
   19110:	mov	r1, r0
   19114:	mov	r0, #7
   19118:	cmp	r1, #86	; 0x56
   1911c:	popne	{r4, sl, fp, pc}
   19120:	movw	r0, #59024	; 0xe690
   19124:	mov	r4, r2
   19128:	movt	r0, #2
   1912c:	ldr	r2, [r0]
   19130:	cmp	r2, #0
   19134:	beq	19148 <argp_parse@@Base+0xdd0>
   19138:	ldr	r0, [r4, #48]	; 0x30
   1913c:	mov	r1, r4
   19140:	blx	r2
   19144:	b	19188 <argp_parse@@Base+0xe10>
   19148:	movw	r0, #59108	; 0xe6e4
   1914c:	movt	r0, #2
   19150:	ldr	r2, [r0]
   19154:	cmp	r2, #0
   19158:	beq	19170 <argp_parse@@Base+0xdf8>
   1915c:	ldr	r0, [r4, #48]	; 0x30
   19160:	movw	r1, #53378	; 0xd082
   19164:	movt	r1, #1
   19168:	bl	11530 <fprintf@plt>
   1916c:	b	19188 <argp_parse@@Base+0xe10>
   19170:	movw	r1, #51183	; 0xc7ef
   19174:	movw	r2, #53192	; 0xcfc8
   19178:	mov	r0, r4
   1917c:	movt	r1, #1
   19180:	movt	r2, #1
   19184:	bl	16428 <argp_error@@Base>
   19188:	ldrb	r1, [r4, #16]
   1918c:	mov	r0, #0
   19190:	tst	r1, #32
   19194:	beq	1919c <argp_parse@@Base+0xe24>
   19198:	pop	{r4, sl, fp, pc}
   1919c:	mov	r0, #0
   191a0:	bl	11500 <exit@plt>
   191a4:	push	{r4, r5, fp, lr}
   191a8:	add	fp, sp, #8
   191ac:	ldr	r2, [r0]
   191b0:	ldr	ip, [r0, #16]
   191b4:	mov	r4, r1
   191b8:	cmp	r2, #0
   191bc:	beq	19228 <argp_parse@@Base+0xeb0>
   191c0:	ldr	r0, [r4, #8]
   191c4:	mov	r3, #0
   191c8:	add	r0, r0, #1
   191cc:	str	r0, [r4, #8]
   191d0:	mov	r0, #0
   191d4:	b	191e0 <argp_parse@@Base+0xe68>
   191d8:	add	r3, r3, #3
   191dc:	add	r0, r0, #1
   191e0:	add	r5, r2, r3, lsl #3
   191e4:	ldr	r1, [r5, #4]
   191e8:	cmp	r1, #0
   191ec:	bne	191d8 <argp_parse@@Base+0xe60>
   191f0:	ldr	r1, [r2, r3, lsl #3]
   191f4:	cmp	r1, #0
   191f8:	bne	191d8 <argp_parse@@Base+0xe60>
   191fc:	ldr	r1, [r5, #16]
   19200:	cmp	r1, #0
   19204:	bne	191d8 <argp_parse@@Base+0xe60>
   19208:	ldr	r1, [r5, #20]
   1920c:	cmp	r1, #0
   19210:	bne	191d8 <argp_parse@@Base+0xe60>
   19214:	ldr	r1, [r4]
   19218:	mov	r2, r4
   1921c:	add	r1, r1, r3
   19220:	str	r1, [r2], #4
   19224:	b	1923c <argp_parse@@Base+0xec4>
   19228:	ldr	r0, [r0, #4]
   1922c:	cmp	r0, #0
   19230:	beq	19248 <argp_parse@@Base+0xed0>
   19234:	add	r2, r4, #8
   19238:	mov	r0, #1
   1923c:	ldr	r1, [r2]
   19240:	add	r0, r1, r0
   19244:	str	r0, [r2]
   19248:	cmp	ip, #0
   1924c:	ldrne	r0, [ip]
   19250:	cmpne	r0, #0
   19254:	beq	1927c <argp_parse@@Base+0xf04>
   19258:	add	r5, ip, #16
   1925c:	mov	r1, r4
   19260:	bl	191a4 <argp_parse@@Base+0xe2c>
   19264:	ldr	r0, [r4, #12]
   19268:	add	r0, r0, #1
   1926c:	str	r0, [r4, #12]
   19270:	ldr	r0, [r5], #16
   19274:	cmp	r0, #0
   19278:	bne	1925c <argp_parse@@Base+0xee4>
   1927c:	pop	{r4, r5, fp, pc}
   19280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19284:	add	fp, sp, #28
   19288:	sub	sp, sp, #28
   1928c:	ldr	r7, [r0]
   19290:	mov	r6, r3
   19294:	mov	r3, r1
   19298:	ldr	r5, [r0, #16]
   1929c:	ldr	r1, [fp, #8]
   192a0:	cmp	r7, #0
   192a4:	beq	19480 <argp_parse@@Base+0x1108>
   192a8:	str	r0, [sp, #8]
   192ac:	add	r0, sp, #16
   192b0:	add	r8, r1, #4
   192b4:	mov	r9, r7
   192b8:	str	r3, [sp, #12]
   192bc:	stm	r0, {r2, r5, r6}
   192c0:	b	192c8 <argp_parse@@Base+0xf50>
   192c4:	add	r9, r9, #24
   192c8:	ldr	r4, [r9, #4]
   192cc:	cmp	r4, #0
   192d0:	bne	192f8 <argp_parse@@Base+0xf80>
   192d4:	ldr	r0, [r9]
   192d8:	cmp	r0, #0
   192dc:	bne	192f8 <argp_parse@@Base+0xf80>
   192e0:	ldr	r0, [r9, #16]
   192e4:	cmp	r0, #0
   192e8:	bne	192f8 <argp_parse@@Base+0xf80>
   192ec:	ldr	r0, [r9, #20]
   192f0:	cmp	r0, #0
   192f4:	beq	19468 <argp_parse@@Base+0x10f0>
   192f8:	ldr	r0, [r9, #12]
   192fc:	mov	r5, #0
   19300:	tst	r0, #4
   19304:	moveq	r7, r9
   19308:	ldrb	r1, [r7, #12]
   1930c:	tst	r1, #8
   19310:	bne	192c4 <argp_parse@@Base+0xf4c>
   19314:	sub	r1, r4, #1
   19318:	cmp	r1, #254	; 0xfe
   1931c:	bhi	19398 <argp_parse@@Base+0x1020>
   19320:	ands	r0, r0, #8
   19324:	bne	19398 <argp_parse@@Base+0x1020>
   19328:	bl	114e8 <__ctype_b_loc@plt>
   1932c:	ldr	r0, [r0]
   19330:	add	r0, r0, r4, lsl #1
   19334:	ldrb	r0, [r0, #1]
   19338:	tst	r0, #64	; 0x40
   1933c:	beq	19398 <argp_parse@@Base+0x1020>
   19340:	ldr	r0, [r8]
   19344:	add	r1, r0, #1
   19348:	str	r1, [r8]
   1934c:	strb	r4, [r0]
   19350:	ldr	r0, [r7, #8]
   19354:	cmp	r0, #0
   19358:	beq	19390 <argp_parse@@Base+0x1018>
   1935c:	ldr	r0, [r8]
   19360:	add	r1, r0, #1
   19364:	str	r1, [r8]
   19368:	mov	r1, #58	; 0x3a
   1936c:	strb	r1, [r0]
   19370:	ldrb	r0, [r7, #12]
   19374:	tst	r0, #1
   19378:	beq	19390 <argp_parse@@Base+0x1018>
   1937c:	ldr	r0, [r8]
   19380:	add	r1, r0, #1
   19384:	str	r1, [r8]
   19388:	mov	r1, #58	; 0x3a
   1938c:	strb	r1, [r0]
   19390:	ldr	r0, [r8]
   19394:	strb	r5, [r0]
   19398:	ldr	r5, [r9]
   1939c:	cmp	r5, #0
   193a0:	beq	192c4 <argp_parse@@Base+0xf4c>
   193a4:	ldr	r0, [fp, #8]
   193a8:	ldr	r4, [r0]
   193ac:	ldr	sl, [r4, #8]
   193b0:	ldr	r0, [sl]
   193b4:	cmp	r0, #0
   193b8:	beq	193ec <argp_parse@@Base+0x1074>
   193bc:	mov	r6, sl
   193c0:	mov	r1, r5
   193c4:	bl	11344 <strcmp@plt>
   193c8:	cmp	r0, #0
   193cc:	beq	193e0 <argp_parse@@Base+0x1068>
   193d0:	ldr	r0, [r6, #16]!
   193d4:	cmp	r0, #0
   193d8:	bne	193c0 <argp_parse@@Base+0x1048>
   193dc:	b	193ec <argp_parse@@Base+0x1074>
   193e0:	sub	r0, r6, sl
   193e4:	cmn	r0, #1
   193e8:	bgt	192c4 <argp_parse@@Base+0xf4c>
   193ec:	ldr	r6, [fp, #8]
   193f0:	ldr	r0, [r6, #8]
   193f4:	str	r5, [r0]
   193f8:	ldr	r1, [r7, #8]
   193fc:	cmp	r1, #0
   19400:	beq	19418 <argp_parse@@Base+0x10a0>
   19404:	ldrb	r1, [r7, #12]
   19408:	tst	r1, #1
   1940c:	mov	r1, #2
   19410:	movweq	r1, #1
   19414:	b	1941c <argp_parse@@Base+0x10a4>
   19418:	mov	r1, #0
   1941c:	mov	r5, #0
   19420:	stmib	r0, {r1, r5}
   19424:	ldr	r1, [r9, #4]
   19428:	ldr	r3, [sp, #24]
   1942c:	ldr	r2, [r4, #48]	; 0x30
   19430:	cmp	r1, #0
   19434:	sub	r2, r3, r2
   19438:	mov	r3, #956301312	; 0x39000000
   1943c:	ldreq	r1, [r7, #4]
   19440:	lsr	r2, r2, #2
   19444:	mul	r2, r2, r3
   19448:	add	r2, r2, #16777216	; 0x1000000
   1944c:	bic	r1, r1, #-16777216	; 0xff000000
   19450:	orr	r1, r2, r1
   19454:	str	r1, [r0, #12]
   19458:	add	r1, r0, #16
   1945c:	str	r1, [r6, #8]
   19460:	str	r5, [r0, #16]
   19464:	b	192c4 <argp_parse@@Base+0xf4c>
   19468:	ldr	r0, [sp, #8]
   1946c:	add	r6, sp, #16
   19470:	ldr	r7, [r0, #4]
   19474:	ldm	r6, {r2, r5, r6}
   19478:	ldr	r3, [sp, #12]
   1947c:	b	19494 <argp_parse@@Base+0x111c>
   19480:	ldr	r7, [r0, #4]
   19484:	cmp	r7, #0
   19488:	beq	19544 <argp_parse@@Base+0x11cc>
   1948c:	ldr	r1, [fp, #8]
   19490:	add	r8, r1, #4
   19494:	str	r0, [r6, #4]
   19498:	str	r7, [r6]
   1949c:	mov	r0, #0
   194a0:	cmp	r5, #0
   194a4:	ldr	r1, [r8]
   194a8:	str	r0, [r6, #12]
   194ac:	str	r3, [r6, #16]
   194b0:	str	r2, [r6, #20]
   194b4:	str	r0, [r6, #24]
   194b8:	str	r0, [r6, #32]
   194bc:	str	r0, [r6, #28]
   194c0:	str	r1, [r6, #8]
   194c4:	beq	194f4 <argp_parse@@Base+0x117c>
   194c8:	ldr	r1, [r5, r0, lsl #2]
   194cc:	add	r0, r0, #4
   194d0:	cmp	r1, #0
   194d4:	bne	194c8 <argp_parse@@Base+0x1150>
   194d8:	ldr	r1, [fp, #8]
   194dc:	mov	r2, r1
   194e0:	ldr	r1, [r1, #12]
   194e4:	add	r0, r1, r0
   194e8:	str	r1, [r6, #28]
   194ec:	sub	r0, r0, #4
   194f0:	str	r0, [r2, #12]
   194f4:	add	r3, r6, #36	; 0x24
   194f8:	cmp	r5, #0
   194fc:	ldrne	r0, [r5]
   19500:	cmpne	r0, #0
   19504:	beq	19538 <argp_parse@@Base+0x11c0>
   19508:	ldr	r7, [fp, #8]
   1950c:	add	r4, r5, #16
   19510:	mov	r5, #0
   19514:	mov	r1, r6
   19518:	mov	r2, r5
   1951c:	str	r7, [sp]
   19520:	bl	19280 <argp_parse@@Base+0xf08>
   19524:	mov	r3, r0
   19528:	ldr	r0, [r4, r5, lsl #4]
   1952c:	add	r5, r5, #1
   19530:	cmp	r0, #0
   19534:	bne	19514 <argp_parse@@Base+0x119c>
   19538:	mov	r0, r3
   1953c:	sub	sp, fp, #28
   19540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19544:	mov	r3, r6
   19548:	mov	r6, #0
   1954c:	b	194f8 <argp_parse@@Base+0x1180>
   19550:	movw	r2, #59028	; 0xe694
   19554:	movt	r2, #2
   19558:	str	r0, [r2]
   1955c:	movw	r0, #59024	; 0xe690
   19560:	movw	r2, #38272	; 0x9580
   19564:	movt	r0, #2
   19568:	movt	r2, #1
   1956c:	str	r2, [r0]
   19570:	movw	r0, #59032	; 0xe698
   19574:	movt	r0, #2
   19578:	str	r1, [r0]
   1957c:	bx	lr
   19580:	push	{fp, lr}
   19584:	mov	fp, sp
   19588:	sub	sp, sp, #8
   1958c:	movw	r2, #59032	; 0xe698
   19590:	movw	r1, #59028	; 0xe694
   19594:	movw	r3, #53289	; 0xd029
   19598:	movt	r2, #2
   1959c:	movt	r1, #2
   195a0:	movt	r3, #1
   195a4:	ldr	r2, [r2]
   195a8:	ldr	r1, [r1]
   195ac:	str	r2, [sp]
   195b0:	movw	r2, #53275	; 0xd01b
   195b4:	movt	r2, #1
   195b8:	bl	19a5c <argp_parse@@Base+0x16e4>
   195bc:	mov	sp, fp
   195c0:	pop	{fp, pc}
   195c4:	sub	r0, r0, #1
   195c8:	ldrb	r3, [r0, #1]!
   195cc:	cmp	r3, #47	; 0x2f
   195d0:	beq	195c8 <argp_parse@@Base+0x1250>
   195d4:	mov	r2, #0
   195d8:	mov	r1, r0
   195dc:	b	195f8 <argp_parse@@Base+0x1280>
   195e0:	cmp	r3, #0
   195e4:	bxeq	lr
   195e8:	tst	r2, #1
   195ec:	mov	r2, #0
   195f0:	movne	r0, r1
   195f4:	ldrb	r3, [r1, #1]!
   195f8:	uxtb	r3, r3
   195fc:	cmp	r3, #47	; 0x2f
   19600:	bne	195e0 <argp_parse@@Base+0x1268>
   19604:	ldrb	r3, [r1, #1]!
   19608:	mov	r2, #1
   1960c:	b	195f8 <argp_parse@@Base+0x1280>
   19610:	push	{r4, sl, fp, lr}
   19614:	add	fp, sp, #8
   19618:	mov	r4, r0
   1961c:	bl	11518 <strlen@plt>
   19620:	mov	r1, r0
   19624:	sub	r2, r4, #1
   19628:	mov	r0, r1
   1962c:	cmp	r1, #2
   19630:	popcc	{r4, sl, fp, pc}
   19634:	ldrb	r3, [r2, r0]
   19638:	sub	r1, r0, #1
   1963c:	cmp	r3, #47	; 0x2f
   19640:	beq	19628 <argp_parse@@Base+0x12b0>
   19644:	pop	{r4, sl, fp, pc}
   19648:	push	{r4, r5, r6, sl, fp, lr}
   1964c:	add	fp, sp, #16
   19650:	mov	r4, r0
   19654:	bl	1153c <__errno_location@plt>
   19658:	ldr	r6, [r0]
   1965c:	mov	r5, r0
   19660:	mov	r0, r4
   19664:	bl	113b0 <free@plt>
   19668:	str	r6, [r5]
   1966c:	pop	{r4, r5, r6, sl, fp, pc}
   19670:	push	{fp, lr}
   19674:	mov	fp, sp
   19678:	sub	sp, sp, #16
   1967c:	mov	ip, #0
   19680:	str	ip, [sp, #8]
   19684:	str	ip, [sp, #4]
   19688:	ldr	ip, [fp, #8]
   1968c:	str	ip, [sp]
   19690:	bl	1bab0 <argp_parse@@Base+0x3738>
   19694:	mov	sp, fp
   19698:	pop	{fp, pc}
   1969c:	push	{fp, lr}
   196a0:	mov	fp, sp
   196a4:	sub	sp, sp, #16
   196a8:	mov	ip, #0
   196ac:	str	ip, [sp, #12]
   196b0:	str	ip, [sp, #4]
   196b4:	ldr	ip, [fp, #12]
   196b8:	str	ip, [sp, #8]
   196bc:	ldr	ip, [fp, #8]
   196c0:	str	ip, [sp]
   196c4:	bl	1aba0 <argp_parse@@Base+0x2828>
   196c8:	mov	sp, fp
   196cc:	pop	{fp, pc}
   196d0:	push	{fp, lr}
   196d4:	mov	fp, sp
   196d8:	sub	sp, sp, #16
   196dc:	mov	ip, #0
   196e0:	str	ip, [sp, #8]
   196e4:	mov	ip, #1
   196e8:	str	ip, [sp, #4]
   196ec:	ldr	ip, [fp, #8]
   196f0:	str	ip, [sp]
   196f4:	bl	1bab0 <argp_parse@@Base+0x3738>
   196f8:	mov	sp, fp
   196fc:	pop	{fp, pc}
   19700:	push	{fp, lr}
   19704:	mov	fp, sp
   19708:	sub	sp, sp, #16
   1970c:	mov	ip, #0
   19710:	str	ip, [sp, #12]
   19714:	mov	ip, #1
   19718:	str	ip, [sp, #4]
   1971c:	ldr	ip, [fp, #12]
   19720:	str	ip, [sp, #8]
   19724:	ldr	ip, [fp, #8]
   19728:	str	ip, [sp]
   1972c:	bl	1aba0 <argp_parse@@Base+0x2828>
   19730:	mov	sp, fp
   19734:	pop	{fp, pc}
   19738:	push	{r4, r5, fp, lr}
   1973c:	add	fp, sp, #8
   19740:	cmp	r0, #0
   19744:	beq	197d8 <argp_parse@@Base+0x1460>
   19748:	mov	r1, #47	; 0x2f
   1974c:	mov	r4, r0
   19750:	bl	115cc <strrchr@plt>
   19754:	cmp	r0, #0
   19758:	mov	r5, r4
   1975c:	addne	r5, r0, #1
   19760:	sub	r0, r5, r4
   19764:	cmp	r0, #7
   19768:	blt	197bc <argp_parse@@Base+0x1444>
   1976c:	movw	r1, #53358	; 0xd06e
   19770:	sub	r0, r5, #7
   19774:	mov	r2, #7
   19778:	movt	r1, #1
   1977c:	bl	1165c <strncmp@plt>
   19780:	cmp	r0, #0
   19784:	bne	197bc <argp_parse@@Base+0x1444>
   19788:	movw	r1, #53366	; 0xd076
   1978c:	mov	r0, r5
   19790:	mov	r2, #3
   19794:	movt	r1, #1
   19798:	bl	1165c <strncmp@plt>
   1979c:	cmp	r0, #0
   197a0:	beq	197ac <argp_parse@@Base+0x1434>
   197a4:	mov	r4, r5
   197a8:	b	197bc <argp_parse@@Base+0x1444>
   197ac:	movw	r0, #58912	; 0xe620
   197b0:	add	r4, r5, #3
   197b4:	movt	r0, #2
   197b8:	str	r4, [r0]
   197bc:	movw	r0, #58916	; 0xe624
   197c0:	movt	r0, #2
   197c4:	str	r4, [r0]
   197c8:	movw	r0, #59036	; 0xe69c
   197cc:	movt	r0, #2
   197d0:	str	r4, [r0]
   197d4:	pop	{r4, r5, fp, pc}
   197d8:	movw	r0, #58920	; 0xe628
   197dc:	mov	r1, #55	; 0x37
   197e0:	mov	r2, #1
   197e4:	movt	r0, #2
   197e8:	ldr	r3, [r0]
   197ec:	movw	r0, #53302	; 0xd036
   197f0:	movt	r0, #1
   197f4:	bl	11470 <fwrite@plt>
   197f8:	bl	11668 <abort@plt>
   197fc:	push	{r4, r5, r6, r7, fp, lr}
   19800:	add	fp, sp, #16
   19804:	sub	sp, sp, #32
   19808:	ldr	r7, [fp, #12]
   1980c:	ldr	r6, [fp, #8]
   19810:	mov	r4, r2
   19814:	mov	r5, r0
   19818:	cmp	r1, #0
   1981c:	beq	1983c <argp_parse@@Base+0x14c4>
   19820:	mov	r2, r1
   19824:	movw	r1, #53370	; 0xd07a
   19828:	str	r3, [sp]
   1982c:	mov	r0, r5
   19830:	mov	r3, r4
   19834:	movt	r1, #1
   19838:	b	1984c <argp_parse@@Base+0x14d4>
   1983c:	movw	r1, #53382	; 0xd086
   19840:	mov	r0, r5
   19844:	mov	r2, r4
   19848:	movt	r1, #1
   1984c:	bl	11530 <fprintf@plt>
   19850:	movw	r1, #54146	; 0xd382
   19854:	movw	r2, #53389	; 0xd08d
   19858:	mov	r0, r5
   1985c:	movw	r3, #2022	; 0x7e6
   19860:	movt	r1, #1
   19864:	movt	r2, #1
   19868:	bl	11530 <fprintf@plt>
   1986c:	mov	r0, #10
   19870:	mov	r1, r5
   19874:	bl	115e4 <fputc@plt>
   19878:	movw	r1, #53393	; 0xd091
   1987c:	movw	r2, #53564	; 0xd13c
   19880:	mov	r0, r5
   19884:	movt	r1, #1
   19888:	movt	r2, #1
   1988c:	bl	11530 <fprintf@plt>
   19890:	mov	r0, #10
   19894:	mov	r1, r5
   19898:	bl	115e4 <fputc@plt>
   1989c:	cmp	r7, #9
   198a0:	bhi	198dc <argp_parse@@Base+0x1564>
   198a4:	add	r0, pc, #0
   198a8:	ldr	pc, [r0, r7, lsl #2]
   198ac:	ldrdeq	r9, [r1], -r4
   198b0:	andeq	r9, r1, r0, lsl r9
   198b4:	andeq	r9, r1, ip, lsr #18
   198b8:	andeq	r9, r1, r8, asr #18
   198bc:	andeq	r9, r1, r0, ror #18
   198c0:	andeq	r9, r1, ip, ror r9
   198c4:	muleq	r1, r8, r9
   198c8:			; <UNDEFINED> instruction: 0x000199bc
   198cc:	andeq	r9, r1, ip, lsl sl
   198d0:	andeq	r9, r1, r8, ror #19
   198d4:	sub	sp, fp, #16
   198d8:	pop	{r4, r5, r6, r7, fp, pc}
   198dc:	add	r7, r6, #8
   198e0:	ldm	r6, {r2, r3}
   198e4:	add	lr, r6, #20
   198e8:	ldm	r7, {r0, r1, r7}
   198ec:	ldm	lr, {r4, ip, lr}
   198f0:	ldr	r6, [r6, #32]
   198f4:	stm	sp, {r0, r1, r7}
   198f8:	movw	r1, #53917	; 0xd29d
   198fc:	add	r0, sp, #12
   19900:	stm	r0, {r4, ip, lr}
   19904:	str	r6, [sp, #24]
   19908:	movt	r1, #1
   1990c:	b	19a4c <argp_parse@@Base+0x16d4>
   19910:	ldr	r2, [r6]
   19914:	movw	r1, #53598	; 0xd15e
   19918:	mov	r0, r5
   1991c:	movt	r1, #1
   19920:	sub	sp, fp, #16
   19924:	pop	{r4, r5, r6, r7, fp, lr}
   19928:	b	11530 <fprintf@plt>
   1992c:	ldm	r6, {r2, r3}
   19930:	movw	r1, #53614	; 0xd16e
   19934:	mov	r0, r5
   19938:	movt	r1, #1
   1993c:	sub	sp, fp, #16
   19940:	pop	{r4, r5, r6, r7, fp, lr}
   19944:	b	11530 <fprintf@plt>
   19948:	ldm	r6, {r2, r3}
   1994c:	ldr	r0, [r6, #8]
   19950:	movw	r1, #53637	; 0xd185
   19954:	movt	r1, #1
   19958:	str	r0, [sp]
   1995c:	b	19a4c <argp_parse@@Base+0x16d4>
   19960:	ldm	r6, {r2, r3}
   19964:	ldr	r0, [r6, #8]
   19968:	ldr	r1, [r6, #12]
   1996c:	stm	sp, {r0, r1}
   19970:	movw	r1, #53665	; 0xd1a1
   19974:	movt	r1, #1
   19978:	b	19a4c <argp_parse@@Base+0x16d4>
   1997c:	add	r7, r6, #8
   19980:	ldm	r6, {r2, r3}
   19984:	ldm	r7, {r0, r1, r7}
   19988:	stm	sp, {r0, r1, r7}
   1998c:	movw	r1, #53697	; 0xd1c1
   19990:	movt	r1, #1
   19994:	b	19a4c <argp_parse@@Base+0x16d4>
   19998:	add	r7, r6, #8
   1999c:	ldm	r6, {r2, r3}
   199a0:	ldm	r7, {r0, r1, r7}
   199a4:	ldr	r6, [r6, #20]
   199a8:	stm	sp, {r0, r1, r7}
   199ac:	movw	r1, #53733	; 0xd1e5
   199b0:	str	r6, [sp, #12]
   199b4:	movt	r1, #1
   199b8:	b	19a4c <argp_parse@@Base+0x16d4>
   199bc:	add	r7, r6, #8
   199c0:	ldm	r6, {r2, r3}
   199c4:	ldm	r7, {r0, r1, r7}
   199c8:	ldr	r4, [r6, #20]
   199cc:	ldr	r6, [r6, #24]
   199d0:	stm	sp, {r0, r1, r7}
   199d4:	movw	r1, #53773	; 0xd20d
   199d8:	str	r4, [sp, #12]
   199dc:	str	r6, [sp, #16]
   199e0:	movt	r1, #1
   199e4:	b	19a4c <argp_parse@@Base+0x16d4>
   199e8:	add	r7, r6, #8
   199ec:	ldm	r6, {r2, r3}
   199f0:	add	lr, r6, #20
   199f4:	ldm	r7, {r0, r1, r7}
   199f8:	ldm	lr, {r4, ip, lr}
   199fc:	ldr	r6, [r6, #32]
   19a00:	stm	sp, {r0, r1, r7}
   19a04:	movw	r1, #53865	; 0xd269
   19a08:	add	r0, sp, #12
   19a0c:	stm	r0, {r4, ip, lr}
   19a10:	str	r6, [sp, #24]
   19a14:	movt	r1, #1
   19a18:	b	19a4c <argp_parse@@Base+0x16d4>
   19a1c:	add	r7, r6, #8
   19a20:	ldm	r6, {r2, r3}
   19a24:	ldm	r7, {r0, r1, r7}
   19a28:	ldr	r4, [r6, #20]
   19a2c:	ldr	ip, [r6, #24]
   19a30:	ldr	r6, [r6, #28]
   19a34:	stm	sp, {r0, r1, r7}
   19a38:	movw	r1, #53817	; 0xd239
   19a3c:	str	r4, [sp, #12]
   19a40:	str	ip, [sp, #16]
   19a44:	str	r6, [sp, #20]
   19a48:	movt	r1, #1
   19a4c:	mov	r0, r5
   19a50:	bl	11530 <fprintf@plt>
   19a54:	sub	sp, fp, #16
   19a58:	pop	{r4, r5, r6, r7, fp, pc}
   19a5c:	push	{r4, sl, fp, lr}
   19a60:	add	fp, sp, #8
   19a64:	sub	sp, sp, #8
   19a68:	ldr	ip, [fp, #8]
   19a6c:	mov	lr, #0
   19a70:	ldr	r4, [ip, lr, lsl #2]
   19a74:	add	lr, lr, #1
   19a78:	cmp	r4, #0
   19a7c:	bne	19a70 <argp_parse@@Base+0x16f8>
   19a80:	sub	r4, lr, #1
   19a84:	str	ip, [sp]
   19a88:	str	r4, [sp, #4]
   19a8c:	bl	197fc <argp_parse@@Base+0x1484>
   19a90:	sub	sp, fp, #8
   19a94:	pop	{r4, sl, fp, pc}
   19a98:	push	{fp, lr}
   19a9c:	mov	fp, sp
   19aa0:	sub	sp, sp, #48	; 0x30
   19aa4:	ldr	ip, [fp, #8]
   19aa8:	ldr	lr, [ip]
   19aac:	cmp	lr, #0
   19ab0:	str	lr, [sp, #8]
   19ab4:	beq	19b50 <argp_parse@@Base+0x17d8>
   19ab8:	ldr	lr, [ip, #4]
   19abc:	cmp	lr, #0
   19ac0:	str	lr, [sp, #12]
   19ac4:	beq	19b58 <argp_parse@@Base+0x17e0>
   19ac8:	ldr	lr, [ip, #8]
   19acc:	cmp	lr, #0
   19ad0:	str	lr, [sp, #16]
   19ad4:	beq	19b60 <argp_parse@@Base+0x17e8>
   19ad8:	ldr	lr, [ip, #12]
   19adc:	cmp	lr, #0
   19ae0:	str	lr, [sp, #20]
   19ae4:	beq	19b68 <argp_parse@@Base+0x17f0>
   19ae8:	ldr	lr, [ip, #16]
   19aec:	cmp	lr, #0
   19af0:	str	lr, [sp, #24]
   19af4:	beq	19b70 <argp_parse@@Base+0x17f8>
   19af8:	ldr	lr, [ip, #20]
   19afc:	cmp	lr, #0
   19b00:	str	lr, [sp, #28]
   19b04:	beq	19b78 <argp_parse@@Base+0x1800>
   19b08:	ldr	lr, [ip, #24]
   19b0c:	cmp	lr, #0
   19b10:	str	lr, [sp, #32]
   19b14:	beq	19b80 <argp_parse@@Base+0x1808>
   19b18:	ldr	lr, [ip, #28]
   19b1c:	cmp	lr, #0
   19b20:	str	lr, [sp, #36]	; 0x24
   19b24:	beq	19b88 <argp_parse@@Base+0x1810>
   19b28:	ldr	lr, [ip, #32]
   19b2c:	cmp	lr, #0
   19b30:	str	lr, [sp, #40]	; 0x28
   19b34:	beq	19b90 <argp_parse@@Base+0x1818>
   19b38:	ldr	lr, [ip, #36]	; 0x24
   19b3c:	mov	ip, #10
   19b40:	cmp	lr, #0
   19b44:	str	lr, [sp, #44]	; 0x2c
   19b48:	movweq	ip, #9
   19b4c:	b	19b94 <argp_parse@@Base+0x181c>
   19b50:	mov	ip, #0
   19b54:	b	19b94 <argp_parse@@Base+0x181c>
   19b58:	mov	ip, #1
   19b5c:	b	19b94 <argp_parse@@Base+0x181c>
   19b60:	mov	ip, #2
   19b64:	b	19b94 <argp_parse@@Base+0x181c>
   19b68:	mov	ip, #3
   19b6c:	b	19b94 <argp_parse@@Base+0x181c>
   19b70:	mov	ip, #4
   19b74:	b	19b94 <argp_parse@@Base+0x181c>
   19b78:	mov	ip, #5
   19b7c:	b	19b94 <argp_parse@@Base+0x181c>
   19b80:	mov	ip, #6
   19b84:	b	19b94 <argp_parse@@Base+0x181c>
   19b88:	mov	ip, #7
   19b8c:	b	19b94 <argp_parse@@Base+0x181c>
   19b90:	mov	ip, #8
   19b94:	add	lr, sp, #8
   19b98:	str	ip, [sp, #4]
   19b9c:	str	lr, [sp]
   19ba0:	bl	197fc <argp_parse@@Base+0x1484>
   19ba4:	mov	sp, fp
   19ba8:	pop	{fp, pc}
   19bac:	push	{fp, lr}
   19bb0:	mov	fp, sp
   19bb4:	sub	sp, sp, #56	; 0x38
   19bb8:	add	ip, fp, #8
   19bbc:	str	ip, [sp, #12]
   19bc0:	ldr	lr, [fp, #8]
   19bc4:	cmp	lr, #0
   19bc8:	str	lr, [sp, #16]
   19bcc:	beq	19c68 <argp_parse@@Base+0x18f0>
   19bd0:	ldr	lr, [ip, #4]
   19bd4:	cmp	lr, #0
   19bd8:	str	lr, [sp, #20]
   19bdc:	beq	19c70 <argp_parse@@Base+0x18f8>
   19be0:	ldr	lr, [ip, #8]
   19be4:	cmp	lr, #0
   19be8:	str	lr, [sp, #24]
   19bec:	beq	19c78 <argp_parse@@Base+0x1900>
   19bf0:	ldr	lr, [ip, #12]
   19bf4:	cmp	lr, #0
   19bf8:	str	lr, [sp, #28]
   19bfc:	beq	19c80 <argp_parse@@Base+0x1908>
   19c00:	ldr	lr, [ip, #16]
   19c04:	cmp	lr, #0
   19c08:	str	lr, [sp, #32]
   19c0c:	beq	19c88 <argp_parse@@Base+0x1910>
   19c10:	ldr	lr, [ip, #20]
   19c14:	cmp	lr, #0
   19c18:	str	lr, [sp, #36]	; 0x24
   19c1c:	beq	19c90 <argp_parse@@Base+0x1918>
   19c20:	ldr	lr, [ip, #24]
   19c24:	cmp	lr, #0
   19c28:	str	lr, [sp, #40]	; 0x28
   19c2c:	beq	19c98 <argp_parse@@Base+0x1920>
   19c30:	ldr	lr, [ip, #28]
   19c34:	cmp	lr, #0
   19c38:	str	lr, [sp, #44]	; 0x2c
   19c3c:	beq	19ca0 <argp_parse@@Base+0x1928>
   19c40:	ldr	lr, [ip, #32]
   19c44:	cmp	lr, #0
   19c48:	str	lr, [sp, #48]	; 0x30
   19c4c:	beq	19ca8 <argp_parse@@Base+0x1930>
   19c50:	ldr	lr, [ip, #36]	; 0x24
   19c54:	mov	ip, #10
   19c58:	cmp	lr, #0
   19c5c:	str	lr, [sp, #52]	; 0x34
   19c60:	movweq	ip, #9
   19c64:	b	19cac <argp_parse@@Base+0x1934>
   19c68:	mov	ip, #0
   19c6c:	b	19cac <argp_parse@@Base+0x1934>
   19c70:	mov	ip, #1
   19c74:	b	19cac <argp_parse@@Base+0x1934>
   19c78:	mov	ip, #2
   19c7c:	b	19cac <argp_parse@@Base+0x1934>
   19c80:	mov	ip, #3
   19c84:	b	19cac <argp_parse@@Base+0x1934>
   19c88:	mov	ip, #4
   19c8c:	b	19cac <argp_parse@@Base+0x1934>
   19c90:	mov	ip, #5
   19c94:	b	19cac <argp_parse@@Base+0x1934>
   19c98:	mov	ip, #6
   19c9c:	b	19cac <argp_parse@@Base+0x1934>
   19ca0:	mov	ip, #7
   19ca4:	b	19cac <argp_parse@@Base+0x1934>
   19ca8:	mov	ip, #8
   19cac:	add	lr, sp, #16
   19cb0:	str	ip, [sp, #4]
   19cb4:	str	lr, [sp]
   19cb8:	bl	197fc <argp_parse@@Base+0x1484>
   19cbc:	mov	sp, fp
   19cc0:	pop	{fp, pc}
   19cc4:	push	{fp, lr}
   19cc8:	mov	fp, sp
   19ccc:	movw	r0, #58924	; 0xe62c
   19cd0:	movt	r0, #2
   19cd4:	ldr	r1, [r0]
   19cd8:	mov	r0, #10
   19cdc:	bl	115e4 <fputc@plt>
   19ce0:	movw	r0, #53977	; 0xd2d9
   19ce4:	movw	r1, #53997	; 0xd2ed
   19ce8:	movt	r0, #1
   19cec:	movt	r1, #1
   19cf0:	bl	11368 <printf@plt>
   19cf4:	movw	r0, #54019	; 0xd303
   19cf8:	movw	r1, #53275	; 0xd01b
   19cfc:	movw	r2, #54039	; 0xd317
   19d00:	movt	r0, #1
   19d04:	movt	r1, #1
   19d08:	movt	r2, #1
   19d0c:	bl	11368 <printf@plt>
   19d10:	movw	r0, #54078	; 0xd33e
   19d14:	movw	r1, #54117	; 0xd365
   19d18:	movt	r0, #1
   19d1c:	movt	r1, #1
   19d20:	pop	{fp, lr}
   19d24:	b	11368 <printf@plt>
   19d28:	push	{r4, r5, r6, sl, fp, lr}
   19d2c:	add	fp, sp, #16
   19d30:	mov	r4, r2
   19d34:	mov	r5, r1
   19d38:	mov	r6, r0
   19d3c:	bl	1bbac <argp_parse@@Base+0x3834>
   19d40:	cmp	r0, #0
   19d44:	popne	{r4, r5, r6, sl, fp, pc}
   19d48:	cmp	r6, #0
   19d4c:	beq	19d60 <argp_parse@@Base+0x19e8>
   19d50:	cmp	r5, #0
   19d54:	cmpne	r4, #0
   19d58:	bne	19d60 <argp_parse@@Base+0x19e8>
   19d5c:	pop	{r4, r5, r6, sl, fp, pc}
   19d60:	bl	1a300 <argp_parse@@Base+0x1f88>
   19d64:	push	{r4, r5, r6, sl, fp, lr}
   19d68:	add	fp, sp, #16
   19d6c:	mov	r4, r2
   19d70:	mov	r5, r1
   19d74:	mov	r6, r0
   19d78:	bl	1bbac <argp_parse@@Base+0x3834>
   19d7c:	cmp	r0, #0
   19d80:	popne	{r4, r5, r6, sl, fp, pc}
   19d84:	cmp	r6, #0
   19d88:	beq	19d9c <argp_parse@@Base+0x1a24>
   19d8c:	cmp	r5, #0
   19d90:	cmpne	r4, #0
   19d94:	bne	19d9c <argp_parse@@Base+0x1a24>
   19d98:	pop	{r4, r5, r6, sl, fp, pc}
   19d9c:	bl	1a300 <argp_parse@@Base+0x1f88>
   19da0:	push	{fp, lr}
   19da4:	mov	fp, sp
   19da8:	bl	1a384 <argp_parse@@Base+0x200c>
   19dac:	cmp	r0, #0
   19db0:	popne	{fp, pc}
   19db4:	bl	1a300 <argp_parse@@Base+0x1f88>
   19db8:	push	{fp, lr}
   19dbc:	mov	fp, sp
   19dc0:	bl	1a384 <argp_parse@@Base+0x200c>
   19dc4:	cmp	r0, #0
   19dc8:	popne	{fp, pc}
   19dcc:	bl	1a300 <argp_parse@@Base+0x1f88>
   19dd0:	push	{fp, lr}
   19dd4:	mov	fp, sp
   19dd8:	bl	1a384 <argp_parse@@Base+0x200c>
   19ddc:	cmp	r0, #0
   19de0:	popne	{fp, pc}
   19de4:	bl	1a300 <argp_parse@@Base+0x1f88>
   19de8:	push	{r4, r5, fp, lr}
   19dec:	add	fp, sp, #8
   19df0:	mov	r4, r1
   19df4:	mov	r5, r0
   19df8:	bl	1a3b4 <argp_parse@@Base+0x203c>
   19dfc:	cmp	r0, #0
   19e00:	popne	{r4, r5, fp, pc}
   19e04:	cmp	r5, #0
   19e08:	beq	19e18 <argp_parse@@Base+0x1aa0>
   19e0c:	cmp	r4, #0
   19e10:	bne	19e18 <argp_parse@@Base+0x1aa0>
   19e14:	pop	{r4, r5, fp, pc}
   19e18:	bl	1a300 <argp_parse@@Base+0x1f88>
   19e1c:	push	{fp, lr}
   19e20:	mov	fp, sp
   19e24:	cmp	r1, #0
   19e28:	orreq	r1, r1, #1
   19e2c:	bl	1a3b4 <argp_parse@@Base+0x203c>
   19e30:	cmp	r0, #0
   19e34:	popne	{fp, pc}
   19e38:	bl	1a300 <argp_parse@@Base+0x1f88>
   19e3c:	push	{fp, lr}
   19e40:	mov	fp, sp
   19e44:	clz	r3, r2
   19e48:	lsr	ip, r3, #5
   19e4c:	clz	r3, r1
   19e50:	lsr	r3, r3, #5
   19e54:	orrs	r3, r3, ip
   19e58:	movwne	r1, #1
   19e5c:	movwne	r2, #1
   19e60:	bl	1bbac <argp_parse@@Base+0x3834>
   19e64:	cmp	r0, #0
   19e68:	popne	{fp, pc}
   19e6c:	bl	1a300 <argp_parse@@Base+0x1f88>
   19e70:	push	{fp, lr}
   19e74:	mov	fp, sp
   19e78:	mov	r2, r1
   19e7c:	mov	r1, r0
   19e80:	mov	r0, #0
   19e84:	bl	1bbac <argp_parse@@Base+0x3834>
   19e88:	cmp	r0, #0
   19e8c:	popne	{fp, pc}
   19e90:	bl	1a300 <argp_parse@@Base+0x1f88>
   19e94:	push	{fp, lr}
   19e98:	mov	fp, sp
   19e9c:	mov	r2, r1
   19ea0:	mov	r1, r0
   19ea4:	clz	r0, r2
   19ea8:	clz	r3, r1
   19eac:	lsr	r0, r0, #5
   19eb0:	lsr	r3, r3, #5
   19eb4:	orrs	r0, r3, r0
   19eb8:	movwne	r1, #1
   19ebc:	movwne	r2, #1
   19ec0:	mov	r0, #0
   19ec4:	bl	1bbac <argp_parse@@Base+0x3834>
   19ec8:	cmp	r0, #0
   19ecc:	popne	{fp, pc}
   19ed0:	bl	1a300 <argp_parse@@Base+0x1f88>
   19ed4:	push	{r4, r5, r6, sl, fp, lr}
   19ed8:	add	fp, sp, #16
   19edc:	ldr	r5, [r1]
   19ee0:	mov	r4, r1
   19ee4:	mov	r6, r0
   19ee8:	cmp	r0, #0
   19eec:	beq	19f04 <argp_parse@@Base+0x1b8c>
   19ef0:	mov	r0, #1
   19ef4:	add	r0, r0, r5, lsr #1
   19ef8:	adds	r5, r5, r0
   19efc:	bcc	19f0c <argp_parse@@Base+0x1b94>
   19f00:	b	19f48 <argp_parse@@Base+0x1bd0>
   19f04:	cmp	r5, #0
   19f08:	movweq	r5, #64	; 0x40
   19f0c:	mov	r0, r6
   19f10:	mov	r1, r5
   19f14:	mov	r2, #1
   19f18:	bl	1bbac <argp_parse@@Base+0x3834>
   19f1c:	cmp	r5, #0
   19f20:	mov	r1, r5
   19f24:	movwne	r1, #1
   19f28:	cmp	r0, #0
   19f2c:	bne	19f40 <argp_parse@@Base+0x1bc8>
   19f30:	clz	r2, r6
   19f34:	lsr	r2, r2, #5
   19f38:	orrs	r1, r2, r1
   19f3c:	bne	19f48 <argp_parse@@Base+0x1bd0>
   19f40:	str	r5, [r4]
   19f44:	pop	{r4, r5, r6, sl, fp, pc}
   19f48:	bl	1a300 <argp_parse@@Base+0x1f88>
   19f4c:	push	{r4, r5, r6, r7, fp, lr}
   19f50:	add	fp, sp, #16
   19f54:	ldr	r5, [r1]
   19f58:	mov	r6, r2
   19f5c:	mov	r4, r1
   19f60:	mov	r7, r0
   19f64:	cmp	r0, #0
   19f68:	beq	19f80 <argp_parse@@Base+0x1c08>
   19f6c:	mov	r0, #1
   19f70:	add	r0, r0, r5, lsr #1
   19f74:	adds	r5, r5, r0
   19f78:	bcc	19f98 <argp_parse@@Base+0x1c20>
   19f7c:	b	19fcc <argp_parse@@Base+0x1c54>
   19f80:	cmp	r5, #0
   19f84:	bne	19f98 <argp_parse@@Base+0x1c20>
   19f88:	mov	r0, #64	; 0x40
   19f8c:	cmp	r6, #64	; 0x40
   19f90:	udiv	r5, r0, r6
   19f94:	addhi	r5, r5, #1
   19f98:	mov	r0, r7
   19f9c:	mov	r1, r5
   19fa0:	mov	r2, r6
   19fa4:	bl	1bbac <argp_parse@@Base+0x3834>
   19fa8:	cmp	r0, #0
   19fac:	bne	19fc4 <argp_parse@@Base+0x1c4c>
   19fb0:	cmp	r7, #0
   19fb4:	beq	19fcc <argp_parse@@Base+0x1c54>
   19fb8:	cmp	r6, #0
   19fbc:	cmpne	r5, #0
   19fc0:	bne	19fcc <argp_parse@@Base+0x1c54>
   19fc4:	str	r5, [r4]
   19fc8:	pop	{r4, r5, r6, r7, fp, pc}
   19fcc:	bl	1a300 <argp_parse@@Base+0x1f88>
   19fd0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19fd4:	add	fp, sp, #24
   19fd8:	mov	r8, r1
   19fdc:	ldr	r1, [r1]
   19fe0:	mov	r5, r0
   19fe4:	add	r0, r1, r1, asr #1
   19fe8:	cmp	r0, r1
   19fec:	mvnvs	r0, #-2147483648	; 0x80000000
   19ff0:	cmp	r0, r3
   19ff4:	mov	r7, r0
   19ff8:	movgt	r7, r3
   19ffc:	cmn	r3, #1
   1a000:	movle	r7, r0
   1a004:	ldr	r0, [fp, #8]
   1a008:	cmn	r0, #1
   1a00c:	ble	1a034 <argp_parse@@Base+0x1cbc>
   1a010:	cmp	r0, #0
   1a014:	beq	1a088 <argp_parse@@Base+0x1d10>
   1a018:	cmn	r7, #1
   1a01c:	ble	1a05c <argp_parse@@Base+0x1ce4>
   1a020:	mvn	r4, #-2147483648	; 0x80000000
   1a024:	udiv	r6, r4, r0
   1a028:	cmp	r6, r7
   1a02c:	bge	1a088 <argp_parse@@Base+0x1d10>
   1a030:	b	1a098 <argp_parse@@Base+0x1d20>
   1a034:	cmn	r7, #1
   1a038:	ble	1a078 <argp_parse@@Base+0x1d00>
   1a03c:	cmn	r0, #1
   1a040:	beq	1a088 <argp_parse@@Base+0x1d10>
   1a044:	mov	r6, #-2147483648	; 0x80000000
   1a048:	mvn	r4, #-2147483648	; 0x80000000
   1a04c:	sdiv	r6, r6, r0
   1a050:	cmp	r6, r7
   1a054:	bge	1a088 <argp_parse@@Base+0x1d10>
   1a058:	b	1a098 <argp_parse@@Base+0x1d20>
   1a05c:	beq	1a088 <argp_parse@@Base+0x1d10>
   1a060:	mov	r6, #-2147483648	; 0x80000000
   1a064:	mvn	r4, #-2147483648	; 0x80000000
   1a068:	sdiv	r6, r6, r7
   1a06c:	cmp	r6, r0
   1a070:	bge	1a088 <argp_parse@@Base+0x1d10>
   1a074:	b	1a098 <argp_parse@@Base+0x1d20>
   1a078:	mvn	r4, #-2147483648	; 0x80000000
   1a07c:	sdiv	r6, r4, r0
   1a080:	cmp	r7, r6
   1a084:	blt	1a098 <argp_parse@@Base+0x1d20>
   1a088:	mul	r6, r7, r0
   1a08c:	mov	r4, #64	; 0x40
   1a090:	cmp	r6, #63	; 0x3f
   1a094:	bgt	1a0a0 <argp_parse@@Base+0x1d28>
   1a098:	sdiv	r7, r4, r0
   1a09c:	mul	r6, r7, r0
   1a0a0:	cmp	r5, #0
   1a0a4:	moveq	r4, #0
   1a0a8:	streq	r4, [r8]
   1a0ac:	sub	r4, r7, r1
   1a0b0:	cmp	r4, r2
   1a0b4:	bge	1a160 <argp_parse@@Base+0x1de8>
   1a0b8:	add	r7, r1, r2
   1a0bc:	mov	r6, #0
   1a0c0:	mov	r2, #0
   1a0c4:	cmp	r7, r3
   1a0c8:	movwgt	r6, #1
   1a0cc:	cmn	r3, #1
   1a0d0:	movwgt	r2, #1
   1a0d4:	cmp	r7, r1
   1a0d8:	bvs	1a194 <argp_parse@@Base+0x1e1c>
   1a0dc:	ands	r1, r2, r6
   1a0e0:	bne	1a194 <argp_parse@@Base+0x1e1c>
   1a0e4:	cmn	r0, #1
   1a0e8:	ble	1a110 <argp_parse@@Base+0x1d98>
   1a0ec:	cmp	r0, #0
   1a0f0:	beq	1a15c <argp_parse@@Base+0x1de4>
   1a0f4:	cmn	r7, #1
   1a0f8:	ble	1a134 <argp_parse@@Base+0x1dbc>
   1a0fc:	mvn	r1, #-2147483648	; 0x80000000
   1a100:	udiv	r1, r1, r0
   1a104:	cmp	r1, r7
   1a108:	bge	1a15c <argp_parse@@Base+0x1de4>
   1a10c:	b	1a194 <argp_parse@@Base+0x1e1c>
   1a110:	cmn	r7, #1
   1a114:	ble	1a14c <argp_parse@@Base+0x1dd4>
   1a118:	cmn	r0, #1
   1a11c:	beq	1a15c <argp_parse@@Base+0x1de4>
   1a120:	mov	r1, #-2147483648	; 0x80000000
   1a124:	sdiv	r1, r1, r0
   1a128:	cmp	r1, r7
   1a12c:	bge	1a15c <argp_parse@@Base+0x1de4>
   1a130:	b	1a194 <argp_parse@@Base+0x1e1c>
   1a134:	beq	1a15c <argp_parse@@Base+0x1de4>
   1a138:	mov	r1, #-2147483648	; 0x80000000
   1a13c:	sdiv	r1, r1, r7
   1a140:	cmp	r1, r0
   1a144:	bge	1a15c <argp_parse@@Base+0x1de4>
   1a148:	b	1a194 <argp_parse@@Base+0x1e1c>
   1a14c:	mvn	r1, #-2147483648	; 0x80000000
   1a150:	sdiv	r1, r1, r0
   1a154:	cmp	r7, r1
   1a158:	blt	1a194 <argp_parse@@Base+0x1e1c>
   1a15c:	mul	r6, r7, r0
   1a160:	mov	r0, r5
   1a164:	mov	r1, r6
   1a168:	bl	1a3b4 <argp_parse@@Base+0x203c>
   1a16c:	cmp	r6, #0
   1a170:	movwne	r6, #1
   1a174:	cmp	r0, #0
   1a178:	bne	1a18c <argp_parse@@Base+0x1e14>
   1a17c:	clz	r1, r5
   1a180:	lsr	r1, r1, #5
   1a184:	orrs	r1, r1, r6
   1a188:	bne	1a194 <argp_parse@@Base+0x1e1c>
   1a18c:	str	r7, [r8]
   1a190:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a194:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a198:	push	{fp, lr}
   1a19c:	mov	fp, sp
   1a1a0:	mov	r1, #1
   1a1a4:	bl	1a330 <argp_parse@@Base+0x1fb8>
   1a1a8:	cmp	r0, #0
   1a1ac:	popne	{fp, pc}
   1a1b0:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a1b4:	push	{fp, lr}
   1a1b8:	mov	fp, sp
   1a1bc:	bl	1a330 <argp_parse@@Base+0x1fb8>
   1a1c0:	cmp	r0, #0
   1a1c4:	popne	{fp, pc}
   1a1c8:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a1cc:	push	{fp, lr}
   1a1d0:	mov	fp, sp
   1a1d4:	mov	r1, #1
   1a1d8:	bl	1a330 <argp_parse@@Base+0x1fb8>
   1a1dc:	cmp	r0, #0
   1a1e0:	popne	{fp, pc}
   1a1e4:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a1e8:	push	{fp, lr}
   1a1ec:	mov	fp, sp
   1a1f0:	bl	1a330 <argp_parse@@Base+0x1fb8>
   1a1f4:	cmp	r0, #0
   1a1f8:	popne	{fp, pc}
   1a1fc:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a200:	push	{r4, r5, r6, sl, fp, lr}
   1a204:	add	fp, sp, #16
   1a208:	mov	r5, r0
   1a20c:	mov	r0, r1
   1a210:	mov	r4, r1
   1a214:	bl	1a384 <argp_parse@@Base+0x200c>
   1a218:	cmp	r0, #0
   1a21c:	beq	1a238 <argp_parse@@Base+0x1ec0>
   1a220:	mov	r1, r5
   1a224:	mov	r2, r4
   1a228:	mov	r6, r0
   1a22c:	bl	113d4 <memcpy@plt>
   1a230:	mov	r0, r6
   1a234:	pop	{r4, r5, r6, sl, fp, pc}
   1a238:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a23c:	push	{r4, r5, r6, sl, fp, lr}
   1a240:	add	fp, sp, #16
   1a244:	mov	r5, r0
   1a248:	mov	r0, r1
   1a24c:	mov	r4, r1
   1a250:	bl	1a384 <argp_parse@@Base+0x200c>
   1a254:	cmp	r0, #0
   1a258:	beq	1a274 <argp_parse@@Base+0x1efc>
   1a25c:	mov	r1, r5
   1a260:	mov	r2, r4
   1a264:	mov	r6, r0
   1a268:	bl	113d4 <memcpy@plt>
   1a26c:	mov	r0, r6
   1a270:	pop	{r4, r5, r6, sl, fp, pc}
   1a274:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a278:	push	{r4, r5, r6, sl, fp, lr}
   1a27c:	add	fp, sp, #16
   1a280:	mov	r5, r0
   1a284:	add	r0, r1, #1
   1a288:	mov	r4, r1
   1a28c:	bl	1a384 <argp_parse@@Base+0x200c>
   1a290:	cmp	r0, #0
   1a294:	beq	1a2bc <argp_parse@@Base+0x1f44>
   1a298:	mov	r6, r0
   1a29c:	mov	r0, #0
   1a2a0:	mov	r1, r5
   1a2a4:	mov	r2, r4
   1a2a8:	strb	r0, [r6, r4]
   1a2ac:	mov	r0, r6
   1a2b0:	bl	113d4 <memcpy@plt>
   1a2b4:	mov	r0, r6
   1a2b8:	pop	{r4, r5, r6, sl, fp, pc}
   1a2bc:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a2c0:	push	{r4, r5, r6, sl, fp, lr}
   1a2c4:	add	fp, sp, #16
   1a2c8:	mov	r4, r0
   1a2cc:	bl	11518 <strlen@plt>
   1a2d0:	add	r5, r0, #1
   1a2d4:	mov	r0, r5
   1a2d8:	bl	1a384 <argp_parse@@Base+0x200c>
   1a2dc:	cmp	r0, #0
   1a2e0:	beq	1a2fc <argp_parse@@Base+0x1f84>
   1a2e4:	mov	r1, r4
   1a2e8:	mov	r2, r5
   1a2ec:	mov	r6, r0
   1a2f0:	bl	113d4 <memcpy@plt>
   1a2f4:	mov	r0, r6
   1a2f8:	pop	{r4, r5, r6, sl, fp, pc}
   1a2fc:	bl	1a300 <argp_parse@@Base+0x1f88>
   1a300:	push	{fp, lr}
   1a304:	mov	fp, sp
   1a308:	movw	r0, #58892	; 0xe60c
   1a30c:	movw	r2, #51183	; 0xc7ef
   1a310:	movw	r3, #54193	; 0xd3b1
   1a314:	mov	r1, #0
   1a318:	movt	r0, #2
   1a31c:	movt	r2, #1
   1a320:	movt	r3, #1
   1a324:	ldr	r0, [r0]
   1a328:	bl	11488 <error@plt>
   1a32c:	bl	11668 <abort@plt>
   1a330:	clz	r2, r1
   1a334:	clz	r3, r0
   1a338:	lsr	r2, r2, #5
   1a33c:	lsr	r3, r3, #5
   1a340:	orrs	r2, r3, r2
   1a344:	movwne	r1, #1
   1a348:	movwne	r0, #1
   1a34c:	cmp	r1, #0
   1a350:	beq	1a380 <argp_parse@@Base+0x2008>
   1a354:	mvn	r2, #-2147483648	; 0x80000000
   1a358:	udiv	r2, r2, r1
   1a35c:	cmp	r2, r0
   1a360:	bcs	1a380 <argp_parse@@Base+0x2008>
   1a364:	push	{fp, lr}
   1a368:	mov	fp, sp
   1a36c:	bl	1153c <__errno_location@plt>
   1a370:	mov	r1, #12
   1a374:	str	r1, [r0]
   1a378:	mov	r0, #0
   1a37c:	pop	{fp, pc}
   1a380:	b	1132c <calloc@plt>
   1a384:	cmp	r0, #0
   1a388:	movweq	r0, #1
   1a38c:	cmn	r0, #1
   1a390:	ble	1a398 <argp_parse@@Base+0x2020>
   1a394:	b	114ac <malloc@plt>
   1a398:	push	{fp, lr}
   1a39c:	mov	fp, sp
   1a3a0:	bl	1153c <__errno_location@plt>
   1a3a4:	mov	r1, #12
   1a3a8:	str	r1, [r0]
   1a3ac:	mov	r0, #0
   1a3b0:	pop	{fp, pc}
   1a3b4:	push	{fp, lr}
   1a3b8:	mov	fp, sp
   1a3bc:	cmp	r0, #0
   1a3c0:	beq	1a3dc <argp_parse@@Base+0x2064>
   1a3c4:	cmp	r1, #0
   1a3c8:	beq	1a3e8 <argp_parse@@Base+0x2070>
   1a3cc:	cmn	r1, #1
   1a3d0:	ble	1a3f4 <argp_parse@@Base+0x207c>
   1a3d4:	pop	{fp, lr}
   1a3d8:	b	1144c <realloc@plt>
   1a3dc:	mov	r0, r1
   1a3e0:	pop	{fp, lr}
   1a3e4:	b	1a384 <argp_parse@@Base+0x200c>
   1a3e8:	bl	19648 <argp_parse@@Base+0x12d0>
   1a3ec:	mov	r0, #0
   1a3f0:	pop	{fp, pc}
   1a3f4:	bl	1153c <__errno_location@plt>
   1a3f8:	mov	r1, #12
   1a3fc:	str	r1, [r0]
   1a400:	mov	r0, #0
   1a404:	pop	{fp, pc}
   1a408:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a40c:	add	fp, sp, #24
   1a410:	mov	r5, r0
   1a414:	mov	r0, #36	; 0x24
   1a418:	mov	r8, r3
   1a41c:	mov	r6, r2
   1a420:	mov	r7, r1
   1a424:	bl	1a384 <argp_parse@@Base+0x200c>
   1a428:	mov	r4, r0
   1a42c:	cmp	r0, #0
   1a430:	beq	1a46c <argp_parse@@Base+0x20f4>
   1a434:	mov	r0, #0
   1a438:	stm	r4, {r5, r7}
   1a43c:	str	r6, [r4, #8]
   1a440:	str	r8, [r4, #12]
   1a444:	str	r0, [r4, #16]
   1a448:	str	r0, [r4, #20]
   1a44c:	mov	r0, #200	; 0xc8
   1a450:	bl	1a384 <argp_parse@@Base+0x200c>
   1a454:	cmp	r0, #0
   1a458:	str	r0, [r4, #24]
   1a45c:	beq	1a474 <argp_parse@@Base+0x20fc>
   1a460:	add	r1, r0, #200	; 0xc8
   1a464:	str	r0, [r4, #28]
   1a468:	str	r1, [r4, #32]
   1a46c:	mov	r0, r4
   1a470:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a474:	mov	r0, r4
   1a478:	bl	19648 <argp_parse@@Base+0x12d0>
   1a47c:	mov	r4, #0
   1a480:	mov	r0, r4
   1a484:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a488:	push	{r4, sl, fp, lr}
   1a48c:	add	fp, sp, #8
   1a490:	mov	r4, r0
   1a494:	bl	1a4cc <argp_parse@@Base+0x2154>
   1a498:	ldr	r0, [r4, #24]
   1a49c:	ldr	r1, [r4, #28]
   1a4a0:	cmp	r1, r0
   1a4a4:	bls	1a4bc <argp_parse@@Base+0x2144>
   1a4a8:	ldr	r3, [r4]
   1a4ac:	sub	r2, r1, r0
   1a4b0:	mov	r1, #1
   1a4b4:	bl	113ec <fwrite_unlocked@plt>
   1a4b8:	ldr	r0, [r4, #24]
   1a4bc:	bl	19648 <argp_parse@@Base+0x12d0>
   1a4c0:	mov	r0, r4
   1a4c4:	pop	{r4, sl, fp, lr}
   1a4c8:	b	19648 <argp_parse@@Base+0x12d0>
   1a4cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4d0:	add	fp, sp, #28
   1a4d4:	sub	sp, sp, #12
   1a4d8:	mov	r8, r0
   1a4dc:	ldr	r0, [r0, #16]
   1a4e0:	ldr	r1, [r8, #24]
   1a4e4:	ldr	ip, [r8, #28]
   1a4e8:	add	sl, r1, r0
   1a4ec:	cmp	sl, ip
   1a4f0:	bcs	1aa18 <argp_parse@@Base+0x26a0>
   1a4f4:	ldr	r6, [r8, #20]
   1a4f8:	mov	r3, #32
   1a4fc:	cmp	r6, #0
   1a500:	beq	1a50c <argp_parse@@Base+0x2194>
   1a504:	mov	r9, sl
   1a508:	b	1a5ac <argp_parse@@Base+0x2234>
   1a50c:	ldr	r6, [r8, #4]
   1a510:	cmp	r6, #0
   1a514:	beq	1a6ec <argp_parse@@Base+0x2374>
   1a518:	ldr	r1, [r8, #32]
   1a51c:	add	r0, ip, r6
   1a520:	mov	r5, r6
   1a524:	cmp	r0, r1
   1a528:	bcs	1a560 <argp_parse@@Base+0x21e8>
   1a52c:	add	r9, sl, r6
   1a530:	sub	r2, ip, sl
   1a534:	mov	r1, sl
   1a538:	mov	r0, r9
   1a53c:	bl	11398 <memmove@plt>
   1a540:	ldr	r0, [r8, #28]
   1a544:	mov	r1, #32
   1a548:	mov	r2, r6
   1a54c:	add	r0, r0, r6
   1a550:	str	r0, [r8, #28]
   1a554:	mov	r0, sl
   1a558:	bl	1156c <memset@plt>
   1a55c:	b	1a5a4 <argp_parse@@Base+0x222c>
   1a560:	ldr	r0, [r8]
   1a564:	ldr	r1, [r0, #20]
   1a568:	ldr	r2, [r0, #24]
   1a56c:	cmp	r1, r2
   1a570:	bcs	1a58c <argp_parse@@Base+0x2214>
   1a574:	add	r2, r1, #1
   1a578:	str	r2, [r0, #20]
   1a57c:	strb	r3, [r1]
   1a580:	subs	r5, r5, #1
   1a584:	bne	1a560 <argp_parse@@Base+0x21e8>
   1a588:	b	1a5a0 <argp_parse@@Base+0x2228>
   1a58c:	mov	r1, #32
   1a590:	bl	115a8 <__overflow@plt>
   1a594:	mov	r3, #32
   1a598:	subs	r5, r5, #1
   1a59c:	bne	1a560 <argp_parse@@Base+0x21e8>
   1a5a0:	mov	r9, sl
   1a5a4:	str	r6, [r8, #20]
   1a5a8:	ldr	ip, [r8, #28]
   1a5ac:	sub	r4, ip, r9
   1a5b0:	mov	r0, r9
   1a5b4:	mov	r1, #10
   1a5b8:	str	ip, [sp, #8]
   1a5bc:	mov	r2, r4
   1a5c0:	bl	11590 <memchr@plt>
   1a5c4:	cmn	r6, #1
   1a5c8:	mov	r7, r0
   1a5cc:	movle	r6, #0
   1a5d0:	strle	r6, [r8, #20]
   1a5d4:	cmp	r7, #0
   1a5d8:	beq	1a610 <argp_parse@@Base+0x2298>
   1a5dc:	ldr	r5, [r8, #8]
   1a5e0:	ldr	ip, [sp, #8]
   1a5e4:	sub	r0, r7, r9
   1a5e8:	mov	r3, #32
   1a5ec:	add	r0, r0, r6
   1a5f0:	cmp	r0, r5
   1a5f4:	bge	1a62c <argp_parse@@Base+0x22b4>
   1a5f8:	mov	r6, #0
   1a5fc:	add	sl, r7, #1
   1a600:	str	r6, [r8, #20]
   1a604:	cmp	sl, ip
   1a608:	bcc	1a4fc <argp_parse@@Base+0x2184>
   1a60c:	b	1aa18 <argp_parse@@Base+0x26a0>
   1a610:	ldr	ip, [sp, #8]
   1a614:	ldr	r5, [r8, #8]
   1a618:	add	r0, r6, r4
   1a61c:	mov	r3, #32
   1a620:	cmp	r0, r5
   1a624:	mov	r7, ip
   1a628:	bcc	1a9f8 <argp_parse@@Base+0x2680>
   1a62c:	ldr	r0, [r8, #12]
   1a630:	str	r4, [sp, #4]
   1a634:	cmn	r0, #1
   1a638:	ble	1a68c <argp_parse@@Base+0x2314>
   1a63c:	sub	sl, r5, r6
   1a640:	mov	r4, r0
   1a644:	mov	r1, #0
   1a648:	add	r6, r9, sl
   1a64c:	cmp	sl, #0
   1a650:	blt	1a6e4 <argp_parse@@Base+0x236c>
   1a654:	bl	114e8 <__ctype_b_loc@plt>
   1a658:	ldr	r1, [r0]
   1a65c:	mov	r0, r6
   1a660:	ldrb	r2, [r0]
   1a664:	ldrb	r2, [r1, r2, lsl #1]
   1a668:	tst	r2, #1
   1a66c:	bne	1a6f4 <argp_parse@@Base+0x237c>
   1a670:	sub	r0, r0, #1
   1a674:	cmp	r0, r9
   1a678:	bcs	1a660 <argp_parse@@Base+0x22e8>
   1a67c:	ldr	ip, [sp, #8]
   1a680:	mov	r3, #32
   1a684:	mov	r1, #0
   1a688:	b	1a700 <argp_parse@@Base+0x2388>
   1a68c:	sub	sl, r5, #1
   1a690:	cmp	r7, ip
   1a694:	bcs	1aa00 <argp_parse@@Base+0x2688>
   1a698:	sub	r0, sl, r6
   1a69c:	sub	r2, ip, r7
   1a6a0:	mov	r1, r7
   1a6a4:	add	r0, r9, r0
   1a6a8:	bl	11398 <memmove@plt>
   1a6ac:	ldr	r0, [r8, #20]
   1a6b0:	ldr	r1, [r8, #28]
   1a6b4:	mov	r6, #0
   1a6b8:	mov	r3, #32
   1a6bc:	str	r6, [r8, #20]
   1a6c0:	sub	r0, sl, r0
   1a6c4:	add	sl, r9, r5
   1a6c8:	add	r0, r9, r0
   1a6cc:	sub	r0, r7, r0
   1a6d0:	add	ip, r1, r0
   1a6d4:	str	ip, [r8, #28]
   1a6d8:	cmp	sl, ip
   1a6dc:	bcc	1a4fc <argp_parse@@Base+0x2184>
   1a6e0:	b	1aa18 <argp_parse@@Base+0x26a0>
   1a6e4:	mov	r0, r6
   1a6e8:	b	1a700 <argp_parse@@Base+0x2388>
   1a6ec:	mov	r6, #0
   1a6f0:	b	1a504 <argp_parse@@Base+0x218c>
   1a6f4:	ldr	ip, [sp, #8]
   1a6f8:	mov	r1, #1
   1a6fc:	mov	r3, #32
   1a700:	add	r5, r0, #1
   1a704:	cmp	r5, r9
   1a708:	bls	1a754 <argp_parse@@Base+0x23dc>
   1a70c:	cmp	r1, #0
   1a710:	beq	1a7bc <argp_parse@@Base+0x2444>
   1a714:	sub	r1, r0, #1
   1a718:	mov	r7, r4
   1a71c:	mov	r6, r1
   1a720:	cmp	r1, r9
   1a724:	bcc	1a744 <argp_parse@@Base+0x23cc>
   1a728:	bl	114e8 <__ctype_b_loc@plt>
   1a72c:	mov	r1, r6
   1a730:	ldr	r0, [r0]
   1a734:	ldrb	r2, [r1], #-1
   1a738:	ldrb	r0, [r0, r2, lsl #1]
   1a73c:	tst	r0, #1
   1a740:	bne	1a71c <argp_parse@@Base+0x23a4>
   1a744:	ldr	ip, [sp, #8]
   1a748:	add	r6, r6, #1
   1a74c:	mov	r3, #32
   1a750:	b	1a7c4 <argp_parse@@Base+0x244c>
   1a754:	cmp	r6, r7
   1a758:	bcs	1a78c <argp_parse@@Base+0x2414>
   1a75c:	add	r0, r9, sl
   1a760:	add	r1, r0, #1
   1a764:	mov	r6, r1
   1a768:	cmp	r1, r7
   1a76c:	bcs	1a78c <argp_parse@@Base+0x2414>
   1a770:	bl	114e8 <__ctype_b_loc@plt>
   1a774:	mov	r1, r6
   1a778:	ldr	r0, [r0]
   1a77c:	ldrb	r2, [r1], #1
   1a780:	ldrb	r0, [r0, r2, lsl #1]
   1a784:	tst	r0, #1
   1a788:	beq	1a764 <argp_parse@@Base+0x23ec>
   1a78c:	cmp	r6, r7
   1a790:	beq	1a8b0 <argp_parse@@Base+0x2538>
   1a794:	bl	114e8 <__ctype_b_loc@plt>
   1a798:	ldr	r0, [r0]
   1a79c:	mov	r5, r6
   1a7a0:	ldrb	r1, [r5, #1]!
   1a7a4:	ldrb	r1, [r0, r1, lsl #1]
   1a7a8:	tst	r1, #1
   1a7ac:	bne	1a7a0 <argp_parse@@Base+0x2428>
   1a7b0:	ldr	ip, [sp, #8]
   1a7b4:	mov	r3, #32
   1a7b8:	b	1a7c0 <argp_parse@@Base+0x2448>
   1a7bc:	mov	r6, r5
   1a7c0:	mov	r7, r4
   1a7c4:	add	r0, ip, #1
   1a7c8:	cmp	r5, r0
   1a7cc:	beq	1a7f0 <argp_parse@@Base+0x2478>
   1a7d0:	add	sl, r6, #1
   1a7d4:	cmp	ip, r5
   1a7d8:	bls	1a8d4 <argp_parse@@Base+0x255c>
   1a7dc:	sub	r0, r5, sl
   1a7e0:	cmp	r0, r7
   1a7e4:	bge	1a8d4 <argp_parse@@Base+0x255c>
   1a7e8:	ldr	r0, [r8, #32]
   1a7ec:	b	1a808 <argp_parse@@Base+0x2490>
   1a7f0:	cmp	ip, r5
   1a7f4:	bls	1a8d0 <argp_parse@@Base+0x2558>
   1a7f8:	ldr	r0, [r8, #32]
   1a7fc:	sub	r1, r0, r6
   1a800:	cmp	r1, r7
   1a804:	bgt	1a8d0 <argp_parse@@Base+0x2558>
   1a808:	sub	r0, r0, ip
   1a80c:	add	r1, r7, #1
   1a810:	cmp	r0, r1
   1a814:	ble	1a854 <argp_parse@@Base+0x24dc>
   1a818:	sub	r4, ip, r5
   1a81c:	add	sl, r6, #1
   1a820:	mov	r1, r5
   1a824:	add	r0, sl, r7
   1a828:	mov	r2, r4
   1a82c:	bl	11398 <memmove@plt>
   1a830:	ldr	r0, [r8, #12]
   1a834:	mov	r1, #10
   1a838:	mov	r3, #32
   1a83c:	strb	r1, [r6]
   1a840:	add	r5, sl, r0
   1a844:	add	r0, r5, r4
   1a848:	sub	r0, r0, r9
   1a84c:	str	r0, [sp, #4]
   1a850:	b	1a8dc <argp_parse@@Base+0x2564>
   1a854:	ldr	r0, [r8, #24]
   1a858:	cmp	r6, r0
   1a85c:	bls	1a878 <argp_parse@@Base+0x2500>
   1a860:	ldr	r3, [r8]
   1a864:	sub	r2, r6, r0
   1a868:	mov	r1, #1
   1a86c:	bl	113ec <fwrite_unlocked@plt>
   1a870:	ldr	ip, [sp, #8]
   1a874:	mov	r3, #32
   1a878:	ldr	r0, [r8]
   1a87c:	ldr	r1, [r0, #20]
   1a880:	ldr	r2, [r0, #24]
   1a884:	cmp	r1, r2
   1a888:	bcs	1a9e4 <argp_parse@@Base+0x266c>
   1a88c:	add	r2, r1, #1
   1a890:	str	r2, [r0, #20]
   1a894:	mov	r0, #10
   1a898:	strb	r0, [r1]
   1a89c:	ldr	sl, [r8, #24]
   1a8a0:	sub	r0, ip, sl
   1a8a4:	mov	r9, sl
   1a8a8:	str	r0, [sp, #4]
   1a8ac:	b	1a8dc <argp_parse@@Base+0x2564>
   1a8b0:	ldr	ip, [sp, #8]
   1a8b4:	mov	r6, #0
   1a8b8:	add	sl, r7, #1
   1a8bc:	mov	r3, #32
   1a8c0:	str	r6, [r8, #20]
   1a8c4:	cmp	sl, ip
   1a8c8:	bcc	1a4fc <argp_parse@@Base+0x2184>
   1a8cc:	b	1aa18 <argp_parse@@Base+0x26a0>
   1a8d0:	add	sl, r6, #1
   1a8d4:	mov	r0, #10
   1a8d8:	strb	r0, [r6]
   1a8dc:	ldr	r6, [r8, #12]
   1a8e0:	sub	r0, r5, sl
   1a8e4:	cmp	r0, r6
   1a8e8:	bge	1a920 <argp_parse@@Base+0x25a8>
   1a8ec:	ldr	r0, [sp, #4]
   1a8f0:	add	r0, r9, r0
   1a8f4:	add	r0, r0, #1
   1a8f8:	cmp	r5, r0
   1a8fc:	bne	1a910 <argp_parse@@Base+0x2598>
   1a900:	ldr	r0, [r8, #32]
   1a904:	sub	r0, r0, r5
   1a908:	cmp	r0, r6
   1a90c:	bge	1a920 <argp_parse@@Base+0x25a8>
   1a910:	cmp	r6, #1
   1a914:	blt	1a990 <argp_parse@@Base+0x2618>
   1a918:	mov	r7, #0
   1a91c:	b	1a960 <argp_parse@@Base+0x25e8>
   1a920:	cmp	r6, #1
   1a924:	blt	1a990 <argp_parse@@Base+0x2618>
   1a928:	mov	r0, #0
   1a92c:	strb	r3, [sl, r0]
   1a930:	add	r0, r0, #1
   1a934:	ldr	r6, [r8, #12]
   1a938:	cmp	r0, r6
   1a93c:	blt	1a92c <argp_parse@@Base+0x25b4>
   1a940:	add	sl, sl, r0
   1a944:	cmp	sl, r5
   1a948:	bcc	1a998 <argp_parse@@Base+0x2620>
   1a94c:	b	1a9b8 <argp_parse@@Base+0x2640>
   1a950:	mov	r1, #32
   1a954:	bl	115a8 <__overflow@plt>
   1a958:	mov	r3, #32
   1a95c:	b	1a980 <argp_parse@@Base+0x2608>
   1a960:	ldr	r0, [r8]
   1a964:	ldr	r1, [r0, #20]
   1a968:	ldr	r2, [r0, #24]
   1a96c:	cmp	r1, r2
   1a970:	bcs	1a950 <argp_parse@@Base+0x25d8>
   1a974:	add	r2, r1, #1
   1a978:	str	r2, [r0, #20]
   1a97c:	strb	r3, [r1]
   1a980:	ldr	r6, [r8, #12]
   1a984:	add	r7, r7, #1
   1a988:	cmp	r7, r6
   1a98c:	blt	1a960 <argp_parse@@Base+0x25e8>
   1a990:	cmp	sl, r5
   1a994:	bcs	1a9b8 <argp_parse@@Base+0x2640>
   1a998:	ldr	r0, [sp, #4]
   1a99c:	mov	r1, r5
   1a9a0:	add	r0, r9, r0
   1a9a4:	sub	r2, r0, r5
   1a9a8:	mov	r0, sl
   1a9ac:	bl	11398 <memmove@plt>
   1a9b0:	ldr	r6, [r8, #12]
   1a9b4:	mov	r3, #32
   1a9b8:	ldr	r0, [sp, #4]
   1a9bc:	cmp	r6, #0
   1a9c0:	mvneq	r6, #0
   1a9c4:	str	r6, [r8, #20]
   1a9c8:	sub	r0, r0, r5
   1a9cc:	add	r0, r0, r9
   1a9d0:	add	ip, sl, r0
   1a9d4:	str	ip, [r8, #28]
   1a9d8:	cmp	sl, ip
   1a9dc:	bcc	1a4fc <argp_parse@@Base+0x2184>
   1a9e0:	b	1aa18 <argp_parse@@Base+0x26a0>
   1a9e4:	mov	r1, #10
   1a9e8:	bl	115a8 <__overflow@plt>
   1a9ec:	ldr	ip, [sp, #8]
   1a9f0:	mov	r3, #32
   1a9f4:	b	1a89c <argp_parse@@Base+0x2524>
   1a9f8:	str	r0, [r8, #20]
   1a9fc:	b	1aa18 <argp_parse@@Base+0x26a0>
   1aa00:	ldr	r0, [sp, #4]
   1aa04:	add	r0, r6, r0
   1aa08:	str	r0, [r8, #20]
   1aa0c:	sub	r0, sl, r0
   1aa10:	add	ip, ip, r0
   1aa14:	str	ip, [r8, #28]
   1aa18:	ldr	r0, [r8, #24]
   1aa1c:	sub	r0, ip, r0
   1aa20:	str	r0, [r8, #16]
   1aa24:	sub	sp, fp, #28
   1aa28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa2c:	push	{r4, r5, r6, sl, fp, lr}
   1aa30:	add	fp, sp, #16
   1aa34:	mov	r4, r0
   1aa38:	mov	r6, r1
   1aa3c:	ldr	r0, [r0, #28]
   1aa40:	mov	r5, #1
   1aa44:	ldr	r1, [r4, #32]
   1aa48:	sub	r0, r1, r0
   1aa4c:	cmp	r0, r6
   1aa50:	bcs	1ab10 <argp_parse@@Base+0x2798>
   1aa54:	mov	r0, r4
   1aa58:	bl	1a4cc <argp_parse@@Base+0x2154>
   1aa5c:	ldr	r0, [r4, #24]
   1aa60:	ldr	r1, [r4, #28]
   1aa64:	ldr	r3, [r4]
   1aa68:	mov	r5, #1
   1aa6c:	sub	r2, r1, r0
   1aa70:	mov	r1, #1
   1aa74:	bl	113ec <fwrite_unlocked@plt>
   1aa78:	mov	r1, r0
   1aa7c:	ldr	r0, [r4, #24]
   1aa80:	ldr	r2, [r4, #28]
   1aa84:	sub	r3, r2, r0
   1aa88:	cmp	r1, r3
   1aa8c:	bne	1aadc <argp_parse@@Base+0x2764>
   1aa90:	mov	r1, #0
   1aa94:	str	r1, [r4, #16]
   1aa98:	str	r0, [r4, #28]
   1aa9c:	ldr	r1, [r4, #32]
   1aaa0:	sub	r1, r1, r0
   1aaa4:	cmp	r1, r6
   1aaa8:	bcs	1ab10 <argp_parse@@Base+0x2798>
   1aaac:	adds	r6, r1, r6
   1aab0:	bcs	1ab00 <argp_parse@@Base+0x2788>
   1aab4:	mov	r1, r6
   1aab8:	bl	1a3b4 <argp_parse@@Base+0x203c>
   1aabc:	cmp	r0, #0
   1aac0:	beq	1ab00 <argp_parse@@Base+0x2788>
   1aac4:	str	r0, [r4, #24]
   1aac8:	add	r1, r0, r6
   1aacc:	str	r0, [r4, #28]
   1aad0:	mov	r0, r5
   1aad4:	str	r1, [r4, #32]
   1aad8:	pop	{r4, r5, r6, sl, fp, pc}
   1aadc:	sub	r2, r2, r1
   1aae0:	str	r2, [r4, #28]
   1aae4:	sub	r2, r2, r0
   1aae8:	ldr	r3, [r4, #16]
   1aaec:	sub	r3, r3, r1
   1aaf0:	add	r1, r0, r1
   1aaf4:	str	r3, [r4, #16]
   1aaf8:	bl	11398 <memmove@plt>
   1aafc:	b	1ab0c <argp_parse@@Base+0x2794>
   1ab00:	bl	1153c <__errno_location@plt>
   1ab04:	mov	r1, #12
   1ab08:	str	r1, [r0]
   1ab0c:	mov	r5, #0
   1ab10:	mov	r0, r5
   1ab14:	pop	{r4, r5, r6, sl, fp, pc}
   1ab18:	sub	sp, sp, #8
   1ab1c:	push	{r4, r5, r6, r7, fp, lr}
   1ab20:	add	fp, sp, #16
   1ab24:	sub	sp, sp, #8
   1ab28:	mov	r5, r1
   1ab2c:	mov	r4, r0
   1ab30:	mov	r1, #150	; 0x96
   1ab34:	add	r6, fp, #8
   1ab38:	str	r3, [fp, #12]
   1ab3c:	str	r2, [fp, #8]
   1ab40:	mov	r0, r4
   1ab44:	bl	1aa2c <argp_parse@@Base+0x26b4>
   1ab48:	cmp	r0, #0
   1ab4c:	beq	1ab8c <argp_parse@@Base+0x2814>
   1ab50:	str	r6, [sp, #4]
   1ab54:	mov	r2, r5
   1ab58:	mov	r3, r6
   1ab5c:	ldr	r0, [r4, #28]
   1ab60:	ldr	r1, [r4, #32]
   1ab64:	sub	r7, r1, r0
   1ab68:	mov	r1, r7
   1ab6c:	bl	11620 <vsnprintf@plt>
   1ab70:	add	r1, r0, #1
   1ab74:	cmp	r0, r7
   1ab78:	bcs	1ab40 <argp_parse@@Base+0x27c8>
   1ab7c:	ldr	r1, [r4, #28]
   1ab80:	add	r1, r1, r0
   1ab84:	str	r1, [r4, #28]
   1ab88:	b	1ab90 <argp_parse@@Base+0x2818>
   1ab8c:	mvn	r0, #0
   1ab90:	sub	sp, fp, #16
   1ab94:	pop	{r4, r5, r6, r7, fp, lr}
   1ab98:	add	sp, sp, #8
   1ab9c:	bx	lr
   1aba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aba4:	add	fp, sp, #28
   1aba8:	sub	sp, sp, #68	; 0x44
   1abac:	mvn	r6, #0
   1abb0:	cmp	r0, #1
   1abb4:	blt	1b2dc <argp_parse@@Base+0x2f64>
   1abb8:	mov	r7, r2
   1abbc:	ldr	r2, [fp, #16]
   1abc0:	mov	r5, r3
   1abc4:	mov	r3, r0
   1abc8:	mov	sl, r1
   1abcc:	mov	r0, #0
   1abd0:	ldr	r9, [r2]
   1abd4:	ldr	r6, [r2, #4]
   1abd8:	str	r0, [r2, #12]
   1abdc:	cmp	r9, #0
   1abe0:	beq	1ac04 <argp_parse@@Base+0x288c>
   1abe4:	ldr	r0, [r2, #16]
   1abe8:	cmp	r0, #0
   1abec:	beq	1ac0c <argp_parse@@Base+0x2894>
   1abf0:	ldrb	r0, [r7]
   1abf4:	cmp	r0, #45	; 0x2d
   1abf8:	cmpne	r0, #43	; 0x2b
   1abfc:	addeq	r7, r7, #1
   1ac00:	b	1ac80 <argp_parse@@Base+0x2908>
   1ac04:	mov	r9, #1
   1ac08:	str	r9, [r2]
   1ac0c:	mov	r0, #0
   1ac10:	str	r9, [r2, #28]
   1ac14:	str	r9, [r2, #32]
   1ac18:	str	r0, [r2, #20]
   1ac1c:	ldrb	r1, [r7]
   1ac20:	cmp	r1, #43	; 0x2b
   1ac24:	beq	1ac34 <argp_parse@@Base+0x28bc>
   1ac28:	cmp	r1, #45	; 0x2d
   1ac2c:	bne	1ac40 <argp_parse@@Base+0x28c8>
   1ac30:	mov	r0, #2
   1ac34:	str	r0, [r2, #24]
   1ac38:	add	r7, r7, #1
   1ac3c:	b	1ac78 <argp_parse@@Base+0x2900>
   1ac40:	ldr	r0, [fp, #20]
   1ac44:	cmp	r0, #0
   1ac48:	bne	1ac70 <argp_parse@@Base+0x28f8>
   1ac4c:	movw	r0, #54283	; 0xd40b
   1ac50:	mov	r8, r2
   1ac54:	mov	r4, r3
   1ac58:	movt	r0, #1
   1ac5c:	bl	11494 <getenv@plt>
   1ac60:	mov	r3, r4
   1ac64:	mov	r2, r8
   1ac68:	cmp	r0, #0
   1ac6c:	beq	1b2e8 <argp_parse@@Base+0x2f70>
   1ac70:	mov	r0, #0
   1ac74:	str	r0, [r2, #24]
   1ac78:	mov	r0, #1
   1ac7c:	str	r0, [r2, #16]
   1ac80:	ldrb	r0, [r7]
   1ac84:	ldr	r4, [r2, #20]
   1ac88:	str	r5, [sp, #48]	; 0x30
   1ac8c:	subs	r0, r0, #58	; 0x3a
   1ac90:	movne	r0, r6
   1ac94:	cmp	r4, #0
   1ac98:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac9c:	ldrbne	r0, [r4]
   1aca0:	cmpne	r0, #0
   1aca4:	bne	1ad04 <argp_parse@@Base+0x298c>
   1aca8:	mov	r4, r2
   1acac:	mov	r6, r2
   1acb0:	str	r7, [sp, #32]
   1acb4:	ldr	r1, [r4, #32]!
   1acb8:	cmp	r1, r9
   1acbc:	mov	r8, r1
   1acc0:	strgt	r9, [r4]
   1acc4:	movgt	r8, r9
   1acc8:	ldr	r5, [r6, #28]!
   1accc:	cmp	r5, r9
   1acd0:	strgt	r9, [r6]
   1acd4:	movgt	r5, r9
   1acd8:	ldr	r7, [r2, #24]
   1acdc:	cmp	r7, #1
   1ace0:	bne	1aff8 <argp_parse@@Base+0x2c80>
   1ace4:	cmp	r5, r8
   1ace8:	cmpne	r8, r9
   1acec:	bne	1adbc <argp_parse@@Base+0x2a44>
   1acf0:	cmp	r8, r9
   1acf4:	mov	r1, r6
   1acf8:	mov	r0, r9
   1acfc:	bne	1afb0 <argp_parse@@Base+0x2c38>
   1ad00:	b	1afb8 <argp_parse@@Base+0x2c40>
   1ad04:	str	r3, [fp, #-40]	; 0xffffffd8
   1ad08:	add	r8, r4, #1
   1ad0c:	mov	r0, r7
   1ad10:	mov	r5, r2
   1ad14:	str	r8, [r2, #20]
   1ad18:	ldrb	r6, [r4]
   1ad1c:	mov	r1, r6
   1ad20:	bl	11524 <strchr@plt>
   1ad24:	ldrb	r1, [r4, #1]
   1ad28:	mov	r3, r5
   1ad2c:	cmp	r1, #0
   1ad30:	orr	r1, r6, #1
   1ad34:	addeq	r9, r9, #1
   1ad38:	streq	r9, [r5]
   1ad3c:	cmp	r1, #59	; 0x3b
   1ad40:	cmpne	r0, #0
   1ad44:	bne	1ad60 <argp_parse@@Base+0x29e8>
   1ad48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad4c:	cmp	r0, #0
   1ad50:	bne	1b3a8 <argp_parse@@Base+0x3030>
   1ad54:	str	r6, [r3, #8]
   1ad58:	mov	r6, #63	; 0x3f
   1ad5c:	b	1b2dc <argp_parse@@Base+0x2f64>
   1ad60:	ldrb	r2, [r0]
   1ad64:	ldrb	r1, [r0, #1]
   1ad68:	cmp	r2, #87	; 0x57
   1ad6c:	bne	1b0d8 <argp_parse@@Base+0x2d60>
   1ad70:	ldr	r2, [sp, #48]	; 0x30
   1ad74:	cmp	r2, #0
   1ad78:	beq	1b0d8 <argp_parse@@Base+0x2d60>
   1ad7c:	cmp	r1, #59	; 0x3b
   1ad80:	bne	1b0d8 <argp_parse@@Base+0x2d60>
   1ad84:	ldrb	r0, [r8]
   1ad88:	cmp	r0, #0
   1ad8c:	bne	1b3d8 <argp_parse@@Base+0x3060>
   1ad90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad94:	cmp	r9, r0
   1ad98:	bne	1b3d4 <argp_parse@@Base+0x305c>
   1ad9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ada0:	cmp	r0, #0
   1ada4:	bne	1b460 <argp_parse@@Base+0x30e8>
   1ada8:	str	r6, [r3, #8]
   1adac:	ldrb	r6, [r7]
   1adb0:	cmp	r6, #58	; 0x3a
   1adb4:	movwne	r6, #63	; 0x3f
   1adb8:	b	1b2dc <argp_parse@@Base+0x2f64>
   1adbc:	cmp	r9, r8
   1adc0:	str	r7, [sp, #20]
   1adc4:	str	r6, [sp, #24]
   1adc8:	str	r5, [sp, #36]	; 0x24
   1adcc:	str	r4, [sp, #28]
   1add0:	str	r3, [fp, #-40]	; 0xffffffd8
   1add4:	ble	1af88 <argp_parse@@Base+0x2c10>
   1add8:	ldr	r0, [sp, #36]	; 0x24
   1addc:	cmp	r0, r8
   1ade0:	bge	1af88 <argp_parse@@Base+0x2c10>
   1ade4:	add	r0, sl, r8, lsl #2
   1ade8:	mvn	r1, r1
   1adec:	ldr	r2, [sp, #36]	; 0x24
   1adf0:	mov	r3, r9
   1adf4:	str	r0, [fp, #-32]	; 0xffffffe0
   1adf8:	mvn	r0, r9
   1adfc:	cmp	r0, r1
   1ae00:	movgt	r1, r0
   1ae04:	add	r0, r1, #1
   1ae08:	str	r1, [fp, #-36]	; 0xffffffdc
   1ae0c:	str	r0, [sp, #44]	; 0x2c
   1ae10:	add	r0, sl, #4
   1ae14:	str	r0, [sp, #40]	; 0x28
   1ae18:	sub	ip, r8, r2
   1ae1c:	sub	r7, r3, r8
   1ae20:	cmp	r7, ip
   1ae24:	ble	1aed4 <argp_parse@@Base+0x2b5c>
   1ae28:	sub	r4, r3, ip
   1ae2c:	cmp	ip, #1
   1ae30:	blt	1aecc <argp_parse@@Base+0x2b54>
   1ae34:	mov	r7, #0
   1ae38:	cmp	ip, #4
   1ae3c:	bcc	1ae94 <argp_parse@@Base+0x2b1c>
   1ae40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ae44:	ldr	r1, [sp, #40]	; 0x28
   1ae48:	add	lr, sl, r2, lsl #2
   1ae4c:	add	r0, r0, r3
   1ae50:	add	r0, r0, r2
   1ae54:	add	r0, r1, r0, lsl #2
   1ae58:	add	r1, sl, r3, lsl #2
   1ae5c:	cmp	lr, r1
   1ae60:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   1ae64:	cmpcc	r0, r1
   1ae68:	bcc	1ae94 <argp_parse@@Base+0x2b1c>
   1ae6c:	bic	r7, ip, #3
   1ae70:	mov	r1, r7
   1ae74:	vld1.32	{d16-d17}, [r0]
   1ae78:	vld1.32	{d18-d19}, [lr]
   1ae7c:	subs	r1, r1, #4
   1ae80:	vst1.32	{d16-d17}, [lr]!
   1ae84:	vst1.32	{d18-d19}, [r0]!
   1ae88:	bne	1ae74 <argp_parse@@Base+0x2afc>
   1ae8c:	cmp	ip, r7
   1ae90:	beq	1aecc <argp_parse@@Base+0x2b54>
   1ae94:	add	r0, sl, r3, lsl #2
   1ae98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ae9c:	add	r1, r7, r2
   1aea0:	add	r1, sl, r1, lsl #2
   1aea4:	add	r3, r3, r7
   1aea8:	add	r3, r3, r2
   1aeac:	add	r7, r0, r3, lsl #2
   1aeb0:	ldr	r5, [r1]
   1aeb4:	add	r3, r3, #1
   1aeb8:	ldr	r6, [r7, #4]
   1aebc:	cmn	r3, #1
   1aec0:	str	r6, [r1], #4
   1aec4:	str	r5, [r7, #4]
   1aec8:	bne	1aeac <argp_parse@@Base+0x2b34>
   1aecc:	mov	r3, r4
   1aed0:	b	1af7c <argp_parse@@Base+0x2c04>
   1aed4:	cmp	r7, #1
   1aed8:	blt	1af78 <argp_parse@@Base+0x2c00>
   1aedc:	mov	r4, #0
   1aee0:	cmp	r7, #3
   1aee4:	bls	1af44 <argp_parse@@Base+0x2bcc>
   1aee8:	add	r1, sl, r3, lsl #2
   1aeec:	add	r0, sl, r2, lsl #2
   1aef0:	cmp	r0, r1
   1aef4:	bcs	1af18 <argp_parse@@Base+0x2ba0>
   1aef8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aefc:	ldr	r6, [sp, #40]	; 0x28
   1af00:	add	r1, r1, r3
   1af04:	add	r1, r1, r2
   1af08:	add	r1, r6, r1, lsl #2
   1af0c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1af10:	cmp	r6, r1
   1af14:	bcc	1af44 <argp_parse@@Base+0x2bcc>
   1af18:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1af1c:	bic	r4, r7, #3
   1af20:	mov	r1, r4
   1af24:	vld1.32	{d16-d17}, [r6]
   1af28:	vld1.32	{d18-d19}, [r0]
   1af2c:	subs	r1, r1, #4
   1af30:	vst1.32	{d16-d17}, [r0]!
   1af34:	vst1.32	{d18-d19}, [r6]!
   1af38:	bne	1af24 <argp_parse@@Base+0x2bac>
   1af3c:	cmp	r7, r4
   1af40:	beq	1af78 <argp_parse@@Base+0x2c00>
   1af44:	ldr	r1, [sp, #44]	; 0x2c
   1af48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af4c:	add	r6, r4, r2
   1af50:	add	r1, r1, r3
   1af54:	add	r0, r0, r4, lsl #2
   1af58:	sub	r1, r1, r4
   1af5c:	add	r4, sl, r6, lsl #2
   1af60:	ldr	r6, [r4]
   1af64:	ldr	r5, [r0]
   1af68:	subs	r1, r1, #1
   1af6c:	str	r5, [r4], #4
   1af70:	str	r6, [r0], #4
   1af74:	bne	1af60 <argp_parse@@Base+0x2be8>
   1af78:	add	r2, r7, r2
   1af7c:	cmp	r3, r8
   1af80:	cmpgt	r8, r2
   1af84:	bgt	1ae18 <argp_parse@@Base+0x2aa0>
   1af88:	ldr	r0, [sp, #36]	; 0x24
   1af8c:	ldr	r4, [sp, #28]
   1af90:	ldr	r6, [sp, #24]
   1af94:	ldr	r2, [fp, #16]
   1af98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1af9c:	ldr	r7, [sp, #20]
   1afa0:	add	r0, r0, r9
   1afa4:	mov	r1, r4
   1afa8:	sub	r0, r0, r8
   1afac:	str	r0, [r6]
   1afb0:	mov	r5, r0
   1afb4:	str	r9, [r1]
   1afb8:	mov	r8, r9
   1afbc:	cmp	r9, r3
   1afc0:	bge	1aff0 <argp_parse@@Base+0x2c78>
   1afc4:	ldr	r0, [sl, r8, lsl #2]
   1afc8:	ldrb	r1, [r0]
   1afcc:	cmp	r1, #45	; 0x2d
   1afd0:	bne	1afe0 <argp_parse@@Base+0x2c68>
   1afd4:	ldrb	r0, [r0, #1]
   1afd8:	cmp	r0, #0
   1afdc:	bne	1aff0 <argp_parse@@Base+0x2c78>
   1afe0:	add	r8, r8, #1
   1afe4:	cmp	r8, r3
   1afe8:	str	r8, [r2]
   1afec:	blt	1afc4 <argp_parse@@Base+0x2c4c>
   1aff0:	mov	r9, r8
   1aff4:	str	r8, [r4]
   1aff8:	cmp	r9, r3
   1affc:	beq	1b2d0 <argp_parse@@Base+0x2f58>
   1b000:	ldr	r0, [sl, r9, lsl #2]
   1b004:	movw	r1, #53227	; 0xcfeb
   1b008:	str	r3, [fp, #-40]	; 0xffffffd8
   1b00c:	movt	r1, #1
   1b010:	bl	11344 <strcmp@plt>
   1b014:	cmp	r0, #0
   1b018:	beq	1b0a8 <argp_parse@@Base+0x2d30>
   1b01c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b020:	ldr	r2, [fp, #16]
   1b024:	cmp	r9, r3
   1b028:	beq	1b2d0 <argp_parse@@Base+0x2f58>
   1b02c:	ldr	r0, [sl, r9, lsl #2]
   1b030:	mvn	r6, #0
   1b034:	ldrb	r1, [r0]
   1b038:	cmp	r1, #45	; 0x2d
   1b03c:	bne	1b100 <argp_parse@@Base+0x2d88>
   1b040:	mov	r4, r0
   1b044:	ldrb	r1, [r4, #1]!
   1b048:	cmp	r1, #0
   1b04c:	beq	1b100 <argp_parse@@Base+0x2d88>
   1b050:	ldr	r6, [sp, #48]	; 0x30
   1b054:	cmp	r6, #0
   1b058:	beq	1b308 <argp_parse@@Base+0x2f90>
   1b05c:	ldr	r5, [fp, #12]
   1b060:	ldr	r7, [sp, #32]
   1b064:	cmp	r1, #45	; 0x2d
   1b068:	bne	1b310 <argp_parse@@Base+0x2f98>
   1b06c:	add	r0, r0, #2
   1b070:	mov	r1, sl
   1b074:	str	r0, [r2, #20]
   1b078:	ldr	r0, [fp, #8]
   1b07c:	stm	sp, {r0, r5}
   1b080:	str	r2, [sp, #8]
   1b084:	mov	r2, r7
   1b088:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b08c:	str	r0, [sp, #12]
   1b090:	movw	r0, #53227	; 0xcfeb
   1b094:	movt	r0, #1
   1b098:	str	r0, [sp, #16]
   1b09c:	mov	r0, r3
   1b0a0:	mov	r3, r6
   1b0a4:	b	1b418 <argp_parse@@Base+0x30a0>
   1b0a8:	ldr	r2, [fp, #16]
   1b0ac:	add	r3, r9, #1
   1b0b0:	cmp	r5, r8
   1b0b4:	cmpne	r8, r3
   1b0b8:	str	r3, [r2]
   1b0bc:	bne	1b118 <argp_parse@@Base+0x2da0>
   1b0c0:	cmp	r5, r8
   1b0c4:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1b0c8:	mov	r1, r6
   1b0cc:	mov	r0, r3
   1b0d0:	beq	1b2c0 <argp_parse@@Base+0x2f48>
   1b0d4:	b	1b2c8 <argp_parse@@Base+0x2f50>
   1b0d8:	cmp	r1, #58	; 0x3a
   1b0dc:	bne	1b2dc <argp_parse@@Base+0x2f64>
   1b0e0:	ldrb	r0, [r0, #2]
   1b0e4:	ldrb	r1, [r8]
   1b0e8:	cmp	r0, #58	; 0x3a
   1b0ec:	bne	1b2f0 <argp_parse@@Base+0x2f78>
   1b0f0:	cmp	r1, #0
   1b0f4:	bne	1b2f8 <argp_parse@@Base+0x2f80>
   1b0f8:	mov	r0, #0
   1b0fc:	b	1b430 <argp_parse@@Base+0x30b8>
   1b100:	cmp	r7, #0
   1b104:	strne	r0, [r2, #12]
   1b108:	addne	r0, r9, #1
   1b10c:	movne	r6, #1
   1b110:	strne	r0, [r2]
   1b114:	b	1b2dc <argp_parse@@Base+0x2f64>
   1b118:	cmp	r9, r8
   1b11c:	str	r3, [fp, #-36]	; 0xffffffdc
   1b120:	str	r6, [sp, #24]
   1b124:	str	r5, [sp, #36]	; 0x24
   1b128:	str	r4, [sp, #28]
   1b12c:	blt	1b29c <argp_parse@@Base+0x2f24>
   1b130:	ldr	r0, [sp, #36]	; 0x24
   1b134:	cmp	r0, r8
   1b138:	bge	1b29c <argp_parse@@Base+0x2f24>
   1b13c:	sub	r0, sl, r8, lsl #2
   1b140:	ldr	r7, [sp, #36]	; 0x24
   1b144:	add	r9, sl, r8, lsl #2
   1b148:	str	r0, [fp, #-44]	; 0xffffffd4
   1b14c:	rsb	r0, r8, #0
   1b150:	str	r0, [fp, #-32]	; 0xffffffe0
   1b154:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b158:	sub	r4, r8, r7
   1b15c:	sub	r3, r0, r8
   1b160:	cmp	r3, r4
   1b164:	ble	1b1f8 <argp_parse@@Base+0x2e80>
   1b168:	sub	r3, r0, r4
   1b16c:	cmp	r4, #1
   1b170:	blt	1b1f0 <argp_parse@@Base+0x2e78>
   1b174:	mov	r1, #0
   1b178:	cmp	r4, #4
   1b17c:	bcc	1b1c0 <argp_parse@@Base+0x2e48>
   1b180:	add	r2, sl, r0, lsl #2
   1b184:	add	lr, sl, r7, lsl #2
   1b188:	add	ip, sl, r3, lsl #2
   1b18c:	cmp	lr, r2
   1b190:	cmpcc	ip, r9
   1b194:	bcc	1b1c0 <argp_parse@@Base+0x2e48>
   1b198:	bic	r1, r4, #3
   1b19c:	mov	r2, r1
   1b1a0:	vld1.32	{d16-d17}, [ip]
   1b1a4:	vld1.32	{d18-d19}, [lr]
   1b1a8:	subs	r2, r2, #4
   1b1ac:	vst1.32	{d16-d17}, [lr]!
   1b1b0:	vst1.32	{d18-d19}, [ip]!
   1b1b4:	bne	1b1a0 <argp_parse@@Base+0x2e28>
   1b1b8:	cmp	r4, r1
   1b1bc:	beq	1b1f0 <argp_parse@@Base+0x2e78>
   1b1c0:	add	r0, r7, r0
   1b1c4:	sub	r2, r8, r1
   1b1c8:	add	r1, r1, r7
   1b1cc:	add	r1, sl, r1, lsl #2
   1b1d0:	add	r0, sl, r0, lsl #2
   1b1d4:	ldr	r6, [r0, -r2, lsl #2]
   1b1d8:	ldr	r5, [r1]
   1b1dc:	str	r6, [r1], #4
   1b1e0:	str	r5, [r0, -r2, lsl #2]
   1b1e4:	sub	r2, r2, #1
   1b1e8:	cmp	r7, r2
   1b1ec:	bne	1b1d4 <argp_parse@@Base+0x2e5c>
   1b1f0:	mov	r0, r3
   1b1f4:	b	1b290 <argp_parse@@Base+0x2f18>
   1b1f8:	cmp	r3, #1
   1b1fc:	blt	1b28c <argp_parse@@Base+0x2f14>
   1b200:	mov	r4, #0
   1b204:	cmp	r3, #3
   1b208:	bls	1b258 <argp_parse@@Base+0x2ee0>
   1b20c:	add	r2, sl, r0, lsl #2
   1b210:	add	r1, sl, r7, lsl #2
   1b214:	cmp	r1, r2
   1b218:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   1b21c:	addcc	r2, r7, r0
   1b220:	addcc	r2, r6, r2, lsl #2
   1b224:	cmpcc	r9, r2
   1b228:	bcc	1b258 <argp_parse@@Base+0x2ee0>
   1b22c:	bic	r4, r3, #3
   1b230:	mov	r6, r9
   1b234:	mov	r2, r4
   1b238:	vld1.32	{d16-d17}, [r6]
   1b23c:	vld1.32	{d18-d19}, [r1]
   1b240:	subs	r2, r2, #4
   1b244:	vst1.32	{d16-d17}, [r1]!
   1b248:	vst1.32	{d18-d19}, [r6]!
   1b24c:	bne	1b238 <argp_parse@@Base+0x2ec0>
   1b250:	cmp	r3, r4
   1b254:	beq	1b28c <argp_parse@@Base+0x2f14>
   1b258:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b25c:	add	r2, r4, r7
   1b260:	add	r6, r8, r4
   1b264:	add	r2, sl, r2, lsl #2
   1b268:	add	r1, r1, r0
   1b26c:	sub	r1, r1, r4
   1b270:	add	r4, sl, r6, lsl #2
   1b274:	ldr	r6, [r2]
   1b278:	ldr	r5, [r4]
   1b27c:	subs	r1, r1, #1
   1b280:	str	r5, [r2], #4
   1b284:	str	r6, [r4], #4
   1b288:	bne	1b274 <argp_parse@@Base+0x2efc>
   1b28c:	add	r7, r3, r7
   1b290:	cmp	r0, r8
   1b294:	cmpgt	r8, r7
   1b298:	bgt	1b158 <argp_parse@@Base+0x2de0>
   1b29c:	ldr	r0, [sp, #36]	; 0x24
   1b2a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b2a4:	ldr	r1, [sp, #24]
   1b2a8:	ldr	r2, [fp, #16]
   1b2ac:	add	r0, r0, r3
   1b2b0:	sub	r0, r0, r8
   1b2b4:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1b2b8:	str	r0, [r1]
   1b2bc:	ldr	r1, [sp, #28]
   1b2c0:	mov	r5, r0
   1b2c4:	str	r3, [r1]
   1b2c8:	str	r8, [r2]
   1b2cc:	str	r8, [r2, #32]
   1b2d0:	cmp	r5, r8
   1b2d4:	mvn	r6, #0
   1b2d8:	strne	r5, [r2]
   1b2dc:	mov	r0, r6
   1b2e0:	sub	sp, fp, #28
   1b2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2e8:	mov	r0, #1
   1b2ec:	b	1ac74 <argp_parse@@Base+0x28fc>
   1b2f0:	cmp	r1, #0
   1b2f4:	beq	1b37c <argp_parse@@Base+0x3004>
   1b2f8:	add	r0, r9, #1
   1b2fc:	str	r8, [r3, #12]
   1b300:	str	r0, [r3]
   1b304:	b	1b434 <argp_parse@@Base+0x30bc>
   1b308:	ldr	r7, [sp, #32]
   1b30c:	b	1b458 <argp_parse@@Base+0x30e0>
   1b310:	cmp	r5, #0
   1b314:	beq	1b458 <argp_parse@@Base+0x30e0>
   1b318:	ldrb	r0, [r0, #2]
   1b31c:	cmp	r0, #0
   1b320:	beq	1b440 <argp_parse@@Base+0x30c8>
   1b324:	ldr	r1, [fp, #8]
   1b328:	str	r4, [r2, #20]
   1b32c:	movw	r0, #53228	; 0xcfec
   1b330:	movt	r0, #1
   1b334:	stm	sp, {r1, r5}
   1b338:	str	r2, [sp, #8]
   1b33c:	str	r0, [sp, #16]
   1b340:	mov	r0, r3
   1b344:	mov	r2, r7
   1b348:	mov	r3, r6
   1b34c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b350:	str	r1, [sp, #12]
   1b354:	mov	r1, sl
   1b358:	bl	1b4b8 <argp_parse@@Base+0x3140>
   1b35c:	ldr	r2, [fp, #16]
   1b360:	mov	r6, r0
   1b364:	cmn	r0, #1
   1b368:	bne	1b2dc <argp_parse@@Base+0x2f64>
   1b36c:	ldr	r9, [r2]
   1b370:	ldr	r0, [sl, r9, lsl #2]
   1b374:	add	r4, r0, #1
   1b378:	b	1b458 <argp_parse@@Base+0x30e0>
   1b37c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b380:	cmp	r9, r0
   1b384:	bne	1b424 <argp_parse@@Base+0x30ac>
   1b388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b38c:	cmp	r0, #0
   1b390:	bne	1b48c <argp_parse@@Base+0x3114>
   1b394:	str	r6, [r3, #8]
   1b398:	ldrb	r6, [r7]
   1b39c:	cmp	r6, #58	; 0x3a
   1b3a0:	movwne	r6, #63	; 0x3f
   1b3a4:	b	1b434 <argp_parse@@Base+0x30bc>
   1b3a8:	movw	r0, #58920	; 0xe628
   1b3ac:	ldr	r2, [sl]
   1b3b0:	movw	r1, #54210	; 0xd3c2
   1b3b4:	mov	r4, r3
   1b3b8:	mov	r3, r6
   1b3bc:	movt	r0, #2
   1b3c0:	movt	r1, #1
   1b3c4:	ldr	r0, [r0]
   1b3c8:	bl	11530 <fprintf@plt>
   1b3cc:	mov	r3, r4
   1b3d0:	b	1ad54 <argp_parse@@Base+0x29dc>
   1b3d4:	ldr	r8, [sl, r9, lsl #2]
   1b3d8:	ldr	r2, [fp, #8]
   1b3dc:	mov	r0, #0
   1b3e0:	str	r8, [r3, #12]
   1b3e4:	movw	r1, #54279	; 0xd407
   1b3e8:	str	r0, [r3, #12]
   1b3ec:	str	r8, [r3, #20]
   1b3f0:	movt	r1, #1
   1b3f4:	str	r2, [sp]
   1b3f8:	stmib	sp, {r0, r3}
   1b3fc:	str	r1, [sp, #16]
   1b400:	mov	r1, sl
   1b404:	mov	r2, r7
   1b408:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b40c:	ldr	r3, [sp, #48]	; 0x30
   1b410:	str	r0, [sp, #12]
   1b414:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b418:	bl	1b4b8 <argp_parse@@Base+0x3140>
   1b41c:	sub	sp, fp, #28
   1b420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b424:	add	r0, r9, #1
   1b428:	str	r0, [r3]
   1b42c:	ldr	r0, [sl, r9, lsl #2]
   1b430:	str	r0, [r3, #12]
   1b434:	mov	r0, #0
   1b438:	str	r0, [r3, #20]
   1b43c:	b	1b2dc <argp_parse@@Base+0x2f64>
   1b440:	mov	r0, r7
   1b444:	bl	11524 <strchr@plt>
   1b448:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b44c:	ldr	r2, [fp, #16]
   1b450:	cmp	r0, #0
   1b454:	beq	1b324 <argp_parse@@Base+0x2fac>
   1b458:	str	r4, [r2, #20]
   1b45c:	b	1ad08 <argp_parse@@Base+0x2990>
   1b460:	movw	r0, #58920	; 0xe628
   1b464:	ldr	r2, [sl]
   1b468:	movw	r1, #54238	; 0xd3de
   1b46c:	mov	r4, r3
   1b470:	mov	r3, r6
   1b474:	movt	r0, #2
   1b478:	movt	r1, #1
   1b47c:	ldr	r0, [r0]
   1b480:	bl	11530 <fprintf@plt>
   1b484:	mov	r3, r4
   1b488:	b	1ada8 <argp_parse@@Base+0x2a30>
   1b48c:	movw	r0, #58920	; 0xe628
   1b490:	ldr	r2, [sl]
   1b494:	movw	r1, #54238	; 0xd3de
   1b498:	mov	r4, r3
   1b49c:	mov	r3, r6
   1b4a0:	movt	r0, #2
   1b4a4:	movt	r1, #1
   1b4a8:	ldr	r0, [r0]
   1b4ac:	bl	11530 <fprintf@plt>
   1b4b0:	mov	r3, r4
   1b4b4:	b	1b394 <argp_parse@@Base+0x301c>
   1b4b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b4bc:	add	fp, sp, #28
   1b4c0:	sub	sp, sp, #44	; 0x2c
   1b4c4:	str	r0, [sp, #12]
   1b4c8:	ldr	r0, [fp, #16]
   1b4cc:	ldr	r5, [fp, #8]
   1b4d0:	str	r2, [sp, #16]
   1b4d4:	str	r1, [sp, #20]
   1b4d8:	ldr	r9, [r0, #20]
   1b4dc:	mov	r6, r9
   1b4e0:	b	1b4e8 <argp_parse@@Base+0x3170>
   1b4e4:	add	r6, r6, #1
   1b4e8:	ldrb	r0, [r6]
   1b4ec:	cmp	r0, #0
   1b4f0:	cmpne	r0, #61	; 0x3d
   1b4f4:	bne	1b4e4 <argp_parse@@Base+0x316c>
   1b4f8:	ldr	sl, [r3]
   1b4fc:	mvn	ip, #0
   1b500:	str	r3, [fp, #-32]	; 0xffffffe0
   1b504:	cmp	sl, #0
   1b508:	beq	1b70c <argp_parse@@Base+0x3394>
   1b50c:	sub	r4, r6, r9
   1b510:	mov	r8, #0
   1b514:	mov	r5, sl
   1b518:	mov	r7, r3
   1b51c:	mov	r0, r5
   1b520:	mov	r1, r9
   1b524:	mov	r2, r4
   1b528:	bl	1165c <strncmp@plt>
   1b52c:	cmp	r0, #0
   1b530:	bne	1b544 <argp_parse@@Base+0x31cc>
   1b534:	mov	r0, r5
   1b538:	bl	11518 <strlen@plt>
   1b53c:	cmp	r4, r0
   1b540:	beq	1b738 <argp_parse@@Base+0x33c0>
   1b544:	ldr	r5, [r7, #16]!
   1b548:	add	r8, r8, #1
   1b54c:	cmp	r5, #0
   1b550:	bne	1b51c <argp_parse@@Base+0x31a4>
   1b554:	cmp	sl, #0
   1b558:	beq	1b744 <argp_parse@@Base+0x33cc>
   1b55c:	mvn	r0, #0
   1b560:	str	r4, [sp, #36]	; 0x24
   1b564:	mov	r4, #0
   1b568:	mov	r5, #0
   1b56c:	mov	r7, #0
   1b570:	str	r0, [sp, #24]
   1b574:	mov	r0, #0
   1b578:	str	r0, [sp, #32]
   1b57c:	mov	r0, #0
   1b580:	str	r0, [sp, #8]
   1b584:	mov	r0, #0
   1b588:	str	r0, [sp, #28]
   1b58c:	b	1b5a4 <argp_parse@@Base+0x322c>
   1b590:	ldr	r0, [fp, #16]
   1b594:	add	r1, r1, #16
   1b598:	add	r5, r5, #1
   1b59c:	mov	r4, r1
   1b5a0:	ldr	r9, [r0, #20]
   1b5a4:	ldr	r2, [sp, #36]	; 0x24
   1b5a8:	mov	r0, sl
   1b5ac:	mov	r1, r9
   1b5b0:	bl	1165c <strncmp@plt>
   1b5b4:	cmp	r0, #0
   1b5b8:	beq	1b5d8 <argp_parse@@Base+0x3260>
   1b5bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5c0:	mov	r1, r4
   1b5c4:	add	r0, r3, r5, lsl #4
   1b5c8:	ldr	sl, [r0, #16]
   1b5cc:	cmp	sl, #0
   1b5d0:	bne	1b590 <argp_parse@@Base+0x3218>
   1b5d4:	b	1b724 <argp_parse@@Base+0x33ac>
   1b5d8:	cmp	r7, #0
   1b5dc:	beq	1b690 <argp_parse@@Base+0x3318>
   1b5e0:	ldr	r0, [fp, #12]
   1b5e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5e8:	cmp	r0, #0
   1b5ec:	bne	1b614 <argp_parse@@Base+0x329c>
   1b5f0:	add	r0, r3, r5, lsl #4
   1b5f4:	ldr	r2, [r7, #4]
   1b5f8:	ldr	r1, [r0, #4]
   1b5fc:	cmp	r2, r1
   1b600:	bne	1b614 <argp_parse@@Base+0x329c>
   1b604:	ldr	r1, [r0, #8]
   1b608:	ldr	r2, [r7, #8]
   1b60c:	cmp	r2, r1
   1b610:	beq	1b6c8 <argp_parse@@Base+0x3350>
   1b614:	ldr	r0, [sp, #32]
   1b618:	mov	r1, r4
   1b61c:	cmp	r0, #0
   1b620:	bne	1b5c4 <argp_parse@@Base+0x324c>
   1b624:	ldr	r0, [fp, #20]
   1b628:	cmp	r0, #0
   1b62c:	beq	1b6a4 <argp_parse@@Base+0x332c>
   1b630:	ldr	r9, [sp, #28]
   1b634:	mov	r0, #0
   1b638:	str	r0, [sp, #32]
   1b63c:	cmp	r9, #0
   1b640:	bne	1b6b8 <argp_parse@@Base+0x3340>
   1b644:	mov	r0, r8
   1b648:	bl	1a384 <argp_parse@@Base+0x200c>
   1b64c:	cmp	r0, #0
   1b650:	beq	1b6f8 <argp_parse@@Base+0x3380>
   1b654:	mov	r9, r0
   1b658:	mov	r0, #0
   1b65c:	mov	r1, #0
   1b660:	mov	r2, r8
   1b664:	str	r0, [sp, #32]
   1b668:	mov	r0, r9
   1b66c:	bl	1156c <memset@plt>
   1b670:	ldr	r0, [sp, #24]
   1b674:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b678:	mov	r1, #1
   1b67c:	mov	r2, #1
   1b680:	str	r1, [sp, #8]
   1b684:	mov	r1, r4
   1b688:	strb	r2, [r9, r0]
   1b68c:	b	1b6b8 <argp_parse@@Base+0x3340>
   1b690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b694:	mov	r1, r4
   1b698:	str	r5, [sp, #24]
   1b69c:	add	r7, r3, r4
   1b6a0:	b	1b5c4 <argp_parse@@Base+0x324c>
   1b6a4:	ldr	r9, [sp, #28]
   1b6a8:	mov	r0, #1
   1b6ac:	str	r0, [sp, #32]
   1b6b0:	cmp	r9, #0
   1b6b4:	beq	1b6ec <argp_parse@@Base+0x3374>
   1b6b8:	mov	r0, #1
   1b6bc:	str	r9, [sp, #28]
   1b6c0:	strb	r0, [r9, r5]
   1b6c4:	b	1b5c4 <argp_parse@@Base+0x324c>
   1b6c8:	ldr	r1, [sp, #32]
   1b6cc:	cmp	r1, #0
   1b6d0:	bne	1b5c0 <argp_parse@@Base+0x3248>
   1b6d4:	ldr	r0, [r0, #12]
   1b6d8:	ldr	r1, [r7, #12]
   1b6dc:	cmp	r1, r0
   1b6e0:	mov	r1, r4
   1b6e4:	bne	1b624 <argp_parse@@Base+0x32ac>
   1b6e8:	b	1b5c4 <argp_parse@@Base+0x324c>
   1b6ec:	mov	r0, #0
   1b6f0:	str	r0, [sp, #28]
   1b6f4:	b	1b5c4 <argp_parse@@Base+0x324c>
   1b6f8:	mov	r0, #1
   1b6fc:	str	r0, [sp, #32]
   1b700:	mov	r0, #0
   1b704:	str	r0, [sp, #28]
   1b708:	b	1b5bc <argp_parse@@Base+0x3244>
   1b70c:	mov	r0, #0
   1b710:	mov	r8, #0
   1b714:	mov	r7, #0
   1b718:	mov	sl, #0
   1b71c:	mov	r4, #0
   1b720:	b	1b75c <argp_parse@@Base+0x33e4>
   1b724:	ldr	r5, [fp, #8]
   1b728:	ldr	ip, [sp, #24]
   1b72c:	ldr	sl, [sp, #28]
   1b730:	ldr	r4, [sp, #8]
   1b734:	b	1b760 <argp_parse@@Base+0x33e8>
   1b738:	ldr	r5, [fp, #8]
   1b73c:	mov	ip, r8
   1b740:	b	1b7c8 <argp_parse@@Base+0x3450>
   1b744:	ldr	r5, [fp, #8]
   1b748:	mov	r0, #0
   1b74c:	mov	r7, #0
   1b750:	mov	sl, #0
   1b754:	mov	r4, #0
   1b758:	mvn	ip, #0
   1b75c:	str	r0, [sp, #32]
   1b760:	cmp	sl, #0
   1b764:	ldreq	r0, [sp, #32]
   1b768:	cmpeq	r0, #0
   1b76c:	beq	1b7c0 <argp_parse@@Base+0x3448>
   1b770:	ldr	r0, [fp, #20]
   1b774:	cmp	r0, #0
   1b778:	bne	1b930 <argp_parse@@Base+0x35b8>
   1b77c:	cmp	r4, #0
   1b780:	beq	1b78c <argp_parse@@Base+0x3414>
   1b784:	mov	r0, sl
   1b788:	bl	19648 <argp_parse@@Base+0x12d0>
   1b78c:	ldr	r0, [fp, #16]
   1b790:	ldr	r4, [r0, #20]
   1b794:	mov	r5, r0
   1b798:	mov	r0, r4
   1b79c:	bl	11518 <strlen@plt>
   1b7a0:	mov	r1, #0
   1b7a4:	add	r0, r4, r0
   1b7a8:	str	r1, [r5, #8]
   1b7ac:	str	r0, [r5, #20]
   1b7b0:	ldr	r0, [r5]
   1b7b4:	add	r0, r0, #1
   1b7b8:	str	r0, [r5]
   1b7bc:	b	1b8f4 <argp_parse@@Base+0x357c>
   1b7c0:	cmp	r7, #0
   1b7c4:	beq	1b864 <argp_parse@@Base+0x34ec>
   1b7c8:	ldr	r1, [fp, #16]
   1b7cc:	mov	r0, #0
   1b7d0:	str	r0, [r1, #20]
   1b7d4:	mov	r2, r1
   1b7d8:	ldr	r1, [r1]
   1b7dc:	add	r0, r1, #1
   1b7e0:	str	r0, [r2]
   1b7e4:	ldrb	r3, [r6]
   1b7e8:	ldr	r2, [r7, #4]
   1b7ec:	cmp	r3, #0
   1b7f0:	beq	1b80c <argp_parse@@Base+0x3494>
   1b7f4:	cmp	r2, #0
   1b7f8:	beq	1b8dc <argp_parse@@Base+0x3564>
   1b7fc:	ldr	r1, [fp, #16]
   1b800:	add	r0, r6, #1
   1b804:	str	r0, [r1, #12]
   1b808:	b	1b838 <argp_parse@@Base+0x34c0>
   1b80c:	cmp	r2, #1
   1b810:	bne	1b838 <argp_parse@@Base+0x34c0>
   1b814:	ldr	r2, [sp, #12]
   1b818:	cmp	r0, r2
   1b81c:	bge	1b900 <argp_parse@@Base+0x3588>
   1b820:	ldr	r2, [fp, #16]
   1b824:	add	r1, r1, #2
   1b828:	str	r1, [r2]
   1b82c:	ldr	r1, [sp, #20]
   1b830:	ldr	r0, [r1, r0, lsl #2]
   1b834:	str	r0, [r2, #12]
   1b838:	cmp	r5, #0
   1b83c:	strne	ip, [r5]
   1b840:	ldr	r1, [r7, #8]
   1b844:	ldr	r0, [r7, #12]
   1b848:	cmp	r1, #0
   1b84c:	strne	r0, [r1]
   1b850:	movne	r0, #0
   1b854:	subne	sp, fp, #28
   1b858:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b85c:	sub	sp, fp, #28
   1b860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b864:	ldr	r0, [fp, #12]
   1b868:	cmp	r0, #0
   1b86c:	beq	1b8b0 <argp_parse@@Base+0x3538>
   1b870:	ldr	r0, [fp, #16]
   1b874:	ldr	r1, [sp, #20]
   1b878:	ldr	r0, [r0]
   1b87c:	ldr	r0, [r1, r0, lsl #2]
   1b880:	ldrb	r0, [r0, #1]
   1b884:	cmp	r0, #45	; 0x2d
   1b888:	beq	1b8b0 <argp_parse@@Base+0x3538>
   1b88c:	ldr	r0, [fp, #16]
   1b890:	ldr	r0, [r0, #20]
   1b894:	ldrb	r1, [r0]
   1b898:	ldr	r0, [sp, #16]
   1b89c:	bl	11524 <strchr@plt>
   1b8a0:	mov	r1, r0
   1b8a4:	mvn	r0, #0
   1b8a8:	cmp	r1, #0
   1b8ac:	bne	1b928 <argp_parse@@Base+0x35b0>
   1b8b0:	ldr	r0, [fp, #20]
   1b8b4:	cmp	r0, #0
   1b8b8:	bne	1ba1c <argp_parse@@Base+0x36a4>
   1b8bc:	ldr	r1, [fp, #16]
   1b8c0:	mov	r0, #0
   1b8c4:	str	r0, [r1, #20]
   1b8c8:	str	r0, [r1, #8]
   1b8cc:	ldr	r0, [r1]
   1b8d0:	add	r0, r0, #1
   1b8d4:	str	r0, [r1]
   1b8d8:	b	1b8f4 <argp_parse@@Base+0x357c>
   1b8dc:	ldr	r0, [fp, #20]
   1b8e0:	cmp	r0, #0
   1b8e4:	bne	1ba50 <argp_parse@@Base+0x36d8>
   1b8e8:	ldr	r0, [r7, #12]
   1b8ec:	ldr	r1, [fp, #16]
   1b8f0:	str	r0, [r1, #8]
   1b8f4:	mov	r0, #63	; 0x3f
   1b8f8:	sub	sp, fp, #28
   1b8fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b900:	ldr	r0, [fp, #20]
   1b904:	cmp	r0, #0
   1b908:	bne	1ba80 <argp_parse@@Base+0x3708>
   1b90c:	ldr	r0, [r7, #12]
   1b910:	ldr	r1, [fp, #16]
   1b914:	str	r0, [r1, #8]
   1b918:	ldr	r0, [sp, #16]
   1b91c:	ldrb	r0, [r0]
   1b920:	cmp	r0, #58	; 0x3a
   1b924:	movwne	r0, #63	; 0x3f
   1b928:	sub	sp, fp, #28
   1b92c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b930:	movw	r5, #58920	; 0xe628
   1b934:	ldr	r1, [sp, #32]
   1b938:	movt	r5, #2
   1b93c:	ldr	r0, [r5]
   1b940:	cmp	r1, #0
   1b944:	beq	1b978 <argp_parse@@Base+0x3600>
   1b948:	ldr	r1, [sp, #20]
   1b94c:	ldr	r3, [fp, #24]
   1b950:	ldr	r2, [r1]
   1b954:	ldr	r1, [fp, #16]
   1b958:	ldr	r1, [r1, #20]
   1b95c:	str	r1, [sp]
   1b960:	movw	r1, #54299	; 0xd41b
   1b964:	movt	r1, #1
   1b968:	bl	11530 <fprintf@plt>
   1b96c:	cmp	r4, #0
   1b970:	bne	1b784 <argp_parse@@Base+0x340c>
   1b974:	b	1b78c <argp_parse@@Base+0x3414>
   1b978:	bl	11614 <flockfile@plt>
   1b97c:	ldr	r1, [fp, #16]
   1b980:	ldr	r0, [sp, #20]
   1b984:	ldr	r9, [fp, #24]
   1b988:	ldr	r1, [r1, #20]
   1b98c:	ldr	r2, [r0]
   1b990:	ldr	r0, [r5]
   1b994:	mov	r3, r9
   1b998:	str	r1, [sp]
   1b99c:	movw	r1, #54331	; 0xd43b
   1b9a0:	movt	r1, #1
   1b9a4:	bl	11530 <fprintf@plt>
   1b9a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b9ac:	cmp	r8, #0
   1b9b0:	beq	1b9fc <argp_parse@@Base+0x3684>
   1b9b4:	mov	r6, sl
   1b9b8:	b	1b9e0 <argp_parse@@Base+0x3668>
   1b9bc:	ldr	r3, [r1]
   1b9c0:	ldr	r0, [r5]
   1b9c4:	mov	r7, r1
   1b9c8:	movw	r1, #54378	; 0xd46a
   1b9cc:	mov	r2, r9
   1b9d0:	movt	r1, #1
   1b9d4:	bl	11530 <fprintf@plt>
   1b9d8:	mov	r1, r7
   1b9dc:	b	1b9ec <argp_parse@@Base+0x3674>
   1b9e0:	ldrb	r0, [r6]
   1b9e4:	cmp	r0, #0
   1b9e8:	bne	1b9bc <argp_parse@@Base+0x3644>
   1b9ec:	add	r1, r1, #16
   1b9f0:	add	r6, r6, #1
   1b9f4:	subs	r8, r8, #1
   1b9f8:	bne	1b9e0 <argp_parse@@Base+0x3668>
   1b9fc:	ldr	r1, [r5]
   1ba00:	mov	r0, #10
   1ba04:	bl	115e4 <fputc@plt>
   1ba08:	ldr	r0, [r5]
   1ba0c:	bl	11464 <funlockfile@plt>
   1ba10:	cmp	r4, #0
   1ba14:	bne	1b784 <argp_parse@@Base+0x340c>
   1ba18:	b	1b78c <argp_parse@@Base+0x3414>
   1ba1c:	ldr	r1, [fp, #16]
   1ba20:	ldr	r0, [sp, #20]
   1ba24:	ldr	r3, [fp, #24]
   1ba28:	ldr	r2, [r0]
   1ba2c:	movw	r0, #58920	; 0xe628
   1ba30:	ldr	r1, [r1, #20]
   1ba34:	movt	r0, #2
   1ba38:	ldr	r0, [r0]
   1ba3c:	str	r1, [sp]
   1ba40:	movw	r1, #54386	; 0xd472
   1ba44:	movt	r1, #1
   1ba48:	bl	11530 <fprintf@plt>
   1ba4c:	b	1b8bc <argp_parse@@Base+0x3544>
   1ba50:	ldr	r0, [sp, #20]
   1ba54:	ldr	r1, [r7]
   1ba58:	ldr	r3, [fp, #24]
   1ba5c:	ldr	r2, [r0]
   1ba60:	movw	r0, #58920	; 0xe628
   1ba64:	str	r1, [sp]
   1ba68:	movw	r1, #54418	; 0xd492
   1ba6c:	movt	r0, #2
   1ba70:	movt	r1, #1
   1ba74:	ldr	r0, [r0]
   1ba78:	bl	11530 <fprintf@plt>
   1ba7c:	b	1b8e8 <argp_parse@@Base+0x3570>
   1ba80:	ldr	r0, [sp, #20]
   1ba84:	ldr	r1, [r7]
   1ba88:	ldr	r3, [fp, #24]
   1ba8c:	ldr	r2, [r0]
   1ba90:	movw	r0, #58920	; 0xe628
   1ba94:	str	r1, [sp]
   1ba98:	movw	r1, #54463	; 0xd4bf
   1ba9c:	movt	r0, #2
   1baa0:	movt	r1, #1
   1baa4:	ldr	r0, [r0]
   1baa8:	bl	11530 <fprintf@plt>
   1baac:	b	1b90c <argp_parse@@Base+0x3594>
   1bab0:	push	{r4, r5, r6, r7, fp, lr}
   1bab4:	add	fp, sp, #16
   1bab8:	sub	sp, sp, #16
   1babc:	movw	r7, #58896	; 0xe610
   1bac0:	movw	r5, #58900	; 0xe614
   1bac4:	movw	r6, #59040	; 0xe6a0
   1bac8:	movt	r5, #2
   1bacc:	movt	r7, #2
   1bad0:	movt	r6, #2
   1bad4:	ldr	r4, [r7]
   1bad8:	ldr	r5, [r5]
   1badc:	stm	r6, {r4, r5}
   1bae0:	ldr	r5, [fp, #16]
   1bae4:	str	r6, [sp, #8]
   1bae8:	str	r5, [sp, #12]
   1baec:	ldr	r5, [fp, #12]
   1baf0:	str	r5, [sp, #4]
   1baf4:	ldr	r5, [fp, #8]
   1baf8:	str	r5, [sp]
   1bafc:	bl	1aba0 <argp_parse@@Base+0x2828>
   1bb00:	ldr	r1, [r6]
   1bb04:	ldr	r3, [r6, #12]
   1bb08:	ldr	r2, [r6, #8]
   1bb0c:	str	r1, [r7]
   1bb10:	movw	r1, #59112	; 0xe6e8
   1bb14:	movt	r1, #2
   1bb18:	str	r3, [r1]
   1bb1c:	movw	r1, #58904	; 0xe618
   1bb20:	movt	r1, #2
   1bb24:	str	r2, [r1]
   1bb28:	sub	sp, fp, #16
   1bb2c:	pop	{r4, r5, r6, r7, fp, pc}
   1bb30:	push	{r4, r5, r6, sl, fp, lr}
   1bb34:	add	fp, sp, #16
   1bb38:	sub	sp, sp, #16
   1bb3c:	movw	r6, #58896	; 0xe610
   1bb40:	movw	r4, #58900	; 0xe614
   1bb44:	movw	r5, #59040	; 0xe6a0
   1bb48:	movt	r4, #2
   1bb4c:	movt	r6, #2
   1bb50:	movt	r5, #2
   1bb54:	ldr	r3, [r6]
   1bb58:	ldr	r4, [r4]
   1bb5c:	stm	r5, {r3, r4}
   1bb60:	mov	r4, #0
   1bb64:	mov	r3, #1
   1bb68:	str	r4, [sp]
   1bb6c:	stmib	sp, {r4, r5}
   1bb70:	str	r3, [sp, #12]
   1bb74:	mov	r3, #0
   1bb78:	bl	1aba0 <argp_parse@@Base+0x2828>
   1bb7c:	ldr	r1, [r5]
   1bb80:	ldr	r3, [r5, #12]
   1bb84:	ldr	r2, [r5, #8]
   1bb88:	str	r1, [r6]
   1bb8c:	movw	r1, #59112	; 0xe6e8
   1bb90:	movt	r1, #2
   1bb94:	str	r3, [r1]
   1bb98:	movw	r1, #58904	; 0xe618
   1bb9c:	movt	r1, #2
   1bba0:	str	r2, [r1]
   1bba4:	sub	sp, fp, #16
   1bba8:	pop	{r4, r5, r6, sl, fp, pc}
   1bbac:	cmp	r2, #0
   1bbb0:	beq	1bbe0 <argp_parse@@Base+0x3868>
   1bbb4:	mvn	r3, #0
   1bbb8:	udiv	r3, r3, r2
   1bbbc:	cmp	r3, r1
   1bbc0:	bcs	1bbe0 <argp_parse@@Base+0x3868>
   1bbc4:	push	{fp, lr}
   1bbc8:	mov	fp, sp
   1bbcc:	bl	1153c <__errno_location@plt>
   1bbd0:	mov	r1, #12
   1bbd4:	str	r1, [r0]
   1bbd8:	mov	r0, #0
   1bbdc:	pop	{fp, pc}
   1bbe0:	mul	r1, r2, r1
   1bbe4:	b	1a3b4 <argp_parse@@Base+0x203c>
   1bbe8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bbec:	mov	r7, r0
   1bbf0:	ldr	r6, [pc, #72]	; 1bc40 <argp_parse@@Base+0x38c8>
   1bbf4:	ldr	r5, [pc, #72]	; 1bc44 <argp_parse@@Base+0x38cc>
   1bbf8:	add	r6, pc, r6
   1bbfc:	add	r5, pc, r5
   1bc00:	sub	r6, r6, r5
   1bc04:	mov	r8, r1
   1bc08:	mov	r9, r2
   1bc0c:	bl	1130c <calloc@plt-0x20>
   1bc10:	asrs	r6, r6, #2
   1bc14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bc18:	mov	r4, #0
   1bc1c:	add	r4, r4, #1
   1bc20:	ldr	r3, [r5], #4
   1bc24:	mov	r2, r9
   1bc28:	mov	r1, r8
   1bc2c:	mov	r0, r7
   1bc30:	blx	r3
   1bc34:	cmp	r6, r4
   1bc38:	bne	1bc1c <argp_parse@@Base+0x38a4>
   1bc3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bc40:	andeq	r2, r1, ip, lsl #6
   1bc44:	andeq	r2, r1, r4, lsl #6
   1bc48:	bx	lr

Disassembly of section .fini:

0001bc4c <.fini>:
   1bc4c:	push	{r3, lr}
   1bc50:	pop	{r3, pc}
