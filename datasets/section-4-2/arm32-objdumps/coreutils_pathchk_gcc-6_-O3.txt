
../repos/coreutils/src/pathchk:     file format elf32-littlearm


Disassembly of section .init:

00010b4c <.init>:
   10b4c:	push	{r3, lr}
   10b50:	bl	11460 <strspn@plt+0x6cc>
   10b54:	pop	{r3, pc}

Disassembly of section .plt:

00010b58 <calloc@plt-0x14>:
   10b58:	push	{lr}		; (str lr, [sp, #-4]!)
   10b5c:	ldr	lr, [pc, #4]	; 10b68 <calloc@plt-0x4>
   10b60:	add	lr, pc, lr
   10b64:	ldr	pc, [lr, #8]!
   10b68:	muleq	r1, r8, r4

00010b6c <calloc@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #94208	; 0x17000
   10b74:	ldr	pc, [ip, #1176]!	; 0x498

00010b78 <fputs_unlocked@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #94208	; 0x17000
   10b80:	ldr	pc, [ip, #1168]!	; 0x490

00010b84 <raise@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #94208	; 0x17000
   10b8c:	ldr	pc, [ip, #1160]!	; 0x488

00010b90 <strcmp@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #94208	; 0x17000
   10b98:	ldr	pc, [ip, #1152]!	; 0x480

00010b9c <pathconf@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #94208	; 0x17000
   10ba4:	ldr	pc, [ip, #1144]!	; 0x478

00010ba8 <fflush@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #94208	; 0x17000
   10bb0:	ldr	pc, [ip, #1136]!	; 0x470

00010bb4 <free@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #94208	; 0x17000
   10bbc:	ldr	pc, [ip, #1128]!	; 0x468

00010bc0 <_exit@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #94208	; 0x17000
   10bc8:	ldr	pc, [ip, #1120]!	; 0x460

00010bcc <memcpy@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #94208	; 0x17000
   10bd4:	ldr	pc, [ip, #1112]!	; 0x458

00010bd8 <mbsinit@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #94208	; 0x17000
   10be0:	ldr	pc, [ip, #1104]!	; 0x450

00010be4 <memcmp@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #94208	; 0x17000
   10bec:	ldr	pc, [ip, #1096]!	; 0x448

00010bf0 <fputc_unlocked@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #94208	; 0x17000
   10bf8:	ldr	pc, [ip, #1088]!	; 0x440

00010bfc <dcgettext@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #94208	; 0x17000
   10c04:	ldr	pc, [ip, #1080]!	; 0x438

00010c08 <realloc@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #94208	; 0x17000
   10c10:	ldr	pc, [ip, #1072]!	; 0x430

00010c14 <textdomain@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #94208	; 0x17000
   10c1c:	ldr	pc, [ip, #1064]!	; 0x428

00010c20 <iswprint@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #94208	; 0x17000
   10c28:	ldr	pc, [ip, #1056]!	; 0x420

00010c2c <fwrite@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #94208	; 0x17000
   10c34:	ldr	pc, [ip, #1048]!	; 0x418

00010c38 <lseek64@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #94208	; 0x17000
   10c40:	ldr	pc, [ip, #1040]!	; 0x410

00010c44 <__ctype_get_mb_cur_max@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #94208	; 0x17000
   10c4c:	ldr	pc, [ip, #1032]!	; 0x408

00010c50 <__fpending@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #94208	; 0x17000
   10c58:	ldr	pc, [ip, #1024]!	; 0x400

00010c5c <mbrtowc@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #94208	; 0x17000
   10c64:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c68 <error@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #94208	; 0x17000
   10c70:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c74 <malloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #94208	; 0x17000
   10c7c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c80 <__libc_start_main@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #94208	; 0x17000
   10c88:	ldr	pc, [ip, #992]!	; 0x3e0

00010c8c <__freading@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #94208	; 0x17000
   10c94:	ldr	pc, [ip, #984]!	; 0x3d8

00010c98 <__gmon_start__@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #976]!	; 0x3d0

00010ca4 <getopt_long@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #968]!	; 0x3c8

00010cb0 <__ctype_b_loc@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #960]!	; 0x3c0

00010cbc <exit@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #952]!	; 0x3b8

00010cc8 <strlen@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #944]!	; 0x3b0

00010cd4 <strchr@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #936]!	; 0x3a8

00010ce0 <__errno_location@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #928]!	; 0x3a0

00010cec <__cxa_atexit@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #920]!	; 0x398

00010cf8 <memset@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #912]!	; 0x390

00010d04 <__printf_chk@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #904]!	; 0x388

00010d10 <fileno@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #896]!	; 0x380

00010d1c <__fprintf_chk@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #888]!	; 0x378

00010d28 <fclose@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #880]!	; 0x370

00010d34 <fseeko64@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #872]!	; 0x368

00010d40 <setlocale@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #864]!	; 0x360

00010d4c <strrchr@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #856]!	; 0x358

00010d58 <nl_langinfo@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #94208	; 0x17000
   10d60:	ldr	pc, [ip, #848]!	; 0x350

00010d64 <bindtextdomain@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #94208	; 0x17000
   10d6c:	ldr	pc, [ip, #840]!	; 0x348

00010d70 <strncmp@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #94208	; 0x17000
   10d78:	ldr	pc, [ip, #832]!	; 0x340

00010d7c <abort@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #94208	; 0x17000
   10d84:	ldr	pc, [ip, #824]!	; 0x338

00010d88 <__lxstat64@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #94208	; 0x17000
   10d90:	ldr	pc, [ip, #816]!	; 0x330

00010d94 <strspn@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #94208	; 0x17000
   10d9c:	ldr	pc, [ip, #808]!	; 0x328

Disassembly of section .text:

00010da0 <.text>:
   10da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10da4:	sub	sp, sp, #148	; 0x94
   10da8:	mov	fp, r1
   10dac:	str	r0, [sp, #16]
   10db0:	ldr	r0, [r1]
   10db4:	bl	1198c <strspn@plt+0xbf8>
   10db8:	ldr	r1, [pc, #1536]	; 113c0 <strspn@plt+0x62c>
   10dbc:	mov	r0, #6
   10dc0:	bl	10d40 <setlocale@plt>
   10dc4:	mov	sl, #0
   10dc8:	ldr	r1, [pc, #1524]	; 113c4 <strspn@plt+0x630>
   10dcc:	ldr	r0, [pc, #1524]	; 113c8 <strspn@plt+0x634>
   10dd0:	ldr	r6, [pc, #1524]	; 113cc <strspn@plt+0x638>
   10dd4:	ldr	r5, [pc, #1524]	; 113d0 <strspn@plt+0x63c>
   10dd8:	bl	10d64 <bindtextdomain@plt>
   10ddc:	mov	r4, sl
   10de0:	ldr	r0, [pc, #1504]	; 113c8 <strspn@plt+0x634>
   10de4:	mov	r7, #1
   10de8:	bl	10c14 <textdomain@plt>
   10dec:	ldr	r0, [pc, #1504]	; 113d4 <strspn@plt+0x640>
   10df0:	bl	17414 <strspn@plt+0x6680>
   10df4:	str	sl, [sp, #20]
   10df8:	str	r4, [sp]
   10dfc:	mov	r3, r6
   10e00:	mov	r2, r5
   10e04:	mov	r1, fp
   10e08:	ldr	r0, [sp, #16]
   10e0c:	bl	10ca4 <getopt_long@plt>
   10e10:	cmn	r0, #1
   10e14:	beq	10ecc <strspn@plt+0x138>
   10e18:	cmp	r0, #80	; 0x50
   10e1c:	beq	10ec4 <strspn@plt+0x130>
   10e20:	bgt	10e3c <strspn@plt+0xa8>
   10e24:	cmn	r0, #3
   10e28:	beq	10e58 <strspn@plt+0xc4>
   10e2c:	cmn	r0, #2
   10e30:	bne	10ebc <strspn@plt+0x128>
   10e34:	mov	r0, #0
   10e38:	bl	1154c <strspn@plt+0x7b8>
   10e3c:	cmp	r0, #112	; 0x70
   10e40:	beq	10e94 <strspn@plt+0x100>
   10e44:	cmp	r0, #256	; 0x100
   10e48:	bne	10ebc <strspn@plt+0x128>
   10e4c:	mov	sl, r7
   10e50:	str	r7, [sp, #20]
   10e54:	b	10df8 <strspn@plt+0x64>
   10e58:	ldr	ip, [pc, #1400]	; 113d8 <strspn@plt+0x644>
   10e5c:	ldr	r1, [pc, #1400]	; 113dc <strspn@plt+0x648>
   10e60:	ldr	r3, [pc, #1400]	; 113e0 <strspn@plt+0x64c>
   10e64:	ldr	r0, [pc, #1400]	; 113e4 <strspn@plt+0x650>
   10e68:	ldr	r2, [pc, #1400]	; 113e8 <strspn@plt+0x654>
   10e6c:	str	r4, [sp, #12]
   10e70:	ldr	r0, [r0]
   10e74:	ldr	r3, [r3]
   10e78:	stmib	sp, {r1, ip}
   10e7c:	str	r2, [sp]
   10e80:	ldr	r1, [pc, #1380]	; 113ec <strspn@plt+0x658>
   10e84:	ldr	r2, [pc, #1380]	; 113f0 <strspn@plt+0x65c>
   10e88:	bl	1622c <strspn@plt+0x5498>
   10e8c:	mov	r0, #0
   10e90:	bl	10cbc <exit@plt>
   10e94:	str	r7, [sp, #20]
   10e98:	b	10df8 <strspn@plt+0x64>
   10e9c:	mov	r2, #5
   10ea0:	ldr	r1, [pc, #1356]	; 113f4 <strspn@plt+0x660>
   10ea4:	mov	r0, #0
   10ea8:	bl	10bfc <dcgettext@plt>
   10eac:	mov	r1, #0
   10eb0:	mov	r2, r0
   10eb4:	mov	r0, r1
   10eb8:	bl	10c68 <error@plt>
   10ebc:	mov	r0, #1
   10ec0:	bl	1154c <strspn@plt+0x7b8>
   10ec4:	mov	sl, r7
   10ec8:	b	10df8 <strspn@plt+0x64>
   10ecc:	ldr	r3, [pc, #1316]	; 113f8 <strspn@plt+0x664>
   10ed0:	ldr	r2, [sp, #16]
   10ed4:	ldr	r3, [r3]
   10ed8:	cmp	r2, r3
   10edc:	beq	10e9c <strspn@plt+0x108>
   10ee0:	mov	r3, #1
   10ee4:	str	r0, [sp, #36]	; 0x24
   10ee8:	str	r3, [sp, #24]
   10eec:	str	sl, [sp, #28]
   10ef0:	str	fp, [sp, #32]
   10ef4:	ldr	r3, [pc, #1276]	; 113f8 <strspn@plt+0x664>
   10ef8:	ldr	r2, [sp, #16]
   10efc:	ldr	r3, [r3]
   10f00:	cmp	r2, r3
   10f04:	ble	1137c <strspn@plt+0x5e8>
   10f08:	ldr	r2, [sp, #32]
   10f0c:	ldr	r7, [r2, r3, lsl #2]
   10f10:	mov	r0, r7
   10f14:	bl	10cc8 <strlen@plt>
   10f18:	ldr	r3, [sp, #28]
   10f1c:	cmp	r3, #0
   10f20:	movne	r5, #45	; 0x2d
   10f24:	mov	r4, r0
   10f28:	movne	r0, r7
   10f2c:	bne	11164 <strspn@plt+0x3d0>
   10f30:	ldr	r3, [sp, #20]
   10f34:	cmp	r3, #0
   10f38:	bne	11200 <strspn@plt+0x46c>
   10f3c:	add	r2, sp, #40	; 0x28
   10f40:	mov	r1, r7
   10f44:	mov	r0, #3
   10f48:	bl	10d88 <__lxstat64@plt>
   10f4c:	cmp	r0, #0
   10f50:	beq	1124c <strspn@plt+0x4b8>
   10f54:	bl	10ce0 <__errno_location@plt>
   10f58:	clz	r6, r4
   10f5c:	lsr	r6, r6, #5
   10f60:	ldr	r5, [r0]
   10f64:	cmp	r5, #2
   10f68:	orrne	r6, r6, #1
   10f6c:	cmp	r6, #0
   10f70:	bne	11314 <strspn@plt+0x580>
   10f74:	cmp	r4, #255	; 0xff
   10f78:	bls	10fc0 <strspn@plt+0x22c>
   10f7c:	ldrb	r5, [r7]
   10f80:	ldr	r2, [pc, #1140]	; 113fc <strspn@plt+0x668>
   10f84:	ldr	r3, [pc, #1140]	; 11400 <strspn@plt+0x66c>
   10f88:	cmp	r5, #47	; 0x2f
   10f8c:	moveq	r3, r2
   10f90:	mov	r5, r3
   10f94:	bl	10ce0 <__errno_location@plt>
   10f98:	mov	r1, #4
   10f9c:	str	r6, [r0]
   10fa0:	mov	r8, r0
   10fa4:	mov	r0, r5
   10fa8:	bl	10b9c <pathconf@plt>
   10fac:	cmp	r0, #0
   10fb0:	blt	1138c <strspn@plt+0x5f8>
   10fb4:	cmp	r4, r0
   10fb8:	mov	r5, r0
   10fbc:	bcs	111b4 <strspn@plt+0x420>
   10fc0:	mov	r3, r7
   10fc4:	ldrb	r2, [r3]
   10fc8:	cmp	r2, #47	; 0x2f
   10fcc:	bne	10fdc <strspn@plt+0x248>
   10fd0:	ldrb	r2, [r3, #1]!
   10fd4:	cmp	r2, #47	; 0x2f
   10fd8:	beq	10fd0 <strspn@plt+0x23c>
   10fdc:	cmp	r2, #0
   10fe0:	beq	1124c <strspn@plt+0x4b8>
   10fe4:	ldrb	r2, [r3, #1]
   10fe8:	cmp	r2, #0
   10fec:	cmpne	r2, #47	; 0x2f
   10ff0:	addeq	r3, r3, #1
   10ff4:	beq	10fc4 <strspn@plt+0x230>
   10ff8:	add	r1, r3, #2
   10ffc:	mov	r0, #1
   11000:	mov	r3, r1
   11004:	ldrb	r2, [r1], #1
   11008:	add	r0, r0, #1
   1100c:	cmp	r2, #47	; 0x2f
   11010:	cmpne	r2, #0
   11014:	movne	r2, #1
   11018:	moveq	r2, #0
   1101c:	bne	11000 <strspn@plt+0x26c>
   11020:	cmp	r0, #14
   11024:	bls	10fc4 <strspn@plt+0x230>
   11028:	mov	r6, r2
   1102c:	ldrb	r4, [r7]
   11030:	mov	r2, r7
   11034:	mov	fp, #14
   11038:	mov	sl, #0
   1103c:	cmp	r4, #47	; 0x2f
   11040:	mov	r5, r2
   11044:	bne	11054 <strspn@plt+0x2c0>
   11048:	ldrb	r4, [r5, #1]!
   1104c:	cmp	r4, #47	; 0x2f
   11050:	beq	11048 <strspn@plt+0x2b4>
   11054:	cmp	r4, #0
   11058:	beq	1124c <strspn@plt+0x4b8>
   1105c:	cmp	r6, #0
   11060:	bne	111f8 <strspn@plt+0x464>
   11064:	bl	10ce0 <__errno_location@plt>
   11068:	ldr	r9, [pc, #912]	; 11400 <strspn@plt+0x66c>
   1106c:	cmp	r7, r5
   11070:	movne	r9, r7
   11074:	mov	r1, #3
   11078:	str	sl, [r0]
   1107c:	mov	r8, r0
   11080:	strb	sl, [r5]
   11084:	mov	r0, r9
   11088:	bl	10b9c <pathconf@plt>
   1108c:	strb	r4, [r5]
   11090:	cmp	r0, #0
   11094:	movge	fp, r0
   11098:	blt	11230 <strspn@plt+0x49c>
   1109c:	ldrb	r4, [r5, #1]
   110a0:	cmp	r4, #47	; 0x2f
   110a4:	cmpne	r4, #0
   110a8:	addeq	r9, r5, #1
   110ac:	moveq	r8, #1
   110b0:	beq	110d4 <strspn@plt+0x340>
   110b4:	add	r3, r5, #2
   110b8:	mov	r8, #1
   110bc:	mov	r9, r3
   110c0:	ldrb	r4, [r3], #1
   110c4:	add	r8, r8, #1
   110c8:	cmp	r4, #47	; 0x2f
   110cc:	cmpne	r4, #0
   110d0:	bne	110bc <strspn@plt+0x328>
   110d4:	cmp	fp, r8
   110d8:	mov	r2, r9
   110dc:	bcs	1103c <strspn@plt+0x2a8>
   110e0:	mov	r7, #0
   110e4:	mov	r2, #5
   110e8:	ldr	r1, [pc, #788]	; 11404 <strspn@plt+0x670>
   110ec:	strb	r7, [r9]
   110f0:	mov	r0, r7
   110f4:	bl	10bfc <dcgettext@plt>
   110f8:	mov	r6, r0
   110fc:	mov	r0, r5
   11100:	bl	15858 <strspn@plt+0x4ac4>
   11104:	mov	r2, r6
   11108:	mov	r6, r7
   1110c:	str	r8, [sp]
   11110:	mov	r3, fp
   11114:	mov	r1, r7
   11118:	str	r0, [sp, #4]
   1111c:	mov	r0, r7
   11120:	bl	10c68 <error@plt>
   11124:	strb	r4, [r9]
   11128:	ldr	r2, [sp, #24]
   1112c:	ldr	r3, [pc, #708]	; 113f8 <strspn@plt+0x664>
   11130:	and	r2, r2, r6
   11134:	str	r2, [sp, #24]
   11138:	ldr	r3, [r3]
   1113c:	ldr	r2, [pc, #692]	; 113f8 <strspn@plt+0x664>
   11140:	add	r3, r3, #1
   11144:	str	r3, [r2]
   11148:	b	10ef4 <strspn@plt+0x160>
   1114c:	cmp	r7, r0
   11150:	beq	11254 <strspn@plt+0x4c0>
   11154:	ldrb	r3, [r0, #-1]
   11158:	cmp	r3, #47	; 0x2f
   1115c:	beq	11254 <strspn@plt+0x4c0>
   11160:	add	r0, r0, #1
   11164:	mov	r1, r5
   11168:	bl	10cd4 <strchr@plt>
   1116c:	cmp	r0, #0
   11170:	bne	1114c <strspn@plt+0x3b8>
   11174:	cmp	r4, #0
   11178:	beq	11208 <strspn@plt+0x474>
   1117c:	ldr	r3, [sp, #20]
   11180:	cmp	r3, #0
   11184:	beq	10f3c <strspn@plt+0x1a8>
   11188:	ldr	r1, [pc, #632]	; 11408 <strspn@plt+0x674>
   1118c:	mov	r0, r7
   11190:	bl	10d94 <strspn@plt>
   11194:	ldrb	r3, [r7, r0]
   11198:	add	r5, r7, r0
   1119c:	cmp	r3, #0
   111a0:	bne	11290 <strspn@plt+0x4fc>
   111a4:	cmp	r4, #255	; 0xff
   111a8:	movls	r6, #14
   111ac:	bls	1102c <strspn@plt+0x298>
   111b0:	mov	r5, #256	; 0x100
   111b4:	mov	r2, #5
   111b8:	ldr	r1, [pc, #588]	; 1140c <strspn@plt+0x678>
   111bc:	mov	r0, #0
   111c0:	bl	10bfc <dcgettext@plt>
   111c4:	mov	r1, r7
   111c8:	mov	r6, r0
   111cc:	mov	r0, #4
   111d0:	bl	13ee8 <strspn@plt+0x3154>
   111d4:	mov	r1, #0
   111d8:	mov	r2, r6
   111dc:	str	r4, [sp]
   111e0:	sub	r3, r5, #1
   111e4:	mov	r6, r1
   111e8:	str	r0, [sp, #4]
   111ec:	mov	r0, r1
   111f0:	bl	10c68 <error@plt>
   111f4:	b	11128 <strspn@plt+0x394>
   111f8:	mov	fp, r6
   111fc:	b	1109c <strspn@plt+0x308>
   11200:	cmp	r4, #0
   11204:	bne	11188 <strspn@plt+0x3f4>
   11208:	mov	r2, #5
   1120c:	ldr	r1, [pc, #508]	; 11410 <strspn@plt+0x67c>
   11210:	mov	r0, #0
   11214:	bl	10bfc <dcgettext@plt>
   11218:	mov	r1, #0
   1121c:	mov	r6, #0
   11220:	mov	r2, r0
   11224:	mov	r0, r1
   11228:	bl	10c68 <error@plt>
   1122c:	b	11128 <strspn@plt+0x394>
   11230:	ldr	r3, [r8]
   11234:	cmp	r3, #0
   11238:	beq	11374 <strspn@plt+0x5e0>
   1123c:	cmp	r3, #2
   11240:	bne	11340 <strspn@plt+0x5ac>
   11244:	mov	r6, fp
   11248:	b	1109c <strspn@plt+0x308>
   1124c:	mov	r6, #1
   11250:	b	11128 <strspn@plt+0x394>
   11254:	mov	r2, #5
   11258:	ldr	r1, [pc, #436]	; 11414 <strspn@plt+0x680>
   1125c:	mov	r0, #0
   11260:	bl	10bfc <dcgettext@plt>
   11264:	mov	r1, r7
   11268:	mov	r6, #0
   1126c:	mov	r4, r0
   11270:	mov	r0, #4
   11274:	bl	13ee8 <strspn@plt+0x3154>
   11278:	mov	r1, #0
   1127c:	mov	r2, r4
   11280:	mov	r3, r0
   11284:	mov	r0, r1
   11288:	bl	10c68 <error@plt>
   1128c:	b	11128 <strspn@plt+0x394>
   11290:	sub	r1, r4, r0
   11294:	add	r2, sp, #40	; 0x28
   11298:	mov	r4, #0
   1129c:	mov	r0, r5
   112a0:	str	r4, [sp, #40]	; 0x28
   112a4:	str	r4, [sp, #44]	; 0x2c
   112a8:	bl	11918 <strspn@plt+0xb84>
   112ac:	mov	r2, #5
   112b0:	ldr	r1, [pc, #352]	; 11418 <strspn@plt+0x684>
   112b4:	mov	r8, r0
   112b8:	mov	r0, r4
   112bc:	bl	10bfc <dcgettext@plt>
   112c0:	cmp	r8, #16
   112c4:	movls	r3, r8
   112c8:	movhi	r3, #1
   112cc:	mov	r2, r5
   112d0:	mov	r1, #8
   112d4:	mov	r6, r0
   112d8:	mov	r0, #1
   112dc:	bl	13cf4 <strspn@plt+0x2f60>
   112e0:	mov	r2, r7
   112e4:	mov	r1, #4
   112e8:	mov	r5, r0
   112ec:	mov	r0, r4
   112f0:	bl	13b08 <strspn@plt+0x2d74>
   112f4:	mov	r2, r6
   112f8:	mov	r3, r5
   112fc:	mov	r1, r4
   11300:	mov	r6, r4
   11304:	str	r0, [sp]
   11308:	mov	r0, r4
   1130c:	bl	10c68 <error@plt>
   11310:	b	11128 <strspn@plt+0x394>
   11314:	mov	r2, r7
   11318:	mov	r1, #3
   1131c:	mov	r0, #0
   11320:	bl	14964 <strspn@plt+0x3bd0>
   11324:	mov	r1, r5
   11328:	ldr	r2, [pc, #236]	; 1141c <strspn@plt+0x688>
   1132c:	mov	r6, #0
   11330:	mov	r3, r0
   11334:	mov	r0, #0
   11338:	bl	10c68 <error@plt>
   1133c:	b	11128 <strspn@plt+0x394>
   11340:	strb	sl, [r5]
   11344:	mov	r2, r9
   11348:	mov	r1, #3
   1134c:	mov	r0, r6
   11350:	ldr	r7, [r8]
   11354:	bl	14964 <strspn@plt+0x3bd0>
   11358:	mov	r1, r7
   1135c:	ldr	r2, [pc, #184]	; 1141c <strspn@plt+0x688>
   11360:	mov	r3, r0
   11364:	mov	r0, r6
   11368:	bl	10c68 <error@plt>
   1136c:	strb	r4, [r5]
   11370:	b	11128 <strspn@plt+0x394>
   11374:	ldr	fp, [sp, #36]	; 0x24
   11378:	b	1109c <strspn@plt+0x308>
   1137c:	ldr	r3, [sp, #24]
   11380:	eor	r0, r3, #1
   11384:	add	sp, sp, #148	; 0x94
   11388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1138c:	ldr	r8, [r8]
   11390:	cmp	r8, #0
   11394:	beq	10fb4 <strspn@plt+0x220>
   11398:	mov	r2, #5
   1139c:	ldr	r1, [pc, #124]	; 11420 <strspn@plt+0x68c>
   113a0:	mov	r0, r6
   113a4:	bl	10bfc <dcgettext@plt>
   113a8:	mov	r3, r5
   113ac:	mov	r1, r8
   113b0:	mov	r2, r0
   113b4:	mov	r0, r6
   113b8:	bl	10c68 <error@plt>
   113bc:	b	11128 <strspn@plt+0x394>
   113c0:	andeq	r7, r1, r0, lsl r6
   113c4:	andeq	r7, r1, r0, asr #14
   113c8:	muleq	r1, r0, r6
   113cc:	andeq	r7, r1, r0, ror r4
   113d0:	andeq	r7, r1, r4, lsl #15
   113d4:	andeq	r1, r1, r4, lsr r8
   113d8:	andeq	r7, r1, r8, asr r7
   113dc:	andeq	r7, r1, r8, ror #14
   113e0:	ldrdeq	r8, [r2], -r4
   113e4:	andeq	r8, r2, r4, lsr r1
   113e8:	andeq	r7, r1, r8, ror r7
   113ec:			; <UNDEFINED> instruction: 0x000174b0
   113f0:	andeq	r7, r1, ip, lsl #13
   113f4:	andeq	r7, r1, r8, lsl #15
   113f8:	andeq	r8, r2, r8, lsr #2
   113fc:	andeq	r7, r1, r8, lsr r7
   11400:	andeq	r7, r1, ip, lsr r7
   11404:	andeq	r7, r1, ip, lsr #17
   11408:	ldrdeq	r7, [r1], -r4
   1140c:	andeq	r7, r1, r8, ror r8
   11410:	andeq	r7, r1, r4, asr #15
   11414:	muleq	r1, r8, r7
   11418:	andeq	r7, r1, r8, lsl r8
   1141c:	muleq	r1, r0, r9
   11420:	andeq	r7, r1, r4, asr #16
   11424:	mov	fp, #0
   11428:	mov	lr, #0
   1142c:	pop	{r1}		; (ldr r1, [sp], #4)
   11430:	mov	r2, sp
   11434:	push	{r2}		; (str r2, [sp, #-4]!)
   11438:	push	{r0}		; (str r0, [sp, #-4]!)
   1143c:	ldr	ip, [pc, #16]	; 11454 <strspn@plt+0x6c0>
   11440:	push	{ip}		; (str ip, [sp, #-4]!)
   11444:	ldr	r0, [pc, #12]	; 11458 <strspn@plt+0x6c4>
   11448:	ldr	r3, [pc, #12]	; 1145c <strspn@plt+0x6c8>
   1144c:	bl	10c80 <__libc_start_main@plt>
   11450:	bl	10d7c <abort@plt>
   11454:	andeq	r7, r1, r0, lsl r4
   11458:	andeq	r0, r1, r0, lsr #27
   1145c:			; <UNDEFINED> instruction: 0x000173b0
   11460:	ldr	r3, [pc, #20]	; 1147c <strspn@plt+0x6e8>
   11464:	ldr	r2, [pc, #20]	; 11480 <strspn@plt+0x6ec>
   11468:	add	r3, pc, r3
   1146c:	ldr	r2, [r3, r2]
   11470:	cmp	r2, #0
   11474:	bxeq	lr
   11478:	b	10c98 <__gmon_start__@plt>
   1147c:	muleq	r1, r0, fp
   11480:	andeq	r0, r0, r8, asr #1
   11484:	ldr	r3, [pc, #28]	; 114a8 <strspn@plt+0x714>
   11488:	ldr	r0, [pc, #28]	; 114ac <strspn@plt+0x718>
   1148c:	sub	r3, r3, r0
   11490:	cmp	r3, #6
   11494:	bxls	lr
   11498:	ldr	r3, [pc, #16]	; 114b0 <strspn@plt+0x71c>
   1149c:	cmp	r3, #0
   114a0:	bxeq	lr
   114a4:	bx	r3
   114a8:	andeq	r8, r2, pc, lsl r1
   114ac:	andeq	r8, r2, ip, lsl r1
   114b0:	andeq	r0, r0, r0
   114b4:	ldr	r1, [pc, #36]	; 114e0 <strspn@plt+0x74c>
   114b8:	ldr	r0, [pc, #36]	; 114e4 <strspn@plt+0x750>
   114bc:	sub	r1, r1, r0
   114c0:	asr	r1, r1, #2
   114c4:	add	r1, r1, r1, lsr #31
   114c8:	asrs	r1, r1, #1
   114cc:	bxeq	lr
   114d0:	ldr	r3, [pc, #16]	; 114e8 <strspn@plt+0x754>
   114d4:	cmp	r3, #0
   114d8:	bxeq	lr
   114dc:	bx	r3
   114e0:	andeq	r8, r2, ip, lsl r1
   114e4:	andeq	r8, r2, ip, lsl r1
   114e8:	andeq	r0, r0, r0
   114ec:	push	{r4, lr}
   114f0:	ldr	r4, [pc, #24]	; 11510 <strspn@plt+0x77c>
   114f4:	ldrb	r3, [r4]
   114f8:	cmp	r3, #0
   114fc:	popne	{r4, pc}
   11500:	bl	11484 <strspn@plt+0x6f0>
   11504:	mov	r3, #1
   11508:	strb	r3, [r4]
   1150c:	pop	{r4, pc}
   11510:	andeq	r8, r2, r8, lsr r1
   11514:	ldr	r0, [pc, #40]	; 11544 <strspn@plt+0x7b0>
   11518:	ldr	r3, [r0]
   1151c:	cmp	r3, #0
   11520:	bne	11528 <strspn@plt+0x794>
   11524:	b	114b4 <strspn@plt+0x720>
   11528:	ldr	r3, [pc, #24]	; 11548 <strspn@plt+0x7b4>
   1152c:	cmp	r3, #0
   11530:	beq	11524 <strspn@plt+0x790>
   11534:	push	{r4, lr}
   11538:	blx	r3
   1153c:	pop	{r4, lr}
   11540:	b	114b4 <strspn@plt+0x720>
   11544:	andeq	r7, r2, r4, lsl pc
   11548:	andeq	r0, r0, r0
   1154c:	subs	r6, r0, #0
   11550:	push	{r7, lr}
   11554:	sub	sp, sp, #56	; 0x38
   11558:	beq	11594 <strspn@plt+0x800>
   1155c:	ldr	r3, [pc, #612]	; 117c8 <strspn@plt+0xa34>
   11560:	mov	r2, #5
   11564:	ldr	r1, [pc, #608]	; 117cc <strspn@plt+0xa38>
   11568:	mov	r0, #0
   1156c:	ldr	r4, [r3]
   11570:	bl	10bfc <dcgettext@plt>
   11574:	ldr	r3, [pc, #596]	; 117d0 <strspn@plt+0xa3c>
   11578:	mov	r1, #1
   1157c:	ldr	r3, [r3]
   11580:	mov	r2, r0
   11584:	mov	r0, r4
   11588:	bl	10d1c <__fprintf_chk@plt>
   1158c:	mov	r0, r6
   11590:	bl	10cbc <exit@plt>
   11594:	mov	r2, #5
   11598:	ldr	r1, [pc, #564]	; 117d4 <strspn@plt+0xa40>
   1159c:	bl	10bfc <dcgettext@plt>
   115a0:	ldr	r3, [pc, #552]	; 117d0 <strspn@plt+0xa3c>
   115a4:	ldr	r7, [pc, #556]	; 117d8 <strspn@plt+0xa44>
   115a8:	ldr	r4, [pc, #556]	; 117dc <strspn@plt+0xa48>
   115ac:	ldr	r2, [r3]
   115b0:	mov	r1, r0
   115b4:	mov	r0, #1
   115b8:	bl	10d04 <__printf_chk@plt>
   115bc:	mov	r2, #5
   115c0:	ldr	r1, [pc, #536]	; 117e0 <strspn@plt+0xa4c>
   115c4:	mov	r0, r6
   115c8:	bl	10bfc <dcgettext@plt>
   115cc:	ldr	r1, [r7]
   115d0:	bl	10b78 <fputs_unlocked@plt>
   115d4:	mov	r2, #5
   115d8:	ldr	r1, [pc, #516]	; 117e4 <strspn@plt+0xa50>
   115dc:	mov	r0, r6
   115e0:	bl	10bfc <dcgettext@plt>
   115e4:	ldr	r1, [r7]
   115e8:	bl	10b78 <fputs_unlocked@plt>
   115ec:	mov	r2, #5
   115f0:	ldr	r1, [pc, #496]	; 117e8 <strspn@plt+0xa54>
   115f4:	mov	r0, r6
   115f8:	bl	10bfc <dcgettext@plt>
   115fc:	ldr	r1, [r7]
   11600:	bl	10b78 <fputs_unlocked@plt>
   11604:	ldm	r4!, {r0, r1, r2, r3}
   11608:	mov	lr, sp
   1160c:	stmia	lr!, {r0, r1, r2, r3}
   11610:	ldm	r4!, {r0, r1, r2, r3}
   11614:	ldr	ip, [sp]
   11618:	stmia	lr!, {r0, r1, r2, r3}
   1161c:	cmp	ip, #0
   11620:	ldm	r4!, {r0, r1, r2, r3}
   11624:	stmia	lr!, {r0, r1, r2, r3}
   11628:	ldm	r4, {r0, r1}
   1162c:	moveq	r4, sp
   11630:	stm	lr, {r0, r1}
   11634:	beq	11664 <strspn@plt+0x8d0>
   11638:	ldr	r5, [pc, #428]	; 117ec <strspn@plt+0xa58>
   1163c:	mov	r4, sp
   11640:	b	11650 <strspn@plt+0x8bc>
   11644:	ldr	ip, [r4, #8]!
   11648:	cmp	ip, #0
   1164c:	beq	11664 <strspn@plt+0x8d0>
   11650:	mov	r1, ip
   11654:	mov	r0, r5
   11658:	bl	10b90 <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	bne	11644 <strspn@plt+0x8b0>
   11664:	ldr	r4, [r4, #4]
   11668:	mov	r2, #5
   1166c:	cmp	r4, #0
   11670:	ldr	r1, [pc, #376]	; 117f0 <strspn@plt+0xa5c>
   11674:	beq	1171c <strspn@plt+0x988>
   11678:	mov	r0, #0
   1167c:	bl	10bfc <dcgettext@plt>
   11680:	ldr	r3, [pc, #364]	; 117f4 <strspn@plt+0xa60>
   11684:	ldr	r2, [pc, #364]	; 117f8 <strspn@plt+0xa64>
   11688:	mov	r1, r0
   1168c:	mov	r0, #1
   11690:	bl	10d04 <__printf_chk@plt>
   11694:	mov	r1, #0
   11698:	mov	r0, #5
   1169c:	bl	10d40 <setlocale@plt>
   116a0:	cmp	r0, #0
   116a4:	ldreq	r5, [pc, #320]	; 117ec <strspn@plt+0xa58>
   116a8:	beq	116c4 <strspn@plt+0x930>
   116ac:	mov	r2, #3
   116b0:	ldr	r1, [pc, #324]	; 117fc <strspn@plt+0xa68>
   116b4:	bl	10d70 <strncmp@plt>
   116b8:	ldr	r5, [pc, #300]	; 117ec <strspn@plt+0xa58>
   116bc:	cmp	r0, #0
   116c0:	bne	117ac <strspn@plt+0xa18>
   116c4:	mov	r2, #5
   116c8:	ldr	r1, [pc, #304]	; 11800 <strspn@plt+0xa6c>
   116cc:	mov	r0, #0
   116d0:	bl	10bfc <dcgettext@plt>
   116d4:	ldr	r3, [pc, #272]	; 117ec <strspn@plt+0xa58>
   116d8:	ldr	r2, [pc, #276]	; 117f4 <strspn@plt+0xa60>
   116dc:	mov	r1, r0
   116e0:	mov	r0, #1
   116e4:	bl	10d04 <__printf_chk@plt>
   116e8:	mov	r2, #5
   116ec:	ldr	r1, [pc, #272]	; 11804 <strspn@plt+0xa70>
   116f0:	mov	r0, #0
   116f4:	bl	10bfc <dcgettext@plt>
   116f8:	ldr	r2, [pc, #264]	; 11808 <strspn@plt+0xa74>
   116fc:	cmp	r4, r5
   11700:	ldr	r3, [pc, #260]	; 1180c <strspn@plt+0xa78>
   11704:	movne	r3, r2
   11708:	mov	r1, r0
   1170c:	mov	r2, r4
   11710:	mov	r0, #1
   11714:	bl	10d04 <__printf_chk@plt>
   11718:	b	1158c <strspn@plt+0x7f8>
   1171c:	mov	r0, r4
   11720:	bl	10bfc <dcgettext@plt>
   11724:	ldr	r3, [pc, #200]	; 117f4 <strspn@plt+0xa60>
   11728:	ldr	r2, [pc, #200]	; 117f8 <strspn@plt+0xa64>
   1172c:	mov	r1, r0
   11730:	mov	r0, #1
   11734:	bl	10d04 <__printf_chk@plt>
   11738:	mov	r1, r4
   1173c:	mov	r0, #5
   11740:	bl	10d40 <setlocale@plt>
   11744:	cmp	r0, #0
   11748:	beq	11760 <strspn@plt+0x9cc>
   1174c:	mov	r2, #3
   11750:	ldr	r1, [pc, #164]	; 117fc <strspn@plt+0xa68>
   11754:	bl	10d70 <strncmp@plt>
   11758:	cmp	r0, #0
   1175c:	bne	117a4 <strspn@plt+0xa10>
   11760:	mov	r2, #5
   11764:	ldr	r1, [pc, #148]	; 11800 <strspn@plt+0xa6c>
   11768:	mov	r0, #0
   1176c:	bl	10bfc <dcgettext@plt>
   11770:	ldr	r3, [pc, #116]	; 117ec <strspn@plt+0xa58>
   11774:	ldr	r2, [pc, #120]	; 117f4 <strspn@plt+0xa60>
   11778:	mov	r4, r3
   1177c:	mov	r1, r0
   11780:	mov	r0, #1
   11784:	bl	10d04 <__printf_chk@plt>
   11788:	ldr	r1, [pc, #116]	; 11804 <strspn@plt+0xa70>
   1178c:	mov	r2, #5
   11790:	mov	r0, #0
   11794:	bl	10bfc <dcgettext@plt>
   11798:	ldr	r3, [pc, #108]	; 1180c <strspn@plt+0xa78>
   1179c:	mov	r1, r0
   117a0:	b	1170c <strspn@plt+0x978>
   117a4:	ldr	r5, [pc, #64]	; 117ec <strspn@plt+0xa58>
   117a8:	mov	r4, r5
   117ac:	mov	r2, #5
   117b0:	ldr	r1, [pc, #88]	; 11810 <strspn@plt+0xa7c>
   117b4:	mov	r0, #0
   117b8:	bl	10bfc <dcgettext@plt>
   117bc:	ldr	r1, [r7]
   117c0:	bl	10b78 <fputs_unlocked@plt>
   117c4:	b	116c4 <strspn@plt+0x930>
   117c8:	andeq	r8, r2, r0, lsr r1
   117cc:			; <UNDEFINED> instruction: 0x000174b8
   117d0:	andeq	r8, r2, ip, asr #2
   117d4:	andeq	r7, r1, r0, ror #9
   117d8:	andeq	r8, r2, r4, lsr r1
   117dc:	andeq	r7, r1, r8, lsr r4
   117e0:	andeq	r7, r1, r0, lsl #10
   117e4:	andeq	r7, r1, r4, ror #11
   117e8:	andeq	r7, r1, r4, lsl r6
   117ec:			; <UNDEFINED> instruction: 0x000174b0
   117f0:	andeq	r7, r1, ip, asr #12
   117f4:	andeq	r7, r1, r4, ror #12
   117f8:	andeq	r7, r1, ip, lsl #13
   117fc:	muleq	r1, ip, r6
   11800:	andeq	r7, r1, r8, ror #13
   11804:	andeq	r7, r1, r4, lsl #14
   11808:	andeq	r7, r1, r0, lsl r6
   1180c:	strdeq	r7, [r1], -r0
   11810:	andeq	r7, r1, r0, lsr #13
   11814:	ldr	r3, [pc, #4]	; 11820 <strspn@plt+0xa8c>
   11818:	str	r0, [r3]
   1181c:	bx	lr
   11820:	andeq	r8, r2, ip, lsr r1
   11824:	ldr	r3, [pc, #4]	; 11830 <strspn@plt+0xa9c>
   11828:	strb	r0, [r3, #4]
   1182c:	bx	lr
   11830:	andeq	r8, r2, ip, lsr r1
   11834:	ldr	r3, [pc, #192]	; 118fc <strspn@plt+0xb68>
   11838:	push	{r4, r5, r6, lr}
   1183c:	sub	sp, sp, #8
   11840:	ldr	r0, [r3]
   11844:	bl	16b6c <strspn@plt+0x5dd8>
   11848:	cmp	r0, #0
   1184c:	beq	11870 <strspn@plt+0xadc>
   11850:	ldr	r4, [pc, #168]	; 11900 <strspn@plt+0xb6c>
   11854:	ldrb	r3, [r4, #4]
   11858:	cmp	r3, #0
   1185c:	beq	1188c <strspn@plt+0xaf8>
   11860:	bl	10ce0 <__errno_location@plt>
   11864:	ldr	r3, [r0]
   11868:	cmp	r3, #32
   1186c:	bne	1188c <strspn@plt+0xaf8>
   11870:	ldr	r3, [pc, #140]	; 11904 <strspn@plt+0xb70>
   11874:	ldr	r0, [r3]
   11878:	bl	16b6c <strspn@plt+0x5dd8>
   1187c:	cmp	r0, #0
   11880:	bne	118d4 <strspn@plt+0xb40>
   11884:	add	sp, sp, #8
   11888:	pop	{r4, r5, r6, pc}
   1188c:	mov	r2, #5
   11890:	ldr	r1, [pc, #112]	; 11908 <strspn@plt+0xb74>
   11894:	mov	r0, #0
   11898:	bl	10bfc <dcgettext@plt>
   1189c:	ldr	r4, [r4]
   118a0:	cmp	r4, #0
   118a4:	mov	r5, r0
   118a8:	beq	118e0 <strspn@plt+0xb4c>
   118ac:	bl	10ce0 <__errno_location@plt>
   118b0:	ldr	r6, [r0]
   118b4:	mov	r0, r4
   118b8:	bl	145f8 <strspn@plt+0x3864>
   118bc:	mov	r1, r6
   118c0:	str	r5, [sp]
   118c4:	ldr	r2, [pc, #64]	; 1190c <strspn@plt+0xb78>
   118c8:	mov	r3, r0
   118cc:	mov	r0, #0
   118d0:	bl	10c68 <error@plt>
   118d4:	ldr	r3, [pc, #52]	; 11910 <strspn@plt+0xb7c>
   118d8:	ldr	r0, [r3]
   118dc:	bl	10bc0 <_exit@plt>
   118e0:	bl	10ce0 <__errno_location@plt>
   118e4:	mov	r3, r5
   118e8:	ldr	r2, [pc, #36]	; 11914 <strspn@plt+0xb80>
   118ec:	ldr	r1, [r0]
   118f0:	mov	r0, r4
   118f4:	bl	10c68 <error@plt>
   118f8:	b	118d4 <strspn@plt+0xb40>
   118fc:	andeq	r8, r2, r4, lsr r1
   11900:	andeq	r8, r2, ip, lsr r1
   11904:	andeq	r8, r2, r0, lsr r1
   11908:	andeq	r7, r1, r0, lsl #19
   1190c:	andeq	r7, r1, ip, lsl #19
   11910:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   11914:	muleq	r1, r0, r9
   11918:	cmp	r2, #0
   1191c:	ldr	r3, [pc, #16]	; 11934 <strspn@plt+0xba0>
   11920:	movne	r3, r2
   11924:	mov	r2, r1
   11928:	mov	r1, r0
   1192c:	mov	r0, #0
   11930:	b	11938 <strspn@plt+0xba4>
   11934:	andeq	r8, r2, r4, asr #2
   11938:	push	{r4, r5, r6, r7, lr}
   1193c:	subs	r6, r0, #0
   11940:	sub	sp, sp, #12
   11944:	addeq	r6, sp, #4
   11948:	mov	r0, r6
   1194c:	mov	r5, r2
   11950:	mov	r7, r1
   11954:	bl	10c5c <mbrtowc@plt>
   11958:	cmp	r5, #0
   1195c:	cmnne	r0, #3
   11960:	mov	r4, r0
   11964:	bls	11980 <strspn@plt+0xbec>
   11968:	mov	r0, #0
   1196c:	bl	16de0 <strspn@plt+0x604c>
   11970:	cmp	r0, #0
   11974:	moveq	r4, #1
   11978:	ldrbeq	r3, [r7]
   1197c:	streq	r3, [r6]
   11980:	mov	r0, r4
   11984:	add	sp, sp, #12
   11988:	pop	{r4, r5, r6, r7, pc}
   1198c:	push	{r4, r5, r6, lr}
   11990:	subs	r4, r0, #0
   11994:	beq	11a08 <strspn@plt+0xc74>
   11998:	mov	r1, #47	; 0x2f
   1199c:	bl	10d4c <strrchr@plt>
   119a0:	subs	r5, r0, #0
   119a4:	beq	119f4 <strspn@plt+0xc60>
   119a8:	add	r6, r5, #1
   119ac:	sub	r3, r6, r4
   119b0:	cmp	r3, #6
   119b4:	ble	119f4 <strspn@plt+0xc60>
   119b8:	mov	r2, #7
   119bc:	ldr	r1, [pc, #96]	; 11a24 <strspn@plt+0xc90>
   119c0:	sub	r0, r5, #6
   119c4:	bl	10d70 <strncmp@plt>
   119c8:	cmp	r0, #0
   119cc:	bne	119f4 <strspn@plt+0xc60>
   119d0:	mov	r2, #3
   119d4:	ldr	r1, [pc, #76]	; 11a28 <strspn@plt+0xc94>
   119d8:	mov	r0, r6
   119dc:	bl	10d70 <strncmp@plt>
   119e0:	cmp	r0, #0
   119e4:	movne	r4, r6
   119e8:	ldreq	r3, [pc, #60]	; 11a2c <strspn@plt+0xc98>
   119ec:	addeq	r4, r5, #4
   119f0:	streq	r4, [r3]
   119f4:	ldr	r2, [pc, #52]	; 11a30 <strspn@plt+0xc9c>
   119f8:	ldr	r3, [pc, #52]	; 11a34 <strspn@plt+0xca0>
   119fc:	str	r4, [r2]
   11a00:	str	r4, [r3]
   11a04:	pop	{r4, r5, r6, pc}
   11a08:	ldr	r3, [pc, #40]	; 11a38 <strspn@plt+0xca4>
   11a0c:	mov	r2, #55	; 0x37
   11a10:	mov	r1, #1
   11a14:	ldr	r3, [r3]
   11a18:	ldr	r0, [pc, #28]	; 11a3c <strspn@plt+0xca8>
   11a1c:	bl	10c2c <fwrite@plt>
   11a20:	bl	10d7c <abort@plt>
   11a24:	andeq	r7, r1, ip, asr #19
   11a28:	ldrdeq	r7, [r1], -r4
   11a2c:	andeq	r8, r2, r0, lsr #2
   11a30:	andeq	r8, r2, ip, asr #2
   11a34:	andeq	r8, r2, r4, lsr #2
   11a38:	andeq	r8, r2, r0, lsr r1
   11a3c:	muleq	r1, r4, r9
   11a40:	push	{r4, r5, r6, lr}
   11a44:	mov	r4, r0
   11a48:	mov	r5, r1
   11a4c:	bl	16e3c <strspn@plt+0x60a8>
   11a50:	ldrb	r3, [r0]
   11a54:	bic	r3, r3, #32
   11a58:	cmp	r3, #85	; 0x55
   11a5c:	bne	11abc <strspn@plt+0xd28>
   11a60:	ldrb	r3, [r0, #1]
   11a64:	bic	r3, r3, #32
   11a68:	cmp	r3, #84	; 0x54
   11a6c:	bne	11af8 <strspn@plt+0xd64>
   11a70:	ldrb	r3, [r0, #2]
   11a74:	bic	r3, r3, #32
   11a78:	cmp	r3, #70	; 0x46
   11a7c:	bne	11af8 <strspn@plt+0xd64>
   11a80:	ldrb	r3, [r0, #3]
   11a84:	cmp	r3, #45	; 0x2d
   11a88:	bne	11af8 <strspn@plt+0xd64>
   11a8c:	ldrb	r3, [r0, #4]
   11a90:	cmp	r3, #56	; 0x38
   11a94:	bne	11af8 <strspn@plt+0xd64>
   11a98:	ldrb	r3, [r0, #5]
   11a9c:	cmp	r3, #0
   11aa0:	bne	11af8 <strspn@plt+0xd64>
   11aa4:	ldrb	r2, [r4]
   11aa8:	ldr	r3, [pc, #152]	; 11b48 <strspn@plt+0xdb4>
   11aac:	ldr	r0, [pc, #152]	; 11b4c <strspn@plt+0xdb8>
   11ab0:	cmp	r2, #96	; 0x60
   11ab4:	movne	r0, r3
   11ab8:	pop	{r4, r5, r6, pc}
   11abc:	cmp	r3, #71	; 0x47
   11ac0:	bne	11af8 <strspn@plt+0xd64>
   11ac4:	ldrb	r3, [r0, #1]
   11ac8:	bic	r3, r3, #32
   11acc:	cmp	r3, #66	; 0x42
   11ad0:	bne	11af8 <strspn@plt+0xd64>
   11ad4:	ldrb	r3, [r0, #2]
   11ad8:	cmp	r3, #49	; 0x31
   11adc:	bne	11af8 <strspn@plt+0xd64>
   11ae0:	ldrb	r3, [r0, #3]
   11ae4:	cmp	r3, #56	; 0x38
   11ae8:	bne	11af8 <strspn@plt+0xd64>
   11aec:	ldrb	r3, [r0, #4]
   11af0:	cmp	r3, #48	; 0x30
   11af4:	beq	11b0c <strspn@plt+0xd78>
   11af8:	ldr	r3, [pc, #80]	; 11b50 <strspn@plt+0xdbc>
   11afc:	cmp	r5, #9
   11b00:	ldr	r0, [pc, #76]	; 11b54 <strspn@plt+0xdc0>
   11b04:	movne	r0, r3
   11b08:	pop	{r4, r5, r6, pc}
   11b0c:	ldrb	r3, [r0, #5]
   11b10:	cmp	r3, #51	; 0x33
   11b14:	bne	11af8 <strspn@plt+0xd64>
   11b18:	ldrb	r3, [r0, #6]
   11b1c:	cmp	r3, #48	; 0x30
   11b20:	bne	11af8 <strspn@plt+0xd64>
   11b24:	ldrb	r3, [r0, #7]
   11b28:	cmp	r3, #0
   11b2c:	bne	11af8 <strspn@plt+0xd64>
   11b30:	ldrb	r2, [r4]
   11b34:	ldr	r3, [pc, #28]	; 11b58 <strspn@plt+0xdc4>
   11b38:	ldr	r0, [pc, #28]	; 11b5c <strspn@plt+0xdc8>
   11b3c:	cmp	r2, #96	; 0x60
   11b40:	movne	r0, r3
   11b44:	pop	{r4, r5, r6, pc}
   11b48:	andeq	r7, r1, r0, lsr sl
   11b4c:	andeq	r7, r1, ip, lsr #20
   11b50:	andeq	r7, r1, r0, asr #20
   11b54:	andeq	r7, r1, ip, lsr sl
   11b58:	andeq	r7, r1, r8, lsr sl
   11b5c:	andeq	r7, r1, r4, lsr sl
   11b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b64:	sub	sp, sp, #140	; 0x8c
   11b68:	mov	r9, r1
   11b6c:	str	r3, [sp, #24]
   11b70:	mov	r3, #1
   11b74:	mov	sl, r0
   11b78:	str	r2, [sp, #44]	; 0x2c
   11b7c:	str	r3, [sp, #28]
   11b80:	bl	10c44 <__ctype_get_mb_cur_max@plt>
   11b84:	ldr	r3, [sp, #180]	; 0xb4
   11b88:	mov	fp, r9
   11b8c:	mov	r9, sl
   11b90:	lsr	r3, r3, #1
   11b94:	and	r3, r3, #1
   11b98:	str	r3, [sp, #40]	; 0x28
   11b9c:	ldr	r3, [sp, #180]	; 0xb4
   11ba0:	mov	r2, #0
   11ba4:	and	r3, r3, #4
   11ba8:	str	r3, [sp, #100]	; 0x64
   11bac:	ldr	r3, [sp, #180]	; 0xb4
   11bb0:	str	r2, [sp, #76]	; 0x4c
   11bb4:	and	r3, r3, #1
   11bb8:	str	r3, [sp, #96]	; 0x60
   11bbc:	str	r2, [sp, #36]	; 0x24
   11bc0:	str	r2, [sp, #56]	; 0x38
   11bc4:	str	r2, [sp, #68]	; 0x44
   11bc8:	str	r2, [sp, #72]	; 0x48
   11bcc:	str	r2, [sp, #84]	; 0x54
   11bd0:	str	r0, [sp, #80]	; 0x50
   11bd4:	ldr	r3, [sp, #176]	; 0xb0
   11bd8:	cmp	r3, #10
   11bdc:	ldrls	pc, [pc, r3, lsl #2]
   11be0:	b	12db8 <strspn@plt+0x2024>
   11be4:	andeq	r1, r1, r0, lsl ip
   11be8:	andeq	r1, r1, r0, lsr pc
   11bec:	andeq	r2, r1, r8, lsl #1
   11bf0:	andeq	r1, r1, r4, ror #30
   11bf4:	ldrdeq	r2, [r1], -ip
   11bf8:	strheq	r2, [r1], -ip
   11bfc:	andeq	r1, r1, r4, lsl #31
   11c00:	andeq	r1, r1, r8, lsr #31
   11c04:	ldrdeq	r1, [r1], -r0
   11c08:	ldrdeq	r1, [r1], -r0
   11c0c:	ldrdeq	r1, [r1], -r0
   11c10:	mov	r3, #0
   11c14:	ldr	r1, [sp, #56]	; 0x38
   11c18:	ldr	r2, [sp, #176]	; 0xb0
   11c1c:	ldr	lr, [sp, #176]	; 0xb0
   11c20:	mov	r8, r3
   11c24:	mov	ip, r3
   11c28:	str	r3, [sp, #40]	; 0x28
   11c2c:	mov	r3, r1
   11c30:	cmp	r2, #2
   11c34:	moveq	r3, #0
   11c38:	andne	r3, r3, #1
   11c3c:	mov	r0, r3
   11c40:	str	r3, [sp, #92]	; 0x5c
   11c44:	ldr	r3, [sp, #68]	; 0x44
   11c48:	sub	lr, lr, #2
   11c4c:	adds	r2, r3, #0
   11c50:	movne	r2, #1
   11c54:	and	r3, r1, ip
   11c58:	and	r3, r2, r3
   11c5c:	clz	lr, lr
   11c60:	str	r3, [sp, #88]	; 0x58
   11c64:	lsr	lr, lr, #5
   11c68:	mov	r3, ip
   11c6c:	and	r3, r3, lr
   11c70:	mov	sl, #0
   11c74:	and	r0, r2, r0
   11c78:	str	r3, [sp, #64]	; 0x40
   11c7c:	eor	r3, r1, #1
   11c80:	str	lr, [sp, #52]	; 0x34
   11c84:	str	r0, [sp, #48]	; 0x30
   11c88:	str	r3, [sp, #60]	; 0x3c
   11c8c:	ldr	r3, [sp, #24]
   11c90:	cmn	r3, #1
   11c94:	beq	121c4 <strspn@plt+0x1430>
   11c98:	subs	r7, r3, sl
   11c9c:	movne	r7, #1
   11ca0:	cmp	r7, #0
   11ca4:	beq	121dc <strspn@plt+0x1448>
   11ca8:	ldr	r3, [sp, #48]	; 0x30
   11cac:	cmp	r3, #0
   11cb0:	beq	12548 <strspn@plt+0x17b4>
   11cb4:	ldr	r2, [sp, #68]	; 0x44
   11cb8:	ldr	r1, [sp, #24]
   11cbc:	cmp	r2, #1
   11cc0:	mov	r3, r2
   11cc4:	movls	r3, #0
   11cc8:	movhi	r3, #1
   11ccc:	cmn	r1, #1
   11cd0:	movne	r3, #0
   11cd4:	cmp	r3, #0
   11cd8:	add	r4, sl, r2
   11cdc:	beq	11cec <strspn@plt+0xf58>
   11ce0:	ldr	r0, [sp, #44]	; 0x2c
   11ce4:	bl	10cc8 <strlen@plt>
   11ce8:	str	r0, [sp, #24]
   11cec:	ldr	r3, [sp, #24]
   11cf0:	cmp	r3, r4
   11cf4:	ldr	r3, [sp, #44]	; 0x2c
   11cf8:	add	r5, r3, sl
   11cfc:	bcc	12550 <strspn@plt+0x17bc>
   11d00:	mov	r0, r5
   11d04:	ldr	r2, [sp, #68]	; 0x44
   11d08:	ldr	r1, [sp, #72]	; 0x48
   11d0c:	bl	10be4 <memcmp@plt>
   11d10:	cmp	r0, #0
   11d14:	bne	12550 <strspn@plt+0x17bc>
   11d18:	ldr	r3, [sp, #40]	; 0x28
   11d1c:	cmp	r3, #0
   11d20:	bne	12f0c <strspn@plt+0x2178>
   11d24:	ldrb	r4, [r5]
   11d28:	cmp	r4, #126	; 0x7e
   11d2c:	ldrls	pc, [pc, r4, lsl #2]
   11d30:	b	12e48 <strspn@plt+0x20b4>
   11d34:	andeq	r2, r1, r8, lsl #8
   11d38:	andeq	r2, r1, r8, asr #28
   11d3c:	andeq	r2, r1, r8, asr #28
   11d40:	andeq	r2, r1, r8, asr #28
   11d44:	andeq	r2, r1, r8, asr #28
   11d48:	andeq	r2, r1, r8, asr #28
   11d4c:	andeq	r2, r1, r8, asr #28
   11d50:	strdeq	r2, [r1], -r4
   11d54:	andeq	r2, r1, r0, ror #7
   11d58:			; <UNDEFINED> instruction: 0x000123bc
   11d5c:	muleq	r1, ip, r3
   11d60:	andeq	r2, r1, ip, asr #7
   11d64:	andeq	r2, r1, r4, lsl #6
   11d68:	andeq	r2, r1, r8, lsr r5
   11d6c:	andeq	r2, r1, r8, asr #28
   11d70:	andeq	r2, r1, r8, asr #28
   11d74:	andeq	r2, r1, r8, asr #28
   11d78:	andeq	r2, r1, r8, asr #28
   11d7c:	andeq	r2, r1, r8, asr #28
   11d80:	andeq	r2, r1, r8, asr #28
   11d84:	andeq	r2, r1, r8, asr #28
   11d88:	andeq	r2, r1, r8, asr #28
   11d8c:	andeq	r2, r1, r8, asr #28
   11d90:	andeq	r2, r1, r8, asr #28
   11d94:	andeq	r2, r1, r8, asr #28
   11d98:	andeq	r2, r1, r8, asr #28
   11d9c:	andeq	r2, r1, r8, asr #28
   11da0:	andeq	r2, r1, r8, asr #28
   11da4:	andeq	r2, r1, r8, asr #28
   11da8:	andeq	r2, r1, r8, asr #28
   11dac:	andeq	r2, r1, r8, asr #28
   11db0:	andeq	r2, r1, r8, asr #28
   11db4:	andeq	r2, r1, r8, lsr #10
   11db8:	andeq	r2, r1, r8, lsl #10
   11dbc:	andeq	r2, r1, r8, lsl #10
   11dc0:	andeq	r2, r1, r8, ror #9
   11dc4:	andeq	r2, r1, r8, lsl #10
   11dc8:	strdeq	r2, [r1], -r4
   11dcc:	andeq	r2, r1, r8, lsl #10
   11dd0:	ldrdeq	r2, [r1], -r0
   11dd4:	andeq	r2, r1, r8, lsl #10
   11dd8:	andeq	r2, r1, r8, lsl #10
   11ddc:	andeq	r2, r1, r8, lsl #10
   11de0:	strdeq	r2, [r1], -r4
   11de4:	strdeq	r2, [r1], -r4
   11de8:	strdeq	r2, [r1], -r4
   11dec:	strdeq	r2, [r1], -r4
   11df0:	strdeq	r2, [r1], -r4
   11df4:	strdeq	r2, [r1], -r4
   11df8:	strdeq	r2, [r1], -r4
   11dfc:	strdeq	r2, [r1], -r4
   11e00:	strdeq	r2, [r1], -r4
   11e04:	strdeq	r2, [r1], -r4
   11e08:	strdeq	r2, [r1], -r4
   11e0c:	strdeq	r2, [r1], -r4
   11e10:	strdeq	r2, [r1], -r4
   11e14:	strdeq	r2, [r1], -r4
   11e18:	strdeq	r2, [r1], -r4
   11e1c:	strdeq	r2, [r1], -r4
   11e20:	andeq	r2, r1, r8, lsl #10
   11e24:	andeq	r2, r1, r8, lsl #10
   11e28:	andeq	r2, r1, r8, lsl #10
   11e2c:	andeq	r2, r1, r8, lsl #10
   11e30:	andeq	r2, r1, r0, lsl #5
   11e34:	andeq	r2, r1, r8, asr #28
   11e38:	strdeq	r2, [r1], -r4
   11e3c:	strdeq	r2, [r1], -r4
   11e40:	strdeq	r2, [r1], -r4
   11e44:	strdeq	r2, [r1], -r4
   11e48:	strdeq	r2, [r1], -r4
   11e4c:	strdeq	r2, [r1], -r4
   11e50:	strdeq	r2, [r1], -r4
   11e54:	strdeq	r2, [r1], -r4
   11e58:	strdeq	r2, [r1], -r4
   11e5c:	strdeq	r2, [r1], -r4
   11e60:	strdeq	r2, [r1], -r4
   11e64:	strdeq	r2, [r1], -r4
   11e68:	strdeq	r2, [r1], -r4
   11e6c:	strdeq	r2, [r1], -r4
   11e70:	strdeq	r2, [r1], -r4
   11e74:	strdeq	r2, [r1], -r4
   11e78:	strdeq	r2, [r1], -r4
   11e7c:	strdeq	r2, [r1], -r4
   11e80:	strdeq	r2, [r1], -r4
   11e84:	strdeq	r2, [r1], -r4
   11e88:	strdeq	r2, [r1], -r4
   11e8c:	strdeq	r2, [r1], -r4
   11e90:	strdeq	r2, [r1], -r4
   11e94:	strdeq	r2, [r1], -r4
   11e98:	strdeq	r2, [r1], -r4
   11e9c:	strdeq	r2, [r1], -r4
   11ea0:	andeq	r2, r1, r8, lsl #10
   11ea4:	andeq	r2, r1, ip, asr #4
   11ea8:	strdeq	r2, [r1], -r4
   11eac:	andeq	r2, r1, r8, lsl #10
   11eb0:	strdeq	r2, [r1], -r4
   11eb4:	andeq	r2, r1, r8, lsl #10
   11eb8:	strdeq	r2, [r1], -r4
   11ebc:	strdeq	r2, [r1], -r4
   11ec0:	strdeq	r2, [r1], -r4
   11ec4:	strdeq	r2, [r1], -r4
   11ec8:	strdeq	r2, [r1], -r4
   11ecc:	strdeq	r2, [r1], -r4
   11ed0:	strdeq	r2, [r1], -r4
   11ed4:	strdeq	r2, [r1], -r4
   11ed8:	strdeq	r2, [r1], -r4
   11edc:	strdeq	r2, [r1], -r4
   11ee0:	strdeq	r2, [r1], -r4
   11ee4:	strdeq	r2, [r1], -r4
   11ee8:	strdeq	r2, [r1], -r4
   11eec:	strdeq	r2, [r1], -r4
   11ef0:	strdeq	r2, [r1], -r4
   11ef4:	strdeq	r2, [r1], -r4
   11ef8:	strdeq	r2, [r1], -r4
   11efc:	strdeq	r2, [r1], -r4
   11f00:	strdeq	r2, [r1], -r4
   11f04:	strdeq	r2, [r1], -r4
   11f08:	strdeq	r2, [r1], -r4
   11f0c:	strdeq	r2, [r1], -r4
   11f10:	strdeq	r2, [r1], -r4
   11f14:	strdeq	r2, [r1], -r4
   11f18:	strdeq	r2, [r1], -r4
   11f1c:	strdeq	r2, [r1], -r4
   11f20:	andeq	r2, r1, r4, lsl #2
   11f24:	andeq	r2, r1, r8, lsl #10
   11f28:	andeq	r2, r1, r4, lsl #2
   11f2c:	andeq	r2, r1, r8, ror #9
   11f30:	mov	r3, #1
   11f34:	str	r3, [sp, #40]	; 0x28
   11f38:	str	r3, [sp, #68]	; 0x44
   11f3c:	mov	r8, #0
   11f40:	ldr	r3, [pc, #4056]	; 12f20 <strspn@plt+0x218c>
   11f44:	str	r3, [sp, #72]	; 0x48
   11f48:	mov	r3, #2
   11f4c:	str	r3, [sp, #176]	; 0xb0
   11f50:	ldr	r1, [sp, #56]	; 0x38
   11f54:	mov	r2, r3
   11f58:	ldr	ip, [sp, #40]	; 0x28
   11f5c:	mov	lr, r3
   11f60:	b	11c2c <strspn@plt+0xe98>
   11f64:	mov	r3, #1
   11f68:	str	r3, [sp, #56]	; 0x38
   11f6c:	str	r3, [sp, #68]	; 0x44
   11f70:	str	r3, [sp, #40]	; 0x28
   11f74:	ldr	r3, [pc, #4004]	; 12f20 <strspn@plt+0x218c>
   11f78:	mov	r8, #0
   11f7c:	str	r3, [sp, #72]	; 0x48
   11f80:	b	11f48 <strspn@plt+0x11b4>
   11f84:	mov	r3, #1
   11f88:	str	r3, [sp, #56]	; 0x38
   11f8c:	str	r3, [sp, #68]	; 0x44
   11f90:	str	r3, [sp, #40]	; 0x28
   11f94:	ldr	r3, [pc, #3976]	; 12f24 <strspn@plt+0x2190>
   11f98:	mov	r8, #0
   11f9c:	str	r3, [sp, #72]	; 0x48
   11fa0:	mov	r3, #5
   11fa4:	b	11f4c <strspn@plt+0x11b8>
   11fa8:	mov	r3, #0
   11fac:	str	r3, [sp, #40]	; 0x28
   11fb0:	mov	r3, #1
   11fb4:	str	r3, [sp, #56]	; 0x38
   11fb8:	mov	r8, #0
   11fbc:	mov	r1, r3
   11fc0:	ldr	r2, [sp, #176]	; 0xb0
   11fc4:	ldr	ip, [sp, #40]	; 0x28
   11fc8:	ldr	lr, [sp, #176]	; 0xb0
   11fcc:	b	11c2c <strspn@plt+0xe98>
   11fd0:	ldr	r3, [sp, #176]	; 0xb0
   11fd4:	cmp	r3, #10
   11fd8:	beq	1201c <strspn@plt+0x1288>
   11fdc:	mov	r2, #5
   11fe0:	ldr	r1, [pc, #3904]	; 12f28 <strspn@plt+0x2194>
   11fe4:	mov	r0, #0
   11fe8:	bl	10bfc <dcgettext@plt>
   11fec:	ldr	r2, [pc, #3892]	; 12f28 <strspn@plt+0x2194>
   11ff0:	cmp	r0, r2
   11ff4:	str	r0, [sp, #188]	; 0xbc
   11ff8:	beq	130b4 <strspn@plt+0x2320>
   11ffc:	mov	r2, #5
   12000:	ldr	r1, [pc, #3864]	; 12f20 <strspn@plt+0x218c>
   12004:	mov	r0, #0
   12008:	bl	10bfc <dcgettext@plt>
   1200c:	ldr	r2, [pc, #3852]	; 12f20 <strspn@plt+0x218c>
   12010:	cmp	r0, r2
   12014:	str	r0, [sp, #192]	; 0xc0
   12018:	beq	130a4 <strspn@plt+0x2310>
   1201c:	ldr	r8, [sp, #40]	; 0x28
   12020:	cmp	r8, #0
   12024:	movne	r8, #0
   12028:	bne	12058 <strspn@plt+0x12c4>
   1202c:	ldr	r3, [sp, #188]	; 0xbc
   12030:	ldrb	r3, [r3]
   12034:	cmp	r3, #0
   12038:	beq	12058 <strspn@plt+0x12c4>
   1203c:	ldr	r2, [sp, #188]	; 0xbc
   12040:	cmp	fp, r8
   12044:	strbhi	r3, [r9, r8]
   12048:	ldrb	r3, [r2, #1]!
   1204c:	add	r8, r8, #1
   12050:	cmp	r3, #0
   12054:	bne	12040 <strspn@plt+0x12ac>
   12058:	ldr	r0, [sp, #192]	; 0xc0
   1205c:	bl	10cc8 <strlen@plt>
   12060:	ldr	r3, [sp, #192]	; 0xc0
   12064:	ldr	r2, [sp, #176]	; 0xb0
   12068:	str	r3, [sp, #72]	; 0x48
   1206c:	mov	r3, #1
   12070:	str	r3, [sp, #56]	; 0x38
   12074:	mov	r1, r3
   12078:	ldr	ip, [sp, #40]	; 0x28
   1207c:	ldr	lr, [sp, #176]	; 0xb0
   12080:	str	r0, [sp, #68]	; 0x44
   12084:	b	11c2c <strspn@plt+0xe98>
   12088:	ldr	r3, [sp, #40]	; 0x28
   1208c:	cmp	r3, #0
   12090:	beq	12d38 <strspn@plt+0x1fa4>
   12094:	mov	r3, #1
   12098:	str	r3, [sp, #68]	; 0x44
   1209c:	ldr	r3, [pc, #3708]	; 12f20 <strspn@plt+0x218c>
   120a0:	str	r3, [sp, #72]	; 0x48
   120a4:	mov	r8, #0
   120a8:	ldr	r1, [sp, #56]	; 0x38
   120ac:	ldr	r2, [sp, #176]	; 0xb0
   120b0:	ldr	ip, [sp, #40]	; 0x28
   120b4:	ldr	lr, [sp, #176]	; 0xb0
   120b8:	b	11c2c <strspn@plt+0xe98>
   120bc:	ldr	r3, [sp, #40]	; 0x28
   120c0:	cmp	r3, #0
   120c4:	beq	12dbc <strspn@plt+0x2028>
   120c8:	str	r3, [sp, #56]	; 0x38
   120cc:	mov	r3, #1
   120d0:	str	r3, [sp, #68]	; 0x44
   120d4:	ldr	r3, [pc, #3656]	; 12f24 <strspn@plt+0x2190>
   120d8:	b	120a0 <strspn@plt+0x130c>
   120dc:	ldr	r3, [sp, #40]	; 0x28
   120e0:	cmp	r3, #0
   120e4:	mov	r3, #1
   120e8:	streq	r3, [sp, #56]	; 0x38
   120ec:	beq	12d38 <strspn@plt+0x1fa4>
   120f0:	str	r3, [sp, #68]	; 0x44
   120f4:	ldr	r3, [pc, #3620]	; 12f20 <strspn@plt+0x218c>
   120f8:	mov	r8, #0
   120fc:	str	r3, [sp, #72]	; 0x48
   12100:	b	11f48 <strspn@plt+0x11b4>
   12104:	ldr	r3, [sp, #24]
   12108:	ldr	r6, [sp, #48]	; 0x30
   1210c:	cmn	r3, #1
   12110:	beq	1276c <strspn@plt+0x19d8>
   12114:	subs	r3, r3, #1
   12118:	movne	r3, #1
   1211c:	cmp	r3, #0
   12120:	beq	124ec <strspn@plt+0x1758>
   12124:	ldr	r1, [sp, #52]	; 0x34
   12128:	mov	r7, r3
   1212c:	mov	r3, #0
   12130:	str	r3, [sp, #32]
   12134:	ldr	r3, [sp, #60]	; 0x3c
   12138:	orr	r2, r1, r3
   1213c:	ldr	r3, [sp, #40]	; 0x28
   12140:	eor	r2, r2, #1
   12144:	orr	r2, r3, r2
   12148:	tst	r2, #255	; 0xff
   1214c:	bne	12a70 <strspn@plt+0x1cdc>
   12150:	cmp	r6, #0
   12154:	bne	12330 <strspn@plt+0x159c>
   12158:	ldr	r3, [sp, #36]	; 0x24
   1215c:	add	sl, sl, #1
   12160:	and	r3, r3, r7
   12164:	uxtb	r6, r3
   12168:	cmp	r6, #0
   1216c:	beq	12198 <strspn@plt+0x1404>
   12170:	cmp	fp, r8
   12174:	movhi	r3, #39	; 0x27
   12178:	strbhi	r3, [r9, r8]
   1217c:	add	r3, r8, #1
   12180:	cmp	fp, r3
   12184:	movhi	r2, #39	; 0x27
   12188:	add	r8, r8, #2
   1218c:	strbhi	r2, [r9, r3]
   12190:	mov	r3, #0
   12194:	str	r3, [sp, #36]	; 0x24
   12198:	ldr	r2, [sp, #32]
   1219c:	cmp	r8, fp
   121a0:	ldr	r3, [sp, #28]
   121a4:	strbcc	r4, [r9, r8]
   121a8:	cmp	r2, #0
   121ac:	moveq	r3, #0
   121b0:	str	r3, [sp, #28]
   121b4:	ldr	r3, [sp, #24]
   121b8:	add	r8, r8, #1
   121bc:	cmn	r3, #1
   121c0:	bne	11c98 <strspn@plt+0xf04>
   121c4:	ldr	r3, [sp, #44]	; 0x2c
   121c8:	ldrb	r3, [r3, sl]
   121cc:	adds	r7, r3, #0
   121d0:	movne	r7, #1
   121d4:	cmp	r7, #0
   121d8:	bne	11ca8 <strspn@plt+0xf14>
   121dc:	ldr	r3, [sp, #64]	; 0x40
   121e0:	cmp	r8, #0
   121e4:	movne	r3, #0
   121e8:	andeq	r3, r3, #1
   121ec:	cmp	r3, #0
   121f0:	str	r3, [sp, #64]	; 0x40
   121f4:	bne	12c98 <strspn@plt+0x1f04>
   121f8:	ldr	r3, [sp, #40]	; 0x28
   121fc:	ldr	r2, [sp, #52]	; 0x34
   12200:	eor	r3, r3, #1
   12204:	ands	r2, r2, r3
   12208:	beq	130c4 <strspn@plt+0x2330>
   1220c:	ldr	r3, [sp, #76]	; 0x4c
   12210:	cmp	r3, #0
   12214:	beq	13094 <strspn@plt+0x2300>
   12218:	ldr	r3, [sp, #28]
   1221c:	cmp	r3, #0
   12220:	bne	13050 <strspn@plt+0x22bc>
   12224:	ldr	r2, [sp, #84]	; 0x54
   12228:	clz	r3, fp
   1222c:	cmp	r2, #0
   12230:	lsr	r3, r3, #5
   12234:	moveq	r3, #0
   12238:	cmp	r3, #0
   1223c:	beq	12ff0 <strspn@plt+0x225c>
   12240:	mov	fp, r2
   12244:	str	r3, [sp, #76]	; 0x4c
   12248:	b	11bd4 <strspn@plt+0xe40>
   1224c:	ldr	r3, [sp, #176]	; 0xb0
   12250:	ldr	r6, [sp, #48]	; 0x30
   12254:	cmp	r3, #2
   12258:	beq	12790 <strspn@plt+0x19fc>
   1225c:	ldr	r3, [sp, #88]	; 0x58
   12260:	cmp	r3, #0
   12264:	beq	12d14 <strspn@plt+0x1f80>
   12268:	mov	r3, #0
   1226c:	add	sl, sl, #1
   12270:	ldr	r6, [sp, #36]	; 0x24
   12274:	str	r3, [sp, #32]
   12278:	mov	r4, #92	; 0x5c
   1227c:	b	12168 <strspn@plt+0x13d4>
   12280:	ldr	r3, [sp, #176]	; 0xb0
   12284:	ldr	r6, [sp, #48]	; 0x30
   12288:	cmp	r3, #2
   1228c:	beq	127c0 <strspn@plt+0x1a2c>
   12290:	cmp	r3, #5
   12294:	bne	12d24 <strspn@plt+0x1f90>
   12298:	ldr	r3, [sp, #100]	; 0x64
   1229c:	cmp	r3, #0
   122a0:	beq	12d88 <strspn@plt+0x1ff4>
   122a4:	ldr	r2, [sp, #24]
   122a8:	add	r3, sl, #2
   122ac:	cmp	r2, r3
   122b0:	bls	122c0 <strspn@plt+0x152c>
   122b4:	ldrb	r4, [r5, #1]
   122b8:	cmp	r4, #63	; 0x3f
   122bc:	beq	12f30 <strspn@plt+0x219c>
   122c0:	mov	r1, #0
   122c4:	str	r1, [sp, #32]
   122c8:	mov	r4, #63	; 0x3f
   122cc:	b	12134 <strspn@plt+0x13a0>
   122d0:	ldr	r3, [sp, #176]	; 0xb0
   122d4:	ldr	r6, [sp, #48]	; 0x30
   122d8:	cmp	r3, #2
   122dc:	beq	127ec <strspn@plt+0x1a58>
   122e0:	str	r7, [sp, #32]
   122e4:	str	r7, [sp, #76]	; 0x4c
   122e8:	mov	r1, #0
   122ec:	mov	r4, #39	; 0x27
   122f0:	b	12134 <strspn@plt+0x13a0>
   122f4:	ldr	r6, [sp, #48]	; 0x30
   122f8:	ldr	r1, [sp, #52]	; 0x34
   122fc:	str	r7, [sp, #32]
   12300:	b	12134 <strspn@plt+0x13a0>
   12304:	ldr	r6, [sp, #48]	; 0x30
   12308:	ldr	r1, [sp, #52]	; 0x34
   1230c:	mov	r4, #12
   12310:	mov	r3, #102	; 0x66
   12314:	ldr	r2, [sp, #56]	; 0x38
   12318:	cmp	r2, #0
   1231c:	streq	r2, [sp, #32]
   12320:	beq	12134 <strspn@plt+0x13a0>
   12324:	mov	r4, r3
   12328:	mov	r3, #0
   1232c:	str	r3, [sp, #32]
   12330:	ldr	r3, [sp, #40]	; 0x28
   12334:	cmp	r3, #0
   12338:	bne	12aa8 <strspn@plt+0x1d14>
   1233c:	ldr	r3, [sp, #36]	; 0x24
   12340:	eor	r3, r3, #1
   12344:	and	r3, r3, r1
   12348:	ands	r3, r3, #255	; 0xff
   1234c:	beq	12384 <strspn@plt+0x15f0>
   12350:	cmp	fp, r8
   12354:	movhi	r2, #39	; 0x27
   12358:	strbhi	r2, [r9, r8]
   1235c:	add	r2, r8, #1
   12360:	cmp	fp, r2
   12364:	movhi	r1, #36	; 0x24
   12368:	strbhi	r1, [r9, r2]
   1236c:	add	r2, r8, #2
   12370:	cmp	fp, r2
   12374:	add	r8, r8, #3
   12378:	movhi	r1, #39	; 0x27
   1237c:	strbhi	r1, [r9, r2]
   12380:	str	r3, [sp, #36]	; 0x24
   12384:	cmp	fp, r8
   12388:	movhi	r3, #92	; 0x5c
   1238c:	strbhi	r3, [r9, r8]
   12390:	add	sl, sl, #1
   12394:	add	r8, r8, #1
   12398:	b	12198 <strspn@plt+0x1404>
   1239c:	ldr	r6, [sp, #48]	; 0x30
   123a0:	mov	r4, #10
   123a4:	mov	r3, #110	; 0x6e
   123a8:	ldr	r2, [sp, #64]	; 0x40
   123ac:	cmp	r2, #0
   123b0:	bne	12e30 <strspn@plt+0x209c>
   123b4:	ldr	r1, [sp, #52]	; 0x34
   123b8:	b	12314 <strspn@plt+0x1580>
   123bc:	ldr	r6, [sp, #48]	; 0x30
   123c0:	ldr	r1, [sp, #52]	; 0x34
   123c4:	mov	r3, #116	; 0x74
   123c8:	b	12314 <strspn@plt+0x1580>
   123cc:	ldr	r6, [sp, #48]	; 0x30
   123d0:	ldr	r1, [sp, #52]	; 0x34
   123d4:	mov	r4, #11
   123d8:	mov	r3, #118	; 0x76
   123dc:	b	12314 <strspn@plt+0x1580>
   123e0:	ldr	r6, [sp, #48]	; 0x30
   123e4:	ldr	r1, [sp, #52]	; 0x34
   123e8:	mov	r4, #8
   123ec:	mov	r3, #98	; 0x62
   123f0:	b	12314 <strspn@plt+0x1580>
   123f4:	ldr	r6, [sp, #48]	; 0x30
   123f8:	ldr	r1, [sp, #52]	; 0x34
   123fc:	mov	r4, #7
   12400:	mov	r3, #97	; 0x61
   12404:	b	12314 <strspn@plt+0x1580>
   12408:	ldr	r3, [sp, #56]	; 0x38
   1240c:	ldr	r6, [sp, #48]	; 0x30
   12410:	cmp	r3, #0
   12414:	beq	128d8 <strspn@plt+0x1b44>
   12418:	ldr	r3, [sp, #40]	; 0x28
   1241c:	cmp	r3, #0
   12420:	bne	12f0c <strspn@plt+0x2178>
   12424:	ldr	r3, [sp, #36]	; 0x24
   12428:	ldr	r2, [sp, #52]	; 0x34
   1242c:	eor	r3, r3, #1
   12430:	ands	r3, r2, r3
   12434:	moveq	r2, r8
   12438:	beq	12470 <strspn@plt+0x16dc>
   1243c:	cmp	fp, r8
   12440:	movhi	r2, #39	; 0x27
   12444:	strbhi	r2, [r9, r8]
   12448:	add	r2, r8, #1
   1244c:	cmp	fp, r2
   12450:	movhi	r1, #36	; 0x24
   12454:	strbhi	r1, [r9, r2]
   12458:	add	r2, r8, #2
   1245c:	cmp	fp, r2
   12460:	movhi	r1, #39	; 0x27
   12464:	strbhi	r1, [r9, r2]
   12468:	add	r2, r8, #3
   1246c:	str	r3, [sp, #36]	; 0x24
   12470:	cmp	fp, r2
   12474:	movhi	r3, #92	; 0x5c
   12478:	strbhi	r3, [r9, r2]
   1247c:	ldr	r3, [sp, #92]	; 0x5c
   12480:	add	r8, r2, #1
   12484:	cmp	r3, #0
   12488:	beq	12e0c <strspn@plt+0x2078>
   1248c:	ldr	r1, [sp, #24]
   12490:	add	r3, sl, #1
   12494:	cmp	r1, r3
   12498:	bls	124d0 <strspn@plt+0x173c>
   1249c:	ldr	r1, [sp, #44]	; 0x2c
   124a0:	ldrb	r3, [r1, r3]
   124a4:	sub	r3, r3, #48	; 0x30
   124a8:	cmp	r3, #9
   124ac:	bhi	124d0 <strspn@plt+0x173c>
   124b0:	cmp	fp, r8
   124b4:	movhi	r3, #48	; 0x30
   124b8:	strbhi	r3, [r9, r8]
   124bc:	add	r3, r2, #2
   124c0:	cmp	fp, r3
   124c4:	add	r8, r2, #3
   124c8:	movhi	r1, #48	; 0x30
   124cc:	strbhi	r1, [r9, r3]
   124d0:	ldr	r3, [sp, #40]	; 0x28
   124d4:	ldr	r1, [sp, #52]	; 0x34
   124d8:	mov	r7, r3
   124dc:	str	r3, [sp, #32]
   124e0:	mov	r4, #48	; 0x30
   124e4:	b	12134 <strspn@plt+0x13a0>
   124e8:	ldr	r6, [sp, #48]	; 0x30
   124ec:	cmp	sl, #0
   124f0:	streq	r7, [sp, #32]
   124f4:	beq	12514 <strspn@plt+0x1780>
   124f8:	mov	r3, #0
   124fc:	ldr	r1, [sp, #52]	; 0x34
   12500:	str	r3, [sp, #32]
   12504:	b	12134 <strspn@plt+0x13a0>
   12508:	ldr	r6, [sp, #48]	; 0x30
   1250c:	mov	r3, #0
   12510:	str	r3, [sp, #32]
   12514:	ldr	r3, [sp, #64]	; 0x40
   12518:	cmp	r3, #0
   1251c:	bne	12c98 <strspn@plt+0x1f04>
   12520:	ldr	r1, [sp, #52]	; 0x34
   12524:	b	12134 <strspn@plt+0x13a0>
   12528:	ldr	r3, [sp, #48]	; 0x30
   1252c:	mov	r6, r3
   12530:	str	r3, [sp, #32]
   12534:	b	12514 <strspn@plt+0x1780>
   12538:	ldr	r6, [sp, #48]	; 0x30
   1253c:	mov	r4, #13
   12540:	mov	r3, #114	; 0x72
   12544:	b	123a8 <strspn@plt+0x1614>
   12548:	ldr	r3, [sp, #44]	; 0x2c
   1254c:	add	r5, r3, sl
   12550:	ldrb	r4, [r5]
   12554:	cmp	r4, #126	; 0x7e
   12558:	ldrls	pc, [pc, r4, lsl #2]
   1255c:	b	128f8 <strspn@plt+0x1b64>
   12560:	andeq	r2, r1, r8, asr #17
   12564:	strdeq	r2, [r1], -r8
   12568:	strdeq	r2, [r1], -r8
   1256c:	strdeq	r2, [r1], -r8
   12570:	strdeq	r2, [r1], -r8
   12574:	strdeq	r2, [r1], -r8
   12578:	strdeq	r2, [r1], -r8
   1257c:	andeq	r2, r1, r0, asr #17
   12580:			; <UNDEFINED> instruction: 0x000128b8
   12584:	andeq	r2, r1, ip, lsr #17
   12588:	andeq	r2, r1, r4, lsr #17
   1258c:	muleq	r1, ip, r8
   12590:	muleq	r1, r4, r8
   12594:	andeq	r2, r1, ip, lsl #17
   12598:	strdeq	r2, [r1], -r8
   1259c:	strdeq	r2, [r1], -r8
   125a0:	strdeq	r2, [r1], -r8
   125a4:	strdeq	r2, [r1], -r8
   125a8:	strdeq	r2, [r1], -r8
   125ac:	strdeq	r2, [r1], -r8
   125b0:	strdeq	r2, [r1], -r8
   125b4:	strdeq	r2, [r1], -r8
   125b8:	strdeq	r2, [r1], -r8
   125bc:	strdeq	r2, [r1], -r8
   125c0:	strdeq	r2, [r1], -r8
   125c4:	strdeq	r2, [r1], -r8
   125c8:	strdeq	r2, [r1], -r8
   125cc:	strdeq	r2, [r1], -r8
   125d0:	strdeq	r2, [r1], -r8
   125d4:	strdeq	r2, [r1], -r8
   125d8:	strdeq	r2, [r1], -r8
   125dc:	strdeq	r2, [r1], -r8
   125e0:	andeq	r2, r1, r0, lsl #17
   125e4:	andeq	r2, r1, r8, ror r8
   125e8:	andeq	r2, r1, r8, ror r8
   125ec:	andeq	r2, r1, r0, ror r8
   125f0:	andeq	r2, r1, r8, ror r8
   125f4:	andeq	r2, r1, r8, ror #16
   125f8:	andeq	r2, r1, r8, ror r8
   125fc:	ldrdeq	r2, [r1], -ip
   12600:	andeq	r2, r1, r8, ror r8
   12604:	andeq	r2, r1, r8, ror r8
   12608:	andeq	r2, r1, r8, ror r8
   1260c:	andeq	r2, r1, r8, ror #16
   12610:	andeq	r2, r1, r8, ror #16
   12614:	andeq	r2, r1, r8, ror #16
   12618:	andeq	r2, r1, r8, ror #16
   1261c:	andeq	r2, r1, r8, ror #16
   12620:	andeq	r2, r1, r8, ror #16
   12624:	andeq	r2, r1, r8, ror #16
   12628:	andeq	r2, r1, r8, ror #16
   1262c:	andeq	r2, r1, r8, ror #16
   12630:	andeq	r2, r1, r8, ror #16
   12634:	andeq	r2, r1, r8, ror #16
   12638:	andeq	r2, r1, r8, ror #16
   1263c:	andeq	r2, r1, r8, ror #16
   12640:	andeq	r2, r1, r8, ror #16
   12644:	andeq	r2, r1, r8, ror #16
   12648:	andeq	r2, r1, r8, ror #16
   1264c:	andeq	r2, r1, r8, ror r8
   12650:	andeq	r2, r1, r8, ror r8
   12654:	andeq	r2, r1, r8, ror r8
   12658:	andeq	r2, r1, r8, ror r8
   1265c:			; <UNDEFINED> instruction: 0x000127b0
   12660:	strdeq	r2, [r1], -r8
   12664:	andeq	r2, r1, r8, ror #16
   12668:	andeq	r2, r1, r8, ror #16
   1266c:	andeq	r2, r1, r8, ror #16
   12670:	andeq	r2, r1, r8, ror #16
   12674:	andeq	r2, r1, r8, ror #16
   12678:	andeq	r2, r1, r8, ror #16
   1267c:	andeq	r2, r1, r8, ror #16
   12680:	andeq	r2, r1, r8, ror #16
   12684:	andeq	r2, r1, r8, ror #16
   12688:	andeq	r2, r1, r8, ror #16
   1268c:	andeq	r2, r1, r8, ror #16
   12690:	andeq	r2, r1, r8, ror #16
   12694:	andeq	r2, r1, r8, ror #16
   12698:	andeq	r2, r1, r8, ror #16
   1269c:	andeq	r2, r1, r8, ror #16
   126a0:	andeq	r2, r1, r8, ror #16
   126a4:	andeq	r2, r1, r8, ror #16
   126a8:	andeq	r2, r1, r8, ror #16
   126ac:	andeq	r2, r1, r8, ror #16
   126b0:	andeq	r2, r1, r8, ror #16
   126b4:	andeq	r2, r1, r8, ror #16
   126b8:	andeq	r2, r1, r8, ror #16
   126bc:	andeq	r2, r1, r8, ror #16
   126c0:	andeq	r2, r1, r8, ror #16
   126c4:	andeq	r2, r1, r8, ror #16
   126c8:	andeq	r2, r1, r8, ror #16
   126cc:	andeq	r2, r1, r8, ror r8
   126d0:	andeq	r2, r1, r0, lsl #15
   126d4:	andeq	r2, r1, r8, ror #16
   126d8:	andeq	r2, r1, r8, ror r8
   126dc:	andeq	r2, r1, r8, ror #16
   126e0:	andeq	r2, r1, r8, ror r8
   126e4:	andeq	r2, r1, r8, ror #16
   126e8:	andeq	r2, r1, r8, ror #16
   126ec:	andeq	r2, r1, r8, ror #16
   126f0:	andeq	r2, r1, r8, ror #16
   126f4:	andeq	r2, r1, r8, ror #16
   126f8:	andeq	r2, r1, r8, ror #16
   126fc:	andeq	r2, r1, r8, ror #16
   12700:	andeq	r2, r1, r8, ror #16
   12704:	andeq	r2, r1, r8, ror #16
   12708:	andeq	r2, r1, r8, ror #16
   1270c:	andeq	r2, r1, r8, ror #16
   12710:	andeq	r2, r1, r8, ror #16
   12714:	andeq	r2, r1, r8, ror #16
   12718:	andeq	r2, r1, r8, ror #16
   1271c:	andeq	r2, r1, r8, ror #16
   12720:	andeq	r2, r1, r8, ror #16
   12724:	andeq	r2, r1, r8, ror #16
   12728:	andeq	r2, r1, r8, ror #16
   1272c:	andeq	r2, r1, r8, ror #16
   12730:	andeq	r2, r1, r8, ror #16
   12734:	andeq	r2, r1, r8, ror #16
   12738:	andeq	r2, r1, r8, ror #16
   1273c:	andeq	r2, r1, r8, ror #16
   12740:	andeq	r2, r1, r8, ror #16
   12744:	andeq	r2, r1, r8, ror #16
   12748:	andeq	r2, r1, r8, ror #16
   1274c:	andeq	r2, r1, ip, asr r7
   12750:	andeq	r2, r1, r8, ror r8
   12754:	andeq	r2, r1, ip, asr r7
   12758:	andeq	r2, r1, r0, ror r8
   1275c:	ldr	r3, [sp, #24]
   12760:	mov	r6, #0
   12764:	cmn	r3, #1
   12768:	bne	12114 <strspn@plt+0x1380>
   1276c:	ldr	r3, [sp, #44]	; 0x2c
   12770:	ldrb	r3, [r3, #1]
   12774:	adds	r3, r3, #0
   12778:	movne	r3, #1
   1277c:	b	1211c <strspn@plt+0x1388>
   12780:	ldr	r3, [sp, #176]	; 0xb0
   12784:	mov	r6, #0
   12788:	cmp	r3, #2
   1278c:	bne	1225c <strspn@plt+0x14c8>
   12790:	ldr	r3, [sp, #64]	; 0x40
   12794:	cmp	r3, #0
   12798:	bne	12fd0 <strspn@plt+0x223c>
   1279c:	add	sl, sl, #1
   127a0:	ldr	r6, [sp, #36]	; 0x24
   127a4:	str	r3, [sp, #32]
   127a8:	mov	r4, #92	; 0x5c
   127ac:	b	12168 <strspn@plt+0x13d4>
   127b0:	ldr	r3, [sp, #176]	; 0xb0
   127b4:	mov	r6, #0
   127b8:	cmp	r3, #2
   127bc:	bne	12290 <strspn@plt+0x14fc>
   127c0:	ldr	r3, [sp, #40]	; 0x28
   127c4:	cmp	r3, #0
   127c8:	bne	12aac <strspn@plt+0x1d18>
   127cc:	mov	r1, r7
   127d0:	str	r3, [sp, #32]
   127d4:	mov	r4, #63	; 0x3f
   127d8:	b	12134 <strspn@plt+0x13a0>
   127dc:	ldr	r3, [sp, #176]	; 0xb0
   127e0:	mov	r6, #0
   127e4:	cmp	r3, #2
   127e8:	bne	122e0 <strspn@plt+0x154c>
   127ec:	ldr	r3, [sp, #64]	; 0x40
   127f0:	cmp	r3, #0
   127f4:	bne	12fd0 <strspn@plt+0x223c>
   127f8:	ldr	r2, [sp, #84]	; 0x54
   127fc:	adds	r3, fp, #0
   12800:	movne	r3, #1
   12804:	cmp	r2, #0
   12808:	movne	r3, #0
   1280c:	cmp	r3, #0
   12810:	strne	fp, [sp, #84]	; 0x54
   12814:	movne	fp, #0
   12818:	bne	12848 <strspn@plt+0x1ab4>
   1281c:	cmp	fp, r8
   12820:	movhi	r3, #39	; 0x27
   12824:	strbhi	r3, [r9, r8]
   12828:	add	r3, r8, #1
   1282c:	cmp	fp, r3
   12830:	movhi	r2, #92	; 0x5c
   12834:	strbhi	r2, [r9, r3]
   12838:	add	r3, r8, #2
   1283c:	cmp	fp, r3
   12840:	movhi	r2, #39	; 0x27
   12844:	strbhi	r2, [r9, r3]
   12848:	ldr	r3, [sp, #64]	; 0x40
   1284c:	add	r8, r8, #3
   12850:	mov	r1, r7
   12854:	str	r7, [sp, #32]
   12858:	str	r7, [sp, #76]	; 0x4c
   1285c:	str	r3, [sp, #36]	; 0x24
   12860:	mov	r4, #39	; 0x27
   12864:	b	12134 <strspn@plt+0x13a0>
   12868:	mov	r6, #0
   1286c:	b	122f8 <strspn@plt+0x1564>
   12870:	mov	r6, #0
   12874:	b	124ec <strspn@plt+0x1758>
   12878:	mov	r6, #0
   1287c:	b	1250c <strspn@plt+0x1778>
   12880:	str	r7, [sp, #32]
   12884:	mov	r6, #0
   12888:	b	12514 <strspn@plt+0x1780>
   1288c:	mov	r6, #0
   12890:	b	1253c <strspn@plt+0x17a8>
   12894:	mov	r6, #0
   12898:	b	12308 <strspn@plt+0x1574>
   1289c:	mov	r6, #0
   128a0:	b	123d0 <strspn@plt+0x163c>
   128a4:	mov	r6, #0
   128a8:	b	123a0 <strspn@plt+0x160c>
   128ac:	mov	r6, #0
   128b0:	mov	r3, #116	; 0x74
   128b4:	b	123a8 <strspn@plt+0x1614>
   128b8:	mov	r6, #0
   128bc:	b	123e4 <strspn@plt+0x1650>
   128c0:	mov	r6, #0
   128c4:	b	123f8 <strspn@plt+0x1664>
   128c8:	ldr	r3, [sp, #56]	; 0x38
   128cc:	mov	r6, #0
   128d0:	cmp	r3, #0
   128d4:	bne	12418 <strspn@plt+0x1684>
   128d8:	ldr	r3, [sp, #96]	; 0x60
   128dc:	cmp	r3, #0
   128e0:	addne	sl, sl, #1
   128e4:	bne	11c8c <strspn@plt+0xef8>
   128e8:	ldr	r1, [sp, #52]	; 0x34
   128ec:	str	r3, [sp, #32]
   128f0:	mov	r4, r3
   128f4:	b	12134 <strspn@plt+0x13a0>
   128f8:	mov	r6, #0
   128fc:	ldr	r3, [sp, #80]	; 0x50
   12900:	cmp	r3, #1
   12904:	bne	12af4 <strspn@plt+0x1d60>
   12908:	bl	10cb0 <__ctype_b_loc@plt>
   1290c:	ldr	r2, [sp, #80]	; 0x50
   12910:	sxth	r3, r4
   12914:	mov	r1, r2
   12918:	lsl	r3, r3, #1
   1291c:	ldr	r2, [r0]
   12920:	ldrh	r3, [r2, r3]
   12924:	and	r3, r3, #16384	; 0x4000
   12928:	cmp	r3, #0
   1292c:	movne	r3, #1
   12930:	moveq	r3, #0
   12934:	str	r3, [sp, #32]
   12938:	moveq	r3, #1
   1293c:	movne	r3, #0
   12940:	ldr	r2, [sp, #56]	; 0x38
   12944:	and	r3, r3, r2
   12948:	ands	r3, r3, #255	; 0xff
   1294c:	beq	12520 <strspn@plt+0x178c>
   12950:	add	r1, sl, r1
   12954:	mov	r0, #0
   12958:	ldr	r7, [sp, #40]	; 0x28
   1295c:	ldr	r2, [sp, #36]	; 0x24
   12960:	ldr	lr, [sp, #52]	; 0x34
   12964:	b	12a14 <strspn@plt+0x1c80>
   12968:	cmp	r7, #0
   1296c:	bne	12d68 <strspn@plt+0x1fd4>
   12970:	eor	r0, r2, #1
   12974:	ands	r0, lr, r0
   12978:	beq	129b0 <strspn@plt+0x1c1c>
   1297c:	cmp	fp, r8
   12980:	movhi	r2, #39	; 0x27
   12984:	strbhi	r2, [r9, r8]
   12988:	add	r2, r8, #1
   1298c:	cmp	fp, r2
   12990:	movhi	ip, #36	; 0x24
   12994:	strbhi	ip, [r9, r2]
   12998:	add	r2, r8, #2
   1299c:	cmp	fp, r2
   129a0:	movhi	ip, #39	; 0x27
   129a4:	strbhi	ip, [r9, r2]
   129a8:	add	r8, r8, #3
   129ac:	mov	r2, r0
   129b0:	cmp	fp, r8
   129b4:	movhi	r0, #92	; 0x5c
   129b8:	strbhi	r0, [r9, r8]
   129bc:	add	r0, r8, #1
   129c0:	cmp	fp, r0
   129c4:	lsrhi	ip, r4, #6
   129c8:	addhi	ip, ip, #48	; 0x30
   129cc:	strbhi	ip, [r9, r0]
   129d0:	add	ip, r8, #2
   129d4:	cmp	fp, ip
   129d8:	lsrhi	r0, r4, #3
   129dc:	andhi	r0, r0, #7
   129e0:	addhi	r0, r0, #48	; 0x30
   129e4:	add	sl, sl, #1
   129e8:	strbhi	r0, [r9, ip]
   129ec:	and	r4, r4, #7
   129f0:	cmp	sl, r1
   129f4:	add	r4, r4, #48	; 0x30
   129f8:	add	r8, r8, #3
   129fc:	bcs	12d80 <strspn@plt+0x1fec>
   12a00:	mov	r0, r3
   12a04:	cmp	fp, r8
   12a08:	strbhi	r4, [r9, r8]
   12a0c:	ldrb	r4, [r5, #1]!
   12a10:	add	r8, r8, #1
   12a14:	cmp	r3, #0
   12a18:	bne	12968 <strspn@plt+0x1bd4>
   12a1c:	cmp	r6, #0
   12a20:	bne	12ac4 <strspn@plt+0x1d30>
   12a24:	eor	r6, r0, #1
   12a28:	and	r6, r6, r2
   12a2c:	add	sl, sl, #1
   12a30:	cmp	r1, sl
   12a34:	uxtb	r6, r6
   12a38:	bls	12aec <strspn@plt+0x1d58>
   12a3c:	cmp	r6, #0
   12a40:	beq	12a04 <strspn@plt+0x1c70>
   12a44:	cmp	fp, r8
   12a48:	movhi	r2, #39	; 0x27
   12a4c:	strbhi	r2, [r9, r8]
   12a50:	add	r2, r8, #1
   12a54:	cmp	fp, r2
   12a58:	movhi	ip, #39	; 0x27
   12a5c:	strbhi	ip, [r9, r2]
   12a60:	add	r8, r8, #2
   12a64:	mov	r6, r3
   12a68:	mov	r2, r3
   12a6c:	b	12a04 <strspn@plt+0x1c70>
   12a70:	ldr	r3, [sp, #184]	; 0xb8
   12a74:	cmp	r3, #0
   12a78:	beq	12150 <strspn@plt+0x13bc>
   12a7c:	lsr	r2, r4, #5
   12a80:	mov	r0, r3
   12a84:	uxtb	r2, r2
   12a88:	and	r3, r4, #31
   12a8c:	ldr	r2, [r0, r2, lsl #2]
   12a90:	lsr	r3, r2, r3
   12a94:	tst	r3, #1
   12a98:	beq	12150 <strspn@plt+0x13bc>
   12a9c:	ldr	r3, [sp, #40]	; 0x28
   12aa0:	cmp	r3, #0
   12aa4:	beq	1233c <strspn@plt+0x15a8>
   12aa8:	mov	r3, r1
   12aac:	str	r3, [sp, #64]	; 0x40
   12ab0:	mov	sl, r9
   12ab4:	ldr	r3, [sp, #56]	; 0x38
   12ab8:	mov	r9, fp
   12abc:	ldr	r2, [sp, #64]	; 0x40
   12ac0:	b	12cb0 <strspn@plt+0x1f1c>
   12ac4:	cmp	fp, r8
   12ac8:	eor	r6, r0, #1
   12acc:	movhi	ip, #92	; 0x5c
   12ad0:	and	r6, r6, r2
   12ad4:	add	sl, sl, #1
   12ad8:	strbhi	ip, [r9, r8]
   12adc:	cmp	r1, sl
   12ae0:	add	r8, r8, #1
   12ae4:	uxtb	r6, r6
   12ae8:	bhi	12a3c <strspn@plt+0x1ca8>
   12aec:	str	r2, [sp, #36]	; 0x24
   12af0:	b	12168 <strspn@plt+0x13d4>
   12af4:	ldr	r3, [sp, #24]
   12af8:	cmn	r3, #1
   12afc:	mov	r3, #0
   12b00:	str	r3, [sp, #128]	; 0x80
   12b04:	str	r3, [sp, #132]	; 0x84
   12b08:	beq	12dfc <strspn@plt+0x2068>
   12b0c:	mov	r2, r7
   12b10:	mov	r3, #0
   12b14:	str	r7, [sp, #104]	; 0x68
   12b18:	str	r5, [sp, #116]	; 0x74
   12b1c:	mov	r7, r3
   12b20:	mov	r5, r2
   12b24:	str	r4, [sp, #32]
   12b28:	str	r6, [sp, #108]	; 0x6c
   12b2c:	str	r8, [sp, #112]	; 0x70
   12b30:	ldr	r3, [sp, #44]	; 0x2c
   12b34:	add	r6, sl, r7
   12b38:	add	r4, r3, r6
   12b3c:	ldr	r3, [sp, #24]
   12b40:	mov	r1, r4
   12b44:	sub	r2, r3, r6
   12b48:	add	r0, sp, #124	; 0x7c
   12b4c:	add	r3, sp, #128	; 0x80
   12b50:	bl	11938 <strspn@plt+0xba4>
   12b54:	subs	r8, r0, #0
   12b58:	beq	12ee0 <strspn@plt+0x214c>
   12b5c:	cmn	r8, #1
   12b60:	beq	12eb8 <strspn@plt+0x2124>
   12b64:	cmn	r8, #2
   12b68:	beq	12e50 <strspn@plt+0x20bc>
   12b6c:	ldr	r3, [sp, #64]	; 0x40
   12b70:	cmp	r3, #0
   12b74:	beq	12c34 <strspn@plt+0x1ea0>
   12b78:	cmp	r8, #1
   12b7c:	beq	12c34 <strspn@plt+0x1ea0>
   12b80:	sub	r3, r8, #1
   12b84:	add	r6, r3, r6
   12b88:	ldr	r3, [sp, #44]	; 0x2c
   12b8c:	add	r6, r3, r6
   12b90:	ldrb	r3, [r4, #1]!
   12b94:	sub	r3, r3, #91	; 0x5b
   12b98:	cmp	r3, #33	; 0x21
   12b9c:	ldrls	pc, [pc, r3, lsl #2]
   12ba0:	b	12c2c <strspn@plt+0x1e98>
   12ba4:	muleq	r1, r8, ip
   12ba8:	muleq	r1, r8, ip
   12bac:	andeq	r2, r1, ip, lsr #24
   12bb0:	muleq	r1, r8, ip
   12bb4:	andeq	r2, r1, ip, lsr #24
   12bb8:	muleq	r1, r8, ip
   12bbc:	andeq	r2, r1, ip, lsr #24
   12bc0:	andeq	r2, r1, ip, lsr #24
   12bc4:	andeq	r2, r1, ip, lsr #24
   12bc8:	andeq	r2, r1, ip, lsr #24
   12bcc:	andeq	r2, r1, ip, lsr #24
   12bd0:	andeq	r2, r1, ip, lsr #24
   12bd4:	andeq	r2, r1, ip, lsr #24
   12bd8:	andeq	r2, r1, ip, lsr #24
   12bdc:	andeq	r2, r1, ip, lsr #24
   12be0:	andeq	r2, r1, ip, lsr #24
   12be4:	andeq	r2, r1, ip, lsr #24
   12be8:	andeq	r2, r1, ip, lsr #24
   12bec:	andeq	r2, r1, ip, lsr #24
   12bf0:	andeq	r2, r1, ip, lsr #24
   12bf4:	andeq	r2, r1, ip, lsr #24
   12bf8:	andeq	r2, r1, ip, lsr #24
   12bfc:	andeq	r2, r1, ip, lsr #24
   12c00:	andeq	r2, r1, ip, lsr #24
   12c04:	andeq	r2, r1, ip, lsr #24
   12c08:	andeq	r2, r1, ip, lsr #24
   12c0c:	andeq	r2, r1, ip, lsr #24
   12c10:	andeq	r2, r1, ip, lsr #24
   12c14:	andeq	r2, r1, ip, lsr #24
   12c18:	andeq	r2, r1, ip, lsr #24
   12c1c:	andeq	r2, r1, ip, lsr #24
   12c20:	andeq	r2, r1, ip, lsr #24
   12c24:	andeq	r2, r1, ip, lsr #24
   12c28:	muleq	r1, r8, ip
   12c2c:	cmp	r6, r4
   12c30:	bne	12b90 <strspn@plt+0x1dfc>
   12c34:	ldr	r0, [sp, #124]	; 0x7c
   12c38:	bl	10c20 <iswprint@plt>
   12c3c:	add	r7, r7, r8
   12c40:	cmp	r0, #0
   12c44:	add	r0, sp, #128	; 0x80
   12c48:	moveq	r5, #0
   12c4c:	bl	10bd8 <mbsinit@plt>
   12c50:	cmp	r0, #0
   12c54:	beq	12b30 <strspn@plt+0x1d9c>
   12c58:	ldr	r4, [sp, #32]
   12c5c:	str	r5, [sp, #32]
   12c60:	ldr	r3, [sp, #32]
   12c64:	mov	r1, r7
   12c68:	eor	r3, r3, #1
   12c6c:	ldr	r7, [sp, #104]	; 0x68
   12c70:	ldr	r6, [sp, #108]	; 0x6c
   12c74:	ldr	r8, [sp, #112]	; 0x70
   12c78:	ldr	r5, [sp, #116]	; 0x74
   12c7c:	uxtb	r3, r3
   12c80:	cmp	r1, #1
   12c84:	bls	12940 <strspn@plt+0x1bac>
   12c88:	ldr	r2, [sp, #56]	; 0x38
   12c8c:	and	r3, r3, r2
   12c90:	uxtb	r3, r3
   12c94:	b	12950 <strspn@plt+0x1bbc>
   12c98:	mov	r3, #2
   12c9c:	str	r3, [sp, #176]	; 0xb0
   12ca0:	ldr	r2, [sp, #64]	; 0x40
   12ca4:	ldr	r3, [sp, #56]	; 0x38
   12ca8:	mov	sl, r9
   12cac:	mov	r9, fp
   12cb0:	and	r3, r3, r2
   12cb4:	tst	r3, #255	; 0xff
   12cb8:	ldr	r3, [sp, #176]	; 0xb0
   12cbc:	movne	r3, #4
   12cc0:	str	r3, [sp, #176]	; 0xb0
   12cc4:	ldr	r3, [sp, #180]	; 0xb4
   12cc8:	mov	ip, #0
   12ccc:	bic	r3, r3, #2
   12cd0:	str	r3, [sp, #4]
   12cd4:	ldr	r3, [sp, #192]	; 0xc0
   12cd8:	ldr	r2, [sp, #44]	; 0x2c
   12cdc:	str	r3, [sp, #16]
   12ce0:	ldr	r3, [sp, #188]	; 0xbc
   12ce4:	mov	r1, r9
   12ce8:	str	r3, [sp, #12]
   12cec:	ldr	r3, [sp, #176]	; 0xb0
   12cf0:	mov	r0, sl
   12cf4:	str	r3, [sp]
   12cf8:	str	ip, [sp, #8]
   12cfc:	ldr	r3, [sp, #24]
   12d00:	bl	11b60 <strspn@plt+0xdcc>
   12d04:	mov	fp, r0
   12d08:	mov	r0, fp
   12d0c:	add	sp, sp, #140	; 0x8c
   12d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d14:	mov	r4, #92	; 0x5c
   12d18:	mov	r1, #0
   12d1c:	mov	r3, r4
   12d20:	b	12314 <strspn@plt+0x1580>
   12d24:	mov	r3, #0
   12d28:	ldr	r1, [sp, #52]	; 0x34
   12d2c:	str	r3, [sp, #32]
   12d30:	mov	r4, #63	; 0x3f
   12d34:	b	12134 <strspn@plt+0x13a0>
   12d38:	cmp	fp, #0
   12d3c:	beq	12d98 <strspn@plt+0x2004>
   12d40:	mov	r3, #39	; 0x27
   12d44:	strb	r3, [r9]
   12d48:	mov	r3, #0
   12d4c:	str	r3, [sp, #40]	; 0x28
   12d50:	mov	r3, #1
   12d54:	str	r3, [sp, #68]	; 0x44
   12d58:	ldr	r3, [pc, #448]	; 12f20 <strspn@plt+0x218c>
   12d5c:	mov	r8, #1
   12d60:	str	r3, [sp, #72]	; 0x48
   12d64:	b	11f48 <strspn@plt+0x11b4>
   12d68:	ldr	r3, [sp, #40]	; 0x28
   12d6c:	mov	sl, r9
   12d70:	str	r3, [sp, #56]	; 0x38
   12d74:	mov	r9, fp
   12d78:	ldr	r2, [sp, #64]	; 0x40
   12d7c:	b	12cb0 <strspn@plt+0x1f1c>
   12d80:	str	r2, [sp, #36]	; 0x24
   12d84:	b	12198 <strspn@plt+0x1404>
   12d88:	mov	r1, #0
   12d8c:	str	r3, [sp, #32]
   12d90:	mov	r4, #63	; 0x3f
   12d94:	b	12134 <strspn@plt+0x13a0>
   12d98:	ldr	r3, [pc, #384]	; 12f20 <strspn@plt+0x218c>
   12d9c:	str	r3, [sp, #72]	; 0x48
   12da0:	mov	r3, #0
   12da4:	str	r3, [sp, #40]	; 0x28
   12da8:	mov	r3, #1
   12dac:	str	r3, [sp, #68]	; 0x44
   12db0:	mov	r8, r3
   12db4:	b	11f48 <strspn@plt+0x11b4>
   12db8:	bl	10d7c <abort@plt>
   12dbc:	cmp	fp, #0
   12dc0:	beq	12e20 <strspn@plt+0x208c>
   12dc4:	mov	r2, #1
   12dc8:	mov	r3, #34	; 0x22
   12dcc:	strb	r3, [r9]
   12dd0:	mov	r8, r2
   12dd4:	mov	r3, r2
   12dd8:	str	r2, [sp, #68]	; 0x44
   12ddc:	str	r3, [sp, #56]	; 0x38
   12de0:	ldr	r3, [pc, #316]	; 12f24 <strspn@plt+0x2190>
   12de4:	ldr	r1, [sp, #56]	; 0x38
   12de8:	str	r3, [sp, #72]	; 0x48
   12dec:	ldr	r2, [sp, #176]	; 0xb0
   12df0:	ldr	ip, [sp, #40]	; 0x28
   12df4:	ldr	lr, [sp, #176]	; 0xb0
   12df8:	b	11c2c <strspn@plt+0xe98>
   12dfc:	ldr	r0, [sp, #44]	; 0x2c
   12e00:	bl	10cc8 <strlen@plt>
   12e04:	str	r0, [sp, #24]
   12e08:	b	12b0c <strspn@plt+0x1d78>
   12e0c:	mov	r7, #0
   12e10:	ldr	r1, [sp, #52]	; 0x34
   12e14:	str	r3, [sp, #32]
   12e18:	mov	r4, #48	; 0x30
   12e1c:	b	12134 <strspn@plt+0x13a0>
   12e20:	mov	r3, #1
   12e24:	str	r3, [sp, #68]	; 0x44
   12e28:	mov	r8, r3
   12e2c:	b	12ddc <strspn@plt+0x2048>
   12e30:	mov	r3, #2
   12e34:	mov	sl, r9
   12e38:	str	r3, [sp, #176]	; 0xb0
   12e3c:	mov	r9, fp
   12e40:	ldr	r3, [sp, #56]	; 0x38
   12e44:	b	12cb0 <strspn@plt+0x1f1c>
   12e48:	ldr	r6, [sp, #48]	; 0x30
   12e4c:	b	128fc <strspn@plt+0x1b68>
   12e50:	ldr	r0, [sp, #24]
   12e54:	mov	ip, r6
   12e58:	cmp	r0, ip
   12e5c:	mov	r1, r7
   12e60:	mov	r2, r4
   12e64:	ldr	r7, [sp, #104]	; 0x68
   12e68:	ldr	r4, [sp, #32]
   12e6c:	ldr	r6, [sp, #108]	; 0x6c
   12e70:	ldr	r8, [sp, #112]	; 0x70
   12e74:	ldr	r5, [sp, #116]	; 0x74
   12e78:	bls	12ea8 <strspn@plt+0x2114>
   12e7c:	ldrb	r3, [r2]
   12e80:	cmp	r3, #0
   12e84:	bne	12e98 <strspn@plt+0x2104>
   12e88:	b	12fb8 <strspn@plt+0x2224>
   12e8c:	ldrb	r3, [r2, #1]!
   12e90:	cmp	r3, #0
   12e94:	beq	12fb8 <strspn@plt+0x2224>
   12e98:	add	r1, r1, #1
   12e9c:	add	r3, sl, r1
   12ea0:	cmp	r0, r3
   12ea4:	bhi	12e8c <strspn@plt+0x20f8>
   12ea8:	mov	r2, #0
   12eac:	mov	r3, r7
   12eb0:	str	r2, [sp, #32]
   12eb4:	b	12c80 <strspn@plt+0x1eec>
   12eb8:	mov	r1, r7
   12ebc:	ldr	r7, [sp, #104]	; 0x68
   12ec0:	mov	r2, #0
   12ec4:	ldr	r4, [sp, #32]
   12ec8:	ldr	r6, [sp, #108]	; 0x6c
   12ecc:	ldr	r8, [sp, #112]	; 0x70
   12ed0:	ldr	r5, [sp, #116]	; 0x74
   12ed4:	mov	r3, r7
   12ed8:	str	r2, [sp, #32]
   12edc:	b	12c80 <strspn@plt+0x1eec>
   12ee0:	mov	r3, r5
   12ee4:	eor	r3, r3, #1
   12ee8:	ldr	r4, [sp, #32]
   12eec:	mov	r1, r7
   12ef0:	str	r5, [sp, #32]
   12ef4:	ldr	r7, [sp, #104]	; 0x68
   12ef8:	ldr	r6, [sp, #108]	; 0x6c
   12efc:	ldr	r8, [sp, #112]	; 0x70
   12f00:	ldr	r5, [sp, #116]	; 0x74
   12f04:	uxtb	r3, r3
   12f08:	b	12c80 <strspn@plt+0x1eec>
   12f0c:	mov	sl, r9
   12f10:	str	r3, [sp, #56]	; 0x38
   12f14:	mov	r9, fp
   12f18:	ldr	r2, [sp, #64]	; 0x40
   12f1c:	b	12cb0 <strspn@plt+0x1f1c>
   12f20:	andeq	r7, r1, r0, asr #20
   12f24:	andeq	r7, r1, ip, lsr sl
   12f28:	andeq	r7, r1, r4, asr #20
   12f2c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12f30:	ldr	r2, [sp, #44]	; 0x2c
   12f34:	ldrb	r1, [r2, r3]
   12f38:	sub	r2, r1, #33	; 0x21
   12f3c:	uxtb	r2, r2
   12f40:	cmp	r2, #29
   12f44:	bhi	12fc4 <strspn@plt+0x2230>
   12f48:	ldr	r0, [pc, #-36]	; 12f2c <strspn@plt+0x2198>
   12f4c:	mov	ip, #1
   12f50:	ands	r2, r0, ip, lsl r2
   12f54:	beq	12fe4 <strspn@plt+0x2250>
   12f58:	ldr	r2, [sp, #40]	; 0x28
   12f5c:	cmp	r2, #0
   12f60:	bne	130d8 <strspn@plt+0x2344>
   12f64:	add	r2, r8, #1
   12f68:	cmp	fp, r8
   12f6c:	strbhi	r4, [r9, r8]
   12f70:	cmp	fp, r2
   12f74:	movhi	r0, #34	; 0x22
   12f78:	strbhi	r0, [r9, r2]
   12f7c:	add	r2, r8, #2
   12f80:	cmp	fp, r2
   12f84:	movhi	r0, #34	; 0x22
   12f88:	strbhi	r0, [r9, r2]
   12f8c:	add	r2, r8, #3
   12f90:	cmp	fp, r2
   12f94:	mov	sl, r3
   12f98:	ldr	r3, [sp, #40]	; 0x28
   12f9c:	movhi	r0, #63	; 0x3f
   12fa0:	mov	r4, r1
   12fa4:	strbhi	r0, [r9, r2]
   12fa8:	add	r8, r8, #4
   12fac:	mov	r1, r3
   12fb0:	str	r3, [sp, #32]
   12fb4:	b	12134 <strspn@plt+0x13a0>
   12fb8:	str	r3, [sp, #32]
   12fbc:	mov	r3, r7
   12fc0:	b	12c80 <strspn@plt+0x1eec>
   12fc4:	mov	r1, #0
   12fc8:	str	r1, [sp, #32]
   12fcc:	b	12134 <strspn@plt+0x13a0>
   12fd0:	mov	sl, r9
   12fd4:	ldr	r3, [sp, #56]	; 0x38
   12fd8:	mov	r9, fp
   12fdc:	ldr	r2, [sp, #64]	; 0x40
   12fe0:	b	12cb0 <strspn@plt+0x1f1c>
   12fe4:	str	r2, [sp, #32]
   12fe8:	mov	r1, #0
   12fec:	b	12134 <strspn@plt+0x13a0>
   12ff0:	ldr	r2, [sp, #76]	; 0x4c
   12ff4:	mov	sl, r9
   12ff8:	mov	r9, fp
   12ffc:	mov	fp, r8
   13000:	ldr	r1, [sp, #72]	; 0x48
   13004:	cmp	r1, #0
   13008:	moveq	r3, #0
   1300c:	andne	r3, r2, #1
   13010:	cmp	r3, #0
   13014:	beq	13040 <strspn@plt+0x22ac>
   13018:	ldrb	r3, [r1]
   1301c:	cmp	r3, #0
   13020:	beq	13040 <strspn@plt+0x22ac>
   13024:	mov	r2, r1
   13028:	cmp	r9, fp
   1302c:	strbhi	r3, [sl, fp]
   13030:	ldrb	r3, [r2, #1]!
   13034:	add	fp, fp, #1
   13038:	cmp	r3, #0
   1303c:	bne	13028 <strspn@plt+0x2294>
   13040:	cmp	r9, fp
   13044:	movhi	r3, #0
   13048:	strbhi	r3, [sl, fp]
   1304c:	b	12d08 <strspn@plt+0x1f74>
   13050:	ldr	r3, [sp, #192]	; 0xc0
   13054:	mov	ip, #5
   13058:	str	r3, [sp, #16]
   1305c:	ldr	r3, [sp, #188]	; 0xbc
   13060:	ldr	r2, [sp, #44]	; 0x2c
   13064:	str	r3, [sp, #12]
   13068:	ldr	r3, [sp, #184]	; 0xb8
   1306c:	ldr	r1, [sp, #84]	; 0x54
   13070:	str	r3, [sp, #8]
   13074:	ldr	r3, [sp, #180]	; 0xb4
   13078:	mov	r0, r9
   1307c:	str	r3, [sp, #4]
   13080:	str	ip, [sp]
   13084:	ldr	r3, [sp, #24]
   13088:	bl	11b60 <strspn@plt+0xdcc>
   1308c:	mov	fp, r0
   13090:	b	12d08 <strspn@plt+0x1f74>
   13094:	mov	sl, r9
   13098:	mov	r9, fp
   1309c:	mov	fp, r8
   130a0:	b	13000 <strspn@plt+0x226c>
   130a4:	ldr	r1, [sp, #176]	; 0xb0
   130a8:	bl	11a40 <strspn@plt+0xcac>
   130ac:	str	r0, [sp, #192]	; 0xc0
   130b0:	b	1201c <strspn@plt+0x1288>
   130b4:	ldr	r1, [sp, #176]	; 0xb0
   130b8:	bl	11a40 <strspn@plt+0xcac>
   130bc:	str	r0, [sp, #188]	; 0xbc
   130c0:	b	11ffc <strspn@plt+0x1268>
   130c4:	mov	sl, r9
   130c8:	mov	r2, r3
   130cc:	mov	r9, fp
   130d0:	mov	fp, r8
   130d4:	b	13000 <strspn@plt+0x226c>
   130d8:	mov	sl, r9
   130dc:	mov	r9, fp
   130e0:	b	12cc4 <strspn@plt+0x1f30>
   130e4:	push	{r4, r5, r6, lr}
   130e8:	mov	r5, r0
   130ec:	bl	10ce0 <__errno_location@plt>
   130f0:	cmp	r5, #0
   130f4:	mov	r1, #48	; 0x30
   130f8:	mov	r4, r0
   130fc:	ldr	r0, [pc, #16]	; 13114 <strspn@plt+0x2380>
   13100:	ldr	r6, [r4]
   13104:	movne	r0, r5
   13108:	bl	16980 <strspn@plt+0x5bec>
   1310c:	str	r6, [r4]
   13110:	pop	{r4, r5, r6, pc}
   13114:	andeq	r8, r2, r0, asr r1
   13118:	ldr	r3, [pc, #12]	; 1312c <strspn@plt+0x2398>
   1311c:	cmp	r0, #0
   13120:	moveq	r0, r3
   13124:	ldr	r0, [r0]
   13128:	bx	lr
   1312c:	andeq	r8, r2, r0, asr r1
   13130:	ldr	r3, [pc, #12]	; 13144 <strspn@plt+0x23b0>
   13134:	cmp	r0, #0
   13138:	moveq	r0, r3
   1313c:	str	r1, [r0]
   13140:	bx	lr
   13144:	andeq	r8, r2, r0, asr r1
   13148:	ldr	r3, [pc, #52]	; 13184 <strspn@plt+0x23f0>
   1314c:	cmp	r0, #0
   13150:	moveq	r0, r3
   13154:	add	r3, r0, #8
   13158:	push	{lr}		; (str lr, [sp, #-4]!)
   1315c:	lsr	lr, r1, #5
   13160:	and	r1, r1, #31
   13164:	ldr	ip, [r3, lr, lsl #2]
   13168:	lsr	r0, ip, r1
   1316c:	eor	r2, r2, r0
   13170:	and	r2, r2, #1
   13174:	and	r0, r0, #1
   13178:	eor	r1, ip, r2, lsl r1
   1317c:	str	r1, [r3, lr, lsl #2]
   13180:	pop	{pc}		; (ldr pc, [sp], #4)
   13184:	andeq	r8, r2, r0, asr r1
   13188:	ldr	r3, [pc, #16]	; 131a0 <strspn@plt+0x240c>
   1318c:	cmp	r0, #0
   13190:	movne	r3, r0
   13194:	ldr	r0, [r3, #4]
   13198:	str	r1, [r3, #4]
   1319c:	bx	lr
   131a0:	andeq	r8, r2, r0, asr r1
   131a4:	ldr	r3, [pc, #44]	; 131d8 <strspn@plt+0x2444>
   131a8:	cmp	r0, #0
   131ac:	moveq	r0, r3
   131b0:	mov	ip, #10
   131b4:	cmp	r2, #0
   131b8:	cmpne	r1, #0
   131bc:	str	ip, [r0]
   131c0:	beq	131d0 <strspn@plt+0x243c>
   131c4:	str	r1, [r0, #40]	; 0x28
   131c8:	str	r2, [r0, #44]	; 0x2c
   131cc:	bx	lr
   131d0:	push	{r4, lr}
   131d4:	bl	10d7c <abort@plt>
   131d8:	andeq	r8, r2, r0, asr r1
   131dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   131e0:	sub	sp, sp, #24
   131e4:	ldr	ip, [pc, #108]	; 13258 <strspn@plt+0x24c4>
   131e8:	ldr	r4, [sp, #56]	; 0x38
   131ec:	mov	r9, r2
   131f0:	cmp	r4, #0
   131f4:	moveq	r4, ip
   131f8:	mov	sl, r3
   131fc:	mov	r7, r0
   13200:	mov	r8, r1
   13204:	bl	10ce0 <__errno_location@plt>
   13208:	ldr	r3, [r4, #44]	; 0x2c
   1320c:	mov	r1, r8
   13210:	ldr	r6, [r0]
   13214:	str	r3, [sp, #16]
   13218:	ldr	r2, [r4, #40]	; 0x28
   1321c:	add	r3, r4, #8
   13220:	str	r3, [sp, #8]
   13224:	str	r2, [sp, #12]
   13228:	ldr	r2, [r4, #4]
   1322c:	mov	r5, r0
   13230:	str	r2, [sp, #4]
   13234:	ldr	ip, [r4]
   13238:	mov	r3, sl
   1323c:	mov	r2, r9
   13240:	mov	r0, r7
   13244:	str	ip, [sp]
   13248:	bl	11b60 <strspn@plt+0xdcc>
   1324c:	str	r6, [r5]
   13250:	add	sp, sp, #24
   13254:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13258:	andeq	r8, r2, r0, asr r1
   1325c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13260:	cmp	r2, #0
   13264:	sub	sp, sp, #36	; 0x24
   13268:	ldr	r4, [pc, #164]	; 13314 <strspn@plt+0x2580>
   1326c:	mov	r8, r1
   13270:	movne	r4, r2
   13274:	mov	r7, r0
   13278:	bl	10ce0 <__errno_location@plt>
   1327c:	ldr	r3, [r4, #44]	; 0x2c
   13280:	ldr	r5, [r4, #4]
   13284:	add	r9, r4, #8
   13288:	orr	r5, r5, #1
   1328c:	mov	r1, #0
   13290:	mov	r2, r7
   13294:	ldr	fp, [r0]
   13298:	str	r3, [sp, #16]
   1329c:	ldr	r3, [r4, #40]	; 0x28
   132a0:	stmib	sp, {r5, r9}
   132a4:	str	r3, [sp, #12]
   132a8:	ldr	r3, [r4]
   132ac:	mov	r6, r0
   132b0:	str	r3, [sp]
   132b4:	mov	r0, r1
   132b8:	mov	r3, r8
   132bc:	bl	11b60 <strspn@plt+0xdcc>
   132c0:	add	r1, r0, #1
   132c4:	mov	r0, r1
   132c8:	str	r1, [sp, #28]
   132cc:	bl	1643c <strspn@plt+0x56a8>
   132d0:	ldr	r3, [r4, #44]	; 0x2c
   132d4:	ldr	r1, [sp, #28]
   132d8:	str	r3, [sp, #16]
   132dc:	ldr	r3, [r4, #40]	; 0x28
   132e0:	str	r5, [sp, #4]
   132e4:	str	r3, [sp, #12]
   132e8:	str	r9, [sp, #8]
   132ec:	ldr	ip, [r4]
   132f0:	mov	r3, r8
   132f4:	mov	r2, r7
   132f8:	str	ip, [sp]
   132fc:	mov	sl, r0
   13300:	bl	11b60 <strspn@plt+0xdcc>
   13304:	mov	r0, sl
   13308:	str	fp, [r6]
   1330c:	add	sp, sp, #36	; 0x24
   13310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13314:	andeq	r8, r2, r0, asr r1
   13318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1331c:	cmp	r3, #0
   13320:	sub	sp, sp, #44	; 0x2c
   13324:	ldr	r4, [pc, #192]	; 133ec <strspn@plt+0x2658>
   13328:	mov	r6, r2
   1332c:	movne	r4, r3
   13330:	mov	r9, r1
   13334:	mov	r8, r0
   13338:	bl	10ce0 <__errno_location@plt>
   1333c:	ldr	r3, [r4, #44]	; 0x2c
   13340:	ldr	r5, [r4, #4]
   13344:	add	sl, r4, #8
   13348:	cmp	r6, #0
   1334c:	orreq	r5, r5, #1
   13350:	mov	r1, #0
   13354:	ldr	r2, [r0]
   13358:	str	r3, [sp, #16]
   1335c:	ldr	r3, [r4, #40]	; 0x28
   13360:	stmib	sp, {r5, sl}
   13364:	str	r3, [sp, #12]
   13368:	ldr	r3, [r4]
   1336c:	mov	r7, r0
   13370:	str	r2, [sp, #28]
   13374:	str	r3, [sp]
   13378:	mov	r2, r8
   1337c:	mov	r3, r9
   13380:	mov	r0, r1
   13384:	bl	11b60 <strspn@plt+0xdcc>
   13388:	add	r1, r0, #1
   1338c:	mov	fp, r0
   13390:	mov	r0, r1
   13394:	str	r1, [sp, #36]	; 0x24
   13398:	bl	1643c <strspn@plt+0x56a8>
   1339c:	ldr	r3, [r4, #44]	; 0x2c
   133a0:	mov	r2, r8
   133a4:	str	r3, [sp, #16]
   133a8:	ldr	r3, [r4, #40]	; 0x28
   133ac:	str	r5, [sp, #4]
   133b0:	str	r3, [sp, #12]
   133b4:	str	sl, [sp, #8]
   133b8:	ldr	ip, [r4]
   133bc:	ldr	r1, [sp, #36]	; 0x24
   133c0:	mov	r3, r9
   133c4:	str	ip, [sp]
   133c8:	str	r0, [sp, #32]
   133cc:	bl	11b60 <strspn@plt+0xdcc>
   133d0:	ldr	r2, [sp, #28]
   133d4:	cmp	r6, #0
   133d8:	str	r2, [r7]
   133dc:	ldr	r0, [sp, #32]
   133e0:	strne	fp, [r6]
   133e4:	add	sp, sp, #44	; 0x2c
   133e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133ec:	andeq	r8, r2, r0, asr r1
   133f0:	push	{r4, r5, r6, r7, r8, lr}
   133f4:	ldr	r6, [pc, #116]	; 13470 <strspn@plt+0x26dc>
   133f8:	ldr	r3, [r6, #4]
   133fc:	ldr	r7, [r6]
   13400:	cmp	r3, #1
   13404:	movgt	r5, r7
   13408:	movgt	r4, #1
   1340c:	ble	1342c <strspn@plt+0x2698>
   13410:	ldr	r0, [r5, #12]
   13414:	bl	16ce8 <strspn@plt+0x5f54>
   13418:	ldr	r3, [r6, #4]
   1341c:	add	r4, r4, #1
   13420:	cmp	r3, r4
   13424:	add	r5, r5, #8
   13428:	bgt	13410 <strspn@plt+0x267c>
   1342c:	ldr	r0, [r7, #4]
   13430:	ldr	r4, [pc, #60]	; 13474 <strspn@plt+0x26e0>
   13434:	cmp	r0, r4
   13438:	beq	1344c <strspn@plt+0x26b8>
   1343c:	bl	16ce8 <strspn@plt+0x5f54>
   13440:	mov	r3, #256	; 0x100
   13444:	str	r4, [r6, #12]
   13448:	str	r3, [r6, #8]
   1344c:	ldr	r4, [pc, #36]	; 13478 <strspn@plt+0x26e4>
   13450:	cmp	r7, r4
   13454:	beq	13464 <strspn@plt+0x26d0>
   13458:	mov	r0, r7
   1345c:	bl	16ce8 <strspn@plt+0x5f54>
   13460:	str	r4, [r6]
   13464:	mov	r3, #1
   13468:	str	r3, [r6, #4]
   1346c:	pop	{r4, r5, r6, r7, r8, pc}
   13470:	ldrdeq	r8, [r2], -ip
   13474:	andeq	r8, r2, r0, lsl #3
   13478:	andeq	r8, r2, r4, ror #1
   1347c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13480:	sub	sp, sp, #44	; 0x2c
   13484:	mov	r5, r0
   13488:	mov	sl, r1
   1348c:	bl	10ce0 <__errno_location@plt>
   13490:	ldr	r4, [pc, #400]	; 13628 <strspn@plt+0x2894>
   13494:	cmn	r5, #-2147483647	; 0x80000001
   13498:	ldr	r6, [r4]
   1349c:	mov	r8, r0
   134a0:	movne	r0, #0
   134a4:	moveq	r0, #1
   134a8:	ldr	r3, [r8]
   134ac:	orrs	r0, r0, r5, lsr #31
   134b0:	str	r3, [sp, #24]
   134b4:	bne	13624 <strspn@plt+0x2890>
   134b8:	ldr	r2, [r4, #4]
   134bc:	cmp	r5, r2
   134c0:	blt	13520 <strspn@plt+0x278c>
   134c4:	add	r7, r4, #8
   134c8:	cmp	r6, r7
   134cc:	str	r2, [sp, #36]	; 0x24
   134d0:	beq	135f4 <strspn@plt+0x2860>
   134d4:	mov	r3, #8
   134d8:	sub	r2, r5, r2
   134dc:	mov	r0, r6
   134e0:	str	r3, [sp]
   134e4:	add	r2, r2, #1
   134e8:	mvn	r3, #-2147483648	; 0x80000000
   134ec:	add	r1, sp, #36	; 0x24
   134f0:	bl	16658 <strspn@plt+0x58c4>
   134f4:	mov	r6, r0
   134f8:	str	r0, [r4]
   134fc:	ldr	r0, [r4, #4]
   13500:	ldr	r2, [sp, #36]	; 0x24
   13504:	mov	r1, #0
   13508:	sub	r2, r2, r0
   1350c:	add	r0, r6, r0, lsl #3
   13510:	lsl	r2, r2, #3
   13514:	bl	10cf8 <memset@plt>
   13518:	ldr	r3, [sp, #36]	; 0x24
   1351c:	str	r3, [r4, #4]
   13520:	ldr	r4, [pc, #260]	; 1362c <strspn@plt+0x2898>
   13524:	add	fp, r6, r5, lsl #3
   13528:	ldr	r9, [r6, r5, lsl #3]
   1352c:	ldr	r0, [r4, #4]
   13530:	ldr	r3, [r4]
   13534:	ldr	r7, [fp, #4]
   13538:	ldr	r1, [r4, #44]	; 0x2c
   1353c:	ldr	r2, [r4, #40]	; 0x28
   13540:	orr	r0, r0, #1
   13544:	str	r3, [sp]
   13548:	add	r3, r4, #8
   1354c:	str	r0, [sp, #28]
   13550:	str	r0, [sp, #4]
   13554:	str	r1, [sp, #16]
   13558:	str	r2, [sp, #12]
   1355c:	str	r3, [sp, #8]
   13560:	mov	r0, r7
   13564:	mov	r1, r9
   13568:	mvn	r3, #0
   1356c:	mov	r2, sl
   13570:	bl	11b60 <strspn@plt+0xdcc>
   13574:	cmp	r9, r0
   13578:	bhi	135e0 <strspn@plt+0x284c>
   1357c:	add	r3, r4, #48	; 0x30
   13580:	add	r9, r0, #1
   13584:	cmp	r7, r3
   13588:	str	r9, [r6, r5, lsl #3]
   1358c:	beq	13598 <strspn@plt+0x2804>
   13590:	mov	r0, r7
   13594:	bl	16ce8 <strspn@plt+0x5f54>
   13598:	mov	r0, r9
   1359c:	bl	1643c <strspn@plt+0x56a8>
   135a0:	ldr	ip, [r4, #44]	; 0x2c
   135a4:	ldr	r3, [r4]
   135a8:	ldr	lr, [r4, #40]	; 0x28
   135ac:	ldr	r4, [pc, #124]	; 13630 <strspn@plt+0x289c>
   135b0:	mov	r2, sl
   135b4:	mov	r1, r9
   135b8:	str	r0, [fp, #4]
   135bc:	str	r4, [sp, #8]
   135c0:	ldr	r4, [sp, #28]
   135c4:	str	r3, [sp]
   135c8:	str	r4, [sp, #4]
   135cc:	str	ip, [sp, #16]
   135d0:	str	lr, [sp, #12]
   135d4:	mvn	r3, #0
   135d8:	mov	r7, r0
   135dc:	bl	11b60 <strspn@plt+0xdcc>
   135e0:	ldr	r3, [sp, #24]
   135e4:	mov	r0, r7
   135e8:	str	r3, [r8]
   135ec:	add	sp, sp, #44	; 0x2c
   135f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135f4:	mov	r3, #8
   135f8:	sub	r2, r5, r2
   135fc:	str	r3, [sp]
   13600:	add	r1, sp, #36	; 0x24
   13604:	add	r2, r2, #1
   13608:	mvn	r3, #-2147483648	; 0x80000000
   1360c:	bl	16658 <strspn@plt+0x58c4>
   13610:	mov	r6, r0
   13614:	ldm	r7, {r0, r1}
   13618:	str	r6, [r4]
   1361c:	stm	r6, {r0, r1}
   13620:	b	134fc <strspn@plt+0x2768>
   13624:	bl	10d7c <abort@plt>
   13628:	ldrdeq	r8, [r2], -ip
   1362c:	andeq	r8, r2, r0, asr r1
   13630:	andeq	r8, r2, r8, asr r1
   13634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13638:	sub	sp, sp, #52	; 0x34
   1363c:	mov	r5, r0
   13640:	mov	sl, r1
   13644:	mov	fp, r2
   13648:	bl	10ce0 <__errno_location@plt>
   1364c:	ldr	r4, [pc, #408]	; 137ec <strspn@plt+0x2a58>
   13650:	cmn	r5, #-2147483647	; 0x80000001
   13654:	ldr	r6, [r4]
   13658:	mov	r8, r0
   1365c:	movne	r0, #0
   13660:	moveq	r0, #1
   13664:	ldr	r3, [r8]
   13668:	orrs	r0, r0, r5, lsr #31
   1366c:	str	r3, [sp, #28]
   13670:	bne	137e8 <strspn@plt+0x2a54>
   13674:	ldr	r2, [r4, #4]
   13678:	cmp	r5, r2
   1367c:	blt	136dc <strspn@plt+0x2948>
   13680:	add	r7, r4, #8
   13684:	cmp	r6, r7
   13688:	str	r2, [sp, #44]	; 0x2c
   1368c:	beq	137b8 <strspn@plt+0x2a24>
   13690:	mov	r3, #8
   13694:	sub	r2, r5, r2
   13698:	mov	r0, r6
   1369c:	str	r3, [sp]
   136a0:	add	r2, r2, #1
   136a4:	mvn	r3, #-2147483648	; 0x80000000
   136a8:	add	r1, sp, #44	; 0x2c
   136ac:	bl	16658 <strspn@plt+0x58c4>
   136b0:	mov	r6, r0
   136b4:	str	r0, [r4]
   136b8:	ldr	r0, [r4, #4]
   136bc:	ldr	r2, [sp, #44]	; 0x2c
   136c0:	mov	r1, #0
   136c4:	sub	r2, r2, r0
   136c8:	add	r0, r6, r0, lsl #3
   136cc:	lsl	r2, r2, #3
   136d0:	bl	10cf8 <memset@plt>
   136d4:	ldr	r3, [sp, #44]	; 0x2c
   136d8:	str	r3, [r4, #4]
   136dc:	ldr	r4, [pc, #268]	; 137f0 <strspn@plt+0x2a5c>
   136e0:	add	r3, r6, r5, lsl #3
   136e4:	str	r3, [sp, #32]
   136e8:	ldr	r7, [r3, #4]
   136ec:	ldr	r0, [r4, #4]
   136f0:	ldr	r3, [r4]
   136f4:	ldr	r9, [r6, r5, lsl #3]
   136f8:	ldr	r1, [r4, #44]	; 0x2c
   136fc:	ldr	r2, [r4, #40]	; 0x28
   13700:	orr	r0, r0, #1
   13704:	str	r3, [sp]
   13708:	add	r3, r4, #8
   1370c:	str	r0, [sp, #36]	; 0x24
   13710:	str	r0, [sp, #4]
   13714:	str	r1, [sp, #16]
   13718:	str	r2, [sp, #12]
   1371c:	str	r3, [sp, #8]
   13720:	mov	r0, r7
   13724:	mov	r1, r9
   13728:	mov	r3, fp
   1372c:	mov	r2, sl
   13730:	bl	11b60 <strspn@plt+0xdcc>
   13734:	cmp	r9, r0
   13738:	bhi	137a4 <strspn@plt+0x2a10>
   1373c:	add	r3, r4, #48	; 0x30
   13740:	add	r9, r0, #1
   13744:	cmp	r7, r3
   13748:	str	r9, [r6, r5, lsl #3]
   1374c:	beq	13758 <strspn@plt+0x29c4>
   13750:	mov	r0, r7
   13754:	bl	16ce8 <strspn@plt+0x5f54>
   13758:	mov	r0, r9
   1375c:	bl	1643c <strspn@plt+0x56a8>
   13760:	ldr	ip, [sp, #32]
   13764:	ldr	lr, [r4, #44]	; 0x2c
   13768:	ldr	r5, [r4, #40]	; 0x28
   1376c:	mov	r3, fp
   13770:	mov	r2, sl
   13774:	mov	r1, r9
   13778:	str	r0, [ip, #4]
   1377c:	ldr	ip, [r4]
   13780:	ldr	r4, [pc, #108]	; 137f4 <strspn@plt+0x2a60>
   13784:	str	lr, [sp, #16]
   13788:	str	r4, [sp, #8]
   1378c:	ldr	r4, [sp, #36]	; 0x24
   13790:	str	r5, [sp, #12]
   13794:	str	r4, [sp, #4]
   13798:	str	ip, [sp]
   1379c:	mov	r7, r0
   137a0:	bl	11b60 <strspn@plt+0xdcc>
   137a4:	ldr	r3, [sp, #28]
   137a8:	mov	r0, r7
   137ac:	str	r3, [r8]
   137b0:	add	sp, sp, #52	; 0x34
   137b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137b8:	mov	r3, #8
   137bc:	sub	r2, r5, r2
   137c0:	str	r3, [sp]
   137c4:	add	r1, sp, #44	; 0x2c
   137c8:	add	r2, r2, #1
   137cc:	mvn	r3, #-2147483648	; 0x80000000
   137d0:	bl	16658 <strspn@plt+0x58c4>
   137d4:	mov	r6, r0
   137d8:	ldm	r7, {r0, r1}
   137dc:	str	r6, [r4]
   137e0:	stm	r6, {r0, r1}
   137e4:	b	136b8 <strspn@plt+0x2924>
   137e8:	bl	10d7c <abort@plt>
   137ec:	ldrdeq	r8, [r2], -ip
   137f0:	andeq	r8, r2, r0, asr r1
   137f4:	andeq	r8, r2, r8, asr r1
   137f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137fc:	sub	sp, sp, #44	; 0x2c
   13800:	mov	sl, r0
   13804:	bl	10ce0 <__errno_location@plt>
   13808:	ldr	r4, [pc, #352]	; 13970 <strspn@plt+0x2bdc>
   1380c:	ldr	r2, [r4, #4]
   13810:	ldr	r5, [r4]
   13814:	cmp	r2, #0
   13818:	ldr	r3, [r0]
   1381c:	mov	r8, r0
   13820:	str	r3, [sp, #28]
   13824:	bgt	13880 <strspn@plt+0x2aec>
   13828:	add	r6, r4, #8
   1382c:	cmp	r5, r6
   13830:	str	r2, [sp, #36]	; 0x24
   13834:	beq	13940 <strspn@plt+0x2bac>
   13838:	mov	r3, #8
   1383c:	mov	r0, r5
   13840:	str	r3, [sp]
   13844:	rsb	r2, r2, #1
   13848:	mvn	r3, #-2147483648	; 0x80000000
   1384c:	add	r1, sp, #36	; 0x24
   13850:	bl	16658 <strspn@plt+0x58c4>
   13854:	mov	r5, r0
   13858:	str	r0, [r4]
   1385c:	ldr	r0, [r4, #4]
   13860:	ldr	r2, [sp, #36]	; 0x24
   13864:	mov	r1, #0
   13868:	sub	r2, r2, r0
   1386c:	add	r0, r5, r0, lsl #3
   13870:	lsl	r2, r2, #3
   13874:	bl	10cf8 <memset@plt>
   13878:	ldr	r3, [sp, #36]	; 0x24
   1387c:	str	r3, [r4, #4]
   13880:	ldr	r4, [pc, #236]	; 13974 <strspn@plt+0x2be0>
   13884:	ldr	r9, [r5]
   13888:	ldr	r6, [r5, #4]
   1388c:	ldr	r7, [r4, #4]
   13890:	ldr	r1, [r4, #44]	; 0x2c
   13894:	ldr	r2, [r4, #40]	; 0x28
   13898:	ldr	r3, [r4]
   1389c:	orr	r7, r7, #1
   138a0:	add	fp, r4, #8
   138a4:	str	r1, [sp, #16]
   138a8:	str	r2, [sp, #12]
   138ac:	str	r3, [sp]
   138b0:	str	r7, [sp, #4]
   138b4:	str	fp, [sp, #8]
   138b8:	mov	r1, r9
   138bc:	mov	r0, r6
   138c0:	mvn	r3, #0
   138c4:	mov	r2, sl
   138c8:	bl	11b60 <strspn@plt+0xdcc>
   138cc:	cmp	r9, r0
   138d0:	bhi	1392c <strspn@plt+0x2b98>
   138d4:	add	r3, r4, #48	; 0x30
   138d8:	add	r9, r0, #1
   138dc:	cmp	r6, r3
   138e0:	str	r9, [r5]
   138e4:	beq	138f0 <strspn@plt+0x2b5c>
   138e8:	mov	r0, r6
   138ec:	bl	16ce8 <strspn@plt+0x5f54>
   138f0:	mov	r0, r9
   138f4:	bl	1643c <strspn@plt+0x56a8>
   138f8:	ldr	ip, [r4, #44]	; 0x2c
   138fc:	ldr	r3, [r4]
   13900:	ldr	lr, [r4, #40]	; 0x28
   13904:	mov	r2, sl
   13908:	mov	r1, r9
   1390c:	str	r0, [r5, #4]
   13910:	str	r3, [sp]
   13914:	stmib	sp, {r7, fp}
   13918:	str	ip, [sp, #16]
   1391c:	str	lr, [sp, #12]
   13920:	mvn	r3, #0
   13924:	mov	r6, r0
   13928:	bl	11b60 <strspn@plt+0xdcc>
   1392c:	ldr	r3, [sp, #28]
   13930:	mov	r0, r6
   13934:	str	r3, [r8]
   13938:	add	sp, sp, #44	; 0x2c
   1393c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13940:	mov	r3, #8
   13944:	str	r3, [sp]
   13948:	add	r1, sp, #36	; 0x24
   1394c:	rsb	r2, r2, #1
   13950:	mvn	r3, #-2147483648	; 0x80000000
   13954:	mov	r0, #0
   13958:	bl	16658 <strspn@plt+0x58c4>
   1395c:	mov	r5, r0
   13960:	ldm	r6, {r0, r1}
   13964:	str	r5, [r4]
   13968:	stm	r5, {r0, r1}
   1396c:	b	1385c <strspn@plt+0x2ac8>
   13970:	ldrdeq	r8, [r2], -ip
   13974:	andeq	r8, r2, r0, asr r1
   13978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1397c:	sub	sp, sp, #44	; 0x2c
   13980:	mov	r9, r0
   13984:	mov	sl, r1
   13988:	bl	10ce0 <__errno_location@plt>
   1398c:	ldr	r4, [pc, #364]	; 13b00 <strspn@plt+0x2d6c>
   13990:	ldr	r2, [r4, #4]
   13994:	ldr	r5, [r4]
   13998:	cmp	r2, #0
   1399c:	ldr	r3, [r0]
   139a0:	mov	r7, r0
   139a4:	str	r3, [sp, #24]
   139a8:	bgt	13a04 <strspn@plt+0x2c70>
   139ac:	add	r6, r4, #8
   139b0:	cmp	r5, r6
   139b4:	str	r2, [sp, #36]	; 0x24
   139b8:	beq	13ad0 <strspn@plt+0x2d3c>
   139bc:	mov	r3, #8
   139c0:	mov	r0, r5
   139c4:	str	r3, [sp]
   139c8:	rsb	r2, r2, #1
   139cc:	mvn	r3, #-2147483648	; 0x80000000
   139d0:	add	r1, sp, #36	; 0x24
   139d4:	bl	16658 <strspn@plt+0x58c4>
   139d8:	mov	r5, r0
   139dc:	str	r0, [r4]
   139e0:	ldr	r0, [r4, #4]
   139e4:	ldr	r2, [sp, #36]	; 0x24
   139e8:	mov	r1, #0
   139ec:	sub	r2, r2, r0
   139f0:	add	r0, r5, r0, lsl #3
   139f4:	lsl	r2, r2, #3
   139f8:	bl	10cf8 <memset@plt>
   139fc:	ldr	r3, [sp, #36]	; 0x24
   13a00:	str	r3, [r4, #4]
   13a04:	ldr	r4, [pc, #248]	; 13b04 <strspn@plt+0x2d70>
   13a08:	ldr	r8, [r5]
   13a0c:	ldr	r6, [r5, #4]
   13a10:	ldr	r0, [r4, #4]
   13a14:	ldr	r1, [r4, #44]	; 0x2c
   13a18:	ldr	r2, [r4, #40]	; 0x28
   13a1c:	ldr	r3, [r4]
   13a20:	orr	r0, r0, #1
   13a24:	add	fp, r4, #8
   13a28:	str	r0, [sp, #28]
   13a2c:	str	r0, [sp, #4]
   13a30:	str	r1, [sp, #16]
   13a34:	str	r2, [sp, #12]
   13a38:	str	r3, [sp]
   13a3c:	str	fp, [sp, #8]
   13a40:	mov	r1, r8
   13a44:	mov	r0, r6
   13a48:	mov	r3, sl
   13a4c:	mov	r2, r9
   13a50:	bl	11b60 <strspn@plt+0xdcc>
   13a54:	cmp	r8, r0
   13a58:	bhi	13abc <strspn@plt+0x2d28>
   13a5c:	add	r3, r4, #48	; 0x30
   13a60:	add	r8, r0, #1
   13a64:	cmp	r6, r3
   13a68:	str	r8, [r5]
   13a6c:	beq	13a78 <strspn@plt+0x2ce4>
   13a70:	mov	r0, r6
   13a74:	bl	16ce8 <strspn@plt+0x5f54>
   13a78:	mov	r0, r8
   13a7c:	bl	1643c <strspn@plt+0x56a8>
   13a80:	ldr	lr, [r4, #44]	; 0x2c
   13a84:	ldr	ip, [r4]
   13a88:	mov	r3, sl
   13a8c:	mov	r2, r9
   13a90:	mov	r1, r8
   13a94:	str	r0, [r5, #4]
   13a98:	ldr	r5, [r4, #40]	; 0x28
   13a9c:	ldr	r4, [sp, #28]
   13aa0:	str	fp, [sp, #8]
   13aa4:	str	r4, [sp, #4]
   13aa8:	str	lr, [sp, #16]
   13aac:	str	r5, [sp, #12]
   13ab0:	str	ip, [sp]
   13ab4:	mov	r6, r0
   13ab8:	bl	11b60 <strspn@plt+0xdcc>
   13abc:	ldr	r3, [sp, #24]
   13ac0:	mov	r0, r6
   13ac4:	str	r3, [r7]
   13ac8:	add	sp, sp, #44	; 0x2c
   13acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ad0:	mov	r3, #8
   13ad4:	str	r3, [sp]
   13ad8:	add	r1, sp, #36	; 0x24
   13adc:	rsb	r2, r2, #1
   13ae0:	mvn	r3, #-2147483648	; 0x80000000
   13ae4:	mov	r0, #0
   13ae8:	bl	16658 <strspn@plt+0x58c4>
   13aec:	mov	r5, r0
   13af0:	ldm	r6, {r0, r1}
   13af4:	str	r5, [r4]
   13af8:	stm	r5, {r0, r1}
   13afc:	b	139e0 <strspn@plt+0x2c4c>
   13b00:	ldrdeq	r8, [r2], -ip
   13b04:	andeq	r8, r2, r0, asr r1
   13b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b0c:	sub	sp, sp, #132	; 0x84
   13b10:	mov	r5, r1
   13b14:	mov	r4, r0
   13b18:	mov	r9, r2
   13b1c:	add	r0, sp, #80	; 0x50
   13b20:	mov	r2, #48	; 0x30
   13b24:	mov	r1, #0
   13b28:	bl	10cf8 <memset@plt>
   13b2c:	cmp	r5, #10
   13b30:	beq	13ce8 <strspn@plt+0x2f54>
   13b34:	add	lr, sp, #80	; 0x50
   13b38:	str	r5, [sp, #80]	; 0x50
   13b3c:	ldm	lr!, {r0, r1, r2, r3}
   13b40:	add	ip, sp, #32
   13b44:	ldr	r6, [pc, #416]	; 13cec <strspn@plt+0x2f58>
   13b48:	stmia	ip!, {r0, r1, r2, r3}
   13b4c:	ldm	lr!, {r0, r1, r2, r3}
   13b50:	stmia	ip!, {r0, r1, r2, r3}
   13b54:	ldm	lr, {r0, r1, r2, r3}
   13b58:	stm	ip, {r0, r1, r2, r3}
   13b5c:	bl	10ce0 <__errno_location@plt>
   13b60:	cmn	r4, #-2147483647	; 0x80000001
   13b64:	ldr	r5, [r6]
   13b68:	mov	r7, r0
   13b6c:	movne	r0, #0
   13b70:	moveq	r0, #1
   13b74:	ldr	r3, [r7]
   13b78:	orrs	r0, r0, r4, lsr #31
   13b7c:	str	r3, [sp, #24]
   13b80:	bne	13ce8 <strspn@plt+0x2f54>
   13b84:	ldr	r2, [r6, #4]
   13b88:	cmp	r4, r2
   13b8c:	blt	13bec <strspn@plt+0x2e58>
   13b90:	add	r8, r6, #8
   13b94:	cmp	r5, r8
   13b98:	str	r2, [sp, #80]	; 0x50
   13b9c:	beq	13cb8 <strspn@plt+0x2f24>
   13ba0:	mov	r3, #8
   13ba4:	sub	r2, r4, r2
   13ba8:	mov	r0, r5
   13bac:	str	r3, [sp]
   13bb0:	add	r2, r2, #1
   13bb4:	add	r1, sp, #80	; 0x50
   13bb8:	mvn	r3, #-2147483648	; 0x80000000
   13bbc:	bl	16658 <strspn@plt+0x58c4>
   13bc0:	mov	r5, r0
   13bc4:	str	r0, [r6]
   13bc8:	ldr	r0, [r6, #4]
   13bcc:	ldr	r2, [sp, #80]	; 0x50
   13bd0:	mov	r1, #0
   13bd4:	sub	r2, r2, r0
   13bd8:	add	r0, r5, r0, lsl #3
   13bdc:	lsl	r2, r2, #3
   13be0:	bl	10cf8 <memset@plt>
   13be4:	ldr	r3, [sp, #80]	; 0x50
   13be8:	str	r3, [r6, #4]
   13bec:	add	fp, r5, r4, lsl #3
   13bf0:	ldr	r1, [sp, #36]	; 0x24
   13bf4:	ldr	r8, [r5, r4, lsl #3]
   13bf8:	ldr	r6, [fp, #4]
   13bfc:	ldr	r2, [sp, #72]	; 0x48
   13c00:	ldr	r3, [sp, #32]
   13c04:	ldr	ip, [sp, #76]	; 0x4c
   13c08:	orr	r1, r1, #1
   13c0c:	add	sl, sp, #40	; 0x28
   13c10:	str	r1, [sp, #28]
   13c14:	str	r1, [sp, #4]
   13c18:	str	r2, [sp, #12]
   13c1c:	str	r3, [sp]
   13c20:	mov	r0, r6
   13c24:	mov	r1, r8
   13c28:	str	ip, [sp, #16]
   13c2c:	str	sl, [sp, #8]
   13c30:	mvn	r3, #0
   13c34:	mov	r2, r9
   13c38:	bl	11b60 <strspn@plt+0xdcc>
   13c3c:	cmp	r8, r0
   13c40:	bhi	13ca4 <strspn@plt+0x2f10>
   13c44:	ldr	r3, [pc, #164]	; 13cf0 <strspn@plt+0x2f5c>
   13c48:	add	r8, r0, #1
   13c4c:	cmp	r6, r3
   13c50:	str	r8, [r5, r4, lsl #3]
   13c54:	beq	13c60 <strspn@plt+0x2ecc>
   13c58:	mov	r0, r6
   13c5c:	bl	16ce8 <strspn@plt+0x5f54>
   13c60:	mov	r0, r8
   13c64:	bl	1643c <strspn@plt+0x56a8>
   13c68:	ldr	lr, [sp, #76]	; 0x4c
   13c6c:	ldr	r3, [sp, #32]
   13c70:	ldr	ip, [sp, #72]	; 0x48
   13c74:	ldr	r4, [sp, #28]
   13c78:	mov	r2, r9
   13c7c:	mov	r1, r8
   13c80:	str	r0, [fp, #4]
   13c84:	str	r3, [sp]
   13c88:	str	sl, [sp, #8]
   13c8c:	str	r4, [sp, #4]
   13c90:	str	lr, [sp, #16]
   13c94:	str	ip, [sp, #12]
   13c98:	mvn	r3, #0
   13c9c:	mov	r6, r0
   13ca0:	bl	11b60 <strspn@plt+0xdcc>
   13ca4:	ldr	r3, [sp, #24]
   13ca8:	mov	r0, r6
   13cac:	str	r3, [r7]
   13cb0:	add	sp, sp, #132	; 0x84
   13cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cb8:	mov	r3, #8
   13cbc:	sub	r2, r4, r2
   13cc0:	add	r1, sp, #80	; 0x50
   13cc4:	str	r3, [sp]
   13cc8:	add	r2, r2, #1
   13ccc:	mvn	r3, #-2147483648	; 0x80000000
   13cd0:	bl	16658 <strspn@plt+0x58c4>
   13cd4:	mov	r5, r0
   13cd8:	ldm	r8, {r0, r1}
   13cdc:	str	r5, [r6]
   13ce0:	stm	r5, {r0, r1}
   13ce4:	b	13bc8 <strspn@plt+0x2e34>
   13ce8:	bl	10d7c <abort@plt>
   13cec:	ldrdeq	r8, [r2], -ip
   13cf0:	andeq	r8, r2, r0, lsl #3
   13cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cf8:	sub	sp, sp, #132	; 0x84
   13cfc:	mov	r5, r1
   13d00:	mov	r4, r0
   13d04:	mov	r9, r2
   13d08:	add	r0, sp, #80	; 0x50
   13d0c:	mov	r2, #48	; 0x30
   13d10:	mov	r1, #0
   13d14:	mov	sl, r3
   13d18:	bl	10cf8 <memset@plt>
   13d1c:	cmp	r5, #10
   13d20:	beq	13edc <strspn@plt+0x3148>
   13d24:	add	lr, sp, #80	; 0x50
   13d28:	str	r5, [sp, #80]	; 0x50
   13d2c:	ldm	lr!, {r0, r1, r2, r3}
   13d30:	add	ip, sp, #32
   13d34:	ldr	r6, [pc, #420]	; 13ee0 <strspn@plt+0x314c>
   13d38:	stmia	ip!, {r0, r1, r2, r3}
   13d3c:	ldm	lr!, {r0, r1, r2, r3}
   13d40:	stmia	ip!, {r0, r1, r2, r3}
   13d44:	ldm	lr, {r0, r1, r2, r3}
   13d48:	stm	ip, {r0, r1, r2, r3}
   13d4c:	bl	10ce0 <__errno_location@plt>
   13d50:	cmn	r4, #-2147483647	; 0x80000001
   13d54:	ldr	r5, [r6]
   13d58:	mov	r7, r0
   13d5c:	movne	r0, #0
   13d60:	moveq	r0, #1
   13d64:	ldr	r3, [r7]
   13d68:	orrs	r0, r0, r4, lsr #31
   13d6c:	str	r3, [sp, #24]
   13d70:	bne	13edc <strspn@plt+0x3148>
   13d74:	ldr	r2, [r6, #4]
   13d78:	cmp	r4, r2
   13d7c:	blt	13ddc <strspn@plt+0x3048>
   13d80:	add	r8, r6, #8
   13d84:	cmp	r5, r8
   13d88:	str	r2, [sp, #80]	; 0x50
   13d8c:	beq	13eac <strspn@plt+0x3118>
   13d90:	mov	r3, #8
   13d94:	sub	r2, r4, r2
   13d98:	mov	r0, r5
   13d9c:	str	r3, [sp]
   13da0:	add	r2, r2, #1
   13da4:	add	r1, sp, #80	; 0x50
   13da8:	mvn	r3, #-2147483648	; 0x80000000
   13dac:	bl	16658 <strspn@plt+0x58c4>
   13db0:	mov	r5, r0
   13db4:	str	r0, [r6]
   13db8:	ldr	r0, [r6, #4]
   13dbc:	ldr	r2, [sp, #80]	; 0x50
   13dc0:	mov	r1, #0
   13dc4:	sub	r2, r2, r0
   13dc8:	add	r0, r5, r0, lsl #3
   13dcc:	lsl	r2, r2, #3
   13dd0:	bl	10cf8 <memset@plt>
   13dd4:	ldr	r3, [sp, #80]	; 0x50
   13dd8:	str	r3, [r6, #4]
   13ddc:	add	fp, r5, r4, lsl #3
   13de0:	ldr	r3, [sp, #32]
   13de4:	ldr	r1, [sp, #36]	; 0x24
   13de8:	ldr	r8, [r5, r4, lsl #3]
   13dec:	ldr	r6, [fp, #4]
   13df0:	ldr	r2, [sp, #72]	; 0x48
   13df4:	ldr	ip, [sp, #76]	; 0x4c
   13df8:	orr	r1, r1, #1
   13dfc:	str	r3, [sp]
   13e00:	add	r3, sp, #40	; 0x28
   13e04:	str	r1, [sp, #28]
   13e08:	str	r1, [sp, #4]
   13e0c:	str	r2, [sp, #12]
   13e10:	str	r3, [sp, #8]
   13e14:	mov	r0, r6
   13e18:	mov	r1, r8
   13e1c:	str	ip, [sp, #16]
   13e20:	mov	r3, sl
   13e24:	mov	r2, r9
   13e28:	bl	11b60 <strspn@plt+0xdcc>
   13e2c:	cmp	r8, r0
   13e30:	bhi	13e98 <strspn@plt+0x3104>
   13e34:	ldr	r3, [pc, #168]	; 13ee4 <strspn@plt+0x3150>
   13e38:	add	r8, r0, #1
   13e3c:	cmp	r6, r3
   13e40:	str	r8, [r5, r4, lsl #3]
   13e44:	beq	13e50 <strspn@plt+0x30bc>
   13e48:	mov	r0, r6
   13e4c:	bl	16ce8 <strspn@plt+0x5f54>
   13e50:	mov	r0, r8
   13e54:	bl	1643c <strspn@plt+0x56a8>
   13e58:	add	lr, sp, #40	; 0x28
   13e5c:	ldr	ip, [sp, #76]	; 0x4c
   13e60:	ldr	r4, [sp, #72]	; 0x48
   13e64:	ldr	r5, [sp, #28]
   13e68:	mov	r3, sl
   13e6c:	mov	r2, r9
   13e70:	mov	r1, r8
   13e74:	str	r0, [fp, #4]
   13e78:	str	lr, [sp, #8]
   13e7c:	ldr	lr, [sp, #32]
   13e80:	str	r5, [sp, #4]
   13e84:	str	ip, [sp, #16]
   13e88:	str	r4, [sp, #12]
   13e8c:	str	lr, [sp]
   13e90:	mov	r6, r0
   13e94:	bl	11b60 <strspn@plt+0xdcc>
   13e98:	ldr	r3, [sp, #24]
   13e9c:	mov	r0, r6
   13ea0:	str	r3, [r7]
   13ea4:	add	sp, sp, #132	; 0x84
   13ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eac:	mov	r3, #8
   13eb0:	sub	r2, r4, r2
   13eb4:	add	r1, sp, #80	; 0x50
   13eb8:	str	r3, [sp]
   13ebc:	add	r2, r2, #1
   13ec0:	mvn	r3, #-2147483648	; 0x80000000
   13ec4:	bl	16658 <strspn@plt+0x58c4>
   13ec8:	mov	r5, r0
   13ecc:	ldm	r8, {r0, r1}
   13ed0:	str	r5, [r6]
   13ed4:	stm	r5, {r0, r1}
   13ed8:	b	13db8 <strspn@plt+0x3024>
   13edc:	bl	10d7c <abort@plt>
   13ee0:	ldrdeq	r8, [r2], -ip
   13ee4:	andeq	r8, r2, r0, lsl #3
   13ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eec:	sub	sp, sp, #124	; 0x7c
   13ef0:	mov	r4, r0
   13ef4:	mov	r9, r1
   13ef8:	add	r0, sp, #72	; 0x48
   13efc:	mov	r2, #48	; 0x30
   13f00:	mov	r1, #0
   13f04:	bl	10cf8 <memset@plt>
   13f08:	cmp	r4, #10
   13f0c:	beq	14098 <strspn@plt+0x3304>
   13f10:	add	lr, sp, #72	; 0x48
   13f14:	str	r4, [sp, #72]	; 0x48
   13f18:	ldm	lr!, {r0, r1, r2, r3}
   13f1c:	add	ip, sp, #24
   13f20:	ldr	r5, [pc, #372]	; 1409c <strspn@plt+0x3308>
   13f24:	stmia	ip!, {r0, r1, r2, r3}
   13f28:	ldm	lr!, {r0, r1, r2, r3}
   13f2c:	stmia	ip!, {r0, r1, r2, r3}
   13f30:	ldm	lr, {r0, r1, r2, r3}
   13f34:	stm	ip, {r0, r1, r2, r3}
   13f38:	bl	10ce0 <__errno_location@plt>
   13f3c:	ldr	r2, [r5, #4]
   13f40:	ldr	r4, [r5]
   13f44:	cmp	r2, #0
   13f48:	mov	r7, r0
   13f4c:	ldr	fp, [r0]
   13f50:	bgt	13fac <strspn@plt+0x3218>
   13f54:	add	r6, r5, #8
   13f58:	cmp	r4, r6
   13f5c:	str	r2, [sp, #72]	; 0x48
   13f60:	beq	14068 <strspn@plt+0x32d4>
   13f64:	mov	r3, #8
   13f68:	mov	r0, r4
   13f6c:	str	r3, [sp]
   13f70:	rsb	r2, r2, #1
   13f74:	add	r1, sp, #72	; 0x48
   13f78:	mvn	r3, #-2147483648	; 0x80000000
   13f7c:	bl	16658 <strspn@plt+0x58c4>
   13f80:	mov	r4, r0
   13f84:	str	r0, [r5]
   13f88:	ldr	r0, [r5, #4]
   13f8c:	ldr	r2, [sp, #72]	; 0x48
   13f90:	mov	r1, #0
   13f94:	sub	r2, r2, r0
   13f98:	add	r0, r4, r0, lsl #3
   13f9c:	lsl	r2, r2, #3
   13fa0:	bl	10cf8 <memset@plt>
   13fa4:	ldr	r3, [sp, #72]	; 0x48
   13fa8:	str	r3, [r5, #4]
   13fac:	ldr	r6, [sp, #28]
   13fb0:	ldr	r8, [r4]
   13fb4:	ldr	r5, [r4, #4]
   13fb8:	ldr	r2, [sp, #64]	; 0x40
   13fbc:	ldr	r3, [sp, #24]
   13fc0:	ldr	ip, [sp, #68]	; 0x44
   13fc4:	orr	r6, r6, #1
   13fc8:	add	sl, sp, #32
   13fcc:	str	r2, [sp, #12]
   13fd0:	str	r3, [sp]
   13fd4:	str	r6, [sp, #4]
   13fd8:	mov	r1, r8
   13fdc:	mov	r0, r5
   13fe0:	str	ip, [sp, #16]
   13fe4:	str	sl, [sp, #8]
   13fe8:	mvn	r3, #0
   13fec:	mov	r2, r9
   13ff0:	bl	11b60 <strspn@plt+0xdcc>
   13ff4:	cmp	r8, r0
   13ff8:	bhi	14058 <strspn@plt+0x32c4>
   13ffc:	ldr	r3, [pc, #156]	; 140a0 <strspn@plt+0x330c>
   14000:	add	r8, r0, #1
   14004:	cmp	r5, r3
   14008:	str	r8, [r4]
   1400c:	beq	14018 <strspn@plt+0x3284>
   14010:	mov	r0, r5
   14014:	bl	16ce8 <strspn@plt+0x5f54>
   14018:	mov	r0, r8
   1401c:	bl	1643c <strspn@plt+0x56a8>
   14020:	ldr	lr, [sp, #68]	; 0x44
   14024:	ldr	r3, [sp, #24]
   14028:	ldr	ip, [sp, #64]	; 0x40
   1402c:	mov	r2, r9
   14030:	mov	r1, r8
   14034:	str	r0, [r4, #4]
   14038:	str	r3, [sp]
   1403c:	str	sl, [sp, #8]
   14040:	str	r6, [sp, #4]
   14044:	str	lr, [sp, #16]
   14048:	str	ip, [sp, #12]
   1404c:	mvn	r3, #0
   14050:	mov	r5, r0
   14054:	bl	11b60 <strspn@plt+0xdcc>
   14058:	mov	r0, r5
   1405c:	str	fp, [r7]
   14060:	add	sp, sp, #124	; 0x7c
   14064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14068:	mov	r3, #8
   1406c:	add	r1, sp, #72	; 0x48
   14070:	str	r3, [sp]
   14074:	rsb	r2, r2, #1
   14078:	mvn	r3, #-2147483648	; 0x80000000
   1407c:	mov	r0, #0
   14080:	bl	16658 <strspn@plt+0x58c4>
   14084:	mov	r4, r0
   14088:	ldm	r6, {r0, r1}
   1408c:	str	r4, [r5]
   14090:	stm	r4, {r0, r1}
   14094:	b	13f88 <strspn@plt+0x31f4>
   14098:	bl	10d7c <abort@plt>
   1409c:	ldrdeq	r8, [r2], -ip
   140a0:	andeq	r8, r2, r0, lsl #3
   140a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140a8:	sub	sp, sp, #132	; 0x84
   140ac:	mov	r4, r0
   140b0:	mov	r9, r1
   140b4:	mov	sl, r2
   140b8:	add	r0, sp, #80	; 0x50
   140bc:	mov	r2, #48	; 0x30
   140c0:	mov	r1, #0
   140c4:	bl	10cf8 <memset@plt>
   140c8:	cmp	r4, #10
   140cc:	beq	14260 <strspn@plt+0x34cc>
   140d0:	add	lr, sp, #80	; 0x50
   140d4:	str	r4, [sp, #80]	; 0x50
   140d8:	ldm	lr!, {r0, r1, r2, r3}
   140dc:	add	ip, sp, #32
   140e0:	ldr	r5, [pc, #380]	; 14264 <strspn@plt+0x34d0>
   140e4:	stmia	ip!, {r0, r1, r2, r3}
   140e8:	ldm	lr!, {r0, r1, r2, r3}
   140ec:	stmia	ip!, {r0, r1, r2, r3}
   140f0:	ldm	lr, {r0, r1, r2, r3}
   140f4:	stm	ip, {r0, r1, r2, r3}
   140f8:	bl	10ce0 <__errno_location@plt>
   140fc:	ldr	r2, [r5, #4]
   14100:	ldr	r4, [r5]
   14104:	cmp	r2, #0
   14108:	ldr	r3, [r0]
   1410c:	mov	r7, r0
   14110:	str	r3, [sp, #28]
   14114:	bgt	14170 <strspn@plt+0x33dc>
   14118:	add	r6, r5, #8
   1411c:	cmp	r4, r6
   14120:	str	r2, [sp, #80]	; 0x50
   14124:	beq	14230 <strspn@plt+0x349c>
   14128:	mov	r3, #8
   1412c:	mov	r0, r4
   14130:	str	r3, [sp]
   14134:	rsb	r2, r2, #1
   14138:	add	r1, sp, #80	; 0x50
   1413c:	mvn	r3, #-2147483648	; 0x80000000
   14140:	bl	16658 <strspn@plt+0x58c4>
   14144:	mov	r4, r0
   14148:	str	r0, [r5]
   1414c:	ldr	r0, [r5, #4]
   14150:	ldr	r2, [sp, #80]	; 0x50
   14154:	mov	r1, #0
   14158:	sub	r2, r2, r0
   1415c:	add	r0, r4, r0, lsl #3
   14160:	lsl	r2, r2, #3
   14164:	bl	10cf8 <memset@plt>
   14168:	ldr	r3, [sp, #80]	; 0x50
   1416c:	str	r3, [r5, #4]
   14170:	ldr	r6, [sp, #36]	; 0x24
   14174:	ldr	r8, [r4]
   14178:	ldr	r5, [r4, #4]
   1417c:	ldr	r2, [sp, #72]	; 0x48
   14180:	ldr	r3, [sp, #32]
   14184:	ldr	ip, [sp, #76]	; 0x4c
   14188:	orr	r6, r6, #1
   1418c:	add	fp, sp, #40	; 0x28
   14190:	str	r2, [sp, #12]
   14194:	str	r3, [sp]
   14198:	str	r6, [sp, #4]
   1419c:	mov	r1, r8
   141a0:	mov	r0, r5
   141a4:	str	ip, [sp, #16]
   141a8:	str	fp, [sp, #8]
   141ac:	mov	r3, sl
   141b0:	mov	r2, r9
   141b4:	bl	11b60 <strspn@plt+0xdcc>
   141b8:	cmp	r8, r0
   141bc:	bhi	1421c <strspn@plt+0x3488>
   141c0:	ldr	r3, [pc, #160]	; 14268 <strspn@plt+0x34d4>
   141c4:	add	r8, r0, #1
   141c8:	cmp	r5, r3
   141cc:	str	r8, [r4]
   141d0:	beq	141dc <strspn@plt+0x3448>
   141d4:	mov	r0, r5
   141d8:	bl	16ce8 <strspn@plt+0x5f54>
   141dc:	mov	r0, r8
   141e0:	bl	1643c <strspn@plt+0x56a8>
   141e4:	ldr	ip, [sp, #76]	; 0x4c
   141e8:	ldr	lr, [sp, #32]
   141ec:	mov	r3, sl
   141f0:	mov	r2, r9
   141f4:	mov	r1, r8
   141f8:	str	r0, [r4, #4]
   141fc:	ldr	r4, [sp, #72]	; 0x48
   14200:	str	fp, [sp, #8]
   14204:	str	r6, [sp, #4]
   14208:	str	ip, [sp, #16]
   1420c:	str	r4, [sp, #12]
   14210:	str	lr, [sp]
   14214:	mov	r5, r0
   14218:	bl	11b60 <strspn@plt+0xdcc>
   1421c:	ldr	r3, [sp, #28]
   14220:	mov	r0, r5
   14224:	str	r3, [r7]
   14228:	add	sp, sp, #132	; 0x84
   1422c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14230:	mov	r3, #8
   14234:	add	r1, sp, #80	; 0x50
   14238:	str	r3, [sp]
   1423c:	rsb	r2, r2, #1
   14240:	mvn	r3, #-2147483648	; 0x80000000
   14244:	mov	r0, #0
   14248:	bl	16658 <strspn@plt+0x58c4>
   1424c:	mov	r4, r0
   14250:	ldm	r6, {r0, r1}
   14254:	str	r4, [r5]
   14258:	stm	r4, {r0, r1}
   1425c:	b	1414c <strspn@plt+0x33b8>
   14260:	bl	10d7c <abort@plt>
   14264:	ldrdeq	r8, [r2], -ip
   14268:	andeq	r8, r2, r0, lsl #3
   1426c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14270:	mov	r4, r2
   14274:	ldr	lr, [pc, #432]	; 1442c <strspn@plt+0x3698>
   14278:	mov	sl, r0
   1427c:	mov	fp, r1
   14280:	ldm	lr!, {r0, r1, r2, r3}
   14284:	sub	sp, sp, #92	; 0x5c
   14288:	add	ip, sp, #40	; 0x28
   1428c:	lsr	r7, r4, #5
   14290:	stmia	ip!, {r0, r1, r2, r3}
   14294:	add	r6, sp, #48	; 0x30
   14298:	ldm	lr!, {r0, r1, r2, r3}
   1429c:	and	r4, r4, #31
   142a0:	ldr	r5, [pc, #392]	; 14430 <strspn@plt+0x369c>
   142a4:	stmia	ip!, {r0, r1, r2, r3}
   142a8:	ldm	lr, {r0, r1, r2, r3}
   142ac:	stm	ip, {r0, r1, r2, r3}
   142b0:	ldr	r2, [r6, r7, lsl #2]
   142b4:	lsr	r3, r2, r4
   142b8:	eor	r3, r3, #1
   142bc:	and	r3, r3, #1
   142c0:	eor	r4, r2, r3, lsl r4
   142c4:	str	r4, [r6, r7, lsl #2]
   142c8:	bl	10ce0 <__errno_location@plt>
   142cc:	ldr	r2, [r5, #4]
   142d0:	ldr	r4, [r5]
   142d4:	cmp	r2, #0
   142d8:	ldr	r3, [r0]
   142dc:	mov	r8, r0
   142e0:	str	r3, [sp, #28]
   142e4:	bgt	14340 <strspn@plt+0x35ac>
   142e8:	add	r7, r5, #8
   142ec:	cmp	r4, r7
   142f0:	str	r2, [sp, #36]	; 0x24
   142f4:	beq	143fc <strspn@plt+0x3668>
   142f8:	mov	r3, #8
   142fc:	mov	r0, r4
   14300:	str	r3, [sp]
   14304:	rsb	r2, r2, #1
   14308:	mvn	r3, #-2147483648	; 0x80000000
   1430c:	add	r1, sp, #36	; 0x24
   14310:	bl	16658 <strspn@plt+0x58c4>
   14314:	mov	r4, r0
   14318:	str	r0, [r5]
   1431c:	ldr	r0, [r5, #4]
   14320:	ldr	r2, [sp, #36]	; 0x24
   14324:	mov	r1, #0
   14328:	sub	r2, r2, r0
   1432c:	add	r0, r4, r0, lsl #3
   14330:	lsl	r2, r2, #3
   14334:	bl	10cf8 <memset@plt>
   14338:	ldr	r3, [sp, #36]	; 0x24
   1433c:	str	r3, [r5, #4]
   14340:	ldr	r7, [sp, #44]	; 0x2c
   14344:	ldr	r9, [r4]
   14348:	ldr	r5, [r4, #4]
   1434c:	ldr	r2, [sp, #80]	; 0x50
   14350:	ldr	r3, [sp, #40]	; 0x28
   14354:	ldr	ip, [sp, #84]	; 0x54
   14358:	orr	r7, r7, #1
   1435c:	str	r2, [sp, #12]
   14360:	str	r3, [sp]
   14364:	str	r7, [sp, #4]
   14368:	str	r6, [sp, #8]
   1436c:	mov	r1, r9
   14370:	mov	r0, r5
   14374:	str	ip, [sp, #16]
   14378:	mov	r3, fp
   1437c:	mov	r2, sl
   14380:	bl	11b60 <strspn@plt+0xdcc>
   14384:	cmp	r9, r0
   14388:	bhi	143e8 <strspn@plt+0x3654>
   1438c:	ldr	r3, [pc, #160]	; 14434 <strspn@plt+0x36a0>
   14390:	add	r9, r0, #1
   14394:	cmp	r5, r3
   14398:	str	r9, [r4]
   1439c:	beq	143a8 <strspn@plt+0x3614>
   143a0:	mov	r0, r5
   143a4:	bl	16ce8 <strspn@plt+0x5f54>
   143a8:	mov	r0, r9
   143ac:	bl	1643c <strspn@plt+0x56a8>
   143b0:	ldr	ip, [sp, #84]	; 0x54
   143b4:	ldr	lr, [sp, #40]	; 0x28
   143b8:	mov	r3, fp
   143bc:	mov	r2, sl
   143c0:	mov	r1, r9
   143c4:	str	r0, [r4, #4]
   143c8:	ldr	r4, [sp, #80]	; 0x50
   143cc:	str	r6, [sp, #8]
   143d0:	str	r7, [sp, #4]
   143d4:	str	ip, [sp, #16]
   143d8:	str	r4, [sp, #12]
   143dc:	str	lr, [sp]
   143e0:	mov	r5, r0
   143e4:	bl	11b60 <strspn@plt+0xdcc>
   143e8:	ldr	r3, [sp, #28]
   143ec:	mov	r0, r5
   143f0:	str	r3, [r8]
   143f4:	add	sp, sp, #92	; 0x5c
   143f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143fc:	mov	r3, #8
   14400:	str	r3, [sp]
   14404:	add	r1, sp, #36	; 0x24
   14408:	rsb	r2, r2, #1
   1440c:	mvn	r3, #-2147483648	; 0x80000000
   14410:	mov	r0, #0
   14414:	bl	16658 <strspn@plt+0x58c4>
   14418:	mov	r4, r0
   1441c:	ldm	r7, {r0, r1}
   14420:	str	r4, [r5]
   14424:	stm	r4, {r0, r1}
   14428:	b	1431c <strspn@plt+0x3588>
   1442c:	andeq	r8, r2, r0, asr r1
   14430:	ldrdeq	r8, [r2], -ip
   14434:	andeq	r8, r2, r0, lsl #3
   14438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1443c:	mov	r4, r1
   14440:	ldr	lr, [pc, #420]	; 145ec <strspn@plt+0x3858>
   14444:	mov	r6, r0
   14448:	sub	sp, sp, #84	; 0x54
   1444c:	ldm	lr!, {r0, r1, r2, r3}
   14450:	add	ip, sp, #32
   14454:	lsr	r8, r4, #5
   14458:	add	r5, sp, #40	; 0x28
   1445c:	stmia	ip!, {r0, r1, r2, r3}
   14460:	and	r4, r4, #31
   14464:	ldm	lr!, {r0, r1, r2, r3}
   14468:	ldr	r7, [pc, #384]	; 145f0 <strspn@plt+0x385c>
   1446c:	stmia	ip!, {r0, r1, r2, r3}
   14470:	ldm	lr, {r0, r1, r2, r3}
   14474:	stm	ip, {r0, r1, r2, r3}
   14478:	ldr	r2, [r5, r8, lsl #2]
   1447c:	lsr	r3, r2, r4
   14480:	eor	r3, r3, #1
   14484:	and	r3, r3, #1
   14488:	eor	r4, r2, r3, lsl r4
   1448c:	str	r4, [r5, r8, lsl #2]
   14490:	bl	10ce0 <__errno_location@plt>
   14494:	ldr	r2, [r7, #4]
   14498:	ldr	r4, [r7]
   1449c:	cmp	r2, #0
   144a0:	mov	r9, r0
   144a4:	ldr	sl, [r0]
   144a8:	bgt	14504 <strspn@plt+0x3770>
   144ac:	add	r8, r7, #8
   144b0:	cmp	r4, r8
   144b4:	str	r2, [sp, #28]
   144b8:	beq	145bc <strspn@plt+0x3828>
   144bc:	mov	r3, #8
   144c0:	mov	r0, r4
   144c4:	str	r3, [sp]
   144c8:	rsb	r2, r2, #1
   144cc:	mvn	r3, #-2147483648	; 0x80000000
   144d0:	add	r1, sp, #28
   144d4:	bl	16658 <strspn@plt+0x58c4>
   144d8:	mov	r4, r0
   144dc:	str	r0, [r7]
   144e0:	ldr	r0, [r7, #4]
   144e4:	ldr	r2, [sp, #28]
   144e8:	mov	r1, #0
   144ec:	sub	r2, r2, r0
   144f0:	add	r0, r4, r0, lsl #3
   144f4:	lsl	r2, r2, #3
   144f8:	bl	10cf8 <memset@plt>
   144fc:	ldr	r3, [sp, #28]
   14500:	str	r3, [r7, #4]
   14504:	ldr	r8, [sp, #36]	; 0x24
   14508:	ldr	fp, [r4]
   1450c:	ldr	r7, [r4, #4]
   14510:	ldr	r2, [sp, #72]	; 0x48
   14514:	ldr	r3, [sp, #32]
   14518:	ldr	ip, [sp, #76]	; 0x4c
   1451c:	orr	r8, r8, #1
   14520:	str	r2, [sp, #12]
   14524:	str	r3, [sp]
   14528:	str	r8, [sp, #4]
   1452c:	str	r5, [sp, #8]
   14530:	mov	r1, fp
   14534:	mov	r0, r7
   14538:	str	ip, [sp, #16]
   1453c:	mvn	r3, #0
   14540:	mov	r2, r6
   14544:	bl	11b60 <strspn@plt+0xdcc>
   14548:	cmp	fp, r0
   1454c:	bhi	145ac <strspn@plt+0x3818>
   14550:	ldr	r3, [pc, #156]	; 145f4 <strspn@plt+0x3860>
   14554:	add	fp, r0, #1
   14558:	cmp	r7, r3
   1455c:	str	fp, [r4]
   14560:	beq	1456c <strspn@plt+0x37d8>
   14564:	mov	r0, r7
   14568:	bl	16ce8 <strspn@plt+0x5f54>
   1456c:	mov	r0, fp
   14570:	bl	1643c <strspn@plt+0x56a8>
   14574:	ldr	lr, [sp, #76]	; 0x4c
   14578:	ldr	r3, [sp, #32]
   1457c:	ldr	ip, [sp, #72]	; 0x48
   14580:	mov	r2, r6
   14584:	mov	r1, fp
   14588:	str	r0, [r4, #4]
   1458c:	str	r3, [sp]
   14590:	str	r5, [sp, #8]
   14594:	str	r8, [sp, #4]
   14598:	str	lr, [sp, #16]
   1459c:	str	ip, [sp, #12]
   145a0:	mvn	r3, #0
   145a4:	mov	r7, r0
   145a8:	bl	11b60 <strspn@plt+0xdcc>
   145ac:	mov	r0, r7
   145b0:	str	sl, [r9]
   145b4:	add	sp, sp, #84	; 0x54
   145b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145bc:	mov	r3, #8
   145c0:	str	r3, [sp]
   145c4:	add	r1, sp, #28
   145c8:	rsb	r2, r2, #1
   145cc:	mvn	r3, #-2147483648	; 0x80000000
   145d0:	mov	r0, #0
   145d4:	bl	16658 <strspn@plt+0x58c4>
   145d8:	mov	r4, r0
   145dc:	ldm	r8, {r0, r1}
   145e0:	str	r4, [r7]
   145e4:	stm	r4, {r0, r1}
   145e8:	b	144e0 <strspn@plt+0x374c>
   145ec:	andeq	r8, r2, r0, asr r1
   145f0:	ldrdeq	r8, [r2], -ip
   145f4:	andeq	r8, r2, r0, lsl #3
   145f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145fc:	mov	r6, r0
   14600:	ldr	lr, [pc, #404]	; 1479c <strspn@plt+0x3a08>
   14604:	sub	sp, sp, #84	; 0x54
   14608:	add	ip, sp, #32
   1460c:	ldm	lr!, {r0, r1, r2, r3}
   14610:	ldr	r5, [pc, #392]	; 147a0 <strspn@plt+0x3a0c>
   14614:	stmia	ip!, {r0, r1, r2, r3}
   14618:	ldm	lr!, {r0, r1, r2, r3}
   1461c:	ldr	r4, [sp, #44]	; 0x2c
   14620:	stmia	ip!, {r0, r1, r2, r3}
   14624:	ldm	lr, {r0, r1, r2, r3}
   14628:	mvn	lr, r4
   1462c:	and	lr, lr, #67108864	; 0x4000000
   14630:	eor	lr, lr, r4
   14634:	stm	ip, {r0, r1, r2, r3}
   14638:	str	lr, [sp, #44]	; 0x2c
   1463c:	bl	10ce0 <__errno_location@plt>
   14640:	ldr	r2, [r5, #4]
   14644:	ldr	r4, [r5]
   14648:	cmp	r2, #0
   1464c:	mov	r8, r0
   14650:	ldr	sl, [r0]
   14654:	bgt	146b0 <strspn@plt+0x391c>
   14658:	add	r7, r5, #8
   1465c:	cmp	r4, r7
   14660:	str	r2, [sp, #28]
   14664:	beq	1476c <strspn@plt+0x39d8>
   14668:	mov	r3, #8
   1466c:	mov	r0, r4
   14670:	str	r3, [sp]
   14674:	rsb	r2, r2, #1
   14678:	mvn	r3, #-2147483648	; 0x80000000
   1467c:	add	r1, sp, #28
   14680:	bl	16658 <strspn@plt+0x58c4>
   14684:	mov	r4, r0
   14688:	str	r0, [r5]
   1468c:	ldr	r0, [r5, #4]
   14690:	ldr	r2, [sp, #28]
   14694:	mov	r1, #0
   14698:	sub	r2, r2, r0
   1469c:	add	r0, r4, r0, lsl #3
   146a0:	lsl	r2, r2, #3
   146a4:	bl	10cf8 <memset@plt>
   146a8:	ldr	r3, [sp, #28]
   146ac:	str	r3, [r5, #4]
   146b0:	ldr	r7, [sp, #36]	; 0x24
   146b4:	ldr	r9, [r4]
   146b8:	ldr	r5, [r4, #4]
   146bc:	ldr	r2, [sp, #72]	; 0x48
   146c0:	ldr	r3, [sp, #32]
   146c4:	ldr	ip, [sp, #76]	; 0x4c
   146c8:	orr	r7, r7, #1
   146cc:	add	fp, sp, #40	; 0x28
   146d0:	str	r2, [sp, #12]
   146d4:	str	r3, [sp]
   146d8:	str	r7, [sp, #4]
   146dc:	mov	r1, r9
   146e0:	mov	r0, r5
   146e4:	str	ip, [sp, #16]
   146e8:	str	fp, [sp, #8]
   146ec:	mvn	r3, #0
   146f0:	mov	r2, r6
   146f4:	bl	11b60 <strspn@plt+0xdcc>
   146f8:	cmp	r9, r0
   146fc:	bhi	1475c <strspn@plt+0x39c8>
   14700:	ldr	r3, [pc, #156]	; 147a4 <strspn@plt+0x3a10>
   14704:	add	r9, r0, #1
   14708:	cmp	r5, r3
   1470c:	str	r9, [r4]
   14710:	beq	1471c <strspn@plt+0x3988>
   14714:	mov	r0, r5
   14718:	bl	16ce8 <strspn@plt+0x5f54>
   1471c:	mov	r0, r9
   14720:	bl	1643c <strspn@plt+0x56a8>
   14724:	ldr	lr, [sp, #76]	; 0x4c
   14728:	ldr	r3, [sp, #32]
   1472c:	ldr	ip, [sp, #72]	; 0x48
   14730:	mov	r2, r6
   14734:	mov	r1, r9
   14738:	str	r0, [r4, #4]
   1473c:	str	r3, [sp]
   14740:	str	fp, [sp, #8]
   14744:	str	r7, [sp, #4]
   14748:	str	lr, [sp, #16]
   1474c:	str	ip, [sp, #12]
   14750:	mvn	r3, #0
   14754:	mov	r5, r0
   14758:	bl	11b60 <strspn@plt+0xdcc>
   1475c:	mov	r0, r5
   14760:	str	sl, [r8]
   14764:	add	sp, sp, #84	; 0x54
   14768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1476c:	mov	r3, #8
   14770:	str	r3, [sp]
   14774:	add	r1, sp, #28
   14778:	rsb	r2, r2, #1
   1477c:	mvn	r3, #-2147483648	; 0x80000000
   14780:	mov	r0, #0
   14784:	bl	16658 <strspn@plt+0x58c4>
   14788:	mov	r4, r0
   1478c:	ldm	r7, {r0, r1}
   14790:	str	r4, [r5]
   14794:	stm	r4, {r0, r1}
   14798:	b	1468c <strspn@plt+0x38f8>
   1479c:	andeq	r8, r2, r0, asr r1
   147a0:	ldrdeq	r8, [r2], -ip
   147a4:	andeq	r8, r2, r0, lsl #3
   147a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147ac:	mov	r9, r0
   147b0:	ldr	lr, [pc, #416]	; 14958 <strspn@plt+0x3bc4>
   147b4:	mov	sl, r1
   147b8:	sub	sp, sp, #92	; 0x5c
   147bc:	ldm	lr!, {r0, r1, r2, r3}
   147c0:	add	ip, sp, #40	; 0x28
   147c4:	ldr	r5, [pc, #400]	; 1495c <strspn@plt+0x3bc8>
   147c8:	stmia	ip!, {r0, r1, r2, r3}
   147cc:	ldm	lr!, {r0, r1, r2, r3}
   147d0:	ldr	r4, [sp, #52]	; 0x34
   147d4:	stmia	ip!, {r0, r1, r2, r3}
   147d8:	ldm	lr, {r0, r1, r2, r3}
   147dc:	mvn	lr, r4
   147e0:	and	lr, lr, #67108864	; 0x4000000
   147e4:	eor	lr, lr, r4
   147e8:	stm	ip, {r0, r1, r2, r3}
   147ec:	str	lr, [sp, #52]	; 0x34
   147f0:	bl	10ce0 <__errno_location@plt>
   147f4:	ldr	r2, [r5, #4]
   147f8:	ldr	r4, [r5]
   147fc:	cmp	r2, #0
   14800:	ldr	r3, [r0]
   14804:	mov	r7, r0
   14808:	str	r3, [sp, #28]
   1480c:	bgt	14868 <strspn@plt+0x3ad4>
   14810:	add	r6, r5, #8
   14814:	cmp	r4, r6
   14818:	str	r2, [sp, #36]	; 0x24
   1481c:	beq	14928 <strspn@plt+0x3b94>
   14820:	mov	r3, #8
   14824:	mov	r0, r4
   14828:	str	r3, [sp]
   1482c:	rsb	r2, r2, #1
   14830:	mvn	r3, #-2147483648	; 0x80000000
   14834:	add	r1, sp, #36	; 0x24
   14838:	bl	16658 <strspn@plt+0x58c4>
   1483c:	mov	r4, r0
   14840:	str	r0, [r5]
   14844:	ldr	r0, [r5, #4]
   14848:	ldr	r2, [sp, #36]	; 0x24
   1484c:	mov	r1, #0
   14850:	sub	r2, r2, r0
   14854:	add	r0, r4, r0, lsl #3
   14858:	lsl	r2, r2, #3
   1485c:	bl	10cf8 <memset@plt>
   14860:	ldr	r3, [sp, #36]	; 0x24
   14864:	str	r3, [r5, #4]
   14868:	ldr	r6, [sp, #44]	; 0x2c
   1486c:	ldr	r8, [r4]
   14870:	ldr	r5, [r4, #4]
   14874:	ldr	r2, [sp, #80]	; 0x50
   14878:	ldr	r3, [sp, #40]	; 0x28
   1487c:	ldr	ip, [sp, #84]	; 0x54
   14880:	orr	r6, r6, #1
   14884:	add	fp, sp, #48	; 0x30
   14888:	str	r2, [sp, #12]
   1488c:	str	r3, [sp]
   14890:	str	r6, [sp, #4]
   14894:	mov	r1, r8
   14898:	mov	r0, r5
   1489c:	str	ip, [sp, #16]
   148a0:	str	fp, [sp, #8]
   148a4:	mov	r3, sl
   148a8:	mov	r2, r9
   148ac:	bl	11b60 <strspn@plt+0xdcc>
   148b0:	cmp	r8, r0
   148b4:	bhi	14914 <strspn@plt+0x3b80>
   148b8:	ldr	r3, [pc, #160]	; 14960 <strspn@plt+0x3bcc>
   148bc:	add	r8, r0, #1
   148c0:	cmp	r5, r3
   148c4:	str	r8, [r4]
   148c8:	beq	148d4 <strspn@plt+0x3b40>
   148cc:	mov	r0, r5
   148d0:	bl	16ce8 <strspn@plt+0x5f54>
   148d4:	mov	r0, r8
   148d8:	bl	1643c <strspn@plt+0x56a8>
   148dc:	ldr	ip, [sp, #84]	; 0x54
   148e0:	ldr	lr, [sp, #40]	; 0x28
   148e4:	mov	r3, sl
   148e8:	mov	r2, r9
   148ec:	mov	r1, r8
   148f0:	str	r0, [r4, #4]
   148f4:	ldr	r4, [sp, #80]	; 0x50
   148f8:	str	fp, [sp, #8]
   148fc:	str	r6, [sp, #4]
   14900:	str	ip, [sp, #16]
   14904:	str	r4, [sp, #12]
   14908:	str	lr, [sp]
   1490c:	mov	r5, r0
   14910:	bl	11b60 <strspn@plt+0xdcc>
   14914:	ldr	r3, [sp, #28]
   14918:	mov	r0, r5
   1491c:	str	r3, [r7]
   14920:	add	sp, sp, #92	; 0x5c
   14924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14928:	mov	r3, #8
   1492c:	str	r3, [sp]
   14930:	add	r1, sp, #36	; 0x24
   14934:	rsb	r2, r2, #1
   14938:	mvn	r3, #-2147483648	; 0x80000000
   1493c:	mov	r0, #0
   14940:	bl	16658 <strspn@plt+0x58c4>
   14944:	mov	r4, r0
   14948:	ldm	r6, {r0, r1}
   1494c:	str	r4, [r5]
   14950:	stm	r4, {r0, r1}
   14954:	b	14844 <strspn@plt+0x3ab0>
   14958:	andeq	r8, r2, r0, asr r1
   1495c:	ldrdeq	r8, [r2], -ip
   14960:	andeq	r8, r2, r0, lsl #3
   14964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14968:	sub	sp, sp, #180	; 0xb4
   1496c:	mov	r6, r1
   14970:	mov	r4, r0
   14974:	mov	r9, r2
   14978:	add	r0, sp, #80	; 0x50
   1497c:	mov	r2, #48	; 0x30
   14980:	mov	r1, #0
   14984:	bl	10cf8 <memset@plt>
   14988:	cmp	r6, #10
   1498c:	beq	14b6c <strspn@plt+0x3dd8>
   14990:	add	r5, sp, #80	; 0x50
   14994:	str	r6, [sp, #80]	; 0x50
   14998:	ldm	r5!, {r0, r1, r2, r3}
   1499c:	add	ip, sp, #128	; 0x80
   149a0:	mov	r7, ip
   149a4:	add	lr, sp, #32
   149a8:	stmia	ip!, {r0, r1, r2, r3}
   149ac:	mov	r8, #67108864	; 0x4000000
   149b0:	ldm	r5!, {r0, r1, r2, r3}
   149b4:	ldr	r6, [pc, #436]	; 14b70 <strspn@plt+0x3ddc>
   149b8:	stmia	ip!, {r0, r1, r2, r3}
   149bc:	ldm	r5, {r0, r1, r2, r3}
   149c0:	stm	ip, {r0, r1, r2, r3}
   149c4:	ldm	r7!, {r0, r1, r2, r3}
   149c8:	stmia	lr!, {r0, r1, r2, r3}
   149cc:	ldm	r7!, {r0, r1, r2, r3}
   149d0:	str	r8, [sp, #44]	; 0x2c
   149d4:	stmia	lr!, {r0, r1, r2, r3}
   149d8:	ldm	ip, {r0, r1, r2, r3}
   149dc:	stm	lr, {r0, r1, r2, r3}
   149e0:	bl	10ce0 <__errno_location@plt>
   149e4:	cmn	r4, #-2147483647	; 0x80000001
   149e8:	ldr	r5, [r6]
   149ec:	mov	r7, r0
   149f0:	movne	r0, #0
   149f4:	moveq	r0, #1
   149f8:	ldr	r3, [r7]
   149fc:	orrs	r0, r0, r4, lsr #31
   14a00:	str	r3, [sp, #24]
   14a04:	bne	14b6c <strspn@plt+0x3dd8>
   14a08:	ldr	r2, [r6, #4]
   14a0c:	cmp	r4, r2
   14a10:	blt	14a70 <strspn@plt+0x3cdc>
   14a14:	add	r8, r6, #8
   14a18:	cmp	r5, r8
   14a1c:	str	r2, [sp, #80]	; 0x50
   14a20:	beq	14b3c <strspn@plt+0x3da8>
   14a24:	mov	r3, #8
   14a28:	sub	r2, r4, r2
   14a2c:	mov	r0, r5
   14a30:	str	r3, [sp]
   14a34:	add	r2, r2, #1
   14a38:	add	r1, sp, #80	; 0x50
   14a3c:	mvn	r3, #-2147483648	; 0x80000000
   14a40:	bl	16658 <strspn@plt+0x58c4>
   14a44:	mov	r5, r0
   14a48:	str	r0, [r6]
   14a4c:	ldr	r0, [r6, #4]
   14a50:	ldr	r2, [sp, #80]	; 0x50
   14a54:	mov	r1, #0
   14a58:	sub	r2, r2, r0
   14a5c:	add	r0, r5, r0, lsl #3
   14a60:	lsl	r2, r2, #3
   14a64:	bl	10cf8 <memset@plt>
   14a68:	ldr	r3, [sp, #80]	; 0x50
   14a6c:	str	r3, [r6, #4]
   14a70:	add	fp, r5, r4, lsl #3
   14a74:	ldr	r1, [sp, #36]	; 0x24
   14a78:	ldr	r8, [r5, r4, lsl #3]
   14a7c:	ldr	r6, [fp, #4]
   14a80:	ldr	r2, [sp, #72]	; 0x48
   14a84:	ldr	r3, [sp, #32]
   14a88:	ldr	ip, [sp, #76]	; 0x4c
   14a8c:	orr	r1, r1, #1
   14a90:	add	sl, sp, #40	; 0x28
   14a94:	str	r1, [sp, #28]
   14a98:	str	r1, [sp, #4]
   14a9c:	str	r2, [sp, #12]
   14aa0:	str	r3, [sp]
   14aa4:	mov	r0, r6
   14aa8:	mov	r1, r8
   14aac:	str	ip, [sp, #16]
   14ab0:	str	sl, [sp, #8]
   14ab4:	mvn	r3, #0
   14ab8:	mov	r2, r9
   14abc:	bl	11b60 <strspn@plt+0xdcc>
   14ac0:	cmp	r8, r0
   14ac4:	bhi	14b28 <strspn@plt+0x3d94>
   14ac8:	ldr	r3, [pc, #164]	; 14b74 <strspn@plt+0x3de0>
   14acc:	add	r8, r0, #1
   14ad0:	cmp	r6, r3
   14ad4:	str	r8, [r5, r4, lsl #3]
   14ad8:	beq	14ae4 <strspn@plt+0x3d50>
   14adc:	mov	r0, r6
   14ae0:	bl	16ce8 <strspn@plt+0x5f54>
   14ae4:	mov	r0, r8
   14ae8:	bl	1643c <strspn@plt+0x56a8>
   14aec:	ldr	lr, [sp, #76]	; 0x4c
   14af0:	ldr	r3, [sp, #32]
   14af4:	ldr	ip, [sp, #72]	; 0x48
   14af8:	ldr	r4, [sp, #28]
   14afc:	mov	r2, r9
   14b00:	mov	r1, r8
   14b04:	str	r0, [fp, #4]
   14b08:	str	r3, [sp]
   14b0c:	str	sl, [sp, #8]
   14b10:	str	r4, [sp, #4]
   14b14:	str	lr, [sp, #16]
   14b18:	str	ip, [sp, #12]
   14b1c:	mvn	r3, #0
   14b20:	mov	r6, r0
   14b24:	bl	11b60 <strspn@plt+0xdcc>
   14b28:	ldr	r3, [sp, #24]
   14b2c:	mov	r0, r6
   14b30:	str	r3, [r7]
   14b34:	add	sp, sp, #180	; 0xb4
   14b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b3c:	mov	r3, #8
   14b40:	sub	r2, r4, r2
   14b44:	add	r1, sp, #80	; 0x50
   14b48:	str	r3, [sp]
   14b4c:	add	r2, r2, #1
   14b50:	mvn	r3, #-2147483648	; 0x80000000
   14b54:	bl	16658 <strspn@plt+0x58c4>
   14b58:	mov	r5, r0
   14b5c:	ldm	r8, {r0, r1}
   14b60:	str	r5, [r6]
   14b64:	stm	r5, {r0, r1}
   14b68:	b	14a4c <strspn@plt+0x3cb8>
   14b6c:	bl	10d7c <abort@plt>
   14b70:	ldrdeq	r8, [r2], -ip
   14b74:	andeq	r8, r2, r0, lsl #3
   14b78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b7c:	mov	r7, r1
   14b80:	ldr	lr, [pc, #492]	; 14d74 <strspn@plt+0x3fe0>
   14b84:	mov	r8, r2
   14b88:	mov	r4, r0
   14b8c:	mov	fp, r3
   14b90:	ldm	lr!, {r0, r1, r2, r3}
   14b94:	sub	sp, sp, #100	; 0x64
   14b98:	add	ip, sp, #48	; 0x30
   14b9c:	mov	sl, #10
   14ba0:	stmia	ip!, {r0, r1, r2, r3}
   14ba4:	cmp	r8, #0
   14ba8:	cmpne	r7, #0
   14bac:	ldm	lr!, {r0, r1, r2, r3}
   14bb0:	str	sl, [sp, #48]	; 0x30
   14bb4:	stmia	ip!, {r0, r1, r2, r3}
   14bb8:	ldm	lr, {r0, r1, r2, r3}
   14bbc:	stm	ip, {r0, r1, r2, r3}
   14bc0:	beq	14d70 <strspn@plt+0x3fdc>
   14bc4:	str	r7, [sp, #88]	; 0x58
   14bc8:	str	r8, [sp, #92]	; 0x5c
   14bcc:	bl	10ce0 <__errno_location@plt>
   14bd0:	ldr	r6, [pc, #416]	; 14d78 <strspn@plt+0x3fe4>
   14bd4:	cmn	r4, #-2147483647	; 0x80000001
   14bd8:	ldr	r5, [r6]
   14bdc:	mov	r9, r0
   14be0:	movne	r0, #0
   14be4:	moveq	r0, #1
   14be8:	ldr	r3, [r9]
   14bec:	orrs	r0, r0, r4, lsr #31
   14bf0:	str	r3, [sp, #28]
   14bf4:	bne	14d70 <strspn@plt+0x3fdc>
   14bf8:	ldr	r2, [r6, #4]
   14bfc:	cmp	r4, r2
   14c00:	movlt	r3, sl
   14c04:	blt	14c70 <strspn@plt+0x3edc>
   14c08:	add	r7, r6, #8
   14c0c:	cmp	r5, r7
   14c10:	str	r2, [sp, #44]	; 0x2c
   14c14:	beq	14d40 <strspn@plt+0x3fac>
   14c18:	mov	r3, #8
   14c1c:	sub	r2, r4, r2
   14c20:	mov	r0, r5
   14c24:	str	r3, [sp]
   14c28:	add	r2, r2, #1
   14c2c:	mvn	r3, #-2147483648	; 0x80000000
   14c30:	add	r1, sp, #44	; 0x2c
   14c34:	bl	16658 <strspn@plt+0x58c4>
   14c38:	mov	r5, r0
   14c3c:	str	r0, [r6]
   14c40:	ldr	r0, [r6, #4]
   14c44:	ldr	r2, [sp, #44]	; 0x2c
   14c48:	mov	r1, #0
   14c4c:	sub	r2, r2, r0
   14c50:	add	r0, r5, r0, lsl #3
   14c54:	lsl	r2, r2, #3
   14c58:	bl	10cf8 <memset@plt>
   14c5c:	ldr	r3, [sp, #48]	; 0x30
   14c60:	ldr	r7, [sp, #88]	; 0x58
   14c64:	ldr	r8, [sp, #92]	; 0x5c
   14c68:	ldr	r2, [sp, #44]	; 0x2c
   14c6c:	str	r2, [r6, #4]
   14c70:	add	r2, r5, r4, lsl #3
   14c74:	mov	r1, r2
   14c78:	str	r2, [sp, #32]
   14c7c:	ldr	r2, [sp, #52]	; 0x34
   14c80:	ldr	r6, [r1, #4]
   14c84:	ldr	sl, [r5, r4, lsl #3]
   14c88:	orr	r2, r2, #1
   14c8c:	str	r3, [sp]
   14c90:	add	r3, sp, #56	; 0x38
   14c94:	str	r2, [sp, #36]	; 0x24
   14c98:	str	r2, [sp, #4]
   14c9c:	str	r3, [sp, #8]
   14ca0:	mov	r0, r6
   14ca4:	str	r8, [sp, #16]
   14ca8:	str	r7, [sp, #12]
   14cac:	mov	r1, sl
   14cb0:	mvn	r3, #0
   14cb4:	mov	r2, fp
   14cb8:	bl	11b60 <strspn@plt+0xdcc>
   14cbc:	cmp	sl, r0
   14cc0:	bhi	14d2c <strspn@plt+0x3f98>
   14cc4:	ldr	r3, [pc, #176]	; 14d7c <strspn@plt+0x3fe8>
   14cc8:	add	r7, r0, #1
   14ccc:	cmp	r6, r3
   14cd0:	str	r7, [r5, r4, lsl #3]
   14cd4:	beq	14ce0 <strspn@plt+0x3f4c>
   14cd8:	mov	r0, r6
   14cdc:	bl	16ce8 <strspn@plt+0x5f54>
   14ce0:	mov	r0, r7
   14ce4:	bl	1643c <strspn@plt+0x56a8>
   14ce8:	ldr	r3, [sp, #32]
   14cec:	ldr	lr, [sp, #92]	; 0x5c
   14cf0:	ldr	ip, [sp, #88]	; 0x58
   14cf4:	ldr	r4, [sp, #36]	; 0x24
   14cf8:	mov	r2, fp
   14cfc:	mov	r1, r7
   14d00:	str	r0, [r3, #4]
   14d04:	add	r3, sp, #56	; 0x38
   14d08:	str	r3, [sp, #8]
   14d0c:	ldr	r3, [sp, #48]	; 0x30
   14d10:	str	r4, [sp, #4]
   14d14:	str	r3, [sp]
   14d18:	str	lr, [sp, #16]
   14d1c:	str	ip, [sp, #12]
   14d20:	mvn	r3, #0
   14d24:	mov	r6, r0
   14d28:	bl	11b60 <strspn@plt+0xdcc>
   14d2c:	ldr	r3, [sp, #28]
   14d30:	mov	r0, r6
   14d34:	str	r3, [r9]
   14d38:	add	sp, sp, #100	; 0x64
   14d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d40:	mov	r3, #8
   14d44:	sub	r2, r4, r2
   14d48:	str	r3, [sp]
   14d4c:	add	r1, sp, #44	; 0x2c
   14d50:	add	r2, r2, #1
   14d54:	mvn	r3, #-2147483648	; 0x80000000
   14d58:	bl	16658 <strspn@plt+0x58c4>
   14d5c:	mov	r5, r0
   14d60:	ldm	r7, {r0, r1}
   14d64:	str	r5, [r6]
   14d68:	stm	r5, {r0, r1}
   14d6c:	b	14c40 <strspn@plt+0x3eac>
   14d70:	bl	10d7c <abort@plt>
   14d74:	andeq	r8, r2, r0, asr r1
   14d78:	ldrdeq	r8, [r2], -ip
   14d7c:	andeq	r8, r2, r0, lsl #3
   14d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d84:	mov	r7, r1
   14d88:	ldr	lr, [pc, #492]	; 14f7c <strspn@plt+0x41e8>
   14d8c:	mov	r8, r2
   14d90:	mov	r4, r0
   14d94:	mov	fp, r3
   14d98:	ldm	lr!, {r0, r1, r2, r3}
   14d9c:	sub	sp, sp, #100	; 0x64
   14da0:	add	ip, sp, #48	; 0x30
   14da4:	mov	sl, #10
   14da8:	stmia	ip!, {r0, r1, r2, r3}
   14dac:	cmp	r8, #0
   14db0:	cmpne	r7, #0
   14db4:	ldm	lr!, {r0, r1, r2, r3}
   14db8:	str	sl, [sp, #48]	; 0x30
   14dbc:	stmia	ip!, {r0, r1, r2, r3}
   14dc0:	ldm	lr, {r0, r1, r2, r3}
   14dc4:	stm	ip, {r0, r1, r2, r3}
   14dc8:	beq	14f78 <strspn@plt+0x41e4>
   14dcc:	str	r7, [sp, #88]	; 0x58
   14dd0:	str	r8, [sp, #92]	; 0x5c
   14dd4:	bl	10ce0 <__errno_location@plt>
   14dd8:	ldr	r6, [pc, #416]	; 14f80 <strspn@plt+0x41ec>
   14ddc:	cmn	r4, #-2147483647	; 0x80000001
   14de0:	ldr	r5, [r6]
   14de4:	mov	r9, r0
   14de8:	movne	r0, #0
   14dec:	moveq	r0, #1
   14df0:	ldr	r3, [r9]
   14df4:	orrs	r0, r0, r4, lsr #31
   14df8:	str	r3, [sp, #28]
   14dfc:	bne	14f78 <strspn@plt+0x41e4>
   14e00:	ldr	r2, [r6, #4]
   14e04:	cmp	r4, r2
   14e08:	movlt	r3, sl
   14e0c:	blt	14e78 <strspn@plt+0x40e4>
   14e10:	add	r7, r6, #8
   14e14:	cmp	r5, r7
   14e18:	str	r2, [sp, #44]	; 0x2c
   14e1c:	beq	14f48 <strspn@plt+0x41b4>
   14e20:	mov	r3, #8
   14e24:	sub	r2, r4, r2
   14e28:	mov	r0, r5
   14e2c:	str	r3, [sp]
   14e30:	add	r2, r2, #1
   14e34:	mvn	r3, #-2147483648	; 0x80000000
   14e38:	add	r1, sp, #44	; 0x2c
   14e3c:	bl	16658 <strspn@plt+0x58c4>
   14e40:	mov	r5, r0
   14e44:	str	r0, [r6]
   14e48:	ldr	r0, [r6, #4]
   14e4c:	ldr	r2, [sp, #44]	; 0x2c
   14e50:	mov	r1, #0
   14e54:	sub	r2, r2, r0
   14e58:	add	r0, r5, r0, lsl #3
   14e5c:	lsl	r2, r2, #3
   14e60:	bl	10cf8 <memset@plt>
   14e64:	ldr	r3, [sp, #48]	; 0x30
   14e68:	ldr	r7, [sp, #88]	; 0x58
   14e6c:	ldr	r8, [sp, #92]	; 0x5c
   14e70:	ldr	r2, [sp, #44]	; 0x2c
   14e74:	str	r2, [r6, #4]
   14e78:	add	r2, r5, r4, lsl #3
   14e7c:	mov	r1, r2
   14e80:	str	r2, [sp, #32]
   14e84:	ldr	r2, [sp, #52]	; 0x34
   14e88:	ldr	r6, [r1, #4]
   14e8c:	ldr	sl, [r5, r4, lsl #3]
   14e90:	orr	r2, r2, #1
   14e94:	str	r3, [sp]
   14e98:	add	r3, sp, #56	; 0x38
   14e9c:	str	r2, [sp, #36]	; 0x24
   14ea0:	str	r2, [sp, #4]
   14ea4:	str	r3, [sp, #8]
   14ea8:	mov	r0, r6
   14eac:	str	r8, [sp, #16]
   14eb0:	str	r7, [sp, #12]
   14eb4:	mov	r1, sl
   14eb8:	ldr	r3, [sp, #136]	; 0x88
   14ebc:	mov	r2, fp
   14ec0:	bl	11b60 <strspn@plt+0xdcc>
   14ec4:	cmp	sl, r0
   14ec8:	bhi	14f34 <strspn@plt+0x41a0>
   14ecc:	ldr	r3, [pc, #176]	; 14f84 <strspn@plt+0x41f0>
   14ed0:	add	r7, r0, #1
   14ed4:	cmp	r6, r3
   14ed8:	str	r7, [r5, r4, lsl #3]
   14edc:	beq	14ee8 <strspn@plt+0x4154>
   14ee0:	mov	r0, r6
   14ee4:	bl	16ce8 <strspn@plt+0x5f54>
   14ee8:	mov	r0, r7
   14eec:	bl	1643c <strspn@plt+0x56a8>
   14ef0:	ldr	r3, [sp, #32]
   14ef4:	ldr	lr, [sp, #92]	; 0x5c
   14ef8:	ldr	ip, [sp, #88]	; 0x58
   14efc:	ldr	r4, [sp, #36]	; 0x24
   14f00:	mov	r2, fp
   14f04:	mov	r1, r7
   14f08:	str	r0, [r3, #4]
   14f0c:	add	r3, sp, #56	; 0x38
   14f10:	str	r3, [sp, #8]
   14f14:	ldr	r3, [sp, #48]	; 0x30
   14f18:	str	r4, [sp, #4]
   14f1c:	str	r3, [sp]
   14f20:	str	lr, [sp, #16]
   14f24:	str	ip, [sp, #12]
   14f28:	ldr	r3, [sp, #136]	; 0x88
   14f2c:	mov	r6, r0
   14f30:	bl	11b60 <strspn@plt+0xdcc>
   14f34:	ldr	r3, [sp, #28]
   14f38:	mov	r0, r6
   14f3c:	str	r3, [r9]
   14f40:	add	sp, sp, #100	; 0x64
   14f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f48:	mov	r3, #8
   14f4c:	sub	r2, r4, r2
   14f50:	str	r3, [sp]
   14f54:	add	r1, sp, #44	; 0x2c
   14f58:	add	r2, r2, #1
   14f5c:	mvn	r3, #-2147483648	; 0x80000000
   14f60:	bl	16658 <strspn@plt+0x58c4>
   14f64:	mov	r5, r0
   14f68:	ldm	r7, {r0, r1}
   14f6c:	str	r5, [r6]
   14f70:	stm	r5, {r0, r1}
   14f74:	b	14e48 <strspn@plt+0x40b4>
   14f78:	bl	10d7c <abort@plt>
   14f7c:	andeq	r8, r2, r0, asr r1
   14f80:	ldrdeq	r8, [r2], -ip
   14f84:	andeq	r8, r2, r0, lsl #3
   14f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f8c:	mov	r5, r0
   14f90:	ldr	lr, [pc, #452]	; 1515c <strspn@plt+0x43c8>
   14f94:	mov	r6, r1
   14f98:	mov	sl, r2
   14f9c:	ldm	lr!, {r0, r1, r2, r3}
   14fa0:	sub	sp, sp, #92	; 0x5c
   14fa4:	add	ip, sp, #40	; 0x28
   14fa8:	cmp	r6, #0
   14fac:	cmpne	r5, #0
   14fb0:	stmia	ip!, {r0, r1, r2, r3}
   14fb4:	mov	r9, #10
   14fb8:	ldm	lr!, {r0, r1, r2, r3}
   14fbc:	moveq	fp, #1
   14fc0:	movne	fp, #0
   14fc4:	str	r9, [sp, #40]	; 0x28
   14fc8:	stmia	ip!, {r0, r1, r2, r3}
   14fcc:	ldm	lr, {r0, r1, r2, r3}
   14fd0:	stm	ip, {r0, r1, r2, r3}
   14fd4:	beq	15158 <strspn@plt+0x43c4>
   14fd8:	str	r5, [sp, #80]	; 0x50
   14fdc:	str	r6, [sp, #84]	; 0x54
   14fe0:	bl	10ce0 <__errno_location@plt>
   14fe4:	ldr	r7, [pc, #372]	; 15160 <strspn@plt+0x43cc>
   14fe8:	ldr	r2, [r7, #4]
   14fec:	ldr	r4, [r7]
   14ff0:	cmp	r2, #0
   14ff4:	ldr	r3, [r0]
   14ff8:	mov	r8, r0
   14ffc:	str	r3, [sp, #24]
   15000:	movgt	r3, r9
   15004:	bgt	1506c <strspn@plt+0x42d8>
   15008:	add	r5, r7, #8
   1500c:	cmp	r4, r5
   15010:	str	r2, [sp, #36]	; 0x24
   15014:	beq	15128 <strspn@plt+0x4394>
   15018:	mov	r3, #8
   1501c:	mov	r0, r4
   15020:	str	r3, [sp]
   15024:	rsb	r2, r2, #1
   15028:	mvn	r3, #-2147483648	; 0x80000000
   1502c:	add	r1, sp, #36	; 0x24
   15030:	bl	16658 <strspn@plt+0x58c4>
   15034:	mov	r4, r0
   15038:	str	r0, [r7]
   1503c:	ldr	r0, [r7, #4]
   15040:	ldr	r2, [sp, #36]	; 0x24
   15044:	mov	r1, #0
   15048:	sub	r2, r2, r0
   1504c:	add	r0, r4, r0, lsl #3
   15050:	lsl	r2, r2, #3
   15054:	bl	10cf8 <memset@plt>
   15058:	ldr	r3, [sp, #40]	; 0x28
   1505c:	ldr	r5, [sp, #80]	; 0x50
   15060:	ldr	r6, [sp, #84]	; 0x54
   15064:	ldr	r2, [sp, #36]	; 0x24
   15068:	str	r2, [r7, #4]
   1506c:	ldr	r2, [sp, #44]	; 0x2c
   15070:	ldr	r9, [r4]
   15074:	ldr	r7, [r4, #4]
   15078:	orr	r2, r2, #1
   1507c:	add	fp, sp, #48	; 0x30
   15080:	str	r2, [sp, #28]
   15084:	str	r2, [sp, #4]
   15088:	str	r3, [sp]
   1508c:	str	r6, [sp, #16]
   15090:	str	r5, [sp, #12]
   15094:	mov	r1, r9
   15098:	mov	r0, r7
   1509c:	str	fp, [sp, #8]
   150a0:	mvn	r3, #0
   150a4:	mov	r2, sl
   150a8:	bl	11b60 <strspn@plt+0xdcc>
   150ac:	cmp	r9, r0
   150b0:	bhi	15114 <strspn@plt+0x4380>
   150b4:	ldr	r3, [pc, #168]	; 15164 <strspn@plt+0x43d0>
   150b8:	add	r5, r0, #1
   150bc:	cmp	r7, r3
   150c0:	str	r5, [r4]
   150c4:	beq	150d0 <strspn@plt+0x433c>
   150c8:	mov	r0, r7
   150cc:	bl	16ce8 <strspn@plt+0x5f54>
   150d0:	mov	r0, r5
   150d4:	bl	1643c <strspn@plt+0x56a8>
   150d8:	ldr	lr, [sp, #84]	; 0x54
   150dc:	ldr	r3, [sp, #40]	; 0x28
   150e0:	ldr	ip, [sp, #80]	; 0x50
   150e4:	mov	r2, sl
   150e8:	mov	r1, r5
   150ec:	str	r0, [r4, #4]
   150f0:	ldr	r4, [sp, #28]
   150f4:	str	r3, [sp]
   150f8:	str	fp, [sp, #8]
   150fc:	str	r4, [sp, #4]
   15100:	str	lr, [sp, #16]
   15104:	str	ip, [sp, #12]
   15108:	mvn	r3, #0
   1510c:	mov	r7, r0
   15110:	bl	11b60 <strspn@plt+0xdcc>
   15114:	ldr	r3, [sp, #24]
   15118:	mov	r0, r7
   1511c:	str	r3, [r8]
   15120:	add	sp, sp, #92	; 0x5c
   15124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15128:	mov	r3, #8
   1512c:	str	r3, [sp]
   15130:	add	r1, sp, #36	; 0x24
   15134:	rsb	r2, r2, #1
   15138:	mov	r0, fp
   1513c:	mvn	r3, #-2147483648	; 0x80000000
   15140:	bl	16658 <strspn@plt+0x58c4>
   15144:	mov	r4, r0
   15148:	ldm	r5, {r0, r1}
   1514c:	str	r4, [r7]
   15150:	stm	r4, {r0, r1}
   15154:	b	1503c <strspn@plt+0x42a8>
   15158:	bl	10d7c <abort@plt>
   1515c:	andeq	r8, r2, r0, asr r1
   15160:	ldrdeq	r8, [r2], -ip
   15164:	andeq	r8, r2, r0, lsl #3
   15168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1516c:	mov	r5, r0
   15170:	ldr	lr, [pc, #464]	; 15348 <strspn@plt+0x45b4>
   15174:	mov	r6, r1
   15178:	mov	sl, r2
   1517c:	mov	fp, r3
   15180:	ldm	lr!, {r0, r1, r2, r3}
   15184:	sub	sp, sp, #92	; 0x5c
   15188:	add	ip, sp, #40	; 0x28
   1518c:	cmp	r6, #0
   15190:	cmpne	r5, #0
   15194:	stmia	ip!, {r0, r1, r2, r3}
   15198:	moveq	r4, #1
   1519c:	ldm	lr!, {r0, r1, r2, r3}
   151a0:	movne	r4, #0
   151a4:	mov	r9, #10
   151a8:	str	r4, [sp, #28]
   151ac:	stmia	ip!, {r0, r1, r2, r3}
   151b0:	ldm	lr, {r0, r1, r2, r3}
   151b4:	str	r9, [sp, #40]	; 0x28
   151b8:	stm	ip, {r0, r1, r2, r3}
   151bc:	beq	15344 <strspn@plt+0x45b0>
   151c0:	str	r5, [sp, #80]	; 0x50
   151c4:	str	r6, [sp, #84]	; 0x54
   151c8:	bl	10ce0 <__errno_location@plt>
   151cc:	ldr	r7, [pc, #376]	; 1534c <strspn@plt+0x45b8>
   151d0:	ldr	r2, [r7, #4]
   151d4:	ldr	r4, [r7]
   151d8:	cmp	r2, #0
   151dc:	ldr	r3, [r0]
   151e0:	mov	r8, r0
   151e4:	str	r3, [sp, #24]
   151e8:	movgt	r3, r9
   151ec:	bgt	15254 <strspn@plt+0x44c0>
   151f0:	add	r5, r7, #8
   151f4:	cmp	r4, r5
   151f8:	str	r2, [sp, #36]	; 0x24
   151fc:	beq	15314 <strspn@plt+0x4580>
   15200:	mov	r3, #8
   15204:	mov	r0, r4
   15208:	str	r3, [sp]
   1520c:	rsb	r2, r2, #1
   15210:	mvn	r3, #-2147483648	; 0x80000000
   15214:	add	r1, sp, #36	; 0x24
   15218:	bl	16658 <strspn@plt+0x58c4>
   1521c:	mov	r4, r0
   15220:	str	r0, [r7]
   15224:	ldr	r0, [r7, #4]
   15228:	ldr	r2, [sp, #36]	; 0x24
   1522c:	mov	r1, #0
   15230:	sub	r2, r2, r0
   15234:	add	r0, r4, r0, lsl #3
   15238:	lsl	r2, r2, #3
   1523c:	bl	10cf8 <memset@plt>
   15240:	ldr	r3, [sp, #40]	; 0x28
   15244:	ldr	r5, [sp, #80]	; 0x50
   15248:	ldr	r6, [sp, #84]	; 0x54
   1524c:	ldr	r2, [sp, #36]	; 0x24
   15250:	str	r2, [r7, #4]
   15254:	ldr	r2, [sp, #44]	; 0x2c
   15258:	ldr	r9, [r4]
   1525c:	ldr	r7, [r4, #4]
   15260:	orr	r2, r2, #1
   15264:	str	r3, [sp]
   15268:	add	r3, sp, #48	; 0x30
   1526c:	str	r2, [sp, #28]
   15270:	str	r2, [sp, #4]
   15274:	str	r3, [sp, #8]
   15278:	str	r6, [sp, #16]
   1527c:	str	r5, [sp, #12]
   15280:	mov	r1, r9
   15284:	mov	r0, r7
   15288:	mov	r3, fp
   1528c:	mov	r2, sl
   15290:	bl	11b60 <strspn@plt+0xdcc>
   15294:	cmp	r9, r0
   15298:	bhi	15300 <strspn@plt+0x456c>
   1529c:	ldr	r3, [pc, #172]	; 15350 <strspn@plt+0x45bc>
   152a0:	add	r5, r0, #1
   152a4:	cmp	r7, r3
   152a8:	str	r5, [r4]
   152ac:	beq	152b8 <strspn@plt+0x4524>
   152b0:	mov	r0, r7
   152b4:	bl	16ce8 <strspn@plt+0x5f54>
   152b8:	mov	r0, r5
   152bc:	bl	1643c <strspn@plt+0x56a8>
   152c0:	add	lr, sp, #48	; 0x30
   152c4:	ldr	ip, [sp, #84]	; 0x54
   152c8:	mov	r1, r5
   152cc:	ldr	r5, [sp, #28]
   152d0:	mov	r3, fp
   152d4:	mov	r2, sl
   152d8:	str	r0, [r4, #4]
   152dc:	ldr	r4, [sp, #80]	; 0x50
   152e0:	str	lr, [sp, #8]
   152e4:	ldr	lr, [sp, #40]	; 0x28
   152e8:	str	r5, [sp, #4]
   152ec:	str	ip, [sp, #16]
   152f0:	str	r4, [sp, #12]
   152f4:	str	lr, [sp]
   152f8:	mov	r7, r0
   152fc:	bl	11b60 <strspn@plt+0xdcc>
   15300:	ldr	r3, [sp, #24]
   15304:	mov	r0, r7
   15308:	str	r3, [r8]
   1530c:	add	sp, sp, #92	; 0x5c
   15310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15314:	mov	r3, #8
   15318:	str	r3, [sp]
   1531c:	add	r1, sp, #36	; 0x24
   15320:	rsb	r2, r2, #1
   15324:	ldr	r0, [sp, #28]
   15328:	mvn	r3, #-2147483648	; 0x80000000
   1532c:	bl	16658 <strspn@plt+0x58c4>
   15330:	mov	r4, r0
   15334:	ldm	r5, {r0, r1}
   15338:	str	r4, [r7]
   1533c:	stm	r4, {r0, r1}
   15340:	b	15224 <strspn@plt+0x4490>
   15344:	bl	10d7c <abort@plt>
   15348:	andeq	r8, r2, r0, asr r1
   1534c:	ldrdeq	r8, [r2], -ip
   15350:	andeq	r8, r2, r0, lsl #3
   15354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15358:	sub	sp, sp, #52	; 0x34
   1535c:	mov	r5, r0
   15360:	mov	sl, r1
   15364:	mov	fp, r2
   15368:	bl	10ce0 <__errno_location@plt>
   1536c:	ldr	r4, [pc, #404]	; 15508 <strspn@plt+0x4774>
   15370:	cmn	r5, #-2147483647	; 0x80000001
   15374:	ldr	r6, [r4]
   15378:	mov	r8, r0
   1537c:	movne	r0, #0
   15380:	moveq	r0, #1
   15384:	ldr	r3, [r8]
   15388:	orrs	r0, r0, r5, lsr #31
   1538c:	str	r3, [sp, #28]
   15390:	bne	15504 <strspn@plt+0x4770>
   15394:	ldr	r2, [r4, #4]
   15398:	cmp	r5, r2
   1539c:	blt	153fc <strspn@plt+0x4668>
   153a0:	add	r7, r4, #8
   153a4:	cmp	r6, r7
   153a8:	str	r2, [sp, #44]	; 0x2c
   153ac:	beq	154d4 <strspn@plt+0x4740>
   153b0:	mov	r3, #8
   153b4:	sub	r2, r5, r2
   153b8:	mov	r0, r6
   153bc:	str	r3, [sp]
   153c0:	add	r2, r2, #1
   153c4:	mvn	r3, #-2147483648	; 0x80000000
   153c8:	add	r1, sp, #44	; 0x2c
   153cc:	bl	16658 <strspn@plt+0x58c4>
   153d0:	mov	r6, r0
   153d4:	str	r0, [r4]
   153d8:	ldr	r0, [r4, #4]
   153dc:	ldr	r2, [sp, #44]	; 0x2c
   153e0:	mov	r1, #0
   153e4:	sub	r2, r2, r0
   153e8:	add	r0, r6, r0, lsl #3
   153ec:	lsl	r2, r2, #3
   153f0:	bl	10cf8 <memset@plt>
   153f4:	ldr	r3, [sp, #44]	; 0x2c
   153f8:	str	r3, [r4, #4]
   153fc:	ldr	r2, [r4, #56]	; 0x38
   15400:	add	r3, r6, r5, lsl #3
   15404:	ldr	r1, [r4, #20]
   15408:	ldr	r7, [r3, #4]
   1540c:	ldr	r9, [r6, r5, lsl #3]
   15410:	ldr	ip, [r4, #60]	; 0x3c
   15414:	str	r3, [sp, #32]
   15418:	ldr	r3, [r4, #16]
   1541c:	str	r2, [sp, #12]
   15420:	ldr	r2, [pc, #228]	; 1550c <strspn@plt+0x4778>
   15424:	orr	r1, r1, #1
   15428:	str	r1, [sp, #36]	; 0x24
   1542c:	str	r1, [sp, #4]
   15430:	str	r2, [sp, #8]
   15434:	str	r3, [sp]
   15438:	mov	r0, r7
   1543c:	mov	r1, r9
   15440:	str	ip, [sp, #16]
   15444:	mov	r3, fp
   15448:	mov	r2, sl
   1544c:	bl	11b60 <strspn@plt+0xdcc>
   15450:	cmp	r9, r0
   15454:	bhi	154c0 <strspn@plt+0x472c>
   15458:	ldr	r3, [pc, #176]	; 15510 <strspn@plt+0x477c>
   1545c:	add	r9, r0, #1
   15460:	cmp	r7, r3
   15464:	str	r9, [r6, r5, lsl #3]
   15468:	beq	15474 <strspn@plt+0x46e0>
   1546c:	mov	r0, r7
   15470:	bl	16ce8 <strspn@plt+0x5f54>
   15474:	mov	r0, r9
   15478:	bl	1643c <strspn@plt+0x56a8>
   1547c:	ldr	ip, [sp, #32]
   15480:	ldr	lr, [r4, #60]	; 0x3c
   15484:	ldr	r5, [r4, #56]	; 0x38
   15488:	mov	r3, fp
   1548c:	mov	r2, sl
   15490:	mov	r1, r9
   15494:	str	r0, [ip, #4]
   15498:	ldr	ip, [r4, #16]
   1549c:	ldr	r4, [pc, #104]	; 1550c <strspn@plt+0x4778>
   154a0:	str	lr, [sp, #16]
   154a4:	str	r4, [sp, #8]
   154a8:	ldr	r4, [sp, #36]	; 0x24
   154ac:	str	r5, [sp, #12]
   154b0:	str	r4, [sp, #4]
   154b4:	str	ip, [sp]
   154b8:	mov	r7, r0
   154bc:	bl	11b60 <strspn@plt+0xdcc>
   154c0:	ldr	r3, [sp, #28]
   154c4:	mov	r0, r7
   154c8:	str	r3, [r8]
   154cc:	add	sp, sp, #52	; 0x34
   154d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154d4:	mov	r3, #8
   154d8:	sub	r2, r5, r2
   154dc:	str	r3, [sp]
   154e0:	add	r1, sp, #44	; 0x2c
   154e4:	add	r2, r2, #1
   154e8:	mvn	r3, #-2147483648	; 0x80000000
   154ec:	bl	16658 <strspn@plt+0x58c4>
   154f0:	mov	r6, r0
   154f4:	ldm	r7, {r0, r1}
   154f8:	str	r6, [r4]
   154fc:	stm	r6, {r0, r1}
   15500:	b	153d8 <strspn@plt+0x4644>
   15504:	bl	10d7c <abort@plt>
   15508:	ldrdeq	r8, [r2], -ip
   1550c:	strdeq	r8, [r2], -r4
   15510:	andeq	r8, r2, r0, lsl #3
   15514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15518:	sub	sp, sp, #44	; 0x2c
   1551c:	mov	r9, r0
   15520:	mov	sl, r1
   15524:	bl	10ce0 <__errno_location@plt>
   15528:	ldr	r4, [pc, #360]	; 15698 <strspn@plt+0x4904>
   1552c:	ldr	r2, [r4, #4]
   15530:	ldr	r5, [r4]
   15534:	cmp	r2, #0
   15538:	ldr	r3, [r0]
   1553c:	mov	r7, r0
   15540:	str	r3, [sp, #24]
   15544:	bgt	155a0 <strspn@plt+0x480c>
   15548:	add	r6, r4, #8
   1554c:	cmp	r5, r6
   15550:	str	r2, [sp, #36]	; 0x24
   15554:	beq	15668 <strspn@plt+0x48d4>
   15558:	mov	r3, #8
   1555c:	mov	r0, r5
   15560:	str	r3, [sp]
   15564:	rsb	r2, r2, #1
   15568:	mvn	r3, #-2147483648	; 0x80000000
   1556c:	add	r1, sp, #36	; 0x24
   15570:	bl	16658 <strspn@plt+0x58c4>
   15574:	mov	r5, r0
   15578:	str	r0, [r4]
   1557c:	ldr	r0, [r4, #4]
   15580:	ldr	r2, [sp, #36]	; 0x24
   15584:	mov	r1, #0
   15588:	sub	r2, r2, r0
   1558c:	add	r0, r5, r0, lsl #3
   15590:	lsl	r2, r2, #3
   15594:	bl	10cf8 <memset@plt>
   15598:	ldr	r3, [sp, #36]	; 0x24
   1559c:	str	r3, [r4, #4]
   155a0:	ldr	r1, [r4, #20]
   155a4:	ldr	r8, [r5]
   155a8:	ldr	r6, [r5, #4]
   155ac:	ldr	r2, [r4, #56]	; 0x38
   155b0:	ldr	r3, [r4, #16]
   155b4:	ldr	ip, [r4, #60]	; 0x3c
   155b8:	ldr	fp, [pc, #220]	; 1569c <strspn@plt+0x4908>
   155bc:	orr	r1, r1, #1
   155c0:	str	r1, [sp, #28]
   155c4:	str	r1, [sp, #4]
   155c8:	str	r2, [sp, #12]
   155cc:	str	r3, [sp]
   155d0:	mov	r1, r8
   155d4:	mov	r0, r6
   155d8:	str	ip, [sp, #16]
   155dc:	str	fp, [sp, #8]
   155e0:	mov	r3, sl
   155e4:	mov	r2, r9
   155e8:	bl	11b60 <strspn@plt+0xdcc>
   155ec:	cmp	r8, r0
   155f0:	bhi	15654 <strspn@plt+0x48c0>
   155f4:	ldr	r3, [pc, #164]	; 156a0 <strspn@plt+0x490c>
   155f8:	add	r8, r0, #1
   155fc:	cmp	r6, r3
   15600:	str	r8, [r5]
   15604:	beq	15610 <strspn@plt+0x487c>
   15608:	mov	r0, r6
   1560c:	bl	16ce8 <strspn@plt+0x5f54>
   15610:	mov	r0, r8
   15614:	bl	1643c <strspn@plt+0x56a8>
   15618:	ldr	lr, [r4, #60]	; 0x3c
   1561c:	ldr	ip, [r4, #16]
   15620:	mov	r3, sl
   15624:	mov	r2, r9
   15628:	mov	r1, r8
   1562c:	str	r0, [r5, #4]
   15630:	ldr	r5, [r4, #56]	; 0x38
   15634:	ldr	r4, [sp, #28]
   15638:	str	fp, [sp, #8]
   1563c:	str	r4, [sp, #4]
   15640:	str	lr, [sp, #16]
   15644:	str	r5, [sp, #12]
   15648:	str	ip, [sp]
   1564c:	mov	r6, r0
   15650:	bl	11b60 <strspn@plt+0xdcc>
   15654:	ldr	r3, [sp, #24]
   15658:	mov	r0, r6
   1565c:	str	r3, [r7]
   15660:	add	sp, sp, #44	; 0x2c
   15664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15668:	mov	r3, #8
   1566c:	str	r3, [sp]
   15670:	add	r1, sp, #36	; 0x24
   15674:	rsb	r2, r2, #1
   15678:	mvn	r3, #-2147483648	; 0x80000000
   1567c:	mov	r0, #0
   15680:	bl	16658 <strspn@plt+0x58c4>
   15684:	mov	r5, r0
   15688:	ldm	r6, {r0, r1}
   1568c:	str	r5, [r4]
   15690:	stm	r5, {r0, r1}
   15694:	b	1557c <strspn@plt+0x47e8>
   15698:	ldrdeq	r8, [r2], -ip
   1569c:	strdeq	r8, [r2], -r4
   156a0:	andeq	r8, r2, r0, lsl #3
   156a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156a8:	sub	sp, sp, #44	; 0x2c
   156ac:	mov	r5, r0
   156b0:	mov	sl, r1
   156b4:	bl	10ce0 <__errno_location@plt>
   156b8:	ldr	r4, [pc, #396]	; 1584c <strspn@plt+0x4ab8>
   156bc:	cmn	r5, #-2147483647	; 0x80000001
   156c0:	ldr	r6, [r4]
   156c4:	mov	r8, r0
   156c8:	movne	r0, #0
   156cc:	moveq	r0, #1
   156d0:	ldr	r3, [r8]
   156d4:	orrs	r0, r0, r5, lsr #31
   156d8:	str	r3, [sp, #24]
   156dc:	bne	15848 <strspn@plt+0x4ab4>
   156e0:	ldr	r2, [r4, #4]
   156e4:	cmp	r5, r2
   156e8:	blt	15748 <strspn@plt+0x49b4>
   156ec:	add	r7, r4, #8
   156f0:	cmp	r6, r7
   156f4:	str	r2, [sp, #36]	; 0x24
   156f8:	beq	15818 <strspn@plt+0x4a84>
   156fc:	mov	r3, #8
   15700:	sub	r2, r5, r2
   15704:	mov	r0, r6
   15708:	str	r3, [sp]
   1570c:	add	r2, r2, #1
   15710:	mvn	r3, #-2147483648	; 0x80000000
   15714:	add	r1, sp, #36	; 0x24
   15718:	bl	16658 <strspn@plt+0x58c4>
   1571c:	mov	r6, r0
   15720:	str	r0, [r4]
   15724:	ldr	r0, [r4, #4]
   15728:	ldr	r2, [sp, #36]	; 0x24
   1572c:	mov	r1, #0
   15730:	sub	r2, r2, r0
   15734:	add	r0, r6, r0, lsl #3
   15738:	lsl	r2, r2, #3
   1573c:	bl	10cf8 <memset@plt>
   15740:	ldr	r3, [sp, #36]	; 0x24
   15744:	str	r3, [r4, #4]
   15748:	ldr	r2, [r4, #56]	; 0x38
   1574c:	add	fp, r6, r5, lsl #3
   15750:	ldr	r1, [r4, #20]
   15754:	ldr	r9, [r6, r5, lsl #3]
   15758:	ldr	r7, [fp, #4]
   1575c:	ldr	r3, [r4, #16]
   15760:	ldr	ip, [r4, #60]	; 0x3c
   15764:	str	r2, [sp, #12]
   15768:	ldr	r2, [pc, #224]	; 15850 <strspn@plt+0x4abc>
   1576c:	orr	r1, r1, #1
   15770:	str	r1, [sp, #28]
   15774:	str	r1, [sp, #4]
   15778:	str	r2, [sp, #8]
   1577c:	str	r3, [sp]
   15780:	mov	r0, r7
   15784:	mov	r1, r9
   15788:	str	ip, [sp, #16]
   1578c:	mvn	r3, #0
   15790:	mov	r2, sl
   15794:	bl	11b60 <strspn@plt+0xdcc>
   15798:	cmp	r9, r0
   1579c:	bhi	15804 <strspn@plt+0x4a70>
   157a0:	ldr	r3, [pc, #172]	; 15854 <strspn@plt+0x4ac0>
   157a4:	add	r9, r0, #1
   157a8:	cmp	r7, r3
   157ac:	str	r9, [r6, r5, lsl #3]
   157b0:	beq	157bc <strspn@plt+0x4a28>
   157b4:	mov	r0, r7
   157b8:	bl	16ce8 <strspn@plt+0x5f54>
   157bc:	mov	r0, r9
   157c0:	bl	1643c <strspn@plt+0x56a8>
   157c4:	ldr	ip, [r4, #60]	; 0x3c
   157c8:	ldr	r3, [r4, #16]
   157cc:	ldr	lr, [r4, #56]	; 0x38
   157d0:	ldr	r4, [pc, #120]	; 15850 <strspn@plt+0x4abc>
   157d4:	mov	r2, sl
   157d8:	mov	r1, r9
   157dc:	str	r0, [fp, #4]
   157e0:	str	r4, [sp, #8]
   157e4:	ldr	r4, [sp, #28]
   157e8:	str	r3, [sp]
   157ec:	str	r4, [sp, #4]
   157f0:	str	ip, [sp, #16]
   157f4:	str	lr, [sp, #12]
   157f8:	mvn	r3, #0
   157fc:	mov	r7, r0
   15800:	bl	11b60 <strspn@plt+0xdcc>
   15804:	ldr	r3, [sp, #24]
   15808:	mov	r0, r7
   1580c:	str	r3, [r8]
   15810:	add	sp, sp, #44	; 0x2c
   15814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15818:	mov	r3, #8
   1581c:	sub	r2, r5, r2
   15820:	str	r3, [sp]
   15824:	add	r1, sp, #36	; 0x24
   15828:	add	r2, r2, #1
   1582c:	mvn	r3, #-2147483648	; 0x80000000
   15830:	bl	16658 <strspn@plt+0x58c4>
   15834:	mov	r6, r0
   15838:	ldm	r7, {r0, r1}
   1583c:	str	r6, [r4]
   15840:	stm	r6, {r0, r1}
   15844:	b	15724 <strspn@plt+0x4990>
   15848:	bl	10d7c <abort@plt>
   1584c:	ldrdeq	r8, [r2], -ip
   15850:	strdeq	r8, [r2], -r4
   15854:	andeq	r8, r2, r0, lsl #3
   15858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1585c:	sub	sp, sp, #44	; 0x2c
   15860:	mov	sl, r0
   15864:	bl	10ce0 <__errno_location@plt>
   15868:	ldr	r4, [pc, #348]	; 159cc <strspn@plt+0x4c38>
   1586c:	ldr	r2, [r4, #4]
   15870:	ldr	r5, [r4]
   15874:	cmp	r2, #0
   15878:	ldr	r3, [r0]
   1587c:	mov	r8, r0
   15880:	str	r3, [sp, #28]
   15884:	bgt	158e0 <strspn@plt+0x4b4c>
   15888:	add	r6, r4, #8
   1588c:	cmp	r5, r6
   15890:	str	r2, [sp, #36]	; 0x24
   15894:	beq	1599c <strspn@plt+0x4c08>
   15898:	mov	r3, #8
   1589c:	mov	r0, r5
   158a0:	str	r3, [sp]
   158a4:	rsb	r2, r2, #1
   158a8:	mvn	r3, #-2147483648	; 0x80000000
   158ac:	add	r1, sp, #36	; 0x24
   158b0:	bl	16658 <strspn@plt+0x58c4>
   158b4:	mov	r5, r0
   158b8:	str	r0, [r4]
   158bc:	ldr	r0, [r4, #4]
   158c0:	ldr	r2, [sp, #36]	; 0x24
   158c4:	mov	r1, #0
   158c8:	sub	r2, r2, r0
   158cc:	add	r0, r5, r0, lsl #3
   158d0:	lsl	r2, r2, #3
   158d4:	bl	10cf8 <memset@plt>
   158d8:	ldr	r3, [sp, #36]	; 0x24
   158dc:	str	r3, [r4, #4]
   158e0:	ldr	r7, [r4, #20]
   158e4:	ldr	r9, [r5]
   158e8:	ldr	r6, [r5, #4]
   158ec:	ldr	r2, [r4, #56]	; 0x38
   158f0:	ldr	r3, [r4, #16]
   158f4:	ldr	ip, [r4, #60]	; 0x3c
   158f8:	ldr	fp, [pc, #208]	; 159d0 <strspn@plt+0x4c3c>
   158fc:	orr	r7, r7, #1
   15900:	str	r2, [sp, #12]
   15904:	str	r3, [sp]
   15908:	str	r7, [sp, #4]
   1590c:	mov	r1, r9
   15910:	mov	r0, r6
   15914:	str	ip, [sp, #16]
   15918:	str	fp, [sp, #8]
   1591c:	mvn	r3, #0
   15920:	mov	r2, sl
   15924:	bl	11b60 <strspn@plt+0xdcc>
   15928:	cmp	r9, r0
   1592c:	bhi	15988 <strspn@plt+0x4bf4>
   15930:	ldr	r3, [pc, #156]	; 159d4 <strspn@plt+0x4c40>
   15934:	add	r9, r0, #1
   15938:	cmp	r6, r3
   1593c:	str	r9, [r5]
   15940:	beq	1594c <strspn@plt+0x4bb8>
   15944:	mov	r0, r6
   15948:	bl	16ce8 <strspn@plt+0x5f54>
   1594c:	mov	r0, r9
   15950:	bl	1643c <strspn@plt+0x56a8>
   15954:	ldr	ip, [r4, #60]	; 0x3c
   15958:	ldr	r3, [r4, #16]
   1595c:	ldr	lr, [r4, #56]	; 0x38
   15960:	mov	r2, sl
   15964:	mov	r1, r9
   15968:	str	r0, [r5, #4]
   1596c:	str	r3, [sp]
   15970:	stmib	sp, {r7, fp}
   15974:	str	ip, [sp, #16]
   15978:	str	lr, [sp, #12]
   1597c:	mvn	r3, #0
   15980:	mov	r6, r0
   15984:	bl	11b60 <strspn@plt+0xdcc>
   15988:	ldr	r3, [sp, #28]
   1598c:	mov	r0, r6
   15990:	str	r3, [r8]
   15994:	add	sp, sp, #44	; 0x2c
   15998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1599c:	mov	r3, #8
   159a0:	str	r3, [sp]
   159a4:	add	r1, sp, #36	; 0x24
   159a8:	rsb	r2, r2, #1
   159ac:	mvn	r3, #-2147483648	; 0x80000000
   159b0:	mov	r0, #0
   159b4:	bl	16658 <strspn@plt+0x58c4>
   159b8:	mov	r5, r0
   159bc:	ldm	r6, {r0, r1}
   159c0:	str	r5, [r4]
   159c4:	stm	r5, {r0, r1}
   159c8:	b	158bc <strspn@plt+0x4b28>
   159cc:	ldrdeq	r8, [r2], -ip
   159d0:	strdeq	r8, [r2], -r4
   159d4:	andeq	r8, r2, r0, lsl #3
   159d8:	push	{r4, r5, r6, lr}
   159dc:	sub	sp, sp, #32
   159e0:	cmp	r1, #0
   159e4:	mov	r4, r0
   159e8:	ldr	r5, [sp, #48]	; 0x30
   159ec:	ldr	r6, [sp, #52]	; 0x34
   159f0:	beq	15d08 <strspn@plt+0x4f74>
   159f4:	stm	sp, {r2, r3}
   159f8:	mov	r3, r1
   159fc:	ldr	r2, [pc, #808]	; 15d2c <strspn@plt+0x4f98>
   15a00:	mov	r1, #1
   15a04:	bl	10d1c <__fprintf_chk@plt>
   15a08:	mov	r2, #5
   15a0c:	ldr	r1, [pc, #796]	; 15d30 <strspn@plt+0x4f9c>
   15a10:	mov	r0, #0
   15a14:	bl	10bfc <dcgettext@plt>
   15a18:	ldr	r3, [pc, #788]	; 15d34 <strspn@plt+0x4fa0>
   15a1c:	ldr	r2, [pc, #788]	; 15d38 <strspn@plt+0x4fa4>
   15a20:	str	r3, [sp]
   15a24:	mov	r1, #1
   15a28:	mov	r3, r0
   15a2c:	mov	r0, r4
   15a30:	bl	10d1c <__fprintf_chk@plt>
   15a34:	mov	r1, r4
   15a38:	mov	r0, #10
   15a3c:	bl	10bf0 <fputc_unlocked@plt>
   15a40:	mov	r2, #5
   15a44:	ldr	r1, [pc, #752]	; 15d3c <strspn@plt+0x4fa8>
   15a48:	mov	r0, #0
   15a4c:	bl	10bfc <dcgettext@plt>
   15a50:	mov	r1, #1
   15a54:	ldr	r3, [pc, #740]	; 15d40 <strspn@plt+0x4fac>
   15a58:	mov	r2, r0
   15a5c:	mov	r0, r4
   15a60:	bl	10d1c <__fprintf_chk@plt>
   15a64:	mov	r1, r4
   15a68:	mov	r0, #10
   15a6c:	bl	10bf0 <fputc_unlocked@plt>
   15a70:	cmp	r6, #9
   15a74:	ldrls	pc, [pc, r6, lsl #2]
   15a78:	b	15d20 <strspn@plt+0x4f8c>
   15a7c:	andeq	r5, r1, r0, lsl #22
   15a80:	andeq	r5, r1, r8, lsl #22
   15a84:	andeq	r5, r1, r4, lsr fp
   15a88:	andeq	r5, r1, r8, ror #22
   15a8c:	andeq	r5, r1, r4, lsr #23
   15a90:	andeq	r5, r1, r0, ror #23
   15a94:	andeq	r5, r1, ip, lsl ip
   15a98:	andeq	r5, r1, r0, ror #24
   15a9c:			; <UNDEFINED> instruction: 0x00015cb0
   15aa0:	andeq	r5, r1, r4, lsr #21
   15aa4:	ldr	r1, [pc, #664]	; 15d44 <strspn@plt+0x4fb0>
   15aa8:	mov	r2, #5
   15aac:	mov	r0, #0
   15ab0:	bl	10bfc <dcgettext@plt>
   15ab4:	ldr	ip, [r5, #32]
   15ab8:	ldr	r1, [r5, #28]
   15abc:	ldr	r2, [r5, #24]
   15ac0:	ldr	r3, [r5]
   15ac4:	ldr	r6, [r5, #20]
   15ac8:	str	ip, [sp, #28]
   15acc:	ldr	lr, [r5, #16]
   15ad0:	str	r1, [sp, #24]
   15ad4:	ldr	ip, [r5, #12]
   15ad8:	str	r2, [sp, #20]
   15adc:	ldr	r1, [r5, #8]
   15ae0:	ldr	r2, [r5, #4]
   15ae4:	str	r6, [sp, #16]
   15ae8:	stmib	sp, {r1, ip, lr}
   15aec:	mov	r1, #1
   15af0:	str	r2, [sp]
   15af4:	mov	r2, r0
   15af8:	mov	r0, r4
   15afc:	bl	10d1c <__fprintf_chk@plt>
   15b00:	add	sp, sp, #32
   15b04:	pop	{r4, r5, r6, pc}
   15b08:	mov	r2, #5
   15b0c:	ldr	r1, [pc, #564]	; 15d48 <strspn@plt+0x4fb4>
   15b10:	mov	r0, #0
   15b14:	bl	10bfc <dcgettext@plt>
   15b18:	ldr	r3, [r5]
   15b1c:	mov	r1, #1
   15b20:	mov	r2, r0
   15b24:	mov	r0, r4
   15b28:	add	sp, sp, #32
   15b2c:	pop	{r4, r5, r6, lr}
   15b30:	b	10d1c <__fprintf_chk@plt>
   15b34:	mov	r2, #5
   15b38:	ldr	r1, [pc, #524]	; 15d4c <strspn@plt+0x4fb8>
   15b3c:	mov	r0, #0
   15b40:	bl	10bfc <dcgettext@plt>
   15b44:	ldr	r2, [r5, #4]
   15b48:	ldr	r3, [r5]
   15b4c:	mov	r1, #1
   15b50:	str	r2, [sp, #48]	; 0x30
   15b54:	mov	r2, r0
   15b58:	mov	r0, r4
   15b5c:	add	sp, sp, #32
   15b60:	pop	{r4, r5, r6, lr}
   15b64:	b	10d1c <__fprintf_chk@plt>
   15b68:	mov	r2, #5
   15b6c:	ldr	r1, [pc, #476]	; 15d50 <strspn@plt+0x4fbc>
   15b70:	mov	r0, #0
   15b74:	bl	10bfc <dcgettext@plt>
   15b78:	ldr	r1, [r5, #8]
   15b7c:	ldr	r2, [r5, #4]
   15b80:	ldr	r3, [r5]
   15b84:	str	r1, [sp, #52]	; 0x34
   15b88:	str	r2, [sp, #48]	; 0x30
   15b8c:	mov	r1, #1
   15b90:	mov	r2, r0
   15b94:	mov	r0, r4
   15b98:	add	sp, sp, #32
   15b9c:	pop	{r4, r5, r6, lr}
   15ba0:	b	10d1c <__fprintf_chk@plt>
   15ba4:	mov	r2, #5
   15ba8:	ldr	r1, [pc, #420]	; 15d54 <strspn@plt+0x4fc0>
   15bac:	mov	r0, #0
   15bb0:	bl	10bfc <dcgettext@plt>
   15bb4:	ldr	r1, [r5, #8]
   15bb8:	ldr	ip, [r5, #12]
   15bbc:	ldr	r2, [r5, #4]
   15bc0:	ldr	r3, [r5]
   15bc4:	stmib	sp, {r1, ip}
   15bc8:	str	r2, [sp]
   15bcc:	mov	r1, #1
   15bd0:	mov	r2, r0
   15bd4:	mov	r0, r4
   15bd8:	bl	10d1c <__fprintf_chk@plt>
   15bdc:	b	15b00 <strspn@plt+0x4d6c>
   15be0:	mov	r2, #5
   15be4:	ldr	r1, [pc, #364]	; 15d58 <strspn@plt+0x4fc4>
   15be8:	mov	r0, #0
   15bec:	bl	10bfc <dcgettext@plt>
   15bf0:	add	r1, r5, #8
   15bf4:	ldr	r2, [r5, #4]
   15bf8:	ldm	r1, {r1, ip, lr}
   15bfc:	ldr	r3, [r5]
   15c00:	str	r2, [sp]
   15c04:	stmib	sp, {r1, ip, lr}
   15c08:	mov	r1, #1
   15c0c:	mov	r2, r0
   15c10:	mov	r0, r4
   15c14:	bl	10d1c <__fprintf_chk@plt>
   15c18:	b	15b00 <strspn@plt+0x4d6c>
   15c1c:	mov	r2, #5
   15c20:	ldr	r1, [pc, #308]	; 15d5c <strspn@plt+0x4fc8>
   15c24:	mov	r0, #0
   15c28:	bl	10bfc <dcgettext@plt>
   15c2c:	add	r1, r5, #8
   15c30:	ldr	r2, [r5, #4]
   15c34:	ldm	r1, {r1, ip, lr}
   15c38:	ldr	r6, [r5, #20]
   15c3c:	ldr	r3, [r5]
   15c40:	stmib	sp, {r1, ip, lr}
   15c44:	mov	r1, #1
   15c48:	str	r2, [sp]
   15c4c:	str	r6, [sp, #16]
   15c50:	mov	r2, r0
   15c54:	mov	r0, r4
   15c58:	bl	10d1c <__fprintf_chk@plt>
   15c5c:	b	15b00 <strspn@plt+0x4d6c>
   15c60:	mov	r2, #5
   15c64:	ldr	r1, [pc, #244]	; 15d60 <strspn@plt+0x4fcc>
   15c68:	mov	r0, #0
   15c6c:	bl	10bfc <dcgettext@plt>
   15c70:	ldr	r2, [r5, #24]
   15c74:	ldr	r3, [r5]
   15c78:	ldr	r6, [r5, #20]
   15c7c:	ldr	lr, [r5, #16]
   15c80:	ldr	ip, [r5, #12]
   15c84:	str	r2, [sp, #20]
   15c88:	ldr	r1, [r5, #8]
   15c8c:	ldr	r2, [r5, #4]
   15c90:	str	r6, [sp, #16]
   15c94:	stmib	sp, {r1, ip, lr}
   15c98:	mov	r1, #1
   15c9c:	str	r2, [sp]
   15ca0:	mov	r2, r0
   15ca4:	mov	r0, r4
   15ca8:	bl	10d1c <__fprintf_chk@plt>
   15cac:	b	15b00 <strspn@plt+0x4d6c>
   15cb0:	mov	r2, #5
   15cb4:	ldr	r1, [pc, #168]	; 15d64 <strspn@plt+0x4fd0>
   15cb8:	mov	r0, #0
   15cbc:	bl	10bfc <dcgettext@plt>
   15cc0:	ldr	r1, [r5, #28]
   15cc4:	ldr	r2, [r5, #24]
   15cc8:	ldr	r3, [r5]
   15ccc:	ldr	r6, [r5, #20]
   15cd0:	ldr	lr, [r5, #16]
   15cd4:	str	r1, [sp, #24]
   15cd8:	ldr	ip, [r5, #12]
   15cdc:	str	r2, [sp, #20]
   15ce0:	ldr	r1, [r5, #8]
   15ce4:	ldr	r2, [r5, #4]
   15ce8:	str	r6, [sp, #16]
   15cec:	stmib	sp, {r1, ip, lr}
   15cf0:	mov	r1, #1
   15cf4:	str	r2, [sp]
   15cf8:	mov	r2, r0
   15cfc:	mov	r0, r4
   15d00:	bl	10d1c <__fprintf_chk@plt>
   15d04:	b	15b00 <strspn@plt+0x4d6c>
   15d08:	str	r3, [sp]
   15d0c:	mov	r1, #1
   15d10:	mov	r3, r2
   15d14:	ldr	r2, [pc, #76]	; 15d68 <strspn@plt+0x4fd4>
   15d18:	bl	10d1c <__fprintf_chk@plt>
   15d1c:	b	15a08 <strspn@plt+0x4c74>
   15d20:	mov	r2, #5
   15d24:	ldr	r1, [pc, #64]	; 15d6c <strspn@plt+0x4fd8>
   15d28:	b	15aac <strspn@plt+0x4d18>
   15d2c:			; <UNDEFINED> instruction: 0x00017ab0
   15d30:	andeq	r7, r1, r4, asr #21
   15d34:	andeq	r0, r0, r6, ror #15
   15d38:	muleq	r1, ip, sp
   15d3c:	andeq	r7, r1, r8, asr #21
   15d40:	andeq	r7, r1, r4, ror fp
   15d44:	andeq	r7, r1, r4, lsr #25
   15d48:	muleq	r1, r8, fp
   15d4c:	andeq	r7, r1, r8, lsr #23
   15d50:	andeq	r7, r1, r0, asr #23
   15d54:	ldrdeq	r7, [r1], -ip
   15d58:	strdeq	r7, [r1], -ip
   15d5c:	andeq	r7, r1, r0, lsr #24
   15d60:	andeq	r7, r1, r8, asr #24
   15d64:	andeq	r7, r1, r4, ror ip
   15d68:			; <UNDEFINED> instruction: 0x00017abc
   15d6c:	ldrdeq	r7, [r1], -r8
   15d70:	push	{r4, r5, lr}
   15d74:	sub	sp, sp, #12
   15d78:	ldr	r5, [sp, #24]
   15d7c:	ldr	ip, [r5]
   15d80:	cmp	ip, #0
   15d84:	beq	15da0 <strspn@plt+0x500c>
   15d88:	mov	lr, r5
   15d8c:	mov	ip, #0
   15d90:	ldr	r4, [lr, #4]!
   15d94:	add	ip, ip, #1
   15d98:	cmp	r4, #0
   15d9c:	bne	15d90 <strspn@plt+0x4ffc>
   15da0:	stm	sp, {r5, ip}
   15da4:	bl	159d8 <strspn@plt+0x4c44>
   15da8:	add	sp, sp, #12
   15dac:	pop	{r4, r5, pc}
   15db0:	push	{r4, r5, lr}
   15db4:	sub	sp, sp, #76	; 0x4c
   15db8:	mov	r5, r0
   15dbc:	ldr	ip, [sp, #88]	; 0x58
   15dc0:	ldr	r0, [ip]
   15dc4:	cmp	r0, #0
   15dc8:	str	r0, [sp, #32]
   15dcc:	beq	161a0 <strspn@plt+0x540c>
   15dd0:	ldr	r0, [ip, #4]
   15dd4:	cmp	r0, #0
   15dd8:	str	r0, [sp, #36]	; 0x24
   15ddc:	beq	161a8 <strspn@plt+0x5414>
   15de0:	ldr	r0, [ip, #8]
   15de4:	cmp	r0, #0
   15de8:	str	r0, [sp, #40]	; 0x28
   15dec:	beq	161b0 <strspn@plt+0x541c>
   15df0:	ldr	r0, [ip, #12]
   15df4:	cmp	r0, #0
   15df8:	str	r0, [sp, #44]	; 0x2c
   15dfc:	beq	161b8 <strspn@plt+0x5424>
   15e00:	ldr	r0, [ip, #16]
   15e04:	cmp	r0, #0
   15e08:	str	r0, [sp, #48]	; 0x30
   15e0c:	beq	161c0 <strspn@plt+0x542c>
   15e10:	ldr	r0, [ip, #20]
   15e14:	cmp	r0, #0
   15e18:	str	r0, [sp, #52]	; 0x34
   15e1c:	beq	161c8 <strspn@plt+0x5434>
   15e20:	ldr	r0, [ip, #24]
   15e24:	cmp	r0, #0
   15e28:	str	r0, [sp, #56]	; 0x38
   15e2c:	beq	161d0 <strspn@plt+0x543c>
   15e30:	ldr	r0, [ip, #28]
   15e34:	cmp	r0, #0
   15e38:	str	r0, [sp, #60]	; 0x3c
   15e3c:	beq	161d8 <strspn@plt+0x5444>
   15e40:	ldr	r0, [ip, #32]
   15e44:	cmp	r0, #0
   15e48:	str	r0, [sp, #64]	; 0x40
   15e4c:	beq	161e0 <strspn@plt+0x544c>
   15e50:	ldr	r0, [ip, #36]	; 0x24
   15e54:	cmp	r0, #0
   15e58:	movne	r4, #10
   15e5c:	moveq	r4, #9
   15e60:	cmp	r1, #0
   15e64:	beq	16178 <strspn@plt+0x53e4>
   15e68:	stm	sp, {r2, r3}
   15e6c:	mov	r0, r5
   15e70:	mov	r3, r1
   15e74:	ldr	r2, [pc, #876]	; 161e8 <strspn@plt+0x5454>
   15e78:	mov	r1, #1
   15e7c:	bl	10d1c <__fprintf_chk@plt>
   15e80:	mov	r2, #5
   15e84:	ldr	r1, [pc, #864]	; 161ec <strspn@plt+0x5458>
   15e88:	mov	r0, #0
   15e8c:	bl	10bfc <dcgettext@plt>
   15e90:	ldr	r3, [pc, #856]	; 161f0 <strspn@plt+0x545c>
   15e94:	ldr	r2, [pc, #856]	; 161f4 <strspn@plt+0x5460>
   15e98:	str	r3, [sp]
   15e9c:	mov	r1, #1
   15ea0:	mov	r3, r0
   15ea4:	mov	r0, r5
   15ea8:	bl	10d1c <__fprintf_chk@plt>
   15eac:	mov	r1, r5
   15eb0:	mov	r0, #10
   15eb4:	bl	10bf0 <fputc_unlocked@plt>
   15eb8:	mov	r2, #5
   15ebc:	ldr	r1, [pc, #820]	; 161f8 <strspn@plt+0x5464>
   15ec0:	mov	r0, #0
   15ec4:	bl	10bfc <dcgettext@plt>
   15ec8:	mov	r1, #1
   15ecc:	ldr	r3, [pc, #808]	; 161fc <strspn@plt+0x5468>
   15ed0:	mov	r2, r0
   15ed4:	mov	r0, r5
   15ed8:	bl	10d1c <__fprintf_chk@plt>
   15edc:	mov	r1, r5
   15ee0:	mov	r0, #10
   15ee4:	bl	10bf0 <fputc_unlocked@plt>
   15ee8:	cmp	r4, #9
   15eec:	ldrls	pc, [pc, r4, lsl #2]
   15ef0:	b	16194 <strspn@plt+0x5400>
   15ef4:	andeq	r5, r1, r8, ror pc
   15ef8:	andeq	r5, r1, r0, lsl #31
   15efc:	andeq	r5, r1, ip, lsr #31
   15f00:	andeq	r5, r1, r0, ror #31
   15f04:	andeq	r6, r1, r8, lsl r0
   15f08:	andeq	r6, r1, r4, asr r0
   15f0c:	muleq	r1, r0, r0
   15f10:	ldrdeq	r6, [r1], -r4
   15f14:	andeq	r6, r1, r0, lsr #2
   15f18:	andeq	r5, r1, ip, lsl pc
   15f1c:	ldr	r1, [pc, #732]	; 16200 <strspn@plt+0x546c>
   15f20:	mov	r2, #5
   15f24:	mov	r0, #0
   15f28:	bl	10bfc <dcgettext@plt>
   15f2c:	ldr	ip, [sp, #64]	; 0x40
   15f30:	ldr	r1, [sp, #60]	; 0x3c
   15f34:	ldr	r2, [sp, #56]	; 0x38
   15f38:	ldr	lr, [sp, #48]	; 0x30
   15f3c:	str	ip, [sp, #28]
   15f40:	str	r1, [sp, #24]
   15f44:	ldr	ip, [sp, #44]	; 0x2c
   15f48:	ldr	r1, [sp, #40]	; 0x28
   15f4c:	ldr	r4, [sp, #52]	; 0x34
   15f50:	str	r2, [sp, #20]
   15f54:	ldr	r2, [sp, #36]	; 0x24
   15f58:	stmib	sp, {r1, ip, lr}
   15f5c:	mov	r1, #1
   15f60:	str	r2, [sp]
   15f64:	ldr	r3, [sp, #32]
   15f68:	str	r4, [sp, #16]
   15f6c:	mov	r2, r0
   15f70:	mov	r0, r5
   15f74:	bl	10d1c <__fprintf_chk@plt>
   15f78:	add	sp, sp, #76	; 0x4c
   15f7c:	pop	{r4, r5, pc}
   15f80:	mov	r2, #5
   15f84:	ldr	r1, [pc, #632]	; 16204 <strspn@plt+0x5470>
   15f88:	mov	r0, #0
   15f8c:	bl	10bfc <dcgettext@plt>
   15f90:	ldr	r3, [sp, #32]
   15f94:	mov	r1, #1
   15f98:	mov	r2, r0
   15f9c:	mov	r0, r5
   15fa0:	add	sp, sp, #76	; 0x4c
   15fa4:	pop	{r4, r5, lr}
   15fa8:	b	10d1c <__fprintf_chk@plt>
   15fac:	mov	r2, #5
   15fb0:	ldr	r1, [pc, #592]	; 16208 <strspn@plt+0x5474>
   15fb4:	mov	r0, #0
   15fb8:	bl	10bfc <dcgettext@plt>
   15fbc:	ldr	r2, [sp, #36]	; 0x24
   15fc0:	ldr	r3, [sp, #32]
   15fc4:	str	r2, [sp, #88]	; 0x58
   15fc8:	mov	r1, #1
   15fcc:	mov	r2, r0
   15fd0:	mov	r0, r5
   15fd4:	add	sp, sp, #76	; 0x4c
   15fd8:	pop	{r4, r5, lr}
   15fdc:	b	10d1c <__fprintf_chk@plt>
   15fe0:	mov	r2, #5
   15fe4:	ldr	r1, [pc, #544]	; 1620c <strspn@plt+0x5478>
   15fe8:	mov	r0, #0
   15fec:	bl	10bfc <dcgettext@plt>
   15ff0:	ldr	r1, [sp, #40]	; 0x28
   15ff4:	ldr	r2, [sp, #36]	; 0x24
   15ff8:	str	r1, [sp, #4]
   15ffc:	str	r2, [sp]
   16000:	ldr	r3, [sp, #32]
   16004:	mov	r1, #1
   16008:	mov	r2, r0
   1600c:	mov	r0, r5
   16010:	bl	10d1c <__fprintf_chk@plt>
   16014:	b	15f78 <strspn@plt+0x51e4>
   16018:	mov	r2, #5
   1601c:	ldr	r1, [pc, #492]	; 16210 <strspn@plt+0x547c>
   16020:	mov	r0, #0
   16024:	bl	10bfc <dcgettext@plt>
   16028:	ldr	r1, [sp, #40]	; 0x28
   1602c:	ldr	ip, [sp, #44]	; 0x2c
   16030:	ldr	r2, [sp, #36]	; 0x24
   16034:	ldr	r3, [sp, #32]
   16038:	stmib	sp, {r1, ip}
   1603c:	str	r2, [sp]
   16040:	mov	r1, #1
   16044:	mov	r2, r0
   16048:	mov	r0, r5
   1604c:	bl	10d1c <__fprintf_chk@plt>
   16050:	b	15f78 <strspn@plt+0x51e4>
   16054:	mov	r2, #5
   16058:	ldr	r1, [pc, #436]	; 16214 <strspn@plt+0x5480>
   1605c:	mov	r0, #0
   16060:	bl	10bfc <dcgettext@plt>
   16064:	add	r1, sp, #40	; 0x28
   16068:	ldr	r2, [sp, #36]	; 0x24
   1606c:	ldm	r1, {r1, ip, lr}
   16070:	ldr	r3, [sp, #32]
   16074:	str	r2, [sp]
   16078:	stmib	sp, {r1, ip, lr}
   1607c:	mov	r1, #1
   16080:	mov	r2, r0
   16084:	mov	r0, r5
   16088:	bl	10d1c <__fprintf_chk@plt>
   1608c:	b	15f78 <strspn@plt+0x51e4>
   16090:	mov	r2, #5
   16094:	ldr	r1, [pc, #380]	; 16218 <strspn@plt+0x5484>
   16098:	mov	r0, #0
   1609c:	bl	10bfc <dcgettext@plt>
   160a0:	add	r1, sp, #40	; 0x28
   160a4:	ldr	r2, [sp, #36]	; 0x24
   160a8:	ldm	r1, {r1, ip, lr}
   160ac:	ldr	r4, [sp, #52]	; 0x34
   160b0:	str	r2, [sp]
   160b4:	stmib	sp, {r1, ip, lr}
   160b8:	mov	r1, #1
   160bc:	ldr	r3, [sp, #32]
   160c0:	str	r4, [sp, #16]
   160c4:	mov	r2, r0
   160c8:	mov	r0, r5
   160cc:	bl	10d1c <__fprintf_chk@plt>
   160d0:	b	15f78 <strspn@plt+0x51e4>
   160d4:	mov	r2, #5
   160d8:	ldr	r1, [pc, #316]	; 1621c <strspn@plt+0x5488>
   160dc:	mov	r0, #0
   160e0:	bl	10bfc <dcgettext@plt>
   160e4:	add	r1, sp, #40	; 0x28
   160e8:	ldr	r2, [sp, #56]	; 0x38
   160ec:	ldm	r1, {r1, ip, lr}
   160f0:	ldr	r4, [sp, #52]	; 0x34
   160f4:	str	r2, [sp, #20]
   160f8:	ldr	r2, [sp, #36]	; 0x24
   160fc:	stmib	sp, {r1, ip, lr}
   16100:	mov	r1, #1
   16104:	str	r2, [sp]
   16108:	ldr	r3, [sp, #32]
   1610c:	str	r4, [sp, #16]
   16110:	mov	r2, r0
   16114:	mov	r0, r5
   16118:	bl	10d1c <__fprintf_chk@plt>
   1611c:	b	15f78 <strspn@plt+0x51e4>
   16120:	mov	r2, #5
   16124:	ldr	r1, [pc, #244]	; 16220 <strspn@plt+0x548c>
   16128:	mov	r0, #0
   1612c:	bl	10bfc <dcgettext@plt>
   16130:	ldr	r1, [sp, #60]	; 0x3c
   16134:	ldr	r2, [sp, #56]	; 0x38
   16138:	ldr	lr, [sp, #48]	; 0x30
   1613c:	ldr	ip, [sp, #44]	; 0x2c
   16140:	str	r1, [sp, #24]
   16144:	ldr	r1, [sp, #40]	; 0x28
   16148:	ldr	r4, [sp, #52]	; 0x34
   1614c:	str	r2, [sp, #20]
   16150:	ldr	r2, [sp, #36]	; 0x24
   16154:	stmib	sp, {r1, ip, lr}
   16158:	mov	r1, #1
   1615c:	str	r2, [sp]
   16160:	ldr	r3, [sp, #32]
   16164:	str	r4, [sp, #16]
   16168:	mov	r2, r0
   1616c:	mov	r0, r5
   16170:	bl	10d1c <__fprintf_chk@plt>
   16174:	b	15f78 <strspn@plt+0x51e4>
   16178:	str	r3, [sp]
   1617c:	mov	r1, #1
   16180:	mov	r3, r2
   16184:	mov	r0, r5
   16188:	ldr	r2, [pc, #148]	; 16224 <strspn@plt+0x5490>
   1618c:	bl	10d1c <__fprintf_chk@plt>
   16190:	b	15e80 <strspn@plt+0x50ec>
   16194:	mov	r2, #5
   16198:	ldr	r1, [pc, #136]	; 16228 <strspn@plt+0x5494>
   1619c:	b	15f24 <strspn@plt+0x5190>
   161a0:	mov	r4, r0
   161a4:	b	15e60 <strspn@plt+0x50cc>
   161a8:	mov	r4, #1
   161ac:	b	15e60 <strspn@plt+0x50cc>
   161b0:	mov	r4, #2
   161b4:	b	15e60 <strspn@plt+0x50cc>
   161b8:	mov	r4, #3
   161bc:	b	15e60 <strspn@plt+0x50cc>
   161c0:	mov	r4, #4
   161c4:	b	15e60 <strspn@plt+0x50cc>
   161c8:	mov	r4, #5
   161cc:	b	15e60 <strspn@plt+0x50cc>
   161d0:	mov	r4, #6
   161d4:	b	15e60 <strspn@plt+0x50cc>
   161d8:	mov	r4, #7
   161dc:	b	15e60 <strspn@plt+0x50cc>
   161e0:	mov	r4, #8
   161e4:	b	15e60 <strspn@plt+0x50cc>
   161e8:			; <UNDEFINED> instruction: 0x00017ab0
   161ec:	andeq	r7, r1, r4, asr #21
   161f0:	andeq	r0, r0, r6, ror #15
   161f4:	muleq	r1, ip, sp
   161f8:	andeq	r7, r1, r8, asr #21
   161fc:	andeq	r7, r1, r4, ror fp
   16200:	andeq	r7, r1, r4, lsr #25
   16204:	muleq	r1, r8, fp
   16208:	andeq	r7, r1, r8, lsr #23
   1620c:	andeq	r7, r1, r0, asr #23
   16210:	ldrdeq	r7, [r1], -ip
   16214:	strdeq	r7, [r1], -ip
   16218:	andeq	r7, r1, r0, lsr #24
   1621c:	andeq	r7, r1, r8, asr #24
   16220:	andeq	r7, r1, r4, ror ip
   16224:			; <UNDEFINED> instruction: 0x00017abc
   16228:	ldrdeq	r7, [r1], -r8
   1622c:	push	{r3}		; (str r3, [sp, #-4]!)
   16230:	push	{lr}		; (str lr, [sp, #-4]!)
   16234:	sub	sp, sp, #56	; 0x38
   16238:	add	r3, sp, #64	; 0x40
   1623c:	ldr	ip, [sp, #64]	; 0x40
   16240:	str	r3, [sp, #12]
   16244:	cmp	ip, #0
   16248:	str	ip, [sp, #16]
   1624c:	beq	162e4 <strspn@plt+0x5550>
   16250:	ldr	ip, [sp, #68]	; 0x44
   16254:	cmp	ip, #0
   16258:	str	ip, [sp, #20]
   1625c:	beq	16304 <strspn@plt+0x5570>
   16260:	ldr	ip, [sp, #72]	; 0x48
   16264:	cmp	ip, #0
   16268:	str	ip, [sp, #24]
   1626c:	beq	1630c <strspn@plt+0x5578>
   16270:	ldr	ip, [sp, #76]	; 0x4c
   16274:	cmp	ip, #0
   16278:	str	ip, [sp, #28]
   1627c:	beq	16314 <strspn@plt+0x5580>
   16280:	ldr	ip, [sp, #80]	; 0x50
   16284:	cmp	ip, #0
   16288:	str	ip, [sp, #32]
   1628c:	beq	1631c <strspn@plt+0x5588>
   16290:	ldr	ip, [sp, #84]	; 0x54
   16294:	cmp	ip, #0
   16298:	str	ip, [sp, #36]	; 0x24
   1629c:	beq	16324 <strspn@plt+0x5590>
   162a0:	ldr	ip, [sp, #88]	; 0x58
   162a4:	cmp	ip, #0
   162a8:	str	ip, [sp, #40]	; 0x28
   162ac:	beq	1632c <strspn@plt+0x5598>
   162b0:	ldr	ip, [sp, #92]	; 0x5c
   162b4:	cmp	ip, #0
   162b8:	str	ip, [sp, #44]	; 0x2c
   162bc:	beq	16334 <strspn@plt+0x55a0>
   162c0:	ldr	ip, [sp, #96]	; 0x60
   162c4:	cmp	ip, #0
   162c8:	str	ip, [sp, #48]	; 0x30
   162cc:	beq	1633c <strspn@plt+0x55a8>
   162d0:	ldr	ip, [sp, #100]	; 0x64
   162d4:	cmp	ip, #0
   162d8:	str	ip, [sp, #52]	; 0x34
   162dc:	movne	ip, #10
   162e0:	moveq	ip, #9
   162e4:	add	r3, sp, #16
   162e8:	stm	sp, {r3, ip}
   162ec:	ldr	r3, [sp, #60]	; 0x3c
   162f0:	bl	159d8 <strspn@plt+0x4c44>
   162f4:	add	sp, sp, #56	; 0x38
   162f8:	pop	{lr}		; (ldr lr, [sp], #4)
   162fc:	add	sp, sp, #4
   16300:	bx	lr
   16304:	mov	ip, #1
   16308:	b	162e4 <strspn@plt+0x5550>
   1630c:	mov	ip, #2
   16310:	b	162e4 <strspn@plt+0x5550>
   16314:	mov	ip, #3
   16318:	b	162e4 <strspn@plt+0x5550>
   1631c:	mov	ip, #4
   16320:	b	162e4 <strspn@plt+0x5550>
   16324:	mov	ip, #5
   16328:	b	162e4 <strspn@plt+0x5550>
   1632c:	mov	ip, #6
   16330:	b	162e4 <strspn@plt+0x5550>
   16334:	mov	ip, #7
   16338:	b	162e4 <strspn@plt+0x5550>
   1633c:	mov	ip, #8
   16340:	b	162e4 <strspn@plt+0x5550>
   16344:	ldr	r3, [pc, #116]	; 163c0 <strspn@plt+0x562c>
   16348:	push	{r4, lr}
   1634c:	mov	r0, #10
   16350:	ldr	r1, [r3]
   16354:	bl	10bf0 <fputc_unlocked@plt>
   16358:	mov	r2, #5
   1635c:	ldr	r1, [pc, #96]	; 163c4 <strspn@plt+0x5630>
   16360:	mov	r0, #0
   16364:	bl	10bfc <dcgettext@plt>
   16368:	ldr	r2, [pc, #88]	; 163c8 <strspn@plt+0x5634>
   1636c:	mov	r1, r0
   16370:	mov	r0, #1
   16374:	bl	10d04 <__printf_chk@plt>
   16378:	mov	r2, #5
   1637c:	ldr	r1, [pc, #72]	; 163cc <strspn@plt+0x5638>
   16380:	mov	r0, #0
   16384:	bl	10bfc <dcgettext@plt>
   16388:	ldr	r3, [pc, #64]	; 163d0 <strspn@plt+0x563c>
   1638c:	ldr	r2, [pc, #64]	; 163d4 <strspn@plt+0x5640>
   16390:	mov	r1, r0
   16394:	mov	r0, #1
   16398:	bl	10d04 <__printf_chk@plt>
   1639c:	mov	r2, #5
   163a0:	ldr	r1, [pc, #48]	; 163d8 <strspn@plt+0x5644>
   163a4:	mov	r0, #0
   163a8:	bl	10bfc <dcgettext@plt>
   163ac:	ldr	r2, [pc, #40]	; 163dc <strspn@plt+0x5648>
   163b0:	pop	{r4, lr}
   163b4:	mov	r1, r0
   163b8:	mov	r0, #1
   163bc:	b	10d04 <__printf_chk@plt>
   163c0:	andeq	r8, r2, r4, lsr r1
   163c4:	andeq	r7, r1, r4, lsl sp
   163c8:	andeq	r7, r1, r8, lsr #26
   163cc:	andeq	r7, r1, r0, asr #26
   163d0:	andeq	r7, r1, r4, ror #12
   163d4:	andeq	r7, r1, ip, lsl #13
   163d8:	andeq	r7, r1, r4, asr sp
   163dc:	andeq	r7, r1, ip, ror sp
   163e0:	push	{r4, r5, r6, lr}
   163e4:	mov	r6, r0
   163e8:	mov	r5, r1
   163ec:	mov	r4, r2
   163f0:	bl	16e70 <strspn@plt+0x60dc>
   163f4:	cmp	r0, #0
   163f8:	popne	{r4, r5, r6, pc}
   163fc:	cmp	r6, #0
   16400:	beq	16410 <strspn@plt+0x567c>
   16404:	cmp	r5, #0
   16408:	cmpne	r4, #0
   1640c:	popeq	{r4, r5, r6, pc}
   16410:	bl	16a5c <strspn@plt+0x5cc8>
   16414:	push	{r4, lr}
   16418:	bl	16ae4 <strspn@plt+0x5d50>
   1641c:	cmp	r0, #0
   16420:	popne	{r4, pc}
   16424:	bl	16a5c <strspn@plt+0x5cc8>
   16428:	push	{r4, lr}
   1642c:	bl	16ae4 <strspn@plt+0x5d50>
   16430:	cmp	r0, #0
   16434:	popne	{r4, pc}
   16438:	bl	16a5c <strspn@plt+0x5cc8>
   1643c:	push	{r4, lr}
   16440:	bl	16ae4 <strspn@plt+0x5d50>
   16444:	cmp	r0, #0
   16448:	popne	{r4, pc}
   1644c:	bl	16a5c <strspn@plt+0x5cc8>
   16450:	push	{r4, r5, r6, lr}
   16454:	mov	r5, r0
   16458:	mov	r4, r1
   1645c:	bl	16b10 <strspn@plt+0x5d7c>
   16460:	cmp	r0, #0
   16464:	popne	{r4, r5, r6, pc}
   16468:	adds	r4, r4, #0
   1646c:	movne	r4, #1
   16470:	cmp	r5, #0
   16474:	orreq	r4, r4, #1
   16478:	cmp	r4, #0
   1647c:	popeq	{r4, r5, r6, pc}
   16480:	bl	16a5c <strspn@plt+0x5cc8>
   16484:	push	{r4, lr}
   16488:	cmp	r1, #0
   1648c:	orreq	r1, r1, #1
   16490:	bl	16b10 <strspn@plt+0x5d7c>
   16494:	cmp	r0, #0
   16498:	popne	{r4, pc}
   1649c:	bl	16a5c <strspn@plt+0x5cc8>
   164a0:	push	{r4, r5, r6, lr}
   164a4:	mov	r6, r0
   164a8:	mov	r5, r1
   164ac:	mov	r4, r2
   164b0:	bl	16e70 <strspn@plt+0x60dc>
   164b4:	cmp	r0, #0
   164b8:	popne	{r4, r5, r6, pc}
   164bc:	cmp	r6, #0
   164c0:	beq	164d0 <strspn@plt+0x573c>
   164c4:	cmp	r5, #0
   164c8:	cmpne	r4, #0
   164cc:	popeq	{r4, r5, r6, pc}
   164d0:	bl	16a5c <strspn@plt+0x5cc8>
   164d4:	cmp	r2, #0
   164d8:	cmpne	r1, #0
   164dc:	moveq	r2, #1
   164e0:	moveq	r1, r2
   164e4:	push	{r4, lr}
   164e8:	bl	16e70 <strspn@plt+0x60dc>
   164ec:	cmp	r0, #0
   164f0:	popne	{r4, pc}
   164f4:	bl	16a5c <strspn@plt+0x5cc8>
   164f8:	push	{r4, lr}
   164fc:	mov	r2, r1
   16500:	mov	r1, r0
   16504:	mov	r0, #0
   16508:	bl	16e70 <strspn@plt+0x60dc>
   1650c:	cmp	r0, #0
   16510:	popne	{r4, pc}
   16514:	bl	16a5c <strspn@plt+0x5cc8>
   16518:	cmp	r1, #0
   1651c:	cmpne	r0, #0
   16520:	moveq	r2, #1
   16524:	movne	r2, r1
   16528:	moveq	r1, r2
   1652c:	movne	r1, r0
   16530:	push	{r4, lr}
   16534:	mov	r0, #0
   16538:	bl	16e70 <strspn@plt+0x60dc>
   1653c:	cmp	r0, #0
   16540:	popne	{r4, pc}
   16544:	bl	16a5c <strspn@plt+0x5cc8>
   16548:	cmp	r0, #0
   1654c:	push	{r4, r5, r6, lr}
   16550:	mov	r5, r1
   16554:	ldr	r4, [r1]
   16558:	beq	16594 <strspn@plt+0x5800>
   1655c:	lsr	r2, r4, #1
   16560:	add	r3, r2, #1
   16564:	mvn	r3, r3
   16568:	cmp	r4, r3
   1656c:	bhi	165b0 <strspn@plt+0x581c>
   16570:	add	r4, r4, #1
   16574:	add	r4, r4, r2
   16578:	mov	r1, r4
   1657c:	mov	r2, #1
   16580:	bl	16e70 <strspn@plt+0x60dc>
   16584:	cmp	r0, #0
   16588:	beq	165b4 <strspn@plt+0x5820>
   1658c:	str	r4, [r5]
   16590:	pop	{r4, r5, r6, pc}
   16594:	cmp	r4, #0
   16598:	moveq	r4, #64	; 0x40
   1659c:	mov	r1, r4
   165a0:	mov	r2, #1
   165a4:	bl	16e70 <strspn@plt+0x60dc>
   165a8:	cmp	r0, #0
   165ac:	bne	1658c <strspn@plt+0x57f8>
   165b0:	bl	16a5c <strspn@plt+0x5cc8>
   165b4:	cmp	r4, #0
   165b8:	bne	165b0 <strspn@plt+0x581c>
   165bc:	str	r4, [r5]
   165c0:	pop	{r4, r5, r6, pc}
   165c4:	cmp	r0, #0
   165c8:	push	{r4, r5, r6, lr}
   165cc:	mov	r5, r1
   165d0:	ldr	r4, [r1]
   165d4:	mov	r6, r2
   165d8:	beq	1661c <strspn@plt+0x5888>
   165dc:	lsr	r1, r4, #1
   165e0:	add	r3, r1, #1
   165e4:	mvn	r3, r3
   165e8:	cmp	r4, r3
   165ec:	bhi	16654 <strspn@plt+0x58c0>
   165f0:	add	r4, r4, #1
   165f4:	add	r4, r4, r1
   165f8:	mov	r1, r4
   165fc:	bl	16e70 <strspn@plt+0x60dc>
   16600:	cmp	r0, #0
   16604:	bne	16614 <strspn@plt+0x5880>
   16608:	cmp	r4, #0
   1660c:	cmpne	r6, #0
   16610:	bne	16654 <strspn@plt+0x58c0>
   16614:	str	r4, [r5]
   16618:	pop	{r4, r5, r6, pc}
   1661c:	cmp	r4, #0
   16620:	bne	1663c <strspn@plt+0x58a8>
   16624:	mov	r1, r2
   16628:	mov	r0, #64	; 0x40
   1662c:	bl	16f54 <strspn@plt+0x61c0>
   16630:	cmp	r0, #0
   16634:	movne	r4, r0
   16638:	addeq	r4, r0, #1
   1663c:	mov	r2, r6
   16640:	mov	r1, r4
   16644:	mov	r0, #0
   16648:	bl	16e70 <strspn@plt+0x60dc>
   1664c:	cmp	r0, #0
   16650:	bne	16614 <strspn@plt+0x5880>
   16654:	bl	16a5c <strspn@plt+0x5cc8>
   16658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1665c:	sub	sp, sp, #12
   16660:	ldr	r6, [r1]
   16664:	mov	r8, r1
   16668:	mov	r9, r0
   1666c:	asrs	r4, r6, #1
   16670:	mov	sl, r2
   16674:	mov	fp, r3
   16678:	ldr	r7, [sp, #48]	; 0x30
   1667c:	bmi	167f8 <strspn@plt+0x5a64>
   16680:	mvn	r1, #-2147483648	; 0x80000000
   16684:	sub	r1, r1, r4
   16688:	cmp	r6, r1
   1668c:	movle	r1, #0
   16690:	movgt	r1, #1
   16694:	mvn	r3, fp
   16698:	cmp	r1, #0
   1669c:	addeq	r4, r4, r6
   166a0:	mvnne	r4, #-2147483648	; 0x80000000
   166a4:	lsr	r3, r3, #31
   166a8:	cmp	fp, r4
   166ac:	movge	r2, #0
   166b0:	andlt	r2, r3, #1
   166b4:	cmp	r2, #0
   166b8:	beq	167a8 <strspn@plt+0x5a14>
   166bc:	cmp	r7, #0
   166c0:	blt	16890 <strspn@plt+0x5afc>
   166c4:	bne	16888 <strspn@plt+0x5af4>
   166c8:	mov	r5, #64	; 0x40
   166cc:	mov	r1, r7
   166d0:	mov	r0, r5
   166d4:	str	r3, [sp, #4]
   166d8:	bl	17160 <strspn@plt+0x63cc>
   166dc:	mov	r1, r7
   166e0:	mov	r4, r0
   166e4:	mov	r0, r5
   166e8:	bl	17380 <strspn@plt+0x65ec>
   166ec:	ldr	r3, [sp, #4]
   166f0:	sub	r5, r5, r1
   166f4:	cmp	r9, #0
   166f8:	sub	r2, r4, r6
   166fc:	streq	r9, [r8]
   16700:	cmp	r2, sl
   16704:	bge	16788 <strspn@plt+0x59f4>
   16708:	cmp	sl, #0
   1670c:	blt	16828 <strspn@plt+0x5a94>
   16710:	cmp	r6, #0
   16714:	blt	16734 <strspn@plt+0x59a0>
   16718:	mvn	r2, #-2147483648	; 0x80000000
   1671c:	sub	r2, r2, sl
   16720:	cmp	r6, r2
   16724:	movle	r2, #0
   16728:	movgt	r2, #1
   1672c:	cmp	r2, #0
   16730:	bne	16824 <strspn@plt+0x5a90>
   16734:	add	r6, r6, sl
   16738:	cmp	fp, r6
   1673c:	movge	r3, #0
   16740:	andlt	r3, r3, #1
   16744:	cmp	r3, #0
   16748:	mov	r4, r6
   1674c:	bne	16824 <strspn@plt+0x5a90>
   16750:	cmp	r7, #0
   16754:	blt	1683c <strspn@plt+0x5aa8>
   16758:	beq	16784 <strspn@plt+0x59f0>
   1675c:	cmp	r6, #0
   16760:	blt	168e0 <strspn@plt+0x5b4c>
   16764:	mov	r1, r7
   16768:	mvn	r0, #-2147483648	; 0x80000000
   1676c:	bl	17160 <strspn@plt+0x63cc>
   16770:	cmp	r6, r0
   16774:	movle	r0, #0
   16778:	movgt	r0, #1
   1677c:	cmp	r0, #0
   16780:	bne	16824 <strspn@plt+0x5a90>
   16784:	mul	r5, r6, r7
   16788:	mov	r1, r5
   1678c:	mov	r0, r9
   16790:	bl	16b10 <strspn@plt+0x5d7c>
   16794:	cmp	r0, #0
   16798:	beq	1680c <strspn@plt+0x5a78>
   1679c:	str	r4, [r8]
   167a0:	add	sp, sp, #12
   167a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167a8:	cmp	r7, #0
   167ac:	blt	16868 <strspn@plt+0x5ad4>
   167b0:	beq	166c8 <strspn@plt+0x5934>
   167b4:	cmp	r4, #0
   167b8:	blt	16898 <strspn@plt+0x5b04>
   167bc:	mov	r1, r7
   167c0:	mvn	r0, #-2147483648	; 0x80000000
   167c4:	str	r3, [sp, #4]
   167c8:	bl	17160 <strspn@plt+0x63cc>
   167cc:	ldr	r3, [sp, #4]
   167d0:	cmp	r0, r4
   167d4:	movge	r0, #0
   167d8:	movlt	r0, #1
   167dc:	cmp	r0, #0
   167e0:	mvnne	r5, #-2147483648	; 0x80000000
   167e4:	bne	166cc <strspn@plt+0x5938>
   167e8:	mul	r5, r7, r4
   167ec:	cmp	r5, #63	; 0x3f
   167f0:	bgt	166f4 <strspn@plt+0x5960>
   167f4:	b	166c8 <strspn@plt+0x5934>
   167f8:	rsb	r1, r4, #-2147483648	; 0x80000000
   167fc:	cmp	r6, r1
   16800:	movge	r1, #0
   16804:	movlt	r1, #1
   16808:	b	16694 <strspn@plt+0x5900>
   1680c:	adds	r5, r5, #0
   16810:	movne	r5, #1
   16814:	cmp	r9, #0
   16818:	orreq	r5, r5, #1
   1681c:	cmp	r5, #0
   16820:	beq	1679c <strspn@plt+0x5a08>
   16824:	bl	16a5c <strspn@plt+0x5cc8>
   16828:	rsb	r2, sl, #-2147483648	; 0x80000000
   1682c:	cmp	r6, r2
   16830:	movge	r2, #0
   16834:	movlt	r2, #1
   16838:	b	1672c <strspn@plt+0x5998>
   1683c:	cmp	r6, #0
   16840:	blt	168c4 <strspn@plt+0x5b30>
   16844:	cmn	r7, #1
   16848:	beq	16784 <strspn@plt+0x59f0>
   1684c:	mov	r1, r7
   16850:	mov	r0, #-2147483648	; 0x80000000
   16854:	bl	17160 <strspn@plt+0x63cc>
   16858:	cmp	r6, r0
   1685c:	movle	r0, #0
   16860:	movgt	r0, #1
   16864:	b	1677c <strspn@plt+0x59e8>
   16868:	cmp	r4, #0
   1686c:	blt	16904 <strspn@plt+0x5b70>
   16870:	cmn	r7, #1
   16874:	beq	167e8 <strspn@plt+0x5a54>
   16878:	str	r3, [sp, #4]
   1687c:	mov	r1, r7
   16880:	mov	r0, #-2147483648	; 0x80000000
   16884:	b	167c8 <strspn@plt+0x5a34>
   16888:	mov	r4, fp
   1688c:	b	167bc <strspn@plt+0x5a28>
   16890:	mov	r4, fp
   16894:	b	16870 <strspn@plt+0x5adc>
   16898:	cmn	r4, #1
   1689c:	beq	167e8 <strspn@plt+0x5a54>
   168a0:	mov	r1, r4
   168a4:	mov	r0, #-2147483648	; 0x80000000
   168a8:	str	r3, [sp, #4]
   168ac:	bl	17160 <strspn@plt+0x63cc>
   168b0:	ldr	r3, [sp, #4]
   168b4:	cmp	r7, r0
   168b8:	movle	r0, #0
   168bc:	movgt	r0, #1
   168c0:	b	167dc <strspn@plt+0x5a48>
   168c4:	mov	r1, r7
   168c8:	mvn	r0, #-2147483648	; 0x80000000
   168cc:	bl	17160 <strspn@plt+0x63cc>
   168d0:	cmp	r6, r0
   168d4:	movge	r0, #0
   168d8:	movlt	r0, #1
   168dc:	b	1677c <strspn@plt+0x59e8>
   168e0:	cmn	r6, #1
   168e4:	beq	16784 <strspn@plt+0x59f0>
   168e8:	mov	r1, r6
   168ec:	mov	r0, #-2147483648	; 0x80000000
   168f0:	bl	17160 <strspn@plt+0x63cc>
   168f4:	cmp	r7, r0
   168f8:	movle	r0, #0
   168fc:	movgt	r0, #1
   16900:	b	1677c <strspn@plt+0x59e8>
   16904:	mov	r1, r7
   16908:	mvn	r0, #-2147483648	; 0x80000000
   1690c:	str	r3, [sp, #4]
   16910:	bl	17160 <strspn@plt+0x63cc>
   16914:	ldr	r3, [sp, #4]
   16918:	cmp	r0, r4
   1691c:	movle	r0, #0
   16920:	movgt	r0, #1
   16924:	b	167dc <strspn@plt+0x5a48>
   16928:	push	{r4, lr}
   1692c:	mov	r1, #1
   16930:	bl	16a9c <strspn@plt+0x5d08>
   16934:	cmp	r0, #0
   16938:	popne	{r4, pc}
   1693c:	bl	16a5c <strspn@plt+0x5cc8>
   16940:	push	{r4, lr}
   16944:	mov	r1, #1
   16948:	bl	16a9c <strspn@plt+0x5d08>
   1694c:	cmp	r0, #0
   16950:	popne	{r4, pc}
   16954:	bl	16a5c <strspn@plt+0x5cc8>
   16958:	push	{r4, lr}
   1695c:	bl	16a9c <strspn@plt+0x5d08>
   16960:	cmp	r0, #0
   16964:	popne	{r4, pc}
   16968:	bl	16a5c <strspn@plt+0x5cc8>
   1696c:	push	{r4, lr}
   16970:	bl	16a9c <strspn@plt+0x5d08>
   16974:	cmp	r0, #0
   16978:	popne	{r4, pc}
   1697c:	bl	16a5c <strspn@plt+0x5cc8>
   16980:	push	{r4, r5, r6, lr}
   16984:	mov	r6, r0
   16988:	mov	r0, r1
   1698c:	mov	r4, r1
   16990:	bl	16ae4 <strspn@plt+0x5d50>
   16994:	subs	r5, r0, #0
   16998:	beq	169b0 <strspn@plt+0x5c1c>
   1699c:	mov	r2, r4
   169a0:	mov	r1, r6
   169a4:	bl	10bcc <memcpy@plt>
   169a8:	mov	r0, r5
   169ac:	pop	{r4, r5, r6, pc}
   169b0:	bl	16a5c <strspn@plt+0x5cc8>
   169b4:	push	{r4, r5, r6, lr}
   169b8:	mov	r6, r0
   169bc:	mov	r0, r1
   169c0:	mov	r4, r1
   169c4:	bl	16ae4 <strspn@plt+0x5d50>
   169c8:	subs	r5, r0, #0
   169cc:	beq	169e4 <strspn@plt+0x5c50>
   169d0:	mov	r2, r4
   169d4:	mov	r1, r6
   169d8:	bl	10bcc <memcpy@plt>
   169dc:	mov	r0, r5
   169e0:	pop	{r4, r5, r6, pc}
   169e4:	bl	16a5c <strspn@plt+0x5cc8>
   169e8:	push	{r4, r5, r6, lr}
   169ec:	mov	r6, r0
   169f0:	add	r0, r1, #1
   169f4:	mov	r4, r1
   169f8:	bl	16ae4 <strspn@plt+0x5d50>
   169fc:	subs	r5, r0, #0
   16a00:	beq	16a20 <strspn@plt+0x5c8c>
   16a04:	mov	r3, #0
   16a08:	mov	r1, r6
   16a0c:	strb	r3, [r5, r4]
   16a10:	mov	r2, r4
   16a14:	bl	10bcc <memcpy@plt>
   16a18:	mov	r0, r5
   16a1c:	pop	{r4, r5, r6, pc}
   16a20:	bl	16a5c <strspn@plt+0x5cc8>
   16a24:	push	{r4, r5, r6, lr}
   16a28:	mov	r6, r0
   16a2c:	bl	10cc8 <strlen@plt>
   16a30:	add	r4, r0, #1
   16a34:	mov	r0, r4
   16a38:	bl	16ae4 <strspn@plt+0x5d50>
   16a3c:	subs	r5, r0, #0
   16a40:	beq	16a58 <strspn@plt+0x5cc4>
   16a44:	mov	r2, r4
   16a48:	mov	r1, r6
   16a4c:	bl	10bcc <memcpy@plt>
   16a50:	mov	r0, r5
   16a54:	pop	{r4, r5, r6, pc}
   16a58:	bl	16a5c <strspn@plt+0x5cc8>
   16a5c:	ldr	r3, [pc, #44]	; 16a90 <strspn@plt+0x5cfc>
   16a60:	push	{r4, lr}
   16a64:	mov	r2, #5
   16a68:	ldr	r1, [pc, #36]	; 16a94 <strspn@plt+0x5d00>
   16a6c:	mov	r0, #0
   16a70:	ldr	r4, [r3]
   16a74:	bl	10bfc <dcgettext@plt>
   16a78:	ldr	r2, [pc, #24]	; 16a98 <strspn@plt+0x5d04>
   16a7c:	mov	r1, #0
   16a80:	mov	r3, r0
   16a84:	mov	r0, r4
   16a88:	bl	10c68 <error@plt>
   16a8c:	bl	10d7c <abort@plt>
   16a90:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   16a94:	andeq	r7, r1, ip, asr #27
   16a98:	muleq	r1, r0, r9
   16a9c:	cmp	r1, #0
   16aa0:	cmpne	r0, #0
   16aa4:	moveq	r1, #1
   16aa8:	moveq	r0, r1
   16aac:	umull	r2, r3, r0, r1
   16ab0:	adds	r3, r3, #0
   16ab4:	movne	r3, #1
   16ab8:	cmp	r2, #0
   16abc:	blt	16acc <strspn@plt+0x5d38>
   16ac0:	cmp	r3, #0
   16ac4:	bne	16acc <strspn@plt+0x5d38>
   16ac8:	b	10b6c <calloc@plt>
   16acc:	push	{r4, lr}
   16ad0:	bl	10ce0 <__errno_location@plt>
   16ad4:	mov	r3, #12
   16ad8:	str	r3, [r0]
   16adc:	mov	r0, #0
   16ae0:	pop	{r4, pc}
   16ae4:	cmp	r0, #0
   16ae8:	moveq	r0, #1
   16aec:	cmp	r0, #0
   16af0:	blt	16af8 <strspn@plt+0x5d64>
   16af4:	b	10c74 <malloc@plt>
   16af8:	push	{r4, lr}
   16afc:	bl	10ce0 <__errno_location@plt>
   16b00:	mov	r3, #12
   16b04:	str	r3, [r0]
   16b08:	mov	r0, #0
   16b0c:	pop	{r4, pc}
   16b10:	cmp	r0, #0
   16b14:	beq	16b38 <strspn@plt+0x5da4>
   16b18:	cmp	r1, #0
   16b1c:	push	{lr}		; (str lr, [sp, #-4]!)
   16b20:	sub	sp, sp, #12
   16b24:	beq	16b40 <strspn@plt+0x5dac>
   16b28:	blt	16b58 <strspn@plt+0x5dc4>
   16b2c:	add	sp, sp, #12
   16b30:	pop	{lr}		; (ldr lr, [sp], #4)
   16b34:	b	10c08 <realloc@plt>
   16b38:	mov	r0, r1
   16b3c:	b	16ae4 <strspn@plt+0x5d50>
   16b40:	str	r1, [sp, #4]
   16b44:	bl	16ce8 <strspn@plt+0x5f54>
   16b48:	ldr	r3, [sp, #4]
   16b4c:	mov	r0, r3
   16b50:	add	sp, sp, #12
   16b54:	pop	{pc}		; (ldr pc, [sp], #4)
   16b58:	bl	10ce0 <__errno_location@plt>
   16b5c:	mov	r2, #12
   16b60:	mov	r3, #0
   16b64:	str	r2, [r0]
   16b68:	b	16b4c <strspn@plt+0x5db8>
   16b6c:	push	{r4, r5, r6, lr}
   16b70:	mov	r4, r0
   16b74:	bl	10c50 <__fpending@plt>
   16b78:	ldr	r5, [r4]
   16b7c:	and	r5, r5, #32
   16b80:	mov	r6, r0
   16b84:	mov	r0, r4
   16b88:	bl	16be8 <strspn@plt+0x5e54>
   16b8c:	cmp	r5, #0
   16b90:	mov	r4, r0
   16b94:	bne	16bb4 <strspn@plt+0x5e20>
   16b98:	cmp	r0, #0
   16b9c:	beq	16bac <strspn@plt+0x5e18>
   16ba0:	cmp	r6, #0
   16ba4:	beq	16bd0 <strspn@plt+0x5e3c>
   16ba8:	mvn	r4, #0
   16bac:	mov	r0, r4
   16bb0:	pop	{r4, r5, r6, pc}
   16bb4:	cmp	r0, #0
   16bb8:	bne	16ba8 <strspn@plt+0x5e14>
   16bbc:	bl	10ce0 <__errno_location@plt>
   16bc0:	str	r4, [r0]
   16bc4:	mvn	r4, #0
   16bc8:	mov	r0, r4
   16bcc:	pop	{r4, r5, r6, pc}
   16bd0:	bl	10ce0 <__errno_location@plt>
   16bd4:	ldr	r4, [r0]
   16bd8:	subs	r4, r4, #9
   16bdc:	mvnne	r4, #0
   16be0:	mov	r0, r4
   16be4:	pop	{r4, r5, r6, pc}
   16be8:	push	{r4, r5, lr}
   16bec:	sub	sp, sp, #12
   16bf0:	mov	r4, r0
   16bf4:	bl	10d10 <fileno@plt>
   16bf8:	cmp	r0, #0
   16bfc:	mov	r0, r4
   16c00:	blt	16c7c <strspn@plt+0x5ee8>
   16c04:	bl	10c8c <__freading@plt>
   16c08:	cmp	r0, #0
   16c0c:	bne	16c48 <strspn@plt+0x5eb4>
   16c10:	mov	r0, r4
   16c14:	bl	16c88 <strspn@plt+0x5ef4>
   16c18:	cmp	r0, #0
   16c1c:	beq	16c78 <strspn@plt+0x5ee4>
   16c20:	bl	10ce0 <__errno_location@plt>
   16c24:	mov	r5, r0
   16c28:	mov	r0, r4
   16c2c:	ldr	r4, [r5]
   16c30:	bl	10d28 <fclose@plt>
   16c34:	cmp	r4, #0
   16c38:	mvnne	r0, #0
   16c3c:	strne	r4, [r5]
   16c40:	add	sp, sp, #12
   16c44:	pop	{r4, r5, pc}
   16c48:	mov	r0, r4
   16c4c:	bl	10d10 <fileno@plt>
   16c50:	mov	r3, #1
   16c54:	str	r3, [sp]
   16c58:	mov	r2, #0
   16c5c:	mov	r3, #0
   16c60:	bl	10c38 <lseek64@plt>
   16c64:	mvn	r3, #0
   16c68:	mvn	r2, #0
   16c6c:	cmp	r1, r3
   16c70:	cmpeq	r0, r2
   16c74:	bne	16c10 <strspn@plt+0x5e7c>
   16c78:	mov	r0, r4
   16c7c:	add	sp, sp, #12
   16c80:	pop	{r4, r5, lr}
   16c84:	b	10d28 <fclose@plt>
   16c88:	push	{r4, lr}
   16c8c:	subs	r4, r0, #0
   16c90:	sub	sp, sp, #8
   16c94:	beq	16cb0 <strspn@plt+0x5f1c>
   16c98:	bl	10c8c <__freading@plt>
   16c9c:	cmp	r0, #0
   16ca0:	beq	16cb0 <strspn@plt+0x5f1c>
   16ca4:	ldr	r3, [r4]
   16ca8:	tst	r3, #256	; 0x100
   16cac:	bne	16cc0 <strspn@plt+0x5f2c>
   16cb0:	mov	r0, r4
   16cb4:	add	sp, sp, #8
   16cb8:	pop	{r4, lr}
   16cbc:	b	10ba8 <fflush@plt>
   16cc0:	mov	r3, #1
   16cc4:	str	r3, [sp]
   16cc8:	mov	r2, #0
   16ccc:	mov	r3, #0
   16cd0:	mov	r0, r4
   16cd4:	bl	16d40 <strspn@plt+0x5fac>
   16cd8:	mov	r0, r4
   16cdc:	add	sp, sp, #8
   16ce0:	pop	{r4, lr}
   16ce4:	b	10ba8 <fflush@plt>
   16ce8:	push	{r4, r5, lr}
   16cec:	sub	sp, sp, #12
   16cf0:	mov	r5, r0
   16cf4:	bl	10ce0 <__errno_location@plt>
   16cf8:	mov	r2, #0
   16cfc:	mov	r4, r0
   16d00:	ldr	r3, [r0]
   16d04:	str	r2, [r4]
   16d08:	mov	r0, r5
   16d0c:	str	r3, [sp]
   16d10:	str	r3, [sp, #4]
   16d14:	bl	10bb4 <free@plt>
   16d18:	ldr	r3, [r4]
   16d1c:	add	r2, sp, #8
   16d20:	cmp	r3, #0
   16d24:	moveq	r3, #4
   16d28:	movne	r3, #0
   16d2c:	add	r3, r2, r3
   16d30:	ldr	r3, [r3, #-8]
   16d34:	str	r3, [r4]
   16d38:	add	sp, sp, #12
   16d3c:	pop	{r4, r5, pc}
   16d40:	push	{r4, r5, r6, r7, r8, lr}
   16d44:	sub	sp, sp, #8
   16d48:	ldmib	r0, {ip, lr}
   16d4c:	mov	r4, r0
   16d50:	ldr	r5, [sp, #32]
   16d54:	cmp	lr, ip
   16d58:	beq	16d70 <strspn@plt+0x5fdc>
   16d5c:	str	r5, [sp, #32]
   16d60:	mov	r0, r4
   16d64:	add	sp, sp, #8
   16d68:	pop	{r4, r5, r6, r7, r8, lr}
   16d6c:	b	10d34 <fseeko64@plt>
   16d70:	ldr	lr, [r0, #20]
   16d74:	ldr	ip, [r0, #16]
   16d78:	cmp	lr, ip
   16d7c:	bne	16d5c <strspn@plt+0x5fc8>
   16d80:	ldr	r8, [r0, #36]	; 0x24
   16d84:	cmp	r8, #0
   16d88:	bne	16d5c <strspn@plt+0x5fc8>
   16d8c:	mov	r6, r2
   16d90:	mov	r7, r3
   16d94:	bl	10d10 <fileno@plt>
   16d98:	mov	r2, r6
   16d9c:	mov	r3, r7
   16da0:	str	r5, [sp]
   16da4:	bl	10c38 <lseek64@plt>
   16da8:	mvn	r3, #0
   16dac:	mvn	r2, #0
   16db0:	cmp	r1, r3
   16db4:	cmpeq	r0, r2
   16db8:	beq	16dd8 <strspn@plt+0x6044>
   16dbc:	ldr	r3, [r4]
   16dc0:	strd	r0, [r4, #80]	; 0x50
   16dc4:	mov	r0, r8
   16dc8:	bic	r3, r3, #16
   16dcc:	str	r3, [r4]
   16dd0:	add	sp, sp, #8
   16dd4:	pop	{r4, r5, r6, r7, r8, pc}
   16dd8:	mvn	r0, #0
   16ddc:	b	16dd0 <strspn@plt+0x603c>
   16de0:	push	{lr}		; (str lr, [sp, #-4]!)
   16de4:	sub	sp, sp, #268	; 0x10c
   16de8:	add	r1, sp, #4
   16dec:	ldr	r2, [pc, #60]	; 16e30 <strspn@plt+0x609c>
   16df0:	bl	16ebc <strspn@plt+0x6128>
   16df4:	cmp	r0, #0
   16df8:	movne	r0, #0
   16dfc:	bne	16e28 <strspn@plt+0x6094>
   16e00:	ldr	r1, [pc, #44]	; 16e34 <strspn@plt+0x60a0>
   16e04:	add	r0, sp, #4
   16e08:	bl	10b90 <strcmp@plt>
   16e0c:	cmp	r0, #0
   16e10:	beq	16e28 <strspn@plt+0x6094>
   16e14:	add	r0, sp, #4
   16e18:	ldr	r1, [pc, #24]	; 16e38 <strspn@plt+0x60a4>
   16e1c:	bl	10b90 <strcmp@plt>
   16e20:	adds	r0, r0, #0
   16e24:	movne	r0, #1
   16e28:	add	sp, sp, #268	; 0x10c
   16e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e30:	andeq	r0, r0, r1, lsl #2
   16e34:	andeq	r7, r1, r0, ror #27
   16e38:	andeq	r7, r1, r4, ror #27
   16e3c:	push	{r4, lr}
   16e40:	mov	r0, #14
   16e44:	bl	10d58 <nl_langinfo@plt>
   16e48:	cmp	r0, #0
   16e4c:	beq	16e64 <strspn@plt+0x60d0>
   16e50:	ldrb	r2, [r0]
   16e54:	ldr	r3, [pc, #16]	; 16e6c <strspn@plt+0x60d8>
   16e58:	cmp	r2, #0
   16e5c:	moveq	r0, r3
   16e60:	pop	{r4, pc}
   16e64:	ldr	r0, [pc]	; 16e6c <strspn@plt+0x60d8>
   16e68:	pop	{r4, pc}
   16e6c:	andeq	r7, r1, ip, ror #27
   16e70:	push	{r4, r5, r6, lr}
   16e74:	subs	r4, r2, #0
   16e78:	mov	r6, r0
   16e7c:	mov	r5, r1
   16e80:	beq	16eac <strspn@plt+0x6118>
   16e84:	mov	r1, r4
   16e88:	mvn	r0, #0
   16e8c:	bl	16f54 <strspn@plt+0x61c0>
   16e90:	cmp	r0, r5
   16e94:	bcs	16eac <strspn@plt+0x6118>
   16e98:	bl	10ce0 <__errno_location@plt>
   16e9c:	mov	r3, #12
   16ea0:	str	r3, [r0]
   16ea4:	mov	r0, #0
   16ea8:	pop	{r4, r5, r6, pc}
   16eac:	mul	r1, r5, r4
   16eb0:	mov	r0, r6
   16eb4:	pop	{r4, r5, r6, lr}
   16eb8:	b	16b10 <strspn@plt+0x5d7c>
   16ebc:	push	{r4, r5, r6, lr}
   16ec0:	mov	r5, r1
   16ec4:	mov	r1, #0
   16ec8:	mov	r4, r2
   16ecc:	bl	10d40 <setlocale@plt>
   16ed0:	subs	r6, r0, #0
   16ed4:	beq	16f30 <strspn@plt+0x619c>
   16ed8:	bl	10cc8 <strlen@plt>
   16edc:	cmp	r4, r0
   16ee0:	bhi	16f18 <strspn@plt+0x6184>
   16ee4:	cmp	r4, #0
   16ee8:	bne	16ef4 <strspn@plt+0x6160>
   16eec:	mov	r0, #34	; 0x22
   16ef0:	pop	{r4, r5, r6, pc}
   16ef4:	sub	r4, r4, #1
   16ef8:	mov	r1, r6
   16efc:	mov	r2, r4
   16f00:	mov	r0, r5
   16f04:	bl	10bcc <memcpy@plt>
   16f08:	mov	r3, #0
   16f0c:	strb	r3, [r5, r4]
   16f10:	mov	r0, #34	; 0x22
   16f14:	pop	{r4, r5, r6, pc}
   16f18:	add	r2, r0, #1
   16f1c:	mov	r1, r6
   16f20:	mov	r0, r5
   16f24:	bl	10bcc <memcpy@plt>
   16f28:	mov	r0, #0
   16f2c:	pop	{r4, r5, r6, pc}
   16f30:	cmp	r4, #0
   16f34:	beq	16f44 <strspn@plt+0x61b0>
   16f38:	strb	r6, [r5]
   16f3c:	mov	r0, #22
   16f40:	pop	{r4, r5, r6, pc}
   16f44:	mov	r0, #22
   16f48:	pop	{r4, r5, r6, pc}
   16f4c:	mov	r1, #0
   16f50:	b	10d40 <setlocale@plt>
   16f54:	subs	r2, r1, #1
   16f58:	bxeq	lr
   16f5c:	bcc	17134 <strspn@plt+0x63a0>
   16f60:	cmp	r0, r1
   16f64:	bls	17118 <strspn@plt+0x6384>
   16f68:	tst	r1, r2
   16f6c:	beq	17124 <strspn@plt+0x6390>
   16f70:	clz	r3, r0
   16f74:	clz	r2, r1
   16f78:	sub	r3, r2, r3
   16f7c:	rsbs	r3, r3, #31
   16f80:	addne	r3, r3, r3, lsl #1
   16f84:	mov	r2, #0
   16f88:	addne	pc, pc, r3, lsl #2
   16f8c:	nop			; (mov r0, r0)
   16f90:	cmp	r0, r1, lsl #31
   16f94:	adc	r2, r2, r2
   16f98:	subcs	r0, r0, r1, lsl #31
   16f9c:	cmp	r0, r1, lsl #30
   16fa0:	adc	r2, r2, r2
   16fa4:	subcs	r0, r0, r1, lsl #30
   16fa8:	cmp	r0, r1, lsl #29
   16fac:	adc	r2, r2, r2
   16fb0:	subcs	r0, r0, r1, lsl #29
   16fb4:	cmp	r0, r1, lsl #28
   16fb8:	adc	r2, r2, r2
   16fbc:	subcs	r0, r0, r1, lsl #28
   16fc0:	cmp	r0, r1, lsl #27
   16fc4:	adc	r2, r2, r2
   16fc8:	subcs	r0, r0, r1, lsl #27
   16fcc:	cmp	r0, r1, lsl #26
   16fd0:	adc	r2, r2, r2
   16fd4:	subcs	r0, r0, r1, lsl #26
   16fd8:	cmp	r0, r1, lsl #25
   16fdc:	adc	r2, r2, r2
   16fe0:	subcs	r0, r0, r1, lsl #25
   16fe4:	cmp	r0, r1, lsl #24
   16fe8:	adc	r2, r2, r2
   16fec:	subcs	r0, r0, r1, lsl #24
   16ff0:	cmp	r0, r1, lsl #23
   16ff4:	adc	r2, r2, r2
   16ff8:	subcs	r0, r0, r1, lsl #23
   16ffc:	cmp	r0, r1, lsl #22
   17000:	adc	r2, r2, r2
   17004:	subcs	r0, r0, r1, lsl #22
   17008:	cmp	r0, r1, lsl #21
   1700c:	adc	r2, r2, r2
   17010:	subcs	r0, r0, r1, lsl #21
   17014:	cmp	r0, r1, lsl #20
   17018:	adc	r2, r2, r2
   1701c:	subcs	r0, r0, r1, lsl #20
   17020:	cmp	r0, r1, lsl #19
   17024:	adc	r2, r2, r2
   17028:	subcs	r0, r0, r1, lsl #19
   1702c:	cmp	r0, r1, lsl #18
   17030:	adc	r2, r2, r2
   17034:	subcs	r0, r0, r1, lsl #18
   17038:	cmp	r0, r1, lsl #17
   1703c:	adc	r2, r2, r2
   17040:	subcs	r0, r0, r1, lsl #17
   17044:	cmp	r0, r1, lsl #16
   17048:	adc	r2, r2, r2
   1704c:	subcs	r0, r0, r1, lsl #16
   17050:	cmp	r0, r1, lsl #15
   17054:	adc	r2, r2, r2
   17058:	subcs	r0, r0, r1, lsl #15
   1705c:	cmp	r0, r1, lsl #14
   17060:	adc	r2, r2, r2
   17064:	subcs	r0, r0, r1, lsl #14
   17068:	cmp	r0, r1, lsl #13
   1706c:	adc	r2, r2, r2
   17070:	subcs	r0, r0, r1, lsl #13
   17074:	cmp	r0, r1, lsl #12
   17078:	adc	r2, r2, r2
   1707c:	subcs	r0, r0, r1, lsl #12
   17080:	cmp	r0, r1, lsl #11
   17084:	adc	r2, r2, r2
   17088:	subcs	r0, r0, r1, lsl #11
   1708c:	cmp	r0, r1, lsl #10
   17090:	adc	r2, r2, r2
   17094:	subcs	r0, r0, r1, lsl #10
   17098:	cmp	r0, r1, lsl #9
   1709c:	adc	r2, r2, r2
   170a0:	subcs	r0, r0, r1, lsl #9
   170a4:	cmp	r0, r1, lsl #8
   170a8:	adc	r2, r2, r2
   170ac:	subcs	r0, r0, r1, lsl #8
   170b0:	cmp	r0, r1, lsl #7
   170b4:	adc	r2, r2, r2
   170b8:	subcs	r0, r0, r1, lsl #7
   170bc:	cmp	r0, r1, lsl #6
   170c0:	adc	r2, r2, r2
   170c4:	subcs	r0, r0, r1, lsl #6
   170c8:	cmp	r0, r1, lsl #5
   170cc:	adc	r2, r2, r2
   170d0:	subcs	r0, r0, r1, lsl #5
   170d4:	cmp	r0, r1, lsl #4
   170d8:	adc	r2, r2, r2
   170dc:	subcs	r0, r0, r1, lsl #4
   170e0:	cmp	r0, r1, lsl #3
   170e4:	adc	r2, r2, r2
   170e8:	subcs	r0, r0, r1, lsl #3
   170ec:	cmp	r0, r1, lsl #2
   170f0:	adc	r2, r2, r2
   170f4:	subcs	r0, r0, r1, lsl #2
   170f8:	cmp	r0, r1, lsl #1
   170fc:	adc	r2, r2, r2
   17100:	subcs	r0, r0, r1, lsl #1
   17104:	cmp	r0, r1
   17108:	adc	r2, r2, r2
   1710c:	subcs	r0, r0, r1
   17110:	mov	r0, r2
   17114:	bx	lr
   17118:	moveq	r0, #1
   1711c:	movne	r0, #0
   17120:	bx	lr
   17124:	clz	r2, r1
   17128:	rsb	r2, r2, #31
   1712c:	lsr	r0, r0, r2
   17130:	bx	lr
   17134:	cmp	r0, #0
   17138:	mvnne	r0, #0
   1713c:	b	173a0 <strspn@plt+0x660c>
   17140:	cmp	r1, #0
   17144:	beq	17134 <strspn@plt+0x63a0>
   17148:	push	{r0, r1, lr}
   1714c:	bl	16f54 <strspn@plt+0x61c0>
   17150:	pop	{r1, r2, lr}
   17154:	mul	r3, r2, r0
   17158:	sub	r1, r1, r3
   1715c:	bx	lr
   17160:	cmp	r1, #0
   17164:	beq	17370 <strspn@plt+0x65dc>
   17168:	eor	ip, r0, r1
   1716c:	rsbmi	r1, r1, #0
   17170:	subs	r2, r1, #1
   17174:	beq	1733c <strspn@plt+0x65a8>
   17178:	movs	r3, r0
   1717c:	rsbmi	r3, r0, #0
   17180:	cmp	r3, r1
   17184:	bls	17348 <strspn@plt+0x65b4>
   17188:	tst	r1, r2
   1718c:	beq	17358 <strspn@plt+0x65c4>
   17190:	clz	r2, r3
   17194:	clz	r0, r1
   17198:	sub	r2, r0, r2
   1719c:	rsbs	r2, r2, #31
   171a0:	addne	r2, r2, r2, lsl #1
   171a4:	mov	r0, #0
   171a8:	addne	pc, pc, r2, lsl #2
   171ac:	nop			; (mov r0, r0)
   171b0:	cmp	r3, r1, lsl #31
   171b4:	adc	r0, r0, r0
   171b8:	subcs	r3, r3, r1, lsl #31
   171bc:	cmp	r3, r1, lsl #30
   171c0:	adc	r0, r0, r0
   171c4:	subcs	r3, r3, r1, lsl #30
   171c8:	cmp	r3, r1, lsl #29
   171cc:	adc	r0, r0, r0
   171d0:	subcs	r3, r3, r1, lsl #29
   171d4:	cmp	r3, r1, lsl #28
   171d8:	adc	r0, r0, r0
   171dc:	subcs	r3, r3, r1, lsl #28
   171e0:	cmp	r3, r1, lsl #27
   171e4:	adc	r0, r0, r0
   171e8:	subcs	r3, r3, r1, lsl #27
   171ec:	cmp	r3, r1, lsl #26
   171f0:	adc	r0, r0, r0
   171f4:	subcs	r3, r3, r1, lsl #26
   171f8:	cmp	r3, r1, lsl #25
   171fc:	adc	r0, r0, r0
   17200:	subcs	r3, r3, r1, lsl #25
   17204:	cmp	r3, r1, lsl #24
   17208:	adc	r0, r0, r0
   1720c:	subcs	r3, r3, r1, lsl #24
   17210:	cmp	r3, r1, lsl #23
   17214:	adc	r0, r0, r0
   17218:	subcs	r3, r3, r1, lsl #23
   1721c:	cmp	r3, r1, lsl #22
   17220:	adc	r0, r0, r0
   17224:	subcs	r3, r3, r1, lsl #22
   17228:	cmp	r3, r1, lsl #21
   1722c:	adc	r0, r0, r0
   17230:	subcs	r3, r3, r1, lsl #21
   17234:	cmp	r3, r1, lsl #20
   17238:	adc	r0, r0, r0
   1723c:	subcs	r3, r3, r1, lsl #20
   17240:	cmp	r3, r1, lsl #19
   17244:	adc	r0, r0, r0
   17248:	subcs	r3, r3, r1, lsl #19
   1724c:	cmp	r3, r1, lsl #18
   17250:	adc	r0, r0, r0
   17254:	subcs	r3, r3, r1, lsl #18
   17258:	cmp	r3, r1, lsl #17
   1725c:	adc	r0, r0, r0
   17260:	subcs	r3, r3, r1, lsl #17
   17264:	cmp	r3, r1, lsl #16
   17268:	adc	r0, r0, r0
   1726c:	subcs	r3, r3, r1, lsl #16
   17270:	cmp	r3, r1, lsl #15
   17274:	adc	r0, r0, r0
   17278:	subcs	r3, r3, r1, lsl #15
   1727c:	cmp	r3, r1, lsl #14
   17280:	adc	r0, r0, r0
   17284:	subcs	r3, r3, r1, lsl #14
   17288:	cmp	r3, r1, lsl #13
   1728c:	adc	r0, r0, r0
   17290:	subcs	r3, r3, r1, lsl #13
   17294:	cmp	r3, r1, lsl #12
   17298:	adc	r0, r0, r0
   1729c:	subcs	r3, r3, r1, lsl #12
   172a0:	cmp	r3, r1, lsl #11
   172a4:	adc	r0, r0, r0
   172a8:	subcs	r3, r3, r1, lsl #11
   172ac:	cmp	r3, r1, lsl #10
   172b0:	adc	r0, r0, r0
   172b4:	subcs	r3, r3, r1, lsl #10
   172b8:	cmp	r3, r1, lsl #9
   172bc:	adc	r0, r0, r0
   172c0:	subcs	r3, r3, r1, lsl #9
   172c4:	cmp	r3, r1, lsl #8
   172c8:	adc	r0, r0, r0
   172cc:	subcs	r3, r3, r1, lsl #8
   172d0:	cmp	r3, r1, lsl #7
   172d4:	adc	r0, r0, r0
   172d8:	subcs	r3, r3, r1, lsl #7
   172dc:	cmp	r3, r1, lsl #6
   172e0:	adc	r0, r0, r0
   172e4:	subcs	r3, r3, r1, lsl #6
   172e8:	cmp	r3, r1, lsl #5
   172ec:	adc	r0, r0, r0
   172f0:	subcs	r3, r3, r1, lsl #5
   172f4:	cmp	r3, r1, lsl #4
   172f8:	adc	r0, r0, r0
   172fc:	subcs	r3, r3, r1, lsl #4
   17300:	cmp	r3, r1, lsl #3
   17304:	adc	r0, r0, r0
   17308:	subcs	r3, r3, r1, lsl #3
   1730c:	cmp	r3, r1, lsl #2
   17310:	adc	r0, r0, r0
   17314:	subcs	r3, r3, r1, lsl #2
   17318:	cmp	r3, r1, lsl #1
   1731c:	adc	r0, r0, r0
   17320:	subcs	r3, r3, r1, lsl #1
   17324:	cmp	r3, r1
   17328:	adc	r0, r0, r0
   1732c:	subcs	r3, r3, r1
   17330:	cmp	ip, #0
   17334:	rsbmi	r0, r0, #0
   17338:	bx	lr
   1733c:	teq	ip, r0
   17340:	rsbmi	r0, r0, #0
   17344:	bx	lr
   17348:	movcc	r0, #0
   1734c:	asreq	r0, ip, #31
   17350:	orreq	r0, r0, #1
   17354:	bx	lr
   17358:	clz	r2, r1
   1735c:	rsb	r2, r2, #31
   17360:	cmp	ip, #0
   17364:	lsr	r0, r3, r2
   17368:	rsbmi	r0, r0, #0
   1736c:	bx	lr
   17370:	cmp	r0, #0
   17374:	mvngt	r0, #-2147483648	; 0x80000000
   17378:	movlt	r0, #-2147483648	; 0x80000000
   1737c:	b	173a0 <strspn@plt+0x660c>
   17380:	cmp	r1, #0
   17384:	beq	17370 <strspn@plt+0x65dc>
   17388:	push	{r0, r1, lr}
   1738c:	bl	17168 <strspn@plt+0x63d4>
   17390:	pop	{r1, r2, lr}
   17394:	mul	r3, r2, r0
   17398:	sub	r1, r1, r3
   1739c:	bx	lr
   173a0:	push	{r1, lr}
   173a4:	mov	r0, #8
   173a8:	bl	10b84 <raise@plt>
   173ac:	pop	{r1, pc}
   173b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   173b4:	mov	r7, r0
   173b8:	ldr	r6, [pc, #72]	; 17408 <strspn@plt+0x6674>
   173bc:	ldr	r5, [pc, #72]	; 1740c <strspn@plt+0x6678>
   173c0:	add	r6, pc, r6
   173c4:	add	r5, pc, r5
   173c8:	sub	r6, r6, r5
   173cc:	mov	r8, r1
   173d0:	mov	r9, r2
   173d4:	bl	10b4c <calloc@plt-0x20>
   173d8:	asrs	r6, r6, #2
   173dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   173e0:	mov	r4, #0
   173e4:	add	r4, r4, #1
   173e8:	ldr	r3, [r5], #4
   173ec:	mov	r2, r9
   173f0:	mov	r1, r8
   173f4:	mov	r0, r7
   173f8:	blx	r3
   173fc:	cmp	r6, r4
   17400:	bne	173e4 <strspn@plt+0x6650>
   17404:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17408:	andeq	r0, r1, r8, asr #22
   1740c:	andeq	r0, r1, r0, asr #22
   17410:	bx	lr
   17414:	ldr	r3, [pc, #12]	; 17428 <strspn@plt+0x6694>
   17418:	mov	r1, #0
   1741c:	add	r3, pc, r3
   17420:	ldr	r2, [r3]
   17424:	b	10cec <__cxa_atexit@plt>
   17428:	andeq	r0, r1, ip, lsr #25

Disassembly of section .fini:

0001742c <.fini>:
   1742c:	push	{r3, lr}
   17430:	pop	{r3, pc}
