
../repos/coreutils/src/sha1sum:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	1229c <dcngettext@plt+0x12ac>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <fdopen@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <fdopen@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x0001b2b4

00010d50 <fdopen@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #110592	; 0x1b000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #110592	; 0x1b000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #110592	; 0x1b000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #110592	; 0x1b000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #110592	; 0x1b000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #110592	; 0x1b000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <posix_fadvise64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #110592	; 0x1b000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <fflush@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #110592	; 0x1b000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #110592	; 0x1b000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #110592	; 0x1b000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #110592	; 0x1b000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #110592	; 0x1b000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <fwrite_unlocked@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #110592	; 0x1b000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <memcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #110592	; 0x1b000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <fputc_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #110592	; 0x1b000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <dcgettext@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #110592	; 0x1b000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #110592	; 0x1b000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #110592	; 0x1b000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #110592	; 0x1b000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #110592	; 0x1b000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #110592	; 0x1b000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #110592	; 0x1b000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #110592	; 0x1b000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #110592	; 0x1b000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #110592	; 0x1b000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #110592	; 0x1b000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #110592	; 0x1b000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #110592	; 0x1b000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__ctype_tolower_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #110592	; 0x1b000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__gmon_start__@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #110592	; 0x1b000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #110592	; 0x1b000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #110592	; 0x1b000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #110592	; 0x1b000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #110592	; 0x1b000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <strchr@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #110592	; 0x1b000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <__errno_location@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #110592	; 0x1b000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #110592	; 0x1b000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <setvbuf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #110592	; 0x1b000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #110592	; 0x1b000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #110592	; 0x1b000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #110592	; 0x1b000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #110592	; 0x1b000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #110592	; 0x1b000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #110592	; 0x1b000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <fcntl64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #110592	; 0x1b000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <__overflow@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #110592	; 0x1b000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #110592	; 0x1b000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #110592	; 0x1b000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #110592	; 0x1b000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <clearerr_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #110592	; 0x1b000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <fopen64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #110592	; 0x1b000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #110592	; 0x1b000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

00010fc0 <fread_unlocked@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #110592	; 0x1b000
   10fc8:	ldr	pc, [ip, #276]!	; 0x114

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #110592	; 0x1b000
   10fd4:	ldr	pc, [ip, #268]!	; 0x10c

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #110592	; 0x1b000
   10fe0:	ldr	pc, [ip, #260]!	; 0x104

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #110592	; 0x1b000
   10fec:	ldr	pc, [ip, #252]!	; 0xfc

00010ff0 <dcngettext@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #110592	; 0x1b000
   10ff8:	ldr	pc, [ip, #244]!	; 0xf4

Disassembly of section .text:

00010ffc <.text>:
   10ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11000:	mov	r6, r0
   11004:	sub	sp, sp, #172	; 0xac
   11008:	ldr	r0, [r1]
   1100c:	mov	r5, r1
   11010:	bl	14934 <dcngettext@plt+0x3944>
   11014:	ldr	r1, [pc, #3968]	; 11f9c <dcngettext@plt+0xfac>
   11018:	mov	r0, #6
   1101c:	bl	10f78 <setlocale@plt>
   11020:	ldr	r1, [pc, #3960]	; 11fa0 <dcngettext@plt+0xfb0>
   11024:	ldr	r0, [pc, #3960]	; 11fa4 <dcngettext@plt+0xfb4>
   11028:	bl	10fb4 <bindtextdomain@plt>
   1102c:	ldr	r0, [pc, #3952]	; 11fa4 <dcngettext@plt+0xfb4>
   11030:	bl	10e1c <textdomain@plt>
   11034:	ldr	r0, [pc, #3948]	; 11fa8 <dcngettext@plt+0xfb8>
   11038:	bl	1a55c <dcngettext@plt+0x956c>
   1103c:	ldr	r2, [pc, #3944]	; 11fac <dcngettext@plt+0xfbc>
   11040:	mov	r3, #0
   11044:	ldr	r8, [pc, #3940]	; 11fb0 <dcngettext@plt+0xfc0>
   11048:	ldr	r7, [pc, #3940]	; 11fb4 <dcngettext@plt+0xfc4>
   1104c:	ldr	r9, [pc, #3940]	; 11fb8 <dcngettext@plt+0xfc8>
   11050:	ldr	fp, [pc, #3940]	; 11fbc <dcngettext@plt+0xfcc>
   11054:	ldr	r0, [r2]
   11058:	mov	r1, r3
   1105c:	mov	r2, #1
   11060:	mov	sl, #1
   11064:	mov	r4, r3
   11068:	str	r3, [sp, #32]
   1106c:	bl	10f0c <setvbuf@plt>
   11070:	mvn	r3, #0
   11074:	str	r4, [sp, #16]
   11078:	str	r3, [sp, #20]
   1107c:	mov	r4, #0
   11080:	str	r4, [sp]
   11084:	mov	r3, r8
   11088:	mov	r2, r7
   1108c:	mov	r1, r5
   11090:	mov	r0, r6
   11094:	bl	10eb8 <getopt_long@plt>
   11098:	cmn	r0, #1
   1109c:	beq	111f0 <dcngettext@plt+0x200>
   110a0:	cmp	r0, #119	; 0x77
   110a4:	beq	111e0 <dcngettext@plt+0x1f0>
   110a8:	ble	110e0 <dcngettext@plt+0xf0>
   110ac:	cmp	r0, fp
   110b0:	beq	111d0 <dcngettext@plt+0x1e0>
   110b4:	ble	1111c <dcngettext@plt+0x12c>
   110b8:	ldr	r3, [pc, #3840]	; 11fc0 <dcngettext@plt+0xfd0>
   110bc:	cmp	r0, r3
   110c0:	beq	111c8 <dcngettext@plt+0x1d8>
   110c4:	blt	11178 <dcngettext@plt+0x188>
   110c8:	cmp	r0, #260	; 0x104
   110cc:	bne	111c0 <dcngettext@plt+0x1d0>
   110d0:	mov	r3, #1
   110d4:	str	sl, [sp, #32]
   110d8:	str	r3, [sp, #20]
   110dc:	b	1107c <dcngettext@plt+0x8c>
   110e0:	cmp	r0, #98	; 0x62
   110e4:	beq	11194 <dcngettext@plt+0x1a4>
   110e8:	bgt	11104 <dcngettext@plt+0x114>
   110ec:	cmn	r0, #3
   110f0:	beq	1113c <dcngettext@plt+0x14c>
   110f4:	cmn	r0, #2
   110f8:	bne	111c0 <dcngettext@plt+0x1d0>
   110fc:	mov	r0, r4
   11100:	bl	12610 <dcngettext@plt+0x1620>
   11104:	cmp	r0, #99	; 0x63
   11108:	beq	11134 <dcngettext@plt+0x144>
   1110c:	cmp	r0, #116	; 0x74
   11110:	bne	111c0 <dcngettext@plt+0x1d0>
   11114:	str	r4, [sp, #20]
   11118:	b	1107c <dcngettext@plt+0x8c>
   1111c:	cmp	r0, #122	; 0x7a
   11120:	beq	11188 <dcngettext@plt+0x198>
   11124:	cmp	r0, #256	; 0x100
   11128:	bne	111c0 <dcngettext@plt+0x1d0>
   1112c:	strb	sl, [r9, #1]
   11130:	b	1107c <dcngettext@plt+0x8c>
   11134:	str	sl, [sp, #16]
   11138:	b	1107c <dcngettext@plt+0x8c>
   1113c:	ldr	ip, [pc, #3712]	; 11fc4 <dcngettext@plt+0xfd4>
   11140:	ldr	r1, [pc, #3712]	; 11fc8 <dcngettext@plt+0xfd8>
   11144:	ldr	r3, [pc, #3712]	; 11fcc <dcngettext@plt+0xfdc>
   11148:	ldr	r0, [pc, #3676]	; 11fac <dcngettext@plt+0xfbc>
   1114c:	ldr	r2, [pc, #3708]	; 11fd0 <dcngettext@plt+0xfe0>
   11150:	str	r4, [sp, #12]
   11154:	ldr	r0, [r0]
   11158:	ldr	r3, [r3]
   1115c:	stmib	sp, {r1, ip}
   11160:	str	r2, [sp]
   11164:	ldr	r1, [pc, #3688]	; 11fd4 <dcngettext@plt+0xfe4>
   11168:	ldr	r2, [pc, #3688]	; 11fd8 <dcngettext@plt+0xfe8>
   1116c:	bl	191e0 <dcngettext@plt+0x81f0>
   11170:	mov	r0, r4
   11174:	bl	10ed0 <exit@plt>
   11178:	strb	r4, [r9, #2]
   1117c:	strb	r4, [r9, #3]
   11180:	strb	sl, [r9, #4]
   11184:	b	1107c <dcngettext@plt+0x8c>
   11188:	ldr	r3, [pc, #3660]	; 11fdc <dcngettext@plt+0xfec>
   1118c:	strb	r4, [r3]
   11190:	b	1107c <dcngettext@plt+0x8c>
   11194:	mov	r3, #1
   11198:	str	r3, [sp, #20]
   1119c:	b	1107c <dcngettext@plt+0x8c>
   111a0:	ldr	r1, [pc, #3640]	; 11fe0 <dcngettext@plt+0xff0>
   111a4:	mov	r2, #5
   111a8:	mov	r0, r4
   111ac:	bl	10e04 <dcgettext@plt>
   111b0:	mov	r1, r4
   111b4:	mov	r2, r0
   111b8:	mov	r0, r4
   111bc:	bl	10e70 <error@plt>
   111c0:	mov	r0, #1
   111c4:	bl	12610 <dcngettext@plt+0x1620>
   111c8:	strb	sl, [r9, #5]
   111cc:	b	1107c <dcngettext@plt+0x8c>
   111d0:	strb	sl, [r9, #2]
   111d4:	strb	r4, [r9, #3]
   111d8:	strb	r4, [r9, #4]
   111dc:	b	1107c <dcngettext@plt+0x8c>
   111e0:	strb	r4, [r9, #2]
   111e4:	strb	sl, [r9, #3]
   111e8:	strb	r4, [r9, #4]
   111ec:	b	1107c <dcngettext@plt+0x8c>
   111f0:	ldr	fp, [pc, #3520]	; 11fb8 <dcngettext@plt+0xfc8>
   111f4:	ldr	r3, [sp, #20]
   111f8:	ldr	r7, [sp, #32]
   111fc:	cmp	r3, r4
   11200:	movne	r7, #0
   11204:	andeq	r7, r7, #1
   11208:	mov	r3, #42	; 0x2a
   1120c:	str	r3, [fp, #8]
   11210:	cmp	r7, r4
   11214:	mov	r3, #40	; 0x28
   11218:	str	r3, [fp, #12]
   1121c:	bne	111a0 <dcngettext@plt+0x1b0>
   11220:	ldr	r3, [pc, #3508]	; 11fdc <dcngettext@plt+0xfec>
   11224:	ldrb	r4, [r3]
   11228:	ldr	r3, [sp, #16]
   1122c:	cmp	r4, #10
   11230:	moveq	r3, #0
   11234:	andne	r3, r3, #1
   11238:	cmp	r3, #0
   1123c:	mov	r4, r3
   11240:	movne	r2, #5
   11244:	ldrne	r1, [pc, #3480]	; 11fe4 <dcngettext@plt+0xff4>
   11248:	bne	12240 <dcngettext@plt+0x1250>
   1124c:	ldr	r2, [sp, #32]
   11250:	ldr	r3, [sp, #16]
   11254:	ands	r7, r3, r2
   11258:	movne	r2, #5
   1125c:	ldrne	r1, [pc, #3460]	; 11fe8 <dcngettext@plt+0xff8>
   11260:	bne	111a8 <dcngettext@plt+0x1b8>
   11264:	ldr	r2, [sp, #20]
   11268:	ldr	r3, [sp, #16]
   1126c:	cmp	r2, #0
   11270:	movlt	r3, #0
   11274:	andge	r3, r3, #1
   11278:	cmp	r3, #0
   1127c:	movne	r2, #5
   11280:	ldrne	r1, [pc, #3428]	; 11fec <dcngettext@plt+0xffc>
   11284:	bne	12240 <dcngettext@plt+0x1250>
   11288:	ldrb	r3, [fp, #1]
   1128c:	ldr	r2, [sp, #16]
   11290:	eor	r3, r3, #1
   11294:	orrs	r4, r2, r3
   11298:	moveq	r2, #5
   1129c:	ldreq	r1, [pc, #3404]	; 11ff0 <dcngettext@plt+0x1000>
   112a0:	beq	111a8 <dcngettext@plt+0x1b8>
   112a4:	ldrb	r3, [fp, #2]
   112a8:	ldr	r2, [sp, #16]
   112ac:	eor	r3, r3, #1
   112b0:	orrs	r4, r2, r3
   112b4:	moveq	r2, #5
   112b8:	ldreq	r1, [pc, #3380]	; 11ff4 <dcngettext@plt+0x1004>
   112bc:	beq	111a8 <dcngettext@plt+0x1b8>
   112c0:	ldrb	r3, [fp, #3]
   112c4:	ldr	r2, [sp, #16]
   112c8:	eor	r3, r3, #1
   112cc:	orrs	r4, r2, r3
   112d0:	moveq	r2, #5
   112d4:	ldreq	r1, [pc, #3356]	; 11ff8 <dcngettext@plt+0x1008>
   112d8:	beq	111a8 <dcngettext@plt+0x1b8>
   112dc:	ldrb	r3, [fp, #4]
   112e0:	ldr	r2, [sp, #16]
   112e4:	eor	r3, r3, #1
   112e8:	orrs	r3, r2, r3
   112ec:	str	r3, [sp, #40]	; 0x28
   112f0:	moveq	r2, #5
   112f4:	ldreq	r1, [pc, #3328]	; 11ffc <dcngettext@plt+0x100c>
   112f8:	moveq	r4, r3
   112fc:	beq	111a8 <dcngettext@plt+0x1b8>
   11300:	ldrb	r2, [fp, #5]
   11304:	ldr	r3, [sp, #16]
   11308:	eor	r3, r3, #1
   1130c:	ands	r3, r2, r3
   11310:	str	r3, [sp, #36]	; 0x24
   11314:	bne	12238 <dcngettext@plt+0x1248>
   11318:	ldr	r3, [pc, #3296]	; 12000 <dcngettext@plt+0x1010>
   1131c:	ldr	r1, [sp, #20]
   11320:	ldr	r3, [r3]
   11324:	cmn	r1, #1
   11328:	mov	r2, r1
   1132c:	moveq	r2, #0
   11330:	str	r2, [sp, #20]
   11334:	cmp	r6, r3
   11338:	add	r2, r5, r6, lsl #2
   1133c:	str	r2, [sp, #60]	; 0x3c
   11340:	addeq	r2, r2, #4
   11344:	streq	r2, [sp, #60]	; 0x3c
   11348:	ldreq	r2, [pc, #3252]	; 12004 <dcngettext@plt+0x1014>
   1134c:	streq	r2, [r5, r3, lsl #2]
   11350:	ldr	r2, [sp, #20]
   11354:	add	r3, r5, r3, lsl #2
   11358:	cmp	r2, #0
   1135c:	movne	r2, #42	; 0x2a
   11360:	moveq	r2, #32
   11364:	str	r3, [sp, #20]
   11368:	uxtb	r3, r2
   1136c:	str	r2, [sp, #100]	; 0x64
   11370:	str	r3, [sp, #96]	; 0x60
   11374:	ldr	r3, [sp, #60]	; 0x3c
   11378:	ldr	r2, [sp, #20]
   1137c:	cmp	r3, r2
   11380:	bls	11db8 <dcngettext@plt+0xdc8>
   11384:	ldr	r3, [sp, #16]
   11388:	cmp	r3, #0
   1138c:	ldr	r3, [sp, #20]
   11390:	ldr	r5, [r3], #4
   11394:	str	r3, [sp, #20]
   11398:	beq	11718 <dcngettext@plt+0x728>
   1139c:	ldr	r1, [pc, #3168]	; 12004 <dcngettext@plt+0x1014>
   113a0:	mov	r0, r5
   113a4:	bl	10d8c <strcmp@plt>
   113a8:	subs	r3, r0, #0
   113ac:	str	r3, [sp, #48]	; 0x30
   113b0:	bne	1194c <dcngettext@plt+0x95c>
   113b4:	mov	r3, #1
   113b8:	mov	r2, #5
   113bc:	ldr	r1, [pc, #3140]	; 12008 <dcngettext@plt+0x1018>
   113c0:	strb	r3, [fp]
   113c4:	bl	10e04 <dcgettext@plt>
   113c8:	ldr	r3, [pc, #3132]	; 1200c <dcngettext@plt+0x101c>
   113cc:	ldr	sl, [r3]
   113d0:	str	r0, [sp, #64]	; 0x40
   113d4:	add	r5, sp, #168	; 0xa8
   113d8:	mov	r3, #0
   113dc:	mov	r0, #0
   113e0:	mov	r1, #0
   113e4:	str	r3, [r5, #-52]!	; 0xffffffcc
   113e8:	str	r3, [sp, #112]	; 0x70
   113ec:	ldr	r3, [sp, #36]	; 0x24
   113f0:	strd	r0, [sp, #80]	; 0x50
   113f4:	strd	r0, [sp, #72]	; 0x48
   113f8:	strd	r0, [sp, #24]
   113fc:	str	r3, [sp, #88]	; 0x58
   11400:	str	r3, [sp, #68]	; 0x44
   11404:	mov	r8, #1
   11408:	mov	r9, #0
   1140c:	b	1142c <dcngettext@plt+0x43c>
   11410:	ldr	r3, [sl]
   11414:	ands	r3, r3, #48	; 0x30
   11418:	bne	11738 <dcngettext@plt+0x748>
   1141c:	adds	r8, r8, #1
   11420:	adc	r9, r9, #0
   11424:	orrs	r2, r8, r9
   11428:	beq	11ea0 <dcngettext@plt+0xeb0>
   1142c:	mov	r3, sl
   11430:	mov	r2, #10
   11434:	mov	r1, r5
   11438:	add	r0, sp, #112	; 0x70
   1143c:	bl	10d80 <__getdelim@plt>
   11440:	subs	r4, r0, #0
   11444:	ble	11738 <dcngettext@plt+0x748>
   11448:	ldr	r3, [sp, #112]	; 0x70
   1144c:	ldrb	r2, [r3]
   11450:	cmp	r2, #35	; 0x23
   11454:	beq	11410 <dcngettext@plt+0x420>
   11458:	add	r2, r3, r4
   1145c:	ldrb	r0, [r2, #-1]
   11460:	cmp	r0, #10
   11464:	subeq	r4, r4, #1
   11468:	cmp	r4, #0
   1146c:	movle	r2, r4
   11470:	subgt	r2, r4, #1
   11474:	ldrb	r0, [r3, r2]
   11478:	cmp	r0, #13
   1147c:	subeq	r4, r4, #1
   11480:	cmp	r4, #0
   11484:	beq	11410 <dcngettext@plt+0x420>
   11488:	mov	r2, #0
   1148c:	strb	r2, [r3, r4]
   11490:	ldr	r7, [sp, #112]	; 0x70
   11494:	ldrb	r3, [r7]
   11498:	cmp	r3, #32
   1149c:	cmpne	r3, #9
   114a0:	moveq	r1, #1
   114a4:	movne	r1, #0
   114a8:	bne	11db0 <dcngettext@plt+0xdc0>
   114ac:	mov	r6, r2
   114b0:	mov	r2, r7
   114b4:	ldrb	r3, [r2, #1]!
   114b8:	add	r6, r6, #1
   114bc:	cmp	r3, #9
   114c0:	cmpne	r3, #32
   114c4:	beq	114b4 <dcngettext@plt+0x4c4>
   114c8:	cmp	r3, #92	; 0x5c
   114cc:	addeq	r6, r6, #1
   114d0:	ldreq	r3, [sp, #16]
   114d4:	ldrne	r3, [sp, #36]	; 0x24
   114d8:	add	r0, r7, r6
   114dc:	mov	r2, #4
   114e0:	ldr	r1, [pc, #2856]	; 12010 <dcngettext@plt+0x1020>
   114e4:	str	r3, [sp, #56]	; 0x38
   114e8:	str	r0, [sp, #44]	; 0x2c
   114ec:	bl	10fcc <strncmp@plt>
   114f0:	cmp	r0, #0
   114f4:	bne	11624 <dcngettext@plt+0x634>
   114f8:	add	r2, r6, #4
   114fc:	ldrb	r3, [r7, r2]
   11500:	cmp	r3, #32
   11504:	addeq	r2, r6, #5
   11508:	ldrb	r3, [r7, r2]
   1150c:	cmp	r3, #40	; 0x28
   11510:	bne	116b4 <dcngettext@plt+0x6c4>
   11514:	add	r2, r2, #1
   11518:	subs	r4, r4, r2
   1151c:	beq	116b4 <dcngettext@plt+0x6c4>
   11520:	add	r3, r7, r2
   11524:	mov	ip, r3
   11528:	sub	r4, r4, #1
   1152c:	str	r3, [sp, #52]	; 0x34
   11530:	mov	lr, ip
   11534:	add	r3, r3, r4
   11538:	b	11550 <dcngettext@plt+0x560>
   1153c:	mov	r0, r3
   11540:	sub	r3, r3, #1
   11544:	ldrb	r4, [r0]
   11548:	cmp	r4, #41	; 0x29
   1154c:	beq	11570 <dcngettext@plt+0x580>
   11550:	cmp	ip, r3
   11554:	sub	r1, r3, ip
   11558:	bne	1153c <dcngettext@plt+0x54c>
   1155c:	ldrb	r3, [r7, r2]
   11560:	cmp	r3, #41	; 0x29
   11564:	bne	116b4 <dcngettext@plt+0x6c4>
   11568:	ldr	r0, [sp, #52]	; 0x34
   1156c:	mov	r1, #0
   11570:	ldr	r3, [sp, #56]	; 0x38
   11574:	cmp	r3, #0
   11578:	bne	12170 <dcngettext@plt+0x1180>
   1157c:	mov	r3, #0
   11580:	add	r1, r1, #1
   11584:	strb	r3, [r0]
   11588:	ldr	r2, [sp, #52]	; 0x34
   1158c:	b	11594 <dcngettext@plt+0x5a4>
   11590:	add	r1, r1, #1
   11594:	ldrb	r3, [r2, r1]
   11598:	cmp	r3, #9
   1159c:	cmpne	r3, #32
   115a0:	beq	11590 <dcngettext@plt+0x5a0>
   115a4:	cmp	r3, #61	; 0x3d
   115a8:	bne	116b4 <dcngettext@plt+0x6c4>
   115ac:	ldr	r3, [sp, #52]	; 0x34
   115b0:	add	r1, r1, #1
   115b4:	add	r7, r3, r1
   115b8:	b	115c0 <dcngettext@plt+0x5d0>
   115bc:	mov	r7, r3
   115c0:	mov	r3, r7
   115c4:	ldrb	r2, [r3], #1
   115c8:	cmp	r2, #9
   115cc:	cmpne	r2, #32
   115d0:	beq	115bc <dcngettext@plt+0x5cc>
   115d4:	ldr	r4, [fp, #12]
   115d8:	str	r7, [sp, #44]	; 0x2c
   115dc:	add	r4, r7, r4
   115e0:	b	11604 <dcngettext@plt+0x614>
   115e4:	bl	10ec4 <__ctype_b_loc@plt>
   115e8:	ldrb	r3, [r6]
   115ec:	add	r7, r7, #1
   115f0:	lsl	r3, r3, #1
   115f4:	ldr	r2, [r0]
   115f8:	ldrh	r3, [r2, r3]
   115fc:	tst	r3, #4096	; 0x1000
   11600:	beq	116b4 <dcngettext@plt+0x6c4>
   11604:	cmp	r4, r7
   11608:	mov	r6, r7
   1160c:	bne	115e4 <dcngettext@plt+0x5f4>
   11610:	ldrb	r1, [r4]
   11614:	ldr	r6, [sp, #44]	; 0x2c
   11618:	clz	r1, r1
   1161c:	lsr	r1, r1, #5
   11620:	b	11bd0 <dcngettext@plt+0xbe0>
   11624:	ldrb	r0, [r7, r6]
   11628:	ldr	r2, [fp, #8]
   1162c:	sub	r1, r4, r6
   11630:	cmp	r0, #92	; 0x5c
   11634:	addeq	r2, r2, #1
   11638:	cmp	r1, r2
   1163c:	bcc	116b4 <dcngettext@plt+0x6c4>
   11640:	ldr	r2, [fp, #12]
   11644:	add	r1, r6, r2
   11648:	ldrb	r0, [r7, r1]
   1164c:	cmp	r0, #32
   11650:	cmpne	r0, #9
   11654:	movne	r0, #1
   11658:	moveq	r0, #0
   1165c:	bne	116b4 <dcngettext@plt+0x6c4>
   11660:	cmp	r2, #0
   11664:	str	r2, [sp, #52]	; 0x34
   11668:	strb	r0, [r7, r1]
   1166c:	beq	11af8 <dcngettext@plt+0xb08>
   11670:	str	r1, [sp, #92]	; 0x5c
   11674:	bl	10ec4 <__ctype_b_loc@plt>
   11678:	ldr	r3, [sp, #44]	; 0x2c
   1167c:	ldr	r2, [sp, #52]	; 0x34
   11680:	mov	ip, r3
   11684:	add	lr, r3, r2
   11688:	ldr	r1, [sp, #92]	; 0x5c
   1168c:	ldr	r0, [r0]
   11690:	b	116a0 <dcngettext@plt+0x6b0>
   11694:	cmp	lr, ip
   11698:	mov	r2, ip
   1169c:	beq	11afc <dcngettext@plt+0xb0c>
   116a0:	ldrb	r3, [ip], #1
   116a4:	lsl	r3, r3, #1
   116a8:	ldrh	r3, [r0, r3]
   116ac:	tst	r3, #4096	; 0x1000
   116b0:	bne	11694 <dcngettext@plt+0x6a4>
   116b4:	ldrd	r0, [sp, #24]
   116b8:	ldrb	r3, [fp, #3]
   116bc:	adds	r0, r0, #1
   116c0:	adc	r1, r1, #0
   116c4:	cmp	r3, #0
   116c8:	strd	r0, [sp, #24]
   116cc:	beq	11410 <dcngettext@plt+0x420>
   116d0:	mov	r2, #5
   116d4:	ldr	r1, [pc, #2360]	; 12014 <dcngettext@plt+0x1024>
   116d8:	mov	r0, #0
   116dc:	bl	10e04 <dcgettext@plt>
   116e0:	ldr	r2, [sp, #64]	; 0x40
   116e4:	mov	r1, #3
   116e8:	mov	r4, r0
   116ec:	mov	r0, #0
   116f0:	bl	1790c <dcngettext@plt+0x691c>
   116f4:	ldr	r3, [pc, #2324]	; 12010 <dcngettext@plt+0x1020>
   116f8:	mov	r1, #0
   116fc:	str	r3, [sp, #8]
   11700:	mov	r2, r4
   11704:	strd	r8, [sp]
   11708:	mov	r3, r0
   1170c:	mov	r0, r1
   11710:	bl	10e70 <error@plt>
   11714:	b	11410 <dcngettext@plt+0x420>
   11718:	add	r2, sp, #144	; 0x90
   1171c:	add	r1, sp, #120	; 0x78
   11720:	mov	r0, r5
   11724:	bl	12480 <dcngettext@plt+0x1490>
   11728:	subs	r8, r0, #0
   1172c:	bne	119fc <dcngettext@plt+0xa0c>
   11730:	str	r8, [sp, #40]	; 0x28
   11734:	b	11374 <dcngettext@plt+0x384>
   11738:	ldr	r0, [sp, #112]	; 0x70
   1173c:	bl	1483c <dcngettext@plt+0x384c>
   11740:	ldr	r4, [sl]
   11744:	ldr	r3, [sp, #48]	; 0x30
   11748:	ands	r4, r4, #32
   1174c:	mov	r0, sl
   11750:	bne	11998 <dcngettext@plt+0x9a8>
   11754:	cmp	r3, #0
   11758:	beq	11784 <dcngettext@plt+0x794>
   1175c:	bl	146a4 <dcngettext@plt+0x36b4>
   11760:	cmp	r0, #0
   11764:	beq	11788 <dcngettext@plt+0x798>
   11768:	bl	10ef4 <__errno_location@plt>
   1176c:	ldr	r5, [r0]
   11770:	cmp	r5, #0
   11774:	blt	11788 <dcngettext@plt+0x798>
   11778:	ldrne	r4, [pc, #2200]	; 12018 <dcngettext@plt+0x1028>
   1177c:	bne	119bc <dcngettext@plt+0x9cc>
   11780:	b	119a4 <dcngettext@plt+0x9b4>
   11784:	bl	10f9c <clearerr_unlocked@plt>
   11788:	ldr	r3, [sp, #68]	; 0x44
   1178c:	cmp	r3, #0
   11790:	beq	11e60 <dcngettext@plt+0xe70>
   11794:	ldrb	r3, [fp, #2]
   11798:	cmp	r3, #0
   1179c:	bne	11908 <dcngettext@plt+0x918>
   117a0:	ldrd	r0, [sp, #24]
   117a4:	mov	r2, r0
   117a8:	mov	r3, r1
   117ac:	orrs	r3, r2, r3
   117b0:	beq	11810 <dcngettext@plt+0x820>
   117b4:	mov	r3, #0
   117b8:	cmp	r1, r3
   117bc:	mvn	r2, #0
   117c0:	cmpeq	r0, r2
   117c4:	ldrls	r3, [sp, #24]
   117c8:	bls	117e0 <dcngettext@plt+0x7f0>
   117cc:	ldr	r2, [pc, #2120]	; 1201c <dcngettext@plt+0x102c>
   117d0:	mov	r3, #0
   117d4:	bl	1a384 <dcngettext@plt+0x9394>
   117d8:	add	r3, r2, #999424	; 0xf4000
   117dc:	add	r3, r3, #576	; 0x240
   117e0:	mov	r2, #5
   117e4:	str	r2, [sp]
   117e8:	ldr	r1, [pc, #2096]	; 12020 <dcngettext@plt+0x1030>
   117ec:	ldr	r2, [pc, #2096]	; 12024 <dcngettext@plt+0x1034>
   117f0:	mov	r0, #0
   117f4:	bl	10ff0 <dcngettext@plt>
   117f8:	ldrd	r2, [sp, #24]
   117fc:	mov	r1, #0
   11800:	strd	r2, [sp]
   11804:	mov	r2, r0
   11808:	mov	r0, r1
   1180c:	bl	10e70 <error@plt>
   11810:	ldrd	r0, [sp, #72]	; 0x48
   11814:	mov	r2, r0
   11818:	mov	r3, r1
   1181c:	orrs	r3, r2, r3
   11820:	beq	11880 <dcngettext@plt+0x890>
   11824:	mov	r3, #0
   11828:	cmp	r1, r3
   1182c:	mvn	r2, #0
   11830:	cmpeq	r0, r2
   11834:	ldrls	r3, [sp, #72]	; 0x48
   11838:	bls	11850 <dcngettext@plt+0x860>
   1183c:	ldr	r2, [pc, #2008]	; 1201c <dcngettext@plt+0x102c>
   11840:	mov	r3, #0
   11844:	bl	1a384 <dcngettext@plt+0x9394>
   11848:	add	r3, r2, #999424	; 0xf4000
   1184c:	add	r3, r3, #576	; 0x240
   11850:	mov	r2, #5
   11854:	str	r2, [sp]
   11858:	ldr	r1, [pc, #1992]	; 12028 <dcngettext@plt+0x1038>
   1185c:	ldr	r2, [pc, #1992]	; 1202c <dcngettext@plt+0x103c>
   11860:	mov	r0, #0
   11864:	bl	10ff0 <dcngettext@plt>
   11868:	ldrd	r2, [sp, #72]	; 0x48
   1186c:	mov	r1, #0
   11870:	strd	r2, [sp]
   11874:	mov	r2, r0
   11878:	mov	r0, r1
   1187c:	bl	10e70 <error@plt>
   11880:	ldrd	r0, [sp, #80]	; 0x50
   11884:	mov	r2, r0
   11888:	mov	r3, r1
   1188c:	orrs	r3, r2, r3
   11890:	beq	118f0 <dcngettext@plt+0x900>
   11894:	mov	r3, #0
   11898:	cmp	r1, r3
   1189c:	mvn	r2, #0
   118a0:	cmpeq	r0, r2
   118a4:	ldrls	r3, [sp, #80]	; 0x50
   118a8:	bls	118c0 <dcngettext@plt+0x8d0>
   118ac:	ldr	r2, [pc, #1896]	; 1201c <dcngettext@plt+0x102c>
   118b0:	mov	r3, #0
   118b4:	bl	1a384 <dcngettext@plt+0x9394>
   118b8:	add	r3, r2, #999424	; 0xf4000
   118bc:	add	r3, r3, #576	; 0x240
   118c0:	mov	r2, #5
   118c4:	str	r2, [sp]
   118c8:	ldr	r1, [pc, #1888]	; 12030 <dcngettext@plt+0x1040>
   118cc:	ldr	r2, [pc, #1888]	; 12034 <dcngettext@plt+0x1044>
   118d0:	mov	r0, #0
   118d4:	bl	10ff0 <dcngettext@plt>
   118d8:	ldrd	r2, [sp, #80]	; 0x50
   118dc:	mov	r1, #0
   118e0:	strd	r2, [sp]
   118e4:	mov	r2, r0
   118e8:	mov	r0, r1
   118ec:	bl	10e70 <error@plt>
   118f0:	ldrb	r5, [fp, #1]
   118f4:	ldr	r3, [sp, #88]	; 0x58
   118f8:	eor	r5, r5, #1
   118fc:	orr	r5, r3, r5
   11900:	ands	r5, r5, #255	; 0xff
   11904:	beq	12134 <dcngettext@plt+0x1144>
   11908:	ldr	r3, [sp, #88]	; 0x58
   1190c:	cmp	r3, #0
   11910:	beq	11944 <dcngettext@plt+0x954>
   11914:	ldrd	r2, [sp, #72]	; 0x48
   11918:	ldrd	r0, [sp, #80]	; 0x50
   1191c:	orr	r2, r2, r0
   11920:	orr	r3, r3, r1
   11924:	orrs	r3, r2, r3
   11928:	bne	11944 <dcngettext@plt+0x954>
   1192c:	ldrd	r2, [sp, #24]
   11930:	ldrb	r4, [fp, #5]
   11934:	mov	r1, r2
   11938:	orrs	r3, r1, r3
   1193c:	eor	r4, r4, #1
   11940:	orreq	r4, r4, #1
   11944:	and	r4, r4, #1
   11948:	b	119e4 <dcngettext@plt+0x9f4>
   1194c:	ldr	r1, [pc, #1764]	; 12038 <dcngettext@plt+0x1048>
   11950:	mov	r0, r5
   11954:	bl	147a4 <dcngettext@plt+0x37b4>
   11958:	subs	sl, r0, #0
   1195c:	strne	r5, [sp, #64]	; 0x40
   11960:	bne	113d4 <dcngettext@plt+0x3e4>
   11964:	bl	10ef4 <__errno_location@plt>
   11968:	mov	r2, r5
   1196c:	mov	r1, #3
   11970:	ldr	r4, [r0]
   11974:	mov	r0, sl
   11978:	bl	1790c <dcngettext@plt+0x691c>
   1197c:	mov	r1, r4
   11980:	ldr	r2, [pc, #1680]	; 12018 <dcngettext@plt+0x1028>
   11984:	mov	r3, r0
   11988:	mov	r0, sl
   1198c:	bl	10e70 <error@plt>
   11990:	ldr	r4, [sp, #36]	; 0x24
   11994:	b	119e4 <dcngettext@plt+0x9f4>
   11998:	cmp	r3, #0
   1199c:	beq	119f4 <dcngettext@plt+0xa04>
   119a0:	bl	146a4 <dcngettext@plt+0x36b4>
   119a4:	mov	r2, #5
   119a8:	ldr	r1, [pc, #1676]	; 1203c <dcngettext@plt+0x104c>
   119ac:	mov	r0, #0
   119b0:	bl	10e04 <dcgettext@plt>
   119b4:	mov	r5, #0
   119b8:	mov	r4, r0
   119bc:	ldr	r2, [sp, #64]	; 0x40
   119c0:	mov	r1, #3
   119c4:	mov	r0, #0
   119c8:	bl	1790c <dcngettext@plt+0x691c>
   119cc:	mov	r2, r4
   119d0:	mov	r1, r5
   119d4:	mov	r3, r0
   119d8:	mov	r0, #0
   119dc:	bl	10e70 <error@plt>
   119e0:	ldr	r4, [sp, #36]	; 0x24
   119e4:	ldr	r3, [sp, #40]	; 0x28
   119e8:	and	r3, r3, r4
   119ec:	str	r3, [sp, #40]	; 0x28
   119f0:	b	11374 <dcngettext@plt+0x384>
   119f4:	bl	10f9c <clearerr_unlocked@plt>
   119f8:	b	119a4 <dcngettext@plt+0x9b4>
   119fc:	ldr	r3, [pc, #1496]	; 11fdc <dcngettext@plt+0xfec>
   11a00:	ldrb	r9, [r3]
   11a04:	cmp	r9, #10
   11a08:	beq	12074 <dcngettext@plt+0x1084>
   11a0c:	ldr	r8, [sp, #16]
   11a10:	ldr	r3, [sp, #32]
   11a14:	cmp	r3, #0
   11a18:	bne	11f38 <dcngettext@plt+0xf48>
   11a1c:	ldr	r3, [fp, #12]
   11a20:	lsrs	r3, r3, #1
   11a24:	beq	11a64 <dcngettext@plt+0xa74>
   11a28:	ldr	r7, [pc, #1552]	; 12040 <dcngettext@plt+0x1050>
   11a2c:	add	sl, sp, #120	; 0x78
   11a30:	mov	r4, #0
   11a34:	mov	r6, #1
   11a38:	ldrb	r2, [sl], #1
   11a3c:	mov	r1, r7
   11a40:	mov	r0, r6
   11a44:	bl	10f24 <__printf_chk@plt>
   11a48:	ldr	r3, [fp, #12]
   11a4c:	add	r4, r4, #1
   11a50:	cmp	r4, r3, lsr #1
   11a54:	bcc	11a38 <dcngettext@plt+0xa48>
   11a58:	ldr	r3, [sp, #32]
   11a5c:	cmp	r3, #0
   11a60:	bne	11ac0 <dcngettext@plt+0xad0>
   11a64:	ldr	r3, [pc, #1344]	; 11fac <dcngettext@plt+0xfbc>
   11a68:	ldr	r0, [r3]
   11a6c:	ldr	r3, [r0, #20]
   11a70:	ldr	r2, [r0, #24]
   11a74:	cmp	r3, r2
   11a78:	addcc	r1, r3, #1
   11a7c:	movcc	r2, #32
   11a80:	strcc	r1, [r0, #20]
   11a84:	strbcc	r2, [r3]
   11a88:	bcs	120e8 <dcngettext@plt+0x10f8>
   11a8c:	ldr	r3, [pc, #1304]	; 11fac <dcngettext@plt+0xfbc>
   11a90:	ldr	r0, [r3]
   11a94:	ldr	r2, [r0, #24]
   11a98:	ldr	r3, [r0, #20]
   11a9c:	cmp	r3, r2
   11aa0:	addcc	r2, r3, #1
   11aa4:	strcc	r2, [r0, #20]
   11aa8:	ldrbcc	r2, [sp, #96]	; 0x60
   11aac:	strbcc	r2, [r3]
   11ab0:	bcs	120dc <dcngettext@plt+0x10ec>
   11ab4:	mov	r1, r8
   11ab8:	mov	r0, r5
   11abc:	bl	12388 <dcngettext@plt+0x1398>
   11ac0:	ldr	r3, [pc, #1252]	; 11fac <dcngettext@plt+0xfbc>
   11ac4:	ldr	r0, [r3]
   11ac8:	ldr	r3, [r0, #20]
   11acc:	ldr	r2, [r0, #24]
   11ad0:	cmp	r3, r2
   11ad4:	addcc	r2, r3, #1
   11ad8:	strcc	r2, [r0, #20]
   11adc:	ldrcc	r8, [sp, #40]	; 0x28
   11ae0:	strbcc	r9, [r3]
   11ae4:	bcc	11730 <dcngettext@plt+0x740>
   11ae8:	mov	r1, r9
   11aec:	bl	10f6c <__overflow@plt>
   11af0:	ldr	r8, [sp, #40]	; 0x28
   11af4:	b	11730 <dcngettext@plt+0x740>
   11af8:	ldr	r2, [sp, #44]	; 0x2c
   11afc:	ldrb	r2, [r2]
   11b00:	cmp	r2, #0
   11b04:	bne	116b4 <dcngettext@plt+0x6c4>
   11b08:	add	r2, r1, #1
   11b0c:	sub	r0, r4, r2
   11b10:	cmp	r0, #1
   11b14:	beq	11b30 <dcngettext@plt+0xb40>
   11b18:	ldrb	r0, [r7, r2]
   11b1c:	cmp	r0, #32
   11b20:	cmpne	r0, #42	; 0x2a
   11b24:	movne	r0, #1
   11b28:	moveq	r0, #0
   11b2c:	beq	11e0c <dcngettext@plt+0xe1c>
   11b30:	ldr	r3, [pc, #1188]	; 11fdc <dcngettext@plt+0xfec>
   11b34:	ldr	r1, [r3, #4]
   11b38:	cmp	r1, #0
   11b3c:	movne	r1, #1
   11b40:	ldrne	r3, [pc, #1172]	; 11fdc <dcngettext@plt+0xfec>
   11b44:	strne	r1, [r3, #4]
   11b48:	beq	116b4 <dcngettext@plt+0x6c4>
   11b4c:	ldr	r3, [sp, #56]	; 0x38
   11b50:	cmp	r3, #0
   11b54:	add	r3, r7, r2
   11b58:	str	r3, [sp, #52]	; 0x34
   11b5c:	ldreq	r6, [sp, #44]	; 0x2c
   11b60:	beq	11bd8 <dcngettext@plt+0xbe8>
   11b64:	ldr	r6, [sp, #52]	; 0x34
   11b68:	sub	r2, r4, r2
   11b6c:	sub	lr, r2, #1
   11b70:	mov	ip, r6
   11b74:	mov	r0, #0
   11b78:	mov	r3, #10
   11b7c:	cmp	r2, r0
   11b80:	bls	121e0 <dcngettext@plt+0x11f0>
   11b84:	ldrb	r1, [r6, r0]
   11b88:	cmp	r1, #0
   11b8c:	beq	11bc4 <dcngettext@plt+0xbd4>
   11b90:	cmp	r1, #92	; 0x5c
   11b94:	bne	120bc <dcngettext@plt+0x10cc>
   11b98:	cmp	r0, lr
   11b9c:	beq	11bc0 <dcngettext@plt+0xbd0>
   11ba0:	add	r0, r0, #1
   11ba4:	ldrb	r1, [r6, r0]
   11ba8:	cmp	r1, #110	; 0x6e
   11bac:	beq	12100 <dcngettext@plt+0x1110>
   11bb0:	cmp	r1, #114	; 0x72
   11bb4:	beq	120f4 <dcngettext@plt+0x1104>
   11bb8:	cmp	r1, #92	; 0x5c
   11bbc:	beq	120bc <dcngettext@plt+0x10cc>
   11bc0:	mov	r1, #0
   11bc4:	adds	r1, r1, #0
   11bc8:	ldr	r6, [sp, #44]	; 0x2c
   11bcc:	movne	r1, #1
   11bd0:	cmp	r1, #0
   11bd4:	beq	116b4 <dcngettext@plt+0x6c4>
   11bd8:	ldr	r3, [sp, #48]	; 0x30
   11bdc:	cmp	r3, #0
   11be0:	bne	11bf8 <dcngettext@plt+0xc08>
   11be4:	ldr	r1, [pc, #1048]	; 12004 <dcngettext@plt+0x1014>
   11be8:	ldr	r0, [sp, #52]	; 0x34
   11bec:	bl	10d8c <strcmp@plt>
   11bf0:	cmp	r0, #0
   11bf4:	beq	116b4 <dcngettext@plt+0x6c4>
   11bf8:	ldrb	r3, [fp, #2]
   11bfc:	cmp	r3, #0
   11c00:	ldrne	r3, [sp, #36]	; 0x24
   11c04:	strne	r3, [sp, #44]	; 0x2c
   11c08:	bne	11c24 <dcngettext@plt+0xc34>
   11c0c:	mov	r1, #10
   11c10:	ldr	r0, [sp, #52]	; 0x34
   11c14:	bl	10ee8 <strchr@plt>
   11c18:	adds	r3, r0, #0
   11c1c:	movne	r3, #1
   11c20:	str	r3, [sp, #44]	; 0x2c
   11c24:	add	r2, sp, #111	; 0x6f
   11c28:	add	r1, sp, #144	; 0x90
   11c2c:	ldr	r0, [sp, #52]	; 0x34
   11c30:	bl	12480 <dcngettext@plt+0x1490>
   11c34:	ldr	r2, [sp, #44]	; 0x2c
   11c38:	and	r3, r2, #1
   11c3c:	str	r3, [sp, #56]	; 0x38
   11c40:	subs	r3, r0, #0
   11c44:	str	r3, [sp, #68]	; 0x44
   11c48:	bne	11ca8 <dcngettext@plt+0xcb8>
   11c4c:	ldrd	r0, [sp, #72]	; 0x48
   11c50:	ldrb	r3, [fp, #2]
   11c54:	adds	r0, r0, #1
   11c58:	adc	r1, r1, #0
   11c5c:	cmp	r3, #0
   11c60:	strd	r0, [sp, #72]	; 0x48
   11c64:	bne	11c9c <dcngettext@plt+0xcac>
   11c68:	cmp	r2, #0
   11c6c:	bne	11dd8 <dcngettext@plt+0xde8>
   11c70:	ldr	r1, [sp, #56]	; 0x38
   11c74:	ldr	r0, [sp, #52]	; 0x34
   11c78:	bl	12388 <dcngettext@plt+0x1398>
   11c7c:	ldr	r1, [pc, #960]	; 12044 <dcngettext@plt+0x1054>
   11c80:	mov	r2, #5
   11c84:	mov	r0, #0
   11c88:	bl	10e04 <dcgettext@plt>
   11c8c:	ldr	r1, [pc, #948]	; 12048 <dcngettext@plt+0x1058>
   11c90:	mov	r2, r0
   11c94:	mov	r0, #1
   11c98:	bl	10f24 <__printf_chk@plt>
   11c9c:	ldr	r3, [sp, #16]
   11ca0:	str	r3, [sp, #68]	; 0x44
   11ca4:	b	11410 <dcngettext@plt+0x420>
   11ca8:	ldrb	r3, [fp, #1]
   11cac:	cmp	r3, #0
   11cb0:	beq	11cc0 <dcngettext@plt+0xcd0>
   11cb4:	ldrb	r3, [sp, #111]	; 0x6f
   11cb8:	cmp	r3, #0
   11cbc:	bne	11c9c <dcngettext@plt+0xcac>
   11cc0:	ldr	r3, [fp, #12]
   11cc4:	lsrs	r7, r3, #1
   11cc8:	beq	11edc <dcngettext@plt+0xeec>
   11ccc:	bl	10ea0 <__ctype_tolower_loc@plt>
   11cd0:	mov	r4, #0
   11cd4:	mov	r2, r6
   11cd8:	add	r1, sp, #144	; 0x90
   11cdc:	ldr	r0, [r0]
   11ce0:	b	11d14 <dcngettext@plt+0xd24>
   11ce4:	ldr	lr, [pc, #864]	; 1204c <dcngettext@plt+0x105c>
   11ce8:	and	r3, r3, #15
   11cec:	ldrb	ip, [r2, #1]
   11cf0:	add	r3, lr, r3
   11cf4:	ldrb	r3, [r3, #264]	; 0x108
   11cf8:	ldr	ip, [r0, ip, lsl #2]
   11cfc:	cmp	ip, r3
   11d00:	bne	11d34 <dcngettext@plt+0xd44>
   11d04:	add	r4, r4, #1
   11d08:	cmp	r7, r4
   11d0c:	add	r2, r2, #2
   11d10:	beq	11edc <dcngettext@plt+0xeec>
   11d14:	ldrb	r3, [r1], #1
   11d18:	ldr	ip, [pc, #812]	; 1204c <dcngettext@plt+0x105c>
   11d1c:	ldrb	lr, [r6, r4, lsl #1]
   11d20:	add	ip, ip, r3, lsr #4
   11d24:	ldrb	ip, [ip, #264]	; 0x108
   11d28:	ldr	lr, [r0, lr, lsl #2]
   11d2c:	cmp	lr, ip
   11d30:	beq	11ce4 <dcngettext@plt+0xcf4>
   11d34:	cmp	r7, r4
   11d38:	beq	11edc <dcngettext@plt+0xeec>
   11d3c:	ldrd	r0, [sp, #80]	; 0x50
   11d40:	ldrb	r3, [fp, #2]
   11d44:	adds	r0, r0, #1
   11d48:	adc	r1, r1, #0
   11d4c:	cmp	r3, #0
   11d50:	strd	r0, [sp, #80]	; 0x50
   11d54:	bne	11c9c <dcngettext@plt+0xcac>
   11d58:	ldr	r3, [sp, #44]	; 0x2c
   11d5c:	cmp	r3, #0
   11d60:	beq	120cc <dcngettext@plt+0x10dc>
   11d64:	ldr	r3, [pc, #576]	; 11fac <dcngettext@plt+0xfbc>
   11d68:	ldr	r0, [r3]
   11d6c:	ldr	r3, [r0, #20]
   11d70:	ldr	r2, [r0, #24]
   11d74:	cmp	r3, r2
   11d78:	addcc	r1, r3, #1
   11d7c:	movcc	r2, #92	; 0x5c
   11d80:	strcc	r1, [r0, #20]
   11d84:	strbcc	r2, [r3]
   11d88:	bcs	121d4 <dcngettext@plt+0x11e4>
   11d8c:	ldr	r1, [sp, #56]	; 0x38
   11d90:	ldr	r0, [sp, #52]	; 0x34
   11d94:	bl	12388 <dcngettext@plt+0x1398>
   11d98:	cmp	r7, r4
   11d9c:	beq	11f20 <dcngettext@plt+0xf30>
   11da0:	mov	r2, #5
   11da4:	ldr	r1, [pc, #676]	; 12050 <dcngettext@plt+0x1060>
   11da8:	mov	r0, #0
   11dac:	b	11c88 <dcngettext@plt+0xc98>
   11db0:	mov	r6, r1
   11db4:	b	114c8 <dcngettext@plt+0x4d8>
   11db8:	ldrb	r3, [fp]
   11dbc:	cmp	r3, #0
   11dc0:	bne	11e24 <dcngettext@plt+0xe34>
   11dc4:	ldr	r3, [sp, #40]	; 0x28
   11dc8:	eor	r0, r3, #1
   11dcc:	uxtb	r0, r0
   11dd0:	add	sp, sp, #172	; 0xac
   11dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dd8:	ldr	r3, [pc, #460]	; 11fac <dcngettext@plt+0xfbc>
   11ddc:	ldr	r0, [r3]
   11de0:	ldr	r3, [r0, #20]
   11de4:	ldr	r2, [r0, #24]
   11de8:	cmp	r3, r2
   11dec:	addcc	r1, r3, #1
   11df0:	movcc	r2, #92	; 0x5c
   11df4:	strcc	r1, [r0, #20]
   11df8:	strbcc	r2, [r3]
   11dfc:	bcc	11c70 <dcngettext@plt+0xc80>
   11e00:	mov	r1, #92	; 0x5c
   11e04:	bl	10f6c <__overflow@plt>
   11e08:	b	11c70 <dcngettext@plt+0xc80>
   11e0c:	ldr	r3, [pc, #456]	; 11fdc <dcngettext@plt+0xfec>
   11e10:	ldr	ip, [r3, #4]
   11e14:	cmp	ip, #1
   11e18:	strne	r0, [r3, #4]
   11e1c:	addne	r2, r1, #2
   11e20:	b	11b4c <dcngettext@plt+0xb5c>
   11e24:	ldr	r3, [pc, #480]	; 1200c <dcngettext@plt+0x101c>
   11e28:	ldr	r0, [r3]
   11e2c:	bl	146a4 <dcngettext@plt+0x36b4>
   11e30:	cmn	r0, #1
   11e34:	bne	11dc4 <dcngettext@plt+0xdd4>
   11e38:	bl	10ef4 <__errno_location@plt>
   11e3c:	mov	r2, #5
   11e40:	ldr	r1, [pc, #448]	; 12008 <dcngettext@plt+0x1018>
   11e44:	ldr	r4, [r0]
   11e48:	mov	r0, #0
   11e4c:	bl	10e04 <dcgettext@plt>
   11e50:	mov	r1, r4
   11e54:	mov	r2, r0
   11e58:	mov	r0, #1
   11e5c:	bl	10e70 <error@plt>
   11e60:	mov	r0, r3
   11e64:	mov	r2, #5
   11e68:	ldr	r1, [pc, #484]	; 12054 <dcngettext@plt+0x1064>
   11e6c:	mov	r6, r3
   11e70:	bl	10e04 <dcgettext@plt>
   11e74:	ldr	r2, [sp, #64]	; 0x40
   11e78:	mov	r1, #3
   11e7c:	mov	r5, r0
   11e80:	mov	r0, r6
   11e84:	bl	1790c <dcngettext@plt+0x691c>
   11e88:	mov	r2, r5
   11e8c:	mov	r1, r6
   11e90:	mov	r3, r0
   11e94:	mov	r0, r6
   11e98:	bl	10e70 <error@plt>
   11e9c:	b	11944 <dcngettext@plt+0x954>
   11ea0:	mov	r0, r3
   11ea4:	mov	r2, #5
   11ea8:	ldr	r1, [pc, #424]	; 12058 <dcngettext@plt+0x1068>
   11eac:	mov	r4, r3
   11eb0:	bl	10e04 <dcgettext@plt>
   11eb4:	ldr	r2, [sp, #64]	; 0x40
   11eb8:	mov	r1, #3
   11ebc:	mov	r5, r0
   11ec0:	mov	r0, r4
   11ec4:	bl	1790c <dcngettext@plt+0x691c>
   11ec8:	mov	r2, r5
   11ecc:	mov	r1, r4
   11ed0:	mov	r3, r0
   11ed4:	mov	r0, #1
   11ed8:	bl	10e70 <error@plt>
   11edc:	ldrb	r3, [fp, #2]
   11ee0:	cmp	r3, #0
   11ee4:	str	r3, [sp, #88]	; 0x58
   11ee8:	bne	11c9c <dcngettext@plt+0xcac>
   11eec:	ldrb	r3, [fp, #4]
   11ef0:	mov	r4, r7
   11ef4:	cmp	r3, #0
   11ef8:	str	r3, [sp, #88]	; 0x58
   11efc:	bne	11c9c <dcngettext@plt+0xcac>
   11f00:	ldr	r3, [sp, #44]	; 0x2c
   11f04:	cmp	r3, #0
   11f08:	bne	12210 <dcngettext@plt+0x1220>
   11f0c:	ldr	r1, [sp, #88]	; 0x58
   11f10:	ldr	r0, [sp, #52]	; 0x34
   11f14:	bl	12388 <dcngettext@plt+0x1398>
   11f18:	ldr	r3, [sp, #68]	; 0x44
   11f1c:	str	r3, [sp, #88]	; 0x58
   11f20:	ldrb	r0, [fp, #4]
   11f24:	cmp	r0, #0
   11f28:	bne	11c9c <dcngettext@plt+0xcac>
   11f2c:	mov	r2, #5
   11f30:	ldr	r1, [pc, #292]	; 1205c <dcngettext@plt+0x106c>
   11f34:	b	11c88 <dcngettext@plt+0xc98>
   11f38:	ldr	r3, [pc, #108]	; 11fac <dcngettext@plt+0xfbc>
   11f3c:	mov	r2, #4
   11f40:	mov	r1, #1
   11f44:	ldr	r3, [r3]
   11f48:	ldr	r0, [pc, #192]	; 12010 <dcngettext@plt+0x1020>
   11f4c:	bl	10de0 <fwrite_unlocked@plt>
   11f50:	ldr	r3, [pc, #84]	; 11fac <dcngettext@plt+0xfbc>
   11f54:	mov	r2, #2
   11f58:	mov	r1, #1
   11f5c:	ldr	r3, [r3]
   11f60:	ldr	r0, [pc, #248]	; 12060 <dcngettext@plt+0x1070>
   11f64:	bl	10de0 <fwrite_unlocked@plt>
   11f68:	mov	r1, r8
   11f6c:	mov	r0, r5
   11f70:	bl	12388 <dcngettext@plt+0x1398>
   11f74:	ldr	r3, [pc, #48]	; 11fac <dcngettext@plt+0xfbc>
   11f78:	mov	r2, #4
   11f7c:	mov	r1, #1
   11f80:	ldr	r3, [r3]
   11f84:	ldr	r0, [pc, #216]	; 12064 <dcngettext@plt+0x1074>
   11f88:	bl	10de0 <fwrite_unlocked@plt>
   11f8c:	ldr	r3, [fp, #12]
   11f90:	lsrs	r3, r3, #1
   11f94:	bne	11a28 <dcngettext@plt+0xa38>
   11f98:	b	11ac0 <dcngettext@plt+0xad0>
   11f9c:	andeq	sl, r1, ip, asr #16
   11fa0:	andeq	sl, r1, r4, ror #26
   11fa4:			; <UNDEFINED> instruction: 0x0001acbc
   11fa8:	andeq	r2, r1, r0, lsl sl
   11fac:	andeq	ip, r2, ip, ror #2
   11fb0:			; <UNDEFINED> instruction: 0x0001a5b8
   11fb4:	andeq	sl, r1, ip, lsr #27
   11fb8:	andeq	ip, r2, r4, ror r1
   11fbc:	andeq	r0, r0, r1, lsl #2
   11fc0:	andeq	r0, r0, r3, lsl #2
   11fc4:	andeq	sl, r1, ip, ror sp
   11fc8:	andeq	sl, r1, ip, lsl #27
   11fcc:	andeq	ip, r2, r4, lsl #2
   11fd0:	muleq	r1, ip, sp
   11fd4:	andeq	sl, r1, ip, lsr #13
   11fd8:			; <UNDEFINED> instruction: 0x0001acb8
   11fdc:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   11fe0:			; <UNDEFINED> instruction: 0x0001adb4
   11fe4:	ldrdeq	sl, [r1], -r8
   11fe8:	andeq	sl, r1, r4, lsl lr
   11fec:	andeq	sl, r1, r0, asr lr
   11ff0:	muleq	r1, ip, lr
   11ff4:	andeq	sl, r1, r4, ror #29
   11ff8:	andeq	sl, r1, r4, lsr #30
   11ffc:	andeq	sl, r1, r4, ror #30
   12000:	andeq	ip, r2, r8, asr r1
   12004:	andeq	sl, r1, r4, lsr #13
   12008:	andeq	sl, r1, r4, ror #31
   1200c:	andeq	ip, r2, r8, ror #2
   12010:	andeq	sl, r1, r8, lsr #14
   12014:	andeq	fp, r1, r0, lsl r0
   12018:	andeq	fp, r1, r0, ror #5
   1201c:	andeq	r4, pc, r0, asr #4
   12020:	ldrdeq	fp, [r1], -r8
   12024:	andeq	fp, r1, r8, lsr #1
   12028:	andeq	fp, r1, r4, lsr r1
   1202c:	andeq	fp, r1, r4, lsl #2
   12030:	muleq	r1, r0, r1
   12034:	andeq	fp, r1, r0, ror #2
   12038:	andeq	sl, r1, r8, lsr #13
   1203c:	andeq	fp, r1, r8, rrx
   12040:	andeq	fp, r1, r8, ror #3
   12044:	andeq	fp, r1, r0, asr #32
   12048:	andeq	fp, r1, r4, asr r0
   1204c:	andeq	sl, r1, r0, lsl #11
   12050:	andeq	fp, r1, ip, asr r0
   12054:	andeq	fp, r1, r8, ror r0
   12058:	strdeq	sl, [r1], -r4
   1205c:	andeq	fp, r1, r4, rrx
   12060:	ldrdeq	fp, [r1], -ip
   12064:	andeq	fp, r1, r0, ror #3
   12068:	andeq	ip, r2, ip, ror #2
   1206c:	andeq	fp, r1, r0, asr #3
   12070:	andeq	sl, r1, r4, lsr #31
   12074:	mov	r1, #92	; 0x5c
   12078:	mov	r0, r5
   1207c:	bl	10ee8 <strchr@plt>
   12080:	cmp	r0, #0
   12084:	beq	12108 <dcngettext@plt+0x1118>
   12088:	ldr	r3, [pc, #-40]	; 12068 <dcngettext@plt+0x1078>
   1208c:	ldr	r0, [r3]
   12090:	ldr	r3, [r0, #20]
   12094:	ldr	r2, [r0, #24]
   12098:	cmp	r3, r2
   1209c:	addcc	r1, r3, #1
   120a0:	movcc	r2, #92	; 0x5c
   120a4:	strcc	r1, [r0, #20]
   120a8:	strbcc	r2, [r3]
   120ac:	bcc	11a10 <dcngettext@plt+0xa20>
   120b0:	mov	r1, #92	; 0x5c
   120b4:	bl	10f6c <__overflow@plt>
   120b8:	b	11a10 <dcngettext@plt+0xa20>
   120bc:	strb	r1, [ip]
   120c0:	add	r0, r0, #1
   120c4:	add	ip, ip, #1
   120c8:	b	11b7c <dcngettext@plt+0xb8c>
   120cc:	ldr	r1, [sp, #44]	; 0x2c
   120d0:	ldr	r0, [sp, #52]	; 0x34
   120d4:	bl	12388 <dcngettext@plt+0x1398>
   120d8:	b	11da0 <dcngettext@plt+0xdb0>
   120dc:	ldr	r1, [sp, #100]	; 0x64
   120e0:	bl	10f6c <__overflow@plt>
   120e4:	b	11ab4 <dcngettext@plt+0xac4>
   120e8:	mov	r1, #32
   120ec:	bl	10f6c <__overflow@plt>
   120f0:	b	11a8c <dcngettext@plt+0xa9c>
   120f4:	mov	r1, #13
   120f8:	strb	r1, [ip]
   120fc:	b	120c0 <dcngettext@plt+0x10d0>
   12100:	strb	r3, [ip]
   12104:	b	120c0 <dcngettext@plt+0x10d0>
   12108:	mov	r1, r9
   1210c:	mov	r0, r5
   12110:	bl	10ee8 <strchr@plt>
   12114:	cmp	r0, #0
   12118:	bne	12088 <dcngettext@plt+0x1098>
   1211c:	mov	r1, #13
   12120:	mov	r0, r5
   12124:	bl	10ee8 <strchr@plt>
   12128:	cmp	r0, #0
   1212c:	bne	12088 <dcngettext@plt+0x1098>
   12130:	b	11a0c <dcngettext@plt+0xa1c>
   12134:	mov	r2, #5
   12138:	ldr	r1, [pc, #-212]	; 1206c <dcngettext@plt+0x107c>
   1213c:	mov	r0, r5
   12140:	bl	10e04 <dcgettext@plt>
   12144:	ldr	r2, [sp, #64]	; 0x40
   12148:	mov	r1, #3
   1214c:	mov	r6, r0
   12150:	mov	r0, r5
   12154:	bl	1790c <dcngettext@plt+0x691c>
   12158:	mov	r2, r6
   1215c:	mov	r1, r5
   12160:	mov	r3, r0
   12164:	mov	r0, r5
   12168:	bl	10e70 <error@plt>
   1216c:	b	11944 <dcngettext@plt+0x954>
   12170:	ldr	r6, [sp, #52]	; 0x34
   12174:	mov	r3, #0
   12178:	sub	r4, r1, #1
   1217c:	mov	ip, #10
   12180:	cmp	r1, r3
   12184:	bls	1221c <dcngettext@plt+0x122c>
   12188:	ldrb	r2, [r6, r3]
   1218c:	cmp	r2, #0
   12190:	beq	116b4 <dcngettext@plt+0x6c4>
   12194:	cmp	r2, #92	; 0x5c
   12198:	bne	121c4 <dcngettext@plt+0x11d4>
   1219c:	cmp	r3, r4
   121a0:	beq	116b4 <dcngettext@plt+0x6c4>
   121a4:	add	r3, r3, #1
   121a8:	ldrb	r2, [r6, r3]
   121ac:	cmp	r2, #110	; 0x6e
   121b0:	beq	12208 <dcngettext@plt+0x1218>
   121b4:	cmp	r2, #114	; 0x72
   121b8:	beq	121fc <dcngettext@plt+0x120c>
   121bc:	cmp	r2, #92	; 0x5c
   121c0:	bne	116b4 <dcngettext@plt+0x6c4>
   121c4:	strb	r2, [lr]
   121c8:	add	r3, r3, #1
   121cc:	add	lr, lr, #1
   121d0:	b	12180 <dcngettext@plt+0x1190>
   121d4:	mov	r1, #92	; 0x5c
   121d8:	bl	10f6c <__overflow@plt>
   121dc:	b	11d8c <dcngettext@plt+0xd9c>
   121e0:	add	r4, r7, r4
   121e4:	cmp	ip, r4
   121e8:	ldrcs	r1, [sp, #52]	; 0x34
   121ec:	movcc	r2, #0
   121f0:	strbcc	r2, [ip]
   121f4:	ldrcc	r1, [sp, #52]	; 0x34
   121f8:	b	11bc4 <dcngettext@plt+0xbd4>
   121fc:	mov	r2, #13
   12200:	strb	r2, [lr]
   12204:	b	121c8 <dcngettext@plt+0x11d8>
   12208:	strb	ip, [lr]
   1220c:	b	121c8 <dcngettext@plt+0x11d8>
   12210:	ldr	r3, [sp, #68]	; 0x44
   12214:	str	r3, [sp, #88]	; 0x58
   12218:	b	11d64 <dcngettext@plt+0xd74>
   1221c:	cmp	r0, lr
   12220:	movhi	r3, #0
   12224:	strbhi	r3, [lr]
   12228:	ldr	r3, [sp, #52]	; 0x34
   1222c:	cmp	r3, #0
   12230:	bne	1157c <dcngettext@plt+0x58c>
   12234:	b	116b4 <dcngettext@plt+0x6c4>
   12238:	ldr	r1, [pc, #-464]	; 12070 <dcngettext@plt+0x1080>
   1223c:	mov	r2, #5
   12240:	mov	r0, #0
   12244:	bl	10e04 <dcgettext@plt>
   12248:	mov	r1, #0
   1224c:	mov	r2, r0
   12250:	mov	r0, r1
   12254:	bl	10e70 <error@plt>
   12258:	mov	r0, #1
   1225c:	bl	12610 <dcngettext@plt+0x1620>
   12260:	mov	fp, #0
   12264:	mov	lr, #0
   12268:	pop	{r1}		; (ldr r1, [sp], #4)
   1226c:	mov	r2, sp
   12270:	push	{r2}		; (str r2, [sp, #-4]!)
   12274:	push	{r0}		; (str r0, [sp, #-4]!)
   12278:	ldr	ip, [pc, #16]	; 12290 <dcngettext@plt+0x12a0>
   1227c:	push	{ip}		; (str ip, [sp, #-4]!)
   12280:	ldr	r0, [pc, #12]	; 12294 <dcngettext@plt+0x12a4>
   12284:	ldr	r3, [pc, #12]	; 12298 <dcngettext@plt+0x12a8>
   12288:	bl	10e88 <__libc_start_main@plt>
   1228c:	bl	10fd8 <abort@plt>
   12290:	andeq	sl, r1, r8, asr r5
   12294:	strdeq	r0, [r1], -ip
   12298:	strdeq	sl, [r1], -r8
   1229c:	ldr	r3, [pc, #20]	; 122b8 <dcngettext@plt+0x12c8>
   122a0:	ldr	r2, [pc, #20]	; 122bc <dcngettext@plt+0x12cc>
   122a4:	add	r3, pc, r3
   122a8:	ldr	r2, [r3, r2]
   122ac:	cmp	r2, #0
   122b0:	bxeq	lr
   122b4:	b	10eac <__gmon_start__@plt>
   122b8:	andeq	r9, r1, r4, asr sp
   122bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   122c0:	ldr	r3, [pc, #28]	; 122e4 <dcngettext@plt+0x12f4>
   122c4:	ldr	r0, [pc, #28]	; 122e8 <dcngettext@plt+0x12f8>
   122c8:	sub	r3, r3, r0
   122cc:	cmp	r3, #6
   122d0:	bxls	lr
   122d4:	ldr	r3, [pc, #16]	; 122ec <dcngettext@plt+0x12fc>
   122d8:	cmp	r3, #0
   122dc:	bxeq	lr
   122e0:	bx	r3
   122e4:	andeq	ip, r2, pc, asr #2
   122e8:	andeq	ip, r2, ip, asr #2
   122ec:	andeq	r0, r0, r0
   122f0:	ldr	r1, [pc, #36]	; 1231c <dcngettext@plt+0x132c>
   122f4:	ldr	r0, [pc, #36]	; 12320 <dcngettext@plt+0x1330>
   122f8:	sub	r1, r1, r0
   122fc:	asr	r1, r1, #2
   12300:	add	r1, r1, r1, lsr #31
   12304:	asrs	r1, r1, #1
   12308:	bxeq	lr
   1230c:	ldr	r3, [pc, #16]	; 12324 <dcngettext@plt+0x1334>
   12310:	cmp	r3, #0
   12314:	bxeq	lr
   12318:	bx	r3
   1231c:	andeq	ip, r2, ip, asr #2
   12320:	andeq	ip, r2, ip, asr #2
   12324:	andeq	r0, r0, r0
   12328:	push	{r4, lr}
   1232c:	ldr	r4, [pc, #24]	; 1234c <dcngettext@plt+0x135c>
   12330:	ldrb	r3, [r4]
   12334:	cmp	r3, #0
   12338:	popne	{r4, pc}
   1233c:	bl	122c0 <dcngettext@plt+0x12d0>
   12340:	mov	r3, #1
   12344:	strb	r3, [r4]
   12348:	pop	{r4, pc}
   1234c:	andeq	ip, r2, r0, ror r1
   12350:	ldr	r0, [pc, #40]	; 12380 <dcngettext@plt+0x1390>
   12354:	ldr	r3, [r0]
   12358:	cmp	r3, #0
   1235c:	bne	12364 <dcngettext@plt+0x1374>
   12360:	b	122f0 <dcngettext@plt+0x1300>
   12364:	ldr	r3, [pc, #24]	; 12384 <dcngettext@plt+0x1394>
   12368:	cmp	r3, #0
   1236c:	beq	12360 <dcngettext@plt+0x1370>
   12370:	push	{r4, lr}
   12374:	blx	r3
   12378:	pop	{r4, lr}
   1237c:	b	122f0 <dcngettext@plt+0x1300>
   12380:	andeq	fp, r2, r4, lsl pc
   12384:	andeq	r0, r0, r0
   12388:	cmp	r1, #0
   1238c:	beq	12458 <dcngettext@plt+0x1468>
   12390:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12394:	mov	r4, r0
   12398:	ldrb	r1, [r0]
   1239c:	cmp	r1, #0
   123a0:	beq	1246c <dcngettext@plt+0x147c>
   123a4:	ldr	r5, [pc, #196]	; 12470 <dcngettext@plt+0x1480>
   123a8:	ldr	sl, [pc, #196]	; 12474 <dcngettext@plt+0x1484>
   123ac:	ldr	r9, [pc, #196]	; 12478 <dcngettext@plt+0x1488>
   123b0:	ldr	r8, [pc, #196]	; 1247c <dcngettext@plt+0x148c>
   123b4:	mov	r7, #2
   123b8:	mov	r6, #1
   123bc:	b	123fc <dcngettext@plt+0x140c>
   123c0:	cmp	r1, #92	; 0x5c
   123c4:	beq	12440 <dcngettext@plt+0x1450>
   123c8:	cmp	r1, #10
   123cc:	beq	12428 <dcngettext@plt+0x1438>
   123d0:	ldr	r0, [r5]
   123d4:	ldr	r3, [r0, #20]
   123d8:	ldr	r2, [r0, #24]
   123dc:	add	ip, r3, #1
   123e0:	cmp	r3, r2
   123e4:	strcc	ip, [r0, #20]
   123e8:	strbcc	r1, [r3]
   123ec:	bcs	12464 <dcngettext@plt+0x1474>
   123f0:	ldrb	r1, [r4, #1]!
   123f4:	cmp	r1, #0
   123f8:	beq	12424 <dcngettext@plt+0x1434>
   123fc:	cmp	r1, #13
   12400:	bne	123c0 <dcngettext@plt+0x13d0>
   12404:	mov	r1, r6
   12408:	ldr	r3, [r5]
   1240c:	mov	r2, r7
   12410:	mov	r0, sl
   12414:	bl	10de0 <fwrite_unlocked@plt>
   12418:	ldrb	r1, [r4, #1]!
   1241c:	cmp	r1, #0
   12420:	bne	123fc <dcngettext@plt+0x140c>
   12424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12428:	ldr	r3, [r5]
   1242c:	mov	r2, r7
   12430:	mov	r1, r6
   12434:	mov	r0, r8
   12438:	bl	10de0 <fwrite_unlocked@plt>
   1243c:	b	123f0 <dcngettext@plt+0x1400>
   12440:	ldr	r3, [r5]
   12444:	mov	r2, r7
   12448:	mov	r1, r6
   1244c:	mov	r0, r9
   12450:	bl	10de0 <fwrite_unlocked@plt>
   12454:	b	123f0 <dcngettext@plt+0x1400>
   12458:	ldr	r3, [pc, #16]	; 12470 <dcngettext@plt+0x1480>
   1245c:	ldr	r1, [r3]
   12460:	b	10d68 <fputs_unlocked@plt>
   12464:	bl	10f6c <__overflow@plt>
   12468:	b	123f0 <dcngettext@plt+0x1400>
   1246c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12470:	andeq	ip, r2, ip, ror #2
   12474:	muleq	r1, ip, r6
   12478:	andeq	sl, r1, r0, lsr #13
   1247c:	muleq	r1, r8, r6
   12480:	push	{r4, r5, r6, r7, r8, lr}
   12484:	mov	r4, r1
   12488:	ldr	r1, [pc, #364]	; 125fc <dcngettext@plt+0x160c>
   1248c:	mov	r5, r2
   12490:	mov	r6, r0
   12494:	bl	10d8c <strcmp@plt>
   12498:	mov	r3, #0
   1249c:	strb	r3, [r5]
   124a0:	cmp	r0, r3
   124a4:	bne	12550 <dcngettext@plt+0x1560>
   124a8:	ldr	r1, [pc, #336]	; 12600 <dcngettext@plt+0x1610>
   124ac:	ldr	r3, [pc, #336]	; 12604 <dcngettext@plt+0x1614>
   124b0:	mov	r2, #1
   124b4:	ldr	r5, [r1]
   124b8:	mov	r1, #2
   124bc:	mov	r0, r5
   124c0:	strb	r2, [r3]
   124c4:	bl	14670 <dcngettext@plt+0x3680>
   124c8:	mov	r1, r4
   124cc:	mov	r0, r5
   124d0:	bl	12af4 <dcngettext@plt+0x1b04>
   124d4:	subs	r4, r0, #0
   124d8:	beq	124e4 <dcngettext@plt+0x14f4>
   124dc:	bl	10ef4 <__errno_location@plt>
   124e0:	ldr	r4, [r0]
   124e4:	mov	r0, r5
   124e8:	bl	10f9c <clearerr_unlocked@plt>
   124ec:	cmp	r4, #0
   124f0:	bne	12520 <dcngettext@plt+0x1530>
   124f4:	mov	r4, #1
   124f8:	mov	r0, r4
   124fc:	pop	{r4, r5, r6, r7, r8, pc}
   12500:	bl	10ef4 <__errno_location@plt>
   12504:	ldr	r4, [r0]
   12508:	mov	r0, r7
   1250c:	bl	146a4 <dcngettext@plt+0x36b4>
   12510:	cmp	r0, #0
   12514:	beq	124ec <dcngettext@plt+0x14fc>
   12518:	cmp	r4, #0
   1251c:	beq	12590 <dcngettext@plt+0x15a0>
   12520:	mov	r2, r6
   12524:	mov	r1, #3
   12528:	mov	r0, #0
   1252c:	bl	1790c <dcngettext@plt+0x691c>
   12530:	mov	r1, r4
   12534:	ldr	r2, [pc, #204]	; 12608 <dcngettext@plt+0x1618>
   12538:	mov	r4, #0
   1253c:	mov	r3, r0
   12540:	mov	r0, #0
   12544:	bl	10e70 <error@plt>
   12548:	mov	r0, r4
   1254c:	pop	{r4, r5, r6, r7, r8, pc}
   12550:	ldr	r1, [pc, #180]	; 1260c <dcngettext@plt+0x161c>
   12554:	mov	r0, r6
   12558:	bl	147a4 <dcngettext@plt+0x37b4>
   1255c:	subs	r7, r0, #0
   12560:	beq	1259c <dcngettext@plt+0x15ac>
   12564:	mov	r1, #2
   12568:	bl	14670 <dcngettext@plt+0x3680>
   1256c:	mov	r1, r4
   12570:	mov	r0, r7
   12574:	bl	12af4 <dcngettext@plt+0x1b04>
   12578:	cmp	r0, #0
   1257c:	bne	12500 <dcngettext@plt+0x1510>
   12580:	mov	r0, r7
   12584:	bl	146a4 <dcngettext@plt+0x36b4>
   12588:	cmp	r0, #0
   1258c:	beq	124f4 <dcngettext@plt+0x1504>
   12590:	bl	10ef4 <__errno_location@plt>
   12594:	ldr	r4, [r0]
   12598:	b	124ec <dcngettext@plt+0x14fc>
   1259c:	ldr	r3, [pc, #96]	; 12604 <dcngettext@plt+0x1614>
   125a0:	ldrb	r4, [r3, #1]
   125a4:	cmp	r4, #0
   125a8:	beq	125f0 <dcngettext@plt+0x1600>
   125ac:	bl	10ef4 <__errno_location@plt>
   125b0:	ldr	r7, [r0]
   125b4:	cmp	r7, #2
   125b8:	moveq	r3, #1
   125bc:	strbeq	r3, [r5]
   125c0:	beq	124f8 <dcngettext@plt+0x1508>
   125c4:	mov	r2, r6
   125c8:	mov	r1, #3
   125cc:	mov	r0, #0
   125d0:	bl	1790c <dcngettext@plt+0x691c>
   125d4:	mov	r1, r7
   125d8:	ldr	r2, [pc, #40]	; 12608 <dcngettext@plt+0x1618>
   125dc:	mov	r4, #0
   125e0:	mov	r3, r0
   125e4:	mov	r0, #0
   125e8:	bl	10e70 <error@plt>
   125ec:	b	124f8 <dcngettext@plt+0x1508>
   125f0:	bl	10ef4 <__errno_location@plt>
   125f4:	ldr	r7, [r0]
   125f8:	b	125c4 <dcngettext@plt+0x15d4>
   125fc:	andeq	sl, r1, r4, lsr #13
   12600:	andeq	ip, r2, r8, ror #2
   12604:	andeq	ip, r2, r4, ror r1
   12608:	andeq	fp, r1, r0, ror #5
   1260c:	andeq	sl, r1, r8, lsr #13
   12610:	subs	r5, r0, #0
   12614:	push	{r7, lr}
   12618:	sub	sp, sp, #56	; 0x38
   1261c:	beq	12658 <dcngettext@plt+0x1668>
   12620:	ldr	r3, [pc, #848]	; 12978 <dcngettext@plt+0x1988>
   12624:	mov	r2, #5
   12628:	ldr	r1, [pc, #844]	; 1297c <dcngettext@plt+0x198c>
   1262c:	mov	r0, #0
   12630:	ldr	r4, [r3]
   12634:	bl	10e04 <dcgettext@plt>
   12638:	ldr	r3, [pc, #832]	; 12980 <dcngettext@plt+0x1990>
   1263c:	mov	r1, #1
   12640:	ldr	r3, [r3]
   12644:	mov	r2, r0
   12648:	mov	r0, r4
   1264c:	bl	10f3c <__fprintf_chk@plt>
   12650:	mov	r0, r5
   12654:	bl	10ed0 <exit@plt>
   12658:	mov	r2, #5
   1265c:	ldr	r1, [pc, #800]	; 12984 <dcngettext@plt+0x1994>
   12660:	bl	10e04 <dcgettext@plt>
   12664:	ldr	r3, [pc, #788]	; 12980 <dcngettext@plt+0x1990>
   12668:	ldr	r7, [pc, #792]	; 12988 <dcngettext@plt+0x1998>
   1266c:	ldr	r4, [pc, #792]	; 1298c <dcngettext@plt+0x199c>
   12670:	ldr	r2, [r3]
   12674:	mov	r1, r0
   12678:	mov	r0, #1
   1267c:	bl	10f24 <__printf_chk@plt>
   12680:	mov	r2, #5
   12684:	ldr	r1, [pc, #772]	; 12990 <dcngettext@plt+0x19a0>
   12688:	mov	r0, r5
   1268c:	bl	10e04 <dcgettext@plt>
   12690:	mov	r3, #160	; 0xa0
   12694:	ldr	r2, [pc, #760]	; 12994 <dcngettext@plt+0x19a4>
   12698:	mov	r1, r0
   1269c:	mov	r0, #1
   126a0:	bl	10f24 <__printf_chk@plt>
   126a4:	mov	r2, #5
   126a8:	ldr	r1, [pc, #744]	; 12998 <dcngettext@plt+0x19a8>
   126ac:	mov	r0, r5
   126b0:	bl	10e04 <dcgettext@plt>
   126b4:	ldr	r1, [r7]
   126b8:	bl	10d68 <fputs_unlocked@plt>
   126bc:	mov	r2, #5
   126c0:	ldr	r1, [pc, #724]	; 1299c <dcngettext@plt+0x19ac>
   126c4:	mov	r0, r5
   126c8:	bl	10e04 <dcgettext@plt>
   126cc:	ldr	r1, [r7]
   126d0:	bl	10d68 <fputs_unlocked@plt>
   126d4:	mov	r2, #5
   126d8:	ldr	r1, [pc, #704]	; 129a0 <dcngettext@plt+0x19b0>
   126dc:	mov	r0, r5
   126e0:	bl	10e04 <dcgettext@plt>
   126e4:	ldr	r1, [r7]
   126e8:	bl	10d68 <fputs_unlocked@plt>
   126ec:	mov	r2, #5
   126f0:	ldr	r1, [pc, #684]	; 129a4 <dcngettext@plt+0x19b4>
   126f4:	mov	r0, r5
   126f8:	bl	10e04 <dcgettext@plt>
   126fc:	ldr	r1, [r7]
   12700:	bl	10d68 <fputs_unlocked@plt>
   12704:	mov	r2, #5
   12708:	ldr	r1, [pc, #664]	; 129a8 <dcngettext@plt+0x19b8>
   1270c:	mov	r0, r5
   12710:	bl	10e04 <dcgettext@plt>
   12714:	ldr	r1, [r7]
   12718:	bl	10d68 <fputs_unlocked@plt>
   1271c:	mov	r2, #5
   12720:	ldr	r1, [pc, #644]	; 129ac <dcngettext@plt+0x19bc>
   12724:	mov	r0, r5
   12728:	bl	10e04 <dcgettext@plt>
   1272c:	ldr	r1, [r7]
   12730:	bl	10d68 <fputs_unlocked@plt>
   12734:	mov	r2, #5
   12738:	ldr	r1, [pc, #624]	; 129b0 <dcngettext@plt+0x19c0>
   1273c:	mov	r0, r5
   12740:	bl	10e04 <dcgettext@plt>
   12744:	ldr	r1, [r7]
   12748:	bl	10d68 <fputs_unlocked@plt>
   1274c:	mov	r2, #5
   12750:	ldr	r1, [pc, #604]	; 129b4 <dcngettext@plt+0x19c4>
   12754:	mov	r0, r5
   12758:	bl	10e04 <dcgettext@plt>
   1275c:	ldr	r1, [r7]
   12760:	bl	10d68 <fputs_unlocked@plt>
   12764:	mov	r2, #5
   12768:	ldr	r1, [pc, #584]	; 129b8 <dcngettext@plt+0x19c8>
   1276c:	mov	r0, r5
   12770:	bl	10e04 <dcgettext@plt>
   12774:	ldr	r1, [r7]
   12778:	bl	10d68 <fputs_unlocked@plt>
   1277c:	mov	r2, #5
   12780:	ldr	r1, [pc, #564]	; 129bc <dcngettext@plt+0x19cc>
   12784:	mov	r0, r5
   12788:	bl	10e04 <dcgettext@plt>
   1278c:	ldr	r2, [pc, #556]	; 129c0 <dcngettext@plt+0x19d0>
   12790:	mov	r1, r0
   12794:	mov	r0, #1
   12798:	bl	10f24 <__printf_chk@plt>
   1279c:	mov	r2, #5
   127a0:	ldr	r1, [pc, #540]	; 129c4 <dcngettext@plt+0x19d4>
   127a4:	mov	r0, r5
   127a8:	bl	10e04 <dcgettext@plt>
   127ac:	ldr	r1, [r7]
   127b0:	bl	10d68 <fputs_unlocked@plt>
   127b4:	ldm	r4!, {r0, r1, r2, r3}
   127b8:	mov	lr, sp
   127bc:	stmia	lr!, {r0, r1, r2, r3}
   127c0:	ldm	r4!, {r0, r1, r2, r3}
   127c4:	ldr	ip, [sp]
   127c8:	stmia	lr!, {r0, r1, r2, r3}
   127cc:	cmp	ip, #0
   127d0:	ldm	r4!, {r0, r1, r2, r3}
   127d4:	stmia	lr!, {r0, r1, r2, r3}
   127d8:	ldm	r4, {r0, r1}
   127dc:	moveq	r4, sp
   127e0:	stm	lr, {r0, r1}
   127e4:	beq	12814 <dcngettext@plt+0x1824>
   127e8:	ldr	r6, [pc, #472]	; 129c8 <dcngettext@plt+0x19d8>
   127ec:	mov	r4, sp
   127f0:	b	12800 <dcngettext@plt+0x1810>
   127f4:	ldr	ip, [r4, #8]!
   127f8:	cmp	ip, #0
   127fc:	beq	12814 <dcngettext@plt+0x1824>
   12800:	mov	r1, ip
   12804:	mov	r0, r6
   12808:	bl	10d8c <strcmp@plt>
   1280c:	cmp	r0, #0
   12810:	bne	127f4 <dcngettext@plt+0x1804>
   12814:	ldr	r4, [r4, #4]
   12818:	mov	r2, #5
   1281c:	cmp	r4, #0
   12820:	ldr	r1, [pc, #420]	; 129cc <dcngettext@plt+0x19dc>
   12824:	beq	128cc <dcngettext@plt+0x18dc>
   12828:	mov	r0, #0
   1282c:	bl	10e04 <dcgettext@plt>
   12830:	ldr	r3, [pc, #408]	; 129d0 <dcngettext@plt+0x19e0>
   12834:	ldr	r2, [pc, #408]	; 129d4 <dcngettext@plt+0x19e4>
   12838:	mov	r1, r0
   1283c:	mov	r0, #1
   12840:	bl	10f24 <__printf_chk@plt>
   12844:	mov	r1, #0
   12848:	mov	r0, #5
   1284c:	bl	10f78 <setlocale@plt>
   12850:	cmp	r0, #0
   12854:	ldreq	r6, [pc, #364]	; 129c8 <dcngettext@plt+0x19d8>
   12858:	beq	12874 <dcngettext@plt+0x1884>
   1285c:	mov	r2, #3
   12860:	ldr	r1, [pc, #368]	; 129d8 <dcngettext@plt+0x19e8>
   12864:	bl	10fcc <strncmp@plt>
   12868:	ldr	r6, [pc, #344]	; 129c8 <dcngettext@plt+0x19d8>
   1286c:	cmp	r0, #0
   12870:	bne	1295c <dcngettext@plt+0x196c>
   12874:	mov	r2, #5
   12878:	ldr	r1, [pc, #348]	; 129dc <dcngettext@plt+0x19ec>
   1287c:	mov	r0, #0
   12880:	bl	10e04 <dcgettext@plt>
   12884:	ldr	r3, [pc, #316]	; 129c8 <dcngettext@plt+0x19d8>
   12888:	ldr	r2, [pc, #320]	; 129d0 <dcngettext@plt+0x19e0>
   1288c:	mov	r1, r0
   12890:	mov	r0, #1
   12894:	bl	10f24 <__printf_chk@plt>
   12898:	mov	r2, #5
   1289c:	ldr	r1, [pc, #316]	; 129e0 <dcngettext@plt+0x19f0>
   128a0:	mov	r0, #0
   128a4:	bl	10e04 <dcgettext@plt>
   128a8:	ldr	r2, [pc, #308]	; 129e4 <dcngettext@plt+0x19f4>
   128ac:	cmp	r4, r6
   128b0:	ldr	r3, [pc, #304]	; 129e8 <dcngettext@plt+0x19f8>
   128b4:	movne	r3, r2
   128b8:	mov	r1, r0
   128bc:	mov	r2, r4
   128c0:	mov	r0, #1
   128c4:	bl	10f24 <__printf_chk@plt>
   128c8:	b	12650 <dcngettext@plt+0x1660>
   128cc:	mov	r0, r4
   128d0:	bl	10e04 <dcgettext@plt>
   128d4:	ldr	r3, [pc, #244]	; 129d0 <dcngettext@plt+0x19e0>
   128d8:	ldr	r2, [pc, #244]	; 129d4 <dcngettext@plt+0x19e4>
   128dc:	mov	r1, r0
   128e0:	mov	r0, #1
   128e4:	bl	10f24 <__printf_chk@plt>
   128e8:	mov	r1, r4
   128ec:	mov	r0, #5
   128f0:	bl	10f78 <setlocale@plt>
   128f4:	cmp	r0, #0
   128f8:	beq	12910 <dcngettext@plt+0x1920>
   128fc:	mov	r2, #3
   12900:	ldr	r1, [pc, #208]	; 129d8 <dcngettext@plt+0x19e8>
   12904:	bl	10fcc <strncmp@plt>
   12908:	cmp	r0, #0
   1290c:	bne	12954 <dcngettext@plt+0x1964>
   12910:	mov	r2, #5
   12914:	ldr	r1, [pc, #192]	; 129dc <dcngettext@plt+0x19ec>
   12918:	mov	r0, #0
   1291c:	bl	10e04 <dcgettext@plt>
   12920:	ldr	r3, [pc, #160]	; 129c8 <dcngettext@plt+0x19d8>
   12924:	ldr	r2, [pc, #164]	; 129d0 <dcngettext@plt+0x19e0>
   12928:	mov	r4, r3
   1292c:	mov	r1, r0
   12930:	mov	r0, #1
   12934:	bl	10f24 <__printf_chk@plt>
   12938:	ldr	r1, [pc, #160]	; 129e0 <dcngettext@plt+0x19f0>
   1293c:	mov	r2, #5
   12940:	mov	r0, #0
   12944:	bl	10e04 <dcgettext@plt>
   12948:	ldr	r3, [pc, #152]	; 129e8 <dcngettext@plt+0x19f8>
   1294c:	mov	r1, r0
   12950:	b	128bc <dcngettext@plt+0x18cc>
   12954:	ldr	r6, [pc, #108]	; 129c8 <dcngettext@plt+0x19d8>
   12958:	mov	r4, r6
   1295c:	mov	r2, #5
   12960:	ldr	r1, [pc, #132]	; 129ec <dcngettext@plt+0x19fc>
   12964:	mov	r0, #0
   12968:	bl	10e04 <dcgettext@plt>
   1296c:	ldr	r1, [r7]
   12970:	bl	10d68 <fputs_unlocked@plt>
   12974:	b	12874 <dcngettext@plt+0x1884>
   12978:	andeq	ip, r2, r0, ror #2
   1297c:			; <UNDEFINED> instruction: 0x0001a6b4
   12980:	andeq	ip, r2, ip, lsl #3
   12984:	ldrdeq	sl, [r1], -ip
   12988:	andeq	ip, r2, ip, ror #2
   1298c:	andeq	sl, r1, r0, lsl #11
   12990:	andeq	sl, r1, r0, lsl #14
   12994:	andeq	sl, r1, r8, lsr #14
   12998:	andeq	sl, r1, r0, lsr r7
   1299c:	andeq	sl, r1, r8, ror #14
   129a0:	muleq	r1, r8, r7
   129a4:	andeq	sl, r1, r0, ror #15
   129a8:	andeq	sl, r1, r8, lsl r8
   129ac:	andeq	sl, r1, r0, asr r8
   129b0:	ldrdeq	sl, [r1], -r0
   129b4:	andeq	sl, r1, r8, lsl #21
   129b8:			; <UNDEFINED> instruction: 0x0001aab8
   129bc:	strdeq	sl, [r1], -r0
   129c0:	andeq	sl, r1, ip, lsl fp
   129c4:	andeq	sl, r1, r8, lsr #22
   129c8:	andeq	sl, r1, ip, lsr #13
   129cc:	andeq	sl, r1, r8, ror ip
   129d0:	muleq	r1, r0, ip
   129d4:			; <UNDEFINED> instruction: 0x0001acb8
   129d8:	andeq	sl, r1, r8, asr #25
   129dc:	andeq	sl, r1, r4, lsl sp
   129e0:	andeq	sl, r1, r0, lsr sp
   129e4:	andeq	sl, r1, ip, asr #16
   129e8:	strdeq	fp, [r1], -r8
   129ec:	andeq	sl, r1, ip, asr #25
   129f0:	ldr	r3, [pc, #4]	; 129fc <dcngettext@plt+0x1a0c>
   129f4:	str	r0, [r3]
   129f8:	bx	lr
   129fc:	andeq	ip, r2, r4, lsl #3
   12a00:	ldr	r3, [pc, #4]	; 12a0c <dcngettext@plt+0x1a1c>
   12a04:	strb	r0, [r3, #4]
   12a08:	bx	lr
   12a0c:	andeq	ip, r2, r4, lsl #3
   12a10:	ldr	r3, [pc, #192]	; 12ad8 <dcngettext@plt+0x1ae8>
   12a14:	push	{r4, r5, r6, lr}
   12a18:	sub	sp, sp, #8
   12a1c:	ldr	r0, [r3]
   12a20:	bl	19b20 <dcngettext@plt+0x8b30>
   12a24:	cmp	r0, #0
   12a28:	beq	12a4c <dcngettext@plt+0x1a5c>
   12a2c:	ldr	r4, [pc, #168]	; 12adc <dcngettext@plt+0x1aec>
   12a30:	ldrb	r3, [r4, #4]
   12a34:	cmp	r3, #0
   12a38:	beq	12a68 <dcngettext@plt+0x1a78>
   12a3c:	bl	10ef4 <__errno_location@plt>
   12a40:	ldr	r3, [r0]
   12a44:	cmp	r3, #32
   12a48:	bne	12a68 <dcngettext@plt+0x1a78>
   12a4c:	ldr	r3, [pc, #140]	; 12ae0 <dcngettext@plt+0x1af0>
   12a50:	ldr	r0, [r3]
   12a54:	bl	19b20 <dcngettext@plt+0x8b30>
   12a58:	cmp	r0, #0
   12a5c:	bne	12ab0 <dcngettext@plt+0x1ac0>
   12a60:	add	sp, sp, #8
   12a64:	pop	{r4, r5, r6, pc}
   12a68:	mov	r2, #5
   12a6c:	ldr	r1, [pc, #112]	; 12ae4 <dcngettext@plt+0x1af4>
   12a70:	mov	r0, #0
   12a74:	bl	10e04 <dcgettext@plt>
   12a78:	ldr	r4, [r4]
   12a7c:	cmp	r4, #0
   12a80:	mov	r5, r0
   12a84:	beq	12abc <dcngettext@plt+0x1acc>
   12a88:	bl	10ef4 <__errno_location@plt>
   12a8c:	ldr	r6, [r0]
   12a90:	mov	r0, r4
   12a94:	bl	175a0 <dcngettext@plt+0x65b0>
   12a98:	mov	r1, r6
   12a9c:	str	r5, [sp]
   12aa0:	ldr	r2, [pc, #64]	; 12ae8 <dcngettext@plt+0x1af8>
   12aa4:	mov	r3, r0
   12aa8:	mov	r0, #0
   12aac:	bl	10e70 <error@plt>
   12ab0:	ldr	r3, [pc, #52]	; 12aec <dcngettext@plt+0x1afc>
   12ab4:	ldr	r0, [r3]
   12ab8:	bl	10dbc <_exit@plt>
   12abc:	bl	10ef4 <__errno_location@plt>
   12ac0:	mov	r3, r5
   12ac4:	ldr	r2, [pc, #36]	; 12af0 <dcngettext@plt+0x1b00>
   12ac8:	ldr	r1, [r0]
   12acc:	mov	r0, r4
   12ad0:	bl	10e70 <error@plt>
   12ad4:	b	12ab0 <dcngettext@plt+0x1ac0>
   12ad8:	andeq	ip, r2, ip, ror #2
   12adc:	andeq	ip, r2, r4, lsl #3
   12ae0:	andeq	ip, r2, r0, ror #2
   12ae4:	ldrdeq	fp, [r1], -r0
   12ae8:	ldrdeq	fp, [r1], -ip
   12aec:	andeq	ip, r2, r8, lsl #2
   12af0:	andeq	fp, r1, r0, ror #5
   12af4:	push	{r4, r5, r6, r7, r8, r9, lr}
   12af8:	mov	r5, r0
   12afc:	sub	sp, sp, #164	; 0xa4
   12b00:	ldr	r0, [pc, #200]	; 12bd0 <dcngettext@plt+0x1be0>
   12b04:	mov	r8, r1
   12b08:	bl	19a98 <dcngettext@plt+0x8aa8>
   12b0c:	subs	r6, r0, #0
   12b10:	moveq	r0, #1
   12b14:	beq	12b84 <dcngettext@plt+0x1b94>
   12b18:	mov	r0, sp
   12b1c:	bl	12bd4 <dcngettext@plt+0x1be4>
   12b20:	mov	r7, #1
   12b24:	mov	r9, #32768	; 0x8000
   12b28:	mov	r4, #0
   12b2c:	b	12b48 <dcngettext@plt+0x1b58>
   12b30:	bl	10fc0 <fread_unlocked@plt>
   12b34:	add	r4, r4, r0
   12b38:	cmp	r4, #32768	; 0x8000
   12b3c:	beq	12b8c <dcngettext@plt+0x1b9c>
   12b40:	cmp	r0, #0
   12b44:	beq	12ba0 <dcngettext@plt+0x1bb0>
   12b48:	ldr	ip, [r5]
   12b4c:	rsb	r2, r4, #32768	; 0x8000
   12b50:	tst	ip, #16
   12b54:	add	r0, r6, r4
   12b58:	mov	r3, r5
   12b5c:	mov	r1, r7
   12b60:	beq	12b30 <dcngettext@plt+0x1b40>
   12b64:	cmp	r4, #0
   12b68:	bne	12bbc <dcngettext@plt+0x1bcc>
   12b6c:	mov	r1, r8
   12b70:	mov	r0, sp
   12b74:	bl	142a4 <dcngettext@plt+0x32b4>
   12b78:	mov	r0, r6
   12b7c:	bl	1483c <dcngettext@plt+0x384c>
   12b80:	mov	r0, #0
   12b84:	add	sp, sp, #164	; 0xa4
   12b88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12b8c:	mov	r2, sp
   12b90:	mov	r1, r9
   12b94:	mov	r0, r6
   12b98:	bl	12c6c <dcngettext@plt+0x1c7c>
   12b9c:	b	12b28 <dcngettext@plt+0x1b38>
   12ba0:	ldr	r3, [r5]
   12ba4:	tst	r3, #32
   12ba8:	beq	12b64 <dcngettext@plt+0x1b74>
   12bac:	mov	r0, r6
   12bb0:	bl	1483c <dcngettext@plt+0x384c>
   12bb4:	mov	r0, #1
   12bb8:	b	12b84 <dcngettext@plt+0x1b94>
   12bbc:	mov	r1, r4
   12bc0:	mov	r2, sp
   12bc4:	mov	r0, r6
   12bc8:	bl	14388 <dcngettext@plt+0x3398>
   12bcc:	b	12b6c <dcngettext@plt+0x1b7c>
   12bd0:	andeq	r8, r0, r8, asr #32
   12bd4:	push	{r4, lr}
   12bd8:	mov	r3, #0
   12bdc:	ldr	r4, [pc, #44]	; 12c10 <dcngettext@plt+0x1c20>
   12be0:	ldr	lr, [pc, #44]	; 12c14 <dcngettext@plt+0x1c24>
   12be4:	ldr	ip, [pc, #44]	; 12c18 <dcngettext@plt+0x1c28>
   12be8:	ldr	r1, [pc, #44]	; 12c1c <dcngettext@plt+0x1c2c>
   12bec:	ldr	r2, [pc, #44]	; 12c20 <dcngettext@plt+0x1c30>
   12bf0:	stm	r0, {r4, lr}
   12bf4:	str	ip, [r0, #8]
   12bf8:	str	r1, [r0, #12]
   12bfc:	str	r2, [r0, #16]
   12c00:	str	r3, [r0, #24]
   12c04:	str	r3, [r0, #20]
   12c08:	str	r3, [r0, #28]
   12c0c:	pop	{r4, pc}
   12c10:	strbvs	r2, [r5, -r1, lsl #6]
   12c14:	svc	0x00cdab89
   12c18:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12c1c:	eorsne	r5, r2, r6, ror r4
   12c20:	bicsgt	lr, r2, #240, 2	; 0x3c
   12c24:	ldr	r2, [r0]
   12c28:	mov	r3, r0
   12c2c:	rev	r2, r2
   12c30:	str	r2, [r1]
   12c34:	ldr	r2, [r3, #4]
   12c38:	mov	r0, r1
   12c3c:	rev	r2, r2
   12c40:	str	r2, [r1, #4]
   12c44:	ldr	r2, [r3, #8]
   12c48:	rev	r2, r2
   12c4c:	str	r2, [r1, #8]
   12c50:	ldr	r2, [r3, #12]
   12c54:	rev	r2, r2
   12c58:	str	r2, [r1, #12]
   12c5c:	ldr	r3, [r3, #16]
   12c60:	rev	r3, r3
   12c64:	str	r3, [r1, #16]
   12c68:	bx	lr
   12c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c70:	sub	sp, sp, #100	; 0x64
   12c74:	ldr	r3, [r2, #20]
   12c78:	mov	lr, r2
   12c7c:	str	r2, [sp, #92]	; 0x5c
   12c80:	ldr	r2, [r2, #24]
   12c84:	add	r3, r1, r3
   12c88:	cmp	r1, r3
   12c8c:	addhi	r2, r2, #1
   12c90:	bic	ip, r1, #3
   12c94:	add	ip, r0, ip
   12c98:	mov	r1, lr
   12c9c:	str	r2, [lr, #24]
   12ca0:	mov	r2, lr
   12ca4:	cmp	r0, ip
   12ca8:	str	ip, [sp, #88]	; 0x58
   12cac:	str	r3, [lr, #20]
   12cb0:	ldr	r5, [r2, #8]
   12cb4:	ldr	ip, [r2, #12]
   12cb8:	ldr	lr, [lr]
   12cbc:	ldr	r1, [r1, #4]
   12cc0:	ldr	r2, [r2, #16]
   12cc4:	bcs	1429c <dcngettext@plt+0x32ac>
   12cc8:	str	r0, [sp, #44]	; 0x2c
   12ccc:	mov	r6, ip
   12cd0:	mov	r0, r1
   12cd4:	str	r2, [sp, #84]	; 0x54
   12cd8:	str	ip, [sp, #80]	; 0x50
   12cdc:	str	r5, [sp, #76]	; 0x4c
   12ce0:	str	r1, [sp, #72]	; 0x48
   12ce4:	str	lr, [sp, #68]	; 0x44
   12ce8:	ldr	fp, [sp, #44]	; 0x2c
   12cec:	ldr	r3, [pc, #4088]	; 13cec <dcngettext@plt+0x2cfc>
   12cf0:	eor	r4, r5, r6
   12cf4:	ldr	r9, [fp]
   12cf8:	ldr	r8, [fp, #4]
   12cfc:	rev	r9, r9
   12d00:	add	r3, r9, r3
   12d04:	and	r4, r4, r0
   12d08:	add	r3, r3, lr, ror #27
   12d0c:	ror	r0, r0, #2
   12d10:	eor	r4, r4, r6
   12d14:	eor	r1, r0, r5
   12d18:	rev	r8, r8
   12d1c:	add	r4, r4, r3
   12d20:	ldr	r3, [pc, #4036]	; 13cec <dcngettext@plt+0x2cfc>
   12d24:	add	r6, r8, r6
   12d28:	and	r1, r1, lr
   12d2c:	add	r4, r4, r2
   12d30:	ldr	sl, [fp, #8]
   12d34:	eor	r1, r1, r5
   12d38:	add	r3, r6, r3
   12d3c:	add	r3, r1, r3
   12d40:	add	r1, r3, r4, ror #27
   12d44:	ror	lr, lr, #2
   12d48:	rev	sl, sl
   12d4c:	ldr	r7, [fp, #12]
   12d50:	ldr	r3, [pc, #3988]	; 13cec <dcngettext@plt+0x2cfc>
   12d54:	add	r2, sl, r5
   12d58:	eor	ip, r0, lr
   12d5c:	and	ip, ip, r4
   12d60:	add	r3, r2, r3
   12d64:	rev	r2, r7
   12d68:	mov	r7, r2
   12d6c:	eor	ip, ip, r0
   12d70:	add	r3, ip, r3
   12d74:	add	ip, r7, #1509949440	; 0x5a000000
   12d78:	ror	r4, r4, #2
   12d7c:	add	ip, ip, #8519680	; 0x820000
   12d80:	eor	r2, lr, r4
   12d84:	add	ip, ip, #30976	; 0x7900
   12d88:	add	ip, ip, #153	; 0x99
   12d8c:	and	r2, r2, r1
   12d90:	ldr	r6, [fp, #16]
   12d94:	eor	r2, r2, lr
   12d98:	add	r0, ip, r0
   12d9c:	ror	r5, r1, #2
   12da0:	add	r0, r2, r0
   12da4:	ldr	r2, [pc, #3904]	; 13cec <dcngettext@plt+0x2cfc>
   12da8:	add	r3, r3, r1, ror #27
   12dac:	rev	r1, r6
   12db0:	eor	r6, r4, r5
   12db4:	and	ip, r6, r3
   12db8:	str	r1, [sp, #20]
   12dbc:	add	r2, r1, r2
   12dc0:	ldr	r1, [fp, #20]
   12dc4:	add	r2, r2, lr
   12dc8:	eor	lr, ip, r4
   12dcc:	add	r0, r0, r3, ror #27
   12dd0:	add	lr, lr, r2
   12dd4:	ror	r3, r3, #2
   12dd8:	rev	r2, r1
   12ddc:	ldr	ip, [pc, #3848]	; 13cec <dcngettext@plt+0x2cfc>
   12de0:	str	r7, [sp, #8]
   12de4:	mov	r7, r2
   12de8:	eor	r2, r5, r3
   12dec:	ldr	r6, [fp, #24]
   12df0:	add	ip, r7, ip
   12df4:	and	r2, r2, r0
   12df8:	add	ip, ip, r4
   12dfc:	eor	r2, r2, r5
   12e00:	ror	r1, r0, #2
   12e04:	add	lr, lr, r0, ror #27
   12e08:	add	r2, r2, ip
   12e0c:	rev	r0, r6
   12e10:	ldr	ip, [pc, #3796]	; 13cec <dcngettext@plt+0x2cfc>
   12e14:	str	r7, [sp, #12]
   12e18:	mov	r7, r0
   12e1c:	eor	r0, r3, r1
   12e20:	add	ip, r7, ip
   12e24:	and	r0, r0, lr
   12e28:	eor	r0, r0, r3
   12e2c:	add	r5, ip, r5
   12e30:	add	r5, r0, r5
   12e34:	ldr	r0, [fp, #32]
   12e38:	add	r2, r2, lr, ror #27
   12e3c:	ldr	r6, [fp, #28]
   12e40:	rev	r0, r0
   12e44:	ror	r4, lr, #2
   12e48:	str	r7, [sp, #40]	; 0x28
   12e4c:	ldr	ip, [pc, #3736]	; 13cec <dcngettext@plt+0x2cfc>
   12e50:	add	r7, r5, r2, ror #27
   12e54:	mov	r5, r0
   12e58:	rev	r6, r6
   12e5c:	eor	lr, r1, r4
   12e60:	add	r0, r5, #1509949440	; 0x5a000000
   12e64:	and	lr, lr, r2
   12e68:	add	ip, r6, ip
   12e6c:	add	r0, r0, #8519680	; 0x820000
   12e70:	ror	r2, r2, #2
   12e74:	add	ip, ip, r3
   12e78:	add	r0, r0, #30976	; 0x7900
   12e7c:	eor	r3, lr, r1
   12e80:	ldr	lr, [fp, #36]	; 0x24
   12e84:	add	r3, r3, ip
   12e88:	add	r0, r0, #153	; 0x99
   12e8c:	eor	ip, r4, r2
   12e90:	str	r5, [sp, #4]
   12e94:	add	r0, r0, r1
   12e98:	ror	r5, r7, #2
   12e9c:	rev	r1, lr
   12ea0:	and	ip, ip, r7
   12ea4:	add	r3, r3, r7, ror #27
   12ea8:	str	r6, [sp, #48]	; 0x30
   12eac:	ldr	r7, [fp, #40]	; 0x28
   12eb0:	mov	r6, r1
   12eb4:	eor	ip, ip, r4
   12eb8:	eor	r1, r2, r5
   12ebc:	add	ip, ip, r0
   12ec0:	and	r1, r1, r3
   12ec4:	ror	lr, r3, #2
   12ec8:	add	ip, ip, r3, ror #27
   12ecc:	ldr	r0, [pc, #3608]	; 13cec <dcngettext@plt+0x2cfc>
   12ed0:	eor	r3, r1, r2
   12ed4:	rev	r1, r7
   12ed8:	str	r1, [sp, #28]
   12edc:	add	r1, r1, #1509949440	; 0x5a000000
   12ee0:	add	r0, r6, r0
   12ee4:	add	r1, r1, #8519680	; 0x820000
   12ee8:	add	r4, r0, r4
   12eec:	add	r1, r1, #30976	; 0x7900
   12ef0:	eor	r0, r5, lr
   12ef4:	add	r3, r3, r4
   12ef8:	add	r1, r1, #153	; 0x99
   12efc:	ldr	r4, [fp, #44]	; 0x2c
   12f00:	and	r0, r0, ip
   12f04:	add	r2, r1, r2
   12f08:	eor	r0, r0, r5
   12f0c:	add	r0, r0, r2
   12f10:	rev	r2, r4
   12f14:	mov	r7, r2
   12f18:	str	r7, [sp, #24]
   12f1c:	add	r7, r7, #1509949440	; 0x5a000000
   12f20:	ldr	r2, [fp, #48]	; 0x30
   12f24:	add	r7, r7, #8519680	; 0x820000
   12f28:	add	r3, r3, ip, ror #27
   12f2c:	add	r7, r7, #30976	; 0x7900
   12f30:	ror	ip, ip, #2
   12f34:	eor	r4, lr, ip
   12f38:	rev	r2, r2
   12f3c:	add	r7, r7, #153	; 0x99
   12f40:	and	r4, r4, r3
   12f44:	add	r7, r7, r5
   12f48:	mov	r5, r2
   12f4c:	add	r1, r0, r3, ror #27
   12f50:	eor	r0, r4, lr
   12f54:	add	r4, r5, #1509949440	; 0x5a000000
   12f58:	add	r4, r4, #8519680	; 0x820000
   12f5c:	ror	r3, r3, #2
   12f60:	str	r6, [sp]
   12f64:	add	r4, r4, #30976	; 0x7900
   12f68:	ldr	r6, [fp, #52]	; 0x34
   12f6c:	eor	r2, ip, r3
   12f70:	add	r0, r0, r7
   12f74:	add	r4, r4, #153	; 0x99
   12f78:	add	r0, r0, r1, ror #27
   12f7c:	str	r5, [sp, #32]
   12f80:	and	r2, r2, r1
   12f84:	ror	r5, r1, #2
   12f88:	add	r1, r4, lr
   12f8c:	rev	lr, r6
   12f90:	ldr	r6, [pc, #3412]	; 13cec <dcngettext@plt+0x2cfc>
   12f94:	eor	r4, r3, r5
   12f98:	eor	r2, r2, ip
   12f9c:	add	r6, lr, r6
   12fa0:	and	r4, r4, r0
   12fa4:	add	ip, r6, ip
   12fa8:	add	r1, r2, r1
   12fac:	eor	r4, r4, r3
   12fb0:	ldr	r2, [fp, #56]	; 0x38
   12fb4:	ror	r7, r0, #2
   12fb8:	add	r1, r1, r0, ror #27
   12fbc:	add	r4, r4, ip
   12fc0:	ldr	fp, [fp, #60]	; 0x3c
   12fc4:	ldr	ip, [sp, #4]
   12fc8:	ldr	r0, [pc, #3356]	; 13cec <dcngettext@plt+0x2cfc>
   12fcc:	rev	r6, r2
   12fd0:	eor	r9, r9, sl
   12fd4:	eor	r2, r5, r7
   12fd8:	eor	r9, r9, ip
   12fdc:	add	r0, r6, r0
   12fe0:	and	r2, r2, r1
   12fe4:	rev	fp, fp
   12fe8:	add	r0, r0, r3
   12fec:	str	lr, [sp, #36]	; 0x24
   12ff0:	eor	r9, r9, lr
   12ff4:	eor	r2, r2, r5
   12ff8:	mov	lr, fp
   12ffc:	add	r2, r2, r0
   13000:	ldr	fp, [sp, #8]
   13004:	add	r0, lr, #1509949440	; 0x5a000000
   13008:	add	r4, r4, r1, ror #27
   1300c:	str	r6, [sp, #4]
   13010:	ror	r1, r1, #2
   13014:	str	lr, [sp, #16]
   13018:	add	r0, r0, #8519680	; 0x820000
   1301c:	ldr	lr, [sp]
   13020:	eor	r3, r7, r1
   13024:	eor	r6, r8, fp
   13028:	add	r0, r0, #30976	; 0x7900
   1302c:	and	r3, r3, r4
   13030:	eor	r6, r6, lr
   13034:	add	r0, r0, #153	; 0x99
   13038:	ldr	lr, [sp, #20]
   1303c:	add	r0, r0, r5
   13040:	eor	r3, r3, r7
   13044:	eor	r5, sl, lr
   13048:	add	r3, r3, r0
   1304c:	ldr	sl, [sp, #4]
   13050:	ldr	r0, [pc, #3220]	; 13cec <dcngettext@plt+0x2cfc>
   13054:	ror	r9, r9, #31
   13058:	eor	r6, r6, sl
   1305c:	add	r0, r9, r0
   13060:	mov	sl, r9
   13064:	ldr	r9, [sp, #28]
   13068:	ror	r8, r4, #2
   1306c:	eor	r5, r5, r9
   13070:	mov	r9, fp
   13074:	ldr	fp, [sp, #12]
   13078:	add	r2, r2, r4, ror #27
   1307c:	add	r0, r0, r7
   13080:	eor	r4, r1, r8
   13084:	eor	r7, r9, fp
   13088:	ldr	fp, [sp, #16]
   1308c:	and	r4, r4, r2
   13090:	add	r3, r3, r2, ror #27
   13094:	eor	r4, r4, r1
   13098:	ror	r2, r2, #2
   1309c:	eor	r5, r5, fp
   130a0:	ldr	r9, [pc, #3140]	; 13cec <dcngettext@plt+0x2cfc>
   130a4:	ldr	fp, [sp, #24]
   130a8:	ror	r6, r6, #31
   130ac:	add	r4, r4, r0
   130b0:	eor	r0, r8, r2
   130b4:	str	r6, [sp, #24]
   130b8:	add	r9, r6, r9
   130bc:	eor	r7, r7, fp
   130c0:	ldr	r6, [sp, #40]	; 0x28
   130c4:	and	r0, r0, r3
   130c8:	ror	r5, r5, #31
   130cc:	str	sl, [sp, #20]
   130d0:	eor	r7, r7, sl
   130d4:	eor	r0, r0, r8
   130d8:	mov	sl, r5
   130dc:	add	r5, r9, r1
   130e0:	str	sl, [sp, #8]
   130e4:	eor	r6, lr, r6
   130e8:	add	r0, r0, r5
   130ec:	ldr	lr, [sp, #32]
   130f0:	mov	r5, sl
   130f4:	ldr	sl, [pc, #3056]	; 13cec <dcngettext@plt+0x2cfc>
   130f8:	eor	r6, r6, lr
   130fc:	add	sl, r5, sl
   13100:	ldr	lr, [sp, #48]	; 0x30
   13104:	ldr	r5, [sp, #12]
   13108:	ror	r7, r7, #31
   1310c:	eor	r5, r5, lr
   13110:	mov	lr, r7
   13114:	ldr	r7, [sp, #24]
   13118:	add	r4, r4, r3, ror #27
   1311c:	ror	r3, r3, #2
   13120:	eor	r1, r2, r3
   13124:	eor	r6, r6, r7
   13128:	and	r1, r1, r4
   1312c:	add	sl, sl, r8
   13130:	eor	r7, r1, r2
   13134:	ror	r6, r6, #31
   13138:	ldr	r1, [sp, #36]	; 0x24
   1313c:	add	r7, r7, sl
   13140:	mov	sl, r6
   13144:	ldr	r6, [sp, #8]
   13148:	ror	r9, r4, #2
   1314c:	add	r0, r0, r4, ror #27
   13150:	eor	r5, r5, r1
   13154:	ldr	r4, [sp, #40]	; 0x28
   13158:	add	r1, lr, #1509949440	; 0x5a000000
   1315c:	eor	r5, r5, r6
   13160:	ldr	r6, [sp, #4]
   13164:	eor	r4, r4, ip
   13168:	add	r1, r1, #8519680	; 0x820000
   1316c:	eor	r8, r3, r9
   13170:	eor	r4, r4, r6
   13174:	add	r1, r1, #30976	; 0x7900
   13178:	ldr	r6, [pc, #2928]	; 13cf0 <dcngettext@plt+0x2d00>
   1317c:	and	r8, r8, r0
   13180:	add	r1, r1, #153	; 0x99
   13184:	add	r2, r1, r2
   13188:	str	sl, [sp, #12]
   1318c:	eor	r1, r8, r3
   13190:	add	r6, sl, r6
   13194:	ldr	r8, [sp]
   13198:	ldr	sl, [sp, #48]	; 0x30
   1319c:	ror	r5, r5, #31
   131a0:	add	r7, r7, r0, ror #27
   131a4:	eor	r8, sl, r8
   131a8:	ror	r0, r0, #2
   131ac:	mov	sl, r5
   131b0:	ldr	r5, [sp, #16]
   131b4:	add	r1, r1, r2
   131b8:	eor	r4, r4, lr
   131bc:	eor	r2, r9, r0
   131c0:	add	r1, r1, r7, ror #27
   131c4:	add	r3, r6, r3
   131c8:	eor	r6, r2, r7
   131cc:	ror	r2, r7, #2
   131d0:	eor	r7, r8, r5
   131d4:	ldr	r8, [sp, #28]
   131d8:	ror	r4, r4, #31
   131dc:	eor	r8, ip, r8
   131e0:	ldr	r5, [pc, #2824]	; 13cf0 <dcngettext@plt+0x2d00>
   131e4:	mov	ip, r4
   131e8:	ldr	r4, [sp, #12]
   131ec:	add	r5, sl, r5
   131f0:	add	r6, r6, r3
   131f4:	eor	r7, r7, r4
   131f8:	eor	r3, r0, r2
   131fc:	add	r4, ip, #1845493760	; 0x6e000000
   13200:	add	r6, r6, r1, ror #27
   13204:	add	r9, r5, r9
   13208:	add	r4, r4, #14221312	; 0xd90000
   1320c:	eor	r5, r3, r1
   13210:	ror	r3, r1, #2
   13214:	ldr	r1, [sp, #20]
   13218:	add	r4, r4, #60160	; 0xeb00
   1321c:	eor	r8, r8, r1
   13220:	add	r4, r4, #161	; 0xa1
   13224:	eor	r1, r2, r3
   13228:	ror	r7, r7, #31
   1322c:	add	r0, r4, r0
   13230:	eor	r4, r1, r6
   13234:	add	r0, r4, r0
   13238:	add	r5, r5, r9
   1323c:	ldr	r9, [sp]
   13240:	str	r7, [sp]
   13244:	eor	r8, r8, sl
   13248:	ldr	r7, [sp, #24]
   1324c:	str	r0, [sp, #40]	; 0x28
   13250:	ldr	r0, [sp]
   13254:	eor	r9, r9, fp
   13258:	eor	r9, r9, r7
   1325c:	ror	r8, r8, #31
   13260:	add	r0, r0, #1845493760	; 0x6e000000
   13264:	add	r5, r5, r6, ror #27
   13268:	ldr	r7, [sp, #28]
   1326c:	eor	r9, r9, ip
   13270:	ldr	r4, [sp, #32]
   13274:	add	r0, r0, #14221312	; 0xd90000
   13278:	str	ip, [sp, #28]
   1327c:	mov	ip, r8
   13280:	ldr	r8, [sp, #40]	; 0x28
   13284:	ror	r6, r6, #2
   13288:	add	r0, r0, #60160	; 0xeb00
   1328c:	eor	r1, r3, r6
   13290:	add	r0, r0, #161	; 0xa1
   13294:	eor	r7, r7, r4
   13298:	add	r4, r8, r5, ror #27
   1329c:	ldr	r8, [sp, #8]
   132a0:	add	r2, r0, r2
   132a4:	eor	r0, r1, r5
   132a8:	eor	r7, r7, r8
   132ac:	add	r0, r0, r2
   132b0:	ldr	r8, [sp, #36]	; 0x24
   132b4:	add	r2, ip, #1845493760	; 0x6e000000
   132b8:	ror	r9, r9, #31
   132bc:	add	r2, r2, #14221312	; 0xd90000
   132c0:	ror	r5, r5, #2
   132c4:	eor	r8, fp, r8
   132c8:	add	r2, r2, #60160	; 0xeb00
   132cc:	mov	fp, r9
   132d0:	ldr	r9, [sp]
   132d4:	eor	r1, r6, r5
   132d8:	add	r2, r2, #161	; 0xa1
   132dc:	add	r3, r2, r3
   132e0:	str	lr, [sp, #48]	; 0x30
   132e4:	eor	r2, r1, r4
   132e8:	eor	r7, r7, r9
   132ec:	ldr	r1, [sp, #4]
   132f0:	eor	r8, r8, lr
   132f4:	add	r9, fp, #1845493760	; 0x6e000000
   132f8:	mov	lr, fp
   132fc:	ldr	fp, [sp, #32]
   13300:	str	ip, [sp, #56]	; 0x38
   13304:	eor	r8, r8, ip
   13308:	ldr	ip, [sp, #12]
   1330c:	eor	r1, fp, r1
   13310:	add	r9, r9, #14221312	; 0xd90000
   13314:	ror	r7, r7, #31
   13318:	eor	r1, r1, ip
   1331c:	add	r9, r9, #60160	; 0xeb00
   13320:	mov	fp, r7
   13324:	add	r0, r0, r4, ror #27
   13328:	add	r9, r9, #161	; 0xa1
   1332c:	ror	r4, r4, #2
   13330:	eor	r1, r1, lr
   13334:	ldr	r7, [pc, #2484]	; 13cf0 <dcngettext@plt+0x2d00>
   13338:	add	r6, r9, r6
   1333c:	add	r2, r2, r3
   13340:	ror	r9, r8, #31
   13344:	eor	r3, r5, r4
   13348:	ldr	r8, [sp, #16]
   1334c:	str	lr, [sp, #32]
   13350:	ldr	lr, [sp, #36]	; 0x24
   13354:	add	r2, r2, r0, ror #27
   13358:	add	r7, fp, r7
   1335c:	eor	r3, r3, r0
   13360:	ror	r1, r1, #31
   13364:	ror	r0, r0, #2
   13368:	add	r5, r7, r5
   1336c:	ldr	ip, [sp, #4]
   13370:	mov	r7, r1
   13374:	add	r3, r3, r6
   13378:	ldr	r1, [sp, #20]
   1337c:	eor	r6, r4, r0
   13380:	eor	lr, lr, r8
   13384:	ldr	r8, [pc, #2404]	; 13cf0 <dcngettext@plt+0x2d00>
   13388:	add	r3, r3, r2, ror #27
   1338c:	eor	r6, r6, r2
   13390:	ror	r2, r2, #2
   13394:	add	r8, r9, r8
   13398:	add	r6, r6, r5
   1339c:	eor	ip, ip, r1
   133a0:	eor	r5, r0, r2
   133a4:	ldr	r1, [sp, #28]
   133a8:	eor	r5, r5, r3
   133ac:	eor	lr, lr, sl
   133b0:	add	r4, r8, r4
   133b4:	eor	lr, lr, fp
   133b8:	str	r7, [sp, #36]	; 0x24
   133bc:	eor	ip, ip, r1
   133c0:	add	r4, r5, r4
   133c4:	mov	r5, r7
   133c8:	ldr	r7, [pc, #2336]	; 13cf0 <dcngettext@plt+0x2d00>
   133cc:	eor	ip, ip, r9
   133d0:	add	r6, r6, r3, ror #27
   133d4:	add	r7, r5, r7
   133d8:	ror	r3, r3, #2
   133dc:	ror	r5, lr, #31
   133e0:	ldr	r8, [sp, #24]
   133e4:	str	fp, [sp, #60]	; 0x3c
   133e8:	ldr	fp, [sp, #16]
   133ec:	str	r5, [sp, #4]
   133f0:	eor	r1, r2, r3
   133f4:	add	r0, r7, r0
   133f8:	ldr	r5, [sp]
   133fc:	ror	r7, ip, #31
   13400:	str	r7, [sp, #16]
   13404:	eor	fp, fp, r8
   13408:	ldr	r7, [sp, #36]	; 0x24
   1340c:	eor	r1, r1, r6
   13410:	eor	fp, fp, r5
   13414:	add	r1, r1, r0
   13418:	ldr	r5, [sp, #8]
   1341c:	ldr	r0, [sp, #4]
   13420:	ldr	ip, [sp, #20]
   13424:	ldr	lr, [pc, #2244]	; 13cf0 <dcngettext@plt+0x2d00>
   13428:	eor	fp, fp, r7
   1342c:	ldr	r7, [sp, #56]	; 0x38
   13430:	add	r4, r4, r6, ror #27
   13434:	add	lr, r0, lr
   13438:	ror	r6, r6, #2
   1343c:	eor	ip, ip, r5
   13440:	eor	r0, r3, r6
   13444:	add	r2, lr, r2
   13448:	eor	ip, ip, r7
   1344c:	ldr	lr, [sp, #4]
   13450:	ldr	r7, [sp, #48]	; 0x30
   13454:	eor	r0, r0, r4
   13458:	eor	ip, ip, lr
   1345c:	add	r0, r0, r2
   13460:	eor	r7, r8, r7
   13464:	ldr	r2, [sp, #16]
   13468:	ldr	r8, [sp, #32]
   1346c:	ldr	r5, [pc, #2172]	; 13cf0 <dcngettext@plt+0x2d00>
   13470:	eor	r7, r7, r8
   13474:	ror	r8, ip, #31
   13478:	mov	ip, r8
   1347c:	ldr	r8, [sp, #16]
   13480:	add	r5, r2, r5
   13484:	add	r3, r5, r3
   13488:	eor	r7, r7, r8
   1348c:	ldr	r5, [sp, #8]
   13490:	ldr	r8, [sp, #12]
   13494:	add	r1, r1, r4, ror #27
   13498:	ror	r4, r4, #2
   1349c:	eor	r2, r6, r4
   134a0:	eor	r5, r5, r8
   134a4:	ldr	lr, [pc, #2116]	; 13cf0 <dcngettext@plt+0x2d00>
   134a8:	ldr	r8, [sp, #60]	; 0x3c
   134ac:	ror	fp, fp, #31
   134b0:	add	r0, r0, r1, ror #27
   134b4:	eor	r2, r2, r1
   134b8:	ror	r1, r1, #2
   134bc:	add	lr, fp, lr
   134c0:	add	r2, r2, r3
   134c4:	eor	r5, r5, r8
   134c8:	eor	r3, r4, r1
   134cc:	ldr	r8, [pc, #2076]	; 13cf0 <dcngettext@plt+0x2d00>
   134d0:	add	r2, r2, r0, ror #27
   134d4:	eor	r3, r3, r0
   134d8:	add	r6, lr, r6
   134dc:	ror	r0, r0, #2
   134e0:	str	ip, [sp, #40]	; 0x28
   134e4:	add	r8, ip, r8
   134e8:	add	r6, r3, r6
   134ec:	eor	ip, r1, r0
   134f0:	ror	r3, r7, #31
   134f4:	ldr	r7, [sp, #48]	; 0x30
   134f8:	eor	ip, ip, r2
   134fc:	add	r4, r8, r4
   13500:	eor	r7, r7, sl
   13504:	add	r4, ip, r4
   13508:	ldr	ip, [sp, #40]	; 0x28
   1350c:	mov	r8, r3
   13510:	eor	r7, r7, r9
   13514:	ldr	r3, [pc, #2004]	; 13cf0 <dcngettext@plt+0x2d00>
   13518:	str	sl, [sp, #8]
   1351c:	eor	r7, r7, ip
   13520:	ldr	sl, [sp, #12]
   13524:	ldr	ip, [sp, #28]
   13528:	add	r6, r6, r2, ror #27
   1352c:	add	r3, r8, r3
   13530:	ror	r2, r2, #2
   13534:	eor	r5, r5, fp
   13538:	eor	lr, r0, r2
   1353c:	add	r1, r3, r1
   13540:	eor	sl, sl, ip
   13544:	ldr	r3, [sp, #36]	; 0x24
   13548:	ldr	ip, [pc, #1952]	; 13cf0 <dcngettext@plt+0x2d00>
   1354c:	add	r4, r4, r6, ror #27
   13550:	ror	r5, r5, #31
   13554:	eor	lr, lr, r6
   13558:	ror	r6, r6, #2
   1355c:	add	ip, r5, ip
   13560:	eor	sl, sl, r3
   13564:	add	lr, lr, r1
   13568:	ror	r3, r7, #31
   1356c:	eor	r1, r2, r6
   13570:	mov	r7, r3
   13574:	eor	r1, r1, r4
   13578:	add	r0, ip, r0
   1357c:	str	r5, [sp, #48]	; 0x30
   13580:	str	r7, [sp, #52]	; 0x34
   13584:	ldr	r5, [sp]
   13588:	str	r8, [sp, #64]	; 0x40
   1358c:	eor	sl, sl, r8
   13590:	add	r0, r1, r0
   13594:	ldr	r8, [sp, #8]
   13598:	mov	r1, r7
   1359c:	ldr	r7, [pc, #1868]	; 13cf0 <dcngettext@plt+0x2d00>
   135a0:	ldr	r3, [sp, #4]
   135a4:	add	r7, r1, r7
   135a8:	eor	r5, r8, r5
   135ac:	ldr	r1, [sp, #48]	; 0x30
   135b0:	ror	sl, sl, #31
   135b4:	add	lr, lr, r4, ror #27
   135b8:	str	sl, [sp, #8]
   135bc:	ror	r4, r4, #2
   135c0:	ldr	sl, [sp, #56]	; 0x38
   135c4:	ldr	ip, [sp, #28]
   135c8:	eor	r5, r5, r3
   135cc:	eor	r5, r5, r1
   135d0:	eor	r3, r6, r4
   135d4:	ldr	r1, [sp, #16]
   135d8:	eor	r8, ip, sl
   135dc:	add	r2, r7, r2
   135e0:	eor	r3, r3, lr
   135e4:	ror	ip, r5, #31
   135e8:	ldr	r7, [sp, #52]	; 0x34
   135ec:	eor	r8, r8, r1
   135f0:	add	r3, r3, r2
   135f4:	ldr	r1, [pc, #1780]	; 13cf0 <dcngettext@plt+0x2d00>
   135f8:	ldr	r2, [sp, #8]
   135fc:	add	r0, r0, lr, ror #27
   13600:	ldr	r5, [sp]
   13604:	ror	lr, lr, #2
   13608:	str	ip, [sp, #12]
   1360c:	ldr	ip, [sp, #32]
   13610:	add	r1, r2, r1
   13614:	eor	r8, r8, r7
   13618:	eor	r2, r4, lr
   1361c:	eor	r7, r5, ip
   13620:	eor	r2, r2, r0
   13624:	add	r6, r1, r6
   13628:	ldr	r5, [sp, #12]
   1362c:	add	r6, r2, r6
   13630:	ror	r2, r8, #31
   13634:	str	r2, [sp]
   13638:	add	r5, r5, #1845493760	; 0x6e000000
   1363c:	ldr	r2, [sp, #8]
   13640:	eor	r7, r7, fp
   13644:	add	r5, r5, #14221312	; 0xd90000
   13648:	eor	r7, r7, r2
   1364c:	add	r5, r5, #60160	; 0xeb00
   13650:	add	r5, r5, #161	; 0xa1
   13654:	mov	r1, sl
   13658:	add	r4, r5, r4
   1365c:	ldr	sl, [sp, #60]	; 0x3c
   13660:	ror	r5, r7, #31
   13664:	ldr	r2, [sp]
   13668:	mov	r7, r5
   1366c:	ldr	r5, [sp, #40]	; 0x28
   13670:	add	r3, r3, r0, ror #27
   13674:	eor	r8, r1, sl
   13678:	ror	r0, r0, #2
   1367c:	eor	ip, lr, r0
   13680:	eor	r8, r8, r5
   13684:	ldr	r1, [pc, #1636]	; 13cf0 <dcngettext@plt+0x2d00>
   13688:	ldr	r5, [sp, #12]
   1368c:	add	r6, r6, r3, ror #27
   13690:	eor	ip, ip, r3
   13694:	ror	r3, r3, #2
   13698:	add	r1, r2, r1
   1369c:	eor	r8, r8, r5
   136a0:	eor	r2, r0, r3
   136a4:	ldr	r5, [pc, #1604]	; 13cf0 <dcngettext@plt+0x2d00>
   136a8:	eor	r2, r2, r6
   136ac:	add	r4, ip, r4
   136b0:	add	lr, r1, lr
   136b4:	ldr	ip, [sp, #32]
   136b8:	add	r5, r7, r5
   136bc:	add	lr, r2, lr
   136c0:	ror	r8, r8, #31
   136c4:	ldr	r2, [sp, #64]	; 0x40
   136c8:	eor	ip, ip, r9
   136cc:	add	r0, r5, r0
   136d0:	mov	r5, r8
   136d4:	ldr	r8, [sp]
   136d8:	eor	ip, ip, r2
   136dc:	eor	ip, ip, r8
   136e0:	add	r4, r4, r6, ror #27
   136e4:	ror	r6, r6, #2
   136e8:	eor	r1, r3, r6
   136ec:	mov	r2, sl
   136f0:	ror	ip, ip, #31
   136f4:	ldr	sl, [sp, #36]	; 0x24
   136f8:	str	r7, [sp, #56]	; 0x38
   136fc:	str	ip, [sp, #24]
   13700:	eor	r1, r1, r4
   13704:	ldr	ip, [sp, #48]	; 0x30
   13708:	add	lr, lr, r4, ror #27
   1370c:	eor	r7, r2, sl
   13710:	ror	r4, r4, #2
   13714:	ldr	r8, [sp, #56]	; 0x38
   13718:	add	r0, r1, r0
   1371c:	ldr	r1, [pc, #1488]	; 13cf4 <dcngettext@plt+0x2d04>
   13720:	orr	r2, lr, r4
   13724:	eor	r7, r7, ip
   13728:	add	r0, r0, lr, ror #27
   1372c:	and	ip, r2, r6
   13730:	add	r1, r5, r1
   13734:	ldr	r2, [sp, #4]
   13738:	eor	r7, r7, r8
   1373c:	str	r5, [sp, #20]
   13740:	add	r3, r1, r3
   13744:	ror	r5, lr, #2
   13748:	and	lr, lr, r4
   1374c:	eor	r8, r9, r2
   13750:	orr	lr, ip, lr
   13754:	ldr	r9, [sp, #52]	; 0x34
   13758:	add	r3, r3, r0, ror #27
   1375c:	ror	r7, r7, #31
   13760:	add	r3, lr, r3
   13764:	ldr	ip, [sp, #24]
   13768:	mov	lr, r7
   1376c:	ldr	r2, [pc, #1408]	; 13cf4 <dcngettext@plt+0x2d04>
   13770:	ldr	r7, [sp, #20]
   13774:	orr	r1, r0, r5
   13778:	eor	r8, r8, r9
   1377c:	add	r2, ip, r2
   13780:	ldr	r9, [sp, #16]
   13784:	and	ip, r0, r5
   13788:	eor	r8, r8, r7
   1378c:	and	r1, r1, r4
   13790:	orr	r1, r1, ip
   13794:	add	r6, r2, r6
   13798:	add	r6, r1, r6
   1379c:	ldr	r2, [pc, #1360]	; 13cf4 <dcngettext@plt+0x2d04>
   137a0:	eor	r1, sl, r9
   137a4:	ror	sl, r8, #31
   137a8:	mov	r8, sl
   137ac:	ldr	sl, [sp, #8]
   137b0:	ror	r0, r0, #2
   137b4:	str	lr, [sp, #16]
   137b8:	add	r2, lr, r2
   137bc:	ldr	lr, [sp, #24]
   137c0:	add	ip, r6, r3, ror #27
   137c4:	eor	r1, r1, sl
   137c8:	orr	r6, r3, r0
   137cc:	ror	r7, r3, #2
   137d0:	and	r6, r6, r5
   137d4:	and	r3, r3, r0
   137d8:	eor	r1, r1, lr
   137dc:	orr	r3, r6, r3
   137e0:	add	r4, r2, r4
   137e4:	ldr	lr, [sp, #4]
   137e8:	add	r6, r8, #-1895825408	; 0x8f000000
   137ec:	ldr	sl, [sp, #12]
   137f0:	add	r4, r4, ip, ror #27
   137f4:	ror	r1, r1, #31
   137f8:	add	r6, r6, #1802240	; 0x1b8000
   137fc:	add	r4, r3, r4
   13800:	orr	r2, ip, r7
   13804:	mov	r3, r1
   13808:	eor	lr, lr, fp
   1380c:	ldr	r1, [sp, #16]
   13810:	add	r6, r6, #15552	; 0x3cc0
   13814:	str	r8, [sp, #28]
   13818:	add	r6, r6, #28
   1381c:	and	r8, ip, r7
   13820:	and	r2, r2, r0
   13824:	eor	lr, lr, sl
   13828:	add	r5, r6, r5
   1382c:	orr	r2, r2, r8
   13830:	eor	lr, lr, r1
   13834:	add	r2, r2, r5
   13838:	str	r3, [sp, #32]
   1383c:	mov	r5, r3
   13840:	ldr	r3, [pc, #1196]	; 13cf4 <dcngettext@plt+0x2d04>
   13844:	ldr	r8, [sp, #40]	; 0x28
   13848:	ror	lr, lr, #31
   1384c:	mov	sl, lr
   13850:	add	r3, r5, r3
   13854:	ldr	lr, [sp]
   13858:	ror	r6, ip, #2
   1385c:	add	r0, r3, r0
   13860:	eor	ip, r9, r8
   13864:	ldr	r3, [sp, #28]
   13868:	add	r1, r2, r4, ror #27
   1386c:	eor	ip, ip, lr
   13870:	orr	r2, r4, r6
   13874:	ror	r5, r4, #2
   13878:	and	lr, r2, r7
   1387c:	eor	ip, ip, r3
   13880:	and	r4, r4, r6
   13884:	ldr	r3, [pc, #1128]	; 13cf4 <dcngettext@plt+0x2d04>
   13888:	ldr	r9, [sp, #64]	; 0x40
   1388c:	orr	r4, lr, r4
   13890:	add	r0, r0, r1, ror #27
   13894:	add	r0, r4, r0
   13898:	add	r3, sl, r3
   1389c:	ror	r4, ip, #31
   138a0:	str	sl, [sp, #36]	; 0x24
   138a4:	ldr	sl, [sp, #56]	; 0x38
   138a8:	add	r7, r3, r7
   138ac:	eor	fp, fp, r9
   138b0:	mov	r3, r4
   138b4:	ldr	r4, [sp, #32]
   138b8:	orr	r2, r1, r5
   138bc:	eor	fp, fp, sl
   138c0:	and	lr, r1, r5
   138c4:	eor	fp, fp, r4
   138c8:	and	r2, r2, r6
   138cc:	orr	r2, r2, lr
   138d0:	ldr	sl, [sp, #48]	; 0x30
   138d4:	mov	r4, r3
   138d8:	str	r3, [sp, #48]	; 0x30
   138dc:	add	r2, r2, r7
   138e0:	ldr	r3, [pc, #1036]	; 13cf4 <dcngettext@plt+0x2d04>
   138e4:	ror	r7, fp, #31
   138e8:	ror	r1, r1, #2
   138ec:	str	r7, [sp, #4]
   138f0:	mov	ip, r8
   138f4:	ldr	r7, [sp, #20]
   138f8:	ldr	fp, [sp, #52]	; 0x34
   138fc:	eor	ip, ip, sl
   13900:	add	r3, r4, r3
   13904:	orr	lr, r0, r1
   13908:	ldr	r4, [sp, #36]	; 0x24
   1390c:	add	r2, r2, r0, ror #27
   13910:	ror	r8, r0, #2
   13914:	and	lr, lr, r5
   13918:	eor	r7, ip, r7
   1391c:	and	r0, r0, r1
   13920:	add	ip, r3, r6
   13924:	eor	r7, r7, r4
   13928:	orr	r0, lr, r0
   1392c:	eor	r4, r9, fp
   13930:	ldr	lr, [pc, #956]	; 13cf4 <dcngettext@plt+0x2d04>
   13934:	ldr	r9, [sp, #4]
   13938:	add	ip, ip, r2, ror #27
   1393c:	add	ip, r0, ip
   13940:	add	lr, r9, lr
   13944:	ror	r0, r7, #31
   13948:	ldr	r9, [sp, #24]
   1394c:	mov	r7, r0
   13950:	ldr	r0, [sp, #48]	; 0x30
   13954:	orr	r3, r2, r8
   13958:	eor	r4, r4, r9
   1395c:	and	r6, r2, r8
   13960:	eor	r4, r4, r0
   13964:	and	r3, r3, r1
   13968:	orr	r3, r3, r6
   1396c:	add	r5, lr, r5
   13970:	ldr	r6, [sp, #8]
   13974:	ror	r9, r2, #2
   13978:	add	lr, r3, r5
   1397c:	mov	r2, sl
   13980:	ror	r5, r4, #31
   13984:	ldr	r4, [sp, #16]
   13988:	str	r5, [sp, #8]
   1398c:	eor	sl, r2, r6
   13990:	ldr	r5, [sp, #4]
   13994:	eor	sl, sl, r4
   13998:	ldr	r0, [pc, #852]	; 13cf4 <dcngettext@plt+0x2d04>
   1399c:	eor	sl, sl, r5
   139a0:	mov	r5, fp
   139a4:	ldr	fp, [sp, #12]
   139a8:	add	r0, r7, r0
   139ac:	add	lr, lr, ip, ror #27
   139b0:	orr	r2, ip, r9
   139b4:	str	r7, [sp, #52]	; 0x34
   139b8:	add	r1, r0, r1
   139bc:	eor	r7, r5, fp
   139c0:	ldr	r0, [pc, #812]	; 13cf4 <dcngettext@plt+0x2d04>
   139c4:	ldr	r5, [sp, #8]
   139c8:	ror	r3, ip, #2
   139cc:	and	r4, r2, r8
   139d0:	and	ip, ip, r9
   139d4:	orr	ip, r4, ip
   139d8:	add	r0, r5, r0
   139dc:	add	r1, r1, lr, ror #27
   139e0:	ldr	r5, [sp, #28]
   139e4:	add	r1, ip, r1
   139e8:	ldr	ip, [sp, #52]	; 0x34
   139ec:	orr	r2, lr, r3
   139f0:	eor	r7, r7, r5
   139f4:	and	r4, lr, r3
   139f8:	eor	r7, r7, ip
   139fc:	and	r2, r2, r9
   13a00:	add	r8, r0, r8
   13a04:	orr	r2, r2, r4
   13a08:	ror	r0, lr, #2
   13a0c:	ldr	ip, [pc, #736]	; 13cf4 <dcngettext@plt+0x2d04>
   13a10:	ldr	lr, [sp]
   13a14:	ror	sl, sl, #31
   13a18:	add	r2, r2, r8
   13a1c:	ror	r8, r7, #31
   13a20:	str	r8, [sp, #40]	; 0x28
   13a24:	add	ip, sl, ip
   13a28:	ldr	r8, [sp, #32]
   13a2c:	eor	lr, r6, lr
   13a30:	orr	r6, r1, r0
   13a34:	add	r2, r2, r1, ror #27
   13a38:	ror	r4, r1, #2
   13a3c:	add	r9, ip, r9
   13a40:	and	r1, r1, r0
   13a44:	ldr	ip, [sp, #8]
   13a48:	and	r6, r6, r3
   13a4c:	eor	lr, lr, r8
   13a50:	orr	r6, r6, r1
   13a54:	ldr	r8, [pc, #664]	; 13cf4 <dcngettext@plt+0x2d04>
   13a58:	ldr	r1, [sp, #40]	; 0x28
   13a5c:	orr	r7, r2, r4
   13a60:	eor	lr, lr, ip
   13a64:	mov	ip, fp
   13a68:	ldr	fp, [sp, #56]	; 0x38
   13a6c:	and	r5, r2, r4
   13a70:	add	r8, r1, r8
   13a74:	and	r7, r7, r0
   13a78:	ldr	r1, [sp, #36]	; 0x24
   13a7c:	add	r9, r9, r2, ror #27
   13a80:	orr	r7, r7, r5
   13a84:	eor	ip, ip, fp
   13a88:	add	r3, r8, r3
   13a8c:	add	r6, r6, r9
   13a90:	eor	ip, ip, r1
   13a94:	ror	r9, lr, #31
   13a98:	add	r3, r7, r3
   13a9c:	ldr	lr, [sp]
   13aa0:	ldr	r7, [sp, #20]
   13aa4:	eor	ip, ip, sl
   13aa8:	ror	r2, r2, #2
   13aac:	eor	r8, lr, r7
   13ab0:	add	lr, r9, #-1895825408	; 0x8f000000
   13ab4:	orr	r1, r6, r2
   13ab8:	ror	ip, ip, #31
   13abc:	add	lr, lr, #1802240	; 0x1b8000
   13ac0:	add	r3, r3, r6, ror #27
   13ac4:	ror	r5, r6, #2
   13ac8:	mov	r7, ip
   13acc:	and	r6, r6, r2
   13ad0:	ldr	ip, [sp, #48]	; 0x30
   13ad4:	and	r1, r1, r4
   13ad8:	add	lr, lr, #15552	; 0x3cc0
   13adc:	str	r9, [sp, #56]	; 0x38
   13ae0:	orr	r1, r1, r6
   13ae4:	ldr	r9, [sp, #40]	; 0x28
   13ae8:	add	r6, r7, #-1895825408	; 0x8f000000
   13aec:	add	lr, lr, #28
   13af0:	eor	r8, r8, ip
   13af4:	add	lr, lr, r0
   13af8:	mov	ip, fp
   13afc:	add	r6, r6, #1802240	; 0x1b8000
   13b00:	ldr	fp, [sp, #24]
   13b04:	orr	r0, r3, r5
   13b08:	eor	r8, r8, r9
   13b0c:	add	lr, lr, r3, ror #27
   13b10:	str	r7, [sp, #60]	; 0x3c
   13b14:	add	r6, r6, #15552	; 0x3cc0
   13b18:	ldr	r9, [sp, #4]
   13b1c:	add	r1, r1, lr
   13b20:	and	r7, r3, r5
   13b24:	ldr	lr, [sp, #56]	; 0x38
   13b28:	eor	ip, ip, fp
   13b2c:	add	r6, r6, #28
   13b30:	and	r0, r0, r2
   13b34:	add	r4, r6, r4
   13b38:	orr	r0, r0, r7
   13b3c:	eor	ip, ip, r9
   13b40:	eor	r9, ip, lr
   13b44:	ldr	r7, [sp, #20]
   13b48:	add	lr, r0, r4
   13b4c:	ldr	r4, [sp, #16]
   13b50:	ror	r6, r8, #31
   13b54:	eor	r8, r7, r4
   13b58:	ldr	r4, [pc, #404]	; 13cf4 <dcngettext@plt+0x2d04>
   13b5c:	str	r6, [sp, #20]
   13b60:	add	r4, r6, r4
   13b64:	ldr	r6, [sp, #52]	; 0x34
   13b68:	ror	r7, r9, #31
   13b6c:	ror	r3, r3, #2
   13b70:	str	r7, [sp]
   13b74:	eor	r8, r8, r6
   13b78:	ldr	r7, [sp, #60]	; 0x3c
   13b7c:	ldr	r6, [sp, #28]
   13b80:	add	lr, lr, r1, ror #27
   13b84:	orr	r0, r1, r3
   13b88:	add	r2, r4, r2
   13b8c:	mov	r4, fp
   13b90:	ror	ip, r1, #2
   13b94:	eor	r8, r8, r7
   13b98:	and	r1, r1, r3
   13b9c:	ldr	r7, [sp]
   13ba0:	and	r0, r0, r5
   13ba4:	eor	r4, r4, r6
   13ba8:	ldr	r6, [pc, #324]	; 13cf4 <dcngettext@plt+0x2d04>
   13bac:	orr	r9, lr, ip
   13bb0:	add	r2, r2, lr, ror #27
   13bb4:	orr	r0, r0, r1
   13bb8:	add	r0, r0, r2
   13bbc:	add	r6, r7, r6
   13bc0:	and	r1, r9, r3
   13bc4:	and	r7, lr, ip
   13bc8:	ldr	r9, [sp, #8]
   13bcc:	ror	r2, r8, #31
   13bd0:	orr	r1, r1, r7
   13bd4:	mov	r7, r2
   13bd8:	ldr	r2, [sp, #20]
   13bdc:	eor	r4, r4, r9
   13be0:	eor	r9, r4, r2
   13be4:	ldr	r8, [sp, #32]
   13be8:	ldr	r4, [sp, #16]
   13bec:	add	r5, r6, r5
   13bf0:	eor	fp, r4, r8
   13bf4:	add	r4, r7, #-1895825408	; 0x8f000000
   13bf8:	add	r4, r4, #1802240	; 0x1b8000
   13bfc:	ror	lr, lr, #2
   13c00:	add	r2, r1, r5
   13c04:	add	r4, r4, #15552	; 0x3cc0
   13c08:	add	r2, r2, r0, ror #27
   13c0c:	str	r7, [sp, #16]
   13c10:	add	r4, r4, #28
   13c14:	orr	r7, r0, lr
   13c18:	ror	r6, r0, #2
   13c1c:	ldr	r5, [sp, #28]
   13c20:	ror	r1, r9, #31
   13c24:	and	r0, r0, lr
   13c28:	ldr	r9, [sp, #36]	; 0x24
   13c2c:	add	r4, r4, r3
   13c30:	and	r7, r7, ip
   13c34:	ldr	r3, [sp]
   13c38:	mov	r8, r1
   13c3c:	add	r4, r4, r2, ror #27
   13c40:	eor	fp, fp, sl
   13c44:	orr	r7, r7, r0
   13c48:	ldr	r0, [sp, #40]	; 0x28
   13c4c:	add	r7, r7, r4
   13c50:	orr	r1, r2, r6
   13c54:	eor	fp, fp, r3
   13c58:	ldr	r4, [sp, #16]
   13c5c:	eor	r3, r5, r9
   13c60:	add	r5, r8, #-1895825408	; 0x8f000000
   13c64:	str	r8, [sp, #24]
   13c68:	and	r1, r1, lr
   13c6c:	and	r8, r2, r6
   13c70:	eor	r3, r3, r0
   13c74:	add	r5, r5, #1802240	; 0x1b8000
   13c78:	ror	r0, fp, #31
   13c7c:	orr	r1, r1, r8
   13c80:	ldr	fp, [sp, #48]	; 0x30
   13c84:	ldr	r8, [sp, #32]
   13c88:	eor	r3, r3, r4
   13c8c:	add	r5, r5, #15552	; 0x3cc0
   13c90:	add	r5, r5, #28
   13c94:	add	r5, r5, ip
   13c98:	ror	r3, r3, #31
   13c9c:	eor	ip, r8, fp
   13ca0:	ldr	r9, [pc, #76]	; 13cf4 <dcngettext@plt+0x2d04>
   13ca4:	ldr	r8, [sp, #56]	; 0x38
   13ca8:	ror	r2, r2, #2
   13cac:	str	r3, [sp, #12]
   13cb0:	ldr	r3, [sp, #24]
   13cb4:	str	r0, [sp, #28]
   13cb8:	add	r9, r0, r9
   13cbc:	add	r1, r1, r5
   13cc0:	orr	r0, r7, r2
   13cc4:	eor	ip, ip, r8
   13cc8:	add	r1, r1, r7, ror #27
   13ccc:	ror	r5, r7, #2
   13cd0:	ldr	r8, [sp, #4]
   13cd4:	and	r7, r7, r2
   13cd8:	eor	ip, ip, r3
   13cdc:	ldr	r4, [sp, #36]	; 0x24
   13ce0:	and	r0, r0, r6
   13ce4:	add	lr, r9, lr
   13ce8:	b	13cfc <dcngettext@plt+0x2d0c>
   13cec:	bpl	fe0b2358 <stdout@@GLIBC_2.4+0xfe0861ec>
   13cf0:	vfnmsvs.f64	d30, d25, d17
   13cf4:	svchi	0x001bbcdc
   13cf8:	bgt	18c4458 <stdout@@GLIBC_2.4+0x18982ec>
   13cfc:	orr	r0, r0, r7
   13d00:	ldr	r9, [sp, #60]	; 0x3c
   13d04:	ldr	r7, [sp, #12]
   13d08:	eor	r4, r4, r8
   13d0c:	ror	ip, ip, #31
   13d10:	eor	r4, r4, r9
   13d14:	add	r7, r7, #-1895825408	; 0x8f000000
   13d18:	mov	r9, ip
   13d1c:	ldr	ip, [sp, #28]
   13d20:	add	lr, lr, r1, ror #27
   13d24:	add	r7, r7, #1802240	; 0x1b8000
   13d28:	add	r0, r0, lr
   13d2c:	eor	r4, r4, ip
   13d30:	mov	lr, r9
   13d34:	mov	ip, fp
   13d38:	add	r7, r7, #15552	; 0x3cc0
   13d3c:	ldr	fp, [sp, #52]	; 0x34
   13d40:	str	r9, [sp, #32]
   13d44:	ldr	r9, [pc, #-84]	; 13cf8 <dcngettext@plt+0x2d08>
   13d48:	add	r7, r7, #28
   13d4c:	add	r7, r7, r6
   13d50:	add	r9, lr, r9
   13d54:	ldr	r6, [sp, #20]
   13d58:	ror	lr, r4, #31
   13d5c:	mov	r4, lr
   13d60:	orr	r3, r1, r5
   13d64:	ldr	lr, [sp, #12]
   13d68:	eor	ip, ip, fp
   13d6c:	and	r8, r1, r5
   13d70:	and	r3, r3, r2
   13d74:	eor	ip, ip, r6
   13d78:	eor	r6, ip, lr
   13d7c:	orr	r3, r3, r8
   13d80:	ldmib	sp, {r8, ip}
   13d84:	ror	r1, r1, #2
   13d88:	add	r3, r3, r7
   13d8c:	eor	r7, r5, r1
   13d90:	eor	lr, r8, ip
   13d94:	add	r2, r9, r2
   13d98:	eor	ip, r7, r0
   13d9c:	ror	r9, r6, #31
   13da0:	ldr	r7, [sp]
   13da4:	add	ip, ip, r2
   13da8:	add	r2, r4, #-905969664	; 0xca000000
   13dac:	mov	r8, r9
   13db0:	add	r2, r2, #6422528	; 0x620000
   13db4:	ldr	r9, [sp, #32]
   13db8:	add	r3, r3, r0, ror #27
   13dbc:	eor	lr, lr, r7
   13dc0:	ror	r0, r0, #2
   13dc4:	add	r2, r2, #49408	; 0xc100
   13dc8:	mov	r7, r4
   13dcc:	eor	lr, lr, r9
   13dd0:	eor	r4, r1, r0
   13dd4:	eor	r6, fp, sl
   13dd8:	add	r2, r2, #214	; 0xd6
   13ddc:	ldr	fp, [sp, #16]
   13de0:	ldr	r9, [pc, #-240]	; 13cf8 <dcngettext@plt+0x2d08>
   13de4:	add	ip, ip, r3, ror #27
   13de8:	add	r5, r2, r5
   13dec:	eor	r2, r4, r3
   13df0:	ror	r3, r3, #2
   13df4:	eor	r4, r0, r3
   13df8:	add	r9, r8, r9
   13dfc:	eor	r6, r6, fp
   13e00:	add	r2, r2, r5
   13e04:	ror	r5, lr, #31
   13e08:	str	r5, [sp, #4]
   13e0c:	str	r7, [sp, #48]	; 0x30
   13e10:	eor	r6, r6, r7
   13e14:	ldr	lr, [sp, #8]
   13e18:	ldr	r7, [sp, #40]	; 0x28
   13e1c:	add	r1, r9, r1
   13e20:	eor	r9, r4, ip
   13e24:	add	r2, r2, ip, ror #27
   13e28:	ror	r5, ip, #2
   13e2c:	add	r9, r9, r1
   13e30:	ldr	ip, [sp, #24]
   13e34:	ldr	r1, [sp, #4]
   13e38:	ldr	r4, [pc, #-328]	; 13cf8 <dcngettext@plt+0x2d08>
   13e3c:	eor	lr, lr, r7
   13e40:	eor	lr, lr, ip
   13e44:	add	r4, r1, r4
   13e48:	ror	r1, r6, #31
   13e4c:	mov	r6, r1
   13e50:	str	r8, [sp, #36]	; 0x24
   13e54:	eor	r1, lr, r8
   13e58:	ldr	r8, [sp, #56]	; 0x38
   13e5c:	eor	fp, r3, r5
   13e60:	eor	lr, sl, r8
   13e64:	ldr	sl, [sp, #28]
   13e68:	ror	ip, r2, #2
   13e6c:	add	r9, r9, r2, ror #27
   13e70:	add	r0, r4, r0
   13e74:	eor	fp, fp, r2
   13e78:	eor	r2, lr, sl
   13e7c:	ldr	lr, [pc, #-396]	; 13cf8 <dcngettext@plt+0x2d08>
   13e80:	add	fp, fp, r0
   13e84:	ror	r0, r1, #31
   13e88:	ldr	r1, [sp, #4]
   13e8c:	ldr	r4, [sp, #60]	; 0x3c
   13e90:	add	lr, r6, lr
   13e94:	eor	r2, r2, r1
   13e98:	add	r3, lr, r3
   13e9c:	mov	r1, r7
   13ea0:	ldr	lr, [sp, #12]
   13ea4:	str	r0, [sp, #8]
   13ea8:	eor	r7, r1, r4
   13eac:	eor	sl, r5, ip
   13eb0:	eor	r7, r7, lr
   13eb4:	ldr	r1, [pc, #-452]	; 13cf8 <dcngettext@plt+0x2d08>
   13eb8:	ldr	lr, [sp, #8]
   13ebc:	add	fp, fp, r9, ror #27
   13ec0:	eor	sl, sl, r9
   13ec4:	ror	r9, r9, #2
   13ec8:	eor	r0, ip, r9
   13ecc:	add	r1, lr, r1
   13ed0:	str	r6, [sp, #40]	; 0x28
   13ed4:	eor	r7, r7, r6
   13ed8:	ldr	r6, [sp, #20]
   13edc:	eor	r0, r0, fp
   13ee0:	add	sl, sl, r3
   13ee4:	add	r1, r1, r5
   13ee8:	ror	r3, r2, #31
   13eec:	ldr	lr, [pc, #-508]	; 13cf8 <dcngettext@plt+0x2d08>
   13ef0:	ldr	r2, [sp, #32]
   13ef4:	eor	r6, r8, r6
   13ef8:	add	r1, r0, r1
   13efc:	ldr	r5, [sp]
   13f00:	ldr	r0, [sp, #8]
   13f04:	add	sl, sl, fp, ror #27
   13f08:	str	r3, [sp, #52]	; 0x34
   13f0c:	ror	fp, fp, #2
   13f10:	ldr	r8, [sp, #48]	; 0x30
   13f14:	eor	r6, r6, r2
   13f18:	add	lr, r3, lr
   13f1c:	add	lr, lr, ip
   13f20:	eor	r3, r9, fp
   13f24:	ldr	ip, [sp, #52]	; 0x34
   13f28:	eor	r6, r6, r0
   13f2c:	eor	r5, r4, r5
   13f30:	ldr	r0, [pc, #-576]	; 13cf8 <dcngettext@plt+0x2d08>
   13f34:	ror	r7, r7, #31
   13f38:	add	r1, r1, sl, ror #27
   13f3c:	eor	r3, r3, sl
   13f40:	eor	r5, r5, r8
   13f44:	ror	sl, sl, #2
   13f48:	add	r0, r7, r0
   13f4c:	eor	r4, fp, sl
   13f50:	add	r3, r3, lr
   13f54:	eor	r5, r5, ip
   13f58:	ldr	ip, [sp, #20]
   13f5c:	ldr	lr, [sp, #16]
   13f60:	add	r9, r0, r9
   13f64:	eor	r4, r4, r1
   13f68:	eor	r8, ip, lr
   13f6c:	ldr	r0, [sp, #36]	; 0x24
   13f70:	ldr	ip, [sp]
   13f74:	add	r4, r4, r9
   13f78:	ldr	r9, [sp, #24]
   13f7c:	eor	r8, r8, r0
   13f80:	eor	r9, ip, r9
   13f84:	ldr	ip, [sp, #4]
   13f88:	eor	r8, r8, r7
   13f8c:	ldr	lr, [pc, #-668]	; 13cf8 <dcngettext@plt+0x2d08>
   13f90:	ror	r6, r6, #31
   13f94:	eor	r9, r9, ip
   13f98:	ldr	ip, [pc, #-680]	; 13cf8 <dcngettext@plt+0x2d08>
   13f9c:	ror	r5, r5, #31
   13fa0:	add	lr, r6, lr
   13fa4:	ror	r8, r8, #31
   13fa8:	add	r3, r3, r1, ror #27
   13fac:	str	r5, [sp, #20]
   13fb0:	ror	r1, r1, #2
   13fb4:	add	lr, lr, fp
   13fb8:	add	ip, r5, ip
   13fbc:	ldr	fp, [sp, #16]
   13fc0:	mov	r5, r8
   13fc4:	ldr	r8, [sp, #28]
   13fc8:	eor	r0, sl, r1
   13fcc:	add	ip, ip, sl
   13fd0:	ldr	sl, [sp, #40]	; 0x28
   13fd4:	eor	r9, r9, r6
   13fd8:	eor	r8, fp, r8
   13fdc:	eor	r8, r8, sl
   13fe0:	add	sl, r5, #-905969664	; 0xca000000
   13fe4:	ror	fp, r9, #31
   13fe8:	add	sl, sl, #6422528	; 0x620000
   13fec:	ldr	r9, [sp, #20]
   13ff0:	add	sl, sl, #49408	; 0xc100
   13ff4:	str	fp, [sp]
   13ff8:	add	r4, r4, r3, ror #27
   13ffc:	eor	r0, r0, r3
   14000:	ldr	fp, [sp, #12]
   14004:	ror	r3, r3, #2
   14008:	add	sl, sl, #214	; 0xd6
   1400c:	eor	r8, r8, r9
   14010:	ldr	r9, [sp, #24]
   14014:	add	lr, lr, r0
   14018:	eor	r0, r1, r3
   1401c:	add	r1, sl, r1
   14020:	ldr	sl, [sp, #8]
   14024:	eor	r9, r9, fp
   14028:	add	lr, lr, r4, ror #27
   1402c:	eor	r0, r0, r4
   14030:	ldr	fp, [sp]
   14034:	ror	r4, r4, #2
   14038:	eor	r9, r9, sl
   1403c:	ldr	sl, [pc, #-844]	; 13cf8 <dcngettext@plt+0x2d08>
   14040:	add	ip, ip, r0
   14044:	eor	r0, r3, r4
   14048:	add	ip, ip, lr, ror #27
   1404c:	add	sl, fp, sl
   14050:	eor	r0, r0, lr
   14054:	ldr	fp, [sp, #28]
   14058:	ror	lr, lr, #2
   1405c:	add	r0, r1, r0
   14060:	eor	r1, r4, lr
   14064:	add	r3, sl, r3
   14068:	eor	fp, fp, r2
   1406c:	eor	r1, r1, ip
   14070:	ldr	r2, [sp, #52]	; 0x34
   14074:	add	r1, r3, r1
   14078:	ldr	r3, [sp]
   1407c:	eor	fp, fp, r2
   14080:	str	r5, [sp, #16]
   14084:	eor	r9, r9, r5
   14088:	eor	fp, fp, r3
   1408c:	ldr	r5, [sp, #48]	; 0x30
   14090:	ldr	r3, [sp, #12]
   14094:	ldr	sl, [pc, #-932]	; 13cf8 <dcngettext@plt+0x2d08>
   14098:	ror	r8, r8, #31
   1409c:	add	r0, r0, ip, ror #27
   140a0:	add	sl, r8, sl
   140a4:	ror	ip, ip, #2
   140a8:	eor	r3, r3, r5
   140ac:	eor	r2, lr, ip
   140b0:	add	r4, sl, r4
   140b4:	eor	r3, r3, r7
   140b8:	ldr	sl, [pc, #-968]	; 13cf8 <dcngettext@plt+0x2d08>
   140bc:	add	r1, r1, r0, ror #27
   140c0:	ldr	r7, [sp, #32]
   140c4:	ror	r9, r9, #31
   140c8:	eor	r2, r2, r0
   140cc:	eor	r3, r3, r8
   140d0:	ror	r0, r0, #2
   140d4:	ldr	r8, [sp, #36]	; 0x24
   140d8:	add	sl, r9, sl
   140dc:	add	r2, r2, r4
   140e0:	eor	r4, ip, r0
   140e4:	eor	r8, r7, r8
   140e8:	eor	r4, r4, r1
   140ec:	add	lr, sl, lr
   140f0:	ldr	r7, [pc, #-1024]	; 13cf8 <dcngettext@plt+0x2d08>
   140f4:	ror	fp, fp, #31
   140f8:	add	lr, r4, lr
   140fc:	ldr	r4, [sp, #4]
   14100:	add	r7, fp, r7
   14104:	add	r7, r7, ip
   14108:	eor	r4, r5, r4
   1410c:	ldr	ip, [pc, #-1052]	; 13cf8 <dcngettext@plt+0x2d08>
   14110:	ldr	r5, [sp, #20]
   14114:	add	r2, r2, r1, ror #27
   14118:	ror	r3, r3, #31
   1411c:	ror	r1, r1, #2
   14120:	eor	r6, r6, r8
   14124:	eor	sl, r0, r1
   14128:	add	ip, r3, ip
   1412c:	eor	r5, r5, r4
   14130:	add	lr, lr, r2, ror #27
   14134:	eor	r9, r9, r6
   14138:	eor	sl, sl, r2
   1413c:	add	r0, ip, r0
   14140:	ror	r2, r2, #2
   14144:	ldr	ip, [sp, #36]	; 0x24
   14148:	eor	fp, fp, r5
   1414c:	ldr	r5, [sp, #40]	; 0x28
   14150:	eor	r8, r1, r2
   14154:	add	sl, r7, sl
   14158:	ldr	r4, [pc, #-1128]	; 13cf8 <dcngettext@plt+0x2d08>
   1415c:	ldr	r7, [sp, #16]
   14160:	add	sl, sl, lr, ror #27
   14164:	eor	r6, ip, r5
   14168:	ror	r9, r9, #31
   1416c:	eor	r8, r8, lr
   14170:	ror	lr, lr, #2
   14174:	eor	r5, r2, lr
   14178:	eor	r6, r6, r7
   1417c:	add	r4, r9, r4
   14180:	ldr	r7, [pc, #-1168]	; 13cf8 <dcngettext@plt+0x2d08>
   14184:	add	r1, r4, r1
   14188:	eor	r3, r3, r6
   1418c:	eor	r4, r5, sl
   14190:	add	r0, r0, r8
   14194:	ldmib	sp, {r5, ip}
   14198:	add	r0, r0, sl, ror #27
   1419c:	ror	sl, sl, #2
   141a0:	eor	r6, lr, sl
   141a4:	add	fp, r7, fp, ror #31
   141a8:	add	r1, r4, r1
   141ac:	add	r3, r7, r3, ror #31
   141b0:	ldr	r4, [sp]
   141b4:	add	r1, r1, r0, ror #27
   141b8:	eor	ip, ip, r5
   141bc:	add	r2, fp, r2
   141c0:	add	lr, r3, lr
   141c4:	eor	fp, r6, r0
   141c8:	ldr	r3, [sp, #44]	; 0x2c
   141cc:	ror	r0, r0, #2
   141d0:	eor	ip, ip, r4
   141d4:	eor	r4, sl, r0
   141d8:	eor	r4, r4, r1
   141dc:	add	r3, r3, #64	; 0x40
   141e0:	str	r3, [sp, #44]	; 0x2c
   141e4:	add	lr, lr, r4
   141e8:	ldr	r4, [sp, #88]	; 0x58
   141ec:	eor	ip, ip, r9
   141f0:	add	r2, r2, fp
   141f4:	add	r2, r2, r1, ror #27
   141f8:	cmp	r4, r3
   141fc:	ror	r1, r1, #2
   14200:	ldr	r3, [sp, #76]	; 0x4c
   14204:	eor	r5, r0, r1
   14208:	add	ip, r7, ip, ror #31
   1420c:	add	r3, r3, r2, ror #2
   14210:	eor	r5, r5, r2
   14214:	add	sl, ip, sl
   14218:	add	sl, sl, r5
   1421c:	str	r3, [sp, #76]	; 0x4c
   14220:	mov	r5, r3
   14224:	ldr	r3, [sp, #84]	; 0x54
   14228:	add	lr, lr, r2, ror #27
   1422c:	add	r3, r3, r0
   14230:	mov	r0, r3
   14234:	str	r3, [sp, #84]	; 0x54
   14238:	ldr	r3, [sp, #68]	; 0x44
   1423c:	add	ip, sl, lr, ror #27
   14240:	add	r3, r3, ip
   14244:	mov	ip, r3
   14248:	str	r3, [sp, #68]	; 0x44
   1424c:	ldr	r3, [sp, #72]	; 0x48
   14250:	mov	r2, r0
   14254:	add	r3, r3, lr
   14258:	mov	lr, r3
   1425c:	str	r3, [sp, #72]	; 0x48
   14260:	ldr	r3, [sp, #80]	; 0x50
   14264:	add	r3, r3, r1
   14268:	mov	r4, r3
   1426c:	str	r3, [sp, #80]	; 0x50
   14270:	ldr	r3, [sp, #92]	; 0x5c
   14274:	mov	r1, ip
   14278:	mov	r6, r4
   1427c:	str	r0, [r3, #16]
   14280:	str	lr, [r3, #4]
   14284:	mov	r0, lr
   14288:	str	r5, [r3, #8]
   1428c:	str	ip, [r3]
   14290:	str	r4, [r3, #12]
   14294:	mov	lr, r1
   14298:	bhi	12ce8 <dcngettext@plt+0x1cf8>
   1429c:	add	sp, sp, #100	; 0x64
   142a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142a4:	push	{r4, r5, r6, r7, r8, lr}
   142a8:	mov	r4, r0
   142ac:	ldr	r0, [r0, #28]
   142b0:	ldr	r3, [r4, #20]
   142b4:	cmp	r0, #55	; 0x37
   142b8:	add	r3, r0, r3
   142bc:	movhi	r6, #128	; 0x80
   142c0:	movls	r6, #64	; 0x40
   142c4:	movhi	r2, #120	; 0x78
   142c8:	movls	r2, #56	; 0x38
   142cc:	movhi	ip, #31
   142d0:	movls	ip, #15
   142d4:	movhi	lr, #30
   142d8:	movls	lr, #14
   142dc:	cmp	r0, r3
   142e0:	mov	r5, r1
   142e4:	ldrhi	r1, [r4, #24]
   142e8:	ldrls	r7, [r4, #24]
   142ec:	addhi	r7, r1, #1
   142f0:	lsr	r1, r3, #29
   142f4:	str	r3, [r4, #20]
   142f8:	add	lr, lr, #8
   142fc:	add	ip, ip, #8
   14300:	orr	r1, r1, r7, lsl #3
   14304:	lsl	r3, r3, #3
   14308:	strhi	r7, [r4, #24]
   1430c:	rev	r3, r3
   14310:	add	r7, r4, #32
   14314:	rev	r1, r1
   14318:	str	r1, [r4, lr, lsl #2]
   1431c:	sub	r2, r2, r0
   14320:	str	r3, [r4, ip, lsl #2]
   14324:	add	r0, r7, r0
   14328:	ldr	r1, [pc, #84]	; 14384 <dcngettext@plt+0x3394>
   1432c:	bl	10dc8 <memcpy@plt>
   14330:	mov	r0, r7
   14334:	mov	r2, r4
   14338:	mov	r1, r6
   1433c:	bl	12c6c <dcngettext@plt+0x1c7c>
   14340:	ldr	r3, [r4]
   14344:	mov	r0, r5
   14348:	rev	r3, r3
   1434c:	str	r3, [r5]
   14350:	ldr	r3, [r4, #4]
   14354:	rev	r3, r3
   14358:	str	r3, [r5, #4]
   1435c:	ldr	r3, [r4, #8]
   14360:	rev	r3, r3
   14364:	str	r3, [r5, #8]
   14368:	ldr	r3, [r4, #12]
   1436c:	rev	r3, r3
   14370:	str	r3, [r5, #12]
   14374:	ldr	r3, [r4, #16]
   14378:	rev	r3, r3
   1437c:	str	r3, [r5, #16]
   14380:	pop	{r4, r5, r6, r7, r8, pc}
   14384:	andeq	fp, r1, r4, ror #5
   14388:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1438c:	mov	r6, r2
   14390:	ldr	r4, [r2, #28]
   14394:	mov	r8, r0
   14398:	cmp	r4, #0
   1439c:	mov	r5, r1
   143a0:	bne	14490 <dcngettext@plt+0x34a0>
   143a4:	cmp	r5, #63	; 0x3f
   143a8:	bls	14480 <dcngettext@plt+0x3490>
   143ac:	tst	r8, #3
   143b0:	beq	14464 <dcngettext@plt+0x3474>
   143b4:	cmp	r5, #64	; 0x40
   143b8:	add	r7, r6, #32
   143bc:	beq	1443c <dcngettext@plt+0x344c>
   143c0:	mov	sl, r5
   143c4:	mov	r4, r8
   143c8:	mov	r9, #64	; 0x40
   143cc:	add	r2, r4, #64	; 0x40
   143d0:	mov	r3, r7
   143d4:	ldr	lr, [r4]
   143d8:	ldr	ip, [r4, #4]
   143dc:	ldr	r0, [r4, #8]
   143e0:	ldr	r1, [r4, #12]
   143e4:	add	r4, r4, #16
   143e8:	cmp	r4, r2
   143ec:	str	lr, [r3]
   143f0:	str	ip, [r3, #4]
   143f4:	str	r0, [r3, #8]
   143f8:	str	r1, [r3, #12]
   143fc:	add	r3, r3, #16
   14400:	bne	143d4 <dcngettext@plt+0x33e4>
   14404:	sub	sl, sl, #64	; 0x40
   14408:	mov	r2, r6
   1440c:	mov	r1, r9
   14410:	mov	r0, r7
   14414:	bl	12c6c <dcngettext@plt+0x1c7c>
   14418:	cmp	sl, #64	; 0x40
   1441c:	bhi	143cc <dcngettext@plt+0x33dc>
   14420:	sub	r3, r5, #65	; 0x41
   14424:	bic	r2, r3, #63	; 0x3f
   14428:	mov	r3, r2
   1442c:	sub	r5, r5, #64	; 0x40
   14430:	add	r2, r2, #64	; 0x40
   14434:	sub	r5, r5, r3
   14438:	add	r8, r8, r2
   1443c:	ldr	r4, [r6, #28]
   14440:	mov	r1, r8
   14444:	add	r0, r7, r4
   14448:	mov	r2, r5
   1444c:	add	r4, r4, r5
   14450:	bl	10dc8 <memcpy@plt>
   14454:	cmp	r4, #63	; 0x3f
   14458:	bhi	144d0 <dcngettext@plt+0x34e0>
   1445c:	str	r4, [r6, #28]
   14460:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14464:	bic	r4, r5, #63	; 0x3f
   14468:	mov	r0, r8
   1446c:	mov	r1, r4
   14470:	mov	r2, r6
   14474:	bl	12c6c <dcngettext@plt+0x1c7c>
   14478:	and	r5, r5, #63	; 0x3f
   1447c:	add	r8, r8, r4
   14480:	cmp	r5, #0
   14484:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14488:	add	r7, r6, #32
   1448c:	b	1443c <dcngettext@plt+0x344c>
   14490:	rsb	r7, r4, #128	; 0x80
   14494:	cmp	r7, r1
   14498:	movcs	r7, r1
   1449c:	add	r9, r2, #32
   144a0:	mov	r1, r8
   144a4:	mov	r2, r7
   144a8:	add	r0, r9, r4
   144ac:	bl	10dc8 <memcpy@plt>
   144b0:	ldr	r1, [r6, #28]
   144b4:	add	r1, r7, r1
   144b8:	cmp	r1, #64	; 0x40
   144bc:	str	r1, [r6, #28]
   144c0:	bhi	144fc <dcngettext@plt+0x350c>
   144c4:	add	r8, r8, r7
   144c8:	sub	r5, r5, r7
   144cc:	b	143a4 <dcngettext@plt+0x33b4>
   144d0:	sub	r4, r4, #64	; 0x40
   144d4:	mov	r2, r6
   144d8:	mov	r1, #64	; 0x40
   144dc:	mov	r0, r7
   144e0:	bl	12c6c <dcngettext@plt+0x1c7c>
   144e4:	mov	r0, r7
   144e8:	mov	r2, r4
   144ec:	add	r1, r6, #96	; 0x60
   144f0:	bl	10dc8 <memcpy@plt>
   144f4:	str	r4, [r6, #28]
   144f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144fc:	mov	r2, r6
   14500:	mov	r0, r9
   14504:	bic	r1, r1, #63	; 0x3f
   14508:	bl	12c6c <dcngettext@plt+0x1c7c>
   1450c:	ldr	r2, [r6, #28]
   14510:	add	r1, r4, r7
   14514:	and	r2, r2, #63	; 0x3f
   14518:	bic	r1, r1, #63	; 0x3f
   1451c:	add	r1, r9, r1
   14520:	mov	r0, r9
   14524:	str	r2, [r6, #28]
   14528:	bl	10dc8 <memcpy@plt>
   1452c:	b	144c4 <dcngettext@plt+0x34d4>
   14530:	push	{r4, r5, r6, r7, lr}
   14534:	sub	sp, sp, #164	; 0xa4
   14538:	ldr	r3, [pc, #268]	; 1464c <dcngettext@plt+0x365c>
   1453c:	ldr	r5, [pc, #268]	; 14650 <dcngettext@plt+0x3660>
   14540:	ldr	lr, [pc, #268]	; 14654 <dcngettext@plt+0x3664>
   14544:	ldr	ip, [pc, #268]	; 14658 <dcngettext@plt+0x3668>
   14548:	ldr	r6, [pc, #268]	; 1465c <dcngettext@plt+0x366c>
   1454c:	mov	r4, r2
   14550:	str	r3, [sp, #4]
   14554:	mov	r2, sp
   14558:	mov	r3, #0
   1455c:	str	r6, [sp]
   14560:	str	lr, [sp, #12]
   14564:	str	r5, [sp, #8]
   14568:	str	ip, [sp, #16]
   1456c:	str	r3, [sp, #24]
   14570:	str	r3, [sp, #20]
   14574:	str	r3, [sp, #28]
   14578:	bl	14388 <dcngettext@plt+0x3398>
   1457c:	ldr	r0, [sp, #28]
   14580:	ldr	r3, [sp, #20]
   14584:	cmp	r0, #55	; 0x37
   14588:	add	r3, r0, r3
   1458c:	movhi	r5, #128	; 0x80
   14590:	movls	r5, #64	; 0x40
   14594:	movhi	r2, #120	; 0x78
   14598:	movls	r2, #56	; 0x38
   1459c:	movhi	lr, #31
   145a0:	movls	lr, #15
   145a4:	movhi	r6, #30
   145a8:	movls	r6, #14
   145ac:	cmp	r0, r3
   145b0:	add	r7, sp, #160	; 0xa0
   145b4:	ldrhi	ip, [sp, #24]
   145b8:	ldrls	r1, [sp, #24]
   145bc:	str	r3, [sp, #20]
   145c0:	add	r6, r7, r6, lsl #2
   145c4:	addhi	r1, ip, #1
   145c8:	lsr	ip, r3, #29
   145cc:	strhi	r1, [sp, #24]
   145d0:	add	lr, r7, lr, lsl #2
   145d4:	orr	ip, ip, r1, lsl #3
   145d8:	lsl	r3, r3, #3
   145dc:	add	r1, sp, #32
   145e0:	rev	ip, ip
   145e4:	rev	r3, r3
   145e8:	sub	r2, r2, r0
   145ec:	add	r0, r1, r0
   145f0:	ldr	r1, [pc, #104]	; 14660 <dcngettext@plt+0x3670>
   145f4:	str	ip, [r6, #-128]	; 0xffffff80
   145f8:	str	r3, [lr, #-128]	; 0xffffff80
   145fc:	bl	10dc8 <memcpy@plt>
   14600:	mov	r2, sp
   14604:	mov	r1, r5
   14608:	add	r0, sp, #32
   1460c:	bl	12c6c <dcngettext@plt+0x1c7c>
   14610:	ldmib	sp, {r0, r1, r2, r3}
   14614:	ldr	ip, [sp]
   14618:	rev	r0, r0
   1461c:	rev	ip, ip
   14620:	rev	r1, r1
   14624:	rev	r2, r2
   14628:	rev	r3, r3
   1462c:	str	r0, [r4, #4]
   14630:	str	ip, [r4]
   14634:	mov	r0, r4
   14638:	str	r1, [r4, #8]
   1463c:	str	r2, [r4, #12]
   14640:	str	r3, [r4, #16]
   14644:	add	sp, sp, #164	; 0xa4
   14648:	pop	{r4, r5, r6, r7, pc}
   1464c:	svc	0x00cdab89
   14650:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   14654:	eorsne	r5, r2, r6, ror r4
   14658:	bicsgt	lr, r2, #240, 2	; 0x3c
   1465c:	strbvs	r2, [r5, -r1, lsl #6]
   14660:	andeq	fp, r1, r4, ror #5
   14664:	push	{r4, r5}
   14668:	pop	{r4, r5}
   1466c:	b	10d98 <posix_fadvise64@plt>
   14670:	cmp	r0, #0
   14674:	bxeq	lr
   14678:	push	{r4, lr}
   1467c:	sub	sp, sp, #16
   14680:	mov	r4, r1
   14684:	bl	10f30 <fileno@plt>
   14688:	mov	r2, #0
   1468c:	mov	r3, #0
   14690:	str	r4, [sp, #8]
   14694:	strd	r2, [sp]
   14698:	bl	10d98 <posix_fadvise64@plt>
   1469c:	add	sp, sp, #16
   146a0:	pop	{r4, pc}
   146a4:	push	{r4, r5, lr}
   146a8:	sub	sp, sp, #12
   146ac:	mov	r4, r0
   146b0:	bl	10f30 <fileno@plt>
   146b4:	cmp	r0, #0
   146b8:	mov	r0, r4
   146bc:	blt	14738 <dcngettext@plt+0x3748>
   146c0:	bl	10e94 <__freading@plt>
   146c4:	cmp	r0, #0
   146c8:	bne	14704 <dcngettext@plt+0x3714>
   146cc:	mov	r0, r4
   146d0:	bl	14744 <dcngettext@plt+0x3754>
   146d4:	cmp	r0, #0
   146d8:	beq	14734 <dcngettext@plt+0x3744>
   146dc:	bl	10ef4 <__errno_location@plt>
   146e0:	mov	r5, r0
   146e4:	mov	r0, r4
   146e8:	ldr	r4, [r5]
   146ec:	bl	10f48 <fclose@plt>
   146f0:	cmp	r4, #0
   146f4:	mvnne	r0, #0
   146f8:	strne	r4, [r5]
   146fc:	add	sp, sp, #12
   14700:	pop	{r4, r5, pc}
   14704:	mov	r0, r4
   14708:	bl	10f30 <fileno@plt>
   1470c:	mov	r3, #1
   14710:	str	r3, [sp]
   14714:	mov	r2, #0
   14718:	mov	r3, #0
   1471c:	bl	10e40 <lseek64@plt>
   14720:	mvn	r3, #0
   14724:	mvn	r2, #0
   14728:	cmp	r1, r3
   1472c:	cmpeq	r0, r2
   14730:	bne	146cc <dcngettext@plt+0x36dc>
   14734:	mov	r0, r4
   14738:	add	sp, sp, #12
   1473c:	pop	{r4, r5, lr}
   14740:	b	10f48 <fclose@plt>
   14744:	push	{r4, lr}
   14748:	subs	r4, r0, #0
   1474c:	sub	sp, sp, #8
   14750:	beq	1476c <dcngettext@plt+0x377c>
   14754:	bl	10e94 <__freading@plt>
   14758:	cmp	r0, #0
   1475c:	beq	1476c <dcngettext@plt+0x377c>
   14760:	ldr	r3, [r4]
   14764:	tst	r3, #256	; 0x100
   14768:	bne	1477c <dcngettext@plt+0x378c>
   1476c:	mov	r0, r4
   14770:	add	sp, sp, #8
   14774:	pop	{r4, lr}
   14778:	b	10da4 <fflush@plt>
   1477c:	mov	r3, #1
   14780:	str	r3, [sp]
   14784:	mov	r2, #0
   14788:	mov	r3, #0
   1478c:	mov	r0, r4
   14790:	bl	14894 <dcngettext@plt+0x38a4>
   14794:	mov	r0, r4
   14798:	add	sp, sp, #8
   1479c:	pop	{r4, lr}
   147a0:	b	10da4 <fflush@plt>
   147a4:	push	{r4, r5, r6, lr}
   147a8:	mov	r5, r1
   147ac:	bl	10fa8 <fopen64@plt>
   147b0:	subs	r4, r0, #0
   147b4:	beq	147c4 <dcngettext@plt+0x37d4>
   147b8:	bl	10f30 <fileno@plt>
   147bc:	cmp	r0, #2
   147c0:	bls	147cc <dcngettext@plt+0x37dc>
   147c4:	mov	r0, r4
   147c8:	pop	{r4, r5, r6, pc}
   147cc:	bl	18980 <dcngettext@plt+0x7990>
   147d0:	subs	r6, r0, #0
   147d4:	blt	1481c <dcngettext@plt+0x382c>
   147d8:	mov	r0, r4
   147dc:	bl	146a4 <dcngettext@plt+0x36b4>
   147e0:	cmp	r0, #0
   147e4:	bne	147fc <dcngettext@plt+0x380c>
   147e8:	mov	r1, r5
   147ec:	mov	r0, r6
   147f0:	bl	10d50 <fdopen@plt>
   147f4:	subs	r4, r0, #0
   147f8:	bne	147c4 <dcngettext@plt+0x37d4>
   147fc:	bl	10ef4 <__errno_location@plt>
   14800:	mov	r4, #0
   14804:	mov	r5, r0
   14808:	mov	r0, r6
   1480c:	ldr	r6, [r5]
   14810:	bl	10fe4 <close@plt>
   14814:	str	r6, [r5]
   14818:	b	147c4 <dcngettext@plt+0x37d4>
   1481c:	bl	10ef4 <__errno_location@plt>
   14820:	mov	r5, r0
   14824:	mov	r0, r4
   14828:	ldr	r6, [r5]
   1482c:	mov	r4, #0
   14830:	bl	146a4 <dcngettext@plt+0x36b4>
   14834:	str	r6, [r5]
   14838:	b	147c4 <dcngettext@plt+0x37d4>
   1483c:	push	{r4, r5, lr}
   14840:	sub	sp, sp, #12
   14844:	mov	r5, r0
   14848:	bl	10ef4 <__errno_location@plt>
   1484c:	mov	r2, #0
   14850:	mov	r4, r0
   14854:	ldr	r3, [r0]
   14858:	str	r2, [r4]
   1485c:	mov	r0, r5
   14860:	str	r3, [sp]
   14864:	str	r3, [sp, #4]
   14868:	bl	10db0 <free@plt>
   1486c:	ldr	r3, [r4]
   14870:	add	r2, sp, #8
   14874:	cmp	r3, #0
   14878:	moveq	r3, #4
   1487c:	movne	r3, #0
   14880:	add	r3, r2, r3
   14884:	ldr	r3, [r3, #-8]
   14888:	str	r3, [r4]
   1488c:	add	sp, sp, #12
   14890:	pop	{r4, r5, pc}
   14894:	push	{r4, r5, r6, r7, r8, lr}
   14898:	sub	sp, sp, #8
   1489c:	ldmib	r0, {ip, lr}
   148a0:	mov	r4, r0
   148a4:	ldr	r5, [sp, #32]
   148a8:	cmp	lr, ip
   148ac:	beq	148c4 <dcngettext@plt+0x38d4>
   148b0:	str	r5, [sp, #32]
   148b4:	mov	r0, r4
   148b8:	add	sp, sp, #8
   148bc:	pop	{r4, r5, r6, r7, r8, lr}
   148c0:	b	10f54 <fseeko64@plt>
   148c4:	ldr	lr, [r0, #20]
   148c8:	ldr	ip, [r0, #16]
   148cc:	cmp	lr, ip
   148d0:	bne	148b0 <dcngettext@plt+0x38c0>
   148d4:	ldr	r8, [r0, #36]	; 0x24
   148d8:	cmp	r8, #0
   148dc:	bne	148b0 <dcngettext@plt+0x38c0>
   148e0:	mov	r6, r2
   148e4:	mov	r7, r3
   148e8:	bl	10f30 <fileno@plt>
   148ec:	mov	r2, r6
   148f0:	mov	r3, r7
   148f4:	str	r5, [sp]
   148f8:	bl	10e40 <lseek64@plt>
   148fc:	mvn	r3, #0
   14900:	mvn	r2, #0
   14904:	cmp	r1, r3
   14908:	cmpeq	r0, r2
   1490c:	beq	1492c <dcngettext@plt+0x393c>
   14910:	ldr	r3, [r4]
   14914:	strd	r0, [r4, #80]	; 0x50
   14918:	mov	r0, r8
   1491c:	bic	r3, r3, #16
   14920:	str	r3, [r4]
   14924:	add	sp, sp, #8
   14928:	pop	{r4, r5, r6, r7, r8, pc}
   1492c:	mvn	r0, #0
   14930:	b	14924 <dcngettext@plt+0x3934>
   14934:	push	{r4, r5, r6, lr}
   14938:	subs	r4, r0, #0
   1493c:	beq	149b0 <dcngettext@plt+0x39c0>
   14940:	mov	r1, #47	; 0x2f
   14944:	bl	10f84 <strrchr@plt>
   14948:	subs	r5, r0, #0
   1494c:	beq	1499c <dcngettext@plt+0x39ac>
   14950:	add	r6, r5, #1
   14954:	sub	r3, r6, r4
   14958:	cmp	r3, #6
   1495c:	ble	1499c <dcngettext@plt+0x39ac>
   14960:	mov	r2, #7
   14964:	ldr	r1, [pc, #96]	; 149cc <dcngettext@plt+0x39dc>
   14968:	sub	r0, r5, #6
   1496c:	bl	10fcc <strncmp@plt>
   14970:	cmp	r0, #0
   14974:	bne	1499c <dcngettext@plt+0x39ac>
   14978:	mov	r2, #3
   1497c:	ldr	r1, [pc, #76]	; 149d0 <dcngettext@plt+0x39e0>
   14980:	mov	r0, r6
   14984:	bl	10fcc <strncmp@plt>
   14988:	cmp	r0, #0
   1498c:	movne	r4, r6
   14990:	ldreq	r3, [pc, #60]	; 149d4 <dcngettext@plt+0x39e4>
   14994:	addeq	r4, r5, #4
   14998:	streq	r4, [r3]
   1499c:	ldr	r2, [pc, #52]	; 149d8 <dcngettext@plt+0x39e8>
   149a0:	ldr	r3, [pc, #52]	; 149dc <dcngettext@plt+0x39ec>
   149a4:	str	r4, [r2]
   149a8:	str	r4, [r3]
   149ac:	pop	{r4, r5, r6, pc}
   149b0:	ldr	r3, [pc, #40]	; 149e0 <dcngettext@plt+0x39f0>
   149b4:	mov	r2, #55	; 0x37
   149b8:	mov	r1, #1
   149bc:	ldr	r3, [r3]
   149c0:	ldr	r0, [pc, #28]	; 149e4 <dcngettext@plt+0x39f4>
   149c4:	bl	10e34 <fwrite@plt>
   149c8:	bl	10fd8 <abort@plt>
   149cc:	andeq	fp, r1, ip, asr r3
   149d0:	andeq	fp, r1, r4, ror #6
   149d4:	andeq	ip, r2, r0, asr r1
   149d8:	andeq	ip, r2, ip, lsl #3
   149dc:	andeq	ip, r2, r4, asr r1
   149e0:	andeq	ip, r2, r0, ror #2
   149e4:	andeq	fp, r1, r4, lsr #6
   149e8:	push	{r4, r5, r6, lr}
   149ec:	mov	r4, r0
   149f0:	mov	r5, r1
   149f4:	bl	19d70 <dcngettext@plt+0x8d80>
   149f8:	ldrb	r3, [r0]
   149fc:	bic	r3, r3, #32
   14a00:	cmp	r3, #85	; 0x55
   14a04:	bne	14a64 <dcngettext@plt+0x3a74>
   14a08:	ldrb	r3, [r0, #1]
   14a0c:	bic	r3, r3, #32
   14a10:	cmp	r3, #84	; 0x54
   14a14:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a18:	ldrb	r3, [r0, #2]
   14a1c:	bic	r3, r3, #32
   14a20:	cmp	r3, #70	; 0x46
   14a24:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a28:	ldrb	r3, [r0, #3]
   14a2c:	cmp	r3, #45	; 0x2d
   14a30:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a34:	ldrb	r3, [r0, #4]
   14a38:	cmp	r3, #56	; 0x38
   14a3c:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a40:	ldrb	r3, [r0, #5]
   14a44:	cmp	r3, #0
   14a48:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a4c:	ldrb	r2, [r4]
   14a50:	ldr	r3, [pc, #152]	; 14af0 <dcngettext@plt+0x3b00>
   14a54:	ldr	r0, [pc, #152]	; 14af4 <dcngettext@plt+0x3b04>
   14a58:	cmp	r2, #96	; 0x60
   14a5c:	movne	r0, r3
   14a60:	pop	{r4, r5, r6, pc}
   14a64:	cmp	r3, #71	; 0x47
   14a68:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a6c:	ldrb	r3, [r0, #1]
   14a70:	bic	r3, r3, #32
   14a74:	cmp	r3, #66	; 0x42
   14a78:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a7c:	ldrb	r3, [r0, #2]
   14a80:	cmp	r3, #49	; 0x31
   14a84:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a88:	ldrb	r3, [r0, #3]
   14a8c:	cmp	r3, #56	; 0x38
   14a90:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14a94:	ldrb	r3, [r0, #4]
   14a98:	cmp	r3, #48	; 0x30
   14a9c:	beq	14ab4 <dcngettext@plt+0x3ac4>
   14aa0:	ldr	r3, [pc, #80]	; 14af8 <dcngettext@plt+0x3b08>
   14aa4:	cmp	r5, #9
   14aa8:	ldr	r0, [pc, #76]	; 14afc <dcngettext@plt+0x3b0c>
   14aac:	movne	r0, r3
   14ab0:	pop	{r4, r5, r6, pc}
   14ab4:	ldrb	r3, [r0, #5]
   14ab8:	cmp	r3, #51	; 0x33
   14abc:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14ac0:	ldrb	r3, [r0, #6]
   14ac4:	cmp	r3, #48	; 0x30
   14ac8:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14acc:	ldrb	r3, [r0, #7]
   14ad0:	cmp	r3, #0
   14ad4:	bne	14aa0 <dcngettext@plt+0x3ab0>
   14ad8:	ldrb	r2, [r4]
   14adc:	ldr	r3, [pc, #28]	; 14b00 <dcngettext@plt+0x3b10>
   14ae0:	ldr	r0, [pc, #28]	; 14b04 <dcngettext@plt+0x3b14>
   14ae4:	cmp	r2, #96	; 0x60
   14ae8:	movne	r0, r3
   14aec:	pop	{r4, r5, r6, pc}
   14af0:	andeq	fp, r1, r0, asr #7
   14af4:			; <UNDEFINED> instruction: 0x0001b3bc
   14af8:	ldrdeq	fp, [r1], -r0
   14afc:	andeq	fp, r1, ip, asr #7
   14b00:	andeq	fp, r1, r8, asr #7
   14b04:	andeq	fp, r1, r4, asr #7
   14b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b0c:	sub	sp, sp, #140	; 0x8c
   14b10:	mov	r9, r1
   14b14:	str	r3, [sp, #24]
   14b18:	mov	r3, #1
   14b1c:	mov	sl, r0
   14b20:	str	r2, [sp, #44]	; 0x2c
   14b24:	str	r3, [sp, #28]
   14b28:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   14b2c:	ldr	r3, [sp, #180]	; 0xb4
   14b30:	mov	fp, r9
   14b34:	mov	r9, sl
   14b38:	lsr	r3, r3, #1
   14b3c:	and	r3, r3, #1
   14b40:	str	r3, [sp, #40]	; 0x28
   14b44:	ldr	r3, [sp, #180]	; 0xb4
   14b48:	mov	r2, #0
   14b4c:	and	r3, r3, #4
   14b50:	str	r3, [sp, #100]	; 0x64
   14b54:	ldr	r3, [sp, #180]	; 0xb4
   14b58:	str	r2, [sp, #76]	; 0x4c
   14b5c:	and	r3, r3, #1
   14b60:	str	r3, [sp, #96]	; 0x60
   14b64:	str	r2, [sp, #36]	; 0x24
   14b68:	str	r2, [sp, #56]	; 0x38
   14b6c:	str	r2, [sp, #68]	; 0x44
   14b70:	str	r2, [sp, #72]	; 0x48
   14b74:	str	r2, [sp, #84]	; 0x54
   14b78:	str	r0, [sp, #80]	; 0x50
   14b7c:	ldr	r3, [sp, #176]	; 0xb0
   14b80:	cmp	r3, #10
   14b84:	ldrls	pc, [pc, r3, lsl #2]
   14b88:	b	15d60 <dcngettext@plt+0x4d70>
   14b8c:			; <UNDEFINED> instruction: 0x00014bb8
   14b90:	ldrdeq	r4, [r1], -r8
   14b94:	andeq	r5, r1, r0, lsr r0
   14b98:	andeq	r4, r1, ip, lsl #30
   14b9c:	andeq	r5, r1, r4, lsl #1
   14ba0:	andeq	r5, r1, r4, rrx
   14ba4:	andeq	r4, r1, ip, lsr #30
   14ba8:	andeq	r4, r1, r0, asr pc
   14bac:	andeq	r4, r1, r8, ror pc
   14bb0:	andeq	r4, r1, r8, ror pc
   14bb4:	andeq	r4, r1, r8, ror pc
   14bb8:	mov	r3, #0
   14bbc:	ldr	r1, [sp, #56]	; 0x38
   14bc0:	ldr	r2, [sp, #176]	; 0xb0
   14bc4:	ldr	lr, [sp, #176]	; 0xb0
   14bc8:	mov	r8, r3
   14bcc:	mov	ip, r3
   14bd0:	str	r3, [sp, #40]	; 0x28
   14bd4:	mov	r3, r1
   14bd8:	cmp	r2, #2
   14bdc:	moveq	r3, #0
   14be0:	andne	r3, r3, #1
   14be4:	mov	r0, r3
   14be8:	str	r3, [sp, #92]	; 0x5c
   14bec:	ldr	r3, [sp, #68]	; 0x44
   14bf0:	sub	lr, lr, #2
   14bf4:	adds	r2, r3, #0
   14bf8:	movne	r2, #1
   14bfc:	and	r3, r1, ip
   14c00:	and	r3, r2, r3
   14c04:	clz	lr, lr
   14c08:	str	r3, [sp, #88]	; 0x58
   14c0c:	lsr	lr, lr, #5
   14c10:	mov	r3, ip
   14c14:	and	r3, r3, lr
   14c18:	mov	sl, #0
   14c1c:	and	r0, r2, r0
   14c20:	str	r3, [sp, #64]	; 0x40
   14c24:	eor	r3, r1, #1
   14c28:	str	lr, [sp, #52]	; 0x34
   14c2c:	str	r0, [sp, #48]	; 0x30
   14c30:	str	r3, [sp, #60]	; 0x3c
   14c34:	ldr	r3, [sp, #24]
   14c38:	cmn	r3, #1
   14c3c:	beq	1516c <dcngettext@plt+0x417c>
   14c40:	subs	r7, r3, sl
   14c44:	movne	r7, #1
   14c48:	cmp	r7, #0
   14c4c:	beq	15184 <dcngettext@plt+0x4194>
   14c50:	ldr	r3, [sp, #48]	; 0x30
   14c54:	cmp	r3, #0
   14c58:	beq	154f0 <dcngettext@plt+0x4500>
   14c5c:	ldr	r2, [sp, #68]	; 0x44
   14c60:	ldr	r1, [sp, #24]
   14c64:	cmp	r2, #1
   14c68:	mov	r3, r2
   14c6c:	movls	r3, #0
   14c70:	movhi	r3, #1
   14c74:	cmn	r1, #1
   14c78:	movne	r3, #0
   14c7c:	cmp	r3, #0
   14c80:	add	r4, sl, r2
   14c84:	beq	14c94 <dcngettext@plt+0x3ca4>
   14c88:	ldr	r0, [sp, #44]	; 0x2c
   14c8c:	bl	10edc <strlen@plt>
   14c90:	str	r0, [sp, #24]
   14c94:	ldr	r3, [sp, #24]
   14c98:	cmp	r3, r4
   14c9c:	ldr	r3, [sp, #44]	; 0x2c
   14ca0:	add	r5, r3, sl
   14ca4:	bcc	154f8 <dcngettext@plt+0x4508>
   14ca8:	mov	r0, r5
   14cac:	ldr	r2, [sp, #68]	; 0x44
   14cb0:	ldr	r1, [sp, #72]	; 0x48
   14cb4:	bl	10dec <memcmp@plt>
   14cb8:	cmp	r0, #0
   14cbc:	bne	154f8 <dcngettext@plt+0x4508>
   14cc0:	ldr	r3, [sp, #40]	; 0x28
   14cc4:	cmp	r3, #0
   14cc8:	bne	15eb4 <dcngettext@plt+0x4ec4>
   14ccc:	ldrb	r4, [r5]
   14cd0:	cmp	r4, #126	; 0x7e
   14cd4:	ldrls	pc, [pc, r4, lsl #2]
   14cd8:	b	15df0 <dcngettext@plt+0x4e00>
   14cdc:			; <UNDEFINED> instruction: 0x000153b0
   14ce0:	strdeq	r5, [r1], -r0
   14ce4:	strdeq	r5, [r1], -r0
   14ce8:	strdeq	r5, [r1], -r0
   14cec:	strdeq	r5, [r1], -r0
   14cf0:	strdeq	r5, [r1], -r0
   14cf4:	strdeq	r5, [r1], -r0
   14cf8:	muleq	r1, ip, r3
   14cfc:	andeq	r5, r1, r8, lsl #7
   14d00:	andeq	r5, r1, r4, ror #6
   14d04:	andeq	r5, r1, r4, asr #6
   14d08:	andeq	r5, r1, r4, ror r3
   14d0c:	andeq	r5, r1, ip, lsr #5
   14d10:	andeq	r5, r1, r0, ror #9
   14d14:	strdeq	r5, [r1], -r0
   14d18:	strdeq	r5, [r1], -r0
   14d1c:	strdeq	r5, [r1], -r0
   14d20:	strdeq	r5, [r1], -r0
   14d24:	strdeq	r5, [r1], -r0
   14d28:	strdeq	r5, [r1], -r0
   14d2c:	strdeq	r5, [r1], -r0
   14d30:	strdeq	r5, [r1], -r0
   14d34:	strdeq	r5, [r1], -r0
   14d38:	strdeq	r5, [r1], -r0
   14d3c:	strdeq	r5, [r1], -r0
   14d40:	strdeq	r5, [r1], -r0
   14d44:	strdeq	r5, [r1], -r0
   14d48:	strdeq	r5, [r1], -r0
   14d4c:	strdeq	r5, [r1], -r0
   14d50:	strdeq	r5, [r1], -r0
   14d54:	strdeq	r5, [r1], -r0
   14d58:	strdeq	r5, [r1], -r0
   14d5c:	ldrdeq	r5, [r1], -r0
   14d60:			; <UNDEFINED> instruction: 0x000154b0
   14d64:			; <UNDEFINED> instruction: 0x000154b0
   14d68:	muleq	r1, r0, r4
   14d6c:			; <UNDEFINED> instruction: 0x000154b0
   14d70:	muleq	r1, ip, r2
   14d74:			; <UNDEFINED> instruction: 0x000154b0
   14d78:	andeq	r5, r1, r8, ror r2
   14d7c:			; <UNDEFINED> instruction: 0x000154b0
   14d80:			; <UNDEFINED> instruction: 0x000154b0
   14d84:			; <UNDEFINED> instruction: 0x000154b0
   14d88:	muleq	r1, ip, r2
   14d8c:	muleq	r1, ip, r2
   14d90:	muleq	r1, ip, r2
   14d94:	muleq	r1, ip, r2
   14d98:	muleq	r1, ip, r2
   14d9c:	muleq	r1, ip, r2
   14da0:	muleq	r1, ip, r2
   14da4:	muleq	r1, ip, r2
   14da8:	muleq	r1, ip, r2
   14dac:	muleq	r1, ip, r2
   14db0:	muleq	r1, ip, r2
   14db4:	muleq	r1, ip, r2
   14db8:	muleq	r1, ip, r2
   14dbc:	muleq	r1, ip, r2
   14dc0:	muleq	r1, ip, r2
   14dc4:	muleq	r1, ip, r2
   14dc8:			; <UNDEFINED> instruction: 0x000154b0
   14dcc:			; <UNDEFINED> instruction: 0x000154b0
   14dd0:			; <UNDEFINED> instruction: 0x000154b0
   14dd4:			; <UNDEFINED> instruction: 0x000154b0
   14dd8:	andeq	r5, r1, r8, lsr #4
   14ddc:	strdeq	r5, [r1], -r0
   14de0:	muleq	r1, ip, r2
   14de4:	muleq	r1, ip, r2
   14de8:	muleq	r1, ip, r2
   14dec:	muleq	r1, ip, r2
   14df0:	muleq	r1, ip, r2
   14df4:	muleq	r1, ip, r2
   14df8:	muleq	r1, ip, r2
   14dfc:	muleq	r1, ip, r2
   14e00:	muleq	r1, ip, r2
   14e04:	muleq	r1, ip, r2
   14e08:	muleq	r1, ip, r2
   14e0c:	muleq	r1, ip, r2
   14e10:	muleq	r1, ip, r2
   14e14:	muleq	r1, ip, r2
   14e18:	muleq	r1, ip, r2
   14e1c:	muleq	r1, ip, r2
   14e20:	muleq	r1, ip, r2
   14e24:	muleq	r1, ip, r2
   14e28:	muleq	r1, ip, r2
   14e2c:	muleq	r1, ip, r2
   14e30:	muleq	r1, ip, r2
   14e34:	muleq	r1, ip, r2
   14e38:	muleq	r1, ip, r2
   14e3c:	muleq	r1, ip, r2
   14e40:	muleq	r1, ip, r2
   14e44:	muleq	r1, ip, r2
   14e48:			; <UNDEFINED> instruction: 0x000154b0
   14e4c:	strdeq	r5, [r1], -r4
   14e50:	muleq	r1, ip, r2
   14e54:			; <UNDEFINED> instruction: 0x000154b0
   14e58:	muleq	r1, ip, r2
   14e5c:			; <UNDEFINED> instruction: 0x000154b0
   14e60:	muleq	r1, ip, r2
   14e64:	muleq	r1, ip, r2
   14e68:	muleq	r1, ip, r2
   14e6c:	muleq	r1, ip, r2
   14e70:	muleq	r1, ip, r2
   14e74:	muleq	r1, ip, r2
   14e78:	muleq	r1, ip, r2
   14e7c:	muleq	r1, ip, r2
   14e80:	muleq	r1, ip, r2
   14e84:	muleq	r1, ip, r2
   14e88:	muleq	r1, ip, r2
   14e8c:	muleq	r1, ip, r2
   14e90:	muleq	r1, ip, r2
   14e94:	muleq	r1, ip, r2
   14e98:	muleq	r1, ip, r2
   14e9c:	muleq	r1, ip, r2
   14ea0:	muleq	r1, ip, r2
   14ea4:	muleq	r1, ip, r2
   14ea8:	muleq	r1, ip, r2
   14eac:	muleq	r1, ip, r2
   14eb0:	muleq	r1, ip, r2
   14eb4:	muleq	r1, ip, r2
   14eb8:	muleq	r1, ip, r2
   14ebc:	muleq	r1, ip, r2
   14ec0:	muleq	r1, ip, r2
   14ec4:	muleq	r1, ip, r2
   14ec8:	andeq	r5, r1, ip, lsr #1
   14ecc:			; <UNDEFINED> instruction: 0x000154b0
   14ed0:	andeq	r5, r1, ip, lsr #1
   14ed4:	muleq	r1, r0, r4
   14ed8:	mov	r3, #1
   14edc:	str	r3, [sp, #40]	; 0x28
   14ee0:	str	r3, [sp, #68]	; 0x44
   14ee4:	mov	r8, #0
   14ee8:	ldr	r3, [pc, #4056]	; 15ec8 <dcngettext@plt+0x4ed8>
   14eec:	str	r3, [sp, #72]	; 0x48
   14ef0:	mov	r3, #2
   14ef4:	str	r3, [sp, #176]	; 0xb0
   14ef8:	ldr	r1, [sp, #56]	; 0x38
   14efc:	mov	r2, r3
   14f00:	ldr	ip, [sp, #40]	; 0x28
   14f04:	mov	lr, r3
   14f08:	b	14bd4 <dcngettext@plt+0x3be4>
   14f0c:	mov	r3, #1
   14f10:	str	r3, [sp, #56]	; 0x38
   14f14:	str	r3, [sp, #68]	; 0x44
   14f18:	str	r3, [sp, #40]	; 0x28
   14f1c:	ldr	r3, [pc, #4004]	; 15ec8 <dcngettext@plt+0x4ed8>
   14f20:	mov	r8, #0
   14f24:	str	r3, [sp, #72]	; 0x48
   14f28:	b	14ef0 <dcngettext@plt+0x3f00>
   14f2c:	mov	r3, #1
   14f30:	str	r3, [sp, #56]	; 0x38
   14f34:	str	r3, [sp, #68]	; 0x44
   14f38:	str	r3, [sp, #40]	; 0x28
   14f3c:	ldr	r3, [pc, #3976]	; 15ecc <dcngettext@plt+0x4edc>
   14f40:	mov	r8, #0
   14f44:	str	r3, [sp, #72]	; 0x48
   14f48:	mov	r3, #5
   14f4c:	b	14ef4 <dcngettext@plt+0x3f04>
   14f50:	mov	r3, #0
   14f54:	str	r3, [sp, #40]	; 0x28
   14f58:	mov	r3, #1
   14f5c:	str	r3, [sp, #56]	; 0x38
   14f60:	mov	r8, #0
   14f64:	mov	r1, r3
   14f68:	ldr	r2, [sp, #176]	; 0xb0
   14f6c:	ldr	ip, [sp, #40]	; 0x28
   14f70:	ldr	lr, [sp, #176]	; 0xb0
   14f74:	b	14bd4 <dcngettext@plt+0x3be4>
   14f78:	ldr	r3, [sp, #176]	; 0xb0
   14f7c:	cmp	r3, #10
   14f80:	beq	14fc4 <dcngettext@plt+0x3fd4>
   14f84:	mov	r2, #5
   14f88:	ldr	r1, [pc, #3904]	; 15ed0 <dcngettext@plt+0x4ee0>
   14f8c:	mov	r0, #0
   14f90:	bl	10e04 <dcgettext@plt>
   14f94:	ldr	r2, [pc, #3892]	; 15ed0 <dcngettext@plt+0x4ee0>
   14f98:	cmp	r0, r2
   14f9c:	str	r0, [sp, #188]	; 0xbc
   14fa0:	beq	1605c <dcngettext@plt+0x506c>
   14fa4:	mov	r2, #5
   14fa8:	ldr	r1, [pc, #3864]	; 15ec8 <dcngettext@plt+0x4ed8>
   14fac:	mov	r0, #0
   14fb0:	bl	10e04 <dcgettext@plt>
   14fb4:	ldr	r2, [pc, #3852]	; 15ec8 <dcngettext@plt+0x4ed8>
   14fb8:	cmp	r0, r2
   14fbc:	str	r0, [sp, #192]	; 0xc0
   14fc0:	beq	1604c <dcngettext@plt+0x505c>
   14fc4:	ldr	r8, [sp, #40]	; 0x28
   14fc8:	cmp	r8, #0
   14fcc:	movne	r8, #0
   14fd0:	bne	15000 <dcngettext@plt+0x4010>
   14fd4:	ldr	r3, [sp, #188]	; 0xbc
   14fd8:	ldrb	r3, [r3]
   14fdc:	cmp	r3, #0
   14fe0:	beq	15000 <dcngettext@plt+0x4010>
   14fe4:	ldr	r2, [sp, #188]	; 0xbc
   14fe8:	cmp	fp, r8
   14fec:	strbhi	r3, [r9, r8]
   14ff0:	ldrb	r3, [r2, #1]!
   14ff4:	add	r8, r8, #1
   14ff8:	cmp	r3, #0
   14ffc:	bne	14fe8 <dcngettext@plt+0x3ff8>
   15000:	ldr	r0, [sp, #192]	; 0xc0
   15004:	bl	10edc <strlen@plt>
   15008:	ldr	r3, [sp, #192]	; 0xc0
   1500c:	ldr	r2, [sp, #176]	; 0xb0
   15010:	str	r3, [sp, #72]	; 0x48
   15014:	mov	r3, #1
   15018:	str	r3, [sp, #56]	; 0x38
   1501c:	mov	r1, r3
   15020:	ldr	ip, [sp, #40]	; 0x28
   15024:	ldr	lr, [sp, #176]	; 0xb0
   15028:	str	r0, [sp, #68]	; 0x44
   1502c:	b	14bd4 <dcngettext@plt+0x3be4>
   15030:	ldr	r3, [sp, #40]	; 0x28
   15034:	cmp	r3, #0
   15038:	beq	15ce0 <dcngettext@plt+0x4cf0>
   1503c:	mov	r3, #1
   15040:	str	r3, [sp, #68]	; 0x44
   15044:	ldr	r3, [pc, #3708]	; 15ec8 <dcngettext@plt+0x4ed8>
   15048:	str	r3, [sp, #72]	; 0x48
   1504c:	mov	r8, #0
   15050:	ldr	r1, [sp, #56]	; 0x38
   15054:	ldr	r2, [sp, #176]	; 0xb0
   15058:	ldr	ip, [sp, #40]	; 0x28
   1505c:	ldr	lr, [sp, #176]	; 0xb0
   15060:	b	14bd4 <dcngettext@plt+0x3be4>
   15064:	ldr	r3, [sp, #40]	; 0x28
   15068:	cmp	r3, #0
   1506c:	beq	15d64 <dcngettext@plt+0x4d74>
   15070:	str	r3, [sp, #56]	; 0x38
   15074:	mov	r3, #1
   15078:	str	r3, [sp, #68]	; 0x44
   1507c:	ldr	r3, [pc, #3656]	; 15ecc <dcngettext@plt+0x4edc>
   15080:	b	15048 <dcngettext@plt+0x4058>
   15084:	ldr	r3, [sp, #40]	; 0x28
   15088:	cmp	r3, #0
   1508c:	mov	r3, #1
   15090:	streq	r3, [sp, #56]	; 0x38
   15094:	beq	15ce0 <dcngettext@plt+0x4cf0>
   15098:	str	r3, [sp, #68]	; 0x44
   1509c:	ldr	r3, [pc, #3620]	; 15ec8 <dcngettext@plt+0x4ed8>
   150a0:	mov	r8, #0
   150a4:	str	r3, [sp, #72]	; 0x48
   150a8:	b	14ef0 <dcngettext@plt+0x3f00>
   150ac:	ldr	r3, [sp, #24]
   150b0:	ldr	r6, [sp, #48]	; 0x30
   150b4:	cmn	r3, #1
   150b8:	beq	15714 <dcngettext@plt+0x4724>
   150bc:	subs	r3, r3, #1
   150c0:	movne	r3, #1
   150c4:	cmp	r3, #0
   150c8:	beq	15494 <dcngettext@plt+0x44a4>
   150cc:	ldr	r1, [sp, #52]	; 0x34
   150d0:	mov	r7, r3
   150d4:	mov	r3, #0
   150d8:	str	r3, [sp, #32]
   150dc:	ldr	r3, [sp, #60]	; 0x3c
   150e0:	orr	r2, r1, r3
   150e4:	ldr	r3, [sp, #40]	; 0x28
   150e8:	eor	r2, r2, #1
   150ec:	orr	r2, r3, r2
   150f0:	tst	r2, #255	; 0xff
   150f4:	bne	15a18 <dcngettext@plt+0x4a28>
   150f8:	cmp	r6, #0
   150fc:	bne	152d8 <dcngettext@plt+0x42e8>
   15100:	ldr	r3, [sp, #36]	; 0x24
   15104:	add	sl, sl, #1
   15108:	and	r3, r3, r7
   1510c:	uxtb	r6, r3
   15110:	cmp	r6, #0
   15114:	beq	15140 <dcngettext@plt+0x4150>
   15118:	cmp	fp, r8
   1511c:	movhi	r3, #39	; 0x27
   15120:	strbhi	r3, [r9, r8]
   15124:	add	r3, r8, #1
   15128:	cmp	fp, r3
   1512c:	movhi	r2, #39	; 0x27
   15130:	add	r8, r8, #2
   15134:	strbhi	r2, [r9, r3]
   15138:	mov	r3, #0
   1513c:	str	r3, [sp, #36]	; 0x24
   15140:	ldr	r2, [sp, #32]
   15144:	cmp	r8, fp
   15148:	ldr	r3, [sp, #28]
   1514c:	strbcc	r4, [r9, r8]
   15150:	cmp	r2, #0
   15154:	moveq	r3, #0
   15158:	str	r3, [sp, #28]
   1515c:	ldr	r3, [sp, #24]
   15160:	add	r8, r8, #1
   15164:	cmn	r3, #1
   15168:	bne	14c40 <dcngettext@plt+0x3c50>
   1516c:	ldr	r3, [sp, #44]	; 0x2c
   15170:	ldrb	r3, [r3, sl]
   15174:	adds	r7, r3, #0
   15178:	movne	r7, #1
   1517c:	cmp	r7, #0
   15180:	bne	14c50 <dcngettext@plt+0x3c60>
   15184:	ldr	r3, [sp, #64]	; 0x40
   15188:	cmp	r8, #0
   1518c:	movne	r3, #0
   15190:	andeq	r3, r3, #1
   15194:	cmp	r3, #0
   15198:	str	r3, [sp, #64]	; 0x40
   1519c:	bne	15c40 <dcngettext@plt+0x4c50>
   151a0:	ldr	r3, [sp, #40]	; 0x28
   151a4:	ldr	r2, [sp, #52]	; 0x34
   151a8:	eor	r3, r3, #1
   151ac:	ands	r2, r2, r3
   151b0:	beq	1606c <dcngettext@plt+0x507c>
   151b4:	ldr	r3, [sp, #76]	; 0x4c
   151b8:	cmp	r3, #0
   151bc:	beq	1603c <dcngettext@plt+0x504c>
   151c0:	ldr	r3, [sp, #28]
   151c4:	cmp	r3, #0
   151c8:	bne	15ff8 <dcngettext@plt+0x5008>
   151cc:	ldr	r2, [sp, #84]	; 0x54
   151d0:	clz	r3, fp
   151d4:	cmp	r2, #0
   151d8:	lsr	r3, r3, #5
   151dc:	moveq	r3, #0
   151e0:	cmp	r3, #0
   151e4:	beq	15f98 <dcngettext@plt+0x4fa8>
   151e8:	mov	fp, r2
   151ec:	str	r3, [sp, #76]	; 0x4c
   151f0:	b	14b7c <dcngettext@plt+0x3b8c>
   151f4:	ldr	r3, [sp, #176]	; 0xb0
   151f8:	ldr	r6, [sp, #48]	; 0x30
   151fc:	cmp	r3, #2
   15200:	beq	15738 <dcngettext@plt+0x4748>
   15204:	ldr	r3, [sp, #88]	; 0x58
   15208:	cmp	r3, #0
   1520c:	beq	15cbc <dcngettext@plt+0x4ccc>
   15210:	mov	r3, #0
   15214:	add	sl, sl, #1
   15218:	ldr	r6, [sp, #36]	; 0x24
   1521c:	str	r3, [sp, #32]
   15220:	mov	r4, #92	; 0x5c
   15224:	b	15110 <dcngettext@plt+0x4120>
   15228:	ldr	r3, [sp, #176]	; 0xb0
   1522c:	ldr	r6, [sp, #48]	; 0x30
   15230:	cmp	r3, #2
   15234:	beq	15768 <dcngettext@plt+0x4778>
   15238:	cmp	r3, #5
   1523c:	bne	15ccc <dcngettext@plt+0x4cdc>
   15240:	ldr	r3, [sp, #100]	; 0x64
   15244:	cmp	r3, #0
   15248:	beq	15d30 <dcngettext@plt+0x4d40>
   1524c:	ldr	r2, [sp, #24]
   15250:	add	r3, sl, #2
   15254:	cmp	r2, r3
   15258:	bls	15268 <dcngettext@plt+0x4278>
   1525c:	ldrb	r4, [r5, #1]
   15260:	cmp	r4, #63	; 0x3f
   15264:	beq	15ed8 <dcngettext@plt+0x4ee8>
   15268:	mov	r1, #0
   1526c:	str	r1, [sp, #32]
   15270:	mov	r4, #63	; 0x3f
   15274:	b	150dc <dcngettext@plt+0x40ec>
   15278:	ldr	r3, [sp, #176]	; 0xb0
   1527c:	ldr	r6, [sp, #48]	; 0x30
   15280:	cmp	r3, #2
   15284:	beq	15794 <dcngettext@plt+0x47a4>
   15288:	str	r7, [sp, #32]
   1528c:	str	r7, [sp, #76]	; 0x4c
   15290:	mov	r1, #0
   15294:	mov	r4, #39	; 0x27
   15298:	b	150dc <dcngettext@plt+0x40ec>
   1529c:	ldr	r6, [sp, #48]	; 0x30
   152a0:	ldr	r1, [sp, #52]	; 0x34
   152a4:	str	r7, [sp, #32]
   152a8:	b	150dc <dcngettext@plt+0x40ec>
   152ac:	ldr	r6, [sp, #48]	; 0x30
   152b0:	ldr	r1, [sp, #52]	; 0x34
   152b4:	mov	r4, #12
   152b8:	mov	r3, #102	; 0x66
   152bc:	ldr	r2, [sp, #56]	; 0x38
   152c0:	cmp	r2, #0
   152c4:	streq	r2, [sp, #32]
   152c8:	beq	150dc <dcngettext@plt+0x40ec>
   152cc:	mov	r4, r3
   152d0:	mov	r3, #0
   152d4:	str	r3, [sp, #32]
   152d8:	ldr	r3, [sp, #40]	; 0x28
   152dc:	cmp	r3, #0
   152e0:	bne	15a50 <dcngettext@plt+0x4a60>
   152e4:	ldr	r3, [sp, #36]	; 0x24
   152e8:	eor	r3, r3, #1
   152ec:	and	r3, r3, r1
   152f0:	ands	r3, r3, #255	; 0xff
   152f4:	beq	1532c <dcngettext@plt+0x433c>
   152f8:	cmp	fp, r8
   152fc:	movhi	r2, #39	; 0x27
   15300:	strbhi	r2, [r9, r8]
   15304:	add	r2, r8, #1
   15308:	cmp	fp, r2
   1530c:	movhi	r1, #36	; 0x24
   15310:	strbhi	r1, [r9, r2]
   15314:	add	r2, r8, #2
   15318:	cmp	fp, r2
   1531c:	add	r8, r8, #3
   15320:	movhi	r1, #39	; 0x27
   15324:	strbhi	r1, [r9, r2]
   15328:	str	r3, [sp, #36]	; 0x24
   1532c:	cmp	fp, r8
   15330:	movhi	r3, #92	; 0x5c
   15334:	strbhi	r3, [r9, r8]
   15338:	add	sl, sl, #1
   1533c:	add	r8, r8, #1
   15340:	b	15140 <dcngettext@plt+0x4150>
   15344:	ldr	r6, [sp, #48]	; 0x30
   15348:	mov	r4, #10
   1534c:	mov	r3, #110	; 0x6e
   15350:	ldr	r2, [sp, #64]	; 0x40
   15354:	cmp	r2, #0
   15358:	bne	15dd8 <dcngettext@plt+0x4de8>
   1535c:	ldr	r1, [sp, #52]	; 0x34
   15360:	b	152bc <dcngettext@plt+0x42cc>
   15364:	ldr	r6, [sp, #48]	; 0x30
   15368:	ldr	r1, [sp, #52]	; 0x34
   1536c:	mov	r3, #116	; 0x74
   15370:	b	152bc <dcngettext@plt+0x42cc>
   15374:	ldr	r6, [sp, #48]	; 0x30
   15378:	ldr	r1, [sp, #52]	; 0x34
   1537c:	mov	r4, #11
   15380:	mov	r3, #118	; 0x76
   15384:	b	152bc <dcngettext@plt+0x42cc>
   15388:	ldr	r6, [sp, #48]	; 0x30
   1538c:	ldr	r1, [sp, #52]	; 0x34
   15390:	mov	r4, #8
   15394:	mov	r3, #98	; 0x62
   15398:	b	152bc <dcngettext@plt+0x42cc>
   1539c:	ldr	r6, [sp, #48]	; 0x30
   153a0:	ldr	r1, [sp, #52]	; 0x34
   153a4:	mov	r4, #7
   153a8:	mov	r3, #97	; 0x61
   153ac:	b	152bc <dcngettext@plt+0x42cc>
   153b0:	ldr	r3, [sp, #56]	; 0x38
   153b4:	ldr	r6, [sp, #48]	; 0x30
   153b8:	cmp	r3, #0
   153bc:	beq	15880 <dcngettext@plt+0x4890>
   153c0:	ldr	r3, [sp, #40]	; 0x28
   153c4:	cmp	r3, #0
   153c8:	bne	15eb4 <dcngettext@plt+0x4ec4>
   153cc:	ldr	r3, [sp, #36]	; 0x24
   153d0:	ldr	r2, [sp, #52]	; 0x34
   153d4:	eor	r3, r3, #1
   153d8:	ands	r3, r2, r3
   153dc:	moveq	r2, r8
   153e0:	beq	15418 <dcngettext@plt+0x4428>
   153e4:	cmp	fp, r8
   153e8:	movhi	r2, #39	; 0x27
   153ec:	strbhi	r2, [r9, r8]
   153f0:	add	r2, r8, #1
   153f4:	cmp	fp, r2
   153f8:	movhi	r1, #36	; 0x24
   153fc:	strbhi	r1, [r9, r2]
   15400:	add	r2, r8, #2
   15404:	cmp	fp, r2
   15408:	movhi	r1, #39	; 0x27
   1540c:	strbhi	r1, [r9, r2]
   15410:	add	r2, r8, #3
   15414:	str	r3, [sp, #36]	; 0x24
   15418:	cmp	fp, r2
   1541c:	movhi	r3, #92	; 0x5c
   15420:	strbhi	r3, [r9, r2]
   15424:	ldr	r3, [sp, #92]	; 0x5c
   15428:	add	r8, r2, #1
   1542c:	cmp	r3, #0
   15430:	beq	15db4 <dcngettext@plt+0x4dc4>
   15434:	ldr	r1, [sp, #24]
   15438:	add	r3, sl, #1
   1543c:	cmp	r1, r3
   15440:	bls	15478 <dcngettext@plt+0x4488>
   15444:	ldr	r1, [sp, #44]	; 0x2c
   15448:	ldrb	r3, [r1, r3]
   1544c:	sub	r3, r3, #48	; 0x30
   15450:	cmp	r3, #9
   15454:	bhi	15478 <dcngettext@plt+0x4488>
   15458:	cmp	fp, r8
   1545c:	movhi	r3, #48	; 0x30
   15460:	strbhi	r3, [r9, r8]
   15464:	add	r3, r2, #2
   15468:	cmp	fp, r3
   1546c:	add	r8, r2, #3
   15470:	movhi	r1, #48	; 0x30
   15474:	strbhi	r1, [r9, r3]
   15478:	ldr	r3, [sp, #40]	; 0x28
   1547c:	ldr	r1, [sp, #52]	; 0x34
   15480:	mov	r7, r3
   15484:	str	r3, [sp, #32]
   15488:	mov	r4, #48	; 0x30
   1548c:	b	150dc <dcngettext@plt+0x40ec>
   15490:	ldr	r6, [sp, #48]	; 0x30
   15494:	cmp	sl, #0
   15498:	streq	r7, [sp, #32]
   1549c:	beq	154bc <dcngettext@plt+0x44cc>
   154a0:	mov	r3, #0
   154a4:	ldr	r1, [sp, #52]	; 0x34
   154a8:	str	r3, [sp, #32]
   154ac:	b	150dc <dcngettext@plt+0x40ec>
   154b0:	ldr	r6, [sp, #48]	; 0x30
   154b4:	mov	r3, #0
   154b8:	str	r3, [sp, #32]
   154bc:	ldr	r3, [sp, #64]	; 0x40
   154c0:	cmp	r3, #0
   154c4:	bne	15c40 <dcngettext@plt+0x4c50>
   154c8:	ldr	r1, [sp, #52]	; 0x34
   154cc:	b	150dc <dcngettext@plt+0x40ec>
   154d0:	ldr	r3, [sp, #48]	; 0x30
   154d4:	mov	r6, r3
   154d8:	str	r3, [sp, #32]
   154dc:	b	154bc <dcngettext@plt+0x44cc>
   154e0:	ldr	r6, [sp, #48]	; 0x30
   154e4:	mov	r4, #13
   154e8:	mov	r3, #114	; 0x72
   154ec:	b	15350 <dcngettext@plt+0x4360>
   154f0:	ldr	r3, [sp, #44]	; 0x2c
   154f4:	add	r5, r3, sl
   154f8:	ldrb	r4, [r5]
   154fc:	cmp	r4, #126	; 0x7e
   15500:	ldrls	pc, [pc, r4, lsl #2]
   15504:	b	158a0 <dcngettext@plt+0x48b0>
   15508:	andeq	r5, r1, r0, ror r8
   1550c:	andeq	r5, r1, r0, lsr #17
   15510:	andeq	r5, r1, r0, lsr #17
   15514:	andeq	r5, r1, r0, lsr #17
   15518:	andeq	r5, r1, r0, lsr #17
   1551c:	andeq	r5, r1, r0, lsr #17
   15520:	andeq	r5, r1, r0, lsr #17
   15524:	andeq	r5, r1, r8, ror #16
   15528:	andeq	r5, r1, r0, ror #16
   1552c:	andeq	r5, r1, r4, asr r8
   15530:	andeq	r5, r1, ip, asr #16
   15534:	andeq	r5, r1, r4, asr #16
   15538:	andeq	r5, r1, ip, lsr r8
   1553c:	andeq	r5, r1, r4, lsr r8
   15540:	andeq	r5, r1, r0, lsr #17
   15544:	andeq	r5, r1, r0, lsr #17
   15548:	andeq	r5, r1, r0, lsr #17
   1554c:	andeq	r5, r1, r0, lsr #17
   15550:	andeq	r5, r1, r0, lsr #17
   15554:	andeq	r5, r1, r0, lsr #17
   15558:	andeq	r5, r1, r0, lsr #17
   1555c:	andeq	r5, r1, r0, lsr #17
   15560:	andeq	r5, r1, r0, lsr #17
   15564:	andeq	r5, r1, r0, lsr #17
   15568:	andeq	r5, r1, r0, lsr #17
   1556c:	andeq	r5, r1, r0, lsr #17
   15570:	andeq	r5, r1, r0, lsr #17
   15574:	andeq	r5, r1, r0, lsr #17
   15578:	andeq	r5, r1, r0, lsr #17
   1557c:	andeq	r5, r1, r0, lsr #17
   15580:	andeq	r5, r1, r0, lsr #17
   15584:	andeq	r5, r1, r0, lsr #17
   15588:	andeq	r5, r1, r8, lsr #16
   1558c:	andeq	r5, r1, r0, lsr #16
   15590:	andeq	r5, r1, r0, lsr #16
   15594:	andeq	r5, r1, r8, lsl r8
   15598:	andeq	r5, r1, r0, lsr #16
   1559c:	andeq	r5, r1, r0, lsl r8
   155a0:	andeq	r5, r1, r0, lsr #16
   155a4:	andeq	r5, r1, r4, lsl #15
   155a8:	andeq	r5, r1, r0, lsr #16
   155ac:	andeq	r5, r1, r0, lsr #16
   155b0:	andeq	r5, r1, r0, lsr #16
   155b4:	andeq	r5, r1, r0, lsl r8
   155b8:	andeq	r5, r1, r0, lsl r8
   155bc:	andeq	r5, r1, r0, lsl r8
   155c0:	andeq	r5, r1, r0, lsl r8
   155c4:	andeq	r5, r1, r0, lsl r8
   155c8:	andeq	r5, r1, r0, lsl r8
   155cc:	andeq	r5, r1, r0, lsl r8
   155d0:	andeq	r5, r1, r0, lsl r8
   155d4:	andeq	r5, r1, r0, lsl r8
   155d8:	andeq	r5, r1, r0, lsl r8
   155dc:	andeq	r5, r1, r0, lsl r8
   155e0:	andeq	r5, r1, r0, lsl r8
   155e4:	andeq	r5, r1, r0, lsl r8
   155e8:	andeq	r5, r1, r0, lsl r8
   155ec:	andeq	r5, r1, r0, lsl r8
   155f0:	andeq	r5, r1, r0, lsl r8
   155f4:	andeq	r5, r1, r0, lsr #16
   155f8:	andeq	r5, r1, r0, lsr #16
   155fc:	andeq	r5, r1, r0, lsr #16
   15600:	andeq	r5, r1, r0, lsr #16
   15604:	andeq	r5, r1, r8, asr r7
   15608:	andeq	r5, r1, r0, lsr #17
   1560c:	andeq	r5, r1, r0, lsl r8
   15610:	andeq	r5, r1, r0, lsl r8
   15614:	andeq	r5, r1, r0, lsl r8
   15618:	andeq	r5, r1, r0, lsl r8
   1561c:	andeq	r5, r1, r0, lsl r8
   15620:	andeq	r5, r1, r0, lsl r8
   15624:	andeq	r5, r1, r0, lsl r8
   15628:	andeq	r5, r1, r0, lsl r8
   1562c:	andeq	r5, r1, r0, lsl r8
   15630:	andeq	r5, r1, r0, lsl r8
   15634:	andeq	r5, r1, r0, lsl r8
   15638:	andeq	r5, r1, r0, lsl r8
   1563c:	andeq	r5, r1, r0, lsl r8
   15640:	andeq	r5, r1, r0, lsl r8
   15644:	andeq	r5, r1, r0, lsl r8
   15648:	andeq	r5, r1, r0, lsl r8
   1564c:	andeq	r5, r1, r0, lsl r8
   15650:	andeq	r5, r1, r0, lsl r8
   15654:	andeq	r5, r1, r0, lsl r8
   15658:	andeq	r5, r1, r0, lsl r8
   1565c:	andeq	r5, r1, r0, lsl r8
   15660:	andeq	r5, r1, r0, lsl r8
   15664:	andeq	r5, r1, r0, lsl r8
   15668:	andeq	r5, r1, r0, lsl r8
   1566c:	andeq	r5, r1, r0, lsl r8
   15670:	andeq	r5, r1, r0, lsl r8
   15674:	andeq	r5, r1, r0, lsr #16
   15678:	andeq	r5, r1, r8, lsr #14
   1567c:	andeq	r5, r1, r0, lsl r8
   15680:	andeq	r5, r1, r0, lsr #16
   15684:	andeq	r5, r1, r0, lsl r8
   15688:	andeq	r5, r1, r0, lsr #16
   1568c:	andeq	r5, r1, r0, lsl r8
   15690:	andeq	r5, r1, r0, lsl r8
   15694:	andeq	r5, r1, r0, lsl r8
   15698:	andeq	r5, r1, r0, lsl r8
   1569c:	andeq	r5, r1, r0, lsl r8
   156a0:	andeq	r5, r1, r0, lsl r8
   156a4:	andeq	r5, r1, r0, lsl r8
   156a8:	andeq	r5, r1, r0, lsl r8
   156ac:	andeq	r5, r1, r0, lsl r8
   156b0:	andeq	r5, r1, r0, lsl r8
   156b4:	andeq	r5, r1, r0, lsl r8
   156b8:	andeq	r5, r1, r0, lsl r8
   156bc:	andeq	r5, r1, r0, lsl r8
   156c0:	andeq	r5, r1, r0, lsl r8
   156c4:	andeq	r5, r1, r0, lsl r8
   156c8:	andeq	r5, r1, r0, lsl r8
   156cc:	andeq	r5, r1, r0, lsl r8
   156d0:	andeq	r5, r1, r0, lsl r8
   156d4:	andeq	r5, r1, r0, lsl r8
   156d8:	andeq	r5, r1, r0, lsl r8
   156dc:	andeq	r5, r1, r0, lsl r8
   156e0:	andeq	r5, r1, r0, lsl r8
   156e4:	andeq	r5, r1, r0, lsl r8
   156e8:	andeq	r5, r1, r0, lsl r8
   156ec:	andeq	r5, r1, r0, lsl r8
   156f0:	andeq	r5, r1, r0, lsl r8
   156f4:	andeq	r5, r1, r4, lsl #14
   156f8:	andeq	r5, r1, r0, lsr #16
   156fc:	andeq	r5, r1, r4, lsl #14
   15700:	andeq	r5, r1, r8, lsl r8
   15704:	ldr	r3, [sp, #24]
   15708:	mov	r6, #0
   1570c:	cmn	r3, #1
   15710:	bne	150bc <dcngettext@plt+0x40cc>
   15714:	ldr	r3, [sp, #44]	; 0x2c
   15718:	ldrb	r3, [r3, #1]
   1571c:	adds	r3, r3, #0
   15720:	movne	r3, #1
   15724:	b	150c4 <dcngettext@plt+0x40d4>
   15728:	ldr	r3, [sp, #176]	; 0xb0
   1572c:	mov	r6, #0
   15730:	cmp	r3, #2
   15734:	bne	15204 <dcngettext@plt+0x4214>
   15738:	ldr	r3, [sp, #64]	; 0x40
   1573c:	cmp	r3, #0
   15740:	bne	15f78 <dcngettext@plt+0x4f88>
   15744:	add	sl, sl, #1
   15748:	ldr	r6, [sp, #36]	; 0x24
   1574c:	str	r3, [sp, #32]
   15750:	mov	r4, #92	; 0x5c
   15754:	b	15110 <dcngettext@plt+0x4120>
   15758:	ldr	r3, [sp, #176]	; 0xb0
   1575c:	mov	r6, #0
   15760:	cmp	r3, #2
   15764:	bne	15238 <dcngettext@plt+0x4248>
   15768:	ldr	r3, [sp, #40]	; 0x28
   1576c:	cmp	r3, #0
   15770:	bne	15a54 <dcngettext@plt+0x4a64>
   15774:	mov	r1, r7
   15778:	str	r3, [sp, #32]
   1577c:	mov	r4, #63	; 0x3f
   15780:	b	150dc <dcngettext@plt+0x40ec>
   15784:	ldr	r3, [sp, #176]	; 0xb0
   15788:	mov	r6, #0
   1578c:	cmp	r3, #2
   15790:	bne	15288 <dcngettext@plt+0x4298>
   15794:	ldr	r3, [sp, #64]	; 0x40
   15798:	cmp	r3, #0
   1579c:	bne	15f78 <dcngettext@plt+0x4f88>
   157a0:	ldr	r2, [sp, #84]	; 0x54
   157a4:	adds	r3, fp, #0
   157a8:	movne	r3, #1
   157ac:	cmp	r2, #0
   157b0:	movne	r3, #0
   157b4:	cmp	r3, #0
   157b8:	strne	fp, [sp, #84]	; 0x54
   157bc:	movne	fp, #0
   157c0:	bne	157f0 <dcngettext@plt+0x4800>
   157c4:	cmp	fp, r8
   157c8:	movhi	r3, #39	; 0x27
   157cc:	strbhi	r3, [r9, r8]
   157d0:	add	r3, r8, #1
   157d4:	cmp	fp, r3
   157d8:	movhi	r2, #92	; 0x5c
   157dc:	strbhi	r2, [r9, r3]
   157e0:	add	r3, r8, #2
   157e4:	cmp	fp, r3
   157e8:	movhi	r2, #39	; 0x27
   157ec:	strbhi	r2, [r9, r3]
   157f0:	ldr	r3, [sp, #64]	; 0x40
   157f4:	add	r8, r8, #3
   157f8:	mov	r1, r7
   157fc:	str	r7, [sp, #32]
   15800:	str	r7, [sp, #76]	; 0x4c
   15804:	str	r3, [sp, #36]	; 0x24
   15808:	mov	r4, #39	; 0x27
   1580c:	b	150dc <dcngettext@plt+0x40ec>
   15810:	mov	r6, #0
   15814:	b	152a0 <dcngettext@plt+0x42b0>
   15818:	mov	r6, #0
   1581c:	b	15494 <dcngettext@plt+0x44a4>
   15820:	mov	r6, #0
   15824:	b	154b4 <dcngettext@plt+0x44c4>
   15828:	str	r7, [sp, #32]
   1582c:	mov	r6, #0
   15830:	b	154bc <dcngettext@plt+0x44cc>
   15834:	mov	r6, #0
   15838:	b	154e4 <dcngettext@plt+0x44f4>
   1583c:	mov	r6, #0
   15840:	b	152b0 <dcngettext@plt+0x42c0>
   15844:	mov	r6, #0
   15848:	b	15378 <dcngettext@plt+0x4388>
   1584c:	mov	r6, #0
   15850:	b	15348 <dcngettext@plt+0x4358>
   15854:	mov	r6, #0
   15858:	mov	r3, #116	; 0x74
   1585c:	b	15350 <dcngettext@plt+0x4360>
   15860:	mov	r6, #0
   15864:	b	1538c <dcngettext@plt+0x439c>
   15868:	mov	r6, #0
   1586c:	b	153a0 <dcngettext@plt+0x43b0>
   15870:	ldr	r3, [sp, #56]	; 0x38
   15874:	mov	r6, #0
   15878:	cmp	r3, #0
   1587c:	bne	153c0 <dcngettext@plt+0x43d0>
   15880:	ldr	r3, [sp, #96]	; 0x60
   15884:	cmp	r3, #0
   15888:	addne	sl, sl, #1
   1588c:	bne	14c34 <dcngettext@plt+0x3c44>
   15890:	ldr	r1, [sp, #52]	; 0x34
   15894:	str	r3, [sp, #32]
   15898:	mov	r4, r3
   1589c:	b	150dc <dcngettext@plt+0x40ec>
   158a0:	mov	r6, #0
   158a4:	ldr	r3, [sp, #80]	; 0x50
   158a8:	cmp	r3, #1
   158ac:	bne	15a9c <dcngettext@plt+0x4aac>
   158b0:	bl	10ec4 <__ctype_b_loc@plt>
   158b4:	ldr	r2, [sp, #80]	; 0x50
   158b8:	sxth	r3, r4
   158bc:	mov	r1, r2
   158c0:	lsl	r3, r3, #1
   158c4:	ldr	r2, [r0]
   158c8:	ldrh	r3, [r2, r3]
   158cc:	and	r3, r3, #16384	; 0x4000
   158d0:	cmp	r3, #0
   158d4:	movne	r3, #1
   158d8:	moveq	r3, #0
   158dc:	str	r3, [sp, #32]
   158e0:	moveq	r3, #1
   158e4:	movne	r3, #0
   158e8:	ldr	r2, [sp, #56]	; 0x38
   158ec:	and	r3, r3, r2
   158f0:	ands	r3, r3, #255	; 0xff
   158f4:	beq	154c8 <dcngettext@plt+0x44d8>
   158f8:	add	r1, sl, r1
   158fc:	mov	r0, #0
   15900:	ldr	r7, [sp, #40]	; 0x28
   15904:	ldr	r2, [sp, #36]	; 0x24
   15908:	ldr	lr, [sp, #52]	; 0x34
   1590c:	b	159bc <dcngettext@plt+0x49cc>
   15910:	cmp	r7, #0
   15914:	bne	15d10 <dcngettext@plt+0x4d20>
   15918:	eor	r0, r2, #1
   1591c:	ands	r0, lr, r0
   15920:	beq	15958 <dcngettext@plt+0x4968>
   15924:	cmp	fp, r8
   15928:	movhi	r2, #39	; 0x27
   1592c:	strbhi	r2, [r9, r8]
   15930:	add	r2, r8, #1
   15934:	cmp	fp, r2
   15938:	movhi	ip, #36	; 0x24
   1593c:	strbhi	ip, [r9, r2]
   15940:	add	r2, r8, #2
   15944:	cmp	fp, r2
   15948:	movhi	ip, #39	; 0x27
   1594c:	strbhi	ip, [r9, r2]
   15950:	add	r8, r8, #3
   15954:	mov	r2, r0
   15958:	cmp	fp, r8
   1595c:	movhi	r0, #92	; 0x5c
   15960:	strbhi	r0, [r9, r8]
   15964:	add	r0, r8, #1
   15968:	cmp	fp, r0
   1596c:	lsrhi	ip, r4, #6
   15970:	addhi	ip, ip, #48	; 0x30
   15974:	strbhi	ip, [r9, r0]
   15978:	add	ip, r8, #2
   1597c:	cmp	fp, ip
   15980:	lsrhi	r0, r4, #3
   15984:	andhi	r0, r0, #7
   15988:	addhi	r0, r0, #48	; 0x30
   1598c:	add	sl, sl, #1
   15990:	strbhi	r0, [r9, ip]
   15994:	and	r4, r4, #7
   15998:	cmp	sl, r1
   1599c:	add	r4, r4, #48	; 0x30
   159a0:	add	r8, r8, #3
   159a4:	bcs	15d28 <dcngettext@plt+0x4d38>
   159a8:	mov	r0, r3
   159ac:	cmp	fp, r8
   159b0:	strbhi	r4, [r9, r8]
   159b4:	ldrb	r4, [r5, #1]!
   159b8:	add	r8, r8, #1
   159bc:	cmp	r3, #0
   159c0:	bne	15910 <dcngettext@plt+0x4920>
   159c4:	cmp	r6, #0
   159c8:	bne	15a6c <dcngettext@plt+0x4a7c>
   159cc:	eor	r6, r0, #1
   159d0:	and	r6, r6, r2
   159d4:	add	sl, sl, #1
   159d8:	cmp	r1, sl
   159dc:	uxtb	r6, r6
   159e0:	bls	15a94 <dcngettext@plt+0x4aa4>
   159e4:	cmp	r6, #0
   159e8:	beq	159ac <dcngettext@plt+0x49bc>
   159ec:	cmp	fp, r8
   159f0:	movhi	r2, #39	; 0x27
   159f4:	strbhi	r2, [r9, r8]
   159f8:	add	r2, r8, #1
   159fc:	cmp	fp, r2
   15a00:	movhi	ip, #39	; 0x27
   15a04:	strbhi	ip, [r9, r2]
   15a08:	add	r8, r8, #2
   15a0c:	mov	r6, r3
   15a10:	mov	r2, r3
   15a14:	b	159ac <dcngettext@plt+0x49bc>
   15a18:	ldr	r3, [sp, #184]	; 0xb8
   15a1c:	cmp	r3, #0
   15a20:	beq	150f8 <dcngettext@plt+0x4108>
   15a24:	lsr	r2, r4, #5
   15a28:	mov	r0, r3
   15a2c:	uxtb	r2, r2
   15a30:	and	r3, r4, #31
   15a34:	ldr	r2, [r0, r2, lsl #2]
   15a38:	lsr	r3, r2, r3
   15a3c:	tst	r3, #1
   15a40:	beq	150f8 <dcngettext@plt+0x4108>
   15a44:	ldr	r3, [sp, #40]	; 0x28
   15a48:	cmp	r3, #0
   15a4c:	beq	152e4 <dcngettext@plt+0x42f4>
   15a50:	mov	r3, r1
   15a54:	str	r3, [sp, #64]	; 0x40
   15a58:	mov	sl, r9
   15a5c:	ldr	r3, [sp, #56]	; 0x38
   15a60:	mov	r9, fp
   15a64:	ldr	r2, [sp, #64]	; 0x40
   15a68:	b	15c58 <dcngettext@plt+0x4c68>
   15a6c:	cmp	fp, r8
   15a70:	eor	r6, r0, #1
   15a74:	movhi	ip, #92	; 0x5c
   15a78:	and	r6, r6, r2
   15a7c:	add	sl, sl, #1
   15a80:	strbhi	ip, [r9, r8]
   15a84:	cmp	r1, sl
   15a88:	add	r8, r8, #1
   15a8c:	uxtb	r6, r6
   15a90:	bhi	159e4 <dcngettext@plt+0x49f4>
   15a94:	str	r2, [sp, #36]	; 0x24
   15a98:	b	15110 <dcngettext@plt+0x4120>
   15a9c:	ldr	r3, [sp, #24]
   15aa0:	cmn	r3, #1
   15aa4:	mov	r3, #0
   15aa8:	str	r3, [sp, #128]	; 0x80
   15aac:	str	r3, [sp, #132]	; 0x84
   15ab0:	beq	15da4 <dcngettext@plt+0x4db4>
   15ab4:	mov	r2, r7
   15ab8:	mov	r3, #0
   15abc:	str	r7, [sp, #104]	; 0x68
   15ac0:	str	r5, [sp, #116]	; 0x74
   15ac4:	mov	r7, r3
   15ac8:	mov	r5, r2
   15acc:	str	r4, [sp, #32]
   15ad0:	str	r6, [sp, #108]	; 0x6c
   15ad4:	str	r8, [sp, #112]	; 0x70
   15ad8:	ldr	r3, [sp, #44]	; 0x2c
   15adc:	add	r6, sl, r7
   15ae0:	add	r4, r3, r6
   15ae4:	ldr	r3, [sp, #24]
   15ae8:	mov	r1, r4
   15aec:	sub	r2, r3, r6
   15af0:	add	r0, sp, #124	; 0x7c
   15af4:	add	r3, sp, #128	; 0x80
   15af8:	bl	19da4 <dcngettext@plt+0x8db4>
   15afc:	subs	r8, r0, #0
   15b00:	beq	15e88 <dcngettext@plt+0x4e98>
   15b04:	cmn	r8, #1
   15b08:	beq	15e60 <dcngettext@plt+0x4e70>
   15b0c:	cmn	r8, #2
   15b10:	beq	15df8 <dcngettext@plt+0x4e08>
   15b14:	ldr	r3, [sp, #64]	; 0x40
   15b18:	cmp	r3, #0
   15b1c:	beq	15bdc <dcngettext@plt+0x4bec>
   15b20:	cmp	r8, #1
   15b24:	beq	15bdc <dcngettext@plt+0x4bec>
   15b28:	sub	r3, r8, #1
   15b2c:	add	r6, r3, r6
   15b30:	ldr	r3, [sp, #44]	; 0x2c
   15b34:	add	r6, r3, r6
   15b38:	ldrb	r3, [r4, #1]!
   15b3c:	sub	r3, r3, #91	; 0x5b
   15b40:	cmp	r3, #33	; 0x21
   15b44:	ldrls	pc, [pc, r3, lsl #2]
   15b48:	b	15bd4 <dcngettext@plt+0x4be4>
   15b4c:	andeq	r5, r1, r0, asr #24
   15b50:	andeq	r5, r1, r0, asr #24
   15b54:	ldrdeq	r5, [r1], -r4
   15b58:	andeq	r5, r1, r0, asr #24
   15b5c:	ldrdeq	r5, [r1], -r4
   15b60:	andeq	r5, r1, r0, asr #24
   15b64:	ldrdeq	r5, [r1], -r4
   15b68:	ldrdeq	r5, [r1], -r4
   15b6c:	ldrdeq	r5, [r1], -r4
   15b70:	ldrdeq	r5, [r1], -r4
   15b74:	ldrdeq	r5, [r1], -r4
   15b78:	ldrdeq	r5, [r1], -r4
   15b7c:	ldrdeq	r5, [r1], -r4
   15b80:	ldrdeq	r5, [r1], -r4
   15b84:	ldrdeq	r5, [r1], -r4
   15b88:	ldrdeq	r5, [r1], -r4
   15b8c:	ldrdeq	r5, [r1], -r4
   15b90:	ldrdeq	r5, [r1], -r4
   15b94:	ldrdeq	r5, [r1], -r4
   15b98:	ldrdeq	r5, [r1], -r4
   15b9c:	ldrdeq	r5, [r1], -r4
   15ba0:	ldrdeq	r5, [r1], -r4
   15ba4:	ldrdeq	r5, [r1], -r4
   15ba8:	ldrdeq	r5, [r1], -r4
   15bac:	ldrdeq	r5, [r1], -r4
   15bb0:	ldrdeq	r5, [r1], -r4
   15bb4:	ldrdeq	r5, [r1], -r4
   15bb8:	ldrdeq	r5, [r1], -r4
   15bbc:	ldrdeq	r5, [r1], -r4
   15bc0:	ldrdeq	r5, [r1], -r4
   15bc4:	ldrdeq	r5, [r1], -r4
   15bc8:	ldrdeq	r5, [r1], -r4
   15bcc:	ldrdeq	r5, [r1], -r4
   15bd0:	andeq	r5, r1, r0, asr #24
   15bd4:	cmp	r6, r4
   15bd8:	bne	15b38 <dcngettext@plt+0x4b48>
   15bdc:	ldr	r0, [sp, #124]	; 0x7c
   15be0:	bl	10e28 <iswprint@plt>
   15be4:	add	r7, r7, r8
   15be8:	cmp	r0, #0
   15bec:	add	r0, sp, #128	; 0x80
   15bf0:	moveq	r5, #0
   15bf4:	bl	10dd4 <mbsinit@plt>
   15bf8:	cmp	r0, #0
   15bfc:	beq	15ad8 <dcngettext@plt+0x4ae8>
   15c00:	ldr	r4, [sp, #32]
   15c04:	str	r5, [sp, #32]
   15c08:	ldr	r3, [sp, #32]
   15c0c:	mov	r1, r7
   15c10:	eor	r3, r3, #1
   15c14:	ldr	r7, [sp, #104]	; 0x68
   15c18:	ldr	r6, [sp, #108]	; 0x6c
   15c1c:	ldr	r8, [sp, #112]	; 0x70
   15c20:	ldr	r5, [sp, #116]	; 0x74
   15c24:	uxtb	r3, r3
   15c28:	cmp	r1, #1
   15c2c:	bls	158e8 <dcngettext@plt+0x48f8>
   15c30:	ldr	r2, [sp, #56]	; 0x38
   15c34:	and	r3, r3, r2
   15c38:	uxtb	r3, r3
   15c3c:	b	158f8 <dcngettext@plt+0x4908>
   15c40:	mov	r3, #2
   15c44:	str	r3, [sp, #176]	; 0xb0
   15c48:	ldr	r2, [sp, #64]	; 0x40
   15c4c:	ldr	r3, [sp, #56]	; 0x38
   15c50:	mov	sl, r9
   15c54:	mov	r9, fp
   15c58:	and	r3, r3, r2
   15c5c:	tst	r3, #255	; 0xff
   15c60:	ldr	r3, [sp, #176]	; 0xb0
   15c64:	movne	r3, #4
   15c68:	str	r3, [sp, #176]	; 0xb0
   15c6c:	ldr	r3, [sp, #180]	; 0xb4
   15c70:	mov	ip, #0
   15c74:	bic	r3, r3, #2
   15c78:	str	r3, [sp, #4]
   15c7c:	ldr	r3, [sp, #192]	; 0xc0
   15c80:	ldr	r2, [sp, #44]	; 0x2c
   15c84:	str	r3, [sp, #16]
   15c88:	ldr	r3, [sp, #188]	; 0xbc
   15c8c:	mov	r1, r9
   15c90:	str	r3, [sp, #12]
   15c94:	ldr	r3, [sp, #176]	; 0xb0
   15c98:	mov	r0, sl
   15c9c:	str	r3, [sp]
   15ca0:	str	ip, [sp, #8]
   15ca4:	ldr	r3, [sp, #24]
   15ca8:	bl	14b08 <dcngettext@plt+0x3b18>
   15cac:	mov	fp, r0
   15cb0:	mov	r0, fp
   15cb4:	add	sp, sp, #140	; 0x8c
   15cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cbc:	mov	r4, #92	; 0x5c
   15cc0:	mov	r1, #0
   15cc4:	mov	r3, r4
   15cc8:	b	152bc <dcngettext@plt+0x42cc>
   15ccc:	mov	r3, #0
   15cd0:	ldr	r1, [sp, #52]	; 0x34
   15cd4:	str	r3, [sp, #32]
   15cd8:	mov	r4, #63	; 0x3f
   15cdc:	b	150dc <dcngettext@plt+0x40ec>
   15ce0:	cmp	fp, #0
   15ce4:	beq	15d40 <dcngettext@plt+0x4d50>
   15ce8:	mov	r3, #39	; 0x27
   15cec:	strb	r3, [r9]
   15cf0:	mov	r3, #0
   15cf4:	str	r3, [sp, #40]	; 0x28
   15cf8:	mov	r3, #1
   15cfc:	str	r3, [sp, #68]	; 0x44
   15d00:	ldr	r3, [pc, #448]	; 15ec8 <dcngettext@plt+0x4ed8>
   15d04:	mov	r8, #1
   15d08:	str	r3, [sp, #72]	; 0x48
   15d0c:	b	14ef0 <dcngettext@plt+0x3f00>
   15d10:	ldr	r3, [sp, #40]	; 0x28
   15d14:	mov	sl, r9
   15d18:	str	r3, [sp, #56]	; 0x38
   15d1c:	mov	r9, fp
   15d20:	ldr	r2, [sp, #64]	; 0x40
   15d24:	b	15c58 <dcngettext@plt+0x4c68>
   15d28:	str	r2, [sp, #36]	; 0x24
   15d2c:	b	15140 <dcngettext@plt+0x4150>
   15d30:	mov	r1, #0
   15d34:	str	r3, [sp, #32]
   15d38:	mov	r4, #63	; 0x3f
   15d3c:	b	150dc <dcngettext@plt+0x40ec>
   15d40:	ldr	r3, [pc, #384]	; 15ec8 <dcngettext@plt+0x4ed8>
   15d44:	str	r3, [sp, #72]	; 0x48
   15d48:	mov	r3, #0
   15d4c:	str	r3, [sp, #40]	; 0x28
   15d50:	mov	r3, #1
   15d54:	str	r3, [sp, #68]	; 0x44
   15d58:	mov	r8, r3
   15d5c:	b	14ef0 <dcngettext@plt+0x3f00>
   15d60:	bl	10fd8 <abort@plt>
   15d64:	cmp	fp, #0
   15d68:	beq	15dc8 <dcngettext@plt+0x4dd8>
   15d6c:	mov	r2, #1
   15d70:	mov	r3, #34	; 0x22
   15d74:	strb	r3, [r9]
   15d78:	mov	r8, r2
   15d7c:	mov	r3, r2
   15d80:	str	r2, [sp, #68]	; 0x44
   15d84:	str	r3, [sp, #56]	; 0x38
   15d88:	ldr	r3, [pc, #316]	; 15ecc <dcngettext@plt+0x4edc>
   15d8c:	ldr	r1, [sp, #56]	; 0x38
   15d90:	str	r3, [sp, #72]	; 0x48
   15d94:	ldr	r2, [sp, #176]	; 0xb0
   15d98:	ldr	ip, [sp, #40]	; 0x28
   15d9c:	ldr	lr, [sp, #176]	; 0xb0
   15da0:	b	14bd4 <dcngettext@plt+0x3be4>
   15da4:	ldr	r0, [sp, #44]	; 0x2c
   15da8:	bl	10edc <strlen@plt>
   15dac:	str	r0, [sp, #24]
   15db0:	b	15ab4 <dcngettext@plt+0x4ac4>
   15db4:	mov	r7, #0
   15db8:	ldr	r1, [sp, #52]	; 0x34
   15dbc:	str	r3, [sp, #32]
   15dc0:	mov	r4, #48	; 0x30
   15dc4:	b	150dc <dcngettext@plt+0x40ec>
   15dc8:	mov	r3, #1
   15dcc:	str	r3, [sp, #68]	; 0x44
   15dd0:	mov	r8, r3
   15dd4:	b	15d84 <dcngettext@plt+0x4d94>
   15dd8:	mov	r3, #2
   15ddc:	mov	sl, r9
   15de0:	str	r3, [sp, #176]	; 0xb0
   15de4:	mov	r9, fp
   15de8:	ldr	r3, [sp, #56]	; 0x38
   15dec:	b	15c58 <dcngettext@plt+0x4c68>
   15df0:	ldr	r6, [sp, #48]	; 0x30
   15df4:	b	158a4 <dcngettext@plt+0x48b4>
   15df8:	ldr	r0, [sp, #24]
   15dfc:	mov	ip, r6
   15e00:	cmp	r0, ip
   15e04:	mov	r1, r7
   15e08:	mov	r2, r4
   15e0c:	ldr	r7, [sp, #104]	; 0x68
   15e10:	ldr	r4, [sp, #32]
   15e14:	ldr	r6, [sp, #108]	; 0x6c
   15e18:	ldr	r8, [sp, #112]	; 0x70
   15e1c:	ldr	r5, [sp, #116]	; 0x74
   15e20:	bls	15e50 <dcngettext@plt+0x4e60>
   15e24:	ldrb	r3, [r2]
   15e28:	cmp	r3, #0
   15e2c:	bne	15e40 <dcngettext@plt+0x4e50>
   15e30:	b	15f60 <dcngettext@plt+0x4f70>
   15e34:	ldrb	r3, [r2, #1]!
   15e38:	cmp	r3, #0
   15e3c:	beq	15f60 <dcngettext@plt+0x4f70>
   15e40:	add	r1, r1, #1
   15e44:	add	r3, sl, r1
   15e48:	cmp	r0, r3
   15e4c:	bhi	15e34 <dcngettext@plt+0x4e44>
   15e50:	mov	r2, #0
   15e54:	mov	r3, r7
   15e58:	str	r2, [sp, #32]
   15e5c:	b	15c28 <dcngettext@plt+0x4c38>
   15e60:	mov	r1, r7
   15e64:	ldr	r7, [sp, #104]	; 0x68
   15e68:	mov	r2, #0
   15e6c:	ldr	r4, [sp, #32]
   15e70:	ldr	r6, [sp, #108]	; 0x6c
   15e74:	ldr	r8, [sp, #112]	; 0x70
   15e78:	ldr	r5, [sp, #116]	; 0x74
   15e7c:	mov	r3, r7
   15e80:	str	r2, [sp, #32]
   15e84:	b	15c28 <dcngettext@plt+0x4c38>
   15e88:	mov	r3, r5
   15e8c:	eor	r3, r3, #1
   15e90:	ldr	r4, [sp, #32]
   15e94:	mov	r1, r7
   15e98:	str	r5, [sp, #32]
   15e9c:	ldr	r7, [sp, #104]	; 0x68
   15ea0:	ldr	r6, [sp, #108]	; 0x6c
   15ea4:	ldr	r8, [sp, #112]	; 0x70
   15ea8:	ldr	r5, [sp, #116]	; 0x74
   15eac:	uxtb	r3, r3
   15eb0:	b	15c28 <dcngettext@plt+0x4c38>
   15eb4:	mov	sl, r9
   15eb8:	str	r3, [sp, #56]	; 0x38
   15ebc:	mov	r9, fp
   15ec0:	ldr	r2, [sp, #64]	; 0x40
   15ec4:	b	15c58 <dcngettext@plt+0x4c68>
   15ec8:	ldrdeq	fp, [r1], -r0
   15ecc:	andeq	fp, r1, ip, asr #7
   15ed0:	ldrdeq	fp, [r1], -r4
   15ed4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   15ed8:	ldr	r2, [sp, #44]	; 0x2c
   15edc:	ldrb	r1, [r2, r3]
   15ee0:	sub	r2, r1, #33	; 0x21
   15ee4:	uxtb	r2, r2
   15ee8:	cmp	r2, #29
   15eec:	bhi	15f6c <dcngettext@plt+0x4f7c>
   15ef0:	ldr	r0, [pc, #-36]	; 15ed4 <dcngettext@plt+0x4ee4>
   15ef4:	mov	ip, #1
   15ef8:	ands	r2, r0, ip, lsl r2
   15efc:	beq	15f8c <dcngettext@plt+0x4f9c>
   15f00:	ldr	r2, [sp, #40]	; 0x28
   15f04:	cmp	r2, #0
   15f08:	bne	16080 <dcngettext@plt+0x5090>
   15f0c:	add	r2, r8, #1
   15f10:	cmp	fp, r8
   15f14:	strbhi	r4, [r9, r8]
   15f18:	cmp	fp, r2
   15f1c:	movhi	r0, #34	; 0x22
   15f20:	strbhi	r0, [r9, r2]
   15f24:	add	r2, r8, #2
   15f28:	cmp	fp, r2
   15f2c:	movhi	r0, #34	; 0x22
   15f30:	strbhi	r0, [r9, r2]
   15f34:	add	r2, r8, #3
   15f38:	cmp	fp, r2
   15f3c:	mov	sl, r3
   15f40:	ldr	r3, [sp, #40]	; 0x28
   15f44:	movhi	r0, #63	; 0x3f
   15f48:	mov	r4, r1
   15f4c:	strbhi	r0, [r9, r2]
   15f50:	add	r8, r8, #4
   15f54:	mov	r1, r3
   15f58:	str	r3, [sp, #32]
   15f5c:	b	150dc <dcngettext@plt+0x40ec>
   15f60:	str	r3, [sp, #32]
   15f64:	mov	r3, r7
   15f68:	b	15c28 <dcngettext@plt+0x4c38>
   15f6c:	mov	r1, #0
   15f70:	str	r1, [sp, #32]
   15f74:	b	150dc <dcngettext@plt+0x40ec>
   15f78:	mov	sl, r9
   15f7c:	ldr	r3, [sp, #56]	; 0x38
   15f80:	mov	r9, fp
   15f84:	ldr	r2, [sp, #64]	; 0x40
   15f88:	b	15c58 <dcngettext@plt+0x4c68>
   15f8c:	str	r2, [sp, #32]
   15f90:	mov	r1, #0
   15f94:	b	150dc <dcngettext@plt+0x40ec>
   15f98:	ldr	r2, [sp, #76]	; 0x4c
   15f9c:	mov	sl, r9
   15fa0:	mov	r9, fp
   15fa4:	mov	fp, r8
   15fa8:	ldr	r1, [sp, #72]	; 0x48
   15fac:	cmp	r1, #0
   15fb0:	moveq	r3, #0
   15fb4:	andne	r3, r2, #1
   15fb8:	cmp	r3, #0
   15fbc:	beq	15fe8 <dcngettext@plt+0x4ff8>
   15fc0:	ldrb	r3, [r1]
   15fc4:	cmp	r3, #0
   15fc8:	beq	15fe8 <dcngettext@plt+0x4ff8>
   15fcc:	mov	r2, r1
   15fd0:	cmp	r9, fp
   15fd4:	strbhi	r3, [sl, fp]
   15fd8:	ldrb	r3, [r2, #1]!
   15fdc:	add	fp, fp, #1
   15fe0:	cmp	r3, #0
   15fe4:	bne	15fd0 <dcngettext@plt+0x4fe0>
   15fe8:	cmp	r9, fp
   15fec:	movhi	r3, #0
   15ff0:	strbhi	r3, [sl, fp]
   15ff4:	b	15cb0 <dcngettext@plt+0x4cc0>
   15ff8:	ldr	r3, [sp, #192]	; 0xc0
   15ffc:	mov	ip, #5
   16000:	str	r3, [sp, #16]
   16004:	ldr	r3, [sp, #188]	; 0xbc
   16008:	ldr	r2, [sp, #44]	; 0x2c
   1600c:	str	r3, [sp, #12]
   16010:	ldr	r3, [sp, #184]	; 0xb8
   16014:	ldr	r1, [sp, #84]	; 0x54
   16018:	str	r3, [sp, #8]
   1601c:	ldr	r3, [sp, #180]	; 0xb4
   16020:	mov	r0, r9
   16024:	str	r3, [sp, #4]
   16028:	str	ip, [sp]
   1602c:	ldr	r3, [sp, #24]
   16030:	bl	14b08 <dcngettext@plt+0x3b18>
   16034:	mov	fp, r0
   16038:	b	15cb0 <dcngettext@plt+0x4cc0>
   1603c:	mov	sl, r9
   16040:	mov	r9, fp
   16044:	mov	fp, r8
   16048:	b	15fa8 <dcngettext@plt+0x4fb8>
   1604c:	ldr	r1, [sp, #176]	; 0xb0
   16050:	bl	149e8 <dcngettext@plt+0x39f8>
   16054:	str	r0, [sp, #192]	; 0xc0
   16058:	b	14fc4 <dcngettext@plt+0x3fd4>
   1605c:	ldr	r1, [sp, #176]	; 0xb0
   16060:	bl	149e8 <dcngettext@plt+0x39f8>
   16064:	str	r0, [sp, #188]	; 0xbc
   16068:	b	14fa4 <dcngettext@plt+0x3fb4>
   1606c:	mov	sl, r9
   16070:	mov	r2, r3
   16074:	mov	r9, fp
   16078:	mov	fp, r8
   1607c:	b	15fa8 <dcngettext@plt+0x4fb8>
   16080:	mov	sl, r9
   16084:	mov	r9, fp
   16088:	b	15c6c <dcngettext@plt+0x4c7c>
   1608c:	push	{r4, r5, r6, lr}
   16090:	mov	r5, r0
   16094:	bl	10ef4 <__errno_location@plt>
   16098:	cmp	r5, #0
   1609c:	mov	r1, #48	; 0x30
   160a0:	mov	r4, r0
   160a4:	ldr	r0, [pc, #16]	; 160bc <dcngettext@plt+0x50cc>
   160a8:	ldr	r6, [r4]
   160ac:	movne	r0, r5
   160b0:	bl	19934 <dcngettext@plt+0x8944>
   160b4:	str	r6, [r4]
   160b8:	pop	{r4, r5, r6, pc}
   160bc:	muleq	r2, r0, r1
   160c0:	ldr	r3, [pc, #12]	; 160d4 <dcngettext@plt+0x50e4>
   160c4:	cmp	r0, #0
   160c8:	moveq	r0, r3
   160cc:	ldr	r0, [r0]
   160d0:	bx	lr
   160d4:	muleq	r2, r0, r1
   160d8:	ldr	r3, [pc, #12]	; 160ec <dcngettext@plt+0x50fc>
   160dc:	cmp	r0, #0
   160e0:	moveq	r0, r3
   160e4:	str	r1, [r0]
   160e8:	bx	lr
   160ec:	muleq	r2, r0, r1
   160f0:	ldr	r3, [pc, #52]	; 1612c <dcngettext@plt+0x513c>
   160f4:	cmp	r0, #0
   160f8:	moveq	r0, r3
   160fc:	add	r3, r0, #8
   16100:	push	{lr}		; (str lr, [sp, #-4]!)
   16104:	lsr	lr, r1, #5
   16108:	and	r1, r1, #31
   1610c:	ldr	ip, [r3, lr, lsl #2]
   16110:	lsr	r0, ip, r1
   16114:	eor	r2, r2, r0
   16118:	and	r2, r2, #1
   1611c:	and	r0, r0, #1
   16120:	eor	r1, ip, r2, lsl r1
   16124:	str	r1, [r3, lr, lsl #2]
   16128:	pop	{pc}		; (ldr pc, [sp], #4)
   1612c:	muleq	r2, r0, r1
   16130:	ldr	r3, [pc, #16]	; 16148 <dcngettext@plt+0x5158>
   16134:	cmp	r0, #0
   16138:	movne	r3, r0
   1613c:	ldr	r0, [r3, #4]
   16140:	str	r1, [r3, #4]
   16144:	bx	lr
   16148:	muleq	r2, r0, r1
   1614c:	ldr	r3, [pc, #44]	; 16180 <dcngettext@plt+0x5190>
   16150:	cmp	r0, #0
   16154:	moveq	r0, r3
   16158:	mov	ip, #10
   1615c:	cmp	r2, #0
   16160:	cmpne	r1, #0
   16164:	str	ip, [r0]
   16168:	beq	16178 <dcngettext@plt+0x5188>
   1616c:	str	r1, [r0, #40]	; 0x28
   16170:	str	r2, [r0, #44]	; 0x2c
   16174:	bx	lr
   16178:	push	{r4, lr}
   1617c:	bl	10fd8 <abort@plt>
   16180:	muleq	r2, r0, r1
   16184:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16188:	sub	sp, sp, #24
   1618c:	ldr	ip, [pc, #108]	; 16200 <dcngettext@plt+0x5210>
   16190:	ldr	r4, [sp, #56]	; 0x38
   16194:	mov	r9, r2
   16198:	cmp	r4, #0
   1619c:	moveq	r4, ip
   161a0:	mov	sl, r3
   161a4:	mov	r7, r0
   161a8:	mov	r8, r1
   161ac:	bl	10ef4 <__errno_location@plt>
   161b0:	ldr	r3, [r4, #44]	; 0x2c
   161b4:	mov	r1, r8
   161b8:	ldr	r6, [r0]
   161bc:	str	r3, [sp, #16]
   161c0:	ldr	r2, [r4, #40]	; 0x28
   161c4:	add	r3, r4, #8
   161c8:	str	r3, [sp, #8]
   161cc:	str	r2, [sp, #12]
   161d0:	ldr	r2, [r4, #4]
   161d4:	mov	r5, r0
   161d8:	str	r2, [sp, #4]
   161dc:	ldr	ip, [r4]
   161e0:	mov	r3, sl
   161e4:	mov	r2, r9
   161e8:	mov	r0, r7
   161ec:	str	ip, [sp]
   161f0:	bl	14b08 <dcngettext@plt+0x3b18>
   161f4:	str	r6, [r5]
   161f8:	add	sp, sp, #24
   161fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16200:	muleq	r2, r0, r1
   16204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16208:	cmp	r2, #0
   1620c:	sub	sp, sp, #36	; 0x24
   16210:	ldr	r4, [pc, #164]	; 162bc <dcngettext@plt+0x52cc>
   16214:	mov	r8, r1
   16218:	movne	r4, r2
   1621c:	mov	r7, r0
   16220:	bl	10ef4 <__errno_location@plt>
   16224:	ldr	r3, [r4, #44]	; 0x2c
   16228:	ldr	r5, [r4, #4]
   1622c:	add	r9, r4, #8
   16230:	orr	r5, r5, #1
   16234:	mov	r1, #0
   16238:	mov	r2, r7
   1623c:	ldr	fp, [r0]
   16240:	str	r3, [sp, #16]
   16244:	ldr	r3, [r4, #40]	; 0x28
   16248:	stmib	sp, {r5, r9}
   1624c:	str	r3, [sp, #12]
   16250:	ldr	r3, [r4]
   16254:	mov	r6, r0
   16258:	str	r3, [sp]
   1625c:	mov	r0, r1
   16260:	mov	r3, r8
   16264:	bl	14b08 <dcngettext@plt+0x3b18>
   16268:	add	r1, r0, #1
   1626c:	mov	r0, r1
   16270:	str	r1, [sp, #28]
   16274:	bl	193f0 <dcngettext@plt+0x8400>
   16278:	ldr	r3, [r4, #44]	; 0x2c
   1627c:	ldr	r1, [sp, #28]
   16280:	str	r3, [sp, #16]
   16284:	ldr	r3, [r4, #40]	; 0x28
   16288:	str	r5, [sp, #4]
   1628c:	str	r3, [sp, #12]
   16290:	str	r9, [sp, #8]
   16294:	ldr	ip, [r4]
   16298:	mov	r3, r8
   1629c:	mov	r2, r7
   162a0:	str	ip, [sp]
   162a4:	mov	sl, r0
   162a8:	bl	14b08 <dcngettext@plt+0x3b18>
   162ac:	mov	r0, sl
   162b0:	str	fp, [r6]
   162b4:	add	sp, sp, #36	; 0x24
   162b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162bc:	muleq	r2, r0, r1
   162c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162c4:	cmp	r3, #0
   162c8:	sub	sp, sp, #44	; 0x2c
   162cc:	ldr	r4, [pc, #192]	; 16394 <dcngettext@plt+0x53a4>
   162d0:	mov	r6, r2
   162d4:	movne	r4, r3
   162d8:	mov	r9, r1
   162dc:	mov	r8, r0
   162e0:	bl	10ef4 <__errno_location@plt>
   162e4:	ldr	r3, [r4, #44]	; 0x2c
   162e8:	ldr	r5, [r4, #4]
   162ec:	add	sl, r4, #8
   162f0:	cmp	r6, #0
   162f4:	orreq	r5, r5, #1
   162f8:	mov	r1, #0
   162fc:	ldr	r2, [r0]
   16300:	str	r3, [sp, #16]
   16304:	ldr	r3, [r4, #40]	; 0x28
   16308:	stmib	sp, {r5, sl}
   1630c:	str	r3, [sp, #12]
   16310:	ldr	r3, [r4]
   16314:	mov	r7, r0
   16318:	str	r2, [sp, #28]
   1631c:	str	r3, [sp]
   16320:	mov	r2, r8
   16324:	mov	r3, r9
   16328:	mov	r0, r1
   1632c:	bl	14b08 <dcngettext@plt+0x3b18>
   16330:	add	r1, r0, #1
   16334:	mov	fp, r0
   16338:	mov	r0, r1
   1633c:	str	r1, [sp, #36]	; 0x24
   16340:	bl	193f0 <dcngettext@plt+0x8400>
   16344:	ldr	r3, [r4, #44]	; 0x2c
   16348:	mov	r2, r8
   1634c:	str	r3, [sp, #16]
   16350:	ldr	r3, [r4, #40]	; 0x28
   16354:	str	r5, [sp, #4]
   16358:	str	r3, [sp, #12]
   1635c:	str	sl, [sp, #8]
   16360:	ldr	ip, [r4]
   16364:	ldr	r1, [sp, #36]	; 0x24
   16368:	mov	r3, r9
   1636c:	str	ip, [sp]
   16370:	str	r0, [sp, #32]
   16374:	bl	14b08 <dcngettext@plt+0x3b18>
   16378:	ldr	r2, [sp, #28]
   1637c:	cmp	r6, #0
   16380:	str	r2, [r7]
   16384:	ldr	r0, [sp, #32]
   16388:	strne	fp, [r6]
   1638c:	add	sp, sp, #44	; 0x2c
   16390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16394:	muleq	r2, r0, r1
   16398:	push	{r4, r5, r6, r7, r8, lr}
   1639c:	ldr	r6, [pc, #116]	; 16418 <dcngettext@plt+0x5428>
   163a0:	ldr	r3, [r6, #4]
   163a4:	ldr	r7, [r6]
   163a8:	cmp	r3, #1
   163ac:	movgt	r5, r7
   163b0:	movgt	r4, #1
   163b4:	ble	163d4 <dcngettext@plt+0x53e4>
   163b8:	ldr	r0, [r5, #12]
   163bc:	bl	1483c <dcngettext@plt+0x384c>
   163c0:	ldr	r3, [r6, #4]
   163c4:	add	r4, r4, #1
   163c8:	cmp	r3, r4
   163cc:	add	r5, r5, #8
   163d0:	bgt	163b8 <dcngettext@plt+0x53c8>
   163d4:	ldr	r0, [r7, #4]
   163d8:	ldr	r4, [pc, #60]	; 1641c <dcngettext@plt+0x542c>
   163dc:	cmp	r0, r4
   163e0:	beq	163f4 <dcngettext@plt+0x5404>
   163e4:	bl	1483c <dcngettext@plt+0x384c>
   163e8:	mov	r3, #256	; 0x100
   163ec:	str	r4, [r6, #12]
   163f0:	str	r3, [r6, #8]
   163f4:	ldr	r4, [pc, #36]	; 16420 <dcngettext@plt+0x5430>
   163f8:	cmp	r7, r4
   163fc:	beq	1640c <dcngettext@plt+0x541c>
   16400:	mov	r0, r7
   16404:	bl	1483c <dcngettext@plt+0x384c>
   16408:	str	r4, [r6]
   1640c:	mov	r3, #1
   16410:	str	r3, [r6, #4]
   16414:	pop	{r4, r5, r6, r7, r8, pc}
   16418:	andeq	ip, r2, ip, lsl #2
   1641c:	andeq	ip, r2, r0, asr #3
   16420:	andeq	ip, r2, r4, lsl r1
   16424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16428:	sub	sp, sp, #44	; 0x2c
   1642c:	mov	r5, r0
   16430:	mov	sl, r1
   16434:	bl	10ef4 <__errno_location@plt>
   16438:	ldr	r4, [pc, #400]	; 165d0 <dcngettext@plt+0x55e0>
   1643c:	cmn	r5, #-2147483647	; 0x80000001
   16440:	ldr	r6, [r4]
   16444:	mov	r8, r0
   16448:	movne	r0, #0
   1644c:	moveq	r0, #1
   16450:	ldr	r3, [r8]
   16454:	orrs	r0, r0, r5, lsr #31
   16458:	str	r3, [sp, #24]
   1645c:	bne	165cc <dcngettext@plt+0x55dc>
   16460:	ldr	r2, [r4, #4]
   16464:	cmp	r5, r2
   16468:	blt	164c8 <dcngettext@plt+0x54d8>
   1646c:	add	r7, r4, #8
   16470:	cmp	r6, r7
   16474:	str	r2, [sp, #36]	; 0x24
   16478:	beq	1659c <dcngettext@plt+0x55ac>
   1647c:	mov	r3, #8
   16480:	sub	r2, r5, r2
   16484:	mov	r0, r6
   16488:	str	r3, [sp]
   1648c:	add	r2, r2, #1
   16490:	mvn	r3, #-2147483648	; 0x80000000
   16494:	add	r1, sp, #36	; 0x24
   16498:	bl	1960c <dcngettext@plt+0x861c>
   1649c:	mov	r6, r0
   164a0:	str	r0, [r4]
   164a4:	ldr	r0, [r4, #4]
   164a8:	ldr	r2, [sp, #36]	; 0x24
   164ac:	mov	r1, #0
   164b0:	sub	r2, r2, r0
   164b4:	add	r0, r6, r0, lsl #3
   164b8:	lsl	r2, r2, #3
   164bc:	bl	10f18 <memset@plt>
   164c0:	ldr	r3, [sp, #36]	; 0x24
   164c4:	str	r3, [r4, #4]
   164c8:	ldr	r4, [pc, #260]	; 165d4 <dcngettext@plt+0x55e4>
   164cc:	add	fp, r6, r5, lsl #3
   164d0:	ldr	r9, [r6, r5, lsl #3]
   164d4:	ldr	r0, [r4, #4]
   164d8:	ldr	r3, [r4]
   164dc:	ldr	r7, [fp, #4]
   164e0:	ldr	r1, [r4, #44]	; 0x2c
   164e4:	ldr	r2, [r4, #40]	; 0x28
   164e8:	orr	r0, r0, #1
   164ec:	str	r3, [sp]
   164f0:	add	r3, r4, #8
   164f4:	str	r0, [sp, #28]
   164f8:	str	r0, [sp, #4]
   164fc:	str	r1, [sp, #16]
   16500:	str	r2, [sp, #12]
   16504:	str	r3, [sp, #8]
   16508:	mov	r0, r7
   1650c:	mov	r1, r9
   16510:	mvn	r3, #0
   16514:	mov	r2, sl
   16518:	bl	14b08 <dcngettext@plt+0x3b18>
   1651c:	cmp	r9, r0
   16520:	bhi	16588 <dcngettext@plt+0x5598>
   16524:	add	r3, r4, #48	; 0x30
   16528:	add	r9, r0, #1
   1652c:	cmp	r7, r3
   16530:	str	r9, [r6, r5, lsl #3]
   16534:	beq	16540 <dcngettext@plt+0x5550>
   16538:	mov	r0, r7
   1653c:	bl	1483c <dcngettext@plt+0x384c>
   16540:	mov	r0, r9
   16544:	bl	193f0 <dcngettext@plt+0x8400>
   16548:	ldr	ip, [r4, #44]	; 0x2c
   1654c:	ldr	r3, [r4]
   16550:	ldr	lr, [r4, #40]	; 0x28
   16554:	ldr	r4, [pc, #124]	; 165d8 <dcngettext@plt+0x55e8>
   16558:	mov	r2, sl
   1655c:	mov	r1, r9
   16560:	str	r0, [fp, #4]
   16564:	str	r4, [sp, #8]
   16568:	ldr	r4, [sp, #28]
   1656c:	str	r3, [sp]
   16570:	str	r4, [sp, #4]
   16574:	str	ip, [sp, #16]
   16578:	str	lr, [sp, #12]
   1657c:	mvn	r3, #0
   16580:	mov	r7, r0
   16584:	bl	14b08 <dcngettext@plt+0x3b18>
   16588:	ldr	r3, [sp, #24]
   1658c:	mov	r0, r7
   16590:	str	r3, [r8]
   16594:	add	sp, sp, #44	; 0x2c
   16598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1659c:	mov	r3, #8
   165a0:	sub	r2, r5, r2
   165a4:	str	r3, [sp]
   165a8:	add	r1, sp, #36	; 0x24
   165ac:	add	r2, r2, #1
   165b0:	mvn	r3, #-2147483648	; 0x80000000
   165b4:	bl	1960c <dcngettext@plt+0x861c>
   165b8:	mov	r6, r0
   165bc:	ldm	r7, {r0, r1}
   165c0:	str	r6, [r4]
   165c4:	stm	r6, {r0, r1}
   165c8:	b	164a4 <dcngettext@plt+0x54b4>
   165cc:	bl	10fd8 <abort@plt>
   165d0:	andeq	ip, r2, ip, lsl #2
   165d4:	muleq	r2, r0, r1
   165d8:	muleq	r2, r8, r1
   165dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165e0:	sub	sp, sp, #52	; 0x34
   165e4:	mov	r5, r0
   165e8:	mov	sl, r1
   165ec:	mov	fp, r2
   165f0:	bl	10ef4 <__errno_location@plt>
   165f4:	ldr	r4, [pc, #408]	; 16794 <dcngettext@plt+0x57a4>
   165f8:	cmn	r5, #-2147483647	; 0x80000001
   165fc:	ldr	r6, [r4]
   16600:	mov	r8, r0
   16604:	movne	r0, #0
   16608:	moveq	r0, #1
   1660c:	ldr	r3, [r8]
   16610:	orrs	r0, r0, r5, lsr #31
   16614:	str	r3, [sp, #28]
   16618:	bne	16790 <dcngettext@plt+0x57a0>
   1661c:	ldr	r2, [r4, #4]
   16620:	cmp	r5, r2
   16624:	blt	16684 <dcngettext@plt+0x5694>
   16628:	add	r7, r4, #8
   1662c:	cmp	r6, r7
   16630:	str	r2, [sp, #44]	; 0x2c
   16634:	beq	16760 <dcngettext@plt+0x5770>
   16638:	mov	r3, #8
   1663c:	sub	r2, r5, r2
   16640:	mov	r0, r6
   16644:	str	r3, [sp]
   16648:	add	r2, r2, #1
   1664c:	mvn	r3, #-2147483648	; 0x80000000
   16650:	add	r1, sp, #44	; 0x2c
   16654:	bl	1960c <dcngettext@plt+0x861c>
   16658:	mov	r6, r0
   1665c:	str	r0, [r4]
   16660:	ldr	r0, [r4, #4]
   16664:	ldr	r2, [sp, #44]	; 0x2c
   16668:	mov	r1, #0
   1666c:	sub	r2, r2, r0
   16670:	add	r0, r6, r0, lsl #3
   16674:	lsl	r2, r2, #3
   16678:	bl	10f18 <memset@plt>
   1667c:	ldr	r3, [sp, #44]	; 0x2c
   16680:	str	r3, [r4, #4]
   16684:	ldr	r4, [pc, #268]	; 16798 <dcngettext@plt+0x57a8>
   16688:	add	r3, r6, r5, lsl #3
   1668c:	str	r3, [sp, #32]
   16690:	ldr	r7, [r3, #4]
   16694:	ldr	r0, [r4, #4]
   16698:	ldr	r3, [r4]
   1669c:	ldr	r9, [r6, r5, lsl #3]
   166a0:	ldr	r1, [r4, #44]	; 0x2c
   166a4:	ldr	r2, [r4, #40]	; 0x28
   166a8:	orr	r0, r0, #1
   166ac:	str	r3, [sp]
   166b0:	add	r3, r4, #8
   166b4:	str	r0, [sp, #36]	; 0x24
   166b8:	str	r0, [sp, #4]
   166bc:	str	r1, [sp, #16]
   166c0:	str	r2, [sp, #12]
   166c4:	str	r3, [sp, #8]
   166c8:	mov	r0, r7
   166cc:	mov	r1, r9
   166d0:	mov	r3, fp
   166d4:	mov	r2, sl
   166d8:	bl	14b08 <dcngettext@plt+0x3b18>
   166dc:	cmp	r9, r0
   166e0:	bhi	1674c <dcngettext@plt+0x575c>
   166e4:	add	r3, r4, #48	; 0x30
   166e8:	add	r9, r0, #1
   166ec:	cmp	r7, r3
   166f0:	str	r9, [r6, r5, lsl #3]
   166f4:	beq	16700 <dcngettext@plt+0x5710>
   166f8:	mov	r0, r7
   166fc:	bl	1483c <dcngettext@plt+0x384c>
   16700:	mov	r0, r9
   16704:	bl	193f0 <dcngettext@plt+0x8400>
   16708:	ldr	ip, [sp, #32]
   1670c:	ldr	lr, [r4, #44]	; 0x2c
   16710:	ldr	r5, [r4, #40]	; 0x28
   16714:	mov	r3, fp
   16718:	mov	r2, sl
   1671c:	mov	r1, r9
   16720:	str	r0, [ip, #4]
   16724:	ldr	ip, [r4]
   16728:	ldr	r4, [pc, #108]	; 1679c <dcngettext@plt+0x57ac>
   1672c:	str	lr, [sp, #16]
   16730:	str	r4, [sp, #8]
   16734:	ldr	r4, [sp, #36]	; 0x24
   16738:	str	r5, [sp, #12]
   1673c:	str	r4, [sp, #4]
   16740:	str	ip, [sp]
   16744:	mov	r7, r0
   16748:	bl	14b08 <dcngettext@plt+0x3b18>
   1674c:	ldr	r3, [sp, #28]
   16750:	mov	r0, r7
   16754:	str	r3, [r8]
   16758:	add	sp, sp, #52	; 0x34
   1675c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16760:	mov	r3, #8
   16764:	sub	r2, r5, r2
   16768:	str	r3, [sp]
   1676c:	add	r1, sp, #44	; 0x2c
   16770:	add	r2, r2, #1
   16774:	mvn	r3, #-2147483648	; 0x80000000
   16778:	bl	1960c <dcngettext@plt+0x861c>
   1677c:	mov	r6, r0
   16780:	ldm	r7, {r0, r1}
   16784:	str	r6, [r4]
   16788:	stm	r6, {r0, r1}
   1678c:	b	16660 <dcngettext@plt+0x5670>
   16790:	bl	10fd8 <abort@plt>
   16794:	andeq	ip, r2, ip, lsl #2
   16798:	muleq	r2, r0, r1
   1679c:	muleq	r2, r8, r1
   167a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167a4:	sub	sp, sp, #44	; 0x2c
   167a8:	mov	sl, r0
   167ac:	bl	10ef4 <__errno_location@plt>
   167b0:	ldr	r4, [pc, #352]	; 16918 <dcngettext@plt+0x5928>
   167b4:	ldr	r2, [r4, #4]
   167b8:	ldr	r5, [r4]
   167bc:	cmp	r2, #0
   167c0:	ldr	r3, [r0]
   167c4:	mov	r8, r0
   167c8:	str	r3, [sp, #28]
   167cc:	bgt	16828 <dcngettext@plt+0x5838>
   167d0:	add	r6, r4, #8
   167d4:	cmp	r5, r6
   167d8:	str	r2, [sp, #36]	; 0x24
   167dc:	beq	168e8 <dcngettext@plt+0x58f8>
   167e0:	mov	r3, #8
   167e4:	mov	r0, r5
   167e8:	str	r3, [sp]
   167ec:	rsb	r2, r2, #1
   167f0:	mvn	r3, #-2147483648	; 0x80000000
   167f4:	add	r1, sp, #36	; 0x24
   167f8:	bl	1960c <dcngettext@plt+0x861c>
   167fc:	mov	r5, r0
   16800:	str	r0, [r4]
   16804:	ldr	r0, [r4, #4]
   16808:	ldr	r2, [sp, #36]	; 0x24
   1680c:	mov	r1, #0
   16810:	sub	r2, r2, r0
   16814:	add	r0, r5, r0, lsl #3
   16818:	lsl	r2, r2, #3
   1681c:	bl	10f18 <memset@plt>
   16820:	ldr	r3, [sp, #36]	; 0x24
   16824:	str	r3, [r4, #4]
   16828:	ldr	r4, [pc, #236]	; 1691c <dcngettext@plt+0x592c>
   1682c:	ldr	r9, [r5]
   16830:	ldr	r6, [r5, #4]
   16834:	ldr	r7, [r4, #4]
   16838:	ldr	r1, [r4, #44]	; 0x2c
   1683c:	ldr	r2, [r4, #40]	; 0x28
   16840:	ldr	r3, [r4]
   16844:	orr	r7, r7, #1
   16848:	add	fp, r4, #8
   1684c:	str	r1, [sp, #16]
   16850:	str	r2, [sp, #12]
   16854:	str	r3, [sp]
   16858:	str	r7, [sp, #4]
   1685c:	str	fp, [sp, #8]
   16860:	mov	r1, r9
   16864:	mov	r0, r6
   16868:	mvn	r3, #0
   1686c:	mov	r2, sl
   16870:	bl	14b08 <dcngettext@plt+0x3b18>
   16874:	cmp	r9, r0
   16878:	bhi	168d4 <dcngettext@plt+0x58e4>
   1687c:	add	r3, r4, #48	; 0x30
   16880:	add	r9, r0, #1
   16884:	cmp	r6, r3
   16888:	str	r9, [r5]
   1688c:	beq	16898 <dcngettext@plt+0x58a8>
   16890:	mov	r0, r6
   16894:	bl	1483c <dcngettext@plt+0x384c>
   16898:	mov	r0, r9
   1689c:	bl	193f0 <dcngettext@plt+0x8400>
   168a0:	ldr	ip, [r4, #44]	; 0x2c
   168a4:	ldr	r3, [r4]
   168a8:	ldr	lr, [r4, #40]	; 0x28
   168ac:	mov	r2, sl
   168b0:	mov	r1, r9
   168b4:	str	r0, [r5, #4]
   168b8:	str	r3, [sp]
   168bc:	stmib	sp, {r7, fp}
   168c0:	str	ip, [sp, #16]
   168c4:	str	lr, [sp, #12]
   168c8:	mvn	r3, #0
   168cc:	mov	r6, r0
   168d0:	bl	14b08 <dcngettext@plt+0x3b18>
   168d4:	ldr	r3, [sp, #28]
   168d8:	mov	r0, r6
   168dc:	str	r3, [r8]
   168e0:	add	sp, sp, #44	; 0x2c
   168e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168e8:	mov	r3, #8
   168ec:	str	r3, [sp]
   168f0:	add	r1, sp, #36	; 0x24
   168f4:	rsb	r2, r2, #1
   168f8:	mvn	r3, #-2147483648	; 0x80000000
   168fc:	mov	r0, #0
   16900:	bl	1960c <dcngettext@plt+0x861c>
   16904:	mov	r5, r0
   16908:	ldm	r6, {r0, r1}
   1690c:	str	r5, [r4]
   16910:	stm	r5, {r0, r1}
   16914:	b	16804 <dcngettext@plt+0x5814>
   16918:	andeq	ip, r2, ip, lsl #2
   1691c:	muleq	r2, r0, r1
   16920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16924:	sub	sp, sp, #44	; 0x2c
   16928:	mov	r9, r0
   1692c:	mov	sl, r1
   16930:	bl	10ef4 <__errno_location@plt>
   16934:	ldr	r4, [pc, #364]	; 16aa8 <dcngettext@plt+0x5ab8>
   16938:	ldr	r2, [r4, #4]
   1693c:	ldr	r5, [r4]
   16940:	cmp	r2, #0
   16944:	ldr	r3, [r0]
   16948:	mov	r7, r0
   1694c:	str	r3, [sp, #24]
   16950:	bgt	169ac <dcngettext@plt+0x59bc>
   16954:	add	r6, r4, #8
   16958:	cmp	r5, r6
   1695c:	str	r2, [sp, #36]	; 0x24
   16960:	beq	16a78 <dcngettext@plt+0x5a88>
   16964:	mov	r3, #8
   16968:	mov	r0, r5
   1696c:	str	r3, [sp]
   16970:	rsb	r2, r2, #1
   16974:	mvn	r3, #-2147483648	; 0x80000000
   16978:	add	r1, sp, #36	; 0x24
   1697c:	bl	1960c <dcngettext@plt+0x861c>
   16980:	mov	r5, r0
   16984:	str	r0, [r4]
   16988:	ldr	r0, [r4, #4]
   1698c:	ldr	r2, [sp, #36]	; 0x24
   16990:	mov	r1, #0
   16994:	sub	r2, r2, r0
   16998:	add	r0, r5, r0, lsl #3
   1699c:	lsl	r2, r2, #3
   169a0:	bl	10f18 <memset@plt>
   169a4:	ldr	r3, [sp, #36]	; 0x24
   169a8:	str	r3, [r4, #4]
   169ac:	ldr	r4, [pc, #248]	; 16aac <dcngettext@plt+0x5abc>
   169b0:	ldr	r8, [r5]
   169b4:	ldr	r6, [r5, #4]
   169b8:	ldr	r0, [r4, #4]
   169bc:	ldr	r1, [r4, #44]	; 0x2c
   169c0:	ldr	r2, [r4, #40]	; 0x28
   169c4:	ldr	r3, [r4]
   169c8:	orr	r0, r0, #1
   169cc:	add	fp, r4, #8
   169d0:	str	r0, [sp, #28]
   169d4:	str	r0, [sp, #4]
   169d8:	str	r1, [sp, #16]
   169dc:	str	r2, [sp, #12]
   169e0:	str	r3, [sp]
   169e4:	str	fp, [sp, #8]
   169e8:	mov	r1, r8
   169ec:	mov	r0, r6
   169f0:	mov	r3, sl
   169f4:	mov	r2, r9
   169f8:	bl	14b08 <dcngettext@plt+0x3b18>
   169fc:	cmp	r8, r0
   16a00:	bhi	16a64 <dcngettext@plt+0x5a74>
   16a04:	add	r3, r4, #48	; 0x30
   16a08:	add	r8, r0, #1
   16a0c:	cmp	r6, r3
   16a10:	str	r8, [r5]
   16a14:	beq	16a20 <dcngettext@plt+0x5a30>
   16a18:	mov	r0, r6
   16a1c:	bl	1483c <dcngettext@plt+0x384c>
   16a20:	mov	r0, r8
   16a24:	bl	193f0 <dcngettext@plt+0x8400>
   16a28:	ldr	lr, [r4, #44]	; 0x2c
   16a2c:	ldr	ip, [r4]
   16a30:	mov	r3, sl
   16a34:	mov	r2, r9
   16a38:	mov	r1, r8
   16a3c:	str	r0, [r5, #4]
   16a40:	ldr	r5, [r4, #40]	; 0x28
   16a44:	ldr	r4, [sp, #28]
   16a48:	str	fp, [sp, #8]
   16a4c:	str	r4, [sp, #4]
   16a50:	str	lr, [sp, #16]
   16a54:	str	r5, [sp, #12]
   16a58:	str	ip, [sp]
   16a5c:	mov	r6, r0
   16a60:	bl	14b08 <dcngettext@plt+0x3b18>
   16a64:	ldr	r3, [sp, #24]
   16a68:	mov	r0, r6
   16a6c:	str	r3, [r7]
   16a70:	add	sp, sp, #44	; 0x2c
   16a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a78:	mov	r3, #8
   16a7c:	str	r3, [sp]
   16a80:	add	r1, sp, #36	; 0x24
   16a84:	rsb	r2, r2, #1
   16a88:	mvn	r3, #-2147483648	; 0x80000000
   16a8c:	mov	r0, #0
   16a90:	bl	1960c <dcngettext@plt+0x861c>
   16a94:	mov	r5, r0
   16a98:	ldm	r6, {r0, r1}
   16a9c:	str	r5, [r4]
   16aa0:	stm	r5, {r0, r1}
   16aa4:	b	16988 <dcngettext@plt+0x5998>
   16aa8:	andeq	ip, r2, ip, lsl #2
   16aac:	muleq	r2, r0, r1
   16ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ab4:	sub	sp, sp, #132	; 0x84
   16ab8:	mov	r5, r1
   16abc:	mov	r4, r0
   16ac0:	mov	r9, r2
   16ac4:	add	r0, sp, #80	; 0x50
   16ac8:	mov	r2, #48	; 0x30
   16acc:	mov	r1, #0
   16ad0:	bl	10f18 <memset@plt>
   16ad4:	cmp	r5, #10
   16ad8:	beq	16c90 <dcngettext@plt+0x5ca0>
   16adc:	add	lr, sp, #80	; 0x50
   16ae0:	str	r5, [sp, #80]	; 0x50
   16ae4:	ldm	lr!, {r0, r1, r2, r3}
   16ae8:	add	ip, sp, #32
   16aec:	ldr	r6, [pc, #416]	; 16c94 <dcngettext@plt+0x5ca4>
   16af0:	stmia	ip!, {r0, r1, r2, r3}
   16af4:	ldm	lr!, {r0, r1, r2, r3}
   16af8:	stmia	ip!, {r0, r1, r2, r3}
   16afc:	ldm	lr, {r0, r1, r2, r3}
   16b00:	stm	ip, {r0, r1, r2, r3}
   16b04:	bl	10ef4 <__errno_location@plt>
   16b08:	cmn	r4, #-2147483647	; 0x80000001
   16b0c:	ldr	r5, [r6]
   16b10:	mov	r7, r0
   16b14:	movne	r0, #0
   16b18:	moveq	r0, #1
   16b1c:	ldr	r3, [r7]
   16b20:	orrs	r0, r0, r4, lsr #31
   16b24:	str	r3, [sp, #24]
   16b28:	bne	16c90 <dcngettext@plt+0x5ca0>
   16b2c:	ldr	r2, [r6, #4]
   16b30:	cmp	r4, r2
   16b34:	blt	16b94 <dcngettext@plt+0x5ba4>
   16b38:	add	r8, r6, #8
   16b3c:	cmp	r5, r8
   16b40:	str	r2, [sp, #80]	; 0x50
   16b44:	beq	16c60 <dcngettext@plt+0x5c70>
   16b48:	mov	r3, #8
   16b4c:	sub	r2, r4, r2
   16b50:	mov	r0, r5
   16b54:	str	r3, [sp]
   16b58:	add	r2, r2, #1
   16b5c:	add	r1, sp, #80	; 0x50
   16b60:	mvn	r3, #-2147483648	; 0x80000000
   16b64:	bl	1960c <dcngettext@plt+0x861c>
   16b68:	mov	r5, r0
   16b6c:	str	r0, [r6]
   16b70:	ldr	r0, [r6, #4]
   16b74:	ldr	r2, [sp, #80]	; 0x50
   16b78:	mov	r1, #0
   16b7c:	sub	r2, r2, r0
   16b80:	add	r0, r5, r0, lsl #3
   16b84:	lsl	r2, r2, #3
   16b88:	bl	10f18 <memset@plt>
   16b8c:	ldr	r3, [sp, #80]	; 0x50
   16b90:	str	r3, [r6, #4]
   16b94:	add	fp, r5, r4, lsl #3
   16b98:	ldr	r1, [sp, #36]	; 0x24
   16b9c:	ldr	r8, [r5, r4, lsl #3]
   16ba0:	ldr	r6, [fp, #4]
   16ba4:	ldr	r2, [sp, #72]	; 0x48
   16ba8:	ldr	r3, [sp, #32]
   16bac:	ldr	ip, [sp, #76]	; 0x4c
   16bb0:	orr	r1, r1, #1
   16bb4:	add	sl, sp, #40	; 0x28
   16bb8:	str	r1, [sp, #28]
   16bbc:	str	r1, [sp, #4]
   16bc0:	str	r2, [sp, #12]
   16bc4:	str	r3, [sp]
   16bc8:	mov	r0, r6
   16bcc:	mov	r1, r8
   16bd0:	str	ip, [sp, #16]
   16bd4:	str	sl, [sp, #8]
   16bd8:	mvn	r3, #0
   16bdc:	mov	r2, r9
   16be0:	bl	14b08 <dcngettext@plt+0x3b18>
   16be4:	cmp	r8, r0
   16be8:	bhi	16c4c <dcngettext@plt+0x5c5c>
   16bec:	ldr	r3, [pc, #164]	; 16c98 <dcngettext@plt+0x5ca8>
   16bf0:	add	r8, r0, #1
   16bf4:	cmp	r6, r3
   16bf8:	str	r8, [r5, r4, lsl #3]
   16bfc:	beq	16c08 <dcngettext@plt+0x5c18>
   16c00:	mov	r0, r6
   16c04:	bl	1483c <dcngettext@plt+0x384c>
   16c08:	mov	r0, r8
   16c0c:	bl	193f0 <dcngettext@plt+0x8400>
   16c10:	ldr	lr, [sp, #76]	; 0x4c
   16c14:	ldr	r3, [sp, #32]
   16c18:	ldr	ip, [sp, #72]	; 0x48
   16c1c:	ldr	r4, [sp, #28]
   16c20:	mov	r2, r9
   16c24:	mov	r1, r8
   16c28:	str	r0, [fp, #4]
   16c2c:	str	r3, [sp]
   16c30:	str	sl, [sp, #8]
   16c34:	str	r4, [sp, #4]
   16c38:	str	lr, [sp, #16]
   16c3c:	str	ip, [sp, #12]
   16c40:	mvn	r3, #0
   16c44:	mov	r6, r0
   16c48:	bl	14b08 <dcngettext@plt+0x3b18>
   16c4c:	ldr	r3, [sp, #24]
   16c50:	mov	r0, r6
   16c54:	str	r3, [r7]
   16c58:	add	sp, sp, #132	; 0x84
   16c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c60:	mov	r3, #8
   16c64:	sub	r2, r4, r2
   16c68:	add	r1, sp, #80	; 0x50
   16c6c:	str	r3, [sp]
   16c70:	add	r2, r2, #1
   16c74:	mvn	r3, #-2147483648	; 0x80000000
   16c78:	bl	1960c <dcngettext@plt+0x861c>
   16c7c:	mov	r5, r0
   16c80:	ldm	r8, {r0, r1}
   16c84:	str	r5, [r6]
   16c88:	stm	r5, {r0, r1}
   16c8c:	b	16b70 <dcngettext@plt+0x5b80>
   16c90:	bl	10fd8 <abort@plt>
   16c94:	andeq	ip, r2, ip, lsl #2
   16c98:	andeq	ip, r2, r0, asr #3
   16c9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ca0:	sub	sp, sp, #132	; 0x84
   16ca4:	mov	r5, r1
   16ca8:	mov	r4, r0
   16cac:	mov	r9, r2
   16cb0:	add	r0, sp, #80	; 0x50
   16cb4:	mov	r2, #48	; 0x30
   16cb8:	mov	r1, #0
   16cbc:	mov	sl, r3
   16cc0:	bl	10f18 <memset@plt>
   16cc4:	cmp	r5, #10
   16cc8:	beq	16e84 <dcngettext@plt+0x5e94>
   16ccc:	add	lr, sp, #80	; 0x50
   16cd0:	str	r5, [sp, #80]	; 0x50
   16cd4:	ldm	lr!, {r0, r1, r2, r3}
   16cd8:	add	ip, sp, #32
   16cdc:	ldr	r6, [pc, #420]	; 16e88 <dcngettext@plt+0x5e98>
   16ce0:	stmia	ip!, {r0, r1, r2, r3}
   16ce4:	ldm	lr!, {r0, r1, r2, r3}
   16ce8:	stmia	ip!, {r0, r1, r2, r3}
   16cec:	ldm	lr, {r0, r1, r2, r3}
   16cf0:	stm	ip, {r0, r1, r2, r3}
   16cf4:	bl	10ef4 <__errno_location@plt>
   16cf8:	cmn	r4, #-2147483647	; 0x80000001
   16cfc:	ldr	r5, [r6]
   16d00:	mov	r7, r0
   16d04:	movne	r0, #0
   16d08:	moveq	r0, #1
   16d0c:	ldr	r3, [r7]
   16d10:	orrs	r0, r0, r4, lsr #31
   16d14:	str	r3, [sp, #24]
   16d18:	bne	16e84 <dcngettext@plt+0x5e94>
   16d1c:	ldr	r2, [r6, #4]
   16d20:	cmp	r4, r2
   16d24:	blt	16d84 <dcngettext@plt+0x5d94>
   16d28:	add	r8, r6, #8
   16d2c:	cmp	r5, r8
   16d30:	str	r2, [sp, #80]	; 0x50
   16d34:	beq	16e54 <dcngettext@plt+0x5e64>
   16d38:	mov	r3, #8
   16d3c:	sub	r2, r4, r2
   16d40:	mov	r0, r5
   16d44:	str	r3, [sp]
   16d48:	add	r2, r2, #1
   16d4c:	add	r1, sp, #80	; 0x50
   16d50:	mvn	r3, #-2147483648	; 0x80000000
   16d54:	bl	1960c <dcngettext@plt+0x861c>
   16d58:	mov	r5, r0
   16d5c:	str	r0, [r6]
   16d60:	ldr	r0, [r6, #4]
   16d64:	ldr	r2, [sp, #80]	; 0x50
   16d68:	mov	r1, #0
   16d6c:	sub	r2, r2, r0
   16d70:	add	r0, r5, r0, lsl #3
   16d74:	lsl	r2, r2, #3
   16d78:	bl	10f18 <memset@plt>
   16d7c:	ldr	r3, [sp, #80]	; 0x50
   16d80:	str	r3, [r6, #4]
   16d84:	add	fp, r5, r4, lsl #3
   16d88:	ldr	r3, [sp, #32]
   16d8c:	ldr	r1, [sp, #36]	; 0x24
   16d90:	ldr	r8, [r5, r4, lsl #3]
   16d94:	ldr	r6, [fp, #4]
   16d98:	ldr	r2, [sp, #72]	; 0x48
   16d9c:	ldr	ip, [sp, #76]	; 0x4c
   16da0:	orr	r1, r1, #1
   16da4:	str	r3, [sp]
   16da8:	add	r3, sp, #40	; 0x28
   16dac:	str	r1, [sp, #28]
   16db0:	str	r1, [sp, #4]
   16db4:	str	r2, [sp, #12]
   16db8:	str	r3, [sp, #8]
   16dbc:	mov	r0, r6
   16dc0:	mov	r1, r8
   16dc4:	str	ip, [sp, #16]
   16dc8:	mov	r3, sl
   16dcc:	mov	r2, r9
   16dd0:	bl	14b08 <dcngettext@plt+0x3b18>
   16dd4:	cmp	r8, r0
   16dd8:	bhi	16e40 <dcngettext@plt+0x5e50>
   16ddc:	ldr	r3, [pc, #168]	; 16e8c <dcngettext@plt+0x5e9c>
   16de0:	add	r8, r0, #1
   16de4:	cmp	r6, r3
   16de8:	str	r8, [r5, r4, lsl #3]
   16dec:	beq	16df8 <dcngettext@plt+0x5e08>
   16df0:	mov	r0, r6
   16df4:	bl	1483c <dcngettext@plt+0x384c>
   16df8:	mov	r0, r8
   16dfc:	bl	193f0 <dcngettext@plt+0x8400>
   16e00:	add	lr, sp, #40	; 0x28
   16e04:	ldr	ip, [sp, #76]	; 0x4c
   16e08:	ldr	r4, [sp, #72]	; 0x48
   16e0c:	ldr	r5, [sp, #28]
   16e10:	mov	r3, sl
   16e14:	mov	r2, r9
   16e18:	mov	r1, r8
   16e1c:	str	r0, [fp, #4]
   16e20:	str	lr, [sp, #8]
   16e24:	ldr	lr, [sp, #32]
   16e28:	str	r5, [sp, #4]
   16e2c:	str	ip, [sp, #16]
   16e30:	str	r4, [sp, #12]
   16e34:	str	lr, [sp]
   16e38:	mov	r6, r0
   16e3c:	bl	14b08 <dcngettext@plt+0x3b18>
   16e40:	ldr	r3, [sp, #24]
   16e44:	mov	r0, r6
   16e48:	str	r3, [r7]
   16e4c:	add	sp, sp, #132	; 0x84
   16e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e54:	mov	r3, #8
   16e58:	sub	r2, r4, r2
   16e5c:	add	r1, sp, #80	; 0x50
   16e60:	str	r3, [sp]
   16e64:	add	r2, r2, #1
   16e68:	mvn	r3, #-2147483648	; 0x80000000
   16e6c:	bl	1960c <dcngettext@plt+0x861c>
   16e70:	mov	r5, r0
   16e74:	ldm	r8, {r0, r1}
   16e78:	str	r5, [r6]
   16e7c:	stm	r5, {r0, r1}
   16e80:	b	16d60 <dcngettext@plt+0x5d70>
   16e84:	bl	10fd8 <abort@plt>
   16e88:	andeq	ip, r2, ip, lsl #2
   16e8c:	andeq	ip, r2, r0, asr #3
   16e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e94:	sub	sp, sp, #124	; 0x7c
   16e98:	mov	r4, r0
   16e9c:	mov	r9, r1
   16ea0:	add	r0, sp, #72	; 0x48
   16ea4:	mov	r2, #48	; 0x30
   16ea8:	mov	r1, #0
   16eac:	bl	10f18 <memset@plt>
   16eb0:	cmp	r4, #10
   16eb4:	beq	17040 <dcngettext@plt+0x6050>
   16eb8:	add	lr, sp, #72	; 0x48
   16ebc:	str	r4, [sp, #72]	; 0x48
   16ec0:	ldm	lr!, {r0, r1, r2, r3}
   16ec4:	add	ip, sp, #24
   16ec8:	ldr	r5, [pc, #372]	; 17044 <dcngettext@plt+0x6054>
   16ecc:	stmia	ip!, {r0, r1, r2, r3}
   16ed0:	ldm	lr!, {r0, r1, r2, r3}
   16ed4:	stmia	ip!, {r0, r1, r2, r3}
   16ed8:	ldm	lr, {r0, r1, r2, r3}
   16edc:	stm	ip, {r0, r1, r2, r3}
   16ee0:	bl	10ef4 <__errno_location@plt>
   16ee4:	ldr	r2, [r5, #4]
   16ee8:	ldr	r4, [r5]
   16eec:	cmp	r2, #0
   16ef0:	mov	r7, r0
   16ef4:	ldr	fp, [r0]
   16ef8:	bgt	16f54 <dcngettext@plt+0x5f64>
   16efc:	add	r6, r5, #8
   16f00:	cmp	r4, r6
   16f04:	str	r2, [sp, #72]	; 0x48
   16f08:	beq	17010 <dcngettext@plt+0x6020>
   16f0c:	mov	r3, #8
   16f10:	mov	r0, r4
   16f14:	str	r3, [sp]
   16f18:	rsb	r2, r2, #1
   16f1c:	add	r1, sp, #72	; 0x48
   16f20:	mvn	r3, #-2147483648	; 0x80000000
   16f24:	bl	1960c <dcngettext@plt+0x861c>
   16f28:	mov	r4, r0
   16f2c:	str	r0, [r5]
   16f30:	ldr	r0, [r5, #4]
   16f34:	ldr	r2, [sp, #72]	; 0x48
   16f38:	mov	r1, #0
   16f3c:	sub	r2, r2, r0
   16f40:	add	r0, r4, r0, lsl #3
   16f44:	lsl	r2, r2, #3
   16f48:	bl	10f18 <memset@plt>
   16f4c:	ldr	r3, [sp, #72]	; 0x48
   16f50:	str	r3, [r5, #4]
   16f54:	ldr	r6, [sp, #28]
   16f58:	ldr	r8, [r4]
   16f5c:	ldr	r5, [r4, #4]
   16f60:	ldr	r2, [sp, #64]	; 0x40
   16f64:	ldr	r3, [sp, #24]
   16f68:	ldr	ip, [sp, #68]	; 0x44
   16f6c:	orr	r6, r6, #1
   16f70:	add	sl, sp, #32
   16f74:	str	r2, [sp, #12]
   16f78:	str	r3, [sp]
   16f7c:	str	r6, [sp, #4]
   16f80:	mov	r1, r8
   16f84:	mov	r0, r5
   16f88:	str	ip, [sp, #16]
   16f8c:	str	sl, [sp, #8]
   16f90:	mvn	r3, #0
   16f94:	mov	r2, r9
   16f98:	bl	14b08 <dcngettext@plt+0x3b18>
   16f9c:	cmp	r8, r0
   16fa0:	bhi	17000 <dcngettext@plt+0x6010>
   16fa4:	ldr	r3, [pc, #156]	; 17048 <dcngettext@plt+0x6058>
   16fa8:	add	r8, r0, #1
   16fac:	cmp	r5, r3
   16fb0:	str	r8, [r4]
   16fb4:	beq	16fc0 <dcngettext@plt+0x5fd0>
   16fb8:	mov	r0, r5
   16fbc:	bl	1483c <dcngettext@plt+0x384c>
   16fc0:	mov	r0, r8
   16fc4:	bl	193f0 <dcngettext@plt+0x8400>
   16fc8:	ldr	lr, [sp, #68]	; 0x44
   16fcc:	ldr	r3, [sp, #24]
   16fd0:	ldr	ip, [sp, #64]	; 0x40
   16fd4:	mov	r2, r9
   16fd8:	mov	r1, r8
   16fdc:	str	r0, [r4, #4]
   16fe0:	str	r3, [sp]
   16fe4:	str	sl, [sp, #8]
   16fe8:	str	r6, [sp, #4]
   16fec:	str	lr, [sp, #16]
   16ff0:	str	ip, [sp, #12]
   16ff4:	mvn	r3, #0
   16ff8:	mov	r5, r0
   16ffc:	bl	14b08 <dcngettext@plt+0x3b18>
   17000:	mov	r0, r5
   17004:	str	fp, [r7]
   17008:	add	sp, sp, #124	; 0x7c
   1700c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17010:	mov	r3, #8
   17014:	add	r1, sp, #72	; 0x48
   17018:	str	r3, [sp]
   1701c:	rsb	r2, r2, #1
   17020:	mvn	r3, #-2147483648	; 0x80000000
   17024:	mov	r0, #0
   17028:	bl	1960c <dcngettext@plt+0x861c>
   1702c:	mov	r4, r0
   17030:	ldm	r6, {r0, r1}
   17034:	str	r4, [r5]
   17038:	stm	r4, {r0, r1}
   1703c:	b	16f30 <dcngettext@plt+0x5f40>
   17040:	bl	10fd8 <abort@plt>
   17044:	andeq	ip, r2, ip, lsl #2
   17048:	andeq	ip, r2, r0, asr #3
   1704c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17050:	sub	sp, sp, #132	; 0x84
   17054:	mov	r4, r0
   17058:	mov	r9, r1
   1705c:	mov	sl, r2
   17060:	add	r0, sp, #80	; 0x50
   17064:	mov	r2, #48	; 0x30
   17068:	mov	r1, #0
   1706c:	bl	10f18 <memset@plt>
   17070:	cmp	r4, #10
   17074:	beq	17208 <dcngettext@plt+0x6218>
   17078:	add	lr, sp, #80	; 0x50
   1707c:	str	r4, [sp, #80]	; 0x50
   17080:	ldm	lr!, {r0, r1, r2, r3}
   17084:	add	ip, sp, #32
   17088:	ldr	r5, [pc, #380]	; 1720c <dcngettext@plt+0x621c>
   1708c:	stmia	ip!, {r0, r1, r2, r3}
   17090:	ldm	lr!, {r0, r1, r2, r3}
   17094:	stmia	ip!, {r0, r1, r2, r3}
   17098:	ldm	lr, {r0, r1, r2, r3}
   1709c:	stm	ip, {r0, r1, r2, r3}
   170a0:	bl	10ef4 <__errno_location@plt>
   170a4:	ldr	r2, [r5, #4]
   170a8:	ldr	r4, [r5]
   170ac:	cmp	r2, #0
   170b0:	ldr	r3, [r0]
   170b4:	mov	r7, r0
   170b8:	str	r3, [sp, #28]
   170bc:	bgt	17118 <dcngettext@plt+0x6128>
   170c0:	add	r6, r5, #8
   170c4:	cmp	r4, r6
   170c8:	str	r2, [sp, #80]	; 0x50
   170cc:	beq	171d8 <dcngettext@plt+0x61e8>
   170d0:	mov	r3, #8
   170d4:	mov	r0, r4
   170d8:	str	r3, [sp]
   170dc:	rsb	r2, r2, #1
   170e0:	add	r1, sp, #80	; 0x50
   170e4:	mvn	r3, #-2147483648	; 0x80000000
   170e8:	bl	1960c <dcngettext@plt+0x861c>
   170ec:	mov	r4, r0
   170f0:	str	r0, [r5]
   170f4:	ldr	r0, [r5, #4]
   170f8:	ldr	r2, [sp, #80]	; 0x50
   170fc:	mov	r1, #0
   17100:	sub	r2, r2, r0
   17104:	add	r0, r4, r0, lsl #3
   17108:	lsl	r2, r2, #3
   1710c:	bl	10f18 <memset@plt>
   17110:	ldr	r3, [sp, #80]	; 0x50
   17114:	str	r3, [r5, #4]
   17118:	ldr	r6, [sp, #36]	; 0x24
   1711c:	ldr	r8, [r4]
   17120:	ldr	r5, [r4, #4]
   17124:	ldr	r2, [sp, #72]	; 0x48
   17128:	ldr	r3, [sp, #32]
   1712c:	ldr	ip, [sp, #76]	; 0x4c
   17130:	orr	r6, r6, #1
   17134:	add	fp, sp, #40	; 0x28
   17138:	str	r2, [sp, #12]
   1713c:	str	r3, [sp]
   17140:	str	r6, [sp, #4]
   17144:	mov	r1, r8
   17148:	mov	r0, r5
   1714c:	str	ip, [sp, #16]
   17150:	str	fp, [sp, #8]
   17154:	mov	r3, sl
   17158:	mov	r2, r9
   1715c:	bl	14b08 <dcngettext@plt+0x3b18>
   17160:	cmp	r8, r0
   17164:	bhi	171c4 <dcngettext@plt+0x61d4>
   17168:	ldr	r3, [pc, #160]	; 17210 <dcngettext@plt+0x6220>
   1716c:	add	r8, r0, #1
   17170:	cmp	r5, r3
   17174:	str	r8, [r4]
   17178:	beq	17184 <dcngettext@plt+0x6194>
   1717c:	mov	r0, r5
   17180:	bl	1483c <dcngettext@plt+0x384c>
   17184:	mov	r0, r8
   17188:	bl	193f0 <dcngettext@plt+0x8400>
   1718c:	ldr	ip, [sp, #76]	; 0x4c
   17190:	ldr	lr, [sp, #32]
   17194:	mov	r3, sl
   17198:	mov	r2, r9
   1719c:	mov	r1, r8
   171a0:	str	r0, [r4, #4]
   171a4:	ldr	r4, [sp, #72]	; 0x48
   171a8:	str	fp, [sp, #8]
   171ac:	str	r6, [sp, #4]
   171b0:	str	ip, [sp, #16]
   171b4:	str	r4, [sp, #12]
   171b8:	str	lr, [sp]
   171bc:	mov	r5, r0
   171c0:	bl	14b08 <dcngettext@plt+0x3b18>
   171c4:	ldr	r3, [sp, #28]
   171c8:	mov	r0, r5
   171cc:	str	r3, [r7]
   171d0:	add	sp, sp, #132	; 0x84
   171d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171d8:	mov	r3, #8
   171dc:	add	r1, sp, #80	; 0x50
   171e0:	str	r3, [sp]
   171e4:	rsb	r2, r2, #1
   171e8:	mvn	r3, #-2147483648	; 0x80000000
   171ec:	mov	r0, #0
   171f0:	bl	1960c <dcngettext@plt+0x861c>
   171f4:	mov	r4, r0
   171f8:	ldm	r6, {r0, r1}
   171fc:	str	r4, [r5]
   17200:	stm	r4, {r0, r1}
   17204:	b	170f4 <dcngettext@plt+0x6104>
   17208:	bl	10fd8 <abort@plt>
   1720c:	andeq	ip, r2, ip, lsl #2
   17210:	andeq	ip, r2, r0, asr #3
   17214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17218:	mov	r4, r2
   1721c:	ldr	lr, [pc, #432]	; 173d4 <dcngettext@plt+0x63e4>
   17220:	mov	sl, r0
   17224:	mov	fp, r1
   17228:	ldm	lr!, {r0, r1, r2, r3}
   1722c:	sub	sp, sp, #92	; 0x5c
   17230:	add	ip, sp, #40	; 0x28
   17234:	lsr	r7, r4, #5
   17238:	stmia	ip!, {r0, r1, r2, r3}
   1723c:	add	r6, sp, #48	; 0x30
   17240:	ldm	lr!, {r0, r1, r2, r3}
   17244:	and	r4, r4, #31
   17248:	ldr	r5, [pc, #392]	; 173d8 <dcngettext@plt+0x63e8>
   1724c:	stmia	ip!, {r0, r1, r2, r3}
   17250:	ldm	lr, {r0, r1, r2, r3}
   17254:	stm	ip, {r0, r1, r2, r3}
   17258:	ldr	r2, [r6, r7, lsl #2]
   1725c:	lsr	r3, r2, r4
   17260:	eor	r3, r3, #1
   17264:	and	r3, r3, #1
   17268:	eor	r4, r2, r3, lsl r4
   1726c:	str	r4, [r6, r7, lsl #2]
   17270:	bl	10ef4 <__errno_location@plt>
   17274:	ldr	r2, [r5, #4]
   17278:	ldr	r4, [r5]
   1727c:	cmp	r2, #0
   17280:	ldr	r3, [r0]
   17284:	mov	r8, r0
   17288:	str	r3, [sp, #28]
   1728c:	bgt	172e8 <dcngettext@plt+0x62f8>
   17290:	add	r7, r5, #8
   17294:	cmp	r4, r7
   17298:	str	r2, [sp, #36]	; 0x24
   1729c:	beq	173a4 <dcngettext@plt+0x63b4>
   172a0:	mov	r3, #8
   172a4:	mov	r0, r4
   172a8:	str	r3, [sp]
   172ac:	rsb	r2, r2, #1
   172b0:	mvn	r3, #-2147483648	; 0x80000000
   172b4:	add	r1, sp, #36	; 0x24
   172b8:	bl	1960c <dcngettext@plt+0x861c>
   172bc:	mov	r4, r0
   172c0:	str	r0, [r5]
   172c4:	ldr	r0, [r5, #4]
   172c8:	ldr	r2, [sp, #36]	; 0x24
   172cc:	mov	r1, #0
   172d0:	sub	r2, r2, r0
   172d4:	add	r0, r4, r0, lsl #3
   172d8:	lsl	r2, r2, #3
   172dc:	bl	10f18 <memset@plt>
   172e0:	ldr	r3, [sp, #36]	; 0x24
   172e4:	str	r3, [r5, #4]
   172e8:	ldr	r7, [sp, #44]	; 0x2c
   172ec:	ldr	r9, [r4]
   172f0:	ldr	r5, [r4, #4]
   172f4:	ldr	r2, [sp, #80]	; 0x50
   172f8:	ldr	r3, [sp, #40]	; 0x28
   172fc:	ldr	ip, [sp, #84]	; 0x54
   17300:	orr	r7, r7, #1
   17304:	str	r2, [sp, #12]
   17308:	str	r3, [sp]
   1730c:	str	r7, [sp, #4]
   17310:	str	r6, [sp, #8]
   17314:	mov	r1, r9
   17318:	mov	r0, r5
   1731c:	str	ip, [sp, #16]
   17320:	mov	r3, fp
   17324:	mov	r2, sl
   17328:	bl	14b08 <dcngettext@plt+0x3b18>
   1732c:	cmp	r9, r0
   17330:	bhi	17390 <dcngettext@plt+0x63a0>
   17334:	ldr	r3, [pc, #160]	; 173dc <dcngettext@plt+0x63ec>
   17338:	add	r9, r0, #1
   1733c:	cmp	r5, r3
   17340:	str	r9, [r4]
   17344:	beq	17350 <dcngettext@plt+0x6360>
   17348:	mov	r0, r5
   1734c:	bl	1483c <dcngettext@plt+0x384c>
   17350:	mov	r0, r9
   17354:	bl	193f0 <dcngettext@plt+0x8400>
   17358:	ldr	ip, [sp, #84]	; 0x54
   1735c:	ldr	lr, [sp, #40]	; 0x28
   17360:	mov	r3, fp
   17364:	mov	r2, sl
   17368:	mov	r1, r9
   1736c:	str	r0, [r4, #4]
   17370:	ldr	r4, [sp, #80]	; 0x50
   17374:	str	r6, [sp, #8]
   17378:	str	r7, [sp, #4]
   1737c:	str	ip, [sp, #16]
   17380:	str	r4, [sp, #12]
   17384:	str	lr, [sp]
   17388:	mov	r5, r0
   1738c:	bl	14b08 <dcngettext@plt+0x3b18>
   17390:	ldr	r3, [sp, #28]
   17394:	mov	r0, r5
   17398:	str	r3, [r8]
   1739c:	add	sp, sp, #92	; 0x5c
   173a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173a4:	mov	r3, #8
   173a8:	str	r3, [sp]
   173ac:	add	r1, sp, #36	; 0x24
   173b0:	rsb	r2, r2, #1
   173b4:	mvn	r3, #-2147483648	; 0x80000000
   173b8:	mov	r0, #0
   173bc:	bl	1960c <dcngettext@plt+0x861c>
   173c0:	mov	r4, r0
   173c4:	ldm	r7, {r0, r1}
   173c8:	str	r4, [r5]
   173cc:	stm	r4, {r0, r1}
   173d0:	b	172c4 <dcngettext@plt+0x62d4>
   173d4:	muleq	r2, r0, r1
   173d8:	andeq	ip, r2, ip, lsl #2
   173dc:	andeq	ip, r2, r0, asr #3
   173e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173e4:	mov	r4, r1
   173e8:	ldr	lr, [pc, #420]	; 17594 <dcngettext@plt+0x65a4>
   173ec:	mov	r6, r0
   173f0:	sub	sp, sp, #84	; 0x54
   173f4:	ldm	lr!, {r0, r1, r2, r3}
   173f8:	add	ip, sp, #32
   173fc:	lsr	r8, r4, #5
   17400:	add	r5, sp, #40	; 0x28
   17404:	stmia	ip!, {r0, r1, r2, r3}
   17408:	and	r4, r4, #31
   1740c:	ldm	lr!, {r0, r1, r2, r3}
   17410:	ldr	r7, [pc, #384]	; 17598 <dcngettext@plt+0x65a8>
   17414:	stmia	ip!, {r0, r1, r2, r3}
   17418:	ldm	lr, {r0, r1, r2, r3}
   1741c:	stm	ip, {r0, r1, r2, r3}
   17420:	ldr	r2, [r5, r8, lsl #2]
   17424:	lsr	r3, r2, r4
   17428:	eor	r3, r3, #1
   1742c:	and	r3, r3, #1
   17430:	eor	r4, r2, r3, lsl r4
   17434:	str	r4, [r5, r8, lsl #2]
   17438:	bl	10ef4 <__errno_location@plt>
   1743c:	ldr	r2, [r7, #4]
   17440:	ldr	r4, [r7]
   17444:	cmp	r2, #0
   17448:	mov	r9, r0
   1744c:	ldr	sl, [r0]
   17450:	bgt	174ac <dcngettext@plt+0x64bc>
   17454:	add	r8, r7, #8
   17458:	cmp	r4, r8
   1745c:	str	r2, [sp, #28]
   17460:	beq	17564 <dcngettext@plt+0x6574>
   17464:	mov	r3, #8
   17468:	mov	r0, r4
   1746c:	str	r3, [sp]
   17470:	rsb	r2, r2, #1
   17474:	mvn	r3, #-2147483648	; 0x80000000
   17478:	add	r1, sp, #28
   1747c:	bl	1960c <dcngettext@plt+0x861c>
   17480:	mov	r4, r0
   17484:	str	r0, [r7]
   17488:	ldr	r0, [r7, #4]
   1748c:	ldr	r2, [sp, #28]
   17490:	mov	r1, #0
   17494:	sub	r2, r2, r0
   17498:	add	r0, r4, r0, lsl #3
   1749c:	lsl	r2, r2, #3
   174a0:	bl	10f18 <memset@plt>
   174a4:	ldr	r3, [sp, #28]
   174a8:	str	r3, [r7, #4]
   174ac:	ldr	r8, [sp, #36]	; 0x24
   174b0:	ldr	fp, [r4]
   174b4:	ldr	r7, [r4, #4]
   174b8:	ldr	r2, [sp, #72]	; 0x48
   174bc:	ldr	r3, [sp, #32]
   174c0:	ldr	ip, [sp, #76]	; 0x4c
   174c4:	orr	r8, r8, #1
   174c8:	str	r2, [sp, #12]
   174cc:	str	r3, [sp]
   174d0:	str	r8, [sp, #4]
   174d4:	str	r5, [sp, #8]
   174d8:	mov	r1, fp
   174dc:	mov	r0, r7
   174e0:	str	ip, [sp, #16]
   174e4:	mvn	r3, #0
   174e8:	mov	r2, r6
   174ec:	bl	14b08 <dcngettext@plt+0x3b18>
   174f0:	cmp	fp, r0
   174f4:	bhi	17554 <dcngettext@plt+0x6564>
   174f8:	ldr	r3, [pc, #156]	; 1759c <dcngettext@plt+0x65ac>
   174fc:	add	fp, r0, #1
   17500:	cmp	r7, r3
   17504:	str	fp, [r4]
   17508:	beq	17514 <dcngettext@plt+0x6524>
   1750c:	mov	r0, r7
   17510:	bl	1483c <dcngettext@plt+0x384c>
   17514:	mov	r0, fp
   17518:	bl	193f0 <dcngettext@plt+0x8400>
   1751c:	ldr	lr, [sp, #76]	; 0x4c
   17520:	ldr	r3, [sp, #32]
   17524:	ldr	ip, [sp, #72]	; 0x48
   17528:	mov	r2, r6
   1752c:	mov	r1, fp
   17530:	str	r0, [r4, #4]
   17534:	str	r3, [sp]
   17538:	str	r5, [sp, #8]
   1753c:	str	r8, [sp, #4]
   17540:	str	lr, [sp, #16]
   17544:	str	ip, [sp, #12]
   17548:	mvn	r3, #0
   1754c:	mov	r7, r0
   17550:	bl	14b08 <dcngettext@plt+0x3b18>
   17554:	mov	r0, r7
   17558:	str	sl, [r9]
   1755c:	add	sp, sp, #84	; 0x54
   17560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17564:	mov	r3, #8
   17568:	str	r3, [sp]
   1756c:	add	r1, sp, #28
   17570:	rsb	r2, r2, #1
   17574:	mvn	r3, #-2147483648	; 0x80000000
   17578:	mov	r0, #0
   1757c:	bl	1960c <dcngettext@plt+0x861c>
   17580:	mov	r4, r0
   17584:	ldm	r8, {r0, r1}
   17588:	str	r4, [r7]
   1758c:	stm	r4, {r0, r1}
   17590:	b	17488 <dcngettext@plt+0x6498>
   17594:	muleq	r2, r0, r1
   17598:	andeq	ip, r2, ip, lsl #2
   1759c:	andeq	ip, r2, r0, asr #3
   175a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175a4:	mov	r6, r0
   175a8:	ldr	lr, [pc, #404]	; 17744 <dcngettext@plt+0x6754>
   175ac:	sub	sp, sp, #84	; 0x54
   175b0:	add	ip, sp, #32
   175b4:	ldm	lr!, {r0, r1, r2, r3}
   175b8:	ldr	r5, [pc, #392]	; 17748 <dcngettext@plt+0x6758>
   175bc:	stmia	ip!, {r0, r1, r2, r3}
   175c0:	ldm	lr!, {r0, r1, r2, r3}
   175c4:	ldr	r4, [sp, #44]	; 0x2c
   175c8:	stmia	ip!, {r0, r1, r2, r3}
   175cc:	ldm	lr, {r0, r1, r2, r3}
   175d0:	mvn	lr, r4
   175d4:	and	lr, lr, #67108864	; 0x4000000
   175d8:	eor	lr, lr, r4
   175dc:	stm	ip, {r0, r1, r2, r3}
   175e0:	str	lr, [sp, #44]	; 0x2c
   175e4:	bl	10ef4 <__errno_location@plt>
   175e8:	ldr	r2, [r5, #4]
   175ec:	ldr	r4, [r5]
   175f0:	cmp	r2, #0
   175f4:	mov	r8, r0
   175f8:	ldr	sl, [r0]
   175fc:	bgt	17658 <dcngettext@plt+0x6668>
   17600:	add	r7, r5, #8
   17604:	cmp	r4, r7
   17608:	str	r2, [sp, #28]
   1760c:	beq	17714 <dcngettext@plt+0x6724>
   17610:	mov	r3, #8
   17614:	mov	r0, r4
   17618:	str	r3, [sp]
   1761c:	rsb	r2, r2, #1
   17620:	mvn	r3, #-2147483648	; 0x80000000
   17624:	add	r1, sp, #28
   17628:	bl	1960c <dcngettext@plt+0x861c>
   1762c:	mov	r4, r0
   17630:	str	r0, [r5]
   17634:	ldr	r0, [r5, #4]
   17638:	ldr	r2, [sp, #28]
   1763c:	mov	r1, #0
   17640:	sub	r2, r2, r0
   17644:	add	r0, r4, r0, lsl #3
   17648:	lsl	r2, r2, #3
   1764c:	bl	10f18 <memset@plt>
   17650:	ldr	r3, [sp, #28]
   17654:	str	r3, [r5, #4]
   17658:	ldr	r7, [sp, #36]	; 0x24
   1765c:	ldr	r9, [r4]
   17660:	ldr	r5, [r4, #4]
   17664:	ldr	r2, [sp, #72]	; 0x48
   17668:	ldr	r3, [sp, #32]
   1766c:	ldr	ip, [sp, #76]	; 0x4c
   17670:	orr	r7, r7, #1
   17674:	add	fp, sp, #40	; 0x28
   17678:	str	r2, [sp, #12]
   1767c:	str	r3, [sp]
   17680:	str	r7, [sp, #4]
   17684:	mov	r1, r9
   17688:	mov	r0, r5
   1768c:	str	ip, [sp, #16]
   17690:	str	fp, [sp, #8]
   17694:	mvn	r3, #0
   17698:	mov	r2, r6
   1769c:	bl	14b08 <dcngettext@plt+0x3b18>
   176a0:	cmp	r9, r0
   176a4:	bhi	17704 <dcngettext@plt+0x6714>
   176a8:	ldr	r3, [pc, #156]	; 1774c <dcngettext@plt+0x675c>
   176ac:	add	r9, r0, #1
   176b0:	cmp	r5, r3
   176b4:	str	r9, [r4]
   176b8:	beq	176c4 <dcngettext@plt+0x66d4>
   176bc:	mov	r0, r5
   176c0:	bl	1483c <dcngettext@plt+0x384c>
   176c4:	mov	r0, r9
   176c8:	bl	193f0 <dcngettext@plt+0x8400>
   176cc:	ldr	lr, [sp, #76]	; 0x4c
   176d0:	ldr	r3, [sp, #32]
   176d4:	ldr	ip, [sp, #72]	; 0x48
   176d8:	mov	r2, r6
   176dc:	mov	r1, r9
   176e0:	str	r0, [r4, #4]
   176e4:	str	r3, [sp]
   176e8:	str	fp, [sp, #8]
   176ec:	str	r7, [sp, #4]
   176f0:	str	lr, [sp, #16]
   176f4:	str	ip, [sp, #12]
   176f8:	mvn	r3, #0
   176fc:	mov	r5, r0
   17700:	bl	14b08 <dcngettext@plt+0x3b18>
   17704:	mov	r0, r5
   17708:	str	sl, [r8]
   1770c:	add	sp, sp, #84	; 0x54
   17710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17714:	mov	r3, #8
   17718:	str	r3, [sp]
   1771c:	add	r1, sp, #28
   17720:	rsb	r2, r2, #1
   17724:	mvn	r3, #-2147483648	; 0x80000000
   17728:	mov	r0, #0
   1772c:	bl	1960c <dcngettext@plt+0x861c>
   17730:	mov	r4, r0
   17734:	ldm	r7, {r0, r1}
   17738:	str	r4, [r5]
   1773c:	stm	r4, {r0, r1}
   17740:	b	17634 <dcngettext@plt+0x6644>
   17744:	muleq	r2, r0, r1
   17748:	andeq	ip, r2, ip, lsl #2
   1774c:	andeq	ip, r2, r0, asr #3
   17750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17754:	mov	r9, r0
   17758:	ldr	lr, [pc, #416]	; 17900 <dcngettext@plt+0x6910>
   1775c:	mov	sl, r1
   17760:	sub	sp, sp, #92	; 0x5c
   17764:	ldm	lr!, {r0, r1, r2, r3}
   17768:	add	ip, sp, #40	; 0x28
   1776c:	ldr	r5, [pc, #400]	; 17904 <dcngettext@plt+0x6914>
   17770:	stmia	ip!, {r0, r1, r2, r3}
   17774:	ldm	lr!, {r0, r1, r2, r3}
   17778:	ldr	r4, [sp, #52]	; 0x34
   1777c:	stmia	ip!, {r0, r1, r2, r3}
   17780:	ldm	lr, {r0, r1, r2, r3}
   17784:	mvn	lr, r4
   17788:	and	lr, lr, #67108864	; 0x4000000
   1778c:	eor	lr, lr, r4
   17790:	stm	ip, {r0, r1, r2, r3}
   17794:	str	lr, [sp, #52]	; 0x34
   17798:	bl	10ef4 <__errno_location@plt>
   1779c:	ldr	r2, [r5, #4]
   177a0:	ldr	r4, [r5]
   177a4:	cmp	r2, #0
   177a8:	ldr	r3, [r0]
   177ac:	mov	r7, r0
   177b0:	str	r3, [sp, #28]
   177b4:	bgt	17810 <dcngettext@plt+0x6820>
   177b8:	add	r6, r5, #8
   177bc:	cmp	r4, r6
   177c0:	str	r2, [sp, #36]	; 0x24
   177c4:	beq	178d0 <dcngettext@plt+0x68e0>
   177c8:	mov	r3, #8
   177cc:	mov	r0, r4
   177d0:	str	r3, [sp]
   177d4:	rsb	r2, r2, #1
   177d8:	mvn	r3, #-2147483648	; 0x80000000
   177dc:	add	r1, sp, #36	; 0x24
   177e0:	bl	1960c <dcngettext@plt+0x861c>
   177e4:	mov	r4, r0
   177e8:	str	r0, [r5]
   177ec:	ldr	r0, [r5, #4]
   177f0:	ldr	r2, [sp, #36]	; 0x24
   177f4:	mov	r1, #0
   177f8:	sub	r2, r2, r0
   177fc:	add	r0, r4, r0, lsl #3
   17800:	lsl	r2, r2, #3
   17804:	bl	10f18 <memset@plt>
   17808:	ldr	r3, [sp, #36]	; 0x24
   1780c:	str	r3, [r5, #4]
   17810:	ldr	r6, [sp, #44]	; 0x2c
   17814:	ldr	r8, [r4]
   17818:	ldr	r5, [r4, #4]
   1781c:	ldr	r2, [sp, #80]	; 0x50
   17820:	ldr	r3, [sp, #40]	; 0x28
   17824:	ldr	ip, [sp, #84]	; 0x54
   17828:	orr	r6, r6, #1
   1782c:	add	fp, sp, #48	; 0x30
   17830:	str	r2, [sp, #12]
   17834:	str	r3, [sp]
   17838:	str	r6, [sp, #4]
   1783c:	mov	r1, r8
   17840:	mov	r0, r5
   17844:	str	ip, [sp, #16]
   17848:	str	fp, [sp, #8]
   1784c:	mov	r3, sl
   17850:	mov	r2, r9
   17854:	bl	14b08 <dcngettext@plt+0x3b18>
   17858:	cmp	r8, r0
   1785c:	bhi	178bc <dcngettext@plt+0x68cc>
   17860:	ldr	r3, [pc, #160]	; 17908 <dcngettext@plt+0x6918>
   17864:	add	r8, r0, #1
   17868:	cmp	r5, r3
   1786c:	str	r8, [r4]
   17870:	beq	1787c <dcngettext@plt+0x688c>
   17874:	mov	r0, r5
   17878:	bl	1483c <dcngettext@plt+0x384c>
   1787c:	mov	r0, r8
   17880:	bl	193f0 <dcngettext@plt+0x8400>
   17884:	ldr	ip, [sp, #84]	; 0x54
   17888:	ldr	lr, [sp, #40]	; 0x28
   1788c:	mov	r3, sl
   17890:	mov	r2, r9
   17894:	mov	r1, r8
   17898:	str	r0, [r4, #4]
   1789c:	ldr	r4, [sp, #80]	; 0x50
   178a0:	str	fp, [sp, #8]
   178a4:	str	r6, [sp, #4]
   178a8:	str	ip, [sp, #16]
   178ac:	str	r4, [sp, #12]
   178b0:	str	lr, [sp]
   178b4:	mov	r5, r0
   178b8:	bl	14b08 <dcngettext@plt+0x3b18>
   178bc:	ldr	r3, [sp, #28]
   178c0:	mov	r0, r5
   178c4:	str	r3, [r7]
   178c8:	add	sp, sp, #92	; 0x5c
   178cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178d0:	mov	r3, #8
   178d4:	str	r3, [sp]
   178d8:	add	r1, sp, #36	; 0x24
   178dc:	rsb	r2, r2, #1
   178e0:	mvn	r3, #-2147483648	; 0x80000000
   178e4:	mov	r0, #0
   178e8:	bl	1960c <dcngettext@plt+0x861c>
   178ec:	mov	r4, r0
   178f0:	ldm	r6, {r0, r1}
   178f4:	str	r4, [r5]
   178f8:	stm	r4, {r0, r1}
   178fc:	b	177ec <dcngettext@plt+0x67fc>
   17900:	muleq	r2, r0, r1
   17904:	andeq	ip, r2, ip, lsl #2
   17908:	andeq	ip, r2, r0, asr #3
   1790c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17910:	sub	sp, sp, #180	; 0xb4
   17914:	mov	r6, r1
   17918:	mov	r4, r0
   1791c:	mov	r9, r2
   17920:	add	r0, sp, #80	; 0x50
   17924:	mov	r2, #48	; 0x30
   17928:	mov	r1, #0
   1792c:	bl	10f18 <memset@plt>
   17930:	cmp	r6, #10
   17934:	beq	17b14 <dcngettext@plt+0x6b24>
   17938:	add	r5, sp, #80	; 0x50
   1793c:	str	r6, [sp, #80]	; 0x50
   17940:	ldm	r5!, {r0, r1, r2, r3}
   17944:	add	ip, sp, #128	; 0x80
   17948:	mov	r7, ip
   1794c:	add	lr, sp, #32
   17950:	stmia	ip!, {r0, r1, r2, r3}
   17954:	mov	r8, #67108864	; 0x4000000
   17958:	ldm	r5!, {r0, r1, r2, r3}
   1795c:	ldr	r6, [pc, #436]	; 17b18 <dcngettext@plt+0x6b28>
   17960:	stmia	ip!, {r0, r1, r2, r3}
   17964:	ldm	r5, {r0, r1, r2, r3}
   17968:	stm	ip, {r0, r1, r2, r3}
   1796c:	ldm	r7!, {r0, r1, r2, r3}
   17970:	stmia	lr!, {r0, r1, r2, r3}
   17974:	ldm	r7!, {r0, r1, r2, r3}
   17978:	str	r8, [sp, #44]	; 0x2c
   1797c:	stmia	lr!, {r0, r1, r2, r3}
   17980:	ldm	ip, {r0, r1, r2, r3}
   17984:	stm	lr, {r0, r1, r2, r3}
   17988:	bl	10ef4 <__errno_location@plt>
   1798c:	cmn	r4, #-2147483647	; 0x80000001
   17990:	ldr	r5, [r6]
   17994:	mov	r7, r0
   17998:	movne	r0, #0
   1799c:	moveq	r0, #1
   179a0:	ldr	r3, [r7]
   179a4:	orrs	r0, r0, r4, lsr #31
   179a8:	str	r3, [sp, #24]
   179ac:	bne	17b14 <dcngettext@plt+0x6b24>
   179b0:	ldr	r2, [r6, #4]
   179b4:	cmp	r4, r2
   179b8:	blt	17a18 <dcngettext@plt+0x6a28>
   179bc:	add	r8, r6, #8
   179c0:	cmp	r5, r8
   179c4:	str	r2, [sp, #80]	; 0x50
   179c8:	beq	17ae4 <dcngettext@plt+0x6af4>
   179cc:	mov	r3, #8
   179d0:	sub	r2, r4, r2
   179d4:	mov	r0, r5
   179d8:	str	r3, [sp]
   179dc:	add	r2, r2, #1
   179e0:	add	r1, sp, #80	; 0x50
   179e4:	mvn	r3, #-2147483648	; 0x80000000
   179e8:	bl	1960c <dcngettext@plt+0x861c>
   179ec:	mov	r5, r0
   179f0:	str	r0, [r6]
   179f4:	ldr	r0, [r6, #4]
   179f8:	ldr	r2, [sp, #80]	; 0x50
   179fc:	mov	r1, #0
   17a00:	sub	r2, r2, r0
   17a04:	add	r0, r5, r0, lsl #3
   17a08:	lsl	r2, r2, #3
   17a0c:	bl	10f18 <memset@plt>
   17a10:	ldr	r3, [sp, #80]	; 0x50
   17a14:	str	r3, [r6, #4]
   17a18:	add	fp, r5, r4, lsl #3
   17a1c:	ldr	r1, [sp, #36]	; 0x24
   17a20:	ldr	r8, [r5, r4, lsl #3]
   17a24:	ldr	r6, [fp, #4]
   17a28:	ldr	r2, [sp, #72]	; 0x48
   17a2c:	ldr	r3, [sp, #32]
   17a30:	ldr	ip, [sp, #76]	; 0x4c
   17a34:	orr	r1, r1, #1
   17a38:	add	sl, sp, #40	; 0x28
   17a3c:	str	r1, [sp, #28]
   17a40:	str	r1, [sp, #4]
   17a44:	str	r2, [sp, #12]
   17a48:	str	r3, [sp]
   17a4c:	mov	r0, r6
   17a50:	mov	r1, r8
   17a54:	str	ip, [sp, #16]
   17a58:	str	sl, [sp, #8]
   17a5c:	mvn	r3, #0
   17a60:	mov	r2, r9
   17a64:	bl	14b08 <dcngettext@plt+0x3b18>
   17a68:	cmp	r8, r0
   17a6c:	bhi	17ad0 <dcngettext@plt+0x6ae0>
   17a70:	ldr	r3, [pc, #164]	; 17b1c <dcngettext@plt+0x6b2c>
   17a74:	add	r8, r0, #1
   17a78:	cmp	r6, r3
   17a7c:	str	r8, [r5, r4, lsl #3]
   17a80:	beq	17a8c <dcngettext@plt+0x6a9c>
   17a84:	mov	r0, r6
   17a88:	bl	1483c <dcngettext@plt+0x384c>
   17a8c:	mov	r0, r8
   17a90:	bl	193f0 <dcngettext@plt+0x8400>
   17a94:	ldr	lr, [sp, #76]	; 0x4c
   17a98:	ldr	r3, [sp, #32]
   17a9c:	ldr	ip, [sp, #72]	; 0x48
   17aa0:	ldr	r4, [sp, #28]
   17aa4:	mov	r2, r9
   17aa8:	mov	r1, r8
   17aac:	str	r0, [fp, #4]
   17ab0:	str	r3, [sp]
   17ab4:	str	sl, [sp, #8]
   17ab8:	str	r4, [sp, #4]
   17abc:	str	lr, [sp, #16]
   17ac0:	str	ip, [sp, #12]
   17ac4:	mvn	r3, #0
   17ac8:	mov	r6, r0
   17acc:	bl	14b08 <dcngettext@plt+0x3b18>
   17ad0:	ldr	r3, [sp, #24]
   17ad4:	mov	r0, r6
   17ad8:	str	r3, [r7]
   17adc:	add	sp, sp, #180	; 0xb4
   17ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ae4:	mov	r3, #8
   17ae8:	sub	r2, r4, r2
   17aec:	add	r1, sp, #80	; 0x50
   17af0:	str	r3, [sp]
   17af4:	add	r2, r2, #1
   17af8:	mvn	r3, #-2147483648	; 0x80000000
   17afc:	bl	1960c <dcngettext@plt+0x861c>
   17b00:	mov	r5, r0
   17b04:	ldm	r8, {r0, r1}
   17b08:	str	r5, [r6]
   17b0c:	stm	r5, {r0, r1}
   17b10:	b	179f4 <dcngettext@plt+0x6a04>
   17b14:	bl	10fd8 <abort@plt>
   17b18:	andeq	ip, r2, ip, lsl #2
   17b1c:	andeq	ip, r2, r0, asr #3
   17b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b24:	mov	r7, r1
   17b28:	ldr	lr, [pc, #492]	; 17d1c <dcngettext@plt+0x6d2c>
   17b2c:	mov	r8, r2
   17b30:	mov	r4, r0
   17b34:	mov	fp, r3
   17b38:	ldm	lr!, {r0, r1, r2, r3}
   17b3c:	sub	sp, sp, #100	; 0x64
   17b40:	add	ip, sp, #48	; 0x30
   17b44:	mov	sl, #10
   17b48:	stmia	ip!, {r0, r1, r2, r3}
   17b4c:	cmp	r8, #0
   17b50:	cmpne	r7, #0
   17b54:	ldm	lr!, {r0, r1, r2, r3}
   17b58:	str	sl, [sp, #48]	; 0x30
   17b5c:	stmia	ip!, {r0, r1, r2, r3}
   17b60:	ldm	lr, {r0, r1, r2, r3}
   17b64:	stm	ip, {r0, r1, r2, r3}
   17b68:	beq	17d18 <dcngettext@plt+0x6d28>
   17b6c:	str	r7, [sp, #88]	; 0x58
   17b70:	str	r8, [sp, #92]	; 0x5c
   17b74:	bl	10ef4 <__errno_location@plt>
   17b78:	ldr	r6, [pc, #416]	; 17d20 <dcngettext@plt+0x6d30>
   17b7c:	cmn	r4, #-2147483647	; 0x80000001
   17b80:	ldr	r5, [r6]
   17b84:	mov	r9, r0
   17b88:	movne	r0, #0
   17b8c:	moveq	r0, #1
   17b90:	ldr	r3, [r9]
   17b94:	orrs	r0, r0, r4, lsr #31
   17b98:	str	r3, [sp, #28]
   17b9c:	bne	17d18 <dcngettext@plt+0x6d28>
   17ba0:	ldr	r2, [r6, #4]
   17ba4:	cmp	r4, r2
   17ba8:	movlt	r3, sl
   17bac:	blt	17c18 <dcngettext@plt+0x6c28>
   17bb0:	add	r7, r6, #8
   17bb4:	cmp	r5, r7
   17bb8:	str	r2, [sp, #44]	; 0x2c
   17bbc:	beq	17ce8 <dcngettext@plt+0x6cf8>
   17bc0:	mov	r3, #8
   17bc4:	sub	r2, r4, r2
   17bc8:	mov	r0, r5
   17bcc:	str	r3, [sp]
   17bd0:	add	r2, r2, #1
   17bd4:	mvn	r3, #-2147483648	; 0x80000000
   17bd8:	add	r1, sp, #44	; 0x2c
   17bdc:	bl	1960c <dcngettext@plt+0x861c>
   17be0:	mov	r5, r0
   17be4:	str	r0, [r6]
   17be8:	ldr	r0, [r6, #4]
   17bec:	ldr	r2, [sp, #44]	; 0x2c
   17bf0:	mov	r1, #0
   17bf4:	sub	r2, r2, r0
   17bf8:	add	r0, r5, r0, lsl #3
   17bfc:	lsl	r2, r2, #3
   17c00:	bl	10f18 <memset@plt>
   17c04:	ldr	r3, [sp, #48]	; 0x30
   17c08:	ldr	r7, [sp, #88]	; 0x58
   17c0c:	ldr	r8, [sp, #92]	; 0x5c
   17c10:	ldr	r2, [sp, #44]	; 0x2c
   17c14:	str	r2, [r6, #4]
   17c18:	add	r2, r5, r4, lsl #3
   17c1c:	mov	r1, r2
   17c20:	str	r2, [sp, #32]
   17c24:	ldr	r2, [sp, #52]	; 0x34
   17c28:	ldr	r6, [r1, #4]
   17c2c:	ldr	sl, [r5, r4, lsl #3]
   17c30:	orr	r2, r2, #1
   17c34:	str	r3, [sp]
   17c38:	add	r3, sp, #56	; 0x38
   17c3c:	str	r2, [sp, #36]	; 0x24
   17c40:	str	r2, [sp, #4]
   17c44:	str	r3, [sp, #8]
   17c48:	mov	r0, r6
   17c4c:	str	r8, [sp, #16]
   17c50:	str	r7, [sp, #12]
   17c54:	mov	r1, sl
   17c58:	mvn	r3, #0
   17c5c:	mov	r2, fp
   17c60:	bl	14b08 <dcngettext@plt+0x3b18>
   17c64:	cmp	sl, r0
   17c68:	bhi	17cd4 <dcngettext@plt+0x6ce4>
   17c6c:	ldr	r3, [pc, #176]	; 17d24 <dcngettext@plt+0x6d34>
   17c70:	add	r7, r0, #1
   17c74:	cmp	r6, r3
   17c78:	str	r7, [r5, r4, lsl #3]
   17c7c:	beq	17c88 <dcngettext@plt+0x6c98>
   17c80:	mov	r0, r6
   17c84:	bl	1483c <dcngettext@plt+0x384c>
   17c88:	mov	r0, r7
   17c8c:	bl	193f0 <dcngettext@plt+0x8400>
   17c90:	ldr	r3, [sp, #32]
   17c94:	ldr	lr, [sp, #92]	; 0x5c
   17c98:	ldr	ip, [sp, #88]	; 0x58
   17c9c:	ldr	r4, [sp, #36]	; 0x24
   17ca0:	mov	r2, fp
   17ca4:	mov	r1, r7
   17ca8:	str	r0, [r3, #4]
   17cac:	add	r3, sp, #56	; 0x38
   17cb0:	str	r3, [sp, #8]
   17cb4:	ldr	r3, [sp, #48]	; 0x30
   17cb8:	str	r4, [sp, #4]
   17cbc:	str	r3, [sp]
   17cc0:	str	lr, [sp, #16]
   17cc4:	str	ip, [sp, #12]
   17cc8:	mvn	r3, #0
   17ccc:	mov	r6, r0
   17cd0:	bl	14b08 <dcngettext@plt+0x3b18>
   17cd4:	ldr	r3, [sp, #28]
   17cd8:	mov	r0, r6
   17cdc:	str	r3, [r9]
   17ce0:	add	sp, sp, #100	; 0x64
   17ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ce8:	mov	r3, #8
   17cec:	sub	r2, r4, r2
   17cf0:	str	r3, [sp]
   17cf4:	add	r1, sp, #44	; 0x2c
   17cf8:	add	r2, r2, #1
   17cfc:	mvn	r3, #-2147483648	; 0x80000000
   17d00:	bl	1960c <dcngettext@plt+0x861c>
   17d04:	mov	r5, r0
   17d08:	ldm	r7, {r0, r1}
   17d0c:	str	r5, [r6]
   17d10:	stm	r5, {r0, r1}
   17d14:	b	17be8 <dcngettext@plt+0x6bf8>
   17d18:	bl	10fd8 <abort@plt>
   17d1c:	muleq	r2, r0, r1
   17d20:	andeq	ip, r2, ip, lsl #2
   17d24:	andeq	ip, r2, r0, asr #3
   17d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d2c:	mov	r7, r1
   17d30:	ldr	lr, [pc, #492]	; 17f24 <dcngettext@plt+0x6f34>
   17d34:	mov	r8, r2
   17d38:	mov	r4, r0
   17d3c:	mov	fp, r3
   17d40:	ldm	lr!, {r0, r1, r2, r3}
   17d44:	sub	sp, sp, #100	; 0x64
   17d48:	add	ip, sp, #48	; 0x30
   17d4c:	mov	sl, #10
   17d50:	stmia	ip!, {r0, r1, r2, r3}
   17d54:	cmp	r8, #0
   17d58:	cmpne	r7, #0
   17d5c:	ldm	lr!, {r0, r1, r2, r3}
   17d60:	str	sl, [sp, #48]	; 0x30
   17d64:	stmia	ip!, {r0, r1, r2, r3}
   17d68:	ldm	lr, {r0, r1, r2, r3}
   17d6c:	stm	ip, {r0, r1, r2, r3}
   17d70:	beq	17f20 <dcngettext@plt+0x6f30>
   17d74:	str	r7, [sp, #88]	; 0x58
   17d78:	str	r8, [sp, #92]	; 0x5c
   17d7c:	bl	10ef4 <__errno_location@plt>
   17d80:	ldr	r6, [pc, #416]	; 17f28 <dcngettext@plt+0x6f38>
   17d84:	cmn	r4, #-2147483647	; 0x80000001
   17d88:	ldr	r5, [r6]
   17d8c:	mov	r9, r0
   17d90:	movne	r0, #0
   17d94:	moveq	r0, #1
   17d98:	ldr	r3, [r9]
   17d9c:	orrs	r0, r0, r4, lsr #31
   17da0:	str	r3, [sp, #28]
   17da4:	bne	17f20 <dcngettext@plt+0x6f30>
   17da8:	ldr	r2, [r6, #4]
   17dac:	cmp	r4, r2
   17db0:	movlt	r3, sl
   17db4:	blt	17e20 <dcngettext@plt+0x6e30>
   17db8:	add	r7, r6, #8
   17dbc:	cmp	r5, r7
   17dc0:	str	r2, [sp, #44]	; 0x2c
   17dc4:	beq	17ef0 <dcngettext@plt+0x6f00>
   17dc8:	mov	r3, #8
   17dcc:	sub	r2, r4, r2
   17dd0:	mov	r0, r5
   17dd4:	str	r3, [sp]
   17dd8:	add	r2, r2, #1
   17ddc:	mvn	r3, #-2147483648	; 0x80000000
   17de0:	add	r1, sp, #44	; 0x2c
   17de4:	bl	1960c <dcngettext@plt+0x861c>
   17de8:	mov	r5, r0
   17dec:	str	r0, [r6]
   17df0:	ldr	r0, [r6, #4]
   17df4:	ldr	r2, [sp, #44]	; 0x2c
   17df8:	mov	r1, #0
   17dfc:	sub	r2, r2, r0
   17e00:	add	r0, r5, r0, lsl #3
   17e04:	lsl	r2, r2, #3
   17e08:	bl	10f18 <memset@plt>
   17e0c:	ldr	r3, [sp, #48]	; 0x30
   17e10:	ldr	r7, [sp, #88]	; 0x58
   17e14:	ldr	r8, [sp, #92]	; 0x5c
   17e18:	ldr	r2, [sp, #44]	; 0x2c
   17e1c:	str	r2, [r6, #4]
   17e20:	add	r2, r5, r4, lsl #3
   17e24:	mov	r1, r2
   17e28:	str	r2, [sp, #32]
   17e2c:	ldr	r2, [sp, #52]	; 0x34
   17e30:	ldr	r6, [r1, #4]
   17e34:	ldr	sl, [r5, r4, lsl #3]
   17e38:	orr	r2, r2, #1
   17e3c:	str	r3, [sp]
   17e40:	add	r3, sp, #56	; 0x38
   17e44:	str	r2, [sp, #36]	; 0x24
   17e48:	str	r2, [sp, #4]
   17e4c:	str	r3, [sp, #8]
   17e50:	mov	r0, r6
   17e54:	str	r8, [sp, #16]
   17e58:	str	r7, [sp, #12]
   17e5c:	mov	r1, sl
   17e60:	ldr	r3, [sp, #136]	; 0x88
   17e64:	mov	r2, fp
   17e68:	bl	14b08 <dcngettext@plt+0x3b18>
   17e6c:	cmp	sl, r0
   17e70:	bhi	17edc <dcngettext@plt+0x6eec>
   17e74:	ldr	r3, [pc, #176]	; 17f2c <dcngettext@plt+0x6f3c>
   17e78:	add	r7, r0, #1
   17e7c:	cmp	r6, r3
   17e80:	str	r7, [r5, r4, lsl #3]
   17e84:	beq	17e90 <dcngettext@plt+0x6ea0>
   17e88:	mov	r0, r6
   17e8c:	bl	1483c <dcngettext@plt+0x384c>
   17e90:	mov	r0, r7
   17e94:	bl	193f0 <dcngettext@plt+0x8400>
   17e98:	ldr	r3, [sp, #32]
   17e9c:	ldr	lr, [sp, #92]	; 0x5c
   17ea0:	ldr	ip, [sp, #88]	; 0x58
   17ea4:	ldr	r4, [sp, #36]	; 0x24
   17ea8:	mov	r2, fp
   17eac:	mov	r1, r7
   17eb0:	str	r0, [r3, #4]
   17eb4:	add	r3, sp, #56	; 0x38
   17eb8:	str	r3, [sp, #8]
   17ebc:	ldr	r3, [sp, #48]	; 0x30
   17ec0:	str	r4, [sp, #4]
   17ec4:	str	r3, [sp]
   17ec8:	str	lr, [sp, #16]
   17ecc:	str	ip, [sp, #12]
   17ed0:	ldr	r3, [sp, #136]	; 0x88
   17ed4:	mov	r6, r0
   17ed8:	bl	14b08 <dcngettext@plt+0x3b18>
   17edc:	ldr	r3, [sp, #28]
   17ee0:	mov	r0, r6
   17ee4:	str	r3, [r9]
   17ee8:	add	sp, sp, #100	; 0x64
   17eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ef0:	mov	r3, #8
   17ef4:	sub	r2, r4, r2
   17ef8:	str	r3, [sp]
   17efc:	add	r1, sp, #44	; 0x2c
   17f00:	add	r2, r2, #1
   17f04:	mvn	r3, #-2147483648	; 0x80000000
   17f08:	bl	1960c <dcngettext@plt+0x861c>
   17f0c:	mov	r5, r0
   17f10:	ldm	r7, {r0, r1}
   17f14:	str	r5, [r6]
   17f18:	stm	r5, {r0, r1}
   17f1c:	b	17df0 <dcngettext@plt+0x6e00>
   17f20:	bl	10fd8 <abort@plt>
   17f24:	muleq	r2, r0, r1
   17f28:	andeq	ip, r2, ip, lsl #2
   17f2c:	andeq	ip, r2, r0, asr #3
   17f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f34:	mov	r5, r0
   17f38:	ldr	lr, [pc, #452]	; 18104 <dcngettext@plt+0x7114>
   17f3c:	mov	r6, r1
   17f40:	mov	sl, r2
   17f44:	ldm	lr!, {r0, r1, r2, r3}
   17f48:	sub	sp, sp, #92	; 0x5c
   17f4c:	add	ip, sp, #40	; 0x28
   17f50:	cmp	r6, #0
   17f54:	cmpne	r5, #0
   17f58:	stmia	ip!, {r0, r1, r2, r3}
   17f5c:	mov	r9, #10
   17f60:	ldm	lr!, {r0, r1, r2, r3}
   17f64:	moveq	fp, #1
   17f68:	movne	fp, #0
   17f6c:	str	r9, [sp, #40]	; 0x28
   17f70:	stmia	ip!, {r0, r1, r2, r3}
   17f74:	ldm	lr, {r0, r1, r2, r3}
   17f78:	stm	ip, {r0, r1, r2, r3}
   17f7c:	beq	18100 <dcngettext@plt+0x7110>
   17f80:	str	r5, [sp, #80]	; 0x50
   17f84:	str	r6, [sp, #84]	; 0x54
   17f88:	bl	10ef4 <__errno_location@plt>
   17f8c:	ldr	r7, [pc, #372]	; 18108 <dcngettext@plt+0x7118>
   17f90:	ldr	r2, [r7, #4]
   17f94:	ldr	r4, [r7]
   17f98:	cmp	r2, #0
   17f9c:	ldr	r3, [r0]
   17fa0:	mov	r8, r0
   17fa4:	str	r3, [sp, #24]
   17fa8:	movgt	r3, r9
   17fac:	bgt	18014 <dcngettext@plt+0x7024>
   17fb0:	add	r5, r7, #8
   17fb4:	cmp	r4, r5
   17fb8:	str	r2, [sp, #36]	; 0x24
   17fbc:	beq	180d0 <dcngettext@plt+0x70e0>
   17fc0:	mov	r3, #8
   17fc4:	mov	r0, r4
   17fc8:	str	r3, [sp]
   17fcc:	rsb	r2, r2, #1
   17fd0:	mvn	r3, #-2147483648	; 0x80000000
   17fd4:	add	r1, sp, #36	; 0x24
   17fd8:	bl	1960c <dcngettext@plt+0x861c>
   17fdc:	mov	r4, r0
   17fe0:	str	r0, [r7]
   17fe4:	ldr	r0, [r7, #4]
   17fe8:	ldr	r2, [sp, #36]	; 0x24
   17fec:	mov	r1, #0
   17ff0:	sub	r2, r2, r0
   17ff4:	add	r0, r4, r0, lsl #3
   17ff8:	lsl	r2, r2, #3
   17ffc:	bl	10f18 <memset@plt>
   18000:	ldr	r3, [sp, #40]	; 0x28
   18004:	ldr	r5, [sp, #80]	; 0x50
   18008:	ldr	r6, [sp, #84]	; 0x54
   1800c:	ldr	r2, [sp, #36]	; 0x24
   18010:	str	r2, [r7, #4]
   18014:	ldr	r2, [sp, #44]	; 0x2c
   18018:	ldr	r9, [r4]
   1801c:	ldr	r7, [r4, #4]
   18020:	orr	r2, r2, #1
   18024:	add	fp, sp, #48	; 0x30
   18028:	str	r2, [sp, #28]
   1802c:	str	r2, [sp, #4]
   18030:	str	r3, [sp]
   18034:	str	r6, [sp, #16]
   18038:	str	r5, [sp, #12]
   1803c:	mov	r1, r9
   18040:	mov	r0, r7
   18044:	str	fp, [sp, #8]
   18048:	mvn	r3, #0
   1804c:	mov	r2, sl
   18050:	bl	14b08 <dcngettext@plt+0x3b18>
   18054:	cmp	r9, r0
   18058:	bhi	180bc <dcngettext@plt+0x70cc>
   1805c:	ldr	r3, [pc, #168]	; 1810c <dcngettext@plt+0x711c>
   18060:	add	r5, r0, #1
   18064:	cmp	r7, r3
   18068:	str	r5, [r4]
   1806c:	beq	18078 <dcngettext@plt+0x7088>
   18070:	mov	r0, r7
   18074:	bl	1483c <dcngettext@plt+0x384c>
   18078:	mov	r0, r5
   1807c:	bl	193f0 <dcngettext@plt+0x8400>
   18080:	ldr	lr, [sp, #84]	; 0x54
   18084:	ldr	r3, [sp, #40]	; 0x28
   18088:	ldr	ip, [sp, #80]	; 0x50
   1808c:	mov	r2, sl
   18090:	mov	r1, r5
   18094:	str	r0, [r4, #4]
   18098:	ldr	r4, [sp, #28]
   1809c:	str	r3, [sp]
   180a0:	str	fp, [sp, #8]
   180a4:	str	r4, [sp, #4]
   180a8:	str	lr, [sp, #16]
   180ac:	str	ip, [sp, #12]
   180b0:	mvn	r3, #0
   180b4:	mov	r7, r0
   180b8:	bl	14b08 <dcngettext@plt+0x3b18>
   180bc:	ldr	r3, [sp, #24]
   180c0:	mov	r0, r7
   180c4:	str	r3, [r8]
   180c8:	add	sp, sp, #92	; 0x5c
   180cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180d0:	mov	r3, #8
   180d4:	str	r3, [sp]
   180d8:	add	r1, sp, #36	; 0x24
   180dc:	rsb	r2, r2, #1
   180e0:	mov	r0, fp
   180e4:	mvn	r3, #-2147483648	; 0x80000000
   180e8:	bl	1960c <dcngettext@plt+0x861c>
   180ec:	mov	r4, r0
   180f0:	ldm	r5, {r0, r1}
   180f4:	str	r4, [r7]
   180f8:	stm	r4, {r0, r1}
   180fc:	b	17fe4 <dcngettext@plt+0x6ff4>
   18100:	bl	10fd8 <abort@plt>
   18104:	muleq	r2, r0, r1
   18108:	andeq	ip, r2, ip, lsl #2
   1810c:	andeq	ip, r2, r0, asr #3
   18110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18114:	mov	r5, r0
   18118:	ldr	lr, [pc, #464]	; 182f0 <dcngettext@plt+0x7300>
   1811c:	mov	r6, r1
   18120:	mov	sl, r2
   18124:	mov	fp, r3
   18128:	ldm	lr!, {r0, r1, r2, r3}
   1812c:	sub	sp, sp, #92	; 0x5c
   18130:	add	ip, sp, #40	; 0x28
   18134:	cmp	r6, #0
   18138:	cmpne	r5, #0
   1813c:	stmia	ip!, {r0, r1, r2, r3}
   18140:	moveq	r4, #1
   18144:	ldm	lr!, {r0, r1, r2, r3}
   18148:	movne	r4, #0
   1814c:	mov	r9, #10
   18150:	str	r4, [sp, #28]
   18154:	stmia	ip!, {r0, r1, r2, r3}
   18158:	ldm	lr, {r0, r1, r2, r3}
   1815c:	str	r9, [sp, #40]	; 0x28
   18160:	stm	ip, {r0, r1, r2, r3}
   18164:	beq	182ec <dcngettext@plt+0x72fc>
   18168:	str	r5, [sp, #80]	; 0x50
   1816c:	str	r6, [sp, #84]	; 0x54
   18170:	bl	10ef4 <__errno_location@plt>
   18174:	ldr	r7, [pc, #376]	; 182f4 <dcngettext@plt+0x7304>
   18178:	ldr	r2, [r7, #4]
   1817c:	ldr	r4, [r7]
   18180:	cmp	r2, #0
   18184:	ldr	r3, [r0]
   18188:	mov	r8, r0
   1818c:	str	r3, [sp, #24]
   18190:	movgt	r3, r9
   18194:	bgt	181fc <dcngettext@plt+0x720c>
   18198:	add	r5, r7, #8
   1819c:	cmp	r4, r5
   181a0:	str	r2, [sp, #36]	; 0x24
   181a4:	beq	182bc <dcngettext@plt+0x72cc>
   181a8:	mov	r3, #8
   181ac:	mov	r0, r4
   181b0:	str	r3, [sp]
   181b4:	rsb	r2, r2, #1
   181b8:	mvn	r3, #-2147483648	; 0x80000000
   181bc:	add	r1, sp, #36	; 0x24
   181c0:	bl	1960c <dcngettext@plt+0x861c>
   181c4:	mov	r4, r0
   181c8:	str	r0, [r7]
   181cc:	ldr	r0, [r7, #4]
   181d0:	ldr	r2, [sp, #36]	; 0x24
   181d4:	mov	r1, #0
   181d8:	sub	r2, r2, r0
   181dc:	add	r0, r4, r0, lsl #3
   181e0:	lsl	r2, r2, #3
   181e4:	bl	10f18 <memset@plt>
   181e8:	ldr	r3, [sp, #40]	; 0x28
   181ec:	ldr	r5, [sp, #80]	; 0x50
   181f0:	ldr	r6, [sp, #84]	; 0x54
   181f4:	ldr	r2, [sp, #36]	; 0x24
   181f8:	str	r2, [r7, #4]
   181fc:	ldr	r2, [sp, #44]	; 0x2c
   18200:	ldr	r9, [r4]
   18204:	ldr	r7, [r4, #4]
   18208:	orr	r2, r2, #1
   1820c:	str	r3, [sp]
   18210:	add	r3, sp, #48	; 0x30
   18214:	str	r2, [sp, #28]
   18218:	str	r2, [sp, #4]
   1821c:	str	r3, [sp, #8]
   18220:	str	r6, [sp, #16]
   18224:	str	r5, [sp, #12]
   18228:	mov	r1, r9
   1822c:	mov	r0, r7
   18230:	mov	r3, fp
   18234:	mov	r2, sl
   18238:	bl	14b08 <dcngettext@plt+0x3b18>
   1823c:	cmp	r9, r0
   18240:	bhi	182a8 <dcngettext@plt+0x72b8>
   18244:	ldr	r3, [pc, #172]	; 182f8 <dcngettext@plt+0x7308>
   18248:	add	r5, r0, #1
   1824c:	cmp	r7, r3
   18250:	str	r5, [r4]
   18254:	beq	18260 <dcngettext@plt+0x7270>
   18258:	mov	r0, r7
   1825c:	bl	1483c <dcngettext@plt+0x384c>
   18260:	mov	r0, r5
   18264:	bl	193f0 <dcngettext@plt+0x8400>
   18268:	add	lr, sp, #48	; 0x30
   1826c:	ldr	ip, [sp, #84]	; 0x54
   18270:	mov	r1, r5
   18274:	ldr	r5, [sp, #28]
   18278:	mov	r3, fp
   1827c:	mov	r2, sl
   18280:	str	r0, [r4, #4]
   18284:	ldr	r4, [sp, #80]	; 0x50
   18288:	str	lr, [sp, #8]
   1828c:	ldr	lr, [sp, #40]	; 0x28
   18290:	str	r5, [sp, #4]
   18294:	str	ip, [sp, #16]
   18298:	str	r4, [sp, #12]
   1829c:	str	lr, [sp]
   182a0:	mov	r7, r0
   182a4:	bl	14b08 <dcngettext@plt+0x3b18>
   182a8:	ldr	r3, [sp, #24]
   182ac:	mov	r0, r7
   182b0:	str	r3, [r8]
   182b4:	add	sp, sp, #92	; 0x5c
   182b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182bc:	mov	r3, #8
   182c0:	str	r3, [sp]
   182c4:	add	r1, sp, #36	; 0x24
   182c8:	rsb	r2, r2, #1
   182cc:	ldr	r0, [sp, #28]
   182d0:	mvn	r3, #-2147483648	; 0x80000000
   182d4:	bl	1960c <dcngettext@plt+0x861c>
   182d8:	mov	r4, r0
   182dc:	ldm	r5, {r0, r1}
   182e0:	str	r4, [r7]
   182e4:	stm	r4, {r0, r1}
   182e8:	b	181cc <dcngettext@plt+0x71dc>
   182ec:	bl	10fd8 <abort@plt>
   182f0:	muleq	r2, r0, r1
   182f4:	andeq	ip, r2, ip, lsl #2
   182f8:	andeq	ip, r2, r0, asr #3
   182fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18300:	sub	sp, sp, #52	; 0x34
   18304:	mov	r5, r0
   18308:	mov	sl, r1
   1830c:	mov	fp, r2
   18310:	bl	10ef4 <__errno_location@plt>
   18314:	ldr	r4, [pc, #404]	; 184b0 <dcngettext@plt+0x74c0>
   18318:	cmn	r5, #-2147483647	; 0x80000001
   1831c:	ldr	r6, [r4]
   18320:	mov	r8, r0
   18324:	movne	r0, #0
   18328:	moveq	r0, #1
   1832c:	ldr	r3, [r8]
   18330:	orrs	r0, r0, r5, lsr #31
   18334:	str	r3, [sp, #28]
   18338:	bne	184ac <dcngettext@plt+0x74bc>
   1833c:	ldr	r2, [r4, #4]
   18340:	cmp	r5, r2
   18344:	blt	183a4 <dcngettext@plt+0x73b4>
   18348:	add	r7, r4, #8
   1834c:	cmp	r6, r7
   18350:	str	r2, [sp, #44]	; 0x2c
   18354:	beq	1847c <dcngettext@plt+0x748c>
   18358:	mov	r3, #8
   1835c:	sub	r2, r5, r2
   18360:	mov	r0, r6
   18364:	str	r3, [sp]
   18368:	add	r2, r2, #1
   1836c:	mvn	r3, #-2147483648	; 0x80000000
   18370:	add	r1, sp, #44	; 0x2c
   18374:	bl	1960c <dcngettext@plt+0x861c>
   18378:	mov	r6, r0
   1837c:	str	r0, [r4]
   18380:	ldr	r0, [r4, #4]
   18384:	ldr	r2, [sp, #44]	; 0x2c
   18388:	mov	r1, #0
   1838c:	sub	r2, r2, r0
   18390:	add	r0, r6, r0, lsl #3
   18394:	lsl	r2, r2, #3
   18398:	bl	10f18 <memset@plt>
   1839c:	ldr	r3, [sp, #44]	; 0x2c
   183a0:	str	r3, [r4, #4]
   183a4:	ldr	r2, [r4, #56]	; 0x38
   183a8:	add	r3, r6, r5, lsl #3
   183ac:	ldr	r1, [r4, #20]
   183b0:	ldr	r7, [r3, #4]
   183b4:	ldr	r9, [r6, r5, lsl #3]
   183b8:	ldr	ip, [r4, #60]	; 0x3c
   183bc:	str	r3, [sp, #32]
   183c0:	ldr	r3, [r4, #16]
   183c4:	str	r2, [sp, #12]
   183c8:	ldr	r2, [pc, #228]	; 184b4 <dcngettext@plt+0x74c4>
   183cc:	orr	r1, r1, #1
   183d0:	str	r1, [sp, #36]	; 0x24
   183d4:	str	r1, [sp, #4]
   183d8:	str	r2, [sp, #8]
   183dc:	str	r3, [sp]
   183e0:	mov	r0, r7
   183e4:	mov	r1, r9
   183e8:	str	ip, [sp, #16]
   183ec:	mov	r3, fp
   183f0:	mov	r2, sl
   183f4:	bl	14b08 <dcngettext@plt+0x3b18>
   183f8:	cmp	r9, r0
   183fc:	bhi	18468 <dcngettext@plt+0x7478>
   18400:	ldr	r3, [pc, #176]	; 184b8 <dcngettext@plt+0x74c8>
   18404:	add	r9, r0, #1
   18408:	cmp	r7, r3
   1840c:	str	r9, [r6, r5, lsl #3]
   18410:	beq	1841c <dcngettext@plt+0x742c>
   18414:	mov	r0, r7
   18418:	bl	1483c <dcngettext@plt+0x384c>
   1841c:	mov	r0, r9
   18420:	bl	193f0 <dcngettext@plt+0x8400>
   18424:	ldr	ip, [sp, #32]
   18428:	ldr	lr, [r4, #60]	; 0x3c
   1842c:	ldr	r5, [r4, #56]	; 0x38
   18430:	mov	r3, fp
   18434:	mov	r2, sl
   18438:	mov	r1, r9
   1843c:	str	r0, [ip, #4]
   18440:	ldr	ip, [r4, #16]
   18444:	ldr	r4, [pc, #104]	; 184b4 <dcngettext@plt+0x74c4>
   18448:	str	lr, [sp, #16]
   1844c:	str	r4, [sp, #8]
   18450:	ldr	r4, [sp, #36]	; 0x24
   18454:	str	r5, [sp, #12]
   18458:	str	r4, [sp, #4]
   1845c:	str	ip, [sp]
   18460:	mov	r7, r0
   18464:	bl	14b08 <dcngettext@plt+0x3b18>
   18468:	ldr	r3, [sp, #28]
   1846c:	mov	r0, r7
   18470:	str	r3, [r8]
   18474:	add	sp, sp, #52	; 0x34
   18478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1847c:	mov	r3, #8
   18480:	sub	r2, r5, r2
   18484:	str	r3, [sp]
   18488:	add	r1, sp, #44	; 0x2c
   1848c:	add	r2, r2, #1
   18490:	mvn	r3, #-2147483648	; 0x80000000
   18494:	bl	1960c <dcngettext@plt+0x861c>
   18498:	mov	r6, r0
   1849c:	ldm	r7, {r0, r1}
   184a0:	str	r6, [r4]
   184a4:	stm	r6, {r0, r1}
   184a8:	b	18380 <dcngettext@plt+0x7390>
   184ac:	bl	10fd8 <abort@plt>
   184b0:	andeq	ip, r2, ip, lsl #2
   184b4:	andeq	ip, r2, r4, lsr #2
   184b8:	andeq	ip, r2, r0, asr #3
   184bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   184c0:	sub	sp, sp, #44	; 0x2c
   184c4:	mov	r9, r0
   184c8:	mov	sl, r1
   184cc:	bl	10ef4 <__errno_location@plt>
   184d0:	ldr	r4, [pc, #360]	; 18640 <dcngettext@plt+0x7650>
   184d4:	ldr	r2, [r4, #4]
   184d8:	ldr	r5, [r4]
   184dc:	cmp	r2, #0
   184e0:	ldr	r3, [r0]
   184e4:	mov	r7, r0
   184e8:	str	r3, [sp, #24]
   184ec:	bgt	18548 <dcngettext@plt+0x7558>
   184f0:	add	r6, r4, #8
   184f4:	cmp	r5, r6
   184f8:	str	r2, [sp, #36]	; 0x24
   184fc:	beq	18610 <dcngettext@plt+0x7620>
   18500:	mov	r3, #8
   18504:	mov	r0, r5
   18508:	str	r3, [sp]
   1850c:	rsb	r2, r2, #1
   18510:	mvn	r3, #-2147483648	; 0x80000000
   18514:	add	r1, sp, #36	; 0x24
   18518:	bl	1960c <dcngettext@plt+0x861c>
   1851c:	mov	r5, r0
   18520:	str	r0, [r4]
   18524:	ldr	r0, [r4, #4]
   18528:	ldr	r2, [sp, #36]	; 0x24
   1852c:	mov	r1, #0
   18530:	sub	r2, r2, r0
   18534:	add	r0, r5, r0, lsl #3
   18538:	lsl	r2, r2, #3
   1853c:	bl	10f18 <memset@plt>
   18540:	ldr	r3, [sp, #36]	; 0x24
   18544:	str	r3, [r4, #4]
   18548:	ldr	r1, [r4, #20]
   1854c:	ldr	r8, [r5]
   18550:	ldr	r6, [r5, #4]
   18554:	ldr	r2, [r4, #56]	; 0x38
   18558:	ldr	r3, [r4, #16]
   1855c:	ldr	ip, [r4, #60]	; 0x3c
   18560:	ldr	fp, [pc, #220]	; 18644 <dcngettext@plt+0x7654>
   18564:	orr	r1, r1, #1
   18568:	str	r1, [sp, #28]
   1856c:	str	r1, [sp, #4]
   18570:	str	r2, [sp, #12]
   18574:	str	r3, [sp]
   18578:	mov	r1, r8
   1857c:	mov	r0, r6
   18580:	str	ip, [sp, #16]
   18584:	str	fp, [sp, #8]
   18588:	mov	r3, sl
   1858c:	mov	r2, r9
   18590:	bl	14b08 <dcngettext@plt+0x3b18>
   18594:	cmp	r8, r0
   18598:	bhi	185fc <dcngettext@plt+0x760c>
   1859c:	ldr	r3, [pc, #164]	; 18648 <dcngettext@plt+0x7658>
   185a0:	add	r8, r0, #1
   185a4:	cmp	r6, r3
   185a8:	str	r8, [r5]
   185ac:	beq	185b8 <dcngettext@plt+0x75c8>
   185b0:	mov	r0, r6
   185b4:	bl	1483c <dcngettext@plt+0x384c>
   185b8:	mov	r0, r8
   185bc:	bl	193f0 <dcngettext@plt+0x8400>
   185c0:	ldr	lr, [r4, #60]	; 0x3c
   185c4:	ldr	ip, [r4, #16]
   185c8:	mov	r3, sl
   185cc:	mov	r2, r9
   185d0:	mov	r1, r8
   185d4:	str	r0, [r5, #4]
   185d8:	ldr	r5, [r4, #56]	; 0x38
   185dc:	ldr	r4, [sp, #28]
   185e0:	str	fp, [sp, #8]
   185e4:	str	r4, [sp, #4]
   185e8:	str	lr, [sp, #16]
   185ec:	str	r5, [sp, #12]
   185f0:	str	ip, [sp]
   185f4:	mov	r6, r0
   185f8:	bl	14b08 <dcngettext@plt+0x3b18>
   185fc:	ldr	r3, [sp, #24]
   18600:	mov	r0, r6
   18604:	str	r3, [r7]
   18608:	add	sp, sp, #44	; 0x2c
   1860c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18610:	mov	r3, #8
   18614:	str	r3, [sp]
   18618:	add	r1, sp, #36	; 0x24
   1861c:	rsb	r2, r2, #1
   18620:	mvn	r3, #-2147483648	; 0x80000000
   18624:	mov	r0, #0
   18628:	bl	1960c <dcngettext@plt+0x861c>
   1862c:	mov	r5, r0
   18630:	ldm	r6, {r0, r1}
   18634:	str	r5, [r4]
   18638:	stm	r5, {r0, r1}
   1863c:	b	18524 <dcngettext@plt+0x7534>
   18640:	andeq	ip, r2, ip, lsl #2
   18644:	andeq	ip, r2, r4, lsr #2
   18648:	andeq	ip, r2, r0, asr #3
   1864c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18650:	sub	sp, sp, #44	; 0x2c
   18654:	mov	r5, r0
   18658:	mov	sl, r1
   1865c:	bl	10ef4 <__errno_location@plt>
   18660:	ldr	r4, [pc, #396]	; 187f4 <dcngettext@plt+0x7804>
   18664:	cmn	r5, #-2147483647	; 0x80000001
   18668:	ldr	r6, [r4]
   1866c:	mov	r8, r0
   18670:	movne	r0, #0
   18674:	moveq	r0, #1
   18678:	ldr	r3, [r8]
   1867c:	orrs	r0, r0, r5, lsr #31
   18680:	str	r3, [sp, #24]
   18684:	bne	187f0 <dcngettext@plt+0x7800>
   18688:	ldr	r2, [r4, #4]
   1868c:	cmp	r5, r2
   18690:	blt	186f0 <dcngettext@plt+0x7700>
   18694:	add	r7, r4, #8
   18698:	cmp	r6, r7
   1869c:	str	r2, [sp, #36]	; 0x24
   186a0:	beq	187c0 <dcngettext@plt+0x77d0>
   186a4:	mov	r3, #8
   186a8:	sub	r2, r5, r2
   186ac:	mov	r0, r6
   186b0:	str	r3, [sp]
   186b4:	add	r2, r2, #1
   186b8:	mvn	r3, #-2147483648	; 0x80000000
   186bc:	add	r1, sp, #36	; 0x24
   186c0:	bl	1960c <dcngettext@plt+0x861c>
   186c4:	mov	r6, r0
   186c8:	str	r0, [r4]
   186cc:	ldr	r0, [r4, #4]
   186d0:	ldr	r2, [sp, #36]	; 0x24
   186d4:	mov	r1, #0
   186d8:	sub	r2, r2, r0
   186dc:	add	r0, r6, r0, lsl #3
   186e0:	lsl	r2, r2, #3
   186e4:	bl	10f18 <memset@plt>
   186e8:	ldr	r3, [sp, #36]	; 0x24
   186ec:	str	r3, [r4, #4]
   186f0:	ldr	r2, [r4, #56]	; 0x38
   186f4:	add	fp, r6, r5, lsl #3
   186f8:	ldr	r1, [r4, #20]
   186fc:	ldr	r9, [r6, r5, lsl #3]
   18700:	ldr	r7, [fp, #4]
   18704:	ldr	r3, [r4, #16]
   18708:	ldr	ip, [r4, #60]	; 0x3c
   1870c:	str	r2, [sp, #12]
   18710:	ldr	r2, [pc, #224]	; 187f8 <dcngettext@plt+0x7808>
   18714:	orr	r1, r1, #1
   18718:	str	r1, [sp, #28]
   1871c:	str	r1, [sp, #4]
   18720:	str	r2, [sp, #8]
   18724:	str	r3, [sp]
   18728:	mov	r0, r7
   1872c:	mov	r1, r9
   18730:	str	ip, [sp, #16]
   18734:	mvn	r3, #0
   18738:	mov	r2, sl
   1873c:	bl	14b08 <dcngettext@plt+0x3b18>
   18740:	cmp	r9, r0
   18744:	bhi	187ac <dcngettext@plt+0x77bc>
   18748:	ldr	r3, [pc, #172]	; 187fc <dcngettext@plt+0x780c>
   1874c:	add	r9, r0, #1
   18750:	cmp	r7, r3
   18754:	str	r9, [r6, r5, lsl #3]
   18758:	beq	18764 <dcngettext@plt+0x7774>
   1875c:	mov	r0, r7
   18760:	bl	1483c <dcngettext@plt+0x384c>
   18764:	mov	r0, r9
   18768:	bl	193f0 <dcngettext@plt+0x8400>
   1876c:	ldr	ip, [r4, #60]	; 0x3c
   18770:	ldr	r3, [r4, #16]
   18774:	ldr	lr, [r4, #56]	; 0x38
   18778:	ldr	r4, [pc, #120]	; 187f8 <dcngettext@plt+0x7808>
   1877c:	mov	r2, sl
   18780:	mov	r1, r9
   18784:	str	r0, [fp, #4]
   18788:	str	r4, [sp, #8]
   1878c:	ldr	r4, [sp, #28]
   18790:	str	r3, [sp]
   18794:	str	r4, [sp, #4]
   18798:	str	ip, [sp, #16]
   1879c:	str	lr, [sp, #12]
   187a0:	mvn	r3, #0
   187a4:	mov	r7, r0
   187a8:	bl	14b08 <dcngettext@plt+0x3b18>
   187ac:	ldr	r3, [sp, #24]
   187b0:	mov	r0, r7
   187b4:	str	r3, [r8]
   187b8:	add	sp, sp, #44	; 0x2c
   187bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187c0:	mov	r3, #8
   187c4:	sub	r2, r5, r2
   187c8:	str	r3, [sp]
   187cc:	add	r1, sp, #36	; 0x24
   187d0:	add	r2, r2, #1
   187d4:	mvn	r3, #-2147483648	; 0x80000000
   187d8:	bl	1960c <dcngettext@plt+0x861c>
   187dc:	mov	r6, r0
   187e0:	ldm	r7, {r0, r1}
   187e4:	str	r6, [r4]
   187e8:	stm	r6, {r0, r1}
   187ec:	b	186cc <dcngettext@plt+0x76dc>
   187f0:	bl	10fd8 <abort@plt>
   187f4:	andeq	ip, r2, ip, lsl #2
   187f8:	andeq	ip, r2, r4, lsr #2
   187fc:	andeq	ip, r2, r0, asr #3
   18800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18804:	sub	sp, sp, #44	; 0x2c
   18808:	mov	sl, r0
   1880c:	bl	10ef4 <__errno_location@plt>
   18810:	ldr	r4, [pc, #348]	; 18974 <dcngettext@plt+0x7984>
   18814:	ldr	r2, [r4, #4]
   18818:	ldr	r5, [r4]
   1881c:	cmp	r2, #0
   18820:	ldr	r3, [r0]
   18824:	mov	r8, r0
   18828:	str	r3, [sp, #28]
   1882c:	bgt	18888 <dcngettext@plt+0x7898>
   18830:	add	r6, r4, #8
   18834:	cmp	r5, r6
   18838:	str	r2, [sp, #36]	; 0x24
   1883c:	beq	18944 <dcngettext@plt+0x7954>
   18840:	mov	r3, #8
   18844:	mov	r0, r5
   18848:	str	r3, [sp]
   1884c:	rsb	r2, r2, #1
   18850:	mvn	r3, #-2147483648	; 0x80000000
   18854:	add	r1, sp, #36	; 0x24
   18858:	bl	1960c <dcngettext@plt+0x861c>
   1885c:	mov	r5, r0
   18860:	str	r0, [r4]
   18864:	ldr	r0, [r4, #4]
   18868:	ldr	r2, [sp, #36]	; 0x24
   1886c:	mov	r1, #0
   18870:	sub	r2, r2, r0
   18874:	add	r0, r5, r0, lsl #3
   18878:	lsl	r2, r2, #3
   1887c:	bl	10f18 <memset@plt>
   18880:	ldr	r3, [sp, #36]	; 0x24
   18884:	str	r3, [r4, #4]
   18888:	ldr	r7, [r4, #20]
   1888c:	ldr	r9, [r5]
   18890:	ldr	r6, [r5, #4]
   18894:	ldr	r2, [r4, #56]	; 0x38
   18898:	ldr	r3, [r4, #16]
   1889c:	ldr	ip, [r4, #60]	; 0x3c
   188a0:	ldr	fp, [pc, #208]	; 18978 <dcngettext@plt+0x7988>
   188a4:	orr	r7, r7, #1
   188a8:	str	r2, [sp, #12]
   188ac:	str	r3, [sp]
   188b0:	str	r7, [sp, #4]
   188b4:	mov	r1, r9
   188b8:	mov	r0, r6
   188bc:	str	ip, [sp, #16]
   188c0:	str	fp, [sp, #8]
   188c4:	mvn	r3, #0
   188c8:	mov	r2, sl
   188cc:	bl	14b08 <dcngettext@plt+0x3b18>
   188d0:	cmp	r9, r0
   188d4:	bhi	18930 <dcngettext@plt+0x7940>
   188d8:	ldr	r3, [pc, #156]	; 1897c <dcngettext@plt+0x798c>
   188dc:	add	r9, r0, #1
   188e0:	cmp	r6, r3
   188e4:	str	r9, [r5]
   188e8:	beq	188f4 <dcngettext@plt+0x7904>
   188ec:	mov	r0, r6
   188f0:	bl	1483c <dcngettext@plt+0x384c>
   188f4:	mov	r0, r9
   188f8:	bl	193f0 <dcngettext@plt+0x8400>
   188fc:	ldr	ip, [r4, #60]	; 0x3c
   18900:	ldr	r3, [r4, #16]
   18904:	ldr	lr, [r4, #56]	; 0x38
   18908:	mov	r2, sl
   1890c:	mov	r1, r9
   18910:	str	r0, [r5, #4]
   18914:	str	r3, [sp]
   18918:	stmib	sp, {r7, fp}
   1891c:	str	ip, [sp, #16]
   18920:	str	lr, [sp, #12]
   18924:	mvn	r3, #0
   18928:	mov	r6, r0
   1892c:	bl	14b08 <dcngettext@plt+0x3b18>
   18930:	ldr	r3, [sp, #28]
   18934:	mov	r0, r6
   18938:	str	r3, [r8]
   1893c:	add	sp, sp, #44	; 0x2c
   18940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18944:	mov	r3, #8
   18948:	str	r3, [sp]
   1894c:	add	r1, sp, #36	; 0x24
   18950:	rsb	r2, r2, #1
   18954:	mvn	r3, #-2147483648	; 0x80000000
   18958:	mov	r0, #0
   1895c:	bl	1960c <dcngettext@plt+0x861c>
   18960:	mov	r5, r0
   18964:	ldm	r6, {r0, r1}
   18968:	str	r5, [r4]
   1896c:	stm	r5, {r0, r1}
   18970:	b	18864 <dcngettext@plt+0x7874>
   18974:	andeq	ip, r2, ip, lsl #2
   18978:	andeq	ip, r2, r4, lsr #2
   1897c:	andeq	ip, r2, r0, asr #3
   18980:	mov	r2, #3
   18984:	mov	r1, #0
   18988:	b	19b9c <dcngettext@plt+0x8bac>
   1898c:	push	{r4, r5, r6, lr}
   18990:	sub	sp, sp, #32
   18994:	cmp	r1, #0
   18998:	mov	r4, r0
   1899c:	ldr	r5, [sp, #48]	; 0x30
   189a0:	ldr	r6, [sp, #52]	; 0x34
   189a4:	beq	18cbc <dcngettext@plt+0x7ccc>
   189a8:	stm	sp, {r2, r3}
   189ac:	mov	r3, r1
   189b0:	ldr	r2, [pc, #808]	; 18ce0 <dcngettext@plt+0x7cf0>
   189b4:	mov	r1, #1
   189b8:	bl	10f3c <__fprintf_chk@plt>
   189bc:	mov	r2, #5
   189c0:	ldr	r1, [pc, #796]	; 18ce4 <dcngettext@plt+0x7cf4>
   189c4:	mov	r0, #0
   189c8:	bl	10e04 <dcgettext@plt>
   189cc:	ldr	r3, [pc, #788]	; 18ce8 <dcngettext@plt+0x7cf8>
   189d0:	ldr	r2, [pc, #788]	; 18cec <dcngettext@plt+0x7cfc>
   189d4:	str	r3, [sp]
   189d8:	mov	r1, #1
   189dc:	mov	r3, r0
   189e0:	mov	r0, r4
   189e4:	bl	10f3c <__fprintf_chk@plt>
   189e8:	mov	r1, r4
   189ec:	mov	r0, #10
   189f0:	bl	10df8 <fputc_unlocked@plt>
   189f4:	mov	r2, #5
   189f8:	ldr	r1, [pc, #752]	; 18cf0 <dcngettext@plt+0x7d00>
   189fc:	mov	r0, #0
   18a00:	bl	10e04 <dcgettext@plt>
   18a04:	mov	r1, #1
   18a08:	ldr	r3, [pc, #740]	; 18cf4 <dcngettext@plt+0x7d04>
   18a0c:	mov	r2, r0
   18a10:	mov	r0, r4
   18a14:	bl	10f3c <__fprintf_chk@plt>
   18a18:	mov	r1, r4
   18a1c:	mov	r0, #10
   18a20:	bl	10df8 <fputc_unlocked@plt>
   18a24:	cmp	r6, #9
   18a28:	ldrls	pc, [pc, r6, lsl #2]
   18a2c:	b	18cd4 <dcngettext@plt+0x7ce4>
   18a30:			; <UNDEFINED> instruction: 0x00018ab4
   18a34:			; <UNDEFINED> instruction: 0x00018abc
   18a38:	andeq	r8, r1, r8, ror #21
   18a3c:	andeq	r8, r1, ip, lsl fp
   18a40:	andeq	r8, r1, r8, asr fp
   18a44:	muleq	r1, r4, fp
   18a48:	ldrdeq	r8, [r1], -r0
   18a4c:	andeq	r8, r1, r4, lsl ip
   18a50:	andeq	r8, r1, r4, ror #24
   18a54:	andeq	r8, r1, r8, asr sl
   18a58:	ldr	r1, [pc, #664]	; 18cf8 <dcngettext@plt+0x7d08>
   18a5c:	mov	r2, #5
   18a60:	mov	r0, #0
   18a64:	bl	10e04 <dcgettext@plt>
   18a68:	ldr	ip, [r5, #32]
   18a6c:	ldr	r1, [r5, #28]
   18a70:	ldr	r2, [r5, #24]
   18a74:	ldr	r3, [r5]
   18a78:	ldr	r6, [r5, #20]
   18a7c:	str	ip, [sp, #28]
   18a80:	ldr	lr, [r5, #16]
   18a84:	str	r1, [sp, #24]
   18a88:	ldr	ip, [r5, #12]
   18a8c:	str	r2, [sp, #20]
   18a90:	ldr	r1, [r5, #8]
   18a94:	ldr	r2, [r5, #4]
   18a98:	str	r6, [sp, #16]
   18a9c:	stmib	sp, {r1, ip, lr}
   18aa0:	mov	r1, #1
   18aa4:	str	r2, [sp]
   18aa8:	mov	r2, r0
   18aac:	mov	r0, r4
   18ab0:	bl	10f3c <__fprintf_chk@plt>
   18ab4:	add	sp, sp, #32
   18ab8:	pop	{r4, r5, r6, pc}
   18abc:	mov	r2, #5
   18ac0:	ldr	r1, [pc, #564]	; 18cfc <dcngettext@plt+0x7d0c>
   18ac4:	mov	r0, #0
   18ac8:	bl	10e04 <dcgettext@plt>
   18acc:	ldr	r3, [r5]
   18ad0:	mov	r1, #1
   18ad4:	mov	r2, r0
   18ad8:	mov	r0, r4
   18adc:	add	sp, sp, #32
   18ae0:	pop	{r4, r5, r6, lr}
   18ae4:	b	10f3c <__fprintf_chk@plt>
   18ae8:	mov	r2, #5
   18aec:	ldr	r1, [pc, #524]	; 18d00 <dcngettext@plt+0x7d10>
   18af0:	mov	r0, #0
   18af4:	bl	10e04 <dcgettext@plt>
   18af8:	ldr	r2, [r5, #4]
   18afc:	ldr	r3, [r5]
   18b00:	mov	r1, #1
   18b04:	str	r2, [sp, #48]	; 0x30
   18b08:	mov	r2, r0
   18b0c:	mov	r0, r4
   18b10:	add	sp, sp, #32
   18b14:	pop	{r4, r5, r6, lr}
   18b18:	b	10f3c <__fprintf_chk@plt>
   18b1c:	mov	r2, #5
   18b20:	ldr	r1, [pc, #476]	; 18d04 <dcngettext@plt+0x7d14>
   18b24:	mov	r0, #0
   18b28:	bl	10e04 <dcgettext@plt>
   18b2c:	ldr	r1, [r5, #8]
   18b30:	ldr	r2, [r5, #4]
   18b34:	ldr	r3, [r5]
   18b38:	str	r1, [sp, #52]	; 0x34
   18b3c:	str	r2, [sp, #48]	; 0x30
   18b40:	mov	r1, #1
   18b44:	mov	r2, r0
   18b48:	mov	r0, r4
   18b4c:	add	sp, sp, #32
   18b50:	pop	{r4, r5, r6, lr}
   18b54:	b	10f3c <__fprintf_chk@plt>
   18b58:	mov	r2, #5
   18b5c:	ldr	r1, [pc, #420]	; 18d08 <dcngettext@plt+0x7d18>
   18b60:	mov	r0, #0
   18b64:	bl	10e04 <dcgettext@plt>
   18b68:	ldr	r1, [r5, #8]
   18b6c:	ldr	ip, [r5, #12]
   18b70:	ldr	r2, [r5, #4]
   18b74:	ldr	r3, [r5]
   18b78:	stmib	sp, {r1, ip}
   18b7c:	str	r2, [sp]
   18b80:	mov	r1, #1
   18b84:	mov	r2, r0
   18b88:	mov	r0, r4
   18b8c:	bl	10f3c <__fprintf_chk@plt>
   18b90:	b	18ab4 <dcngettext@plt+0x7ac4>
   18b94:	mov	r2, #5
   18b98:	ldr	r1, [pc, #364]	; 18d0c <dcngettext@plt+0x7d1c>
   18b9c:	mov	r0, #0
   18ba0:	bl	10e04 <dcgettext@plt>
   18ba4:	add	r1, r5, #8
   18ba8:	ldr	r2, [r5, #4]
   18bac:	ldm	r1, {r1, ip, lr}
   18bb0:	ldr	r3, [r5]
   18bb4:	str	r2, [sp]
   18bb8:	stmib	sp, {r1, ip, lr}
   18bbc:	mov	r1, #1
   18bc0:	mov	r2, r0
   18bc4:	mov	r0, r4
   18bc8:	bl	10f3c <__fprintf_chk@plt>
   18bcc:	b	18ab4 <dcngettext@plt+0x7ac4>
   18bd0:	mov	r2, #5
   18bd4:	ldr	r1, [pc, #308]	; 18d10 <dcngettext@plt+0x7d20>
   18bd8:	mov	r0, #0
   18bdc:	bl	10e04 <dcgettext@plt>
   18be0:	add	r1, r5, #8
   18be4:	ldr	r2, [r5, #4]
   18be8:	ldm	r1, {r1, ip, lr}
   18bec:	ldr	r6, [r5, #20]
   18bf0:	ldr	r3, [r5]
   18bf4:	stmib	sp, {r1, ip, lr}
   18bf8:	mov	r1, #1
   18bfc:	str	r2, [sp]
   18c00:	str	r6, [sp, #16]
   18c04:	mov	r2, r0
   18c08:	mov	r0, r4
   18c0c:	bl	10f3c <__fprintf_chk@plt>
   18c10:	b	18ab4 <dcngettext@plt+0x7ac4>
   18c14:	mov	r2, #5
   18c18:	ldr	r1, [pc, #244]	; 18d14 <dcngettext@plt+0x7d24>
   18c1c:	mov	r0, #0
   18c20:	bl	10e04 <dcgettext@plt>
   18c24:	ldr	r2, [r5, #24]
   18c28:	ldr	r3, [r5]
   18c2c:	ldr	r6, [r5, #20]
   18c30:	ldr	lr, [r5, #16]
   18c34:	ldr	ip, [r5, #12]
   18c38:	str	r2, [sp, #20]
   18c3c:	ldr	r1, [r5, #8]
   18c40:	ldr	r2, [r5, #4]
   18c44:	str	r6, [sp, #16]
   18c48:	stmib	sp, {r1, ip, lr}
   18c4c:	mov	r1, #1
   18c50:	str	r2, [sp]
   18c54:	mov	r2, r0
   18c58:	mov	r0, r4
   18c5c:	bl	10f3c <__fprintf_chk@plt>
   18c60:	b	18ab4 <dcngettext@plt+0x7ac4>
   18c64:	mov	r2, #5
   18c68:	ldr	r1, [pc, #168]	; 18d18 <dcngettext@plt+0x7d28>
   18c6c:	mov	r0, #0
   18c70:	bl	10e04 <dcgettext@plt>
   18c74:	ldr	r1, [r5, #28]
   18c78:	ldr	r2, [r5, #24]
   18c7c:	ldr	r3, [r5]
   18c80:	ldr	r6, [r5, #20]
   18c84:	ldr	lr, [r5, #16]
   18c88:	str	r1, [sp, #24]
   18c8c:	ldr	ip, [r5, #12]
   18c90:	str	r2, [sp, #20]
   18c94:	ldr	r1, [r5, #8]
   18c98:	ldr	r2, [r5, #4]
   18c9c:	str	r6, [sp, #16]
   18ca0:	stmib	sp, {r1, ip, lr}
   18ca4:	mov	r1, #1
   18ca8:	str	r2, [sp]
   18cac:	mov	r2, r0
   18cb0:	mov	r0, r4
   18cb4:	bl	10f3c <__fprintf_chk@plt>
   18cb8:	b	18ab4 <dcngettext@plt+0x7ac4>
   18cbc:	str	r3, [sp]
   18cc0:	mov	r1, #1
   18cc4:	mov	r3, r2
   18cc8:	ldr	r2, [pc, #76]	; 18d1c <dcngettext@plt+0x7d2c>
   18ccc:	bl	10f3c <__fprintf_chk@plt>
   18cd0:	b	189bc <dcngettext@plt+0x79cc>
   18cd4:	mov	r2, #5
   18cd8:	ldr	r1, [pc, #64]	; 18d20 <dcngettext@plt+0x7d30>
   18cdc:	b	18a60 <dcngettext@plt+0x7a70>
   18ce0:	andeq	fp, r1, r0, asr #8
   18ce4:	andeq	fp, r1, r4, asr r4
   18ce8:	andeq	r0, r0, r6, ror #15
   18cec:	andeq	fp, r1, ip, lsr #14
   18cf0:	andeq	fp, r1, r8, asr r4
   18cf4:	andeq	fp, r1, r4, lsl #10
   18cf8:	andeq	fp, r1, r4, lsr r6
   18cfc:	andeq	fp, r1, r8, lsr #10
   18d00:	andeq	fp, r1, r8, lsr r5
   18d04:	andeq	fp, r1, r0, asr r5
   18d08:	andeq	fp, r1, ip, ror #10
   18d0c:	andeq	fp, r1, ip, lsl #11
   18d10:			; <UNDEFINED> instruction: 0x0001b5b0
   18d14:	ldrdeq	fp, [r1], -r8
   18d18:	andeq	fp, r1, r4, lsl #12
   18d1c:	andeq	fp, r1, ip, asr #8
   18d20:	andeq	fp, r1, r8, ror #12
   18d24:	push	{r4, r5, lr}
   18d28:	sub	sp, sp, #12
   18d2c:	ldr	r5, [sp, #24]
   18d30:	ldr	ip, [r5]
   18d34:	cmp	ip, #0
   18d38:	beq	18d54 <dcngettext@plt+0x7d64>
   18d3c:	mov	lr, r5
   18d40:	mov	ip, #0
   18d44:	ldr	r4, [lr, #4]!
   18d48:	add	ip, ip, #1
   18d4c:	cmp	r4, #0
   18d50:	bne	18d44 <dcngettext@plt+0x7d54>
   18d54:	stm	sp, {r5, ip}
   18d58:	bl	1898c <dcngettext@plt+0x799c>
   18d5c:	add	sp, sp, #12
   18d60:	pop	{r4, r5, pc}
   18d64:	push	{r4, r5, lr}
   18d68:	sub	sp, sp, #76	; 0x4c
   18d6c:	mov	r5, r0
   18d70:	ldr	ip, [sp, #88]	; 0x58
   18d74:	ldr	r0, [ip]
   18d78:	cmp	r0, #0
   18d7c:	str	r0, [sp, #32]
   18d80:	beq	19154 <dcngettext@plt+0x8164>
   18d84:	ldr	r0, [ip, #4]
   18d88:	cmp	r0, #0
   18d8c:	str	r0, [sp, #36]	; 0x24
   18d90:	beq	1915c <dcngettext@plt+0x816c>
   18d94:	ldr	r0, [ip, #8]
   18d98:	cmp	r0, #0
   18d9c:	str	r0, [sp, #40]	; 0x28
   18da0:	beq	19164 <dcngettext@plt+0x8174>
   18da4:	ldr	r0, [ip, #12]
   18da8:	cmp	r0, #0
   18dac:	str	r0, [sp, #44]	; 0x2c
   18db0:	beq	1916c <dcngettext@plt+0x817c>
   18db4:	ldr	r0, [ip, #16]
   18db8:	cmp	r0, #0
   18dbc:	str	r0, [sp, #48]	; 0x30
   18dc0:	beq	19174 <dcngettext@plt+0x8184>
   18dc4:	ldr	r0, [ip, #20]
   18dc8:	cmp	r0, #0
   18dcc:	str	r0, [sp, #52]	; 0x34
   18dd0:	beq	1917c <dcngettext@plt+0x818c>
   18dd4:	ldr	r0, [ip, #24]
   18dd8:	cmp	r0, #0
   18ddc:	str	r0, [sp, #56]	; 0x38
   18de0:	beq	19184 <dcngettext@plt+0x8194>
   18de4:	ldr	r0, [ip, #28]
   18de8:	cmp	r0, #0
   18dec:	str	r0, [sp, #60]	; 0x3c
   18df0:	beq	1918c <dcngettext@plt+0x819c>
   18df4:	ldr	r0, [ip, #32]
   18df8:	cmp	r0, #0
   18dfc:	str	r0, [sp, #64]	; 0x40
   18e00:	beq	19194 <dcngettext@plt+0x81a4>
   18e04:	ldr	r0, [ip, #36]	; 0x24
   18e08:	cmp	r0, #0
   18e0c:	movne	r4, #10
   18e10:	moveq	r4, #9
   18e14:	cmp	r1, #0
   18e18:	beq	1912c <dcngettext@plt+0x813c>
   18e1c:	stm	sp, {r2, r3}
   18e20:	mov	r0, r5
   18e24:	mov	r3, r1
   18e28:	ldr	r2, [pc, #876]	; 1919c <dcngettext@plt+0x81ac>
   18e2c:	mov	r1, #1
   18e30:	bl	10f3c <__fprintf_chk@plt>
   18e34:	mov	r2, #5
   18e38:	ldr	r1, [pc, #864]	; 191a0 <dcngettext@plt+0x81b0>
   18e3c:	mov	r0, #0
   18e40:	bl	10e04 <dcgettext@plt>
   18e44:	ldr	r3, [pc, #856]	; 191a4 <dcngettext@plt+0x81b4>
   18e48:	ldr	r2, [pc, #856]	; 191a8 <dcngettext@plt+0x81b8>
   18e4c:	str	r3, [sp]
   18e50:	mov	r1, #1
   18e54:	mov	r3, r0
   18e58:	mov	r0, r5
   18e5c:	bl	10f3c <__fprintf_chk@plt>
   18e60:	mov	r1, r5
   18e64:	mov	r0, #10
   18e68:	bl	10df8 <fputc_unlocked@plt>
   18e6c:	mov	r2, #5
   18e70:	ldr	r1, [pc, #820]	; 191ac <dcngettext@plt+0x81bc>
   18e74:	mov	r0, #0
   18e78:	bl	10e04 <dcgettext@plt>
   18e7c:	mov	r1, #1
   18e80:	ldr	r3, [pc, #808]	; 191b0 <dcngettext@plt+0x81c0>
   18e84:	mov	r2, r0
   18e88:	mov	r0, r5
   18e8c:	bl	10f3c <__fprintf_chk@plt>
   18e90:	mov	r1, r5
   18e94:	mov	r0, #10
   18e98:	bl	10df8 <fputc_unlocked@plt>
   18e9c:	cmp	r4, #9
   18ea0:	ldrls	pc, [pc, r4, lsl #2]
   18ea4:	b	19148 <dcngettext@plt+0x8158>
   18ea8:	andeq	r8, r1, ip, lsr #30
   18eac:	andeq	r8, r1, r4, lsr pc
   18eb0:	andeq	r8, r1, r0, ror #30
   18eb4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   18eb8:	andeq	r8, r1, ip, asr #31
   18ebc:	andeq	r9, r1, r8
   18ec0:	andeq	r9, r1, r4, asr #32
   18ec4:	andeq	r9, r1, r8, lsl #1
   18ec8:	ldrdeq	r9, [r1], -r4
   18ecc:	ldrdeq	r8, [r1], -r0
   18ed0:	ldr	r1, [pc, #732]	; 191b4 <dcngettext@plt+0x81c4>
   18ed4:	mov	r2, #5
   18ed8:	mov	r0, #0
   18edc:	bl	10e04 <dcgettext@plt>
   18ee0:	ldr	ip, [sp, #64]	; 0x40
   18ee4:	ldr	r1, [sp, #60]	; 0x3c
   18ee8:	ldr	r2, [sp, #56]	; 0x38
   18eec:	ldr	lr, [sp, #48]	; 0x30
   18ef0:	str	ip, [sp, #28]
   18ef4:	str	r1, [sp, #24]
   18ef8:	ldr	ip, [sp, #44]	; 0x2c
   18efc:	ldr	r1, [sp, #40]	; 0x28
   18f00:	ldr	r4, [sp, #52]	; 0x34
   18f04:	str	r2, [sp, #20]
   18f08:	ldr	r2, [sp, #36]	; 0x24
   18f0c:	stmib	sp, {r1, ip, lr}
   18f10:	mov	r1, #1
   18f14:	str	r2, [sp]
   18f18:	ldr	r3, [sp, #32]
   18f1c:	str	r4, [sp, #16]
   18f20:	mov	r2, r0
   18f24:	mov	r0, r5
   18f28:	bl	10f3c <__fprintf_chk@plt>
   18f2c:	add	sp, sp, #76	; 0x4c
   18f30:	pop	{r4, r5, pc}
   18f34:	mov	r2, #5
   18f38:	ldr	r1, [pc, #632]	; 191b8 <dcngettext@plt+0x81c8>
   18f3c:	mov	r0, #0
   18f40:	bl	10e04 <dcgettext@plt>
   18f44:	ldr	r3, [sp, #32]
   18f48:	mov	r1, #1
   18f4c:	mov	r2, r0
   18f50:	mov	r0, r5
   18f54:	add	sp, sp, #76	; 0x4c
   18f58:	pop	{r4, r5, lr}
   18f5c:	b	10f3c <__fprintf_chk@plt>
   18f60:	mov	r2, #5
   18f64:	ldr	r1, [pc, #592]	; 191bc <dcngettext@plt+0x81cc>
   18f68:	mov	r0, #0
   18f6c:	bl	10e04 <dcgettext@plt>
   18f70:	ldr	r2, [sp, #36]	; 0x24
   18f74:	ldr	r3, [sp, #32]
   18f78:	str	r2, [sp, #88]	; 0x58
   18f7c:	mov	r1, #1
   18f80:	mov	r2, r0
   18f84:	mov	r0, r5
   18f88:	add	sp, sp, #76	; 0x4c
   18f8c:	pop	{r4, r5, lr}
   18f90:	b	10f3c <__fprintf_chk@plt>
   18f94:	mov	r2, #5
   18f98:	ldr	r1, [pc, #544]	; 191c0 <dcngettext@plt+0x81d0>
   18f9c:	mov	r0, #0
   18fa0:	bl	10e04 <dcgettext@plt>
   18fa4:	ldr	r1, [sp, #40]	; 0x28
   18fa8:	ldr	r2, [sp, #36]	; 0x24
   18fac:	str	r1, [sp, #4]
   18fb0:	str	r2, [sp]
   18fb4:	ldr	r3, [sp, #32]
   18fb8:	mov	r1, #1
   18fbc:	mov	r2, r0
   18fc0:	mov	r0, r5
   18fc4:	bl	10f3c <__fprintf_chk@plt>
   18fc8:	b	18f2c <dcngettext@plt+0x7f3c>
   18fcc:	mov	r2, #5
   18fd0:	ldr	r1, [pc, #492]	; 191c4 <dcngettext@plt+0x81d4>
   18fd4:	mov	r0, #0
   18fd8:	bl	10e04 <dcgettext@plt>
   18fdc:	ldr	r1, [sp, #40]	; 0x28
   18fe0:	ldr	ip, [sp, #44]	; 0x2c
   18fe4:	ldr	r2, [sp, #36]	; 0x24
   18fe8:	ldr	r3, [sp, #32]
   18fec:	stmib	sp, {r1, ip}
   18ff0:	str	r2, [sp]
   18ff4:	mov	r1, #1
   18ff8:	mov	r2, r0
   18ffc:	mov	r0, r5
   19000:	bl	10f3c <__fprintf_chk@plt>
   19004:	b	18f2c <dcngettext@plt+0x7f3c>
   19008:	mov	r2, #5
   1900c:	ldr	r1, [pc, #436]	; 191c8 <dcngettext@plt+0x81d8>
   19010:	mov	r0, #0
   19014:	bl	10e04 <dcgettext@plt>
   19018:	add	r1, sp, #40	; 0x28
   1901c:	ldr	r2, [sp, #36]	; 0x24
   19020:	ldm	r1, {r1, ip, lr}
   19024:	ldr	r3, [sp, #32]
   19028:	str	r2, [sp]
   1902c:	stmib	sp, {r1, ip, lr}
   19030:	mov	r1, #1
   19034:	mov	r2, r0
   19038:	mov	r0, r5
   1903c:	bl	10f3c <__fprintf_chk@plt>
   19040:	b	18f2c <dcngettext@plt+0x7f3c>
   19044:	mov	r2, #5
   19048:	ldr	r1, [pc, #380]	; 191cc <dcngettext@plt+0x81dc>
   1904c:	mov	r0, #0
   19050:	bl	10e04 <dcgettext@plt>
   19054:	add	r1, sp, #40	; 0x28
   19058:	ldr	r2, [sp, #36]	; 0x24
   1905c:	ldm	r1, {r1, ip, lr}
   19060:	ldr	r4, [sp, #52]	; 0x34
   19064:	str	r2, [sp]
   19068:	stmib	sp, {r1, ip, lr}
   1906c:	mov	r1, #1
   19070:	ldr	r3, [sp, #32]
   19074:	str	r4, [sp, #16]
   19078:	mov	r2, r0
   1907c:	mov	r0, r5
   19080:	bl	10f3c <__fprintf_chk@plt>
   19084:	b	18f2c <dcngettext@plt+0x7f3c>
   19088:	mov	r2, #5
   1908c:	ldr	r1, [pc, #316]	; 191d0 <dcngettext@plt+0x81e0>
   19090:	mov	r0, #0
   19094:	bl	10e04 <dcgettext@plt>
   19098:	add	r1, sp, #40	; 0x28
   1909c:	ldr	r2, [sp, #56]	; 0x38
   190a0:	ldm	r1, {r1, ip, lr}
   190a4:	ldr	r4, [sp, #52]	; 0x34
   190a8:	str	r2, [sp, #20]
   190ac:	ldr	r2, [sp, #36]	; 0x24
   190b0:	stmib	sp, {r1, ip, lr}
   190b4:	mov	r1, #1
   190b8:	str	r2, [sp]
   190bc:	ldr	r3, [sp, #32]
   190c0:	str	r4, [sp, #16]
   190c4:	mov	r2, r0
   190c8:	mov	r0, r5
   190cc:	bl	10f3c <__fprintf_chk@plt>
   190d0:	b	18f2c <dcngettext@plt+0x7f3c>
   190d4:	mov	r2, #5
   190d8:	ldr	r1, [pc, #244]	; 191d4 <dcngettext@plt+0x81e4>
   190dc:	mov	r0, #0
   190e0:	bl	10e04 <dcgettext@plt>
   190e4:	ldr	r1, [sp, #60]	; 0x3c
   190e8:	ldr	r2, [sp, #56]	; 0x38
   190ec:	ldr	lr, [sp, #48]	; 0x30
   190f0:	ldr	ip, [sp, #44]	; 0x2c
   190f4:	str	r1, [sp, #24]
   190f8:	ldr	r1, [sp, #40]	; 0x28
   190fc:	ldr	r4, [sp, #52]	; 0x34
   19100:	str	r2, [sp, #20]
   19104:	ldr	r2, [sp, #36]	; 0x24
   19108:	stmib	sp, {r1, ip, lr}
   1910c:	mov	r1, #1
   19110:	str	r2, [sp]
   19114:	ldr	r3, [sp, #32]
   19118:	str	r4, [sp, #16]
   1911c:	mov	r2, r0
   19120:	mov	r0, r5
   19124:	bl	10f3c <__fprintf_chk@plt>
   19128:	b	18f2c <dcngettext@plt+0x7f3c>
   1912c:	str	r3, [sp]
   19130:	mov	r1, #1
   19134:	mov	r3, r2
   19138:	mov	r0, r5
   1913c:	ldr	r2, [pc, #148]	; 191d8 <dcngettext@plt+0x81e8>
   19140:	bl	10f3c <__fprintf_chk@plt>
   19144:	b	18e34 <dcngettext@plt+0x7e44>
   19148:	mov	r2, #5
   1914c:	ldr	r1, [pc, #136]	; 191dc <dcngettext@plt+0x81ec>
   19150:	b	18ed8 <dcngettext@plt+0x7ee8>
   19154:	mov	r4, r0
   19158:	b	18e14 <dcngettext@plt+0x7e24>
   1915c:	mov	r4, #1
   19160:	b	18e14 <dcngettext@plt+0x7e24>
   19164:	mov	r4, #2
   19168:	b	18e14 <dcngettext@plt+0x7e24>
   1916c:	mov	r4, #3
   19170:	b	18e14 <dcngettext@plt+0x7e24>
   19174:	mov	r4, #4
   19178:	b	18e14 <dcngettext@plt+0x7e24>
   1917c:	mov	r4, #5
   19180:	b	18e14 <dcngettext@plt+0x7e24>
   19184:	mov	r4, #6
   19188:	b	18e14 <dcngettext@plt+0x7e24>
   1918c:	mov	r4, #7
   19190:	b	18e14 <dcngettext@plt+0x7e24>
   19194:	mov	r4, #8
   19198:	b	18e14 <dcngettext@plt+0x7e24>
   1919c:	andeq	fp, r1, r0, asr #8
   191a0:	andeq	fp, r1, r4, asr r4
   191a4:	andeq	r0, r0, r6, ror #15
   191a8:	andeq	fp, r1, ip, lsr #14
   191ac:	andeq	fp, r1, r8, asr r4
   191b0:	andeq	fp, r1, r4, lsl #10
   191b4:	andeq	fp, r1, r4, lsr r6
   191b8:	andeq	fp, r1, r8, lsr #10
   191bc:	andeq	fp, r1, r8, lsr r5
   191c0:	andeq	fp, r1, r0, asr r5
   191c4:	andeq	fp, r1, ip, ror #10
   191c8:	andeq	fp, r1, ip, lsl #11
   191cc:			; <UNDEFINED> instruction: 0x0001b5b0
   191d0:	ldrdeq	fp, [r1], -r8
   191d4:	andeq	fp, r1, r4, lsl #12
   191d8:	andeq	fp, r1, ip, asr #8
   191dc:	andeq	fp, r1, r8, ror #12
   191e0:	push	{r3}		; (str r3, [sp, #-4]!)
   191e4:	push	{lr}		; (str lr, [sp, #-4]!)
   191e8:	sub	sp, sp, #56	; 0x38
   191ec:	add	r3, sp, #64	; 0x40
   191f0:	ldr	ip, [sp, #64]	; 0x40
   191f4:	str	r3, [sp, #12]
   191f8:	cmp	ip, #0
   191fc:	str	ip, [sp, #16]
   19200:	beq	19298 <dcngettext@plt+0x82a8>
   19204:	ldr	ip, [sp, #68]	; 0x44
   19208:	cmp	ip, #0
   1920c:	str	ip, [sp, #20]
   19210:	beq	192b8 <dcngettext@plt+0x82c8>
   19214:	ldr	ip, [sp, #72]	; 0x48
   19218:	cmp	ip, #0
   1921c:	str	ip, [sp, #24]
   19220:	beq	192c0 <dcngettext@plt+0x82d0>
   19224:	ldr	ip, [sp, #76]	; 0x4c
   19228:	cmp	ip, #0
   1922c:	str	ip, [sp, #28]
   19230:	beq	192c8 <dcngettext@plt+0x82d8>
   19234:	ldr	ip, [sp, #80]	; 0x50
   19238:	cmp	ip, #0
   1923c:	str	ip, [sp, #32]
   19240:	beq	192d0 <dcngettext@plt+0x82e0>
   19244:	ldr	ip, [sp, #84]	; 0x54
   19248:	cmp	ip, #0
   1924c:	str	ip, [sp, #36]	; 0x24
   19250:	beq	192d8 <dcngettext@plt+0x82e8>
   19254:	ldr	ip, [sp, #88]	; 0x58
   19258:	cmp	ip, #0
   1925c:	str	ip, [sp, #40]	; 0x28
   19260:	beq	192e0 <dcngettext@plt+0x82f0>
   19264:	ldr	ip, [sp, #92]	; 0x5c
   19268:	cmp	ip, #0
   1926c:	str	ip, [sp, #44]	; 0x2c
   19270:	beq	192e8 <dcngettext@plt+0x82f8>
   19274:	ldr	ip, [sp, #96]	; 0x60
   19278:	cmp	ip, #0
   1927c:	str	ip, [sp, #48]	; 0x30
   19280:	beq	192f0 <dcngettext@plt+0x8300>
   19284:	ldr	ip, [sp, #100]	; 0x64
   19288:	cmp	ip, #0
   1928c:	str	ip, [sp, #52]	; 0x34
   19290:	movne	ip, #10
   19294:	moveq	ip, #9
   19298:	add	r3, sp, #16
   1929c:	stm	sp, {r3, ip}
   192a0:	ldr	r3, [sp, #60]	; 0x3c
   192a4:	bl	1898c <dcngettext@plt+0x799c>
   192a8:	add	sp, sp, #56	; 0x38
   192ac:	pop	{lr}		; (ldr lr, [sp], #4)
   192b0:	add	sp, sp, #4
   192b4:	bx	lr
   192b8:	mov	ip, #1
   192bc:	b	19298 <dcngettext@plt+0x82a8>
   192c0:	mov	ip, #2
   192c4:	b	19298 <dcngettext@plt+0x82a8>
   192c8:	mov	ip, #3
   192cc:	b	19298 <dcngettext@plt+0x82a8>
   192d0:	mov	ip, #4
   192d4:	b	19298 <dcngettext@plt+0x82a8>
   192d8:	mov	ip, #5
   192dc:	b	19298 <dcngettext@plt+0x82a8>
   192e0:	mov	ip, #6
   192e4:	b	19298 <dcngettext@plt+0x82a8>
   192e8:	mov	ip, #7
   192ec:	b	19298 <dcngettext@plt+0x82a8>
   192f0:	mov	ip, #8
   192f4:	b	19298 <dcngettext@plt+0x82a8>
   192f8:	ldr	r3, [pc, #116]	; 19374 <dcngettext@plt+0x8384>
   192fc:	push	{r4, lr}
   19300:	mov	r0, #10
   19304:	ldr	r1, [r3]
   19308:	bl	10df8 <fputc_unlocked@plt>
   1930c:	mov	r2, #5
   19310:	ldr	r1, [pc, #96]	; 19378 <dcngettext@plt+0x8388>
   19314:	mov	r0, #0
   19318:	bl	10e04 <dcgettext@plt>
   1931c:	ldr	r2, [pc, #88]	; 1937c <dcngettext@plt+0x838c>
   19320:	mov	r1, r0
   19324:	mov	r0, #1
   19328:	bl	10f24 <__printf_chk@plt>
   1932c:	mov	r2, #5
   19330:	ldr	r1, [pc, #72]	; 19380 <dcngettext@plt+0x8390>
   19334:	mov	r0, #0
   19338:	bl	10e04 <dcgettext@plt>
   1933c:	ldr	r3, [pc, #64]	; 19384 <dcngettext@plt+0x8394>
   19340:	ldr	r2, [pc, #64]	; 19388 <dcngettext@plt+0x8398>
   19344:	mov	r1, r0
   19348:	mov	r0, #1
   1934c:	bl	10f24 <__printf_chk@plt>
   19350:	mov	r2, #5
   19354:	ldr	r1, [pc, #48]	; 1938c <dcngettext@plt+0x839c>
   19358:	mov	r0, #0
   1935c:	bl	10e04 <dcgettext@plt>
   19360:	ldr	r2, [pc, #40]	; 19390 <dcngettext@plt+0x83a0>
   19364:	pop	{r4, lr}
   19368:	mov	r1, r0
   1936c:	mov	r0, #1
   19370:	b	10f24 <__printf_chk@plt>
   19374:	andeq	ip, r2, ip, ror #2
   19378:	andeq	fp, r1, r4, lsr #13
   1937c:			; <UNDEFINED> instruction: 0x0001b6b8
   19380:	ldrdeq	fp, [r1], -r0
   19384:	muleq	r1, r0, ip
   19388:			; <UNDEFINED> instruction: 0x0001acb8
   1938c:	andeq	fp, r1, r4, ror #13
   19390:	andeq	fp, r1, ip, lsl #14
   19394:	push	{r4, r5, r6, lr}
   19398:	mov	r6, r0
   1939c:	mov	r5, r1
   193a0:	mov	r4, r2
   193a4:	bl	19df8 <dcngettext@plt+0x8e08>
   193a8:	cmp	r0, #0
   193ac:	popne	{r4, r5, r6, pc}
   193b0:	cmp	r6, #0
   193b4:	beq	193c4 <dcngettext@plt+0x83d4>
   193b8:	cmp	r5, #0
   193bc:	cmpne	r4, #0
   193c0:	popeq	{r4, r5, r6, pc}
   193c4:	bl	19a10 <dcngettext@plt+0x8a20>
   193c8:	push	{r4, lr}
   193cc:	bl	19a98 <dcngettext@plt+0x8aa8>
   193d0:	cmp	r0, #0
   193d4:	popne	{r4, pc}
   193d8:	bl	19a10 <dcngettext@plt+0x8a20>
   193dc:	push	{r4, lr}
   193e0:	bl	19a98 <dcngettext@plt+0x8aa8>
   193e4:	cmp	r0, #0
   193e8:	popne	{r4, pc}
   193ec:	bl	19a10 <dcngettext@plt+0x8a20>
   193f0:	push	{r4, lr}
   193f4:	bl	19a98 <dcngettext@plt+0x8aa8>
   193f8:	cmp	r0, #0
   193fc:	popne	{r4, pc}
   19400:	bl	19a10 <dcngettext@plt+0x8a20>
   19404:	push	{r4, r5, r6, lr}
   19408:	mov	r5, r0
   1940c:	mov	r4, r1
   19410:	bl	19ac4 <dcngettext@plt+0x8ad4>
   19414:	cmp	r0, #0
   19418:	popne	{r4, r5, r6, pc}
   1941c:	adds	r4, r4, #0
   19420:	movne	r4, #1
   19424:	cmp	r5, #0
   19428:	orreq	r4, r4, #1
   1942c:	cmp	r4, #0
   19430:	popeq	{r4, r5, r6, pc}
   19434:	bl	19a10 <dcngettext@plt+0x8a20>
   19438:	push	{r4, lr}
   1943c:	cmp	r1, #0
   19440:	orreq	r1, r1, #1
   19444:	bl	19ac4 <dcngettext@plt+0x8ad4>
   19448:	cmp	r0, #0
   1944c:	popne	{r4, pc}
   19450:	bl	19a10 <dcngettext@plt+0x8a20>
   19454:	push	{r4, r5, r6, lr}
   19458:	mov	r6, r0
   1945c:	mov	r5, r1
   19460:	mov	r4, r2
   19464:	bl	19df8 <dcngettext@plt+0x8e08>
   19468:	cmp	r0, #0
   1946c:	popne	{r4, r5, r6, pc}
   19470:	cmp	r6, #0
   19474:	beq	19484 <dcngettext@plt+0x8494>
   19478:	cmp	r5, #0
   1947c:	cmpne	r4, #0
   19480:	popeq	{r4, r5, r6, pc}
   19484:	bl	19a10 <dcngettext@plt+0x8a20>
   19488:	cmp	r2, #0
   1948c:	cmpne	r1, #0
   19490:	moveq	r2, #1
   19494:	moveq	r1, r2
   19498:	push	{r4, lr}
   1949c:	bl	19df8 <dcngettext@plt+0x8e08>
   194a0:	cmp	r0, #0
   194a4:	popne	{r4, pc}
   194a8:	bl	19a10 <dcngettext@plt+0x8a20>
   194ac:	push	{r4, lr}
   194b0:	mov	r2, r1
   194b4:	mov	r1, r0
   194b8:	mov	r0, #0
   194bc:	bl	19df8 <dcngettext@plt+0x8e08>
   194c0:	cmp	r0, #0
   194c4:	popne	{r4, pc}
   194c8:	bl	19a10 <dcngettext@plt+0x8a20>
   194cc:	cmp	r1, #0
   194d0:	cmpne	r0, #0
   194d4:	moveq	r2, #1
   194d8:	movne	r2, r1
   194dc:	moveq	r1, r2
   194e0:	movne	r1, r0
   194e4:	push	{r4, lr}
   194e8:	mov	r0, #0
   194ec:	bl	19df8 <dcngettext@plt+0x8e08>
   194f0:	cmp	r0, #0
   194f4:	popne	{r4, pc}
   194f8:	bl	19a10 <dcngettext@plt+0x8a20>
   194fc:	cmp	r0, #0
   19500:	push	{r4, r5, r6, lr}
   19504:	mov	r5, r1
   19508:	ldr	r4, [r1]
   1950c:	beq	19548 <dcngettext@plt+0x8558>
   19510:	lsr	r2, r4, #1
   19514:	add	r3, r2, #1
   19518:	mvn	r3, r3
   1951c:	cmp	r4, r3
   19520:	bhi	19564 <dcngettext@plt+0x8574>
   19524:	add	r4, r4, #1
   19528:	add	r4, r4, r2
   1952c:	mov	r1, r4
   19530:	mov	r2, #1
   19534:	bl	19df8 <dcngettext@plt+0x8e08>
   19538:	cmp	r0, #0
   1953c:	beq	19568 <dcngettext@plt+0x8578>
   19540:	str	r4, [r5]
   19544:	pop	{r4, r5, r6, pc}
   19548:	cmp	r4, #0
   1954c:	moveq	r4, #64	; 0x40
   19550:	mov	r1, r4
   19554:	mov	r2, #1
   19558:	bl	19df8 <dcngettext@plt+0x8e08>
   1955c:	cmp	r0, #0
   19560:	bne	19540 <dcngettext@plt+0x8550>
   19564:	bl	19a10 <dcngettext@plt+0x8a20>
   19568:	cmp	r4, #0
   1956c:	bne	19564 <dcngettext@plt+0x8574>
   19570:	str	r4, [r5]
   19574:	pop	{r4, r5, r6, pc}
   19578:	cmp	r0, #0
   1957c:	push	{r4, r5, r6, lr}
   19580:	mov	r5, r1
   19584:	ldr	r4, [r1]
   19588:	mov	r6, r2
   1958c:	beq	195d0 <dcngettext@plt+0x85e0>
   19590:	lsr	r1, r4, #1
   19594:	add	r3, r1, #1
   19598:	mvn	r3, r3
   1959c:	cmp	r4, r3
   195a0:	bhi	19608 <dcngettext@plt+0x8618>
   195a4:	add	r4, r4, #1
   195a8:	add	r4, r4, r1
   195ac:	mov	r1, r4
   195b0:	bl	19df8 <dcngettext@plt+0x8e08>
   195b4:	cmp	r0, #0
   195b8:	bne	195c8 <dcngettext@plt+0x85d8>
   195bc:	cmp	r4, #0
   195c0:	cmpne	r6, #0
   195c4:	bne	19608 <dcngettext@plt+0x8618>
   195c8:	str	r4, [r5]
   195cc:	pop	{r4, r5, r6, pc}
   195d0:	cmp	r4, #0
   195d4:	bne	195f0 <dcngettext@plt+0x8600>
   195d8:	mov	r1, r2
   195dc:	mov	r0, #64	; 0x40
   195e0:	bl	19f38 <dcngettext@plt+0x8f48>
   195e4:	cmp	r0, #0
   195e8:	movne	r4, r0
   195ec:	addeq	r4, r0, #1
   195f0:	mov	r2, r6
   195f4:	mov	r1, r4
   195f8:	mov	r0, #0
   195fc:	bl	19df8 <dcngettext@plt+0x8e08>
   19600:	cmp	r0, #0
   19604:	bne	195c8 <dcngettext@plt+0x85d8>
   19608:	bl	19a10 <dcngettext@plt+0x8a20>
   1960c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19610:	sub	sp, sp, #12
   19614:	ldr	r6, [r1]
   19618:	mov	r8, r1
   1961c:	mov	r9, r0
   19620:	asrs	r4, r6, #1
   19624:	mov	sl, r2
   19628:	mov	fp, r3
   1962c:	ldr	r7, [sp, #48]	; 0x30
   19630:	bmi	197ac <dcngettext@plt+0x87bc>
   19634:	mvn	r1, #-2147483648	; 0x80000000
   19638:	sub	r1, r1, r4
   1963c:	cmp	r6, r1
   19640:	movle	r1, #0
   19644:	movgt	r1, #1
   19648:	mvn	r3, fp
   1964c:	cmp	r1, #0
   19650:	addeq	r4, r4, r6
   19654:	mvnne	r4, #-2147483648	; 0x80000000
   19658:	lsr	r3, r3, #31
   1965c:	cmp	fp, r4
   19660:	movge	r2, #0
   19664:	andlt	r2, r3, #1
   19668:	cmp	r2, #0
   1966c:	beq	1975c <dcngettext@plt+0x876c>
   19670:	cmp	r7, #0
   19674:	blt	19844 <dcngettext@plt+0x8854>
   19678:	bne	1983c <dcngettext@plt+0x884c>
   1967c:	mov	r5, #64	; 0x40
   19680:	mov	r1, r7
   19684:	mov	r0, r5
   19688:	str	r3, [sp, #4]
   1968c:	bl	1a144 <dcngettext@plt+0x9154>
   19690:	mov	r1, r7
   19694:	mov	r4, r0
   19698:	mov	r0, r5
   1969c:	bl	1a364 <dcngettext@plt+0x9374>
   196a0:	ldr	r3, [sp, #4]
   196a4:	sub	r5, r5, r1
   196a8:	cmp	r9, #0
   196ac:	sub	r2, r4, r6
   196b0:	streq	r9, [r8]
   196b4:	cmp	r2, sl
   196b8:	bge	1973c <dcngettext@plt+0x874c>
   196bc:	cmp	sl, #0
   196c0:	blt	197dc <dcngettext@plt+0x87ec>
   196c4:	cmp	r6, #0
   196c8:	blt	196e8 <dcngettext@plt+0x86f8>
   196cc:	mvn	r2, #-2147483648	; 0x80000000
   196d0:	sub	r2, r2, sl
   196d4:	cmp	r6, r2
   196d8:	movle	r2, #0
   196dc:	movgt	r2, #1
   196e0:	cmp	r2, #0
   196e4:	bne	197d8 <dcngettext@plt+0x87e8>
   196e8:	add	r6, r6, sl
   196ec:	cmp	fp, r6
   196f0:	movge	r3, #0
   196f4:	andlt	r3, r3, #1
   196f8:	cmp	r3, #0
   196fc:	mov	r4, r6
   19700:	bne	197d8 <dcngettext@plt+0x87e8>
   19704:	cmp	r7, #0
   19708:	blt	197f0 <dcngettext@plt+0x8800>
   1970c:	beq	19738 <dcngettext@plt+0x8748>
   19710:	cmp	r6, #0
   19714:	blt	19894 <dcngettext@plt+0x88a4>
   19718:	mov	r1, r7
   1971c:	mvn	r0, #-2147483648	; 0x80000000
   19720:	bl	1a144 <dcngettext@plt+0x9154>
   19724:	cmp	r6, r0
   19728:	movle	r0, #0
   1972c:	movgt	r0, #1
   19730:	cmp	r0, #0
   19734:	bne	197d8 <dcngettext@plt+0x87e8>
   19738:	mul	r5, r6, r7
   1973c:	mov	r1, r5
   19740:	mov	r0, r9
   19744:	bl	19ac4 <dcngettext@plt+0x8ad4>
   19748:	cmp	r0, #0
   1974c:	beq	197c0 <dcngettext@plt+0x87d0>
   19750:	str	r4, [r8]
   19754:	add	sp, sp, #12
   19758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1975c:	cmp	r7, #0
   19760:	blt	1981c <dcngettext@plt+0x882c>
   19764:	beq	1967c <dcngettext@plt+0x868c>
   19768:	cmp	r4, #0
   1976c:	blt	1984c <dcngettext@plt+0x885c>
   19770:	mov	r1, r7
   19774:	mvn	r0, #-2147483648	; 0x80000000
   19778:	str	r3, [sp, #4]
   1977c:	bl	1a144 <dcngettext@plt+0x9154>
   19780:	ldr	r3, [sp, #4]
   19784:	cmp	r0, r4
   19788:	movge	r0, #0
   1978c:	movlt	r0, #1
   19790:	cmp	r0, #0
   19794:	mvnne	r5, #-2147483648	; 0x80000000
   19798:	bne	19680 <dcngettext@plt+0x8690>
   1979c:	mul	r5, r7, r4
   197a0:	cmp	r5, #63	; 0x3f
   197a4:	bgt	196a8 <dcngettext@plt+0x86b8>
   197a8:	b	1967c <dcngettext@plt+0x868c>
   197ac:	rsb	r1, r4, #-2147483648	; 0x80000000
   197b0:	cmp	r6, r1
   197b4:	movge	r1, #0
   197b8:	movlt	r1, #1
   197bc:	b	19648 <dcngettext@plt+0x8658>
   197c0:	adds	r5, r5, #0
   197c4:	movne	r5, #1
   197c8:	cmp	r9, #0
   197cc:	orreq	r5, r5, #1
   197d0:	cmp	r5, #0
   197d4:	beq	19750 <dcngettext@plt+0x8760>
   197d8:	bl	19a10 <dcngettext@plt+0x8a20>
   197dc:	rsb	r2, sl, #-2147483648	; 0x80000000
   197e0:	cmp	r6, r2
   197e4:	movge	r2, #0
   197e8:	movlt	r2, #1
   197ec:	b	196e0 <dcngettext@plt+0x86f0>
   197f0:	cmp	r6, #0
   197f4:	blt	19878 <dcngettext@plt+0x8888>
   197f8:	cmn	r7, #1
   197fc:	beq	19738 <dcngettext@plt+0x8748>
   19800:	mov	r1, r7
   19804:	mov	r0, #-2147483648	; 0x80000000
   19808:	bl	1a144 <dcngettext@plt+0x9154>
   1980c:	cmp	r6, r0
   19810:	movle	r0, #0
   19814:	movgt	r0, #1
   19818:	b	19730 <dcngettext@plt+0x8740>
   1981c:	cmp	r4, #0
   19820:	blt	198b8 <dcngettext@plt+0x88c8>
   19824:	cmn	r7, #1
   19828:	beq	1979c <dcngettext@plt+0x87ac>
   1982c:	str	r3, [sp, #4]
   19830:	mov	r1, r7
   19834:	mov	r0, #-2147483648	; 0x80000000
   19838:	b	1977c <dcngettext@plt+0x878c>
   1983c:	mov	r4, fp
   19840:	b	19770 <dcngettext@plt+0x8780>
   19844:	mov	r4, fp
   19848:	b	19824 <dcngettext@plt+0x8834>
   1984c:	cmn	r4, #1
   19850:	beq	1979c <dcngettext@plt+0x87ac>
   19854:	mov	r1, r4
   19858:	mov	r0, #-2147483648	; 0x80000000
   1985c:	str	r3, [sp, #4]
   19860:	bl	1a144 <dcngettext@plt+0x9154>
   19864:	ldr	r3, [sp, #4]
   19868:	cmp	r7, r0
   1986c:	movle	r0, #0
   19870:	movgt	r0, #1
   19874:	b	19790 <dcngettext@plt+0x87a0>
   19878:	mov	r1, r7
   1987c:	mvn	r0, #-2147483648	; 0x80000000
   19880:	bl	1a144 <dcngettext@plt+0x9154>
   19884:	cmp	r6, r0
   19888:	movge	r0, #0
   1988c:	movlt	r0, #1
   19890:	b	19730 <dcngettext@plt+0x8740>
   19894:	cmn	r6, #1
   19898:	beq	19738 <dcngettext@plt+0x8748>
   1989c:	mov	r1, r6
   198a0:	mov	r0, #-2147483648	; 0x80000000
   198a4:	bl	1a144 <dcngettext@plt+0x9154>
   198a8:	cmp	r7, r0
   198ac:	movle	r0, #0
   198b0:	movgt	r0, #1
   198b4:	b	19730 <dcngettext@plt+0x8740>
   198b8:	mov	r1, r7
   198bc:	mvn	r0, #-2147483648	; 0x80000000
   198c0:	str	r3, [sp, #4]
   198c4:	bl	1a144 <dcngettext@plt+0x9154>
   198c8:	ldr	r3, [sp, #4]
   198cc:	cmp	r0, r4
   198d0:	movle	r0, #0
   198d4:	movgt	r0, #1
   198d8:	b	19790 <dcngettext@plt+0x87a0>
   198dc:	push	{r4, lr}
   198e0:	mov	r1, #1
   198e4:	bl	19a50 <dcngettext@plt+0x8a60>
   198e8:	cmp	r0, #0
   198ec:	popne	{r4, pc}
   198f0:	bl	19a10 <dcngettext@plt+0x8a20>
   198f4:	push	{r4, lr}
   198f8:	mov	r1, #1
   198fc:	bl	19a50 <dcngettext@plt+0x8a60>
   19900:	cmp	r0, #0
   19904:	popne	{r4, pc}
   19908:	bl	19a10 <dcngettext@plt+0x8a20>
   1990c:	push	{r4, lr}
   19910:	bl	19a50 <dcngettext@plt+0x8a60>
   19914:	cmp	r0, #0
   19918:	popne	{r4, pc}
   1991c:	bl	19a10 <dcngettext@plt+0x8a20>
   19920:	push	{r4, lr}
   19924:	bl	19a50 <dcngettext@plt+0x8a60>
   19928:	cmp	r0, #0
   1992c:	popne	{r4, pc}
   19930:	bl	19a10 <dcngettext@plt+0x8a20>
   19934:	push	{r4, r5, r6, lr}
   19938:	mov	r6, r0
   1993c:	mov	r0, r1
   19940:	mov	r4, r1
   19944:	bl	19a98 <dcngettext@plt+0x8aa8>
   19948:	subs	r5, r0, #0
   1994c:	beq	19964 <dcngettext@plt+0x8974>
   19950:	mov	r2, r4
   19954:	mov	r1, r6
   19958:	bl	10dc8 <memcpy@plt>
   1995c:	mov	r0, r5
   19960:	pop	{r4, r5, r6, pc}
   19964:	bl	19a10 <dcngettext@plt+0x8a20>
   19968:	push	{r4, r5, r6, lr}
   1996c:	mov	r6, r0
   19970:	mov	r0, r1
   19974:	mov	r4, r1
   19978:	bl	19a98 <dcngettext@plt+0x8aa8>
   1997c:	subs	r5, r0, #0
   19980:	beq	19998 <dcngettext@plt+0x89a8>
   19984:	mov	r2, r4
   19988:	mov	r1, r6
   1998c:	bl	10dc8 <memcpy@plt>
   19990:	mov	r0, r5
   19994:	pop	{r4, r5, r6, pc}
   19998:	bl	19a10 <dcngettext@plt+0x8a20>
   1999c:	push	{r4, r5, r6, lr}
   199a0:	mov	r6, r0
   199a4:	add	r0, r1, #1
   199a8:	mov	r4, r1
   199ac:	bl	19a98 <dcngettext@plt+0x8aa8>
   199b0:	subs	r5, r0, #0
   199b4:	beq	199d4 <dcngettext@plt+0x89e4>
   199b8:	mov	r3, #0
   199bc:	mov	r1, r6
   199c0:	strb	r3, [r5, r4]
   199c4:	mov	r2, r4
   199c8:	bl	10dc8 <memcpy@plt>
   199cc:	mov	r0, r5
   199d0:	pop	{r4, r5, r6, pc}
   199d4:	bl	19a10 <dcngettext@plt+0x8a20>
   199d8:	push	{r4, r5, r6, lr}
   199dc:	mov	r6, r0
   199e0:	bl	10edc <strlen@plt>
   199e4:	add	r4, r0, #1
   199e8:	mov	r0, r4
   199ec:	bl	19a98 <dcngettext@plt+0x8aa8>
   199f0:	subs	r5, r0, #0
   199f4:	beq	19a0c <dcngettext@plt+0x8a1c>
   199f8:	mov	r2, r4
   199fc:	mov	r1, r6
   19a00:	bl	10dc8 <memcpy@plt>
   19a04:	mov	r0, r5
   19a08:	pop	{r4, r5, r6, pc}
   19a0c:	bl	19a10 <dcngettext@plt+0x8a20>
   19a10:	ldr	r3, [pc, #44]	; 19a44 <dcngettext@plt+0x8a54>
   19a14:	push	{r4, lr}
   19a18:	mov	r2, #5
   19a1c:	ldr	r1, [pc, #36]	; 19a48 <dcngettext@plt+0x8a58>
   19a20:	mov	r0, #0
   19a24:	ldr	r4, [r3]
   19a28:	bl	10e04 <dcgettext@plt>
   19a2c:	ldr	r2, [pc, #24]	; 19a4c <dcngettext@plt+0x8a5c>
   19a30:	mov	r1, #0
   19a34:	mov	r3, r0
   19a38:	mov	r0, r4
   19a3c:	bl	10e70 <error@plt>
   19a40:	bl	10fd8 <abort@plt>
   19a44:	andeq	ip, r2, r8, lsl #2
   19a48:	andeq	fp, r1, ip, asr r7
   19a4c:	andeq	fp, r1, r0, ror #5
   19a50:	cmp	r1, #0
   19a54:	cmpne	r0, #0
   19a58:	moveq	r1, #1
   19a5c:	moveq	r0, r1
   19a60:	umull	r2, r3, r0, r1
   19a64:	adds	r3, r3, #0
   19a68:	movne	r3, #1
   19a6c:	cmp	r2, #0
   19a70:	blt	19a80 <dcngettext@plt+0x8a90>
   19a74:	cmp	r3, #0
   19a78:	bne	19a80 <dcngettext@plt+0x8a90>
   19a7c:	b	10d5c <calloc@plt>
   19a80:	push	{r4, lr}
   19a84:	bl	10ef4 <__errno_location@plt>
   19a88:	mov	r3, #12
   19a8c:	str	r3, [r0]
   19a90:	mov	r0, #0
   19a94:	pop	{r4, pc}
   19a98:	cmp	r0, #0
   19a9c:	moveq	r0, #1
   19aa0:	cmp	r0, #0
   19aa4:	blt	19aac <dcngettext@plt+0x8abc>
   19aa8:	b	10e7c <malloc@plt>
   19aac:	push	{r4, lr}
   19ab0:	bl	10ef4 <__errno_location@plt>
   19ab4:	mov	r3, #12
   19ab8:	str	r3, [r0]
   19abc:	mov	r0, #0
   19ac0:	pop	{r4, pc}
   19ac4:	cmp	r0, #0
   19ac8:	beq	19aec <dcngettext@plt+0x8afc>
   19acc:	cmp	r1, #0
   19ad0:	push	{lr}		; (str lr, [sp, #-4]!)
   19ad4:	sub	sp, sp, #12
   19ad8:	beq	19af4 <dcngettext@plt+0x8b04>
   19adc:	blt	19b0c <dcngettext@plt+0x8b1c>
   19ae0:	add	sp, sp, #12
   19ae4:	pop	{lr}		; (ldr lr, [sp], #4)
   19ae8:	b	10e10 <realloc@plt>
   19aec:	mov	r0, r1
   19af0:	b	19a98 <dcngettext@plt+0x8aa8>
   19af4:	str	r1, [sp, #4]
   19af8:	bl	1483c <dcngettext@plt+0x384c>
   19afc:	ldr	r3, [sp, #4]
   19b00:	mov	r0, r3
   19b04:	add	sp, sp, #12
   19b08:	pop	{pc}		; (ldr pc, [sp], #4)
   19b0c:	bl	10ef4 <__errno_location@plt>
   19b10:	mov	r2, #12
   19b14:	mov	r3, #0
   19b18:	str	r2, [r0]
   19b1c:	b	19b00 <dcngettext@plt+0x8b10>
   19b20:	push	{r4, r5, r6, lr}
   19b24:	mov	r4, r0
   19b28:	bl	10e58 <__fpending@plt>
   19b2c:	ldr	r5, [r4]
   19b30:	and	r5, r5, #32
   19b34:	mov	r6, r0
   19b38:	mov	r0, r4
   19b3c:	bl	146a4 <dcngettext@plt+0x36b4>
   19b40:	cmp	r5, #0
   19b44:	mov	r4, r0
   19b48:	bne	19b68 <dcngettext@plt+0x8b78>
   19b4c:	cmp	r0, #0
   19b50:	beq	19b60 <dcngettext@plt+0x8b70>
   19b54:	cmp	r6, #0
   19b58:	beq	19b84 <dcngettext@plt+0x8b94>
   19b5c:	mvn	r4, #0
   19b60:	mov	r0, r4
   19b64:	pop	{r4, r5, r6, pc}
   19b68:	cmp	r0, #0
   19b6c:	bne	19b5c <dcngettext@plt+0x8b6c>
   19b70:	bl	10ef4 <__errno_location@plt>
   19b74:	str	r4, [r0]
   19b78:	mvn	r4, #0
   19b7c:	mov	r0, r4
   19b80:	pop	{r4, r5, r6, pc}
   19b84:	bl	10ef4 <__errno_location@plt>
   19b88:	ldr	r4, [r0]
   19b8c:	subs	r4, r4, #9
   19b90:	mvnne	r4, #0
   19b94:	mov	r0, r4
   19b98:	pop	{r4, r5, r6, pc}
   19b9c:	push	{r1, r2, r3}
   19ba0:	push	{r4, r5, r6, r7, lr}
   19ba4:	sub	sp, sp, #8
   19ba8:	add	r3, sp, #32
   19bac:	ldr	r1, [sp, #28]
   19bb0:	str	r3, [sp, #4]
   19bb4:	cmp	r1, #0
   19bb8:	beq	19c50 <dcngettext@plt+0x8c60>
   19bbc:	ldr	r2, [pc, #412]	; 19d60 <dcngettext@plt+0x8d70>
   19bc0:	mov	r5, r0
   19bc4:	cmp	r1, r2
   19bc8:	bne	19c14 <dcngettext@plt+0x8c24>
   19bcc:	ldr	r6, [pc, #400]	; 19d64 <dcngettext@plt+0x8d74>
   19bd0:	ldr	r7, [r3]
   19bd4:	add	r2, sp, #36	; 0x24
   19bd8:	ldr	r3, [r6]
   19bdc:	str	r2, [sp, #4]
   19be0:	cmp	r3, #0
   19be4:	mov	r2, r7
   19be8:	blt	19d14 <dcngettext@plt+0x8d24>
   19bec:	bl	10f60 <fcntl64@plt>
   19bf0:	subs	r4, r0, #0
   19bf4:	blt	19c98 <dcngettext@plt+0x8ca8>
   19bf8:	mov	r3, #1
   19bfc:	str	r3, [r6]
   19c00:	mov	r0, r4
   19c04:	add	sp, sp, #8
   19c08:	pop	{r4, r5, r6, r7, lr}
   19c0c:	add	sp, sp, #12
   19c10:	bx	lr
   19c14:	cmp	r1, #11
   19c18:	beq	19c40 <dcngettext@plt+0x8c50>
   19c1c:	bgt	19c60 <dcngettext@plt+0x8c70>
   19c20:	cmp	r1, #3
   19c24:	beq	19c40 <dcngettext@plt+0x8c50>
   19c28:	ble	19d54 <dcngettext@plt+0x8d64>
   19c2c:	cmp	r1, #8
   19c30:	beq	19c80 <dcngettext@plt+0x8c90>
   19c34:	ble	19c80 <dcngettext@plt+0x8c90>
   19c38:	cmp	r1, #9
   19c3c:	bne	19c80 <dcngettext@plt+0x8c90>
   19c40:	mov	r0, r5
   19c44:	bl	10f60 <fcntl64@plt>
   19c48:	mov	r4, r0
   19c4c:	b	19c00 <dcngettext@plt+0x8c10>
   19c50:	ldr	r2, [sp, #32]
   19c54:	bl	10f60 <fcntl64@plt>
   19c58:	mov	r4, r0
   19c5c:	b	19c00 <dcngettext@plt+0x8c10>
   19c60:	ldr	r3, [pc, #256]	; 19d68 <dcngettext@plt+0x8d78>
   19c64:	cmp	r1, r3
   19c68:	bgt	19d34 <dcngettext@plt+0x8d44>
   19c6c:	cmp	r1, r2
   19c70:	bge	19c80 <dcngettext@plt+0x8c90>
   19c74:	sub	r3, r3, #6
   19c78:	cmp	r1, r3
   19c7c:	beq	19c40 <dcngettext@plt+0x8c50>
   19c80:	ldr	r3, [sp, #4]
   19c84:	mov	r0, r5
   19c88:	ldr	r2, [r3]
   19c8c:	bl	10f60 <fcntl64@plt>
   19c90:	mov	r4, r0
   19c94:	b	19c00 <dcngettext@plt+0x8c10>
   19c98:	bl	10ef4 <__errno_location@plt>
   19c9c:	ldr	r3, [r0]
   19ca0:	cmp	r3, #22
   19ca4:	bne	19bf8 <dcngettext@plt+0x8c08>
   19ca8:	mov	r2, r7
   19cac:	mov	r0, r5
   19cb0:	mov	r1, #0
   19cb4:	bl	10f60 <fcntl64@plt>
   19cb8:	subs	r4, r0, #0
   19cbc:	blt	19c00 <dcngettext@plt+0x8c10>
   19cc0:	mvn	r3, #0
   19cc4:	str	r3, [r6]
   19cc8:	mov	r1, #1
   19ccc:	mov	r0, r4
   19cd0:	bl	10f60 <fcntl64@plt>
   19cd4:	subs	r2, r0, #0
   19cd8:	blt	19cf4 <dcngettext@plt+0x8d04>
   19cdc:	orr	r2, r2, #1
   19ce0:	mov	r1, #2
   19ce4:	mov	r0, r4
   19ce8:	bl	10f60 <fcntl64@plt>
   19cec:	cmn	r0, #1
   19cf0:	bne	19c00 <dcngettext@plt+0x8c10>
   19cf4:	bl	10ef4 <__errno_location@plt>
   19cf8:	mov	r5, r0
   19cfc:	mov	r0, r4
   19d00:	ldr	r6, [r5]
   19d04:	mvn	r4, #0
   19d08:	bl	10fe4 <close@plt>
   19d0c:	str	r6, [r5]
   19d10:	b	19c00 <dcngettext@plt+0x8c10>
   19d14:	mov	r1, #0
   19d18:	bl	10f60 <fcntl64@plt>
   19d1c:	subs	r4, r0, #0
   19d20:	blt	19c00 <dcngettext@plt+0x8c10>
   19d24:	ldr	r3, [r6]
   19d28:	cmn	r3, #1
   19d2c:	beq	19cc8 <dcngettext@plt+0x8cd8>
   19d30:	b	19c00 <dcngettext@plt+0x8c10>
   19d34:	ldr	r3, [pc, #48]	; 19d6c <dcngettext@plt+0x8d7c>
   19d38:	cmp	r1, r3
   19d3c:	beq	19c80 <dcngettext@plt+0x8c90>
   19d40:	blt	19c40 <dcngettext@plt+0x8c50>
   19d44:	add	r3, r3, #1
   19d48:	cmp	r1, r3
   19d4c:	bne	19c80 <dcngettext@plt+0x8c90>
   19d50:	b	19c40 <dcngettext@plt+0x8c50>
   19d54:	cmp	r1, #1
   19d58:	bne	19c80 <dcngettext@plt+0x8c90>
   19d5c:	b	19c40 <dcngettext@plt+0x8c50>
   19d60:	andeq	r0, r0, r6, lsl #8
   19d64:	andeq	ip, r2, r0, asr #5
   19d68:	andeq	r0, r0, r7, lsl #8
   19d6c:	andeq	r0, r0, r9, lsl #8
   19d70:	push	{r4, lr}
   19d74:	mov	r0, #14
   19d78:	bl	10f90 <nl_langinfo@plt>
   19d7c:	cmp	r0, #0
   19d80:	beq	19d98 <dcngettext@plt+0x8da8>
   19d84:	ldrb	r2, [r0]
   19d88:	ldr	r3, [pc, #16]	; 19da0 <dcngettext@plt+0x8db0>
   19d8c:	cmp	r2, #0
   19d90:	moveq	r0, r3
   19d94:	pop	{r4, pc}
   19d98:	ldr	r0, [pc]	; 19da0 <dcngettext@plt+0x8db0>
   19d9c:	pop	{r4, pc}
   19da0:	andeq	fp, r1, r0, ror r7
   19da4:	push	{r4, r5, r6, r7, lr}
   19da8:	subs	r6, r0, #0
   19dac:	sub	sp, sp, #12
   19db0:	addeq	r6, sp, #4
   19db4:	mov	r0, r6
   19db8:	mov	r5, r2
   19dbc:	mov	r7, r1
   19dc0:	bl	10e64 <mbrtowc@plt>
   19dc4:	cmp	r5, #0
   19dc8:	cmnne	r0, #3
   19dcc:	mov	r4, r0
   19dd0:	bls	19dec <dcngettext@plt+0x8dfc>
   19dd4:	mov	r0, #0
   19dd8:	bl	19e44 <dcngettext@plt+0x8e54>
   19ddc:	cmp	r0, #0
   19de0:	moveq	r4, #1
   19de4:	ldrbeq	r3, [r7]
   19de8:	streq	r3, [r6]
   19dec:	mov	r0, r4
   19df0:	add	sp, sp, #12
   19df4:	pop	{r4, r5, r6, r7, pc}
   19df8:	push	{r4, r5, r6, lr}
   19dfc:	subs	r4, r2, #0
   19e00:	mov	r6, r0
   19e04:	mov	r5, r1
   19e08:	beq	19e34 <dcngettext@plt+0x8e44>
   19e0c:	mov	r1, r4
   19e10:	mvn	r0, #0
   19e14:	bl	19f38 <dcngettext@plt+0x8f48>
   19e18:	cmp	r0, r5
   19e1c:	bcs	19e34 <dcngettext@plt+0x8e44>
   19e20:	bl	10ef4 <__errno_location@plt>
   19e24:	mov	r3, #12
   19e28:	str	r3, [r0]
   19e2c:	mov	r0, #0
   19e30:	pop	{r4, r5, r6, pc}
   19e34:	mul	r1, r5, r4
   19e38:	mov	r0, r6
   19e3c:	pop	{r4, r5, r6, lr}
   19e40:	b	19ac4 <dcngettext@plt+0x8ad4>
   19e44:	push	{lr}		; (str lr, [sp, #-4]!)
   19e48:	sub	sp, sp, #268	; 0x10c
   19e4c:	add	r1, sp, #4
   19e50:	ldr	r2, [pc, #60]	; 19e94 <dcngettext@plt+0x8ea4>
   19e54:	bl	19ea0 <dcngettext@plt+0x8eb0>
   19e58:	cmp	r0, #0
   19e5c:	movne	r0, #0
   19e60:	bne	19e8c <dcngettext@plt+0x8e9c>
   19e64:	ldr	r1, [pc, #44]	; 19e98 <dcngettext@plt+0x8ea8>
   19e68:	add	r0, sp, #4
   19e6c:	bl	10d8c <strcmp@plt>
   19e70:	cmp	r0, #0
   19e74:	beq	19e8c <dcngettext@plt+0x8e9c>
   19e78:	add	r0, sp, #4
   19e7c:	ldr	r1, [pc, #24]	; 19e9c <dcngettext@plt+0x8eac>
   19e80:	bl	10d8c <strcmp@plt>
   19e84:	adds	r0, r0, #0
   19e88:	movne	r0, #1
   19e8c:	add	sp, sp, #268	; 0x10c
   19e90:	pop	{pc}		; (ldr pc, [sp], #4)
   19e94:	andeq	r0, r0, r1, lsl #2
   19e98:	andeq	fp, r1, r8, ror r7
   19e9c:	andeq	fp, r1, ip, ror r7
   19ea0:	push	{r4, r5, r6, lr}
   19ea4:	mov	r5, r1
   19ea8:	mov	r1, #0
   19eac:	mov	r4, r2
   19eb0:	bl	10f78 <setlocale@plt>
   19eb4:	subs	r6, r0, #0
   19eb8:	beq	19f14 <dcngettext@plt+0x8f24>
   19ebc:	bl	10edc <strlen@plt>
   19ec0:	cmp	r4, r0
   19ec4:	bhi	19efc <dcngettext@plt+0x8f0c>
   19ec8:	cmp	r4, #0
   19ecc:	bne	19ed8 <dcngettext@plt+0x8ee8>
   19ed0:	mov	r0, #34	; 0x22
   19ed4:	pop	{r4, r5, r6, pc}
   19ed8:	sub	r4, r4, #1
   19edc:	mov	r1, r6
   19ee0:	mov	r2, r4
   19ee4:	mov	r0, r5
   19ee8:	bl	10dc8 <memcpy@plt>
   19eec:	mov	r3, #0
   19ef0:	strb	r3, [r5, r4]
   19ef4:	mov	r0, #34	; 0x22
   19ef8:	pop	{r4, r5, r6, pc}
   19efc:	add	r2, r0, #1
   19f00:	mov	r1, r6
   19f04:	mov	r0, r5
   19f08:	bl	10dc8 <memcpy@plt>
   19f0c:	mov	r0, #0
   19f10:	pop	{r4, r5, r6, pc}
   19f14:	cmp	r4, #0
   19f18:	beq	19f28 <dcngettext@plt+0x8f38>
   19f1c:	strb	r6, [r5]
   19f20:	mov	r0, #22
   19f24:	pop	{r4, r5, r6, pc}
   19f28:	mov	r0, #22
   19f2c:	pop	{r4, r5, r6, pc}
   19f30:	mov	r1, #0
   19f34:	b	10f78 <setlocale@plt>
   19f38:	subs	r2, r1, #1
   19f3c:	bxeq	lr
   19f40:	bcc	1a118 <dcngettext@plt+0x9128>
   19f44:	cmp	r0, r1
   19f48:	bls	1a0fc <dcngettext@plt+0x910c>
   19f4c:	tst	r1, r2
   19f50:	beq	1a108 <dcngettext@plt+0x9118>
   19f54:	clz	r3, r0
   19f58:	clz	r2, r1
   19f5c:	sub	r3, r2, r3
   19f60:	rsbs	r3, r3, #31
   19f64:	addne	r3, r3, r3, lsl #1
   19f68:	mov	r2, #0
   19f6c:	addne	pc, pc, r3, lsl #2
   19f70:	nop			; (mov r0, r0)
   19f74:	cmp	r0, r1, lsl #31
   19f78:	adc	r2, r2, r2
   19f7c:	subcs	r0, r0, r1, lsl #31
   19f80:	cmp	r0, r1, lsl #30
   19f84:	adc	r2, r2, r2
   19f88:	subcs	r0, r0, r1, lsl #30
   19f8c:	cmp	r0, r1, lsl #29
   19f90:	adc	r2, r2, r2
   19f94:	subcs	r0, r0, r1, lsl #29
   19f98:	cmp	r0, r1, lsl #28
   19f9c:	adc	r2, r2, r2
   19fa0:	subcs	r0, r0, r1, lsl #28
   19fa4:	cmp	r0, r1, lsl #27
   19fa8:	adc	r2, r2, r2
   19fac:	subcs	r0, r0, r1, lsl #27
   19fb0:	cmp	r0, r1, lsl #26
   19fb4:	adc	r2, r2, r2
   19fb8:	subcs	r0, r0, r1, lsl #26
   19fbc:	cmp	r0, r1, lsl #25
   19fc0:	adc	r2, r2, r2
   19fc4:	subcs	r0, r0, r1, lsl #25
   19fc8:	cmp	r0, r1, lsl #24
   19fcc:	adc	r2, r2, r2
   19fd0:	subcs	r0, r0, r1, lsl #24
   19fd4:	cmp	r0, r1, lsl #23
   19fd8:	adc	r2, r2, r2
   19fdc:	subcs	r0, r0, r1, lsl #23
   19fe0:	cmp	r0, r1, lsl #22
   19fe4:	adc	r2, r2, r2
   19fe8:	subcs	r0, r0, r1, lsl #22
   19fec:	cmp	r0, r1, lsl #21
   19ff0:	adc	r2, r2, r2
   19ff4:	subcs	r0, r0, r1, lsl #21
   19ff8:	cmp	r0, r1, lsl #20
   19ffc:	adc	r2, r2, r2
   1a000:	subcs	r0, r0, r1, lsl #20
   1a004:	cmp	r0, r1, lsl #19
   1a008:	adc	r2, r2, r2
   1a00c:	subcs	r0, r0, r1, lsl #19
   1a010:	cmp	r0, r1, lsl #18
   1a014:	adc	r2, r2, r2
   1a018:	subcs	r0, r0, r1, lsl #18
   1a01c:	cmp	r0, r1, lsl #17
   1a020:	adc	r2, r2, r2
   1a024:	subcs	r0, r0, r1, lsl #17
   1a028:	cmp	r0, r1, lsl #16
   1a02c:	adc	r2, r2, r2
   1a030:	subcs	r0, r0, r1, lsl #16
   1a034:	cmp	r0, r1, lsl #15
   1a038:	adc	r2, r2, r2
   1a03c:	subcs	r0, r0, r1, lsl #15
   1a040:	cmp	r0, r1, lsl #14
   1a044:	adc	r2, r2, r2
   1a048:	subcs	r0, r0, r1, lsl #14
   1a04c:	cmp	r0, r1, lsl #13
   1a050:	adc	r2, r2, r2
   1a054:	subcs	r0, r0, r1, lsl #13
   1a058:	cmp	r0, r1, lsl #12
   1a05c:	adc	r2, r2, r2
   1a060:	subcs	r0, r0, r1, lsl #12
   1a064:	cmp	r0, r1, lsl #11
   1a068:	adc	r2, r2, r2
   1a06c:	subcs	r0, r0, r1, lsl #11
   1a070:	cmp	r0, r1, lsl #10
   1a074:	adc	r2, r2, r2
   1a078:	subcs	r0, r0, r1, lsl #10
   1a07c:	cmp	r0, r1, lsl #9
   1a080:	adc	r2, r2, r2
   1a084:	subcs	r0, r0, r1, lsl #9
   1a088:	cmp	r0, r1, lsl #8
   1a08c:	adc	r2, r2, r2
   1a090:	subcs	r0, r0, r1, lsl #8
   1a094:	cmp	r0, r1, lsl #7
   1a098:	adc	r2, r2, r2
   1a09c:	subcs	r0, r0, r1, lsl #7
   1a0a0:	cmp	r0, r1, lsl #6
   1a0a4:	adc	r2, r2, r2
   1a0a8:	subcs	r0, r0, r1, lsl #6
   1a0ac:	cmp	r0, r1, lsl #5
   1a0b0:	adc	r2, r2, r2
   1a0b4:	subcs	r0, r0, r1, lsl #5
   1a0b8:	cmp	r0, r1, lsl #4
   1a0bc:	adc	r2, r2, r2
   1a0c0:	subcs	r0, r0, r1, lsl #4
   1a0c4:	cmp	r0, r1, lsl #3
   1a0c8:	adc	r2, r2, r2
   1a0cc:	subcs	r0, r0, r1, lsl #3
   1a0d0:	cmp	r0, r1, lsl #2
   1a0d4:	adc	r2, r2, r2
   1a0d8:	subcs	r0, r0, r1, lsl #2
   1a0dc:	cmp	r0, r1, lsl #1
   1a0e0:	adc	r2, r2, r2
   1a0e4:	subcs	r0, r0, r1, lsl #1
   1a0e8:	cmp	r0, r1
   1a0ec:	adc	r2, r2, r2
   1a0f0:	subcs	r0, r0, r1
   1a0f4:	mov	r0, r2
   1a0f8:	bx	lr
   1a0fc:	moveq	r0, #1
   1a100:	movne	r0, #0
   1a104:	bx	lr
   1a108:	clz	r2, r1
   1a10c:	rsb	r2, r2, #31
   1a110:	lsr	r0, r0, r2
   1a114:	bx	lr
   1a118:	cmp	r0, #0
   1a11c:	mvnne	r0, #0
   1a120:	b	1a3c0 <dcngettext@plt+0x93d0>
   1a124:	cmp	r1, #0
   1a128:	beq	1a118 <dcngettext@plt+0x9128>
   1a12c:	push	{r0, r1, lr}
   1a130:	bl	19f38 <dcngettext@plt+0x8f48>
   1a134:	pop	{r1, r2, lr}
   1a138:	mul	r3, r2, r0
   1a13c:	sub	r1, r1, r3
   1a140:	bx	lr
   1a144:	cmp	r1, #0
   1a148:	beq	1a354 <dcngettext@plt+0x9364>
   1a14c:	eor	ip, r0, r1
   1a150:	rsbmi	r1, r1, #0
   1a154:	subs	r2, r1, #1
   1a158:	beq	1a320 <dcngettext@plt+0x9330>
   1a15c:	movs	r3, r0
   1a160:	rsbmi	r3, r0, #0
   1a164:	cmp	r3, r1
   1a168:	bls	1a32c <dcngettext@plt+0x933c>
   1a16c:	tst	r1, r2
   1a170:	beq	1a33c <dcngettext@plt+0x934c>
   1a174:	clz	r2, r3
   1a178:	clz	r0, r1
   1a17c:	sub	r2, r0, r2
   1a180:	rsbs	r2, r2, #31
   1a184:	addne	r2, r2, r2, lsl #1
   1a188:	mov	r0, #0
   1a18c:	addne	pc, pc, r2, lsl #2
   1a190:	nop			; (mov r0, r0)
   1a194:	cmp	r3, r1, lsl #31
   1a198:	adc	r0, r0, r0
   1a19c:	subcs	r3, r3, r1, lsl #31
   1a1a0:	cmp	r3, r1, lsl #30
   1a1a4:	adc	r0, r0, r0
   1a1a8:	subcs	r3, r3, r1, lsl #30
   1a1ac:	cmp	r3, r1, lsl #29
   1a1b0:	adc	r0, r0, r0
   1a1b4:	subcs	r3, r3, r1, lsl #29
   1a1b8:	cmp	r3, r1, lsl #28
   1a1bc:	adc	r0, r0, r0
   1a1c0:	subcs	r3, r3, r1, lsl #28
   1a1c4:	cmp	r3, r1, lsl #27
   1a1c8:	adc	r0, r0, r0
   1a1cc:	subcs	r3, r3, r1, lsl #27
   1a1d0:	cmp	r3, r1, lsl #26
   1a1d4:	adc	r0, r0, r0
   1a1d8:	subcs	r3, r3, r1, lsl #26
   1a1dc:	cmp	r3, r1, lsl #25
   1a1e0:	adc	r0, r0, r0
   1a1e4:	subcs	r3, r3, r1, lsl #25
   1a1e8:	cmp	r3, r1, lsl #24
   1a1ec:	adc	r0, r0, r0
   1a1f0:	subcs	r3, r3, r1, lsl #24
   1a1f4:	cmp	r3, r1, lsl #23
   1a1f8:	adc	r0, r0, r0
   1a1fc:	subcs	r3, r3, r1, lsl #23
   1a200:	cmp	r3, r1, lsl #22
   1a204:	adc	r0, r0, r0
   1a208:	subcs	r3, r3, r1, lsl #22
   1a20c:	cmp	r3, r1, lsl #21
   1a210:	adc	r0, r0, r0
   1a214:	subcs	r3, r3, r1, lsl #21
   1a218:	cmp	r3, r1, lsl #20
   1a21c:	adc	r0, r0, r0
   1a220:	subcs	r3, r3, r1, lsl #20
   1a224:	cmp	r3, r1, lsl #19
   1a228:	adc	r0, r0, r0
   1a22c:	subcs	r3, r3, r1, lsl #19
   1a230:	cmp	r3, r1, lsl #18
   1a234:	adc	r0, r0, r0
   1a238:	subcs	r3, r3, r1, lsl #18
   1a23c:	cmp	r3, r1, lsl #17
   1a240:	adc	r0, r0, r0
   1a244:	subcs	r3, r3, r1, lsl #17
   1a248:	cmp	r3, r1, lsl #16
   1a24c:	adc	r0, r0, r0
   1a250:	subcs	r3, r3, r1, lsl #16
   1a254:	cmp	r3, r1, lsl #15
   1a258:	adc	r0, r0, r0
   1a25c:	subcs	r3, r3, r1, lsl #15
   1a260:	cmp	r3, r1, lsl #14
   1a264:	adc	r0, r0, r0
   1a268:	subcs	r3, r3, r1, lsl #14
   1a26c:	cmp	r3, r1, lsl #13
   1a270:	adc	r0, r0, r0
   1a274:	subcs	r3, r3, r1, lsl #13
   1a278:	cmp	r3, r1, lsl #12
   1a27c:	adc	r0, r0, r0
   1a280:	subcs	r3, r3, r1, lsl #12
   1a284:	cmp	r3, r1, lsl #11
   1a288:	adc	r0, r0, r0
   1a28c:	subcs	r3, r3, r1, lsl #11
   1a290:	cmp	r3, r1, lsl #10
   1a294:	adc	r0, r0, r0
   1a298:	subcs	r3, r3, r1, lsl #10
   1a29c:	cmp	r3, r1, lsl #9
   1a2a0:	adc	r0, r0, r0
   1a2a4:	subcs	r3, r3, r1, lsl #9
   1a2a8:	cmp	r3, r1, lsl #8
   1a2ac:	adc	r0, r0, r0
   1a2b0:	subcs	r3, r3, r1, lsl #8
   1a2b4:	cmp	r3, r1, lsl #7
   1a2b8:	adc	r0, r0, r0
   1a2bc:	subcs	r3, r3, r1, lsl #7
   1a2c0:	cmp	r3, r1, lsl #6
   1a2c4:	adc	r0, r0, r0
   1a2c8:	subcs	r3, r3, r1, lsl #6
   1a2cc:	cmp	r3, r1, lsl #5
   1a2d0:	adc	r0, r0, r0
   1a2d4:	subcs	r3, r3, r1, lsl #5
   1a2d8:	cmp	r3, r1, lsl #4
   1a2dc:	adc	r0, r0, r0
   1a2e0:	subcs	r3, r3, r1, lsl #4
   1a2e4:	cmp	r3, r1, lsl #3
   1a2e8:	adc	r0, r0, r0
   1a2ec:	subcs	r3, r3, r1, lsl #3
   1a2f0:	cmp	r3, r1, lsl #2
   1a2f4:	adc	r0, r0, r0
   1a2f8:	subcs	r3, r3, r1, lsl #2
   1a2fc:	cmp	r3, r1, lsl #1
   1a300:	adc	r0, r0, r0
   1a304:	subcs	r3, r3, r1, lsl #1
   1a308:	cmp	r3, r1
   1a30c:	adc	r0, r0, r0
   1a310:	subcs	r3, r3, r1
   1a314:	cmp	ip, #0
   1a318:	rsbmi	r0, r0, #0
   1a31c:	bx	lr
   1a320:	teq	ip, r0
   1a324:	rsbmi	r0, r0, #0
   1a328:	bx	lr
   1a32c:	movcc	r0, #0
   1a330:	asreq	r0, ip, #31
   1a334:	orreq	r0, r0, #1
   1a338:	bx	lr
   1a33c:	clz	r2, r1
   1a340:	rsb	r2, r2, #31
   1a344:	cmp	ip, #0
   1a348:	lsr	r0, r3, r2
   1a34c:	rsbmi	r0, r0, #0
   1a350:	bx	lr
   1a354:	cmp	r0, #0
   1a358:	mvngt	r0, #-2147483648	; 0x80000000
   1a35c:	movlt	r0, #-2147483648	; 0x80000000
   1a360:	b	1a3c0 <dcngettext@plt+0x93d0>
   1a364:	cmp	r1, #0
   1a368:	beq	1a354 <dcngettext@plt+0x9364>
   1a36c:	push	{r0, r1, lr}
   1a370:	bl	1a14c <dcngettext@plt+0x915c>
   1a374:	pop	{r1, r2, lr}
   1a378:	mul	r3, r2, r0
   1a37c:	sub	r1, r1, r3
   1a380:	bx	lr
   1a384:	cmp	r3, #0
   1a388:	cmpeq	r2, #0
   1a38c:	bne	1a3a4 <dcngettext@plt+0x93b4>
   1a390:	cmp	r1, #0
   1a394:	cmpeq	r0, #0
   1a398:	mvnne	r1, #0
   1a39c:	mvnne	r0, #0
   1a3a0:	b	1a3c0 <dcngettext@plt+0x93d0>
   1a3a4:	sub	sp, sp, #8
   1a3a8:	push	{sp, lr}
   1a3ac:	bl	1a3d0 <dcngettext@plt+0x93e0>
   1a3b0:	ldr	lr, [sp, #4]
   1a3b4:	add	sp, sp, #8
   1a3b8:	pop	{r2, r3}
   1a3bc:	bx	lr
   1a3c0:	push	{r1, lr}
   1a3c4:	mov	r0, #8
   1a3c8:	bl	10d74 <raise@plt>
   1a3cc:	pop	{r1, pc}
   1a3d0:	cmp	r1, r3
   1a3d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a3d8:	cmpeq	r0, r2
   1a3dc:	mov	r4, r0
   1a3e0:	mov	r5, r1
   1a3e4:	ldr	r9, [sp, #28]
   1a3e8:	movcc	r0, #0
   1a3ec:	movcc	r1, #0
   1a3f0:	bcc	1a4e8 <dcngettext@plt+0x94f8>
   1a3f4:	cmp	r3, #0
   1a3f8:	clzeq	ip, r2
   1a3fc:	clzne	ip, r3
   1a400:	addeq	ip, ip, #32
   1a404:	cmp	r5, #0
   1a408:	clzeq	r1, r4
   1a40c:	addeq	r1, r1, #32
   1a410:	clzne	r1, r5
   1a414:	sub	ip, ip, r1
   1a418:	sub	lr, ip, #32
   1a41c:	lsl	r7, r3, ip
   1a420:	rsb	r8, ip, #32
   1a424:	orr	r7, r7, r2, lsl lr
   1a428:	orr	r7, r7, r2, lsr r8
   1a42c:	lsl	r6, r2, ip
   1a430:	cmp	r5, r7
   1a434:	cmpeq	r4, r6
   1a438:	movcc	r0, #0
   1a43c:	movcc	r1, #0
   1a440:	bcc	1a45c <dcngettext@plt+0x946c>
   1a444:	mov	r3, #1
   1a448:	subs	r4, r4, r6
   1a44c:	lsl	r1, r3, lr
   1a450:	lsl	r0, r3, ip
   1a454:	orr	r1, r1, r3, lsr r8
   1a458:	sbc	r5, r5, r7
   1a45c:	cmp	ip, #0
   1a460:	beq	1a4e8 <dcngettext@plt+0x94f8>
   1a464:	lsrs	r3, r7, #1
   1a468:	rrx	r2, r6
   1a46c:	mov	r6, ip
   1a470:	b	1a494 <dcngettext@plt+0x94a4>
   1a474:	subs	r4, r4, r2
   1a478:	sbc	r5, r5, r3
   1a47c:	adds	r4, r4, r4
   1a480:	adc	r5, r5, r5
   1a484:	adds	r4, r4, #1
   1a488:	adc	r5, r5, #0
   1a48c:	subs	r6, r6, #1
   1a490:	beq	1a4b0 <dcngettext@plt+0x94c0>
   1a494:	cmp	r5, r3
   1a498:	cmpeq	r4, r2
   1a49c:	bcs	1a474 <dcngettext@plt+0x9484>
   1a4a0:	adds	r4, r4, r4
   1a4a4:	adc	r5, r5, r5
   1a4a8:	subs	r6, r6, #1
   1a4ac:	bne	1a494 <dcngettext@plt+0x94a4>
   1a4b0:	lsr	r6, r4, ip
   1a4b4:	lsr	r7, r5, ip
   1a4b8:	orr	r6, r6, r5, lsl r8
   1a4bc:	adds	r2, r0, r4
   1a4c0:	orr	r6, r6, r5, lsr lr
   1a4c4:	adc	r3, r1, r5
   1a4c8:	lsl	r1, r7, ip
   1a4cc:	orr	r1, r1, r6, lsl lr
   1a4d0:	lsl	r0, r6, ip
   1a4d4:	orr	r1, r1, r6, lsr r8
   1a4d8:	subs	r0, r2, r0
   1a4dc:	mov	r4, r6
   1a4e0:	mov	r5, r7
   1a4e4:	sbc	r1, r3, r1
   1a4e8:	cmp	r9, #0
   1a4ec:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1a4f0:	strd	r4, [r9]
   1a4f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a4f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a4fc:	mov	r7, r0
   1a500:	ldr	r6, [pc, #72]	; 1a550 <dcngettext@plt+0x9560>
   1a504:	ldr	r5, [pc, #72]	; 1a554 <dcngettext@plt+0x9564>
   1a508:	add	r6, pc, r6
   1a50c:	add	r5, pc, r5
   1a510:	sub	r6, r6, r5
   1a514:	mov	r8, r1
   1a518:	mov	r9, r2
   1a51c:	bl	10d30 <fdopen@plt-0x20>
   1a520:	asrs	r6, r6, #2
   1a524:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a528:	mov	r4, #0
   1a52c:	add	r4, r4, #1
   1a530:	ldr	r3, [r5], #4
   1a534:	mov	r2, r9
   1a538:	mov	r1, r8
   1a53c:	mov	r0, r7
   1a540:	blx	r3
   1a544:	cmp	r6, r4
   1a548:	bne	1a52c <dcngettext@plt+0x953c>
   1a54c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a550:	andeq	r1, r1, r0, lsl #20
   1a554:	strdeq	r1, [r1], -r8
   1a558:	bx	lr
   1a55c:	ldr	r3, [pc, #12]	; 1a570 <dcngettext@plt+0x9580>
   1a560:	mov	r1, #0
   1a564:	add	r3, pc, r3
   1a568:	ldr	r2, [r3]
   1a56c:	b	10f00 <__cxa_atexit@plt>
   1a570:	andeq	r1, r1, ip, lsl #23

Disassembly of section .fini:

0001a574 <.fini>:
   1a574:	push	{r3, lr}
   1a578:	pop	{r3, pc}
