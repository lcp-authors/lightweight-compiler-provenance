
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

00000760 <_init>:
 760:	push	{r3, lr}
 764:	bl	894 <call_weak_fn>
 768:	pop	{r3, pc}

Disassembly of section .plt:

0000076c <.plt>:
 76c:	push	{lr}		; (str lr, [sp, #-4]!)
 770:	ldr	lr, [pc, #4]	; 77c <.plt+0x10>
 774:	add	lr, pc, lr
 778:	ldr	pc, [lr, #8]!
 77c:	.word	0x00011884

00000780 <calloc@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2180]!	; 0x884

0000078c <mod_del_cmd@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2172]!	; 0x87c

00000798 <__cxa_finalize@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2164]!	; 0x874

000007a4 <sendto_one@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2156]!	; 0x86c

000007b0 <free@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2148]!	; 0x864

000007bc <rb_outofmemory@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2140]!	; 0x85c

000007c8 <rb_free_rb_dlink_node@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2132]!	; 0x854

000007d4 <strcpy@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2124]!	; 0x84c

000007e0 <rb_dictionary_foreach_start@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2116]!	; 0x844

000007ec <msgbuf_reconstruct_tail@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2108]!	; 0x83c

000007f8 <__gmon_start__@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2100]!	; 0x834

00000804 <rb_make_rb_dlink_node@plt>:
 804:	add	ip, pc, #0, 12
 808:	add	ip, ip, #69632	; 0x11000
 80c:	ldr	pc, [ip, #2092]!	; 0x82c

00000810 <sendto_one_numeric@plt>:
 810:	add	ip, pc, #0, 12
 814:	add	ip, ip, #69632	; 0x11000
 818:	ldr	pc, [ip, #2084]!	; 0x824

0000081c <strlen@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2076]!	; 0x81c

00000828 <strchr@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2068]!	; 0x814

00000834 <find_server@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2060]!	; 0x80c

00000840 <rb_dictionary_foreach_cur@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2052]!	; 0x804

0000084c <find_named_person@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #2044]!	; 0x7fc

00000858 <flood_endgrace@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #2036]!	; 0x7f4

00000864 <rb_dictionary_foreach_next@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000870 <mod_add_cmd@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #2020]!	; 0x7e4

0000087c <rb_dictionary_retrieve@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #2012]!	; 0x7dc

00000888 <__assert_fail@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000894 <call_weak_fn>:
     894:	ldr	r3, [pc, #20]	; 8b0 <call_weak_fn+0x1c>
     898:	ldr	r2, [pc, #20]	; 8b4 <call_weak_fn+0x20>
     89c:	add	r3, pc, r3
     8a0:	ldr	r2, [r3, r2]
     8a4:	cmp	r2, #0
     8a8:	bxeq	lr
     8ac:	b	7f8 <__gmon_start__@plt>
     8b0:	.word	0x0001175c
     8b4:	.word	0x00000074

000008b8 <deregister_tm_clones>:
     8b8:	ldr	r3, [pc, #52]	; 8f4 <deregister_tm_clones+0x3c>
     8bc:	ldr	r0, [pc, #52]	; 8f8 <deregister_tm_clones+0x40>
     8c0:	add	r3, pc, r3
     8c4:	add	r0, pc, r0
     8c8:	add	r3, r3, #3
     8cc:	sub	r3, r3, r0
     8d0:	cmp	r3, #6
     8d4:	ldr	r3, [pc, #32]	; 8fc <deregister_tm_clones+0x44>
     8d8:	add	r3, pc, r3
     8dc:	bxls	lr
     8e0:	ldr	r2, [pc, #24]	; 900 <deregister_tm_clones+0x48>
     8e4:	ldr	r3, [r3, r2]
     8e8:	cmp	r3, #0
     8ec:	bxeq	lr
     8f0:	bx	r3
     8f4:	.word	0x00011800
     8f8:	.word	0x000117fc
     8fc:	.word	0x00011720
     900:	.word	0x0000006c

00000904 <register_tm_clones>:
     904:	ldr	r1, [pc, #56]	; 944 <register_tm_clones+0x40>
     908:	ldr	r0, [pc, #56]	; 948 <register_tm_clones+0x44>
     90c:	add	r1, pc, r1
     910:	add	r0, pc, r0
     914:	sub	r1, r1, r0
     918:	ldr	r3, [pc, #44]	; 94c <register_tm_clones+0x48>
     91c:	asr	r1, r1, #2
     920:	add	r3, pc, r3
     924:	add	r1, r1, r1, lsr #31
     928:	asrs	r1, r1, #1
     92c:	bxeq	lr
     930:	ldr	r2, [pc, #24]	; 950 <register_tm_clones+0x4c>
     934:	ldr	r3, [r3, r2]
     938:	cmp	r3, #0
     93c:	bxeq	lr
     940:	bx	r3
     944:	.word	0x000117b4
     948:	.word	0x000117b0
     94c:	.word	0x000116d8
     950:	.word	0x0000007c

00000954 <__do_global_dtors_aux>:
     954:	ldr	r3, [pc, #76]	; 9a8 <__do_global_dtors_aux+0x54>
     958:	ldr	r2, [pc, #76]	; 9ac <__do_global_dtors_aux+0x58>
     95c:	add	r3, pc, r3
     960:	add	r2, pc, r2
     964:	ldrb	r3, [r3]
     968:	cmp	r3, #0
     96c:	bxne	lr
     970:	ldr	r3, [pc, #56]	; 9b0 <__do_global_dtors_aux+0x5c>
     974:	push	{r4, lr}
     978:	ldr	r3, [r2, r3]
     97c:	cmp	r3, #0
     980:	beq	990 <__do_global_dtors_aux+0x3c>
     984:	ldr	r3, [pc, #40]	; 9b4 <__do_global_dtors_aux+0x60>
     988:	ldr	r0, [pc, r3]
     98c:	bl	798 <__cxa_finalize@plt>
     990:	bl	8b8 <deregister_tm_clones>
     994:	ldr	r3, [pc, #28]	; 9b8 <__do_global_dtors_aux+0x64>
     998:	mov	r2, #1
     99c:	add	r3, pc, r3
     9a0:	strb	r2, [r3]
     9a4:	pop	{r4, pc}
     9a8:	.word	0x00011764
     9ac:	.word	0x00011698
     9b0:	.word	0x00000068
     9b4:	.word	0x000116f4
     9b8:	.word	0x00011724

000009bc <frame_dummy>:
     9bc:	ldr	r0, [pc, #56]	; 9fc <frame_dummy+0x40>
     9c0:	ldr	r3, [pc, #56]	; a00 <frame_dummy+0x44>
     9c4:	add	r0, pc, r0
     9c8:	ldr	r2, [r0]
     9cc:	add	r3, pc, r3
     9d0:	cmp	r2, #0
     9d4:	bne	9dc <frame_dummy+0x20>
     9d8:	b	904 <register_tm_clones>
     9dc:	ldr	r2, [pc, #32]	; a04 <frame_dummy+0x48>
     9e0:	ldr	r3, [r3, r2]
     9e4:	cmp	r3, #0
     9e8:	beq	9d8 <frame_dummy+0x1c>
     9ec:	push	{r4, lr}
     9f0:	blx	r3
     9f4:	pop	{r4, lr}
     9f8:	b	904 <register_tm_clones>
     9fc:	.word	0x00011500
     a00:	.word	0x0001162c
     a04:	.word	0x00000078

00000a08 <m_alias>:
     a08:	push	{r4, r5, r6, r7, r8, r9, lr}
     a0c:	sub	sp, sp, #12
     a10:	mov	r7, r0
     a14:	mov	r4, r1
     a18:	ldr	r5, [pc, #480]	; c00 <m_alias+0x1f8>
     a1c:	add	r5, pc, r5
     a20:	ldr	r3, [pc, #476]	; c04 <m_alias+0x1fc>
     a24:	ldr	r3, [r5, r3]
     a28:	ldr	r1, [r0, #192]	; 0xc0
     a2c:	ldr	r0, [r3]
     a30:	bl	87c <rb_dictionary_retrieve@plt>
     a34:	subs	r6, r0, #0
     a38:	beq	afc <m_alias+0xf4>
     a3c:	ldrd	r2, [r4, #64]	; 0x40
     a40:	and	r2, r2, #256	; 0x100
     a44:	mov	r3, #0
     a48:	orrs	r3, r2, r3
     a4c:	bne	a60 <m_alias+0x58>
     a50:	ldr	r3, [r4, #432]	; 0x1b0
     a54:	ldr	r3, [r3, #116]	; 0x74
     a58:	cmp	r3, #20
     a5c:	bhi	b40 <m_alias+0x138>
     a60:	ldr	r8, [r6, #4]
     a64:	mov	r1, #64	; 0x40
     a68:	mov	r0, r8
     a6c:	bl	828 <strchr@plt>
     a70:	subs	r9, r0, #0
     a74:	beq	b4c <m_alias+0x144>
     a78:	add	r1, r9, #1
     a7c:	mov	r0, #0
     a80:	bl	834 <find_server@plt>
     a84:	subs	r8, r0, #0
     a88:	beq	b68 <m_alias+0x160>
     a8c:	ldrh	r3, [r8, #80]	; 0x50
     a90:	cmp	r3, #4
     a94:	beq	b68 <m_alias+0x160>
     a98:	mov	r1, #1
     a9c:	mov	r0, r7
     aa0:	bl	7ec <msgbuf_reconstruct_tail@plt>
     aa4:	ldr	r3, [sp, #40]	; 0x28
     aa8:	ldr	r1, [r3, #4]
     aac:	cmp	r1, #0
     ab0:	beq	b84 <m_alias+0x17c>
     ab4:	ldrb	r3, [r1]
     ab8:	cmp	r3, #0
     abc:	beq	b84 <m_alias+0x17c>
     ac0:	ldr	r3, [r8, #36]	; 0x24
     ac4:	ldrh	r2, [r3, #80]	; 0x50
     ac8:	cmp	r2, #32
     acc:	beq	ba8 <m_alias+0x1a0>
     ad0:	add	r2, r4, #88	; 0x58
     ad4:	cmp	r9, #0
     ad8:	beq	bf8 <m_alias+0x1f0>
     adc:	ldr	r3, [r6, #4]
     ae0:	str	r1, [sp]
     ae4:	ldr	r1, [pc, #284]	; c08 <m_alias+0x200>
     ae8:	add	r1, pc, r1
     aec:	mov	r0, r8
     af0:	bl	7a4 <sendto_one@plt>
     af4:	add	sp, sp, #12
     af8:	pop	{r4, r5, r6, r7, r8, r9, pc}
     afc:	ldrh	r3, [r4, #80]	; 0x50
     b00:	cmp	r3, #64	; 0x40
     b04:	bne	af4 <m_alias+0xec>
     b08:	ldr	r3, [r4, #24]
     b0c:	cmp	r3, #0
     b10:	beq	af4 <m_alias+0xec>
     b14:	ldr	r3, [pc, #240]	; c0c <m_alias+0x204>
     b18:	ldr	r2, [r5, r3]
     b1c:	ldr	r3, [r7, #192]	; 0xc0
     b20:	str	r3, [sp]
     b24:	add	r3, r4, #88	; 0x58
     b28:	add	r2, r2, #88	; 0x58
     b2c:	ldr	r1, [pc, #220]	; c10 <m_alias+0x208>
     b30:	add	r1, pc, r1
     b34:	mov	r0, r4
     b38:	bl	7a4 <sendto_one@plt>
     b3c:	b	af4 <m_alias+0xec>
     b40:	mov	r0, r4
     b44:	bl	858 <flood_endgrace@plt>
     b48:	b	a60 <m_alias+0x58>
     b4c:	mov	r0, r8
     b50:	bl	84c <find_named_person@plt>
     b54:	subs	r8, r0, #0
     b58:	beq	b68 <m_alias+0x160>
     b5c:	ldr	r3, [r8, #56]	; 0x38
     b60:	tst	r3, #64	; 0x40
     b64:	bne	a98 <m_alias+0x90>
     b68:	ldr	r3, [r6, #4]
     b6c:	ldr	r2, [pc, #160]	; c14 <m_alias+0x20c>
     b70:	add	r2, pc, r2
     b74:	mov	r1, #440	; 0x1b8
     b78:	mov	r0, r4
     b7c:	bl	810 <sendto_one_numeric@plt>
     b80:	b	af4 <m_alias+0xec>
     b84:	ldr	r3, [pc, #128]	; c0c <m_alias+0x204>
     b88:	ldr	r2, [r5, r3]
     b8c:	add	r3, r8, #88	; 0x58
     b90:	add	r2, r2, #88	; 0x58
     b94:	ldr	r1, [pc, #124]	; c18 <m_alias+0x210>
     b98:	add	r1, pc, r1
     b9c:	mov	r0, r4
     ba0:	bl	7a4 <sendto_one@plt>
     ba4:	b	af4 <m_alias+0xec>
     ba8:	ldrb	r2, [r3, #396]	; 0x18c
     bac:	cmp	r2, #0
     bb0:	beq	be0 <m_alias+0x1d8>
     bb4:	ldrb	r3, [r4, #396]	; 0x18c
     bb8:	cmp	r3, #0
     bbc:	addne	r2, r4, #396	; 0x18c
     bc0:	addeq	r2, r4, #88	; 0x58
     bc4:	cmp	r9, #0
     bc8:	bne	adc <m_alias+0xd4>
     bcc:	ldrb	r3, [r8, #396]	; 0x18c
     bd0:	cmp	r3, #0
     bd4:	addne	r3, r8, #396	; 0x18c
     bd8:	addeq	r3, r8, #88	; 0x58
     bdc:	b	ae0 <m_alias+0xd8>
     be0:	add	r2, r4, #88	; 0x58
     be4:	cmp	r9, #0
     be8:	bne	adc <m_alias+0xd4>
     bec:	ldrb	r3, [r3, #396]	; 0x18c
     bf0:	cmp	r3, #0
     bf4:	bne	bcc <m_alias+0x1c4>
     bf8:	add	r3, r8, #88	; 0x58
     bfc:	b	ae0 <m_alias+0xd8>
     c00:	.word	0x000115dc
     c04:	.word	0x00000070
     c08:	.word	0x00000638
     c0c:	.word	0x00000080
     c10:	.word	0x000005b4
     c14:	.word	0x000005c4
     c18:	.word	0x0000056c

00000c1c <reload_aliases>:
     c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c20:	sub	sp, sp, #20
     c24:	ldr	r7, [pc, #508]	; e28 <reload_aliases+0x20c>
     c28:	add	r7, pc, r7
     c2c:	ldr	r3, [pc, #504]	; e2c <reload_aliases+0x210>
     c30:	add	r3, pc, r3
     c34:	ldr	r4, [r3]
     c38:	cmp	r4, #0
     c3c:	beq	cd4 <reload_aliases+0xb8>
     c40:	ldr	r5, [r4, #8]
     c44:	ldr	sl, [pc, #484]	; e30 <reload_aliases+0x214>
     c48:	add	sl, pc, sl
     c4c:	ldr	r9, [pc, #480]	; e34 <reload_aliases+0x218>
     c50:	add	r9, pc, r9
     c54:	mov	r8, #0
     c58:	ldr	r6, [pc, #472]	; e38 <reload_aliases+0x21c>
     c5c:	add	r6, pc, r6
     c60:	ldr	r0, [r4]
     c64:	bl	78c <mod_del_cmd@plt>
     c68:	ldr	r0, [r4]
     c6c:	cmp	r0, #0
     c70:	beq	c78 <reload_aliases+0x5c>
     c74:	bl	7b0 <free@plt>
     c78:	ldr	r3, [r4, #8]
     c7c:	cmp	r3, #0
     c80:	ldrne	r2, [r4, #4]
     c84:	strne	r2, [r3, #4]
     c88:	ldreq	r3, [r4, #4]
     c8c:	streq	r3, [sl, #4]
     c90:	ldr	r3, [r4, #4]
     c94:	cmp	r3, #0
     c98:	ldrne	r2, [r4, #8]
     c9c:	strne	r2, [r3, #8]
     ca0:	ldreq	r3, [r4, #8]
     ca4:	streq	r3, [r9]
     ca8:	str	r8, [r4, #4]
     cac:	str	r8, [r4, #8]
     cb0:	ldr	r3, [r6, #8]
     cb4:	sub	r3, r3, #1
     cb8:	str	r3, [r6, #8]
     cbc:	mov	r0, r4
     cc0:	bl	7c8 <rb_free_rb_dlink_node@plt>
     cc4:	cmp	r5, #0
     cc8:	movne	r4, r5
     ccc:	ldrne	r5, [r5, #8]
     cd0:	bne	c60 <reload_aliases+0x44>
     cd4:	ldr	r3, [pc, #352]	; e3c <reload_aliases+0x220>
     cd8:	ldr	r3, [r7, r3]
     cdc:	add	r1, sp, #8
     ce0:	ldr	r0, [r3]
     ce4:	bl	7e0 <rb_dictionary_foreach_start@plt>
     ce8:	ldr	r3, [pc, #332]	; e3c <reload_aliases+0x220>
     cec:	ldr	r8, [r7, r3]
     cf0:	ldr	sl, [pc, #328]	; e40 <reload_aliases+0x224>
     cf4:	add	sl, pc, sl
     cf8:	ldr	r9, [pc, #324]	; e44 <reload_aliases+0x228>
     cfc:	add	r9, pc, r9
     d00:	ldr	fp, [pc, #320]	; e48 <reload_aliases+0x22c>
     d04:	add	fp, pc, fp
     d08:	ldr	r3, [pc, #316]	; e4c <reload_aliases+0x230>
     d0c:	add	r3, pc, r3
     d10:	str	r3, [sp, #4]
     d14:	ldr	r6, [pc, #308]	; e50 <reload_aliases+0x234>
     d18:	add	r6, pc, r6
     d1c:	b	d68 <reload_aliases+0x14c>
     d20:	bl	7bc <rb_outofmemory@plt>
     d24:	ldr	r3, [pc, #296]	; e54 <reload_aliases+0x238>
     d28:	add	r3, pc, r3
     d2c:	mov	r2, #144	; 0x90
     d30:	ldr	r1, [pc, #288]	; e58 <reload_aliases+0x23c>
     d34:	add	r1, pc, r1
     d38:	ldr	r0, [pc, #284]	; e5c <reload_aliases+0x240>
     d3c:	add	r0, pc, r0
     d40:	bl	888 <__assert_fail@plt>
     d44:	str	r0, [r6]
     d48:	ldr	r3, [r6, #8]
     d4c:	add	r3, r3, #1
     d50:	str	r3, [r6, #8]
     d54:	ldr	r3, [pc, #224]	; e3c <reload_aliases+0x220>
     d58:	ldr	r3, [r7, r3]
     d5c:	add	r1, sp, #8
     d60:	ldr	r0, [r3]
     d64:	bl	864 <rb_dictionary_foreach_next@plt>
     d68:	add	r1, sp, #8
     d6c:	ldr	r0, [r8]
     d70:	bl	840 <rb_dictionary_foreach_cur@plt>
     d74:	cmp	r0, #0
     d78:	beq	e1c <reload_aliases+0x200>
     d7c:	ldr	r5, [r0]
     d80:	mov	r0, r5
     d84:	bl	81c <strlen@plt>
     d88:	add	r1, r0, #69	; 0x45
     d8c:	mov	r0, #1
     d90:	bl	780 <calloc@plt>
     d94:	subs	r4, r0, #0
     d98:	beq	d20 <reload_aliases+0x104>
     d9c:	add	r3, r4, #68	; 0x44
     da0:	mov	r1, r5
     da4:	mov	r5, r3
     da8:	mov	r0, r3
     dac:	bl	7d4 <strcpy@plt>
     db0:	mov	ip, r4
     db4:	str	r5, [ip], #20
     db8:	mov	lr, sl
     dbc:	ldm	lr!, {r0, r1, r2, r3}
     dc0:	stmia	ip!, {r0, r1, r2, r3}
     dc4:	ldm	lr!, {r0, r1, r2, r3}
     dc8:	stmia	ip!, {r0, r1, r2, r3}
     dcc:	ldm	lr, {r0, r1, r2, r3}
     dd0:	stm	ip, {r0, r1, r2, r3}
     dd4:	mov	r0, r4
     dd8:	bl	870 <mod_add_cmd@plt>
     ddc:	bl	804 <rb_make_rb_dlink_node@plt>
     de0:	cmp	r0, #0
     de4:	beq	d24 <reload_aliases+0x108>
     de8:	str	r4, [r0]
     dec:	mov	r3, #0
     df0:	str	r3, [r0, #4]
     df4:	ldr	r3, [r9]
     df8:	str	r3, [r0, #8]
     dfc:	cmp	r3, #0
     e00:	strne	r0, [r3, #4]
     e04:	bne	d44 <reload_aliases+0x128>
     e08:	ldr	r3, [fp, #4]
     e0c:	cmp	r3, #0
     e10:	ldreq	r3, [sp, #4]
     e14:	streq	r0, [r3, #4]
     e18:	b	d44 <reload_aliases+0x128>
     e1c:	mov	r0, #0
     e20:	add	sp, sp, #20
     e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     e28:	.word	0x000113d0
     e2c:	.word	0x00011494
     e30:	.word	0x0001147c
     e34:	.word	0x00011474
     e38:	.word	0x00011468
     e3c:	.word	0x00000070
     e40:	.word	0x000111d4
     e44:	.word	0x000113c8
     e48:	.word	0x000113c0
     e4c:	.word	0x000113b8
     e50:	.word	0x000113ac
     e54:	.word	0x00000384
     e58:	.word	0x00000428
     e5c:	.word	0x0000043c

00000e60 <_moddeinit>:
     e60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     e64:	ldr	r3, [pc, #164]	; f10 <_moddeinit+0xb0>
     e68:	add	r3, pc, r3
     e6c:	ldr	r4, [r3]
     e70:	cmp	r4, #0
     e74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
     e78:	ldr	r5, [r4, #8]
     e7c:	ldr	r9, [pc, #144]	; f14 <_moddeinit+0xb4>
     e80:	add	r9, pc, r9
     e84:	ldr	r8, [pc, #140]	; f18 <_moddeinit+0xb8>
     e88:	add	r8, pc, r8
     e8c:	mov	r7, #0
     e90:	ldr	r6, [pc, #132]	; f1c <_moddeinit+0xbc>
     e94:	add	r6, pc, r6
     e98:	ldr	r0, [r4]
     e9c:	bl	78c <mod_del_cmd@plt>
     ea0:	ldr	r0, [r4]
     ea4:	cmp	r0, #0
     ea8:	beq	eb0 <_moddeinit+0x50>
     eac:	bl	7b0 <free@plt>
     eb0:	ldr	r3, [r4, #8]
     eb4:	cmp	r3, #0
     eb8:	ldrne	r2, [r4, #4]
     ebc:	strne	r2, [r3, #4]
     ec0:	ldreq	r3, [r4, #4]
     ec4:	streq	r3, [r9, #4]
     ec8:	ldr	r3, [r4, #4]
     ecc:	cmp	r3, #0
     ed0:	ldrne	r2, [r4, #8]
     ed4:	strne	r2, [r3, #8]
     ed8:	ldreq	r3, [r4, #8]
     edc:	streq	r3, [r8]
     ee0:	str	r7, [r4, #4]
     ee4:	str	r7, [r4, #8]
     ee8:	ldr	r3, [r6, #8]
     eec:	sub	r3, r3, #1
     ef0:	str	r3, [r6, #8]
     ef4:	mov	r0, r4
     ef8:	bl	7c8 <rb_free_rb_dlink_node@plt>
     efc:	cmp	r5, #0
     f00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
     f04:	mov	r4, r5
     f08:	ldr	r5, [r5, #8]
     f0c:	b	e98 <_moddeinit+0x38>
     f10:	.word	0x0001125c
     f14:	.word	0x00011244
     f18:	.word	0x0001123c
     f1c:	.word	0x00011230

00000f20 <_modinit>:
     f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f24:	sub	sp, sp, #20
     f28:	ldr	r7, [pc, #340]	; 1084 <_modinit+0x164>
     f2c:	add	r7, pc, r7
     f30:	ldr	r3, [pc, #336]	; 1088 <_modinit+0x168>
     f34:	ldr	r3, [r7, r3]
     f38:	add	r1, sp, #8
     f3c:	ldr	r0, [r3]
     f40:	bl	7e0 <rb_dictionary_foreach_start@plt>
     f44:	ldr	r3, [pc, #316]	; 1088 <_modinit+0x168>
     f48:	ldr	r8, [r7, r3]
     f4c:	ldr	r9, [pc, #312]	; 108c <_modinit+0x16c>
     f50:	add	r9, pc, r9
     f54:	ldr	sl, [pc, #308]	; 1090 <_modinit+0x170>
     f58:	add	sl, pc, sl
     f5c:	ldr	fp, [pc, #304]	; 1094 <_modinit+0x174>
     f60:	add	fp, pc, fp
     f64:	ldr	r3, [pc, #300]	; 1098 <_modinit+0x178>
     f68:	add	r3, pc, r3
     f6c:	str	r3, [sp, #4]
     f70:	ldr	r6, [pc, #292]	; 109c <_modinit+0x17c>
     f74:	add	r6, pc, r6
     f78:	b	fc4 <_modinit+0xa4>
     f7c:	bl	7bc <rb_outofmemory@plt>
     f80:	ldr	r3, [pc, #280]	; 10a0 <_modinit+0x180>
     f84:	add	r3, pc, r3
     f88:	mov	r2, #144	; 0x90
     f8c:	ldr	r1, [pc, #272]	; 10a4 <_modinit+0x184>
     f90:	add	r1, pc, r1
     f94:	ldr	r0, [pc, #268]	; 10a8 <_modinit+0x188>
     f98:	add	r0, pc, r0
     f9c:	bl	888 <__assert_fail@plt>
     fa0:	str	r0, [r6]
     fa4:	ldr	r3, [r6, #8]
     fa8:	add	r3, r3, #1
     fac:	str	r3, [r6, #8]
     fb0:	ldr	r3, [pc, #208]	; 1088 <_modinit+0x168>
     fb4:	ldr	r3, [r7, r3]
     fb8:	add	r1, sp, #8
     fbc:	ldr	r0, [r3]
     fc0:	bl	864 <rb_dictionary_foreach_next@plt>
     fc4:	add	r1, sp, #8
     fc8:	ldr	r0, [r8]
     fcc:	bl	840 <rb_dictionary_foreach_cur@plt>
     fd0:	cmp	r0, #0
     fd4:	beq	1078 <_modinit+0x158>
     fd8:	ldr	r5, [r0]
     fdc:	mov	r0, r5
     fe0:	bl	81c <strlen@plt>
     fe4:	add	r1, r0, #69	; 0x45
     fe8:	mov	r0, #1
     fec:	bl	780 <calloc@plt>
     ff0:	subs	r4, r0, #0
     ff4:	beq	f7c <_modinit+0x5c>
     ff8:	add	r3, r4, #68	; 0x44
     ffc:	mov	r1, r5
    1000:	mov	r5, r3
    1004:	mov	r0, r3
    1008:	bl	7d4 <strcpy@plt>
    100c:	mov	ip, r4
    1010:	str	r5, [ip], #20
    1014:	mov	lr, r9
    1018:	ldm	lr!, {r0, r1, r2, r3}
    101c:	stmia	ip!, {r0, r1, r2, r3}
    1020:	ldm	lr!, {r0, r1, r2, r3}
    1024:	stmia	ip!, {r0, r1, r2, r3}
    1028:	ldm	lr, {r0, r1, r2, r3}
    102c:	stm	ip, {r0, r1, r2, r3}
    1030:	mov	r0, r4
    1034:	bl	870 <mod_add_cmd@plt>
    1038:	bl	804 <rb_make_rb_dlink_node@plt>
    103c:	cmp	r0, #0
    1040:	beq	f80 <_modinit+0x60>
    1044:	str	r4, [r0]
    1048:	mov	r3, #0
    104c:	str	r3, [r0, #4]
    1050:	ldr	r3, [sl]
    1054:	str	r3, [r0, #8]
    1058:	cmp	r3, #0
    105c:	strne	r0, [r3, #4]
    1060:	bne	fa0 <_modinit+0x80>
    1064:	ldr	r3, [fp, #4]
    1068:	cmp	r3, #0
    106c:	ldreq	r3, [sp, #4]
    1070:	streq	r0, [r3, #4]
    1074:	b	fa0 <_modinit+0x80>
    1078:	mov	r0, #0
    107c:	add	sp, sp, #20
    1080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1084:	.word	0x000110cc
    1088:	.word	0x00000070
    108c:	.word	0x00010f78
    1090:	.word	0x0001116c
    1094:	.word	0x00011164
    1098:	.word	0x0001115c
    109c:	.word	0x00011150
    10a0:	.word	0x00000128
    10a4:	.word	0x000001cc
    10a8:	.word	0x000001e0

Disassembly of section .fini:

000010ac <_fini>:
    10ac:	push	{r3, lr}
    10b0:	pop	{r3, pc}
