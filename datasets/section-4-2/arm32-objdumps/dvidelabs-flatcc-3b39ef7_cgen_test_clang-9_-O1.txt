
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

000147b4 <.init>:
   147b4:	push	{r3, lr}
   147b8:	bl	149cc <_start@@Base+0x3c>
   147bc:	pop	{r3, pc}

Disassembly of section .plt:

000147c0 <calloc@plt-0x14>:
   147c0:	push	{lr}		; (str lr, [sp, #-4]!)
   147c4:	ldr	lr, [pc, #4]	; 147d0 <calloc@plt-0x4>
   147c8:	add	lr, pc, lr
   147cc:	ldr	pc, [lr, #8]!
   147d0:	andeq	ip, r4, r0, lsr r8

000147d4 <calloc@plt>:
   147d4:	add	ip, pc, #0, 12
   147d8:	add	ip, ip, #76, 20	; 0x4c000
   147dc:	ldr	pc, [ip, #2096]!	; 0x830

000147e0 <raise@plt>:
   147e0:	add	ip, pc, #0, 12
   147e4:	add	ip, ip, #76, 20	; 0x4c000
   147e8:	ldr	pc, [ip, #2088]!	; 0x828

000147ec <strcmp@plt>:
   147ec:	add	ip, pc, #0, 12
   147f0:	add	ip, ip, #76, 20	; 0x4c000
   147f4:	ldr	pc, [ip, #2080]!	; 0x820

000147f8 <fopen@plt>:
   147f8:	add	ip, pc, #0, 12
   147fc:	add	ip, ip, #76, 20	; 0x4c000
   14800:	ldr	pc, [ip, #2072]!	; 0x818

00014804 <free@plt>:
   14804:	add	ip, pc, #0, 12
   14808:	add	ip, ip, #76, 20	; 0x4c000
   1480c:	ldr	pc, [ip, #2064]!	; 0x810

00014810 <memcpy@plt>:
   14810:	add	ip, pc, #0, 12
   14814:	add	ip, ip, #76, 20	; 0x4c000
   14818:	ldr	pc, [ip, #2056]!	; 0x808

0001481c <ftell@plt>:
   1481c:	add	ip, pc, #0, 12
   14820:	add	ip, ip, #76, 20	; 0x4c000
   14824:	ldr	pc, [ip, #2048]!	; 0x800

00014828 <memcmp@plt>:
   14828:	add	ip, pc, #0, 12
   1482c:	add	ip, ip, #76, 20	; 0x4c000
   14830:	ldr	pc, [ip, #2040]!	; 0x7f8

00014834 <fputc_unlocked@plt>:
   14834:	add	ip, pc, #0, 12
   14838:	add	ip, ip, #76, 20	; 0x4c000
   1483c:	ldr	pc, [ip, #2032]!	; 0x7f0

00014840 <rewind@plt>:
   14840:	add	ip, pc, #0, 12
   14844:	add	ip, ip, #76, 20	; 0x4c000
   14848:	ldr	pc, [ip, #2024]!	; 0x7e8

0001484c <realloc@plt>:
   1484c:	add	ip, pc, #0, 12
   14850:	add	ip, ip, #76, 20	; 0x4c000
   14854:	ldr	pc, [ip, #2016]!	; 0x7e0

00014858 <fwrite@plt>:
   14858:	add	ip, pc, #0, 12
   1485c:	add	ip, ip, #76, 20	; 0x4c000
   14860:	ldr	pc, [ip, #2008]!	; 0x7d8

00014864 <puts@plt>:
   14864:	add	ip, pc, #0, 12
   14868:	add	ip, ip, #76, 20	; 0x4c000
   1486c:	ldr	pc, [ip, #2000]!	; 0x7d0

00014870 <malloc@plt>:
   14870:	add	ip, pc, #0, 12
   14874:	add	ip, ip, #76, 20	; 0x4c000
   14878:	ldr	pc, [ip, #1992]!	; 0x7c8

0001487c <__libc_start_main@plt>:
   1487c:	add	ip, pc, #0, 12
   14880:	add	ip, ip, #76, 20	; 0x4c000
   14884:	ldr	pc, [ip, #1984]!	; 0x7c0

00014888 <__ctype_toupper_loc@plt>:
   14888:	add	ip, pc, #0, 12
   1488c:	add	ip, ip, #76, 20	; 0x4c000
   14890:	ldr	pc, [ip, #1976]!	; 0x7b8

00014894 <__gmon_start__@plt>:
   14894:	add	ip, pc, #0, 12
   14898:	add	ip, ip, #76, 20	; 0x4c000
   1489c:	ldr	pc, [ip, #1968]!	; 0x7b0

000148a0 <exit@plt>:
   148a0:	add	ip, pc, #0, 12
   148a4:	add	ip, ip, #76, 20	; 0x4c000
   148a8:	ldr	pc, [ip, #1960]!	; 0x7a8

000148ac <bcmp@plt>:
   148ac:	add	ip, pc, #0, 12
   148b0:	add	ip, ip, #76, 20	; 0x4c000
   148b4:	ldr	pc, [ip, #1952]!	; 0x7a0

000148b8 <strlen@plt>:
   148b8:	add	ip, pc, #0, 12
   148bc:	add	ip, ip, #76, 20	; 0x4c000
   148c0:	ldr	pc, [ip, #1944]!	; 0x798

000148c4 <fprintf@plt>:
   148c4:	add	ip, pc, #0, 12
   148c8:	add	ip, ip, #76, 20	; 0x4c000
   148cc:	ldr	pc, [ip, #1936]!	; 0x790

000148d0 <posix_memalign@plt>:
   148d0:	add	ip, pc, #0, 12
   148d4:	add	ip, ip, #76, 20	; 0x4c000
   148d8:	ldr	pc, [ip, #1928]!	; 0x788

000148dc <memset@plt>:
   148dc:	add	ip, pc, #0, 12
   148e0:	add	ip, ip, #76, 20	; 0x4c000
   148e4:	ldr	pc, [ip, #1920]!	; 0x780

000148e8 <strncpy@plt>:
   148e8:	add	ip, pc, #0, 12
   148ec:	add	ip, ip, #76, 20	; 0x4c000
   148f0:	ldr	pc, [ip, #1912]!	; 0x778

000148f4 <strtod@plt>:
   148f4:	add	ip, pc, #0, 12
   148f8:	add	ip, ip, #76, 20	; 0x4c000
   148fc:	ldr	pc, [ip, #1904]!	; 0x770

00014900 <memchr@plt>:
   14900:	add	ip, pc, #0, 12
   14904:	add	ip, ip, #76, 20	; 0x4c000
   14908:	ldr	pc, [ip, #1896]!	; 0x768

0001490c <fclose@plt>:
   1490c:	add	ip, pc, #0, 12
   14910:	add	ip, ip, #76, 20	; 0x4c000
   14914:	ldr	pc, [ip, #1888]!	; 0x760

00014918 <vfprintf@plt>:
   14918:	add	ip, pc, #0, 12
   1491c:	add	ip, ip, #76, 20	; 0x4c000
   14920:	ldr	pc, [ip, #1880]!	; 0x758

00014924 <fputc@plt>:
   14924:	add	ip, pc, #0, 12
   14928:	add	ip, ip, #76, 20	; 0x4c000
   1492c:	ldr	pc, [ip, #1872]!	; 0x750

00014930 <sprintf@plt>:
   14930:	add	ip, pc, #0, 12
   14934:	add	ip, ip, #76, 20	; 0x4c000
   14938:	ldr	pc, [ip, #1864]!	; 0x748

0001493c <vsnprintf@plt>:
   1493c:	add	ip, pc, #0, 12
   14940:	add	ip, ip, #76, 20	; 0x4c000
   14944:	ldr	pc, [ip, #1856]!	; 0x740

00014948 <qsort@plt>:
   14948:	add	ip, pc, #0, 12
   1494c:	add	ip, ip, #76, 20	; 0x4c000
   14950:	ldr	pc, [ip, #1848]!	; 0x738

00014954 <fread_unlocked@plt>:
   14954:	add	ip, pc, #0, 12
   14958:	add	ip, ip, #76, 20	; 0x4c000
   1495c:	ldr	pc, [ip, #1840]!	; 0x730

00014960 <fseek@plt>:
   14960:	add	ip, pc, #0, 12
   14964:	add	ip, ip, #76, 20	; 0x4c000
   14968:	ldr	pc, [ip, #1832]!	; 0x728

0001496c <strncmp@plt>:
   1496c:	add	ip, pc, #0, 12
   14970:	add	ip, ip, #76, 20	; 0x4c000
   14974:	ldr	pc, [ip, #1824]!	; 0x720

00014978 <abort@plt>:
   14978:	add	ip, pc, #0, 12
   1497c:	add	ip, ip, #76, 20	; 0x4c000
   14980:	ldr	pc, [ip, #1816]!	; 0x718

00014984 <__assert_fail@plt>:
   14984:	add	ip, pc, #0, 12
   14988:	add	ip, ip, #76, 20	; 0x4c000
   1498c:	ldr	pc, [ip, #1808]!	; 0x710

Disassembly of section .text:

00014990 <_start@@Base>:
   14990:	mov	fp, #0
   14994:	mov	lr, #0
   14998:	pop	{r1}		; (ldr r1, [sp], #4)
   1499c:	mov	r2, sp
   149a0:	push	{r2}		; (str r2, [sp, #-4]!)
   149a4:	push	{r0}		; (str r0, [sp, #-4]!)
   149a8:	ldr	ip, [pc, #16]	; 149c0 <_start@@Base+0x30>
   149ac:	push	{ip}		; (str ip, [sp, #-4]!)
   149b0:	ldr	r0, [pc, #12]	; 149c4 <_start@@Base+0x34>
   149b4:	ldr	r3, [pc, #12]	; 149c8 <_start@@Base+0x38>
   149b8:	bl	1487c <__libc_start_main@plt>
   149bc:	bl	14978 <abort@plt>
   149c0:	andeq	r3, r3, r0, ror #31
   149c4:	andeq	r4, r1, r0, lsl #21
   149c8:	andeq	r3, r3, r0, lsl #31
   149cc:	ldr	r3, [pc, #20]	; 149e8 <_start@@Base+0x58>
   149d0:	ldr	r2, [pc, #20]	; 149ec <_start@@Base+0x5c>
   149d4:	add	r3, pc, r3
   149d8:	ldr	r2, [r3, r2]
   149dc:	cmp	r2, #0
   149e0:	bxeq	lr
   149e4:	b	14894 <__gmon_start__@plt>
   149e8:	andeq	ip, r4, r4, lsr #12
   149ec:	andeq	r0, r0, r0, lsr #1
   149f0:	ldr	r0, [pc, #24]	; 14a10 <_start@@Base+0x80>
   149f4:	ldr	r3, [pc, #24]	; 14a14 <_start@@Base+0x84>
   149f8:	cmp	r3, r0
   149fc:	bxeq	lr
   14a00:	ldr	r3, [pc, #16]	; 14a18 <_start@@Base+0x88>
   14a04:	cmp	r3, #0
   14a08:	bxeq	lr
   14a0c:	bx	r3
   14a10:	andeq	r1, r6, ip, lsr #1
   14a14:	andeq	r1, r6, ip, lsr #1
   14a18:	andeq	r0, r0, r0
   14a1c:	ldr	r0, [pc, #36]	; 14a48 <_start@@Base+0xb8>
   14a20:	ldr	r1, [pc, #36]	; 14a4c <_start@@Base+0xbc>
   14a24:	sub	r1, r1, r0
   14a28:	asr	r1, r1, #2
   14a2c:	add	r1, r1, r1, lsr #31
   14a30:	asrs	r1, r1, #1
   14a34:	bxeq	lr
   14a38:	ldr	r3, [pc, #16]	; 14a50 <_start@@Base+0xc0>
   14a3c:	cmp	r3, #0
   14a40:	bxeq	lr
   14a44:	bx	r3
   14a48:	andeq	r1, r6, ip, lsr #1
   14a4c:	andeq	r1, r6, ip, lsr #1
   14a50:	andeq	r0, r0, r0
   14a54:	push	{r4, lr}
   14a58:	ldr	r4, [pc, #24]	; 14a78 <_start@@Base+0xe8>
   14a5c:	ldrb	r3, [r4]
   14a60:	cmp	r3, #0
   14a64:	popne	{r4, pc}
   14a68:	bl	149f0 <_start@@Base+0x60>
   14a6c:	mov	r3, #1
   14a70:	strb	r3, [r4]
   14a74:	pop	{r4, pc}
   14a78:	strheq	r1, [r6], -r8
   14a7c:	b	14a1c <_start@@Base+0x8c>

00014a80 <main@@Base>:
   14a80:	push	{r4, r5, r6, sl, fp, lr}
   14a84:	add	fp, sp, #16
   14a88:	sub	sp, sp, #888	; 0x378
   14a8c:	sub	sp, sp, #3072	; 0xc00
   14a90:	add	r0, sp, #224	; 0xe0
   14a94:	movw	r1, #16616	; 0x40e8
   14a98:	movt	r1, #3
   14a9c:	movw	r2, #3735	; 0xe97
   14aa0:	bl	14810 <memcpy@plt>
   14aa4:	mov	r4, sp
   14aa8:	mov	r0, r4
   14aac:	bl	14bd0 <flatcc_init_options@@Base>
   14ab0:	mov	r0, #1
   14ab4:	str	r0, [sp, #152]	; 0x98
   14ab8:	str	r0, [sp, #144]	; 0x90
   14abc:	str	r0, [sp, #156]	; 0x9c
   14ac0:	str	r0, [sp, #148]	; 0x94
   14ac4:	str	r0, [sp, #108]	; 0x6c
   14ac8:	movw	r1, #16372	; 0x3ff4
   14acc:	movt	r1, #3
   14ad0:	mov	r0, r4
   14ad4:	mov	r2, #0
   14ad8:	mov	r3, #0
   14adc:	bl	14cb4 <flatcc_create_context@@Base>
   14ae0:	cmp	r0, #0
   14ae4:	bne	14b10 <main@@Base+0x90>
   14ae8:	movw	r0, #4272	; 0x10b0
   14aec:	movt	r0, #6
   14af0:	ldr	r3, [r0]
   14af4:	movw	r0, #16385	; 0x4001
   14af8:	movt	r0, #3
   14afc:	mov	r1, #41	; 0x29
   14b00:	mov	r2, #1
   14b04:	bl	14858 <fwrite@plt>
   14b08:	mvn	r5, #0
   14b0c:	b	14bb0 <main@@Base+0x130>
   14b10:	mov	r4, r0
   14b14:	add	r1, sp, #224	; 0xe0
   14b18:	movw	r2, #3735	; 0xe97
   14b1c:	bl	14d2c <flatcc_parse_buffer@@Base>
   14b20:	mov	r5, r0
   14b24:	movw	r6, #4272	; 0x10b0
   14b28:	movt	r6, #6
   14b2c:	ldr	r3, [r6]
   14b30:	cmp	r0, #0
   14b34:	bne	14b94 <main@@Base+0x114>
   14b38:	movw	r0, #16448	; 0x4040
   14b3c:	movt	r0, #3
   14b40:	mov	r1, #17
   14b44:	mov	r2, #1
   14b48:	bl	14858 <fwrite@plt>
   14b4c:	ldr	r3, [r6]
   14b50:	movw	r0, #16466	; 0x4052
   14b54:	movt	r0, #3
   14b58:	mov	r1, #31
   14b5c:	mov	r2, #1
   14b60:	bl	14858 <fwrite@plt>
   14b64:	mov	r0, r4
   14b68:	bl	15440 <flatcc_generate_files@@Base>
   14b6c:	cmp	r0, #0
   14b70:	bne	14bbc <main@@Base+0x13c>
   14b74:	movw	r0, #4276	; 0x10b4
   14b78:	movt	r0, #6
   14b7c:	ldr	r0, [r0]
   14b80:	movw	r1, #16531	; 0x4093
   14b84:	movt	r1, #3
   14b88:	add	r2, sp, #224	; 0xe0
   14b8c:	bl	148c4 <fprintf@plt>
   14b90:	b	14ba8 <main@@Base+0x128>
   14b94:	movw	r0, #16427	; 0x402b
   14b98:	movt	r0, #3
   14b9c:	mov	r1, #20
   14ba0:	mov	r2, #1
   14ba4:	bl	14858 <fwrite@plt>
   14ba8:	mov	r0, r4
   14bac:	bl	15578 <flatcc_destroy_context@@Base>
   14bb0:	mov	r0, r5
   14bb4:	sub	sp, fp, #16
   14bb8:	pop	{r4, r5, r6, sl, fp, pc}
   14bbc:	ldr	r3, [r6]
   14bc0:	movw	r0, #16498	; 0x4072
   14bc4:	movt	r0, #3
   14bc8:	mov	r1, #32
   14bcc:	b	14ba0 <main@@Base+0x120>

00014bd0 <flatcc_init_options@@Base>:
   14bd0:	push	{r4, r5, fp, lr}
   14bd4:	add	fp, sp, #8
   14bd8:	mov	r4, r0
   14bdc:	mov	r5, #0
   14be0:	mov	r1, #0
   14be4:	mov	r2, #224	; 0xe0
   14be8:	bl	148dc <memset@plt>
   14bec:	movw	ip, #65534	; 0xfffe
   14bf0:	str	r5, [r4, #164]	; 0xa4
   14bf4:	mov	r0, #1
   14bf8:	str	r5, [r4, #132]	; 0x84
   14bfc:	str	r0, [r4, #136]	; 0x88
   14c00:	str	r0, [r4, #140]	; 0x8c
   14c04:	movw	r2, #20358	; 0x4f86
   14c08:	movt	r2, #3
   14c0c:	movw	r3, #20352	; 0x4f80
   14c10:	movt	r3, #3
   14c14:	movw	r1, #16380	; 0x3ffc
   14c18:	movt	r1, #3
   14c1c:	str	r5, [r4, #80]	; 0x50
   14c20:	str	r0, [r4, #84]	; 0x54
   14c24:	str	ip, [r4, #88]	; 0x58
   14c28:	str	r5, [r4, #92]	; 0x5c
   14c2c:	str	r1, [r4, #96]	; 0x60
   14c30:	str	r3, [r4, #100]	; 0x64
   14c34:	str	r2, [r4, #104]	; 0x68
   14c38:	mov	r1, #2
   14c3c:	mov	r2, #4
   14c40:	str	r0, [r4, #48]	; 0x30
   14c44:	str	r0, [r4, #52]	; 0x34
   14c48:	str	r5, [r4, #56]	; 0x38
   14c4c:	str	r5, [r4, #60]	; 0x3c
   14c50:	str	r2, [r4, #64]	; 0x40
   14c54:	str	r1, [r4, #68]	; 0x44
   14c58:	str	r0, [r4, #72]	; 0x48
   14c5c:	str	r0, [r4, #76]	; 0x4c
   14c60:	str	r0, [r4, #16]
   14c64:	str	r0, [r4, #20]
   14c68:	str	r0, [r4, #24]
   14c6c:	str	r0, [r4, #28]
   14c70:	str	r0, [r4, #32]
   14c74:	str	r0, [r4, #36]	; 0x24
   14c78:	str	r0, [r4, #40]	; 0x28
   14c7c:	str	r0, [r4, #44]	; 0x2c
   14c80:	mov	r1, #100	; 0x64
   14c84:	mov	r3, #65536	; 0x10000
   14c88:	str	r3, [r4]
   14c8c:	str	r1, [r4, #4]
   14c90:	str	r1, [r4, #8]
   14c94:	vmov.i32	q8, #0	; 0x00000000
   14c98:	str	r2, [r4, #176]	; 0xb0
   14c9c:	str	r5, [r4, #180]	; 0xb4
   14ca0:	str	r0, [r4, #184]	; 0xb8
   14ca4:	str	r5, [r4, #188]	; 0xbc
   14ca8:	add	r0, r4, #144	; 0x90
   14cac:	vst1.64	{d16-d17}, [r0]
   14cb0:	pop	{r4, r5, fp, pc}

00014cb4 <flatcc_create_context@@Base>:
   14cb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14cb8:	add	fp, sp, #24
   14cbc:	sub	sp, sp, #8
   14cc0:	mov	r7, r3
   14cc4:	mov	r8, r2
   14cc8:	mov	r9, r1
   14ccc:	mov	r6, r0
   14cd0:	mov	r0, #560	; 0x230
   14cd4:	bl	14870 <malloc@plt>
   14cd8:	cmp	r0, #0
   14cdc:	beq	14d14 <flatcc_create_context@@Base+0x60>
   14ce0:	mov	r5, r0
   14ce4:	mov	r4, #0
   14ce8:	str	r7, [sp]
   14cec:	str	r4, [sp, #4]
   14cf0:	mov	r1, r6
   14cf4:	mov	r2, r9
   14cf8:	mov	r3, r8
   14cfc:	bl	2776c <__flatcc_fb_init_parser@@Base>
   14d00:	cmp	r0, #0
   14d04:	beq	14d1c <flatcc_create_context@@Base+0x68>
   14d08:	mov	r0, r5
   14d0c:	bl	14804 <free@plt>
   14d10:	b	14d20 <flatcc_create_context@@Base+0x6c>
   14d14:	mov	r4, #0
   14d18:	b	14d20 <flatcc_create_context@@Base+0x6c>
   14d1c:	mov	r4, r5
   14d20:	mov	r0, r4
   14d24:	sub	sp, fp, #24
   14d28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d2c <flatcc_parse_buffer@@Base>:
   14d2c:	push	{r4, r5, r6, sl, fp, lr}
   14d30:	add	fp, sp, #16
   14d34:	mov	r5, r2
   14d38:	mov	r6, r1
   14d3c:	mov	r4, r0
   14d40:	mov	r0, #1
   14d44:	str	r0, [r4, #140]	; 0x8c
   14d48:	ldr	r0, [r4, #128]	; 0x80
   14d4c:	cmp	r0, r2
   14d50:	bcs	14d74 <flatcc_parse_buffer@@Base+0x48>
   14d54:	cmp	r0, #0
   14d58:	beq	14d74 <flatcc_parse_buffer@@Base+0x48>
   14d5c:	movw	r1, #20363	; 0x4f8b
   14d60:	movt	r1, #3
   14d64:	mov	r0, r4
   14d68:	bl	27428 <__flatcc_fb_print_error@@Base>
   14d6c:	mvn	r0, #0
   14d70:	pop	{r4, r5, r6, sl, fp, pc}
   14d74:	add	r0, r4, #524	; 0x20c
   14d78:	add	r1, r4, #352	; 0x160
   14d7c:	mov	r2, #1
   14d80:	bl	25828 <ptr_set_insert_item@@Base>
   14d84:	mov	r0, r4
   14d88:	mov	r1, r6
   14d8c:	mov	r2, r5
   14d90:	mov	r3, #0
   14d94:	bl	27a2c <__flatcc_fb_parse@@Base>
   14d98:	mov	r1, r0
   14d9c:	mvn	r0, #0
   14da0:	cmp	r1, #0
   14da4:	popne	{r4, r5, r6, sl, fp, pc}
   14da8:	mov	r0, r4
   14dac:	bl	2b300 <__flatcc_fb_build_schema@@Base>
   14db0:	cmp	r0, #0
   14db4:	mvnne	r0, #0
   14db8:	pop	{r4, r5, r6, sl, fp, pc}

00014dbc <flatcc_parse_file@@Base>:
   14dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dc0:	add	fp, sp, #28
   14dc4:	sub	sp, sp, #20
   14dc8:	mov	r7, r1
   14dcc:	mov	r5, r0
   14dd0:	mov	r0, r1
   14dd4:	bl	148b8 <strlen@plt>
   14dd8:	mov	r4, r0
   14ddc:	ldr	r0, [r5, #412]	; 0x19c
   14de0:	add	sl, r5, #352	; 0x160
   14de4:	add	r0, r0, #32
   14de8:	mov	r1, sl
   14dec:	mov	r2, #1
   14df0:	bl	26bac <fb_schema_table_insert_item@@Base>
   14df4:	mov	r9, #0
   14df8:	cmp	r0, #0
   14dfc:	beq	14e0c <flatcc_parse_file@@Base+0x50>
   14e00:	mov	r0, r9
   14e04:	sub	sp, fp, #28
   14e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e0c:	ldr	r0, [r5, #552]	; 0x228
   14e10:	str	r0, [sp, #12]
   14e14:	cmp	r0, #0
   14e18:	beq	14f40 <flatcc_parse_file@@Base+0x184>
   14e1c:	str	sl, [sp, #8]
   14e20:	ldr	r0, [r5, #336]	; 0x150
   14e24:	cmp	r0, #1
   14e28:	blt	14ec4 <flatcc_parse_file@@Base+0x108>
   14e2c:	mov	r9, #0
   14e30:	add	sl, sp, #16
   14e34:	b	14e48 <flatcc_parse_file@@Base+0x8c>
   14e38:	add	r9, r9, #1
   14e3c:	ldr	r0, [r5, #336]	; 0x150
   14e40:	cmp	r9, r0
   14e44:	bge	14ec4 <flatcc_parse_file@@Base+0x108>
   14e48:	ldr	r0, [r5, #328]	; 0x148
   14e4c:	ldr	r6, [r0, r9, lsl #2]
   14e50:	mov	r0, r6
   14e54:	bl	148b8 <strlen@plt>
   14e58:	mov	r1, r0
   14e5c:	movw	r0, #21632	; 0x5480
   14e60:	movt	r0, #3
   14e64:	str	r0, [sp]
   14e68:	mov	r0, #1
   14e6c:	str	r0, [sp, #4]
   14e70:	mov	r0, r6
   14e74:	mov	r2, r7
   14e78:	mov	r3, r4
   14e7c:	bl	26f38 <__flatcc_fb_create_join_path_n@@Base>
   14e80:	mov	r6, r0
   14e84:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   14e88:	ldr	r1, [r5, #128]	; 0x80
   14e8c:	mov	r0, r6
   14e90:	mov	r2, sl
   14e94:	bl	27310 <__flatcc_fb_read_file@@Base>
   14e98:	cmp	r0, #0
   14e9c:	bne	14f30 <flatcc_parse_file@@Base+0x174>
   14ea0:	mov	r0, r6
   14ea4:	bl	14804 <free@plt>
   14ea8:	ldr	r0, [r5, #128]	; 0x80
   14eac:	ldr	r1, [sp, #16]
   14eb0:	cmp	r1, r0
   14eb4:	bls	14e38 <flatcc_parse_file@@Base+0x7c>
   14eb8:	cmp	r0, #0
   14ebc:	beq	14e38 <flatcc_parse_file@@Base+0x7c>
   14ec0:	b	1506c <flatcc_parse_file@@Base+0x2b0>
   14ec4:	ldr	r0, [sp, #12]
   14ec8:	cmp	r0, #0
   14ecc:	beq	15084 <flatcc_parse_file@@Base+0x2c8>
   14ed0:	ldr	r6, [r5, #552]	; 0x228
   14ed4:	mov	r0, r6
   14ed8:	bl	148b8 <strlen@plt>
   14edc:	mov	r1, r0
   14ee0:	mov	r0, r6
   14ee4:	bl	27280 <__flatcc_fb_find_basename@@Base>
   14ee8:	mov	r1, r0
   14eec:	mov	r0, #1
   14ef0:	movw	r2, #21632	; 0x5480
   14ef4:	movt	r2, #3
   14ef8:	str	r2, [sp]
   14efc:	str	r0, [sp, #4]
   14f00:	mov	r0, r6
   14f04:	mov	r2, r7
   14f08:	mov	r3, r4
   14f0c:	bl	26f38 <__flatcc_fb_create_join_path_n@@Base>
   14f10:	mov	r6, r0
   14f14:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   14f18:	ldr	r1, [r5, #128]	; 0x80
   14f1c:	add	r2, sp, #16
   14f20:	mov	r0, r6
   14f24:	bl	27310 <__flatcc_fb_read_file@@Base>
   14f28:	cmp	r0, #0
   14f2c:	beq	1504c <flatcc_parse_file@@Base+0x290>
   14f30:	mov	r8, r0
   14f34:	mov	r9, #0
   14f38:	ldr	sl, [sp, #8]
   14f3c:	b	14f6c <flatcc_parse_file@@Base+0x1b0>
   14f40:	ldr	r1, [r5, #128]	; 0x80
   14f44:	add	r2, sp, #16
   14f48:	mov	r0, r7
   14f4c:	bl	27310 <__flatcc_fb_read_file@@Base>
   14f50:	cmp	r0, #0
   14f54:	beq	15024 <flatcc_parse_file@@Base+0x268>
   14f58:	mov	r8, r0
   14f5c:	mov	r0, r7
   14f60:	bl	26e8c <__flatcc_fb_copy_path@@Base>
   14f64:	mov	r6, r0
   14f68:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   14f6c:	ldr	r0, [r5, #412]	; 0x19c
   14f70:	ldr	r1, [r0, #56]	; 0x38
   14f74:	ldr	r2, [sp, #16]
   14f78:	add	r1, r1, r2
   14f7c:	str	r1, [r0, #56]	; 0x38
   14f80:	str	r6, [r5, #548]	; 0x224
   14f84:	mov	r0, r5
   14f88:	mov	r1, r8
   14f8c:	mov	r3, #1
   14f90:	bl	27a2c <__flatcc_fb_parse@@Base>
   14f94:	cmp	r0, #0
   14f98:	bne	14e00 <flatcc_parse_file@@Base+0x44>
   14f9c:	ldr	r6, [sl]
   14fa0:	cmp	r6, #0
   14fa4:	beq	14fe0 <flatcc_parse_file@@Base+0x224>
   14fa8:	ldrd	r0, [r6, #8]
   14fac:	bl	26e18 <__flatcc_fb_copy_path_n@@Base>
   14fb0:	mov	r4, r0
   14fb4:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   14fb8:	mov	r0, r5
   14fbc:	mov	r1, r4
   14fc0:	bl	150ec <flatcc_parse_file@@Base+0x330>
   14fc4:	cmp	r0, #0
   14fc8:	bne	150a0 <flatcc_parse_file@@Base+0x2e4>
   14fcc:	mov	r0, r4
   14fd0:	bl	14804 <free@plt>
   14fd4:	ldr	r6, [r6]
   14fd8:	cmp	r6, #0
   14fdc:	bne	14fa8 <flatcc_parse_file@@Base+0x1ec>
   14fe0:	add	r0, r5, #524	; 0x20c
   14fe4:	mov	r1, sl
   14fe8:	mov	r2, #1
   14fec:	bl	25828 <ptr_set_insert_item@@Base>
   14ff0:	mov	r0, r5
   14ff4:	bl	2b300 <__flatcc_fb_build_schema@@Base>
   14ff8:	cmp	r0, #0
   14ffc:	bne	14e00 <flatcc_parse_file@@Base+0x44>
   15000:	ldr	r0, [sp, #12]
   15004:	cmp	r0, #0
   15008:	bne	14e00 <flatcc_parse_file@@Base+0x44>
   1500c:	ldr	r0, [r5, #240]	; 0xf0
   15010:	cmp	r0, #0
   15014:	beq	14e00 <flatcc_parse_file@@Base+0x44>
   15018:	mov	r0, r5
   1501c:	bl	15200 <flatcc_parse_file@@Base+0x444>
   15020:	b	14e00 <flatcc_parse_file@@Base+0x44>
   15024:	ldr	r0, [r5, #128]	; 0x80
   15028:	ldr	r1, [r5, #412]	; 0x19c
   1502c:	ldr	r1, [r1, #56]	; 0x38
   15030:	ldr	r2, [sp, #16]
   15034:	add	r1, r1, r2
   15038:	cmp	r1, r0
   1503c:	bls	14e1c <flatcc_parse_file@@Base+0x60>
   15040:	cmp	r0, #0
   15044:	bne	1506c <flatcc_parse_file@@Base+0x2b0>
   15048:	b	14e1c <flatcc_parse_file@@Base+0x60>
   1504c:	mov	r0, r6
   15050:	bl	14804 <free@plt>
   15054:	ldr	r0, [r5, #128]	; 0x80
   15058:	ldr	r1, [sp, #16]
   1505c:	cmp	r1, r0
   15060:	bls	15084 <flatcc_parse_file@@Base+0x2c8>
   15064:	cmp	r0, #0
   15068:	beq	15084 <flatcc_parse_file@@Base+0x2c8>
   1506c:	movw	r1, #20363	; 0x4f8b
   15070:	movt	r1, #3
   15074:	mov	r0, r5
   15078:	bl	27428 <__flatcc_fb_print_error@@Base>
   1507c:	mvn	r9, #0
   15080:	b	14e00 <flatcc_parse_file@@Base+0x44>
   15084:	movw	r1, #20399	; 0x4faf
   15088:	movt	r1, #3
   1508c:	mov	r0, r5
   15090:	mov	r2, r7
   15094:	bl	27428 <__flatcc_fb_print_error@@Base>
   15098:	mvn	r9, #0
   1509c:	b	14e00 <flatcc_parse_file@@Base+0x44>
   150a0:	cmp	r4, #0
   150a4:	beq	14e00 <flatcc_parse_file@@Base+0x44>
   150a8:	mov	r0, r4
   150ac:	bl	14804 <free@plt>
   150b0:	b	14e00 <flatcc_parse_file@@Base+0x44>
   150b4:	cmp	r0, #0
   150b8:	bxne	lr
   150bc:	push	{fp, lr}
   150c0:	mov	fp, sp
   150c4:	movw	r0, #4272	; 0x10b0
   150c8:	movt	r0, #6
   150cc:	ldr	r3, [r0]
   150d0:	movw	r0, #20439	; 0x4fd7
   150d4:	movt	r0, #3
   150d8:	mov	r1, #34	; 0x22
   150dc:	mov	r2, #1
   150e0:	bl	14858 <fwrite@plt>
   150e4:	mov	r0, #1
   150e8:	bl	148a0 <exit@plt>
   150ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150f0:	add	fp, sp, #28
   150f4:	sub	sp, sp, #4
   150f8:	mov	sl, r1
   150fc:	mov	r5, r0
   15100:	ldr	r0, [r0, #132]	; 0x84
   15104:	ldr	r4, [r5, #412]	; 0x19c
   15108:	ldr	r1, [r4, #52]	; 0x34
   1510c:	cmp	r1, r0
   15110:	cmpge	r0, #1
   15114:	bge	15184 <flatcc_parse_file@@Base+0x3c8>
   15118:	ldr	r0, [r5, #136]	; 0x88
   1511c:	ldr	r1, [r4, #48]	; 0x30
   15120:	cmp	r1, r0
   15124:	cmpge	r0, #1
   15128:	bge	15190 <flatcc_parse_file@@Base+0x3d4>
   1512c:	add	r0, r5, #128	; 0x80
   15130:	mov	r1, sl
   15134:	mov	r2, r5
   15138:	bl	155b0 <flatcc_destroy_context@@Base+0x38>
   1513c:	mvn	r6, #0
   15140:	cmp	r0, #0
   15144:	beq	151a4 <flatcc_parse_file@@Base+0x3e8>
   15148:	mov	r7, r0
   1514c:	add	r8, r5, #352	; 0x160
   15150:	add	r0, r4, #32
   15154:	add	r9, r7, #352	; 0x160
   15158:	mov	r1, r9
   1515c:	bl	26c8c <fb_schema_table_find_item@@Base>
   15160:	cmp	r0, #0
   15164:	beq	151b0 <flatcc_parse_file@@Base+0x3f4>
   15168:	mov	r1, r0
   1516c:	mov	r0, r8
   15170:	bl	15628 <flatcc_destroy_context@@Base+0xb0>
   15174:	mov	r0, r7
   15178:	bl	15578 <flatcc_destroy_context@@Base>
   1517c:	mov	r6, #0
   15180:	b	151a4 <flatcc_parse_file@@Base+0x3e8>
   15184:	movw	r1, #20474	; 0x4ffa
   15188:	movt	r1, #3
   1518c:	b	15198 <flatcc_parse_file@@Base+0x3dc>
   15190:	movw	r1, #20506	; 0x501a
   15194:	movt	r1, #3
   15198:	mov	r0, r5
   1519c:	bl	27428 <__flatcc_fb_print_error@@Base>
   151a0:	mvn	r6, #0
   151a4:	mov	r0, r6
   151a8:	sub	sp, fp, #28
   151ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151b0:	ldr	r0, [r5]
   151b4:	str	r0, [r7]
   151b8:	str	r7, [r5]
   151bc:	ldr	r0, [r5, #548]	; 0x224
   151c0:	str	r0, [r7, #552]	; 0x228
   151c4:	ldr	r0, [r4, #48]	; 0x30
   151c8:	ldr	r1, [r4, #52]	; 0x34
   151cc:	add	r1, r1, #1
   151d0:	add	r0, r0, #1
   151d4:	str	r0, [r4, #48]	; 0x30
   151d8:	str	r1, [r4, #52]	; 0x34
   151dc:	mov	r0, r7
   151e0:	mov	r1, sl
   151e4:	bl	14dbc <flatcc_parse_file@@Base>
   151e8:	cmp	r0, #0
   151ec:	bne	151a4 <flatcc_parse_file@@Base+0x3e8>
   151f0:	mov	r0, r8
   151f4:	mov	r1, r9
   151f8:	bl	15628 <flatcc_destroy_context@@Base+0xb0>
   151fc:	b	1517c <flatcc_parse_file@@Base+0x3c0>
   15200:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15204:	add	fp, sp, #24
   15208:	mov	r6, r0
   1520c:	ldr	r0, [r0, #552]	; 0x228
   15210:	cmp	r0, #0
   15214:	bne	153c8 <flatcc_parse_file@@Base+0x60c>
   15218:	ldr	r1, [r6, #244]	; 0xf4
   1521c:	ldr	r7, [r6, #248]	; 0xf8
   15220:	ldr	r3, [r6, #344]	; 0x158
   15224:	ldr	ip, [r6, #512]	; 0x200
   15228:	movw	r2, #20672	; 0x50c0
   1522c:	movt	r2, #3
   15230:	movw	r5, #21632	; 0x5480
   15234:	movt	r5, #3
   15238:	cmp	r1, #0
   1523c:	movne	r2, r5
   15240:	cmp	r3, #0
   15244:	moveq	r3, r5
   15248:	cmp	r1, #0
   1524c:	mov	r0, r5
   15250:	moveq	r0, r3
   15254:	moveq	r1, ip
   15258:	cmp	r7, #0
   1525c:	mov	r4, r5
   15260:	bne	15288 <flatcc_parse_file@@Base+0x4cc>
   15264:	ldr	r7, [r6, #308]	; 0x134
   15268:	movw	r4, #49405	; 0xc0fd
   1526c:	movt	r4, #4
   15270:	movw	r5, #20352	; 0x4f80
   15274:	movt	r5, #3
   15278:	cmp	r7, #0
   1527c:	moveq	r5, r4
   15280:	mov	r7, ip
   15284:	mov	r4, r3
   15288:	mov	r3, #1
   1528c:	bl	27054 <__flatcc_fb_create_join_path@@Base>
   15290:	mov	r8, r0
   15294:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   15298:	mov	r0, r4
   1529c:	mov	r1, r7
   152a0:	mov	r2, r5
   152a4:	mov	r3, #1
   152a8:	bl	27054 <__flatcc_fb_create_join_path@@Base>
   152ac:	mov	r4, r0
   152b0:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   152b4:	mov	r0, r4
   152b8:	bl	27260 <__flatcc_fb_create_make_path@@Base>
   152bc:	mov	r9, r0
   152c0:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   152c4:	cmp	r4, #0
   152c8:	beq	152d4 <flatcc_parse_file@@Base+0x518>
   152cc:	mov	r0, r4
   152d0:	bl	14804 <free@plt>
   152d4:	movw	r1, #20679	; 0x50c7
   152d8:	movt	r1, #3
   152dc:	mov	r0, r8
   152e0:	bl	147f8 <fopen@plt>
   152e4:	mov	r7, r0
   152e8:	cmp	r0, #0
   152ec:	beq	153a4 <flatcc_parse_file@@Base+0x5e8>
   152f0:	movw	r1, #20729	; 0x50f9
   152f4:	movt	r1, #3
   152f8:	mov	r0, r7
   152fc:	mov	r2, r9
   15300:	bl	148c4 <fprintf@plt>
   15304:	ldr	r5, [r6]
   15308:	cmp	r5, #0
   1530c:	beq	1535c <flatcc_parse_file@@Base+0x5a0>
   15310:	movw	r6, #20733	; 0x50fd
   15314:	movt	r6, #3
   15318:	b	15324 <flatcc_parse_file@@Base+0x568>
   1531c:	cmp	r5, #0
   15320:	beq	1535c <flatcc_parse_file@@Base+0x5a0>
   15324:	ldr	r0, [r5, #548]	; 0x224
   15328:	bl	27260 <__flatcc_fb_create_make_path@@Base>
   1532c:	mov	r4, r0
   15330:	bl	150b4 <flatcc_parse_file@@Base+0x2f8>
   15334:	mov	r0, r7
   15338:	mov	r1, r6
   1533c:	mov	r2, r4
   15340:	bl	148c4 <fprintf@plt>
   15344:	ldr	r5, [r5]
   15348:	cmp	r4, #0
   1534c:	beq	1531c <flatcc_parse_file@@Base+0x560>
   15350:	mov	r0, r4
   15354:	bl	14804 <free@plt>
   15358:	b	1531c <flatcc_parse_file@@Base+0x560>
   1535c:	mov	r0, #10
   15360:	mov	r1, r7
   15364:	bl	14834 <fputc_unlocked@plt>
   15368:	mov	r6, #0
   1536c:	cmp	r8, #0
   15370:	beq	1537c <flatcc_parse_file@@Base+0x5c0>
   15374:	mov	r0, r8
   15378:	bl	14804 <free@plt>
   1537c:	cmp	r9, #0
   15380:	beq	1538c <flatcc_parse_file@@Base+0x5d0>
   15384:	mov	r0, r9
   15388:	bl	14804 <free@plt>
   1538c:	cmp	r7, #0
   15390:	beq	1539c <flatcc_parse_file@@Base+0x5e0>
   15394:	mov	r0, r7
   15398:	bl	1490c <fclose@plt>
   1539c:	mov	r0, r6
   153a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   153a4:	movw	r1, #20682	; 0x50ca
   153a8:	movt	r1, #3
   153ac:	mov	r0, r6
   153b0:	mov	r2, r8
   153b4:	bl	27428 <__flatcc_fb_print_error@@Base>
   153b8:	mvn	r6, #0
   153bc:	cmp	r8, #0
   153c0:	bne	15374 <flatcc_parse_file@@Base+0x5b8>
   153c4:	b	1537c <flatcc_parse_file@@Base+0x5c0>
   153c8:	movw	r0, #20536	; 0x5038
   153cc:	movt	r0, #3
   153d0:	movw	r1, #20557	; 0x504d
   153d4:	movt	r1, #3
   153d8:	movw	r3, #20627	; 0x5093
   153dc:	movt	r3, #3
   153e0:	mov	r2, #220	; 0xdc
   153e4:	bl	14984 <__assert_fail@plt>

000153e8 <flatcc_generate_binary_schema_to_buffer@@Base>:
   153e8:	push	{fp, lr}
   153ec:	mov	fp, sp
   153f0:	sub	sp, sp, #8
   153f4:	mov	ip, r1
   153f8:	str	r2, [sp, #4]
   153fc:	add	r2, r0, #128	; 0x80
   15400:	add	r1, r0, #352	; 0x160
   15404:	add	r3, sp, #4
   15408:	mov	r0, r2
   1540c:	mov	r2, ip
   15410:	bl	22e24 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   15414:	ldr	r1, [sp, #4]
   15418:	cmp	r0, #0
   1541c:	mvneq	r1, #0
   15420:	mov	r0, r1
   15424:	mov	sp, fp
   15428:	pop	{fp, pc}

0001542c <flatcc_generate_binary_schema@@Base>:
   1542c:	mov	r2, r1
   15430:	add	r3, r0, #128	; 0x80
   15434:	add	r1, r0, #352	; 0x160
   15438:	mov	r0, r3
   1543c:	b	23020 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00015440 <flatcc_generate_files@@Base>:
   15440:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15444:	add	fp, sp, #24
   15448:	sub	sp, sp, #232	; 0xe8
   1544c:	mvn	r4, #0
   15450:	cmp	r0, #0
   15454:	beq	15468 <flatcc_generate_files@@Base+0x28>
   15458:	mov	r5, r0
   1545c:	ldr	r0, [r0, #108]	; 0x6c
   15460:	cmp	r0, #0
   15464:	beq	15474 <flatcc_generate_files@@Base+0x34>
   15468:	mov	r0, r4
   1546c:	sub	sp, fp, #24
   15470:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15474:	mov	r0, #0
   15478:	mov	r1, r5
   1547c:	mov	r7, r1
   15480:	str	r0, [r1, #4]
   15484:	ldr	r1, [r1]
   15488:	cmp	r1, #0
   1548c:	mov	r0, r7
   15490:	bne	1547c <flatcc_generate_files@@Base+0x3c>
   15494:	ldr	r0, [r5, #308]	; 0x134
   15498:	add	r6, r5, #128	; 0x80
   1549c:	cmp	r0, #0
   154a0:	beq	154b8 <flatcc_generate_files@@Base+0x78>
   154a4:	add	r1, r5, #352	; 0x160
   154a8:	mov	r0, r6
   154ac:	bl	23094 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   154b0:	cmp	r0, #0
   154b4:	bne	15468 <flatcc_generate_files@@Base+0x28>
   154b8:	mov	r0, sp
   154bc:	mov	r1, r6
   154c0:	bl	157d0 <__flatcc_fb_init_output_c@@Base>
   154c4:	cmp	r0, #0
   154c8:	bne	15468 <flatcc_generate_files@@Base+0x28>
   154cc:	ldr	r0, [r5, #256]	; 0x100
   154d0:	cmp	r0, #0
   154d4:	beq	1553c <flatcc_generate_files@@Base+0xfc>
   154d8:	ldr	r0, [r5, #120]	; 0x78
   154dc:	mov	r4, #0
   154e0:	cmp	r0, #0
   154e4:	beq	1556c <flatcc_generate_files@@Base+0x12c>
   154e8:	ldr	r0, [r5, #300]	; 0x12c
   154ec:	cmp	r0, #0
   154f0:	beq	15554 <flatcc_generate_files@@Base+0x114>
   154f4:	cmp	r7, #0
   154f8:	beq	1556c <flatcc_generate_files@@Base+0x12c>
   154fc:	mov	r5, sp
   15500:	ldr	r0, [r7, #108]	; 0x6c
   15504:	cmp	r0, #0
   15508:	bne	15568 <flatcc_generate_files@@Base+0x128>
   1550c:	add	r1, r7, #352	; 0x160
   15510:	mov	r0, r5
   15514:	bl	15d2c <__flatcc_fb_codegen_c@@Base>
   15518:	cmp	r0, #0
   1551c:	mov	r4, r0
   15520:	movwne	r4, #1
   15524:	ldr	r7, [r7, #4]
   15528:	cmp	r7, #0
   1552c:	beq	1556c <flatcc_generate_files@@Base+0x12c>
   15530:	cmp	r0, #0
   15534:	beq	15500 <flatcc_generate_files@@Base+0xc0>
   15538:	b	1556c <flatcc_generate_files@@Base+0x12c>
   1553c:	mov	r0, sp
   15540:	bl	15c6c <__flatcc_fb_codegen_common_c@@Base>
   15544:	mov	r4, r0
   15548:	cmp	r0, #0
   1554c:	bne	1556c <flatcc_generate_files@@Base+0x12c>
   15550:	b	154d8 <flatcc_generate_files@@Base+0x98>
   15554:	add	r1, r5, #352	; 0x160
   15558:	mov	r0, sp
   1555c:	bl	15d2c <__flatcc_fb_codegen_c@@Base>
   15560:	mov	r4, r0
   15564:	b	1556c <flatcc_generate_files@@Base+0x12c>
   15568:	mov	r4, #1
   1556c:	mov	r0, sp
   15570:	bl	15794 <__flatcc_fb_end_output_c@@Base>
   15574:	b	15468 <flatcc_generate_files@@Base+0x28>

00015578 <flatcc_destroy_context@@Base>:
   15578:	push	{r4, r5, fp, lr}
   1557c:	add	fp, sp, #8
   15580:	cmp	r0, #0
   15584:	popeq	{r4, r5, fp, pc}
   15588:	mov	r4, r0
   1558c:	ldr	r5, [r4]
   15590:	mov	r0, r4
   15594:	bl	28b5c <__flatcc_fb_clear_parser@@Base>
   15598:	mov	r0, r4
   1559c:	bl	14804 <free@plt>
   155a0:	cmp	r5, #0
   155a4:	mov	r4, r5
   155a8:	bne	1558c <flatcc_destroy_context@@Base+0x14>
   155ac:	pop	{r4, r5, fp, pc}
   155b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155b4:	add	fp, sp, #24
   155b8:	sub	sp, sp, #8
   155bc:	mov	r6, r2
   155c0:	mov	r8, r1
   155c4:	mov	r7, r0
   155c8:	mov	r0, #560	; 0x230
   155cc:	bl	14870 <malloc@plt>
   155d0:	mov	r4, #0
   155d4:	cmp	r0, #0
   155d8:	beq	1561c <flatcc_destroy_context@@Base+0xa4>
   155dc:	mov	r5, r0
   155e0:	ldr	r3, [r6, #8]
   155e4:	ldr	r1, [r6, #12]
   155e8:	ldr	r0, [r6, #412]	; 0x19c
   155ec:	str	r1, [sp]
   155f0:	str	r0, [sp, #4]
   155f4:	mov	r0, r5
   155f8:	mov	r1, r7
   155fc:	mov	r2, r8
   15600:	bl	2776c <__flatcc_fb_init_parser@@Base>
   15604:	cmp	r0, #0
   15608:	beq	15618 <flatcc_destroy_context@@Base+0xa0>
   1560c:	mov	r0, r5
   15610:	bl	14804 <free@plt>
   15614:	b	1561c <flatcc_destroy_context@@Base+0xa4>
   15618:	mov	r4, r5
   1561c:	mov	r0, r4
   15620:	sub	sp, fp, #24
   15624:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15628:	mov	r2, r0
   1562c:	add	r0, r1, #172	; 0xac
   15630:	movw	r1, #22076	; 0x563c
   15634:	movt	r1, #1
   15638:	b	259c0 <ptr_set_visit@@Base>
   1563c:	add	r0, r0, #172	; 0xac
   15640:	mov	r2, #1
   15644:	b	25828 <ptr_set_insert_item@@Base>

00015648 <__flatcc_fb_open_output_file@@Base>:
   15648:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1564c:	add	fp, sp, #24
   15650:	sub	sp, sp, #8
   15654:	mov	r9, r1
   15658:	mov	r4, r0
   1565c:	ldr	r0, [r0, #204]	; 0xcc
   15660:	ldr	r1, [r4, #212]	; 0xd4
   15664:	ldr	r1, [r1, #216]	; 0xd8
   15668:	movw	r6, #21632	; 0x5480
   1566c:	movt	r6, #3
   15670:	cmp	r1, #0
   15674:	movne	r6, r1
   15678:	mov	r5, #0
   1567c:	cmp	r0, #0
   15680:	bne	156e4 <__flatcc_fb_open_output_file@@Base+0x9c>
   15684:	mov	r7, r3
   15688:	mov	r8, r2
   1568c:	mov	r0, r6
   15690:	bl	148b8 <strlen@plt>
   15694:	mov	r1, r0
   15698:	mov	r0, #1
   1569c:	str	r7, [sp]
   156a0:	str	r0, [sp, #4]
   156a4:	mov	r0, r6
   156a8:	mov	r2, r9
   156ac:	mov	r3, r8
   156b0:	bl	26f38 <__flatcc_fb_create_join_path_n@@Base>
   156b4:	mov	r6, r0
   156b8:	bl	15714 <__flatcc_fb_open_output_file@@Base+0xcc>
   156bc:	movw	r1, #20679	; 0x50c7
   156c0:	movt	r1, #3
   156c4:	mov	r0, r6
   156c8:	bl	147f8 <fopen@plt>
   156cc:	str	r0, [r4, #204]	; 0xcc
   156d0:	mov	r5, #0
   156d4:	cmp	r0, #0
   156d8:	beq	156f0 <__flatcc_fb_open_output_file@@Base+0xa8>
   156dc:	mov	r0, r6
   156e0:	bl	14804 <free@plt>
   156e4:	mov	r0, r5
   156e8:	sub	sp, fp, #24
   156ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   156f0:	movw	r0, #4272	; 0x10b0
   156f4:	movt	r0, #6
   156f8:	ldr	r0, [r0]
   156fc:	movw	r1, #20737	; 0x5101
   15700:	movt	r1, #3
   15704:	mov	r2, r6
   15708:	bl	148c4 <fprintf@plt>
   1570c:	mvn	r5, #0
   15710:	b	156dc <__flatcc_fb_open_output_file@@Base+0x94>
   15714:	cmp	r0, #0
   15718:	bxne	lr
   1571c:	push	{fp, lr}
   15720:	mov	fp, sp
   15724:	movw	r0, #4272	; 0x10b0
   15728:	movt	r0, #6
   1572c:	ldr	r3, [r0]
   15730:	movw	r0, #20439	; 0x4fd7
   15734:	movt	r0, #3
   15738:	mov	r1, #34	; 0x22
   1573c:	mov	r2, #1
   15740:	bl	14858 <fwrite@plt>
   15744:	mov	r0, #1
   15748:	bl	148a0 <exit@plt>

0001574c <__flatcc_fb_close_output_file@@Base>:
   1574c:	push	{r4, sl, fp, lr}
   15750:	add	fp, sp, #8
   15754:	mov	r4, r0
   15758:	ldr	r0, [r0, #212]	; 0xd4
   1575c:	ldr	r1, [r0, #124]	; 0x7c
   15760:	cmp	r1, #0
   15764:	bne	15774 <__flatcc_fb_close_output_file@@Base+0x28>
   15768:	ldr	r0, [r0, #108]	; 0x6c
   1576c:	cmp	r0, #0
   15770:	beq	15778 <__flatcc_fb_close_output_file@@Base+0x2c>
   15774:	pop	{r4, sl, fp, pc}
   15778:	ldr	r0, [r4, #204]	; 0xcc
   1577c:	cmp	r0, #0
   15780:	popeq	{r4, sl, fp, pc}
   15784:	bl	1490c <fclose@plt>
   15788:	mov	r0, #0
   1578c:	str	r0, [r4, #204]	; 0xcc
   15790:	pop	{r4, sl, fp, pc}

00015794 <__flatcc_fb_end_output_c@@Base>:
   15794:	push	{r4, sl, fp, lr}
   15798:	add	fp, sp, #8
   1579c:	mov	r4, r0
   157a0:	ldr	r0, [r0, #204]	; 0xcc
   157a4:	cmp	r0, #0
   157a8:	beq	157c4 <__flatcc_fb_end_output_c@@Base+0x30>
   157ac:	movw	r1, #4276	; 0x10b4
   157b0:	movt	r1, #6
   157b4:	ldr	r1, [r1]
   157b8:	cmp	r0, r1
   157bc:	beq	157c4 <__flatcc_fb_end_output_c@@Base+0x30>
   157c0:	bl	1490c <fclose@plt>
   157c4:	mov	r0, #0
   157c8:	str	r0, [r4, #204]	; 0xcc
   157cc:	pop	{r4, sl, fp, pc}

000157d0 <__flatcc_fb_init_output_c@@Base>:
   157d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157d4:	add	fp, sp, #28
   157d8:	sub	sp, sp, #4
   157dc:	mov	r6, r1
   157e0:	mov	r4, r0
   157e4:	ldr	r5, [r1, #128]	; 0x80
   157e8:	ldr	r7, [r1, #216]	; 0xd8
   157ec:	mov	sl, #0
   157f0:	mov	r1, #0
   157f4:	mov	r2, #232	; 0xe8
   157f8:	bl	148dc <memset@plt>
   157fc:	str	r6, [r4, #212]	; 0xd4
   15800:	movw	r0, #20679	; 0x50c7
   15804:	movt	r0, #3
   15808:	movw	r8, #20771	; 0x5123
   1580c:	movt	r8, #3
   15810:	cmp	r5, #0
   15814:	moveq	r8, r0
   15818:	movw	r9, #21632	; 0x5480
   1581c:	movt	r9, #3
   15820:	cmp	r7, #0
   15824:	movne	r9, r7
   15828:	ldr	r5, [r6, #196]	; 0xc4
   1582c:	cmp	r5, #0
   15830:	beq	1586c <__flatcc_fb_init_output_c@@Base+0x9c>
   15834:	mov	r0, r5
   15838:	bl	148b8 <strlen@plt>
   1583c:	mov	r7, r0
   15840:	cmp	r0, #101	; 0x65
   15844:	bcc	15878 <__flatcc_fb_init_output_c@@Base+0xa8>
   15848:	movw	r0, #4272	; 0x10b0
   1584c:	movt	r0, #6
   15850:	ldr	r0, [r0]
   15854:	movw	r1, #20774	; 0x5126
   15858:	movt	r1, #3
   1585c:	mov	r2, #100	; 0x64
   15860:	bl	148c4 <fprintf@plt>
   15864:	mvn	sl, #0
   15868:	b	158d8 <__flatcc_fb_init_output_c@@Base+0x108>
   1586c:	movw	r5, #20829	; 0x515d
   15870:	movt	r5, #3
   15874:	mov	r7, #11
   15878:	mov	r0, r4
   1587c:	mov	r1, r5
   15880:	mov	r2, #100	; 0x64
   15884:	bl	148e8 <strncpy@plt>
   15888:	strb	sl, [r4, #100]	; 0x64
   1588c:	cmp	r7, #0
   15890:	addne	r0, r4, r7
   15894:	movne	r1, #95	; 0x5f
   15898:	strhne	r1, [r0]
   1589c:	add	r5, r4, #102	; 0x66
   158a0:	mov	r0, r5
   158a4:	mov	r1, r4
   158a8:	bl	1596c <__flatcc_fb_init_output_c@@Base+0x19c>
   158ac:	mov	sl, #0
   158b0:	strb	sl, [r5, r7]
   158b4:	ldr	r0, [r6, #176]	; 0xb0
   158b8:	str	r0, [r4, #224]	; 0xe0
   158bc:	ldr	r0, [r6, #108]	; 0x6c
   158c0:	cmp	r0, #0
   158c4:	beq	158e4 <__flatcc_fb_init_output_c@@Base+0x114>
   158c8:	movw	r0, #4276	; 0x10b4
   158cc:	movt	r0, #6
   158d0:	ldr	r0, [r0]
   158d4:	str	r0, [r4, #204]	; 0xcc
   158d8:	mov	r0, sl
   158dc:	sub	sp, fp, #28
   158e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e4:	ldr	r0, [r4, #212]	; 0xd4
   158e8:	ldr	r1, [r0, #124]	; 0x7c
   158ec:	cmp	r1, #0
   158f0:	beq	158d8 <__flatcc_fb_init_output_c@@Base+0x108>
   158f4:	movw	r2, #21632	; 0x5480
   158f8:	movt	r2, #3
   158fc:	mov	r0, r9
   15900:	mov	r3, #1
   15904:	bl	27054 <__flatcc_fb_create_join_path@@Base>
   15908:	mov	r6, r0
   1590c:	bl	15714 <__flatcc_fb_open_output_file@@Base+0xcc>
   15910:	mov	r0, r6
   15914:	mov	r1, r8
   15918:	bl	147f8 <fopen@plt>
   1591c:	str	r0, [r4, #204]	; 0xcc
   15920:	mov	sl, #0
   15924:	cmp	r0, #0
   15928:	beq	15940 <__flatcc_fb_init_output_c@@Base+0x170>
   1592c:	cmp	r6, #0
   15930:	beq	158d8 <__flatcc_fb_init_output_c@@Base+0x108>
   15934:	mov	r0, r6
   15938:	bl	14804 <free@plt>
   1593c:	b	158d8 <__flatcc_fb_init_output_c@@Base+0x108>
   15940:	movw	r0, #4272	; 0x10b0
   15944:	movt	r0, #6
   15948:	ldr	r0, [r0]
   1594c:	movw	r1, #20737	; 0x5101
   15950:	movt	r1, #3
   15954:	mov	r2, r6
   15958:	bl	148c4 <fprintf@plt>
   1595c:	mvn	sl, #0
   15960:	cmp	r6, #0
   15964:	bne	15934 <__flatcc_fb_init_output_c@@Base+0x164>
   15968:	b	158d8 <__flatcc_fb_init_output_c@@Base+0x108>
   1596c:	push	{r4, r5, r6, sl, fp, lr}
   15970:	add	fp, sp, #16
   15974:	mov	r4, r0
   15978:	ldrb	r5, [r1]
   1597c:	cmp	r5, #0
   15980:	beq	159a8 <__flatcc_fb_init_output_c@@Base+0x1d8>
   15984:	add	r6, r1, #1
   15988:	bl	14888 <__ctype_toupper_loc@plt>
   1598c:	ldr	r1, [r0]
   15990:	uxtb	r2, r5
   15994:	ldr	r1, [r1, r2, lsl #2]
   15998:	strb	r1, [r4], #1
   1599c:	ldrb	r5, [r6], #1
   159a0:	cmp	r5, #0
   159a4:	bne	1598c <__flatcc_fb_init_output_c@@Base+0x1bc>
   159a8:	mov	r0, #0
   159ac:	strb	r0, [r4]
   159b0:	pop	{r4, r5, r6, sl, fp, pc}

000159b4 <__flatcc_fb_gen_c_includes@@Base>:
   159b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159b8:	add	fp, sp, #28
   159bc:	sub	sp, sp, #36	; 0x24
   159c0:	str	r2, [sp, #12]
   159c4:	str	r1, [sp, #8]
   159c8:	mov	r6, r0
   159cc:	ldr	r0, [r0, #208]	; 0xd0
   159d0:	ldr	r8, [r0]
   159d4:	vmov.i32	q8, #0	; 0x00000000
   159d8:	add	r4, sp, #16
   159dc:	vst1.64	{d16-d17}, [r4]
   159e0:	ldr	r0, [r0, #164]	; 0xa4
   159e4:	bl	26e8c <__flatcc_fb_copy_path@@Base>
   159e8:	mov	r1, r0
   159ec:	mov	r0, r4
   159f0:	mov	r2, #1
   159f4:	bl	25244 <str_set_insert_item@@Base>
   159f8:	cmp	r8, #0
   159fc:	beq	15ac0 <__flatcc_fb_gen_c_includes@@Base+0x10c>
   15a00:	add	r7, sp, #16
   15a04:	b	15a20 <__flatcc_fb_gen_c_includes@@Base+0x6c>
   15a08:	mov	r0, r5
   15a0c:	bl	14804 <free@plt>
   15a10:	mov	r0, r4
   15a14:	bl	14804 <free@plt>
   15a18:	cmp	r8, #0
   15a1c:	beq	15ac0 <__flatcc_fb_gen_c_includes@@Base+0x10c>
   15a20:	ldrd	r0, [r8, #8]
   15a24:	ldr	r2, [r6, #212]	; 0xd4
   15a28:	ldr	r2, [r2, #96]	; 0x60
   15a2c:	bl	272ac <__flatcc_fb_create_basename@@Base>
   15a30:	mov	r4, r0
   15a34:	bl	15714 <__flatcc_fb_open_output_file@@Base+0xcc>
   15a38:	ldr	r8, [r8]
   15a3c:	mov	r0, r4
   15a40:	bl	26e8c <__flatcc_fb_copy_path@@Base>
   15a44:	mov	r5, r0
   15a48:	bl	15714 <__flatcc_fb_open_output_file@@Base+0xcc>
   15a4c:	ldrb	r9, [r5]
   15a50:	cmp	r9, #0
   15a54:	beq	15a80 <__flatcc_fb_gen_c_includes@@Base+0xcc>
   15a58:	add	sl, r5, #1
   15a5c:	bl	14888 <__ctype_toupper_loc@plt>
   15a60:	ldr	r1, [r0]
   15a64:	uxtb	r2, r9
   15a68:	ldr	r1, [r1, r2, lsl #2]
   15a6c:	strb	r1, [sl, #-1]
   15a70:	ldrb	r9, [sl]
   15a74:	add	sl, sl, #1
   15a78:	cmp	r9, #0
   15a7c:	bne	15a60 <__flatcc_fb_gen_c_includes@@Base+0xac>
   15a80:	mov	r0, r7
   15a84:	mov	r1, r5
   15a88:	mov	r2, #1
   15a8c:	bl	25244 <str_set_insert_item@@Base>
   15a90:	cmp	r0, #0
   15a94:	bne	15a08 <__flatcc_fb_gen_c_includes@@Base+0x54>
   15a98:	ldr	r0, [r6, #204]	; 0xcc
   15a9c:	str	r4, [sp]
   15aa0:	ldr	r1, [sp, #8]
   15aa4:	str	r1, [sp, #4]
   15aa8:	movw	r1, #20841	; 0x5169
   15aac:	movt	r1, #3
   15ab0:	mov	r2, r5
   15ab4:	ldr	r3, [sp, #12]
   15ab8:	bl	148c4 <fprintf@plt>
   15abc:	b	15a10 <__flatcc_fb_gen_c_includes@@Base+0x5c>
   15ac0:	add	r0, sp, #16
   15ac4:	movw	r1, #23260	; 0x5adc
   15ac8:	movt	r1, #1
   15acc:	mov	r2, #0
   15ad0:	bl	24ec4 <str_set_destroy@@Base>
   15ad4:	sub	sp, fp, #28
   15ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15adc:	mov	r0, r1
   15ae0:	b	14804 <free@plt>

00015ae4 <__flatcc_fb_copy_scope@@Base>:
   15ae4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ae8:	add	fp, sp, #24
   15aec:	mov	r4, r1
   15af0:	mov	r6, r0
   15af4:	ldr	r1, [r0]
   15af8:	ldr	r5, [r0, #24]
   15afc:	cmp	r1, #0
   15b00:	mov	r0, r5
   15b04:	beq	15b2c <__flatcc_fb_copy_scope@@Base+0x48>
   15b08:	mov	r0, r5
   15b0c:	ldr	r2, [r1]
   15b10:	ldr	r1, [r1, #4]
   15b14:	ldr	r1, [r1, #4]
   15b18:	add	r0, r0, r1
   15b1c:	add	r0, r0, #1
   15b20:	cmp	r2, #0
   15b24:	mov	r1, r2
   15b28:	bne	15b0c <__flatcc_fb_copy_scope@@Base+0x28>
   15b2c:	cmp	r0, #101	; 0x65
   15b30:	bls	15b3c <__flatcc_fb_copy_scope@@Base+0x58>
   15b34:	mvn	r5, #0
   15b38:	b	15b8c <__flatcc_fb_copy_scope@@Base+0xa8>
   15b3c:	ldr	r1, [r6, #20]
   15b40:	mov	r0, r4
   15b44:	mov	r2, r5
   15b48:	bl	14810 <memcpy@plt>
   15b4c:	ldr	r7, [r6]
   15b50:	cmp	r7, #0
   15b54:	beq	15b88 <__flatcc_fb_copy_scope@@Base+0xa4>
   15b58:	mov	r8, #95	; 0x5f
   15b5c:	add	r0, r4, r5
   15b60:	ldr	r2, [r7, #4]
   15b64:	ldm	r2, {r1, r6}
   15b68:	mov	r2, r6
   15b6c:	bl	14810 <memcpy@plt>
   15b70:	add	r0, r6, r5
   15b74:	strb	r8, [r4, r0]
   15b78:	add	r5, r0, #1
   15b7c:	ldr	r7, [r7]
   15b80:	cmp	r7, #0
   15b84:	bne	15b5c <__flatcc_fb_copy_scope@@Base+0x78>
   15b88:	add	r4, r4, r5
   15b8c:	mov	r0, #0
   15b90:	strb	r0, [r4]
   15b94:	mov	r0, r5
   15b98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015b9c <__flatcc_fb_scoped_symbol_name@@Base>:
   15b9c:	push	{r4, r5, fp, lr}
   15ba0:	add	fp, sp, #8
   15ba4:	mov	r4, r2
   15ba8:	ldr	r5, [r1, #4]
   15bac:	ldr	r1, [r2, #204]	; 0xcc
   15bb0:	cmp	r1, r0
   15bb4:	beq	15bcc <__flatcc_fb_scoped_symbol_name@@Base+0x30>
   15bb8:	mov	r1, r4
   15bbc:	bl	15ae4 <__flatcc_fb_copy_scope@@Base>
   15bc0:	str	r0, [r4, #208]	; 0xd0
   15bc4:	cmn	r0, #1
   15bc8:	ble	15c40 <__flatcc_fb_scoped_symbol_name@@Base+0xa4>
   15bcc:	ldr	r2, [r5, #4]
   15bd0:	ldr	r0, [r4, #208]	; 0xd0
   15bd4:	add	r0, r0, r2
   15bd8:	str	r2, [r4, #212]	; 0xd4
   15bdc:	str	r0, [r4, #216]	; 0xd8
   15be0:	cmp	r0, #204	; 0xcc
   15be4:	bge	15c0c <__flatcc_fb_scoped_symbol_name@@Base+0x70>
   15be8:	ldr	r0, [r4, #208]	; 0xd0
   15bec:	ldr	r2, [r4, #212]	; 0xd4
   15bf0:	add	r0, r4, r0
   15bf4:	ldr	r1, [r5]
   15bf8:	bl	14810 <memcpy@plt>
   15bfc:	ldr	r0, [r4, #216]	; 0xd8
   15c00:	mov	r1, #0
   15c04:	strb	r1, [r4, r0]
   15c08:	pop	{r4, r5, fp, pc}
   15c0c:	ldr	r3, [r5]
   15c10:	movw	r0, #4272	; 0x10b0
   15c14:	movt	r0, #6
   15c18:	ldr	r0, [r0]
   15c1c:	movw	r1, #20907	; 0x51ab
   15c20:	movt	r1, #3
   15c24:	bl	148c4 <fprintf@plt>
   15c28:	mov	r0, #203	; 0xcb
   15c2c:	ldr	r1, [r4, #208]	; 0xd0
   15c30:	rsb	r1, r1, #203	; 0xcb
   15c34:	str	r1, [r4, #212]	; 0xd4
   15c38:	str	r0, [r4, #216]	; 0xd8
   15c3c:	b	15be8 <__flatcc_fb_scoped_symbol_name@@Base+0x4c>
   15c40:	mov	r0, #0
   15c44:	str	r0, [r4, #208]	; 0xd0
   15c48:	movw	r0, #4272	; 0x10b0
   15c4c:	movt	r0, #6
   15c50:	ldr	r3, [r0]
   15c54:	movw	r0, #20878	; 0x518e
   15c58:	movt	r0, #3
   15c5c:	mov	r1, #28
   15c60:	mov	r2, #1
   15c64:	bl	14858 <fwrite@plt>
   15c68:	b	15bcc <__flatcc_fb_scoped_symbol_name@@Base+0x30>

00015c6c <__flatcc_fb_codegen_common_c@@Base>:
   15c6c:	push	{r4, r5, r6, sl, fp, lr}
   15c70:	add	fp, sp, #16
   15c74:	mov	r4, r0
   15c78:	bl	148b8 <strlen@plt>
   15c7c:	sub	r5, r0, #1
   15c80:	ldr	r0, [r4, #212]	; 0xd4
   15c84:	ldr	r0, [r0, #144]	; 0x90
   15c88:	cmp	r0, #0
   15c8c:	beq	15cd0 <__flatcc_fb_codegen_common_c@@Base+0x64>
   15c90:	movw	r3, #20945	; 0x51d1
   15c94:	movt	r3, #3
   15c98:	mov	r0, r4
   15c9c:	mov	r1, r4
   15ca0:	mov	r2, r5
   15ca4:	bl	15648 <__flatcc_fb_open_output_file@@Base>
   15ca8:	mvn	r6, #0
   15cac:	cmp	r0, #0
   15cb0:	bne	15d08 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   15cb4:	mov	r0, r4
   15cb8:	bl	15f10 <__flatcc_fb_gen_common_c_header@@Base>
   15cbc:	mov	r6, r0
   15cc0:	mov	r0, r4
   15cc4:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15cc8:	cmp	r6, #0
   15ccc:	bne	15d08 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   15cd0:	ldr	r0, [r4, #212]	; 0xd4
   15cd4:	ldr	r0, [r0, #148]	; 0x94
   15cd8:	mov	r6, #0
   15cdc:	cmp	r0, #0
   15ce0:	beq	15d08 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   15ce4:	movw	r3, #20962	; 0x51e2
   15ce8:	movt	r3, #3
   15cec:	mov	r0, r4
   15cf0:	mov	r1, r4
   15cf4:	mov	r2, r5
   15cf8:	bl	15648 <__flatcc_fb_open_output_file@@Base>
   15cfc:	mvn	r6, #0
   15d00:	cmp	r0, #0
   15d04:	beq	15d10 <__flatcc_fb_codegen_common_c@@Base+0xa4>
   15d08:	mov	r0, r6
   15d0c:	pop	{r4, r5, r6, sl, fp, pc}
   15d10:	mov	r0, r4
   15d14:	bl	19018 <__flatcc_fb_gen_common_c_builder_header@@Base>
   15d18:	mov	r0, r4
   15d1c:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15d20:	mov	r6, #0
   15d24:	mov	r0, r6
   15d28:	pop	{r4, r5, r6, sl, fp, pc}

00015d2c <__flatcc_fb_codegen_c@@Base>:
   15d2c:	push	{r4, r5, r6, sl, fp, lr}
   15d30:	add	fp, sp, #16
   15d34:	mov	r4, r0
   15d38:	str	r1, [r0, #208]	; 0xd0
   15d3c:	ldr	r0, [r1, #60]	; 0x3c
   15d40:	mov	r1, #0
   15d44:	mov	r2, #0
   15d48:	bl	2645c <fb_scope_table_find@@Base>
   15d4c:	str	r0, [r4, #216]	; 0xd8
   15d50:	ldr	r0, [r4, #208]	; 0xd0
   15d54:	ldr	r6, [r0, #160]	; 0xa0
   15d58:	mov	r0, r6
   15d5c:	bl	148b8 <strlen@plt>
   15d60:	mov	r5, r0
   15d64:	ldr	r0, [r4, #212]	; 0xd4
   15d68:	ldr	r0, [r0, #152]	; 0x98
   15d6c:	cmp	r0, #0
   15d70:	beq	15db4 <__flatcc_fb_codegen_c@@Base+0x88>
   15d74:	movw	r3, #49405	; 0xc0fd
   15d78:	movt	r3, #4
   15d7c:	mov	r0, r4
   15d80:	mov	r1, r6
   15d84:	mov	r2, r5
   15d88:	bl	15648 <__flatcc_fb_open_output_file@@Base>
   15d8c:	mov	r1, r0
   15d90:	mvn	r0, #0
   15d94:	cmp	r1, #0
   15d98:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15d9c:	mov	r0, r4
   15da0:	bl	16848 <__flatcc_fb_gen_c_reader@@Base>
   15da4:	cmp	r0, #0
   15da8:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15dac:	mov	r0, r4
   15db0:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15db4:	ldr	r0, [r4, #212]	; 0xd4
   15db8:	ldr	r0, [r0, #156]	; 0x9c
   15dbc:	cmp	r0, #0
   15dc0:	beq	15e08 <__flatcc_fb_codegen_c@@Base+0xdc>
   15dc4:	ldr	r0, [r4, #208]	; 0xd0
   15dc8:	ldr	r1, [r0, #160]	; 0xa0
   15dcc:	movw	r3, #48125	; 0xbbfd
   15dd0:	movt	r3, #4
   15dd4:	mov	r0, r4
   15dd8:	mov	r2, r5
   15ddc:	bl	15648 <__flatcc_fb_open_output_file@@Base>
   15de0:	mov	r1, r0
   15de4:	mvn	r0, #0
   15de8:	cmp	r1, #0
   15dec:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15df0:	mov	r0, r4
   15df4:	bl	198d8 <__flatcc_fb_gen_c_builder@@Base>
   15df8:	cmp	r0, #0
   15dfc:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e00:	mov	r0, r4
   15e04:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15e08:	ldr	r0, [r4, #212]	; 0xd4
   15e0c:	ldr	r0, [r0, #160]	; 0xa0
   15e10:	cmp	r0, #0
   15e14:	beq	15e5c <__flatcc_fb_codegen_c@@Base+0x130>
   15e18:	ldr	r0, [r4, #208]	; 0xd0
   15e1c:	ldr	r1, [r0, #160]	; 0xa0
   15e20:	movw	r3, #20980	; 0x51f4
   15e24:	movt	r3, #3
   15e28:	mov	r0, r4
   15e2c:	mov	r2, r5
   15e30:	bl	15648 <__flatcc_fb_open_output_file@@Base>
   15e34:	mov	r1, r0
   15e38:	mvn	r0, #0
   15e3c:	cmp	r1, #0
   15e40:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e44:	mov	r0, r4
   15e48:	bl	1bf68 <__flatcc_fb_gen_c_verifier@@Base>
   15e4c:	cmp	r0, #0
   15e50:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e54:	mov	r0, r4
   15e58:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15e5c:	ldr	r0, [r4, #212]	; 0xd4
   15e60:	ldr	r0, [r0, #164]	; 0xa4
   15e64:	cmp	r0, #0
   15e68:	beq	15eb0 <__flatcc_fb_codegen_c@@Base+0x184>
   15e6c:	ldr	r0, [r4, #208]	; 0xd0
   15e70:	ldr	r1, [r0, #160]	; 0xa0
   15e74:	movw	r3, #20992	; 0x5200
   15e78:	movt	r3, #3
   15e7c:	mov	r0, r4
   15e80:	mov	r2, r5
   15e84:	bl	15648 <__flatcc_fb_open_output_file@@Base>
   15e88:	mov	r1, r0
   15e8c:	mvn	r0, #0
   15e90:	cmp	r1, #0
   15e94:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e98:	mov	r0, r4
   15e9c:	bl	1caa8 <__flatcc_fb_gen_c_json_parser@@Base>
   15ea0:	cmp	r0, #0
   15ea4:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15ea8:	mov	r0, r4
   15eac:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15eb0:	ldr	r0, [r4, #212]	; 0xd4
   15eb4:	ldr	r1, [r0, #168]	; 0xa8
   15eb8:	mov	r0, #0
   15ebc:	cmp	r1, #0
   15ec0:	beq	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15ec4:	ldr	r0, [r4, #208]	; 0xd0
   15ec8:	ldr	r1, [r0, #160]	; 0xa0
   15ecc:	movw	r3, #21007	; 0x520f
   15ed0:	movt	r3, #3
   15ed4:	mov	r0, r4
   15ed8:	mov	r2, r5
   15edc:	bl	15648 <__flatcc_fb_open_output_file@@Base>
   15ee0:	mov	r1, r0
   15ee4:	mvn	r0, #0
   15ee8:	cmp	r1, #0
   15eec:	bne	15f0c <__flatcc_fb_codegen_c@@Base+0x1e0>
   15ef0:	mov	r0, r4
   15ef4:	bl	21708 <__flatcc_fb_gen_c_json_printer@@Base>
   15ef8:	cmp	r0, #0
   15efc:	popne	{r4, r5, r6, sl, fp, pc}
   15f00:	mov	r0, r4
   15f04:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15f08:	mov	r0, #0
   15f0c:	pop	{r4, r5, r6, sl, fp, pc}

00015f10 <__flatcc_fb_gen_common_c_header@@Base>:
   15f10:	push	{r4, r5, fp, lr}
   15f14:	add	fp, sp, #8
   15f18:	mov	r5, r0
   15f1c:	ldr	r0, [r0, #204]	; 0xcc
   15f20:	add	r4, r5, #102	; 0x66
   15f24:	movw	r1, #21023	; 0x521f
   15f28:	movt	r1, #3
   15f2c:	mov	r2, r4
   15f30:	mov	r3, r4
   15f34:	bl	148c4 <fprintf@plt>
   15f38:	ldr	r3, [r5, #204]	; 0xcc
   15f3c:	movw	r0, #21078	; 0x5256
   15f40:	movt	r0, #3
   15f44:	mov	r1, #81	; 0x51
   15f48:	mov	r2, #1
   15f4c:	bl	14858 <fwrite@plt>
   15f50:	ldr	r3, [r5, #204]	; 0xcc
   15f54:	movw	r0, #21160	; 0x52a8
   15f58:	movt	r0, #3
   15f5c:	mov	r1, #52	; 0x34
   15f60:	mov	r2, #1
   15f64:	bl	14858 <fwrite@plt>
   15f68:	ldr	r0, [r5, #212]	; 0xd4
   15f6c:	ldr	r0, [r0, #136]	; 0x88
   15f70:	cmp	r0, #0
   15f74:	bne	15f90 <__flatcc_fb_gen_common_c_header@@Base+0x80>
   15f78:	ldr	r3, [r5, #204]	; 0xcc
   15f7c:	movw	r0, #21213	; 0x52dd
   15f80:	movt	r0, #3
   15f84:	mov	r1, #135	; 0x87
   15f88:	mov	r2, #1
   15f8c:	bl	14858 <fwrite@plt>
   15f90:	mov	r0, r5
   15f94:	bl	15fc4 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   15f98:	mov	r0, r5
   15f9c:	bl	15fec <__flatcc_fb_gen_common_c_header@@Base+0xdc>
   15fa0:	mov	r0, r5
   15fa4:	bl	16820 <__flatcc_fb_gen_common_c_header@@Base+0x910>
   15fa8:	ldr	r0, [r5, #204]	; 0xcc
   15fac:	movw	r1, #21349	; 0x5365
   15fb0:	movt	r1, #3
   15fb4:	mov	r2, r4
   15fb8:	bl	148c4 <fprintf@plt>
   15fbc:	mov	r0, #0
   15fc0:	pop	{r4, r5, fp, pc}
   15fc4:	ldr	r1, [r0, #212]	; 0xd4
   15fc8:	ldr	r1, [r1, #140]	; 0x8c
   15fcc:	cmp	r1, #0
   15fd0:	bxeq	lr
   15fd4:	ldr	r3, [r0, #204]	; 0xcc
   15fd8:	movw	r0, #21554	; 0x5432
   15fdc:	movt	r0, #3
   15fe0:	mov	r1, #36	; 0x24
   15fe4:	mov	r2, #1
   15fe8:	b	14858 <fwrite@plt>
   15fec:	push	{r4, sl, fp, lr}
   15ff0:	add	fp, sp, #8
   15ff4:	sub	sp, sp, #232	; 0xe8
   15ff8:	mov	r4, r0
   15ffc:	ldr	r3, [r0, #204]	; 0xcc
   16000:	movw	r0, #21591	; 0x5457
   16004:	movt	r0, #3
   16008:	mov	r1, #41	; 0x29
   1600c:	mov	r2, #1
   16010:	bl	14858 <fwrite@plt>
   16014:	movw	r1, #21633	; 0x5481
   16018:	movt	r1, #3
   1601c:	mov	r0, r4
   16020:	bl	147ec <strcmp@plt>
   16024:	cmp	r0, #0
   16028:	beq	160b0 <__flatcc_fb_gen_common_c_header@@Base+0x1a0>
   1602c:	ldr	r0, [r4, #204]	; 0xcc
   16030:	str	r4, [sp]
   16034:	str	r4, [sp, #4]
   16038:	str	r4, [sp, #8]
   1603c:	movw	r1, #21646	; 0x548e
   16040:	movt	r1, #3
   16044:	mov	r2, r4
   16048:	mov	r3, r4
   1604c:	bl	148c4 <fprintf@plt>
   16050:	ldr	r0, [r4, #204]	; 0xcc
   16054:	str	r4, [sp]
   16058:	str	r4, [sp, #4]
   1605c:	movw	r1, #21853	; 0x555d
   16060:	movt	r1, #3
   16064:	movw	r2, #21631	; 0x547f
   16068:	movt	r2, #3
   1606c:	mov	r3, r4
   16070:	bl	148c4 <fprintf@plt>
   16074:	ldr	r0, [r4, #204]	; 0xcc
   16078:	str	r4, [sp]
   1607c:	str	r4, [sp, #4]
   16080:	str	r4, [sp, #8]
   16084:	movw	r1, #22196	; 0x56b4
   16088:	movt	r1, #3
   1608c:	mov	r2, r4
   16090:	mov	r3, r4
   16094:	bl	148c4 <fprintf@plt>
   16098:	ldr	r0, [r4, #204]	; 0xcc
   1609c:	add	r2, r4, #102	; 0x66
   160a0:	movw	r1, #22810	; 0x591a
   160a4:	movt	r1, #3
   160a8:	mov	r3, r2
   160ac:	bl	148c4 <fprintf@plt>
   160b0:	ldr	r0, [r4, #204]	; 0xcc
   160b4:	movw	r1, #22890	; 0x596a
   160b8:	movt	r1, #3
   160bc:	mov	r2, r4
   160c0:	mov	r3, r4
   160c4:	bl	148c4 <fprintf@plt>
   160c8:	ldr	r0, [r4, #204]	; 0xcc
   160cc:	str	r4, [sp]
   160d0:	str	r4, [sp, #4]
   160d4:	str	r4, [sp, #8]
   160d8:	str	r4, [sp, #12]
   160dc:	str	r4, [sp, #16]
   160e0:	movw	r1, #23031	; 0x59f7
   160e4:	movt	r1, #3
   160e8:	mov	r2, r4
   160ec:	mov	r3, r4
   160f0:	bl	148c4 <fprintf@plt>
   160f4:	ldr	r0, [r4, #204]	; 0xcc
   160f8:	movw	r1, #23402	; 0x5b6a
   160fc:	movt	r1, #3
   16100:	mov	r2, r4
   16104:	mov	r3, r4
   16108:	bl	148c4 <fprintf@plt>
   1610c:	ldr	r0, [r4, #204]	; 0xcc
   16110:	str	r4, [sp]
   16114:	str	r4, [sp, #4]
   16118:	movw	r1, #23487	; 0x5bbf
   1611c:	movt	r1, #3
   16120:	mov	r2, r4
   16124:	mov	r3, r4
   16128:	bl	148c4 <fprintf@plt>
   1612c:	ldr	r2, [r4, #204]	; 0xcc
   16130:	ldr	r0, [r4, #212]	; 0xd4
   16134:	ldr	r0, [r0, #32]
   16138:	cmp	r0, #0
   1613c:	beq	16158 <__flatcc_fb_gen_common_c_header@@Base+0x248>
   16140:	movw	r1, #23780	; 0x5ce4
   16144:	movt	r1, #3
   16148:	mov	r0, r2
   1614c:	mov	r2, r4
   16150:	bl	148c4 <fprintf@plt>
   16154:	b	16164 <__flatcc_fb_gen_common_c_header@@Base+0x254>
   16158:	mov	r0, #10
   1615c:	mov	r1, r2
   16160:	bl	14924 <fputc@plt>
   16164:	ldr	r0, [r4, #204]	; 0xcc
   16168:	movw	r1, #23825	; 0x5d11
   1616c:	movt	r1, #3
   16170:	mov	r2, r4
   16174:	mov	r3, r4
   16178:	bl	148c4 <fprintf@plt>
   1617c:	ldr	r0, [r4, #204]	; 0xcc
   16180:	str	r4, [sp]
   16184:	str	r4, [sp, #4]
   16188:	str	r4, [sp, #8]
   1618c:	movw	r1, #24036	; 0x5de4
   16190:	movt	r1, #3
   16194:	mov	r2, r4
   16198:	mov	r3, r4
   1619c:	bl	148c4 <fprintf@plt>
   161a0:	ldr	r0, [r4, #204]	; 0xcc
   161a4:	str	r4, [sp]
   161a8:	str	r4, [sp, #4]
   161ac:	str	r4, [sp, #8]
   161b0:	movw	r1, #24462	; 0x5f8e
   161b4:	movt	r1, #3
   161b8:	mov	r2, r4
   161bc:	mov	r3, r4
   161c0:	bl	148c4 <fprintf@plt>
   161c4:	ldr	r0, [r4, #204]	; 0xcc
   161c8:	str	r4, [sp]
   161cc:	movw	r1, #24622	; 0x602e
   161d0:	movt	r1, #3
   161d4:	mov	r2, r4
   161d8:	mov	r3, r4
   161dc:	bl	148c4 <fprintf@plt>
   161e0:	ldr	r0, [r4, #204]	; 0xcc
   161e4:	str	r4, [sp]
   161e8:	movw	r1, #24840	; 0x6108
   161ec:	movt	r1, #3
   161f0:	mov	r2, r4
   161f4:	mov	r3, r4
   161f8:	bl	148c4 <fprintf@plt>
   161fc:	ldr	r0, [r4, #204]	; 0xcc
   16200:	str	r4, [sp]
   16204:	movw	r1, #25058	; 0x61e2
   16208:	movt	r1, #3
   1620c:	mov	r2, r4
   16210:	mov	r3, r4
   16214:	bl	148c4 <fprintf@plt>
   16218:	ldr	r0, [r4, #204]	; 0xcc
   1621c:	str	r4, [sp]
   16220:	str	r4, [sp, #4]
   16224:	str	r4, [sp, #8]
   16228:	movw	r1, #25274	; 0x62ba
   1622c:	movt	r1, #3
   16230:	mov	r2, r4
   16234:	mov	r3, r4
   16238:	bl	148c4 <fprintf@plt>
   1623c:	ldr	r2, [r4, #204]	; 0xcc
   16240:	ldr	r0, [r4, #212]	; 0xd4
   16244:	ldr	r0, [r0, #32]
   16248:	cmp	r0, #0
   1624c:	beq	16268 <__flatcc_fb_gen_common_c_header@@Base+0x358>
   16250:	movw	r1, #25506	; 0x63a2
   16254:	movt	r1, #3
   16258:	mov	r0, r2
   1625c:	mov	r2, r4
   16260:	bl	148c4 <fprintf@plt>
   16264:	b	16274 <__flatcc_fb_gen_common_c_header@@Base+0x364>
   16268:	mov	r0, #10
   1626c:	mov	r1, r2
   16270:	bl	14924 <fputc@plt>
   16274:	ldr	r0, [r4, #204]	; 0xcc
   16278:	str	r4, [sp]
   1627c:	str	r4, [sp, #4]
   16280:	movw	r1, #25548	; 0x63cc
   16284:	movt	r1, #3
   16288:	mov	r2, r4
   1628c:	mov	r3, r4
   16290:	bl	148c4 <fprintf@plt>
   16294:	ldr	r0, [r4, #204]	; 0xcc
   16298:	movw	r1, #25707	; 0x646b
   1629c:	movt	r1, #3
   162a0:	mov	r2, r4
   162a4:	mov	r3, r4
   162a8:	bl	148c4 <fprintf@plt>
   162ac:	ldr	r0, [r4, #204]	; 0xcc
   162b0:	str	r4, [sp]
   162b4:	movw	r1, #25773	; 0x64ad
   162b8:	movt	r1, #3
   162bc:	mov	r2, r4
   162c0:	mov	r3, r4
   162c4:	bl	148c4 <fprintf@plt>
   162c8:	ldr	r0, [r4, #204]	; 0xcc
   162cc:	movw	r1, #25911	; 0x6537
   162d0:	movt	r1, #3
   162d4:	mov	r2, r4
   162d8:	mov	r3, r4
   162dc:	bl	148c4 <fprintf@plt>
   162e0:	ldr	r0, [r4, #204]	; 0xcc
   162e4:	str	r4, [sp]
   162e8:	str	r4, [sp, #4]
   162ec:	movw	r1, #26025	; 0x65a9
   162f0:	movt	r1, #3
   162f4:	mov	r2, r4
   162f8:	mov	r3, r4
   162fc:	bl	148c4 <fprintf@plt>
   16300:	ldr	r0, [r4, #204]	; 0xcc
   16304:	movw	r1, #26313	; 0x66c9
   16308:	movt	r1, #3
   1630c:	mov	r2, r4
   16310:	mov	r3, r4
   16314:	bl	148c4 <fprintf@plt>
   16318:	ldr	r0, [r4, #204]	; 0xcc
   1631c:	movw	r1, #26432	; 0x6740
   16320:	movt	r1, #3
   16324:	mov	r2, r4
   16328:	mov	r3, r4
   1632c:	bl	148c4 <fprintf@plt>
   16330:	ldr	r0, [r4, #204]	; 0xcc
   16334:	str	r4, [sp]
   16338:	str	r4, [sp, #4]
   1633c:	movw	r1, #26560	; 0x67c0
   16340:	movt	r1, #3
   16344:	mov	r2, r4
   16348:	mov	r3, r4
   1634c:	bl	148c4 <fprintf@plt>
   16350:	ldr	r0, [r4, #204]	; 0xcc
   16354:	str	r4, [sp, #32]
   16358:	str	r4, [sp, #36]	; 0x24
   1635c:	str	r4, [sp]
   16360:	str	r4, [sp, #4]
   16364:	str	r4, [sp, #8]
   16368:	str	r4, [sp, #12]
   1636c:	str	r4, [sp, #16]
   16370:	str	r4, [sp, #20]
   16374:	str	r4, [sp, #24]
   16378:	str	r4, [sp, #28]
   1637c:	movw	r1, #26659	; 0x6823
   16380:	movt	r1, #3
   16384:	mov	r2, r4
   16388:	mov	r3, r4
   1638c:	bl	148c4 <fprintf@plt>
   16390:	ldr	r0, [r4, #204]	; 0xcc
   16394:	movw	r1, #26948	; 0x6944
   16398:	movt	r1, #3
   1639c:	mov	r2, r4
   163a0:	bl	148c4 <fprintf@plt>
   163a4:	ldr	r0, [r4, #204]	; 0xcc
   163a8:	str	r4, [sp]
   163ac:	str	r4, [sp, #4]
   163b0:	movw	r1, #26982	; 0x6966
   163b4:	movt	r1, #3
   163b8:	mov	r2, r4
   163bc:	mov	r3, r4
   163c0:	bl	148c4 <fprintf@plt>
   163c4:	ldr	r0, [r4, #204]	; 0xcc
   163c8:	str	r4, [sp, #32]
   163cc:	str	r4, [sp, #36]	; 0x24
   163d0:	str	r4, [sp, #40]	; 0x28
   163d4:	str	r4, [sp, #44]	; 0x2c
   163d8:	str	r4, [sp, #48]	; 0x30
   163dc:	str	r4, [sp, #52]	; 0x34
   163e0:	str	r4, [sp, #56]	; 0x38
   163e4:	str	r4, [sp]
   163e8:	str	r4, [sp, #4]
   163ec:	str	r4, [sp, #8]
   163f0:	str	r4, [sp, #12]
   163f4:	str	r4, [sp, #16]
   163f8:	str	r4, [sp, #20]
   163fc:	str	r4, [sp, #24]
   16400:	str	r4, [sp, #28]
   16404:	movw	r1, #27117	; 0x69ed
   16408:	movt	r1, #3
   1640c:	mov	r2, r4
   16410:	mov	r3, r4
   16414:	bl	148c4 <fprintf@plt>
   16418:	mov	r0, r4
   1641c:	bl	185ec <__flatcc_fb_gen_c_reader@@Base+0x1da4>
   16420:	mov	r0, r4
   16424:	bl	186d8 <__flatcc_fb_gen_c_reader@@Base+0x1e90>
   16428:	mov	r0, r4
   1642c:	bl	18808 <__flatcc_fb_gen_c_reader@@Base+0x1fc0>
   16430:	ldr	r0, [r4, #212]	; 0xd4
   16434:	ldr	r0, [r0, #136]	; 0x88
   16438:	cmp	r0, #0
   1643c:	beq	1644c <__flatcc_fb_gen_common_c_header@@Base+0x53c>
   16440:	mov	r0, r4
   16444:	bl	18ee8 <__flatcc_gen_sort@@Base>
   16448:	b	16464 <__flatcc_fb_gen_common_c_header@@Base+0x554>
   1644c:	ldr	r3, [r4, #204]	; 0xcc
   16450:	movw	r0, #27548	; 0x6b9c
   16454:	movt	r0, #3
   16458:	mov	r1, #20
   1645c:	mov	r2, #1
   16460:	bl	14858 <fwrite@plt>
   16464:	ldr	r0, [r4, #204]	; 0xcc
   16468:	str	r4, [sp]
   1646c:	str	r4, [sp, #4]
   16470:	str	r4, [sp, #8]
   16474:	movw	r1, #27569	; 0x6bb1
   16478:	movt	r1, #3
   1647c:	mov	r2, r4
   16480:	mov	r3, r4
   16484:	bl	148c4 <fprintf@plt>
   16488:	ldr	r2, [r4, #204]	; 0xcc
   1648c:	ldr	r0, [r4, #212]	; 0xd4
   16490:	ldr	r0, [r0, #136]	; 0x88
   16494:	cmp	r0, #0
   16498:	beq	164b4 <__flatcc_fb_gen_common_c_header@@Base+0x5a4>
   1649c:	movw	r1, #27794	; 0x6c92
   164a0:	movt	r1, #3
   164a4:	mov	r0, r2
   164a8:	mov	r2, r4
   164ac:	bl	148c4 <fprintf@plt>
   164b0:	b	164c0 <__flatcc_fb_gen_common_c_header@@Base+0x5b0>
   164b4:	mov	r0, #10
   164b8:	mov	r1, r2
   164bc:	bl	14924 <fputc@plt>
   164c0:	ldr	r1, [r4, #204]	; 0xcc
   164c4:	mov	r0, #10
   164c8:	bl	14924 <fputc@plt>
   164cc:	ldr	r0, [r4, #204]	; 0xcc
   164d0:	str	r4, [sp]
   164d4:	movw	r1, #27826	; 0x6cb2
   164d8:	movt	r1, #3
   164dc:	mov	r2, r4
   164e0:	mov	r3, r4
   164e4:	bl	148c4 <fprintf@plt>
   164e8:	ldr	r0, [r4, #204]	; 0xcc
   164ec:	str	r4, [sp, #64]	; 0x40
   164f0:	str	r4, [sp, #68]	; 0x44
   164f4:	str	r4, [sp, #72]	; 0x48
   164f8:	str	r4, [sp, #76]	; 0x4c
   164fc:	str	r4, [sp, #80]	; 0x50
   16500:	str	r4, [sp, #84]	; 0x54
   16504:	str	r4, [sp, #88]	; 0x58
   16508:	str	r4, [sp, #92]	; 0x5c
   1650c:	str	r4, [sp, #32]
   16510:	str	r4, [sp, #36]	; 0x24
   16514:	str	r4, [sp, #40]	; 0x28
   16518:	str	r4, [sp, #44]	; 0x2c
   1651c:	str	r4, [sp, #48]	; 0x30
   16520:	str	r4, [sp, #52]	; 0x34
   16524:	str	r4, [sp, #56]	; 0x38
   16528:	str	r4, [sp, #60]	; 0x3c
   1652c:	str	r4, [sp]
   16530:	str	r4, [sp, #4]
   16534:	str	r4, [sp, #8]
   16538:	str	r4, [sp, #12]
   1653c:	str	r4, [sp, #16]
   16540:	str	r4, [sp, #20]
   16544:	str	r4, [sp, #24]
   16548:	str	r4, [sp, #28]
   1654c:	movw	r1, #27954	; 0x6d32
   16550:	movt	r1, #3
   16554:	mov	r2, r4
   16558:	mov	r3, r4
   1655c:	bl	148c4 <fprintf@plt>
   16560:	ldr	r0, [r4, #204]	; 0xcc
   16564:	str	r4, [sp, #32]
   16568:	str	r4, [sp, #36]	; 0x24
   1656c:	str	r4, [sp]
   16570:	str	r4, [sp, #4]
   16574:	str	r4, [sp, #8]
   16578:	str	r4, [sp, #12]
   1657c:	str	r4, [sp, #16]
   16580:	str	r4, [sp, #20]
   16584:	str	r4, [sp, #24]
   16588:	str	r4, [sp, #28]
   1658c:	movw	r1, #28485	; 0x6f45
   16590:	movt	r1, #3
   16594:	mov	r2, r4
   16598:	mov	r3, r4
   1659c:	bl	148c4 <fprintf@plt>
   165a0:	ldr	r0, [r4, #204]	; 0xcc
   165a4:	str	r4, [sp, #224]	; 0xe0
   165a8:	str	r4, [sp, #228]	; 0xe4
   165ac:	str	r4, [sp, #192]	; 0xc0
   165b0:	str	r4, [sp, #196]	; 0xc4
   165b4:	str	r4, [sp, #200]	; 0xc8
   165b8:	str	r4, [sp, #204]	; 0xcc
   165bc:	str	r4, [sp, #208]	; 0xd0
   165c0:	str	r4, [sp, #212]	; 0xd4
   165c4:	str	r4, [sp, #216]	; 0xd8
   165c8:	str	r4, [sp, #220]	; 0xdc
   165cc:	str	r4, [sp, #160]	; 0xa0
   165d0:	str	r4, [sp, #164]	; 0xa4
   165d4:	str	r4, [sp, #168]	; 0xa8
   165d8:	str	r4, [sp, #172]	; 0xac
   165dc:	str	r4, [sp, #176]	; 0xb0
   165e0:	str	r4, [sp, #180]	; 0xb4
   165e4:	str	r4, [sp, #184]	; 0xb8
   165e8:	str	r4, [sp, #188]	; 0xbc
   165ec:	str	r4, [sp, #128]	; 0x80
   165f0:	str	r4, [sp, #132]	; 0x84
   165f4:	str	r4, [sp, #136]	; 0x88
   165f8:	str	r4, [sp, #140]	; 0x8c
   165fc:	str	r4, [sp, #144]	; 0x90
   16600:	str	r4, [sp, #148]	; 0x94
   16604:	str	r4, [sp, #152]	; 0x98
   16608:	str	r4, [sp, #156]	; 0x9c
   1660c:	str	r4, [sp, #96]	; 0x60
   16610:	str	r4, [sp, #100]	; 0x64
   16614:	str	r4, [sp, #104]	; 0x68
   16618:	str	r4, [sp, #108]	; 0x6c
   1661c:	str	r4, [sp, #112]	; 0x70
   16620:	str	r4, [sp, #116]	; 0x74
   16624:	str	r4, [sp, #120]	; 0x78
   16628:	str	r4, [sp, #124]	; 0x7c
   1662c:	str	r4, [sp, #64]	; 0x40
   16630:	str	r4, [sp, #68]	; 0x44
   16634:	str	r4, [sp, #72]	; 0x48
   16638:	str	r4, [sp, #76]	; 0x4c
   1663c:	str	r4, [sp, #80]	; 0x50
   16640:	str	r4, [sp, #84]	; 0x54
   16644:	str	r4, [sp, #88]	; 0x58
   16648:	str	r4, [sp, #92]	; 0x5c
   1664c:	str	r4, [sp, #32]
   16650:	str	r4, [sp, #36]	; 0x24
   16654:	str	r4, [sp, #40]	; 0x28
   16658:	str	r4, [sp, #44]	; 0x2c
   1665c:	str	r4, [sp, #48]	; 0x30
   16660:	str	r4, [sp, #52]	; 0x34
   16664:	str	r4, [sp, #56]	; 0x38
   16668:	str	r4, [sp, #60]	; 0x3c
   1666c:	str	r4, [sp]
   16670:	str	r4, [sp, #4]
   16674:	str	r4, [sp, #8]
   16678:	str	r4, [sp, #12]
   1667c:	str	r4, [sp, #16]
   16680:	str	r4, [sp, #20]
   16684:	str	r4, [sp, #24]
   16688:	str	r4, [sp, #28]
   1668c:	movw	r1, #28815	; 0x708f
   16690:	movt	r1, #3
   16694:	mov	r2, r4
   16698:	mov	r3, r4
   1669c:	bl	148c4 <fprintf@plt>
   166a0:	ldr	r0, [r4, #212]	; 0xd4
   166a4:	ldr	r0, [r0, #136]	; 0x88
   166a8:	cmp	r0, #0
   166ac:	beq	166c4 <__flatcc_fb_gen_common_c_header@@Base+0x7b4>
   166b0:	ldr	r0, [r4, #204]	; 0xcc
   166b4:	movw	r1, #30536	; 0x7748
   166b8:	movt	r1, #3
   166bc:	mov	r2, r4
   166c0:	bl	148c4 <fprintf@plt>
   166c4:	ldr	r0, [r4, #204]	; 0xcc
   166c8:	movw	r1, #30562	; 0x7762
   166cc:	movt	r1, #3
   166d0:	mov	r2, r4
   166d4:	mov	r3, r4
   166d8:	bl	148c4 <fprintf@plt>
   166dc:	ldr	r2, [r4, #204]	; 0xcc
   166e0:	ldr	r0, [r4, #212]	; 0xd4
   166e4:	ldr	r0, [r0, #32]
   166e8:	cmp	r0, #0
   166ec:	beq	16708 <__flatcc_fb_gen_common_c_header@@Base+0x7f8>
   166f0:	movw	r1, #23780	; 0x5ce4
   166f4:	movt	r1, #3
   166f8:	mov	r0, r2
   166fc:	mov	r2, r4
   16700:	bl	148c4 <fprintf@plt>
   16704:	b	16714 <__flatcc_fb_gen_common_c_header@@Base+0x804>
   16708:	mov	r0, #10
   1670c:	mov	r1, r2
   16710:	bl	14924 <fputc@plt>
   16714:	ldr	r0, [r4, #204]	; 0xcc
   16718:	movw	r1, #30715	; 0x77fb
   1671c:	movt	r1, #3
   16720:	mov	r2, r4
   16724:	bl	148c4 <fprintf@plt>
   16728:	ldr	r0, [r4, #204]	; 0xcc
   1672c:	str	r4, [sp, #32]
   16730:	str	r4, [sp, #36]	; 0x24
   16734:	str	r4, [sp, #40]	; 0x28
   16738:	str	r4, [sp, #44]	; 0x2c
   1673c:	str	r4, [sp]
   16740:	str	r4, [sp, #4]
   16744:	str	r4, [sp, #8]
   16748:	str	r4, [sp, #12]
   1674c:	str	r4, [sp, #16]
   16750:	str	r4, [sp, #20]
   16754:	str	r4, [sp, #24]
   16758:	str	r4, [sp, #28]
   1675c:	movw	r1, #30842	; 0x787a
   16760:	movt	r1, #3
   16764:	mov	r2, r4
   16768:	mov	r3, r4
   1676c:	bl	148c4 <fprintf@plt>
   16770:	ldr	r0, [r4, #204]	; 0xcc
   16774:	str	r4, [sp]
   16778:	movw	r1, #31683	; 0x7bc3
   1677c:	movt	r1, #3
   16780:	mov	r2, r4
   16784:	mov	r3, r4
   16788:	bl	148c4 <fprintf@plt>
   1678c:	ldr	r0, [r4, #204]	; 0xcc
   16790:	str	r4, [sp]
   16794:	str	r4, [sp, #4]
   16798:	str	r4, [sp, #8]
   1679c:	str	r4, [sp, #12]
   167a0:	movw	r1, #31866	; 0x7c7a
   167a4:	movt	r1, #3
   167a8:	mov	r2, r4
   167ac:	mov	r3, r4
   167b0:	bl	148c4 <fprintf@plt>
   167b4:	ldr	r0, [r4, #204]	; 0xcc
   167b8:	str	r4, [sp]
   167bc:	str	r4, [sp, #4]
   167c0:	movw	r1, #32321	; 0x7e41
   167c4:	movt	r1, #3
   167c8:	mov	r2, r4
   167cc:	mov	r3, r4
   167d0:	bl	148c4 <fprintf@plt>
   167d4:	ldr	r0, [r4, #204]	; 0xcc
   167d8:	str	r4, [sp]
   167dc:	str	r4, [sp, #4]
   167e0:	str	r4, [sp, #8]
   167e4:	str	r4, [sp, #12]
   167e8:	str	r4, [sp, #16]
   167ec:	str	r4, [sp, #20]
   167f0:	str	r4, [sp, #24]
   167f4:	str	r4, [sp, #28]
   167f8:	movw	r1, #32957	; 0x80bd
   167fc:	movt	r1, #3
   16800:	mov	r2, r4
   16804:	mov	r3, r4
   16808:	bl	148c4 <fprintf@plt>
   1680c:	ldr	r1, [r4, #204]	; 0xcc
   16810:	mov	r0, #10
   16814:	sub	sp, fp, #8
   16818:	pop	{r4, sl, fp, lr}
   1681c:	b	14924 <fputc@plt>
   16820:	ldr	r1, [r0, #212]	; 0xd4
   16824:	ldr	r1, [r1, #140]	; 0x8c
   16828:	cmp	r1, #0
   1682c:	bxeq	lr
   16830:	ldr	r3, [r0, #204]	; 0xcc
   16834:	movw	r0, #45596	; 0xb21c
   16838:	movt	r0, #3
   1683c:	mov	r1, #36	; 0x24
   16840:	mov	r2, #1
   16844:	b	14858 <fwrite@plt>

00016848 <__flatcc_fb_gen_c_reader@@Base>:
   16848:	push	{r4, r5, fp, lr}
   1684c:	add	fp, sp, #8
   16850:	sub	sp, sp, #8
   16854:	mov	r4, r0
   16858:	bl	16a40 <__flatcc_fb_gen_c_reader@@Base+0x1f8>
   1685c:	ldr	r0, [r4, #208]	; 0xd0
   16860:	ldr	r5, [r0, #44]	; 0x2c
   16864:	cmp	r5, #0
   16868:	beq	16884 <__flatcc_fb_gen_c_reader@@Base+0x3c>
   1686c:	mov	r0, r4
   16870:	mov	r1, r5
   16874:	bl	16bfc <__flatcc_fb_gen_c_reader@@Base+0x3b4>
   16878:	ldr	r5, [r5, #120]	; 0x78
   1687c:	cmp	r5, #0
   16880:	bne	1686c <__flatcc_fb_gen_c_reader@@Base+0x24>
   16884:	ldr	r1, [r4, #204]	; 0xcc
   16888:	mov	r0, #10
   1688c:	bl	14924 <fputc@plt>
   16890:	ldr	r0, [r4, #208]	; 0xd0
   16894:	ldr	r5, [r0, #40]	; 0x28
   16898:	cmp	r5, #0
   1689c:	bne	168b0 <__flatcc_fb_gen_c_reader@@Base+0x68>
   168a0:	b	168cc <__flatcc_fb_gen_c_reader@@Base+0x84>
   168a4:	ldr	r5, [r5]
   168a8:	cmp	r5, #0
   168ac:	beq	168cc <__flatcc_fb_gen_c_reader@@Base+0x84>
   168b0:	ldrh	r0, [r5, #8]
   168b4:	cmp	r0, #0
   168b8:	bne	168a4 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   168bc:	mov	r0, r4
   168c0:	mov	r1, r5
   168c4:	bl	16bfc <__flatcc_fb_gen_c_reader@@Base+0x3b4>
   168c8:	b	168a4 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   168cc:	ldr	r0, [r4, #208]	; 0xd0
   168d0:	ldr	r5, [r0, #40]	; 0x28
   168d4:	cmp	r5, #0
   168d8:	beq	168fc <__flatcc_fb_gen_c_reader@@Base+0xb4>
   168dc:	ldrh	r0, [r5, #8]
   168e0:	cmp	r0, #1
   168e4:	movls	r0, r4
   168e8:	movls	r1, r5
   168ec:	blls	16d50 <__flatcc_fb_gen_c_reader@@Base+0x508>
   168f0:	ldr	r5, [r5]
   168f4:	cmp	r5, #0
   168f8:	bne	168dc <__flatcc_fb_gen_c_reader@@Base+0x94>
   168fc:	ldr	r1, [r4, #204]	; 0xcc
   16900:	mov	r0, #10
   16904:	bl	14924 <fputc@plt>
   16908:	ldr	r0, [r4, #208]	; 0xd0
   1690c:	ldr	r5, [r0, #40]	; 0x28
   16910:	cmp	r5, #0
   16914:	beq	16938 <__flatcc_fb_gen_c_reader@@Base+0xf0>
   16918:	ldrh	r0, [r5, #8]
   1691c:	cmp	r0, #3
   16920:	moveq	r0, r4
   16924:	moveq	r1, r5
   16928:	bleq	16e38 <__flatcc_fb_gen_c_reader@@Base+0x5f0>
   1692c:	ldr	r5, [r5]
   16930:	cmp	r5, #0
   16934:	bne	16918 <__flatcc_fb_gen_c_reader@@Base+0xd0>
   16938:	ldr	r1, [r4, #204]	; 0xcc
   1693c:	mov	r0, #10
   16940:	bl	14924 <fputc@plt>
   16944:	ldr	r0, [r4, #208]	; 0xd0
   16948:	ldr	r5, [r0, #44]	; 0x2c
   1694c:	cmp	r5, #0
   16950:	beq	1696c <__flatcc_fb_gen_c_reader@@Base+0x124>
   16954:	mov	r0, r4
   16958:	mov	r1, r5
   1695c:	bl	17218 <__flatcc_fb_gen_c_reader@@Base+0x9d0>
   16960:	ldr	r5, [r5, #120]	; 0x78
   16964:	cmp	r5, #0
   16968:	bne	16954 <__flatcc_fb_gen_c_reader@@Base+0x10c>
   1696c:	ldr	r0, [r4, #208]	; 0xd0
   16970:	ldr	r5, [r0, #40]	; 0x28
   16974:	cmp	r5, #0
   16978:	bne	16998 <__flatcc_fb_gen_c_reader@@Base+0x150>
   1697c:	b	169d0 <__flatcc_fb_gen_c_reader@@Base+0x188>
   16980:	mov	r0, r4
   16984:	mov	r1, r5
   16988:	bl	17b14 <__flatcc_fb_gen_c_reader@@Base+0x12cc>
   1698c:	ldr	r5, [r5]
   16990:	cmp	r5, #0
   16994:	beq	169d0 <__flatcc_fb_gen_c_reader@@Base+0x188>
   16998:	ldrh	r0, [r5, #8]
   1699c:	sub	r1, r0, #1
   169a0:	cmp	r1, #3
   169a4:	bcc	1698c <__flatcc_fb_gen_c_reader@@Base+0x144>
   169a8:	cmp	r0, #0
   169ac:	beq	16980 <__flatcc_fb_gen_c_reader@@Base+0x138>
   169b0:	cmp	r0, #4
   169b4:	bne	169f0 <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   169b8:	mov	r0, r4
   169bc:	mov	r1, r5
   169c0:	bl	16e38 <__flatcc_fb_gen_c_reader@@Base+0x5f0>
   169c4:	ldr	r5, [r5]
   169c8:	cmp	r5, #0
   169cc:	bne	16998 <__flatcc_fb_gen_c_reader@@Base+0x150>
   169d0:	ldr	r1, [r4, #204]	; 0xcc
   169d4:	mov	r0, #10
   169d8:	bl	14924 <fputc@plt>
   169dc:	mov	r0, r4
   169e0:	bl	185c0 <__flatcc_fb_gen_c_reader@@Base+0x1d78>
   169e4:	mov	r0, #0
   169e8:	sub	sp, fp, #8
   169ec:	pop	{r4, r5, fp, pc}
   169f0:	movw	r0, #4272	; 0x10b0
   169f4:	movt	r0, #6
   169f8:	ldr	r0, [r0]
   169fc:	movw	r1, #21466	; 0x53da
   16a00:	movt	r1, #3
   16a04:	str	r1, [sp]
   16a08:	movw	r1, #21375	; 0x537f
   16a0c:	movt	r1, #3
   16a10:	movw	r4, #21386	; 0x538a
   16a14:	movt	r4, #3
   16a18:	mov	r2, r4
   16a1c:	movw	r3, #1672	; 0x688
   16a20:	bl	148c4 <fprintf@plt>
   16a24:	movw	r0, #25261	; 0x62ad
   16a28:	movt	r0, #4
   16a2c:	movw	r3, #21510	; 0x5406
   16a30:	movt	r3, #3
   16a34:	mov	r1, r4
   16a38:	movw	r2, #1672	; 0x688
   16a3c:	bl	14984 <__assert_fail@plt>
   16a40:	push	{r4, r5, r6, sl, fp, lr}
   16a44:	add	fp, sp, #16
   16a48:	sub	sp, sp, #8
   16a4c:	mov	r4, r0
   16a50:	ldr	r0, [r0, #204]	; 0xcc
   16a54:	ldr	r1, [r4, #208]	; 0xd0
   16a58:	ldr	r2, [r4, #212]	; 0xd4
   16a5c:	ldr	r6, [r2, #132]	; 0x84
   16a60:	ldr	r2, [r1, #164]	; 0xa4
   16a64:	movw	r1, #45633	; 0xb241
   16a68:	movt	r1, #3
   16a6c:	mov	r3, r2
   16a70:	bl	148c4 <fprintf@plt>
   16a74:	ldr	r3, [r4, #204]	; 0xcc
   16a78:	movw	r0, #21078	; 0x5256
   16a7c:	movt	r0, #3
   16a80:	mov	r1, #81	; 0x51
   16a84:	mov	r2, #1
   16a88:	bl	14858 <fwrite@plt>
   16a8c:	add	r5, r4, #102	; 0x66
   16a90:	ldr	r3, [r4, #204]	; 0xcc
   16a94:	cmp	r6, #0
   16a98:	beq	16af4 <__flatcc_fb_gen_c_reader@@Base+0x2ac>
   16a9c:	movw	r0, #45674	; 0xb26a
   16aa0:	movt	r0, #3
   16aa4:	movw	r1, #443	; 0x1bb
   16aa8:	mov	r2, #1
   16aac:	bl	14858 <fwrite@plt>
   16ab0:	ldr	r0, [r4, #204]	; 0xcc
   16ab4:	movw	r1, #46118	; 0xb426
   16ab8:	movt	r1, #3
   16abc:	mov	r2, r5
   16ac0:	mov	r3, r4
   16ac4:	bl	148c4 <fprintf@plt>
   16ac8:	movw	r1, #49405	; 0xc0fd
   16acc:	movt	r1, #4
   16ad0:	movw	r2, #46182	; 0xb466
   16ad4:	movt	r2, #3
   16ad8:	mov	r0, r4
   16adc:	bl	159b4 <__flatcc_fb_gen_c_includes@@Base>
   16ae0:	ldr	r3, [r4, #204]	; 0xcc
   16ae4:	movw	r0, #46192	; 0xb470
   16ae8:	movt	r0, #3
   16aec:	mov	r1, #39	; 0x27
   16af0:	b	16b4c <__flatcc_fb_gen_c_reader@@Base+0x304>
   16af4:	movw	r1, #46118	; 0xb426
   16af8:	movt	r1, #3
   16afc:	mov	r0, r3
   16b00:	mov	r2, r5
   16b04:	mov	r3, r4
   16b08:	bl	148c4 <fprintf@plt>
   16b0c:	movw	r1, #49405	; 0xc0fd
   16b10:	movt	r1, #4
   16b14:	movw	r2, #46182	; 0xb466
   16b18:	movt	r2, #3
   16b1c:	mov	r0, r4
   16b20:	bl	159b4 <__flatcc_fb_gen_c_includes@@Base>
   16b24:	ldr	r3, [r4, #204]	; 0xcc
   16b28:	movw	r0, #46192	; 0xb470
   16b2c:	movt	r0, #3
   16b30:	mov	r1, #39	; 0x27
   16b34:	mov	r2, #1
   16b38:	bl	14858 <fwrite@plt>
   16b3c:	ldr	r3, [r4, #204]	; 0xcc
   16b40:	movw	r0, #46232	; 0xb498
   16b44:	movt	r0, #3
   16b48:	mov	r1, #58	; 0x3a
   16b4c:	mov	r2, #1
   16b50:	bl	14858 <fwrite@plt>
   16b54:	mov	r0, r4
   16b58:	bl	15fc4 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   16b5c:	ldr	r0, [r4, #204]	; 0xcc
   16b60:	ldr	r1, [r4, #208]	; 0xd0
   16b64:	ldrh	r2, [r1, #16]
   16b68:	cmp	r2, #2
   16b6c:	bne	16b88 <__flatcc_fb_gen_c_reader@@Base+0x340>
   16b70:	ldrd	r2, [r1, #8]
   16b74:	str	r3, [sp]
   16b78:	str	r2, [sp, #4]
   16b7c:	movw	r1, #46291	; 0xb4d3
   16b80:	movt	r1, #3
   16b84:	b	16b90 <__flatcc_fb_gen_c_reader@@Base+0x348>
   16b88:	movw	r1, #46340	; 0xb504
   16b8c:	movt	r1, #3
   16b90:	mov	r2, r4
   16b94:	mov	r3, r4
   16b98:	bl	148c4 <fprintf@plt>
   16b9c:	ldr	r0, [r4, #204]	; 0xcc
   16ba0:	ldr	r1, [r4, #208]	; 0xd0
   16ba4:	ldrh	r2, [r1, #32]
   16ba8:	cmp	r2, #2
   16bac:	bne	16bc8 <__flatcc_fb_gen_c_reader@@Base+0x380>
   16bb0:	ldrd	r2, [r1, #24]
   16bb4:	str	r3, [sp]
   16bb8:	str	r2, [sp, #4]
   16bbc:	movw	r1, #46392	; 0xb538
   16bc0:	movt	r1, #3
   16bc4:	b	16bdc <__flatcc_fb_gen_c_reader@@Base+0x394>
   16bc8:	ldr	r1, [r4, #212]	; 0xd4
   16bcc:	ldr	r1, [r1, #104]	; 0x68
   16bd0:	str	r1, [sp]
   16bd4:	movw	r1, #46440	; 0xb568
   16bd8:	movt	r1, #3
   16bdc:	mov	r2, r4
   16be0:	mov	r3, r4
   16be4:	bl	148c4 <fprintf@plt>
   16be8:	ldr	r1, [r4, #204]	; 0xcc
   16bec:	mov	r0, #10
   16bf0:	sub	sp, fp, #16
   16bf4:	pop	{r4, r5, r6, sl, fp, lr}
   16bf8:	b	14924 <fputc@plt>
   16bfc:	push	{r4, r5, fp, lr}
   16c00:	add	fp, sp, #8
   16c04:	sub	sp, sp, #224	; 0xe0
   16c08:	mov	r5, r1
   16c0c:	mov	r4, r0
   16c10:	mov	r0, sp
   16c14:	mov	r1, #0
   16c18:	mov	r2, #220	; 0xdc
   16c1c:	bl	148dc <memset@plt>
   16c20:	ldrh	r0, [r5, #8]
   16c24:	cmp	r0, #2
   16c28:	bcs	16d30 <__flatcc_fb_gen_c_reader@@Base+0x4e8>
   16c2c:	mov	r1, sp
   16c30:	mov	r0, r5
   16c34:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   16c38:	ldrh	r0, [r5, #8]
   16c3c:	cmp	r0, #1
   16c40:	bne	16c6c <__flatcc_fb_gen_c_reader@@Base+0x424>
   16c44:	ldr	r0, [r4, #204]	; 0xcc
   16c48:	ldrd	r2, [r5, #112]	; 0x70
   16c4c:	orrs	r1, r2, r3
   16c50:	beq	16cb4 <__flatcc_fb_gen_c_reader@@Base+0x46c>
   16c54:	movw	r1, #46657	; 0xb641
   16c58:	movt	r1, #3
   16c5c:	mov	r2, sp
   16c60:	mov	r3, r2
   16c64:	bl	148c4 <fprintf@plt>
   16c68:	b	16cc4 <__flatcc_fb_gen_c_reader@@Base+0x47c>
   16c6c:	ldr	r0, [r4, #204]	; 0xcc
   16c70:	movw	r1, #46816	; 0xb6e0
   16c74:	movt	r1, #3
   16c78:	mov	r5, sp
   16c7c:	mov	r2, r5
   16c80:	mov	r3, r5
   16c84:	bl	148c4 <fprintf@plt>
   16c88:	ldr	r0, [r4, #204]	; 0xcc
   16c8c:	movw	r1, #46860	; 0xb70c
   16c90:	movt	r1, #3
   16c94:	mov	r2, r4
   16c98:	mov	r3, r5
   16c9c:	bl	148c4 <fprintf@plt>
   16ca0:	ldr	r0, [r4, #204]	; 0xcc
   16ca4:	movw	r1, #46898	; 0xb732
   16ca8:	movt	r1, #3
   16cac:	mov	r2, r4
   16cb0:	b	16d20 <__flatcc_fb_gen_c_reader@@Base+0x4d8>
   16cb4:	movw	r1, #46618	; 0xb61a
   16cb8:	movt	r1, #3
   16cbc:	mov	r2, sp
   16cc0:	bl	148c4 <fprintf@plt>
   16cc4:	ldr	r0, [r4, #204]	; 0xcc
   16cc8:	movw	r1, #46682	; 0xb65a
   16ccc:	movt	r1, #3
   16cd0:	mov	r5, sp
   16cd4:	mov	r2, r5
   16cd8:	mov	r3, r5
   16cdc:	bl	148c4 <fprintf@plt>
   16ce0:	ldr	r0, [r4, #204]	; 0xcc
   16ce4:	movw	r1, #46716	; 0xb67c
   16ce8:	movt	r1, #3
   16cec:	mov	r2, r5
   16cf0:	mov	r3, r5
   16cf4:	bl	148c4 <fprintf@plt>
   16cf8:	ldr	r0, [r4, #204]	; 0xcc
   16cfc:	movw	r1, #46752	; 0xb6a0
   16d00:	movt	r1, #3
   16d04:	mov	r2, r5
   16d08:	mov	r3, r5
   16d0c:	bl	148c4 <fprintf@plt>
   16d10:	ldr	r0, [r4, #204]	; 0xcc
   16d14:	movw	r1, #46783	; 0xb6bf
   16d18:	movt	r1, #3
   16d1c:	mov	r2, r5
   16d20:	mov	r3, r5
   16d24:	bl	148c4 <fprintf@plt>
   16d28:	sub	sp, fp, #8
   16d2c:	pop	{r4, r5, fp, pc}
   16d30:	movw	r0, #46493	; 0xb59d
   16d34:	movt	r0, #3
   16d38:	movw	r1, #21386	; 0x538a
   16d3c:	movt	r1, #3
   16d40:	movw	r3, #46559	; 0xb5df
   16d44:	movt	r3, #3
   16d48:	movw	r2, #863	; 0x35f
   16d4c:	bl	14984 <__assert_fail@plt>
   16d50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16d54:	add	fp, sp, #24
   16d58:	sub	sp, sp, #248	; 0xf8
   16d5c:	mov	r5, r1
   16d60:	mov	r4, r0
   16d64:	add	r6, sp, #8
   16d68:	mov	r7, #0
   16d6c:	mov	r0, r6
   16d70:	mov	r1, #0
   16d74:	mov	r2, #220	; 0xdc
   16d78:	bl	148dc <memset@plt>
   16d7c:	mov	r0, r5
   16d80:	mov	r1, r6
   16d84:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   16d88:	ldr	r5, [r5, #88]	; 0x58
   16d8c:	ldr	r0, [r4, #204]	; 0xcc
   16d90:	str	r4, [sp]
   16d94:	movw	r1, #46938	; 0xb75a
   16d98:	movt	r1, #3
   16d9c:	mov	r2, r6
   16da0:	mov	r3, r6
   16da4:	bl	148c4 <fprintf@plt>
   16da8:	ldr	r0, [r4, #204]	; 0xcc
   16dac:	str	r5, [sp]
   16db0:	movw	r1, #47003	; 0xb79b
   16db4:	movt	r1, #3
   16db8:	mov	r2, r6
   16dbc:	mov	r3, r4
   16dc0:	bl	148c4 <fprintf@plt>
   16dc4:	sub	r3, fp, #41	; 0x29
   16dc8:	movw	r0, #30812	; 0x785c
   16dcc:	add	r1, r3, r7, lsl #2
   16dd0:	strh	r0, [r1]
   16dd4:	and	r2, r5, #15
   16dd8:	cmp	r2, #9
   16ddc:	mov	r6, #48	; 0x30
   16de0:	movwhi	r6, #87	; 0x57
   16de4:	add	r2, r6, r2
   16de8:	strb	r2, [r1, #3]
   16dec:	ubfx	r2, r5, #4, #4
   16df0:	cmp	r2, #9
   16df4:	mov	r6, #48	; 0x30
   16df8:	movwhi	r6, #87	; 0x57
   16dfc:	add	r2, r6, r2
   16e00:	strb	r2, [r1, #2]
   16e04:	add	r7, r7, #1
   16e08:	lsr	r5, r5, #8
   16e0c:	cmp	r7, #4
   16e10:	bne	16dcc <__flatcc_fb_gen_c_reader@@Base+0x584>
   16e14:	mov	r0, #0
   16e18:	strb	r0, [r3, r7, lsl #2]
   16e1c:	ldr	r0, [r4, #204]	; 0xcc
   16e20:	movw	r1, #47044	; 0xb7c4
   16e24:	movt	r1, #3
   16e28:	add	r2, sp, #8
   16e2c:	bl	148c4 <fprintf@plt>
   16e30:	sub	sp, fp, #24
   16e34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e3c:	add	fp, sp, #28
   16e40:	sub	sp, sp, #356	; 0x164
   16e44:	mov	r5, r1
   16e48:	mov	r4, r0
   16e4c:	add	r8, sp, #24
   16e50:	mov	r0, r8
   16e54:	mov	r1, #0
   16e58:	mov	r2, #220	; 0xdc
   16e5c:	bl	148dc <memset@plt>
   16e60:	ldrh	r0, [r5, #8]
   16e64:	sub	r0, r0, #3
   16e68:	uxth	r0, r0
   16e6c:	cmp	r0, #2
   16e70:	bcs	171d8 <__flatcc_fb_gen_c_reader@@Base+0x990>
   16e74:	ldrh	r0, [r5, #48]	; 0x30
   16e78:	cmp	r0, #8
   16e7c:	bne	171f8 <__flatcc_fb_gen_c_reader@@Base+0x9b0>
   16e80:	ldr	r6, [r5, #40]	; 0x28
   16e84:	mov	r0, r6
   16e88:	mov	r1, r4
   16e8c:	bl	189ac <__flatcc_fb_gen_c_reader@@Base+0x2164>
   16e90:	mov	r9, r0
   16e94:	mov	r0, r6
   16e98:	bl	189c4 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   16e9c:	mov	r6, r0
   16ea0:	ldr	r0, [r5, #112]	; 0x70
   16ea4:	str	r0, [sp, #20]
   16ea8:	ldrh	r7, [r5, #8]
   16eac:	mov	r0, r5
   16eb0:	mov	r1, r8
   16eb4:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   16eb8:	ldr	r2, [r5, #32]
   16ebc:	movw	r1, #21632	; 0x5480
   16ec0:	movt	r1, #3
   16ec4:	mov	r0, r4
   16ec8:	bl	18a3c <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   16ecc:	movw	r0, #47224	; 0xb878
   16ed0:	movt	r0, #3
   16ed4:	movw	sl, #58987	; 0xe66b
   16ed8:	movt	sl, #4
   16edc:	cmp	r7, #3
   16ee0:	movne	sl, r0
   16ee4:	ldr	r0, [r4, #204]	; 0xcc
   16ee8:	stm	sp, {r8, sl}
   16eec:	movw	r1, #47235	; 0xb883
   16ef0:	movt	r1, #3
   16ef4:	mov	r2, r9
   16ef8:	mov	r3, r6
   16efc:	bl	148c4 <fprintf@plt>
   16f00:	ldr	r0, [r4, #204]	; 0xcc
   16f04:	ldr	r1, [sp, #20]
   16f08:	lsl	r1, r1, #3
   16f0c:	stm	sp, {r8, sl}
   16f10:	str	r1, [sp, #8]
   16f14:	movw	r1, #47258	; 0xb89a
   16f18:	movt	r1, #3
   16f1c:	mov	r2, r4
   16f20:	mov	r6, r8
   16f24:	mov	r3, r8
   16f28:	bl	148c4 <fprintf@plt>
   16f2c:	str	r7, [sp, #16]
   16f30:	cmp	r7, #3
   16f34:	beq	16f54 <__flatcc_fb_gen_c_reader@@Base+0x70c>
   16f38:	ldr	r0, [r4, #204]	; 0xcc
   16f3c:	str	r6, [sp]
   16f40:	movw	r1, #47300	; 0xb8c4
   16f44:	movt	r1, #3
   16f48:	mov	r2, r4
   16f4c:	mov	r3, r4
   16f50:	bl	148c4 <fprintf@plt>
   16f54:	ldr	r7, [r5, #20]
   16f58:	cmp	r7, #0
   16f5c:	beq	16fcc <__flatcc_fb_gen_c_reader@@Base+0x784>
   16f60:	sub	r8, fp, #136	; 0x88
   16f64:	movw	r9, #47326	; 0xb8de
   16f68:	movt	r9, #3
   16f6c:	ldr	r2, [r7, #68]	; 0x44
   16f70:	mov	r0, r4
   16f74:	movw	r1, #21632	; 0x5480
   16f78:	movt	r1, #3
   16f7c:	bl	18a3c <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   16f80:	mov	r0, r7
   16f84:	sub	r1, fp, #140	; 0x8c
   16f88:	sub	r2, fp, #36	; 0x24
   16f8c:	bl	18af8 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   16f90:	ldr	r0, [r5, #40]	; 0x28
   16f94:	add	r1, r7, #48	; 0x30
   16f98:	mov	r2, r8
   16f9c:	bl	18b00 <__flatcc_fb_gen_c_reader@@Base+0x22b8>
   16fa0:	ldr	r0, [r4, #204]	; 0xcc
   16fa4:	ldr	r3, [fp, #-140]	; 0xffffff74
   16fa8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16fac:	stm	sp, {r1, r6, sl}
   16fb0:	str	r8, [sp, #12]
   16fb4:	mov	r1, r9
   16fb8:	mov	r2, r6
   16fbc:	bl	148c4 <fprintf@plt>
   16fc0:	ldr	r7, [r7]
   16fc4:	cmp	r7, #0
   16fc8:	bne	16f6c <__flatcc_fb_gen_c_reader@@Base+0x724>
   16fcc:	str	r5, [sp, #20]
   16fd0:	ldr	r1, [r4, #204]	; 0xcc
   16fd4:	mov	r0, #10
   16fd8:	bl	14924 <fputc@plt>
   16fdc:	ldr	r0, [r4, #204]	; 0xcc
   16fe0:	ldr	r1, [sp, #16]
   16fe4:	cmp	r1, #3
   16fe8:	beq	17014 <__flatcc_fb_gen_c_reader@@Base+0x7cc>
   16fec:	movw	r1, #47357	; 0xb8fd
   16ff0:	movt	r1, #3
   16ff4:	add	r2, sp, #24
   16ff8:	mov	r3, r2
   16ffc:	bl	148c4 <fprintf@plt>
   17000:	ldr	r3, [r4, #204]	; 0xcc
   17004:	movw	r0, #44030	; 0xabfe
   17008:	movt	r0, #4
   1700c:	mov	r1, #20
   17010:	b	17038 <__flatcc_fb_gen_c_reader@@Base+0x7f0>
   17014:	movw	r1, #47421	; 0xb93d
   17018:	movt	r1, #3
   1701c:	add	r2, sp, #24
   17020:	mov	r3, r2
   17024:	bl	148c4 <fprintf@plt>
   17028:	ldr	r3, [r4, #204]	; 0xcc
   1702c:	movw	r0, #47475	; 0xb973
   17030:	movt	r0, #3
   17034:	mov	r1, #21
   17038:	mov	r2, #1
   1703c:	bl	14858 <fwrite@plt>
   17040:	ldr	r0, [sp, #20]
   17044:	ldr	r5, [r0, #20]
   17048:	cmp	r5, #0
   1704c:	beq	170b4 <__flatcc_fb_gen_c_reader@@Base+0x86c>
   17050:	sub	r8, fp, #140	; 0x8c
   17054:	sub	r9, fp, #36	; 0x24
   17058:	movw	sl, #47549	; 0xb9bd
   1705c:	movt	sl, #3
   17060:	movw	r7, #47497	; 0xb989
   17064:	movt	r7, #3
   17068:	add	r6, sp, #24
   1706c:	mov	r0, r5
   17070:	mov	r1, r8
   17074:	mov	r2, r9
   17078:	bl	18af8 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   1707c:	ldr	r0, [r4, #204]	; 0xcc
   17080:	ldrh	r1, [r5, #10]
   17084:	ldr	r3, [fp, #-140]	; 0xffffff74
   17088:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1708c:	stm	sp, {r2, r3}
   17090:	str	r2, [sp, #8]
   17094:	tst	r1, #4
   17098:	mov	r1, r7
   1709c:	moveq	r1, sl
   170a0:	mov	r2, r6
   170a4:	bl	148c4 <fprintf@plt>
   170a8:	ldr	r5, [r5]
   170ac:	cmp	r5, #0
   170b0:	bne	1706c <__flatcc_fb_gen_c_reader@@Base+0x824>
   170b4:	ldr	r3, [r4, #204]	; 0xcc
   170b8:	movw	r0, #47583	; 0xb9df
   170bc:	movt	r0, #3
   170c0:	mov	r1, #32
   170c4:	mov	r2, #1
   170c8:	bl	14858 <fwrite@plt>
   170cc:	ldr	r1, [r4, #204]	; 0xcc
   170d0:	mov	r0, #10
   170d4:	bl	14924 <fputc@plt>
   170d8:	ldr	r0, [r4, #204]	; 0xcc
   170dc:	ldr	r1, [sp, #16]
   170e0:	cmp	r1, #3
   170e4:	beq	17110 <__flatcc_fb_gen_c_reader@@Base+0x8c8>
   170e8:	movw	r1, #47616	; 0xba00
   170ec:	movt	r1, #3
   170f0:	add	r2, sp, #24
   170f4:	mov	r3, r2
   170f8:	bl	148c4 <fprintf@plt>
   170fc:	ldr	r3, [r4, #204]	; 0xcc
   17100:	movw	r0, #44030	; 0xabfe
   17104:	movt	r0, #4
   17108:	mov	r1, #20
   1710c:	b	17134 <__flatcc_fb_gen_c_reader@@Base+0x8ec>
   17110:	movw	r1, #47676	; 0xba3c
   17114:	movt	r1, #3
   17118:	add	r2, sp, #24
   1711c:	mov	r3, r2
   17120:	bl	148c4 <fprintf@plt>
   17124:	ldr	r3, [r4, #204]	; 0xcc
   17128:	movw	r0, #47475	; 0xb973
   1712c:	movt	r0, #3
   17130:	mov	r1, #21
   17134:	mov	r2, #1
   17138:	bl	14858 <fwrite@plt>
   1713c:	ldr	r0, [sp, #20]
   17140:	ldr	r5, [r0, #20]
   17144:	cmp	r5, #0
   17148:	beq	171ac <__flatcc_fb_gen_c_reader@@Base+0x964>
   1714c:	sub	r8, fp, #140	; 0x8c
   17150:	sub	r9, fp, #36	; 0x24
   17154:	movw	sl, #47779	; 0xbaa3
   17158:	movt	sl, #3
   1715c:	movw	r7, #47732	; 0xba74
   17160:	movt	r7, #3
   17164:	add	r6, sp, #24
   17168:	mov	r0, r5
   1716c:	mov	r1, r8
   17170:	mov	r2, r9
   17174:	bl	18af8 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   17178:	ldr	r0, [r4, #204]	; 0xcc
   1717c:	ldrh	r1, [r5, #10]
   17180:	ldr	r3, [fp, #-140]	; 0xffffff74
   17184:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17188:	str	r2, [sp]
   1718c:	tst	r1, #4
   17190:	mov	r1, r7
   17194:	moveq	r1, sl
   17198:	mov	r2, r6
   1719c:	bl	148c4 <fprintf@plt>
   171a0:	ldr	r5, [r5]
   171a4:	cmp	r5, #0
   171a8:	bne	17168 <__flatcc_fb_gen_c_reader@@Base+0x920>
   171ac:	ldr	r3, [r4, #204]	; 0xcc
   171b0:	movw	r0, #47808	; 0xbac0
   171b4:	movt	r0, #3
   171b8:	mov	r1, #31
   171bc:	mov	r2, #1
   171c0:	bl	14858 <fwrite@plt>
   171c4:	ldr	r1, [r4, #204]	; 0xcc
   171c8:	mov	r0, #10
   171cc:	bl	14924 <fputc@plt>
   171d0:	sub	sp, fp, #28
   171d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171d8:	movw	r0, #47077	; 0xb7e5
   171dc:	movt	r0, #3
   171e0:	movw	r1, #21386	; 0x538a
   171e4:	movt	r1, #3
   171e8:	movw	r3, #47141	; 0xb825
   171ec:	movt	r3, #3
   171f0:	movw	r2, #1204	; 0x4b4
   171f4:	bl	14984 <__assert_fail@plt>
   171f8:	movw	r0, #47192	; 0xb858
   171fc:	movt	r0, #3
   17200:	movw	r1, #21386	; 0x538a
   17204:	movt	r1, #3
   17208:	movw	r3, #47141	; 0xb825
   1720c:	movt	r3, #3
   17210:	movw	r2, #1205	; 0x4b5
   17214:	bl	14984 <__assert_fail@plt>
   17218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1721c:	add	fp, sp, #28
   17220:	sub	sp, sp, #516	; 0x204
   17224:	mov	r4, r1
   17228:	mov	r9, r0
   1722c:	ldr	r0, [r0, #212]	; 0xd4
   17230:	ldr	r8, [r0, #132]	; 0x84
   17234:	sub	r0, fp, #264	; 0x108
   17238:	mov	r1, #0
   1723c:	mov	r2, #220	; 0xdc
   17240:	bl	148dc <memset@plt>
   17244:	add	sl, sp, #56	; 0x38
   17248:	mov	r0, sl
   1724c:	mov	r1, #0
   17250:	mov	r2, #220	; 0xdc
   17254:	bl	148dc <memset@plt>
   17258:	ldrh	r0, [r4, #8]
   1725c:	cmp	r0, #1
   17260:	bne	17ab4 <__flatcc_fb_gen_c_reader@@Base+0x126c>
   17264:	add	r0, r4, #96	; 0x60
   17268:	mov	r2, r4
   1726c:	ldrh	r1, [r2, #104]!	; 0x68
   17270:	str	r2, [sp, #44]	; 0x2c
   17274:	cmp	r1, #0
   17278:	bne	17288 <__flatcc_fb_gen_c_reader@@Base+0xa40>
   1727c:	ldrd	r2, [r0]
   17280:	orrs	r1, r2, r3
   17284:	bne	17ad4 <__flatcc_fb_gen_c_reader@@Base+0x128c>
   17288:	add	r6, r4, #112	; 0x70
   1728c:	ldrd	r2, [r6]
   17290:	orrs	r1, r2, r3
   17294:	bne	172a4 <__flatcc_fb_gen_c_reader@@Base+0xa5c>
   17298:	ldrd	r0, [r0]
   1729c:	orrs	r0, r0, r1
   172a0:	bne	17af4 <__flatcc_fb_gen_c_reader@@Base+0x12ac>
   172a4:	sub	r5, fp, #264	; 0x108
   172a8:	mov	r0, r4
   172ac:	mov	r1, r5
   172b0:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   172b4:	ldr	r2, [r4, #32]
   172b8:	movw	r1, #21632	; 0x5480
   172bc:	movt	r1, #3
   172c0:	mov	r0, r9
   172c4:	bl	18a3c <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   172c8:	ldrd	r0, [r6]
   172cc:	orrs	r0, r0, r1
   172d0:	str	r9, [sp, #48]	; 0x30
   172d4:	beq	17534 <__flatcc_fb_gen_c_reader@@Base+0xcec>
   172d8:	cmp	r8, #0
   172dc:	beq	172f8 <__flatcc_fb_gen_c_reader@@Base+0xab0>
   172e0:	ldr	r3, [r9, #204]	; 0xcc
   172e4:	movw	r0, #48733	; 0xbe5d
   172e8:	movt	r0, #3
   172ec:	mov	r1, #16
   172f0:	mov	r2, #1
   172f4:	bl	14858 <fwrite@plt>
   172f8:	str	r6, [sp, #28]
   172fc:	ldr	r0, [r9, #204]	; 0xcc
   17300:	movw	r1, #48750	; 0xbe6e
   17304:	movt	r1, #3
   17308:	sub	r2, fp, #264	; 0x108
   1730c:	bl	148c4 <fprintf@plt>
   17310:	str	r4, [sp, #32]
   17314:	ldr	r5, [r4, #20]
   17318:	cmp	r5, #0
   1731c:	beq	17594 <__flatcc_fb_gen_c_reader@@Base+0xd4c>
   17320:	mov	r4, #0
   17324:	mov	r6, #0
   17328:	mov	r0, #0
   1732c:	str	r0, [sp, #40]	; 0x28
   17330:	b	17378 <__flatcc_fb_gen_c_reader@@Base+0xb30>
   17334:	movw	r1, #48907	; 0xbf0b
   17338:	movt	r1, #3
   1733c:	ldr	r2, [sp, #36]	; 0x24
   17340:	bl	148c4 <fprintf@plt>
   17344:	mov	r1, r6
   17348:	ldr	r0, [r9, #204]	; 0xcc
   1734c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17350:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17354:	bl	148c4 <fprintf@plt>
   17358:	add	r4, r7, #8
   1735c:	ldr	r6, [sp, #52]	; 0x34
   17360:	ldr	r0, [r7]
   17364:	ldr	r1, [r4]
   17368:	add	r4, r1, r0
   1736c:	ldr	r5, [r5]
   17370:	cmp	r5, #0
   17374:	beq	175a0 <__flatcc_fb_gen_c_reader@@Base+0xd58>
   17378:	str	r6, [sp, #52]	; 0x34
   1737c:	ldr	r2, [r5, #68]	; 0x44
   17380:	mov	r0, r9
   17384:	movw	r1, #45542	; 0xb1e6
   17388:	movt	r1, #4
   1738c:	bl	18a3c <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   17390:	mov	r0, r5
   17394:	sub	r1, fp, #36	; 0x24
   17398:	sub	r2, fp, #40	; 0x28
   1739c:	bl	18af8 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   173a0:	cmp	r4, #0
   173a4:	ldr	r0, [sp, #44]	; 0x2c
   173a8:	addne	r0, r5, #74	; 0x4a
   173ac:	ldrh	sl, [r0]
   173b0:	add	r7, r5, #80	; 0x50
   173b4:	cmp	r8, #0
   173b8:	ldrne	r0, [r7]
   173bc:	subsne	r3, r0, r4
   173c0:	beq	173e4 <__flatcc_fb_gen_c_reader@@Base+0xb9c>
   173c4:	ldr	r0, [r9, #204]	; 0xcc
   173c8:	movw	r1, #48763	; 0xbe7b
   173cc:	movt	r1, #3
   173d0:	ldr	r4, [sp, #40]	; 0x28
   173d4:	mov	r2, r4
   173d8:	bl	148c4 <fprintf@plt>
   173dc:	add	r4, r4, #1
   173e0:	str	r4, [sp, #40]	; 0x28
   173e4:	ldrb	r0, [r5, #72]	; 0x48
   173e8:	tst	r0, #4
   173ec:	bne	17458 <__flatcc_fb_gen_c_reader@@Base+0xc10>
   173f0:	ldrh	r0, [r5, #24]
   173f4:	cmp	r0, #14
   173f8:	beq	17490 <__flatcc_fb_gen_c_reader@@Base+0xc48>
   173fc:	movw	r6, #49111	; 0xbfd7
   17400:	movt	r6, #3
   17404:	cmp	r0, #8
   17408:	bne	17a28 <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   1740c:	ldr	r9, [r5, #16]
   17410:	mov	r0, r9
   17414:	ldr	r4, [sp, #48]	; 0x30
   17418:	mov	r1, r4
   1741c:	bl	189ac <__flatcc_fb_gen_c_reader@@Base+0x2164>
   17420:	str	r0, [sp, #36]	; 0x24
   17424:	mov	r0, r9
   17428:	mov	r9, r4
   1742c:	bl	189c4 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17430:	mov	r3, r0
   17434:	ldr	r0, [r4, #204]	; 0xcc
   17438:	cmp	r8, #0
   1743c:	bne	17334 <__flatcc_fb_gen_c_reader@@Base+0xaec>
   17440:	str	r3, [sp]
   17444:	movw	r1, #48917	; 0xbf15
   17448:	movt	r1, #3
   1744c:	mov	r2, sl
   17450:	ldr	r3, [sp, #36]	; 0x24
   17454:	b	17340 <__flatcc_fb_gen_c_reader@@Base+0xaf8>
   17458:	ldr	r0, [r9, #204]	; 0xcc
   1745c:	mov	r4, r7
   17460:	ldr	r3, [r4, #8]!
   17464:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17468:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1746c:	cmp	r8, #0
   17470:	beq	174e4 <__flatcc_fb_gen_c_reader@@Base+0xc9c>
   17474:	str	r2, [sp]
   17478:	str	r1, [sp, #4]
   1747c:	movw	r1, #48793	; 0xbe99
   17480:	movt	r1, #3
   17484:	ldr	r6, [sp, #52]	; 0x34
   17488:	mov	r2, r6
   1748c:	b	17504 <__flatcc_fb_gen_c_reader@@Base+0xcbc>
   17490:	ldr	r0, [r5, #16]
   17494:	ldrh	r4, [r0, #8]
   17498:	orr	r1, r4, #2
   1749c:	cmp	r1, #3
   174a0:	bne	17a94 <__flatcc_fb_gen_c_reader@@Base+0x124c>
   174a4:	add	r6, sp, #56	; 0x38
   174a8:	mov	r1, r6
   174ac:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   174b0:	cmp	r4, #1
   174b4:	movw	r3, #49030	; 0xbf86
   174b8:	movt	r3, #3
   174bc:	movw	r0, #21632	; 0x5480
   174c0:	movt	r0, #3
   174c4:	moveq	r3, r0
   174c8:	ldr	r0, [r9, #204]	; 0xcc
   174cc:	cmp	r8, #0
   174d0:	beq	17510 <__flatcc_fb_gen_c_reader@@Base+0xcc8>
   174d4:	movw	r1, #49036	; 0xbf8c
   174d8:	movt	r1, #3
   174dc:	mov	r2, r6
   174e0:	b	17524 <__flatcc_fb_gen_c_reader@@Base+0xcdc>
   174e4:	str	r3, [sp]
   174e8:	str	r2, [sp, #4]
   174ec:	str	r1, [sp, #8]
   174f0:	movw	r1, #48844	; 0xbecc
   174f4:	movt	r1, #3
   174f8:	mov	r2, sl
   174fc:	ldr	r6, [sp, #52]	; 0x34
   17500:	mov	r3, r6
   17504:	bl	148c4 <fprintf@plt>
   17508:	add	r6, r6, #1
   1750c:	b	17360 <__flatcc_fb_gen_c_reader@@Base+0xb18>
   17510:	str	r3, [sp]
   17514:	movw	r1, #49048	; 0xbf98
   17518:	movt	r1, #3
   1751c:	mov	r2, sl
   17520:	mov	r3, r6
   17524:	bl	148c4 <fprintf@plt>
   17528:	movw	r1, #49111	; 0xbfd7
   1752c:	movt	r1, #3
   17530:	b	17348 <__flatcc_fb_gen_c_reader@@Base+0xb00>
   17534:	ldr	r0, [r9, #204]	; 0xcc
   17538:	movw	r1, #48409	; 0xbd19
   1753c:	movt	r1, #3
   17540:	mov	r2, r5
   17544:	bl	148c4 <fprintf@plt>
   17548:	ldr	r0, [r9, #204]	; 0xcc
   1754c:	str	r5, [sp]
   17550:	movw	r1, #48506	; 0xbd7a
   17554:	movt	r1, #3
   17558:	mov	r2, r5
   1755c:	mov	r3, r5
   17560:	bl	148c4 <fprintf@plt>
   17564:	ldr	r0, [r9, #204]	; 0xcc
   17568:	str	r5, [sp]
   1756c:	movw	r1, #48590	; 0xbdce
   17570:	movt	r1, #3
   17574:	mov	r2, r5
   17578:	mov	r3, r5
   1757c:	bl	148c4 <fprintf@plt>
   17580:	ldr	r0, [r9, #204]	; 0xcc
   17584:	str	r5, [sp]
   17588:	movw	r1, #48656	; 0xbe10
   1758c:	movt	r1, #3
   17590:	b	17698 <__flatcc_fb_gen_c_reader@@Base+0xe50>
   17594:	mov	r0, #0
   17598:	str	r0, [sp, #40]	; 0x28
   1759c:	mov	r4, #0
   175a0:	cmp	r8, #0
   175a4:	beq	1760c <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   175a8:	ldr	r6, [sp, #28]
   175ac:	ldr	r0, [r6]
   175b0:	subs	r3, r0, r4
   175b4:	add	sl, sp, #56	; 0x38
   175b8:	sub	r5, fp, #264	; 0x108
   175bc:	beq	175d4 <__flatcc_fb_gen_c_reader@@Base+0xd8c>
   175c0:	ldr	r0, [r9, #204]	; 0xcc
   175c4:	movw	r1, #48763	; 0xbe7b
   175c8:	movt	r1, #3
   175cc:	ldr	r2, [sp, #40]	; 0x28
   175d0:	bl	148c4 <fprintf@plt>
   175d4:	ldr	r3, [r9, #204]	; 0xcc
   175d8:	movw	r0, #25697	; 0x6461
   175dc:	movt	r0, #4
   175e0:	mov	r1, #3
   175e4:	mov	r2, #1
   175e8:	bl	14858 <fwrite@plt>
   175ec:	ldr	r3, [r9, #204]	; 0xcc
   175f0:	movw	r0, #49118	; 0xbfde
   175f4:	movt	r0, #3
   175f8:	mov	r1, #15
   175fc:	mov	r2, #1
   17600:	bl	14858 <fwrite@plt>
   17604:	ldr	r4, [sp, #32]
   17608:	b	17634 <__flatcc_fb_gen_c_reader@@Base+0xdec>
   1760c:	ldr	r3, [r9, #204]	; 0xcc
   17610:	movw	r0, #25697	; 0x6461
   17614:	movt	r0, #4
   17618:	mov	r1, #3
   1761c:	mov	r2, #1
   17620:	bl	14858 <fwrite@plt>
   17624:	add	sl, sp, #56	; 0x38
   17628:	ldr	r4, [sp, #32]
   1762c:	ldr	r6, [sp, #28]
   17630:	sub	r5, fp, #264	; 0x108
   17634:	ldr	r0, [r9, #204]	; 0xcc
   17638:	ldrd	r2, [r6]
   1763c:	stm	sp, {r2, r3}
   17640:	movw	r1, #49134	; 0xbfee
   17644:	movt	r1, #3
   17648:	mov	r2, r5
   1764c:	bl	148c4 <fprintf@plt>
   17650:	ldr	r0, [r9, #204]	; 0xcc
   17654:	str	r5, [sp]
   17658:	movw	r1, #49197	; 0xc02d
   1765c:	movt	r1, #3
   17660:	mov	r2, r5
   17664:	mov	r3, r5
   17668:	bl	148c4 <fprintf@plt>
   1766c:	ldr	r0, [r9, #204]	; 0xcc
   17670:	str	r5, [sp]
   17674:	movw	r1, #49285	; 0xc085
   17678:	movt	r1, #3
   1767c:	mov	r2, r5
   17680:	mov	r3, r5
   17684:	bl	148c4 <fprintf@plt>
   17688:	ldr	r0, [r9, #204]	; 0xcc
   1768c:	stm	sp, {r5, r9}
   17690:	movw	r1, #49355	; 0xc0cb
   17694:	movt	r1, #3
   17698:	mov	r2, r5
   1769c:	mov	r3, r5
   176a0:	bl	148c4 <fprintf@plt>
   176a4:	ldr	r0, [r9, #204]	; 0xcc
   176a8:	ldrd	r2, [r6]
   176ac:	stm	sp, {r2, r3}
   176b0:	movw	r1, #49442	; 0xc122
   176b4:	movt	r1, #3
   176b8:	sub	r5, fp, #264	; 0x108
   176bc:	mov	r2, r5
   176c0:	bl	148c4 <fprintf@plt>
   176c4:	ldr	r0, [r9, #204]	; 0xcc
   176c8:	str	r9, [sp]
   176cc:	movw	r1, #49492	; 0xc154
   176d0:	movt	r1, #3
   176d4:	mov	r2, r5
   176d8:	mov	r3, r5
   176dc:	bl	148c4 <fprintf@plt>
   176e0:	ldr	r0, [r9, #204]	; 0xcc
   176e4:	movw	r1, #49556	; 0xc194
   176e8:	movt	r1, #3
   176ec:	mov	r2, r9
   176f0:	mov	r3, r5
   176f4:	bl	148c4 <fprintf@plt>
   176f8:	ldr	r1, [r9, #204]	; 0xcc
   176fc:	mov	r9, r5
   17700:	mov	r0, #10
   17704:	bl	14924 <fputc@plt>
   17708:	ldr	r6, [r4, #20]
   1770c:	cmp	r6, #0
   17710:	beq	17a10 <__flatcc_fb_gen_c_reader@@Base+0x11c8>
   17714:	mov	r0, #0
   17718:	str	r0, [sp, #44]	; 0x2c
   1771c:	sub	r7, fp, #36	; 0x24
   17720:	sub	r4, fp, #40	; 0x28
   17724:	mov	r0, #0
   17728:	str	r0, [sp, #52]	; 0x34
   1772c:	b	17748 <__flatcc_fb_gen_c_reader@@Base+0xf00>
   17730:	mov	r0, #1
   17734:	str	r0, [sp, #44]	; 0x2c
   17738:	sub	r4, fp, #40	; 0x28
   1773c:	ldr	r6, [r6]
   17740:	cmp	r6, #0
   17744:	beq	17a10 <__flatcc_fb_gen_c_reader@@Base+0x11c8>
   17748:	ldrb	r0, [r6, #72]	; 0x48
   1774c:	tst	r0, #4
   17750:	bne	1773c <__flatcc_fb_gen_c_reader@@Base+0xef4>
   17754:	mov	r0, r6
   17758:	mov	r1, r7
   1775c:	mov	r2, r4
   17760:	bl	18af8 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   17764:	ldrh	r0, [r6, #24]
   17768:	cmp	r0, #14
   1776c:	beq	177ec <__flatcc_fb_gen_c_reader@@Base+0xfa4>
   17770:	cmp	r0, #8
   17774:	bne	179c8 <__flatcc_fb_gen_c_reader@@Base+0x1180>
   17778:	ldr	r8, [r6, #16]
   1777c:	mov	r0, r8
   17780:	ldr	r4, [sp, #48]	; 0x30
   17784:	mov	r1, r4
   17788:	bl	189ac <__flatcc_fb_gen_c_reader@@Base+0x2164>
   1778c:	mov	r7, r9
   17790:	mov	r9, sl
   17794:	mov	sl, r0
   17798:	mov	r0, r8
   1779c:	bl	189c4 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   177a0:	mov	r5, r0
   177a4:	ldr	r0, [r6, #16]
   177a8:	bl	18cb4 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   177ac:	ldr	r1, [r4, #204]	; 0xcc
   177b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   177b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   177b8:	stm	sp, {r2, r3, r4}
   177bc:	str	r0, [sp, #12]
   177c0:	str	sl, [sp, #16]
   177c4:	mov	sl, r9
   177c8:	mov	r9, r7
   177cc:	sub	r7, fp, #36	; 0x24
   177d0:	str	r5, [sp, #20]
   177d4:	mov	r0, r1
   177d8:	movw	r1, #49580	; 0xc1ac
   177dc:	movt	r1, #3
   177e0:	mov	r2, r4
   177e4:	sub	r4, fp, #40	; 0x28
   177e8:	b	179c0 <__flatcc_fb_gen_c_reader@@Base+0x1178>
   177ec:	ldr	r0, [r6, #16]
   177f0:	mov	r1, sl
   177f4:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   177f8:	ldr	r0, [r6, #16]
   177fc:	ldrh	r1, [r0, #8]
   17800:	cmp	r1, #1
   17804:	beq	179a4 <__flatcc_fb_gen_c_reader@@Base+0x115c>
   17808:	cmp	r1, #3
   1780c:	bne	179c8 <__flatcc_fb_gen_c_reader@@Base+0x1180>
   17810:	ldr	r0, [r0, #40]	; 0x28
   17814:	bl	18cb4 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   17818:	ldr	r4, [sp, #48]	; 0x30
   1781c:	ldr	r0, [r4, #204]	; 0xcc
   17820:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17824:	ldr	r8, [fp, #-40]	; 0xffffffd8
   17828:	stm	sp, {r5, r8, sl}
   1782c:	str	sl, [sp, #12]
   17830:	movw	r1, #49634	; 0xc1e2
   17834:	movt	r1, #3
   17838:	mov	r2, r4
   1783c:	mov	r3, r9
   17840:	bl	148c4 <fprintf@plt>
   17844:	ldr	r0, [r4, #212]	; 0xd4
   17848:	ldr	r0, [r0, #32]
   1784c:	cmp	r0, #0
   17850:	bne	1787c <__flatcc_fb_gen_c_reader@@Base+0x1034>
   17854:	ldrb	r0, [r6, #72]	; 0x48
   17858:	tst	r0, #128	; 0x80
   1785c:	beq	1787c <__flatcc_fb_gen_c_reader@@Base+0x1034>
   17860:	ldr	r2, [sp, #48]	; 0x30
   17864:	ldr	r0, [r2, #204]	; 0xcc
   17868:	stm	sp, {r5, r8, sl}
   1786c:	movw	r1, #49691	; 0xc21b
   17870:	movt	r1, #3
   17874:	mov	r3, r9
   17878:	bl	148c4 <fprintf@plt>
   1787c:	ldrb	r0, [r6, #72]	; 0x48
   17880:	tst	r0, #128	; 0x80
   17884:	sub	r4, fp, #40	; 0x28
   17888:	beq	179c8 <__flatcc_fb_gen_c_reader@@Base+0x1180>
   1788c:	ldr	r0, [sp, #44]	; 0x2c
   17890:	cmp	r0, #0
   17894:	ldr	r4, [sp, #48]	; 0x30
   17898:	beq	178b4 <__flatcc_fb_gen_c_reader@@Base+0x106c>
   1789c:	ldr	r3, [r4, #204]	; 0xcc
   178a0:	movw	r0, #49745	; 0xc251
   178a4:	movt	r0, #3
   178a8:	mov	r1, #66	; 0x42
   178ac:	mov	r2, #1
   178b0:	bl	14858 <fwrite@plt>
   178b4:	ldr	r3, [r4, #204]	; 0xcc
   178b8:	movw	r0, #49812	; 0xc294
   178bc:	movt	r0, #3
   178c0:	mov	r1, #61	; 0x3d
   178c4:	mov	r2, #1
   178c8:	bl	14858 <fwrite@plt>
   178cc:	ldr	r0, [r4, #204]	; 0xcc
   178d0:	stm	sp, {r5, r8, sl}
   178d4:	movw	r1, #49874	; 0xc2d2
   178d8:	movt	r1, #3
   178dc:	mov	r2, r4
   178e0:	mov	r3, r9
   178e4:	bl	148c4 <fprintf@plt>
   178e8:	ldr	r0, [r4, #212]	; 0xd4
   178ec:	ldr	r0, [r0, #136]	; 0x88
   178f0:	cmp	r0, #0
   178f4:	beq	17918 <__flatcc_fb_gen_c_reader@@Base+0x10d0>
   178f8:	ldr	r0, [r4, #204]	; 0xcc
   178fc:	stm	sp, {r5, r8, sl}
   17900:	str	r9, [sp, #12]
   17904:	movw	r1, #49928	; 0xc308
   17908:	movt	r1, #3
   1790c:	mov	r2, r4
   17910:	mov	r3, r9
   17914:	bl	148c4 <fprintf@plt>
   17918:	mov	r0, #1
   1791c:	str	r0, [sp, #52]	; 0x34
   17920:	ldr	r0, [sp, #44]	; 0x2c
   17924:	cmp	r0, #0
   17928:	sub	r4, fp, #40	; 0x28
   1792c:	bne	1773c <__flatcc_fb_gen_c_reader@@Base+0xef4>
   17930:	ldr	r4, [sp, #48]	; 0x30
   17934:	ldr	r0, [r4, #204]	; 0xcc
   17938:	stm	sp, {r5, r8, sl}
   1793c:	movw	r1, #49988	; 0xc344
   17940:	movt	r1, #3
   17944:	mov	r2, r4
   17948:	mov	r3, r9
   1794c:	bl	148c4 <fprintf@plt>
   17950:	ldr	r0, [r4, #204]	; 0xcc
   17954:	stm	sp, {r5, r8, sl}
   17958:	movw	r1, #50050	; 0xc382
   1795c:	movt	r1, #3
   17960:	mov	r2, r4
   17964:	mov	r3, r9
   17968:	bl	148c4 <fprintf@plt>
   1796c:	ldr	r0, [r4, #212]	; 0xd4
   17970:	ldr	r0, [r0, #136]	; 0x88
   17974:	mov	r1, #1
   17978:	str	r1, [sp, #52]	; 0x34
   1797c:	cmp	r0, #0
   17980:	beq	17730 <__flatcc_fb_gen_c_reader@@Base+0xee8>
   17984:	ldr	r0, [r4, #204]	; 0xcc
   17988:	stm	sp, {r5, r8}
   1798c:	movw	r1, #50112	; 0xc3c0
   17990:	movt	r1, #3
   17994:	mov	r2, r9
   17998:	mov	r3, r9
   1799c:	bl	148c4 <fprintf@plt>
   179a0:	b	17730 <__flatcc_fb_gen_c_reader@@Base+0xee8>
   179a4:	ldr	r2, [sp, #48]	; 0x30
   179a8:	ldr	r0, [r2, #204]	; 0xcc
   179ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   179b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   179b4:	stm	sp, {r1, r3, sl}
   179b8:	movw	r1, #50153	; 0xc3e9
   179bc:	movt	r1, #3
   179c0:	mov	r3, r9
   179c4:	bl	148c4 <fprintf@plt>
   179c8:	ldr	r0, [sp, #52]	; 0x34
   179cc:	cmp	r0, #0
   179d0:	bne	1773c <__flatcc_fb_gen_c_reader@@Base+0xef4>
   179d4:	ldrh	r0, [r6, #72]	; 0x48
   179d8:	ands	r0, r0, #128	; 0x80
   179dc:	beq	1773c <__flatcc_fb_gen_c_reader@@Base+0xef4>
   179e0:	ldr	r0, [sp, #48]	; 0x30
   179e4:	ldr	r3, [r0, #204]	; 0xcc
   179e8:	mov	r0, #1
   179ec:	str	r0, [sp, #44]	; 0x2c
   179f0:	movw	r0, #50208	; 0xc420
   179f4:	movt	r0, #3
   179f8:	mov	r1, #84	; 0x54
   179fc:	mov	r2, #1
   17a00:	bl	14858 <fwrite@plt>
   17a04:	mov	r0, #0
   17a08:	str	r0, [sp, #52]	; 0x34
   17a0c:	b	1773c <__flatcc_fb_gen_c_reader@@Base+0xef4>
   17a10:	ldr	r0, [sp, #48]	; 0x30
   17a14:	ldr	r1, [r0, #204]	; 0xcc
   17a18:	mov	r0, #10
   17a1c:	bl	14924 <fputc@plt>
   17a20:	sub	sp, fp, #28
   17a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a28:	ldr	r0, [sp, #48]	; 0x30
   17a2c:	ldr	r0, [r0, #204]	; 0xcc
   17a30:	movw	r1, #49072	; 0xbfb0
   17a34:	movt	r1, #3
   17a38:	movw	r2, #49080	; 0xbfb8
   17a3c:	movt	r2, #3
   17a40:	bl	148c4 <fprintf@plt>
   17a44:	movw	r0, #4272	; 0x10b0
   17a48:	movt	r0, #6
   17a4c:	ldr	r0, [r0]
   17a50:	movw	r1, #47968	; 0xbb60
   17a54:	movt	r1, #3
   17a58:	str	r1, [sp]
   17a5c:	movw	r1, #21375	; 0x537f
   17a60:	movt	r1, #3
   17a64:	movw	r4, #21386	; 0x538a
   17a68:	movt	r4, #3
   17a6c:	mov	r2, r4
   17a70:	movw	r3, #1029	; 0x405
   17a74:	bl	148c4 <fprintf@plt>
   17a78:	movw	r0, #25261	; 0x62ad
   17a7c:	movt	r0, #4
   17a80:	movw	r3, #48293	; 0xbca5
   17a84:	movt	r3, #3
   17a88:	mov	r1, r4
   17a8c:	movw	r2, #1029	; 0x405
   17a90:	bl	14984 <__assert_fail@plt>
   17a94:	movw	r0, #48939	; 0xbf2b
   17a98:	movt	r0, #3
   17a9c:	movw	r1, #21386	; 0x538a
   17aa0:	movt	r1, #3
   17aa4:	movw	r3, #48293	; 0xbca5
   17aa8:	movt	r3, #3
   17aac:	movw	r2, #1018	; 0x3fa
   17ab0:	bl	14984 <__assert_fail@plt>
   17ab4:	movw	r0, #48261	; 0xbc85
   17ab8:	movt	r0, #3
   17abc:	movw	r1, #21386	; 0x538a
   17ac0:	movt	r1, #3
   17ac4:	movw	r3, #48293	; 0xbca5
   17ac8:	movt	r3, #3
   17acc:	mov	r2, #936	; 0x3a8
   17ad0:	bl	14984 <__assert_fail@plt>
   17ad4:	movw	r0, #48346	; 0xbcda
   17ad8:	movt	r0, #3
   17adc:	movw	r1, #21386	; 0x538a
   17ae0:	movt	r1, #3
   17ae4:	movw	r3, #48293	; 0xbca5
   17ae8:	movt	r3, #3
   17aec:	movw	r2, #937	; 0x3a9
   17af0:	bl	14984 <__assert_fail@plt>
   17af4:	movw	r0, #48378	; 0xbcfa
   17af8:	movt	r0, #3
   17afc:	movw	r1, #21386	; 0x538a
   17b00:	movt	r1, #3
   17b04:	movw	r3, #48293	; 0xbca5
   17b08:	movt	r3, #3
   17b0c:	movw	r2, #938	; 0x3aa
   17b10:	bl	14984 <__assert_fail@plt>
   17b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b18:	add	fp, sp, #28
   17b1c:	sub	sp, sp, #620	; 0x26c
   17b20:	mov	r5, r0
   17b24:	ldrh	r0, [r1, #8]
   17b28:	cmp	r0, #0
   17b2c:	bne	185a0 <__flatcc_fb_gen_c_reader@@Base+0x1d58>
   17b30:	mov	r4, r1
   17b34:	sub	r8, fp, #264	; 0x108
   17b38:	mov	r0, #0
   17b3c:	str	r0, [sp, #56]	; 0x38
   17b40:	mov	r0, r8
   17b44:	mov	r1, #0
   17b48:	mov	r2, #220	; 0xdc
   17b4c:	bl	148dc <memset@plt>
   17b50:	add	r0, sp, #160	; 0xa0
   17b54:	mov	r1, #0
   17b58:	mov	r2, #220	; 0xdc
   17b5c:	bl	148dc <memset@plt>
   17b60:	ldr	r1, [r5, #204]	; 0xcc
   17b64:	mov	r0, #10
   17b68:	bl	14924 <fputc@plt>
   17b6c:	mov	r0, r4
   17b70:	mov	r1, r8
   17b74:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   17b78:	ldr	r2, [r4, #32]
   17b7c:	movw	r1, #21632	; 0x5480
   17b80:	movt	r1, #3
   17b84:	mov	r0, r5
   17b88:	bl	18a3c <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   17b8c:	ldr	r0, [r5, #204]	; 0xcc
   17b90:	movw	r1, #50421	; 0xc4f5
   17b94:	movt	r1, #3
   17b98:	mov	r2, r8
   17b9c:	bl	148c4 <fprintf@plt>
   17ba0:	ldr	r0, [r5, #204]	; 0xcc
   17ba4:	str	r5, [sp]
   17ba8:	movw	r1, #49492	; 0xc154
   17bac:	movt	r1, #3
   17bb0:	mov	r2, r8
   17bb4:	mov	r3, r8
   17bb8:	bl	148c4 <fprintf@plt>
   17bbc:	ldr	r0, [r5, #204]	; 0xcc
   17bc0:	str	r8, [sp]
   17bc4:	stmib	sp, {r5, r8}
   17bc8:	movw	r1, #50462	; 0xc51e
   17bcc:	movt	r1, #3
   17bd0:	mov	r2, r8
   17bd4:	mov	r3, r8
   17bd8:	bl	148c4 <fprintf@plt>
   17bdc:	ldr	r0, [r5, #204]	; 0xcc
   17be0:	movw	r1, #50563	; 0xc583
   17be4:	movt	r1, #3
   17be8:	mov	r2, r5
   17bec:	mov	r3, r8
   17bf0:	bl	148c4 <fprintf@plt>
   17bf4:	ldr	r1, [r5, #204]	; 0xcc
   17bf8:	mov	r0, #10
   17bfc:	bl	14924 <fputc@plt>
   17c00:	str	r4, [sp, #40]	; 0x28
   17c04:	ldr	r7, [r4, #20]
   17c08:	cmp	r7, #0
   17c0c:	beq	184a8 <__flatcc_fb_gen_c_reader@@Base+0x1c60>
   17c10:	movw	r9, #21632	; 0x5480
   17c14:	movt	r9, #3
   17c18:	sub	sl, fp, #40	; 0x28
   17c1c:	sub	r6, fp, #36	; 0x24
   17c20:	b	17c50 <__flatcc_fb_gen_c_reader@@Base+0x1408>
   17c24:	ldr	r0, [r5, #204]	; 0xcc
   17c28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17c2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c30:	str	r1, [sp]
   17c34:	movw	r1, #50586	; 0xc59a
   17c38:	movt	r1, #3
   17c3c:	mov	r2, r8
   17c40:	bl	148c4 <fprintf@plt>
   17c44:	ldr	r7, [r7]
   17c48:	cmp	r7, #0
   17c4c:	beq	184a8 <__flatcc_fb_gen_c_reader@@Base+0x1c60>
   17c50:	ldr	r2, [r7, #68]	; 0x44
   17c54:	mov	r0, r5
   17c58:	mov	r1, r9
   17c5c:	bl	18a3c <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   17c60:	mov	r0, r7
   17c64:	mov	r1, sl
   17c68:	mov	r2, r6
   17c6c:	bl	18af8 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   17c70:	ldrh	r0, [r7, #72]	; 0x48
   17c74:	tst	r0, #4
   17c78:	bne	17c24 <__flatcc_fb_gen_c_reader@@Base+0x13dc>
   17c7c:	ubfx	r4, r0, #8, #1
   17c80:	ldrh	r0, [r7, #24]
   17c84:	sub	r0, r0, #7
   17c88:	cmp	r0, #8
   17c8c:	bhi	184b0 <__flatcc_fb_gen_c_reader@@Base+0x1c68>
   17c90:	mov	r9, r8
   17c94:	add	r8, r7, #96	; 0x60
   17c98:	add	r1, pc, #0
   17c9c:	ldr	pc, [r1, r0, lsl #2]
   17ca0:	andeq	r7, r1, r4, asr #25
   17ca4:	muleq	r1, r0, lr
   17ca8:	andeq	r8, r1, r4, ror #1
   17cac:	andeq	r7, r1, r8, lsr sp
   17cb0:			; <UNDEFINED> instruction: 0x000184b0
   17cb4:			; <UNDEFINED> instruction: 0x000184b0
   17cb8:			; <UNDEFINED> instruction: 0x000184b0
   17cbc:	muleq	r1, ip, r1
   17cc0:	andeq	r8, r1, ip, lsr #2
   17cc4:	ldr	r0, [r7, #16]
   17cc8:	bl	18d2c <__flatcc_fb_gen_c_reader@@Base+0x24e4>
   17ccc:	ldr	ip, [r5, #204]	; 0xcc
   17cd0:	ldrd	r2, [r8]
   17cd4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   17cd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17cdc:	stm	sp, {r2, r3}
   17ce0:	mov	r8, r9
   17ce4:	str	r9, [sp, #8]
   17ce8:	str	r6, [sp, #12]
   17cec:	movw	r9, #21632	; 0x5480
   17cf0:	movt	r9, #3
   17cf4:	str	r1, [sp, #16]
   17cf8:	str	r5, [sp, #20]
   17cfc:	str	r0, [sp, #24]
   17d00:	str	r4, [sp, #28]
   17d04:	mov	r0, ip
   17d08:	movw	r1, #50962	; 0xc712
   17d0c:	movt	r1, #3
   17d10:	mov	r2, r5
   17d14:	bl	148c4 <fprintf@plt>
   17d18:	ldr	r1, [r7, #104]	; 0x68
   17d1c:	cmp	r1, #0
   17d20:	beq	182d0 <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   17d24:	mov	r0, r5
   17d28:	ldr	r2, [sp, #40]	; 0x28
   17d2c:	mov	r3, r7
   17d30:	bl	18da4 <__flatcc_fb_gen_c_reader@@Base+0x255c>
   17d34:	b	182d0 <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   17d38:	ldr	r0, [r5, #204]	; 0xcc
   17d3c:	ldrd	r2, [r8]
   17d40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17d44:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17d48:	stm	sp, {r2, r3}
   17d4c:	mov	r8, r9
   17d50:	str	r9, [sp, #8]
   17d54:	str	r1, [sp, #12]
   17d58:	str	r6, [sp, #16]
   17d5c:	str	r4, [sp, #20]
   17d60:	movw	r1, #51013	; 0xc745
   17d64:	movt	r1, #3
   17d68:	mov	r2, r5
   17d6c:	bl	148c4 <fprintf@plt>
   17d70:	ldr	r0, [r5, #212]	; 0xd4
   17d74:	ldr	r0, [r0, #32]
   17d78:	cmp	r0, #0
   17d7c:	bne	17db0 <__flatcc_fb_gen_c_reader@@Base+0x1568>
   17d80:	ldrb	r0, [r7, #72]	; 0x48
   17d84:	tst	r0, #128	; 0x80
   17d88:	beq	17db0 <__flatcc_fb_gen_c_reader@@Base+0x1568>
   17d8c:	ldr	r0, [r5, #204]	; 0xcc
   17d90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17d94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d98:	stm	sp, {r1, r2}
   17d9c:	movw	r1, #51058	; 0xc772
   17da0:	movt	r1, #3
   17da4:	mov	r2, r5
   17da8:	mov	r3, r8
   17dac:	bl	148c4 <fprintf@plt>
   17db0:	ldrb	r0, [r7, #72]	; 0x48
   17db4:	tst	r0, #128	; 0x80
   17db8:	movw	r9, #21632	; 0x5480
   17dbc:	movt	r9, #3
   17dc0:	beq	182d0 <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   17dc4:	ldr	r0, [sp, #56]	; 0x38
   17dc8:	cmp	r0, #0
   17dcc:	sub	r6, fp, #36	; 0x24
   17dd0:	beq	17dec <__flatcc_fb_gen_c_reader@@Base+0x15a4>
   17dd4:	ldr	r3, [r5, #204]	; 0xcc
   17dd8:	movw	r0, #49745	; 0xc251
   17ddc:	movt	r0, #3
   17de0:	mov	r1, #66	; 0x42
   17de4:	mov	r2, #1
   17de8:	bl	14858 <fwrite@plt>
   17dec:	ldr	r0, [r5, #204]	; 0xcc
   17df0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17df4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17df8:	stm	sp, {r1, r2}
   17dfc:	movw	r1, #51101	; 0xc79d
   17e00:	movt	r1, #3
   17e04:	mov	r2, r5
   17e08:	mov	r3, r8
   17e0c:	bl	148c4 <fprintf@plt>
   17e10:	ldr	r0, [r5, #212]	; 0xd4
   17e14:	ldr	r0, [r0, #136]	; 0x88
   17e18:	cmp	r0, #0
   17e1c:	beq	17e44 <__flatcc_fb_gen_c_reader@@Base+0x15fc>
   17e20:	ldr	r0, [r5, #204]	; 0xcc
   17e24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17e28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e2c:	stm	sp, {r1, r2}
   17e30:	movw	r1, #51144	; 0xc7c8
   17e34:	movt	r1, #3
   17e38:	mov	r2, r5
   17e3c:	mov	r3, r8
   17e40:	bl	148c4 <fprintf@plt>
   17e44:	ldr	r0, [sp, #56]	; 0x38
   17e48:	cmp	r0, #0
   17e4c:	bne	17c44 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   17e50:	ldr	r0, [r5, #204]	; 0xcc
   17e54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17e58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e5c:	stm	sp, {r1, r2}
   17e60:	movw	r1, #51187	; 0xc7f3
   17e64:	movt	r1, #3
   17e68:	mov	r2, r5
   17e6c:	mov	r3, r8
   17e70:	bl	148c4 <fprintf@plt>
   17e74:	ldr	r0, [r5, #204]	; 0xcc
   17e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17e7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e80:	stm	sp, {r1, r2}
   17e84:	movw	r1, #51238	; 0xc826
   17e88:	movt	r1, #3
   17e8c:	b	1809c <__flatcc_fb_gen_c_reader@@Base+0x1854>
   17e90:	ldr	r4, [r7, #16]
   17e94:	mov	r0, r4
   17e98:	mov	r1, r5
   17e9c:	bl	189ac <__flatcc_fb_gen_c_reader@@Base+0x2164>
   17ea0:	str	r0, [sp, #52]	; 0x34
   17ea4:	mov	r0, r4
   17ea8:	bl	189c4 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17eac:	mov	r6, r0
   17eb0:	ldr	r0, [r7, #16]
   17eb4:	bl	18cb4 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   17eb8:	str	r0, [sp, #44]	; 0x2c
   17ebc:	ldr	r0, [r7, #16]
   17ec0:	add	r1, r7, #48	; 0x30
   17ec4:	add	r4, sp, #60	; 0x3c
   17ec8:	mov	r2, r4
   17ecc:	bl	18b00 <__flatcc_fb_gen_c_reader@@Base+0x22b8>
   17ed0:	ldrd	r2, [r8]
   17ed4:	ldr	r0, [r5, #204]	; 0xcc
   17ed8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17edc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17ee0:	str	r6, [sp, #48]	; 0x30
   17ee4:	str	r6, [sp, #32]
   17ee8:	add	r6, sp, #60	; 0x3c
   17eec:	str	r6, [sp, #36]	; 0x24
   17ef0:	stm	sp, {r2, r3}
   17ef4:	mov	r8, r9
   17ef8:	str	r9, [sp, #8]
   17efc:	add	r2, sp, #12
   17f00:	stm	r2, {r1, r4, r5}
   17f04:	ldr	r1, [sp, #44]	; 0x2c
   17f08:	str	r1, [sp, #24]
   17f0c:	ldr	r1, [sp, #52]	; 0x34
   17f10:	str	r1, [sp, #28]
   17f14:	movw	r1, #50631	; 0xc5c7
   17f18:	movt	r1, #3
   17f1c:	mov	r2, r5
   17f20:	bl	148c4 <fprintf@plt>
   17f24:	ldr	r0, [r5, #212]	; 0xd4
   17f28:	ldr	r0, [r0, #32]
   17f2c:	cmp	r0, #0
   17f30:	bne	17f74 <__flatcc_fb_gen_c_reader@@Base+0x172c>
   17f34:	ldrb	r0, [r7, #72]	; 0x48
   17f38:	tst	r0, #128	; 0x80
   17f3c:	beq	17f74 <__flatcc_fb_gen_c_reader@@Base+0x172c>
   17f40:	ldr	r0, [r5, #204]	; 0xcc
   17f44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17f4c:	stm	sp, {r1, r2}
   17f50:	ldr	r1, [sp, #52]	; 0x34
   17f54:	str	r1, [sp, #8]
   17f58:	ldr	r1, [sp, #48]	; 0x30
   17f5c:	str	r1, [sp, #12]
   17f60:	movw	r1, #50688	; 0xc600
   17f64:	movt	r1, #3
   17f68:	mov	r2, r5
   17f6c:	mov	r3, r8
   17f70:	bl	148c4 <fprintf@plt>
   17f74:	ldrb	r0, [r7, #72]	; 0x48
   17f78:	tst	r0, #128	; 0x80
   17f7c:	movw	r9, #21632	; 0x5480
   17f80:	movt	r9, #3
   17f84:	beq	182d0 <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   17f88:	ldr	r0, [sp, #56]	; 0x38
   17f8c:	cmp	r0, #0
   17f90:	sub	r6, fp, #36	; 0x24
   17f94:	beq	17fb0 <__flatcc_fb_gen_c_reader@@Base+0x1768>
   17f98:	ldr	r3, [r5, #204]	; 0xcc
   17f9c:	movw	r0, #49745	; 0xc251
   17fa0:	movt	r0, #3
   17fa4:	mov	r1, #66	; 0x42
   17fa8:	mov	r2, #1
   17fac:	bl	14858 <fwrite@plt>
   17fb0:	ldr	r3, [r5, #204]	; 0xcc
   17fb4:	movw	r0, #49812	; 0xc294
   17fb8:	movt	r0, #3
   17fbc:	mov	r1, #61	; 0x3d
   17fc0:	mov	r2, #1
   17fc4:	bl	14858 <fwrite@plt>
   17fc8:	ldr	r0, [r5, #204]	; 0xcc
   17fcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17fd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17fd4:	stm	sp, {r1, r2}
   17fd8:	ldr	r1, [sp, #52]	; 0x34
   17fdc:	str	r1, [sp, #8]
   17fe0:	ldr	r4, [sp, #48]	; 0x30
   17fe4:	str	r4, [sp, #12]
   17fe8:	movw	r1, #50737	; 0xc631
   17fec:	movt	r1, #3
   17ff0:	mov	r2, r5
   17ff4:	mov	r3, r8
   17ff8:	bl	148c4 <fprintf@plt>
   17ffc:	ldr	r0, [r5, #212]	; 0xd4
   18000:	ldr	r0, [r0, #136]	; 0x88
   18004:	cmp	r0, #0
   18008:	beq	1803c <__flatcc_fb_gen_c_reader@@Base+0x17f4>
   1800c:	ldr	r0, [r5, #204]	; 0xcc
   18010:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18014:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18018:	stm	sp, {r1, r2}
   1801c:	ldr	r1, [sp, #52]	; 0x34
   18020:	add	r2, sp, #8
   18024:	stm	r2, {r1, r4, r5}
   18028:	movw	r1, #50786	; 0xc662
   1802c:	movt	r1, #3
   18030:	mov	r2, r5
   18034:	mov	r3, r8
   18038:	bl	148c4 <fprintf@plt>
   1803c:	ldr	r0, [sp, #56]	; 0x38
   18040:	cmp	r0, #0
   18044:	bne	17c44 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   18048:	ldr	r0, [r5, #204]	; 0xcc
   1804c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18050:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18054:	stm	sp, {r1, r2}
   18058:	ldr	r4, [sp, #52]	; 0x34
   1805c:	str	r4, [sp, #8]
   18060:	ldr	r1, [sp, #48]	; 0x30
   18064:	str	r1, [sp, #12]
   18068:	movw	r1, #50848	; 0xc6a0
   1806c:	movt	r1, #3
   18070:	mov	r2, r5
   18074:	mov	r3, r8
   18078:	bl	148c4 <fprintf@plt>
   1807c:	ldr	r0, [r5, #204]	; 0xcc
   18080:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18084:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18088:	stm	sp, {r1, r2, r4}
   1808c:	ldr	r1, [sp, #48]	; 0x30
   18090:	str	r1, [sp, #12]
   18094:	movw	r1, #50905	; 0xc6d9
   18098:	movt	r1, #3
   1809c:	mov	r2, r5
   180a0:	mov	r3, r8
   180a4:	bl	148c4 <fprintf@plt>
   180a8:	ldr	r0, [r5, #212]	; 0xd4
   180ac:	ldr	r0, [r0, #136]	; 0x88
   180b0:	mov	r1, #1
   180b4:	str	r1, [sp, #56]	; 0x38
   180b8:	cmp	r0, #0
   180bc:	beq	17c44 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   180c0:	ldr	r0, [r5, #204]	; 0xcc
   180c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   180c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   180cc:	stm	sp, {r1, r2}
   180d0:	movw	r1, #50112	; 0xc3c0
   180d4:	movt	r1, #3
   180d8:	mov	r2, r8
   180dc:	mov	r3, r8
   180e0:	b	17c40 <__flatcc_fb_gen_c_reader@@Base+0x13f8>
   180e4:	ldr	r0, [r5, #204]	; 0xcc
   180e8:	ldrd	r2, [r8]
   180ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   180f0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   180f4:	stm	sp, {r2, r3}
   180f8:	mov	r8, r9
   180fc:	str	r9, [sp, #8]
   18100:	str	r1, [sp, #12]
   18104:	str	r6, [sp, #16]
   18108:	movw	r9, #21632	; 0x5480
   1810c:	movt	r9, #3
   18110:	str	r5, [sp, #20]
   18114:	str	r4, [sp, #24]
   18118:	movw	r1, #51289	; 0xc859
   1811c:	movt	r1, #3
   18120:	mov	r2, r5
   18124:	bl	148c4 <fprintf@plt>
   18128:	b	182d0 <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   1812c:	ldr	r0, [r7, #16]
   18130:	add	r1, sp, #160	; 0xa0
   18134:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18138:	ldr	r0, [r7, #16]
   1813c:	ldrh	r6, [r0, #8]
   18140:	cmp	r6, #4
   18144:	bhi	18500 <__flatcc_fb_gen_c_reader@@Base+0x1cb8>
   18148:	cmp	r6, #2
   1814c:	beq	18500 <__flatcc_fb_gen_c_reader@@Base+0x1cb8>
   18150:	ldr	r3, [r8, #4]
   18154:	ldr	r8, [r8]
   18158:	ldr	r0, [r5, #204]	; 0xcc
   1815c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18160:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18164:	cmp	r6, #4
   18168:	bne	18210 <__flatcc_fb_gen_c_reader@@Base+0x19c8>
   1816c:	str	r8, [sp]
   18170:	str	r3, [sp, #4]
   18174:	mov	r8, r9
   18178:	str	r9, [sp, #8]
   1817c:	str	r2, [sp, #12]
   18180:	str	r1, [sp, #16]
   18184:	add	r1, sp, #160	; 0xa0
   18188:	str	r1, [sp, #20]
   1818c:	str	r4, [sp, #24]
   18190:	movw	r1, #51796	; 0xca54
   18194:	movt	r1, #3
   18198:	b	18278 <__flatcc_fb_gen_c_reader@@Base+0x1a30>
   1819c:	ldr	r0, [r7, #16]
   181a0:	add	r1, sp, #160	; 0xa0
   181a4:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   181a8:	ldr	r0, [r7, #16]
   181ac:	ldrh	r1, [r0, #8]
   181b0:	cmp	r1, #4
   181b4:	bhi	18550 <__flatcc_fb_gen_c_reader@@Base+0x1d08>
   181b8:	add	r2, pc, #0
   181bc:	ldr	pc, [r2, r1, lsl #2]
   181c0:	ldrdeq	r8, [r1], -r4
   181c4:	andeq	r8, r1, r8, lsl #5
   181c8:	andeq	r8, r1, r0, asr r5
   181cc:	andeq	r8, r1, r4, lsl #6
   181d0:	andeq	r8, r1, r0, asr #4
   181d4:	ldr	r0, [r5, #204]	; 0xcc
   181d8:	ldrd	r2, [r8]
   181dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   181e0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   181e4:	stm	sp, {r2, r3}
   181e8:	mov	r8, r9
   181ec:	str	r9, [sp, #8]
   181f0:	str	r1, [sp, #12]
   181f4:	str	r6, [sp, #16]
   181f8:	add	r1, sp, #160	; 0xa0
   181fc:	str	r1, [sp, #20]
   18200:	str	r4, [sp, #24]
   18204:	movw	r1, #51408	; 0xc8d0
   18208:	movt	r1, #3
   1820c:	b	182c0 <__flatcc_fb_gen_c_reader@@Base+0x1a78>
   18210:	str	r8, [sp]
   18214:	str	r3, [sp, #4]
   18218:	mov	r8, r9
   1821c:	str	r9, [sp, #8]
   18220:	str	r2, [sp, #12]
   18224:	str	r1, [sp, #16]
   18228:	add	r1, sp, #160	; 0xa0
   1822c:	str	r1, [sp, #20]
   18230:	str	r4, [sp, #24]
   18234:	movw	r1, #51855	; 0xca8f
   18238:	movt	r1, #3
   1823c:	b	182c0 <__flatcc_fb_gen_c_reader@@Base+0x1a78>
   18240:	ldr	r0, [r5, #204]	; 0xcc
   18244:	ldrd	r2, [r8]
   18248:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1824c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18250:	stm	sp, {r2, r3}
   18254:	mov	r8, r9
   18258:	str	r9, [sp, #8]
   1825c:	str	r1, [sp, #12]
   18260:	str	r6, [sp, #16]
   18264:	add	r1, sp, #160	; 0xa0
   18268:	str	r1, [sp, #20]
   1826c:	str	r4, [sp, #24]
   18270:	movw	r1, #51591	; 0xc987
   18274:	movt	r1, #3
   18278:	mov	r2, r5
   1827c:	mov	r3, r5
   18280:	bl	148c4 <fprintf@plt>
   18284:	b	182c8 <__flatcc_fb_gen_c_reader@@Base+0x1a80>
   18288:	ldr	r0, [r5, #204]	; 0xcc
   1828c:	ldrd	r2, [r8]
   18290:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18294:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18298:	stm	sp, {r2, r3}
   1829c:	mov	r8, r9
   182a0:	str	r9, [sp, #8]
   182a4:	str	r1, [sp, #12]
   182a8:	str	r6, [sp, #16]
   182ac:	add	r1, sp, #160	; 0xa0
   182b0:	str	r1, [sp, #20]
   182b4:	str	r4, [sp, #24]
   182b8:	movw	r1, #51350	; 0xc896
   182bc:	movt	r1, #3
   182c0:	mov	r2, r5
   182c4:	bl	148c4 <fprintf@plt>
   182c8:	movw	r9, #21632	; 0x5480
   182cc:	movt	r9, #3
   182d0:	ldrb	r0, [r7, #72]	; 0x48
   182d4:	tst	r0, #128	; 0x80
   182d8:	sub	r6, fp, #36	; 0x24
   182dc:	beq	17c44 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   182e0:	ldr	r3, [r5, #204]	; 0xcc
   182e4:	mov	r0, #1
   182e8:	str	r0, [sp, #56]	; 0x38
   182ec:	movw	r0, #50208	; 0xc420
   182f0:	movt	r0, #3
   182f4:	mov	r1, #84	; 0x54
   182f8:	mov	r2, #1
   182fc:	bl	14858 <fwrite@plt>
   18300:	b	17c44 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   18304:	ldr	r0, [r0, #40]	; 0x28
   18308:	add	r1, r7, #48	; 0x30
   1830c:	add	r2, sp, #60	; 0x3c
   18310:	bl	18b00 <__flatcc_fb_gen_c_reader@@Base+0x22b8>
   18314:	ldr	r0, [r5, #204]	; 0xcc
   18318:	ldrd	r2, [r8]
   1831c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18320:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18324:	stm	sp, {r2, r3}
   18328:	mov	r8, r9
   1832c:	str	r9, [sp, #8]
   18330:	str	r1, [sp, #12]
   18334:	str	r6, [sp, #16]
   18338:	add	r4, sp, #160	; 0xa0
   1833c:	str	r4, [sp, #20]
   18340:	str	r4, [sp, #24]
   18344:	add	r1, sp, #60	; 0x3c
   18348:	str	r1, [sp, #28]
   1834c:	movw	r1, #51464	; 0xc908
   18350:	movt	r1, #3
   18354:	mov	r2, r5
   18358:	bl	148c4 <fprintf@plt>
   1835c:	ldr	r0, [r5, #212]	; 0xd4
   18360:	ldr	r0, [r0, #32]
   18364:	cmp	r0, #0
   18368:	bne	1839c <__flatcc_fb_gen_c_reader@@Base+0x1b54>
   1836c:	ldrb	r0, [r7, #72]	; 0x48
   18370:	tst	r0, #128	; 0x80
   18374:	beq	1839c <__flatcc_fb_gen_c_reader@@Base+0x1b54>
   18378:	ldr	r0, [r5, #204]	; 0xcc
   1837c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18380:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18384:	stm	sp, {r1, r2, r4}
   18388:	movw	r1, #49691	; 0xc21b
   1838c:	movt	r1, #3
   18390:	mov	r2, r5
   18394:	mov	r3, r8
   18398:	bl	148c4 <fprintf@plt>
   1839c:	ldrb	r0, [r7, #72]	; 0x48
   183a0:	tst	r0, #128	; 0x80
   183a4:	movw	r9, #21632	; 0x5480
   183a8:	movt	r9, #3
   183ac:	beq	182d0 <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   183b0:	ldr	r0, [sp, #56]	; 0x38
   183b4:	cmp	r0, #0
   183b8:	sub	r6, fp, #36	; 0x24
   183bc:	beq	183d8 <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   183c0:	ldr	r3, [r5, #204]	; 0xcc
   183c4:	movw	r0, #49745	; 0xc251
   183c8:	movt	r0, #3
   183cc:	mov	r1, #66	; 0x42
   183d0:	mov	r2, #1
   183d4:	bl	14858 <fwrite@plt>
   183d8:	ldr	r3, [r5, #204]	; 0xcc
   183dc:	movw	r0, #49812	; 0xc294
   183e0:	movt	r0, #3
   183e4:	mov	r1, #61	; 0x3d
   183e8:	mov	r2, #1
   183ec:	bl	14858 <fwrite@plt>
   183f0:	ldr	r0, [r5, #204]	; 0xcc
   183f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   183f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   183fc:	stm	sp, {r1, r2}
   18400:	add	r4, sp, #160	; 0xa0
   18404:	str	r4, [sp, #8]
   18408:	movw	r1, #49874	; 0xc2d2
   1840c:	movt	r1, #3
   18410:	mov	r2, r5
   18414:	mov	r3, r8
   18418:	bl	148c4 <fprintf@plt>
   1841c:	ldr	r0, [r5, #212]	; 0xd4
   18420:	ldr	r0, [r0, #136]	; 0x88
   18424:	cmp	r0, #0
   18428:	beq	18450 <__flatcc_fb_gen_c_reader@@Base+0x1c08>
   1842c:	ldr	r0, [r5, #204]	; 0xcc
   18430:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18434:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18438:	stm	sp, {r1, r2, r4, r5}
   1843c:	movw	r1, #51524	; 0xc944
   18440:	movt	r1, #3
   18444:	mov	r2, r5
   18448:	mov	r3, r8
   1844c:	bl	148c4 <fprintf@plt>
   18450:	ldr	r0, [sp, #56]	; 0x38
   18454:	cmp	r0, #0
   18458:	bne	17c44 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   1845c:	ldr	r0, [r5, #204]	; 0xcc
   18460:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18464:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18468:	stm	sp, {r1, r2}
   1846c:	add	r1, sp, #160	; 0xa0
   18470:	mov	r4, r1
   18474:	str	r1, [sp, #8]
   18478:	movw	r1, #49988	; 0xc344
   1847c:	movt	r1, #3
   18480:	mov	r2, r5
   18484:	mov	r3, r8
   18488:	bl	148c4 <fprintf@plt>
   1848c:	ldr	r0, [r5, #204]	; 0xcc
   18490:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18494:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18498:	stm	sp, {r1, r2, r4}
   1849c:	movw	r1, #50050	; 0xc382
   184a0:	movt	r1, #3
   184a4:	b	1809c <__flatcc_fb_gen_c_reader@@Base+0x1854>
   184a8:	sub	sp, fp, #28
   184ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184b0:	movw	r0, #4272	; 0x10b0
   184b4:	movt	r0, #6
   184b8:	ldr	r0, [r0]
   184bc:	movw	r1, #51910	; 0xcac6
   184c0:	movt	r1, #3
   184c4:	str	r1, [sp]
   184c8:	movw	r1, #21375	; 0x537f
   184cc:	movt	r1, #3
   184d0:	movw	r4, #21386	; 0x538a
   184d4:	movt	r4, #3
   184d8:	mov	r2, r4
   184dc:	movw	r3, #1599	; 0x63f
   184e0:	bl	148c4 <fprintf@plt>
   184e4:	movw	r0, #25261	; 0x62ad
   184e8:	movt	r0, #4
   184ec:	movw	r3, #50369	; 0xc4c1
   184f0:	movt	r3, #3
   184f4:	mov	r1, r4
   184f8:	movw	r2, #1599	; 0x63f
   184fc:	bl	14984 <__assert_fail@plt>
   18500:	movw	r0, #4272	; 0x10b0
   18504:	movt	r0, #6
   18508:	ldr	r0, [r0]
   1850c:	movw	r1, #51716	; 0xca04
   18510:	movt	r1, #3
   18514:	str	r1, [sp]
   18518:	movw	r1, #21375	; 0x537f
   1851c:	movt	r1, #3
   18520:	movw	r4, #21386	; 0x538a
   18524:	movt	r4, #3
   18528:	mov	r2, r4
   1852c:	mov	r3, #1584	; 0x630
   18530:	bl	148c4 <fprintf@plt>
   18534:	movw	r0, #25261	; 0x62ad
   18538:	movt	r0, #4
   1853c:	movw	r3, #50369	; 0xc4c1
   18540:	movt	r3, #3
   18544:	mov	r1, r4
   18548:	mov	r2, #1584	; 0x630
   1854c:	bl	14984 <__assert_fail@plt>
   18550:	movw	r0, #4272	; 0x10b0
   18554:	movt	r0, #6
   18558:	ldr	r0, [r0]
   1855c:	movw	r1, #51643	; 0xc9bb
   18560:	movt	r1, #3
   18564:	str	r1, [sp]
   18568:	movw	r1, #21375	; 0x537f
   1856c:	movt	r1, #3
   18570:	movw	r4, #21386	; 0x538a
   18574:	movt	r4, #3
   18578:	mov	r2, r4
   1857c:	mov	r3, #1568	; 0x620
   18580:	bl	148c4 <fprintf@plt>
   18584:	movw	r0, #25261	; 0x62ad
   18588:	movt	r0, #4
   1858c:	movw	r3, #50369	; 0xc4c1
   18590:	movt	r3, #3
   18594:	mov	r1, r4
   18598:	mov	r2, #1568	; 0x620
   1859c:	bl	14984 <__assert_fail@plt>
   185a0:	movw	r0, #46528	; 0xb5c0
   185a4:	movt	r0, #3
   185a8:	movw	r1, #21386	; 0x538a
   185ac:	movt	r1, #3
   185b0:	movw	r3, #50369	; 0xc4c1
   185b4:	movt	r3, #3
   185b8:	movw	r2, #1362	; 0x552
   185bc:	bl	14984 <__assert_fail@plt>
   185c0:	push	{r4, sl, fp, lr}
   185c4:	add	fp, sp, #8
   185c8:	mov	r4, r0
   185cc:	bl	16820 <__flatcc_fb_gen_common_c_header@@Base+0x910>
   185d0:	ldr	r0, [r4, #204]	; 0xcc
   185d4:	ldr	r1, [r4, #208]	; 0xd0
   185d8:	ldr	r2, [r1, #164]	; 0xa4
   185dc:	movw	r1, #52343	; 0xcc77
   185e0:	movt	r1, #3
   185e4:	pop	{r4, sl, fp, lr}
   185e8:	b	148c4 <fprintf@plt>
   185ec:	push	{r4, sl, fp, lr}
   185f0:	add	fp, sp, #8
   185f4:	sub	sp, sp, #24
   185f8:	mov	r4, r0
   185fc:	ldr	r0, [r0, #204]	; 0xcc
   18600:	str	r4, [sp]
   18604:	str	r4, [sp, #4]
   18608:	str	r4, [sp, #8]
   1860c:	str	r4, [sp, #12]
   18610:	str	r4, [sp, #16]
   18614:	str	r4, [sp, #20]
   18618:	movw	r1, #33695	; 0x839f
   1861c:	movt	r1, #3
   18620:	mov	r2, r4
   18624:	mov	r3, r4
   18628:	bl	148c4 <fprintf@plt>
   1862c:	ldr	r0, [r4, #204]	; 0xcc
   18630:	str	r4, [sp]
   18634:	str	r4, [sp, #4]
   18638:	movw	r1, #33890	; 0x8462
   1863c:	movt	r1, #3
   18640:	mov	r2, r4
   18644:	mov	r3, r4
   18648:	bl	148c4 <fprintf@plt>
   1864c:	ldr	r0, [r4, #204]	; 0xcc
   18650:	str	r4, [sp]
   18654:	str	r4, [sp, #4]
   18658:	movw	r1, #34043	; 0x84fb
   1865c:	movt	r1, #3
   18660:	mov	r2, r4
   18664:	mov	r3, r4
   18668:	bl	148c4 <fprintf@plt>
   1866c:	ldr	r0, [r4, #204]	; 0xcc
   18670:	movw	r1, #34162	; 0x8572
   18674:	movt	r1, #3
   18678:	mov	r2, r4
   1867c:	bl	148c4 <fprintf@plt>
   18680:	ldr	r0, [r4, #204]	; 0xcc
   18684:	movw	r1, #34883	; 0x8843
   18688:	movt	r1, #3
   1868c:	mov	r2, r4
   18690:	bl	148c4 <fprintf@plt>
   18694:	ldr	r0, [r4, #204]	; 0xcc
   18698:	movw	r1, #35541	; 0x8ad5
   1869c:	movt	r1, #3
   186a0:	mov	r2, r4
   186a4:	bl	148c4 <fprintf@plt>
   186a8:	ldr	r0, [r4, #204]	; 0xcc
   186ac:	movw	r1, #35670	; 0x8b56
   186b0:	movt	r1, #3
   186b4:	mov	r2, r4
   186b8:	bl	148c4 <fprintf@plt>
   186bc:	ldr	r0, [r4, #204]	; 0xcc
   186c0:	movw	r1, #35780	; 0x8bc4
   186c4:	movt	r1, #3
   186c8:	mov	r2, r4
   186cc:	sub	sp, fp, #8
   186d0:	pop	{r4, sl, fp, lr}
   186d4:	b	148c4 <fprintf@plt>
   186d8:	push	{r4, sl, fp, lr}
   186dc:	add	fp, sp, #8
   186e0:	sub	sp, sp, #40	; 0x28
   186e4:	mov	r4, r0
   186e8:	ldr	r0, [r0, #204]	; 0xcc
   186ec:	str	r4, [sp]
   186f0:	str	r4, [sp, #4]
   186f4:	movw	r1, #36264	; 0x8da8
   186f8:	movt	r1, #3
   186fc:	mov	r2, r4
   18700:	mov	r3, r4
   18704:	bl	148c4 <fprintf@plt>
   18708:	ldr	r0, [r4, #204]	; 0xcc
   1870c:	str	r4, [sp]
   18710:	str	r4, [sp, #4]
   18714:	str	r4, [sp, #8]
   18718:	str	r4, [sp, #12]
   1871c:	movw	r1, #36433	; 0x8e51
   18720:	movt	r1, #3
   18724:	mov	r2, r4
   18728:	mov	r3, r4
   1872c:	bl	148c4 <fprintf@plt>
   18730:	ldr	r0, [r4, #204]	; 0xcc
   18734:	str	r4, [sp]
   18738:	movw	r1, #36908	; 0x902c
   1873c:	movt	r1, #3
   18740:	mov	r2, r4
   18744:	mov	r3, r4
   18748:	bl	148c4 <fprintf@plt>
   1874c:	ldr	r0, [r4, #204]	; 0xcc
   18750:	str	r4, [sp, #32]
   18754:	str	r4, [sp]
   18758:	str	r4, [sp, #4]
   1875c:	str	r4, [sp, #8]
   18760:	str	r4, [sp, #12]
   18764:	str	r4, [sp, #16]
   18768:	str	r4, [sp, #20]
   1876c:	str	r4, [sp, #24]
   18770:	str	r4, [sp, #28]
   18774:	movw	r1, #37446	; 0x9246
   18778:	movt	r1, #3
   1877c:	mov	r2, r4
   18780:	mov	r3, r4
   18784:	bl	148c4 <fprintf@plt>
   18788:	ldr	r0, [r4, #204]	; 0xcc
   1878c:	movw	r1, #37789	; 0x939d
   18790:	movt	r1, #3
   18794:	mov	r2, r4
   18798:	mov	r3, r4
   1879c:	bl	148c4 <fprintf@plt>
   187a0:	ldr	r0, [r4, #204]	; 0xcc
   187a4:	str	r4, [sp]
   187a8:	movw	r1, #37996	; 0x946c
   187ac:	movt	r1, #3
   187b0:	mov	r2, r4
   187b4:	mov	r3, r4
   187b8:	bl	148c4 <fprintf@plt>
   187bc:	ldr	r0, [r4, #204]	; 0xcc
   187c0:	str	r4, [sp]
   187c4:	movw	r1, #38177	; 0x9521
   187c8:	movt	r1, #3
   187cc:	mov	r2, r4
   187d0:	mov	r3, r4
   187d4:	bl	148c4 <fprintf@plt>
   187d8:	ldr	r0, [r4, #204]	; 0xcc
   187dc:	movw	r1, #38614	; 0x96d6
   187e0:	movt	r1, #3
   187e4:	mov	r2, r4
   187e8:	bl	148c4 <fprintf@plt>
   187ec:	ldr	r0, [r4, #204]	; 0xcc
   187f0:	movw	r1, #38784	; 0x9780
   187f4:	movt	r1, #3
   187f8:	mov	r2, r4
   187fc:	sub	sp, fp, #8
   18800:	pop	{r4, sl, fp, lr}
   18804:	b	148c4 <fprintf@plt>
   18808:	push	{r4, sl, fp, lr}
   1880c:	add	fp, sp, #8
   18810:	sub	sp, sp, #48	; 0x30
   18814:	mov	r4, r0
   18818:	ldr	r0, [r0, #204]	; 0xcc
   1881c:	movw	r1, #39085	; 0x98ad
   18820:	movt	r1, #3
   18824:	mov	r2, r4
   18828:	mov	r3, r4
   1882c:	bl	148c4 <fprintf@plt>
   18830:	ldr	r0, [r4, #204]	; 0xcc
   18834:	movw	r1, #39421	; 0x99fd
   18838:	movt	r1, #3
   1883c:	mov	r2, r4
   18840:	mov	r3, r4
   18844:	bl	148c4 <fprintf@plt>
   18848:	ldr	r0, [r4, #204]	; 0xcc
   1884c:	str	r4, [sp, #32]
   18850:	str	r4, [sp]
   18854:	str	r4, [sp, #4]
   18858:	str	r4, [sp, #8]
   1885c:	str	r4, [sp, #12]
   18860:	str	r4, [sp, #16]
   18864:	str	r4, [sp, #20]
   18868:	str	r4, [sp, #24]
   1886c:	str	r4, [sp, #28]
   18870:	movw	r1, #39633	; 0x9ad1
   18874:	movt	r1, #3
   18878:	mov	r2, r4
   1887c:	mov	r3, r4
   18880:	bl	148c4 <fprintf@plt>
   18884:	ldr	r0, [r4, #204]	; 0xcc
   18888:	str	r4, [sp, #32]
   1888c:	str	r4, [sp]
   18890:	str	r4, [sp, #4]
   18894:	str	r4, [sp, #8]
   18898:	str	r4, [sp, #12]
   1889c:	str	r4, [sp, #16]
   188a0:	str	r4, [sp, #20]
   188a4:	str	r4, [sp, #24]
   188a8:	str	r4, [sp, #28]
   188ac:	movw	r1, #40012	; 0x9c4c
   188b0:	movt	r1, #3
   188b4:	mov	r2, r4
   188b8:	mov	r3, r4
   188bc:	bl	148c4 <fprintf@plt>
   188c0:	ldr	r0, [r4, #204]	; 0xcc
   188c4:	str	r4, [sp]
   188c8:	str	r4, [sp, #4]
   188cc:	str	r4, [sp, #8]
   188d0:	str	r4, [sp, #12]
   188d4:	str	r4, [sp, #16]
   188d8:	movw	r1, #40397	; 0x9dcd
   188dc:	movt	r1, #3
   188e0:	mov	r2, r4
   188e4:	mov	r3, r4
   188e8:	bl	148c4 <fprintf@plt>
   188ec:	ldr	r0, [r4, #204]	; 0xcc
   188f0:	str	r4, [sp, #32]
   188f4:	str	r4, [sp]
   188f8:	str	r4, [sp, #4]
   188fc:	str	r4, [sp, #8]
   18900:	str	r4, [sp, #12]
   18904:	str	r4, [sp, #16]
   18908:	str	r4, [sp, #20]
   1890c:	str	r4, [sp, #24]
   18910:	str	r4, [sp, #28]
   18914:	movw	r1, #41250	; 0xa122
   18918:	movt	r1, #3
   1891c:	mov	r2, r4
   18920:	mov	r3, r4
   18924:	bl	148c4 <fprintf@plt>
   18928:	ldr	r0, [r4, #204]	; 0xcc
   1892c:	str	r4, [sp, #32]
   18930:	str	r4, [sp, #36]	; 0x24
   18934:	str	r4, [sp, #40]	; 0x28
   18938:	str	r4, [sp]
   1893c:	str	r4, [sp, #4]
   18940:	str	r4, [sp, #8]
   18944:	str	r4, [sp, #12]
   18948:	str	r4, [sp, #16]
   1894c:	str	r4, [sp, #20]
   18950:	str	r4, [sp, #24]
   18954:	str	r4, [sp, #28]
   18958:	movw	r1, #42050	; 0xa442
   1895c:	movt	r1, #3
   18960:	mov	r2, r4
   18964:	mov	r3, r4
   18968:	bl	148c4 <fprintf@plt>
   1896c:	ldr	r0, [r4, #204]	; 0xcc
   18970:	movw	r1, #43787	; 0xab0b
   18974:	movt	r1, #3
   18978:	mov	r2, r4
   1897c:	bl	148c4 <fprintf@plt>
   18980:	ldr	r0, [r4, #204]	; 0xcc
   18984:	movw	r1, #44379	; 0xad5b
   18988:	movt	r1, #3
   1898c:	mov	r2, r4
   18990:	sub	sp, fp, #8
   18994:	pop	{r4, sl, fp, lr}
   18998:	b	148c4 <fprintf@plt>
   1899c:	mov	r2, r1
   189a0:	mov	r1, r0
   189a4:	ldr	r0, [r0, #12]
   189a8:	b	15b9c <__flatcc_fb_scoped_symbol_name@@Base>
   189ac:	movw	r2, #21632	; 0x5480
   189b0:	movt	r2, #3
   189b4:	cmp	r0, #5
   189b8:	moveq	r2, r1
   189bc:	mov	r0, r2
   189c0:	bx	lr
   189c4:	push	{r4, sl, fp, lr}
   189c8:	add	fp, sp, #8
   189cc:	sub	sp, sp, #8
   189d0:	sub	r0, r0, #1
   189d4:	cmp	r0, #11
   189d8:	movwcc	r1, #52372	; 0xcc94
   189dc:	movtcc	r1, #3
   189e0:	ldrcc	r0, [r1, r0, lsl #2]
   189e4:	subcc	sp, fp, #8
   189e8:	popcc	{r4, sl, fp, pc}
   189ec:	movw	r0, #4272	; 0x10b0
   189f0:	movt	r0, #6
   189f4:	ldr	r0, [r0]
   189f8:	movw	r1, #47968	; 0xbb60
   189fc:	movt	r1, #3
   18a00:	str	r1, [sp]
   18a04:	movw	r1, #21375	; 0x537f
   18a08:	movt	r1, #3
   18a0c:	movw	r4, #47895	; 0xbb17
   18a10:	movt	r4, #3
   18a14:	mov	r2, r4
   18a18:	mov	r3, #141	; 0x8d
   18a1c:	bl	148c4 <fprintf@plt>
   18a20:	movw	r0, #25261	; 0x62ad
   18a24:	movt	r0, #4
   18a28:	movw	r3, #48023	; 0xbb97
   18a2c:	movt	r3, #3
   18a30:	mov	r1, r4
   18a34:	mov	r2, #141	; 0x8d
   18a38:	bl	14984 <__assert_fail@plt>
   18a3c:	cmp	r2, #0
   18a40:	bxeq	lr
   18a44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18a48:	add	fp, sp, #24
   18a4c:	mov	r6, r2
   18a50:	mov	r5, r1
   18a54:	mov	r4, r0
   18a58:	mov	r1, #0
   18a5c:	mov	r0, #1
   18a60:	movw	r7, #25277	; 0x62bd
   18a64:	movt	r7, #4
   18a68:	movw	r8, #48077	; 0xbbcd
   18a6c:	movt	r8, #3
   18a70:	movw	r9, #48070	; 0xbbc6
   18a74:	movt	r9, #3
   18a78:	b	18ab0 <__flatcc_fb_gen_c_reader@@Base+0x2268>
   18a7c:	ldr	r0, [r4, #204]	; 0xcc
   18a80:	ldr	r1, [r6, #4]
   18a84:	ldr	r3, [r1]
   18a88:	ldr	r2, [r1, #4]
   18a8c:	mov	r1, r7
   18a90:	bl	148c4 <fprintf@plt>
   18a94:	ldr	r2, [r6]
   18a98:	ldr	r0, [r6, #4]
   18a9c:	ldr	r1, [r0, #8]
   18aa0:	mov	r0, #0
   18aa4:	cmp	r2, #0
   18aa8:	mov	r6, r2
   18aac:	beq	18adc <__flatcc_fb_gen_c_reader@@Base+0x2294>
   18ab0:	ldr	r2, [r6, #4]
   18ab4:	ldr	r2, [r2, #8]
   18ab8:	cmp	r1, r2
   18abc:	beq	18a7c <__flatcc_fb_gen_c_reader@@Base+0x2234>
   18ac0:	cmp	r0, #0
   18ac4:	mov	r1, r9
   18ac8:	moveq	r1, r8
   18acc:	ldr	r0, [r4, #204]	; 0xcc
   18ad0:	mov	r2, r5
   18ad4:	bl	148c4 <fprintf@plt>
   18ad8:	b	18a7c <__flatcc_fb_gen_c_reader@@Base+0x2234>
   18adc:	ldr	r3, [r4, #204]	; 0xcc
   18ae0:	movw	r0, #42576	; 0xa650
   18ae4:	movt	r0, #4
   18ae8:	mov	r1, #4
   18aec:	mov	r2, #1
   18af0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   18af4:	b	14858 <fwrite@plt>
   18af8:	ldr	r0, [r0, #4]
   18afc:	b	18c28 <__flatcc_fb_gen_c_reader@@Base+0x23e0>
   18b00:	push	{r4, r5, fp, lr}
   18b04:	add	fp, sp, #8
   18b08:	sub	sp, sp, #8
   18b0c:	mov	r5, r1
   18b10:	ldrh	r1, [r1, #8]
   18b14:	sub	r1, r1, #3
   18b18:	cmp	r1, #3
   18b1c:	bhi	18bd8 <__flatcc_fb_gen_c_reader@@Base+0x2390>
   18b20:	mov	r4, r2
   18b24:	add	r2, pc, #0
   18b28:	ldr	pc, [r2, r1, lsl #2]
   18b2c:	andeq	r8, r1, ip, lsr fp
   18b30:	muleq	r1, r4, fp
   18b34:	andeq	r8, r1, r0, ror #22
   18b38:	andeq	r8, r1, ip, ror fp
   18b3c:	vldr	d16, [r5]
   18b40:	cmp	r0, #11
   18b44:	bne	18bbc <__flatcc_fb_gen_c_reader@@Base+0x2374>
   18b48:	vcvt.f32.f64	s0, d16
   18b4c:	vcvt.f64.f32	d16, s0
   18b50:	vmov	r2, r3, d16
   18b54:	movw	r1, #48109	; 0xbbed
   18b58:	movt	r1, #3
   18b5c:	b	18bc8 <__flatcc_fb_gen_c_reader@@Base+0x2380>
   18b60:	bl	18c3c <__flatcc_fb_gen_c_reader@@Base+0x23f4>
   18b64:	mov	r2, r0
   18b68:	ldrd	r0, [r5]
   18b6c:	stm	sp, {r0, r1}
   18b70:	movw	r1, #48084	; 0xbbd4
   18b74:	movt	r1, #3
   18b78:	b	18bac <__flatcc_fb_gen_c_reader@@Base+0x2364>
   18b7c:	bl	18c3c <__flatcc_fb_gen_c_reader@@Base+0x23f4>
   18b80:	mov	r2, r0
   18b84:	ldrb	r3, [r5]
   18b88:	movw	r1, #48102	; 0xbbe6
   18b8c:	movt	r1, #3
   18b90:	b	18bc8 <__flatcc_fb_gen_c_reader@@Base+0x2380>
   18b94:	bl	18c3c <__flatcc_fb_gen_c_reader@@Base+0x23f4>
   18b98:	mov	r2, r0
   18b9c:	ldrd	r0, [r5]
   18ba0:	stm	sp, {r0, r1}
   18ba4:	movw	r1, #48093	; 0xbbdd
   18ba8:	movt	r1, #3
   18bac:	mov	r0, r4
   18bb0:	bl	14930 <sprintf@plt>
   18bb4:	sub	sp, fp, #8
   18bb8:	pop	{r4, r5, fp, pc}
   18bbc:	vmov	r2, r3, d16
   18bc0:	movw	r1, #48113	; 0xbbf1
   18bc4:	movt	r1, #3
   18bc8:	mov	r0, r4
   18bcc:	sub	sp, fp, #8
   18bd0:	pop	{r4, r5, fp, lr}
   18bd4:	b	14930 <sprintf@plt>
   18bd8:	movw	r0, #4272	; 0x10b0
   18bdc:	movt	r0, #6
   18be0:	ldr	r0, [r0]
   18be4:	movw	r1, #47968	; 0xbb60
   18be8:	movt	r1, #3
   18bec:	str	r1, [sp]
   18bf0:	movw	r1, #21375	; 0x537f
   18bf4:	movt	r1, #3
   18bf8:	movw	r4, #47895	; 0xbb17
   18bfc:	movt	r4, #3
   18c00:	mov	r2, r4
   18c04:	mov	r3, #260	; 0x104
   18c08:	bl	148c4 <fprintf@plt>
   18c0c:	movw	r0, #25261	; 0x62ad
   18c10:	movt	r0, #4
   18c14:	movw	r3, #48117	; 0xbbf5
   18c18:	movt	r3, #3
   18c1c:	mov	r1, r4
   18c20:	mov	r2, #260	; 0x104
   18c24:	bl	14984 <__assert_fail@plt>
   18c28:	ldr	r3, [r0, #4]
   18c2c:	str	r3, [r1]
   18c30:	ldr	r0, [r0]
   18c34:	str	r0, [r2]
   18c38:	bx	lr
   18c3c:	push	{r4, sl, fp, lr}
   18c40:	add	fp, sp, #8
   18c44:	sub	sp, sp, #8
   18c48:	sub	r0, r0, #1
   18c4c:	cmp	r0, #9
   18c50:	movwcc	r1, #52416	; 0xccc0
   18c54:	movtcc	r1, #3
   18c58:	ldrcc	r0, [r1, r0, lsl #2]
   18c5c:	subcc	sp, fp, #8
   18c60:	popcc	{r4, sl, fp, pc}
   18c64:	movw	r0, #4272	; 0x10b0
   18c68:	movt	r0, #6
   18c6c:	ldr	r0, [r0]
   18c70:	movw	r1, #47968	; 0xbb60
   18c74:	movt	r1, #3
   18c78:	str	r1, [sp]
   18c7c:	movw	r1, #21375	; 0x537f
   18c80:	movt	r1, #3
   18c84:	movw	r4, #47895	; 0xbb17
   18c88:	movt	r4, #3
   18c8c:	mov	r2, r4
   18c90:	mov	r3, #226	; 0xe2
   18c94:	bl	148c4 <fprintf@plt>
   18c98:	movw	r0, #25261	; 0x62ad
   18c9c:	movt	r0, #4
   18ca0:	movw	r3, #48219	; 0xbc5b
   18ca4:	movt	r3, #3
   18ca8:	mov	r1, r4
   18cac:	mov	r2, #226	; 0xe2
   18cb0:	bl	14984 <__assert_fail@plt>
   18cb4:	push	{r4, sl, fp, lr}
   18cb8:	add	fp, sp, #8
   18cbc:	sub	sp, sp, #8
   18cc0:	sub	r0, r0, #1
   18cc4:	cmp	r0, #11
   18cc8:	movwcc	r1, #52452	; 0xcce4
   18ccc:	movtcc	r1, #3
   18cd0:	ldrcc	r0, [r1, r0, lsl #2]
   18cd4:	subcc	sp, fp, #8
   18cd8:	popcc	{r4, sl, fp, pc}
   18cdc:	movw	r0, #4272	; 0x10b0
   18ce0:	movt	r0, #6
   18ce4:	ldr	r0, [r0]
   18ce8:	movw	r1, #47968	; 0xbb60
   18cec:	movt	r1, #3
   18cf0:	str	r1, [sp]
   18cf4:	movw	r1, #21375	; 0x537f
   18cf8:	movt	r1, #3
   18cfc:	movw	r4, #47895	; 0xbb17
   18d00:	movt	r4, #3
   18d04:	mov	r2, r4
   18d08:	mov	r3, #96	; 0x60
   18d0c:	bl	148c4 <fprintf@plt>
   18d10:	movw	r0, #25261	; 0x62ad
   18d14:	movt	r0, #4
   18d18:	movw	r3, #50320	; 0xc490
   18d1c:	movt	r3, #3
   18d20:	mov	r1, r4
   18d24:	mov	r2, #96	; 0x60
   18d28:	bl	14984 <__assert_fail@plt>
   18d2c:	push	{r4, sl, fp, lr}
   18d30:	add	fp, sp, #8
   18d34:	sub	sp, sp, #8
   18d38:	sub	r0, r0, #1
   18d3c:	cmp	r0, #11
   18d40:	movwcc	r1, #52496	; 0xcd10
   18d44:	movtcc	r1, #3
   18d48:	ldrcc	r0, [r1, r0, lsl #2]
   18d4c:	subcc	sp, fp, #8
   18d50:	popcc	{r4, sl, fp, pc}
   18d54:	movw	r0, #4272	; 0x10b0
   18d58:	movt	r0, #6
   18d5c:	ldr	r0, [r0]
   18d60:	movw	r1, #47968	; 0xbb60
   18d64:	movt	r1, #3
   18d68:	str	r1, [sp]
   18d6c:	movw	r1, #21375	; 0x537f
   18d70:	movt	r1, #3
   18d74:	movw	r4, #47895	; 0xbb17
   18d78:	movt	r4, #3
   18d7c:	mov	r2, r4
   18d80:	mov	r3, #186	; 0xba
   18d84:	bl	148c4 <fprintf@plt>
   18d88:	movw	r0, #25261	; 0x62ad
   18d8c:	movt	r0, #4
   18d90:	movw	r3, #52065	; 0xcb61
   18d94:	movt	r3, #3
   18d98:	mov	r1, r4
   18d9c:	mov	r2, #186	; 0xba
   18da0:	bl	14984 <__assert_fail@plt>
   18da4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18da8:	add	fp, sp, #24
   18dac:	sub	sp, sp, #472	; 0x1d8
   18db0:	mov	r5, r3
   18db4:	mov	r6, r2
   18db8:	mov	r7, r1
   18dbc:	mov	r4, r0
   18dc0:	add	r0, sp, #240	; 0xf0
   18dc4:	mov	r1, #0
   18dc8:	mov	r2, #220	; 0xdc
   18dcc:	bl	148dc <memset@plt>
   18dd0:	add	r0, sp, #16
   18dd4:	mov	r1, #0
   18dd8:	mov	r2, #220	; 0xdc
   18ddc:	bl	148dc <memset@plt>
   18de0:	cmp	r7, #0
   18de4:	beq	18e70 <__flatcc_fb_gen_c_reader@@Base+0x2628>
   18de8:	ldrh	r0, [r7, #8]
   18dec:	cmp	r0, #0
   18df0:	beq	18e08 <__flatcc_fb_gen_c_reader@@Base+0x25c0>
   18df4:	cmp	r0, #1
   18df8:	bne	18e78 <__flatcc_fb_gen_c_reader@@Base+0x2630>
   18dfc:	movw	r9, #52126	; 0xcb9e
   18e00:	movt	r9, #3
   18e04:	b	18e10 <__flatcc_fb_gen_c_reader@@Base+0x25c8>
   18e08:	movw	r9, #52119	; 0xcb97
   18e0c:	movt	r9, #3
   18e10:	add	r8, sp, #240	; 0xf0
   18e14:	mov	r0, r7
   18e18:	mov	r1, r8
   18e1c:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18e20:	ldrh	r0, [r6, #8]
   18e24:	cmp	r0, #0
   18e28:	bne	18ec8 <__flatcc_fb_gen_c_reader@@Base+0x2680>
   18e2c:	add	r7, sp, #16
   18e30:	mov	r0, r6
   18e34:	mov	r1, r7
   18e38:	bl	1899c <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18e3c:	sub	r1, fp, #36	; 0x24
   18e40:	sub	r2, fp, #32
   18e44:	mov	r0, r5
   18e48:	bl	18af8 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   18e4c:	ldr	r0, [r4, #204]	; 0xcc
   18e50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18e54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18e58:	stm	sp, {r1, r2, r8, r9}
   18e5c:	movw	r1, #52298	; 0xcc4a
   18e60:	movt	r1, #3
   18e64:	mov	r2, r4
   18e68:	mov	r3, r7
   18e6c:	bl	148c4 <fprintf@plt>
   18e70:	sub	sp, fp, #24
   18e74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18e78:	movw	r0, #4272	; 0x10b0
   18e7c:	movt	r0, #6
   18e80:	ldr	r0, [r0]
   18e84:	movw	r1, #52134	; 0xcba6
   18e88:	movt	r1, #3
   18e8c:	str	r1, [sp]
   18e90:	movw	r1, #21375	; 0x537f
   18e94:	movt	r1, #3
   18e98:	movw	r4, #21386	; 0x538a
   18e9c:	movt	r4, #3
   18ea0:	mov	r2, r4
   18ea4:	movw	r3, #1339	; 0x53b
   18ea8:	bl	148c4 <fprintf@plt>
   18eac:	movw	r0, #25261	; 0x62ad
   18eb0:	movt	r0, #4
   18eb4:	movw	r3, #52186	; 0xcbda
   18eb8:	movt	r3, #3
   18ebc:	mov	r1, r4
   18ec0:	movw	r2, #1339	; 0x53b
   18ec4:	bl	14984 <__assert_fail@plt>
   18ec8:	movw	r0, #52267	; 0xcc2b
   18ecc:	movt	r0, #3
   18ed0:	movw	r1, #21386	; 0x538a
   18ed4:	movt	r1, #3
   18ed8:	movw	r3, #52186	; 0xcbda
   18edc:	movt	r3, #3
   18ee0:	movw	r2, #1343	; 0x53f
   18ee4:	bl	14984 <__assert_fail@plt>

00018ee8 <__flatcc_gen_sort@@Base>:
   18ee8:	push	{r4, sl, fp, lr}
   18eec:	add	fp, sp, #8
   18ef0:	sub	sp, sp, #24
   18ef4:	mov	r4, r0
   18ef8:	ldr	r0, [r0, #204]	; 0xcc
   18efc:	movw	r1, #52540	; 0xcd3c
   18f00:	movt	r1, #3
   18f04:	mov	r2, r4
   18f08:	bl	148c4 <fprintf@plt>
   18f0c:	ldr	r0, [r4, #204]	; 0xcc
   18f10:	movw	r1, #53514	; 0xd10a
   18f14:	movt	r1, #3
   18f18:	mov	r2, r4
   18f1c:	mov	r3, r4
   18f20:	bl	148c4 <fprintf@plt>
   18f24:	ldr	r0, [r4, #204]	; 0xcc
   18f28:	str	r4, [sp]
   18f2c:	movw	r1, #53786	; 0xd21a
   18f30:	movt	r1, #3
   18f34:	mov	r2, r4
   18f38:	mov	r3, r4
   18f3c:	bl	148c4 <fprintf@plt>
   18f40:	ldr	r0, [r4, #204]	; 0xcc
   18f44:	str	r4, [sp]
   18f48:	str	r4, [sp, #4]
   18f4c:	movw	r1, #53998	; 0xd2ee
   18f50:	movt	r1, #3
   18f54:	mov	r2, r4
   18f58:	mov	r3, r4
   18f5c:	bl	148c4 <fprintf@plt>
   18f60:	ldr	r0, [r4, #204]	; 0xcc
   18f64:	movw	r1, #54146	; 0xd382
   18f68:	movt	r1, #3
   18f6c:	mov	r2, r4
   18f70:	mov	r3, r4
   18f74:	bl	148c4 <fprintf@plt>
   18f78:	ldr	r0, [r4, #204]	; 0xcc
   18f7c:	str	r4, [sp]
   18f80:	str	r4, [sp, #4]
   18f84:	movw	r1, #54553	; 0xd519
   18f88:	movt	r1, #3
   18f8c:	mov	r2, r4
   18f90:	mov	r3, r4
   18f94:	bl	148c4 <fprintf@plt>
   18f98:	ldr	r0, [r4, #204]	; 0xcc
   18f9c:	str	r4, [sp]
   18fa0:	str	r4, [sp, #4]
   18fa4:	str	r4, [sp, #8]
   18fa8:	str	r4, [sp, #12]
   18fac:	movw	r1, #54686	; 0xd59e
   18fb0:	movt	r1, #3
   18fb4:	mov	r2, r4
   18fb8:	mov	r3, r4
   18fbc:	bl	148c4 <fprintf@plt>
   18fc0:	ldr	r0, [r4, #204]	; 0xcc
   18fc4:	str	r4, [sp]
   18fc8:	str	r4, [sp, #4]
   18fcc:	movw	r1, #54828	; 0xd62c
   18fd0:	movt	r1, #3
   18fd4:	mov	r2, r4
   18fd8:	mov	r3, r4
   18fdc:	bl	148c4 <fprintf@plt>
   18fe0:	ldr	r0, [r4, #204]	; 0xcc
   18fe4:	str	r4, [sp]
   18fe8:	str	r4, [sp, #4]
   18fec:	str	r4, [sp, #8]
   18ff0:	str	r4, [sp, #12]
   18ff4:	str	r4, [sp, #16]
   18ff8:	movw	r1, #54925	; 0xd68d
   18ffc:	movt	r1, #3
   19000:	mov	r2, r4
   19004:	mov	r3, r4
   19008:	bl	148c4 <fprintf@plt>
   1900c:	mov	r0, #0
   19010:	sub	sp, fp, #8
   19014:	pop	{r4, sl, fp, pc}

00019018 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   19018:	push	{r4, r5, fp, lr}
   1901c:	add	fp, sp, #8
   19020:	sub	sp, sp, #8
   19024:	mov	r5, r0
   19028:	ldr	r0, [r0, #204]	; 0xcc
   1902c:	add	r4, r5, #102	; 0x66
   19030:	movw	r1, #55044	; 0xd704
   19034:	movt	r1, #3
   19038:	mov	r2, r4
   1903c:	bl	148c4 <fprintf@plt>
   19040:	ldr	r0, [r5, #204]	; 0xcc
   19044:	movw	r1, #55073	; 0xd721
   19048:	movt	r1, #3
   1904c:	mov	r2, r4
   19050:	bl	148c4 <fprintf@plt>
   19054:	ldr	r3, [r5, #204]	; 0xcc
   19058:	movw	r0, #21078	; 0x5256
   1905c:	movt	r0, #3
   19060:	mov	r1, #81	; 0x51
   19064:	mov	r2, #1
   19068:	bl	14858 <fwrite@plt>
   1906c:	ldr	r3, [r5, #204]	; 0xcc
   19070:	movw	r0, #55102	; 0xd73e
   19074:	movt	r0, #3
   19078:	mov	r1, #53	; 0x35
   1907c:	mov	r2, #1
   19080:	bl	14858 <fwrite@plt>
   19084:	mov	r0, r5
   19088:	bl	19888 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1908c:	ldr	r3, [r5, #204]	; 0xcc
   19090:	movw	r0, #55156	; 0xd774
   19094:	movt	r0, #3
   19098:	mov	r1, #22
   1909c:	mov	r2, #1
   190a0:	bl	14858 <fwrite@plt>
   190a4:	ldr	r3, [r5, #204]	; 0xcc
   190a8:	movw	r0, #55179	; 0xd78b
   190ac:	movt	r0, #3
   190b0:	mov	r1, #35	; 0x23
   190b4:	mov	r2, #1
   190b8:	bl	14858 <fwrite@plt>
   190bc:	ldr	r3, [r5, #204]	; 0xcc
   190c0:	movw	r0, #46174	; 0xb45e
   190c4:	movt	r0, #3
   190c8:	mov	r1, #7
   190cc:	mov	r2, #1
   190d0:	bl	14858 <fwrite@plt>
   190d4:	movw	r1, #55215	; 0xd7af
   190d8:	movt	r1, #3
   190dc:	mov	r0, r5
   190e0:	bl	147ec <strcmp@plt>
   190e4:	cmp	r0, #0
   190e8:	beq	19164 <__flatcc_fb_gen_common_c_builder_header@@Base+0x14c>
   190ec:	ldr	r0, [r5, #204]	; 0xcc
   190f0:	movw	r1, #55231	; 0xd7bf
   190f4:	movt	r1, #3
   190f8:	mov	r2, r5
   190fc:	bl	148c4 <fprintf@plt>
   19100:	ldr	r0, [r5, #204]	; 0xcc
   19104:	movw	r1, #55270	; 0xd7e6
   19108:	movt	r1, #3
   1910c:	mov	r2, r5
   19110:	bl	148c4 <fprintf@plt>
   19114:	ldr	r0, [r5, #204]	; 0xcc
   19118:	movw	r1, #55309	; 0xd80d
   1911c:	movt	r1, #3
   19120:	mov	r2, r5
   19124:	bl	148c4 <fprintf@plt>
   19128:	ldr	r0, [r5, #204]	; 0xcc
   1912c:	movw	r1, #55352	; 0xd838
   19130:	movt	r1, #3
   19134:	mov	r2, r5
   19138:	bl	148c4 <fprintf@plt>
   1913c:	ldr	r0, [r5, #204]	; 0xcc
   19140:	movw	r1, #55403	; 0xd86b
   19144:	movt	r1, #3
   19148:	mov	r2, r5
   1914c:	bl	148c4 <fprintf@plt>
   19150:	ldr	r0, [r5, #204]	; 0xcc
   19154:	movw	r1, #55462	; 0xd8a6
   19158:	movt	r1, #3
   1915c:	mov	r2, r5
   19160:	bl	148c4 <fprintf@plt>
   19164:	ldr	r0, [r5, #204]	; 0xcc
   19168:	movw	r1, #55550	; 0xd8fe
   1916c:	movt	r1, #3
   19170:	mov	r2, r5
   19174:	mov	r3, r5
   19178:	bl	148c4 <fprintf@plt>
   1917c:	ldr	r0, [r5, #204]	; 0xcc
   19180:	movw	r1, #55577	; 0xd919
   19184:	movt	r1, #3
   19188:	mov	r2, r5
   1918c:	mov	r3, r5
   19190:	bl	148c4 <fprintf@plt>
   19194:	movw	r1, #21633	; 0x5481
   19198:	movt	r1, #3
   1919c:	mov	r0, r5
   191a0:	bl	147ec <strcmp@plt>
   191a4:	cmp	r0, #0
   191a8:	beq	191d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1bc>
   191ac:	ldr	r0, [r5, #204]	; 0xcc
   191b0:	movw	r1, #55616	; 0xd940
   191b4:	movt	r1, #3
   191b8:	mov	r2, r5
   191bc:	bl	148c4 <fprintf@plt>
   191c0:	ldr	r0, [r5, #204]	; 0xcc
   191c4:	movw	r1, #55665	; 0xd971
   191c8:	movt	r1, #3
   191cc:	mov	r2, r5
   191d0:	bl	148c4 <fprintf@plt>
   191d4:	ldr	r1, [r5, #204]	; 0xcc
   191d8:	mov	r0, #10
   191dc:	bl	14924 <fputc@plt>
   191e0:	ldr	r0, [r5, #204]	; 0xcc
   191e4:	movw	r1, #55701	; 0xd995
   191e8:	movt	r1, #3
   191ec:	mov	r2, r5
   191f0:	bl	148c4 <fprintf@plt>
   191f4:	ldr	r0, [r5, #204]	; 0xcc
   191f8:	movw	r1, #56584	; 0xdd08
   191fc:	movt	r1, #3
   19200:	mov	r2, r5
   19204:	bl	148c4 <fprintf@plt>
   19208:	ldr	r0, [r5, #204]	; 0xcc
   1920c:	str	r5, [sp]
   19210:	movw	r1, #58321	; 0xe3d1
   19214:	movt	r1, #3
   19218:	mov	r2, r5
   1921c:	mov	r3, r5
   19220:	bl	148c4 <fprintf@plt>
   19224:	ldr	r0, [r5, #204]	; 0xcc
   19228:	movw	r1, #58458	; 0xe45a
   1922c:	movt	r1, #3
   19230:	mov	r2, r5
   19234:	bl	148c4 <fprintf@plt>
   19238:	ldr	r0, [r5, #204]	; 0xcc
   1923c:	movw	r1, #61205	; 0xef15
   19240:	movt	r1, #3
   19244:	mov	r2, r5
   19248:	bl	148c4 <fprintf@plt>
   1924c:	ldr	r0, [r5, #204]	; 0xcc
   19250:	movw	r1, #62192	; 0xf2f0
   19254:	movt	r1, #3
   19258:	mov	r2, r5
   1925c:	bl	148c4 <fprintf@plt>
   19260:	ldr	r0, [r5, #204]	; 0xcc
   19264:	movw	r1, #63782	; 0xf926
   19268:	movt	r1, #3
   1926c:	mov	r2, r5
   19270:	bl	148c4 <fprintf@plt>
   19274:	ldr	r0, [r5, #204]	; 0xcc
   19278:	movw	r1, #64930	; 0xfda2
   1927c:	movt	r1, #3
   19280:	mov	r2, r5
   19284:	mov	r3, r5
   19288:	bl	148c4 <fprintf@plt>
   1928c:	ldr	r0, [r5, #204]	; 0xcc
   19290:	str	r5, [sp]
   19294:	movw	r1, #1301	; 0x515
   19298:	movt	r1, #4
   1929c:	mov	r2, r5
   192a0:	mov	r3, r5
   192a4:	bl	148c4 <fprintf@plt>
   192a8:	ldr	r0, [r5, #204]	; 0xcc
   192ac:	movw	r1, #2653	; 0xa5d
   192b0:	movt	r1, #4
   192b4:	mov	r2, r5
   192b8:	bl	148c4 <fprintf@plt>
   192bc:	ldr	r0, [r5, #204]	; 0xcc
   192c0:	movw	r1, #3803	; 0xedb
   192c4:	movt	r1, #4
   192c8:	mov	r2, r5
   192cc:	bl	148c4 <fprintf@plt>
   192d0:	ldr	r0, [r5, #204]	; 0xcc
   192d4:	movw	r1, #4201	; 0x1069
   192d8:	movt	r1, #4
   192dc:	mov	r2, r5
   192e0:	bl	148c4 <fprintf@plt>
   192e4:	ldr	r0, [r5, #204]	; 0xcc
   192e8:	movw	r1, #5059	; 0x13c3
   192ec:	movt	r1, #4
   192f0:	mov	r2, r5
   192f4:	mov	r3, r5
   192f8:	bl	148c4 <fprintf@plt>
   192fc:	ldr	r0, [r5, #204]	; 0xcc
   19300:	movw	r1, #5576	; 0x15c8
   19304:	movt	r1, #4
   19308:	mov	r2, r5
   1930c:	bl	148c4 <fprintf@plt>
   19310:	ldr	r0, [r5, #204]	; 0xcc
   19314:	str	r5, [sp]
   19318:	movw	r1, #6449	; 0x1931
   1931c:	movt	r1, #4
   19320:	mov	r2, r5
   19324:	mov	r3, r5
   19328:	bl	148c4 <fprintf@plt>
   1932c:	ldr	r0, [r5, #204]	; 0xcc
   19330:	str	r5, [sp]
   19334:	str	r5, [sp, #4]
   19338:	movw	r1, #7725	; 0x1e2d
   1933c:	movt	r1, #4
   19340:	mov	r2, r5
   19344:	mov	r3, r5
   19348:	bl	148c4 <fprintf@plt>
   1934c:	ldr	r0, [r5, #204]	; 0xcc
   19350:	movw	r1, #7990	; 0x1f36
   19354:	movt	r1, #4
   19358:	mov	r2, r5
   1935c:	mov	r3, r5
   19360:	bl	148c4 <fprintf@plt>
   19364:	ldr	r0, [r5, #204]	; 0xcc
   19368:	str	r5, [sp]
   1936c:	str	r5, [sp, #4]
   19370:	movw	r1, #8862	; 0x229e
   19374:	movt	r1, #4
   19378:	mov	r2, r5
   1937c:	mov	r3, r5
   19380:	bl	148c4 <fprintf@plt>
   19384:	ldr	r0, [r5, #204]	; 0xcc
   19388:	movw	r1, #10396	; 0x289c
   1938c:	movt	r1, #4
   19390:	mov	r2, r5
   19394:	mov	r3, r5
   19398:	bl	148c4 <fprintf@plt>
   1939c:	ldr	r0, [r5, #204]	; 0xcc
   193a0:	movw	r1, #10831	; 0x2a4f
   193a4:	movt	r1, #4
   193a8:	mov	r2, r5
   193ac:	bl	148c4 <fprintf@plt>
   193b0:	ldr	r0, [r5, #204]	; 0xcc
   193b4:	movw	r1, #11380	; 0x2c74
   193b8:	movt	r1, #4
   193bc:	mov	r2, r5
   193c0:	bl	148c4 <fprintf@plt>
   193c4:	ldr	r0, [r5, #204]	; 0xcc
   193c8:	movw	r1, #12340	; 0x3034
   193cc:	movt	r1, #4
   193d0:	mov	r2, r5
   193d4:	bl	148c4 <fprintf@plt>
   193d8:	ldr	r0, [r5, #204]	; 0xcc
   193dc:	movw	r1, #13041	; 0x32f1
   193e0:	movt	r1, #4
   193e4:	mov	r2, r5
   193e8:	bl	148c4 <fprintf@plt>
   193ec:	ldr	r0, [r5, #204]	; 0xcc
   193f0:	movw	r1, #14085	; 0x3705
   193f4:	movt	r1, #4
   193f8:	mov	r2, r5
   193fc:	mov	r3, r5
   19400:	bl	148c4 <fprintf@plt>
   19404:	ldr	r0, [r5, #204]	; 0xcc
   19408:	movw	r1, #14321	; 0x37f1
   1940c:	movt	r1, #4
   19410:	mov	r2, r5
   19414:	bl	148c4 <fprintf@plt>
   19418:	ldr	r0, [r5, #204]	; 0xcc
   1941c:	movw	r1, #14930	; 0x3a52
   19420:	movt	r1, #4
   19424:	mov	r2, r5
   19428:	bl	148c4 <fprintf@plt>
   1942c:	ldr	r0, [r5, #204]	; 0xcc
   19430:	movw	r1, #15817	; 0x3dc9
   19434:	movt	r1, #4
   19438:	mov	r2, r5
   1943c:	mov	r3, r5
   19440:	bl	148c4 <fprintf@plt>
   19444:	ldr	r0, [r5, #204]	; 0xcc
   19448:	movw	r1, #16920	; 0x4218
   1944c:	movt	r1, #4
   19450:	mov	r2, r5
   19454:	mov	r3, r5
   19458:	bl	148c4 <fprintf@plt>
   1945c:	ldr	r0, [r5, #204]	; 0xcc
   19460:	movw	r1, #17584	; 0x44b0
   19464:	movt	r1, #4
   19468:	mov	r2, r5
   1946c:	mov	r3, r5
   19470:	bl	148c4 <fprintf@plt>
   19474:	ldr	r0, [r5, #204]	; 0xcc
   19478:	movw	r1, #18604	; 0x48ac
   1947c:	movt	r1, #4
   19480:	mov	r2, r5
   19484:	mov	r3, r5
   19488:	bl	148c4 <fprintf@plt>
   1948c:	ldr	r0, [r5, #204]	; 0xcc
   19490:	str	r5, [sp]
   19494:	movw	r1, #18872	; 0x49b8
   19498:	movt	r1, #4
   1949c:	mov	r2, r5
   194a0:	mov	r3, r5
   194a4:	bl	148c4 <fprintf@plt>
   194a8:	ldr	r0, [r5, #204]	; 0xcc
   194ac:	movw	r1, #19011	; 0x4a43
   194b0:	movt	r1, #4
   194b4:	mov	r2, r5
   194b8:	mov	r3, r5
   194bc:	bl	148c4 <fprintf@plt>
   194c0:	ldr	r0, [r5, #204]	; 0xcc
   194c4:	movw	r1, #19855	; 0x4d8f
   194c8:	movt	r1, #4
   194cc:	mov	r2, r5
   194d0:	bl	148c4 <fprintf@plt>
   194d4:	ldr	r0, [r5, #204]	; 0xcc
   194d8:	movw	r1, #20503	; 0x5017
   194dc:	movt	r1, #4
   194e0:	mov	r2, r5
   194e4:	bl	148c4 <fprintf@plt>
   194e8:	ldr	r0, [r5, #204]	; 0xcc
   194ec:	movw	r1, #21157	; 0x52a5
   194f0:	movt	r1, #4
   194f4:	mov	r2, r5
   194f8:	bl	148c4 <fprintf@plt>
   194fc:	ldr	r0, [r5, #204]	; 0xcc
   19500:	str	r5, [sp]
   19504:	movw	r1, #22619	; 0x585b
   19508:	movt	r1, #4
   1950c:	mov	r2, r5
   19510:	mov	r3, r5
   19514:	bl	148c4 <fprintf@plt>
   19518:	ldr	r0, [r5, #204]	; 0xcc
   1951c:	movw	r1, #22762	; 0x58ea
   19520:	movt	r1, #4
   19524:	mov	r2, r5
   19528:	bl	148c4 <fprintf@plt>
   1952c:	ldr	r0, [r5, #204]	; 0xcc
   19530:	movw	r1, #22806	; 0x5916
   19534:	movt	r1, #4
   19538:	mov	r2, r5
   1953c:	bl	148c4 <fprintf@plt>
   19540:	ldr	r0, [r5, #204]	; 0xcc
   19544:	movw	r1, #22840	; 0x5938
   19548:	movt	r1, #4
   1954c:	mov	r2, r5
   19550:	bl	148c4 <fprintf@plt>
   19554:	ldr	r0, [r5, #204]	; 0xcc
   19558:	movw	r1, #22882	; 0x5962
   1955c:	movt	r1, #4
   19560:	mov	r2, r5
   19564:	bl	148c4 <fprintf@plt>
   19568:	ldr	r0, [r5, #204]	; 0xcc
   1956c:	movw	r1, #22915	; 0x5983
   19570:	movt	r1, #4
   19574:	mov	r2, r5
   19578:	mov	r3, r5
   1957c:	bl	148c4 <fprintf@plt>
   19580:	ldr	r0, [r5, #204]	; 0xcc
   19584:	movw	r1, #22959	; 0x59af
   19588:	movt	r1, #4
   1958c:	mov	r2, r5
   19590:	bl	148c4 <fprintf@plt>
   19594:	ldr	r0, [r5, #204]	; 0xcc
   19598:	movw	r1, #22992	; 0x59d0
   1959c:	movt	r1, #4
   195a0:	mov	r2, r5
   195a4:	bl	148c4 <fprintf@plt>
   195a8:	ldr	r0, [r5, #204]	; 0xcc
   195ac:	movw	r1, #23038	; 0x59fe
   195b0:	movt	r1, #4
   195b4:	mov	r2, r5
   195b8:	bl	148c4 <fprintf@plt>
   195bc:	ldr	r0, [r5, #204]	; 0xcc
   195c0:	movw	r1, #23073	; 0x5a21
   195c4:	movt	r1, #4
   195c8:	mov	r2, r5
   195cc:	bl	148c4 <fprintf@plt>
   195d0:	ldr	r0, [r5, #204]	; 0xcc
   195d4:	movw	r1, #23119	; 0x5a4f
   195d8:	movt	r1, #4
   195dc:	mov	r2, r5
   195e0:	bl	148c4 <fprintf@plt>
   195e4:	ldr	r0, [r5, #204]	; 0xcc
   195e8:	movw	r1, #23154	; 0x5a72
   195ec:	movt	r1, #4
   195f0:	mov	r2, r5
   195f4:	bl	148c4 <fprintf@plt>
   195f8:	ldr	r0, [r5, #204]	; 0xcc
   195fc:	movw	r1, #23200	; 0x5aa0
   19600:	movt	r1, #4
   19604:	mov	r2, r5
   19608:	bl	148c4 <fprintf@plt>
   1960c:	ldr	r0, [r5, #204]	; 0xcc
   19610:	movw	r1, #23235	; 0x5ac3
   19614:	movt	r1, #4
   19618:	mov	r2, r5
   1961c:	bl	148c4 <fprintf@plt>
   19620:	ldr	r0, [r5, #204]	; 0xcc
   19624:	movw	r1, #23279	; 0x5aef
   19628:	movt	r1, #4
   1962c:	mov	r2, r5
   19630:	bl	148c4 <fprintf@plt>
   19634:	ldr	r0, [r5, #204]	; 0xcc
   19638:	movw	r1, #23313	; 0x5b11
   1963c:	movt	r1, #4
   19640:	mov	r2, r5
   19644:	bl	148c4 <fprintf@plt>
   19648:	ldr	r0, [r5, #204]	; 0xcc
   1964c:	movw	r1, #23357	; 0x5b3d
   19650:	movt	r1, #4
   19654:	mov	r2, r5
   19658:	bl	148c4 <fprintf@plt>
   1965c:	ldr	r0, [r5, #204]	; 0xcc
   19660:	movw	r1, #23391	; 0x5b5f
   19664:	movt	r1, #4
   19668:	mov	r2, r5
   1966c:	bl	148c4 <fprintf@plt>
   19670:	ldr	r0, [r5, #204]	; 0xcc
   19674:	movw	r1, #23435	; 0x5b8b
   19678:	movt	r1, #4
   1967c:	mov	r2, r5
   19680:	bl	148c4 <fprintf@plt>
   19684:	ldr	r0, [r5, #204]	; 0xcc
   19688:	movw	r1, #23469	; 0x5bad
   1968c:	movt	r1, #4
   19690:	mov	r2, r5
   19694:	bl	148c4 <fprintf@plt>
   19698:	ldr	r0, [r5, #204]	; 0xcc
   1969c:	movw	r1, #23511	; 0x5bd7
   196a0:	movt	r1, #4
   196a4:	mov	r2, r5
   196a8:	bl	148c4 <fprintf@plt>
   196ac:	ldr	r0, [r5, #204]	; 0xcc
   196b0:	movw	r1, #23545	; 0x5bf9
   196b4:	movt	r1, #4
   196b8:	mov	r2, r5
   196bc:	bl	148c4 <fprintf@plt>
   196c0:	ldr	r0, [r5, #204]	; 0xcc
   196c4:	movw	r1, #23589	; 0x5c25
   196c8:	movt	r1, #4
   196cc:	mov	r2, r5
   196d0:	bl	148c4 <fprintf@plt>
   196d4:	ldr	r1, [r5, #204]	; 0xcc
   196d8:	mov	r0, #10
   196dc:	bl	14924 <fputc@plt>
   196e0:	ldr	r0, [r5, #204]	; 0xcc
   196e4:	str	r5, [sp]
   196e8:	movw	r1, #23624	; 0x5c48
   196ec:	movt	r1, #4
   196f0:	mov	r2, r5
   196f4:	mov	r3, r5
   196f8:	bl	148c4 <fprintf@plt>
   196fc:	ldr	r0, [r5, #204]	; 0xcc
   19700:	str	r5, [sp]
   19704:	movw	r1, #23664	; 0x5c70
   19708:	movt	r1, #4
   1970c:	mov	r2, r5
   19710:	mov	r3, r5
   19714:	bl	148c4 <fprintf@plt>
   19718:	ldr	r0, [r5, #204]	; 0xcc
   1971c:	str	r5, [sp]
   19720:	str	r5, [sp, #4]
   19724:	movw	r1, #23702	; 0x5c96
   19728:	movt	r1, #4
   1972c:	mov	r2, r5
   19730:	mov	r3, r5
   19734:	bl	148c4 <fprintf@plt>
   19738:	ldr	r0, [r5, #204]	; 0xcc
   1973c:	str	r5, [sp]
   19740:	movw	r1, #23742	; 0x5cbe
   19744:	movt	r1, #4
   19748:	mov	r2, r5
   1974c:	mov	r3, r5
   19750:	bl	148c4 <fprintf@plt>
   19754:	ldr	r0, [r5, #204]	; 0xcc
   19758:	str	r5, [sp]
   1975c:	movw	r1, #23784	; 0x5ce8
   19760:	movt	r1, #4
   19764:	mov	r2, r5
   19768:	mov	r3, r5
   1976c:	bl	148c4 <fprintf@plt>
   19770:	ldr	r0, [r5, #204]	; 0xcc
   19774:	str	r5, [sp]
   19778:	movw	r1, #23826	; 0x5d12
   1977c:	movt	r1, #4
   19780:	mov	r2, r5
   19784:	mov	r3, r5
   19788:	bl	148c4 <fprintf@plt>
   1978c:	ldr	r0, [r5, #204]	; 0xcc
   19790:	str	r5, [sp]
   19794:	movw	r1, #23868	; 0x5d3c
   19798:	movt	r1, #4
   1979c:	mov	r2, r5
   197a0:	mov	r3, r5
   197a4:	bl	148c4 <fprintf@plt>
   197a8:	ldr	r0, [r5, #204]	; 0xcc
   197ac:	str	r5, [sp]
   197b0:	movw	r1, #23908	; 0x5d64
   197b4:	movt	r1, #4
   197b8:	mov	r2, r5
   197bc:	mov	r3, r5
   197c0:	bl	148c4 <fprintf@plt>
   197c4:	ldr	r0, [r5, #204]	; 0xcc
   197c8:	str	r5, [sp]
   197cc:	movw	r1, #23948	; 0x5d8c
   197d0:	movt	r1, #4
   197d4:	mov	r2, r5
   197d8:	mov	r3, r5
   197dc:	bl	148c4 <fprintf@plt>
   197e0:	ldr	r0, [r5, #204]	; 0xcc
   197e4:	str	r5, [sp]
   197e8:	movw	r1, #23988	; 0x5db4
   197ec:	movt	r1, #4
   197f0:	mov	r2, r5
   197f4:	mov	r3, r5
   197f8:	bl	148c4 <fprintf@plt>
   197fc:	ldr	r0, [r5, #204]	; 0xcc
   19800:	str	r5, [sp]
   19804:	movw	r1, #24026	; 0x5dda
   19808:	movt	r1, #4
   1980c:	mov	r2, r5
   19810:	mov	r3, r5
   19814:	bl	148c4 <fprintf@plt>
   19818:	ldr	r1, [r5, #204]	; 0xcc
   1981c:	mov	r0, #10
   19820:	bl	14924 <fputc@plt>
   19824:	ldr	r0, [r5, #204]	; 0xcc
   19828:	movw	r1, #24066	; 0x5e02
   1982c:	movt	r1, #4
   19830:	mov	r2, r5
   19834:	mov	r3, r5
   19838:	bl	148c4 <fprintf@plt>
   1983c:	ldr	r1, [r5, #204]	; 0xcc
   19840:	mov	r0, #10
   19844:	bl	14924 <fputc@plt>
   19848:	ldr	r0, [r5, #204]	; 0xcc
   1984c:	movw	r1, #24088	; 0x5e18
   19850:	movt	r1, #4
   19854:	mov	r2, r5
   19858:	mov	r3, r5
   1985c:	bl	148c4 <fprintf@plt>
   19860:	mov	r0, r5
   19864:	bl	198b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   19868:	ldr	r0, [r5, #204]	; 0xcc
   1986c:	movw	r1, #24110	; 0x5e2e
   19870:	movt	r1, #4
   19874:	mov	r2, r4
   19878:	bl	148c4 <fprintf@plt>
   1987c:	mov	r0, #0
   19880:	sub	sp, fp, #8
   19884:	pop	{r4, r5, fp, pc}
   19888:	ldr	r1, [r0, #212]	; 0xd4
   1988c:	ldr	r1, [r1, #140]	; 0x8c
   19890:	cmp	r1, #0
   19894:	bxeq	lr
   19898:	ldr	r3, [r0, #204]	; 0xcc
   1989c:	movw	r0, #21554	; 0x5432
   198a0:	movt	r0, #3
   198a4:	mov	r1, #36	; 0x24
   198a8:	mov	r2, #1
   198ac:	b	14858 <fwrite@plt>
   198b0:	ldr	r1, [r0, #212]	; 0xd4
   198b4:	ldr	r1, [r1, #140]	; 0x8c
   198b8:	cmp	r1, #0
   198bc:	bxeq	lr
   198c0:	ldr	r3, [r0, #204]	; 0xcc
   198c4:	movw	r0, #45596	; 0xb21c
   198c8:	movt	r0, #3
   198cc:	mov	r1, #36	; 0x24
   198d0:	mov	r2, #1
   198d4:	b	14858 <fwrite@plt>

000198d8 <__flatcc_fb_gen_c_builder@@Base>:
   198d8:	push	{r4, sl, fp, lr}
   198dc:	add	fp, sp, #8
   198e0:	mov	r4, r0
   198e4:	bl	19910 <__flatcc_fb_gen_c_builder@@Base+0x38>
   198e8:	mov	r0, r4
   198ec:	bl	19a9c <__flatcc_fb_gen_c_builder@@Base+0x1c4>
   198f0:	mov	r0, r4
   198f4:	bl	19b64 <__flatcc_fb_gen_c_builder@@Base+0x28c>
   198f8:	mov	r0, r4
   198fc:	bl	19ba8 <__flatcc_fb_gen_c_builder@@Base+0x2d0>
   19900:	mov	r0, r4
   19904:	bl	19cd0 <__flatcc_fb_gen_c_builder@@Base+0x3f8>
   19908:	mov	r0, #0
   1990c:	pop	{r4, sl, fp, pc}
   19910:	push	{r4, r5, fp, lr}
   19914:	add	fp, sp, #8
   19918:	sub	sp, sp, #8
   1991c:	mov	r4, r0
   19920:	ldr	r0, [r0, #204]	; 0xcc
   19924:	ldr	r1, [r4, #208]	; 0xd0
   19928:	ldr	r2, [r1, #164]	; 0xa4
   1992c:	movw	r1, #24144	; 0x5e50
   19930:	movt	r1, #4
   19934:	mov	r3, r2
   19938:	bl	148c4 <fprintf@plt>
   1993c:	ldr	r3, [r4, #204]	; 0xcc
   19940:	movw	r0, #21078	; 0x5256
   19944:	movt	r0, #3
   19948:	mov	r1, #81	; 0x51
   1994c:	mov	r2, #1
   19950:	bl	14858 <fwrite@plt>
   19954:	ldr	r0, [r4, #204]	; 0xcc
   19958:	ldr	r1, [r4, #208]	; 0xd0
   1995c:	ldr	r2, [r1, #164]	; 0xa4
   19960:	movw	r1, #24187	; 0x5e7b
   19964:	movt	r1, #4
   19968:	bl	148c4 <fprintf@plt>
   1996c:	ldr	r0, [r4, #204]	; 0xcc
   19970:	ldr	r1, [r4, #208]	; 0xd0
   19974:	ldr	r2, [r1, #160]	; 0xa0
   19978:	movw	r1, #24208	; 0x5e90
   1997c:	movt	r1, #4
   19980:	bl	148c4 <fprintf@plt>
   19984:	ldr	r3, [r4, #204]	; 0xcc
   19988:	movw	r5, #46174	; 0xb45e
   1998c:	movt	r5, #3
   19990:	mov	r0, r5
   19994:	mov	r1, #7
   19998:	mov	r2, #1
   1999c:	bl	14858 <fwrite@plt>
   199a0:	ldr	r0, [r4, #204]	; 0xcc
   199a4:	add	r2, r4, #102	; 0x66
   199a8:	movw	r1, #55044	; 0xd704
   199ac:	movt	r1, #3
   199b0:	bl	148c4 <fprintf@plt>
   199b4:	ldr	r0, [r4, #204]	; 0xcc
   199b8:	movw	r1, #24232	; 0x5ea8
   199bc:	movt	r1, #4
   199c0:	mov	r2, r4
   199c4:	bl	148c4 <fprintf@plt>
   199c8:	ldr	r3, [r4, #204]	; 0xcc
   199cc:	mov	r0, r5
   199d0:	mov	r1, #7
   199d4:	mov	r2, #1
   199d8:	bl	14858 <fwrite@plt>
   199dc:	movw	r1, #48125	; 0xbbfd
   199e0:	movt	r1, #4
   199e4:	movw	r2, #24263	; 0x5ec7
   199e8:	movt	r2, #4
   199ec:	mov	r0, r4
   199f0:	bl	159b4 <__flatcc_fb_gen_c_includes@@Base>
   199f4:	mov	r0, r4
   199f8:	bl	19888 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   199fc:	ldr	r0, [r4, #204]	; 0xcc
   19a00:	ldr	r1, [r4, #208]	; 0xd0
   19a04:	ldrh	r2, [r1, #16]
   19a08:	cmp	r2, #2
   19a0c:	bne	19a28 <__flatcc_fb_gen_c_builder@@Base+0x150>
   19a10:	ldrd	r2, [r1, #8]
   19a14:	str	r3, [sp]
   19a18:	str	r2, [sp, #4]
   19a1c:	movw	r1, #46291	; 0xb4d3
   19a20:	movt	r1, #3
   19a24:	b	19a30 <__flatcc_fb_gen_c_builder@@Base+0x158>
   19a28:	movw	r1, #46340	; 0xb504
   19a2c:	movt	r1, #3
   19a30:	mov	r2, r4
   19a34:	mov	r3, r4
   19a38:	bl	148c4 <fprintf@plt>
   19a3c:	ldr	r0, [r4, #204]	; 0xcc
   19a40:	ldr	r1, [r4, #208]	; 0xd0
   19a44:	ldrh	r2, [r1, #32]
   19a48:	cmp	r2, #2
   19a4c:	bne	19a68 <__flatcc_fb_gen_c_builder@@Base+0x190>
   19a50:	ldrd	r2, [r1, #24]
   19a54:	str	r3, [sp]
   19a58:	str	r2, [sp, #4]
   19a5c:	movw	r1, #46392	; 0xb538
   19a60:	movt	r1, #3
   19a64:	b	19a7c <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   19a68:	ldr	r1, [r4, #212]	; 0xd4
   19a6c:	ldr	r1, [r1, #104]	; 0x68
   19a70:	str	r1, [sp]
   19a74:	movw	r1, #46440	; 0xb568
   19a78:	movt	r1, #3
   19a7c:	mov	r2, r4
   19a80:	mov	r3, r4
   19a84:	bl	148c4 <fprintf@plt>
   19a88:	ldr	r1, [r4, #204]	; 0xcc
   19a8c:	mov	r0, #10
   19a90:	sub	sp, fp, #8
   19a94:	pop	{r4, r5, fp, lr}
   19a98:	b	14924 <fputc@plt>
   19a9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19aa0:	add	fp, sp, #24
   19aa4:	sub	sp, sp, #232	; 0xe8
   19aa8:	mov	r4, r0
   19aac:	add	r5, sp, #8
   19ab0:	mov	r7, #0
   19ab4:	mov	r0, r5
   19ab8:	mov	r1, #0
   19abc:	mov	r2, #220	; 0xdc
   19ac0:	bl	148dc <memset@plt>
   19ac4:	ldr	r0, [r4, #208]	; 0xd0
   19ac8:	ldr	r6, [r0, #40]	; 0x28
   19acc:	cmp	r6, #0
   19ad0:	beq	19b5c <__flatcc_fb_gen_c_builder@@Base+0x284>
   19ad4:	movw	r8, #24274	; 0x5ed2
   19ad8:	movt	r8, #4
   19adc:	movw	r9, #24343	; 0x5f17
   19ae0:	movt	r9, #4
   19ae4:	b	19af4 <__flatcc_fb_gen_c_builder@@Base+0x21c>
   19ae8:	ldr	r6, [r6]
   19aec:	cmp	r6, #0
   19af0:	beq	19b48 <__flatcc_fb_gen_c_builder@@Base+0x270>
   19af4:	ldrh	r0, [r6, #8]
   19af8:	cmp	r0, #3
   19afc:	bne	19ae8 <__flatcc_fb_gen_c_builder@@Base+0x210>
   19b00:	mov	r0, r6
   19b04:	mov	r1, r5
   19b08:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   19b0c:	ldr	r0, [r4, #204]	; 0xcc
   19b10:	str	r5, [sp]
   19b14:	mov	r1, r8
   19b18:	mov	r2, r5
   19b1c:	mov	r3, r5
   19b20:	bl	148c4 <fprintf@plt>
   19b24:	ldr	r0, [r4, #204]	; 0xcc
   19b28:	str	r5, [sp]
   19b2c:	str	r5, [sp, #4]
   19b30:	mov	r1, r9
   19b34:	mov	r2, r4
   19b38:	mov	r3, r4
   19b3c:	bl	148c4 <fprintf@plt>
   19b40:	mov	r7, #1
   19b44:	b	19ae8 <__flatcc_fb_gen_c_builder@@Base+0x210>
   19b48:	cmp	r7, #0
   19b4c:	beq	19b5c <__flatcc_fb_gen_c_builder@@Base+0x284>
   19b50:	ldr	r1, [r4, #204]	; 0xcc
   19b54:	mov	r0, #10
   19b58:	bl	14924 <fputc@plt>
   19b5c:	sub	sp, fp, #24
   19b60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b64:	push	{r4, r5, fp, lr}
   19b68:	add	fp, sp, #8
   19b6c:	mov	r4, r0
   19b70:	ldr	r0, [r0, #208]	; 0xd0
   19b74:	ldr	r5, [r0, #44]	; 0x2c
   19b78:	cmp	r5, #0
   19b7c:	beq	19ba4 <__flatcc_fb_gen_c_builder@@Base+0x2cc>
   19b80:	mov	r0, r4
   19b84:	mov	r1, r5
   19b88:	bl	19d0c <__flatcc_fb_gen_c_builder@@Base+0x434>
   19b8c:	ldr	r1, [r4, #204]	; 0xcc
   19b90:	mov	r0, #10
   19b94:	bl	14924 <fputc@plt>
   19b98:	ldr	r5, [r5, #120]	; 0x78
   19b9c:	cmp	r5, #0
   19ba0:	bne	19b80 <__flatcc_fb_gen_c_builder@@Base+0x2a8>
   19ba4:	pop	{r4, r5, fp, pc}
   19ba8:	push	{r4, r5, r6, sl, fp, lr}
   19bac:	add	fp, sp, #16
   19bb0:	mov	r4, r0
   19bb4:	bl	1a900 <__flatcc_fb_gen_c_builder@@Base+0x1028>
   19bb8:	ldr	r0, [r4, #208]	; 0xd0
   19bbc:	ldr	r5, [r0, #40]	; 0x28
   19bc0:	mov	r6, #0
   19bc4:	cmp	r5, #0
   19bc8:	bne	19bdc <__flatcc_fb_gen_c_builder@@Base+0x304>
   19bcc:	b	19c08 <__flatcc_fb_gen_c_builder@@Base+0x330>
   19bd0:	ldr	r5, [r5]
   19bd4:	cmp	r5, #0
   19bd8:	beq	19c08 <__flatcc_fb_gen_c_builder@@Base+0x330>
   19bdc:	ldrh	r0, [r5, #8]
   19be0:	cmp	r0, #0
   19be4:	bne	19bd0 <__flatcc_fb_gen_c_builder@@Base+0x2f8>
   19be8:	mov	r0, r4
   19bec:	mov	r1, r5
   19bf0:	bl	1a9a4 <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   19bf4:	mov	r0, r4
   19bf8:	mov	r1, r5
   19bfc:	bl	1aab0 <__flatcc_fb_gen_c_builder@@Base+0x11d8>
   19c00:	mov	r6, #1
   19c04:	b	19bd0 <__flatcc_fb_gen_c_builder@@Base+0x2f8>
   19c08:	ldr	r0, [r4, #208]	; 0xd0
   19c0c:	ldr	r5, [r0, #40]	; 0x28
   19c10:	cmp	r5, #0
   19c14:	bne	19c28 <__flatcc_fb_gen_c_builder@@Base+0x350>
   19c18:	b	19c44 <__flatcc_fb_gen_c_builder@@Base+0x36c>
   19c1c:	ldr	r5, [r5]
   19c20:	cmp	r5, #0
   19c24:	beq	19c44 <__flatcc_fb_gen_c_builder@@Base+0x36c>
   19c28:	ldrh	r0, [r5, #8]
   19c2c:	cmp	r0, #0
   19c30:	bne	19c1c <__flatcc_fb_gen_c_builder@@Base+0x344>
   19c34:	mov	r0, r4
   19c38:	mov	r1, r5
   19c3c:	bl	1ab14 <__flatcc_fb_gen_c_builder@@Base+0x123c>
   19c40:	b	19c1c <__flatcc_fb_gen_c_builder@@Base+0x344>
   19c44:	cmp	r6, #0
   19c48:	beq	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x3ec>
   19c4c:	ldr	r1, [r4, #204]	; 0xcc
   19c50:	mov	r0, #10
   19c54:	bl	14924 <fputc@plt>
   19c58:	mov	r0, r4
   19c5c:	bl	1abd0 <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   19c60:	ldr	r0, [r4, #208]	; 0xd0
   19c64:	ldr	r5, [r0, #40]	; 0x28
   19c68:	cmp	r5, #0
   19c6c:	bne	19c80 <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   19c70:	b	19cc0 <__flatcc_fb_gen_c_builder@@Base+0x3e8>
   19c74:	ldr	r5, [r5]
   19c78:	cmp	r5, #0
   19c7c:	beq	19cc0 <__flatcc_fb_gen_c_builder@@Base+0x3e8>
   19c80:	ldrh	r0, [r5, #8]
   19c84:	cmp	r0, #0
   19c88:	bne	19c74 <__flatcc_fb_gen_c_builder@@Base+0x39c>
   19c8c:	mov	r0, r4
   19c90:	mov	r1, r5
   19c94:	bl	1ac3c <__flatcc_fb_gen_c_builder@@Base+0x1364>
   19c98:	mov	r0, r4
   19c9c:	mov	r1, r5
   19ca0:	bl	1b370 <__flatcc_fb_gen_c_builder@@Base+0x1a98>
   19ca4:	mov	r0, r4
   19ca8:	mov	r1, r5
   19cac:	bl	1b58c <__flatcc_fb_gen_c_builder@@Base+0x1cb4>
   19cb0:	ldr	r1, [r4, #204]	; 0xcc
   19cb4:	mov	r0, #10
   19cb8:	bl	14924 <fputc@plt>
   19cbc:	b	19c74 <__flatcc_fb_gen_c_builder@@Base+0x39c>
   19cc0:	pop	{r4, r5, r6, sl, fp, pc}
   19cc4:	mov	r0, r4
   19cc8:	pop	{r4, r5, r6, sl, fp, lr}
   19ccc:	b	1abd0 <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   19cd0:	push	{r4, sl, fp, lr}
   19cd4:	add	fp, sp, #8
   19cd8:	mov	r4, r0
   19cdc:	bl	198b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   19ce0:	ldr	r0, [r4, #204]	; 0xcc
   19ce4:	ldr	r1, [r4, #208]	; 0xd0
   19ce8:	ldr	r2, [r1, #164]	; 0xa4
   19cec:	movw	r1, #28368	; 0x6ed0
   19cf0:	movt	r1, #4
   19cf4:	pop	{r4, sl, fp, lr}
   19cf8:	b	148c4 <fprintf@plt>
   19cfc:	mov	r2, r1
   19d00:	mov	r1, r0
   19d04:	ldr	r0, [r0, #12]
   19d08:	b	15b9c <__flatcc_fb_scoped_symbol_name@@Base>
   19d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d10:	add	fp, sp, #28
   19d14:	sub	sp, sp, #260	; 0x104
   19d18:	mov	r6, r1
   19d1c:	mov	r4, r0
   19d20:	add	r5, sp, #32
   19d24:	mov	r9, #0
   19d28:	mov	r0, r5
   19d2c:	mov	r1, #0
   19d30:	mov	r2, #220	; 0xdc
   19d34:	bl	148dc <memset@plt>
   19d38:	ldrh	r0, [r6, #8]
   19d3c:	cmp	r0, #1
   19d40:	bne	1a0b0 <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   19d44:	mov	r0, r6
   19d48:	mov	r1, r5
   19d4c:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   19d50:	mov	r0, r6
   19d54:	bl	1a0d0 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   19d58:	mov	r7, r0
   19d5c:	ldr	r0, [r4, #204]	; 0xcc
   19d60:	movw	r1, #24522	; 0x5fca
   19d64:	movt	r1, #4
   19d68:	mov	r2, r5
   19d6c:	bl	148c4 <fprintf@plt>
   19d70:	mov	r0, #1
   19d74:	str	r0, [sp]
   19d78:	mov	r8, #1
   19d7c:	mov	r0, r4
   19d80:	mov	r1, r6
   19d84:	mov	r2, #0
   19d88:	mov	r3, r7
   19d8c:	bl	1a140 <__flatcc_fb_gen_c_builder@@Base+0x868>
   19d90:	ldr	r0, [r4, #204]	; 0xcc
   19d94:	movw	r1, #24548	; 0x5fe4
   19d98:	movt	r1, #4
   19d9c:	mov	r2, r5
   19da0:	bl	148c4 <fprintf@plt>
   19da4:	str	r8, [sp]
   19da8:	mov	r0, r4
   19dac:	mov	r1, r6
   19db0:	mov	r2, #0
   19db4:	mov	r3, r7
   19db8:	bl	1a2d0 <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   19dbc:	ldr	r1, [r4, #204]	; 0xcc
   19dc0:	mov	r0, #10
   19dc4:	bl	14924 <fputc@plt>
   19dc8:	ldr	r0, [r4, #204]	; 0xcc
   19dcc:	str	r5, [sp]
   19dd0:	movw	r1, #24573	; 0x5ffd
   19dd4:	movt	r1, #4
   19dd8:	mov	r2, r5
   19ddc:	mov	r3, r5
   19de0:	bl	148c4 <fprintf@plt>
   19de4:	str	r9, [sp]
   19de8:	mov	r0, r4
   19dec:	mov	r1, r6
   19df0:	mov	r2, #0
   19df4:	mov	r3, r7
   19df8:	bl	1a140 <__flatcc_fb_gen_c_builder@@Base+0x868>
   19dfc:	ldr	r3, [r4, #204]	; 0xcc
   19e00:	movw	r0, #24611	; 0x6023
   19e04:	movt	r0, #4
   19e08:	mov	r1, #4
   19e0c:	mov	r2, #1
   19e10:	bl	14858 <fwrite@plt>
   19e14:	str	r9, [sp]
   19e18:	mov	r0, r4
   19e1c:	mov	r1, r6
   19e20:	mov	r2, r7
   19e24:	mov	r3, #0
   19e28:	bl	1a34c <__flatcc_fb_gen_c_builder@@Base+0xa74>
   19e2c:	ldr	r3, [r4, #204]	; 0xcc
   19e30:	movw	r8, #48577	; 0xbdc1
   19e34:	movt	r8, #3
   19e38:	mov	r0, r8
   19e3c:	mov	r1, #12
   19e40:	mov	r2, #1
   19e44:	bl	14858 <fwrite@plt>
   19e48:	ldr	r0, [r4, #204]	; 0xcc
   19e4c:	str	r5, [sp]
   19e50:	str	r5, [sp, #4]
   19e54:	movw	r1, #24616	; 0x6028
   19e58:	movt	r1, #4
   19e5c:	mov	r2, r5
   19e60:	mov	r3, r5
   19e64:	bl	148c4 <fprintf@plt>
   19e68:	ldr	r3, [r4, #204]	; 0xcc
   19e6c:	movw	r9, #24613	; 0x6025
   19e70:	movt	r9, #4
   19e74:	mov	r0, r9
   19e78:	mov	sl, #0
   19e7c:	mov	r1, #2
   19e80:	mov	r2, #1
   19e84:	bl	14858 <fwrite@plt>
   19e88:	mov	r0, #1
   19e8c:	str	r0, [sp]
   19e90:	mov	r0, r4
   19e94:	mov	r1, r6
   19e98:	mov	r2, r7
   19e9c:	mov	r3, #0
   19ea0:	bl	1a34c <__flatcc_fb_gen_c_builder@@Base+0xa74>
   19ea4:	ldr	r3, [r4, #204]	; 0xcc
   19ea8:	mov	r0, r8
   19eac:	mov	r1, #12
   19eb0:	mov	r2, #1
   19eb4:	bl	14858 <fwrite@plt>
   19eb8:	ldr	r0, [r4, #204]	; 0xcc
   19ebc:	str	r5, [sp]
   19ec0:	movw	r1, #24670	; 0x605e
   19ec4:	movt	r1, #4
   19ec8:	mov	r2, r5
   19ecc:	mov	r3, r5
   19ed0:	bl	148c4 <fprintf@plt>
   19ed4:	str	sl, [sp]
   19ed8:	mov	r0, r4
   19edc:	mov	r1, r6
   19ee0:	mov	r2, #0
   19ee4:	mov	r3, r7
   19ee8:	bl	1a140 <__flatcc_fb_gen_c_builder@@Base+0x868>
   19eec:	ldr	r3, [r4, #204]	; 0xcc
   19ef0:	movw	r0, #24611	; 0x6023
   19ef4:	movt	r0, #4
   19ef8:	mov	r1, #4
   19efc:	mov	r2, #1
   19f00:	bl	14858 <fwrite@plt>
   19f04:	str	sl, [sp]
   19f08:	mov	r0, r4
   19f0c:	mov	r1, r6
   19f10:	mov	r2, r7
   19f14:	mov	r3, #2
   19f18:	bl	1a34c <__flatcc_fb_gen_c_builder@@Base+0xa74>
   19f1c:	ldr	r3, [r4, #204]	; 0xcc
   19f20:	mov	r0, r8
   19f24:	mov	r1, #12
   19f28:	mov	r2, #1
   19f2c:	bl	14858 <fwrite@plt>
   19f30:	ldr	r0, [r4, #204]	; 0xcc
   19f34:	str	r5, [sp]
   19f38:	str	r5, [sp, #4]
   19f3c:	movw	r1, #24714	; 0x608a
   19f40:	movt	r1, #4
   19f44:	mov	r2, r5
   19f48:	mov	r3, r5
   19f4c:	bl	148c4 <fprintf@plt>
   19f50:	ldr	r3, [r4, #204]	; 0xcc
   19f54:	mov	r0, r9
   19f58:	mov	r1, #2
   19f5c:	mov	r2, #1
   19f60:	bl	14858 <fwrite@plt>
   19f64:	mov	r0, #1
   19f68:	str	r0, [sp]
   19f6c:	mov	r0, r4
   19f70:	mov	r1, r6
   19f74:	mov	r2, r7
   19f78:	mov	r3, #2
   19f7c:	bl	1a34c <__flatcc_fb_gen_c_builder@@Base+0xa74>
   19f80:	ldr	r3, [r4, #204]	; 0xcc
   19f84:	mov	r0, r8
   19f88:	mov	r1, #12
   19f8c:	mov	r2, #1
   19f90:	bl	14858 <fwrite@plt>
   19f94:	ldr	r0, [r4, #204]	; 0xcc
   19f98:	str	r5, [sp]
   19f9c:	movw	r1, #24774	; 0x60c6
   19fa0:	movt	r1, #4
   19fa4:	mov	r2, r5
   19fa8:	mov	r3, r5
   19fac:	bl	148c4 <fprintf@plt>
   19fb0:	str	sl, [sp]
   19fb4:	mov	r0, r4
   19fb8:	mov	r1, r6
   19fbc:	mov	r2, #0
   19fc0:	mov	r3, r7
   19fc4:	bl	1a140 <__flatcc_fb_gen_c_builder@@Base+0x868>
   19fc8:	ldr	r3, [r4, #204]	; 0xcc
   19fcc:	movw	r0, #24611	; 0x6023
   19fd0:	movt	r0, #4
   19fd4:	mov	r1, #4
   19fd8:	mov	r2, #1
   19fdc:	bl	14858 <fwrite@plt>
   19fe0:	str	sl, [sp]
   19fe4:	mov	r0, r4
   19fe8:	mov	r1, r6
   19fec:	mov	r2, r7
   19ff0:	mov	r3, #1
   19ff4:	bl	1a34c <__flatcc_fb_gen_c_builder@@Base+0xa74>
   19ff8:	ldr	r3, [r4, #204]	; 0xcc
   19ffc:	mov	r0, r8
   1a000:	mov	r1, #12
   1a004:	mov	r2, #1
   1a008:	bl	14858 <fwrite@plt>
   1a00c:	ldr	r0, [r4, #204]	; 0xcc
   1a010:	str	r5, [sp]
   1a014:	str	r5, [sp, #4]
   1a018:	movw	r1, #24820	; 0x60f4
   1a01c:	movt	r1, #4
   1a020:	mov	r2, r5
   1a024:	mov	r3, r5
   1a028:	bl	148c4 <fprintf@plt>
   1a02c:	ldr	r3, [r4, #204]	; 0xcc
   1a030:	mov	r0, r9
   1a034:	mov	r1, #2
   1a038:	mov	r2, #1
   1a03c:	bl	14858 <fwrite@plt>
   1a040:	mov	r0, #1
   1a044:	str	r0, [sp]
   1a048:	mov	r0, r4
   1a04c:	mov	r1, r6
   1a050:	mov	r2, r7
   1a054:	mov	r3, #1
   1a058:	bl	1a34c <__flatcc_fb_gen_c_builder@@Base+0xa74>
   1a05c:	ldr	r3, [r4, #204]	; 0xcc
   1a060:	mov	r0, r8
   1a064:	mov	r1, #12
   1a068:	mov	r2, #1
   1a06c:	bl	14858 <fwrite@plt>
   1a070:	ldr	r0, [r4, #204]	; 0xcc
   1a074:	ldrd	r2, [r6, #112]	; 0x70
   1a078:	ldrh	r1, [r6, #104]	; 0x68
   1a07c:	str	r2, [sp, #8]
   1a080:	str	r3, [sp, #12]
   1a084:	str	r1, [sp, #16]
   1a088:	str	r5, [sp, #20]
   1a08c:	str	r5, [sp, #24]
   1a090:	str	r5, [sp]
   1a094:	movw	r1, #24882	; 0x6132
   1a098:	movt	r1, #4
   1a09c:	mov	r2, r4
   1a0a0:	mov	r3, r4
   1a0a4:	bl	148c4 <fprintf@plt>
   1a0a8:	sub	sp, fp, #28
   1a0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0b0:	movw	r0, #48261	; 0xbc85
   1a0b4:	movt	r0, #3
   1a0b8:	movw	r1, #24380	; 0x5f3c
   1a0bc:	movt	r1, #4
   1a0c0:	movw	r3, #24461	; 0x5f8d
   1a0c4:	movt	r3, #4
   1a0c8:	movw	r2, #1010	; 0x3f2
   1a0cc:	bl	14984 <__assert_fail@plt>
   1a0d0:	push	{r4, r5, fp, lr}
   1a0d4:	add	fp, sp, #8
   1a0d8:	ldr	r5, [r0, #20]
   1a0dc:	mov	r4, #0
   1a0e0:	cmp	r5, #0
   1a0e4:	bne	1a0fc <__flatcc_fb_gen_c_builder@@Base+0x824>
   1a0e8:	b	1a138 <__flatcc_fb_gen_c_builder@@Base+0x860>
   1a0ec:	add	r4, r4, #1
   1a0f0:	ldr	r5, [r5]
   1a0f4:	cmp	r5, #0
   1a0f8:	beq	1a138 <__flatcc_fb_gen_c_builder@@Base+0x860>
   1a0fc:	ldrb	r0, [r5, #72]	; 0x48
   1a100:	tst	r0, #4
   1a104:	bne	1a0f0 <__flatcc_fb_gen_c_builder@@Base+0x818>
   1a108:	ldrh	r0, [r5, #24]
   1a10c:	cmp	r0, #14
   1a110:	bne	1a0ec <__flatcc_fb_gen_c_builder@@Base+0x814>
   1a114:	ldr	r0, [r5, #16]
   1a118:	ldrh	r1, [r0, #8]
   1a11c:	cmp	r1, #1
   1a120:	bne	1a0ec <__flatcc_fb_gen_c_builder@@Base+0x814>
   1a124:	bl	1a0d0 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1a128:	add	r4, r0, r4
   1a12c:	ldr	r5, [r5]
   1a130:	cmp	r5, #0
   1a134:	bne	1a0fc <__flatcc_fb_gen_c_builder@@Base+0x824>
   1a138:	mov	r0, r4
   1a13c:	pop	{r4, r5, fp, pc}
   1a140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a144:	add	fp, sp, #28
   1a148:	sub	sp, sp, #236	; 0xec
   1a14c:	mov	r5, r3
   1a150:	mov	r4, r2
   1a154:	mov	r7, r1
   1a158:	mov	r6, r0
   1a15c:	add	r0, sp, #8
   1a160:	mov	r1, #0
   1a164:	mov	r2, #220	; 0xdc
   1a168:	bl	148dc <memset@plt>
   1a16c:	ldr	r9, [r7, #20]
   1a170:	cmp	r9, #0
   1a174:	beq	1a274 <__flatcc_fb_gen_c_builder@@Base+0x99c>
   1a178:	ldr	r7, [fp, #8]
   1a17c:	b	1a1a4 <__flatcc_fb_gen_c_builder@@Base+0x8cc>
   1a180:	str	r7, [sp]
   1a184:	mov	r0, r6
   1a188:	mov	r2, r4
   1a18c:	mov	r3, r5
   1a190:	bl	1a140 <__flatcc_fb_gen_c_builder@@Base+0x868>
   1a194:	mov	r4, r0
   1a198:	ldr	r9, [r9]
   1a19c:	cmp	r9, #0
   1a1a0:	beq	1a274 <__flatcc_fb_gen_c_builder@@Base+0x99c>
   1a1a4:	ldrb	r0, [r9, #72]	; 0x48
   1a1a8:	tst	r0, #4
   1a1ac:	bne	1a198 <__flatcc_fb_gen_c_builder@@Base+0x8c0>
   1a1b0:	ldrh	r0, [r9, #24]
   1a1b4:	cmp	r0, #8
   1a1b8:	beq	1a220 <__flatcc_fb_gen_c_builder@@Base+0x948>
   1a1bc:	cmp	r0, #14
   1a1c0:	bne	1a280 <__flatcc_fb_gen_c_builder@@Base+0x9a8>
   1a1c4:	ldr	r1, [r9, #16]
   1a1c8:	ldrh	r0, [r1, #8]
   1a1cc:	cmp	r0, #1
   1a1d0:	beq	1a180 <__flatcc_fb_gen_c_builder@@Base+0x8a8>
   1a1d4:	mov	r0, r6
   1a1d8:	mov	r1, r4
   1a1dc:	mov	r2, r5
   1a1e0:	mov	r3, r7
   1a1e4:	bl	1a754 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1a1e8:	ldr	r0, [r9, #16]
   1a1ec:	mov	r8, r5
   1a1f0:	mov	r5, r7
   1a1f4:	add	r7, sp, #8
   1a1f8:	mov	r1, r7
   1a1fc:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1a200:	ldr	r0, [r6, #204]	; 0xcc
   1a204:	movw	r1, #24953	; 0x6179
   1a208:	movt	r1, #4
   1a20c:	mov	r2, r7
   1a210:	mov	r7, r5
   1a214:	mov	r5, r8
   1a218:	mov	r3, r4
   1a21c:	b	1a268 <__flatcc_fb_gen_c_builder@@Base+0x990>
   1a220:	mov	r0, r6
   1a224:	mov	r1, r4
   1a228:	mov	r2, r5
   1a22c:	mov	r3, r7
   1a230:	bl	1a754 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1a234:	ldr	sl, [r9, #16]
   1a238:	mov	r0, sl
   1a23c:	mov	r1, r6
   1a240:	bl	1a7dc <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1a244:	mov	r8, r0
   1a248:	mov	r0, sl
   1a24c:	bl	1a7f4 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1a250:	mov	r3, r0
   1a254:	ldr	r0, [r6, #204]	; 0xcc
   1a258:	str	r4, [sp]
   1a25c:	movw	r1, #24967	; 0x6187
   1a260:	movt	r1, #4
   1a264:	mov	r2, r8
   1a268:	bl	148c4 <fprintf@plt>
   1a26c:	add	r4, r4, #1
   1a270:	b	1a198 <__flatcc_fb_gen_c_builder@@Base+0x8c0>
   1a274:	mov	r0, r4
   1a278:	sub	sp, fp, #28
   1a27c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a280:	movw	r0, #4272	; 0x10b0
   1a284:	movt	r0, #6
   1a288:	ldr	r0, [r0]
   1a28c:	movw	r1, #24976	; 0x6190
   1a290:	movt	r1, #4
   1a294:	str	r1, [sp]
   1a298:	movw	r1, #21375	; 0x537f
   1a29c:	movt	r1, #3
   1a2a0:	movw	r4, #24380	; 0x5f3c
   1a2a4:	movt	r4, #4
   1a2a8:	mov	r2, r4
   1a2ac:	movw	r3, #850	; 0x352
   1a2b0:	bl	148c4 <fprintf@plt>
   1a2b4:	movw	r0, #25261	; 0x62ad
   1a2b8:	movt	r0, #4
   1a2bc:	movw	r3, #25022	; 0x61be
   1a2c0:	movt	r3, #4
   1a2c4:	mov	r1, r4
   1a2c8:	movw	r2, #850	; 0x352
   1a2cc:	bl	14984 <__assert_fail@plt>
   1a2d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2d4:	add	fp, sp, #28
   1a2d8:	sub	sp, sp, #4
   1a2dc:	mov	r5, r3
   1a2e0:	mov	r8, r2
   1a2e4:	mov	r6, r0
   1a2e8:	mov	r0, r1
   1a2ec:	bl	1a0d0 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1a2f0:	cmp	r0, #1
   1a2f4:	blt	1a340 <__flatcc_fb_gen_c_builder@@Base+0xa68>
   1a2f8:	mov	r7, r0
   1a2fc:	ldr	r9, [fp, #8]
   1a300:	mov	r4, #0
   1a304:	movw	sl, #25292	; 0x62cc
   1a308:	movt	sl, #4
   1a30c:	mov	r0, r6
   1a310:	mov	r1, r4
   1a314:	mov	r2, r5
   1a318:	mov	r3, r9
   1a31c:	bl	1a754 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1a320:	add	r2, r8, r4
   1a324:	ldr	r0, [r6, #204]	; 0xcc
   1a328:	mov	r1, sl
   1a32c:	bl	148c4 <fprintf@plt>
   1a330:	add	r4, r4, #1
   1a334:	cmp	r7, r4
   1a338:	bne	1a30c <__flatcc_fb_gen_c_builder@@Base+0xa34>
   1a33c:	add	r8, r8, r4
   1a340:	mov	r0, r8
   1a344:	sub	sp, fp, #28
   1a348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a34c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a350:	add	fp, sp, #28
   1a354:	sub	sp, sp, #268	; 0x10c
   1a358:	mov	r7, r3
   1a35c:	str	r2, [sp, #20]
   1a360:	mov	r5, r1
   1a364:	mov	r4, r0
   1a368:	add	r0, sp, #32
   1a36c:	mov	r1, #0
   1a370:	mov	r2, #220	; 0xdc
   1a374:	bl	148dc <memset@plt>
   1a378:	movw	r0, #25115	; 0x621b
   1a37c:	movt	r0, #4
   1a380:	movw	r1, #21632	; 0x5480
   1a384:	movt	r1, #3
   1a388:	cmp	r7, #1
   1a38c:	moveq	r1, r0
   1a390:	movw	r0, #25108	; 0x6214
   1a394:	movt	r0, #4
   1a398:	cmp	r7, #2
   1a39c:	movne	r0, r1
   1a3a0:	str	r0, [sp, #24]
   1a3a4:	ldr	r5, [r5, #20]
   1a3a8:	cmp	r5, #0
   1a3ac:	beq	1a6d8 <__flatcc_fb_gen_c_builder@@Base+0xe00>
   1a3b0:	sub	sl, fp, #36	; 0x24
   1a3b4:	sub	r6, fp, #40	; 0x28
   1a3b8:	mov	r8, #0
   1a3bc:	mov	r9, #0
   1a3c0:	str	r7, [sp, #28]
   1a3c4:	b	1a3ec <__flatcc_fb_gen_c_builder@@Base+0xb14>
   1a3c8:	stm	sp, {r1, r8}
   1a3cc:	movw	r1, #25409	; 0x6341
   1a3d0:	movt	r1, #4
   1a3d4:	add	r2, sp, #32
   1a3d8:	bl	148c4 <fprintf@plt>
   1a3dc:	add	r8, r8, #1
   1a3e0:	ldr	r5, [r5]
   1a3e4:	cmp	r5, #0
   1a3e8:	beq	1a6d8 <__flatcc_fb_gen_c_builder@@Base+0xe00>
   1a3ec:	mov	r0, r5
   1a3f0:	mov	r1, sl
   1a3f4:	mov	r2, r6
   1a3f8:	bl	1a86c <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1a3fc:	cmp	r8, #1
   1a400:	blt	1a434 <__flatcc_fb_gen_c_builder@@Base+0xb5c>
   1a404:	ldr	r3, [r4, #204]	; 0xcc
   1a408:	tst	r8, #3
   1a40c:	beq	1a420 <__flatcc_fb_gen_c_builder@@Base+0xb48>
   1a410:	movw	r0, #25129	; 0x6229
   1a414:	movt	r0, #4
   1a418:	mov	r1, #2
   1a41c:	b	1a42c <__flatcc_fb_gen_c_builder@@Base+0xb54>
   1a420:	movw	r0, #25124	; 0x6224
   1a424:	movt	r0, #4
   1a428:	mov	r1, #4
   1a42c:	mov	r2, #1
   1a430:	bl	14858 <fwrite@plt>
   1a434:	ldrh	r0, [r5, #24]
   1a438:	cmp	r0, #8
   1a43c:	beq	1a49c <__flatcc_fb_gen_c_builder@@Base+0xbc4>
   1a440:	cmp	r0, #14
   1a444:	bne	1a704 <__flatcc_fb_gen_c_builder@@Base+0xe2c>
   1a448:	ldr	r0, [r5, #16]
   1a44c:	add	r1, sp, #32
   1a450:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1a454:	ldrh	r0, [r5, #72]	; 0x48
   1a458:	and	r0, r0, #4
   1a45c:	ldr	r1, [r5, #16]
   1a460:	ldrh	r1, [r1, #8]
   1a464:	cmp	r1, #1
   1a468:	bne	1a504 <__flatcc_fb_gen_c_builder@@Base+0xc2c>
   1a46c:	cmp	r0, #0
   1a470:	beq	1a52c <__flatcc_fb_gen_c_builder@@Base+0xc54>
   1a474:	ldr	r0, [r4, #204]	; 0xcc
   1a478:	movw	r1, #25132	; 0x622c
   1a47c:	movt	r1, #4
   1a480:	mov	r2, r9
   1a484:	mov	r3, r9
   1a488:	bl	148c4 <fprintf@plt>
   1a48c:	ldr	r0, [r5, #16]
   1a490:	bl	1a0d0 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1a494:	add	r8, r0, r8
   1a498:	b	1a524 <__flatcc_fb_gen_c_builder@@Base+0xc4c>
   1a49c:	ldr	r0, [r5, #16]
   1a4a0:	bl	1a874 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1a4a4:	mov	r3, r0
   1a4a8:	ldrb	r0, [r5, #72]	; 0x48
   1a4ac:	tst	r0, #4
   1a4b0:	bne	1a50c <__flatcc_fb_gen_c_builder@@Base+0xc34>
   1a4b4:	ldrd	r0, [r5, #88]	; 0x58
   1a4b8:	eor	r0, r0, #1
   1a4bc:	orrs	r0, r0, r1
   1a4c0:	movne	r0, r7
   1a4c4:	cmp	r0, #2
   1a4c8:	beq	1a5d8 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1a4cc:	cmp	r0, #1
   1a4d0:	bne	1a5b0 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
   1a4d4:	ldr	r0, [r4, #204]	; 0xcc
   1a4d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a4dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a4e0:	ldr	r7, [fp, #8]
   1a4e4:	cmp	r7, #0
   1a4e8:	beq	1a690 <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   1a4ec:	str	r2, [sp]
   1a4f0:	stmib	sp, {r1, r2}
   1a4f4:	str	r1, [sp, #12]
   1a4f8:	movw	r1, #25296	; 0x62d0
   1a4fc:	movt	r1, #4
   1a500:	b	1a6b4 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1a504:	cmp	r0, #0
   1a508:	beq	1a564 <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   1a50c:	ldr	r0, [r4, #204]	; 0xcc
   1a510:	movw	r1, #25241	; 0x6299
   1a514:	movt	r1, #4
   1a518:	mov	r2, r9
   1a51c:	bl	148c4 <fprintf@plt>
   1a520:	add	r8, r8, #1
   1a524:	add	r9, r9, #1
   1a528:	b	1a3e0 <__flatcc_fb_gen_c_builder@@Base+0xb08>
   1a52c:	ldr	r0, [r4, #204]	; 0xcc
   1a530:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a534:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a538:	ldr	r3, [fp, #8]
   1a53c:	cmp	r3, #0
   1a540:	beq	1a608 <__flatcc_fb_gen_c_builder@@Base+0xd30>
   1a544:	str	r2, [sp]
   1a548:	stmib	sp, {r1, r2}
   1a54c:	str	r1, [sp, #12]
   1a550:	movw	r1, #25189	; 0x6265
   1a554:	movt	r1, #4
   1a558:	add	r2, sp, #32
   1a55c:	ldr	r3, [sp, #24]
   1a560:	b	1a3d8 <__flatcc_fb_gen_c_builder@@Base+0xb00>
   1a564:	ldrd	r0, [r5, #88]	; 0x58
   1a568:	eor	r0, r0, #1
   1a56c:	orrs	r0, r0, r1
   1a570:	movne	r0, r7
   1a574:	cmp	r0, #2
   1a578:	beq	1a664 <__flatcc_fb_gen_c_builder@@Base+0xd8c>
   1a57c:	cmp	r0, #1
   1a580:	bne	1a5b0 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
   1a584:	ldr	r0, [r4, #204]	; 0xcc
   1a588:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a58c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a590:	ldr	r2, [fp, #8]
   1a594:	cmp	r2, #0
   1a598:	beq	1a6c8 <__flatcc_fb_gen_c_builder@@Base+0xdf0>
   1a59c:	stm	sp, {r1, r3}
   1a5a0:	str	r1, [sp, #8]
   1a5a4:	movw	r1, #25298	; 0x62d2
   1a5a8:	movt	r1, #4
   1a5ac:	b	1a3d4 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1a5b0:	ldr	r0, [r4, #204]	; 0xcc
   1a5b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a5bc:	ldr	r1, [fp, #8]
   1a5c0:	cmp	r1, #0
   1a5c4:	beq	1a654 <__flatcc_fb_gen_c_builder@@Base+0xd7c>
   1a5c8:	stm	sp, {r2, r3}
   1a5cc:	movw	r1, #25263	; 0x62af
   1a5d0:	movt	r1, #4
   1a5d4:	b	1a3d8 <__flatcc_fb_gen_c_builder@@Base+0xb00>
   1a5d8:	ldr	r0, [r4, #204]	; 0xcc
   1a5dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a5e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a5e4:	ldr	r7, [fp, #8]
   1a5e8:	cmp	r7, #0
   1a5ec:	beq	1a6a4 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1a5f0:	str	r2, [sp]
   1a5f4:	stmib	sp, {r1, r2}
   1a5f8:	str	r1, [sp, #12]
   1a5fc:	movw	r1, #25370	; 0x631a
   1a600:	movt	r1, #4
   1a604:	b	1a6b4 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1a608:	str	r2, [sp]
   1a60c:	str	r1, [sp, #4]
   1a610:	movw	r1, #25220	; 0x6284
   1a614:	movt	r1, #4
   1a618:	add	r2, sp, #32
   1a61c:	ldr	r3, [sp, #24]
   1a620:	bl	148c4 <fprintf@plt>
   1a624:	ldr	r1, [r5, #16]
   1a628:	mov	r0, #0
   1a62c:	str	r0, [sp]
   1a630:	mov	r0, r4
   1a634:	mov	r2, r8
   1a638:	ldr	r3, [sp, #20]
   1a63c:	bl	1a2d0 <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   1a640:	mov	r8, r0
   1a644:	ldr	r1, [r4, #204]	; 0xcc
   1a648:	mov	r0, #41	; 0x29
   1a64c:	bl	14924 <fputc@plt>
   1a650:	b	1a3e0 <__flatcc_fb_gen_c_builder@@Base+0xb08>
   1a654:	str	r8, [sp]
   1a658:	movw	r1, #25282	; 0x62c2
   1a65c:	movt	r1, #4
   1a660:	b	1a3d8 <__flatcc_fb_gen_c_builder@@Base+0xb00>
   1a664:	ldr	r0, [r4, #204]	; 0xcc
   1a668:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a66c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a670:	ldr	r2, [fp, #8]
   1a674:	cmp	r2, #0
   1a678:	beq	1a3c8 <__flatcc_fb_gen_c_builder@@Base+0xaf0>
   1a67c:	stm	sp, {r1, r3}
   1a680:	str	r1, [sp, #8]
   1a684:	movw	r1, #25372	; 0x631c
   1a688:	movt	r1, #4
   1a68c:	b	1a3d4 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1a690:	str	r2, [sp]
   1a694:	stmib	sp, {r1, r8}
   1a698:	movw	r1, #25335	; 0x62f7
   1a69c:	movt	r1, #4
   1a6a0:	b	1a6b4 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1a6a4:	str	r2, [sp]
   1a6a8:	stmib	sp, {r1, r8}
   1a6ac:	movw	r1, #25407	; 0x633f
   1a6b0:	movt	r1, #4
   1a6b4:	mov	r2, r4
   1a6b8:	bl	148c4 <fprintf@plt>
   1a6bc:	add	r8, r8, #1
   1a6c0:	ldr	r7, [sp, #28]
   1a6c4:	b	1a3e0 <__flatcc_fb_gen_c_builder@@Base+0xb08>
   1a6c8:	stm	sp, {r1, r8}
   1a6cc:	movw	r1, #25337	; 0x62f9
   1a6d0:	movt	r1, #4
   1a6d4:	b	1a3d4 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1a6d8:	ldr	r0, [sp, #20]
   1a6dc:	cmp	r0, #1
   1a6e0:	blt	1a6fc <__flatcc_fb_gen_c_builder@@Base+0xe24>
   1a6e4:	ldr	r3, [r4, #204]	; 0xcc
   1a6e8:	movw	r0, #25124	; 0x6224
   1a6ec:	movt	r0, #4
   1a6f0:	mov	r1, #4
   1a6f4:	mov	r2, #1
   1a6f8:	bl	14858 <fwrite@plt>
   1a6fc:	sub	sp, fp, #28
   1a700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a704:	movw	r0, #4272	; 0x10b0
   1a708:	movt	r0, #6
   1a70c:	ldr	r0, [r0]
   1a710:	movw	r1, #25440	; 0x6360
   1a714:	movt	r1, #4
   1a718:	str	r1, [sp]
   1a71c:	movw	r1, #21375	; 0x537f
   1a720:	movt	r1, #3
   1a724:	movw	r4, #24380	; 0x5f3c
   1a728:	movt	r4, #4
   1a72c:	mov	r2, r4
   1a730:	movw	r3, #993	; 0x3e1
   1a734:	bl	148c4 <fprintf@plt>
   1a738:	movw	r0, #25261	; 0x62ad
   1a73c:	movt	r0, #4
   1a740:	movw	r3, #25467	; 0x637b
   1a744:	movt	r3, #4
   1a748:	mov	r1, r4
   1a74c:	movw	r2, #993	; 0x3e1
   1a750:	bl	14984 <__assert_fail@plt>
   1a754:	push	{fp, lr}
   1a758:	mov	fp, sp
   1a75c:	mov	lr, r2
   1a760:	movw	ip, #21631	; 0x547f
   1a764:	movt	ip, #3
   1a768:	movw	r2, #27545	; 0x6b99
   1a76c:	movt	r2, #3
   1a770:	cmp	r3, #0
   1a774:	moveq	r2, ip
   1a778:	cmp	lr, #0
   1a77c:	popeq	{fp, pc}
   1a780:	cmp	r1, #0
   1a784:	beq	1a7b4 <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1a788:	ldr	ip, [r0, #204]	; 0xcc
   1a78c:	tst	r1, #3
   1a790:	bne	1a7c0 <__flatcc_fb_gen_c_builder@@Base+0xee8>
   1a794:	sub	r0, lr, r1
   1a798:	cmp	r0, #2
   1a79c:	ble	1a7c0 <__flatcc_fb_gen_c_builder@@Base+0xee8>
   1a7a0:	movw	r1, #25102	; 0x620e
   1a7a4:	movt	r1, #4
   1a7a8:	mov	r0, ip
   1a7ac:	pop	{fp, lr}
   1a7b0:	b	148c4 <fprintf@plt>
   1a7b4:	ldr	ip, [r0, #204]	; 0xcc
   1a7b8:	cmp	lr, #5
   1a7bc:	bge	1a7a0 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1a7c0:	movw	r0, #47717	; 0xba65
   1a7c4:	movt	r0, #4
   1a7c8:	mov	r1, #2
   1a7cc:	mov	r2, #1
   1a7d0:	mov	r3, ip
   1a7d4:	pop	{fp, lr}
   1a7d8:	b	14858 <fwrite@plt>
   1a7dc:	movw	r2, #21632	; 0x5480
   1a7e0:	movt	r2, #3
   1a7e4:	cmp	r0, #5
   1a7e8:	moveq	r2, r1
   1a7ec:	mov	r0, r2
   1a7f0:	bx	lr
   1a7f4:	push	{r4, sl, fp, lr}
   1a7f8:	add	fp, sp, #8
   1a7fc:	sub	sp, sp, #8
   1a800:	sub	r0, r0, #1
   1a804:	cmp	r0, #11
   1a808:	movwcc	r1, #28396	; 0x6eec
   1a80c:	movtcc	r1, #4
   1a810:	ldrcc	r0, [r1, r0, lsl #2]
   1a814:	subcc	sp, fp, #8
   1a818:	popcc	{r4, sl, fp, pc}
   1a81c:	movw	r0, #4272	; 0x10b0
   1a820:	movt	r0, #6
   1a824:	ldr	r0, [r0]
   1a828:	movw	r1, #47968	; 0xbb60
   1a82c:	movt	r1, #3
   1a830:	str	r1, [sp]
   1a834:	movw	r1, #21375	; 0x537f
   1a838:	movt	r1, #3
   1a83c:	movw	r4, #47895	; 0xbb17
   1a840:	movt	r4, #3
   1a844:	mov	r2, r4
   1a848:	mov	r3, #141	; 0x8d
   1a84c:	bl	148c4 <fprintf@plt>
   1a850:	movw	r0, #25261	; 0x62ad
   1a854:	movt	r0, #4
   1a858:	movw	r3, #48023	; 0xbb97
   1a85c:	movt	r3, #3
   1a860:	mov	r1, r4
   1a864:	mov	r2, #141	; 0x8d
   1a868:	bl	14984 <__assert_fail@plt>
   1a86c:	ldr	r0, [r0, #4]
   1a870:	b	1a8ec <__flatcc_fb_gen_c_builder@@Base+0x1014>
   1a874:	push	{r4, sl, fp, lr}
   1a878:	add	fp, sp, #8
   1a87c:	sub	sp, sp, #8
   1a880:	sub	r0, r0, #1
   1a884:	cmp	r0, #11
   1a888:	movwcc	r1, #28440	; 0x6f18
   1a88c:	movtcc	r1, #4
   1a890:	ldrcc	r0, [r1, r0, lsl #2]
   1a894:	subcc	sp, fp, #8
   1a898:	popcc	{r4, sl, fp, pc}
   1a89c:	movw	r0, #4272	; 0x10b0
   1a8a0:	movt	r0, #6
   1a8a4:	ldr	r0, [r0]
   1a8a8:	movw	r1, #47968	; 0xbb60
   1a8ac:	movt	r1, #3
   1a8b0:	str	r1, [sp]
   1a8b4:	movw	r1, #21375	; 0x537f
   1a8b8:	movt	r1, #3
   1a8bc:	movw	r4, #47895	; 0xbb17
   1a8c0:	movt	r4, #3
   1a8c4:	mov	r2, r4
   1a8c8:	mov	r3, #96	; 0x60
   1a8cc:	bl	148c4 <fprintf@plt>
   1a8d0:	movw	r0, #25261	; 0x62ad
   1a8d4:	movt	r0, #4
   1a8d8:	movw	r3, #50320	; 0xc490
   1a8dc:	movt	r3, #3
   1a8e0:	mov	r1, r4
   1a8e4:	mov	r2, #96	; 0x60
   1a8e8:	bl	14984 <__assert_fail@plt>
   1a8ec:	ldr	r3, [r0, #4]
   1a8f0:	str	r3, [r1]
   1a8f4:	ldr	r0, [r0]
   1a8f8:	str	r0, [r2]
   1a8fc:	bx	lr
   1a900:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a904:	add	fp, sp, #24
   1a908:	sub	sp, sp, #232	; 0xe8
   1a90c:	mov	r4, r0
   1a910:	add	r5, sp, #8
   1a914:	mov	r7, #0
   1a918:	mov	r0, r5
   1a91c:	mov	r1, #0
   1a920:	mov	r2, #220	; 0xdc
   1a924:	bl	148dc <memset@plt>
   1a928:	ldr	r0, [r4, #208]	; 0xd0
   1a92c:	ldr	r6, [r0, #40]	; 0x28
   1a930:	cmp	r6, #0
   1a934:	beq	1a99c <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   1a938:	movw	r8, #25560	; 0x63d8
   1a93c:	movt	r8, #4
   1a940:	b	1a950 <__flatcc_fb_gen_c_builder@@Base+0x1078>
   1a944:	ldr	r6, [r6]
   1a948:	cmp	r6, #0
   1a94c:	beq	1a988 <__flatcc_fb_gen_c_builder@@Base+0x10b0>
   1a950:	ldrh	r0, [r6, #8]
   1a954:	cmp	r0, #4
   1a958:	bne	1a944 <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1a95c:	mov	r0, r6
   1a960:	mov	r1, r5
   1a964:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1a968:	ldr	r0, [r4, #204]	; 0xcc
   1a96c:	stm	sp, {r4, r5}
   1a970:	mov	r1, r8
   1a974:	mov	r2, r4
   1a978:	mov	r3, r5
   1a97c:	bl	148c4 <fprintf@plt>
   1a980:	mov	r7, #1
   1a984:	b	1a944 <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1a988:	cmp	r7, #0
   1a98c:	beq	1a99c <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   1a990:	ldr	r1, [r4, #204]	; 0xcc
   1a994:	mov	r0, #10
   1a998:	bl	14924 <fputc@plt>
   1a99c:	sub	sp, fp, #24
   1a9a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a9a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a9a8:	add	fp, sp, #24
   1a9ac:	sub	sp, sp, #224	; 0xe0
   1a9b0:	mov	r7, r1
   1a9b4:	mov	r4, r0
   1a9b8:	mov	r8, sp
   1a9bc:	mov	r5, #0
   1a9c0:	mov	r0, r8
   1a9c4:	mov	r1, #0
   1a9c8:	mov	r2, #220	; 0xdc
   1a9cc:	bl	148dc <memset@plt>
   1a9d0:	mov	r0, r7
   1a9d4:	bl	1b5ec <__flatcc_fb_gen_c_builder@@Base+0x1d14>
   1a9d8:	mov	r6, r0
   1a9dc:	mov	r0, r7
   1a9e0:	mov	r1, r8
   1a9e4:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1a9e8:	ldr	r0, [r4, #204]	; 0xcc
   1a9ec:	movw	r1, #25645	; 0x642d
   1a9f0:	movt	r1, #4
   1a9f4:	mov	r2, r4
   1a9f8:	mov	r3, r8
   1a9fc:	bl	148c4 <fprintf@plt>
   1aa00:	ldr	r7, [r7, #20]
   1aa04:	cmp	r7, #0
   1aa08:	beq	1aa90 <__flatcc_fb_gen_c_builder@@Base+0x11b8>
   1aa0c:	movw	r8, #25690	; 0x645a
   1aa10:	movt	r8, #4
   1aa14:	b	1aa44 <__flatcc_fb_gen_c_builder@@Base+0x116c>
   1aa18:	ldr	r1, [r4, #204]	; 0xcc
   1aa1c:	mov	r0, #32
   1aa20:	bl	14924 <fputc@plt>
   1aa24:	ldr	r2, [r7, #96]	; 0x60
   1aa28:	ldr	r0, [r4, #204]	; 0xcc
   1aa2c:	mov	r1, r8
   1aa30:	bl	148c4 <fprintf@plt>
   1aa34:	add	r5, r5, #1
   1aa38:	ldr	r7, [r7]
   1aa3c:	cmp	r7, #0
   1aa40:	beq	1aa74 <__flatcc_fb_gen_c_builder@@Base+0x119c>
   1aa44:	ldrh	r0, [r7, #72]	; 0x48
   1aa48:	and	r0, r0, #260	; 0x104
   1aa4c:	cmp	r0, #256	; 0x100
   1aa50:	bne	1aa38 <__flatcc_fb_gen_c_builder@@Base+0x1160>
   1aa54:	cmp	r5, #1
   1aa58:	blt	1aa18 <__flatcc_fb_gen_c_builder@@Base+0x1140>
   1aa5c:	mov	r0, r4
   1aa60:	mov	r1, r5
   1aa64:	mov	r2, r6
   1aa68:	mov	r3, #0
   1aa6c:	bl	1a754 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1aa70:	b	1aa24 <__flatcc_fb_gen_c_builder@@Base+0x114c>
   1aa74:	ldr	r3, [r4, #204]	; 0xcc
   1aa78:	cmp	r5, #1
   1aa7c:	blt	1aa94 <__flatcc_fb_gen_c_builder@@Base+0x11bc>
   1aa80:	movw	r0, #25693	; 0x645d
   1aa84:	movt	r0, #4
   1aa88:	mov	r1, #7
   1aa8c:	b	1aaa0 <__flatcc_fb_gen_c_builder@@Base+0x11c8>
   1aa90:	ldr	r3, [r4, #204]	; 0xcc
   1aa94:	movw	r0, #25694	; 0x645e
   1aa98:	movt	r0, #4
   1aa9c:	mov	r1, #6
   1aaa0:	mov	r2, #1
   1aaa4:	bl	14858 <fwrite@plt>
   1aaa8:	sub	sp, fp, #24
   1aaac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aab0:	push	{r4, r5, r6, sl, fp, lr}
   1aab4:	add	fp, sp, #16
   1aab8:	sub	sp, sp, #240	; 0xf0
   1aabc:	mov	r4, r1
   1aac0:	mov	r5, r0
   1aac4:	add	r6, sp, #16
   1aac8:	mov	r0, r6
   1aacc:	mov	r1, #0
   1aad0:	mov	r2, #220	; 0xdc
   1aad4:	bl	148dc <memset@plt>
   1aad8:	mov	r0, r4
   1aadc:	mov	r1, r6
   1aae0:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1aae4:	ldr	r0, [r5, #204]	; 0xcc
   1aae8:	ldrd	r2, [r4, #96]	; 0x60
   1aaec:	str	r2, [sp, #8]
   1aaf0:	str	r3, [sp, #12]
   1aaf4:	str	r6, [sp]
   1aaf8:	movw	r1, #25701	; 0x6465
   1aafc:	movt	r1, #4
   1ab00:	mov	r2, r5
   1ab04:	mov	r3, r5
   1ab08:	bl	148c4 <fprintf@plt>
   1ab0c:	sub	sp, fp, #16
   1ab10:	pop	{r4, r5, r6, sl, fp, pc}
   1ab14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ab18:	add	fp, sp, #24
   1ab1c:	sub	sp, sp, #232	; 0xe8
   1ab20:	mov	r6, r1
   1ab24:	mov	r5, r0
   1ab28:	add	r4, sp, #8
   1ab2c:	mov	r0, r4
   1ab30:	mov	r1, #0
   1ab34:	mov	r2, #220	; 0xdc
   1ab38:	bl	148dc <memset@plt>
   1ab3c:	mov	r0, r6
   1ab40:	mov	r1, r4
   1ab44:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1ab48:	mov	r0, r6
   1ab4c:	bl	1b5ec <__flatcc_fb_gen_c_builder@@Base+0x1d14>
   1ab50:	mov	r7, r0
   1ab54:	ldr	r0, [r5, #204]	; 0xcc
   1ab58:	movw	r1, #24522	; 0x5fca
   1ab5c:	movt	r1, #4
   1ab60:	mov	r2, r4
   1ab64:	bl	148c4 <fprintf@plt>
   1ab68:	mov	r0, r5
   1ab6c:	mov	r1, r6
   1ab70:	mov	r2, r7
   1ab74:	bl	1b61c <__flatcc_fb_gen_c_builder@@Base+0x1d44>
   1ab78:	ldr	r0, [r5, #204]	; 0xcc
   1ab7c:	movw	r1, #24548	; 0x5fe4
   1ab80:	movt	r1, #4
   1ab84:	mov	r2, r4
   1ab88:	bl	148c4 <fprintf@plt>
   1ab8c:	mov	r0, r5
   1ab90:	mov	r1, r6
   1ab94:	mov	r2, r7
   1ab98:	bl	1b964 <__flatcc_fb_gen_c_builder@@Base+0x208c>
   1ab9c:	ldr	r1, [r5, #204]	; 0xcc
   1aba0:	mov	r0, #10
   1aba4:	bl	14924 <fputc@plt>
   1aba8:	ldr	r0, [r5, #204]	; 0xcc
   1abac:	str	r5, [sp]
   1abb0:	str	r4, [sp, #4]
   1abb4:	movw	r1, #25732	; 0x6484
   1abb8:	movt	r1, #4
   1abbc:	mov	r2, r4
   1abc0:	mov	r3, r4
   1abc4:	bl	148c4 <fprintf@plt>
   1abc8:	sub	sp, fp, #24
   1abcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1abd0:	push	{r4, r5, fp, lr}
   1abd4:	add	fp, sp, #8
   1abd8:	mov	r4, r0
   1abdc:	ldr	r0, [r0, #208]	; 0xd0
   1abe0:	ldr	r5, [r0, #40]	; 0x28
   1abe4:	cmp	r5, #0
   1abe8:	popeq	{r4, r5, fp, pc}
   1abec:	mov	r0, #0
   1abf0:	b	1ac00 <__flatcc_fb_gen_c_builder@@Base+0x1328>
   1abf4:	ldr	r5, [r5]
   1abf8:	cmp	r5, #0
   1abfc:	beq	1ac20 <__flatcc_fb_gen_c_builder@@Base+0x1348>
   1ac00:	ldrh	r1, [r5, #8]
   1ac04:	cmp	r1, #4
   1ac08:	bne	1abf4 <__flatcc_fb_gen_c_builder@@Base+0x131c>
   1ac0c:	mov	r0, r4
   1ac10:	mov	r1, r5
   1ac14:	bl	1b9d8 <__flatcc_fb_gen_c_builder@@Base+0x2100>
   1ac18:	mov	r0, #1
   1ac1c:	b	1abf4 <__flatcc_fb_gen_c_builder@@Base+0x131c>
   1ac20:	cmp	r0, #0
   1ac24:	beq	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   1ac28:	ldr	r1, [r4, #204]	; 0xcc
   1ac2c:	mov	r0, #10
   1ac30:	pop	{r4, r5, fp, lr}
   1ac34:	b	14924 <fputc@plt>
   1ac38:	pop	{r4, r5, fp, pc}
   1ac3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac40:	add	fp, sp, #28
   1ac44:	sub	sp, sp, #620	; 0x26c
   1ac48:	mov	r6, r1
   1ac4c:	mov	r4, r0
   1ac50:	sub	sl, fp, #264	; 0x108
   1ac54:	mov	r0, sl
   1ac58:	mov	r1, #0
   1ac5c:	mov	r2, #220	; 0xdc
   1ac60:	bl	148dc <memset@plt>
   1ac64:	add	r0, sp, #160	; 0xa0
   1ac68:	mov	r1, #0
   1ac6c:	mov	r2, #220	; 0xdc
   1ac70:	bl	148dc <memset@plt>
   1ac74:	mov	r0, r6
   1ac78:	mov	r1, sl
   1ac7c:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1ac80:	ldr	r7, [r6, #20]
   1ac84:	cmp	r7, #0
   1ac88:	beq	1b21c <__flatcc_fb_gen_c_builder@@Base+0x1944>
   1ac8c:	sub	r6, fp, #40	; 0x28
   1ac90:	b	1acd0 <__flatcc_fb_gen_c_builder@@Base+0x13f8>
   1ac94:	ldr	r0, [r4, #204]	; 0xcc
   1ac98:	ldrd	r2, [r9]
   1ac9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aca0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1aca4:	stm	sp, {r2, r3, r4, sl}
   1aca8:	str	r1, [sp, #16]
   1acac:	str	r6, [sp, #20]
   1acb0:	sub	r6, fp, #40	; 0x28
   1acb4:	movw	r1, #27094	; 0x69d6
   1acb8:	movt	r1, #4
   1acbc:	mov	r2, r4
   1acc0:	bl	148c4 <fprintf@plt>
   1acc4:	ldr	r7, [r7]
   1acc8:	cmp	r7, #0
   1accc:	beq	1b21c <__flatcc_fb_gen_c_builder@@Base+0x1944>
   1acd0:	mov	r0, r7
   1acd4:	mov	r1, r6
   1acd8:	sub	r2, fp, #36	; 0x24
   1acdc:	bl	1a86c <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1ace0:	ldrb	r0, [r7, #72]	; 0x48
   1ace4:	tst	r0, #4
   1ace8:	bne	1adf0 <__flatcc_fb_gen_c_builder@@Base+0x1518>
   1acec:	ldrh	r0, [r7, #24]
   1acf0:	sub	r0, r0, #7
   1acf4:	cmp	r0, #8
   1acf8:	bhi	1b230 <__flatcc_fb_gen_c_builder@@Base+0x1958>
   1acfc:	add	r5, r7, #88	; 0x58
   1ad00:	add	r9, r7, #96	; 0x60
   1ad04:	add	r1, pc, #0
   1ad08:	ldr	pc, [r1, r0, lsl #2]
   1ad0c:	andeq	sl, r1, r0, lsr sp
   1ad10:	andeq	sl, r1, r4, lsl lr
   1ad14:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad18:	muleq	r1, r4, ip
   1ad1c:	andeq	fp, r1, r0, lsr r2
   1ad20:	andeq	fp, r1, r0, lsr r2
   1ad24:	andeq	fp, r1, r0, lsr r2
   1ad28:	andeq	sl, r1, ip, ror #30
   1ad2c:	andeq	sl, r1, r0, ror #29
   1ad30:	ldr	r5, [r7, #16]
   1ad34:	mov	r0, r5
   1ad38:	mov	r1, r4
   1ad3c:	bl	1a7dc <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1ad40:	mov	r6, r0
   1ad44:	mov	r0, r5
   1ad48:	bl	1a7f4 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1ad4c:	mov	r5, r0
   1ad50:	ldr	r0, [r7, #16]
   1ad54:	bl	1a874 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1ad58:	ldrd	r2, [r9]
   1ad5c:	ldr	r1, [r4, #204]	; 0xcc
   1ad60:	ldr	r9, [fp, #-40]	; 0xffffffd8
   1ad64:	ldr	r8, [fp, #-36]	; 0xffffffdc
   1ad68:	str	r6, [sp, #32]
   1ad6c:	sub	r6, fp, #40	; 0x28
   1ad70:	str	r5, [sp, #36]	; 0x24
   1ad74:	stm	sp, {r2, r3, r4, sl}
   1ad78:	str	r9, [sp, #16]
   1ad7c:	str	r8, [sp, #20]
   1ad80:	str	r4, [sp, #24]
   1ad84:	str	r0, [sp, #28]
   1ad88:	mov	r0, r1
   1ad8c:	movw	r1, #26767	; 0x688f
   1ad90:	movt	r1, #4
   1ad94:	mov	r2, r4
   1ad98:	bl	148c4 <fprintf@plt>
   1ad9c:	ldr	r0, [r7, #104]	; 0x68
   1ada0:	cmp	r0, #0
   1ada4:	beq	1acc4 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1ada8:	ldrh	r1, [r0, #8]
   1adac:	cmp	r1, #1
   1adb0:	beq	1afd4 <__flatcc_fb_gen_c_builder@@Base+0x16fc>
   1adb4:	cmp	r1, #0
   1adb8:	bne	1b320 <__flatcc_fb_gen_c_builder@@Base+0x1a48>
   1adbc:	add	r5, sp, #160	; 0xa0
   1adc0:	mov	r1, r5
   1adc4:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1adc8:	ldr	r0, [r4, #204]	; 0xcc
   1adcc:	str	sl, [sp]
   1add0:	str	r9, [sp, #4]
   1add4:	str	r8, [sp, #8]
   1add8:	str	r5, [sp, #12]
   1addc:	str	r5, [sp, #16]
   1ade0:	str	r5, [sp, #20]
   1ade4:	movw	r1, #26822	; 0x68c6
   1ade8:	movt	r1, #4
   1adec:	b	1b010 <__flatcc_fb_gen_c_builder@@Base+0x1738>
   1adf0:	ldr	r0, [r4, #204]	; 0xcc
   1adf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1adf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1adfc:	str	r1, [sp]
   1ae00:	movw	r1, #26644	; 0x6814
   1ae04:	movt	r1, #4
   1ae08:	mov	r2, sl
   1ae0c:	bl	148c4 <fprintf@plt>
   1ae10:	b	1acc4 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1ae14:	ldr	sl, [r7, #16]
   1ae18:	mov	r0, sl
   1ae1c:	mov	r1, r4
   1ae20:	bl	1a7dc <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1ae24:	mov	r8, r0
   1ae28:	mov	r0, sl
   1ae2c:	bl	1a7f4 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1ae30:	mov	sl, r0
   1ae34:	ldr	r0, [r7, #16]
   1ae38:	bl	1a874 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1ae3c:	str	r0, [sp, #56]	; 0x38
   1ae40:	ldr	r0, [r7, #16]
   1ae44:	add	r1, r7, #48	; 0x30
   1ae48:	add	r2, sp, #60	; 0x3c
   1ae4c:	bl	1bb78 <__flatcc_fb_gen_c_builder@@Base+0x22a0>
   1ae50:	ldm	r9, {r2, r9}
   1ae54:	ldm	r5, {r1, r5}
   1ae58:	ldrh	r6, [r7, #74]	; 0x4a
   1ae5c:	ldr	r0, [r4, #204]	; 0xcc
   1ae60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae64:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1ae68:	str	r8, [sp, #32]
   1ae6c:	str	sl, [sp, #36]	; 0x24
   1ae70:	sub	sl, fp, #264	; 0x108
   1ae74:	add	lr, sp, #40	; 0x28
   1ae78:	stm	lr, {r1, r5, r6}
   1ae7c:	sub	r6, fp, #40	; 0x28
   1ae80:	add	r1, sp, #60	; 0x3c
   1ae84:	str	r1, [sp, #52]	; 0x34
   1ae88:	stm	sp, {r2, r9}
   1ae8c:	str	r4, [sp, #8]
   1ae90:	str	sl, [sp, #12]
   1ae94:	str	r3, [sp, #16]
   1ae98:	str	ip, [sp, #20]
   1ae9c:	str	r4, [sp, #24]
   1aea0:	ldr	r1, [sp, #56]	; 0x38
   1aea4:	str	r1, [sp, #28]
   1aea8:	movw	r1, #26698	; 0x684a
   1aeac:	movt	r1, #4
   1aeb0:	b	1acbc <__flatcc_fb_gen_c_builder@@Base+0x13e4>
   1aeb4:	ldr	r0, [r4, #204]	; 0xcc
   1aeb8:	ldrd	r2, [r9]
   1aebc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aec0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1aec4:	stm	sp, {r2, r3, r4, sl}
   1aec8:	str	r1, [sp, #16]
   1aecc:	str	r6, [sp, #20]
   1aed0:	sub	r6, fp, #40	; 0x28
   1aed4:	movw	r1, #27137	; 0x6a01
   1aed8:	movt	r1, #4
   1aedc:	b	1acbc <__flatcc_fb_gen_c_builder@@Base+0x13e4>
   1aee0:	ldr	r0, [r7, #16]
   1aee4:	add	r1, sp, #160	; 0xa0
   1aee8:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1aeec:	ldr	r0, [r7, #16]
   1aef0:	ldrh	r1, [r0, #8]
   1aef4:	cmp	r1, #4
   1aef8:	bhi	1b280 <__flatcc_fb_gen_c_builder@@Base+0x19a8>
   1aefc:	add	r2, pc, #0
   1af00:	ldr	pc, [r2, r1, lsl #2]
   1af04:	andeq	sl, r1, r8, lsl pc
   1af08:	ldrdeq	fp, [r1], -r8
   1af0c:	andeq	fp, r1, r0, lsl #5
   1af10:	andeq	fp, r1, r0, ror r1
   1af14:	andeq	fp, r1, ip, lsl r0
   1af18:	ldrb	r0, [r0, #10]
   1af1c:	tst	r0, #8
   1af20:	beq	1af3c <__flatcc_fb_gen_c_builder@@Base+0x1664>
   1af24:	ldr	r3, [r4, #204]	; 0xcc
   1af28:	movw	r0, #27408	; 0x6b10
   1af2c:	movt	r0, #4
   1af30:	mov	r1, #32
   1af34:	mov	r2, #1
   1af38:	bl	14858 <fwrite@plt>
   1af3c:	ldr	r0, [r4, #204]	; 0xcc
   1af40:	ldrd	r2, [r9]
   1af44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1af48:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1af4c:	stm	sp, {r2, r3, r4, sl}
   1af50:	str	r1, [sp, #16]
   1af54:	str	r6, [sp, #20]
   1af58:	add	r1, sp, #160	; 0xa0
   1af5c:	str	r1, [sp, #24]
   1af60:	movw	r1, #27494	; 0x6b66
   1af64:	movt	r1, #4
   1af68:	b	1b20c <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1af6c:	ldr	r0, [r7, #16]
   1af70:	add	r1, sp, #160	; 0xa0
   1af74:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1af78:	ldr	r0, [r7, #16]
   1af7c:	ldrh	r1, [r0, #8]
   1af80:	cmp	r1, #4
   1af84:	bhi	1b2d0 <__flatcc_fb_gen_c_builder@@Base+0x19f8>
   1af88:	add	r2, pc, #0
   1af8c:	ldr	pc, [r2, r1, lsl #2]
   1af90:	andeq	sl, r1, r4, lsr #31
   1af94:	andeq	fp, r1, r0, lsr r1
   1af98:	ldrdeq	fp, [r1], -r0
   1af9c:	andeq	fp, r1, r8, lsr #3
   1afa0:	andeq	fp, r1, ip, ror r0
   1afa4:	ldr	r0, [r4, #204]	; 0xcc
   1afa8:	ldrd	r2, [r9]
   1afac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1afb0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1afb4:	stm	sp, {r2, r3, r4, sl}
   1afb8:	str	r1, [sp, #16]
   1afbc:	str	r6, [sp, #20]
   1afc0:	add	r1, sp, #160	; 0xa0
   1afc4:	str	r1, [sp, #24]
   1afc8:	movw	r1, #27244	; 0x6a6c
   1afcc:	movt	r1, #4
   1afd0:	b	1b20c <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1afd4:	add	r5, sp, #160	; 0xa0
   1afd8:	mov	r1, r5
   1afdc:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1afe0:	ldr	r0, [r4, #204]	; 0xcc
   1afe4:	ldr	r1, [r7, #104]	; 0x68
   1afe8:	ldrh	r1, [r1, #104]	; 0x68
   1afec:	str	sl, [sp]
   1aff0:	str	r9, [sp, #4]
   1aff4:	str	r8, [sp, #8]
   1aff8:	str	r5, [sp, #12]
   1affc:	str	r1, [sp, #16]
   1b000:	str	r5, [sp, #20]
   1b004:	str	r5, [sp, #24]
   1b008:	movw	r1, #26903	; 0x6917
   1b00c:	movt	r1, #4
   1b010:	mov	r2, r4
   1b014:	mov	r3, r4
   1b018:	b	1ae0c <__flatcc_fb_gen_c_builder@@Base+0x1534>
   1b01c:	ldr	r0, [r4, #204]	; 0xcc
   1b020:	ldrd	r2, [r9]
   1b024:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1b028:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b02c:	stm	sp, {r2, r3, r4, sl}
   1b030:	str	r5, [sp, #16]
   1b034:	str	r6, [sp, #20]
   1b038:	add	r1, sp, #160	; 0xa0
   1b03c:	str	r1, [sp, #24]
   1b040:	movw	r1, #27605	; 0x6bd5
   1b044:	movt	r1, #4
   1b048:	mov	r2, r4
   1b04c:	bl	148c4 <fprintf@plt>
   1b050:	ldr	r0, [r7, #16]
   1b054:	str	r0, [sp]
   1b058:	mov	r0, #1
   1b05c:	str	r0, [sp, #4]
   1b060:	mov	r0, r4
   1b064:	mov	r1, sl
   1b068:	mov	r2, r5
   1b06c:	mov	r3, r6
   1b070:	sub	r6, fp, #40	; 0x28
   1b074:	bl	1bca0 <__flatcc_fb_gen_c_builder@@Base+0x23c8>
   1b078:	b	1acc4 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1b07c:	ldr	r0, [r4, #204]	; 0xcc
   1b080:	ldrd	r2, [r9]
   1b084:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1b088:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b08c:	stm	sp, {r2, r3, r4, sl}
   1b090:	str	r5, [sp, #16]
   1b094:	str	r6, [sp, #20]
   1b098:	add	r1, sp, #160	; 0xa0
   1b09c:	str	r1, [sp, #24]
   1b0a0:	movw	r1, #27362	; 0x6ae2
   1b0a4:	movt	r1, #4
   1b0a8:	mov	r2, r4
   1b0ac:	bl	148c4 <fprintf@plt>
   1b0b0:	ldr	r0, [r7, #16]
   1b0b4:	str	r0, [sp]
   1b0b8:	mov	r0, #0
   1b0bc:	str	r0, [sp, #4]
   1b0c0:	mov	r0, r4
   1b0c4:	mov	r1, sl
   1b0c8:	mov	r2, r5
   1b0cc:	mov	r3, r6
   1b0d0:	bl	1bca0 <__flatcc_fb_gen_c_builder@@Base+0x23c8>
   1b0d4:	b	1b214 <__flatcc_fb_gen_c_builder@@Base+0x193c>
   1b0d8:	ldrb	r0, [r0, #10]
   1b0dc:	tst	r0, #8
   1b0e0:	beq	1b0fc <__flatcc_fb_gen_c_builder@@Base+0x1824>
   1b0e4:	ldr	r3, [r4, #204]	; 0xcc
   1b0e8:	movw	r0, #27408	; 0x6b10
   1b0ec:	movt	r0, #4
   1b0f0:	mov	r1, #32
   1b0f4:	mov	r2, #1
   1b0f8:	bl	14858 <fwrite@plt>
   1b0fc:	ldr	r0, [r4, #204]	; 0xcc
   1b100:	ldrd	r2, [r9]
   1b104:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b108:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b10c:	stm	sp, {r2, r3, r4, sl}
   1b110:	str	r1, [sp, #16]
   1b114:	str	r6, [sp, #20]
   1b118:	add	r1, sp, #160	; 0xa0
   1b11c:	str	r1, [sp, #24]
   1b120:	str	r1, [sp, #28]
   1b124:	movw	r1, #27441	; 0x6b31
   1b128:	movt	r1, #4
   1b12c:	b	1b20c <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1b130:	ldr	r0, [r4, #204]	; 0xcc
   1b134:	ldrd	r2, [r9]
   1b138:	ldr	r6, [r5]
   1b13c:	ldr	r1, [r5, #4]
   1b140:	ldrh	r5, [r7, #74]	; 0x4a
   1b144:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1b148:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b14c:	str	r6, [sp, #32]
   1b150:	str	r1, [sp, #36]	; 0x24
   1b154:	str	r5, [sp, #40]	; 0x28
   1b158:	stm	sp, {r2, r3, r4, sl, ip, lr}
   1b15c:	add	r1, sp, #160	; 0xa0
   1b160:	str	r1, [sp, #24]
   1b164:	movw	r1, #27187	; 0x6a33
   1b168:	movt	r1, #4
   1b16c:	b	1b20c <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1b170:	ldr	r0, [r4, #204]	; 0xcc
   1b174:	ldrd	r2, [r9]
   1b178:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b17c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b180:	stm	sp, {r2, r3, r4, sl}
   1b184:	str	r1, [sp, #16]
   1b188:	str	r6, [sp, #20]
   1b18c:	sub	r6, fp, #40	; 0x28
   1b190:	add	r1, sp, #160	; 0xa0
   1b194:	str	r1, [sp, #24]
   1b198:	str	r1, [sp, #28]
   1b19c:	movw	r1, #27547	; 0x6b9b
   1b1a0:	movt	r1, #4
   1b1a4:	b	1acbc <__flatcc_fb_gen_c_builder@@Base+0x13e4>
   1b1a8:	ldr	r0, [r0, #40]	; 0x28
   1b1ac:	add	r1, r7, #48	; 0x30
   1b1b0:	add	r8, sp, #60	; 0x3c
   1b1b4:	mov	r2, r8
   1b1b8:	bl	1bb78 <__flatcc_fb_gen_c_builder@@Base+0x22a0>
   1b1bc:	ldm	r9, {r2, r9}
   1b1c0:	ldr	r6, [r5]
   1b1c4:	ldr	r1, [r5, #4]
   1b1c8:	ldrh	r5, [r7, #74]	; 0x4a
   1b1cc:	ldr	r0, [r4, #204]	; 0xcc
   1b1d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1d4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b1d8:	str	r6, [sp, #32]
   1b1dc:	add	lr, sp, #36	; 0x24
   1b1e0:	stm	lr, {r1, r5, r8}
   1b1e4:	stm	sp, {r2, r9}
   1b1e8:	str	r4, [sp, #8]
   1b1ec:	str	sl, [sp, #12]
   1b1f0:	str	r3, [sp, #16]
   1b1f4:	str	ip, [sp, #20]
   1b1f8:	add	r1, sp, #160	; 0xa0
   1b1fc:	str	r1, [sp, #24]
   1b200:	str	r1, [sp, #28]
   1b204:	movw	r1, #27290	; 0x6a9a
   1b208:	movt	r1, #4
   1b20c:	mov	r2, r4
   1b210:	bl	148c4 <fprintf@plt>
   1b214:	sub	r6, fp, #40	; 0x28
   1b218:	b	1acc4 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1b21c:	ldr	r1, [r4, #204]	; 0xcc
   1b220:	mov	r0, #10
   1b224:	bl	14924 <fputc@plt>
   1b228:	sub	sp, fp, #28
   1b22c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b230:	movw	r0, #4272	; 0x10b0
   1b234:	movt	r0, #6
   1b238:	ldr	r0, [r0]
   1b23c:	movw	r1, #51910	; 0xcac6
   1b240:	movt	r1, #3
   1b244:	str	r1, [sp]
   1b248:	movw	r1, #21375	; 0x537f
   1b24c:	movt	r1, #3
   1b250:	movw	r4, #24380	; 0x5f3c
   1b254:	movt	r4, #4
   1b258:	mov	r2, r4
   1b25c:	movw	r3, #1512	; 0x5e8
   1b260:	bl	148c4 <fprintf@plt>
   1b264:	movw	r0, #25261	; 0x62ad
   1b268:	movt	r0, #4
   1b26c:	movw	r3, #27028	; 0x6994
   1b270:	movt	r3, #4
   1b274:	mov	r1, r4
   1b278:	movw	r2, #1512	; 0x5e8
   1b27c:	bl	14984 <__assert_fail@plt>
   1b280:	movw	r0, #4272	; 0x10b0
   1b284:	movt	r0, #6
   1b288:	ldr	r0, [r0]
   1b28c:	movw	r1, #51716	; 0xca04
   1b290:	movt	r1, #3
   1b294:	str	r1, [sp]
   1b298:	movw	r1, #21375	; 0x537f
   1b29c:	movt	r1, #3
   1b2a0:	movw	r4, #24380	; 0x5f3c
   1b2a4:	movt	r4, #4
   1b2a8:	mov	r2, r4
   1b2ac:	movw	r3, #1507	; 0x5e3
   1b2b0:	bl	148c4 <fprintf@plt>
   1b2b4:	movw	r0, #25261	; 0x62ad
   1b2b8:	movt	r0, #4
   1b2bc:	movw	r3, #27028	; 0x6994
   1b2c0:	movt	r3, #4
   1b2c4:	mov	r1, r4
   1b2c8:	movw	r2, #1507	; 0x5e3
   1b2cc:	bl	14984 <__assert_fail@plt>
   1b2d0:	movw	r0, #4272	; 0x10b0
   1b2d4:	movt	r0, #6
   1b2d8:	ldr	r0, [r0]
   1b2dc:	movw	r1, #51643	; 0xc9bb
   1b2e0:	movt	r1, #3
   1b2e4:	str	r1, [sp]
   1b2e8:	movw	r1, #21375	; 0x537f
   1b2ec:	movt	r1, #3
   1b2f0:	movw	r4, #24380	; 0x5f3c
   1b2f4:	movt	r4, #4
   1b2f8:	mov	r2, r4
   1b2fc:	mov	r3, #1472	; 0x5c0
   1b300:	bl	148c4 <fprintf@plt>
   1b304:	movw	r0, #25261	; 0x62ad
   1b308:	movt	r0, #4
   1b30c:	movw	r3, #27028	; 0x6994
   1b310:	movt	r3, #4
   1b314:	mov	r1, r4
   1b318:	mov	r2, #1472	; 0x5c0
   1b31c:	bl	14984 <__assert_fail@plt>
   1b320:	movw	r0, #4272	; 0x10b0
   1b324:	movt	r0, #6
   1b328:	ldr	r0, [r0]
   1b32c:	movw	r1, #26989	; 0x696d
   1b330:	movt	r1, #4
   1b334:	str	r1, [sp]
   1b338:	movw	r1, #21375	; 0x537f
   1b33c:	movt	r1, #3
   1b340:	movw	r4, #24380	; 0x5f3c
   1b344:	movt	r4, #4
   1b348:	mov	r2, r4
   1b34c:	movw	r3, #1430	; 0x596
   1b350:	bl	148c4 <fprintf@plt>
   1b354:	movw	r0, #25261	; 0x62ad
   1b358:	movt	r0, #4
   1b35c:	movw	r3, #27028	; 0x6994
   1b360:	movt	r3, #4
   1b364:	mov	r1, r4
   1b368:	movw	r2, #1430	; 0x596
   1b36c:	bl	14984 <__assert_fail@plt>
   1b370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b374:	add	fp, sp, #28
   1b378:	sub	sp, sp, #260	; 0x104
   1b37c:	mov	r7, r1
   1b380:	mov	r4, r0
   1b384:	ldrh	r9, [r1, #92]	; 0x5c
   1b388:	add	r5, sp, #24
   1b38c:	mov	r8, #0
   1b390:	mov	r0, r5
   1b394:	mov	r1, #0
   1b398:	mov	r2, #220	; 0xdc
   1b39c:	bl	148dc <memset@plt>
   1b3a0:	mov	r0, r7
   1b3a4:	mov	r1, r5
   1b3a8:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b3ac:	ldr	r0, [r4, #204]	; 0xcc
   1b3b0:	stm	sp, {r4, r5}
   1b3b4:	movw	r1, #28041	; 0x6d89
   1b3b8:	movt	r1, #4
   1b3bc:	mov	r2, r5
   1b3c0:	mov	r3, r5
   1b3c4:	bl	148c4 <fprintf@plt>
   1b3c8:	ldr	r0, [r4, #204]	; 0xcc
   1b3cc:	movw	r1, #28108	; 0x6dcc
   1b3d0:	movt	r1, #4
   1b3d4:	mov	r2, r5
   1b3d8:	bl	148c4 <fprintf@plt>
   1b3dc:	ldr	r6, [r7, #24]
   1b3e0:	cmp	r6, #0
   1b3e4:	beq	1b570 <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1b3e8:	str	r7, [sp, #20]
   1b3ec:	ands	r9, r9, #8
   1b3f0:	str	r9, [sp, #16]
   1b3f4:	movwne	r9, #1
   1b3f8:	sub	sl, fp, #40	; 0x28
   1b3fc:	add	r7, sp, #24
   1b400:	b	1b440 <__flatcc_fb_gen_c_builder@@Base+0x1b68>
   1b404:	ldr	r0, [r4, #204]	; 0xcc
   1b408:	ldr	r2, [r6, #96]	; 0x60
   1b40c:	ldr	r1, [r6, #100]	; 0x64
   1b410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b414:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1b418:	str	r2, [sp, #8]
   1b41c:	str	r1, [sp, #12]
   1b420:	str	r5, [sp]
   1b424:	movw	r1, #28170	; 0x6e0a
   1b428:	movt	r1, #4
   1b42c:	mov	r2, r7
   1b430:	bl	148c4 <fprintf@plt>
   1b434:	ldr	r6, [r6, #108]	; 0x6c
   1b438:	cmp	r6, #0
   1b43c:	beq	1b4c0 <__flatcc_fb_gen_c_builder@@Base+0x1be8>
   1b440:	ldrb	r0, [r6, #72]	; 0x48
   1b444:	tst	r0, #4
   1b448:	bne	1b434 <__flatcc_fb_gen_c_builder@@Base+0x1b5c>
   1b44c:	mov	r0, r6
   1b450:	sub	r1, fp, #36	; 0x24
   1b454:	mov	r2, sl
   1b458:	bl	1a86c <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1b45c:	ldrh	r0, [r6, #24]
   1b460:	cmp	r0, #14
   1b464:	bne	1b404 <__flatcc_fb_gen_c_builder@@Base+0x1b2c>
   1b468:	ldr	r0, [r6, #16]
   1b46c:	ldrh	r0, [r0, #8]
   1b470:	cmp	r0, #4
   1b474:	moveq	r8, #1
   1b478:	subs	r0, r0, #4
   1b47c:	movwne	r0, #1
   1b480:	orrs	r0, r0, r9
   1b484:	bne	1b404 <__flatcc_fb_gen_c_builder@@Base+0x1b2c>
   1b488:	ldr	r0, [r4, #204]	; 0xcc
   1b48c:	ldr	r2, [r6, #96]	; 0x60
   1b490:	ldr	r1, [r6, #100]	; 0x64
   1b494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b498:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1b49c:	str	r2, [sp, #8]
   1b4a0:	str	r1, [sp, #12]
   1b4a4:	str	r5, [sp]
   1b4a8:	movw	r1, #28130	; 0x6de2
   1b4ac:	movt	r1, #4
   1b4b0:	mov	r2, r7
   1b4b4:	bl	148c4 <fprintf@plt>
   1b4b8:	mov	r8, #1
   1b4bc:	b	1b434 <__flatcc_fb_gen_c_builder@@Base+0x1b5c>
   1b4c0:	ldr	r0, [sp, #16]
   1b4c4:	cmp	r0, #0
   1b4c8:	ldr	r0, [sp, #20]
   1b4cc:	bne	1b570 <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1b4d0:	cmp	r8, #0
   1b4d4:	beq	1b570 <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1b4d8:	ldr	r5, [r0, #24]
   1b4dc:	cmp	r5, #0
   1b4e0:	beq	1b570 <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1b4e4:	sub	r8, fp, #36	; 0x24
   1b4e8:	sub	r9, fp, #40	; 0x28
   1b4ec:	movw	sl, #28204	; 0x6e2c
   1b4f0:	movt	sl, #4
   1b4f4:	add	r7, sp, #24
   1b4f8:	b	1b508 <__flatcc_fb_gen_c_builder@@Base+0x1c30>
   1b4fc:	ldr	r5, [r5, #108]	; 0x6c
   1b500:	cmp	r5, #0
   1b504:	beq	1b570 <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1b508:	ldrb	r0, [r5, #72]	; 0x48
   1b50c:	tst	r0, #4
   1b510:	bne	1b4fc <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1b514:	ldrh	r0, [r5, #24]
   1b518:	cmp	r0, #14
   1b51c:	bne	1b4fc <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1b520:	ldr	r0, [r5, #16]
   1b524:	ldrh	r0, [r0, #8]
   1b528:	cmp	r0, #4
   1b52c:	bne	1b4fc <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1b530:	mov	r0, r5
   1b534:	mov	r1, r8
   1b538:	mov	r2, r9
   1b53c:	bl	1a86c <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1b540:	ldr	r0, [r4, #204]	; 0xcc
   1b544:	ldr	r2, [r5, #96]	; 0x60
   1b548:	ldr	r1, [r5, #100]	; 0x64
   1b54c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b550:	ldr	r6, [fp, #-40]	; 0xffffffd8
   1b554:	str	r2, [sp, #8]
   1b558:	str	r1, [sp, #12]
   1b55c:	str	r6, [sp]
   1b560:	mov	r1, sl
   1b564:	mov	r2, r7
   1b568:	bl	148c4 <fprintf@plt>
   1b56c:	b	1b4fc <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1b570:	ldr	r0, [r4, #204]	; 0xcc
   1b574:	movw	r1, #28248	; 0x6e58
   1b578:	movt	r1, #4
   1b57c:	add	r2, sp, #24
   1b580:	bl	148c4 <fprintf@plt>
   1b584:	sub	sp, fp, #28
   1b588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b58c:	push	{r4, r5, r6, sl, fp, lr}
   1b590:	add	fp, sp, #16
   1b594:	sub	sp, sp, #240	; 0xf0
   1b598:	mov	r4, r1
   1b59c:	mov	r5, r0
   1b5a0:	add	r6, sp, #16
   1b5a4:	mov	r0, r6
   1b5a8:	mov	r1, #0
   1b5ac:	mov	r2, #220	; 0xdc
   1b5b0:	bl	148dc <memset@plt>
   1b5b4:	mov	r0, r4
   1b5b8:	mov	r1, r6
   1b5bc:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b5c0:	ldr	r0, [r5, #204]	; 0xcc
   1b5c4:	str	r6, [sp]
   1b5c8:	str	r6, [sp, #4]
   1b5cc:	str	r6, [sp, #8]
   1b5d0:	movw	r1, #28301	; 0x6e8d
   1b5d4:	movt	r1, #4
   1b5d8:	mov	r2, r5
   1b5dc:	mov	r3, r5
   1b5e0:	bl	148c4 <fprintf@plt>
   1b5e4:	sub	sp, fp, #16
   1b5e8:	pop	{r4, r5, r6, sl, fp, pc}
   1b5ec:	ldr	r1, [r0, #20]
   1b5f0:	mov	r0, #0
   1b5f4:	cmp	r1, #0
   1b5f8:	bxeq	lr
   1b5fc:	mov	r2, #1
   1b600:	ldrh	r3, [r1, #72]	; 0x48
   1b604:	bic	r3, r2, r3, lsr #2
   1b608:	add	r0, r0, r3
   1b60c:	ldr	r1, [r1]
   1b610:	cmp	r1, #0
   1b614:	bne	1b600 <__flatcc_fb_gen_c_builder@@Base+0x1d28>
   1b618:	bx	lr
   1b61c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b620:	add	fp, sp, #28
   1b624:	sub	sp, sp, #236	; 0xec
   1b628:	mov	r4, r2
   1b62c:	mov	r7, r1
   1b630:	mov	r5, r0
   1b634:	add	r0, sp, #8
   1b638:	mov	r6, #0
   1b63c:	mov	r1, #0
   1b640:	mov	r2, #220	; 0xdc
   1b644:	bl	148dc <memset@plt>
   1b648:	ldr	r7, [r7, #20]
   1b64c:	cmp	r7, #0
   1b650:	beq	1b86c <__flatcc_fb_gen_c_builder@@Base+0x1f94>
   1b654:	add	r8, sp, #8
   1b658:	b	1b68c <__flatcc_fb_gen_c_builder@@Base+0x1db4>
   1b65c:	cmp	r0, #3
   1b660:	bne	1b914 <__flatcc_fb_gen_c_builder@@Base+0x203c>
   1b664:	ldr	r0, [r5, #204]	; 0xcc
   1b668:	ldrd	r2, [r7, #96]	; 0x60
   1b66c:	stm	sp, {r2, r3}
   1b670:	movw	r1, #26064	; 0x65d0
   1b674:	movt	r1, #4
   1b678:	mov	r2, r8
   1b67c:	bl	148c4 <fprintf@plt>
   1b680:	ldr	r7, [r7]
   1b684:	cmp	r7, #0
   1b688:	beq	1b86c <__flatcc_fb_gen_c_builder@@Base+0x1f94>
   1b68c:	ldrb	r0, [r7, #72]	; 0x48
   1b690:	tst	r0, #4
   1b694:	bne	1b680 <__flatcc_fb_gen_c_builder@@Base+0x1da8>
   1b698:	mov	r0, r5
   1b69c:	mov	r1, r6
   1b6a0:	mov	r2, r4
   1b6a4:	mov	r3, #1
   1b6a8:	bl	1a754 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1b6ac:	ldrh	r0, [r7, #24]
   1b6b0:	sub	r0, r0, #7
   1b6b4:	cmp	r0, #8
   1b6b8:	bhi	1b874 <__flatcc_fb_gen_c_builder@@Base+0x1f9c>
   1b6bc:	add	r6, r6, #1
   1b6c0:	add	r1, pc, #0
   1b6c4:	ldr	pc, [r1, r0, lsl #2]
   1b6c8:	andeq	fp, r1, ip, ror #13
   1b6cc:	andeq	fp, r1, r4, lsr r7
   1b6d0:	andeq	fp, r1, ip, ror r7
   1b6d4:	andeq	fp, r1, ip, lsl r7
   1b6d8:	andeq	fp, r1, r4, ror r8
   1b6dc:	andeq	fp, r1, r4, ror r8
   1b6e0:	andeq	fp, r1, r4, ror r8
   1b6e4:	ldrdeq	fp, [r1], -r4
   1b6e8:	muleq	r1, r8, r7
   1b6ec:	ldr	r0, [r7, #16]
   1b6f0:	bl	1a874 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1b6f4:	mov	r3, r0
   1b6f8:	ldr	r0, [r5, #204]	; 0xcc
   1b6fc:	ldr	r2, [r7, #96]	; 0x60
   1b700:	ldr	r1, [r7, #100]	; 0x64
   1b704:	str	r2, [sp]
   1b708:	str	r1, [sp, #4]
   1b70c:	movw	r1, #26062	; 0x65ce
   1b710:	movt	r1, #4
   1b714:	mov	r2, r5
   1b718:	b	1b774 <__flatcc_fb_gen_c_builder@@Base+0x1e9c>
   1b71c:	ldr	r0, [r5, #204]	; 0xcc
   1b720:	ldrd	r2, [r7, #96]	; 0x60
   1b724:	stm	sp, {r2, r3}
   1b728:	movw	r1, #26083	; 0x65e3
   1b72c:	movt	r1, #4
   1b730:	b	1b790 <__flatcc_fb_gen_c_builder@@Base+0x1eb8>
   1b734:	ldr	r9, [r7, #16]
   1b738:	mov	r0, r9
   1b73c:	mov	r1, r5
   1b740:	bl	1a7dc <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1b744:	mov	sl, r0
   1b748:	mov	r0, r9
   1b74c:	bl	1a7f4 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1b750:	mov	r3, r0
   1b754:	ldr	r0, [r5, #204]	; 0xcc
   1b758:	ldr	r2, [r7, #96]	; 0x60
   1b75c:	ldr	r1, [r7, #100]	; 0x64
   1b760:	str	r2, [sp]
   1b764:	str	r1, [sp, #4]
   1b768:	movw	r1, #26051	; 0x65c3
   1b76c:	movt	r1, #4
   1b770:	mov	r2, sl
   1b774:	bl	148c4 <fprintf@plt>
   1b778:	b	1b680 <__flatcc_fb_gen_c_builder@@Base+0x1da8>
   1b77c:	ldr	r0, [r5, #204]	; 0xcc
   1b780:	ldrd	r2, [r7, #96]	; 0x60
   1b784:	stm	sp, {r2, r3}
   1b788:	movw	r1, #26104	; 0x65f8
   1b78c:	movt	r1, #4
   1b790:	mov	r2, r5
   1b794:	b	1b67c <__flatcc_fb_gen_c_builder@@Base+0x1da4>
   1b798:	ldr	r0, [r7, #16]
   1b79c:	mov	r1, r8
   1b7a0:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b7a4:	ldr	r0, [r7, #16]
   1b7a8:	ldrh	r0, [r0, #8]
   1b7ac:	cmp	r0, #2
   1b7b0:	bcc	1b664 <__flatcc_fb_gen_c_builder@@Base+0x1d8c>
   1b7b4:	cmp	r0, #4
   1b7b8:	bne	1b65c <__flatcc_fb_gen_c_builder@@Base+0x1d84>
   1b7bc:	ldr	r0, [r5, #204]	; 0xcc
   1b7c0:	ldrd	r2, [r7, #96]	; 0x60
   1b7c4:	stm	sp, {r2, r3}
   1b7c8:	movw	r1, #25982	; 0x657e
   1b7cc:	movt	r1, #4
   1b7d0:	b	1b678 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1b7d4:	ldr	r0, [r7, #16]
   1b7d8:	mov	r1, r8
   1b7dc:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b7e0:	ldr	r0, [r7, #16]
   1b7e4:	ldrh	r0, [r0, #8]
   1b7e8:	cmp	r0, #4
   1b7ec:	bhi	1b8c4 <__flatcc_fb_gen_c_builder@@Base+0x1fec>
   1b7f0:	add	r1, pc, #0
   1b7f4:	ldr	pc, [r1, r0, lsl #2]
   1b7f8:	andeq	fp, r1, ip, lsl #16
   1b7fc:	andeq	fp, r1, ip, lsr r8
   1b800:	andeq	fp, r1, r4, asr #17
   1b804:	andeq	fp, r1, r4, asr r8
   1b808:	andeq	fp, r1, r4, lsr #16
   1b80c:	ldr	r0, [r5, #204]	; 0xcc
   1b810:	ldrd	r2, [r7, #96]	; 0x60
   1b814:	stm	sp, {r2, r3}
   1b818:	movw	r1, #25828	; 0x64e4
   1b81c:	movt	r1, #4
   1b820:	b	1b678 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1b824:	ldr	r0, [r5, #204]	; 0xcc
   1b828:	ldrd	r2, [r7, #96]	; 0x60
   1b82c:	stm	sp, {r2, r3}
   1b830:	movw	r1, #25843	; 0x64f3
   1b834:	movt	r1, #4
   1b838:	b	1b678 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1b83c:	ldr	r0, [r5, #204]	; 0xcc
   1b840:	ldrd	r2, [r7, #96]	; 0x60
   1b844:	stm	sp, {r2, r3}
   1b848:	movw	r1, #25800	; 0x64c8
   1b84c:	movt	r1, #4
   1b850:	b	1b678 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1b854:	ldr	r0, [r5, #204]	; 0xcc
   1b858:	ldrd	r2, [r7, #96]	; 0x60
   1b85c:	stm	sp, {r2, r3}
   1b860:	movw	r1, #25812	; 0x64d4
   1b864:	movt	r1, #4
   1b868:	b	1b678 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1b86c:	sub	sp, fp, #28
   1b870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b874:	movw	r0, #4272	; 0x10b0
   1b878:	movt	r0, #6
   1b87c:	ldr	r0, [r0]
   1b880:	movw	r1, #24976	; 0x6190
   1b884:	movt	r1, #4
   1b888:	str	r1, [sp]
   1b88c:	movw	r1, #21375	; 0x537f
   1b890:	movt	r1, #3
   1b894:	movw	r4, #24380	; 0x5f3c
   1b898:	movt	r4, #4
   1b89c:	mov	r2, r4
   1b8a0:	movw	r3, #1209	; 0x4b9
   1b8a4:	bl	148c4 <fprintf@plt>
   1b8a8:	movw	r0, #25261	; 0x62ad
   1b8ac:	movt	r0, #4
   1b8b0:	movw	r3, #25908	; 0x6534
   1b8b4:	movt	r3, #4
   1b8b8:	mov	r1, r4
   1b8bc:	movw	r2, #1209	; 0x4b9
   1b8c0:	bl	14984 <__assert_fail@plt>
   1b8c4:	movw	r0, #4272	; 0x10b0
   1b8c8:	movt	r0, #6
   1b8cc:	ldr	r0, [r0]
   1b8d0:	movw	r1, #25864	; 0x6508
   1b8d4:	movt	r1, #4
   1b8d8:	str	r1, [sp]
   1b8dc:	movw	r1, #21375	; 0x537f
   1b8e0:	movt	r1, #3
   1b8e4:	movw	r4, #24380	; 0x5f3c
   1b8e8:	movt	r4, #4
   1b8ec:	mov	r2, r4
   1b8f0:	movw	r3, #1173	; 0x495
   1b8f4:	bl	148c4 <fprintf@plt>
   1b8f8:	movw	r0, #25261	; 0x62ad
   1b8fc:	movt	r0, #4
   1b900:	movw	r3, #25908	; 0x6534
   1b904:	movt	r3, #4
   1b908:	mov	r1, r4
   1b90c:	movw	r2, #1173	; 0x495
   1b910:	bl	14984 <__assert_fail@plt>
   1b914:	movw	r0, #4272	; 0x10b0
   1b918:	movt	r0, #6
   1b91c:	ldr	r0, [r0]
   1b920:	movw	r1, #26007	; 0x6597
   1b924:	movt	r1, #4
   1b928:	str	r1, [sp]
   1b92c:	movw	r1, #21375	; 0x537f
   1b930:	movt	r1, #3
   1b934:	movw	r4, #24380	; 0x5f3c
   1b938:	movt	r4, #4
   1b93c:	mov	r2, r4
   1b940:	movw	r3, #1189	; 0x4a5
   1b944:	bl	148c4 <fprintf@plt>
   1b948:	movw	r0, #25261	; 0x62ad
   1b94c:	movt	r0, #4
   1b950:	movw	r3, #25908	; 0x6534
   1b954:	movt	r3, #4
   1b958:	mov	r1, r4
   1b95c:	movw	r2, #1189	; 0x4a5
   1b960:	bl	14984 <__assert_fail@plt>
   1b964:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b968:	add	fp, sp, #24
   1b96c:	ldr	r7, [r1, #20]
   1b970:	cmp	r7, #0
   1b974:	beq	1b9d4 <__flatcc_fb_gen_c_builder@@Base+0x20fc>
   1b978:	mov	r4, r2
   1b97c:	mov	r5, r0
   1b980:	mov	r6, #0
   1b984:	movw	r8, #26056	; 0x65c8
   1b988:	movt	r8, #4
   1b98c:	b	1b99c <__flatcc_fb_gen_c_builder@@Base+0x20c4>
   1b990:	ldr	r7, [r7]
   1b994:	cmp	r7, #0
   1b998:	beq	1b9d4 <__flatcc_fb_gen_c_builder@@Base+0x20fc>
   1b99c:	ldrb	r0, [r7, #72]	; 0x48
   1b9a0:	tst	r0, #4
   1b9a4:	bne	1b990 <__flatcc_fb_gen_c_builder@@Base+0x20b8>
   1b9a8:	mov	r0, r5
   1b9ac:	mov	r1, r6
   1b9b0:	mov	r2, r4
   1b9b4:	mov	r3, #1
   1b9b8:	bl	1a754 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1b9bc:	ldrd	r2, [r7, #96]	; 0x60
   1b9c0:	ldr	r0, [r5, #204]	; 0xcc
   1b9c4:	mov	r1, r8
   1b9c8:	bl	148c4 <fprintf@plt>
   1b9cc:	add	r6, r6, #1
   1b9d0:	b	1b990 <__flatcc_fb_gen_c_builder@@Base+0x20b8>
   1b9d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b9d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9dc:	add	fp, sp, #28
   1b9e0:	sub	sp, sp, #492	; 0x1ec
   1b9e4:	mov	r6, r1
   1b9e8:	mov	r4, r0
   1b9ec:	add	r5, sp, #256	; 0x100
   1b9f0:	mov	r0, r5
   1b9f4:	mov	r1, #0
   1b9f8:	mov	r2, #220	; 0xdc
   1b9fc:	bl	148dc <memset@plt>
   1ba00:	add	r9, sp, #32
   1ba04:	mov	r0, r9
   1ba08:	mov	r1, #0
   1ba0c:	mov	r2, #220	; 0xdc
   1ba10:	bl	148dc <memset@plt>
   1ba14:	mov	r0, r6
   1ba18:	mov	r1, r5
   1ba1c:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1ba20:	ldr	r7, [r6, #20]
   1ba24:	cmp	r7, #0
   1ba28:	beq	1bb04 <__flatcc_fb_gen_c_builder@@Base+0x222c>
   1ba2c:	sub	sl, fp, #40	; 0x28
   1ba30:	sub	r6, fp, #36	; 0x24
   1ba34:	movw	r8, #26129	; 0x6611
   1ba38:	movt	r8, #4
   1ba3c:	b	1ba8c <__flatcc_fb_gen_c_builder@@Base+0x21b4>
   1ba40:	mov	r0, r7
   1ba44:	mov	r1, sl
   1ba48:	mov	r2, r6
   1ba4c:	bl	1a86c <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1ba50:	ldr	r0, [r4, #204]	; 0xcc
   1ba54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ba58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba5c:	stm	sp, {r1, r2, r4, r5}
   1ba60:	str	r5, [sp, #16]
   1ba64:	str	r1, [sp, #20]
   1ba68:	str	r2, [sp, #24]
   1ba6c:	movw	r1, #26261	; 0x6695
   1ba70:	movt	r1, #4
   1ba74:	mov	r2, r5
   1ba78:	mov	r3, r5
   1ba7c:	bl	148c4 <fprintf@plt>
   1ba80:	ldr	r7, [r7]
   1ba84:	cmp	r7, #0
   1ba88:	beq	1bb04 <__flatcc_fb_gen_c_builder@@Base+0x222c>
   1ba8c:	ldrh	r0, [r7, #24]
   1ba90:	cmp	r0, #0
   1ba94:	beq	1baec <__flatcc_fb_gen_c_builder@@Base+0x2214>
   1ba98:	cmp	r0, #10
   1ba9c:	beq	1ba40 <__flatcc_fb_gen_c_builder@@Base+0x2168>
   1baa0:	cmp	r0, #14
   1baa4:	bne	1bb28 <__flatcc_fb_gen_c_builder@@Base+0x2250>
   1baa8:	ldr	r0, [r7, #16]
   1baac:	mov	r1, r9
   1bab0:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1bab4:	mov	r0, r7
   1bab8:	mov	r1, sl
   1babc:	mov	r2, r6
   1bac0:	bl	1a86c <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1bac4:	ldr	r0, [r4, #204]	; 0xcc
   1bac8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bacc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bad0:	stm	sp, {r1, r2, r9}
   1bad4:	str	r5, [sp, #12]
   1bad8:	str	r5, [sp, #16]
   1badc:	str	r1, [sp, #20]
   1bae0:	str	r2, [sp, #24]
   1bae4:	mov	r1, r8
   1bae8:	b	1ba74 <__flatcc_fb_gen_c_builder@@Base+0x219c>
   1baec:	ldr	r0, [r4, #204]	; 0xcc
   1baf0:	str	r5, [sp]
   1baf4:	str	r5, [sp, #4]
   1baf8:	movw	r1, #26399	; 0x671f
   1bafc:	movt	r1, #4
   1bb00:	b	1ba74 <__flatcc_fb_gen_c_builder@@Base+0x219c>
   1bb04:	ldr	r0, [r4, #204]	; 0xcc
   1bb08:	str	r5, [sp]
   1bb0c:	movw	r1, #26612	; 0x67f4
   1bb10:	movt	r1, #4
   1bb14:	mov	r2, r4
   1bb18:	mov	r3, r4
   1bb1c:	bl	148c4 <fprintf@plt>
   1bb20:	sub	sp, fp, #28
   1bb24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb28:	movw	r0, #4272	; 0x10b0
   1bb2c:	movt	r0, #6
   1bb30:	ldr	r0, [r0]
   1bb34:	movw	r1, #26517	; 0x6795
   1bb38:	movt	r1, #4
   1bb3c:	str	r1, [sp]
   1bb40:	movw	r1, #21375	; 0x537f
   1bb44:	movt	r1, #3
   1bb48:	movw	r4, #24380	; 0x5f3c
   1bb4c:	movt	r4, #4
   1bb50:	mov	r2, r4
   1bb54:	movw	r3, #1608	; 0x648
   1bb58:	bl	148c4 <fprintf@plt>
   1bb5c:	movw	r0, #25261	; 0x62ad
   1bb60:	movt	r0, #4
   1bb64:	movw	r3, #26561	; 0x67c1
   1bb68:	movt	r3, #4
   1bb6c:	mov	r1, r4
   1bb70:	movw	r2, #1608	; 0x648
   1bb74:	bl	14984 <__assert_fail@plt>
   1bb78:	push	{r4, r5, fp, lr}
   1bb7c:	add	fp, sp, #8
   1bb80:	sub	sp, sp, #8
   1bb84:	mov	r5, r1
   1bb88:	ldrh	r1, [r1, #8]
   1bb8c:	sub	r1, r1, #3
   1bb90:	cmp	r1, #3
   1bb94:	bhi	1bc50 <__flatcc_fb_gen_c_builder@@Base+0x2378>
   1bb98:	mov	r4, r2
   1bb9c:	add	r2, pc, #0
   1bba0:	ldr	pc, [r2, r1, lsl #2]
   1bba4:			; <UNDEFINED> instruction: 0x0001bbb4
   1bba8:	andeq	fp, r1, ip, lsl #24
   1bbac:	ldrdeq	fp, [r1], -r8
   1bbb0:	strdeq	fp, [r1], -r4
   1bbb4:	vldr	d16, [r5]
   1bbb8:	cmp	r0, #11
   1bbbc:	bne	1bc34 <__flatcc_fb_gen_c_builder@@Base+0x235c>
   1bbc0:	vcvt.f32.f64	s0, d16
   1bbc4:	vcvt.f64.f32	d16, s0
   1bbc8:	vmov	r2, r3, d16
   1bbcc:	movw	r1, #48109	; 0xbbed
   1bbd0:	movt	r1, #3
   1bbd4:	b	1bc40 <__flatcc_fb_gen_c_builder@@Base+0x2368>
   1bbd8:	bl	1bef0 <__flatcc_fb_gen_c_builder@@Base+0x2618>
   1bbdc:	mov	r2, r0
   1bbe0:	ldrd	r0, [r5]
   1bbe4:	stm	sp, {r0, r1}
   1bbe8:	movw	r1, #48084	; 0xbbd4
   1bbec:	movt	r1, #3
   1bbf0:	b	1bc24 <__flatcc_fb_gen_c_builder@@Base+0x234c>
   1bbf4:	bl	1bef0 <__flatcc_fb_gen_c_builder@@Base+0x2618>
   1bbf8:	mov	r2, r0
   1bbfc:	ldrb	r3, [r5]
   1bc00:	movw	r1, #48102	; 0xbbe6
   1bc04:	movt	r1, #3
   1bc08:	b	1bc40 <__flatcc_fb_gen_c_builder@@Base+0x2368>
   1bc0c:	bl	1bef0 <__flatcc_fb_gen_c_builder@@Base+0x2618>
   1bc10:	mov	r2, r0
   1bc14:	ldrd	r0, [r5]
   1bc18:	stm	sp, {r0, r1}
   1bc1c:	movw	r1, #48093	; 0xbbdd
   1bc20:	movt	r1, #3
   1bc24:	mov	r0, r4
   1bc28:	bl	14930 <sprintf@plt>
   1bc2c:	sub	sp, fp, #8
   1bc30:	pop	{r4, r5, fp, pc}
   1bc34:	vmov	r2, r3, d16
   1bc38:	movw	r1, #48113	; 0xbbf1
   1bc3c:	movt	r1, #3
   1bc40:	mov	r0, r4
   1bc44:	sub	sp, fp, #8
   1bc48:	pop	{r4, r5, fp, lr}
   1bc4c:	b	14930 <sprintf@plt>
   1bc50:	movw	r0, #4272	; 0x10b0
   1bc54:	movt	r0, #6
   1bc58:	ldr	r0, [r0]
   1bc5c:	movw	r1, #47968	; 0xbb60
   1bc60:	movt	r1, #3
   1bc64:	str	r1, [sp]
   1bc68:	movw	r1, #21375	; 0x537f
   1bc6c:	movt	r1, #3
   1bc70:	movw	r4, #47895	; 0xbb17
   1bc74:	movt	r4, #3
   1bc78:	mov	r2, r4
   1bc7c:	mov	r3, #260	; 0x104
   1bc80:	bl	148c4 <fprintf@plt>
   1bc84:	movw	r0, #25261	; 0x62ad
   1bc88:	movt	r0, #4
   1bc8c:	movw	r3, #48117	; 0xbbf5
   1bc90:	movt	r3, #3
   1bc94:	mov	r1, r4
   1bc98:	mov	r2, #260	; 0x104
   1bc9c:	bl	14984 <__assert_fail@plt>
   1bca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bca4:	add	fp, sp, #28
   1bca8:	sub	sp, sp, #500	; 0x1f4
   1bcac:	str	r3, [sp, #36]	; 0x24
   1bcb0:	str	r2, [sp, #32]
   1bcb4:	mov	sl, r1
   1bcb8:	mov	r7, r0
   1bcbc:	add	r4, sp, #264	; 0x108
   1bcc0:	mov	r0, r4
   1bcc4:	mov	r1, #0
   1bcc8:	mov	r2, #220	; 0xdc
   1bccc:	bl	148dc <memset@plt>
   1bcd0:	add	r0, sp, #40	; 0x28
   1bcd4:	mov	r1, #0
   1bcd8:	mov	r2, #220	; 0xdc
   1bcdc:	bl	148dc <memset@plt>
   1bce0:	ldr	r8, [fp, #8]
   1bce4:	mov	r0, r8
   1bce8:	mov	r1, r4
   1bcec:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1bcf0:	ldr	r0, [fp, #12]
   1bcf4:	movw	r1, #57555	; 0xe0d3
   1bcf8:	movt	r1, #4
   1bcfc:	movw	r4, #27658	; 0x6c0a
   1bd00:	movt	r4, #4
   1bd04:	cmp	r0, #0
   1bd08:	moveq	r4, r1
   1bd0c:	ldr	r9, [r8, #20]
   1bd10:	cmp	r9, #0
   1bd14:	beq	1be48 <__flatcc_fb_gen_c_builder@@Base+0x2570>
   1bd18:	sub	r5, fp, #40	; 0x28
   1bd1c:	sub	r6, fp, #36	; 0x24
   1bd20:	b	1bd74 <__flatcc_fb_gen_c_builder@@Base+0x249c>
   1bd24:	ldr	r0, [r7, #204]	; 0xcc
   1bd28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd30:	stm	sp, {r7, sl}
   1bd34:	ldr	r3, [sp, #32]
   1bd38:	str	r3, [sp, #8]
   1bd3c:	ldr	r3, [sp, #36]	; 0x24
   1bd40:	str	r3, [sp, #12]
   1bd44:	add	r3, sp, #264	; 0x108
   1bd48:	str	r3, [sp, #16]
   1bd4c:	str	r1, [sp, #20]
   1bd50:	str	r2, [sp, #24]
   1bd54:	movw	r1, #27940	; 0x6d24
   1bd58:	movt	r1, #4
   1bd5c:	mov	r2, r7
   1bd60:	mov	r3, r4
   1bd64:	bl	148c4 <fprintf@plt>
   1bd68:	ldr	r9, [r9]
   1bd6c:	cmp	r9, #0
   1bd70:	beq	1be48 <__flatcc_fb_gen_c_builder@@Base+0x2570>
   1bd74:	mov	r0, r9
   1bd78:	mov	r1, r5
   1bd7c:	mov	r2, r6
   1bd80:	bl	1a86c <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1bd84:	ldrh	r0, [r9, #24]
   1bd88:	cmp	r0, #0
   1bd8c:	beq	1bd68 <__flatcc_fb_gen_c_builder@@Base+0x2490>
   1bd90:	cmp	r0, #10
   1bd94:	beq	1bd24 <__flatcc_fb_gen_c_builder@@Base+0x244c>
   1bd98:	cmp	r0, #14
   1bd9c:	add	r8, sp, #40	; 0x28
   1bda0:	bne	1be50 <__flatcc_fb_gen_c_builder@@Base+0x2578>
   1bda4:	ldr	r0, [r9, #16]
   1bda8:	mov	r1, r8
   1bdac:	bl	19cfc <__flatcc_fb_gen_c_builder@@Base+0x424>
   1bdb0:	ldr	r0, [r9, #16]
   1bdb4:	ldrh	r0, [r0, #8]
   1bdb8:	cmp	r0, #1
   1bdbc:	beq	1be0c <__flatcc_fb_gen_c_builder@@Base+0x2534>
   1bdc0:	cmp	r0, #0
   1bdc4:	bne	1bea0 <__flatcc_fb_gen_c_builder@@Base+0x25c8>
   1bdc8:	ldr	r0, [r7, #204]	; 0xcc
   1bdcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bdd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bdd4:	stm	sp, {r7, sl}
   1bdd8:	ldr	r3, [sp, #32]
   1bddc:	str	r3, [sp, #8]
   1bde0:	ldr	r3, [sp, #36]	; 0x24
   1bde4:	str	r3, [sp, #12]
   1bde8:	add	r3, sp, #264	; 0x108
   1bdec:	str	r3, [sp, #16]
   1bdf0:	str	r1, [sp, #20]
   1bdf4:	str	r2, [sp, #24]
   1bdf8:	add	r1, sp, #40	; 0x28
   1bdfc:	str	r1, [sp, #28]
   1be00:	movw	r1, #27671	; 0x6c17
   1be04:	movt	r1, #4
   1be08:	b	1bd5c <__flatcc_fb_gen_c_builder@@Base+0x2484>
   1be0c:	ldr	r0, [r7, #204]	; 0xcc
   1be10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1be14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be18:	stm	sp, {r7, sl}
   1be1c:	ldr	r3, [sp, #32]
   1be20:	str	r3, [sp, #8]
   1be24:	ldr	r3, [sp, #36]	; 0x24
   1be28:	str	r3, [sp, #12]
   1be2c:	add	r3, sp, #264	; 0x108
   1be30:	str	r3, [sp, #16]
   1be34:	add	r3, sp, #20
   1be38:	stm	r3, {r1, r2, r8}
   1be3c:	movw	r1, #27730	; 0x6c52
   1be40:	movt	r1, #4
   1be44:	b	1bd5c <__flatcc_fb_gen_c_builder@@Base+0x2484>
   1be48:	sub	sp, fp, #28
   1be4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be50:	movw	r0, #4272	; 0x10b0
   1be54:	movt	r0, #6
   1be58:	ldr	r0, [r0]
   1be5c:	movw	r1, #27996	; 0x6d5c
   1be60:	movt	r1, #4
   1be64:	str	r1, [sp]
   1be68:	movw	r1, #21375	; 0x537f
   1be6c:	movt	r1, #3
   1be70:	movw	r4, #24380	; 0x5f3c
   1be74:	movt	r4, #4
   1be78:	mov	r2, r4
   1be7c:	movw	r3, #1368	; 0x558
   1be80:	bl	148c4 <fprintf@plt>
   1be84:	movw	r0, #25261	; 0x62ad
   1be88:	movt	r0, #4
   1be8c:	movw	r3, #27844	; 0x6cc4
   1be90:	movt	r3, #4
   1be94:	mov	r1, r4
   1be98:	movw	r2, #1368	; 0x558
   1be9c:	bl	14984 <__assert_fail@plt>
   1bea0:	movw	r0, #4272	; 0x10b0
   1bea4:	movt	r0, #6
   1bea8:	ldr	r0, [r0]
   1beac:	movw	r1, #27790	; 0x6c8e
   1beb0:	movt	r1, #4
   1beb4:	str	r1, [sp]
   1beb8:	movw	r1, #21375	; 0x537f
   1bebc:	movt	r1, #3
   1bec0:	movw	r4, #24380	; 0x5f3c
   1bec4:	movt	r4, #4
   1bec8:	mov	r2, r4
   1becc:	movw	r3, #1358	; 0x54e
   1bed0:	bl	148c4 <fprintf@plt>
   1bed4:	movw	r0, #25261	; 0x62ad
   1bed8:	movt	r0, #4
   1bedc:	movw	r3, #27844	; 0x6cc4
   1bee0:	movt	r3, #4
   1bee4:	mov	r1, r4
   1bee8:	movw	r2, #1358	; 0x54e
   1beec:	bl	14984 <__assert_fail@plt>
   1bef0:	push	{r4, sl, fp, lr}
   1bef4:	add	fp, sp, #8
   1bef8:	sub	sp, sp, #8
   1befc:	sub	r0, r0, #1
   1bf00:	cmp	r0, #9
   1bf04:	movwcc	r1, #28484	; 0x6f44
   1bf08:	movtcc	r1, #4
   1bf0c:	ldrcc	r0, [r1, r0, lsl #2]
   1bf10:	subcc	sp, fp, #8
   1bf14:	popcc	{r4, sl, fp, pc}
   1bf18:	movw	r0, #4272	; 0x10b0
   1bf1c:	movt	r0, #6
   1bf20:	ldr	r0, [r0]
   1bf24:	movw	r1, #47968	; 0xbb60
   1bf28:	movt	r1, #3
   1bf2c:	str	r1, [sp]
   1bf30:	movw	r1, #21375	; 0x537f
   1bf34:	movt	r1, #3
   1bf38:	movw	r4, #47895	; 0xbb17
   1bf3c:	movt	r4, #3
   1bf40:	mov	r2, r4
   1bf44:	mov	r3, #226	; 0xe2
   1bf48:	bl	148c4 <fprintf@plt>
   1bf4c:	movw	r0, #25261	; 0x62ad
   1bf50:	movt	r0, #4
   1bf54:	movw	r3, #48219	; 0xbc5b
   1bf58:	movt	r3, #3
   1bf5c:	mov	r1, r4
   1bf60:	mov	r2, #226	; 0xe2
   1bf64:	bl	14984 <__assert_fail@plt>

0001bf68 <__flatcc_fb_gen_c_verifier@@Base>:
   1bf68:	push	{r4, sl, fp, lr}
   1bf6c:	add	fp, sp, #8
   1bf70:	mov	r4, r0
   1bf74:	bl	1bfa8 <__flatcc_fb_gen_c_verifier@@Base+0x40>
   1bf78:	mov	r0, r4
   1bf7c:	bl	1c078 <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1bf80:	mov	r0, r4
   1bf84:	bl	1c104 <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1bf88:	mov	r0, r4
   1bf8c:	bl	1c144 <__flatcc_fb_gen_c_verifier@@Base+0x1dc>
   1bf90:	mov	r0, r4
   1bf94:	bl	1c184 <__flatcc_fb_gen_c_verifier@@Base+0x21c>
   1bf98:	mov	r0, r4
   1bf9c:	bl	1c1d0 <__flatcc_fb_gen_c_verifier@@Base+0x268>
   1bfa0:	mov	r0, #0
   1bfa4:	pop	{r4, sl, fp, pc}
   1bfa8:	push	{r4, sl, fp, lr}
   1bfac:	add	fp, sp, #8
   1bfb0:	mov	r4, r0
   1bfb4:	ldr	r0, [r0, #204]	; 0xcc
   1bfb8:	ldr	r1, [r4, #208]	; 0xd0
   1bfbc:	ldr	r2, [r1, #164]	; 0xa4
   1bfc0:	movw	r1, #28520	; 0x6f68
   1bfc4:	movt	r1, #4
   1bfc8:	mov	r3, r2
   1bfcc:	bl	148c4 <fprintf@plt>
   1bfd0:	ldr	r3, [r4, #204]	; 0xcc
   1bfd4:	movw	r0, #21078	; 0x5256
   1bfd8:	movt	r0, #3
   1bfdc:	mov	r1, #81	; 0x51
   1bfe0:	mov	r2, #1
   1bfe4:	bl	14858 <fwrite@plt>
   1bfe8:	ldr	r0, [r4, #204]	; 0xcc
   1bfec:	ldr	r1, [r4, #208]	; 0xd0
   1bff0:	ldr	r2, [r1, #164]	; 0xa4
   1bff4:	movw	r1, #24187	; 0x5e7b
   1bff8:	movt	r1, #4
   1bffc:	bl	148c4 <fprintf@plt>
   1c000:	ldr	r0, [r4, #204]	; 0xcc
   1c004:	ldr	r1, [r4, #208]	; 0xd0
   1c008:	ldr	r2, [r1, #160]	; 0xa0
   1c00c:	movw	r1, #24208	; 0x5e90
   1c010:	movt	r1, #4
   1c014:	bl	148c4 <fprintf@plt>
   1c018:	ldr	r3, [r4, #204]	; 0xcc
   1c01c:	movw	r0, #46174	; 0xb45e
   1c020:	movt	r0, #3
   1c024:	mov	r1, #7
   1c028:	mov	r2, #1
   1c02c:	bl	14858 <fwrite@plt>
   1c030:	ldr	r3, [r4, #204]	; 0xcc
   1c034:	movw	r0, #28565	; 0x6f95
   1c038:	movt	r0, #4
   1c03c:	mov	r1, #36	; 0x24
   1c040:	mov	r2, #1
   1c044:	bl	14858 <fwrite@plt>
   1c048:	movw	r1, #20980	; 0x51f4
   1c04c:	movt	r1, #3
   1c050:	movw	r2, #28602	; 0x6fba
   1c054:	movt	r2, #4
   1c058:	mov	r0, r4
   1c05c:	bl	159b4 <__flatcc_fb_gen_c_includes@@Base>
   1c060:	mov	r0, r4
   1c064:	bl	1c1fc <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1c068:	ldr	r1, [r4, #204]	; 0xcc
   1c06c:	mov	r0, #10
   1c070:	pop	{r4, sl, fp, lr}
   1c074:	b	14924 <fputc@plt>
   1c078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c07c:	add	fp, sp, #24
   1c080:	sub	sp, sp, #224	; 0xe0
   1c084:	mov	r4, r0
   1c088:	mov	r0, sp
   1c08c:	mov	r1, #0
   1c090:	mov	r2, #220	; 0xdc
   1c094:	bl	148dc <memset@plt>
   1c098:	ldr	r0, [r4, #208]	; 0xd0
   1c09c:	ldr	r5, [r0, #40]	; 0x28
   1c0a0:	cmp	r5, #0
   1c0a4:	beq	1c0f0 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   1c0a8:	mov	r6, sp
   1c0ac:	movw	r7, #28614	; 0x6fc6
   1c0b0:	movt	r7, #4
   1c0b4:	b	1c0c4 <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   1c0b8:	ldr	r5, [r5]
   1c0bc:	cmp	r5, #0
   1c0c0:	beq	1c0f0 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   1c0c4:	ldrh	r0, [r5, #8]
   1c0c8:	cmp	r0, #0
   1c0cc:	bne	1c0b8 <__flatcc_fb_gen_c_verifier@@Base+0x150>
   1c0d0:	mov	r0, r5
   1c0d4:	mov	r1, r6
   1c0d8:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c0dc:	ldr	r0, [r4, #204]	; 0xcc
   1c0e0:	mov	r1, r7
   1c0e4:	mov	r2, r6
   1c0e8:	bl	148c4 <fprintf@plt>
   1c0ec:	b	1c0b8 <__flatcc_fb_gen_c_verifier@@Base+0x150>
   1c0f0:	ldr	r1, [r4, #204]	; 0xcc
   1c0f4:	mov	r0, #10
   1c0f8:	bl	14924 <fputc@plt>
   1c0fc:	sub	sp, fp, #24
   1c100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c104:	push	{r4, r5, fp, lr}
   1c108:	add	fp, sp, #8
   1c10c:	mov	r4, r0
   1c110:	ldr	r0, [r0, #208]	; 0xd0
   1c114:	ldr	r5, [r0, #40]	; 0x28
   1c118:	cmp	r5, #0
   1c11c:	beq	1c140 <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   1c120:	ldrh	r0, [r5, #8]
   1c124:	cmp	r0, #4
   1c128:	moveq	r0, r4
   1c12c:	moveq	r1, r5
   1c130:	bleq	1c234 <__flatcc_fb_gen_c_verifier@@Base+0x2cc>
   1c134:	ldr	r5, [r5]
   1c138:	cmp	r5, #0
   1c13c:	bne	1c120 <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   1c140:	pop	{r4, r5, fp, pc}
   1c144:	push	{r4, r5, fp, lr}
   1c148:	add	fp, sp, #8
   1c14c:	mov	r4, r0
   1c150:	ldr	r0, [r0, #208]	; 0xd0
   1c154:	ldr	r5, [r0, #40]	; 0x28
   1c158:	cmp	r5, #0
   1c15c:	beq	1c180 <__flatcc_fb_gen_c_verifier@@Base+0x218>
   1c160:	ldrh	r0, [r5, #8]
   1c164:	cmp	r0, #1
   1c168:	moveq	r0, r4
   1c16c:	moveq	r1, r5
   1c170:	bleq	1c474 <__flatcc_fb_gen_c_verifier@@Base+0x50c>
   1c174:	ldr	r5, [r5]
   1c178:	cmp	r5, #0
   1c17c:	bne	1c160 <__flatcc_fb_gen_c_verifier@@Base+0x1f8>
   1c180:	pop	{r4, r5, fp, pc}
   1c184:	push	{r4, r5, fp, lr}
   1c188:	add	fp, sp, #8
   1c18c:	mov	r4, r0
   1c190:	ldr	r0, [r0, #208]	; 0xd0
   1c194:	ldr	r5, [r0, #40]	; 0x28
   1c198:	cmp	r5, #0
   1c19c:	bne	1c1b0 <__flatcc_fb_gen_c_verifier@@Base+0x248>
   1c1a0:	b	1c1cc <__flatcc_fb_gen_c_verifier@@Base+0x264>
   1c1a4:	ldr	r5, [r5]
   1c1a8:	cmp	r5, #0
   1c1ac:	beq	1c1cc <__flatcc_fb_gen_c_verifier@@Base+0x264>
   1c1b0:	ldrh	r0, [r5, #8]
   1c1b4:	cmp	r0, #0
   1c1b8:	bne	1c1a4 <__flatcc_fb_gen_c_verifier@@Base+0x23c>
   1c1bc:	mov	r0, r4
   1c1c0:	mov	r1, r5
   1c1c4:	bl	1c54c <__flatcc_fb_gen_c_verifier@@Base+0x5e4>
   1c1c8:	b	1c1a4 <__flatcc_fb_gen_c_verifier@@Base+0x23c>
   1c1cc:	pop	{r4, r5, fp, pc}
   1c1d0:	push	{r4, sl, fp, lr}
   1c1d4:	add	fp, sp, #8
   1c1d8:	mov	r4, r0
   1c1dc:	bl	1ca80 <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1c1e0:	ldr	r0, [r4, #204]	; 0xcc
   1c1e4:	ldr	r1, [r4, #208]	; 0xd0
   1c1e8:	ldr	r2, [r1, #164]	; 0xa4
   1c1ec:	movw	r1, #31623	; 0x7b87
   1c1f0:	movt	r1, #4
   1c1f4:	pop	{r4, sl, fp, lr}
   1c1f8:	b	148c4 <fprintf@plt>
   1c1fc:	ldr	r1, [r0, #212]	; 0xd4
   1c200:	ldr	r1, [r1, #140]	; 0x8c
   1c204:	cmp	r1, #0
   1c208:	bxeq	lr
   1c20c:	ldr	r3, [r0, #204]	; 0xcc
   1c210:	movw	r0, #21554	; 0x5432
   1c214:	movt	r0, #3
   1c218:	mov	r1, #36	; 0x24
   1c21c:	mov	r2, #1
   1c220:	b	14858 <fwrite@plt>
   1c224:	mov	r2, r1
   1c228:	mov	r1, r0
   1c22c:	ldr	r0, [r0, #12]
   1c230:	b	15b9c <__flatcc_fb_scoped_symbol_name@@Base>
   1c234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c238:	add	fp, sp, #28
   1c23c:	sub	sp, sp, #484	; 0x1e4
   1c240:	mov	r5, r1
   1c244:	mov	r9, r0
   1c248:	add	r6, sp, #256	; 0x100
   1c24c:	mov	r0, r6
   1c250:	mov	r1, #0
   1c254:	mov	r2, #220	; 0xdc
   1c258:	bl	148dc <memset@plt>
   1c25c:	add	r0, sp, #32
   1c260:	mov	r1, #0
   1c264:	mov	r2, #220	; 0xdc
   1c268:	bl	148dc <memset@plt>
   1c26c:	mov	r0, r5
   1c270:	mov	r1, r6
   1c274:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c278:	ldr	r0, [r9, #204]	; 0xcc
   1c27c:	movw	r1, #28683	; 0x700b
   1c280:	movt	r1, #4
   1c284:	mov	r2, r6
   1c288:	bl	148c4 <fprintf@plt>
   1c28c:	ldr	r5, [r5, #20]
   1c290:	cmp	r5, #0
   1c294:	beq	1c398 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   1c298:	add	r8, sp, #28
   1c29c:	add	sl, sp, #24
   1c2a0:	movw	r4, #29135	; 0x71cf
   1c2a4:	movt	r4, #4
   1c2a8:	add	r6, sp, #32
   1c2ac:	b	1c2d8 <__flatcc_fb_gen_c_verifier@@Base+0x370>
   1c2b0:	ldr	r2, [r5, #48]	; 0x30
   1c2b4:	ldr	r0, [r9, #204]	; 0xcc
   1c2b8:	ldr	r3, [sp, #28]
   1c2bc:	ldr	r1, [sp, #24]
   1c2c0:	str	r1, [sp]
   1c2c4:	mov	r1, r4
   1c2c8:	bl	148c4 <fprintf@plt>
   1c2cc:	ldr	r5, [r5]
   1c2d0:	cmp	r5, #0
   1c2d4:	beq	1c398 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   1c2d8:	mov	r0, r5
   1c2dc:	mov	r1, r8
   1c2e0:	mov	r2, sl
   1c2e4:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x4f0>
   1c2e8:	ldrh	r0, [r5, #24]
   1c2ec:	cmp	r0, #0
   1c2f0:	beq	1c2cc <__flatcc_fb_gen_c_verifier@@Base+0x364>
   1c2f4:	cmp	r0, #10
   1c2f8:	beq	1c2b0 <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1c2fc:	cmp	r0, #14
   1c300:	bne	1c3b8 <__flatcc_fb_gen_c_verifier@@Base+0x450>
   1c304:	ldr	r0, [r5, #16]
   1c308:	mov	r1, r6
   1c30c:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c310:	ldr	r1, [r5, #16]
   1c314:	ldrh	r0, [r1, #8]
   1c318:	cmp	r0, #1
   1c31c:	beq	1c34c <__flatcc_fb_gen_c_verifier@@Base+0x3e4>
   1c320:	cmp	r0, #0
   1c324:	bne	1c408 <__flatcc_fb_gen_c_verifier@@Base+0x4a0>
   1c328:	ldr	r2, [r5, #48]	; 0x30
   1c32c:	ldr	r0, [r9, #204]	; 0xcc
   1c330:	ldr	r1, [sp, #28]
   1c334:	ldr	r3, [sp, #24]
   1c338:	stm	sp, {r1, r3}
   1c33c:	movw	r1, #28779	; 0x706b
   1c340:	movt	r1, #4
   1c344:	mov	r3, r6
   1c348:	b	1c2c8 <__flatcc_fb_gen_c_verifier@@Base+0x360>
   1c34c:	ldr	r2, [r5, #48]	; 0x30
   1c350:	ldr	r0, [r9, #204]	; 0xcc
   1c354:	ldr	r3, [r1, #112]	; 0x70
   1c358:	ldr	r7, [r1, #116]	; 0x74
   1c35c:	ldrh	r1, [r1, #104]	; 0x68
   1c360:	mov	lr, r6
   1c364:	ldr	r6, [sp, #28]
   1c368:	mov	ip, r4
   1c36c:	ldr	r4, [sp, #24]
   1c370:	stm	sp, {r3, r7}
   1c374:	str	r1, [sp, #8]
   1c378:	str	r6, [sp, #12]
   1c37c:	mov	r6, lr
   1c380:	str	r4, [sp, #16]
   1c384:	mov	r4, ip
   1c388:	movw	r1, #28859	; 0x70bb
   1c38c:	movt	r1, #4
   1c390:	bl	148c4 <fprintf@plt>
   1c394:	b	1c2cc <__flatcc_fb_gen_c_verifier@@Base+0x364>
   1c398:	ldr	r3, [r9, #204]	; 0xcc
   1c39c:	movw	r0, #29250	; 0x7242
   1c3a0:	movt	r0, #4
   1c3a4:	mov	r1, #47	; 0x2f
   1c3a8:	mov	r2, #1
   1c3ac:	bl	14858 <fwrite@plt>
   1c3b0:	sub	sp, fp, #28
   1c3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3b8:	movw	r0, #4272	; 0x10b0
   1c3bc:	movt	r0, #6
   1c3c0:	ldr	r0, [r0]
   1c3c4:	movw	r1, #29199	; 0x720f
   1c3c8:	movt	r1, #4
   1c3cc:	str	r1, [sp]
   1c3d0:	movw	r1, #21375	; 0x537f
   1c3d4:	movt	r1, #3
   1c3d8:	movw	r4, #28933	; 0x7105
   1c3dc:	movt	r4, #4
   1c3e0:	mov	r2, r4
   1c3e4:	mov	r3, #83	; 0x53
   1c3e8:	bl	148c4 <fprintf@plt>
   1c3ec:	movw	r0, #25261	; 0x62ad
   1c3f0:	movt	r0, #4
   1c3f4:	movw	r3, #29075	; 0x7193
   1c3f8:	movt	r3, #4
   1c3fc:	mov	r1, r4
   1c400:	mov	r2, #83	; 0x53
   1c404:	bl	14984 <__assert_fail@plt>
   1c408:	movw	r0, #4272	; 0x10b0
   1c40c:	movt	r0, #6
   1c410:	ldr	r0, [r0]
   1c414:	movw	r1, #29015	; 0x7157
   1c418:	movt	r1, #4
   1c41c:	str	r1, [sp]
   1c420:	movw	r1, #21375	; 0x537f
   1c424:	movt	r1, #3
   1c428:	movw	r4, #28933	; 0x7105
   1c42c:	movt	r4, #4
   1c430:	mov	r2, r4
   1c434:	mov	r3, #74	; 0x4a
   1c438:	bl	148c4 <fprintf@plt>
   1c43c:	movw	r0, #25261	; 0x62ad
   1c440:	movt	r0, #4
   1c444:	movw	r3, #29075	; 0x7193
   1c448:	movt	r3, #4
   1c44c:	mov	r1, r4
   1c450:	mov	r2, #74	; 0x4a
   1c454:	bl	14984 <__assert_fail@plt>
   1c458:	ldr	r0, [r0, #4]
   1c45c:	b	1c460 <__flatcc_fb_gen_c_verifier@@Base+0x4f8>
   1c460:	ldr	r3, [r0, #4]
   1c464:	str	r3, [r1]
   1c468:	ldr	r0, [r0]
   1c46c:	str	r0, [r2]
   1c470:	bx	lr
   1c474:	push	{r4, r5, r6, sl, fp, lr}
   1c478:	add	fp, sp, #16
   1c47c:	sub	sp, sp, #240	; 0xf0
   1c480:	mov	r5, r1
   1c484:	mov	r6, r0
   1c488:	add	r4, sp, #16
   1c48c:	mov	r0, r4
   1c490:	mov	r1, #0
   1c494:	mov	r2, #220	; 0xdc
   1c498:	bl	148dc <memset@plt>
   1c49c:	mov	r0, r5
   1c4a0:	mov	r1, r4
   1c4a4:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c4a8:	ldr	r0, [r6, #204]	; 0xcc
   1c4ac:	ldrd	r2, [r5, #112]	; 0x70
   1c4b0:	ldrh	r1, [r5, #104]	; 0x68
   1c4b4:	stm	sp, {r2, r3}
   1c4b8:	str	r1, [sp, #8]
   1c4bc:	movw	r1, #29298	; 0x7272
   1c4c0:	movt	r1, #4
   1c4c4:	mov	r2, r4
   1c4c8:	mov	r3, r4
   1c4cc:	bl	148c4 <fprintf@plt>
   1c4d0:	ldr	r0, [r6, #204]	; 0xcc
   1c4d4:	ldrd	r2, [r5, #112]	; 0x70
   1c4d8:	ldrh	r1, [r5, #104]	; 0x68
   1c4dc:	stm	sp, {r2, r3}
   1c4e0:	str	r1, [sp, #8]
   1c4e4:	movw	r1, #29451	; 0x730b
   1c4e8:	movt	r1, #4
   1c4ec:	mov	r2, r4
   1c4f0:	mov	r3, r4
   1c4f4:	bl	148c4 <fprintf@plt>
   1c4f8:	ldr	r0, [r6, #204]	; 0xcc
   1c4fc:	ldrd	r2, [r5, #112]	; 0x70
   1c500:	ldrh	r1, [r5, #104]	; 0x68
   1c504:	stm	sp, {r2, r3}
   1c508:	str	r1, [sp, #8]
   1c50c:	movw	r1, #29615	; 0x73af
   1c510:	movt	r1, #4
   1c514:	mov	r2, r4
   1c518:	mov	r3, r6
   1c51c:	bl	148c4 <fprintf@plt>
   1c520:	ldr	r0, [r6, #204]	; 0xcc
   1c524:	ldrd	r2, [r5, #112]	; 0x70
   1c528:	ldrh	r1, [r5, #104]	; 0x68
   1c52c:	stm	sp, {r2, r3}
   1c530:	str	r1, [sp, #8]
   1c534:	movw	r1, #29798	; 0x7466
   1c538:	movt	r1, #4
   1c53c:	mov	r2, r4
   1c540:	bl	148c4 <fprintf@plt>
   1c544:	sub	sp, fp, #16
   1c548:	pop	{r4, r5, r6, sl, fp, pc}
   1c54c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c550:	add	fp, sp, #28
   1c554:	sub	sp, sp, #484	; 0x1e4
   1c558:	mov	r7, r1
   1c55c:	mov	r4, r0
   1c560:	add	r5, sp, #256	; 0x100
   1c564:	mov	r0, r5
   1c568:	mov	r1, #0
   1c56c:	mov	r2, #220	; 0xdc
   1c570:	bl	148dc <memset@plt>
   1c574:	add	r0, sp, #32
   1c578:	mov	r1, #0
   1c57c:	mov	r2, #220	; 0xdc
   1c580:	bl	148dc <memset@plt>
   1c584:	mov	r0, r7
   1c588:	mov	r1, r5
   1c58c:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c590:	ldr	r0, [r4, #204]	; 0xcc
   1c594:	movw	r1, #29974	; 0x7516
   1c598:	movt	r1, #4
   1c59c:	mov	r2, r5
   1c5a0:	bl	148c4 <fprintf@plt>
   1c5a4:	ldr	sl, [r7, #20]
   1c5a8:	cmp	sl, #0
   1c5ac:	beq	1c938 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
   1c5b0:	mov	r0, #1
   1c5b4:	movw	r7, #33723	; 0x83bb
   1c5b8:	movt	r7, #4
   1c5bc:	add	r5, sp, #32
   1c5c0:	b	1c604 <__flatcc_fb_gen_c_verifier@@Base+0x69c>
   1c5c4:	ldrd	r2, [r6]
   1c5c8:	ldr	r0, [r4, #204]	; 0xcc
   1c5cc:	str	r8, [sp]
   1c5d0:	movw	r1, #30388	; 0x76b4
   1c5d4:	movt	r1, #4
   1c5d8:	bl	148c4 <fprintf@plt>
   1c5dc:	ldr	r0, [r4, #204]	; 0xcc
   1c5e0:	ldr	r1, [sl, #4]
   1c5e4:	ldr	r3, [r1]
   1c5e8:	ldr	r2, [r1, #4]
   1c5ec:	mov	r1, r7
   1c5f0:	bl	148c4 <fprintf@plt>
   1c5f4:	mov	r0, #0
   1c5f8:	ldr	sl, [sl]
   1c5fc:	cmp	sl, #0
   1c600:	beq	1c918 <__flatcc_fb_gen_c_verifier@@Base+0x9b0>
   1c604:	ldrb	r1, [sl, #72]	; 0x48
   1c608:	tst	r1, #4
   1c60c:	bne	1c5f8 <__flatcc_fb_gen_c_verifier@@Base+0x690>
   1c610:	ldr	r3, [r4, #204]	; 0xcc
   1c614:	cmp	r0, #0
   1c618:	beq	1c62c <__flatcc_fb_gen_c_verifier@@Base+0x6c4>
   1c61c:	movw	r0, #30044	; 0x755c
   1c620:	movt	r0, #4
   1c624:	mov	r1, #28
   1c628:	b	1c638 <__flatcc_fb_gen_c_verifier@@Base+0x6d0>
   1c62c:	movw	r0, #30073	; 0x7579
   1c630:	movt	r0, #4
   1c634:	mov	r1, #30
   1c638:	mov	r2, #1
   1c63c:	bl	14858 <fwrite@plt>
   1c640:	ldrh	r0, [sl, #72]	; 0x48
   1c644:	ubfx	r8, r0, #8, #1
   1c648:	ldrh	r0, [sl, #24]
   1c64c:	sub	r0, r0, #7
   1c650:	cmp	r0, #8
   1c654:	bhi	1c5dc <__flatcc_fb_gen_c_verifier@@Base+0x674>
   1c658:	add	r9, sl, #88	; 0x58
   1c65c:	add	r6, sl, #96	; 0x60
   1c660:	add	r1, pc, #0
   1c664:	ldr	pc, [r1, r0, lsl #2]
   1c668:	andeq	ip, r1, ip, lsl #13
   1c66c:	andeq	ip, r1, r4, lsl #15
   1c670:	andeq	ip, r1, r4, asr #11
   1c674:	andeq	ip, r1, ip, lsr #15
   1c678:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c67c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c680:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c684:	andeq	ip, r1, r4, asr #15
   1c688:	andeq	ip, r1, r4, ror #13
   1c68c:	ldr	r0, [sl, #104]	; 0x68
   1c690:	cmp	r0, #0
   1c694:	beq	1c828 <__flatcc_fb_gen_c_verifier@@Base+0x8c0>
   1c698:	mov	r1, r5
   1c69c:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c6a0:	ldrd	r2, [r6]
   1c6a4:	ldr	r0, [r4, #204]	; 0xcc
   1c6a8:	ldr	r1, [sl, #104]	; 0x68
   1c6ac:	ldrh	r1, [r1, #8]
   1c6b0:	cmp	r1, #0
   1c6b4:	beq	1c900 <__flatcc_fb_gen_c_verifier@@Base+0x998>
   1c6b8:	ldrd	r6, [r9]
   1c6bc:	ldrh	r1, [sl, #74]	; 0x4a
   1c6c0:	str	r6, [sp, #8]
   1c6c4:	str	r7, [sp, #12]
   1c6c8:	movw	r7, #33723	; 0x83bb
   1c6cc:	movt	r7, #4
   1c6d0:	str	r1, [sp, #16]
   1c6d4:	str	r8, [sp]
   1c6d8:	movw	r1, #30217	; 0x7609
   1c6dc:	movt	r1, #4
   1c6e0:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c6e4:	ldr	r0, [sl, #16]
   1c6e8:	mov	r1, r5
   1c6ec:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c6f0:	ldr	r0, [sl, #16]
   1c6f4:	ldrh	r0, [r0, #8]
   1c6f8:	cmp	r0, #4
   1c6fc:	bhi	1c9e0 <__flatcc_fb_gen_c_verifier@@Base+0xa78>
   1c700:	add	r1, pc, #0
   1c704:	ldr	pc, [r1, r0, lsl #2]
   1c708:	muleq	r1, r0, r8
   1c70c:	andeq	ip, r1, ip, lsl r7
   1c710:	andeq	ip, r1, r0, ror #19
   1c714:	andeq	ip, r1, ip, lsl r7
   1c718:	andeq	ip, r1, ip, lsr #17
   1c71c:	ldm	r9, {r5, r7}
   1c720:	orrs	r3, r5, r7
   1c724:	mov	r2, r5
   1c728:	movweq	r2, #1
   1c72c:	movne	r3, r7
   1c730:	mvn	r0, #0
   1c734:	mov	r1, #0
   1c738:	bl	33d30 <fb_value_set_visit@@Base+0x6c0>
   1c73c:	ldm	r6, {r6, r9}
   1c740:	ldr	r2, [r4, #204]	; 0xcc
   1c744:	ldrh	r3, [sl, #74]	; 0x4a
   1c748:	str	r5, [sp, #8]
   1c74c:	add	r5, sp, #32
   1c750:	str	r7, [sp, #12]
   1c754:	movw	r7, #33723	; 0x83bb
   1c758:	movt	r7, #4
   1c75c:	str	r3, [sp, #16]
   1c760:	str	r8, [sp]
   1c764:	str	r0, [sp, #24]
   1c768:	str	r1, [sp, #28]
   1c76c:	mov	r0, r2
   1c770:	movw	r1, #30281	; 0x7649
   1c774:	movt	r1, #4
   1c778:	mov	r2, r6
   1c77c:	mov	r3, r9
   1c780:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c784:	ldrd	r2, [r6]
   1c788:	ldr	r0, [r4, #204]	; 0xcc
   1c78c:	ldr	r6, [r9]
   1c790:	ldr	r1, [r9, #4]
   1c794:	ldrh	r7, [sl, #74]	; 0x4a
   1c798:	str	r6, [sp]
   1c79c:	stmib	sp, {r1, r7}
   1c7a0:	movw	r7, #33723	; 0x83bb
   1c7a4:	movt	r7, #4
   1c7a8:	b	1c81c <__flatcc_fb_gen_c_verifier@@Base+0x8b4>
   1c7ac:	ldrd	r2, [r6]
   1c7b0:	ldr	r0, [r4, #204]	; 0xcc
   1c7b4:	str	r8, [sp]
   1c7b8:	movw	r1, #30347	; 0x768b
   1c7bc:	movt	r1, #4
   1c7c0:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c7c4:	ldr	r0, [sl, #16]
   1c7c8:	mov	r1, r5
   1c7cc:	bl	1c224 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1c7d0:	ldr	r0, [sl, #16]
   1c7d4:	ldrh	r0, [r0, #8]
   1c7d8:	cmp	r0, #4
   1c7dc:	bhi	1ca30 <__flatcc_fb_gen_c_verifier@@Base+0xac8>
   1c7e0:	add	r1, pc, #0
   1c7e4:	ldr	pc, [r1, r0, lsl #2]
   1c7e8:	andeq	ip, r1, r8, asr #17
   1c7ec:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c7f0:	andeq	ip, r1, r0, lsr sl
   1c7f4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c7f8:	andeq	ip, r1, r4, ror #17
   1c7fc:	ldrd	r2, [r6]
   1c800:	ldr	r0, [r4, #204]	; 0xcc
   1c804:	ldrd	r6, [r9]
   1c808:	ldrh	r1, [sl, #74]	; 0x4a
   1c80c:	stm	sp, {r6, r7}
   1c810:	movw	r7, #33723	; 0x83bb
   1c814:	movt	r7, #4
   1c818:	str	r1, [sp, #8]
   1c81c:	movw	r1, #30104	; 0x7598
   1c820:	movt	r1, #4
   1c824:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c828:	ldm	r9, {r7, r9}
   1c82c:	orrs	r3, r7, r9
   1c830:	mov	r2, r7
   1c834:	movweq	r2, #1
   1c838:	movne	r3, r9
   1c83c:	mvn	r0, #0
   1c840:	mov	r1, #0
   1c844:	bl	33d30 <fb_value_set_visit@@Base+0x6c0>
   1c848:	ldr	r3, [r6, #4]
   1c84c:	ldr	r6, [r6]
   1c850:	ldr	r2, [r4, #204]	; 0xcc
   1c854:	ldrh	r5, [sl, #74]	; 0x4a
   1c858:	str	r7, [sp, #8]
   1c85c:	movw	r7, #33723	; 0x83bb
   1c860:	movt	r7, #4
   1c864:	str	r9, [sp, #12]
   1c868:	str	r5, [sp, #16]
   1c86c:	add	r5, sp, #32
   1c870:	str	r8, [sp]
   1c874:	str	r0, [sp, #24]
   1c878:	str	r1, [sp, #28]
   1c87c:	mov	r0, r2
   1c880:	movw	r1, #30281	; 0x7649
   1c884:	movt	r1, #4
   1c888:	mov	r2, r6
   1c88c:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c890:	ldrd	r2, [r6]
   1c894:	ldr	r0, [r4, #204]	; 0xcc
   1c898:	str	r8, [sp]
   1c89c:	str	r5, [sp, #4]
   1c8a0:	movw	r1, #30674	; 0x77d2
   1c8a4:	movt	r1, #4
   1c8a8:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c8ac:	ldrd	r2, [r6]
   1c8b0:	ldr	r0, [r4, #204]	; 0xcc
   1c8b4:	str	r8, [sp]
   1c8b8:	str	r5, [sp, #4]
   1c8bc:	movw	r1, #30739	; 0x7813
   1c8c0:	movt	r1, #4
   1c8c4:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c8c8:	ldrd	r2, [r6]
   1c8cc:	ldr	r0, [r4, #204]	; 0xcc
   1c8d0:	str	r8, [sp]
   1c8d4:	str	r5, [sp, #4]
   1c8d8:	movw	r1, #30436	; 0x76e4
   1c8dc:	movt	r1, #4
   1c8e0:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c8e4:	ldrd	r2, [r6]
   1c8e8:	ldr	r0, [r4, #204]	; 0xcc
   1c8ec:	str	r8, [sp]
   1c8f0:	str	r5, [sp, #4]
   1c8f4:	movw	r1, #30494	; 0x771e
   1c8f8:	movt	r1, #4
   1c8fc:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c900:	ldrh	r1, [sl, #74]	; 0x4a
   1c904:	str	r8, [sp]
   1c908:	stmib	sp, {r1, r5}
   1c90c:	movw	r1, #30144	; 0x75c0
   1c910:	movt	r1, #4
   1c914:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1c918:	cmp	r0, #0
   1c91c:	bne	1c938 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
   1c920:	ldr	r3, [r4, #204]	; 0xcc
   1c924:	movw	r0, #30873	; 0x7899
   1c928:	movt	r0, #4
   1c92c:	mov	r1, #15
   1c930:	mov	r2, #1
   1c934:	bl	14858 <fwrite@plt>
   1c938:	ldr	r3, [r4, #204]	; 0xcc
   1c93c:	movw	r0, #30889	; 0x78a9
   1c940:	movt	r0, #4
   1c944:	mov	r1, #29
   1c948:	mov	r2, #1
   1c94c:	bl	14858 <fwrite@plt>
   1c950:	ldr	r3, [r4, #204]	; 0xcc
   1c954:	movw	r0, #47448	; 0xb958
   1c958:	movt	r0, #4
   1c95c:	mov	r1, #3
   1c960:	mov	r2, #1
   1c964:	bl	14858 <fwrite@plt>
   1c968:	ldr	r0, [r4, #204]	; 0xcc
   1c96c:	add	r5, sp, #256	; 0x100
   1c970:	str	r5, [sp]
   1c974:	movw	r1, #30919	; 0x78c7
   1c978:	movt	r1, #4
   1c97c:	mov	r2, r5
   1c980:	mov	r3, r5
   1c984:	bl	148c4 <fprintf@plt>
   1c988:	ldr	r0, [r4, #204]	; 0xcc
   1c98c:	str	r5, [sp]
   1c990:	movw	r1, #31079	; 0x7967
   1c994:	movt	r1, #4
   1c998:	mov	r2, r5
   1c99c:	mov	r3, r5
   1c9a0:	bl	148c4 <fprintf@plt>
   1c9a4:	ldr	r0, [r4, #204]	; 0xcc
   1c9a8:	movw	r1, #31250	; 0x7a12
   1c9ac:	movt	r1, #4
   1c9b0:	mov	r2, r5
   1c9b4:	mov	r3, r5
   1c9b8:	bl	148c4 <fprintf@plt>
   1c9bc:	ldr	r0, [r4, #204]	; 0xcc
   1c9c0:	str	r5, [sp]
   1c9c4:	movw	r1, #31433	; 0x7ac9
   1c9c8:	movt	r1, #4
   1c9cc:	mov	r2, r5
   1c9d0:	mov	r3, r4
   1c9d4:	bl	148c4 <fprintf@plt>
   1c9d8:	sub	sp, fp, #28
   1c9dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9e0:	movw	r0, #4272	; 0x10b0
   1c9e4:	movt	r0, #6
   1c9e8:	ldr	r0, [r0]
   1c9ec:	movw	r1, #30806	; 0x7856
   1c9f0:	movt	r1, #4
   1c9f4:	str	r1, [sp]
   1c9f8:	movw	r1, #21375	; 0x537f
   1c9fc:	movt	r1, #3
   1ca00:	movw	r4, #28933	; 0x7105
   1ca04:	movt	r4, #4
   1ca08:	mov	r2, r4
   1ca0c:	mov	r3, #202	; 0xca
   1ca10:	bl	148c4 <fprintf@plt>
   1ca14:	movw	r0, #25261	; 0x62ad
   1ca18:	movt	r0, #4
   1ca1c:	movw	r3, #30614	; 0x7796
   1ca20:	movt	r3, #4
   1ca24:	mov	r1, r4
   1ca28:	mov	r2, #202	; 0xca
   1ca2c:	bl	14984 <__assert_fail@plt>
   1ca30:	movw	r0, #4272	; 0x10b0
   1ca34:	movt	r0, #6
   1ca38:	ldr	r0, [r0]
   1ca3c:	movw	r1, #30554	; 0x775a
   1ca40:	movt	r1, #4
   1ca44:	str	r1, [sp]
   1ca48:	movw	r1, #21375	; 0x537f
   1ca4c:	movt	r1, #3
   1ca50:	movw	r4, #28933	; 0x7105
   1ca54:	movt	r4, #4
   1ca58:	mov	r2, r4
   1ca5c:	mov	r3, #178	; 0xb2
   1ca60:	bl	148c4 <fprintf@plt>
   1ca64:	movw	r0, #25261	; 0x62ad
   1ca68:	movt	r0, #4
   1ca6c:	movw	r3, #30614	; 0x7796
   1ca70:	movt	r3, #4
   1ca74:	mov	r1, r4
   1ca78:	mov	r2, #178	; 0xb2
   1ca7c:	bl	14984 <__assert_fail@plt>
   1ca80:	ldr	r1, [r0, #212]	; 0xd4
   1ca84:	ldr	r1, [r1, #140]	; 0x8c
   1ca88:	cmp	r1, #0
   1ca8c:	bxeq	lr
   1ca90:	ldr	r3, [r0, #204]	; 0xcc
   1ca94:	movw	r0, #45596	; 0xb21c
   1ca98:	movt	r0, #3
   1ca9c:	mov	r1, #36	; 0x24
   1caa0:	mov	r2, #1
   1caa4:	b	14858 <fwrite@plt>

0001caa8 <__flatcc_fb_gen_c_json_parser@@Base>:
   1caa8:	push	{r4, sl, fp, lr}
   1caac:	add	fp, sp, #8
   1cab0:	mov	r4, r0
   1cab4:	bl	1cad8 <__flatcc_fb_gen_c_json_parser@@Base+0x30>
   1cab8:	mov	r0, r4
   1cabc:	bl	1cb84 <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
   1cac0:	mov	r0, r4
   1cac4:	bl	1cf40 <__flatcc_fb_gen_c_json_parser@@Base+0x498>
   1cac8:	mov	r0, r4
   1cacc:	bl	1d024 <__flatcc_fb_gen_c_json_parser@@Base+0x57c>
   1cad0:	mov	r0, #0
   1cad4:	pop	{r4, sl, fp, pc}
   1cad8:	push	{r4, r5, fp, lr}
   1cadc:	add	fp, sp, #8
   1cae0:	mov	r4, r0
   1cae4:	ldr	r0, [r0, #208]	; 0xd0
   1cae8:	ldr	r2, [r0, #164]	; 0xa4
   1caec:	movw	r1, #31651	; 0x7ba3
   1caf0:	movt	r1, #4
   1caf4:	mov	r0, r4
   1caf8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cafc:	ldr	r0, [r4, #208]	; 0xd0
   1cb00:	ldr	r2, [r0, #164]	; 0xa4
   1cb04:	movw	r1, #31676	; 0x7bbc
   1cb08:	movt	r1, #4
   1cb0c:	mov	r0, r4
   1cb10:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cb14:	movw	r5, #21632	; 0x5480
   1cb18:	movt	r5, #3
   1cb1c:	mov	r0, r4
   1cb20:	mov	r1, r5
   1cb24:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cb28:	movw	r1, #31701	; 0x7bd5
   1cb2c:	movt	r1, #4
   1cb30:	mov	r0, r4
   1cb34:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cb38:	mov	r0, r4
   1cb3c:	mov	r1, r5
   1cb40:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cb44:	movw	r1, #31780	; 0x7c24
   1cb48:	movt	r1, #4
   1cb4c:	mov	r0, r4
   1cb50:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cb54:	movw	r1, #20992	; 0x5200
   1cb58:	movt	r1, #3
   1cb5c:	movw	r2, #31686	; 0x7bc6
   1cb60:	movt	r2, #4
   1cb64:	mov	r0, r4
   1cb68:	bl	159b4 <__flatcc_fb_gen_c_includes@@Base>
   1cb6c:	mov	r0, r4
   1cb70:	bl	1d14c <__flatcc_fb_gen_c_json_parser@@Base+0x6a4>
   1cb74:	mov	r0, r4
   1cb78:	mov	r1, r5
   1cb7c:	pop	{r4, r5, fp, lr}
   1cb80:	b	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cb84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb88:	add	fp, sp, #28
   1cb8c:	sub	sp, sp, #228	; 0xe4
   1cb90:	mov	r4, r0
   1cb94:	ldr	r0, [r0, #208]	; 0xd0
   1cb98:	ldr	r5, [r0, #52]	; 0x34
   1cb9c:	mov	r0, sp
   1cba0:	mov	r1, #0
   1cba4:	mov	r2, #220	; 0xdc
   1cba8:	bl	148dc <memset@plt>
   1cbac:	cmp	r5, #0
   1cbb0:	beq	1ccb4 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1cbb4:	ldrh	r0, [r5, #8]
   1cbb8:	cmp	r0, #1
   1cbbc:	bhi	1ccb4 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1cbc0:	movw	r1, #31819	; 0x7c4b
   1cbc4:	movt	r1, #4
   1cbc8:	mov	r0, r4
   1cbcc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cbd0:	movw	r1, #31822	; 0x7c4e
   1cbd4:	movt	r1, #4
   1cbd8:	mov	r0, r4
   1cbdc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cbe0:	movw	r1, #31908	; 0x7ca4
   1cbe4:	movt	r1, #4
   1cbe8:	mov	r0, r4
   1cbec:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cbf0:	movw	r1, #31911	; 0x7ca7
   1cbf4:	movt	r1, #4
   1cbf8:	mov	r0, r4
   1cbfc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc00:	movw	r1, #31979	; 0x7ceb
   1cc04:	movt	r1, #4
   1cc08:	mov	r0, r4
   1cc0c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc10:	movw	r1, #32033	; 0x7d21
   1cc14:	movt	r1, #4
   1cc18:	mov	r0, r4
   1cc1c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc20:	movw	r1, #32073	; 0x7d49
   1cc24:	movt	r1, #4
   1cc28:	mov	r0, r4
   1cc2c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc30:	movw	r1, #32145	; 0x7d91
   1cc34:	movt	r1, #4
   1cc38:	mov	r0, r4
   1cc3c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc40:	movw	r1, #35730	; 0x8b92
   1cc44:	movt	r1, #4
   1cc48:	mov	r0, r4
   1cc4c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc50:	ldr	r0, [r4, #208]	; 0xd0
   1cc54:	ldr	r2, [r0, #160]	; 0xa0
   1cc58:	movw	r1, #32207	; 0x7dcf
   1cc5c:	movt	r1, #4
   1cc60:	mov	r0, r4
   1cc64:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc68:	ldr	r0, [r4, #220]	; 0xdc
   1cc6c:	add	r0, r0, #2
   1cc70:	str	r0, [r4, #220]	; 0xdc
   1cc74:	movw	r1, #32280	; 0x7e18
   1cc78:	movt	r1, #4
   1cc7c:	mov	r0, r4
   1cc80:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cc84:	ldr	r0, [r4, #220]	; 0xdc
   1cc88:	cmp	r0, #0
   1cc8c:	beq	1cf20 <__flatcc_fb_gen_c_json_parser@@Base+0x478>
   1cc90:	subs	r1, r0, #1
   1cc94:	str	r1, [r4, #220]	; 0xdc
   1cc98:	beq	1cf20 <__flatcc_fb_gen_c_json_parser@@Base+0x478>
   1cc9c:	sub	r0, r0, #2
   1cca0:	str	r0, [r4, #220]	; 0xdc
   1cca4:	movw	r1, #21632	; 0x5480
   1cca8:	movt	r1, #3
   1ccac:	mov	r0, r4
   1ccb0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ccb4:	ldr	r0, [r4, #208]	; 0xd0
   1ccb8:	ldr	r5, [r0, #40]	; 0x28
   1ccbc:	cmp	r5, #0
   1ccc0:	beq	1ce3c <__flatcc_fb_gen_c_json_parser@@Base+0x394>
   1ccc4:	mov	r6, sp
   1ccc8:	movw	r7, #32662	; 0x7f96
   1cccc:	movt	r7, #4
   1ccd0:	movw	r8, #32761	; 0x7ff9
   1ccd4:	movt	r8, #4
   1ccd8:	movw	r9, #32467	; 0x7ed3
   1ccdc:	movt	r9, #4
   1cce0:	movw	sl, #32610	; 0x7f62
   1cce4:	movt	sl, #4
   1cce8:	b	1cd18 <__flatcc_fb_gen_c_json_parser@@Base+0x270>
   1ccec:	mov	r0, r5
   1ccf0:	mov	r1, r6
   1ccf4:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1ccf8:	mov	r0, r4
   1ccfc:	movw	r1, #33072	; 0x8130
   1cd00:	movt	r1, #4
   1cd04:	mov	r2, r6
   1cd08:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cd0c:	ldr	r5, [r5]
   1cd10:	cmp	r5, #0
   1cd14:	beq	1ce3c <__flatcc_fb_gen_c_json_parser@@Base+0x394>
   1cd18:	ldrh	r0, [r5, #8]
   1cd1c:	cmp	r0, #4
   1cd20:	bhi	1cd0c <__flatcc_fb_gen_c_json_parser@@Base+0x264>
   1cd24:	add	r1, pc, #0
   1cd28:	ldr	pc, [r1, r0, lsl #2]
   1cd2c:	andeq	ip, r1, ip, ror #25
   1cd30:	andeq	ip, r1, r0, asr #26
   1cd34:	andeq	ip, r1, ip, lsl #26
   1cd38:	andeq	ip, r1, r0, ror sp
   1cd3c:	andeq	ip, r1, r4, asr #27
   1cd40:	mov	r0, r5
   1cd44:	mov	r1, r6
   1cd48:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1cd4c:	mov	r0, r4
   1cd50:	movw	r1, #32812	; 0x802c
   1cd54:	movt	r1, #4
   1cd58:	mov	r2, r6
   1cd5c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cd60:	mov	r0, r4
   1cd64:	movw	r1, #32940	; 0x80ac
   1cd68:	movt	r1, #4
   1cd6c:	b	1cd04 <__flatcc_fb_gen_c_json_parser@@Base+0x25c>
   1cd70:	mov	r0, r5
   1cd74:	mov	r1, r6
   1cd78:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1cd7c:	mov	r0, r4
   1cd80:	mov	r1, r7
   1cd84:	mov	r2, r6
   1cd88:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cd8c:	ldr	r0, [r4, #220]	; 0xdc
   1cd90:	add	r0, r0, #2
   1cd94:	str	r0, [r4, #220]	; 0xdc
   1cd98:	mov	r0, r4
   1cd9c:	mov	r1, r8
   1cda0:	mov	r2, r6
   1cda4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cda8:	ldr	r0, [r4, #220]	; 0xdc
   1cdac:	cmp	r0, #0
   1cdb0:	beq	1cec0 <__flatcc_fb_gen_c_json_parser@@Base+0x418>
   1cdb4:	subs	r1, r0, #1
   1cdb8:	str	r1, [r4, #220]	; 0xdc
   1cdbc:	bne	1ce30 <__flatcc_fb_gen_c_json_parser@@Base+0x388>
   1cdc0:	b	1cec0 <__flatcc_fb_gen_c_json_parser@@Base+0x418>
   1cdc4:	mov	r0, r5
   1cdc8:	mov	r1, r6
   1cdcc:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1cdd0:	mov	r0, r4
   1cdd4:	mov	r1, r9
   1cdd8:	mov	r2, r6
   1cddc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cde0:	mov	r0, r4
   1cde4:	mov	r1, sl
   1cde8:	mov	r2, r6
   1cdec:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1cdf0:	mov	r0, r4
   1cdf4:	mov	r1, r7
   1cdf8:	mov	r2, r6
   1cdfc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ce00:	ldr	r0, [r4, #220]	; 0xdc
   1ce04:	add	r0, r0, #2
   1ce08:	str	r0, [r4, #220]	; 0xdc
   1ce0c:	mov	r0, r4
   1ce10:	mov	r1, r8
   1ce14:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ce18:	ldr	r0, [r4, #220]	; 0xdc
   1ce1c:	cmp	r0, #0
   1ce20:	beq	1cee0 <__flatcc_fb_gen_c_json_parser@@Base+0x438>
   1ce24:	subs	r1, r0, #1
   1ce28:	str	r1, [r4, #220]	; 0xdc
   1ce2c:	beq	1cee0 <__flatcc_fb_gen_c_json_parser@@Base+0x438>
   1ce30:	sub	r0, r0, #2
   1ce34:	str	r0, [r4, #220]	; 0xdc
   1ce38:	b	1cd0c <__flatcc_fb_gen_c_json_parser@@Base+0x264>
   1ce3c:	ldr	r0, [r4, #208]	; 0xd0
   1ce40:	ldr	r0, [r0, #60]	; 0x3c
   1ce44:	movw	r1, #53636	; 0xd184
   1ce48:	movt	r1, #1
   1ce4c:	mov	r2, r4
   1ce50:	bl	265d8 <fb_scope_table_visit@@Base>
   1ce54:	ldr	r0, [r4, #208]	; 0xd0
   1ce58:	ldr	r2, [r0, #160]	; 0xa0
   1ce5c:	movw	r1, #33203	; 0x81b3
   1ce60:	movt	r1, #4
   1ce64:	mov	r0, r4
   1ce68:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ce6c:	ldr	r0, [r4, #220]	; 0xdc
   1ce70:	add	r0, r0, #2
   1ce74:	str	r0, [r4, #220]	; 0xdc
   1ce78:	movw	r1, #32761	; 0x7ff9
   1ce7c:	movt	r1, #4
   1ce80:	mov	r0, r4
   1ce84:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ce88:	ldr	r0, [r4, #220]	; 0xdc
   1ce8c:	cmp	r0, #0
   1ce90:	beq	1cf00 <__flatcc_fb_gen_c_json_parser@@Base+0x458>
   1ce94:	subs	r1, r0, #1
   1ce98:	str	r1, [r4, #220]	; 0xdc
   1ce9c:	beq	1cf00 <__flatcc_fb_gen_c_json_parser@@Base+0x458>
   1cea0:	sub	r0, r0, #2
   1cea4:	str	r0, [r4, #220]	; 0xdc
   1cea8:	movw	r1, #21632	; 0x5480
   1ceac:	movt	r1, #3
   1ceb0:	mov	r0, r4
   1ceb4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ceb8:	sub	sp, fp, #28
   1cebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cec0:	movw	r0, #32324	; 0x7e44
   1cec4:	movt	r0, #4
   1cec8:	movw	r1, #32336	; 0x7e50
   1cecc:	movt	r1, #4
   1ced0:	movw	r3, #32421	; 0x7ea5
   1ced4:	movt	r3, #4
   1ced8:	movw	r2, #1747	; 0x6d3
   1cedc:	bl	14984 <__assert_fail@plt>
   1cee0:	movw	r0, #32324	; 0x7e44
   1cee4:	movt	r0, #4
   1cee8:	movw	r1, #32336	; 0x7e50
   1ceec:	movt	r1, #4
   1cef0:	movw	r3, #32421	; 0x7ea5
   1cef4:	movt	r3, #4
   1cef8:	movw	r2, #1731	; 0x6c3
   1cefc:	bl	14984 <__assert_fail@plt>
   1cf00:	movw	r0, #32324	; 0x7e44
   1cf04:	movt	r0, #4
   1cf08:	movw	r1, #32336	; 0x7e50
   1cf0c:	movt	r1, #4
   1cf10:	movw	r3, #32421	; 0x7ea5
   1cf14:	movt	r3, #4
   1cf18:	movw	r2, #1755	; 0x6db
   1cf1c:	bl	14984 <__assert_fail@plt>
   1cf20:	movw	r0, #32324	; 0x7e44
   1cf24:	movt	r0, #4
   1cf28:	movw	r1, #32336	; 0x7e50
   1cf2c:	movt	r1, #4
   1cf30:	movw	r3, #32421	; 0x7ea5
   1cf34:	movt	r3, #4
   1cf38:	movw	r2, #1716	; 0x6b4
   1cf3c:	bl	14984 <__assert_fail@plt>
   1cf40:	push	{r4, r5, fp, lr}
   1cf44:	add	fp, sp, #8
   1cf48:	mov	r4, r0
   1cf4c:	ldr	r0, [r0, #208]	; 0xd0
   1cf50:	ldr	r5, [r0, #40]	; 0x28
   1cf54:	cmp	r5, #0
   1cf58:	bne	1cf90 <__flatcc_fb_gen_c_json_parser@@Base+0x4e8>
   1cf5c:	b	1cff8 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
   1cf60:	mov	r0, r4
   1cf64:	mov	r1, r5
   1cf68:	bl	1d1d8 <__flatcc_fb_gen_c_json_parser@@Base+0x730>
   1cf6c:	mov	r0, r4
   1cf70:	mov	r1, r5
   1cf74:	bl	1d714 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1cf78:	mov	r0, r4
   1cf7c:	mov	r1, r5
   1cf80:	bl	1d8b4 <__flatcc_fb_gen_c_json_parser@@Base+0xe0c>
   1cf84:	ldr	r5, [r5]
   1cf88:	cmp	r5, #0
   1cf8c:	beq	1cff8 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
   1cf90:	ldrh	r0, [r5, #8]
   1cf94:	cmp	r0, #4
   1cf98:	bhi	1cf84 <__flatcc_fb_gen_c_json_parser@@Base+0x4dc>
   1cf9c:	add	r1, pc, #0
   1cfa0:	ldr	pc, [r1, r0, lsl #2]
   1cfa4:			; <UNDEFINED> instruction: 0x0001cfb8
   1cfa8:	ldrdeq	ip, [r1], -r4
   1cfac:	andeq	ip, r1, r4, lsl #31
   1cfb0:	andeq	ip, r1, r8, ror pc
   1cfb4:	andeq	ip, r1, r0, ror #30
   1cfb8:	mov	r0, r4
   1cfbc:	mov	r1, r5
   1cfc0:	bl	1e120 <__flatcc_fb_gen_c_json_parser@@Base+0x1678>
   1cfc4:	ldr	r5, [r5]
   1cfc8:	cmp	r5, #0
   1cfcc:	bne	1cf90 <__flatcc_fb_gen_c_json_parser@@Base+0x4e8>
   1cfd0:	b	1cff8 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
   1cfd4:	mov	r0, r4
   1cfd8:	mov	r1, r5
   1cfdc:	bl	1dba0 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   1cfe0:	mov	r0, r4
   1cfe4:	mov	r1, r5
   1cfe8:	bl	1dee0 <__flatcc_fb_gen_c_json_parser@@Base+0x1438>
   1cfec:	ldr	r5, [r5]
   1cff0:	cmp	r5, #0
   1cff4:	bne	1cf90 <__flatcc_fb_gen_c_json_parser@@Base+0x4e8>
   1cff8:	ldr	r0, [r4, #208]	; 0xd0
   1cffc:	ldr	r0, [r0, #60]	; 0x3c
   1d000:	movw	r1, #59148	; 0xe70c
   1d004:	movt	r1, #1
   1d008:	mov	r2, r4
   1d00c:	bl	265d8 <fb_scope_table_visit@@Base>
   1d010:	mov	r0, r4
   1d014:	bl	1e9b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
   1d018:	mov	r0, r4
   1d01c:	pop	{r4, r5, fp, lr}
   1d020:	b	1ec6c <__flatcc_fb_gen_c_json_parser@@Base+0x21c4>
   1d024:	push	{r4, sl, fp, lr}
   1d028:	add	fp, sp, #8
   1d02c:	mov	r4, r0
   1d030:	bl	216e0 <__flatcc_fb_gen_c_json_parser@@Base+0x4c38>
   1d034:	ldr	r0, [r4, #208]	; 0xd0
   1d038:	ldr	r2, [r0, #164]	; 0xa4
   1d03c:	movw	r1, #41869	; 0xa38d
   1d040:	movt	r1, #4
   1d044:	mov	r0, r4
   1d048:	pop	{r4, sl, fp, lr}
   1d04c:	b	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d050:	sub	sp, sp, #8
   1d054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d058:	add	fp, sp, #28
   1d05c:	sub	sp, sp, #4
   1d060:	mov	r8, r1
   1d064:	mov	r4, r0
   1d068:	str	r2, [fp, #8]
   1d06c:	str	r3, [fp, #12]
   1d070:	ldr	r0, [r0, #212]	; 0xd4
   1d074:	ldr	r5, [r4, #220]	; 0xdc
   1d078:	ldr	r6, [r0, #176]	; 0xb0
   1d07c:	movw	r0, #4288	; 0x10c0
   1d080:	movt	r0, #6
   1d084:	ldrb	r0, [r0]
   1d088:	cmp	r0, #0
   1d08c:	bne	1d0a4 <__flatcc_fb_gen_c_json_parser@@Base+0x5fc>
   1d090:	movw	r0, #4288	; 0x10c0
   1d094:	movt	r0, #6
   1d098:	mov	r1, #32
   1d09c:	mov	r2, #64	; 0x40
   1d0a0:	bl	148dc <memset@plt>
   1d0a4:	ldrb	r0, [r8]
   1d0a8:	cmp	r0, #0
   1d0ac:	beq	1d130 <__flatcc_fb_gen_c_json_parser@@Base+0x688>
   1d0b0:	mul	sl, r6, r5
   1d0b4:	ldr	r0, [r4, #204]	; 0xcc
   1d0b8:	cmp	sl, #65	; 0x41
   1d0bc:	blt	1d104 <__flatcc_fb_gen_c_json_parser@@Base+0x65c>
   1d0c0:	sub	r1, sl, #65	; 0x41
   1d0c4:	bic	r9, r1, #63	; 0x3f
   1d0c8:	movw	r7, #25277	; 0x62bd
   1d0cc:	movt	r7, #4
   1d0d0:	movw	r5, #4288	; 0x10c0
   1d0d4:	movt	r5, #6
   1d0d8:	mov	r6, sl
   1d0dc:	mov	r1, r7
   1d0e0:	mov	r2, #64	; 0x40
   1d0e4:	mov	r3, r5
   1d0e8:	bl	148c4 <fprintf@plt>
   1d0ec:	sub	r6, r6, #64	; 0x40
   1d0f0:	ldr	r0, [r4, #204]	; 0xcc
   1d0f4:	cmp	r6, #64	; 0x40
   1d0f8:	bgt	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x634>
   1d0fc:	sub	r1, sl, r9
   1d100:	sub	sl, r1, #64	; 0x40
   1d104:	movw	r1, #25277	; 0x62bd
   1d108:	movt	r1, #4
   1d10c:	movw	r3, #4288	; 0x10c0
   1d110:	movt	r3, #6
   1d114:	mov	r2, sl
   1d118:	bl	148c4 <fprintf@plt>
   1d11c:	add	r2, fp, #8
   1d120:	str	r2, [sp]
   1d124:	ldr	r0, [r4, #204]	; 0xcc
   1d128:	mov	r1, r8
   1d12c:	bl	14918 <vfprintf@plt>
   1d130:	ldr	r1, [r4, #204]	; 0xcc
   1d134:	mov	r0, #10
   1d138:	bl	14924 <fputc@plt>
   1d13c:	sub	sp, fp, #28
   1d140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d144:	add	sp, sp, #8
   1d148:	bx	lr
   1d14c:	ldr	r1, [r0, #212]	; 0xd4
   1d150:	ldr	r1, [r1, #140]	; 0x8c
   1d154:	cmp	r1, #0
   1d158:	bxeq	lr
   1d15c:	ldr	r3, [r0, #204]	; 0xcc
   1d160:	movw	r0, #21554	; 0x5432
   1d164:	movt	r0, #3
   1d168:	mov	r1, #36	; 0x24
   1d16c:	mov	r2, #1
   1d170:	b	14858 <fwrite@plt>
   1d174:	mov	r2, r1
   1d178:	mov	r1, r0
   1d17c:	ldr	r0, [r0, #12]
   1d180:	b	15b9c <__flatcc_fb_scoped_symbol_name@@Base>
   1d184:	push	{r4, r5, fp, lr}
   1d188:	add	fp, sp, #8
   1d18c:	sub	sp, sp, #208	; 0xd0
   1d190:	mov	r4, r0
   1d194:	add	r5, sp, #4
   1d198:	mov	r0, r1
   1d19c:	mov	r1, r5
   1d1a0:	bl	15ae4 <__flatcc_fb_copy_scope@@Base>
   1d1a4:	ldr	r0, [r4, #208]	; 0xd0
   1d1a8:	ldr	r2, [r0, #160]	; 0xa0
   1d1ac:	movw	r1, #33310	; 0x821e
   1d1b0:	movt	r1, #4
   1d1b4:	mov	r0, r4
   1d1b8:	mov	r3, r5
   1d1bc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d1c0:	movw	r1, #32761	; 0x7ff9
   1d1c4:	movt	r1, #4
   1d1c8:	mov	r0, r4
   1d1cc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d1d0:	sub	sp, fp, #8
   1d1d4:	pop	{r4, r5, fp, pc}
   1d1d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1dc:	add	fp, sp, #28
   1d1e0:	sub	sp, sp, #468	; 0x1d4
   1d1e4:	mov	r5, r1
   1d1e8:	mov	r4, r0
   1d1ec:	add	r6, sp, #240	; 0xf0
   1d1f0:	mov	r0, r6
   1d1f4:	mov	r1, #0
   1d1f8:	mov	r2, #220	; 0xdc
   1d1fc:	bl	148dc <memset@plt>
   1d200:	add	r0, sp, #16
   1d204:	mov	r1, #0
   1d208:	mov	r2, #220	; 0xdc
   1d20c:	bl	148dc <memset@plt>
   1d210:	mov	r0, r5
   1d214:	mov	r1, r6
   1d218:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1d21c:	movw	r1, #33418	; 0x828a
   1d220:	movt	r1, #4
   1d224:	mov	r0, r4
   1d228:	mov	r2, r6
   1d22c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d230:	movw	r1, #45539	; 0xb1e3
   1d234:	movt	r1, #4
   1d238:	mov	r0, r4
   1d23c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d240:	ldr	r0, [r4, #220]	; 0xdc
   1d244:	add	r0, r0, #1
   1d248:	str	r0, [r4, #220]	; 0xdc
   1d24c:	movw	r1, #21632	; 0x5480
   1d250:	movt	r1, #3
   1d254:	mov	r0, r4
   1d258:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d25c:	movw	r1, #33562	; 0x831a
   1d260:	movt	r1, #4
   1d264:	mov	r0, r4
   1d268:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d26c:	movw	r1, #33575	; 0x8327
   1d270:	movt	r1, #4
   1d274:	mov	r0, r4
   1d278:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d27c:	movw	r1, #33591	; 0x8337
   1d280:	movt	r1, #4
   1d284:	mov	r0, r4
   1d288:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d28c:	ldr	r0, [r4, #220]	; 0xdc
   1d290:	add	r0, r0, #1
   1d294:	str	r0, [r4, #220]	; 0xdc
   1d298:	movw	r1, #33610	; 0x834a
   1d29c:	movt	r1, #4
   1d2a0:	mov	r0, r4
   1d2a4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d2a8:	ldr	r0, [r4, #220]	; 0xdc
   1d2ac:	cmp	r0, #0
   1d2b0:	beq	1d654 <__flatcc_fb_gen_c_json_parser@@Base+0xbac>
   1d2b4:	sub	r0, r0, #1
   1d2b8:	str	r0, [r4, #220]	; 0xdc
   1d2bc:	ldr	r5, [r5, #20]
   1d2c0:	cmp	r5, #0
   1d2c4:	beq	1d418 <__flatcc_fb_gen_c_json_parser@@Base+0x970>
   1d2c8:	add	r6, sp, #12
   1d2cc:	add	r7, sp, #8
   1d2d0:	movw	r8, #33715	; 0x83b3
   1d2d4:	movt	r8, #4
   1d2d8:	movw	sl, #33891	; 0x8463
   1d2dc:	movt	sl, #4
   1d2e0:	add	r9, sp, #16
   1d2e4:	b	1d34c <__flatcc_fb_gen_c_json_parser@@Base+0x8a4>
   1d2e8:	ldr	r2, [r5, #48]	; 0x30
   1d2ec:	ldr	r3, [sp, #12]
   1d2f0:	ldr	r0, [sp, #8]
   1d2f4:	str	r0, [sp]
   1d2f8:	mov	r0, r4
   1d2fc:	mov	r1, r8
   1d300:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d304:	ldr	r0, [r4, #220]	; 0xdc
   1d308:	add	r0, r0, #1
   1d30c:	str	r0, [r4, #220]	; 0xdc
   1d310:	mov	r0, r4
   1d314:	movw	r1, #33898	; 0x846a
   1d318:	movt	r1, #4
   1d31c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d320:	mov	r0, r4
   1d324:	mov	r1, sl
   1d328:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d32c:	ldr	r0, [r4, #220]	; 0xdc
   1d330:	cmp	r0, #0
   1d334:	beq	1d634 <__flatcc_fb_gen_c_json_parser@@Base+0xb8c>
   1d338:	sub	r0, r0, #1
   1d33c:	str	r0, [r4, #220]	; 0xdc
   1d340:	ldr	r5, [r5]
   1d344:	cmp	r5, #0
   1d348:	beq	1d418 <__flatcc_fb_gen_c_json_parser@@Base+0x970>
   1d34c:	mov	r0, r5
   1d350:	mov	r1, r6
   1d354:	mov	r2, r7
   1d358:	bl	1ec9c <__flatcc_fb_gen_c_json_parser@@Base+0x21f4>
   1d35c:	ldrh	r0, [r5, #24]
   1d360:	cmp	r0, #0
   1d364:	beq	1d340 <__flatcc_fb_gen_c_json_parser@@Base+0x898>
   1d368:	cmp	r0, #10
   1d36c:	beq	1d2e8 <__flatcc_fb_gen_c_json_parser@@Base+0x840>
   1d370:	cmp	r0, #14
   1d374:	bne	1d594 <__flatcc_fb_gen_c_json_parser@@Base+0xaec>
   1d378:	ldr	r0, [r5, #16]
   1d37c:	mov	r1, r9
   1d380:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1d384:	ldr	r2, [r5, #48]	; 0x30
   1d388:	ldr	r3, [sp, #12]
   1d38c:	ldr	r0, [sp, #8]
   1d390:	str	r0, [sp]
   1d394:	mov	r0, r4
   1d398:	mov	r1, r8
   1d39c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d3a0:	ldr	r0, [r4, #220]	; 0xdc
   1d3a4:	add	r0, r0, #1
   1d3a8:	str	r0, [r4, #220]	; 0xdc
   1d3ac:	ldr	r0, [r5, #16]
   1d3b0:	ldrh	r0, [r0, #8]
   1d3b4:	cmp	r0, #0
   1d3b8:	movw	r1, #33735	; 0x83c7
   1d3bc:	movt	r1, #4
   1d3c0:	beq	1d3d4 <__flatcc_fb_gen_c_json_parser@@Base+0x92c>
   1d3c4:	cmp	r0, #1
   1d3c8:	bne	1d5e4 <__flatcc_fb_gen_c_json_parser@@Base+0xb3c>
   1d3cc:	movw	r1, #33785	; 0x83f9
   1d3d0:	movt	r1, #4
   1d3d4:	mov	r0, r4
   1d3d8:	mov	r2, r9
   1d3dc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d3e0:	mov	r0, r4
   1d3e4:	mov	r1, sl
   1d3e8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d3ec:	ldr	r0, [r4, #220]	; 0xdc
   1d3f0:	cmp	r0, #0
   1d3f4:	bne	1d338 <__flatcc_fb_gen_c_json_parser@@Base+0x890>
   1d3f8:	movw	r0, #32324	; 0x7e44
   1d3fc:	movt	r0, #4
   1d400:	movw	r1, #32336	; 0x7e50
   1d404:	movt	r1, #4
   1d408:	movw	r3, #33657	; 0x8379
   1d40c:	movt	r3, #4
   1d410:	movw	r2, #1526	; 0x5f6
   1d414:	bl	14984 <__assert_fail@plt>
   1d418:	movw	r1, #34006	; 0x84d6
   1d41c:	movt	r1, #4
   1d420:	mov	r0, r4
   1d424:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d428:	ldr	r0, [r4, #220]	; 0xdc
   1d42c:	add	r0, r0, #1
   1d430:	str	r0, [r4, #220]	; 0xdc
   1d434:	movw	r1, #34015	; 0x84df
   1d438:	movt	r1, #4
   1d43c:	mov	r0, r4
   1d440:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d444:	ldr	r0, [r4, #220]	; 0xdc
   1d448:	add	r0, r0, #1
   1d44c:	str	r0, [r4, #220]	; 0xdc
   1d450:	movw	r1, #34072	; 0x8518
   1d454:	movt	r1, #4
   1d458:	mov	r0, r4
   1d45c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d460:	ldr	r0, [r4, #220]	; 0xdc
   1d464:	cmp	r0, #0
   1d468:	beq	1d674 <__flatcc_fb_gen_c_json_parser@@Base+0xbcc>
   1d46c:	sub	r0, r0, #1
   1d470:	str	r0, [r4, #220]	; 0xdc
   1d474:	movw	r1, #34164	; 0x8574
   1d478:	movt	r1, #4
   1d47c:	mov	r0, r4
   1d480:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d484:	ldr	r0, [r4, #220]	; 0xdc
   1d488:	add	r0, r0, #1
   1d48c:	str	r0, [r4, #220]	; 0xdc
   1d490:	movw	r1, #34173	; 0x857d
   1d494:	movt	r1, #4
   1d498:	mov	r0, r4
   1d49c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d4a0:	ldr	r0, [r4, #220]	; 0xdc
   1d4a4:	cmp	r0, #0
   1d4a8:	beq	1d694 <__flatcc_fb_gen_c_json_parser@@Base+0xbec>
   1d4ac:	sub	r0, r0, #1
   1d4b0:	str	r0, [r4, #220]	; 0xdc
   1d4b4:	movw	r1, #30713	; 0x77f9
   1d4b8:	movt	r1, #3
   1d4bc:	mov	r0, r4
   1d4c0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d4c4:	ldr	r0, [r4, #220]	; 0xdc
   1d4c8:	cmp	r0, #0
   1d4cc:	beq	1d6b4 <__flatcc_fb_gen_c_json_parser@@Base+0xc0c>
   1d4d0:	sub	r0, r0, #1
   1d4d4:	str	r0, [r4, #220]	; 0xdc
   1d4d8:	movw	r1, #30713	; 0x77f9
   1d4dc:	movt	r1, #3
   1d4e0:	mov	r0, r4
   1d4e4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d4e8:	movw	r1, #34228	; 0x85b4
   1d4ec:	movt	r1, #4
   1d4f0:	mov	r0, r4
   1d4f4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d4f8:	movw	r1, #34256	; 0x85d0
   1d4fc:	movt	r1, #4
   1d500:	mov	r0, r4
   1d504:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d508:	ldr	r0, [r4, #220]	; 0xdc
   1d50c:	add	r0, r0, #1
   1d510:	str	r0, [r4, #220]	; 0xdc
   1d514:	movw	r1, #34272	; 0x85e0
   1d518:	movt	r1, #4
   1d51c:	mov	r0, r4
   1d520:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d524:	ldr	r0, [r4, #220]	; 0xdc
   1d528:	cmp	r0, #0
   1d52c:	beq	1d6d4 <__flatcc_fb_gen_c_json_parser@@Base+0xc2c>
   1d530:	sub	r0, r0, #1
   1d534:	str	r0, [r4, #220]	; 0xdc
   1d538:	movw	r1, #30713	; 0x77f9
   1d53c:	movt	r1, #3
   1d540:	mov	r0, r4
   1d544:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d548:	movw	r1, #34244	; 0x85c4
   1d54c:	movt	r1, #4
   1d550:	mov	r0, r4
   1d554:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d558:	ldr	r0, [r4, #220]	; 0xdc
   1d55c:	cmp	r0, #0
   1d560:	beq	1d6f4 <__flatcc_fb_gen_c_json_parser@@Base+0xc4c>
   1d564:	sub	r0, r0, #1
   1d568:	str	r0, [r4, #220]	; 0xdc
   1d56c:	movw	r1, #30713	; 0x77f9
   1d570:	movt	r1, #3
   1d574:	mov	r0, r4
   1d578:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d57c:	movw	r1, #21632	; 0x5480
   1d580:	movt	r1, #3
   1d584:	mov	r0, r4
   1d588:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d58c:	sub	sp, fp, #28
   1d590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d594:	movw	r0, #4272	; 0x10b0
   1d598:	movt	r0, #6
   1d59c:	ldr	r0, [r0]
   1d5a0:	movw	r1, #33960	; 0x84a8
   1d5a4:	movt	r1, #4
   1d5a8:	str	r1, [sp]
   1d5ac:	movw	r1, #21375	; 0x537f
   1d5b0:	movt	r1, #3
   1d5b4:	movw	r4, #32336	; 0x7e50
   1d5b8:	movt	r4, #4
   1d5bc:	mov	r2, r4
   1d5c0:	movw	r3, #1535	; 0x5ff
   1d5c4:	bl	148c4 <fprintf@plt>
   1d5c8:	movw	r0, #25261	; 0x62ad
   1d5cc:	movt	r0, #4
   1d5d0:	movw	r3, #33657	; 0x8379
   1d5d4:	movt	r3, #4
   1d5d8:	mov	r1, r4
   1d5dc:	movw	r2, #1535	; 0x5ff
   1d5e0:	bl	14984 <__assert_fail@plt>
   1d5e4:	movw	r0, #4272	; 0x10b0
   1d5e8:	movt	r0, #6
   1d5ec:	ldr	r0, [r0]
   1d5f0:	movw	r1, #33836	; 0x842c
   1d5f4:	movt	r1, #4
   1d5f8:	str	r1, [sp]
   1d5fc:	movw	r1, #21375	; 0x537f
   1d600:	movt	r1, #3
   1d604:	movw	r4, #32336	; 0x7e50
   1d608:	movt	r4, #4
   1d60c:	mov	r2, r4
   1d610:	movw	r3, #1522	; 0x5f2
   1d614:	bl	148c4 <fprintf@plt>
   1d618:	movw	r0, #25261	; 0x62ad
   1d61c:	movt	r0, #4
   1d620:	movw	r3, #33657	; 0x8379
   1d624:	movt	r3, #4
   1d628:	mov	r1, r4
   1d62c:	movw	r2, #1522	; 0x5f2
   1d630:	bl	14984 <__assert_fail@plt>
   1d634:	movw	r0, #32324	; 0x7e44
   1d638:	movt	r0, #4
   1d63c:	movw	r1, #32336	; 0x7e50
   1d640:	movt	r1, #4
   1d644:	movw	r3, #33657	; 0x8379
   1d648:	movt	r3, #4
   1d64c:	movw	r2, #1532	; 0x5fc
   1d650:	bl	14984 <__assert_fail@plt>
   1d654:	movw	r0, #32324	; 0x7e44
   1d658:	movt	r0, #4
   1d65c:	movw	r1, #32336	; 0x7e50
   1d660:	movt	r1, #4
   1d664:	movw	r3, #33657	; 0x8379
   1d668:	movt	r3, #4
   1d66c:	movw	r2, #1503	; 0x5df
   1d670:	bl	14984 <__assert_fail@plt>
   1d674:	movw	r0, #32324	; 0x7e44
   1d678:	movt	r0, #4
   1d67c:	movw	r1, #32336	; 0x7e50
   1d680:	movt	r1, #4
   1d684:	movw	r3, #33657	; 0x8379
   1d688:	movt	r3, #4
   1d68c:	movw	r2, #1543	; 0x607
   1d690:	bl	14984 <__assert_fail@plt>
   1d694:	movw	r0, #32324	; 0x7e44
   1d698:	movt	r0, #4
   1d69c:	movw	r1, #32336	; 0x7e50
   1d6a0:	movt	r1, #4
   1d6a4:	movw	r3, #33657	; 0x8379
   1d6a8:	movt	r3, #4
   1d6ac:	movw	r2, #1545	; 0x609
   1d6b0:	bl	14984 <__assert_fail@plt>
   1d6b4:	movw	r0, #32324	; 0x7e44
   1d6b8:	movt	r0, #4
   1d6bc:	movw	r1, #32336	; 0x7e50
   1d6c0:	movt	r1, #4
   1d6c4:	movw	r3, #33657	; 0x8379
   1d6c8:	movt	r3, #4
   1d6cc:	movw	r2, #1546	; 0x60a
   1d6d0:	bl	14984 <__assert_fail@plt>
   1d6d4:	movw	r0, #32324	; 0x7e44
   1d6d8:	movt	r0, #4
   1d6dc:	movw	r1, #32336	; 0x7e50
   1d6e0:	movt	r1, #4
   1d6e4:	movw	r3, #33657	; 0x8379
   1d6e8:	movt	r3, #4
   1d6ec:	movw	r2, #1550	; 0x60e
   1d6f0:	bl	14984 <__assert_fail@plt>
   1d6f4:	movw	r0, #32324	; 0x7e44
   1d6f8:	movt	r0, #4
   1d6fc:	movw	r1, #32336	; 0x7e50
   1d700:	movt	r1, #4
   1d704:	movw	r3, #33657	; 0x8379
   1d708:	movt	r3, #4
   1d70c:	mov	r2, #1552	; 0x610
   1d710:	bl	14984 <__assert_fail@plt>
   1d714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d718:	add	fp, sp, #24
   1d71c:	sub	sp, sp, #240	; 0xf0
   1d720:	mov	r5, r1
   1d724:	mov	r4, r0
   1d728:	add	r6, sp, #16
   1d72c:	mov	r0, r6
   1d730:	mov	r1, #0
   1d734:	mov	r2, #220	; 0xdc
   1d738:	bl	148dc <memset@plt>
   1d73c:	mov	r0, r5
   1d740:	mov	r1, r6
   1d744:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1d748:	movw	r1, #34358	; 0x8636
   1d74c:	movt	r1, #4
   1d750:	mov	r0, r4
   1d754:	mov	r2, r6
   1d758:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d75c:	movw	r1, #45539	; 0xb1e3
   1d760:	movt	r1, #4
   1d764:	mov	r0, r4
   1d768:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d76c:	ldr	r0, [r4, #220]	; 0xdc
   1d770:	add	r0, r0, #1
   1d774:	str	r0, [r4, #220]	; 0xdc
   1d778:	movw	r1, #33575	; 0x8327
   1d77c:	movt	r1, #4
   1d780:	mov	r0, r4
   1d784:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d788:	ldr	r5, [r5, #20]
   1d78c:	cmp	r5, #0
   1d790:	beq	1d804 <__flatcc_fb_gen_c_json_parser@@Base+0xd5c>
   1d794:	add	r6, sp, #12
   1d798:	add	r7, sp, #8
   1d79c:	movw	r8, #34409	; 0x8669
   1d7a0:	movt	r8, #4
   1d7a4:	movw	r9, #34438	; 0x8686
   1d7a8:	movt	r9, #4
   1d7ac:	b	1d7d8 <__flatcc_fb_gen_c_json_parser@@Base+0xd30>
   1d7b0:	ldr	r2, [r5, #48]	; 0x30
   1d7b4:	ldr	r3, [sp, #12]
   1d7b8:	ldr	r0, [sp, #8]
   1d7bc:	str	r0, [sp]
   1d7c0:	mov	r0, r4
   1d7c4:	mov	r1, r9
   1d7c8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d7cc:	ldr	r5, [r5]
   1d7d0:	cmp	r5, #0
   1d7d4:	beq	1d804 <__flatcc_fb_gen_c_json_parser@@Base+0xd5c>
   1d7d8:	mov	r0, r5
   1d7dc:	mov	r1, r6
   1d7e0:	mov	r2, r7
   1d7e4:	bl	1ec9c <__flatcc_fb_gen_c_json_parser@@Base+0x21f4>
   1d7e8:	ldrh	r0, [r5, #24]
   1d7ec:	cmp	r0, #0
   1d7f0:	bne	1d7b0 <__flatcc_fb_gen_c_json_parser@@Base+0xd08>
   1d7f4:	mov	r0, r4
   1d7f8:	mov	r1, r8
   1d7fc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d800:	b	1d7cc <__flatcc_fb_gen_c_json_parser@@Base+0xd24>
   1d804:	movw	r1, #34468	; 0x86a4
   1d808:	movt	r1, #4
   1d80c:	mov	r0, r4
   1d810:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d814:	ldr	r0, [r4, #220]	; 0xdc
   1d818:	adds	r1, r0, #1
   1d81c:	str	r1, [r4, #220]	; 0xdc
   1d820:	bcs	1d874 <__flatcc_fb_gen_c_json_parser@@Base+0xdcc>
   1d824:	str	r0, [r4, #220]	; 0xdc
   1d828:	movw	r1, #30713	; 0x77f9
   1d82c:	movt	r1, #3
   1d830:	mov	r0, r4
   1d834:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d838:	ldr	r0, [r4, #220]	; 0xdc
   1d83c:	cmp	r0, #0
   1d840:	beq	1d894 <__flatcc_fb_gen_c_json_parser@@Base+0xdec>
   1d844:	sub	r0, r0, #1
   1d848:	str	r0, [r4, #220]	; 0xdc
   1d84c:	movw	r1, #30713	; 0x77f9
   1d850:	movt	r1, #3
   1d854:	mov	r0, r4
   1d858:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d85c:	movw	r1, #21632	; 0x5480
   1d860:	movt	r1, #3
   1d864:	mov	r0, r4
   1d868:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d86c:	sub	sp, fp, #24
   1d870:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d874:	movw	r0, #32324	; 0x7e44
   1d878:	movt	r0, #4
   1d87c:	movw	r1, #32336	; 0x7e50
   1d880:	movt	r1, #4
   1d884:	movw	r3, #34487	; 0x86b7
   1d888:	movt	r3, #4
   1d88c:	movw	r2, #1582	; 0x62e
   1d890:	bl	14984 <__assert_fail@plt>
   1d894:	movw	r0, #32324	; 0x7e44
   1d898:	movt	r0, #4
   1d89c:	movw	r1, #32336	; 0x7e50
   1d8a0:	movt	r1, #4
   1d8a4:	movw	r3, #34487	; 0x86b7
   1d8a8:	movt	r3, #4
   1d8ac:	movw	r2, #1583	; 0x62f
   1d8b0:	bl	14984 <__assert_fail@plt>
   1d8b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d8b8:	add	fp, sp, #24
   1d8bc:	sub	sp, sp, #264	; 0x108
   1d8c0:	mov	r5, r1
   1d8c4:	mov	r4, r0
   1d8c8:	mov	r0, #0
   1d8cc:	str	r0, [sp, #36]	; 0x24
   1d8d0:	vmov.i32	q8, #0	; 0x00000000
   1d8d4:	mov	r0, #12
   1d8d8:	add	r1, sp, #8
   1d8dc:	vst1.64	{d16-d17}, [r1], r0
   1d8e0:	vst1.32	{d16-d17}, [r1]
   1d8e4:	ldrh	r0, [r5, #8]
   1d8e8:	sub	r0, r0, #3
   1d8ec:	uxth	r0, r0
   1d8f0:	cmp	r0, #2
   1d8f4:	bcs	1db10 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1d8f8:	add	r1, sp, #36	; 0x24
   1d8fc:	mov	r0, r5
   1d900:	bl	1ecb8 <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1d904:	str	r0, [sp, #8]
   1d908:	ldr	r7, [sp, #36]	; 0x24
   1d90c:	cmp	r0, #0
   1d910:	bne	1d91c <__flatcc_fb_gen_c_json_parser@@Base+0xe74>
   1d914:	cmp	r7, #1
   1d918:	bge	1db30 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1d91c:	mov	r0, #2
   1d920:	str	r0, [sp, #24]
   1d924:	str	r5, [sp, #20]
   1d928:	movw	r0, #61160	; 0xeee8
   1d92c:	movt	r0, #1
   1d930:	str	r0, [sp, #16]
   1d934:	movw	r0, #60996	; 0xee44
   1d938:	movt	r0, #1
   1d93c:	str	r0, [sp, #12]
   1d940:	add	r6, sp, #40	; 0x28
   1d944:	mov	r0, r6
   1d948:	mov	r1, #0
   1d94c:	mov	r2, #220	; 0xdc
   1d950:	bl	148dc <memset@plt>
   1d954:	mov	r0, r5
   1d958:	mov	r1, r6
   1d95c:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1d960:	movw	r1, #32662	; 0x7f96
   1d964:	movt	r1, #4
   1d968:	mov	r0, r4
   1d96c:	mov	r2, r6
   1d970:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d974:	ldr	r0, [r4, #220]	; 0xdc
   1d978:	add	r0, r0, #2
   1d97c:	str	r0, [r4, #220]	; 0xdc
   1d980:	movw	r1, #34667	; 0x876b
   1d984:	movt	r1, #4
   1d988:	mov	r0, r4
   1d98c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d990:	ldr	r0, [r4, #220]	; 0xdc
   1d994:	cmp	r0, #0
   1d998:	beq	1daf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1d99c:	subs	r1, r0, #1
   1d9a0:	str	r1, [r4, #220]	; 0xdc
   1d9a4:	beq	1daf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1d9a8:	sub	r0, r0, #2
   1d9ac:	str	r0, [r4, #220]	; 0xdc
   1d9b0:	movw	r1, #45539	; 0xb1e3
   1d9b4:	movt	r1, #4
   1d9b8:	mov	r0, r4
   1d9bc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d9c0:	ldr	r0, [r4, #220]	; 0xdc
   1d9c4:	add	r0, r0, #1
   1d9c8:	str	r0, [r4, #220]	; 0xdc
   1d9cc:	cmp	r7, #0
   1d9d0:	beq	1da7c <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   1d9d4:	movw	r1, #34788	; 0x87e4
   1d9d8:	movt	r1, #4
   1d9dc:	mov	r0, r4
   1d9e0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d9e4:	movw	r1, #34817	; 0x8801
   1d9e8:	movt	r1, #4
   1d9ec:	mov	r0, r4
   1d9f0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d9f4:	movw	r1, #34835	; 0x8813
   1d9f8:	movt	r1, #4
   1d9fc:	mov	r0, r4
   1da00:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da04:	movw	r1, #21632	; 0x5480
   1da08:	movt	r1, #3
   1da0c:	mov	r0, r4
   1da10:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da14:	movw	r1, #34847	; 0x881f
   1da18:	movt	r1, #4
   1da1c:	mov	r0, r4
   1da20:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da24:	mov	r0, #0
   1da28:	str	r0, [sp]
   1da2c:	sub	r3, r7, #1
   1da30:	add	r1, sp, #8
   1da34:	mov	r0, r4
   1da38:	mov	r2, #0
   1da3c:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1da40:	movw	r1, #34244	; 0x85c4
   1da44:	movt	r1, #4
   1da48:	mov	r0, r4
   1da4c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da50:	ldr	r0, [r4, #220]	; 0xdc
   1da54:	cmp	r0, #0
   1da58:	bne	1dab8 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1da5c:	movw	r0, #32324	; 0x7e44
   1da60:	movt	r0, #4
   1da64:	movw	r1, #32336	; 0x7e50
   1da68:	movt	r1, #4
   1da6c:	movw	r3, #34550	; 0x86f6
   1da70:	movt	r3, #4
   1da74:	movw	r2, #1278	; 0x4fe
   1da78:	bl	14984 <__assert_fail@plt>
   1da7c:	movw	r1, #34717	; 0x879d
   1da80:	movt	r1, #4
   1da84:	mov	r0, r4
   1da88:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da8c:	movw	r1, #34743	; 0x87b7
   1da90:	movt	r1, #4
   1da94:	mov	r0, r4
   1da98:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da9c:	movw	r1, #34759	; 0x87c7
   1daa0:	movt	r1, #4
   1daa4:	mov	r0, r4
   1daa8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1daac:	ldr	r0, [r4, #220]	; 0xdc
   1dab0:	cmp	r0, #0
   1dab4:	beq	1db80 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   1dab8:	sub	r0, r0, #1
   1dabc:	str	r0, [r4, #220]	; 0xdc
   1dac0:	movw	r1, #30713	; 0x77f9
   1dac4:	movt	r1, #3
   1dac8:	mov	r0, r4
   1dacc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dad0:	movw	r1, #21632	; 0x5480
   1dad4:	movt	r1, #3
   1dad8:	mov	r0, r4
   1dadc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dae0:	ldr	r0, [sp, #8]
   1dae4:	bl	1f4e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1dae8:	sub	sp, fp, #24
   1daec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1daf0:	movw	r0, #32324	; 0x7e44
   1daf4:	movt	r0, #4
   1daf8:	movw	r1, #32336	; 0x7e50
   1dafc:	movt	r1, #4
   1db00:	movw	r3, #34550	; 0x86f6
   1db04:	movt	r3, #4
   1db08:	movw	r2, #1263	; 0x4ef
   1db0c:	bl	14984 <__assert_fail@plt>
   1db10:	movw	r0, #47077	; 0xb7e5
   1db14:	movt	r0, #3
   1db18:	movw	r1, #32336	; 0x7e50
   1db1c:	movt	r1, #4
   1db20:	movw	r3, #34550	; 0x86f6
   1db24:	movt	r3, #4
   1db28:	movw	r2, #1246	; 0x4de
   1db2c:	bl	14984 <__assert_fail@plt>
   1db30:	movw	r0, #4272	; 0x10b0
   1db34:	movt	r0, #6
   1db38:	ldr	r0, [r0]
   1db3c:	movw	r1, #34607	; 0x872f
   1db40:	movt	r1, #4
   1db44:	str	r1, [sp]
   1db48:	movw	r1, #21375	; 0x537f
   1db4c:	movt	r1, #3
   1db50:	movw	r4, #32336	; 0x7e50
   1db54:	movt	r4, #4
   1db58:	mov	r2, r4
   1db5c:	movw	r3, #1249	; 0x4e1
   1db60:	bl	148c4 <fprintf@plt>
   1db64:	movw	r0, #25261	; 0x62ad
   1db68:	movt	r0, #4
   1db6c:	movw	r3, #34550	; 0x86f6
   1db70:	movt	r3, #4
   1db74:	mov	r1, r4
   1db78:	movw	r2, #1249	; 0x4e1
   1db7c:	bl	14984 <__assert_fail@plt>
   1db80:	movw	r0, #32324	; 0x7e44
   1db84:	movt	r0, #4
   1db88:	movw	r1, #32336	; 0x7e50
   1db8c:	movt	r1, #4
   1db90:	movw	r3, #34550	; 0x86f6
   1db94:	movt	r3, #4
   1db98:	movw	r2, #1269	; 0x4f5
   1db9c:	bl	14984 <__assert_fail@plt>
   1dba0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1dba4:	add	fp, sp, #24
   1dba8:	sub	sp, sp, #264	; 0x108
   1dbac:	mov	r5, r1
   1dbb0:	mov	r4, r0
   1dbb4:	vmov.i32	q8, #0	; 0x00000000
   1dbb8:	mov	r0, #12
   1dbbc:	add	r1, sp, #8
   1dbc0:	vst1.64	{d16-d17}, [r1], r0
   1dbc4:	vst1.32	{d16-d17}, [r1]
   1dbc8:	ldrh	r0, [r5, #8]
   1dbcc:	cmp	r0, #1
   1dbd0:	bne	1de30 <__flatcc_fb_gen_c_json_parser@@Base+0x1388>
   1dbd4:	add	r1, sp, #36	; 0x24
   1dbd8:	mov	r0, r5
   1dbdc:	bl	1ecb8 <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1dbe0:	str	r0, [sp, #8]
   1dbe4:	ldr	r7, [sp, #36]	; 0x24
   1dbe8:	cmp	r0, #0
   1dbec:	bne	1dbf8 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1dbf0:	cmp	r7, #1
   1dbf4:	bge	1de50 <__flatcc_fb_gen_c_json_parser@@Base+0x13a8>
   1dbf8:	mov	r0, #1
   1dbfc:	str	r0, [sp, #24]
   1dc00:	str	r5, [sp, #20]
   1dc04:	movw	r0, #64872	; 0xfd68
   1dc08:	movt	r0, #1
   1dc0c:	str	r0, [sp, #16]
   1dc10:	movw	r0, #64700	; 0xfcbc
   1dc14:	movt	r0, #1
   1dc18:	str	r0, [sp, #12]
   1dc1c:	add	r6, sp, #40	; 0x28
   1dc20:	mov	r0, r6
   1dc24:	mov	r1, #0
   1dc28:	mov	r2, #220	; 0xdc
   1dc2c:	bl	148dc <memset@plt>
   1dc30:	mov	r0, r5
   1dc34:	mov	r1, r6
   1dc38:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1dc3c:	movw	r1, #35919	; 0x8c4f
   1dc40:	movt	r1, #4
   1dc44:	mov	r0, r4
   1dc48:	mov	r2, r6
   1dc4c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dc50:	movw	r1, #45539	; 0xb1e3
   1dc54:	movt	r1, #4
   1dc58:	mov	r0, r4
   1dc5c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dc60:	ldr	r0, [r4, #220]	; 0xdc
   1dc64:	add	r0, r0, #1
   1dc68:	str	r0, [r4, #220]	; 0xdc
   1dc6c:	movw	r1, #36046	; 0x8cce
   1dc70:	movt	r1, #4
   1dc74:	mov	r0, r4
   1dc78:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dc7c:	cmp	r7, #1
   1dc80:	blt	1dcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   1dc84:	movw	r1, #36056	; 0x8cd8
   1dc88:	movt	r1, #4
   1dc8c:	mov	r0, r4
   1dc90:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dc94:	movw	r1, #36082	; 0x8cf2
   1dc98:	movt	r1, #4
   1dc9c:	mov	r0, r4
   1dca0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dca4:	movw	r1, #34817	; 0x8801
   1dca8:	movt	r1, #4
   1dcac:	mov	r0, r4
   1dcb0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dcb4:	movw	r1, #34835	; 0x8813
   1dcb8:	movt	r1, #4
   1dcbc:	mov	r0, r4
   1dcc0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dcc4:	movw	r1, #21632	; 0x5480
   1dcc8:	movt	r1, #3
   1dccc:	mov	r0, r4
   1dcd0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dcd4:	movw	r1, #36094	; 0x8cfe
   1dcd8:	movt	r1, #4
   1dcdc:	mov	r0, r4
   1dce0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dce4:	movw	r1, #36155	; 0x8d3b
   1dce8:	movt	r1, #4
   1dcec:	mov	r0, r4
   1dcf0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dcf4:	ldr	r0, [r4, #220]	; 0xdc
   1dcf8:	add	r0, r0, #1
   1dcfc:	str	r0, [r4, #220]	; 0xdc
   1dd00:	cmp	r7, #0
   1dd04:	beq	1dd48 <__flatcc_fb_gen_c_json_parser@@Base+0x12a0>
   1dd08:	movw	r1, #36248	; 0x8d98
   1dd0c:	movt	r1, #4
   1dd10:	mov	r0, r4
   1dd14:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dd18:	movw	r1, #34847	; 0x881f
   1dd1c:	movt	r1, #4
   1dd20:	mov	r0, r4
   1dd24:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dd28:	mov	r0, #0
   1dd2c:	str	r0, [sp]
   1dd30:	sub	r3, r7, #1
   1dd34:	add	r1, sp, #8
   1dd38:	mov	r0, r4
   1dd3c:	mov	r2, #0
   1dd40:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1dd44:	b	1dd68 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   1dd48:	movw	r1, #36170	; 0x8d4a
   1dd4c:	movt	r1, #4
   1dd50:	mov	r0, r4
   1dd54:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dd58:	movw	r1, #36190	; 0x8d5e
   1dd5c:	movt	r1, #4
   1dd60:	mov	r0, r4
   1dd64:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dd68:	movw	r1, #36302	; 0x8dce
   1dd6c:	movt	r1, #4
   1dd70:	mov	r0, r4
   1dd74:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dd78:	ldr	r0, [r4, #220]	; 0xdc
   1dd7c:	cmp	r0, #0
   1dd80:	beq	1dea0 <__flatcc_fb_gen_c_json_parser@@Base+0x13f8>
   1dd84:	sub	r0, r0, #1
   1dd88:	str	r0, [r4, #220]	; 0xdc
   1dd8c:	movw	r1, #30713	; 0x77f9
   1dd90:	movt	r1, #3
   1dd94:	mov	r0, r4
   1dd98:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dd9c:	movw	r1, #34244	; 0x85c4
   1dda0:	movt	r1, #4
   1dda4:	mov	r0, r4
   1dda8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ddac:	cmp	r7, #1
   1ddb0:	blt	1ddec <__flatcc_fb_gen_c_json_parser@@Base+0x1344>
   1ddb4:	ldr	r0, [r4, #220]	; 0xdc
   1ddb8:	mov	r1, #0
   1ddbc:	str	r1, [r4, #220]	; 0xdc
   1ddc0:	str	r0, [r4, #228]	; 0xe4
   1ddc4:	movw	r1, #36362	; 0x8e0a
   1ddc8:	movt	r1, #4
   1ddcc:	mov	r0, r4
   1ddd0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ddd4:	ldr	r0, [r4, #228]	; 0xe4
   1ddd8:	str	r0, [r4, #220]	; 0xdc
   1dddc:	movw	r1, #34272	; 0x85e0
   1dde0:	movt	r1, #4
   1dde4:	mov	r0, r4
   1dde8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ddec:	ldr	r0, [r4, #220]	; 0xdc
   1ddf0:	cmp	r0, #0
   1ddf4:	beq	1dec0 <__flatcc_fb_gen_c_json_parser@@Base+0x1418>
   1ddf8:	sub	r0, r0, #1
   1ddfc:	str	r0, [r4, #220]	; 0xdc
   1de00:	movw	r1, #30713	; 0x77f9
   1de04:	movt	r1, #3
   1de08:	mov	r0, r4
   1de0c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1de10:	movw	r1, #21632	; 0x5480
   1de14:	movt	r1, #3
   1de18:	mov	r0, r4
   1de1c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1de20:	ldr	r0, [sp, #8]
   1de24:	bl	1f4e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1de28:	sub	sp, fp, #24
   1de2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1de30:	movw	r0, #48261	; 0xbc85
   1de34:	movt	r0, #3
   1de38:	movw	r1, #32336	; 0x7e50
   1de3c:	movt	r1, #4
   1de40:	movw	r3, #35853	; 0x8c0d
   1de44:	movt	r3, #4
   1de48:	movw	r2, #1301	; 0x515
   1de4c:	bl	14984 <__assert_fail@plt>
   1de50:	movw	r0, #4272	; 0x10b0
   1de54:	movt	r0, #6
   1de58:	ldr	r0, [r0]
   1de5c:	movw	r1, #34607	; 0x872f
   1de60:	movt	r1, #4
   1de64:	str	r1, [sp]
   1de68:	movw	r1, #21375	; 0x537f
   1de6c:	movt	r1, #3
   1de70:	movw	r4, #32336	; 0x7e50
   1de74:	movt	r4, #4
   1de78:	mov	r2, r4
   1de7c:	movw	r3, #1303	; 0x517
   1de80:	bl	148c4 <fprintf@plt>
   1de84:	movw	r0, #25261	; 0x62ad
   1de88:	movt	r0, #4
   1de8c:	movw	r3, #35853	; 0x8c0d
   1de90:	movt	r3, #4
   1de94:	mov	r1, r4
   1de98:	movw	r2, #1303	; 0x517
   1de9c:	bl	14984 <__assert_fail@plt>
   1dea0:	movw	r0, #32324	; 0x7e44
   1dea4:	movt	r0, #4
   1dea8:	movw	r1, #32336	; 0x7e50
   1deac:	movt	r1, #4
   1deb0:	movw	r3, #35853	; 0x8c0d
   1deb4:	movt	r3, #4
   1deb8:	movw	r2, #1334	; 0x536
   1debc:	bl	14984 <__assert_fail@plt>
   1dec0:	movw	r0, #32324	; 0x7e44
   1dec4:	movt	r0, #4
   1dec8:	movw	r1, #32336	; 0x7e50
   1decc:	movt	r1, #4
   1ded0:	movw	r3, #35853	; 0x8c0d
   1ded4:	movt	r3, #4
   1ded8:	movw	r2, #1343	; 0x53f
   1dedc:	bl	14984 <__assert_fail@plt>
   1dee0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1dee4:	add	fp, sp, #24
   1dee8:	sub	sp, sp, #232	; 0xe8
   1deec:	mov	r4, r0
   1def0:	ldrh	r0, [r1, #8]
   1def4:	cmp	r0, #1
   1def8:	bne	1e0c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1618>
   1defc:	mov	r6, r1
   1df00:	add	r5, sp, #8
   1df04:	mov	r7, #0
   1df08:	mov	r0, r5
   1df0c:	mov	r1, #0
   1df10:	mov	r2, #220	; 0xdc
   1df14:	bl	148dc <memset@plt>
   1df18:	mov	r0, r6
   1df1c:	mov	r1, r5
   1df20:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1df24:	movw	r1, #39160	; 0x98f8
   1df28:	movt	r1, #4
   1df2c:	mov	r0, r4
   1df30:	mov	r2, r5
   1df34:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df38:	movw	r1, #45539	; 0xb1e3
   1df3c:	movt	r1, #4
   1df40:	mov	r0, r4
   1df44:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df48:	ldr	r0, [r4, #220]	; 0xdc
   1df4c:	add	r0, r0, #1
   1df50:	str	r0, [r4, #220]	; 0xdc
   1df54:	movw	r1, #36082	; 0x8cf2
   1df58:	movt	r1, #4
   1df5c:	mov	r0, r4
   1df60:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df64:	movw	r1, #21632	; 0x5480
   1df68:	movt	r1, #3
   1df6c:	mov	r0, r4
   1df70:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df74:	movw	r1, #33562	; 0x831a
   1df78:	movt	r1, #4
   1df7c:	mov	r0, r4
   1df80:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df84:	ldrd	r2, [r6, #112]	; 0x70
   1df88:	ldrh	r0, [r6, #104]	; 0x68
   1df8c:	str	r0, [sp]
   1df90:	movw	r1, #39291	; 0x997b
   1df94:	movt	r1, #4
   1df98:	mov	r0, r4
   1df9c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dfa0:	movw	r1, #37941	; 0x9435
   1dfa4:	movt	r1, #4
   1dfa8:	mov	r0, r4
   1dfac:	mov	r2, r5
   1dfb0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dfb4:	movw	r1, #39367	; 0x99c7
   1dfb8:	movt	r1, #4
   1dfbc:	mov	r0, r4
   1dfc0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dfc4:	movw	r1, #34244	; 0x85c4
   1dfc8:	movt	r1, #4
   1dfcc:	mov	r0, r4
   1dfd0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dfd4:	ldr	r0, [r4, #220]	; 0xdc
   1dfd8:	str	r7, [r4, #220]	; 0xdc
   1dfdc:	str	r0, [r4, #228]	; 0xe4
   1dfe0:	movw	r1, #36362	; 0x8e0a
   1dfe4:	movt	r1, #4
   1dfe8:	mov	r0, r4
   1dfec:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dff0:	ldr	r0, [r4, #228]	; 0xe4
   1dff4:	str	r0, [r4, #220]	; 0xdc
   1dff8:	movw	r1, #34272	; 0x85e0
   1dffc:	movt	r1, #4
   1e000:	mov	r0, r4
   1e004:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e008:	ldr	r0, [r4, #220]	; 0xdc
   1e00c:	cmp	r0, #0
   1e010:	beq	1e0e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1638>
   1e014:	sub	r0, r0, #1
   1e018:	str	r0, [r4, #220]	; 0xdc
   1e01c:	movw	r1, #30713	; 0x77f9
   1e020:	movt	r1, #3
   1e024:	mov	r0, r4
   1e028:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e02c:	movw	r1, #21632	; 0x5480
   1e030:	movt	r1, #3
   1e034:	mov	r0, r4
   1e038:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e03c:	movw	r1, #39448	; 0x9a18
   1e040:	movt	r1, #4
   1e044:	add	r5, sp, #8
   1e048:	mov	r0, r4
   1e04c:	mov	r2, r5
   1e050:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e054:	movw	r1, #45539	; 0xb1e3
   1e058:	movt	r1, #4
   1e05c:	mov	r0, r4
   1e060:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e064:	ldr	r0, [r4, #220]	; 0xdc
   1e068:	add	r0, r0, #1
   1e06c:	str	r0, [r4, #220]	; 0xdc
   1e070:	movw	r1, #39596	; 0x9aac
   1e074:	movt	r1, #4
   1e078:	mov	r0, r4
   1e07c:	mov	r2, r5
   1e080:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e084:	ldr	r0, [r4, #220]	; 0xdc
   1e088:	cmp	r0, #0
   1e08c:	beq	1e100 <__flatcc_fb_gen_c_json_parser@@Base+0x1658>
   1e090:	sub	r0, r0, #1
   1e094:	str	r0, [r4, #220]	; 0xdc
   1e098:	movw	r1, #30713	; 0x77f9
   1e09c:	movt	r1, #3
   1e0a0:	mov	r0, r4
   1e0a4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e0a8:	movw	r1, #21632	; 0x5480
   1e0ac:	movt	r1, #3
   1e0b0:	mov	r0, r4
   1e0b4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e0b8:	sub	sp, fp, #24
   1e0bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e0c0:	movw	r0, #48261	; 0xbc85
   1e0c4:	movt	r0, #3
   1e0c8:	movw	r1, #32336	; 0x7e50
   1e0cc:	movt	r1, #4
   1e0d0:	movw	r3, #39101	; 0x98bd
   1e0d4:	movt	r3, #4
   1e0d8:	movw	r2, #1353	; 0x549
   1e0dc:	bl	14984 <__assert_fail@plt>
   1e0e0:	movw	r0, #32324	; 0x7e44
   1e0e4:	movt	r0, #4
   1e0e8:	movw	r1, #32336	; 0x7e50
   1e0ec:	movt	r1, #4
   1e0f0:	movw	r3, #39101	; 0x98bd
   1e0f4:	movt	r3, #4
   1e0f8:	movw	r2, #1370	; 0x55a
   1e0fc:	bl	14984 <__assert_fail@plt>
   1e100:	movw	r0, #32324	; 0x7e44
   1e104:	movt	r0, #4
   1e108:	movw	r1, #32336	; 0x7e50
   1e10c:	movt	r1, #4
   1e110:	movw	r3, #39101	; 0x98bd
   1e114:	movt	r3, #4
   1e118:	mov	r2, #1376	; 0x560
   1e11c:	bl	14984 <__assert_fail@plt>
   1e120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e124:	add	fp, sp, #28
   1e128:	sub	sp, sp, #268	; 0x10c
   1e12c:	mov	r7, r1
   1e130:	mov	r4, r0
   1e134:	vmov.i32	q8, #0	; 0x00000000
   1e138:	mov	r0, #12
   1e13c:	add	r1, sp, #8
   1e140:	vst1.64	{d16-d17}, [r1], r0
   1e144:	vst1.32	{d16-d17}, [r1]
   1e148:	ldrh	r0, [r7, #8]
   1e14c:	cmp	r0, #0
   1e150:	bne	1e5fc <__flatcc_fb_gen_c_json_parser@@Base+0x1b54>
   1e154:	add	r1, sp, #36	; 0x24
   1e158:	mov	r0, r7
   1e15c:	bl	1ecb8 <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1e160:	str	r0, [sp, #8]
   1e164:	ldr	sl, [sp, #36]	; 0x24
   1e168:	cmp	r0, #0
   1e16c:	bne	1e178 <__flatcc_fb_gen_c_json_parser@@Base+0x16d0>
   1e170:	cmp	sl, #1
   1e174:	bge	1e61c <__flatcc_fb_gen_c_json_parser@@Base+0x1b74>
   1e178:	mov	r1, #0
   1e17c:	str	r1, [sp, #24]
   1e180:	str	r7, [sp, #20]
   1e184:	str	r1, [sp, #28]
   1e188:	movw	r1, #64872	; 0xfd68
   1e18c:	movt	r1, #1
   1e190:	str	r1, [sp, #16]
   1e194:	movw	r1, #64700	; 0xfcbc
   1e198:	movt	r1, #1
   1e19c:	str	r1, [sp, #12]
   1e1a0:	cmp	sl, #1
   1e1a4:	blt	1e1cc <__flatcc_fb_gen_c_json_parser@@Base+0x1724>
   1e1a8:	add	r1, r0, #12
   1e1ac:	ldr	r0, [sp, #28]
   1e1b0:	mov	r2, sl
   1e1b4:	ldr	r3, [r1], #16
   1e1b8:	cmp	r3, #0
   1e1bc:	addne	r0, r0, #1
   1e1c0:	subs	r2, r2, #1
   1e1c4:	bne	1e1b4 <__flatcc_fb_gen_c_json_parser@@Base+0x170c>
   1e1c8:	str	r0, [sp, #28]
   1e1cc:	add	r6, sp, #40	; 0x28
   1e1d0:	mov	r0, r6
   1e1d4:	mov	r1, #0
   1e1d8:	mov	r2, #220	; 0xdc
   1e1dc:	bl	148dc <memset@plt>
   1e1e0:	mov	r0, r7
   1e1e4:	mov	r1, r6
   1e1e8:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1e1ec:	movw	r1, #39751	; 0x9b47
   1e1f0:	movt	r1, #4
   1e1f4:	mov	r0, r4
   1e1f8:	mov	r2, r6
   1e1fc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e200:	movw	r1, #45539	; 0xb1e3
   1e204:	movt	r1, #4
   1e208:	mov	r0, r4
   1e20c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e210:	ldr	r0, [r4, #220]	; 0xdc
   1e214:	add	r0, r0, #1
   1e218:	str	r0, [r4, #220]	; 0xdc
   1e21c:	movw	r1, #36046	; 0x8cce
   1e220:	movt	r1, #4
   1e224:	mov	r0, r4
   1e228:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e22c:	cmp	sl, #1
   1e230:	blt	1e274 <__flatcc_fb_gen_c_json_parser@@Base+0x17cc>
   1e234:	movw	r1, #36082	; 0x8cf2
   1e238:	movt	r1, #4
   1e23c:	mov	r0, r4
   1e240:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e244:	movw	r1, #39881	; 0x9bc9
   1e248:	movt	r1, #4
   1e24c:	mov	r0, r4
   1e250:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e254:	movw	r1, #34817	; 0x8801
   1e258:	movt	r1, #4
   1e25c:	mov	r0, r4
   1e260:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e264:	movw	r1, #34835	; 0x8813
   1e268:	movt	r1, #4
   1e26c:	mov	r0, r4
   1e270:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e274:	ldr	r0, [sp, #28]
   1e278:	cmp	r0, #0
   1e27c:	beq	1e290 <__flatcc_fb_gen_c_json_parser@@Base+0x17e8>
   1e280:	movw	r1, #39914	; 0x9bea
   1e284:	movt	r1, #4
   1e288:	mov	r0, r4
   1e28c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e290:	movw	r1, #21632	; 0x5480
   1e294:	movt	r1, #3
   1e298:	mov	r0, r4
   1e29c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e2a0:	movw	r1, #33562	; 0x831a
   1e2a4:	movt	r1, #4
   1e2a8:	mov	r0, r4
   1e2ac:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e2b0:	ldrd	r2, [r7, #96]	; 0x60
   1e2b4:	movw	r1, #39931	; 0x9bfb
   1e2b8:	movt	r1, #4
   1e2bc:	mov	r0, r4
   1e2c0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e2c4:	ldr	r2, [sp, #28]
   1e2c8:	cmp	r2, #0
   1e2cc:	beq	1e2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x183c>
   1e2d0:	asr	r3, r2, #31
   1e2d4:	movw	r1, #39992	; 0x9c38
   1e2d8:	movt	r1, #4
   1e2dc:	mov	r0, r4
   1e2e0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e2e4:	movw	r1, #36094	; 0x8cfe
   1e2e8:	movt	r1, #4
   1e2ec:	mov	r0, r4
   1e2f0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e2f4:	movw	r1, #36155	; 0x8d3b
   1e2f8:	movt	r1, #4
   1e2fc:	mov	r0, r4
   1e300:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e304:	ldr	r0, [r4, #220]	; 0xdc
   1e308:	add	r0, r0, #1
   1e30c:	str	r0, [r4, #220]	; 0xdc
   1e310:	movw	r1, #36248	; 0x8d98
   1e314:	movt	r1, #4
   1e318:	mov	r0, r4
   1e31c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e320:	cmp	sl, #1
   1e324:	blt	1e358 <__flatcc_fb_gen_c_json_parser@@Base+0x18b0>
   1e328:	movw	r1, #34847	; 0x881f
   1e32c:	movt	r1, #4
   1e330:	mov	r0, r4
   1e334:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e338:	mov	r0, #0
   1e33c:	str	r0, [sp]
   1e340:	sub	r3, sl, #1
   1e344:	add	r1, sp, #8
   1e348:	mov	r0, r4
   1e34c:	mov	r2, #0
   1e350:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1e354:	b	1e378 <__flatcc_fb_gen_c_json_parser@@Base+0x18d0>
   1e358:	movw	r1, #40083	; 0x9c93
   1e35c:	movt	r1, #4
   1e360:	mov	r0, r4
   1e364:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e368:	movw	r1, #36190	; 0x8d5e
   1e36c:	movt	r1, #4
   1e370:	mov	r0, r4
   1e374:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e378:	movw	r1, #40110	; 0x9cae
   1e37c:	movt	r1, #4
   1e380:	mov	r0, r4
   1e384:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e388:	ldr	r0, [r4, #220]	; 0xdc
   1e38c:	cmp	r0, #0
   1e390:	beq	1e66c <__flatcc_fb_gen_c_json_parser@@Base+0x1bc4>
   1e394:	sub	r0, r0, #1
   1e398:	str	r0, [r4, #220]	; 0xdc
   1e39c:	movw	r1, #30713	; 0x77f9
   1e3a0:	movt	r1, #3
   1e3a4:	mov	r0, r4
   1e3a8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e3ac:	movw	r1, #40169	; 0x9ce9
   1e3b0:	movt	r1, #4
   1e3b4:	mov	r0, r4
   1e3b8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e3bc:	cmp	sl, #1
   1e3c0:	blt	1e4c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a20>
   1e3c4:	mov	r6, #0
   1e3c8:	mov	r5, #1
   1e3cc:	movw	r9, #40255	; 0x9d3f
   1e3d0:	movt	r9, #4
   1e3d4:	movw	r8, #40198	; 0x9d06
   1e3d8:	movt	r8, #4
   1e3dc:	b	1e3f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1950>
   1e3e0:	mov	r1, r9
   1e3e4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e3e8:	mov	r5, #0
   1e3ec:	add	r6, r6, #1
   1e3f0:	cmp	sl, r6
   1e3f4:	beq	1e44c <__flatcc_fb_gen_c_json_parser@@Base+0x19a4>
   1e3f8:	ldr	r0, [sp, #8]
   1e3fc:	add	r0, r0, r6, lsl #4
   1e400:	ldr	r7, [r0, #8]
   1e404:	ldrh	r0, [r7, #72]	; 0x48
   1e408:	and	r0, r0, #260	; 0x104
   1e40c:	cmp	r0, #256	; 0x100
   1e410:	bne	1e3ec <__flatcc_fb_gen_c_json_parser@@Base+0x1944>
   1e414:	mov	r0, r7
   1e418:	bl	1f4f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1e41c:	ldrd	r2, [r7, #96]	; 0x60
   1e420:	subs	r2, r2, r0
   1e424:	sbc	r3, r3, r0, asr #31
   1e428:	mov	r0, r4
   1e42c:	cmp	r5, #0
   1e430:	beq	1e3e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1938>
   1e434:	mov	r1, r8
   1e438:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e43c:	ldr	r0, [r4, #220]	; 0xdc
   1e440:	add	r0, r0, #1
   1e444:	str	r0, [r4, #220]	; 0xdc
   1e448:	b	1e3e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1940>
   1e44c:	cmp	r5, #0
   1e450:	bne	1e4c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a20>
   1e454:	ldr	r0, [r4, #220]	; 0xdc
   1e458:	cmp	r0, #0
   1e45c:	beq	1e6cc <__flatcc_fb_gen_c_json_parser@@Base+0x1c24>
   1e460:	sub	r0, r0, #1
   1e464:	str	r0, [r4, #220]	; 0xdc
   1e468:	movw	r1, #37714	; 0x9352
   1e46c:	movt	r1, #4
   1e470:	mov	r0, r4
   1e474:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e478:	ldr	r0, [r4, #220]	; 0xdc
   1e47c:	add	r0, r0, #1
   1e480:	str	r0, [r4, #220]	; 0xdc
   1e484:	movw	r1, #40312	; 0x9d78
   1e488:	movt	r1, #4
   1e48c:	mov	r0, r4
   1e490:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e494:	movw	r1, #37237	; 0x9175
   1e498:	movt	r1, #4
   1e49c:	mov	r0, r4
   1e4a0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e4a4:	ldr	r0, [r4, #220]	; 0xdc
   1e4a8:	cmp	r0, #0
   1e4ac:	beq	1e6ec <__flatcc_fb_gen_c_json_parser@@Base+0x1c44>
   1e4b0:	sub	r0, r0, #1
   1e4b4:	str	r0, [r4, #220]	; 0xdc
   1e4b8:	movw	r1, #30713	; 0x77f9
   1e4bc:	movt	r1, #3
   1e4c0:	mov	r0, r4
   1e4c4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e4c8:	ldr	r0, [sp, #28]
   1e4cc:	cmp	r0, #0
   1e4d0:	beq	1e4e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a3c>
   1e4d4:	movw	r1, #40398	; 0x9dce
   1e4d8:	movt	r1, #4
   1e4dc:	mov	r0, r4
   1e4e0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e4e4:	movw	r1, #40465	; 0x9e11
   1e4e8:	movt	r1, #4
   1e4ec:	mov	r0, r4
   1e4f0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e4f4:	movw	r1, #34244	; 0x85c4
   1e4f8:	movt	r1, #4
   1e4fc:	mov	r0, r4
   1e500:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e504:	ldr	r0, [r4, #220]	; 0xdc
   1e508:	mov	r1, #0
   1e50c:	str	r1, [r4, #220]	; 0xdc
   1e510:	str	r0, [r4, #228]	; 0xe4
   1e514:	movw	r1, #36362	; 0x8e0a
   1e518:	movt	r1, #4
   1e51c:	mov	r0, r4
   1e520:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e524:	ldr	r0, [r4, #228]	; 0xe4
   1e528:	str	r0, [r4, #220]	; 0xdc
   1e52c:	movw	r1, #34272	; 0x85e0
   1e530:	movt	r1, #4
   1e534:	mov	r0, r4
   1e538:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e53c:	ldr	r0, [r4, #220]	; 0xdc
   1e540:	cmp	r0, #0
   1e544:	beq	1e68c <__flatcc_fb_gen_c_json_parser@@Base+0x1be4>
   1e548:	sub	r0, r0, #1
   1e54c:	str	r0, [r4, #220]	; 0xdc
   1e550:	movw	r1, #30713	; 0x77f9
   1e554:	movt	r1, #3
   1e558:	mov	r0, r4
   1e55c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e560:	movw	r1, #21632	; 0x5480
   1e564:	movt	r1, #3
   1e568:	mov	r0, r4
   1e56c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e570:	movw	r1, #39448	; 0x9a18
   1e574:	movt	r1, #4
   1e578:	add	r5, sp, #40	; 0x28
   1e57c:	mov	r0, r4
   1e580:	mov	r2, r5
   1e584:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e588:	movw	r1, #45539	; 0xb1e3
   1e58c:	movt	r1, #4
   1e590:	mov	r0, r4
   1e594:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e598:	ldr	r0, [r4, #220]	; 0xdc
   1e59c:	add	r0, r0, #1
   1e5a0:	str	r0, [r4, #220]	; 0xdc
   1e5a4:	movw	r1, #40531	; 0x9e53
   1e5a8:	movt	r1, #4
   1e5ac:	mov	r0, r4
   1e5b0:	mov	r2, r5
   1e5b4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e5b8:	ldr	r0, [r4, #220]	; 0xdc
   1e5bc:	cmp	r0, #0
   1e5c0:	beq	1e6ac <__flatcc_fb_gen_c_json_parser@@Base+0x1c04>
   1e5c4:	sub	r0, r0, #1
   1e5c8:	str	r0, [r4, #220]	; 0xdc
   1e5cc:	movw	r1, #30713	; 0x77f9
   1e5d0:	movt	r1, #3
   1e5d4:	mov	r0, r4
   1e5d8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e5dc:	movw	r1, #21632	; 0x5480
   1e5e0:	movt	r1, #3
   1e5e4:	mov	r0, r4
   1e5e8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e5ec:	ldr	r0, [sp, #8]
   1e5f0:	bl	1f4e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1e5f4:	sub	sp, fp, #28
   1e5f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e5fc:	movw	r0, #46528	; 0xb5c0
   1e600:	movt	r0, #3
   1e604:	movw	r1, #32336	; 0x7e50
   1e608:	movt	r1, #4
   1e60c:	movw	r3, #39693	; 0x9b0d
   1e610:	movt	r3, #4
   1e614:	movw	r2, #1390	; 0x56e
   1e618:	bl	14984 <__assert_fail@plt>
   1e61c:	movw	r0, #4272	; 0x10b0
   1e620:	movt	r0, #6
   1e624:	ldr	r0, [r0]
   1e628:	movw	r1, #34607	; 0x872f
   1e62c:	movt	r1, #4
   1e630:	str	r1, [sp]
   1e634:	movw	r1, #21375	; 0x537f
   1e638:	movt	r1, #3
   1e63c:	movw	r4, #32336	; 0x7e50
   1e640:	movt	r4, #4
   1e644:	mov	r2, r4
   1e648:	mov	r3, #1392	; 0x570
   1e64c:	bl	148c4 <fprintf@plt>
   1e650:	movw	r0, #25261	; 0x62ad
   1e654:	movt	r0, #4
   1e658:	movw	r3, #39693	; 0x9b0d
   1e65c:	movt	r3, #4
   1e660:	mov	r1, r4
   1e664:	mov	r2, #1392	; 0x570
   1e668:	bl	14984 <__assert_fail@plt>
   1e66c:	movw	r0, #32324	; 0x7e44
   1e670:	movt	r0, #4
   1e674:	movw	r1, #32336	; 0x7e50
   1e678:	movt	r1, #4
   1e67c:	movw	r3, #39693	; 0x9b0d
   1e680:	movt	r3, #4
   1e684:	movw	r2, #1438	; 0x59e
   1e688:	bl	14984 <__assert_fail@plt>
   1e68c:	movw	r0, #32324	; 0x7e44
   1e690:	movt	r0, #4
   1e694:	movw	r1, #32336	; 0x7e50
   1e698:	movt	r1, #4
   1e69c:	movw	r3, #39693	; 0x9b0d
   1e6a0:	movt	r3, #4
   1e6a4:	movw	r2, #1473	; 0x5c1
   1e6a8:	bl	14984 <__assert_fail@plt>
   1e6ac:	movw	r0, #32324	; 0x7e44
   1e6b0:	movt	r0, #4
   1e6b4:	movw	r1, #32336	; 0x7e50
   1e6b8:	movt	r1, #4
   1e6bc:	movw	r3, #39693	; 0x9b0d
   1e6c0:	movt	r3, #4
   1e6c4:	movw	r2, #1479	; 0x5c7
   1e6c8:	bl	14984 <__assert_fail@plt>
   1e6cc:	movw	r0, #32324	; 0x7e44
   1e6d0:	movt	r0, #4
   1e6d4:	movw	r1, #32336	; 0x7e50
   1e6d8:	movt	r1, #4
   1e6dc:	movw	r3, #39693	; 0x9b0d
   1e6e0:	movt	r3, #4
   1e6e4:	movw	r2, #1458	; 0x5b2
   1e6e8:	bl	14984 <__assert_fail@plt>
   1e6ec:	movw	r0, #32324	; 0x7e44
   1e6f0:	movt	r0, #4
   1e6f4:	movw	r1, #32336	; 0x7e50
   1e6f8:	movt	r1, #4
   1e6fc:	movw	r3, #39693	; 0x9b0d
   1e700:	movt	r3, #4
   1e704:	movw	r2, #1461	; 0x5b5
   1e708:	bl	14984 <__assert_fail@plt>
   1e70c:	push	{r4, r5, r6, sl, fp, lr}
   1e710:	add	fp, sp, #16
   1e714:	sub	sp, sp, #240	; 0xf0
   1e718:	mov	r5, r1
   1e71c:	mov	r4, r0
   1e720:	mov	r6, #0
   1e724:	str	r6, [fp, #-20]	; 0xffffffec
   1e728:	vmov.i32	q8, #0	; 0x00000000
   1e72c:	sub	r0, fp, #48	; 0x30
   1e730:	add	r0, r0, #4
   1e734:	vst1.32	{d16-d17}, [r0]
   1e738:	str	r6, [fp, #-24]	; 0xffffffe8
   1e73c:	str	r6, [fp, #-28]	; 0xffffffe4
   1e740:	add	r1, sp, #4
   1e744:	mov	r0, r5
   1e748:	bl	15ae4 <__flatcc_fb_copy_scope@@Base>
   1e74c:	ldr	r0, [r4, #208]	; 0xd0
   1e750:	sub	r2, fp, #20
   1e754:	mov	r1, r5
   1e758:	bl	20b10 <__flatcc_fb_gen_c_json_parser@@Base+0x4068>
   1e75c:	str	r0, [fp, #-48]	; 0xffffffd0
   1e760:	ldr	r5, [fp, #-20]	; 0xffffffec
   1e764:	cmp	r0, #0
   1e768:	bne	1e774 <__flatcc_fb_gen_c_json_parser@@Base+0x1ccc>
   1e76c:	cmp	r5, #1
   1e770:	bge	1e940 <__flatcc_fb_gen_c_json_parser@@Base+0x1e98>
   1e774:	mov	r0, #3
   1e778:	str	r0, [fp, #-32]	; 0xffffffe0
   1e77c:	str	r6, [fp, #-36]	; 0xffffffdc
   1e780:	movw	r0, #3140	; 0xc44
   1e784:	movt	r0, #2
   1e788:	str	r0, [fp, #-40]	; 0xffffffd8
   1e78c:	movw	r0, #2984	; 0xba8
   1e790:	movt	r0, #2
   1e794:	str	r0, [fp, #-44]	; 0xffffffd4
   1e798:	ldr	r0, [r4, #208]	; 0xd0
   1e79c:	ldr	r2, [r0, #160]	; 0xa0
   1e7a0:	movw	r1, #33310	; 0x821e
   1e7a4:	movt	r1, #4
   1e7a8:	add	r3, sp, #4
   1e7ac:	mov	r0, r4
   1e7b0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e7b4:	ldr	r0, [r4, #220]	; 0xdc
   1e7b8:	add	r0, r0, #2
   1e7bc:	str	r0, [r4, #220]	; 0xdc
   1e7c0:	movw	r1, #40676	; 0x9ee4
   1e7c4:	movt	r1, #4
   1e7c8:	mov	r0, r4
   1e7cc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e7d0:	ldr	r0, [r4, #220]	; 0xdc
   1e7d4:	cmp	r0, #0
   1e7d8:	beq	1e920 <__flatcc_fb_gen_c_json_parser@@Base+0x1e78>
   1e7dc:	subs	r1, r0, #1
   1e7e0:	str	r1, [r4, #220]	; 0xdc
   1e7e4:	beq	1e920 <__flatcc_fb_gen_c_json_parser@@Base+0x1e78>
   1e7e8:	sub	r0, r0, #2
   1e7ec:	str	r0, [r4, #220]	; 0xdc
   1e7f0:	movw	r1, #45539	; 0xb1e3
   1e7f4:	movt	r1, #4
   1e7f8:	mov	r0, r4
   1e7fc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e800:	ldr	r0, [r4, #220]	; 0xdc
   1e804:	add	r0, r0, #1
   1e808:	str	r0, [r4, #220]	; 0xdc
   1e80c:	cmp	r5, #0
   1e810:	beq	1e8bc <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   1e814:	movw	r1, #34788	; 0x87e4
   1e818:	movt	r1, #4
   1e81c:	mov	r0, r4
   1e820:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e824:	movw	r1, #34817	; 0x8801
   1e828:	movt	r1, #4
   1e82c:	mov	r0, r4
   1e830:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e834:	movw	r1, #34835	; 0x8813
   1e838:	movt	r1, #4
   1e83c:	mov	r0, r4
   1e840:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e844:	movw	r1, #21632	; 0x5480
   1e848:	movt	r1, #3
   1e84c:	mov	r0, r4
   1e850:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e854:	movw	r1, #34847	; 0x881f
   1e858:	movt	r1, #4
   1e85c:	mov	r0, r4
   1e860:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e864:	mov	r0, #0
   1e868:	str	r0, [sp]
   1e86c:	sub	r3, r5, #1
   1e870:	sub	r1, fp, #48	; 0x30
   1e874:	mov	r0, r4
   1e878:	mov	r2, #0
   1e87c:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1e880:	movw	r1, #34244	; 0x85c4
   1e884:	movt	r1, #4
   1e888:	mov	r0, r4
   1e88c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e890:	ldr	r0, [r4, #220]	; 0xdc
   1e894:	cmp	r0, #0
   1e898:	bne	1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   1e89c:	movw	r0, #32324	; 0x7e44
   1e8a0:	movt	r0, #4
   1e8a4:	movw	r1, #32336	; 0x7e50
   1e8a8:	movt	r1, #4
   1e8ac:	movw	r3, #40626	; 0x9eb2
   1e8b0:	movt	r3, #4
   1e8b4:	movw	r2, #1166	; 0x48e
   1e8b8:	bl	14984 <__assert_fail@plt>
   1e8bc:	movw	r1, #40726	; 0x9f16
   1e8c0:	movt	r1, #4
   1e8c4:	mov	r0, r4
   1e8c8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e8cc:	movw	r1, #34759	; 0x87c7
   1e8d0:	movt	r1, #4
   1e8d4:	mov	r0, r4
   1e8d8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e8dc:	ldr	r0, [r4, #220]	; 0xdc
   1e8e0:	cmp	r0, #0
   1e8e4:	beq	1e990 <__flatcc_fb_gen_c_json_parser@@Base+0x1ee8>
   1e8e8:	sub	r0, r0, #1
   1e8ec:	str	r0, [r4, #220]	; 0xdc
   1e8f0:	movw	r1, #30713	; 0x77f9
   1e8f4:	movt	r1, #3
   1e8f8:	mov	r0, r4
   1e8fc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e900:	movw	r1, #21632	; 0x5480
   1e904:	movt	r1, #3
   1e908:	mov	r0, r4
   1e90c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e910:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e914:	bl	1f4e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1e918:	sub	sp, fp, #16
   1e91c:	pop	{r4, r5, r6, sl, fp, pc}
   1e920:	movw	r0, #32324	; 0x7e44
   1e924:	movt	r0, #4
   1e928:	movw	r1, #32336	; 0x7e50
   1e92c:	movt	r1, #4
   1e930:	movw	r3, #40626	; 0x9eb2
   1e934:	movt	r3, #4
   1e938:	mov	r2, #1152	; 0x480
   1e93c:	bl	14984 <__assert_fail@plt>
   1e940:	movw	r0, #4272	; 0x10b0
   1e944:	movt	r0, #6
   1e948:	ldr	r0, [r0]
   1e94c:	movw	r1, #34607	; 0x872f
   1e950:	movt	r1, #4
   1e954:	str	r1, [sp]
   1e958:	movw	r1, #21375	; 0x537f
   1e95c:	movt	r1, #3
   1e960:	movw	r4, #32336	; 0x7e50
   1e964:	movt	r4, #4
   1e968:	mov	r2, r4
   1e96c:	movw	r3, #1140	; 0x474
   1e970:	bl	148c4 <fprintf@plt>
   1e974:	movw	r0, #25261	; 0x62ad
   1e978:	movt	r0, #4
   1e97c:	movw	r3, #40626	; 0x9eb2
   1e980:	movt	r3, #4
   1e984:	mov	r1, r4
   1e988:	movw	r2, #1140	; 0x474
   1e98c:	bl	14984 <__assert_fail@plt>
   1e990:	movw	r0, #32324	; 0x7e44
   1e994:	movt	r0, #4
   1e998:	movw	r1, #32336	; 0x7e50
   1e99c:	movt	r1, #4
   1e9a0:	movw	r3, #40626	; 0x9eb2
   1e9a4:	movt	r3, #4
   1e9a8:	movw	r2, #1157	; 0x485
   1e9ac:	bl	14984 <__assert_fail@plt>
   1e9b0:	push	{r4, r5, fp, lr}
   1e9b4:	add	fp, sp, #8
   1e9b8:	sub	sp, sp, #80	; 0x50
   1e9bc:	mov	r4, r0
   1e9c0:	mov	r0, #0
   1e9c4:	str	r0, [fp, #-12]
   1e9c8:	vmov.i32	q8, #0	; 0x00000000
   1e9cc:	mov	r0, #12
   1e9d0:	sub	r1, fp, #40	; 0x28
   1e9d4:	vst1.64	{d16-d17}, [r1], r0
   1e9d8:	vst1.32	{d16-d17}, [r1]
   1e9dc:	ldr	r1, [r4, #208]	; 0xd0
   1e9e0:	ldr	r2, [r1, #60]	; 0x3c
   1e9e4:	add	r0, sp, #4
   1e9e8:	bl	20d9c <__flatcc_fb_gen_c_json_parser@@Base+0x42f4>
   1e9ec:	cmp	r0, #0
   1e9f0:	beq	1e9fc <__flatcc_fb_gen_c_json_parser@@Base+0x1f54>
   1e9f4:	sub	sp, fp, #8
   1e9f8:	pop	{r4, r5, fp, pc}
   1e9fc:	add	r0, sp, #4
   1ea00:	sub	r1, fp, #12
   1ea04:	bl	20ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x4400>
   1ea08:	str	r0, [fp, #-40]	; 0xffffffd8
   1ea0c:	ldr	r5, [fp, #-12]
   1ea10:	cmp	r0, #0
   1ea14:	bne	1ea20 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   1ea18:	cmp	r5, #1
   1ea1c:	bge	1ebf4 <__flatcc_fb_gen_c_json_parser@@Base+0x214c>
   1ea20:	mov	r0, #4
   1ea24:	str	r0, [fp, #-24]	; 0xffffffe8
   1ea28:	mov	r0, #0
   1ea2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea30:	movw	r0, #3140	; 0xc44
   1ea34:	movt	r0, #2
   1ea38:	str	r0, [fp, #-32]	; 0xffffffe0
   1ea3c:	movw	r0, #2984	; 0xba8
   1ea40:	movt	r0, #2
   1ea44:	str	r0, [fp, #-36]	; 0xffffffdc
   1ea48:	ldr	r0, [r4, #208]	; 0xd0
   1ea4c:	ldr	r2, [r0, #160]	; 0xa0
   1ea50:	movw	r1, #33203	; 0x81b3
   1ea54:	movt	r1, #4
   1ea58:	mov	r0, r4
   1ea5c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea60:	ldr	r0, [r4, #220]	; 0xdc
   1ea64:	add	r0, r0, #2
   1ea68:	str	r0, [r4, #220]	; 0xdc
   1ea6c:	movw	r1, #40676	; 0x9ee4
   1ea70:	movt	r1, #4
   1ea74:	mov	r0, r4
   1ea78:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea7c:	ldr	r0, [r4, #220]	; 0xdc
   1ea80:	cmp	r0, #0
   1ea84:	beq	1ebd4 <__flatcc_fb_gen_c_json_parser@@Base+0x212c>
   1ea88:	subs	r1, r0, #1
   1ea8c:	str	r1, [r4, #220]	; 0xdc
   1ea90:	beq	1ebd4 <__flatcc_fb_gen_c_json_parser@@Base+0x212c>
   1ea94:	sub	r0, r0, #2
   1ea98:	str	r0, [r4, #220]	; 0xdc
   1ea9c:	movw	r1, #45539	; 0xb1e3
   1eaa0:	movt	r1, #4
   1eaa4:	mov	r0, r4
   1eaa8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eaac:	ldr	r0, [r4, #220]	; 0xdc
   1eab0:	add	r0, r0, #1
   1eab4:	str	r0, [r4, #220]	; 0xdc
   1eab8:	cmp	r5, #0
   1eabc:	beq	1eb68 <__flatcc_fb_gen_c_json_parser@@Base+0x20c0>
   1eac0:	movw	r1, #34788	; 0x87e4
   1eac4:	movt	r1, #4
   1eac8:	mov	r0, r4
   1eacc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ead0:	movw	r1, #34817	; 0x8801
   1ead4:	movt	r1, #4
   1ead8:	mov	r0, r4
   1eadc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eae0:	movw	r1, #34835	; 0x8813
   1eae4:	movt	r1, #4
   1eae8:	mov	r0, r4
   1eaec:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eaf0:	movw	r1, #21632	; 0x5480
   1eaf4:	movt	r1, #3
   1eaf8:	mov	r0, r4
   1eafc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eb00:	movw	r1, #34847	; 0x881f
   1eb04:	movt	r1, #4
   1eb08:	mov	r0, r4
   1eb0c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eb10:	mov	r0, #0
   1eb14:	str	r0, [sp]
   1eb18:	sub	r3, r5, #1
   1eb1c:	sub	r1, fp, #40	; 0x28
   1eb20:	mov	r0, r4
   1eb24:	mov	r2, #0
   1eb28:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1eb2c:	movw	r1, #34244	; 0x85c4
   1eb30:	movt	r1, #4
   1eb34:	mov	r0, r4
   1eb38:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eb3c:	ldr	r0, [r4, #220]	; 0xdc
   1eb40:	cmp	r0, #0
   1eb44:	bne	1eb94 <__flatcc_fb_gen_c_json_parser@@Base+0x20ec>
   1eb48:	movw	r0, #32324	; 0x7e44
   1eb4c:	movt	r0, #4
   1eb50:	movw	r1, #32336	; 0x7e50
   1eb54:	movt	r1, #4
   1eb58:	movw	r3, #41068	; 0xa06c
   1eb5c:	movt	r3, #4
   1eb60:	movw	r2, #1219	; 0x4c3
   1eb64:	bl	14984 <__assert_fail@plt>
   1eb68:	movw	r1, #41111	; 0xa097
   1eb6c:	movt	r1, #4
   1eb70:	mov	r0, r4
   1eb74:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eb78:	movw	r1, #34759	; 0x87c7
   1eb7c:	movt	r1, #4
   1eb80:	mov	r0, r4
   1eb84:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eb88:	ldr	r0, [r4, #220]	; 0xdc
   1eb8c:	cmp	r0, #0
   1eb90:	beq	1ec4c <__flatcc_fb_gen_c_json_parser@@Base+0x21a4>
   1eb94:	sub	r0, r0, #1
   1eb98:	str	r0, [r4, #220]	; 0xdc
   1eb9c:	movw	r1, #30713	; 0x77f9
   1eba0:	movt	r1, #3
   1eba4:	mov	r0, r4
   1eba8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ebac:	movw	r1, #21632	; 0x5480
   1ebb0:	movt	r1, #3
   1ebb4:	mov	r0, r4
   1ebb8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ebbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ebc0:	bl	1f4e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1ebc4:	add	r0, sp, #4
   1ebc8:	bl	20f60 <__flatcc_fb_gen_c_json_parser@@Base+0x44b8>
   1ebcc:	sub	sp, fp, #8
   1ebd0:	pop	{r4, r5, fp, pc}
   1ebd4:	movw	r0, #32324	; 0x7e44
   1ebd8:	movt	r0, #4
   1ebdc:	movw	r1, #32336	; 0x7e50
   1ebe0:	movt	r1, #4
   1ebe4:	movw	r3, #41068	; 0xa06c
   1ebe8:	movt	r3, #4
   1ebec:	movw	r2, #1205	; 0x4b5
   1ebf0:	bl	14984 <__assert_fail@plt>
   1ebf4:	add	r0, sp, #4
   1ebf8:	bl	20f60 <__flatcc_fb_gen_c_json_parser@@Base+0x44b8>
   1ebfc:	movw	r0, #4272	; 0x10b0
   1ec00:	movt	r0, #6
   1ec04:	ldr	r0, [r0]
   1ec08:	movw	r1, #34607	; 0x872f
   1ec0c:	movt	r1, #4
   1ec10:	str	r1, [sp]
   1ec14:	movw	r1, #21375	; 0x537f
   1ec18:	movt	r1, #3
   1ec1c:	movw	r4, #32336	; 0x7e50
   1ec20:	movt	r4, #4
   1ec24:	mov	r2, r4
   1ec28:	movw	r3, #1194	; 0x4aa
   1ec2c:	bl	148c4 <fprintf@plt>
   1ec30:	movw	r0, #25261	; 0x62ad
   1ec34:	movt	r0, #4
   1ec38:	movw	r3, #41068	; 0xa06c
   1ec3c:	movt	r3, #4
   1ec40:	mov	r1, r4
   1ec44:	movw	r2, #1194	; 0x4aa
   1ec48:	bl	14984 <__assert_fail@plt>
   1ec4c:	movw	r0, #32324	; 0x7e44
   1ec50:	movt	r0, #4
   1ec54:	movw	r1, #32336	; 0x7e50
   1ec58:	movt	r1, #4
   1ec5c:	movw	r3, #41068	; 0xa06c
   1ec60:	movt	r3, #4
   1ec64:	movw	r2, #1210	; 0x4ba
   1ec68:	bl	14984 <__assert_fail@plt>
   1ec6c:	ldr	r1, [r0, #208]	; 0xd0
   1ec70:	ldr	r1, [r1, #52]	; 0x34
   1ec74:	cmp	r1, #0
   1ec78:	beq	1ec94 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   1ec7c:	ldrh	r2, [r1, #8]
   1ec80:	cmp	r2, #1
   1ec84:	beq	1ec98 <__flatcc_fb_gen_c_json_parser@@Base+0x21f0>
   1ec88:	cmp	r2, #0
   1ec8c:	bxne	lr
   1ec90:	b	21218 <__flatcc_fb_gen_c_json_parser@@Base+0x4770>
   1ec94:	bx	lr
   1ec98:	b	2147c <__flatcc_fb_gen_c_json_parser@@Base+0x49d4>
   1ec9c:	ldr	r0, [r0, #4]
   1eca0:	b	1eca4 <__flatcc_fb_gen_c_json_parser@@Base+0x21fc>
   1eca4:	ldr	r3, [r0, #4]
   1eca8:	str	r3, [r1]
   1ecac:	ldr	r0, [r0]
   1ecb0:	str	r0, [r2]
   1ecb4:	bx	lr
   1ecb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ecbc:	add	fp, sp, #28
   1ecc0:	sub	sp, sp, #4
   1ecc4:	mov	r5, r1
   1ecc8:	ldr	r7, [r0, #20]
   1eccc:	cmp	r7, #0
   1ecd0:	beq	1ee10 <__flatcc_fb_gen_c_json_parser@@Base+0x2368>
   1ecd4:	mov	r8, r0
   1ecd8:	mov	r6, #0
   1ecdc:	mov	r4, #0
   1ece0:	b	1ecf4 <__flatcc_fb_gen_c_json_parser@@Base+0x224c>
   1ece4:	add	r4, r4, #1
   1ece8:	ldr	r7, [r7]
   1ecec:	cmp	r7, #0
   1ecf0:	beq	1ed28 <__flatcc_fb_gen_c_json_parser@@Base+0x2280>
   1ecf4:	ldrb	r0, [r7, #72]	; 0x48
   1ecf8:	tst	r0, #4
   1ecfc:	bne	1ece8 <__flatcc_fb_gen_c_json_parser@@Base+0x2240>
   1ed00:	mov	r0, r7
   1ed04:	bl	1f4f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1ed08:	cmp	r0, #0
   1ed0c:	beq	1ece4 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   1ed10:	ldr	r0, [r7, #4]
   1ed14:	ldr	r0, [r0, #4]
   1ed18:	add	r0, r6, r0
   1ed1c:	add	r6, r0, #6
   1ed20:	add	r4, r4, #1
   1ed24:	b	1ece4 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   1ed28:	str	r4, [r5]
   1ed2c:	mov	r7, #0
   1ed30:	cmp	r4, #0
   1ed34:	beq	1ee38 <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   1ed38:	add	r0, r6, r4, lsl #4
   1ed3c:	bl	14870 <malloc@plt>
   1ed40:	str	r0, [sp]
   1ed44:	cmp	r0, #0
   1ed48:	beq	1ee38 <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   1ed4c:	ldr	r6, [r8, #20]
   1ed50:	cmp	r6, #0
   1ed54:	beq	1ee1c <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   1ed58:	lsl	r0, r4, #4
   1ed5c:	ldr	r8, [sp]
   1ed60:	add	r7, r8, r0
   1ed64:	mov	sl, #0
   1ed68:	b	1edcc <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   1ed6c:	str	sl, [r6, #112]	; 0x70
   1ed70:	add	r0, r5, #5
   1ed74:	str	r7, [r8, #16]
   1ed78:	str	r0, [r8, #20]
   1ed7c:	ldr	r1, [r9]
   1ed80:	mov	r0, r7
   1ed84:	mov	r2, r5
   1ed88:	bl	14810 <memcpy@plt>
   1ed8c:	ldr	r0, [r6, #4]
   1ed90:	ldr	r0, [r0, #4]
   1ed94:	movw	r1, #29791	; 0x745f
   1ed98:	movt	r1, #28793	; 0x7079
   1ed9c:	str	r1, [r7, r0]!
   1eda0:	mov	r0, #101	; 0x65
   1eda4:	strh	r0, [r7, #4]
   1eda8:	str	r6, [r8, #24]
   1edac:	mov	r0, #1
   1edb0:	str	r0, [r8, #28]
   1edb4:	add	r7, r7, #6
   1edb8:	add	r8, r8, #32
   1edbc:	add	sl, sl, #1
   1edc0:	ldr	r6, [r6]
   1edc4:	cmp	r6, #0
   1edc8:	beq	1ee1c <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   1edcc:	ldrb	r0, [r6, #72]	; 0x48
   1edd0:	tst	r0, #4
   1edd4:	bne	1edc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   1edd8:	ldr	r0, [r6, #4]
   1eddc:	ldr	r0, [r0]
   1ede0:	str	r0, [r8]
   1ede4:	ldr	r9, [r6, #4]
   1ede8:	ldr	r5, [r9, #4]
   1edec:	stmib	r8, {r5, r6}
   1edf0:	mov	r0, #0
   1edf4:	str	r0, [r8, #12]
   1edf8:	mov	r0, r6
   1edfc:	bl	1f4f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1ee00:	cmp	r0, #0
   1ee04:	bne	1ed6c <__flatcc_fb_gen_c_json_parser@@Base+0x22c4>
   1ee08:	add	r8, r8, #16
   1ee0c:	b	1edc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   1ee10:	mov	r7, #0
   1ee14:	str	r7, [r5]
   1ee18:	b	1ee38 <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   1ee1c:	movw	r3, #62752	; 0xf520
   1ee20:	movt	r3, #1
   1ee24:	ldr	r7, [sp]
   1ee28:	mov	r0, r7
   1ee2c:	mov	r1, r4
   1ee30:	mov	r2, #16
   1ee34:	bl	14948 <qsort@plt>
   1ee38:	mov	r0, r7
   1ee3c:	sub	sp, fp, #28
   1ee40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee44:	push	{r4, r5, r6, sl, fp, lr}
   1ee48:	add	fp, sp, #16
   1ee4c:	mov	r5, r2
   1ee50:	mov	r6, r1
   1ee54:	mov	r4, r0
   1ee58:	ldr	r2, [fp, #8]
   1ee5c:	movw	r1, #34893	; 0x884d
   1ee60:	movt	r1, #4
   1ee64:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ee68:	movw	r1, #34973	; 0x889d
   1ee6c:	movt	r1, #4
   1ee70:	mov	r0, r4
   1ee74:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ee78:	ldr	r0, [r4, #220]	; 0xdc
   1ee7c:	add	r0, r0, #1
   1ee80:	str	r0, [r4, #220]	; 0xdc
   1ee84:	mov	r0, r4
   1ee88:	mov	r1, r6
   1ee8c:	mov	r2, r5
   1ee90:	bl	1f554 <__flatcc_fb_gen_c_json_parser@@Base+0x2aac>
   1ee94:	ldr	r0, [r4, #220]	; 0xdc
   1ee98:	cmp	r0, #0
   1ee9c:	beq	1eec8 <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   1eea0:	sub	r0, r0, #1
   1eea4:	str	r0, [r4, #220]	; 0xdc
   1eea8:	movw	r1, #34164	; 0x8574
   1eeac:	movt	r1, #4
   1eeb0:	mov	r0, r4
   1eeb4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eeb8:	ldr	r0, [r4, #220]	; 0xdc
   1eebc:	add	r0, r0, #1
   1eec0:	str	r0, [r4, #220]	; 0xdc
   1eec4:	pop	{r4, r5, r6, sl, fp, pc}
   1eec8:	movw	r0, #32324	; 0x7e44
   1eecc:	movt	r0, #4
   1eed0:	movw	r1, #32336	; 0x7e50
   1eed4:	movt	r1, #4
   1eed8:	movw	r3, #34992	; 0x88b0
   1eedc:	movt	r3, #4
   1eee0:	movw	r2, #719	; 0x2cf
   1eee4:	bl	14984 <__assert_fail@plt>
   1eee8:	movw	r1, #35264	; 0x89c0
   1eeec:	movt	r1, #4
   1eef0:	b	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eef8:	add	fp, sp, #28
   1eefc:	sub	sp, sp, #52	; 0x34
   1ef00:	mov	r7, r3
   1ef04:	mov	sl, r2
   1ef08:	mov	r8, r1
   1ef0c:	mov	r4, r0
   1ef10:	mov	r0, #0
   1ef14:	str	r0, [sp, #44]	; 0x2c
   1ef18:	str	r0, [sp, #40]	; 0x28
   1ef1c:	str	r0, [sp, #36]	; 0x24
   1ef20:	str	r0, [sp, #32]
   1ef24:	movw	r1, #21632	; 0x5480
   1ef28:	movt	r1, #3
   1ef2c:	str	r1, [sp, #28]
   1ef30:	str	r0, [sp, #24]
   1ef34:	ldr	r5, [r8]
   1ef38:	add	r0, r5, r2, lsl #4
   1ef3c:	ldr	r9, [fp, #8]
   1ef40:	mov	r1, r9
   1ef44:	bl	1f600 <__flatcc_fb_gen_c_json_parser@@Base+0x2b58>
   1ef48:	cmp	r0, #0
   1ef4c:	beq	1f1f4 <__flatcc_fb_gen_c_json_parser@@Base+0x274c>
   1ef50:	mov	r0, r5
   1ef54:	mov	r1, sl
   1ef58:	mov	r2, r7
   1ef5c:	mov	r3, r9
   1ef60:	bl	1f9bc <__flatcc_fb_gen_c_json_parser@@Base+0x2f14>
   1ef64:	mov	r5, r0
   1ef68:	ldr	r0, [r8]
   1ef6c:	cmp	r5, sl
   1ef70:	ble	1f058 <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   1ef74:	add	r1, sp, #24
   1ef78:	add	r2, sp, #28
   1ef7c:	str	r2, [sp]
   1ef80:	str	r1, [sp, #4]
   1ef84:	add	r0, r0, r5, lsl #4
   1ef88:	add	r2, sp, #40	; 0x28
   1ef8c:	add	r3, sp, #32
   1ef90:	mov	r1, r9
   1ef94:	bl	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1ef98:	ldr	r2, [sp, #40]	; 0x28
   1ef9c:	ldr	r3, [sp, #44]	; 0x2c
   1efa0:	ldr	r0, [sp, #24]
   1efa4:	ldr	r1, [sp, #28]
   1efa8:	stm	sp, {r0, r1}
   1efac:	movw	r1, #35282	; 0x89d2
   1efb0:	movt	r1, #4
   1efb4:	mov	r0, r4
   1efb8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1efbc:	ldr	r0, [r4, #220]	; 0xdc
   1efc0:	add	r0, r0, #1
   1efc4:	str	r0, [r4, #220]	; 0xdc
   1efc8:	str	r9, [sp]
   1efcc:	sub	r3, r5, #1
   1efd0:	mov	r0, r4
   1efd4:	mov	r1, r8
   1efd8:	mov	r2, sl
   1efdc:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1efe0:	ldr	r0, [r4, #220]	; 0xdc
   1efe4:	cmp	r0, #0
   1efe8:	beq	1f444 <__flatcc_fb_gen_c_json_parser@@Base+0x299c>
   1efec:	sub	r0, r0, #1
   1eff0:	str	r0, [r4, #220]	; 0xdc
   1eff4:	ldr	r3, [sp, #28]
   1eff8:	ldr	r2, [sp, #24]
   1effc:	movw	r1, #35374	; 0x8a2e
   1f000:	movt	r1, #4
   1f004:	mov	r0, r4
   1f008:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f00c:	ldr	r0, [r4, #220]	; 0xdc
   1f010:	add	r0, r0, #1
   1f014:	str	r0, [r4, #220]	; 0xdc
   1f018:	str	r9, [sp]
   1f01c:	mov	r0, r4
   1f020:	mov	r1, r8
   1f024:	mov	r2, r5
   1f028:	mov	r3, r7
   1f02c:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1f030:	ldr	r0, [r4, #220]	; 0xdc
   1f034:	cmp	r0, #0
   1f038:	beq	1f464 <__flatcc_fb_gen_c_json_parser@@Base+0x29bc>
   1f03c:	sub	r0, r0, #1
   1f040:	str	r0, [r4, #220]	; 0xdc
   1f044:	ldr	r3, [sp, #28]
   1f048:	ldr	r2, [sp, #24]
   1f04c:	movw	r1, #35403	; 0x8a4b
   1f050:	movt	r1, #4
   1f054:	b	1f434 <__flatcc_fb_gen_c_json_parser@@Base+0x298c>
   1f058:	mov	r1, sl
   1f05c:	mov	r2, r7
   1f060:	mov	r3, r9
   1f064:	bl	1fb78 <__flatcc_fb_gen_c_json_parser@@Base+0x30d0>
   1f068:	mov	r6, r0
   1f06c:	sub	r2, r0, #1
   1f070:	ldr	r5, [r8]
   1f074:	mov	r0, r5
   1f078:	mov	r1, sl
   1f07c:	str	r2, [sp, #12]
   1f080:	mov	r3, r9
   1f084:	bl	1fc50 <__flatcc_fb_gen_c_json_parser@@Base+0x31a8>
   1f088:	mov	r3, r0
   1f08c:	cmp	r0, r6
   1f090:	str	r6, [sp, #20]
   1f094:	str	r0, [sp, #16]
   1f098:	bge	1f224 <__flatcc_fb_gen_c_json_parser@@Base+0x277c>
   1f09c:	mov	r6, #0
   1f0a0:	cmp	r3, sl
   1f0a4:	ble	1f0cc <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   1f0a8:	add	r0, r5, r3, lsl #4
   1f0ac:	sub	r0, r0, #16
   1f0b0:	mov	r1, r9
   1f0b4:	mov	r6, r3
   1f0b8:	bl	1fca4 <__flatcc_fb_gen_c_json_parser@@Base+0x31fc>
   1f0bc:	mov	r3, r6
   1f0c0:	sub	r0, r0, #8
   1f0c4:	clz	r0, r0
   1f0c8:	lsr	r6, r0, #5
   1f0cc:	add	r0, sp, #24
   1f0d0:	add	r1, sp, #28
   1f0d4:	str	r1, [sp]
   1f0d8:	str	r0, [sp, #4]
   1f0dc:	add	r0, r5, r3, lsl #4
   1f0e0:	add	r2, sp, #40	; 0x28
   1f0e4:	mov	r5, r3
   1f0e8:	add	r3, sp, #32
   1f0ec:	mov	r1, r9
   1f0f0:	bl	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1f0f4:	ldr	r2, [sp, #40]	; 0x28
   1f0f8:	ldr	r3, [sp, #44]	; 0x2c
   1f0fc:	ldr	r0, [sp, #24]
   1f100:	ldr	r1, [sp, #28]
   1f104:	stm	sp, {r0, r1}
   1f108:	movw	r1, #35425	; 0x8a61
   1f10c:	movt	r1, #4
   1f110:	mov	r0, r4
   1f114:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f118:	ldr	r0, [r4, #220]	; 0xdc
   1f11c:	add	r0, r0, #1
   1f120:	str	r0, [r4, #220]	; 0xdc
   1f124:	cmp	r6, #0
   1f128:	beq	1f254 <__flatcc_fb_gen_c_json_parser@@Base+0x27ac>
   1f12c:	ldr	r3, [sp, #28]
   1f130:	ldr	r2, [sp, #24]
   1f134:	movw	r1, #35465	; 0x8a89
   1f138:	movt	r1, #4
   1f13c:	mov	r0, r4
   1f140:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f144:	ldm	r8, {r0, ip}
   1f148:	ldr	r1, [r8, #12]
   1f14c:	sub	r2, r5, #1
   1f150:	mov	r6, r2
   1f154:	add	r0, r0, r2, lsl #4
   1f158:	ldr	r2, [r0, #8]
   1f15c:	ldr	r3, [r0, #12]
   1f160:	mov	r0, #8
   1f164:	str	r0, [sp]
   1f168:	mov	r0, r4
   1f16c:	blx	ip
   1f170:	ldr	r3, [sp, #28]
   1f174:	ldr	r2, [sp, #24]
   1f178:	movw	r1, #35497	; 0x8aa9
   1f17c:	movt	r1, #4
   1f180:	mov	r0, r4
   1f184:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f188:	movw	r1, #35525	; 0x8ac5
   1f18c:	movt	r1, #4
   1f190:	mov	r0, r4
   1f194:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f198:	movw	r1, #34847	; 0x881f
   1f19c:	movt	r1, #4
   1f1a0:	mov	r0, r4
   1f1a4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f1a8:	add	r0, r9, #8
   1f1ac:	str	r0, [sp]
   1f1b0:	mov	r0, r4
   1f1b4:	mov	r1, r8
   1f1b8:	mov	r2, r5
   1f1bc:	ldr	r3, [sp, #12]
   1f1c0:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1f1c4:	ldr	r0, [r4, #220]	; 0xdc
   1f1c8:	cmp	r0, #0
   1f1cc:	beq	1f4c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a1c>
   1f1d0:	sub	r0, r0, #1
   1f1d4:	str	r0, [r4, #220]	; 0xdc
   1f1d8:	ldr	r3, [sp, #28]
   1f1dc:	ldr	r2, [sp, #24]
   1f1e0:	movw	r1, #35535	; 0x8acf
   1f1e4:	movt	r1, #4
   1f1e8:	mov	r0, r4
   1f1ec:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f1f0:	b	1f294 <__flatcc_fb_gen_c_json_parser@@Base+0x27ec>
   1f1f4:	cmp	r7, sl
   1f1f8:	bne	1f230 <__flatcc_fb_gen_c_json_parser@@Base+0x2788>
   1f1fc:	mov	r0, #0
   1f200:	str	r9, [sp]
   1f204:	str	r0, [sp, #4]
   1f208:	mov	r0, r4
   1f20c:	mov	r1, r8
   1f210:	mov	r2, sl
   1f214:	mov	r3, r7
   1f218:	bl	1f61c <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f21c:	sub	sp, fp, #28
   1f220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f224:	mov	r2, r6
   1f228:	mov	r6, r3
   1f22c:	b	1f2d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2828>
   1f230:	add	r0, sl, #1
   1f234:	cmp	r0, r7
   1f238:	bne	1ef50 <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   1f23c:	add	r0, r5, r7, lsl #4
   1f240:	mov	r1, r9
   1f244:	bl	1f600 <__flatcc_fb_gen_c_json_parser@@Base+0x2b58>
   1f248:	cmp	r0, #0
   1f24c:	bne	1ef50 <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   1f250:	b	1f1fc <__flatcc_fb_gen_c_json_parser@@Base+0x2754>
   1f254:	movw	r1, #35525	; 0x8ac5
   1f258:	movt	r1, #4
   1f25c:	mov	r0, r4
   1f260:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f264:	movw	r1, #34847	; 0x881f
   1f268:	movt	r1, #4
   1f26c:	mov	r0, r4
   1f270:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f274:	add	r0, r9, #8
   1f278:	str	r0, [sp]
   1f27c:	mov	r0, r4
   1f280:	mov	r1, r8
   1f284:	mov	r2, r5
   1f288:	ldr	r3, [sp, #12]
   1f28c:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1f290:	mov	r6, r5
   1f294:	ldr	r0, [r4, #220]	; 0xdc
   1f298:	cmp	r0, #0
   1f29c:	beq	1f484 <__flatcc_fb_gen_c_json_parser@@Base+0x29dc>
   1f2a0:	sub	r0, r0, #1
   1f2a4:	str	r0, [r4, #220]	; 0xdc
   1f2a8:	ldr	r3, [sp, #28]
   1f2ac:	ldr	r2, [sp, #24]
   1f2b0:	movw	r1, #35564	; 0x8aec
   1f2b4:	movt	r1, #4
   1f2b8:	mov	r0, r4
   1f2bc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f2c0:	ldr	r0, [r4, #220]	; 0xdc
   1f2c4:	add	r0, r0, #1
   1f2c8:	str	r0, [r4, #220]	; 0xdc
   1f2cc:	ldr	r2, [sp, #20]
   1f2d0:	mov	r5, #0
   1f2d4:	cmp	r6, sl
   1f2d8:	mov	r0, #0
   1f2dc:	movwgt	r0, #1
   1f2e0:	str	r7, [sp, #12]
   1f2e4:	cmp	r2, r7
   1f2e8:	mov	r1, #0
   1f2ec:	movwle	r1, #1
   1f2f0:	and	r9, r1, r0
   1f2f4:	cmp	r9, #1
   1f2f8:	bne	1f308 <__flatcc_fb_gen_c_json_parser@@Base+0x2860>
   1f2fc:	ldr	r0, [r8, #24]
   1f300:	add	r5, r0, #1
   1f304:	str	r5, [r8, #24]
   1f308:	cmp	r6, sl
   1f30c:	ble	1f384 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1f310:	ldr	r0, [fp, #8]
   1f314:	stm	sp, {r0, r5}
   1f318:	sub	r3, r6, #1
   1f31c:	mov	r0, r4
   1f320:	mov	r1, r8
   1f324:	mov	r2, sl
   1f328:	mov	r7, r6
   1f32c:	bl	1f61c <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f330:	ldr	r2, [sp, #20]
   1f334:	cmp	r9, #0
   1f338:	beq	1f384 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1f33c:	movw	r1, #35594	; 0x8b0a
   1f340:	movt	r1, #4
   1f344:	mov	r0, r4
   1f348:	mov	r2, r5
   1f34c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f350:	ldr	r0, [r4, #220]	; 0xdc
   1f354:	mov	r1, #0
   1f358:	str	r1, [r4, #220]	; 0xdc
   1f35c:	str	r0, [r4, #228]	; 0xe4
   1f360:	movw	r1, #35616	; 0x8b20
   1f364:	movt	r1, #4
   1f368:	mov	r0, r4
   1f36c:	mov	r2, r5
   1f370:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f374:	mov	r6, r7
   1f378:	ldr	r2, [sp, #20]
   1f37c:	ldr	r0, [r4, #228]	; 0xe4
   1f380:	str	r0, [r4, #220]	; 0xdc
   1f384:	ldr	r3, [sp, #12]
   1f388:	cmp	r2, r3
   1f38c:	ble	1f3a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
   1f390:	cmp	r6, sl
   1f394:	bgt	1f3bc <__flatcc_fb_gen_c_json_parser@@Base+0x2914>
   1f398:	ldr	r1, [r8, #8]
   1f39c:	mov	r0, r4
   1f3a0:	blx	r1
   1f3a4:	b	1f400 <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   1f3a8:	ldr	r0, [fp, #8]
   1f3ac:	str	r0, [sp]
   1f3b0:	mov	r0, r4
   1f3b4:	mov	r1, r8
   1f3b8:	bl	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1f3bc:	cmp	r9, #0
   1f3c0:	beq	1f400 <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   1f3c4:	ldr	r0, [r4, #220]	; 0xdc
   1f3c8:	mov	r1, #0
   1f3cc:	str	r1, [r4, #220]	; 0xdc
   1f3d0:	str	r0, [r4, #228]	; 0xe4
   1f3d4:	movw	r1, #35613	; 0x8b1d
   1f3d8:	movt	r1, #4
   1f3dc:	mov	r0, r4
   1f3e0:	mov	r2, r5
   1f3e4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f3e8:	ldr	r0, [r4, #228]	; 0xe4
   1f3ec:	str	r0, [r4, #220]	; 0xdc
   1f3f0:	movw	r1, #35627	; 0x8b2b
   1f3f4:	movt	r1, #4
   1f3f8:	mov	r0, r4
   1f3fc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f400:	ldr	r0, [sp, #20]
   1f404:	ldr	r1, [sp, #16]
   1f408:	cmp	r1, r0
   1f40c:	bge	1f43c <__flatcc_fb_gen_c_json_parser@@Base+0x2994>
   1f410:	ldr	r0, [r4, #220]	; 0xdc
   1f414:	cmp	r0, #0
   1f418:	beq	1f4a4 <__flatcc_fb_gen_c_json_parser@@Base+0x29fc>
   1f41c:	sub	r0, r0, #1
   1f420:	str	r0, [r4, #220]	; 0xdc
   1f424:	ldr	r3, [sp, #28]
   1f428:	ldr	r2, [sp, #24]
   1f42c:	movw	r1, #35636	; 0x8b34
   1f430:	movt	r1, #4
   1f434:	mov	r0, r4
   1f438:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f43c:	sub	sp, fp, #28
   1f440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f444:	movw	r0, #32324	; 0x7e44
   1f448:	movt	r0, #4
   1f44c:	movw	r1, #32336	; 0x7e50
   1f450:	movt	r1, #4
   1f454:	movw	r3, #35320	; 0x89f8
   1f458:	movt	r3, #4
   1f45c:	movw	r2, #973	; 0x3cd
   1f460:	bl	14984 <__assert_fail@plt>
   1f464:	movw	r0, #32324	; 0x7e44
   1f468:	movt	r0, #4
   1f46c:	movw	r1, #32336	; 0x7e50
   1f470:	movt	r1, #4
   1f474:	movw	r3, #35320	; 0x89f8
   1f478:	movt	r3, #4
   1f47c:	movw	r2, #975	; 0x3cf
   1f480:	bl	14984 <__assert_fail@plt>
   1f484:	movw	r0, #32324	; 0x7e44
   1f488:	movt	r0, #4
   1f48c:	movw	r1, #32336	; 0x7e50
   1f490:	movt	r1, #4
   1f494:	movw	r3, #35320	; 0x89f8
   1f498:	movt	r3, #4
   1f49c:	movw	r2, #1044	; 0x414
   1f4a0:	bl	14984 <__assert_fail@plt>
   1f4a4:	movw	r0, #32324	; 0x7e44
   1f4a8:	movt	r0, #4
   1f4ac:	movw	r1, #32336	; 0x7e50
   1f4b0:	movt	r1, #4
   1f4b4:	movw	r3, #35320	; 0x89f8
   1f4b8:	movt	r3, #4
   1f4bc:	mov	r2, #1072	; 0x430
   1f4c0:	bl	14984 <__assert_fail@plt>
   1f4c4:	movw	r0, #32324	; 0x7e44
   1f4c8:	movt	r0, #4
   1f4cc:	movw	r1, #32336	; 0x7e50
   1f4d0:	movt	r1, #4
   1f4d4:	movw	r3, #35320	; 0x89f8
   1f4d8:	movt	r3, #4
   1f4dc:	mov	r2, #1040	; 0x410
   1f4e0:	bl	14984 <__assert_fail@plt>
   1f4e4:	cmp	r0, #0
   1f4e8:	bxeq	lr
   1f4ec:	b	14804 <free@plt>
   1f4f0:	ldrh	r1, [r0, #24]
   1f4f4:	bic	r2, r1, #1
   1f4f8:	mov	r1, #0
   1f4fc:	cmp	r2, #14
   1f500:	bne	1f518 <__flatcc_fb_gen_c_json_parser@@Base+0x2a70>
   1f504:	ldr	r0, [r0, #16]
   1f508:	ldrh	r0, [r0, #8]
   1f50c:	sub	r0, r0, #4
   1f510:	clz	r0, r0
   1f514:	lsr	r1, r0, #5
   1f518:	mov	r0, r1
   1f51c:	bx	lr
   1f520:	push	{r4, r5, fp, lr}
   1f524:	add	fp, sp, #8
   1f528:	ldm	r1, {r3, r4}
   1f52c:	ldm	r0, {r1, r5}
   1f530:	cmp	r5, r4
   1f534:	mov	r2, r5
   1f538:	movgt	r2, r4
   1f53c:	mov	r0, r1
   1f540:	mov	r1, r3
   1f544:	bl	14828 <memcmp@plt>
   1f548:	cmp	r0, #0
   1f54c:	subeq	r0, r5, r4
   1f550:	pop	{r4, r5, fp, pc}
   1f554:	push	{r4, sl, fp, lr}
   1f558:	add	fp, sp, #8
   1f55c:	sub	sp, sp, #8
   1f560:	ldr	r1, [r1, #40]	; 0x28
   1f564:	sub	r3, r1, #1
   1f568:	cmp	r3, #5
   1f56c:	bcs	1f578 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad0>
   1f570:	ldrd	r2, [r2, #48]	; 0x30
   1f574:	b	1f590 <__flatcc_fb_gen_c_json_parser@@Base+0x2ae8>
   1f578:	sub	r1, r1, #6
   1f57c:	cmp	r1, #4
   1f580:	bcs	1f5b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b08>
   1f584:	ldrd	r2, [r2, #48]	; 0x30
   1f588:	cmn	r3, #1
   1f58c:	ble	1f5a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2afc>
   1f590:	movw	r1, #35067	; 0x88fb
   1f594:	movt	r1, #4
   1f598:	sub	sp, fp, #8
   1f59c:	pop	{r4, sl, fp, lr}
   1f5a0:	b	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f5a4:	movw	r1, #35109	; 0x8925
   1f5a8:	movt	r1, #4
   1f5ac:	b	1f598 <__flatcc_fb_gen_c_json_parser@@Base+0x2af0>
   1f5b0:	movw	r0, #4272	; 0x10b0
   1f5b4:	movt	r0, #6
   1f5b8:	ldr	r0, [r0]
   1f5bc:	movw	r1, #35151	; 0x894f
   1f5c0:	movt	r1, #4
   1f5c4:	str	r1, [sp]
   1f5c8:	movw	r1, #21375	; 0x537f
   1f5cc:	movt	r1, #3
   1f5d0:	movw	r4, #32336	; 0x7e50
   1f5d4:	movt	r4, #4
   1f5d8:	mov	r2, r4
   1f5dc:	movw	r3, #710	; 0x2c6
   1f5e0:	bl	148c4 <fprintf@plt>
   1f5e4:	movw	r0, #25261	; 0x62ad
   1f5e8:	movt	r0, #4
   1f5ec:	movw	r3, #35186	; 0x8972
   1f5f0:	movt	r3, #4
   1f5f4:	mov	r1, r4
   1f5f8:	movw	r2, #710	; 0x2c6
   1f5fc:	bl	14984 <__assert_fail@plt>
   1f600:	ldr	r2, [r0, #4]
   1f604:	sub	r0, r2, r1
   1f608:	sub	r0, r0, #8
   1f60c:	add	r1, r1, #8
   1f610:	cmp	r1, r2
   1f614:	movwgt	r0, #0
   1f618:	bx	lr
   1f61c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f620:	add	fp, sp, #28
   1f624:	sub	sp, sp, #52	; 0x34
   1f628:	mov	sl, r3
   1f62c:	mov	r5, r1
   1f630:	mov	r4, r0
   1f634:	mov	r0, #0
   1f638:	str	r0, [sp, #44]	; 0x2c
   1f63c:	str	r0, [sp, #40]	; 0x28
   1f640:	str	r0, [sp, #36]	; 0x24
   1f644:	str	r0, [sp, #32]
   1f648:	ldr	r0, [r1]
   1f64c:	add	r1, sp, #24
   1f650:	add	r3, sp, #28
   1f654:	str	r3, [sp]
   1f658:	str	r1, [sp, #4]
   1f65c:	sub	r8, sl, r2
   1f660:	add	r1, r8, #1
   1f664:	add	r1, r1, r1, lsr #31
   1f668:	str	r2, [sp, #16]
   1f66c:	add	r1, r2, r1, asr #1
   1f670:	str	r1, [sp, #20]
   1f674:	add	r0, r0, r1, lsl #4
   1f678:	ldr	r1, [fp, #8]
   1f67c:	add	r2, sp, #40	; 0x28
   1f680:	add	r3, sp, #32
   1f684:	bl	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1f688:	mov	r9, r0
   1f68c:	cmp	r0, #8
   1f690:	bne	1f6b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2c0c>
   1f694:	ldr	r2, [sp, #40]	; 0x28
   1f698:	ldr	r3, [sp, #44]	; 0x2c
   1f69c:	ldr	r0, [sp, #24]
   1f6a0:	ldr	r1, [sp, #28]
   1f6a4:	stm	sp, {r0, r1}
   1f6a8:	movw	r1, #35659	; 0x8b4b
   1f6ac:	movt	r1, #4
   1f6b0:	b	1f6e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2c3c>
   1f6b4:	ldr	r2, [sp, #32]
   1f6b8:	ldr	r3, [sp, #36]	; 0x24
   1f6bc:	ldr	r0, [sp, #40]	; 0x28
   1f6c0:	ldr	r1, [sp, #44]	; 0x2c
   1f6c4:	mov	r7, r5
   1f6c8:	ldr	r5, [sp, #24]
   1f6cc:	ldr	r6, [sp, #28]
   1f6d0:	stm	sp, {r0, r1, r5}
   1f6d4:	mov	r5, r7
   1f6d8:	str	r6, [sp, #12]
   1f6dc:	movw	r1, #35691	; 0x8b6b
   1f6e0:	movt	r1, #4
   1f6e4:	mov	r0, r4
   1f6e8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f6ec:	ldr	r7, [fp, #12]
   1f6f0:	ldr	r0, [r4, #220]	; 0xdc
   1f6f4:	add	r0, r0, #1
   1f6f8:	str	r0, [r4, #220]	; 0xdc
   1f6fc:	add	r0, r8, #2
   1f700:	cmp	r0, #2
   1f704:	bhi	1f754 <__flatcc_fb_gen_c_json_parser@@Base+0x2cac>
   1f708:	ldr	r0, [r5]
   1f70c:	mov	r6, r7
   1f710:	ldr	r7, [r5, #4]
   1f714:	ldr	r1, [r5, #12]
   1f718:	ldr	r2, [sp, #20]
   1f71c:	add	r0, r0, r2, lsl #4
   1f720:	ldr	r2, [r0, #8]
   1f724:	ldr	r3, [r0, #12]
   1f728:	str	r9, [sp]
   1f72c:	mov	r0, r4
   1f730:	blx	r7
   1f734:	cmp	r6, #1
   1f738:	blt	1f7cc <__flatcc_fb_gen_c_json_parser@@Base+0x2d24>
   1f73c:	movw	r1, #35734	; 0x8b96
   1f740:	movt	r1, #4
   1f744:	mov	r0, r4
   1f748:	mov	r2, r6
   1f74c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f750:	b	1f7d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d30>
   1f754:	ldr	r8, [sp, #20]
   1f758:	cmp	r8, sl
   1f75c:	bne	1f7ac <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
   1f760:	ldr	r0, [r5]
   1f764:	mov	r6, r7
   1f768:	ldr	r7, [r5, #4]
   1f76c:	ldr	r1, [r5, #12]
   1f770:	add	r0, r0, r8, lsl #4
   1f774:	ldr	r2, [r0, #8]
   1f778:	ldr	r3, [r0, #12]
   1f77c:	str	r9, [sp]
   1f780:	mov	r0, r4
   1f784:	blx	r7
   1f788:	mov	r7, r6
   1f78c:	cmp	r6, #1
   1f790:	blt	1f864 <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   1f794:	movw	r1, #35734	; 0x8b96
   1f798:	movt	r1, #4
   1f79c:	mov	r0, r4
   1f7a0:	mov	r2, r7
   1f7a4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f7a8:	b	1f870 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   1f7ac:	ldr	r6, [fp, #8]
   1f7b0:	stm	sp, {r6, r7}
   1f7b4:	mov	r0, r4
   1f7b8:	mov	r1, r5
   1f7bc:	mov	r2, r8
   1f7c0:	mov	r3, sl
   1f7c4:	bl	1f61c <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f7c8:	b	1f898 <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   1f7cc:	ldr	r1, [r5, #8]
   1f7d0:	mov	r0, r4
   1f7d4:	blx	r1
   1f7d8:	ldr	r0, [r4, #220]	; 0xdc
   1f7dc:	cmp	r0, #0
   1f7e0:	beq	1f93c <__flatcc_fb_gen_c_json_parser@@Base+0x2e94>
   1f7e4:	sub	r0, r0, #1
   1f7e8:	str	r0, [r4, #220]	; 0xdc
   1f7ec:	movw	r1, #30713	; 0x77f9
   1f7f0:	movt	r1, #3
   1f7f4:	mov	r0, r4
   1f7f8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f7fc:	ldr	r0, [r4, #220]	; 0xdc
   1f800:	cmp	r0, #0
   1f804:	beq	1f95c <__flatcc_fb_gen_c_json_parser@@Base+0x2eb4>
   1f808:	sub	r0, r0, #1
   1f80c:	str	r0, [r4, #220]	; 0xdc
   1f810:	ldr	r3, [sp, #28]
   1f814:	ldr	r2, [sp, #24]
   1f818:	movw	r1, #35816	; 0x8be8
   1f81c:	movt	r1, #4
   1f820:	mov	r0, r4
   1f824:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f828:	ldr	r0, [r4, #220]	; 0xdc
   1f82c:	add	r0, r0, #1
   1f830:	str	r0, [r4, #220]	; 0xdc
   1f834:	cmp	r6, #1
   1f838:	blt	1f854 <__flatcc_fb_gen_c_json_parser@@Base+0x2dac>
   1f83c:	movw	r1, #35734	; 0x8b96
   1f840:	movt	r1, #4
   1f844:	mov	r0, r4
   1f848:	mov	r2, r6
   1f84c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f850:	b	1f8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   1f854:	ldr	r1, [r5, #8]
   1f858:	mov	r0, r4
   1f85c:	blx	r1
   1f860:	b	1f8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   1f864:	ldr	r1, [r5, #8]
   1f868:	mov	r0, r4
   1f86c:	blx	r1
   1f870:	ldr	r0, [r4, #220]	; 0xdc
   1f874:	cmp	r0, #0
   1f878:	ldr	r6, [fp, #8]
   1f87c:	beq	1f99c <__flatcc_fb_gen_c_json_parser@@Base+0x2ef4>
   1f880:	sub	r0, r0, #1
   1f884:	str	r0, [r4, #220]	; 0xdc
   1f888:	movw	r1, #30713	; 0x77f9
   1f88c:	movt	r1, #3
   1f890:	mov	r0, r4
   1f894:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f898:	ldr	r0, [r4, #220]	; 0xdc
   1f89c:	cmp	r0, #0
   1f8a0:	beq	1f97c <__flatcc_fb_gen_c_json_parser@@Base+0x2ed4>
   1f8a4:	sub	r0, r0, #1
   1f8a8:	str	r0, [r4, #220]	; 0xdc
   1f8ac:	ldr	r3, [sp, #28]
   1f8b0:	ldr	r2, [sp, #24]
   1f8b4:	movw	r1, #35816	; 0x8be8
   1f8b8:	movt	r1, #4
   1f8bc:	mov	r0, r4
   1f8c0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f8c4:	ldr	r0, [r4, #220]	; 0xdc
   1f8c8:	add	r0, r0, #1
   1f8cc:	str	r0, [r4, #220]	; 0xdc
   1f8d0:	stm	sp, {r6, r7}
   1f8d4:	sub	r3, r8, #1
   1f8d8:	mov	r0, r4
   1f8dc:	mov	r1, r5
   1f8e0:	ldr	r2, [sp, #16]
   1f8e4:	bl	1f61c <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f8e8:	ldr	r0, [r4, #220]	; 0xdc
   1f8ec:	cmp	r0, #0
   1f8f0:	beq	1f91c <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   1f8f4:	sub	r0, r0, #1
   1f8f8:	str	r0, [r4, #220]	; 0xdc
   1f8fc:	ldr	r3, [sp, #28]
   1f900:	ldr	r2, [sp, #24]
   1f904:	movw	r1, #35838	; 0x8bfe
   1f908:	movt	r1, #4
   1f90c:	mov	r0, r4
   1f910:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f914:	sub	sp, fp, #28
   1f918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f91c:	movw	r0, #32324	; 0x7e44
   1f920:	movt	r0, #4
   1f924:	movw	r1, #32336	; 0x7e50
   1f928:	movt	r1, #4
   1f92c:	movw	r3, #35750	; 0x8ba6
   1f930:	movt	r3, #4
   1f934:	movw	r2, #910	; 0x38e
   1f938:	bl	14984 <__assert_fail@plt>
   1f93c:	movw	r0, #32324	; 0x7e44
   1f940:	movt	r0, #4
   1f944:	movw	r1, #32336	; 0x7e50
   1f948:	movt	r1, #4
   1f94c:	movw	r3, #35750	; 0x8ba6
   1f950:	movt	r3, #4
   1f954:	mov	r2, #888	; 0x378
   1f958:	bl	14984 <__assert_fail@plt>
   1f95c:	movw	r0, #32324	; 0x7e44
   1f960:	movt	r0, #4
   1f964:	movw	r1, #32336	; 0x7e50
   1f968:	movt	r1, #4
   1f96c:	movw	r3, #35750	; 0x8ba6
   1f970:	movt	r3, #4
   1f974:	movw	r2, #889	; 0x379
   1f978:	bl	14984 <__assert_fail@plt>
   1f97c:	movw	r0, #32324	; 0x7e44
   1f980:	movt	r0, #4
   1f984:	movw	r1, #32336	; 0x7e50
   1f988:	movt	r1, #4
   1f98c:	movw	r3, #35750	; 0x8ba6
   1f990:	movt	r3, #4
   1f994:	movw	r2, #907	; 0x38b
   1f998:	bl	14984 <__assert_fail@plt>
   1f99c:	movw	r0, #32324	; 0x7e44
   1f9a0:	movt	r0, #4
   1f9a4:	movw	r1, #32336	; 0x7e50
   1f9a8:	movt	r1, #4
   1f9ac:	movw	r3, #35750	; 0x8ba6
   1f9b0:	movt	r3, #4
   1f9b4:	movw	r2, #903	; 0x387
   1f9b8:	bl	14984 <__assert_fail@plt>
   1f9bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f9c0:	add	fp, sp, #28
   1f9c4:	sub	sp, sp, #44	; 0x2c
   1f9c8:	mov	r4, r3
   1f9cc:	mov	r5, r1
   1f9d0:	mov	sl, #0
   1f9d4:	str	sl, [sp, #36]	; 0x24
   1f9d8:	str	sl, [sp, #32]
   1f9dc:	str	sl, [sp, #28]
   1f9e0:	str	sl, [sp, #24]
   1f9e4:	str	sl, [sp, #20]
   1f9e8:	str	sl, [sp, #16]
   1f9ec:	str	sl, [sp, #12]
   1f9f0:	str	sl, [sp, #8]
   1f9f4:	sub	r1, r2, r1
   1f9f8:	add	r1, r1, r1, lsr #31
   1f9fc:	add	r1, r5, r1, asr #1
   1fa00:	add	r8, r0, r1, lsl #4
   1fa04:	mov	r6, r1
   1fa08:	cmp	r1, r5
   1fa0c:	ble	1fa84 <__flatcc_fb_gen_c_json_parser@@Base+0x2fdc>
   1fa10:	str	sl, [sp]
   1fa14:	str	sl, [sp, #4]
   1fa18:	sub	r9, r8, #16
   1fa1c:	mov	r0, r9
   1fa20:	mov	r1, r4
   1fa24:	add	r2, sp, #32
   1fa28:	add	r3, sp, #16
   1fa2c:	bl	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1fa30:	str	sl, [sp]
   1fa34:	str	sl, [sp, #4]
   1fa38:	mov	r0, r8
   1fa3c:	mov	r1, r4
   1fa40:	add	r2, sp, #24
   1fa44:	add	r3, sp, #8
   1fa48:	bl	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1fa4c:	ldr	r0, [sp, #32]
   1fa50:	ldr	r1, [sp, #36]	; 0x24
   1fa54:	ldr	r2, [sp, #24]
   1fa58:	ldr	r3, [sp, #28]
   1fa5c:	eor	r1, r3, r1
   1fa60:	ldr	r3, [sp, #16]
   1fa64:	ldr	r7, [sp, #20]
   1fa68:	and	r1, r1, r7
   1fa6c:	eor	r0, r2, r0
   1fa70:	and	r0, r0, r3
   1fa74:	orrs	r0, r0, r1
   1fa78:	sub	r1, r6, #1
   1fa7c:	mov	r8, r9
   1fa80:	beq	1fa04 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   1fa84:	mov	r0, r6
   1fa88:	sub	sp, fp, #28
   1fa8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa94:	add	fp, sp, #28
   1fa98:	mov	ip, r0
   1fa9c:	ldr	r4, [r0, #4]
   1faa0:	mov	r0, #0
   1faa4:	ldr	r7, [fp, #8]
   1faa8:	cmp	r4, r1
   1faac:	mov	r5, #0
   1fab0:	blt	1fb60 <__flatcc_fb_gen_c_json_parser@@Base+0x30b8>
   1fab4:	sub	r0, r4, r1
   1fab8:	cmp	r0, #8
   1fabc:	movge	r0, #8
   1fac0:	ldr	ip, [ip]
   1fac4:	cmp	r0, #0
   1fac8:	beq	1fb1c <__flatcc_fb_gen_c_json_parser@@Base+0x3074>
   1facc:	mov	r4, #64	; 0x40
   1fad0:	sub	r5, r4, r0, lsl #3
   1fad4:	add	r4, ip, r1
   1fad8:	sub	r8, r4, #1
   1fadc:	mov	r9, #0
   1fae0:	mov	r6, r0
   1fae4:	mov	sl, #0
   1fae8:	ldrb	r4, [r8, r6]
   1faec:	rsb	r7, r5, #32
   1faf0:	lsr	r7, r4, r7
   1faf4:	subs	lr, r5, #32
   1faf8:	lslpl	r7, r4, lr
   1fafc:	orr	sl, r7, sl
   1fb00:	lsl	r7, r4, r5
   1fb04:	movwpl	r7, #0
   1fb08:	orr	r9, r7, r9
   1fb0c:	add	r5, r5, #8
   1fb10:	subs	r6, r6, #1
   1fb14:	bne	1fae8 <__flatcc_fb_gen_c_json_parser@@Base+0x3040>
   1fb18:	b	1fb24 <__flatcc_fb_gen_c_json_parser@@Base+0x307c>
   1fb1c:	mov	r9, #0
   1fb20:	mov	sl, #0
   1fb24:	add	r5, ip, r1
   1fb28:	stm	r2, {r9, sl}
   1fb2c:	mov	r1, #32
   1fb30:	sub	r1, r1, r0, lsl #3
   1fb34:	mov	r2, #64	; 0x40
   1fb38:	sub	r2, r2, r0, lsl #3
   1fb3c:	mvn	r7, #0
   1fb40:	lsl	r4, r7, r2
   1fb44:	cmp	r1, #0
   1fb48:	movwpl	r4, #0
   1fb4c:	rsb	r2, r2, #32
   1fb50:	ror	r9, r7, r2
   1fb54:	lslpl	r9, r7, r1
   1fb58:	stm	r3, {r4, r9}
   1fb5c:	ldr	r7, [fp, #8]
   1fb60:	ldr	r1, [fp, #12]
   1fb64:	cmp	r7, #0
   1fb68:	strne	r5, [r7]
   1fb6c:	cmp	r1, #0
   1fb70:	strne	r0, [r1]
   1fb74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb7c:	add	fp, sp, #28
   1fb80:	sub	sp, sp, #44	; 0x2c
   1fb84:	mov	r4, r3
   1fb88:	mov	sl, r2
   1fb8c:	mov	r9, #0
   1fb90:	str	r9, [sp, #36]	; 0x24
   1fb94:	str	r9, [sp, #32]
   1fb98:	str	r9, [sp, #28]
   1fb9c:	str	r9, [sp, #24]
   1fba0:	str	r9, [sp, #20]
   1fba4:	str	r9, [sp, #16]
   1fba8:	str	r9, [sp, #12]
   1fbac:	str	r9, [sp, #8]
   1fbb0:	sub	r2, r2, r1
   1fbb4:	add	r2, r2, r2, lsr #31
   1fbb8:	add	r6, r1, r2, asr #1
   1fbbc:	add	r7, r0, r6, lsl #4
   1fbc0:	add	r8, sp, #8
   1fbc4:	cmp	r6, sl
   1fbc8:	bge	1fc40 <__flatcc_fb_gen_c_json_parser@@Base+0x3198>
   1fbcc:	str	r9, [sp]
   1fbd0:	str	r9, [sp, #4]
   1fbd4:	mov	r0, r7
   1fbd8:	mov	r1, r4
   1fbdc:	add	r2, sp, #32
   1fbe0:	add	r3, sp, #16
   1fbe4:	bl	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1fbe8:	str	r9, [sp]
   1fbec:	str	r9, [sp, #4]
   1fbf0:	add	r7, r7, #16
   1fbf4:	mov	r0, r7
   1fbf8:	mov	r1, r4
   1fbfc:	add	r2, sp, #24
   1fc00:	mov	r3, r8
   1fc04:	bl	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1fc08:	ldr	r0, [sp, #32]
   1fc0c:	ldr	r1, [sp, #36]	; 0x24
   1fc10:	ldr	r2, [sp, #24]
   1fc14:	ldr	r3, [sp, #28]
   1fc18:	eor	r1, r3, r1
   1fc1c:	ldr	r3, [sp, #16]
   1fc20:	ldr	r5, [sp, #20]
   1fc24:	and	r1, r1, r5
   1fc28:	eor	r0, r2, r0
   1fc2c:	and	r0, r0, r3
   1fc30:	orrs	r0, r0, r1
   1fc34:	add	r6, r6, #1
   1fc38:	beq	1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x311c>
   1fc3c:	b	1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x319c>
   1fc40:	add	r6, r6, #1
   1fc44:	mov	r0, r6
   1fc48:	sub	sp, fp, #28
   1fc4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc50:	push	{r4, r5, r6, r7, fp, lr}
   1fc54:	add	fp, sp, #16
   1fc58:	mov	r6, r1
   1fc5c:	cmp	r1, r2
   1fc60:	bgt	1fc9c <__flatcc_fb_gen_c_json_parser@@Base+0x31f4>
   1fc64:	mov	r4, r3
   1fc68:	mov	r5, r2
   1fc6c:	add	r7, r0, r6, lsl #4
   1fc70:	mov	r0, r7
   1fc74:	mov	r1, r4
   1fc78:	bl	1f600 <__flatcc_fb_gen_c_json_parser@@Base+0x2b58>
   1fc7c:	cmp	r0, #0
   1fc80:	bgt	1fc9c <__flatcc_fb_gen_c_json_parser@@Base+0x31f4>
   1fc84:	add	r7, r7, #16
   1fc88:	add	r0, r6, #1
   1fc8c:	cmp	r6, r5
   1fc90:	mov	r6, r0
   1fc94:	blt	1fc70 <__flatcc_fb_gen_c_json_parser@@Base+0x31c8>
   1fc98:	pop	{r4, r5, r6, r7, fp, pc}
   1fc9c:	mov	r0, r6
   1fca0:	pop	{r4, r5, r6, r7, fp, pc}
   1fca4:	ldr	r2, [r0, #4]
   1fca8:	sub	r0, r2, r1
   1fcac:	add	r1, r1, #8
   1fcb0:	cmp	r1, r2
   1fcb4:	movwlt	r0, #0
   1fcb8:	bx	lr
   1fcbc:	push	{r4, r5, r6, r7, fp, lr}
   1fcc0:	add	fp, sp, #16
   1fcc4:	mov	r5, r3
   1fcc8:	mov	r6, r2
   1fccc:	mov	r7, r1
   1fcd0:	mov	r4, r0
   1fcd4:	ldr	r2, [fp, #8]
   1fcd8:	movw	r1, #36370	; 0x8e12
   1fcdc:	movt	r1, #4
   1fce0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fce4:	movw	r1, #36437	; 0x8e55
   1fce8:	movt	r1, #4
   1fcec:	mov	r0, r4
   1fcf0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fcf4:	ldr	r0, [r4, #220]	; 0xdc
   1fcf8:	add	r0, r0, #1
   1fcfc:	str	r0, [r4, #220]	; 0xdc
   1fd00:	mov	r0, r4
   1fd04:	mov	r1, r7
   1fd08:	mov	r2, r6
   1fd0c:	mov	r3, r5
   1fd10:	bl	1fd74 <__flatcc_fb_gen_c_json_parser@@Base+0x32cc>
   1fd14:	ldr	r0, [r4, #220]	; 0xdc
   1fd18:	cmp	r0, #0
   1fd1c:	beq	1fd48 <__flatcc_fb_gen_c_json_parser@@Base+0x32a0>
   1fd20:	sub	r0, r0, #1
   1fd24:	str	r0, [r4, #220]	; 0xdc
   1fd28:	movw	r1, #34164	; 0x8574
   1fd2c:	movt	r1, #4
   1fd30:	mov	r0, r4
   1fd34:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fd38:	ldr	r0, [r4, #220]	; 0xdc
   1fd3c:	add	r0, r0, #1
   1fd40:	str	r0, [r4, #220]	; 0xdc
   1fd44:	pop	{r4, r5, r6, r7, fp, pc}
   1fd48:	movw	r0, #32324	; 0x7e44
   1fd4c:	movt	r0, #4
   1fd50:	movw	r1, #32336	; 0x7e50
   1fd54:	movt	r1, #4
   1fd58:	movw	r3, #36456	; 0x8e68
   1fd5c:	movt	r3, #4
   1fd60:	movw	r2, #675	; 0x2a3
   1fd64:	bl	14984 <__assert_fail@plt>
   1fd68:	movw	r1, #36190	; 0x8d5e
   1fd6c:	movt	r1, #4
   1fd70:	b	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fd74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd78:	add	fp, sp, #28
   1fd7c:	sub	sp, sp, #540	; 0x21c
   1fd80:	mov	r9, r3
   1fd84:	mov	r6, r2
   1fd88:	mov	r5, r1
   1fd8c:	mov	r4, r0
   1fd90:	sub	r0, fp, #256	; 0x100
   1fd94:	mov	r1, #0
   1fd98:	str	r1, [sp, #104]	; 0x68
   1fd9c:	mov	r1, #0
   1fda0:	mov	r2, #220	; 0xdc
   1fda4:	bl	148dc <memset@plt>
   1fda8:	ldr	r0, [r5, #12]
   1fdac:	add	r1, sp, #108	; 0x6c
   1fdb0:	bl	15ae4 <__flatcc_fb_copy_scope@@Base>
   1fdb4:	str	r6, [sp, #84]	; 0x54
   1fdb8:	ldrh	r0, [r6, #24]
   1fdbc:	ldrh	r1, [r5, #8]
   1fdc0:	str	r1, [sp, #88]	; 0x58
   1fdc4:	cmp	r0, #15
   1fdc8:	mov	r6, #0
   1fdcc:	bhi	1fde4 <__flatcc_fb_gen_c_json_parser@@Base+0x333c>
   1fdd0:	mov	r1, #1
   1fdd4:	movw	r2, #33408	; 0x8280
   1fdd8:	tst	r2, r1, lsl r0
   1fddc:	mov	r6, #0
   1fde0:	movne	r6, #1
   1fde4:	sub	r5, r0, #7
   1fde8:	cmp	r5, #8
   1fdec:	bhi	20898 <__flatcc_fb_gen_c_json_parser@@Base+0x3df0>
   1fdf0:	add	r0, pc, #68	; 0x44
   1fdf4:	mov	lr, #0
   1fdf8:	mov	ip, #0
   1fdfc:	mov	sl, #0
   1fe00:	mov	r2, #0
   1fe04:	str	r2, [sp, #44]	; 0x2c
   1fe08:	mov	r2, #0
   1fe0c:	str	r2, [sp, #36]	; 0x24
   1fe10:	mov	r8, #0
   1fe14:	mov	r2, #0
   1fe18:	str	r2, [sp, #80]	; 0x50
   1fe1c:	mov	r2, #0
   1fe20:	str	r2, [sp, #92]	; 0x5c
   1fe24:	mov	r3, #0
   1fe28:	mov	r2, #0
   1fe2c:	mov	r7, #0
   1fe30:	mov	r1, #0
   1fe34:	str	r1, [sp, #48]	; 0x30
   1fe38:	ldr	pc, [r0, r5, lsl #2]
   1fe3c:	andeq	pc, r1, r8, lsr #30
   1fe40:	andeq	pc, r1, r4, asr #30
   1fe44:	andeq	pc, r1, r0, ror #28
   1fe48:	andeq	pc, r1, r0, ror #28
   1fe4c:	andeq	pc, r1, r4, lsl #31
   1fe50:	andeq	pc, r1, r4, lsl #31
   1fe54:	andeq	pc, r1, r4, lsl #31
   1fe58:	andeq	pc, r1, ip, lsl #29
   1fe5c:	andeq	pc, r1, ip, lsl #29
   1fe60:	mov	r0, #1
   1fe64:	str	r0, [sp, #44]	; 0x2c
   1fe68:	mov	r0, #0
   1fe6c:	str	r0, [sp, #36]	; 0x24
   1fe70:	mov	r8, #0
   1fe74:	mov	r0, #0
   1fe78:	str	r0, [sp, #80]	; 0x50
   1fe7c:	mov	r0, #0
   1fe80:	str	r0, [sp, #92]	; 0x5c
   1fe84:	mov	r3, #0
   1fe88:	b	1ff14 <__flatcc_fb_gen_c_json_parser@@Base+0x346c>
   1fe8c:	ldr	r5, [sp, #84]	; 0x54
   1fe90:	ldr	r0, [r5, #16]
   1fe94:	sub	r1, fp, #256	; 0x100
   1fe98:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1fe9c:	ldr	r0, [r5, #16]
   1fea0:	ldrh	r1, [r0, #8]
   1fea4:	eor	r2, r1, #4
   1fea8:	orr	r2, r9, r2
   1feac:	clz	r2, r2
   1feb0:	lsr	r3, r2, #5
   1feb4:	clz	r2, r1
   1feb8:	lsr	r2, r2, #5
   1febc:	str	r2, [sp, #80]	; 0x50
   1fec0:	sub	r2, r1, #1
   1fec4:	clz	r2, r2
   1fec8:	lsr	r2, r2, #5
   1fecc:	str	r2, [sp, #92]	; 0x5c
   1fed0:	cmp	r1, #3
   1fed4:	bne	1ff00 <__flatcc_fb_gen_c_json_parser@@Base+0x3458>
   1fed8:	ldr	r0, [r0, #40]	; 0x28
   1fedc:	str	r0, [sp, #48]	; 0x30
   1fee0:	mov	r0, #1
   1fee4:	str	r0, [sp, #36]	; 0x24
   1fee8:	mov	r0, #0
   1feec:	str	r0, [sp, #44]	; 0x2c
   1fef0:	mov	r8, #1
   1fef4:	mov	r2, #0
   1fef8:	mov	r7, #0
   1fefc:	b	1ff84 <__flatcc_fb_gen_c_json_parser@@Base+0x34dc>
   1ff00:	mov	r0, #0
   1ff04:	str	r0, [sp, #44]	; 0x2c
   1ff08:	mov	r0, #0
   1ff0c:	str	r0, [sp, #36]	; 0x24
   1ff10:	mov	r8, #0
   1ff14:	mov	r2, #0
   1ff18:	mov	r7, #0
   1ff1c:	mov	r0, #0
   1ff20:	str	r0, [sp, #48]	; 0x30
   1ff24:	b	1ff84 <__flatcc_fb_gen_c_json_parser@@Base+0x34dc>
   1ff28:	ldr	r2, [sp, #84]	; 0x54
   1ff2c:	ldrh	r1, [r2, #72]	; 0x48
   1ff30:	and	ip, r1, #2048	; 0x800
   1ff34:	and	lr, r1, #1024	; 0x400
   1ff38:	ldr	sl, [r2, #104]	; 0x68
   1ff3c:	cmp	sl, #0
   1ff40:	movwne	sl, #1
   1ff44:	ldr	r2, [sp, #84]	; 0x54
   1ff48:	ldr	r0, [r2, #16]
   1ff4c:	str	r0, [sp, #48]	; 0x30
   1ff50:	mov	r8, #1
   1ff54:	mov	r0, #0
   1ff58:	str	r0, [sp, #44]	; 0x2c
   1ff5c:	mov	r0, #0
   1ff60:	str	r0, [sp, #36]	; 0x24
   1ff64:	mov	r0, #0
   1ff68:	str	r0, [sp, #80]	; 0x50
   1ff6c:	mov	r0, #0
   1ff70:	str	r0, [sp, #92]	; 0x5c
   1ff74:	mov	r3, #0
   1ff78:	str	lr, [sp, #104]	; 0x68
   1ff7c:	mov	r2, ip
   1ff80:	mov	r7, sl
   1ff84:	ldr	r5, [sp, #104]	; 0x68
   1ff88:	orrs	r0, r2, r5
   1ff8c:	str	r0, [sp, #64]	; 0x40
   1ff90:	beq	20004 <__flatcc_fb_gen_c_json_parser@@Base+0x355c>
   1ff94:	cmp	r6, #0
   1ff98:	beq	1ffb4 <__flatcc_fb_gen_c_json_parser@@Base+0x350c>
   1ff9c:	mov	r6, #0
   1ffa0:	ldr	r0, [sp, #48]	; 0x30
   1ffa4:	cmp	r0, #4
   1ffa8:	mov	sl, #0
   1ffac:	mov	r7, #0
   1ffb0:	beq	20008 <__flatcc_fb_gen_c_json_parser@@Base+0x3560>
   1ffb4:	movw	r0, #4272	; 0x10b0
   1ffb8:	movt	r0, #6
   1ffbc:	ldr	r0, [r0]
   1ffc0:	movw	r1, #36536	; 0x8eb8
   1ffc4:	movt	r1, #4
   1ffc8:	str	r1, [sp]
   1ffcc:	movw	r1, #21375	; 0x537f
   1ffd0:	movt	r1, #3
   1ffd4:	movw	r4, #32336	; 0x7e50
   1ffd8:	movt	r4, #4
   1ffdc:	mov	r2, r4
   1ffe0:	movw	r3, #466	; 0x1d2
   1ffe4:	bl	148c4 <fprintf@plt>
   1ffe8:	movw	r0, #25261	; 0x62ad
   1ffec:	movt	r0, #4
   1fff0:	movw	r3, #36595	; 0x8ef3
   1fff4:	movt	r3, #4
   1fff8:	mov	r1, r4
   1fffc:	movw	r2, #466	; 0x1d2
   20000:	bl	14984 <__assert_fail@plt>
   20004:	mov	sl, r8
   20008:	ldr	r0, [sp, #84]	; 0x54
   2000c:	add	r0, r0, #48	; 0x30
   20010:	str	r0, [sp, #40]	; 0x28
   20014:	cmp	r6, #0
   20018:	mov	r0, r6
   2001c:	movwne	r0, #1
   20020:	cmp	r9, #0
   20024:	mov	r1, r9
   20028:	movwne	r1, #1
   2002c:	ands	r0, r1, r0
   20030:	str	r0, [sp, #16]
   20034:	movwne	r6, #0
   20038:	cmp	r6, #0
   2003c:	mov	r0, r6
   20040:	movwne	r0, #1
   20044:	cmp	r3, #0
   20048:	str	r3, [sp, #28]
   2004c:	mov	r1, r3
   20050:	movwne	r1, #1
   20054:	ands	r0, r1, r0
   20058:	str	r0, [sp, #24]
   2005c:	movwne	r6, #0
   20060:	str	r6, [sp, #96]	; 0x60
   20064:	cmp	r9, #0
   20068:	movwne	sl, #0
   2006c:	cmp	r7, #0
   20070:	beq	20090 <__flatcc_fb_gen_c_json_parser@@Base+0x35e8>
   20074:	movw	r1, #36673	; 0x8f41
   20078:	movt	r1, #4
   2007c:	mov	r0, r4
   20080:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20084:	ldr	r0, [r4, #220]	; 0xdc
   20088:	add	r0, r0, #1
   2008c:	str	r0, [r4, #220]	; 0xdc
   20090:	ldr	r0, [sp, #40]	; 0x28
   20094:	add	r1, r0, #40	; 0x28
   20098:	str	r1, [sp, #68]	; 0x44
   2009c:	add	r1, r0, #48	; 0x30
   200a0:	str	r1, [sp, #56]	; 0x38
   200a4:	add	r0, r0, #32
   200a8:	str	r0, [sp, #52]	; 0x34
   200ac:	clz	r0, r5
   200b0:	lsr	r0, r0, #5
   200b4:	str	r0, [sp, #32]
   200b8:	str	r9, [sp, #20]
   200bc:	clz	r0, r9
   200c0:	lsr	r0, r0, #5
   200c4:	str	r0, [sp, #76]	; 0x4c
   200c8:	movw	r8, #36532	; 0x8eb4
   200cc:	movt	r8, #4
   200d0:	str	r8, [sp, #60]	; 0x3c
   200d4:	b	200f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3648>
   200d8:	movw	r1, #38884	; 0x97e4
   200dc:	movt	r1, #4
   200e0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   200e4:	mov	r7, #2
   200e8:	cmp	r5, #1
   200ec:	bne	207f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3d50>
   200f0:	cmp	r7, #2
   200f4:	str	r7, [sp, #104]	; 0x68
   200f8:	bne	2019c <__flatcc_fb_gen_c_json_parser@@Base+0x36f4>
   200fc:	ldr	r0, [r4, #220]	; 0xdc
   20100:	cmp	r0, #0
   20104:	beq	208a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3df8>
   20108:	sub	r0, r0, #1
   2010c:	str	r0, [r4, #220]	; 0xdc
   20110:	mov	r0, r4
   20114:	movw	r1, #36725	; 0x8f75
   20118:	movt	r1, #4
   2011c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20120:	ldr	r0, [r4, #220]	; 0xdc
   20124:	add	r0, r0, #1
   20128:	str	r0, [r4, #220]	; 0xdc
   2012c:	ldr	r5, [sp, #84]	; 0x54
   20130:	ldr	r0, [r5, #104]	; 0x68
   20134:	sub	r1, fp, #256	; 0x100
   20138:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   2013c:	ldr	r0, [r5, #104]	; 0x68
   20140:	ldrh	r5, [r0, #8]
   20144:	mov	r0, r4
   20148:	movw	r1, #36747	; 0x8f8b
   2014c:	movt	r1, #4
   20150:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20154:	cmp	r5, #0
   20158:	ldr	r0, [sp, #92]	; 0x5c
   2015c:	movne	r0, #1
   20160:	str	r0, [sp, #92]	; 0x5c
   20164:	clz	r0, r0
   20168:	lsr	r6, r0, #5
   2016c:	ldr	r0, [sp, #76]	; 0x4c
   20170:	and	r0, r6, r0
   20174:	str	r0, [sp, #100]	; 0x64
   20178:	ldr	r0, [sp, #80]	; 0x50
   2017c:	movweq	r0, #1
   20180:	str	r0, [sp, #80]	; 0x50
   20184:	mov	r9, #0
   20188:	mov	r0, #0
   2018c:	str	r0, [sp, #96]	; 0x60
   20190:	mov	sl, #0
   20194:	mov	r7, #0
   20198:	b	203b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   2019c:	ldr	r1, [sp, #92]	; 0x5c
   201a0:	orr	r0, r1, sl
   201a4:	clz	r0, r0
   201a8:	lsr	r6, r0, #5
   201ac:	clz	r9, r1
   201b0:	str	sl, [sp, #72]	; 0x48
   201b4:	cmp	sl, #0
   201b8:	beq	201e4 <__flatcc_fb_gen_c_json_parser@@Base+0x373c>
   201bc:	ldr	r5, [sp, #48]	; 0x30
   201c0:	mov	r0, r5
   201c4:	bl	20a20 <__flatcc_fb_gen_c_json_parser@@Base+0x3f78>
   201c8:	mov	r8, r0
   201cc:	mov	sl, #1
   201d0:	cmp	r5, #5
   201d4:	bne	201ec <__flatcc_fb_gen_c_json_parser@@Base+0x3744>
   201d8:	movw	r0, #47867	; 0xbafb
   201dc:	movt	r0, #3
   201e0:	b	201f4 <__flatcc_fb_gen_c_json_parser@@Base+0x374c>
   201e4:	mov	sl, #0
   201e8:	b	201f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3750>
   201ec:	mov	r0, r5
   201f0:	bl	20a98 <__flatcc_fb_gen_c_json_parser@@Base+0x3ff0>
   201f4:	str	r0, [sp, #60]	; 0x3c
   201f8:	ldr	r0, [sp, #76]	; 0x4c
   201fc:	and	r1, r6, r0
   20200:	lsr	r6, r9, #5
   20204:	ldr	r0, [sp, #96]	; 0x60
   20208:	cmp	r0, #0
   2020c:	str	r1, [sp, #100]	; 0x64
   20210:	beq	20230 <__flatcc_fb_gen_c_json_parser@@Base+0x3788>
   20214:	cmp	r1, #0
   20218:	beq	20250 <__flatcc_fb_gen_c_json_parser@@Base+0x37a8>
   2021c:	mov	r0, r4
   20220:	movw	r1, #36812	; 0x8fcc
   20224:	movt	r1, #4
   20228:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2022c:	b	202a0 <__flatcc_fb_gen_c_json_parser@@Base+0x37f8>
   20230:	mov	r9, #0
   20234:	cmp	sl, #0
   20238:	ldr	sl, [sp, #72]	; 0x48
   2023c:	bne	202e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3838>
   20240:	mov	r0, #0
   20244:	str	r0, [sp, #96]	; 0x60
   20248:	mov	r7, #0
   2024c:	b	203b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   20250:	ldr	r0, [sp, #68]	; 0x44
   20254:	ldm	r0, {r7, r9}
   20258:	orrs	r3, r7, r9
   2025c:	mov	r2, r7
   20260:	movweq	r2, #1
   20264:	movne	r3, r9
   20268:	mvn	r0, #0
   2026c:	mov	r1, #0
   20270:	bl	33d30 <fb_value_set_visit@@Base+0x6c0>
   20274:	ldr	r2, [sp, #84]	; 0x54
   20278:	ldrsh	r2, [r2, #74]	; 0x4a
   2027c:	str	r2, [sp]
   20280:	str	r0, [sp, #8]
   20284:	str	r1, [sp, #12]
   20288:	mov	r0, r4
   2028c:	movw	r1, #36875	; 0x900b
   20290:	movt	r1, #4
   20294:	mov	r2, r7
   20298:	mov	r3, r9
   2029c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   202a0:	mov	r0, r4
   202a4:	movw	r1, #36958	; 0x905e
   202a8:	movt	r1, #4
   202ac:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   202b0:	mov	r0, r4
   202b4:	movw	r1, #36155	; 0x8d3b
   202b8:	movt	r1, #4
   202bc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   202c0:	ldr	r0, [r4, #220]	; 0xdc
   202c4:	add	r0, r0, #1
   202c8:	str	r0, [r4, #220]	; 0xdc
   202cc:	mov	r7, #0
   202d0:	mov	r9, #1
   202d4:	cmp	sl, #0
   202d8:	ldr	sl, [sp, #72]	; 0x48
   202dc:	beq	20388 <__flatcc_fb_gen_c_json_parser@@Base+0x38e0>
   202e0:	mov	r0, r4
   202e4:	movw	r1, #37018	; 0x909a
   202e8:	movt	r1, #4
   202ec:	ldr	r2, [sp, #60]	; 0x3c
   202f0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   202f4:	mov	r0, r4
   202f8:	movw	r1, #37030	; 0x90a6
   202fc:	movt	r1, #4
   20300:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20304:	ldr	r0, [r4, #220]	; 0xdc
   20308:	add	r0, r0, #2
   2030c:	str	r0, [r4, #220]	; 0xdc
   20310:	ldr	r0, [sp, #36]	; 0x24
   20314:	cmp	r0, #0
   20318:	beq	20330 <__flatcc_fb_gen_c_json_parser@@Base+0x3888>
   2031c:	mov	r0, r4
   20320:	movw	r1, #37098	; 0x90ea
   20324:	movt	r1, #4
   20328:	sub	r2, fp, #256	; 0x100
   2032c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20330:	ldr	r0, [r4, #208]	; 0xd0
   20334:	ldr	r2, [r0, #160]	; 0xa0
   20338:	mov	r0, r4
   2033c:	movw	r1, #37118	; 0x90fe
   20340:	movt	r1, #4
   20344:	add	r3, sp, #108	; 0x6c
   20348:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2034c:	ldr	r0, [r4, #208]	; 0xd0
   20350:	ldr	r2, [r0, #160]	; 0xa0
   20354:	mov	r0, r4
   20358:	movw	r1, #37147	; 0x911b
   2035c:	movt	r1, #4
   20360:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20364:	ldr	r0, [r4, #220]	; 0xdc
   20368:	cmp	r0, #0
   2036c:	beq	208c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3e18>
   20370:	subs	r1, r0, #1
   20374:	str	r1, [r4, #220]	; 0xdc
   20378:	beq	208c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3e18>
   2037c:	sub	r0, r0, #2
   20380:	str	r0, [r4, #220]	; 0xdc
   20384:	mov	r7, #1
   20388:	ldr	r0, [sp, #96]	; 0x60
   2038c:	clz	r0, r0
   20390:	lsr	r0, r0, #5
   20394:	ldr	r1, [sp, #100]	; 0x64
   20398:	orrs	r0, r1, r0
   2039c:	bne	203b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   203a0:	mov	r0, r4
   203a4:	movw	r1, #37180	; 0x913c
   203a8:	movt	r1, #4
   203ac:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   203b0:	ldr	r0, [sp, #88]	; 0x58
   203b4:	cmp	r0, #1
   203b8:	bne	203d4 <__flatcc_fb_gen_c_json_parser@@Base+0x392c>
   203bc:	ldr	r0, [sp, #52]	; 0x34
   203c0:	ldrd	r2, [r0]
   203c4:	mov	r0, r4
   203c8:	movw	r1, #37250	; 0x9182
   203cc:	movt	r1, #4
   203d0:	b	20404 <__flatcc_fb_gen_c_json_parser@@Base+0x395c>
   203d4:	orrs	r0, r9, r6
   203d8:	bne	20408 <__flatcc_fb_gen_c_json_parser@@Base+0x3960>
   203dc:	ldr	r0, [sp, #56]	; 0x38
   203e0:	ldrd	r2, [r0]
   203e4:	ldr	r0, [sp, #68]	; 0x44
   203e8:	ldrd	r0, [r0]
   203ec:	ldr	r5, [sp, #84]	; 0x54
   203f0:	ldrh	r5, [r5, #74]	; 0x4a
   203f4:	stm	sp, {r0, r1, r5}
   203f8:	mov	r0, r4
   203fc:	movw	r1, #37295	; 0x91af
   20400:	movt	r1, #4
   20404:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20408:	cmp	r7, #0
   2040c:	beq	204e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3a40>
   20410:	mov	r0, r4
   20414:	movw	r1, #37374	; 0x91fe
   20418:	movt	r1, #4
   2041c:	mov	r2, r8
   20420:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20424:	mov	r0, r4
   20428:	movw	r1, #37433	; 0x9239
   2042c:	movt	r1, #4
   20430:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20434:	ldr	r0, [r4, #220]	; 0xdc
   20438:	add	r0, r0, #1
   2043c:	str	r0, [r4, #220]	; 0xdc
   20440:	mov	r0, r4
   20444:	movw	r1, #37452	; 0x924c
   20448:	movt	r1, #4
   2044c:	mov	r2, r8
   20450:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20454:	mov	r0, r4
   20458:	movw	r1, #37538	; 0x92a2
   2045c:	movt	r1, #4
   20460:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20464:	ldr	r0, [r4, #220]	; 0xdc
   20468:	cmp	r0, #0
   2046c:	beq	208e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3e38>
   20470:	sub	r0, r0, #1
   20474:	str	r0, [r4, #220]	; 0xdc
   20478:	mov	r0, r4
   2047c:	movw	r1, #30713	; 0x77f9
   20480:	movt	r1, #3
   20484:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20488:	ldr	r0, [sp, #88]	; 0x58
   2048c:	sub	r0, r0, #1
   20490:	clz	r0, r0
   20494:	lsr	r0, r0, #5
   20498:	orr	r5, r0, r9
   2049c:	ldr	r0, [sp, #64]	; 0x40
   204a0:	cmp	r0, #0
   204a4:	cmpeq	r5, #0
   204a8:	bne	205b4 <__flatcc_fb_gen_c_json_parser@@Base+0x3b0c>
   204ac:	ldr	r0, [sp, #84]	; 0x54
   204b0:	ldrh	r0, [r0, #56]	; 0x38
   204b4:	sub	r1, r0, #5
   204b8:	cmp	r1, #2
   204bc:	bcc	20548 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa0>
   204c0:	cmp	r0, #3
   204c4:	beq	20560 <__flatcc_fb_gen_c_json_parser@@Base+0x3ab8>
   204c8:	cmp	r0, #4
   204cc:	bne	20940 <__flatcc_fb_gen_c_json_parser@@Base+0x3e98>
   204d0:	ldr	r0, [sp, #40]	; 0x28
   204d4:	ldrd	r2, [r0]
   204d8:	mov	r0, r4
   204dc:	movw	r1, #37650	; 0x9312
   204e0:	movt	r1, #4
   204e4:	b	20578 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad0>
   204e8:	cmp	r6, #0
   204ec:	beq	2050c <__flatcc_fb_gen_c_json_parser@@Base+0x3a64>
   204f0:	ldr	r0, [sp, #44]	; 0x2c
   204f4:	cmp	r0, #0
   204f8:	beq	20524 <__flatcc_fb_gen_c_json_parser@@Base+0x3a7c>
   204fc:	mov	r0, r4
   20500:	movw	r1, #37997	; 0x946d
   20504:	movt	r1, #4
   20508:	b	205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x3b4c>
   2050c:	mov	r0, r4
   20510:	movw	r1, #37941	; 0x9435
   20514:	movt	r1, #4
   20518:	sub	r2, fp, #256	; 0x100
   2051c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20520:	b	205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   20524:	ldr	r0, [sp, #64]	; 0x40
   20528:	cmp	r0, #0
   2052c:	beq	2067c <__flatcc_fb_gen_c_json_parser@@Base+0x3bd4>
   20530:	mov	r0, r4
   20534:	movw	r1, #38057	; 0x94a9
   20538:	movt	r1, #4
   2053c:	ldr	r2, [sp, #32]
   20540:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20544:	b	205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   20548:	ldr	r0, [sp, #40]	; 0x28
   2054c:	ldrd	r2, [r0]
   20550:	mov	r0, r4
   20554:	movw	r1, #37582	; 0x92ce
   20558:	movt	r1, #4
   2055c:	b	20578 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad0>
   20560:	ldr	r0, [sp, #40]	; 0x28
   20564:	vldr	d16, [r0]
   20568:	vmov	r2, r3, d16
   2056c:	mov	r0, r4
   20570:	movw	r1, #37718	; 0x9356
   20574:	movt	r1, #4
   20578:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2057c:	ldr	r0, [r4, #220]	; 0xdc
   20580:	add	r0, r0, #1
   20584:	str	r0, [r4, #220]	; 0xdc
   20588:	ldr	r0, [sp, #56]	; 0x38
   2058c:	ldrd	r2, [r0]
   20590:	ldr	r0, [sp, #68]	; 0x44
   20594:	ldrd	r0, [r0]
   20598:	ldr	r7, [sp, #84]	; 0x54
   2059c:	ldrsh	r7, [r7, #74]	; 0x4a
   205a0:	stm	sp, {r0, r1, r7}
   205a4:	mov	r0, r4
   205a8:	movw	r1, #37832	; 0x93c8
   205ac:	movt	r1, #4
   205b0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   205b4:	mov	r0, r4
   205b8:	movw	r1, #37912	; 0x9418
   205bc:	movt	r1, #4
   205c0:	mov	r2, r4
   205c4:	mov	r3, r8
   205c8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   205cc:	cmp	r5, #0
   205d0:	bne	205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   205d4:	ldr	r0, [r4, #220]	; 0xdc
   205d8:	cmp	r0, #0
   205dc:	beq	20920 <__flatcc_fb_gen_c_json_parser@@Base+0x3e78>
   205e0:	sub	r0, r0, #1
   205e4:	str	r0, [r4, #220]	; 0xdc
   205e8:	mov	r0, r4
   205ec:	movw	r1, #30713	; 0x77f9
   205f0:	movt	r1, #3
   205f4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   205f8:	cmp	r9, #0
   205fc:	ldr	r5, [sp, #104]	; 0x68
   20600:	beq	200e4 <__flatcc_fb_gen_c_json_parser@@Base+0x363c>
   20604:	ldr	r6, [sp, #100]	; 0x64
   20608:	cmp	r6, #0
   2060c:	beq	20630 <__flatcc_fb_gen_c_json_parser@@Base+0x3b88>
   20610:	mov	r0, r4
   20614:	movw	r1, #38678	; 0x9716
   20618:	movt	r1, #4
   2061c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20620:	mov	r0, r4
   20624:	movw	r1, #38763	; 0x976b
   20628:	movt	r1, #4
   2062c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20630:	mov	r0, r4
   20634:	movw	r1, #38776	; 0x9778
   20638:	movt	r1, #4
   2063c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20640:	ldr	r0, [r4, #220]	; 0xdc
   20644:	cmp	r0, #0
   20648:	beq	20900 <__flatcc_fb_gen_c_json_parser@@Base+0x3e58>
   2064c:	sub	r0, r0, #1
   20650:	str	r0, [r4, #220]	; 0xdc
   20654:	mov	r0, r4
   20658:	movw	r1, #30713	; 0x77f9
   2065c:	movt	r1, #3
   20660:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20664:	mov	r0, r4
   20668:	cmp	r6, #0
   2066c:	beq	200d8 <__flatcc_fb_gen_c_json_parser@@Base+0x3630>
   20670:	movw	r1, #38834	; 0x97b2
   20674:	movt	r1, #4
   20678:	b	200e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3638>
   2067c:	ldr	r0, [sp, #80]	; 0x50
   20680:	cmp	r0, #0
   20684:	beq	20698 <__flatcc_fb_gen_c_json_parser@@Base+0x3bf0>
   20688:	mov	r0, r4
   2068c:	movw	r1, #38134	; 0x94f6
   20690:	movt	r1, #4
   20694:	b	20518 <__flatcc_fb_gen_c_json_parser@@Base+0x3a70>
   20698:	ldr	r0, [sp, #28]
   2069c:	cmp	r0, #0
   206a0:	beq	206dc <__flatcc_fb_gen_c_json_parser@@Base+0x3c34>
   206a4:	ldr	r0, [sp, #56]	; 0x38
   206a8:	ldrd	r0, [r0]
   206ac:	ldr	r2, [sp, #84]	; 0x54
   206b0:	ldr	r2, [r2, #112]	; 0x70
   206b4:	ldr	r3, [sp, #24]
   206b8:	cmp	r3, #0
   206bc:	beq	207a8 <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   206c0:	stm	sp, {r0, r1}
   206c4:	sub	r0, fp, #256	; 0x100
   206c8:	str	r0, [sp, #8]
   206cc:	mov	r0, r4
   206d0:	movw	r1, #38182	; 0x9526
   206d4:	movt	r1, #4
   206d8:	b	207ec <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   206dc:	ldr	r0, [sp, #20]
   206e0:	cmp	r0, #0
   206e4:	beq	207c4 <__flatcc_fb_gen_c_json_parser@@Base+0x3d1c>
   206e8:	mov	r0, r4
   206ec:	movw	r1, #37030	; 0x90a6
   206f0:	movt	r1, #4
   206f4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   206f8:	ldr	r0, [r4, #220]	; 0xdc
   206fc:	add	r0, r0, #2
   20700:	str	r0, [r4, #220]	; 0xdc
   20704:	mov	r0, r4
   20708:	movw	r1, #37098	; 0x90ea
   2070c:	movt	r1, #4
   20710:	sub	r2, fp, #256	; 0x100
   20714:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20718:	ldr	r0, [r4, #208]	; 0xd0
   2071c:	ldr	r2, [r0, #160]	; 0xa0
   20720:	mov	r0, r4
   20724:	movw	r1, #37118	; 0x90fe
   20728:	movt	r1, #4
   2072c:	add	r3, sp, #108	; 0x6c
   20730:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20734:	ldr	r0, [r4, #208]	; 0xd0
   20738:	ldr	r2, [r0, #160]	; 0xa0
   2073c:	mov	r0, r4
   20740:	movw	r1, #37147	; 0x911b
   20744:	movt	r1, #4
   20748:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2074c:	ldr	r0, [r4, #220]	; 0xdc
   20750:	cmp	r0, #0
   20754:	beq	20990 <__flatcc_fb_gen_c_json_parser@@Base+0x3ee8>
   20758:	subs	r1, r0, #1
   2075c:	str	r1, [r4, #220]	; 0xdc
   20760:	beq	20990 <__flatcc_fb_gen_c_json_parser@@Base+0x3ee8>
   20764:	sub	r0, r0, #2
   20768:	str	r0, [r4, #220]	; 0xdc
   2076c:	ldr	r0, [sp, #56]	; 0x38
   20770:	ldrd	r0, [r0]
   20774:	ldr	r2, [sp, #84]	; 0x54
   20778:	ldr	r2, [r2, #112]	; 0x70
   2077c:	ldr	r3, [sp, #16]
   20780:	cmp	r3, #0
   20784:	beq	207d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3d2c>
   20788:	stm	sp, {r0, r1}
   2078c:	sub	r0, fp, #256	; 0x100
   20790:	str	r0, [sp, #8]
   20794:	str	r0, [sp, #12]
   20798:	mov	r0, r4
   2079c:	movw	r1, #38369	; 0x95e1
   207a0:	movt	r1, #4
   207a4:	b	207ec <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   207a8:	stm	sp, {r0, r1}
   207ac:	sub	r0, fp, #256	; 0x100
   207b0:	str	r0, [sp, #8]
   207b4:	mov	r0, r4
   207b8:	movw	r1, #38279	; 0x9587
   207bc:	movt	r1, #4
   207c0:	b	207ec <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   207c4:	cmp	r9, #0
   207c8:	ldr	r5, [sp, #104]	; 0x68
   207cc:	bne	20604 <__flatcc_fb_gen_c_json_parser@@Base+0x3b5c>
   207d0:	b	209b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3f08>
   207d4:	stm	sp, {r0, r1}
   207d8:	sub	r0, fp, #256	; 0x100
   207dc:	str	r0, [sp, #8]
   207e0:	mov	r0, r4
   207e4:	movw	r1, #38516	; 0x9674
   207e8:	movt	r1, #4
   207ec:	mov	r3, #0
   207f0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   207f4:	b	205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   207f8:	cmp	r5, #2
   207fc:	bne	20844 <__flatcc_fb_gen_c_json_parser@@Base+0x3d9c>
   20800:	movw	r1, #38927	; 0x980f
   20804:	movt	r1, #4
   20808:	mov	r0, r4
   2080c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20810:	movw	r1, #38950	; 0x9826
   20814:	movt	r1, #4
   20818:	mov	r0, r4
   2081c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20820:	ldr	r0, [r4, #220]	; 0xdc
   20824:	cmp	r0, #0
   20828:	beq	20a00 <__flatcc_fb_gen_c_json_parser@@Base+0x3f58>
   2082c:	sub	r0, r0, #1
   20830:	str	r0, [r4, #220]	; 0xdc
   20834:	movw	r1, #38998	; 0x9856
   20838:	movt	r1, #4
   2083c:	mov	r0, r4
   20840:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20844:	ldr	r0, [sp, #44]	; 0x2c
   20848:	ldr	r1, [sp, #64]	; 0x40
   2084c:	orr	r0, r1, r0
   20850:	orr	r0, r0, r5
   20854:	ldr	r1, [sp, #96]	; 0x60
   20858:	orr	r0, r0, r1
   2085c:	ldr	r1, [sp, #80]	; 0x50
   20860:	orrs	r0, r0, r1
   20864:	beq	20890 <__flatcc_fb_gen_c_json_parser@@Base+0x3de8>
   20868:	ldr	r0, [sp, #40]	; 0x28
   2086c:	ldrd	r2, [r0, #48]	; 0x30
   20870:	movw	r1, #39017	; 0x9869
   20874:	movt	r1, #4
   20878:	mov	r0, r4
   2087c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20880:	movw	r1, #38763	; 0x976b
   20884:	movt	r1, #4
   20888:	mov	r0, r4
   2088c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20890:	sub	sp, fp, #28
   20894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20898:	mov	r0, #0
   2089c:	b	1fe64 <__flatcc_fb_gen_c_json_parser@@Base+0x33bc>
   208a0:	movw	r0, #32324	; 0x7e44
   208a4:	movt	r0, #4
   208a8:	movw	r1, #32336	; 0x7e50
   208ac:	movt	r1, #4
   208b0:	movw	r3, #36595	; 0x8ef3
   208b4:	movt	r3, #4
   208b8:	movw	r2, #490	; 0x1ea
   208bc:	bl	14984 <__assert_fail@plt>
   208c0:	movw	r0, #32324	; 0x7e44
   208c4:	movt	r0, #4
   208c8:	movw	r1, #32336	; 0x7e50
   208cc:	movt	r1, #4
   208d0:	movw	r3, #36595	; 0x8ef3
   208d4:	movt	r3, #4
   208d8:	movw	r2, #539	; 0x21b
   208dc:	bl	14984 <__assert_fail@plt>
   208e0:	movw	r0, #32324	; 0x7e44
   208e4:	movt	r0, #4
   208e8:	movw	r1, #32336	; 0x7e50
   208ec:	movt	r1, #4
   208f0:	movw	r3, #36595	; 0x8ef3
   208f4:	movt	r3, #4
   208f8:	movw	r2, #559	; 0x22f
   208fc:	bl	14984 <__assert_fail@plt>
   20900:	movw	r0, #32324	; 0x7e44
   20904:	movt	r0, #4
   20908:	movw	r1, #32336	; 0x7e50
   2090c:	movt	r1, #4
   20910:	movw	r3, #36595	; 0x8ef3
   20914:	movt	r3, #4
   20918:	movw	r2, #647	; 0x287
   2091c:	bl	14984 <__assert_fail@plt>
   20920:	movw	r0, #32324	; 0x7e44
   20924:	movt	r0, #4
   20928:	movw	r1, #32336	; 0x7e50
   2092c:	movt	r1, #4
   20930:	movw	r3, #36595	; 0x8ef3
   20934:	movt	r3, #4
   20938:	movw	r2, #602	; 0x25a
   2093c:	bl	14984 <__assert_fail@plt>
   20940:	movw	r0, #4272	; 0x10b0
   20944:	movt	r0, #6
   20948:	ldr	r0, [r0]
   2094c:	movw	r1, #37785	; 0x9399
   20950:	movt	r1, #4
   20954:	str	r1, [sp]
   20958:	movw	r1, #21375	; 0x537f
   2095c:	movt	r1, #3
   20960:	movw	r4, #32336	; 0x7e50
   20964:	movt	r4, #4
   20968:	mov	r2, r4
   2096c:	movw	r3, #590	; 0x24e
   20970:	bl	148c4 <fprintf@plt>
   20974:	movw	r0, #25261	; 0x62ad
   20978:	movt	r0, #4
   2097c:	movw	r3, #36595	; 0x8ef3
   20980:	movt	r3, #4
   20984:	mov	r1, r4
   20988:	movw	r2, #590	; 0x24e
   2098c:	bl	14984 <__assert_fail@plt>
   20990:	movw	r0, #32324	; 0x7e44
   20994:	movt	r0, #4
   20998:	movw	r1, #32336	; 0x7e50
   2099c:	movt	r1, #4
   209a0:	movw	r3, #36595	; 0x8ef3
   209a4:	movt	r3, #4
   209a8:	movw	r2, #627	; 0x273
   209ac:	bl	14984 <__assert_fail@plt>
   209b0:	movw	r0, #4272	; 0x10b0
   209b4:	movt	r0, #6
   209b8:	ldr	r0, [r0]
   209bc:	movw	r1, #38629	; 0x96e5
   209c0:	movt	r1, #4
   209c4:	str	r1, [sp]
   209c8:	movw	r1, #21375	; 0x537f
   209cc:	movt	r1, #3
   209d0:	movw	r4, #32336	; 0x7e50
   209d4:	movt	r4, #4
   209d8:	mov	r2, r4
   209dc:	mov	r3, #636	; 0x27c
   209e0:	bl	148c4 <fprintf@plt>
   209e4:	movw	r0, #25261	; 0x62ad
   209e8:	movt	r0, #4
   209ec:	movw	r3, #36595	; 0x8ef3
   209f0:	movt	r3, #4
   209f4:	mov	r1, r4
   209f8:	mov	r2, #636	; 0x27c
   209fc:	bl	14984 <__assert_fail@plt>
   20a00:	movw	r0, #32324	; 0x7e44
   20a04:	movt	r0, #4
   20a08:	movw	r1, #32336	; 0x7e50
   20a0c:	movt	r1, #4
   20a10:	movw	r3, #36595	; 0x8ef3
   20a14:	movt	r3, #4
   20a18:	movw	r2, #661	; 0x295
   20a1c:	bl	14984 <__assert_fail@plt>
   20a20:	push	{r4, sl, fp, lr}
   20a24:	add	fp, sp, #8
   20a28:	sub	sp, sp, #8
   20a2c:	sub	r0, r0, #1
   20a30:	cmp	r0, #11
   20a34:	movwcc	r1, #41900	; 0xa3ac
   20a38:	movtcc	r1, #4
   20a3c:	ldrcc	r0, [r1, r0, lsl #2]
   20a40:	subcc	sp, fp, #8
   20a44:	popcc	{r4, sl, fp, pc}
   20a48:	movw	r0, #4272	; 0x10b0
   20a4c:	movt	r0, #6
   20a50:	ldr	r0, [r0]
   20a54:	movw	r1, #47968	; 0xbb60
   20a58:	movt	r1, #3
   20a5c:	str	r1, [sp]
   20a60:	movw	r1, #21375	; 0x537f
   20a64:	movt	r1, #3
   20a68:	movw	r4, #47895	; 0xbb17
   20a6c:	movt	r4, #3
   20a70:	mov	r2, r4
   20a74:	mov	r3, #96	; 0x60
   20a78:	bl	148c4 <fprintf@plt>
   20a7c:	movw	r0, #25261	; 0x62ad
   20a80:	movt	r0, #4
   20a84:	movw	r3, #50320	; 0xc490
   20a88:	movt	r3, #3
   20a8c:	mov	r1, r4
   20a90:	mov	r2, #96	; 0x60
   20a94:	bl	14984 <__assert_fail@plt>
   20a98:	push	{r4, sl, fp, lr}
   20a9c:	add	fp, sp, #8
   20aa0:	sub	sp, sp, #8
   20aa4:	sub	r0, r0, #1
   20aa8:	cmp	r0, #11
   20aac:	movwcc	r1, #41944	; 0xa3d8
   20ab0:	movtcc	r1, #4
   20ab4:	ldrcc	r0, [r1, r0, lsl #2]
   20ab8:	subcc	sp, fp, #8
   20abc:	popcc	{r4, sl, fp, pc}
   20ac0:	movw	r0, #4272	; 0x10b0
   20ac4:	movt	r0, #6
   20ac8:	ldr	r0, [r0]
   20acc:	movw	r1, #47968	; 0xbb60
   20ad0:	movt	r1, #3
   20ad4:	str	r1, [sp]
   20ad8:	movw	r1, #21375	; 0x537f
   20adc:	movt	r1, #3
   20ae0:	movw	r4, #47895	; 0xbb17
   20ae4:	movt	r4, #3
   20ae8:	mov	r2, r4
   20aec:	mov	r3, #141	; 0x8d
   20af0:	bl	148c4 <fprintf@plt>
   20af4:	movw	r0, #25261	; 0x62ad
   20af8:	movt	r0, #4
   20afc:	movw	r3, #48023	; 0xbb97
   20b00:	movt	r3, #3
   20b04:	mov	r1, r4
   20b08:	mov	r2, #141	; 0x8d
   20b0c:	bl	14984 <__assert_fail@plt>
   20b10:	push	{r4, r5, r6, sl, fp, lr}
   20b14:	add	fp, sp, #16
   20b18:	sub	sp, sp, #16
   20b1c:	mov	r6, r2
   20b20:	mov	r4, #0
   20b24:	str	r4, [sp]
   20b28:	stmib	sp, {r0, r4}
   20b2c:	add	r5, r1, #4
   20b30:	movw	r1, #3152	; 0xc50
   20b34:	movt	r1, #2
   20b38:	mov	r2, sp
   20b3c:	mov	r0, r5
   20b40:	bl	25fe0 <fb_symbol_table_visit@@Base>
   20b44:	ldr	r0, [sp]
   20b48:	str	r0, [r6]
   20b4c:	cmp	r0, #0
   20b50:	beq	20b9c <__flatcc_fb_gen_c_json_parser@@Base+0x40f4>
   20b54:	lsl	r0, r0, #4
   20b58:	bl	14870 <malloc@plt>
   20b5c:	cmp	r0, #0
   20b60:	beq	20b9c <__flatcc_fb_gen_c_json_parser@@Base+0x40f4>
   20b64:	mov	r6, r0
   20b68:	str	r0, [sp, #8]
   20b6c:	movw	r1, #3192	; 0xc78
   20b70:	movt	r1, #2
   20b74:	mov	r2, sp
   20b78:	mov	r0, r5
   20b7c:	bl	25fe0 <fb_symbol_table_visit@@Base>
   20b80:	ldr	r1, [sp]
   20b84:	movw	r3, #62752	; 0xf520
   20b88:	movt	r3, #1
   20b8c:	mov	r0, r6
   20b90:	mov	r2, #16
   20b94:	bl	14948 <qsort@plt>
   20b98:	mov	r4, r6
   20b9c:	mov	r0, r4
   20ba0:	sub	sp, fp, #16
   20ba4:	pop	{r4, r5, r6, sl, fp, pc}
   20ba8:	push	{r4, r5, fp, lr}
   20bac:	add	fp, sp, #8
   20bb0:	mov	r5, r2
   20bb4:	mov	r4, r0
   20bb8:	ldr	r2, [fp, #8]
   20bbc:	movw	r1, #40776	; 0x9f48
   20bc0:	movt	r1, #4
   20bc4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20bc8:	movw	r1, #34973	; 0x889d
   20bcc:	movt	r1, #4
   20bd0:	mov	r0, r4
   20bd4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20bd8:	ldr	r0, [r4, #220]	; 0xdc
   20bdc:	add	r0, r0, #1
   20be0:	str	r0, [r4, #220]	; 0xdc
   20be4:	mov	r0, r4
   20be8:	mov	r1, r5
   20bec:	bl	20d18 <__flatcc_fb_gen_c_json_parser@@Base+0x4270>
   20bf0:	ldr	r0, [r4, #220]	; 0xdc
   20bf4:	cmp	r0, #0
   20bf8:	beq	20c24 <__flatcc_fb_gen_c_json_parser@@Base+0x417c>
   20bfc:	sub	r0, r0, #1
   20c00:	str	r0, [r4, #220]	; 0xdc
   20c04:	movw	r1, #34164	; 0x8574
   20c08:	movt	r1, #4
   20c0c:	mov	r0, r4
   20c10:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20c14:	ldr	r0, [r4, #220]	; 0xdc
   20c18:	add	r0, r0, #1
   20c1c:	str	r0, [r4, #220]	; 0xdc
   20c20:	pop	{r4, r5, fp, pc}
   20c24:	movw	r0, #32324	; 0x7e44
   20c28:	movt	r0, #4
   20c2c:	movw	r1, #32336	; 0x7e50
   20c30:	movt	r1, #4
   20c34:	movw	r3, #40842	; 0x9f8a
   20c38:	movt	r3, #4
   20c3c:	movw	r2, #742	; 0x2e6
   20c40:	bl	14984 <__assert_fail@plt>
   20c44:	movw	r1, #35264	; 0x89c0
   20c48:	movt	r1, #4
   20c4c:	b	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20c50:	push	{r4, sl, fp, lr}
   20c54:	add	fp, sp, #8
   20c58:	mov	r4, r0
   20c5c:	ldr	r0, [r0, #4]
   20c60:	bl	20cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x421c>
   20c64:	cmp	r0, #0
   20c68:	ldrne	r0, [r4]
   20c6c:	addne	r0, r0, #1
   20c70:	strne	r0, [r4]
   20c74:	pop	{r4, sl, fp, pc}
   20c78:	push	{r4, r5, fp, lr}
   20c7c:	add	fp, sp, #8
   20c80:	mov	r5, r1
   20c84:	mov	r4, r0
   20c88:	ldr	r0, [r0, #4]
   20c8c:	bl	20cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x421c>
   20c90:	cmp	r0, #0
   20c94:	popeq	{r4, r5, fp, pc}
   20c98:	ldr	r0, [r4, #8]
   20c9c:	ldr	r1, [r5, #4]
   20ca0:	ldr	r1, [r1]
   20ca4:	str	r1, [r0]
   20ca8:	ldr	r0, [r5, #4]
   20cac:	ldr	r0, [r0, #4]
   20cb0:	ldr	r1, [r4, #8]
   20cb4:	stmib	r1, {r0, r5}
   20cb8:	add	r0, r1, #16
   20cbc:	str	r0, [r4, #8]
   20cc0:	pop	{r4, r5, fp, pc}
   20cc4:	push	{r4, sl, fp, lr}
   20cc8:	add	fp, sp, #8
   20ccc:	mov	r4, r1
   20cd0:	ldrh	r1, [r1, #8]
   20cd4:	sub	r1, r1, #3
   20cd8:	cmp	r1, #1
   20cdc:	bhi	20cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x4250>
   20ce0:	ldr	r1, [r4, #16]
   20ce4:	add	r0, r0, #172	; 0xac
   20ce8:	bl	20d00 <__flatcc_fb_gen_c_json_parser@@Base+0x4258>
   20cec:	cmp	r0, #0
   20cf0:	movne	r0, r4
   20cf4:	pop	{r4, sl, fp, pc}
   20cf8:	mov	r0, #0
   20cfc:	pop	{r4, sl, fp, pc}
   20d00:	push	{fp, lr}
   20d04:	mov	fp, sp
   20d08:	bl	258d8 <ptr_set_find_item@@Base>
   20d0c:	cmp	r0, #0
   20d10:	movwne	r0, #1
   20d14:	pop	{fp, pc}
   20d18:	push	{r4, r5, r6, sl, fp, lr}
   20d1c:	add	fp, sp, #16
   20d20:	sub	sp, sp, #224	; 0xe0
   20d24:	mov	r4, r0
   20d28:	ldrh	r0, [r1, #8]
   20d2c:	sub	r0, r0, #3
   20d30:	uxth	r0, r0
   20d34:	cmp	r0, #2
   20d38:	bcs	20d7c <__flatcc_fb_gen_c_json_parser@@Base+0x42d4>
   20d3c:	mov	r5, r1
   20d40:	mov	r6, sp
   20d44:	mov	r0, r6
   20d48:	mov	r1, #0
   20d4c:	mov	r2, #220	; 0xdc
   20d50:	bl	148dc <memset@plt>
   20d54:	mov	r0, r5
   20d58:	mov	r1, r6
   20d5c:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   20d60:	movw	r1, #40997	; 0xa025
   20d64:	movt	r1, #4
   20d68:	mov	r0, r4
   20d6c:	mov	r2, r6
   20d70:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20d74:	sub	sp, fp, #16
   20d78:	pop	{r4, r5, r6, sl, fp, pc}
   20d7c:	movw	r0, #47077	; 0xb7e5
   20d80:	movt	r0, #3
   20d84:	movw	r1, #32336	; 0x7e50
   20d88:	movt	r1, #4
   20d8c:	movw	r3, #40918	; 0x9fd6
   20d90:	movt	r3, #4
   20d94:	movw	r2, #729	; 0x2d9
   20d98:	bl	14984 <__assert_fail@plt>
   20d9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20da0:	add	fp, sp, #24
   20da4:	mov	r8, r2
   20da8:	mov	r4, r0
   20dac:	mov	r0, #0
   20db0:	vmov.i32	q8, #0	; 0x00000000
   20db4:	str	r0, [r4, #36]	; 0x24
   20db8:	str	r1, [r4, #40]	; 0x28
   20dbc:	mov	r0, #1
   20dc0:	str	r0, [r4]
   20dc4:	add	r0, r4, #20
   20dc8:	vst1.32	{d16-d17}, [r0]
   20dcc:	add	r0, r4, #4
   20dd0:	vst1.32	{d16-d17}, [r0]
   20dd4:	movw	r1, #4024	; 0xfb8
   20dd8:	movt	r1, #2
   20ddc:	mov	r0, r2
   20de0:	mov	r2, r4
   20de4:	bl	265d8 <fb_scope_table_visit@@Base>
   20de8:	ldr	r5, [r4, #4]
   20dec:	mov	r0, r5
   20df0:	mov	r1, #8
   20df4:	bl	147d4 <calloc@plt>
   20df8:	str	r0, [r4, #16]
   20dfc:	ldr	r7, [r4, #8]
   20e00:	mov	r0, r7
   20e04:	mov	r1, #8
   20e08:	bl	147d4 <calloc@plt>
   20e0c:	str	r0, [r4, #20]
   20e10:	ldr	r6, [r4, #12]
   20e14:	mov	r0, r6
   20e18:	bl	14870 <malloc@plt>
   20e1c:	ldr	r1, [r4, #16]
   20e20:	ldr	r2, [r4, #20]
   20e24:	add	r3, r4, #24
   20e28:	stm	r3, {r0, r1, r2}
   20e2c:	str	r0, [r4, #36]	; 0x24
   20e30:	cmp	r5, #1
   20e34:	blt	20e40 <__flatcc_fb_gen_c_json_parser@@Base+0x4398>
   20e38:	cmp	r1, #0
   20e3c:	beq	20e64 <__flatcc_fb_gen_c_json_parser@@Base+0x43bc>
   20e40:	cmp	r7, #1
   20e44:	blt	20e54 <__flatcc_fb_gen_c_json_parser@@Base+0x43ac>
   20e48:	ldr	r1, [r4, #20]
   20e4c:	cmp	r1, #0
   20e50:	beq	20e64 <__flatcc_fb_gen_c_json_parser@@Base+0x43bc>
   20e54:	cmp	r6, #0
   20e58:	beq	20e74 <__flatcc_fb_gen_c_json_parser@@Base+0x43cc>
   20e5c:	cmp	r0, #0
   20e60:	bne	20e74 <__flatcc_fb_gen_c_json_parser@@Base+0x43cc>
   20e64:	mov	r0, r4
   20e68:	bl	20f60 <__flatcc_fb_gen_c_json_parser@@Base+0x44b8>
   20e6c:	mvn	r0, #0
   20e70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20e74:	movw	r1, #4044	; 0xfcc
   20e78:	movt	r1, #2
   20e7c:	mov	r0, r8
   20e80:	mov	r2, r4
   20e84:	bl	265d8 <fb_scope_table_visit@@Base>
   20e88:	ldr	r1, [r4, #4]
   20e8c:	ldr	r0, [r4, #16]
   20e90:	bl	20fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x4538>
   20e94:	ldr	r1, [r4, #8]
   20e98:	ldr	r0, [r4, #20]
   20e9c:	bl	20fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x4538>
   20ea0:	mov	r0, #0
   20ea4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20eac:	add	fp, sp, #28
   20eb0:	sub	sp, sp, #4
   20eb4:	mov	r5, r0
   20eb8:	ldr	r0, [r0, #8]
   20ebc:	str	r0, [r1]
   20ec0:	mov	r7, #0
   20ec4:	cmp	r0, #0
   20ec8:	beq	20f54 <__flatcc_fb_gen_c_json_parser@@Base+0x44ac>
   20ecc:	mov	r8, r1
   20ed0:	lsl	r0, r0, #4
   20ed4:	bl	14870 <malloc@plt>
   20ed8:	cmp	r0, #0
   20edc:	beq	20f54 <__flatcc_fb_gen_c_json_parser@@Base+0x44ac>
   20ee0:	mov	r9, r0
   20ee4:	ldr	r1, [r5, #8]
   20ee8:	cmp	r1, #1
   20eec:	blt	20f34 <__flatcc_fb_gen_c_json_parser@@Base+0x448c>
   20ef0:	add	r7, r9, #8
   20ef4:	mov	sl, #0
   20ef8:	mov	r6, #0
   20efc:	ldr	r4, [r5, #20]
   20f00:	add	r0, r4, r6, lsl #3
   20f04:	ldr	r1, [r0, #4]
   20f08:	str	r1, [r7, #-8]
   20f0c:	ldr	r0, [r0, #4]
   20f10:	bl	148b8 <strlen@plt>
   20f14:	str	r0, [r7, #-4]
   20f18:	ldr	r0, [r4, r6, lsl #3]
   20f1c:	stm	r7, {r0, sl}
   20f20:	add	r7, r7, #16
   20f24:	add	r6, r6, #1
   20f28:	ldr	r1, [r5, #8]
   20f2c:	cmp	r6, r1
   20f30:	blt	20efc <__flatcc_fb_gen_c_json_parser@@Base+0x4454>
   20f34:	movw	r3, #62752	; 0xf520
   20f38:	movt	r3, #1
   20f3c:	mov	r0, r9
   20f40:	mov	r2, #16
   20f44:	bl	14948 <qsort@plt>
   20f48:	ldr	r0, [r5, #8]
   20f4c:	str	r0, [r8]
   20f50:	mov	r7, r9
   20f54:	mov	r0, r7
   20f58:	sub	sp, fp, #28
   20f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f60:	push	{r4, sl, fp, lr}
   20f64:	add	fp, sp, #8
   20f68:	mov	r4, r0
   20f6c:	ldr	r0, [r0, #16]
   20f70:	cmp	r0, #0
   20f74:	beq	20f7c <__flatcc_fb_gen_c_json_parser@@Base+0x44d4>
   20f78:	bl	14804 <free@plt>
   20f7c:	ldr	r0, [r4, #20]
   20f80:	cmp	r0, #0
   20f84:	beq	20f8c <__flatcc_fb_gen_c_json_parser@@Base+0x44e4>
   20f88:	bl	14804 <free@plt>
   20f8c:	ldr	r0, [r4, #24]
   20f90:	cmp	r0, #0
   20f94:	beq	20f9c <__flatcc_fb_gen_c_json_parser@@Base+0x44f4>
   20f98:	bl	14804 <free@plt>
   20f9c:	vmov.i32	q8, #0	; 0x00000000
   20fa0:	mov	r0, #28
   20fa4:	add	r1, r4, #16
   20fa8:	vst1.32	{d16-d17}, [r4], r0
   20fac:	vst1.32	{d16-d17}, [r4]
   20fb0:	vst1.32	{d16-d17}, [r1]
   20fb4:	pop	{r4, sl, fp, pc}
   20fb8:	mov	r2, r0
   20fbc:	add	r0, r1, #4
   20fc0:	movw	r1, #4132	; 0x1024
   20fc4:	movt	r1, #2
   20fc8:	b	25fe0 <fb_symbol_table_visit@@Base>
   20fcc:	mov	r2, r0
   20fd0:	add	r0, r1, #4
   20fd4:	movw	r1, #4372	; 0x1114
   20fd8:	movt	r1, #2
   20fdc:	b	25fe0 <fb_symbol_table_visit@@Base>
   20fe0:	push	{r4, r5, fp, lr}
   20fe4:	add	fp, sp, #8
   20fe8:	mov	r4, r1
   20fec:	mov	r5, r0
   20ff0:	movw	r3, #4620	; 0x120c
   20ff4:	movt	r3, #2
   20ff8:	mov	r2, #8
   20ffc:	bl	14948 <qsort@plt>
   21000:	cmp	r4, #1
   21004:	poplt	{r4, r5, fp, pc}
   21008:	mov	r0, #0
   2100c:	ldr	r1, [r5, r0, lsl #3]
   21010:	str	r0, [r1, #124]	; 0x7c
   21014:	add	r0, r0, #1
   21018:	cmp	r4, r0
   2101c:	bne	2100c <__flatcc_fb_gen_c_json_parser@@Base+0x4564>
   21020:	pop	{r4, r5, fp, pc}
   21024:	push	{r4, r5, fp, lr}
   21028:	add	fp, sp, #8
   2102c:	mov	r5, r1
   21030:	mov	r4, r0
   21034:	ldr	r0, [r0, #40]	; 0x28
   21038:	bl	210dc <__flatcc_fb_gen_c_json_parser@@Base+0x4634>
   2103c:	cmp	r0, #0
   21040:	popeq	{r4, r5, fp, pc}
   21044:	ldr	r2, [r4]
   21048:	mov	r1, #1
   2104c:	cmp	r2, #0
   21050:	beq	2108c <__flatcc_fb_gen_c_json_parser@@Base+0x45e4>
   21054:	ldr	r0, [r0, #12]
   21058:	ldr	r0, [r0]
   2105c:	cmp	r0, #0
   21060:	beq	2108c <__flatcc_fb_gen_c_json_parser@@Base+0x45e4>
   21064:	mov	r1, #0
   21068:	ldr	r2, [r0]
   2106c:	ldr	r0, [r0, #4]
   21070:	ldr	r0, [r0, #4]
   21074:	add	r0, r1, r0
   21078:	add	r1, r0, #1
   2107c:	cmp	r2, #0
   21080:	mov	r0, r2
   21084:	bne	21068 <__flatcc_fb_gen_c_json_parser@@Base+0x45c0>
   21088:	add	r1, r1, #1
   2108c:	ldr	r0, [r5, #4]
   21090:	ldr	r0, [r0, #4]
   21094:	add	r0, r1, r0
   21098:	ldr	r1, [r4, #12]
   2109c:	add	r0, r0, r1
   210a0:	str	r0, [r4, #12]
   210a4:	ldrh	r0, [r5, #8]
   210a8:	sub	r1, r0, #3
   210ac:	cmp	r1, #2
   210b0:	bcc	210cc <__flatcc_fb_gen_c_json_parser@@Base+0x4624>
   210b4:	cmp	r0, #1
   210b8:	bhi	210d8 <__flatcc_fb_gen_c_json_parser@@Base+0x4630>
   210bc:	ldr	r0, [r4, #4]
   210c0:	add	r0, r0, #1
   210c4:	str	r0, [r4, #4]
   210c8:	pop	{r4, r5, fp, pc}
   210cc:	ldr	r0, [r4, #8]
   210d0:	add	r0, r0, #1
   210d4:	str	r0, [r4, #8]
   210d8:	pop	{r4, r5, fp, pc}
   210dc:	push	{r4, sl, fp, lr}
   210e0:	add	fp, sp, #8
   210e4:	mov	r4, r1
   210e8:	ldrh	r1, [r1, #8]
   210ec:	cmp	r1, #4
   210f0:	bhi	2110c <__flatcc_fb_gen_c_json_parser@@Base+0x4664>
   210f4:	ldr	r1, [r4, #16]
   210f8:	add	r0, r0, #172	; 0xac
   210fc:	bl	20d00 <__flatcc_fb_gen_c_json_parser@@Base+0x4258>
   21100:	cmp	r0, #0
   21104:	movne	r0, r4
   21108:	pop	{r4, sl, fp, pc}
   2110c:	mov	r0, #0
   21110:	pop	{r4, sl, fp, pc}
   21114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21118:	add	fp, sp, #28
   2111c:	sub	sp, sp, #4
   21120:	mov	r9, r1
   21124:	mov	sl, r0
   21128:	ldr	r0, [r0, #40]	; 0x28
   2112c:	bl	210dc <__flatcc_fb_gen_c_json_parser@@Base+0x4634>
   21130:	cmp	r0, #0
   21134:	beq	21204 <__flatcc_fb_gen_c_json_parser@@Base+0x475c>
   21138:	ldr	r1, [sl]
   2113c:	ldr	r8, [sl, #36]	; 0x24
   21140:	cmp	r1, #0
   21144:	mov	r6, r8
   21148:	beq	21190 <__flatcc_fb_gen_c_json_parser@@Base+0x46e8>
   2114c:	ldr	r0, [r0, #12]
   21150:	ldr	r5, [r0]
   21154:	cmp	r5, #0
   21158:	mov	r6, r8
   2115c:	beq	21190 <__flatcc_fb_gen_c_json_parser@@Base+0x46e8>
   21160:	mov	r4, #46	; 0x2e
   21164:	mov	r6, r8
   21168:	ldr	r0, [r5, #4]
   2116c:	ldm	r0, {r1, r7}
   21170:	mov	r0, r6
   21174:	mov	r2, r7
   21178:	bl	14810 <memcpy@plt>
   2117c:	strb	r4, [r6, r7]!
   21180:	add	r6, r6, #1
   21184:	ldr	r5, [r5]
   21188:	cmp	r5, #0
   2118c:	bne	21168 <__flatcc_fb_gen_c_json_parser@@Base+0x46c0>
   21190:	ldr	r0, [r9, #4]
   21194:	ldm	r0, {r1, r7}
   21198:	mov	r0, r6
   2119c:	mov	r2, r7
   211a0:	bl	14810 <memcpy@plt>
   211a4:	mov	r0, #0
   211a8:	strb	r0, [r6, r7]!
   211ac:	add	r0, r6, #1
   211b0:	str	r0, [sl, #36]	; 0x24
   211b4:	ldrh	r0, [r9, #8]
   211b8:	sub	r1, r0, #3
   211bc:	cmp	r1, #2
   211c0:	bcc	211ec <__flatcc_fb_gen_c_json_parser@@Base+0x4744>
   211c4:	cmp	r0, #1
   211c8:	bhi	21204 <__flatcc_fb_gen_c_json_parser@@Base+0x475c>
   211cc:	ldr	r0, [sl, #28]
   211d0:	str	r9, [r0]
   211d4:	ldr	r0, [sl, #28]
   211d8:	str	r8, [r0, #4]
   211dc:	add	r0, r0, #8
   211e0:	str	r0, [sl, #28]
   211e4:	sub	sp, fp, #28
   211e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211ec:	ldr	r0, [sl, #32]
   211f0:	str	r9, [r0]
   211f4:	ldr	r0, [sl, #32]
   211f8:	str	r8, [r0, #4]
   211fc:	add	r0, r0, #8
   21200:	str	r0, [sl, #32]
   21204:	sub	sp, fp, #28
   21208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2120c:	ldr	r1, [r1, #4]
   21210:	ldr	r0, [r0, #4]
   21214:	b	147ec <strcmp@plt>
   21218:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2121c:	add	fp, sp, #24
   21220:	sub	sp, sp, #224	; 0xe0
   21224:	mov	r5, r1
   21228:	mov	r4, r0
   2122c:	mov	r6, sp
   21230:	mov	r0, r6
   21234:	mov	r1, #0
   21238:	mov	r2, #220	; 0xdc
   2123c:	bl	148dc <memset@plt>
   21240:	mov	r0, r5
   21244:	mov	r1, r6
   21248:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   2124c:	ldr	r0, [r4, #208]	; 0xd0
   21250:	ldr	r2, [r0, #160]	; 0xa0
   21254:	movw	r1, #32207	; 0x7dcf
   21258:	movt	r1, #4
   2125c:	mov	r0, r4
   21260:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21264:	ldr	r0, [r4, #220]	; 0xdc
   21268:	add	r0, r0, #2
   2126c:	str	r0, [r4, #220]	; 0xdc
   21270:	movw	r1, #41168	; 0xa0d0
   21274:	movt	r1, #4
   21278:	mov	r0, r4
   2127c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21280:	ldr	r0, [r4, #220]	; 0xdc
   21284:	cmp	r0, #0
   21288:	beq	2141c <__flatcc_fb_gen_c_json_parser@@Base+0x4974>
   2128c:	subs	r1, r0, #1
   21290:	str	r1, [r4, #220]	; 0xdc
   21294:	beq	2141c <__flatcc_fb_gen_c_json_parser@@Base+0x4974>
   21298:	sub	r0, r0, #2
   2129c:	str	r0, [r4, #220]	; 0xdc
   212a0:	movw	r1, #45539	; 0xb1e3
   212a4:	movt	r1, #4
   212a8:	mov	r0, r4
   212ac:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212b0:	ldr	r0, [r4, #220]	; 0xdc
   212b4:	add	r0, r0, #1
   212b8:	str	r0, [r4, #220]	; 0xdc
   212bc:	movw	r1, #41274	; 0xa13a
   212c0:	movt	r1, #4
   212c4:	mov	r0, r4
   212c8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212cc:	movw	r1, #41303	; 0xa157
   212d0:	movt	r1, #4
   212d4:	mov	r0, r4
   212d8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212dc:	movw	r1, #21632	; 0x5480
   212e0:	movt	r1, #3
   212e4:	mov	r0, r4
   212e8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212ec:	movw	r1, #41330	; 0xa172
   212f0:	movt	r1, #4
   212f4:	mov	r0, r4
   212f8:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212fc:	movw	r1, #41357	; 0xa18d
   21300:	movt	r1, #4
   21304:	mov	r0, r4
   21308:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2130c:	ldr	r0, [r4, #208]	; 0xd0
   21310:	ldrh	r1, [r0, #16]
   21314:	cmp	r1, #2
   21318:	bne	2133c <__flatcc_fb_gen_c_json_parser@@Base+0x4894>
   2131c:	ldrd	r6, [r0, #8]
   21320:	movw	r1, #41416	; 0xa1c8
   21324:	movt	r1, #4
   21328:	mov	r0, r4
   2132c:	mov	r2, r7
   21330:	mov	r3, r6
   21334:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21338:	b	2134c <__flatcc_fb_gen_c_json_parser@@Base+0x48a4>
   2133c:	movw	r1, #41477	; 0xa205
   21340:	movt	r1, #4
   21344:	mov	r0, r4
   21348:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2134c:	movw	r1, #41533	; 0xa23d
   21350:	movt	r1, #4
   21354:	mov	r2, sp
   21358:	mov	r0, r4
   2135c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21360:	movw	r1, #41585	; 0xa271
   21364:	movt	r1, #4
   21368:	mov	r0, r4
   2136c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21370:	ldr	r0, [r4, #220]	; 0xdc
   21374:	add	r0, r0, #1
   21378:	str	r0, [r4, #220]	; 0xdc
   2137c:	movw	r1, #41603	; 0xa283
   21380:	movt	r1, #4
   21384:	mov	r0, r4
   21388:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2138c:	ldr	r0, [r4, #220]	; 0xdc
   21390:	cmp	r0, #0
   21394:	beq	2143c <__flatcc_fb_gen_c_json_parser@@Base+0x4994>
   21398:	sub	r0, r0, #1
   2139c:	str	r0, [r4, #220]	; 0xdc
   213a0:	movw	r1, #30713	; 0x77f9
   213a4:	movt	r1, #3
   213a8:	mov	r0, r4
   213ac:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   213b0:	movw	r1, #41622	; 0xa296
   213b4:	movt	r1, #4
   213b8:	mov	r0, r4
   213bc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   213c0:	movw	r1, #41674	; 0xa2ca
   213c4:	movt	r1, #4
   213c8:	mov	r0, r4
   213cc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   213d0:	movw	r1, #34477	; 0x86ad
   213d4:	movt	r1, #4
   213d8:	mov	r0, r4
   213dc:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   213e0:	ldr	r0, [r4, #220]	; 0xdc
   213e4:	cmp	r0, #0
   213e8:	beq	2145c <__flatcc_fb_gen_c_json_parser@@Base+0x49b4>
   213ec:	sub	r0, r0, #1
   213f0:	str	r0, [r4, #220]	; 0xdc
   213f4:	movw	r1, #30713	; 0x77f9
   213f8:	movt	r1, #3
   213fc:	mov	r0, r4
   21400:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21404:	movw	r1, #21632	; 0x5480
   21408:	movt	r1, #3
   2140c:	mov	r0, r4
   21410:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21414:	sub	sp, fp, #24
   21418:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2141c:	movw	r0, #32324	; 0x7e44
   21420:	movt	r0, #4
   21424:	movw	r1, #32336	; 0x7e50
   21428:	movt	r1, #4
   2142c:	movw	r3, #41211	; 0xa0fb
   21430:	movt	r3, #4
   21434:	movw	r2, #1610	; 0x64a
   21438:	bl	14984 <__assert_fail@plt>
   2143c:	movw	r0, #32324	; 0x7e44
   21440:	movt	r0, #4
   21444:	movw	r1, #32336	; 0x7e50
   21448:	movt	r1, #4
   2144c:	movw	r3, #41211	; 0xa0fb
   21450:	movt	r3, #4
   21454:	movw	r2, #1626	; 0x65a
   21458:	bl	14984 <__assert_fail@plt>
   2145c:	movw	r0, #32324	; 0x7e44
   21460:	movt	r0, #4
   21464:	movw	r1, #32336	; 0x7e50
   21468:	movt	r1, #4
   2146c:	movw	r3, #41211	; 0xa0fb
   21470:	movt	r3, #4
   21474:	movw	r2, #1630	; 0x65e
   21478:	bl	14984 <__assert_fail@plt>
   2147c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21480:	add	fp, sp, #24
   21484:	sub	sp, sp, #224	; 0xe0
   21488:	mov	r5, r1
   2148c:	mov	r4, r0
   21490:	mov	r6, sp
   21494:	mov	r0, r6
   21498:	mov	r1, #0
   2149c:	mov	r2, #220	; 0xdc
   214a0:	bl	148dc <memset@plt>
   214a4:	mov	r0, r5
   214a8:	mov	r1, r6
   214ac:	bl	1d174 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   214b0:	ldr	r0, [r4, #208]	; 0xd0
   214b4:	ldr	r2, [r0, #160]	; 0xa0
   214b8:	movw	r1, #32207	; 0x7dcf
   214bc:	movt	r1, #4
   214c0:	mov	r0, r4
   214c4:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   214c8:	ldr	r0, [r4, #220]	; 0xdc
   214cc:	add	r0, r0, #2
   214d0:	str	r0, [r4, #220]	; 0xdc
   214d4:	movw	r1, #41168	; 0xa0d0
   214d8:	movt	r1, #4
   214dc:	mov	r0, r4
   214e0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   214e4:	ldr	r0, [r4, #220]	; 0xdc
   214e8:	cmp	r0, #0
   214ec:	beq	21680 <__flatcc_fb_gen_c_json_parser@@Base+0x4bd8>
   214f0:	subs	r1, r0, #1
   214f4:	str	r1, [r4, #220]	; 0xdc
   214f8:	beq	21680 <__flatcc_fb_gen_c_json_parser@@Base+0x4bd8>
   214fc:	sub	r0, r0, #2
   21500:	str	r0, [r4, #220]	; 0xdc
   21504:	movw	r1, #45539	; 0xb1e3
   21508:	movt	r1, #4
   2150c:	mov	r0, r4
   21510:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21514:	ldr	r0, [r4, #220]	; 0xdc
   21518:	add	r0, r0, #1
   2151c:	str	r0, [r4, #220]	; 0xdc
   21520:	movw	r1, #41758	; 0xa31e
   21524:	movt	r1, #4
   21528:	mov	r0, r4
   2152c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21530:	movw	r1, #41303	; 0xa157
   21534:	movt	r1, #4
   21538:	mov	r0, r4
   2153c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21540:	movw	r1, #21632	; 0x5480
   21544:	movt	r1, #3
   21548:	mov	r0, r4
   2154c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21550:	movw	r1, #41785	; 0xa339
   21554:	movt	r1, #4
   21558:	mov	r0, r4
   2155c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21560:	movw	r1, #41357	; 0xa18d
   21564:	movt	r1, #4
   21568:	mov	r0, r4
   2156c:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21570:	ldr	r0, [r4, #208]	; 0xd0
   21574:	ldrh	r1, [r0, #16]
   21578:	cmp	r1, #2
   2157c:	bne	215a0 <__flatcc_fb_gen_c_json_parser@@Base+0x4af8>
   21580:	ldrd	r6, [r0, #8]
   21584:	movw	r1, #41416	; 0xa1c8
   21588:	movt	r1, #4
   2158c:	mov	r0, r4
   21590:	mov	r2, r7
   21594:	mov	r3, r6
   21598:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2159c:	b	215b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4b08>
   215a0:	movw	r1, #41477	; 0xa205
   215a4:	movt	r1, #4
   215a8:	mov	r0, r4
   215ac:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   215b0:	movw	r1, #41810	; 0xa352
   215b4:	movt	r1, #4
   215b8:	mov	r2, sp
   215bc:	mov	r0, r4
   215c0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   215c4:	movw	r1, #41585	; 0xa271
   215c8:	movt	r1, #4
   215cc:	mov	r0, r4
   215d0:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   215d4:	ldr	r0, [r4, #220]	; 0xdc
   215d8:	add	r0, r0, #1
   215dc:	str	r0, [r4, #220]	; 0xdc
   215e0:	movw	r1, #41603	; 0xa283
   215e4:	movt	r1, #4
   215e8:	mov	r0, r4
   215ec:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   215f0:	ldr	r0, [r4, #220]	; 0xdc
   215f4:	cmp	r0, #0
   215f8:	beq	216a0 <__flatcc_fb_gen_c_json_parser@@Base+0x4bf8>
   215fc:	sub	r0, r0, #1
   21600:	str	r0, [r4, #220]	; 0xdc
   21604:	movw	r1, #30713	; 0x77f9
   21608:	movt	r1, #3
   2160c:	mov	r0, r4
   21610:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21614:	movw	r1, #41622	; 0xa296
   21618:	movt	r1, #4
   2161c:	mov	r0, r4
   21620:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21624:	movw	r1, #41674	; 0xa2ca
   21628:	movt	r1, #4
   2162c:	mov	r0, r4
   21630:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21634:	movw	r1, #34477	; 0x86ad
   21638:	movt	r1, #4
   2163c:	mov	r0, r4
   21640:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21644:	ldr	r0, [r4, #220]	; 0xdc
   21648:	cmp	r0, #0
   2164c:	beq	216c0 <__flatcc_fb_gen_c_json_parser@@Base+0x4c18>
   21650:	sub	r0, r0, #1
   21654:	str	r0, [r4, #220]	; 0xdc
   21658:	movw	r1, #30713	; 0x77f9
   2165c:	movt	r1, #3
   21660:	mov	r0, r4
   21664:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21668:	movw	r1, #21632	; 0x5480
   2166c:	movt	r1, #3
   21670:	mov	r0, r4
   21674:	bl	1d050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21678:	sub	sp, fp, #24
   2167c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21680:	movw	r0, #32324	; 0x7e44
   21684:	movt	r0, #4
   21688:	movw	r1, #32336	; 0x7e50
   2168c:	movt	r1, #4
   21690:	movw	r3, #41694	; 0xa2de
   21694:	movt	r3, #4
   21698:	movw	r2, #1645	; 0x66d
   2169c:	bl	14984 <__assert_fail@plt>
   216a0:	movw	r0, #32324	; 0x7e44
   216a4:	movt	r0, #4
   216a8:	movw	r1, #32336	; 0x7e50
   216ac:	movt	r1, #4
   216b0:	movw	r3, #41694	; 0xa2de
   216b4:	movt	r3, #4
   216b8:	movw	r2, #1661	; 0x67d
   216bc:	bl	14984 <__assert_fail@plt>
   216c0:	movw	r0, #32324	; 0x7e44
   216c4:	movt	r0, #4
   216c8:	movw	r1, #32336	; 0x7e50
   216cc:	movt	r1, #4
   216d0:	movw	r3, #41694	; 0xa2de
   216d4:	movt	r3, #4
   216d8:	movw	r2, #1665	; 0x681
   216dc:	bl	14984 <__assert_fail@plt>
   216e0:	ldr	r1, [r0, #212]	; 0xd4
   216e4:	ldr	r1, [r1, #140]	; 0x8c
   216e8:	cmp	r1, #0
   216ec:	bxeq	lr
   216f0:	ldr	r3, [r0, #204]	; 0xcc
   216f4:	movw	r0, #45596	; 0xb21c
   216f8:	movt	r0, #3
   216fc:	mov	r1, #36	; 0x24
   21700:	mov	r2, #1
   21704:	b	14858 <fwrite@plt>

00021708 <__flatcc_fb_gen_c_json_printer@@Base>:
   21708:	push	{r4, sl, fp, lr}
   2170c:	add	fp, sp, #8
   21710:	mov	r4, r0
   21714:	bl	21758 <__flatcc_fb_gen_c_json_printer@@Base+0x50>
   21718:	mov	r0, r4
   2171c:	bl	217e0 <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   21720:	mov	r0, r4
   21724:	bl	21910 <__flatcc_fb_gen_c_json_printer@@Base+0x208>
   21728:	mov	r0, r4
   2172c:	bl	21950 <__flatcc_fb_gen_c_json_printer@@Base+0x248>
   21730:	mov	r0, r4
   21734:	bl	21990 <__flatcc_fb_gen_c_json_printer@@Base+0x288>
   21738:	mov	r0, r4
   2173c:	bl	219d0 <__flatcc_fb_gen_c_json_printer@@Base+0x2c8>
   21740:	mov	r0, r4
   21744:	bl	21a1c <__flatcc_fb_gen_c_json_printer@@Base+0x314>
   21748:	mov	r0, r4
   2174c:	bl	21a40 <__flatcc_fb_gen_c_json_printer@@Base+0x338>
   21750:	mov	r0, #0
   21754:	pop	{r4, sl, fp, pc}
   21758:	push	{r4, sl, fp, lr}
   2175c:	add	fp, sp, #8
   21760:	mov	r4, r0
   21764:	ldr	r0, [r0, #204]	; 0xcc
   21768:	ldr	r1, [r4, #208]	; 0xd0
   2176c:	ldr	r2, [r1, #164]	; 0xa4
   21770:	movw	r1, #41988	; 0xa404
   21774:	movt	r1, #4
   21778:	mov	r3, r2
   2177c:	bl	148c4 <fprintf@plt>
   21780:	ldr	r3, [r4, #204]	; 0xcc
   21784:	movw	r0, #21078	; 0x5256
   21788:	movt	r0, #3
   2178c:	mov	r1, #81	; 0x51
   21790:	mov	r2, #1
   21794:	bl	14858 <fwrite@plt>
   21798:	ldr	r3, [r4, #204]	; 0xcc
   2179c:	movw	r0, #42041	; 0xa439
   217a0:	movt	r0, #4
   217a4:	mov	r1, #40	; 0x28
   217a8:	mov	r2, #1
   217ac:	bl	14858 <fwrite@plt>
   217b0:	movw	r1, #21007	; 0x520f
   217b4:	movt	r1, #3
   217b8:	movw	r2, #42082	; 0xa462
   217bc:	movt	r2, #4
   217c0:	mov	r0, r4
   217c4:	bl	159b4 <__flatcc_fb_gen_c_includes@@Base>
   217c8:	mov	r0, r4
   217cc:	bl	21a6c <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   217d0:	ldr	r1, [r4, #204]	; 0xcc
   217d4:	mov	r0, #10
   217d8:	pop	{r4, sl, fp, lr}
   217dc:	b	14924 <fputc@plt>
   217e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   217e4:	add	fp, sp, #24
   217e8:	sub	sp, sp, #224	; 0xe0
   217ec:	mov	r4, r0
   217f0:	ldr	r0, [r0, #208]	; 0xd0
   217f4:	ldr	r5, [r0, #52]	; 0x34
   217f8:	mov	r0, sp
   217fc:	mov	r1, #0
   21800:	mov	r2, #220	; 0xdc
   21804:	bl	148dc <memset@plt>
   21808:	cmp	r5, #0
   2180c:	beq	2184c <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   21810:	ldrh	r0, [r5, #8]
   21814:	cmp	r0, #1
   21818:	bhi	2184c <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   2181c:	ldr	r3, [r4, #204]	; 0xcc
   21820:	movw	r0, #42098	; 0xa472
   21824:	movt	r0, #4
   21828:	movw	r1, #482	; 0x1e2
   2182c:	mov	r2, #1
   21830:	bl	14858 <fwrite@plt>
   21834:	ldr	r0, [r4, #204]	; 0xcc
   21838:	ldr	r1, [r4, #208]	; 0xd0
   2183c:	ldr	r2, [r1, #160]	; 0xa0
   21840:	movw	r1, #42581	; 0xa655
   21844:	movt	r1, #4
   21848:	bl	148c4 <fprintf@plt>
   2184c:	ldr	r0, [r4, #208]	; 0xd0
   21850:	ldr	r5, [r0, #40]	; 0x28
   21854:	cmp	r5, #0
   21858:	beq	218fc <__flatcc_fb_gen_c_json_printer@@Base+0x1f4>
   2185c:	mov	r6, sp
   21860:	movw	r8, #42867	; 0xa773
   21864:	movt	r8, #4
   21868:	movw	r9, #42973	; 0xa7dd
   2186c:	movt	r9, #4
   21870:	movw	r7, #42669	; 0xa6ad
   21874:	movt	r7, #4
   21878:	b	218a4 <__flatcc_fb_gen_c_json_printer@@Base+0x19c>
   2187c:	mov	r0, r5
   21880:	mov	r1, r6
   21884:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   21888:	ldr	r0, [r4, #204]	; 0xcc
   2188c:	mov	r1, r9
   21890:	mov	r2, r6
   21894:	bl	148c4 <fprintf@plt>
   21898:	ldr	r5, [r5]
   2189c:	cmp	r5, #0
   218a0:	beq	218fc <__flatcc_fb_gen_c_json_printer@@Base+0x1f4>
   218a4:	ldrh	r0, [r5, #8]
   218a8:	cmp	r0, #0
   218ac:	beq	218e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1dc>
   218b0:	cmp	r0, #1
   218b4:	beq	2187c <__flatcc_fb_gen_c_json_printer@@Base+0x174>
   218b8:	cmp	r0, #4
   218bc:	bne	21898 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   218c0:	mov	r0, r5
   218c4:	mov	r1, r6
   218c8:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   218cc:	ldr	r0, [r4, #204]	; 0xcc
   218d0:	mov	r1, r7
   218d4:	mov	r2, r6
   218d8:	mov	r3, r6
   218dc:	bl	148c4 <fprintf@plt>
   218e0:	b	21898 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   218e4:	mov	r0, r5
   218e8:	mov	r1, r6
   218ec:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   218f0:	ldr	r0, [r4, #204]	; 0xcc
   218f4:	mov	r1, r8
   218f8:	b	21890 <__flatcc_fb_gen_c_json_printer@@Base+0x188>
   218fc:	ldr	r1, [r4, #204]	; 0xcc
   21900:	mov	r0, #10
   21904:	bl	14924 <fputc@plt>
   21908:	sub	sp, fp, #24
   2190c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21910:	push	{r4, r5, fp, lr}
   21914:	add	fp, sp, #8
   21918:	mov	r4, r0
   2191c:	ldr	r0, [r0, #208]	; 0xd0
   21920:	ldr	r5, [r0, #40]	; 0x28
   21924:	cmp	r5, #0
   21928:	beq	2194c <__flatcc_fb_gen_c_json_printer@@Base+0x244>
   2192c:	ldrh	r0, [r5, #8]
   21930:	cmp	r0, #3
   21934:	moveq	r0, r4
   21938:	moveq	r1, r5
   2193c:	bleq	21aa4 <__flatcc_fb_gen_c_json_printer@@Base+0x39c>
   21940:	ldr	r5, [r5]
   21944:	cmp	r5, #0
   21948:	bne	2192c <__flatcc_fb_gen_c_json_printer@@Base+0x224>
   2194c:	pop	{r4, r5, fp, pc}
   21950:	push	{r4, r5, fp, lr}
   21954:	add	fp, sp, #8
   21958:	mov	r4, r0
   2195c:	ldr	r0, [r0, #208]	; 0xd0
   21960:	ldr	r5, [r0, #40]	; 0x28
   21964:	cmp	r5, #0
   21968:	beq	2198c <__flatcc_fb_gen_c_json_printer@@Base+0x284>
   2196c:	ldrh	r0, [r5, #8]
   21970:	cmp	r0, #4
   21974:	moveq	r0, r4
   21978:	moveq	r1, r5
   2197c:	bleq	22068 <__flatcc_fb_gen_c_json_printer@@Base+0x960>
   21980:	ldr	r5, [r5]
   21984:	cmp	r5, #0
   21988:	bne	2196c <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   2198c:	pop	{r4, r5, fp, pc}
   21990:	push	{r4, r5, fp, lr}
   21994:	add	fp, sp, #8
   21998:	mov	r4, r0
   2199c:	ldr	r0, [r0, #208]	; 0xd0
   219a0:	ldr	r5, [r0, #40]	; 0x28
   219a4:	cmp	r5, #0
   219a8:	beq	219cc <__flatcc_fb_gen_c_json_printer@@Base+0x2c4>
   219ac:	ldrh	r0, [r5, #8]
   219b0:	cmp	r0, #1
   219b4:	moveq	r0, r4
   219b8:	moveq	r1, r5
   219bc:	bleq	22344 <__flatcc_fb_gen_c_json_printer@@Base+0xc3c>
   219c0:	ldr	r5, [r5]
   219c4:	cmp	r5, #0
   219c8:	bne	219ac <__flatcc_fb_gen_c_json_printer@@Base+0x2a4>
   219cc:	pop	{r4, r5, fp, pc}
   219d0:	push	{r4, r5, fp, lr}
   219d4:	add	fp, sp, #8
   219d8:	mov	r4, r0
   219dc:	ldr	r0, [r0, #208]	; 0xd0
   219e0:	ldr	r5, [r0, #40]	; 0x28
   219e4:	cmp	r5, #0
   219e8:	bne	219fc <__flatcc_fb_gen_c_json_printer@@Base+0x2f4>
   219ec:	b	21a18 <__flatcc_fb_gen_c_json_printer@@Base+0x310>
   219f0:	ldr	r5, [r5]
   219f4:	cmp	r5, #0
   219f8:	beq	21a18 <__flatcc_fb_gen_c_json_printer@@Base+0x310>
   219fc:	ldrh	r0, [r5, #8]
   21a00:	cmp	r0, #0
   21a04:	bne	219f0 <__flatcc_fb_gen_c_json_printer@@Base+0x2e8>
   21a08:	mov	r0, r4
   21a0c:	mov	r1, r5
   21a10:	bl	2250c <__flatcc_fb_gen_c_json_printer@@Base+0xe04>
   21a14:	b	219f0 <__flatcc_fb_gen_c_json_printer@@Base+0x2e8>
   21a18:	pop	{r4, r5, fp, pc}
   21a1c:	ldr	r1, [r0, #208]	; 0xd0
   21a20:	ldr	r1, [r1, #52]	; 0x34
   21a24:	cmp	r1, #0
   21a28:	bxeq	lr
   21a2c:	ldrh	r2, [r1, #8]
   21a30:	cmp	r2, #1
   21a34:	bhi	21a3c <__flatcc_fb_gen_c_json_printer@@Base+0x334>
   21a38:	b	22d34 <__flatcc_fb_gen_c_json_printer@@Base+0x162c>
   21a3c:	bx	lr
   21a40:	push	{r4, sl, fp, lr}
   21a44:	add	fp, sp, #8
   21a48:	mov	r4, r0
   21a4c:	bl	22dfc <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   21a50:	ldr	r0, [r4, #204]	; 0xcc
   21a54:	ldr	r1, [r4, #208]	; 0xd0
   21a58:	ldr	r2, [r1, #164]	; 0xa4
   21a5c:	movw	r1, #47734	; 0xba76
   21a60:	movt	r1, #4
   21a64:	pop	{r4, sl, fp, lr}
   21a68:	b	148c4 <fprintf@plt>
   21a6c:	ldr	r1, [r0, #212]	; 0xd4
   21a70:	ldr	r1, [r1, #140]	; 0x8c
   21a74:	cmp	r1, #0
   21a78:	bxeq	lr
   21a7c:	ldr	r3, [r0, #204]	; 0xcc
   21a80:	movw	r0, #21554	; 0x5432
   21a84:	movt	r0, #3
   21a88:	mov	r1, #36	; 0x24
   21a8c:	mov	r2, #1
   21a90:	b	14858 <fwrite@plt>
   21a94:	mov	r2, r1
   21a98:	mov	r1, r0
   21a9c:	ldr	r0, [r0, #12]
   21aa0:	b	15b9c <__flatcc_fb_scoped_symbol_name@@Base>
   21aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21aa8:	add	fp, sp, #28
   21aac:	sub	sp, sp, #252	; 0xfc
   21ab0:	mov	sl, r1
   21ab4:	mov	r4, r0
   21ab8:	add	r5, sp, #24
   21abc:	mov	r7, #0
   21ac0:	mov	r0, r5
   21ac4:	mov	r1, #0
   21ac8:	mov	r2, #220	; 0xdc
   21acc:	bl	148dc <memset@plt>
   21ad0:	mov	r0, sl
   21ad4:	mov	r1, r5
   21ad8:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   21adc:	ldr	r0, [sl, #40]	; 0x28
   21ae0:	bl	21f60 <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   21ae4:	mov	r5, r0
   21ae8:	ldr	r0, [sl, #40]	; 0x28
   21aec:	bl	21fd8 <__flatcc_fb_gen_c_json_printer@@Base+0x8d0>
   21af0:	mov	r9, r0
   21af4:	ldr	r0, [sl, #40]	; 0x28
   21af8:	mov	r1, r4
   21afc:	bl	22050 <__flatcc_fb_gen_c_json_printer@@Base+0x948>
   21b00:	mov	r3, r0
   21b04:	ldrh	r0, [sl, #92]	; 0x5c
   21b08:	ands	r6, r0, #32
   21b0c:	str	r5, [sp, #20]
   21b10:	beq	21b58 <__flatcc_fb_gen_c_json_printer@@Base+0x450>
   21b14:	ldrd	r0, [sl, #112]	; 0x70
   21b18:	eor	r2, r0, #1
   21b1c:	orrs	r2, r2, r1
   21b20:	movw	r8, #43051	; 0xa82b
   21b24:	movt	r8, #4
   21b28:	beq	21b90 <__flatcc_fb_gen_c_json_printer@@Base+0x488>
   21b2c:	eor	r2, r0, #4
   21b30:	orrs	r2, r2, r1
   21b34:	beq	21b74 <__flatcc_fb_gen_c_json_printer@@Base+0x46c>
   21b38:	eor	r0, r0, #2
   21b3c:	orrs	r0, r0, r1
   21b40:	bne	21ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x49c>
   21b44:	movw	r5, #65535	; 0xffff
   21b48:	movw	r0, #47858	; 0xbaf2
   21b4c:	movt	r0, #3
   21b50:	str	r0, [sp, #16]
   21b54:	b	21bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   21b58:	ldr	r0, [r4, #204]!	; 0xcc
   21b5c:	str	r9, [sp]
   21b60:	movw	r1, #43060	; 0xa834
   21b64:	movt	r1, #4
   21b68:	add	r2, sp, #24
   21b6c:	bl	148c4 <fprintf@plt>
   21b70:	b	21c8c <__flatcc_fb_gen_c_json_printer@@Base+0x584>
   21b74:	mvn	r5, #0
   21b78:	movw	r0, #47849	; 0xbae9
   21b7c:	movt	r0, #3
   21b80:	str	r0, [sp, #16]
   21b84:	movw	r8, #43053	; 0xa82d
   21b88:	movt	r8, #4
   21b8c:	b	21bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   21b90:	mov	r5, #255	; 0xff
   21b94:	movw	r0, #47867	; 0xbafb
   21b98:	movt	r0, #3
   21b9c:	str	r0, [sp, #16]
   21ba0:	b	21bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   21ba4:	mvn	r5, #0
   21ba8:	movw	r0, #47840	; 0xbae0
   21bac:	movt	r0, #3
   21bb0:	str	r0, [sp, #16]
   21bb4:	movw	r8, #43056	; 0xa830
   21bb8:	movt	r8, #4
   21bbc:	mvn	r7, #0
   21bc0:	ldr	r0, [sl, #20]
   21bc4:	cmp	r0, #0
   21bc8:	bne	21c04 <__flatcc_fb_gen_c_json_printer@@Base+0x4fc>
   21bcc:	ldr	r0, [r4, #204]!	; 0xcc
   21bd0:	str	r9, [sp]
   21bd4:	movw	r1, #43060	; 0xa834
   21bd8:	movt	r1, #4
   21bdc:	add	r2, sp, #24
   21be0:	bl	148c4 <fprintf@plt>
   21be4:	b	21c54 <__flatcc_fb_gen_c_json_printer@@Base+0x54c>
   21be8:	ldr	r2, [r1]
   21bec:	ldr	r1, [r1, #4]
   21bf0:	bic	r7, r7, r1
   21bf4:	bic	r5, r5, r2
   21bf8:	ldr	r0, [r0]
   21bfc:	cmp	r0, #0
   21c00:	beq	21c34 <__flatcc_fb_gen_c_json_printer@@Base+0x52c>
   21c04:	add	r1, r0, #48	; 0x30
   21c08:	ldrh	r2, [r0, #56]	; 0x38
   21c0c:	cmp	r2, #4
   21c10:	beq	21be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4e0>
   21c14:	cmp	r2, #6
   21c18:	beq	21c28 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   21c1c:	cmp	r2, #5
   21c20:	beq	21be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4e0>
   21c24:	b	21bf8 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   21c28:	ldrb	r1, [r1]
   21c2c:	bic	r5, r5, r1
   21c30:	b	21bf8 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   21c34:	ldr	r0, [r4, #204]!	; 0xcc
   21c38:	str	r9, [sp]
   21c3c:	movw	r1, #43060	; 0xa834
   21c40:	movt	r1, #4
   21c44:	add	r2, sp, #24
   21c48:	bl	148c4 <fprintf@plt>
   21c4c:	cmp	r6, #0
   21c50:	beq	21c8c <__flatcc_fb_gen_c_json_printer@@Base+0x584>
   21c54:	ldr	r6, [sp, #16]
   21c58:	mov	r0, r6
   21c5c:	mov	r1, r9
   21c60:	bl	147ec <strcmp@plt>
   21c64:	mov	r1, r0
   21c68:	ldr	r0, [r4]
   21c6c:	cmp	r1, #0
   21c70:	beq	21d7c <__flatcc_fb_gen_c_json_printer@@Base+0x674>
   21c74:	movw	r1, #43130	; 0xa87a
   21c78:	movt	r1, #4
   21c7c:	mov	r2, r6
   21c80:	mov	r3, r6
   21c84:	bl	148c4 <fprintf@plt>
   21c88:	b	21d8c <__flatcc_fb_gen_c_json_printer@@Base+0x684>
   21c8c:	ldr	r3, [r4]
   21c90:	movw	r0, #43660	; 0xaa8c
   21c94:	movt	r0, #4
   21c98:	mov	r1, #18
   21c9c:	mov	r2, #1
   21ca0:	bl	14858 <fwrite@plt>
   21ca4:	ldr	r5, [sl, #20]
   21ca8:	cmp	r5, #0
   21cac:	beq	21d64 <__flatcc_fb_gen_c_json_printer@@Base+0x65c>
   21cb0:	movw	r8, #43746	; 0xaae2
   21cb4:	movt	r8, #4
   21cb8:	movw	r9, #43813	; 0xab25
   21cbc:	movt	r9, #4
   21cc0:	movw	r7, #43679	; 0xaa9f
   21cc4:	movt	r7, #4
   21cc8:	b	21cfc <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   21ccc:	ldrb	r2, [r5, #48]	; 0x30
   21cd0:	ldr	r0, [r4]
   21cd4:	ldr	r1, [r5, #4]
   21cd8:	ldr	r6, [r1]
   21cdc:	ldr	r3, [r1, #4]
   21ce0:	str	r6, [sp]
   21ce4:	str	r3, [sp, #4]
   21ce8:	mov	r1, r9
   21cec:	bl	148c4 <fprintf@plt>
   21cf0:	ldr	r5, [r5]
   21cf4:	cmp	r5, #0
   21cf8:	beq	21d64 <__flatcc_fb_gen_c_json_printer@@Base+0x65c>
   21cfc:	add	r0, r5, #48	; 0x30
   21d00:	ldrh	r1, [r5, #56]	; 0x38
   21d04:	cmp	r1, #4
   21d08:	beq	21d40 <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   21d0c:	cmp	r1, #6
   21d10:	beq	21ccc <__flatcc_fb_gen_c_json_printer@@Base+0x5c4>
   21d14:	cmp	r1, #5
   21d18:	bne	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x7b8>
   21d1c:	ldrd	r2, [r0]
   21d20:	ldr	r0, [r4]
   21d24:	ldr	r1, [r5, #4]
   21d28:	ldr	r6, [r1]
   21d2c:	ldr	r1, [r1, #4]
   21d30:	stm	sp, {r1, r6}
   21d34:	str	r1, [sp, #8]
   21d38:	mov	r1, r7
   21d3c:	b	21cec <__flatcc_fb_gen_c_json_printer@@Base+0x5e4>
   21d40:	ldrd	r2, [r0]
   21d44:	ldr	r0, [r4]
   21d48:	ldr	r1, [r5, #4]
   21d4c:	ldr	r6, [r1]
   21d50:	ldr	r1, [r1, #4]
   21d54:	stm	sp, {r1, r6}
   21d58:	str	r1, [sp, #8]
   21d5c:	mov	r1, r8
   21d60:	b	21cec <__flatcc_fb_gen_c_json_printer@@Base+0x5e4>
   21d64:	ldr	r0, [r4]
   21d68:	movw	r1, #43878	; 0xab66
   21d6c:	movt	r1, #4
   21d70:	ldr	r2, [sp, #20]
   21d74:	bl	148c4 <fprintf@plt>
   21d78:	b	21ea0 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   21d7c:	movw	r1, #43149	; 0xa88d
   21d80:	movt	r1, #4
   21d84:	mov	r2, r6
   21d88:	bl	148c4 <fprintf@plt>
   21d8c:	ldr	r3, [r4]
   21d90:	movw	r0, #43164	; 0xa89c
   21d94:	movt	r0, #4
   21d98:	mov	r1, #54	; 0x36
   21d9c:	mov	r2, #1
   21da0:	bl	14858 <fwrite@plt>
   21da4:	ldr	r1, [r4]
   21da8:	mov	r0, #10
   21dac:	bl	14924 <fputc@plt>
   21db0:	orrs	r0, r5, r7
   21db4:	beq	21dd8 <__flatcc_fb_gen_c_json_printer@@Base+0x6d0>
   21db8:	ldr	r0, [r4]
   21dbc:	ldr	r1, [sp, #20]
   21dc0:	str	r1, [sp]
   21dc4:	movw	r1, #43219	; 0xa8d3
   21dc8:	movt	r1, #4
   21dcc:	mov	r2, r5
   21dd0:	mov	r3, r7
   21dd4:	bl	148c4 <fprintf@plt>
   21dd8:	ldr	r3, [r4]
   21ddc:	movw	r0, #43316	; 0xa934
   21de0:	movt	r0, #4
   21de4:	mov	r1, #59	; 0x3b
   21de8:	mov	r2, #1
   21dec:	bl	14858 <fwrite@plt>
   21df0:	ldr	r6, [sl, #20]
   21df4:	cmp	r6, #0
   21df8:	beq	21e88 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
   21dfc:	movw	r5, #43376	; 0xa970
   21e00:	movt	r5, #4
   21e04:	b	21e40 <__flatcc_fb_gen_c_json_printer@@Base+0x738>
   21e08:	ldrb	r2, [r6, #48]	; 0x30
   21e0c:	ldr	r0, [r4]
   21e10:	ldr	r1, [r6, #4]
   21e14:	ldr	r3, [r1]
   21e18:	ldr	r1, [r1, #4]
   21e1c:	str	r8, [sp]
   21e20:	stmib	sp, {r1, r3}
   21e24:	str	r1, [sp, #12]
   21e28:	mov	r1, r5
   21e2c:	mov	r3, #0
   21e30:	bl	148c4 <fprintf@plt>
   21e34:	ldr	r6, [r6]
   21e38:	cmp	r6, #0
   21e3c:	beq	21e88 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
   21e40:	add	r0, r6, #48	; 0x30
   21e44:	ldrh	r1, [r6, #56]	; 0x38
   21e48:	cmp	r1, #4
   21e4c:	beq	21e60 <__flatcc_fb_gen_c_json_printer@@Base+0x758>
   21e50:	cmp	r1, #6
   21e54:	beq	21e08 <__flatcc_fb_gen_c_json_printer@@Base+0x700>
   21e58:	cmp	r1, #5
   21e5c:	bne	21f10 <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   21e60:	ldrd	r2, [r0]
   21e64:	ldr	r0, [r4]
   21e68:	ldr	r1, [r6, #4]
   21e6c:	ldr	r7, [r1]
   21e70:	ldr	r1, [r1, #4]
   21e74:	str	r8, [sp]
   21e78:	stmib	sp, {r1, r7}
   21e7c:	str	r1, [sp, #12]
   21e80:	mov	r1, r5
   21e84:	b	21e30 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   21e88:	ldr	r3, [r4]
   21e8c:	movw	r0, #43316	; 0xa934
   21e90:	movt	r0, #4
   21e94:	mov	r1, #59	; 0x3b
   21e98:	mov	r2, #1
   21e9c:	bl	14858 <fwrite@plt>
   21ea0:	ldr	r3, [r4]
   21ea4:	movw	r0, #47448	; 0xb958
   21ea8:	movt	r0, #4
   21eac:	mov	r1, #3
   21eb0:	mov	r2, #1
   21eb4:	bl	14858 <fwrite@plt>
   21eb8:	sub	sp, fp, #28
   21ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ec0:	movw	r0, #4272	; 0x10b0
   21ec4:	movt	r0, #6
   21ec8:	ldr	r0, [r0]
   21ecc:	movw	r1, #43539	; 0xaa13
   21ed0:	movt	r1, #4
   21ed4:	str	r1, [sp]
   21ed8:	movw	r1, #21375	; 0x537f
   21edc:	movt	r1, #3
   21ee0:	movw	r4, #43453	; 0xa9bd
   21ee4:	movt	r4, #4
   21ee8:	mov	r2, r4
   21eec:	mov	r3, #157	; 0x9d
   21ef0:	bl	148c4 <fprintf@plt>
   21ef4:	movw	r0, #25261	; 0x62ad
   21ef8:	movt	r0, #4
   21efc:	movw	r3, #43597	; 0xaa4d
   21f00:	movt	r3, #4
   21f04:	mov	r1, r4
   21f08:	mov	r2, #157	; 0x9d
   21f0c:	bl	14984 <__assert_fail@plt>
   21f10:	movw	r0, #4272	; 0x10b0
   21f14:	movt	r0, #6
   21f18:	ldr	r0, [r0]
   21f1c:	movw	r1, #43539	; 0xaa13
   21f20:	movt	r1, #4
   21f24:	str	r1, [sp]
   21f28:	movw	r1, #21375	; 0x537f
   21f2c:	movt	r1, #3
   21f30:	movw	r4, #43453	; 0xa9bd
   21f34:	movt	r4, #4
   21f38:	mov	r2, r4
   21f3c:	mov	r3, #134	; 0x86
   21f40:	bl	148c4 <fprintf@plt>
   21f44:	movw	r0, #25261	; 0x62ad
   21f48:	movt	r0, #4
   21f4c:	movw	r3, #43597	; 0xaa4d
   21f50:	movt	r3, #4
   21f54:	mov	r1, r4
   21f58:	mov	r2, #134	; 0x86
   21f5c:	bl	14984 <__assert_fail@plt>
   21f60:	push	{r4, sl, fp, lr}
   21f64:	add	fp, sp, #8
   21f68:	sub	sp, sp, #8
   21f6c:	sub	r0, r0, #1
   21f70:	cmp	r0, #11
   21f74:	movwcc	r1, #47768	; 0xba98
   21f78:	movtcc	r1, #4
   21f7c:	ldrcc	r0, [r1, r0, lsl #2]
   21f80:	subcc	sp, fp, #8
   21f84:	popcc	{r4, sl, fp, pc}
   21f88:	movw	r0, #4272	; 0x10b0
   21f8c:	movt	r0, #6
   21f90:	ldr	r0, [r0]
   21f94:	movw	r1, #47968	; 0xbb60
   21f98:	movt	r1, #3
   21f9c:	str	r1, [sp]
   21fa0:	movw	r1, #21375	; 0x537f
   21fa4:	movt	r1, #3
   21fa8:	movw	r4, #47895	; 0xbb17
   21fac:	movt	r4, #3
   21fb0:	mov	r2, r4
   21fb4:	mov	r3, #96	; 0x60
   21fb8:	bl	148c4 <fprintf@plt>
   21fbc:	movw	r0, #25261	; 0x62ad
   21fc0:	movt	r0, #4
   21fc4:	movw	r3, #50320	; 0xc490
   21fc8:	movt	r3, #3
   21fcc:	mov	r1, r4
   21fd0:	mov	r2, #96	; 0x60
   21fd4:	bl	14984 <__assert_fail@plt>
   21fd8:	push	{r4, sl, fp, lr}
   21fdc:	add	fp, sp, #8
   21fe0:	sub	sp, sp, #8
   21fe4:	sub	r0, r0, #1
   21fe8:	cmp	r0, #11
   21fec:	movwcc	r1, #47812	; 0xbac4
   21ff0:	movtcc	r1, #4
   21ff4:	ldrcc	r0, [r1, r0, lsl #2]
   21ff8:	subcc	sp, fp, #8
   21ffc:	popcc	{r4, sl, fp, pc}
   22000:	movw	r0, #4272	; 0x10b0
   22004:	movt	r0, #6
   22008:	ldr	r0, [r0]
   2200c:	movw	r1, #47968	; 0xbb60
   22010:	movt	r1, #3
   22014:	str	r1, [sp]
   22018:	movw	r1, #21375	; 0x537f
   2201c:	movt	r1, #3
   22020:	movw	r4, #47895	; 0xbb17
   22024:	movt	r4, #3
   22028:	mov	r2, r4
   2202c:	mov	r3, #141	; 0x8d
   22030:	bl	148c4 <fprintf@plt>
   22034:	movw	r0, #25261	; 0x62ad
   22038:	movt	r0, #4
   2203c:	movw	r3, #48023	; 0xbb97
   22040:	movt	r3, #3
   22044:	mov	r1, r4
   22048:	mov	r2, #141	; 0x8d
   2204c:	bl	14984 <__assert_fail@plt>
   22050:	movw	r2, #21632	; 0x5480
   22054:	movt	r2, #3
   22058:	cmp	r0, #5
   2205c:	moveq	r2, r1
   22060:	mov	r0, r2
   22064:	bx	lr
   22068:	push	{r4, r5, fp, lr}
   2206c:	add	fp, sp, #8
   22070:	mov	r4, r1
   22074:	mov	r5, r0
   22078:	bl	2208c <__flatcc_fb_gen_c_json_printer@@Base+0x984>
   2207c:	mov	r0, r5
   22080:	mov	r1, r4
   22084:	pop	{r4, r5, fp, lr}
   22088:	b	22164 <__flatcc_fb_gen_c_json_printer@@Base+0xa5c>
   2208c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22090:	add	fp, sp, #24
   22094:	sub	sp, sp, #232	; 0xe8
   22098:	mov	r5, r1
   2209c:	mov	r4, r0
   220a0:	add	r6, sp, #8
   220a4:	mov	r0, r6
   220a8:	mov	r1, #0
   220ac:	mov	r2, #220	; 0xdc
   220b0:	bl	148dc <memset@plt>
   220b4:	mov	r0, r5
   220b8:	mov	r1, r6
   220bc:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   220c0:	ldr	r0, [r4, #204]	; 0xcc
   220c4:	movw	r1, #43937	; 0xaba1
   220c8:	movt	r1, #4
   220cc:	mov	r2, r6
   220d0:	bl	148c4 <fprintf@plt>
   220d4:	ldr	r6, [r5, #20]
   220d8:	cmp	r6, #0
   220dc:	beq	2212c <__flatcc_fb_gen_c_json_printer@@Base+0xa24>
   220e0:	movw	r7, #44051	; 0xac13
   220e4:	movt	r7, #4
   220e8:	b	220f8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   220ec:	ldr	r6, [r6]
   220f0:	cmp	r6, #0
   220f4:	beq	2212c <__flatcc_fb_gen_c_json_printer@@Base+0xa24>
   220f8:	ldrh	r0, [r6, #24]
   220fc:	cmp	r0, #0
   22100:	beq	220ec <__flatcc_fb_gen_c_json_printer@@Base+0x9e4>
   22104:	ldr	r0, [r4, #204]	; 0xcc
   22108:	ldr	r1, [r6, #4]
   2210c:	ldr	r2, [r6, #48]	; 0x30
   22110:	ldr	r5, [r1]
   22114:	ldr	r3, [r1, #4]
   22118:	str	r5, [sp]
   2211c:	str	r3, [sp, #4]
   22120:	mov	r1, r7
   22124:	bl	148c4 <fprintf@plt>
   22128:	b	220ec <__flatcc_fb_gen_c_json_printer@@Base+0x9e4>
   2212c:	ldr	r3, [r4, #204]	; 0xcc
   22130:	movw	r0, #44132	; 0xac64
   22134:	movt	r0, #4
   22138:	mov	r1, #78	; 0x4e
   2213c:	mov	r2, #1
   22140:	bl	14858 <fwrite@plt>
   22144:	ldr	r3, [r4, #204]	; 0xcc
   22148:	movw	r0, #29288	; 0x7268
   2214c:	movt	r0, #4
   22150:	mov	r1, #9
   22154:	mov	r2, #1
   22158:	bl	14858 <fwrite@plt>
   2215c:	sub	sp, fp, #24
   22160:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22164:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22168:	add	fp, sp, #24
   2216c:	sub	sp, sp, #456	; 0x1c8
   22170:	mov	r5, r1
   22174:	mov	r4, r0
   22178:	add	r6, sp, #232	; 0xe8
   2217c:	mov	r0, r6
   22180:	mov	r1, #0
   22184:	mov	r2, #220	; 0xdc
   22188:	bl	148dc <memset@plt>
   2218c:	add	r0, sp, #8
   22190:	mov	r1, #0
   22194:	mov	r2, #220	; 0xdc
   22198:	bl	148dc <memset@plt>
   2219c:	mov	r0, r5
   221a0:	mov	r1, r6
   221a4:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   221a8:	ldr	r0, [r4, #204]	; 0xcc
   221ac:	movw	r1, #44211	; 0xacb3
   221b0:	movt	r1, #4
   221b4:	mov	r2, r6
   221b8:	bl	148c4 <fprintf@plt>
   221bc:	ldr	r7, [r5, #20]
   221c0:	cmp	r7, #0
   221c4:	beq	2226c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   221c8:	movw	r5, #44654	; 0xae6e
   221cc:	movt	r5, #4
   221d0:	add	r6, sp, #8
   221d4:	movw	r8, #44442	; 0xad9a
   221d8:	movt	r8, #4
   221dc:	movw	r9, #44342	; 0xad36
   221e0:	movt	r9, #4
   221e4:	b	22204 <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   221e8:	ldr	r2, [r7, #48]	; 0x30
   221ec:	ldr	r0, [r4, #204]	; 0xcc
   221f0:	mov	r1, r5
   221f4:	bl	148c4 <fprintf@plt>
   221f8:	ldr	r7, [r7]
   221fc:	cmp	r7, #0
   22200:	beq	2226c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   22204:	ldrh	r0, [r7, #24]
   22208:	cmp	r0, #0
   2220c:	beq	221f8 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   22210:	cmp	r0, #10
   22214:	beq	221e8 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
   22218:	cmp	r0, #14
   2221c:	bne	222a4 <__flatcc_fb_gen_c_json_printer@@Base+0xb9c>
   22220:	ldr	r0, [r7, #16]
   22224:	mov	r1, r6
   22228:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   2222c:	ldr	r0, [r7, #16]
   22230:	ldrh	r0, [r0, #8]
   22234:	cmp	r0, #1
   22238:	beq	22254 <__flatcc_fb_gen_c_json_printer@@Base+0xb4c>
   2223c:	cmp	r0, #0
   22240:	bne	222f4 <__flatcc_fb_gen_c_json_printer@@Base+0xbec>
   22244:	ldr	r2, [r7, #48]	; 0x30
   22248:	ldr	r0, [r4, #204]	; 0xcc
   2224c:	mov	r1, r9
   22250:	b	22260 <__flatcc_fb_gen_c_json_printer@@Base+0xb58>
   22254:	ldr	r2, [r7, #48]	; 0x30
   22258:	ldr	r0, [r4, #204]	; 0xcc
   2225c:	mov	r1, r8
   22260:	mov	r3, r6
   22264:	bl	148c4 <fprintf@plt>
   22268:	b	221f8 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   2226c:	ldr	r3, [r4, #204]	; 0xcc
   22270:	movw	r0, #44734	; 0xaebe
   22274:	movt	r0, #4
   22278:	mov	r1, #28
   2227c:	mov	r2, #1
   22280:	bl	14858 <fwrite@plt>
   22284:	ldr	r3, [r4, #204]	; 0xcc
   22288:	movw	r0, #29288	; 0x7268
   2228c:	movt	r0, #4
   22290:	mov	r1, #9
   22294:	mov	r2, #1
   22298:	bl	14858 <fwrite@plt>
   2229c:	sub	sp, fp, #24
   222a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   222a4:	movw	r0, #4272	; 0x10b0
   222a8:	movt	r0, #6
   222ac:	ldr	r0, [r0]
   222b0:	movw	r1, #44544	; 0xae00
   222b4:	movt	r1, #4
   222b8:	str	r1, [sp]
   222bc:	movw	r1, #21375	; 0x537f
   222c0:	movt	r1, #3
   222c4:	movw	r4, #43453	; 0xa9bd
   222c8:	movt	r4, #4
   222cc:	mov	r2, r4
   222d0:	mov	r3, #251	; 0xfb
   222d4:	bl	148c4 <fprintf@plt>
   222d8:	movw	r0, #25261	; 0x62ad
   222dc:	movt	r0, #4
   222e0:	movw	r3, #44583	; 0xae27
   222e4:	movt	r3, #4
   222e8:	mov	r1, r4
   222ec:	mov	r2, #251	; 0xfb
   222f0:	bl	14984 <__assert_fail@plt>
   222f4:	movw	r0, #4272	; 0x10b0
   222f8:	movt	r0, #6
   222fc:	ldr	r0, [r0]
   22300:	movw	r1, #44544	; 0xae00
   22304:	movt	r1, #4
   22308:	str	r1, [sp]
   2230c:	movw	r1, #21375	; 0x537f
   22310:	movt	r1, #3
   22314:	movw	r4, #43453	; 0xa9bd
   22318:	movt	r4, #4
   2231c:	mov	r2, r4
   22320:	mov	r3, #240	; 0xf0
   22324:	bl	148c4 <fprintf@plt>
   22328:	movw	r0, #25261	; 0x62ad
   2232c:	movt	r0, #4
   22330:	movw	r3, #44583	; 0xae27
   22334:	movt	r3, #4
   22338:	mov	r1, r4
   2233c:	mov	r2, #240	; 0xf0
   22340:	bl	14984 <__assert_fail@plt>
   22344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22348:	add	fp, sp, #28
   2234c:	sub	sp, sp, #476	; 0x1dc
   22350:	mov	r7, r1
   22354:	mov	r9, r0
   22358:	add	r6, sp, #248	; 0xf8
   2235c:	mov	r5, #0
   22360:	mov	r0, r6
   22364:	mov	r1, #0
   22368:	mov	r2, #220	; 0xdc
   2236c:	bl	148dc <memset@plt>
   22370:	add	sl, sp, #24
   22374:	mov	r0, sl
   22378:	mov	r1, #0
   2237c:	mov	r2, #220	; 0xdc
   22380:	bl	148dc <memset@plt>
   22384:	mov	r0, r7
   22388:	mov	r1, r6
   2238c:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22390:	ldr	r0, [r9, #204]	; 0xcc
   22394:	movw	r1, #44763	; 0xaedb
   22398:	movt	r1, #4
   2239c:	mov	r2, r6
   223a0:	bl	148c4 <fprintf@plt>
   223a4:	ldr	r6, [r7, #20]
   223a8:	cmp	r6, #0
   223ac:	beq	224d4 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   223b0:	movw	r8, #44842	; 0xaf2a
   223b4:	movt	r8, #4
   223b8:	b	22404 <__flatcc_fb_gen_c_json_printer@@Base+0xcfc>
   223bc:	ldr	r0, [r9, #204]	; 0xcc
   223c0:	ldr	r1, [r6, #4]
   223c4:	ldrd	r2, [r6, #80]	; 0x50
   223c8:	ldr	r7, [r1]
   223cc:	ldr	r1, [r1, #4]
   223d0:	stm	sp, {r2, r3}
   223d4:	str	r1, [sp, #8]
   223d8:	str	r7, [sp, #12]
   223dc:	str	r1, [sp, #16]
   223e0:	str	sl, [sp, #20]
   223e4:	movw	r1, #45013	; 0xafd5
   223e8:	movt	r1, #4
   223ec:	mov	r2, r5
   223f0:	bl	148c4 <fprintf@plt>
   223f4:	add	r5, r5, #1
   223f8:	ldr	r6, [r6]
   223fc:	cmp	r6, #0
   22400:	beq	224d4 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   22404:	ldrb	r0, [r6, #72]	; 0x48
   22408:	tst	r0, #4
   2240c:	bne	223f4 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   22410:	ldrh	r0, [r6, #24]
   22414:	cmp	r0, #14
   22418:	beq	22460 <__flatcc_fb_gen_c_json_printer@@Base+0xd58>
   2241c:	cmp	r0, #8
   22420:	bne	223f4 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   22424:	ldr	r0, [r6, #16]
   22428:	bl	21f60 <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   2242c:	mov	r2, r0
   22430:	ldr	r0, [r9, #204]	; 0xcc
   22434:	ldr	r1, [r6, #4]
   22438:	ldr	r3, [r6, #80]	; 0x50
   2243c:	ldr	r7, [r6, #84]	; 0x54
   22440:	ldr	r4, [r1]
   22444:	ldr	r1, [r1, #4]
   22448:	stm	sp, {r3, r7}
   2244c:	str	r1, [sp, #8]
   22450:	str	r4, [sp, #12]
   22454:	str	r1, [sp, #16]
   22458:	mov	r1, r8
   2245c:	b	224c8 <__flatcc_fb_gen_c_json_printer@@Base+0xdc0>
   22460:	ldr	r0, [r6, #16]
   22464:	mov	r1, sl
   22468:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   2246c:	ldr	r0, [r6, #16]
   22470:	ldrh	r1, [r0, #8]
   22474:	cmp	r1, #1
   22478:	beq	223bc <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   2247c:	cmp	r1, #3
   22480:	bne	223f4 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   22484:	ldr	r0, [r0, #40]	; 0x28
   22488:	bl	21f60 <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   2248c:	mov	r2, r0
   22490:	ldr	r0, [r9, #204]	; 0xcc
   22494:	ldr	r1, [r6, #4]
   22498:	ldr	r4, [r6, #80]	; 0x50
   2249c:	ldr	r3, [r6, #84]	; 0x54
   224a0:	ldr	r7, [r1]
   224a4:	ldr	r1, [r1, #4]
   224a8:	str	r4, [sp]
   224ac:	str	r3, [sp, #4]
   224b0:	str	r1, [sp, #8]
   224b4:	str	r7, [sp, #12]
   224b8:	str	r1, [sp, #16]
   224bc:	str	sl, [sp, #20]
   224c0:	movw	r1, #44915	; 0xaf73
   224c4:	movt	r1, #4
   224c8:	mov	r3, r5
   224cc:	bl	148c4 <fprintf@plt>
   224d0:	b	223f4 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   224d4:	ldr	r3, [r9, #204]	; 0xcc
   224d8:	movw	r0, #47448	; 0xb958
   224dc:	movt	r0, #4
   224e0:	mov	r1, #3
   224e4:	mov	r2, #1
   224e8:	bl	14858 <fwrite@plt>
   224ec:	ldr	r0, [r9, #204]	; 0xcc
   224f0:	movw	r1, #45114	; 0xb03a
   224f4:	movt	r1, #4
   224f8:	add	r2, sp, #248	; 0xf8
   224fc:	mov	r3, r2
   22500:	bl	148c4 <fprintf@plt>
   22504:	sub	sp, fp, #28
   22508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2250c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22510:	add	fp, sp, #28
   22514:	sub	sp, sp, #500	; 0x1f4
   22518:	mov	r7, r1
   2251c:	str	r0, [sp, #44]	; 0x2c
   22520:	sub	r5, fp, #256	; 0x100
   22524:	mov	r0, r5
   22528:	mov	r1, #0
   2252c:	mov	r2, #220	; 0xdc
   22530:	bl	148dc <memset@plt>
   22534:	add	r0, sp, #48	; 0x30
   22538:	mov	r1, #0
   2253c:	mov	r2, #220	; 0xdc
   22540:	bl	148dc <memset@plt>
   22544:	mov	r0, r7
   22548:	mov	r1, r5
   2254c:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22550:	mov	sl, r7
   22554:	ldr	r6, [sl, #96]!	; 0x60
   22558:	ldr	r4, [sl, #4]
   2255c:	mov	r0, r6
   22560:	mov	r1, #4
   22564:	bl	147d4 <calloc@plt>
   22568:	mov	r5, r0
   2256c:	orrs	r0, r6, r4
   22570:	beq	2257c <__flatcc_fb_gen_c_json_printer@@Base+0xe74>
   22574:	cmp	r5, #0
   22578:	beq	22ce4 <__flatcc_fb_gen_c_json_printer@@Base+0x15dc>
   2257c:	ldr	r0, [r7, #20]
   22580:	cmp	r0, #0
   22584:	beq	2259c <__flatcc_fb_gen_c_json_printer@@Base+0xe94>
   22588:	ldr	r1, [r0, #96]	; 0x60
   2258c:	str	r0, [r5, r1, lsl #2]
   22590:	ldr	r0, [r0]
   22594:	cmp	r0, #0
   22598:	bne	22588 <__flatcc_fb_gen_c_json_printer@@Base+0xe80>
   2259c:	ldr	r1, [sp, #44]	; 0x2c
   225a0:	ldr	r0, [r1, #204]!	; 0xcc
   225a4:	str	r1, [sp, #44]	; 0x2c
   225a8:	movw	r1, #45435	; 0xb17b
   225ac:	movt	r1, #4
   225b0:	sub	r2, fp, #256	; 0x100
   225b4:	bl	148c4 <fprintf@plt>
   225b8:	ldrd	r0, [sl]
   225bc:	orrs	r0, r0, r1
   225c0:	beq	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x1450>
   225c4:	add	r0, sl, #16
   225c8:	str	r0, [sp, #40]	; 0x28
   225cc:	mov	r8, #0
   225d0:	mov	r6, #0
   225d4:	b	2261c <__flatcc_fb_gen_c_json_printer@@Base+0xf14>
   225d8:	ldrd	r2, [r7]
   225dc:	ldr	r0, [sp, #44]	; 0x2c
   225e0:	ldr	r0, [r0]
   225e4:	ldr	r1, [r9, #4]
   225e8:	ldr	r7, [r1]
   225ec:	ldr	r1, [r1, #4]
   225f0:	stm	sp, {r1, r7}
   225f4:	str	r1, [sp, #8]
   225f8:	movw	r1, #46134	; 0xb436
   225fc:	movt	r1, #4
   22600:	bl	148c4 <fprintf@plt>
   22604:	adds	r8, r8, #1
   22608:	adc	r6, r6, #0
   2260c:	ldrd	r0, [sl]
   22610:	subs	r0, r8, r0
   22614:	sbcs	r0, r6, r1
   22618:	bcs	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x1450>
   2261c:	ldr	r9, [r5, r8, lsl #2]
   22620:	cmp	r9, #0
   22624:	beq	22604 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   22628:	ldrb	r0, [r9, #72]	; 0x48
   2262c:	tst	r0, #4
   22630:	bne	22604 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   22634:	ldr	r0, [sp, #44]	; 0x2c
   22638:	ldr	r3, [r0]
   2263c:	movw	r0, #45541	; 0xb1e5
   22640:	movt	r0, #4
   22644:	mov	r1, #5
   22648:	mov	r2, #1
   2264c:	bl	14858 <fwrite@plt>
   22650:	ldrh	r0, [r9, #24]
   22654:	sub	r0, r0, #7
   22658:	cmp	r0, #8
   2265c:	bhi	22604 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   22660:	add	r4, r9, #48	; 0x30
   22664:	add	r7, r9, #96	; 0x60
   22668:	add	r1, pc, #0
   2266c:	ldr	pc, [r1, r0, lsl #2]
   22670:	muleq	r2, r4, r6
   22674:	andeq	r2, r2, r0, asr #14
   22678:	ldrdeq	r2, [r2], -r8
   2267c:	andeq	r2, r2, ip, lsr #15
   22680:	andeq	r2, r2, r4, lsl #12
   22684:	andeq	r2, r2, r4, lsl #12
   22688:	andeq	r2, r2, r4, lsl #12
   2268c:	ldrdeq	r2, [r2], -r8
   22690:	ldrdeq	r2, [r2], -r4
   22694:	ldrh	r0, [r9, #72]	; 0x48
   22698:	tst	r0, #3072	; 0xc00
   2269c:	beq	2287c <__flatcc_fb_gen_c_json_printer@@Base+0x1174>
   226a0:	mov	r1, #1
   226a4:	bic	r1, r1, r0, lsr #10
   226a8:	ldrd	r2, [r7]
   226ac:	ldr	r0, [sp, #44]	; 0x2c
   226b0:	ldr	r0, [r0]
   226b4:	ldr	r7, [r9, #4]
   226b8:	ldm	r7, {r4, r7}
   226bc:	str	r7, [sp]
   226c0:	stmib	sp, {r4, r7}
   226c4:	str	r1, [sp, #12]
   226c8:	movw	r1, #45738	; 0xb2aa
   226cc:	movt	r1, #4
   226d0:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   226d4:	ldr	r0, [r9, #16]
   226d8:	add	r4, sp, #48	; 0x30
   226dc:	mov	r1, r4
   226e0:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   226e4:	ldr	r0, [r9, #16]
   226e8:	ldrh	r0, [r0, #8]
   226ec:	cmp	r0, #4
   226f0:	bhi	22ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x149c>
   226f4:	add	r1, pc, #0
   226f8:	ldr	pc, [r1, r0, lsl #2]
   226fc:	andeq	r2, r2, r0, lsl r7
   22700:	andeq	r2, r2, r8, lsl #18
   22704:	andeq	r2, r2, r4, lsr #23
   22708:	andeq	r2, r2, r0, lsl #19
   2270c:	ldrdeq	r2, [r2], -r4
   22710:	ldrd	r2, [r7]
   22714:	ldr	r0, [sp, #44]	; 0x2c
   22718:	ldr	r0, [r0]
   2271c:	ldr	r1, [r9, #4]
   22720:	ldr	r7, [r1]
   22724:	ldr	r1, [r1, #4]
   22728:	stm	sp, {r1, r7}
   2272c:	str	r1, [sp, #8]
   22730:	str	r4, [sp, #12]
   22734:	movw	r1, #46773	; 0xb6b5
   22738:	movt	r1, #4
   2273c:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   22740:	ldr	r0, [r9, #16]
   22744:	bl	21f60 <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   22748:	mov	ip, r0
   2274c:	ldrh	r0, [r9, #56]	; 0x38
   22750:	sub	r1, r0, #5
   22754:	cmp	r1, #2
   22758:	bcc	22844 <__flatcc_fb_gen_c_json_printer@@Base+0x113c>
   2275c:	cmp	r0, #3
   22760:	beq	22944 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   22764:	cmp	r0, #4
   22768:	bne	22bf4 <__flatcc_fb_gen_c_json_printer@@Base+0x14ec>
   2276c:	ldr	r0, [sp, #44]	; 0x2c
   22770:	ldr	r0, [r0]
   22774:	ldrd	r2, [r7]
   22778:	ldr	r1, [r9, #4]
   2277c:	ldr	r7, [r1]
   22780:	ldr	r1, [r1, #4]
   22784:	ldm	r4, {r4, r9}
   22788:	str	r4, [sp, #24]
   2278c:	str	r9, [sp, #28]
   22790:	stm	sp, {r2, r3}
   22794:	str	r1, [sp, #8]
   22798:	str	r7, [sp, #12]
   2279c:	str	r1, [sp, #16]
   227a0:	movw	r1, #45611	; 0xb22b
   227a4:	movt	r1, #4
   227a8:	b	22b4c <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   227ac:	ldrd	r2, [r7]
   227b0:	ldr	r0, [sp, #44]	; 0x2c
   227b4:	ldr	r0, [r0]
   227b8:	ldr	r1, [r9, #4]
   227bc:	ldr	r7, [r1]
   227c0:	ldr	r1, [r1, #4]
   227c4:	stm	sp, {r1, r7}
   227c8:	str	r1, [sp, #8]
   227cc:	movw	r1, #46072	; 0xb3f8
   227d0:	movt	r1, #4
   227d4:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   227d8:	ldr	r0, [r9, #16]
   227dc:	add	r1, sp, #48	; 0x30
   227e0:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   227e4:	ldr	r0, [r9, #16]
   227e8:	ldrh	r1, [r0, #8]
   227ec:	cmp	r1, #4
   227f0:	bhi	22c44 <__flatcc_fb_gen_c_json_printer@@Base+0x153c>
   227f4:	add	r2, pc, #0
   227f8:	ldr	pc, [r2, r1, lsl #2]
   227fc:	andeq	r2, r2, r0, lsl r8
   22800:	andeq	r2, r2, r0, lsl sl
   22804:	andeq	r2, r2, r4, asr #24
   22808:	andeq	r2, r2, r4, asr #20
   2280c:	ldrdeq	r2, [r2], -r8
   22810:	ldrd	r2, [r7]
   22814:	ldr	r0, [sp, #44]	; 0x2c
   22818:	ldr	r0, [r0]
   2281c:	ldr	r1, [r9, #4]
   22820:	ldr	r7, [r1]
   22824:	ldr	r1, [r1, #4]
   22828:	stm	sp, {r1, r7}
   2282c:	str	r1, [sp, #8]
   22830:	add	r1, sp, #48	; 0x30
   22834:	str	r1, [sp, #12]
   22838:	movw	r1, #46521	; 0xb5b9
   2283c:	movt	r1, #4
   22840:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   22844:	ldr	r0, [sp, #44]	; 0x2c
   22848:	ldr	r0, [r0]
   2284c:	ldm	r7, {r1, r3}
   22850:	ldr	r7, [r9, #4]
   22854:	ldm	r7, {r2, r7}
   22858:	ldm	r4, {r4, r9}
   2285c:	str	r4, [sp, #24]
   22860:	str	r9, [sp, #28]
   22864:	stm	sp, {r1, r3, r7}
   22868:	str	r2, [sp, #12]
   2286c:	str	r7, [sp, #16]
   22870:	movw	r1, #45547	; 0xb1eb
   22874:	movt	r1, #4
   22878:	b	22b4c <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   2287c:	ldr	r0, [r9, #104]	; 0x68
   22880:	cmp	r0, #0
   22884:	beq	22aa0 <__flatcc_fb_gen_c_json_printer@@Base+0x1398>
   22888:	add	r1, sp, #48	; 0x30
   2288c:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22890:	ldrd	r2, [r7]
   22894:	ldr	r0, [sp, #44]	; 0x2c
   22898:	ldr	r0, [r0]
   2289c:	ldr	r1, [r9, #4]
   228a0:	ldr	r4, [r9, #104]	; 0x68
   228a4:	ldr	r7, [r1]
   228a8:	ldr	r1, [r1, #4]
   228ac:	ldrh	r4, [r4, #8]
   228b0:	cmp	r4, #0
   228b4:	beq	22ae4 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   228b8:	stm	sp, {r1, r7}
   228bc:	str	r1, [sp, #8]
   228c0:	add	r1, sp, #48	; 0x30
   228c4:	str	r1, [sp, #12]
   228c8:	movw	r1, #45911	; 0xb357
   228cc:	movt	r1, #4
   228d0:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   228d4:	ldrd	r2, [r7]
   228d8:	ldr	r0, [sp, #44]	; 0x2c
   228dc:	ldr	r0, [r0]
   228e0:	ldr	r1, [r9, #4]
   228e4:	ldr	r7, [r1]
   228e8:	ldr	r1, [r1, #4]
   228ec:	stm	sp, {r1, r7}
   228f0:	str	r1, [sp, #8]
   228f4:	str	r4, [sp, #12]
   228f8:	str	r4, [sp, #16]
   228fc:	movw	r1, #47055	; 0xb7cf
   22900:	movt	r1, #4
   22904:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   22908:	add	r1, r9, #88	; 0x58
   2290c:	ldrd	r2, [r7]
   22910:	ldr	r0, [sp, #44]	; 0x2c
   22914:	ldr	r0, [r0]
   22918:	ldr	r7, [r9, #4]
   2291c:	mov	ip, r4
   22920:	ldm	r7, {r4, r7}
   22924:	ldm	r1, {r1, r9}
   22928:	add	lr, sp, #16
   2292c:	stm	lr, {r1, r9, ip}
   22930:	str	r7, [sp]
   22934:	stmib	sp, {r4, r7}
   22938:	movw	r1, #46958	; 0xb76e
   2293c:	movt	r1, #4
   22940:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   22944:	ldr	r0, [sp, #44]	; 0x2c
   22948:	ldr	r0, [r0]
   2294c:	ldrd	r2, [r7]
   22950:	ldr	r1, [r9, #4]
   22954:	vldr	d16, [r9, #48]	; 0x30
   22958:	ldr	r7, [r1]
   2295c:	ldr	r1, [r1, #4]
   22960:	vstr	d16, [sp, #24]
   22964:	stm	sp, {r2, r3}
   22968:	str	r1, [sp, #8]
   2296c:	str	r7, [sp, #12]
   22970:	str	r1, [sp, #16]
   22974:	movw	r1, #45675	; 0xb26b
   22978:	movt	r1, #4
   2297c:	b	22b4c <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   22980:	ldr	r0, [r9, #16]
   22984:	bl	21f60 <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   22988:	mov	ip, r0
   2298c:	ldr	r0, [sp, #44]	; 0x2c
   22990:	ldr	r0, [r0]
   22994:	mov	lr, r4
   22998:	ldr	r4, [r7]
   2299c:	ldr	r1, [r7, #4]
   229a0:	ldr	r3, [r9, #4]
   229a4:	ldr	r7, [r3]
   229a8:	ldr	r3, [r3, #4]
   229ac:	ldr	r2, [sp, #40]	; 0x28
   229b0:	ldm	r2, {r2, r9}
   229b4:	str	r2, [sp, #24]
   229b8:	str	r9, [sp, #28]
   229bc:	str	lr, [sp, #32]
   229c0:	str	r4, [sp]
   229c4:	stmib	sp, {r1, r3, r7}
   229c8:	str	r3, [sp, #16]
   229cc:	movw	r1, #46862	; 0xb70e
   229d0:	movt	r1, #4
   229d4:	b	22b4c <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   229d8:	ldrd	r2, [r7]
   229dc:	ldr	r0, [sp, #44]	; 0x2c
   229e0:	ldr	r0, [r0]
   229e4:	ldr	r1, [r9, #4]
   229e8:	ldr	r7, [r1]
   229ec:	ldr	r1, [r1, #4]
   229f0:	stm	sp, {r1, r7}
   229f4:	str	r1, [sp, #8]
   229f8:	add	r1, sp, #48	; 0x30
   229fc:	str	r1, [sp, #12]
   22a00:	str	r1, [sp, #16]
   22a04:	movw	r1, #46603	; 0xb60b
   22a08:	movt	r1, #4
   22a0c:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   22a10:	ldrd	r2, [r7]
   22a14:	ldr	r0, [sp, #44]	; 0x2c
   22a18:	ldr	r0, [r0]
   22a1c:	ldr	r1, [r9, #4]
   22a20:	ldr	r7, [r1]
   22a24:	ldr	r1, [r1, #4]
   22a28:	stm	sp, {r1, r7}
   22a2c:	str	r1, [sp, #8]
   22a30:	add	r1, sp, #48	; 0x30
   22a34:	str	r1, [sp, #12]
   22a38:	movw	r1, #46437	; 0xb565
   22a3c:	movt	r1, #4
   22a40:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   22a44:	ldr	r0, [r0, #40]	; 0x28
   22a48:	bl	21f60 <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   22a4c:	mov	ip, r0
   22a50:	ldrh	r0, [r9, #56]	; 0x38
   22a54:	sub	r1, r0, #5
   22a58:	cmp	r1, #2
   22a5c:	bcs	22b00 <__flatcc_fb_gen_c_json_printer@@Base+0x13f8>
   22a60:	ldr	r0, [sp, #44]	; 0x2c
   22a64:	ldr	r0, [r0]
   22a68:	ldm	r7, {r1, r3}
   22a6c:	ldr	r7, [r9, #4]
   22a70:	ldm	r7, {r2, r7}
   22a74:	ldm	r4, {r4, r9}
   22a78:	str	r4, [sp, #24]
   22a7c:	str	r9, [sp, #28]
   22a80:	add	r4, sp, #48	; 0x30
   22a84:	str	r4, [sp, #32]
   22a88:	stm	sp, {r1, r3, r7}
   22a8c:	str	r2, [sp, #12]
   22a90:	str	r7, [sp, #16]
   22a94:	movw	r1, #46203	; 0xb47b
   22a98:	movt	r1, #4
   22a9c:	b	22b4c <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   22aa0:	ldr	r0, [r9, #16]
   22aa4:	bl	21f60 <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   22aa8:	mov	r2, r0
   22aac:	ldr	r0, [sp, #44]	; 0x2c
   22ab0:	ldr	r0, [r0]
   22ab4:	ldr	r4, [r7]
   22ab8:	ldr	r1, [r7, #4]
   22abc:	ldr	r3, [r9, #4]
   22ac0:	ldr	r7, [r3]
   22ac4:	ldr	r3, [r3, #4]
   22ac8:	str	r4, [sp]
   22acc:	stmib	sp, {r1, r3, r7}
   22ad0:	str	r3, [sp, #16]
   22ad4:	movw	r1, #46007	; 0xb3b7
   22ad8:	movt	r1, #4
   22adc:	bl	148c4 <fprintf@plt>
   22ae0:	b	22604 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   22ae4:	stm	sp, {r1, r7}
   22ae8:	str	r1, [sp, #8]
   22aec:	add	r1, sp, #48	; 0x30
   22af0:	str	r1, [sp, #12]
   22af4:	movw	r1, #45817	; 0xb2f9
   22af8:	movt	r1, #4
   22afc:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   22b00:	cmp	r0, #4
   22b04:	bne	22c94 <__flatcc_fb_gen_c_json_printer@@Base+0x158c>
   22b08:	ldr	r0, [sp, #44]	; 0x2c
   22b0c:	ldr	r0, [r0]
   22b10:	ldrd	r2, [r7]
   22b14:	ldr	r1, [r9, #4]
   22b18:	ldr	r7, [r1]
   22b1c:	ldr	r1, [r1, #4]
   22b20:	ldm	r4, {r4, r9}
   22b24:	str	r4, [sp, #24]
   22b28:	str	r9, [sp, #28]
   22b2c:	add	r4, sp, #48	; 0x30
   22b30:	str	r4, [sp, #32]
   22b34:	stm	sp, {r2, r3}
   22b38:	str	r1, [sp, #8]
   22b3c:	str	r7, [sp, #12]
   22b40:	str	r1, [sp, #16]
   22b44:	movw	r1, #46292	; 0xb4d4
   22b48:	movt	r1, #4
   22b4c:	mov	r2, ip
   22b50:	bl	148c4 <fprintf@plt>
   22b54:	b	22604 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   22b58:	ldr	r4, [sp, #44]	; 0x2c
   22b5c:	ldr	r3, [r4]
   22b60:	movw	r0, #47447	; 0xb957
   22b64:	movt	r0, #4
   22b68:	mov	r1, #4
   22b6c:	mov	r2, #1
   22b70:	bl	14858 <fwrite@plt>
   22b74:	ldr	r0, [r4]
   22b78:	movw	r1, #47239	; 0xb887
   22b7c:	movt	r1, #4
   22b80:	sub	r2, fp, #256	; 0x100
   22b84:	mov	r3, r2
   22b88:	bl	148c4 <fprintf@plt>
   22b8c:	cmp	r5, #0
   22b90:	beq	22b9c <__flatcc_fb_gen_c_json_printer@@Base+0x1494>
   22b94:	mov	r0, r5
   22b98:	bl	14804 <free@plt>
   22b9c:	sub	sp, fp, #28
   22ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ba4:	movw	r0, #4272	; 0x10b0
   22ba8:	movt	r0, #6
   22bac:	ldr	r0, [r0]
   22bb0:	movw	r1, #47170	; 0xb842
   22bb4:	movt	r1, #4
   22bb8:	str	r1, [sp]
   22bbc:	movw	r1, #21375	; 0x537f
   22bc0:	movt	r1, #3
   22bc4:	movw	r4, #43453	; 0xa9bd
   22bc8:	movt	r4, #4
   22bcc:	mov	r2, r4
   22bd0:	movw	r3, #543	; 0x21f
   22bd4:	bl	148c4 <fprintf@plt>
   22bd8:	movw	r0, #25261	; 0x62ad
   22bdc:	movt	r0, #4
   22be0:	movw	r3, #45371	; 0xb13b
   22be4:	movt	r3, #4
   22be8:	mov	r1, r4
   22bec:	movw	r2, #543	; 0x21f
   22bf0:	bl	14984 <__assert_fail@plt>
   22bf4:	movw	r0, #4272	; 0x10b0
   22bf8:	movt	r0, #6
   22bfc:	ldr	r0, [r0]
   22c00:	movw	r1, #37785	; 0x9399
   22c04:	movt	r1, #4
   22c08:	str	r1, [sp]
   22c0c:	movw	r1, #21375	; 0x537f
   22c10:	movt	r1, #3
   22c14:	movw	r4, #43453	; 0xa9bd
   22c18:	movt	r4, #4
   22c1c:	mov	r2, r4
   22c20:	movw	r3, #406	; 0x196
   22c24:	bl	148c4 <fprintf@plt>
   22c28:	movw	r0, #25261	; 0x62ad
   22c2c:	movt	r0, #4
   22c30:	movw	r3, #45371	; 0xb13b
   22c34:	movt	r3, #4
   22c38:	mov	r1, r4
   22c3c:	movw	r2, #406	; 0x196
   22c40:	bl	14984 <__assert_fail@plt>
   22c44:	movw	r0, #4272	; 0x10b0
   22c48:	movt	r0, #6
   22c4c:	ldr	r0, [r0]
   22c50:	movw	r1, #46711	; 0xb677
   22c54:	movt	r1, #4
   22c58:	str	r1, [sp]
   22c5c:	movw	r1, #21375	; 0x537f
   22c60:	movt	r1, #3
   22c64:	movw	r4, #43453	; 0xa9bd
   22c68:	movt	r4, #4
   22c6c:	mov	r2, r4
   22c70:	mov	r3, #504	; 0x1f8
   22c74:	bl	148c4 <fprintf@plt>
   22c78:	movw	r0, #25261	; 0x62ad
   22c7c:	movt	r0, #4
   22c80:	movw	r3, #45371	; 0xb13b
   22c84:	movt	r3, #4
   22c88:	mov	r1, r4
   22c8c:	mov	r2, #504	; 0x1f8
   22c90:	bl	14984 <__assert_fail@plt>
   22c94:	movw	r0, #4272	; 0x10b0
   22c98:	movt	r0, #6
   22c9c:	ldr	r0, [r0]
   22ca0:	movw	r1, #46381	; 0xb52d
   22ca4:	movt	r1, #4
   22ca8:	str	r1, [sp]
   22cac:	movw	r1, #21375	; 0x537f
   22cb0:	movt	r1, #3
   22cb4:	movw	r4, #43453	; 0xa9bd
   22cb8:	movt	r4, #4
   22cbc:	mov	r2, r4
   22cc0:	movw	r3, #483	; 0x1e3
   22cc4:	bl	148c4 <fprintf@plt>
   22cc8:	movw	r0, #25261	; 0x62ad
   22ccc:	movt	r0, #4
   22cd0:	movw	r3, #45371	; 0xb13b
   22cd4:	movt	r3, #4
   22cd8:	mov	r1, r4
   22cdc:	movw	r2, #483	; 0x1e3
   22ce0:	bl	14984 <__assert_fail@plt>
   22ce4:	movw	r0, #4272	; 0x10b0
   22ce8:	movt	r0, #6
   22cec:	ldr	r0, [r0]
   22cf0:	movw	r1, #45329	; 0xb111
   22cf4:	movt	r1, #4
   22cf8:	str	r1, [sp]
   22cfc:	movw	r1, #21375	; 0x537f
   22d00:	movt	r1, #3
   22d04:	movw	r4, #43453	; 0xa9bd
   22d08:	movt	r4, #4
   22d0c:	mov	r2, r4
   22d10:	movw	r3, #361	; 0x169
   22d14:	bl	148c4 <fprintf@plt>
   22d18:	movw	r0, #25261	; 0x62ad
   22d1c:	movt	r0, #4
   22d20:	movw	r3, #45371	; 0xb13b
   22d24:	movt	r3, #4
   22d28:	mov	r1, r4
   22d2c:	movw	r2, #361	; 0x169
   22d30:	bl	14984 <__assert_fail@plt>
   22d34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22d38:	add	fp, sp, #24
   22d3c:	sub	sp, sp, #224	; 0xe0
   22d40:	mov	r5, r1
   22d44:	mov	r4, r0
   22d48:	mov	r6, sp
   22d4c:	mov	r0, r6
   22d50:	mov	r1, #0
   22d54:	mov	r2, #220	; 0xdc
   22d58:	bl	148dc <memset@plt>
   22d5c:	mov	r0, r5
   22d60:	mov	r1, r6
   22d64:	bl	21a94 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22d68:	ldr	r0, [r4, #204]	; 0xcc
   22d6c:	ldr	r1, [r4, #208]	; 0xd0
   22d70:	ldr	r2, [r1, #160]	; 0xa0
   22d74:	movw	r1, #47452	; 0xb95c
   22d78:	movt	r1, #4
   22d7c:	bl	148c4 <fprintf@plt>
   22d80:	ldr	r0, [r4, #204]	; 0xcc
   22d84:	movw	r1, #47538	; 0xb9b2
   22d88:	movt	r1, #4
   22d8c:	mov	r2, r6
   22d90:	bl	148c4 <fprintf@plt>
   22d94:	ldr	r3, [r4, #204]	; 0xcc
   22d98:	ldr	r0, [r4, #208]	; 0xd0
   22d9c:	ldrh	r1, [r0, #16]
   22da0:	cmp	r1, #2
   22da4:	bne	22dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x16c0>
   22da8:	ldrd	r6, [r0, #8]
   22dac:	movw	r1, #47720	; 0xba68
   22db0:	movt	r1, #4
   22db4:	mov	r0, r3
   22db8:	mov	r2, r7
   22dbc:	mov	r3, r6
   22dc0:	bl	148c4 <fprintf@plt>
   22dc4:	b	22ddc <__flatcc_fb_gen_c_json_printer@@Base+0x16d4>
   22dc8:	movw	r0, #47730	; 0xba72
   22dcc:	movt	r0, #4
   22dd0:	mov	r1, #3
   22dd4:	mov	r2, #1
   22dd8:	bl	14858 <fwrite@plt>
   22ddc:	ldr	r3, [r4, #204]	; 0xcc
   22de0:	movw	r0, #47448	; 0xb958
   22de4:	movt	r0, #4
   22de8:	mov	r1, #3
   22dec:	mov	r2, #1
   22df0:	bl	14858 <fwrite@plt>
   22df4:	sub	sp, fp, #24
   22df8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22dfc:	ldr	r1, [r0, #212]	; 0xd4
   22e00:	ldr	r1, [r1, #140]	; 0x8c
   22e04:	cmp	r1, #0
   22e08:	bxeq	lr
   22e0c:	ldr	r3, [r0, #204]	; 0xcc
   22e10:	movw	r0, #45596	; 0xb21c
   22e14:	movt	r0, #3
   22e18:	mov	r1, #36	; 0x24
   22e1c:	mov	r2, #1
   22e20:	b	14858 <fwrite@plt>

00022e24 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   22e24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22e28:	add	fp, sp, #24
   22e2c:	sub	sp, sp, #232	; 0xe8
   22e30:	mov	r8, r3
   22e34:	mov	r4, r2
   22e38:	mov	r6, r1
   22e3c:	mov	r7, r0
   22e40:	mov	r5, sp
   22e44:	mov	r0, r5
   22e48:	bl	2e68c <flatcc_builder_init@@Base>
   22e4c:	mov	r0, r5
   22e50:	mov	r1, r7
   22e54:	mov	r2, r6
   22e58:	bl	22e9c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   22e5c:	ldr	r2, [r8]
   22e60:	mov	r0, r5
   22e64:	mov	r1, r4
   22e68:	bl	31558 <flatcc_builder_copy_buffer@@Base>
   22e6c:	cmp	r0, #0
   22e70:	movne	r0, r4
   22e74:	blne	22fd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   22e78:	mov	r5, sp
   22e7c:	mov	r0, r5
   22e80:	bl	31474 <flatcc_builder_get_buffer_size@@Base>
   22e84:	str	r0, [r8]
   22e88:	mov	r0, r5
   22e8c:	bl	2e810 <flatcc_builder_clear@@Base>
   22e90:	mov	r0, r4
   22e94:	sub	sp, fp, #24
   22e98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22e9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22ea0:	add	fp, sp, #24
   22ea4:	sub	sp, sp, #48	; 0x30
   22ea8:	mov	r5, r2
   22eac:	mov	r7, r1
   22eb0:	mov	r4, r0
   22eb4:	ldr	r3, [r2, #60]	; 0x3c
   22eb8:	ldr	r2, [r1, #184]	; 0xb8
   22ebc:	add	r0, sp, #4
   22ec0:	mov	r1, r5
   22ec4:	bl	2324c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
   22ec8:	mvn	r6, #0
   22ecc:	cmp	r0, #0
   22ed0:	bne	22fc4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   22ed4:	ldr	r0, [sp, #8]
   22ed8:	cmp	r0, #1
   22edc:	blt	22ef8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd4>
   22ee0:	lsl	r0, r0, #2
   22ee4:	bl	14870 <malloc@plt>
   22ee8:	cmp	r0, #0
   22eec:	beq	22fbc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x198>
   22ef0:	mov	r8, r0
   22ef4:	b	22efc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8>
   22ef8:	mov	r8, #0
   22efc:	ldr	r0, [r7, #188]	; 0xbc
   22f00:	cmp	r0, #0
   22f04:	beq	22f14 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0>
   22f08:	mov	r0, r4
   22f0c:	bl	233ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x318>
   22f10:	b	22f1c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf8>
   22f14:	mov	r0, r4
   22f18:	bl	233d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x33c>
   22f1c:	ldrh	r0, [r5, #16]
   22f20:	cmp	r0, #2
   22f24:	bne	22f3c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x118>
   22f28:	ldrd	r2, [r5, #8]
   22f2c:	mov	r0, r4
   22f30:	mov	r1, r2
   22f34:	mov	r2, r3
   22f38:	bl	233f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x360>
   22f3c:	ldrh	r0, [r5, #32]
   22f40:	cmp	r0, #2
   22f44:	bne	22f5c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x138>
   22f48:	ldrd	r2, [r5, #24]
   22f4c:	mov	r0, r4
   22f50:	mov	r1, r2
   22f54:	mov	r2, r3
   22f58:	bl	23414 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x380>
   22f5c:	ldr	r2, [sp, #8]
   22f60:	ldr	r1, [sp, #20]
   22f64:	mov	r0, r4
   22f68:	mov	r3, r8
   22f6c:	bl	23434 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a0>
   22f70:	ldr	r2, [sp, #12]
   22f74:	ldr	r1, [sp, #24]
   22f78:	mov	r0, r4
   22f7c:	mov	r3, r8
   22f80:	bl	23500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46c>
   22f84:	ldr	r1, [r5, #52]	; 0x34
   22f88:	mov	r0, r4
   22f8c:	mov	r2, r8
   22f90:	bl	235fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>
   22f94:	mov	r0, r4
   22f98:	bl	23620 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>
   22f9c:	add	r0, sp, #4
   22fa0:	bl	23354 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c0>
   22fa4:	mov	r6, #0
   22fa8:	cmp	r8, #0
   22fac:	beq	22fc4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   22fb0:	mov	r0, r8
   22fb4:	bl	14804 <free@plt>
   22fb8:	b	22fc4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   22fbc:	add	r0, sp, #4
   22fc0:	bl	23354 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c0>
   22fc4:	mov	r0, r6
   22fc8:	sub	sp, fp, #24
   22fcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22fd0:	push	{r4, r5, fp, lr}
   22fd4:	add	fp, sp, #8
   22fd8:	bl	2490c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1878>
   22fdc:	bl	24944 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18b0>
   22fe0:	mov	r4, r0
   22fe4:	bl	249c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1930>
   22fe8:	cmp	r0, #0
   22fec:	popeq	{r4, r5, fp, pc}
   22ff0:	mov	r5, #0
   22ff4:	mov	r0, r4
   22ff8:	mov	r1, r5
   22ffc:	bl	249d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1944>
   23000:	bl	24a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1994>
   23004:	bl	24aa8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a14>
   23008:	add	r5, r5, #1
   2300c:	mov	r0, r4
   23010:	bl	249c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1930>
   23014:	cmp	r5, r0
   23018:	bcc	22ff4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1d0>
   2301c:	pop	{r4, r5, fp, pc}

00023020 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   23020:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23024:	add	fp, sp, #24
   23028:	sub	sp, sp, #232	; 0xe8
   2302c:	mov	r5, r2
   23030:	mov	r4, r1
   23034:	mov	r6, r0
   23038:	mov	r7, sp
   2303c:	mov	r0, r7
   23040:	bl	2e68c <flatcc_builder_init@@Base>
   23044:	mov	r0, r7
   23048:	mov	r1, r6
   2304c:	mov	r2, r4
   23050:	bl	22e9c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   23054:	mov	r4, #0
   23058:	cmp	r0, #0
   2305c:	bne	23080 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   23060:	mov	r0, sp
   23064:	mov	r1, r5
   23068:	bl	315a4 <flatcc_builder_finalize_buffer@@Base>
   2306c:	cmp	r0, #0
   23070:	beq	23080 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   23074:	mov	r5, r0
   23078:	bl	22fd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   2307c:	mov	r4, r5
   23080:	mov	r0, sp
   23084:	bl	2e810 <flatcc_builder_clear@@Base>
   23088:	mov	r0, r4
   2308c:	sub	sp, fp, #24
   23090:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00023094 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   23094:	push	{r4, r5, r6, r7, fp, lr}
   23098:	add	fp, sp, #16
   2309c:	sub	sp, sp, #8
   230a0:	mov	r5, r1
   230a4:	mov	r6, r0
   230a8:	bl	23154 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   230ac:	cmp	r0, #0
   230b0:	beq	23100 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c>
   230b4:	mov	r4, r0
   230b8:	add	r2, sp, #4
   230bc:	mov	r0, r6
   230c0:	mov	r1, r5
   230c4:	bl	23020 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   230c8:	cmp	r0, #0
   230cc:	beq	23108 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x74>
   230d0:	mov	r5, r0
   230d4:	ldr	r7, [sp, #4]
   230d8:	mov	r1, #1
   230dc:	mov	r2, r7
   230e0:	mov	r3, r4
   230e4:	bl	14858 <fwrite@plt>
   230e8:	mov	r6, #0
   230ec:	cmp	r7, r0
   230f0:	bne	2312c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x98>
   230f4:	mov	r0, r5
   230f8:	bl	14804 <free@plt>
   230fc:	b	23118 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x84>
   23100:	mvn	r6, #0
   23104:	b	23120 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8c>
   23108:	movw	r0, #49939	; 0xc313
   2310c:	movt	r0, #4
   23110:	bl	14864 <puts@plt>
   23114:	mvn	r6, #0
   23118:	mov	r0, r4
   2311c:	bl	23228 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x194>
   23120:	mov	r0, r6
   23124:	sub	sp, fp, #16
   23128:	pop	{r4, r5, r6, r7, fp, pc}
   2312c:	movw	r0, #4272	; 0x10b0
   23130:	movt	r0, #6
   23134:	ldr	r3, [r0]
   23138:	movw	r0, #47856	; 0xbaf0
   2313c:	movt	r0, #4
   23140:	mov	r1, #38	; 0x26
   23144:	mov	r2, #1
   23148:	bl	14858 <fwrite@plt>
   2314c:	mvn	r6, #0
   23150:	b	230f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x60>
   23154:	push	{r4, r5, r6, sl, fp, lr}
   23158:	add	fp, sp, #16
   2315c:	sub	sp, sp, #8
   23160:	ldr	r2, [r0, #108]	; 0x6c
   23164:	ldr	r0, [r0, #216]	; 0xd8
   23168:	movw	r4, #21632	; 0x5480
   2316c:	movt	r4, #3
   23170:	cmp	r0, #0
   23174:	movne	r4, r0
   23178:	cmp	r2, #0
   2317c:	beq	23190 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc>
   23180:	movw	r0, #4276	; 0x10b4
   23184:	movt	r0, #6
   23188:	ldr	r5, [r0]
   2318c:	b	231fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   23190:	ldr	r5, [r1, #160]	; 0xa0
   23194:	mov	r0, r5
   23198:	bl	148b8 <strlen@plt>
   2319c:	mov	r6, r0
   231a0:	mov	r0, r4
   231a4:	bl	148b8 <strlen@plt>
   231a8:	mov	r1, r0
   231ac:	mov	r0, #1
   231b0:	movw	r2, #20352	; 0x4f80
   231b4:	movt	r2, #3
   231b8:	str	r2, [sp]
   231bc:	str	r0, [sp, #4]
   231c0:	mov	r0, r4
   231c4:	mov	r2, r5
   231c8:	mov	r3, r6
   231cc:	bl	26f38 <__flatcc_fb_create_join_path_n@@Base>
   231d0:	mov	r4, r0
   231d4:	bl	24e60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1dcc>
   231d8:	movw	r1, #20679	; 0x50c7
   231dc:	movt	r1, #3
   231e0:	mov	r0, r4
   231e4:	bl	147f8 <fopen@plt>
   231e8:	mov	r5, r0
   231ec:	cmp	r0, #0
   231f0:	beq	23208 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   231f4:	mov	r0, r4
   231f8:	bl	14804 <free@plt>
   231fc:	mov	r0, r5
   23200:	sub	sp, fp, #16
   23204:	pop	{r4, r5, r6, sl, fp, pc}
   23208:	movw	r0, #4272	; 0x10b0
   2320c:	movt	r0, #6
   23210:	ldr	r0, [r0]
   23214:	movw	r1, #49889	; 0xc2e1
   23218:	movt	r1, #4
   2321c:	mov	r2, r4
   23220:	bl	148c4 <fprintf@plt>
   23224:	b	231f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   23228:	cmp	r0, #0
   2322c:	bxeq	lr
   23230:	movw	r1, #4276	; 0x10b4
   23234:	movt	r1, #6
   23238:	ldr	r1, [r1]
   2323c:	cmp	r1, r0
   23240:	beq	23248 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   23244:	b	1490c <fclose@plt>
   23248:	bx	lr
   2324c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23250:	add	fp, sp, #24
   23254:	mov	r8, r3
   23258:	mov	r4, r0
   2325c:	mov	r0, #0
   23260:	vmov.i32	q8, #0	; 0x00000000
   23264:	str	r0, [r4, #36]	; 0x24
   23268:	str	r1, [r4, #40]	; 0x28
   2326c:	str	r2, [r4]
   23270:	add	r0, r4, #20
   23274:	vst1.32	{d16-d17}, [r0]
   23278:	add	r0, r4, #4
   2327c:	vst1.32	{d16-d17}, [r0]
   23280:	movw	r1, #13888	; 0x3640
   23284:	movt	r1, #2
   23288:	mov	r0, r3
   2328c:	mov	r2, r4
   23290:	bl	265d8 <fb_scope_table_visit@@Base>
   23294:	ldr	r5, [r4, #4]
   23298:	mov	r0, r5
   2329c:	mov	r1, #8
   232a0:	bl	147d4 <calloc@plt>
   232a4:	str	r0, [r4, #16]
   232a8:	ldr	r7, [r4, #8]
   232ac:	mov	r0, r7
   232b0:	mov	r1, #8
   232b4:	bl	147d4 <calloc@plt>
   232b8:	str	r0, [r4, #20]
   232bc:	ldr	r6, [r4, #12]
   232c0:	mov	r0, r6
   232c4:	bl	14870 <malloc@plt>
   232c8:	ldr	r1, [r4, #16]
   232cc:	ldr	r2, [r4, #20]
   232d0:	add	r3, r4, #24
   232d4:	stm	r3, {r0, r1, r2}
   232d8:	str	r0, [r4, #36]	; 0x24
   232dc:	cmp	r5, #1
   232e0:	blt	232ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x258>
   232e4:	cmp	r1, #0
   232e8:	beq	23310 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x27c>
   232ec:	cmp	r7, #1
   232f0:	blt	23300 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x26c>
   232f4:	ldr	r1, [r4, #20]
   232f8:	cmp	r1, #0
   232fc:	beq	23310 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x27c>
   23300:	cmp	r6, #0
   23304:	beq	23320 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x28c>
   23308:	cmp	r0, #0
   2330c:	bne	23320 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x28c>
   23310:	mov	r0, r4
   23314:	bl	23354 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c0>
   23318:	mvn	r0, #0
   2331c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23320:	movw	r1, #13908	; 0x3654
   23324:	movt	r1, #2
   23328:	mov	r0, r8
   2332c:	mov	r2, r4
   23330:	bl	265d8 <fb_scope_table_visit@@Base>
   23334:	ldr	r1, [r4, #4]
   23338:	ldr	r0, [r4, #16]
   2333c:	bl	23668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d4>
   23340:	ldr	r1, [r4, #8]
   23344:	ldr	r0, [r4, #20]
   23348:	bl	23668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d4>
   2334c:	mov	r0, #0
   23350:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23354:	push	{r4, sl, fp, lr}
   23358:	add	fp, sp, #8
   2335c:	mov	r4, r0
   23360:	ldr	r0, [r0, #16]
   23364:	cmp	r0, #0
   23368:	beq	23370 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2dc>
   2336c:	bl	14804 <free@plt>
   23370:	ldr	r0, [r4, #20]
   23374:	cmp	r0, #0
   23378:	beq	23380 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ec>
   2337c:	bl	14804 <free@plt>
   23380:	ldr	r0, [r4, #24]
   23384:	cmp	r0, #0
   23388:	beq	23390 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2fc>
   2338c:	bl	14804 <free@plt>
   23390:	vmov.i32	q8, #0	; 0x00000000
   23394:	mov	r0, #28
   23398:	add	r1, r4, #16
   2339c:	vst1.32	{d16-d17}, [r4], r0
   233a0:	vst1.32	{d16-d17}, [r4]
   233a4:	vst1.32	{d16-d17}, [r1]
   233a8:	pop	{r4, sl, fp, pc}
   233ac:	push	{r4, sl, fp, lr}
   233b0:	add	fp, sp, #8
   233b4:	mov	r4, r0
   233b8:	bl	238b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x824>
   233bc:	cmp	r0, #0
   233c0:	popne	{r4, sl, fp, pc}
   233c4:	mov	r0, r4
   233c8:	pop	{r4, sl, fp, lr}
   233cc:	b	238cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x838>
   233d0:	push	{r4, sl, fp, lr}
   233d4:	add	fp, sp, #8
   233d8:	mov	r4, r0
   233dc:	bl	238d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x840>
   233e0:	cmp	r0, #0
   233e4:	popne	{r4, sl, fp, pc}
   233e8:	mov	r0, r4
   233ec:	pop	{r4, sl, fp, lr}
   233f0:	b	238cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x838>
   233f4:	push	{r4, sl, fp, lr}
   233f8:	add	fp, sp, #8
   233fc:	mov	r4, r0
   23400:	bl	310d4 <flatcc_builder_create_string@@Base>
   23404:	mov	r1, r0
   23408:	mov	r0, r4
   2340c:	pop	{r4, sl, fp, lr}
   23410:	b	238e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x854>
   23414:	push	{r4, sl, fp, lr}
   23418:	add	fp, sp, #8
   2341c:	mov	r4, r0
   23420:	bl	310d4 <flatcc_builder_create_string@@Base>
   23424:	mov	r1, r0
   23428:	mov	r0, r4
   2342c:	pop	{r4, sl, fp, lr}
   23430:	b	23910 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x87c>
   23434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23438:	add	fp, sp, #28
   2343c:	push	{r3}		; (str r3, [sp, #-4]!)
   23440:	mov	r9, r2
   23444:	mov	r6, r0
   23448:	cmp	r2, #1
   2344c:	blt	234e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x454>
   23450:	add	r5, r1, #4
   23454:	ldr	sl, [sp]
   23458:	mov	r4, r9
   2345c:	b	23498 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x404>
   23460:	sub	r0, r8, #1
   23464:	clz	r0, r0
   23468:	lsr	r1, r0, #5
   2346c:	mov	r0, r6
   23470:	bl	23c24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb90>
   23474:	ldrh	r1, [r7, #104]	; 0x68
   23478:	mov	r0, r6
   2347c:	bl	23c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbcc>
   23480:	mov	r0, r6
   23484:	bl	23c9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc08>
   23488:	str	r0, [sl], #4
   2348c:	add	r5, r5, #8
   23490:	subs	r4, r4, #1
   23494:	beq	234e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x454>
   23498:	ldr	r7, [r5, #-4]
   2349c:	mov	r0, r6
   234a0:	bl	23938 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8a4>
   234a4:	ldr	r1, [r5]
   234a8:	mov	r0, r6
   234ac:	bl	23940 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8ac>
   234b0:	mov	r0, r6
   234b4:	bl	23960 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8cc>
   234b8:	mov	r0, r6
   234bc:	mov	r1, r7
   234c0:	bl	23964 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8d0>
   234c4:	mov	r0, r6
   234c8:	bl	23bc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb34>
   234cc:	ldrh	r8, [r7, #8]
   234d0:	cmp	r8, #1
   234d4:	bne	23460 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3cc>
   234d8:	ldr	r1, [r7, #112]	; 0x70
   234dc:	mov	r0, r6
   234e0:	bl	23be8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb54>
   234e4:	b	23460 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3cc>
   234e8:	mov	r0, r6
   234ec:	ldr	r1, [sp]
   234f0:	mov	r2, r9
   234f4:	sub	sp, fp, #28
   234f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234fc:	b	23cec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc58>
   23500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23504:	add	fp, sp, #28
   23508:	sub	sp, sp, #20
   2350c:	str	r3, [sp, #12]
   23510:	mov	sl, r2
   23514:	str	r1, [sp, #16]
   23518:	mov	r6, r0
   2351c:	bl	24520 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148c>
   23520:	cmp	sl, #1
   23524:	blt	235ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x558>
   23528:	mov	r5, #0
   2352c:	b	23584 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f0>
   23530:	mov	r0, r6
   23534:	bl	245b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1520>
   23538:	sub	r0, r8, #4
   2353c:	clz	r0, r0
   23540:	lsr	r1, r0, #5
   23544:	mov	r0, r6
   23548:	bl	245d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1540>
   2354c:	ldm	r9, {r2, r3}
   23550:	ldr	r0, [r9, #8]
   23554:	ldr	r1, [r9, #12]
   23558:	stm	sp, {r0, r1}
   2355c:	mov	r0, r6
   23560:	bl	23ea8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe14>
   23564:	mov	r1, r0
   23568:	mov	r0, r6
   2356c:	bl	24610 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x157c>
   23570:	mov	r0, r6
   23574:	bl	24638 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15a4>
   23578:	add	r5, r5, #1
   2357c:	cmp	r5, sl
   23580:	beq	235ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x558>
   23584:	ldr	r4, [sp, #16]
   23588:	ldr	r7, [r4, r5, lsl #3]!
   2358c:	ldrh	r8, [r7, #8]
   23590:	mov	r0, r6
   23594:	bl	24524 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1490>
   23598:	ldr	r1, [r4, #4]
   2359c:	mov	r0, r6
   235a0:	bl	24528 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1494>
   235a4:	mov	r0, r6
   235a8:	bl	24548 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b4>
   235ac:	add	r9, r7, #40	; 0x28
   235b0:	ldr	r4, [r7, #20]
   235b4:	cmp	r4, #0
   235b8:	beq	23530 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x49c>
   235bc:	cmp	r8, #4
   235c0:	mov	r7, #0
   235c4:	ldr	r0, [sp, #12]
   235c8:	moveq	r7, r0
   235cc:	mov	r0, r6
   235d0:	mov	r1, r4
   235d4:	mov	r2, r7
   235d8:	bl	2454c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b8>
   235dc:	ldr	r4, [r4]
   235e0:	cmp	r4, #0
   235e4:	bne	235cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x538>
   235e8:	b	23530 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x49c>
   235ec:	mov	r0, r6
   235f0:	sub	sp, fp, #28
   235f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235f8:	b	24658 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c4>
   235fc:	cmp	r1, #0
   23600:	bxeq	lr
   23604:	ldrh	r3, [r1, #8]
   23608:	cmp	r3, #0
   2360c:	beq	23614 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   23610:	bx	lr
   23614:	ldr	r1, [r1, #124]	; 0x7c
   23618:	ldr	r1, [r2, r1, lsl #2]
   2361c:	b	24890 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17fc>
   23620:	push	{r4, sl, fp, lr}
   23624:	add	fp, sp, #8
   23628:	mov	r4, r0
   2362c:	bl	248bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1828>
   23630:	mov	r1, r0
   23634:	mov	r0, r4
   23638:	pop	{r4, sl, fp, lr}
   2363c:	b	248b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1824>
   23640:	mov	r2, r0
   23644:	add	r0, r1, #4
   23648:	movw	r1, #13996	; 0x36ac
   2364c:	movt	r1, #2
   23650:	b	25fe0 <fb_symbol_table_visit@@Base>
   23654:	mov	r2, r0
   23658:	add	r0, r1, #4
   2365c:	movw	r1, #14260	; 0x37b4
   23660:	movt	r1, #2
   23664:	b	25fe0 <fb_symbol_table_visit@@Base>
   23668:	push	{r4, r5, fp, lr}
   2366c:	add	fp, sp, #8
   23670:	mov	r4, r1
   23674:	mov	r5, r0
   23678:	movw	r3, #14508	; 0x38ac
   2367c:	movt	r3, #2
   23680:	mov	r2, #8
   23684:	bl	14948 <qsort@plt>
   23688:	cmp	r4, #1
   2368c:	poplt	{r4, r5, fp, pc}
   23690:	mov	r0, #0
   23694:	ldr	r1, [r5, r0, lsl #3]
   23698:	str	r0, [r1, #124]	; 0x7c
   2369c:	add	r0, r0, #1
   236a0:	cmp	r4, r0
   236a4:	bne	23694 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>
   236a8:	pop	{r4, r5, fp, pc}
   236ac:	push	{r4, r5, fp, lr}
   236b0:	add	fp, sp, #8
   236b4:	mov	r5, r1
   236b8:	mov	r4, r0
   236bc:	ldr	r0, [r0, #40]	; 0x28
   236c0:	bl	23764 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   236c4:	cmp	r0, #0
   236c8:	popeq	{r4, r5, fp, pc}
   236cc:	ldr	r2, [r4]
   236d0:	mov	r1, #1
   236d4:	cmp	r2, #0
   236d8:	beq	23714 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x680>
   236dc:	ldr	r0, [r0, #12]
   236e0:	ldr	r0, [r0]
   236e4:	cmp	r0, #0
   236e8:	beq	23714 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x680>
   236ec:	mov	r1, #0
   236f0:	ldr	r2, [r0]
   236f4:	ldr	r0, [r0, #4]
   236f8:	ldr	r0, [r0, #4]
   236fc:	add	r0, r1, r0
   23700:	add	r1, r0, #1
   23704:	cmp	r2, #0
   23708:	mov	r0, r2
   2370c:	bne	236f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x65c>
   23710:	add	r1, r1, #1
   23714:	ldr	r0, [r5, #4]
   23718:	ldr	r0, [r0, #4]
   2371c:	add	r0, r1, r0
   23720:	ldr	r1, [r4, #12]
   23724:	add	r0, r0, r1
   23728:	str	r0, [r4, #12]
   2372c:	ldrh	r0, [r5, #8]
   23730:	sub	r1, r0, #3
   23734:	cmp	r1, #2
   23738:	bcc	23754 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c0>
   2373c:	cmp	r0, #1
   23740:	bhi	23760 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6cc>
   23744:	ldr	r0, [r4, #4]
   23748:	add	r0, r0, #1
   2374c:	str	r0, [r4, #4]
   23750:	pop	{r4, r5, fp, pc}
   23754:	ldr	r0, [r4, #8]
   23758:	add	r0, r0, #1
   2375c:	str	r0, [r4, #8]
   23760:	pop	{r4, r5, fp, pc}
   23764:	push	{r4, sl, fp, lr}
   23768:	add	fp, sp, #8
   2376c:	mov	r4, r1
   23770:	ldrh	r1, [r1, #8]
   23774:	cmp	r1, #4
   23778:	bhi	23794 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x700>
   2377c:	ldr	r1, [r4, #16]
   23780:	add	r0, r0, #172	; 0xac
   23784:	bl	2379c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x708>
   23788:	cmp	r0, #0
   2378c:	movne	r0, r4
   23790:	pop	{r4, sl, fp, pc}
   23794:	mov	r0, #0
   23798:	pop	{r4, sl, fp, pc}
   2379c:	push	{fp, lr}
   237a0:	mov	fp, sp
   237a4:	bl	258d8 <ptr_set_find_item@@Base>
   237a8:	cmp	r0, #0
   237ac:	movwne	r0, #1
   237b0:	pop	{fp, pc}
   237b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237b8:	add	fp, sp, #28
   237bc:	sub	sp, sp, #4
   237c0:	mov	r9, r1
   237c4:	mov	sl, r0
   237c8:	ldr	r0, [r0, #40]	; 0x28
   237cc:	bl	23764 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   237d0:	cmp	r0, #0
   237d4:	beq	238a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x810>
   237d8:	ldr	r1, [sl]
   237dc:	ldr	r8, [sl, #36]	; 0x24
   237e0:	cmp	r1, #0
   237e4:	mov	r6, r8
   237e8:	beq	23830 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x79c>
   237ec:	ldr	r0, [r0, #12]
   237f0:	ldr	r5, [r0]
   237f4:	cmp	r5, #0
   237f8:	mov	r6, r8
   237fc:	beq	23830 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x79c>
   23800:	mov	r4, #46	; 0x2e
   23804:	mov	r6, r8
   23808:	ldr	r0, [r5, #4]
   2380c:	ldm	r0, {r1, r7}
   23810:	mov	r0, r6
   23814:	mov	r2, r7
   23818:	bl	14810 <memcpy@plt>
   2381c:	strb	r4, [r6, r7]!
   23820:	add	r6, r6, #1
   23824:	ldr	r5, [r5]
   23828:	cmp	r5, #0
   2382c:	bne	23808 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x774>
   23830:	ldr	r0, [r9, #4]
   23834:	ldm	r0, {r1, r7}
   23838:	mov	r0, r6
   2383c:	mov	r2, r7
   23840:	bl	14810 <memcpy@plt>
   23844:	mov	r0, #0
   23848:	strb	r0, [r6, r7]!
   2384c:	add	r0, r6, #1
   23850:	str	r0, [sl, #36]	; 0x24
   23854:	ldrh	r0, [r9, #8]
   23858:	sub	r1, r0, #3
   2385c:	cmp	r1, #2
   23860:	bcc	2388c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7f8>
   23864:	cmp	r0, #1
   23868:	bhi	238a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x810>
   2386c:	ldr	r0, [sl, #28]
   23870:	str	r9, [r0]
   23874:	ldr	r0, [sl, #28]
   23878:	str	r8, [r0, #4]
   2387c:	add	r0, r0, #8
   23880:	str	r0, [sl, #28]
   23884:	sub	sp, fp, #28
   23888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2388c:	ldr	r0, [sl, #32]
   23890:	str	r9, [r0]
   23894:	ldr	r0, [sl, #32]
   23898:	str	r8, [r0, #4]
   2389c:	add	r0, r0, #8
   238a0:	str	r0, [sl, #32]
   238a4:	sub	sp, fp, #28
   238a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238ac:	ldr	r1, [r1, #4]
   238b0:	ldr	r0, [r0, #4]
   238b4:	b	147ec <strcmp@plt>
   238b8:	movw	r1, #47895	; 0xbb17
   238bc:	movt	r1, #4
   238c0:	mov	r2, #0
   238c4:	mov	r3, #2
   238c8:	b	2efa8 <flatcc_builder_start_buffer@@Base>
   238cc:	mov	r1, #5
   238d0:	b	2fc94 <flatcc_builder_start_table@@Base>
   238d4:	movw	r1, #47895	; 0xbb17
   238d8:	movt	r1, #4
   238dc:	mov	r2, #0
   238e0:	mov	r3, #0
   238e4:	b	2efa8 <flatcc_builder_start_buffer@@Base>
   238e8:	push	{r4, sl, fp, lr}
   238ec:	add	fp, sp, #8
   238f0:	cmp	r1, #0
   238f4:	popeq	{r4, sl, fp, pc}
   238f8:	mov	r4, r1
   238fc:	mov	r1, #2
   23900:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   23904:	cmp	r0, #0
   23908:	strne	r4, [r0]
   2390c:	pop	{r4, sl, fp, pc}
   23910:	push	{r4, sl, fp, lr}
   23914:	add	fp, sp, #8
   23918:	cmp	r1, #0
   2391c:	popeq	{r4, sl, fp, pc}
   23920:	mov	r4, r1
   23924:	mov	r1, #3
   23928:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   2392c:	cmp	r0, #0
   23930:	strne	r4, [r0]
   23934:	pop	{r4, sl, fp, pc}
   23938:	mov	r1, #5
   2393c:	b	2fc94 <flatcc_builder_start_table@@Base>
   23940:	push	{r4, sl, fp, lr}
   23944:	add	fp, sp, #8
   23948:	mov	r4, r0
   2394c:	bl	3118c <flatcc_builder_create_string_str@@Base>
   23950:	mov	r1, r0
   23954:	mov	r0, r4
   23958:	pop	{r4, sl, fp, lr}
   2395c:	b	23d0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc78>
   23960:	b	2fa50 <flatcc_builder_start_offset_vector@@Base>
   23964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23968:	add	fp, sp, #28
   2396c:	sub	sp, sp, #4
   23970:	vpush	{d8}
   23974:	sub	sp, sp, #32
   23978:	str	r1, [sp, #8]
   2397c:	ldr	r4, [r1, #20]
   23980:	cmp	r4, #0
   23984:	beq	23bb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb24>
   23988:	mov	r5, r0
   2398c:	mov	r8, #0
   23990:	b	239c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x934>
   23994:	ldrh	r1, [r9, #32]
   23998:	mov	r0, r5
   2399c:	bl	23d8c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcf8>
   239a0:	ldr	r6, [sp, #28]
   239a4:	mov	r0, r5
   239a8:	ldr	r1, [sp, #24]
   239ac:	bl	23e04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd70>
   239b0:	mov	r0, r5
   239b4:	bl	23e40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdac>
   239b8:	orr	r8, r8, r6
   239bc:	ldr	r4, [r4]
   239c0:	cmp	r4, #0
   239c4:	beq	23bb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb24>
   239c8:	add	sl, r4, #16
   239cc:	tst	r8, #255	; 0xff
   239d0:	mov	r0, #0
   239d4:	bne	239e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x94c>
   239d8:	ldrb	r0, [r4, #72]	; 0x48
   239dc:	lsr	r0, r0, #7
   239e0:	str	r0, [sp, #28]
   239e4:	add	r6, r4, #96	; 0x60
   239e8:	add	r0, sl, #8
   239ec:	str	r0, [sp, #20]
   239f0:	ldrh	r0, [r4, #72]	; 0x48
   239f4:	ubfx	r7, r0, #2, #1
   239f8:	ldrh	r1, [r4, #24]
   239fc:	ubfx	r0, r0, #8, #1
   23a00:	str	r0, [sp, #16]
   23a04:	cmp	r1, #14
   23a08:	bne	23aa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa0c>
   23a0c:	ldr	r0, [sl]
   23a10:	ldrh	r0, [r0, #8]
   23a14:	cmp	r0, #4
   23a18:	bne	23aa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa0c>
   23a1c:	mov	r0, r5
   23a20:	bl	23d34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca0>
   23a24:	mov	r0, r5
   23a28:	bl	23d38 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca4>
   23a2c:	ldr	r0, [r4, #4]
   23a30:	ldm	r0, {r1, r2}
   23a34:	mov	r0, r5
   23a38:	bl	23d3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca8>
   23a3c:	mov	r0, r5
   23a40:	movw	r1, #47229	; 0xb87d
   23a44:	movt	r1, #3
   23a48:	mov	r2, #5
   23a4c:	bl	23d3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca8>
   23a50:	mov	r0, r5
   23a54:	bl	23d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcac>
   23a58:	mov	r0, r5
   23a5c:	bl	23d60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xccc>
   23a60:	ldrh	r0, [r6]
   23a64:	mov	r1, #2
   23a68:	add	r0, r1, r0, lsl #1
   23a6c:	uxth	r1, r0
   23a70:	mov	r0, r5
   23a74:	bl	23d8c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcf8>
   23a78:	ldrh	r0, [r6]
   23a7c:	sub	r0, r0, #1
   23a80:	uxth	r1, r0
   23a84:	mov	r0, r5
   23a88:	bl	23dc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd34>
   23a8c:	mov	r0, r5
   23a90:	mov	r1, r7
   23a94:	bl	23e04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd70>
   23a98:	mov	r0, r5
   23a9c:	bl	23e40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdac>
   23aa0:	str	r6, [sp, #12]
   23aa4:	str	r7, [sp, #24]
   23aa8:	add	r9, r4, #48	; 0x30
   23aac:	mov	r0, r5
   23ab0:	bl	23d34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca0>
   23ab4:	ldr	r0, [r4, #4]
   23ab8:	ldm	r0, {r1, r2}
   23abc:	mov	r0, r5
   23ac0:	bl	23e60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdcc>
   23ac4:	ldrd	r2, [sl]
   23ac8:	ldr	r0, [sp, #20]
   23acc:	ldrd	r0, [r0]
   23ad0:	stm	sp, {r0, r1}
   23ad4:	mov	r0, r5
   23ad8:	bl	23ea8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe14>
   23adc:	mov	r1, r0
   23ae0:	mov	r0, r5
   23ae4:	bl	23e80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdec>
   23ae8:	ldr	r0, [sp, #8]
   23aec:	ldrh	r0, [r0, #8]
   23af0:	cmp	r0, #1
   23af4:	beq	23994 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x900>
   23af8:	cmp	r0, #0
   23afc:	ldr	r6, [sp, #28]
   23b00:	bne	239a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x910>
   23b04:	ldrh	r0, [r4, #56]	; 0x38
   23b08:	vmov.i32	d8, #0	; 0x00000000
   23b0c:	sub	r0, r0, #3
   23b10:	mov	r1, #0
   23b14:	cmp	r0, #3
   23b18:	bhi	23b40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xaac>
   23b1c:	add	r2, pc, #0
   23b20:	ldr	pc, [r2, r0, lsl #2]
   23b24:	andeq	r3, r2, r8, asr #22
   23b28:	andeq	r3, r2, r4, lsr fp
   23b2c:	andeq	r3, r2, r4, lsr fp
   23b30:	andeq	r3, r2, r8, asr fp
   23b34:	ldr	r2, [r9]
   23b38:	ldr	r1, [r9, #4]
   23b3c:	b	23b5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac8>
   23b40:	mov	r2, #0
   23b44:	b	23b5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac8>
   23b48:	mov	r2, #0
   23b4c:	vldr	d8, [r9]
   23b50:	mov	r1, #0
   23b54:	b	23b5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac8>
   23b58:	ldrb	r2, [r9]
   23b5c:	mov	r0, r5
   23b60:	mov	r3, r1
   23b64:	bl	240b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1020>
   23b68:	mov	r0, r5
   23b6c:	vorr	d0, d8, d8
   23b70:	bl	240f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1064>
   23b74:	ldr	r7, [sp, #12]
   23b78:	ldrh	r1, [r7]
   23b7c:	mov	r0, r5
   23b80:	bl	23dc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd34>
   23b84:	ldrh	r0, [r7]
   23b88:	mov	r1, #4
   23b8c:	add	r0, r1, r0, lsl #1
   23b90:	uxth	r1, r0
   23b94:	mov	r0, r5
   23b98:	bl	23d8c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcf8>
   23b9c:	mov	r0, r5
   23ba0:	mov	r1, r6
   23ba4:	bl	24144 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10b0>
   23ba8:	mov	r0, r5
   23bac:	ldr	r1, [sp, #16]
   23bb0:	bl	24180 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10ec>
   23bb4:	b	239a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x910>
   23bb8:	sub	sp, fp, #40	; 0x28
   23bbc:	vpop	{d8}
   23bc0:	add	sp, sp, #4
   23bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23bc8:	push	{r4, sl, fp, lr}
   23bcc:	add	fp, sp, #8
   23bd0:	mov	r4, r0
   23bd4:	bl	2fb04 <flatcc_builder_end_offset_vector@@Base>
   23bd8:	mov	r1, r0
   23bdc:	mov	r0, r4
   23be0:	pop	{r4, sl, fp, lr}
   23be4:	b	244d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x143c>
   23be8:	push	{r4, sl, fp, lr}
   23bec:	add	fp, sp, #8
   23bf0:	cmp	r1, #0
   23bf4:	popeq	{r4, sl, fp, pc}
   23bf8:	mov	r4, r1
   23bfc:	mov	r1, #4
   23c00:	mov	r2, #4
   23c04:	mov	r3, #4
   23c08:	bl	30a90 <flatcc_builder_table_add@@Base>
   23c0c:	cmp	r0, #0
   23c10:	beq	23c20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8c>
   23c14:	mov	r1, r4
   23c18:	pop	{r4, sl, fp, lr}
   23c1c:	b	2439c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1308>
   23c20:	pop	{r4, sl, fp, pc}
   23c24:	push	{r4, sl, fp, lr}
   23c28:	add	fp, sp, #8
   23c2c:	cmp	r1, #0
   23c30:	popeq	{r4, sl, fp, pc}
   23c34:	mov	r4, r1
   23c38:	mov	r1, #2
   23c3c:	mov	r2, #1
   23c40:	mov	r3, #1
   23c44:	bl	30a90 <flatcc_builder_table_add@@Base>
   23c48:	cmp	r0, #0
   23c4c:	beq	23c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc8>
   23c50:	mov	r1, r4
   23c54:	pop	{r4, sl, fp, lr}
   23c58:	b	24408 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   23c5c:	pop	{r4, sl, fp, pc}
   23c60:	push	{r4, sl, fp, lr}
   23c64:	add	fp, sp, #8
   23c68:	cmp	r1, #0
   23c6c:	popeq	{r4, sl, fp, pc}
   23c70:	mov	r4, r1
   23c74:	mov	r1, #3
   23c78:	mov	r2, #4
   23c7c:	mov	r3, #4
   23c80:	bl	30a90 <flatcc_builder_table_add@@Base>
   23c84:	cmp	r0, #0
   23c88:	beq	23c98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc04>
   23c8c:	mov	r1, r4
   23c90:	pop	{r4, sl, fp, lr}
   23c94:	b	2439c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1308>
   23c98:	pop	{r4, sl, fp, pc}
   23c9c:	push	{r4, sl, fp, lr}
   23ca0:	add	fp, sp, #8
   23ca4:	mov	r4, r0
   23ca8:	movw	r1, #49980	; 0xc33c
   23cac:	movt	r1, #4
   23cb0:	mov	r2, #2
   23cb4:	bl	30320 <flatcc_builder_check_required@@Base>
   23cb8:	cmp	r0, #0
   23cbc:	beq	23ccc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc38>
   23cc0:	mov	r0, r4
   23cc4:	pop	{r4, sl, fp, lr}
   23cc8:	b	303a0 <flatcc_builder_end_table@@Base>
   23ccc:	movw	r0, #48416	; 0xbd20
   23cd0:	movt	r0, #4
   23cd4:	movw	r1, #48041	; 0xbba9
   23cd8:	movt	r1, #4
   23cdc:	movw	r3, #48563	; 0xbdb3
   23ce0:	movt	r3, #4
   23ce4:	mov	r2, #31
   23ce8:	bl	14984 <__assert_fail@plt>
   23cec:	push	{r4, sl, fp, lr}
   23cf0:	add	fp, sp, #8
   23cf4:	mov	r4, r0
   23cf8:	bl	2fab0 <flatcc_builder_create_offset_vector@@Base>
   23cfc:	mov	r1, r0
   23d00:	mov	r0, r4
   23d04:	pop	{r4, sl, fp, lr}
   23d08:	b	244f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1464>
   23d0c:	push	{r4, sl, fp, lr}
   23d10:	add	fp, sp, #8
   23d14:	cmp	r1, #0
   23d18:	popeq	{r4, sl, fp, pc}
   23d1c:	mov	r4, r1
   23d20:	mov	r1, #0
   23d24:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   23d28:	cmp	r0, #0
   23d2c:	strne	r4, [r0]
   23d30:	pop	{r4, sl, fp, pc}
   23d34:	b	241bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1128>
   23d38:	b	2fb68 <flatcc_builder_start_string@@Base>
   23d3c:	b	2f720 <flatcc_builder_append_string@@Base>
   23d40:	push	{r4, sl, fp, lr}
   23d44:	add	fp, sp, #8
   23d48:	mov	r4, r0
   23d4c:	bl	311e8 <flatcc_builder_end_string@@Base>
   23d50:	mov	r1, r0
   23d54:	mov	r0, r4
   23d58:	pop	{r4, sl, fp, lr}
   23d5c:	b	241c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1130>
   23d60:	push	{r4, sl, fp, lr}
   23d64:	add	fp, sp, #8
   23d68:	mov	r4, r0
   23d6c:	mov	r1, #1
   23d70:	mov	r2, #0
   23d74:	mvn	r3, #0
   23d78:	bl	241ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   23d7c:	mov	r1, r0
   23d80:	mov	r0, r4
   23d84:	pop	{r4, sl, fp, lr}
   23d88:	b	23e80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdec>
   23d8c:	push	{r4, sl, fp, lr}
   23d90:	add	fp, sp, #8
   23d94:	cmp	r1, #0
   23d98:	popeq	{r4, sl, fp, pc}
   23d9c:	mov	r4, r1
   23da0:	mov	r1, #3
   23da4:	mov	r2, #2
   23da8:	mov	r3, #2
   23dac:	bl	30a90 <flatcc_builder_table_add@@Base>
   23db0:	cmp	r0, #0
   23db4:	beq	23dc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd30>
   23db8:	mov	r1, r4
   23dbc:	pop	{r4, sl, fp, lr}
   23dc0:	b	243e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1350>
   23dc4:	pop	{r4, sl, fp, pc}
   23dc8:	push	{r4, sl, fp, lr}
   23dcc:	add	fp, sp, #8
   23dd0:	cmp	r1, #0
   23dd4:	popeq	{r4, sl, fp, pc}
   23dd8:	mov	r4, r1
   23ddc:	mov	r1, #2
   23de0:	mov	r2, #2
   23de4:	mov	r3, #2
   23de8:	bl	30a90 <flatcc_builder_table_add@@Base>
   23dec:	cmp	r0, #0
   23df0:	beq	23e00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd6c>
   23df4:	mov	r1, r4
   23df8:	pop	{r4, sl, fp, lr}
   23dfc:	b	243e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1350>
   23e00:	pop	{r4, sl, fp, pc}
   23e04:	push	{r4, sl, fp, lr}
   23e08:	add	fp, sp, #8
   23e0c:	cmp	r1, #0
   23e10:	popeq	{r4, sl, fp, pc}
   23e14:	mov	r4, r1
   23e18:	mov	r1, #6
   23e1c:	mov	r2, #1
   23e20:	mov	r3, #1
   23e24:	bl	30a90 <flatcc_builder_table_add@@Base>
   23e28:	cmp	r0, #0
   23e2c:	beq	23e3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xda8>
   23e30:	mov	r1, r4
   23e34:	pop	{r4, sl, fp, lr}
   23e38:	b	24408 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   23e3c:	pop	{r4, sl, fp, pc}
   23e40:	push	{r4, sl, fp, lr}
   23e44:	add	fp, sp, #8
   23e48:	mov	r4, r0
   23e4c:	bl	24438 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13a4>
   23e50:	mov	r1, r0
   23e54:	mov	r0, r4
   23e58:	pop	{r4, sl, fp, lr}
   23e5c:	b	2442c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1398>
   23e60:	push	{r4, sl, fp, lr}
   23e64:	add	fp, sp, #8
   23e68:	mov	r4, r0
   23e6c:	bl	310d4 <flatcc_builder_create_string@@Base>
   23e70:	mov	r1, r0
   23e74:	mov	r0, r4
   23e78:	pop	{r4, sl, fp, lr}
   23e7c:	b	241c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1130>
   23e80:	push	{r4, sl, fp, lr}
   23e84:	add	fp, sp, #8
   23e88:	cmp	r1, #0
   23e8c:	popeq	{r4, sl, fp, pc}
   23e90:	mov	r4, r1
   23e94:	mov	r1, #1
   23e98:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   23e9c:	cmp	r0, #0
   23ea0:	strne	r4, [r0]
   23ea4:	pop	{r4, sl, fp, pc}
   23ea8:	push	{r4, r5, r6, r7, fp, lr}
   23eac:	add	fp, sp, #16
   23eb0:	mov	ip, r2
   23eb4:	ldrh	r1, [fp, #8]
   23eb8:	sub	r6, r1, #2
   23ebc:	mov	r2, #0
   23ec0:	mvn	r3, #0
   23ec4:	cmp	r6, #13
   23ec8:	bhi	23fc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf34>
   23ecc:	mov	r4, #13
   23ed0:	add	r7, pc, #12
   23ed4:	mov	lr, #0
   23ed8:	mov	r5, #13
   23edc:	mov	r1, #0
   23ee0:	ldr	pc, [r7, r6, lsl #2]
   23ee4:	muleq	r2, r8, r0
   23ee8:	muleq	r2, ip, r0
   23eec:	muleq	r2, ip, r0
   23ef0:	muleq	r2, ip, r0
   23ef4:	muleq	r2, ip, r0
   23ef8:	andeq	r3, r2, r0, ror pc
   23efc:	andeq	r3, r2, r4, ror pc
   23f00:	andeq	r4, r2, r8, lsl #1
   23f04:	muleq	r2, ip, r0
   23f08:	muleq	r2, ip, r0
   23f0c:	muleq	r2, ip, r0
   23f10:	muleq	r2, ip, r0
   23f14:	andeq	r3, r2, ip, lsl pc
   23f18:	andeq	r3, r2, r0, asr pc
   23f1c:	ldrh	r6, [ip, #8]
   23f20:	ldr	r1, [ip, #124]	; 0x7c
   23f24:	mov	r5, #15
   23f28:	cmp	r6, #2
   23f2c:	bcc	23fd8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf44>
   23f30:	cmp	r6, #4
   23f34:	beq	23fd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf40>
   23f38:	cmp	r6, #3
   23f3c:	bne	23fc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf34>
   23f40:	ldr	ip, [ip, #40]	; 0x28
   23f44:	mov	r3, r1
   23f48:	mov	lr, #0
   23f4c:	b	23f74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xee0>
   23f50:	ldrh	r1, [ip, #8]
   23f54:	ldr	r3, [ip, #124]	; 0x7c
   23f58:	mov	r4, #15
   23f5c:	cmp	r1, #2
   23f60:	bcc	24088 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xff4>
   23f64:	cmp	r1, #3
   23f68:	bne	23fc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf34>
   23f6c:	ldr	ip, [ip, #40]	; 0x28
   23f70:	mov	lr, #14
   23f74:	sub	r1, ip, #1
   23f78:	cmp	r1, #10
   23f7c:	mov	r4, #0
   23f80:	bhi	24074 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe0>
   23f84:	add	r7, pc, #0
   23f88:	ldr	pc, [r7, r1, lsl #2]
   23f8c:			; <UNDEFINED> instruction: 0x00023fb8
   23f90:	andeq	r3, r2, r0, ror #31
   23f94:	strdeq	r3, [r2], -r0
   23f98:	andeq	r4, r2, r0
   23f9c:	andeq	r4, r2, r0, lsl r0
   23fa0:	andeq	r4, r2, r0, lsr #32
   23fa4:	andeq	r4, r2, r0, lsr r0
   23fa8:	andeq	r4, r2, r0, asr #32
   23fac:	andeq	r4, r2, r0, asr r0
   23fb0:	andeq	r4, r2, r0, rrx
   23fb4:	andeq	r4, r2, r0, ror r0
   23fb8:	mov	r4, #10
   23fbc:	cmp	lr, #0
   23fc0:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   23fc4:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   23fc8:	mov	r1, #0
   23fcc:	pop	{r4, r5, r6, r7, fp, lr}
   23fd0:	b	241ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   23fd4:	mov	r5, #16
   23fd8:	mov	r3, r1
   23fdc:	b	24098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1004>
   23fe0:	mov	r4, #8
   23fe4:	cmp	lr, #0
   23fe8:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   23fec:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   23ff0:	mov	r4, #6
   23ff4:	cmp	lr, #0
   23ff8:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   23ffc:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24000:	mov	r4, #4
   24004:	cmp	lr, #0
   24008:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   2400c:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24010:	mov	r4, #2
   24014:	cmp	lr, #0
   24018:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   2401c:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24020:	mov	r4, #9
   24024:	cmp	lr, #0
   24028:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   2402c:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24030:	mov	r4, #7
   24034:	cmp	lr, #0
   24038:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   2403c:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24040:	mov	r4, #5
   24044:	cmp	lr, #0
   24048:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   2404c:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24050:	mov	r4, #3
   24054:	cmp	lr, #0
   24058:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   2405c:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24060:	mov	r4, #12
   24064:	cmp	lr, #0
   24068:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   2406c:	b	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24070:	mov	r4, #11
   24074:	cmp	lr, #0
   24078:	beq	240a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   2407c:	cmp	lr, #14
   24080:	mov	r5, lr
   24084:	bne	24098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1004>
   24088:	mov	r1, #14
   2408c:	mov	r2, r4
   24090:	pop	{r4, r5, r6, r7, fp, lr}
   24094:	b	241ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   24098:	mov	r1, r5
   2409c:	pop	{r4, r5, r6, r7, fp, lr}
   240a0:	b	241ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   240a4:	mov	r1, r4
   240a8:	mov	r2, #0
   240ac:	pop	{r4, r5, r6, r7, fp, lr}
   240b0:	b	241ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   240b4:	push	{r4, r5, fp, lr}
   240b8:	add	fp, sp, #8
   240bc:	orrs	r1, r2, r3
   240c0:	popeq	{r4, r5, fp, pc}
   240c4:	mov	r4, r3
   240c8:	mov	r5, r2
   240cc:	mov	r1, #4
   240d0:	mov	r2, #8
   240d4:	mov	r3, #8
   240d8:	bl	30a90 <flatcc_builder_table_add@@Base>
   240dc:	cmp	r0, #0
   240e0:	beq	240f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1060>
   240e4:	mov	r2, r5
   240e8:	mov	r3, r4
   240ec:	pop	{r4, r5, fp, lr}
   240f0:	b	24488 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13f4>
   240f4:	pop	{r4, r5, fp, pc}
   240f8:	push	{fp, lr}
   240fc:	mov	fp, sp
   24100:	vpush	{d8}
   24104:	vcmp.f64	d0, #0.0
   24108:	vmrs	APSR_nzcv, fpscr
   2410c:	bne	24118 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1084>
   24110:	vpop	{d8}
   24114:	pop	{fp, pc}
   24118:	vmov.f64	d8, d0
   2411c:	mov	r1, #5
   24120:	mov	r2, #8
   24124:	mov	r3, #8
   24128:	bl	30a90 <flatcc_builder_table_add@@Base>
   2412c:	cmp	r0, #0
   24130:	beq	24110 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x107c>
   24134:	vmov.f64	d0, d8
   24138:	vpop	{d8}
   2413c:	pop	{fp, lr}
   24140:	b	244b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1420>
   24144:	push	{r4, sl, fp, lr}
   24148:	add	fp, sp, #8
   2414c:	cmp	r1, #0
   24150:	popeq	{r4, sl, fp, pc}
   24154:	mov	r4, r1
   24158:	mov	r1, #8
   2415c:	mov	r2, #1
   24160:	mov	r3, #1
   24164:	bl	30a90 <flatcc_builder_table_add@@Base>
   24168:	cmp	r0, #0
   2416c:	beq	2417c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e8>
   24170:	mov	r1, r4
   24174:	pop	{r4, sl, fp, lr}
   24178:	b	24408 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   2417c:	pop	{r4, sl, fp, pc}
   24180:	push	{r4, sl, fp, lr}
   24184:	add	fp, sp, #8
   24188:	cmp	r1, #0
   2418c:	popeq	{r4, sl, fp, pc}
   24190:	mov	r4, r1
   24194:	mov	r1, #7
   24198:	mov	r2, #1
   2419c:	mov	r3, #1
   241a0:	bl	30a90 <flatcc_builder_table_add@@Base>
   241a4:	cmp	r0, #0
   241a8:	beq	241b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1124>
   241ac:	mov	r1, r4
   241b0:	pop	{r4, sl, fp, lr}
   241b4:	b	24408 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   241b8:	pop	{r4, sl, fp, pc}
   241bc:	mov	r1, #9
   241c0:	b	2fc94 <flatcc_builder_start_table@@Base>
   241c4:	push	{r4, sl, fp, lr}
   241c8:	add	fp, sp, #8
   241cc:	cmp	r1, #0
   241d0:	popeq	{r4, sl, fp, pc}
   241d4:	mov	r4, r1
   241d8:	mov	r1, #0
   241dc:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   241e0:	cmp	r0, #0
   241e4:	strne	r4, [r0]
   241e8:	pop	{r4, sl, fp, pc}
   241ec:	push	{r4, r5, r6, r7, fp, lr}
   241f0:	add	fp, sp, #16
   241f4:	mov	r7, r3
   241f8:	mov	r5, r2
   241fc:	mov	r6, r1
   24200:	mov	r4, r0
   24204:	bl	24260 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11cc>
   24208:	cmp	r0, #0
   2420c:	bne	2424c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11b8>
   24210:	mov	r0, r4
   24214:	mov	r1, r7
   24218:	bl	24268 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11d4>
   2421c:	cmp	r0, #0
   24220:	bne	2424c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11b8>
   24224:	mov	r0, r4
   24228:	mov	r1, r6
   2422c:	bl	242b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1220>
   24230:	cmp	r0, #0
   24234:	bne	2424c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11b8>
   24238:	mov	r0, r4
   2423c:	mov	r1, r5
   24240:	bl	24300 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x126c>
   24244:	cmp	r0, #0
   24248:	beq	24254 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11c0>
   2424c:	mov	r0, #0
   24250:	pop	{r4, r5, r6, r7, fp, pc}
   24254:	mov	r0, r4
   24258:	pop	{r4, r5, r6, r7, fp, lr}
   2425c:	b	2434c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b8>
   24260:	mov	r1, #3
   24264:	b	2fc94 <flatcc_builder_start_table@@Base>
   24268:	push	{r4, r5, fp, lr}
   2426c:	add	fp, sp, #8
   24270:	mov	r4, #0
   24274:	cmn	r1, #1
   24278:	beq	242a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x120c>
   2427c:	mov	r5, r1
   24280:	mov	r1, #2
   24284:	mov	r2, #4
   24288:	mov	r3, #4
   2428c:	bl	30a90 <flatcc_builder_table_add@@Base>
   24290:	cmp	r0, #0
   24294:	beq	242a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1214>
   24298:	mov	r1, r5
   2429c:	bl	2439c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1308>
   242a0:	mov	r0, r4
   242a4:	pop	{r4, r5, fp, pc}
   242a8:	mvn	r4, #0
   242ac:	mov	r0, r4
   242b0:	pop	{r4, r5, fp, pc}
   242b4:	push	{r4, r5, fp, lr}
   242b8:	add	fp, sp, #8
   242bc:	cmp	r1, #0
   242c0:	beq	242f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1260>
   242c4:	mov	r5, r1
   242c8:	mov	r4, #0
   242cc:	mov	r1, #0
   242d0:	mov	r2, #1
   242d4:	mov	r3, #1
   242d8:	bl	30a90 <flatcc_builder_table_add@@Base>
   242dc:	cmp	r0, #0
   242e0:	mvneq	r4, #0
   242e4:	movne	r1, r5
   242e8:	blne	243c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132c>
   242ec:	mov	r0, r4
   242f0:	pop	{r4, r5, fp, pc}
   242f4:	mov	r4, #0
   242f8:	mov	r0, r4
   242fc:	pop	{r4, r5, fp, pc}
   24300:	push	{r4, r5, fp, lr}
   24304:	add	fp, sp, #8
   24308:	mov	r4, #0
   2430c:	cmp	r1, #0
   24310:	beq	24338 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12a4>
   24314:	mov	r5, r1
   24318:	mov	r1, #1
   2431c:	mov	r2, #1
   24320:	mov	r3, #1
   24324:	bl	30a90 <flatcc_builder_table_add@@Base>
   24328:	cmp	r0, #0
   2432c:	beq	24340 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12ac>
   24330:	mov	r1, r5
   24334:	bl	243c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132c>
   24338:	mov	r0, r4
   2433c:	pop	{r4, r5, fp, pc}
   24340:	mvn	r4, #0
   24344:	mov	r0, r4
   24348:	pop	{r4, r5, fp, pc}
   2434c:	push	{r4, sl, fp, lr}
   24350:	add	fp, sp, #8
   24354:	mov	r4, r0
   24358:	movw	r1, #49972	; 0xc334
   2435c:	movt	r1, #4
   24360:	mov	r2, #0
   24364:	bl	30320 <flatcc_builder_check_required@@Base>
   24368:	cmp	r0, #0
   2436c:	beq	2437c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12e8>
   24370:	mov	r0, r4
   24374:	pop	{r4, sl, fp, lr}
   24378:	b	303a0 <flatcc_builder_end_table@@Base>
   2437c:	movw	r0, #47900	; 0xbb1c
   24380:	movt	r0, #4
   24384:	movw	r1, #48041	; 0xbba9
   24388:	movt	r1, #4
   2438c:	movw	r3, #48136	; 0xbc08
   24390:	movt	r3, #4
   24394:	mov	r2, #23
   24398:	bl	14984 <__assert_fail@plt>
   2439c:	push	{r4, r5, fp, lr}
   243a0:	add	fp, sp, #8
   243a4:	mov	r4, r1
   243a8:	mov	r5, r0
   243ac:	mov	r0, r1
   243b0:	bl	243bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1328>
   243b4:	str	r4, [r5]
   243b8:	pop	{r4, r5, fp, pc}
   243bc:	bx	lr
   243c0:	push	{r4, r5, fp, lr}
   243c4:	add	fp, sp, #8
   243c8:	mov	r4, r1
   243cc:	mov	r5, r0
   243d0:	mov	r0, r1
   243d4:	bl	243e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x134c>
   243d8:	strb	r4, [r5]
   243dc:	pop	{r4, r5, fp, pc}
   243e0:	bx	lr
   243e4:	push	{r4, r5, fp, lr}
   243e8:	add	fp, sp, #8
   243ec:	mov	r4, r1
   243f0:	mov	r5, r0
   243f4:	mov	r0, r1
   243f8:	bl	24404 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1370>
   243fc:	strh	r4, [r5]
   24400:	pop	{r4, r5, fp, pc}
   24404:	bx	lr
   24408:	push	{r4, r5, fp, lr}
   2440c:	add	fp, sp, #8
   24410:	mov	r4, r1
   24414:	mov	r5, r0
   24418:	mov	r0, r1
   2441c:	bl	24428 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1394>
   24420:	strb	r4, [r5]
   24424:	pop	{r4, r5, fp, pc}
   24428:	bx	lr
   2442c:	cmp	r1, #0
   24430:	bxeq	lr
   24434:	b	2f5d0 <flatcc_builder_offset_vector_push@@Base>
   24438:	push	{r4, sl, fp, lr}
   2443c:	add	fp, sp, #8
   24440:	mov	r4, r0
   24444:	movw	r1, #49974	; 0xc336
   24448:	movt	r1, #4
   2444c:	mov	r2, #2
   24450:	bl	30320 <flatcc_builder_check_required@@Base>
   24454:	cmp	r0, #0
   24458:	beq	24468 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13d4>
   2445c:	mov	r0, r4
   24460:	pop	{r4, sl, fp, lr}
   24464:	b	303a0 <flatcc_builder_end_table@@Base>
   24468:	movw	r0, #48203	; 0xbc4b
   2446c:	movt	r0, #4
   24470:	movw	r1, #48041	; 0xbba9
   24474:	movt	r1, #4
   24478:	movw	r3, #48347	; 0xbcdb
   2447c:	movt	r3, #4
   24480:	mov	r2, #29
   24484:	bl	14984 <__assert_fail@plt>
   24488:	push	{r4, r6, r7, sl, fp, lr}
   2448c:	add	fp, sp, #16
   24490:	mov	r1, r3
   24494:	mov	r6, r2
   24498:	mov	r4, r0
   2449c:	mov	r0, r2
   244a0:	bl	244b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x141c>
   244a4:	mov	r7, r1
   244a8:	strd	r6, [r4]
   244ac:	pop	{r4, r6, r7, sl, fp, pc}
   244b0:	bx	lr
   244b4:	push	{r4, sl, fp, lr}
   244b8:	add	fp, sp, #8
   244bc:	mov	r4, r0
   244c0:	bl	244cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1438>
   244c4:	vstr	d0, [r4]
   244c8:	pop	{r4, sl, fp, pc}
   244cc:	bx	lr
   244d0:	push	{r4, sl, fp, lr}
   244d4:	add	fp, sp, #8
   244d8:	cmp	r1, #0
   244dc:	popeq	{r4, sl, fp, pc}
   244e0:	mov	r4, r1
   244e4:	mov	r1, #1
   244e8:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   244ec:	cmp	r0, #0
   244f0:	strne	r4, [r0]
   244f4:	pop	{r4, sl, fp, pc}
   244f8:	push	{r4, sl, fp, lr}
   244fc:	add	fp, sp, #8
   24500:	cmp	r1, #0
   24504:	popeq	{r4, sl, fp, pc}
   24508:	mov	r4, r1
   2450c:	mov	r1, #0
   24510:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   24514:	cmp	r0, #0
   24518:	strne	r4, [r0]
   2451c:	pop	{r4, sl, fp, pc}
   24520:	b	2fa50 <flatcc_builder_start_offset_vector@@Base>
   24524:	b	24678 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15e4>
   24528:	push	{r4, sl, fp, lr}
   2452c:	add	fp, sp, #8
   24530:	mov	r4, r0
   24534:	bl	3118c <flatcc_builder_create_string_str@@Base>
   24538:	mov	r1, r0
   2453c:	mov	r0, r4
   24540:	pop	{r4, sl, fp, lr}
   24544:	b	24680 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15ec>
   24548:	b	2fa50 <flatcc_builder_start_offset_vector@@Base>
   2454c:	push	{r4, r5, r6, sl, fp, lr}
   24550:	add	fp, sp, #16
   24554:	mov	r6, r2
   24558:	mov	r5, r1
   2455c:	mov	r4, r0
   24560:	bl	246a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1614>
   24564:	ldr	r0, [r5, #4]
   24568:	ldm	r0, {r1, r2}
   2456c:	mov	r0, r4
   24570:	bl	246ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1618>
   24574:	cmp	r6, #0
   24578:	beq	2459c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1508>
   2457c:	ldrh	r0, [r5, #24]
   24580:	cmp	r0, #14
   24584:	bne	2459c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1508>
   24588:	ldr	r0, [r5, #16]
   2458c:	ldr	r0, [r0, #124]	; 0x7c
   24590:	ldr	r1, [r6, r0, lsl #2]
   24594:	mov	r0, r4
   24598:	bl	246cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1638>
   2459c:	ldrd	r2, [r5, #48]	; 0x30
   245a0:	mov	r0, r4
   245a4:	bl	246f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1660>
   245a8:	mov	r0, r4
   245ac:	pop	{r4, r5, r6, sl, fp, lr}
   245b0:	b	24738 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16a4>
   245b4:	push	{r4, sl, fp, lr}
   245b8:	add	fp, sp, #8
   245bc:	mov	r4, r0
   245c0:	bl	2fb04 <flatcc_builder_end_offset_vector@@Base>
   245c4:	mov	r1, r0
   245c8:	mov	r0, r4
   245cc:	pop	{r4, sl, fp, lr}
   245d0:	b	247e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1750>
   245d4:	push	{r4, sl, fp, lr}
   245d8:	add	fp, sp, #8
   245dc:	cmp	r1, #0
   245e0:	popeq	{r4, sl, fp, pc}
   245e4:	mov	r4, r1
   245e8:	mov	r1, #2
   245ec:	mov	r2, #1
   245f0:	mov	r3, #1
   245f4:	bl	30a90 <flatcc_builder_table_add@@Base>
   245f8:	cmp	r0, #0
   245fc:	beq	2460c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1578>
   24600:	mov	r1, r4
   24604:	pop	{r4, sl, fp, lr}
   24608:	b	24408 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   2460c:	pop	{r4, sl, fp, pc}
   24610:	push	{r4, sl, fp, lr}
   24614:	add	fp, sp, #8
   24618:	cmp	r1, #0
   2461c:	popeq	{r4, sl, fp, pc}
   24620:	mov	r4, r1
   24624:	mov	r1, #3
   24628:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   2462c:	cmp	r0, #0
   24630:	strne	r4, [r0]
   24634:	pop	{r4, sl, fp, pc}
   24638:	push	{r4, sl, fp, lr}
   2463c:	add	fp, sp, #8
   24640:	mov	r4, r0
   24644:	bl	24818 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1784>
   24648:	mov	r1, r0
   2464c:	mov	r0, r4
   24650:	pop	{r4, sl, fp, lr}
   24654:	b	2480c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1778>
   24658:	push	{r4, sl, fp, lr}
   2465c:	add	fp, sp, #8
   24660:	mov	r4, r0
   24664:	bl	2fb04 <flatcc_builder_end_offset_vector@@Base>
   24668:	mov	r1, r0
   2466c:	mov	r0, r4
   24670:	pop	{r4, sl, fp, lr}
   24674:	b	24868 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17d4>
   24678:	mov	r1, #4
   2467c:	b	2fc94 <flatcc_builder_start_table@@Base>
   24680:	push	{r4, sl, fp, lr}
   24684:	add	fp, sp, #8
   24688:	cmp	r1, #0
   2468c:	popeq	{r4, sl, fp, pc}
   24690:	mov	r4, r1
   24694:	mov	r1, #0
   24698:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   2469c:	cmp	r0, #0
   246a0:	strne	r4, [r0]
   246a4:	pop	{r4, sl, fp, pc}
   246a8:	b	24758 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c4>
   246ac:	push	{r4, sl, fp, lr}
   246b0:	add	fp, sp, #8
   246b4:	mov	r4, r0
   246b8:	bl	310d4 <flatcc_builder_create_string@@Base>
   246bc:	mov	r1, r0
   246c0:	mov	r0, r4
   246c4:	pop	{r4, sl, fp, lr}
   246c8:	b	24760 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16cc>
   246cc:	push	{r4, sl, fp, lr}
   246d0:	add	fp, sp, #8
   246d4:	cmp	r1, #0
   246d8:	popeq	{r4, sl, fp, pc}
   246dc:	mov	r4, r1
   246e0:	mov	r1, #2
   246e4:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   246e8:	cmp	r0, #0
   246ec:	strne	r4, [r0]
   246f0:	pop	{r4, sl, fp, pc}
   246f4:	push	{r4, r5, fp, lr}
   246f8:	add	fp, sp, #8
   246fc:	orrs	r1, r2, r3
   24700:	popeq	{r4, r5, fp, pc}
   24704:	mov	r4, r3
   24708:	mov	r5, r2
   2470c:	mov	r1, #1
   24710:	mov	r2, #8
   24714:	mov	r3, #8
   24718:	bl	30a90 <flatcc_builder_table_add@@Base>
   2471c:	cmp	r0, #0
   24720:	beq	24734 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16a0>
   24724:	mov	r2, r5
   24728:	mov	r3, r4
   2472c:	pop	{r4, r5, fp, lr}
   24730:	b	24488 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13f4>
   24734:	pop	{r4, r5, fp, pc}
   24738:	push	{r4, sl, fp, lr}
   2473c:	add	fp, sp, #8
   24740:	mov	r4, r0
   24744:	bl	24794 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1700>
   24748:	mov	r1, r0
   2474c:	mov	r0, r4
   24750:	pop	{r4, sl, fp, lr}
   24754:	b	24788 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16f4>
   24758:	mov	r1, #3
   2475c:	b	2fc94 <flatcc_builder_start_table@@Base>
   24760:	push	{r4, sl, fp, lr}
   24764:	add	fp, sp, #8
   24768:	cmp	r1, #0
   2476c:	popeq	{r4, sl, fp, pc}
   24770:	mov	r4, r1
   24774:	mov	r1, #0
   24778:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   2477c:	cmp	r0, #0
   24780:	strne	r4, [r0]
   24784:	pop	{r4, sl, fp, pc}
   24788:	cmp	r1, #0
   2478c:	bxeq	lr
   24790:	b	2f5d0 <flatcc_builder_offset_vector_push@@Base>
   24794:	push	{r4, sl, fp, lr}
   24798:	add	fp, sp, #8
   2479c:	mov	r4, r0
   247a0:	movw	r1, #49986	; 0xc342
   247a4:	movt	r1, #4
   247a8:	mov	r2, #1
   247ac:	bl	30320 <flatcc_builder_check_required@@Base>
   247b0:	cmp	r0, #0
   247b4:	beq	247c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1730>
   247b8:	mov	r0, r4
   247bc:	pop	{r4, sl, fp, lr}
   247c0:	b	303a0 <flatcc_builder_end_table@@Base>
   247c4:	movw	r0, #48634	; 0xbdfa
   247c8:	movt	r0, #4
   247cc:	movw	r1, #48041	; 0xbba9
   247d0:	movt	r1, #4
   247d4:	movw	r3, #48784	; 0xbe90
   247d8:	movt	r3, #4
   247dc:	mov	r2, #25
   247e0:	bl	14984 <__assert_fail@plt>
   247e4:	push	{r4, sl, fp, lr}
   247e8:	add	fp, sp, #8
   247ec:	cmp	r1, #0
   247f0:	popeq	{r4, sl, fp, pc}
   247f4:	mov	r4, r1
   247f8:	mov	r1, #1
   247fc:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   24800:	cmp	r0, #0
   24804:	strne	r4, [r0]
   24808:	pop	{r4, sl, fp, pc}
   2480c:	cmp	r1, #0
   24810:	bxeq	lr
   24814:	b	2f5d0 <flatcc_builder_offset_vector_push@@Base>
   24818:	push	{r4, sl, fp, lr}
   2481c:	add	fp, sp, #8
   24820:	mov	r4, r0
   24824:	movw	r1, #49990	; 0xc346
   24828:	movt	r1, #4
   2482c:	mov	r2, #3
   24830:	bl	30320 <flatcc_builder_check_required@@Base>
   24834:	cmp	r0, #0
   24838:	beq	24848 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17b4>
   2483c:	mov	r0, r4
   24840:	pop	{r4, sl, fp, lr}
   24844:	b	303a0 <flatcc_builder_end_table@@Base>
   24848:	movw	r0, #48857	; 0xbed9
   2484c:	movt	r0, #4
   24850:	movw	r1, #48041	; 0xbba9
   24854:	movt	r1, #4
   24858:	movw	r3, #48998	; 0xbf66
   2485c:	movt	r3, #4
   24860:	mov	r2, #27
   24864:	bl	14984 <__assert_fail@plt>
   24868:	push	{r4, sl, fp, lr}
   2486c:	add	fp, sp, #8
   24870:	cmp	r1, #0
   24874:	popeq	{r4, sl, fp, pc}
   24878:	mov	r4, r1
   2487c:	mov	r1, #1
   24880:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   24884:	cmp	r0, #0
   24888:	strne	r4, [r0]
   2488c:	pop	{r4, sl, fp, pc}
   24890:	push	{r4, sl, fp, lr}
   24894:	add	fp, sp, #8
   24898:	cmp	r1, #0
   2489c:	popeq	{r4, sl, fp, pc}
   248a0:	mov	r4, r1
   248a4:	mov	r1, #4
   248a8:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   248ac:	cmp	r0, #0
   248b0:	strne	r4, [r0]
   248b4:	pop	{r4, sl, fp, pc}
   248b8:	b	2f15c <flatcc_builder_end_buffer@@Base>
   248bc:	push	{r4, sl, fp, lr}
   248c0:	add	fp, sp, #8
   248c4:	mov	r4, r0
   248c8:	movw	r1, #49998	; 0xc34e
   248cc:	movt	r1, #4
   248d0:	mov	r2, #2
   248d4:	bl	30320 <flatcc_builder_check_required@@Base>
   248d8:	cmp	r0, #0
   248dc:	beq	248ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1858>
   248e0:	mov	r0, r4
   248e4:	pop	{r4, sl, fp, lr}
   248e8:	b	303a0 <flatcc_builder_end_table@@Base>
   248ec:	movw	r0, #49065	; 0xbfa9
   248f0:	movt	r0, #4
   248f4:	movw	r1, #48041	; 0xbba9
   248f8:	movt	r1, #4
   248fc:	movw	r3, #49212	; 0xc03c
   24900:	movt	r3, #4
   24904:	mov	r2, #33	; 0x21
   24908:	bl	14984 <__assert_fail@plt>
   2490c:	push	{r4, r5, fp, lr}
   24910:	add	fp, sp, #8
   24914:	mov	r5, #0
   24918:	cmp	r0, #0
   2491c:	beq	2493c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18a8>
   24920:	mov	r4, r0
   24924:	bl	24aac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a18>
   24928:	cmp	r0, #0
   2492c:	beq	2493c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18a8>
   24930:	mov	r0, r4
   24934:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24938:	add	r5, r4, r0
   2493c:	mov	r0, r5
   24940:	pop	{r4, r5, fp, pc}
   24944:	push	{r4, r5, fp, lr}
   24948:	add	fp, sp, #8
   2494c:	cmp	r0, #0
   24950:	beq	249a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1910>
   24954:	mov	r4, r0
   24958:	bl	24aec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   2495c:	sub	r5, r4, r0
   24960:	mov	r0, r5
   24964:	bl	24af4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   24968:	cmp	r0, #6
   2496c:	bcc	24998 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1904>
   24970:	add	r0, r5, #4
   24974:	bl	24af4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   24978:	cmp	r0, #0
   2497c:	beq	24998 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1904>
   24980:	add	r4, r4, r0
   24984:	mov	r0, r4
   24988:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   2498c:	add	r0, r4, r0
   24990:	add	r0, r0, #4
   24994:	pop	{r4, r5, fp, pc}
   24998:	movw	r0, #49492	; 0xc154
   2499c:	movt	r0, #4
   249a0:	b	249ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1918>
   249a4:	movw	r0, #49283	; 0xc083
   249a8:	movt	r0, #4
   249ac:	movw	r1, #49321	; 0xc0a9
   249b0:	movt	r1, #4
   249b4:	movw	r3, #49415	; 0xc107
   249b8:	movt	r3, #4
   249bc:	mov	r2, #237	; 0xed
   249c0:	bl	14984 <__assert_fail@plt>
   249c4:	cmp	r0, #0
   249c8:	moveq	r0, #0
   249cc:	bxeq	lr
   249d0:	sub	r0, r0, #4
   249d4:	b	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   249d8:	push	{r4, r5, fp, lr}
   249dc:	add	fp, sp, #8
   249e0:	mov	r4, r1
   249e4:	mov	r5, r0
   249e8:	bl	24b04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a70>
   249ec:	cmp	r0, r4
   249f0:	bls	24a08 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1974>
   249f4:	add	r4, r5, r4, lsl #2
   249f8:	mov	r0, r4
   249fc:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24a00:	add	r0, r4, r0
   24a04:	pop	{r4, r5, fp, pc}
   24a08:	movw	r0, #49525	; 0xc175
   24a0c:	movt	r0, #4
   24a10:	movw	r1, #49321	; 0xc0a9
   24a14:	movt	r1, #4
   24a18:	movw	r3, #49580	; 0xc1ac
   24a1c:	movt	r3, #4
   24a20:	mov	r2, #215	; 0xd7
   24a24:	bl	14984 <__assert_fail@plt>
   24a28:	push	{r4, r5, fp, lr}
   24a2c:	add	fp, sp, #8
   24a30:	cmp	r0, #0
   24a34:	beq	24a88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19f4>
   24a38:	mov	r4, r0
   24a3c:	bl	24aec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   24a40:	sub	r5, r4, r0
   24a44:	mov	r0, r5
   24a48:	bl	24af4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   24a4c:	cmp	r0, #8
   24a50:	bcc	24a7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19e8>
   24a54:	add	r0, r5, #6
   24a58:	bl	24af4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   24a5c:	cmp	r0, #0
   24a60:	beq	24a7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19e8>
   24a64:	add	r4, r4, r0
   24a68:	mov	r0, r4
   24a6c:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24a70:	add	r0, r4, r0
   24a74:	add	r0, r0, #4
   24a78:	pop	{r4, r5, fp, pc}
   24a7c:	movw	r0, #49492	; 0xc154
   24a80:	movt	r0, #4
   24a84:	b	24a90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19fc>
   24a88:	movw	r0, #49283	; 0xc083
   24a8c:	movt	r0, #4
   24a90:	movw	r1, #49321	; 0xc0a9
   24a94:	movt	r1, #4
   24a98:	movw	r3, #49664	; 0xc200
   24a9c:	movt	r3, #4
   24aa0:	mov	r2, #224	; 0xe0
   24aa4:	bl	14984 <__assert_fail@plt>
   24aa8:	b	24b18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a84>
   24aac:	push	{fp, lr}
   24ab0:	mov	fp, sp
   24ab4:	add	r0, r0, #4
   24ab8:	bl	24adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a48>
   24abc:	movw	r1, #47550	; 0xb9be
   24ac0:	movt	r1, #44221	; 0xacbd
   24ac4:	add	r0, r0, r1
   24ac8:	clz	r0, r0
   24acc:	lsr	r0, r0, #5
   24ad0:	pop	{fp, pc}
   24ad4:	ldr	r0, [r0]
   24ad8:	b	24ae8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a54>
   24adc:	ldr	r0, [r0]
   24ae0:	b	24ae4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a50>
   24ae4:	bx	lr
   24ae8:	bx	lr
   24aec:	ldr	r0, [r0]
   24af0:	b	24afc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a68>
   24af4:	ldrh	r0, [r0]
   24af8:	b	24b00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a6c>
   24afc:	bx	lr
   24b00:	bx	lr
   24b04:	cmp	r0, #0
   24b08:	moveq	r0, #0
   24b0c:	bxeq	lr
   24b10:	sub	r0, r0, #4
   24b14:	b	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b1c:	add	fp, sp, #28
   24b20:	sub	sp, sp, #4
   24b24:	mov	r8, r0
   24b28:	bl	24bd8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b44>
   24b2c:	cmp	r0, #0
   24b30:	beq	24bd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b3c>
   24b34:	mov	r5, r0
   24b38:	lsr	r7, r0, #1
   24b3c:	sub	r6, r0, #1
   24b40:	mov	r0, r8
   24b44:	mov	r1, r7
   24b48:	mov	r2, r6
   24b4c:	bl	24bec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b58>
   24b50:	sub	r7, r7, #1
   24b54:	cmn	r7, #1
   24b58:	bne	24b40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1aac>
   24b5c:	cmp	r6, #0
   24b60:	beq	24bd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b3c>
   24b64:	mov	r0, #4
   24b68:	sub	r7, r0, r5, lsl #2
   24b6c:	mvn	r0, #3
   24b70:	add	r4, r0, r5, lsl #2
   24b74:	sub	r5, r5, #2
   24b78:	add	r6, r8, r4
   24b7c:	mov	r0, r6
   24b80:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24b84:	add	r9, r0, r4
   24b88:	mov	r0, r8
   24b8c:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24b90:	mov	sl, r0
   24b94:	mov	r0, r8
   24b98:	mov	r1, r9
   24b9c:	bl	24d04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   24ba0:	add	r1, sl, r7
   24ba4:	mov	r0, r6
   24ba8:	bl	24d04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   24bac:	mov	r0, r8
   24bb0:	mov	r1, #0
   24bb4:	mov	r2, r5
   24bb8:	bl	24bec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b58>
   24bbc:	add	r7, r7, #4
   24bc0:	sub	r4, r4, #4
   24bc4:	sub	r5, r5, #1
   24bc8:	cmn	r5, #1
   24bcc:	bne	24b78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ae4>
   24bd0:	sub	sp, fp, #28
   24bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24bd8:	cmp	r0, #0
   24bdc:	moveq	r0, #0
   24be0:	bxeq	lr
   24be4:	sub	r0, r0, #4
   24be8:	b	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24bf0:	add	fp, sp, #28
   24bf4:	sub	sp, sp, #4
   24bf8:	cmp	r2, r1, lsl #1
   24bfc:	bcc	24cfc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c68>
   24c00:	mov	r4, r2
   24c04:	mov	sl, r1
   24c08:	mov	r8, r0
   24c0c:	lsl	r7, r1, #1
   24c10:	str	r2, [sp]
   24c14:	cmp	r7, r4
   24c18:	bcs	24c64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bd0>
   24c1c:	mov	r0, r8
   24c20:	mov	r1, r7
   24c24:	bl	24da4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   24c28:	bl	24d24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   24c2c:	mov	r9, r0
   24c30:	orr	r4, r7, #1
   24c34:	mov	r0, r8
   24c38:	mov	r1, r4
   24c3c:	bl	24da4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   24c40:	bl	24d24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   24c44:	mov	r6, r0
   24c48:	bl	24e48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1db4>
   24c4c:	mov	r2, r0
   24c50:	mov	r0, r9
   24c54:	mov	r1, r6
   24c58:	bl	24df4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   24c5c:	cmp	r0, #0
   24c60:	movmi	r7, r4
   24c64:	mov	r6, r7
   24c68:	mov	r0, r8
   24c6c:	mov	r1, sl
   24c70:	bl	24da4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   24c74:	bl	24d24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   24c78:	mov	r7, r0
   24c7c:	mov	r0, r8
   24c80:	mov	r1, r6
   24c84:	bl	24da4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   24c88:	bl	24d24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   24c8c:	mov	r5, r0
   24c90:	bl	24e48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1db4>
   24c94:	mov	r2, r0
   24c98:	mov	r0, r7
   24c9c:	mov	r1, r5
   24ca0:	bl	24df4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   24ca4:	cmn	r0, #1
   24ca8:	bgt	24cfc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c68>
   24cac:	sub	r7, sl, r6
   24cb0:	add	r5, r8, r6, lsl #2
   24cb4:	mov	r0, r5
   24cb8:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24cbc:	sub	r9, r0, r7, lsl #2
   24cc0:	add	r4, r8, sl, lsl #2
   24cc4:	mov	r0, r4
   24cc8:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24ccc:	mov	sl, r0
   24cd0:	mov	r0, r4
   24cd4:	mov	r1, r9
   24cd8:	ldr	r4, [sp]
   24cdc:	bl	24d04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   24ce0:	add	r1, sl, r7, lsl #2
   24ce4:	mov	r0, r5
   24ce8:	bl	24d04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   24cec:	lsl	r7, r6, #1
   24cf0:	cmp	r4, r6, lsl #1
   24cf4:	mov	sl, r6
   24cf8:	bcs	24c14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b80>
   24cfc:	sub	sp, fp, #28
   24d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d04:	push	{r4, r5, fp, lr}
   24d08:	add	fp, sp, #8
   24d0c:	mov	r4, r1
   24d10:	mov	r5, r0
   24d14:	mov	r0, r1
   24d18:	bl	24e5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1dc8>
   24d1c:	str	r4, [r5]
   24d20:	pop	{r4, r5, fp, pc}
   24d24:	push	{r4, r5, fp, lr}
   24d28:	add	fp, sp, #8
   24d2c:	cmp	r0, #0
   24d30:	beq	24d84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cf0>
   24d34:	mov	r4, r0
   24d38:	bl	24aec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   24d3c:	sub	r5, r4, r0
   24d40:	mov	r0, r5
   24d44:	bl	24af4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   24d48:	cmp	r0, #6
   24d4c:	bcc	24d78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ce4>
   24d50:	add	r0, r5, #4
   24d54:	bl	24af4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   24d58:	cmp	r0, #0
   24d5c:	beq	24d78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ce4>
   24d60:	add	r4, r4, r0
   24d64:	mov	r0, r4
   24d68:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24d6c:	add	r0, r4, r0
   24d70:	add	r0, r0, #4
   24d74:	pop	{r4, r5, fp, pc}
   24d78:	movw	r0, #49492	; 0xc154
   24d7c:	movt	r0, #4
   24d80:	b	24d8c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cf8>
   24d84:	movw	r0, #49283	; 0xc083
   24d88:	movt	r0, #4
   24d8c:	movw	r1, #49321	; 0xc0a9
   24d90:	movt	r1, #4
   24d94:	movw	r3, #49739	; 0xc24b
   24d98:	movt	r3, #4
   24d9c:	mov	r2, #195	; 0xc3
   24da0:	bl	14984 <__assert_fail@plt>
   24da4:	push	{r4, r5, fp, lr}
   24da8:	add	fp, sp, #8
   24dac:	mov	r4, r1
   24db0:	mov	r5, r0
   24db4:	bl	24b04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a70>
   24db8:	cmp	r0, r4
   24dbc:	bls	24dd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d40>
   24dc0:	add	r4, r5, r4, lsl #2
   24dc4:	mov	r0, r4
   24dc8:	bl	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24dcc:	add	r0, r4, r0
   24dd0:	pop	{r4, r5, fp, pc}
   24dd4:	movw	r0, #49525	; 0xc175
   24dd8:	movt	r0, #4
   24ddc:	movw	r1, #49321	; 0xc0a9
   24de0:	movt	r1, #4
   24de4:	movw	r3, #49808	; 0xc290
   24de8:	movt	r3, #4
   24dec:	mov	r2, #192	; 0xc0
   24df0:	bl	14984 <__assert_fail@plt>
   24df4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24df8:	add	fp, sp, #24
   24dfc:	mov	r4, r2
   24e00:	mov	r8, r1
   24e04:	mov	r6, r0
   24e08:	bl	24e48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1db4>
   24e0c:	mov	r7, r0
   24e10:	mov	r5, #0
   24e14:	cmp	r0, r4
   24e18:	movwhi	r5, #1
   24e1c:	mov	r2, r4
   24e20:	movcc	r2, r0
   24e24:	mov	r0, r6
   24e28:	mov	r1, r8
   24e2c:	bl	1496c <strncmp@plt>
   24e30:	cmp	r0, #0
   24e34:	mvneq	r0, #0
   24e38:	movne	r5, r0
   24e3c:	cmp	r7, r4
   24e40:	movcs	r0, r5
   24e44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24e48:	cmp	r0, #0
   24e4c:	moveq	r0, #0
   24e50:	bxeq	lr
   24e54:	sub	r0, r0, #4
   24e58:	b	24ad4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   24e5c:	bx	lr
   24e60:	cmp	r0, #0
   24e64:	bxne	lr
   24e68:	push	{fp, lr}
   24e6c:	mov	fp, sp
   24e70:	movw	r0, #4272	; 0x10b0
   24e74:	movt	r0, #6
   24e78:	ldr	r3, [r0]
   24e7c:	movw	r0, #20439	; 0x4fd7
   24e80:	movt	r0, #3
   24e84:	mov	r1, #34	; 0x22
   24e88:	mov	r2, #1
   24e8c:	bl	14858 <fwrite@plt>
   24e90:	mov	r0, #1
   24e94:	bl	148a0 <exit@plt>

00024e98 <str_set_clear@@Base>:
   24e98:	b	24e9c <str_set_clear@@Base+0x4>
   24e9c:	push	{r4, sl, fp, lr}
   24ea0:	add	fp, sp, #8
   24ea4:	mov	r4, r0
   24ea8:	ldr	r0, [r0]
   24eac:	cmp	r0, #0
   24eb0:	beq	24eb8 <str_set_clear@@Base+0x20>
   24eb4:	bl	14804 <free@plt>
   24eb8:	vmov.i32	q8, #0	; 0x00000000
   24ebc:	vst1.32	{d16-d17}, [r4]
   24ec0:	pop	{r4, sl, fp, pc}

00024ec4 <str_set_destroy@@Base>:
   24ec4:	push	{r4, sl, fp, lr}
   24ec8:	add	fp, sp, #8
   24ecc:	mov	r4, r0
   24ed0:	cmp	r1, #0
   24ed4:	movne	r0, r4
   24ed8:	blne	24ee8 <str_set_destroy@@Base+0x24>
   24edc:	mov	r0, r4
   24ee0:	pop	{r4, sl, fp, lr}
   24ee4:	b	24e9c <str_set_clear@@Base+0x4>
   24ee8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24eec:	add	fp, sp, #24
   24ef0:	mov	r6, r0
   24ef4:	ldr	r0, [r0, #12]
   24ef8:	cmp	r0, #0
   24efc:	beq	24f40 <str_set_destroy@@Base+0x7c>
   24f00:	mov	r8, r2
   24f04:	mov	r5, r1
   24f08:	ldr	r7, [r6]
   24f0c:	mov	r4, #0
   24f10:	b	24f24 <str_set_destroy@@Base+0x60>
   24f14:	ldr	r0, [r6, #12]
   24f18:	add	r4, r4, #1
   24f1c:	cmp	r4, r0
   24f20:	bcs	24f40 <str_set_destroy@@Base+0x7c>
   24f24:	ldr	r1, [r7, r4, lsl #2]
   24f28:	orr	r0, r1, #2
   24f2c:	cmp	r0, #2
   24f30:	beq	24f14 <str_set_destroy@@Base+0x50>
   24f34:	mov	r0, r8
   24f38:	blx	r5
   24f3c:	b	24f14 <str_set_destroy@@Base+0x50>
   24f40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024f44 <str_set_init@@Base>:
   24f44:	b	24f48 <str_set_init@@Base+0x4>
   24f48:	push	{r4, r5, fp, lr}
   24f4c:	add	fp, sp, #8
   24f50:	mov	r4, r0
   24f54:	mov	r2, #4
   24f58:	mov	r0, #179	; 0xb3
   24f5c:	mov	r5, r2
   24f60:	mul	r3, r2, r0
   24f64:	lsl	r2, r2, #1
   24f68:	cmp	r1, r3, lsr #8
   24f6c:	bhi	24f5c <str_set_init@@Base+0x18>
   24f70:	mov	r0, r5
   24f74:	mov	r1, #4
   24f78:	bl	147d4 <calloc@plt>
   24f7c:	str	r0, [r4]
   24f80:	cmp	r0, #0
   24f84:	mvneq	r0, #0
   24f88:	movne	r0, #0
   24f8c:	strne	r0, [r4, #4]
   24f90:	strne	r0, [r4, #8]
   24f94:	strne	r5, [r4, #12]
   24f98:	pop	{r4, r5, fp, pc}

00024f9c <str_set_resize@@Base>:
   24f9c:	b	24fa0 <str_set_resize@@Base+0x4>
   24fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fa4:	add	fp, sp, #28
   24fa8:	sub	sp, sp, #28
   24fac:	mov	r4, r0
   24fb0:	ldr	r5, [r0]
   24fb4:	ldr	r0, [r0, #8]
   24fb8:	cmp	r0, r1
   24fbc:	movhi	r1, r0
   24fc0:	add	r8, sp, #8
   24fc4:	mov	r0, r8
   24fc8:	bl	24f48 <str_set_init@@Base+0x4>
   24fcc:	mov	r1, r0
   24fd0:	mvn	r0, #0
   24fd4:	cmp	r1, #0
   24fd8:	beq	24fe4 <str_set_resize@@Base+0x48>
   24fdc:	sub	sp, fp, #28
   24fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24fe4:	ldr	r0, [r4, #12]
   24fe8:	cmp	r0, #0
   24fec:	beq	25048 <str_set_resize@@Base+0xac>
   24ff0:	mov	r6, #0
   24ff4:	mov	sl, #3
   24ff8:	add	r9, sp, #8
   24ffc:	b	25010 <str_set_resize@@Base+0x74>
   25000:	ldr	r0, [r4, #12]
   25004:	add	r6, r6, #1
   25008:	cmp	r6, r0
   2500c:	bcs	25048 <str_set_resize@@Base+0xac>
   25010:	ldr	r7, [r5, r6, lsl #2]
   25014:	orr	r0, r7, #2
   25018:	cmp	r0, #2
   2501c:	beq	25000 <str_set_resize@@Base+0x64>
   25020:	mov	r0, r7
   25024:	bl	2528c <str_set_insert_item@@Base+0x48>
   25028:	bl	25290 <str_set_insert_item@@Base+0x4c>
   2502c:	mov	r2, r0
   25030:	str	sl, [sp]
   25034:	mov	r0, r9
   25038:	mov	r1, r7
   2503c:	mov	r3, r7
   25040:	bl	25068 <str_set_insert@@Base+0x4>
   25044:	b	25000 <str_set_resize@@Base+0x64>
   25048:	mov	r0, r4
   2504c:	bl	24e9c <str_set_clear@@Base+0x4>
   25050:	vld1.64	{d16-d17}, [r8]
   25054:	vst1.32	{d16-d17}, [r4]
   25058:	mov	r0, #0
   2505c:	sub	sp, fp, #28
   25060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025064 <str_set_insert@@Base>:
   25064:	b	25068 <str_set_insert@@Base+0x4>
   25068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2506c:	add	fp, sp, #28
   25070:	sub	sp, sp, #12
   25074:	str	r2, [sp, #8]
   25078:	cmp	r3, #2
   2507c:	beq	251bc <str_set_insert@@Base+0x158>
   25080:	mov	r9, r3
   25084:	cmp	r3, #1
   25088:	beq	251dc <str_set_insert@@Base+0x178>
   2508c:	cmp	r9, #0
   25090:	beq	251fc <str_set_insert@@Base+0x198>
   25094:	mov	r7, r1
   25098:	mov	r5, r0
   2509c:	ldr	r0, [r0, #8]
   250a0:	ldr	r1, [r5, #12]
   250a4:	mov	r2, #179	; 0xb3
   250a8:	mul	r1, r1, r2
   250ac:	cmp	r0, r1, lsr #8
   250b0:	bcc	250c8 <str_set_insert@@Base+0x64>
   250b4:	lsl	r1, r0, #1
   250b8:	mov	r0, r5
   250bc:	bl	24fa0 <str_set_resize@@Base+0x4>
   250c0:	cmp	r0, #0
   250c4:	bne	2521c <str_set_insert@@Base+0x1b8>
   250c8:	ldr	sl, [fp, #8]
   250cc:	ldr	r8, [r5]
   250d0:	ldr	r4, [r5, #12]
   250d4:	mov	r0, r7
   250d8:	ldr	r1, [sp, #8]
   250dc:	bl	2542c <str_set_visit@@Base+0x4>
   250e0:	sub	r6, r4, #1
   250e4:	and	r1, r0, r6
   250e8:	orr	r2, sl, #1
   250ec:	cmp	r2, #3
   250f0:	bne	25120 <str_set_insert@@Base+0xbc>
   250f4:	ldr	r2, [r5, #8]
   250f8:	add	r2, r2, #1
   250fc:	str	r2, [r5, #8]
   25100:	add	r0, r0, #1
   25104:	mov	r5, r8
   25108:	ldr	r1, [r5, r1, lsl #2]!
   2510c:	orr	r1, r1, #2
   25110:	cmp	r1, #2
   25114:	beq	25184 <str_set_insert@@Base+0x120>
   25118:	and	r1, r0, r6
   2511c:	b	25100 <str_set_insert@@Base+0x9c>
   25120:	stm	sp, {r5, r9}
   25124:	add	sl, r0, #1
   25128:	mov	r9, #0
   2512c:	b	25140 <str_set_insert@@Base+0xdc>
   25130:	cmp	r9, #0
   25134:	moveq	r9, r5
   25138:	and	r1, sl, r6
   2513c:	add	sl, sl, #1
   25140:	mov	r5, r8
   25144:	ldr	r4, [r5, r1, lsl #2]!
   25148:	cmp	r4, #2
   2514c:	beq	25130 <str_set_insert@@Base+0xcc>
   25150:	cmp	r4, #0
   25154:	beq	2518c <str_set_insert@@Base+0x128>
   25158:	mov	r0, r7
   2515c:	ldr	r1, [sp, #8]
   25160:	mov	r2, r4
   25164:	bl	25464 <str_set_visit@@Base+0x3c>
   25168:	cmp	r0, #0
   2516c:	beq	25138 <str_set_insert@@Base+0xd4>
   25170:	ldr	r0, [fp, #8]
   25174:	cmp	r0, #0
   25178:	ldr	r9, [sp, #4]
   2517c:	streq	r9, [r5]
   25180:	b	251b0 <str_set_insert@@Base+0x14c>
   25184:	mov	r4, #0
   25188:	b	251ac <str_set_insert@@Base+0x148>
   2518c:	ldr	r1, [sp]
   25190:	ldr	r0, [r1, #8]
   25194:	add	r0, r0, #1
   25198:	str	r0, [r1, #8]
   2519c:	cmp	r9, #0
   251a0:	movne	r5, r9
   251a4:	mov	r4, #0
   251a8:	ldr	r9, [sp, #4]
   251ac:	str	r9, [r5]
   251b0:	mov	r0, r4
   251b4:	sub	sp, fp, #28
   251b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   251bc:	movw	r0, #50193	; 0xc411
   251c0:	movt	r0, #4
   251c4:	movw	r1, #50039	; 0xc377
   251c8:	movt	r1, #4
   251cc:	movw	r3, #50119	; 0xc3c7
   251d0:	movt	r3, #4
   251d4:	mov	r2, #115	; 0x73
   251d8:	bl	14984 <__assert_fail@plt>
   251dc:	movw	r0, #50216	; 0xc428
   251e0:	movt	r0, #4
   251e4:	movw	r1, #50039	; 0xc377
   251e8:	movt	r1, #4
   251ec:	movw	r3, #50119	; 0xc3c7
   251f0:	movt	r3, #4
   251f4:	mov	r2, #116	; 0x74
   251f8:	bl	14984 <__assert_fail@plt>
   251fc:	movw	r0, #50016	; 0xc360
   25200:	movt	r0, #4
   25204:	movw	r1, #50039	; 0xc377
   25208:	movt	r1, #4
   2520c:	movw	r3, #50119	; 0xc3c7
   25210:	movt	r3, #4
   25214:	mov	r2, #114	; 0x72
   25218:	bl	14984 <__assert_fail@plt>
   2521c:	movw	r0, #4272	; 0x10b0
   25220:	movt	r0, #6
   25224:	ldr	r0, [r0]
   25228:	movw	r1, #50237	; 0xc43d
   2522c:	movt	r1, #4
   25230:	movw	r2, #50260	; 0xc454
   25234:	movt	r2, #4
   25238:	bl	148c4 <fprintf@plt>
   2523c:	mov	r0, #1
   25240:	bl	148a0 <exit@plt>

00025244 <str_set_insert_item@@Base>:
   25244:	push	{r4, r5, r6, sl, fp, lr}
   25248:	add	fp, sp, #16
   2524c:	sub	sp, sp, #8
   25250:	mov	r4, r2
   25254:	mov	r5, r1
   25258:	mov	r6, r0
   2525c:	mov	r0, r1
   25260:	bl	2528c <str_set_insert_item@@Base+0x48>
   25264:	mov	r0, r5
   25268:	bl	25290 <str_set_insert_item@@Base+0x4c>
   2526c:	mov	r2, r0
   25270:	str	r4, [sp]
   25274:	mov	r0, r6
   25278:	mov	r1, r5
   2527c:	mov	r3, r5
   25280:	bl	25068 <str_set_insert@@Base+0x4>
   25284:	sub	sp, fp, #16
   25288:	pop	{r4, r5, r6, sl, fp, pc}
   2528c:	bx	lr
   25290:	b	148b8 <strlen@plt>

00025294 <str_set_find@@Base>:
   25294:	b	25298 <str_set_find@@Base+0x4>
   25298:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2529c:	add	fp, sp, #24
   252a0:	ldr	r4, [r0]
   252a4:	cmp	r4, #0
   252a8:	beq	2530c <str_set_find@@Base+0x78>
   252ac:	mov	r8, r2
   252b0:	mov	r9, r1
   252b4:	ldr	r5, [r0, #12]
   252b8:	mov	r0, r1
   252bc:	mov	r1, r2
   252c0:	bl	2542c <str_set_visit@@Base+0x4>
   252c4:	mov	r6, r0
   252c8:	sub	r5, r5, #1
   252cc:	b	252d4 <str_set_find@@Base+0x40>
   252d0:	add	r6, r6, #1
   252d4:	and	r0, r6, r5
   252d8:	ldr	r7, [r4, r0, lsl #2]
   252dc:	cmp	r7, #2
   252e0:	beq	252d0 <str_set_find@@Base+0x3c>
   252e4:	cmp	r7, #0
   252e8:	beq	2530c <str_set_find@@Base+0x78>
   252ec:	mov	r0, r9
   252f0:	mov	r1, r8
   252f4:	mov	r2, r7
   252f8:	bl	25464 <str_set_visit@@Base+0x3c>
   252fc:	cmp	r0, #0
   25300:	beq	252d0 <str_set_find@@Base+0x3c>
   25304:	mov	r0, r7
   25308:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2530c:	mov	r7, #0
   25310:	mov	r0, r7
   25314:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025318 <str_set_find_item@@Base>:
   25318:	push	{r4, r5, fp, lr}
   2531c:	add	fp, sp, #8
   25320:	mov	r4, r1
   25324:	mov	r5, r0
   25328:	mov	r0, r1
   2532c:	bl	2528c <str_set_insert_item@@Base+0x48>
   25330:	mov	r0, r4
   25334:	bl	25290 <str_set_insert_item@@Base+0x4c>
   25338:	mov	r2, r0
   2533c:	mov	r0, r5
   25340:	mov	r1, r4
   25344:	pop	{r4, r5, fp, lr}
   25348:	b	25298 <str_set_find@@Base+0x4>

0002534c <str_set_remove@@Base>:
   2534c:	b	25350 <str_set_remove@@Base+0x4>
   25350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25354:	add	fp, sp, #28
   25358:	sub	sp, sp, #4
   2535c:	ldr	r5, [r0]
   25360:	mov	r7, #0
   25364:	cmp	r5, #0
   25368:	beq	253e8 <str_set_remove@@Base+0x9c>
   2536c:	mov	r9, r2
   25370:	mov	sl, r1
   25374:	str	r0, [sp]
   25378:	ldr	r6, [r0, #12]
   2537c:	mov	r0, r1
   25380:	mov	r1, r2
   25384:	bl	2542c <str_set_visit@@Base+0x4>
   25388:	mov	r4, r0
   2538c:	sub	r6, r6, #1
   25390:	b	25398 <str_set_remove@@Base+0x4c>
   25394:	add	r4, r4, #1
   25398:	and	r8, r4, r6
   2539c:	ldr	r7, [r5, r8, lsl #2]
   253a0:	cmp	r7, #2
   253a4:	beq	25394 <str_set_remove@@Base+0x48>
   253a8:	cmp	r7, #0
   253ac:	beq	253e4 <str_set_remove@@Base+0x98>
   253b0:	mov	r0, sl
   253b4:	mov	r1, r9
   253b8:	mov	r2, r7
   253bc:	bl	25464 <str_set_visit@@Base+0x3c>
   253c0:	cmp	r0, #0
   253c4:	beq	25394 <str_set_remove@@Base+0x48>
   253c8:	mov	r0, #2
   253cc:	str	r0, [r5, r8, lsl #2]
   253d0:	ldr	r1, [sp]
   253d4:	ldr	r0, [r1, #8]
   253d8:	sub	r0, r0, #1
   253dc:	str	r0, [r1, #8]
   253e0:	b	253e8 <str_set_remove@@Base+0x9c>
   253e4:	mov	r7, #0
   253e8:	mov	r0, r7
   253ec:	sub	sp, fp, #28
   253f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000253f4 <str_set_remove_item@@Base>:
   253f4:	push	{r4, r5, fp, lr}
   253f8:	add	fp, sp, #8
   253fc:	mov	r4, r1
   25400:	mov	r5, r0
   25404:	mov	r0, r1
   25408:	bl	2528c <str_set_insert_item@@Base+0x48>
   2540c:	mov	r0, r4
   25410:	bl	25290 <str_set_insert_item@@Base+0x4c>
   25414:	mov	r2, r0
   25418:	mov	r0, r5
   2541c:	mov	r1, r4
   25420:	pop	{r4, r5, fp, lr}
   25424:	b	25350 <str_set_remove@@Base+0x4>

00025428 <str_set_visit@@Base>:
   25428:	b	24ee8 <str_set_destroy@@Base+0x24>
   2542c:	push	{fp, lr}
   25430:	mov	fp, sp
   25434:	sub	sp, sp, #16
   25438:	add	r2, sp, #8
   2543c:	movw	r3, #15186	; 0x3b52
   25440:	movt	r3, #12137	; 0x2f69
   25444:	str	r3, [sp]
   25448:	str	r2, [sp, #4]
   2544c:	mov	r2, r1
   25450:	mov	r3, #0
   25454:	bl	31ee8 <cmetrohash64_1@@Base>
   25458:	ldr	r0, [sp, #8]
   2545c:	mov	sp, fp
   25460:	pop	{fp, pc}
   25464:	push	{fp, lr}
   25468:	mov	fp, sp
   2546c:	mov	r3, r1
   25470:	mov	r1, r2
   25474:	mov	r2, r3
   25478:	bl	1496c <strncmp@plt>
   2547c:	clz	r0, r0
   25480:	lsr	r0, r0, #5
   25484:	pop	{fp, pc}

00025488 <ptr_set_clear@@Base>:
   25488:	b	2548c <ptr_set_clear@@Base+0x4>
   2548c:	push	{r4, sl, fp, lr}
   25490:	add	fp, sp, #8
   25494:	mov	r4, r0
   25498:	ldr	r0, [r0]
   2549c:	cmp	r0, #0
   254a0:	beq	254a8 <ptr_set_clear@@Base+0x20>
   254a4:	bl	14804 <free@plt>
   254a8:	vmov.i32	q8, #0	; 0x00000000
   254ac:	vst1.32	{d16-d17}, [r4]
   254b0:	pop	{r4, sl, fp, pc}

000254b4 <ptr_set_destroy@@Base>:
   254b4:	push	{r4, sl, fp, lr}
   254b8:	add	fp, sp, #8
   254bc:	mov	r4, r0
   254c0:	cmp	r1, #0
   254c4:	movne	r0, r4
   254c8:	blne	254d8 <ptr_set_destroy@@Base+0x24>
   254cc:	mov	r0, r4
   254d0:	pop	{r4, sl, fp, lr}
   254d4:	b	2548c <ptr_set_clear@@Base+0x4>
   254d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   254dc:	add	fp, sp, #24
   254e0:	mov	r6, r0
   254e4:	ldr	r0, [r0, #12]
   254e8:	cmp	r0, #0
   254ec:	beq	25530 <ptr_set_destroy@@Base+0x7c>
   254f0:	mov	r8, r2
   254f4:	mov	r5, r1
   254f8:	ldr	r7, [r6]
   254fc:	mov	r4, #0
   25500:	b	25514 <ptr_set_destroy@@Base+0x60>
   25504:	ldr	r0, [r6, #12]
   25508:	add	r4, r4, #1
   2550c:	cmp	r4, r0
   25510:	bcs	25530 <ptr_set_destroy@@Base+0x7c>
   25514:	ldr	r1, [r7, r4, lsl #2]
   25518:	orr	r0, r1, #2
   2551c:	cmp	r0, #2
   25520:	beq	25504 <ptr_set_destroy@@Base+0x50>
   25524:	mov	r0, r8
   25528:	blx	r5
   2552c:	b	25504 <ptr_set_destroy@@Base+0x50>
   25530:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025534 <ptr_set_init@@Base>:
   25534:	b	25538 <ptr_set_init@@Base+0x4>
   25538:	push	{r4, r5, fp, lr}
   2553c:	add	fp, sp, #8
   25540:	mov	r4, r0
   25544:	mov	r2, #4
   25548:	mov	r0, #179	; 0xb3
   2554c:	mov	r5, r2
   25550:	mul	r3, r2, r0
   25554:	lsl	r2, r2, #1
   25558:	cmp	r1, r3, lsr #8
   2555c:	bhi	2554c <ptr_set_init@@Base+0x18>
   25560:	mov	r0, r5
   25564:	mov	r1, #4
   25568:	bl	147d4 <calloc@plt>
   2556c:	str	r0, [r4]
   25570:	cmp	r0, #0
   25574:	mvneq	r0, #0
   25578:	movne	r0, #0
   2557c:	strne	r0, [r4, #4]
   25580:	strne	r0, [r4, #8]
   25584:	strne	r5, [r4, #12]
   25588:	pop	{r4, r5, fp, pc}

0002558c <ptr_set_resize@@Base>:
   2558c:	b	25590 <ptr_set_resize@@Base+0x4>
   25590:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25594:	add	fp, sp, #24
   25598:	sub	sp, sp, #16
   2559c:	mov	r4, r0
   255a0:	ldr	r5, [r0]
   255a4:	ldr	r0, [r0, #8]
   255a8:	cmp	r0, r1
   255ac:	movhi	r1, r0
   255b0:	mov	r8, sp
   255b4:	mov	r0, r8
   255b8:	bl	25538 <ptr_set_init@@Base+0x4>
   255bc:	mov	r1, r0
   255c0:	mvn	r0, #0
   255c4:	cmp	r1, #0
   255c8:	beq	255d4 <ptr_set_resize@@Base+0x48>
   255cc:	sub	sp, fp, #24
   255d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   255d4:	ldr	r0, [r4, #12]
   255d8:	cmp	r0, #0
   255dc:	beq	2562c <ptr_set_resize@@Base+0xa0>
   255e0:	mov	r6, #0
   255e4:	mov	r9, sp
   255e8:	b	255fc <ptr_set_resize@@Base+0x70>
   255ec:	ldr	r0, [r4, #12]
   255f0:	add	r6, r6, #1
   255f4:	cmp	r6, r0
   255f8:	bcs	2562c <ptr_set_resize@@Base+0xa0>
   255fc:	ldr	r7, [r5, r6, lsl #2]
   25600:	orr	r0, r7, #2
   25604:	cmp	r0, #2
   25608:	beq	255ec <ptr_set_resize@@Base+0x60>
   2560c:	mov	r0, r7
   25610:	bl	2585c <ptr_set_insert_item@@Base+0x34>
   25614:	mov	r0, r9
   25618:	mov	r1, r7
   2561c:	mov	r2, r7
   25620:	mov	r3, #3
   25624:	bl	25654 <ptr_set_insert@@Base+0xc>
   25628:	b	255ec <ptr_set_resize@@Base+0x60>
   2562c:	mov	r0, r4
   25630:	bl	2548c <ptr_set_clear@@Base+0x4>
   25634:	vld1.64	{d16-d17}, [r8]
   25638:	vst1.32	{d16-d17}, [r4]
   2563c:	mov	r0, #0
   25640:	sub	sp, fp, #24
   25644:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025648 <ptr_set_insert@@Base>:
   25648:	mov	r2, r3
   2564c:	ldr	r3, [sp]
   25650:	b	25654 <ptr_set_insert@@Base+0xc>
   25654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25658:	add	fp, sp, #28
   2565c:	sub	sp, sp, #12
   25660:	cmp	r2, #2
   25664:	beq	257a0 <ptr_set_insert@@Base+0x158>
   25668:	mov	r9, r2
   2566c:	cmp	r2, #1
   25670:	beq	257c0 <ptr_set_insert@@Base+0x178>
   25674:	cmp	r9, #0
   25678:	beq	257e0 <ptr_set_insert@@Base+0x198>
   2567c:	mov	r6, r3
   25680:	mov	r7, r1
   25684:	mov	r4, r0
   25688:	ldr	r0, [r0, #8]
   2568c:	ldr	r1, [r4, #12]
   25690:	mov	r2, #179	; 0xb3
   25694:	mul	r1, r1, r2
   25698:	cmp	r0, r1, lsr #8
   2569c:	bcc	256b4 <ptr_set_insert@@Base+0x6c>
   256a0:	lsl	r1, r0, #1
   256a4:	mov	r0, r4
   256a8:	bl	25590 <ptr_set_resize@@Base+0x4>
   256ac:	cmp	r0, #0
   256b0:	bne	25800 <ptr_set_insert@@Base+0x1b8>
   256b4:	ldr	r8, [r4]
   256b8:	ldr	r0, [r4, #12]
   256bc:	sub	r5, r0, #1
   256c0:	mov	r0, r7
   256c4:	bl	259c4 <ptr_set_visit@@Base+0x4>
   256c8:	and	r1, r0, r5
   256cc:	orr	r2, r6, #1
   256d0:	cmp	r2, #3
   256d4:	bne	25704 <ptr_set_insert@@Base+0xbc>
   256d8:	ldr	r2, [r4, #8]
   256dc:	add	r2, r2, #1
   256e0:	str	r2, [r4, #8]
   256e4:	add	r0, r0, #1
   256e8:	mov	r4, r8
   256ec:	ldr	r1, [r4, r1, lsl #2]!
   256f0:	orr	r1, r1, #2
   256f4:	cmp	r1, #2
   256f8:	beq	25768 <ptr_set_insert@@Base+0x120>
   256fc:	and	r1, r0, r5
   25700:	b	256e4 <ptr_set_insert@@Base+0x9c>
   25704:	str	r6, [sp]
   25708:	stmib	sp, {r4, r9}
   2570c:	add	sl, r0, #1
   25710:	mov	r9, #0
   25714:	b	25728 <ptr_set_insert@@Base+0xe0>
   25718:	cmp	r9, #0
   2571c:	moveq	r9, r4
   25720:	and	r1, sl, r5
   25724:	add	sl, sl, #1
   25728:	mov	r4, r8
   2572c:	ldr	r6, [r4, r1, lsl #2]!
   25730:	cmp	r6, #2
   25734:	beq	25718 <ptr_set_insert@@Base+0xd0>
   25738:	cmp	r6, #0
   2573c:	beq	25770 <ptr_set_insert@@Base+0x128>
   25740:	mov	r0, r7
   25744:	mov	r1, r6
   25748:	bl	259e4 <ptr_set_visit@@Base+0x24>
   2574c:	cmp	r0, #0
   25750:	beq	25720 <ptr_set_insert@@Base+0xd8>
   25754:	ldr	r0, [sp]
   25758:	cmp	r0, #0
   2575c:	ldr	r9, [sp, #8]
   25760:	streq	r9, [r4]
   25764:	b	25794 <ptr_set_insert@@Base+0x14c>
   25768:	mov	r6, #0
   2576c:	b	25790 <ptr_set_insert@@Base+0x148>
   25770:	ldr	r1, [sp, #4]
   25774:	ldr	r0, [r1, #8]
   25778:	add	r0, r0, #1
   2577c:	str	r0, [r1, #8]
   25780:	cmp	r9, #0
   25784:	movne	r4, r9
   25788:	mov	r6, #0
   2578c:	ldr	r9, [sp, #8]
   25790:	str	r9, [r4]
   25794:	mov	r0, r6
   25798:	sub	sp, fp, #28
   2579c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257a0:	movw	r0, #50193	; 0xc411
   257a4:	movt	r0, #4
   257a8:	movw	r1, #50039	; 0xc377
   257ac:	movt	r1, #4
   257b0:	movw	r3, #50119	; 0xc3c7
   257b4:	movt	r3, #4
   257b8:	mov	r2, #115	; 0x73
   257bc:	bl	14984 <__assert_fail@plt>
   257c0:	movw	r0, #50216	; 0xc428
   257c4:	movt	r0, #4
   257c8:	movw	r1, #50039	; 0xc377
   257cc:	movt	r1, #4
   257d0:	movw	r3, #50119	; 0xc3c7
   257d4:	movt	r3, #4
   257d8:	mov	r2, #116	; 0x74
   257dc:	bl	14984 <__assert_fail@plt>
   257e0:	movw	r0, #50016	; 0xc360
   257e4:	movt	r0, #4
   257e8:	movw	r1, #50039	; 0xc377
   257ec:	movt	r1, #4
   257f0:	movw	r3, #50119	; 0xc3c7
   257f4:	movt	r3, #4
   257f8:	mov	r2, #114	; 0x72
   257fc:	bl	14984 <__assert_fail@plt>
   25800:	movw	r0, #4272	; 0x10b0
   25804:	movt	r0, #6
   25808:	ldr	r0, [r0]
   2580c:	movw	r1, #50237	; 0xc43d
   25810:	movt	r1, #4
   25814:	movw	r2, #50260	; 0xc454
   25818:	movt	r2, #4
   2581c:	bl	148c4 <fprintf@plt>
   25820:	mov	r0, #1
   25824:	bl	148a0 <exit@plt>

00025828 <ptr_set_insert_item@@Base>:
   25828:	push	{r4, r5, r6, sl, fp, lr}
   2582c:	add	fp, sp, #16
   25830:	mov	r4, r2
   25834:	mov	r5, r1
   25838:	mov	r6, r0
   2583c:	mov	r0, r1
   25840:	bl	2585c <ptr_set_insert_item@@Base+0x34>
   25844:	mov	r0, r6
   25848:	mov	r1, r5
   2584c:	mov	r2, r5
   25850:	mov	r3, r4
   25854:	pop	{r4, r5, r6, sl, fp, lr}
   25858:	b	25654 <ptr_set_insert@@Base+0xc>
   2585c:	bx	lr

00025860 <ptr_set_find@@Base>:
   25860:	b	25864 <ptr_set_find@@Base+0x4>
   25864:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25868:	add	fp, sp, #24
   2586c:	ldr	r7, [r0]
   25870:	cmp	r7, #0
   25874:	beq	258cc <ptr_set_find@@Base+0x6c>
   25878:	mov	r8, r1
   2587c:	ldr	r0, [r0, #12]
   25880:	sub	r4, r0, #1
   25884:	mov	r0, r1
   25888:	bl	259c4 <ptr_set_visit@@Base+0x4>
   2588c:	mov	r5, r0
   25890:	b	25898 <ptr_set_find@@Base+0x38>
   25894:	add	r5, r5, #1
   25898:	and	r0, r5, r4
   2589c:	ldr	r6, [r7, r0, lsl #2]
   258a0:	cmp	r6, #2
   258a4:	beq	25894 <ptr_set_find@@Base+0x34>
   258a8:	cmp	r6, #0
   258ac:	beq	258cc <ptr_set_find@@Base+0x6c>
   258b0:	mov	r0, r8
   258b4:	mov	r1, r6
   258b8:	bl	259e4 <ptr_set_visit@@Base+0x24>
   258bc:	cmp	r0, #0
   258c0:	beq	25894 <ptr_set_find@@Base+0x34>
   258c4:	mov	r0, r6
   258c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   258cc:	mov	r6, #0
   258d0:	mov	r0, r6
   258d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000258d8 <ptr_set_find_item@@Base>:
   258d8:	push	{r4, r5, fp, lr}
   258dc:	add	fp, sp, #8
   258e0:	mov	r4, r1
   258e4:	mov	r5, r0
   258e8:	mov	r0, r1
   258ec:	bl	2585c <ptr_set_insert_item@@Base+0x34>
   258f0:	mov	r0, r5
   258f4:	mov	r1, r4
   258f8:	pop	{r4, r5, fp, lr}
   258fc:	b	25864 <ptr_set_find@@Base+0x4>

00025900 <ptr_set_remove@@Base>:
   25900:	b	25904 <ptr_set_remove@@Base+0x4>
   25904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25908:	add	fp, sp, #28
   2590c:	sub	sp, sp, #4
   25910:	ldr	sl, [r0]
   25914:	mov	r6, #0
   25918:	cmp	sl, #0
   2591c:	beq	2598c <ptr_set_remove@@Base+0x8c>
   25920:	mov	r9, r1
   25924:	mov	r8, r0
   25928:	ldr	r0, [r0, #12]
   2592c:	sub	r5, r0, #1
   25930:	mov	r0, r1
   25934:	bl	259c4 <ptr_set_visit@@Base+0x4>
   25938:	mov	r7, r0
   2593c:	b	25944 <ptr_set_remove@@Base+0x44>
   25940:	add	r7, r7, #1
   25944:	and	r4, r7, r5
   25948:	ldr	r6, [sl, r4, lsl #2]
   2594c:	cmp	r6, #2
   25950:	beq	25940 <ptr_set_remove@@Base+0x40>
   25954:	cmp	r6, #0
   25958:	beq	25988 <ptr_set_remove@@Base+0x88>
   2595c:	mov	r0, r9
   25960:	mov	r1, r6
   25964:	bl	259e4 <ptr_set_visit@@Base+0x24>
   25968:	cmp	r0, #0
   2596c:	beq	25940 <ptr_set_remove@@Base+0x40>
   25970:	mov	r0, #2
   25974:	str	r0, [sl, r4, lsl #2]
   25978:	ldr	r0, [r8, #8]
   2597c:	sub	r0, r0, #1
   25980:	str	r0, [r8, #8]
   25984:	b	2598c <ptr_set_remove@@Base+0x8c>
   25988:	mov	r6, #0
   2598c:	mov	r0, r6
   25990:	sub	sp, fp, #28
   25994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025998 <ptr_set_remove_item@@Base>:
   25998:	push	{r4, r5, fp, lr}
   2599c:	add	fp, sp, #8
   259a0:	mov	r4, r1
   259a4:	mov	r5, r0
   259a8:	mov	r0, r1
   259ac:	bl	2585c <ptr_set_insert_item@@Base+0x34>
   259b0:	mov	r0, r5
   259b4:	mov	r1, r4
   259b8:	pop	{r4, r5, fp, lr}
   259bc:	b	25904 <ptr_set_remove@@Base+0x4>

000259c0 <ptr_set_visit@@Base>:
   259c0:	b	254d8 <ptr_set_destroy@@Base+0x24>
   259c4:	push	{fp, lr}
   259c8:	mov	fp, sp
   259cc:	sub	sp, sp, #8
   259d0:	str	r0, [sp, #4]
   259d4:	add	r0, sp, #4
   259d8:	bl	259f4 <ptr_set_visit@@Base+0x34>
   259dc:	mov	sp, fp
   259e0:	pop	{fp, pc}
   259e4:	sub	r0, r0, r1
   259e8:	clz	r0, r0
   259ec:	lsr	r0, r0, #5
   259f0:	bx	lr
   259f4:	push	{fp, lr}
   259f8:	mov	fp, sp
   259fc:	sub	sp, sp, #16
   25a00:	add	r1, sp, #8
   25a04:	movw	r2, #15186	; 0x3b52
   25a08:	movt	r2, #12137	; 0x2f69
   25a0c:	str	r2, [sp]
   25a10:	str	r1, [sp, #4]
   25a14:	mov	r2, #4
   25a18:	mov	r3, #0
   25a1c:	bl	31ee8 <cmetrohash64_1@@Base>
   25a20:	ldr	r0, [sp, #8]
   25a24:	mov	sp, fp
   25a28:	pop	{fp, pc}

00025a2c <fb_symbol_table_clear@@Base>:
   25a2c:	b	25a30 <fb_symbol_table_clear@@Base+0x4>
   25a30:	push	{r4, sl, fp, lr}
   25a34:	add	fp, sp, #8
   25a38:	mov	r4, r0
   25a3c:	ldr	r0, [r0]
   25a40:	cmp	r0, #0
   25a44:	beq	25a4c <fb_symbol_table_clear@@Base+0x20>
   25a48:	bl	14804 <free@plt>
   25a4c:	vmov.i32	q8, #0	; 0x00000000
   25a50:	vst1.32	{d16-d17}, [r4]
   25a54:	pop	{r4, sl, fp, pc}

00025a58 <fb_symbol_table_destroy@@Base>:
   25a58:	push	{r4, sl, fp, lr}
   25a5c:	add	fp, sp, #8
   25a60:	mov	r4, r0
   25a64:	cmp	r1, #0
   25a68:	movne	r0, r4
   25a6c:	blne	25a7c <fb_symbol_table_destroy@@Base+0x24>
   25a70:	mov	r0, r4
   25a74:	pop	{r4, sl, fp, lr}
   25a78:	b	25a30 <fb_symbol_table_clear@@Base+0x4>
   25a7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25a80:	add	fp, sp, #24
   25a84:	mov	r6, r0
   25a88:	ldr	r0, [r0, #12]
   25a8c:	cmp	r0, #0
   25a90:	beq	25ad4 <fb_symbol_table_destroy@@Base+0x7c>
   25a94:	mov	r8, r2
   25a98:	mov	r5, r1
   25a9c:	ldr	r7, [r6]
   25aa0:	mov	r4, #0
   25aa4:	b	25ab8 <fb_symbol_table_destroy@@Base+0x60>
   25aa8:	ldr	r0, [r6, #12]
   25aac:	add	r4, r4, #1
   25ab0:	cmp	r4, r0
   25ab4:	bcs	25ad4 <fb_symbol_table_destroy@@Base+0x7c>
   25ab8:	ldr	r1, [r7, r4, lsl #2]
   25abc:	orr	r0, r1, #2
   25ac0:	cmp	r0, #2
   25ac4:	beq	25aa8 <fb_symbol_table_destroy@@Base+0x50>
   25ac8:	mov	r0, r8
   25acc:	blx	r5
   25ad0:	b	25aa8 <fb_symbol_table_destroy@@Base+0x50>
   25ad4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025ad8 <fb_symbol_table_init@@Base>:
   25ad8:	b	25adc <fb_symbol_table_init@@Base+0x4>
   25adc:	push	{r4, r5, fp, lr}
   25ae0:	add	fp, sp, #8
   25ae4:	mov	r4, r0
   25ae8:	mov	r2, #4
   25aec:	mov	r0, #179	; 0xb3
   25af0:	mov	r5, r2
   25af4:	mul	r3, r2, r0
   25af8:	lsl	r2, r2, #1
   25afc:	cmp	r1, r3, lsr #8
   25b00:	bhi	25af0 <fb_symbol_table_init@@Base+0x18>
   25b04:	mov	r0, r5
   25b08:	mov	r1, #4
   25b0c:	bl	147d4 <calloc@plt>
   25b10:	str	r0, [r4]
   25b14:	cmp	r0, #0
   25b18:	mvneq	r0, #0
   25b1c:	movne	r0, #0
   25b20:	strne	r0, [r4, #4]
   25b24:	strne	r0, [r4, #8]
   25b28:	strne	r5, [r4, #12]
   25b2c:	pop	{r4, r5, fp, pc}

00025b30 <fb_symbol_table_resize@@Base>:
   25b30:	b	25b34 <fb_symbol_table_resize@@Base+0x4>
   25b34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25b38:	add	fp, sp, #28
   25b3c:	sub	sp, sp, #28
   25b40:	mov	r4, r0
   25b44:	ldr	sl, [r0]
   25b48:	ldr	r0, [r0, #8]
   25b4c:	cmp	r0, r1
   25b50:	movhi	r1, r0
   25b54:	add	r0, sp, #8
   25b58:	bl	25adc <fb_symbol_table_init@@Base+0x4>
   25b5c:	mov	r1, r0
   25b60:	mvn	r0, #0
   25b64:	cmp	r1, #0
   25b68:	beq	25b74 <fb_symbol_table_resize@@Base+0x44>
   25b6c:	sub	sp, fp, #28
   25b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25b74:	ldr	r0, [r4, #12]
   25b78:	cmp	r0, #0
   25b7c:	beq	25be0 <fb_symbol_table_resize@@Base+0xb0>
   25b80:	mov	r6, #0
   25b84:	mov	r8, #3
   25b88:	add	r9, sp, #8
   25b8c:	b	25ba0 <fb_symbol_table_resize@@Base+0x70>
   25b90:	ldr	r0, [r4, #12]
   25b94:	add	r6, r6, #1
   25b98:	cmp	r6, r0
   25b9c:	bcs	25be0 <fb_symbol_table_resize@@Base+0xb0>
   25ba0:	ldr	r7, [sl, r6, lsl #2]
   25ba4:	orr	r0, r7, #2
   25ba8:	cmp	r0, #2
   25bac:	beq	25b90 <fb_symbol_table_resize@@Base+0x60>
   25bb0:	mov	r0, r7
   25bb4:	bl	25e2c <fb_symbol_table_insert_item@@Base+0x4c>
   25bb8:	mov	r5, r0
   25bbc:	mov	r0, r7
   25bc0:	bl	25e38 <fb_symbol_table_insert_item@@Base+0x58>
   25bc4:	mov	r2, r0
   25bc8:	str	r8, [sp]
   25bcc:	mov	r0, r9
   25bd0:	mov	r1, r5
   25bd4:	mov	r3, r7
   25bd8:	bl	25c04 <fb_symbol_table_insert@@Base+0x4>
   25bdc:	b	25b90 <fb_symbol_table_resize@@Base+0x60>
   25be0:	mov	r0, r4
   25be4:	bl	25a30 <fb_symbol_table_clear@@Base+0x4>
   25be8:	add	r0, sp, #8
   25bec:	vld1.64	{d16-d17}, [r0]
   25bf0:	vst1.32	{d16-d17}, [r4]
   25bf4:	mov	r0, #0
   25bf8:	sub	sp, fp, #28
   25bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025c00 <fb_symbol_table_insert@@Base>:
   25c00:	b	25c04 <fb_symbol_table_insert@@Base+0x4>
   25c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c08:	add	fp, sp, #28
   25c0c:	sub	sp, sp, #12
   25c10:	str	r2, [sp, #8]
   25c14:	cmp	r3, #2
   25c18:	beq	25d58 <fb_symbol_table_insert@@Base+0x158>
   25c1c:	mov	r9, r3
   25c20:	cmp	r3, #1
   25c24:	beq	25d78 <fb_symbol_table_insert@@Base+0x178>
   25c28:	cmp	r9, #0
   25c2c:	beq	25d98 <fb_symbol_table_insert@@Base+0x198>
   25c30:	mov	r7, r1
   25c34:	mov	r5, r0
   25c38:	ldr	r0, [r0, #8]
   25c3c:	ldr	r1, [r5, #12]
   25c40:	mov	r2, #179	; 0xb3
   25c44:	mul	r1, r1, r2
   25c48:	cmp	r0, r1, lsr #8
   25c4c:	bcc	25c64 <fb_symbol_table_insert@@Base+0x64>
   25c50:	lsl	r1, r0, #1
   25c54:	mov	r0, r5
   25c58:	bl	25b34 <fb_symbol_table_resize@@Base+0x4>
   25c5c:	cmp	r0, #0
   25c60:	bne	25db8 <fb_symbol_table_insert@@Base+0x1b8>
   25c64:	ldr	sl, [fp, #8]
   25c68:	ldr	r8, [r5]
   25c6c:	ldr	r4, [r5, #12]
   25c70:	mov	r0, r7
   25c74:	ldr	r1, [sp, #8]
   25c78:	bl	25fe4 <fb_symbol_table_visit@@Base+0x4>
   25c7c:	sub	r6, r4, #1
   25c80:	and	r1, r0, r6
   25c84:	orr	r2, sl, #1
   25c88:	cmp	r2, #3
   25c8c:	bne	25cbc <fb_symbol_table_insert@@Base+0xbc>
   25c90:	ldr	r2, [r5, #8]
   25c94:	add	r2, r2, #1
   25c98:	str	r2, [r5, #8]
   25c9c:	add	r0, r0, #1
   25ca0:	mov	r5, r8
   25ca4:	ldr	r1, [r5, r1, lsl #2]!
   25ca8:	orr	r1, r1, #2
   25cac:	cmp	r1, #2
   25cb0:	beq	25d20 <fb_symbol_table_insert@@Base+0x120>
   25cb4:	and	r1, r0, r6
   25cb8:	b	25c9c <fb_symbol_table_insert@@Base+0x9c>
   25cbc:	stm	sp, {r5, r9}
   25cc0:	add	sl, r0, #1
   25cc4:	mov	r9, #0
   25cc8:	b	25cdc <fb_symbol_table_insert@@Base+0xdc>
   25ccc:	cmp	r9, #0
   25cd0:	moveq	r9, r5
   25cd4:	and	r1, sl, r6
   25cd8:	add	sl, sl, #1
   25cdc:	mov	r5, r8
   25ce0:	ldr	r4, [r5, r1, lsl #2]!
   25ce4:	cmp	r4, #2
   25ce8:	beq	25ccc <fb_symbol_table_insert@@Base+0xcc>
   25cec:	cmp	r4, #0
   25cf0:	beq	25d28 <fb_symbol_table_insert@@Base+0x128>
   25cf4:	mov	r0, r7
   25cf8:	ldr	r1, [sp, #8]
   25cfc:	mov	r2, r4
   25d00:	bl	2601c <fb_symbol_table_visit@@Base+0x3c>
   25d04:	cmp	r0, #0
   25d08:	beq	25cd4 <fb_symbol_table_insert@@Base+0xd4>
   25d0c:	ldr	r0, [fp, #8]
   25d10:	cmp	r0, #0
   25d14:	ldr	r9, [sp, #4]
   25d18:	streq	r9, [r5]
   25d1c:	b	25d4c <fb_symbol_table_insert@@Base+0x14c>
   25d20:	mov	r4, #0
   25d24:	b	25d48 <fb_symbol_table_insert@@Base+0x148>
   25d28:	ldr	r1, [sp]
   25d2c:	ldr	r0, [r1, #8]
   25d30:	add	r0, r0, #1
   25d34:	str	r0, [r1, #8]
   25d38:	cmp	r9, #0
   25d3c:	movne	r5, r9
   25d40:	mov	r4, #0
   25d44:	ldr	r9, [sp, #4]
   25d48:	str	r9, [r5]
   25d4c:	mov	r0, r4
   25d50:	sub	sp, fp, #28
   25d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d58:	movw	r0, #50193	; 0xc411
   25d5c:	movt	r0, #4
   25d60:	movw	r1, #50039	; 0xc377
   25d64:	movt	r1, #4
   25d68:	movw	r3, #50119	; 0xc3c7
   25d6c:	movt	r3, #4
   25d70:	mov	r2, #115	; 0x73
   25d74:	bl	14984 <__assert_fail@plt>
   25d78:	movw	r0, #50216	; 0xc428
   25d7c:	movt	r0, #4
   25d80:	movw	r1, #50039	; 0xc377
   25d84:	movt	r1, #4
   25d88:	movw	r3, #50119	; 0xc3c7
   25d8c:	movt	r3, #4
   25d90:	mov	r2, #116	; 0x74
   25d94:	bl	14984 <__assert_fail@plt>
   25d98:	movw	r0, #50016	; 0xc360
   25d9c:	movt	r0, #4
   25da0:	movw	r1, #50039	; 0xc377
   25da4:	movt	r1, #4
   25da8:	movw	r3, #50119	; 0xc3c7
   25dac:	movt	r3, #4
   25db0:	mov	r2, #114	; 0x72
   25db4:	bl	14984 <__assert_fail@plt>
   25db8:	movw	r0, #4272	; 0x10b0
   25dbc:	movt	r0, #6
   25dc0:	ldr	r0, [r0]
   25dc4:	movw	r1, #50237	; 0xc43d
   25dc8:	movt	r1, #4
   25dcc:	movw	r2, #50260	; 0xc454
   25dd0:	movt	r2, #4
   25dd4:	bl	148c4 <fprintf@plt>
   25dd8:	mov	r0, #1
   25ddc:	bl	148a0 <exit@plt>

00025de0 <fb_symbol_table_insert_item@@Base>:
   25de0:	push	{r4, r5, r6, r7, fp, lr}
   25de4:	add	fp, sp, #16
   25de8:	sub	sp, sp, #8
   25dec:	mov	r4, r2
   25df0:	mov	r5, r1
   25df4:	mov	r6, r0
   25df8:	mov	r0, r1
   25dfc:	bl	25e2c <fb_symbol_table_insert_item@@Base+0x4c>
   25e00:	mov	r7, r0
   25e04:	mov	r0, r5
   25e08:	bl	25e38 <fb_symbol_table_insert_item@@Base+0x58>
   25e0c:	mov	r2, r0
   25e10:	str	r4, [sp]
   25e14:	mov	r0, r6
   25e18:	mov	r1, r7
   25e1c:	mov	r3, r5
   25e20:	bl	25c04 <fb_symbol_table_insert@@Base+0x4>
   25e24:	sub	sp, fp, #16
   25e28:	pop	{r4, r5, r6, r7, fp, pc}
   25e2c:	ldr	r0, [r0, #4]
   25e30:	ldr	r0, [r0]
   25e34:	bx	lr
   25e38:	ldr	r0, [r0, #4]
   25e3c:	ldr	r0, [r0, #4]
   25e40:	bx	lr

00025e44 <fb_symbol_table_find@@Base>:
   25e44:	b	25e48 <fb_symbol_table_find@@Base+0x4>
   25e48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25e4c:	add	fp, sp, #24
   25e50:	ldr	r4, [r0]
   25e54:	cmp	r4, #0
   25e58:	beq	25ebc <fb_symbol_table_find@@Base+0x78>
   25e5c:	mov	r8, r2
   25e60:	mov	r9, r1
   25e64:	ldr	r5, [r0, #12]
   25e68:	mov	r0, r1
   25e6c:	mov	r1, r2
   25e70:	bl	25fe4 <fb_symbol_table_visit@@Base+0x4>
   25e74:	mov	r6, r0
   25e78:	sub	r5, r5, #1
   25e7c:	b	25e84 <fb_symbol_table_find@@Base+0x40>
   25e80:	add	r6, r6, #1
   25e84:	and	r0, r6, r5
   25e88:	ldr	r7, [r4, r0, lsl #2]
   25e8c:	cmp	r7, #2
   25e90:	beq	25e80 <fb_symbol_table_find@@Base+0x3c>
   25e94:	cmp	r7, #0
   25e98:	beq	25ebc <fb_symbol_table_find@@Base+0x78>
   25e9c:	mov	r0, r9
   25ea0:	mov	r1, r8
   25ea4:	mov	r2, r7
   25ea8:	bl	2601c <fb_symbol_table_visit@@Base+0x3c>
   25eac:	cmp	r0, #0
   25eb0:	beq	25e80 <fb_symbol_table_find@@Base+0x3c>
   25eb4:	mov	r0, r7
   25eb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25ebc:	mov	r7, #0
   25ec0:	mov	r0, r7
   25ec4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025ec8 <fb_symbol_table_find_item@@Base>:
   25ec8:	push	{r4, r5, r6, sl, fp, lr}
   25ecc:	add	fp, sp, #16
   25ed0:	mov	r4, r1
   25ed4:	mov	r5, r0
   25ed8:	mov	r0, r1
   25edc:	bl	25e2c <fb_symbol_table_insert_item@@Base+0x4c>
   25ee0:	mov	r6, r0
   25ee4:	mov	r0, r4
   25ee8:	bl	25e38 <fb_symbol_table_insert_item@@Base+0x58>
   25eec:	mov	r2, r0
   25ef0:	mov	r0, r5
   25ef4:	mov	r1, r6
   25ef8:	pop	{r4, r5, r6, sl, fp, lr}
   25efc:	b	25e48 <fb_symbol_table_find@@Base+0x4>

00025f00 <fb_symbol_table_remove@@Base>:
   25f00:	b	25f04 <fb_symbol_table_remove@@Base+0x4>
   25f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25f08:	add	fp, sp, #28
   25f0c:	sub	sp, sp, #4
   25f10:	ldr	r5, [r0]
   25f14:	mov	r7, #0
   25f18:	cmp	r5, #0
   25f1c:	beq	25f9c <fb_symbol_table_remove@@Base+0x9c>
   25f20:	mov	r9, r2
   25f24:	mov	sl, r1
   25f28:	str	r0, [sp]
   25f2c:	ldr	r6, [r0, #12]
   25f30:	mov	r0, r1
   25f34:	mov	r1, r2
   25f38:	bl	25fe4 <fb_symbol_table_visit@@Base+0x4>
   25f3c:	mov	r4, r0
   25f40:	sub	r6, r6, #1
   25f44:	b	25f4c <fb_symbol_table_remove@@Base+0x4c>
   25f48:	add	r4, r4, #1
   25f4c:	and	r8, r4, r6
   25f50:	ldr	r7, [r5, r8, lsl #2]
   25f54:	cmp	r7, #2
   25f58:	beq	25f48 <fb_symbol_table_remove@@Base+0x48>
   25f5c:	cmp	r7, #0
   25f60:	beq	25f98 <fb_symbol_table_remove@@Base+0x98>
   25f64:	mov	r0, sl
   25f68:	mov	r1, r9
   25f6c:	mov	r2, r7
   25f70:	bl	2601c <fb_symbol_table_visit@@Base+0x3c>
   25f74:	cmp	r0, #0
   25f78:	beq	25f48 <fb_symbol_table_remove@@Base+0x48>
   25f7c:	mov	r0, #2
   25f80:	str	r0, [r5, r8, lsl #2]
   25f84:	ldr	r1, [sp]
   25f88:	ldr	r0, [r1, #8]
   25f8c:	sub	r0, r0, #1
   25f90:	str	r0, [r1, #8]
   25f94:	b	25f9c <fb_symbol_table_remove@@Base+0x9c>
   25f98:	mov	r7, #0
   25f9c:	mov	r0, r7
   25fa0:	sub	sp, fp, #28
   25fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025fa8 <fb_symbol_table_remove_item@@Base>:
   25fa8:	push	{r4, r5, r6, sl, fp, lr}
   25fac:	add	fp, sp, #16
   25fb0:	mov	r4, r1
   25fb4:	mov	r5, r0
   25fb8:	mov	r0, r1
   25fbc:	bl	25e2c <fb_symbol_table_insert_item@@Base+0x4c>
   25fc0:	mov	r6, r0
   25fc4:	mov	r0, r4
   25fc8:	bl	25e38 <fb_symbol_table_insert_item@@Base+0x58>
   25fcc:	mov	r2, r0
   25fd0:	mov	r0, r5
   25fd4:	mov	r1, r6
   25fd8:	pop	{r4, r5, r6, sl, fp, lr}
   25fdc:	b	25f04 <fb_symbol_table_remove@@Base+0x4>

00025fe0 <fb_symbol_table_visit@@Base>:
   25fe0:	b	25a7c <fb_symbol_table_destroy@@Base+0x24>
   25fe4:	push	{fp, lr}
   25fe8:	mov	fp, sp
   25fec:	sub	sp, sp, #16
   25ff0:	add	r2, sp, #8
   25ff4:	movw	r3, #15186	; 0x3b52
   25ff8:	movt	r3, #12137	; 0x2f69
   25ffc:	str	r3, [sp]
   26000:	str	r2, [sp, #4]
   26004:	mov	r2, r1
   26008:	mov	r3, #0
   2600c:	bl	31ee8 <cmetrohash64_1@@Base>
   26010:	ldr	r0, [sp, #8]
   26014:	mov	sp, fp
   26018:	pop	{fp, pc}
   2601c:	push	{r4, r5, r6, sl, fp, lr}
   26020:	add	fp, sp, #16
   26024:	mov	r6, r2
   26028:	mov	r4, r1
   2602c:	mov	r5, r0
   26030:	mov	r0, r2
   26034:	bl	25e38 <fb_symbol_table_insert_item@@Base+0x58>
   26038:	mov	r1, r0
   2603c:	mov	r0, #0
   26040:	cmp	r1, r4
   26044:	bne	26068 <fb_symbol_table_visit@@Base+0x88>
   26048:	mov	r0, r6
   2604c:	bl	25e2c <fb_symbol_table_insert_item@@Base+0x4c>
   26050:	mov	r1, r0
   26054:	mov	r0, r5
   26058:	mov	r2, r4
   2605c:	bl	148ac <bcmp@plt>
   26060:	clz	r0, r0
   26064:	lsr	r0, r0, #5
   26068:	pop	{r4, r5, r6, sl, fp, pc}

0002606c <fb_scope_table_clear@@Base>:
   2606c:	b	26070 <fb_scope_table_clear@@Base+0x4>
   26070:	push	{r4, sl, fp, lr}
   26074:	add	fp, sp, #8
   26078:	mov	r4, r0
   2607c:	ldr	r0, [r0]
   26080:	cmp	r0, #0
   26084:	beq	2608c <fb_scope_table_clear@@Base+0x20>
   26088:	bl	14804 <free@plt>
   2608c:	vmov.i32	q8, #0	; 0x00000000
   26090:	vst1.32	{d16-d17}, [r4]
   26094:	pop	{r4, sl, fp, pc}

00026098 <fb_scope_table_destroy@@Base>:
   26098:	push	{r4, sl, fp, lr}
   2609c:	add	fp, sp, #8
   260a0:	mov	r4, r0
   260a4:	cmp	r1, #0
   260a8:	movne	r0, r4
   260ac:	blne	260bc <fb_scope_table_destroy@@Base+0x24>
   260b0:	mov	r0, r4
   260b4:	pop	{r4, sl, fp, lr}
   260b8:	b	26070 <fb_scope_table_clear@@Base+0x4>
   260bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   260c0:	add	fp, sp, #24
   260c4:	mov	r6, r0
   260c8:	ldr	r0, [r0, #12]
   260cc:	cmp	r0, #0
   260d0:	beq	26114 <fb_scope_table_destroy@@Base+0x7c>
   260d4:	mov	r8, r2
   260d8:	mov	r5, r1
   260dc:	ldr	r7, [r6]
   260e0:	mov	r4, #0
   260e4:	b	260f8 <fb_scope_table_destroy@@Base+0x60>
   260e8:	ldr	r0, [r6, #12]
   260ec:	add	r4, r4, #1
   260f0:	cmp	r4, r0
   260f4:	bcs	26114 <fb_scope_table_destroy@@Base+0x7c>
   260f8:	ldr	r1, [r7, r4, lsl #2]
   260fc:	orr	r0, r1, #2
   26100:	cmp	r0, #2
   26104:	beq	260e8 <fb_scope_table_destroy@@Base+0x50>
   26108:	mov	r0, r8
   2610c:	blx	r5
   26110:	b	260e8 <fb_scope_table_destroy@@Base+0x50>
   26114:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026118 <fb_scope_table_init@@Base>:
   26118:	b	2611c <fb_scope_table_init@@Base+0x4>
   2611c:	push	{r4, r5, fp, lr}
   26120:	add	fp, sp, #8
   26124:	mov	r4, r0
   26128:	mov	r2, #4
   2612c:	mov	r0, #179	; 0xb3
   26130:	mov	r5, r2
   26134:	mul	r3, r2, r0
   26138:	lsl	r2, r2, #1
   2613c:	cmp	r1, r3, lsr #8
   26140:	bhi	26130 <fb_scope_table_init@@Base+0x18>
   26144:	mov	r0, r5
   26148:	mov	r1, #4
   2614c:	bl	147d4 <calloc@plt>
   26150:	str	r0, [r4]
   26154:	cmp	r0, #0
   26158:	mvneq	r0, #0
   2615c:	movne	r0, #0
   26160:	strne	r0, [r4, #4]
   26164:	strne	r0, [r4, #8]
   26168:	strne	r5, [r4, #12]
   2616c:	pop	{r4, r5, fp, pc}

00026170 <fb_scope_table_resize@@Base>:
   26170:	b	26174 <fb_scope_table_resize@@Base+0x4>
   26174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26178:	add	fp, sp, #28
   2617c:	sub	sp, sp, #28
   26180:	mov	r4, r0
   26184:	ldr	r5, [r0]
   26188:	ldr	r0, [r0, #8]
   2618c:	cmp	r0, r1
   26190:	movhi	r1, r0
   26194:	add	r8, sp, #8
   26198:	mov	r0, r8
   2619c:	bl	2611c <fb_scope_table_init@@Base+0x4>
   261a0:	mov	r1, r0
   261a4:	mvn	r0, #0
   261a8:	cmp	r1, #0
   261ac:	beq	261b8 <fb_scope_table_resize@@Base+0x48>
   261b0:	sub	sp, fp, #28
   261b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   261b8:	ldr	r0, [r4, #12]
   261bc:	cmp	r0, #0
   261c0:	beq	26218 <fb_scope_table_resize@@Base+0xa8>
   261c4:	mov	r6, #0
   261c8:	mov	sl, #3
   261cc:	add	r9, sp, #8
   261d0:	b	261e4 <fb_scope_table_resize@@Base+0x74>
   261d4:	ldr	r0, [r4, #12]
   261d8:	add	r6, r6, #1
   261dc:	cmp	r6, r0
   261e0:	bcs	26218 <fb_scope_table_resize@@Base+0xa8>
   261e4:	ldr	r7, [r5, r6, lsl #2]
   261e8:	orr	r0, r7, #2
   261ec:	cmp	r0, #2
   261f0:	beq	261d4 <fb_scope_table_resize@@Base+0x64>
   261f4:	mov	r0, r7
   261f8:	bl	26454 <fb_scope_table_insert_item@@Base+0x40>
   261fc:	mov	r1, r0
   26200:	str	sl, [sp]
   26204:	mov	r0, r9
   26208:	mov	r2, #0
   2620c:	mov	r3, r7
   26210:	bl	26238 <fb_scope_table_insert@@Base+0x4>
   26214:	b	261d4 <fb_scope_table_resize@@Base+0x64>
   26218:	mov	r0, r4
   2621c:	bl	26070 <fb_scope_table_clear@@Base+0x4>
   26220:	vld1.64	{d16-d17}, [r8]
   26224:	vst1.32	{d16-d17}, [r4]
   26228:	mov	r0, #0
   2622c:	sub	sp, fp, #28
   26230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026234 <fb_scope_table_insert@@Base>:
   26234:	b	26238 <fb_scope_table_insert@@Base+0x4>
   26238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2623c:	add	fp, sp, #28
   26240:	sub	sp, sp, #12
   26244:	str	r2, [sp, #8]
   26248:	cmp	r3, #2
   2624c:	beq	2638c <fb_scope_table_insert@@Base+0x158>
   26250:	mov	r9, r3
   26254:	cmp	r3, #1
   26258:	beq	263ac <fb_scope_table_insert@@Base+0x178>
   2625c:	cmp	r9, #0
   26260:	beq	263cc <fb_scope_table_insert@@Base+0x198>
   26264:	mov	r7, r1
   26268:	mov	r5, r0
   2626c:	ldr	r0, [r0, #8]
   26270:	ldr	r1, [r5, #12]
   26274:	mov	r2, #179	; 0xb3
   26278:	mul	r1, r1, r2
   2627c:	cmp	r0, r1, lsr #8
   26280:	bcc	26298 <fb_scope_table_insert@@Base+0x64>
   26284:	lsl	r1, r0, #1
   26288:	mov	r0, r5
   2628c:	bl	26174 <fb_scope_table_resize@@Base+0x4>
   26290:	cmp	r0, #0
   26294:	bne	263ec <fb_scope_table_insert@@Base+0x1b8>
   26298:	ldr	sl, [fp, #8]
   2629c:	ldr	r8, [r5]
   262a0:	ldr	r4, [r5, #12]
   262a4:	mov	r0, r7
   262a8:	ldr	r1, [sp, #8]
   262ac:	bl	265dc <fb_scope_table_visit@@Base+0x4>
   262b0:	sub	r6, r4, #1
   262b4:	and	r1, r0, r6
   262b8:	orr	r2, sl, #1
   262bc:	cmp	r2, #3
   262c0:	bne	262f0 <fb_scope_table_insert@@Base+0xbc>
   262c4:	ldr	r2, [r5, #8]
   262c8:	add	r2, r2, #1
   262cc:	str	r2, [r5, #8]
   262d0:	add	r0, r0, #1
   262d4:	mov	r5, r8
   262d8:	ldr	r1, [r5, r1, lsl #2]!
   262dc:	orr	r1, r1, #2
   262e0:	cmp	r1, #2
   262e4:	beq	26354 <fb_scope_table_insert@@Base+0x120>
   262e8:	and	r1, r0, r6
   262ec:	b	262d0 <fb_scope_table_insert@@Base+0x9c>
   262f0:	stm	sp, {r5, r9}
   262f4:	add	sl, r0, #1
   262f8:	mov	r9, #0
   262fc:	b	26310 <fb_scope_table_insert@@Base+0xdc>
   26300:	cmp	r9, #0
   26304:	moveq	r9, r5
   26308:	and	r1, sl, r6
   2630c:	add	sl, sl, #1
   26310:	mov	r5, r8
   26314:	ldr	r4, [r5, r1, lsl #2]!
   26318:	cmp	r4, #2
   2631c:	beq	26300 <fb_scope_table_insert@@Base+0xcc>
   26320:	cmp	r4, #0
   26324:	beq	2635c <fb_scope_table_insert@@Base+0x128>
   26328:	mov	r0, r7
   2632c:	ldr	r1, [sp, #8]
   26330:	mov	r2, r4
   26334:	bl	26680 <fb_scope_table_visit@@Base+0xa8>
   26338:	cmp	r0, #0
   2633c:	beq	26308 <fb_scope_table_insert@@Base+0xd4>
   26340:	ldr	r0, [fp, #8]
   26344:	cmp	r0, #0
   26348:	ldr	r9, [sp, #4]
   2634c:	streq	r9, [r5]
   26350:	b	26380 <fb_scope_table_insert@@Base+0x14c>
   26354:	mov	r4, #0
   26358:	b	2637c <fb_scope_table_insert@@Base+0x148>
   2635c:	ldr	r1, [sp]
   26360:	ldr	r0, [r1, #8]
   26364:	add	r0, r0, #1
   26368:	str	r0, [r1, #8]
   2636c:	cmp	r9, #0
   26370:	movne	r5, r9
   26374:	mov	r4, #0
   26378:	ldr	r9, [sp, #4]
   2637c:	str	r9, [r5]
   26380:	mov	r0, r4
   26384:	sub	sp, fp, #28
   26388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2638c:	movw	r0, #50193	; 0xc411
   26390:	movt	r0, #4
   26394:	movw	r1, #50039	; 0xc377
   26398:	movt	r1, #4
   2639c:	movw	r3, #50119	; 0xc3c7
   263a0:	movt	r3, #4
   263a4:	mov	r2, #115	; 0x73
   263a8:	bl	14984 <__assert_fail@plt>
   263ac:	movw	r0, #50216	; 0xc428
   263b0:	movt	r0, #4
   263b4:	movw	r1, #50039	; 0xc377
   263b8:	movt	r1, #4
   263bc:	movw	r3, #50119	; 0xc3c7
   263c0:	movt	r3, #4
   263c4:	mov	r2, #116	; 0x74
   263c8:	bl	14984 <__assert_fail@plt>
   263cc:	movw	r0, #50016	; 0xc360
   263d0:	movt	r0, #4
   263d4:	movw	r1, #50039	; 0xc377
   263d8:	movt	r1, #4
   263dc:	movw	r3, #50119	; 0xc3c7
   263e0:	movt	r3, #4
   263e4:	mov	r2, #114	; 0x72
   263e8:	bl	14984 <__assert_fail@plt>
   263ec:	movw	r0, #4272	; 0x10b0
   263f0:	movt	r0, #6
   263f4:	ldr	r0, [r0]
   263f8:	movw	r1, #50237	; 0xc43d
   263fc:	movt	r1, #4
   26400:	movw	r2, #50260	; 0xc454
   26404:	movt	r2, #4
   26408:	bl	148c4 <fprintf@plt>
   2640c:	mov	r0, #1
   26410:	bl	148a0 <exit@plt>

00026414 <fb_scope_table_insert_item@@Base>:
   26414:	push	{r4, r5, r6, sl, fp, lr}
   26418:	add	fp, sp, #16
   2641c:	sub	sp, sp, #8
   26420:	mov	r4, r2
   26424:	mov	r5, r1
   26428:	mov	r6, r0
   2642c:	mov	r0, r1
   26430:	bl	26454 <fb_scope_table_insert_item@@Base+0x40>
   26434:	mov	r1, r0
   26438:	str	r4, [sp]
   2643c:	mov	r0, r6
   26440:	mov	r2, #0
   26444:	mov	r3, r5
   26448:	bl	26238 <fb_scope_table_insert@@Base+0x4>
   2644c:	sub	sp, fp, #16
   26450:	pop	{r4, r5, r6, sl, fp, pc}
   26454:	ldr	r0, [r0]
   26458:	bx	lr

0002645c <fb_scope_table_find@@Base>:
   2645c:	b	26460 <fb_scope_table_find@@Base+0x4>
   26460:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26464:	add	fp, sp, #24
   26468:	ldr	r4, [r0]
   2646c:	cmp	r4, #0
   26470:	beq	264d4 <fb_scope_table_find@@Base+0x78>
   26474:	mov	r8, r2
   26478:	mov	r9, r1
   2647c:	ldr	r5, [r0, #12]
   26480:	mov	r0, r1
   26484:	mov	r1, r2
   26488:	bl	265dc <fb_scope_table_visit@@Base+0x4>
   2648c:	mov	r6, r0
   26490:	sub	r5, r5, #1
   26494:	b	2649c <fb_scope_table_find@@Base+0x40>
   26498:	add	r6, r6, #1
   2649c:	and	r0, r6, r5
   264a0:	ldr	r7, [r4, r0, lsl #2]
   264a4:	cmp	r7, #2
   264a8:	beq	26498 <fb_scope_table_find@@Base+0x3c>
   264ac:	cmp	r7, #0
   264b0:	beq	264d4 <fb_scope_table_find@@Base+0x78>
   264b4:	mov	r0, r9
   264b8:	mov	r1, r8
   264bc:	mov	r2, r7
   264c0:	bl	26680 <fb_scope_table_visit@@Base+0xa8>
   264c4:	cmp	r0, #0
   264c8:	beq	26498 <fb_scope_table_find@@Base+0x3c>
   264cc:	mov	r0, r7
   264d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   264d4:	mov	r7, #0
   264d8:	mov	r0, r7
   264dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000264e0 <fb_scope_table_find_item@@Base>:
   264e0:	push	{r4, sl, fp, lr}
   264e4:	add	fp, sp, #8
   264e8:	mov	r4, r0
   264ec:	mov	r0, r1
   264f0:	bl	26454 <fb_scope_table_insert_item@@Base+0x40>
   264f4:	mov	r1, r0
   264f8:	mov	r0, r4
   264fc:	mov	r2, #0
   26500:	pop	{r4, sl, fp, lr}
   26504:	b	26460 <fb_scope_table_find@@Base+0x4>

00026508 <fb_scope_table_remove@@Base>:
   26508:	b	2650c <fb_scope_table_remove@@Base+0x4>
   2650c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26510:	add	fp, sp, #28
   26514:	sub	sp, sp, #4
   26518:	ldr	r5, [r0]
   2651c:	mov	r7, #0
   26520:	cmp	r5, #0
   26524:	beq	265a4 <fb_scope_table_remove@@Base+0x9c>
   26528:	mov	r9, r2
   2652c:	mov	sl, r1
   26530:	str	r0, [sp]
   26534:	ldr	r6, [r0, #12]
   26538:	mov	r0, r1
   2653c:	mov	r1, r2
   26540:	bl	265dc <fb_scope_table_visit@@Base+0x4>
   26544:	mov	r4, r0
   26548:	sub	r6, r6, #1
   2654c:	b	26554 <fb_scope_table_remove@@Base+0x4c>
   26550:	add	r4, r4, #1
   26554:	and	r8, r4, r6
   26558:	ldr	r7, [r5, r8, lsl #2]
   2655c:	cmp	r7, #2
   26560:	beq	26550 <fb_scope_table_remove@@Base+0x48>
   26564:	cmp	r7, #0
   26568:	beq	265a0 <fb_scope_table_remove@@Base+0x98>
   2656c:	mov	r0, sl
   26570:	mov	r1, r9
   26574:	mov	r2, r7
   26578:	bl	26680 <fb_scope_table_visit@@Base+0xa8>
   2657c:	cmp	r0, #0
   26580:	beq	26550 <fb_scope_table_remove@@Base+0x48>
   26584:	mov	r0, #2
   26588:	str	r0, [r5, r8, lsl #2]
   2658c:	ldr	r1, [sp]
   26590:	ldr	r0, [r1, #8]
   26594:	sub	r0, r0, #1
   26598:	str	r0, [r1, #8]
   2659c:	b	265a4 <fb_scope_table_remove@@Base+0x9c>
   265a0:	mov	r7, #0
   265a4:	mov	r0, r7
   265a8:	sub	sp, fp, #28
   265ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000265b0 <fb_scope_table_remove_item@@Base>:
   265b0:	push	{r4, sl, fp, lr}
   265b4:	add	fp, sp, #8
   265b8:	mov	r4, r0
   265bc:	mov	r0, r1
   265c0:	bl	26454 <fb_scope_table_insert_item@@Base+0x40>
   265c4:	mov	r1, r0
   265c8:	mov	r0, r4
   265cc:	mov	r2, #0
   265d0:	pop	{r4, sl, fp, lr}
   265d4:	b	2650c <fb_scope_table_remove@@Base+0x4>

000265d8 <fb_scope_table_visit@@Base>:
   265d8:	b	260bc <fb_scope_table_destroy@@Base+0x24>
   265dc:	push	{r4, r5, r6, r7, fp, lr}
   265e0:	add	fp, sp, #16
   265e4:	mov	r4, r1
   265e8:	mov	r5, r0
   265ec:	mov	r6, #0
   265f0:	cmp	r1, #1
   265f4:	blt	2664c <fb_scope_table_visit@@Base+0x74>
   265f8:	cmp	r4, #0
   265fc:	mov	r7, #0
   26600:	beq	2661c <fb_scope_table_visit@@Base+0x44>
   26604:	mov	r7, #0
   26608:	ldrb	r0, [r5, r7]
   2660c:	cmp	r0, #46	; 0x2e
   26610:	addne	r7, r7, #1
   26614:	cmpne	r4, r7
   26618:	bne	26608 <fb_scope_table_visit@@Base+0x30>
   2661c:	mov	r0, r5
   26620:	mov	r1, r7
   26624:	bl	267a4 <fb_scope_table_visit@@Base+0x1cc>
   26628:	eor	r0, r0, r6
   2662c:	bl	267dc <fb_scope_table_visit@@Base+0x204>
   26630:	mov	r6, r0
   26634:	cmp	r7, r4
   26638:	beq	26678 <fb_scope_table_visit@@Base+0xa0>
   2663c:	add	r0, r7, #1
   26640:	add	r5, r5, r0
   26644:	sub	r4, r4, r0
   26648:	b	265f8 <fb_scope_table_visit@@Base+0x20>
   2664c:	cmp	r5, #0
   26650:	beq	26678 <fb_scope_table_visit@@Base+0xa0>
   26654:	ldr	r1, [r5, #4]
   26658:	ldm	r1, {r0, r1}
   2665c:	bl	267a4 <fb_scope_table_visit@@Base+0x1cc>
   26660:	eor	r0, r0, r6
   26664:	bl	267dc <fb_scope_table_visit@@Base+0x204>
   26668:	mov	r6, r0
   2666c:	adds	r4, r4, #1
   26670:	ldr	r5, [r5]
   26674:	bcc	2664c <fb_scope_table_visit@@Base+0x74>
   26678:	mov	r0, r6
   2667c:	pop	{r4, r5, r6, r7, fp, pc}
   26680:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26684:	add	fp, sp, #24
   26688:	mov	r5, r1
   2668c:	mov	r4, r0
   26690:	ldr	r7, [r2]
   26694:	cmp	r1, #1
   26698:	blt	26720 <fb_scope_table_visit@@Base+0x148>
   2669c:	cmp	r7, #0
   266a0:	beq	26790 <fb_scope_table_visit@@Base+0x1b8>
   266a4:	ldr	r1, [r7, #4]
   266a8:	ldr	r0, [r1, #4]
   266ac:	cmp	r0, r5
   266b0:	bhi	26790 <fb_scope_table_visit@@Base+0x1b8>
   266b4:	cmp	r0, #0
   266b8:	beq	266e8 <fb_scope_table_visit@@Base+0x110>
   266bc:	ldr	r2, [r1]
   266c0:	mov	r8, #0
   266c4:	mov	r1, #0
   266c8:	ldrb	r3, [r4, r1]
   266cc:	ldrb	r6, [r2, r1]
   266d0:	cmp	r6, r3
   266d4:	bne	26774 <fb_scope_table_visit@@Base+0x19c>
   266d8:	add	r1, r1, #1
   266dc:	cmp	r0, r1
   266e0:	bne	266c8 <fb_scope_table_visit@@Base+0xf0>
   266e4:	b	266ec <fb_scope_table_visit@@Base+0x114>
   266e8:	mov	r1, #0
   266ec:	cmp	r0, r5
   266f0:	beq	2679c <fb_scope_table_visit@@Base+0x1c4>
   266f4:	ldrb	r1, [r4, r1]
   266f8:	mov	r8, #0
   266fc:	cmp	r1, #46	; 0x2e
   26700:	bne	26774 <fb_scope_table_visit@@Base+0x19c>
   26704:	add	r0, r0, #1
   26708:	add	r4, r4, r0
   2670c:	sub	r5, r5, r0
   26710:	ldr	r7, [r7]
   26714:	cmp	r7, #0
   26718:	bne	266a4 <fb_scope_table_visit@@Base+0xcc>
   2671c:	b	26774 <fb_scope_table_visit@@Base+0x19c>
   26720:	mov	r8, #0
   26724:	cmp	r7, #0
   26728:	cmpne	r4, #0
   2672c:	beq	2677c <fb_scope_table_visit@@Base+0x1a4>
   26730:	ldr	r0, [r7, #4]
   26734:	ldr	r2, [r0, #4]
   26738:	ldr	r1, [r4, #4]
   2673c:	ldr	r3, [r1, #4]
   26740:	cmp	r2, r3
   26744:	bne	26774 <fb_scope_table_visit@@Base+0x19c>
   26748:	ldr	r1, [r1]
   2674c:	ldr	r0, [r0]
   26750:	bl	1496c <strncmp@plt>
   26754:	cmp	r0, #0
   26758:	bne	26774 <fb_scope_table_visit@@Base+0x19c>
   2675c:	adds	r5, r5, #1
   26760:	ldr	r4, [r4]
   26764:	ldr	r7, [r7]
   26768:	bcc	26724 <fb_scope_table_visit@@Base+0x14c>
   2676c:	clz	r0, r7
   26770:	b	26784 <fb_scope_table_visit@@Base+0x1ac>
   26774:	mov	r0, r8
   26778:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2677c:	orr	r0, r7, r4
   26780:	clz	r0, r0
   26784:	lsr	r8, r0, #5
   26788:	mov	r0, r8
   2678c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26790:	mov	r8, #0
   26794:	mov	r0, r8
   26798:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2679c:	ldr	r0, [r7]
   267a0:	b	26780 <fb_scope_table_visit@@Base+0x1a8>
   267a4:	mov	r2, r0
   267a8:	subs	r1, r1, #1
   267ac:	movw	r0, #11863	; 0x2e57
   267b0:	movt	r0, #12137	; 0x2f69
   267b4:	beq	267d8 <fb_scope_table_visit@@Base+0x200>
   267b8:	ldrb	r3, [r2]
   267bc:	cmp	r3, #0
   267c0:	bxeq	lr
   267c4:	add	r0, r0, r0, lsl #5
   267c8:	eor	r0, r0, r3
   267cc:	subs	r1, r1, #1
   267d0:	add	r2, r2, #1
   267d4:	bne	267b8 <fb_scope_table_visit@@Base+0x1e0>
   267d8:	bx	lr
   267dc:	movw	r1, #15186	; 0x3b52
   267e0:	movt	r1, #12137	; 0x2f69
   267e4:	eor	r0, r0, r1
   267e8:	movw	r1, #31153	; 0x79b1
   267ec:	movt	r1, #40503	; 0x9e37
   267f0:	mul	r0, r0, r1
   267f4:	bx	lr

000267f8 <fb_schema_table_clear@@Base>:
   267f8:	b	267fc <fb_schema_table_clear@@Base+0x4>
   267fc:	push	{r4, sl, fp, lr}
   26800:	add	fp, sp, #8
   26804:	mov	r4, r0
   26808:	ldr	r0, [r0]
   2680c:	cmp	r0, #0
   26810:	beq	26818 <fb_schema_table_clear@@Base+0x20>
   26814:	bl	14804 <free@plt>
   26818:	vmov.i32	q8, #0	; 0x00000000
   2681c:	vst1.32	{d16-d17}, [r4]
   26820:	pop	{r4, sl, fp, pc}

00026824 <fb_schema_table_destroy@@Base>:
   26824:	push	{r4, sl, fp, lr}
   26828:	add	fp, sp, #8
   2682c:	mov	r4, r0
   26830:	cmp	r1, #0
   26834:	movne	r0, r4
   26838:	blne	26848 <fb_schema_table_destroy@@Base+0x24>
   2683c:	mov	r0, r4
   26840:	pop	{r4, sl, fp, lr}
   26844:	b	267fc <fb_schema_table_clear@@Base+0x4>
   26848:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2684c:	add	fp, sp, #24
   26850:	mov	r6, r0
   26854:	ldr	r0, [r0, #12]
   26858:	cmp	r0, #0
   2685c:	beq	268a0 <fb_schema_table_destroy@@Base+0x7c>
   26860:	mov	r8, r2
   26864:	mov	r5, r1
   26868:	ldr	r7, [r6]
   2686c:	mov	r4, #0
   26870:	b	26884 <fb_schema_table_destroy@@Base+0x60>
   26874:	ldr	r0, [r6, #12]
   26878:	add	r4, r4, #1
   2687c:	cmp	r4, r0
   26880:	bcs	268a0 <fb_schema_table_destroy@@Base+0x7c>
   26884:	ldr	r1, [r7, r4, lsl #2]
   26888:	orr	r0, r1, #2
   2688c:	cmp	r0, #2
   26890:	beq	26874 <fb_schema_table_destroy@@Base+0x50>
   26894:	mov	r0, r8
   26898:	blx	r5
   2689c:	b	26874 <fb_schema_table_destroy@@Base+0x50>
   268a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000268a4 <fb_schema_table_init@@Base>:
   268a4:	b	268a8 <fb_schema_table_init@@Base+0x4>
   268a8:	push	{r4, r5, fp, lr}
   268ac:	add	fp, sp, #8
   268b0:	mov	r4, r0
   268b4:	mov	r2, #4
   268b8:	mov	r0, #179	; 0xb3
   268bc:	mov	r5, r2
   268c0:	mul	r3, r2, r0
   268c4:	lsl	r2, r2, #1
   268c8:	cmp	r1, r3, lsr #8
   268cc:	bhi	268bc <fb_schema_table_init@@Base+0x18>
   268d0:	mov	r0, r5
   268d4:	mov	r1, #4
   268d8:	bl	147d4 <calloc@plt>
   268dc:	str	r0, [r4]
   268e0:	cmp	r0, #0
   268e4:	mvneq	r0, #0
   268e8:	movne	r0, #0
   268ec:	strne	r0, [r4, #4]
   268f0:	strne	r0, [r4, #8]
   268f4:	strne	r5, [r4, #12]
   268f8:	pop	{r4, r5, fp, pc}

000268fc <fb_schema_table_resize@@Base>:
   268fc:	b	26900 <fb_schema_table_resize@@Base+0x4>
   26900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26904:	add	fp, sp, #28
   26908:	sub	sp, sp, #28
   2690c:	mov	r4, r0
   26910:	ldr	sl, [r0]
   26914:	ldr	r0, [r0, #8]
   26918:	cmp	r0, r1
   2691c:	movhi	r1, r0
   26920:	add	r0, sp, #8
   26924:	bl	268a8 <fb_schema_table_init@@Base+0x4>
   26928:	mov	r1, r0
   2692c:	mvn	r0, #0
   26930:	cmp	r1, #0
   26934:	beq	26940 <fb_schema_table_resize@@Base+0x44>
   26938:	sub	sp, fp, #28
   2693c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26940:	ldr	r0, [r4, #12]
   26944:	cmp	r0, #0
   26948:	beq	269ac <fb_schema_table_resize@@Base+0xb0>
   2694c:	mov	r6, #0
   26950:	mov	r8, #3
   26954:	add	r9, sp, #8
   26958:	b	2696c <fb_schema_table_resize@@Base+0x70>
   2695c:	ldr	r0, [r4, #12]
   26960:	add	r6, r6, #1
   26964:	cmp	r6, r0
   26968:	bcs	269ac <fb_schema_table_resize@@Base+0xb0>
   2696c:	ldr	r7, [sl, r6, lsl #2]
   26970:	orr	r0, r7, #2
   26974:	cmp	r0, #2
   26978:	beq	2695c <fb_schema_table_resize@@Base+0x60>
   2697c:	mov	r0, r7
   26980:	bl	26bf8 <fb_schema_table_insert_item@@Base+0x4c>
   26984:	mov	r5, r0
   26988:	mov	r0, r7
   2698c:	bl	26c00 <fb_schema_table_insert_item@@Base+0x54>
   26990:	mov	r2, r0
   26994:	str	r8, [sp]
   26998:	mov	r0, r9
   2699c:	mov	r1, r5
   269a0:	mov	r3, r7
   269a4:	bl	269d0 <fb_schema_table_insert@@Base+0x4>
   269a8:	b	2695c <fb_schema_table_resize@@Base+0x60>
   269ac:	mov	r0, r4
   269b0:	bl	267fc <fb_schema_table_clear@@Base+0x4>
   269b4:	add	r0, sp, #8
   269b8:	vld1.64	{d16-d17}, [r0]
   269bc:	vst1.32	{d16-d17}, [r4]
   269c0:	mov	r0, #0
   269c4:	sub	sp, fp, #28
   269c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000269cc <fb_schema_table_insert@@Base>:
   269cc:	b	269d0 <fb_schema_table_insert@@Base+0x4>
   269d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   269d4:	add	fp, sp, #28
   269d8:	sub	sp, sp, #12
   269dc:	str	r2, [sp, #8]
   269e0:	cmp	r3, #2
   269e4:	beq	26b24 <fb_schema_table_insert@@Base+0x158>
   269e8:	mov	r9, r3
   269ec:	cmp	r3, #1
   269f0:	beq	26b44 <fb_schema_table_insert@@Base+0x178>
   269f4:	cmp	r9, #0
   269f8:	beq	26b64 <fb_schema_table_insert@@Base+0x198>
   269fc:	mov	r7, r1
   26a00:	mov	r5, r0
   26a04:	ldr	r0, [r0, #8]
   26a08:	ldr	r1, [r5, #12]
   26a0c:	mov	r2, #179	; 0xb3
   26a10:	mul	r1, r1, r2
   26a14:	cmp	r0, r1, lsr #8
   26a18:	bcc	26a30 <fb_schema_table_insert@@Base+0x64>
   26a1c:	lsl	r1, r0, #1
   26a20:	mov	r0, r5
   26a24:	bl	26900 <fb_schema_table_resize@@Base+0x4>
   26a28:	cmp	r0, #0
   26a2c:	bne	26b84 <fb_schema_table_insert@@Base+0x1b8>
   26a30:	ldr	sl, [fp, #8]
   26a34:	ldr	r8, [r5]
   26a38:	ldr	r4, [r5, #12]
   26a3c:	mov	r0, r7
   26a40:	ldr	r1, [sp, #8]
   26a44:	bl	26da8 <fb_schema_table_visit@@Base+0x4>
   26a48:	sub	r6, r4, #1
   26a4c:	and	r1, r0, r6
   26a50:	orr	r2, sl, #1
   26a54:	cmp	r2, #3
   26a58:	bne	26a88 <fb_schema_table_insert@@Base+0xbc>
   26a5c:	ldr	r2, [r5, #8]
   26a60:	add	r2, r2, #1
   26a64:	str	r2, [r5, #8]
   26a68:	add	r0, r0, #1
   26a6c:	mov	r5, r8
   26a70:	ldr	r1, [r5, r1, lsl #2]!
   26a74:	orr	r1, r1, #2
   26a78:	cmp	r1, #2
   26a7c:	beq	26aec <fb_schema_table_insert@@Base+0x120>
   26a80:	and	r1, r0, r6
   26a84:	b	26a68 <fb_schema_table_insert@@Base+0x9c>
   26a88:	stm	sp, {r5, r9}
   26a8c:	add	sl, r0, #1
   26a90:	mov	r9, #0
   26a94:	b	26aa8 <fb_schema_table_insert@@Base+0xdc>
   26a98:	cmp	r9, #0
   26a9c:	moveq	r9, r5
   26aa0:	and	r1, sl, r6
   26aa4:	add	sl, sl, #1
   26aa8:	mov	r5, r8
   26aac:	ldr	r4, [r5, r1, lsl #2]!
   26ab0:	cmp	r4, #2
   26ab4:	beq	26a98 <fb_schema_table_insert@@Base+0xcc>
   26ab8:	cmp	r4, #0
   26abc:	beq	26af4 <fb_schema_table_insert@@Base+0x128>
   26ac0:	mov	r0, r7
   26ac4:	ldr	r1, [sp, #8]
   26ac8:	mov	r2, r4
   26acc:	bl	26de0 <fb_schema_table_visit@@Base+0x3c>
   26ad0:	cmp	r0, #0
   26ad4:	beq	26aa0 <fb_schema_table_insert@@Base+0xd4>
   26ad8:	ldr	r0, [fp, #8]
   26adc:	cmp	r0, #0
   26ae0:	ldr	r9, [sp, #4]
   26ae4:	streq	r9, [r5]
   26ae8:	b	26b18 <fb_schema_table_insert@@Base+0x14c>
   26aec:	mov	r4, #0
   26af0:	b	26b14 <fb_schema_table_insert@@Base+0x148>
   26af4:	ldr	r1, [sp]
   26af8:	ldr	r0, [r1, #8]
   26afc:	add	r0, r0, #1
   26b00:	str	r0, [r1, #8]
   26b04:	cmp	r9, #0
   26b08:	movne	r5, r9
   26b0c:	mov	r4, #0
   26b10:	ldr	r9, [sp, #4]
   26b14:	str	r9, [r5]
   26b18:	mov	r0, r4
   26b1c:	sub	sp, fp, #28
   26b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26b24:	movw	r0, #50193	; 0xc411
   26b28:	movt	r0, #4
   26b2c:	movw	r1, #50039	; 0xc377
   26b30:	movt	r1, #4
   26b34:	movw	r3, #50119	; 0xc3c7
   26b38:	movt	r3, #4
   26b3c:	mov	r2, #115	; 0x73
   26b40:	bl	14984 <__assert_fail@plt>
   26b44:	movw	r0, #50216	; 0xc428
   26b48:	movt	r0, #4
   26b4c:	movw	r1, #50039	; 0xc377
   26b50:	movt	r1, #4
   26b54:	movw	r3, #50119	; 0xc3c7
   26b58:	movt	r3, #4
   26b5c:	mov	r2, #116	; 0x74
   26b60:	bl	14984 <__assert_fail@plt>
   26b64:	movw	r0, #50016	; 0xc360
   26b68:	movt	r0, #4
   26b6c:	movw	r1, #50039	; 0xc377
   26b70:	movt	r1, #4
   26b74:	movw	r3, #50119	; 0xc3c7
   26b78:	movt	r3, #4
   26b7c:	mov	r2, #114	; 0x72
   26b80:	bl	14984 <__assert_fail@plt>
   26b84:	movw	r0, #4272	; 0x10b0
   26b88:	movt	r0, #6
   26b8c:	ldr	r0, [r0]
   26b90:	movw	r1, #50237	; 0xc43d
   26b94:	movt	r1, #4
   26b98:	movw	r2, #50260	; 0xc454
   26b9c:	movt	r2, #4
   26ba0:	bl	148c4 <fprintf@plt>
   26ba4:	mov	r0, #1
   26ba8:	bl	148a0 <exit@plt>

00026bac <fb_schema_table_insert_item@@Base>:
   26bac:	push	{r4, r5, r6, r7, fp, lr}
   26bb0:	add	fp, sp, #16
   26bb4:	sub	sp, sp, #8
   26bb8:	mov	r4, r2
   26bbc:	mov	r5, r1
   26bc0:	mov	r6, r0
   26bc4:	mov	r0, r1
   26bc8:	bl	26bf8 <fb_schema_table_insert_item@@Base+0x4c>
   26bcc:	mov	r7, r0
   26bd0:	mov	r0, r5
   26bd4:	bl	26c00 <fb_schema_table_insert_item@@Base+0x54>
   26bd8:	mov	r2, r0
   26bdc:	str	r4, [sp]
   26be0:	mov	r0, r6
   26be4:	mov	r1, r7
   26be8:	mov	r3, r5
   26bec:	bl	269d0 <fb_schema_table_insert@@Base+0x4>
   26bf0:	sub	sp, fp, #16
   26bf4:	pop	{r4, r5, r6, r7, fp, pc}
   26bf8:	ldr	r0, [r0, #144]	; 0x90
   26bfc:	bx	lr
   26c00:	ldr	r0, [r0, #148]	; 0x94
   26c04:	bx	lr

00026c08 <fb_schema_table_find@@Base>:
   26c08:	b	26c0c <fb_schema_table_find@@Base+0x4>
   26c0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26c10:	add	fp, sp, #24
   26c14:	ldr	r4, [r0]
   26c18:	cmp	r4, #0
   26c1c:	beq	26c80 <fb_schema_table_find@@Base+0x78>
   26c20:	mov	r8, r2
   26c24:	mov	r9, r1
   26c28:	ldr	r5, [r0, #12]
   26c2c:	mov	r0, r1
   26c30:	mov	r1, r2
   26c34:	bl	26da8 <fb_schema_table_visit@@Base+0x4>
   26c38:	mov	r6, r0
   26c3c:	sub	r5, r5, #1
   26c40:	b	26c48 <fb_schema_table_find@@Base+0x40>
   26c44:	add	r6, r6, #1
   26c48:	and	r0, r6, r5
   26c4c:	ldr	r7, [r4, r0, lsl #2]
   26c50:	cmp	r7, #2
   26c54:	beq	26c44 <fb_schema_table_find@@Base+0x3c>
   26c58:	cmp	r7, #0
   26c5c:	beq	26c80 <fb_schema_table_find@@Base+0x78>
   26c60:	mov	r0, r9
   26c64:	mov	r1, r8
   26c68:	mov	r2, r7
   26c6c:	bl	26de0 <fb_schema_table_visit@@Base+0x3c>
   26c70:	cmp	r0, #0
   26c74:	beq	26c44 <fb_schema_table_find@@Base+0x3c>
   26c78:	mov	r0, r7
   26c7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26c80:	mov	r7, #0
   26c84:	mov	r0, r7
   26c88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026c8c <fb_schema_table_find_item@@Base>:
   26c8c:	push	{r4, r5, r6, sl, fp, lr}
   26c90:	add	fp, sp, #16
   26c94:	mov	r4, r1
   26c98:	mov	r5, r0
   26c9c:	mov	r0, r1
   26ca0:	bl	26bf8 <fb_schema_table_insert_item@@Base+0x4c>
   26ca4:	mov	r6, r0
   26ca8:	mov	r0, r4
   26cac:	bl	26c00 <fb_schema_table_insert_item@@Base+0x54>
   26cb0:	mov	r2, r0
   26cb4:	mov	r0, r5
   26cb8:	mov	r1, r6
   26cbc:	pop	{r4, r5, r6, sl, fp, lr}
   26cc0:	b	26c0c <fb_schema_table_find@@Base+0x4>

00026cc4 <fb_schema_table_remove@@Base>:
   26cc4:	b	26cc8 <fb_schema_table_remove@@Base+0x4>
   26cc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ccc:	add	fp, sp, #28
   26cd0:	sub	sp, sp, #4
   26cd4:	ldr	r5, [r0]
   26cd8:	mov	r7, #0
   26cdc:	cmp	r5, #0
   26ce0:	beq	26d60 <fb_schema_table_remove@@Base+0x9c>
   26ce4:	mov	r9, r2
   26ce8:	mov	sl, r1
   26cec:	str	r0, [sp]
   26cf0:	ldr	r6, [r0, #12]
   26cf4:	mov	r0, r1
   26cf8:	mov	r1, r2
   26cfc:	bl	26da8 <fb_schema_table_visit@@Base+0x4>
   26d00:	mov	r4, r0
   26d04:	sub	r6, r6, #1
   26d08:	b	26d10 <fb_schema_table_remove@@Base+0x4c>
   26d0c:	add	r4, r4, #1
   26d10:	and	r8, r4, r6
   26d14:	ldr	r7, [r5, r8, lsl #2]
   26d18:	cmp	r7, #2
   26d1c:	beq	26d0c <fb_schema_table_remove@@Base+0x48>
   26d20:	cmp	r7, #0
   26d24:	beq	26d5c <fb_schema_table_remove@@Base+0x98>
   26d28:	mov	r0, sl
   26d2c:	mov	r1, r9
   26d30:	mov	r2, r7
   26d34:	bl	26de0 <fb_schema_table_visit@@Base+0x3c>
   26d38:	cmp	r0, #0
   26d3c:	beq	26d0c <fb_schema_table_remove@@Base+0x48>
   26d40:	mov	r0, #2
   26d44:	str	r0, [r5, r8, lsl #2]
   26d48:	ldr	r1, [sp]
   26d4c:	ldr	r0, [r1, #8]
   26d50:	sub	r0, r0, #1
   26d54:	str	r0, [r1, #8]
   26d58:	b	26d60 <fb_schema_table_remove@@Base+0x9c>
   26d5c:	mov	r7, #0
   26d60:	mov	r0, r7
   26d64:	sub	sp, fp, #28
   26d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026d6c <fb_schema_table_remove_item@@Base>:
   26d6c:	push	{r4, r5, r6, sl, fp, lr}
   26d70:	add	fp, sp, #16
   26d74:	mov	r4, r1
   26d78:	mov	r5, r0
   26d7c:	mov	r0, r1
   26d80:	bl	26bf8 <fb_schema_table_insert_item@@Base+0x4c>
   26d84:	mov	r6, r0
   26d88:	mov	r0, r4
   26d8c:	bl	26c00 <fb_schema_table_insert_item@@Base+0x54>
   26d90:	mov	r2, r0
   26d94:	mov	r0, r5
   26d98:	mov	r1, r6
   26d9c:	pop	{r4, r5, r6, sl, fp, lr}
   26da0:	b	26cc8 <fb_schema_table_remove@@Base+0x4>

00026da4 <fb_schema_table_visit@@Base>:
   26da4:	b	26848 <fb_schema_table_destroy@@Base+0x24>
   26da8:	push	{fp, lr}
   26dac:	mov	fp, sp
   26db0:	sub	sp, sp, #16
   26db4:	add	r2, sp, #8
   26db8:	movw	r3, #15186	; 0x3b52
   26dbc:	movt	r3, #12137	; 0x2f69
   26dc0:	str	r3, [sp]
   26dc4:	str	r2, [sp, #4]
   26dc8:	mov	r2, r1
   26dcc:	mov	r3, #0
   26dd0:	bl	31ee8 <cmetrohash64_1@@Base>
   26dd4:	ldr	r0, [sp, #8]
   26dd8:	mov	sp, fp
   26ddc:	pop	{fp, pc}
   26de0:	push	{fp, lr}
   26de4:	mov	fp, sp
   26de8:	mov	ip, r1
   26dec:	ldr	r3, [r2, #148]	; 0x94
   26df0:	mov	r1, #0
   26df4:	cmp	r3, ip
   26df8:	bne	26e10 <fb_schema_table_visit@@Base+0x6c>
   26dfc:	ldr	r1, [r2, #144]	; 0x90
   26e00:	mov	r2, ip
   26e04:	bl	148ac <bcmp@plt>
   26e08:	clz	r0, r0
   26e0c:	lsr	r1, r0, #5
   26e10:	mov	r0, r1
   26e14:	pop	{fp, pc}

00026e18 <__flatcc_fb_copy_path_n@@Base>:
   26e18:	push	{r4, r5, r6, sl, fp, lr}
   26e1c:	add	fp, sp, #16
   26e20:	mov	r4, r0
   26e24:	bl	26e60 <__flatcc_fb_copy_path_n@@Base+0x48>
   26e28:	mov	r5, r0
   26e2c:	add	r0, r0, #1
   26e30:	bl	14870 <malloc@plt>
   26e34:	mov	r6, r0
   26e38:	cmp	r0, #0
   26e3c:	beq	26e58 <__flatcc_fb_copy_path_n@@Base+0x40>
   26e40:	mov	r0, r6
   26e44:	mov	r1, r4
   26e48:	mov	r2, r5
   26e4c:	bl	14810 <memcpy@plt>
   26e50:	mov	r0, #0
   26e54:	strb	r0, [r6, r5]
   26e58:	mov	r0, r6
   26e5c:	pop	{r4, r5, r6, sl, fp, pc}
   26e60:	push	{r4, r5, fp, lr}
   26e64:	add	fp, sp, #8
   26e68:	mov	r4, r1
   26e6c:	mov	r5, r0
   26e70:	mov	r1, #0
   26e74:	mov	r2, r4
   26e78:	bl	14900 <memchr@plt>
   26e7c:	cmp	r0, #0
   26e80:	subne	r4, r0, r5
   26e84:	mov	r0, r4
   26e88:	pop	{r4, r5, fp, pc}

00026e8c <__flatcc_fb_copy_path@@Base>:
   26e8c:	push	{r4, r5, r6, sl, fp, lr}
   26e90:	add	fp, sp, #16
   26e94:	mov	r5, r0
   26e98:	bl	148b8 <strlen@plt>
   26e9c:	mov	r4, r0
   26ea0:	add	r0, r0, #1
   26ea4:	bl	14870 <malloc@plt>
   26ea8:	mov	r6, r0
   26eac:	cmp	r0, #0
   26eb0:	beq	26ecc <__flatcc_fb_copy_path@@Base+0x40>
   26eb4:	mov	r0, r6
   26eb8:	mov	r1, r5
   26ebc:	mov	r2, r4
   26ec0:	bl	14810 <memcpy@plt>
   26ec4:	mov	r0, #0
   26ec8:	strb	r0, [r6, r4]
   26ecc:	mov	r0, r6
   26ed0:	pop	{r4, r5, r6, sl, fp, pc}

00026ed4 <__flatcc_fb_chomp@@Base>:
   26ed4:	push	{r4, r5, r6, r7, fp, lr}
   26ed8:	add	fp, sp, #16
   26edc:	mov	r5, r2
   26ee0:	mov	r4, r1
   26ee4:	mov	r7, r0
   26ee8:	cmp	r2, #0
   26eec:	beq	26f28 <__flatcc_fb_chomp@@Base+0x54>
   26ef0:	mov	r0, r5
   26ef4:	bl	148b8 <strlen@plt>
   26ef8:	mov	r6, r0
   26efc:	cmp	r6, r4
   26f00:	bcs	26f20 <__flatcc_fb_chomp@@Base+0x4c>
   26f04:	add	r0, r7, r4
   26f08:	sub	r0, r0, r6
   26f0c:	mov	r1, r5
   26f10:	mov	r2, r6
   26f14:	bl	1496c <strncmp@plt>
   26f18:	cmp	r0, #0
   26f1c:	subeq	r4, r4, r6
   26f20:	mov	r0, r4
   26f24:	pop	{r4, r5, r6, r7, fp, pc}
   26f28:	mov	r6, #0
   26f2c:	cmp	r6, r4
   26f30:	bcc	26f04 <__flatcc_fb_chomp@@Base+0x30>
   26f34:	b	26f20 <__flatcc_fb_chomp@@Base+0x4c>

00026f38 <__flatcc_fb_create_join_path_n@@Base>:
   26f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26f3c:	add	fp, sp, #28
   26f40:	sub	sp, sp, #4
   26f44:	mov	r4, r3
   26f48:	mov	r9, r2
   26f4c:	mov	r6, r1
   26f50:	mov	r7, r0
   26f54:	ldr	r0, [fp, #8]
   26f58:	cmp	r0, #0
   26f5c:	beq	26f6c <__flatcc_fb_create_join_path_n@@Base+0x34>
   26f60:	bl	148b8 <strlen@plt>
   26f64:	mov	sl, r0
   26f68:	b	26f70 <__flatcc_fb_create_join_path_n@@Base+0x38>
   26f6c:	mov	sl, #0
   26f70:	ldr	r8, [fp, #12]
   26f74:	cmp	r7, #0
   26f78:	beq	26f94 <__flatcc_fb_create_join_path_n@@Base+0x5c>
   26f7c:	cmp	r4, #0
   26f80:	beq	26f98 <__flatcc_fb_create_join_path_n@@Base+0x60>
   26f84:	ldrb	r0, [r9]
   26f88:	cmp	r0, #47	; 0x2f
   26f8c:	cmpne	r0, #92	; 0x5c
   26f90:	bne	2703c <__flatcc_fb_create_join_path_n@@Base+0x104>
   26f94:	mov	r6, #0
   26f98:	cmp	r8, #0
   26f9c:	cmpne	r6, #0
   26fa0:	bne	26fac <__flatcc_fb_create_join_path_n@@Base+0x74>
   26fa4:	mov	r8, #0
   26fa8:	b	26fc0 <__flatcc_fb_create_join_path_n@@Base+0x88>
   26fac:	add	r0, r6, r7
   26fb0:	ldrb	r0, [r0, #-1]
   26fb4:	cmp	r0, #92	; 0x5c
   26fb8:	cmpne	r0, #47	; 0x2f
   26fbc:	moveq	r8, #0
   26fc0:	add	r0, r6, r4
   26fc4:	add	r0, r0, sl
   26fc8:	add	r0, r0, r8
   26fcc:	add	r0, r0, #1
   26fd0:	bl	14870 <malloc@plt>
   26fd4:	mov	r5, r0
   26fd8:	cmp	r0, #0
   26fdc:	beq	27030 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   26fe0:	mov	r0, r5
   26fe4:	mov	r1, r7
   26fe8:	mov	r2, r6
   26fec:	bl	14810 <memcpy@plt>
   26ff0:	cmp	r8, #0
   26ff4:	movne	r0, #47	; 0x2f
   26ff8:	strbne	r0, [r5, r6]
   26ffc:	addne	r6, r6, #1
   27000:	add	r0, r5, r6
   27004:	mov	r1, r9
   27008:	mov	r2, r4
   2700c:	bl	14810 <memcpy@plt>
   27010:	add	r4, r6, r4
   27014:	add	r0, r5, r4
   27018:	ldr	r1, [fp, #8]
   2701c:	mov	r2, sl
   27020:	bl	14810 <memcpy@plt>
   27024:	add	r0, r4, sl
   27028:	mov	r1, #0
   2702c:	strb	r1, [r5, r0]
   27030:	mov	r0, r5
   27034:	sub	sp, fp, #28
   27038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2703c:	cmp	r4, #2
   27040:	bcc	26f98 <__flatcc_fb_create_join_path_n@@Base+0x60>
   27044:	ldrb	r0, [r9, #1]
   27048:	cmp	r0, #58	; 0x3a
   2704c:	moveq	r6, #0
   27050:	b	26f98 <__flatcc_fb_create_join_path_n@@Base+0x60>

00027054 <__flatcc_fb_create_join_path@@Base>:
   27054:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27058:	add	fp, sp, #24
   2705c:	sub	sp, sp, #8
   27060:	mov	r8, r3
   27064:	mov	r9, r2
   27068:	mov	r4, r1
   2706c:	mov	r6, r0
   27070:	mov	r5, #0
   27074:	cmp	r0, #0
   27078:	mov	r7, #0
   2707c:	beq	2708c <__flatcc_fb_create_join_path@@Base+0x38>
   27080:	mov	r0, r6
   27084:	bl	148b8 <strlen@plt>
   27088:	mov	r7, r0
   2708c:	cmp	r4, #0
   27090:	beq	270a0 <__flatcc_fb_create_join_path@@Base+0x4c>
   27094:	mov	r0, r4
   27098:	bl	148b8 <strlen@plt>
   2709c:	mov	r5, r0
   270a0:	str	r9, [sp]
   270a4:	str	r8, [sp, #4]
   270a8:	mov	r0, r6
   270ac:	mov	r1, r7
   270b0:	mov	r2, r4
   270b4:	mov	r3, r5
   270b8:	bl	26f38 <__flatcc_fb_create_join_path_n@@Base>
   270bc:	sub	sp, fp, #24
   270c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000270c4 <__flatcc_fb_create_path_ext_n@@Base>:
   270c4:	push	{fp, lr}
   270c8:	mov	fp, sp
   270cc:	sub	sp, sp, #8
   270d0:	mov	ip, r1
   270d4:	mov	r3, r0
   270d8:	mov	r0, #0
   270dc:	str	r2, [sp]
   270e0:	str	r0, [sp, #4]
   270e4:	mov	r0, #0
   270e8:	mov	r1, #0
   270ec:	mov	r2, r3
   270f0:	mov	r3, ip
   270f4:	bl	26f38 <__flatcc_fb_create_join_path_n@@Base>
   270f8:	mov	sp, fp
   270fc:	pop	{fp, pc}

00027100 <__flatcc_fb_create_path_ext@@Base>:
   27100:	mov	r2, r1
   27104:	mov	r1, r0
   27108:	mov	r0, #0
   2710c:	mov	r3, #0
   27110:	b	27054 <__flatcc_fb_create_join_path@@Base>

00027114 <__flatcc_fb_create_make_path_n@@Base>:
   27114:	push	{r4, r5, r6, sl, fp, lr}
   27118:	add	fp, sp, #16
   2711c:	mov	r6, r0
   27120:	cmp	r1, #0
   27124:	beq	27168 <__flatcc_fb_create_make_path_n@@Base+0x54>
   27128:	cmp	r1, #1
   2712c:	bne	27174 <__flatcc_fb_create_make_path_n@@Base+0x60>
   27130:	ldrb	r5, [r6]
   27134:	cmp	r5, #92	; 0x5c
   27138:	cmpne	r5, #32
   2713c:	bne	27168 <__flatcc_fb_create_make_path_n@@Base+0x54>
   27140:	mov	r0, #3
   27144:	bl	14870 <malloc@plt>
   27148:	cmp	r0, #0
   2714c:	moveq	r0, #0
   27150:	movne	r1, #0
   27154:	strbne	r1, [r0, #2]
   27158:	strbne	r5, [r0, #1]
   2715c:	movne	r1, #92	; 0x5c
   27160:	strbne	r1, [r0]
   27164:	pop	{r4, r5, r6, sl, fp, pc}
   27168:	mov	r0, r6
   2716c:	pop	{r4, r5, r6, sl, fp, lr}
   27170:	b	26e18 <__flatcc_fb_copy_path_n@@Base>
   27174:	sub	r5, r1, #1
   27178:	ldrb	r3, [r6]
   2717c:	mov	r2, #1
   27180:	mov	r0, r1
   27184:	b	271a0 <__flatcc_fb_create_make_path_n@@Base+0x8c>
   27188:	cmp	r3, #32
   2718c:	addeq	r0, r0, #1
   27190:	ldrb	r3, [r6, r2]
   27194:	add	r2, r2, #1
   27198:	cmp	r1, r2
   2719c:	beq	271bc <__flatcc_fb_create_make_path_n@@Base+0xa8>
   271a0:	uxtb	r3, r3
   271a4:	cmp	r3, #92	; 0x5c
   271a8:	bne	27188 <__flatcc_fb_create_make_path_n@@Base+0x74>
   271ac:	ldrb	r4, [r6, r2]
   271b0:	cmp	r4, #32
   271b4:	addeq	r0, r0, #1
   271b8:	b	27188 <__flatcc_fb_create_make_path_n@@Base+0x74>
   271bc:	cmp	r3, #32
   271c0:	addeq	r0, r0, #1
   271c4:	add	r0, r0, #1
   271c8:	bl	14870 <malloc@plt>
   271cc:	cmp	r0, #0
   271d0:	beq	27230 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   271d4:	ldrb	r1, [r6]
   271d8:	cmp	r5, #0
   271dc:	beq	27238 <__flatcc_fb_create_make_path_n@@Base+0x124>
   271e0:	add	r3, r6, #1
   271e4:	mov	r2, #0
   271e8:	mov	ip, #92	; 0x5c
   271ec:	b	2720c <__flatcc_fb_create_make_path_n@@Base+0xf8>
   271f0:	strb	ip, [r0, r2]
   271f4:	add	r2, r2, #1
   271f8:	strb	r1, [r0, r2]
   271fc:	subs	r5, r5, #1
   27200:	add	r2, r2, #1
   27204:	ldrb	r1, [r3], #1
   27208:	beq	2723c <__flatcc_fb_create_make_path_n@@Base+0x128>
   2720c:	uxtb	r4, r1
   27210:	cmp	r4, #32
   27214:	beq	271f0 <__flatcc_fb_create_make_path_n@@Base+0xdc>
   27218:	cmp	r4, #92	; 0x5c
   2721c:	bne	271f8 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   27220:	ldrb	r6, [r3]
   27224:	cmp	r6, #32
   27228:	beq	271f0 <__flatcc_fb_create_make_path_n@@Base+0xdc>
   2722c:	b	271f8 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   27230:	mov	r0, #0
   27234:	pop	{r4, r5, r6, sl, fp, pc}
   27238:	mov	r2, #0
   2723c:	cmp	r1, #32
   27240:	moveq	r3, #92	; 0x5c
   27244:	strbeq	r3, [r0, r2]
   27248:	addeq	r2, r2, #1
   2724c:	mov	r3, r0
   27250:	strb	r1, [r3, r2]!
   27254:	mov	r1, #0
   27258:	strb	r1, [r3, #1]
   2725c:	pop	{r4, r5, r6, sl, fp, pc}

00027260 <__flatcc_fb_create_make_path@@Base>:
   27260:	push	{r4, sl, fp, lr}
   27264:	add	fp, sp, #8
   27268:	mov	r4, r0
   2726c:	bl	148b8 <strlen@plt>
   27270:	mov	r1, r0
   27274:	mov	r0, r4
   27278:	pop	{r4, sl, fp, lr}
   2727c:	b	27114 <__flatcc_fb_create_make_path_n@@Base>

00027280 <__flatcc_fb_find_basename@@Base>:
   27280:	mov	r2, r1
   27284:	cmp	r1, #0
   27288:	addne	r1, r0, r2
   2728c:	ldrbne	r3, [r1, #-1]
   27290:	cmpne	r3, #92	; 0x5c
   27294:	beq	272a4 <__flatcc_fb_find_basename@@Base+0x24>
   27298:	sub	r1, r2, #1
   2729c:	cmp	r3, #47	; 0x2f
   272a0:	bne	27280 <__flatcc_fb_find_basename@@Base>
   272a4:	mov	r0, r2
   272a8:	bx	lr

000272ac <__flatcc_fb_create_basename@@Base>:
   272ac:	push	{r4, r5, r6, sl, fp, lr}
   272b0:	add	fp, sp, #16
   272b4:	mov	r5, r2
   272b8:	mov	r6, r1
   272bc:	mov	r4, r0
   272c0:	bl	27280 <__flatcc_fb_find_basename@@Base>
   272c4:	add	r4, r4, r0
   272c8:	sub	r1, r6, r0
   272cc:	mov	r0, r4
   272d0:	mov	r2, r5
   272d4:	bl	26ed4 <__flatcc_fb_chomp@@Base>
   272d8:	mov	r5, r0
   272dc:	add	r0, r0, #1
   272e0:	bl	14870 <malloc@plt>
   272e4:	mov	r6, r0
   272e8:	cmp	r0, #0
   272ec:	beq	27308 <__flatcc_fb_create_basename@@Base+0x5c>
   272f0:	mov	r0, r6
   272f4:	mov	r1, r4
   272f8:	mov	r2, r5
   272fc:	bl	14810 <memcpy@plt>
   27300:	mov	r0, #0
   27304:	strb	r0, [r6, r5]
   27308:	mov	r0, r6
   2730c:	pop	{r4, r5, r6, sl, fp, pc}

00027310 <__flatcc_fb_read_file@@Base>:
   27310:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27314:	add	fp, sp, #24
   27318:	sub	sp, sp, #8
   2731c:	mov	r7, r1
   27320:	add	r9, sp, #4
   27324:	cmp	r2, #0
   27328:	movne	r9, r2
   2732c:	movw	r1, #50360	; 0xc4b8
   27330:	movt	r1, #4
   27334:	bl	147f8 <fopen@plt>
   27338:	cmp	r0, #0
   2733c:	beq	273d4 <__flatcc_fb_read_file@@Base+0xc4>
   27340:	mov	r6, r0
   27344:	mov	r8, #0
   27348:	mov	r1, #0
   2734c:	mov	r2, #2
   27350:	bl	14960 <fseek@plt>
   27354:	mov	r0, r6
   27358:	bl	1481c <ftell@plt>
   2735c:	mov	r5, r0
   27360:	str	r0, [r9]
   27364:	cmp	r7, #0
   27368:	cmpne	r5, r7
   2736c:	bhi	273e4 <__flatcc_fb_read_file@@Base+0xd4>
   27370:	mov	r0, r6
   27374:	bl	14840 <rewind@plt>
   27378:	cmp	r5, #0
   2737c:	mov	r0, r5
   27380:	movweq	r0, #1
   27384:	bl	14870 <malloc@plt>
   27388:	cmp	r0, #0
   2738c:	beq	273e4 <__flatcc_fb_read_file@@Base+0xd4>
   27390:	mov	r7, r0
   27394:	mov	r8, r0
   27398:	mov	r1, #0
   2739c:	mov	r4, r1
   273a0:	add	r0, r7, r1
   273a4:	sub	r2, r5, r1
   273a8:	mov	r1, #1
   273ac:	mov	r3, r6
   273b0:	bl	14954 <fread_unlocked@plt>
   273b4:	add	r1, r0, r4
   273b8:	cmp	r0, #0
   273bc:	bne	2739c <__flatcc_fb_read_file@@Base+0x8c>
   273c0:	cmp	r5, r4
   273c4:	bne	273dc <__flatcc_fb_read_file@@Base+0xcc>
   273c8:	mov	r0, r6
   273cc:	bl	1490c <fclose@plt>
   273d0:	b	27400 <__flatcc_fb_read_file@@Base+0xf0>
   273d4:	mov	r5, #0
   273d8:	b	273fc <__flatcc_fb_read_file@@Base+0xec>
   273dc:	cmp	r6, #0
   273e0:	beq	273ec <__flatcc_fb_read_file@@Base+0xdc>
   273e4:	mov	r0, r6
   273e8:	bl	1490c <fclose@plt>
   273ec:	cmp	r8, #0
   273f0:	beq	273fc <__flatcc_fb_read_file@@Base+0xec>
   273f4:	mov	r0, r8
   273f8:	bl	14804 <free@plt>
   273fc:	mov	r8, #0
   27400:	str	r5, [r9]
   27404:	mov	r0, r8
   27408:	sub	sp, fp, #24
   2740c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027410 <__flatcc_fb_default_error_out@@Base>:
   27410:	mov	r0, r1
   27414:	movw	r1, #4272	; 0x10b0
   27418:	movt	r1, #6
   2741c:	ldr	r3, [r1]
   27420:	mov	r1, #1
   27424:	b	14858 <fwrite@plt>

00027428 <__flatcc_fb_print_error@@Base>:
   27428:	sub	sp, sp, #8
   2742c:	push	{r4, r5, fp, lr}
   27430:	add	fp, sp, #8
   27434:	sub	sp, sp, #208	; 0xd0
   27438:	mov	r5, r1
   2743c:	mov	r4, r0
   27440:	str	r2, [fp, #8]
   27444:	str	r3, [fp, #12]
   27448:	add	r3, fp, #8
   2744c:	str	r3, [fp, #-12]
   27450:	add	r0, sp, #4
   27454:	mov	r1, #200	; 0xc8
   27458:	mov	r2, r5
   2745c:	bl	1493c <vsnprintf@plt>
   27460:	mov	r5, r0
   27464:	cmp	r0, #200	; 0xc8
   27468:	blt	27484 <__flatcc_fb_print_error@@Base+0x5c>
   2746c:	mov	r0, #0
   27470:	strb	r0, [sp, #203]	; 0xcb
   27474:	movw	r0, #11822	; 0x2e2e
   27478:	movt	r0, #2606	; 0xa2e
   2747c:	str	r0, [sp, #199]	; 0xc7
   27480:	mov	r5, #199	; 0xc7
   27484:	ldr	r3, [r4, #12]
   27488:	ldr	r4, [r4, #8]
   2748c:	add	r1, sp, #4
   27490:	mov	r0, r3
   27494:	mov	r2, r5
   27498:	blx	r4
   2749c:	mov	r0, r5
   274a0:	sub	sp, fp, #8
   274a4:	pop	{r4, r5, fp, lr}
   274a8:	add	sp, sp, #8
   274ac:	bx	lr

000274b0 <__flatcc_error_find_file_of_token@@Base>:
   274b0:	mov	r2, r0
   274b4:	movw	r0, #21632	; 0x5480
   274b8:	movt	r0, #3
   274bc:	b	274c4 <__flatcc_error_find_file_of_token@@Base+0x14>
   274c0:	ldr	r2, [r2]
   274c4:	cmp	r2, #0
   274c8:	bxeq	lr
   274cc:	ldr	r3, [r2, #20]
   274d0:	cmp	r3, r1
   274d4:	bhi	274c0 <__flatcc_error_find_file_of_token@@Base+0x10>
   274d8:	ldr	r3, [r2, #24]
   274dc:	cmp	r3, r1
   274e0:	bls	274c0 <__flatcc_error_find_file_of_token@@Base+0x10>
   274e4:	ldr	r0, [r2, #520]	; 0x208
   274e8:	bx	lr

000274ec <__flatcc_error_report@@Base>:
   274ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   274f0:	add	fp, sp, #28
   274f4:	sub	sp, sp, #36	; 0x24
   274f8:	mov	r6, r3
   274fc:	mov	sl, r2
   27500:	mov	r7, r1
   27504:	mov	r9, r0
   27508:	ldr	r5, [fp, #12]
   2750c:	ldr	r4, [fp, #8]
   27510:	cmp	r1, #0
   27514:	beq	27520 <__flatcc_error_report@@Base+0x34>
   27518:	cmp	r4, #0
   2751c:	ldmeq	r7, {r4, r5}
   27520:	cmp	r4, #0
   27524:	moveq	r5, r4
   27528:	movw	r0, #21632	; 0x5480
   2752c:	movt	r0, #3
   27530:	moveq	r4, r0
   27534:	cmp	sl, #0
   27538:	moveq	sl, r0
   2753c:	cmp	r7, #0
   27540:	beq	27584 <__flatcc_error_report@@Base+0x98>
   27544:	cmp	r6, #0
   27548:	bne	27584 <__flatcc_error_report@@Base+0x98>
   2754c:	mov	r0, r9
   27550:	mov	r1, r7
   27554:	bl	274b0 <__flatcc_error_find_file_of_token@@Base>
   27558:	mov	r2, r0
   2755c:	ldr	r3, [r7, #8]
   27560:	ldr	r0, [r7, #12]
   27564:	stm	sp, {r0, r5}
   27568:	str	r4, [sp, #8]
   2756c:	str	sl, [sp, #12]
   27570:	movw	r1, #50363	; 0xc4bb
   27574:	movt	r1, #4
   27578:	mov	r0, r9
   2757c:	bl	27428 <__flatcc_fb_print_error@@Base>
   27580:	b	27668 <__flatcc_error_report@@Base+0x17c>
   27584:	cmp	r7, #0
   27588:	cmpne	r6, #0
   2758c:	bne	275d8 <__flatcc_error_report@@Base+0xec>
   27590:	orrs	r0, r7, r6
   27594:	beq	27640 <__flatcc_error_report@@Base+0x154>
   27598:	cmp	r6, #0
   2759c:	beq	27658 <__flatcc_error_report@@Base+0x16c>
   275a0:	mov	r0, r9
   275a4:	mov	r1, r6
   275a8:	bl	274b0 <__flatcc_error_find_file_of_token@@Base>
   275ac:	mov	r3, r0
   275b0:	ldm	r6, {r0, r1, r2, r7}
   275b4:	stm	sp, {r2, r7}
   275b8:	str	r1, [sp, #8]
   275bc:	str	r0, [sp, #12]
   275c0:	movw	r1, #50456	; 0xc518
   275c4:	movt	r1, #4
   275c8:	mov	r0, r9
   275cc:	mov	r2, sl
   275d0:	bl	27428 <__flatcc_fb_print_error@@Base>
   275d4:	b	27668 <__flatcc_error_report@@Base+0x17c>
   275d8:	mov	r0, r9
   275dc:	mov	r1, r7
   275e0:	bl	274b0 <__flatcc_error_find_file_of_token@@Base>
   275e4:	mov	r8, r0
   275e8:	mov	r0, r9
   275ec:	mov	r1, r6
   275f0:	bl	274b0 <__flatcc_error_find_file_of_token@@Base>
   275f4:	ldr	r3, [r7, #8]
   275f8:	ldr	r1, [r7, #12]
   275fc:	ldm	r6, {r2, ip}
   27600:	ldr	r7, [r6, #8]
   27604:	ldr	r6, [r6, #12]
   27608:	str	r2, [sp, #32]
   2760c:	stm	sp, {r1, r5}
   27610:	str	r4, [sp, #8]
   27614:	str	sl, [sp, #12]
   27618:	str	r0, [sp, #16]
   2761c:	str	r7, [sp, #20]
   27620:	str	r6, [sp, #24]
   27624:	str	ip, [sp, #28]
   27628:	movw	r1, #50394	; 0xc4da
   2762c:	movt	r1, #4
   27630:	mov	r0, r9
   27634:	mov	r2, r8
   27638:	bl	27428 <__flatcc_fb_print_error@@Base>
   2763c:	b	27668 <__flatcc_error_report@@Base+0x17c>
   27640:	movw	r1, #50445	; 0xc50d
   27644:	movt	r1, #4
   27648:	mov	r0, r9
   2764c:	mov	r2, sl
   27650:	bl	27428 <__flatcc_fb_print_error@@Base>
   27654:	b	27668 <__flatcc_error_report@@Base+0x17c>
   27658:	movw	r1, #50487	; 0xc537
   2765c:	movt	r1, #4
   27660:	mov	r0, r9
   27664:	bl	27428 <__flatcc_fb_print_error@@Base>
   27668:	ldr	r0, [r9, #108]	; 0x6c
   2766c:	add	r0, r0, #1
   27670:	str	r0, [r9, #108]	; 0x6c
   27674:	sub	sp, fp, #28
   27678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002767c <error_ref_sym@@Base>:
   2767c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27680:	add	fp, sp, #28
   27684:	sub	sp, sp, #76	; 0x4c
   27688:	mov	sl, r1
   2768c:	cmp	r1, #0
   27690:	beq	27714 <error_ref_sym@@Base+0x98>
   27694:	str	r3, [sp, #12]
   27698:	str	r0, [sp, #16]
   2769c:	str	r2, [sp, #20]
   276a0:	mov	r5, #50	; 0x32
   276a4:	mov	r6, #0
   276a8:	add	r8, sp, #25
   276ac:	mov	r9, #46	; 0x2e
   276b0:	mov	r7, sl
   276b4:	add	r0, r8, r6
   276b8:	ldr	r2, [r7, #4]
   276bc:	ldm	r2, {r1, r4}
   276c0:	cmp	r5, r4
   276c4:	movlt	r4, r5
   276c8:	mov	r2, r4
   276cc:	bl	14810 <memcpy@plt>
   276d0:	add	r0, r4, r6
   276d4:	strb	r9, [r8, r0]
   276d8:	mvn	r1, r4
   276dc:	add	r5, r5, r1
   276e0:	add	r6, r0, #1
   276e4:	ldr	r7, [r7]
   276e8:	cmp	r7, #0
   276ec:	beq	276f8 <error_ref_sym@@Base+0x7c>
   276f0:	cmp	r5, #0
   276f4:	bgt	276b4 <error_ref_sym@@Base+0x38>
   276f8:	mov	r1, #0
   276fc:	strb	r1, [r8, r6]
   27700:	cmp	r5, #0
   27704:	ble	27720 <error_ref_sym@@Base+0xa4>
   27708:	mvn	r0, r0
   2770c:	add	r6, r6, r0, asr #31
   27710:	b	27730 <error_ref_sym@@Base+0xb4>
   27714:	mov	r6, #0
   27718:	strb	r6, [sp, #25]
   2771c:	b	2773c <error_ref_sym@@Base+0xc0>
   27720:	movw	r0, #11822	; 0x2e2e
   27724:	movt	r0, #46	; 0x2e
   27728:	str	r0, [sp, #72]	; 0x48
   2772c:	mov	r6, #50	; 0x32
   27730:	ldr	r2, [sp, #20]
   27734:	ldr	r0, [sp, #16]
   27738:	ldr	r3, [sp, #12]
   2773c:	ldr	r1, [sl, #4]
   27740:	cmp	r3, #0
   27744:	beq	27750 <error_ref_sym@@Base+0xd4>
   27748:	ldr	r3, [r3, #4]
   2774c:	b	27754 <error_ref_sym@@Base+0xd8>
   27750:	mov	r3, #0
   27754:	add	r7, sp, #25
   27758:	str	r7, [sp]
   2775c:	str	r6, [sp, #4]
   27760:	bl	274ec <__flatcc_error_report@@Base>
   27764:	sub	sp, fp, #28
   27768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002776c <__flatcc_fb_init_parser@@Base>:
   2776c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27770:	add	fp, sp, #24
   27774:	mov	r5, r3
   27778:	mov	r6, r2
   2777c:	mov	r8, r1
   27780:	mov	r4, r0
   27784:	mov	r1, #0
   27788:	mov	r2, #560	; 0x230
   2778c:	bl	148dc <memset@plt>
   27790:	cmp	r5, #0
   27794:	beq	277a8 <__flatcc_fb_init_parser@@Base+0x3c>
   27798:	ldr	r1, [fp, #8]
   2779c:	str	r5, [r4, #8]
   277a0:	str	r1, [r4, #12]
   277a4:	b	277b4 <__flatcc_fb_init_parser@@Base+0x48>
   277a8:	movw	r0, #29712	; 0x7410
   277ac:	movt	r0, #2
   277b0:	str	r0, [r4, #8]
   277b4:	ldr	r5, [fp, #12]
   277b8:	add	r0, r4, #128	; 0x80
   277bc:	cmp	r8, #0
   277c0:	beq	277d4 <__flatcc_fb_init_parser@@Base+0x68>
   277c4:	mov	r1, r8
   277c8:	mov	r2, #224	; 0xe0
   277cc:	bl	14810 <memcpy@plt>
   277d0:	b	277d8 <__flatcc_fb_init_parser@@Base+0x6c>
   277d4:	bl	14bd0 <flatcc_init_options@@Base>
   277d8:	cmp	r5, #0
   277dc:	addeq	r5, r4, #416	; 0x1a0
   277e0:	str	r5, [r4, #412]	; 0x19c
   277e4:	ldr	r0, [r4, #192]	; 0xc0
   277e8:	movw	r1, #50521	; 0xc559
   277ec:	movt	r1, #4
   277f0:	cmp	r0, #8
   277f4:	bhi	27908 <__flatcc_fb_init_parser@@Base+0x19c>
   277f8:	mov	r2, #1
   277fc:	mov	r3, #276	; 0x114
   27800:	tst	r3, r2, lsl r0
   27804:	beq	27908 <__flatcc_fb_init_parser@@Base+0x19c>
   27808:	ldr	r0, [r4, #196]	; 0xc4
   2780c:	movw	r1, #50577	; 0xc591
   27810:	movt	r1, #4
   27814:	cmp	r0, #8
   27818:	bhi	27908 <__flatcc_fb_init_parser@@Base+0x19c>
   2781c:	mov	r2, #1
   27820:	mov	r3, #276	; 0x114
   27824:	tst	r3, r2, lsl r0
   27828:	beq	27908 <__flatcc_fb_init_parser@@Base+0x19c>
   2782c:	movw	r7, #50634	; 0xc5ca
   27830:	movt	r7, #4
   27834:	cmp	r6, #0
   27838:	movne	r7, r6
   2783c:	mov	r0, r7
   27840:	bl	148b8 <strlen@plt>
   27844:	mov	r9, r0
   27848:	ldr	r2, [r8, #96]	; 0x60
   2784c:	mov	r0, r7
   27850:	mov	r1, r9
   27854:	bl	272ac <__flatcc_fb_create_basename@@Base>
   27858:	str	r0, [r4, #512]	; 0x200
   2785c:	bl	27948 <__flatcc_fb_init_parser@@Base+0x1dc>
   27860:	ldr	r5, [r4, #512]	; 0x200
   27864:	mov	r0, r5
   27868:	bl	148b8 <strlen@plt>
   2786c:	mov	r6, r0
   27870:	mov	r0, r5
   27874:	mov	r1, r6
   27878:	bl	26e18 <__flatcc_fb_copy_path_n@@Base>
   2787c:	mov	r5, r0
   27880:	bl	27948 <__flatcc_fb_init_parser@@Base+0x1dc>
   27884:	mov	r0, r5
   27888:	mov	r1, r6
   2788c:	bl	27980 <__flatcc_fb_init_parser@@Base+0x214>
   27890:	str	r5, [r4, #496]	; 0x1f0
   27894:	str	r6, [r4, #500]	; 0x1f4
   27898:	str	r5, [r4, #516]	; 0x204
   2789c:	movw	r2, #21632	; 0x5480
   278a0:	movt	r2, #3
   278a4:	mov	r0, r7
   278a8:	mov	r1, r9
   278ac:	bl	272ac <__flatcc_fb_create_basename@@Base>
   278b0:	str	r0, [r4, #520]	; 0x208
   278b4:	bl	27948 <__flatcc_fb_init_parser@@Base+0x1dc>
   278b8:	ldr	r0, [r8, #192]	; 0xc0
   278bc:	cmp	r0, #0
   278c0:	beq	278d0 <__flatcc_fb_init_parser@@Base+0x164>
   278c4:	str	r0, [r4, #476]	; 0x1dc
   278c8:	bl	148b8 <strlen@plt>
   278cc:	str	r0, [r4, #480]	; 0x1e0
   278d0:	mov	r5, #0
   278d4:	mov	r0, r4
   278d8:	mov	r1, #0
   278dc:	bl	279c0 <__flatcc_fb_init_parser@@Base+0x254>
   278e0:	mov	r6, r0
   278e4:	str	r0, [r4, #544]	; 0x220
   278e8:	ldr	r0, [r4, #412]	; 0x19c
   278ec:	mov	r1, #0
   278f0:	mov	r2, #0
   278f4:	bl	2645c <fb_scope_table_find@@Base>
   278f8:	cmp	r6, r0
   278fc:	bne	2791c <__flatcc_fb_init_parser@@Base+0x1b0>
   27900:	mov	r0, r5
   27904:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27908:	mov	r0, r4
   2790c:	bl	2793c <__flatcc_fb_init_parser@@Base+0x1d0>
   27910:	mvn	r5, #0
   27914:	mov	r0, r5
   27918:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2791c:	movw	r0, #50639	; 0xc5cf
   27920:	movt	r0, #4
   27924:	movw	r1, #50722	; 0xc622
   27928:	movt	r1, #4
   2792c:	movw	r3, #50792	; 0xc668
   27930:	movt	r3, #4
   27934:	movw	r2, #1331	; 0x533
   27938:	bl	14984 <__assert_fail@plt>
   2793c:	mov	r2, r1
   27940:	mov	r1, #0
   27944:	b	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   27948:	cmp	r0, #0
   2794c:	bxne	lr
   27950:	push	{fp, lr}
   27954:	mov	fp, sp
   27958:	movw	r0, #4272	; 0x10b0
   2795c:	movt	r0, #6
   27960:	ldr	r3, [r0]
   27964:	movw	r0, #20439	; 0x4fd7
   27968:	movt	r0, #3
   2796c:	mov	r1, #34	; 0x22
   27970:	mov	r2, #1
   27974:	bl	14858 <fwrite@plt>
   27978:	mov	r0, #1
   2797c:	bl	148a0 <exit@plt>
   27980:	push	{r4, r5, r6, sl, fp, lr}
   27984:	add	fp, sp, #16
   27988:	cmp	r1, #0
   2798c:	beq	279bc <__flatcc_fb_init_parser@@Base+0x250>
   27990:	mov	r4, r1
   27994:	mov	r5, r0
   27998:	ldrb	r6, [r5]
   2799c:	cmp	r6, #0
   279a0:	beq	279bc <__flatcc_fb_init_parser@@Base+0x250>
   279a4:	bl	14888 <__ctype_toupper_loc@plt>
   279a8:	ldr	r0, [r0]
   279ac:	ldr	r0, [r0, r6, lsl #2]
   279b0:	strb	r0, [r5], #1
   279b4:	subs	r4, r4, #1
   279b8:	bne	27998 <__flatcc_fb_init_parser@@Base+0x22c>
   279bc:	pop	{r4, r5, r6, sl, fp, pc}
   279c0:	push	{r4, r5, r6, sl, fp, lr}
   279c4:	add	fp, sp, #16
   279c8:	mov	r5, r1
   279cc:	mov	r4, r0
   279d0:	ldr	r0, [r0, #412]	; 0x19c
   279d4:	mov	r2, #0
   279d8:	bl	2645c <fb_scope_table_find@@Base>
   279dc:	mov	r6, r0
   279e0:	cmp	r0, #0
   279e4:	beq	279f0 <__flatcc_fb_init_parser@@Base+0x284>
   279e8:	mov	r0, r6
   279ec:	pop	{r4, r5, r6, sl, fp, pc}
   279f0:	mov	r0, r4
   279f4:	mov	r1, #28
   279f8:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   279fc:	mov	r6, r0
   27a00:	str	r5, [r0]
   27a04:	ldr	r0, [r4, #476]	; 0x1dc
   27a08:	ldr	r1, [r4, #480]	; 0x1e0
   27a0c:	str	r0, [r6, #20]
   27a10:	str	r1, [r6, #24]
   27a14:	ldr	r0, [r4, #412]	; 0x19c
   27a18:	mov	r1, r6
   27a1c:	mov	r2, #1
   27a20:	bl	26414 <fb_scope_table_insert_item@@Base>
   27a24:	mov	r0, r6
   27a28:	pop	{r4, r5, r6, sl, fp, pc}

00027a2c <__flatcc_fb_parse@@Base>:
   27a2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27a30:	add	fp, sp, #24
   27a34:	mov	r5, r3
   27a38:	mov	r6, r2
   27a3c:	mov	r7, r1
   27a40:	mov	r4, r0
   27a44:	mov	r0, #1
   27a48:	str	r1, [r4, #60]	; 0x3c
   27a4c:	str	r0, [r4, #64]	; 0x40
   27a50:	add	r0, r4, #68	; 0x44
   27a54:	movw	r1, #50907	; 0xc6db
   27a58:	movt	r1, #4
   27a5c:	mov	r2, #9
   27a60:	bl	27ae0 <__flatcc_fb_parse@@Base+0xb4>
   27a64:	add	r0, r4, #88	; 0x58
   27a68:	movw	r1, #56846	; 0xde0e
   27a6c:	movt	r1, #4
   27a70:	movw	r8, #64554	; 0xfc2a
   27a74:	movt	r8, #65535	; 0xffff
   27a78:	mov	r2, r8
   27a7c:	bl	27ae0 <__flatcc_fb_parse@@Base+0xb4>
   27a80:	cmp	r5, #0
   27a84:	strne	r7, [r4, #16]
   27a88:	mov	r0, r7
   27a8c:	mov	r1, r6
   27a90:	mov	r2, r4
   27a94:	bl	27b0c <__flatcc_fb_parse@@Base+0xe0>
   27a98:	ldr	r1, [r4, #20]
   27a9c:	ldr	r2, [r4, #40]	; 0x28
   27aa0:	ldr	r0, [r4, #216]	; 0xd8
   27aa4:	str	r2, [r4, #24]
   27aa8:	str	r1, [r4, #40]	; 0x28
   27aac:	bl	14870 <malloc@plt>
   27ab0:	str	r0, [r4, #112]	; 0x70
   27ab4:	bl	27948 <__flatcc_fb_init_parser@@Base+0x1dc>
   27ab8:	ldr	r0, [r4, #40]	; 0x28
   27abc:	ldr	r0, [r0, #16]
   27ac0:	add	r1, r8, #18
   27ac4:	cmp	r0, r1
   27ac8:	moveq	r0, r4
   27acc:	bleq	28a6c <__flatcc_fb_parse@@Base+0x1040>
   27ad0:	mov	r0, r4
   27ad4:	bl	28adc <__flatcc_fb_parse@@Base+0x10b0>
   27ad8:	ldr	r0, [r4, #108]	; 0x6c
   27adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27ae0:	push	{r4, sl, fp, lr}
   27ae4:	add	fp, sp, #8
   27ae8:	mov	r4, r0
   27aec:	str	r1, [r0]
   27af0:	str	r2, [r0, #16]
   27af4:	mov	r0, r1
   27af8:	bl	148b8 <strlen@plt>
   27afc:	mov	r1, #0
   27b00:	stmib	r4, {r0, r1}
   27b04:	str	r1, [r4, #12]
   27b08:	pop	{r4, sl, fp, pc}
   27b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27b10:	add	fp, sp, #28
   27b14:	sub	sp, sp, #20
   27b18:	mov	r4, r2
   27b1c:	mov	r5, r0
   27b20:	add	r8, r0, r1
   27b24:	cmp	r1, #0
   27b28:	beq	289ec <__flatcc_fb_parse@@Base+0xfc0>
   27b2c:	sub	r0, r8, #1
   27b30:	str	r0, [sp, #16]
   27b34:	sub	r0, r8, #2
   27b38:	str	r0, [sp, #12]
   27b3c:	movw	r0, #15934	; 0x3e3e
   27b40:	movt	r0, #61	; 0x3d
   27b44:	add	r0, r0, #65536	; 0x10000
   27b48:	str	r0, [sp, #8]
   27b4c:	mov	sl, #48	; 0x30
   27b50:	movw	r9, #53459	; 0xd0d3
   27b54:	movt	r9, #4
   27b58:	mov	r6, r5
   27b5c:	ldrb	r1, [r5]
   27b60:	cmp	r1, #126	; 0x7e
   27b64:	bhi	27efc <__flatcc_fb_parse@@Base+0x4d0>
   27b68:	add	r0, pc, #0
   27b6c:	ldr	pc, [r0, r1, lsl #2]
   27b70:	andeq	r8, r2, r4, lsl sl
   27b74:	strdeq	r7, [r2], -ip
   27b78:	strdeq	r7, [r2], -ip
   27b7c:	strdeq	r7, [r2], -ip
   27b80:	strdeq	r7, [r2], -ip
   27b84:	strdeq	r7, [r2], -ip
   27b88:	strdeq	r7, [r2], -ip
   27b8c:	strdeq	r7, [r2], -ip
   27b90:	strdeq	r7, [r2], -ip
   27b94:	ldrdeq	r7, [r2], -r0
   27b98:	andeq	r7, r2, r8, lsr #30
   27b9c:	strdeq	r7, [r2], -ip
   27ba0:	strdeq	r7, [r2], -ip
   27ba4:	andeq	r7, r2, r0, asr #30
   27ba8:	strdeq	r7, [r2], -ip
   27bac:	strdeq	r7, [r2], -ip
   27bb0:	strdeq	r7, [r2], -ip
   27bb4:	strdeq	r7, [r2], -ip
   27bb8:	strdeq	r7, [r2], -ip
   27bbc:	strdeq	r7, [r2], -ip
   27bc0:	strdeq	r7, [r2], -ip
   27bc4:	strdeq	r7, [r2], -ip
   27bc8:	strdeq	r7, [r2], -ip
   27bcc:	strdeq	r7, [r2], -ip
   27bd0:	strdeq	r7, [r2], -ip
   27bd4:	strdeq	r7, [r2], -ip
   27bd8:	strdeq	r7, [r2], -ip
   27bdc:	strdeq	r7, [r2], -ip
   27be0:	strdeq	r7, [r2], -ip
   27be4:	strdeq	r7, [r2], -ip
   27be8:	strdeq	r7, [r2], -ip
   27bec:	strdeq	r7, [r2], -ip
   27bf0:	ldrdeq	r7, [r2], -r0
   27bf4:			; <UNDEFINED> instruction: 0x00027eb0
   27bf8:	andeq	r7, r2, ip, ror #30
   27bfc:	strdeq	r7, [r2], -ip
   27c00:	strdeq	r7, [r2], -ip
   27c04:			; <UNDEFINED> instruction: 0x00027eb0
   27c08:	andeq	r8, r2, r0, ror r1
   27c0c:	strdeq	r7, [r2], -ip
   27c10:	andeq	r7, r2, ip, ror #27
   27c14:	andeq	r7, r2, ip, ror #27
   27c18:	andeq	r8, r2, r0, lsr #3
   27c1c:	andeq	r8, r2, ip, asr #3
   27c20:	andeq	r7, r2, ip, ror #27
   27c24:	strdeq	r8, [r2], -ip
   27c28:	andeq	r8, r2, r4, lsr r2
   27c2c:	andeq	r8, r2, r8, asr r2
   27c30:			; <UNDEFINED> instruction: 0x000282b0
   27c34:	strdeq	r7, [r2], -r4
   27c38:	strdeq	r7, [r2], -r4
   27c3c:	strdeq	r7, [r2], -r4
   27c40:	strdeq	r7, [r2], -r4
   27c44:	strdeq	r7, [r2], -r4
   27c48:	strdeq	r7, [r2], -r4
   27c4c:	strdeq	r7, [r2], -r4
   27c50:	strdeq	r7, [r2], -r4
   27c54:	strdeq	r7, [r2], -r4
   27c58:	andeq	r8, r2, r4, lsr #6
   27c5c:	andeq	r7, r2, ip, ror #27
   27c60:	andeq	r8, r2, r4, asr r3
   27c64:	andeq	r8, r2, ip, lsl #7
   27c68:			; <UNDEFINED> instruction: 0x000283bc
   27c6c:	andeq	r7, r2, ip, ror #27
   27c70:	strdeq	r7, [r2], -ip
   27c74:	andeq	r7, r2, ip, ror #26
   27c78:	andeq	r7, r2, ip, ror #26
   27c7c:	andeq	r7, r2, ip, ror #26
   27c80:	andeq	r7, r2, ip, ror #26
   27c84:	andeq	r7, r2, ip, ror #26
   27c88:	andeq	r7, r2, ip, ror #26
   27c8c:	andeq	r7, r2, ip, ror #26
   27c90:	andeq	r7, r2, ip, ror #26
   27c94:	andeq	r7, r2, ip, ror #26
   27c98:	andeq	r7, r2, ip, ror #26
   27c9c:	andeq	r7, r2, ip, ror #26
   27ca0:	andeq	r7, r2, ip, ror #26
   27ca4:	andeq	r7, r2, ip, ror #26
   27ca8:	andeq	r7, r2, ip, ror #26
   27cac:	andeq	r7, r2, ip, ror #26
   27cb0:	andeq	r7, r2, ip, ror #26
   27cb4:	andeq	r7, r2, ip, ror #26
   27cb8:	andeq	r7, r2, ip, ror #26
   27cbc:	andeq	r7, r2, ip, ror #26
   27cc0:	andeq	r7, r2, ip, ror #26
   27cc4:	andeq	r7, r2, ip, ror #26
   27cc8:	andeq	r7, r2, ip, ror #26
   27ccc:	andeq	r7, r2, ip, ror #26
   27cd0:	andeq	r7, r2, ip, ror #26
   27cd4:	andeq	r7, r2, ip, ror #26
   27cd8:	andeq	r7, r2, ip, ror #26
   27cdc:	andeq	r7, r2, ip, ror #27
   27ce0:	andeq	r7, r2, ip, ror #27
   27ce4:	andeq	r7, r2, ip, ror #27
   27ce8:			; <UNDEFINED> instruction: 0x00027eb0
   27cec:	andeq	r7, r2, ip, ror #26
   27cf0:	strdeq	r7, [r2], -ip
   27cf4:	andeq	r7, r2, ip, ror #26
   27cf8:	andeq	r7, r2, ip, ror #26
   27cfc:	andeq	r7, r2, ip, ror #26
   27d00:	andeq	r7, r2, ip, ror #26
   27d04:	andeq	r7, r2, ip, ror #26
   27d08:	andeq	r7, r2, ip, ror #26
   27d0c:	andeq	r7, r2, ip, ror #26
   27d10:	andeq	r7, r2, ip, ror #26
   27d14:	andeq	r7, r2, ip, ror #26
   27d18:	andeq	r7, r2, ip, ror #26
   27d1c:	andeq	r7, r2, ip, ror #26
   27d20:	andeq	r7, r2, ip, ror #26
   27d24:	andeq	r7, r2, ip, ror #26
   27d28:	andeq	r7, r2, ip, ror #26
   27d2c:	andeq	r7, r2, ip, ror #26
   27d30:	andeq	r7, r2, ip, ror #26
   27d34:	andeq	r7, r2, ip, ror #26
   27d38:	andeq	r7, r2, ip, ror #26
   27d3c:	andeq	r7, r2, ip, ror #26
   27d40:	andeq	r7, r2, ip, ror #26
   27d44:	andeq	r7, r2, ip, ror #26
   27d48:	andeq	r7, r2, ip, ror #26
   27d4c:	andeq	r7, r2, ip, ror #26
   27d50:	andeq	r7, r2, ip, ror #26
   27d54:	andeq	r7, r2, ip, ror #26
   27d58:	andeq	r7, r2, ip, ror #26
   27d5c:	andeq	r7, r2, ip, ror #27
   27d60:	andeq	r8, r2, ip, ror #7
   27d64:	andeq	r7, r2, ip, ror #27
   27d68:			; <UNDEFINED> instruction: 0x00027eb0
   27d6c:	add	r5, r6, #1
   27d70:	lsl	r0, r1, #8
   27d74:	cmp	r5, r8
   27d78:	beq	27db0 <__flatcc_fb_parse@@Base+0x384>
   27d7c:	ldrb	r1, [r5]
   27d80:	ldrb	r2, [r9, r1]
   27d84:	cmp	r2, #0
   27d88:	beq	27db0 <__flatcc_fb_parse@@Base+0x384>
   27d8c:	orr	r0, r0, r1, lsl #16
   27d90:	add	r1, r6, #2
   27d94:	mov	r5, r1
   27d98:	cmp	r8, r1
   27d9c:	movne	r1, r5
   27da0:	ldrbne	r2, [r1], #1
   27da4:	ldrbne	r2, [r9, r2]
   27da8:	cmpne	r2, #0
   27dac:	bne	27d94 <__flatcc_fb_parse@@Base+0x368>
   27db0:	sub	r1, r5, r6
   27db4:	uxtab	r1, sl, r1
   27db8:	ldrb	r2, [r5, #-1]
   27dbc:	orr	r0, r0, r2, lsl #24
   27dc0:	orr	r0, r0, r1
   27dc4:	mov	r1, r6
   27dc8:	bl	28e04 <__flatcc_fb_clear_parser@@Base+0x2a8>
   27dcc:	mov	r1, r0
   27dd0:	mov	r0, r4
   27dd4:	mov	r2, r6
   27dd8:	mov	r3, r5
   27ddc:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   27de0:	cmp	r5, r8
   27de4:	bne	27b58 <__flatcc_fb_parse@@Base+0x12c>
   27de8:	b	289f0 <__flatcc_fb_parse@@Base+0xfc4>
   27dec:	add	r5, r6, #1
   27df0:	b	27dd0 <__flatcc_fb_parse@@Base+0x3a4>
   27df4:	mov	r5, r6
   27df8:	ldrb	r0, [r5, #1]!
   27dfc:	sub	r1, r0, #48	; 0x30
   27e00:	uxtb	r1, r1
   27e04:	cmp	r1, #10
   27e08:	bcc	27df8 <__flatcc_fb_parse@@Base+0x3cc>
   27e0c:	cmp	r0, #46	; 0x2e
   27e10:	mov	r0, r5
   27e14:	bne	27e40 <__flatcc_fb_parse@@Base+0x414>
   27e18:	add	r1, r5, #1
   27e1c:	mov	r5, r1
   27e20:	cmp	r8, r1
   27e24:	beq	27e40 <__flatcc_fb_parse@@Base+0x414>
   27e28:	mov	r1, r5
   27e2c:	ldrb	r2, [r1], #1
   27e30:	sub	r2, r2, #48	; 0x30
   27e34:	uxtb	r2, r2
   27e38:	cmp	r2, #10
   27e3c:	bcc	27e1c <__flatcc_fb_parse@@Base+0x3f0>
   27e40:	cmp	r5, r8
   27e44:	beq	27e9c <__flatcc_fb_parse@@Base+0x470>
   27e48:	ldrb	r1, [r5]
   27e4c:	orr	r1, r1, #32
   27e50:	cmp	r1, #101	; 0x65
   27e54:	bne	27e9c <__flatcc_fb_parse@@Base+0x470>
   27e58:	add	r1, r5, #1
   27e5c:	cmp	r1, r8
   27e60:	beq	27e74 <__flatcc_fb_parse@@Base+0x448>
   27e64:	ldrb	r2, [r1]
   27e68:	cmp	r2, #43	; 0x2b
   27e6c:	cmpne	r2, #45	; 0x2d
   27e70:	movne	r1, r5
   27e74:	add	r1, r1, #1
   27e78:	mov	r5, r1
   27e7c:	cmp	r8, r1
   27e80:	beq	27e9c <__flatcc_fb_parse@@Base+0x470>
   27e84:	mov	r1, r5
   27e88:	ldrb	r2, [r1], #1
   27e8c:	sub	r2, r2, #48	; 0x30
   27e90:	uxtb	r2, r2
   27e94:	cmp	r2, #10
   27e98:	bcc	27e78 <__flatcc_fb_parse@@Base+0x44c>
   27e9c:	cmp	r0, r5
   27ea0:	mov	r0, r4
   27ea4:	moveq	r1, #10
   27ea8:	movne	r1, #11
   27eac:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   27eb0:	add	r5, r6, #1
   27eb4:	cmp	r5, r8
   27eb8:	beq	27dd0 <__flatcc_fb_parse@@Base+0x3a4>
   27ebc:	ldrb	r0, [r5]
   27ec0:	cmp	r0, #61	; 0x3d
   27ec4:	orreq	r1, r1, #15616	; 0x3d00
   27ec8:	addeq	r5, r6, #2
   27ecc:	b	27dd0 <__flatcc_fb_parse@@Base+0x3a4>
   27ed0:	add	r5, r6, #1
   27ed4:	cmp	r5, r8
   27ed8:	beq	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   27edc:	ldrb	r0, [r5]
   27ee0:	cmp	r0, #32
   27ee4:	cmpne	r0, #9
   27ee8:	bne	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   27eec:	add	r5, r5, #1
   27ef0:	cmp	r8, r5
   27ef4:	bne	27edc <__flatcc_fb_parse@@Base+0x4b0>
   27ef8:	b	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   27efc:	add	r5, r6, #1
   27f00:	cmp	r1, #32
   27f04:	bcc	27f10 <__flatcc_fb_parse@@Base+0x4e4>
   27f08:	cmp	r1, #127	; 0x7f
   27f0c:	bne	27f1c <__flatcc_fb_parse@@Base+0x4f0>
   27f10:	cmp	r1, #9
   27f14:	cmpne	r1, #32
   27f18:	bne	28694 <__flatcc_fb_parse@@Base+0xc68>
   27f1c:	mov	r0, r4
   27f20:	mov	r1, #8
   27f24:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   27f28:	add	r5, r6, #1
   27f2c:	cmp	r5, r8
   27f30:	beq	27f58 <__flatcc_fb_parse@@Base+0x52c>
   27f34:	ldrb	r0, [r6, #1]
   27f38:	cmp	r0, #13
   27f3c:	b	27f54 <__flatcc_fb_parse@@Base+0x528>
   27f40:	add	r5, r6, #1
   27f44:	cmp	r5, r8
   27f48:	beq	27f58 <__flatcc_fb_parse@@Base+0x52c>
   27f4c:	ldrb	r0, [r6, #1]
   27f50:	cmp	r0, #10
   27f54:	addeq	r5, r6, #2
   27f58:	str	r5, [r4, #60]	; 0x3c
   27f5c:	ldr	r0, [r4, #64]	; 0x40
   27f60:	add	r0, r0, #1
   27f64:	str	r0, [r4, #64]	; 0x40
   27f68:	b	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   27f6c:	add	r7, r6, #1
   27f70:	mov	r0, r4
   27f74:	mov	r1, #19
   27f78:	mov	r2, r6
   27f7c:	mov	r3, r7
   27f80:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   27f84:	mov	sl, r7
   27f88:	mov	r5, r7
   27f8c:	cmp	r8, r7
   27f90:	beq	27fa4 <__flatcc_fb_parse@@Base+0x578>
   27f94:	ldrb	r0, [r5]
   27f98:	cmp	r0, #34	; 0x22
   27f9c:	cmpne	r0, #92	; 0x5c
   27fa0:	bne	27fc8 <__flatcc_fb_parse@@Base+0x59c>
   27fa4:	cmp	sl, r5
   27fa8:	beq	27fe0 <__flatcc_fb_parse@@Base+0x5b4>
   27fac:	mov	r0, r4
   27fb0:	mov	r1, #20
   27fb4:	mov	r2, sl
   27fb8:	mov	r3, r5
   27fbc:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   27fc0:	mov	r6, r5
   27fc4:	b	27fe4 <__flatcc_fb_parse@@Base+0x5b8>
   27fc8:	cmp	r0, #32
   27fcc:	bcc	27fa4 <__flatcc_fb_parse@@Base+0x578>
   27fd0:	add	r7, r5, #1
   27fd4:	cmp	r0, #127	; 0x7f
   27fd8:	bne	27f88 <__flatcc_fb_parse@@Base+0x55c>
   27fdc:	b	27fa4 <__flatcc_fb_parse@@Base+0x578>
   27fe0:	mov	r6, sl
   27fe4:	ldrb	r0, [r5]
   27fe8:	cmp	r0, #34	; 0x22
   27fec:	mov	sl, #48	; 0x30
   27ff0:	beq	28470 <__flatcc_fb_parse@@Base+0xa44>
   27ff4:	cmp	r8, r5
   27ff8:	cmpne	r0, #0
   27ffc:	beq	28480 <__flatcc_fb_parse@@Base+0xa54>
   28000:	cmp	r0, #92	; 0x5c
   28004:	bne	280cc <__flatcc_fb_parse@@Base+0x6a0>
   28008:	add	sl, r5, #1
   2800c:	mov	r0, r4
   28010:	mov	r1, #21
   28014:	mov	r2, r6
   28018:	mov	r3, sl
   2801c:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28020:	ldr	r0, [sp, #16]
   28024:	cmp	r0, r5
   28028:	beq	28490 <__flatcc_fb_parse@@Base+0xa64>
   2802c:	ldrb	r0, [sl]
   28030:	cmp	r0, #34	; 0x22
   28034:	bhi	28100 <__flatcc_fb_parse@@Base+0x6d4>
   28038:	add	r1, pc, #0
   2803c:	ldr	pc, [r1, r0, lsl #2]
   28040:	muleq	r2, r0, r4
   28044:	andeq	r8, r2, r0, lsl r1
   28048:	andeq	r8, r2, r0, lsl r1
   2804c:	andeq	r8, r2, r0, lsl r1
   28050:	andeq	r8, r2, r0, lsl r1
   28054:	andeq	r8, r2, r0, lsl r1
   28058:	andeq	r8, r2, r0, lsl r1
   2805c:	andeq	r8, r2, r0, lsl r1
   28060:	andeq	r8, r2, r0, lsl r1
   28064:	andeq	r8, r2, r0, lsl r1
   28068:	andeq	r8, r2, r8, lsl r1
   2806c:	andeq	r8, r2, r0, lsl r1
   28070:	andeq	r8, r2, r0, lsl r1
   28074:	andeq	r8, r2, r4, lsr r1
   28078:	andeq	r8, r2, r0, lsl r1
   2807c:	andeq	r8, r2, r0, lsl r1
   28080:	andeq	r8, r2, r0, lsl r1
   28084:	andeq	r8, r2, r0, lsl r1
   28088:	andeq	r8, r2, r0, lsl r1
   2808c:	andeq	r8, r2, r0, lsl r1
   28090:	andeq	r8, r2, r0, lsl r1
   28094:	andeq	r8, r2, r0, lsl r1
   28098:	andeq	r8, r2, r0, lsl r1
   2809c:	andeq	r8, r2, r0, lsl r1
   280a0:	andeq	r8, r2, r0, lsl r1
   280a4:	andeq	r8, r2, r0, lsl r1
   280a8:	andeq	r8, r2, r0, lsl r1
   280ac:	andeq	r8, r2, r0, lsl r1
   280b0:	andeq	r8, r2, r0, lsl r1
   280b4:	andeq	r8, r2, r0, lsl r1
   280b8:	andeq	r8, r2, r0, lsl r1
   280bc:	andeq	r8, r2, r0, lsl r1
   280c0:	andeq	r8, r2, r0, lsl r1
   280c4:	andeq	r8, r2, r0, lsl r1
   280c8:	andeq	r8, r2, r8, lsl #2
   280cc:	ldrb	r0, [r5]
   280d0:	mov	sl, r5
   280d4:	cmp	r0, #13
   280d8:	cmpne	r0, #10
   280dc:	beq	285a4 <__flatcc_fb_parse@@Base+0xb78>
   280e0:	add	r3, r6, #1
   280e4:	mov	r0, r4
   280e8:	mov	r1, #6
   280ec:	mov	r2, r6
   280f0:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   280f4:	add	r7, sl, #1
   280f8:	mov	sl, r7
   280fc:	b	27f88 <__flatcc_fb_parse@@Base+0x55c>
   28100:	cmp	r0, #92	; 0x5c
   28104:	bne	28110 <__flatcc_fb_parse@@Base+0x6e4>
   28108:	add	r7, r5, #2
   2810c:	b	27f88 <__flatcc_fb_parse@@Base+0x55c>
   28110:	mov	r6, sl
   28114:	b	280d4 <__flatcc_fb_parse@@Base+0x6a8>
   28118:	add	r7, r5, #2
   2811c:	ldr	r0, [sp, #12]
   28120:	cmp	r0, r5
   28124:	beq	28150 <__flatcc_fb_parse@@Base+0x724>
   28128:	ldrb	r0, [r5, #2]
   2812c:	cmp	r0, #13
   28130:	b	2814c <__flatcc_fb_parse@@Base+0x720>
   28134:	add	r7, r5, #2
   28138:	ldr	r0, [sp, #12]
   2813c:	cmp	r0, r5
   28140:	beq	28150 <__flatcc_fb_parse@@Base+0x724>
   28144:	ldrb	r0, [r5, #2]
   28148:	cmp	r0, #10
   2814c:	addeq	r7, r5, #3
   28150:	str	r7, [r4, #60]	; 0x3c
   28154:	ldr	r0, [r4, #64]	; 0x40
   28158:	add	r0, r0, #1
   2815c:	str	r0, [r4, #64]	; 0x40
   28160:	mov	r0, r4
   28164:	mov	r1, #18
   28168:	mov	r2, sl
   2816c:	b	27f7c <__flatcc_fb_parse@@Base+0x550>
   28170:	add	r5, r6, #1
   28174:	cmp	r5, r8
   28178:	beq	284cc <__flatcc_fb_parse@@Base+0xaa0>
   2817c:	ldrb	r0, [r5]
   28180:	cmp	r0, #38	; 0x26
   28184:	beq	284b4 <__flatcc_fb_parse@@Base+0xa88>
   28188:	cmp	r0, #61	; 0x3d
   2818c:	bne	284cc <__flatcc_fb_parse@@Base+0xaa0>
   28190:	add	r5, r6, #2
   28194:	mov	r0, r4
   28198:	movw	r1, #15654	; 0x3d26
   2819c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   281a0:	add	r5, r6, #1
   281a4:	cmp	r5, r8
   281a8:	beq	2841c <__flatcc_fb_parse@@Base+0x9f0>
   281ac:	ldrb	r0, [r5]
   281b0:	cmp	r0, #42	; 0x2a
   281b4:	beq	284d8 <__flatcc_fb_parse@@Base+0xaac>
   281b8:	cmp	r0, #61	; 0x3d
   281bc:	bne	2841c <__flatcc_fb_parse@@Base+0x9f0>
   281c0:	mov	r0, r4
   281c4:	movw	r1, #15658	; 0x3d2a
   281c8:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   281cc:	add	r5, r6, #1
   281d0:	cmp	r5, r8
   281d4:	beq	28428 <__flatcc_fb_parse@@Base+0x9fc>
   281d8:	ldrb	r0, [r5]
   281dc:	cmp	r0, #43	; 0x2b
   281e0:	beq	284e4 <__flatcc_fb_parse@@Base+0xab8>
   281e4:	cmp	r0, #61	; 0x3d
   281e8:	bne	28428 <__flatcc_fb_parse@@Base+0x9fc>
   281ec:	add	r5, r6, #2
   281f0:	mov	r0, r4
   281f4:	movw	r1, #15659	; 0x3d2b
   281f8:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   281fc:	add	r5, r6, #1
   28200:	cmp	r5, r8
   28204:	beq	2844c <__flatcc_fb_parse@@Base+0xa20>
   28208:	ldrb	r0, [r5]
   2820c:	cmp	r0, #45	; 0x2d
   28210:	beq	285c4 <__flatcc_fb_parse@@Base+0xb98>
   28214:	cmp	r0, #62	; 0x3e
   28218:	beq	285d4 <__flatcc_fb_parse@@Base+0xba8>
   2821c:	cmp	r0, #61	; 0x3d
   28220:	bne	2844c <__flatcc_fb_parse@@Base+0xa20>
   28224:	add	r5, r6, #2
   28228:	mov	r0, r4
   2822c:	movw	r1, #15661	; 0x3d2d
   28230:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28234:	add	r5, r6, #1
   28238:	cmp	r5, r8
   2823c:	beq	286e0 <__flatcc_fb_parse@@Base+0xcb4>
   28240:	ldrb	r0, [r5]
   28244:	sub	r1, r0, #48	; 0x30
   28248:	cmp	r1, #10
   2824c:	bcs	286ac <__flatcc_fb_parse@@Base+0xc80>
   28250:	mov	r0, r6
   28254:	b	27e18 <__flatcc_fb_parse@@Base+0x3ec>
   28258:	add	r5, r6, #1
   2825c:	cmp	r5, r8
   28260:	beq	28458 <__flatcc_fb_parse@@Base+0xa2c>
   28264:	ldrb	r0, [r5]
   28268:	cmp	r0, #42	; 0x2a
   2826c:	beq	285e4 <__flatcc_fb_parse@@Base+0xbb8>
   28270:	cmp	r0, #61	; 0x3d
   28274:	beq	28614 <__flatcc_fb_parse@@Base+0xbe8>
   28278:	cmp	r0, #47	; 0x2f
   2827c:	bne	28458 <__flatcc_fb_parse@@Base+0xa2c>
   28280:	add	r0, r6, #2
   28284:	cmp	r0, r8
   28288:	beq	286f8 <__flatcc_fb_parse@@Base+0xccc>
   2828c:	ldrb	r1, [r0]
   28290:	sub	r2, r1, #33	; 0x21
   28294:	clz	r2, r2
   28298:	lsr	r2, r2, #5
   2829c:	sub	r1, r1, #47	; 0x2f
   282a0:	clz	r1, r1
   282a4:	lsr	r1, r1, #5
   282a8:	orr	r1, r1, r2
   282ac:	b	286fc <__flatcc_fb_parse@@Base+0xcd0>
   282b0:	add	r0, r6, #1
   282b4:	cmp	r0, r8
   282b8:	mov	r5, r6
   282bc:	beq	27df8 <__flatcc_fb_parse@@Base+0x3cc>
   282c0:	ldrb	r0, [r0]
   282c4:	orr	r0, r0, #32
   282c8:	cmp	r0, #120	; 0x78
   282cc:	mov	r5, r6
   282d0:	bne	27df8 <__flatcc_fb_parse@@Base+0x3cc>
   282d4:	add	r5, r6, #2
   282d8:	cmp	r5, r8
   282dc:	bne	282f0 <__flatcc_fb_parse@@Base+0x8c4>
   282e0:	b	28318 <__flatcc_fb_parse@@Base+0x8ec>
   282e4:	add	r5, r5, #1
   282e8:	cmp	r8, r5
   282ec:	beq	28318 <__flatcc_fb_parse@@Base+0x8ec>
   282f0:	ldrb	r0, [r5]
   282f4:	sub	r1, r0, #48	; 0x30
   282f8:	uxtb	r1, r1
   282fc:	cmp	r1, #10
   28300:	bcc	282e4 <__flatcc_fb_parse@@Base+0x8b8>
   28304:	orr	r0, r0, #32
   28308:	sub	r0, r0, #97	; 0x61
   2830c:	uxtb	r0, r0
   28310:	cmp	r0, #5
   28314:	bls	282e4 <__flatcc_fb_parse@@Base+0x8b8>
   28318:	mov	r0, r4
   2831c:	mov	r1, #14
   28320:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28324:	add	r5, r6, #1
   28328:	cmp	r5, r8
   2832c:	beq	28434 <__flatcc_fb_parse@@Base+0xa08>
   28330:	ldrb	r0, [r5]
   28334:	cmp	r0, #58	; 0x3a
   28338:	beq	284f4 <__flatcc_fb_parse@@Base+0xac8>
   2833c:	cmp	r0, #61	; 0x3d
   28340:	bne	28434 <__flatcc_fb_parse@@Base+0xa08>
   28344:	add	r5, r6, #2
   28348:	mov	r0, r4
   2834c:	movw	r1, #15674	; 0x3d3a
   28350:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28354:	add	r5, r6, #1
   28358:	cmp	r5, r8
   2835c:	beq	28464 <__flatcc_fb_parse@@Base+0xa38>
   28360:	ldrb	r0, [r5]
   28364:	cmp	r0, #61	; 0x3d
   28368:	beq	28624 <__flatcc_fb_parse@@Base+0xbf8>
   2836c:	cmp	r0, #60	; 0x3c
   28370:	beq	28634 <__flatcc_fb_parse@@Base+0xc08>
   28374:	cmp	r0, #45	; 0x2d
   28378:	bne	28464 <__flatcc_fb_parse@@Base+0xa38>
   2837c:	add	r5, r6, #2
   28380:	mov	r0, r4
   28384:	movw	r1, #11580	; 0x2d3c
   28388:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   2838c:	add	r5, r6, #1
   28390:	cmp	r5, r8
   28394:	beq	28688 <__flatcc_fb_parse@@Base+0xc5c>
   28398:	ldrb	r0, [r5]
   2839c:	cmp	r0, #61	; 0x3d
   283a0:	beq	28520 <__flatcc_fb_parse@@Base+0xaf4>
   283a4:	cmp	r0, #62	; 0x3e
   283a8:	bne	28688 <__flatcc_fb_parse@@Base+0xc5c>
   283ac:	add	r5, r6, #2
   283b0:	mov	r0, r4
   283b4:	movw	r1, #15933	; 0x3e3d
   283b8:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   283bc:	add	r5, r6, #1
   283c0:	cmp	r5, r8
   283c4:	beq	28440 <__flatcc_fb_parse@@Base+0xa14>
   283c8:	ldrb	r0, [r5]
   283cc:	cmp	r0, #62	; 0x3e
   283d0:	beq	2854c <__flatcc_fb_parse@@Base+0xb20>
   283d4:	cmp	r0, #61	; 0x3d
   283d8:	bne	28440 <__flatcc_fb_parse@@Base+0xa14>
   283dc:	add	r5, r6, #2
   283e0:	mov	r0, r4
   283e4:	movw	r1, #15678	; 0x3d3e
   283e8:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   283ec:	add	r5, r6, #1
   283f0:	cmp	r5, r8
   283f4:	beq	28598 <__flatcc_fb_parse@@Base+0xb6c>
   283f8:	ldrb	r0, [r5]
   283fc:	cmp	r0, #124	; 0x7c
   28400:	beq	28580 <__flatcc_fb_parse@@Base+0xb54>
   28404:	cmp	r0, #61	; 0x3d
   28408:	bne	28598 <__flatcc_fb_parse@@Base+0xb6c>
   2840c:	add	r5, r6, #2
   28410:	mov	r0, r4
   28414:	movw	r1, #15740	; 0x3d7c
   28418:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   2841c:	mov	r0, r4
   28420:	mov	r1, #42	; 0x2a
   28424:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28428:	mov	r0, r4
   2842c:	mov	r1, #43	; 0x2b
   28430:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28434:	mov	r0, r4
   28438:	mov	r1, #58	; 0x3a
   2843c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28440:	mov	r0, r4
   28444:	mov	r1, #62	; 0x3e
   28448:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   2844c:	mov	r0, r4
   28450:	mov	r1, #45	; 0x2d
   28454:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28458:	mov	r0, r4
   2845c:	mov	r1, #47	; 0x2f
   28460:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28464:	mov	r0, r4
   28468:	mov	r1, #60	; 0x3c
   2846c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28470:	add	r5, r5, #1
   28474:	mov	r0, r4
   28478:	mov	r1, #22
   2847c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28480:	mov	r0, r4
   28484:	mov	r1, #23
   28488:	mov	r2, r5
   2848c:	b	27dd8 <__flatcc_fb_parse@@Base+0x3ac>
   28490:	add	r5, r5, #1
   28494:	mov	r0, r4
   28498:	mov	r1, #23
   2849c:	mov	r2, r5
   284a0:	mov	r3, r5
   284a4:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   284a8:	mov	r6, r5
   284ac:	mov	sl, #48	; 0x30
   284b0:	b	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   284b4:	add	r5, r6, #2
   284b8:	mov	r0, r4
   284bc:	movw	r1, #9766	; 0x2626
   284c0:	mov	r2, r6
   284c4:	mov	r3, r5
   284c8:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   284cc:	mov	r0, r4
   284d0:	mov	r1, #38	; 0x26
   284d4:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   284d8:	mov	r0, r4
   284dc:	movw	r1, #10794	; 0x2a2a
   284e0:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   284e4:	add	r5, r6, #2
   284e8:	mov	r0, r4
   284ec:	movw	r1, #11051	; 0x2b2b
   284f0:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   284f4:	add	r5, r6, #2
   284f8:	cmp	r5, r8
   284fc:	beq	28668 <__flatcc_fb_parse@@Base+0xc3c>
   28500:	ldrb	r0, [r5]
   28504:	cmp	r0, #61	; 0x3d
   28508:	bne	28668 <__flatcc_fb_parse@@Base+0xc3c>
   2850c:	add	r5, r6, #3
   28510:	mov	r0, r4
   28514:	movw	r1, #14906	; 0x3a3a
   28518:	movt	r1, #61	; 0x3d
   2851c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28520:	add	r5, r6, #2
   28524:	cmp	r5, r8
   28528:	beq	28674 <__flatcc_fb_parse@@Base+0xc48>
   2852c:	ldrb	r0, [r5]
   28530:	cmp	r0, #61	; 0x3d
   28534:	bne	28674 <__flatcc_fb_parse@@Base+0xc48>
   28538:	add	r5, r6, #3
   2853c:	mov	r0, r4
   28540:	movw	r1, #15677	; 0x3d3d
   28544:	movt	r1, #61	; 0x3d
   28548:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   2854c:	add	r5, r6, #2
   28550:	cmp	r5, r8
   28554:	beq	286a0 <__flatcc_fb_parse@@Base+0xc74>
   28558:	ldrb	r0, [r5]
   2855c:	cmp	r0, #62	; 0x3e
   28560:	beq	28958 <__flatcc_fb_parse@@Base+0xf2c>
   28564:	cmp	r0, #61	; 0x3d
   28568:	bne	286a0 <__flatcc_fb_parse@@Base+0xc74>
   2856c:	add	r5, r6, #3
   28570:	mov	r0, r4
   28574:	movw	r1, #15934	; 0x3e3e
   28578:	movt	r1, #61	; 0x3d
   2857c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28580:	add	r5, r6, #2
   28584:	mov	r0, r4
   28588:	movw	r1, #31868	; 0x7c7c
   2858c:	mov	r2, r6
   28590:	mov	r3, r5
   28594:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28598:	mov	r0, r4
   2859c:	mov	r1, #124	; 0x7c
   285a0:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   285a4:	mov	r0, r4
   285a8:	mov	r1, #23
   285ac:	mov	r2, sl
   285b0:	mov	r3, sl
   285b4:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   285b8:	mov	r5, sl
   285bc:	mov	sl, #48	; 0x30
   285c0:	b	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   285c4:	add	r5, r6, #2
   285c8:	mov	r0, r4
   285cc:	movw	r1, #11565	; 0x2d2d
   285d0:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   285d4:	add	r5, r6, #2
   285d8:	mov	r0, r4
   285dc:	movw	r1, #15917	; 0x3e2d
   285e0:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   285e4:	add	r0, r6, #2
   285e8:	cmp	r0, r8
   285ec:	beq	287f8 <__flatcc_fb_parse@@Base+0xdcc>
   285f0:	ldrb	r1, [r0]
   285f4:	sub	r2, r1, #33	; 0x21
   285f8:	clz	r2, r2
   285fc:	lsr	r2, r2, #5
   28600:	sub	r1, r1, #42	; 0x2a
   28604:	clz	r1, r1
   28608:	lsr	r1, r1, #5
   2860c:	orr	r1, r1, r2
   28610:	b	287fc <__flatcc_fb_parse@@Base+0xdd0>
   28614:	add	r5, r6, #2
   28618:	mov	r0, r4
   2861c:	movw	r1, #15663	; 0x3d2f
   28620:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28624:	add	r5, r6, #2
   28628:	mov	r0, r4
   2862c:	movw	r1, #15676	; 0x3d3c
   28630:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28634:	add	r5, r6, #2
   28638:	cmp	r5, r8
   2863c:	beq	286ec <__flatcc_fb_parse@@Base+0xcc0>
   28640:	ldrb	r0, [r5]
   28644:	cmp	r0, #60	; 0x3c
   28648:	beq	28990 <__flatcc_fb_parse@@Base+0xf64>
   2864c:	cmp	r0, #61	; 0x3d
   28650:	bne	286ec <__flatcc_fb_parse@@Base+0xcc0>
   28654:	add	r5, r6, #3
   28658:	mov	r0, r4
   2865c:	movw	r1, #15420	; 0x3c3c
   28660:	movt	r1, #61	; 0x3d
   28664:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28668:	mov	r0, r4
   2866c:	movw	r1, #14906	; 0x3a3a
   28670:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28674:	mov	r0, r4
   28678:	movw	r1, #15677	; 0x3d3d
   2867c:	mov	r2, r6
   28680:	mov	r3, r5
   28684:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28688:	mov	r0, r4
   2868c:	mov	r1, #61	; 0x3d
   28690:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28694:	mov	r0, r4
   28698:	mov	r1, #5
   2869c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   286a0:	mov	r0, r4
   286a4:	movw	r1, #15934	; 0x3e3e
   286a8:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   286ac:	cmp	r0, #46	; 0x2e
   286b0:	bne	286e0 <__flatcc_fb_parse@@Base+0xcb4>
   286b4:	add	r5, r6, #2
   286b8:	cmp	r5, r8
   286bc:	beq	28984 <__flatcc_fb_parse@@Base+0xf58>
   286c0:	ldrb	r0, [r5]
   286c4:	cmp	r0, #46	; 0x2e
   286c8:	bne	28984 <__flatcc_fb_parse@@Base+0xf58>
   286cc:	add	r5, r6, #3
   286d0:	mov	r0, r4
   286d4:	movw	r1, #11822	; 0x2e2e
   286d8:	movt	r1, #46	; 0x2e
   286dc:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   286e0:	mov	r0, r4
   286e4:	mov	r1, #46	; 0x2e
   286e8:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   286ec:	mov	r0, r4
   286f0:	movw	r1, #15420	; 0x3c3c
   286f4:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   286f8:	mov	r1, #0
   286fc:	add	r5, r0, r1
   28700:	sub	r0, r5, r6
   28704:	sub	r0, r0, #3
   28708:	clz	r0, r0
   2870c:	lsr	r0, r0, #5
   28710:	str	r0, [r4, #32]
   28714:	str	r4, [sp, #4]
   28718:	mov	r0, r4
   2871c:	mov	r1, r5
   28720:	mov	r2, r5
   28724:	bl	28de4 <__flatcc_fb_clear_parser@@Base+0x288>
   28728:	b	28774 <__flatcc_fb_parse@@Base+0xd48>
   2872c:	cmp	r0, #0
   28730:	beq	28a44 <__flatcc_fb_parse@@Base+0x1018>
   28734:	sub	r0, r5, r4
   28738:	add	r5, r0, #1
   2873c:	ldrb	r0, [r6]
   28740:	cmp	r0, #32
   28744:	cmpne	r0, #9
   28748:	bne	28760 <__flatcc_fb_parse@@Base+0xd34>
   2874c:	add	r2, r6, #1
   28750:	ldr	r0, [sp, #4]
   28754:	mov	r1, r6
   28758:	bl	28de4 <__flatcc_fb_clear_parser@@Base+0x288>
   2875c:	b	28774 <__flatcc_fb_parse@@Base+0xd48>
   28760:	add	r3, r6, #1
   28764:	ldr	r0, [sp, #4]
   28768:	mov	r1, #7
   2876c:	mov	r2, r6
   28770:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28774:	sub	r0, r8, r5
   28778:	mov	r1, #0
   2877c:	mov	r4, r1
   28780:	adds	r7, r0, r1
   28784:	beq	287a0 <__flatcc_fb_parse@@Base+0xd74>
   28788:	ldrb	r2, [r5, -r4]
   2878c:	cmp	r2, #32
   28790:	bcc	287a0 <__flatcc_fb_parse@@Base+0xd74>
   28794:	sub	r1, r4, #1
   28798:	cmp	r2, #127	; 0x7f
   2879c:	bne	2877c <__flatcc_fb_parse@@Base+0xd50>
   287a0:	sub	sl, r5, r4
   287a4:	cmp	r4, #0
   287a8:	mov	r6, r5
   287ac:	beq	287c4 <__flatcc_fb_parse@@Base+0xd98>
   287b0:	ldr	r0, [sp, #4]
   287b4:	mov	r1, r5
   287b8:	mov	r2, sl
   287bc:	bl	28de4 <__flatcc_fb_clear_parser@@Base+0x288>
   287c0:	mov	r6, sl
   287c4:	cmp	r7, #0
   287c8:	beq	28a44 <__flatcc_fb_parse@@Base+0x1018>
   287cc:	ldrb	r0, [sl]
   287d0:	cmp	r0, #13
   287d4:	cmpne	r0, #10
   287d8:	bne	2872c <__flatcc_fb_parse@@Base+0xd00>
   287dc:	ldr	r0, [sp, #4]
   287e0:	mov	r1, #0
   287e4:	str	r1, [r0, #32]
   287e8:	sub	r5, r5, r4
   287ec:	mov	r4, r0
   287f0:	mov	sl, #48	; 0x30
   287f4:	b	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   287f8:	mov	r1, #0
   287fc:	add	r7, r0, r1
   28800:	sub	r0, r7, r6
   28804:	sub	r0, r0, #3
   28808:	clz	r0, r0
   2880c:	lsr	r0, r0, #5
   28810:	str	r0, [r4, #32]
   28814:	mov	r0, r4
   28818:	mov	r1, r7
   2881c:	mov	r2, r7
   28820:	bl	28de4 <__flatcc_fb_clear_parser@@Base+0x288>
   28824:	b	2883c <__flatcc_fb_parse@@Base+0xe10>
   28828:	addeq	r7, r5, #2
   2882c:	str	r7, [r4, #60]	; 0x3c
   28830:	ldr	r0, [r4, #64]	; 0x40
   28834:	add	r0, r0, #1
   28838:	str	r0, [r4, #64]	; 0x40
   2883c:	cmp	r7, r8
   28840:	mov	r5, r7
   28844:	beq	28888 <__flatcc_fb_parse@@Base+0xe5c>
   28848:	mov	r5, r7
   2884c:	b	2885c <__flatcc_fb_parse@@Base+0xe30>
   28850:	add	r5, r5, #1
   28854:	cmp	r8, r5
   28858:	beq	28888 <__flatcc_fb_parse@@Base+0xe5c>
   2885c:	ldrb	r0, [r5]
   28860:	cmp	r0, #32
   28864:	bcc	28888 <__flatcc_fb_parse@@Base+0xe5c>
   28868:	cmp	r0, #127	; 0x7f
   2886c:	beq	28888 <__flatcc_fb_parse@@Base+0xe5c>
   28870:	cmp	r0, #47	; 0x2f
   28874:	bne	28850 <__flatcc_fb_parse@@Base+0xe24>
   28878:	ldrb	r0, [r5, #-1]
   2887c:	cmp	r0, #42	; 0x2a
   28880:	bne	28850 <__flatcc_fb_parse@@Base+0xe24>
   28884:	sub	r5, r5, #1
   28888:	cmp	r7, r5
   2888c:	beq	288b0 <__flatcc_fb_parse@@Base+0xe84>
   28890:	mov	r0, r4
   28894:	mov	r1, r7
   28898:	mov	r2, r5
   2889c:	bl	28de4 <__flatcc_fb_clear_parser@@Base+0x288>
   288a0:	mov	r6, r5
   288a4:	cmp	r5, r8
   288a8:	bne	288bc <__flatcc_fb_parse@@Base+0xe90>
   288ac:	b	28a4c <__flatcc_fb_parse@@Base+0x1020>
   288b0:	mov	r6, r7
   288b4:	cmp	r5, r8
   288b8:	beq	28a4c <__flatcc_fb_parse@@Base+0x1020>
   288bc:	ldrb	r0, [r5]
   288c0:	cmp	r0, #10
   288c4:	beq	28910 <__flatcc_fb_parse@@Base+0xee4>
   288c8:	cmp	r0, #13
   288cc:	beq	28928 <__flatcc_fb_parse@@Base+0xefc>
   288d0:	cmp	r0, #0
   288d4:	beq	28a4c <__flatcc_fb_parse@@Base+0x1020>
   288d8:	cmp	r0, #32
   288dc:	bcc	288e8 <__flatcc_fb_parse@@Base+0xebc>
   288e0:	cmp	r0, #127	; 0x7f
   288e4:	bne	289d8 <__flatcc_fb_parse@@Base+0xfac>
   288e8:	add	r7, r5, #1
   288ec:	ldrb	r0, [r6]
   288f0:	cmp	r0, #32
   288f4:	cmpne	r0, #9
   288f8:	bne	28940 <__flatcc_fb_parse@@Base+0xf14>
   288fc:	add	r2, r6, #1
   28900:	mov	r0, r4
   28904:	mov	r1, r6
   28908:	bl	28de4 <__flatcc_fb_clear_parser@@Base+0x288>
   2890c:	b	2883c <__flatcc_fb_parse@@Base+0xe10>
   28910:	add	r7, r5, #1
   28914:	cmp	r7, r8
   28918:	beq	2882c <__flatcc_fb_parse@@Base+0xe00>
   2891c:	ldrb	r0, [r5, #1]
   28920:	cmp	r0, #13
   28924:	b	28828 <__flatcc_fb_parse@@Base+0xdfc>
   28928:	add	r7, r5, #1
   2892c:	cmp	r7, r8
   28930:	beq	2882c <__flatcc_fb_parse@@Base+0xe00>
   28934:	ldrb	r0, [r5, #1]
   28938:	cmp	r0, #10
   2893c:	b	28828 <__flatcc_fb_parse@@Base+0xdfc>
   28940:	add	r3, r6, #1
   28944:	mov	r0, r4
   28948:	mov	r1, #7
   2894c:	mov	r2, r6
   28950:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28954:	b	2883c <__flatcc_fb_parse@@Base+0xe10>
   28958:	add	r5, r6, #3
   2895c:	cmp	r5, r8
   28960:	beq	289bc <__flatcc_fb_parse@@Base+0xf90>
   28964:	ldrb	r0, [r5]
   28968:	cmp	r0, #61	; 0x3d
   2896c:	bne	289bc <__flatcc_fb_parse@@Base+0xf90>
   28970:	add	r5, r6, #4
   28974:	mov	r0, r4
   28978:	movw	r1, #15934	; 0x3e3e
   2897c:	movt	r1, #15678	; 0x3d3e
   28980:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28984:	mov	r0, r4
   28988:	movw	r1, #11822	; 0x2e2e
   2898c:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   28990:	add	r5, r6, #3
   28994:	cmp	r5, r8
   28998:	beq	289c8 <__flatcc_fb_parse@@Base+0xf9c>
   2899c:	ldrb	r0, [r5]
   289a0:	cmp	r0, #61	; 0x3d
   289a4:	bne	289c8 <__flatcc_fb_parse@@Base+0xf9c>
   289a8:	add	r5, r6, #4
   289ac:	mov	r0, r4
   289b0:	movw	r1, #15420	; 0x3c3c
   289b4:	movt	r1, #15676	; 0x3d3c
   289b8:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   289bc:	mov	r0, r4
   289c0:	ldr	r1, [sp, #8]
   289c4:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   289c8:	mov	r0, r4
   289cc:	movw	r1, #15420	; 0x3c3c
   289d0:	movt	r1, #60	; 0x3c
   289d4:	b	27dd4 <__flatcc_fb_parse@@Base+0x3a8>
   289d8:	mov	r0, #0
   289dc:	str	r0, [r4, #32]
   289e0:	add	r5, r5, #2
   289e4:	mov	r6, r5
   289e8:	b	27de0 <__flatcc_fb_parse@@Base+0x3b4>
   289ec:	mov	r6, r5
   289f0:	cmp	r5, r8
   289f4:	beq	28a04 <__flatcc_fb_parse@@Base+0xfd8>
   289f8:	ldrb	r0, [r5]
   289fc:	cmp	r0, #0
   28a00:	beq	28a28 <__flatcc_fb_parse@@Base+0xffc>
   28a04:	mov	r0, r4
   28a08:	mov	r1, #0
   28a0c:	mov	r2, r5
   28a10:	b	28a34 <__flatcc_fb_parse@@Base+0x1008>
   28a14:	mov	r0, r4
   28a18:	mov	r1, #0
   28a1c:	mov	r2, r6
   28a20:	mov	r3, r6
   28a24:	b	28a38 <__flatcc_fb_parse@@Base+0x100c>
   28a28:	mov	r0, r4
   28a2c:	mov	r1, #0
   28a30:	mov	r2, r6
   28a34:	mov	r3, r5
   28a38:	sub	sp, fp, #28
   28a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a40:	b	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28a44:	sub	r5, r5, r4
   28a48:	ldr	r4, [sp, #4]
   28a4c:	mov	r0, r4
   28a50:	mov	r1, #27
   28a54:	mov	r2, r5
   28a58:	mov	r3, r5
   28a5c:	bl	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28a60:	cmp	r5, r8
   28a64:	bne	289f8 <__flatcc_fb_parse@@Base+0xfcc>
   28a68:	b	28a04 <__flatcc_fb_parse@@Base+0xfd8>
   28a6c:	push	{r4, sl, fp, lr}
   28a70:	add	fp, sp, #8
   28a74:	mov	r4, r0
   28a78:	ldr	r2, [r0, #24]
   28a7c:	ldr	r0, [r0, #40]	; 0x28
   28a80:	add	r1, r0, #20
   28a84:	str	r1, [r4, #40]	; 0x28
   28a88:	cmp	r1, r2
   28a8c:	beq	28ab8 <__flatcc_fb_parse@@Base+0x108c>
   28a90:	ldr	r0, [r0, #36]	; 0x24
   28a94:	cmn	r0, #964	; 0x3c4
   28a98:	bne	28ab0 <__flatcc_fb_parse@@Base+0x1084>
   28a9c:	mov	r0, r4
   28aa0:	bl	29660 <__flatcc_fb_clear_parser@@Base+0xb04>
   28aa4:	ldr	r2, [r4, #24]
   28aa8:	ldr	r0, [r4, #40]	; 0x28
   28aac:	b	28a80 <__flatcc_fb_parse@@Base+0x1054>
   28ab0:	mov	r0, r1
   28ab4:	pop	{r4, sl, fp, pc}
   28ab8:	str	r0, [r4, #40]	; 0x28
   28abc:	movw	r0, #25261	; 0x62ad
   28ac0:	movt	r0, #4
   28ac4:	movw	r1, #50722	; 0xc622
   28ac8:	movt	r1, #4
   28acc:	movw	r3, #51021	; 0xc74d
   28ad0:	movt	r3, #4
   28ad4:	movw	r2, #341	; 0x155
   28ad8:	bl	14984 <__assert_fail@plt>
   28adc:	push	{r4, r5, fp, lr}
   28ae0:	add	fp, sp, #8
   28ae4:	mov	r4, r0
   28ae8:	bl	2968c <__flatcc_fb_clear_parser@@Base+0xb30>
   28aec:	ldr	r5, [r4, #40]	; 0x28
   28af0:	mov	r0, r5
   28af4:	bl	29758 <__flatcc_fb_clear_parser@@Base+0xbfc>
   28af8:	cmp	r0, #0
   28afc:	bne	28b44 <__flatcc_fb_parse@@Base+0x1118>
   28b00:	ldr	r0, [r4, #108]	; 0x6c
   28b04:	cmp	r0, #9
   28b08:	bgt	28b58 <__flatcc_fb_parse@@Base+0x112c>
   28b0c:	mov	r0, r4
   28b10:	bl	29768 <__flatcc_fb_clear_parser@@Base+0xc0c>
   28b14:	ldr	r1, [r4, #40]	; 0x28
   28b18:	cmp	r1, r5
   28b1c:	mov	r5, r1
   28b20:	bne	28af0 <__flatcc_fb_parse@@Base+0x10c4>
   28b24:	ldr	r0, [r4, #108]	; 0x6c
   28b28:	cmp	r0, #0
   28b2c:	popne	{r4, r5, fp, pc}
   28b30:	movw	r2, #51053	; 0xc76d
   28b34:	movt	r2, #4
   28b38:	mov	r0, r4
   28b3c:	pop	{r4, r5, fp, lr}
   28b40:	b	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   28b44:	add	r0, r4, #356	; 0x164
   28b48:	bl	29a1c <__flatcc_fb_clear_parser@@Base+0xec0>
   28b4c:	add	r0, r4, #392	; 0x188
   28b50:	pop	{r4, r5, fp, lr}
   28b54:	b	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   28b58:	pop	{r4, r5, fp, pc}

00028b5c <__flatcc_fb_clear_parser@@Base>:
   28b5c:	push	{r4, r5, fp, lr}
   28b60:	add	fp, sp, #8
   28b64:	mov	r4, r0
   28b68:	ldr	r5, [r0, #392]	; 0x188
   28b6c:	cmp	r5, #0
   28b70:	bne	28b84 <__flatcc_fb_clear_parser@@Base+0x28>
   28b74:	b	28ba4 <__flatcc_fb_clear_parser@@Base+0x48>
   28b78:	ldr	r5, [r5]
   28b7c:	cmp	r5, #0
   28b80:	beq	28ba4 <__flatcc_fb_clear_parser@@Base+0x48>
   28b84:	ldrh	r0, [r5, #8]
   28b88:	cmp	r0, #4
   28b8c:	bhi	28b78 <__flatcc_fb_clear_parser@@Base+0x1c>
   28b90:	add	r0, r5, #56	; 0x38
   28b94:	bl	25a2c <fb_symbol_table_clear@@Base>
   28b98:	add	r0, r5, #72	; 0x48
   28b9c:	bl	33140 <fb_value_set_clear@@Base>
   28ba0:	b	28b78 <__flatcc_fb_clear_parser@@Base+0x1c>
   28ba4:	add	r0, r4, #448	; 0x1c0
   28ba8:	bl	267f8 <fb_schema_table_clear@@Base>
   28bac:	add	r0, r4, #432	; 0x1b0
   28bb0:	bl	32b20 <fb_name_table_clear@@Base>
   28bb4:	add	r0, r4, #524	; 0x20c
   28bb8:	bl	25488 <ptr_set_clear@@Base>
   28bbc:	ldr	r0, [r4, #112]	; 0x70
   28bc0:	cmp	r0, #0
   28bc4:	beq	28bcc <__flatcc_fb_clear_parser@@Base+0x70>
   28bc8:	bl	14804 <free@plt>
   28bcc:	ldr	r0, [r4, #20]
   28bd0:	cmp	r0, #0
   28bd4:	beq	28bdc <__flatcc_fb_clear_parser@@Base+0x80>
   28bd8:	bl	14804 <free@plt>
   28bdc:	ldr	r0, [r4, #512]	; 0x200
   28be0:	cmp	r0, #0
   28be4:	beq	28bec <__flatcc_fb_clear_parser@@Base+0x90>
   28be8:	bl	14804 <free@plt>
   28bec:	ldr	r0, [r4, #516]	; 0x204
   28bf0:	cmp	r0, #0
   28bf4:	beq	28bfc <__flatcc_fb_clear_parser@@Base+0xa0>
   28bf8:	bl	14804 <free@plt>
   28bfc:	ldr	r0, [r4, #520]	; 0x208
   28c00:	cmp	r0, #0
   28c04:	beq	28c0c <__flatcc_fb_clear_parser@@Base+0xb0>
   28c08:	bl	14804 <free@plt>
   28c0c:	ldr	r0, [r4, #548]	; 0x224
   28c10:	cmp	r0, #0
   28c14:	beq	28c1c <__flatcc_fb_clear_parser@@Base+0xc0>
   28c18:	bl	14804 <free@plt>
   28c1c:	add	r0, r4, #416	; 0x1a0
   28c20:	movw	r1, #35932	; 0x8c5c
   28c24:	movt	r1, #2
   28c28:	mov	r2, #0
   28c2c:	bl	26098 <fb_scope_table_destroy@@Base>
   28c30:	mov	r0, r4
   28c34:	bl	28c64 <__flatcc_fb_clear_parser@@Base+0x108>
   28c38:	ldr	r0, [r4, #16]
   28c3c:	cmp	r0, #0
   28c40:	beq	28c48 <__flatcc_fb_clear_parser@@Base+0xec>
   28c44:	bl	14804 <free@plt>
   28c48:	mov	r0, r4
   28c4c:	mov	r1, #0
   28c50:	mov	r2, #560	; 0x230
   28c54:	pop	{r4, r5, fp, lr}
   28c58:	b	148dc <memset@plt>
   28c5c:	add	r0, r1, #4
   28c60:	b	25a2c <fb_symbol_table_clear@@Base>
   28c64:	push	{r4, sl, fp, lr}
   28c68:	add	fp, sp, #8
   28c6c:	ldr	r0, [r0, #48]	; 0x30
   28c70:	cmp	r0, #0
   28c74:	popeq	{r4, sl, fp, pc}
   28c78:	ldr	r4, [r0]
   28c7c:	bl	14804 <free@plt>
   28c80:	cmp	r4, #0
   28c84:	mov	r0, r4
   28c88:	bne	28c78 <__flatcc_fb_clear_parser@@Base+0x11c>
   28c8c:	pop	{r4, sl, fp, pc}
   28c90:	mov	r3, #0
   28c94:	b	28c98 <__flatcc_fb_clear_parser@@Base+0x13c>
   28c98:	push	{fp, lr}
   28c9c:	mov	fp, sp
   28ca0:	sub	sp, sp, #8
   28ca4:	mov	ip, #0
   28ca8:	str	ip, [sp]
   28cac:	str	ip, [sp, #4]
   28cb0:	bl	274ec <__flatcc_error_report@@Base>
   28cb4:	mov	sp, fp
   28cb8:	pop	{fp, pc}
   28cbc:	push	{r4, r5, r6, r7, fp, lr}
   28cc0:	add	fp, sp, #16
   28cc4:	mov	r4, r0
   28cc8:	ldr	r2, [r0, #44]	; 0x2c
   28ccc:	ldr	r0, [r0, #52]	; 0x34
   28cd0:	add	r1, r1, #15
   28cd4:	bic	r6, r1, #15
   28cd8:	add	r1, r0, r6
   28cdc:	cmp	r1, r2
   28ce0:	bls	28d18 <__flatcc_fb_clear_parser@@Base+0x1bc>
   28ce4:	mov	r7, #65536	; 0x10000
   28ce8:	mov	r0, #65536	; 0x10000
   28cec:	mov	r1, #1
   28cf0:	bl	147d4 <calloc@plt>
   28cf4:	mov	r5, r0
   28cf8:	bl	27948 <__flatcc_fb_init_parser@@Base+0x1dc>
   28cfc:	ldr	r0, [r4, #48]	; 0x30
   28d00:	mov	r1, r5
   28d04:	str	r0, [r1], r7
   28d08:	add	r0, r5, #16
   28d0c:	str	r1, [r4, #44]	; 0x2c
   28d10:	str	r5, [r4, #48]	; 0x30
   28d14:	str	r0, [r4, #52]	; 0x34
   28d18:	ldr	r1, [r4, #52]	; 0x34
   28d1c:	add	r1, r1, r6
   28d20:	str	r1, [r4, #52]	; 0x34
   28d24:	pop	{r4, r5, r6, r7, fp, pc}
   28d28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28d2c:	add	fp, sp, #24
   28d30:	mov	r9, r3
   28d34:	mov	r5, r2
   28d38:	mov	r8, r1
   28d3c:	mov	r4, r0
   28d40:	ldr	r1, [r0, #20]
   28d44:	ldr	r0, [r0, #28]
   28d48:	ldr	r7, [r4, #40]	; 0x28
   28d4c:	add	r2, r0, r0, lsl #2
   28d50:	add	r1, r1, r2, lsl #2
   28d54:	str	r1, [r4, #24]
   28d58:	cmp	r7, r1
   28d5c:	bne	28dac <__flatcc_fb_clear_parser@@Base+0x250>
   28d60:	lsl	r1, r0, #1
   28d64:	cmp	r0, #0
   28d68:	movweq	r1, #1024	; 0x400
   28d6c:	str	r1, [r4, #28]
   28d70:	add	r0, r1, r1, lsl #2
   28d74:	lsl	r1, r0, #2
   28d78:	ldr	r6, [r4, #20]
   28d7c:	mov	r0, r6
   28d80:	bl	1484c <realloc@plt>
   28d84:	str	r0, [r4, #20]
   28d88:	bl	27948 <__flatcc_fb_init_parser@@Base+0x1dc>
   28d8c:	sub	r0, r7, r6
   28d90:	ldr	r1, [r4, #20]
   28d94:	ldr	r2, [r4, #28]
   28d98:	add	r0, r1, r0
   28d9c:	str	r0, [r4, #40]	; 0x28
   28da0:	add	r0, r2, r2, lsl #2
   28da4:	add	r0, r1, r0, lsl #2
   28da8:	str	r0, [r4, #24]
   28dac:	sub	r0, r9, r5
   28db0:	ldr	r1, [r4, #40]	; 0x28
   28db4:	str	r0, [r1, #4]
   28db8:	str	r5, [r1]
   28dbc:	str	r8, [r1, #16]
   28dc0:	ldr	r0, [r4, #64]	; 0x40
   28dc4:	str	r0, [r1, #8]
   28dc8:	ldr	r0, [r4, #60]	; 0x3c
   28dcc:	sub	r0, r5, r0
   28dd0:	add	r0, r0, #1
   28dd4:	str	r0, [r1, #12]
   28dd8:	add	r0, r1, #20
   28ddc:	str	r0, [r4, #40]	; 0x28
   28de0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28de4:	mov	r3, r2
   28de8:	mov	r2, r1
   28dec:	ldr	r1, [r0, #32]
   28df0:	cmp	r1, #0
   28df4:	bxeq	lr
   28df8:	movw	r1, #64572	; 0xfc3c
   28dfc:	movt	r1, #65535	; 0xffff
   28e00:	b	28d28 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28e04:	push	{fp, lr}
   28e08:	mov	fp, sp
   28e0c:	movw	r2, #29242	; 0x723a
   28e10:	movt	r2, #25968	; 0x6570
   28e14:	cmp	r0, r2
   28e18:	ble	28e9c <__flatcc_fb_clear_parser@@Base+0x340>
   28e1c:	movw	r2, #26173	; 0x663d
   28e20:	movt	r2, #28265	; 0x6e69
   28e24:	cmp	r0, r2
   28e28:	bgt	28f24 <__flatcc_fb_clear_parser@@Base+0x3c8>
   28e2c:	movw	r2, #30004	; 0x7534
   28e30:	movt	r2, #26476	; 0x676c
   28e34:	cmp	r0, r2
   28e38:	ble	29004 <__flatcc_fb_clear_parser@@Base+0x4a8>
   28e3c:	movw	r2, #29493	; 0x7335
   28e40:	movt	r2, #26484	; 0x6774
   28e44:	cmp	r0, r2
   28e48:	ble	2915c <__flatcc_fb_clear_parser@@Base+0x600>
   28e4c:	movw	r2, #29494	; 0x7336
   28e50:	movt	r2, #26484	; 0x6774
   28e54:	cmp	r0, r2
   28e58:	beq	29384 <__flatcc_fb_clear_parser@@Base+0x828>
   28e5c:	movw	r2, #25140	; 0x6234
   28e60:	movt	r2, #27759	; 0x6c6f
   28e64:	cmp	r0, r2
   28e68:	beq	293ac <__flatcc_fb_clear_parser@@Base+0x850>
   28e6c:	movw	r2, #25908	; 0x6534
   28e70:	movt	r2, #28014	; 0x6d6e
   28e74:	cmp	r0, r2
   28e78:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28e7c:	movw	r0, #58987	; 0xe66b
   28e80:	movt	r0, #4
   28e84:	mov	r2, #4
   28e88:	bl	148ac <bcmp@plt>
   28e8c:	cmp	r0, #0
   28e90:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28e94:	mvn	r0, #996	; 0x3e4
   28e98:	pop	{fp, pc}
   28e9c:	movw	r2, #30004	; 0x7534
   28ea0:	movt	r2, #14441	; 0x3869
   28ea4:	cmp	r0, r2
   28ea8:	ble	28f9c <__flatcc_fb_clear_parser@@Base+0x440>
   28eac:	movw	r2, #29748	; 0x7434
   28eb0:	movt	r2, #25953	; 0x6561
   28eb4:	cmp	r0, r2
   28eb8:	ble	2905c <__flatcc_fb_clear_parser@@Base+0x500>
   28ebc:	movw	r2, #26934	; 0x6936
   28ec0:	movt	r2, #25966	; 0x656e
   28ec4:	cmp	r0, r2
   28ec8:	ble	2919c <__flatcc_fb_clear_parser@@Base+0x640>
   28ecc:	movw	r2, #26935	; 0x6937
   28ed0:	movt	r2, #25966	; 0x656e
   28ed4:	cmp	r0, r2
   28ed8:	beq	293d0 <__flatcc_fb_clear_parser@@Base+0x874>
   28edc:	movw	r2, #25654	; 0x6436
   28ee0:	movt	r2, #25967	; 0x656f
   28ee4:	cmp	r0, r2
   28ee8:	beq	293f8 <__flatcc_fb_clear_parser@@Base+0x89c>
   28eec:	movw	r2, #29241	; 0x7239
   28ef0:	movt	r2, #25967	; 0x656f
   28ef4:	cmp	r0, r2
   28ef8:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28efc:	movw	r0, #50980	; 0xc724
   28f00:	movt	r0, #4
   28f04:	mov	r2, #9
   28f08:	bl	148ac <bcmp@plt>
   28f0c:	cmp	r0, #0
   28f10:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28f14:	movw	r0, #64537	; 0xfc19
   28f18:	movt	r0, #65535	; 0xffff
   28f1c:	add	r0, r0, #31
   28f20:	pop	{fp, pc}
   28f24:	movw	r2, #30003	; 0x7533
   28f28:	movt	r2, #29801	; 0x7469
   28f2c:	cmp	r0, r2
   28f30:	ble	290ac <__flatcc_fb_clear_parser@@Base+0x550>
   28f34:	movw	r2, #26930	; 0x6932
   28f38:	movt	r2, #29806	; 0x746e
   28f3c:	cmp	r0, r2
   28f40:	ble	291e4 <__flatcc_fb_clear_parser@@Base+0x688>
   28f44:	movw	r2, #29494	; 0x7336
   28f48:	movt	r2, #29812	; 0x7474
   28f4c:	cmp	r0, r2
   28f50:	beq	29420 <__flatcc_fb_clear_parser@@Base+0x8c4>
   28f54:	movw	r2, #30006	; 0x7536
   28f58:	movt	r2, #29811	; 0x7473
   28f5c:	cmp	r0, r2
   28f60:	beq	29440 <__flatcc_fb_clear_parser@@Base+0x8e4>
   28f64:	movw	r2, #26931	; 0x6933
   28f68:	movt	r2, #29806	; 0x746e
   28f6c:	cmp	r0, r2
   28f70:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28f74:	movw	r0, #46769	; 0xb6b1
   28f78:	movt	r0, #4
   28f7c:	mov	r2, #3
   28f80:	bl	148ac <bcmp@plt>
   28f84:	cmp	r0, #0
   28f88:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28f8c:	movw	r0, #64537	; 0xfc19
   28f90:	movt	r0, #65535	; 0xffff
   28f94:	add	r0, r0, #5
   28f98:	pop	{fp, pc}
   28f9c:	movw	r2, #26166	; 0x6636
   28fa0:	movt	r2, #13420	; 0x346c
   28fa4:	cmp	r0, r2
   28fa8:	bgt	29104 <__flatcc_fb_clear_parser@@Base+0x5a8>
   28fac:	movw	r2, #26932	; 0x6934
   28fb0:	movt	r2, #12910	; 0x326e
   28fb4:	cmp	r0, r2
   28fb8:	bgt	29224 <__flatcc_fb_clear_parser@@Base+0x6c8>
   28fbc:	movw	r2, #30006	; 0x7536
   28fc0:	movt	r2, #12905	; 0x3269
   28fc4:	cmp	r0, r2
   28fc8:	beq	29468 <__flatcc_fb_clear_parser@@Base+0x90c>
   28fcc:	movw	r2, #26167	; 0x6637
   28fd0:	movt	r2, #12908	; 0x326c
   28fd4:	cmp	r0, r2
   28fd8:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28fdc:	movw	r0, #50936	; 0xc6f8
   28fe0:	movt	r0, #4
   28fe4:	mov	r2, #7
   28fe8:	bl	148ac <bcmp@plt>
   28fec:	cmp	r0, #0
   28ff0:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   28ff4:	movw	r0, #64537	; 0xfc19
   28ff8:	movt	r0, #65535	; 0xffff
   28ffc:	add	r0, r0, #3
   29000:	pop	{fp, pc}
   29004:	movw	r2, #24888	; 0x6138
   29008:	movt	r2, #25972	; 0x6574
   2900c:	cmp	r0, r2
   29010:	bgt	2926c <__flatcc_fb_clear_parser@@Base+0x710>
   29014:	movw	r2, #29243	; 0x723b
   29018:	movt	r2, #25968	; 0x6570
   2901c:	cmp	r0, r2
   29020:	beq	29490 <__flatcc_fb_clear_parser@@Base+0x934>
   29024:	movw	r2, #29748	; 0x7434
   29028:	movt	r2, #25970	; 0x6572
   2902c:	cmp	r0, r2
   29030:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29034:	movw	r0, #54853	; 0xd645
   29038:	movt	r0, #4
   2903c:	mov	r2, #4
   29040:	bl	148ac <bcmp@plt>
   29044:	cmp	r0, #0
   29048:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2904c:	movw	r0, #64537	; 0xfc19
   29050:	movt	r0, #65535	; 0xffff
   29054:	add	r0, r0, #11
   29058:	pop	{fp, pc}
   2905c:	movw	r2, #26164	; 0x6634
   29060:	movt	r2, #25953	; 0x6561
   29064:	cmp	r0, r2
   29068:	bgt	292b4 <__flatcc_fb_clear_parser@@Base+0x758>
   2906c:	movw	r2, #30005	; 0x7535
   29070:	movt	r2, #14441	; 0x3869
   29074:	cmp	r0, r2
   29078:	beq	294b8 <__flatcc_fb_clear_parser@@Base+0x95c>
   2907c:	movw	r2, #26932	; 0x6934
   29080:	movt	r2, #14446	; 0x386e
   29084:	cmp	r0, r2
   29088:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2908c:	movw	r0, #50315	; 0xc48b
   29090:	movt	r0, #3
   29094:	mov	r2, #4
   29098:	bl	148ac <bcmp@plt>
   2909c:	cmp	r0, #0
   290a0:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   290a4:	mvn	r0, #992	; 0x3e0
   290a8:	pop	{fp, pc}
   290ac:	movw	r2, #26174	; 0x663e
   290b0:	movt	r2, #29289	; 0x7269
   290b4:	cmp	r0, r2
   290b8:	bgt	292f4 <__flatcc_fb_clear_parser@@Base+0x798>
   290bc:	movw	r2, #26174	; 0x663e
   290c0:	movt	r2, #28265	; 0x6e69
   290c4:	cmp	r0, r2
   290c8:	beq	294d8 <__flatcc_fb_clear_parser@@Base+0x97c>
   290cc:	movw	r2, #30005	; 0x7535
   290d0:	movt	r2, #28270	; 0x6e6e
   290d4:	cmp	r0, r2
   290d8:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   290dc:	movw	r0, #47135	; 0xb81f
   290e0:	movt	r0, #3
   290e4:	mov	r2, #5
   290e8:	bl	148ac <bcmp@plt>
   290ec:	cmp	r0, #0
   290f0:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   290f4:	movw	r0, #64537	; 0xfc19
   290f8:	movt	r0, #65535	; 0xffff
   290fc:	add	r0, r0, #23
   29100:	pop	{fp, pc}
   29104:	movw	r2, #30005	; 0x7535
   29108:	movt	r2, #13929	; 0x3669
   2910c:	cmp	r0, r2
   29110:	bgt	2933c <__flatcc_fb_clear_parser@@Base+0x7e0>
   29114:	movw	r2, #26167	; 0x6637
   29118:	movt	r2, #13420	; 0x346c
   2911c:	cmp	r0, r2
   29120:	beq	29500 <__flatcc_fb_clear_parser@@Base+0x9a4>
   29124:	movw	r2, #26933	; 0x6935
   29128:	movt	r2, #13422	; 0x346e
   2912c:	cmp	r0, r2
   29130:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29134:	movw	r0, #50294	; 0xc476
   29138:	movt	r0, #3
   2913c:	mov	r2, #5
   29140:	bl	148ac <bcmp@plt>
   29144:	cmp	r0, #0
   29148:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2914c:	movw	r0, #64537	; 0xfc19
   29150:	movt	r0, #65535	; 0xffff
   29154:	add	r0, r0, #9
   29158:	pop	{fp, pc}
   2915c:	movw	r2, #30005	; 0x7535
   29160:	movt	r2, #26476	; 0x676c
   29164:	cmp	r0, r2
   29168:	beq	29528 <__flatcc_fb_clear_parser@@Base+0x9cc>
   2916c:	movw	r2, #27700	; 0x6c34
   29170:	movt	r2, #26479	; 0x676f
   29174:	cmp	r0, r2
   29178:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2917c:	movw	r0, #50924	; 0xc6ec
   29180:	movt	r0, #4
   29184:	mov	r2, #4
   29188:	bl	148ac <bcmp@plt>
   2918c:	cmp	r0, #0
   29190:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29194:	mvn	r0, #988	; 0x3dc
   29198:	pop	{fp, pc}
   2919c:	movw	r2, #29749	; 0x7435
   291a0:	movt	r2, #25953	; 0x6561
   291a4:	cmp	r0, r2
   291a8:	beq	29548 <__flatcc_fb_clear_parser@@Base+0x9ec>
   291ac:	movw	r2, #30005	; 0x7535
   291b0:	movt	r2, #25954	; 0x6562
   291b4:	cmp	r0, r2
   291b8:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   291bc:	movw	r0, #56846	; 0xde0e
   291c0:	movt	r0, #4
   291c4:	mov	r2, #5
   291c8:	bl	148ac <bcmp@plt>
   291cc:	cmp	r0, #0
   291d0:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   291d4:	movw	r0, #64537	; 0xfc19
   291d8:	movt	r0, #65535	; 0xffff
   291dc:	add	r0, r0, #17
   291e0:	pop	{fp, pc}
   291e4:	movw	r2, #30004	; 0x7534
   291e8:	movt	r2, #29801	; 0x7469
   291ec:	cmp	r0, r2
   291f0:	beq	29570 <__flatcc_fb_clear_parser@@Base+0xa14>
   291f4:	movw	r2, #26165	; 0x6635
   291f8:	movt	r2, #29804	; 0x746c
   291fc:	cmp	r0, r2
   29200:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29204:	movw	r0, #47882	; 0xbb0a
   29208:	movt	r0, #3
   2920c:	mov	r2, #5
   29210:	bl	148ac <bcmp@plt>
   29214:	cmp	r0, #0
   29218:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2921c:	mvn	r0, #984	; 0x3d8
   29220:	pop	{fp, pc}
   29224:	movw	r2, #26933	; 0x6935
   29228:	movt	r2, #12910	; 0x326e
   2922c:	cmp	r0, r2
   29230:	beq	29598 <__flatcc_fb_clear_parser@@Base+0xa3c>
   29234:	movw	r2, #30006	; 0x7536
   29238:	movt	r2, #13417	; 0x3469
   2923c:	cmp	r0, r2
   29240:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29244:	movw	r0, #50293	; 0xc475
   29248:	movt	r0, #3
   2924c:	mov	r2, #6
   29250:	bl	148ac <bcmp@plt>
   29254:	cmp	r0, #0
   29258:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2925c:	movw	r0, #64537	; 0xfc19
   29260:	movt	r0, #65535	; 0xffff
   29264:	add	r0, r0, #21
   29268:	pop	{fp, pc}
   2926c:	movw	r2, #24889	; 0x6139
   29270:	movt	r2, #25972	; 0x6574
   29274:	cmp	r0, r2
   29278:	beq	295c0 <__flatcc_fb_clear_parser@@Base+0xa64>
   2927c:	movw	r2, #25140	; 0x6234
   29280:	movt	r2, #25977	; 0x6579
   29284:	cmp	r0, r2
   29288:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2928c:	movw	r0, #56847	; 0xde0f
   29290:	movt	r0, #4
   29294:	mov	r2, #4
   29298:	bl	148ac <bcmp@plt>
   2929c:	cmp	r0, #0
   292a0:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   292a4:	movw	r0, #64537	; 0xfc19
   292a8:	movt	r0, #65535	; 0xffff
   292ac:	add	r0, r0, #1
   292b0:	pop	{fp, pc}
   292b4:	movw	r2, #26165	; 0x6635
   292b8:	movt	r2, #25953	; 0x6561
   292bc:	cmp	r0, r2
   292c0:	beq	295e8 <__flatcc_fb_clear_parser@@Base+0xa8c>
   292c4:	movw	r2, #28217	; 0x6e39
   292c8:	movt	r2, #25953	; 0x6561
   292cc:	cmp	r0, r2
   292d0:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   292d4:	movw	r0, #50970	; 0xc71a
   292d8:	movt	r0, #4
   292dc:	mov	r2, #9
   292e0:	bl	148ac <bcmp@plt>
   292e4:	cmp	r0, #0
   292e8:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   292ec:	mvn	r0, #968	; 0x3c8
   292f0:	pop	{fp, pc}
   292f4:	movw	r2, #26175	; 0x663f
   292f8:	movt	r2, #29289	; 0x7269
   292fc:	cmp	r0, r2
   29300:	beq	29610 <__flatcc_fb_clear_parser@@Base+0xab4>
   29304:	movw	r2, #29493	; 0x7335
   29308:	movt	r2, #29800	; 0x7468
   2930c:	cmp	r0, r2
   29310:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29314:	movw	r0, #50930	; 0xc6f2
   29318:	movt	r0, #4
   2931c:	mov	r2, #5
   29320:	bl	148ac <bcmp@plt>
   29324:	cmp	r0, #0
   29328:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2932c:	movw	r0, #64537	; 0xfc19
   29330:	movt	r0, #65535	; 0xffff
   29334:	add	r0, r0, #15
   29338:	pop	{fp, pc}
   2933c:	movw	r2, #30006	; 0x7536
   29340:	movt	r2, #13929	; 0x3669
   29344:	cmp	r0, r2
   29348:	beq	29630 <__flatcc_fb_clear_parser@@Base+0xad4>
   2934c:	movw	r2, #26933	; 0x6935
   29350:	movt	r2, #13934	; 0x366e
   29354:	cmp	r0, r2
   29358:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2935c:	movw	r0, #50308	; 0xc484
   29360:	movt	r0, #3
   29364:	mov	r2, #5
   29368:	bl	148ac <bcmp@plt>
   2936c:	cmp	r0, #0
   29370:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29374:	movw	r0, #64537	; 0xfc19
   29378:	movt	r0, #65535	; 0xffff
   2937c:	add	r0, r0, #7
   29380:	pop	{fp, pc}
   29384:	movw	r0, #55425	; 0xd881
   29388:	movt	r0, #4
   2938c:	mov	r2, #6
   29390:	bl	148ac <bcmp@plt>
   29394:	cmp	r0, #0
   29398:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   2939c:	movw	r0, #64537	; 0xfc19
   293a0:	movt	r0, #65535	; 0xffff
   293a4:	add	r0, r0, #25
   293a8:	pop	{fp, pc}
   293ac:	movw	r0, #54321	; 0xd431
   293b0:	movt	r0, #4
   293b4:	mov	r2, #4
   293b8:	bl	148ac <bcmp@plt>
   293bc:	cmp	r0, #0
   293c0:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   293c4:	movw	r0, #64537	; 0xfc19
   293c8:	movt	r0, #65535	; 0xffff
   293cc:	pop	{fp, pc}
   293d0:	movw	r0, #50952	; 0xc708
   293d4:	movt	r0, #4
   293d8:	mov	r2, #7
   293dc:	bl	148ac <bcmp@plt>
   293e0:	cmp	r0, #0
   293e4:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   293e8:	movw	r0, #64537	; 0xfc19
   293ec:	movt	r0, #65535	; 0xffff
   293f0:	add	r0, r0, #28
   293f4:	pop	{fp, pc}
   293f8:	movw	r0, #47888	; 0xbb10
   293fc:	movt	r0, #3
   29400:	mov	r2, #6
   29404:	bl	148ac <bcmp@plt>
   29408:	cmp	r0, #0
   2940c:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29410:	movw	r0, #64537	; 0xfc19
   29414:	movt	r0, #65535	; 0xffff
   29418:	add	r0, r0, #24
   2941c:	pop	{fp, pc}
   29420:	movw	r0, #54634	; 0xd56a
   29424:	movt	r0, #4
   29428:	mov	r2, #6
   2942c:	bl	148ac <bcmp@plt>
   29430:	cmp	r0, #0
   29434:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29438:	mvn	r0, #972	; 0x3cc
   2943c:	pop	{fp, pc}
   29440:	movw	r0, #50929	; 0xc6f1
   29444:	movt	r0, #4
   29448:	mov	r2, #6
   2944c:	bl	148ac <bcmp@plt>
   29450:	cmp	r0, #0
   29454:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29458:	movw	r0, #64537	; 0xfc19
   2945c:	movt	r0, #65535	; 0xffff
   29460:	add	r0, r0, #27
   29464:	pop	{fp, pc}
   29468:	movw	r0, #50300	; 0xc47c
   2946c:	movt	r0, #3
   29470:	mov	r2, #6
   29474:	bl	148ac <bcmp@plt>
   29478:	cmp	r0, #0
   2947c:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29480:	movw	r0, #64537	; 0xfc19
   29484:	movt	r0, #65535	; 0xffff
   29488:	add	r0, r0, #20
   2948c:	pop	{fp, pc}
   29490:	movw	r0, #59017	; 0xe689
   29494:	movt	r0, #4
   29498:	mov	r2, #11
   2949c:	bl	148ac <bcmp@plt>
   294a0:	cmp	r0, #0
   294a4:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   294a8:	movw	r0, #64537	; 0xfc19
   294ac:	movt	r0, #65535	; 0xffff
   294b0:	orr	r0, r0, #32
   294b4:	pop	{fp, pc}
   294b8:	movw	r0, #50314	; 0xc48a
   294bc:	movt	r0, #3
   294c0:	mov	r2, #5
   294c4:	bl	148ac <bcmp@plt>
   294c8:	cmp	r0, #0
   294cc:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   294d0:	mvn	r0, #980	; 0x3d4
   294d4:	pop	{fp, pc}
   294d8:	movw	r0, #50990	; 0xc72e
   294dc:	movt	r0, #4
   294e0:	mov	r2, #14
   294e4:	bl	148ac <bcmp@plt>
   294e8:	cmp	r0, #0
   294ec:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   294f0:	movw	r0, #64537	; 0xfc19
   294f4:	movt	r0, #65535	; 0xffff
   294f8:	add	r0, r0, #33	; 0x21
   294fc:	pop	{fp, pc}
   29500:	movw	r0, #50944	; 0xc700
   29504:	movt	r0, #4
   29508:	mov	r2, #7
   2950c:	bl	148ac <bcmp@plt>
   29510:	cmp	r0, #0
   29514:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29518:	movw	r0, #64537	; 0xfc19
   2951c:	movt	r0, #65535	; 0xffff
   29520:	orr	r0, r0, #4
   29524:	pop	{fp, pc}
   29528:	movw	r0, #50923	; 0xc6eb
   2952c:	movt	r0, #4
   29530:	mov	r2, #5
   29534:	bl	148ac <bcmp@plt>
   29538:	cmp	r0, #0
   2953c:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29540:	mvn	r0, #976	; 0x3d0
   29544:	pop	{fp, pc}
   29548:	movw	r0, #54091	; 0xd34b
   2954c:	movt	r0, #4
   29550:	mov	r2, #5
   29554:	bl	148ac <bcmp@plt>
   29558:	cmp	r0, #0
   2955c:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29560:	movw	r0, #64537	; 0xfc19
   29564:	movt	r0, #65535	; 0xffff
   29568:	add	r0, r0, #16
   2956c:	pop	{fp, pc}
   29570:	movw	r0, #50912	; 0xc6e0
   29574:	movt	r0, #4
   29578:	mov	r2, #4
   2957c:	bl	148ac <bcmp@plt>
   29580:	cmp	r0, #0
   29584:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29588:	movw	r0, #64537	; 0xfc19
   2958c:	movt	r0, #65535	; 0xffff
   29590:	add	r0, r0, #12
   29594:	pop	{fp, pc}
   29598:	movw	r0, #50301	; 0xc47d
   2959c:	movt	r0, #3
   295a0:	mov	r2, #5
   295a4:	bl	148ac <bcmp@plt>
   295a8:	cmp	r0, #0
   295ac:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   295b0:	movw	r0, #64537	; 0xfc19
   295b4:	movt	r0, #65535	; 0xffff
   295b8:	add	r0, r0, #8
   295bc:	pop	{fp, pc}
   295c0:	movw	r0, #50960	; 0xc710
   295c4:	movt	r0, #4
   295c8:	mov	r2, #9
   295cc:	bl	148ac <bcmp@plt>
   295d0:	cmp	r0, #0
   295d4:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   295d8:	movw	r0, #64537	; 0xfc19
   295dc:	movt	r0, #65535	; 0xffff
   295e0:	add	r0, r0, #29
   295e4:	pop	{fp, pc}
   295e8:	movw	r0, #50917	; 0xc6e5
   295ec:	movt	r0, #4
   295f0:	mov	r2, #5
   295f4:	bl	148ac <bcmp@plt>
   295f8:	cmp	r0, #0
   295fc:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29600:	movw	r0, #64537	; 0xfc19
   29604:	movt	r0, #65535	; 0xffff
   29608:	add	r0, r0, #13
   2960c:	pop	{fp, pc}
   29610:	movw	r0, #51005	; 0xc73d
   29614:	movt	r0, #4
   29618:	mov	r2, #15
   2961c:	bl	148ac <bcmp@plt>
   29620:	cmp	r0, #0
   29624:	bne	29648 <__flatcc_fb_clear_parser@@Base+0xaec>
   29628:	mvn	r0, #964	; 0x3c4
   2962c:	pop	{fp, pc}
   29630:	movw	r0, #50307	; 0xc483
   29634:	movt	r0, #3
   29638:	mov	r2, #6
   2963c:	bl	148ac <bcmp@plt>
   29640:	cmp	r0, #0
   29644:	beq	29650 <__flatcc_fb_clear_parser@@Base+0xaf4>
   29648:	mov	r0, #9
   2964c:	pop	{fp, pc}
   29650:	movw	r0, #64537	; 0xfc19
   29654:	movt	r0, #65535	; 0xffff
   29658:	add	r0, r0, #19
   2965c:	pop	{fp, pc}
   29660:	push	{r4, r5, fp, lr}
   29664:	add	fp, sp, #8
   29668:	mov	r4, r1
   2966c:	mov	r5, r0
   29670:	mov	r1, #12
   29674:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   29678:	str	r4, [r0, #4]
   2967c:	ldr	r1, [r5, #36]	; 0x24
   29680:	str	r1, [r0]
   29684:	str	r0, [r5, #36]	; 0x24
   29688:	pop	{r4, r5, fp, pc}
   2968c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29690:	add	fp, sp, #24
   29694:	mov	r4, r0
   29698:	ldr	r5, [r0, #40]	; 0x28
   2969c:	movw	r8, #64565	; 0xfc35
   296a0:	movt	r8, #65535	; 0xffff
   296a4:	mov	r1, r8
   296a8:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   296ac:	cmp	r0, #0
   296b0:	beq	29754 <__flatcc_fb_clear_parser@@Base+0xbf8>
   296b4:	movw	r7, #51131	; 0xc7bb
   296b8:	movt	r7, #4
   296bc:	movw	r6, #51177	; 0xc7e9
   296c0:	movt	r6, #4
   296c4:	movw	r9, #51075	; 0xc783
   296c8:	movt	r9, #4
   296cc:	b	29708 <__flatcc_fb_clear_parser@@Base+0xbac>
   296d0:	mov	r0, r4
   296d4:	bl	29ca0 <__flatcc_fb_clear_parser@@Base+0x1144>
   296d8:	add	r1, r0, #8
   296dc:	mov	r0, r4
   296e0:	bl	29b34 <__flatcc_fb_clear_parser@@Base+0xfd8>
   296e4:	mov	r0, r4
   296e8:	mov	r1, #59	; 0x3b
   296ec:	mov	r2, r6
   296f0:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   296f4:	mov	r0, r4
   296f8:	mov	r1, r8
   296fc:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   29700:	cmp	r0, #0
   29704:	beq	29754 <__flatcc_fb_clear_parser@@Base+0xbf8>
   29708:	ldr	r0, [r4, #140]	; 0x8c
   2970c:	cmp	r0, #0
   29710:	movne	r0, r4
   29714:	movne	r1, r5
   29718:	movne	r2, r9
   2971c:	blne	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29720:	ldr	r0, [r4, #108]	; 0x6c
   29724:	cmp	r0, #9
   29728:	bgt	29754 <__flatcc_fb_clear_parser@@Base+0xbf8>
   2972c:	mov	r0, r4
   29730:	mov	r1, #19
   29734:	mov	r2, r7
   29738:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2973c:	cmp	r0, #0
   29740:	bne	296d0 <__flatcc_fb_clear_parser@@Base+0xb74>
   29744:	mov	r0, r4
   29748:	mov	r1, #59	; 0x3b
   2974c:	bl	29af0 <__flatcc_fb_clear_parser@@Base+0xf94>
   29750:	b	296d0 <__flatcc_fb_clear_parser@@Base+0xb74>
   29754:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29758:	ldr	r0, [r0, #16]
   2975c:	clz	r0, r0
   29760:	lsr	r0, r0, #5
   29764:	bx	lr
   29768:	push	{r4, sl, fp, lr}
   2976c:	add	fp, sp, #8
   29770:	sub	sp, sp, #8
   29774:	mov	r4, r0
   29778:	ldr	r1, [r0, #40]	; 0x28
   2977c:	ldr	r0, [r1, #16]
   29780:	cmp	r0, #4
   29784:	bgt	29848 <__flatcc_fb_clear_parser@@Base+0xcec>
   29788:	movw	r2, #997	; 0x3e5
   2978c:	add	r0, r0, r2
   29790:	cmp	r0, #32
   29794:	bhi	29a04 <__flatcc_fb_clear_parser@@Base+0xea8>
   29798:	add	r2, pc, #0
   2979c:	ldr	pc, [r2, r0, lsl #2]
   297a0:	andeq	r9, r2, r4, lsr #16
   297a4:	andeq	r9, r2, r4, lsl #20
   297a8:	andeq	r9, r2, r4, lsl #20
   297ac:	andeq	r9, r2, r4, lsl #20
   297b0:	andeq	r9, r2, r4, lsl #20
   297b4:	andeq	r9, r2, r4, lsl #20
   297b8:	andeq	r9, r2, r4, lsl #20
   297bc:	andeq	r9, r2, r4, lsl #20
   297c0:	andeq	r9, r2, r4, lsl #20
   297c4:	andeq	r9, r2, r4, lsl #20
   297c8:	andeq	r9, r2, r4, lsl #20
   297cc:	andeq	r9, r2, r4, lsl #20
   297d0:	andeq	r9, r2, r4, lsl #20
   297d4:	andeq	r9, r2, r4, lsl #20
   297d8:	muleq	r2, r0, r8
   297dc:	andeq	r9, r2, r4, lsl #20
   297e0:	andeq	r9, r2, r4, lsl #20
   297e4:	andeq	r9, r2, r4, lsl #20
   297e8:	andeq	r9, r2, r4, lsl #20
   297ec:	andeq	r9, r2, r4, lsl #20
   297f0:	andeq	r9, r2, r4, lsl #20
   297f4:			; <UNDEFINED> instruction: 0x000298b0
   297f8:	andeq	r9, r2, r4, lsl #20
   297fc:	andeq	r9, r2, r4, lsl #20
   29800:	ldrdeq	r9, [r2], -r4
   29804:	andeq	r9, r2, r4, lsl #20
   29808:	strdeq	r9, [r2], -r4
   2980c:	andeq	r9, r2, r0, lsl #18
   29810:	andeq	r9, r2, r4, lsr #18
   29814:	andeq	r9, r2, ip, lsr r9
   29818:	andeq	r9, r2, r8, asr r9
   2981c:	andeq	r9, r2, r8, lsl #19
   29820:	andeq	r9, r2, r4, lsr #19
   29824:	mov	r0, r4
   29828:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2982c:	mov	r0, r4
   29830:	bl	2a3bc <__flatcc_fb_clear_parser@@Base+0x1860>
   29834:	mov	r1, r0
   29838:	mov	r0, r4
   2983c:	sub	sp, fp, #8
   29840:	pop	{r4, sl, fp, lr}
   29844:	b	2a204 <__flatcc_fb_clear_parser@@Base+0x16a8>
   29848:	cmp	r0, #26
   2984c:	bgt	29874 <__flatcc_fb_clear_parser@@Base+0xd18>
   29850:	cmp	r0, #5
   29854:	beq	299c0 <__flatcc_fb_clear_parser@@Base+0xe64>
   29858:	cmp	r0, #7
   2985c:	bne	29a04 <__flatcc_fb_clear_parser@@Base+0xea8>
   29860:	mov	r0, #1
   29864:	str	r0, [sp]
   29868:	movw	r2, #51578	; 0xc97a
   2986c:	movt	r2, #4
   29870:	b	299d0 <__flatcc_fb_clear_parser@@Base+0xe74>
   29874:	cmp	r0, #27
   29878:	beq	299dc <__flatcc_fb_clear_parser@@Base+0xe80>
   2987c:	cmp	r0, #123	; 0x7b
   29880:	bne	29a04 <__flatcc_fb_clear_parser@@Base+0xea8>
   29884:	movw	r2, #51430	; 0xc8e6
   29888:	movt	r2, #4
   2988c:	b	29a0c <__flatcc_fb_clear_parser@@Base+0xeb0>
   29890:	mov	r0, r4
   29894:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29898:	mov	r0, r4
   2989c:	bl	2a160 <__flatcc_fb_clear_parser@@Base+0x1604>
   298a0:	mov	r1, r0
   298a4:	movw	r2, #64553	; 0xfc29
   298a8:	movt	r2, #65535	; 0xffff
   298ac:	b	29978 <__flatcc_fb_clear_parser@@Base+0xe1c>
   298b0:	mov	r0, r4
   298b4:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   298b8:	mov	r0, r4
   298bc:	bl	2a5f4 <__flatcc_fb_clear_parser@@Base+0x1a98>
   298c0:	mov	r1, r0
   298c4:	mov	r0, r4
   298c8:	sub	sp, fp, #8
   298cc:	pop	{r4, sl, fp, lr}
   298d0:	b	2a410 <__flatcc_fb_clear_parser@@Base+0x18b4>
   298d4:	mov	r0, r4
   298d8:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   298dc:	mov	r0, r4
   298e0:	bl	2a10c <__flatcc_fb_clear_parser@@Base+0x15b0>
   298e4:	mov	r1, r0
   298e8:	mov	r0, r4
   298ec:	mvn	r2, #972	; 0x3cc
   298f0:	b	2997c <__flatcc_fb_clear_parser@@Base+0xe20>
   298f4:	movw	r2, #51376	; 0xc8b0
   298f8:	movt	r2, #4
   298fc:	b	29a0c <__flatcc_fb_clear_parser@@Base+0xeb0>
   29900:	mov	r0, r4
   29904:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29908:	mov	r0, r4
   2990c:	bl	29fe8 <__flatcc_fb_clear_parser@@Base+0x148c>
   29910:	mov	r1, r0
   29914:	mov	r0, r4
   29918:	sub	sp, fp, #8
   2991c:	pop	{r4, sl, fp, lr}
   29920:	b	29f64 <__flatcc_fb_clear_parser@@Base+0x1408>
   29924:	mov	r0, r4
   29928:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2992c:	mov	r0, r4
   29930:	sub	sp, fp, #8
   29934:	pop	{r4, sl, fp, lr}
   29938:	b	29cec <__flatcc_fb_clear_parser@@Base+0x1190>
   2993c:	mov	r0, r4
   29940:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29944:	add	r1, r4, #400	; 0x190
   29948:	mov	r0, r4
   2994c:	sub	sp, fp, #8
   29950:	pop	{r4, sl, fp, lr}
   29954:	b	29f00 <__flatcc_fb_clear_parser@@Base+0x13a4>
   29958:	mov	r0, r4
   2995c:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29960:	mov	r0, r4
   29964:	bl	2a1b0 <__flatcc_fb_clear_parser@@Base+0x1654>
   29968:	mov	r1, r0
   2996c:	movw	r0, #64553	; 0xfc29
   29970:	movt	r0, #65535	; 0xffff
   29974:	orr	r2, r0, #16
   29978:	mov	r0, r4
   2997c:	sub	sp, fp, #8
   29980:	pop	{r4, sl, fp, lr}
   29984:	b	2a00c <__flatcc_fb_clear_parser@@Base+0x14b0>
   29988:	mov	r0, r4
   2998c:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29990:	add	r1, r4, #376	; 0x178
   29994:	mov	r0, r4
   29998:	sub	sp, fp, #8
   2999c:	pop	{r4, sl, fp, lr}
   299a0:	b	29d98 <__flatcc_fb_clear_parser@@Base+0x123c>
   299a4:	mov	r0, r4
   299a8:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   299ac:	add	r1, r4, #360	; 0x168
   299b0:	mov	r0, r4
   299b4:	sub	sp, fp, #8
   299b8:	pop	{r4, sl, fp, lr}
   299bc:	b	29e30 <__flatcc_fb_clear_parser@@Base+0x12d4>
   299c0:	mov	r0, #1
   299c4:	str	r0, [sp]
   299c8:	movw	r2, #51528	; 0xc948
   299cc:	movt	r2, #4
   299d0:	movw	r3, #51280	; 0xc850
   299d4:	movt	r3, #4
   299d8:	b	299f4 <__flatcc_fb_clear_parser@@Base+0xe98>
   299dc:	mov	r0, #5
   299e0:	str	r0, [sp]
   299e4:	movw	r2, #51618	; 0xc9a2
   299e8:	movt	r2, #4
   299ec:	movw	r3, #51639	; 0xc9b7
   299f0:	movt	r3, #4
   299f4:	mov	r0, r4
   299f8:	bl	29cc4 <__flatcc_fb_clear_parser@@Base+0x1168>
   299fc:	sub	sp, fp, #8
   29a00:	pop	{r4, sl, fp, pc}
   29a04:	movw	r2, #51645	; 0xc9bd
   29a08:	movt	r2, #4
   29a0c:	mov	r0, r4
   29a10:	sub	sp, fp, #8
   29a14:	pop	{r4, sl, fp, lr}
   29a18:	b	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29a1c:	ldr	r1, [r0]
   29a20:	cmp	r1, #0
   29a24:	moveq	r2, #0
   29a28:	streq	r2, [r0]
   29a2c:	bxeq	lr
   29a30:	mov	r3, #0
   29a34:	mov	r2, r1
   29a38:	ldr	r1, [r1]
   29a3c:	str	r3, [r2]
   29a40:	cmp	r1, #0
   29a44:	mov	r3, r2
   29a48:	bne	29a34 <__flatcc_fb_clear_parser@@Base+0xed8>
   29a4c:	str	r2, [r0]
   29a50:	bx	lr
   29a54:	ldr	r1, [r0]
   29a58:	cmp	r1, #0
   29a5c:	moveq	r2, #0
   29a60:	streq	r2, [r0]
   29a64:	bxeq	lr
   29a68:	mov	r3, #0
   29a6c:	mov	r2, r1
   29a70:	ldr	r1, [r1]
   29a74:	str	r3, [r2]
   29a78:	cmp	r1, #0
   29a7c:	mov	r3, r2
   29a80:	bne	29a6c <__flatcc_fb_clear_parser@@Base+0xf10>
   29a84:	str	r2, [r0]
   29a88:	bx	lr
   29a8c:	push	{r4, sl, fp, lr}
   29a90:	add	fp, sp, #8
   29a94:	ldr	r4, [r0, #40]	; 0x28
   29a98:	ldr	r3, [r4, #16]
   29a9c:	mov	r2, #0
   29aa0:	cmp	r3, r1
   29aa4:	bne	29ab0 <__flatcc_fb_clear_parser@@Base+0xf54>
   29aa8:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29aac:	mov	r2, r4
   29ab0:	mov	r0, r2
   29ab4:	pop	{r4, sl, fp, pc}
   29ab8:	push	{r4, sl, fp, lr}
   29abc:	add	fp, sp, #8
   29ac0:	ldr	r4, [r0, #40]	; 0x28
   29ac4:	ldr	r3, [r4, #16]
   29ac8:	cmp	r3, r1
   29acc:	bne	29adc <__flatcc_fb_clear_parser@@Base+0xf80>
   29ad0:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29ad4:	mov	r0, r4
   29ad8:	pop	{r4, sl, fp, pc}
   29adc:	mov	r1, r4
   29ae0:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29ae4:	mov	r4, #0
   29ae8:	mov	r0, r4
   29aec:	pop	{r4, sl, fp, pc}
   29af0:	push	{r4, r5, r6, sl, fp, lr}
   29af4:	add	fp, sp, #16
   29af8:	mov	r5, r1
   29afc:	mov	r4, r0
   29b00:	ldr	r6, [r4, #40]	; 0x28
   29b04:	mov	r0, r6
   29b08:	bl	29758 <__flatcc_fb_clear_parser@@Base+0xbfc>
   29b0c:	cmp	r0, #0
   29b10:	bne	29b30 <__flatcc_fb_clear_parser@@Base+0xfd4>
   29b14:	ldr	r6, [r6, #16]
   29b18:	mov	r0, r4
   29b1c:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29b20:	cmp	r6, r5
   29b24:	bne	29b00 <__flatcc_fb_clear_parser@@Base+0xfa4>
   29b28:	mov	r0, #0
   29b2c:	str	r0, [r4, #36]	; 0x24
   29b30:	pop	{r4, r5, r6, sl, fp, pc}
   29b34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29b38:	add	fp, sp, #28
   29b3c:	sub	sp, sp, #4
   29b40:	mov	r4, r1
   29b44:	mov	r5, r0
   29b48:	mov	r0, #0
   29b4c:	str	r0, [r1]
   29b50:	str	r0, [r1, #4]
   29b54:	mov	r0, #2
   29b58:	strh	r0, [r1, #8]
   29b5c:	mov	r6, #1
   29b60:	movw	r8, #51238	; 0xc826
   29b64:	movt	r8, #4
   29b68:	movw	r9, #51280	; 0xc850
   29b6c:	movt	r9, #4
   29b70:	movw	sl, #51282	; 0xc852
   29b74:	movt	sl, #4
   29b78:	movw	r7, #51208	; 0xc808
   29b7c:	movt	r7, #4
   29b80:	b	29b9c <__flatcc_fb_clear_parser@@Base+0x1040>
   29b84:	strh	r6, [r4, #8]
   29b88:	mov	r0, r5
   29b8c:	mov	r2, r7
   29b90:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29b94:	mov	r0, r5
   29b98:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   29b9c:	ldr	r1, [r5, #40]	; 0x28
   29ba0:	ldr	r0, [r1, #16]
   29ba4:	sub	r0, r0, #6
   29ba8:	cmp	r0, #17
   29bac:	bhi	29c44 <__flatcc_fb_clear_parser@@Base+0x10e8>
   29bb0:	add	r2, pc, #0
   29bb4:	ldr	pc, [r2, r0, lsl #2]
   29bb8:	andeq	r9, r2, r0, lsl #24
   29bbc:	andeq	r9, r2, r4, asr #24
   29bc0:	andeq	r9, r2, r4, asr #24
   29bc4:	andeq	r9, r2, r4, asr #24
   29bc8:	andeq	r9, r2, r4, asr #24
   29bcc:	andeq	r9, r2, r4, asr #24
   29bd0:	andeq	r9, r2, r4, asr #24
   29bd4:	andeq	r9, r2, r4, asr #24
   29bd8:	andeq	r9, r2, r4, asr #24
   29bdc:	andeq	r9, r2, r4, asr #24
   29be0:	andeq	r9, r2, r4, asr #24
   29be4:	andeq	r9, r2, r4, asr #24
   29be8:	andeq	r9, r2, ip, lsl ip
   29bec:	andeq	r9, r2, r4, asr #24
   29bf0:	andeq	r9, r2, ip, lsr #24
   29bf4:	andeq	r9, r2, r4, lsl #23
   29bf8:	andeq	r9, r2, ip, asr ip
   29bfc:	andeq	r9, r2, ip, asr ip
   29c00:	strh	r6, [r4, #8]
   29c04:	str	r6, [sp]
   29c08:	mov	r0, r5
   29c0c:	mov	r2, r8
   29c10:	mov	r3, r9
   29c14:	bl	29cc4 <__flatcc_fb_clear_parser@@Base+0x1168>
   29c18:	b	29b94 <__flatcc_fb_clear_parser@@Base+0x1038>
   29c1c:	strh	r6, [r4, #8]
   29c20:	mov	r0, r5
   29c24:	mov	r2, sl
   29c28:	b	29b90 <__flatcc_fb_clear_parser@@Base+0x1034>
   29c2c:	ldr	r0, [r4]
   29c30:	cmp	r0, #0
   29c34:	bne	29b94 <__flatcc_fb_clear_parser@@Base+0x1038>
   29c38:	ldr	r0, [r1]
   29c3c:	str	r0, [r4]
   29c40:	b	29b94 <__flatcc_fb_clear_parser@@Base+0x1038>
   29c44:	movw	r2, #51313	; 0xc871
   29c48:	movt	r2, #4
   29c4c:	mov	r0, r5
   29c50:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29c54:	mov	r0, #1
   29c58:	strh	r0, [r4, #8]
   29c5c:	ldr	r0, [r4]
   29c60:	cmp	r0, #0
   29c64:	beq	29c78 <__flatcc_fb_clear_parser@@Base+0x111c>
   29c68:	ldr	r1, [r5, #40]	; 0x28
   29c6c:	ldr	r1, [r1]
   29c70:	sub	r0, r1, r0
   29c74:	str	r0, [r4, #4]
   29c78:	movw	r2, #51356	; 0xc89c
   29c7c:	movt	r2, #4
   29c80:	mov	r0, r5
   29c84:	mov	r1, #22
   29c88:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   29c8c:	cmp	r0, #0
   29c90:	moveq	r0, #1
   29c94:	strheq	r0, [r4, #8]
   29c98:	sub	sp, fp, #28
   29c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ca0:	push	{r4, sl, fp, lr}
   29ca4:	add	fp, sp, #8
   29ca8:	mov	r4, r0
   29cac:	mov	r1, #24
   29cb0:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   29cb4:	ldr	r1, [r4, #352]	; 0x160
   29cb8:	str	r1, [r0]
   29cbc:	str	r0, [r4, #352]	; 0x160
   29cc0:	pop	{r4, sl, fp, pc}
   29cc4:	push	{fp, lr}
   29cc8:	mov	fp, sp
   29ccc:	sub	sp, sp, #8
   29cd0:	str	r3, [sp]
   29cd4:	ldr	r3, [fp, #8]
   29cd8:	str	r3, [sp, #4]
   29cdc:	mov	r3, #0
   29ce0:	bl	274ec <__flatcc_error_report@@Base>
   29ce4:	mov	sp, fp
   29ce8:	pop	{fp, pc}
   29cec:	push	{r4, r5, fp, lr}
   29cf0:	add	fp, sp, #8
   29cf4:	sub	sp, sp, #8
   29cf8:	mov	r4, r0
   29cfc:	mov	r0, #0
   29d00:	str	r0, [sp, #4]
   29d04:	ldr	r5, [r4, #40]	; 0x28
   29d08:	mov	r0, r4
   29d0c:	mov	r1, #59	; 0x3b
   29d10:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   29d14:	cmp	r5, #0
   29d18:	cmpne	r0, #0
   29d1c:	bne	29d64 <__flatcc_fb_clear_parser@@Base+0x1208>
   29d20:	ldr	r1, [r4, #40]	; 0x28
   29d24:	ldr	r0, [r1, #16]
   29d28:	cmp	r0, #9
   29d2c:	bne	29d74 <__flatcc_fb_clear_parser@@Base+0x1218>
   29d30:	add	r1, sp, #4
   29d34:	mov	r0, r4
   29d38:	bl	2a648 <__flatcc_fb_clear_parser@@Base+0x1aec>
   29d3c:	movw	r2, #51715	; 0xca03
   29d40:	movt	r2, #4
   29d44:	mov	r0, r4
   29d48:	mov	r1, #59	; 0x3b
   29d4c:	mov	r3, r5
   29d50:	bl	2a6dc <__flatcc_fb_clear_parser@@Base+0x1b80>
   29d54:	ldr	r1, [sp, #4]
   29d58:	mov	r0, r4
   29d5c:	bl	279c0 <__flatcc_fb_init_parser@@Base+0x254>
   29d60:	b	29d68 <__flatcc_fb_clear_parser@@Base+0x120c>
   29d64:	mov	r0, #0
   29d68:	str	r0, [r4, #544]	; 0x220
   29d6c:	sub	sp, fp, #8
   29d70:	pop	{r4, r5, fp, pc}
   29d74:	movw	r2, #51683	; 0xc9e3
   29d78:	movt	r2, #4
   29d7c:	mov	r0, r4
   29d80:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29d84:	mov	r0, r4
   29d88:	mov	r1, #59	; 0x3b
   29d8c:	bl	29af0 <__flatcc_fb_clear_parser@@Base+0xf94>
   29d90:	sub	sp, fp, #8
   29d94:	pop	{r4, r5, fp, pc}
   29d98:	push	{r4, r5, r6, r7, fp, lr}
   29d9c:	add	fp, sp, #16
   29da0:	sub	sp, sp, #8
   29da4:	mov	r5, r1
   29da8:	mov	r4, r0
   29dac:	ldrh	r0, [r1, #8]
   29db0:	cmp	r0, #2
   29db4:	bne	29dd8 <__flatcc_fb_clear_parser@@Base+0x127c>
   29db8:	ldr	r1, [r4, #40]	; 0x28
   29dbc:	ldrd	r6, [r5]
   29dc0:	str	r7, [sp]
   29dc4:	movw	r2, #51789	; 0xca4d
   29dc8:	movt	r2, #4
   29dcc:	mov	r0, r4
   29dd0:	mov	r3, r6
   29dd4:	bl	29cc4 <__flatcc_fb_clear_parser@@Base+0x1168>
   29dd8:	movw	r2, #51816	; 0xca68
   29ddc:	movt	r2, #4
   29de0:	mov	r0, r4
   29de4:	mov	r1, #19
   29de8:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   29dec:	cmp	r0, #0
   29df0:	beq	29e1c <__flatcc_fb_clear_parser@@Base+0x12c0>
   29df4:	mov	r0, r4
   29df8:	mov	r1, r5
   29dfc:	bl	29b34 <__flatcc_fb_clear_parser@@Base+0xfd8>
   29e00:	movw	r2, #51855	; 0xca8f
   29e04:	movt	r2, #4
   29e08:	mov	r0, r4
   29e0c:	mov	r1, #59	; 0x3b
   29e10:	sub	sp, fp, #16
   29e14:	pop	{r4, r5, r6, r7, fp, lr}
   29e18:	b	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   29e1c:	mov	r0, r4
   29e20:	mov	r1, #59	; 0x3b
   29e24:	sub	sp, fp, #16
   29e28:	pop	{r4, r5, r6, r7, fp, lr}
   29e2c:	b	29af0 <__flatcc_fb_clear_parser@@Base+0xf94>
   29e30:	push	{r4, r5, r6, r7, fp, lr}
   29e34:	add	fp, sp, #16
   29e38:	sub	sp, sp, #8
   29e3c:	mov	r5, r1
   29e40:	mov	r4, r0
   29e44:	ldrh	r0, [r1, #8]
   29e48:	cmp	r0, #0
   29e4c:	beq	29e70 <__flatcc_fb_clear_parser@@Base+0x1314>
   29e50:	ldr	r1, [r4, #40]	; 0x28
   29e54:	ldrd	r6, [r5]
   29e58:	str	r7, [sp]
   29e5c:	movw	r2, #51883	; 0xcaab
   29e60:	movt	r2, #4
   29e64:	mov	r0, r4
   29e68:	mov	r3, r6
   29e6c:	bl	29cc4 <__flatcc_fb_clear_parser@@Base+0x1168>
   29e70:	movw	r2, #51911	; 0xcac7
   29e74:	movt	r2, #4
   29e78:	mov	r0, r4
   29e7c:	mov	r1, #19
   29e80:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   29e84:	cmp	r0, #0
   29e88:	beq	29eec <__flatcc_fb_clear_parser@@Base+0x1390>
   29e8c:	ldr	r6, [r4, #40]	; 0x28
   29e90:	mov	r0, r4
   29e94:	mov	r1, r5
   29e98:	bl	29b34 <__flatcc_fb_clear_parser@@Base+0xfd8>
   29e9c:	ldr	r0, [r5]
   29ea0:	cmp	r0, #0
   29ea4:	beq	29ed0 <__flatcc_fb_clear_parser@@Base+0x1374>
   29ea8:	ldr	r0, [r5, #4]
   29eac:	cmp	r0, #4
   29eb0:	beq	29ed0 <__flatcc_fb_clear_parser@@Base+0x1374>
   29eb4:	mov	r0, #1
   29eb8:	strh	r0, [r5, #8]
   29ebc:	movw	r2, #51951	; 0xcaef
   29ec0:	movt	r2, #4
   29ec4:	mov	r0, r4
   29ec8:	mov	r1, r6
   29ecc:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29ed0:	movw	r2, #51988	; 0xcb14
   29ed4:	movt	r2, #4
   29ed8:	mov	r0, r4
   29edc:	mov	r1, #59	; 0x3b
   29ee0:	sub	sp, fp, #16
   29ee4:	pop	{r4, r5, r6, r7, fp, lr}
   29ee8:	b	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   29eec:	mov	r0, r4
   29ef0:	mov	r1, #59	; 0x3b
   29ef4:	sub	sp, fp, #16
   29ef8:	pop	{r4, r5, r6, r7, fp, lr}
   29efc:	b	29af0 <__flatcc_fb_clear_parser@@Base+0xf94>
   29f00:	push	{r4, r5, r6, sl, fp, lr}
   29f04:	add	fp, sp, #16
   29f08:	mov	r6, r1
   29f0c:	mov	r5, r0
   29f10:	ldr	r4, [r0, #40]	; 0x28
   29f14:	ldr	r0, [r1]
   29f18:	cmp	r0, #0
   29f1c:	beq	29f34 <__flatcc_fb_clear_parser@@Base+0x13d8>
   29f20:	movw	r2, #52017	; 0xcb31
   29f24:	movt	r2, #4
   29f28:	mov	r0, r5
   29f2c:	mov	r1, r4
   29f30:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   29f34:	mov	r0, r5
   29f38:	mov	r1, r6
   29f3c:	bl	2a648 <__flatcc_fb_clear_parser@@Base+0x1aec>
   29f40:	ldr	r0, [r5, #544]	; 0x220
   29f44:	str	r0, [r6, #8]
   29f48:	movw	r2, #52039	; 0xcb47
   29f4c:	movt	r2, #4
   29f50:	mov	r0, r5
   29f54:	mov	r1, #59	; 0x3b
   29f58:	mov	r3, r4
   29f5c:	pop	{r4, r5, r6, sl, fp, lr}
   29f60:	b	2a6dc <__flatcc_fb_clear_parser@@Base+0x1b80>
   29f64:	push	{r4, r5, r6, sl, fp, lr}
   29f68:	add	fp, sp, #16
   29f6c:	sub	sp, sp, #8
   29f70:	mov	r6, r1
   29f74:	mov	r4, r0
   29f78:	ldr	r5, [r0, #40]	; 0x28
   29f7c:	movw	r2, #52076	; 0xcb6c
   29f80:	movt	r2, #4
   29f84:	mov	r1, #19
   29f88:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   29f8c:	cmp	r0, #0
   29f90:	beq	29fcc <__flatcc_fb_clear_parser@@Base+0x1470>
   29f94:	add	r1, r6, #8
   29f98:	mov	r0, r4
   29f9c:	bl	29b34 <__flatcc_fb_clear_parser@@Base+0xfd8>
   29fa0:	ldr	r0, [r6, #12]
   29fa4:	cmp	r0, #0
   29fa8:	bne	29fcc <__flatcc_fb_clear_parser@@Base+0x1470>
   29fac:	mov	r0, #0
   29fb0:	str	r0, [sp]
   29fb4:	movw	r2, #52110	; 0xcb8e
   29fb8:	movt	r2, #4
   29fbc:	mov	r0, r4
   29fc0:	mov	r1, r5
   29fc4:	mov	r3, #0
   29fc8:	bl	29cc4 <__flatcc_fb_clear_parser@@Base+0x1168>
   29fcc:	movw	r2, #52141	; 0xcbad
   29fd0:	movt	r2, #4
   29fd4:	mov	r0, r4
   29fd8:	mov	r1, #59	; 0x3b
   29fdc:	sub	sp, fp, #16
   29fe0:	pop	{r4, r5, r6, sl, fp, lr}
   29fe4:	b	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   29fe8:	push	{r4, sl, fp, lr}
   29fec:	add	fp, sp, #8
   29ff0:	mov	r4, r0
   29ff4:	mov	r1, #32
   29ff8:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   29ffc:	ldr	r1, [r4, #356]	; 0x164
   2a000:	str	r1, [r0]
   2a004:	str	r0, [r4, #356]	; 0x164
   2a008:	pop	{r4, sl, fp, pc}
   2a00c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a010:	add	fp, sp, #24
   2a014:	mov	r5, r2
   2a018:	mov	r6, r1
   2a01c:	mov	r4, r0
   2a020:	movw	r2, #52164	; 0xcbc4
   2a024:	movt	r2, #4
   2a028:	mov	r1, #9
   2a02c:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a030:	cmp	r0, #0
   2a034:	beq	2a0bc <__flatcc_fb_clear_parser@@Base+0x1560>
   2a038:	str	r0, [r6, #4]
   2a03c:	mov	r0, r4
   2a040:	bl	2a72c <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2a044:	str	r0, [r6, #28]
   2a048:	movw	r2, #52199	; 0xcbe7
   2a04c:	movt	r2, #4
   2a050:	mov	r0, r4
   2a054:	mov	r1, #123	; 0x7b
   2a058:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a05c:	cmp	r0, #0
   2a060:	beq	2a0bc <__flatcc_fb_clear_parser@@Base+0x1560>
   2a064:	add	r6, r6, #20
   2a068:	ldr	r8, [r4, #40]	; 0x28
   2a06c:	movw	r7, #64569	; 0xfc39
   2a070:	movt	r7, #65535	; 0xffff
   2a074:	b	2a088 <__flatcc_fb_clear_parser@@Base+0x152c>
   2a078:	bl	2a970 <__flatcc_fb_clear_parser@@Base+0x1e14>
   2a07c:	ldr	r0, [r4, #108]	; 0x6c
   2a080:	cmp	r0, #9
   2a084:	bgt	2a0bc <__flatcc_fb_clear_parser@@Base+0x1560>
   2a088:	ldr	r0, [r4, #40]	; 0x28
   2a08c:	ldr	r0, [r0, #16]
   2a090:	cmp	r0, #125	; 0x7d
   2a094:	beq	2a0cc <__flatcc_fb_clear_parser@@Base+0x1570>
   2a098:	mov	r0, r4
   2a09c:	mov	r1, r6
   2a0a0:	bl	2a920 <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2a0a4:	mov	r1, r0
   2a0a8:	mov	r0, r4
   2a0ac:	cmp	r5, r7
   2a0b0:	bne	2a078 <__flatcc_fb_clear_parser@@Base+0x151c>
   2a0b4:	bl	2a82c <__flatcc_fb_clear_parser@@Base+0x1cd0>
   2a0b8:	b	2a07c <__flatcc_fb_clear_parser@@Base+0x1520>
   2a0bc:	mov	r0, r4
   2a0c0:	mov	r1, #125	; 0x7d
   2a0c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a0c8:	b	29af0 <__flatcc_fb_clear_parser@@Base+0xf94>
   2a0cc:	mov	r0, r4
   2a0d0:	mov	r1, #125	; 0x7d
   2a0d4:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a0d8:	cmp	r8, #0
   2a0dc:	beq	2a100 <__flatcc_fb_clear_parser@@Base+0x15a4>
   2a0e0:	cmp	r0, #0
   2a0e4:	bne	2a100 <__flatcc_fb_clear_parser@@Base+0x15a4>
   2a0e8:	ldr	r1, [r4, #40]	; 0x28
   2a0ec:	movw	r2, #52224	; 0xcc00
   2a0f0:	movt	r2, #4
   2a0f4:	mov	r0, r4
   2a0f8:	mov	r3, r8
   2a0fc:	bl	28c98 <__flatcc_fb_clear_parser@@Base+0x13c>
   2a100:	mov	r0, r6
   2a104:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a108:	b	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a10c:	push	{r4, r5, fp, lr}
   2a110:	add	fp, sp, #8
   2a114:	mov	r4, r0
   2a118:	mov	r1, #128	; 0x80
   2a11c:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2a120:	mov	r5, r0
   2a124:	ldr	r0, [r4, #392]	; 0x188
   2a128:	mov	r1, #1
   2a12c:	strh	r1, [r5, #8]
   2a130:	str	r0, [r5]
   2a134:	str	r5, [r4, #392]	; 0x188
   2a138:	ldr	r0, [r4, #544]	; 0x220
   2a13c:	str	r0, [r5, #12]
   2a140:	add	r0, r4, #36	; 0x24
   2a144:	bl	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a148:	ldr	r0, [r4, #36]	; 0x24
   2a14c:	str	r0, [r5, #32]
   2a150:	mov	r0, #0
   2a154:	str	r0, [r4, #36]	; 0x24
   2a158:	mov	r0, r5
   2a15c:	pop	{r4, r5, fp, pc}
   2a160:	push	{r4, r5, r6, sl, fp, lr}
   2a164:	add	fp, sp, #16
   2a168:	mov	r4, r0
   2a16c:	mov	r1, #128	; 0x80
   2a170:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2a174:	mov	r5, r0
   2a178:	ldr	r0, [r4, #392]	; 0x188
   2a17c:	mov	r6, #0
   2a180:	strh	r6, [r5, #8]
   2a184:	str	r0, [r5]
   2a188:	str	r5, [r4, #392]	; 0x188
   2a18c:	ldr	r0, [r4, #544]	; 0x220
   2a190:	str	r0, [r5, #12]
   2a194:	add	r0, r4, #36	; 0x24
   2a198:	bl	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a19c:	ldr	r0, [r4, #36]	; 0x24
   2a1a0:	str	r0, [r5, #32]
   2a1a4:	str	r6, [r4, #36]	; 0x24
   2a1a8:	mov	r0, r5
   2a1ac:	pop	{r4, r5, r6, sl, fp, pc}
   2a1b0:	push	{r4, r5, fp, lr}
   2a1b4:	add	fp, sp, #8
   2a1b8:	mov	r4, r0
   2a1bc:	mov	r1, #128	; 0x80
   2a1c0:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2a1c4:	mov	r5, r0
   2a1c8:	ldr	r0, [r4, #392]	; 0x188
   2a1cc:	mov	r1, #2
   2a1d0:	strh	r1, [r5, #8]
   2a1d4:	str	r0, [r5]
   2a1d8:	str	r5, [r4, #392]	; 0x188
   2a1dc:	ldr	r0, [r4, #544]	; 0x220
   2a1e0:	str	r0, [r5, #12]
   2a1e4:	add	r0, r4, #36	; 0x24
   2a1e8:	bl	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a1ec:	ldr	r0, [r4, #36]	; 0x24
   2a1f0:	str	r0, [r5, #32]
   2a1f4:	mov	r0, #0
   2a1f8:	str	r0, [r4, #36]	; 0x24
   2a1fc:	mov	r0, r5
   2a200:	pop	{r4, r5, fp, pc}
   2a204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a208:	add	fp, sp, #28
   2a20c:	sub	sp, sp, #4
   2a210:	mov	r5, r1
   2a214:	mov	r4, r0
   2a218:	movw	r2, #53092	; 0xcf64
   2a21c:	movt	r2, #4
   2a220:	mov	r1, #9
   2a224:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a228:	str	r0, [r5, #4]
   2a22c:	cmp	r0, #0
   2a230:	beq	2a380 <__flatcc_fb_clear_parser@@Base+0x1824>
   2a234:	mov	r0, r4
   2a238:	mov	r1, #58	; 0x3a
   2a23c:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a240:	cmp	r0, #0
   2a244:	beq	2a298 <__flatcc_fb_clear_parser@@Base+0x173c>
   2a248:	add	r1, r5, #40	; 0x28
   2a24c:	mov	r0, r4
   2a250:	bl	2b10c <__flatcc_fb_clear_parser@@Base+0x25b0>
   2a254:	ldr	r1, [r5, #40]	; 0x28
   2a258:	ldrh	r0, [r5, #48]	; 0x30
   2a25c:	cmp	r0, #8
   2a260:	bne	2a288 <__flatcc_fb_clear_parser@@Base+0x172c>
   2a264:	ldr	r0, [r1, #16]
   2a268:	add	r0, r0, #996	; 0x3e4
   2a26c:	cmp	r0, #21
   2a270:	bhi	2a298 <__flatcc_fb_clear_parser@@Base+0x173c>
   2a274:	mov	r2, #1
   2a278:	movw	r3, #2051	; 0x803
   2a27c:	movt	r3, #32
   2a280:	tst	r3, r2, lsl r0
   2a284:	beq	2a298 <__flatcc_fb_clear_parser@@Base+0x173c>
   2a288:	movw	r2, #53129	; 0xcf89
   2a28c:	movt	r2, #4
   2a290:	mov	r0, r4
   2a294:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2a298:	mov	r0, r4
   2a29c:	bl	2a72c <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2a2a0:	str	r0, [r5, #28]
   2a2a4:	movw	r2, #53152	; 0xcfa0
   2a2a8:	movt	r2, #4
   2a2ac:	mov	r0, r4
   2a2b0:	mov	r1, #123	; 0x7b
   2a2b4:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a2b8:	cmp	r0, #0
   2a2bc:	beq	2a380 <__flatcc_fb_clear_parser@@Base+0x1824>
   2a2c0:	mov	r9, r0
   2a2c4:	movw	r2, #53182	; 0xcfbe
   2a2c8:	movt	r2, #4
   2a2cc:	mov	r0, r4
   2a2d0:	mov	r1, #9
   2a2d4:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a2d8:	cmp	r0, #0
   2a2dc:	beq	2a380 <__flatcc_fb_clear_parser@@Base+0x1824>
   2a2e0:	mov	r6, r0
   2a2e4:	add	r5, r5, #20
   2a2e8:	mov	r8, #0
   2a2ec:	movw	sl, #53182	; 0xcfbe
   2a2f0:	movt	sl, #4
   2a2f4:	ldr	r0, [r4, #108]	; 0x6c
   2a2f8:	cmp	r0, #9
   2a2fc:	bgt	2a380 <__flatcc_fb_clear_parser@@Base+0x1824>
   2a300:	mov	r0, r4
   2a304:	mov	r1, r5
   2a308:	bl	2a920 <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2a30c:	mov	r7, r0
   2a310:	str	r6, [r0, #4]
   2a314:	mov	r0, r4
   2a318:	mov	r1, #61	; 0x3d
   2a31c:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a320:	cmp	r0, #0
   2a324:	beq	2a340 <__flatcc_fb_clear_parser@@Base+0x17e4>
   2a328:	add	r1, r7, #48	; 0x30
   2a32c:	mov	r0, r4
   2a330:	mov	r2, #0
   2a334:	movw	r3, #53209	; 0xcfd9
   2a338:	movt	r3, #4
   2a33c:	bl	2aa48 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2a340:	mov	r0, r4
   2a344:	mov	r1, #44	; 0x2c
   2a348:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a34c:	cmp	r0, #0
   2a350:	ldrne	r0, [r4, #40]	; 0x28
   2a354:	ldrne	r0, [r0, #16]
   2a358:	cmpne	r0, #125	; 0x7d
   2a35c:	beq	2a394 <__flatcc_fb_clear_parser@@Base+0x1838>
   2a360:	str	r8, [r4, #36]	; 0x24
   2a364:	mov	r0, r4
   2a368:	mov	r1, #9
   2a36c:	mov	r2, sl
   2a370:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a374:	mov	r6, r0
   2a378:	cmp	r0, #0
   2a37c:	bne	2a2f4 <__flatcc_fb_clear_parser@@Base+0x1798>
   2a380:	mov	r0, r4
   2a384:	mov	r1, #125	; 0x7d
   2a388:	sub	sp, fp, #28
   2a38c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a390:	b	29af0 <__flatcc_fb_clear_parser@@Base+0xf94>
   2a394:	movw	r2, #53236	; 0xcff4
   2a398:	movt	r2, #4
   2a39c:	mov	r0, r4
   2a3a0:	mov	r1, #125	; 0x7d
   2a3a4:	mov	r3, r9
   2a3a8:	bl	2a6dc <__flatcc_fb_clear_parser@@Base+0x1b80>
   2a3ac:	mov	r0, r5
   2a3b0:	sub	sp, fp, #28
   2a3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a3b8:	b	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a3bc:	push	{r4, r5, fp, lr}
   2a3c0:	add	fp, sp, #8
   2a3c4:	mov	r4, r0
   2a3c8:	mov	r1, #128	; 0x80
   2a3cc:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2a3d0:	mov	r5, r0
   2a3d4:	ldr	r0, [r4, #392]	; 0x188
   2a3d8:	mov	r1, #3
   2a3dc:	strh	r1, [r5, #8]
   2a3e0:	str	r0, [r5]
   2a3e4:	str	r5, [r4, #392]	; 0x188
   2a3e8:	ldr	r0, [r4, #544]	; 0x220
   2a3ec:	str	r0, [r5, #12]
   2a3f0:	add	r0, r4, #36	; 0x24
   2a3f4:	bl	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a3f8:	ldr	r0, [r4, #36]	; 0x24
   2a3fc:	str	r0, [r5, #32]
   2a400:	mov	r0, #0
   2a404:	str	r0, [r4, #36]	; 0x24
   2a408:	mov	r0, r5
   2a40c:	pop	{r4, r5, fp, pc}
   2a410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a414:	add	fp, sp, #28
   2a418:	sub	sp, sp, #4
   2a41c:	mov	r6, r1
   2a420:	mov	r4, r0
   2a424:	movw	r2, #53270	; 0xd016
   2a428:	movt	r2, #4
   2a42c:	mov	r1, #9
   2a430:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a434:	str	r0, [r6, #4]
   2a438:	cmp	r0, #0
   2a43c:	beq	2a5a8 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   2a440:	mov	r0, r4
   2a444:	bl	2a72c <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2a448:	str	r0, [r6, #28]
   2a44c:	movw	r2, #53308	; 0xd03c
   2a450:	movt	r2, #4
   2a454:	mov	r0, r4
   2a458:	mov	r1, #123	; 0x7b
   2a45c:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a460:	cmp	r0, #0
   2a464:	beq	2a5a8 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   2a468:	mov	r5, r0
   2a46c:	ldr	r7, [r4, #40]	; 0x28
   2a470:	ldr	r0, [r7, #16]
   2a474:	cmp	r0, #9
   2a478:	bne	2a594 <__flatcc_fb_clear_parser@@Base+0x1a38>
   2a47c:	add	r6, r6, #20
   2a480:	mov	sl, sp
   2a484:	ldr	r0, [r4, #108]	; 0x6c
   2a488:	cmp	r0, #9
   2a48c:	bgt	2a5a8 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   2a490:	mov	r0, r4
   2a494:	mov	r1, r6
   2a498:	bl	2a920 <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2a49c:	mov	r8, r0
   2a4a0:	mov	r0, r4
   2a4a4:	mov	r1, sl
   2a4a8:	bl	2a648 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2a4ac:	ldr	r0, [sp]
   2a4b0:	mov	r1, #12
   2a4b4:	strh	r1, [r8, #24]
   2a4b8:	mov	r9, r8
   2a4bc:	str	r0, [r9, #16]!
   2a4c0:	ldr	r0, [sp]
   2a4c4:	ldr	r1, [r0]
   2a4c8:	cmp	r1, #0
   2a4cc:	beq	2a4e4 <__flatcc_fb_clear_parser@@Base+0x1988>
   2a4d0:	mov	r0, r1
   2a4d4:	ldr	r1, [r1]
   2a4d8:	cmp	r1, #0
   2a4dc:	bne	2a4d0 <__flatcc_fb_clear_parser@@Base+0x1974>
   2a4e0:	str	r0, [sp]
   2a4e4:	ldr	r0, [r0, #4]
   2a4e8:	str	r0, [r8, #4]
   2a4ec:	mov	r0, r4
   2a4f0:	mov	r1, #58	; 0x3a
   2a4f4:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a4f8:	cmp	r0, #0
   2a4fc:	beq	2a530 <__flatcc_fb_clear_parser@@Base+0x19d4>
   2a500:	ldr	r0, [r9]
   2a504:	ldr	r0, [r0]
   2a508:	cmp	r0, #0
   2a50c:	beq	2a524 <__flatcc_fb_clear_parser@@Base+0x19c8>
   2a510:	mov	r0, r4
   2a514:	mov	r1, r7
   2a518:	movw	r2, #53367	; 0xd077
   2a51c:	movt	r2, #4
   2a520:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2a524:	mov	r0, r4
   2a528:	mov	r1, r9
   2a52c:	bl	2b10c <__flatcc_fb_clear_parser@@Base+0x25b0>
   2a530:	mov	r0, r4
   2a534:	mov	r1, #61	; 0x3d
   2a538:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a53c:	cmp	r0, #0
   2a540:	beq	2a55c <__flatcc_fb_clear_parser@@Base+0x1a00>
   2a544:	add	r1, r8, #48	; 0x30
   2a548:	mov	r0, r4
   2a54c:	mov	r2, #0
   2a550:	movw	r3, #53209	; 0xcfd9
   2a554:	movt	r3, #4
   2a558:	bl	2aa48 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2a55c:	mov	r0, r4
   2a560:	mov	r1, #44	; 0x2c
   2a564:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a568:	cmp	r0, #0
   2a56c:	ldrne	r0, [r4, #40]	; 0x28
   2a570:	ldrne	r0, [r0, #16]
   2a574:	cmpne	r0, #125	; 0x7d
   2a578:	beq	2a5b8 <__flatcc_fb_clear_parser@@Base+0x1a5c>
   2a57c:	mov	r0, #0
   2a580:	str	r0, [r4, #36]	; 0x24
   2a584:	ldr	r7, [r4, #40]	; 0x28
   2a588:	ldr	r0, [r7, #16]
   2a58c:	cmp	r0, #9
   2a590:	beq	2a484 <__flatcc_fb_clear_parser@@Base+0x1928>
   2a594:	movw	r2, #53339	; 0xd05b
   2a598:	movt	r2, #4
   2a59c:	mov	r0, r4
   2a5a0:	mov	r1, r7
   2a5a4:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2a5a8:	mov	r0, r4
   2a5ac:	bl	2b2a8 <__flatcc_fb_clear_parser@@Base+0x274c>
   2a5b0:	sub	sp, fp, #28
   2a5b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a5b8:	movw	r2, #53424	; 0xd0b0
   2a5bc:	movt	r2, #4
   2a5c0:	mov	r0, r4
   2a5c4:	mov	r1, #125	; 0x7d
   2a5c8:	mov	r3, r5
   2a5cc:	bl	2a6dc <__flatcc_fb_clear_parser@@Base+0x1b80>
   2a5d0:	mov	r0, r6
   2a5d4:	bl	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a5d8:	mov	r0, r4
   2a5dc:	mov	r1, r6
   2a5e0:	bl	2a920 <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2a5e4:	add	r1, r4, #68	; 0x44
   2a5e8:	str	r1, [r0, #4]
   2a5ec:	sub	sp, fp, #28
   2a5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a5f4:	push	{r4, r5, fp, lr}
   2a5f8:	add	fp, sp, #8
   2a5fc:	mov	r4, r0
   2a600:	mov	r1, #128	; 0x80
   2a604:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2a608:	mov	r5, r0
   2a60c:	ldr	r0, [r4, #392]	; 0x188
   2a610:	mov	r1, #4
   2a614:	strh	r1, [r5, #8]
   2a618:	str	r0, [r5]
   2a61c:	str	r5, [r4, #392]	; 0x188
   2a620:	ldr	r0, [r4, #544]	; 0x220
   2a624:	str	r0, [r5, #12]
   2a628:	add	r0, r4, #36	; 0x24
   2a62c:	bl	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a630:	ldr	r0, [r4, #36]	; 0x24
   2a634:	str	r0, [r5, #32]
   2a638:	mov	r0, #0
   2a63c:	str	r0, [r4, #36]	; 0x24
   2a640:	mov	r0, r5
   2a644:	pop	{r4, r5, fp, pc}
   2a648:	push	{r4, r5, r6, sl, fp, lr}
   2a64c:	add	fp, sp, #16
   2a650:	mov	r5, r1
   2a654:	mov	r4, r0
   2a658:	ldr	r1, [r0, #40]	; 0x28
   2a65c:	bl	2a710 <__flatcc_fb_clear_parser@@Base+0x1bb4>
   2a660:	str	r0, [r5]
   2a664:	mov	r0, r4
   2a668:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2a66c:	ldr	r6, [r5]
   2a670:	mov	r0, r4
   2a674:	mov	r1, #46	; 0x2e
   2a678:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a67c:	cmp	r0, #0
   2a680:	beq	2a6c4 <__flatcc_fb_clear_parser@@Base+0x1b68>
   2a684:	ldr	r1, [r4, #40]	; 0x28
   2a688:	ldr	r0, [r1, #16]
   2a68c:	cmp	r0, #9
   2a690:	bne	2a6c8 <__flatcc_fb_clear_parser@@Base+0x1b6c>
   2a694:	mov	r0, r4
   2a698:	bl	2a710 <__flatcc_fb_clear_parser@@Base+0x1bb4>
   2a69c:	mov	r5, r0
   2a6a0:	str	r0, [r6]
   2a6a4:	mov	r0, r4
   2a6a8:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2a6ac:	mov	r0, r4
   2a6b0:	mov	r1, #46	; 0x2e
   2a6b4:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a6b8:	cmp	r0, #0
   2a6bc:	mov	r6, r5
   2a6c0:	bne	2a684 <__flatcc_fb_clear_parser@@Base+0x1b28>
   2a6c4:	pop	{r4, r5, r6, sl, fp, pc}
   2a6c8:	movw	r2, #51752	; 0xca28
   2a6cc:	movt	r2, #4
   2a6d0:	mov	r0, r4
   2a6d4:	pop	{r4, r5, r6, sl, fp, lr}
   2a6d8:	b	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2a6dc:	push	{fp, lr}
   2a6e0:	mov	fp, sp
   2a6e4:	mov	ip, r1
   2a6e8:	mov	r1, #0
   2a6ec:	str	r1, [r0, #36]	; 0x24
   2a6f0:	ldr	r1, [r0, #40]	; 0x28
   2a6f4:	ldr	lr, [r1, #16]
   2a6f8:	cmp	lr, ip
   2a6fc:	bne	2a708 <__flatcc_fb_clear_parser@@Base+0x1bac>
   2a700:	pop	{fp, lr}
   2a704:	b	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2a708:	pop	{fp, lr}
   2a70c:	b	28c98 <__flatcc_fb_clear_parser@@Base+0x13c>
   2a710:	push	{r4, sl, fp, lr}
   2a714:	add	fp, sp, #8
   2a718:	mov	r4, r1
   2a71c:	mov	r1, #12
   2a720:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2a724:	str	r4, [r0, #4]
   2a728:	pop	{r4, sl, fp, pc}
   2a72c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a730:	add	fp, sp, #28
   2a734:	sub	sp, sp, #4
   2a738:	mov	r4, r0
   2a73c:	mov	r5, #0
   2a740:	str	r5, [sp]
   2a744:	mov	r1, #40	; 0x28
   2a748:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a74c:	cmp	r0, #0
   2a750:	beq	2a820 <__flatcc_fb_clear_parser@@Base+0x1cc4>
   2a754:	mov	r9, r0
   2a758:	mov	r0, r4
   2a75c:	mov	r1, #9
   2a760:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a764:	cmp	r0, #0
   2a768:	beq	2a7fc <__flatcc_fb_clear_parser@@Base+0x1ca0>
   2a76c:	mov	r7, r0
   2a770:	mov	r6, sp
   2a774:	movw	sl, #52297	; 0xcc49
   2a778:	movt	sl, #4
   2a77c:	movw	r8, #52265	; 0xcc29
   2a780:	movt	r8, #4
   2a784:	mov	r0, r4
   2a788:	mov	r1, r6
   2a78c:	bl	2aa24 <__flatcc_fb_clear_parser@@Base+0x1ec8>
   2a790:	ldr	r5, [sp]
   2a794:	str	r7, [r5, #4]
   2a798:	mov	r0, r4
   2a79c:	mov	r1, #58	; 0x3a
   2a7a0:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a7a4:	cmp	r0, #0
   2a7a8:	beq	2a7c0 <__flatcc_fb_clear_parser@@Base+0x1c64>
   2a7ac:	add	r1, r5, #8
   2a7b0:	mov	r0, r4
   2a7b4:	mov	r2, #1
   2a7b8:	mov	r3, r8
   2a7bc:	bl	2aa48 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2a7c0:	ldr	r0, [r4, #108]	; 0x6c
   2a7c4:	cmp	r0, #9
   2a7c8:	bgt	2a820 <__flatcc_fb_clear_parser@@Base+0x1cc4>
   2a7cc:	mov	r0, r4
   2a7d0:	mov	r1, #44	; 0x2c
   2a7d4:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a7d8:	cmp	r0, #0
   2a7dc:	beq	2a7fc <__flatcc_fb_clear_parser@@Base+0x1ca0>
   2a7e0:	mov	r0, r4
   2a7e4:	mov	r1, #9
   2a7e8:	mov	r2, sl
   2a7ec:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a7f0:	mov	r7, r0
   2a7f4:	cmp	r0, #0
   2a7f8:	bne	2a784 <__flatcc_fb_clear_parser@@Base+0x1c28>
   2a7fc:	movw	r2, #52342	; 0xcc76
   2a800:	movt	r2, #4
   2a804:	mov	r0, r4
   2a808:	mov	r1, #41	; 0x29
   2a80c:	mov	r3, r9
   2a810:	bl	2a6dc <__flatcc_fb_clear_parser@@Base+0x1b80>
   2a814:	mov	r0, sp
   2a818:	bl	2ac34 <__flatcc_fb_clear_parser@@Base+0x20d8>
   2a81c:	ldr	r5, [sp]
   2a820:	mov	r0, r5
   2a824:	sub	sp, fp, #28
   2a828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a82c:	push	{r4, r5, fp, lr}
   2a830:	add	fp, sp, #8
   2a834:	mov	r5, r1
   2a838:	mov	r4, r0
   2a83c:	movw	r2, #52582	; 0xcd66
   2a840:	movt	r2, #4
   2a844:	mov	r1, #9
   2a848:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a84c:	cmp	r0, #0
   2a850:	beq	2a8ec <__flatcc_fb_clear_parser@@Base+0x1d90>
   2a854:	str	r0, [r5, #4]
   2a858:	movw	r2, #52609	; 0xcd81
   2a85c:	movt	r2, #4
   2a860:	mov	r0, r4
   2a864:	mov	r1, #40	; 0x28
   2a868:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a86c:	cmp	r0, #0
   2a870:	beq	2a8ec <__flatcc_fb_clear_parser@@Base+0x1d90>
   2a874:	add	r1, r5, #32
   2a878:	mov	r0, r4
   2a87c:	bl	2b10c <__flatcc_fb_clear_parser@@Base+0x25b0>
   2a880:	movw	r2, #52646	; 0xcda6
   2a884:	movt	r2, #4
   2a888:	mov	r0, r4
   2a88c:	mov	r1, #41	; 0x29
   2a890:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a894:	cmp	r0, #0
   2a898:	beq	2a8ec <__flatcc_fb_clear_parser@@Base+0x1d90>
   2a89c:	movw	r2, #52685	; 0xcdcd
   2a8a0:	movt	r2, #4
   2a8a4:	mov	r0, r4
   2a8a8:	mov	r1, #58	; 0x3a
   2a8ac:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a8b0:	cmp	r0, #0
   2a8b4:	beq	2a8ec <__flatcc_fb_clear_parser@@Base+0x1d90>
   2a8b8:	add	r1, r5, #16
   2a8bc:	mov	r0, r4
   2a8c0:	bl	2b10c <__flatcc_fb_clear_parser@@Base+0x25b0>
   2a8c4:	mov	r0, r4
   2a8c8:	mov	r1, #61	; 0x3d
   2a8cc:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a8d0:	cmp	r0, #0
   2a8d4:	beq	2a8f8 <__flatcc_fb_clear_parser@@Base+0x1d9c>
   2a8d8:	mov	r1, r0
   2a8dc:	movw	r2, #52736	; 0xce00
   2a8e0:	movt	r2, #4
   2a8e4:	mov	r0, r4
   2a8e8:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2a8ec:	mov	r0, r4
   2a8f0:	pop	{r4, r5, fp, lr}
   2a8f4:	b	2b2a8 <__flatcc_fb_clear_parser@@Base+0x274c>
   2a8f8:	mov	r0, r4
   2a8fc:	bl	2a72c <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2a900:	str	r0, [r5, #64]	; 0x40
   2a904:	movw	r2, #52774	; 0xce26
   2a908:	movt	r2, #4
   2a90c:	mov	r0, r4
   2a910:	mov	r1, #59	; 0x3b
   2a914:	mov	r3, #0
   2a918:	pop	{r4, r5, fp, lr}
   2a91c:	b	2a6dc <__flatcc_fb_clear_parser@@Base+0x1b80>
   2a920:	push	{r4, r5, r6, sl, fp, lr}
   2a924:	add	fp, sp, #16
   2a928:	mov	r4, r1
   2a92c:	mov	r5, r0
   2a930:	mov	r1, #120	; 0x78
   2a934:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2a938:	mov	r6, r0
   2a93c:	ldr	r0, [r4]
   2a940:	mov	r1, #5
   2a944:	strh	r1, [r6, #8]
   2a948:	str	r0, [r6]
   2a94c:	str	r6, [r4]
   2a950:	add	r0, r5, #36	; 0x24
   2a954:	bl	29a54 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a958:	ldr	r0, [r5, #36]	; 0x24
   2a95c:	str	r0, [r6, #68]	; 0x44
   2a960:	mov	r0, #0
   2a964:	str	r0, [r5, #36]	; 0x24
   2a968:	mov	r0, r6
   2a96c:	pop	{r4, r5, r6, sl, fp, pc}
   2a970:	push	{r4, r5, fp, lr}
   2a974:	add	fp, sp, #8
   2a978:	mov	r5, r1
   2a97c:	mov	r4, r0
   2a980:	movw	r2, #52956	; 0xcedc
   2a984:	movt	r2, #4
   2a988:	mov	r1, #9
   2a98c:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a990:	cmp	r0, #0
   2a994:	beq	2aa18 <__flatcc_fb_clear_parser@@Base+0x1ebc>
   2a998:	str	r0, [r5, #4]
   2a99c:	movw	r2, #52982	; 0xcef6
   2a9a0:	movt	r2, #4
   2a9a4:	mov	r0, r4
   2a9a8:	mov	r1, #58	; 0x3a
   2a9ac:	bl	29ab8 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a9b0:	cmp	r0, #0
   2a9b4:	beq	2aa18 <__flatcc_fb_clear_parser@@Base+0x1ebc>
   2a9b8:	add	r1, r5, #16
   2a9bc:	mov	r0, r4
   2a9c0:	bl	2b10c <__flatcc_fb_clear_parser@@Base+0x25b0>
   2a9c4:	mov	r0, r4
   2a9c8:	mov	r1, #61	; 0x3d
   2a9cc:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2a9d0:	cmp	r0, #0
   2a9d4:	beq	2a9f0 <__flatcc_fb_clear_parser@@Base+0x1e94>
   2a9d8:	add	r1, r5, #48	; 0x30
   2a9dc:	movw	r3, #53023	; 0xcf1f
   2a9e0:	movt	r3, #4
   2a9e4:	mov	r0, r4
   2a9e8:	mov	r2, #2
   2a9ec:	bl	2aa48 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2a9f0:	mov	r0, r4
   2a9f4:	bl	2a72c <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2a9f8:	str	r0, [r5, #64]	; 0x40
   2a9fc:	movw	r2, #53058	; 0xcf42
   2aa00:	movt	r2, #4
   2aa04:	mov	r0, r4
   2aa08:	mov	r1, #59	; 0x3b
   2aa0c:	mov	r3, #0
   2aa10:	pop	{r4, r5, fp, lr}
   2aa14:	b	2a6dc <__flatcc_fb_clear_parser@@Base+0x1b80>
   2aa18:	mov	r0, r4
   2aa1c:	pop	{r4, r5, fp, lr}
   2aa20:	b	2b2a8 <__flatcc_fb_clear_parser@@Base+0x274c>
   2aa24:	push	{r4, sl, fp, lr}
   2aa28:	add	fp, sp, #8
   2aa2c:	mov	r4, r1
   2aa30:	mov	r1, #24
   2aa34:	bl	28cbc <__flatcc_fb_clear_parser@@Base+0x160>
   2aa38:	ldr	r1, [r4]
   2aa3c:	str	r1, [r0]
   2aa40:	str	r0, [r4]
   2aa44:	pop	{r4, sl, fp, pc}
   2aa48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2aa4c:	add	fp, sp, #24
   2aa50:	mov	r8, r3
   2aa54:	mov	r5, r2
   2aa58:	mov	r6, r1
   2aa5c:	mov	r4, r0
   2aa60:	mov	r1, #45	; 0x2d
   2aa64:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2aa68:	mov	r7, r0
   2aa6c:	ldr	r9, [r4, #40]	; 0x28
   2aa70:	ldr	r0, [r9, #16]
   2aa74:	sub	r1, r0, #9
   2aa78:	cmp	r1, #10
   2aa7c:	bhi	2aae4 <__flatcc_fb_clear_parser@@Base+0x1f88>
   2aa80:	add	r0, pc, #0
   2aa84:	ldr	pc, [r0, r1, lsl #2]
   2aa88:			; <UNDEFINED> instruction: 0x0002aab4
   2aa8c:	andeq	sl, r2, ip, lsl #22
   2aa90:	andeq	sl, r2, r4, lsr fp
   2aa94:	andeq	sl, r2, r8, lsr #23
   2aa98:	andeq	sl, r2, r8, lsr #23
   2aa9c:	andeq	sl, r2, ip, asr fp
   2aaa0:	andeq	sl, r2, r8, lsr #23
   2aaa4:	andeq	sl, r2, r8, lsr #23
   2aaa8:	andeq	sl, r2, r8, lsr #23
   2aaac:	andeq	sl, r2, r8, lsr #23
   2aab0:	andeq	sl, r2, r4, lsl #23
   2aab4:	mov	r0, r4
   2aab8:	mov	r1, r6
   2aabc:	bl	2a648 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2aac0:	mov	r0, #13
   2aac4:	strh	r0, [r6, #8]
   2aac8:	cmp	r7, #0
   2aacc:	beq	2ac30 <__flatcc_fb_clear_parser@@Base+0x20d4>
   2aad0:	mov	r0, #1
   2aad4:	strh	r0, [r6, #8]
   2aad8:	movw	r2, #52407	; 0xccb7
   2aadc:	movt	r2, #4
   2aae0:	b	2ac20 <__flatcc_fb_clear_parser@@Base+0x20c4>
   2aae4:	cmn	r0, #988	; 0x3dc
   2aae8:	beq	2abbc <__flatcc_fb_clear_parser@@Base+0x2060>
   2aaec:	movw	r1, #64550	; 0xfc26
   2aaf0:	movt	r1, #65535	; 0xffff
   2aaf4:	cmp	r0, r1
   2aaf8:	bne	2aba8 <__flatcc_fb_clear_parser@@Base+0x204c>
   2aafc:	mov	r0, #6
   2ab00:	strh	r0, [r6, #8]
   2ab04:	mov	r0, #0
   2ab08:	b	2abc8 <__flatcc_fb_clear_parser@@Base+0x206c>
   2ab0c:	cmp	r7, #0
   2ab10:	mov	r3, r7
   2ab14:	movwne	r3, #1
   2ab18:	mov	r0, r4
   2ab1c:	mov	r1, r9
   2ab20:	mov	r2, r6
   2ab24:	bl	2acec <__flatcc_fb_clear_parser@@Base+0x2190>
   2ab28:	cmp	r7, #0
   2ab2c:	bne	2abd4 <__flatcc_fb_clear_parser@@Base+0x2078>
   2ab30:	b	2abfc <__flatcc_fb_clear_parser@@Base+0x20a0>
   2ab34:	cmp	r7, #0
   2ab38:	mov	r3, r7
   2ab3c:	movwne	r3, #1
   2ab40:	mov	r0, r4
   2ab44:	mov	r1, r9
   2ab48:	mov	r2, r6
   2ab4c:	bl	2ad6c <__flatcc_fb_clear_parser@@Base+0x2210>
   2ab50:	cmp	r7, #0
   2ab54:	bne	2abd4 <__flatcc_fb_clear_parser@@Base+0x2078>
   2ab58:	b	2abfc <__flatcc_fb_clear_parser@@Base+0x20a0>
   2ab5c:	cmp	r7, #0
   2ab60:	mov	r3, r7
   2ab64:	movwne	r3, #1
   2ab68:	mov	r0, r4
   2ab6c:	mov	r1, r9
   2ab70:	mov	r2, r6
   2ab74:	bl	2ac6c <__flatcc_fb_clear_parser@@Base+0x2110>
   2ab78:	cmp	r7, #0
   2ab7c:	bne	2abd4 <__flatcc_fb_clear_parser@@Base+0x2078>
   2ab80:	b	2abfc <__flatcc_fb_clear_parser@@Base+0x20a0>
   2ab84:	mov	r0, r4
   2ab88:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2ab8c:	mov	r0, r4
   2ab90:	mov	r1, r6
   2ab94:	bl	29b34 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2ab98:	tst	r5, #1
   2ab9c:	bne	2ac08 <__flatcc_fb_clear_parser@@Base+0x20ac>
   2aba0:	mov	r0, #1
   2aba4:	strh	r0, [r6, #8]
   2aba8:	mov	r0, r4
   2abac:	mov	r1, r9
   2abb0:	mov	r2, r8
   2abb4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2abb8:	b	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2abbc:	mov	r0, #6
   2abc0:	strh	r0, [r6, #8]
   2abc4:	mov	r0, #1
   2abc8:	strb	r0, [r6]
   2abcc:	cmp	r7, #0
   2abd0:	beq	2abfc <__flatcc_fb_clear_parser@@Base+0x20a0>
   2abd4:	ldrh	r0, [r6, #8]
   2abd8:	cmp	r0, #6
   2abdc:	bne	2abfc <__flatcc_fb_clear_parser@@Base+0x20a0>
   2abe0:	mov	r0, #1
   2abe4:	strh	r0, [r6, #8]
   2abe8:	movw	r2, #52437	; 0xccd5
   2abec:	movt	r2, #4
   2abf0:	mov	r0, r4
   2abf4:	mov	r1, r9
   2abf8:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2abfc:	mov	r0, r4
   2ac00:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ac04:	b	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2ac08:	cmp	r7, #0
   2ac0c:	beq	2ac30 <__flatcc_fb_clear_parser@@Base+0x20d4>
   2ac10:	mov	r0, #1
   2ac14:	strh	r0, [r6, #8]
   2ac18:	movw	r2, #52373	; 0xcc95
   2ac1c:	movt	r2, #4
   2ac20:	mov	r0, r4
   2ac24:	mov	r1, r9
   2ac28:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ac2c:	b	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2ac30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ac34:	ldr	r1, [r0]
   2ac38:	cmp	r1, #0
   2ac3c:	moveq	r2, #0
   2ac40:	streq	r2, [r0]
   2ac44:	bxeq	lr
   2ac48:	mov	r3, #0
   2ac4c:	mov	r2, r1
   2ac50:	ldr	r1, [r1]
   2ac54:	str	r3, [r2]
   2ac58:	cmp	r1, #0
   2ac5c:	mov	r3, r2
   2ac60:	bne	2ac4c <__flatcc_fb_clear_parser@@Base+0x20f0>
   2ac64:	str	r2, [r0]
   2ac68:	bx	lr
   2ac6c:	push	{r4, r5, r6, r7, fp, lr}
   2ac70:	add	fp, sp, #16
   2ac74:	sub	sp, sp, #8
   2ac78:	mov	r5, r3
   2ac7c:	mov	r4, r2
   2ac80:	mov	r6, r1
   2ac84:	mov	r7, r0
   2ac88:	mov	r0, #5
   2ac8c:	strh	r0, [r2, #8]
   2ac90:	ldm	r1, {r0, r1}
   2ac94:	add	r3, sp, #4
   2ac98:	bl	2ae0c <__flatcc_fb_clear_parser@@Base+0x22b0>
   2ac9c:	ldr	r0, [sp, #4]
   2aca0:	cmp	r0, #0
   2aca4:	beq	2acc4 <__flatcc_fb_clear_parser@@Base+0x2168>
   2aca8:	mov	r0, #1
   2acac:	strh	r0, [r4, #8]
   2acb0:	movw	r2, #52472	; 0xccf8
   2acb4:	movt	r2, #4
   2acb8:	mov	r0, r7
   2acbc:	mov	r1, r6
   2acc0:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2acc4:	cmp	r5, #0
   2acc8:	beq	2ace4 <__flatcc_fb_clear_parser@@Base+0x2188>
   2accc:	mov	r0, #4
   2acd0:	strh	r0, [r4, #8]
   2acd4:	ldrd	r0, [r4]
   2acd8:	rsbs	r0, r0, #0
   2acdc:	rsc	r1, r1, #0
   2ace0:	strd	r0, [r4]
   2ace4:	sub	sp, fp, #16
   2ace8:	pop	{r4, r5, r6, r7, fp, pc}
   2acec:	push	{r4, r5, r6, r7, fp, lr}
   2acf0:	add	fp, sp, #16
   2acf4:	sub	sp, sp, #8
   2acf8:	mov	r5, r3
   2acfc:	mov	r4, r2
   2ad00:	mov	r6, r1
   2ad04:	mov	r7, r0
   2ad08:	mov	r0, #5
   2ad0c:	strh	r0, [r2, #8]
   2ad10:	ldm	r1, {r0, r1}
   2ad14:	add	r3, sp, #4
   2ad18:	bl	2afb8 <__flatcc_fb_clear_parser@@Base+0x245c>
   2ad1c:	ldr	r0, [sp, #4]
   2ad20:	cmp	r0, #0
   2ad24:	beq	2ad44 <__flatcc_fb_clear_parser@@Base+0x21e8>
   2ad28:	mov	r0, #1
   2ad2c:	strh	r0, [r4, #8]
   2ad30:	movw	r2, #52499	; 0xcd13
   2ad34:	movt	r2, #4
   2ad38:	mov	r0, r7
   2ad3c:	mov	r1, r6
   2ad40:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2ad44:	cmp	r5, #0
   2ad48:	beq	2ad64 <__flatcc_fb_clear_parser@@Base+0x2208>
   2ad4c:	mov	r0, #4
   2ad50:	strh	r0, [r4, #8]
   2ad54:	ldrd	r0, [r4]
   2ad58:	rsbs	r0, r0, #0
   2ad5c:	rsc	r1, r1, #0
   2ad60:	strd	r0, [r4]
   2ad64:	sub	sp, fp, #16
   2ad68:	pop	{r4, r5, r6, r7, fp, pc}
   2ad6c:	push	{r4, r5, r6, r7, fp, lr}
   2ad70:	add	fp, sp, #16
   2ad74:	sub	sp, sp, #8
   2ad78:	mov	r7, r3
   2ad7c:	mov	r5, r2
   2ad80:	mov	r4, r1
   2ad84:	mov	r6, r0
   2ad88:	mov	r0, #3
   2ad8c:	strh	r0, [r2, #8]
   2ad90:	ldr	r0, [r1]
   2ad94:	add	r1, sp, #4
   2ad98:	bl	148f4 <strtod@plt>
   2ad9c:	vstr	d0, [r5]
   2ada0:	ldm	r4, {r0, r1}
   2ada4:	add	r1, r0, r1
   2ada8:	ldr	r2, [sp, #4]
   2adac:	cmp	r2, r1
   2adb0:	beq	2adc8 <__flatcc_fb_clear_parser@@Base+0x226c>
   2adb4:	mov	r0, #1
   2adb8:	strh	r0, [r5, #8]
   2adbc:	movw	r2, #52522	; 0xcd2a
   2adc0:	movt	r2, #4
   2adc4:	b	2ade4 <__flatcc_fb_clear_parser@@Base+0x2288>
   2adc8:	ldrb	r0, [r0]
   2adcc:	cmp	r0, #46	; 0x2e
   2add0:	bne	2adf8 <__flatcc_fb_clear_parser@@Base+0x229c>
   2add4:	mov	r0, #1
   2add8:	strh	r0, [r5, #8]
   2addc:	movw	r2, #52543	; 0xcd3f
   2ade0:	movt	r2, #4
   2ade4:	mov	r0, r6
   2ade8:	mov	r1, r4
   2adec:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2adf0:	sub	sp, fp, #16
   2adf4:	pop	{r4, r5, r6, r7, fp, pc}
   2adf8:	cmp	r7, #0
   2adfc:	vnegne.f64	d16, d0
   2ae00:	vstrne	d16, [r5]
   2ae04:	sub	sp, fp, #16
   2ae08:	pop	{r4, r5, r6, r7, fp, pc}
   2ae0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ae10:	add	fp, sp, #28
   2ae14:	sub	sp, sp, #12
   2ae18:	add	ip, sp, #8
   2ae1c:	cmp	r3, #0
   2ae20:	movne	ip, r3
   2ae24:	cmp	r1, #0
   2ae28:	beq	2af18 <__flatcc_fb_clear_parser@@Base+0x23bc>
   2ae2c:	add	r9, r0, r1
   2ae30:	ldrb	sl, [r0]
   2ae34:	sub	r1, sl, #45	; 0x2d
   2ae38:	clz	r1, r1
   2ae3c:	lsr	r3, r1, #5
   2ae40:	add	r4, r0, r3
   2ae44:	sub	r0, r9, r4
   2ae48:	mvn	r6, #3
   2ae4c:	cmp	r0, #2
   2ae50:	blt	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2ae54:	ldrb	r0, [r4]
   2ae58:	cmp	r0, #48	; 0x30
   2ae5c:	bne	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2ae60:	ldrb	r0, [r4, #1]
   2ae64:	orr	r0, r0, #32
   2ae68:	cmp	r0, #120	; 0x78
   2ae6c:	bne	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2ae70:	add	r1, r4, #2
   2ae74:	sub	r0, r9, r1
   2ae78:	cmp	r0, #16
   2ae7c:	mov	r0, r9
   2ae80:	addgt	r0, r4, #18
   2ae84:	cmp	r1, r0
   2ae88:	beq	2af3c <__flatcc_fb_clear_parser@@Base+0x23e0>
   2ae8c:	str	r3, [sp]
   2ae90:	str	r2, [sp, #4]
   2ae94:	sub	r7, r0, r4
   2ae98:	mov	r0, #0
   2ae9c:	mov	r6, #2
   2aea0:	mov	r5, #0
   2aea4:	b	2aecc <__flatcc_fb_clear_parser@@Base+0x2370>
   2aea8:	lsl	r1, r5, #4
   2aeac:	orr	r1, r1, r0, lsr #28
   2aeb0:	adds	r0, r8, r0, lsl #4
   2aeb4:	adc	r1, r1, r2
   2aeb8:	adds	r0, r0, r3
   2aebc:	adc	r5, r1, #0
   2aec0:	add	r6, r6, #1
   2aec4:	cmp	r7, r6
   2aec8:	beq	2af28 <__flatcc_fb_clear_parser@@Base+0x23cc>
   2aecc:	mvn	r1, #86	; 0x56
   2aed0:	adds	r8, r1, #39	; 0x27
   2aed4:	mvn	r1, #0
   2aed8:	adc	r2, r1, #0
   2aedc:	ldrb	r3, [r4, r6]
   2aee0:	sub	lr, r3, #48	; 0x30
   2aee4:	uxtb	r1, lr
   2aee8:	cmp	r1, #10
   2aeec:	bcc	2aea8 <__flatcc_fb_clear_parser@@Base+0x234c>
   2aef0:	orr	r3, r3, #32
   2aef4:	sub	r1, r3, #97	; 0x61
   2aef8:	uxtb	r1, r1
   2aefc:	cmp	r1, #5
   2af00:	mvn	r8, #86	; 0x56
   2af04:	mvn	r2, #0
   2af08:	bls	2aea8 <__flatcc_fb_clear_parser@@Base+0x234c>
   2af0c:	add	r3, r4, r6
   2af10:	mov	r7, #0
   2af14:	b	2af30 <__flatcc_fb_clear_parser@@Base+0x23d4>
   2af18:	mvn	r6, #4
   2af1c:	str	r6, [ip]
   2af20:	sub	sp, fp, #28
   2af24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2af28:	add	r3, r4, r6
   2af2c:	mov	r7, #1
   2af30:	ldm	sp, {r8, lr}
   2af34:	cmp	r6, #2
   2af38:	bne	2af4c <__flatcc_fb_clear_parser@@Base+0x23f0>
   2af3c:	mvn	r6, #3
   2af40:	cmp	sl, #45	; 0x2d
   2af44:	mvneq	r6, #2
   2af48:	b	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2af4c:	cmp	r3, r9
   2af50:	beq	2afac <__flatcc_fb_clear_parser@@Base+0x2450>
   2af54:	ldrb	r1, [r4, r6]
   2af58:	cmp	r7, #0
   2af5c:	beq	2af94 <__flatcc_fb_clear_parser@@Base+0x2438>
   2af60:	sub	r2, r1, #48	; 0x30
   2af64:	uxtb	r2, r2
   2af68:	cmp	r2, #9
   2af6c:	bls	2af84 <__flatcc_fb_clear_parser@@Base+0x2428>
   2af70:	orr	r1, r1, #32
   2af74:	sub	r2, r1, #97	; 0x61
   2af78:	uxtb	r2, r2
   2af7c:	cmp	r2, #5
   2af80:	bhi	2af94 <__flatcc_fb_clear_parser@@Base+0x2438>
   2af84:	mvn	r6, #0
   2af88:	cmp	sl, #45	; 0x2d
   2af8c:	mvneq	r6, #1
   2af90:	b	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2af94:	mvn	r6, #2
   2af98:	cmp	r1, #46	; 0x2e
   2af9c:	beq	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2afa0:	cmp	r1, #80	; 0x50
   2afa4:	cmpne	r1, #112	; 0x70
   2afa8:	beq	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2afac:	stm	lr, {r0, r5}
   2afb0:	mov	r6, r8
   2afb4:	b	2af1c <__flatcc_fb_clear_parser@@Base+0x23c0>
   2afb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2afbc:	add	fp, sp, #28
   2afc0:	sub	sp, sp, #4
   2afc4:	mov	ip, sp
   2afc8:	cmp	r3, #0
   2afcc:	movne	ip, r3
   2afd0:	cmp	r1, #0
   2afd4:	beq	2b044 <__flatcc_fb_clear_parser@@Base+0x24e8>
   2afd8:	ldrb	r9, [r0]
   2afdc:	sub	r3, r9, #45	; 0x2d
   2afe0:	clz	r3, r3
   2afe4:	lsr	r8, r3, #5
   2afe8:	add	lr, r0, r8
   2afec:	cmp	r8, r1
   2aff0:	bne	2b04c <__flatcc_fb_clear_parser@@Base+0x24f0>
   2aff4:	mov	r6, #0
   2aff8:	mov	r3, #0
   2affc:	mov	r1, lr
   2b000:	mov	r7, #0
   2b004:	cmp	r1, r0
   2b008:	beq	2b0cc <__flatcc_fb_clear_parser@@Base+0x2570>
   2b00c:	mvn	r0, #2
   2b010:	cmp	r1, lr
   2b014:	beq	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b018:	cmp	r7, #0
   2b01c:	beq	2b0f4 <__flatcc_fb_clear_parser@@Base+0x2598>
   2b020:	ldrb	r1, [r1]
   2b024:	cmp	r1, #79	; 0x4f
   2b028:	ble	2b0e4 <__flatcc_fb_clear_parser@@Base+0x2588>
   2b02c:	cmp	r1, #80	; 0x50
   2b030:	beq	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b034:	cmp	r1, #101	; 0x65
   2b038:	cmpne	r1, #112	; 0x70
   2b03c:	beq	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b040:	b	2b0f4 <__flatcc_fb_clear_parser@@Base+0x2598>
   2b044:	mvn	r0, #4
   2b048:	b	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b04c:	sub	r7, r1, r8
   2b050:	mov	r6, #0
   2b054:	mov	sl, #10
   2b058:	mov	r1, lr
   2b05c:	mov	r3, #0
   2b060:	ldrb	r4, [r1]
   2b064:	sub	r5, r4, #48	; 0x30
   2b068:	uxtb	r5, r5
   2b06c:	cmp	r5, #9
   2b070:	bhi	2b0c0 <__flatcc_fb_clear_parser@@Base+0x2564>
   2b074:	add	r5, r3, r3, lsl #2
   2b078:	lsl	r5, r5, #1
   2b07c:	umlal	r4, r5, r6, sl
   2b080:	subs	r4, r4, #48	; 0x30
   2b084:	sbc	r5, r5, #0
   2b088:	subs	r6, r4, r6
   2b08c:	sbcs	r3, r5, r3
   2b090:	bcc	2b0d4 <__flatcc_fb_clear_parser@@Base+0x2578>
   2b094:	subs	r7, r7, #1
   2b098:	add	r1, r1, #1
   2b09c:	mov	r6, r4
   2b0a0:	mov	r3, r5
   2b0a4:	bne	2b060 <__flatcc_fb_clear_parser@@Base+0x2504>
   2b0a8:	mov	r7, #0
   2b0ac:	mov	r6, r4
   2b0b0:	mov	r3, r5
   2b0b4:	cmp	r1, r0
   2b0b8:	bne	2b00c <__flatcc_fb_clear_parser@@Base+0x24b0>
   2b0bc:	b	2b0cc <__flatcc_fb_clear_parser@@Base+0x2570>
   2b0c0:	mov	r7, #1
   2b0c4:	cmp	r1, r0
   2b0c8:	bne	2b00c <__flatcc_fb_clear_parser@@Base+0x24b0>
   2b0cc:	mvn	r0, #3
   2b0d0:	b	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b0d4:	mvn	r0, #0
   2b0d8:	cmp	r9, #45	; 0x2d
   2b0dc:	mvneq	r0, #1
   2b0e0:	b	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b0e4:	cmp	r1, #46	; 0x2e
   2b0e8:	beq	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b0ec:	cmp	r1, #69	; 0x45
   2b0f0:	beq	2b100 <__flatcc_fb_clear_parser@@Base+0x25a4>
   2b0f4:	str	r6, [r2]
   2b0f8:	str	r3, [r2, #4]
   2b0fc:	mov	r0, r8
   2b100:	str	r0, [ip]
   2b104:	sub	sp, fp, #28
   2b108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b10c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b110:	add	fp, sp, #24
   2b114:	mov	r6, r1
   2b118:	mov	r4, r0
   2b11c:	ldr	r8, [r0, #40]	; 0x28
   2b120:	mov	r7, #1
   2b124:	strh	r7, [r1, #8]
   2b128:	mov	r0, r4
   2b12c:	mov	r1, #91	; 0x5b
   2b130:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2b134:	sub	r7, r7, #1
   2b138:	cmp	r0, #0
   2b13c:	bne	2b128 <__flatcc_fb_clear_parser@@Base+0x25cc>
   2b140:	rsb	r0, r7, #0
   2b144:	cmp	r0, #2
   2b148:	bcc	2b160 <__flatcc_fb_clear_parser@@Base+0x2604>
   2b14c:	movw	r2, #52809	; 0xce49
   2b150:	movt	r2, #4
   2b154:	mov	r0, r4
   2b158:	mov	r1, r8
   2b15c:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2b160:	ldr	r1, [r4, #40]	; 0x28
   2b164:	ldr	r0, [r1, #16]
   2b168:	movw	r2, #999	; 0x3e7
   2b16c:	add	r2, r0, r2
   2b170:	cmp	r2, #27
   2b174:	bhi	2b254 <__flatcc_fb_clear_parser@@Base+0x26f8>
   2b178:	mov	r3, #1
   2b17c:	movw	r5, #55291	; 0xd7fb
   2b180:	movt	r5, #2430	; 0x97e
   2b184:	tst	r5, r3, lsl r2
   2b188:	beq	2b234 <__flatcc_fb_clear_parser@@Base+0x26d8>
   2b18c:	mov	r0, #7
   2b190:	cmp	r7, #0
   2b194:	movweq	r0, #8
   2b198:	ldr	r1, [r4, #40]	; 0x28
   2b19c:	strh	r0, [r6, #8]
   2b1a0:	str	r1, [r6]
   2b1a4:	mov	r0, r4
   2b1a8:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2b1ac:	mov	r0, r4
   2b1b0:	mov	r1, #93	; 0x5d
   2b1b4:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2b1b8:	cmp	r0, #0
   2b1bc:	beq	2b1d0 <__flatcc_fb_clear_parser@@Base+0x2674>
   2b1c0:	add	r7, r7, #1
   2b1c4:	cmp	r7, #1
   2b1c8:	bne	2b1ac <__flatcc_fb_clear_parser@@Base+0x2650>
   2b1cc:	b	2b1d8 <__flatcc_fb_clear_parser@@Base+0x267c>
   2b1d0:	cmp	r7, #0
   2b1d4:	beq	2b1f0 <__flatcc_fb_clear_parser@@Base+0x2694>
   2b1d8:	movw	r2, #52900	; 0xcea4
   2b1dc:	movt	r2, #4
   2b1e0:	mov	r0, r4
   2b1e4:	mov	r1, #0
   2b1e8:	mov	r3, r8
   2b1ec:	bl	28c98 <__flatcc_fb_clear_parser@@Base+0x13c>
   2b1f0:	mov	r0, r4
   2b1f4:	mov	r1, #93	; 0x5d
   2b1f8:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2b1fc:	cmp	r0, #0
   2b200:	beq	2b230 <__flatcc_fb_clear_parser@@Base+0x26d4>
   2b204:	mov	r1, r0
   2b208:	movw	r2, #52933	; 0xcec5
   2b20c:	movt	r2, #4
   2b210:	mov	r0, r4
   2b214:	mov	r3, r8
   2b218:	bl	28c98 <__flatcc_fb_clear_parser@@Base+0x13c>
   2b21c:	mov	r0, r4
   2b220:	mov	r1, #93	; 0x5d
   2b224:	bl	29a8c <__flatcc_fb_clear_parser@@Base+0xf30>
   2b228:	cmp	r0, #0
   2b22c:	bne	2b21c <__flatcc_fb_clear_parser@@Base+0x26c0>
   2b230:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b234:	cmp	r2, #25
   2b238:	bne	2b254 <__flatcc_fb_clear_parser@@Base+0x26f8>
   2b23c:	str	r1, [r6]
   2b240:	mov	r0, #9
   2b244:	cmp	r7, #0
   2b248:	movweq	r0, #10
   2b24c:	strh	r0, [r6, #8]
   2b250:	b	2b1a4 <__flatcc_fb_clear_parser@@Base+0x2648>
   2b254:	cmp	r0, #9
   2b258:	beq	2b270 <__flatcc_fb_clear_parser@@Base+0x2714>
   2b25c:	cmp	r0, #93	; 0x5d
   2b260:	bne	2b290 <__flatcc_fb_clear_parser@@Base+0x2734>
   2b264:	movw	r2, #52849	; 0xce71
   2b268:	movt	r2, #4
   2b26c:	b	2b298 <__flatcc_fb_clear_parser@@Base+0x273c>
   2b270:	mov	r0, r4
   2b274:	mov	r1, r6
   2b278:	bl	2a648 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2b27c:	mov	r0, #11
   2b280:	cmp	r7, #0
   2b284:	movweq	r0, #12
   2b288:	strh	r0, [r6, #8]
   2b28c:	b	2b1ac <__flatcc_fb_clear_parser@@Base+0x2650>
   2b290:	movw	r2, #52877	; 0xce8d
   2b294:	movt	r2, #4
   2b298:	mov	r0, r4
   2b29c:	mov	r1, #0
   2b2a0:	bl	28c90 <__flatcc_fb_clear_parser@@Base+0x134>
   2b2a4:	b	2b1ac <__flatcc_fb_clear_parser@@Base+0x2650>
   2b2a8:	push	{r4, r5, fp, lr}
   2b2ac:	add	fp, sp, #8
   2b2b0:	mov	r4, r0
   2b2b4:	ldr	r5, [r0, #40]	; 0x28
   2b2b8:	mov	r0, r5
   2b2bc:	bl	29758 <__flatcc_fb_clear_parser@@Base+0xbfc>
   2b2c0:	cmp	r0, #0
   2b2c4:	bne	2b2fc <__flatcc_fb_clear_parser@@Base+0x27a0>
   2b2c8:	ldr	r0, [r5, #16]
   2b2cc:	cmp	r0, #125	; 0x7d
   2b2d0:	beq	2b2f4 <__flatcc_fb_clear_parser@@Base+0x2798>
   2b2d4:	cmp	r0, #59	; 0x3b
   2b2d8:	beq	2b2ec <__flatcc_fb_clear_parser@@Base+0x2790>
   2b2dc:	mov	r0, r4
   2b2e0:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2b2e4:	ldr	r5, [r4, #40]	; 0x28
   2b2e8:	b	2b2b8 <__flatcc_fb_clear_parser@@Base+0x275c>
   2b2ec:	mov	r0, r4
   2b2f0:	bl	28a6c <__flatcc_fb_parse@@Base+0x1040>
   2b2f4:	mov	r0, #0
   2b2f8:	str	r0, [r4, #36]	; 0x24
   2b2fc:	pop	{r4, r5, fp, pc}

0002b300 <__flatcc_fb_build_schema@@Base>:
   2b300:	push	{r4, r5, r6, r7, fp, lr}
   2b304:	add	fp, sp, #16
   2b308:	mov	r4, r0
   2b30c:	add	r0, r0, #524	; 0x20c
   2b310:	add	r5, r4, #352	; 0x160
   2b314:	mov	r1, r5
   2b318:	bl	2b6c4 <__flatcc_fb_build_schema@@Base+0x3c4>
   2b31c:	cmp	r0, #0
   2b320:	beq	2b6a4 <__flatcc_fb_build_schema@@Base+0x3a4>
   2b324:	ldr	r6, [r4, #392]	; 0x188
   2b328:	cmp	r6, #0
   2b32c:	beq	2b398 <__flatcc_fb_build_schema@@Base+0x98>
   2b330:	movw	r7, #53886	; 0xd27e
   2b334:	movt	r7, #4
   2b338:	b	2b348 <__flatcc_fb_build_schema@@Base+0x48>
   2b33c:	ldr	r6, [r6]
   2b340:	cmp	r6, #0
   2b344:	beq	2b398 <__flatcc_fb_build_schema@@Base+0x98>
   2b348:	ldrh	r0, [r6, #8]
   2b34c:	cmp	r0, #4
   2b350:	bhi	2b33c <__flatcc_fb_build_schema@@Base+0x3c>
   2b354:	mov	r0, r6
   2b358:	bl	2b6dc <__flatcc_fb_build_schema@@Base+0x3dc>
   2b35c:	str	r5, [r6, #16]
   2b360:	ldr	r0, [r6, #12]
   2b364:	cmp	r0, #0
   2b368:	beq	2b33c <__flatcc_fb_build_schema@@Base+0x3c>
   2b36c:	add	r0, r0, #4
   2b370:	mov	r1, r6
   2b374:	bl	2b75c <__flatcc_fb_build_schema@@Base+0x45c>
   2b378:	cmp	r0, #0
   2b37c:	beq	2b33c <__flatcc_fb_build_schema@@Base+0x3c>
   2b380:	mov	r3, r0
   2b384:	mov	r0, r4
   2b388:	mov	r1, r6
   2b38c:	mov	r2, r7
   2b390:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2b394:	b	2b33c <__flatcc_fb_build_schema@@Base+0x3c>
   2b398:	ldr	r5, [r4, #356]	; 0x164
   2b39c:	cmp	r5, #0
   2b3a0:	beq	2b3d0 <__flatcc_fb_build_schema@@Base+0xd0>
   2b3a4:	ldr	r0, [r4, #412]	; 0x19c
   2b3a8:	add	r0, r0, #16
   2b3ac:	mov	r1, r5
   2b3b0:	bl	2b770 <__flatcc_fb_build_schema@@Base+0x470>
   2b3b4:	cmp	r0, #0
   2b3b8:	movne	r0, r4
   2b3bc:	movne	r1, r5
   2b3c0:	blne	2b778 <__flatcc_fb_build_schema@@Base+0x478>
   2b3c4:	ldr	r5, [r5]
   2b3c8:	cmp	r5, #0
   2b3cc:	bne	2b3a4 <__flatcc_fb_build_schema@@Base+0xa4>
   2b3d0:	mov	r0, r4
   2b3d4:	bl	2b7bc <__flatcc_fb_build_schema@@Base+0x4bc>
   2b3d8:	ldr	r0, [r4, #184]	; 0xb8
   2b3dc:	cmp	r0, #0
   2b3e0:	bne	2b428 <__flatcc_fb_build_schema@@Base+0x128>
   2b3e4:	ldr	r5, [r4, #392]	; 0x188
   2b3e8:	cmp	r5, #0
   2b3ec:	beq	2b590 <__flatcc_fb_build_schema@@Base+0x290>
   2b3f0:	mov	r6, #1
   2b3f4:	b	2b404 <__flatcc_fb_build_schema@@Base+0x104>
   2b3f8:	ldr	r5, [r5]
   2b3fc:	cmp	r5, #0
   2b400:	beq	2b428 <__flatcc_fb_build_schema@@Base+0x128>
   2b404:	ldrh	r0, [r5, #8]
   2b408:	cmp	r0, #3
   2b40c:	bne	2b3f8 <__flatcc_fb_build_schema@@Base+0xf8>
   2b410:	mov	r0, r4
   2b414:	mov	r1, r5
   2b418:	bl	2b82c <__flatcc_fb_build_schema@@Base+0x52c>
   2b41c:	cmp	r0, #0
   2b420:	strhne	r6, [r5, #48]	; 0x30
   2b424:	b	2b3f8 <__flatcc_fb_build_schema@@Base+0xf8>
   2b428:	ldr	r5, [r4, #392]	; 0x188
   2b42c:	cmp	r5, #0
   2b430:	beq	2b590 <__flatcc_fb_build_schema@@Base+0x290>
   2b434:	mov	r6, #1
   2b438:	b	2b45c <__flatcc_fb_build_schema@@Base+0x15c>
   2b43c:	mov	r0, r4
   2b440:	mov	r1, r5
   2b444:	bl	2c1e0 <__flatcc_fb_build_schema@@Base+0xee0>
   2b448:	cmp	r0, #0
   2b44c:	strhne	r6, [r5, #48]	; 0x30
   2b450:	ldr	r5, [r5]
   2b454:	cmp	r5, #0
   2b458:	beq	2b4cc <__flatcc_fb_build_schema@@Base+0x1cc>
   2b45c:	ldrh	r0, [r5, #8]
   2b460:	cmp	r0, #4
   2b464:	bhi	2b4b0 <__flatcc_fb_build_schema@@Base+0x1b0>
   2b468:	add	r1, pc, #0
   2b46c:	ldr	pc, [r1, r0, lsl #2]
   2b470:	andeq	fp, r2, r0, asr r4
   2b474:	andeq	fp, r2, r4, lsl #9
   2b478:	andeq	fp, r2, r0, asr r4
   2b47c:	muleq	r2, r4, r4
   2b480:	andeq	fp, r2, ip, lsr r4
   2b484:	mov	r0, r4
   2b488:	mov	r1, r5
   2b48c:	bl	2bf30 <__flatcc_fb_build_schema@@Base+0xc30>
   2b490:	b	2b448 <__flatcc_fb_build_schema@@Base+0x148>
   2b494:	ldr	r0, [r4, #184]	; 0xb8
   2b498:	cmp	r0, #0
   2b49c:	beq	2b450 <__flatcc_fb_build_schema@@Base+0x150>
   2b4a0:	mov	r0, r4
   2b4a4:	mov	r1, r5
   2b4a8:	bl	2b82c <__flatcc_fb_build_schema@@Base+0x52c>
   2b4ac:	b	2b448 <__flatcc_fb_build_schema@@Base+0x148>
   2b4b0:	movw	r2, #53940	; 0xd2b4
   2b4b4:	movt	r2, #4
   2b4b8:	mov	r0, r4
   2b4bc:	mov	r1, r5
   2b4c0:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2b4c4:	mvn	r0, #0
   2b4c8:	pop	{r4, r5, r6, r7, fp, pc}
   2b4cc:	ldr	r5, [r4, #392]	; 0x188
   2b4d0:	cmp	r5, #0
   2b4d4:	beq	2b590 <__flatcc_fb_build_schema@@Base+0x290>
   2b4d8:	mov	r6, #1
   2b4dc:	b	2b4ec <__flatcc_fb_build_schema@@Base+0x1ec>
   2b4e0:	ldr	r5, [r5]
   2b4e4:	cmp	r5, #0
   2b4e8:	beq	2b51c <__flatcc_fb_build_schema@@Base+0x21c>
   2b4ec:	ldrh	r0, [r5, #8]
   2b4f0:	cmp	r0, #1
   2b4f4:	bne	2b4e0 <__flatcc_fb_build_schema@@Base+0x1e0>
   2b4f8:	ldrh	r0, [r5, #48]	; 0x30
   2b4fc:	cmp	r0, #1
   2b500:	beq	2b4e0 <__flatcc_fb_build_schema@@Base+0x1e0>
   2b504:	mov	r0, r4
   2b508:	mov	r1, r5
   2b50c:	bl	2c1ec <__flatcc_fb_build_schema@@Base+0xeec>
   2b510:	cmp	r0, #0
   2b514:	strhne	r6, [r5, #48]	; 0x30
   2b518:	b	2b4e0 <__flatcc_fb_build_schema@@Base+0x1e0>
   2b51c:	ldr	r5, [r4, #392]	; 0x188
   2b520:	cmp	r5, #0
   2b524:	beq	2b590 <__flatcc_fb_build_schema@@Base+0x290>
   2b528:	mov	r6, #1
   2b52c:	b	2b544 <__flatcc_fb_build_schema@@Base+0x244>
   2b530:	cmp	r0, #0
   2b534:	strhne	r6, [r5, #48]	; 0x30
   2b538:	ldr	r5, [r5]
   2b53c:	cmp	r5, #0
   2b540:	beq	2b590 <__flatcc_fb_build_schema@@Base+0x290>
   2b544:	ldrh	r0, [r5, #8]
   2b548:	cmp	r0, #2
   2b54c:	beq	2b574 <__flatcc_fb_build_schema@@Base+0x274>
   2b550:	cmp	r0, #0
   2b554:	bne	2b538 <__flatcc_fb_build_schema@@Base+0x238>
   2b558:	ldrh	r0, [r5, #48]	; 0x30
   2b55c:	cmp	r0, #1
   2b560:	beq	2b538 <__flatcc_fb_build_schema@@Base+0x238>
   2b564:	mov	r0, r4
   2b568:	mov	r1, r5
   2b56c:	bl	2c548 <__flatcc_fb_build_schema@@Base+0x1248>
   2b570:	b	2b530 <__flatcc_fb_build_schema@@Base+0x230>
   2b574:	ldrh	r0, [r5, #48]	; 0x30
   2b578:	cmp	r0, #1
   2b57c:	beq	2b538 <__flatcc_fb_build_schema@@Base+0x238>
   2b580:	mov	r0, r4
   2b584:	mov	r1, r5
   2b588:	bl	2d258 <__flatcc_fb_build_schema@@Base+0x1f58>
   2b58c:	b	2b530 <__flatcc_fb_build_schema@@Base+0x230>
   2b590:	add	r0, r4, #396	; 0x18c
   2b594:	bl	2d4ac <__flatcc_fb_build_schema@@Base+0x21ac>
   2b598:	ldr	r5, [r4, #392]	; 0x188
   2b59c:	cmp	r5, #0
   2b5a0:	bne	2b5c0 <__flatcc_fb_build_schema@@Base+0x2c0>
   2b5a4:	b	2b5e8 <__flatcc_fb_build_schema@@Base+0x2e8>
   2b5a8:	mov	r0, r4
   2b5ac:	bl	2d51c <__flatcc_fb_build_schema@@Base+0x221c>
   2b5b0:	str	r0, [r5, #24]
   2b5b4:	ldr	r5, [r5]
   2b5b8:	cmp	r5, #0
   2b5bc:	beq	2b5e8 <__flatcc_fb_build_schema@@Base+0x2e8>
   2b5c0:	ldrh	r0, [r5, #8]
   2b5c4:	cmp	r0, #0
   2b5c8:	bne	2b5b4 <__flatcc_fb_build_schema@@Base+0x2b4>
   2b5cc:	ldr	r1, [r5, #20]
   2b5d0:	ldrb	r0, [r5, #92]	; 0x5c
   2b5d4:	tst	r0, #8
   2b5d8:	beq	2b5a8 <__flatcc_fb_build_schema@@Base+0x2a8>
   2b5dc:	mov	r0, r1
   2b5e0:	bl	2d4e4 <__flatcc_fb_build_schema@@Base+0x21e4>
   2b5e4:	b	2b5b0 <__flatcc_fb_build_schema@@Base+0x2b0>
   2b5e8:	ldr	r2, [r4, #400]	; 0x190
   2b5ec:	cmp	r2, #0
   2b5f0:	beq	2b634 <__flatcc_fb_build_schema@@Base+0x334>
   2b5f4:	ldr	r1, [r4, #408]	; 0x198
   2b5f8:	mov	r0, r4
   2b5fc:	bl	2d6d8 <__flatcc_fb_build_schema@@Base+0x23d8>
   2b600:	str	r0, [r4, #404]	; 0x194
   2b604:	cmp	r0, #0
   2b608:	beq	2b654 <__flatcc_fb_build_schema@@Base+0x354>
   2b60c:	ldrh	r1, [r0, #8]
   2b610:	ldr	r2, [r4, #176]	; 0xb0
   2b614:	cmp	r2, #0
   2b618:	beq	2b664 <__flatcc_fb_build_schema@@Base+0x364>
   2b61c:	cmp	r1, #2
   2b620:	bcc	2b684 <__flatcc_fb_build_schema@@Base+0x384>
   2b624:	ldr	r1, [r4, #400]	; 0x190
   2b628:	movw	r2, #54033	; 0xd311
   2b62c:	movt	r2, #4
   2b630:	b	2b678 <__flatcc_fb_build_schema@@Base+0x378>
   2b634:	ldr	r0, [r4, #208]	; 0xd0
   2b638:	cmp	r0, #0
   2b63c:	beq	2b690 <__flatcc_fb_build_schema@@Base+0x390>
   2b640:	movw	r1, #53990	; 0xd2e6
   2b644:	movt	r1, #4
   2b648:	mov	r0, r4
   2b64c:	bl	2d6cc <__flatcc_fb_build_schema@@Base+0x23cc>
   2b650:	b	2b690 <__flatcc_fb_build_schema@@Base+0x390>
   2b654:	ldr	r1, [r4, #400]	; 0x190
   2b658:	movw	r2, #54013	; 0xd2fd
   2b65c:	movt	r2, #4
   2b660:	b	2b678 <__flatcc_fb_build_schema@@Base+0x378>
   2b664:	cmp	r1, #0
   2b668:	beq	2b684 <__flatcc_fb_build_schema@@Base+0x384>
   2b66c:	ldr	r1, [r4, #400]	; 0x190
   2b670:	movw	r2, #54071	; 0xd337
   2b674:	movt	r2, #4
   2b678:	mov	r0, r4
   2b67c:	bl	2d6e0 <__flatcc_fb_build_schema@@Base+0x23e0>
   2b680:	b	2b688 <__flatcc_fb_build_schema@@Base+0x388>
   2b684:	str	r0, [r4, #404]	; 0x194
   2b688:	mov	r0, #0
   2b68c:	str	r0, [r4, #400]	; 0x190
   2b690:	ldr	r0, [r4, #108]	; 0x6c
   2b694:	clz	r1, r0
   2b698:	lsr	r1, r1, #5
   2b69c:	str	r1, [r4, #120]	; 0x78
   2b6a0:	pop	{r4, r5, r6, r7, fp, pc}
   2b6a4:	movw	r0, #53715	; 0xd1d3
   2b6a8:	movt	r0, #4
   2b6ac:	movw	r1, #53769	; 0xd209
   2b6b0:	movt	r1, #4
   2b6b4:	movw	r3, #53842	; 0xd252
   2b6b8:	movt	r3, #4
   2b6bc:	movw	r2, #1558	; 0x616
   2b6c0:	bl	14984 <__assert_fail@plt>
   2b6c4:	push	{fp, lr}
   2b6c8:	mov	fp, sp
   2b6cc:	bl	258d8 <ptr_set_find_item@@Base>
   2b6d0:	cmp	r0, #0
   2b6d4:	movwne	r0, #1
   2b6d8:	pop	{fp, pc}
   2b6dc:	push	{r4, r5, r6, r7, fp, lr}
   2b6e0:	add	fp, sp, #16
   2b6e4:	mov	r4, r0
   2b6e8:	ldr	r1, [r0, #12]
   2b6ec:	movw	r6, #40389	; 0x9dc5
   2b6f0:	movt	r6, #33052	; 0x811c
   2b6f4:	cmp	r1, #0
   2b6f8:	mov	r0, r6
   2b6fc:	beq	2b740 <__flatcc_fb_build_schema@@Base+0x440>
   2b700:	ldr	r7, [r1]
   2b704:	cmp	r7, #0
   2b708:	mov	r0, r6
   2b70c:	beq	2b740 <__flatcc_fb_build_schema@@Base+0x440>
   2b710:	movw	r5, #32071	; 0x7d47
   2b714:	movt	r5, #4
   2b718:	mov	r0, r6
   2b71c:	ldr	r2, [r7, #4]
   2b720:	ldm	r2, {r1, r2}
   2b724:	bl	2d6e8 <__flatcc_fb_build_schema@@Base+0x23e8>
   2b728:	mov	r1, r5
   2b72c:	mov	r2, #1
   2b730:	bl	2d6e8 <__flatcc_fb_build_schema@@Base+0x23e8>
   2b734:	ldr	r7, [r7]
   2b738:	cmp	r7, #0
   2b73c:	bne	2b71c <__flatcc_fb_build_schema@@Base+0x41c>
   2b740:	ldr	r2, [r4, #4]
   2b744:	ldm	r2, {r1, r2}
   2b748:	bl	2d6e8 <__flatcc_fb_build_schema@@Base+0x23e8>
   2b74c:	cmp	r0, #0
   2b750:	movne	r6, r0
   2b754:	str	r6, [r4, #88]	; 0x58
   2b758:	pop	{r4, r5, r6, r7, fp, pc}
   2b75c:	mov	r2, #1
   2b760:	b	25de0 <fb_symbol_table_insert_item@@Base>
   2b764:	ldr	r3, [r3, #4]
   2b768:	ldr	r1, [r1, #4]
   2b76c:	b	2d710 <__flatcc_fb_build_schema@@Base+0x2410>
   2b770:	mov	r2, #1
   2b774:	b	32ed4 <fb_name_table_insert_item@@Base>
   2b778:	cmp	r1, #0
   2b77c:	beq	2b7b0 <__flatcc_fb_build_schema@@Base+0x4b0>
   2b780:	push	{fp, lr}
   2b784:	mov	fp, sp
   2b788:	sub	sp, sp, #8
   2b78c:	ldrd	r2, [r1, #8]
   2b790:	stm	sp, {r2, r3}
   2b794:	movw	r2, #53914	; 0xd29a
   2b798:	movt	r2, #4
   2b79c:	mov	r1, #0
   2b7a0:	mov	r3, #0
   2b7a4:	bl	274ec <__flatcc_error_report@@Base>
   2b7a8:	mov	sp, fp
   2b7ac:	pop	{fp, pc}
   2b7b0:	movw	r1, #53914	; 0xd29a
   2b7b4:	movt	r1, #4
   2b7b8:	b	2d6cc <__flatcc_fb_build_schema@@Base+0x23cc>
   2b7bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b7c0:	add	fp, sp, #24
   2b7c4:	mov	r4, r0
   2b7c8:	mov	r8, #0
   2b7cc:	movw	r9, #59564	; 0xe8ac
   2b7d0:	movt	r9, #4
   2b7d4:	mov	r6, #2
   2b7d8:	mov	r7, #0
   2b7dc:	mov	r0, r4
   2b7e0:	bl	2d734 <__flatcc_fb_build_schema@@Base+0x2434>
   2b7e4:	mov	r5, r0
   2b7e8:	str	r7, [r0, #24]
   2b7ec:	ldr	r0, [r9, r7, lsl #2]
   2b7f0:	str	r0, [r5, #8]
   2b7f4:	bl	148b8 <strlen@plt>
   2b7f8:	strh	r6, [r5, #16]
   2b7fc:	str	r0, [r5, #12]
   2b800:	str	r8, [r5]
   2b804:	ldr	r0, [r4, #412]	; 0x19c
   2b808:	add	r0, r0, #16
   2b80c:	mov	r1, r5
   2b810:	bl	2b770 <__flatcc_fb_build_schema@@Base+0x470>
   2b814:	cmp	r0, #0
   2b818:	strne	r7, [r0, #24]
   2b81c:	add	r7, r7, #1
   2b820:	cmp	r7, #12
   2b824:	bne	2b7dc <__flatcc_fb_build_schema@@Base+0x4dc>
   2b828:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b82c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b830:	add	fp, sp, #28
   2b834:	sub	sp, sp, #108	; 0x6c
   2b838:	mov	r8, r0
   2b83c:	str	r1, [sp, #36]	; 0x24
   2b840:	ldrh	r4, [r1, #8]
   2b844:	cmp	r4, #4
   2b848:	bne	2b868 <__flatcc_fb_build_schema@@Base+0x568>
   2b84c:	ldr	r0, [sp, #36]	; 0x24
   2b850:	ldrh	r0, [r0, #48]	; 0x30
   2b854:	cmp	r0, #0
   2b858:	beq	2b8a4 <__flatcc_fb_build_schema@@Base+0x5a4>
   2b85c:	movw	r2, #54326	; 0xd436
   2b860:	movt	r2, #4
   2b864:	b	2be30 <__flatcc_fb_build_schema@@Base+0xb30>
   2b868:	cmp	r4, #3
   2b86c:	bne	2bf10 <__flatcc_fb_build_schema@@Base+0xc10>
   2b870:	ldr	r0, [sp, #36]	; 0x24
   2b874:	ldrh	r0, [r0, #48]	; 0x30
   2b878:	cmp	r0, #8
   2b87c:	beq	2b8bc <__flatcc_fb_build_schema@@Base+0x5bc>
   2b880:	cmp	r0, #0
   2b884:	bne	2be28 <__flatcc_fb_build_schema@@Base+0xb28>
   2b888:	mov	r0, #1
   2b88c:	ldr	r1, [sp, #36]	; 0x24
   2b890:	strh	r0, [r1, #48]	; 0x30
   2b894:	movw	r2, #54255	; 0xd3ef
   2b898:	movt	r2, #4
   2b89c:	mov	r0, r8
   2b8a0:	b	2be38 <__flatcc_fb_build_schema@@Base+0xb38>
   2b8a4:	mov	r0, #4
   2b8a8:	ldr	r2, [sp, #36]	; 0x24
   2b8ac:	str	r0, [r2, #40]	; 0x28
   2b8b0:	mov	r1, #8
   2b8b4:	strh	r1, [r2, #48]	; 0x30
   2b8b8:	b	2b8cc <__flatcc_fb_build_schema@@Base+0x5cc>
   2b8bc:	ldr	r5, [sp, #36]	; 0x24
   2b8c0:	ldr	r0, [r5, #40]	; 0x28
   2b8c4:	bl	2d7d0 <__flatcc_fb_build_schema@@Base+0x24d0>
   2b8c8:	str	r0, [r5, #40]	; 0x28
   2b8cc:	bl	2d7f8 <__flatcc_fb_build_schema@@Base+0x24f8>
   2b8d0:	mov	r2, #0
   2b8d4:	ldr	r5, [sp, #36]	; 0x24
   2b8d8:	mov	r1, #0
   2b8dc:	str	r1, [sp, #28]
   2b8e0:	str	r0, [r5, #112]	; 0x70
   2b8e4:	str	r2, [r5, #116]	; 0x74
   2b8e8:	strh	r0, [r5, #104]	; 0x68
   2b8ec:	ldr	r1, [r5, #28]
   2b8f0:	add	r3, sp, #60	; 0x3c
   2b8f4:	mov	r0, r8
   2b8f8:	mov	r2, #32
   2b8fc:	bl	2d808 <__flatcc_fb_build_schema@@Base+0x2508>
   2b900:	strh	r0, [r5, #92]	; 0x5c
   2b904:	tst	r0, #32
   2b908:	beq	2b928 <__flatcc_fb_build_schema@@Base+0x628>
   2b90c:	mov	r0, #0
   2b910:	str	r0, [sp, #44]	; 0x2c
   2b914:	str	r0, [sp, #40]	; 0x28
   2b918:	mov	r0, #5
   2b91c:	strh	r0, [sp, #48]	; 0x30
   2b920:	mov	r0, #1
   2b924:	str	r0, [sp, #28]
   2b928:	ldr	r0, [sp, #36]	; 0x24
   2b92c:	ldr	r2, [r0, #40]	; 0x28
   2b930:	cmp	r2, #5
   2b934:	bne	2b94c <__flatcc_fb_build_schema@@Base+0x64c>
   2b938:	mov	r0, #6
   2b93c:	strh	r0, [sp, #48]	; 0x30
   2b940:	mov	r0, #0
   2b944:	strb	r0, [sp, #40]	; 0x28
   2b948:	b	2b98c <__flatcc_fb_build_schema@@Base+0x68c>
   2b94c:	mov	r0, #0
   2b950:	str	r0, [sp, #44]	; 0x2c
   2b954:	str	r0, [sp, #40]	; 0x28
   2b958:	mov	r0, #4
   2b95c:	strh	r0, [sp, #48]	; 0x30
   2b960:	add	r3, sp, #40	; 0x28
   2b964:	mov	r0, r8
   2b968:	ldr	r1, [sp, #36]	; 0x24
   2b96c:	bl	2dff4 <__flatcc_fb_coerce_scalar_type@@Base>
   2b970:	cmp	r0, #0
   2b974:	beq	2b98c <__flatcc_fb_build_schema@@Base+0x68c>
   2b978:	movw	r1, #54389	; 0xd475
   2b97c:	movt	r1, #4
   2b980:	mov	r0, r8
   2b984:	bl	2d6cc <__flatcc_fb_build_schema@@Base+0x23cc>
   2b988:	b	2be3c <__flatcc_fb_build_schema@@Base+0xb3c>
   2b98c:	ldr	r0, [sp, #36]	; 0x24
   2b990:	ldr	r6, [r0, #20]
   2b994:	cmp	r6, #0
   2b998:	beq	2be4c <__flatcc_fb_build_schema@@Base+0xb4c>
   2b99c:	ldr	r2, [sp, #40]	; 0x28
   2b9a0:	ldr	r0, [sp, #44]	; 0x2c
   2b9a4:	mov	r1, r2
   2b9a8:	str	r2, [sp, #24]
   2b9ac:	lsr	r1, r2, #8
   2b9b0:	orr	r1, r1, r0, lsl #24
   2b9b4:	str	r1, [sp, #20]
   2b9b8:	ldr	r1, [sp, #36]	; 0x24
   2b9bc:	add	r2, r1, #72	; 0x48
   2b9c0:	str	r2, [sp, #8]
   2b9c4:	add	r2, r8, #68	; 0x44
   2b9c8:	str	r2, [sp, #32]
   2b9cc:	add	r5, r1, #56	; 0x38
   2b9d0:	lsr	r0, r0, #8
   2b9d4:	str	r0, [sp, #16]
   2b9d8:	add	r7, sp, #40	; 0x28
   2b9dc:	mov	sl, #1
   2b9e0:	str	r5, [sp, #4]
   2b9e4:	b	2ba14 <__flatcc_fb_build_schema@@Base+0x714>
   2b9e8:	mov	r0, r8
   2b9ec:	mov	r1, r6
   2b9f0:	movw	r2, #54451	; 0xd4b3
   2b9f4:	movt	r2, #4
   2b9f8:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2b9fc:	mov	r0, #1
   2ba00:	strh	r0, [r6, #24]
   2ba04:	ldr	r6, [r6]
   2ba08:	mov	sl, #0
   2ba0c:	cmp	r6, #0
   2ba10:	beq	2be40 <__flatcc_fb_build_schema@@Base+0xb40>
   2ba14:	mov	r0, r5
   2ba18:	mov	r1, r6
   2ba1c:	bl	2b75c <__flatcc_fb_build_schema@@Base+0x45c>
   2ba20:	cmp	r0, #0
   2ba24:	beq	2ba54 <__flatcc_fb_build_schema@@Base+0x754>
   2ba28:	mov	r3, r0
   2ba2c:	ldr	r0, [r0, #4]
   2ba30:	ldr	r1, [sp, #32]
   2ba34:	cmp	r0, r1
   2ba38:	beq	2b9e8 <__flatcc_fb_build_schema@@Base+0x6e8>
   2ba3c:	mov	r0, r8
   2ba40:	mov	r1, r6
   2ba44:	movw	r2, #54480	; 0xd4d0
   2ba48:	movt	r2, #4
   2ba4c:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2ba50:	b	2b9fc <__flatcc_fb_build_schema@@Base+0x6fc>
   2ba54:	ldrh	r0, [r6, #8]
   2ba58:	cmp	r0, #5
   2ba5c:	bne	2be54 <__flatcc_fb_build_schema@@Base+0xb54>
   2ba60:	ldr	r0, [r6, #64]	; 0x40
   2ba64:	cmp	r0, #0
   2ba68:	bne	2bef0 <__flatcc_fb_build_schema@@Base+0xbf0>
   2ba6c:	add	r9, r6, #48	; 0x30
   2ba70:	cmp	r4, #4
   2ba74:	bne	2bb04 <__flatcc_fb_build_schema@@Base+0x804>
   2ba78:	ldr	r0, [r6, #4]
   2ba7c:	ldr	r1, [sp, #32]
   2ba80:	cmp	r0, r1
   2ba84:	beq	2baac <__flatcc_fb_build_schema@@Base+0x7ac>
   2ba88:	ldrh	r0, [r6, #24]
   2ba8c:	cmp	r0, #1
   2ba90:	beq	2ba04 <__flatcc_fb_build_schema@@Base+0x704>
   2ba94:	cmp	r0, #12
   2ba98:	beq	2bab8 <__flatcc_fb_build_schema@@Base+0x7b8>
   2ba9c:	cmp	r0, #10
   2baa0:	bne	2bb68 <__flatcc_fb_build_schema@@Base+0x868>
   2baa4:	mov	r0, #0
   2baa8:	b	2bafc <__flatcc_fb_build_schema@@Base+0x7fc>
   2baac:	mov	r0, #0
   2bab0:	strh	r0, [r6, #24]
   2bab4:	b	2bb04 <__flatcc_fb_build_schema@@Base+0x804>
   2bab8:	str	r9, [sp, #12]
   2babc:	ldr	r2, [r6, #16]
   2bac0:	ldr	r0, [sp, #36]	; 0x24
   2bac4:	ldr	r1, [r0, #12]
   2bac8:	mov	r0, r8
   2bacc:	bl	2d6d8 <__flatcc_fb_build_schema@@Base+0x23d8>
   2bad0:	cmp	r0, #0
   2bad4:	beq	2bdf8 <__flatcc_fb_build_schema@@Base+0xaf8>
   2bad8:	mov	r3, r0
   2badc:	ldrh	r0, [r0, #8]
   2bae0:	cmp	r0, #2
   2bae4:	bcs	2be14 <__flatcc_fb_build_schema@@Base+0xb14>
   2bae8:	str	r3, [r6, #16]
   2baec:	mov	r0, #14
   2baf0:	strh	r0, [r6, #24]
   2baf4:	mov	r0, #0
   2baf8:	ldr	r9, [sp, #12]
   2bafc:	str	r0, [r9, #40]	; 0x28
   2bb00:	str	r0, [r9, #44]	; 0x2c
   2bb04:	ldrh	r0, [r6, #56]	; 0x38
   2bb08:	cmp	sl, #0
   2bb0c:	cmpeq	r0, #0
   2bb10:	bne	2bc04 <__flatcc_fb_build_schema@@Base+0x904>
   2bb14:	ldrh	r0, [sp, #48]	; 0x30
   2bb18:	cmp	r0, #4
   2bb1c:	beq	2bba8 <__flatcc_fb_build_schema@@Base+0x8a8>
   2bb20:	cmp	r0, #6
   2bb24:	beq	2bb7c <__flatcc_fb_build_schema@@Base+0x87c>
   2bb28:	cmp	r0, #5
   2bb2c:	bne	2bc00 <__flatcc_fb_build_schema@@Base+0x900>
   2bb30:	ldr	r0, [sp, #36]	; 0x24
   2bb34:	ldr	r0, [r0, #40]	; 0x28
   2bb38:	cmp	r0, #6
   2bb3c:	bne	2bbe8 <__flatcc_fb_build_schema@@Base+0x8e8>
   2bb40:	ldr	r0, [sp, #40]	; 0x28
   2bb44:	ldr	r1, [sp, #44]	; 0x2c
   2bb48:	and	r0, r0, r1
   2bb4c:	cmn	r0, #1
   2bb50:	bne	2bbe8 <__flatcc_fb_build_schema@@Base+0x8e8>
   2bb54:	mov	r0, r8
   2bb58:	mov	r1, r6
   2bb5c:	movw	r2, #54757	; 0xd5e5
   2bb60:	movt	r2, #4
   2bb64:	b	2bbe4 <__flatcc_fb_build_schema@@Base+0x8e4>
   2bb68:	mov	r0, r8
   2bb6c:	mov	r1, r6
   2bb70:	movw	r2, #54570	; 0xd52a
   2bb74:	movt	r2, #4
   2bb78:	b	2b9f8 <__flatcc_fb_build_schema@@Base+0x6f8>
   2bb7c:	ldrb	r0, [sp, #40]	; 0x28
   2bb80:	cmp	r0, #1
   2bb84:	bne	2bb9c <__flatcc_fb_build_schema@@Base+0x89c>
   2bb88:	mov	r0, r8
   2bb8c:	mov	r1, r6
   2bb90:	movw	r2, #54813	; 0xd61d
   2bb94:	movt	r2, #4
   2bb98:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2bb9c:	mov	r0, #1
   2bba0:	strb	r0, [sp, #40]	; 0x28
   2bba4:	b	2bc00 <__flatcc_fb_build_schema@@Base+0x900>
   2bba8:	ldr	r0, [sp, #36]	; 0x24
   2bbac:	ldr	r0, [r0, #40]	; 0x28
   2bbb0:	cmp	r0, #6
   2bbb4:	bne	2bbe8 <__flatcc_fb_build_schema@@Base+0x8e8>
   2bbb8:	ldr	r0, [sp, #40]	; 0x28
   2bbbc:	ldr	r1, [sp, #44]	; 0x2c
   2bbc0:	mvn	r2, #-2147483648	; 0x80000000
   2bbc4:	eor	r1, r1, r2
   2bbc8:	mvn	r0, r0
   2bbcc:	orrs	r0, r0, r1
   2bbd0:	bne	2bbe8 <__flatcc_fb_build_schema@@Base+0x8e8>
   2bbd4:	mov	r0, r8
   2bbd8:	mov	r1, r6
   2bbdc:	movw	r2, #54786	; 0xd602
   2bbe0:	movt	r2, #4
   2bbe4:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2bbe8:	ldr	r0, [sp, #40]	; 0x28
   2bbec:	ldr	r1, [sp, #44]	; 0x2c
   2bbf0:	adds	r0, r0, #1
   2bbf4:	str	r0, [sp, #40]	; 0x28
   2bbf8:	adc	r0, r1, #0
   2bbfc:	str	r0, [sp, #44]	; 0x2c
   2bc00:	ldrh	r0, [r6, #56]	; 0x38
   2bc04:	ldr	r1, [sp, #28]
   2bc08:	cmp	r1, #0
   2bc0c:	beq	2bca0 <__flatcc_fb_build_schema@@Base+0x9a0>
   2bc10:	cmp	r0, #0
   2bc14:	beq	2bc28 <__flatcc_fb_build_schema@@Base+0x928>
   2bc18:	cmp	r0, #5
   2bc1c:	bne	2be8c <__flatcc_fb_build_schema@@Base+0xb8c>
   2bc20:	vld1.64	{d16-d17}, [r9]
   2bc24:	vst1.64	{d16-d17}, [r7]
   2bc28:	ldr	r5, [sp, #36]	; 0x24
   2bc2c:	ldr	r0, [r5, #40]	; 0x28
   2bc30:	ldr	r7, [sp, #40]	; 0x28
   2bc34:	ldr	r1, [sp, #44]	; 0x2c
   2bc38:	str	r1, [sp, #12]
   2bc3c:	bl	2d7f8 <__flatcc_fb_build_schema@@Base+0x24f8>
   2bc40:	subs	r0, r7, r0, lsl #3
   2bc44:	ldr	r0, [sp, #12]
   2bc48:	sbcs	r0, r0, #0
   2bc4c:	bcs	2be60 <__flatcc_fb_build_schema@@Base+0xb60>
   2bc50:	mov	ip, #1
   2bc54:	lsl	r0, ip, r7
   2bc58:	subs	r1, r7, #32
   2bc5c:	movwpl	r0, #0
   2bc60:	rsb	r2, r7, #32
   2bc64:	lsr	r3, ip, r2
   2bc68:	lslpl	r3, ip, r1
   2bc6c:	stm	r9, {r0, r3}
   2bc70:	mov	r0, #5
   2bc74:	strh	r0, [r6, #56]	; 0x38
   2bc78:	ldr	r2, [r5, #40]	; 0x28
   2bc7c:	mov	r0, r8
   2bc80:	mov	r1, r6
   2bc84:	mov	r3, r9
   2bc88:	bl	2dff4 <__flatcc_fb_coerce_scalar_type@@Base>
   2bc8c:	cmp	r0, #0
   2bc90:	bne	2be60 <__flatcc_fb_build_schema@@Base+0xb60>
   2bc94:	cmp	sl, #0
   2bc98:	bne	2bd84 <__flatcc_fb_build_schema@@Base+0xa84>
   2bc9c:	b	2bce0 <__flatcc_fb_build_schema@@Base+0x9e0>
   2bca0:	cmp	r0, #0
   2bca4:	beq	2bcd0 <__flatcc_fb_build_schema@@Base+0x9d0>
   2bca8:	vld1.64	{d16-d17}, [r9]
   2bcac:	vst1.64	{d16-d17}, [r7]
   2bcb0:	ldr	r0, [sp, #36]	; 0x24
   2bcb4:	ldr	r2, [r0, #40]	; 0x28
   2bcb8:	mov	r0, r8
   2bcbc:	mov	r1, r6
   2bcc0:	mov	r3, r7
   2bcc4:	bl	2dff4 <__flatcc_fb_coerce_scalar_type@@Base>
   2bcc8:	cmp	r0, #0
   2bccc:	bne	2be3c <__flatcc_fb_build_schema@@Base+0xb3c>
   2bcd0:	vld1.64	{d16-d17}, [r7]
   2bcd4:	vst1.64	{d16-d17}, [r9]
   2bcd8:	cmp	sl, #0
   2bcdc:	bne	2bd84 <__flatcc_fb_build_schema@@Base+0xa84>
   2bce0:	ldr	r0, [r8, #180]	; 0xb4
   2bce4:	cmp	r0, #0
   2bce8:	beq	2bd84 <__flatcc_fb_build_schema@@Base+0xa84>
   2bcec:	ldrh	r0, [sp, #48]	; 0x30
   2bcf0:	cmp	r0, #4
   2bcf4:	beq	2bd3c <__flatcc_fb_build_schema@@Base+0xa3c>
   2bcf8:	cmp	r0, #6
   2bcfc:	beq	2bd70 <__flatcc_fb_build_schema@@Base+0xa70>
   2bd00:	cmp	r0, #5
   2bd04:	bne	2bd84 <__flatcc_fb_build_schema@@Base+0xa84>
   2bd08:	ldr	r0, [sp, #16]
   2bd0c:	lsl	r0, r0, #8
   2bd10:	ldr	r2, [sp, #20]
   2bd14:	orr	r0, r0, r2, lsr #24
   2bd18:	ldr	r1, [sp, #24]
   2bd1c:	uxtb	r1, r1
   2bd20:	orr	r1, r1, r2, lsl #8
   2bd24:	ldr	r2, [sp, #40]	; 0x28
   2bd28:	ldr	r3, [sp, #44]	; 0x2c
   2bd2c:	subs	r1, r1, r2
   2bd30:	sbcs	r0, r0, r3
   2bd34:	bcc	2bd84 <__flatcc_fb_build_schema@@Base+0xa84>
   2bd38:	b	2bea0 <__flatcc_fb_build_schema@@Base+0xba0>
   2bd3c:	ldr	r0, [sp, #16]
   2bd40:	lsl	r0, r0, #8
   2bd44:	ldr	r2, [sp, #20]
   2bd48:	orr	r0, r0, r2, lsr #24
   2bd4c:	ldr	r1, [sp, #24]
   2bd50:	uxtb	r1, r1
   2bd54:	orr	r1, r1, r2, lsl #8
   2bd58:	ldr	r2, [sp, #40]	; 0x28
   2bd5c:	ldr	r3, [sp, #44]	; 0x2c
   2bd60:	subs	r1, r1, r2
   2bd64:	sbcs	r0, r0, r3
   2bd68:	blt	2bd84 <__flatcc_fb_build_schema@@Base+0xa84>
   2bd6c:	b	2bea0 <__flatcc_fb_build_schema@@Base+0xba0>
   2bd70:	ldr	r0, [sp, #24]
   2bd74:	uxtb	r0, r0
   2bd78:	ldrb	r1, [sp, #40]	; 0x28
   2bd7c:	cmp	r1, r0
   2bd80:	bls	2bed8 <__flatcc_fb_build_schema@@Base+0xbd8>
   2bd84:	ldr	r5, [sp, #40]	; 0x28
   2bd88:	ldr	r7, [sp, #44]	; 0x2c
   2bd8c:	ldr	r0, [sp, #8]
   2bd90:	mov	r1, r9
   2bd94:	bl	2d9c0 <__flatcc_fb_build_schema@@Base+0x26c0>
   2bd98:	cmp	r0, #0
   2bd9c:	beq	2bdb4 <__flatcc_fb_build_schema@@Base+0xab4>
   2bda0:	cmp	r4, #4
   2bda4:	beq	2be6c <__flatcc_fb_build_schema@@Base+0xb6c>
   2bda8:	ldrh	r0, [r6, #10]
   2bdac:	orr	r0, r0, #4
   2bdb0:	strh	r0, [r6, #10]
   2bdb4:	lsr	r0, r5, #8
   2bdb8:	orr	r0, r0, r7, lsl #24
   2bdbc:	str	r0, [sp, #20]
   2bdc0:	lsr	r0, r7, #8
   2bdc4:	str	r0, [sp, #16]
   2bdc8:	ldr	r0, [r6, #64]	; 0x40
   2bdcc:	cmp	r0, #0
   2bdd0:	str	r5, [sp, #24]
   2bdd4:	beq	2bdec <__flatcc_fb_build_schema@@Base+0xaec>
   2bdd8:	mov	r0, r8
   2bddc:	mov	r1, r6
   2bde0:	movw	r2, #55210	; 0xd7aa
   2bde4:	movt	r2, #4
   2bde8:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2bdec:	ldr	r5, [sp, #4]
   2bdf0:	add	r7, sp, #40	; 0x28
   2bdf4:	b	2ba04 <__flatcc_fb_build_schema@@Base+0x704>
   2bdf8:	ldr	r1, [r6, #16]
   2bdfc:	mov	r0, r8
   2be00:	movw	r2, #54641	; 0xd571
   2be04:	movt	r2, #4
   2be08:	mov	r3, r6
   2be0c:	bl	2767c <error_ref_sym@@Base>
   2be10:	b	2b9fc <__flatcc_fb_build_schema@@Base+0x6fc>
   2be14:	mov	r0, r8
   2be18:	mov	r1, r6
   2be1c:	movw	r2, #54687	; 0xd59f
   2be20:	movt	r2, #4
   2be24:	b	2ba4c <__flatcc_fb_build_schema@@Base+0x74c>
   2be28:	movw	r2, #54277	; 0xd405
   2be2c:	movt	r2, #4
   2be30:	mov	r0, r8
   2be34:	ldr	r1, [sp, #36]	; 0x24
   2be38:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2be3c:	mvn	sl, #0
   2be40:	mov	r0, sl
   2be44:	sub	sp, fp, #28
   2be48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be4c:	mov	sl, #0
   2be50:	b	2be40 <__flatcc_fb_build_schema@@Base+0xb40>
   2be54:	movw	r2, #54507	; 0xd4eb
   2be58:	movt	r2, #4
   2be5c:	b	2be94 <__flatcc_fb_build_schema@@Base+0xb94>
   2be60:	movw	r2, #54917	; 0xd685
   2be64:	movt	r2, #4
   2be68:	b	2be94 <__flatcc_fb_build_schema@@Base+0xb94>
   2be6c:	movw	r2, #55136	; 0xd760
   2be70:	movt	r2, #4
   2be74:	mov	r0, r8
   2be78:	mov	r1, r6
   2be7c:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2be80:	mov	r0, #1
   2be84:	strh	r0, [r6, #56]	; 0x38
   2be88:	b	2be3c <__flatcc_fb_build_schema@@Base+0xb3c>
   2be8c:	movw	r2, #54858	; 0xd64a
   2be90:	movt	r2, #4
   2be94:	mov	r0, r8
   2be98:	mov	r1, r6
   2be9c:	b	2be38 <__flatcc_fb_build_schema@@Base+0xb38>
   2bea0:	cmp	r4, #4
   2bea4:	bne	2becc <__flatcc_fb_build_schema@@Base+0xbcc>
   2bea8:	ldr	r0, [sp, #24]
   2beac:	uxtb	r0, r0
   2beb0:	ldr	r2, [sp, #20]
   2beb4:	orr	r0, r0, r2, lsl #8
   2beb8:	ldr	r1, [sp, #16]
   2bebc:	lsl	r1, r1, #8
   2bec0:	orr	r1, r1, r2, lsr #24
   2bec4:	orrs	r0, r0, r1
   2bec8:	beq	2bee4 <__flatcc_fb_build_schema@@Base+0xbe4>
   2becc:	movw	r2, #55033	; 0xd6f9
   2bed0:	movt	r2, #4
   2bed4:	b	2be74 <__flatcc_fb_build_schema@@Base+0xb74>
   2bed8:	movw	r2, #55072	; 0xd720
   2bedc:	movt	r2, #4
   2bee0:	b	2be74 <__flatcc_fb_build_schema@@Base+0xb74>
   2bee4:	movw	r2, #54968	; 0xd6b8
   2bee8:	movt	r2, #4
   2beec:	b	2be74 <__flatcc_fb_build_schema@@Base+0xb74>
   2bef0:	movw	r0, #54548	; 0xd514
   2bef4:	movt	r0, #4
   2bef8:	movw	r1, #53769	; 0xd209
   2befc:	movt	r1, #4
   2bf00:	movw	r3, #54201	; 0xd3b9
   2bf04:	movt	r3, #4
   2bf08:	movw	r2, #1315	; 0x523
   2bf0c:	bl	14984 <__assert_fail@plt>
   2bf10:	movw	r0, #58962	; 0xe652
   2bf14:	movt	r0, #4
   2bf18:	movw	r1, #53769	; 0xd209
   2bf1c:	movt	r1, #4
   2bf20:	movw	r3, #54201	; 0xd3b9
   2bf24:	movt	r3, #4
   2bf28:	movw	r2, #1229	; 0x4cd
   2bf2c:	bl	14984 <__assert_fail@plt>
   2bf30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bf34:	add	fp, sp, #28
   2bf38:	sub	sp, sp, #52	; 0x34
   2bf3c:	mov	r5, r1
   2bf40:	mov	r4, r0
   2bf44:	ldrh	r0, [r1, #48]	; 0x30
   2bf48:	cmp	r0, #0
   2bf4c:	beq	2bf70 <__flatcc_fb_build_schema@@Base+0xc70>
   2bf50:	movw	r2, #55496	; 0xd8c8
   2bf54:	movt	r2, #4
   2bf58:	mov	r0, r4
   2bf5c:	mov	r1, r5
   2bf60:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2bf64:	mvn	r0, #0
   2bf68:	sub	sp, fp, #28
   2bf6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bf70:	ldr	r1, [r5, #28]
   2bf74:	add	r3, sp, #4
   2bf78:	mov	r0, r4
   2bf7c:	mov	r2, #16
   2bf80:	bl	2d808 <__flatcc_fb_build_schema@@Base+0x2508>
   2bf84:	strh	r0, [r5, #92]	; 0x5c
   2bf88:	ldr	r0, [sp, #20]
   2bf8c:	cmp	r0, #0
   2bf90:	beq	2bfc8 <__flatcc_fb_build_schema@@Base+0xcc8>
   2bf94:	ldrd	r6, [r0, #8]
   2bf98:	mov	r0, r6
   2bf9c:	mov	r1, r7
   2bfa0:	bl	2d9f4 <__flatcc_fb_build_schema@@Base+0x26f4>
   2bfa4:	cmp	r0, #0
   2bfa8:	beq	2bfb4 <__flatcc_fb_build_schema@@Base+0xcb4>
   2bfac:	strh	r6, [r5, #104]	; 0x68
   2bfb0:	b	2bfc8 <__flatcc_fb_build_schema@@Base+0xcc8>
   2bfb4:	movw	r2, #55538	; 0xd8f2
   2bfb8:	movt	r2, #4
   2bfbc:	mov	r0, r4
   2bfc0:	mov	r1, r5
   2bfc4:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2bfc8:	ldr	r6, [r5, #20]
   2bfcc:	cmp	r6, #0
   2bfd0:	beq	2c138 <__flatcc_fb_build_schema@@Base+0xe38>
   2bfd4:	add	r7, r5, #56	; 0x38
   2bfd8:	mov	r9, #0
   2bfdc:	add	r8, sp, #4
   2bfe0:	movw	sl, #55611	; 0xd93b
   2bfe4:	movt	sl, #4
   2bfe8:	b	2c00c <__flatcc_fb_build_schema@@Base+0xd0c>
   2bfec:	mov	r3, r0
   2bff0:	mov	r0, r4
   2bff4:	mov	r1, r6
   2bff8:	mov	r2, sl
   2bffc:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2c000:	ldr	r6, [r6]
   2c004:	cmp	r6, #0
   2c008:	beq	2c144 <__flatcc_fb_build_schema@@Base+0xe44>
   2c00c:	mov	r0, r7
   2c010:	mov	r1, r6
   2c014:	bl	2b75c <__flatcc_fb_build_schema@@Base+0x45c>
   2c018:	cmp	r0, #0
   2c01c:	bne	2bfec <__flatcc_fb_build_schema@@Base+0xcec>
   2c020:	ldrh	r0, [r6, #8]
   2c024:	cmp	r0, #5
   2c028:	bne	2c17c <__flatcc_fb_build_schema@@Base+0xe7c>
   2c02c:	ldrd	r0, [r4, #168]	; 0xa8
   2c030:	cmp	r1, #0
   2c034:	movwne	r1, #1
   2c038:	mov	r2, #4
   2c03c:	orr	r2, r2, r1, lsl #7
   2c040:	cmp	r0, #0
   2c044:	lsleq	r2, r1, #7
   2c048:	ldr	r1, [r6, #64]	; 0x40
   2c04c:	mov	r0, r4
   2c050:	mov	r3, r8
   2c054:	bl	2d808 <__flatcc_fb_build_schema@@Base+0x2508>
   2c058:	strh	r0, [r6, #72]	; 0x48
   2c05c:	ldrh	r1, [r6, #24]
   2c060:	cmp	r1, #8
   2c064:	beq	2c0b4 <__flatcc_fb_build_schema@@Base+0xdb4>
   2c068:	cmp	r1, #12
   2c06c:	bne	2c188 <__flatcc_fb_build_schema@@Base+0xe88>
   2c070:	ldr	r2, [r6, #16]
   2c074:	ldr	r1, [r5, #12]
   2c078:	mov	r0, r4
   2c07c:	bl	2d6d8 <__flatcc_fb_build_schema@@Base+0x23d8>
   2c080:	cmp	r0, #0
   2c084:	beq	2c0e0 <__flatcc_fb_build_schema@@Base+0xde0>
   2c088:	mov	r3, r0
   2c08c:	mov	r0, #14
   2c090:	strh	r0, [r6, #24]
   2c094:	str	r3, [r6, #16]
   2c098:	ldrh	r0, [r3, #8]
   2c09c:	cmp	r0, #1
   2c0a0:	bne	2c104 <__flatcc_fb_build_schema@@Base+0xe04>
   2c0a4:	ldrb	r0, [r6, #72]	; 0x48
   2c0a8:	tst	r0, #128	; 0x80
   2c0ac:	beq	2c0bc <__flatcc_fb_build_schema@@Base+0xdbc>
   2c0b0:	b	2c19c <__flatcc_fb_build_schema@@Base+0xe9c>
   2c0b4:	ubfx	r0, r0, #7, #1
   2c0b8:	add	r9, r9, r0
   2c0bc:	ldrh	r0, [r6, #56]	; 0x38
   2c0c0:	cmp	r0, #0
   2c0c4:	beq	2c000 <__flatcc_fb_build_schema@@Base+0xd00>
   2c0c8:	mov	r0, r4
   2c0cc:	mov	r1, r6
   2c0d0:	movw	r2, #55962	; 0xda9a
   2c0d4:	movt	r2, #4
   2c0d8:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c0dc:	b	2c000 <__flatcc_fb_build_schema@@Base+0xd00>
   2c0e0:	ldr	r1, [r6, #16]
   2c0e4:	mov	r0, r4
   2c0e8:	movw	r2, #55681	; 0xd981
   2c0ec:	movt	r2, #4
   2c0f0:	mov	r3, r6
   2c0f4:	bl	2767c <error_ref_sym@@Base>
   2c0f8:	mov	r0, #1
   2c0fc:	strh	r0, [r6, #24]
   2c100:	b	2c000 <__flatcc_fb_build_schema@@Base+0xd00>
   2c104:	ldr	r1, [r4, #152]	; 0x98
   2c108:	cmp	r1, #0
   2c10c:	beq	2c1b4 <__flatcc_fb_build_schema@@Base+0xeb4>
   2c110:	cmp	r0, #3
   2c114:	bne	2c1c0 <__flatcc_fb_build_schema@@Base+0xec0>
   2c118:	ldrb	r0, [r6, #72]	; 0x48
   2c11c:	tst	r0, #128	; 0x80
   2c120:	beq	2c0bc <__flatcc_fb_build_schema@@Base+0xdbc>
   2c124:	ldr	r0, [r4, #148]	; 0x94
   2c128:	cmp	r0, #0
   2c12c:	beq	2c19c <__flatcc_fb_build_schema@@Base+0xe9c>
   2c130:	add	r9, r9, #1
   2c134:	b	2c0bc <__flatcc_fb_build_schema@@Base+0xdbc>
   2c138:	mov	r0, #0
   2c13c:	sub	sp, fp, #28
   2c140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c144:	mov	r0, #0
   2c148:	cmp	r9, #0
   2c14c:	beq	2bf68 <__flatcc_fb_build_schema@@Base+0xc68>
   2c150:	ldrh	r1, [r5, #10]
   2c154:	orr	r1, r1, #8
   2c158:	strh	r1, [r5, #10]
   2c15c:	cmp	r9, #2
   2c160:	blt	2bf68 <__flatcc_fb_build_schema@@Base+0xc68>
   2c164:	ldr	r1, [r4, #156]	; 0x9c
   2c168:	cmp	r1, #0
   2c16c:	bne	2bf68 <__flatcc_fb_build_schema@@Base+0xc68>
   2c170:	movw	r2, #56011	; 0xdacb
   2c174:	movt	r2, #4
   2c178:	b	2bf58 <__flatcc_fb_build_schema@@Base+0xc58>
   2c17c:	movw	r2, #55645	; 0xd95d
   2c180:	movt	r2, #4
   2c184:	b	2c190 <__flatcc_fb_build_schema@@Base+0xe90>
   2c188:	movw	r2, #55904	; 0xda60
   2c18c:	movt	r2, #4
   2c190:	mov	r0, r4
   2c194:	mov	r1, r6
   2c198:	b	2bf60 <__flatcc_fb_build_schema@@Base+0xc60>
   2c19c:	movw	r2, #55795	; 0xd9f3
   2c1a0:	movt	r2, #4
   2c1a4:	mov	r0, r4
   2c1a8:	mov	r1, r6
   2c1ac:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c1b0:	b	2c1d4 <__flatcc_fb_build_schema@@Base+0xed4>
   2c1b4:	movw	r2, #55844	; 0xda24
   2c1b8:	movt	r2, #4
   2c1bc:	b	2c1c8 <__flatcc_fb_build_schema@@Base+0xec8>
   2c1c0:	movw	r2, #55727	; 0xd9af
   2c1c4:	movt	r2, #4
   2c1c8:	mov	r0, r4
   2c1cc:	mov	r1, r6
   2c1d0:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2c1d4:	mov	r0, #1
   2c1d8:	strh	r0, [r6, #24]
   2c1dc:	b	2bf64 <__flatcc_fb_build_schema@@Base+0xc64>
   2c1e0:	b	2b82c <__flatcc_fb_build_schema@@Base+0x52c>
   2c1e4:	ldr	r1, [r1, #4]
   2c1e8:	b	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2c1ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c1f0:	add	fp, sp, #28
   2c1f4:	sub	sp, sp, #4
   2c1f8:	mov	r4, r0
   2c1fc:	ldrh	r0, [r1, #8]
   2c200:	cmp	r0, #1
   2c204:	bne	2c4e8 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c208:	mov	r5, r1
   2c20c:	ldrh	r0, [r1, #10]
   2c210:	tst	r0, #1
   2c214:	bne	2c508 <__flatcc_fb_build_schema@@Base+0x1208>
   2c218:	mov	r7, #0
   2c21c:	tst	r0, #2
   2c220:	bne	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c224:	ldr	r1, [r5, #120]	; 0x78
   2c228:	cmp	r1, #0
   2c22c:	bne	2c528 <__flatcc_fb_build_schema@@Base+0x1228>
   2c230:	orr	r0, r0, #1
   2c234:	strh	r0, [r5, #10]
   2c238:	ldr	sl, [r5, #20]
   2c23c:	cmp	sl, #0
   2c240:	beq	2c3d0 <__flatcc_fb_build_schema@@Base+0x10d0>
   2c244:	add	r8, r5, #112	; 0x70
   2c248:	mov	r9, #1
   2c24c:	b	2c284 <__flatcc_fb_build_schema@@Base+0xf84>
   2c250:	mov	r0, r4
   2c254:	mov	r1, sl
   2c258:	movw	r2, #56425	; 0xdc69
   2c25c:	movt	r2, #4
   2c260:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c264:	strd	r6, [r8]
   2c268:	ldrh	r0, [sl, #74]	; 0x4a
   2c26c:	uxth	r1, r9
   2c270:	cmp	r1, r0
   2c274:	movcc	r9, r0
   2c278:	ldr	sl, [sl]
   2c27c:	cmp	sl, #0
   2c280:	beq	2c3d4 <__flatcc_fb_build_schema@@Base+0x10d4>
   2c284:	ldr	r0, [r4, #116]	; 0x74
   2c288:	cmp	r0, #100	; 0x64
   2c28c:	bge	2c45c <__flatcc_fb_build_schema@@Base+0x115c>
   2c290:	ldrh	r0, [sl, #24]
   2c294:	mvn	r7, #0
   2c298:	cmp	r0, #8
   2c29c:	beq	2c2cc <__flatcc_fb_build_schema@@Base+0xfcc>
   2c2a0:	cmp	r0, #14
   2c2a4:	bne	2c474 <__flatcc_fb_build_schema@@Base+0x1174>
   2c2a8:	ldr	r6, [sl, #16]
   2c2ac:	ldrh	r0, [r6, #8]
   2c2b0:	cmp	r0, #1
   2c2b4:	beq	2c2f4 <__flatcc_fb_build_schema@@Base+0xff4>
   2c2b8:	cmp	r0, #3
   2c2bc:	bne	2c488 <__flatcc_fb_build_schema@@Base+0x1188>
   2c2c0:	ldrd	r0, [r6, #112]	; 0x70
   2c2c4:	strh	r0, [sl, #74]	; 0x4a
   2c2c8:	b	2c364 <__flatcc_fb_build_schema@@Base+0x1064>
   2c2cc:	ldr	r6, [sl, #16]
   2c2d0:	mov	r0, r6
   2c2d4:	bl	2d7d0 <__flatcc_fb_build_schema@@Base+0x24d0>
   2c2d8:	str	r0, [sl, #16]
   2c2dc:	bl	2d7f8 <__flatcc_fb_build_schema@@Base+0x24f8>
   2c2e0:	cmp	r0, #0
   2c2e4:	beq	2c4a0 <__flatcc_fb_build_schema@@Base+0x11a0>
   2c2e8:	strh	r0, [sl, #74]	; 0x4a
   2c2ec:	mov	r1, #0
   2c2f0:	b	2c364 <__flatcc_fb_build_schema@@Base+0x1064>
   2c2f4:	ldrh	r0, [r6, #10]
   2c2f8:	tst	r0, #1
   2c2fc:	bne	2c4bc <__flatcc_fb_build_schema@@Base+0x11bc>
   2c300:	tst	r0, #2
   2c304:	bne	2c358 <__flatcc_fb_build_schema@@Base+0x1058>
   2c308:	ldr	r0, [r4, #188]	; 0xbc
   2c30c:	cmp	r0, #0
   2c310:	beq	2c32c <__flatcc_fb_build_schema@@Base+0x102c>
   2c314:	mov	r0, r4
   2c318:	mov	r1, sl
   2c31c:	movw	r2, #56298	; 0xdbea
   2c320:	movt	r2, #4
   2c324:	mov	r3, r6
   2c328:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2c32c:	ldr	r0, [r4, #116]	; 0x74
   2c330:	add	r0, r0, #1
   2c334:	str	r0, [r4, #116]	; 0x74
   2c338:	mov	r0, r4
   2c33c:	mov	r1, r6
   2c340:	bl	2c1ec <__flatcc_fb_build_schema@@Base+0xeec>
   2c344:	ldr	r1, [r4, #116]	; 0x74
   2c348:	sub	r1, r1, #1
   2c34c:	str	r1, [r4, #116]	; 0x74
   2c350:	cmp	r0, #0
   2c354:	bne	2c4d8 <__flatcc_fb_build_schema@@Base+0x11d8>
   2c358:	ldrh	r0, [r6, #104]	; 0x68
   2c35c:	strh	r0, [sl, #74]	; 0x4a
   2c360:	ldrd	r0, [r6, #112]	; 0x70
   2c364:	add	r6, sl, #80	; 0x50
   2c368:	strd	r0, [r6, #8]
   2c36c:	ldrd	r0, [r8]
   2c370:	ldrh	r2, [sl, #74]	; 0x4a
   2c374:	mov	r3, #0
   2c378:	bl	2da64 <__flatcc_fb_build_schema@@Base+0x2764>
   2c37c:	mov	r2, r0
   2c380:	mov	r3, r1
   2c384:	strd	r2, [r6]
   2c388:	ldrd	r0, [r8]
   2c38c:	subs	r7, r2, r0
   2c390:	sbcs	r7, r3, r1
   2c394:	bcc	2c440 <__flatcc_fb_build_schema@@Base+0x1140>
   2c398:	ldrd	r6, [r6, #8]
   2c39c:	adds	r6, r6, r2
   2c3a0:	adcs	r7, r7, r3
   2c3a4:	mov	r2, #0
   2c3a8:	adc	r2, r2, #0
   2c3ac:	cmp	r2, #1
   2c3b0:	beq	2c440 <__flatcc_fb_build_schema@@Base+0x1140>
   2c3b4:	subs	r0, r6, r0
   2c3b8:	sbcs	r0, r7, r1
   2c3bc:	bcc	2c250 <__flatcc_fb_build_schema@@Base+0xf50>
   2c3c0:	subs	r0, r6, #65536	; 0x10000
   2c3c4:	sbcs	r0, r7, #0
   2c3c8:	bcc	2c264 <__flatcc_fb_build_schema@@Base+0xf64>
   2c3cc:	b	2c250 <__flatcc_fb_build_schema@@Base+0xf50>
   2c3d0:	mov	r9, #1
   2c3d4:	ldrh	r0, [r5, #104]	; 0x68
   2c3d8:	cmp	r0, #0
   2c3dc:	beq	2c400 <__flatcc_fb_build_schema@@Base+0x1100>
   2c3e0:	uxth	r1, r9
   2c3e4:	cmp	r1, r0
   2c3e8:	bls	2c404 <__flatcc_fb_build_schema@@Base+0x1104>
   2c3ec:	movw	r2, #56476	; 0xdc9c
   2c3f0:	movt	r2, #4
   2c3f4:	mov	r0, r4
   2c3f8:	mov	r1, r5
   2c3fc:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c400:	strh	r9, [r5, #104]	; 0x68
   2c404:	ldrd	r0, [r5, #112]	; 0x70
   2c408:	ldrh	r2, [r5, #104]	; 0x68
   2c40c:	mov	r7, #0
   2c410:	mov	r3, #0
   2c414:	bl	2da64 <__flatcc_fb_build_schema@@Base+0x2764>
   2c418:	str	r1, [r5, #116]	; 0x74
   2c41c:	str	r0, [r5, #112]	; 0x70
   2c420:	ldrh	r0, [r5, #10]
   2c424:	orr	r0, r0, #2
   2c428:	bic	r0, r0, #1
   2c42c:	strh	r0, [r5, #10]
   2c430:	ldr	r0, [r4, #396]	; 0x18c
   2c434:	str	r0, [r5, #120]	; 0x78
   2c438:	str	r5, [r4, #396]	; 0x18c
   2c43c:	b	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c440:	movw	r2, #56404	; 0xdc54
   2c444:	movt	r2, #4
   2c448:	mov	r0, r4
   2c44c:	mov	r1, sl
   2c450:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c454:	mvn	r7, #0
   2c458:	b	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c45c:	movw	r1, #56177	; 0xdb71
   2c460:	movt	r1, #4
   2c464:	mov	r0, r4
   2c468:	bl	2d6cc <__flatcc_fb_build_schema@@Base+0x23cc>
   2c46c:	mvn	r7, #0
   2c470:	b	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c474:	cmp	r0, #1
   2c478:	beq	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c47c:	movw	r2, #56250	; 0xdbba
   2c480:	movt	r2, #4
   2c484:	b	2c490 <__flatcc_fb_build_schema@@Base+0x1190>
   2c488:	movw	r2, #56369	; 0xdc31
   2c48c:	movt	r2, #4
   2c490:	mov	r0, r4
   2c494:	mov	r1, sl
   2c498:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c49c:	b	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c4a0:	movw	r2, #56250	; 0xdbba
   2c4a4:	movt	r2, #4
   2c4a8:	mov	r0, r4
   2c4ac:	mov	r1, sl
   2c4b0:	mov	r3, r6
   2c4b4:	bl	2da5c <__flatcc_fb_build_schema@@Base+0x275c>
   2c4b8:	b	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c4bc:	movw	r2, #56266	; 0xdbca
   2c4c0:	movt	r2, #4
   2c4c4:	mov	r0, r4
   2c4c8:	mov	r1, sl
   2c4cc:	mov	r3, r6
   2c4d0:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2c4d4:	b	2c4dc <__flatcc_fb_build_schema@@Base+0x11dc>
   2c4d8:	mov	r7, r0
   2c4dc:	mov	r0, r7
   2c4e0:	sub	sp, fp, #28
   2c4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c4e8:	movw	r0, #48261	; 0xbc85
   2c4ec:	movt	r0, #3
   2c4f0:	movw	r1, #53769	; 0xd209
   2c4f4:	movt	r1, #4
   2c4f8:	movw	r3, #56071	; 0xdb07
   2c4fc:	movt	r3, #4
   2c500:	movw	r2, #502	; 0x1f6
   2c504:	bl	14984 <__assert_fail@plt>
   2c508:	movw	r0, #56127	; 0xdb3f
   2c50c:	movt	r0, #4
   2c510:	movw	r1, #53769	; 0xd209
   2c514:	movt	r1, #4
   2c518:	movw	r3, #56071	; 0xdb07
   2c51c:	movt	r3, #4
   2c520:	mov	r2, #504	; 0x1f8
   2c524:	bl	14984 <__assert_fail@plt>
   2c528:	movw	r0, #56166	; 0xdb66
   2c52c:	movt	r0, #4
   2c530:	movw	r1, #53769	; 0xd209
   2c534:	movt	r1, #4
   2c538:	movw	r3, #56071	; 0xdb07
   2c53c:	movt	r3, #4
   2c540:	mov	r2, #508	; 0x1fc
   2c544:	bl	14984 <__assert_fail@plt>
   2c548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c54c:	add	fp, sp, #28
   2c550:	sub	sp, sp, #212	; 0xd4
   2c554:	mov	sl, r0
   2c558:	ldrh	r0, [r1, #8]
   2c55c:	cmp	r0, #0
   2c560:	bne	2d218 <__flatcc_fb_build_schema@@Base+0x1f18>
   2c564:	mov	r8, r1
   2c568:	ldrh	r0, [r1, #48]	; 0x30
   2c56c:	cmp	r0, #0
   2c570:	bne	2d238 <__flatcc_fb_build_schema@@Base+0x1f38>
   2c574:	ldr	r1, [r8, #28]
   2c578:	add	r3, sp, #60	; 0x3c
   2c57c:	mov	r0, sl
   2c580:	mov	r2, #8
   2c584:	bl	2d808 <__flatcc_fb_build_schema@@Base+0x2508>
   2c588:	strh	r0, [r8, #92]	; 0x5c
   2c58c:	ldr	r7, [r8, #20]
   2c590:	mov	r9, #0
   2c594:	cmp	r7, #0
   2c598:	beq	2d07c <__flatcc_fb_build_schema@@Base+0x1d7c>
   2c59c:	add	r0, sl, #216	; 0xd8
   2c5a0:	str	r0, [sp, #24]
   2c5a4:	add	r4, r8, #56	; 0x38
   2c5a8:	movw	r9, #56665	; 0xdd59
   2c5ac:	movt	r9, #4
   2c5b0:	mov	r0, #0
   2c5b4:	str	r0, [sp, #16]
   2c5b8:	mov	r0, #0
   2c5bc:	str	r0, [sp, #12]
   2c5c0:	mov	r0, #0
   2c5c4:	str	r0, [sp, #52]	; 0x34
   2c5c8:	mov	r0, #0
   2c5cc:	str	r0, [sp, #48]	; 0x30
   2c5d0:	mov	r5, #0
   2c5d4:	mov	r0, #0
   2c5d8:	str	r0, [sp, #32]
   2c5dc:	mov	r0, #0
   2c5e0:	str	r0, [sp, #56]	; 0x38
   2c5e4:	mov	r6, #0
   2c5e8:	str	r4, [sp, #20]
   2c5ec:	b	2c610 <__flatcc_fb_build_schema@@Base+0x1310>
   2c5f0:	mov	r3, r0
   2c5f4:	mov	r0, sl
   2c5f8:	mov	r1, r7
   2c5fc:	mov	r2, r9
   2c600:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2c604:	ldr	r7, [r7]
   2c608:	cmp	r7, #0
   2c60c:	beq	2d064 <__flatcc_fb_build_schema@@Base+0x1d64>
   2c610:	mov	r0, r4
   2c614:	mov	r1, r7
   2c618:	bl	2b75c <__flatcc_fb_build_schema@@Base+0x45c>
   2c61c:	cmp	r0, #0
   2c620:	bne	2c5f0 <__flatcc_fb_build_schema@@Base+0x12f0>
   2c624:	ldrh	r0, [r7, #8]
   2c628:	cmp	r0, #5
   2c62c:	bne	2d17c <__flatcc_fb_build_schema@@Base+0x1e7c>
   2c630:	ldrh	r0, [r7, #24]
   2c634:	sub	r1, r0, #7
   2c638:	cmp	r1, #2
   2c63c:	bcs	2c650 <__flatcc_fb_build_schema@@Base+0x1350>
   2c640:	ldr	r0, [r7, #16]
   2c644:	bl	2d7d0 <__flatcc_fb_build_schema@@Base+0x24d0>
   2c648:	str	r0, [r7, #16]
   2c64c:	b	2c658 <__flatcc_fb_build_schema@@Base+0x1358>
   2c650:	cmp	r0, #1
   2c654:	beq	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2c658:	ldr	r1, [r7, #64]	; 0x40
   2c65c:	mov	r0, sl
   2c660:	movw	r2, #4038	; 0xfc6
   2c664:	add	r3, sp, #60	; 0x3c
   2c668:	bl	2d808 <__flatcc_fb_build_schema@@Base+0x2508>
   2c66c:	strh	r0, [r7, #72]	; 0x48
   2c670:	ldr	r3, [sp, #84]	; 0x54
   2c674:	cmp	r3, #0
   2c678:	beq	2c68c <__flatcc_fb_build_schema@@Base+0x138c>
   2c67c:	ldr	r1, [r8, #12]
   2c680:	mov	r0, sl
   2c684:	mov	r2, r7
   2c688:	bl	2dad4 <__flatcc_fb_build_schema@@Base+0x27d4>
   2c68c:	ldrb	r0, [r7, #73]	; 0x49
   2c690:	tst	r0, #1
   2c694:	beq	2c6b8 <__flatcc_fb_build_schema@@Base+0x13b8>
   2c698:	ldrh	r0, [r7, #24]
   2c69c:	cmp	r0, #8
   2c6a0:	bne	2c6b8 <__flatcc_fb_build_schema@@Base+0x13b8>
   2c6a4:	mov	r0, sl
   2c6a8:	mov	r1, r7
   2c6ac:	movw	r2, #56736	; 0xdda0
   2c6b0:	movt	r2, #4
   2c6b4:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c6b8:	ldrb	r0, [r7, #73]	; 0x49
   2c6bc:	tst	r0, #4
   2c6c0:	beq	2c6f0 <__flatcc_fb_build_schema@@Base+0x13f0>
   2c6c4:	ldrh	r0, [r7, #24]
   2c6c8:	cmp	r0, #7
   2c6cc:	bne	2c6dc <__flatcc_fb_build_schema@@Base+0x13dc>
   2c6d0:	ldr	r0, [r7, #16]
   2c6d4:	cmp	r0, #4
   2c6d8:	beq	2c6f0 <__flatcc_fb_build_schema@@Base+0x13f0>
   2c6dc:	mov	r0, sl
   2c6e0:	mov	r1, r7
   2c6e4:	movw	r2, #56792	; 0xddd8
   2c6e8:	movt	r2, #4
   2c6ec:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c6f0:	ldrb	r0, [r7, #73]	; 0x49
   2c6f4:	tst	r0, #8
   2c6f8:	beq	2c728 <__flatcc_fb_build_schema@@Base+0x1428>
   2c6fc:	ldrh	r0, [r7, #24]
   2c700:	cmp	r0, #7
   2c704:	bne	2c714 <__flatcc_fb_build_schema@@Base+0x1414>
   2c708:	ldr	r0, [r7, #16]
   2c70c:	cmp	r0, #4
   2c710:	beq	2c728 <__flatcc_fb_build_schema@@Base+0x1428>
   2c714:	mov	r0, sl
   2c718:	mov	r1, r7
   2c71c:	movw	r2, #56852	; 0xde14
   2c720:	movt	r2, #4
   2c724:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c728:	ldrh	r0, [r7, #72]	; 0x48
   2c72c:	and	r0, r0, #3072	; 0xc00
   2c730:	cmp	r0, #3072	; 0xc00
   2c734:	bne	2c74c <__flatcc_fb_build_schema@@Base+0x144c>
   2c738:	mov	r0, sl
   2c73c:	mov	r1, r7
   2c740:	movw	r2, #56915	; 0xde53
   2c744:	movt	r2, #4
   2c748:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c74c:	ldr	r0, [sp, #56]	; 0x38
   2c750:	orrs	r0, r0, r6
   2c754:	ldr	r0, [sp, #64]	; 0x40
   2c758:	str	r0, [sp, #36]	; 0x24
   2c75c:	bne	2c788 <__flatcc_fb_build_schema@@Base+0x1488>
   2c760:	cmp	r0, #0
   2c764:	beq	2c788 <__flatcc_fb_build_schema@@Base+0x1488>
   2c768:	ldr	r0, [sp, #24]
   2c76c:	ldr	r2, [r0]
   2c770:	ldr	r0, [sl, #112]	; 0x70
   2c774:	str	r0, [sp, #16]
   2c778:	mov	r1, #0
   2c77c:	bl	148dc <memset@plt>
   2c780:	mov	r0, #1
   2c784:	str	r0, [sp, #32]
   2c788:	add	r0, r7, #96	; 0x60
   2c78c:	str	r0, [sp, #28]
   2c790:	cmp	r5, #0
   2c794:	bne	2c800 <__flatcc_fb_build_schema@@Base+0x1500>
   2c798:	ldr	r0, [sp, #24]
   2c79c:	ldrd	r0, [r0]
   2c7a0:	ldr	r2, [sp, #56]	; 0x38
   2c7a4:	subs	r0, r2, r0
   2c7a8:	sbcs	r0, r6, r1
   2c7ac:	bcs	2c7d8 <__flatcc_fb_build_schema@@Base+0x14d8>
   2c7b0:	mov	r5, #0
   2c7b4:	ldr	r0, [sp, #32]
   2c7b8:	cmp	r0, #0
   2c7bc:	bne	2c7f0 <__flatcc_fb_build_schema@@Base+0x14f0>
   2c7c0:	mov	r5, #0
   2c7c4:	ldr	r0, [sp, #56]	; 0x38
   2c7c8:	uxth	r0, r0
   2c7cc:	ldr	r1, [sp, #28]
   2c7d0:	stm	r1, {r0, r5}
   2c7d4:	b	2c7f0 <__flatcc_fb_build_schema@@Base+0x14f0>
   2c7d8:	mov	r0, sl
   2c7dc:	mov	r1, r7
   2c7e0:	movw	r2, #56970	; 0xde8a
   2c7e4:	movt	r2, #4
   2c7e8:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c7ec:	mov	r5, #1
   2c7f0:	ldr	r0, [sp, #56]	; 0x38
   2c7f4:	adds	r0, r0, #1
   2c7f8:	str	r0, [sp, #56]	; 0x38
   2c7fc:	adc	r6, r6, #0
   2c800:	ldrh	r0, [r7, #24]
   2c804:	sub	r0, r0, #7
   2c808:	cmp	r0, #5
   2c80c:	bhi	2ca50 <__flatcc_fb_build_schema@@Base+0x1750>
   2c810:	str	r5, [sp, #40]	; 0x28
   2c814:	str	r6, [sp, #44]	; 0x2c
   2c818:	add	r9, r7, #48	; 0x30
   2c81c:	add	r1, pc, #0
   2c820:	ldr	pc, [r1, r0, lsl #2]
   2c824:	andeq	ip, r2, ip, lsr r8
   2c828:			; <UNDEFINED> instruction: 0x0002c9b4
   2c82c:	andeq	ip, r2, r8, asr #18
   2c830:	andeq	ip, r2, r4, ror r9
   2c834:	andeq	ip, r2, ip, ror r8
   2c838:	strdeq	ip, [r2], -r4
   2c83c:	ldr	r0, [r7, #16]
   2c840:	bl	2d7f8 <__flatcc_fb_build_schema@@Base+0x24f8>
   2c844:	mov	r4, r0
   2c848:	mov	lr, #0
   2c84c:	str	r4, [r9, #40]	; 0x28
   2c850:	str	lr, [r9, #44]	; 0x2c
   2c854:	strh	r0, [r7, #74]	; 0x4a
   2c858:	ldrh	r0, [r7, #56]	; 0x38
   2c85c:	cmp	r0, #0
   2c860:	beq	2caac <__flatcc_fb_build_schema@@Base+0x17ac>
   2c864:	mov	r0, sl
   2c868:	mov	r1, r7
   2c86c:	movw	r2, #57052	; 0xdedc
   2c870:	movt	r2, #4
   2c874:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c878:	b	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2c87c:	ldr	r2, [r7, #16]
   2c880:	ldr	r1, [r8, #12]
   2c884:	mov	r0, sl
   2c888:	bl	2d6d8 <__flatcc_fb_build_schema@@Base+0x23d8>
   2c88c:	cmp	r0, #0
   2c890:	beq	2ca70 <__flatcc_fb_build_schema@@Base+0x1770>
   2c894:	mov	lr, r0
   2c898:	ldrh	r0, [r0, #8]
   2c89c:	cmp	r0, #4
   2c8a0:	bhi	2cb4c <__flatcc_fb_build_schema@@Base+0x184c>
   2c8a4:	cmp	r0, #2
   2c8a8:	beq	2cb4c <__flatcc_fb_build_schema@@Base+0x184c>
   2c8ac:	ldrh	r0, [r7, #56]	; 0x38
   2c8b0:	cmp	r0, #0
   2c8b4:	bne	2cc58 <__flatcc_fb_build_schema@@Base+0x1958>
   2c8b8:	str	lr, [r7, #16]
   2c8bc:	mov	r0, #15
   2c8c0:	strh	r0, [r7, #24]
   2c8c4:	ldrd	r0, [lr, #112]	; 0x70
   2c8c8:	strd	r0, [r9, #40]	; 0x28
   2c8cc:	ldr	r0, [r7, #16]
   2c8d0:	ldrh	r0, [r0, #104]	; 0x68
   2c8d4:	strh	r0, [r7, #74]	; 0x4a
   2c8d8:	mov	ip, #0
   2c8dc:	ldr	r0, [sp, #40]	; 0x28
   2c8e0:	cmp	r0, #0
   2c8e4:	bne	2ccf0 <__flatcc_fb_build_schema@@Base+0x19f0>
   2c8e8:	ldrh	r0, [lr, #8]
   2c8ec:	cmp	r0, #4
   2c8f0:	ldr	r6, [sp, #44]	; 0x2c
   2c8f4:	bne	2ccf4 <__flatcc_fb_build_schema@@Base+0x19f4>
   2c8f8:	ldr	r0, [sp, #32]
   2c8fc:	cmp	r0, #0
   2c900:	ldr	r4, [sp, #20]
   2c904:	movw	r9, #56665	; 0xdd59
   2c908:	movt	r9, #4
   2c90c:	bne	2c924 <__flatcc_fb_build_schema@@Base+0x1624>
   2c910:	ldr	r0, [sp, #56]	; 0x38
   2c914:	uxth	r0, r0
   2c918:	mov	r1, #0
   2c91c:	ldr	r2, [sp, #28]
   2c920:	strd	r0, [r2]
   2c924:	ldr	r0, [sp, #56]	; 0x38
   2c928:	adds	r0, r0, #1
   2c92c:	str	r0, [sp, #56]	; 0x38
   2c930:	adc	r6, r6, #0
   2c934:	mov	ip, #0
   2c938:	ldr	r0, [sp, #36]	; 0x24
   2c93c:	cmp	r0, #0
   2c940:	bne	2cd18 <__flatcc_fb_build_schema@@Base+0x1a18>
   2c944:	b	2cd48 <__flatcc_fb_build_schema@@Base+0x1a48>
   2c948:	ldrh	r0, [r7, #56]	; 0x38
   2c94c:	cmp	r0, #0
   2c950:	ldr	r4, [sp, #20]
   2c954:	movw	r9, #56665	; 0xdd59
   2c958:	movt	r9, #4
   2c95c:	beq	2ca8c <__flatcc_fb_build_schema@@Base+0x178c>
   2c960:	mov	r0, sl
   2c964:	mov	r1, r7
   2c968:	movw	r2, #57129	; 0xdf29
   2c96c:	movt	r2, #4
   2c970:	b	2c99c <__flatcc_fb_build_schema@@Base+0x169c>
   2c974:	ldrh	r0, [r7, #56]	; 0x38
   2c978:	cmp	r0, #0
   2c97c:	ldr	r4, [sp, #20]
   2c980:	movw	r9, #56665	; 0xdd59
   2c984:	movt	r9, #4
   2c988:	beq	2ca9c <__flatcc_fb_build_schema@@Base+0x179c>
   2c98c:	mov	r0, sl
   2c990:	mov	r1, r7
   2c994:	movw	r2, #57094	; 0xdf06
   2c998:	movt	r2, #4
   2c99c:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2c9a0:	mov	r0, #1
   2c9a4:	strh	r0, [r7, #24]
   2c9a8:	ldr	r6, [sp, #44]	; 0x2c
   2c9ac:	ldr	r5, [sp, #40]	; 0x28
   2c9b0:	b	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2c9b4:	ldrh	r0, [r7, #56]	; 0x38
   2c9b8:	cmp	r0, #13
   2c9bc:	bne	2caf0 <__flatcc_fb_build_schema@@Base+0x17f0>
   2c9c0:	ldr	r3, [r9]
   2c9c4:	ldr	r1, [r8, #12]
   2c9c8:	str	r9, [sp]
   2c9cc:	mov	r0, sl
   2c9d0:	mov	r2, #0
   2c9d4:	bl	2dba0 <__flatcc_fb_build_schema@@Base+0x28a0>
   2c9d8:	cmp	r0, #0
   2c9dc:	beq	2caec <__flatcc_fb_build_schema@@Base+0x17ec>
   2c9e0:	ldr	r1, [r7, #48]	; 0x30
   2c9e4:	mov	r0, sl
   2c9e8:	movw	r2, #57002	; 0xdeaa
   2c9ec:	movt	r2, #4
   2c9f0:	b	2ca80 <__flatcc_fb_build_schema@@Base+0x1780>
   2c9f4:	ldr	r2, [r7, #16]
   2c9f8:	ldr	r1, [r8, #12]
   2c9fc:	mov	r0, sl
   2ca00:	bl	2d6d8 <__flatcc_fb_build_schema@@Base+0x23d8>
   2ca04:	cmp	r0, #0
   2ca08:	beq	2cab4 <__flatcc_fb_build_schema@@Base+0x17b4>
   2ca0c:	mov	lr, r0
   2ca10:	ldrh	r0, [r0, #8]
   2ca14:	cmp	r0, #4
   2ca18:	bhi	2ce6c <__flatcc_fb_build_schema@@Base+0x1b6c>
   2ca1c:	mov	ip, #0
   2ca20:	add	r1, pc, #0
   2ca24:	ldr	pc, [r1, r0, lsl #2]
   2ca28:	muleq	r2, r4, fp
   2ca2c:	muleq	r2, r4, fp
   2ca30:	andeq	ip, r2, ip, lsr sl
   2ca34:	andeq	ip, r2, r8, ror #22
   2ca38:	muleq	r2, r4, fp
   2ca3c:	mov	r0, sl
   2ca40:	mov	r1, r7
   2ca44:	movw	r2, #57270	; 0xdfb6
   2ca48:	movt	r2, #4
   2ca4c:	b	2ce7c <__flatcc_fb_build_schema@@Base+0x1b7c>
   2ca50:	mov	r0, sl
   2ca54:	mov	r1, r7
   2ca58:	movw	r2, #57688	; 0xe158
   2ca5c:	movt	r2, #4
   2ca60:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2ca64:	mov	r0, #1
   2ca68:	strh	r0, [r7, #24]
   2ca6c:	b	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2ca70:	ldr	r1, [r7, #16]
   2ca74:	mov	r0, sl
   2ca78:	movw	r2, #57561	; 0xe0d9
   2ca7c:	movt	r2, #4
   2ca80:	mov	r3, r7
   2ca84:	bl	2767c <error_ref_sym@@Base>
   2ca88:	b	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2ca8c:	mov	lr, #0
   2ca90:	mov	ip, #0
   2ca94:	ldr	r6, [sp, #44]	; 0x2c
   2ca98:	b	2cd00 <__flatcc_fb_build_schema@@Base+0x1a00>
   2ca9c:	ldr	ip, [sl, #164]	; 0xa4
   2caa0:	mov	lr, #0
   2caa4:	ldr	r6, [sp, #44]	; 0x2c
   2caa8:	b	2cd00 <__flatcc_fb_build_schema@@Base+0x1a00>
   2caac:	mov	ip, #0
   2cab0:	b	2ccf0 <__flatcc_fb_build_schema@@Base+0x19f0>
   2cab4:	ldr	r1, [r7, #16]
   2cab8:	mov	r0, sl
   2cabc:	movw	r2, #57171	; 0xdf53
   2cac0:	movt	r2, #4
   2cac4:	mov	r3, r7
   2cac8:	bl	2767c <error_ref_sym@@Base>
   2cacc:	mov	r0, #1
   2cad0:	strh	r0, [r7, #24]
   2cad4:	ldr	r6, [sp, #44]	; 0x2c
   2cad8:	ldr	r4, [sp, #20]
   2cadc:	movw	r9, #56665	; 0xdd59
   2cae0:	movt	r9, #4
   2cae4:	mov	r5, #1
   2cae8:	b	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2caec:	ldrh	r0, [r7, #56]	; 0x38
   2caf0:	cmp	r0, #0
   2caf4:	bne	2cb0c <__flatcc_fb_build_schema@@Base+0x180c>
   2caf8:	mov	r0, #5
   2cafc:	strh	r0, [r7, #56]	; 0x38
   2cb00:	mov	r0, #0
   2cb04:	str	r0, [r9]
   2cb08:	str	r0, [r9, #4]
   2cb0c:	ldr	r2, [r7, #16]
   2cb10:	mov	r0, sl
   2cb14:	mov	r1, r7
   2cb18:	mov	r3, r9
   2cb1c:	bl	2dff4 <__flatcc_fb_coerce_scalar_type@@Base>
   2cb20:	cmp	r0, #0
   2cb24:	bne	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2cb28:	ldr	r0, [r7, #16]
   2cb2c:	bl	2d7f8 <__flatcc_fb_build_schema@@Base+0x24f8>
   2cb30:	mov	r4, r0
   2cb34:	mov	lr, #0
   2cb38:	str	r4, [r9, #40]	; 0x28
   2cb3c:	str	lr, [r9, #44]	; 0x2c
   2cb40:	strh	r0, [r7, #74]	; 0x4a
   2cb44:	mov	ip, #1
   2cb48:	b	2ccf0 <__flatcc_fb_build_schema@@Base+0x19f0>
   2cb4c:	ldr	r3, [r7, #16]
   2cb50:	mov	r0, sl
   2cb54:	mov	r1, r7
   2cb58:	movw	r2, #57613	; 0xe10d
   2cb5c:	movt	r2, #4
   2cb60:	bl	2da5c <__flatcc_fb_build_schema@@Base+0x275c>
   2cb64:	b	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2cb68:	ldrb	r0, [r7, #73]	; 0x49
   2cb6c:	tst	r0, #1
   2cb70:	beq	2cb90 <__flatcc_fb_build_schema@@Base+0x1890>
   2cb74:	mov	r0, sl
   2cb78:	mov	r1, r7
   2cb7c:	movw	r2, #57216	; 0xdf80
   2cb80:	movt	r2, #4
   2cb84:	mov	r4, lr
   2cb88:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2cb8c:	mov	lr, r4
   2cb90:	ldr	ip, [sl, #148]	; 0x94
   2cb94:	str	lr, [r7, #16]
   2cb98:	mov	r0, #14
   2cb9c:	strh	r0, [r7, #24]
   2cba0:	ldrd	r0, [lr, #112]	; 0x70
   2cba4:	strd	r0, [r9, #40]	; 0x28
   2cba8:	ldr	r2, [r7, #16]
   2cbac:	ldrh	r0, [r2, #104]	; 0x68
   2cbb0:	strh	r0, [r7, #74]	; 0x4a
   2cbb4:	ldrh	r0, [lr, #8]
   2cbb8:	ldr	r1, [sp, #40]	; 0x28
   2cbbc:	cmp	r1, #0
   2cbc0:	cmpeq	r0, #4
   2cbc4:	bne	2cc04 <__flatcc_fb_build_schema@@Base+0x1904>
   2cbc8:	ldr	r1, [sp, #32]
   2cbcc:	cmp	r1, #0
   2cbd0:	bne	2cbec <__flatcc_fb_build_schema@@Base+0x18ec>
   2cbd4:	ldr	r3, [sp, #56]	; 0x38
   2cbd8:	uxth	r4, r3
   2cbdc:	mov	r3, #0
   2cbe0:	ldr	r6, [sp, #28]
   2cbe4:	str	r4, [r6]
   2cbe8:	str	r3, [r6, #4]
   2cbec:	ldr	r1, [sp, #56]	; 0x38
   2cbf0:	adds	r1, r1, #1
   2cbf4:	str	r1, [sp, #56]	; 0x38
   2cbf8:	ldr	r1, [sp, #44]	; 0x2c
   2cbfc:	adc	r1, r1, #0
   2cc00:	str	r1, [sp, #44]	; 0x2c
   2cc04:	ldrh	r1, [r7, #56]	; 0x38
   2cc08:	cmp	r1, #0
   2cc0c:	beq	2cc70 <__flatcc_fb_build_schema@@Base+0x1970>
   2cc10:	cmp	r0, #3
   2cc14:	bne	2cc58 <__flatcc_fb_build_schema@@Base+0x1958>
   2cc18:	str	ip, [sp, #8]
   2cc1c:	cmp	r1, #13
   2cc20:	bne	2cea4 <__flatcc_fb_build_schema@@Base+0x1ba4>
   2cc24:	str	lr, [sp, #4]
   2cc28:	ldr	r3, [r9]
   2cc2c:	ldr	r1, [r8, #12]
   2cc30:	str	r9, [sp]
   2cc34:	mov	r0, sl
   2cc38:	bl	2dba0 <__flatcc_fb_build_schema@@Base+0x28a0>
   2cc3c:	cmp	r0, #0
   2cc40:	beq	2ceec <__flatcc_fb_build_schema@@Base+0x1bec>
   2cc44:	ldr	r1, [r7, #48]	; 0x30
   2cc48:	mov	r0, sl
   2cc4c:	movw	r2, #57396	; 0xe034
   2cc50:	movt	r2, #4
   2cc54:	b	2ca80 <__flatcc_fb_build_schema@@Base+0x1780>
   2cc58:	mov	r0, sl
   2cc5c:	mov	r1, r7
   2cc60:	movw	r2, #57352	; 0xe008
   2cc64:	movt	r2, #4
   2cc68:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2cc6c:	b	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2cc70:	cmp	r0, #3
   2cc74:	bne	2ccf0 <__flatcc_fb_build_schema@@Base+0x19f0>
   2cc78:	str	ip, [sp, #8]
   2cc7c:	mov	r0, #5
   2cc80:	strh	r0, [r7, #56]	; 0x38
   2cc84:	mov	r0, #0
   2cc88:	str	r0, [r9]
   2cc8c:	str	r0, [r9, #4]
   2cc90:	ldr	r2, [lr, #40]	; 0x28
   2cc94:	mov	r0, sl
   2cc98:	mov	r1, lr
   2cc9c:	mov	r3, r9
   2cca0:	mov	r4, lr
   2cca4:	bl	2dff4 <__flatcc_fb_coerce_scalar_type@@Base>
   2cca8:	cmp	r0, #0
   2ccac:	bne	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2ccb0:	str	r4, [sp, #4]
   2ccb4:	ldr	r0, [sl, #212]	; 0xd4
   2ccb8:	cmp	r0, #0
   2ccbc:	beq	2ceec <__flatcc_fb_build_schema@@Base+0x1bec>
   2ccc0:	ldr	r0, [r7, #16]
   2ccc4:	add	r0, r0, #72	; 0x48
   2ccc8:	mov	r1, r9
   2cccc:	bl	2dc94 <__flatcc_fb_build_schema@@Base+0x2994>
   2ccd0:	cmp	r0, #0
   2ccd4:	bne	2ceec <__flatcc_fb_build_schema@@Base+0x1bec>
   2ccd8:	mov	r0, sl
   2ccdc:	mov	r1, r7
   2cce0:	movw	r2, #57492	; 0xe094
   2cce4:	movt	r2, #4
   2cce8:	ldr	r3, [sp, #4]
   2ccec:	b	2ce80 <__flatcc_fb_build_schema@@Base+0x1b80>
   2ccf0:	ldr	r6, [sp, #44]	; 0x2c
   2ccf4:	ldr	r4, [sp, #20]
   2ccf8:	movw	r9, #56665	; 0xdd59
   2ccfc:	movt	r9, #4
   2cd00:	ldr	r5, [sp, #40]	; 0x28
   2cd04:	cmp	r5, #0
   2cd08:	ldr	r0, [sp, #36]	; 0x24
   2cd0c:	bne	2cd7c <__flatcc_fb_build_schema@@Base+0x1a7c>
   2cd10:	cmp	r0, #0
   2cd14:	beq	2cd48 <__flatcc_fb_build_schema@@Base+0x1a48>
   2cd18:	mov	r1, r0
   2cd1c:	ldr	r0, [sp, #32]
   2cd20:	cmp	r0, #0
   2cd24:	mov	r0, r1
   2cd28:	bne	2cd48 <__flatcc_fb_build_schema@@Base+0x1a48>
   2cd2c:	ldr	r1, [r0, #4]
   2cd30:	mov	r0, sl
   2cd34:	movw	r2, #57728	; 0xe180
   2cd38:	movt	r2, #4
   2cd3c:	mov	r5, ip
   2cd40:	bl	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2cd44:	b	2cd74 <__flatcc_fb_build_schema@@Base+0x1a74>
   2cd48:	cmp	r0, #0
   2cd4c:	bne	2cdb4 <__flatcc_fb_build_schema@@Base+0x1ab4>
   2cd50:	ldr	r0, [sp, #32]
   2cd54:	cmp	r0, #0
   2cd58:	beq	2cdb4 <__flatcc_fb_build_schema@@Base+0x1ab4>
   2cd5c:	mov	r0, sl
   2cd60:	mov	r1, r7
   2cd64:	movw	r2, #57789	; 0xe1bd
   2cd68:	movt	r2, #4
   2cd6c:	mov	r5, ip
   2cd70:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2cd74:	mov	ip, r5
   2cd78:	mov	r5, #1
   2cd7c:	ldrb	r0, [r7, #72]	; 0x48
   2cd80:	tst	r0, #128	; 0x80
   2cd84:	beq	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2cd88:	ldr	r0, [sp, #12]
   2cd8c:	add	r0, r0, #1
   2cd90:	str	r0, [sp, #12]
   2cd94:	cmp	ip, #0
   2cd98:	bne	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2cd9c:	mov	r0, sl
   2cda0:	mov	r1, r7
   2cda4:	movw	r2, #58542	; 0xe4ae
   2cda8:	movt	r2, #4
   2cdac:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2cdb0:	b	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2cdb4:	ldr	r1, [sp, #36]	; 0x24
   2cdb8:	cmp	r1, #0
   2cdbc:	beq	2ce20 <__flatcc_fb_build_schema@@Base+0x1b20>
   2cdc0:	ldrh	r0, [r1, #16]
   2cdc4:	cmp	r0, #5
   2cdc8:	bne	2cf0c <__flatcc_fb_build_schema@@Base+0x1c0c>
   2cdcc:	ldrd	r0, [r1, #8]
   2cdd0:	ldr	r2, [sp, #24]
   2cdd4:	ldrd	r2, [r2]
   2cdd8:	subs	r2, r0, r2
   2cddc:	sbcs	r1, r1, r3
   2cde0:	bcs	2cf2c <__flatcc_fb_build_schema@@Base+0x1c2c>
   2cde4:	uxth	r0, r0
   2cde8:	mov	r1, #0
   2cdec:	ldr	r2, [sp, #28]
   2cdf0:	strd	r0, [r2]
   2cdf4:	ldr	r2, [sp, #52]	; 0x34
   2cdf8:	subs	r1, r2, r0
   2cdfc:	ldr	r3, [sp, #48]	; 0x30
   2ce00:	sbcs	r1, r3, #0
   2ce04:	mov	r1, #0
   2ce08:	movwcc	r1, #1
   2ce0c:	cmp	r1, #0
   2ce10:	movne	r2, r0
   2ce14:	str	r2, [sp, #52]	; 0x34
   2ce18:	movwne	r3, #0
   2ce1c:	str	r3, [sp, #48]	; 0x30
   2ce20:	mov	r5, #0
   2ce24:	ldr	r0, [sp, #32]
   2ce28:	cmp	r0, #0
   2ce2c:	beq	2cd7c <__flatcc_fb_build_schema@@Base+0x1a7c>
   2ce30:	ldr	r0, [sp, #28]
   2ce34:	ldr	r0, [r0]
   2ce38:	ldr	r1, [sp, #16]
   2ce3c:	ldrb	r1, [r1, r0]
   2ce40:	cmp	r1, #0
   2ce44:	beq	2cf50 <__flatcc_fb_build_schema@@Base+0x1c50>
   2ce48:	str	ip, [sp, #8]
   2ce4c:	cmp	r1, #2
   2ce50:	bne	2cf68 <__flatcc_fb_build_schema@@Base+0x1c68>
   2ce54:	ldr	r0, [sp, #36]	; 0x24
   2ce58:	ldr	r1, [r0, #4]
   2ce5c:	mov	r0, sl
   2ce60:	movw	r2, #57937	; 0xe251
   2ce64:	movt	r2, #4
   2ce68:	b	2d054 <__flatcc_fb_build_schema@@Base+0x1d54>
   2ce6c:	mov	r0, sl
   2ce70:	mov	r1, r7
   2ce74:	movw	r2, #57314	; 0xdfe2
   2ce78:	movt	r2, #4
   2ce7c:	mov	r3, lr
   2ce80:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2ce84:	mov	r0, #1
   2ce88:	strh	r0, [r7, #24]
   2ce8c:	ldr	r6, [sp, #44]	; 0x2c
   2ce90:	ldr	r4, [sp, #20]
   2ce94:	movw	r9, #56665	; 0xdd59
   2ce98:	movt	r9, #4
   2ce9c:	ldr	r5, [sp, #40]	; 0x28
   2cea0:	b	2c604 <__flatcc_fb_build_schema@@Base+0x1304>
   2cea4:	ldr	r2, [lr, #40]	; 0x28
   2cea8:	mov	r0, sl
   2ceac:	mov	r1, r7
   2ceb0:	mov	r3, r9
   2ceb4:	mov	r4, lr
   2ceb8:	bl	2dff4 <__flatcc_fb_coerce_scalar_type@@Base>
   2cebc:	cmp	r0, #0
   2cec0:	bne	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2cec4:	str	r4, [sp, #4]
   2cec8:	ldr	r0, [sl, #212]	; 0xd4
   2cecc:	cmp	r0, #0
   2ced0:	beq	2ceec <__flatcc_fb_build_schema@@Base+0x1bec>
   2ced4:	ldr	r0, [r7, #16]
   2ced8:	add	r0, r0, #72	; 0x48
   2cedc:	mov	r1, r9
   2cee0:	bl	2dc94 <__flatcc_fb_build_schema@@Base+0x2994>
   2cee4:	cmp	r0, #0
   2cee8:	beq	2d008 <__flatcc_fb_build_schema@@Base+0x1d08>
   2ceec:	ldr	r6, [sp, #44]	; 0x2c
   2cef0:	ldr	r4, [sp, #20]
   2cef4:	movw	r9, #56665	; 0xdd59
   2cef8:	movt	r9, #4
   2cefc:	ldr	r5, [sp, #40]	; 0x28
   2cf00:	ldr	ip, [sp, #8]
   2cf04:	ldr	lr, [sp, #4]
   2cf08:	b	2cd04 <__flatcc_fb_build_schema@@Base+0x1a04>
   2cf0c:	str	ip, [sp, #8]
   2cf10:	ldr	r1, [r1, #4]
   2cf14:	cmp	r0, #4
   2cf18:	bne	2cf40 <__flatcc_fb_build_schema@@Base+0x1c40>
   2cf1c:	mov	r0, sl
   2cf20:	movw	r2, #57877	; 0xe215
   2cf24:	movt	r2, #4
   2cf28:	b	2d054 <__flatcc_fb_build_schema@@Base+0x1d54>
   2cf2c:	mov	r0, sl
   2cf30:	mov	r1, r7
   2cf34:	movw	r2, #57847	; 0xe1f7
   2cf38:	movt	r2, #4
   2cf3c:	b	2cd6c <__flatcc_fb_build_schema@@Base+0x1a6c>
   2cf40:	mov	r0, sl
   2cf44:	movw	r2, #57909	; 0xe235
   2cf48:	movt	r2, #4
   2cf4c:	b	2d054 <__flatcc_fb_build_schema@@Base+0x1d54>
   2cf50:	ldr	r1, [sp, #16]
   2cf54:	mov	r2, #1
   2cf58:	strb	r2, [r1, r0]
   2cf5c:	cmp	lr, #0
   2cf60:	bne	2cf94 <__flatcc_fb_build_schema@@Base+0x1c94>
   2cf64:	b	2cd7c <__flatcc_fb_build_schema@@Base+0x1a7c>
   2cf68:	ldr	r0, [sp, #36]	; 0x24
   2cf6c:	ldr	r1, [r0, #4]
   2cf70:	mov	r0, sl
   2cf74:	movw	r2, #57991	; 0xe287
   2cf78:	movt	r2, #4
   2cf7c:	str	lr, [sp, #4]
   2cf80:	bl	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2cf84:	ldr	lr, [sp, #4]
   2cf88:	ldr	ip, [sp, #8]
   2cf8c:	cmp	lr, #0
   2cf90:	beq	2cd7c <__flatcc_fb_build_schema@@Base+0x1a7c>
   2cf94:	ldrh	r0, [lr, #8]
   2cf98:	cmp	r0, #4
   2cf9c:	bne	2cd7c <__flatcc_fb_build_schema@@Base+0x1a7c>
   2cfa0:	str	ip, [sp, #8]
   2cfa4:	ldrh	r0, [r7, #24]
   2cfa8:	ldr	r1, [sp, #28]
   2cfac:	ldrd	r2, [r1]
   2cfb0:	rsbs	r1, r2, #1
   2cfb4:	rscs	r1, r3, #0
   2cfb8:	bcc	2cfd4 <__flatcc_fb_build_schema@@Base+0x1cd4>
   2cfbc:	cmp	r0, #11
   2cfc0:	movw	r2, #58119	; 0xe307
   2cfc4:	movt	r2, #4
   2cfc8:	movw	r0, #58039	; 0xe2b7
   2cfcc:	movt	r0, #4
   2cfd0:	b	2d044 <__flatcc_fb_build_schema@@Base+0x1d44>
   2cfd4:	sub	r1, r2, #1
   2cfd8:	ldr	r2, [sp, #16]
   2cfdc:	ldrb	r2, [r2, r1]
   2cfe0:	cmp	r2, #0
   2cfe4:	beq	2d020 <__flatcc_fb_build_schema@@Base+0x1d20>
   2cfe8:	cmp	r2, #2
   2cfec:	bne	2d030 <__flatcc_fb_build_schema@@Base+0x1d30>
   2cff0:	cmp	r0, #11
   2cff4:	movw	r2, #58289	; 0xe3b1
   2cff8:	movt	r2, #4
   2cffc:	movw	r0, #58192	; 0xe350
   2d000:	movt	r0, #4
   2d004:	b	2d044 <__flatcc_fb_build_schema@@Base+0x1d44>
   2d008:	mov	r0, sl
   2d00c:	mov	r1, r7
   2d010:	movw	r2, #57444	; 0xe064
   2d014:	movt	r2, #4
   2d018:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d01c:	b	2ce84 <__flatcc_fb_build_schema@@Base+0x1b84>
   2d020:	ldr	r0, [sp, #16]
   2d024:	mov	r2, #2
   2d028:	strb	r2, [r0, r1]
   2d02c:	b	2d05c <__flatcc_fb_build_schema@@Base+0x1d5c>
   2d030:	cmp	r0, #11
   2d034:	movw	r2, #58464	; 0xe460
   2d038:	movt	r2, #4
   2d03c:	movw	r0, #58379	; 0xe40b
   2d040:	movt	r0, #4
   2d044:	moveq	r2, r0
   2d048:	ldr	r0, [sp, #36]	; 0x24
   2d04c:	ldr	r1, [r0, #4]
   2d050:	mov	r0, sl
   2d054:	bl	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2d058:	mov	r5, #1
   2d05c:	ldr	ip, [sp, #8]
   2d060:	b	2cd7c <__flatcc_fb_build_schema@@Base+0x1a7c>
   2d064:	mov	r0, #0
   2d068:	cmp	r5, #0
   2d06c:	ldr	r2, [sp, #12]
   2d070:	ldr	r9, [sp, #16]
   2d074:	bne	2d0b8 <__flatcc_fb_build_schema@@Base+0x1db8>
   2d078:	b	2d0a4 <__flatcc_fb_build_schema@@Base+0x1da4>
   2d07c:	mov	r2, #0
   2d080:	mov	r0, #0
   2d084:	str	r0, [sp, #52]	; 0x34
   2d088:	mov	r0, #0
   2d08c:	str	r0, [sp, #48]	; 0x30
   2d090:	mov	r0, #0
   2d094:	str	r0, [sp, #32]
   2d098:	mov	r0, #0
   2d09c:	str	r0, [sp, #56]	; 0x38
   2d0a0:	mov	r6, #0
   2d0a4:	ldr	r0, [sp, #56]	; 0x38
   2d0a8:	str	r0, [r8, #96]	; 0x60
   2d0ac:	str	r6, [r8, #100]	; 0x64
   2d0b0:	mov	r0, #1
   2d0b4:	mov	r5, #0
   2d0b8:	ldr	r1, [sp, #52]	; 0x34
   2d0bc:	ldr	r3, [sp, #56]	; 0x38
   2d0c0:	subs	r1, r1, r3
   2d0c4:	ldr	r1, [sp, #48]	; 0x30
   2d0c8:	sbcs	r1, r1, r6
   2d0cc:	bcc	2d1c4 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2d0d0:	ldr	r1, [sp, #56]	; 0x38
   2d0d4:	orrs	r1, r1, r6
   2d0d8:	beq	2d1c4 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2d0dc:	ldr	r1, [sp, #32]
   2d0e0:	cmp	r1, #0
   2d0e4:	cmpne	r0, #0
   2d0e8:	beq	2d1c4 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2d0ec:	ldr	r0, [sp, #52]	; 0x34
   2d0f0:	ldr	r1, [sp, #48]	; 0x30
   2d0f4:	orrs	r0, r0, r1
   2d0f8:	mov	r5, #1
   2d0fc:	beq	2d1c4 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2d100:	str	r2, [sp, #12]
   2d104:	mov	r7, r8
   2d108:	mov	r6, #0
   2d10c:	mov	r4, #10
   2d110:	add	r8, sp, #108	; 0x6c
   2d114:	mov	r5, #0
   2d118:	b	2d138 <__flatcc_fb_build_schema@@Base+0x1e38>
   2d11c:	adds	r6, r6, #1
   2d120:	adc	r5, r5, #0
   2d124:	ldr	r0, [sp, #52]	; 0x34
   2d128:	subs	r0, r6, r0
   2d12c:	ldr	r0, [sp, #48]	; 0x30
   2d130:	sbcs	r0, r5, r0
   2d134:	bcs	2d19c <__flatcc_fb_build_schema@@Base+0x1e9c>
   2d138:	ldrb	r0, [r9, r6]
   2d13c:	cmp	r0, #0
   2d140:	bne	2d11c <__flatcc_fb_build_schema@@Base+0x1e1c>
   2d144:	cmp	r4, #0
   2d148:	beq	2d1a4 <__flatcc_fb_build_schema@@Base+0x1ea4>
   2d14c:	mov	r0, r8
   2d150:	movw	r1, #58613	; 0xe4f5
   2d154:	movt	r1, #4
   2d158:	mov	r2, r6
   2d15c:	mov	r3, r5
   2d160:	bl	14930 <sprintf@plt>
   2d164:	mov	r0, sl
   2d168:	mov	r1, r7
   2d16c:	mov	r2, r8
   2d170:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d174:	sub	r4, r4, #1
   2d178:	b	2d11c <__flatcc_fb_build_schema@@Base+0x1e1c>
   2d17c:	movw	r2, #56699	; 0xdd7b
   2d180:	movt	r2, #4
   2d184:	mov	r0, sl
   2d188:	mov	r1, r7
   2d18c:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d190:	mvn	r0, #0
   2d194:	sub	sp, fp, #28
   2d198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d19c:	mov	r8, r7
   2d1a0:	b	2d1bc <__flatcc_fb_build_schema@@Base+0x1ebc>
   2d1a4:	movw	r2, #58591	; 0xe4df
   2d1a8:	movt	r2, #4
   2d1ac:	mov	r0, sl
   2d1b0:	mov	r8, r7
   2d1b4:	mov	r1, r7
   2d1b8:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d1bc:	ldr	r2, [sp, #12]
   2d1c0:	mov	r5, #1
   2d1c4:	mov	r0, #0
   2d1c8:	cmp	r2, #0
   2d1cc:	beq	2d208 <__flatcc_fb_build_schema@@Base+0x1f08>
   2d1d0:	ldrh	r1, [r8, #10]
   2d1d4:	orr	r1, r1, #8
   2d1d8:	strh	r1, [r8, #10]
   2d1dc:	cmp	r2, #2
   2d1e0:	blt	2d208 <__flatcc_fb_build_schema@@Base+0x1f08>
   2d1e4:	ldr	r1, [sl, #156]	; 0x9c
   2d1e8:	cmp	r1, #0
   2d1ec:	bne	2d208 <__flatcc_fb_build_schema@@Base+0x1f08>
   2d1f0:	movw	r2, #56011	; 0xdacb
   2d1f4:	movt	r2, #4
   2d1f8:	mov	r0, sl
   2d1fc:	mov	r1, r8
   2d200:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d204:	mvn	r0, #0
   2d208:	cmp	r5, #0
   2d20c:	mvnne	r0, #0
   2d210:	sub	sp, fp, #28
   2d214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d218:	movw	r0, #46528	; 0xb5c0
   2d21c:	movt	r0, #3
   2d220:	movw	r1, #53769	; 0xd209
   2d224:	movt	r1, #4
   2d228:	movw	r3, #56595	; 0xdd13
   2d22c:	movt	r3, #4
   2d230:	movw	r2, #769	; 0x301
   2d234:	bl	14984 <__assert_fail@plt>
   2d238:	movw	r0, #56650	; 0xdd4a
   2d23c:	movt	r0, #4
   2d240:	movw	r1, #53769	; 0xd209
   2d244:	movt	r1, #4
   2d248:	movw	r3, #56595	; 0xdd13
   2d24c:	movt	r3, #4
   2d250:	movw	r2, #770	; 0x302
   2d254:	bl	14984 <__assert_fail@plt>
   2d258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d25c:	add	fp, sp, #28
   2d260:	sub	sp, sp, #52	; 0x34
   2d264:	mov	r4, r0
   2d268:	ldrh	r0, [r1, #8]
   2d26c:	cmp	r0, #2
   2d270:	bne	2d46c <__flatcc_fb_build_schema@@Base+0x216c>
   2d274:	mov	r5, r1
   2d278:	ldrh	r0, [r1, #48]	; 0x30
   2d27c:	cmp	r0, #0
   2d280:	bne	2d48c <__flatcc_fb_build_schema@@Base+0x218c>
   2d284:	ldr	r0, [r5, #28]
   2d288:	cmp	r0, #0
   2d28c:	beq	2d2a4 <__flatcc_fb_build_schema@@Base+0x1fa4>
   2d290:	movw	r2, #59090	; 0xe6d2
   2d294:	movt	r2, #4
   2d298:	mov	r0, r4
   2d29c:	mov	r1, r5
   2d2a0:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d2a4:	ldr	r6, [r5, #20]
   2d2a8:	cmp	r6, #0
   2d2ac:	beq	2d440 <__flatcc_fb_build_schema@@Base+0x2140>
   2d2b0:	add	r7, r5, #56	; 0x38
   2d2b4:	mov	sl, #1
   2d2b8:	movw	r8, #59158	; 0xe716
   2d2bc:	movt	r8, #4
   2d2c0:	movw	r9, #59126	; 0xe6f6
   2d2c4:	movt	r9, #4
   2d2c8:	b	2d2ec <__flatcc_fb_build_schema@@Base+0x1fec>
   2d2cc:	mov	r3, r0
   2d2d0:	mov	r0, r4
   2d2d4:	mov	r1, r6
   2d2d8:	mov	r2, r9
   2d2dc:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2d2e0:	ldr	r6, [r6]
   2d2e4:	cmp	r6, #0
   2d2e8:	beq	2d440 <__flatcc_fb_build_schema@@Base+0x2140>
   2d2ec:	mov	r0, r7
   2d2f0:	mov	r1, r6
   2d2f4:	bl	2b75c <__flatcc_fb_build_schema@@Base+0x45c>
   2d2f8:	cmp	r0, #0
   2d2fc:	bne	2d2cc <__flatcc_fb_build_schema@@Base+0x1fcc>
   2d300:	ldrh	r0, [r6, #8]
   2d304:	cmp	r0, #5
   2d308:	bne	2d44c <__flatcc_fb_build_schema@@Base+0x214c>
   2d30c:	ldrh	r0, [r6, #56]	; 0x38
   2d310:	cmp	r0, #0
   2d314:	movne	r0, r4
   2d318:	movne	r1, r6
   2d31c:	movne	r2, r8
   2d320:	blne	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d324:	ldrh	r0, [r6, #24]
   2d328:	cmp	r0, #1
   2d32c:	beq	2d2e0 <__flatcc_fb_build_schema@@Base+0x1fe0>
   2d330:	cmp	r0, #12
   2d334:	beq	2d34c <__flatcc_fb_build_schema@@Base+0x204c>
   2d338:	mov	r0, r4
   2d33c:	mov	r1, r6
   2d340:	movw	r2, #59222	; 0xe756
   2d344:	movt	r2, #4
   2d348:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d34c:	ldr	r2, [r6, #32]
   2d350:	ldr	r1, [r5, #12]
   2d354:	mov	r0, r4
   2d358:	bl	2d6d8 <__flatcc_fb_build_schema@@Base+0x23d8>
   2d35c:	cmp	r0, #0
   2d360:	beq	2d390 <__flatcc_fb_build_schema@@Base+0x2090>
   2d364:	mov	r3, r0
   2d368:	ldrh	r0, [r0, #8]
   2d36c:	cmp	r0, #0
   2d370:	beq	2d3b0 <__flatcc_fb_build_schema@@Base+0x20b0>
   2d374:	mov	r0, r4
   2d378:	mov	r1, r6
   2d37c:	movw	r2, #59333	; 0xe7c5
   2d380:	movt	r2, #4
   2d384:	bl	2b764 <__flatcc_fb_build_schema@@Base+0x464>
   2d388:	strh	sl, [r6, #24]
   2d38c:	b	2d2e0 <__flatcc_fb_build_schema@@Base+0x1fe0>
   2d390:	ldr	r1, [r6, #32]
   2d394:	mov	r0, r4
   2d398:	movw	r2, #59283	; 0xe793
   2d39c:	movt	r2, #4
   2d3a0:	mov	r3, r6
   2d3a4:	bl	2767c <error_ref_sym@@Base>
   2d3a8:	strh	sl, [r6, #24]
   2d3ac:	b	2d2e0 <__flatcc_fb_build_schema@@Base+0x1fe0>
   2d3b0:	str	r3, [r6, #32]
   2d3b4:	mov	r0, #14
   2d3b8:	strh	r0, [r6, #40]	; 0x28
   2d3bc:	ldr	r2, [r6, #16]
   2d3c0:	ldr	r1, [r5, #12]
   2d3c4:	mov	r0, r4
   2d3c8:	bl	2d6d8 <__flatcc_fb_build_schema@@Base+0x23d8>
   2d3cc:	cmp	r0, #0
   2d3d0:	beq	2d3f8 <__flatcc_fb_build_schema@@Base+0x20f8>
   2d3d4:	mov	r3, r0
   2d3d8:	ldrh	r0, [r0, #8]
   2d3dc:	cmp	r0, #0
   2d3e0:	beq	2d40c <__flatcc_fb_build_schema@@Base+0x210c>
   2d3e4:	mov	r0, r4
   2d3e8:	mov	r1, r6
   2d3ec:	movw	r2, #59438	; 0xe82e
   2d3f0:	movt	r2, #4
   2d3f4:	b	2d384 <__flatcc_fb_build_schema@@Base+0x2084>
   2d3f8:	ldr	r1, [r6, #16]
   2d3fc:	mov	r0, r4
   2d400:	movw	r2, #59387	; 0xe7fb
   2d404:	movt	r2, #4
   2d408:	b	2d3a0 <__flatcc_fb_build_schema@@Base+0x20a0>
   2d40c:	mov	r0, #0
   2d410:	str	r0, [r6, #88]	; 0x58
   2d414:	str	r0, [r6, #92]	; 0x5c
   2d418:	str	r3, [r6, #16]
   2d41c:	mov	r0, #14
   2d420:	strh	r0, [r6, #24]
   2d424:	ldr	r1, [r6, #64]	; 0x40
   2d428:	mov	r0, r4
   2d42c:	mov	r2, #4
   2d430:	add	r3, sp, #4
   2d434:	bl	2d808 <__flatcc_fb_build_schema@@Base+0x2508>
   2d438:	strh	r0, [r6, #72]	; 0x48
   2d43c:	b	2d2e0 <__flatcc_fb_build_schema@@Base+0x1fe0>
   2d440:	mov	r0, #0
   2d444:	sub	sp, fp, #28
   2d448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d44c:	movw	r2, #56699	; 0xdd7b
   2d450:	movt	r2, #4
   2d454:	mov	r0, r4
   2d458:	mov	r1, r6
   2d45c:	bl	2c1e4 <__flatcc_fb_build_schema@@Base+0xee4>
   2d460:	mvn	r0, #0
   2d464:	sub	sp, fp, #28
   2d468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d46c:	movw	r0, #58992	; 0xe670
   2d470:	movt	r0, #4
   2d474:	movw	r1, #53769	; 0xd209
   2d478:	movt	r1, #4
   2d47c:	movw	r3, #59029	; 0xe695
   2d480:	movt	r3, #4
   2d484:	movw	r2, #1128	; 0x468
   2d488:	bl	14984 <__assert_fail@plt>
   2d48c:	movw	r0, #56650	; 0xdd4a
   2d490:	movt	r0, #4
   2d494:	movw	r1, #53769	; 0xd209
   2d498:	movt	r1, #4
   2d49c:	movw	r3, #59029	; 0xe695
   2d4a0:	movt	r3, #4
   2d4a4:	movw	r2, #1129	; 0x469
   2d4a8:	bl	14984 <__assert_fail@plt>
   2d4ac:	ldr	r1, [r0]
   2d4b0:	cmp	r1, #0
   2d4b4:	moveq	r2, #0
   2d4b8:	streq	r2, [r0]
   2d4bc:	bxeq	lr
   2d4c0:	mov	r3, #0
   2d4c4:	mov	r2, r1
   2d4c8:	ldr	r1, [r1, #120]	; 0x78
   2d4cc:	str	r3, [r2, #120]	; 0x78
   2d4d0:	cmp	r1, #0
   2d4d4:	mov	r3, r2
   2d4d8:	bne	2d4c4 <__flatcc_fb_build_schema@@Base+0x21c4>
   2d4dc:	str	r2, [r0]
   2d4e0:	bx	lr
   2d4e4:	sub	sp, sp, #4
   2d4e8:	mov	r1, #0
   2d4ec:	str	r1, [sp]
   2d4f0:	mov	r2, sp
   2d4f4:	cmp	r0, #0
   2d4f8:	beq	2d510 <__flatcc_fb_build_schema@@Base+0x2210>
   2d4fc:	str	r0, [r2]
   2d500:	mov	r2, r0
   2d504:	ldr	r0, [r2], #108	; 0x6c
   2d508:	cmp	r0, #0
   2d50c:	bne	2d4fc <__flatcc_fb_build_schema@@Base+0x21fc>
   2d510:	str	r1, [r2]
   2d514:	pop	{r0}		; (ldr r0, [sp], #4)
   2d518:	bx	lr
   2d51c:	push	{r4, r5, r6, r7, fp, lr}
   2d520:	add	fp, sp, #16
   2d524:	sub	sp, sp, #80	; 0x50
   2d528:	vmov.i32	q8, #0	; 0x00000000
   2d52c:	mov	r7, #32
   2d530:	add	r2, sp, #40	; 0x28
   2d534:	mov	r3, r2
   2d538:	vst1.64	{d16-d17}, [r3], r7
   2d53c:	mov	r6, #0
   2d540:	str	r6, [r3]
   2d544:	add	r3, r2, #16
   2d548:	vst1.64	{d16-d17}, [r3]
   2d54c:	mov	r4, sp
   2d550:	add	r5, r4, #16
   2d554:	vst1.64	{d16-d17}, [r5]
   2d558:	mov	r3, r4
   2d55c:	vst1.64	{d16-d17}, [r3], r7
   2d560:	str	r6, [r3]
   2d564:	cmp	r1, #0
   2d568:	beq	2d65c <__flatcc_fb_build_schema@@Base+0x235c>
   2d56c:	movw	ip, #65535	; 0xffff
   2d570:	mov	lr, #1
   2d574:	movw	r3, #34432	; 0x8680
   2d578:	mov	r5, r1
   2d57c:	b	2d59c <__flatcc_fb_build_schema@@Base+0x229c>
   2d580:	add	r7, r2, r6, lsl #2
   2d584:	str	r5, [r7]
   2d588:	add	r7, r5, #108	; 0x6c
   2d58c:	str	r7, [r4, r6, lsl #2]
   2d590:	ldr	r5, [r5]
   2d594:	cmp	r5, #0
   2d598:	beq	2d65c <__flatcc_fb_build_schema@@Base+0x235c>
   2d59c:	ldrh	r6, [r5, #24]
   2d5a0:	cmp	r6, #15
   2d5a4:	bhi	2d630 <__flatcc_fb_build_schema@@Base+0x2330>
   2d5a8:	tst	r3, lr, lsl r6
   2d5ac:	beq	2d5f0 <__flatcc_fb_build_schema@@Base+0x22f0>
   2d5b0:	ldr	r6, [r0, #192]	; 0xc0
   2d5b4:	tst	r6, ip
   2d5b8:	beq	2d63c <__flatcc_fb_build_schema@@Base+0x233c>
   2d5bc:	uxth	r6, r6
   2d5c0:	lsr	r6, r6, #1
   2d5c4:	clz	r6, r6
   2d5c8:	rsb	r6, r6, #32
   2d5cc:	uxth	r7, r6
   2d5d0:	cmp	r7, #7
   2d5d4:	movcs	r6, #7
   2d5d8:	uxth	r6, r6
   2d5dc:	ldr	r7, [r2, r6, lsl #2]
   2d5e0:	cmp	r7, #0
   2d5e4:	beq	2d580 <__flatcc_fb_build_schema@@Base+0x2280>
   2d5e8:	ldr	r7, [r4, r6, lsl #2]
   2d5ec:	b	2d584 <__flatcc_fb_build_schema@@Base+0x2284>
   2d5f0:	cmp	r6, #14
   2d5f4:	bne	2d628 <__flatcc_fb_build_schema@@Base+0x2328>
   2d5f8:	ldr	r6, [r5, #16]
   2d5fc:	ldrh	r7, [r6, #8]
   2d600:	cmp	r7, #1
   2d604:	beq	2d618 <__flatcc_fb_build_schema@@Base+0x2318>
   2d608:	cmp	r7, #4
   2d60c:	beq	2d5b0 <__flatcc_fb_build_schema@@Base+0x22b0>
   2d610:	cmp	r7, #3
   2d614:	bne	2d5b0 <__flatcc_fb_build_schema@@Base+0x22b0>
   2d618:	ldrh	r6, [r6, #104]	; 0x68
   2d61c:	tst	r6, ip
   2d620:	bne	2d5bc <__flatcc_fb_build_schema@@Base+0x22bc>
   2d624:	b	2d63c <__flatcc_fb_build_schema@@Base+0x233c>
   2d628:	cmp	r6, #1
   2d62c:	beq	2d6bc <__flatcc_fb_build_schema@@Base+0x23bc>
   2d630:	ldrh	r6, [r5, #74]	; 0x4a
   2d634:	tst	r6, ip
   2d638:	bne	2d5bc <__flatcc_fb_build_schema@@Base+0x22bc>
   2d63c:	movw	r0, #59493	; 0xe865
   2d640:	movt	r0, #4
   2d644:	movw	r1, #53769	; 0xd209
   2d648:	movt	r1, #4
   2d64c:	movw	r3, #59499	; 0xe86b
   2d650:	movt	r3, #4
   2d654:	movw	r2, #1521	; 0x5f1
   2d658:	bl	14984 <__assert_fail@plt>
   2d65c:	add	r0, r2, #32
   2d660:	str	r0, [sp, #32]
   2d664:	mov	r0, #8
   2d668:	b	2d688 <__flatcc_fb_build_schema@@Base+0x2388>
   2d66c:	mov	r0, #0
   2d670:	ldr	r1, [r4, r1, lsl #2]
   2d674:	uxth	r3, r0
   2d678:	ldr	r7, [r2, r3, lsl #2]
   2d67c:	str	r7, [r1]
   2d680:	cmp	r3, #0
   2d684:	beq	2d6b0 <__flatcc_fb_build_schema@@Base+0x23b0>
   2d688:	uxth	r1, r0
   2d68c:	mov	r0, r1
   2d690:	cmp	r0, #0
   2d694:	beq	2d66c <__flatcc_fb_build_schema@@Base+0x236c>
   2d698:	sub	r0, r0, #1
   2d69c:	uxth	r3, r0
   2d6a0:	ldr	r3, [r2, r3, lsl #2]
   2d6a4:	cmp	r3, #0
   2d6a8:	beq	2d690 <__flatcc_fb_build_schema@@Base+0x2390>
   2d6ac:	b	2d670 <__flatcc_fb_build_schema@@Base+0x2370>
   2d6b0:	ldr	r0, [sp, #72]	; 0x48
   2d6b4:	sub	sp, fp, #16
   2d6b8:	pop	{r4, r5, r6, r7, fp, pc}
   2d6bc:	mov	r0, r1
   2d6c0:	bl	2d4e4 <__flatcc_fb_build_schema@@Base+0x21e4>
   2d6c4:	sub	sp, fp, #16
   2d6c8:	pop	{r4, r5, r6, r7, fp, pc}
   2d6cc:	mov	r2, r1
   2d6d0:	mov	r1, #0
   2d6d4:	b	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2d6d8:	mov	r3, #0
   2d6dc:	b	2debc <__flatcc_fb_build_schema@@Base+0x2bbc>
   2d6e0:	mov	r3, #0
   2d6e4:	b	2767c <error_ref_sym@@Base>
   2d6e8:	cmp	r2, #0
   2d6ec:	bxeq	lr
   2d6f0:	movw	ip, #403	; 0x193
   2d6f4:	movt	ip, #256	; 0x100
   2d6f8:	ldrb	r3, [r1], #1
   2d6fc:	eor	r0, r0, r3
   2d700:	mul	r0, r0, ip
   2d704:	subs	r2, r2, #1
   2d708:	bne	2d6f8 <__flatcc_fb_build_schema@@Base+0x23f8>
   2d70c:	bx	lr
   2d710:	push	{fp, lr}
   2d714:	mov	fp, sp
   2d718:	sub	sp, sp, #8
   2d71c:	mov	ip, #0
   2d720:	str	ip, [sp]
   2d724:	str	ip, [sp, #4]
   2d728:	bl	274ec <__flatcc_error_report@@Base>
   2d72c:	mov	sp, fp
   2d730:	pop	{fp, pc}
   2d734:	push	{r4, r5, r6, sl, fp, lr}
   2d738:	add	fp, sp, #16
   2d73c:	mov	r4, r0
   2d740:	ldr	r1, [r0, #44]	; 0x2c
   2d744:	ldr	r0, [r0, #52]	; 0x34
   2d748:	add	r2, r0, #32
   2d74c:	cmp	r2, r1
   2d750:	bls	2d788 <__flatcc_fb_build_schema@@Base+0x2488>
   2d754:	mov	r6, #65536	; 0x10000
   2d758:	mov	r0, #65536	; 0x10000
   2d75c:	mov	r1, #1
   2d760:	bl	147d4 <calloc@plt>
   2d764:	mov	r5, r0
   2d768:	bl	2d798 <__flatcc_fb_build_schema@@Base+0x2498>
   2d76c:	ldr	r0, [r4, #48]	; 0x30
   2d770:	mov	r1, r5
   2d774:	str	r0, [r1], r6
   2d778:	add	r0, r5, #16
   2d77c:	str	r1, [r4, #44]	; 0x2c
   2d780:	str	r5, [r4, #48]	; 0x30
   2d784:	str	r0, [r4, #52]	; 0x34
   2d788:	ldr	r1, [r4, #52]	; 0x34
   2d78c:	add	r1, r1, #32
   2d790:	str	r1, [r4, #52]	; 0x34
   2d794:	pop	{r4, r5, r6, sl, fp, pc}
   2d798:	cmp	r0, #0
   2d79c:	bxne	lr
   2d7a0:	push	{fp, lr}
   2d7a4:	mov	fp, sp
   2d7a8:	movw	r0, #4272	; 0x10b0
   2d7ac:	movt	r0, #6
   2d7b0:	ldr	r3, [r0]
   2d7b4:	movw	r0, #20439	; 0x4fd7
   2d7b8:	movt	r0, #3
   2d7bc:	mov	r1, #34	; 0x22
   2d7c0:	mov	r2, #1
   2d7c4:	bl	14858 <fwrite@plt>
   2d7c8:	mov	r0, #1
   2d7cc:	bl	148a0 <exit@plt>
   2d7d0:	ldr	r0, [r0, #16]
   2d7d4:	movw	r1, #999	; 0x3e7
   2d7d8:	add	r0, r0, r1
   2d7dc:	cmp	r0, #27
   2d7e0:	movhi	r0, #0
   2d7e4:	bxhi	lr
   2d7e8:	movw	r1, #59660	; 0xe90c
   2d7ec:	movt	r1, #4
   2d7f0:	ldr	r0, [r1, r0, lsl #2]
   2d7f4:	bx	lr
   2d7f8:	movw	r1, #59612	; 0xe8dc
   2d7fc:	movt	r1, #4
   2d800:	ldr	r0, [r1, r0, lsl #2]
   2d804:	bx	lr
   2d808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d80c:	add	fp, sp, #28
   2d810:	sub	sp, sp, #4
   2d814:	mov	r5, r1
   2d818:	mov	r4, r0
   2d81c:	vmov.i32	q8, #0	; 0x00000000
   2d820:	mov	r0, #32
   2d824:	mov	r1, r3
   2d828:	vst1.32	{d16-d17}, [r1], r0
   2d82c:	vst1.32	{d16-d17}, [r1]
   2d830:	add	r0, r3, #16
   2d834:	vst1.32	{d16-d17}, [r0]
   2d838:	cmp	r5, #0
   2d83c:	beq	2d9b0 <__flatcc_fb_build_schema@@Base+0x26b0>
   2d840:	mov	r6, r3
   2d844:	mov	r7, r2
   2d848:	mov	r9, #0
   2d84c:	mvn	sl, #98	; 0x62
   2d850:	mov	r8, #1
   2d854:	b	2d880 <__flatcc_fb_build_schema@@Base+0x2580>
   2d858:	ldr	r1, [r5, #4]
   2d85c:	mov	r0, r4
   2d860:	movw	r2, #55245	; 0xd7cd
   2d864:	movt	r2, #4
   2d868:	bl	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2d86c:	ldr	r5, [r5]
   2d870:	cmp	sl, #0
   2d874:	addne	sl, sl, #1
   2d878:	cmpne	r5, #0
   2d87c:	beq	2d990 <__flatcc_fb_build_schema@@Base+0x2690>
   2d880:	ldr	r1, [r5, #4]
   2d884:	ldr	r0, [r4, #412]	; 0x19c
   2d888:	add	r0, r0, #16
   2d88c:	bl	2d9dc <__flatcc_fb_build_schema@@Base+0x26dc>
   2d890:	cmp	r0, #0
   2d894:	beq	2d858 <__flatcc_fb_build_schema@@Base+0x2558>
   2d898:	ldr	r0, [r0, #24]
   2d89c:	cmp	r0, #0
   2d8a0:	beq	2d86c <__flatcc_fb_build_schema@@Base+0x256c>
   2d8a4:	tst	r7, r8, lsl r0
   2d8a8:	beq	2d8d4 <__flatcc_fb_build_schema@@Base+0x25d4>
   2d8ac:	lsl	r1, r8, r0
   2d8b0:	ldr	r2, [r6, r0, lsl #2]
   2d8b4:	orr	r9, r9, r1
   2d8b8:	cmp	r2, #0
   2d8bc:	beq	2d8e8 <__flatcc_fb_build_schema@@Base+0x25e8>
   2d8c0:	ldr	r1, [r5, #4]
   2d8c4:	mov	r0, r4
   2d8c8:	movw	r2, #55321	; 0xd819
   2d8cc:	movt	r2, #4
   2d8d0:	b	2d868 <__flatcc_fb_build_schema@@Base+0x2568>
   2d8d4:	ldr	r1, [r5, #4]
   2d8d8:	mov	r0, r4
   2d8dc:	movw	r2, #55276	; 0xd7ec
   2d8e0:	movt	r2, #4
   2d8e4:	b	2d868 <__flatcc_fb_build_schema@@Base+0x2568>
   2d8e8:	str	r5, [r6, r0, lsl #2]
   2d8ec:	movw	r1, #3500	; 0xdac
   2d8f0:	tst	r8, r1, lsr r0
   2d8f4:	beq	2d918 <__flatcc_fb_build_schema@@Base+0x2618>
   2d8f8:	ldrh	r1, [r5, #16]
   2d8fc:	cmp	r1, #0
   2d900:	beq	2d918 <__flatcc_fb_build_schema@@Base+0x2618>
   2d904:	ldr	r1, [r5, #4]
   2d908:	mov	r0, r4
   2d90c:	movw	r2, #55359	; 0xd83f
   2d910:	movt	r2, #4
   2d914:	b	2d868 <__flatcc_fb_build_schema@@Base+0x2568>
   2d918:	sub	r0, r0, #1
   2d91c:	cmp	r0, #8
   2d920:	bhi	2d86c <__flatcc_fb_build_schema@@Base+0x256c>
   2d924:	add	r1, pc, #0
   2d928:	ldr	pc, [r1, r0, lsl #2]
   2d92c:	andeq	sp, r2, r0, asr r9
   2d930:	andeq	sp, r2, ip, ror #16
   2d934:	andeq	sp, r2, ip, ror #16
   2d938:	andeq	sp, r2, r0, asr r9
   2d93c:	andeq	sp, r2, ip, ror #16
   2d940:	andeq	sp, r2, r0, ror r9
   2d944:	andeq	sp, r2, ip, ror #16
   2d948:	andeq	sp, r2, ip, ror #16
   2d94c:	andeq	sp, r2, r0, ror r9
   2d950:	ldrh	r0, [r5, #16]
   2d954:	cmp	r0, #5
   2d958:	beq	2d86c <__flatcc_fb_build_schema@@Base+0x256c>
   2d95c:	ldr	r1, [r5, #4]
   2d960:	mov	r0, r4
   2d964:	movw	r2, #55432	; 0xd888
   2d968:	movt	r2, #4
   2d96c:	b	2d868 <__flatcc_fb_build_schema@@Base+0x2568>
   2d970:	ldrh	r0, [r5, #16]
   2d974:	cmp	r0, #2
   2d978:	beq	2d86c <__flatcc_fb_build_schema@@Base+0x256c>
   2d97c:	ldr	r1, [r5, #4]
   2d980:	mov	r0, r4
   2d984:	movw	r2, #55399	; 0xd867
   2d988:	movt	r2, #4
   2d98c:	b	2d868 <__flatcc_fb_build_schema@@Base+0x2568>
   2d990:	cmp	r5, #0
   2d994:	beq	2d9b4 <__flatcc_fb_build_schema@@Base+0x26b4>
   2d998:	ldr	r1, [r5, #4]
   2d99c:	movw	r2, #55476	; 0xd8b4
   2d9a0:	movt	r2, #4
   2d9a4:	mov	r0, r4
   2d9a8:	bl	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2d9ac:	b	2d9b4 <__flatcc_fb_build_schema@@Base+0x26b4>
   2d9b0:	mov	r9, #0
   2d9b4:	uxth	r0, r9
   2d9b8:	sub	sp, fp, #28
   2d9bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d9c0:	push	{fp, lr}
   2d9c4:	mov	fp, sp
   2d9c8:	mov	r2, #1
   2d9cc:	bl	334e0 <fb_value_set_insert_item@@Base>
   2d9d0:	cmp	r0, #0
   2d9d4:	movwne	r0, #1
   2d9d8:	pop	{fp, pc}
   2d9dc:	ldr	r3, [r1]
   2d9e0:	ldr	r2, [r1, #4]
   2d9e4:	mov	r1, r3
   2d9e8:	b	32f30 <fb_name_table_find@@Base>
   2d9ec:	mov	r3, #0
   2d9f0:	b	2d710 <__flatcc_fb_build_schema@@Base+0x2410>
   2d9f4:	push	{r4, sl, fp, lr}
   2d9f8:	add	fp, sp, #8
   2d9fc:	mov	ip, r0
   2da00:	subs	r2, r0, #1
   2da04:	sbc	r3, r1, #0
   2da08:	mov	r0, #0
   2da0c:	rsbs	r2, r2, #255	; 0xff
   2da10:	rscs	r2, r3, #0
   2da14:	bcc	2da58 <__flatcc_fb_build_schema@@Base+0x2758>
   2da18:	orrs	r2, ip, r1
   2da1c:	beq	2da58 <__flatcc_fb_build_schema@@Base+0x2758>
   2da20:	mov	lr, #0
   2da24:	mov	r0, #1
   2da28:	mov	r2, #1
   2da2c:	eor	r3, r2, ip
   2da30:	eor	r4, lr, r1
   2da34:	orrs	r3, r3, r4
   2da38:	beq	2da58 <__flatcc_fb_build_schema@@Base+0x2758>
   2da3c:	lsl	r3, lr, #1
   2da40:	orr	lr, r3, r2, lsr #31
   2da44:	lsl	r2, r2, #1
   2da48:	subs	r3, ip, r2
   2da4c:	sbcs	r3, r1, lr
   2da50:	bcs	2da2c <__flatcc_fb_build_schema@@Base+0x272c>
   2da54:	mov	r0, #0
   2da58:	pop	{r4, sl, fp, pc}
   2da5c:	ldr	r1, [r1, #4]
   2da60:	b	2d710 <__flatcc_fb_build_schema@@Base+0x2410>
   2da64:	push	{r4, r5, r6, r7, fp, lr}
   2da68:	add	fp, sp, #16
   2da6c:	mov	r4, r3
   2da70:	mov	r5, r2
   2da74:	mov	r6, r1
   2da78:	mov	r7, r0
   2da7c:	mov	r0, r2
   2da80:	mov	r1, r3
   2da84:	bl	2d9f4 <__flatcc_fb_build_schema@@Base+0x26f4>
   2da88:	cmp	r0, #0
   2da8c:	beq	2dab4 <__flatcc_fb_build_schema@@Base+0x27b4>
   2da90:	adds	r0, r7, r5
   2da94:	adc	r1, r6, r4
   2da98:	subs	r0, r0, #1
   2da9c:	sbc	r1, r1, #0
   2daa0:	rsbs	r2, r5, #0
   2daa4:	rsc	r3, r4, #0
   2daa8:	and	r1, r1, r3
   2daac:	and	r0, r0, r2
   2dab0:	pop	{r4, r5, r6, r7, fp, pc}
   2dab4:	movw	r0, #56535	; 0xdcd7
   2dab8:	movt	r0, #4
   2dabc:	movw	r1, #53769	; 0xd209
   2dac0:	movt	r1, #4
   2dac4:	movw	r3, #56557	; 0xdced
   2dac8:	movt	r3, #4
   2dacc:	mov	r2, #108	; 0x6c
   2dad0:	bl	14984 <__assert_fail@plt>
   2dad4:	push	{r4, r5, r6, sl, fp, lr}
   2dad8:	add	fp, sp, #16
   2dadc:	mov	r5, r3
   2dae0:	mov	r4, r0
   2dae4:	ldrh	r0, [r2, #24]
   2dae8:	cmp	r0, #7
   2daec:	bne	2db48 <__flatcc_fb_build_schema@@Base+0x2848>
   2daf0:	mov	r6, r2
   2daf4:	ldr	r0, [r2, #16]
   2daf8:	cmp	r0, #4
   2dafc:	bne	2db48 <__flatcc_fb_build_schema@@Base+0x2848>
   2db00:	ldrh	r0, [r5, #16]
   2db04:	cmp	r0, #2
   2db08:	popne	{r4, r5, r6, sl, fp, pc}
   2db0c:	ldrd	r2, [r5, #8]
   2db10:	mov	r0, r4
   2db14:	bl	2dcac <__flatcc_fb_build_schema@@Base+0x29ac>
   2db18:	cmp	r0, #0
   2db1c:	beq	2db60 <__flatcc_fb_build_schema@@Base+0x2860>
   2db20:	ldrh	r1, [r0, #8]
   2db24:	cmp	r1, #0
   2db28:	beq	2db40 <__flatcc_fb_build_schema@@Base+0x2840>
   2db2c:	ldr	r2, [r4, #176]	; 0xb0
   2db30:	cmp	r2, #0
   2db34:	beq	2db70 <__flatcc_fb_build_schema@@Base+0x2870>
   2db38:	cmp	r1, #1
   2db3c:	bne	2db84 <__flatcc_fb_build_schema@@Base+0x2884>
   2db40:	str	r0, [r6, #104]	; 0x68
   2db44:	pop	{r4, r5, r6, sl, fp, pc}
   2db48:	ldr	r1, [r5, #4]
   2db4c:	movw	r2, #58663	; 0xe527
   2db50:	movt	r2, #4
   2db54:	mov	r0, r4
   2db58:	pop	{r4, r5, r6, sl, fp, lr}
   2db5c:	b	2d9ec <__flatcc_fb_build_schema@@Base+0x26ec>
   2db60:	ldmib	r5, {r1, r2, r3}
   2db64:	mov	r0, r4
   2db68:	pop	{r4, r5, r6, sl, fp, lr}
   2db6c:	b	2dd94 <__flatcc_fb_build_schema@@Base+0x2a94>
   2db70:	ldr	r3, [r0, #4]
   2db74:	ldr	r1, [r5, #4]
   2db78:	movw	r2, #58751	; 0xe57f
   2db7c:	movt	r2, #4
   2db80:	b	2db94 <__flatcc_fb_build_schema@@Base+0x2894>
   2db84:	ldr	r3, [r0, #4]
   2db88:	ldr	r1, [r5, #4]
   2db8c:	movw	r2, #58794	; 0xe5aa
   2db90:	movt	r2, #4
   2db94:	mov	r0, r4
   2db98:	pop	{r4, r5, r6, sl, fp, lr}
   2db9c:	b	2d710 <__flatcc_fb_build_schema@@Base+0x2410>
   2dba0:	push	{r4, r5, fp, lr}
   2dba4:	add	fp, sp, #8
   2dba8:	sub	sp, sp, #8
   2dbac:	mov	r4, r2
   2dbb0:	mov	r2, #0
   2dbb4:	str	r2, [sp, #4]
   2dbb8:	cmp	r3, #0
   2dbbc:	beq	2dc54 <__flatcc_fb_build_schema@@Base+0x2954>
   2dbc0:	mov	r5, r3
   2dbc4:	cmp	r4, #0
   2dbc8:	beq	2dbd8 <__flatcc_fb_build_schema@@Base+0x28d8>
   2dbcc:	ldrh	r2, [r4, #8]
   2dbd0:	cmp	r2, #3
   2dbd4:	bne	2dc74 <__flatcc_fb_build_schema@@Base+0x2974>
   2dbd8:	add	r3, sp, #4
   2dbdc:	mov	r2, r5
   2dbe0:	bl	2debc <__flatcc_fb_build_schema@@Base+0x2bbc>
   2dbe4:	cmp	r0, #0
   2dbe8:	beq	2dc00 <__flatcc_fb_build_schema@@Base+0x2900>
   2dbec:	ldrh	r1, [r0, #8]
   2dbf0:	cmp	r1, #3
   2dbf4:	bne	2dc00 <__flatcc_fb_build_schema@@Base+0x2900>
   2dbf8:	mov	r4, r0
   2dbfc:	b	2dc10 <__flatcc_fb_build_schema@@Base+0x2910>
   2dc00:	ldr	r0, [r5]
   2dc04:	mvn	r5, #0
   2dc08:	cmp	r0, #0
   2dc0c:	bne	2dc48 <__flatcc_fb_build_schema@@Base+0x2948>
   2dc10:	mvn	r5, #0
   2dc14:	cmp	r4, #0
   2dc18:	beq	2dc48 <__flatcc_fb_build_schema@@Base+0x2948>
   2dc1c:	ldr	r0, [sp, #4]
   2dc20:	ldr	r1, [r0, #4]
   2dc24:	add	r0, r4, #56	; 0x38
   2dc28:	bl	2dfe4 <__flatcc_fb_build_schema@@Base+0x2ce4>
   2dc2c:	cmp	r0, #0
   2dc30:	beq	2dc48 <__flatcc_fb_build_schema@@Base+0x2948>
   2dc34:	ldr	r1, [fp, #8]
   2dc38:	add	r0, r0, #48	; 0x30
   2dc3c:	vld1.64	{d16-d17}, [r0]
   2dc40:	vst1.64	{d16-d17}, [r1]
   2dc44:	mov	r5, #0
   2dc48:	mov	r0, r5
   2dc4c:	sub	sp, fp, #8
   2dc50:	pop	{r4, r5, fp, pc}
   2dc54:	movw	r0, #58849	; 0xe5e1
   2dc58:	movt	r0, #4
   2dc5c:	movw	r1, #53769	; 0xd209
   2dc60:	movt	r1, #4
   2dc64:	movw	r3, #58853	; 0xe5e5
   2dc68:	movt	r3, #4
   2dc6c:	movw	r2, #347	; 0x15b
   2dc70:	bl	14984 <__assert_fail@plt>
   2dc74:	movw	r0, #58951	; 0xe647
   2dc78:	movt	r0, #4
   2dc7c:	movw	r1, #53769	; 0xd209
   2dc80:	movt	r1, #4
   2dc84:	movw	r3, #58853	; 0xe5e5
   2dc88:	movt	r3, #4
   2dc8c:	mov	r2, #348	; 0x15c
   2dc90:	bl	14984 <__assert_fail@plt>
   2dc94:	push	{fp, lr}
   2dc98:	mov	fp, sp
   2dc9c:	bl	33590 <fb_value_set_find_item@@Base>
   2dca0:	cmp	r0, #0
   2dca4:	movwne	r0, #1
   2dca8:	pop	{fp, pc}
   2dcac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2dcb0:	add	fp, sp, #24
   2dcb4:	mov	r5, r1
   2dcb8:	mov	r9, r0
   2dcbc:	sub	r0, r3, #1
   2dcc0:	add	r4, r0, #1
   2dcc4:	cmp	r4, #1
   2dcc8:	blt	2dcf0 <__flatcc_fb_build_schema@@Base+0x29f0>
   2dccc:	ldrb	r1, [r2, r0]
   2dcd0:	sub	r0, r0, #1
   2dcd4:	cmp	r1, #46	; 0x2e
   2dcd8:	bne	2dcc0 <__flatcc_fb_build_schema@@Base+0x29c0>
   2dcdc:	add	r1, r2, r0
   2dce0:	add	r6, r1, #2
   2dce4:	add	r4, r0, #1
   2dce8:	sub	r3, r3, #1
   2dcec:	b	2dcf4 <__flatcc_fb_build_schema@@Base+0x29f4>
   2dcf0:	mov	r6, r2
   2dcf4:	sub	r7, r3, r4
   2dcf8:	add	r8, r9, #352	; 0x160
   2dcfc:	cmp	r5, #0
   2dd00:	beq	2dd0c <__flatcc_fb_build_schema@@Base+0x2a0c>
   2dd04:	cmp	r4, #0
   2dd08:	beq	2dd50 <__flatcc_fb_build_schema@@Base+0x2a50>
   2dd0c:	mov	r0, r8
   2dd10:	mov	r1, r2
   2dd14:	mov	r2, r4
   2dd18:	bl	2de70 <__flatcc_fb_build_schema@@Base+0x2b70>
   2dd1c:	cmp	r0, #0
   2dd20:	beq	2dd88 <__flatcc_fb_build_schema@@Base+0x2a88>
   2dd24:	add	r0, r0, #4
   2dd28:	mov	r1, r6
   2dd2c:	mov	r2, r7
   2dd30:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2dd34:	b	25e44 <fb_symbol_table_find@@Base>
   2dd38:	mov	r0, r9
   2dd3c:	mov	r1, r5
   2dd40:	bl	2ddf0 <__flatcc_fb_build_schema@@Base+0x2af0>
   2dd44:	mov	r5, r0
   2dd48:	cmp	r0, #0
   2dd4c:	beq	2dd88 <__flatcc_fb_build_schema@@Base+0x2a88>
   2dd50:	add	r0, r5, #4
   2dd54:	mov	r1, r6
   2dd58:	mov	r2, r7
   2dd5c:	bl	25e44 <fb_symbol_table_find@@Base>
   2dd60:	cmp	r0, #0
   2dd64:	beq	2dd38 <__flatcc_fb_build_schema@@Base+0x2a38>
   2dd68:	mov	r4, r0
   2dd6c:	mov	r0, r8
   2dd70:	mov	r1, r4
   2dd74:	bl	2ddb8 <__flatcc_fb_build_schema@@Base+0x2ab8>
   2dd78:	cmp	r0, #0
   2dd7c:	beq	2dd38 <__flatcc_fb_build_schema@@Base+0x2a38>
   2dd80:	mov	r0, r4
   2dd84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2dd88:	mov	r4, #0
   2dd8c:	mov	r0, r4
   2dd90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2dd94:	push	{fp, lr}
   2dd98:	mov	fp, sp
   2dd9c:	push	{r2, r3}
   2dda0:	movw	r2, #58724	; 0xe564
   2dda4:	movt	r2, #4
   2dda8:	mov	r3, #0
   2ddac:	bl	274ec <__flatcc_error_report@@Base>
   2ddb0:	mov	sp, fp
   2ddb4:	pop	{fp, pc}
   2ddb8:	push	{r4, sl, fp, lr}
   2ddbc:	add	fp, sp, #8
   2ddc0:	mov	r4, r1
   2ddc4:	ldrh	r1, [r1, #8]
   2ddc8:	cmp	r1, #4
   2ddcc:	bhi	2dde8 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2ddd0:	ldr	r1, [r4, #16]
   2ddd4:	add	r0, r0, #172	; 0xac
   2ddd8:	bl	2b6c4 <__flatcc_fb_build_schema@@Base+0x3c4>
   2dddc:	cmp	r0, #0
   2dde0:	movne	r0, r4
   2dde4:	pop	{r4, sl, fp, pc}
   2dde8:	mov	r0, #0
   2ddec:	pop	{r4, sl, fp, pc}
   2ddf0:	push	{r4, r5, r6, sl, fp, lr}
   2ddf4:	add	fp, sp, #16
   2ddf8:	mov	r4, r1
   2ddfc:	mov	r1, #0
   2de00:	cmp	r4, #0
   2de04:	beq	2de54 <__flatcc_fb_build_schema@@Base+0x2b54>
   2de08:	ldr	r2, [r4]
   2de0c:	cmp	r2, #0
   2de10:	beq	2de54 <__flatcc_fb_build_schema@@Base+0x2b54>
   2de14:	mov	r5, #0
   2de18:	add	r5, r5, #1
   2de1c:	ldr	r2, [r2]
   2de20:	cmp	r2, #0
   2de24:	bne	2de18 <__flatcc_fb_build_schema@@Base+0x2b18>
   2de28:	add	r6, r0, #352	; 0x160
   2de2c:	cmp	r5, #2
   2de30:	blt	2de5c <__flatcc_fb_build_schema@@Base+0x2b5c>
   2de34:	sub	r5, r5, #1
   2de38:	ldr	r1, [r4]
   2de3c:	mov	r0, r6
   2de40:	mov	r2, r5
   2de44:	bl	2de98 <__flatcc_fb_build_schema@@Base+0x2b98>
   2de48:	cmp	r0, #0
   2de4c:	beq	2de2c <__flatcc_fb_build_schema@@Base+0x2b2c>
   2de50:	mov	r1, r0
   2de54:	mov	r0, r1
   2de58:	pop	{r4, r5, r6, sl, fp, pc}
   2de5c:	mov	r0, r6
   2de60:	mov	r1, #0
   2de64:	mov	r2, #0
   2de68:	pop	{r4, r5, r6, sl, fp, lr}
   2de6c:	b	2de98 <__flatcc_fb_build_schema@@Base+0x2b98>
   2de70:	cmp	r0, #0
   2de74:	beq	2de90 <__flatcc_fb_build_schema@@Base+0x2b90>
   2de78:	ldr	r0, [r0, #60]	; 0x3c
   2de7c:	cmp	r0, #0
   2de80:	beq	2de90 <__flatcc_fb_build_schema@@Base+0x2b90>
   2de84:	cmp	r2, #0
   2de88:	moveq	r1, r2
   2de8c:	b	2645c <fb_scope_table_find@@Base>
   2de90:	mov	r0, #0
   2de94:	bx	lr
   2de98:	cmp	r0, #0
   2de9c:	beq	2deb4 <__flatcc_fb_build_schema@@Base+0x2bb4>
   2dea0:	ldr	r0, [r0, #60]	; 0x3c
   2dea4:	cmp	r0, #0
   2dea8:	beq	2deb4 <__flatcc_fb_build_schema@@Base+0x2bb4>
   2deac:	rsb	r2, r2, #0
   2deb0:	b	2645c <fb_scope_table_find@@Base>
   2deb4:	mov	r0, #0
   2deb8:	bx	lr
   2debc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2dec0:	add	fp, sp, #24
   2dec4:	mov	r5, r1
   2dec8:	mov	r8, r0
   2decc:	cmp	r2, #0
   2ded0:	beq	2defc <__flatcc_fb_build_schema@@Base+0x2bfc>
   2ded4:	mov	r0, #0
   2ded8:	mov	r1, r2
   2dedc:	mov	r4, #0
   2dee0:	mov	r7, r4
   2dee4:	mov	r4, r1
   2dee8:	add	r0, r0, #1
   2deec:	ldr	r1, [r1]
   2def0:	cmp	r1, #0
   2def4:	bne	2dee0 <__flatcc_fb_build_schema@@Base+0x2be0>
   2def8:	b	2df08 <__flatcc_fb_build_schema@@Base+0x2c08>
   2defc:	mov	r7, #0
   2df00:	mov	r4, #0
   2df04:	mov	r0, #0
   2df08:	cmp	r3, #0
   2df0c:	strne	r4, [r3]
   2df10:	subne	r0, r0, #1
   2df14:	moveq	r7, r4
   2df18:	cmp	r7, #0
   2df1c:	beq	2dfd8 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2df20:	cmp	r5, #0
   2df24:	beq	2df84 <__flatcc_fb_build_schema@@Base+0x2c84>
   2df28:	cmp	r0, #1
   2df2c:	bne	2df84 <__flatcc_fb_build_schema@@Base+0x2c84>
   2df30:	add	r4, r8, #352	; 0x160
   2df34:	b	2df50 <__flatcc_fb_build_schema@@Base+0x2c50>
   2df38:	mov	r0, r8
   2df3c:	mov	r1, r5
   2df40:	bl	2ddf0 <__flatcc_fb_build_schema@@Base+0x2af0>
   2df44:	mov	r5, r0
   2df48:	cmp	r0, #0
   2df4c:	beq	2dfd8 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2df50:	ldr	r1, [r7, #4]
   2df54:	add	r0, r5, #4
   2df58:	bl	2dfe4 <__flatcc_fb_build_schema@@Base+0x2ce4>
   2df5c:	cmp	r0, #0
   2df60:	beq	2df38 <__flatcc_fb_build_schema@@Base+0x2c38>
   2df64:	mov	r6, r0
   2df68:	mov	r0, r4
   2df6c:	mov	r1, r6
   2df70:	bl	2ddb8 <__flatcc_fb_build_schema@@Base+0x2ab8>
   2df74:	cmp	r0, #0
   2df78:	beq	2df38 <__flatcc_fb_build_schema@@Base+0x2c38>
   2df7c:	mov	r0, r6
   2df80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2df84:	subs	r1, r0, #1
   2df88:	movne	r1, r2
   2df8c:	add	r5, r8, #352	; 0x160
   2df90:	sub	r2, r0, #1
   2df94:	mov	r0, r5
   2df98:	bl	2de98 <__flatcc_fb_build_schema@@Base+0x2b98>
   2df9c:	cmp	r0, #0
   2dfa0:	beq	2dfd8 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2dfa4:	ldr	r1, [r7, #4]
   2dfa8:	add	r0, r0, #4
   2dfac:	bl	2dfe4 <__flatcc_fb_build_schema@@Base+0x2ce4>
   2dfb0:	cmp	r0, #0
   2dfb4:	beq	2dfd8 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2dfb8:	mov	r6, r0
   2dfbc:	mov	r0, r5
   2dfc0:	mov	r1, r6
   2dfc4:	bl	2ddb8 <__flatcc_fb_build_schema@@Base+0x2ab8>
   2dfc8:	cmp	r0, #0
   2dfcc:	moveq	r6, #0
   2dfd0:	mov	r0, r6
   2dfd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dfd8:	mov	r6, #0
   2dfdc:	mov	r0, r6
   2dfe0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dfe4:	ldr	r3, [r1]
   2dfe8:	ldr	r2, [r1, #4]
   2dfec:	mov	r1, r3
   2dff0:	b	25e44 <fb_symbol_table_find@@Base>

0002dff4 <__flatcc_fb_coerce_scalar_type@@Base>:
   2dff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dff8:	add	fp, sp, #28
   2dffc:	sub	sp, sp, #12
   2e000:	mov	r9, r0
   2e004:	mov	r5, r3
   2e008:	ldrh	r0, [r5, #8]!
   2e00c:	mov	r4, #0
   2e010:	cmp	r0, #2
   2e014:	bcc	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e018:	mov	r7, r3
   2e01c:	mov	sl, r1
   2e020:	cmp	r0, #4
   2e024:	bne	2e04c <__flatcc_fb_coerce_scalar_type@@Base+0x58>
   2e028:	ldrd	r0, [r7]
   2e02c:	mvn	r3, #127	; 0x7f
   2e030:	orr	r3, r3, #127	; 0x7f
   2e034:	mvn	r6, #0
   2e038:	subs	r0, r3, r0
   2e03c:	sbcs	r0, r6, r1
   2e040:	movlt	r0, #5
   2e044:	strhlt	r0, [r5]
   2e048:	b	2e088 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2e04c:	cmp	r2, #5
   2e050:	beq	2e088 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2e054:	cmp	r0, #6
   2e058:	bne	2e088 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2e05c:	ldr	r0, [r9, #144]	; 0x90
   2e060:	cmp	r0, #0
   2e064:	beq	2e088 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2e068:	mov	r0, #0
   2e06c:	str	r0, [r7, #4]
   2e070:	mov	r0, #5
   2e074:	strh	r0, [r7, #8]
   2e078:	ldrb	r0, [r7]
   2e07c:	str	r0, [r7]
   2e080:	cmp	r0, #2
   2e084:	bcs	2e478 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   2e088:	sub	r0, r2, #1
   2e08c:	cmp	r0, #10
   2e090:	bhi	2e2d8 <__flatcc_fb_coerce_scalar_type@@Base+0x2e4>
   2e094:	add	r1, pc, #0
   2e098:	ldr	pc, [r1, r0, lsl #2]
   2e09c:	andeq	lr, r2, r8, asr #1
   2e0a0:	andeq	lr, r2, r0, ror #3
   2e0a4:	andeq	lr, r2, r8, asr r1
   2e0a8:	andeq	lr, r2, r0, lsl #3
   2e0ac:	andeq	lr, r2, r0, ror #1
   2e0b0:	andeq	lr, r2, r4, lsl #4
   2e0b4:	andeq	lr, r2, r0, lsr r2
   2e0b8:	andeq	lr, r2, r8, lsr #3
   2e0bc:	andeq	lr, r2, r8, ror #4
   2e0c0:	andeq	lr, r2, ip, lsl r1
   2e0c4:	andeq	lr, r2, r0, lsr #5
   2e0c8:	ldrh	r0, [r5]
   2e0cc:	cmp	r0, #5
   2e0d0:	beq	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e0d4:	movw	r2, #59970	; 0xea42
   2e0d8:	movt	r2, #4
   2e0dc:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e0e0:	ldrh	r0, [r5]
   2e0e4:	cmp	r0, #6
   2e0e8:	beq	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e0ec:	cmp	r0, #5
   2e0f0:	bne	2e308 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2e0f4:	ldr	r0, [r9, #144]	; 0x90
   2e0f8:	cmp	r0, #0
   2e0fc:	beq	2e308 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2e100:	ldrd	r0, [r7]
   2e104:	subs	r0, r0, #2
   2e108:	sbcs	r0, r1, #0
   2e10c:	bcc	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e110:	movw	r2, #60660	; 0xecf4
   2e114:	movt	r2, #4
   2e118:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e11c:	ldrh	r0, [r5]
   2e120:	cmp	r0, #3
   2e124:	beq	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e128:	cmp	r0, #5
   2e12c:	beq	2e3a4 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   2e130:	cmp	r0, #4
   2e134:	bne	2e3f0 <__flatcc_fb_coerce_scalar_type@@Base+0x3fc>
   2e138:	ldm	r7, {r6, r8}
   2e13c:	mov	r0, r6
   2e140:	mov	r1, r8
   2e144:	bl	33a80 <fb_value_set_visit@@Base+0x410>
   2e148:	str	r0, [sp, #8]
   2e14c:	str	r1, [sp, #4]
   2e150:	bl	33da8 <fb_value_set_visit@@Base+0x738>
   2e154:	b	2e3c0 <__flatcc_fb_coerce_scalar_type@@Base+0x3cc>
   2e158:	ldrh	r0, [r5]
   2e15c:	cmp	r0, #5
   2e160:	bne	2e2e4 <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   2e164:	ldrd	r0, [r7]
   2e168:	subs	r0, r0, #65536	; 0x10000
   2e16c:	sbcs	r0, r1, #0
   2e170:	bcc	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e174:	movw	r2, #60165	; 0xeb05
   2e178:	movt	r2, #4
   2e17c:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e180:	ldrh	r0, [r5]
   2e184:	cmp	r0, #5
   2e188:	bne	2e2f0 <__flatcc_fb_coerce_scalar_type@@Base+0x2fc>
   2e18c:	ldrd	r0, [r7]
   2e190:	subs	r0, r0, #256	; 0x100
   2e194:	sbcs	r0, r1, #0
   2e198:	bcc	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e19c:	movw	r2, #60252	; 0xeb5c
   2e1a0:	movt	r2, #4
   2e1a4:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e1a8:	ldrh	r0, [r5]
   2e1ac:	cmp	r0, #5
   2e1b0:	beq	2e314 <__flatcc_fb_coerce_scalar_type@@Base+0x320>
   2e1b4:	cmp	r0, #4
   2e1b8:	bne	2e374 <__flatcc_fb_coerce_scalar_type@@Base+0x380>
   2e1bc:	ldrd	r0, [r7]
   2e1c0:	mvn	r2, #0
   2e1c4:	mvn	r3, #32768	; 0x8000
   2e1c8:	subs	r0, r3, r0
   2e1cc:	sbcs	r0, r2, r1
   2e1d0:	blt	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e1d4:	movw	r2, #60454	; 0xec26
   2e1d8:	movt	r2, #4
   2e1dc:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e1e0:	ldrh	r0, [r5]
   2e1e4:	cmp	r0, #5
   2e1e8:	bne	2e2fc <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   2e1ec:	ldr	r0, [r7, #4]
   2e1f0:	cmp	r0, #0
   2e1f4:	beq	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e1f8:	movw	r2, #60078	; 0xeaae
   2e1fc:	movt	r2, #4
   2e200:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e204:	ldrh	r0, [r5]
   2e208:	cmp	r0, #4
   2e20c:	beq	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e210:	cmp	r0, #5
   2e214:	bne	2e380 <__flatcc_fb_coerce_scalar_type@@Base+0x38c>
   2e218:	ldr	r0, [r7, #4]
   2e21c:	cmn	r0, #1
   2e220:	bgt	2e368 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e224:	movw	r2, #60281	; 0xeb79
   2e228:	movt	r2, #4
   2e22c:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e230:	ldrh	r0, [r5]
   2e234:	cmp	r0, #5
   2e238:	beq	2e330 <__flatcc_fb_coerce_scalar_type@@Base+0x33c>
   2e23c:	cmp	r0, #4
   2e240:	bne	2e38c <__flatcc_fb_coerce_scalar_type@@Base+0x398>
   2e244:	ldrd	r0, [r7]
   2e248:	mvn	r2, #0
   2e24c:	mvn	r3, #-2147483648	; 0x80000000
   2e250:	subs	r0, r3, r0
   2e254:	sbcs	r0, r2, r1
   2e258:	blt	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e25c:	movw	r2, #60354	; 0xebc2
   2e260:	movt	r2, #4
   2e264:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e268:	ldrh	r0, [r5]
   2e26c:	cmp	r0, #5
   2e270:	beq	2e34c <__flatcc_fb_coerce_scalar_type@@Base+0x358>
   2e274:	cmp	r0, #4
   2e278:	bne	2e398 <__flatcc_fb_coerce_scalar_type@@Base+0x3a4>
   2e27c:	ldrd	r0, [r7]
   2e280:	mvn	r2, #0
   2e284:	mvn	r3, #128	; 0x80
   2e288:	subs	r0, r3, r0
   2e28c:	sbcs	r0, r2, r1
   2e290:	blt	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e294:	movw	r2, #60560	; 0xec90
   2e298:	movt	r2, #4
   2e29c:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e2a0:	ldrh	r0, [r5]
   2e2a4:	cmp	r0, #3
   2e2a8:	beq	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e2ac:	cmp	r0, #5
   2e2b0:	beq	2e3fc <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   2e2b4:	cmp	r0, #4
   2e2b8:	bne	2e44c <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   2e2bc:	ldm	r7, {r6, r8}
   2e2c0:	mov	r0, r6
   2e2c4:	mov	r1, r8
   2e2c8:	bl	33cb4 <fb_value_set_visit@@Base+0x644>
   2e2cc:	str	r0, [sp, #8]
   2e2d0:	bl	33d7c <fb_value_set_visit@@Base+0x70c>
   2e2d4:	b	2e414 <__flatcc_fb_coerce_scalar_type@@Base+0x420>
   2e2d8:	movw	r2, #60984	; 0xee38
   2e2dc:	movt	r2, #4
   2e2e0:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e2e4:	movw	r2, #60107	; 0xeacb
   2e2e8:	movt	r2, #4
   2e2ec:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e2f0:	movw	r2, #60196	; 0xeb24
   2e2f4:	movt	r2, #4
   2e2f8:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e2fc:	movw	r2, #60022	; 0xea76
   2e300:	movt	r2, #4
   2e304:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e308:	movw	r2, #60722	; 0xed32
   2e30c:	movt	r2, #4
   2e310:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e314:	ldrd	r0, [r7]
   2e318:	subs	r0, r0, #32768	; 0x8000
   2e31c:	sbcs	r0, r1, #0
   2e320:	blt	2e368 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e324:	movw	r2, #60484	; 0xec44
   2e328:	movt	r2, #4
   2e32c:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e330:	ldrd	r0, [r7]
   2e334:	subs	r0, r0, #-2147483648	; 0x80000000
   2e338:	sbcs	r0, r1, #0
   2e33c:	blt	2e368 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e340:	movw	r2, #60382	; 0xebde
   2e344:	movt	r2, #4
   2e348:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e34c:	ldrd	r0, [r7]
   2e350:	subs	r0, r0, #128	; 0x80
   2e354:	sbcs	r0, r1, #0
   2e358:	blt	2e368 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e35c:	movw	r2, #60588	; 0xecac
   2e360:	movt	r2, #4
   2e364:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e368:	mov	r0, #4
   2e36c:	strh	r0, [r5]
   2e370:	b	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e374:	movw	r2, #60513	; 0xec61
   2e378:	movt	r2, #4
   2e37c:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e380:	movw	r2, #60312	; 0xeb98
   2e384:	movt	r2, #4
   2e388:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e38c:	movw	r2, #60409	; 0xebf9
   2e390:	movt	r2, #4
   2e394:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e398:	movw	r2, #60615	; 0xecc7
   2e39c:	movt	r2, #4
   2e3a0:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e3a4:	ldm	r7, {r6, r8}
   2e3a8:	mov	r0, r6
   2e3ac:	mov	r1, r8
   2e3b0:	bl	33a6c <fb_value_set_visit@@Base+0x3fc>
   2e3b4:	str	r0, [sp, #8]
   2e3b8:	str	r1, [sp, #4]
   2e3bc:	bl	33e18 <fb_value_set_visit@@Base+0x7a8>
   2e3c0:	eor	r1, r8, r1
   2e3c4:	eor	r0, r6, r0
   2e3c8:	orrs	r0, r0, r1
   2e3cc:	bne	2e3e4 <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
   2e3d0:	ldr	r0, [sp, #8]
   2e3d4:	ldr	r1, [sp, #4]
   2e3d8:	vmov	d16, r0, r1
   2e3dc:	mov	r0, #3
   2e3e0:	b	2e434 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   2e3e4:	movw	r2, #60776	; 0xed68
   2e3e8:	movt	r2, #4
   2e3ec:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e3f0:	movw	r2, #60824	; 0xed98
   2e3f4:	movt	r2, #4
   2e3f8:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e3fc:	ldm	r7, {r6, r8}
   2e400:	mov	r0, r6
   2e404:	mov	r1, r8
   2e408:	bl	33ca4 <fb_value_set_visit@@Base+0x634>
   2e40c:	str	r0, [sp, #8]
   2e410:	bl	33dd8 <fb_value_set_visit@@Base+0x768>
   2e414:	eor	r1, r8, r1
   2e418:	eor	r0, r6, r0
   2e41c:	orrs	r0, r0, r1
   2e420:	bne	2e440 <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   2e424:	ldr	r0, [sp, #8]
   2e428:	vmov	s0, r0
   2e42c:	mov	r0, #3
   2e430:	vcvt.f64.f32	d16, s0
   2e434:	strh	r0, [r7, #8]
   2e438:	vstr	d16, [r7]
   2e43c:	b	2e46c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e440:	movw	r2, #60881	; 0xedd1
   2e444:	movt	r2, #4
   2e448:	b	2e454 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e44c:	movw	r2, #60928	; 0xee00
   2e450:	movt	r2, #4
   2e454:	mov	r0, r9
   2e458:	mov	r1, sl
   2e45c:	bl	2e498 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   2e460:	mov	r0, #1
   2e464:	strh	r0, [r5]
   2e468:	mvn	r4, #0
   2e46c:	mov	r0, r4
   2e470:	sub	sp, fp, #28
   2e474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e478:	movw	r0, #59772	; 0xe97c
   2e47c:	movt	r0, #4
   2e480:	movw	r1, #59803	; 0xe99b
   2e484:	movt	r1, #4
   2e488:	movw	r3, #59873	; 0xe9e1
   2e48c:	movt	r3, #4
   2e490:	mov	r2, #52	; 0x34
   2e494:	bl	14984 <__assert_fail@plt>
   2e498:	ldr	r1, [r1, #4]
   2e49c:	b	2e4a0 <__flatcc_fb_coerce_scalar_type@@Base+0x4ac>
   2e4a0:	b	2e4a4 <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   2e4a4:	push	{fp, lr}
   2e4a8:	mov	fp, sp
   2e4ac:	sub	sp, sp, #8
   2e4b0:	mov	r3, #0
   2e4b4:	str	r3, [sp]
   2e4b8:	str	r3, [sp, #4]
   2e4bc:	mov	r3, #0
   2e4c0:	bl	274ec <__flatcc_error_report@@Base>
   2e4c4:	mov	sp, fp
   2e4c8:	pop	{fp, pc}

0002e4cc <flatcc_builder_default_alloc@@Base>:
   2e4cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e4d0:	add	fp, sp, #24
   2e4d4:	mov	r4, r1
   2e4d8:	cmp	r2, #0
   2e4dc:	beq	2e524 <flatcc_builder_default_alloc@@Base+0x58>
   2e4e0:	mov	r8, r3
   2e4e4:	ldr	r0, [fp, #8]
   2e4e8:	sub	r1, r0, #1
   2e4ec:	cmp	r1, #6
   2e4f0:	bhi	2e554 <flatcc_builder_default_alloc@@Base+0x88>
   2e4f4:	mov	r0, #256	; 0x100
   2e4f8:	add	r3, pc, #0
   2e4fc:	ldr	pc, [r3, r1, lsl #2]
   2e500:	andeq	lr, r2, r8, ror #10
   2e504:	andeq	lr, r2, r4, asr r5
   2e508:	andeq	lr, r2, r4, asr r5
   2e50c:	andeq	lr, r2, ip, lsl r5
   2e510:	andeq	lr, r2, ip, asr r5
   2e514:	andeq	lr, r2, r4, asr r5
   2e518:	andeq	lr, r2, r4, ror #10
   2e51c:	mov	r0, #288	; 0x120
   2e520:	b	2e568 <flatcc_builder_default_alloc@@Base+0x9c>
   2e524:	ldr	r0, [r4]
   2e528:	cmp	r0, #0
   2e52c:	beq	2e548 <flatcc_builder_default_alloc@@Base+0x7c>
   2e530:	bl	14804 <free@plt>
   2e534:	mov	r6, #0
   2e538:	str	r6, [r4]
   2e53c:	str	r6, [r4, #4]
   2e540:	mov	r0, r6
   2e544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e548:	mov	r6, #0
   2e54c:	mov	r0, r6
   2e550:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e554:	mov	r0, #32
   2e558:	b	2e568 <flatcc_builder_default_alloc@@Base+0x9c>
   2e55c:	mov	r0, r2
   2e560:	b	2e568 <flatcc_builder_default_alloc@@Base+0x9c>
   2e564:	mov	r0, #64	; 0x40
   2e568:	mov	r7, r0
   2e56c:	lsl	r0, r0, #1
   2e570:	cmp	r7, r2
   2e574:	bcc	2e568 <flatcc_builder_default_alloc@@Base+0x9c>
   2e578:	ldr	r0, [r4, #4]
   2e57c:	mov	r6, #0
   2e580:	cmp	r0, r2
   2e584:	lsrcs	r0, r0, #1
   2e588:	cmpcs	r0, r7
   2e58c:	bcs	2e5d0 <flatcc_builder_default_alloc@@Base+0x104>
   2e590:	ldr	r0, [r4]
   2e594:	mov	r1, r7
   2e598:	bl	1484c <realloc@plt>
   2e59c:	cmp	r0, #0
   2e5a0:	beq	2e5d8 <flatcc_builder_default_alloc@@Base+0x10c>
   2e5a4:	mov	r5, r0
   2e5a8:	cmp	r8, #0
   2e5ac:	beq	2e5cc <flatcc_builder_default_alloc@@Base+0x100>
   2e5b0:	ldr	r1, [r4, #4]
   2e5b4:	cmp	r7, r1
   2e5b8:	bls	2e5cc <flatcc_builder_default_alloc@@Base+0x100>
   2e5bc:	add	r0, r5, r1
   2e5c0:	sub	r2, r7, r1
   2e5c4:	mov	r1, #0
   2e5c8:	bl	148dc <memset@plt>
   2e5cc:	stm	r4, {r5, r7}
   2e5d0:	mov	r0, r6
   2e5d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e5d8:	mvn	r6, #0
   2e5dc:	mov	r0, r6
   2e5e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002e5e4 <flatcc_builder_flush_vtable_cache@@Base>:
   2e5e4:	push	{r4, r5, fp, lr}
   2e5e8:	add	fp, sp, #8
   2e5ec:	mov	r4, r0
   2e5f0:	ldr	r0, [r0, #116]	; 0x74
   2e5f4:	cmp	r0, #0
   2e5f8:	popeq	{r4, r5, fp, pc}
   2e5fc:	ldr	r0, [r4, #92]	; 0x5c
   2e600:	ldr	r2, [r4, #96]	; 0x60
   2e604:	mov	r5, #0
   2e608:	mov	r1, #0
   2e60c:	bl	148dc <memset@plt>
   2e610:	mov	r0, #16
   2e614:	str	r5, [r4, #120]	; 0x78
   2e618:	str	r0, [r4, #124]	; 0x7c
   2e61c:	pop	{r4, r5, fp, pc}

0002e620 <flatcc_builder_custom_init@@Base>:
   2e620:	push	{r4, r5, r6, r7, fp, lr}
   2e624:	add	fp, sp, #16
   2e628:	mov	r5, r3
   2e62c:	mov	r6, r2
   2e630:	mov	r7, r1
   2e634:	mov	r4, r0
   2e638:	mov	r1, #0
   2e63c:	mov	r2, #232	; 0xe8
   2e640:	bl	148dc <memset@plt>
   2e644:	ldr	r0, [fp, #8]
   2e648:	cmp	r7, #0
   2e64c:	bne	2e664 <flatcc_builder_custom_init@@Base+0x44>
   2e650:	mov	r1, #1
   2e654:	str	r1, [r4, #184]	; 0xb8
   2e658:	add	r6, r4, #188	; 0xbc
   2e65c:	movw	r7, #6640	; 0x19f0
   2e660:	movt	r7, #3
   2e664:	movw	r1, #58572	; 0xe4cc
   2e668:	movt	r1, #2
   2e66c:	cmp	r5, #0
   2e670:	movne	r1, r5
   2e674:	str	r6, [r4, #36]	; 0x24
   2e678:	str	r0, [r4, #40]	; 0x28
   2e67c:	str	r7, [r4, #44]	; 0x2c
   2e680:	str	r1, [r4, #48]	; 0x30
   2e684:	mov	r0, #0
   2e688:	pop	{r4, r5, r6, r7, fp, pc}

0002e68c <flatcc_builder_init@@Base>:
   2e68c:	push	{fp, lr}
   2e690:	mov	fp, sp
   2e694:	sub	sp, sp, #8
   2e698:	mov	r1, #0
   2e69c:	str	r1, [sp]
   2e6a0:	mov	r1, #0
   2e6a4:	mov	r2, #0
   2e6a8:	mov	r3, #0
   2e6ac:	bl	2e620 <flatcc_builder_custom_init@@Base>
   2e6b0:	mov	r0, #0
   2e6b4:	mov	sp, fp
   2e6b8:	pop	{fp, pc}

0002e6bc <flatcc_builder_custom_reset@@Base>:
   2e6bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e6c0:	add	fp, sp, #28
   2e6c4:	sub	sp, sp, #4
   2e6c8:	mov	r9, r2
   2e6cc:	mov	r8, r1
   2e6d0:	mov	sl, r0
   2e6d4:	add	r7, r0, #52	; 0x34
   2e6d8:	mov	r5, #0
   2e6dc:	b	2e6fc <flatcc_builder_custom_reset@@Base+0x40>
   2e6e0:	ldr	r0, [r6, #56]	; 0x38
   2e6e4:	cmp	r0, #0
   2e6e8:	bne	2e7e4 <flatcc_builder_custom_reset@@Base+0x128>
   2e6ec:	add	r7, r7, #8
   2e6f0:	add	r5, r5, #1
   2e6f4:	cmp	r5, #8
   2e6f8:	beq	2e750 <flatcc_builder_custom_reset@@Base+0x94>
   2e6fc:	add	r6, sl, r5, lsl #3
   2e700:	ldr	r0, [r6, #52]	; 0x34
   2e704:	cmp	r0, #0
   2e708:	beq	2e6e0 <flatcc_builder_custom_reset@@Base+0x24>
   2e70c:	cmp	r9, #0
   2e710:	cmpne	r5, #5
   2e714:	beq	2e73c <flatcc_builder_custom_reset@@Base+0x80>
   2e718:	ldr	r0, [sl, #40]	; 0x28
   2e71c:	ldr	r4, [sl, #48]	; 0x30
   2e720:	str	r5, [sp]
   2e724:	mov	r1, r7
   2e728:	mov	r2, #1
   2e72c:	mov	r3, #1
   2e730:	blx	r4
   2e734:	cmp	r0, #0
   2e738:	bne	2e7d4 <flatcc_builder_custom_reset@@Base+0x118>
   2e73c:	ldr	r0, [r6, #52]	; 0x34
   2e740:	ldr	r2, [r6, #56]	; 0x38
   2e744:	mov	r1, #0
   2e748:	bl	148dc <memset@plt>
   2e74c:	b	2e6ec <flatcc_builder_custom_reset@@Base+0x30>
   2e750:	mov	r0, #0
   2e754:	str	r0, [sl, #120]	; 0x78
   2e758:	ldr	r1, [sl, #124]	; 0x7c
   2e75c:	cmp	r1, #0
   2e760:	movne	r1, #16
   2e764:	strne	r1, [sl, #124]	; 0x7c
   2e768:	vmov.i32	q8, #0	; 0x00000000
   2e76c:	str	r0, [sl, #136]	; 0x88
   2e770:	str	r0, [sl, #140]	; 0x8c
   2e774:	strh	r0, [sl, #128]	; 0x80
   2e778:	str	r0, [sl, #32]
   2e77c:	add	r1, sl, #148	; 0x94
   2e780:	vst1.32	{d16-d17}, [r1]
   2e784:	ldr	r1, [sl, #52]	; 0x34
   2e788:	ldr	r2, [sl, #60]	; 0x3c
   2e78c:	ldr	r3, [sl, #76]	; 0x4c
   2e790:	str	r2, [sl, #16]
   2e794:	str	r0, [sl, #20]
   2e798:	str	r0, [sl, #24]
   2e79c:	str	r3, [sl]
   2e7a0:	str	r1, [sl, #4]
   2e7a4:	cmp	r8, #0
   2e7a8:	movne	r0, #0
   2e7ac:	strne	r0, [sl, #172]	; 0xac
   2e7b0:	strne	r0, [sl, #176]	; 0xb0
   2e7b4:	strne	r0, [sl, #180]	; 0xb4
   2e7b8:	ldr	r0, [sl, #184]	; 0xb8
   2e7bc:	mov	r5, #0
   2e7c0:	cmp	r0, #0
   2e7c4:	beq	2e7d8 <flatcc_builder_custom_reset@@Base+0x11c>
   2e7c8:	add	r0, sl, #188	; 0xbc
   2e7cc:	bl	318cc <flatcc_emitter_reset@@Base>
   2e7d0:	b	2e7d8 <flatcc_builder_custom_reset@@Base+0x11c>
   2e7d4:	mvn	r5, #0
   2e7d8:	mov	r0, r5
   2e7dc:	sub	sp, fp, #28
   2e7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e7e4:	movw	r0, #61517	; 0xf04d
   2e7e8:	movt	r0, #4
   2e7ec:	movw	r1, #61535	; 0xf05f
   2e7f0:	movt	r1, #4
   2e7f4:	movw	r3, #61605	; 0xf0a5
   2e7f8:	movt	r3, #4
   2e7fc:	movw	r2, #434	; 0x1b2
   2e800:	bl	14984 <__assert_fail@plt>

0002e804 <flatcc_builder_reset@@Base>:
   2e804:	mov	r1, #0
   2e808:	mov	r2, #0
   2e80c:	b	2e6bc <flatcc_builder_custom_reset@@Base>

0002e810 <flatcc_builder_clear@@Base>:
   2e810:	push	{r4, r5, r6, r7, fp, lr}
   2e814:	add	fp, sp, #16
   2e818:	sub	sp, sp, #8
   2e81c:	mov	r7, r0
   2e820:	add	r5, r0, #52	; 0x34
   2e824:	mov	r6, #0
   2e828:	ldr	r0, [r7, #40]	; 0x28
   2e82c:	ldr	r4, [r7, #48]	; 0x30
   2e830:	str	r6, [sp]
   2e834:	mov	r1, r5
   2e838:	mov	r2, #0
   2e83c:	mov	r3, #0
   2e840:	blx	r4
   2e844:	add	r5, r5, #8
   2e848:	add	r6, r6, #1
   2e84c:	cmp	r6, #8
   2e850:	bne	2e828 <flatcc_builder_clear@@Base+0x18>
   2e854:	ldr	r0, [r7, #184]	; 0xb8
   2e858:	cmp	r0, #0
   2e85c:	beq	2e868 <flatcc_builder_clear@@Base+0x58>
   2e860:	add	r0, r7, #188	; 0xbc
   2e864:	bl	3198c <flatcc_emitter_clear@@Base>
   2e868:	mov	r0, r7
   2e86c:	mov	r1, #0
   2e870:	mov	r2, #232	; 0xe8
   2e874:	sub	sp, fp, #16
   2e878:	pop	{r4, r5, r6, r7, fp, lr}
   2e87c:	b	148dc <memset@plt>

0002e880 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2e880:	push	{r4, r5, r6, r7, fp, lr}
   2e884:	add	fp, sp, #16
   2e888:	sub	sp, sp, #8
   2e88c:	mov	r4, r0
   2e890:	ldr	r2, [r0, #228]	; 0xe4
   2e894:	mov	r7, #0
   2e898:	str	r7, [sp]
   2e89c:	add	r0, r1, #7
   2e8a0:	bic	r5, r0, #3
   2e8a4:	mov	r0, r4
   2e8a8:	mov	r1, #7
   2e8ac:	mov	r3, r5
   2e8b0:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2e8b4:	cmp	r0, #0
   2e8b8:	beq	2e8ec <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   2e8bc:	mov	r6, r0
   2e8c0:	mov	r1, #0
   2e8c4:	mov	r2, r5
   2e8c8:	bl	148dc <memset@plt>
   2e8cc:	ldr	r0, [r4, #224]	; 0xe0
   2e8d0:	str	r0, [r6], #4
   2e8d4:	ldr	r0, [r4, #228]	; 0xe4
   2e8d8:	add	r1, r0, #4
   2e8dc:	add	r0, r0, r5
   2e8e0:	str	r1, [r4, #224]	; 0xe0
   2e8e4:	str	r0, [r4, #228]	; 0xe4
   2e8e8:	mov	r7, r6
   2e8ec:	mov	r0, r7
   2e8f0:	sub	sp, fp, #16
   2e8f4:	pop	{r4, r5, r6, r7, fp, pc}
   2e8f8:	push	{r4, r5, fp, lr}
   2e8fc:	add	fp, sp, #8
   2e900:	sub	sp, sp, #8
   2e904:	mov	r4, r2
   2e908:	add	r2, r3, r2
   2e90c:	add	r3, r0, r1, lsl #3
   2e910:	add	r5, r3, #52	; 0x34
   2e914:	ldr	r3, [r3, #56]	; 0x38
   2e918:	cmp	r2, r3
   2e91c:	bls	2e944 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2e920:	ldr	r3, [fp, #8]
   2e924:	ldr	ip, [r0, #40]	; 0x28
   2e928:	ldr	lr, [r0, #48]	; 0x30
   2e92c:	str	r1, [sp]
   2e930:	mov	r0, ip
   2e934:	mov	r1, r5
   2e938:	blx	lr
   2e93c:	cmp	r0, #0
   2e940:	bne	2e954 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2e944:	ldr	r0, [r5]
   2e948:	add	r0, r0, r4
   2e94c:	sub	sp, fp, #8
   2e950:	pop	{r4, r5, fp, pc}
   2e954:	movw	r0, #25261	; 0x62ad
   2e958:	movt	r0, #4
   2e95c:	movw	r1, #61535	; 0xf05f
   2e960:	movt	r1, #4
   2e964:	movw	r3, #63	; 0x3f
   2e968:	movt	r3, #5
   2e96c:	mov	r2, #308	; 0x134
   2e970:	bl	14984 <__assert_fail@plt>

0002e974 <flatcc_builder_enter_user_frame@@Base>:
   2e974:	push	{r4, r5, r6, r7, fp, lr}
   2e978:	add	fp, sp, #16
   2e97c:	sub	sp, sp, #8
   2e980:	mov	r4, r0
   2e984:	ldr	r2, [r0, #228]	; 0xe4
   2e988:	mov	r6, #0
   2e98c:	str	r6, [sp]
   2e990:	add	r0, r1, #7
   2e994:	bic	r5, r0, #3
   2e998:	mov	r0, r4
   2e99c:	mov	r1, #7
   2e9a0:	mov	r3, r5
   2e9a4:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2e9a8:	cmp	r0, #0
   2e9ac:	beq	2e9dc <flatcc_builder_enter_user_frame@@Base+0x68>
   2e9b0:	mov	r7, r0
   2e9b4:	mov	r1, #0
   2e9b8:	mov	r2, r5
   2e9bc:	bl	148dc <memset@plt>
   2e9c0:	ldr	r0, [r4, #224]	; 0xe0
   2e9c4:	str	r0, [r7]
   2e9c8:	ldr	r0, [r4, #228]	; 0xe4
   2e9cc:	add	r6, r0, #4
   2e9d0:	add	r0, r0, r5
   2e9d4:	str	r6, [r4, #224]	; 0xe0
   2e9d8:	str	r0, [r4, #228]	; 0xe4
   2e9dc:	mov	r0, r6
   2e9e0:	sub	sp, fp, #16
   2e9e4:	pop	{r4, r5, r6, r7, fp, pc}

0002e9e8 <flatcc_builder_exit_user_frame@@Base>:
   2e9e8:	push	{fp, lr}
   2e9ec:	mov	fp, sp
   2e9f0:	ldr	r1, [r0, #224]	; 0xe0
   2e9f4:	cmp	r1, #0
   2e9f8:	subne	r2, r1, #4
   2e9fc:	strne	r2, [r0, #228]	; 0xe4
   2ea00:	ldrne	r2, [r0, #108]	; 0x6c
   2ea04:	addne	r1, r2, r1
   2ea08:	ldrne	r1, [r1, #-4]
   2ea0c:	strne	r1, [r0, #224]	; 0xe0
   2ea10:	movne	r0, r1
   2ea14:	popne	{fp, pc}
   2ea18:	movw	r0, #61667	; 0xf0e3
   2ea1c:	movt	r0, #4
   2ea20:	movw	r1, #61535	; 0xf05f
   2ea24:	movt	r1, #4
   2ea28:	movw	r3, #61692	; 0xf0fc
   2ea2c:	movt	r3, #4
   2ea30:	movw	r2, #542	; 0x21e
   2ea34:	bl	14984 <__assert_fail@plt>

0002ea38 <flatcc_builder_exit_user_frame_at@@Base>:
   2ea38:	push	{fp, lr}
   2ea3c:	mov	fp, sp
   2ea40:	ldr	r2, [r0, #224]	; 0xe0
   2ea44:	cmp	r2, r1
   2ea48:	bcc	2ea58 <flatcc_builder_exit_user_frame_at@@Base+0x20>
   2ea4c:	str	r1, [r0, #224]	; 0xe0
   2ea50:	pop	{fp, lr}
   2ea54:	b	2e9e8 <flatcc_builder_exit_user_frame@@Base>
   2ea58:	movw	r0, #61750	; 0xf136
   2ea5c:	movt	r0, #4
   2ea60:	movw	r1, #61535	; 0xf05f
   2ea64:	movt	r1, #4
   2ea68:	movw	r3, #61781	; 0xf155
   2ea6c:	movt	r3, #4
   2ea70:	movw	r2, #551	; 0x227
   2ea74:	bl	14984 <__assert_fail@plt>

0002ea78 <flatcc_builder_get_current_user_frame@@Base>:
   2ea78:	ldr	r0, [r0, #224]	; 0xe0
   2ea7c:	bx	lr

0002ea80 <flatcc_builder_get_user_frame_ptr@@Base>:
   2ea80:	ldr	r0, [r0, #108]	; 0x6c
   2ea84:	add	r0, r0, r1
   2ea88:	bx	lr

0002ea8c <flatcc_builder_embed_buffer@@Base>:
   2ea8c:	push	{r4, r5, r6, r7, fp, lr}
   2ea90:	add	fp, sp, #16
   2ea94:	sub	sp, sp, #80	; 0x50
   2ea98:	mov	r5, r3
   2ea9c:	mov	r6, r2
   2eaa0:	mov	r2, r1
   2eaa4:	mov	r4, r0
   2eaa8:	ldr	r0, [fp, #8]
   2eaac:	strh	r0, [fp, #-18]	; 0xffffffee
   2eab0:	ldr	r3, [r4, #152]	; 0x98
   2eab4:	cmp	r3, #0
   2eab8:	movwne	r3, #1
   2eabc:	sub	r1, fp, #18
   2eac0:	mov	r0, r4
   2eac4:	bl	2eb98 <flatcc_builder_embed_buffer@@Base+0x10c>
   2eac8:	ldr	r0, [fp, #12]
   2eacc:	and	r0, r0, #2
   2ead0:	add	r1, r5, r0, lsl #1
   2ead4:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2ead8:	mov	r0, r4
   2eadc:	bl	2ec54 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2eae0:	mov	r7, r0
   2eae4:	add	r0, r0, r5
   2eae8:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2eaec:	mov	r1, #0
   2eaf0:	str	r1, [sp, #4]
   2eaf4:	str	r1, [sp]
   2eaf8:	str	r0, [fp, #-24]	; 0xffffffe8
   2eafc:	ldr	r0, [r4, #152]	; 0x98
   2eb00:	cmp	r0, #0
   2eb04:	beq	2eb24 <flatcc_builder_embed_buffer@@Base+0x98>
   2eb08:	mov	r0, #4
   2eb0c:	str	r0, [sp, #12]
   2eb10:	sub	r1, fp, #24
   2eb14:	str	r1, [sp, #8]
   2eb18:	str	r0, [sp]
   2eb1c:	mov	r0, #1
   2eb20:	str	r0, [sp, #4]
   2eb24:	cmp	r5, #0
   2eb28:	beq	2eb50 <flatcc_builder_embed_buffer@@Base+0xc4>
   2eb2c:	ldm	sp, {r0, r1}
   2eb30:	add	r0, r0, r5
   2eb34:	str	r0, [sp]
   2eb38:	mov	r0, sp
   2eb3c:	add	r0, r0, r1, lsl #3
   2eb40:	str	r6, [r0, #8]
   2eb44:	str	r5, [r0, #12]
   2eb48:	add	r0, r1, #1
   2eb4c:	str	r0, [sp, #4]
   2eb50:	cmp	r7, #0
   2eb54:	beq	2eb84 <flatcc_builder_embed_buffer@@Base+0xf8>
   2eb58:	ldm	sp, {r0, r1}
   2eb5c:	add	r0, r0, r7
   2eb60:	str	r0, [sp]
   2eb64:	mov	r0, sp
   2eb68:	add	r0, r0, r1, lsl #3
   2eb6c:	movw	r2, #61005	; 0xee4d
   2eb70:	movt	r2, #4
   2eb74:	str	r2, [r0, #8]
   2eb78:	str	r7, [r0, #12]
   2eb7c:	add	r0, r1, #1
   2eb80:	str	r0, [sp, #4]
   2eb84:	mov	r1, sp
   2eb88:	mov	r0, r4
   2eb8c:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   2eb90:	sub	sp, fp, #16
   2eb94:	pop	{r4, r5, r6, r7, fp, pc}
   2eb98:	push	{r4, r5, r6, r7, fp, lr}
   2eb9c:	add	fp, sp, #16
   2eba0:	sub	sp, sp, #72	; 0x48
   2eba4:	mov	r6, r3
   2eba8:	mov	r5, r2
   2ebac:	mov	r7, r1
   2ebb0:	mov	r4, r0
   2ebb4:	cmp	r2, #0
   2ebb8:	bne	2ebc8 <flatcc_builder_embed_buffer@@Base+0x13c>
   2ebbc:	ldrh	r5, [r4, #132]	; 0x84
   2ebc0:	cmp	r5, #0
   2ebc4:	movweq	r5, #1
   2ebc8:	mov	r0, r7
   2ebcc:	mov	r1, #4
   2ebd0:	bl	2fa40 <flatcc_builder_start_vector@@Base+0x80>
   2ebd4:	mov	r0, r7
   2ebd8:	mov	r1, r5
   2ebdc:	bl	2fa40 <flatcc_builder_start_vector@@Base+0x80>
   2ebe0:	cmp	r6, #0
   2ebe4:	bne	2ec2c <flatcc_builder_embed_buffer@@Base+0x1a0>
   2ebe8:	mov	r0, r4
   2ebec:	mov	r1, r5
   2ebf0:	bl	31720 <flatcc_builder_get_emit_context@@Base+0x8>
   2ebf4:	cmp	r0, #0
   2ebf8:	beq	2ec2c <flatcc_builder_embed_buffer@@Base+0x1a0>
   2ebfc:	str	r0, [sp, #12]
   2ec00:	movw	r1, #61005	; 0xee4d
   2ec04:	movt	r1, #4
   2ec08:	str	r1, [sp, #8]
   2ec0c:	str	r0, [sp]
   2ec10:	mov	r0, #1
   2ec14:	str	r0, [sp, #4]
   2ec18:	mov	r1, sp
   2ec1c:	mov	r0, r4
   2ec20:	bl	2fdcc <flatcc_builder_create_vtable@@Base+0x80>
   2ec24:	cmp	r0, #0
   2ec28:	beq	2ec34 <flatcc_builder_embed_buffer@@Base+0x1a8>
   2ec2c:	sub	sp, fp, #16
   2ec30:	pop	{r4, r5, r6, r7, fp, pc}
   2ec34:	movw	r0, #25261	; 0x62ad
   2ec38:	movt	r0, #4
   2ec3c:	movw	r1, #61535	; 0xf05f
   2ec40:	movt	r1, #4
   2ec44:	movw	r3, #130	; 0x82
   2ec48:	movt	r3, #5
   2ec4c:	movw	r2, #702	; 0x2be
   2ec50:	bl	14984 <__assert_fail@plt>
   2ec54:	ldr	r0, [r0, #136]	; 0x88
   2ec58:	sub	r0, r0, r1
   2ec5c:	sub	r1, r2, #1
   2ec60:	and	r0, r0, r1
   2ec64:	bx	lr
   2ec68:	bx	lr
   2ec6c:	push	{r4, r5, fp, lr}
   2ec70:	add	fp, sp, #8
   2ec74:	sub	sp, sp, #8
   2ec78:	ldr	r3, [r1]
   2ec7c:	cmp	r3, #0
   2ec80:	ble	2ece0 <flatcc_builder_embed_buffer@@Base+0x254>
   2ec84:	mov	r4, r0
   2ec88:	ldr	r0, [r0, #136]	; 0x88
   2ec8c:	sub	r5, r0, r3
   2ec90:	ldr	r2, [r1, #4]
   2ec94:	ldr	r0, [r4, #36]	; 0x24
   2ec98:	ldr	ip, [r4, #44]	; 0x2c
   2ec9c:	str	r3, [sp]
   2eca0:	add	r1, r1, #8
   2eca4:	mov	r3, r5
   2eca8:	blx	ip
   2ecac:	cmp	r0, #0
   2ecb0:	streq	r5, [r4, #136]	; 0x88
   2ecb4:	moveq	r0, r5
   2ecb8:	subeq	sp, fp, #8
   2ecbc:	popeq	{r4, r5, fp, pc}
   2ecc0:	movw	r0, #25261	; 0x62ad
   2ecc4:	movt	r0, #4
   2ecc8:	movw	r1, #61535	; 0xf05f
   2eccc:	movt	r1, #4
   2ecd0:	movw	r3, #196	; 0xc4
   2ecd4:	movt	r3, #5
   2ecd8:	movw	r2, #651	; 0x28b
   2ecdc:	bl	14984 <__assert_fail@plt>
   2ece0:	movw	r0, #25261	; 0x62ad
   2ece4:	movt	r0, #4
   2ece8:	movw	r1, #61535	; 0xf05f
   2ecec:	movt	r1, #4
   2ecf0:	movw	r3, #196	; 0xc4
   2ecf4:	movt	r3, #5
   2ecf8:	movw	r2, #647	; 0x287
   2ecfc:	bl	14984 <__assert_fail@plt>

0002ed00 <flatcc_builder_create_buffer@@Base>:
   2ed00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ed04:	add	fp, sp, #28
   2ed08:	sub	sp, sp, #92	; 0x5c
   2ed0c:	mov	r6, r3
   2ed10:	mov	r7, r1
   2ed14:	mov	r4, r0
   2ed18:	ldr	r0, [fp, #8]
   2ed1c:	strh	r0, [fp, #-30]	; 0xffffffe2
   2ed20:	mov	r0, #0
   2ed24:	str	r0, [sp, #4]
   2ed28:	ldr	sl, [fp, #12]
   2ed2c:	and	r9, sl, #1
   2ed30:	sub	r1, fp, #30
   2ed34:	mov	r0, r4
   2ed38:	mov	r3, r9
   2ed3c:	bl	2eb98 <flatcc_builder_embed_buffer@@Base+0x10c>
   2ed40:	ldrh	r5, [fp, #-30]	; 0xffffffe2
   2ed44:	mov	r0, r4
   2ed48:	mov	r1, r5
   2ed4c:	bl	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>
   2ed50:	cmp	r7, #0
   2ed54:	str	r6, [sp]
   2ed58:	beq	2ed74 <flatcc_builder_create_buffer@@Base+0x74>
   2ed5c:	ldr	r7, [r7]
   2ed60:	mov	r0, r7
   2ed64:	bl	2eedc <flatcc_builder_create_buffer@@Base+0x1dc>
   2ed68:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ed6c:	str	r7, [sp, #4]
   2ed70:	b	2ed78 <flatcc_builder_create_buffer@@Base+0x78>
   2ed74:	ldr	r7, [sp, #4]
   2ed78:	mov	r8, #4
   2ed7c:	and	r0, r8, sl, lsl #1
   2ed80:	cmp	r7, #0
   2ed84:	mov	r6, r7
   2ed88:	movwne	r6, #1
   2ed8c:	add	r0, r0, r6, lsl #2
   2ed90:	add	r1, r0, #4
   2ed94:	mov	r0, r4
   2ed98:	mov	r2, r5
   2ed9c:	bl	2ec54 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2eda0:	mov	r1, #0
   2eda4:	str	r1, [sp, #12]
   2eda8:	str	r1, [sp, #8]
   2edac:	ands	ip, sl, #3
   2edb0:	strne	r8, [sp, #20]
   2edb4:	subne	r1, fp, #40	; 0x28
   2edb8:	strne	r1, [sp, #16]
   2edbc:	strne	r8, [sp, #8]
   2edc0:	movne	r1, #1
   2edc4:	strne	r1, [sp, #12]
   2edc8:	ldr	r1, [sp, #8]
   2edcc:	ldr	r3, [sp, #12]
   2edd0:	add	r5, r1, #4
   2edd4:	str	r5, [sp, #8]
   2edd8:	add	lr, sp, #8
   2eddc:	add	r1, lr, r3, lsl #3
   2ede0:	sub	r2, fp, #36	; 0x24
   2ede4:	str	r2, [r1, #8]
   2ede8:	str	r8, [r1, #12]
   2edec:	add	r1, r3, #1
   2edf0:	str	r1, [sp, #12]
   2edf4:	cmp	r7, #0
   2edf8:	beq	2ee20 <flatcc_builder_create_buffer@@Base+0x120>
   2edfc:	lsl	r2, r6, #2
   2ee00:	add	r5, r5, r2
   2ee04:	str	r5, [sp, #8]
   2ee08:	add	r1, lr, r1, lsl #3
   2ee0c:	add	r5, sp, #4
   2ee10:	str	r5, [r1, #8]
   2ee14:	str	r2, [r1, #12]
   2ee18:	add	r1, r3, #2
   2ee1c:	str	r1, [sp, #12]
   2ee20:	cmp	r0, #0
   2ee24:	beq	2ee54 <flatcc_builder_create_buffer@@Base+0x154>
   2ee28:	ldr	r1, [sp, #8]
   2ee2c:	ldr	r2, [sp, #12]
   2ee30:	add	r1, r1, r0
   2ee34:	str	r1, [sp, #8]
   2ee38:	add	r1, lr, r2, lsl #3
   2ee3c:	movw	r3, #61005	; 0xee4d
   2ee40:	movt	r3, #4
   2ee44:	str	r3, [r1, #8]
   2ee48:	str	r0, [r1, #12]
   2ee4c:	add	r0, r2, #1
   2ee50:	str	r0, [sp, #12]
   2ee54:	ldr	r0, [r4, #136]	; 0x88
   2ee58:	ldr	r1, [sp, #8]
   2ee5c:	sub	r5, r0, r1
   2ee60:	cmp	ip, #0
   2ee64:	addne	r5, r5, #4
   2ee68:	mov	r0, #144	; 0x90
   2ee6c:	cmp	r9, #0
   2ee70:	movweq	r0, #140	; 0x8c
   2ee74:	ldr	r0, [r4, r0]
   2ee78:	sub	r0, r0, r5
   2ee7c:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ee80:	str	r0, [fp, #-40]	; 0xffffffd8
   2ee84:	ldr	r0, [sp]
   2ee88:	sub	r0, r0, r5
   2ee8c:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ee90:	str	r0, [fp, #-36]	; 0xffffffdc
   2ee94:	add	r1, sp, #8
   2ee98:	mov	r0, r4
   2ee9c:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   2eea0:	cmp	r0, #0
   2eea4:	subne	sp, fp, #28
   2eea8:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eeac:	movw	r0, #25261	; 0x62ad
   2eeb0:	movt	r0, #4
   2eeb4:	movw	r1, #61535	; 0xf05f
   2eeb8:	movt	r1, #4
   2eebc:	movw	r3, #61850	; 0xf19a
   2eec0:	movt	r3, #4
   2eec4:	mov	r2, #772	; 0x304
   2eec8:	bl	14984 <__assert_fail@plt>
   2eecc:	ldrh	r2, [r0, #128]	; 0x80
   2eed0:	cmp	r2, r1
   2eed4:	strhcc	r1, [r0, #128]	; 0x80
   2eed8:	bx	lr
   2eedc:	bx	lr

0002eee0 <flatcc_builder_create_struct@@Base>:
   2eee0:	push	{r4, r5, r6, r7, fp, lr}
   2eee4:	add	fp, sp, #16
   2eee8:	sub	sp, sp, #72	; 0x48
   2eeec:	cmp	r3, #0
   2eef0:	beq	2ef88 <flatcc_builder_create_struct@@Base+0xa8>
   2eef4:	mov	r7, r3
   2eef8:	mov	r5, r2
   2eefc:	mov	r6, r1
   2ef00:	mov	r4, r0
   2ef04:	mov	r1, r3
   2ef08:	bl	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>
   2ef0c:	mov	r0, r4
   2ef10:	mov	r1, r5
   2ef14:	mov	r2, r7
   2ef18:	bl	2ec54 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2ef1c:	mov	r1, #0
   2ef20:	str	r1, [sp, #4]
   2ef24:	str	r1, [sp]
   2ef28:	cmp	r5, #0
   2ef2c:	strne	r5, [sp, #12]
   2ef30:	strne	r6, [sp, #8]
   2ef34:	strne	r5, [sp]
   2ef38:	movne	r1, #1
   2ef3c:	strne	r1, [sp, #4]
   2ef40:	cmp	r0, #0
   2ef44:	beq	2ef74 <flatcc_builder_create_struct@@Base+0x94>
   2ef48:	ldm	sp, {r1, r2}
   2ef4c:	add	r1, r1, r0
   2ef50:	str	r1, [sp]
   2ef54:	mov	r1, sp
   2ef58:	add	r1, r1, r2, lsl #3
   2ef5c:	movw	r3, #61005	; 0xee4d
   2ef60:	movt	r3, #4
   2ef64:	str	r3, [r1, #8]
   2ef68:	str	r0, [r1, #12]
   2ef6c:	add	r0, r2, #1
   2ef70:	str	r0, [sp, #4]
   2ef74:	mov	r1, sp
   2ef78:	mov	r0, r4
   2ef7c:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   2ef80:	sub	sp, fp, #16
   2ef84:	pop	{r4, r5, r6, r7, fp, pc}
   2ef88:	movw	r0, #61981	; 0xf21d
   2ef8c:	movt	r0, #4
   2ef90:	movw	r1, #61535	; 0xf05f
   2ef94:	movt	r1, #4
   2ef98:	movw	r3, #61992	; 0xf228
   2ef9c:	movt	r3, #4
   2efa0:	movw	r2, #783	; 0x30f
   2efa4:	bl	14984 <__assert_fail@plt>

0002efa8 <flatcc_builder_start_buffer@@Base>:
   2efa8:	push	{r4, r5, r6, r7, fp, lr}
   2efac:	add	fp, sp, #16
   2efb0:	mov	r6, r3
   2efb4:	mov	r7, r2
   2efb8:	mov	r5, r1
   2efbc:	mov	r4, r0
   2efc0:	ldrh	r1, [r0, #128]	; 0x80
   2efc4:	bl	2f064 <flatcc_builder_start_buffer@@Base+0xbc>
   2efc8:	mov	r1, r0
   2efcc:	mvn	r0, #0
   2efd0:	cmp	r1, #0
   2efd4:	popne	{r4, r5, r6, r7, fp, pc}
   2efd8:	mov	r0, #1
   2efdc:	strh	r0, [r4, #128]	; 0x80
   2efe0:	ldrh	r1, [r4, #132]	; 0x84
   2efe4:	ldr	r2, [r4, #32]
   2efe8:	strh	r1, [r2, #34]	; 0x22
   2efec:	strh	r7, [r4, #132]	; 0x84
   2eff0:	ldrh	r1, [r4, #164]	; 0xa4
   2eff4:	ldr	r2, [r4, #32]
   2eff8:	strh	r1, [r2, #32]
   2effc:	strh	r6, [r4, #164]	; 0xa4
   2f000:	ldr	r1, [r4, #32]
   2f004:	ldr	r2, [r4, #144]	; 0x90
   2f008:	str	r2, [r1, #20]
   2f00c:	ldr	r1, [r4, #32]
   2f010:	ldr	r2, [r4, #152]	; 0x98
   2f014:	str	r2, [r1, #28]
   2f018:	ldr	r1, [r4, #32]
   2f01c:	ldr	r2, [r4, #136]	; 0x88
   2f020:	ldr	r3, [r4, #148]	; 0x94
   2f024:	ldr	r7, [r4, #168]	; 0xa8
   2f028:	add	r6, r3, #1
   2f02c:	str	r2, [r4, #144]	; 0x90
   2f030:	str	r6, [r4, #148]	; 0x94
   2f034:	str	r3, [r4, #152]	; 0x98
   2f038:	str	r7, [r1, #16]
   2f03c:	movw	r1, #61005	; 0xee4d
   2f040:	movt	r1, #4
   2f044:	cmp	r5, #0
   2f048:	movne	r1, r5
   2f04c:	ldr	r1, [r1]
   2f050:	str	r1, [r4, #168]	; 0xa8
   2f054:	ldr	r1, [r4, #32]
   2f058:	strh	r0, [r1, #14]
   2f05c:	mov	r0, #0
   2f060:	pop	{r4, r5, r6, r7, fp, pc}
   2f064:	push	{r4, r5, r6, sl, fp, lr}
   2f068:	add	fp, sp, #16
   2f06c:	sub	sp, sp, #8
   2f070:	mov	r5, r1
   2f074:	mov	r4, r0
   2f078:	ldr	r1, [r0, #156]	; 0x9c
   2f07c:	ldr	r2, [r0, #160]	; 0xa0
   2f080:	add	r0, r1, #1
   2f084:	str	r0, [r4, #156]	; 0x9c
   2f088:	cmp	r1, r2
   2f08c:	bge	2f0a0 <flatcc_builder_start_buffer@@Base+0xf8>
   2f090:	ldr	r0, [r4, #32]
   2f094:	add	r0, r0, #36	; 0x24
   2f098:	str	r0, [r4, #32]
   2f09c:	b	2f114 <flatcc_builder_start_buffer@@Base+0x16c>
   2f0a0:	ldr	r2, [r4, #176]	; 0xb0
   2f0a4:	mvn	r6, #0
   2f0a8:	cmp	r2, #1
   2f0ac:	cmpge	r1, r2
   2f0b0:	bge	2f150 <flatcc_builder_start_buffer@@Base+0x1a8>
   2f0b4:	mov	r1, #0
   2f0b8:	str	r1, [sp]
   2f0bc:	add	r0, r0, r0, lsl #3
   2f0c0:	mvn	r1, #35	; 0x23
   2f0c4:	add	r2, r1, r0, lsl #2
   2f0c8:	mov	r0, r4
   2f0cc:	mov	r1, #4
   2f0d0:	mov	r3, #36	; 0x24
   2f0d4:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2f0d8:	str	r0, [r4, #32]
   2f0dc:	cmp	r0, #0
   2f0e0:	beq	2f150 <flatcc_builder_start_buffer@@Base+0x1a8>
   2f0e4:	ldr	r0, [r4, #88]	; 0x58
   2f0e8:	ldr	r1, [r4, #176]	; 0xb0
   2f0ec:	movw	r2, #36409	; 0x8e39
   2f0f0:	movt	r2, #14563	; 0x38e3
   2f0f4:	umull	r0, r2, r0, r2
   2f0f8:	lsr	r0, r2, #3
   2f0fc:	cmp	r1, r2, lsr #3
   2f100:	mov	r2, r0
   2f104:	movlt	r2, r1
   2f108:	cmp	r1, #0
   2f10c:	movle	r2, r0
   2f110:	str	r2, [r4, #160]	; 0xa0
   2f114:	ldr	r0, [r4, #20]
   2f118:	ldr	r1, [r4, #32]
   2f11c:	str	r0, [r1, #8]
   2f120:	ldrh	r2, [r4, #130]	; 0x82
   2f124:	strh	r2, [r1, #12]
   2f128:	strh	r5, [r4, #130]	; 0x82
   2f12c:	ldr	r2, [r4, #28]
   2f130:	mvn	r3, #3
   2f134:	stm	r1, {r2, r3}
   2f138:	mov	r6, #0
   2f13c:	str	r6, [r4, #20]
   2f140:	add	r0, r0, r2
   2f144:	add	r0, r0, #7
   2f148:	bic	r0, r0, #7
   2f14c:	str	r0, [r4, #28]
   2f150:	mov	r0, r6
   2f154:	sub	sp, fp, #16
   2f158:	pop	{r4, r5, r6, sl, fp, pc}

0002f15c <flatcc_builder_end_buffer@@Base>:
   2f15c:	push	{r4, r5, r6, r7, fp, lr}
   2f160:	add	fp, sp, #16
   2f164:	sub	sp, sp, #8
   2f168:	mov	r4, r0
   2f16c:	ldr	r0, [r0, #32]
   2f170:	ldrh	r0, [r0, #14]
   2f174:	cmp	r0, #1
   2f178:	bne	2f204 <flatcc_builder_end_buffer@@Base+0xa8>
   2f17c:	mov	r5, r1
   2f180:	ldr	r6, [r4, #152]	; 0x98
   2f184:	ldrh	r7, [r4, #164]	; 0xa4
   2f188:	ldrh	r1, [r4, #132]	; 0x84
   2f18c:	mov	r0, r4
   2f190:	bl	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>
   2f194:	and	r0, r7, #2
   2f198:	cmp	r6, #0
   2f19c:	orrne	r0, r0, #1
   2f1a0:	ldrh	r2, [r4, #132]	; 0x84
   2f1a4:	ldrh	r1, [r4, #128]	; 0x80
   2f1a8:	str	r1, [sp]
   2f1ac:	str	r0, [sp, #4]
   2f1b0:	add	r1, r4, #168	; 0xa8
   2f1b4:	mov	r0, r4
   2f1b8:	mov	r3, r5
   2f1bc:	bl	2ed00 <flatcc_builder_create_buffer@@Base>
   2f1c0:	mov	r5, r0
   2f1c4:	cmp	r0, #0
   2f1c8:	beq	2f1f8 <flatcc_builder_end_buffer@@Base+0x9c>
   2f1cc:	ldr	r0, [r4, #32]
   2f1d0:	ldr	r1, [r0, #20]
   2f1d4:	str	r1, [r4, #144]	; 0x90
   2f1d8:	ldr	r1, [r0, #28]
   2f1dc:	str	r1, [r4, #152]	; 0x98
   2f1e0:	ldr	r1, [r0, #16]
   2f1e4:	str	r1, [r4, #168]	; 0xa8
   2f1e8:	ldrh	r0, [r0, #32]
   2f1ec:	strh	r0, [r4, #164]	; 0xa4
   2f1f0:	mov	r0, r4
   2f1f4:	bl	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   2f1f8:	mov	r0, r5
   2f1fc:	sub	sp, fp, #16
   2f200:	pop	{r4, r5, r6, r7, fp, pc}
   2f204:	movw	r0, #62094	; 0xf28e
   2f208:	movt	r0, #4
   2f20c:	movw	r1, #61535	; 0xf05f
   2f210:	movt	r1, #4
   2f214:	movw	r3, #62138	; 0xf2ba
   2f218:	movt	r3, #4
   2f21c:	movw	r2, #838	; 0x346
   2f220:	bl	14984 <__assert_fail@plt>
   2f224:	push	{r4, sl, fp, lr}
   2f228:	add	fp, sp, #8
   2f22c:	mov	r4, r0
   2f230:	ldr	r0, [r0, #16]
   2f234:	ldr	r2, [r4, #20]
   2f238:	mov	r1, #0
   2f23c:	bl	148dc <memset@plt>
   2f240:	ldr	r0, [r4, #32]
   2f244:	ldr	r1, [r0, #8]
   2f248:	str	r1, [r4, #20]
   2f24c:	ldr	r1, [r0]
   2f250:	str	r1, [r4, #28]
   2f254:	ldr	r1, [r0, #4]
   2f258:	mov	r0, r4
   2f25c:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   2f260:	ldrh	r1, [r4, #130]	; 0x82
   2f264:	mov	r0, r4
   2f268:	bl	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>
   2f26c:	ldr	r0, [r4, #32]
   2f270:	ldr	r1, [r4, #156]	; 0x9c
   2f274:	ldrh	r2, [r0, #12]
   2f278:	sub	r0, r0, #36	; 0x24
   2f27c:	str	r0, [r4, #32]
   2f280:	sub	r0, r1, #1
   2f284:	str	r0, [r4, #156]	; 0x9c
   2f288:	strh	r2, [r4, #130]	; 0x82
   2f28c:	pop	{r4, sl, fp, pc}

0002f290 <flatcc_builder_start_struct@@Base>:
   2f290:	push	{r4, r5, fp, lr}
   2f294:	add	fp, sp, #8
   2f298:	mov	r4, r1
   2f29c:	mov	r5, r0
   2f2a0:	mov	r1, r2
   2f2a4:	bl	2f064 <flatcc_builder_start_buffer@@Base+0xbc>
   2f2a8:	cmp	r0, #0
   2f2ac:	movne	r0, #0
   2f2b0:	popne	{r4, r5, fp, pc}
   2f2b4:	ldr	r0, [r5, #32]
   2f2b8:	mov	r1, #2
   2f2bc:	strh	r1, [r0, #14]
   2f2c0:	mov	r0, r5
   2f2c4:	mvn	r1, #3
   2f2c8:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   2f2cc:	mov	r0, r5
   2f2d0:	mov	r1, r4
   2f2d4:	pop	{r4, r5, fp, lr}
   2f2d8:	b	2f314 <flatcc_builder_start_struct@@Base+0x84>
   2f2dc:	push	{fp, lr}
   2f2e0:	mov	fp, sp
   2f2e4:	ldr	r2, [r0, #28]
   2f2e8:	ldr	ip, [r0, #32]
   2f2ec:	ldr	r3, [r0, #60]	; 0x3c
   2f2f0:	ldr	lr, [r0, #64]	; 0x40
   2f2f4:	add	r3, r3, r2
   2f2f8:	str	r3, [r0, #16]
   2f2fc:	sub	r2, lr, r2
   2f300:	cmp	r2, r1
   2f304:	movhi	r2, r1
   2f308:	str	r2, [r0, #24]
   2f30c:	str	r1, [ip, #4]
   2f310:	pop	{fp, pc}
   2f314:	push	{r4, r5, fp, lr}
   2f318:	add	fp, sp, #8
   2f31c:	mov	r4, r0
   2f320:	ldr	r5, [r0, #20]
   2f324:	ldr	r2, [r0, #24]
   2f328:	add	r0, r5, r1
   2f32c:	str	r0, [r4, #20]
   2f330:	cmp	r0, r2
   2f334:	bcc	2f358 <flatcc_builder_start_struct@@Base+0xc8>
   2f338:	add	r1, r0, #1
   2f33c:	mov	r0, r4
   2f340:	mvn	r2, #3
   2f344:	bl	31730 <flatcc_builder_get_emit_context@@Base+0x18>
   2f348:	mov	r1, r0
   2f34c:	mov	r0, #0
   2f350:	cmp	r1, #0
   2f354:	popne	{r4, r5, fp, pc}
   2f358:	ldr	r0, [r4, #16]
   2f35c:	add	r0, r0, r5
   2f360:	pop	{r4, r5, fp, pc}

0002f364 <flatcc_builder_struct_edit@@Base>:
   2f364:	ldr	r0, [r0, #16]
   2f368:	bx	lr

0002f36c <flatcc_builder_end_struct@@Base>:
   2f36c:	push	{r4, r5, fp, lr}
   2f370:	add	fp, sp, #8
   2f374:	mov	r4, r0
   2f378:	ldr	r0, [r0, #32]
   2f37c:	ldrh	r0, [r0, #14]
   2f380:	cmp	r0, #2
   2f384:	bne	2f3b4 <flatcc_builder_end_struct@@Base+0x48>
   2f388:	ldrh	r3, [r4, #130]	; 0x82
   2f38c:	ldr	r1, [r4, #16]
   2f390:	ldr	r2, [r4, #20]
   2f394:	mov	r0, r4
   2f398:	bl	2eee0 <flatcc_builder_create_struct@@Base>
   2f39c:	mov	r5, r0
   2f3a0:	cmp	r0, #0
   2f3a4:	movne	r0, r4
   2f3a8:	blne	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   2f3ac:	mov	r0, r5
   2f3b0:	pop	{r4, r5, fp, pc}
   2f3b4:	movw	r0, #62227	; 0xf313
   2f3b8:	movt	r0, #4
   2f3bc:	movw	r1, #61535	; 0xf05f
   2f3c0:	movt	r1, #4
   2f3c4:	movw	r3, #62271	; 0xf33f
   2f3c8:	movt	r3, #4
   2f3cc:	mov	r2, #872	; 0x368
   2f3d0:	bl	14984 <__assert_fail@plt>

0002f3d4 <flatcc_builder_extend_vector@@Base>:
   2f3d4:	push	{r4, r5, fp, lr}
   2f3d8:	add	fp, sp, #8
   2f3dc:	mov	r5, r1
   2f3e0:	mov	r4, r0
   2f3e4:	ldr	r0, [r0, #32]
   2f3e8:	ldr	r2, [r0, #24]
   2f3ec:	mov	r0, r4
   2f3f0:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   2f3f4:	cmp	r0, #0
   2f3f8:	movne	r0, #0
   2f3fc:	popne	{r4, r5, fp, pc}
   2f400:	ldr	r0, [r4, #32]
   2f404:	ldr	r0, [r0, #16]
   2f408:	mul	r1, r0, r5
   2f40c:	mov	r0, r4
   2f410:	pop	{r4, r5, fp, lr}
   2f414:	b	2f314 <flatcc_builder_start_struct@@Base+0x84>
   2f418:	push	{fp, lr}
   2f41c:	mov	fp, sp
   2f420:	ldr	r0, [r0, #32]
   2f424:	ldr	r3, [r0, #20]
   2f428:	adds	r1, r3, r1
   2f42c:	bcs	2f440 <flatcc_builder_extend_vector@@Base+0x6c>
   2f430:	cmp	r1, r2
   2f434:	strls	r1, [r0, #20]
   2f438:	movls	r0, #0
   2f43c:	popls	{fp, pc}
   2f440:	movw	r0, #270	; 0x10e
   2f444:	movt	r0, #5
   2f448:	movw	r1, #61535	; 0xf05f
   2f44c:	movt	r1, #4
   2f450:	movw	r3, #297	; 0x129
   2f454:	movt	r3, #5
   2f458:	mov	r2, #892	; 0x37c
   2f45c:	bl	14984 <__assert_fail@plt>

0002f460 <flatcc_builder_vector_push@@Base>:
   2f460:	push	{fp, lr}
   2f464:	mov	fp, sp
   2f468:	ldr	r2, [r0, #32]
   2f46c:	ldrh	r3, [r2, #14]
   2f470:	cmp	r3, #4
   2f474:	bne	2f4a0 <flatcc_builder_vector_push@@Base+0x40>
   2f478:	ldr	ip, [r2, #20]
   2f47c:	ldr	r3, [r2, #24]
   2f480:	cmp	ip, r3
   2f484:	bhi	2f4c0 <flatcc_builder_vector_push@@Base+0x60>
   2f488:	add	r3, ip, #1
   2f48c:	str	r3, [r2, #20]
   2f490:	ldr	r2, [r0, #32]
   2f494:	ldr	r2, [r2, #16]
   2f498:	pop	{fp, lr}
   2f49c:	b	2f4e0 <flatcc_builder_vector_push@@Base+0x80>
   2f4a0:	movw	r0, #62338	; 0xf382
   2f4a4:	movt	r0, #4
   2f4a8:	movw	r1, #61535	; 0xf05f
   2f4ac:	movt	r1, #4
   2f4b0:	movw	r3, #62382	; 0xf3ae
   2f4b4:	movt	r3, #4
   2f4b8:	movw	r2, #907	; 0x38b
   2f4bc:	bl	14984 <__assert_fail@plt>
   2f4c0:	movw	r0, #62449	; 0xf3f1
   2f4c4:	movt	r0, #4
   2f4c8:	movw	r1, #61535	; 0xf05f
   2f4cc:	movt	r1, #4
   2f4d0:	movw	r3, #62382	; 0xf3ae
   2f4d4:	movt	r3, #4
   2f4d8:	mov	r2, #908	; 0x38c
   2f4dc:	bl	14984 <__assert_fail@plt>
   2f4e0:	push	{r4, r5, r6, sl, fp, lr}
   2f4e4:	add	fp, sp, #16
   2f4e8:	mov	r4, r2
   2f4ec:	mov	r5, r1
   2f4f0:	mov	r1, r2
   2f4f4:	bl	2f314 <flatcc_builder_start_struct@@Base+0x84>
   2f4f8:	mov	r6, r0
   2f4fc:	cmp	r0, #0
   2f500:	beq	2f514 <flatcc_builder_vector_push@@Base+0xb4>
   2f504:	mov	r0, r6
   2f508:	mov	r1, r5
   2f50c:	mov	r2, r4
   2f510:	bl	14810 <memcpy@plt>
   2f514:	mov	r0, r6
   2f518:	pop	{r4, r5, r6, sl, fp, pc}

0002f51c <flatcc_builder_append_vector@@Base>:
   2f51c:	push	{r4, r5, r6, sl, fp, lr}
   2f520:	add	fp, sp, #16
   2f524:	mov	r4, r1
   2f528:	mov	r6, r0
   2f52c:	ldr	r0, [r0, #32]
   2f530:	ldrh	r1, [r0, #14]
   2f534:	cmp	r1, #4
   2f538:	bne	2f57c <flatcc_builder_append_vector@@Base+0x60>
   2f53c:	mov	r5, r2
   2f540:	ldr	r2, [r0, #24]
   2f544:	mov	r0, r6
   2f548:	mov	r1, r5
   2f54c:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   2f550:	cmp	r0, #0
   2f554:	beq	2f560 <flatcc_builder_append_vector@@Base+0x44>
   2f558:	mov	r0, #0
   2f55c:	pop	{r4, r5, r6, sl, fp, pc}
   2f560:	ldr	r0, [r6, #32]
   2f564:	ldr	r0, [r0, #16]
   2f568:	mul	r2, r0, r5
   2f56c:	mov	r0, r6
   2f570:	mov	r1, r4
   2f574:	pop	{r4, r5, r6, sl, fp, lr}
   2f578:	b	2f4e0 <flatcc_builder_vector_push@@Base+0x80>
   2f57c:	movw	r0, #62338	; 0xf382
   2f580:	movt	r0, #4
   2f584:	movw	r1, #61535	; 0xf05f
   2f588:	movt	r1, #4
   2f58c:	movw	r3, #62510	; 0xf42e
   2f590:	movt	r3, #4
   2f594:	movw	r2, #915	; 0x393
   2f598:	bl	14984 <__assert_fail@plt>

0002f59c <flatcc_builder_extend_offset_vector@@Base>:
   2f59c:	push	{r4, r5, fp, lr}
   2f5a0:	add	fp, sp, #8
   2f5a4:	mov	r5, r1
   2f5a8:	mov	r4, r0
   2f5ac:	mvn	r2, #-1073741824	; 0xc0000000
   2f5b0:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   2f5b4:	cmp	r0, #0
   2f5b8:	movne	r0, #0
   2f5bc:	popne	{r4, r5, fp, pc}
   2f5c0:	lsl	r1, r5, #2
   2f5c4:	mov	r0, r4
   2f5c8:	pop	{r4, r5, fp, lr}
   2f5cc:	b	2f314 <flatcc_builder_start_struct@@Base+0x84>

0002f5d0 <flatcc_builder_offset_vector_push@@Base>:
   2f5d0:	push	{r4, r5, fp, lr}
   2f5d4:	add	fp, sp, #8
   2f5d8:	mov	r4, r1
   2f5dc:	ldr	r1, [r0, #32]
   2f5e0:	ldrh	r2, [r1, #14]
   2f5e4:	cmp	r2, #5
   2f5e8:	bne	2f620 <flatcc_builder_offset_vector_push@@Base+0x50>
   2f5ec:	ldr	r2, [r1, #20]
   2f5f0:	mov	r5, #0
   2f5f4:	cmn	r2, #-1073741823	; 0xc0000001
   2f5f8:	beq	2f618 <flatcc_builder_offset_vector_push@@Base+0x48>
   2f5fc:	add	r2, r2, #1
   2f600:	str	r2, [r1, #20]
   2f604:	mov	r1, #4
   2f608:	bl	2f314 <flatcc_builder_start_struct@@Base+0x84>
   2f60c:	cmp	r0, #0
   2f610:	strne	r4, [r0]
   2f614:	movne	r5, r0
   2f618:	mov	r0, r5
   2f61c:	pop	{r4, r5, fp, pc}
   2f620:	movw	r0, #62587	; 0xf47b
   2f624:	movt	r0, #4
   2f628:	movw	r1, #61535	; 0xf05f
   2f62c:	movt	r1, #4
   2f630:	movw	r3, #62638	; 0xf4ae
   2f634:	movt	r3, #4
   2f638:	movw	r2, #934	; 0x3a6
   2f63c:	bl	14984 <__assert_fail@plt>

0002f640 <flatcc_builder_append_offset_vector@@Base>:
   2f640:	push	{r4, r5, r6, sl, fp, lr}
   2f644:	add	fp, sp, #16
   2f648:	mov	r6, r0
   2f64c:	ldr	r0, [r0, #32]
   2f650:	ldrh	r0, [r0, #14]
   2f654:	cmp	r0, #5
   2f658:	bne	2f698 <flatcc_builder_append_offset_vector@@Base+0x58>
   2f65c:	mov	r5, r2
   2f660:	mov	r4, r1
   2f664:	mov	r0, r6
   2f668:	mov	r1, r2
   2f66c:	mvn	r2, #-1073741824	; 0xc0000000
   2f670:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   2f674:	cmp	r0, #0
   2f678:	beq	2f684 <flatcc_builder_append_offset_vector@@Base+0x44>
   2f67c:	mov	r0, #0
   2f680:	pop	{r4, r5, r6, sl, fp, pc}
   2f684:	lsl	r2, r5, #2
   2f688:	mov	r0, r6
   2f68c:	mov	r1, r4
   2f690:	pop	{r4, r5, r6, sl, fp, lr}
   2f694:	b	2f4e0 <flatcc_builder_vector_push@@Base+0x80>
   2f698:	movw	r0, #62587	; 0xf47b
   2f69c:	movt	r0, #4
   2f6a0:	movw	r1, #61535	; 0xf05f
   2f6a4:	movt	r1, #4
   2f6a8:	movw	r3, #62736	; 0xf510
   2f6ac:	movt	r3, #4
   2f6b0:	mov	r2, #948	; 0x3b4
   2f6b4:	bl	14984 <__assert_fail@plt>

0002f6b8 <flatcc_builder_extend_string@@Base>:
   2f6b8:	push	{r4, r5, fp, lr}
   2f6bc:	add	fp, sp, #8
   2f6c0:	mov	r5, r0
   2f6c4:	ldr	r0, [r0, #32]
   2f6c8:	ldrh	r0, [r0, #14]
   2f6cc:	cmp	r0, #6
   2f6d0:	bne	2f700 <flatcc_builder_extend_string@@Base+0x48>
   2f6d4:	mov	r4, r1
   2f6d8:	mov	r0, r5
   2f6dc:	mvn	r2, #0
   2f6e0:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   2f6e4:	cmp	r0, #0
   2f6e8:	movne	r0, #0
   2f6ec:	popne	{r4, r5, fp, pc}
   2f6f0:	mov	r0, r5
   2f6f4:	mov	r1, r4
   2f6f8:	pop	{r4, r5, fp, lr}
   2f6fc:	b	2f314 <flatcc_builder_start_struct@@Base+0x84>
   2f700:	movw	r0, #62852	; 0xf584
   2f704:	movt	r0, #4
   2f708:	movw	r1, #61535	; 0xf05f
   2f70c:	movt	r1, #4
   2f710:	movw	r3, #62896	; 0xf5b0
   2f714:	movt	r3, #4
   2f718:	movw	r2, #957	; 0x3bd
   2f71c:	bl	14984 <__assert_fail@plt>

0002f720 <flatcc_builder_append_string@@Base>:
   2f720:	push	{r4, r5, r6, sl, fp, lr}
   2f724:	add	fp, sp, #16
   2f728:	mov	r6, r0
   2f72c:	ldr	r0, [r0, #32]
   2f730:	ldrh	r0, [r0, #14]
   2f734:	cmp	r0, #6
   2f738:	bne	2f778 <flatcc_builder_append_string@@Base+0x58>
   2f73c:	mov	r4, r2
   2f740:	mov	r5, r1
   2f744:	mov	r0, r6
   2f748:	mov	r1, r2
   2f74c:	mvn	r2, #0
   2f750:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   2f754:	cmp	r0, #0
   2f758:	beq	2f764 <flatcc_builder_append_string@@Base+0x44>
   2f75c:	mov	r0, #0
   2f760:	pop	{r4, r5, r6, sl, fp, pc}
   2f764:	mov	r0, r6
   2f768:	mov	r1, r5
   2f76c:	mov	r2, r4
   2f770:	pop	{r4, r5, r6, sl, fp, lr}
   2f774:	b	2f4e0 <flatcc_builder_vector_push@@Base+0x80>
   2f778:	movw	r0, #62852	; 0xf584
   2f77c:	movt	r0, #4
   2f780:	movw	r1, #61535	; 0xf05f
   2f784:	movt	r1, #4
   2f788:	movw	r3, #62959	; 0xf5ef
   2f78c:	movt	r3, #4
   2f790:	movw	r2, #966	; 0x3c6
   2f794:	bl	14984 <__assert_fail@plt>

0002f798 <flatcc_builder_append_string_str@@Base>:
   2f798:	push	{r4, r5, fp, lr}
   2f79c:	add	fp, sp, #8
   2f7a0:	mov	r4, r1
   2f7a4:	mov	r5, r0
   2f7a8:	mov	r0, r1
   2f7ac:	bl	148b8 <strlen@plt>
   2f7b0:	mov	r2, r0
   2f7b4:	mov	r0, r5
   2f7b8:	mov	r1, r4
   2f7bc:	pop	{r4, r5, fp, lr}
   2f7c0:	b	2f720 <flatcc_builder_append_string@@Base>

0002f7c4 <flatcc_builder_append_string_strn@@Base>:
   2f7c4:	push	{r4, r5, fp, lr}
   2f7c8:	add	fp, sp, #8
   2f7cc:	mov	r4, r1
   2f7d0:	mov	r5, r0
   2f7d4:	mov	r0, r1
   2f7d8:	mov	r1, r2
   2f7dc:	bl	2f7f4 <flatcc_builder_append_string_strn@@Base+0x30>
   2f7e0:	mov	r2, r0
   2f7e4:	mov	r0, r5
   2f7e8:	mov	r1, r4
   2f7ec:	pop	{r4, r5, fp, lr}
   2f7f0:	b	2f720 <flatcc_builder_append_string@@Base>
   2f7f4:	push	{r4, r5, fp, lr}
   2f7f8:	add	fp, sp, #8
   2f7fc:	mov	r4, r1
   2f800:	mov	r5, r0
   2f804:	mov	r1, #0
   2f808:	mov	r2, r4
   2f80c:	bl	14900 <memchr@plt>
   2f810:	cmp	r0, #0
   2f814:	subne	r4, r0, r5
   2f818:	mov	r0, r4
   2f81c:	pop	{r4, r5, fp, pc}

0002f820 <flatcc_builder_truncate_vector@@Base>:
   2f820:	push	{fp, lr}
   2f824:	mov	fp, sp
   2f828:	ldr	r2, [r0, #32]
   2f82c:	ldrh	r3, [r2, #14]
   2f830:	cmp	r3, #4
   2f834:	bne	2f864 <flatcc_builder_truncate_vector@@Base+0x44>
   2f838:	ldr	r3, [r2, #20]
   2f83c:	cmp	r3, r1
   2f840:	bcc	2f884 <flatcc_builder_truncate_vector@@Base+0x64>
   2f844:	sub	r3, r3, r1
   2f848:	str	r3, [r2, #20]
   2f84c:	ldr	r2, [r0, #32]
   2f850:	ldr	r2, [r2, #16]
   2f854:	mul	r1, r2, r1
   2f858:	bl	2f8a4 <flatcc_builder_truncate_vector@@Base+0x84>
   2f85c:	mov	r0, #0
   2f860:	pop	{fp, pc}
   2f864:	movw	r0, #62338	; 0xf382
   2f868:	movt	r0, #4
   2f86c:	movw	r1, #61535	; 0xf05f
   2f870:	movt	r1, #4
   2f874:	movw	r3, #63036	; 0xf63c
   2f878:	movt	r3, #4
   2f87c:	movw	r2, #985	; 0x3d9
   2f880:	bl	14984 <__assert_fail@plt>
   2f884:	movw	r0, #63099	; 0xf67b
   2f888:	movt	r0, #4
   2f88c:	movw	r1, #61535	; 0xf05f
   2f890:	movt	r1, #4
   2f894:	movw	r3, #63036	; 0xf63c
   2f898:	movt	r3, #4
   2f89c:	movw	r2, #986	; 0x3da
   2f8a0:	bl	14984 <__assert_fail@plt>
   2f8a4:	mov	r2, r1
   2f8a8:	ldr	r1, [r0, #16]
   2f8ac:	ldr	r3, [r0, #20]
   2f8b0:	sub	r3, r3, r2
   2f8b4:	str	r3, [r0, #20]
   2f8b8:	add	r0, r1, r3
   2f8bc:	mov	r1, #0
   2f8c0:	b	148dc <memset@plt>

0002f8c4 <flatcc_builder_truncate_offset_vector@@Base>:
   2f8c4:	push	{fp, lr}
   2f8c8:	mov	fp, sp
   2f8cc:	ldr	r2, [r0, #32]
   2f8d0:	ldrh	r3, [r2, #14]
   2f8d4:	cmp	r3, #5
   2f8d8:	bne	2f908 <flatcc_builder_truncate_offset_vector@@Base+0x44>
   2f8dc:	ldr	r3, [r2, #20]
   2f8e0:	cmp	r3, r1
   2f8e4:	bcc	2f928 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2f8e8:	sub	r3, r3, r1
   2f8ec:	str	r3, [r2, #20]
   2f8f0:	ldr	r2, [r0, #32]
   2f8f4:	ldr	r2, [r2, #16]
   2f8f8:	mul	r1, r2, r1
   2f8fc:	bl	2f8a4 <flatcc_builder_truncate_vector@@Base+0x84>
   2f900:	mov	r0, #0
   2f904:	pop	{fp, pc}
   2f908:	movw	r0, #62587	; 0xf47b
   2f90c:	movt	r0, #4
   2f910:	movw	r1, #61535	; 0xf05f
   2f914:	movt	r1, #4
   2f918:	movw	r3, #63135	; 0xf69f
   2f91c:	movt	r3, #4
   2f920:	movw	r2, #994	; 0x3e2
   2f924:	bl	14984 <__assert_fail@plt>
   2f928:	movw	r0, #63205	; 0xf6e5
   2f92c:	movt	r0, #4
   2f930:	movw	r1, #61535	; 0xf05f
   2f934:	movt	r1, #4
   2f938:	movw	r3, #63135	; 0xf69f
   2f93c:	movt	r3, #4
   2f940:	movw	r2, #995	; 0x3e3
   2f944:	bl	14984 <__assert_fail@plt>

0002f948 <flatcc_builder_truncate_string@@Base>:
   2f948:	push	{fp, lr}
   2f94c:	mov	fp, sp
   2f950:	ldr	r2, [r0, #32]
   2f954:	ldrh	r3, [r2, #14]
   2f958:	cmp	r3, #6
   2f95c:	bne	2f980 <flatcc_builder_truncate_string@@Base+0x38>
   2f960:	ldr	r3, [r2, #20]
   2f964:	cmp	r3, r1
   2f968:	bcc	2f9a0 <flatcc_builder_truncate_string@@Base+0x58>
   2f96c:	sub	r3, r3, r1
   2f970:	str	r3, [r2, #20]
   2f974:	bl	2f8a4 <flatcc_builder_truncate_vector@@Base+0x84>
   2f978:	mov	r0, #0
   2f97c:	pop	{fp, pc}
   2f980:	movw	r0, #62852	; 0xf584
   2f984:	movt	r0, #4
   2f988:	movw	r1, #61535	; 0xf05f
   2f98c:	movt	r1, #4
   2f990:	movw	r3, #63264	; 0xf720
   2f994:	movt	r3, #4
   2f998:	movw	r2, #1003	; 0x3eb
   2f99c:	bl	14984 <__assert_fail@plt>
   2f9a0:	movw	r0, #63327	; 0xf75f
   2f9a4:	movt	r0, #4
   2f9a8:	movw	r1, #61535	; 0xf05f
   2f9ac:	movt	r1, #4
   2f9b0:	movw	r3, #63264	; 0xf720
   2f9b4:	movt	r3, #4
   2f9b8:	mov	r2, #1004	; 0x3ec
   2f9bc:	bl	14984 <__assert_fail@plt>

0002f9c0 <flatcc_builder_start_vector@@Base>:
   2f9c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f9c4:	add	fp, sp, #24
   2f9c8:	sub	sp, sp, #8
   2f9cc:	mov	r5, r3
   2f9d0:	mov	r6, r1
   2f9d4:	mov	r4, r0
   2f9d8:	strh	r2, [sp, #6]
   2f9dc:	add	r0, sp, #6
   2f9e0:	mov	r8, #4
   2f9e4:	mov	r1, #4
   2f9e8:	bl	2fa40 <flatcc_builder_start_vector@@Base+0x80>
   2f9ec:	ldrh	r1, [sp, #6]
   2f9f0:	mov	r0, r4
   2f9f4:	bl	2f064 <flatcc_builder_start_buffer@@Base+0xbc>
   2f9f8:	mvn	r7, #0
   2f9fc:	cmp	r0, #0
   2fa00:	bne	2fa34 <flatcc_builder_start_vector@@Base+0x74>
   2fa04:	ldr	r0, [r4, #32]
   2fa08:	str	r6, [r0, #16]
   2fa0c:	ldr	r0, [r4, #32]
   2fa10:	mov	r7, #0
   2fa14:	str	r7, [r0, #20]
   2fa18:	ldr	r0, [r4, #32]
   2fa1c:	str	r5, [r0, #24]
   2fa20:	ldr	r0, [r4, #32]
   2fa24:	strh	r8, [r0, #14]
   2fa28:	mov	r0, r4
   2fa2c:	mvn	r1, #3
   2fa30:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   2fa34:	mov	r0, r7
   2fa38:	sub	sp, fp, #24
   2fa3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fa40:	ldrh	r2, [r0]
   2fa44:	cmp	r2, r1
   2fa48:	strhcc	r1, [r0]
   2fa4c:	bx	lr

0002fa50 <flatcc_builder_start_offset_vector@@Base>:
   2fa50:	push	{r4, r5, r6, sl, fp, lr}
   2fa54:	add	fp, sp, #16
   2fa58:	mov	r4, r0
   2fa5c:	mov	r6, #4
   2fa60:	mov	r1, #4
   2fa64:	bl	2f064 <flatcc_builder_start_buffer@@Base+0xbc>
   2fa68:	mvn	r5, #0
   2fa6c:	cmp	r0, #0
   2fa70:	beq	2fa7c <flatcc_builder_start_offset_vector@@Base+0x2c>
   2fa74:	mov	r0, r5
   2fa78:	pop	{r4, r5, r6, sl, fp, pc}
   2fa7c:	ldr	r0, [r4, #32]
   2fa80:	str	r6, [r0, #16]
   2fa84:	ldr	r0, [r4, #32]
   2fa88:	mov	r5, #0
   2fa8c:	str	r5, [r0, #20]
   2fa90:	ldr	r0, [r4, #32]
   2fa94:	mov	r1, #5
   2fa98:	strh	r1, [r0, #14]
   2fa9c:	mov	r0, r4
   2faa0:	mvn	r1, #3
   2faa4:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   2faa8:	mov	r0, r5
   2faac:	pop	{r4, r5, r6, sl, fp, pc}

0002fab0 <flatcc_builder_create_offset_vector@@Base>:
   2fab0:	push	{r4, r5, r6, sl, fp, lr}
   2fab4:	add	fp, sp, #16
   2fab8:	mov	r6, r2
   2fabc:	mov	r5, r1
   2fac0:	mov	r4, r0
   2fac4:	bl	2fa50 <flatcc_builder_start_offset_vector@@Base>
   2fac8:	cmp	r0, #0
   2facc:	beq	2fad8 <flatcc_builder_create_offset_vector@@Base+0x28>
   2fad0:	mov	r0, #0
   2fad4:	pop	{r4, r5, r6, sl, fp, pc}
   2fad8:	mov	r0, r4
   2fadc:	mov	r1, r6
   2fae0:	bl	2f59c <flatcc_builder_extend_offset_vector@@Base>
   2fae4:	cmp	r0, #0
   2fae8:	beq	2fad0 <flatcc_builder_create_offset_vector@@Base+0x20>
   2faec:	lsl	r2, r6, #2
   2faf0:	mov	r1, r5
   2faf4:	bl	14810 <memcpy@plt>
   2faf8:	mov	r0, r4
   2fafc:	pop	{r4, r5, r6, sl, fp, lr}
   2fb00:	b	2fb04 <flatcc_builder_end_offset_vector@@Base>

0002fb04 <flatcc_builder_end_offset_vector@@Base>:
   2fb04:	push	{r4, r5, fp, lr}
   2fb08:	add	fp, sp, #8
   2fb0c:	mov	r4, r0
   2fb10:	ldr	r0, [r0, #32]
   2fb14:	ldrh	r1, [r0, #14]
   2fb18:	cmp	r1, #5
   2fb1c:	bne	2fb48 <flatcc_builder_end_offset_vector@@Base+0x44>
   2fb20:	ldr	r2, [r0, #20]
   2fb24:	ldr	r1, [r4, #16]
   2fb28:	mov	r0, r4
   2fb2c:	bl	3068c <flatcc_builder_create_offset_vector_direct@@Base>
   2fb30:	mov	r5, r0
   2fb34:	cmp	r0, #0
   2fb38:	movne	r0, r4
   2fb3c:	blne	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   2fb40:	mov	r0, r5
   2fb44:	pop	{r4, r5, fp, pc}
   2fb48:	movw	r0, #62587	; 0xf47b
   2fb4c:	movt	r0, #4
   2fb50:	movw	r1, #61535	; 0xf05f
   2fb54:	movt	r1, #4
   2fb58:	movw	r3, #64170	; 0xfaaa
   2fb5c:	movt	r3, #4
   2fb60:	movw	r2, #1480	; 0x5c8
   2fb64:	bl	14984 <__assert_fail@plt>

0002fb68 <flatcc_builder_start_string@@Base>:
   2fb68:	push	{r4, r5, r6, sl, fp, lr}
   2fb6c:	add	fp, sp, #16
   2fb70:	mov	r4, r0
   2fb74:	mov	r6, #1
   2fb78:	mov	r1, #1
   2fb7c:	bl	2f064 <flatcc_builder_start_buffer@@Base+0xbc>
   2fb80:	mvn	r5, #0
   2fb84:	cmp	r0, #0
   2fb88:	beq	2fb94 <flatcc_builder_start_string@@Base+0x2c>
   2fb8c:	mov	r0, r5
   2fb90:	pop	{r4, r5, r6, sl, fp, pc}
   2fb94:	ldr	r0, [r4, #32]
   2fb98:	str	r6, [r0, #16]
   2fb9c:	ldr	r0, [r4, #32]
   2fba0:	mov	r5, #0
   2fba4:	str	r5, [r0, #20]
   2fba8:	ldr	r0, [r4, #32]
   2fbac:	mov	r1, #6
   2fbb0:	strh	r1, [r0, #14]
   2fbb4:	mov	r0, r4
   2fbb8:	mvn	r1, #3
   2fbbc:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   2fbc0:	mov	r0, r5
   2fbc4:	pop	{r4, r5, r6, sl, fp, pc}

0002fbc8 <flatcc_builder_reserve_table@@Base>:
   2fbc8:	cmn	r1, #1
   2fbcc:	ble	2fbd4 <flatcc_builder_reserve_table@@Base+0xc>
   2fbd0:	b	2fbfc <flatcc_builder_reserve_table@@Base+0x34>
   2fbd4:	push	{fp, lr}
   2fbd8:	mov	fp, sp
   2fbdc:	movw	r0, #63426	; 0xf7c2
   2fbe0:	movt	r0, #4
   2fbe4:	movw	r1, #61535	; 0xf05f
   2fbe8:	movt	r1, #4
   2fbec:	movw	r3, #63361	; 0xf781
   2fbf0:	movt	r3, #4
   2fbf4:	movw	r2, #1065	; 0x429
   2fbf8:	bl	14984 <__assert_fail@plt>
   2fbfc:	push	{r4, r5, r6, sl, fp, lr}
   2fc00:	add	fp, sp, #16
   2fc04:	sub	sp, sp, #8
   2fc08:	mov	r6, r1
   2fc0c:	mov	r4, r0
   2fc10:	ldr	r0, [r0, #32]
   2fc14:	ldrh	r1, [r0, #28]
   2fc18:	ldr	r0, [r0, #16]
   2fc1c:	mov	r2, #1
   2fc20:	str	r2, [sp]
   2fc24:	mov	r2, #4
   2fc28:	add	r3, r2, r6, lsl #1
   2fc2c:	add	r2, r0, r1, lsl #1
   2fc30:	mov	r5, #0
   2fc34:	mov	r0, r4
   2fc38:	mov	r1, #0
   2fc3c:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fc40:	str	r0, [r4, #4]
   2fc44:	cmp	r0, #0
   2fc48:	beq	2fc84 <flatcc_builder_reserve_table@@Base+0xbc>
   2fc4c:	lsl	r1, r6, #1
   2fc50:	add	r0, r0, #4
   2fc54:	str	r0, [r4, #4]
   2fc58:	ldr	r0, [r4, #32]
   2fc5c:	ldr	r2, [r0, #20]
   2fc60:	str	r5, [sp]
   2fc64:	orr	r3, r1, #1
   2fc68:	mov	r0, r4
   2fc6c:	mov	r1, #3
   2fc70:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fc74:	str	r0, [r4]
   2fc78:	cmp	r0, #0
   2fc7c:	mvneq	r5, #0
   2fc80:	b	2fc88 <flatcc_builder_reserve_table@@Base+0xc0>
   2fc84:	mvn	r5, #0
   2fc88:	mov	r0, r5
   2fc8c:	sub	sp, fp, #16
   2fc90:	pop	{r4, r5, r6, sl, fp, pc}

0002fc94 <flatcc_builder_start_table@@Base>:
   2fc94:	push	{r4, r5, r6, sl, fp, lr}
   2fc98:	add	fp, sp, #16
   2fc9c:	mov	r6, r1
   2fca0:	mov	r4, r0
   2fca4:	mov	r1, #4
   2fca8:	bl	2f064 <flatcc_builder_start_buffer@@Base+0xbc>
   2fcac:	mvn	r5, #0
   2fcb0:	cmp	r0, #0
   2fcb4:	bne	2fd2c <flatcc_builder_start_table@@Base+0x98>
   2fcb8:	ldr	r0, [r4, #4]
   2fcbc:	ldr	r1, [r4, #32]
   2fcc0:	ldr	r2, [r4, #52]	; 0x34
   2fcc4:	sub	r0, r0, r2
   2fcc8:	str	r0, [r1, #16]
   2fccc:	ldr	r0, [r4]
   2fcd0:	ldr	r1, [r4, #32]
   2fcd4:	ldr	r2, [r4, #76]	; 0x4c
   2fcd8:	sub	r0, r0, r2
   2fcdc:	str	r0, [r1, #20]
   2fce0:	ldr	r0, [r4, #12]
   2fce4:	ldr	r1, [r4, #32]
   2fce8:	str	r0, [r1, #24]
   2fcec:	ldr	r0, [r4, #32]
   2fcf0:	ldrh	r1, [r4, #8]
   2fcf4:	strh	r1, [r0, #28]
   2fcf8:	mov	r0, #0
   2fcfc:	strh	r0, [r4, #8]
   2fd00:	movw	r0, #15186	; 0x3b52
   2fd04:	movt	r0, #12137	; 0x2f69
   2fd08:	str	r0, [r4, #12]
   2fd0c:	ldr	r0, [r4, #32]
   2fd10:	mov	r1, #3
   2fd14:	strh	r1, [r0, #14]
   2fd18:	mov	r0, r4
   2fd1c:	mov	r1, r6
   2fd20:	bl	2fbfc <flatcc_builder_reserve_table@@Base+0x34>
   2fd24:	cmp	r0, #0
   2fd28:	beq	2fd34 <flatcc_builder_start_table@@Base+0xa0>
   2fd2c:	mov	r0, r5
   2fd30:	pop	{r4, r5, r6, sl, fp, pc}
   2fd34:	mov	r0, r4
   2fd38:	movw	r1, #65532	; 0xfffc
   2fd3c:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   2fd40:	mov	r5, #0
   2fd44:	mov	r0, r5
   2fd48:	pop	{r4, r5, r6, sl, fp, pc}

0002fd4c <flatcc_builder_create_vtable@@Base>:
   2fd4c:	push	{fp, lr}
   2fd50:	mov	fp, sp
   2fd54:	sub	sp, sp, #72	; 0x48
   2fd58:	mov	r3, #0
   2fd5c:	str	r3, [sp, #4]
   2fd60:	str	r3, [sp]
   2fd64:	cmp	r2, #0
   2fd68:	strne	r2, [sp, #12]
   2fd6c:	strne	r1, [sp, #8]
   2fd70:	strne	r2, [sp]
   2fd74:	movne	r1, #1
   2fd78:	strne	r1, [sp, #4]
   2fd7c:	ldr	r1, [r0, #152]	; 0x98
   2fd80:	cmp	r1, #0
   2fd84:	bne	2fd94 <flatcc_builder_create_vtable@@Base+0x48>
   2fd88:	ldr	r1, [r0, #180]	; 0xb4
   2fd8c:	cmp	r1, #0
   2fd90:	beq	2fdb0 <flatcc_builder_create_vtable@@Base+0x64>
   2fd94:	mov	r1, sp
   2fd98:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   2fd9c:	cmp	r0, #0
   2fda0:	beq	2fdc0 <flatcc_builder_create_vtable@@Base+0x74>
   2fda4:	add	r0, r0, #1
   2fda8:	mov	sp, fp
   2fdac:	pop	{fp, pc}
   2fdb0:	mov	r1, sp
   2fdb4:	bl	2fdcc <flatcc_builder_create_vtable@@Base+0x80>
   2fdb8:	cmp	r0, #0
   2fdbc:	bne	2fda8 <flatcc_builder_create_vtable@@Base+0x5c>
   2fdc0:	mov	r0, #0
   2fdc4:	mov	sp, fp
   2fdc8:	pop	{fp, pc}
   2fdcc:	push	{r4, sl, fp, lr}
   2fdd0:	add	fp, sp, #8
   2fdd4:	sub	sp, sp, #8
   2fdd8:	ldr	r4, [r0, #140]	; 0x8c
   2fddc:	ldr	r3, [r1]
   2fde0:	add	r2, r3, r4
   2fde4:	str	r2, [r0, #140]	; 0x8c
   2fde8:	cmn	r3, #1
   2fdec:	ble	2fe40 <flatcc_builder_create_vtable@@Base+0xf4>
   2fdf0:	ldr	r2, [r1, #4]
   2fdf4:	ldr	ip, [r0, #36]	; 0x24
   2fdf8:	ldr	lr, [r0, #44]	; 0x2c
   2fdfc:	str	r3, [sp]
   2fe00:	add	r1, r1, #8
   2fe04:	mov	r0, ip
   2fe08:	mov	r3, r4
   2fe0c:	blx	lr
   2fe10:	cmp	r0, #0
   2fe14:	addeq	r0, r4, #1
   2fe18:	subeq	sp, fp, #8
   2fe1c:	popeq	{r4, sl, fp, pc}
   2fe20:	movw	r0, #25261	; 0x62ad
   2fe24:	movt	r0, #4
   2fe28:	movw	r1, #61535	; 0xf05f
   2fe2c:	movt	r1, #4
   2fe30:	movw	r3, #384	; 0x180
   2fe34:	movt	r3, #5
   2fe38:	movw	r2, #677	; 0x2a5
   2fe3c:	bl	14984 <__assert_fail@plt>
   2fe40:	movw	r0, #25261	; 0x62ad
   2fe44:	movt	r0, #4
   2fe48:	movw	r1, #61535	; 0xf05f
   2fe4c:	movt	r1, #4
   2fe50:	movw	r3, #384	; 0x180
   2fe54:	movt	r3, #5
   2fe58:	movw	r2, #673	; 0x2a1
   2fe5c:	bl	14984 <__assert_fail@plt>

0002fe60 <flatcc_builder_create_cached_vtable@@Base>:
   2fe60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fe64:	add	fp, sp, #28
   2fe68:	sub	sp, sp, #20
   2fe6c:	mov	r4, r2
   2fe70:	mov	r9, r1
   2fe74:	mov	sl, r0
   2fe78:	mov	r1, r3
   2fe7c:	bl	30058 <flatcc_builder_create_cached_vtable@@Base+0x1f8>
   2fe80:	cmp	r0, #0
   2fe84:	beq	2ffa8 <flatcc_builder_create_cached_vtable@@Base+0x148>
   2fe88:	mov	r7, r0
   2fe8c:	ldr	r6, [r0]
   2fe90:	mov	r5, #0
   2fe94:	cmp	r6, #0
   2fe98:	mov	r8, #0
   2fe9c:	beq	2ff34 <flatcc_builder_create_cached_vtable@@Base+0xd4>
   2fea0:	ldr	r5, [sl, #68]	; 0x44
   2fea4:	str	sl, [sp, #16]
   2fea8:	ldr	sl, [sl, #100]	; 0x64
   2feac:	mov	r0, #0
   2feb0:	str	r7, [sp, #8]
   2feb4:	str	r0, [sp, #12]
   2feb8:	b	2fecc <flatcc_builder_create_cached_vtable@@Base+0x6c>
   2febc:	ldr	r6, [r8, #12]!
   2fec0:	cmp	r6, #0
   2fec4:	mov	r7, r8
   2fec8:	beq	2ff24 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   2fecc:	add	r8, sl, r6
   2fed0:	ldr	r0, [r8, #8]
   2fed4:	mov	r1, r5
   2fed8:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2fedc:	cmp	r0, r4
   2fee0:	bne	2febc <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2fee4:	mov	r0, r9
   2fee8:	mov	r2, r4
   2feec:	bl	148ac <bcmp@plt>
   2fef0:	cmp	r0, #0
   2fef4:	bne	2febc <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2fef8:	ldr	r0, [sp, #16]
   2fefc:	ldr	r0, [r0, #152]	; 0x98
   2ff00:	ldr	r1, [r8, #4]
   2ff04:	cmp	r1, r0
   2ff08:	beq	30030 <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   2ff0c:	mov	r7, r8
   2ff10:	ldr	r6, [r7, #12]!
   2ff14:	cmp	r6, #0
   2ff18:	mov	r0, r8
   2ff1c:	bne	2feb4 <flatcc_builder_create_cached_vtable@@Base+0x54>
   2ff20:	b	2ff28 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2ff24:	ldr	r8, [sp, #12]
   2ff28:	ldr	sl, [sp, #16]
   2ff2c:	mov	r5, #0
   2ff30:	ldr	r7, [sp, #8]
   2ff34:	ldr	r2, [sl, #124]	; 0x7c
   2ff38:	str	r5, [sp]
   2ff3c:	mov	r0, sl
   2ff40:	mov	r1, #6
   2ff44:	mov	r3, #16
   2ff48:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2ff4c:	cmp	r0, #0
   2ff50:	beq	3001c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2ff54:	mov	r6, r0
   2ff58:	ldr	r0, [sl, #124]	; 0x7c
   2ff5c:	ldr	r1, [sl, #152]	; 0x98
   2ff60:	add	r2, r0, #16
   2ff64:	str	r2, [sl, #124]	; 0x7c
   2ff68:	str	r1, [r6, #4]
   2ff6c:	ldr	r1, [r7]
   2ff70:	str	r1, [r6, #12]
   2ff74:	str	r0, [r7]
   2ff78:	mov	r0, sl
   2ff7c:	mov	r1, r9
   2ff80:	mov	r2, r4
   2ff84:	bl	2fd4c <flatcc_builder_create_vtable@@Base>
   2ff88:	str	r0, [r6]
   2ff8c:	cmp	r0, #0
   2ff90:	beq	3001c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2ff94:	cmp	r8, #0
   2ff98:	beq	2ffb0 <flatcc_builder_create_cached_vtable@@Base+0x150>
   2ff9c:	ldr	r0, [r8, #8]
   2ffa0:	str	r0, [r6, #8]
   2ffa4:	b	30018 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   2ffa8:	mov	r5, #0
   2ffac:	b	3001c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2ffb0:	ldr	r0, [sl, #172]	; 0xac
   2ffb4:	cmp	r0, #0
   2ffb8:	beq	2ffd8 <flatcc_builder_create_cached_vtable@@Base+0x178>
   2ffbc:	ldr	r1, [sl, #120]	; 0x78
   2ffc0:	add	r1, r1, r4
   2ffc4:	cmp	r0, r1
   2ffc8:	bcs	2ffd8 <flatcc_builder_create_cached_vtable@@Base+0x178>
   2ffcc:	mov	r0, sl
   2ffd0:	bl	2e5e4 <flatcc_builder_flush_vtable_cache@@Base>
   2ffd4:	b	30018 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   2ffd8:	ldr	r2, [sl, #120]	; 0x78
   2ffdc:	mov	r0, #0
   2ffe0:	str	r0, [sp]
   2ffe4:	mov	r0, sl
   2ffe8:	mov	r1, #2
   2ffec:	mov	r3, r4
   2fff0:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fff4:	cmp	r0, #0
   2fff8:	beq	30028 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
   2fffc:	ldr	r1, [sl, #120]	; 0x78
   30000:	str	r1, [r6, #8]
   30004:	add	r1, r1, r4
   30008:	str	r1, [sl, #120]	; 0x78
   3000c:	mov	r1, r9
   30010:	mov	r2, r4
   30014:	bl	14810 <memcpy@plt>
   30018:	ldr	r5, [r6]
   3001c:	mov	r0, r5
   30020:	sub	sp, fp, #28
   30024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30028:	mvn	r5, #0
   3002c:	b	3001c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30030:	ldr	r1, [sp, #8]
   30034:	cmp	r7, r1
   30038:	beq	30050 <flatcc_builder_create_cached_vtable@@Base+0x1f0>
   3003c:	ldr	r0, [r8, #12]
   30040:	str	r0, [r7]
   30044:	ldr	r0, [r1]
   30048:	str	r0, [r8, #12]
   3004c:	str	r6, [r1]
   30050:	ldr	r5, [r8]
   30054:	b	3001c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30058:	push	{r4, r5, fp, lr}
   3005c:	add	fp, sp, #8
   30060:	mov	r4, r1
   30064:	mov	r5, r0
   30068:	ldr	r0, [r0, #116]	; 0x74
   3006c:	cmp	r0, #0
   30070:	bne	3008c <flatcc_builder_create_cached_vtable@@Base+0x22c>
   30074:	mov	r0, r5
   30078:	bl	31798 <flatcc_builder_get_emit_context@@Base+0x80>
   3007c:	mov	r1, r0
   30080:	mov	r0, #0
   30084:	cmp	r1, #0
   30088:	popne	{r4, r5, fp, pc}
   3008c:	ldr	r0, [r5, #92]	; 0x5c
   30090:	ldr	r1, [r5, #116]	; 0x74
   30094:	rsb	r1, r1, #32
   30098:	lsr	r1, r4, r1
   3009c:	add	r0, r0, r1, lsl #2
   300a0:	pop	{r4, r5, fp, pc}

000300a4 <flatcc_builder_create_table@@Base>:
   300a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   300a8:	add	fp, sp, #28
   300ac:	sub	sp, sp, #84	; 0x54
   300b0:	strh	r3, [fp, #-30]	; 0xffffffe2
   300b4:	ldr	r4, [fp, #12]
   300b8:	cmn	r4, #1
   300bc:	ble	301e4 <flatcc_builder_create_table@@Base+0x140>
   300c0:	ldr	r8, [fp, #16]
   300c4:	tst	r8, #1
   300c8:	beq	30204 <flatcc_builder_create_table@@Base+0x160>
   300cc:	mov	sl, r2
   300d0:	mov	r6, r1
   300d4:	mov	r5, r0
   300d8:	sub	r0, fp, #30
   300dc:	mov	r1, #4
   300e0:	bl	2fa40 <flatcc_builder_start_vector@@Base+0x80>
   300e4:	ldrh	r7, [fp, #-30]	; 0xffffffe2
   300e8:	mov	r0, r5
   300ec:	mov	r1, r7
   300f0:	bl	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>
   300f4:	mov	r0, r5
   300f8:	mov	r1, sl
   300fc:	mov	r2, r7
   30100:	bl	2ec54 <flatcc_builder_embed_buffer@@Base+0x1c8>
   30104:	mov	r9, r0
   30108:	add	r0, sl, r0
   3010c:	str	r5, [sp]
   30110:	ldr	r1, [r5, #136]	; 0x88
   30114:	sub	r0, r1, r0
   30118:	sub	r5, r0, #4
   3011c:	sub	r0, r5, r8
   30120:	add	r0, r0, #1
   30124:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30128:	str	r0, [fp, #-36]	; 0xffffffdc
   3012c:	cmp	r4, #1
   30130:	blt	30160 <flatcc_builder_create_table@@Base+0xbc>
   30134:	ldr	r7, [fp, #8]
   30138:	mvn	r0, #3
   3013c:	sub	r5, r0, r5
   30140:	ldrh	r8, [r7], #2
   30144:	ldr	r0, [r8, r6]
   30148:	add	r0, r5, r0
   3014c:	sub	r0, r0, r8
   30150:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30154:	str	r0, [r8, r6]
   30158:	subs	r4, r4, #1
   3015c:	bne	30140 <flatcc_builder_create_table@@Base+0x9c>
   30160:	mov	r1, #4
   30164:	str	r1, [sp, #16]
   30168:	sub	r0, fp, #36	; 0x24
   3016c:	str	r0, [sp, #12]
   30170:	str	r1, [sp, #4]
   30174:	mov	r0, #1
   30178:	str	r0, [sp, #8]
   3017c:	cmp	sl, #0
   30180:	strne	sl, [sp, #24]
   30184:	strne	r6, [sp, #20]
   30188:	movne	r0, #2
   3018c:	strne	r0, [sp, #8]
   30190:	addne	r0, sl, #4
   30194:	strne	r0, [sp, #4]
   30198:	cmp	r9, #0
   3019c:	ldr	r0, [sp]
   301a0:	beq	301d4 <flatcc_builder_create_table@@Base+0x130>
   301a4:	ldr	r2, [sp, #4]
   301a8:	ldr	r1, [sp, #8]
   301ac:	add	r2, r2, r9
   301b0:	str	r2, [sp, #4]
   301b4:	add	r2, sp, #4
   301b8:	add	r3, r2, r1, lsl #3
   301bc:	movw	r2, #61005	; 0xee4d
   301c0:	movt	r2, #4
   301c4:	str	r2, [r3, #8]
   301c8:	str	r9, [r3, #12]
   301cc:	add	r1, r1, #1
   301d0:	str	r1, [sp, #8]
   301d4:	add	r1, sp, #4
   301d8:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   301dc:	sub	sp, fp, #28
   301e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   301e4:	movw	r0, #63419	; 0xf7bb
   301e8:	movt	r0, #4
   301ec:	movw	r1, #61535	; 0xf05f
   301f0:	movt	r1, #4
   301f4:	movw	r3, #63437	; 0xf7cd
   301f8:	movt	r3, #4
   301fc:	movw	r2, #1237	; 0x4d5
   30200:	bl	14984 <__assert_fail@plt>
   30204:	movw	r0, #63593	; 0xf869
   30208:	movt	r0, #4
   3020c:	movw	r1, #61535	; 0xf05f
   30210:	movt	r1, #4
   30214:	movw	r3, #63437	; 0xf7cd
   30218:	movt	r3, #4
   3021c:	movw	r2, #1243	; 0x4db
   30220:	bl	14984 <__assert_fail@plt>

00030224 <flatcc_builder_check_required_field@@Base>:
   30224:	push	{fp, lr}
   30228:	mov	fp, sp
   3022c:	ldr	r2, [r0, #32]
   30230:	ldrh	r2, [r2, #14]
   30234:	cmp	r2, #3
   30238:	bne	30268 <flatcc_builder_check_required_field@@Base+0x44>
   3023c:	ldrh	r3, [r0, #8]
   30240:	mov	r2, #0
   30244:	cmp	r3, r1
   30248:	bls	30260 <flatcc_builder_check_required_field@@Base+0x3c>
   3024c:	ldr	r0, [r0, #4]
   30250:	add	r0, r0, r1, lsl #1
   30254:	ldrh	r2, [r0]
   30258:	cmp	r2, #0
   3025c:	movwne	r2, #1
   30260:	mov	r0, r2
   30264:	pop	{fp, pc}
   30268:	movw	r0, #63604	; 0xf874
   3026c:	movt	r0, #4
   30270:	movw	r1, #61535	; 0xf05f
   30274:	movt	r1, #4
   30278:	movw	r3, #63647	; 0xf89f
   3027c:	movt	r3, #4
   30280:	movw	r2, #1272	; 0x4f8
   30284:	bl	14984 <__assert_fail@plt>

00030288 <flatcc_builder_check_union_field@@Base>:
   30288:	push	{fp, lr}
   3028c:	mov	fp, sp
   30290:	mov	r2, r0
   30294:	ldr	r0, [r0, #32]
   30298:	ldrh	r0, [r0, #14]
   3029c:	cmp	r0, #3
   302a0:	bne	30300 <flatcc_builder_check_union_field@@Base+0x78>
   302a4:	mov	r0, #0
   302a8:	cmp	r1, #0
   302ac:	beq	302ec <flatcc_builder_check_union_field@@Base+0x64>
   302b0:	ldrh	r3, [r2, #8]
   302b4:	cmp	r3, r1
   302b8:	popls	{fp, pc}
   302bc:	ldr	r0, [r2, #4]
   302c0:	add	r0, r0, r1, lsl #1
   302c4:	ldrh	r1, [r0, #-2]
   302c8:	cmp	r1, #0
   302cc:	beq	302f0 <flatcc_builder_check_union_field@@Base+0x68>
   302d0:	ldr	r2, [r2, #16]
   302d4:	ldrb	r1, [r2, r1]
   302d8:	ldrh	r0, [r0]
   302dc:	cmp	r1, #0
   302e0:	beq	302f4 <flatcc_builder_check_union_field@@Base+0x6c>
   302e4:	cmp	r0, #0
   302e8:	movwne	r0, #1
   302ec:	pop	{fp, pc}
   302f0:	ldrh	r0, [r0]
   302f4:	clz	r0, r0
   302f8:	lsr	r0, r0, #5
   302fc:	pop	{fp, pc}
   30300:	movw	r0, #63604	; 0xf874
   30304:	movt	r0, #4
   30308:	movw	r1, #61535	; 0xf05f
   3030c:	movt	r1, #4
   30310:	movw	r3, #63730	; 0xf8f2
   30314:	movt	r3, #4
   30318:	movw	r2, #1279	; 0x4ff
   3031c:	bl	14984 <__assert_fail@plt>

00030320 <flatcc_builder_check_required@@Base>:
   30320:	push	{fp, lr}
   30324:	mov	fp, sp
   30328:	mov	r3, r0
   3032c:	ldr	r0, [r0, #32]
   30330:	ldrh	r0, [r0, #14]
   30334:	cmp	r0, #3
   30338:	bne	30380 <flatcc_builder_check_required@@Base+0x60>
   3033c:	ldrh	ip, [r3, #8]
   30340:	mov	r0, #0
   30344:	cmp	ip, r2
   30348:	poplt	{fp, pc}
   3034c:	cmp	r2, #1
   30350:	blt	30378 <flatcc_builder_check_required@@Base+0x58>
   30354:	ldr	ip, [r3, #4]
   30358:	ldrh	r3, [r1]
   3035c:	add	r3, ip, r3, lsl #1
   30360:	ldrh	r3, [r3]
   30364:	cmp	r3, #0
   30368:	beq	3037c <flatcc_builder_check_required@@Base+0x5c>
   3036c:	add	r1, r1, #2
   30370:	subs	r2, r2, #1
   30374:	bne	30358 <flatcc_builder_check_required@@Base+0x38>
   30378:	mov	r0, #1
   3037c:	pop	{fp, pc}
   30380:	movw	r0, #63604	; 0xf874
   30384:	movt	r0, #4
   30388:	movw	r1, #61535	; 0xf05f
   3038c:	movt	r1, #4
   30390:	movw	r3, #63810	; 0xf942
   30394:	movt	r3, #4
   30398:	movw	r2, #1297	; 0x511
   3039c:	bl	14984 <__assert_fail@plt>

000303a0 <flatcc_builder_end_table@@Base>:
   303a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   303a4:	add	fp, sp, #24
   303a8:	sub	sp, sp, #16
   303ac:	mov	r4, r0
   303b0:	ldr	r0, [r0, #32]
   303b4:	ldrh	r0, [r0, #14]
   303b8:	cmp	r0, #3
   303bc:	bne	304cc <flatcc_builder_end_table@@Base+0x12c>
   303c0:	ldrh	r0, [r4, #8]
   303c4:	mov	r1, #4
   303c8:	add	r0, r1, r0, lsl #1
   303cc:	ldr	r6, [r4, #4]
   303d0:	strh	r0, [r6, #-4]!
   303d4:	ldrh	r1, [r4, #20]
   303d8:	add	r1, r1, #4
   303dc:	strh	r1, [r6, #2]
   303e0:	uxth	r5, r0
   303e4:	ldr	r0, [r4, #12]
   303e8:	eor	r0, r0, r5
   303ec:	movw	r2, #31153	; 0x79b1
   303f0:	movt	r2, #40503	; 0x9e37
   303f4:	mul	r0, r0, r2
   303f8:	uxth	r1, r1
   303fc:	eor	r0, r0, r1
   30400:	mul	r3, r0, r2
   30404:	str	r3, [r4, #12]
   30408:	mov	r0, r4
   3040c:	mov	r1, r6
   30410:	mov	r2, r5
   30414:	bl	2fe60 <flatcc_builder_create_cached_vtable@@Base>
   30418:	cmp	r0, #0
   3041c:	beq	304bc <flatcc_builder_end_table@@Base+0x11c>
   30420:	mov	r7, r0
   30424:	mov	r8, #0
   30428:	mov	r0, r6
   3042c:	mov	r1, #0
   30430:	mov	r2, r5
   30434:	bl	148dc <memset@plt>
   30438:	ldrh	r3, [r4, #130]	; 0x82
   3043c:	ldr	r0, [r4, #76]	; 0x4c
   30440:	ldr	r6, [r4]
   30444:	ldr	r1, [r4, #16]
   30448:	ldr	r2, [r4, #20]
   3044c:	ldr	r5, [r4, #32]
   30450:	ldr	r5, [r5, #20]
   30454:	add	r0, r0, r5
   30458:	sub	r6, r6, r0
   3045c:	asr	r6, r6, #1
   30460:	stm	sp, {r0, r6, r7}
   30464:	mov	r0, r4
   30468:	bl	300a4 <flatcc_builder_create_table@@Base>
   3046c:	cmp	r0, #0
   30470:	beq	304c0 <flatcc_builder_end_table@@Base+0x120>
   30474:	mov	r5, r0
   30478:	ldr	r0, [r4, #32]
   3047c:	ldr	r1, [r4, #52]	; 0x34
   30480:	ldr	r2, [r4, #76]	; 0x4c
   30484:	ldr	r3, [r0, #24]
   30488:	str	r3, [r4, #12]
   3048c:	ldrh	r3, [r0, #28]
   30490:	strh	r3, [r4, #8]
   30494:	ldr	r3, [r0, #16]
   30498:	add	r1, r1, r3
   3049c:	str	r1, [r4, #4]
   304a0:	ldr	r0, [r0, #20]
   304a4:	add	r0, r2, r0
   304a8:	str	r0, [r4]
   304ac:	mov	r0, r4
   304b0:	bl	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   304b4:	mov	r8, r5
   304b8:	b	304c0 <flatcc_builder_end_table@@Base+0x120>
   304bc:	mov	r8, #0
   304c0:	mov	r0, r8
   304c4:	sub	sp, fp, #24
   304c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   304cc:	movw	r0, #63604	; 0xf874
   304d0:	movt	r0, #4
   304d4:	movw	r1, #61535	; 0xf05f
   304d8:	movt	r1, #4
   304dc:	movw	r3, #63900	; 0xf99c
   304e0:	movt	r3, #4
   304e4:	movw	r2, #1317	; 0x525
   304e8:	bl	14984 <__assert_fail@plt>

000304ec <flatcc_builder_create_vector@@Base>:
   304ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   304f0:	add	fp, sp, #24
   304f4:	sub	sp, sp, #80	; 0x50
   304f8:	mov	r4, r0
   304fc:	ldr	r0, [fp, #8]
   30500:	strh	r0, [fp, #-26]	; 0xffffffe6
   30504:	ldr	r0, [fp, #12]
   30508:	cmp	r2, r0
   3050c:	bhi	305d8 <flatcc_builder_create_vector@@Base+0xec>
   30510:	mov	r6, r3
   30514:	mov	r7, r2
   30518:	mov	r8, r1
   3051c:	sub	r0, fp, #26
   30520:	mov	r9, #4
   30524:	mov	r1, #4
   30528:	bl	2fa40 <flatcc_builder_start_vector@@Base+0x80>
   3052c:	ldrh	r5, [fp, #-26]	; 0xffffffe6
   30530:	mov	r0, r4
   30534:	mov	r1, r5
   30538:	bl	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>
   3053c:	mov	r0, r7
   30540:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30544:	str	r7, [fp, #-32]	; 0xffffffe0
   30548:	mul	r6, r6, r7
   3054c:	mov	r0, r4
   30550:	mov	r1, r6
   30554:	mov	r2, r5
   30558:	bl	2ec54 <flatcc_builder_embed_buffer@@Base+0x1c8>
   3055c:	str	r9, [sp, #12]
   30560:	sub	r1, fp, #32
   30564:	str	r1, [sp, #8]
   30568:	str	r9, [sp]
   3056c:	mov	r1, #1
   30570:	str	r1, [sp, #4]
   30574:	cmp	r6, #0
   30578:	strne	r6, [sp, #20]
   3057c:	strne	r8, [sp, #16]
   30580:	movne	r1, #2
   30584:	strne	r1, [sp, #4]
   30588:	addne	r1, r6, #4
   3058c:	strne	r1, [sp]
   30590:	cmp	r0, #0
   30594:	beq	305c4 <flatcc_builder_create_vector@@Base+0xd8>
   30598:	ldm	sp, {r1, r2}
   3059c:	add	r1, r1, r0
   305a0:	str	r1, [sp]
   305a4:	mov	r1, sp
   305a8:	add	r1, r1, r2, lsl #3
   305ac:	movw	r3, #61005	; 0xee4d
   305b0:	movt	r3, #4
   305b4:	str	r3, [r1, #8]
   305b8:	str	r0, [r1, #12]
   305bc:	add	r0, r2, #1
   305c0:	str	r0, [sp, #4]
   305c4:	mov	r1, sp
   305c8:	mov	r0, r4
   305cc:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   305d0:	sub	sp, fp, #24
   305d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305d8:	movw	r0, #63966	; 0xf9de
   305dc:	movt	r0, #4
   305e0:	movw	r1, #61535	; 0xf05f
   305e4:	movt	r1, #4
   305e8:	movw	r3, #63985	; 0xf9f1
   305ec:	movt	r3, #4
   305f0:	movw	r2, #1365	; 0x555
   305f4:	bl	14984 <__assert_fail@plt>

000305f8 <flatcc_builder_end_vector@@Base>:
   305f8:	push	{r4, r5, fp, lr}
   305fc:	add	fp, sp, #8
   30600:	sub	sp, sp, #8
   30604:	mov	r4, r0
   30608:	ldr	r0, [r0, #32]
   3060c:	ldrh	r1, [r0, #14]
   30610:	cmp	r1, #4
   30614:	bne	30658 <flatcc_builder_end_vector@@Base+0x60>
   30618:	ldr	r1, [r4, #16]
   3061c:	ldrh	r5, [r4, #130]	; 0x82
   30620:	ldr	r3, [r0, #16]
   30624:	ldr	r2, [r0, #20]
   30628:	ldr	r0, [r0, #24]
   3062c:	str	r5, [sp]
   30630:	str	r0, [sp, #4]
   30634:	mov	r0, r4
   30638:	bl	304ec <flatcc_builder_create_vector@@Base>
   3063c:	mov	r5, r0
   30640:	cmp	r0, #0
   30644:	movne	r0, r4
   30648:	blne	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   3064c:	mov	r0, r5
   30650:	sub	sp, fp, #8
   30654:	pop	{r4, r5, fp, pc}
   30658:	movw	r0, #62338	; 0xf382
   3065c:	movt	r0, #4
   30660:	movw	r1, #61535	; 0xf05f
   30664:	movt	r1, #4
   30668:	movw	r3, #64103	; 0xfa67
   3066c:	movt	r3, #4
   30670:	movw	r2, #1400	; 0x578
   30674:	bl	14984 <__assert_fail@plt>

00030678 <flatcc_builder_vector_count@@Base>:
   30678:	ldr	r0, [r0, #32]
   3067c:	ldr	r0, [r0, #20]
   30680:	bx	lr

00030684 <flatcc_builder_vector_edit@@Base>:
   30684:	ldr	r0, [r0, #16]
   30688:	bx	lr

0003068c <flatcc_builder_create_offset_vector_direct@@Base>:
   3068c:	mov	r3, #0
   30690:	b	30694 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30694:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30698:	add	fp, sp, #24
   3069c:	sub	sp, sp, #80	; 0x50
   306a0:	mov	r8, r0
   306a4:	mov	r0, #0
   306a8:	cmn	r2, #-1073741823	; 0xc0000001
   306ac:	bhi	307fc <flatcc_builder_create_offset_vector_direct@@Base+0x170>
   306b0:	mov	r9, r3
   306b4:	mov	r6, r2
   306b8:	mov	r7, r1
   306bc:	mov	r5, #4
   306c0:	mov	r0, r8
   306c4:	mov	r1, #4
   306c8:	bl	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>
   306cc:	mov	r0, r6
   306d0:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   306d4:	str	r6, [fp, #-28]	; 0xffffffe4
   306d8:	lsl	r4, r6, #2
   306dc:	mov	r0, r8
   306e0:	mov	r1, r4
   306e4:	mov	r2, #4
   306e8:	bl	2ec54 <flatcc_builder_embed_buffer@@Base+0x1c8>
   306ec:	str	r5, [sp, #16]
   306f0:	sub	r1, fp, #28
   306f4:	str	r1, [sp, #12]
   306f8:	str	r5, [sp, #4]
   306fc:	mov	r1, #1
   30700:	str	r1, [sp, #8]
   30704:	mov	r1, #0
   30708:	cmp	r1, r6, lsl #2
   3070c:	strne	r4, [sp, #24]
   30710:	strne	r7, [sp, #20]
   30714:	movne	r1, #2
   30718:	strne	r1, [sp, #8]
   3071c:	addne	r1, r4, #4
   30720:	strne	r1, [sp, #4]
   30724:	cmp	r0, #0
   30728:	beq	30758 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   3072c:	ldmib	sp, {r1, r2}
   30730:	add	r1, r1, r0
   30734:	str	r1, [sp, #4]
   30738:	add	r1, sp, #4
   3073c:	add	r1, r1, r2, lsl #3
   30740:	movw	r3, #61005	; 0xee4d
   30744:	movt	r3, #4
   30748:	str	r3, [r1, #8]
   3074c:	str	r0, [r1, #12]
   30750:	add	r0, r2, #1
   30754:	str	r0, [sp, #8]
   30758:	cmp	r6, #0
   3075c:	beq	307f0 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   30760:	ldr	r0, [r8, #136]	; 0x88
   30764:	ldr	r1, [sp, #4]
   30768:	sub	r0, r1, r0
   3076c:	sub	r4, r0, #4
   30770:	mov	r5, r9
   30774:	b	3078c <flatcc_builder_create_offset_vector_direct@@Base+0x100>
   30778:	sub	r4, r4, #4
   3077c:	add	r7, r7, #4
   30780:	add	r5, r5, #1
   30784:	subs	r6, r6, #1
   30788:	beq	307f0 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   3078c:	ldr	r0, [r7]
   30790:	cmp	r0, #0
   30794:	beq	307bc <flatcc_builder_create_offset_vector_direct@@Base+0x130>
   30798:	add	r0, r4, r0
   3079c:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   307a0:	str	r0, [r7]
   307a4:	cmp	r9, #0
   307a8:	beq	30778 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   307ac:	ldrb	r0, [r5]
   307b0:	cmp	r0, #0
   307b4:	bne	30778 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   307b8:	b	30804 <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   307bc:	cmp	r9, #0
   307c0:	beq	30824 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   307c4:	ldrb	r0, [r5]
   307c8:	cmp	r0, #0
   307cc:	beq	30778 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   307d0:	movw	r0, #650	; 0x28a
   307d4:	movt	r0, #5
   307d8:	movw	r1, #61535	; 0xf05f
   307dc:	movt	r1, #4
   307e0:	movw	r3, #519	; 0x207
   307e4:	movt	r3, #5
   307e8:	movw	r2, #1461	; 0x5b5
   307ec:	bl	14984 <__assert_fail@plt>
   307f0:	add	r1, sp, #4
   307f4:	mov	r0, r8
   307f8:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   307fc:	sub	sp, fp, #24
   30800:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30804:	movw	r0, #505	; 0x1f9
   30808:	movt	r0, #5
   3080c:	movw	r1, #61535	; 0xf05f
   30810:	movt	r1, #4
   30814:	movw	r3, #519	; 0x207
   30818:	movt	r3, #5
   3081c:	movw	r2, #1457	; 0x5b1
   30820:	bl	14984 <__assert_fail@plt>
   30824:	movw	r0, #25261	; 0x62ad
   30828:	movt	r0, #4
   3082c:	movw	r1, #61535	; 0xf05f
   30830:	movt	r1, #4
   30834:	movw	r3, #519	; 0x207
   30838:	movt	r3, #5
   3083c:	movw	r2, #1463	; 0x5b7
   30840:	bl	14984 <__assert_fail@plt>

00030844 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30844:	push	{r4, r5, fp, lr}
   30848:	add	fp, sp, #8
   3084c:	mov	r3, r1
   30850:	mov	r4, r0
   30854:	ldr	r0, [r0, #32]
   30858:	ldrh	r1, [r0, #14]
   3085c:	cmp	r1, #5
   30860:	bne	3088c <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   30864:	ldr	r2, [r0, #20]
   30868:	ldr	r1, [r4, #16]
   3086c:	mov	r0, r4
   30870:	bl	30694 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30874:	mov	r5, r0
   30878:	cmp	r0, #0
   3087c:	movne	r0, r4
   30880:	blne	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   30884:	mov	r0, r5
   30888:	pop	{r4, r5, fp, pc}
   3088c:	movw	r0, #62587	; 0xf47b
   30890:	movt	r0, #4
   30894:	movw	r1, #61535	; 0xf05f
   30898:	movt	r1, #4
   3089c:	movw	r3, #64244	; 0xfaf4
   308a0:	movt	r3, #4
   308a4:	movw	r2, #1493	; 0x5d5
   308a8:	bl	14984 <__assert_fail@plt>

000308ac <flatcc_builder_offset_vector_edit@@Base>:
   308ac:	ldr	r0, [r0, #16]
   308b0:	bx	lr

000308b4 <flatcc_builder_offset_vector_count@@Base>:
   308b4:	ldr	r0, [r0, #32]
   308b8:	ldr	r0, [r0, #20]
   308bc:	bx	lr

000308c0 <flatcc_builder_table_add_union@@Base>:
   308c0:	push	{r4, r5, r6, r7, fp, lr}
   308c4:	add	fp, sp, #16
   308c8:	mov	r5, r0
   308cc:	ldr	r0, [r0, #32]
   308d0:	ldrh	r0, [r0, #14]
   308d4:	cmp	r0, #3
   308d8:	bne	3094c <flatcc_builder_table_add_union@@Base+0x8c>
   308dc:	mov	r7, r3
   308e0:	mov	r6, r1
   308e4:	uxtb	r4, r2
   308e8:	cmp	r3, #0
   308ec:	beq	308f8 <flatcc_builder_table_add_union@@Base+0x38>
   308f0:	cmp	r4, #0
   308f4:	beq	3096c <flatcc_builder_table_add_union@@Base+0xac>
   308f8:	cmp	r7, #0
   308fc:	beq	30918 <flatcc_builder_table_add_union@@Base+0x58>
   30900:	mov	r0, r5
   30904:	mov	r1, r6
   30908:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   3090c:	cmp	r0, #0
   30910:	beq	309ac <flatcc_builder_table_add_union@@Base+0xec>
   30914:	str	r7, [r0]
   30918:	sub	r1, r6, #1
   3091c:	mov	r0, r5
   30920:	mov	r2, #1
   30924:	mov	r3, #1
   30928:	bl	30a90 <flatcc_builder_table_add@@Base>
   3092c:	cmp	r0, #0
   30930:	beq	3098c <flatcc_builder_table_add_union@@Base+0xcc>
   30934:	mov	r5, r0
   30938:	mov	r0, r4
   3093c:	bl	30b70 <flatcc_builder_table_add@@Base+0xe0>
   30940:	strb	r4, [r5]
   30944:	mov	r0, #0
   30948:	pop	{r4, r5, r6, r7, fp, pc}
   3094c:	movw	r0, #63604	; 0xf874
   30950:	movt	r0, #4
   30954:	movw	r1, #61535	; 0xf05f
   30958:	movt	r1, #4
   3095c:	movw	r3, #64358	; 0xfb66
   30960:	movt	r3, #4
   30964:	movw	r2, #1518	; 0x5ee
   30968:	bl	14984 <__assert_fail@plt>
   3096c:	movw	r0, #64446	; 0xfbbe
   30970:	movt	r0, #4
   30974:	movw	r1, #61535	; 0xf05f
   30978:	movt	r1, #4
   3097c:	movw	r3, #64358	; 0xfb66
   30980:	movt	r3, #4
   30984:	movw	r2, #1519	; 0x5ef
   30988:	bl	14984 <__assert_fail@plt>
   3098c:	movw	r0, #64490	; 0xfbea
   30990:	movt	r0, #4
   30994:	movw	r1, #61535	; 0xf05f
   30998:	movt	r1, #4
   3099c:	movw	r3, #64358	; 0xfb66
   309a0:	movt	r3, #4
   309a4:	movw	r2, #1526	; 0x5f6
   309a8:	bl	14984 <__assert_fail@plt>
   309ac:	movw	r0, #64480	; 0xfbe0
   309b0:	movt	r0, #4
   309b4:	movw	r1, #61535	; 0xf05f
   309b8:	movt	r1, #4
   309bc:	movw	r3, #64358	; 0xfb66
   309c0:	movt	r3, #4
   309c4:	movw	r2, #1522	; 0x5f2
   309c8:	bl	14984 <__assert_fail@plt>

000309cc <flatcc_builder_table_add_offset@@Base>:
   309cc:	push	{fp, lr}
   309d0:	mov	fp, sp
   309d4:	ldr	r2, [r0, #32]
   309d8:	ldrh	r2, [r2, #14]
   309dc:	cmp	r2, #3
   309e0:	bne	30a30 <flatcc_builder_table_add_offset@@Base+0x64>
   309e4:	movw	r2, #32765	; 0x7ffd
   309e8:	cmp	r1, r2
   309ec:	bcs	30a50 <flatcc_builder_table_add_offset@@Base+0x84>
   309f0:	ldr	r2, [r0, #4]
   309f4:	add	r2, r2, r1, lsl #1
   309f8:	ldrh	r2, [r2]
   309fc:	cmp	r2, #0
   30a00:	bne	30a70 <flatcc_builder_table_add_offset@@Base+0xa4>
   30a04:	ldr	r2, [r0, #12]
   30a08:	eor	r2, r2, r1
   30a0c:	movw	r3, #31153	; 0x79b1
   30a10:	movt	r3, #40503	; 0x9e37
   30a14:	mul	r2, r2, r3
   30a18:	eor	r2, r2, #4
   30a1c:	mul	r2, r2, r3
   30a20:	str	r2, [r0, #12]
   30a24:	uxth	r1, r1
   30a28:	pop	{fp, lr}
   30a2c:	b	31398 <flatcc_builder_table_add_copy@@Base+0x40>
   30a30:	movw	r0, #63604	; 0xf874
   30a34:	movt	r0, #4
   30a38:	movw	r1, #61535	; 0xf05f
   30a3c:	movt	r1, #4
   30a40:	movw	r3, #65384	; 0xff68
   30a44:	movt	r3, #4
   30a48:	movw	r2, #1811	; 0x713
   30a4c:	bl	14984 <__assert_fail@plt>
   30a50:	movw	r0, #65256	; 0xfee8
   30a54:	movt	r0, #4
   30a58:	movw	r1, #61535	; 0xf05f
   30a5c:	movt	r1, #4
   30a60:	movw	r3, #65384	; 0xff68
   30a64:	movt	r3, #4
   30a68:	movw	r2, #1812	; 0x714
   30a6c:	bl	14984 <__assert_fail@plt>
   30a70:	movw	r0, #25261	; 0x62ad
   30a74:	movt	r0, #4
   30a78:	movw	r1, #61535	; 0xf05f
   30a7c:	movt	r1, #4
   30a80:	movw	r3, #65384	; 0xff68
   30a84:	movt	r3, #4
   30a88:	movw	r2, #1819	; 0x71b
   30a8c:	bl	14984 <__assert_fail@plt>

00030a90 <flatcc_builder_table_add@@Base>:
   30a90:	push	{fp, lr}
   30a94:	mov	fp, sp
   30a98:	mov	ip, r3
   30a9c:	ldr	r3, [r0, #32]
   30aa0:	ldrh	r3, [r3, #14]
   30aa4:	cmp	r3, #3
   30aa8:	bne	30b10 <flatcc_builder_table_add@@Base+0x80>
   30aac:	movw	r3, #32765	; 0x7ffd
   30ab0:	cmp	r1, r3
   30ab4:	bcs	30b30 <flatcc_builder_table_add@@Base+0xa0>
   30ab8:	mov	lr, r2
   30abc:	ldrh	r3, [r0, #130]	; 0x82
   30ac0:	cmp	r3, ip
   30ac4:	strhcc	ip, [r0, #130]	; 0x82
   30ac8:	ldr	r3, [r0, #4]
   30acc:	add	r3, r3, r1, lsl #1
   30ad0:	ldrh	r3, [r3]
   30ad4:	cmp	r3, #0
   30ad8:	bne	30b50 <flatcc_builder_table_add@@Base+0xc0>
   30adc:	ldr	r3, [r0, #12]
   30ae0:	eor	r3, r3, r1
   30ae4:	movw	r2, #31153	; 0x79b1
   30ae8:	movt	r2, #40503	; 0x9e37
   30aec:	mul	r3, r3, r2
   30af0:	eor	r3, r3, lr
   30af4:	mul	r2, r3, r2
   30af8:	str	r2, [r0, #12]
   30afc:	uxth	r3, r1
   30b00:	mov	r1, lr
   30b04:	mov	r2, ip
   30b08:	pop	{fp, lr}
   30b0c:	b	3128c <flatcc_builder_string_len@@Base+0xc>
   30b10:	movw	r0, #63604	; 0xf874
   30b14:	movt	r0, #4
   30b18:	movw	r1, #61535	; 0xf05f
   30b1c:	movt	r1, #4
   30b20:	movw	r3, #65182	; 0xfe9e
   30b24:	movt	r3, #4
   30b28:	movw	r2, #1773	; 0x6ed
   30b2c:	bl	14984 <__assert_fail@plt>
   30b30:	movw	r0, #65256	; 0xfee8
   30b34:	movt	r0, #4
   30b38:	movw	r1, #61535	; 0xf05f
   30b3c:	movt	r1, #4
   30b40:	movw	r3, #65182	; 0xfe9e
   30b44:	movt	r3, #4
   30b48:	movw	r2, #1774	; 0x6ee
   30b4c:	bl	14984 <__assert_fail@plt>
   30b50:	movw	r0, #25261	; 0x62ad
   30b54:	movt	r0, #4
   30b58:	movw	r1, #61535	; 0xf05f
   30b5c:	movt	r1, #4
   30b60:	movw	r3, #65182	; 0xfe9e
   30b64:	movt	r3, #4
   30b68:	movw	r2, #1784	; 0x6f8
   30b6c:	bl	14984 <__assert_fail@plt>
   30b70:	bx	lr

00030b74 <flatcc_builder_table_add_union_vector@@Base>:
   30b74:	push	{r4, r5, r6, r7, fp, lr}
   30b78:	add	fp, sp, #16
   30b7c:	mov	r6, r0
   30b80:	ldr	r0, [r0, #32]
   30b84:	ldrh	r0, [r0, #14]
   30b88:	cmp	r0, #3
   30b8c:	bne	30bf8 <flatcc_builder_table_add_union_vector@@Base+0x84>
   30b90:	mov	r4, r3
   30b94:	mov	r7, r2
   30b98:	mov	r5, r1
   30b9c:	cmp	r2, #0
   30ba0:	mov	r0, r2
   30ba4:	movwne	r0, #1
   30ba8:	clz	r1, r3
   30bac:	lsr	r1, r1, #5
   30bb0:	teq	r1, r0
   30bb4:	beq	30c18 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   30bb8:	cmp	r7, #0
   30bbc:	beq	30bf0 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   30bc0:	sub	r1, r5, #1
   30bc4:	mov	r0, r6
   30bc8:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   30bcc:	cmp	r0, #0
   30bd0:	beq	30c38 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   30bd4:	str	r7, [r0]
   30bd8:	mov	r0, r6
   30bdc:	mov	r1, r5
   30be0:	bl	309cc <flatcc_builder_table_add_offset@@Base>
   30be4:	cmp	r0, #0
   30be8:	beq	30c58 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   30bec:	str	r4, [r0]
   30bf0:	mov	r0, #0
   30bf4:	pop	{r4, r5, r6, r7, fp, pc}
   30bf8:	movw	r0, #63604	; 0xf874
   30bfc:	movt	r0, #4
   30c00:	movw	r1, #61535	; 0xf05f
   30c04:	movt	r1, #4
   30c08:	movw	r3, #64502	; 0xfbf6
   30c0c:	movt	r3, #4
   30c10:	mov	r2, #1536	; 0x600
   30c14:	bl	14984 <__assert_fail@plt>
   30c18:	movw	r0, #64601	; 0xfc59
   30c1c:	movt	r0, #4
   30c20:	movw	r1, #61535	; 0xf05f
   30c24:	movt	r1, #4
   30c28:	movw	r3, #64502	; 0xfbf6
   30c2c:	movt	r3, #4
   30c30:	movw	r2, #1537	; 0x601
   30c34:	bl	14984 <__assert_fail@plt>
   30c38:	movw	r0, #64480	; 0xfbe0
   30c3c:	movt	r0, #4
   30c40:	movw	r1, #61535	; 0xf05f
   30c44:	movt	r1, #4
   30c48:	movw	r3, #64502	; 0xfbf6
   30c4c:	movt	r3, #4
   30c50:	movw	r2, #1540	; 0x604
   30c54:	bl	14984 <__assert_fail@plt>
   30c58:	movw	r0, #64480	; 0xfbe0
   30c5c:	movt	r0, #4
   30c60:	movw	r1, #61535	; 0xf05f
   30c64:	movt	r1, #4
   30c68:	movw	r3, #64502	; 0xfbf6
   30c6c:	movt	r3, #4
   30c70:	movw	r2, #1544	; 0x608
   30c74:	bl	14984 <__assert_fail@plt>

00030c78 <flatcc_builder_create_union_vector@@Base>:
   30c78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30c7c:	add	fp, sp, #24
   30c80:	sub	sp, sp, #16
   30c84:	mov	r7, r3
   30c88:	mov	r6, r2
   30c8c:	mov	r4, r1
   30c90:	mov	r5, r0
   30c94:	mov	r0, #0
   30c98:	str	r0, [r5]
   30c9c:	str	r0, [r5, #4]
   30ca0:	mov	r0, r1
   30ca4:	bl	2fa50 <flatcc_builder_start_offset_vector@@Base>
   30ca8:	cmp	r0, #0
   30cac:	beq	30cb8 <flatcc_builder_create_union_vector@@Base+0x40>
   30cb0:	sub	sp, fp, #24
   30cb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30cb8:	mov	r0, r4
   30cbc:	mov	r1, r7
   30cc0:	bl	2f59c <flatcc_builder_extend_offset_vector@@Base>
   30cc4:	cmp	r0, #0
   30cc8:	beq	30cb0 <flatcc_builder_create_union_vector@@Base+0x38>
   30ccc:	mov	r0, r4
   30cd0:	mov	r1, r7
   30cd4:	bl	2f314 <flatcc_builder_start_struct@@Base+0x84>
   30cd8:	cmp	r0, #0
   30cdc:	beq	30cb0 <flatcc_builder_create_union_vector@@Base+0x38>
   30ce0:	mov	r8, r0
   30ce4:	mov	r0, r4
   30ce8:	bl	308ac <flatcc_builder_offset_vector_edit@@Base>
   30cec:	mov	ip, r0
   30cf0:	cmp	r7, #0
   30cf4:	beq	30d24 <flatcc_builder_create_union_vector@@Base+0xac>
   30cf8:	add	r0, r6, #4
   30cfc:	mov	r1, r8
   30d00:	mov	r2, ip
   30d04:	mov	r6, r7
   30d08:	ldrb	r3, [r0, #-4]
   30d0c:	strb	r3, [r1], #1
   30d10:	ldr	r3, [r0]
   30d14:	str	r3, [r2], #4
   30d18:	add	r0, r0, #8
   30d1c:	subs	r6, r6, #1
   30d20:	bne	30d08 <flatcc_builder_create_union_vector@@Base+0x90>
   30d24:	str	r7, [sp]
   30d28:	add	r0, sp, #8
   30d2c:	mov	r1, r4
   30d30:	mov	r2, r8
   30d34:	mov	r3, ip
   30d38:	bl	30d58 <flatcc_builder_create_union_vector_direct@@Base>
   30d3c:	ldr	r0, [sp, #8]
   30d40:	ldr	r1, [sp, #12]
   30d44:	stm	r5, {r0, r1}
   30d48:	mov	r0, r4
   30d4c:	bl	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   30d50:	sub	sp, fp, #24
   30d54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00030d58 <flatcc_builder_create_union_vector_direct@@Base>:
   30d58:	push	{r4, r5, r6, r7, fp, lr}
   30d5c:	add	fp, sp, #16
   30d60:	sub	sp, sp, #8
   30d64:	mov	r5, r2
   30d68:	mov	r6, r1
   30d6c:	mov	r4, r0
   30d70:	mov	r0, #0
   30d74:	str	r0, [r4]
   30d78:	str	r0, [r4, #4]
   30d7c:	ldr	r7, [fp, #8]
   30d80:	mov	r0, r1
   30d84:	mov	r1, r3
   30d88:	mov	r2, r7
   30d8c:	mov	r3, r5
   30d90:	bl	30694 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30d94:	str	r0, [r4, #4]
   30d98:	cmp	r0, #0
   30d9c:	beq	30dc8 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   30da0:	mvn	r0, #0
   30da4:	mov	r1, #1
   30da8:	str	r1, [sp]
   30dac:	str	r0, [sp, #4]
   30db0:	mov	r0, r6
   30db4:	mov	r1, r5
   30db8:	mov	r2, r7
   30dbc:	mov	r3, #1
   30dc0:	bl	304ec <flatcc_builder_create_vector@@Base>
   30dc4:	str	r0, [r4]
   30dc8:	sub	sp, fp, #16
   30dcc:	pop	{r4, r5, r6, r7, fp, pc}

00030dd0 <flatcc_builder_start_union_vector@@Base>:
   30dd0:	push	{r4, r5, fp, lr}
   30dd4:	add	fp, sp, #8
   30dd8:	mov	r4, r0
   30ddc:	mov	r1, #4
   30de0:	bl	2f064 <flatcc_builder_start_buffer@@Base+0xbc>
   30de4:	mvn	r5, #0
   30de8:	cmp	r0, #0
   30dec:	beq	30df8 <flatcc_builder_start_union_vector@@Base+0x28>
   30df0:	mov	r0, r5
   30df4:	pop	{r4, r5, fp, pc}
   30df8:	ldr	r0, [r4, #32]
   30dfc:	mov	r1, #8
   30e00:	str	r1, [r0, #16]
   30e04:	ldr	r0, [r4, #32]
   30e08:	mov	r5, #0
   30e0c:	str	r5, [r0, #20]
   30e10:	ldr	r0, [r4, #32]
   30e14:	mov	r1, #7
   30e18:	strh	r1, [r0, #14]
   30e1c:	mov	r0, r4
   30e20:	mvn	r1, #3
   30e24:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   30e28:	mov	r0, r5
   30e2c:	pop	{r4, r5, fp, pc}

00030e30 <flatcc_builder_end_union_vector@@Base>:
   30e30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30e34:	add	fp, sp, #24
   30e38:	sub	sp, sp, #16
   30e3c:	mov	r9, r0
   30e40:	mov	r0, #0
   30e44:	str	r0, [r9]
   30e48:	str	r0, [r9, #4]
   30e4c:	ldr	r0, [r1, #32]
   30e50:	ldrh	r0, [r0, #14]
   30e54:	cmp	r0, #7
   30e58:	bne	30ef8 <flatcc_builder_end_union_vector@@Base+0xc8>
   30e5c:	mov	r4, r1
   30e60:	mov	r0, r1
   30e64:	bl	30f18 <flatcc_builder_union_vector_count@@Base>
   30e68:	mov	r6, r0
   30e6c:	add	r1, r0, r0, lsl #2
   30e70:	mov	r0, r4
   30e74:	bl	2f314 <flatcc_builder_start_struct@@Base+0x84>
   30e78:	cmp	r0, #0
   30e7c:	beq	30ef0 <flatcc_builder_end_union_vector@@Base+0xc0>
   30e80:	mov	r7, r0
   30e84:	add	r8, r0, r6, lsl #2
   30e88:	mov	r0, r4
   30e8c:	bl	30f24 <flatcc_builder_union_vector_edit@@Base>
   30e90:	cmp	r6, #0
   30e94:	beq	30ec4 <flatcc_builder_end_union_vector@@Base+0x94>
   30e98:	add	r0, r0, #4
   30e9c:	mov	r1, r8
   30ea0:	mov	r2, r7
   30ea4:	mov	r3, r6
   30ea8:	ldrb	r5, [r0, #-4]
   30eac:	strb	r5, [r1], #1
   30eb0:	ldr	r5, [r0]
   30eb4:	str	r5, [r2], #4
   30eb8:	add	r0, r0, #8
   30ebc:	subs	r3, r3, #1
   30ec0:	bne	30ea8 <flatcc_builder_end_union_vector@@Base+0x78>
   30ec4:	str	r6, [sp]
   30ec8:	add	r0, sp, #8
   30ecc:	mov	r1, r4
   30ed0:	mov	r2, r8
   30ed4:	mov	r3, r7
   30ed8:	bl	30d58 <flatcc_builder_create_union_vector_direct@@Base>
   30edc:	ldr	r0, [sp, #8]
   30ee0:	ldr	r1, [sp, #12]
   30ee4:	stm	r9, {r0, r1}
   30ee8:	mov	r0, r4
   30eec:	bl	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   30ef0:	sub	sp, fp, #24
   30ef4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30ef8:	movw	r0, #64641	; 0xfc81
   30efc:	movt	r0, #4
   30f00:	movw	r1, #61535	; 0xf05f
   30f04:	movt	r1, #4
   30f08:	movw	r3, #64691	; 0xfcb3
   30f0c:	movt	r3, #4
   30f10:	movw	r2, #1617	; 0x651
   30f14:	bl	14984 <__assert_fail@plt>

00030f18 <flatcc_builder_union_vector_count@@Base>:
   30f18:	ldr	r0, [r0, #32]
   30f1c:	ldr	r0, [r0, #20]
   30f20:	bx	lr

00030f24 <flatcc_builder_union_vector_edit@@Base>:
   30f24:	ldr	r0, [r0, #16]
   30f28:	bx	lr

00030f2c <flatcc_builder_extend_union_vector@@Base>:
   30f2c:	push	{r4, r5, fp, lr}
   30f30:	add	fp, sp, #8
   30f34:	mov	r5, r1
   30f38:	mov	r4, r0
   30f3c:	mvn	r2, #-536870912	; 0xe0000000
   30f40:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   30f44:	cmp	r0, #0
   30f48:	movne	r0, #0
   30f4c:	popne	{r4, r5, fp, pc}
   30f50:	lsl	r1, r5, #3
   30f54:	mov	r0, r4
   30f58:	pop	{r4, r5, fp, lr}
   30f5c:	b	2f314 <flatcc_builder_start_struct@@Base+0x84>

00030f60 <flatcc_builder_truncate_union_vector@@Base>:
   30f60:	push	{fp, lr}
   30f64:	mov	fp, sp
   30f68:	ldr	r2, [r0, #32]
   30f6c:	ldrh	r3, [r2, #14]
   30f70:	cmp	r3, #7
   30f74:	bne	30fa4 <flatcc_builder_truncate_union_vector@@Base+0x44>
   30f78:	ldr	r3, [r2, #20]
   30f7c:	cmp	r3, r1
   30f80:	bcc	30fc4 <flatcc_builder_truncate_union_vector@@Base+0x64>
   30f84:	sub	r3, r3, r1
   30f88:	str	r3, [r2, #20]
   30f8c:	ldr	r2, [r0, #32]
   30f90:	ldr	r2, [r2, #16]
   30f94:	mul	r1, r2, r1
   30f98:	bl	2f8a4 <flatcc_builder_truncate_vector@@Base+0x84>
   30f9c:	mov	r0, #0
   30fa0:	pop	{fp, pc}
   30fa4:	movw	r0, #64641	; 0xfc81
   30fa8:	movt	r0, #4
   30fac:	movw	r1, #61535	; 0xf05f
   30fb0:	movt	r1, #4
   30fb4:	movw	r3, #64774	; 0xfd06
   30fb8:	movt	r3, #4
   30fbc:	movw	r2, #1665	; 0x681
   30fc0:	bl	14984 <__assert_fail@plt>
   30fc4:	movw	r0, #63205	; 0xf6e5
   30fc8:	movt	r0, #4
   30fcc:	movw	r1, #61535	; 0xf05f
   30fd0:	movt	r1, #4
   30fd4:	movw	r3, #64774	; 0xfd06
   30fd8:	movt	r3, #4
   30fdc:	movw	r2, #1666	; 0x682
   30fe0:	bl	14984 <__assert_fail@plt>

00030fe4 <flatcc_builder_union_vector_push@@Base>:
   30fe4:	push	{r4, r5, r6, sl, fp, lr}
   30fe8:	add	fp, sp, #16
   30fec:	mov	r4, r2
   30ff0:	mov	r5, r1
   30ff4:	ldr	r1, [r0, #32]
   30ff8:	ldrh	r2, [r1, #14]
   30ffc:	cmp	r2, #7
   31000:	bne	3103c <flatcc_builder_union_vector_push@@Base+0x58>
   31004:	ldr	r2, [r1, #20]
   31008:	mov	r6, #0
   3100c:	cmn	r2, #-536870911	; 0xe0000001
   31010:	beq	31034 <flatcc_builder_union_vector_push@@Base+0x50>
   31014:	add	r2, r2, #1
   31018:	str	r2, [r1, #20]
   3101c:	mov	r1, #8
   31020:	bl	2f314 <flatcc_builder_start_struct@@Base+0x84>
   31024:	cmp	r0, #0
   31028:	strne	r5, [r0]
   3102c:	strne	r4, [r0, #4]
   31030:	movne	r6, r0
   31034:	mov	r0, r6
   31038:	pop	{r4, r5, r6, sl, fp, pc}
   3103c:	movw	r0, #64641	; 0xfc81
   31040:	movt	r0, #4
   31044:	movw	r1, #61535	; 0xf05f
   31048:	movt	r1, #4
   3104c:	movw	r3, #64843	; 0xfd4b
   31050:	movt	r3, #4
   31054:	movw	r2, #1677	; 0x68d
   31058:	bl	14984 <__assert_fail@plt>

0003105c <flatcc_builder_append_union_vector@@Base>:
   3105c:	push	{r4, r5, r6, sl, fp, lr}
   31060:	add	fp, sp, #16
   31064:	mov	r6, r0
   31068:	ldr	r0, [r0, #32]
   3106c:	ldrh	r0, [r0, #14]
   31070:	cmp	r0, #7
   31074:	bne	310b4 <flatcc_builder_append_union_vector@@Base+0x58>
   31078:	mov	r5, r2
   3107c:	mov	r4, r1
   31080:	mov	r0, r6
   31084:	mov	r1, r2
   31088:	mvn	r2, #-536870912	; 0xe0000000
   3108c:	bl	2f418 <flatcc_builder_extend_vector@@Base+0x44>
   31090:	cmp	r0, #0
   31094:	beq	310a0 <flatcc_builder_append_union_vector@@Base+0x44>
   31098:	mov	r0, #0
   3109c:	pop	{r4, r5, r6, sl, fp, pc}
   310a0:	lsl	r2, r5, #3
   310a4:	mov	r0, r6
   310a8:	mov	r1, r4
   310ac:	pop	{r4, r5, r6, sl, fp, lr}
   310b0:	b	2f4e0 <flatcc_builder_vector_push@@Base+0x80>
   310b4:	movw	r0, #64641	; 0xfc81
   310b8:	movt	r0, #4
   310bc:	movw	r1, #61535	; 0xf05f
   310c0:	movt	r1, #4
   310c4:	movw	r3, #64952	; 0xfdb8
   310c8:	movt	r3, #4
   310cc:	movw	r2, #1692	; 0x69c
   310d0:	bl	14984 <__assert_fail@plt>

000310d4 <flatcc_builder_create_string@@Base>:
   310d4:	push	{r4, r5, r6, r7, fp, lr}
   310d8:	add	fp, sp, #16
   310dc:	sub	sp, sp, #80	; 0x50
   310e0:	mov	r5, r2
   310e4:	mov	r6, r1
   310e8:	mov	r4, r0
   310ec:	mov	r0, r2
   310f0:	bl	2ec68 <flatcc_builder_embed_buffer@@Base+0x1dc>
   310f4:	str	r5, [fp, #-20]	; 0xffffffec
   310f8:	add	r1, r5, #1
   310fc:	mov	r7, #4
   31100:	mov	r0, r4
   31104:	mov	r2, #4
   31108:	bl	2ec54 <flatcc_builder_embed_buffer@@Base+0x1c8>
   3110c:	str	r7, [sp, #16]
   31110:	sub	r1, fp, #20
   31114:	str	r1, [sp, #12]
   31118:	str	r7, [sp, #4]
   3111c:	mov	r1, #1
   31120:	str	r1, [sp, #8]
   31124:	add	r0, r0, #1
   31128:	cmp	r5, #0
   3112c:	strne	r5, [sp, #24]
   31130:	strne	r6, [sp, #20]
   31134:	movne	r1, #2
   31138:	strne	r1, [sp, #8]
   3113c:	addne	r1, r5, #4
   31140:	strne	r1, [sp, #4]
   31144:	cmp	r0, #0
   31148:	beq	31178 <flatcc_builder_create_string@@Base+0xa4>
   3114c:	ldmib	sp, {r1, r2}
   31150:	add	r1, r1, r0
   31154:	str	r1, [sp, #4]
   31158:	add	r1, sp, #4
   3115c:	add	r1, r1, r2, lsl #3
   31160:	movw	r3, #61005	; 0xee4d
   31164:	movt	r3, #4
   31168:	str	r3, [r1, #8]
   3116c:	str	r0, [r1, #12]
   31170:	add	r0, r2, #1
   31174:	str	r0, [sp, #8]
   31178:	add	r1, sp, #4
   3117c:	mov	r0, r4
   31180:	bl	2ec6c <flatcc_builder_embed_buffer@@Base+0x1e0>
   31184:	sub	sp, fp, #16
   31188:	pop	{r4, r5, r6, r7, fp, pc}

0003118c <flatcc_builder_create_string_str@@Base>:
   3118c:	push	{r4, r5, fp, lr}
   31190:	add	fp, sp, #8
   31194:	mov	r4, r1
   31198:	mov	r5, r0
   3119c:	mov	r0, r1
   311a0:	bl	148b8 <strlen@plt>
   311a4:	mov	r2, r0
   311a8:	mov	r0, r5
   311ac:	mov	r1, r4
   311b0:	pop	{r4, r5, fp, lr}
   311b4:	b	310d4 <flatcc_builder_create_string@@Base>

000311b8 <flatcc_builder_create_string_strn@@Base>:
   311b8:	push	{r4, r5, fp, lr}
   311bc:	add	fp, sp, #8
   311c0:	mov	r4, r1
   311c4:	mov	r5, r0
   311c8:	mov	r0, r1
   311cc:	mov	r1, r2
   311d0:	bl	2f7f4 <flatcc_builder_append_string_strn@@Base+0x30>
   311d4:	mov	r2, r0
   311d8:	mov	r0, r5
   311dc:	mov	r1, r4
   311e0:	pop	{r4, r5, fp, lr}
   311e4:	b	310d4 <flatcc_builder_create_string@@Base>

000311e8 <flatcc_builder_end_string@@Base>:
   311e8:	push	{r4, r5, fp, lr}
   311ec:	add	fp, sp, #8
   311f0:	mov	r4, r0
   311f4:	ldr	r0, [r0, #32]
   311f8:	ldrh	r1, [r0, #14]
   311fc:	cmp	r1, #6
   31200:	bne	31238 <flatcc_builder_end_string@@Base+0x50>
   31204:	ldr	r2, [r4, #20]
   31208:	ldr	r0, [r0, #20]
   3120c:	cmp	r0, r2
   31210:	bne	31258 <flatcc_builder_end_string@@Base+0x70>
   31214:	ldr	r1, [r4, #16]
   31218:	mov	r0, r4
   3121c:	bl	310d4 <flatcc_builder_create_string@@Base>
   31220:	mov	r5, r0
   31224:	cmp	r0, #0
   31228:	movne	r0, r4
   3122c:	blne	2f224 <flatcc_builder_end_buffer@@Base+0xc8>
   31230:	mov	r0, r5
   31234:	pop	{r4, r5, fp, pc}
   31238:	movw	r0, #62852	; 0xf584
   3123c:	movt	r0, #4
   31240:	movw	r1, #61535	; 0xf05f
   31244:	movt	r1, #4
   31248:	movw	r3, #65079	; 0xfe37
   3124c:	movt	r3, #4
   31250:	movw	r2, #1732	; 0x6c4
   31254:	bl	14984 <__assert_fail@plt>
   31258:	movw	r0, #65146	; 0xfe7a
   3125c:	movt	r0, #4
   31260:	movw	r1, #61535	; 0xf05f
   31264:	movt	r1, #4
   31268:	movw	r3, #65079	; 0xfe37
   3126c:	movt	r3, #4
   31270:	movw	r2, #1733	; 0x6c5
   31274:	bl	14984 <__assert_fail@plt>

00031278 <flatcc_builder_string_edit@@Base>:
   31278:	ldr	r0, [r0, #16]
   3127c:	bx	lr

00031280 <flatcc_builder_string_len@@Base>:
   31280:	ldr	r0, [r0, #32]
   31284:	ldr	r0, [r0, #20]
   31288:	bx	lr
   3128c:	push	{r4, r5, r6, sl, fp, lr}
   31290:	add	fp, sp, #16
   31294:	mov	r5, r3
   31298:	mov	r4, r0
   3129c:	ldr	r0, [r0, #20]
   312a0:	ldr	r3, [r4, #24]
   312a4:	add	r0, r2, r0
   312a8:	sub	r0, r0, #1
   312ac:	rsb	r2, r2, #0
   312b0:	and	r6, r0, r2
   312b4:	add	r0, r6, r1
   312b8:	str	r0, [r4, #20]
   312bc:	cmp	r0, r3
   312c0:	bcc	312e4 <flatcc_builder_string_len@@Base+0x64>
   312c4:	add	r1, r0, #1
   312c8:	mov	r0, r4
   312cc:	movw	r2, #65532	; 0xfffc
   312d0:	bl	31730 <flatcc_builder_get_emit_context@@Base+0x18>
   312d4:	mov	r1, r0
   312d8:	mov	r0, #0
   312dc:	cmp	r1, #0
   312e0:	popne	{r4, r5, r6, sl, fp, pc}
   312e4:	ldr	r0, [r4, #4]
   312e8:	add	r0, r0, r5, lsl #1
   312ec:	add	r1, r6, #4
   312f0:	strh	r1, [r0]
   312f4:	ldrh	r0, [r4, #8]
   312f8:	cmp	r0, r5
   312fc:	addls	r0, r5, #1
   31300:	strhls	r0, [r4, #8]
   31304:	ldr	r0, [r4, #16]
   31308:	add	r0, r0, r6
   3130c:	pop	{r4, r5, r6, sl, fp, pc}

00031310 <flatcc_builder_table_edit@@Base>:
   31310:	push	{fp, lr}
   31314:	mov	fp, sp
   31318:	ldr	r2, [r0, #32]
   3131c:	ldrh	r2, [r2, #14]
   31320:	cmp	r2, #3
   31324:	ldreq	r2, [r0, #16]
   31328:	ldreq	r0, [r0, #20]
   3132c:	addeq	r0, r2, r0
   31330:	subeq	r0, r0, r1
   31334:	popeq	{fp, pc}
   31338:	movw	r0, #63604	; 0xf874
   3133c:	movt	r0, #4
   31340:	movw	r1, #61535	; 0xf05f
   31344:	movt	r1, #4
   31348:	movw	r3, #65324	; 0xff2c
   3134c:	movt	r3, #4
   31350:	movw	r2, #1794	; 0x702
   31354:	bl	14984 <__assert_fail@plt>

00031358 <flatcc_builder_table_add_copy@@Base>:
   31358:	push	{r4, r5, r6, sl, fp, lr}
   3135c:	add	fp, sp, #16
   31360:	mov	r4, r3
   31364:	mov	r5, r2
   31368:	ldr	r3, [fp, #8]
   3136c:	mov	r2, r4
   31370:	bl	30a90 <flatcc_builder_table_add@@Base>
   31374:	mov	r6, r0
   31378:	cmp	r0, #0
   3137c:	beq	31390 <flatcc_builder_table_add_copy@@Base+0x38>
   31380:	mov	r0, r6
   31384:	mov	r1, r5
   31388:	mov	r2, r4
   3138c:	bl	14810 <memcpy@plt>
   31390:	mov	r0, r6
   31394:	pop	{r4, r5, r6, sl, fp, pc}
   31398:	push	{r4, r5, r6, r7, fp, lr}
   3139c:	add	fp, sp, #16
   313a0:	mov	r5, r1
   313a4:	mov	r4, r0
   313a8:	ldr	r0, [r0, #20]
   313ac:	ldr	r1, [r4, #24]
   313b0:	add	r0, r0, #3
   313b4:	bic	r7, r0, #3
   313b8:	add	r6, r7, #4
   313bc:	str	r6, [r4, #20]
   313c0:	cmp	r6, r1
   313c4:	bls	313e8 <flatcc_builder_table_add_copy@@Base+0x90>
   313c8:	mov	r0, r4
   313cc:	mov	r1, r6
   313d0:	movw	r2, #65532	; 0xfffc
   313d4:	bl	31730 <flatcc_builder_get_emit_context@@Base+0x18>
   313d8:	mov	r1, r0
   313dc:	mov	r0, #0
   313e0:	cmp	r1, #0
   313e4:	popne	{r4, r5, r6, r7, fp, pc}
   313e8:	ldr	r0, [r4, #4]
   313ec:	add	r0, r0, r5, lsl #1
   313f0:	strh	r6, [r0]
   313f4:	ldrh	r0, [r4, #8]
   313f8:	cmp	r0, r5
   313fc:	addls	r0, r5, #1
   31400:	strhls	r0, [r4, #8]
   31404:	ldr	r0, [r4]
   31408:	add	r1, r0, #2
   3140c:	str	r1, [r4]
   31410:	strh	r7, [r0]
   31414:	ldr	r0, [r4, #16]
   31418:	add	r0, r0, r7
   3141c:	pop	{r4, r5, r6, r7, fp, pc}

00031420 <flatcc_builder_push_buffer_alignment@@Base>:
   31420:	ldrh	r1, [r0, #128]	; 0x80
   31424:	mov	r2, #4
   31428:	strh	r2, [r0, #128]	; 0x80
   3142c:	mov	r0, r1
   31430:	bx	lr

00031434 <flatcc_builder_pop_buffer_alignment@@Base>:
   31434:	b	2eecc <flatcc_builder_create_buffer@@Base+0x1cc>

00031438 <flatcc_builder_get_buffer_alignment@@Base>:
   31438:	ldrh	r0, [r0, #128]	; 0x80
   3143c:	bx	lr

00031440 <flatcc_builder_set_vtable_clustering@@Base>:
   31440:	clz	r1, r1
   31444:	lsr	r1, r1, #5
   31448:	str	r1, [r0, #180]	; 0xb4
   3144c:	bx	lr

00031450 <flatcc_builder_set_block_align@@Base>:
   31450:	strh	r1, [r0, #132]	; 0x84
   31454:	bx	lr

00031458 <flatcc_builder_get_level@@Base>:
   31458:	ldr	r0, [r0, #156]	; 0x9c
   3145c:	bx	lr

00031460 <flatcc_builder_set_max_level@@Base>:
   31460:	str	r1, [r0, #176]	; 0xb0
   31464:	ldr	r2, [r0, #160]	; 0xa0
   31468:	cmp	r2, r1
   3146c:	strlt	r1, [r0, #160]	; 0xa0
   31470:	bx	lr

00031474 <flatcc_builder_get_buffer_size@@Base>:
   31474:	ldr	r1, [r0, #136]	; 0x88
   31478:	ldr	r0, [r0, #140]	; 0x8c
   3147c:	sub	r0, r0, r1
   31480:	bx	lr

00031484 <flatcc_builder_get_buffer_start@@Base>:
   31484:	ldr	r0, [r0, #136]	; 0x88
   31488:	bx	lr

0003148c <flatcc_builder_get_buffer_end@@Base>:
   3148c:	ldr	r0, [r0, #140]	; 0x8c
   31490:	bx	lr

00031494 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31494:	str	r1, [r0, #172]	; 0xac
   31498:	bx	lr

0003149c <flatcc_builder_set_identifier@@Base>:
   3149c:	movw	r2, #61005	; 0xee4d
   314a0:	movt	r2, #4
   314a4:	cmp	r1, #0
   314a8:	movne	r2, r1
   314ac:	ldr	r1, [r2]
   314b0:	str	r1, [r0, #168]	; 0xa8
   314b4:	bx	lr

000314b8 <flatcc_builder_get_type@@Base>:
   314b8:	ldr	r0, [r0, #32]
   314bc:	cmp	r0, #0
   314c0:	ldrhne	r0, [r0, #14]
   314c4:	moveq	r0, #0
   314c8:	bx	lr

000314cc <flatcc_builder_get_type_at@@Base>:
   314cc:	mov	r2, r0
   314d0:	mov	r0, #0
   314d4:	cmp	r1, #1
   314d8:	blt	314fc <flatcc_builder_get_type_at@@Base+0x30>
   314dc:	ldr	r3, [r2, #156]	; 0x9c
   314e0:	cmp	r3, r1
   314e4:	bxlt	lr
   314e8:	sub	r0, r1, r3
   314ec:	add	r0, r0, r0, lsl #3
   314f0:	ldr	r1, [r2, #32]
   314f4:	add	r0, r1, r0, lsl #2
   314f8:	ldrh	r0, [r0, #14]
   314fc:	bx	lr

00031500 <flatcc_builder_get_direct_buffer@@Base>:
   31500:	ldr	r2, [r0, #184]	; 0xb8
   31504:	cmp	r2, #0
   31508:	beq	31514 <flatcc_builder_get_direct_buffer@@Base+0x14>
   3150c:	add	r0, r0, #188	; 0xbc
   31510:	b	31528 <flatcc_builder_get_direct_buffer@@Base+0x28>
   31514:	cmp	r1, #0
   31518:	movne	r0, #0
   3151c:	strne	r0, [r1]
   31520:	mov	r0, #0
   31524:	bx	lr
   31528:	ldm	r0, {r2, r3}
   3152c:	cmp	r2, r3
   31530:	beq	31544 <flatcc_builder_get_direct_buffer@@Base+0x44>
   31534:	mov	r0, #0
   31538:	cmp	r1, #0
   3153c:	strne	r0, [r1]
   31540:	bx	lr
   31544:	cmp	r1, #0
   31548:	ldrne	r2, [r0, #24]
   3154c:	strne	r2, [r1]
   31550:	ldr	r0, [r0, #8]
   31554:	bx	lr

00031558 <flatcc_builder_copy_buffer@@Base>:
   31558:	push	{fp, lr}
   3155c:	mov	fp, sp
   31560:	ldr	r3, [r0, #184]	; 0xb8
   31564:	cmp	r3, #0
   31568:	beq	3159c <flatcc_builder_copy_buffer@@Base+0x44>
   3156c:	add	r0, r0, #188	; 0xbc
   31570:	bl	31c68 <flatcc_emitter_copy_buffer@@Base>
   31574:	cmp	r0, #0
   31578:	popne	{fp, pc}
   3157c:	movw	r0, #62131	; 0xf2b3
   31580:	movt	r0, #4
   31584:	movw	r1, #61535	; 0xf05f
   31588:	movt	r1, #4
   3158c:	movw	r3, #65463	; 0xffb7
   31590:	movt	r3, #4
   31594:	movw	r2, #1926	; 0x786
   31598:	bl	14984 <__assert_fail@plt>
   3159c:	mov	r0, #0
   315a0:	pop	{fp, pc}

000315a4 <flatcc_builder_finalize_buffer@@Base>:
   315a4:	push	{r4, r5, r6, sl, fp, lr}
   315a8:	add	fp, sp, #16
   315ac:	mov	r6, r1
   315b0:	mov	r4, r0
   315b4:	bl	31474 <flatcc_builder_get_buffer_size@@Base>
   315b8:	mov	r5, r0
   315bc:	cmp	r6, #0
   315c0:	strne	r5, [r6]
   315c4:	mov	r0, r5
   315c8:	bl	14870 <malloc@plt>
   315cc:	cmp	r0, #0
   315d0:	beq	31614 <flatcc_builder_finalize_buffer@@Base+0x70>
   315d4:	mov	r6, r0
   315d8:	mov	r0, r4
   315dc:	mov	r1, r6
   315e0:	mov	r2, r5
   315e4:	bl	31558 <flatcc_builder_copy_buffer@@Base>
   315e8:	cmp	r0, #0
   315ec:	movne	r0, r6
   315f0:	popne	{r4, r5, r6, sl, fp, pc}
   315f4:	movw	r0, #25261	; 0x62ad
   315f8:	movt	r0, #4
   315fc:	movw	r1, #61535	; 0xf05f
   31600:	movt	r1, #4
   31604:	movw	r3, #65532	; 0xfffc
   31608:	movt	r3, #4
   3160c:	movw	r2, #1948	; 0x79c
   31610:	bl	14984 <__assert_fail@plt>
   31614:	movw	r0, #25261	; 0x62ad
   31618:	movt	r0, #4
   3161c:	movw	r1, #61535	; 0xf05f
   31620:	movt	r1, #4
   31624:	movw	r3, #65532	; 0xfffc
   31628:	movt	r3, #4
   3162c:	movw	r2, #1944	; 0x798
   31630:	bl	14984 <__assert_fail@plt>

00031634 <flatcc_builder_finalize_aligned_buffer@@Base>:
   31634:	push	{r4, r5, r6, r7, fp, lr}
   31638:	add	fp, sp, #16
   3163c:	mov	r4, r1
   31640:	mov	r5, r0
   31644:	bl	31474 <flatcc_builder_get_buffer_size@@Base>
   31648:	mov	r6, r0
   3164c:	cmp	r4, #0
   31650:	strne	r6, [r4]
   31654:	mov	r0, r5
   31658:	bl	31438 <flatcc_builder_get_buffer_alignment@@Base>
   3165c:	add	r1, r6, r0
   31660:	sub	r1, r1, #1
   31664:	rsb	r2, r0, #0
   31668:	and	r7, r1, r2
   3166c:	mov	r1, r7
   31670:	bl	316bc <flatcc_builder_finalize_aligned_buffer@@Base+0x88>
   31674:	cmp	r0, #0
   31678:	beq	316a8 <flatcc_builder_finalize_aligned_buffer@@Base+0x74>
   3167c:	mov	r6, r0
   31680:	mov	r0, r5
   31684:	mov	r1, r6
   31688:	mov	r2, r7
   3168c:	bl	31558 <flatcc_builder_copy_buffer@@Base>
   31690:	cmp	r0, #0
   31694:	beq	316a0 <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
   31698:	mov	r0, r6
   3169c:	pop	{r4, r5, r6, r7, fp, pc}
   316a0:	mov	r0, r6
   316a4:	bl	14804 <free@plt>
   316a8:	mov	r6, #0
   316ac:	cmp	r4, #0
   316b0:	strne	r6, [r4]
   316b4:	mov	r0, r6
   316b8:	pop	{r4, r5, r6, r7, fp, pc}
   316bc:	push	{fp, lr}
   316c0:	mov	fp, sp
   316c4:	sub	sp, sp, #8
   316c8:	mov	r2, r1
   316cc:	mov	r1, r0
   316d0:	mov	r0, #0
   316d4:	str	r0, [sp, #4]
   316d8:	cmp	r1, #4
   316dc:	movls	r1, #4
   316e0:	add	r0, sp, #4
   316e4:	bl	148d0 <posix_memalign@plt>
   316e8:	cmp	r0, #0
   316ec:	ldrne	r0, [sp, #4]
   316f0:	cmpne	r0, #0
   316f4:	beq	31704 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   316f8:	bl	14804 <free@plt>
   316fc:	mov	r0, #0
   31700:	str	r0, [sp, #4]
   31704:	ldr	r0, [sp, #4]
   31708:	mov	sp, fp
   3170c:	pop	{fp, pc}

00031710 <flatcc_builder_aligned_alloc@@Base>:
   31710:	b	316bc <flatcc_builder_finalize_aligned_buffer@@Base+0x88>

00031714 <flatcc_builder_aligned_free@@Base>:
   31714:	b	14804 <free@plt>

00031718 <flatcc_builder_get_emit_context@@Base>:
   31718:	ldr	r0, [r0, #36]	; 0x24
   3171c:	bx	lr
   31720:	ldr	r0, [r0, #140]	; 0x8c
   31724:	sub	r1, r1, #1
   31728:	and	r0, r0, r1
   3172c:	bx	lr
   31730:	push	{r4, r5, r6, sl, fp, lr}
   31734:	add	fp, sp, #16
   31738:	sub	sp, sp, #8
   3173c:	mov	r6, r2
   31740:	mov	r5, r0
   31744:	ldr	r2, [r0, #28]
   31748:	ldr	r0, [r0, #40]	; 0x28
   3174c:	ldr	r4, [r5, #48]	; 0x30
   31750:	mov	r3, #1
   31754:	str	r3, [sp]
   31758:	add	r2, r2, r1
   3175c:	add	r1, r5, #60	; 0x3c
   31760:	mov	r3, #1
   31764:	blx	r4
   31768:	mov	r1, r0
   3176c:	mvn	r0, #0
   31770:	cmp	r1, #0
   31774:	beq	31780 <flatcc_builder_get_emit_context@@Base+0x68>
   31778:	sub	sp, fp, #16
   3177c:	pop	{r4, r5, r6, sl, fp, pc}
   31780:	mov	r0, r5
   31784:	mov	r1, r6
   31788:	bl	2f2dc <flatcc_builder_start_struct@@Base+0x4c>
   3178c:	mov	r0, #0
   31790:	sub	sp, fp, #16
   31794:	pop	{r4, r5, r6, sl, fp, pc}
   31798:	push	{r4, r5, r6, sl, fp, lr}
   3179c:	add	fp, sp, #16
   317a0:	sub	sp, sp, #8
   317a4:	mov	r4, r0
   317a8:	ldr	r0, [r0, #124]	; 0x7c
   317ac:	cmp	r0, #0
   317b0:	bne	31850 <flatcc_builder_get_emit_context@@Base+0x138>
   317b4:	mov	r0, #0
   317b8:	str	r0, [sp]
   317bc:	mov	r6, #16
   317c0:	mov	r0, r4
   317c4:	mov	r1, #6
   317c8:	mov	r2, #0
   317cc:	mov	r3, #16
   317d0:	bl	2e8f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   317d4:	mvn	r5, #0
   317d8:	cmp	r0, #0
   317dc:	beq	31844 <flatcc_builder_get_emit_context@@Base+0x12c>
   317e0:	add	r1, r4, #92	; 0x5c
   317e4:	str	r6, [r4, #124]	; 0x7c
   317e8:	ldr	r0, [r4, #40]	; 0x28
   317ec:	ldr	ip, [r4, #48]	; 0x30
   317f0:	mov	r2, #5
   317f4:	str	r2, [sp]
   317f8:	mov	r6, #256	; 0x100
   317fc:	mov	r2, #256	; 0x100
   31800:	mov	r3, #1
   31804:	blx	ip
   31808:	cmp	r0, #0
   3180c:	bne	31844 <flatcc_builder_get_emit_context@@Base+0x12c>
   31810:	ldr	r0, [r4, #96]	; 0x60
   31814:	mov	r1, r6
   31818:	lsl	r6, r6, #1
   3181c:	cmp	r0, r1, lsl #1
   31820:	bcs	31814 <flatcc_builder_get_emit_context@@Base+0xfc>
   31824:	lsr	r1, r1, #2
   31828:	mvn	r0, #0
   3182c:	mov	r2, #1
   31830:	add	r0, r0, #1
   31834:	cmp	r1, r2, lsl r0
   31838:	bhi	31830 <flatcc_builder_get_emit_context@@Base+0x118>
   3183c:	str	r0, [r4, #116]	; 0x74
   31840:	mov	r5, #0
   31844:	mov	r0, r5
   31848:	sub	sp, fp, #16
   3184c:	pop	{r4, r5, r6, sl, fp, pc}
   31850:	movw	r0, #457	; 0x1c9
   31854:	movt	r0, #5
   31858:	movw	r1, #61535	; 0xf05f
   3185c:	movt	r1, #4
   31860:	movw	r3, #472	; 0x1d8
   31864:	movt	r3, #5
   31868:	movw	r2, #342	; 0x156
   3186c:	bl	14984 <__assert_fail@plt>

00031870 <flatcc_emitter_recycle_page@@Base>:
   31870:	ldr	ip, [r0]
   31874:	mvn	r2, #0
   31878:	cmp	ip, r1
   3187c:	beq	318c4 <flatcc_emitter_recycle_page@@Base+0x54>
   31880:	ldr	r3, [r0, #4]
   31884:	cmp	r3, r1
   31888:	beq	318c4 <flatcc_emitter_recycle_page@@Base+0x54>
   3188c:	ldr	r2, [r1, #2944]	; 0xb80
   31890:	ldr	r3, [r1, #2948]	; 0xb84
   31894:	str	r3, [r2, #2948]	; 0xb84
   31898:	ldr	r2, [r1, #2944]	; 0xb80
   3189c:	ldr	r3, [r1, #2948]	; 0xb84
   318a0:	str	r2, [r3, #2944]	; 0xb80
   318a4:	ldr	r2, [ip, #2948]	; 0xb84
   318a8:	str	r2, [r1, #2948]	; 0xb84
   318ac:	ldr	r0, [r0]
   318b0:	str	r0, [r1, #2944]	; 0xb80
   318b4:	str	r1, [r2, #2944]	; 0xb80
   318b8:	ldr	r0, [r1, #2944]	; 0xb80
   318bc:	str	r1, [r0, #2948]	; 0xb84
   318c0:	mov	r2, #0
   318c4:	mov	r0, r2
   318c8:	bx	lr

000318cc <flatcc_emitter_reset@@Base>:
   318cc:	push	{r4, sl, fp, lr}
   318d0:	add	fp, sp, #8
   318d4:	mov	r4, r0
   318d8:	ldr	r0, [r0]
   318dc:	cmp	r0, #0
   318e0:	beq	31988 <flatcc_emitter_reset@@Base+0xbc>
   318e4:	mov	r1, #1472	; 0x5c0
   318e8:	add	r2, r0, #1472	; 0x5c0
   318ec:	stmib	r4, {r0, r2}
   318f0:	str	r1, [r4, #12]
   318f4:	str	r2, [r4, #16]
   318f8:	str	r1, [r4, #20]
   318fc:	movw	r1, #64064	; 0xfa40
   31900:	movt	r1, #65535	; 0xffff
   31904:	str	r1, [r0, #2952]	; 0xb88
   31908:	ldr	r0, [r4, #32]
   3190c:	cmp	r0, #0
   31910:	bne	3191c <flatcc_emitter_reset@@Base+0x50>
   31914:	ldr	r0, [r4, #24]
   31918:	str	r0, [r4, #32]
   3191c:	add	r2, r4, #24
   31920:	ldm	r2, {r0, r1, r2}
   31924:	mov	r3, #0
   31928:	str	r3, [r4, #24]
   3192c:	add	r2, r2, r2, lsl #1
   31930:	lsr	r2, r2, #2
   31934:	add	r0, r2, r0, lsr #2
   31938:	str	r0, [r4, #32]
   3193c:	cmp	r1, r0, lsl #1
   31940:	popls	{r4, sl, fp, pc}
   31944:	ldr	r2, [r4]
   31948:	ldr	r1, [r4, #4]
   3194c:	ldr	r0, [r1, #2944]	; 0xb80
   31950:	cmp	r0, r2
   31954:	beq	31988 <flatcc_emitter_reset@@Base+0xbc>
   31958:	ldr	r2, [r0, #2944]	; 0xb80
   3195c:	str	r2, [r1, #2944]	; 0xb80
   31960:	ldr	r1, [r0, #2944]	; 0xb80
   31964:	ldr	r2, [r4, #4]
   31968:	str	r2, [r1, #2948]	; 0xb84
   3196c:	bl	14804 <free@plt>
   31970:	ldr	r0, [r4, #28]
   31974:	ldr	r1, [r4, #32]
   31978:	sub	r0, r0, #2944	; 0xb80
   3197c:	str	r0, [r4, #28]
   31980:	cmp	r0, r1, lsl #1
   31984:	bhi	31944 <flatcc_emitter_reset@@Base+0x78>
   31988:	pop	{r4, sl, fp, pc}

0003198c <flatcc_emitter_clear@@Base>:
   3198c:	push	{r4, r5, r6, sl, fp, lr}
   31990:	add	fp, sp, #16
   31994:	ldr	r5, [r0]
   31998:	cmp	r5, #0
   3199c:	beq	319ec <flatcc_emitter_clear@@Base+0x60>
   319a0:	mov	r4, r0
   319a4:	ldr	r0, [r5, #2948]	; 0xb84
   319a8:	mov	r6, #0
   319ac:	str	r6, [r0, #2944]	; 0xb80
   319b0:	ldr	r0, [r5, #2944]	; 0xb80
   319b4:	cmp	r0, #0
   319b8:	beq	319cc <flatcc_emitter_clear@@Base+0x40>
   319bc:	mov	r5, r0
   319c0:	ldr	r0, [r0, #2948]	; 0xb84
   319c4:	bl	14804 <free@plt>
   319c8:	b	319b0 <flatcc_emitter_clear@@Base+0x24>
   319cc:	mov	r0, r5
   319d0:	bl	14804 <free@plt>
   319d4:	vmov.i32	q8, #0	; 0x00000000
   319d8:	add	r0, r4, #16
   319dc:	vst1.32	{d16-d17}, [r0]
   319e0:	mov	r0, #32
   319e4:	vst1.32	{d16-d17}, [r4], r0
   319e8:	str	r6, [r4]
   319ec:	pop	{r4, r5, r6, sl, fp, pc}

000319f0 <flatcc_emitter@@Base>:
   319f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   319f4:	add	fp, sp, #24
   319f8:	mov	r4, r2
   319fc:	mov	r5, r1
   31a00:	mov	r6, r0
   31a04:	ldr	r1, [r0, #24]
   31a08:	ldr	r0, [fp, #8]
   31a0c:	add	r1, r1, r0
   31a10:	str	r1, [r6, #24]
   31a14:	mov	r1, r6
   31a18:	cmn	r3, #1
   31a1c:	ble	31a5c <flatcc_emitter@@Base+0x6c>
   31a20:	ldr	r2, [r1, #20]!
   31a24:	cmp	r2, r0
   31a28:	bcs	31aa4 <flatcc_emitter@@Base+0xb4>
   31a2c:	mov	r8, #0
   31a30:	cmp	r4, #0
   31a34:	beq	31af4 <flatcc_emitter@@Base+0x104>
   31a38:	ldm	r5, {r1, r2}
   31a3c:	mov	r0, r6
   31a40:	bl	31bb8 <flatcc_emitter@@Base+0x1c8>
   31a44:	cmp	r0, #0
   31a48:	bne	31a98 <flatcc_emitter@@Base+0xa8>
   31a4c:	subs	r4, r4, #1
   31a50:	add	r5, r5, #8
   31a54:	bne	31a38 <flatcc_emitter@@Base+0x48>
   31a58:	b	31af4 <flatcc_emitter@@Base+0x104>
   31a5c:	ldr	r2, [r1, #12]!
   31a60:	cmp	r2, r0
   31a64:	bcs	31ab4 <flatcc_emitter@@Base+0xc4>
   31a68:	add	r0, r5, r4, lsl #3
   31a6c:	sub	r5, r0, #4
   31a70:	rsb	r4, r4, #1
   31a74:	cmp	r4, #1
   31a78:	beq	31afc <flatcc_emitter@@Base+0x10c>
   31a7c:	ldmda	r5, {r1, r2}
   31a80:	mov	r0, r6
   31a84:	bl	31b08 <flatcc_emitter@@Base+0x118>
   31a88:	sub	r5, r5, #8
   31a8c:	add	r4, r4, #1
   31a90:	cmp	r0, #0
   31a94:	beq	31a74 <flatcc_emitter@@Base+0x84>
   31a98:	mvn	r8, #0
   31a9c:	mov	r0, r8
   31aa0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31aa4:	ldr	r7, [r6, #16]
   31aa8:	add	r3, r7, r0
   31aac:	str	r3, [r6, #16]
   31ab0:	b	31ac0 <flatcc_emitter@@Base+0xd0>
   31ab4:	ldr	r3, [r6, #8]
   31ab8:	sub	r7, r3, r0
   31abc:	str	r7, [r6, #8]
   31ac0:	sub	r0, r2, r0
   31ac4:	str	r0, [r1]
   31ac8:	mov	r8, #0
   31acc:	cmp	r4, #0
   31ad0:	beq	31af4 <flatcc_emitter@@Base+0x104>
   31ad4:	ldm	r5, {r1, r2}
   31ad8:	mov	r0, r7
   31adc:	bl	14810 <memcpy@plt>
   31ae0:	ldr	r0, [r5, #4]
   31ae4:	add	r7, r7, r0
   31ae8:	add	r5, r5, #8
   31aec:	subs	r4, r4, #1
   31af0:	bne	31ad4 <flatcc_emitter@@Base+0xe4>
   31af4:	mov	r0, r8
   31af8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31afc:	mov	r8, #0
   31b00:	mov	r0, r8
   31b04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31b08:	push	{r4, r5, r6, r7, fp, lr}
   31b0c:	add	fp, sp, #16
   31b10:	cmp	r2, #0
   31b14:	beq	31ba4 <flatcc_emitter@@Base+0x1b4>
   31b18:	mov	r4, r2
   31b1c:	mov	r5, r0
   31b20:	clz	r0, r2
   31b24:	lsr	r7, r0, #5
   31b28:	add	r6, r1, r2
   31b2c:	ldr	r0, [r5, #12]
   31b30:	cmp	r4, r0
   31b34:	bls	31b64 <flatcc_emitter@@Base+0x174>
   31b38:	cmp	r0, #0
   31b3c:	bne	31b6c <flatcc_emitter@@Base+0x17c>
   31b40:	mov	r0, r5
   31b44:	bl	31d24 <flatcc_emitter_copy_buffer@@Base+0xbc>
   31b48:	cmp	r0, #0
   31b4c:	mov	r1, r0
   31b50:	movwne	r1, #1
   31b54:	orr	r1, r1, r7
   31b58:	tst	r1, #1
   31b5c:	beq	31b2c <flatcc_emitter@@Base+0x13c>
   31b60:	b	31bac <flatcc_emitter@@Base+0x1bc>
   31b64:	mov	r7, r4
   31b68:	b	31b70 <flatcc_emitter@@Base+0x180>
   31b6c:	mov	r7, r0
   31b70:	sub	r0, r0, r7
   31b74:	str	r0, [r5, #12]
   31b78:	ldr	r0, [r5, #8]
   31b7c:	sub	r0, r0, r7
   31b80:	str	r0, [r5, #8]
   31b84:	sub	r6, r6, r7
   31b88:	mov	r1, r6
   31b8c:	mov	r2, r7
   31b90:	bl	14810 <memcpy@plt>
   31b94:	subs	r4, r4, r7
   31b98:	clz	r0, r4
   31b9c:	lsr	r7, r0, #5
   31ba0:	bne	31b2c <flatcc_emitter@@Base+0x13c>
   31ba4:	mov	r0, #0
   31ba8:	pop	{r4, r5, r6, r7, fp, pc}
   31bac:	cmp	r0, #0
   31bb0:	mvnne	r0, #0
   31bb4:	pop	{r4, r5, r6, r7, fp, pc}
   31bb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31bbc:	add	fp, sp, #24
   31bc0:	cmp	r2, #0
   31bc4:	beq	31c54 <flatcc_emitter@@Base+0x264>
   31bc8:	mov	r4, r2
   31bcc:	mov	r8, r1
   31bd0:	mov	r6, r0
   31bd4:	clz	r0, r2
   31bd8:	lsr	r5, r0, #5
   31bdc:	ldr	r7, [r6, #20]
   31be0:	cmp	r4, r7
   31be4:	bls	31c14 <flatcc_emitter@@Base+0x224>
   31be8:	cmp	r7, #0
   31bec:	bne	31c18 <flatcc_emitter@@Base+0x228>
   31bf0:	mov	r0, r6
   31bf4:	bl	31e14 <flatcc_emitter_copy_buffer@@Base+0x1ac>
   31bf8:	cmp	r0, #0
   31bfc:	mov	r1, r0
   31c00:	movwne	r1, #1
   31c04:	orr	r1, r1, r5
   31c08:	tst	r1, #1
   31c0c:	beq	31bdc <flatcc_emitter@@Base+0x1ec>
   31c10:	b	31c5c <flatcc_emitter@@Base+0x26c>
   31c14:	mov	r7, r4
   31c18:	ldr	r0, [r6, #16]
   31c1c:	mov	r1, r8
   31c20:	mov	r2, r7
   31c24:	bl	14810 <memcpy@plt>
   31c28:	ldr	r0, [r6, #16]
   31c2c:	ldr	r1, [r6, #20]
   31c30:	add	r0, r0, r7
   31c34:	sub	r1, r1, r7
   31c38:	str	r0, [r6, #16]
   31c3c:	str	r1, [r6, #20]
   31c40:	add	r8, r8, r7
   31c44:	subs	r4, r4, r7
   31c48:	clz	r0, r4
   31c4c:	lsr	r5, r0, #5
   31c50:	bne	31bdc <flatcc_emitter@@Base+0x1ec>
   31c54:	mov	r0, #0
   31c58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31c5c:	cmp	r0, #0
   31c60:	mvnne	r0, #0
   31c64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031c68 <flatcc_emitter_copy_buffer@@Base>:
   31c68:	push	{r4, r5, r6, sl, fp, lr}
   31c6c:	add	fp, sp, #16
   31c70:	mov	r3, r2
   31c74:	ldr	r2, [r0, #24]
   31c78:	mov	r5, #0
   31c7c:	cmp	r2, r3
   31c80:	bhi	31d08 <flatcc_emitter_copy_buffer@@Base+0xa0>
   31c84:	mov	r4, r0
   31c88:	ldr	r0, [r0]
   31c8c:	cmp	r0, #0
   31c90:	beq	31d08 <flatcc_emitter_copy_buffer@@Base+0xa0>
   31c94:	mov	r6, r1
   31c98:	ldr	r1, [r4, #4]
   31c9c:	cmp	r0, r1
   31ca0:	beq	31d10 <flatcc_emitter_copy_buffer@@Base+0xa8>
   31ca4:	ldr	r1, [r4, #8]
   31ca8:	ldr	r0, [r4, #12]
   31cac:	rsb	r5, r0, #2944	; 0xb80
   31cb0:	mov	r0, r6
   31cb4:	mov	r2, r5
   31cb8:	bl	14810 <memcpy@plt>
   31cbc:	add	r5, r6, r5
   31cc0:	ldm	r4, {r0, r1}
   31cc4:	ldr	r6, [r0, #2944]	; 0xb80
   31cc8:	cmp	r6, r1
   31ccc:	beq	31cf4 <flatcc_emitter_copy_buffer@@Base+0x8c>
   31cd0:	mov	r0, r5
   31cd4:	mov	r1, r6
   31cd8:	mov	r2, #2944	; 0xb80
   31cdc:	bl	14810 <memcpy@plt>
   31ce0:	add	r5, r5, #2944	; 0xb80
   31ce4:	ldr	r6, [r6, #2944]	; 0xb80
   31ce8:	ldr	r0, [r4, #4]
   31cec:	cmp	r6, r0
   31cf0:	bne	31cd0 <flatcc_emitter_copy_buffer@@Base+0x68>
   31cf4:	ldr	r0, [r4, #20]
   31cf8:	rsb	r2, r0, #2944	; 0xb80
   31cfc:	mov	r0, r5
   31d00:	mov	r1, r6
   31d04:	bl	14810 <memcpy@plt>
   31d08:	mov	r0, r5
   31d0c:	pop	{r4, r5, r6, sl, fp, pc}
   31d10:	ldr	r1, [r4, #8]
   31d14:	mov	r0, r6
   31d18:	bl	14810 <memcpy@plt>
   31d1c:	mov	r0, r6
   31d20:	pop	{r4, r5, r6, sl, fp, pc}
   31d24:	push	{r4, r5, fp, lr}
   31d28:	add	fp, sp, #8
   31d2c:	mov	r4, r0
   31d30:	ldr	r5, [r0]
   31d34:	cmp	r5, #0
   31d38:	beq	31d60 <flatcc_emitter_copy_buffer@@Base+0xf8>
   31d3c:	ldr	r0, [r5, #2948]	; 0xb84
   31d40:	ldr	r1, [r4, #4]
   31d44:	cmp	r0, r1
   31d48:	beq	31d60 <flatcc_emitter_copy_buffer@@Base+0xf8>
   31d4c:	ldr	r1, [r5, #2952]	; 0xb88
   31d50:	sub	r1, r1, #2944	; 0xb80
   31d54:	str	r1, [r0, #2952]	; 0xb88
   31d58:	ldr	r0, [r5, #2948]	; 0xb84
   31d5c:	b	31d9c <flatcc_emitter_copy_buffer@@Base+0x134>
   31d60:	movw	r0, #2956	; 0xb8c
   31d64:	bl	14870 <malloc@plt>
   31d68:	cmp	r0, #0
   31d6c:	beq	31dcc <flatcc_emitter_copy_buffer@@Base+0x164>
   31d70:	ldr	r1, [r4, #28]
   31d74:	add	r1, r1, #2944	; 0xb80
   31d78:	str	r1, [r4, #28]
   31d7c:	cmp	r5, #0
   31d80:	beq	31dd4 <flatcc_emitter_copy_buffer@@Base+0x16c>
   31d84:	ldm	r4, {r1, r2}
   31d88:	str	r1, [r0, #2944]	; 0xb80
   31d8c:	str	r2, [r0, #2948]	; 0xb84
   31d90:	str	r0, [r1, #2948]	; 0xb84
   31d94:	ldr	r1, [r4, #4]
   31d98:	str	r0, [r1, #2944]	; 0xb80
   31d9c:	str	r0, [r4]
   31da0:	mov	r0, #2944	; 0xb80
   31da4:	ldr	r1, [r4]
   31da8:	add	r2, r1, #2944	; 0xb80
   31dac:	str	r2, [r4, #8]
   31db0:	str	r0, [r4, #12]
   31db4:	ldr	r0, [r1, #2944]	; 0xb80
   31db8:	ldr	r0, [r0, #2952]	; 0xb88
   31dbc:	sub	r0, r0, #2944	; 0xb80
   31dc0:	str	r0, [r1, #2952]	; 0xb88
   31dc4:	mov	r0, #0
   31dc8:	pop	{r4, r5, fp, pc}
   31dcc:	mvn	r0, #0
   31dd0:	pop	{r4, r5, fp, pc}
   31dd4:	str	r0, [r4, #4]
   31dd8:	str	r0, [r4]
   31ddc:	mov	r1, #1472	; 0x5c0
   31de0:	str	r1, [r4, #20]
   31de4:	str	r1, [r4, #12]
   31de8:	ldr	r1, [r4]
   31dec:	add	r1, r1, #1472	; 0x5c0
   31df0:	str	r1, [r4, #16]
   31df4:	str	r1, [r4, #8]
   31df8:	movw	r1, #64064	; 0xfa40
   31dfc:	movt	r1, #65535	; 0xffff
   31e00:	str	r0, [r0, #2944]	; 0xb80
   31e04:	str	r0, [r0, #2948]	; 0xb84
   31e08:	str	r1, [r0, #2952]	; 0xb88
   31e0c:	mov	r0, #0
   31e10:	pop	{r4, r5, fp, pc}
   31e14:	push	{r4, r5, fp, lr}
   31e18:	add	fp, sp, #8
   31e1c:	mov	r4, r0
   31e20:	ldr	r5, [r0, #4]
   31e24:	cmp	r5, #0
   31e28:	beq	31e3c <flatcc_emitter_copy_buffer@@Base+0x1d4>
   31e2c:	ldr	r0, [r5, #2944]	; 0xb80
   31e30:	ldr	r1, [r4]
   31e34:	cmp	r0, r1
   31e38:	bne	31e74 <flatcc_emitter_copy_buffer@@Base+0x20c>
   31e3c:	movw	r0, #2956	; 0xb8c
   31e40:	bl	14870 <malloc@plt>
   31e44:	cmp	r0, #0
   31e48:	beq	31ea0 <flatcc_emitter_copy_buffer@@Base+0x238>
   31e4c:	ldr	r1, [r4, #28]
   31e50:	add	r1, r1, #2944	; 0xb80
   31e54:	str	r1, [r4, #28]
   31e58:	cmp	r5, #0
   31e5c:	beq	31ea8 <flatcc_emitter_copy_buffer@@Base+0x240>
   31e60:	ldr	r1, [r4]
   31e64:	str	r1, [r0, #2944]	; 0xb80
   31e68:	str	r5, [r0, #2948]	; 0xb84
   31e6c:	str	r0, [r1, #2948]	; 0xb84
   31e70:	str	r0, [r5, #2944]	; 0xb80
   31e74:	str	r0, [r4, #4]
   31e78:	mov	r0, #2944	; 0xb80
   31e7c:	ldr	r1, [r4, #4]
   31e80:	str	r1, [r4, #16]
   31e84:	str	r0, [r4, #20]
   31e88:	ldr	r0, [r1, #2948]	; 0xb84
   31e8c:	ldr	r0, [r0, #2952]	; 0xb88
   31e90:	add	r0, r0, #2944	; 0xb80
   31e94:	str	r0, [r1, #2952]	; 0xb88
   31e98:	mov	r0, #0
   31e9c:	pop	{r4, r5, fp, pc}
   31ea0:	mvn	r0, #0
   31ea4:	pop	{r4, r5, fp, pc}
   31ea8:	str	r0, [r4, #4]
   31eac:	str	r0, [r4]
   31eb0:	mov	r1, #1472	; 0x5c0
   31eb4:	str	r1, [r4, #20]
   31eb8:	str	r1, [r4, #12]
   31ebc:	ldr	r1, [r4]
   31ec0:	add	r1, r1, #1472	; 0x5c0
   31ec4:	str	r1, [r4, #16]
   31ec8:	str	r1, [r4, #8]
   31ecc:	movw	r1, #64064	; 0xfa40
   31ed0:	movt	r1, #65535	; 0xffff
   31ed4:	str	r0, [r0, #2944]	; 0xb80
   31ed8:	str	r0, [r0, #2948]	; 0xb84
   31edc:	str	r1, [r0, #2952]	; 0xb88
   31ee0:	mov	r0, #0
   31ee4:	pop	{r4, r5, fp, pc}

00031ee8 <cmetrohash64_1@@Base>:
   31ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31eec:	add	fp, sp, #28
   31ef0:	sub	sp, sp, #52	; 0x34
   31ef4:	mov	r4, r0
   31ef8:	ldr	r0, [fp, #8]
   31efc:	movw	r5, #37345	; 0x91e1
   31f00:	movt	r5, #51258	; 0xc83a
   31f04:	mov	r1, r2
   31f08:	mov	r7, r3
   31f0c:	umlal	r1, r7, r0, r5
   31f10:	movw	r0, #23867	; 0x5d3b
   31f14:	movt	r0, #24802	; 0x60e2
   31f18:	movw	r6, #24283	; 0x5edb
   31f1c:	movt	r6, #44806	; 0xaf06
   31f20:	adds	r9, r1, r6
   31f24:	adc	r6, r7, r0
   31f28:	add	sl, r4, r2
   31f2c:	movw	r7, #49211	; 0xc03b
   31f30:	movt	r7, #31710	; 0x7bde
   31f34:	movw	r8, #56283	; 0xdbdb
   31f38:	movt	r8, #34376	; 0x8648
   31f3c:	subs	r0, r2, #32
   31f40:	sbcs	r0, r3, #0
   31f44:	bcc	32208 <cmetrohash64_1@@Base+0x320>
   31f48:	str	sl, [sp, #12]
   31f4c:	sub	r0, sl, #32
   31f50:	str	r0, [sp, #24]
   31f54:	mov	r5, r6
   31f58:	mov	r3, r9
   31f5c:	mov	r7, r6
   31f60:	mov	r6, r9
   31f64:	str	r5, [fp, #-36]	; 0xffffffdc
   31f68:	str	r9, [fp, #-32]	; 0xffffffe0
   31f6c:	mov	r8, r5
   31f70:	str	r9, [sp, #20]
   31f74:	str	r5, [sp, #8]
   31f78:	str	r3, [sp, #40]	; 0x28
   31f7c:	str	r7, [sp, #36]	; 0x24
   31f80:	mov	r0, r4
   31f84:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   31f88:	movw	r2, #37345	; 0x91e1
   31f8c:	movt	r2, #51258	; 0xc83a
   31f90:	mov	r3, r2
   31f94:	umull	r0, r2, r0, r2
   31f98:	mla	r1, r1, r3, r2
   31f9c:	adds	r0, r0, r9
   31fa0:	adc	r1, r1, r5
   31fa4:	mov	r2, #29
   31fa8:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   31fac:	mov	r5, r6
   31fb0:	adds	r6, r0, r6
   31fb4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   31fb8:	adc	r0, r1, r7
   31fbc:	str	r0, [sp, #32]
   31fc0:	add	r0, r4, #8
   31fc4:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   31fc8:	movw	r2, #56283	; 0xdbdb
   31fcc:	movt	r2, #34376	; 0x8648
   31fd0:	mov	r3, r2
   31fd4:	umull	r0, r2, r0, r2
   31fd8:	mla	r1, r1, r3, r2
   31fdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31fe0:	adds	r0, r0, r2
   31fe4:	adc	r1, r1, r8
   31fe8:	mov	r2, #29
   31fec:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   31ff0:	str	r0, [fp, #-32]	; 0xffffffe0
   31ff4:	mov	sl, r1
   31ff8:	add	r0, r4, #16
   31ffc:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   32000:	movw	r2, #49211	; 0xc03b
   32004:	movt	r2, #31710	; 0x7bde
   32008:	mov	r3, r2
   3200c:	umull	r0, r2, r0, r2
   32010:	mla	r1, r1, r3, r2
   32014:	adds	r0, r0, r5
   32018:	adc	r1, r1, r7
   3201c:	mov	r2, #29
   32020:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32024:	mov	r9, r6
   32028:	adds	r0, r0, r6
   3202c:	str	r0, [sp, #28]
   32030:	ldr	r0, [sp, #32]
   32034:	mov	r5, r0
   32038:	adc	r0, r1, r0
   3203c:	str	r0, [fp, #-36]	; 0xffffffdc
   32040:	ldr	r8, [sp, #40]	; 0x28
   32044:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32048:	adds	r7, r0, r8
   3204c:	ldr	r6, [sp, #36]	; 0x24
   32050:	adc	sl, sl, r6
   32054:	add	r0, r4, #24
   32058:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   3205c:	movw	r2, #28837	; 0x70a5
   32060:	movt	r2, #12120	; 0x2f58
   32064:	mov	r3, r2
   32068:	umull	r0, r2, r0, r2
   3206c:	mla	r1, r1, r3, r2
   32070:	adds	r0, r0, r8
   32074:	adc	r1, r1, r6
   32078:	mov	r2, #29
   3207c:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32080:	str	r7, [fp, #-32]	; 0xffffffe0
   32084:	adds	r3, r0, r7
   32088:	mov	r8, sl
   3208c:	adc	r7, r1, sl
   32090:	ldr	r6, [sp, #28]
   32094:	add	r4, r4, #32
   32098:	ldr	r0, [sp, #24]
   3209c:	cmp	r4, r0
   320a0:	bls	31f78 <cmetrohash64_1@@Base+0x90>
   320a4:	str	r9, [sp, #16]
   320a8:	adds	r0, r3, r9
   320ac:	mov	sl, r5
   320b0:	adc	r1, r7, r5
   320b4:	movw	r2, #37345	; 0x91e1
   320b8:	movt	r2, #51258	; 0xc83a
   320bc:	mov	r5, r2
   320c0:	umull	r0, r2, r0, r2
   320c4:	mla	r1, r1, r5, r2
   320c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   320cc:	adds	r0, r0, r2
   320d0:	mov	r9, r2
   320d4:	adc	r1, r1, r8
   320d8:	mov	r5, r8
   320dc:	str	r8, [sp, #4]
   320e0:	mov	r2, #33	; 0x21
   320e4:	str	r3, [sp, #40]	; 0x28
   320e8:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   320ec:	movw	r2, #56283	; 0xdbdb
   320f0:	movt	r2, #34376	; 0x8648
   320f4:	mov	r3, r2
   320f8:	umull	r0, r2, r0, r2
   320fc:	mla	r1, r1, r3, r2
   32100:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32104:	eor	r2, r1, r2
   32108:	eor	r8, r0, r6
   3210c:	adds	r0, r8, r9
   32110:	adc	r1, r2, r5
   32114:	mov	r9, r2
   32118:	umull	r0, r2, r0, r3
   3211c:	mla	r1, r1, r3, r2
   32120:	ldr	r6, [sp, #16]
   32124:	adds	r0, r0, r6
   32128:	adc	r1, r1, sl
   3212c:	mov	r2, #33	; 0x21
   32130:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32134:	movw	r5, #37345	; 0x91e1
   32138:	movt	r5, #51258	; 0xc83a
   3213c:	umull	r0, r2, r0, r5
   32140:	mla	r1, r1, r5, r2
   32144:	eor	r7, r1, r7
   32148:	adds	r1, r8, r6
   3214c:	adc	r2, r9, sl
   32150:	umull	r1, r3, r1, r5
   32154:	mla	r2, r2, r5, r3
   32158:	ldr	r3, [sp, #40]	; 0x28
   3215c:	eor	r6, r0, r3
   32160:	adds	r0, r1, r6
   32164:	adc	r1, r2, r7
   32168:	mov	r2, #33	; 0x21
   3216c:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32170:	str	r0, [fp, #-36]	; 0xffffffdc
   32174:	str	r1, [sp, #40]	; 0x28
   32178:	ldr	r5, [fp, #-32]	; 0xffffffe0
   3217c:	adds	r0, r6, r5
   32180:	ldr	r6, [sp, #4]
   32184:	adc	r1, r7, r6
   32188:	movw	r7, #56283	; 0xdbdb
   3218c:	movt	r7, #34376	; 0x8648
   32190:	umull	r0, r2, r0, r7
   32194:	mla	r1, r1, r7, r2
   32198:	adds	r0, r0, r8
   3219c:	adc	r1, r1, r9
   321a0:	mov	r2, #33	; 0x21
   321a4:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   321a8:	movw	ip, #37345	; 0x91e1
   321ac:	movt	ip, #51258	; 0xc83a
   321b0:	umull	lr, r2, r0, ip
   321b4:	mla	r1, r1, ip, r2
   321b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   321bc:	umull	r2, r3, r2, r7
   321c0:	mov	r8, r7
   321c4:	ldr	r0, [sp, #40]	; 0x28
   321c8:	mla	r3, r0, r7, r3
   321cc:	eor	r6, r6, sl
   321d0:	eor	r3, r6, r3
   321d4:	eor	r1, r3, r1
   321d8:	ldr	r3, [sp, #16]
   321dc:	eor	r3, r5, r3
   321e0:	eor	r2, r3, r2
   321e4:	eor	r0, r2, lr
   321e8:	ldr	r9, [sp, #20]
   321ec:	adds	r9, r0, r9
   321f0:	ldr	r6, [sp, #8]
   321f4:	adc	r6, r1, r6
   321f8:	mov	r5, ip
   321fc:	ldr	sl, [sp, #12]
   32200:	movw	r7, #49211	; 0xc03b
   32204:	movt	r7, #31710	; 0x7bde
   32208:	sub	r0, sl, r4
   3220c:	cmp	r0, #16
   32210:	blt	32328 <cmetrohash64_1@@Base+0x440>
   32214:	mov	r0, r4
   32218:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   3221c:	umull	r0, r2, r0, r5
   32220:	mla	r1, r1, r5, r2
   32224:	adds	r0, r0, r9
   32228:	adc	r1, r1, r6
   3222c:	mov	r2, #33	; 0x21
   32230:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32234:	str	r4, [fp, #-32]	; 0xffffffe0
   32238:	str	r0, [fp, #-36]	; 0xffffffdc
   3223c:	str	r1, [sp, #40]	; 0x28
   32240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32244:	add	r0, r0, #8
   32248:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   3224c:	umull	r0, r2, r0, r8
   32250:	mla	r1, r1, r8, r2
   32254:	adds	r0, r0, r9
   32258:	adc	r1, r1, r6
   3225c:	mov	r2, #33	; 0x21
   32260:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32264:	str	r9, [sp, #20]
   32268:	mov	r5, r0
   3226c:	str	r1, [sp, #36]	; 0x24
   32270:	umull	r4, r0, r0, r7
   32274:	str	r4, [sp, #32]
   32278:	mla	r9, r1, r7, r0
   3227c:	movw	r1, #18043	; 0x467b
   32280:	movt	r1, #12846	; 0x322e
   32284:	ldr	r7, [fp, #-36]	; 0xffffffdc
   32288:	umull	r0, r2, r7, r1
   3228c:	movw	r3, #42186	; 0xa4ca
   32290:	movt	r3, #26887	; 0x6907
   32294:	mla	r2, r7, r3, r2
   32298:	ldr	r7, [sp, #40]	; 0x28
   3229c:	mla	r1, r7, r1, r2
   322a0:	mov	r2, #35	; 0x23
   322a4:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   322a8:	adds	r0, r0, r4
   322ac:	adc	r1, r1, r9
   322b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   322b4:	umull	r2, r3, r2, r8
   322b8:	mla	r3, r7, r8, r3
   322bc:	mov	r7, sl
   322c0:	eor	sl, r1, r3
   322c4:	eor	r4, r0, r2
   322c8:	movw	r1, #46599	; 0xb607
   322cc:	movt	r1, #13299	; 0x33f3
   322d0:	umull	r0, r2, r5, r1
   322d4:	movw	r3, #45150	; 0xb05e
   322d8:	movt	r3, #5864	; 0x16e8
   322dc:	mla	r2, r5, r3, r2
   322e0:	ldr	r5, [sp, #20]
   322e4:	ldr	r3, [sp, #36]	; 0x24
   322e8:	mla	r1, r3, r1, r2
   322ec:	mov	r2, #35	; 0x23
   322f0:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   322f4:	adds	r0, r4, r0
   322f8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   322fc:	adc	r1, sl, r1
   32300:	mov	sl, r7
   32304:	eor	r1, r1, r9
   32308:	ldr	r2, [sp, #32]
   3230c:	eor	r0, r0, r2
   32310:	adds	r5, r0, r5
   32314:	adc	r6, r1, r6
   32318:	add	r4, r4, #16
   3231c:	movw	r7, #28837	; 0x70a5
   32320:	movt	r7, #12120	; 0x2f58
   32324:	b	32334 <cmetrohash64_1@@Base+0x44c>
   32328:	movw	r7, #28837	; 0x70a5
   3232c:	movt	r7, #12120	; 0x2f58
   32330:	mov	r5, r9
   32334:	sub	r0, sl, r4
   32338:	cmp	r0, #8
   3233c:	blt	3237c <cmetrohash64_1@@Base+0x494>
   32340:	mov	r0, r4
   32344:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   32348:	umull	r0, r2, r0, r7
   3234c:	mla	r1, r1, r7, r2
   32350:	adds	r5, r0, r5
   32354:	adc	r6, r1, r6
   32358:	mov	r0, r5
   3235c:	mov	r1, r6
   32360:	mov	r2, #33	; 0x21
   32364:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32368:	umull	r0, r2, r0, r8
   3236c:	mla	r1, r1, r8, r2
   32370:	eor	r6, r6, r1
   32374:	eor	r5, r5, r0
   32378:	add	r4, r4, #8
   3237c:	sub	r0, sl, r4
   32380:	cmp	r0, #4
   32384:	blt	323c4 <cmetrohash64_1@@Base+0x4dc>
   32388:	mov	r0, r4
   3238c:	bl	32510 <cmetrohash64_1@@Base+0x628>
   32390:	umull	r0, r2, r0, r7
   32394:	mla	r1, r1, r7, r2
   32398:	adds	r5, r0, r5
   3239c:	adc	r6, r1, r6
   323a0:	mov	r0, r5
   323a4:	mov	r1, r6
   323a8:	mov	r2, #15
   323ac:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   323b0:	umull	r0, r2, r0, r8
   323b4:	mla	r1, r1, r8, r2
   323b8:	eor	r6, r6, r1
   323bc:	eor	r5, r5, r0
   323c0:	add	r4, r4, #4
   323c4:	sub	r0, sl, r4
   323c8:	cmp	r0, #2
   323cc:	blt	3240c <cmetrohash64_1@@Base+0x524>
   323d0:	mov	r0, r4
   323d4:	bl	3251c <cmetrohash64_1@@Base+0x634>
   323d8:	umull	r0, r2, r0, r7
   323dc:	mla	r1, r1, r7, r2
   323e0:	adds	r5, r0, r5
   323e4:	adc	r6, r1, r6
   323e8:	mov	r0, r5
   323ec:	mov	r1, r6
   323f0:	mov	r2, #13
   323f4:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   323f8:	umull	r0, r2, r0, r8
   323fc:	mla	r1, r1, r8, r2
   32400:	eor	r6, r6, r1
   32404:	eor	r5, r5, r0
   32408:	add	r4, r4, #2
   3240c:	ldr	r9, [fp, #12]
   32410:	sub	r0, sl, r4
   32414:	cmp	r0, #1
   32418:	blt	32454 <cmetrohash64_1@@Base+0x56c>
   3241c:	mov	r0, r4
   32420:	bl	32530 <cmetrohash64_1@@Base+0x648>
   32424:	umull	r0, r2, r0, r7
   32428:	mla	r1, r1, r7, r2
   3242c:	adds	r4, r0, r5
   32430:	adc	r5, r1, r6
   32434:	mov	r0, r4
   32438:	mov	r1, r5
   3243c:	mov	r2, #25
   32440:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32444:	umull	r0, r2, r0, r8
   32448:	mla	r1, r1, r8, r2
   3244c:	eor	r6, r5, r1
   32450:	eor	r5, r4, r0
   32454:	mov	r0, r5
   32458:	mov	r1, r6
   3245c:	mov	r2, #33	; 0x21
   32460:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32464:	eor	r1, r1, r6
   32468:	eor	r0, r0, r5
   3246c:	movw	r2, #37345	; 0x91e1
   32470:	movt	r2, #51258	; 0xc83a
   32474:	umull	r4, r0, r0, r2
   32478:	mla	r5, r1, r2, r0
   3247c:	mov	r0, r4
   32480:	mov	r1, r5
   32484:	mov	r2, #33	; 0x21
   32488:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   3248c:	eor	r1, r5, r1
   32490:	str	r1, [r9, #4]
   32494:	eor	r0, r4, r0
   32498:	str	r0, [r9]
   3249c:	sub	sp, fp, #28
   324a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   324a4:	ldr	r2, [r0]
   324a8:	ldr	r1, [r0, #4]
   324ac:	mov	r0, r2
   324b0:	bx	lr
   324b4:	push	{r4, r5, fp, lr}
   324b8:	add	fp, sp, #8
   324bc:	lsr	ip, r0, r2
   324c0:	rsb	r3, r2, #32
   324c4:	orr	ip, ip, r1, lsl r3
   324c8:	subs	lr, r2, #32
   324cc:	lsrpl	ip, r1, lr
   324d0:	rsb	r4, r2, #64	; 0x40
   324d4:	lsl	r5, r0, r4
   324d8:	cmp	r3, #0
   324dc:	movwpl	r5, #0
   324e0:	orr	ip, r5, ip
   324e4:	rsb	r5, r4, #32
   324e8:	lsr	r5, r0, r5
   324ec:	orr	r4, r5, r1, lsl r4
   324f0:	cmp	r3, #0
   324f4:	lslpl	r4, r0, r3
   324f8:	lsr	r0, r1, r2
   324fc:	cmp	lr, #0
   32500:	movwpl	r0, #0
   32504:	orr	r1, r4, r0
   32508:	mov	r0, ip
   3250c:	pop	{r4, r5, fp, pc}
   32510:	ldr	r0, [r0]
   32514:	mov	r1, #0
   32518:	bx	lr
   3251c:	ldrb	r1, [r0]
   32520:	ldrb	r0, [r0, #1]
   32524:	orr	r0, r1, r0, lsl #8
   32528:	mov	r1, #0
   3252c:	bx	lr
   32530:	ldrb	r0, [r0]
   32534:	mov	r1, #0
   32538:	bx	lr

0003253c <cmetrohash64_2@@Base>:
   3253c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32540:	add	fp, sp, #28
   32544:	sub	sp, sp, #44	; 0x2c
   32548:	mov	r4, r0
   3254c:	ldr	r0, [fp, #8]
   32550:	movw	r6, #6389	; 0x18f5
   32554:	movt	r6, #54992	; 0xd6d0
   32558:	mov	r1, r2
   3255c:	mov	r7, r3
   32560:	umlal	r1, r7, r0, r6
   32564:	movw	r0, #13310	; 0x33fe
   32568:	movt	r0, #21180	; 0x52bc
   3256c:	movw	r6, #52149	; 0xcbb5
   32570:	movt	r6, #56292	; 0xdbe4
   32574:	adds	r5, r1, r6
   32578:	adc	sl, r7, r0
   3257c:	add	r6, r4, r2
   32580:	movw	r8, #23337	; 0x5b29
   32584:	movt	r8, #12476	; 0x30bc
   32588:	movw	r7, #12225	; 0x2fc1
   3258c:	movt	r7, #25241	; 0x6299
   32590:	movw	r1, #827	; 0x33b
   32594:	movt	r1, #41642	; 0xa2aa
   32598:	subs	r0, r2, #32
   3259c:	sbcs	r0, r3, #0
   325a0:	str	r6, [sp, #12]
   325a4:	bcc	32864 <cmetrohash64_2@@Base+0x328>
   325a8:	sub	r0, r6, #32
   325ac:	str	r0, [sp, #24]
   325b0:	mov	r2, r5
   325b4:	mov	r3, sl
   325b8:	mov	r0, sl
   325bc:	mov	r6, r5
   325c0:	mov	r8, sl
   325c4:	mov	sl, r5
   325c8:	mov	r7, r0
   325cc:	str	r5, [sp, #16]
   325d0:	str	r5, [sp, #36]	; 0x24
   325d4:	str	r0, [sp, #20]
   325d8:	str	r0, [fp, #-32]	; 0xffffffe0
   325dc:	str	r3, [sp, #32]
   325e0:	mov	r0, r4
   325e4:	mov	r9, r2
   325e8:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   325ec:	movw	r2, #6389	; 0x18f5
   325f0:	movt	r2, #54992	; 0xd6d0
   325f4:	mov	r3, r2
   325f8:	umull	r0, r2, r0, r2
   325fc:	mla	r1, r1, r3, r2
   32600:	ldr	r2, [sp, #36]	; 0x24
   32604:	adds	r0, r0, r2
   32608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3260c:	adc	r1, r1, r2
   32610:	mov	r2, #29
   32614:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32618:	mov	r5, r6
   3261c:	adds	r6, r0, r6
   32620:	adc	r0, r1, r8
   32624:	str	r0, [fp, #-32]	; 0xffffffe0
   32628:	add	r0, r4, #8
   3262c:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   32630:	movw	r2, #827	; 0x33b
   32634:	movt	r2, #41642	; 0xa2aa
   32638:	mov	r3, r2
   3263c:	umull	r0, r2, r0, r2
   32640:	mla	r1, r1, r3, r2
   32644:	adds	r0, r0, sl
   32648:	adc	r1, r1, r7
   3264c:	mov	r2, #29
   32650:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32654:	mov	r7, r0
   32658:	str	r1, [sp, #28]
   3265c:	add	r0, r4, #16
   32660:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   32664:	movw	r2, #12225	; 0x2fc1
   32668:	movt	r2, #25241	; 0x6299
   3266c:	mov	r3, r2
   32670:	umull	r0, r2, r0, r2
   32674:	mla	r1, r1, r3, r2
   32678:	adds	r0, r0, r5
   3267c:	adc	r1, r1, r8
   32680:	mov	r2, #29
   32684:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32688:	str	r6, [sp, #36]	; 0x24
   3268c:	adds	r6, r0, r6
   32690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32694:	adc	r8, r1, r0
   32698:	adds	sl, r7, r9
   3269c:	ldr	r7, [sp, #32]
   326a0:	ldr	r0, [sp, #28]
   326a4:	adc	r5, r0, r7
   326a8:	add	r0, r4, #24
   326ac:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   326b0:	movw	r2, #23337	; 0x5b29
   326b4:	movt	r2, #12476	; 0x30bc
   326b8:	mov	r3, r2
   326bc:	umull	r0, r2, r0, r2
   326c0:	mla	r1, r1, r3, r2
   326c4:	adds	r0, r0, r9
   326c8:	adc	r1, r1, r7
   326cc:	mov	r7, sl
   326d0:	mov	r2, #29
   326d4:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   326d8:	adds	r2, r0, sl
   326dc:	mov	r7, r5
   326e0:	adc	r3, r1, r5
   326e4:	add	r4, r4, #32
   326e8:	ldr	r0, [sp, #24]
   326ec:	cmp	r4, r0
   326f0:	bls	325dc <cmetrohash64_2@@Base+0xa0>
   326f4:	ldr	r0, [sp, #36]	; 0x24
   326f8:	adds	r0, r2, r0
   326fc:	ldr	r9, [fp, #-32]	; 0xffffffe0
   32700:	adc	r1, r3, r9
   32704:	str	r2, [sp, #28]
   32708:	movw	r2, #6389	; 0x18f5
   3270c:	movt	r2, #54992	; 0xd6d0
   32710:	mov	r5, r2
   32714:	umull	r0, r2, r0, r2
   32718:	mla	r1, r1, r5, r2
   3271c:	adds	r0, r0, sl
   32720:	str	sl, [sp, #4]
   32724:	adc	r1, r1, r7
   32728:	mov	r5, r7
   3272c:	str	r7, [sp, #8]
   32730:	mov	r2, #30
   32734:	str	r3, [sp, #32]
   32738:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   3273c:	movw	r2, #827	; 0x33b
   32740:	movt	r2, #41642	; 0xa2aa
   32744:	mov	r3, r2
   32748:	umull	r0, r2, r0, r2
   3274c:	mla	r1, r1, r3, r2
   32750:	eor	r8, r1, r8
   32754:	eor	r1, r0, r6
   32758:	adds	r0, r1, sl
   3275c:	mov	r7, r1
   32760:	str	r1, [sp, #24]
   32764:	adc	r1, r8, r5
   32768:	umull	r0, r2, r0, r3
   3276c:	mla	r1, r1, r3, r2
   32770:	ldr	r6, [sp, #36]	; 0x24
   32774:	adds	r0, r0, r6
   32778:	adc	r1, r1, r9
   3277c:	mov	r2, #30
   32780:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32784:	movw	r5, #6389	; 0x18f5
   32788:	movt	r5, #54992	; 0xd6d0
   3278c:	umull	r0, r2, r0, r5
   32790:	mla	r1, r1, r5, r2
   32794:	ldr	r2, [sp, #32]
   32798:	eor	sl, r1, r2
   3279c:	adds	r1, r7, r6
   327a0:	adc	r2, r8, r9
   327a4:	umull	r1, r3, r1, r5
   327a8:	mla	r2, r2, r5, r3
   327ac:	ldr	r3, [sp, #28]
   327b0:	eor	r6, r0, r3
   327b4:	adds	r0, r1, r6
   327b8:	adc	r1, r2, sl
   327bc:	mov	r2, #30
   327c0:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   327c4:	str	r0, [sp, #32]
   327c8:	str	r1, [sp, #28]
   327cc:	ldr	r9, [sp, #4]
   327d0:	adds	r0, r6, r9
   327d4:	ldr	r7, [sp, #8]
   327d8:	adc	r1, sl, r7
   327dc:	movw	r6, #827	; 0x33b
   327e0:	movt	r6, #41642	; 0xa2aa
   327e4:	umull	r0, r2, r0, r6
   327e8:	mla	r1, r1, r6, r2
   327ec:	ldr	r2, [sp, #24]
   327f0:	adds	r0, r0, r2
   327f4:	adc	r1, r1, r8
   327f8:	mov	r2, #30
   327fc:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32800:	umull	r0, r2, r0, r5
   32804:	mla	r1, r1, r5, r2
   32808:	ldr	r2, [sp, #32]
   3280c:	umull	r2, r3, r2, r6
   32810:	ldr	r5, [sp, #28]
   32814:	mla	r3, r5, r6, r3
   32818:	mov	ip, r6
   3281c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   32820:	eor	r6, r7, r6
   32824:	eor	r3, r6, r3
   32828:	eor	r1, r3, r1
   3282c:	ldr	r3, [sp, #36]	; 0x24
   32830:	eor	r3, r9, r3
   32834:	eor	r2, r3, r2
   32838:	eor	r0, r2, r0
   3283c:	ldr	r5, [sp, #16]
   32840:	adds	r5, r0, r5
   32844:	ldr	sl, [sp, #20]
   32848:	adc	sl, r1, sl
   3284c:	mov	r1, ip
   32850:	movw	r8, #23337	; 0x5b29
   32854:	movt	r8, #12476	; 0x30bc
   32858:	ldr	r6, [sp, #12]
   3285c:	movw	r7, #12225	; 0x2fc1
   32860:	movt	r7, #25241	; 0x6299
   32864:	sub	r0, r6, r4
   32868:	cmp	r0, #16
   3286c:	blt	329a8 <cmetrohash64_2@@Base+0x46c>
   32870:	mov	r0, r4
   32874:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   32878:	umull	r0, r2, r0, r7
   3287c:	mla	r1, r1, r7, r2
   32880:	adds	r0, r0, r5
   32884:	adc	r1, r1, sl
   32888:	mov	r2, #29
   3288c:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32890:	str	r4, [fp, #-32]	; 0xffffffe0
   32894:	mov	r9, r0
   32898:	mov	r4, r1
   3289c:	movw	r0, #5693	; 0x163d
   328a0:	movt	r0, #42015	; 0xa41f
   328a4:	umull	r1, r0, r9, r0
   328a8:	str	r1, [sp, #36]	; 0x24
   328ac:	movw	r1, #4606	; 0x11fe
   328b0:	movt	r1, #10469	; 0x28e5
   328b4:	str	sl, [sp, #20]
   328b8:	str	r5, [sp, #16]
   328bc:	mla	r0, r9, r1, r0
   328c0:	str	r0, [sp, #32]
   328c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   328c8:	add	r0, r0, #8
   328cc:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   328d0:	umull	r0, r2, r0, r7
   328d4:	mla	r1, r1, r7, r2
   328d8:	ldr	r2, [sp, #16]
   328dc:	adds	r0, r0, r2
   328e0:	ldr	r2, [sp, #20]
   328e4:	adc	r1, r1, r2
   328e8:	mov	r2, #29
   328ec:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   328f0:	mov	r5, r0
   328f4:	mov	r6, r1
   328f8:	mov	sl, r4
   328fc:	movw	r0, #5693	; 0x163d
   32900:	movt	r0, #42015	; 0xa41f
   32904:	ldr	r1, [sp, #32]
   32908:	mla	r1, r4, r0, r1
   3290c:	umull	r4, r0, r5, r8
   32910:	str	r4, [sp, #32]
   32914:	mov	r7, r8
   32918:	mla	r8, r6, r8, r0
   3291c:	ldr	r0, [sp, #36]	; 0x24
   32920:	mov	r2, #34	; 0x22
   32924:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32928:	adds	r0, r0, r4
   3292c:	adc	r1, r1, r8
   32930:	umull	r2, r3, r9, r7
   32934:	ldr	r4, [fp, #-32]	; 0xffffffe0
   32938:	mov	r9, r7
   3293c:	mla	r3, sl, r7, r3
   32940:	eor	sl, r1, r3
   32944:	eor	r7, r0, r2
   32948:	movw	r1, #11409	; 0x2c91
   3294c:	movt	r1, #25774	; 0x64ae
   32950:	umull	r0, r2, r5, r1
   32954:	movw	r3, #11461	; 0x2cc5
   32958:	movt	r3, #2375	; 0x947
   3295c:	mla	r2, r5, r3, r2
   32960:	mla	r1, r6, r1, r2
   32964:	mov	r2, #34	; 0x22
   32968:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   3296c:	adds	r0, r7, r0
   32970:	adc	r1, sl, r1
   32974:	eor	r1, r1, r8
   32978:	ldr	r5, [sp, #16]
   3297c:	ldr	sl, [sp, #20]
   32980:	ldr	r6, [sp, #12]
   32984:	ldr	r2, [sp, #32]
   32988:	eor	r0, r0, r2
   3298c:	movw	r7, #827	; 0x33b
   32990:	movt	r7, #41642	; 0xa2aa
   32994:	mov	r8, r7
   32998:	adds	r5, r0, r5
   3299c:	adc	sl, r1, sl
   329a0:	add	r4, r4, #16
   329a4:	b	329b0 <cmetrohash64_2@@Base+0x474>
   329a8:	mov	r9, r8
   329ac:	mov	r8, r1
   329b0:	sub	r0, r6, r4
   329b4:	cmp	r0, #8
   329b8:	blt	329f8 <cmetrohash64_2@@Base+0x4bc>
   329bc:	mov	r0, r4
   329c0:	bl	324a4 <cmetrohash64_1@@Base+0x5bc>
   329c4:	umull	r0, r2, r0, r9
   329c8:	mla	r1, r1, r9, r2
   329cc:	adds	r7, r0, r5
   329d0:	adc	r5, r1, sl
   329d4:	mov	r0, r7
   329d8:	mov	r1, r5
   329dc:	mov	r2, #36	; 0x24
   329e0:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   329e4:	umull	r0, r2, r0, r8
   329e8:	mla	r1, r1, r8, r2
   329ec:	eor	sl, r5, r1
   329f0:	eor	r5, r7, r0
   329f4:	add	r4, r4, #8
   329f8:	sub	r0, r6, r4
   329fc:	cmp	r0, #4
   32a00:	blt	32a40 <cmetrohash64_2@@Base+0x504>
   32a04:	mov	r0, r4
   32a08:	bl	32510 <cmetrohash64_1@@Base+0x628>
   32a0c:	umull	r0, r2, r0, r9
   32a10:	mla	r1, r1, r9, r2
   32a14:	adds	r7, r0, r5
   32a18:	adc	r5, r1, sl
   32a1c:	mov	r0, r7
   32a20:	mov	r1, r5
   32a24:	mov	r2, #15
   32a28:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32a2c:	umull	r0, r2, r0, r8
   32a30:	mla	r1, r1, r8, r2
   32a34:	eor	sl, r5, r1
   32a38:	eor	r5, r7, r0
   32a3c:	add	r4, r4, #4
   32a40:	sub	r0, r6, r4
   32a44:	cmp	r0, #2
   32a48:	blt	32a88 <cmetrohash64_2@@Base+0x54c>
   32a4c:	mov	r0, r4
   32a50:	bl	3251c <cmetrohash64_1@@Base+0x634>
   32a54:	umull	r0, r2, r0, r9
   32a58:	mla	r1, r1, r9, r2
   32a5c:	adds	r7, r0, r5
   32a60:	adc	r5, r1, sl
   32a64:	mov	r0, r7
   32a68:	mov	r1, r5
   32a6c:	mov	r2, #15
   32a70:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32a74:	umull	r0, r2, r0, r8
   32a78:	mla	r1, r1, r8, r2
   32a7c:	eor	sl, r5, r1
   32a80:	eor	r5, r7, r0
   32a84:	add	r4, r4, #2
   32a88:	ldr	r7, [fp, #12]
   32a8c:	sub	r0, r6, r4
   32a90:	cmp	r0, #1
   32a94:	blt	32ad0 <cmetrohash64_2@@Base+0x594>
   32a98:	mov	r0, r4
   32a9c:	bl	32530 <cmetrohash64_1@@Base+0x648>
   32aa0:	umull	r0, r2, r0, r9
   32aa4:	mla	r1, r1, r9, r2
   32aa8:	adds	r4, r0, r5
   32aac:	adc	r5, r1, sl
   32ab0:	mov	r0, r4
   32ab4:	mov	r1, r5
   32ab8:	mov	r2, #23
   32abc:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32ac0:	umull	r0, r2, r0, r8
   32ac4:	mla	r1, r1, r8, r2
   32ac8:	eor	sl, r5, r1
   32acc:	eor	r5, r4, r0
   32ad0:	mov	r0, r5
   32ad4:	mov	r1, sl
   32ad8:	mov	r2, #28
   32adc:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32ae0:	eor	r1, r1, sl
   32ae4:	eor	r0, r0, r5
   32ae8:	movw	r2, #6389	; 0x18f5
   32aec:	movt	r2, #54992	; 0xd6d0
   32af0:	umull	r4, r0, r0, r2
   32af4:	mla	r5, r1, r2, r0
   32af8:	mov	r0, r4
   32afc:	mov	r1, r5
   32b00:	mov	r2, #29
   32b04:	bl	324b4 <cmetrohash64_1@@Base+0x5cc>
   32b08:	eor	r1, r5, r1
   32b0c:	str	r1, [r7, #4]
   32b10:	eor	r0, r4, r0
   32b14:	str	r0, [r7]
   32b18:	sub	sp, fp, #28
   32b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032b20 <fb_name_table_clear@@Base>:
   32b20:	b	32b24 <fb_name_table_clear@@Base+0x4>
   32b24:	push	{r4, sl, fp, lr}
   32b28:	add	fp, sp, #8
   32b2c:	mov	r4, r0
   32b30:	ldr	r0, [r0]
   32b34:	cmp	r0, #0
   32b38:	beq	32b40 <fb_name_table_clear@@Base+0x20>
   32b3c:	bl	14804 <free@plt>
   32b40:	vmov.i32	q8, #0	; 0x00000000
   32b44:	vst1.32	{d16-d17}, [r4]
   32b48:	pop	{r4, sl, fp, pc}

00032b4c <fb_name_table_destroy@@Base>:
   32b4c:	push	{r4, sl, fp, lr}
   32b50:	add	fp, sp, #8
   32b54:	mov	r4, r0
   32b58:	cmp	r1, #0
   32b5c:	movne	r0, r4
   32b60:	blne	32b70 <fb_name_table_destroy@@Base+0x24>
   32b64:	mov	r0, r4
   32b68:	pop	{r4, sl, fp, lr}
   32b6c:	b	32b24 <fb_name_table_clear@@Base+0x4>
   32b70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32b74:	add	fp, sp, #24
   32b78:	mov	r6, r0
   32b7c:	ldr	r0, [r0, #12]
   32b80:	cmp	r0, #0
   32b84:	beq	32bc8 <fb_name_table_destroy@@Base+0x7c>
   32b88:	mov	r8, r2
   32b8c:	mov	r5, r1
   32b90:	ldr	r7, [r6]
   32b94:	mov	r4, #0
   32b98:	b	32bac <fb_name_table_destroy@@Base+0x60>
   32b9c:	ldr	r0, [r6, #12]
   32ba0:	add	r4, r4, #1
   32ba4:	cmp	r4, r0
   32ba8:	bcs	32bc8 <fb_name_table_destroy@@Base+0x7c>
   32bac:	ldr	r1, [r7, r4, lsl #2]
   32bb0:	orr	r0, r1, #2
   32bb4:	cmp	r0, #2
   32bb8:	beq	32b9c <fb_name_table_destroy@@Base+0x50>
   32bbc:	mov	r0, r8
   32bc0:	blx	r5
   32bc4:	b	32b9c <fb_name_table_destroy@@Base+0x50>
   32bc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00032bcc <fb_name_table_init@@Base>:
   32bcc:	b	32bd0 <fb_name_table_init@@Base+0x4>
   32bd0:	push	{r4, r5, fp, lr}
   32bd4:	add	fp, sp, #8
   32bd8:	mov	r4, r0
   32bdc:	mov	r2, #4
   32be0:	mov	r0, #179	; 0xb3
   32be4:	mov	r5, r2
   32be8:	mul	r3, r2, r0
   32bec:	lsl	r2, r2, #1
   32bf0:	cmp	r1, r3, lsr #8
   32bf4:	bhi	32be4 <fb_name_table_init@@Base+0x18>
   32bf8:	mov	r0, r5
   32bfc:	mov	r1, #4
   32c00:	bl	147d4 <calloc@plt>
   32c04:	str	r0, [r4]
   32c08:	cmp	r0, #0
   32c0c:	mvneq	r0, #0
   32c10:	movne	r0, #0
   32c14:	strne	r0, [r4, #4]
   32c18:	strne	r0, [r4, #8]
   32c1c:	strne	r5, [r4, #12]
   32c20:	pop	{r4, r5, fp, pc}

00032c24 <fb_name_table_resize@@Base>:
   32c24:	b	32c28 <fb_name_table_resize@@Base+0x4>
   32c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32c2c:	add	fp, sp, #28
   32c30:	sub	sp, sp, #28
   32c34:	mov	r4, r0
   32c38:	ldr	sl, [r0]
   32c3c:	ldr	r0, [r0, #8]
   32c40:	cmp	r0, r1
   32c44:	movhi	r1, r0
   32c48:	add	r0, sp, #8
   32c4c:	bl	32bd0 <fb_name_table_init@@Base+0x4>
   32c50:	mov	r1, r0
   32c54:	mvn	r0, #0
   32c58:	cmp	r1, #0
   32c5c:	beq	32c68 <fb_name_table_resize@@Base+0x44>
   32c60:	sub	sp, fp, #28
   32c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c68:	ldr	r0, [r4, #12]
   32c6c:	cmp	r0, #0
   32c70:	beq	32cd4 <fb_name_table_resize@@Base+0xb0>
   32c74:	mov	r6, #0
   32c78:	mov	r8, #3
   32c7c:	add	r9, sp, #8
   32c80:	b	32c94 <fb_name_table_resize@@Base+0x70>
   32c84:	ldr	r0, [r4, #12]
   32c88:	add	r6, r6, #1
   32c8c:	cmp	r6, r0
   32c90:	bcs	32cd4 <fb_name_table_resize@@Base+0xb0>
   32c94:	ldr	r7, [sl, r6, lsl #2]
   32c98:	orr	r0, r7, #2
   32c9c:	cmp	r0, #2
   32ca0:	beq	32c84 <fb_name_table_resize@@Base+0x60>
   32ca4:	mov	r0, r7
   32ca8:	bl	32f20 <fb_name_table_insert_item@@Base+0x4c>
   32cac:	mov	r5, r0
   32cb0:	mov	r0, r7
   32cb4:	bl	32f28 <fb_name_table_insert_item@@Base+0x54>
   32cb8:	mov	r2, r0
   32cbc:	str	r8, [sp]
   32cc0:	mov	r0, r9
   32cc4:	mov	r1, r5
   32cc8:	mov	r3, r7
   32ccc:	bl	32cf8 <fb_name_table_insert@@Base+0x4>
   32cd0:	b	32c84 <fb_name_table_resize@@Base+0x60>
   32cd4:	mov	r0, r4
   32cd8:	bl	32b24 <fb_name_table_clear@@Base+0x4>
   32cdc:	add	r0, sp, #8
   32ce0:	vld1.64	{d16-d17}, [r0]
   32ce4:	vst1.32	{d16-d17}, [r4]
   32ce8:	mov	r0, #0
   32cec:	sub	sp, fp, #28
   32cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032cf4 <fb_name_table_insert@@Base>:
   32cf4:	b	32cf8 <fb_name_table_insert@@Base+0x4>
   32cf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32cfc:	add	fp, sp, #28
   32d00:	sub	sp, sp, #12
   32d04:	str	r2, [sp, #8]
   32d08:	cmp	r3, #2
   32d0c:	beq	32e4c <fb_name_table_insert@@Base+0x158>
   32d10:	mov	r9, r3
   32d14:	cmp	r3, #1
   32d18:	beq	32e6c <fb_name_table_insert@@Base+0x178>
   32d1c:	cmp	r9, #0
   32d20:	beq	32e8c <fb_name_table_insert@@Base+0x198>
   32d24:	mov	r7, r1
   32d28:	mov	r5, r0
   32d2c:	ldr	r0, [r0, #8]
   32d30:	ldr	r1, [r5, #12]
   32d34:	mov	r2, #179	; 0xb3
   32d38:	mul	r1, r1, r2
   32d3c:	cmp	r0, r1, lsr #8
   32d40:	bcc	32d58 <fb_name_table_insert@@Base+0x64>
   32d44:	lsl	r1, r0, #1
   32d48:	mov	r0, r5
   32d4c:	bl	32c28 <fb_name_table_resize@@Base+0x4>
   32d50:	cmp	r0, #0
   32d54:	bne	32eac <fb_name_table_insert@@Base+0x1b8>
   32d58:	ldr	sl, [fp, #8]
   32d5c:	ldr	r8, [r5]
   32d60:	ldr	r4, [r5, #12]
   32d64:	mov	r0, r7
   32d68:	ldr	r1, [sp, #8]
   32d6c:	bl	330d0 <fb_name_table_visit@@Base+0x4>
   32d70:	sub	r6, r4, #1
   32d74:	and	r1, r0, r6
   32d78:	orr	r2, sl, #1
   32d7c:	cmp	r2, #3
   32d80:	bne	32db0 <fb_name_table_insert@@Base+0xbc>
   32d84:	ldr	r2, [r5, #8]
   32d88:	add	r2, r2, #1
   32d8c:	str	r2, [r5, #8]
   32d90:	add	r0, r0, #1
   32d94:	mov	r5, r8
   32d98:	ldr	r1, [r5, r1, lsl #2]!
   32d9c:	orr	r1, r1, #2
   32da0:	cmp	r1, #2
   32da4:	beq	32e14 <fb_name_table_insert@@Base+0x120>
   32da8:	and	r1, r0, r6
   32dac:	b	32d90 <fb_name_table_insert@@Base+0x9c>
   32db0:	stm	sp, {r5, r9}
   32db4:	add	sl, r0, #1
   32db8:	mov	r9, #0
   32dbc:	b	32dd0 <fb_name_table_insert@@Base+0xdc>
   32dc0:	cmp	r9, #0
   32dc4:	moveq	r9, r5
   32dc8:	and	r1, sl, r6
   32dcc:	add	sl, sl, #1
   32dd0:	mov	r5, r8
   32dd4:	ldr	r4, [r5, r1, lsl #2]!
   32dd8:	cmp	r4, #2
   32ddc:	beq	32dc0 <fb_name_table_insert@@Base+0xcc>
   32de0:	cmp	r4, #0
   32de4:	beq	32e1c <fb_name_table_insert@@Base+0x128>
   32de8:	mov	r0, r7
   32dec:	ldr	r1, [sp, #8]
   32df0:	mov	r2, r4
   32df4:	bl	33108 <fb_name_table_visit@@Base+0x3c>
   32df8:	cmp	r0, #0
   32dfc:	beq	32dc8 <fb_name_table_insert@@Base+0xd4>
   32e00:	ldr	r0, [fp, #8]
   32e04:	cmp	r0, #0
   32e08:	ldr	r9, [sp, #4]
   32e0c:	streq	r9, [r5]
   32e10:	b	32e40 <fb_name_table_insert@@Base+0x14c>
   32e14:	mov	r4, #0
   32e18:	b	32e3c <fb_name_table_insert@@Base+0x148>
   32e1c:	ldr	r1, [sp]
   32e20:	ldr	r0, [r1, #8]
   32e24:	add	r0, r0, #1
   32e28:	str	r0, [r1, #8]
   32e2c:	cmp	r9, #0
   32e30:	movne	r5, r9
   32e34:	mov	r4, #0
   32e38:	ldr	r9, [sp, #4]
   32e3c:	str	r9, [r5]
   32e40:	mov	r0, r4
   32e44:	sub	sp, fp, #28
   32e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e4c:	movw	r0, #50193	; 0xc411
   32e50:	movt	r0, #4
   32e54:	movw	r1, #50039	; 0xc377
   32e58:	movt	r1, #4
   32e5c:	movw	r3, #50119	; 0xc3c7
   32e60:	movt	r3, #4
   32e64:	mov	r2, #115	; 0x73
   32e68:	bl	14984 <__assert_fail@plt>
   32e6c:	movw	r0, #50216	; 0xc428
   32e70:	movt	r0, #4
   32e74:	movw	r1, #50039	; 0xc377
   32e78:	movt	r1, #4
   32e7c:	movw	r3, #50119	; 0xc3c7
   32e80:	movt	r3, #4
   32e84:	mov	r2, #116	; 0x74
   32e88:	bl	14984 <__assert_fail@plt>
   32e8c:	movw	r0, #50016	; 0xc360
   32e90:	movt	r0, #4
   32e94:	movw	r1, #50039	; 0xc377
   32e98:	movt	r1, #4
   32e9c:	movw	r3, #50119	; 0xc3c7
   32ea0:	movt	r3, #4
   32ea4:	mov	r2, #114	; 0x72
   32ea8:	bl	14984 <__assert_fail@plt>
   32eac:	movw	r0, #4272	; 0x10b0
   32eb0:	movt	r0, #6
   32eb4:	ldr	r0, [r0]
   32eb8:	movw	r1, #50237	; 0xc43d
   32ebc:	movt	r1, #4
   32ec0:	movw	r2, #50260	; 0xc454
   32ec4:	movt	r2, #4
   32ec8:	bl	148c4 <fprintf@plt>
   32ecc:	mov	r0, #1
   32ed0:	bl	148a0 <exit@plt>

00032ed4 <fb_name_table_insert_item@@Base>:
   32ed4:	push	{r4, r5, r6, r7, fp, lr}
   32ed8:	add	fp, sp, #16
   32edc:	sub	sp, sp, #8
   32ee0:	mov	r4, r2
   32ee4:	mov	r5, r1
   32ee8:	mov	r6, r0
   32eec:	mov	r0, r1
   32ef0:	bl	32f20 <fb_name_table_insert_item@@Base+0x4c>
   32ef4:	mov	r7, r0
   32ef8:	mov	r0, r5
   32efc:	bl	32f28 <fb_name_table_insert_item@@Base+0x54>
   32f00:	mov	r2, r0
   32f04:	str	r4, [sp]
   32f08:	mov	r0, r6
   32f0c:	mov	r1, r7
   32f10:	mov	r3, r5
   32f14:	bl	32cf8 <fb_name_table_insert@@Base+0x4>
   32f18:	sub	sp, fp, #16
   32f1c:	pop	{r4, r5, r6, r7, fp, pc}
   32f20:	ldr	r0, [r0, #8]
   32f24:	bx	lr
   32f28:	ldr	r0, [r0, #12]
   32f2c:	bx	lr

00032f30 <fb_name_table_find@@Base>:
   32f30:	b	32f34 <fb_name_table_find@@Base+0x4>
   32f34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32f38:	add	fp, sp, #24
   32f3c:	ldr	r4, [r0]
   32f40:	cmp	r4, #0
   32f44:	beq	32fa8 <fb_name_table_find@@Base+0x78>
   32f48:	mov	r8, r2
   32f4c:	mov	r9, r1
   32f50:	ldr	r5, [r0, #12]
   32f54:	mov	r0, r1
   32f58:	mov	r1, r2
   32f5c:	bl	330d0 <fb_name_table_visit@@Base+0x4>
   32f60:	mov	r6, r0
   32f64:	sub	r5, r5, #1
   32f68:	b	32f70 <fb_name_table_find@@Base+0x40>
   32f6c:	add	r6, r6, #1
   32f70:	and	r0, r6, r5
   32f74:	ldr	r7, [r4, r0, lsl #2]
   32f78:	cmp	r7, #2
   32f7c:	beq	32f6c <fb_name_table_find@@Base+0x3c>
   32f80:	cmp	r7, #0
   32f84:	beq	32fa8 <fb_name_table_find@@Base+0x78>
   32f88:	mov	r0, r9
   32f8c:	mov	r1, r8
   32f90:	mov	r2, r7
   32f94:	bl	33108 <fb_name_table_visit@@Base+0x3c>
   32f98:	cmp	r0, #0
   32f9c:	beq	32f6c <fb_name_table_find@@Base+0x3c>
   32fa0:	mov	r0, r7
   32fa4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32fa8:	mov	r7, #0
   32fac:	mov	r0, r7
   32fb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00032fb4 <fb_name_table_find_item@@Base>:
   32fb4:	push	{r4, r5, r6, sl, fp, lr}
   32fb8:	add	fp, sp, #16
   32fbc:	mov	r4, r1
   32fc0:	mov	r5, r0
   32fc4:	mov	r0, r1
   32fc8:	bl	32f20 <fb_name_table_insert_item@@Base+0x4c>
   32fcc:	mov	r6, r0
   32fd0:	mov	r0, r4
   32fd4:	bl	32f28 <fb_name_table_insert_item@@Base+0x54>
   32fd8:	mov	r2, r0
   32fdc:	mov	r0, r5
   32fe0:	mov	r1, r6
   32fe4:	pop	{r4, r5, r6, sl, fp, lr}
   32fe8:	b	32f34 <fb_name_table_find@@Base+0x4>

00032fec <fb_name_table_remove@@Base>:
   32fec:	b	32ff0 <fb_name_table_remove@@Base+0x4>
   32ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ff4:	add	fp, sp, #28
   32ff8:	sub	sp, sp, #4
   32ffc:	ldr	r5, [r0]
   33000:	mov	r7, #0
   33004:	cmp	r5, #0
   33008:	beq	33088 <fb_name_table_remove@@Base+0x9c>
   3300c:	mov	r9, r2
   33010:	mov	sl, r1
   33014:	str	r0, [sp]
   33018:	ldr	r6, [r0, #12]
   3301c:	mov	r0, r1
   33020:	mov	r1, r2
   33024:	bl	330d0 <fb_name_table_visit@@Base+0x4>
   33028:	mov	r4, r0
   3302c:	sub	r6, r6, #1
   33030:	b	33038 <fb_name_table_remove@@Base+0x4c>
   33034:	add	r4, r4, #1
   33038:	and	r8, r4, r6
   3303c:	ldr	r7, [r5, r8, lsl #2]
   33040:	cmp	r7, #2
   33044:	beq	33034 <fb_name_table_remove@@Base+0x48>
   33048:	cmp	r7, #0
   3304c:	beq	33084 <fb_name_table_remove@@Base+0x98>
   33050:	mov	r0, sl
   33054:	mov	r1, r9
   33058:	mov	r2, r7
   3305c:	bl	33108 <fb_name_table_visit@@Base+0x3c>
   33060:	cmp	r0, #0
   33064:	beq	33034 <fb_name_table_remove@@Base+0x48>
   33068:	mov	r0, #2
   3306c:	str	r0, [r5, r8, lsl #2]
   33070:	ldr	r1, [sp]
   33074:	ldr	r0, [r1, #8]
   33078:	sub	r0, r0, #1
   3307c:	str	r0, [r1, #8]
   33080:	b	33088 <fb_name_table_remove@@Base+0x9c>
   33084:	mov	r7, #0
   33088:	mov	r0, r7
   3308c:	sub	sp, fp, #28
   33090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033094 <fb_name_table_remove_item@@Base>:
   33094:	push	{r4, r5, r6, sl, fp, lr}
   33098:	add	fp, sp, #16
   3309c:	mov	r4, r1
   330a0:	mov	r5, r0
   330a4:	mov	r0, r1
   330a8:	bl	32f20 <fb_name_table_insert_item@@Base+0x4c>
   330ac:	mov	r6, r0
   330b0:	mov	r0, r4
   330b4:	bl	32f28 <fb_name_table_insert_item@@Base+0x54>
   330b8:	mov	r2, r0
   330bc:	mov	r0, r5
   330c0:	mov	r1, r6
   330c4:	pop	{r4, r5, r6, sl, fp, lr}
   330c8:	b	32ff0 <fb_name_table_remove@@Base+0x4>

000330cc <fb_name_table_visit@@Base>:
   330cc:	b	32b70 <fb_name_table_destroy@@Base+0x24>
   330d0:	push	{fp, lr}
   330d4:	mov	fp, sp
   330d8:	sub	sp, sp, #16
   330dc:	add	r2, sp, #8
   330e0:	movw	r3, #15186	; 0x3b52
   330e4:	movt	r3, #12137	; 0x2f69
   330e8:	str	r3, [sp]
   330ec:	str	r2, [sp, #4]
   330f0:	mov	r2, r1
   330f4:	mov	r3, #0
   330f8:	bl	31ee8 <cmetrohash64_1@@Base>
   330fc:	ldr	r0, [sp, #8]
   33100:	mov	sp, fp
   33104:	pop	{fp, pc}
   33108:	push	{fp, lr}
   3310c:	mov	fp, sp
   33110:	mov	ip, r1
   33114:	ldr	r3, [r2, #12]
   33118:	mov	r1, #0
   3311c:	cmp	r3, ip
   33120:	bne	33138 <fb_name_table_visit@@Base+0x6c>
   33124:	ldr	r1, [r2, #8]
   33128:	mov	r2, ip
   3312c:	bl	148ac <bcmp@plt>
   33130:	clz	r0, r0
   33134:	lsr	r1, r0, #5
   33138:	mov	r0, r1
   3313c:	pop	{fp, pc}

00033140 <fb_value_set_clear@@Base>:
   33140:	b	33144 <fb_value_set_clear@@Base+0x4>
   33144:	push	{r4, sl, fp, lr}
   33148:	add	fp, sp, #8
   3314c:	mov	r4, r0
   33150:	ldr	r0, [r0]
   33154:	cmp	r0, #0
   33158:	beq	33160 <fb_value_set_clear@@Base+0x20>
   3315c:	bl	14804 <free@plt>
   33160:	vmov.i32	q8, #0	; 0x00000000
   33164:	vst1.32	{d16-d17}, [r4]
   33168:	pop	{r4, sl, fp, pc}

0003316c <fb_value_set_destroy@@Base>:
   3316c:	push	{r4, sl, fp, lr}
   33170:	add	fp, sp, #8
   33174:	mov	r4, r0
   33178:	cmp	r1, #0
   3317c:	movne	r0, r4
   33180:	blne	33190 <fb_value_set_destroy@@Base+0x24>
   33184:	mov	r0, r4
   33188:	pop	{r4, sl, fp, lr}
   3318c:	b	33144 <fb_value_set_clear@@Base+0x4>
   33190:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33194:	add	fp, sp, #24
   33198:	mov	r6, r0
   3319c:	ldr	r0, [r0, #12]
   331a0:	cmp	r0, #0
   331a4:	beq	331e8 <fb_value_set_destroy@@Base+0x7c>
   331a8:	mov	r8, r2
   331ac:	mov	r5, r1
   331b0:	ldr	r7, [r6]
   331b4:	mov	r4, #0
   331b8:	b	331cc <fb_value_set_destroy@@Base+0x60>
   331bc:	ldr	r0, [r6, #12]
   331c0:	add	r4, r4, #1
   331c4:	cmp	r4, r0
   331c8:	bcs	331e8 <fb_value_set_destroy@@Base+0x7c>
   331cc:	ldr	r1, [r7, r4, lsl #2]
   331d0:	orr	r0, r1, #2
   331d4:	cmp	r0, #2
   331d8:	beq	331bc <fb_value_set_destroy@@Base+0x50>
   331dc:	mov	r0, r8
   331e0:	blx	r5
   331e4:	b	331bc <fb_value_set_destroy@@Base+0x50>
   331e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000331ec <fb_value_set_init@@Base>:
   331ec:	b	331f0 <fb_value_set_init@@Base+0x4>
   331f0:	push	{r4, r5, fp, lr}
   331f4:	add	fp, sp, #8
   331f8:	mov	r4, r0
   331fc:	mov	r2, #4
   33200:	mov	r0, #179	; 0xb3
   33204:	mov	r5, r2
   33208:	mul	r3, r2, r0
   3320c:	lsl	r2, r2, #1
   33210:	cmp	r1, r3, lsr #8
   33214:	bhi	33204 <fb_value_set_init@@Base+0x18>
   33218:	mov	r0, r5
   3321c:	mov	r1, #4
   33220:	bl	147d4 <calloc@plt>
   33224:	str	r0, [r4]
   33228:	cmp	r0, #0
   3322c:	mvneq	r0, #0
   33230:	movne	r0, #0
   33234:	strne	r0, [r4, #4]
   33238:	strne	r0, [r4, #8]
   3323c:	strne	r5, [r4, #12]
   33240:	pop	{r4, r5, fp, pc}

00033244 <fb_value_set_resize@@Base>:
   33244:	b	33248 <fb_value_set_resize@@Base+0x4>
   33248:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3324c:	add	fp, sp, #24
   33250:	sub	sp, sp, #16
   33254:	mov	r4, r0
   33258:	ldr	r5, [r0]
   3325c:	ldr	r0, [r0, #8]
   33260:	cmp	r0, r1
   33264:	movhi	r1, r0
   33268:	mov	r8, sp
   3326c:	mov	r0, r8
   33270:	bl	331f0 <fb_value_set_init@@Base+0x4>
   33274:	mov	r1, r0
   33278:	mvn	r0, #0
   3327c:	cmp	r1, #0
   33280:	beq	3328c <fb_value_set_resize@@Base+0x48>
   33284:	sub	sp, fp, #24
   33288:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3328c:	ldr	r0, [r4, #12]
   33290:	cmp	r0, #0
   33294:	beq	332e4 <fb_value_set_resize@@Base+0xa0>
   33298:	mov	r6, #0
   3329c:	mov	r9, sp
   332a0:	b	332b4 <fb_value_set_resize@@Base+0x70>
   332a4:	ldr	r0, [r4, #12]
   332a8:	add	r6, r6, #1
   332ac:	cmp	r6, r0
   332b0:	bcs	332e4 <fb_value_set_resize@@Base+0xa0>
   332b4:	ldr	r7, [r5, r6, lsl #2]
   332b8:	orr	r0, r7, #2
   332bc:	cmp	r0, #2
   332c0:	beq	332a4 <fb_value_set_resize@@Base+0x60>
   332c4:	mov	r0, r7
   332c8:	bl	33514 <fb_value_set_insert_item@@Base+0x34>
   332cc:	mov	r1, r0
   332d0:	mov	r0, r9
   332d4:	mov	r2, r7
   332d8:	mov	r3, #3
   332dc:	bl	3330c <fb_value_set_insert@@Base+0xc>
   332e0:	b	332a4 <fb_value_set_resize@@Base+0x60>
   332e4:	mov	r0, r4
   332e8:	bl	33144 <fb_value_set_clear@@Base+0x4>
   332ec:	vld1.64	{d16-d17}, [r8]
   332f0:	vst1.32	{d16-d17}, [r4]
   332f4:	mov	r0, #0
   332f8:	sub	sp, fp, #24
   332fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033300 <fb_value_set_insert@@Base>:
   33300:	mov	r2, r3
   33304:	ldr	r3, [sp]
   33308:	b	3330c <fb_value_set_insert@@Base+0xc>
   3330c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33310:	add	fp, sp, #28
   33314:	sub	sp, sp, #12
   33318:	cmp	r2, #2
   3331c:	beq	33458 <fb_value_set_insert@@Base+0x158>
   33320:	mov	r9, r2
   33324:	cmp	r2, #1
   33328:	beq	33478 <fb_value_set_insert@@Base+0x178>
   3332c:	cmp	r9, #0
   33330:	beq	33498 <fb_value_set_insert@@Base+0x198>
   33334:	mov	r6, r3
   33338:	mov	r7, r1
   3333c:	mov	r4, r0
   33340:	ldr	r0, [r0, #8]
   33344:	ldr	r1, [r4, #12]
   33348:	mov	r2, #179	; 0xb3
   3334c:	mul	r1, r1, r2
   33350:	cmp	r0, r1, lsr #8
   33354:	bcc	3336c <fb_value_set_insert@@Base+0x6c>
   33358:	lsl	r1, r0, #1
   3335c:	mov	r0, r4
   33360:	bl	33248 <fb_value_set_resize@@Base+0x4>
   33364:	cmp	r0, #0
   33368:	bne	334b8 <fb_value_set_insert@@Base+0x1b8>
   3336c:	ldr	r8, [r4]
   33370:	ldr	r0, [r4, #12]
   33374:	sub	r5, r0, #1
   33378:	mov	r0, r7
   3337c:	bl	33674 <fb_value_set_visit@@Base+0x4>
   33380:	and	r1, r0, r5
   33384:	orr	r2, r6, #1
   33388:	cmp	r2, #3
   3338c:	bne	333bc <fb_value_set_insert@@Base+0xbc>
   33390:	ldr	r2, [r4, #8]
   33394:	add	r2, r2, #1
   33398:	str	r2, [r4, #8]
   3339c:	add	r0, r0, #1
   333a0:	mov	r4, r8
   333a4:	ldr	r1, [r4, r1, lsl #2]!
   333a8:	orr	r1, r1, #2
   333ac:	cmp	r1, #2
   333b0:	beq	33420 <fb_value_set_insert@@Base+0x120>
   333b4:	and	r1, r0, r5
   333b8:	b	3339c <fb_value_set_insert@@Base+0x9c>
   333bc:	str	r6, [sp]
   333c0:	stmib	sp, {r4, r9}
   333c4:	add	sl, r0, #1
   333c8:	mov	r9, #0
   333cc:	b	333e0 <fb_value_set_insert@@Base+0xe0>
   333d0:	cmp	r9, #0
   333d4:	moveq	r9, r4
   333d8:	and	r1, sl, r5
   333dc:	add	sl, sl, #1
   333e0:	mov	r4, r8
   333e4:	ldr	r6, [r4, r1, lsl #2]!
   333e8:	cmp	r6, #2
   333ec:	beq	333d0 <fb_value_set_insert@@Base+0xd0>
   333f0:	cmp	r6, #0
   333f4:	beq	33428 <fb_value_set_insert@@Base+0x128>
   333f8:	mov	r0, r7
   333fc:	mov	r1, r6
   33400:	bl	336a8 <fb_value_set_visit@@Base+0x38>
   33404:	cmp	r0, #0
   33408:	beq	333d8 <fb_value_set_insert@@Base+0xd8>
   3340c:	ldr	r0, [sp]
   33410:	cmp	r0, #0
   33414:	ldr	r9, [sp, #8]
   33418:	streq	r9, [r4]
   3341c:	b	3344c <fb_value_set_insert@@Base+0x14c>
   33420:	mov	r6, #0
   33424:	b	33448 <fb_value_set_insert@@Base+0x148>
   33428:	ldr	r1, [sp, #4]
   3342c:	ldr	r0, [r1, #8]
   33430:	add	r0, r0, #1
   33434:	str	r0, [r1, #8]
   33438:	cmp	r9, #0
   3343c:	movne	r4, r9
   33440:	mov	r6, #0
   33444:	ldr	r9, [sp, #8]
   33448:	str	r9, [r4]
   3344c:	mov	r0, r6
   33450:	sub	sp, fp, #28
   33454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33458:	movw	r0, #50193	; 0xc411
   3345c:	movt	r0, #4
   33460:	movw	r1, #50039	; 0xc377
   33464:	movt	r1, #4
   33468:	movw	r3, #50119	; 0xc3c7
   3346c:	movt	r3, #4
   33470:	mov	r2, #115	; 0x73
   33474:	bl	14984 <__assert_fail@plt>
   33478:	movw	r0, #50216	; 0xc428
   3347c:	movt	r0, #4
   33480:	movw	r1, #50039	; 0xc377
   33484:	movt	r1, #4
   33488:	movw	r3, #50119	; 0xc3c7
   3348c:	movt	r3, #4
   33490:	mov	r2, #116	; 0x74
   33494:	bl	14984 <__assert_fail@plt>
   33498:	movw	r0, #50016	; 0xc360
   3349c:	movt	r0, #4
   334a0:	movw	r1, #50039	; 0xc377
   334a4:	movt	r1, #4
   334a8:	movw	r3, #50119	; 0xc3c7
   334ac:	movt	r3, #4
   334b0:	mov	r2, #114	; 0x72
   334b4:	bl	14984 <__assert_fail@plt>
   334b8:	movw	r0, #4272	; 0x10b0
   334bc:	movt	r0, #6
   334c0:	ldr	r0, [r0]
   334c4:	movw	r1, #50237	; 0xc43d
   334c8:	movt	r1, #4
   334cc:	movw	r2, #50260	; 0xc454
   334d0:	movt	r2, #4
   334d4:	bl	148c4 <fprintf@plt>
   334d8:	mov	r0, #1
   334dc:	bl	148a0 <exit@plt>

000334e0 <fb_value_set_insert_item@@Base>:
   334e0:	push	{r4, r5, r6, sl, fp, lr}
   334e4:	add	fp, sp, #16
   334e8:	mov	r4, r2
   334ec:	mov	r5, r1
   334f0:	mov	r6, r0
   334f4:	mov	r0, r1
   334f8:	bl	33514 <fb_value_set_insert_item@@Base+0x34>
   334fc:	mov	r1, r0
   33500:	mov	r0, r6
   33504:	mov	r2, r5
   33508:	mov	r3, r4
   3350c:	pop	{r4, r5, r6, sl, fp, lr}
   33510:	b	3330c <fb_value_set_insert@@Base+0xc>
   33514:	bx	lr

00033518 <fb_value_set_find@@Base>:
   33518:	b	3351c <fb_value_set_find@@Base+0x4>
   3351c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33520:	add	fp, sp, #24
   33524:	ldr	r7, [r0]
   33528:	cmp	r7, #0
   3352c:	beq	33584 <fb_value_set_find@@Base+0x6c>
   33530:	mov	r8, r1
   33534:	ldr	r0, [r0, #12]
   33538:	sub	r4, r0, #1
   3353c:	mov	r0, r1
   33540:	bl	33674 <fb_value_set_visit@@Base+0x4>
   33544:	mov	r5, r0
   33548:	b	33550 <fb_value_set_find@@Base+0x38>
   3354c:	add	r5, r5, #1
   33550:	and	r0, r5, r4
   33554:	ldr	r6, [r7, r0, lsl #2]
   33558:	cmp	r6, #2
   3355c:	beq	3354c <fb_value_set_find@@Base+0x34>
   33560:	cmp	r6, #0
   33564:	beq	33584 <fb_value_set_find@@Base+0x6c>
   33568:	mov	r0, r8
   3356c:	mov	r1, r6
   33570:	bl	336a8 <fb_value_set_visit@@Base+0x38>
   33574:	cmp	r0, #0
   33578:	beq	3354c <fb_value_set_find@@Base+0x34>
   3357c:	mov	r0, r6
   33580:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33584:	mov	r6, #0
   33588:	mov	r0, r6
   3358c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033590 <fb_value_set_find_item@@Base>:
   33590:	push	{r4, sl, fp, lr}
   33594:	add	fp, sp, #8
   33598:	mov	r4, r0
   3359c:	mov	r0, r1
   335a0:	bl	33514 <fb_value_set_insert_item@@Base+0x34>
   335a4:	mov	r1, r0
   335a8:	mov	r0, r4
   335ac:	pop	{r4, sl, fp, lr}
   335b0:	b	3351c <fb_value_set_find@@Base+0x4>

000335b4 <fb_value_set_remove@@Base>:
   335b4:	b	335b8 <fb_value_set_remove@@Base+0x4>
   335b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   335bc:	add	fp, sp, #28
   335c0:	sub	sp, sp, #4
   335c4:	ldr	sl, [r0]
   335c8:	mov	r6, #0
   335cc:	cmp	sl, #0
   335d0:	beq	33640 <fb_value_set_remove@@Base+0x8c>
   335d4:	mov	r9, r1
   335d8:	mov	r8, r0
   335dc:	ldr	r0, [r0, #12]
   335e0:	sub	r5, r0, #1
   335e4:	mov	r0, r1
   335e8:	bl	33674 <fb_value_set_visit@@Base+0x4>
   335ec:	mov	r7, r0
   335f0:	b	335f8 <fb_value_set_remove@@Base+0x44>
   335f4:	add	r7, r7, #1
   335f8:	and	r4, r7, r5
   335fc:	ldr	r6, [sl, r4, lsl #2]
   33600:	cmp	r6, #2
   33604:	beq	335f4 <fb_value_set_remove@@Base+0x40>
   33608:	cmp	r6, #0
   3360c:	beq	3363c <fb_value_set_remove@@Base+0x88>
   33610:	mov	r0, r9
   33614:	mov	r1, r6
   33618:	bl	336a8 <fb_value_set_visit@@Base+0x38>
   3361c:	cmp	r0, #0
   33620:	beq	335f4 <fb_value_set_remove@@Base+0x40>
   33624:	mov	r0, #2
   33628:	str	r0, [sl, r4, lsl #2]
   3362c:	ldr	r0, [r8, #8]
   33630:	sub	r0, r0, #1
   33634:	str	r0, [r8, #8]
   33638:	b	33640 <fb_value_set_remove@@Base+0x8c>
   3363c:	mov	r6, #0
   33640:	mov	r0, r6
   33644:	sub	sp, fp, #28
   33648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003364c <fb_value_set_remove_item@@Base>:
   3364c:	push	{r4, sl, fp, lr}
   33650:	add	fp, sp, #8
   33654:	mov	r4, r0
   33658:	mov	r0, r1
   3365c:	bl	33514 <fb_value_set_insert_item@@Base+0x34>
   33660:	mov	r1, r0
   33664:	mov	r0, r4
   33668:	pop	{r4, sl, fp, lr}
   3366c:	b	335b8 <fb_value_set_remove@@Base+0x4>

00033670 <fb_value_set_visit@@Base>:
   33670:	b	33190 <fb_value_set_destroy@@Base+0x24>
   33674:	ldrh	r1, [r0, #8]
   33678:	cmp	r1, #6
   3367c:	beq	3369c <fb_value_set_visit@@Base+0x2c>
   33680:	cmp	r1, #5
   33684:	cmpne	r1, #4
   33688:	movne	r0, #0
   3368c:	bxne	lr
   33690:	ldr	r0, [r0]
   33694:	eor	r0, r0, r1
   33698:	b	33704 <fb_value_set_visit@@Base+0x94>
   3369c:	ldrb	r0, [r0]
   336a0:	eor	r0, r0, r1
   336a4:	b	33704 <fb_value_set_visit@@Base+0x94>
   336a8:	mov	ip, r0
   336ac:	ldrh	r3, [r0, #8]
   336b0:	ldrh	r2, [r1, #8]
   336b4:	mov	r0, #0
   336b8:	cmp	r3, r2
   336bc:	bxne	lr
   336c0:	cmp	r3, #6
   336c4:	beq	336ec <fb_value_set_visit@@Base+0x7c>
   336c8:	cmp	r3, #5
   336cc:	cmpne	r3, #4
   336d0:	bne	33700 <fb_value_set_visit@@Base+0x90>
   336d4:	ldrd	r0, [r1]
   336d8:	ldrd	r2, [ip]
   336dc:	eor	r1, r3, r1
   336e0:	eor	r0, r2, r0
   336e4:	orr	r0, r0, r1
   336e8:	b	336f8 <fb_value_set_visit@@Base+0x88>
   336ec:	ldrb	r0, [r1]
   336f0:	ldrb	r1, [ip]
   336f4:	sub	r0, r1, r0
   336f8:	clz	r0, r0
   336fc:	lsr	r0, r0, #5
   33700:	bx	lr
   33704:	movw	r1, #15186	; 0x3b52
   33708:	movt	r1, #12137	; 0x2f69
   3370c:	eor	r0, r0, r1
   33710:	movw	r1, #31153	; 0x79b1
   33714:	movt	r1, #40503	; 0x9e37
   33718:	mul	r0, r0, r1
   3371c:	bx	lr
   33720:	eor	r1, r1, #-2147483648	; 0x80000000
   33724:	b	3372c <fb_value_set_visit@@Base+0xbc>
   33728:	eor	r3, r3, #-2147483648	; 0x80000000
   3372c:	push	{r4, r5, lr}
   33730:	lsl	r4, r1, #1
   33734:	lsl	r5, r3, #1
   33738:	teq	r4, r5
   3373c:	teqeq	r0, r2
   33740:	orrsne	ip, r4, r0
   33744:	orrsne	ip, r5, r2
   33748:	mvnsne	ip, r4, asr #21
   3374c:	mvnsne	ip, r5, asr #21
   33750:	beq	3393c <fb_value_set_visit@@Base+0x2cc>
   33754:	lsr	r4, r4, #21
   33758:	rsbs	r5, r4, r5, lsr #21
   3375c:	rsblt	r5, r5, #0
   33760:	ble	33780 <fb_value_set_visit@@Base+0x110>
   33764:	add	r4, r4, r5
   33768:	eor	r2, r0, r2
   3376c:	eor	r3, r1, r3
   33770:	eor	r0, r2, r0
   33774:	eor	r1, r3, r1
   33778:	eor	r2, r0, r2
   3377c:	eor	r3, r1, r3
   33780:	cmp	r5, #54	; 0x36
   33784:	pophi	{r4, r5, pc}
   33788:	tst	r1, #-2147483648	; 0x80000000
   3378c:	lsl	r1, r1, #12
   33790:	mov	ip, #1048576	; 0x100000
   33794:	orr	r1, ip, r1, lsr #12
   33798:	beq	337a4 <fb_value_set_visit@@Base+0x134>
   3379c:	rsbs	r0, r0, #0
   337a0:	rsc	r1, r1, #0
   337a4:	tst	r3, #-2147483648	; 0x80000000
   337a8:	lsl	r3, r3, #12
   337ac:	orr	r3, ip, r3, lsr #12
   337b0:	beq	337bc <fb_value_set_visit@@Base+0x14c>
   337b4:	rsbs	r2, r2, #0
   337b8:	rsc	r3, r3, #0
   337bc:	teq	r4, r5
   337c0:	beq	33924 <fb_value_set_visit@@Base+0x2b4>
   337c4:	sub	r4, r4, #1
   337c8:	rsbs	lr, r5, #32
   337cc:	blt	337e8 <fb_value_set_visit@@Base+0x178>
   337d0:	lsl	ip, r2, lr
   337d4:	adds	r0, r0, r2, lsr r5
   337d8:	adc	r1, r1, #0
   337dc:	adds	r0, r0, r3, lsl lr
   337e0:	adcs	r1, r1, r3, asr r5
   337e4:	b	33804 <fb_value_set_visit@@Base+0x194>
   337e8:	sub	r5, r5, #32
   337ec:	add	lr, lr, #32
   337f0:	cmp	r2, #1
   337f4:	lsl	ip, r3, lr
   337f8:	orrcs	ip, ip, #2
   337fc:	adds	r0, r0, r3, asr r5
   33800:	adcs	r1, r1, r3, asr #31
   33804:	and	r5, r1, #-2147483648	; 0x80000000
   33808:	bpl	33818 <fb_value_set_visit@@Base+0x1a8>
   3380c:	rsbs	ip, ip, #0
   33810:	rscs	r0, r0, #0
   33814:	rsc	r1, r1, #0
   33818:	cmp	r1, #1048576	; 0x100000
   3381c:	bcc	3385c <fb_value_set_visit@@Base+0x1ec>
   33820:	cmp	r1, #2097152	; 0x200000
   33824:	bcc	33844 <fb_value_set_visit@@Base+0x1d4>
   33828:	lsrs	r1, r1, #1
   3382c:	rrxs	r0, r0
   33830:	rrx	ip, ip
   33834:	add	r4, r4, #1
   33838:	lsl	r2, r4, #21
   3383c:	cmn	r2, #4194304	; 0x400000
   33840:	bcs	3399c <fb_value_set_visit@@Base+0x32c>
   33844:	cmp	ip, #-2147483648	; 0x80000000
   33848:	lsrseq	ip, r0, #1
   3384c:	adcs	r0, r0, #0
   33850:	adc	r1, r1, r4, lsl #20
   33854:	orr	r1, r1, r5
   33858:	pop	{r4, r5, pc}
   3385c:	lsls	ip, ip, #1
   33860:	adcs	r0, r0, r0
   33864:	adc	r1, r1, r1
   33868:	tst	r1, #1048576	; 0x100000
   3386c:	sub	r4, r4, #1
   33870:	bne	33844 <fb_value_set_visit@@Base+0x1d4>
   33874:	teq	r1, #0
   33878:	moveq	r1, r0
   3387c:	moveq	r0, #0
   33880:	clz	r3, r1
   33884:	addeq	r3, r3, #32
   33888:	sub	r3, r3, #11
   3388c:	subs	r2, r3, #32
   33890:	bge	338b4 <fb_value_set_visit@@Base+0x244>
   33894:	adds	r2, r2, #12
   33898:	ble	338b0 <fb_value_set_visit@@Base+0x240>
   3389c:	add	ip, r2, #20
   338a0:	rsb	r2, r2, #12
   338a4:	lsl	r0, r1, ip
   338a8:	lsr	r1, r1, r2
   338ac:	b	338c4 <fb_value_set_visit@@Base+0x254>
   338b0:	add	r2, r2, #20
   338b4:	rsble	ip, r2, #32
   338b8:	lsl	r1, r1, r2
   338bc:	orrle	r1, r1, r0, lsr ip
   338c0:	lslle	r0, r0, r2
   338c4:	subs	r4, r4, r3
   338c8:	addge	r1, r1, r4, lsl #20
   338cc:	orrge	r1, r1, r5
   338d0:	popge	{r4, r5, pc}
   338d4:	mvn	r4, r4
   338d8:	subs	r4, r4, #31
   338dc:	bge	33918 <fb_value_set_visit@@Base+0x2a8>
   338e0:	adds	r4, r4, #12
   338e4:	bgt	33900 <fb_value_set_visit@@Base+0x290>
   338e8:	add	r4, r4, #20
   338ec:	rsb	r2, r4, #32
   338f0:	lsr	r0, r0, r4
   338f4:	orr	r0, r0, r1, lsl r2
   338f8:	orr	r1, r5, r1, lsr r4
   338fc:	pop	{r4, r5, pc}
   33900:	rsb	r4, r4, #12
   33904:	rsb	r2, r4, #32
   33908:	lsr	r0, r0, r2
   3390c:	orr	r0, r0, r1, lsl r4
   33910:	mov	r1, r5
   33914:	pop	{r4, r5, pc}
   33918:	lsr	r0, r1, r4
   3391c:	mov	r1, r5
   33920:	pop	{r4, r5, pc}
   33924:	teq	r4, #0
   33928:	eor	r3, r3, #1048576	; 0x100000
   3392c:	eoreq	r1, r1, #1048576	; 0x100000
   33930:	addeq	r4, r4, #1
   33934:	subne	r5, r5, #1
   33938:	b	337c4 <fb_value_set_visit@@Base+0x154>
   3393c:	mvns	ip, r4, asr #21
   33940:	mvnsne	ip, r5, asr #21
   33944:	beq	339ac <fb_value_set_visit@@Base+0x33c>
   33948:	teq	r4, r5
   3394c:	teqeq	r0, r2
   33950:	beq	33964 <fb_value_set_visit@@Base+0x2f4>
   33954:	orrs	ip, r4, r0
   33958:	moveq	r1, r3
   3395c:	moveq	r0, r2
   33960:	pop	{r4, r5, pc}
   33964:	teq	r1, r3
   33968:	movne	r1, #0
   3396c:	movne	r0, #0
   33970:	popne	{r4, r5, pc}
   33974:	lsrs	ip, r4, #21
   33978:	bne	3398c <fb_value_set_visit@@Base+0x31c>
   3397c:	lsls	r0, r0, #1
   33980:	adcs	r1, r1, r1
   33984:	orrcs	r1, r1, #-2147483648	; 0x80000000
   33988:	pop	{r4, r5, pc}
   3398c:	adds	r4, r4, #4194304	; 0x400000
   33990:	addcc	r1, r1, #1048576	; 0x100000
   33994:	popcc	{r4, r5, pc}
   33998:	and	r5, r1, #-2147483648	; 0x80000000
   3399c:	orr	r1, r5, #2130706432	; 0x7f000000
   339a0:	orr	r1, r1, #15728640	; 0xf00000
   339a4:	mov	r0, #0
   339a8:	pop	{r4, r5, pc}
   339ac:	mvns	ip, r4, asr #21
   339b0:	movne	r1, r3
   339b4:	movne	r0, r2
   339b8:	mvnseq	ip, r5, asr #21
   339bc:	movne	r3, r1
   339c0:	movne	r2, r0
   339c4:	orrs	r4, r0, r1, lsl #12
   339c8:	orrseq	r5, r2, r3, lsl #12
   339cc:	teqeq	r1, r3
   339d0:	orrne	r1, r1, #524288	; 0x80000
   339d4:	pop	{r4, r5, pc}
   339d8:	teq	r0, #0
   339dc:	moveq	r1, #0
   339e0:	bxeq	lr
   339e4:	push	{r4, r5, lr}
   339e8:	mov	r4, #1024	; 0x400
   339ec:	add	r4, r4, #50	; 0x32
   339f0:	mov	r5, #0
   339f4:	mov	r1, #0
   339f8:	b	33874 <fb_value_set_visit@@Base+0x204>
   339fc:	teq	r0, #0
   33a00:	moveq	r1, #0
   33a04:	bxeq	lr
   33a08:	push	{r4, r5, lr}
   33a0c:	mov	r4, #1024	; 0x400
   33a10:	add	r4, r4, #50	; 0x32
   33a14:	ands	r5, r0, #-2147483648	; 0x80000000
   33a18:	rsbmi	r0, r0, #0
   33a1c:	mov	r1, #0
   33a20:	b	33874 <fb_value_set_visit@@Base+0x204>
   33a24:	lsls	r2, r0, #1
   33a28:	asr	r1, r2, #3
   33a2c:	rrx	r1, r1
   33a30:	lsl	r0, r2, #28
   33a34:	andsne	r3, r2, #-16777216	; 0xff000000
   33a38:	teqne	r3, #-16777216	; 0xff000000
   33a3c:	eorne	r1, r1, #939524096	; 0x38000000
   33a40:	bxne	lr
   33a44:	bics	r2, r2, #-16777216	; 0xff000000
   33a48:	bxeq	lr
   33a4c:	teq	r3, #-16777216	; 0xff000000
   33a50:	orreq	r1, r1, #524288	; 0x80000
   33a54:	bxeq	lr
   33a58:	push	{r4, r5, lr}
   33a5c:	mov	r4, #896	; 0x380
   33a60:	and	r5, r1, #-2147483648	; 0x80000000
   33a64:	bic	r1, r1, #-2147483648	; 0x80000000
   33a68:	b	33874 <fb_value_set_visit@@Base+0x204>
   33a6c:	orrs	r2, r0, r1
   33a70:	bxeq	lr
   33a74:	push	{r4, r5, lr}
   33a78:	mov	r5, #0
   33a7c:	b	33a9c <fb_value_set_visit@@Base+0x42c>
   33a80:	orrs	r2, r0, r1
   33a84:	bxeq	lr
   33a88:	push	{r4, r5, lr}
   33a8c:	ands	r5, r1, #-2147483648	; 0x80000000
   33a90:	bpl	33a9c <fb_value_set_visit@@Base+0x42c>
   33a94:	rsbs	r0, r0, #0
   33a98:	rsc	r1, r1, #0
   33a9c:	mov	r4, #1024	; 0x400
   33aa0:	add	r4, r4, #50	; 0x32
   33aa4:	lsrs	ip, r1, #22
   33aa8:	beq	33818 <fb_value_set_visit@@Base+0x1a8>
   33aac:	mov	r2, #3
   33ab0:	lsrs	ip, ip, #3
   33ab4:	addne	r2, r2, #3
   33ab8:	lsrs	ip, ip, #3
   33abc:	addne	r2, r2, #3
   33ac0:	add	r2, r2, ip, lsr #3
   33ac4:	rsb	r3, r2, #32
   33ac8:	lsl	ip, r0, r3
   33acc:	lsr	r0, r0, r2
   33ad0:	orr	r0, r0, r1, lsl r3
   33ad4:	lsr	r1, r1, r2
   33ad8:	add	r4, r4, r2
   33adc:	b	33818 <fb_value_set_visit@@Base+0x1a8>
   33ae0:	eor	r0, r0, #-2147483648	; 0x80000000
   33ae4:	b	33aec <fb_value_set_visit@@Base+0x47c>
   33ae8:	eor	r1, r1, #-2147483648	; 0x80000000
   33aec:	lsls	r2, r0, #1
   33af0:	lslsne	r3, r1, #1
   33af4:	teqne	r2, r3
   33af8:	mvnsne	ip, r2, asr #24
   33afc:	mvnsne	ip, r3, asr #24
   33b00:	beq	33bf8 <fb_value_set_visit@@Base+0x588>
   33b04:	lsr	r2, r2, #24
   33b08:	rsbs	r3, r2, r3, lsr #24
   33b0c:	addgt	r2, r2, r3
   33b10:	eorgt	r1, r0, r1
   33b14:	eorgt	r0, r1, r0
   33b18:	eorgt	r1, r0, r1
   33b1c:	rsblt	r3, r3, #0
   33b20:	cmp	r3, #25
   33b24:	bxhi	lr
   33b28:	tst	r0, #-2147483648	; 0x80000000
   33b2c:	orr	r0, r0, #8388608	; 0x800000
   33b30:	bic	r0, r0, #-16777216	; 0xff000000
   33b34:	rsbne	r0, r0, #0
   33b38:	tst	r1, #-2147483648	; 0x80000000
   33b3c:	orr	r1, r1, #8388608	; 0x800000
   33b40:	bic	r1, r1, #-16777216	; 0xff000000
   33b44:	rsbne	r1, r1, #0
   33b48:	teq	r2, r3
   33b4c:	beq	33be0 <fb_value_set_visit@@Base+0x570>
   33b50:	sub	r2, r2, #1
   33b54:	adds	r0, r0, r1, asr r3
   33b58:	rsb	r3, r3, #32
   33b5c:	lsl	r1, r1, r3
   33b60:	and	r3, r0, #-2147483648	; 0x80000000
   33b64:	bpl	33b70 <fb_value_set_visit@@Base+0x500>
   33b68:	rsbs	r1, r1, #0
   33b6c:	rsc	r0, r0, #0
   33b70:	cmp	r0, #8388608	; 0x800000
   33b74:	bcc	33ba8 <fb_value_set_visit@@Base+0x538>
   33b78:	cmp	r0, #16777216	; 0x1000000
   33b7c:	bcc	33b94 <fb_value_set_visit@@Base+0x524>
   33b80:	lsrs	r0, r0, #1
   33b84:	rrx	r1, r1
   33b88:	add	r2, r2, #1
   33b8c:	cmp	r2, #254	; 0xfe
   33b90:	bcs	33c4c <fb_value_set_visit@@Base+0x5dc>
   33b94:	cmp	r1, #-2147483648	; 0x80000000
   33b98:	adc	r0, r0, r2, lsl #23
   33b9c:	biceq	r0, r0, #1
   33ba0:	orr	r0, r0, r3
   33ba4:	bx	lr
   33ba8:	lsls	r1, r1, #1
   33bac:	adc	r0, r0, r0
   33bb0:	tst	r0, #8388608	; 0x800000
   33bb4:	sub	r2, r2, #1
   33bb8:	bne	33b94 <fb_value_set_visit@@Base+0x524>
   33bbc:	clz	ip, r0
   33bc0:	sub	ip, ip, #8
   33bc4:	subs	r2, r2, ip
   33bc8:	lsl	r0, r0, ip
   33bcc:	addge	r0, r0, r2, lsl #23
   33bd0:	rsblt	r2, r2, #0
   33bd4:	orrge	r0, r0, r3
   33bd8:	orrlt	r0, r3, r0, lsr r2
   33bdc:	bx	lr
   33be0:	teq	r2, #0
   33be4:	eor	r1, r1, #8388608	; 0x800000
   33be8:	eoreq	r0, r0, #8388608	; 0x800000
   33bec:	addeq	r2, r2, #1
   33bf0:	subne	r3, r3, #1
   33bf4:	b	33b50 <fb_value_set_visit@@Base+0x4e0>
   33bf8:	lsl	r3, r1, #1
   33bfc:	mvns	ip, r2, asr #24
   33c00:	mvnsne	ip, r3, asr #24
   33c04:	beq	33c58 <fb_value_set_visit@@Base+0x5e8>
   33c08:	teq	r2, r3
   33c0c:	beq	33c1c <fb_value_set_visit@@Base+0x5ac>
   33c10:	teq	r2, #0
   33c14:	moveq	r0, r1
   33c18:	bx	lr
   33c1c:	teq	r0, r1
   33c20:	movne	r0, #0
   33c24:	bxne	lr
   33c28:	tst	r2, #-16777216	; 0xff000000
   33c2c:	bne	33c3c <fb_value_set_visit@@Base+0x5cc>
   33c30:	lsls	r0, r0, #1
   33c34:	orrcs	r0, r0, #-2147483648	; 0x80000000
   33c38:	bx	lr
   33c3c:	adds	r2, r2, #33554432	; 0x2000000
   33c40:	addcc	r0, r0, #8388608	; 0x800000
   33c44:	bxcc	lr
   33c48:	and	r3, r0, #-2147483648	; 0x80000000
   33c4c:	orr	r0, r3, #2130706432	; 0x7f000000
   33c50:	orr	r0, r0, #8388608	; 0x800000
   33c54:	bx	lr
   33c58:	mvns	r2, r2, asr #24
   33c5c:	movne	r0, r1
   33c60:	mvnseq	r3, r3, asr #24
   33c64:	movne	r1, r0
   33c68:	lsls	r2, r0, #9
   33c6c:	lslseq	r3, r1, #9
   33c70:	teqeq	r0, r1
   33c74:	orrne	r0, r0, #4194304	; 0x400000
   33c78:	bx	lr
   33c7c:	mov	r3, #0
   33c80:	b	33c8c <fb_value_set_visit@@Base+0x61c>
   33c84:	ands	r3, r0, #-2147483648	; 0x80000000
   33c88:	rsbmi	r0, r0, #0
   33c8c:	movs	ip, r0
   33c90:	bxeq	lr
   33c94:	orr	r3, r3, #1258291200	; 0x4b000000
   33c98:	mov	r1, r0
   33c9c:	mov	r0, #0
   33ca0:	b	33ce4 <fb_value_set_visit@@Base+0x674>
   33ca4:	orrs	r2, r0, r1
   33ca8:	bxeq	lr
   33cac:	mov	r3, #0
   33cb0:	b	33ccc <fb_value_set_visit@@Base+0x65c>
   33cb4:	orrs	r2, r0, r1
   33cb8:	bxeq	lr
   33cbc:	ands	r3, r1, #-2147483648	; 0x80000000
   33cc0:	bpl	33ccc <fb_value_set_visit@@Base+0x65c>
   33cc4:	rsbs	r0, r0, #0
   33cc8:	rsc	r1, r1, #0
   33ccc:	movs	ip, r1
   33cd0:	moveq	ip, r0
   33cd4:	moveq	r1, r0
   33cd8:	moveq	r0, #0
   33cdc:	orr	r3, r3, #1526726656	; 0x5b000000
   33ce0:	subeq	r3, r3, #268435456	; 0x10000000
   33ce4:	sub	r3, r3, #8388608	; 0x800000
   33ce8:	clz	r2, ip
   33cec:	subs	r2, r2, #8
   33cf0:	sub	r3, r3, r2, lsl #23
   33cf4:	blt	33d14 <fb_value_set_visit@@Base+0x6a4>
   33cf8:	add	r3, r3, r1, lsl r2
   33cfc:	lsl	ip, r0, r2
   33d00:	rsb	r2, r2, #32
   33d04:	cmp	ip, #-2147483648	; 0x80000000
   33d08:	adc	r0, r3, r0, lsr r2
   33d0c:	biceq	r0, r0, #1
   33d10:	bx	lr
   33d14:	add	r2, r2, #32
   33d18:	lsl	ip, r1, r2
   33d1c:	rsb	r2, r2, #32
   33d20:	orrs	r0, r0, ip, lsl #1
   33d24:	adc	r0, r3, r1, lsr r2
   33d28:	biceq	r0, r0, ip, lsr #31
   33d2c:	bx	lr
   33d30:	cmp	r3, #0
   33d34:	cmpeq	r2, #0
   33d38:	bne	33d50 <fb_value_set_visit@@Base+0x6e0>
   33d3c:	cmp	r1, #0
   33d40:	cmpeq	r0, #0
   33d44:	mvnne	r1, #0
   33d48:	mvnne	r0, #0
   33d4c:	b	33d6c <fb_value_set_visit@@Base+0x6fc>
   33d50:	sub	sp, sp, #8
   33d54:	push	{sp, lr}
   33d58:	bl	33e58 <fb_value_set_visit@@Base+0x7e8>
   33d5c:	ldr	lr, [sp, #4]
   33d60:	add	sp, sp, #8
   33d64:	pop	{r2, r3}
   33d68:	bx	lr
   33d6c:	push	{r1, lr}
   33d70:	mov	r0, #8
   33d74:	bl	147e0 <raise@plt>
   33d78:	pop	{r1, pc}
   33d7c:	vmov	s15, r0
   33d80:	vcmpe.f32	s15, #0.0
   33d84:	vmrs	APSR_nzcv, fpscr
   33d88:	bmi	33d90 <fb_value_set_visit@@Base+0x720>
   33d8c:	b	33dd8 <fb_value_set_visit@@Base+0x768>
   33d90:	push	{r4, lr}
   33d94:	eor	r0, r0, #-2147483648	; 0x80000000
   33d98:	bl	33dd8 <fb_value_set_visit@@Base+0x768>
   33d9c:	rsbs	r0, r0, #0
   33da0:	rsc	r1, r1, #0
   33da4:	pop	{r4, pc}
   33da8:	vmov	d7, r0, r1
   33dac:	vcmpe.f64	d7, #0.0
   33db0:	vmrs	APSR_nzcv, fpscr
   33db4:	bmi	33dbc <fb_value_set_visit@@Base+0x74c>
   33db8:	b	33e18 <fb_value_set_visit@@Base+0x7a8>
   33dbc:	push	{r4, lr}
   33dc0:	eor	r1, r1, #-2147483648	; 0x80000000
   33dc4:	bl	33e18 <fb_value_set_visit@@Base+0x7a8>
   33dc8:	rsbs	r0, r0, #0
   33dcc:	rsc	r1, r1, #0
   33dd0:	pop	{r4, pc}
   33dd4:	andeq	r0, r0, r0
   33dd8:	vmov	s15, r0
   33ddc:	vldr	d5, [pc, #36]	; 33e08 <fb_value_set_visit@@Base+0x798>
   33de0:	vcvt.f64.f32	d6, s15
   33de4:	vldr	d7, [pc, #36]	; 33e10 <fb_value_set_visit@@Base+0x7a0>
   33de8:	vmul.f64	d7, d6, d7
   33dec:	vcvt.u32.f64	s14, d7
   33df0:	vcvt.f64.u32	d4, s14
   33df4:	vmov	r1, s14
   33df8:	vmls.f64	d6, d4, d5
   33dfc:	vcvt.u32.f64	s15, d6
   33e00:	vmov	r0, s15
   33e04:	bx	lr
   33e08:	andeq	r0, r0, r0
   33e0c:	mvnsmi	r0, r0
   33e10:	andeq	r0, r0, r0
   33e14:	ldclcc	0, cr0, [r0]
   33e18:	vmov	d6, r0, r1
   33e1c:	vldr	d7, [pc, #36]	; 33e48 <fb_value_set_visit@@Base+0x7d8>
   33e20:	vldr	d5, [pc, #40]	; 33e50 <fb_value_set_visit@@Base+0x7e0>
   33e24:	vmul.f64	d7, d6, d7
   33e28:	vcvt.u32.f64	s14, d7
   33e2c:	vcvt.f64.u32	d4, s14
   33e30:	vmov	r1, s14
   33e34:	vmls.f64	d6, d4, d5
   33e38:	vcvt.u32.f64	s15, d6
   33e3c:	vmov	r0, s15
   33e40:	bx	lr
   33e44:	nop			; (mov r0, r0)
   33e48:	andeq	r0, r0, r0
   33e4c:	ldclcc	0, cr0, [r0]
   33e50:	andeq	r0, r0, r0
   33e54:	mvnsmi	r0, r0
   33e58:	cmp	r1, r3
   33e5c:	cmpeq	r0, r2
   33e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e64:	mov	r4, r0
   33e68:	movcc	r0, #0
   33e6c:	mov	r5, r1
   33e70:	ldr	lr, [sp, #36]	; 0x24
   33e74:	movcc	r1, r0
   33e78:	bcc	33f74 <fb_value_set_visit@@Base+0x904>
   33e7c:	cmp	r3, #0
   33e80:	clzeq	ip, r2
   33e84:	clzne	ip, r3
   33e88:	addeq	ip, ip, #32
   33e8c:	cmp	r5, #0
   33e90:	clzeq	r1, r4
   33e94:	addeq	r1, r1, #32
   33e98:	clzne	r1, r5
   33e9c:	sub	ip, ip, r1
   33ea0:	sub	sl, ip, #32
   33ea4:	lsl	r9, r3, ip
   33ea8:	rsb	fp, ip, #32
   33eac:	orr	r9, r9, r2, lsl sl
   33eb0:	orr	r9, r9, r2, lsr fp
   33eb4:	lsl	r8, r2, ip
   33eb8:	cmp	r5, r9
   33ebc:	cmpeq	r4, r8
   33ec0:	movcc	r0, #0
   33ec4:	movcc	r1, r0
   33ec8:	bcc	33ee4 <fb_value_set_visit@@Base+0x874>
   33ecc:	mov	r0, #1
   33ed0:	subs	r4, r4, r8
   33ed4:	lsl	r1, r0, sl
   33ed8:	orr	r1, r1, r0, lsr fp
   33edc:	lsl	r0, r0, ip
   33ee0:	sbc	r5, r5, r9
   33ee4:	cmp	ip, #0
   33ee8:	beq	33f74 <fb_value_set_visit@@Base+0x904>
   33eec:	lsr	r6, r8, #1
   33ef0:	orr	r6, r6, r9, lsl #31
   33ef4:	lsr	r7, r9, #1
   33ef8:	mov	r2, ip
   33efc:	b	33f20 <fb_value_set_visit@@Base+0x8b0>
   33f00:	subs	r3, r4, r6
   33f04:	sbc	r8, r5, r7
   33f08:	adds	r3, r3, r3
   33f0c:	adc	r8, r8, r8
   33f10:	adds	r4, r3, #1
   33f14:	adc	r5, r8, #0
   33f18:	subs	r2, r2, #1
   33f1c:	beq	33f3c <fb_value_set_visit@@Base+0x8cc>
   33f20:	cmp	r5, r7
   33f24:	cmpeq	r4, r6
   33f28:	bcs	33f00 <fb_value_set_visit@@Base+0x890>
   33f2c:	adds	r4, r4, r4
   33f30:	adc	r5, r5, r5
   33f34:	subs	r2, r2, #1
   33f38:	bne	33f20 <fb_value_set_visit@@Base+0x8b0>
   33f3c:	lsr	r3, r4, ip
   33f40:	orr	r3, r3, r5, lsl fp
   33f44:	lsr	r2, r5, ip
   33f48:	orr	r3, r3, r5, lsr sl
   33f4c:	adds	r0, r0, r4
   33f50:	mov	r4, r3
   33f54:	lsl	r3, r2, ip
   33f58:	orr	r3, r3, r4, lsl sl
   33f5c:	lsl	ip, r4, ip
   33f60:	orr	r3, r3, r4, lsr fp
   33f64:	adc	r1, r1, r5
   33f68:	subs	r0, r0, ip
   33f6c:	mov	r5, r2
   33f70:	sbc	r1, r1, r3
   33f74:	cmp	lr, #0
   33f78:	strdne	r4, [lr]
   33f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033f80 <__libc_csu_init@@Base>:
   33f80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33f84:	mov	r7, r0
   33f88:	ldr	r6, [pc, #72]	; 33fd8 <__libc_csu_init@@Base+0x58>
   33f8c:	ldr	r5, [pc, #72]	; 33fdc <__libc_csu_init@@Base+0x5c>
   33f90:	add	r6, pc, r6
   33f94:	add	r5, pc, r5
   33f98:	sub	r6, r6, r5
   33f9c:	mov	r8, r1
   33fa0:	mov	r9, r2
   33fa4:	bl	147b4 <calloc@plt-0x20>
   33fa8:	asrs	r6, r6, #2
   33fac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   33fb0:	mov	r4, #0
   33fb4:	add	r4, r4, #1
   33fb8:	ldr	r3, [r5], #4
   33fbc:	mov	r2, r9
   33fc0:	mov	r1, r8
   33fc4:	mov	r0, r7
   33fc8:	blx	r3
   33fcc:	cmp	r6, r4
   33fd0:	bne	33fb4 <__libc_csu_init@@Base+0x34>
   33fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33fd8:	andeq	ip, r2, r4, ror pc
   33fdc:	andeq	ip, r2, ip, ror #30

00033fe0 <__libc_csu_fini@@Base>:
   33fe0:	bx	lr

Disassembly of section .fini:

00033fe4 <.fini>:
   33fe4:	push	{r3, lr}
   33fe8:	pop	{r3, pc}
