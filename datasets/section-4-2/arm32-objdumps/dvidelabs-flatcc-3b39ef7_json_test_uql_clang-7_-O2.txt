
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

00014e08 <.init>:
   14e08:	push	{r3, lr}
   14e0c:	bl	14f84 <_start@@Base+0x3c>
   14e10:	pop	{r3, pc}

Disassembly of section .plt:

00014e14 <raise@plt-0x14>:
   14e14:	push	{lr}		; (str lr, [sp, #-4]!)
   14e18:	ldr	lr, [pc, #4]	; 14e24 <raise@plt-0x4>
   14e1c:	add	lr, pc, lr
   14e20:	ldr	pc, [lr, #8]!
   14e24:	ldrdeq	sl, [r4], -ip

00014e28 <raise@plt>:
   14e28:	add	ip, pc, #0, 12
   14e2c:	add	ip, ip, #303104	; 0x4a000
   14e30:	ldr	pc, [ip, #476]!	; 0x1dc

00014e34 <strcmp@plt>:
   14e34:	add	ip, pc, #0, 12
   14e38:	add	ip, ip, #303104	; 0x4a000
   14e3c:	ldr	pc, [ip, #468]!	; 0x1d4

00014e40 <memmove@plt>:
   14e40:	add	ip, pc, #0, 12
   14e44:	add	ip, ip, #303104	; 0x4a000
   14e48:	ldr	pc, [ip, #460]!	; 0x1cc

00014e4c <free@plt>:
   14e4c:	add	ip, pc, #0, 12
   14e50:	add	ip, ip, #303104	; 0x4a000
   14e54:	ldr	pc, [ip, #452]!	; 0x1c4

00014e58 <memcpy@plt>:
   14e58:	add	ip, pc, #0, 12
   14e5c:	add	ip, ip, #303104	; 0x4a000
   14e60:	ldr	pc, [ip, #444]!	; 0x1bc

00014e64 <memcmp@plt>:
   14e64:	add	ip, pc, #0, 12
   14e68:	add	ip, ip, #303104	; 0x4a000
   14e6c:	ldr	pc, [ip, #436]!	; 0x1b4

00014e70 <__isinff@plt>:
   14e70:	add	ip, pc, #0, 12
   14e74:	add	ip, ip, #303104	; 0x4a000
   14e78:	ldr	pc, [ip, #428]!	; 0x1ac

00014e7c <__isinf@plt>:
   14e7c:	add	ip, pc, #0, 12
   14e80:	add	ip, ip, #303104	; 0x4a000
   14e84:	ldr	pc, [ip, #420]!	; 0x1a4

00014e88 <realloc@plt>:
   14e88:	add	ip, pc, #0, 12
   14e8c:	add	ip, ip, #303104	; 0x4a000
   14e90:	ldr	pc, [ip, #412]!	; 0x19c

00014e94 <fwrite@plt>:
   14e94:	add	ip, pc, #0, 12
   14e98:	add	ip, ip, #303104	; 0x4a000
   14e9c:	ldr	pc, [ip, #404]!	; 0x194

00014ea0 <malloc@plt>:
   14ea0:	add	ip, pc, #0, 12
   14ea4:	add	ip, ip, #303104	; 0x4a000
   14ea8:	ldr	pc, [ip, #396]!	; 0x18c

00014eac <__libc_start_main@plt>:
   14eac:	add	ip, pc, #0, 12
   14eb0:	add	ip, ip, #303104	; 0x4a000
   14eb4:	ldr	pc, [ip, #388]!	; 0x184

00014eb8 <__gmon_start__@plt>:
   14eb8:	add	ip, pc, #0, 12
   14ebc:	add	ip, ip, #303104	; 0x4a000
   14ec0:	ldr	pc, [ip, #380]!	; 0x17c

00014ec4 <strlen@plt>:
   14ec4:	add	ip, pc, #0, 12
   14ec8:	add	ip, ip, #303104	; 0x4a000
   14ecc:	ldr	pc, [ip, #372]!	; 0x174

00014ed0 <fprintf@plt>:
   14ed0:	add	ip, pc, #0, 12
   14ed4:	add	ip, ip, #303104	; 0x4a000
   14ed8:	ldr	pc, [ip, #364]!	; 0x16c

00014edc <posix_memalign@plt>:
   14edc:	add	ip, pc, #0, 12
   14ee0:	add	ip, ip, #303104	; 0x4a000
   14ee4:	ldr	pc, [ip, #356]!	; 0x164

00014ee8 <memset@plt>:
   14ee8:	add	ip, pc, #0, 12
   14eec:	add	ip, ip, #303104	; 0x4a000
   14ef0:	ldr	pc, [ip, #348]!	; 0x15c

00014ef4 <strncpy@plt>:
   14ef4:	add	ip, pc, #0, 12
   14ef8:	add	ip, ip, #303104	; 0x4a000
   14efc:	ldr	pc, [ip, #340]!	; 0x154

00014f00 <strtod@plt>:
   14f00:	add	ip, pc, #0, 12
   14f04:	add	ip, ip, #303104	; 0x4a000
   14f08:	ldr	pc, [ip, #332]!	; 0x14c

00014f0c <memchr@plt>:
   14f0c:	add	ip, pc, #0, 12
   14f10:	add	ip, ip, #303104	; 0x4a000
   14f14:	ldr	pc, [ip, #324]!	; 0x144

00014f18 <fputc@plt>:
   14f18:	add	ip, pc, #0, 12
   14f1c:	add	ip, ip, #303104	; 0x4a000
   14f20:	ldr	pc, [ip, #316]!	; 0x13c

00014f24 <sprintf@plt>:
   14f24:	add	ip, pc, #0, 12
   14f28:	add	ip, ip, #303104	; 0x4a000
   14f2c:	ldr	pc, [ip, #308]!	; 0x134

00014f30 <abort@plt>:
   14f30:	add	ip, pc, #0, 12
   14f34:	add	ip, ip, #303104	; 0x4a000
   14f38:	ldr	pc, [ip, #300]!	; 0x12c

00014f3c <__assert_fail@plt>:
   14f3c:	add	ip, pc, #0, 12
   14f40:	add	ip, ip, #303104	; 0x4a000
   14f44:	ldr	pc, [ip, #292]!	; 0x124

Disassembly of section .text:

00014f48 <_start@@Base>:
   14f48:	mov	fp, #0
   14f4c:	mov	lr, #0
   14f50:	pop	{r1}		; (ldr r1, [sp], #4)
   14f54:	mov	r2, sp
   14f58:	push	{r2}		; (str r2, [sp, #-4]!)
   14f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   14f60:	ldr	ip, [pc, #16]	; 14f78 <_start@@Base+0x30>
   14f64:	push	{ip}		; (str ip, [sp, #-4]!)
   14f68:	ldr	r0, [pc, #12]	; 14f7c <_start@@Base+0x34>
   14f6c:	ldr	r3, [pc, #12]	; 14f80 <_start@@Base+0x38>
   14f70:	bl	14eac <__libc_start_main@plt>
   14f74:	bl	14f30 <abort@plt>
   14f78:	andeq	r7, r4, ip, ror #13
   14f7c:	andeq	r6, r1, r0, asr #4
   14f80:	andeq	r7, r4, ip, lsl #13
   14f84:	ldr	r3, [pc, #20]	; 14fa0 <_start@@Base+0x58>
   14f88:	ldr	r2, [pc, #20]	; 14fa4 <_start@@Base+0x5c>
   14f8c:	add	r3, pc, r3
   14f90:	ldr	r2, [r3, r2]
   14f94:	cmp	r2, #0
   14f98:	bxeq	lr
   14f9c:	b	14eb8 <__gmon_start__@plt>
   14fa0:	andeq	sl, r4, ip, rrx
   14fa4:	andeq	r0, r0, r4, ror r0
   14fa8:	ldr	r0, [pc, #24]	; 14fc8 <_start@@Base+0x80>
   14fac:	ldr	r3, [pc, #24]	; 14fcc <_start@@Base+0x84>
   14fb0:	cmp	r3, r0
   14fb4:	bxeq	lr
   14fb8:	ldr	r3, [pc, #16]	; 14fd0 <_start@@Base+0x88>
   14fbc:	cmp	r3, #0
   14fc0:	bxeq	lr
   14fc4:	bx	r3
   14fc8:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   14fcc:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   14fd0:	andeq	r0, r0, r0
   14fd4:	ldr	r0, [pc, #36]	; 15000 <_start@@Base+0xb8>
   14fd8:	ldr	r1, [pc, #36]	; 15004 <_start@@Base+0xbc>
   14fdc:	sub	r1, r1, r0
   14fe0:	asr	r1, r1, #2
   14fe4:	add	r1, r1, r1, lsr #31
   14fe8:	asrs	r1, r1, #1
   14fec:	bxeq	lr
   14ff0:	ldr	r3, [pc, #16]	; 15008 <_start@@Base+0xc0>
   14ff4:	cmp	r3, #0
   14ff8:	bxeq	lr
   14ffc:	bx	r3
   15000:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   15004:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   15008:	andeq	r0, r0, r0
   1500c:	push	{r4, lr}
   15010:	ldr	r4, [pc, #24]	; 15030 <_start@@Base+0xe8>
   15014:	ldrb	r3, [r4]
   15018:	cmp	r3, #0
   1501c:	popne	{r4, pc}
   15020:	bl	14fa8 <_start@@Base+0x60>
   15024:	mov	r3, #1
   15028:	strb	r3, [r4]
   1502c:	pop	{r4, pc}
   15030:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
   15034:	b	14fd4 <_start@@Base+0x8c>

00015038 <test_json@@Base>:
   15038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1503c:	add	fp, sp, #28
   15040:	sub	sp, sp, #372	; 0x174
   15044:	mov	r6, r0
   15048:	add	r0, sp, #108	; 0x6c
   1504c:	mov	r7, r3
   15050:	mov	r9, r2
   15054:	mov	r4, r1
   15058:	bl	2f144 <flatcc_builder_init@@Base>
   1505c:	add	r0, sp, #16
   15060:	mov	r1, #0
   15064:	bl	46bc4 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15068:	ldr	r0, [fp, #12]
   1506c:	ldr	r5, [fp, #8]
   15070:	ldr	r8, [fp, #16]
   15074:	and	r1, r0, #1
   15078:	tst	r0, #16
   1507c:	strb	r1, [sp, #42]	; 0x2a
   15080:	uxtb	r1, r0
   15084:	ubfx	r2, r1, #1, #1
   15088:	strb	r2, [sp, #43]	; 0x2b
   1508c:	ubfx	r2, r1, #2, #1
   15090:	strb	r2, [sp, #44]	; 0x2c
   15094:	ubfx	r1, r1, #3, #1
   15098:	strb	r1, [sp, #45]	; 0x2d
   1509c:	movne	r1, #2
   150a0:	strbne	r1, [sp, #41]	; 0x29
   150a4:	tst	r0, #32
   150a8:	movne	r0, #0
   150ac:	strbne	r0, [sp, #43]	; 0x2b
   150b0:	movwne	r0, #258	; 0x102
   150b4:	strhne	r0, [sp, #41]	; 0x29
   150b8:	mov	r0, r4
   150bc:	bl	14ec4 <strlen@plt>
   150c0:	mov	r3, r0
   150c4:	ldm	r6, {r0, r1}
   150c8:	str	r5, [sp]
   150cc:	mov	r2, r4
   150d0:	stmib	sp, {r0, r1}
   150d4:	add	r0, sp, #108	; 0x6c
   150d8:	add	r1, sp, #64	; 0x40
   150dc:	bl	3a050 <flatcc_json_parser_table_as_root@@Base>
   150e0:	cmp	r0, r7
   150e4:	bne	15194 <test_json@@Base+0x15c>
   150e8:	mov	r5, #0
   150ec:	cmp	r7, #0
   150f0:	beq	150fc <test_json@@Base+0xc4>
   150f4:	mov	r4, #0
   150f8:	b	15170 <test_json@@Base+0x138>
   150fc:	add	r0, sp, #108	; 0x6c
   15100:	sub	r1, fp, #56	; 0x38
   15104:	bl	33be0 <flatcc_builder_finalize_aligned_buffer@@Base>
   15108:	ldr	r2, [r6]
   1510c:	ldr	r3, [r6, #12]
   15110:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15114:	mov	r4, r0
   15118:	bl	34f20 <flatcc_verify_table_as_root@@Base>
   1511c:	cmp	r0, #0
   15120:	bne	1524c <test_json@@Base+0x214>
   15124:	ldr	r0, [r6, #8]
   15128:	ldr	r3, [r6]
   1512c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15130:	add	r6, sp, #16
   15134:	mov	r1, r4
   15138:	str	r0, [sp]
   1513c:	mov	r0, r6
   15140:	bl	4622c <flatcc_json_printer_table_as_root@@Base>
   15144:	sub	r1, fp, #60	; 0x3c
   15148:	mov	r0, r6
   1514c:	bl	46cec <flatcc_json_printer_get_buffer@@Base>
   15150:	mov	r6, r0
   15154:	cmp	r0, #0
   15158:	beq	151c8 <test_json@@Base+0x190>
   1515c:	mov	r0, r9
   15160:	mov	r1, r6
   15164:	bl	14e34 <strcmp@plt>
   15168:	cmp	r0, #0
   1516c:	bne	151c8 <test_json@@Base+0x190>
   15170:	mov	r0, r4
   15174:	bl	33d20 <flatcc_builder_aligned_free@@Base>
   15178:	add	r0, sp, #108	; 0x6c
   1517c:	bl	2f4ac <flatcc_builder_clear@@Base>
   15180:	add	r0, sp, #16
   15184:	bl	46d74 <flatcc_json_printer_clear@@Base>
   15188:	mov	r0, r5
   1518c:	sub	sp, fp, #28
   15190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15194:	ldr	r6, [pc, #692]	; 15450 <test_json@@Base+0x418>
   15198:	cmp	r7, #0
   1519c:	ldr	r6, [pc, r6]
   151a0:	beq	15228 <test_json@@Base+0x1f0>
   151a4:	ldr	r5, [r6]
   151a8:	cmp	r0, #0
   151ac:	bne	153a4 <test_json@@Base+0x36c>
   151b0:	mov	r0, r7
   151b4:	bl	36050 <flatcc_json_parser_error_string@@Base>
   151b8:	ldr	r1, [pc, #668]	; 1545c <test_json@@Base+0x424>
   151bc:	mov	r3, r0
   151c0:	add	r1, pc, r1
   151c4:	b	1523c <test_json@@Base+0x204>
   151c8:	ldr	r7, [pc, #684]	; 1547c <test_json@@Base+0x444>
   151cc:	mov	r2, r8
   151d0:	ldr	r7, [pc, r7]
   151d4:	ldr	r0, [r7]
   151d8:	ldr	r1, [pc, #672]	; 15480 <test_json@@Base+0x448>
   151dc:	add	r1, pc, r1
   151e0:	bl	14ed0 <fprintf@plt>
   151e4:	ldr	r0, [r7]
   151e8:	ldr	r5, [pc, #660]	; 15484 <test_json@@Base+0x44c>
   151ec:	mov	r2, r6
   151f0:	add	r5, pc, r5
   151f4:	mov	r1, r5
   151f8:	bl	14ed0 <fprintf@plt>
   151fc:	ldr	r3, [r7]
   15200:	ldr	r0, [pc, #640]	; 15488 <test_json@@Base+0x450>
   15204:	mov	r1, #10
   15208:	mov	r2, #1
   1520c:	add	r0, pc, r0
   15210:	bl	14e94 <fwrite@plt>
   15214:	ldr	r0, [r7]
   15218:	mov	r1, r5
   1521c:	mov	r2, r9
   15220:	bl	14ed0 <fprintf@plt>
   15224:	b	1527c <test_json@@Base+0x244>
   15228:	ldr	r5, [r6]
   1522c:	bl	36050 <flatcc_json_parser_error_string@@Base>
   15230:	ldr	r1, [pc, #552]	; 15460 <test_json@@Base+0x428>
   15234:	mov	r3, r0
   15238:	add	r1, pc, r1
   1523c:	mov	r0, r5
   15240:	mov	r2, r8
   15244:	bl	14ed0 <fprintf@plt>
   15248:	b	153e0 <test_json@@Base+0x3a8>
   1524c:	ldr	r1, [pc, #540]	; 15470 <test_json@@Base+0x438>
   15250:	ldr	r1, [pc, r1]
   15254:	ldr	r5, [r1]
   15258:	bl	342b4 <flatcc_verify_error_string@@Base>
   1525c:	str	r0, [sp]
   15260:	mov	r0, r5
   15264:	mov	r3, r8
   15268:	ldr	r1, [pc, #516]	; 15474 <test_json@@Base+0x43c>
   1526c:	ldr	r2, [pc, #516]	; 15478 <test_json@@Base+0x440>
   15270:	add	r1, pc, r1
   15274:	add	r2, pc, r2
   15278:	bl	14ed0 <fprintf@plt>
   1527c:	mvn	r5, #0
   15280:	cmp	r4, #0
   15284:	beq	150f4 <test_json@@Base+0xbc>
   15288:	ldr	r0, [pc, #508]	; 1548c <test_json@@Base+0x454>
   1528c:	ldr	r0, [pc, r0]
   15290:	ldr	r9, [fp, #-56]	; 0xffffffc8
   15294:	ldr	r6, [r0]
   15298:	ldr	r1, [pc, #496]	; 15490 <test_json@@Base+0x458>
   1529c:	ldr	r2, [pc, #496]	; 15494 <test_json@@Base+0x45c>
   152a0:	add	r1, pc, r1
   152a4:	add	r2, pc, r2
   152a8:	mov	r0, r6
   152ac:	bl	14ed0 <fprintf@plt>
   152b0:	cmp	r9, #0
   152b4:	beq	1538c <test_json@@Base+0x354>
   152b8:	sub	r7, fp, #49	; 0x31
   152bc:	mov	r8, #0
   152c0:	ands	sl, r8, #15
   152c4:	bne	152fc <test_json@@Base+0x2c4>
   152c8:	cmp	r8, #0
   152cc:	beq	152e4 <test_json@@Base+0x2ac>
   152d0:	ldr	r1, [pc, #448]	; 15498 <test_json@@Base+0x460>
   152d4:	mov	r0, r6
   152d8:	mov	r2, r7
   152dc:	add	r1, pc, r1
   152e0:	bl	14ed0 <fprintf@plt>
   152e4:	ldr	r1, [pc, #432]	; 1549c <test_json@@Base+0x464>
   152e8:	mov	r0, r6
   152ec:	mov	r2, r8
   152f0:	add	r1, pc, r1
   152f4:	bl	14ed0 <fprintf@plt>
   152f8:	b	15310 <test_json@@Base+0x2d8>
   152fc:	tst	r8, #7
   15300:	bne	15310 <test_json@@Base+0x2d8>
   15304:	mov	r0, #32
   15308:	mov	r1, r6
   1530c:	bl	14f18 <fputc@plt>
   15310:	ldrb	r2, [r4, r8]
   15314:	ldr	r1, [pc, #396]	; 154a8 <test_json@@Base+0x470>
   15318:	mov	r0, r6
   1531c:	add	r1, pc, r1
   15320:	bl	14ed0 <fprintf@plt>
   15324:	ldrb	r0, [r4, r8]
   15328:	add	r8, r8, #1
   1532c:	sub	r1, r0, #32
   15330:	uxtb	r1, r1
   15334:	cmp	r1, #94	; 0x5e
   15338:	mov	r1, #0
   1533c:	movwhi	r0, #46	; 0x2e
   15340:	cmp	r9, r8
   15344:	strb	r0, [r7, sl]
   15348:	add	r0, r7, sl
   1534c:	strb	r1, [r0, #1]
   15350:	bne	152c0 <test_json@@Base+0x288>
   15354:	tst	r9, #15
   15358:	beq	1538c <test_json@@Base+0x354>
   1535c:	ldr	r8, [pc, #316]	; 154a0 <test_json@@Base+0x468>
   15360:	add	r7, r9, #1
   15364:	add	r8, pc, r8
   15368:	mov	r0, r8
   1536c:	mov	r1, #3
   15370:	mov	r2, #1
   15374:	mov	r3, r6
   15378:	bl	14e94 <fwrite@plt>
   1537c:	add	r0, r7, #1
   15380:	tst	r7, #15
   15384:	mov	r7, r0
   15388:	bne	15368 <test_json@@Base+0x330>
   1538c:	ldr	r1, [pc, #272]	; 154a4 <test_json@@Base+0x46c>
   15390:	sub	r2, fp, #49	; 0x31
   15394:	mov	r0, r6
   15398:	add	r1, pc, r1
   1539c:	bl	14ed0 <fprintf@plt>
   153a0:	b	15170 <test_json@@Base+0x138>
   153a4:	bl	36050 <flatcc_json_parser_error_string@@Base>
   153a8:	ldr	r1, [pc, #164]	; 15454 <test_json@@Base+0x41c>
   153ac:	mov	r3, r0
   153b0:	mov	r0, r5
   153b4:	mov	r2, r8
   153b8:	add	r1, pc, r1
   153bc:	bl	14ed0 <fprintf@plt>
   153c0:	ldr	r5, [r6]
   153c4:	mov	r0, r7
   153c8:	bl	36050 <flatcc_json_parser_error_string@@Base>
   153cc:	ldr	r1, [pc, #132]	; 15458 <test_json@@Base+0x420>
   153d0:	mov	r2, r0
   153d4:	mov	r0, r5
   153d8:	add	r1, pc, r1
   153dc:	bl	14ed0 <fprintf@plt>
   153e0:	ldr	r0, [r6]
   153e4:	ldr	r1, [pc, #120]	; 15464 <test_json@@Base+0x42c>
   153e8:	mov	r2, r4
   153ec:	add	r1, pc, r1
   153f0:	bl	14ed0 <fprintf@plt>
   153f4:	ldr	r4, [pc, #108]	; 15468 <test_json@@Base+0x430>
   153f8:	ldr	r4, [pc, r4]
   153fc:	ldr	r0, [sp, #84]	; 0x54
   15400:	ldr	r3, [r4]
   15404:	cmp	r0, #2
   15408:	blt	15434 <test_json@@Base+0x3fc>
   1540c:	mov	r5, #0
   15410:	mov	r0, #32
   15414:	mov	r1, r3
   15418:	bl	14f18 <fputc@plt>
   1541c:	ldr	r0, [sp, #84]	; 0x54
   15420:	ldr	r3, [r4]
   15424:	add	r5, r5, #1
   15428:	sub	r0, r0, #1
   1542c:	cmp	r5, r0
   15430:	blt	15410 <test_json@@Base+0x3d8>
   15434:	ldr	r0, [pc, #48]	; 1546c <test_json@@Base+0x434>
   15438:	mov	r1, #2
   1543c:	mov	r2, #1
   15440:	add	r0, pc, r0
   15444:	bl	14e94 <fwrite@plt>
   15448:	mvn	r5, #0
   1544c:	b	150f4 <test_json@@Base+0xbc>
   15450:	andeq	r9, r4, ip, asr #29
   15454:	andeq	r2, r3, r4, asr #6
   15458:	andeq	r2, r3, fp, ror #6
   1545c:	andeq	r2, r3, r2, ror #10
   15460:	andeq	r2, r3, sl, lsr #10
   15464:	andeq	r5, r3, sl, lsl #22
   15468:	andeq	r9, r4, r0, ror ip
   1546c:	andeq	r2, r3, r3, asr #6
   15470:	andeq	r9, r4, r8, lsl lr
   15474:	andeq	r2, r3, r6, lsl r5
   15478:	andeq	r2, r3, r9, lsr r5
   1547c:	muleq	r4, r8, lr
   15480:	andeq	r2, r3, r3, lsr r6
   15484:	andeq	r5, r3, r6, lsl #26
   15488:	andeq	r2, r3, r8, lsr r6
   1548c:	ldrdeq	r9, [r4], -ip
   15490:	andeq	r5, r3, pc, asr #24
   15494:	andeq	r2, r3, fp, lsr #11
   15498:	andeq	r5, r3, r8, lsl ip
   1549c:	andeq	r5, r3, sl, lsl #24
   154a0:	andeq	r5, r3, r4, lsr #23
   154a4:	andeq	r5, r3, ip, asr fp
   154a8:	andeq	r5, r3, r6, ror #23

000154ac <edge_case_tests@@Base>:
   154ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154b0:	add	fp, sp, #28
   154b4:	sub	sp, sp, #60	; 0x3c
   154b8:	mov	sl, #0
   154bc:	mov	r0, #155	; 0x9b
   154c0:	mov	r3, #0
   154c4:	str	sl, [sp]
   154c8:	str	sl, [sp, #4]
   154cc:	str	r0, [sp, #8]
   154d0:	ldr	r4, [pc, #892]	; 15854 <edge_case_tests@@Base+0x3a8>
   154d4:	ldr	r1, [pc, #892]	; 15858 <edge_case_tests@@Base+0x3ac>
   154d8:	ldr	r2, [pc, #892]	; 1585c <edge_case_tests@@Base+0x3b0>
   154dc:	add	r4, pc, r4
   154e0:	add	r1, pc, r1
   154e4:	add	r2, pc, r2
   154e8:	mov	r0, r4
   154ec:	bl	15038 <test_json@@Base>
   154f0:	str	r0, [fp, #-32]	; 0xffffffe0
   154f4:	mov	r9, #2
   154f8:	mov	r0, #168	; 0xa8
   154fc:	mov	r3, #0
   15500:	stm	sp, {r9, sl}
   15504:	str	r0, [sp, #8]
   15508:	mov	r0, r4
   1550c:	ldr	r5, [pc, #844]	; 15860 <edge_case_tests@@Base+0x3b4>
   15510:	ldr	r8, [pc, #844]	; 15864 <edge_case_tests@@Base+0x3b8>
   15514:	add	r5, pc, r5
   15518:	add	r8, pc, r8
   1551c:	mov	r1, r5
   15520:	mov	r2, r8
   15524:	bl	15038 <test_json@@Base>
   15528:	str	r0, [fp, #-36]	; 0xffffffdc
   1552c:	mov	r0, #172	; 0xac
   15530:	str	sl, [sp]
   15534:	str	r9, [sp, #4]
   15538:	mov	r3, #0
   1553c:	str	r0, [sp, #8]
   15540:	mov	r0, r4
   15544:	ldr	r1, [pc, #796]	; 15868 <edge_case_tests@@Base+0x3bc>
   15548:	ldr	r2, [pc, #796]	; 1586c <edge_case_tests@@Base+0x3c0>
   1554c:	add	r1, pc, r1
   15550:	add	r2, pc, r2
   15554:	bl	15038 <test_json@@Base>
   15558:	str	r0, [fp, #-40]	; 0xffffffd8
   1555c:	mov	r0, #176	; 0xb0
   15560:	mov	r1, #4
   15564:	str	r9, [sp]
   15568:	mov	r3, #0
   1556c:	str	r1, [sp, #4]
   15570:	str	r0, [sp, #8]
   15574:	mov	r0, r4
   15578:	mov	r1, r5
   1557c:	ldr	r2, [pc, #748]	; 15870 <edge_case_tests@@Base+0x3c4>
   15580:	add	r2, pc, r2
   15584:	bl	15038 <test_json@@Base>
   15588:	str	r0, [sp, #44]	; 0x2c
   1558c:	mov	r0, #180	; 0xb4
   15590:	mov	r1, #8
   15594:	str	sl, [sp]
   15598:	mov	r3, #0
   1559c:	str	r0, [sp, #8]
   155a0:	str	r1, [sp, #4]
   155a4:	mov	r0, r4
   155a8:	ldr	r1, [pc, #708]	; 15874 <edge_case_tests@@Base+0x3c8>
   155ac:	ldr	r2, [pc, #708]	; 15878 <edge_case_tests@@Base+0x3cc>
   155b0:	add	r1, pc, r1
   155b4:	add	r2, pc, r2
   155b8:	bl	15038 <test_json@@Base>
   155bc:	str	r0, [sp, #40]	; 0x28
   155c0:	mov	r0, #195	; 0xc3
   155c4:	stm	sp, {r9, sl}
   155c8:	mov	r2, r8
   155cc:	mov	r3, #0
   155d0:	str	r0, [sp, #8]
   155d4:	mov	r0, r4
   155d8:	ldr	r1, [pc, #668]	; 1587c <edge_case_tests@@Base+0x3d0>
   155dc:	add	r1, pc, r1
   155e0:	bl	15038 <test_json@@Base>
   155e4:	str	r0, [sp, #36]	; 0x24
   155e8:	mov	r6, #1
   155ec:	mov	r0, #199	; 0xc7
   155f0:	mov	r3, #0
   155f4:	stm	sp, {r6, sl}
   155f8:	str	r0, [sp, #8]
   155fc:	mov	r0, r4
   15600:	ldr	r5, [pc, #632]	; 15880 <edge_case_tests@@Base+0x3d4>
   15604:	ldr	r7, [pc, #632]	; 15884 <edge_case_tests@@Base+0x3d8>
   15608:	add	r5, pc, r5
   1560c:	add	r7, pc, r7
   15610:	mov	r1, r5
   15614:	mov	r2, r7
   15618:	bl	15038 <test_json@@Base>
   1561c:	str	r0, [sp, #32]
   15620:	mov	r0, #203	; 0xcb
   15624:	str	r6, [sp]
   15628:	str	r6, [sp, #4]
   1562c:	mov	r1, r5
   15630:	mov	r3, #0
   15634:	str	r0, [sp, #8]
   15638:	mov	r0, r4
   1563c:	ldr	r2, [pc, #580]	; 15888 <edge_case_tests@@Base+0x3dc>
   15640:	add	r2, pc, r2
   15644:	bl	15038 <test_json@@Base>
   15648:	str	r0, [sp, #28]
   1564c:	mov	r0, #209	; 0xd1
   15650:	stm	sp, {r6, sl}
   15654:	mov	r2, r7
   15658:	mov	r3, #0
   1565c:	str	r0, [sp, #8]
   15660:	mov	r0, r4
   15664:	ldr	r1, [pc, #544]	; 1588c <edge_case_tests@@Base+0x3e0>
   15668:	add	r1, pc, r1
   1566c:	bl	15038 <test_json@@Base>
   15670:	str	r0, [sp, #24]
   15674:	mov	r0, #217	; 0xd9
   15678:	stm	sp, {r9, sl}
   1567c:	mov	r2, r8
   15680:	mov	r3, #0
   15684:	str	r0, [sp, #8]
   15688:	mov	r0, r4
   1568c:	ldr	r5, [pc, #508]	; 15890 <edge_case_tests@@Base+0x3e4>
   15690:	add	r5, pc, r5
   15694:	mov	r1, r5
   15698:	bl	15038 <test_json@@Base>
   1569c:	str	r0, [sp, #20]
   156a0:	mov	r0, #221	; 0xdd
   156a4:	str	sl, [sp]
   156a8:	str	r9, [sp, #4]
   156ac:	mov	r3, #0
   156b0:	str	r0, [sp, #8]
   156b4:	mov	r0, r4
   156b8:	ldr	r1, [pc, #468]	; 15894 <edge_case_tests@@Base+0x3e8>
   156bc:	ldr	r2, [pc, #468]	; 15898 <edge_case_tests@@Base+0x3ec>
   156c0:	add	r1, pc, r1
   156c4:	add	r2, pc, r2
   156c8:	bl	15038 <test_json@@Base>
   156cc:	str	r0, [sp, #16]
   156d0:	mov	r0, #225	; 0xe1
   156d4:	mov	r1, #4
   156d8:	str	r9, [sp]
   156dc:	mov	r3, #0
   156e0:	str	r1, [sp, #4]
   156e4:	str	r0, [sp, #8]
   156e8:	mov	r0, r4
   156ec:	mov	r1, r5
   156f0:	ldr	r2, [pc, #420]	; 1589c <edge_case_tests@@Base+0x3f0>
   156f4:	add	r2, pc, r2
   156f8:	bl	15038 <test_json@@Base>
   156fc:	str	r0, [sp, #12]
   15700:	mov	r0, #229	; 0xe5
   15704:	mov	r1, #8
   15708:	str	sl, [sp]
   1570c:	mov	r3, #0
   15710:	str	r0, [sp, #8]
   15714:	str	r1, [sp, #4]
   15718:	mov	r0, r4
   1571c:	ldr	r1, [pc, #380]	; 158a0 <edge_case_tests@@Base+0x3f4>
   15720:	ldr	r2, [pc, #380]	; 158a4 <edge_case_tests@@Base+0x3f8>
   15724:	add	r1, pc, r1
   15728:	add	r2, pc, r2
   1572c:	bl	15038 <test_json@@Base>
   15730:	mov	r5, r0
   15734:	mov	r0, #233	; 0xe9
   15738:	stm	sp, {r9, sl}
   1573c:	mov	r2, r8
   15740:	mov	r3, #0
   15744:	str	r0, [sp, #8]
   15748:	mov	r0, r4
   1574c:	ldr	r1, [pc, #340]	; 158a8 <edge_case_tests@@Base+0x3fc>
   15750:	add	r1, pc, r1
   15754:	bl	15038 <test_json@@Base>
   15758:	mov	r8, r0
   1575c:	mov	r0, #237	; 0xed
   15760:	stm	sp, {r6, sl}
   15764:	mov	r3, #0
   15768:	str	r0, [sp, #8]
   1576c:	mov	r0, r4
   15770:	ldr	r9, [pc, #308]	; 158ac <edge_case_tests@@Base+0x400>
   15774:	ldr	r2, [pc, #308]	; 158b0 <edge_case_tests@@Base+0x404>
   15778:	add	r9, pc, r9
   1577c:	add	r2, pc, r2
   15780:	mov	r1, r9
   15784:	bl	15038 <test_json@@Base>
   15788:	mov	r7, r0
   1578c:	mov	r0, #241	; 0xf1
   15790:	str	r6, [sp]
   15794:	str	r6, [sp, #4]
   15798:	mov	r1, r9
   1579c:	mov	r3, #0
   157a0:	str	r0, [sp, #8]
   157a4:	mov	r0, r4
   157a8:	ldr	r2, [pc, #260]	; 158b4 <edge_case_tests@@Base+0x408>
   157ac:	add	r2, pc, r2
   157b0:	bl	15038 <test_json@@Base>
   157b4:	stm	sp, {r6, sl}
   157b8:	mov	r1, #247	; 0xf7
   157bc:	mov	r3, #0
   157c0:	str	r1, [sp, #8]
   157c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   157c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   157cc:	orr	r1, r2, r1
   157d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   157d4:	orr	r1, r1, r2
   157d8:	ldr	r2, [sp, #44]	; 0x2c
   157dc:	orr	r1, r1, r2
   157e0:	ldr	r2, [sp, #40]	; 0x28
   157e4:	orr	r1, r1, r2
   157e8:	ldr	r2, [sp, #36]	; 0x24
   157ec:	orr	r1, r1, r2
   157f0:	ldr	r2, [sp, #32]
   157f4:	orr	r1, r1, r2
   157f8:	ldr	r2, [sp, #28]
   157fc:	orr	r1, r1, r2
   15800:	ldr	r2, [sp, #24]
   15804:	orr	r1, r1, r2
   15808:	ldr	r2, [sp, #20]
   1580c:	orr	r1, r1, r2
   15810:	ldr	r2, [sp, #16]
   15814:	orr	r1, r1, r2
   15818:	ldr	r2, [sp, #12]
   1581c:	orr	r1, r1, r2
   15820:	orr	r1, r1, r5
   15824:	orr	r1, r1, r8
   15828:	orr	r1, r1, r7
   1582c:	orr	r5, r1, r0
   15830:	ldr	r1, [pc, #128]	; 158b8 <edge_case_tests@@Base+0x40c>
   15834:	ldr	r2, [pc, #128]	; 158bc <edge_case_tests@@Base+0x410>
   15838:	mov	r0, r4
   1583c:	add	r1, pc, r1
   15840:	add	r2, pc, r2
   15844:	bl	15038 <test_json@@Base>
   15848:	orr	r0, r5, r0
   1584c:	sub	sp, fp, #28
   15850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15854:	andeq	r9, r4, ip, lsr #17
   15858:	andeq	r2, r3, sp, ror r3
   1585c:	andeq	r2, r3, sl, lsr #7
   15860:	muleq	r3, r8, r3
   15864:			; <UNDEFINED> instruction: 0x000323b5
   15868:	andeq	r2, r3, r3, lsr #7
   1586c:	andeq	r2, r3, r6, asr #7
   15870:			; <UNDEFINED> instruction: 0x000323b3
   15874:	muleq	r3, r6, r3
   15878:			; <UNDEFINED> instruction: 0x000323b4
   1587c:	muleq	r3, lr, r4
   15880:	muleq	r3, r8, r4
   15884:	andeq	r2, r3, r6, asr #9
   15888:	andeq	r2, r3, sp, lsr #9
   1588c:	muleq	r3, ip, r4
   15890:	andeq	r2, r3, r5, ror #9
   15894:	ldrdeq	r2, [r3], -r2	; <UNPREDICTABLE>
   15898:	andeq	r2, r3, r2, asr r2
   1589c:	andeq	r2, r3, pc, lsr r2
   158a0:	andeq	r2, r3, pc, lsl #9
   158a4:	muleq	r3, lr, r4
   158a8:	andeq	r2, r3, sp, lsl #11
   158ac:	andeq	r2, r3, r5, lsl #11
   158b0:	andeq	r2, r3, r6, asr r3
   158b4:	andeq	r2, r3, r1, asr #6
   158b8:	andeq	r2, r3, fp, ror #9
   158bc:	muleq	r3, r2, r2

000158c0 <error_case_tests@@Base>:
   158c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158c4:	add	fp, sp, #28
   158c8:	sub	sp, sp, #60	; 0x3c
   158cc:	mov	r6, #0
   158d0:	movw	r0, #285	; 0x11d
   158d4:	mov	r2, #0
   158d8:	mov	r3, #13
   158dc:	str	r6, [sp]
   158e0:	str	r6, [sp, #4]
   158e4:	str	r0, [sp, #8]
   158e8:	ldr	r4, [pc, #880]	; 15c60 <error_case_tests@@Base+0x3a0>
   158ec:	ldr	r1, [pc, #880]	; 15c64 <error_case_tests@@Base+0x3a4>
   158f0:	add	r4, pc, r4
   158f4:	add	r1, pc, r1
   158f8:	mov	r0, r4
   158fc:	bl	15038 <test_json@@Base>
   15900:	str	r0, [fp, #-32]	; 0xffffffe0
   15904:	movw	r0, #287	; 0x11f
   15908:	str	r6, [sp]
   1590c:	str	r6, [sp, #4]
   15910:	mov	r2, #0
   15914:	mov	r3, #13
   15918:	str	r0, [sp, #8]
   1591c:	mov	r0, r4
   15920:	ldr	r1, [pc, #832]	; 15c68 <error_case_tests@@Base+0x3a8>
   15924:	add	r1, pc, r1
   15928:	bl	15038 <test_json@@Base>
   1592c:	str	r0, [fp, #-36]	; 0xffffffdc
   15930:	movw	r0, #289	; 0x121
   15934:	str	r6, [sp]
   15938:	str	r6, [sp, #4]
   1593c:	mov	r2, #0
   15940:	mov	r3, #13
   15944:	str	r0, [sp, #8]
   15948:	mov	r0, r4
   1594c:	ldr	r1, [pc, #792]	; 15c6c <error_case_tests@@Base+0x3ac>
   15950:	add	r1, pc, r1
   15954:	bl	15038 <test_json@@Base>
   15958:	str	r0, [fp, #-40]	; 0xffffffd8
   1595c:	movw	r0, #291	; 0x123
   15960:	str	r6, [sp]
   15964:	str	r6, [sp, #4]
   15968:	mov	r2, #0
   1596c:	mov	r3, #13
   15970:	str	r0, [sp, #8]
   15974:	mov	r0, r4
   15978:	ldr	r1, [pc, #752]	; 15c70 <error_case_tests@@Base+0x3b0>
   1597c:	add	r1, pc, r1
   15980:	bl	15038 <test_json@@Base>
   15984:	str	r0, [sp, #44]	; 0x2c
   15988:	movw	r0, #293	; 0x125
   1598c:	str	r6, [sp]
   15990:	str	r6, [sp, #4]
   15994:	mov	r2, #0
   15998:	mov	r3, #13
   1599c:	str	r0, [sp, #8]
   159a0:	mov	r0, r4
   159a4:	ldr	r1, [pc, #712]	; 15c74 <error_case_tests@@Base+0x3b4>
   159a8:	add	r1, pc, r1
   159ac:	bl	15038 <test_json@@Base>
   159b0:	str	r0, [sp, #40]	; 0x28
   159b4:	mov	r0, #296	; 0x128
   159b8:	str	r6, [sp]
   159bc:	str	r6, [sp, #4]
   159c0:	mov	r2, #0
   159c4:	mov	r3, #13
   159c8:	str	r0, [sp, #8]
   159cc:	mov	r0, r4
   159d0:	ldr	r1, [pc, #672]	; 15c78 <error_case_tests@@Base+0x3b8>
   159d4:	add	r1, pc, r1
   159d8:	bl	15038 <test_json@@Base>
   159dc:	str	r0, [sp, #36]	; 0x24
   159e0:	movw	r0, #299	; 0x12b
   159e4:	str	r6, [sp]
   159e8:	str	r6, [sp, #4]
   159ec:	mov	r2, #0
   159f0:	mov	r3, #13
   159f4:	str	r0, [sp, #8]
   159f8:	mov	r0, r4
   159fc:	ldr	r1, [pc, #632]	; 15c7c <error_case_tests@@Base+0x3bc>
   15a00:	add	r1, pc, r1
   15a04:	bl	15038 <test_json@@Base>
   15a08:	str	r0, [sp, #32]
   15a0c:	movw	r0, #303	; 0x12f
   15a10:	str	r6, [sp]
   15a14:	str	r6, [sp, #4]
   15a18:	mov	r2, #0
   15a1c:	mov	r3, #13
   15a20:	str	r0, [sp, #8]
   15a24:	mov	r0, r4
   15a28:	ldr	r1, [pc, #592]	; 15c80 <error_case_tests@@Base+0x3c0>
   15a2c:	add	r1, pc, r1
   15a30:	bl	15038 <test_json@@Base>
   15a34:	str	r0, [sp, #28]
   15a38:	movw	r0, #307	; 0x133
   15a3c:	str	r6, [sp]
   15a40:	str	r6, [sp, #4]
   15a44:	mov	r2, #0
   15a48:	mov	r3, #13
   15a4c:	str	r0, [sp, #8]
   15a50:	mov	r0, r4
   15a54:	ldr	r1, [pc, #552]	; 15c84 <error_case_tests@@Base+0x3c4>
   15a58:	add	r1, pc, r1
   15a5c:	bl	15038 <test_json@@Base>
   15a60:	str	r0, [sp, #24]
   15a64:	movw	r0, #322	; 0x142
   15a68:	str	r6, [sp]
   15a6c:	str	r6, [sp, #4]
   15a70:	mov	r2, #0
   15a74:	mov	r3, #13
   15a78:	str	r0, [sp, #8]
   15a7c:	mov	r0, r4
   15a80:	ldr	r1, [pc, #512]	; 15c88 <error_case_tests@@Base+0x3c8>
   15a84:	add	r1, pc, r1
   15a88:	bl	15038 <test_json@@Base>
   15a8c:	str	r0, [sp, #20]
   15a90:	mov	r0, #324	; 0x144
   15a94:	str	r6, [sp]
   15a98:	str	r6, [sp, #4]
   15a9c:	mov	r2, #0
   15aa0:	mov	r3, #13
   15aa4:	str	r0, [sp, #8]
   15aa8:	mov	r0, r4
   15aac:	ldr	r1, [pc, #472]	; 15c8c <error_case_tests@@Base+0x3cc>
   15ab0:	add	r1, pc, r1
   15ab4:	bl	15038 <test_json@@Base>
   15ab8:	str	r0, [sp, #16]
   15abc:	movw	r0, #326	; 0x146
   15ac0:	str	r6, [sp]
   15ac4:	str	r6, [sp, #4]
   15ac8:	mov	r2, #0
   15acc:	mov	r3, #13
   15ad0:	str	r0, [sp, #8]
   15ad4:	mov	r0, r4
   15ad8:	ldr	r1, [pc, #432]	; 15c90 <error_case_tests@@Base+0x3d0>
   15adc:	add	r1, pc, r1
   15ae0:	bl	15038 <test_json@@Base>
   15ae4:	mov	r7, r0
   15ae8:	mov	r0, #328	; 0x148
   15aec:	str	r6, [sp]
   15af0:	str	r6, [sp, #4]
   15af4:	mov	r2, #0
   15af8:	mov	r3, #13
   15afc:	str	r0, [sp, #8]
   15b00:	mov	r0, r4
   15b04:	ldr	r1, [pc, #392]	; 15c94 <error_case_tests@@Base+0x3d4>
   15b08:	add	r1, pc, r1
   15b0c:	bl	15038 <test_json@@Base>
   15b10:	mov	r8, r0
   15b14:	movw	r0, #330	; 0x14a
   15b18:	str	r6, [sp]
   15b1c:	str	r6, [sp, #4]
   15b20:	mov	r2, #0
   15b24:	mov	r3, #13
   15b28:	str	r0, [sp, #8]
   15b2c:	mov	r0, r4
   15b30:	ldr	r1, [pc, #352]	; 15c98 <error_case_tests@@Base+0x3d8>
   15b34:	add	r1, pc, r1
   15b38:	bl	15038 <test_json@@Base>
   15b3c:	mov	r9, r0
   15b40:	movw	r0, #333	; 0x14d
   15b44:	str	r6, [sp]
   15b48:	str	r6, [sp, #4]
   15b4c:	mov	r2, #0
   15b50:	mov	r3, #13
   15b54:	str	r0, [sp, #8]
   15b58:	mov	r0, r4
   15b5c:	ldr	r1, [pc, #312]	; 15c9c <error_case_tests@@Base+0x3dc>
   15b60:	add	r1, pc, r1
   15b64:	bl	15038 <test_json@@Base>
   15b68:	mov	sl, r0
   15b6c:	mov	r0, #336	; 0x150
   15b70:	str	r6, [sp]
   15b74:	str	r6, [sp, #4]
   15b78:	mov	r2, #0
   15b7c:	mov	r3, #13
   15b80:	str	r0, [sp, #8]
   15b84:	mov	r0, r4
   15b88:	ldr	r1, [pc, #272]	; 15ca0 <error_case_tests@@Base+0x3e0>
   15b8c:	add	r1, pc, r1
   15b90:	bl	15038 <test_json@@Base>
   15b94:	mov	r5, r0
   15b98:	mov	r0, #340	; 0x154
   15b9c:	str	r6, [sp]
   15ba0:	str	r6, [sp, #4]
   15ba4:	mov	r2, #0
   15ba8:	mov	r3, #13
   15bac:	str	r0, [sp, #8]
   15bb0:	mov	r0, r4
   15bb4:	ldr	r1, [pc, #232]	; 15ca4 <error_case_tests@@Base+0x3e4>
   15bb8:	add	r1, pc, r1
   15bbc:	bl	15038 <test_json@@Base>
   15bc0:	mov	r1, #344	; 0x158
   15bc4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15bc8:	str	r6, [sp]
   15bcc:	str	r6, [sp, #4]
   15bd0:	mov	r3, #13
   15bd4:	str	r1, [sp, #8]
   15bd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15bdc:	orr	r1, r2, r1
   15be0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15be4:	orr	r1, r1, r2
   15be8:	ldr	r2, [sp, #44]	; 0x2c
   15bec:	orr	r1, r1, r2
   15bf0:	ldr	r2, [sp, #40]	; 0x28
   15bf4:	orr	r1, r1, r2
   15bf8:	ldr	r2, [sp, #36]	; 0x24
   15bfc:	orr	r1, r1, r2
   15c00:	ldr	r2, [sp, #32]
   15c04:	orr	r1, r1, r2
   15c08:	ldr	r2, [sp, #28]
   15c0c:	orr	r1, r1, r2
   15c10:	ldr	r2, [sp, #24]
   15c14:	orr	r1, r1, r2
   15c18:	ldr	r2, [sp, #20]
   15c1c:	orr	r1, r1, r2
   15c20:	ldr	r2, [sp, #16]
   15c24:	orr	r1, r1, r2
   15c28:	mov	r2, #0
   15c2c:	orr	r1, r1, r7
   15c30:	orr	r1, r1, r8
   15c34:	orr	r1, r1, r9
   15c38:	orr	r1, r1, sl
   15c3c:	orr	r1, r1, r5
   15c40:	orr	r5, r1, r0
   15c44:	ldr	r1, [pc, #92]	; 15ca8 <error_case_tests@@Base+0x3e8>
   15c48:	mov	r0, r4
   15c4c:	add	r1, pc, r1
   15c50:	bl	15038 <test_json@@Base>
   15c54:	orr	r0, r5, r0
   15c58:	sub	sp, fp, #28
   15c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c60:	muleq	r4, r8, r4
   15c64:	muleq	r3, r2, r4
   15c68:	andeq	r2, r3, ip, ror r4
   15c6c:			; <UNDEFINED> instruction: 0x000324b1
   15c70:	andeq	r2, r3, r3, ror #9
   15c74:	andeq	r2, r3, pc, lsl #10
   15c78:	andeq	r2, r3, r8, lsr r5
   15c7c:	andeq	r2, r3, sl, lsr #11
   15c80:	andeq	r2, r3, r9, lsl r6
   15c84:			; <UNDEFINED> instruction: 0x000326b4
   15c88:	andeq	r2, r3, pc, asr #14
   15c8c:	andeq	r2, r3, fp, lsr r7
   15c90:	andeq	r2, r3, r4, ror #14
   15c94:	andeq	r2, r3, sl, lsl #15
   15c98:	andeq	r2, r3, lr, lsr #15
   15c9c:	andeq	r2, r3, pc, asr #15
   15ca0:	andeq	r2, r3, pc, lsr #16
   15ca4:	andeq	r2, r3, ip, lsl #17
   15ca8:	andeq	r2, r3, r7, lsr #17

00015cac <base64_tests@@Base>:
   15cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cb0:	add	fp, sp, #28
   15cb4:	sub	sp, sp, #28
   15cb8:	mov	r5, #0
   15cbc:	movw	r0, #369	; 0x171
   15cc0:	mov	r3, #0
   15cc4:	str	r5, [sp]
   15cc8:	str	r5, [sp, #4]
   15ccc:	str	r0, [sp, #8]
   15cd0:	ldr	r4, [pc, #504]	; 15ed0 <base64_tests@@Base+0x224>
   15cd4:	ldr	r1, [pc, #504]	; 15ed4 <base64_tests@@Base+0x228>
   15cd8:	ldr	r2, [pc, #504]	; 15ed8 <base64_tests@@Base+0x22c>
   15cdc:	add	r4, pc, r4
   15ce0:	add	r1, pc, r1
   15ce4:	add	r2, pc, r2
   15ce8:	mov	r0, r4
   15cec:	bl	15038 <test_json@@Base>
   15cf0:	str	r0, [sp, #24]
   15cf4:	mov	r0, #372	; 0x174
   15cf8:	str	r5, [sp]
   15cfc:	str	r5, [sp, #4]
   15d00:	mov	r3, #0
   15d04:	str	r0, [sp, #8]
   15d08:	mov	r0, r4
   15d0c:	ldr	r1, [pc, #456]	; 15edc <base64_tests@@Base+0x230>
   15d10:	ldr	r2, [pc, #456]	; 15ee0 <base64_tests@@Base+0x234>
   15d14:	add	r1, pc, r1
   15d18:	add	r2, pc, r2
   15d1c:	bl	15038 <test_json@@Base>
   15d20:	str	r0, [sp, #20]
   15d24:	mov	r0, #376	; 0x178
   15d28:	str	r5, [sp]
   15d2c:	str	r5, [sp, #4]
   15d30:	mov	r3, #0
   15d34:	str	r0, [sp, #8]
   15d38:	mov	r0, r4
   15d3c:	ldr	r1, [pc, #416]	; 15ee4 <base64_tests@@Base+0x238>
   15d40:	ldr	r6, [pc, #416]	; 15ee8 <base64_tests@@Base+0x23c>
   15d44:	add	r6, pc, r6
   15d48:	add	r1, pc, r1
   15d4c:	mov	r2, r6
   15d50:	bl	15038 <test_json@@Base>
   15d54:	str	r0, [sp, #16]
   15d58:	movw	r0, #379	; 0x17b
   15d5c:	str	r5, [sp]
   15d60:	str	r5, [sp, #4]
   15d64:	mov	r3, #0
   15d68:	str	r0, [sp, #8]
   15d6c:	mov	r0, r4
   15d70:	ldr	r1, [pc, #372]	; 15eec <base64_tests@@Base+0x240>
   15d74:	ldr	r7, [pc, #372]	; 15ef0 <base64_tests@@Base+0x244>
   15d78:	add	r7, pc, r7
   15d7c:	add	r1, pc, r1
   15d80:	mov	r2, r7
   15d84:	bl	15038 <test_json@@Base>
   15d88:	str	r0, [sp, #12]
   15d8c:	movw	r0, #382	; 0x17e
   15d90:	str	r5, [sp]
   15d94:	str	r5, [sp, #4]
   15d98:	mov	r2, r6
   15d9c:	mov	r3, #0
   15da0:	str	r0, [sp, #8]
   15da4:	mov	r0, r4
   15da8:	ldr	r1, [pc, #324]	; 15ef4 <base64_tests@@Base+0x248>
   15dac:	add	r1, pc, r1
   15db0:	bl	15038 <test_json@@Base>
   15db4:	mov	r6, r0
   15db8:	movw	r0, #385	; 0x181
   15dbc:	str	r5, [sp]
   15dc0:	str	r5, [sp, #4]
   15dc4:	mov	r2, r7
   15dc8:	mov	r3, #0
   15dcc:	str	r0, [sp, #8]
   15dd0:	mov	r0, r4
   15dd4:	ldr	r1, [pc, #284]	; 15ef8 <base64_tests@@Base+0x24c>
   15dd8:	add	r1, pc, r1
   15ddc:	bl	15038 <test_json@@Base>
   15de0:	mov	r7, r0
   15de4:	mov	r0, #388	; 0x184
   15de8:	str	r5, [sp]
   15dec:	str	r5, [sp, #4]
   15df0:	mov	r2, #0
   15df4:	mov	r3, #31
   15df8:	str	r0, [sp, #8]
   15dfc:	mov	r0, r4
   15e00:	ldr	r1, [pc, #244]	; 15efc <base64_tests@@Base+0x250>
   15e04:	add	r1, pc, r1
   15e08:	bl	15038 <test_json@@Base>
   15e0c:	mov	r8, r0
   15e10:	movw	r0, #391	; 0x187
   15e14:	str	r5, [sp]
   15e18:	str	r5, [sp, #4]
   15e1c:	mov	r2, #0
   15e20:	mov	r3, #32
   15e24:	str	r0, [sp, #8]
   15e28:	mov	r0, r4
   15e2c:	ldr	r1, [pc, #204]	; 15f00 <base64_tests@@Base+0x254>
   15e30:	add	r1, pc, r1
   15e34:	bl	15038 <test_json@@Base>
   15e38:	mov	r9, r0
   15e3c:	movw	r0, #406	; 0x196
   15e40:	str	r5, [sp]
   15e44:	str	r5, [sp, #4]
   15e48:	mov	r3, #0
   15e4c:	str	r0, [sp, #8]
   15e50:	mov	r0, r4
   15e54:	ldr	r1, [pc, #168]	; 15f04 <base64_tests@@Base+0x258>
   15e58:	ldr	sl, [pc, #168]	; 15f08 <base64_tests@@Base+0x25c>
   15e5c:	add	sl, pc, sl
   15e60:	add	r1, pc, r1
   15e64:	mov	r2, sl
   15e68:	bl	15038 <test_json@@Base>
   15e6c:	movw	r1, #419	; 0x1a3
   15e70:	ldr	r2, [sp, #20]
   15e74:	str	r5, [sp]
   15e78:	str	r5, [sp, #4]
   15e7c:	mov	r3, #0
   15e80:	str	r1, [sp, #8]
   15e84:	ldr	r1, [sp, #24]
   15e88:	orr	r1, r2, r1
   15e8c:	ldr	r2, [sp, #16]
   15e90:	orr	r1, r1, r2
   15e94:	ldr	r2, [sp, #12]
   15e98:	orr	r1, r1, r2
   15e9c:	mov	r2, sl
   15ea0:	orr	r1, r1, r6
   15ea4:	orr	r1, r1, r7
   15ea8:	orr	r1, r1, r8
   15eac:	orr	r1, r1, r9
   15eb0:	orr	r5, r1, r0
   15eb4:	ldr	r1, [pc, #80]	; 15f0c <base64_tests@@Base+0x260>
   15eb8:	mov	r0, r4
   15ebc:	add	r1, pc, r1
   15ec0:	bl	15038 <test_json@@Base>
   15ec4:	orr	r0, r5, r0
   15ec8:	sub	sp, fp, #28
   15ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ed0:	andeq	r9, r4, ip, lsr #1
   15ed4:	andeq	r2, r3, r2, asr #17
   15ed8:	andeq	r1, r3, pc, asr #24
   15edc:	andeq	r2, r3, r4, lsr #17
   15ee0:	andeq	r2, r3, r7, asr #17
   15ee4:			; <UNDEFINED> instruction: 0x000328ba
   15ee8:	andeq	r2, r3, r7, ror r9
   15eec:	strdeq	r2, [r3], -r3
   15ef0:			; <UNDEFINED> instruction: 0x00032ab3
   15ef4:	andeq	r2, r3, r6, lsr fp
   15ef8:	andeq	r2, r3, r1, asr #23
   15efc:	andeq	r2, r3, pc, asr #24
   15f00:	ldrdeq	r2, [r3], -ip
   15f04:	andeq	r2, r3, r8, ror #26
   15f08:	andeq	r2, r3, ip, lsr lr
   15f0c:			; <UNDEFINED> instruction: 0x00032eb1

00015f10 <mixed_type_union_tests@@Base>:
   15f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f14:	add	fp, sp, #28
   15f18:	sub	sp, sp, #20
   15f1c:	mov	r8, #0
   15f20:	mov	r0, #432	; 0x1b0
   15f24:	mov	r3, #0
   15f28:	str	r8, [sp]
   15f2c:	str	r8, [sp, #4]
   15f30:	str	r0, [sp, #8]
   15f34:	ldr	r4, [pc, #340]	; 16090 <mixed_type_union_tests@@Base+0x180>
   15f38:	ldr	r1, [pc, #340]	; 16094 <mixed_type_union_tests@@Base+0x184>
   15f3c:	ldr	r2, [pc, #340]	; 16098 <mixed_type_union_tests@@Base+0x188>
   15f40:	add	r4, pc, r4
   15f44:	add	r1, pc, r1
   15f48:	add	r2, pc, r2
   15f4c:	mov	r0, r4
   15f50:	bl	15038 <test_json@@Base>
   15f54:	str	r0, [sp, #16]
   15f58:	movw	r0, #437	; 0x1b5
   15f5c:	str	r8, [sp]
   15f60:	str	r8, [sp, #4]
   15f64:	mov	r3, #0
   15f68:	str	r0, [sp, #8]
   15f6c:	mov	r0, r4
   15f70:	ldr	r1, [pc, #292]	; 1609c <mixed_type_union_tests@@Base+0x18c>
   15f74:	ldr	r9, [pc, #292]	; 160a0 <mixed_type_union_tests@@Base+0x190>
   15f78:	add	r9, pc, r9
   15f7c:	add	r1, pc, r1
   15f80:	mov	r2, r9
   15f84:	bl	15038 <test_json@@Base>
   15f88:	mov	sl, r0
   15f8c:	movw	r0, #442	; 0x1ba
   15f90:	str	r8, [sp]
   15f94:	str	r8, [sp, #4]
   15f98:	mov	r2, r9
   15f9c:	mov	r3, #0
   15fa0:	str	r0, [sp, #8]
   15fa4:	mov	r0, r4
   15fa8:	ldr	r1, [pc, #244]	; 160a4 <mixed_type_union_tests@@Base+0x194>
   15fac:	add	r1, pc, r1
   15fb0:	bl	15038 <test_json@@Base>
   15fb4:	mov	r5, r0
   15fb8:	movw	r0, #449	; 0x1c1
   15fbc:	str	r8, [sp]
   15fc0:	str	r8, [sp, #4]
   15fc4:	mov	r3, #0
   15fc8:	str	r0, [sp, #8]
   15fcc:	mov	r0, r4
   15fd0:	ldr	r1, [pc, #208]	; 160a8 <mixed_type_union_tests@@Base+0x198>
   15fd4:	ldr	r2, [pc, #208]	; 160ac <mixed_type_union_tests@@Base+0x19c>
   15fd8:	add	r1, pc, r1
   15fdc:	add	r2, pc, r2
   15fe0:	bl	15038 <test_json@@Base>
   15fe4:	mov	r6, r0
   15fe8:	movw	r0, #458	; 0x1ca
   15fec:	str	r8, [sp]
   15ff0:	str	r8, [sp, #4]
   15ff4:	mov	r3, #0
   15ff8:	str	r0, [sp, #8]
   15ffc:	mov	r0, r4
   16000:	ldr	r1, [pc, #168]	; 160b0 <mixed_type_union_tests@@Base+0x1a0>
   16004:	ldr	r2, [pc, #168]	; 160b4 <mixed_type_union_tests@@Base+0x1a4>
   16008:	add	r1, pc, r1
   1600c:	add	r2, pc, r2
   16010:	bl	15038 <test_json@@Base>
   16014:	mov	r7, r0
   16018:	movw	r0, #469	; 0x1d5
   1601c:	str	r8, [sp]
   16020:	str	r8, [sp, #4]
   16024:	mov	r3, #0
   16028:	str	r0, [sp, #8]
   1602c:	mov	r0, r4
   16030:	ldr	r1, [pc, #128]	; 160b8 <mixed_type_union_tests@@Base+0x1a8>
   16034:	ldr	r2, [pc, #128]	; 160bc <mixed_type_union_tests@@Base+0x1ac>
   16038:	add	r1, pc, r1
   1603c:	add	r2, pc, r2
   16040:	bl	15038 <test_json@@Base>
   16044:	movw	r1, #474	; 0x1da
   16048:	str	r8, [sp]
   1604c:	str	r8, [sp, #4]
   16050:	mov	r2, r9
   16054:	mov	r3, #0
   16058:	str	r1, [sp, #8]
   1605c:	ldr	r1, [sp, #16]
   16060:	orr	r1, sl, r1
   16064:	orr	r1, r1, r5
   16068:	orr	r1, r1, r6
   1606c:	orr	r1, r1, r7
   16070:	orr	r5, r1, r0
   16074:	ldr	r1, [pc, #68]	; 160c0 <mixed_type_union_tests@@Base+0x1b0>
   16078:	mov	r0, r4
   1607c:	add	r1, pc, r1
   16080:	bl	15038 <test_json@@Base>
   16084:	orr	r0, r5, r0
   16088:	sub	sp, fp, #28
   1608c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16090:	andeq	r8, r4, r8, asr lr
   16094:	strdeq	r2, [r3], -r5
   16098:	andeq	r2, r3, r0, asr #30
   1609c:	andeq	r2, r3, r3, asr pc
   160a0:	ldrdeq	r2, [r3], -sl
   160a4:	andeq	r3, r3, sp, lsl r0
   160a8:	andeq	r3, r3, r7, lsl #1
   160ac:	andeq	r3, r3, r0, ror #2
   160b0:	andeq	r3, r3, sp, ror #3
   160b4:	andeq	r3, r3, pc, ror #5
   160b8:	andeq	r3, r3, r1, lsr #7
   160bc:	andeq	r3, r3, lr, lsl r5
   160c0:	andeq	r3, r3, r4, lsr #12

000160c4 <union_vector_tests@@Base>:
   160c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160c8:	add	fp, sp, #28
   160cc:	sub	sp, sp, #12
   160d0:	mov	r7, #0
   160d4:	movw	r0, #485	; 0x1e5
   160d8:	mov	r3, #0
   160dc:	str	r7, [sp]
   160e0:	str	r7, [sp, #4]
   160e4:	str	r0, [sp, #8]
   160e8:	ldr	r4, [pc, #288]	; 16210 <union_vector_tests@@Base+0x14c>
   160ec:	ldr	r1, [pc, #288]	; 16214 <union_vector_tests@@Base+0x150>
   160f0:	ldr	r8, [pc, #288]	; 16218 <union_vector_tests@@Base+0x154>
   160f4:	add	r4, pc, r4
   160f8:	add	r8, pc, r8
   160fc:	add	r1, pc, r1
   16100:	mov	r0, r4
   16104:	mov	r2, r8
   16108:	bl	15038 <test_json@@Base>
   1610c:	mov	r9, r0
   16110:	mov	r0, #488	; 0x1e8
   16114:	str	r7, [sp]
   16118:	str	r7, [sp, #4]
   1611c:	mov	r3, #0
   16120:	str	r0, [sp, #8]
   16124:	mov	r0, r4
   16128:	ldr	r1, [pc, #236]	; 1621c <union_vector_tests@@Base+0x158>
   1612c:	ldr	r2, [pc, #236]	; 16220 <union_vector_tests@@Base+0x15c>
   16130:	add	r1, pc, r1
   16134:	add	r2, pc, r2
   16138:	bl	15038 <test_json@@Base>
   1613c:	mov	sl, r0
   16140:	movw	r0, #491	; 0x1eb
   16144:	str	r7, [sp]
   16148:	str	r7, [sp, #4]
   1614c:	mov	r3, #0
   16150:	str	r0, [sp, #8]
   16154:	mov	r0, r4
   16158:	ldr	r1, [pc, #196]	; 16224 <union_vector_tests@@Base+0x160>
   1615c:	ldr	r2, [pc, #196]	; 16228 <union_vector_tests@@Base+0x164>
   16160:	add	r1, pc, r1
   16164:	add	r2, pc, r2
   16168:	bl	15038 <test_json@@Base>
   1616c:	mov	r6, r0
   16170:	movw	r0, #494	; 0x1ee
   16174:	str	r7, [sp]
   16178:	str	r7, [sp, #4]
   1617c:	mov	r3, #0
   16180:	str	r0, [sp, #8]
   16184:	mov	r0, r4
   16188:	ldr	r1, [pc, #156]	; 1622c <union_vector_tests@@Base+0x168>
   1618c:	ldr	r2, [pc, #156]	; 16230 <union_vector_tests@@Base+0x16c>
   16190:	add	r1, pc, r1
   16194:	add	r2, pc, r2
   16198:	bl	15038 <test_json@@Base>
   1619c:	mov	r5, r0
   161a0:	movw	r0, #497	; 0x1f1
   161a4:	str	r7, [sp]
   161a8:	str	r7, [sp, #4]
   161ac:	mov	r2, r8
   161b0:	mov	r3, #0
   161b4:	str	r0, [sp, #8]
   161b8:	mov	r0, r4
   161bc:	ldr	r1, [pc, #112]	; 16234 <union_vector_tests@@Base+0x170>
   161c0:	add	r1, pc, r1
   161c4:	bl	15038 <test_json@@Base>
   161c8:	mov	r1, #500	; 0x1f4
   161cc:	str	r7, [sp]
   161d0:	str	r7, [sp, #4]
   161d4:	mov	r3, #0
   161d8:	str	r1, [sp, #8]
   161dc:	orr	r1, sl, r9
   161e0:	orr	r1, r1, r6
   161e4:	orr	r1, r1, r5
   161e8:	orr	r5, r1, r0
   161ec:	ldr	r1, [pc, #68]	; 16238 <union_vector_tests@@Base+0x174>
   161f0:	ldr	r2, [pc, #68]	; 1623c <union_vector_tests@@Base+0x178>
   161f4:	mov	r0, r4
   161f8:	add	r1, pc, r1
   161fc:	add	r2, pc, r2
   16200:	bl	15038 <test_json@@Base>
   16204:	orr	r0, r5, r0
   16208:	sub	sp, fp, #28
   1620c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16210:			; <UNDEFINED> instruction: 0x00048cb4
   16214:	andeq	r3, r3, r1, lsr r6
   16218:	andeq	r3, r3, r5, ror r6
   1621c:	andeq	r3, r3, r5, ror r6
   16220:	andeq	r3, r3, r4, lsr #13
   16224:	andeq	r3, r3, r3, lsr #13
   16228:	andeq	r3, r3, ip, ror #13
   1622c:	andeq	r3, r3, r4, lsl #14
   16230:	andeq	r3, r3, sp, ror r7
   16234:			; <UNDEFINED> instruction: 0x000337bd
   16238:	andeq	r3, r3, r4, asr #15
   1623c:	andeq	r3, r3, r6, lsr #16

00016240 <main@@Base>:
   16240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16244:	add	fp, sp, #28
   16248:	sub	sp, sp, #284	; 0x11c
   1624c:	bl	154ac <edge_case_tests@@Base>
   16250:	str	r0, [fp, #-32]	; 0xffffffe0
   16254:	bl	158c0 <error_case_tests@@Base>
   16258:	str	r0, [fp, #-36]	; 0xffffffdc
   1625c:	bl	160c4 <union_vector_tests@@Base>
   16260:	str	r0, [fp, #-40]	; 0xffffffd8
   16264:	bl	15cac <base64_tests@@Base>
   16268:	str	r0, [fp, #-44]	; 0xffffffd4
   1626c:	bl	15f10 <mixed_type_union_tests@@Base>
   16270:	mov	r8, #0
   16274:	str	r0, [fp, #-48]	; 0xffffffd0
   16278:	movw	r0, #525	; 0x20d
   1627c:	mov	r3, #0
   16280:	str	r8, [sp]
   16284:	str	r8, [sp, #4]
   16288:	str	r0, [sp, #8]
   1628c:	ldr	r4, [pc, #3744]	; 17134 <main@@Base+0xef4>
   16290:	ldr	r1, [pc, #3744]	; 17138 <main@@Base+0xef8>
   16294:	ldr	sl, [pc, #3744]	; 1713c <main@@Base+0xefc>
   16298:	add	r4, pc, r4
   1629c:	add	sl, pc, sl
   162a0:	add	r1, pc, r1
   162a4:	mov	r0, r4
   162a8:	mov	r2, sl
   162ac:	bl	15038 <test_json@@Base>
   162b0:	str	r0, [fp, #-52]	; 0xffffffcc
   162b4:	mov	r0, #528	; 0x210
   162b8:	str	r8, [sp]
   162bc:	str	r8, [sp, #4]
   162c0:	mov	r3, #0
   162c4:	str	r0, [sp, #8]
   162c8:	mov	r0, r4
   162cc:	ldr	r1, [pc, #3692]	; 17140 <main@@Base+0xf00>
   162d0:	ldr	r7, [pc, #3692]	; 17144 <main@@Base+0xf04>
   162d4:	add	r7, pc, r7
   162d8:	add	r1, pc, r1
   162dc:	mov	r2, r7
   162e0:	bl	15038 <test_json@@Base>
   162e4:	str	r0, [fp, #-56]	; 0xffffffc8
   162e8:	movw	r0, #531	; 0x213
   162ec:	str	r8, [sp]
   162f0:	str	r8, [sp, #4]
   162f4:	mov	r3, #0
   162f8:	str	r0, [sp, #8]
   162fc:	mov	r0, r4
   16300:	ldr	r1, [pc, #3648]	; 17148 <main@@Base+0xf08>
   16304:	ldr	r6, [pc, #3648]	; 1714c <main@@Base+0xf0c>
   16308:	add	r6, pc, r6
   1630c:	add	r1, pc, r1
   16310:	mov	r2, r6
   16314:	bl	15038 <test_json@@Base>
   16318:	str	r0, [fp, #-60]	; 0xffffffc4
   1631c:	movw	r0, #534	; 0x216
   16320:	str	r8, [sp]
   16324:	str	r8, [sp, #4]
   16328:	mov	r3, #0
   1632c:	str	r0, [sp, #8]
   16330:	mov	r0, r4
   16334:	ldr	r1, [pc, #3604]	; 17150 <main@@Base+0xf10>
   16338:	ldr	r9, [pc, #3604]	; 17154 <main@@Base+0xf14>
   1633c:	add	r9, pc, r9
   16340:	add	r1, pc, r1
   16344:	mov	r2, r9
   16348:	bl	15038 <test_json@@Base>
   1634c:	str	r0, [fp, #-64]	; 0xffffffc0
   16350:	movw	r0, #537	; 0x219
   16354:	str	r8, [sp]
   16358:	str	r8, [sp, #4]
   1635c:	mov	r2, r9
   16360:	mov	r3, #0
   16364:	str	r0, [sp, #8]
   16368:	mov	r0, r4
   1636c:	ldr	r1, [pc, #3556]	; 17158 <main@@Base+0xf18>
   16370:	add	r1, pc, r1
   16374:	bl	15038 <test_json@@Base>
   16378:	str	r0, [fp, #-68]	; 0xffffffbc
   1637c:	mov	r0, #540	; 0x21c
   16380:	str	r8, [sp]
   16384:	str	r8, [sp, #4]
   16388:	mov	r2, r7
   1638c:	mov	r3, #0
   16390:	str	r0, [sp, #8]
   16394:	mov	r0, r4
   16398:	ldr	r1, [pc, #3516]	; 1715c <main@@Base+0xf1c>
   1639c:	add	r1, pc, r1
   163a0:	bl	15038 <test_json@@Base>
   163a4:	str	r0, [fp, #-72]	; 0xffffffb8
   163a8:	movw	r0, #543	; 0x21f
   163ac:	str	r8, [sp]
   163b0:	str	r8, [sp, #4]
   163b4:	mov	r2, r6
   163b8:	mov	r3, #0
   163bc:	str	r0, [sp, #8]
   163c0:	mov	r0, r4
   163c4:	ldr	r1, [pc, #3476]	; 17160 <main@@Base+0xf20>
   163c8:	add	r1, pc, r1
   163cc:	bl	15038 <test_json@@Base>
   163d0:	str	r0, [fp, #-76]	; 0xffffffb4
   163d4:	movw	r0, #547	; 0x223
   163d8:	str	r8, [sp]
   163dc:	str	r8, [sp, #4]
   163e0:	mov	r2, sl
   163e4:	mov	r3, #0
   163e8:	str	r0, [sp, #8]
   163ec:	mov	r0, r4
   163f0:	ldr	r1, [pc, #3436]	; 17164 <main@@Base+0xf24>
   163f4:	add	r1, pc, r1
   163f8:	bl	15038 <test_json@@Base>
   163fc:	str	r0, [fp, #-80]	; 0xffffffb0
   16400:	movw	r0, #551	; 0x227
   16404:	str	r8, [sp]
   16408:	str	r8, [sp, #4]
   1640c:	mov	r2, sl
   16410:	mov	r3, #0
   16414:	str	r0, [sp, #8]
   16418:	mov	r0, r4
   1641c:	ldr	r1, [pc, #3396]	; 17168 <main@@Base+0xf28>
   16420:	add	r1, pc, r1
   16424:	bl	15038 <test_json@@Base>
   16428:	str	r0, [fp, #-84]	; 0xffffffac
   1642c:	movw	r0, #555	; 0x22b
   16430:	str	r8, [sp]
   16434:	str	r8, [sp, #4]
   16438:	mov	r2, sl
   1643c:	mov	r3, #0
   16440:	str	r0, [sp, #8]
   16444:	mov	r0, r4
   16448:	ldr	r1, [pc, #3356]	; 1716c <main@@Base+0xf2c>
   1644c:	add	r1, pc, r1
   16450:	bl	15038 <test_json@@Base>
   16454:	str	r0, [fp, #-88]	; 0xffffffa8
   16458:	movw	r0, #558	; 0x22e
   1645c:	str	r8, [sp]
   16460:	str	r8, [sp, #4]
   16464:	mov	r2, r7
   16468:	mov	r3, #0
   1646c:	str	r0, [sp, #8]
   16470:	mov	r0, r4
   16474:	ldr	r1, [pc, #3316]	; 17170 <main@@Base+0xf30>
   16478:	add	r1, pc, r1
   1647c:	bl	15038 <test_json@@Base>
   16480:	str	r0, [fp, #-92]	; 0xffffffa4
   16484:	movw	r0, #561	; 0x231
   16488:	str	r8, [sp]
   1648c:	str	r8, [sp, #4]
   16490:	mov	r2, r6
   16494:	mov	r3, #0
   16498:	str	r0, [sp, #8]
   1649c:	mov	r0, r4
   164a0:	ldr	r1, [pc, #3276]	; 17174 <main@@Base+0xf34>
   164a4:	add	r1, pc, r1
   164a8:	bl	15038 <test_json@@Base>
   164ac:	str	r0, [fp, #-96]	; 0xffffffa0
   164b0:	mov	r0, #564	; 0x234
   164b4:	str	r8, [sp]
   164b8:	str	r8, [sp, #4]
   164bc:	mov	r2, r9
   164c0:	mov	r3, #0
   164c4:	str	r0, [sp, #8]
   164c8:	mov	r0, r4
   164cc:	ldr	r1, [pc, #3236]	; 17178 <main@@Base+0xf38>
   164d0:	add	r1, pc, r1
   164d4:	bl	15038 <test_json@@Base>
   164d8:	str	r0, [fp, #-100]	; 0xffffff9c
   164dc:	movw	r0, #567	; 0x237
   164e0:	str	r8, [sp]
   164e4:	str	r8, [sp, #4]
   164e8:	mov	r2, r9
   164ec:	mov	r3, #0
   164f0:	str	r0, [sp, #8]
   164f4:	mov	r0, r4
   164f8:	ldr	r1, [pc, #3196]	; 1717c <main@@Base+0xf3c>
   164fc:	add	r1, pc, r1
   16500:	bl	15038 <test_json@@Base>
   16504:	str	r0, [fp, #-104]	; 0xffffff98
   16508:	movw	r0, #570	; 0x23a
   1650c:	str	r8, [sp]
   16510:	str	r8, [sp, #4]
   16514:	mov	r2, r7
   16518:	mov	r3, #0
   1651c:	str	r0, [sp, #8]
   16520:	mov	r0, r4
   16524:	ldr	r1, [pc, #3156]	; 17180 <main@@Base+0xf40>
   16528:	add	r1, pc, r1
   1652c:	bl	15038 <test_json@@Base>
   16530:	str	r0, [fp, #-108]	; 0xffffff94
   16534:	movw	r0, #573	; 0x23d
   16538:	str	r8, [sp]
   1653c:	str	r8, [sp, #4]
   16540:	mov	r2, r6
   16544:	mov	r3, #0
   16548:	str	r0, [sp, #8]
   1654c:	mov	r0, r4
   16550:	ldr	r1, [pc, #3116]	; 17184 <main@@Base+0xf44>
   16554:	add	r1, pc, r1
   16558:	bl	15038 <test_json@@Base>
   1655c:	str	r0, [fp, #-112]	; 0xffffff90
   16560:	movw	r0, #577	; 0x241
   16564:	str	r8, [sp]
   16568:	str	r8, [sp, #4]
   1656c:	mov	r2, sl
   16570:	mov	r3, #0
   16574:	str	r0, [sp, #8]
   16578:	mov	r0, r4
   1657c:	ldr	r1, [pc, #3076]	; 17188 <main@@Base+0xf48>
   16580:	add	r1, pc, r1
   16584:	bl	15038 <test_json@@Base>
   16588:	str	r0, [fp, #-116]	; 0xffffff8c
   1658c:	movw	r0, #581	; 0x245
   16590:	str	r8, [sp]
   16594:	str	r8, [sp, #4]
   16598:	mov	r2, sl
   1659c:	mov	r3, #0
   165a0:	str	r0, [sp, #8]
   165a4:	mov	r0, r4
   165a8:	ldr	r1, [pc, #3036]	; 1718c <main@@Base+0xf4c>
   165ac:	add	r1, pc, r1
   165b0:	bl	15038 <test_json@@Base>
   165b4:	str	r0, [fp, #-120]	; 0xffffff88
   165b8:	movw	r0, #585	; 0x249
   165bc:	str	r8, [sp]
   165c0:	str	r8, [sp, #4]
   165c4:	mov	r3, #0
   165c8:	str	r0, [sp, #8]
   165cc:	mov	r0, r4
   165d0:	ldr	r1, [pc, #3000]	; 17190 <main@@Base+0xf50>
   165d4:	ldr	r5, [pc, #3000]	; 17194 <main@@Base+0xf54>
   165d8:	add	r5, pc, r5
   165dc:	add	r1, pc, r1
   165e0:	mov	r2, r5
   165e4:	bl	15038 <test_json@@Base>
   165e8:	str	r0, [fp, #-124]	; 0xffffff84
   165ec:	movw	r0, #591	; 0x24f
   165f0:	str	r8, [sp]
   165f4:	str	r8, [sp, #4]
   165f8:	mov	r2, r5
   165fc:	mov	r3, #0
   16600:	str	r0, [sp, #8]
   16604:	mov	r0, r4
   16608:	ldr	r1, [pc, #2952]	; 17198 <main@@Base+0xf58>
   1660c:	add	r1, pc, r1
   16610:	bl	15038 <test_json@@Base>
   16614:	str	r0, [fp, #-128]	; 0xffffff80
   16618:	movw	r0, #594	; 0x252
   1661c:	str	r8, [sp]
   16620:	str	r8, [sp, #4]
   16624:	mov	r2, r5
   16628:	mov	r3, #0
   1662c:	str	r0, [sp, #8]
   16630:	mov	r0, r4
   16634:	ldr	r1, [pc, #2912]	; 1719c <main@@Base+0xf5c>
   16638:	add	r1, pc, r1
   1663c:	bl	15038 <test_json@@Base>
   16640:	str	r0, [fp, #-132]	; 0xffffff7c
   16644:	movw	r0, #597	; 0x255
   16648:	str	r8, [sp]
   1664c:	str	r8, [sp, #4]
   16650:	mov	r2, r9
   16654:	mov	r3, #0
   16658:	str	r0, [sp, #8]
   1665c:	mov	r0, r4
   16660:	ldr	r1, [pc, #2872]	; 171a0 <main@@Base+0xf60>
   16664:	add	r1, pc, r1
   16668:	bl	15038 <test_json@@Base>
   1666c:	str	r0, [fp, #-136]	; 0xffffff78
   16670:	movw	r0, #601	; 0x259
   16674:	str	r8, [sp]
   16678:	str	r8, [sp, #4]
   1667c:	mov	r2, r7
   16680:	mov	r3, #0
   16684:	str	r0, [sp, #8]
   16688:	mov	r0, r4
   1668c:	ldr	r1, [pc, #2832]	; 171a4 <main@@Base+0xf64>
   16690:	add	r1, pc, r1
   16694:	bl	15038 <test_json@@Base>
   16698:	str	r0, [fp, #-140]	; 0xffffff74
   1669c:	mov	r0, #604	; 0x25c
   166a0:	str	r8, [sp]
   166a4:	str	r8, [sp, #4]
   166a8:	mov	r2, r6
   166ac:	mov	r3, #0
   166b0:	str	r0, [sp, #8]
   166b4:	mov	r0, r4
   166b8:	ldr	r1, [pc, #2792]	; 171a8 <main@@Base+0xf68>
   166bc:	add	r1, pc, r1
   166c0:	bl	15038 <test_json@@Base>
   166c4:	str	r0, [fp, #-144]	; 0xffffff70
   166c8:	movw	r0, #607	; 0x25f
   166cc:	str	r8, [sp]
   166d0:	str	r8, [sp, #4]
   166d4:	mov	r3, #0
   166d8:	str	r0, [sp, #8]
   166dc:	mov	r0, r4
   166e0:	ldr	r1, [pc, #2756]	; 171ac <main@@Base+0xf6c>
   166e4:	ldr	r2, [pc, #2756]	; 171b0 <main@@Base+0xf70>
   166e8:	add	r1, pc, r1
   166ec:	add	r2, pc, r2
   166f0:	bl	15038 <test_json@@Base>
   166f4:	str	r0, [fp, #-148]	; 0xffffff6c
   166f8:	movw	r0, #610	; 0x262
   166fc:	str	r8, [sp]
   16700:	str	r8, [sp, #4]
   16704:	mov	r2, r9
   16708:	mov	r3, #0
   1670c:	str	r0, [sp, #8]
   16710:	mov	r0, r4
   16714:	ldr	r1, [pc, #2712]	; 171b4 <main@@Base+0xf74>
   16718:	add	r1, pc, r1
   1671c:	bl	15038 <test_json@@Base>
   16720:	str	r0, [fp, #-152]	; 0xffffff68
   16724:	movw	r0, #613	; 0x265
   16728:	str	r8, [sp]
   1672c:	str	r8, [sp, #4]
   16730:	mov	r3, #0
   16734:	str	r0, [sp, #8]
   16738:	mov	r0, r4
   1673c:	ldr	r1, [pc, #2676]	; 171b8 <main@@Base+0xf78>
   16740:	ldr	r2, [pc, #2676]	; 171bc <main@@Base+0xf7c>
   16744:	add	r1, pc, r1
   16748:	add	r2, pc, r2
   1674c:	bl	15038 <test_json@@Base>
   16750:	str	r0, [sp, #156]	; 0x9c
   16754:	mov	r0, #616	; 0x268
   16758:	str	r8, [sp]
   1675c:	str	r8, [sp, #4]
   16760:	mov	r3, #0
   16764:	str	r0, [sp, #8]
   16768:	mov	r0, r4
   1676c:	ldr	r1, [pc, #2636]	; 171c0 <main@@Base+0xf80>
   16770:	ldr	r2, [pc, #2636]	; 171c4 <main@@Base+0xf84>
   16774:	add	r1, pc, r1
   16778:	add	r2, pc, r2
   1677c:	bl	15038 <test_json@@Base>
   16780:	str	r0, [sp, #152]	; 0x98
   16784:	movw	r0, #619	; 0x26b
   16788:	str	r8, [sp]
   1678c:	str	r8, [sp, #4]
   16790:	mov	r3, #0
   16794:	str	r0, [sp, #8]
   16798:	mov	r0, r4
   1679c:	ldr	r1, [pc, #2596]	; 171c8 <main@@Base+0xf88>
   167a0:	ldr	r2, [pc, #2596]	; 171cc <main@@Base+0xf8c>
   167a4:	add	r1, pc, r1
   167a8:	add	r2, pc, r2
   167ac:	bl	15038 <test_json@@Base>
   167b0:	str	r0, [sp, #148]	; 0x94
   167b4:	movw	r0, #622	; 0x26e
   167b8:	str	r8, [sp]
   167bc:	str	r8, [sp, #4]
   167c0:	mov	r2, r7
   167c4:	mov	r3, #0
   167c8:	str	r0, [sp, #8]
   167cc:	mov	r0, r4
   167d0:	ldr	r1, [pc, #2552]	; 171d0 <main@@Base+0xf90>
   167d4:	add	r1, pc, r1
   167d8:	bl	15038 <test_json@@Base>
   167dc:	str	r0, [sp, #144]	; 0x90
   167e0:	movw	r0, #625	; 0x271
   167e4:	str	r8, [sp]
   167e8:	str	r8, [sp, #4]
   167ec:	mov	r2, r7
   167f0:	mov	r3, #0
   167f4:	str	r0, [sp, #8]
   167f8:	mov	r0, r4
   167fc:	ldr	r1, [pc, #2512]	; 171d4 <main@@Base+0xf94>
   16800:	add	r1, pc, r1
   16804:	bl	15038 <test_json@@Base>
   16808:	str	r0, [sp, #140]	; 0x8c
   1680c:	mov	r0, #628	; 0x274
   16810:	str	r8, [sp]
   16814:	str	r8, [sp, #4]
   16818:	mov	r3, #0
   1681c:	str	r0, [sp, #8]
   16820:	mov	r0, r4
   16824:	ldr	r6, [pc, #2476]	; 171d8 <main@@Base+0xf98>
   16828:	ldr	r5, [pc, #2476]	; 171dc <main@@Base+0xf9c>
   1682c:	add	r6, pc, r6
   16830:	add	r5, pc, r5
   16834:	mov	r1, r6
   16838:	mov	r2, r5
   1683c:	bl	15038 <test_json@@Base>
   16840:	str	r0, [sp, #136]	; 0x88
   16844:	movw	r0, #631	; 0x277
   16848:	mov	r1, r6
   1684c:	mov	r2, r5
   16850:	mov	r3, #0
   16854:	str	r8, [sp]
   16858:	str	r8, [sp, #4]
   1685c:	str	r0, [sp, #8]
   16860:	mov	r0, r4
   16864:	bl	15038 <test_json@@Base>
   16868:	str	r0, [sp, #132]	; 0x84
   1686c:	movw	r0, #634	; 0x27a
   16870:	str	r8, [sp]
   16874:	str	r8, [sp, #4]
   16878:	mov	r3, #0
   1687c:	str	r0, [sp, #8]
   16880:	mov	r0, r4
   16884:	ldr	r1, [pc, #2388]	; 171e0 <main@@Base+0xfa0>
   16888:	ldr	r2, [pc, #2388]	; 171e4 <main@@Base+0xfa4>
   1688c:	add	r1, pc, r1
   16890:	add	r2, pc, r2
   16894:	bl	15038 <test_json@@Base>
   16898:	str	r0, [sp, #128]	; 0x80
   1689c:	movw	r0, #638	; 0x27e
   168a0:	str	r8, [sp]
   168a4:	str	r8, [sp, #4]
   168a8:	mov	r3, #0
   168ac:	str	r0, [sp, #8]
   168b0:	mov	r0, r4
   168b4:	ldr	r1, [pc, #2348]	; 171e8 <main@@Base+0xfa8>
   168b8:	ldr	r2, [pc, #2348]	; 171ec <main@@Base+0xfac>
   168bc:	add	r1, pc, r1
   168c0:	add	r2, pc, r2
   168c4:	bl	15038 <test_json@@Base>
   168c8:	str	r0, [sp, #124]	; 0x7c
   168cc:	movw	r0, #642	; 0x282
   168d0:	str	r8, [sp]
   168d4:	str	r8, [sp, #4]
   168d8:	mov	r3, #0
   168dc:	str	r0, [sp, #8]
   168e0:	mov	r0, r4
   168e4:	ldr	r1, [pc, #2308]	; 171f0 <main@@Base+0xfb0>
   168e8:	ldr	r2, [pc, #2308]	; 171f4 <main@@Base+0xfb4>
   168ec:	add	r1, pc, r1
   168f0:	add	r2, pc, r2
   168f4:	bl	15038 <test_json@@Base>
   168f8:	str	r0, [sp, #120]	; 0x78
   168fc:	movw	r0, #646	; 0x286
   16900:	str	r8, [sp]
   16904:	str	r8, [sp, #4]
   16908:	mov	r2, sl
   1690c:	mov	r3, #0
   16910:	str	r0, [sp, #8]
   16914:	mov	r0, r4
   16918:	ldr	r1, [pc, #2264]	; 171f8 <main@@Base+0xfb8>
   1691c:	add	r1, pc, r1
   16920:	bl	15038 <test_json@@Base>
   16924:	str	r0, [sp, #116]	; 0x74
   16928:	movw	r0, #649	; 0x289
   1692c:	str	r8, [sp]
   16930:	str	r8, [sp, #4]
   16934:	mov	r2, sl
   16938:	mov	r3, #0
   1693c:	str	r0, [sp, #8]
   16940:	mov	r0, r4
   16944:	ldr	r1, [pc, #2224]	; 171fc <main@@Base+0xfbc>
   16948:	add	r1, pc, r1
   1694c:	bl	15038 <test_json@@Base>
   16950:	str	r0, [sp, #112]	; 0x70
   16954:	movw	r0, #653	; 0x28d
   16958:	str	r8, [sp]
   1695c:	str	r8, [sp, #4]
   16960:	mov	r2, r7
   16964:	mov	r3, #0
   16968:	str	r0, [sp, #8]
   1696c:	mov	r0, r4
   16970:	ldr	r1, [pc, #2184]	; 17200 <main@@Base+0xfc0>
   16974:	add	r1, pc, r1
   16978:	bl	15038 <test_json@@Base>
   1697c:	str	r0, [sp, #108]	; 0x6c
   16980:	mov	r0, #656	; 0x290
   16984:	str	r8, [sp]
   16988:	str	r8, [sp, #4]
   1698c:	mov	r3, #0
   16990:	str	r0, [sp, #8]
   16994:	mov	r0, r4
   16998:	ldr	r1, [pc, #2148]	; 17204 <main@@Base+0xfc4>
   1699c:	ldr	r2, [pc, #2148]	; 17208 <main@@Base+0xfc8>
   169a0:	add	r1, pc, r1
   169a4:	add	r2, pc, r2
   169a8:	bl	15038 <test_json@@Base>
   169ac:	str	r0, [sp, #104]	; 0x68
   169b0:	movw	r0, #659	; 0x293
   169b4:	str	r8, [sp]
   169b8:	str	r8, [sp, #4]
   169bc:	mov	r3, #0
   169c0:	str	r0, [sp, #8]
   169c4:	mov	r0, r4
   169c8:	ldr	r1, [pc, #2108]	; 1720c <main@@Base+0xfcc>
   169cc:	ldr	r2, [pc, #2108]	; 17210 <main@@Base+0xfd0>
   169d0:	add	r1, pc, r1
   169d4:	add	r2, pc, r2
   169d8:	bl	15038 <test_json@@Base>
   169dc:	str	r0, [sp, #100]	; 0x64
   169e0:	movw	r0, #662	; 0x296
   169e4:	str	r8, [sp]
   169e8:	str	r8, [sp, #4]
   169ec:	mov	r2, r9
   169f0:	mov	r3, #0
   169f4:	str	r0, [sp, #8]
   169f8:	mov	r0, r4
   169fc:	ldr	r1, [pc, #2064]	; 17214 <main@@Base+0xfd4>
   16a00:	add	r1, pc, r1
   16a04:	bl	15038 <test_json@@Base>
   16a08:	str	r0, [sp, #96]	; 0x60
   16a0c:	movw	r0, #665	; 0x299
   16a10:	str	r8, [sp]
   16a14:	str	r8, [sp, #4]
   16a18:	mov	r3, #0
   16a1c:	str	r0, [sp, #8]
   16a20:	mov	r0, r4
   16a24:	ldr	r1, [pc, #2028]	; 17218 <main@@Base+0xfd8>
   16a28:	ldr	r2, [pc, #2028]	; 1721c <main@@Base+0xfdc>
   16a2c:	add	r1, pc, r1
   16a30:	add	r2, pc, r2
   16a34:	bl	15038 <test_json@@Base>
   16a38:	str	r0, [sp, #92]	; 0x5c
   16a3c:	mov	r0, #668	; 0x29c
   16a40:	str	r8, [sp]
   16a44:	str	r8, [sp, #4]
   16a48:	mov	r3, #0
   16a4c:	str	r0, [sp, #8]
   16a50:	mov	r0, r4
   16a54:	ldr	r1, [pc, #1988]	; 17220 <main@@Base+0xfe0>
   16a58:	ldr	r2, [pc, #1988]	; 17224 <main@@Base+0xfe4>
   16a5c:	add	r1, pc, r1
   16a60:	add	r2, pc, r2
   16a64:	bl	15038 <test_json@@Base>
   16a68:	str	r0, [sp, #88]	; 0x58
   16a6c:	movw	r0, #671	; 0x29f
   16a70:	str	r8, [sp]
   16a74:	str	r8, [sp, #4]
   16a78:	mov	r3, #0
   16a7c:	str	r0, [sp, #8]
   16a80:	mov	r0, r4
   16a84:	ldr	r1, [pc, #1948]	; 17228 <main@@Base+0xfe8>
   16a88:	ldr	r2, [pc, #1948]	; 1722c <main@@Base+0xfec>
   16a8c:	add	r1, pc, r1
   16a90:	add	r2, pc, r2
   16a94:	bl	15038 <test_json@@Base>
   16a98:	str	r0, [sp, #84]	; 0x54
   16a9c:	movw	r0, #674	; 0x2a2
   16aa0:	str	r8, [sp]
   16aa4:	str	r8, [sp, #4]
   16aa8:	mov	r2, r7
   16aac:	mov	r3, #0
   16ab0:	str	r0, [sp, #8]
   16ab4:	mov	r0, r4
   16ab8:	ldr	r1, [pc, #1904]	; 17230 <main@@Base+0xff0>
   16abc:	add	r1, pc, r1
   16ac0:	bl	15038 <test_json@@Base>
   16ac4:	str	r0, [sp, #80]	; 0x50
   16ac8:	movw	r0, #677	; 0x2a5
   16acc:	str	r8, [sp]
   16ad0:	str	r8, [sp, #4]
   16ad4:	mov	r2, r7
   16ad8:	mov	r3, #0
   16adc:	str	r0, [sp, #8]
   16ae0:	mov	r0, r4
   16ae4:	ldr	r1, [pc, #1864]	; 17234 <main@@Base+0xff4>
   16ae8:	add	r1, pc, r1
   16aec:	bl	15038 <test_json@@Base>
   16af0:	str	r0, [sp, #76]	; 0x4c
   16af4:	mov	r0, #680	; 0x2a8
   16af8:	str	r8, [sp]
   16afc:	str	r8, [sp, #4]
   16b00:	mov	r2, r5
   16b04:	mov	r3, #0
   16b08:	str	r0, [sp, #8]
   16b0c:	mov	r0, r4
   16b10:	ldr	r6, [pc, #1824]	; 17238 <main@@Base+0xff8>
   16b14:	add	r6, pc, r6
   16b18:	mov	r1, r6
   16b1c:	bl	15038 <test_json@@Base>
   16b20:	str	r0, [sp, #72]	; 0x48
   16b24:	movw	r0, #683	; 0x2ab
   16b28:	mov	r1, r6
   16b2c:	mov	r2, r5
   16b30:	mov	r3, #0
   16b34:	str	r8, [sp]
   16b38:	str	r8, [sp, #4]
   16b3c:	str	r0, [sp, #8]
   16b40:	mov	r0, r4
   16b44:	bl	15038 <test_json@@Base>
   16b48:	str	r0, [sp, #68]	; 0x44
   16b4c:	movw	r0, #686	; 0x2ae
   16b50:	str	r8, [sp]
   16b54:	str	r8, [sp, #4]
   16b58:	mov	r3, #0
   16b5c:	str	r0, [sp, #8]
   16b60:	mov	r0, r4
   16b64:	ldr	r1, [pc, #1744]	; 1723c <main@@Base+0xffc>
   16b68:	ldr	r2, [pc, #1744]	; 17240 <main@@Base+0x1000>
   16b6c:	add	r1, pc, r1
   16b70:	add	r2, pc, r2
   16b74:	bl	15038 <test_json@@Base>
   16b78:	str	r0, [sp, #64]	; 0x40
   16b7c:	movw	r0, #690	; 0x2b2
   16b80:	str	r8, [sp]
   16b84:	str	r8, [sp, #4]
   16b88:	mov	r3, #0
   16b8c:	str	r0, [sp, #8]
   16b90:	mov	r0, r4
   16b94:	ldr	r1, [pc, #1704]	; 17244 <main@@Base+0x1004>
   16b98:	ldr	r2, [pc, #1704]	; 17248 <main@@Base+0x1008>
   16b9c:	add	r1, pc, r1
   16ba0:	add	r2, pc, r2
   16ba4:	bl	15038 <test_json@@Base>
   16ba8:	str	r0, [sp, #60]	; 0x3c
   16bac:	movw	r0, #694	; 0x2b6
   16bb0:	str	r8, [sp]
   16bb4:	str	r8, [sp, #4]
   16bb8:	mov	r3, #0
   16bbc:	str	r0, [sp, #8]
   16bc0:	mov	r0, r4
   16bc4:	ldr	r1, [pc, #1664]	; 1724c <main@@Base+0x100c>
   16bc8:	ldr	r2, [pc, #1664]	; 17250 <main@@Base+0x1010>
   16bcc:	add	r1, pc, r1
   16bd0:	add	r2, pc, r2
   16bd4:	bl	15038 <test_json@@Base>
   16bd8:	str	r0, [sp, #56]	; 0x38
   16bdc:	movw	r0, #698	; 0x2ba
   16be0:	str	r8, [sp]
   16be4:	str	r8, [sp, #4]
   16be8:	mov	r2, sl
   16bec:	mov	r3, #0
   16bf0:	str	r0, [sp, #8]
   16bf4:	mov	r0, r4
   16bf8:	ldr	r1, [pc, #1620]	; 17254 <main@@Base+0x1014>
   16bfc:	add	r1, pc, r1
   16c00:	bl	15038 <test_json@@Base>
   16c04:	str	r0, [sp, #52]	; 0x34
   16c08:	movw	r0, #701	; 0x2bd
   16c0c:	str	r8, [sp]
   16c10:	str	r8, [sp, #4]
   16c14:	mov	r2, sl
   16c18:	mov	r3, #0
   16c1c:	str	r0, [sp, #8]
   16c20:	mov	r0, r4
   16c24:	ldr	r1, [pc, #1580]	; 17258 <main@@Base+0x1018>
   16c28:	add	r1, pc, r1
   16c2c:	bl	15038 <test_json@@Base>
   16c30:	str	r0, [sp, #48]	; 0x30
   16c34:	movw	r0, #711	; 0x2c7
   16c38:	str	r8, [sp]
   16c3c:	str	r8, [sp, #4]
   16c40:	mov	r3, #0
   16c44:	str	r0, [sp, #8]
   16c48:	mov	r0, r4
   16c4c:	ldr	r1, [pc, #1544]	; 1725c <main@@Base+0x101c>
   16c50:	ldr	r5, [pc, #1544]	; 17260 <main@@Base+0x1020>
   16c54:	add	r5, pc, r5
   16c58:	add	r1, pc, r1
   16c5c:	mov	r2, r5
   16c60:	bl	15038 <test_json@@Base>
   16c64:	str	r0, [sp, #44]	; 0x2c
   16c68:	mov	r0, #716	; 0x2cc
   16c6c:	str	r8, [sp]
   16c70:	str	r8, [sp, #4]
   16c74:	mov	r2, r5
   16c78:	mov	r3, #0
   16c7c:	str	r0, [sp, #8]
   16c80:	mov	r0, r4
   16c84:	ldr	r1, [pc, #1496]	; 17264 <main@@Base+0x1024>
   16c88:	add	r1, pc, r1
   16c8c:	bl	15038 <test_json@@Base>
   16c90:	str	r0, [sp, #40]	; 0x28
   16c94:	movw	r0, #731	; 0x2db
   16c98:	str	r8, [sp]
   16c9c:	str	r8, [sp, #4]
   16ca0:	mov	r3, #0
   16ca4:	str	r0, [sp, #8]
   16ca8:	mov	r0, r4
   16cac:	ldr	r1, [pc, #1460]	; 17268 <main@@Base+0x1028>
   16cb0:	ldr	r2, [pc, #1460]	; 1726c <main@@Base+0x102c>
   16cb4:	add	r1, pc, r1
   16cb8:	add	r2, pc, r2
   16cbc:	bl	15038 <test_json@@Base>
   16cc0:	str	r0, [sp, #36]	; 0x24
   16cc4:	movw	r0, #734	; 0x2de
   16cc8:	str	r8, [sp]
   16ccc:	str	r8, [sp, #4]
   16cd0:	mov	r3, #0
   16cd4:	str	r0, [sp, #8]
   16cd8:	mov	r0, r4
   16cdc:	ldr	r1, [pc, #1420]	; 17270 <main@@Base+0x1030>
   16ce0:	ldr	r2, [pc, #1420]	; 17274 <main@@Base+0x1034>
   16ce4:	add	r1, pc, r1
   16ce8:	add	r2, pc, r2
   16cec:	bl	15038 <test_json@@Base>
   16cf0:	str	r0, [sp, #32]
   16cf4:	movw	r0, #738	; 0x2e2
   16cf8:	str	r8, [sp]
   16cfc:	str	r8, [sp, #4]
   16d00:	mov	r3, #0
   16d04:	str	r0, [sp, #8]
   16d08:	mov	r0, r4
   16d0c:	ldr	r1, [pc, #1380]	; 17278 <main@@Base+0x1038>
   16d10:	ldr	r5, [pc, #1380]	; 1727c <main@@Base+0x103c>
   16d14:	add	r5, pc, r5
   16d18:	add	r1, pc, r1
   16d1c:	mov	r2, r5
   16d20:	bl	15038 <test_json@@Base>
   16d24:	str	r0, [sp, #28]
   16d28:	movw	r0, #750	; 0x2ee
   16d2c:	str	r8, [sp]
   16d30:	str	r8, [sp, #4]
   16d34:	mov	r2, r5
   16d38:	mov	r3, #0
   16d3c:	str	r0, [sp, #8]
   16d40:	mov	r0, r4
   16d44:	ldr	r1, [pc, #1332]	; 17280 <main@@Base+0x1040>
   16d48:	add	r1, pc, r1
   16d4c:	bl	15038 <test_json@@Base>
   16d50:	str	r0, [sp, #24]
   16d54:	movw	r0, #766	; 0x2fe
   16d58:	str	r8, [sp]
   16d5c:	str	r8, [sp, #4]
   16d60:	mov	r3, #0
   16d64:	str	r0, [sp, #8]
   16d68:	mov	r0, r4
   16d6c:	ldr	r1, [pc, #1296]	; 17284 <main@@Base+0x1044>
   16d70:	ldr	r2, [pc, #1296]	; 17288 <main@@Base+0x1048>
   16d74:	add	r1, pc, r1
   16d78:	add	r2, pc, r2
   16d7c:	bl	15038 <test_json@@Base>
   16d80:	str	r0, [sp, #20]
   16d84:	movw	r0, #770	; 0x302
   16d88:	str	r8, [sp]
   16d8c:	str	r8, [sp, #4]
   16d90:	mov	r3, #0
   16d94:	str	r0, [sp, #8]
   16d98:	mov	r0, r4
   16d9c:	ldr	r1, [pc, #1256]	; 1728c <main@@Base+0x104c>
   16da0:	ldr	r2, [pc, #1256]	; 17290 <main@@Base+0x1050>
   16da4:	add	r1, pc, r1
   16da8:	add	r2, pc, r2
   16dac:	bl	15038 <test_json@@Base>
   16db0:	str	r0, [sp, #16]
   16db4:	mov	r0, #776	; 0x308
   16db8:	str	r8, [sp]
   16dbc:	str	r8, [sp, #4]
   16dc0:	mov	r3, #0
   16dc4:	str	r0, [sp, #8]
   16dc8:	mov	r0, r4
   16dcc:	ldr	r1, [pc, #1216]	; 17294 <main@@Base+0x1054>
   16dd0:	ldr	r2, [pc, #1216]	; 17298 <main@@Base+0x1058>
   16dd4:	add	r1, pc, r1
   16dd8:	add	r2, pc, r2
   16ddc:	bl	15038 <test_json@@Base>
   16de0:	mov	r7, r0
   16de4:	movw	r0, #781	; 0x30d
   16de8:	str	r8, [sp]
   16dec:	str	r8, [sp, #4]
   16df0:	mov	r2, sl
   16df4:	mov	r3, #0
   16df8:	str	r0, [sp, #8]
   16dfc:	mov	r0, r4
   16e00:	ldr	r1, [pc, #1172]	; 1729c <main@@Base+0x105c>
   16e04:	add	r1, pc, r1
   16e08:	bl	15038 <test_json@@Base>
   16e0c:	mov	r5, r0
   16e10:	movw	r0, #786	; 0x312
   16e14:	str	r8, [sp]
   16e18:	str	r8, [sp, #4]
   16e1c:	mov	r3, #0
   16e20:	str	r0, [sp, #8]
   16e24:	mov	r0, r4
   16e28:	ldr	r1, [pc, #1136]	; 172a0 <main@@Base+0x1060>
   16e2c:	ldr	r2, [pc, #1136]	; 172a4 <main@@Base+0x1064>
   16e30:	add	r1, pc, r1
   16e34:	add	r2, pc, r2
   16e38:	bl	15038 <test_json@@Base>
   16e3c:	mov	r6, r0
   16e40:	movw	r0, #791	; 0x317
   16e44:	str	r8, [sp]
   16e48:	str	r8, [sp, #4]
   16e4c:	mov	r3, #0
   16e50:	str	r0, [sp, #8]
   16e54:	mov	r0, r4
   16e58:	ldr	r1, [pc, #1096]	; 172a8 <main@@Base+0x1068>
   16e5c:	ldr	r2, [pc, #1096]	; 172ac <main@@Base+0x106c>
   16e60:	add	r1, pc, r1
   16e64:	add	r2, pc, r2
   16e68:	bl	15038 <test_json@@Base>
   16e6c:	mov	sl, r0
   16e70:	mov	r0, #796	; 0x31c
   16e74:	str	r8, [sp]
   16e78:	str	r8, [sp, #4]
   16e7c:	mov	r3, #0
   16e80:	str	r0, [sp, #8]
   16e84:	mov	r0, r4
   16e88:	ldr	r1, [pc, #1056]	; 172b0 <main@@Base+0x1070>
   16e8c:	ldr	r2, [pc, #1056]	; 172b4 <main@@Base+0x1074>
   16e90:	add	r1, pc, r1
   16e94:	add	r2, pc, r2
   16e98:	bl	15038 <test_json@@Base>
   16e9c:	mov	r9, r0
   16ea0:	movw	r0, #801	; 0x321
   16ea4:	str	r8, [sp]
   16ea8:	str	r8, [sp, #4]
   16eac:	mov	r3, #0
   16eb0:	str	r0, [sp, #8]
   16eb4:	mov	r0, r4
   16eb8:	ldr	r1, [pc, #1016]	; 172b8 <main@@Base+0x1078>
   16ebc:	ldr	r2, [pc, #1016]	; 172bc <main@@Base+0x107c>
   16ec0:	add	r1, pc, r1
   16ec4:	add	r2, pc, r2
   16ec8:	bl	15038 <test_json@@Base>
   16ecc:	movw	r1, #806	; 0x326
   16ed0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16ed4:	str	r8, [sp]
   16ed8:	str	r8, [sp, #4]
   16edc:	mov	r3, #0
   16ee0:	str	r1, [sp, #8]
   16ee4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16ee8:	orr	r1, r2, r1
   16eec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16ef0:	orr	r1, r1, r2
   16ef4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16ef8:	orr	r1, r1, r2
   16efc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16f00:	orr	r1, r1, r2
   16f04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f08:	orr	r1, r1, r2
   16f0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f10:	orr	r1, r1, r2
   16f14:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16f18:	orr	r1, r1, r2
   16f1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16f20:	orr	r1, r1, r2
   16f24:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16f28:	orr	r1, r1, r2
   16f2c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16f30:	orr	r1, r1, r2
   16f34:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16f38:	orr	r1, r1, r2
   16f3c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16f40:	orr	r1, r1, r2
   16f44:	ldr	r2, [fp, #-84]	; 0xffffffac
   16f48:	orr	r1, r1, r2
   16f4c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16f50:	orr	r1, r1, r2
   16f54:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16f58:	orr	r1, r1, r2
   16f5c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16f60:	orr	r1, r1, r2
   16f64:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16f68:	orr	r1, r1, r2
   16f6c:	ldr	r2, [fp, #-104]	; 0xffffff98
   16f70:	orr	r1, r1, r2
   16f74:	ldr	r2, [fp, #-108]	; 0xffffff94
   16f78:	orr	r1, r1, r2
   16f7c:	ldr	r2, [fp, #-112]	; 0xffffff90
   16f80:	orr	r1, r1, r2
   16f84:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16f88:	orr	r1, r1, r2
   16f8c:	ldr	r2, [fp, #-120]	; 0xffffff88
   16f90:	orr	r1, r1, r2
   16f94:	ldr	r2, [fp, #-124]	; 0xffffff84
   16f98:	orr	r1, r1, r2
   16f9c:	ldr	r2, [fp, #-128]	; 0xffffff80
   16fa0:	orr	r1, r1, r2
   16fa4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16fa8:	orr	r1, r1, r2
   16fac:	ldr	r2, [fp, #-136]	; 0xffffff78
   16fb0:	orr	r1, r1, r2
   16fb4:	ldr	r2, [fp, #-140]	; 0xffffff74
   16fb8:	orr	r1, r1, r2
   16fbc:	ldr	r2, [fp, #-144]	; 0xffffff70
   16fc0:	orr	r1, r1, r2
   16fc4:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16fc8:	orr	r1, r1, r2
   16fcc:	ldr	r2, [fp, #-152]	; 0xffffff68
   16fd0:	orr	r1, r1, r2
   16fd4:	ldr	r2, [sp, #156]	; 0x9c
   16fd8:	orr	r1, r1, r2
   16fdc:	ldr	r2, [sp, #152]	; 0x98
   16fe0:	orr	r1, r1, r2
   16fe4:	ldr	r2, [sp, #148]	; 0x94
   16fe8:	orr	r1, r1, r2
   16fec:	ldr	r2, [sp, #144]	; 0x90
   16ff0:	orr	r1, r1, r2
   16ff4:	ldr	r2, [sp, #140]	; 0x8c
   16ff8:	orr	r1, r1, r2
   16ffc:	ldr	r2, [sp, #136]	; 0x88
   17000:	orr	r1, r1, r2
   17004:	ldr	r2, [sp, #132]	; 0x84
   17008:	orr	r1, r1, r2
   1700c:	ldr	r2, [sp, #128]	; 0x80
   17010:	orr	r1, r1, r2
   17014:	ldr	r2, [sp, #124]	; 0x7c
   17018:	orr	r1, r1, r2
   1701c:	ldr	r2, [sp, #120]	; 0x78
   17020:	orr	r1, r1, r2
   17024:	ldr	r2, [sp, #116]	; 0x74
   17028:	orr	r1, r1, r2
   1702c:	ldr	r2, [sp, #112]	; 0x70
   17030:	orr	r1, r1, r2
   17034:	ldr	r2, [sp, #108]	; 0x6c
   17038:	orr	r1, r1, r2
   1703c:	ldr	r2, [sp, #104]	; 0x68
   17040:	orr	r1, r1, r2
   17044:	ldr	r2, [sp, #100]	; 0x64
   17048:	orr	r1, r1, r2
   1704c:	ldr	r2, [sp, #96]	; 0x60
   17050:	orr	r1, r1, r2
   17054:	ldr	r2, [sp, #92]	; 0x5c
   17058:	orr	r1, r1, r2
   1705c:	ldr	r2, [sp, #88]	; 0x58
   17060:	orr	r1, r1, r2
   17064:	ldr	r2, [sp, #84]	; 0x54
   17068:	orr	r1, r1, r2
   1706c:	ldr	r2, [sp, #80]	; 0x50
   17070:	orr	r1, r1, r2
   17074:	ldr	r2, [sp, #76]	; 0x4c
   17078:	orr	r1, r1, r2
   1707c:	ldr	r2, [sp, #72]	; 0x48
   17080:	orr	r1, r1, r2
   17084:	ldr	r2, [sp, #68]	; 0x44
   17088:	orr	r1, r1, r2
   1708c:	ldr	r2, [sp, #64]	; 0x40
   17090:	orr	r1, r1, r2
   17094:	ldr	r2, [sp, #60]	; 0x3c
   17098:	orr	r1, r1, r2
   1709c:	ldr	r2, [sp, #56]	; 0x38
   170a0:	orr	r1, r1, r2
   170a4:	ldr	r2, [sp, #52]	; 0x34
   170a8:	orr	r1, r1, r2
   170ac:	ldr	r2, [sp, #48]	; 0x30
   170b0:	orr	r1, r1, r2
   170b4:	ldr	r2, [sp, #44]	; 0x2c
   170b8:	orr	r1, r1, r2
   170bc:	ldr	r2, [sp, #40]	; 0x28
   170c0:	orr	r1, r1, r2
   170c4:	ldr	r2, [sp, #36]	; 0x24
   170c8:	orr	r1, r1, r2
   170cc:	ldr	r2, [sp, #32]
   170d0:	orr	r1, r1, r2
   170d4:	ldr	r2, [sp, #28]
   170d8:	orr	r1, r1, r2
   170dc:	ldr	r2, [sp, #24]
   170e0:	orr	r1, r1, r2
   170e4:	ldr	r2, [sp, #20]
   170e8:	orr	r1, r1, r2
   170ec:	ldr	r2, [sp, #16]
   170f0:	orr	r1, r1, r2
   170f4:	orr	r1, r1, r7
   170f8:	orr	r1, r1, r5
   170fc:	orr	r1, r1, r6
   17100:	orr	r1, r1, sl
   17104:	orr	r1, r1, r9
   17108:	orr	r5, r1, r0
   1710c:	ldr	r1, [pc, #428]	; 172c0 <main@@Base+0x1080>
   17110:	ldr	r2, [pc, #428]	; 172c4 <main@@Base+0x1084>
   17114:	mov	r0, r4
   17118:	add	r1, pc, r1
   1711c:	add	r2, pc, r2
   17120:	bl	15038 <test_json@@Base>
   17124:	orrs	r0, r5, r0
   17128:	mvnne	r0, #0
   1712c:	sub	sp, fp, #28
   17130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17134:	strdeq	r8, [r4], -r0
   17138:	ldrdeq	r3, [r3], -lr
   1713c:	muleq	r3, r7, r6
   17140:			; <UNDEFINED> instruction: 0x000337bd
   17144:	andeq	r3, r3, r8, ror #15
   17148:	ldrdeq	r3, [r3], -r1
   1714c:	strdeq	r3, [r3], -sp
   17150:	andeq	r3, r3, r8, ror #15
   17154:	andeq	r3, r3, sp, lsl r8
   17158:	andeq	r3, r3, r5, lsl r8
   1715c:	andeq	r3, r3, r3, lsr #16
   17160:	andeq	r3, r3, sp, lsl r8
   17164:	andeq	r3, r3, sl, lsl r8
   17168:	andeq	r1, r3, ip, lsl #9
   1716c:	andeq	r3, r3, r9, ror #15
   17170:	ldrdeq	r3, [r3], -r2
   17174:	andeq	r3, r3, r9, asr #15
   17178:	andeq	r3, r3, r1, asr #15
   1717c:	andeq	r3, r3, r2, asr #15
   17180:	andeq	r3, r3, ip, asr #15
   17184:	andeq	r3, r3, r0, asr #15
   17188:			; <UNDEFINED> instruction: 0x000337b6
   1718c:	andeq	r1, r3, r9, asr #11
   17190:	andeq	r3, r3, fp, ror r7
   17194:	andeq	r3, r3, r5, lsr #15
   17198:	muleq	r3, r8, r7
   1719c:	muleq	r3, r1, r7
   171a0:	andeq	r3, r3, sl, lsl #15
   171a4:	andeq	r3, r3, ip, lsl #15
   171a8:	andeq	r3, r3, r1, lsl #15
   171ac:	andeq	r3, r3, r6, ror r7
   171b0:	muleq	r3, r3, r7
   171b4:	andeq	r3, r3, sp, lsl #15
   171b8:	andeq	r3, r3, r3, lsl #15
   171bc:	andeq	r3, r3, r1, lsr #15
   171c0:	muleq	r3, r3, r7
   171c4:			; <UNDEFINED> instruction: 0x000337b1
   171c8:	andeq	r3, r3, r3, lsr #15
   171cc:	andeq	r3, r3, r0, asr #15
   171d0:			; <UNDEFINED> instruction: 0x000337b1
   171d4:			; <UNDEFINED> instruction: 0x000337b0
   171d8:			; <UNDEFINED> instruction: 0x000337be
   171dc:	andeq	r3, r3, r4, ror #15
   171e0:	andeq	r3, r3, r2, lsr #15
   171e4:	andeq	r3, r3, pc, ror #15
   171e8:	andeq	r3, r3, sl, lsl #16
   171ec:	andeq	r3, r3, fp, asr r8
   171f0:	andeq	r3, r3, r9, ror r8
   171f4:	andeq	r3, r3, r4, ror #17
   171f8:	andeq	r3, r3, sl, lsl r9
   171fc:	andeq	r3, r3, r9, lsl r9
   17200:	andeq	r3, r3, r3, lsl r9
   17204:	andeq	r3, r3, r4, lsl #18
   17208:	andeq	r3, r3, r1, ror #2
   1720c:	strdeq	r3, [r3], -r1
   17210:	andeq	r3, r3, fp, lsr #9
   17214:	ldrdeq	r3, [r3], -lr
   17218:	ldrdeq	r3, [r3], -r0
   1721c:			; <UNDEFINED> instruction: 0x000334b9
   17220:			; <UNDEFINED> instruction: 0x000338be
   17224:	andeq	r3, r3, r9, asr #9
   17228:	andeq	r3, r3, ip, lsr #17
   1722c:	ldrdeq	r3, [r3], -r8
   17230:	muleq	r3, r9, r8
   17234:	muleq	r3, r2, r8
   17238:	muleq	r3, sl, r8
   1723c:	andeq	r3, r3, r6, ror #16
   17240:	andeq	r3, r3, pc, lsl #10
   17244:	andeq	r3, r3, sp, ror r8
   17248:	andeq	r3, r3, fp, ror r5
   1724c:	muleq	r3, r8, r8
   17250:	andeq	r3, r3, r4, lsl #12
   17254:	andeq	r3, r3, r7, asr #17
   17258:	andeq	r3, r3, r0, asr #17
   1725c:			; <UNDEFINED> instruction: 0x000338b2
   17260:	andeq	r3, r3, r3, lsl r9
   17264:	andeq	r3, r3, sp, lsr r9
   17268:	andeq	r3, r3, lr, ror r9
   1726c:			; <UNDEFINED> instruction: 0x000339b7
   17270:			; <UNDEFINED> instruction: 0x000339bb
   17274:	ldrdeq	r3, [r3], -r1
   17278:			; <UNDEFINED> instruction: 0x000339b3
   1727c:	strdeq	r3, [r3], -pc	; <UNPREDICTABLE>
   17280:	andeq	r3, r3, ip, lsl #20
   17284:	andeq	r3, r3, sp, ror sl
   17288:	andeq	r3, r3, r0, lsr #21
   1728c:	muleq	r3, r6, sl
   17290:	andeq	r3, r3, r1, asr #21
   17294:			; <UNDEFINED> instruction: 0x00033abf
   17298:	andeq	r3, r3, r6, lsr fp
   1729c:	andeq	r3, r3, sl, ror fp
   172a0:	andeq	r3, r3, r6, asr #23
   172a4:	andeq	r3, r3, ip, lsr ip
   172a8:	andeq	r3, r3, pc, ror ip
   172ac:	andeq	r3, r3, r6, lsl #26
   172b0:	andeq	r3, r3, r8, asr sp
   172b4:	andeq	r3, r3, pc, asr #27
   172b8:	andeq	r3, r3, r3, lsl lr
   172bc:	muleq	r3, r9, lr
   172c0:	andeq	r3, r3, r4, asr #25
   172c4:	andeq	r3, r3, pc, asr #26
   172c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172cc:	add	fp, sp, #28
   172d0:	sub	sp, sp, #4
   172d4:	vpush	{d8-d9}
   172d8:	sub	sp, sp, #80	; 0x50
   172dc:	mov	r8, r0
   172e0:	mov	r0, #0
   172e4:	mov	r4, r1
   172e8:	mov	r1, #36	; 0x24
   172ec:	mov	sl, r3
   172f0:	mov	r5, r2
   172f4:	str	r0, [r3]
   172f8:	ldr	r0, [r8]
   172fc:	bl	314c0 <flatcc_builder_start_table@@Base>
   17300:	cmp	r0, #0
   17304:	beq	17334 <main@@Base+0x10f4>
   17308:	mov	r0, r8
   1730c:	mov	r1, r4
   17310:	mov	r2, r5
   17314:	mov	r3, #33	; 0x21
   17318:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1731c:	mov	r4, r0
   17320:	mov	r0, r4
   17324:	sub	sp, fp, #48	; 0x30
   17328:	vpop	{d8-d9}
   1732c:	add	sp, sp, #4
   17330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17334:	add	r0, sp, #48	; 0x30
   17338:	mov	r1, r4
   1733c:	mov	r2, r5
   17340:	mov	r3, #1
   17344:	str	r0, [sp]
   17348:	mov	r0, r8
   1734c:	bl	38c74 <flatcc_json_parser_prepare_unions@@Base>
   17350:	cmp	r0, r5
   17354:	beq	17308 <main@@Base+0x10c8>
   17358:	cmp	r4, r5
   1735c:	beq	17390 <main@@Base+0x1150>
   17360:	ldrb	r0, [r4]
   17364:	cmp	r0, #123	; 0x7b
   17368:	bne	17390 <main@@Base+0x1150>
   1736c:	add	r1, r4, #1
   17370:	sub	r0, r5, r1
   17374:	cmp	r0, #2
   17378:	blt	17428 <main@@Base+0x11e8>
   1737c:	ldrb	r0, [r1]
   17380:	cmp	r0, #32
   17384:	bls	17418 <main@@Base+0x11d8>
   17388:	mov	r4, r1
   1738c:	b	17438 <main@@Base+0x11f8>
   17390:	mov	r0, r8
   17394:	mov	r1, r4
   17398:	mov	r2, r5
   1739c:	mov	r3, #21
   173a0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   173a4:	mov	r4, r0
   173a8:	add	r0, r8, #24
   173ac:	ldr	r0, [r0]
   173b0:	cmp	r0, #0
   173b4:	bne	17308 <main@@Base+0x10c8>
   173b8:	ldr	r0, [r8]
   173bc:	mov	r1, #3
   173c0:	bl	31d40 <flatcc_builder_check_required_field@@Base>
   173c4:	cmp	r0, #0
   173c8:	beq	173fc <main@@Base+0x11bc>
   173cc:	ldr	r3, [sp, #48]	; 0x30
   173d0:	mov	r0, r8
   173d4:	mov	r1, r4
   173d8:	mov	r2, r5
   173dc:	bl	38d04 <flatcc_json_parser_finalize_unions@@Base>
   173e0:	mov	r4, r0
   173e4:	ldr	r0, [r8]
   173e8:	bl	31ef0 <flatcc_builder_end_table@@Base>
   173ec:	cmp	r0, #0
   173f0:	str	r0, [sl]
   173f4:	bne	17320 <main@@Base+0x10e0>
   173f8:	b	17308 <main@@Base+0x10c8>
   173fc:	mov	r0, r8
   17400:	mov	r1, r4
   17404:	mov	r2, r5
   17408:	mov	r3, #29
   1740c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   17410:	mov	r4, r0
   17414:	b	17308 <main@@Base+0x10c8>
   17418:	bne	17428 <main@@Base+0x11e8>
   1741c:	ldrb	r0, [r4, #2]!
   17420:	cmp	r0, #32
   17424:	bhi	17438 <main@@Base+0x11f8>
   17428:	mov	r0, r8
   1742c:	mov	r2, r5
   17430:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   17434:	mov	r4, r0
   17438:	cmp	r4, r5
   1743c:	mov	r2, r5
   17440:	beq	17478 <main@@Base+0x1238>
   17444:	ldrb	r0, [r4]
   17448:	cmp	r0, #125	; 0x7d
   1744c:	bne	17474 <main@@Base+0x1234>
   17450:	add	r1, r4, #1
   17454:	sub	r0, r5, r1
   17458:	cmp	r0, #2
   1745c:	blt	2142c <main@@Base+0xb1ec>
   17460:	ldrb	r0, [r1]
   17464:	cmp	r0, #32
   17468:	bls	2141c <main@@Base+0xb1dc>
   1746c:	mov	r4, r1
   17470:	b	173a8 <main@@Base+0x1168>
   17474:	mov	r2, r4
   17478:	add	r0, r8, #24
   1747c:	vldr	s18, [pc, #912]	; 17814 <main@@Base+0x15d4>
   17480:	movw	lr, #29556	; 0x7374
   17484:	vmov.f32	s16, #8	; 0x40400000  3.0
   17488:	str	r5, [sp, #44]	; 0x2c
   1748c:	str	r8, [sp, #40]	; 0x28
   17490:	str	sl, [sp, #36]	; 0x24
   17494:	str	r0, [sp, #28]
   17498:	add	r0, r8, #12
   1749c:	movt	lr, #29797	; 0x7465
   174a0:	str	r0, [sp, #32]
   174a4:	movw	r0, #13407	; 0x345f
   174a8:	movt	r0, #29494	; 0x7336
   174ac:	sub	r0, r0, #512	; 0x200
   174b0:	sub	r0, r0, #196608	; 0x30000
   174b4:	str	r0, [sp, #24]
   174b8:	cmp	r2, r5
   174bc:	mov	r9, r5
   174c0:	beq	1751c <main@@Base+0x12dc>
   174c4:	ldrb	r0, [r2]
   174c8:	cmp	r0, #46	; 0x2e
   174cc:	beq	174e8 <main@@Base+0x12a8>
   174d0:	cmp	r0, #34	; 0x22
   174d4:	bne	1750c <main@@Base+0x12cc>
   174d8:	ldr	r0, [sp, #32]
   174dc:	mov	r1, #0
   174e0:	add	r9, r2, #1
   174e4:	b	17518 <main@@Base+0x12d8>
   174e8:	mov	r1, r2
   174ec:	mov	r0, r8
   174f0:	mov	r2, r5
   174f4:	mov	r3, #5
   174f8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   174fc:	movw	lr, #29556	; 0x7374
   17500:	mov	r9, r0
   17504:	movt	lr, #29797	; 0x7465
   17508:	b	1751c <main@@Base+0x12dc>
   1750c:	ldr	r0, [sp, #32]
   17510:	mov	r1, #1
   17514:	mov	r9, r2
   17518:	str	r1, [r0]
   1751c:	sub	r8, r5, r9
   17520:	mov	r0, #8
   17524:	cmp	r8, #8
   17528:	movcc	r0, r8
   1752c:	and	r0, r0, #15
   17530:	sub	r0, r0, #1
   17534:	cmp	r0, #7
   17538:	bhi	18810 <main@@Base+0x25d0>
   1753c:	add	r7, pc, #36	; 0x24
   17540:	mov	sl, #0
   17544:	mov	ip, #0
   17548:	mov	r4, #0
   1754c:	mov	r1, #0
   17550:	mov	r2, #0
   17554:	mov	r3, #0
   17558:	mov	r6, #0
   1755c:	mov	r5, #0
   17560:	ldr	r0, [r7, r0, lsl #2]
   17564:	add	pc, r7, r0
   17568:	andeq	r0, r0, r4, rrx
   1756c:	andeq	r0, r0, ip, asr r0
   17570:	andeq	r0, r0, r4, asr r0
   17574:	andeq	r0, r0, ip, asr #32
   17578:	andeq	r0, r0, r0, asr #32
   1757c:	andeq	r0, r0, r4, lsr r0
   17580:	andeq	r0, r0, r4, lsr #32
   17584:	andeq	r0, r0, r0, lsr #32
   17588:	ldrb	ip, [r9, #7]
   1758c:	ldrb	r0, [r9, #6]
   17590:	mov	r4, sl
   17594:	orr	r0, ip, r0, lsl #8
   17598:	mov	sl, r0
   1759c:	ldrb	r0, [r9, #5]
   175a0:	mov	r1, r4
   175a4:	orr	sl, sl, r0, lsl #16
   175a8:	ldrb	r0, [r9, #4]
   175ac:	mov	r2, r1
   175b0:	orr	sl, sl, r0, lsl #24
   175b4:	ldrb	r0, [r9, #3]
   175b8:	orr	r3, r0, r2
   175bc:	ldrb	r0, [r9, #2]
   175c0:	orr	r6, r3, r0, lsl #8
   175c4:	ldrb	r0, [r9, #1]
   175c8:	orr	r5, r6, r0, lsl #16
   175cc:	ldrb	r0, [r9]
   175d0:	movw	r1, #29281	; 0x7261
   175d4:	movt	r1, #24946	; 0x6172
   175d8:	subs	r1, sl, r1
   175dc:	orr	r0, r5, r0, lsl #24
   175e0:	sbcs	r1, r0, lr
   175e4:	bcs	17690 <main@@Base+0x1450>
   175e8:	movw	r1, #28004	; 0x6d64
   175ec:	movt	r1, #28257	; 0x6e61
   175f0:	cmp	r0, r1
   175f4:	bhi	17818 <main@@Base+0x15d8>
   175f8:	ldr	r5, [sp, #44]	; 0x2c
   175fc:	movw	r1, #25975	; 0x6577
   17600:	movt	r1, #26220	; 0x666c
   17604:	cmp	r0, r1
   17608:	bhi	1792c <main@@Base+0x16ec>
   1760c:	movw	r1, #27759	; 0x6c6f
   17610:	movt	r1, #25455	; 0x636f
   17614:	eor	r2, r0, r1
   17618:	and	r1, sl, #-16777216	; 0xff000000
   1761c:	eor	r3, r1, #1912602624	; 0x72000000
   17620:	orrs	r2, r3, r2
   17624:	beq	1820c <main@@Base+0x1fcc>
   17628:	movw	r2, #25965	; 0x656d
   1762c:	ldr	sl, [sp, #36]	; 0x24
   17630:	eor	r1, r1, #2030043136	; 0x79000000
   17634:	movt	r2, #25966	; 0x656e
   17638:	eor	r0, r0, r2
   1763c:	orrs	r0, r1, r0
   17640:	bne	18810 <main@@Base+0x25d0>
   17644:	cmp	r8, #6
   17648:	ldr	r8, [sp, #40]	; 0x28
   1764c:	mov	r1, r9
   17650:	blt	19a7c <main@@Base+0x383c>
   17654:	ldr	r1, [sp, #32]
   17658:	mov	r2, r9
   1765c:	ldrb	r0, [r2, #5]!
   17660:	ldr	r1, [r1]
   17664:	cmp	r1, #0
   17668:	beq	189b0 <main@@Base+0x2770>
   1766c:	cmp	r0, #33	; 0x21
   17670:	bcc	17680 <main@@Base+0x1440>
   17674:	cmp	r0, #58	; 0x3a
   17678:	mov	r1, r9
   1767c:	bne	19a7c <main@@Base+0x383c>
   17680:	ldr	r0, [sp, #32]
   17684:	mov	r1, #0
   17688:	str	r1, [r0]
   1768c:	b	189c0 <main@@Base+0x2780>
   17690:	movw	r1, #0
   17694:	movt	r1, #26163	; 0x6633
   17698:	subs	r1, sl, r1
   1769c:	sbcs	r1, r0, lr
   176a0:	bcs	178a8 <main@@Base+0x1668>
   176a4:	movw	r1, #29281	; 0x7261
   176a8:	ldr	r5, [sp, #44]	; 0x2c
   176ac:	movt	r1, #24946	; 0x6172
   176b0:	eor	r2, sl, r1
   176b4:	eor	r1, r0, lr
   176b8:	orrs	r2, r2, r1
   176bc:	bne	179ac <main@@Base+0x176c>
   176c0:	add	sl, r9, #8
   176c4:	mov	r0, #8
   176c8:	sub	ip, r5, sl
   176cc:	cmp	ip, #8
   176d0:	movcc	r0, ip
   176d4:	and	r0, r0, #15
   176d8:	sub	r0, r0, #1
   176dc:	cmp	r0, #7
   176e0:	bhi	196c8 <main@@Base+0x3488>
   176e4:	add	r2, pc, #36	; 0x24
   176e8:	mov	r1, #0
   176ec:	mov	lr, #0
   176f0:	mov	r8, #0
   176f4:	mov	r6, #0
   176f8:	mov	r3, #0
   176fc:	mov	r4, #0
   17700:	mov	r7, #0
   17704:	ldr	r5, [r2, r0, lsl #2]
   17708:	mov	r0, #0
   1770c:	add	pc, r2, r5
   17710:	andeq	r0, r0, r4, rrx
   17714:	andeq	r0, r0, ip, asr r0
   17718:	andeq	r0, r0, r4, asr r0
   1771c:	andeq	r0, r0, ip, asr #32
   17720:	andeq	r0, r0, r0, asr #32
   17724:	andeq	r0, r0, r4, lsr r0
   17728:	andeq	r0, r0, r4, lsr #32
   1772c:	andeq	r0, r0, r0, lsr #32
   17730:	ldrb	lr, [r9, #15]
   17734:	ldrb	r0, [r9, #14]
   17738:	mov	r8, r1
   1773c:	orr	r0, lr, r0, lsl #8
   17740:	mov	r1, r0
   17744:	ldrb	r0, [r9, #13]
   17748:	mov	r6, r8
   1774c:	orr	r1, r1, r0, lsl #16
   17750:	ldrb	r0, [r9, #12]
   17754:	mov	r3, r6
   17758:	orr	r1, r1, r0, lsl #24
   1775c:	ldrb	r0, [r9, #11]
   17760:	orr	r4, r0, r3
   17764:	ldrb	r0, [r9, #10]
   17768:	orr	r7, r4, r0, lsl #8
   1776c:	ldrb	r0, [r9, #9]
   17770:	orr	r0, r7, r0, lsl #16
   17774:	ldrb	r2, [sl]
   17778:	movw	r7, #26227	; 0x6673
   1777c:	movt	r7, #31087	; 0x796f
   17780:	orr	r2, r0, r2, lsl #24
   17784:	movw	r0, #26989	; 0x696d
   17788:	movt	r0, #29810	; 0x7472
   1778c:	subs	r0, r0, r1
   17790:	sbcs	r0, r7, r2
   17794:	bcc	1813c <main@@Base+0x1efc>
   17798:	movw	r0, #29797	; 0x7465
   1779c:	ldr	r5, [sp, #44]	; 0x2c
   177a0:	eor	r3, r2, r7
   177a4:	movt	r0, #28530	; 0x6f72
   177a8:	eor	r0, r1, r0
   177ac:	orrs	r0, r0, r3
   177b0:	beq	18604 <main@@Base+0x23c4>
   177b4:	movw	r0, #27763	; 0x6c73
   177b8:	movt	r0, #28527	; 0x6f6f
   177bc:	eor	r0, r1, r0
   177c0:	movw	r1, #26210	; 0x6662
   177c4:	movt	r1, #31087	; 0x796f
   177c8:	eor	r1, r2, r1
   177cc:	orrs	r0, r0, r1
   177d0:	bne	196c8 <main@@Base+0x3488>
   177d4:	cmp	ip, #9
   177d8:	blt	196c8 <main@@Base+0x3488>
   177dc:	ldr	r2, [sp, #32]
   177e0:	mov	r1, r9
   177e4:	ldrb	r0, [r1, #16]!
   177e8:	ldr	r2, [r2]
   177ec:	cmp	r2, #0
   177f0:	beq	18cd4 <main@@Base+0x2a94>
   177f4:	cmp	r0, #33	; 0x21
   177f8:	bcc	17804 <main@@Base+0x15c4>
   177fc:	cmp	r0, #58	; 0x3a
   17800:	bne	196c8 <main@@Base+0x3488>
   17804:	ldr	r0, [sp, #32]
   17808:	mov	r2, #0
   1780c:	str	r2, [r0]
   17810:	b	18ce0 <main@@Base+0x2aa0>
   17814:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   17818:	ldr	r5, [sp, #44]	; 0x2c
   1781c:	movw	r1, #29555	; 0x7373
   17820:	movt	r1, #29797	; 0x7465
   17824:	cmp	r0, r1
   17828:	bhi	17a7c <main@@Base+0x183c>
   1782c:	movw	r3, #24430	; 0x5f6e
   17830:	movw	r2, #29285	; 0x7265
   17834:	movt	r3, #28276	; 0x6e74
   17838:	movt	r2, #28769	; 0x7061
   1783c:	subs	r1, sl, r3
   17840:	sbcs	r1, r0, r2
   17844:	bcs	17c1c <main@@Base+0x19dc>
   17848:	movw	r1, #28005	; 0x6d65
   1784c:	movt	r1, #28257	; 0x6e61
   17850:	teq	r0, r1
   17854:	bne	1a5ac <main@@Base+0x436c>
   17858:	cmp	r8, #5
   1785c:	ldr	r8, [sp, #40]	; 0x28
   17860:	ldr	sl, [sp, #36]	; 0x24
   17864:	mov	r1, r9
   17868:	blt	19ce4 <main@@Base+0x3aa4>
   1786c:	ldr	r1, [sp, #32]
   17870:	mov	r2, r9
   17874:	ldrb	r0, [r2, #4]!
   17878:	ldr	r1, [r1]
   1787c:	cmp	r1, #0
   17880:	beq	18a90 <main@@Base+0x2850>
   17884:	cmp	r0, #33	; 0x21
   17888:	bcc	17898 <main@@Base+0x1658>
   1788c:	cmp	r0, #58	; 0x3a
   17890:	mov	r1, r9
   17894:	bne	19ce4 <main@@Base+0x3aa4>
   17898:	ldr	r0, [sp, #32]
   1789c:	mov	r1, #0
   178a0:	str	r1, [r0]
   178a4:	b	18aa0 <main@@Base+0x2860>
   178a8:	movw	r2, #29544	; 0x7368
   178ac:	ldr	r5, [sp, #44]	; 0x2c
   178b0:	movt	r2, #26721	; 0x6861
   178b4:	subs	r1, sl, r2
   178b8:	sbcs	r1, r0, lr
   178bc:	bcs	17ad8 <main@@Base+0x1898>
   178c0:	movw	r1, #0
   178c4:	bfc	sl, #0, #16
   178c8:	eor	r0, r0, lr
   178cc:	movt	r1, #26163	; 0x6633
   178d0:	eor	r1, sl, r1
   178d4:	orrs	r0, r1, r0
   178d8:	bne	1a5ac <main@@Base+0x436c>
   178dc:	cmp	r8, #7
   178e0:	ldr	r8, [sp, #40]	; 0x28
   178e4:	ldr	sl, [sp, #36]	; 0x24
   178e8:	mov	r7, r9
   178ec:	blt	19338 <main@@Base+0x30f8>
   178f0:	ldr	r2, [sp, #32]
   178f4:	mov	r1, r9
   178f8:	ldrb	r0, [r1, #6]!
   178fc:	ldr	r2, [r2]
   17900:	cmp	r2, #0
   17904:	beq	188e8 <main@@Base+0x26a8>
   17908:	cmp	r0, #33	; 0x21
   1790c:	bcc	1791c <main@@Base+0x16dc>
   17910:	cmp	r0, #58	; 0x3a
   17914:	mov	r7, r9
   17918:	bne	19338 <main@@Base+0x30f8>
   1791c:	ldr	r0, [sp, #32]
   17920:	mov	r2, #0
   17924:	str	r2, [r0]
   17928:	b	188f8 <main@@Base+0x26b8>
   1792c:	movw	r1, #65535	; 0xffff
   17930:	movw	r2, #30309	; 0x7665
   17934:	movw	r3, #28530	; 0x6f72
   17938:	movt	r1, #26735	; 0x686f
   1793c:	movt	r2, #26990	; 0x696e
   17940:	movt	r3, #28276	; 0x6e74
   17944:	cmp	r0, r1
   17948:	bhi	17e00 <main@@Base+0x1bc0>
   1794c:	movw	r1, #25976	; 0x6578
   17950:	movt	r1, #26220	; 0x666c
   17954:	teq	r0, r1
   17958:	bne	1a5ac <main@@Base+0x436c>
   1795c:	cmp	r8, #5
   17960:	ldr	r8, [sp, #40]	; 0x28
   17964:	ldr	sl, [sp, #36]	; 0x24
   17968:	mov	r4, r9
   1796c:	blt	19d38 <main@@Base+0x3af8>
   17970:	ldr	r2, [sp, #32]
   17974:	mov	r1, r9
   17978:	ldrb	r0, [r1, #4]!
   1797c:	ldr	r2, [r2]
   17980:	cmp	r2, #0
   17984:	beq	18ac8 <main@@Base+0x2888>
   17988:	cmp	r0, #33	; 0x21
   1798c:	bcc	1799c <main@@Base+0x175c>
   17990:	cmp	r0, #58	; 0x3a
   17994:	mov	r4, r9
   17998:	bne	19d38 <main@@Base+0x3af8>
   1799c:	ldr	r0, [sp, #32]
   179a0:	mov	r2, #0
   179a4:	str	r2, [r0]
   179a8:	b	18ad8 <main@@Base+0x2898>
   179ac:	movw	r2, #28788	; 0x7074
   179b0:	movt	r2, #25965	; 0x656d
   179b4:	subs	r2, sl, r2
   179b8:	sbcs	r2, r0, lr
   179bc:	bcs	17e70 <main@@Base+0x1c30>
   179c0:	movw	r0, #28524	; 0x6f6c
   179c4:	movt	r0, #25199	; 0x626f
   179c8:	eor	r0, sl, r0
   179cc:	orrs	r0, r0, r1
   179d0:	beq	185b4 <main@@Base+0x2374>
   179d4:	movw	r0, #29541	; 0x7365
   179d8:	movt	r0, #25185	; 0x6261
   179dc:	eor	r0, sl, r0
   179e0:	orrs	r0, r0, r1
   179e4:	bne	1a5ac <main@@Base+0x436c>
   179e8:	add	r7, r9, #8
   179ec:	mov	r1, #8
   179f0:	ldr	r8, [sp, #40]	; 0x28
   179f4:	ldr	sl, [sp, #36]	; 0x24
   179f8:	sub	r0, r5, r7
   179fc:	cmp	r0, #8
   17a00:	movcc	r1, r0
   17a04:	and	r2, r1, #15
   17a08:	sub	r1, r2, #2
   17a0c:	cmp	r1, #7
   17a10:	bcs	18b38 <main@@Base+0x28f8>
   17a14:	ldrb	r1, [r9, #9]
   17a18:	lsl	r2, r1, #16
   17a1c:	mov	r1, #0
   17a20:	ldrb	r3, [r7]
   17a24:	orr	r2, r2, r3, lsl #24
   17a28:	movw	r3, #0
   17a2c:	movt	r3, #13876	; 0x3634
   17a30:	eor	r2, r2, r3
   17a34:	orrs	r1, r1, r2
   17a38:	bne	1ea98 <main@@Base+0x8858>
   17a3c:	cmp	r0, #3
   17a40:	blt	1ea98 <main@@Base+0x8858>
   17a44:	ldr	r2, [sp, #32]
   17a48:	mov	r1, r9
   17a4c:	ldrb	r0, [r1, #10]!
   17a50:	ldr	r2, [r2]
   17a54:	cmp	r2, #0
   17a58:	beq	190e0 <main@@Base+0x2ea0>
   17a5c:	cmp	r0, #33	; 0x21
   17a60:	bcc	17a6c <main@@Base+0x182c>
   17a64:	cmp	r0, #58	; 0x3a
   17a68:	bne	1ea98 <main@@Base+0x8858>
   17a6c:	ldr	r0, [sp, #32]
   17a70:	mov	r2, #0
   17a74:	str	r2, [r0]
   17a78:	b	190ec <main@@Base+0x2eac>
   17a7c:	and	r6, sl, #-16777216	; 0xff000000
   17a80:	eor	r4, r0, lr
   17a84:	eor	r1, r6, #872415232	; 0x34000000
   17a88:	orrs	r1, r1, r4
   17a8c:	bne	17f10 <main@@Base+0x1cd0>
   17a90:	cmp	r8, #6
   17a94:	mov	r7, r9
   17a98:	blt	193f8 <main@@Base+0x31b8>
   17a9c:	ldr	r2, [sp, #32]
   17aa0:	mov	r1, r9
   17aa4:	ldrb	r0, [r1, #5]!
   17aa8:	ldr	r2, [r2]
   17aac:	cmp	r2, #0
   17ab0:	beq	18920 <main@@Base+0x26e0>
   17ab4:	cmp	r0, #33	; 0x21
   17ab8:	bcc	17ac8 <main@@Base+0x1888>
   17abc:	cmp	r0, #58	; 0x3a
   17ac0:	mov	r7, r9
   17ac4:	bne	193f8 <main@@Base+0x31b8>
   17ac8:	ldr	r0, [sp, #32]
   17acc:	mov	r2, #0
   17ad0:	str	r2, [r0]
   17ad4:	b	18930 <main@@Base+0x26f0>
   17ad8:	eor	r2, sl, r2
   17adc:	eor	r1, r0, lr
   17ae0:	orrs	r2, r2, r1
   17ae4:	bne	17f60 <main@@Base+0x1d20>
   17ae8:	add	sl, r9, #8
   17aec:	mov	r0, #8
   17af0:	sub	ip, r5, sl
   17af4:	cmp	ip, #8
   17af8:	movcc	r0, ip
   17afc:	and	r0, r0, #15
   17b00:	sub	r0, r0, #1
   17b04:	cmp	r0, #7
   17b08:	bhi	196c8 <main@@Base+0x3488>
   17b0c:	add	r2, pc, #36	; 0x24
   17b10:	mov	r1, #0
   17b14:	mov	lr, #0
   17b18:	mov	r8, #0
   17b1c:	mov	r7, #0
   17b20:	mov	r3, #0
   17b24:	mov	r6, #0
   17b28:	mov	r4, #0
   17b2c:	ldr	r5, [r2, r0, lsl #2]
   17b30:	mov	r0, #0
   17b34:	add	pc, r2, r5
   17b38:	andeq	r0, r0, r4, rrx
   17b3c:	andeq	r0, r0, ip, asr r0
   17b40:	andeq	r0, r0, r4, asr r0
   17b44:	andeq	r0, r0, ip, asr #32
   17b48:	andeq	r0, r0, r0, asr #32
   17b4c:	andeq	r0, r0, r4, lsr r0
   17b50:	andeq	r0, r0, r4, lsr #32
   17b54:	andeq	r0, r0, r0, lsr #32
   17b58:	ldrb	lr, [r9, #15]
   17b5c:	ldrb	r0, [r9, #14]
   17b60:	mov	r8, r1
   17b64:	orr	r0, lr, r0, lsl #8
   17b68:	mov	r1, r0
   17b6c:	ldrb	r0, [r9, #13]
   17b70:	mov	r7, r8
   17b74:	orr	r1, r1, r0, lsl #16
   17b78:	ldrb	r0, [r9, #12]
   17b7c:	mov	r3, r7
   17b80:	orr	r1, r1, r0, lsl #24
   17b84:	ldrb	r0, [r9, #11]
   17b88:	orr	r6, r0, r3
   17b8c:	ldrb	r0, [r9, #10]
   17b90:	orr	r4, r6, r0, lsl #8
   17b94:	ldrb	r0, [r9, #9]
   17b98:	orr	r0, r4, r0, lsl #16
   17b9c:	ldrb	r2, [sl]
   17ba0:	movw	r3, #30257	; 0x7631
   17ba4:	movt	r3, #26222	; 0x666e
   17ba8:	orr	r2, r0, r2, lsl #24
   17bac:	subs	r0, r1, r3
   17bb0:	movw	r0, #13407	; 0x345f
   17bb4:	movt	r0, #29494	; 0x7336
   17bb8:	sbcs	r0, r2, r0
   17bbc:	bcs	18530 <main@@Base+0x22f0>
   17bc0:	eor	r0, r1, r3
   17bc4:	ldr	r1, [sp, #24]
   17bc8:	ldr	r5, [sp, #44]	; 0x2c
   17bcc:	eor	r1, r2, r1
   17bd0:	orrs	r0, r0, r1
   17bd4:	bne	196c8 <main@@Base+0x3488>
   17bd8:	ldr	r8, [sp, #40]	; 0x28
   17bdc:	cmp	ip, #9
   17be0:	blt	199c8 <main@@Base+0x3788>
   17be4:	ldr	r2, [sp, #32]
   17be8:	mov	r1, r9
   17bec:	ldrb	r0, [r1, #16]!
   17bf0:	ldr	r2, [r2]
   17bf4:	cmp	r2, #0
   17bf8:	beq	18db4 <main@@Base+0x2b74>
   17bfc:	cmp	r0, #33	; 0x21
   17c00:	bcc	17c0c <main@@Base+0x19cc>
   17c04:	cmp	r0, #58	; 0x3a
   17c08:	bne	199c8 <main@@Base+0x3788>
   17c0c:	ldr	r0, [sp, #32]
   17c10:	mov	r2, #0
   17c14:	str	r2, [r0]
   17c18:	b	18dc0 <main@@Base+0x2b80>
   17c1c:	eor	r1, sl, r3
   17c20:	eor	r2, r0, r2
   17c24:	orrs	r1, r1, r2
   17c28:	bne	1825c <main@@Base+0x201c>
   17c2c:	add	r1, r9, #8
   17c30:	mov	r2, #8
   17c34:	ldr	sl, [sp, #36]	; 0x24
   17c38:	sub	r0, r5, r1
   17c3c:	cmp	r0, #8
   17c40:	movcs	r0, r2
   17c44:	and	r0, r0, #15
   17c48:	sub	r2, r0, #1
   17c4c:	cmp	r2, #7
   17c50:	bhi	187a4 <main@@Base+0x2564>
   17c54:	add	r4, pc, #36	; 0x24
   17c58:	mov	r8, #0
   17c5c:	mov	ip, #0
   17c60:	mov	lr, #0
   17c64:	mov	r7, #0
   17c68:	mov	r3, #0
   17c6c:	mov	r6, #0
   17c70:	mov	r5, #0
   17c74:	ldr	r0, [r4, r2, lsl #2]
   17c78:	mov	r2, #0
   17c7c:	add	pc, r4, r0
   17c80:	andeq	r0, r0, r4, rrx
   17c84:	andeq	r0, r0, ip, asr r0
   17c88:	andeq	r0, r0, r4, asr r0
   17c8c:	andeq	r0, r0, ip, asr #32
   17c90:	andeq	r0, r0, r0, asr #32
   17c94:	andeq	r0, r0, r4, lsr r0
   17c98:	andeq	r0, r0, r4, lsr #32
   17c9c:	andeq	r0, r0, r0, lsr #32
   17ca0:	ldrb	ip, [r9, #15]
   17ca4:	ldrb	r0, [r9, #14]
   17ca8:	mov	lr, r8
   17cac:	orr	r0, ip, r0, lsl #8
   17cb0:	mov	r8, r0
   17cb4:	ldrb	r0, [r9, #13]
   17cb8:	mov	r7, lr
   17cbc:	orr	r8, r8, r0, lsl #16
   17cc0:	ldrb	r0, [r9, #12]
   17cc4:	mov	r3, r7
   17cc8:	orr	r8, r8, r0, lsl #24
   17ccc:	ldrb	r0, [r9, #11]
   17cd0:	orr	r6, r0, r3
   17cd4:	ldrb	r0, [r9, #10]
   17cd8:	orr	r5, r6, r0, lsl #8
   17cdc:	ldrb	r0, [r9, #9]
   17ce0:	orr	r2, r5, r0, lsl #16
   17ce4:	ldrb	r3, [r1]
   17ce8:	movw	r0, #25445	; 0x6365
   17cec:	ldr	r5, [sp, #44]	; 0x2c
   17cf0:	movt	r0, #28769	; 0x7061
   17cf4:	eor	r0, r8, r0
   17cf8:	orr	r2, r2, r3, lsl #24
   17cfc:	movw	r3, #25971	; 0x6573
   17d00:	movt	r3, #24941	; 0x616d
   17d04:	eor	r2, r2, r3
   17d08:	orrs	r0, r0, r2
   17d0c:	bne	187a4 <main@@Base+0x2564>
   17d10:	add	r8, r9, #16
   17d14:	mov	r1, #8
   17d18:	sub	r0, r5, r8
   17d1c:	cmp	r0, #8
   17d20:	movcc	r1, r0
   17d24:	and	r1, r1, #15
   17d28:	sub	r2, r1, #1
   17d2c:	cmp	r2, #7
   17d30:	bhi	1aadc <main@@Base+0x489c>
   17d34:	add	r4, pc, #24
   17d38:	mov	r1, #0
   17d3c:	mov	r3, #0
   17d40:	mov	r6, #0
   17d44:	mov	r5, #0
   17d48:	ldr	r7, [r4, r2, lsl #2]
   17d4c:	mov	r2, #0
   17d50:	add	pc, r4, r7
   17d54:	andeq	r0, r0, r4, asr #32
   17d58:	andeq	r0, r0, ip, lsr r0
   17d5c:	andeq	r0, r0, r4, lsr r0
   17d60:	andeq	r0, r0, r8, lsr #32
   17d64:	andeq	r0, r0, r0, lsr #32
   17d68:	andeq	r0, r0, r0, lsr #32
   17d6c:	andeq	r0, r0, r0, lsr #32
   17d70:	andeq	r0, r0, r0, lsr #32
   17d74:	ldrb	r2, [r9, #20]
   17d78:	lsl	r2, r2, #24
   17d7c:	ldrb	r3, [r9, #19]
   17d80:	orr	r3, r3, r1
   17d84:	mov	r1, r2
   17d88:	ldrb	r2, [r9, #18]
   17d8c:	orr	r6, r3, r2, lsl #8
   17d90:	ldrb	r2, [r9, #17]
   17d94:	orr	r5, r6, r2, lsl #16
   17d98:	ldrb	r2, [r8]
   17d9c:	movw	r3, #25971	; 0x6573
   17da0:	and	r1, r1, #-16777216	; 0xff000000
   17da4:	movt	r3, #24436	; 0x5f74
   17da8:	eor	r1, r1, #1946157056	; 0x74000000
   17dac:	orr	r2, r5, r2, lsl #24
   17db0:	ldr	r5, [sp, #44]	; 0x2c
   17db4:	eor	r2, r2, r3
   17db8:	orrs	r1, r1, r2
   17dbc:	bne	1aadc <main@@Base+0x489c>
   17dc0:	cmp	r0, #6
   17dc4:	blt	1aadc <main@@Base+0x489c>
   17dc8:	ldr	r2, [sp, #32]
   17dcc:	mov	r1, r9
   17dd0:	ldrb	r0, [r1, #21]!
   17dd4:	ldr	r2, [r2]
   17dd8:	cmp	r2, #0
   17ddc:	beq	19634 <main@@Base+0x33f4>
   17de0:	cmp	r0, #33	; 0x21
   17de4:	bcc	17df0 <main@@Base+0x1bb0>
   17de8:	cmp	r0, #58	; 0x3a
   17dec:	bne	1aadc <main@@Base+0x489c>
   17df0:	ldr	r0, [sp, #32]
   17df4:	mov	r2, #0
   17df8:	str	r2, [r0]
   17dfc:	b	19640 <main@@Base+0x3400>
   17e00:	subs	r1, sl, r3
   17e04:	sbcs	r1, r0, r2
   17e08:	bcs	182c0 <main@@Base+0x2080>
   17e0c:	movw	r1, #0
   17e10:	bfc	r0, #0, #16
   17e14:	movt	r1, #26736	; 0x6870
   17e18:	teq	r0, r1
   17e1c:	bne	1a5ac <main@@Base+0x436c>
   17e20:	cmp	r8, #3
   17e24:	ldr	r8, [sp, #40]	; 0x28
   17e28:	ldr	sl, [sp, #36]	; 0x24
   17e2c:	mov	r7, r9
   17e30:	blt	1aca8 <main@@Base+0x4a68>
   17e34:	ldr	r2, [sp, #32]
   17e38:	mov	r1, r9
   17e3c:	ldrb	r0, [r1, #2]!
   17e40:	ldr	r2, [r2]
   17e44:	cmp	r2, #0
   17e48:	beq	18d0c <main@@Base+0x2acc>
   17e4c:	cmp	r0, #33	; 0x21
   17e50:	bcc	17e60 <main@@Base+0x1c20>
   17e54:	cmp	r0, #58	; 0x3a
   17e58:	mov	r7, r9
   17e5c:	bne	1aca8 <main@@Base+0x4a68>
   17e60:	ldr	r0, [sp, #32]
   17e64:	mov	r2, #0
   17e68:	str	r2, [r0]
   17e6c:	b	18d1c <main@@Base+0x2adc>
   17e70:	mvn	r2, #-1711276032	; 0x9a000000
   17e74:	subs	r2, r2, sl
   17e78:	sbcs	r2, lr, r0
   17e7c:	bcc	1834c <main@@Base+0x210c>
   17e80:	movw	r0, #28788	; 0x7074
   17e84:	movt	r0, #25965	; 0x656d
   17e88:	eor	r0, sl, r0
   17e8c:	orrs	r0, r0, r1
   17e90:	bne	1a5ac <main@@Base+0x436c>
   17e94:	add	r7, r9, #8
   17e98:	mov	r1, #8
   17e9c:	mov	r2, #-268435456	; 0xf0000000
   17ea0:	ldr	r8, [sp, #40]	; 0x28
   17ea4:	ldr	sl, [sp, #36]	; 0x24
   17ea8:	sub	r0, r5, r7
   17eac:	cmp	r0, #8
   17eb0:	movcc	r1, r0
   17eb4:	add	r1, r2, r1, lsl #28
   17eb8:	asr	r1, r1, #28
   17ebc:	cmp	r1, #0
   17ec0:	blt	1ea98 <main@@Base+0x8858>
   17ec4:	ldrb	r1, [r7]
   17ec8:	cmp	r1, #121	; 0x79
   17ecc:	bne	1ea98 <main@@Base+0x8858>
   17ed0:	cmp	r0, #2
   17ed4:	blt	1ea98 <main@@Base+0x8858>
   17ed8:	ldr	r2, [sp, #32]
   17edc:	mov	r1, r9
   17ee0:	ldrb	r0, [r1, #9]!
   17ee4:	ldr	r2, [r2]
   17ee8:	cmp	r2, #0
   17eec:	beq	19898 <main@@Base+0x3658>
   17ef0:	cmp	r0, #33	; 0x21
   17ef4:	bcc	17f00 <main@@Base+0x1cc0>
   17ef8:	cmp	r0, #58	; 0x3a
   17efc:	bne	1ea98 <main@@Base+0x8858>
   17f00:	ldr	r0, [sp, #32]
   17f04:	mov	r2, #0
   17f08:	str	r2, [r0]
   17f0c:	b	198a4 <main@@Base+0x3664>
   17f10:	teq	r0, lr
   17f14:	bne	1903c <main@@Base+0x2dfc>
   17f18:	cmp	r8, #5
   17f1c:	mov	r1, r9
   17f20:	blt	1a0a4 <main@@Base+0x3e64>
   17f24:	ldr	r1, [sp, #32]
   17f28:	mov	r2, r9
   17f2c:	ldrb	r0, [r2, #4]!
   17f30:	ldr	r1, [r1]
   17f34:	cmp	r1, #0
   17f38:	beq	18b00 <main@@Base+0x28c0>
   17f3c:	cmp	r0, #33	; 0x21
   17f40:	bcc	17f50 <main@@Base+0x1d10>
   17f44:	cmp	r0, #58	; 0x3a
   17f48:	mov	r1, r9
   17f4c:	bne	1a0a4 <main@@Base+0x3e64>
   17f50:	ldr	r0, [sp, #32]
   17f54:	mov	r1, #0
   17f58:	str	r1, [r0]
   17f5c:	b	18b10 <main@@Base+0x28d0>
   17f60:	movw	r7, #24431	; 0x5f6f
   17f64:	ldr	r8, [sp, #40]	; 0x28
   17f68:	movw	r3, #25460	; 0x6374
   17f6c:	movt	r7, #28530	; 0x6f72
   17f70:	movt	r3, #30309	; 0x7665
   17f74:	subs	r2, sl, r7
   17f78:	sbcs	r2, r0, r3
   17f7c:	bcs	183c4 <main@@Base+0x2184>
   17f80:	movw	r0, #29556	; 0x7374
   17f84:	movt	r0, #28261	; 0x6e65
   17f88:	eor	r0, sl, r0
   17f8c:	orrs	r0, r0, r1
   17f90:	bne	1a5b0 <main@@Base+0x4370>
   17f94:	add	r1, r9, #8
   17f98:	mov	r2, #8
   17f9c:	ldr	sl, [sp, #36]	; 0x24
   17fa0:	sub	r0, r5, r1
   17fa4:	cmp	r0, #8
   17fa8:	movcs	r0, r2
   17fac:	and	r0, r0, #15
   17fb0:	sub	r2, r0, #1
   17fb4:	cmp	r2, #7
   17fb8:	bhi	187a8 <main@@Base+0x2568>
   17fbc:	add	r5, pc, #36	; 0x24
   17fc0:	mov	r8, #0
   17fc4:	mov	ip, #0
   17fc8:	mov	lr, #0
   17fcc:	mov	r7, #0
   17fd0:	mov	r3, #0
   17fd4:	mov	r6, #0
   17fd8:	mov	r4, #0
   17fdc:	ldr	r0, [r5, r2, lsl #2]
   17fe0:	mov	r2, #0
   17fe4:	add	pc, r5, r0
   17fe8:	andeq	r0, r0, r4, rrx
   17fec:	andeq	r0, r0, ip, asr r0
   17ff0:	andeq	r0, r0, r4, asr r0
   17ff4:	andeq	r0, r0, ip, asr #32
   17ff8:	andeq	r0, r0, r0, asr #32
   17ffc:	andeq	r0, r0, r4, lsr r0
   18000:	andeq	r0, r0, r4, lsr #32
   18004:	andeq	r0, r0, r0, lsr #32
   18008:	ldrb	ip, [r9, #15]
   1800c:	ldrb	r0, [r9, #14]
   18010:	mov	lr, r8
   18014:	orr	r0, ip, r0, lsl #8
   18018:	mov	r8, r0
   1801c:	ldrb	r0, [r9, #13]
   18020:	mov	r7, lr
   18024:	orr	r8, r8, r0, lsl #16
   18028:	ldrb	r0, [r9, #12]
   1802c:	mov	r3, r7
   18030:	orr	r8, r8, r0, lsl #24
   18034:	ldrb	r0, [r9, #11]
   18038:	orr	r6, r0, r3
   1803c:	ldrb	r0, [r9, #10]
   18040:	orr	r4, r6, r0, lsl #8
   18044:	ldrb	r0, [r9, #9]
   18048:	orr	r2, r4, r0, lsl #16
   1804c:	ldrb	r3, [r1]
   18050:	movw	r0, #25205	; 0x6275
   18054:	ldr	r5, [sp, #44]	; 0x2c
   18058:	movt	r0, #24948	; 0x6174
   1805c:	eor	r0, r8, r0
   18060:	ldr	r8, [sp, #40]	; 0x28
   18064:	orr	r2, r2, r3, lsl #24
   18068:	movw	r3, #26220	; 0x666c
   1806c:	movt	r3, #25956	; 0x6564
   18070:	eor	r2, r2, r3
   18074:	orrs	r0, r0, r2
   18078:	bne	187a8 <main@@Base+0x2568>
   1807c:	add	r7, r9, #16
   18080:	mov	r1, #8
   18084:	sub	r0, r5, r7
   18088:	cmp	r0, #8
   1808c:	movcc	r1, r0
   18090:	and	r1, r1, #15
   18094:	sub	r2, r1, #1
   18098:	cmp	r2, #7
   1809c:	bhi	1ea98 <main@@Base+0x8858>
   180a0:	add	r3, pc, #8
   180a4:	mov	r1, #0
   180a8:	ldr	r2, [r3, r2, lsl #2]
   180ac:	add	pc, r3, r2
   180b0:	andeq	r0, r0, r4, lsr r0
   180b4:	andeq	r0, r0, ip, lsr #32
   180b8:	andeq	r0, r0, r4, lsr #32
   180bc:	andeq	r0, r0, r0, lsr #32
   180c0:	andeq	r0, r0, r0, lsr #32
   180c4:	andeq	r0, r0, r0, lsr #32
   180c8:	andeq	r0, r0, r0, lsr #32
   180cc:	andeq	r0, r0, r0, lsr #32
   180d0:	ldrb	r1, [r9, #19]
   180d4:	ldrb	r2, [r9, #18]
   180d8:	orr	r1, r1, r2, lsl #8
   180dc:	ldrb	r2, [r9, #17]
   180e0:	orr	r1, r1, r2, lsl #16
   180e4:	ldrb	r2, [r7]
   180e8:	orr	r1, r1, r2, lsl #24
   180ec:	movw	r2, #25970	; 0x6572
   180f0:	movt	r2, #26214	; 0x6666
   180f4:	teq	r1, r2
   180f8:	bne	1ea98 <main@@Base+0x8858>
   180fc:	cmp	r0, #5
   18100:	blt	1ea98 <main@@Base+0x8858>
   18104:	ldr	r2, [sp, #32]
   18108:	mov	r1, r9
   1810c:	ldrb	r0, [r1, #20]!
   18110:	ldr	r2, [r2]
   18114:	cmp	r2, #0
   18118:	beq	1a104 <main@@Base+0x3ec4>
   1811c:	cmp	r0, #33	; 0x21
   18120:	bcc	1812c <main@@Base+0x1eec>
   18124:	cmp	r0, #58	; 0x3a
   18128:	bne	1ea98 <main@@Base+0x8858>
   1812c:	ldr	r0, [sp, #32]
   18130:	mov	r2, #0
   18134:	str	r2, [r0]
   18138:	b	1a110 <main@@Base+0x3ed0>
   1813c:	movw	r0, #27749	; 0x6c65
   18140:	movw	r3, #26228	; 0x6674
   18144:	ldr	r5, [sp, #44]	; 0x2c
   18148:	ldr	r8, [sp, #40]	; 0x28
   1814c:	movt	r0, #24930	; 0x6162
   18150:	movt	r3, #31087	; 0x796f
   18154:	eor	r0, r1, r0
   18158:	eor	r3, r2, r3
   1815c:	orrs	r0, r0, r3
   18160:	beq	18720 <main@@Base+0x24e0>
   18164:	movw	r0, #26990	; 0x696e
   18168:	movt	r0, #29810	; 0x7472
   1816c:	eor	r0, r1, r0
   18170:	eor	r1, r2, r7
   18174:	orrs	r0, r0, r1
   18178:	bne	196cc <main@@Base+0x348c>
   1817c:	add	r7, r9, #16
   18180:	mov	r1, #8
   18184:	sub	r0, r5, r7
   18188:	cmp	r0, #8
   1818c:	movcc	r1, r0
   18190:	and	r2, r1, #15
   18194:	sub	r1, r2, #2
   18198:	cmp	r1, #7
   1819c:	bcs	18b8c <main@@Base+0x294c>
   181a0:	ldrb	r1, [r9, #17]
   181a4:	ldr	sl, [sp, #36]	; 0x24
   181a8:	lsl	r2, r1, #16
   181ac:	mov	r1, #0
   181b0:	ldrb	r3, [r7]
   181b4:	orr	r2, r2, r3, lsl #24
   181b8:	movw	r3, #0
   181bc:	movt	r3, #26418	; 0x6732
   181c0:	eor	r3, r2, r3
   181c4:	orrs	r1, r1, r3
   181c8:	bne	18964 <main@@Base+0x2724>
   181cc:	cmp	r0, #3
   181d0:	blt	1ea98 <main@@Base+0x8858>
   181d4:	ldr	r2, [sp, #32]
   181d8:	mov	r1, r9
   181dc:	ldrb	r0, [r1, #18]!
   181e0:	ldr	r2, [r2]
   181e4:	cmp	r2, #0
   181e8:	beq	19114 <main@@Base+0x2ed4>
   181ec:	cmp	r0, #33	; 0x21
   181f0:	bcc	181fc <main@@Base+0x1fbc>
   181f4:	cmp	r0, #58	; 0x3a
   181f8:	bne	1ea98 <main@@Base+0x8858>
   181fc:	ldr	r0, [sp, #32]
   18200:	mov	r2, #0
   18204:	str	r2, [r0]
   18208:	b	19120 <main@@Base+0x2ee0>
   1820c:	cmp	r8, #6
   18210:	ldr	r8, [sp, #40]	; 0x28
   18214:	ldr	sl, [sp, #36]	; 0x24
   18218:	mov	r7, r9
   1821c:	blt	19ad0 <main@@Base+0x3890>
   18220:	ldr	r2, [sp, #32]
   18224:	mov	r1, r9
   18228:	ldrb	r0, [r1, #5]!
   1822c:	ldr	r2, [r2]
   18230:	cmp	r2, #0
   18234:	beq	189e8 <main@@Base+0x27a8>
   18238:	cmp	r0, #33	; 0x21
   1823c:	bcc	1824c <main@@Base+0x200c>
   18240:	cmp	r0, #58	; 0x3a
   18244:	mov	r7, r9
   18248:	bne	19ad0 <main@@Base+0x3890>
   1824c:	ldr	r0, [sp, #32]
   18250:	mov	r2, #0
   18254:	str	r2, [r0]
   18258:	b	189f8 <main@@Base+0x27b8>
   1825c:	ldr	sl, [sp, #36]	; 0x24
   18260:	movw	r1, #29440	; 0x7300
   18264:	bic	r0, r0, #255	; 0xff
   18268:	movt	r1, #28783	; 0x706f
   1826c:	teq	r0, r1
   18270:	bne	18810 <main@@Base+0x25d0>
   18274:	cmp	r8, #4
   18278:	ldr	r8, [sp, #40]	; 0x28
   1827c:	mov	r4, r9
   18280:	blt	1ae1c <main@@Base+0x4bdc>
   18284:	ldr	r2, [sp, #32]
   18288:	mov	r1, r9
   1828c:	ldrb	r0, [r1, #3]!
   18290:	ldr	r2, [r2]
   18294:	cmp	r2, #0
   18298:	beq	18d44 <main@@Base+0x2b04>
   1829c:	cmp	r0, #33	; 0x21
   182a0:	bcc	182b0 <main@@Base+0x2070>
   182a4:	cmp	r0, #58	; 0x3a
   182a8:	mov	r4, r9
   182ac:	bne	1ae1c <main@@Base+0x4bdc>
   182b0:	ldr	r0, [sp, #32]
   182b4:	mov	r2, #0
   182b8:	str	r2, [r0]
   182bc:	b	18d54 <main@@Base+0x2b14>
   182c0:	eor	r1, sl, r3
   182c4:	eor	r2, r0, r2
   182c8:	orrs	r1, r1, r2
   182cc:	bne	187b0 <main@@Base+0x2570>
   182d0:	add	r7, r9, #8
   182d4:	mov	r1, #8
   182d8:	mov	r2, #-268435456	; 0xf0000000
   182dc:	ldr	sl, [sp, #36]	; 0x24
   182e0:	sub	r0, r5, r7
   182e4:	cmp	r0, #8
   182e8:	movcc	r1, r0
   182ec:	add	r1, r2, r1, lsl #28
   182f0:	asr	r1, r1, #28
   182f4:	cmp	r1, #0
   182f8:	blt	1895c <main@@Base+0x271c>
   182fc:	ldrb	r1, [r7]
   18300:	cmp	r1, #121	; 0x79
   18304:	bne	1895c <main@@Base+0x271c>
   18308:	ldr	r8, [sp, #40]	; 0x28
   1830c:	cmp	r0, #2
   18310:	blt	1ea98 <main@@Base+0x8858>
   18314:	ldr	r2, [sp, #32]
   18318:	mov	r1, r9
   1831c:	ldrb	r0, [r1, #9]!
   18320:	ldr	r2, [r2]
   18324:	cmp	r2, #0
   18328:	beq	198cc <main@@Base+0x368c>
   1832c:	cmp	r0, #33	; 0x21
   18330:	bcc	1833c <main@@Base+0x20fc>
   18334:	cmp	r0, #58	; 0x3a
   18338:	bne	1ea98 <main@@Base+0x8858>
   1833c:	ldr	r0, [sp, #32]
   18340:	mov	r2, #0
   18344:	str	r2, [r0]
   18348:	b	198d8 <main@@Base+0x3698>
   1834c:	movw	r3, #0
   18350:	mov	r2, sl
   18354:	movt	r3, #26163	; 0x6633
   18358:	bfc	r2, #0, #16
   1835c:	subs	r3, r3, #65536	; 0x10000
   18360:	eor	r2, r2, r3
   18364:	sbc	r3, lr, #0
   18368:	eor	r0, r0, r3
   1836c:	orrs	r0, r2, r0
   18370:	bne	18820 <main@@Base+0x25e0>
   18374:	cmp	r8, #7
   18378:	ldr	r8, [sp, #40]	; 0x28
   1837c:	ldr	sl, [sp, #36]	; 0x24
   18380:	mov	r7, r9
   18384:	blt	1bce0 <main@@Base+0x5aa0>
   18388:	ldr	r2, [sp, #32]
   1838c:	mov	r1, r9
   18390:	ldrb	r0, [r1, #6]!
   18394:	ldr	r2, [r2]
   18398:	cmp	r2, #0
   1839c:	beq	18d7c <main@@Base+0x2b3c>
   183a0:	cmp	r0, #33	; 0x21
   183a4:	bcc	183b4 <main@@Base+0x2174>
   183a8:	cmp	r0, #58	; 0x3a
   183ac:	mov	r7, r9
   183b0:	bne	1bce0 <main@@Base+0x5aa0>
   183b4:	ldr	r0, [sp, #32]
   183b8:	mov	r2, #0
   183bc:	str	r2, [r0]
   183c0:	b	18d8c <main@@Base+0x2b4c>
   183c4:	eor	r1, sl, r7
   183c8:	eor	r0, r0, r3
   183cc:	orrs	r0, r1, r0
   183d0:	bne	1a5b0 <main@@Base+0x4370>
   183d4:	add	sl, r9, #8
   183d8:	mov	r1, #8
   183dc:	sub	lr, r5, sl
   183e0:	cmp	lr, #8
   183e4:	movcc	r1, lr
   183e8:	and	r1, r1, #15
   183ec:	sub	r2, r1, #1
   183f0:	cmp	r2, #7
   183f4:	bhi	196cc <main@@Base+0x348c>
   183f8:	add	r0, pc, #36	; 0x24
   183fc:	mov	r1, #0
   18400:	mov	ip, #0
   18404:	mov	r8, #0
   18408:	mov	r6, #0
   1840c:	mov	r3, #0
   18410:	mov	r4, #0
   18414:	mov	r7, #0
   18418:	ldr	r5, [r0, r2, lsl #2]
   1841c:	mov	r2, #0
   18420:	add	pc, r0, r5
   18424:	andeq	r0, r0, r4, rrx
   18428:	andeq	r0, r0, ip, asr r0
   1842c:	andeq	r0, r0, r4, asr r0
   18430:	andeq	r0, r0, ip, asr #32
   18434:	andeq	r0, r0, r0, asr #32
   18438:	andeq	r0, r0, r4, lsr r0
   1843c:	andeq	r0, r0, r4, lsr #32
   18440:	andeq	r0, r0, r0, lsr #32
   18444:	ldrb	ip, [r9, #15]
   18448:	ldrb	r0, [r9, #14]
   1844c:	mov	r8, r1
   18450:	orr	r0, ip, r0, lsl #8
   18454:	mov	r1, r0
   18458:	ldrb	r0, [r9, #13]
   1845c:	mov	r6, r8
   18460:	orr	r1, r1, r0, lsl #16
   18464:	ldrb	r0, [r9, #12]
   18468:	mov	r3, r6
   1846c:	orr	r1, r1, r0, lsl #24
   18470:	ldrb	r0, [r9, #11]
   18474:	orr	r4, r0, r3
   18478:	ldrb	r0, [r9, #10]
   1847c:	orr	r7, r4, r0, lsl #8
   18480:	ldrb	r0, [r9, #9]
   18484:	orr	r2, r7, r0, lsl #16
   18488:	ldrb	r3, [sl]
   1848c:	movw	r0, #27749	; 0x6c65
   18490:	movt	r0, #30050	; 0x7562
   18494:	eor	r0, r1, r0
   18498:	orr	r2, r2, r3, lsl #24
   1849c:	movw	r3, #25711	; 0x646f
   184a0:	movt	r3, #26207	; 0x665f
   184a4:	eor	r3, r2, r3
   184a8:	orrs	r0, r0, r3
   184ac:	bne	18a20 <main@@Base+0x27e0>
   184b0:	ldr	r5, [sp, #44]	; 0x2c
   184b4:	add	r7, r9, #16
   184b8:	mov	r1, #8
   184bc:	mov	r2, #-268435456	; 0xf0000000
   184c0:	ldr	r8, [sp, #40]	; 0x28
   184c4:	sub	r0, r5, r7
   184c8:	cmp	r0, #8
   184cc:	movcc	r1, r0
   184d0:	add	r1, r2, r1, lsl #28
   184d4:	asr	r1, r1, #28
   184d8:	cmp	r1, #0
   184dc:	blt	18798 <main@@Base+0x2558>
   184e0:	ldrb	r1, [r7]
   184e4:	cmp	r1, #115	; 0x73
   184e8:	bne	18798 <main@@Base+0x2558>
   184ec:	ldr	sl, [sp, #36]	; 0x24
   184f0:	cmp	r0, #2
   184f4:	blt	1ea98 <main@@Base+0x8858>
   184f8:	ldr	r2, [sp, #32]
   184fc:	mov	r1, r9
   18500:	ldrb	r0, [r1, #17]!
   18504:	ldr	r2, [r2]
   18508:	cmp	r2, #0
   1850c:	beq	1a898 <main@@Base+0x4658>
   18510:	cmp	r0, #33	; 0x21
   18514:	bcc	18520 <main@@Base+0x22e0>
   18518:	cmp	r0, #58	; 0x3a
   1851c:	bne	1ea98 <main@@Base+0x8858>
   18520:	ldr	r0, [sp, #32]
   18524:	mov	r2, #0
   18528:	str	r2, [r0]
   1852c:	b	1a8a4 <main@@Base+0x4664>
   18530:	movw	r0, #30256	; 0x7630
   18534:	ldr	r5, [sp, #44]	; 0x2c
   18538:	ldr	r8, [sp, #40]	; 0x28
   1853c:	movt	r0, #26222	; 0x666e
   18540:	subs	r0, r0, r1
   18544:	movw	r0, #12895	; 0x325f
   18548:	movt	r0, #30003	; 0x7533
   1854c:	sbcs	r0, r0, r2
   18550:	movw	r0, #30257	; 0x7631
   18554:	movt	r0, #26222	; 0x666e
   18558:	eor	r0, r1, r0
   1855c:	bcc	18880 <main@@Base+0x2640>
   18560:	movw	r1, #13407	; 0x345f
   18564:	movt	r1, #29494	; 0x7336
   18568:	eor	r1, r2, r1
   1856c:	orrs	r0, r0, r1
   18570:	bne	196cc <main@@Base+0x348c>
   18574:	cmp	ip, #9
   18578:	blt	1a408 <main@@Base+0x41c8>
   1857c:	ldr	r2, [sp, #32]
   18580:	mov	r1, r9
   18584:	ldrb	r0, [r1, #16]!
   18588:	ldr	r2, [r2]
   1858c:	cmp	r2, #0
   18590:	beq	19268 <main@@Base+0x3028>
   18594:	cmp	r0, #33	; 0x21
   18598:	bcc	185a4 <main@@Base+0x2364>
   1859c:	cmp	r0, #58	; 0x3a
   185a0:	bne	1a408 <main@@Base+0x41c8>
   185a4:	ldr	r0, [sp, #32]
   185a8:	mov	r2, #0
   185ac:	str	r2, [r0]
   185b0:	b	19274 <main@@Base+0x3034>
   185b4:	cmp	r8, #9
   185b8:	ldr	r8, [sp, #40]	; 0x28
   185bc:	ldr	sl, [sp, #36]	; 0x24
   185c0:	mov	r7, r9
   185c4:	blt	1a8ec <main@@Base+0x46ac>
   185c8:	ldr	r2, [sp, #32]
   185cc:	mov	r1, r9
   185d0:	ldrb	r0, [r1, #8]!
   185d4:	ldr	r2, [r2]
   185d8:	cmp	r2, #0
   185dc:	beq	18ba4 <main@@Base+0x2964>
   185e0:	cmp	r0, #33	; 0x21
   185e4:	bcc	185f4 <main@@Base+0x23b4>
   185e8:	cmp	r0, #58	; 0x3a
   185ec:	mov	r7, r9
   185f0:	bne	1a8ec <main@@Base+0x46ac>
   185f4:	ldr	r0, [sp, #32]
   185f8:	mov	r2, #0
   185fc:	str	r2, [r0]
   18600:	b	18bb4 <main@@Base+0x2974>
   18604:	add	sl, r9, #16
   18608:	mov	r1, #8
   1860c:	ldr	r8, [sp, #40]	; 0x28
   18610:	sub	ip, r5, sl
   18614:	cmp	ip, #8
   18618:	movcc	r1, ip
   1861c:	and	r1, r1, #15
   18620:	sub	r2, r1, #1
   18624:	cmp	r2, #7
   18628:	bhi	196cc <main@@Base+0x348c>
   1862c:	add	r0, pc, #32
   18630:	mov	r1, #0
   18634:	mov	lr, #0
   18638:	mov	r6, #0
   1863c:	mov	r3, #0
   18640:	mov	r7, #0
   18644:	mov	r5, #0
   18648:	mov	r4, #0
   1864c:	ldr	r2, [r0, r2, lsl #2]
   18650:	add	pc, r0, r2
   18654:	andeq	r0, r0, ip, asr r0
   18658:	andeq	r0, r0, r4, asr r0
   1865c:	andeq	r0, r0, ip, asr #32
   18660:	andeq	r0, r0, r4, asr #32
   18664:	andeq	r0, r0, r8, lsr r0
   18668:	andeq	r0, r0, r8, lsr #32
   1866c:	andeq	r0, r0, r0, lsr #32
   18670:	andeq	r0, r0, r0, lsr #32
   18674:	ldrb	r0, [r9, #22]
   18678:	lsl	lr, r0, #8
   1867c:	ldrb	r0, [r9, #21]
   18680:	mov	r6, r1
   18684:	orr	r0, lr, r0, lsl #16
   18688:	mov	r1, r0
   1868c:	ldrb	r0, [r9, #20]
   18690:	mov	r3, r6
   18694:	orr	r1, r1, r0, lsl #24
   18698:	ldrb	r0, [r9, #19]
   1869c:	orr	r7, r0, r3
   186a0:	ldrb	r0, [r9, #18]
   186a4:	orr	r5, r7, r0, lsl #8
   186a8:	ldrb	r0, [r9, #17]
   186ac:	orr	r4, r5, r0, lsl #16
   186b0:	bic	r0, r1, #255	; 0xff
   186b4:	movw	r1, #29696	; 0x7400
   186b8:	movw	r2, #29810	; 0x7472
   186bc:	ldr	r5, [sp, #44]	; 0x2c
   186c0:	movt	r1, #30051	; 0x7563
   186c4:	movt	r2, #25715	; 0x6473
   186c8:	eor	r0, r0, r1
   186cc:	ldrb	r1, [sl]
   186d0:	orr	r1, r4, r1, lsl #24
   186d4:	eor	r1, r1, r2
   186d8:	orrs	r0, r0, r1
   186dc:	bne	196cc <main@@Base+0x348c>
   186e0:	cmp	ip, #8
   186e4:	blt	196cc <main@@Base+0x348c>
   186e8:	ldr	r2, [sp, #32]
   186ec:	mov	r1, r9
   186f0:	ldrb	r0, [r1, #23]!
   186f4:	ldr	r2, [r2]
   186f8:	cmp	r2, #0
   186fc:	beq	19148 <main@@Base+0x2f08>
   18700:	cmp	r0, #33	; 0x21
   18704:	bcc	18710 <main@@Base+0x24d0>
   18708:	cmp	r0, #58	; 0x3a
   1870c:	bne	196cc <main@@Base+0x348c>
   18710:	ldr	r0, [sp, #32]
   18714:	mov	r2, #0
   18718:	str	r2, [r0]
   1871c:	b	19154 <main@@Base+0x2f14>
   18720:	add	r7, r9, #16
   18724:	mov	r1, #8
   18728:	mov	r2, #-268435456	; 0xf0000000
   1872c:	sub	r0, r5, r7
   18730:	cmp	r0, #8
   18734:	movcc	r1, r0
   18738:	add	r1, r2, r1, lsl #28
   1873c:	asr	r1, r1, #28
   18740:	cmp	r1, #0
   18744:	blt	18798 <main@@Base+0x2558>
   18748:	ldrb	r1, [r7]
   1874c:	cmp	r1, #115	; 0x73
   18750:	bne	18798 <main@@Base+0x2558>
   18754:	ldr	sl, [sp, #36]	; 0x24
   18758:	cmp	r0, #2
   1875c:	blt	1ea98 <main@@Base+0x8858>
   18760:	ldr	r2, [sp, #32]
   18764:	mov	r1, r9
   18768:	ldrb	r0, [r1, #17]!
   1876c:	ldr	r2, [r2]
   18770:	cmp	r2, #0
   18774:	beq	196f0 <main@@Base+0x34b0>
   18778:	cmp	r0, #33	; 0x21
   1877c:	bcc	18788 <main@@Base+0x2548>
   18780:	cmp	r0, #58	; 0x3a
   18784:	bne	1ea98 <main@@Base+0x8858>
   18788:	ldr	r0, [sp, #32]
   1878c:	mov	r2, #0
   18790:	str	r2, [r0]
   18794:	b	196fc <main@@Base+0x34bc>
   18798:	mov	r0, r8
   1879c:	mov	r1, r7
   187a0:	b	1a5b8 <main@@Base+0x4378>
   187a4:	ldr	r8, [sp, #40]	; 0x28
   187a8:	mov	r0, r8
   187ac:	b	1f710 <main@@Base+0x94d0>
   187b0:	ldr	sl, [sp, #36]	; 0x24
   187b4:	movw	r1, #28257	; 0x6e61
   187b8:	movt	r1, #28001	; 0x6d61
   187bc:	teq	r0, r1
   187c0:	bne	18810 <main@@Base+0x25d0>
   187c4:	cmp	r8, #5
   187c8:	ldr	r8, [sp, #40]	; 0x28
   187cc:	mov	r7, r9
   187d0:	blt	1ca08 <main@@Base+0x67c8>
   187d4:	ldr	r2, [sp, #32]
   187d8:	mov	r1, r9
   187dc:	ldrb	r0, [r1, #4]!
   187e0:	ldr	r2, [r2]
   187e4:	cmp	r2, #0
   187e8:	beq	1917c <main@@Base+0x2f3c>
   187ec:	cmp	r0, #33	; 0x21
   187f0:	bcc	18800 <main@@Base+0x25c0>
   187f4:	cmp	r0, #58	; 0x3a
   187f8:	mov	r7, r9
   187fc:	bne	1ca08 <main@@Base+0x67c8>
   18800:	ldr	r0, [sp, #32]
   18804:	mov	r2, #0
   18808:	str	r2, [r0]
   1880c:	b	1918c <main@@Base+0x2f4c>
   18810:	ldr	r8, [sp, #40]	; 0x28
   18814:	mov	r0, r8
   18818:	mov	r1, r9
   1881c:	b	1f710 <main@@Base+0x94d0>
   18820:	and	r0, sl, #-16777216	; 0xff000000
   18824:	eor	r0, r0, #1711276032	; 0x66000000
   18828:	orrs	r0, r0, r1
   1882c:	bne	1a5ac <main@@Base+0x436c>
   18830:	cmp	r8, #6
   18834:	ldr	r8, [sp, #40]	; 0x28
   18838:	ldr	sl, [sp, #36]	; 0x24
   1883c:	mov	r7, r9
   18840:	blt	1cb88 <main@@Base+0x6948>
   18844:	ldr	r2, [sp, #32]
   18848:	mov	r1, r9
   1884c:	ldrb	r0, [r1, #5]!
   18850:	ldr	r2, [r2]
   18854:	cmp	r2, #0
   18858:	beq	191b4 <main@@Base+0x2f74>
   1885c:	cmp	r0, #33	; 0x21
   18860:	bcc	18870 <main@@Base+0x2630>
   18864:	cmp	r0, #58	; 0x3a
   18868:	mov	r7, r9
   1886c:	bne	1cb88 <main@@Base+0x6948>
   18870:	ldr	r0, [sp, #32]
   18874:	mov	r2, #0
   18878:	str	r2, [r0]
   1887c:	b	191c4 <main@@Base+0x2f84>
   18880:	movw	r1, #13407	; 0x345f
   18884:	movt	r1, #30006	; 0x7536
   18888:	eor	r1, r2, r1
   1888c:	orrs	r1, r0, r1
   18890:	beq	18b4c <main@@Base+0x290c>
   18894:	movw	r1, #12895	; 0x325f
   18898:	movt	r1, #30003	; 0x7533
   1889c:	eor	r1, r2, r1
   188a0:	orrs	r0, r0, r1
   188a4:	bne	196cc <main@@Base+0x348c>
   188a8:	cmp	ip, #9
   188ac:	blt	1becc <main@@Base+0x5c8c>
   188b0:	ldr	r2, [sp, #32]
   188b4:	mov	r1, r9
   188b8:	ldrb	r0, [r1, #16]!
   188bc:	ldr	r2, [r2]
   188c0:	cmp	r2, #0
   188c4:	beq	19900 <main@@Base+0x36c0>
   188c8:	cmp	r0, #33	; 0x21
   188cc:	bcc	188d8 <main@@Base+0x2698>
   188d0:	cmp	r0, #58	; 0x3a
   188d4:	bne	1becc <main@@Base+0x5c8c>
   188d8:	ldr	r0, [sp, #32]
   188dc:	mov	r2, #0
   188e0:	str	r2, [r0]
   188e4:	b	1990c <main@@Base+0x36cc>
   188e8:	cmp	r0, #34	; 0x22
   188ec:	mov	r7, r9
   188f0:	bne	19338 <main@@Base+0x30f8>
   188f4:	add	r1, r9, #7
   188f8:	sub	r0, r5, r1
   188fc:	cmp	r0, #2
   18900:	blt	18bf0 <main@@Base+0x29b0>
   18904:	ldrb	r0, [r1]
   18908:	cmp	r0, #32
   1890c:	bls	18bdc <main@@Base+0x299c>
   18910:	mov	r7, r1
   18914:	cmp	r7, r5
   18918:	bne	18c08 <main@@Base+0x29c8>
   1891c:	b	18c40 <main@@Base+0x2a00>
   18920:	cmp	r0, #34	; 0x22
   18924:	mov	r7, r9
   18928:	bne	193f8 <main@@Base+0x31b8>
   1892c:	add	r1, r9, #6
   18930:	ldr	r6, [sp, #40]	; 0x28
   18934:	sub	r0, r5, r1
   18938:	cmp	r0, #2
   1893c:	blt	18c6c <main@@Base+0x2a2c>
   18940:	ldrb	r0, [r1]
   18944:	cmp	r0, #32
   18948:	bls	18c58 <main@@Base+0x2a18>
   1894c:	mov	r7, r1
   18950:	cmp	r7, r5
   18954:	bne	18c84 <main@@Base+0x2a44>
   18958:	b	18cbc <main@@Base+0x2a7c>
   1895c:	ldr	r8, [sp, #40]	; 0x28
   18960:	b	1ea98 <main@@Base+0x8858>
   18964:	and	r1, r2, #-16777216	; 0xff000000
   18968:	teq	r1, #1728053248	; 0x67000000
   1896c:	bne	1ea98 <main@@Base+0x8858>
   18970:	cmp	r0, #2
   18974:	blt	1ea98 <main@@Base+0x8858>
   18978:	ldr	r2, [sp, #32]
   1897c:	mov	r1, r9
   18980:	ldrb	r0, [r1, #17]!
   18984:	ldr	r2, [r2]
   18988:	cmp	r2, #0
   1898c:	beq	19c24 <main@@Base+0x39e4>
   18990:	cmp	r0, #33	; 0x21
   18994:	bcc	189a0 <main@@Base+0x2760>
   18998:	cmp	r0, #58	; 0x3a
   1899c:	bne	1ea98 <main@@Base+0x8858>
   189a0:	ldr	r0, [sp, #32]
   189a4:	mov	r2, #0
   189a8:	str	r2, [r0]
   189ac:	b	19c30 <main@@Base+0x39f0>
   189b0:	cmp	r0, #34	; 0x22
   189b4:	mov	r1, r9
   189b8:	bne	19a7c <main@@Base+0x383c>
   189bc:	add	r2, r9, #6
   189c0:	sub	r0, r5, r2
   189c4:	cmp	r0, #2
   189c8:	blt	18dfc <main@@Base+0x2bbc>
   189cc:	ldrb	r0, [r2]
   189d0:	cmp	r0, #32
   189d4:	bls	18de8 <main@@Base+0x2ba8>
   189d8:	mov	r1, r2
   189dc:	cmp	r1, r5
   189e0:	bne	18e18 <main@@Base+0x2bd8>
   189e4:	b	18e50 <main@@Base+0x2c10>
   189e8:	cmp	r0, #34	; 0x22
   189ec:	mov	r7, r9
   189f0:	bne	19ad0 <main@@Base+0x3890>
   189f4:	add	r1, r9, #6
   189f8:	sub	r0, r5, r1
   189fc:	cmp	r0, #2
   18a00:	blt	18e78 <main@@Base+0x2c38>
   18a04:	ldrb	r0, [r1]
   18a08:	cmp	r0, #32
   18a0c:	bls	18e64 <main@@Base+0x2c24>
   18a10:	mov	r7, r1
   18a14:	cmp	r7, r5
   18a18:	bne	18e90 <main@@Base+0x2c50>
   18a1c:	b	18ec8 <main@@Base+0x2c88>
   18a20:	movw	r0, #24428	; 0x5f6c
   18a24:	lsr	r1, r1, #8
   18a28:	ldr	r5, [sp, #44]	; 0x2c
   18a2c:	ldr	r8, [sp, #40]	; 0x28
   18a30:	movt	r0, #102	; 0x66
   18a34:	orr	r1, r1, r2, lsl #24
   18a38:	eor	r0, r0, r2, lsr #8
   18a3c:	movw	r2, #26483	; 0x6773
   18a40:	movt	r2, #28526	; 0x6f6e
   18a44:	eor	r1, r1, r2
   18a48:	orrs	r0, r1, r0
   18a4c:	bne	196cc <main@@Base+0x348c>
   18a50:	cmp	lr, #8
   18a54:	blt	196cc <main@@Base+0x348c>
   18a58:	ldr	r2, [sp, #32]
   18a5c:	mov	r1, r9
   18a60:	ldrb	r0, [r1, #15]!
   18a64:	ldr	r2, [r2]
   18a68:	cmp	r2, #0
   18a6c:	beq	19c8c <main@@Base+0x3a4c>
   18a70:	cmp	r0, #33	; 0x21
   18a74:	bcc	18a80 <main@@Base+0x2840>
   18a78:	cmp	r0, #58	; 0x3a
   18a7c:	bne	196cc <main@@Base+0x348c>
   18a80:	ldr	r0, [sp, #32]
   18a84:	mov	r2, #0
   18a88:	str	r2, [r0]
   18a8c:	b	19c98 <main@@Base+0x3a58>
   18a90:	cmp	r0, #34	; 0x22
   18a94:	mov	r1, r9
   18a98:	bne	19ce4 <main@@Base+0x3aa4>
   18a9c:	add	r2, r9, #5
   18aa0:	sub	r0, r5, r2
   18aa4:	cmp	r0, #2
   18aa8:	blt	18ef4 <main@@Base+0x2cb4>
   18aac:	ldrb	r0, [r2]
   18ab0:	cmp	r0, #32
   18ab4:	bls	18ee0 <main@@Base+0x2ca0>
   18ab8:	mov	r1, r2
   18abc:	cmp	r1, r5
   18ac0:	bne	18f10 <main@@Base+0x2cd0>
   18ac4:	b	18f48 <main@@Base+0x2d08>
   18ac8:	cmp	r0, #34	; 0x22
   18acc:	mov	r4, r9
   18ad0:	bne	19d38 <main@@Base+0x3af8>
   18ad4:	add	r1, r9, #5
   18ad8:	sub	r0, r5, r1
   18adc:	cmp	r0, #2
   18ae0:	blt	18f70 <main@@Base+0x2d30>
   18ae4:	ldrb	r0, [r1]
   18ae8:	cmp	r0, #32
   18aec:	bls	18f5c <main@@Base+0x2d1c>
   18af0:	mov	r4, r1
   18af4:	cmp	r4, r5
   18af8:	bne	18f88 <main@@Base+0x2d48>
   18afc:	b	18fc0 <main@@Base+0x2d80>
   18b00:	cmp	r0, #34	; 0x22
   18b04:	mov	r1, r9
   18b08:	bne	1a0a4 <main@@Base+0x3e64>
   18b0c:	add	r2, r9, #5
   18b10:	sub	r0, r5, r2
   18b14:	cmp	r0, #2
   18b18:	blt	18fec <main@@Base+0x2dac>
   18b1c:	ldrb	r0, [r2]
   18b20:	cmp	r0, #32
   18b24:	bls	18fd8 <main@@Base+0x2d98>
   18b28:	mov	r1, r2
   18b2c:	cmp	r1, r5
   18b30:	bne	19008 <main@@Base+0x2dc8>
   18b34:	b	19090 <main@@Base+0x2e50>
   18b38:	cmp	r2, #1
   18b3c:	mov	r1, #0
   18b40:	mov	r2, #0
   18b44:	beq	17a20 <main@@Base+0x17e0>
   18b48:	b	1ea98 <main@@Base+0x8858>
   18b4c:	cmp	ip, #9
   18b50:	blt	1bfc4 <main@@Base+0x5d84>
   18b54:	ldr	r2, [sp, #32]
   18b58:	mov	r1, r9
   18b5c:	ldrb	r0, [r1, #16]!
   18b60:	ldr	r2, [r2]
   18b64:	cmp	r2, #0
   18b68:	beq	19934 <main@@Base+0x36f4>
   18b6c:	cmp	r0, #33	; 0x21
   18b70:	bcc	18b7c <main@@Base+0x293c>
   18b74:	cmp	r0, #58	; 0x3a
   18b78:	bne	1bfc4 <main@@Base+0x5d84>
   18b7c:	ldr	r0, [sp, #32]
   18b80:	mov	r2, #0
   18b84:	str	r2, [r0]
   18b88:	b	19940 <main@@Base+0x3700>
   18b8c:	ldr	sl, [sp, #36]	; 0x24
   18b90:	cmp	r2, #1
   18b94:	mov	r1, #0
   18b98:	mov	r2, #0
   18b9c:	beq	181b0 <main@@Base+0x1f70>
   18ba0:	b	1ea98 <main@@Base+0x8858>
   18ba4:	cmp	r0, #34	; 0x22
   18ba8:	mov	r7, r9
   18bac:	bne	1a8ec <main@@Base+0x46ac>
   18bb0:	add	r1, r9, #9
   18bb4:	sub	r0, r5, r1
   18bb8:	cmp	r0, #2
   18bbc:	blt	192b0 <main@@Base+0x3070>
   18bc0:	ldrb	r0, [r1]
   18bc4:	cmp	r0, #32
   18bc8:	bls	1929c <main@@Base+0x305c>
   18bcc:	mov	r7, r1
   18bd0:	cmp	r7, r5
   18bd4:	bne	192c8 <main@@Base+0x3088>
   18bd8:	b	19300 <main@@Base+0x30c0>
   18bdc:	bne	18bf0 <main@@Base+0x29b0>
   18be0:	mov	r7, r1
   18be4:	ldrb	r0, [r7, #1]!
   18be8:	cmp	r0, #32
   18bec:	bhi	18c00 <main@@Base+0x29c0>
   18bf0:	mov	r0, r8
   18bf4:	mov	r2, r5
   18bf8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   18bfc:	mov	r7, r0
   18c00:	cmp	r7, r5
   18c04:	beq	18c40 <main@@Base+0x2a00>
   18c08:	ldrb	r0, [r7]
   18c0c:	cmp	r0, #58	; 0x3a
   18c10:	bne	18c40 <main@@Base+0x2a00>
   18c14:	add	r1, r7, #1
   18c18:	sub	r0, r5, r1
   18c1c:	cmp	r0, #2
   18c20:	blt	19328 <main@@Base+0x30e8>
   18c24:	ldrb	r0, [r1]
   18c28:	cmp	r0, #32
   18c2c:	bls	19318 <main@@Base+0x30d8>
   18c30:	mov	r7, r1
   18c34:	cmp	r9, r7
   18c38:	bne	19340 <main@@Base+0x3100>
   18c3c:	b	18814 <main@@Base+0x25d4>
   18c40:	mov	r0, r8
   18c44:	mov	r1, r7
   18c48:	mov	r2, r5
   18c4c:	mov	r3, #4
   18c50:	bl	36078 <flatcc_json_parser_set_error@@Base>
   18c54:	b	19334 <main@@Base+0x30f4>
   18c58:	bne	18c6c <main@@Base+0x2a2c>
   18c5c:	mov	r7, r1
   18c60:	ldrb	r0, [r7, #1]!
   18c64:	cmp	r0, #32
   18c68:	bhi	18c7c <main@@Base+0x2a3c>
   18c6c:	mov	r0, r6
   18c70:	mov	r2, r5
   18c74:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   18c78:	mov	r7, r0
   18c7c:	cmp	r7, r5
   18c80:	beq	18cbc <main@@Base+0x2a7c>
   18c84:	ldrb	r0, [r7]
   18c88:	cmp	r0, #58	; 0x3a
   18c8c:	bne	18cbc <main@@Base+0x2a7c>
   18c90:	add	r1, r7, #1
   18c94:	sub	r0, r5, r1
   18c98:	cmp	r0, #2
   18c9c:	blt	193e8 <main@@Base+0x31a8>
   18ca0:	ldrb	r0, [r1]
   18ca4:	cmp	r0, #32
   18ca8:	bls	193d8 <main@@Base+0x3198>
   18cac:	mov	r7, r1
   18cb0:	cmp	r9, r7
   18cb4:	bne	19400 <main@@Base+0x31c0>
   18cb8:	b	1a51c <main@@Base+0x42dc>
   18cbc:	mov	r0, r6
   18cc0:	mov	r1, r7
   18cc4:	mov	r2, r5
   18cc8:	mov	r3, #4
   18ccc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   18cd0:	b	193f4 <main@@Base+0x31b4>
   18cd4:	cmp	r0, #34	; 0x22
   18cd8:	bne	196c8 <main@@Base+0x3488>
   18cdc:	add	r1, r9, #17
   18ce0:	ldr	r6, [sp, #40]	; 0x28
   18ce4:	sub	r0, r5, r1
   18ce8:	cmp	r0, #2
   18cec:	blt	1967c <main@@Base+0x343c>
   18cf0:	ldrb	r0, [r1]
   18cf4:	cmp	r0, #32
   18cf8:	bls	19668 <main@@Base+0x3428>
   18cfc:	mov	r4, r1
   18d00:	cmp	r4, r5
   18d04:	bne	19694 <main@@Base+0x3454>
   18d08:	b	196d8 <main@@Base+0x3498>
   18d0c:	cmp	r0, #34	; 0x22
   18d10:	mov	r7, r9
   18d14:	bne	1aca8 <main@@Base+0x4a68>
   18d18:	add	r1, r9, #3
   18d1c:	sub	r0, r5, r1
   18d20:	cmp	r0, #2
   18d24:	blt	19738 <main@@Base+0x34f8>
   18d28:	ldrb	r0, [r1]
   18d2c:	cmp	r0, #32
   18d30:	bls	19724 <main@@Base+0x34e4>
   18d34:	mov	r7, r1
   18d38:	cmp	r7, r5
   18d3c:	bne	19750 <main@@Base+0x3510>
   18d40:	b	19788 <main@@Base+0x3548>
   18d44:	cmp	r0, #34	; 0x22
   18d48:	mov	r4, r9
   18d4c:	bne	1ae1c <main@@Base+0x4bdc>
   18d50:	add	r1, r9, #4
   18d54:	sub	r0, r5, r1
   18d58:	cmp	r0, #2
   18d5c:	blt	197b4 <main@@Base+0x3574>
   18d60:	ldrb	r0, [r1]
   18d64:	cmp	r0, #32
   18d68:	bls	197a0 <main@@Base+0x3560>
   18d6c:	mov	r4, r1
   18d70:	cmp	r4, r5
   18d74:	bne	197cc <main@@Base+0x358c>
   18d78:	b	19804 <main@@Base+0x35c4>
   18d7c:	cmp	r0, #34	; 0x22
   18d80:	mov	r7, r9
   18d84:	bne	1bce0 <main@@Base+0x5aa0>
   18d88:	add	r1, r9, #7
   18d8c:	sub	r0, r5, r1
   18d90:	cmp	r0, #2
   18d94:	blt	19830 <main@@Base+0x35f0>
   18d98:	ldrb	r0, [r1]
   18d9c:	cmp	r0, #32
   18da0:	bls	1981c <main@@Base+0x35dc>
   18da4:	mov	r7, r1
   18da8:	cmp	r7, r5
   18dac:	bne	19848 <main@@Base+0x3608>
   18db0:	b	19880 <main@@Base+0x3640>
   18db4:	cmp	r0, #34	; 0x22
   18db8:	bne	199c8 <main@@Base+0x3788>
   18dbc:	add	r1, r9, #17
   18dc0:	sub	r0, r5, r1
   18dc4:	cmp	r0, #2
   18dc8:	blt	1997c <main@@Base+0x373c>
   18dcc:	ldrb	r0, [r1]
   18dd0:	cmp	r0, #32
   18dd4:	bls	19968 <main@@Base+0x3728>
   18dd8:	mov	r7, r1
   18ddc:	cmp	r7, r5
   18de0:	bne	19994 <main@@Base+0x3754>
   18de4:	b	19a40 <main@@Base+0x3800>
   18de8:	bne	18dfc <main@@Base+0x2bbc>
   18dec:	mov	r1, r2
   18df0:	ldrb	r0, [r1, #1]!
   18df4:	cmp	r0, #32
   18df8:	bhi	18e10 <main@@Base+0x2bd0>
   18dfc:	mov	r1, r2
   18e00:	mov	r0, r8
   18e04:	mov	r2, r5
   18e08:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   18e0c:	mov	r1, r0
   18e10:	cmp	r1, r5
   18e14:	beq	18e50 <main@@Base+0x2c10>
   18e18:	ldrb	r0, [r1]
   18e1c:	cmp	r0, #58	; 0x3a
   18e20:	bne	18e50 <main@@Base+0x2c10>
   18e24:	add	r2, r1, #1
   18e28:	sub	r0, r5, r2
   18e2c:	cmp	r0, #2
   18e30:	blt	19a68 <main@@Base+0x3828>
   18e34:	ldrb	r0, [r2]
   18e38:	cmp	r0, #32
   18e3c:	bls	19a58 <main@@Base+0x3818>
   18e40:	mov	r1, r2
   18e44:	cmp	r9, r1
   18e48:	bne	19a84 <main@@Base+0x3844>
   18e4c:	b	18814 <main@@Base+0x25d4>
   18e50:	mov	r0, r8
   18e54:	mov	r2, r5
   18e58:	mov	r3, #4
   18e5c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   18e60:	b	19a78 <main@@Base+0x3838>
   18e64:	bne	18e78 <main@@Base+0x2c38>
   18e68:	mov	r7, r1
   18e6c:	ldrb	r0, [r7, #1]!
   18e70:	cmp	r0, #32
   18e74:	bhi	18e88 <main@@Base+0x2c48>
   18e78:	mov	r0, r8
   18e7c:	mov	r2, r5
   18e80:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   18e84:	mov	r7, r0
   18e88:	cmp	r7, r5
   18e8c:	beq	18ec8 <main@@Base+0x2c88>
   18e90:	ldrb	r0, [r7]
   18e94:	cmp	r0, #58	; 0x3a
   18e98:	bne	18ec8 <main@@Base+0x2c88>
   18e9c:	add	r1, r7, #1
   18ea0:	sub	r0, r5, r1
   18ea4:	cmp	r0, #2
   18ea8:	blt	19ac0 <main@@Base+0x3880>
   18eac:	ldrb	r0, [r1]
   18eb0:	cmp	r0, #32
   18eb4:	bls	19ab0 <main@@Base+0x3870>
   18eb8:	mov	r7, r1
   18ebc:	cmp	r9, r7
   18ec0:	bne	19ad8 <main@@Base+0x3898>
   18ec4:	b	18814 <main@@Base+0x25d4>
   18ec8:	mov	r0, r8
   18ecc:	mov	r1, r7
   18ed0:	mov	r2, r5
   18ed4:	mov	r3, #4
   18ed8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   18edc:	b	19acc <main@@Base+0x388c>
   18ee0:	bne	18ef4 <main@@Base+0x2cb4>
   18ee4:	mov	r1, r2
   18ee8:	ldrb	r0, [r1, #1]!
   18eec:	cmp	r0, #32
   18ef0:	bhi	18f08 <main@@Base+0x2cc8>
   18ef4:	mov	r1, r2
   18ef8:	mov	r0, r8
   18efc:	mov	r2, r5
   18f00:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   18f04:	mov	r1, r0
   18f08:	cmp	r1, r5
   18f0c:	beq	18f48 <main@@Base+0x2d08>
   18f10:	ldrb	r0, [r1]
   18f14:	cmp	r0, #58	; 0x3a
   18f18:	bne	18f48 <main@@Base+0x2d08>
   18f1c:	add	r2, r1, #1
   18f20:	sub	r0, r5, r2
   18f24:	cmp	r0, #2
   18f28:	blt	19cd0 <main@@Base+0x3a90>
   18f2c:	ldrb	r0, [r2]
   18f30:	cmp	r0, #32
   18f34:	bls	19cc0 <main@@Base+0x3a80>
   18f38:	mov	r1, r2
   18f3c:	cmp	r9, r1
   18f40:	bne	19cec <main@@Base+0x3aac>
   18f44:	b	18814 <main@@Base+0x25d4>
   18f48:	mov	r0, r8
   18f4c:	mov	r2, r5
   18f50:	mov	r3, #4
   18f54:	bl	36078 <flatcc_json_parser_set_error@@Base>
   18f58:	b	19ce0 <main@@Base+0x3aa0>
   18f5c:	bne	18f70 <main@@Base+0x2d30>
   18f60:	mov	r4, r1
   18f64:	ldrb	r0, [r4, #1]!
   18f68:	cmp	r0, #32
   18f6c:	bhi	18f80 <main@@Base+0x2d40>
   18f70:	mov	r0, r8
   18f74:	mov	r2, r5
   18f78:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   18f7c:	mov	r4, r0
   18f80:	cmp	r4, r5
   18f84:	beq	18fc0 <main@@Base+0x2d80>
   18f88:	ldrb	r0, [r4]
   18f8c:	cmp	r0, #58	; 0x3a
   18f90:	bne	18fc0 <main@@Base+0x2d80>
   18f94:	add	r1, r4, #1
   18f98:	sub	r0, r5, r1
   18f9c:	cmp	r0, #2
   18fa0:	blt	19d28 <main@@Base+0x3ae8>
   18fa4:	ldrb	r0, [r1]
   18fa8:	cmp	r0, #32
   18fac:	bls	19d18 <main@@Base+0x3ad8>
   18fb0:	mov	r4, r1
   18fb4:	cmp	r9, r4
   18fb8:	bne	19d40 <main@@Base+0x3b00>
   18fbc:	b	18814 <main@@Base+0x25d4>
   18fc0:	mov	r0, r8
   18fc4:	mov	r1, r4
   18fc8:	mov	r2, r5
   18fcc:	mov	r3, #4
   18fd0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   18fd4:	b	19d34 <main@@Base+0x3af4>
   18fd8:	bne	18fec <main@@Base+0x2dac>
   18fdc:	mov	r1, r2
   18fe0:	ldrb	r0, [r1, #1]!
   18fe4:	cmp	r0, #32
   18fe8:	bhi	19000 <main@@Base+0x2dc0>
   18fec:	ldr	r0, [sp, #40]	; 0x28
   18ff0:	mov	r1, r2
   18ff4:	mov	r2, r5
   18ff8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   18ffc:	mov	r1, r0
   19000:	cmp	r1, r5
   19004:	beq	19090 <main@@Base+0x2e50>
   19008:	ldrb	r0, [r1]
   1900c:	cmp	r0, #58	; 0x3a
   19010:	bne	19090 <main@@Base+0x2e50>
   19014:	add	r2, r1, #1
   19018:	sub	r0, r5, r2
   1901c:	cmp	r0, #2
   19020:	blt	1a090 <main@@Base+0x3e50>
   19024:	ldrb	r0, [r2]
   19028:	cmp	r0, #32
   1902c:	bls	1a080 <main@@Base+0x3e40>
   19030:	mov	r1, r2
   19034:	cmp	r9, r1
   19038:	bne	1a0ac <main@@Base+0x3e6c>
   1903c:	eor	r0, r6, #889192448	; 0x35000000
   19040:	orrs	r0, r0, r4
   19044:	bne	1a51c <main@@Base+0x42dc>
   19048:	cmp	r8, #6
   1904c:	mov	r7, r9
   19050:	blt	1a4b8 <main@@Base+0x4278>
   19054:	ldr	r2, [sp, #32]
   19058:	mov	r1, r9
   1905c:	ldrb	r0, [r1, #5]!
   19060:	ldr	r2, [r2]
   19064:	cmp	r2, #0
   19068:	beq	190a4 <main@@Base+0x2e64>
   1906c:	cmp	r0, #33	; 0x21
   19070:	bcc	19080 <main@@Base+0x2e40>
   19074:	cmp	r0, #58	; 0x3a
   19078:	mov	r7, r9
   1907c:	bne	1a4b8 <main@@Base+0x4278>
   19080:	ldr	r0, [sp, #32]
   19084:	mov	r2, #0
   19088:	str	r2, [r0]
   1908c:	b	190b4 <main@@Base+0x2e74>
   19090:	ldr	r0, [sp, #40]	; 0x28
   19094:	mov	r2, r5
   19098:	mov	r3, #4
   1909c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   190a0:	b	1a0a0 <main@@Base+0x3e60>
   190a4:	cmp	r0, #34	; 0x22
   190a8:	mov	r7, r9
   190ac:	bne	1a4b8 <main@@Base+0x4278>
   190b0:	add	r1, r9, #6
   190b4:	ldr	r6, [sp, #40]	; 0x28
   190b8:	sub	r0, r5, r1
   190bc:	cmp	r0, #2
   190c0:	blt	19200 <main@@Base+0x2fc0>
   190c4:	ldrb	r0, [r1]
   190c8:	cmp	r0, #32
   190cc:	bls	191ec <main@@Base+0x2fac>
   190d0:	mov	r7, r1
   190d4:	cmp	r7, r5
   190d8:	bne	19218 <main@@Base+0x2fd8>
   190dc:	b	19250 <main@@Base+0x3010>
   190e0:	cmp	r0, #34	; 0x22
   190e4:	bne	1ea98 <main@@Base+0x8858>
   190e8:	add	r1, r9, #11
   190ec:	sub	r0, r5, r1
   190f0:	cmp	r0, #2
   190f4:	blt	1a14c <main@@Base+0x3f0c>
   190f8:	ldrb	r0, [r1]
   190fc:	cmp	r0, #32
   19100:	bls	1a138 <main@@Base+0x3ef8>
   19104:	mov	r4, r1
   19108:	cmp	r4, r5
   1910c:	bne	1a164 <main@@Base+0x3f24>
   19110:	b	1a19c <main@@Base+0x3f5c>
   19114:	cmp	r0, #34	; 0x22
   19118:	bne	1ea98 <main@@Base+0x8858>
   1911c:	add	r1, r9, #19
   19120:	sub	r0, r5, r1
   19124:	cmp	r0, #2
   19128:	blt	1a1c8 <main@@Base+0x3f88>
   1912c:	ldrb	r0, [r1]
   19130:	cmp	r0, #32
   19134:	bls	1a1b4 <main@@Base+0x3f74>
   19138:	mov	r4, r1
   1913c:	cmp	r4, r5
   19140:	bne	1a1e0 <main@@Base+0x3fa0>
   19144:	b	1a218 <main@@Base+0x3fd8>
   19148:	cmp	r0, #34	; 0x22
   1914c:	bne	196cc <main@@Base+0x348c>
   19150:	add	r1, r9, #24
   19154:	sub	r0, r5, r1
   19158:	cmp	r0, #2
   1915c:	blt	1a244 <main@@Base+0x4004>
   19160:	ldrb	r0, [r1]
   19164:	cmp	r0, #32
   19168:	bls	1a230 <main@@Base+0x3ff0>
   1916c:	mov	r7, r1
   19170:	cmp	r7, r5
   19174:	bne	1a25c <main@@Base+0x401c>
   19178:	b	1a294 <main@@Base+0x4054>
   1917c:	cmp	r0, #34	; 0x22
   19180:	mov	r7, r9
   19184:	bne	1ca08 <main@@Base+0x67c8>
   19188:	add	r1, r9, #5
   1918c:	sub	r0, r5, r1
   19190:	cmp	r0, #2
   19194:	blt	1a2c0 <main@@Base+0x4080>
   19198:	ldrb	r0, [r1]
   1919c:	cmp	r0, #32
   191a0:	bls	1a2ac <main@@Base+0x406c>
   191a4:	mov	r7, r1
   191a8:	cmp	r7, r5
   191ac:	bne	1a2d8 <main@@Base+0x4098>
   191b0:	b	1a310 <main@@Base+0x40d0>
   191b4:	cmp	r0, #34	; 0x22
   191b8:	mov	r7, r9
   191bc:	bne	1cb88 <main@@Base+0x6948>
   191c0:	add	r1, r9, #6
   191c4:	sub	r0, r5, r1
   191c8:	cmp	r0, #2
   191cc:	blt	1a340 <main@@Base+0x4100>
   191d0:	ldrb	r0, [r1]
   191d4:	cmp	r0, #32
   191d8:	bls	1a32c <main@@Base+0x40ec>
   191dc:	mov	r7, r1
   191e0:	cmp	r7, r5
   191e4:	bne	1a358 <main@@Base+0x4118>
   191e8:	b	1a390 <main@@Base+0x4150>
   191ec:	bne	19200 <main@@Base+0x2fc0>
   191f0:	mov	r7, r1
   191f4:	ldrb	r0, [r7, #1]!
   191f8:	cmp	r0, #32
   191fc:	bhi	19210 <main@@Base+0x2fd0>
   19200:	mov	r0, r6
   19204:	mov	r2, r5
   19208:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1920c:	mov	r7, r0
   19210:	cmp	r7, r5
   19214:	beq	19250 <main@@Base+0x3010>
   19218:	ldrb	r0, [r7]
   1921c:	cmp	r0, #58	; 0x3a
   19220:	bne	19250 <main@@Base+0x3010>
   19224:	add	r1, r7, #1
   19228:	sub	r0, r5, r1
   1922c:	cmp	r0, #2
   19230:	blt	1a4a8 <main@@Base+0x4268>
   19234:	ldrb	r0, [r1]
   19238:	cmp	r0, #32
   1923c:	bls	1a498 <main@@Base+0x4258>
   19240:	mov	r7, r1
   19244:	cmp	r9, r7
   19248:	bne	1a4c0 <main@@Base+0x4280>
   1924c:	b	1a51c <main@@Base+0x42dc>
   19250:	mov	r0, r6
   19254:	mov	r1, r7
   19258:	mov	r2, r5
   1925c:	mov	r3, #4
   19260:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19264:	b	1a4b4 <main@@Base+0x4274>
   19268:	cmp	r0, #34	; 0x22
   1926c:	bne	1a408 <main@@Base+0x41c8>
   19270:	add	r1, r9, #17
   19274:	sub	r0, r5, r1
   19278:	cmp	r0, #2
   1927c:	blt	1a3bc <main@@Base+0x417c>
   19280:	ldrb	r0, [r1]
   19284:	cmp	r0, #32
   19288:	bls	1a3a8 <main@@Base+0x4168>
   1928c:	mov	r7, r1
   19290:	cmp	r7, r5
   19294:	bne	1a3d4 <main@@Base+0x4194>
   19298:	b	1a480 <main@@Base+0x4240>
   1929c:	bne	192b0 <main@@Base+0x3070>
   192a0:	mov	r7, r1
   192a4:	ldrb	r0, [r7, #1]!
   192a8:	cmp	r0, #32
   192ac:	bhi	192c0 <main@@Base+0x3080>
   192b0:	mov	r0, r8
   192b4:	mov	r2, r5
   192b8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   192bc:	mov	r7, r0
   192c0:	cmp	r7, r5
   192c4:	beq	19300 <main@@Base+0x30c0>
   192c8:	ldrb	r0, [r7]
   192cc:	cmp	r0, #58	; 0x3a
   192d0:	bne	19300 <main@@Base+0x30c0>
   192d4:	add	r1, r7, #1
   192d8:	sub	r0, r5, r1
   192dc:	cmp	r0, #2
   192e0:	blt	1a8dc <main@@Base+0x469c>
   192e4:	ldrb	r0, [r1]
   192e8:	cmp	r0, #32
   192ec:	bls	1a8cc <main@@Base+0x468c>
   192f0:	mov	r7, r1
   192f4:	cmp	r9, r7
   192f8:	bne	1a8f4 <main@@Base+0x46b4>
   192fc:	b	18814 <main@@Base+0x25d4>
   19300:	mov	r0, r8
   19304:	mov	r1, r7
   19308:	mov	r2, r5
   1930c:	mov	r3, #4
   19310:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19314:	b	1a8e8 <main@@Base+0x46a8>
   19318:	bne	19328 <main@@Base+0x30e8>
   1931c:	ldrb	r0, [r7, #2]!
   19320:	cmp	r0, #32
   19324:	bhi	19338 <main@@Base+0x30f8>
   19328:	mov	r0, r8
   1932c:	mov	r2, r5
   19330:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19334:	mov	r7, r0
   19338:	cmp	r9, r7
   1933c:	beq	18814 <main@@Base+0x25d4>
   19340:	mov	r0, #0
   19344:	mov	r1, r7
   19348:	mov	r2, r5
   1934c:	sub	r3, fp, #56	; 0x38
   19350:	str	r0, [fp, #-56]	; 0xffffffc8
   19354:	mov	r0, r8
   19358:	bl	382d0 <flatcc_json_parser_float@@Base>
   1935c:	mov	r4, r0
   19360:	cmp	r7, r0
   19364:	bne	19398 <main@@Base+0x3158>
   19368:	sub	r0, fp, #56	; 0x38
   1936c:	mov	r1, r7
   19370:	mov	r2, r5
   19374:	str	r0, [sp]
   19378:	mov	r0, r8
   1937c:	ldr	r3, [pc, #4004]	; 1a328 <main@@Base+0x40e8>
   19380:	add	r3, pc, r3
   19384:	bl	25858 <main@@Base+0xf618>
   19388:	mov	r4, r0
   1938c:	cmp	r0, r7
   19390:	cmpne	r4, r5
   19394:	beq	17308 <main@@Base+0x10c8>
   19398:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1939c:	vcmp.f32	s0, #0.0
   193a0:	vmrs	APSR_nzcv, fpscr
   193a4:	bne	193b4 <main@@Base+0x3174>
   193a8:	ldrb	r0, [r8, #8]
   193ac:	tst	r0, #2
   193b0:	beq	1f71c <main@@Base+0x94dc>
   193b4:	ldr	r0, [r8]
   193b8:	mov	r1, #27
   193bc:	mov	r2, #4
   193c0:	mov	r3, #4
   193c4:	bl	32964 <flatcc_builder_table_add@@Base>
   193c8:	cmp	r0, #0
   193cc:	beq	17308 <main@@Base+0x10c8>
   193d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   193d4:	b	1a618 <main@@Base+0x43d8>
   193d8:	bne	193e8 <main@@Base+0x31a8>
   193dc:	ldrb	r0, [r7, #2]!
   193e0:	cmp	r0, #32
   193e4:	bhi	193f8 <main@@Base+0x31b8>
   193e8:	ldr	r0, [sp, #40]	; 0x28
   193ec:	mov	r2, r5
   193f0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   193f4:	mov	r7, r0
   193f8:	cmp	r9, r7
   193fc:	beq	1a51c <main@@Base+0x42dc>
   19400:	ldr	r8, [sp, #40]	; 0x28
   19404:	mov	r1, #4
   19408:	mov	r2, #2
   1940c:	mvn	r3, #-1073741824	; 0xc0000000
   19410:	ldr	r0, [r8]
   19414:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   19418:	cmp	r0, #0
   1941c:	bne	21460 <main@@Base+0xb220>
   19420:	cmp	r7, r5
   19424:	beq	1945c <main@@Base+0x321c>
   19428:	ldrb	r0, [r7]
   1942c:	cmp	r0, #91	; 0x5b
   19430:	bne	1945c <main@@Base+0x321c>
   19434:	ldr	sl, [sp, #36]	; 0x24
   19438:	add	r1, r7, #1
   1943c:	sub	r0, r5, r1
   19440:	cmp	r0, #2
   19444:	blt	194a8 <main@@Base+0x3268>
   19448:	ldrb	r0, [r1]
   1944c:	cmp	r0, #32
   19450:	bls	19498 <main@@Base+0x3258>
   19454:	mov	r7, r1
   19458:	b	194b8 <main@@Base+0x3278>
   1945c:	mov	r0, r8
   19460:	mov	r1, r7
   19464:	mov	r2, r5
   19468:	mov	r3, #22
   1946c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19470:	ldr	sl, [sp, #36]	; 0x24
   19474:	mov	r7, r0
   19478:	ldr	r0, [r8]
   1947c:	bl	32234 <flatcc_builder_end_vector@@Base>
   19480:	cmp	r0, #0
   19484:	str	r0, [sp, #52]	; 0x34
   19488:	beq	21460 <main@@Base+0xb220>
   1948c:	ldr	r0, [r8]
   19490:	mov	r1, #9
   19494:	b	1a604 <main@@Base+0x43c4>
   19498:	bne	194a8 <main@@Base+0x3268>
   1949c:	ldrb	r0, [r7, #2]!
   194a0:	cmp	r0, #32
   194a4:	bhi	194b8 <main@@Base+0x3278>
   194a8:	mov	r0, r8
   194ac:	mov	r2, r5
   194b0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   194b4:	mov	r7, r0
   194b8:	cmp	r7, r5
   194bc:	mov	r4, r5
   194c0:	beq	19504 <main@@Base+0x32c4>
   194c4:	ldrb	r0, [r7]
   194c8:	cmp	r0, #93	; 0x5d
   194cc:	bne	19500 <main@@Base+0x32c0>
   194d0:	add	r1, r7, #1
   194d4:	sub	r0, r5, r1
   194d8:	cmp	r0, #2
   194dc:	blt	1a0f4 <main@@Base+0x3eb4>
   194e0:	ldrb	r0, [r1]
   194e4:	cmp	r0, #32
   194e8:	bhi	19620 <main@@Base+0x33e0>
   194ec:	bne	1a0f4 <main@@Base+0x3eb4>
   194f0:	ldrb	r0, [r7, #2]!
   194f4:	cmp	r0, #32
   194f8:	bls	1a0f4 <main@@Base+0x3eb4>
   194fc:	b	19478 <main@@Base+0x3238>
   19500:	mov	r4, r7
   19504:	ldr	r0, [r8]
   19508:	mov	r1, #1
   1950c:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   19510:	mov	r3, r0
   19514:	cmp	r0, #0
   19518:	beq	17308 <main@@Base+0x10c8>
   1951c:	mov	r0, r8
   19520:	mov	r1, r4
   19524:	mov	r2, r5
   19528:	bl	23a30 <main@@Base+0xd7f0>
   1952c:	mov	r1, r0
   19530:	sub	r0, r5, r0
   19534:	cmp	r0, #2
   19538:	blt	1956c <main@@Base+0x332c>
   1953c:	ldrb	r0, [r1]
   19540:	cmp	r0, #32
   19544:	bls	19558 <main@@Base+0x3318>
   19548:	mov	r4, r1
   1954c:	cmp	r4, r5
   19550:	bne	19584 <main@@Base+0x3344>
   19554:	b	195f4 <main@@Base+0x33b4>
   19558:	bne	1956c <main@@Base+0x332c>
   1955c:	mov	r4, r1
   19560:	ldrb	r0, [r4, #1]!
   19564:	cmp	r0, #32
   19568:	bhi	1957c <main@@Base+0x333c>
   1956c:	mov	r0, r8
   19570:	mov	r2, r5
   19574:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19578:	mov	r4, r0
   1957c:	cmp	r4, r5
   19580:	beq	195f4 <main@@Base+0x33b4>
   19584:	ldrb	r0, [r4]
   19588:	cmp	r0, #44	; 0x2c
   1958c:	bne	195fc <main@@Base+0x33bc>
   19590:	add	r1, r4, #1
   19594:	sub	r0, r5, r1
   19598:	cmp	r0, #2
   1959c:	blt	195cc <main@@Base+0x338c>
   195a0:	ldrb	r0, [r1]
   195a4:	cmp	r0, #32
   195a8:	bls	195bc <main@@Base+0x337c>
   195ac:	mov	r4, r1
   195b0:	cmp	r4, r5
   195b4:	bne	195e4 <main@@Base+0x33a4>
   195b8:	b	19628 <main@@Base+0x33e8>
   195bc:	bne	195cc <main@@Base+0x338c>
   195c0:	ldrb	r0, [r4, #2]!
   195c4:	cmp	r0, #32
   195c8:	bhi	195dc <main@@Base+0x339c>
   195cc:	mov	r0, r8
   195d0:	mov	r2, r5
   195d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   195d8:	mov	r4, r0
   195dc:	cmp	r4, r5
   195e0:	beq	19628 <main@@Base+0x33e8>
   195e4:	ldrb	r0, [r4]
   195e8:	cmp	r0, #93	; 0x5d
   195ec:	bne	19504 <main@@Base+0x32c4>
   195f0:	b	19604 <main@@Base+0x33c4>
   195f4:	mov	r7, r5
   195f8:	b	19478 <main@@Base+0x3238>
   195fc:	cmp	r0, #93	; 0x5d
   19600:	bne	19c0c <main@@Base+0x39cc>
   19604:	add	r1, r4, #1
   19608:	sub	r0, r5, r1
   1960c:	cmp	r0, #2
   19610:	blt	1a0f4 <main@@Base+0x3eb4>
   19614:	ldrb	r0, [r1]
   19618:	cmp	r0, #32
   1961c:	bls	1a0e0 <main@@Base+0x3ea0>
   19620:	mov	r7, r1
   19624:	b	19478 <main@@Base+0x3238>
   19628:	mov	r0, r8
   1962c:	mov	r1, r5
   19630:	b	19c14 <main@@Base+0x39d4>
   19634:	cmp	r0, #34	; 0x22
   19638:	bne	1aadc <main@@Base+0x489c>
   1963c:	add	r1, r9, #22
   19640:	sub	r0, r5, r1
   19644:	cmp	r0, #2
   19648:	blt	1aa90 <main@@Base+0x4850>
   1964c:	ldrb	r0, [r1]
   19650:	cmp	r0, #32
   19654:	bls	1aa7c <main@@Base+0x483c>
   19658:	mov	r4, r1
   1965c:	cmp	r4, r5
   19660:	bne	1aaa8 <main@@Base+0x4868>
   19664:	b	1aaec <main@@Base+0x48ac>
   19668:	bne	1967c <main@@Base+0x343c>
   1966c:	mov	r4, r1
   19670:	ldrb	r0, [r4, #1]!
   19674:	cmp	r0, #32
   19678:	bhi	1968c <main@@Base+0x344c>
   1967c:	mov	r0, r6
   19680:	mov	r2, r5
   19684:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19688:	mov	r4, r0
   1968c:	cmp	r4, r5
   19690:	beq	196d8 <main@@Base+0x3498>
   19694:	ldrb	r0, [r4]
   19698:	cmp	r0, #58	; 0x3a
   1969c:	bne	196d8 <main@@Base+0x3498>
   196a0:	add	r1, r4, #1
   196a4:	sub	r0, r5, r1
   196a8:	cmp	r0, #2
   196ac:	blt	1ab28 <main@@Base+0x48e8>
   196b0:	ldrb	r0, [r1]
   196b4:	cmp	r0, #32
   196b8:	bls	1ab18 <main@@Base+0x48d8>
   196bc:	mov	r4, r1
   196c0:	cmp	sl, r4
   196c4:	bne	1ab40 <main@@Base+0x4900>
   196c8:	ldr	r8, [sp, #40]	; 0x28
   196cc:	mov	r0, r8
   196d0:	mov	r1, sl
   196d4:	b	1a5b8 <main@@Base+0x4378>
   196d8:	mov	r0, r6
   196dc:	mov	r1, r4
   196e0:	mov	r2, r5
   196e4:	mov	r3, #4
   196e8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   196ec:	b	1ab34 <main@@Base+0x48f4>
   196f0:	cmp	r0, #34	; 0x22
   196f4:	bne	1ea98 <main@@Base+0x8858>
   196f8:	add	r1, r9, #18
   196fc:	sub	r0, r5, r1
   19700:	cmp	r0, #2
   19704:	blt	1abec <main@@Base+0x49ac>
   19708:	ldrb	r0, [r1]
   1970c:	cmp	r0, #32
   19710:	bls	1abd8 <main@@Base+0x4998>
   19714:	mov	r4, r1
   19718:	cmp	r4, r5
   1971c:	bne	1ac04 <main@@Base+0x49c4>
   19720:	b	1ac3c <main@@Base+0x49fc>
   19724:	bne	19738 <main@@Base+0x34f8>
   19728:	mov	r7, r1
   1972c:	ldrb	r0, [r7, #1]!
   19730:	cmp	r0, #32
   19734:	bhi	19748 <main@@Base+0x3508>
   19738:	mov	r0, r8
   1973c:	mov	r2, r5
   19740:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19744:	mov	r7, r0
   19748:	cmp	r7, r5
   1974c:	beq	19788 <main@@Base+0x3548>
   19750:	ldrb	r0, [r7]
   19754:	cmp	r0, #58	; 0x3a
   19758:	bne	19788 <main@@Base+0x3548>
   1975c:	add	r1, r7, #1
   19760:	sub	r0, r5, r1
   19764:	cmp	r0, #2
   19768:	blt	1ac98 <main@@Base+0x4a58>
   1976c:	ldrb	r0, [r1]
   19770:	cmp	r0, #32
   19774:	bls	1ac88 <main@@Base+0x4a48>
   19778:	mov	r7, r1
   1977c:	cmp	r9, r7
   19780:	bne	1acb0 <main@@Base+0x4a70>
   19784:	b	18814 <main@@Base+0x25d4>
   19788:	mov	r0, r8
   1978c:	mov	r1, r7
   19790:	mov	r2, r5
   19794:	mov	r3, #4
   19798:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1979c:	b	1aca4 <main@@Base+0x4a64>
   197a0:	bne	197b4 <main@@Base+0x3574>
   197a4:	mov	r4, r1
   197a8:	ldrb	r0, [r4, #1]!
   197ac:	cmp	r0, #32
   197b0:	bhi	197c4 <main@@Base+0x3584>
   197b4:	mov	r0, r8
   197b8:	mov	r2, r5
   197bc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   197c0:	mov	r4, r0
   197c4:	cmp	r4, r5
   197c8:	beq	19804 <main@@Base+0x35c4>
   197cc:	ldrb	r0, [r4]
   197d0:	cmp	r0, #58	; 0x3a
   197d4:	bne	19804 <main@@Base+0x35c4>
   197d8:	add	r1, r4, #1
   197dc:	sub	r0, r5, r1
   197e0:	cmp	r0, #2
   197e4:	blt	1ae0c <main@@Base+0x4bcc>
   197e8:	ldrb	r0, [r1]
   197ec:	cmp	r0, #32
   197f0:	bls	1adfc <main@@Base+0x4bbc>
   197f4:	mov	r4, r1
   197f8:	cmp	r9, r4
   197fc:	bne	1ae24 <main@@Base+0x4be4>
   19800:	b	18814 <main@@Base+0x25d4>
   19804:	mov	r0, r8
   19808:	mov	r1, r4
   1980c:	mov	r2, r5
   19810:	mov	r3, #4
   19814:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19818:	b	1ae18 <main@@Base+0x4bd8>
   1981c:	bne	19830 <main@@Base+0x35f0>
   19820:	mov	r7, r1
   19824:	ldrb	r0, [r7, #1]!
   19828:	cmp	r0, #32
   1982c:	bhi	19840 <main@@Base+0x3600>
   19830:	mov	r0, r8
   19834:	mov	r2, r5
   19838:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1983c:	mov	r7, r0
   19840:	cmp	r7, r5
   19844:	beq	19880 <main@@Base+0x3640>
   19848:	ldrb	r0, [r7]
   1984c:	cmp	r0, #58	; 0x3a
   19850:	bne	19880 <main@@Base+0x3640>
   19854:	add	r1, r7, #1
   19858:	sub	r0, r5, r1
   1985c:	cmp	r0, #2
   19860:	blt	1bcd0 <main@@Base+0x5a90>
   19864:	ldrb	r0, [r1]
   19868:	cmp	r0, #32
   1986c:	bls	1bcc0 <main@@Base+0x5a80>
   19870:	mov	r7, r1
   19874:	cmp	r9, r7
   19878:	bne	1bce8 <main@@Base+0x5aa8>
   1987c:	b	18814 <main@@Base+0x25d4>
   19880:	mov	r0, r8
   19884:	mov	r1, r7
   19888:	mov	r2, r5
   1988c:	mov	r3, #4
   19890:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19894:	b	1bcdc <main@@Base+0x5a9c>
   19898:	cmp	r0, #34	; 0x22
   1989c:	bne	1ea98 <main@@Base+0x8858>
   198a0:	add	r1, r9, #10
   198a4:	sub	r0, r5, r1
   198a8:	cmp	r0, #2
   198ac:	blt	1bd80 <main@@Base+0x5b40>
   198b0:	ldrb	r0, [r1]
   198b4:	cmp	r0, #32
   198b8:	bls	1bd6c <main@@Base+0x5b2c>
   198bc:	mov	r4, r1
   198c0:	cmp	r4, r5
   198c4:	bne	1bd98 <main@@Base+0x5b58>
   198c8:	b	1bdd0 <main@@Base+0x5b90>
   198cc:	cmp	r0, #34	; 0x22
   198d0:	bne	1ea98 <main@@Base+0x8858>
   198d4:	add	r1, r9, #10
   198d8:	sub	r0, r5, r1
   198dc:	cmp	r0, #2
   198e0:	blt	1bdfc <main@@Base+0x5bbc>
   198e4:	ldrb	r0, [r1]
   198e8:	cmp	r0, #32
   198ec:	bls	1bde8 <main@@Base+0x5ba8>
   198f0:	mov	r4, r1
   198f4:	cmp	r4, r5
   198f8:	bne	1be14 <main@@Base+0x5bd4>
   198fc:	b	1be4c <main@@Base+0x5c0c>
   19900:	cmp	r0, #34	; 0x22
   19904:	bne	1becc <main@@Base+0x5c8c>
   19908:	add	r1, r9, #17
   1990c:	sub	r0, r5, r1
   19910:	cmp	r0, #2
   19914:	blt	1be78 <main@@Base+0x5c38>
   19918:	ldrb	r0, [r1]
   1991c:	cmp	r0, #32
   19920:	bls	1be64 <main@@Base+0x5c24>
   19924:	mov	r7, r1
   19928:	cmp	r7, r5
   1992c:	bne	1be90 <main@@Base+0x5c50>
   19930:	b	1bf44 <main@@Base+0x5d04>
   19934:	cmp	r0, #34	; 0x22
   19938:	bne	1bfc4 <main@@Base+0x5d84>
   1993c:	add	r1, r9, #17
   19940:	sub	r0, r5, r1
   19944:	cmp	r0, #2
   19948:	blt	1bf70 <main@@Base+0x5d30>
   1994c:	ldrb	r0, [r1]
   19950:	cmp	r0, #32
   19954:	bls	1bf5c <main@@Base+0x5d1c>
   19958:	mov	r7, r1
   1995c:	cmp	r7, r5
   19960:	bne	1bf88 <main@@Base+0x5d48>
   19964:	b	1c048 <main@@Base+0x5e08>
   19968:	bne	1997c <main@@Base+0x373c>
   1996c:	mov	r7, r1
   19970:	ldrb	r0, [r7, #1]!
   19974:	cmp	r0, #32
   19978:	bhi	1998c <main@@Base+0x374c>
   1997c:	mov	r0, r8
   19980:	mov	r2, r5
   19984:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19988:	mov	r7, r0
   1998c:	cmp	r7, r5
   19990:	beq	19a40 <main@@Base+0x3800>
   19994:	ldrb	r0, [r7]
   19998:	cmp	r0, #58	; 0x3a
   1999c:	bne	19a40 <main@@Base+0x3800>
   199a0:	add	r1, r7, #1
   199a4:	sub	r0, r5, r1
   199a8:	cmp	r0, #2
   199ac:	blt	1c088 <main@@Base+0x5e48>
   199b0:	ldrb	r0, [r1]
   199b4:	cmp	r0, #32
   199b8:	bls	1c078 <main@@Base+0x5e38>
   199bc:	mov	r7, r1
   199c0:	cmp	sl, r7
   199c4:	bne	1c0a0 <main@@Base+0x5e60>
   199c8:	add	r4, r9, #16
   199cc:	mov	r1, #8
   199d0:	mov	r2, #-268435456	; 0xf0000000
   199d4:	sub	r0, r5, r4
   199d8:	cmp	r0, #8
   199dc:	movcc	r1, r0
   199e0:	add	r1, r2, r1, lsl #28
   199e4:	asr	r1, r1, #28
   199e8:	cmp	r1, #0
   199ec:	blt	1c03c <main@@Base+0x5dfc>
   199f0:	ldrb	r1, [r4]
   199f4:	cmp	r1, #97	; 0x61
   199f8:	bne	1c03c <main@@Base+0x5dfc>
   199fc:	ldr	sl, [sp, #36]	; 0x24
   19a00:	cmp	r0, #2
   19a04:	blt	1f708 <main@@Base+0x94c8>
   19a08:	ldr	r2, [sp, #32]
   19a0c:	mov	r1, r9
   19a10:	ldrb	r0, [r1, #17]!
   19a14:	ldr	r2, [r2]
   19a18:	cmp	r2, #0
   19a1c:	beq	19c58 <main@@Base+0x3a18>
   19a20:	cmp	r0, #33	; 0x21
   19a24:	bcc	19a30 <main@@Base+0x37f0>
   19a28:	cmp	r0, #58	; 0x3a
   19a2c:	bne	1f708 <main@@Base+0x94c8>
   19a30:	ldr	r0, [sp, #32]
   19a34:	mov	r2, #0
   19a38:	str	r2, [r0]
   19a3c:	b	19c64 <main@@Base+0x3a24>
   19a40:	mov	r0, r8
   19a44:	mov	r1, r7
   19a48:	mov	r2, r5
   19a4c:	mov	r3, #4
   19a50:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19a54:	b	1c094 <main@@Base+0x5e54>
   19a58:	bne	19a68 <main@@Base+0x3828>
   19a5c:	ldrb	r0, [r1, #2]!
   19a60:	cmp	r0, #32
   19a64:	bhi	19a7c <main@@Base+0x383c>
   19a68:	mov	r1, r2
   19a6c:	mov	r0, r8
   19a70:	mov	r2, r5
   19a74:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19a78:	mov	r1, r0
   19a7c:	cmp	r9, r1
   19a80:	beq	18814 <main@@Base+0x25d4>
   19a84:	mov	r0, r8
   19a88:	mov	r2, r5
   19a8c:	add	r3, sp, #52	; 0x34
   19a90:	bl	172c8 <main@@Base+0x1088>
   19a94:	mov	r4, r0
   19a98:	ldr	r0, [sp, #52]	; 0x34
   19a9c:	cmp	r0, #0
   19aa0:	beq	17308 <main@@Base+0x10c8>
   19aa4:	ldr	r0, [r8]
   19aa8:	mov	r1, #12
   19aac:	b	19dc8 <main@@Base+0x3b88>
   19ab0:	bne	19ac0 <main@@Base+0x3880>
   19ab4:	ldrb	r0, [r7, #2]!
   19ab8:	cmp	r0, #32
   19abc:	bhi	19ad0 <main@@Base+0x3890>
   19ac0:	mov	r0, r8
   19ac4:	mov	r2, r5
   19ac8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19acc:	mov	r7, r0
   19ad0:	cmp	r9, r7
   19ad4:	beq	18814 <main@@Base+0x25d4>
   19ad8:	mov	r6, #0
   19adc:	cmp	r7, r5
   19ae0:	str	r6, [fp, #-52]	; 0xffffffcc
   19ae4:	str	r6, [fp, #-56]	; 0xffffffc8
   19ae8:	strb	r6, [fp, #-60]	; 0xffffffc4
   19aec:	str	r6, [sp, #56]	; 0x38
   19af0:	beq	19b50 <main@@Base+0x3910>
   19af4:	sub	r0, fp, #56	; 0x38
   19af8:	mov	r1, r7
   19afc:	mov	r2, r5
   19b00:	add	r3, sp, #56	; 0x38
   19b04:	str	r0, [sp]
   19b08:	mov	r0, r8
   19b0c:	bl	38410 <flatcc_json_parser_integer@@Base>
   19b10:	cmp	r0, r7
   19b14:	beq	19b60 <main@@Base+0x3920>
   19b18:	ldr	r2, [sp, #56]	; 0x38
   19b1c:	mov	r4, r0
   19b20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19b28:	cmp	r2, #0
   19b2c:	beq	19b70 <main@@Base+0x3930>
   19b30:	subs	r2, r0, #129	; 0x81
   19b34:	sbcs	r1, r1, #0
   19b38:	bcc	19ba0 <main@@Base+0x3960>
   19b3c:	mov	r0, r8
   19b40:	mov	r1, r4
   19b44:	mov	r2, r5
   19b48:	mov	r3, #8
   19b4c:	b	19b8c <main@@Base+0x394c>
   19b50:	mov	r4, r5
   19b54:	cmp	r7, r4
   19b58:	bne	19bec <main@@Base+0x39ac>
   19b5c:	b	19bb8 <main@@Base+0x3978>
   19b60:	mov	r4, r7
   19b64:	cmp	r7, r4
   19b68:	bne	19bec <main@@Base+0x39ac>
   19b6c:	b	19bb8 <main@@Base+0x3978>
   19b70:	subs	r2, r0, #128	; 0x80
   19b74:	sbcs	r1, r1, #0
   19b78:	bcc	19ba8 <main@@Base+0x3968>
   19b7c:	mov	r0, r8
   19b80:	mov	r1, r4
   19b84:	mov	r2, r5
   19b88:	mov	r3, #7
   19b8c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19b90:	mov	r4, r0
   19b94:	cmp	r7, r4
   19b98:	bne	19bec <main@@Base+0x39ac>
   19b9c:	b	19bb8 <main@@Base+0x3978>
   19ba0:	rsb	r6, r0, #0
   19ba4:	b	19bac <main@@Base+0x396c>
   19ba8:	mov	r6, r0
   19bac:	strb	r6, [fp, #-60]	; 0xffffffc4
   19bb0:	cmp	r7, r4
   19bb4:	bne	19bec <main@@Base+0x39ac>
   19bb8:	sub	r0, fp, #60	; 0x3c
   19bbc:	mov	r1, r7
   19bc0:	mov	r2, r5
   19bc4:	str	r0, [sp]
   19bc8:	mov	r0, r8
   19bcc:	ldr	r3, [pc, #4040]	; 1ab9c <main@@Base+0x495c>
   19bd0:	add	r3, pc, r3
   19bd4:	bl	23404 <main@@Base+0xd1c4>
   19bd8:	mov	r4, r0
   19bdc:	cmp	r0, r7
   19be0:	cmpne	r4, r5
   19be4:	beq	17308 <main@@Base+0x10c8>
   19be8:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19bec:	uxtb	r0, r6
   19bf0:	cmp	r0, #8
   19bf4:	ldrbeq	r0, [r8, #8]
   19bf8:	tsteq	r0, #2
   19bfc:	beq	1f71c <main@@Base+0x94dc>
   19c00:	ldr	r0, [r8]
   19c04:	mov	r1, #6
   19c08:	b	1aa4c <main@@Base+0x480c>
   19c0c:	mov	r0, r8
   19c10:	mov	r1, r4
   19c14:	mov	r2, r5
   19c18:	mov	r3, #9
   19c1c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19c20:	b	19474 <main@@Base+0x3234>
   19c24:	cmp	r0, #34	; 0x22
   19c28:	bne	1ea98 <main@@Base+0x8858>
   19c2c:	add	r1, r9, #18
   19c30:	sub	r0, r5, r1
   19c34:	cmp	r0, #2
   19c38:	blt	1c198 <main@@Base+0x5f58>
   19c3c:	ldrb	r0, [r1]
   19c40:	cmp	r0, #32
   19c44:	bls	1c184 <main@@Base+0x5f44>
   19c48:	mov	r4, r1
   19c4c:	cmp	r4, r5
   19c50:	bne	1c1b0 <main@@Base+0x5f70>
   19c54:	b	1c1f4 <main@@Base+0x5fb4>
   19c58:	cmp	r0, #34	; 0x22
   19c5c:	bne	1f708 <main@@Base+0x94c8>
   19c60:	add	r1, r9, #18
   19c64:	sub	r0, r5, r1
   19c68:	cmp	r0, #2
   19c6c:	blt	1c220 <main@@Base+0x5fe0>
   19c70:	ldrb	r0, [r1]
   19c74:	cmp	r0, #32
   19c78:	bls	1c20c <main@@Base+0x5fcc>
   19c7c:	mov	r7, r1
   19c80:	cmp	r7, r5
   19c84:	bne	1c238 <main@@Base+0x5ff8>
   19c88:	b	1c27c <main@@Base+0x603c>
   19c8c:	cmp	r0, #34	; 0x22
   19c90:	bne	196cc <main@@Base+0x348c>
   19c94:	add	r1, r9, #16
   19c98:	sub	r0, r5, r1
   19c9c:	cmp	r0, #2
   19ca0:	blt	1c5b0 <main@@Base+0x6370>
   19ca4:	ldrb	r0, [r1]
   19ca8:	cmp	r0, #32
   19cac:	bls	1c59c <main@@Base+0x635c>
   19cb0:	mov	r4, r1
   19cb4:	cmp	r4, r5
   19cb8:	bne	1c5c8 <main@@Base+0x6388>
   19cbc:	b	1c608 <main@@Base+0x63c8>
   19cc0:	bne	19cd0 <main@@Base+0x3a90>
   19cc4:	ldrb	r0, [r1, #2]!
   19cc8:	cmp	r0, #32
   19ccc:	bhi	19ce4 <main@@Base+0x3aa4>
   19cd0:	mov	r1, r2
   19cd4:	mov	r0, r8
   19cd8:	mov	r2, r5
   19cdc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19ce0:	mov	r1, r0
   19ce4:	cmp	r9, r1
   19ce8:	beq	18814 <main@@Base+0x25d4>
   19cec:	mov	r0, r8
   19cf0:	mov	r2, r5
   19cf4:	add	r3, sp, #52	; 0x34
   19cf8:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   19cfc:	mov	r4, r0
   19d00:	ldr	r0, [sp, #52]	; 0x34
   19d04:	cmp	r0, #0
   19d08:	beq	17308 <main@@Base+0x10c8>
   19d0c:	ldr	r0, [r8]
   19d10:	mov	r1, #3
   19d14:	b	19dc8 <main@@Base+0x3b88>
   19d18:	bne	19d28 <main@@Base+0x3ae8>
   19d1c:	ldrb	r0, [r4, #2]!
   19d20:	cmp	r0, #32
   19d24:	bhi	19d38 <main@@Base+0x3af8>
   19d28:	mov	r0, r8
   19d2c:	mov	r2, r5
   19d30:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19d34:	mov	r4, r0
   19d38:	cmp	r9, r4
   19d3c:	beq	18814 <main@@Base+0x25d4>
   19d40:	ldr	r0, [r8]
   19d44:	mov	r1, #1
   19d48:	mov	r2, #1
   19d4c:	mvn	r3, #0
   19d50:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   19d54:	cmp	r0, #0
   19d58:	bne	17308 <main@@Base+0x10c8>
   19d5c:	cmp	r4, r5
   19d60:	beq	19d94 <main@@Base+0x3b54>
   19d64:	ldrb	r0, [r4]
   19d68:	cmp	r0, #91	; 0x5b
   19d6c:	bne	19d94 <main@@Base+0x3b54>
   19d70:	add	r1, r4, #1
   19d74:	sub	r0, r5, r1
   19d78:	cmp	r0, #2
   19d7c:	blt	19dec <main@@Base+0x3bac>
   19d80:	ldrb	r0, [r1]
   19d84:	cmp	r0, #32
   19d88:	bls	19ddc <main@@Base+0x3b9c>
   19d8c:	mov	r4, r1
   19d90:	b	19dfc <main@@Base+0x3bbc>
   19d94:	mov	r0, r8
   19d98:	mov	r1, r4
   19d9c:	mov	r2, r5
   19da0:	mov	r3, #22
   19da4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19da8:	mov	r4, r0
   19dac:	ldr	r0, [r8]
   19db0:	bl	32234 <flatcc_builder_end_vector@@Base>
   19db4:	cmp	r0, #0
   19db8:	str	r0, [sp, #52]	; 0x34
   19dbc:	beq	17308 <main@@Base+0x10c8>
   19dc0:	ldr	r0, [r8]
   19dc4:	mov	r1, #30
   19dc8:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   19dcc:	cmp	r0, #0
   19dd0:	beq	17308 <main@@Base+0x10c8>
   19dd4:	ldr	r1, [sp, #52]	; 0x34
   19dd8:	b	1a618 <main@@Base+0x43d8>
   19ddc:	bne	19dec <main@@Base+0x3bac>
   19de0:	ldrb	r0, [r4, #2]!
   19de4:	cmp	r0, #32
   19de8:	bhi	19dfc <main@@Base+0x3bbc>
   19dec:	mov	r0, r8
   19df0:	mov	r2, r5
   19df4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19df8:	mov	r4, r0
   19dfc:	cmp	r4, r5
   19e00:	mov	r6, r5
   19e04:	beq	19e18 <main@@Base+0x3bd8>
   19e08:	ldrb	r0, [r4]
   19e0c:	cmp	r0, #93	; 0x5d
   19e10:	beq	1a030 <main@@Base+0x3df0>
   19e14:	mov	r6, r4
   19e18:	mov	r0, #0
   19e1c:	mov	r1, #1
   19e20:	strb	r0, [fp, #-60]	; 0xffffffc4
   19e24:	ldr	r0, [r8]
   19e28:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   19e2c:	cmp	r0, #0
   19e30:	beq	21468 <main@@Base+0xb228>
   19e34:	mov	r7, r0
   19e38:	mov	r4, r6
   19e3c:	mov	r6, #0
   19e40:	cmp	r4, r5
   19e44:	str	r6, [fp, #-52]	; 0xffffffcc
   19e48:	str	r6, [fp, #-56]	; 0xffffffc8
   19e4c:	strb	r6, [fp, #-60]	; 0xffffffc4
   19e50:	str	r6, [sp, #56]	; 0x38
   19e54:	beq	19e9c <main@@Base+0x3c5c>
   19e58:	sub	r0, fp, #56	; 0x38
   19e5c:	mov	r1, r4
   19e60:	mov	r2, r5
   19e64:	add	r3, sp, #56	; 0x38
   19e68:	str	r0, [sp]
   19e6c:	mov	r0, r8
   19e70:	bl	38410 <flatcc_json_parser_integer@@Base>
   19e74:	cmp	r0, r4
   19e78:	beq	19eac <main@@Base+0x3c6c>
   19e7c:	mov	r1, r0
   19e80:	ldr	r0, [sp, #56]	; 0x38
   19e84:	cmp	r0, #0
   19e88:	beq	19ebc <main@@Base+0x3c7c>
   19e8c:	mov	r0, r8
   19e90:	mov	r2, r5
   19e94:	mov	r3, #8
   19e98:	b	19edc <main@@Base+0x3c9c>
   19e9c:	mov	r1, r5
   19ea0:	cmp	r4, r1
   19ea4:	bne	19f24 <main@@Base+0x3ce4>
   19ea8:	b	19eec <main@@Base+0x3cac>
   19eac:	mov	r1, r4
   19eb0:	cmp	r4, r1
   19eb4:	bne	19f24 <main@@Base+0x3ce4>
   19eb8:	b	19eec <main@@Base+0x3cac>
   19ebc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ec0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19ec4:	subs	r3, r0, #256	; 0x100
   19ec8:	sbcs	r2, r2, #0
   19ecc:	bcc	1a00c <main@@Base+0x3dcc>
   19ed0:	mov	r0, r8
   19ed4:	mov	r2, r5
   19ed8:	mov	r3, #7
   19edc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   19ee0:	mov	r1, r0
   19ee4:	cmp	r4, r1
   19ee8:	bne	19f24 <main@@Base+0x3ce4>
   19eec:	sub	r0, fp, #60	; 0x3c
   19ef0:	mov	r1, r4
   19ef4:	mov	r2, r5
   19ef8:	str	r0, [sp]
   19efc:	mov	r0, r8
   19f00:	ldr	r3, [pc, #4084]	; 1aefc <main@@Base+0x4cbc>
   19f04:	add	r3, pc, r3
   19f08:	bl	23614 <main@@Base+0xd3d4>
   19f0c:	mov	r1, r0
   19f10:	cmp	r0, r4
   19f14:	beq	2148c <main@@Base+0xb24c>
   19f18:	cmp	r1, r5
   19f1c:	beq	2148c <main@@Base+0xb24c>
   19f20:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19f24:	sub	r0, r5, r1
   19f28:	strb	r6, [r7]
   19f2c:	cmp	r0, #2
   19f30:	blt	19f64 <main@@Base+0x3d24>
   19f34:	ldrb	r0, [r1]
   19f38:	cmp	r0, #32
   19f3c:	bls	19f50 <main@@Base+0x3d10>
   19f40:	mov	r4, r1
   19f44:	cmp	r4, r5
   19f48:	bne	19f7c <main@@Base+0x3d3c>
   19f4c:	b	1a020 <main@@Base+0x3de0>
   19f50:	bne	19f64 <main@@Base+0x3d24>
   19f54:	mov	r4, r1
   19f58:	ldrb	r0, [r4, #1]!
   19f5c:	cmp	r0, #32
   19f60:	bhi	19f74 <main@@Base+0x3d34>
   19f64:	mov	r0, r8
   19f68:	mov	r2, r5
   19f6c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19f70:	mov	r4, r0
   19f74:	cmp	r4, r5
   19f78:	beq	1a020 <main@@Base+0x3de0>
   19f7c:	ldrb	r0, [r4]
   19f80:	cmp	r0, #44	; 0x2c
   19f84:	bne	1a028 <main@@Base+0x3de8>
   19f88:	add	r1, r4, #1
   19f8c:	sub	r0, r5, r1
   19f90:	cmp	r0, #2
   19f94:	blt	19fc4 <main@@Base+0x3d84>
   19f98:	ldrb	r0, [r1]
   19f9c:	cmp	r0, #32
   19fa0:	bls	19fb4 <main@@Base+0x3d74>
   19fa4:	mov	r4, r1
   19fa8:	cmp	r4, r5
   19fac:	bne	19fdc <main@@Base+0x3d9c>
   19fb0:	b	1a074 <main@@Base+0x3e34>
   19fb4:	bne	19fc4 <main@@Base+0x3d84>
   19fb8:	ldrb	r0, [r4, #2]!
   19fbc:	cmp	r0, #32
   19fc0:	bhi	19fd4 <main@@Base+0x3d94>
   19fc4:	mov	r0, r8
   19fc8:	mov	r2, r5
   19fcc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   19fd0:	mov	r4, r0
   19fd4:	cmp	r4, r5
   19fd8:	beq	1a074 <main@@Base+0x3e34>
   19fdc:	ldrb	r0, [r4]
   19fe0:	cmp	r0, #93	; 0x5d
   19fe4:	beq	1a030 <main@@Base+0x3df0>
   19fe8:	mov	r0, #0
   19fec:	mov	r1, #1
   19ff0:	strb	r0, [fp, #-60]	; 0xffffffc4
   19ff4:	ldr	r0, [r8]
   19ff8:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   19ffc:	mov	r7, r0
   1a000:	cmp	r0, #0
   1a004:	bne	19e3c <main@@Base+0x3bfc>
   1a008:	b	17308 <main@@Base+0x10c8>
   1a00c:	mov	r6, r0
   1a010:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a014:	cmp	r4, r1
   1a018:	bne	19f24 <main@@Base+0x3ce4>
   1a01c:	b	19eec <main@@Base+0x3cac>
   1a020:	mov	r4, r5
   1a024:	b	19dac <main@@Base+0x3b6c>
   1a028:	cmp	r0, #93	; 0x5d
   1a02c:	bne	1ab04 <main@@Base+0x48c4>
   1a030:	add	r1, r4, #1
   1a034:	sub	r0, r5, r1
   1a038:	cmp	r0, #2
   1a03c:	blt	1a064 <main@@Base+0x3e24>
   1a040:	ldrb	r0, [r1]
   1a044:	cmp	r0, #32
   1a048:	bls	1a054 <main@@Base+0x3e14>
   1a04c:	mov	r4, r1
   1a050:	b	19dac <main@@Base+0x3b6c>
   1a054:	bne	1a064 <main@@Base+0x3e24>
   1a058:	ldrb	r0, [r4, #2]!
   1a05c:	cmp	r0, #32
   1a060:	bhi	19dac <main@@Base+0x3b6c>
   1a064:	mov	r0, r8
   1a068:	mov	r2, r5
   1a06c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a070:	b	19da8 <main@@Base+0x3b68>
   1a074:	mov	r0, r8
   1a078:	mov	r1, r5
   1a07c:	b	1ab0c <main@@Base+0x48cc>
   1a080:	bne	1a090 <main@@Base+0x3e50>
   1a084:	ldrb	r0, [r1, #2]!
   1a088:	cmp	r0, #32
   1a08c:	bhi	1a0a4 <main@@Base+0x3e64>
   1a090:	ldr	r0, [sp, #40]	; 0x28
   1a094:	mov	r1, r2
   1a098:	mov	r2, r5
   1a09c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a0a0:	mov	r1, r0
   1a0a4:	cmp	r9, r1
   1a0a8:	beq	1903c <main@@Base+0x2dfc>
   1a0ac:	ldr	r0, [sp, #48]	; 0x30
   1a0b0:	mov	r2, #8
   1a0b4:	mov	r3, #0
   1a0b8:	str	r2, [sp]
   1a0bc:	mov	r2, r5
   1a0c0:	str	r0, [sp, #4]
   1a0c4:	ldr	r0, [pc, #4064]	; 1b0ac <main@@Base+0x4e6c>
   1a0c8:	ldr	r8, [sp, #40]	; 0x28
   1a0cc:	add	r0, pc, r0
   1a0d0:	str	r0, [sp, #8]
   1a0d4:	mov	r0, r8
   1a0d8:	bl	38d78 <flatcc_json_parser_union@@Base>
   1a0dc:	b	1a5c0 <main@@Base+0x4380>
   1a0e0:	bne	1a0f4 <main@@Base+0x3eb4>
   1a0e4:	ldrb	r0, [r4, #2]!
   1a0e8:	cmp	r0, #32
   1a0ec:	mov	r7, r4
   1a0f0:	bhi	19478 <main@@Base+0x3238>
   1a0f4:	mov	r0, r8
   1a0f8:	mov	r2, r5
   1a0fc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a100:	b	19474 <main@@Base+0x3234>
   1a104:	cmp	r0, #34	; 0x22
   1a108:	bne	1ea98 <main@@Base+0x8858>
   1a10c:	add	r1, r9, #21
   1a110:	sub	r0, r5, r1
   1a114:	cmp	r0, #2
   1a118:	blt	1c634 <main@@Base+0x63f4>
   1a11c:	ldrb	r0, [r1]
   1a120:	cmp	r0, #32
   1a124:	bls	1c620 <main@@Base+0x63e0>
   1a128:	mov	r4, r1
   1a12c:	cmp	r4, r5
   1a130:	bne	1c64c <main@@Base+0x640c>
   1a134:	b	1c690 <main@@Base+0x6450>
   1a138:	bne	1a14c <main@@Base+0x3f0c>
   1a13c:	mov	r4, r1
   1a140:	ldrb	r0, [r4, #1]!
   1a144:	cmp	r0, #32
   1a148:	bhi	1a15c <main@@Base+0x3f1c>
   1a14c:	mov	r0, r8
   1a150:	mov	r2, r5
   1a154:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a158:	mov	r4, r0
   1a15c:	cmp	r4, r5
   1a160:	beq	1a19c <main@@Base+0x3f5c>
   1a164:	ldrb	r0, [r4]
   1a168:	cmp	r0, #58	; 0x3a
   1a16c:	bne	1a19c <main@@Base+0x3f5c>
   1a170:	add	r1, r4, #1
   1a174:	sub	r0, r5, r1
   1a178:	cmp	r0, #2
   1a17c:	blt	1c6bc <main@@Base+0x647c>
   1a180:	ldrb	r0, [r1]
   1a184:	cmp	r0, #32
   1a188:	bls	1c6ac <main@@Base+0x646c>
   1a18c:	mov	r4, r1
   1a190:	cmp	r7, r4
   1a194:	bne	1c6d4 <main@@Base+0x6494>
   1a198:	b	1ea98 <main@@Base+0x8858>
   1a19c:	mov	r0, r8
   1a1a0:	mov	r1, r4
   1a1a4:	mov	r2, r5
   1a1a8:	mov	r3, #4
   1a1ac:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a1b0:	b	1c6c8 <main@@Base+0x6488>
   1a1b4:	bne	1a1c8 <main@@Base+0x3f88>
   1a1b8:	mov	r4, r1
   1a1bc:	ldrb	r0, [r4, #1]!
   1a1c0:	cmp	r0, #32
   1a1c4:	bhi	1a1d8 <main@@Base+0x3f98>
   1a1c8:	mov	r0, r8
   1a1cc:	mov	r2, r5
   1a1d0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a1d4:	mov	r4, r0
   1a1d8:	cmp	r4, r5
   1a1dc:	beq	1a218 <main@@Base+0x3fd8>
   1a1e0:	ldrb	r0, [r4]
   1a1e4:	cmp	r0, #58	; 0x3a
   1a1e8:	bne	1a218 <main@@Base+0x3fd8>
   1a1ec:	add	r1, r4, #1
   1a1f0:	sub	r0, r5, r1
   1a1f4:	cmp	r0, #2
   1a1f8:	blt	1c82c <main@@Base+0x65ec>
   1a1fc:	ldrb	r0, [r1]
   1a200:	cmp	r0, #32
   1a204:	bls	1c81c <main@@Base+0x65dc>
   1a208:	mov	r4, r1
   1a20c:	cmp	r7, r4
   1a210:	bne	1c844 <main@@Base+0x6604>
   1a214:	b	1ea98 <main@@Base+0x8858>
   1a218:	mov	r0, r8
   1a21c:	mov	r1, r4
   1a220:	mov	r2, r5
   1a224:	mov	r3, #4
   1a228:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a22c:	b	1c838 <main@@Base+0x65f8>
   1a230:	bne	1a244 <main@@Base+0x4004>
   1a234:	mov	r7, r1
   1a238:	ldrb	r0, [r7, #1]!
   1a23c:	cmp	r0, #32
   1a240:	bhi	1a254 <main@@Base+0x4014>
   1a244:	mov	r0, r8
   1a248:	mov	r2, r5
   1a24c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a250:	mov	r7, r0
   1a254:	cmp	r7, r5
   1a258:	beq	1a294 <main@@Base+0x4054>
   1a25c:	ldrb	r0, [r7]
   1a260:	cmp	r0, #58	; 0x3a
   1a264:	bne	1a294 <main@@Base+0x4054>
   1a268:	add	r1, r7, #1
   1a26c:	sub	r0, r5, r1
   1a270:	cmp	r0, #2
   1a274:	blt	1c8d4 <main@@Base+0x6694>
   1a278:	ldrb	r0, [r1]
   1a27c:	cmp	r0, #32
   1a280:	bls	1c8c4 <main@@Base+0x6684>
   1a284:	mov	r7, r1
   1a288:	cmp	sl, r7
   1a28c:	bne	1c8ec <main@@Base+0x66ac>
   1a290:	b	196cc <main@@Base+0x348c>
   1a294:	mov	r0, r8
   1a298:	mov	r1, r7
   1a29c:	mov	r2, r5
   1a2a0:	mov	r3, #4
   1a2a4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a2a8:	b	1c8e0 <main@@Base+0x66a0>
   1a2ac:	bne	1a2c0 <main@@Base+0x4080>
   1a2b0:	mov	r7, r1
   1a2b4:	ldrb	r0, [r7, #1]!
   1a2b8:	cmp	r0, #32
   1a2bc:	bhi	1a2d0 <main@@Base+0x4090>
   1a2c0:	mov	r0, r8
   1a2c4:	mov	r2, r5
   1a2c8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a2cc:	mov	r7, r0
   1a2d0:	cmp	r7, r5
   1a2d4:	beq	1a310 <main@@Base+0x40d0>
   1a2d8:	ldrb	r0, [r7]
   1a2dc:	cmp	r0, #58	; 0x3a
   1a2e0:	bne	1a310 <main@@Base+0x40d0>
   1a2e4:	add	r1, r7, #1
   1a2e8:	sub	r0, r5, r1
   1a2ec:	cmp	r0, #2
   1a2f0:	blt	1c9f8 <main@@Base+0x67b8>
   1a2f4:	ldrb	r0, [r1]
   1a2f8:	cmp	r0, #32
   1a2fc:	bls	1c9e8 <main@@Base+0x67a8>
   1a300:	mov	r7, r1
   1a304:	cmp	r9, r7
   1a308:	bne	1ca10 <main@@Base+0x67d0>
   1a30c:	b	18814 <main@@Base+0x25d4>
   1a310:	mov	r0, r8
   1a314:	mov	r1, r7
   1a318:	mov	r2, r5
   1a31c:	mov	r3, #4
   1a320:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a324:	b	1ca04 <main@@Base+0x67c4>
   1a328:	andeq	r5, r4, r4, lsl #27
   1a32c:	bne	1a340 <main@@Base+0x4100>
   1a330:	mov	r7, r1
   1a334:	ldrb	r0, [r7, #1]!
   1a338:	cmp	r0, #32
   1a33c:	bhi	1a350 <main@@Base+0x4110>
   1a340:	mov	r0, r8
   1a344:	mov	r2, r5
   1a348:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a34c:	mov	r7, r0
   1a350:	cmp	r7, r5
   1a354:	beq	1a390 <main@@Base+0x4150>
   1a358:	ldrb	r0, [r7]
   1a35c:	cmp	r0, #58	; 0x3a
   1a360:	bne	1a390 <main@@Base+0x4150>
   1a364:	add	r1, r7, #1
   1a368:	sub	r0, r5, r1
   1a36c:	cmp	r0, #2
   1a370:	blt	1cb78 <main@@Base+0x6938>
   1a374:	ldrb	r0, [r1]
   1a378:	cmp	r0, #32
   1a37c:	bls	1cb68 <main@@Base+0x6928>
   1a380:	mov	r7, r1
   1a384:	cmp	r9, r7
   1a388:	bne	1cb90 <main@@Base+0x6950>
   1a38c:	b	18814 <main@@Base+0x25d4>
   1a390:	mov	r0, r8
   1a394:	mov	r1, r7
   1a398:	mov	r2, r5
   1a39c:	mov	r3, #4
   1a3a0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a3a4:	b	1cb84 <main@@Base+0x6944>
   1a3a8:	bne	1a3bc <main@@Base+0x417c>
   1a3ac:	mov	r7, r1
   1a3b0:	ldrb	r0, [r7, #1]!
   1a3b4:	cmp	r0, #32
   1a3b8:	bhi	1a3cc <main@@Base+0x418c>
   1a3bc:	mov	r0, r8
   1a3c0:	mov	r2, r5
   1a3c4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a3c8:	mov	r7, r0
   1a3cc:	cmp	r7, r5
   1a3d0:	beq	1a480 <main@@Base+0x4240>
   1a3d4:	ldrb	r0, [r7]
   1a3d8:	cmp	r0, #58	; 0x3a
   1a3dc:	bne	1a480 <main@@Base+0x4240>
   1a3e0:	add	r1, r7, #1
   1a3e4:	sub	r0, r5, r1
   1a3e8:	cmp	r0, #2
   1a3ec:	blt	1cc20 <main@@Base+0x69e0>
   1a3f0:	ldrb	r0, [r1]
   1a3f4:	cmp	r0, #32
   1a3f8:	bls	1cc10 <main@@Base+0x69d0>
   1a3fc:	mov	r7, r1
   1a400:	cmp	sl, r7
   1a404:	bne	1cc38 <main@@Base+0x69f8>
   1a408:	add	r4, r9, #16
   1a40c:	mov	r1, #8
   1a410:	mov	r2, #-268435456	; 0xf0000000
   1a414:	sub	r0, r5, r4
   1a418:	cmp	r0, #8
   1a41c:	movcc	r1, r0
   1a420:	add	r1, r2, r1, lsl #28
   1a424:	asr	r1, r1, #28
   1a428:	cmp	r1, #0
   1a42c:	blt	1c03c <main@@Base+0x5dfc>
   1a430:	ldrb	r1, [r4]
   1a434:	cmp	r1, #97	; 0x61
   1a438:	bne	1c03c <main@@Base+0x5dfc>
   1a43c:	ldr	sl, [sp, #36]	; 0x24
   1a440:	cmp	r0, #2
   1a444:	blt	1f708 <main@@Base+0x94c8>
   1a448:	ldr	r2, [sp, #32]
   1a44c:	mov	r1, r9
   1a450:	ldrb	r0, [r1, #17]!
   1a454:	ldr	r2, [r2]
   1a458:	cmp	r2, #0
   1a45c:	beq	1ac54 <main@@Base+0x4a14>
   1a460:	cmp	r0, #33	; 0x21
   1a464:	bcc	1a470 <main@@Base+0x4230>
   1a468:	cmp	r0, #58	; 0x3a
   1a46c:	bne	1f708 <main@@Base+0x94c8>
   1a470:	ldr	r0, [sp, #32]
   1a474:	mov	r2, #0
   1a478:	str	r2, [r0]
   1a47c:	b	1ac60 <main@@Base+0x4a20>
   1a480:	mov	r0, r8
   1a484:	mov	r1, r7
   1a488:	mov	r2, r5
   1a48c:	mov	r3, #4
   1a490:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a494:	b	1cc2c <main@@Base+0x69ec>
   1a498:	bne	1a4a8 <main@@Base+0x4268>
   1a49c:	ldrb	r0, [r7, #2]!
   1a4a0:	cmp	r0, #32
   1a4a4:	bhi	1a4b8 <main@@Base+0x4278>
   1a4a8:	ldr	r0, [sp, #40]	; 0x28
   1a4ac:	mov	r2, r5
   1a4b0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a4b4:	mov	r7, r0
   1a4b8:	cmp	r9, r7
   1a4bc:	beq	1a51c <main@@Base+0x42dc>
   1a4c0:	ldr	r8, [sp, #40]	; 0x28
   1a4c4:	mov	r1, #4
   1a4c8:	mov	r2, #2
   1a4cc:	mvn	r3, #-1073741824	; 0xc0000000
   1a4d0:	ldr	r0, [r8]
   1a4d4:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   1a4d8:	cmp	r0, #0
   1a4dc:	bne	21460 <main@@Base+0xb220>
   1a4e0:	cmp	r7, r5
   1a4e4:	beq	1a5cc <main@@Base+0x438c>
   1a4e8:	ldrb	r0, [r7]
   1a4ec:	cmp	r0, #91	; 0x5b
   1a4f0:	bne	1a5cc <main@@Base+0x438c>
   1a4f4:	ldr	sl, [sp, #36]	; 0x24
   1a4f8:	add	r1, r7, #1
   1a4fc:	sub	r0, r5, r1
   1a500:	cmp	r0, #2
   1a504:	blt	1a664 <main@@Base+0x4424>
   1a508:	ldrb	r0, [r1]
   1a50c:	cmp	r0, #32
   1a510:	bls	1a654 <main@@Base+0x4414>
   1a514:	mov	r7, r1
   1a518:	b	1a674 <main@@Base+0x4434>
   1a51c:	movw	r0, #31088	; 0x7970
   1a520:	movt	r0, #24436	; 0x5f74
   1a524:	eor	r0, sl, r0
   1a528:	orrs	r0, r0, r4
   1a52c:	bne	1a5ac <main@@Base+0x436c>
   1a530:	add	r4, r9, #8
   1a534:	mov	r1, #8
   1a538:	mov	r2, #-268435456	; 0xf0000000
   1a53c:	ldr	r8, [sp, #40]	; 0x28
   1a540:	ldr	sl, [sp, #36]	; 0x24
   1a544:	sub	r0, r5, r4
   1a548:	cmp	r0, #8
   1a54c:	movcc	r1, r0
   1a550:	add	r1, r2, r1, lsl #28
   1a554:	asr	r1, r1, #28
   1a558:	cmp	r1, #0
   1a55c:	blt	1f708 <main@@Base+0x94c8>
   1a560:	ldrb	r1, [r4]
   1a564:	cmp	r1, #101	; 0x65
   1a568:	bne	1f708 <main@@Base+0x94c8>
   1a56c:	cmp	r0, #2
   1a570:	blt	1f708 <main@@Base+0x94c8>
   1a574:	ldr	r2, [sp, #32]
   1a578:	mov	r1, r9
   1a57c:	ldrb	r0, [r1, #9]!
   1a580:	ldr	r2, [r2]
   1a584:	cmp	r2, #0
   1a588:	beq	1a620 <main@@Base+0x43e0>
   1a58c:	cmp	r0, #33	; 0x21
   1a590:	bcc	1a59c <main@@Base+0x435c>
   1a594:	cmp	r0, #58	; 0x3a
   1a598:	bne	1f708 <main@@Base+0x94c8>
   1a59c:	ldr	r0, [sp, #32]
   1a5a0:	mov	r2, #0
   1a5a4:	str	r2, [r0]
   1a5a8:	b	1a62c <main@@Base+0x43ec>
   1a5ac:	ldr	r8, [sp, #40]	; 0x28
   1a5b0:	mov	r0, r8
   1a5b4:	mov	r1, r9
   1a5b8:	mov	r2, r5
   1a5bc:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   1a5c0:	mov	r4, r0
   1a5c4:	ldr	sl, [sp, #36]	; 0x24
   1a5c8:	b	1f71c <main@@Base+0x94dc>
   1a5cc:	mov	r0, r8
   1a5d0:	mov	r1, r7
   1a5d4:	mov	r2, r5
   1a5d8:	mov	r3, #22
   1a5dc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a5e0:	ldr	sl, [sp, #36]	; 0x24
   1a5e4:	mov	r7, r0
   1a5e8:	ldr	r0, [r8]
   1a5ec:	bl	32234 <flatcc_builder_end_vector@@Base>
   1a5f0:	cmp	r0, #0
   1a5f4:	str	r0, [sp, #52]	; 0x34
   1a5f8:	beq	21460 <main@@Base+0xb220>
   1a5fc:	ldr	r0, [r8]
   1a600:	mov	r1, #31
   1a604:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   1a608:	cmp	r0, #0
   1a60c:	beq	21460 <main@@Base+0xb220>
   1a610:	ldr	r1, [sp, #52]	; 0x34
   1a614:	mov	r4, r7
   1a618:	str	r1, [r0]
   1a61c:	b	1f71c <main@@Base+0x94dc>
   1a620:	cmp	r0, #34	; 0x22
   1a624:	bne	1f708 <main@@Base+0x94c8>
   1a628:	add	r1, r9, #10
   1a62c:	sub	r0, r5, r1
   1a630:	cmp	r0, #2
   1a634:	blt	1a830 <main@@Base+0x45f0>
   1a638:	ldrb	r0, [r1]
   1a63c:	cmp	r0, #32
   1a640:	bls	1a81c <main@@Base+0x45dc>
   1a644:	mov	r2, r1
   1a648:	cmp	r2, r5
   1a64c:	bne	1a848 <main@@Base+0x4608>
   1a650:	b	1a880 <main@@Base+0x4640>
   1a654:	bne	1a664 <main@@Base+0x4424>
   1a658:	ldrb	r0, [r7, #2]!
   1a65c:	cmp	r0, #32
   1a660:	bhi	1a674 <main@@Base+0x4434>
   1a664:	mov	r0, r8
   1a668:	mov	r2, r5
   1a66c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a670:	mov	r7, r0
   1a674:	cmp	r7, r5
   1a678:	mov	r4, r5
   1a67c:	beq	1a6c0 <main@@Base+0x4480>
   1a680:	ldrb	r0, [r7]
   1a684:	cmp	r0, #93	; 0x5d
   1a688:	bne	1a6bc <main@@Base+0x447c>
   1a68c:	add	r1, r7, #1
   1a690:	sub	r0, r5, r1
   1a694:	cmp	r0, #2
   1a698:	blt	1da18 <main@@Base+0x77d8>
   1a69c:	ldrb	r0, [r1]
   1a6a0:	cmp	r0, #32
   1a6a4:	bhi	1a7c8 <main@@Base+0x4588>
   1a6a8:	bne	1da18 <main@@Base+0x77d8>
   1a6ac:	ldrb	r0, [r7, #2]!
   1a6b0:	cmp	r0, #32
   1a6b4:	bls	1da18 <main@@Base+0x77d8>
   1a6b8:	b	1a5e8 <main@@Base+0x43a8>
   1a6bc:	mov	r4, r7
   1a6c0:	ldr	r0, [r8]
   1a6c4:	mov	r1, #1
   1a6c8:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1a6cc:	mov	r3, r0
   1a6d0:	cmp	r0, #0
   1a6d4:	beq	17308 <main@@Base+0x10c8>
   1a6d8:	mov	r0, r8
   1a6dc:	mov	r1, r4
   1a6e0:	mov	r2, r5
   1a6e4:	bl	23a30 <main@@Base+0xd7f0>
   1a6e8:	mov	r1, r0
   1a6ec:	sub	r0, r5, r0
   1a6f0:	cmp	r0, #2
   1a6f4:	blt	1a728 <main@@Base+0x44e8>
   1a6f8:	ldrb	r0, [r1]
   1a6fc:	cmp	r0, #32
   1a700:	bls	1a714 <main@@Base+0x44d4>
   1a704:	mov	r4, r1
   1a708:	cmp	r4, r5
   1a70c:	bne	1a740 <main@@Base+0x4500>
   1a710:	b	1a7d0 <main@@Base+0x4590>
   1a714:	bne	1a728 <main@@Base+0x44e8>
   1a718:	mov	r4, r1
   1a71c:	ldrb	r0, [r4, #1]!
   1a720:	cmp	r0, #32
   1a724:	bhi	1a738 <main@@Base+0x44f8>
   1a728:	mov	r0, r8
   1a72c:	mov	r2, r5
   1a730:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a734:	mov	r4, r0
   1a738:	cmp	r4, r5
   1a73c:	beq	1a7d0 <main@@Base+0x4590>
   1a740:	ldrb	r0, [r4]
   1a744:	cmp	r0, #44	; 0x2c
   1a748:	bne	1a7d8 <main@@Base+0x4598>
   1a74c:	add	r1, r4, #1
   1a750:	sub	r0, r5, r1
   1a754:	cmp	r0, #2
   1a758:	blt	1a788 <main@@Base+0x4548>
   1a75c:	ldrb	r0, [r1]
   1a760:	cmp	r0, #32
   1a764:	bls	1a778 <main@@Base+0x4538>
   1a768:	mov	r4, r1
   1a76c:	cmp	r4, r5
   1a770:	bne	1a7a0 <main@@Base+0x4560>
   1a774:	b	1a810 <main@@Base+0x45d0>
   1a778:	bne	1a788 <main@@Base+0x4548>
   1a77c:	ldrb	r0, [r4, #2]!
   1a780:	cmp	r0, #32
   1a784:	bhi	1a798 <main@@Base+0x4558>
   1a788:	mov	r0, r8
   1a78c:	mov	r2, r5
   1a790:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a794:	mov	r4, r0
   1a798:	cmp	r4, r5
   1a79c:	beq	1a810 <main@@Base+0x45d0>
   1a7a0:	ldrb	r0, [r4]
   1a7a4:	cmp	r0, #93	; 0x5d
   1a7a8:	bne	1a6c0 <main@@Base+0x4480>
   1a7ac:	add	r1, r4, #1
   1a7b0:	sub	r0, r5, r1
   1a7b4:	cmp	r0, #2
   1a7b8:	blt	1da18 <main@@Base+0x77d8>
   1a7bc:	ldrb	r0, [r1]
   1a7c0:	cmp	r0, #32
   1a7c4:	bls	1cdf8 <main@@Base+0x6bb8>
   1a7c8:	mov	r7, r1
   1a7cc:	b	1a5e8 <main@@Base+0x43a8>
   1a7d0:	mov	r7, r5
   1a7d4:	b	1a5e8 <main@@Base+0x43a8>
   1a7d8:	cmp	r0, #93	; 0x5d
   1a7dc:	bne	1c060 <main@@Base+0x5e20>
   1a7e0:	add	r1, r4, #1
   1a7e4:	sub	r0, r5, r1
   1a7e8:	cmp	r0, #2
   1a7ec:	blt	1da18 <main@@Base+0x77d8>
   1a7f0:	ldrb	r0, [r1]
   1a7f4:	cmp	r0, #32
   1a7f8:	bls	1d9f8 <main@@Base+0x77b8>
   1a7fc:	ldr	r5, [sp, #44]	; 0x2c
   1a800:	ldr	r8, [sp, #40]	; 0x28
   1a804:	ldr	sl, [sp, #36]	; 0x24
   1a808:	mov	r7, r1
   1a80c:	b	1a5e8 <main@@Base+0x43a8>
   1a810:	mov	r0, r8
   1a814:	mov	r1, r5
   1a818:	b	1c068 <main@@Base+0x5e28>
   1a81c:	bne	1a830 <main@@Base+0x45f0>
   1a820:	mov	r2, r1
   1a824:	ldrb	r0, [r2, #1]!
   1a828:	cmp	r0, #32
   1a82c:	bhi	1a840 <main@@Base+0x4600>
   1a830:	mov	r0, r8
   1a834:	mov	r2, r5
   1a838:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a83c:	mov	r2, r0
   1a840:	cmp	r2, r5
   1a844:	beq	1a880 <main@@Base+0x4640>
   1a848:	ldrb	r0, [r2]
   1a84c:	cmp	r0, #58	; 0x3a
   1a850:	bne	1a880 <main@@Base+0x4640>
   1a854:	add	r1, r2, #1
   1a858:	sub	r0, r5, r1
   1a85c:	cmp	r0, #2
   1a860:	blt	1c7c4 <main@@Base+0x6584>
   1a864:	ldrb	r0, [r1]
   1a868:	cmp	r0, #32
   1a86c:	bls	1c7b4 <main@@Base+0x6574>
   1a870:	mov	r2, r1
   1a874:	cmp	r4, r2
   1a878:	bne	1c7dc <main@@Base+0x659c>
   1a87c:	b	1f708 <main@@Base+0x94c8>
   1a880:	mov	r1, r2
   1a884:	mov	r0, r8
   1a888:	mov	r2, r5
   1a88c:	mov	r3, #4
   1a890:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a894:	b	1c7d0 <main@@Base+0x6590>
   1a898:	cmp	r0, #34	; 0x22
   1a89c:	bne	1ea98 <main@@Base+0x8858>
   1a8a0:	add	r1, r9, #18
   1a8a4:	sub	r0, r5, r1
   1a8a8:	cmp	r0, #2
   1a8ac:	blt	1cd10 <main@@Base+0x6ad0>
   1a8b0:	ldrb	r0, [r1]
   1a8b4:	cmp	r0, #32
   1a8b8:	bls	1ccfc <main@@Base+0x6abc>
   1a8bc:	mov	r4, r1
   1a8c0:	cmp	r4, r5
   1a8c4:	bne	1cd28 <main@@Base+0x6ae8>
   1a8c8:	b	1cd6c <main@@Base+0x6b2c>
   1a8cc:	bne	1a8dc <main@@Base+0x469c>
   1a8d0:	ldrb	r0, [r7, #2]!
   1a8d4:	cmp	r0, #32
   1a8d8:	bhi	1a8ec <main@@Base+0x46ac>
   1a8dc:	mov	r0, r8
   1a8e0:	mov	r2, r5
   1a8e4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1a8e8:	mov	r7, r0
   1a8ec:	cmp	r9, r7
   1a8f0:	beq	18814 <main@@Base+0x25d4>
   1a8f4:	mov	r0, #0
   1a8f8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a8fc:	sub	r0, r5, r7
   1a900:	cmp	r0, #4
   1a904:	blt	1a940 <main@@Base+0x4700>
   1a908:	ldr	r1, [r7]
   1a90c:	movw	r2, #29300	; 0x7274
   1a910:	movt	r2, #25973	; 0x6575
   1a914:	cmp	r1, r2
   1a918:	beq	1a9a8 <main@@Base+0x4768>
   1a91c:	cmp	r0, #5
   1a920:	blt	1a940 <main@@Base+0x4700>
   1a924:	ldr	r1, [pc, #4052]	; 1b900 <main@@Base+0x56c0>
   1a928:	mov	r0, r7
   1a92c:	mov	r2, #5
   1a930:	add	r1, pc, r1
   1a934:	bl	14e64 <memcmp@plt>
   1a938:	cmp	r0, #0
   1a93c:	beq	1aa68 <main@@Base+0x4828>
   1a940:	mov	r6, #0
   1a944:	cmp	r7, r5
   1a948:	str	r6, [fp, #-52]	; 0xffffffcc
   1a94c:	str	r6, [fp, #-56]	; 0xffffffc8
   1a950:	str	r6, [sp, #56]	; 0x38
   1a954:	beq	1a9a0 <main@@Base+0x4760>
   1a958:	sub	r0, fp, #56	; 0x38
   1a95c:	mov	r1, r7
   1a960:	mov	r2, r5
   1a964:	add	r3, sp, #56	; 0x38
   1a968:	str	r0, [sp]
   1a96c:	mov	r0, r8
   1a970:	bl	38410 <flatcc_json_parser_integer@@Base>
   1a974:	cmp	r0, r7
   1a978:	beq	1a9b4 <main@@Base+0x4774>
   1a97c:	mov	r4, r0
   1a980:	ldr	r0, [sp, #56]	; 0x38
   1a984:	cmp	r0, #0
   1a988:	beq	1a9bc <main@@Base+0x477c>
   1a98c:	mov	r0, r8
   1a990:	mov	r1, r4
   1a994:	mov	r2, r5
   1a998:	mov	r3, #8
   1a99c:	b	1a9e0 <main@@Base+0x47a0>
   1a9a0:	mov	r4, r5
   1a9a4:	b	1a9e8 <main@@Base+0x47a8>
   1a9a8:	mov	r6, #1
   1a9ac:	add	r4, r7, #4
   1a9b0:	b	1a9f4 <main@@Base+0x47b4>
   1a9b4:	mov	r4, r7
   1a9b8:	b	1a9e8 <main@@Base+0x47a8>
   1a9bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a9c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a9c4:	subs	r2, r0, #256	; 0x100
   1a9c8:	sbcs	r1, r1, #0
   1a9cc:	bcc	1aa74 <main@@Base+0x4834>
   1a9d0:	mov	r0, r8
   1a9d4:	mov	r1, r4
   1a9d8:	mov	r2, r5
   1a9dc:	mov	r3, #7
   1a9e0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1a9e4:	mov	r4, r0
   1a9e8:	uxtb	r6, r6
   1a9ec:	cmp	r6, #0
   1a9f0:	movwne	r6, #1
   1a9f4:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a9f8:	cmp	r7, r4
   1a9fc:	bne	1aa34 <main@@Base+0x47f4>
   1aa00:	sub	r0, fp, #60	; 0x3c
   1aa04:	mov	r1, r7
   1aa08:	mov	r2, r5
   1aa0c:	str	r0, [sp]
   1aa10:	mov	r0, r8
   1aa14:	ldr	r3, [pc, #3940]	; 1b980 <main@@Base+0x5740>
   1aa18:	add	r3, pc, r3
   1aa1c:	bl	25680 <main@@Base+0xf440>
   1aa20:	mov	r4, r0
   1aa24:	cmp	r0, r7
   1aa28:	cmpne	r4, r5
   1aa2c:	beq	17308 <main@@Base+0x10c8>
   1aa30:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1aa34:	cmp	r6, #1
   1aa38:	ldrbeq	r0, [r8, #8]
   1aa3c:	tsteq	r0, #2
   1aa40:	beq	1f71c <main@@Base+0x94dc>
   1aa44:	ldr	r0, [r8]
   1aa48:	mov	r1, #15
   1aa4c:	mov	r2, #1
   1aa50:	mov	r3, #1
   1aa54:	bl	32964 <flatcc_builder_table_add@@Base>
   1aa58:	cmp	r0, #0
   1aa5c:	beq	17308 <main@@Base+0x10c8>
   1aa60:	strb	r6, [r0]
   1aa64:	b	1f71c <main@@Base+0x94dc>
   1aa68:	mov	r6, #0
   1aa6c:	add	r4, r7, #5
   1aa70:	b	1a9f4 <main@@Base+0x47b4>
   1aa74:	mov	r6, r0
   1aa78:	b	1a9e8 <main@@Base+0x47a8>
   1aa7c:	bne	1aa90 <main@@Base+0x4850>
   1aa80:	mov	r4, r1
   1aa84:	ldrb	r0, [r4, #1]!
   1aa88:	cmp	r0, #32
   1aa8c:	bhi	1aaa0 <main@@Base+0x4860>
   1aa90:	ldr	r0, [sp, #40]	; 0x28
   1aa94:	mov	r2, r5
   1aa98:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1aa9c:	mov	r4, r0
   1aaa0:	cmp	r4, r5
   1aaa4:	beq	1aaec <main@@Base+0x48ac>
   1aaa8:	ldrb	r0, [r4]
   1aaac:	cmp	r0, #58	; 0x3a
   1aab0:	bne	1aaec <main@@Base+0x48ac>
   1aab4:	add	r1, r4, #1
   1aab8:	sub	r0, r5, r1
   1aabc:	cmp	r0, #2
   1aac0:	blt	1ce10 <main@@Base+0x6bd0>
   1aac4:	ldrb	r0, [r1]
   1aac8:	cmp	r0, #32
   1aacc:	bls	1ce00 <main@@Base+0x6bc0>
   1aad0:	mov	r4, r1
   1aad4:	cmp	r8, r4
   1aad8:	bne	1ce28 <main@@Base+0x6be8>
   1aadc:	ldr	r0, [sp, #40]	; 0x28
   1aae0:	mov	r1, r8
   1aae4:	mov	r8, r0
   1aae8:	b	1f710 <main@@Base+0x94d0>
   1aaec:	ldr	r0, [sp, #40]	; 0x28
   1aaf0:	mov	r1, r4
   1aaf4:	mov	r2, r5
   1aaf8:	mov	r3, #4
   1aafc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1ab00:	b	1ce1c <main@@Base+0x6bdc>
   1ab04:	mov	r0, r8
   1ab08:	mov	r1, r4
   1ab0c:	mov	r2, r5
   1ab10:	mov	r3, #9
   1ab14:	b	19da4 <main@@Base+0x3b64>
   1ab18:	bne	1ab28 <main@@Base+0x48e8>
   1ab1c:	ldrb	r0, [r4, #2]!
   1ab20:	cmp	r0, #32
   1ab24:	bhi	1ab38 <main@@Base+0x48f8>
   1ab28:	mov	r0, r6
   1ab2c:	mov	r2, r5
   1ab30:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ab34:	mov	r4, r0
   1ab38:	cmp	sl, r4
   1ab3c:	beq	196c8 <main@@Base+0x3488>
   1ab40:	ldr	r8, [sp, #40]	; 0x28
   1ab44:	mov	r1, #1
   1ab48:	mov	r2, #1
   1ab4c:	mvn	r3, #0
   1ab50:	ldr	r0, [r8]
   1ab54:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   1ab58:	cmp	r0, #0
   1ab5c:	bne	17308 <main@@Base+0x10c8>
   1ab60:	ldr	sl, [sp, #36]	; 0x24
   1ab64:	cmp	r4, r5
   1ab68:	beq	1aba0 <main@@Base+0x4960>
   1ab6c:	ldrb	r0, [r4]
   1ab70:	cmp	r0, #91	; 0x5b
   1ab74:	bne	1aba0 <main@@Base+0x4960>
   1ab78:	add	r1, r4, #1
   1ab7c:	sub	r0, r5, r1
   1ab80:	cmp	r0, #2
   1ab84:	blt	1c31c <main@@Base+0x60dc>
   1ab88:	ldrb	r0, [r1]
   1ab8c:	cmp	r0, #32
   1ab90:	bls	1c30c <main@@Base+0x60cc>
   1ab94:	mov	r4, r1
   1ab98:	b	1c32c <main@@Base+0x60ec>
   1ab9c:			; <UNDEFINED> instruction: 0x000454b4
   1aba0:	mov	r0, r8
   1aba4:	mov	r1, r4
   1aba8:	mov	r2, r5
   1abac:	mov	r3, #22
   1abb0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1abb4:	mov	r4, r0
   1abb8:	ldr	r0, [r8]
   1abbc:	bl	32234 <flatcc_builder_end_vector@@Base>
   1abc0:	cmp	r0, #0
   1abc4:	str	r0, [sp, #52]	; 0x34
   1abc8:	beq	17308 <main@@Base+0x10c8>
   1abcc:	ldr	r0, [r8]
   1abd0:	mov	r1, #24
   1abd4:	b	19dc8 <main@@Base+0x3b88>
   1abd8:	bne	1abec <main@@Base+0x49ac>
   1abdc:	mov	r4, r1
   1abe0:	ldrb	r0, [r4, #1]!
   1abe4:	cmp	r0, #32
   1abe8:	bhi	1abfc <main@@Base+0x49bc>
   1abec:	mov	r0, r8
   1abf0:	mov	r2, r5
   1abf4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1abf8:	mov	r4, r0
   1abfc:	cmp	r4, r5
   1ac00:	beq	1ac3c <main@@Base+0x49fc>
   1ac04:	ldrb	r0, [r4]
   1ac08:	cmp	r0, #58	; 0x3a
   1ac0c:	bne	1ac3c <main@@Base+0x49fc>
   1ac10:	add	r1, r4, #1
   1ac14:	sub	r0, r5, r1
   1ac18:	cmp	r0, #2
   1ac1c:	blt	1cf9c <main@@Base+0x6d5c>
   1ac20:	ldrb	r0, [r1]
   1ac24:	cmp	r0, #32
   1ac28:	bls	1cf8c <main@@Base+0x6d4c>
   1ac2c:	mov	r4, r1
   1ac30:	cmp	r7, r4
   1ac34:	bne	1cfb4 <main@@Base+0x6d74>
   1ac38:	b	1ea98 <main@@Base+0x8858>
   1ac3c:	mov	r0, r8
   1ac40:	mov	r1, r4
   1ac44:	mov	r2, r5
   1ac48:	mov	r3, #4
   1ac4c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1ac50:	b	1cfa8 <main@@Base+0x6d68>
   1ac54:	cmp	r0, #34	; 0x22
   1ac58:	bne	1f708 <main@@Base+0x94c8>
   1ac5c:	add	r1, r9, #18
   1ac60:	sub	r0, r5, r1
   1ac64:	cmp	r0, #2
   1ac68:	blt	1cf18 <main@@Base+0x6cd8>
   1ac6c:	ldrb	r0, [r1]
   1ac70:	cmp	r0, #32
   1ac74:	bls	1cf04 <main@@Base+0x6cc4>
   1ac78:	mov	r7, r1
   1ac7c:	cmp	r7, r5
   1ac80:	bne	1cf30 <main@@Base+0x6cf0>
   1ac84:	b	1cf74 <main@@Base+0x6d34>
   1ac88:	bne	1ac98 <main@@Base+0x4a58>
   1ac8c:	ldrb	r0, [r7, #2]!
   1ac90:	cmp	r0, #32
   1ac94:	bhi	1aca8 <main@@Base+0x4a68>
   1ac98:	mov	r0, r8
   1ac9c:	mov	r2, r5
   1aca0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1aca4:	mov	r7, r0
   1aca8:	cmp	r9, r7
   1acac:	beq	18814 <main@@Base+0x25d4>
   1acb0:	mov	r6, #0
   1acb4:	cmp	r7, r5
   1acb8:	str	r6, [fp, #-52]	; 0xffffffcc
   1acbc:	str	r6, [fp, #-56]	; 0xffffffc8
   1acc0:	strh	r6, [fp, #-60]	; 0xffffffc4
   1acc4:	str	r6, [sp, #56]	; 0x38
   1acc8:	beq	1ad2c <main@@Base+0x4aec>
   1accc:	sub	r0, fp, #56	; 0x38
   1acd0:	mov	r1, r7
   1acd4:	mov	r2, r5
   1acd8:	add	r3, sp, #56	; 0x38
   1acdc:	str	r0, [sp]
   1ace0:	mov	r0, r8
   1ace4:	bl	38410 <flatcc_json_parser_integer@@Base>
   1ace8:	cmp	r0, r7
   1acec:	beq	1ad3c <main@@Base+0x4afc>
   1acf0:	ldr	r2, [sp, #56]	; 0x38
   1acf4:	mov	r4, r0
   1acf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1acfc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ad00:	cmp	r2, #0
   1ad04:	beq	1ad4c <main@@Base+0x4b0c>
   1ad08:	movw	r2, #32769	; 0x8001
   1ad0c:	subs	r2, r0, r2
   1ad10:	sbcs	r1, r1, #0
   1ad14:	bcc	1ad7c <main@@Base+0x4b3c>
   1ad18:	mov	r0, r8
   1ad1c:	mov	r1, r4
   1ad20:	mov	r2, r5
   1ad24:	mov	r3, #8
   1ad28:	b	1ad68 <main@@Base+0x4b28>
   1ad2c:	mov	r4, r5
   1ad30:	cmp	r7, r4
   1ad34:	bne	1adc8 <main@@Base+0x4b88>
   1ad38:	b	1ad94 <main@@Base+0x4b54>
   1ad3c:	mov	r4, r7
   1ad40:	cmp	r7, r4
   1ad44:	bne	1adc8 <main@@Base+0x4b88>
   1ad48:	b	1ad94 <main@@Base+0x4b54>
   1ad4c:	subs	r2, r0, #32768	; 0x8000
   1ad50:	sbcs	r1, r1, #0
   1ad54:	bcc	1ad84 <main@@Base+0x4b44>
   1ad58:	mov	r0, r8
   1ad5c:	mov	r1, r4
   1ad60:	mov	r2, r5
   1ad64:	mov	r3, #7
   1ad68:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1ad6c:	mov	r4, r0
   1ad70:	cmp	r7, r4
   1ad74:	bne	1adc8 <main@@Base+0x4b88>
   1ad78:	b	1ad94 <main@@Base+0x4b54>
   1ad7c:	rsb	r6, r0, #0
   1ad80:	b	1ad88 <main@@Base+0x4b48>
   1ad84:	mov	r6, r0
   1ad88:	strh	r6, [fp, #-60]	; 0xffffffc4
   1ad8c:	cmp	r7, r4
   1ad90:	bne	1adc8 <main@@Base+0x4b88>
   1ad94:	sub	r0, fp, #60	; 0x3c
   1ad98:	mov	r1, r7
   1ad9c:	mov	r2, r5
   1ada0:	str	r0, [sp]
   1ada4:	mov	r0, r8
   1ada8:	ldr	r3, [pc, #4024]	; 1bd68 <main@@Base+0x5b28>
   1adac:	add	r3, pc, r3
   1adb0:	bl	2381c <main@@Base+0xd5dc>
   1adb4:	mov	r4, r0
   1adb8:	cmp	r0, r7
   1adbc:	cmpne	r4, r5
   1adc0:	beq	17308 <main@@Base+0x10c8>
   1adc4:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1adc8:	uxth	r0, r6
   1adcc:	cmp	r0, #100	; 0x64
   1add0:	ldrbeq	r0, [r8, #8]
   1add4:	tsteq	r0, #2
   1add8:	beq	1f71c <main@@Base+0x94dc>
   1addc:	ldr	r0, [r8]
   1ade0:	mov	r1, #2
   1ade4:	mov	r2, #2
   1ade8:	mov	r3, #2
   1adec:	bl	32964 <flatcc_builder_table_add@@Base>
   1adf0:	cmp	r0, #0
   1adf4:	bne	1cb60 <main@@Base+0x6920>
   1adf8:	b	17308 <main@@Base+0x10c8>
   1adfc:	bne	1ae0c <main@@Base+0x4bcc>
   1ae00:	ldrb	r0, [r4, #2]!
   1ae04:	cmp	r0, #32
   1ae08:	bhi	1ae1c <main@@Base+0x4bdc>
   1ae0c:	mov	r0, r8
   1ae10:	mov	r2, r5
   1ae14:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ae18:	mov	r4, r0
   1ae1c:	cmp	r9, r4
   1ae20:	beq	18814 <main@@Base+0x25d4>
   1ae24:	ldr	r0, [r8]
   1ae28:	mov	r1, #0
   1ae2c:	mov	r2, #32
   1ae30:	mov	r3, #16
   1ae34:	bl	32964 <flatcc_builder_table_add@@Base>
   1ae38:	cmp	r0, #0
   1ae3c:	beq	17308 <main@@Base+0x10c8>
   1ae40:	cmp	r4, r5
   1ae44:	beq	1ae7c <main@@Base+0x4c3c>
   1ae48:	mov	r9, r0
   1ae4c:	ldrb	r0, [r4]
   1ae50:	cmp	r0, #123	; 0x7b
   1ae54:	bne	1ae7c <main@@Base+0x4c3c>
   1ae58:	add	r1, r4, #1
   1ae5c:	sub	r0, r5, r1
   1ae60:	cmp	r0, #2
   1ae64:	blt	1aea4 <main@@Base+0x4c64>
   1ae68:	ldrb	r0, [r1]
   1ae6c:	cmp	r0, #32
   1ae70:	bls	1ae94 <main@@Base+0x4c54>
   1ae74:	mov	r4, r1
   1ae78:	b	1aeb4 <main@@Base+0x4c74>
   1ae7c:	mov	r0, r8
   1ae80:	mov	r1, r4
   1ae84:	mov	r2, r5
   1ae88:	mov	r3, #21
   1ae8c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1ae90:	b	1f718 <main@@Base+0x94d8>
   1ae94:	bne	1aea4 <main@@Base+0x4c64>
   1ae98:	ldrb	r0, [r4, #2]!
   1ae9c:	cmp	r0, #32
   1aea0:	bhi	1aeb4 <main@@Base+0x4c74>
   1aea4:	mov	r0, r8
   1aea8:	mov	r2, r5
   1aeac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1aeb0:	mov	r4, r0
   1aeb4:	cmp	r4, r5
   1aeb8:	mov	r2, r5
   1aebc:	beq	1af04 <main@@Base+0x4cc4>
   1aec0:	ldrb	r0, [r4]
   1aec4:	cmp	r0, #125	; 0x7d
   1aec8:	bne	1af00 <main@@Base+0x4cc0>
   1aecc:	add	r1, r4, #1
   1aed0:	sub	r0, r5, r1
   1aed4:	cmp	r0, #2
   1aed8:	blt	1e250 <main@@Base+0x8010>
   1aedc:	ldrb	r0, [r1]
   1aee0:	cmp	r0, #32
   1aee4:	bhi	1bc54 <main@@Base+0x5a14>
   1aee8:	bne	1e250 <main@@Base+0x8010>
   1aeec:	ldrb	r0, [r4, #2]!
   1aef0:	cmp	r0, #32
   1aef4:	bhi	1f71c <main@@Base+0x94dc>
   1aef8:	b	1e250 <main@@Base+0x8010>
   1aefc:	muleq	r4, r0, r1
   1af00:	mov	r2, r4
   1af04:	add	r0, r9, #26
   1af08:	str	r9, [sp, #20]
   1af0c:	str	r0, [sp, #16]
   1af10:	cmp	r2, r5
   1af14:	mov	sl, r5
   1af18:	beq	1af6c <main@@Base+0x4d2c>
   1af1c:	ldrb	r0, [r2]
   1af20:	cmp	r0, #46	; 0x2e
   1af24:	beq	1af40 <main@@Base+0x4d00>
   1af28:	cmp	r0, #34	; 0x22
   1af2c:	bne	1af5c <main@@Base+0x4d1c>
   1af30:	ldr	r0, [sp, #32]
   1af34:	mov	r1, #0
   1af38:	add	sl, r2, #1
   1af3c:	b	1af68 <main@@Base+0x4d28>
   1af40:	mov	r1, r2
   1af44:	mov	r0, r8
   1af48:	mov	r2, r5
   1af4c:	mov	r3, #5
   1af50:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1af54:	mov	sl, r0
   1af58:	b	1af6c <main@@Base+0x4d2c>
   1af5c:	ldr	r0, [sp, #32]
   1af60:	mov	r1, #1
   1af64:	mov	sl, r2
   1af68:	str	r1, [r0]
   1af6c:	sub	ip, r5, sl
   1af70:	mov	r0, #8
   1af74:	cmp	ip, #8
   1af78:	movcc	r0, ip
   1af7c:	and	r0, r0, #15
   1af80:	sub	r0, r0, #1
   1af84:	cmp	r0, #7
   1af88:	bhi	1bb60 <main@@Base+0x5920>
   1af8c:	add	r2, pc, #36	; 0x24
   1af90:	mov	r1, #0
   1af94:	mov	lr, #0
   1af98:	mov	r8, #0
   1af9c:	mov	r7, #0
   1afa0:	mov	r3, #0
   1afa4:	mov	r6, #0
   1afa8:	mov	r5, #0
   1afac:	ldr	r4, [r2, r0, lsl #2]
   1afb0:	mov	r0, #0
   1afb4:	add	pc, r2, r4
   1afb8:	andeq	r0, r0, r4, rrx
   1afbc:	andeq	r0, r0, ip, asr r0
   1afc0:	andeq	r0, r0, r4, asr r0
   1afc4:	andeq	r0, r0, ip, asr #32
   1afc8:	andeq	r0, r0, r0, asr #32
   1afcc:	andeq	r0, r0, r4, lsr r0
   1afd0:	andeq	r0, r0, r4, lsr #32
   1afd4:	andeq	r0, r0, r0, lsr #32
   1afd8:	ldrb	lr, [sl, #7]
   1afdc:	ldrb	r0, [sl, #6]
   1afe0:	mov	r8, r1
   1afe4:	orr	r0, lr, r0, lsl #8
   1afe8:	mov	r1, r0
   1afec:	ldrb	r0, [sl, #5]
   1aff0:	mov	r7, r8
   1aff4:	orr	r1, r1, r0, lsl #16
   1aff8:	ldrb	r0, [sl, #4]
   1affc:	mov	r3, r7
   1b000:	orr	r1, r1, r0, lsl #24
   1b004:	ldrb	r0, [sl, #3]
   1b008:	orr	r6, r0, r3
   1b00c:	ldrb	r0, [sl, #2]
   1b010:	orr	r5, r6, r0, lsl #8
   1b014:	ldrb	r0, [sl, #1]
   1b018:	orr	r0, r5, r0, lsl #16
   1b01c:	ldrb	r2, [sl]
   1b020:	movw	r3, #29556	; 0x7374
   1b024:	movt	r3, #29797	; 0x7465
   1b028:	orr	r2, r0, r2, lsl #24
   1b02c:	mvn	r0, #-855638016	; 0xcd000000
   1b030:	subs	r0, r0, r1
   1b034:	sbcs	r0, r3, r2
   1b038:	bcc	1b0b0 <main@@Base+0x4e70>
   1b03c:	ldr	r5, [sp, #44]	; 0x2c
   1b040:	ldr	r8, [sp, #40]	; 0x28
   1b044:	and	r1, r1, #-16777216	; 0xff000000
   1b048:	eor	r0, r2, r3
   1b04c:	eor	r2, r1, #822083584	; 0x31000000
   1b050:	orrs	r2, r2, r0
   1b054:	beq	1b17c <main@@Base+0x4f3c>
   1b058:	eor	r1, r1, #838860800	; 0x32000000
   1b05c:	orrs	r0, r1, r0
   1b060:	bne	1bb60 <main@@Base+0x5920>
   1b064:	cmp	ip, #6
   1b068:	mov	r9, sl
   1b06c:	blt	1b63c <main@@Base+0x53fc>
   1b070:	ldr	r2, [sp, #32]
   1b074:	mov	r1, sl
   1b078:	ldrb	r0, [r1, #5]!
   1b07c:	ldr	r2, [r2]
   1b080:	cmp	r2, #0
   1b084:	beq	1b264 <main@@Base+0x5024>
   1b088:	cmp	r0, #33	; 0x21
   1b08c:	bcc	1b09c <main@@Base+0x4e5c>
   1b090:	cmp	r0, #58	; 0x3a
   1b094:	mov	r9, sl
   1b098:	bne	1b63c <main@@Base+0x53fc>
   1b09c:	ldr	r0, [sp, #32]
   1b0a0:	mov	r2, #0
   1b0a4:	str	r2, [r0]
   1b0a8:	b	1b274 <main@@Base+0x5034>
   1b0ac:	ldrdeq	sl, [r0], -ip
   1b0b0:	ldr	r5, [sp, #44]	; 0x2c
   1b0b4:	ldr	r8, [sp, #40]	; 0x28
   1b0b8:	cmn	r2, #-2013265919	; 0x88000001
   1b0bc:	bhi	1b11c <main@@Base+0x4edc>
   1b0c0:	and	r1, r1, #-16777216	; 0xff000000
   1b0c4:	eor	r0, r2, r3
   1b0c8:	eor	r1, r1, #855638016	; 0x33000000
   1b0cc:	orrs	r0, r1, r0
   1b0d0:	bne	1bb60 <main@@Base+0x5920>
   1b0d4:	cmp	ip, #6
   1b0d8:	mov	r1, sl
   1b0dc:	blt	1b964 <main@@Base+0x5724>
   1b0e0:	ldr	r1, [sp, #32]
   1b0e4:	mov	r2, sl
   1b0e8:	ldrb	r0, [r2, #5]!
   1b0ec:	ldr	r1, [r1]
   1b0f0:	cmp	r1, #0
   1b0f4:	beq	1b2d4 <main@@Base+0x5094>
   1b0f8:	cmp	r0, #33	; 0x21
   1b0fc:	bcc	1b10c <main@@Base+0x4ecc>
   1b100:	cmp	r0, #58	; 0x3a
   1b104:	mov	r1, sl
   1b108:	bne	1b964 <main@@Base+0x5724>
   1b10c:	ldr	r0, [sp, #32]
   1b110:	mov	r1, #0
   1b114:	str	r1, [r0]
   1b118:	b	1b2e4 <main@@Base+0x50a4>
   1b11c:	lsr	r0, r2, #24
   1b120:	and	r1, r2, #-16777216	; 0xff000000
   1b124:	cmp	r0, #120	; 0x78
   1b128:	bhi	1b1c4 <main@@Base+0x4f84>
   1b12c:	teq	r1, #2013265920	; 0x78000000
   1b130:	bne	1bb60 <main@@Base+0x5920>
   1b134:	cmp	ip, #2
   1b138:	mov	r7, sl
   1b13c:	blt	1b9b0 <main@@Base+0x5770>
   1b140:	ldr	r2, [sp, #32]
   1b144:	mov	r1, sl
   1b148:	ldrb	r0, [r1, #1]!
   1b14c:	ldr	r2, [r2]
   1b150:	cmp	r2, #0
   1b154:	beq	1b30c <main@@Base+0x50cc>
   1b158:	cmp	r0, #33	; 0x21
   1b15c:	bcc	1b16c <main@@Base+0x4f2c>
   1b160:	cmp	r0, #58	; 0x3a
   1b164:	mov	r7, sl
   1b168:	bne	1b9b0 <main@@Base+0x5770>
   1b16c:	ldr	r0, [sp, #32]
   1b170:	mov	r2, #0
   1b174:	str	r2, [r0]
   1b178:	b	1b31c <main@@Base+0x50dc>
   1b17c:	cmp	ip, #6
   1b180:	mov	r7, sl
   1b184:	blt	1b774 <main@@Base+0x5534>
   1b188:	ldr	r2, [sp, #32]
   1b18c:	mov	r1, sl
   1b190:	ldrb	r0, [r1, #5]!
   1b194:	ldr	r2, [r2]
   1b198:	cmp	r2, #0
   1b19c:	beq	1b29c <main@@Base+0x505c>
   1b1a0:	cmp	r0, #33	; 0x21
   1b1a4:	bcc	1b1b4 <main@@Base+0x4f74>
   1b1a8:	cmp	r0, #58	; 0x3a
   1b1ac:	mov	r7, sl
   1b1b0:	bne	1b774 <main@@Base+0x5534>
   1b1b4:	ldr	r0, [sp, #32]
   1b1b8:	mov	r2, #0
   1b1bc:	str	r2, [r0]
   1b1c0:	b	1b2ac <main@@Base+0x506c>
   1b1c4:	teq	r1, #2030043136	; 0x79000000
   1b1c8:	beq	1b21c <main@@Base+0x4fdc>
   1b1cc:	teq	r1, #2046820352	; 0x7a000000
   1b1d0:	bne	1bb60 <main@@Base+0x5920>
   1b1d4:	cmp	ip, #2
   1b1d8:	mov	r7, sl
   1b1dc:	blt	1ba4c <main@@Base+0x580c>
   1b1e0:	ldr	r2, [sp, #32]
   1b1e4:	mov	r1, sl
   1b1e8:	ldrb	r0, [r1, #1]!
   1b1ec:	ldr	r2, [r2]
   1b1f0:	cmp	r2, #0
   1b1f4:	beq	1b470 <main@@Base+0x5230>
   1b1f8:	cmp	r0, #33	; 0x21
   1b1fc:	bcc	1b20c <main@@Base+0x4fcc>
   1b200:	cmp	r0, #58	; 0x3a
   1b204:	mov	r7, sl
   1b208:	bne	1ba4c <main@@Base+0x580c>
   1b20c:	ldr	r0, [sp, #32]
   1b210:	mov	r2, #0
   1b214:	str	r2, [r0]
   1b218:	b	1b480 <main@@Base+0x5240>
   1b21c:	cmp	ip, #2
   1b220:	mov	r7, sl
   1b224:	blt	1baec <main@@Base+0x58ac>
   1b228:	ldr	r2, [sp, #32]
   1b22c:	mov	r1, sl
   1b230:	ldrb	r0, [r1, #1]!
   1b234:	ldr	r2, [r2]
   1b238:	cmp	r2, #0
   1b23c:	beq	1b4b0 <main@@Base+0x5270>
   1b240:	cmp	r0, #33	; 0x21
   1b244:	bcc	1b254 <main@@Base+0x5014>
   1b248:	cmp	r0, #58	; 0x3a
   1b24c:	mov	r7, sl
   1b250:	bne	1baec <main@@Base+0x58ac>
   1b254:	ldr	r0, [sp, #32]
   1b258:	mov	r2, #0
   1b25c:	str	r2, [r0]
   1b260:	b	1b4c0 <main@@Base+0x5280>
   1b264:	cmp	r0, #34	; 0x22
   1b268:	mov	r9, sl
   1b26c:	bne	1b63c <main@@Base+0x53fc>
   1b270:	add	r1, sl, #6
   1b274:	sub	r0, r5, r1
   1b278:	cmp	r0, #2
   1b27c:	blt	1b35c <main@@Base+0x511c>
   1b280:	ldrb	r0, [r1]
   1b284:	cmp	r0, #32
   1b288:	bls	1b348 <main@@Base+0x5108>
   1b28c:	mov	r9, r1
   1b290:	cmp	r9, r5
   1b294:	bne	1b374 <main@@Base+0x5134>
   1b298:	b	1b3d0 <main@@Base+0x5190>
   1b29c:	cmp	r0, #34	; 0x22
   1b2a0:	mov	r7, sl
   1b2a4:	bne	1b774 <main@@Base+0x5534>
   1b2a8:	add	r1, sl, #6
   1b2ac:	sub	r0, r5, r1
   1b2b0:	cmp	r0, #2
   1b2b4:	blt	1b3fc <main@@Base+0x51bc>
   1b2b8:	ldrb	r0, [r1]
   1b2bc:	cmp	r0, #32
   1b2c0:	bls	1b3e8 <main@@Base+0x51a8>
   1b2c4:	mov	r7, r1
   1b2c8:	cmp	r7, r5
   1b2cc:	bne	1b414 <main@@Base+0x51d4>
   1b2d0:	b	1b458 <main@@Base+0x5218>
   1b2d4:	cmp	r0, #34	; 0x22
   1b2d8:	mov	r1, sl
   1b2dc:	bne	1b964 <main@@Base+0x5724>
   1b2e0:	add	r2, sl, #6
   1b2e4:	sub	r0, r5, r2
   1b2e8:	cmp	r0, #2
   1b2ec:	blt	1b504 <main@@Base+0x52c4>
   1b2f0:	ldrb	r0, [r2]
   1b2f4:	cmp	r0, #32
   1b2f8:	bls	1b4f0 <main@@Base+0x52b0>
   1b2fc:	mov	r1, r2
   1b300:	cmp	r1, r5
   1b304:	bne	1b520 <main@@Base+0x52e0>
   1b308:	b	1b564 <main@@Base+0x5324>
   1b30c:	cmp	r0, #34	; 0x22
   1b310:	mov	r7, sl
   1b314:	bne	1b9b0 <main@@Base+0x5770>
   1b318:	add	r1, sl, #2
   1b31c:	sub	r0, r5, r1
   1b320:	cmp	r0, #2
   1b324:	blt	1b590 <main@@Base+0x5350>
   1b328:	ldrb	r0, [r1]
   1b32c:	cmp	r0, #32
   1b330:	bls	1b578 <main@@Base+0x5338>
   1b334:	ldr	r5, [sp, #44]	; 0x2c
   1b338:	mov	r7, r1
   1b33c:	cmp	r7, r5
   1b340:	bne	1b5a8 <main@@Base+0x5368>
   1b344:	b	1b5e8 <main@@Base+0x53a8>
   1b348:	bne	1b35c <main@@Base+0x511c>
   1b34c:	mov	r9, r1
   1b350:	ldrb	r0, [r9, #1]!
   1b354:	cmp	r0, #32
   1b358:	bhi	1b36c <main@@Base+0x512c>
   1b35c:	mov	r0, r8
   1b360:	mov	r2, r5
   1b364:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b368:	mov	r9, r0
   1b36c:	cmp	r9, r5
   1b370:	beq	1b3d0 <main@@Base+0x5190>
   1b374:	ldrb	r0, [r9]
   1b378:	cmp	r0, #58	; 0x3a
   1b37c:	bne	1b3d0 <main@@Base+0x5190>
   1b380:	add	r1, r9, #1
   1b384:	sub	r0, r5, r1
   1b388:	cmp	r0, #2
   1b38c:	blt	1b62c <main@@Base+0x53ec>
   1b390:	ldrb	r0, [r1]
   1b394:	cmp	r0, #32
   1b398:	bls	1b614 <main@@Base+0x53d4>
   1b39c:	ldr	r5, [sp, #44]	; 0x2c
   1b3a0:	ldr	r8, [sp, #40]	; 0x28
   1b3a4:	mov	r9, r1
   1b3a8:	cmp	sl, r9
   1b3ac:	bne	1b644 <main@@Base+0x5404>
   1b3b0:	mov	r0, r8
   1b3b4:	mov	r1, sl
   1b3b8:	mov	r2, r5
   1b3bc:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   1b3c0:	ldr	sl, [sp, #36]	; 0x24
   1b3c4:	ldr	r9, [sp, #20]
   1b3c8:	mov	r1, r0
   1b3cc:	b	1bb78 <main@@Base+0x5938>
   1b3d0:	mov	r0, r8
   1b3d4:	mov	r1, r9
   1b3d8:	mov	r2, r5
   1b3dc:	mov	r3, #4
   1b3e0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1b3e4:	b	1b638 <main@@Base+0x53f8>
   1b3e8:	bne	1b3fc <main@@Base+0x51bc>
   1b3ec:	mov	r7, r1
   1b3f0:	ldrb	r0, [r7, #1]!
   1b3f4:	cmp	r0, #32
   1b3f8:	bhi	1b40c <main@@Base+0x51cc>
   1b3fc:	mov	r0, r8
   1b400:	mov	r2, r5
   1b404:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b408:	mov	r7, r0
   1b40c:	cmp	r7, r5
   1b410:	beq	1b458 <main@@Base+0x5218>
   1b414:	ldrb	r0, [r7]
   1b418:	cmp	r0, #58	; 0x3a
   1b41c:	bne	1b458 <main@@Base+0x5218>
   1b420:	add	r1, r7, #1
   1b424:	sub	r0, r5, r1
   1b428:	cmp	r0, #2
   1b42c:	blt	1b764 <main@@Base+0x5524>
   1b430:	ldrb	r0, [r1]
   1b434:	cmp	r0, #32
   1b438:	bls	1b748 <main@@Base+0x5508>
   1b43c:	ldr	r5, [sp, #44]	; 0x2c
   1b440:	ldr	r8, [sp, #40]	; 0x28
   1b444:	ldr	r9, [sp, #20]
   1b448:	mov	r7, r1
   1b44c:	cmp	sl, r7
   1b450:	bne	1b77c <main@@Base+0x553c>
   1b454:	b	1bb60 <main@@Base+0x5920>
   1b458:	mov	r0, r8
   1b45c:	mov	r1, r7
   1b460:	mov	r2, r5
   1b464:	mov	r3, #4
   1b468:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1b46c:	b	1b770 <main@@Base+0x5530>
   1b470:	cmp	r0, #34	; 0x22
   1b474:	mov	r7, sl
   1b478:	bne	1ba4c <main@@Base+0x580c>
   1b47c:	add	r1, sl, #2
   1b480:	ldr	r4, [sp, #44]	; 0x2c
   1b484:	sub	r0, r4, r1
   1b488:	cmp	r0, #2
   1b48c:	blt	1b800 <main@@Base+0x55c0>
   1b490:	ldrb	r0, [r1]
   1b494:	cmp	r0, #32
   1b498:	bls	1b7e8 <main@@Base+0x55a8>
   1b49c:	ldr	r4, [sp, #44]	; 0x2c
   1b4a0:	mov	r7, r1
   1b4a4:	cmp	r7, r4
   1b4a8:	bne	1b818 <main@@Base+0x55d8>
   1b4ac:	b	1b85c <main@@Base+0x561c>
   1b4b0:	cmp	r0, #34	; 0x22
   1b4b4:	mov	r7, sl
   1b4b8:	bne	1baec <main@@Base+0x58ac>
   1b4bc:	add	r1, sl, #2
   1b4c0:	ldr	r4, [sp, #44]	; 0x2c
   1b4c4:	sub	r0, r4, r1
   1b4c8:	cmp	r0, #2
   1b4cc:	blt	1b8a4 <main@@Base+0x5664>
   1b4d0:	ldrb	r0, [r1]
   1b4d4:	cmp	r0, #32
   1b4d8:	bls	1b88c <main@@Base+0x564c>
   1b4dc:	ldr	r4, [sp, #44]	; 0x2c
   1b4e0:	mov	r7, r1
   1b4e4:	cmp	r7, r4
   1b4e8:	bne	1b8bc <main@@Base+0x567c>
   1b4ec:	b	1b904 <main@@Base+0x56c4>
   1b4f0:	bne	1b504 <main@@Base+0x52c4>
   1b4f4:	mov	r1, r2
   1b4f8:	ldrb	r0, [r1, #1]!
   1b4fc:	cmp	r0, #32
   1b500:	bhi	1b518 <main@@Base+0x52d8>
   1b504:	mov	r1, r2
   1b508:	mov	r0, r8
   1b50c:	mov	r2, r5
   1b510:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b514:	mov	r1, r0
   1b518:	cmp	r1, r5
   1b51c:	beq	1b564 <main@@Base+0x5324>
   1b520:	ldrb	r0, [r1]
   1b524:	cmp	r0, #58	; 0x3a
   1b528:	bne	1b564 <main@@Base+0x5324>
   1b52c:	add	r2, r1, #1
   1b530:	sub	r0, r5, r2
   1b534:	cmp	r0, #2
   1b538:	blt	1b950 <main@@Base+0x5710>
   1b53c:	ldrb	r0, [r2]
   1b540:	cmp	r0, #32
   1b544:	bls	1b934 <main@@Base+0x56f4>
   1b548:	ldr	r5, [sp, #44]	; 0x2c
   1b54c:	ldr	r8, [sp, #40]	; 0x28
   1b550:	ldr	r9, [sp, #20]
   1b554:	mov	r1, r2
   1b558:	cmp	sl, r1
   1b55c:	bne	1b96c <main@@Base+0x572c>
   1b560:	b	1bb60 <main@@Base+0x5920>
   1b564:	mov	r0, r8
   1b568:	mov	r2, r5
   1b56c:	mov	r3, #4
   1b570:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1b574:	b	1b960 <main@@Base+0x5720>
   1b578:	ldr	r5, [sp, #44]	; 0x2c
   1b57c:	bne	1b590 <main@@Base+0x5350>
   1b580:	mov	r7, r1
   1b584:	ldrb	r0, [r7, #1]!
   1b588:	cmp	r0, #32
   1b58c:	bhi	1b5a0 <main@@Base+0x5360>
   1b590:	ldr	r0, [sp, #40]	; 0x28
   1b594:	mov	r2, r5
   1b598:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b59c:	mov	r7, r0
   1b5a0:	cmp	r7, r5
   1b5a4:	beq	1b5e8 <main@@Base+0x53a8>
   1b5a8:	ldrb	r0, [r7]
   1b5ac:	cmp	r0, #58	; 0x3a
   1b5b0:	bne	1b5e8 <main@@Base+0x53a8>
   1b5b4:	ldr	r8, [sp, #40]	; 0x28
   1b5b8:	ldr	r9, [sp, #20]
   1b5bc:	add	r1, r7, #1
   1b5c0:	sub	r0, r5, r1
   1b5c4:	cmp	r0, #2
   1b5c8:	blt	1b9a0 <main@@Base+0x5760>
   1b5cc:	ldrb	r0, [r1]
   1b5d0:	cmp	r0, #32
   1b5d4:	bls	1b984 <main@@Base+0x5744>
   1b5d8:	ldr	r5, [sp, #44]	; 0x2c
   1b5dc:	ldr	r8, [sp, #40]	; 0x28
   1b5e0:	mov	r7, r1
   1b5e4:	b	1b604 <main@@Base+0x53c4>
   1b5e8:	ldr	r8, [sp, #40]	; 0x28
   1b5ec:	mov	r1, r7
   1b5f0:	mov	r2, r5
   1b5f4:	mov	r3, #4
   1b5f8:	mov	r0, r8
   1b5fc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1b600:	mov	r7, r0
   1b604:	ldr	r9, [sp, #20]
   1b608:	cmp	sl, r7
   1b60c:	bne	1b9b8 <main@@Base+0x5778>
   1b610:	b	1bb60 <main@@Base+0x5920>
   1b614:	ldr	r5, [sp, #44]	; 0x2c
   1b618:	ldr	r8, [sp, #40]	; 0x28
   1b61c:	bne	1b62c <main@@Base+0x53ec>
   1b620:	ldrb	r0, [r9, #2]!
   1b624:	cmp	r0, #32
   1b628:	bhi	1b63c <main@@Base+0x53fc>
   1b62c:	mov	r0, r8
   1b630:	mov	r2, r5
   1b634:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b638:	mov	r9, r0
   1b63c:	cmp	sl, r9
   1b640:	beq	1b3b0 <main@@Base+0x5170>
   1b644:	mov	r4, #0
   1b648:	cmp	r9, r5
   1b64c:	str	r4, [fp, #-52]	; 0xffffffcc
   1b650:	str	r4, [fp, #-56]	; 0xffffffc8
   1b654:	strb	r4, [fp, #-60]	; 0xffffffc4
   1b658:	str	r4, [sp, #56]	; 0x38
   1b65c:	beq	1b6b8 <main@@Base+0x5478>
   1b660:	sub	r0, fp, #56	; 0x38
   1b664:	mov	r1, r9
   1b668:	mov	r2, r5
   1b66c:	add	r3, sp, #56	; 0x38
   1b670:	str	r0, [sp]
   1b674:	mov	r0, r8
   1b678:	bl	38410 <flatcc_json_parser_integer@@Base>
   1b67c:	cmp	r0, r9
   1b680:	beq	1b6c0 <main@@Base+0x5480>
   1b684:	ldr	r3, [sp, #56]	; 0x38
   1b688:	mov	r1, r0
   1b68c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b690:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b694:	cmp	r3, #0
   1b698:	beq	1b6c8 <main@@Base+0x5488>
   1b69c:	subs	r3, r0, #129	; 0x81
   1b6a0:	sbcs	r2, r2, #0
   1b6a4:	bcc	1b6ec <main@@Base+0x54ac>
   1b6a8:	mov	r0, r8
   1b6ac:	mov	r2, r5
   1b6b0:	mov	r3, #8
   1b6b4:	b	1b6e0 <main@@Base+0x54a0>
   1b6b8:	mov	r1, r5
   1b6bc:	b	1b6fc <main@@Base+0x54bc>
   1b6c0:	mov	r1, r9
   1b6c4:	b	1b6fc <main@@Base+0x54bc>
   1b6c8:	subs	r3, r0, #128	; 0x80
   1b6cc:	sbcs	r2, r2, #0
   1b6d0:	bcc	1b6f4 <main@@Base+0x54b4>
   1b6d4:	mov	r0, r8
   1b6d8:	mov	r2, r5
   1b6dc:	mov	r3, #7
   1b6e0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1b6e4:	mov	r1, r0
   1b6e8:	b	1b6fc <main@@Base+0x54bc>
   1b6ec:	rsb	r4, r0, #0
   1b6f0:	b	1b6f8 <main@@Base+0x54b8>
   1b6f4:	mov	r4, r0
   1b6f8:	strb	r4, [fp, #-60]	; 0xffffffc4
   1b6fc:	ldr	sl, [sp, #36]	; 0x24
   1b700:	cmp	r9, r1
   1b704:	bne	1b73c <main@@Base+0x54fc>
   1b708:	sub	r0, fp, #60	; 0x3c
   1b70c:	mov	r1, r9
   1b710:	mov	r2, r5
   1b714:	str	r0, [sp]
   1b718:	mov	r0, r8
   1b71c:	ldr	r3, [pc, #3972]	; 1c6a8 <main@@Base+0x6468>
   1b720:	add	r3, pc, r3
   1b724:	bl	23404 <main@@Base+0xd1c4>
   1b728:	mov	r1, r0
   1b72c:	cmp	r0, r9
   1b730:	cmpne	r1, r5
   1b734:	beq	1bc5c <main@@Base+0x5a1c>
   1b738:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   1b73c:	ldr	r9, [sp, #20]
   1b740:	strb	r4, [r9, #24]
   1b744:	b	1bb78 <main@@Base+0x5938>
   1b748:	ldr	r5, [sp, #44]	; 0x2c
   1b74c:	ldr	r8, [sp, #40]	; 0x28
   1b750:	ldr	r9, [sp, #20]
   1b754:	bne	1b764 <main@@Base+0x5524>
   1b758:	ldrb	r0, [r7, #2]!
   1b75c:	cmp	r0, #32
   1b760:	bhi	1b774 <main@@Base+0x5534>
   1b764:	mov	r0, r8
   1b768:	mov	r2, r5
   1b76c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b770:	mov	r7, r0
   1b774:	cmp	sl, r7
   1b778:	beq	1bb60 <main@@Base+0x5920>
   1b77c:	mov	r0, #0
   1b780:	mov	r1, r7
   1b784:	mov	r2, r5
   1b788:	sub	r3, fp, #56	; 0x38
   1b78c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b790:	str	r0, [fp, #-56]	; 0xffffffc8
   1b794:	mov	r0, r8
   1b798:	bl	378f4 <flatcc_json_parser_double@@Base>
   1b79c:	ldr	sl, [sp, #36]	; 0x24
   1b7a0:	mov	r1, r0
   1b7a4:	cmp	r7, r0
   1b7a8:	bne	1b7dc <main@@Base+0x559c>
   1b7ac:	sub	r0, fp, #56	; 0x38
   1b7b0:	mov	r1, r7
   1b7b4:	mov	r2, r5
   1b7b8:	str	r0, [sp]
   1b7bc:	mov	r0, r8
   1b7c0:	ldr	r3, [pc, #4072]	; 1c7b0 <main@@Base+0x6570>
   1b7c4:	add	r3, pc, r3
   1b7c8:	bl	26214 <main@@Base+0xffd4>
   1b7cc:	mov	r1, r0
   1b7d0:	cmp	r0, r7
   1b7d4:	cmpne	r1, r5
   1b7d8:	beq	1bc5c <main@@Base+0x5a1c>
   1b7dc:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1b7e0:	vstr	d16, [r9, #16]
   1b7e4:	b	1bb78 <main@@Base+0x5938>
   1b7e8:	ldr	r4, [sp, #44]	; 0x2c
   1b7ec:	bne	1b800 <main@@Base+0x55c0>
   1b7f0:	mov	r7, r1
   1b7f4:	ldrb	r0, [r7, #1]!
   1b7f8:	cmp	r0, #32
   1b7fc:	bhi	1b810 <main@@Base+0x55d0>
   1b800:	ldr	r0, [sp, #40]	; 0x28
   1b804:	mov	r2, r4
   1b808:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b80c:	mov	r7, r0
   1b810:	cmp	r7, r4
   1b814:	beq	1b85c <main@@Base+0x561c>
   1b818:	ldrb	r0, [r7]
   1b81c:	cmp	r0, #58	; 0x3a
   1b820:	bne	1b85c <main@@Base+0x561c>
   1b824:	ldr	r5, [sp, #44]	; 0x2c
   1b828:	ldr	r8, [sp, #40]	; 0x28
   1b82c:	ldr	r9, [sp, #20]
   1b830:	add	r1, r7, #1
   1b834:	sub	r0, r5, r1
   1b838:	cmp	r0, #2
   1b83c:	blt	1ba3c <main@@Base+0x57fc>
   1b840:	ldrb	r0, [r1]
   1b844:	cmp	r0, #32
   1b848:	bls	1ba20 <main@@Base+0x57e0>
   1b84c:	ldr	r5, [sp, #44]	; 0x2c
   1b850:	ldr	r8, [sp, #40]	; 0x28
   1b854:	mov	r7, r1
   1b858:	b	1b87c <main@@Base+0x563c>
   1b85c:	ldr	r8, [sp, #40]	; 0x28
   1b860:	ldr	r5, [sp, #44]	; 0x2c
   1b864:	mov	r1, r7
   1b868:	mov	r3, #4
   1b86c:	mov	r0, r8
   1b870:	mov	r2, r5
   1b874:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1b878:	mov	r7, r0
   1b87c:	ldr	r9, [sp, #20]
   1b880:	cmp	sl, r7
   1b884:	bne	1ba54 <main@@Base+0x5814>
   1b888:	b	1bb60 <main@@Base+0x5920>
   1b88c:	ldr	r4, [sp, #44]	; 0x2c
   1b890:	bne	1b8a4 <main@@Base+0x5664>
   1b894:	mov	r7, r1
   1b898:	ldrb	r0, [r7, #1]!
   1b89c:	cmp	r0, #32
   1b8a0:	bhi	1b8b4 <main@@Base+0x5674>
   1b8a4:	ldr	r0, [sp, #40]	; 0x28
   1b8a8:	mov	r2, r4
   1b8ac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b8b0:	mov	r7, r0
   1b8b4:	cmp	r7, r4
   1b8b8:	beq	1b904 <main@@Base+0x56c4>
   1b8bc:	ldrb	r0, [r7]
   1b8c0:	cmp	r0, #58	; 0x3a
   1b8c4:	bne	1b904 <main@@Base+0x56c4>
   1b8c8:	ldr	r5, [sp, #44]	; 0x2c
   1b8cc:	ldr	r8, [sp, #40]	; 0x28
   1b8d0:	ldr	r9, [sp, #20]
   1b8d4:	add	r1, r7, #1
   1b8d8:	sub	r0, r5, r1
   1b8dc:	cmp	r0, #2
   1b8e0:	blt	1badc <main@@Base+0x589c>
   1b8e4:	ldrb	r0, [r1]
   1b8e8:	cmp	r0, #32
   1b8ec:	bls	1bac0 <main@@Base+0x5880>
   1b8f0:	ldr	r5, [sp, #44]	; 0x2c
   1b8f4:	ldr	r8, [sp, #40]	; 0x28
   1b8f8:	mov	r7, r1
   1b8fc:	b	1b924 <main@@Base+0x56e4>
   1b900:	andeq	r0, r3, r6, ror #11
   1b904:	ldr	r8, [sp, #40]	; 0x28
   1b908:	ldr	r5, [sp, #44]	; 0x2c
   1b90c:	mov	r1, r7
   1b910:	mov	r3, #4
   1b914:	mov	r0, r8
   1b918:	mov	r2, r5
   1b91c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1b920:	mov	r7, r0
   1b924:	ldr	r9, [sp, #20]
   1b928:	cmp	sl, r7
   1b92c:	bne	1baf4 <main@@Base+0x58b4>
   1b930:	b	1bb60 <main@@Base+0x5920>
   1b934:	ldr	r5, [sp, #44]	; 0x2c
   1b938:	ldr	r8, [sp, #40]	; 0x28
   1b93c:	ldr	r9, [sp, #20]
   1b940:	bne	1b950 <main@@Base+0x5710>
   1b944:	ldrb	r0, [r1, #2]!
   1b948:	cmp	r0, #32
   1b94c:	bhi	1b964 <main@@Base+0x5724>
   1b950:	mov	r1, r2
   1b954:	mov	r0, r8
   1b958:	mov	r2, r5
   1b95c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b960:	mov	r1, r0
   1b964:	cmp	sl, r1
   1b968:	beq	1bb60 <main@@Base+0x5920>
   1b96c:	ldr	r3, [sp, #16]
   1b970:	mov	r0, r8
   1b974:	mov	r2, r5
   1b978:	bl	23a30 <main@@Base+0xd7f0>
   1b97c:	b	1bb70 <main@@Base+0x5930>
   1b980:	andeq	r4, r4, r8, asr #13
   1b984:	ldr	r5, [sp, #44]	; 0x2c
   1b988:	ldr	r8, [sp, #40]	; 0x28
   1b98c:	ldr	r9, [sp, #20]
   1b990:	bne	1b9a0 <main@@Base+0x5760>
   1b994:	ldrb	r0, [r7, #2]!
   1b998:	cmp	r0, #32
   1b99c:	bhi	1b9b0 <main@@Base+0x5770>
   1b9a0:	mov	r0, r8
   1b9a4:	mov	r2, r5
   1b9a8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1b9ac:	mov	r7, r0
   1b9b0:	cmp	sl, r7
   1b9b4:	beq	1bb60 <main@@Base+0x5920>
   1b9b8:	mov	r0, #0
   1b9bc:	mov	r1, r7
   1b9c0:	mov	r2, r5
   1b9c4:	sub	r3, fp, #56	; 0x38
   1b9c8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b9cc:	mov	r0, r8
   1b9d0:	bl	382d0 <flatcc_json_parser_float@@Base>
   1b9d4:	ldr	sl, [sp, #36]	; 0x24
   1b9d8:	mov	r1, r0
   1b9dc:	cmp	r7, r0
   1b9e0:	bne	1ba14 <main@@Base+0x57d4>
   1b9e4:	sub	r0, fp, #56	; 0x38
   1b9e8:	mov	r1, r7
   1b9ec:	mov	r2, r5
   1b9f0:	str	r0, [sp]
   1b9f4:	mov	r0, r8
   1b9f8:	ldr	r3, [pc, #4068]	; 1c9e4 <main@@Base+0x67a4>
   1b9fc:	add	r3, pc, r3
   1ba00:	bl	25858 <main@@Base+0xf618>
   1ba04:	mov	r1, r0
   1ba08:	cmp	r0, r7
   1ba0c:	cmpne	r1, r5
   1ba10:	beq	1bc5c <main@@Base+0x5a1c>
   1ba14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ba18:	str	r0, [r9]
   1ba1c:	b	1bb78 <main@@Base+0x5938>
   1ba20:	ldr	r5, [sp, #44]	; 0x2c
   1ba24:	ldr	r8, [sp, #40]	; 0x28
   1ba28:	ldr	r9, [sp, #20]
   1ba2c:	bne	1ba3c <main@@Base+0x57fc>
   1ba30:	ldrb	r0, [r7, #2]!
   1ba34:	cmp	r0, #32
   1ba38:	bhi	1ba4c <main@@Base+0x580c>
   1ba3c:	mov	r0, r8
   1ba40:	mov	r2, r5
   1ba44:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ba48:	mov	r7, r0
   1ba4c:	cmp	sl, r7
   1ba50:	beq	1bb60 <main@@Base+0x5920>
   1ba54:	mov	r0, #0
   1ba58:	mov	r1, r7
   1ba5c:	mov	r2, r5
   1ba60:	sub	r3, fp, #56	; 0x38
   1ba64:	str	r0, [fp, #-56]	; 0xffffffc8
   1ba68:	mov	r0, r8
   1ba6c:	bl	382d0 <flatcc_json_parser_float@@Base>
   1ba70:	mov	r1, r0
   1ba74:	cmp	r7, r0
   1ba78:	bne	1bab4 <main@@Base+0x5874>
   1ba7c:	sub	r0, fp, #56	; 0x38
   1ba80:	mov	r1, r7
   1ba84:	mov	r2, r5
   1ba88:	str	r0, [sp]
   1ba8c:	mov	r0, r8
   1ba90:	ldr	r3, [pc, #4084]	; 1ca8c <main@@Base+0x684c>
   1ba94:	add	r3, pc, r3
   1ba98:	bl	25858 <main@@Base+0xf618>
   1ba9c:	mov	r1, r0
   1baa0:	cmp	r0, r7
   1baa4:	cmpne	r1, r5
   1baa8:	beq	1bc5c <main@@Base+0x5a1c>
   1baac:	ldr	r8, [sp, #40]	; 0x28
   1bab0:	ldr	r9, [sp, #20]
   1bab4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bab8:	str	r0, [r9, #8]
   1babc:	b	1bb74 <main@@Base+0x5934>
   1bac0:	ldr	r5, [sp, #44]	; 0x2c
   1bac4:	ldr	r8, [sp, #40]	; 0x28
   1bac8:	ldr	r9, [sp, #20]
   1bacc:	bne	1badc <main@@Base+0x589c>
   1bad0:	ldrb	r0, [r7, #2]!
   1bad4:	cmp	r0, #32
   1bad8:	bhi	1baec <main@@Base+0x58ac>
   1badc:	mov	r0, r8
   1bae0:	mov	r2, r5
   1bae4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1bae8:	mov	r7, r0
   1baec:	cmp	sl, r7
   1baf0:	beq	1bb60 <main@@Base+0x5920>
   1baf4:	mov	r0, #0
   1baf8:	mov	r1, r7
   1bafc:	mov	r2, r5
   1bb00:	sub	r3, fp, #56	; 0x38
   1bb04:	str	r0, [fp, #-56]	; 0xffffffc8
   1bb08:	mov	r0, r8
   1bb0c:	bl	382d0 <flatcc_json_parser_float@@Base>
   1bb10:	mov	r1, r0
   1bb14:	cmp	r7, r0
   1bb18:	bne	1bb54 <main@@Base+0x5914>
   1bb1c:	sub	r0, fp, #56	; 0x38
   1bb20:	mov	r1, r7
   1bb24:	mov	r2, r5
   1bb28:	str	r0, [sp]
   1bb2c:	mov	r0, r8
   1bb30:	ldr	r3, [pc, #4016]	; 1cae8 <main@@Base+0x68a8>
   1bb34:	add	r3, pc, r3
   1bb38:	bl	25858 <main@@Base+0xf618>
   1bb3c:	mov	r1, r0
   1bb40:	cmp	r0, r7
   1bb44:	cmpne	r1, r5
   1bb48:	beq	1bc5c <main@@Base+0x5a1c>
   1bb4c:	ldr	r8, [sp, #40]	; 0x28
   1bb50:	ldr	r9, [sp, #20]
   1bb54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bb58:	str	r0, [r9, #4]
   1bb5c:	b	1bb74 <main@@Base+0x5934>
   1bb60:	mov	r0, r8
   1bb64:	mov	r1, sl
   1bb68:	mov	r2, r5
   1bb6c:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   1bb70:	mov	r1, r0
   1bb74:	ldr	sl, [sp, #36]	; 0x24
   1bb78:	sub	r0, r5, r1
   1bb7c:	cmp	r0, #2
   1bb80:	blt	1bbb4 <main@@Base+0x5974>
   1bb84:	ldrb	r0, [r1]
   1bb88:	cmp	r0, #32
   1bb8c:	bls	1bba0 <main@@Base+0x5960>
   1bb90:	mov	r2, r1
   1bb94:	cmp	r2, r5
   1bb98:	bne	1bbcc <main@@Base+0x598c>
   1bb9c:	b	1bc78 <main@@Base+0x5a38>
   1bba0:	bne	1bbb4 <main@@Base+0x5974>
   1bba4:	mov	r2, r1
   1bba8:	ldrb	r0, [r2, #1]!
   1bbac:	cmp	r0, #32
   1bbb0:	bhi	1bbc4 <main@@Base+0x5984>
   1bbb4:	mov	r0, r8
   1bbb8:	mov	r2, r5
   1bbbc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1bbc0:	mov	r2, r0
   1bbc4:	cmp	r2, r5
   1bbc8:	beq	1bc78 <main@@Base+0x5a38>
   1bbcc:	ldrb	r0, [r2]
   1bbd0:	cmp	r0, #44	; 0x2c
   1bbd4:	bne	1bc80 <main@@Base+0x5a40>
   1bbd8:	add	r1, r2, #1
   1bbdc:	sub	r0, r5, r1
   1bbe0:	cmp	r0, #2
   1bbe4:	blt	1bc14 <main@@Base+0x59d4>
   1bbe8:	ldrb	r0, [r1]
   1bbec:	cmp	r0, #32
   1bbf0:	bls	1bc04 <main@@Base+0x59c4>
   1bbf4:	mov	r2, r1
   1bbf8:	cmp	r2, r5
   1bbfc:	bne	1bc2c <main@@Base+0x59ec>
   1bc00:	b	1bcb4 <main@@Base+0x5a74>
   1bc04:	bne	1bc14 <main@@Base+0x59d4>
   1bc08:	ldrb	r0, [r2, #2]!
   1bc0c:	cmp	r0, #32
   1bc10:	bhi	1bc24 <main@@Base+0x59e4>
   1bc14:	mov	r0, r8
   1bc18:	mov	r2, r5
   1bc1c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1bc20:	mov	r2, r0
   1bc24:	cmp	r2, r5
   1bc28:	beq	1bcb4 <main@@Base+0x5a74>
   1bc2c:	ldrb	r0, [r2]
   1bc30:	cmp	r0, #125	; 0x7d
   1bc34:	bne	1af10 <main@@Base+0x4cd0>
   1bc38:	add	r1, r2, #1
   1bc3c:	sub	r0, r5, r1
   1bc40:	cmp	r0, #2
   1bc44:	blt	1e250 <main@@Base+0x8010>
   1bc48:	ldrb	r0, [r1]
   1bc4c:	cmp	r0, #32
   1bc50:	bls	1d720 <main@@Base+0x74e0>
   1bc54:	mov	r4, r1
   1bc58:	b	1f71c <main@@Base+0x94dc>
   1bc5c:	ldr	r8, [sp, #40]	; 0x28
   1bc60:	ldr	r5, [sp, #44]	; 0x2c
   1bc64:	mov	r3, #33	; 0x21
   1bc68:	mov	r0, r8
   1bc6c:	mov	r2, r5
   1bc70:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1bc74:	b	1a5c0 <main@@Base+0x4380>
   1bc78:	mov	r4, r5
   1bc7c:	b	1f71c <main@@Base+0x94dc>
   1bc80:	cmp	r0, #125	; 0x7d
   1bc84:	bne	1c79c <main@@Base+0x655c>
   1bc88:	add	r1, r2, #1
   1bc8c:	sub	r0, r5, r1
   1bc90:	cmp	r0, #2
   1bc94:	blt	1e250 <main@@Base+0x8010>
   1bc98:	ldrb	r0, [r1]
   1bc9c:	cmp	r0, #32
   1bca0:	bls	1e230 <main@@Base+0x7ff0>
   1bca4:	ldr	r5, [sp, #44]	; 0x2c
   1bca8:	ldr	r8, [sp, #40]	; 0x28
   1bcac:	mov	r4, r1
   1bcb0:	b	1a5c4 <main@@Base+0x4384>
   1bcb4:	mov	r0, r8
   1bcb8:	mov	r1, r5
   1bcbc:	b	1c7a4 <main@@Base+0x6564>
   1bcc0:	bne	1bcd0 <main@@Base+0x5a90>
   1bcc4:	ldrb	r0, [r7, #2]!
   1bcc8:	cmp	r0, #32
   1bccc:	bhi	1bce0 <main@@Base+0x5aa0>
   1bcd0:	mov	r0, r8
   1bcd4:	mov	r2, r5
   1bcd8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1bcdc:	mov	r7, r0
   1bce0:	cmp	r9, r7
   1bce4:	beq	18814 <main@@Base+0x25d4>
   1bce8:	mov	r0, #0
   1bcec:	mov	r1, r7
   1bcf0:	mov	r2, r5
   1bcf4:	sub	r3, fp, #56	; 0x38
   1bcf8:	str	r0, [fp, #-56]	; 0xffffffc8
   1bcfc:	mov	r0, r8
   1bd00:	bl	382d0 <flatcc_json_parser_float@@Base>
   1bd04:	mov	r4, r0
   1bd08:	cmp	r7, r0
   1bd0c:	bne	1bd40 <main@@Base+0x5b00>
   1bd10:	sub	r0, fp, #56	; 0x38
   1bd14:	mov	r1, r7
   1bd18:	mov	r2, r5
   1bd1c:	str	r0, [sp]
   1bd20:	mov	r0, r8
   1bd24:	ldr	r3, [pc, #4044]	; 1ccf8 <main@@Base+0x6ab8>
   1bd28:	add	r3, pc, r3
   1bd2c:	bl	25858 <main@@Base+0xf618>
   1bd30:	mov	r4, r0
   1bd34:	cmp	r0, r7
   1bd38:	cmpne	r4, r5
   1bd3c:	beq	17308 <main@@Base+0x10c8>
   1bd40:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1bd44:	vcmp.f32	s0, s16
   1bd48:	vmrs	APSR_nzcv, fpscr
   1bd4c:	bne	1bd5c <main@@Base+0x5b1c>
   1bd50:	ldrb	r0, [r8, #8]
   1bd54:	tst	r0, #2
   1bd58:	beq	1f71c <main@@Base+0x94dc>
   1bd5c:	ldr	r0, [r8]
   1bd60:	mov	r1, #26
   1bd64:	b	193bc <main@@Base+0x317c>
   1bd68:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   1bd6c:	bne	1bd80 <main@@Base+0x5b40>
   1bd70:	mov	r4, r1
   1bd74:	ldrb	r0, [r4, #1]!
   1bd78:	cmp	r0, #32
   1bd7c:	bhi	1bd90 <main@@Base+0x5b50>
   1bd80:	mov	r0, r8
   1bd84:	mov	r2, r5
   1bd88:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1bd8c:	mov	r4, r0
   1bd90:	cmp	r4, r5
   1bd94:	beq	1bdd0 <main@@Base+0x5b90>
   1bd98:	ldrb	r0, [r4]
   1bd9c:	cmp	r0, #58	; 0x3a
   1bda0:	bne	1bdd0 <main@@Base+0x5b90>
   1bda4:	add	r1, r4, #1
   1bda8:	sub	r0, r5, r1
   1bdac:	cmp	r0, #2
   1bdb0:	blt	1d2cc <main@@Base+0x708c>
   1bdb4:	ldrb	r0, [r1]
   1bdb8:	cmp	r0, #32
   1bdbc:	bls	1d2bc <main@@Base+0x707c>
   1bdc0:	mov	r4, r1
   1bdc4:	cmp	r7, r4
   1bdc8:	bne	1d2e4 <main@@Base+0x70a4>
   1bdcc:	b	1ea98 <main@@Base+0x8858>
   1bdd0:	mov	r0, r8
   1bdd4:	mov	r1, r4
   1bdd8:	mov	r2, r5
   1bddc:	mov	r3, #4
   1bde0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1bde4:	b	1d2d8 <main@@Base+0x7098>
   1bde8:	bne	1bdfc <main@@Base+0x5bbc>
   1bdec:	mov	r4, r1
   1bdf0:	ldrb	r0, [r4, #1]!
   1bdf4:	cmp	r0, #32
   1bdf8:	bhi	1be0c <main@@Base+0x5bcc>
   1bdfc:	mov	r0, r8
   1be00:	mov	r2, r5
   1be04:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1be08:	mov	r4, r0
   1be0c:	cmp	r4, r5
   1be10:	beq	1be4c <main@@Base+0x5c0c>
   1be14:	ldrb	r0, [r4]
   1be18:	cmp	r0, #58	; 0x3a
   1be1c:	bne	1be4c <main@@Base+0x5c0c>
   1be20:	add	r1, r4, #1
   1be24:	sub	r0, r5, r1
   1be28:	cmp	r0, #2
   1be2c:	blt	1d3d8 <main@@Base+0x7198>
   1be30:	ldrb	r0, [r1]
   1be34:	cmp	r0, #32
   1be38:	bls	1d3c8 <main@@Base+0x7188>
   1be3c:	mov	r4, r1
   1be40:	cmp	r7, r4
   1be44:	bne	1d3f0 <main@@Base+0x71b0>
   1be48:	b	1ea98 <main@@Base+0x8858>
   1be4c:	mov	r0, r8
   1be50:	mov	r1, r4
   1be54:	mov	r2, r5
   1be58:	mov	r3, #4
   1be5c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1be60:	b	1d3e4 <main@@Base+0x71a4>
   1be64:	bne	1be78 <main@@Base+0x5c38>
   1be68:	mov	r7, r1
   1be6c:	ldrb	r0, [r7, #1]!
   1be70:	cmp	r0, #32
   1be74:	bhi	1be88 <main@@Base+0x5c48>
   1be78:	mov	r0, r8
   1be7c:	mov	r2, r5
   1be80:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1be84:	mov	r7, r0
   1be88:	cmp	r7, r5
   1be8c:	beq	1bf44 <main@@Base+0x5d04>
   1be90:	ldrb	r0, [r7]
   1be94:	cmp	r0, #58	; 0x3a
   1be98:	bne	1bf44 <main@@Base+0x5d04>
   1be9c:	add	r1, r7, #1
   1bea0:	sub	r0, r5, r1
   1bea4:	cmp	r0, #2
   1bea8:	blt	1d4a8 <main@@Base+0x7268>
   1beac:	ldrb	r0, [r1]
   1beb0:	cmp	r0, #32
   1beb4:	bls	1d490 <main@@Base+0x7250>
   1beb8:	ldr	r5, [sp, #44]	; 0x2c
   1bebc:	ldr	r8, [sp, #40]	; 0x28
   1bec0:	mov	r7, r1
   1bec4:	cmp	sl, r7
   1bec8:	bne	1d4c0 <main@@Base+0x7280>
   1becc:	add	r4, r9, #16
   1bed0:	mov	r1, #8
   1bed4:	mov	r2, #-268435456	; 0xf0000000
   1bed8:	sub	r0, r5, r4
   1bedc:	cmp	r0, #8
   1bee0:	movcc	r1, r0
   1bee4:	add	r1, r2, r1, lsl #28
   1bee8:	asr	r1, r1, #28
   1beec:	cmp	r1, #0
   1bef0:	blt	1c03c <main@@Base+0x5dfc>
   1bef4:	ldrb	r1, [r4]
   1bef8:	cmp	r1, #97	; 0x61
   1befc:	bne	1c03c <main@@Base+0x5dfc>
   1bf00:	ldr	sl, [sp, #36]	; 0x24
   1bf04:	cmp	r0, #2
   1bf08:	blt	1f708 <main@@Base+0x94c8>
   1bf0c:	ldr	r2, [sp, #32]
   1bf10:	mov	r1, r9
   1bf14:	ldrb	r0, [r1, #17]!
   1bf18:	ldr	r2, [r2]
   1bf1c:	cmp	r2, #0
   1bf20:	beq	1c294 <main@@Base+0x6054>
   1bf24:	cmp	r0, #33	; 0x21
   1bf28:	bcc	1bf34 <main@@Base+0x5cf4>
   1bf2c:	cmp	r0, #58	; 0x3a
   1bf30:	bne	1f708 <main@@Base+0x94c8>
   1bf34:	ldr	r0, [sp, #32]
   1bf38:	mov	r2, #0
   1bf3c:	str	r2, [r0]
   1bf40:	b	1c2a0 <main@@Base+0x6060>
   1bf44:	mov	r0, r8
   1bf48:	mov	r1, r7
   1bf4c:	mov	r2, r5
   1bf50:	mov	r3, #4
   1bf54:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1bf58:	b	1d4b4 <main@@Base+0x7274>
   1bf5c:	bne	1bf70 <main@@Base+0x5d30>
   1bf60:	mov	r7, r1
   1bf64:	ldrb	r0, [r7, #1]!
   1bf68:	cmp	r0, #32
   1bf6c:	bhi	1bf80 <main@@Base+0x5d40>
   1bf70:	mov	r0, r8
   1bf74:	mov	r2, r5
   1bf78:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1bf7c:	mov	r7, r0
   1bf80:	cmp	r7, r5
   1bf84:	beq	1c048 <main@@Base+0x5e08>
   1bf88:	ldrb	r0, [r7]
   1bf8c:	cmp	r0, #58	; 0x3a
   1bf90:	bne	1c048 <main@@Base+0x5e08>
   1bf94:	add	r1, r7, #1
   1bf98:	sub	r0, r5, r1
   1bf9c:	cmp	r0, #2
   1bfa0:	blt	1d5e0 <main@@Base+0x73a0>
   1bfa4:	ldrb	r0, [r1]
   1bfa8:	cmp	r0, #32
   1bfac:	bls	1d5c8 <main@@Base+0x7388>
   1bfb0:	ldr	r5, [sp, #44]	; 0x2c
   1bfb4:	ldr	r8, [sp, #40]	; 0x28
   1bfb8:	mov	r7, r1
   1bfbc:	cmp	sl, r7
   1bfc0:	bne	1d5f8 <main@@Base+0x73b8>
   1bfc4:	add	r4, r9, #16
   1bfc8:	mov	r1, #8
   1bfcc:	mov	r2, #-268435456	; 0xf0000000
   1bfd0:	sub	r0, r5, r4
   1bfd4:	cmp	r0, #8
   1bfd8:	movcc	r1, r0
   1bfdc:	add	r1, r2, r1, lsl #28
   1bfe0:	asr	r1, r1, #28
   1bfe4:	cmp	r1, #0
   1bfe8:	blt	1c03c <main@@Base+0x5dfc>
   1bfec:	ldrb	r1, [r4]
   1bff0:	cmp	r1, #97	; 0x61
   1bff4:	bne	1c03c <main@@Base+0x5dfc>
   1bff8:	ldr	sl, [sp, #36]	; 0x24
   1bffc:	cmp	r0, #2
   1c000:	blt	1f708 <main@@Base+0x94c8>
   1c004:	ldr	r2, [sp, #32]
   1c008:	mov	r1, r9
   1c00c:	ldrb	r0, [r1, #17]!
   1c010:	ldr	r2, [r2]
   1c014:	cmp	r2, #0
   1c018:	beq	1c2d0 <main@@Base+0x6090>
   1c01c:	cmp	r0, #33	; 0x21
   1c020:	bcc	1c02c <main@@Base+0x5dec>
   1c024:	cmp	r0, #58	; 0x3a
   1c028:	bne	1f708 <main@@Base+0x94c8>
   1c02c:	ldr	r0, [sp, #32]
   1c030:	mov	r2, #0
   1c034:	str	r2, [r0]
   1c038:	b	1c2dc <main@@Base+0x609c>
   1c03c:	mov	r0, r8
   1c040:	mov	r1, r4
   1c044:	b	1a5b8 <main@@Base+0x4378>
   1c048:	mov	r0, r8
   1c04c:	mov	r1, r7
   1c050:	mov	r2, r5
   1c054:	mov	r3, #4
   1c058:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c05c:	b	1d5ec <main@@Base+0x73ac>
   1c060:	mov	r0, r8
   1c064:	mov	r1, r4
   1c068:	mov	r2, r5
   1c06c:	mov	r3, #9
   1c070:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c074:	b	1a5e4 <main@@Base+0x43a4>
   1c078:	bne	1c088 <main@@Base+0x5e48>
   1c07c:	ldrb	r0, [r7, #2]!
   1c080:	cmp	r0, #32
   1c084:	bhi	1c098 <main@@Base+0x5e58>
   1c088:	mov	r0, r8
   1c08c:	mov	r2, r5
   1c090:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c094:	mov	r7, r0
   1c098:	cmp	sl, r7
   1c09c:	beq	199c8 <main@@Base+0x3788>
   1c0a0:	mov	r6, #0
   1c0a4:	cmp	r7, r5
   1c0a8:	str	r6, [fp, #-52]	; 0xffffffcc
   1c0ac:	str	r6, [fp, #-56]	; 0xffffffc8
   1c0b0:	str	r6, [fp, #-60]	; 0xffffffc4
   1c0b4:	str	r6, [sp, #56]	; 0x38
   1c0b8:	beq	1c120 <main@@Base+0x5ee0>
   1c0bc:	sub	r0, fp, #56	; 0x38
   1c0c0:	mov	r1, r7
   1c0c4:	mov	r2, r5
   1c0c8:	add	r3, sp, #56	; 0x38
   1c0cc:	str	r0, [sp]
   1c0d0:	mov	r0, r8
   1c0d4:	bl	38410 <flatcc_json_parser_integer@@Base>
   1c0d8:	cmp	r0, r7
   1c0dc:	beq	1c134 <main@@Base+0x5ef4>
   1c0e0:	ldr	r2, [sp, #56]	; 0x38
   1c0e4:	mov	r4, r0
   1c0e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c0ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c0f0:	cmp	r2, #0
   1c0f4:	beq	1c148 <main@@Base+0x5f08>
   1c0f8:	ldr	sl, [sp, #36]	; 0x24
   1c0fc:	subs	r2, r0, #-2147483647	; 0x80000001
   1c100:	sbcs	r1, r1, #0
   1c104:	bcc	1c17c <main@@Base+0x5f3c>
   1c108:	mov	r0, r8
   1c10c:	mov	r1, r4
   1c110:	mov	r2, r5
   1c114:	mov	r3, #8
   1c118:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c11c:	b	1c16c <main@@Base+0x5f2c>
   1c120:	ldr	sl, [sp, #36]	; 0x24
   1c124:	mov	r4, r5
   1c128:	cmp	r7, r4
   1c12c:	bne	1c9c4 <main@@Base+0x6784>
   1c130:	b	1c990 <main@@Base+0x6750>
   1c134:	ldr	sl, [sp, #36]	; 0x24
   1c138:	mov	r4, r7
   1c13c:	cmp	r7, r4
   1c140:	bne	1c9c4 <main@@Base+0x6784>
   1c144:	b	1c990 <main@@Base+0x6750>
   1c148:	subs	r2, r0, #-2147483648	; 0x80000000
   1c14c:	sbcs	r1, r1, #0
   1c150:	bcc	1c97c <main@@Base+0x673c>
   1c154:	mov	r0, r8
   1c158:	mov	r1, r4
   1c15c:	mov	r2, r5
   1c160:	mov	r3, #7
   1c164:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c168:	ldr	sl, [sp, #36]	; 0x24
   1c16c:	mov	r4, r0
   1c170:	cmp	r7, r4
   1c174:	bne	1c9c4 <main@@Base+0x6784>
   1c178:	b	1c990 <main@@Base+0x6750>
   1c17c:	rsb	r6, r0, #0
   1c180:	b	1c984 <main@@Base+0x6744>
   1c184:	bne	1c198 <main@@Base+0x5f58>
   1c188:	mov	r4, r1
   1c18c:	ldrb	r0, [r4, #1]!
   1c190:	cmp	r0, #32
   1c194:	bhi	1c1a8 <main@@Base+0x5f68>
   1c198:	mov	r0, r8
   1c19c:	mov	r2, r5
   1c1a0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c1a4:	mov	r4, r0
   1c1a8:	cmp	r4, r5
   1c1ac:	beq	1c1f4 <main@@Base+0x5fb4>
   1c1b0:	ldrb	r0, [r4]
   1c1b4:	cmp	r0, #58	; 0x3a
   1c1b8:	bne	1c1f4 <main@@Base+0x5fb4>
   1c1bc:	add	r1, r4, #1
   1c1c0:	sub	r0, r5, r1
   1c1c4:	cmp	r0, #2
   1c1c8:	blt	1d744 <main@@Base+0x7504>
   1c1cc:	ldrb	r0, [r1]
   1c1d0:	cmp	r0, #32
   1c1d4:	bls	1d728 <main@@Base+0x74e8>
   1c1d8:	ldr	r5, [sp, #44]	; 0x2c
   1c1dc:	ldr	r8, [sp, #40]	; 0x28
   1c1e0:	ldr	sl, [sp, #36]	; 0x24
   1c1e4:	mov	r4, r1
   1c1e8:	cmp	r7, r4
   1c1ec:	bne	1d75c <main@@Base+0x751c>
   1c1f0:	b	1ea98 <main@@Base+0x8858>
   1c1f4:	mov	r0, r8
   1c1f8:	mov	r1, r4
   1c1fc:	mov	r2, r5
   1c200:	mov	r3, #4
   1c204:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c208:	b	1d750 <main@@Base+0x7510>
   1c20c:	bne	1c220 <main@@Base+0x5fe0>
   1c210:	mov	r7, r1
   1c214:	ldrb	r0, [r7, #1]!
   1c218:	cmp	r0, #32
   1c21c:	bhi	1c230 <main@@Base+0x5ff0>
   1c220:	mov	r0, r8
   1c224:	mov	r2, r5
   1c228:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c22c:	mov	r7, r0
   1c230:	cmp	r7, r5
   1c234:	beq	1c27c <main@@Base+0x603c>
   1c238:	ldrb	r0, [r7]
   1c23c:	cmp	r0, #58	; 0x3a
   1c240:	bne	1c27c <main@@Base+0x603c>
   1c244:	add	r1, r7, #1
   1c248:	sub	r0, r5, r1
   1c24c:	cmp	r0, #2
   1c250:	blt	1d90c <main@@Base+0x76cc>
   1c254:	ldrb	r0, [r1]
   1c258:	cmp	r0, #32
   1c25c:	bls	1d8f0 <main@@Base+0x76b0>
   1c260:	ldr	r5, [sp, #44]	; 0x2c
   1c264:	ldr	r8, [sp, #40]	; 0x28
   1c268:	ldr	sl, [sp, #36]	; 0x24
   1c26c:	mov	r7, r1
   1c270:	cmp	r4, r7
   1c274:	bne	1d924 <main@@Base+0x76e4>
   1c278:	b	1f708 <main@@Base+0x94c8>
   1c27c:	mov	r0, r8
   1c280:	mov	r1, r7
   1c284:	mov	r2, r5
   1c288:	mov	r3, #4
   1c28c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c290:	b	1d918 <main@@Base+0x76d8>
   1c294:	cmp	r0, #34	; 0x22
   1c298:	bne	1f708 <main@@Base+0x94c8>
   1c29c:	add	r1, r9, #18
   1c2a0:	sub	r0, r5, r1
   1c2a4:	cmp	r0, #2
   1c2a8:	blt	1d804 <main@@Base+0x75c4>
   1c2ac:	ldrb	r0, [r1]
   1c2b0:	cmp	r0, #32
   1c2b4:	bls	1d7e8 <main@@Base+0x75a8>
   1c2b8:	ldr	r5, [sp, #44]	; 0x2c
   1c2bc:	ldr	r8, [sp, #40]	; 0x28
   1c2c0:	mov	r7, r1
   1c2c4:	cmp	r7, r5
   1c2c8:	bne	1d81c <main@@Base+0x75dc>
   1c2cc:	b	1d854 <main@@Base+0x7614>
   1c2d0:	cmp	r0, #34	; 0x22
   1c2d4:	bne	1f708 <main@@Base+0x94c8>
   1c2d8:	add	r1, r9, #18
   1c2dc:	sub	r0, r5, r1
   1c2e0:	cmp	r0, #2
   1c2e4:	blt	1d888 <main@@Base+0x7648>
   1c2e8:	ldrb	r0, [r1]
   1c2ec:	cmp	r0, #32
   1c2f0:	bls	1d86c <main@@Base+0x762c>
   1c2f4:	ldr	r5, [sp, #44]	; 0x2c
   1c2f8:	ldr	r8, [sp, #40]	; 0x28
   1c2fc:	mov	r7, r1
   1c300:	cmp	r7, r5
   1c304:	bne	1d8a0 <main@@Base+0x7660>
   1c308:	b	1d8d8 <main@@Base+0x7698>
   1c30c:	bne	1c31c <main@@Base+0x60dc>
   1c310:	ldrb	r0, [r4, #2]!
   1c314:	cmp	r0, #32
   1c318:	bhi	1c32c <main@@Base+0x60ec>
   1c31c:	mov	r0, r8
   1c320:	mov	r2, r5
   1c324:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c328:	mov	r4, r0
   1c32c:	cmp	r4, r5
   1c330:	mov	r6, r5
   1c334:	beq	1c348 <main@@Base+0x6108>
   1c338:	ldrb	r0, [r4]
   1c33c:	cmp	r0, #93	; 0x5d
   1c340:	beq	1d050 <main@@Base+0x6e10>
   1c344:	mov	r6, r4
   1c348:	mov	r0, #0
   1c34c:	mov	r1, #1
   1c350:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c354:	ldr	r0, [r8]
   1c358:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1c35c:	cmp	r0, #0
   1c360:	beq	21468 <main@@Base+0xb228>
   1c364:	mov	r7, r0
   1c368:	mov	r4, r6
   1c36c:	sub	r0, r5, r4
   1c370:	cmp	r0, #4
   1c374:	blt	1c3b0 <main@@Base+0x6170>
   1c378:	ldr	r1, [r4]
   1c37c:	movw	r2, #29300	; 0x7274
   1c380:	movt	r2, #25973	; 0x6575
   1c384:	cmp	r1, r2
   1c388:	beq	1c414 <main@@Base+0x61d4>
   1c38c:	cmp	r0, #5
   1c390:	blt	1c3b0 <main@@Base+0x6170>
   1c394:	ldr	r1, [pc, #3996]	; 1d338 <main@@Base+0x70f8>
   1c398:	mov	r0, r4
   1c39c:	mov	r2, #5
   1c3a0:	add	r1, pc, r1
   1c3a4:	bl	14e64 <memcmp@plt>
   1c3a8:	cmp	r0, #0
   1c3ac:	beq	1c588 <main@@Base+0x6348>
   1c3b0:	mov	r6, #0
   1c3b4:	cmp	r4, r5
   1c3b8:	str	r6, [fp, #-52]	; 0xffffffcc
   1c3bc:	str	r6, [fp, #-56]	; 0xffffffc8
   1c3c0:	str	r6, [sp, #56]	; 0x38
   1c3c4:	beq	1c40c <main@@Base+0x61cc>
   1c3c8:	sub	r0, fp, #56	; 0x38
   1c3cc:	mov	r1, r4
   1c3d0:	mov	r2, r5
   1c3d4:	add	r3, sp, #56	; 0x38
   1c3d8:	str	r0, [sp]
   1c3dc:	mov	r0, r8
   1c3e0:	bl	38410 <flatcc_json_parser_integer@@Base>
   1c3e4:	cmp	r0, r4
   1c3e8:	beq	1c420 <main@@Base+0x61e0>
   1c3ec:	mov	r1, r0
   1c3f0:	ldr	r0, [sp, #56]	; 0x38
   1c3f4:	cmp	r0, #0
   1c3f8:	beq	1c428 <main@@Base+0x61e8>
   1c3fc:	mov	r0, r8
   1c400:	mov	r2, r5
   1c404:	mov	r3, #8
   1c408:	b	1c448 <main@@Base+0x6208>
   1c40c:	mov	r1, r5
   1c410:	b	1c450 <main@@Base+0x6210>
   1c414:	mov	r0, #1
   1c418:	add	r1, r4, #4
   1c41c:	b	1c45c <main@@Base+0x621c>
   1c420:	mov	r1, r4
   1c424:	b	1c450 <main@@Base+0x6210>
   1c428:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c42c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c430:	subs	r3, r0, #256	; 0x100
   1c434:	sbcs	r2, r2, #0
   1c438:	bcc	1c594 <main@@Base+0x6354>
   1c43c:	mov	r0, r8
   1c440:	mov	r2, r5
   1c444:	mov	r3, #7
   1c448:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c44c:	mov	r1, r0
   1c450:	uxtb	r0, r6
   1c454:	cmp	r0, #0
   1c458:	movwne	r0, #1
   1c45c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c460:	cmp	r4, r1
   1c464:	bne	1c4a0 <main@@Base+0x6260>
   1c468:	sub	r0, fp, #60	; 0x3c
   1c46c:	mov	r1, r4
   1c470:	mov	r2, r5
   1c474:	str	r0, [sp]
   1c478:	mov	r0, r8
   1c47c:	ldr	r3, [pc, #4048]	; 1d454 <main@@Base+0x7214>
   1c480:	add	r3, pc, r3
   1c484:	bl	25680 <main@@Base+0xf440>
   1c488:	mov	r1, r0
   1c48c:	cmp	r0, r4
   1c490:	beq	2148c <main@@Base+0xb24c>
   1c494:	cmp	r1, r5
   1c498:	beq	2148c <main@@Base+0xb24c>
   1c49c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1c4a0:	strb	r0, [r7]
   1c4a4:	sub	r0, r5, r1
   1c4a8:	cmp	r0, #2
   1c4ac:	blt	1c4e0 <main@@Base+0x62a0>
   1c4b0:	ldrb	r0, [r1]
   1c4b4:	cmp	r0, #32
   1c4b8:	bls	1c4cc <main@@Base+0x628c>
   1c4bc:	mov	r4, r1
   1c4c0:	cmp	r4, r5
   1c4c4:	bne	1c4f8 <main@@Base+0x62b8>
   1c4c8:	b	1cefc <main@@Base+0x6cbc>
   1c4cc:	bne	1c4e0 <main@@Base+0x62a0>
   1c4d0:	mov	r4, r1
   1c4d4:	ldrb	r0, [r4, #1]!
   1c4d8:	cmp	r0, #32
   1c4dc:	bhi	1c4f0 <main@@Base+0x62b0>
   1c4e0:	mov	r0, r8
   1c4e4:	mov	r2, r5
   1c4e8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c4ec:	mov	r4, r0
   1c4f0:	cmp	r4, r5
   1c4f4:	beq	1cefc <main@@Base+0x6cbc>
   1c4f8:	ldrb	r0, [r4]
   1c4fc:	cmp	r0, #44	; 0x2c
   1c500:	bne	1d03c <main@@Base+0x6dfc>
   1c504:	add	r1, r4, #1
   1c508:	sub	r0, r5, r1
   1c50c:	cmp	r0, #2
   1c510:	blt	1c540 <main@@Base+0x6300>
   1c514:	ldrb	r0, [r1]
   1c518:	cmp	r0, #32
   1c51c:	bls	1c530 <main@@Base+0x62f0>
   1c520:	mov	r4, r1
   1c524:	cmp	r4, r5
   1c528:	bne	1c558 <main@@Base+0x6318>
   1c52c:	b	1d0ac <main@@Base+0x6e6c>
   1c530:	bne	1c540 <main@@Base+0x6300>
   1c534:	ldrb	r0, [r4, #2]!
   1c538:	cmp	r0, #32
   1c53c:	bhi	1c550 <main@@Base+0x6310>
   1c540:	mov	r0, r8
   1c544:	mov	r2, r5
   1c548:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c54c:	mov	r4, r0
   1c550:	cmp	r4, r5
   1c554:	beq	1d0ac <main@@Base+0x6e6c>
   1c558:	ldrb	r0, [r4]
   1c55c:	cmp	r0, #93	; 0x5d
   1c560:	beq	1d050 <main@@Base+0x6e10>
   1c564:	mov	r0, #0
   1c568:	mov	r1, #1
   1c56c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c570:	ldr	r0, [r8]
   1c574:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1c578:	mov	r7, r0
   1c57c:	cmp	r0, #0
   1c580:	bne	1c36c <main@@Base+0x612c>
   1c584:	b	17308 <main@@Base+0x10c8>
   1c588:	mov	r0, #0
   1c58c:	add	r1, r4, #5
   1c590:	b	1c45c <main@@Base+0x621c>
   1c594:	mov	r6, r0
   1c598:	b	1c450 <main@@Base+0x6210>
   1c59c:	bne	1c5b0 <main@@Base+0x6370>
   1c5a0:	mov	r4, r1
   1c5a4:	ldrb	r0, [r4, #1]!
   1c5a8:	cmp	r0, #32
   1c5ac:	bhi	1c5c0 <main@@Base+0x6380>
   1c5b0:	mov	r0, r8
   1c5b4:	mov	r2, r5
   1c5b8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c5bc:	mov	r4, r0
   1c5c0:	cmp	r4, r5
   1c5c4:	beq	1c608 <main@@Base+0x63c8>
   1c5c8:	ldrb	r0, [r4]
   1c5cc:	cmp	r0, #58	; 0x3a
   1c5d0:	bne	1c608 <main@@Base+0x63c8>
   1c5d4:	add	r1, r4, #1
   1c5d8:	sub	r0, r5, r1
   1c5dc:	cmp	r0, #2
   1c5e0:	blt	1dbe4 <main@@Base+0x79a4>
   1c5e4:	ldrb	r0, [r1]
   1c5e8:	cmp	r0, #32
   1c5ec:	bls	1dbcc <main@@Base+0x798c>
   1c5f0:	ldr	r5, [sp, #44]	; 0x2c
   1c5f4:	ldr	r8, [sp, #40]	; 0x28
   1c5f8:	mov	r4, r1
   1c5fc:	cmp	sl, r4
   1c600:	bne	1dbfc <main@@Base+0x79bc>
   1c604:	b	196cc <main@@Base+0x348c>
   1c608:	mov	r0, r8
   1c60c:	mov	r1, r4
   1c610:	mov	r2, r5
   1c614:	mov	r3, #4
   1c618:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c61c:	b	1dbf0 <main@@Base+0x79b0>
   1c620:	bne	1c634 <main@@Base+0x63f4>
   1c624:	mov	r4, r1
   1c628:	ldrb	r0, [r4, #1]!
   1c62c:	cmp	r0, #32
   1c630:	bhi	1c644 <main@@Base+0x6404>
   1c634:	mov	r0, r8
   1c638:	mov	r2, r5
   1c63c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c640:	mov	r4, r0
   1c644:	cmp	r4, r5
   1c648:	beq	1c690 <main@@Base+0x6450>
   1c64c:	ldrb	r0, [r4]
   1c650:	cmp	r0, #58	; 0x3a
   1c654:	bne	1c690 <main@@Base+0x6450>
   1c658:	add	r1, r4, #1
   1c65c:	sub	r0, r5, r1
   1c660:	cmp	r0, #2
   1c664:	blt	1dcb4 <main@@Base+0x7a74>
   1c668:	ldrb	r0, [r1]
   1c66c:	cmp	r0, #32
   1c670:	bls	1dc98 <main@@Base+0x7a58>
   1c674:	ldr	r5, [sp, #44]	; 0x2c
   1c678:	ldr	r8, [sp, #40]	; 0x28
   1c67c:	ldr	sl, [sp, #36]	; 0x24
   1c680:	mov	r4, r1
   1c684:	cmp	r7, r4
   1c688:	bne	1dccc <main@@Base+0x7a8c>
   1c68c:	b	1ea98 <main@@Base+0x8858>
   1c690:	mov	r0, r8
   1c694:	mov	r1, r4
   1c698:	mov	r2, r5
   1c69c:	mov	r3, #4
   1c6a0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c6a4:	b	1dcc0 <main@@Base+0x7a80>
   1c6a8:	andeq	r3, r4, r4, ror sl
   1c6ac:	bne	1c6bc <main@@Base+0x647c>
   1c6b0:	ldrb	r0, [r4, #2]!
   1c6b4:	cmp	r0, #32
   1c6b8:	bhi	1c6cc <main@@Base+0x648c>
   1c6bc:	mov	r0, r8
   1c6c0:	mov	r2, r5
   1c6c4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c6c8:	mov	r4, r0
   1c6cc:	cmp	r7, r4
   1c6d0:	beq	1ea98 <main@@Base+0x8858>
   1c6d4:	mov	r0, #0
   1c6d8:	mov	r1, #3
   1c6dc:	str	r0, [sp, #52]	; 0x34
   1c6e0:	ldr	r0, [r8]
   1c6e4:	bl	314c0 <flatcc_builder_start_table@@Base>
   1c6e8:	cmp	r0, #0
   1c6ec:	bne	1c754 <main@@Base+0x6514>
   1c6f0:	cmp	r4, r5
   1c6f4:	beq	1c72c <main@@Base+0x64ec>
   1c6f8:	ldrb	r0, [r4]
   1c6fc:	cmp	r0, #123	; 0x7b
   1c700:	bne	1c72c <main@@Base+0x64ec>
   1c704:	add	r1, r4, #1
   1c708:	sub	r0, r5, r1
   1c70c:	cmp	r0, #2
   1c710:	blt	1e2c8 <main@@Base+0x8088>
   1c714:	ldrb	r0, [r1]
   1c718:	cmp	r0, #32
   1c71c:	bls	1e2b0 <main@@Base+0x8070>
   1c720:	ldr	r5, [sp, #44]	; 0x2c
   1c724:	mov	r4, r1
   1c728:	b	1e2d8 <main@@Base+0x8098>
   1c72c:	mov	r0, r8
   1c730:	mov	r1, r4
   1c734:	mov	r2, r5
   1c738:	mov	r3, #21
   1c73c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c740:	mov	r4, r0
   1c744:	ldr	r0, [sp, #28]
   1c748:	ldr	r0, [r0]
   1c74c:	cmp	r0, #0
   1c750:	beq	1c784 <main@@Base+0x6544>
   1c754:	mov	r0, r8
   1c758:	mov	r1, r4
   1c75c:	mov	r2, r5
   1c760:	mov	r3, #33	; 0x21
   1c764:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c768:	mov	r4, r0
   1c76c:	ldr	r0, [sp, #52]	; 0x34
   1c770:	cmp	r0, #0
   1c774:	beq	17308 <main@@Base+0x10c8>
   1c778:	ldr	r0, [r8]
   1c77c:	mov	r1, #35	; 0x23
   1c780:	b	19dc8 <main@@Base+0x3b88>
   1c784:	ldr	r0, [r8]
   1c788:	bl	31ef0 <flatcc_builder_end_table@@Base>
   1c78c:	cmp	r0, #0
   1c790:	str	r0, [sp, #52]	; 0x34
   1c794:	bne	1c778 <main@@Base+0x6538>
   1c798:	b	1c754 <main@@Base+0x6514>
   1c79c:	mov	r0, r8
   1c7a0:	mov	r1, r2
   1c7a4:	mov	r2, r5
   1c7a8:	mov	r3, #10
   1c7ac:	b	1ae8c <main@@Base+0x4c4c>
   1c7b0:	andeq	r3, r4, r0, ror #19
   1c7b4:	bne	1c7c4 <main@@Base+0x6584>
   1c7b8:	ldrb	r0, [r2, #2]!
   1c7bc:	cmp	r0, #32
   1c7c0:	bhi	1c7d4 <main@@Base+0x6594>
   1c7c4:	mov	r0, r8
   1c7c8:	mov	r2, r5
   1c7cc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c7d0:	mov	r2, r0
   1c7d4:	cmp	r4, r2
   1c7d8:	beq	1f708 <main@@Base+0x94c8>
   1c7dc:	ldr	r0, [sp, #48]	; 0x30
   1c7e0:	mov	r1, #8
   1c7e4:	mov	r3, #0
   1c7e8:	str	r1, [sp]
   1c7ec:	mov	r1, r2
   1c7f0:	mov	r2, r5
   1c7f4:	str	r0, [sp, #4]
   1c7f8:	ldr	r0, [pc, #4064]	; 1d7e0 <main@@Base+0x75a0>
   1c7fc:	add	r0, pc, r0
   1c800:	str	r0, [sp, #8]
   1c804:	ldr	r0, [pc, #4056]	; 1d7e4 <main@@Base+0x75a4>
   1c808:	add	r0, pc, r0
   1c80c:	str	r0, [sp, #12]
   1c810:	mov	r0, r8
   1c814:	bl	38eb8 <flatcc_json_parser_union_type@@Base>
   1c818:	b	1f718 <main@@Base+0x94d8>
   1c81c:	bne	1c82c <main@@Base+0x65ec>
   1c820:	ldrb	r0, [r4, #2]!
   1c824:	cmp	r0, #32
   1c828:	bhi	1c83c <main@@Base+0x65fc>
   1c82c:	mov	r0, r8
   1c830:	mov	r2, r5
   1c834:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c838:	mov	r4, r0
   1c83c:	cmp	r7, r4
   1c840:	beq	1ea98 <main@@Base+0x8858>
   1c844:	ldr	r0, [r8]
   1c848:	bl	31040 <flatcc_builder_start_offset_vector@@Base>
   1c84c:	cmp	r0, #0
   1c850:	bne	17308 <main@@Base+0x10c8>
   1c854:	cmp	r4, r5
   1c858:	beq	1c88c <main@@Base+0x664c>
   1c85c:	ldrb	r0, [r4]
   1c860:	cmp	r0, #91	; 0x5b
   1c864:	bne	1c88c <main@@Base+0x664c>
   1c868:	add	r1, r4, #1
   1c86c:	sub	r0, r5, r1
   1c870:	cmp	r0, #2
   1c874:	blt	1d0d0 <main@@Base+0x6e90>
   1c878:	ldrb	r0, [r1]
   1c87c:	cmp	r0, #32
   1c880:	bls	1d0c0 <main@@Base+0x6e80>
   1c884:	mov	r4, r1
   1c888:	b	1d0e0 <main@@Base+0x6ea0>
   1c88c:	mov	r0, r8
   1c890:	mov	r1, r4
   1c894:	mov	r2, r5
   1c898:	mov	r3, #22
   1c89c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c8a0:	mov	r4, r0
   1c8a4:	ldr	r0, [r8]
   1c8a8:	bl	31228 <flatcc_builder_end_offset_vector@@Base>
   1c8ac:	cmp	r0, #0
   1c8b0:	str	r0, [sp, #52]	; 0x34
   1c8b4:	beq	17308 <main@@Base+0x10c8>
   1c8b8:	ldr	r0, [r8]
   1c8bc:	mov	r1, #28
   1c8c0:	b	19dc8 <main@@Base+0x3b88>
   1c8c4:	bne	1c8d4 <main@@Base+0x6694>
   1c8c8:	ldrb	r0, [r7, #2]!
   1c8cc:	cmp	r0, #32
   1c8d0:	bhi	1c8e4 <main@@Base+0x66a4>
   1c8d4:	mov	r0, r8
   1c8d8:	mov	r2, r5
   1c8dc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1c8e0:	mov	r7, r0
   1c8e4:	cmp	sl, r7
   1c8e8:	beq	196cc <main@@Base+0x348c>
   1c8ec:	ldr	r0, [r8]
   1c8f0:	mov	r1, #8
   1c8f4:	mov	r2, #4
   1c8f8:	mvn	r3, #-536870912	; 0xe0000000
   1c8fc:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   1c900:	cmp	r0, #0
   1c904:	bne	21460 <main@@Base+0xb220>
   1c908:	ldr	sl, [sp, #36]	; 0x24
   1c90c:	cmp	r7, r5
   1c910:	beq	1c944 <main@@Base+0x6704>
   1c914:	ldrb	r0, [r7]
   1c918:	cmp	r0, #91	; 0x5b
   1c91c:	bne	1c944 <main@@Base+0x6704>
   1c920:	add	r1, r7, #1
   1c924:	sub	r0, r5, r1
   1c928:	cmp	r0, #2
   1c92c:	blt	1d250 <main@@Base+0x7010>
   1c930:	ldrb	r0, [r1]
   1c934:	cmp	r0, #32
   1c938:	bls	1d240 <main@@Base+0x7000>
   1c93c:	mov	r7, r1
   1c940:	b	1d260 <main@@Base+0x7020>
   1c944:	mov	r0, r8
   1c948:	mov	r1, r7
   1c94c:	mov	r2, r5
   1c950:	mov	r3, #22
   1c954:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1c958:	mov	r7, r0
   1c95c:	ldr	r0, [r8]
   1c960:	bl	32234 <flatcc_builder_end_vector@@Base>
   1c964:	cmp	r0, #0
   1c968:	str	r0, [sp, #52]	; 0x34
   1c96c:	beq	21460 <main@@Base+0xb220>
   1c970:	ldr	r0, [r8]
   1c974:	mov	r1, #29
   1c978:	b	1a604 <main@@Base+0x43c4>
   1c97c:	ldr	sl, [sp, #36]	; 0x24
   1c980:	mov	r6, r0
   1c984:	str	r6, [fp, #-60]	; 0xffffffc4
   1c988:	cmp	r7, r4
   1c98c:	bne	1c9c4 <main@@Base+0x6784>
   1c990:	sub	r0, fp, #60	; 0x3c
   1c994:	mov	r1, r7
   1c998:	mov	r2, r5
   1c99c:	str	r0, [sp]
   1c9a0:	mov	r0, r8
   1c9a4:	ldr	r3, [pc, #4080]	; 1d99c <main@@Base+0x775c>
   1c9a8:	add	r3, pc, r3
   1c9ac:	bl	259fc <main@@Base+0xf7bc>
   1c9b0:	mov	r4, r0
   1c9b4:	cmp	r0, r7
   1c9b8:	cmpne	r4, r5
   1c9bc:	beq	214b0 <main@@Base+0xb270>
   1c9c0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1c9c4:	cmp	r6, #0
   1c9c8:	bne	1c9d8 <main@@Base+0x6798>
   1c9cc:	ldrb	r0, [r8, #8]
   1c9d0:	tst	r0, #2
   1c9d4:	beq	1f71c <main@@Base+0x94dc>
   1c9d8:	ldr	r0, [r8]
   1c9dc:	mov	r1, #16
   1c9e0:	b	1eb6c <main@@Base+0x892c>
   1c9e4:			; <UNDEFINED> instruction: 0x000437b4
   1c9e8:	bne	1c9f8 <main@@Base+0x67b8>
   1c9ec:	ldrb	r0, [r7, #2]!
   1c9f0:	cmp	r0, #32
   1c9f4:	bhi	1ca08 <main@@Base+0x67c8>
   1c9f8:	mov	r0, r8
   1c9fc:	mov	r2, r5
   1ca00:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ca04:	mov	r7, r0
   1ca08:	cmp	r9, r7
   1ca0c:	beq	18814 <main@@Base+0x25d4>
   1ca10:	mov	r6, #0
   1ca14:	cmp	r7, r5
   1ca18:	str	r6, [fp, #-52]	; 0xffffffcc
   1ca1c:	str	r6, [fp, #-56]	; 0xffffffc8
   1ca20:	strh	r6, [fp, #-60]	; 0xffffffc4
   1ca24:	str	r6, [sp, #56]	; 0x38
   1ca28:	beq	1ca90 <main@@Base+0x6850>
   1ca2c:	sub	r0, fp, #56	; 0x38
   1ca30:	mov	r1, r7
   1ca34:	mov	r2, r5
   1ca38:	add	r3, sp, #56	; 0x38
   1ca3c:	str	r0, [sp]
   1ca40:	mov	r0, r8
   1ca44:	bl	38410 <flatcc_json_parser_integer@@Base>
   1ca48:	cmp	r0, r7
   1ca4c:	beq	1caa0 <main@@Base+0x6860>
   1ca50:	ldr	r2, [sp, #56]	; 0x38
   1ca54:	mov	r4, r0
   1ca58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ca5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ca60:	cmp	r2, #0
   1ca64:	beq	1cab0 <main@@Base+0x6870>
   1ca68:	movw	r2, #32769	; 0x8001
   1ca6c:	subs	r2, r0, r2
   1ca70:	sbcs	r1, r1, #0
   1ca74:	bcc	1cae0 <main@@Base+0x68a0>
   1ca78:	mov	r0, r8
   1ca7c:	mov	r1, r4
   1ca80:	mov	r2, r5
   1ca84:	mov	r3, #8
   1ca88:	b	1cacc <main@@Base+0x688c>
   1ca8c:	andeq	r3, r4, r8, lsr #14
   1ca90:	mov	r4, r5
   1ca94:	cmp	r7, r4
   1ca98:	bne	1cb30 <main@@Base+0x68f0>
   1ca9c:	b	1cafc <main@@Base+0x68bc>
   1caa0:	mov	r4, r7
   1caa4:	cmp	r7, r4
   1caa8:	bne	1cb30 <main@@Base+0x68f0>
   1caac:	b	1cafc <main@@Base+0x68bc>
   1cab0:	subs	r2, r0, #32768	; 0x8000
   1cab4:	sbcs	r1, r1, #0
   1cab8:	bcc	1caec <main@@Base+0x68ac>
   1cabc:	mov	r0, r8
   1cac0:	mov	r1, r4
   1cac4:	mov	r2, r5
   1cac8:	mov	r3, #7
   1cacc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1cad0:	mov	r4, r0
   1cad4:	cmp	r7, r4
   1cad8:	bne	1cb30 <main@@Base+0x68f0>
   1cadc:	b	1cafc <main@@Base+0x68bc>
   1cae0:	rsb	r6, r0, #0
   1cae4:	b	1caf0 <main@@Base+0x68b0>
   1cae8:	muleq	r4, r4, r6
   1caec:	mov	r6, r0
   1caf0:	strh	r6, [fp, #-60]	; 0xffffffc4
   1caf4:	cmp	r7, r4
   1caf8:	bne	1cb30 <main@@Base+0x68f0>
   1cafc:	sub	r0, fp, #60	; 0x3c
   1cb00:	mov	r1, r7
   1cb04:	mov	r2, r5
   1cb08:	str	r0, [sp]
   1cb0c:	mov	r0, r8
   1cb10:	ldr	r3, [pc, #3992]	; 1dab0 <main@@Base+0x7870>
   1cb14:	add	r3, pc, r3
   1cb18:	bl	2381c <main@@Base+0xd5dc>
   1cb1c:	mov	r4, r0
   1cb20:	cmp	r0, r7
   1cb24:	cmpne	r4, r5
   1cb28:	beq	214b0 <main@@Base+0xb270>
   1cb2c:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1cb30:	uxth	r0, r6
   1cb34:	cmp	r0, #150	; 0x96
   1cb38:	ldrbeq	r0, [r8, #8]
   1cb3c:	tsteq	r0, #2
   1cb40:	beq	1f71c <main@@Base+0x94dc>
   1cb44:	ldr	r0, [r8]
   1cb48:	mov	r1, #1
   1cb4c:	mov	r2, #2
   1cb50:	mov	r3, #2
   1cb54:	bl	32964 <flatcc_builder_table_add@@Base>
   1cb58:	cmp	r0, #0
   1cb5c:	beq	214b0 <main@@Base+0xb270>
   1cb60:	strh	r6, [r0]
   1cb64:	b	1f71c <main@@Base+0x94dc>
   1cb68:	bne	1cb78 <main@@Base+0x6938>
   1cb6c:	ldrb	r0, [r7, #2]!
   1cb70:	cmp	r0, #32
   1cb74:	bhi	1cb88 <main@@Base+0x6948>
   1cb78:	mov	r0, r8
   1cb7c:	mov	r2, r5
   1cb80:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1cb84:	mov	r7, r0
   1cb88:	cmp	r9, r7
   1cb8c:	beq	18814 <main@@Base+0x25d4>
   1cb90:	mov	r0, #0
   1cb94:	mov	r1, r7
   1cb98:	mov	r2, r5
   1cb9c:	sub	r3, fp, #56	; 0x38
   1cba0:	str	r0, [fp, #-56]	; 0xffffffc8
   1cba4:	mov	r0, r8
   1cba8:	bl	382d0 <flatcc_json_parser_float@@Base>
   1cbac:	mov	r4, r0
   1cbb0:	cmp	r7, r0
   1cbb4:	bne	1cbe8 <main@@Base+0x69a8>
   1cbb8:	sub	r0, fp, #56	; 0x38
   1cbbc:	mov	r1, r7
   1cbc0:	mov	r2, r5
   1cbc4:	str	r0, [sp]
   1cbc8:	mov	r0, r8
   1cbcc:	ldr	r3, [pc, #4084]	; 1dbc8 <main@@Base+0x7988>
   1cbd0:	add	r3, pc, r3
   1cbd4:	bl	25858 <main@@Base+0xf618>
   1cbd8:	mov	r4, r0
   1cbdc:	cmp	r0, r7
   1cbe0:	cmpne	r4, r5
   1cbe4:	beq	17308 <main@@Base+0x10c8>
   1cbe8:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1cbec:	vcmp.f32	s0, s18
   1cbf0:	vmrs	APSR_nzcv, fpscr
   1cbf4:	bne	1cc04 <main@@Base+0x69c4>
   1cbf8:	ldrb	r0, [r8, #8]
   1cbfc:	tst	r0, #2
   1cc00:	beq	1f71c <main@@Base+0x94dc>
   1cc04:	ldr	r0, [r8]
   1cc08:	mov	r1, #25
   1cc0c:	b	193bc <main@@Base+0x317c>
   1cc10:	bne	1cc20 <main@@Base+0x69e0>
   1cc14:	ldrb	r0, [r7, #2]!
   1cc18:	cmp	r0, #32
   1cc1c:	bhi	1cc30 <main@@Base+0x69f0>
   1cc20:	mov	r0, r8
   1cc24:	mov	r2, r5
   1cc28:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1cc2c:	mov	r7, r0
   1cc30:	cmp	sl, r7
   1cc34:	beq	1a408 <main@@Base+0x41c8>
   1cc38:	mov	r6, #0
   1cc3c:	cmp	r7, r5
   1cc40:	str	r6, [fp, #-52]	; 0xffffffcc
   1cc44:	str	r6, [fp, #-56]	; 0xffffffc8
   1cc48:	str	r6, [sp, #60]	; 0x3c
   1cc4c:	str	r6, [sp, #56]	; 0x38
   1cc50:	str	r6, [fp, #-60]	; 0xffffffc4
   1cc54:	beq	1ccb0 <main@@Base+0x6a70>
   1cc58:	sub	r0, fp, #56	; 0x38
   1cc5c:	mov	r1, r7
   1cc60:	mov	r2, r5
   1cc64:	sub	r3, fp, #60	; 0x3c
   1cc68:	str	r0, [sp]
   1cc6c:	mov	r0, r8
   1cc70:	bl	38410 <flatcc_json_parser_integer@@Base>
   1cc74:	cmp	r0, r7
   1cc78:	beq	1ccbc <main@@Base+0x6a7c>
   1cc7c:	sub	r9, fp, #60	; 0x3c
   1cc80:	mov	r4, r0
   1cc84:	ldm	r9, {r0, r6, r9}
   1cc88:	cmp	r0, #0
   1cc8c:	beq	1cccc <main@@Base+0x6a8c>
   1cc90:	subs	r0, r6, #1
   1cc94:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1cc98:	bcc	1cd84 <main@@Base+0x6b44>
   1cc9c:	mov	r0, r8
   1cca0:	mov	r1, r4
   1cca4:	mov	r2, r5
   1cca8:	mov	r3, #8
   1ccac:	b	1cce4 <main@@Base+0x6aa4>
   1ccb0:	mov	r9, #0
   1ccb4:	mov	r4, r5
   1ccb8:	b	1cd94 <main@@Base+0x6b54>
   1ccbc:	mov	r6, #0
   1ccc0:	mov	r9, #0
   1ccc4:	mov	r4, r7
   1ccc8:	b	1cd94 <main@@Base+0x6b54>
   1cccc:	cmn	r9, #1
   1ccd0:	bgt	1cd8c <main@@Base+0x6b4c>
   1ccd4:	mov	r0, r8
   1ccd8:	mov	r1, r4
   1ccdc:	mov	r2, r5
   1cce0:	mov	r3, #7
   1cce4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1cce8:	mov	r4, r0
   1ccec:	mov	r6, #0
   1ccf0:	mov	r9, #0
   1ccf4:	b	1cd94 <main@@Base+0x6b54>
   1ccf8:	andeq	r3, r4, r4, asr #7
   1ccfc:	bne	1cd10 <main@@Base+0x6ad0>
   1cd00:	mov	r4, r1
   1cd04:	ldrb	r0, [r4, #1]!
   1cd08:	cmp	r0, #32
   1cd0c:	bhi	1cd20 <main@@Base+0x6ae0>
   1cd10:	mov	r0, r8
   1cd14:	mov	r2, r5
   1cd18:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1cd1c:	mov	r4, r0
   1cd20:	cmp	r4, r5
   1cd24:	beq	1cd6c <main@@Base+0x6b2c>
   1cd28:	ldrb	r0, [r4]
   1cd2c:	cmp	r0, #58	; 0x3a
   1cd30:	bne	1cd6c <main@@Base+0x6b2c>
   1cd34:	add	r1, r4, #1
   1cd38:	sub	r0, r5, r1
   1cd3c:	cmp	r0, #2
   1cd40:	blt	1ea2c <main@@Base+0x87ec>
   1cd44:	ldrb	r0, [r1]
   1cd48:	cmp	r0, #32
   1cd4c:	bls	1ea10 <main@@Base+0x87d0>
   1cd50:	ldr	r5, [sp, #44]	; 0x2c
   1cd54:	ldr	r8, [sp, #40]	; 0x28
   1cd58:	ldr	sl, [sp, #36]	; 0x24
   1cd5c:	mov	r4, r1
   1cd60:	cmp	r7, r4
   1cd64:	bne	1ea44 <main@@Base+0x8804>
   1cd68:	b	1ea98 <main@@Base+0x8858>
   1cd6c:	mov	r0, r8
   1cd70:	mov	r1, r4
   1cd74:	mov	r2, r5
   1cd78:	mov	r3, #4
   1cd7c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1cd80:	b	1ea38 <main@@Base+0x87f8>
   1cd84:	rsbs	r6, r6, #0
   1cd88:	rsc	r9, r9, #0
   1cd8c:	str	r6, [sp, #56]	; 0x38
   1cd90:	str	r9, [sp, #60]	; 0x3c
   1cd94:	ldr	sl, [sp, #36]	; 0x24
   1cd98:	cmp	r7, r4
   1cd9c:	bne	1cdd8 <main@@Base+0x6b98>
   1cda0:	add	r0, sp, #56	; 0x38
   1cda4:	mov	r1, r7
   1cda8:	mov	r2, r5
   1cdac:	str	r0, [sp]
   1cdb0:	mov	r0, r8
   1cdb4:	ldr	r3, [pc, #4056]	; 1dd94 <main@@Base+0x7b54>
   1cdb8:	add	r3, pc, r3
   1cdbc:	bl	25c0c <main@@Base+0xf9cc>
   1cdc0:	mov	r4, r0
   1cdc4:	cmp	r0, r7
   1cdc8:	cmpne	r4, r5
   1cdcc:	beq	214b0 <main@@Base+0xb270>
   1cdd0:	ldr	r6, [sp, #56]	; 0x38
   1cdd4:	ldr	r9, [sp, #60]	; 0x3c
   1cdd8:	orrs	r0, r6, r9
   1cddc:	bne	1cdec <main@@Base+0x6bac>
   1cde0:	ldrb	r0, [r8, #8]
   1cde4:	tst	r0, #2
   1cde8:	beq	1f71c <main@@Base+0x94dc>
   1cdec:	ldr	r0, [r8]
   1cdf0:	mov	r1, #18
   1cdf4:	b	1d704 <main@@Base+0x74c4>
   1cdf8:	beq	1da08 <main@@Base+0x77c8>
   1cdfc:	b	1da18 <main@@Base+0x77d8>
   1ce00:	bne	1ce10 <main@@Base+0x6bd0>
   1ce04:	ldrb	r0, [r4, #2]!
   1ce08:	cmp	r0, #32
   1ce0c:	bhi	1ce20 <main@@Base+0x6be0>
   1ce10:	ldr	r0, [sp, #40]	; 0x28
   1ce14:	mov	r2, r5
   1ce18:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ce1c:	mov	r4, r0
   1ce20:	cmp	r8, r4
   1ce24:	beq	1aadc <main@@Base+0x489c>
   1ce28:	ldr	r8, [sp, #40]	; 0x28
   1ce2c:	mov	r0, #0
   1ce30:	mov	r1, #0
   1ce34:	str	r0, [sp, #52]	; 0x34
   1ce38:	ldr	r0, [r8]
   1ce3c:	bl	314c0 <flatcc_builder_start_table@@Base>
   1ce40:	cmp	r0, #0
   1ce44:	bne	1ceb0 <main@@Base+0x6c70>
   1ce48:	cmp	r4, r5
   1ce4c:	beq	1ce84 <main@@Base+0x6c44>
   1ce50:	ldrb	r0, [r4]
   1ce54:	cmp	r0, #123	; 0x7b
   1ce58:	bne	1ce84 <main@@Base+0x6c44>
   1ce5c:	add	r1, r4, #1
   1ce60:	sub	r0, r5, r1
   1ce64:	cmp	r0, #2
   1ce68:	blt	1f0c4 <main@@Base+0x8e84>
   1ce6c:	ldrb	r0, [r1]
   1ce70:	cmp	r0, #32
   1ce74:	bls	1f0b0 <main@@Base+0x8e70>
   1ce78:	ldr	r5, [sp, #44]	; 0x2c
   1ce7c:	mov	r4, r1
   1ce80:	b	1f0d4 <main@@Base+0x8e94>
   1ce84:	mov	r0, r8
   1ce88:	mov	r1, r4
   1ce8c:	mov	r2, r5
   1ce90:	mov	r3, #21
   1ce94:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1ce98:	mov	r4, r0
   1ce9c:	ldr	r0, [sp, #28]
   1cea0:	ldr	r0, [r0]
   1cea4:	cmp	r0, #0
   1cea8:	beq	1cee0 <main@@Base+0x6ca0>
   1ceac:	ldr	sl, [sp, #36]	; 0x24
   1ceb0:	mov	r0, r8
   1ceb4:	mov	r1, r4
   1ceb8:	mov	r2, r5
   1cebc:	mov	r3, #33	; 0x21
   1cec0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1cec4:	mov	r4, r0
   1cec8:	ldr	r0, [sp, #52]	; 0x34
   1cecc:	cmp	r0, #0
   1ced0:	beq	17308 <main@@Base+0x10c8>
   1ced4:	ldr	r0, [r8]
   1ced8:	mov	r1, #34	; 0x22
   1cedc:	b	19dc8 <main@@Base+0x3b88>
   1cee0:	ldr	r0, [r8]
   1cee4:	bl	31ef0 <flatcc_builder_end_table@@Base>
   1cee8:	ldr	sl, [sp, #36]	; 0x24
   1ceec:	cmp	r0, #0
   1cef0:	str	r0, [sp, #52]	; 0x34
   1cef4:	bne	1ced4 <main@@Base+0x6c94>
   1cef8:	b	1ceb0 <main@@Base+0x6c70>
   1cefc:	mov	r4, r5
   1cf00:	b	1abb8 <main@@Base+0x4978>
   1cf04:	bne	1cf18 <main@@Base+0x6cd8>
   1cf08:	mov	r7, r1
   1cf0c:	ldrb	r0, [r7, #1]!
   1cf10:	cmp	r0, #32
   1cf14:	bhi	1cf28 <main@@Base+0x6ce8>
   1cf18:	mov	r0, r8
   1cf1c:	mov	r2, r5
   1cf20:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1cf24:	mov	r7, r0
   1cf28:	cmp	r7, r5
   1cf2c:	beq	1cf74 <main@@Base+0x6d34>
   1cf30:	ldrb	r0, [r7]
   1cf34:	cmp	r0, #58	; 0x3a
   1cf38:	bne	1cf74 <main@@Base+0x6d34>
   1cf3c:	add	r1, r7, #1
   1cf40:	sub	r0, r5, r1
   1cf44:	cmp	r0, #2
   1cf48:	blt	1ee94 <main@@Base+0x8c54>
   1cf4c:	ldrb	r0, [r1]
   1cf50:	cmp	r0, #32
   1cf54:	bls	1ee78 <main@@Base+0x8c38>
   1cf58:	ldr	r5, [sp, #44]	; 0x2c
   1cf5c:	ldr	r8, [sp, #40]	; 0x28
   1cf60:	ldr	sl, [sp, #36]	; 0x24
   1cf64:	mov	r7, r1
   1cf68:	cmp	r4, r7
   1cf6c:	bne	1eeac <main@@Base+0x8c6c>
   1cf70:	b	1f708 <main@@Base+0x94c8>
   1cf74:	mov	r0, r8
   1cf78:	mov	r1, r7
   1cf7c:	mov	r2, r5
   1cf80:	mov	r3, #4
   1cf84:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1cf88:	b	1eea0 <main@@Base+0x8c60>
   1cf8c:	bne	1cf9c <main@@Base+0x6d5c>
   1cf90:	ldrb	r0, [r4, #2]!
   1cf94:	cmp	r0, #32
   1cf98:	bhi	1cfac <main@@Base+0x6d6c>
   1cf9c:	mov	r0, r8
   1cfa0:	mov	r2, r5
   1cfa4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1cfa8:	mov	r4, r0
   1cfac:	cmp	r7, r4
   1cfb0:	beq	1ea98 <main@@Base+0x8858>
   1cfb4:	ldr	r0, [r8]
   1cfb8:	bl	31040 <flatcc_builder_start_offset_vector@@Base>
   1cfbc:	cmp	r0, #0
   1cfc0:	bne	17308 <main@@Base+0x10c8>
   1cfc4:	cmp	r4, r5
   1cfc8:	beq	1d004 <main@@Base+0x6dc4>
   1cfcc:	ldrb	r0, [r4]
   1cfd0:	cmp	r0, #91	; 0x5b
   1cfd4:	bne	1d004 <main@@Base+0x6dc4>
   1cfd8:	add	r1, r4, #1
   1cfdc:	sub	r0, r5, r1
   1cfe0:	cmp	r0, #2
   1cfe4:	blt	1da40 <main@@Base+0x7800>
   1cfe8:	ldrb	r0, [r1]
   1cfec:	cmp	r0, #32
   1cff0:	bls	1da28 <main@@Base+0x77e8>
   1cff4:	ldr	r5, [sp, #44]	; 0x2c
   1cff8:	ldr	r8, [sp, #40]	; 0x28
   1cffc:	mov	r4, r1
   1d000:	b	1da50 <main@@Base+0x7810>
   1d004:	mov	r0, r8
   1d008:	mov	r1, r4
   1d00c:	mov	r2, r5
   1d010:	mov	r3, #22
   1d014:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d018:	mov	r4, r0
   1d01c:	ldr	r0, [r8]
   1d020:	bl	31228 <flatcc_builder_end_offset_vector@@Base>
   1d024:	cmp	r0, #0
   1d028:	str	r0, [sp, #52]	; 0x34
   1d02c:	beq	17308 <main@@Base+0x10c8>
   1d030:	ldr	r0, [r8]
   1d034:	mov	r1, #11
   1d038:	b	19dc8 <main@@Base+0x3b88>
   1d03c:	cmp	r0, #93	; 0x5d
   1d040:	bne	1e050 <main@@Base+0x7e10>
   1d044:	ldr	r5, [sp, #44]	; 0x2c
   1d048:	ldr	r8, [sp, #40]	; 0x28
   1d04c:	ldr	sl, [sp, #36]	; 0x24
   1d050:	add	r1, r4, #1
   1d054:	sub	r0, r5, r1
   1d058:	cmp	r0, #2
   1d05c:	blt	1d09c <main@@Base+0x6e5c>
   1d060:	ldrb	r0, [r1]
   1d064:	cmp	r0, #32
   1d068:	bls	1d080 <main@@Base+0x6e40>
   1d06c:	ldr	r5, [sp, #44]	; 0x2c
   1d070:	ldr	r8, [sp, #40]	; 0x28
   1d074:	ldr	sl, [sp, #36]	; 0x24
   1d078:	mov	r4, r1
   1d07c:	b	1abb8 <main@@Base+0x4978>
   1d080:	ldr	r5, [sp, #44]	; 0x2c
   1d084:	ldr	r8, [sp, #40]	; 0x28
   1d088:	ldr	sl, [sp, #36]	; 0x24
   1d08c:	bne	1d09c <main@@Base+0x6e5c>
   1d090:	ldrb	r0, [r4, #2]!
   1d094:	cmp	r0, #32
   1d098:	bhi	1abb8 <main@@Base+0x4978>
   1d09c:	mov	r0, r8
   1d0a0:	mov	r2, r5
   1d0a4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d0a8:	b	1abb4 <main@@Base+0x4974>
   1d0ac:	mov	r0, r8
   1d0b0:	mov	r1, r5
   1d0b4:	mov	r2, r5
   1d0b8:	mov	r3, #9
   1d0bc:	b	1abb0 <main@@Base+0x4970>
   1d0c0:	bne	1d0d0 <main@@Base+0x6e90>
   1d0c4:	ldrb	r0, [r4, #2]!
   1d0c8:	cmp	r0, #32
   1d0cc:	bhi	1d0e0 <main@@Base+0x6ea0>
   1d0d0:	mov	r0, r8
   1d0d4:	mov	r2, r5
   1d0d8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d0dc:	mov	r4, r0
   1d0e0:	cmp	r4, r5
   1d0e4:	mov	r2, r5
   1d0e8:	beq	1d138 <main@@Base+0x6ef8>
   1d0ec:	ldrb	r0, [r4]
   1d0f0:	cmp	r0, #93	; 0x5d
   1d0f4:	bne	1d134 <main@@Base+0x6ef4>
   1d0f8:	add	r1, r4, #1
   1d0fc:	sub	r0, r5, r1
   1d100:	cmp	r0, #2
   1d104:	blt	20fc0 <main@@Base+0xad80>
   1d108:	ldrb	r0, [r1]
   1d10c:	cmp	r0, #32
   1d110:	bhi	1e290 <main@@Base+0x8050>
   1d114:	ldr	r5, [sp, #44]	; 0x2c
   1d118:	ldr	r8, [sp, #40]	; 0x28
   1d11c:	ldr	sl, [sp, #36]	; 0x24
   1d120:	bne	20fc0 <main@@Base+0xad80>
   1d124:	ldrb	r0, [r4, #2]!
   1d128:	cmp	r0, #32
   1d12c:	bhi	1c8a4 <main@@Base+0x6664>
   1d130:	b	20fc0 <main@@Base+0xad80>
   1d134:	mov	r2, r4
   1d138:	mov	r1, r2
   1d13c:	mov	r0, r8
   1d140:	mov	r2, r5
   1d144:	add	r3, sp, #52	; 0x34
   1d148:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   1d14c:	mov	r4, r0
   1d150:	ldr	r0, [sp, #52]	; 0x34
   1d154:	cmp	r0, #0
   1d158:	beq	17308 <main@@Base+0x10c8>
   1d15c:	ldr	r0, [r8]
   1d160:	mov	r1, #1
   1d164:	bl	30798 <flatcc_builder_extend_offset_vector@@Base>
   1d168:	cmp	r0, #0
   1d16c:	beq	17308 <main@@Base+0x10c8>
   1d170:	ldr	r1, [sp, #52]	; 0x34
   1d174:	str	r1, [r0]
   1d178:	sub	r0, r5, r4
   1d17c:	cmp	r0, #2
   1d180:	blt	1d1b4 <main@@Base+0x6f74>
   1d184:	ldrb	r0, [r4]
   1d188:	cmp	r0, #32
   1d18c:	bls	1d1a0 <main@@Base+0x6f60>
   1d190:	mov	r2, r4
   1d194:	cmp	r2, r5
   1d198:	bne	1d1d0 <main@@Base+0x6f90>
   1d19c:	b	1e224 <main@@Base+0x7fe4>
   1d1a0:	bne	1d1b4 <main@@Base+0x6f74>
   1d1a4:	mov	r2, r4
   1d1a8:	ldrb	r0, [r2, #1]!
   1d1ac:	cmp	r0, #32
   1d1b0:	bhi	1d1c8 <main@@Base+0x6f88>
   1d1b4:	mov	r0, r8
   1d1b8:	mov	r1, r4
   1d1bc:	mov	r2, r5
   1d1c0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d1c4:	mov	r2, r0
   1d1c8:	cmp	r2, r5
   1d1cc:	beq	1e224 <main@@Base+0x7fe4>
   1d1d0:	ldrb	r0, [r2]
   1d1d4:	cmp	r0, #44	; 0x2c
   1d1d8:	bne	1e260 <main@@Base+0x8020>
   1d1dc:	add	r1, r2, #1
   1d1e0:	sub	r0, r5, r1
   1d1e4:	cmp	r0, #2
   1d1e8:	blt	1d218 <main@@Base+0x6fd8>
   1d1ec:	ldrb	r0, [r1]
   1d1f0:	cmp	r0, #32
   1d1f4:	bls	1d208 <main@@Base+0x6fc8>
   1d1f8:	mov	r2, r1
   1d1fc:	cmp	r2, r5
   1d200:	bne	1d230 <main@@Base+0x6ff0>
   1d204:	b	1e2a4 <main@@Base+0x8064>
   1d208:	bne	1d218 <main@@Base+0x6fd8>
   1d20c:	ldrb	r0, [r2, #2]!
   1d210:	cmp	r0, #32
   1d214:	bhi	1d228 <main@@Base+0x6fe8>
   1d218:	mov	r0, r8
   1d21c:	mov	r2, r5
   1d220:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d224:	mov	r2, r0
   1d228:	cmp	r2, r5
   1d22c:	beq	1e2a4 <main@@Base+0x8064>
   1d230:	ldrb	r0, [r2]
   1d234:	cmp	r0, #93	; 0x5d
   1d238:	bne	1d138 <main@@Base+0x6ef8>
   1d23c:	b	1e270 <main@@Base+0x8030>
   1d240:	bne	1d250 <main@@Base+0x7010>
   1d244:	ldrb	r0, [r7, #2]!
   1d248:	cmp	r0, #32
   1d24c:	bhi	1d260 <main@@Base+0x7020>
   1d250:	mov	r0, r8
   1d254:	mov	r2, r5
   1d258:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d25c:	mov	r7, r0
   1d260:	cmp	r7, r5
   1d264:	mov	r4, r5
   1d268:	beq	202f8 <main@@Base+0xa0b8>
   1d26c:	ldrb	r0, [r7]
   1d270:	cmp	r0, #93	; 0x5d
   1d274:	bne	1d2b4 <main@@Base+0x7074>
   1d278:	add	r1, r7, #1
   1d27c:	sub	r0, r5, r1
   1d280:	cmp	r0, #2
   1d284:	blt	210a4 <main@@Base+0xae64>
   1d288:	ldrb	r0, [r1]
   1d28c:	cmp	r0, #32
   1d290:	bhi	20c3c <main@@Base+0xa9fc>
   1d294:	ldr	r5, [sp, #44]	; 0x2c
   1d298:	ldr	r8, [sp, #40]	; 0x28
   1d29c:	ldr	sl, [sp, #36]	; 0x24
   1d2a0:	bne	210a4 <main@@Base+0xae64>
   1d2a4:	ldrb	r0, [r7, #2]!
   1d2a8:	cmp	r0, #32
   1d2ac:	bhi	1c95c <main@@Base+0x671c>
   1d2b0:	b	210a4 <main@@Base+0xae64>
   1d2b4:	mov	r4, r7
   1d2b8:	b	202f8 <main@@Base+0xa0b8>
   1d2bc:	bne	1d2cc <main@@Base+0x708c>
   1d2c0:	ldrb	r0, [r4, #2]!
   1d2c4:	cmp	r0, #32
   1d2c8:	bhi	1d2dc <main@@Base+0x709c>
   1d2cc:	mov	r0, r8
   1d2d0:	mov	r2, r5
   1d2d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d2d8:	mov	r4, r0
   1d2dc:	cmp	r7, r4
   1d2e0:	beq	1ea98 <main@@Base+0x8858>
   1d2e4:	mov	r0, #0
   1d2e8:	mov	r1, #3
   1d2ec:	str	r0, [sp, #52]	; 0x34
   1d2f0:	ldr	r0, [r8]
   1d2f4:	bl	314c0 <flatcc_builder_start_table@@Base>
   1d2f8:	cmp	r0, #0
   1d2fc:	bne	1d370 <main@@Base+0x7130>
   1d300:	cmp	r4, r5
   1d304:	beq	1d33c <main@@Base+0x70fc>
   1d308:	ldrb	r0, [r4]
   1d30c:	cmp	r0, #123	; 0x7b
   1d310:	bne	1d33c <main@@Base+0x70fc>
   1d314:	add	r1, r4, #1
   1d318:	sub	r0, r5, r1
   1d31c:	cmp	r0, #2
   1d320:	blt	1f8cc <main@@Base+0x968c>
   1d324:	ldrb	r0, [r1]
   1d328:	cmp	r0, #32
   1d32c:	bls	1f8bc <main@@Base+0x967c>
   1d330:	mov	r4, r1
   1d334:	b	1f8dc <main@@Base+0x969c>
   1d338:	andeq	lr, r2, r6, ror fp
   1d33c:	mov	r0, r8
   1d340:	mov	r1, r4
   1d344:	mov	r2, r5
   1d348:	mov	r3, #21
   1d34c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d350:	mov	r4, r0
   1d354:	ldr	r0, [sp, #28]
   1d358:	ldr	r0, [r0]
   1d35c:	cmp	r0, #0
   1d360:	beq	1d3a0 <main@@Base+0x7160>
   1d364:	ldr	r5, [sp, #44]	; 0x2c
   1d368:	ldr	r8, [sp, #40]	; 0x28
   1d36c:	ldr	sl, [sp, #36]	; 0x24
   1d370:	mov	r0, r8
   1d374:	mov	r1, r4
   1d378:	mov	r2, r5
   1d37c:	mov	r3, #33	; 0x21
   1d380:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d384:	mov	r4, r0
   1d388:	ldr	r0, [sp, #52]	; 0x34
   1d38c:	cmp	r0, #0
   1d390:	beq	17308 <main@@Base+0x10c8>
   1d394:	ldr	r0, [r8]
   1d398:	mov	r1, #14
   1d39c:	b	19dc8 <main@@Base+0x3b88>
   1d3a0:	ldr	r0, [sp, #40]	; 0x28
   1d3a4:	ldr	r0, [r0]
   1d3a8:	bl	31ef0 <flatcc_builder_end_table@@Base>
   1d3ac:	cmp	r0, #0
   1d3b0:	str	r0, [sp, #52]	; 0x34
   1d3b4:	beq	1d364 <main@@Base+0x7124>
   1d3b8:	ldr	r5, [sp, #44]	; 0x2c
   1d3bc:	ldr	r8, [sp, #40]	; 0x28
   1d3c0:	ldr	sl, [sp, #36]	; 0x24
   1d3c4:	b	1d394 <main@@Base+0x7154>
   1d3c8:	bne	1d3d8 <main@@Base+0x7198>
   1d3cc:	ldrb	r0, [r4, #2]!
   1d3d0:	cmp	r0, #32
   1d3d4:	bhi	1d3e8 <main@@Base+0x71a8>
   1d3d8:	mov	r0, r8
   1d3dc:	mov	r2, r5
   1d3e0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d3e4:	mov	r4, r0
   1d3e8:	cmp	r7, r4
   1d3ec:	beq	1ea98 <main@@Base+0x8858>
   1d3f0:	ldr	r0, [r8]
   1d3f4:	mov	r1, #1
   1d3f8:	mov	r2, #1
   1d3fc:	mvn	r3, #0
   1d400:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   1d404:	cmp	r0, #0
   1d408:	bne	17308 <main@@Base+0x10c8>
   1d40c:	cmp	r4, r5
   1d410:	beq	1d458 <main@@Base+0x7218>
   1d414:	ldrb	r0, [r4]
   1d418:	cmp	r0, #91	; 0x5b
   1d41c:	bne	1d458 <main@@Base+0x7218>
   1d420:	add	r1, r4, #1
   1d424:	sub	r0, r5, r1
   1d428:	cmp	r0, #2
   1d42c:	blt	1ddb0 <main@@Base+0x7b70>
   1d430:	ldrb	r0, [r1]
   1d434:	cmp	r0, #32
   1d438:	bls	1dd98 <main@@Base+0x7b58>
   1d43c:	ldr	r5, [sp, #44]	; 0x2c
   1d440:	ldr	r8, [sp, #40]	; 0x28
   1d444:	mov	r4, r1
   1d448:	cmp	r4, r5
   1d44c:	bne	1ddc8 <main@@Base+0x7b88>
   1d450:	b	1de30 <main@@Base+0x7bf0>
   1d454:	andeq	r2, r4, r4, asr ip
   1d458:	mov	r0, r8
   1d45c:	mov	r1, r4
   1d460:	mov	r2, r5
   1d464:	mov	r3, #22
   1d468:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d46c:	mov	r4, r0
   1d470:	ldr	r0, [r8]
   1d474:	bl	32234 <flatcc_builder_end_vector@@Base>
   1d478:	cmp	r0, #0
   1d47c:	str	r0, [sp, #52]	; 0x34
   1d480:	beq	17308 <main@@Base+0x10c8>
   1d484:	ldr	r0, [r8]
   1d488:	mov	r1, #5
   1d48c:	b	19dc8 <main@@Base+0x3b88>
   1d490:	ldr	r5, [sp, #44]	; 0x2c
   1d494:	ldr	r8, [sp, #40]	; 0x28
   1d498:	bne	1d4a8 <main@@Base+0x7268>
   1d49c:	ldrb	r0, [r7, #2]!
   1d4a0:	cmp	r0, #32
   1d4a4:	bhi	1d4b8 <main@@Base+0x7278>
   1d4a8:	mov	r0, r8
   1d4ac:	mov	r2, r5
   1d4b0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d4b4:	mov	r7, r0
   1d4b8:	cmp	sl, r7
   1d4bc:	beq	1becc <main@@Base+0x5c8c>
   1d4c0:	mov	r6, #0
   1d4c4:	cmp	r7, r5
   1d4c8:	str	r6, [fp, #-52]	; 0xffffffcc
   1d4cc:	str	r6, [fp, #-56]	; 0xffffffc8
   1d4d0:	str	r6, [fp, #-60]	; 0xffffffc4
   1d4d4:	str	r6, [sp, #56]	; 0x38
   1d4d8:	beq	1d524 <main@@Base+0x72e4>
   1d4dc:	sub	r0, fp, #56	; 0x38
   1d4e0:	mov	r1, r7
   1d4e4:	mov	r2, r5
   1d4e8:	add	r3, sp, #56	; 0x38
   1d4ec:	str	r0, [sp]
   1d4f0:	mov	r0, r8
   1d4f4:	bl	38410 <flatcc_json_parser_integer@@Base>
   1d4f8:	cmp	r0, r7
   1d4fc:	beq	1d52c <main@@Base+0x72ec>
   1d500:	mov	r4, r0
   1d504:	ldr	r0, [sp, #56]	; 0x38
   1d508:	cmp	r0, #0
   1d50c:	beq	1d534 <main@@Base+0x72f4>
   1d510:	mov	r0, r8
   1d514:	mov	r1, r4
   1d518:	mov	r2, r5
   1d51c:	mov	r3, #8
   1d520:	b	1d558 <main@@Base+0x7318>
   1d524:	mov	r4, r5
   1d528:	b	1d560 <main@@Base+0x7320>
   1d52c:	mov	r4, r7
   1d530:	b	1d560 <main@@Base+0x7320>
   1d534:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d538:	cmp	r0, #0
   1d53c:	beq	1e074 <main@@Base+0x7e34>
   1d540:	ldr	r8, [sp, #40]	; 0x28
   1d544:	ldr	r5, [sp, #44]	; 0x2c
   1d548:	mov	r1, r4
   1d54c:	mov	r3, #7
   1d550:	mov	r0, r8
   1d554:	mov	r2, r5
   1d558:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d55c:	mov	r4, r0
   1d560:	ldr	sl, [sp, #36]	; 0x24
   1d564:	cmp	r7, r4
   1d568:	bne	1d5a8 <main@@Base+0x7368>
   1d56c:	sub	r0, fp, #60	; 0x3c
   1d570:	mov	r1, r7
   1d574:	mov	r2, r5
   1d578:	str	r0, [sp]
   1d57c:	mov	r0, r8
   1d580:	ldr	r3, [pc, #4040]	; 1e550 <main@@Base+0x8310>
   1d584:	add	r3, pc, r3
   1d588:	bl	25e28 <main@@Base+0xfbe8>
   1d58c:	mov	r4, r0
   1d590:	cmp	r0, r7
   1d594:	cmpne	r4, r5
   1d598:	beq	214b0 <main@@Base+0xb270>
   1d59c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1d5a0:	ldr	r8, [sp, #40]	; 0x28
   1d5a4:	ldr	sl, [sp, #36]	; 0x24
   1d5a8:	cmp	r6, #0
   1d5ac:	bne	1d5bc <main@@Base+0x737c>
   1d5b0:	ldrb	r0, [r8, #8]
   1d5b4:	tst	r0, #2
   1d5b8:	beq	1f71c <main@@Base+0x94dc>
   1d5bc:	ldr	r0, [r8]
   1d5c0:	mov	r1, #17
   1d5c4:	b	1eb6c <main@@Base+0x892c>
   1d5c8:	ldr	r5, [sp, #44]	; 0x2c
   1d5cc:	ldr	r8, [sp, #40]	; 0x28
   1d5d0:	bne	1d5e0 <main@@Base+0x73a0>
   1d5d4:	ldrb	r0, [r7, #2]!
   1d5d8:	cmp	r0, #32
   1d5dc:	bhi	1d5f0 <main@@Base+0x73b0>
   1d5e0:	mov	r0, r8
   1d5e4:	mov	r2, r5
   1d5e8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d5ec:	mov	r7, r0
   1d5f0:	cmp	sl, r7
   1d5f4:	beq	1bfc4 <main@@Base+0x5d84>
   1d5f8:	mov	r6, #0
   1d5fc:	cmp	r7, r5
   1d600:	str	r6, [fp, #-52]	; 0xffffffcc
   1d604:	str	r6, [fp, #-56]	; 0xffffffc8
   1d608:	str	r6, [sp, #60]	; 0x3c
   1d60c:	str	r6, [sp, #56]	; 0x38
   1d610:	str	r6, [fp, #-60]	; 0xffffffc4
   1d614:	beq	1d670 <main@@Base+0x7430>
   1d618:	sub	r0, fp, #56	; 0x38
   1d61c:	mov	r1, r7
   1d620:	mov	r2, r5
   1d624:	sub	r3, fp, #60	; 0x3c
   1d628:	str	r0, [sp]
   1d62c:	mov	r0, r8
   1d630:	bl	38410 <flatcc_json_parser_integer@@Base>
   1d634:	cmp	r0, r7
   1d638:	beq	1d67c <main@@Base+0x743c>
   1d63c:	mov	r4, r0
   1d640:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d644:	cmp	r0, #0
   1d648:	beq	1d68c <main@@Base+0x744c>
   1d64c:	mov	r0, r8
   1d650:	mov	r1, r4
   1d654:	mov	r2, r5
   1d658:	mov	r3, #8
   1d65c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d660:	mov	r4, r0
   1d664:	mov	r6, #0
   1d668:	mov	r9, #0
   1d66c:	b	1d69c <main@@Base+0x745c>
   1d670:	mov	r9, #0
   1d674:	mov	r4, r5
   1d678:	b	1d69c <main@@Base+0x745c>
   1d67c:	mov	r6, #0
   1d680:	mov	r9, #0
   1d684:	mov	r4, r7
   1d688:	b	1d69c <main@@Base+0x745c>
   1d68c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d690:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1d694:	str	r9, [sp, #60]	; 0x3c
   1d698:	str	r6, [sp, #56]	; 0x38
   1d69c:	ldr	sl, [sp, #36]	; 0x24
   1d6a0:	cmp	r7, r4
   1d6a4:	bne	1d6e8 <main@@Base+0x74a8>
   1d6a8:	add	r0, sp, #56	; 0x38
   1d6ac:	mov	r1, r7
   1d6b0:	mov	r2, r5
   1d6b4:	str	r0, [sp]
   1d6b8:	mov	r0, r8
   1d6bc:	ldr	r3, [pc, #3992]	; 1e65c <main@@Base+0x841c>
   1d6c0:	add	r3, pc, r3
   1d6c4:	bl	2602c <main@@Base+0xfdec>
   1d6c8:	mov	r4, r0
   1d6cc:	cmp	r0, r7
   1d6d0:	cmpne	r4, r5
   1d6d4:	beq	214b0 <main@@Base+0xb270>
   1d6d8:	ldr	r6, [sp, #56]	; 0x38
   1d6dc:	ldr	r9, [sp, #60]	; 0x3c
   1d6e0:	ldr	r8, [sp, #40]	; 0x28
   1d6e4:	ldr	sl, [sp, #36]	; 0x24
   1d6e8:	orrs	r0, r6, r9
   1d6ec:	bne	1d6fc <main@@Base+0x74bc>
   1d6f0:	ldrb	r0, [r8, #8]
   1d6f4:	tst	r0, #2
   1d6f8:	beq	1f71c <main@@Base+0x94dc>
   1d6fc:	ldr	r0, [r8]
   1d700:	mov	r1, #19
   1d704:	mov	r2, #8
   1d708:	mov	r3, #8
   1d70c:	bl	32964 <flatcc_builder_table_add@@Base>
   1d710:	cmp	r0, #0
   1d714:	beq	214b0 <main@@Base+0xb270>
   1d718:	stm	r0, {r6, r9}
   1d71c:	b	1f71c <main@@Base+0x94dc>
   1d720:	beq	1e240 <main@@Base+0x8000>
   1d724:	b	1e250 <main@@Base+0x8010>
   1d728:	ldr	r5, [sp, #44]	; 0x2c
   1d72c:	ldr	r8, [sp, #40]	; 0x28
   1d730:	ldr	sl, [sp, #36]	; 0x24
   1d734:	bne	1d744 <main@@Base+0x7504>
   1d738:	ldrb	r0, [r4, #2]!
   1d73c:	cmp	r0, #32
   1d740:	bhi	1d754 <main@@Base+0x7514>
   1d744:	mov	r0, r8
   1d748:	mov	r2, r5
   1d74c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d750:	mov	r4, r0
   1d754:	cmp	r7, r4
   1d758:	beq	1ea98 <main@@Base+0x8858>
   1d75c:	ldr	r0, [r8]
   1d760:	bl	31040 <flatcc_builder_start_offset_vector@@Base>
   1d764:	cmp	r0, #0
   1d768:	bne	17308 <main@@Base+0x10c8>
   1d76c:	cmp	r4, r5
   1d770:	beq	1d7a8 <main@@Base+0x7568>
   1d774:	ldrb	r0, [r4]
   1d778:	cmp	r0, #91	; 0x5b
   1d77c:	bne	1d7a8 <main@@Base+0x7568>
   1d780:	add	r1, r4, #1
   1d784:	sub	r0, r5, r1
   1d788:	cmp	r0, #2
   1d78c:	blt	1e0a0 <main@@Base+0x7e60>
   1d790:	ldrb	r0, [r1]
   1d794:	cmp	r0, #32
   1d798:	bls	1e088 <main@@Base+0x7e48>
   1d79c:	ldr	r5, [sp, #44]	; 0x2c
   1d7a0:	mov	r4, r1
   1d7a4:	b	1e0b0 <main@@Base+0x7e70>
   1d7a8:	mov	r0, r8
   1d7ac:	mov	r1, r4
   1d7b0:	mov	r2, r5
   1d7b4:	mov	r3, #22
   1d7b8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d7bc:	mov	r4, r0
   1d7c0:	ldr	r0, [r8]
   1d7c4:	bl	31228 <flatcc_builder_end_offset_vector@@Base>
   1d7c8:	cmp	r0, #0
   1d7cc:	str	r0, [sp, #52]	; 0x34
   1d7d0:	beq	17308 <main@@Base+0x10c8>
   1d7d4:	ldr	r0, [r8]
   1d7d8:	mov	r1, #10
   1d7dc:	b	19dc8 <main@@Base+0x3b88>
   1d7e0:	andeq	r2, r4, r8, asr #17
   1d7e4:	andeq	r7, r0, r0, lsr #19
   1d7e8:	ldr	r5, [sp, #44]	; 0x2c
   1d7ec:	ldr	r8, [sp, #40]	; 0x28
   1d7f0:	bne	1d804 <main@@Base+0x75c4>
   1d7f4:	mov	r7, r1
   1d7f8:	ldrb	r0, [r7, #1]!
   1d7fc:	cmp	r0, #32
   1d800:	bhi	1d814 <main@@Base+0x75d4>
   1d804:	mov	r0, r8
   1d808:	mov	r2, r5
   1d80c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d810:	mov	r7, r0
   1d814:	cmp	r7, r5
   1d818:	beq	1d854 <main@@Base+0x7614>
   1d81c:	ldrb	r0, [r7]
   1d820:	cmp	r0, #58	; 0x3a
   1d824:	bne	1d854 <main@@Base+0x7614>
   1d828:	add	r1, r7, #1
   1d82c:	sub	r0, r5, r1
   1d830:	cmp	r0, #2
   1d834:	blt	1f514 <main@@Base+0x92d4>
   1d838:	ldrb	r0, [r1]
   1d83c:	cmp	r0, #32
   1d840:	bls	1f4fc <main@@Base+0x92bc>
   1d844:	ldr	r5, [sp, #44]	; 0x2c
   1d848:	ldr	r8, [sp, #40]	; 0x28
   1d84c:	mov	r7, r1
   1d850:	b	1f524 <main@@Base+0x92e4>
   1d854:	mov	r0, r8
   1d858:	mov	r1, r7
   1d85c:	mov	r2, r5
   1d860:	mov	r3, #4
   1d864:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d868:	b	1f520 <main@@Base+0x92e0>
   1d86c:	ldr	r5, [sp, #44]	; 0x2c
   1d870:	ldr	r8, [sp, #40]	; 0x28
   1d874:	bne	1d888 <main@@Base+0x7648>
   1d878:	mov	r7, r1
   1d87c:	ldrb	r0, [r7, #1]!
   1d880:	cmp	r0, #32
   1d884:	bhi	1d898 <main@@Base+0x7658>
   1d888:	mov	r0, r8
   1d88c:	mov	r2, r5
   1d890:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d894:	mov	r7, r0
   1d898:	cmp	r7, r5
   1d89c:	beq	1d8d8 <main@@Base+0x7698>
   1d8a0:	ldrb	r0, [r7]
   1d8a4:	cmp	r0, #58	; 0x3a
   1d8a8:	bne	1d8d8 <main@@Base+0x7698>
   1d8ac:	add	r1, r7, #1
   1d8b0:	sub	r0, r5, r1
   1d8b4:	cmp	r0, #2
   1d8b8:	blt	1f66c <main@@Base+0x942c>
   1d8bc:	ldrb	r0, [r1]
   1d8c0:	cmp	r0, #32
   1d8c4:	bls	1f654 <main@@Base+0x9414>
   1d8c8:	ldr	r5, [sp, #44]	; 0x2c
   1d8cc:	ldr	r8, [sp, #40]	; 0x28
   1d8d0:	mov	r7, r1
   1d8d4:	b	1f67c <main@@Base+0x943c>
   1d8d8:	mov	r0, r8
   1d8dc:	mov	r1, r7
   1d8e0:	mov	r2, r5
   1d8e4:	mov	r3, #4
   1d8e8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d8ec:	b	1f678 <main@@Base+0x9438>
   1d8f0:	ldr	r5, [sp, #44]	; 0x2c
   1d8f4:	ldr	r8, [sp, #40]	; 0x28
   1d8f8:	ldr	sl, [sp, #36]	; 0x24
   1d8fc:	bne	1d90c <main@@Base+0x76cc>
   1d900:	ldrb	r0, [r7, #2]!
   1d904:	cmp	r0, #32
   1d908:	bhi	1d91c <main@@Base+0x76dc>
   1d90c:	mov	r0, r8
   1d910:	mov	r2, r5
   1d914:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1d918:	mov	r7, r0
   1d91c:	cmp	r4, r7
   1d920:	beq	1f708 <main@@Base+0x94c8>
   1d924:	mov	r6, #0
   1d928:	cmp	r7, r5
   1d92c:	str	r6, [fp, #-52]	; 0xffffffcc
   1d930:	str	r6, [fp, #-56]	; 0xffffffc8
   1d934:	str	r6, [fp, #-60]	; 0xffffffc4
   1d938:	str	r6, [sp, #56]	; 0x38
   1d93c:	beq	1d9a0 <main@@Base+0x7760>
   1d940:	sub	r0, fp, #56	; 0x38
   1d944:	mov	r1, r7
   1d948:	mov	r2, r5
   1d94c:	add	r3, sp, #56	; 0x38
   1d950:	str	r0, [sp]
   1d954:	mov	r0, r8
   1d958:	bl	38410 <flatcc_json_parser_integer@@Base>
   1d95c:	cmp	r0, r7
   1d960:	beq	1d9b0 <main@@Base+0x7770>
   1d964:	ldr	r2, [sp, #56]	; 0x38
   1d968:	mov	r4, r0
   1d96c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d970:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d974:	cmp	r2, #0
   1d978:	beq	1d9c0 <main@@Base+0x7780>
   1d97c:	subs	r2, r0, #-2147483647	; 0x80000001
   1d980:	sbcs	r1, r1, #0
   1d984:	bcc	1d9f0 <main@@Base+0x77b0>
   1d988:	ldr	r8, [sp, #40]	; 0x28
   1d98c:	ldr	r5, [sp, #44]	; 0x2c
   1d990:	mov	r1, r4
   1d994:	mov	r3, #8
   1d998:	b	1d9dc <main@@Base+0x779c>
   1d99c:	andeq	r2, r4, r8, ror #14
   1d9a0:	mov	r4, r5
   1d9a4:	cmp	r7, r4
   1d9a8:	bne	1eb50 <main@@Base+0x8910>
   1d9ac:	b	1eb14 <main@@Base+0x88d4>
   1d9b0:	mov	r4, r7
   1d9b4:	cmp	r7, r4
   1d9b8:	bne	1eb50 <main@@Base+0x8910>
   1d9bc:	b	1eb14 <main@@Base+0x88d4>
   1d9c0:	subs	r2, r0, #-2147483648	; 0x80000000
   1d9c4:	sbcs	r1, r1, #0
   1d9c8:	bcc	1eaf8 <main@@Base+0x88b8>
   1d9cc:	ldr	r8, [sp, #40]	; 0x28
   1d9d0:	ldr	r5, [sp, #44]	; 0x2c
   1d9d4:	mov	r1, r4
   1d9d8:	mov	r3, #7
   1d9dc:	mov	r0, r8
   1d9e0:	mov	r2, r5
   1d9e4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1d9e8:	mov	r4, r0
   1d9ec:	b	1eb08 <main@@Base+0x88c8>
   1d9f0:	rsb	r6, r0, #0
   1d9f4:	b	1eafc <main@@Base+0x88bc>
   1d9f8:	ldr	r5, [sp, #44]	; 0x2c
   1d9fc:	ldr	r8, [sp, #40]	; 0x28
   1da00:	ldr	sl, [sp, #36]	; 0x24
   1da04:	bne	1da18 <main@@Base+0x77d8>
   1da08:	ldrb	r0, [r4, #2]!
   1da0c:	cmp	r0, #32
   1da10:	mov	r7, r4
   1da14:	bhi	1a5e8 <main@@Base+0x43a8>
   1da18:	mov	r0, r8
   1da1c:	mov	r2, r5
   1da20:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1da24:	b	1a5e4 <main@@Base+0x43a4>
   1da28:	ldr	r5, [sp, #44]	; 0x2c
   1da2c:	ldr	r8, [sp, #40]	; 0x28
   1da30:	bne	1da40 <main@@Base+0x7800>
   1da34:	ldrb	r0, [r4, #2]!
   1da38:	cmp	r0, #32
   1da3c:	bhi	1da50 <main@@Base+0x7810>
   1da40:	mov	r0, r8
   1da44:	mov	r2, r5
   1da48:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1da4c:	mov	r4, r0
   1da50:	cmp	r4, r5
   1da54:	mov	r2, r5
   1da58:	beq	1dac0 <main@@Base+0x7880>
   1da5c:	ldrb	r0, [r4]
   1da60:	cmp	r0, #93	; 0x5d
   1da64:	bne	1dab4 <main@@Base+0x7874>
   1da68:	ldr	r5, [sp, #44]	; 0x2c
   1da6c:	ldr	r8, [sp, #40]	; 0x28
   1da70:	ldr	sl, [sp, #36]	; 0x24
   1da74:	add	r1, r4, #1
   1da78:	sub	r0, r5, r1
   1da7c:	cmp	r0, #2
   1da80:	blt	210fc <main@@Base+0xaebc>
   1da84:	ldrb	r0, [r1]
   1da88:	cmp	r0, #32
   1da8c:	bhi	1f058 <main@@Base+0x8e18>
   1da90:	ldr	r5, [sp, #44]	; 0x2c
   1da94:	ldr	r8, [sp, #40]	; 0x28
   1da98:	ldr	sl, [sp, #36]	; 0x24
   1da9c:	bne	210fc <main@@Base+0xaebc>
   1daa0:	ldrb	r0, [r4, #2]!
   1daa4:	cmp	r0, #32
   1daa8:	bhi	1d01c <main@@Base+0x6ddc>
   1daac:	b	210fc <main@@Base+0xaebc>
   1dab0:	andeq	r2, r4, r4, lsr #11
   1dab4:	ldr	r5, [sp, #44]	; 0x2c
   1dab8:	ldr	r8, [sp, #40]	; 0x28
   1dabc:	mov	r2, r4
   1dac0:	mov	r1, r2
   1dac4:	mov	r0, r8
   1dac8:	mov	r2, r5
   1dacc:	add	r3, sp, #52	; 0x34
   1dad0:	bl	172c8 <main@@Base+0x1088>
   1dad4:	mov	r4, r0
   1dad8:	ldr	r0, [sp, #52]	; 0x34
   1dadc:	cmp	r0, #0
   1dae0:	beq	17308 <main@@Base+0x10c8>
   1dae4:	ldr	r0, [r8]
   1dae8:	mov	r1, #1
   1daec:	bl	30798 <flatcc_builder_extend_offset_vector@@Base>
   1daf0:	cmp	r0, #0
   1daf4:	beq	17308 <main@@Base+0x10c8>
   1daf8:	ldr	r1, [sp, #52]	; 0x34
   1dafc:	str	r1, [r0]
   1db00:	sub	r0, r5, r4
   1db04:	cmp	r0, #2
   1db08:	blt	1db3c <main@@Base+0x78fc>
   1db0c:	ldrb	r0, [r4]
   1db10:	cmp	r0, #32
   1db14:	bls	1db28 <main@@Base+0x78e8>
   1db18:	mov	r2, r4
   1db1c:	cmp	r2, r5
   1db20:	bne	1db58 <main@@Base+0x7918>
   1db24:	b	1f01c <main@@Base+0x8ddc>
   1db28:	bne	1db3c <main@@Base+0x78fc>
   1db2c:	mov	r2, r4
   1db30:	ldrb	r0, [r2, #1]!
   1db34:	cmp	r0, #32
   1db38:	bhi	1db50 <main@@Base+0x7910>
   1db3c:	mov	r0, r8
   1db40:	mov	r1, r4
   1db44:	mov	r2, r5
   1db48:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1db4c:	mov	r2, r0
   1db50:	cmp	r2, r5
   1db54:	beq	1f01c <main@@Base+0x8ddc>
   1db58:	ldrb	r0, [r2]
   1db5c:	cmp	r0, #44	; 0x2c
   1db60:	bne	1f028 <main@@Base+0x8de8>
   1db64:	add	r1, r2, #1
   1db68:	sub	r0, r5, r1
   1db6c:	cmp	r0, #2
   1db70:	blt	1dba0 <main@@Base+0x7960>
   1db74:	ldrb	r0, [r1]
   1db78:	cmp	r0, #32
   1db7c:	bls	1db90 <main@@Base+0x7950>
   1db80:	mov	r2, r1
   1db84:	cmp	r2, r5
   1db88:	bne	1dbb8 <main@@Base+0x7978>
   1db8c:	b	1f074 <main@@Base+0x8e34>
   1db90:	bne	1dba0 <main@@Base+0x7960>
   1db94:	ldrb	r0, [r2, #2]!
   1db98:	cmp	r0, #32
   1db9c:	bhi	1dbb0 <main@@Base+0x7970>
   1dba0:	mov	r0, r8
   1dba4:	mov	r2, r5
   1dba8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1dbac:	mov	r2, r0
   1dbb0:	cmp	r2, r5
   1dbb4:	beq	1f074 <main@@Base+0x8e34>
   1dbb8:	ldrb	r0, [r2]
   1dbbc:	cmp	r0, #93	; 0x5d
   1dbc0:	bne	1dac0 <main@@Base+0x7880>
   1dbc4:	b	1f038 <main@@Base+0x8df8>
   1dbc8:	andeq	r2, r4, r8, lsr #10
   1dbcc:	ldr	r5, [sp, #44]	; 0x2c
   1dbd0:	ldr	r8, [sp, #40]	; 0x28
   1dbd4:	bne	1dbe4 <main@@Base+0x79a4>
   1dbd8:	ldrb	r0, [r4, #2]!
   1dbdc:	cmp	r0, #32
   1dbe0:	bhi	1dbf4 <main@@Base+0x79b4>
   1dbe4:	mov	r0, r8
   1dbe8:	mov	r2, r5
   1dbec:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1dbf0:	mov	r4, r0
   1dbf4:	cmp	sl, r4
   1dbf8:	beq	196cc <main@@Base+0x348c>
   1dbfc:	ldr	r0, [r8]
   1dc00:	mov	r1, #8
   1dc04:	mov	r2, #8
   1dc08:	mvn	r3, #-536870912	; 0xe0000000
   1dc0c:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   1dc10:	cmp	r0, #0
   1dc14:	bne	17308 <main@@Base+0x10c8>
   1dc18:	cmp	r4, r5
   1dc1c:	beq	1dc5c <main@@Base+0x7a1c>
   1dc20:	ldrb	r0, [r4]
   1dc24:	cmp	r0, #91	; 0x5b
   1dc28:	bne	1dc5c <main@@Base+0x7a1c>
   1dc2c:	add	r1, r4, #1
   1dc30:	sub	r0, r5, r1
   1dc34:	cmp	r0, #2
   1dc38:	blt	1eba0 <main@@Base+0x8960>
   1dc3c:	ldrb	r0, [r1]
   1dc40:	cmp	r0, #32
   1dc44:	bls	1eb88 <main@@Base+0x8948>
   1dc48:	ldr	r5, [sp, #44]	; 0x2c
   1dc4c:	mov	r4, r1
   1dc50:	cmp	r4, r5
   1dc54:	bne	1ebb8 <main@@Base+0x8978>
   1dc58:	b	1ec1c <main@@Base+0x89dc>
   1dc5c:	mov	r0, r8
   1dc60:	mov	r1, r4
   1dc64:	mov	r2, r5
   1dc68:	mov	r3, #22
   1dc6c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1dc70:	ldr	sl, [sp, #36]	; 0x24
   1dc74:	mov	r4, r0
   1dc78:	ldr	r0, [r8]
   1dc7c:	bl	32234 <flatcc_builder_end_vector@@Base>
   1dc80:	cmp	r0, #0
   1dc84:	str	r0, [sp, #52]	; 0x34
   1dc88:	beq	17308 <main@@Base+0x10c8>
   1dc8c:	ldr	r0, [r8]
   1dc90:	mov	r1, #32
   1dc94:	b	19dc8 <main@@Base+0x3b88>
   1dc98:	ldr	r5, [sp, #44]	; 0x2c
   1dc9c:	ldr	r8, [sp, #40]	; 0x28
   1dca0:	ldr	sl, [sp, #36]	; 0x24
   1dca4:	bne	1dcb4 <main@@Base+0x7a74>
   1dca8:	ldrb	r0, [r4, #2]!
   1dcac:	cmp	r0, #32
   1dcb0:	bhi	1dcc4 <main@@Base+0x7a84>
   1dcb4:	mov	r0, r8
   1dcb8:	mov	r2, r5
   1dcbc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1dcc0:	mov	r4, r0
   1dcc4:	cmp	r7, r4
   1dcc8:	beq	1ea98 <main@@Base+0x8858>
   1dccc:	cmp	r4, r5
   1dcd0:	beq	1dd30 <main@@Base+0x7af0>
   1dcd4:	ldrb	r0, [r4]
   1dcd8:	cmp	r0, #91	; 0x5b
   1dcdc:	bne	1dd30 <main@@Base+0x7af0>
   1dce0:	ldr	r0, [r8]
   1dce4:	mov	r1, #1
   1dce8:	mov	r2, #1
   1dcec:	mvn	r3, #0
   1dcf0:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   1dcf4:	cmp	r0, #0
   1dcf8:	bne	214b0 <main@@Base+0xb270>
   1dcfc:	ldrb	r0, [r4]
   1dd00:	cmp	r0, #91	; 0x5b
   1dd04:	bne	1dd7c <main@@Base+0x7b3c>
   1dd08:	ldr	r0, [sp, #44]	; 0x2c
   1dd0c:	add	r1, r4, #1
   1dd10:	sub	r0, r0, r1
   1dd14:	cmp	r0, #2
   1dd18:	blt	20d24 <main@@Base+0xaae4>
   1dd1c:	ldrb	r0, [r1]
   1dd20:	cmp	r0, #32
   1dd24:	bls	20d14 <main@@Base+0xaad4>
   1dd28:	mov	r4, r1
   1dd2c:	b	20d34 <main@@Base+0xaaf4>
   1dd30:	ldr	r0, [r8]
   1dd34:	mov	r1, #0
   1dd38:	mov	r2, #0
   1dd3c:	mov	r3, #0
   1dd40:	bl	2fee8 <flatcc_builder_start_buffer@@Base>
   1dd44:	cmp	r0, #0
   1dd48:	bne	17308 <main@@Base+0x10c8>
   1dd4c:	mov	r0, r8
   1dd50:	mov	r1, r4
   1dd54:	mov	r2, r5
   1dd58:	add	r3, sp, #52	; 0x34
   1dd5c:	bl	172c8 <main@@Base+0x1088>
   1dd60:	ldr	r1, [sp, #52]	; 0x34
   1dd64:	mov	r4, r0
   1dd68:	cmp	r1, #0
   1dd6c:	beq	17308 <main@@Base+0x10c8>
   1dd70:	ldr	r0, [r8]
   1dd74:	bl	300e8 <flatcc_builder_end_buffer@@Base>
   1dd78:	b	21284 <main@@Base+0xb044>
   1dd7c:	ldr	r0, [sp, #40]	; 0x28
   1dd80:	ldr	r2, [sp, #44]	; 0x2c
   1dd84:	mov	r1, r4
   1dd88:	mov	r3, #22
   1dd8c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1dd90:	b	21270 <main@@Base+0xb030>
   1dd94:	andeq	r2, r4, r0, ror r3
   1dd98:	ldr	r5, [sp, #44]	; 0x2c
   1dd9c:	ldr	r8, [sp, #40]	; 0x28
   1dda0:	bne	1ddb0 <main@@Base+0x7b70>
   1dda4:	ldrb	r0, [r4, #2]!
   1dda8:	cmp	r0, #32
   1ddac:	bhi	1ddc0 <main@@Base+0x7b80>
   1ddb0:	mov	r0, r8
   1ddb4:	mov	r2, r5
   1ddb8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ddbc:	mov	r4, r0
   1ddc0:	cmp	r4, r5
   1ddc4:	beq	1de30 <main@@Base+0x7bf0>
   1ddc8:	ldrb	r0, [r4]
   1ddcc:	cmp	r0, #93	; 0x5d
   1ddd0:	bne	1de28 <main@@Base+0x7be8>
   1ddd4:	ldr	r5, [sp, #44]	; 0x2c
   1ddd8:	ldr	r8, [sp, #40]	; 0x28
   1dddc:	ldr	sl, [sp, #36]	; 0x24
   1dde0:	add	r1, r4, #1
   1dde4:	sub	r0, r5, r1
   1dde8:	cmp	r0, #2
   1ddec:	blt	1de18 <main@@Base+0x7bd8>
   1ddf0:	ldrb	r0, [r1]
   1ddf4:	cmp	r0, #32
   1ddf8:	bhi	1f28c <main@@Base+0x904c>
   1ddfc:	ldr	r5, [sp, #44]	; 0x2c
   1de00:	ldr	r8, [sp, #40]	; 0x28
   1de04:	ldr	sl, [sp, #36]	; 0x24
   1de08:	bne	1de18 <main@@Base+0x7bd8>
   1de0c:	ldrb	r0, [r4, #2]!
   1de10:	cmp	r0, #32
   1de14:	bhi	1d470 <main@@Base+0x7230>
   1de18:	mov	r0, r8
   1de1c:	mov	r2, r5
   1de20:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1de24:	b	1d46c <main@@Base+0x722c>
   1de28:	ldr	r8, [sp, #40]	; 0x28
   1de2c:	mov	r5, r4
   1de30:	mov	r0, #0
   1de34:	mov	r1, #1
   1de38:	strb	r0, [fp, #-60]	; 0xffffffc4
   1de3c:	ldr	r0, [r8]
   1de40:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1de44:	cmp	r0, #0
   1de48:	beq	21480 <main@@Base+0xb240>
   1de4c:	mov	r4, r5
   1de50:	ldr	r5, [sp, #44]	; 0x2c
   1de54:	ldr	r8, [sp, #40]	; 0x28
   1de58:	mov	r7, r0
   1de5c:	mov	r6, #0
   1de60:	cmp	r4, r5
   1de64:	str	r6, [fp, #-52]	; 0xffffffcc
   1de68:	str	r6, [fp, #-56]	; 0xffffffc8
   1de6c:	strb	r6, [fp, #-60]	; 0xffffffc4
   1de70:	str	r6, [sp, #56]	; 0x38
   1de74:	beq	1debc <main@@Base+0x7c7c>
   1de78:	sub	r0, fp, #56	; 0x38
   1de7c:	mov	r1, r4
   1de80:	mov	r2, r5
   1de84:	add	r3, sp, #56	; 0x38
   1de88:	str	r0, [sp]
   1de8c:	mov	r0, r8
   1de90:	bl	38410 <flatcc_json_parser_integer@@Base>
   1de94:	cmp	r0, r4
   1de98:	beq	1decc <main@@Base+0x7c8c>
   1de9c:	mov	r1, r0
   1dea0:	ldr	r0, [sp, #56]	; 0x38
   1dea4:	cmp	r0, #0
   1dea8:	beq	1dedc <main@@Base+0x7c9c>
   1deac:	mov	r0, r8
   1deb0:	mov	r2, r5
   1deb4:	mov	r3, #8
   1deb8:	b	1df04 <main@@Base+0x7cc4>
   1debc:	mov	r1, r5
   1dec0:	cmp	r4, r1
   1dec4:	bne	1df4c <main@@Base+0x7d0c>
   1dec8:	b	1df14 <main@@Base+0x7cd4>
   1decc:	mov	r1, r4
   1ded0:	cmp	r4, r1
   1ded4:	bne	1df4c <main@@Base+0x7d0c>
   1ded8:	b	1df14 <main@@Base+0x7cd4>
   1dedc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dee0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1dee4:	subs	r3, r0, #256	; 0x100
   1dee8:	sbcs	r2, r2, #0
   1deec:	bcc	1e034 <main@@Base+0x7df4>
   1def0:	ldr	r8, [sp, #40]	; 0x28
   1def4:	ldr	r5, [sp, #44]	; 0x2c
   1def8:	mov	r3, #7
   1defc:	mov	r0, r8
   1df00:	mov	r2, r5
   1df04:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1df08:	mov	r1, r0
   1df0c:	cmp	r4, r1
   1df10:	bne	1df4c <main@@Base+0x7d0c>
   1df14:	sub	r0, fp, #60	; 0x3c
   1df18:	mov	r1, r4
   1df1c:	mov	r2, r5
   1df20:	str	r0, [sp]
   1df24:	mov	r0, r8
   1df28:	ldr	r3, [pc, #4084]	; 1ef24 <main@@Base+0x8ce4>
   1df2c:	add	r3, pc, r3
   1df30:	bl	23614 <main@@Base+0xd3d4>
   1df34:	mov	r1, r0
   1df38:	cmp	r0, r4
   1df3c:	beq	2148c <main@@Base+0xb24c>
   1df40:	cmp	r1, r5
   1df44:	beq	2148c <main@@Base+0xb24c>
   1df48:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1df4c:	sub	r0, r5, r1
   1df50:	strb	r6, [r7]
   1df54:	cmp	r0, #2
   1df58:	blt	1df8c <main@@Base+0x7d4c>
   1df5c:	ldrb	r0, [r1]
   1df60:	cmp	r0, #32
   1df64:	bls	1df78 <main@@Base+0x7d38>
   1df68:	mov	r4, r1
   1df6c:	cmp	r4, r5
   1df70:	bne	1dfa4 <main@@Base+0x7d64>
   1df74:	b	1f06c <main@@Base+0x8e2c>
   1df78:	bne	1df8c <main@@Base+0x7d4c>
   1df7c:	mov	r4, r1
   1df80:	ldrb	r0, [r4, #1]!
   1df84:	cmp	r0, #32
   1df88:	bhi	1df9c <main@@Base+0x7d5c>
   1df8c:	mov	r0, r8
   1df90:	mov	r2, r5
   1df94:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1df98:	mov	r4, r0
   1df9c:	cmp	r4, r5
   1dfa0:	beq	1f06c <main@@Base+0x8e2c>
   1dfa4:	ldrb	r0, [r4]
   1dfa8:	cmp	r0, #44	; 0x2c
   1dfac:	bne	1f080 <main@@Base+0x8e40>
   1dfb0:	add	r1, r4, #1
   1dfb4:	sub	r0, r5, r1
   1dfb8:	cmp	r0, #2
   1dfbc:	blt	1dfec <main@@Base+0x7dac>
   1dfc0:	ldrb	r0, [r1]
   1dfc4:	cmp	r0, #32
   1dfc8:	bls	1dfdc <main@@Base+0x7d9c>
   1dfcc:	mov	r4, r1
   1dfd0:	cmp	r4, r5
   1dfd4:	bne	1e004 <main@@Base+0x7dc4>
   1dfd8:	b	1f0a0 <main@@Base+0x8e60>
   1dfdc:	bne	1dfec <main@@Base+0x7dac>
   1dfe0:	ldrb	r0, [r4, #2]!
   1dfe4:	cmp	r0, #32
   1dfe8:	bhi	1dffc <main@@Base+0x7dbc>
   1dfec:	mov	r0, r8
   1dff0:	mov	r2, r5
   1dff4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1dff8:	mov	r4, r0
   1dffc:	cmp	r4, r5
   1e000:	beq	1f0a0 <main@@Base+0x8e60>
   1e004:	ldrb	r0, [r4]
   1e008:	cmp	r0, #93	; 0x5d
   1e00c:	beq	1f270 <main@@Base+0x9030>
   1e010:	mov	r0, #0
   1e014:	mov	r1, #1
   1e018:	strb	r0, [fp, #-60]	; 0xffffffc4
   1e01c:	ldr	r0, [r8]
   1e020:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1e024:	mov	r7, r0
   1e028:	cmp	r0, #0
   1e02c:	bne	1de5c <main@@Base+0x7c1c>
   1e030:	b	17308 <main@@Base+0x10c8>
   1e034:	ldr	r5, [sp, #44]	; 0x2c
   1e038:	ldr	r8, [sp, #40]	; 0x28
   1e03c:	mov	r6, r0
   1e040:	strb	r0, [fp, #-60]	; 0xffffffc4
   1e044:	cmp	r4, r1
   1e048:	bne	1df4c <main@@Base+0x7d0c>
   1e04c:	b	1df14 <main@@Base+0x7cd4>
   1e050:	ldr	r8, [sp, #40]	; 0x28
   1e054:	ldr	r5, [sp, #44]	; 0x2c
   1e058:	mov	r1, r4
   1e05c:	mov	r3, #9
   1e060:	mov	r0, r8
   1e064:	mov	r2, r5
   1e068:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1e06c:	ldr	sl, [sp, #36]	; 0x24
   1e070:	b	1abb4 <main@@Base+0x4974>
   1e074:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e078:	ldr	r5, [sp, #44]	; 0x2c
   1e07c:	ldr	r8, [sp, #40]	; 0x28
   1e080:	str	r6, [fp, #-60]	; 0xffffffc4
   1e084:	b	1d560 <main@@Base+0x7320>
   1e088:	ldr	r5, [sp, #44]	; 0x2c
   1e08c:	ldr	r8, [sp, #40]	; 0x28
   1e090:	bne	1e0a0 <main@@Base+0x7e60>
   1e094:	ldrb	r0, [r4, #2]!
   1e098:	cmp	r0, #32
   1e09c:	bhi	1e0b0 <main@@Base+0x7e70>
   1e0a0:	mov	r0, r8
   1e0a4:	mov	r2, r5
   1e0a8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e0ac:	mov	r4, r0
   1e0b0:	cmp	r4, r5
   1e0b4:	mov	r2, r5
   1e0b8:	beq	1e114 <main@@Base+0x7ed4>
   1e0bc:	ldrb	r0, [r4]
   1e0c0:	cmp	r0, #93	; 0x5d
   1e0c4:	bne	1e110 <main@@Base+0x7ed0>
   1e0c8:	ldr	r5, [sp, #44]	; 0x2c
   1e0cc:	ldr	r8, [sp, #40]	; 0x28
   1e0d0:	ldr	sl, [sp, #36]	; 0x24
   1e0d4:	add	r1, r4, #1
   1e0d8:	sub	r0, r5, r1
   1e0dc:	cmp	r0, #2
   1e0e0:	blt	212c0 <main@@Base+0xb080>
   1e0e4:	ldrb	r0, [r1]
   1e0e8:	cmp	r0, #32
   1e0ec:	bhi	20244 <main@@Base+0xa004>
   1e0f0:	ldr	r5, [sp, #44]	; 0x2c
   1e0f4:	ldr	r8, [sp, #40]	; 0x28
   1e0f8:	ldr	sl, [sp, #36]	; 0x24
   1e0fc:	bne	212c0 <main@@Base+0xb080>
   1e100:	ldrb	r0, [r4, #2]!
   1e104:	cmp	r0, #32
   1e108:	bhi	1d7c0 <main@@Base+0x7580>
   1e10c:	b	212c0 <main@@Base+0xb080>
   1e110:	mov	r2, r4
   1e114:	ldr	r5, [sp, #44]	; 0x2c
   1e118:	ldr	r8, [sp, #40]	; 0x28
   1e11c:	mov	r1, r2
   1e120:	mov	r0, r8
   1e124:	mov	r2, r5
   1e128:	add	r3, sp, #52	; 0x34
   1e12c:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   1e130:	mov	r4, r0
   1e134:	ldr	r0, [sp, #52]	; 0x34
   1e138:	cmp	r0, #0
   1e13c:	beq	17308 <main@@Base+0x10c8>
   1e140:	ldr	r0, [r8]
   1e144:	mov	r1, #1
   1e148:	bl	30798 <flatcc_builder_extend_offset_vector@@Base>
   1e14c:	cmp	r0, #0
   1e150:	beq	17308 <main@@Base+0x10c8>
   1e154:	ldr	r1, [sp, #52]	; 0x34
   1e158:	str	r1, [r0]
   1e15c:	sub	r0, r5, r4
   1e160:	cmp	r0, #2
   1e164:	blt	1e198 <main@@Base+0x7f58>
   1e168:	ldrb	r0, [r4]
   1e16c:	cmp	r0, #32
   1e170:	bls	1e184 <main@@Base+0x7f44>
   1e174:	mov	r2, r4
   1e178:	cmp	r2, r5
   1e17c:	bne	1e1b4 <main@@Base+0x7f74>
   1e180:	b	1f8b0 <main@@Base+0x9670>
   1e184:	bne	1e198 <main@@Base+0x7f58>
   1e188:	mov	r2, r4
   1e18c:	ldrb	r0, [r2, #1]!
   1e190:	cmp	r0, #32
   1e194:	bhi	1e1ac <main@@Base+0x7f6c>
   1e198:	mov	r0, r8
   1e19c:	mov	r1, r4
   1e1a0:	mov	r2, r5
   1e1a4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e1a8:	mov	r2, r0
   1e1ac:	cmp	r2, r5
   1e1b0:	beq	1f8b0 <main@@Base+0x9670>
   1e1b4:	ldrb	r0, [r2]
   1e1b8:	cmp	r0, #44	; 0x2c
   1e1bc:	bne	20214 <main@@Base+0x9fd4>
   1e1c0:	add	r1, r2, #1
   1e1c4:	sub	r0, r5, r1
   1e1c8:	cmp	r0, #2
   1e1cc:	blt	1e1fc <main@@Base+0x7fbc>
   1e1d0:	ldrb	r0, [r1]
   1e1d4:	cmp	r0, #32
   1e1d8:	bls	1e1ec <main@@Base+0x7fac>
   1e1dc:	mov	r2, r1
   1e1e0:	cmp	r2, r5
   1e1e4:	bne	1e214 <main@@Base+0x7fd4>
   1e1e8:	b	20284 <main@@Base+0xa044>
   1e1ec:	bne	1e1fc <main@@Base+0x7fbc>
   1e1f0:	ldrb	r0, [r2, #2]!
   1e1f4:	cmp	r0, #32
   1e1f8:	bhi	1e20c <main@@Base+0x7fcc>
   1e1fc:	mov	r0, r8
   1e200:	mov	r2, r5
   1e204:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e208:	mov	r2, r0
   1e20c:	cmp	r2, r5
   1e210:	beq	20284 <main@@Base+0xa044>
   1e214:	ldrb	r0, [r2]
   1e218:	cmp	r0, #93	; 0x5d
   1e21c:	bne	1e11c <main@@Base+0x7edc>
   1e220:	b	20224 <main@@Base+0x9fe4>
   1e224:	ldr	sl, [sp, #36]	; 0x24
   1e228:	mov	r4, r5
   1e22c:	b	1c8a4 <main@@Base+0x6664>
   1e230:	ldr	r5, [sp, #44]	; 0x2c
   1e234:	ldr	r8, [sp, #40]	; 0x28
   1e238:	ldr	sl, [sp, #36]	; 0x24
   1e23c:	bne	1e250 <main@@Base+0x8010>
   1e240:	ldrb	r0, [r2, #2]!
   1e244:	cmp	r0, #32
   1e248:	mov	r4, r2
   1e24c:	bhi	1f71c <main@@Base+0x94dc>
   1e250:	mov	r0, r8
   1e254:	mov	r2, r5
   1e258:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e25c:	b	1f718 <main@@Base+0x94d8>
   1e260:	cmp	r0, #93	; 0x5d
   1e264:	bne	20258 <main@@Base+0xa018>
   1e268:	ldr	r5, [sp, #44]	; 0x2c
   1e26c:	ldr	r8, [sp, #40]	; 0x28
   1e270:	add	r1, r2, #1
   1e274:	sub	r0, r5, r1
   1e278:	cmp	r0, #2
   1e27c:	ldr	sl, [sp, #36]	; 0x24
   1e280:	blt	20fc0 <main@@Base+0xad80>
   1e284:	ldrb	r0, [r1]
   1e288:	cmp	r0, #32
   1e28c:	bls	20fa0 <main@@Base+0xad60>
   1e290:	ldr	r5, [sp, #44]	; 0x2c
   1e294:	ldr	r8, [sp, #40]	; 0x28
   1e298:	ldr	sl, [sp, #36]	; 0x24
   1e29c:	mov	r4, r1
   1e2a0:	b	1c8a4 <main@@Base+0x6664>
   1e2a4:	mov	r0, r8
   1e2a8:	mov	r1, r5
   1e2ac:	b	20268 <main@@Base+0xa028>
   1e2b0:	ldr	r5, [sp, #44]	; 0x2c
   1e2b4:	ldr	r8, [sp, #40]	; 0x28
   1e2b8:	bne	1e2c8 <main@@Base+0x8088>
   1e2bc:	ldrb	r0, [r4, #2]!
   1e2c0:	cmp	r0, #32
   1e2c4:	bhi	1e2d8 <main@@Base+0x8098>
   1e2c8:	mov	r0, r8
   1e2cc:	mov	r2, r5
   1e2d0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e2d4:	mov	r4, r0
   1e2d8:	cmp	r4, r5
   1e2dc:	mov	r2, r5
   1e2e0:	beq	1e33c <main@@Base+0x80fc>
   1e2e4:	ldrb	r0, [r4]
   1e2e8:	cmp	r0, #125	; 0x7d
   1e2ec:	bne	1e338 <main@@Base+0x80f8>
   1e2f0:	ldr	r5, [sp, #44]	; 0x2c
   1e2f4:	ldr	r8, [sp, #40]	; 0x28
   1e2f8:	ldr	sl, [sp, #36]	; 0x24
   1e2fc:	add	r1, r4, #1
   1e300:	sub	r0, r5, r1
   1e304:	cmp	r0, #2
   1e308:	blt	21234 <main@@Base+0xaff4>
   1e30c:	ldrb	r0, [r1]
   1e310:	cmp	r0, #32
   1e314:	bhi	1f4dc <main@@Base+0x929c>
   1e318:	ldr	r5, [sp, #44]	; 0x2c
   1e31c:	ldr	r8, [sp, #40]	; 0x28
   1e320:	ldr	sl, [sp, #36]	; 0x24
   1e324:	bne	21234 <main@@Base+0xaff4>
   1e328:	ldrb	r0, [r4, #2]!
   1e32c:	cmp	r0, #32
   1e330:	bhi	1c744 <main@@Base+0x6504>
   1e334:	b	21234 <main@@Base+0xaff4>
   1e338:	mov	r2, r4
   1e33c:	ldr	r5, [sp, #44]	; 0x2c
   1e340:	ldr	r8, [sp, #40]	; 0x28
   1e344:	cmp	r2, r5
   1e348:	mov	r9, r5
   1e34c:	beq	1e3a0 <main@@Base+0x8160>
   1e350:	ldrb	r0, [r2]
   1e354:	cmp	r0, #46	; 0x2e
   1e358:	beq	1e374 <main@@Base+0x8134>
   1e35c:	cmp	r0, #34	; 0x22
   1e360:	bne	1e390 <main@@Base+0x8150>
   1e364:	ldr	r0, [sp, #32]
   1e368:	mov	r1, #0
   1e36c:	add	r9, r2, #1
   1e370:	b	1e39c <main@@Base+0x815c>
   1e374:	mov	r1, r2
   1e378:	mov	r0, r8
   1e37c:	mov	r2, r5
   1e380:	mov	r3, #5
   1e384:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1e388:	mov	r9, r0
   1e38c:	b	1e3a0 <main@@Base+0x8160>
   1e390:	ldr	r0, [sp, #32]
   1e394:	mov	r1, #1
   1e398:	mov	r9, r2
   1e39c:	str	r1, [r0]
   1e3a0:	sub	lr, r5, r9
   1e3a4:	mov	r1, #8
   1e3a8:	cmp	lr, #8
   1e3ac:	movcc	r1, lr
   1e3b0:	and	r1, r1, #15
   1e3b4:	sub	r2, r1, #1
   1e3b8:	cmp	r2, #7
   1e3bc:	bhi	1e544 <main@@Base+0x8304>
   1e3c0:	add	r0, pc, #36	; 0x24
   1e3c4:	mov	r1, #0
   1e3c8:	mov	ip, #0
   1e3cc:	mov	r8, #0
   1e3d0:	mov	r7, #0
   1e3d4:	mov	r3, #0
   1e3d8:	mov	r6, #0
   1e3dc:	mov	r4, #0
   1e3e0:	ldr	r5, [r0, r2, lsl #2]
   1e3e4:	mov	r2, #0
   1e3e8:	add	pc, r0, r5
   1e3ec:	andeq	r0, r0, r4, rrx
   1e3f0:	andeq	r0, r0, ip, asr r0
   1e3f4:	andeq	r0, r0, r4, asr r0
   1e3f8:	andeq	r0, r0, ip, asr #32
   1e3fc:	andeq	r0, r0, r0, asr #32
   1e400:	andeq	r0, r0, r4, lsr r0
   1e404:	andeq	r0, r0, r4, lsr #32
   1e408:	andeq	r0, r0, r0, lsr #32
   1e40c:	ldrb	ip, [r9, #7]
   1e410:	ldrb	r0, [r9, #6]
   1e414:	mov	r8, r1
   1e418:	orr	r0, ip, r0, lsl #8
   1e41c:	mov	r1, r0
   1e420:	ldrb	r0, [r9, #5]
   1e424:	mov	r7, r8
   1e428:	orr	r1, r1, r0, lsl #16
   1e42c:	ldrb	r0, [r9, #4]
   1e430:	mov	r3, r7
   1e434:	orr	r1, r1, r0, lsl #24
   1e438:	ldrb	r0, [r9, #3]
   1e43c:	orr	r6, r0, r3
   1e440:	ldrb	r0, [r9, #2]
   1e444:	orr	r4, r6, r0, lsl #8
   1e448:	ldrb	r0, [r9, #1]
   1e44c:	orr	r2, r4, r0, lsl #16
   1e450:	ldrb	r0, [r9]
   1e454:	orr	r2, r2, r0, lsl #24
   1e458:	movw	r0, #0
   1e45c:	movt	r0, #25956	; 0x6564
   1e460:	subs	r0, r1, r0
   1e464:	movw	r0, #29556	; 0x7374
   1e468:	movt	r0, #28261	; 0x6e65
   1e46c:	sbcs	r0, r2, r0
   1e470:	bcs	1e4d4 <main@@Base+0x8294>
   1e474:	ldr	r5, [sp, #44]	; 0x2c
   1e478:	ldr	r8, [sp, #40]	; 0x28
   1e47c:	movw	r0, #29793	; 0x7461
   1e480:	movt	r0, #25697	; 0x6461
   1e484:	teq	r2, r0
   1e488:	bne	1e544 <main@@Base+0x8304>
   1e48c:	cmp	lr, #5
   1e490:	mov	r1, r9
   1e494:	blt	1e810 <main@@Base+0x85d0>
   1e498:	ldr	r1, [sp, #32]
   1e49c:	mov	r2, r9
   1e4a0:	ldrb	r0, [r2, #4]!
   1e4a4:	ldr	r1, [r1]
   1e4a8:	cmp	r1, #0
   1e4ac:	beq	1e5c0 <main@@Base+0x8380>
   1e4b0:	cmp	r0, #33	; 0x21
   1e4b4:	bcc	1e4c4 <main@@Base+0x8284>
   1e4b8:	cmp	r0, #58	; 0x3a
   1e4bc:	mov	r1, r9
   1e4c0:	bne	1e810 <main@@Base+0x85d0>
   1e4c4:	ldr	r0, [sp, #32]
   1e4c8:	mov	r1, #0
   1e4cc:	str	r1, [r0]
   1e4d0:	b	1e5d0 <main@@Base+0x8390>
   1e4d4:	movw	r0, #29292	; 0x726c
   1e4d8:	lsr	r3, r1, #8
   1e4dc:	movw	r7, #29793	; 0x7461
   1e4e0:	movt	r0, #117	; 0x75
   1e4e4:	orr	r3, r3, r2, lsl #24
   1e4e8:	movt	r7, #25697	; 0x6461
   1e4ec:	eor	r0, r0, r2, lsr #8
   1e4f0:	eor	r3, r3, r7
   1e4f4:	orrs	r0, r3, r0
   1e4f8:	bne	1e554 <main@@Base+0x8314>
   1e4fc:	cmp	lr, #8
   1e500:	mov	r1, r9
   1e504:	blt	1e870 <main@@Base+0x8630>
   1e508:	ldr	r1, [sp, #32]
   1e50c:	mov	r2, r9
   1e510:	ldrb	r0, [r2, #7]!
   1e514:	ldr	r1, [r1]
   1e518:	cmp	r1, #0
   1e51c:	beq	1e5f4 <main@@Base+0x83b4>
   1e520:	cmp	r0, #33	; 0x21
   1e524:	bcc	1e534 <main@@Base+0x82f4>
   1e528:	cmp	r0, #58	; 0x3a
   1e52c:	mov	r1, r9
   1e530:	bne	1e870 <main@@Base+0x8630>
   1e534:	ldr	r0, [sp, #32]
   1e538:	mov	r1, #0
   1e53c:	str	r1, [r0]
   1e540:	b	1e604 <main@@Base+0x83c4>
   1e544:	mov	r0, r8
   1e548:	mov	r1, r9
   1e54c:	b	1e93c <main@@Base+0x86fc>
   1e550:			; <UNDEFINED> instruction: 0x00041bbc
   1e554:	movw	r0, #29556	; 0x7374
   1e558:	bfc	r1, #0, #16
   1e55c:	movt	r0, #28261	; 0x6e65
   1e560:	eor	r0, r2, r0
   1e564:	movw	r2, #0
   1e568:	movt	r2, #25956	; 0x6564
   1e56c:	eor	r1, r1, r2
   1e570:	orrs	r0, r1, r0
   1e574:	bne	1e92c <main@@Base+0x86ec>
   1e578:	cmp	lr, #7
   1e57c:	mov	r1, r9
   1e580:	blt	1e8d0 <main@@Base+0x8690>
   1e584:	ldr	r1, [sp, #32]
   1e588:	mov	r2, r9
   1e58c:	ldrb	r0, [r2, #6]!
   1e590:	ldr	r1, [r1]
   1e594:	cmp	r1, #0
   1e598:	beq	1e628 <main@@Base+0x83e8>
   1e59c:	cmp	r0, #33	; 0x21
   1e5a0:	bcc	1e5b0 <main@@Base+0x8370>
   1e5a4:	cmp	r0, #58	; 0x3a
   1e5a8:	mov	r1, r9
   1e5ac:	bne	1e8d0 <main@@Base+0x8690>
   1e5b0:	ldr	r0, [sp, #32]
   1e5b4:	mov	r1, #0
   1e5b8:	str	r1, [r0]
   1e5bc:	b	1e638 <main@@Base+0x83f8>
   1e5c0:	cmp	r0, #34	; 0x22
   1e5c4:	mov	r1, r9
   1e5c8:	bne	1e810 <main@@Base+0x85d0>
   1e5cc:	add	r2, r9, #5
   1e5d0:	ldr	r0, [sp, #44]	; 0x2c
   1e5d4:	sub	r0, r0, r2
   1e5d8:	cmp	r0, #2
   1e5dc:	blt	1e674 <main@@Base+0x8434>
   1e5e0:	ldrb	r0, [r2]
   1e5e4:	cmp	r0, #32
   1e5e8:	bls	1e660 <main@@Base+0x8420>
   1e5ec:	mov	r1, r2
   1e5f0:	b	1e688 <main@@Base+0x8448>
   1e5f4:	cmp	r0, #34	; 0x22
   1e5f8:	mov	r1, r9
   1e5fc:	bne	1e870 <main@@Base+0x8630>
   1e600:	add	r2, r9, #8
   1e604:	ldr	r0, [sp, #44]	; 0x2c
   1e608:	sub	r0, r0, r2
   1e60c:	cmp	r0, #2
   1e610:	blt	1e6f8 <main@@Base+0x84b8>
   1e614:	ldrb	r0, [r2]
   1e618:	cmp	r0, #32
   1e61c:	bls	1e6e4 <main@@Base+0x84a4>
   1e620:	mov	r1, r2
   1e624:	b	1e70c <main@@Base+0x84cc>
   1e628:	cmp	r0, #34	; 0x22
   1e62c:	mov	r1, r9
   1e630:	bne	1e8d0 <main@@Base+0x8690>
   1e634:	add	r2, r9, #7
   1e638:	ldr	r0, [sp, #44]	; 0x2c
   1e63c:	sub	r0, r0, r2
   1e640:	cmp	r0, #2
   1e644:	blt	1e77c <main@@Base+0x853c>
   1e648:	ldrb	r0, [r2]
   1e64c:	cmp	r0, #32
   1e650:	bls	1e768 <main@@Base+0x8528>
   1e654:	mov	r1, r2
   1e658:	b	1e790 <main@@Base+0x8550>
   1e65c:	muleq	r4, r8, sl
   1e660:	bne	1e674 <main@@Base+0x8434>
   1e664:	mov	r1, r2
   1e668:	ldrb	r0, [r1, #1]!
   1e66c:	cmp	r0, #32
   1e670:	bhi	1e688 <main@@Base+0x8448>
   1e674:	mov	r1, r2
   1e678:	ldr	r0, [sp, #40]	; 0x28
   1e67c:	ldr	r2, [sp, #44]	; 0x2c
   1e680:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e684:	mov	r1, r0
   1e688:	ldr	r0, [sp, #44]	; 0x2c
   1e68c:	cmp	r1, r0
   1e690:	beq	1e6d0 <main@@Base+0x8490>
   1e694:	ldrb	r0, [r1]
   1e698:	cmp	r0, #58	; 0x3a
   1e69c:	bne	1e6d0 <main@@Base+0x8490>
   1e6a0:	ldr	r0, [sp, #44]	; 0x2c
   1e6a4:	add	r2, r1, #1
   1e6a8:	sub	r0, r0, r2
   1e6ac:	cmp	r0, #2
   1e6b0:	blt	1e7fc <main@@Base+0x85bc>
   1e6b4:	ldrb	r0, [r2]
   1e6b8:	cmp	r0, #32
   1e6bc:	bls	1e7ec <main@@Base+0x85ac>
   1e6c0:	mov	r1, r2
   1e6c4:	cmp	r9, r1
   1e6c8:	bne	1e818 <main@@Base+0x85d8>
   1e6cc:	b	1e92c <main@@Base+0x86ec>
   1e6d0:	ldr	r0, [sp, #40]	; 0x28
   1e6d4:	ldr	r2, [sp, #44]	; 0x2c
   1e6d8:	mov	r3, #4
   1e6dc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1e6e0:	b	1e80c <main@@Base+0x85cc>
   1e6e4:	bne	1e6f8 <main@@Base+0x84b8>
   1e6e8:	mov	r1, r2
   1e6ec:	ldrb	r0, [r1, #1]!
   1e6f0:	cmp	r0, #32
   1e6f4:	bhi	1e70c <main@@Base+0x84cc>
   1e6f8:	mov	r1, r2
   1e6fc:	ldr	r0, [sp, #40]	; 0x28
   1e700:	ldr	r2, [sp, #44]	; 0x2c
   1e704:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e708:	mov	r1, r0
   1e70c:	ldr	r0, [sp, #44]	; 0x2c
   1e710:	cmp	r1, r0
   1e714:	beq	1e754 <main@@Base+0x8514>
   1e718:	ldrb	r0, [r1]
   1e71c:	cmp	r0, #58	; 0x3a
   1e720:	bne	1e754 <main@@Base+0x8514>
   1e724:	ldr	r0, [sp, #44]	; 0x2c
   1e728:	add	r2, r1, #1
   1e72c:	sub	r0, r0, r2
   1e730:	cmp	r0, #2
   1e734:	blt	1e85c <main@@Base+0x861c>
   1e738:	ldrb	r0, [r2]
   1e73c:	cmp	r0, #32
   1e740:	bls	1e84c <main@@Base+0x860c>
   1e744:	mov	r1, r2
   1e748:	cmp	r9, r1
   1e74c:	bne	1e878 <main@@Base+0x8638>
   1e750:	b	1e92c <main@@Base+0x86ec>
   1e754:	ldr	r0, [sp, #40]	; 0x28
   1e758:	ldr	r2, [sp, #44]	; 0x2c
   1e75c:	mov	r3, #4
   1e760:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1e764:	b	1e86c <main@@Base+0x862c>
   1e768:	bne	1e77c <main@@Base+0x853c>
   1e76c:	mov	r1, r2
   1e770:	ldrb	r0, [r1, #1]!
   1e774:	cmp	r0, #32
   1e778:	bhi	1e790 <main@@Base+0x8550>
   1e77c:	mov	r1, r2
   1e780:	ldr	r0, [sp, #40]	; 0x28
   1e784:	ldr	r2, [sp, #44]	; 0x2c
   1e788:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e78c:	mov	r1, r0
   1e790:	ldr	r0, [sp, #44]	; 0x2c
   1e794:	cmp	r1, r0
   1e798:	beq	1e7d8 <main@@Base+0x8598>
   1e79c:	ldrb	r0, [r1]
   1e7a0:	cmp	r0, #58	; 0x3a
   1e7a4:	bne	1e7d8 <main@@Base+0x8598>
   1e7a8:	ldr	r0, [sp, #44]	; 0x2c
   1e7ac:	add	r2, r1, #1
   1e7b0:	sub	r0, r0, r2
   1e7b4:	cmp	r0, #2
   1e7b8:	blt	1e8bc <main@@Base+0x867c>
   1e7bc:	ldrb	r0, [r2]
   1e7c0:	cmp	r0, #32
   1e7c4:	bls	1e8ac <main@@Base+0x866c>
   1e7c8:	mov	r1, r2
   1e7cc:	cmp	r9, r1
   1e7d0:	bne	1e8d8 <main@@Base+0x8698>
   1e7d4:	b	1e92c <main@@Base+0x86ec>
   1e7d8:	ldr	r0, [sp, #40]	; 0x28
   1e7dc:	ldr	r2, [sp, #44]	; 0x2c
   1e7e0:	mov	r3, #4
   1e7e4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1e7e8:	b	1e8cc <main@@Base+0x868c>
   1e7ec:	bne	1e7fc <main@@Base+0x85bc>
   1e7f0:	ldrb	r0, [r1, #2]!
   1e7f4:	cmp	r0, #32
   1e7f8:	bhi	1e810 <main@@Base+0x85d0>
   1e7fc:	mov	r1, r2
   1e800:	ldr	r0, [sp, #40]	; 0x28
   1e804:	ldr	r2, [sp, #44]	; 0x2c
   1e808:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e80c:	mov	r1, r0
   1e810:	cmp	r9, r1
   1e814:	beq	1e92c <main@@Base+0x86ec>
   1e818:	mov	r0, #0
   1e81c:	ldr	r2, [sp, #44]	; 0x2c
   1e820:	sub	r3, fp, #56	; 0x38
   1e824:	str	r0, [sp]
   1e828:	ldr	r0, [sp, #40]	; 0x28
   1e82c:	bl	38580 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e830:	mov	r4, r0
   1e834:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e838:	cmp	r0, #0
   1e83c:	beq	20f90 <main@@Base+0xad50>
   1e840:	ldr	r0, [sp, #40]	; 0x28
   1e844:	mov	r1, #0
   1e848:	b	1e908 <main@@Base+0x86c8>
   1e84c:	bne	1e85c <main@@Base+0x861c>
   1e850:	ldrb	r0, [r1, #2]!
   1e854:	cmp	r0, #32
   1e858:	bhi	1e870 <main@@Base+0x8630>
   1e85c:	mov	r1, r2
   1e860:	ldr	r0, [sp, #40]	; 0x28
   1e864:	ldr	r2, [sp, #44]	; 0x2c
   1e868:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e86c:	mov	r1, r0
   1e870:	cmp	r9, r1
   1e874:	beq	1e92c <main@@Base+0x86ec>
   1e878:	mov	r0, #1
   1e87c:	ldr	r2, [sp, #44]	; 0x2c
   1e880:	sub	r3, fp, #56	; 0x38
   1e884:	str	r0, [sp]
   1e888:	ldr	r0, [sp, #40]	; 0x28
   1e88c:	bl	38580 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e890:	mov	r4, r0
   1e894:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e898:	cmp	r0, #0
   1e89c:	beq	20f90 <main@@Base+0xad50>
   1e8a0:	ldr	r0, [sp, #40]	; 0x28
   1e8a4:	mov	r1, #1
   1e8a8:	b	1e908 <main@@Base+0x86c8>
   1e8ac:	bne	1e8bc <main@@Base+0x867c>
   1e8b0:	ldrb	r0, [r1, #2]!
   1e8b4:	cmp	r0, #32
   1e8b8:	bhi	1e8d0 <main@@Base+0x8690>
   1e8bc:	mov	r1, r2
   1e8c0:	ldr	r0, [sp, #40]	; 0x28
   1e8c4:	ldr	r2, [sp, #44]	; 0x2c
   1e8c8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e8cc:	mov	r1, r0
   1e8d0:	cmp	r9, r1
   1e8d4:	beq	1e92c <main@@Base+0x86ec>
   1e8d8:	mov	r0, #0
   1e8dc:	ldr	r2, [sp, #44]	; 0x2c
   1e8e0:	sub	r3, fp, #56	; 0x38
   1e8e4:	str	r0, [sp]
   1e8e8:	ldr	r0, [sp, #40]	; 0x28
   1e8ec:	bl	38580 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e8f0:	mov	r4, r0
   1e8f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e8f8:	cmp	r0, #0
   1e8fc:	beq	20f90 <main@@Base+0xad50>
   1e900:	ldr	r0, [sp, #40]	; 0x28
   1e904:	mov	r1, #2
   1e908:	ldr	r0, [r0]
   1e90c:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   1e910:	cmp	r0, #0
   1e914:	beq	20f90 <main@@Base+0xad50>
   1e918:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1e91c:	str	r1, [r0]
   1e920:	ldr	r5, [sp, #44]	; 0x2c
   1e924:	ldr	r8, [sp, #40]	; 0x28
   1e928:	b	1e948 <main@@Base+0x8708>
   1e92c:	ldr	r8, [sp, #40]	; 0x28
   1e930:	ldr	r5, [sp, #44]	; 0x2c
   1e934:	mov	r1, r9
   1e938:	mov	r0, r8
   1e93c:	mov	r2, r5
   1e940:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   1e944:	mov	r4, r0
   1e948:	sub	r0, r5, r4
   1e94c:	cmp	r0, #2
   1e950:	blt	1e984 <main@@Base+0x8744>
   1e954:	ldrb	r0, [r4]
   1e958:	cmp	r0, #32
   1e95c:	bls	1e970 <main@@Base+0x8730>
   1e960:	mov	r2, r4
   1e964:	cmp	r2, r5
   1e968:	bne	1e9a0 <main@@Base+0x8760>
   1e96c:	b	1f294 <main@@Base+0x9054>
   1e970:	bne	1e984 <main@@Base+0x8744>
   1e974:	mov	r2, r4
   1e978:	ldrb	r0, [r2, #1]!
   1e97c:	cmp	r0, #32
   1e980:	bhi	1e998 <main@@Base+0x8758>
   1e984:	mov	r0, r8
   1e988:	mov	r1, r4
   1e98c:	mov	r2, r5
   1e990:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e994:	mov	r2, r0
   1e998:	cmp	r2, r5
   1e99c:	beq	1f294 <main@@Base+0x9054>
   1e9a0:	ldrb	r0, [r2]
   1e9a4:	cmp	r0, #44	; 0x2c
   1e9a8:	bne	1f4ac <main@@Base+0x926c>
   1e9ac:	add	r1, r2, #1
   1e9b0:	sub	r0, r5, r1
   1e9b4:	cmp	r0, #2
   1e9b8:	blt	1e9e8 <main@@Base+0x87a8>
   1e9bc:	ldrb	r0, [r1]
   1e9c0:	cmp	r0, #32
   1e9c4:	bls	1e9d8 <main@@Base+0x8798>
   1e9c8:	mov	r2, r1
   1e9cc:	cmp	r2, r5
   1e9d0:	bne	1ea00 <main@@Base+0x87c0>
   1e9d4:	b	1f4f0 <main@@Base+0x92b0>
   1e9d8:	bne	1e9e8 <main@@Base+0x87a8>
   1e9dc:	ldrb	r0, [r2, #2]!
   1e9e0:	cmp	r0, #32
   1e9e4:	bhi	1e9f8 <main@@Base+0x87b8>
   1e9e8:	mov	r0, r8
   1e9ec:	mov	r2, r5
   1e9f0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1e9f4:	mov	r2, r0
   1e9f8:	cmp	r2, r5
   1e9fc:	beq	1f4f0 <main@@Base+0x92b0>
   1ea00:	ldrb	r0, [r2]
   1ea04:	cmp	r0, #125	; 0x7d
   1ea08:	bne	1e344 <main@@Base+0x8104>
   1ea0c:	b	1f4bc <main@@Base+0x927c>
   1ea10:	ldr	r5, [sp, #44]	; 0x2c
   1ea14:	ldr	r8, [sp, #40]	; 0x28
   1ea18:	ldr	sl, [sp, #36]	; 0x24
   1ea1c:	bne	1ea2c <main@@Base+0x87ec>
   1ea20:	ldrb	r0, [r4, #2]!
   1ea24:	cmp	r0, #32
   1ea28:	bhi	1ea3c <main@@Base+0x87fc>
   1ea2c:	mov	r0, r8
   1ea30:	mov	r2, r5
   1ea34:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ea38:	mov	r4, r0
   1ea3c:	cmp	r7, r4
   1ea40:	beq	1ea98 <main@@Base+0x8858>
   1ea44:	ldr	r0, [r8]
   1ea48:	mov	r1, #8
   1ea4c:	mov	r2, #8
   1ea50:	mvn	r3, #-536870912	; 0xe0000000
   1ea54:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   1ea58:	cmp	r0, #0
   1ea5c:	bne	21478 <main@@Base+0xb238>
   1ea60:	cmp	r4, r5
   1ea64:	beq	1eaa4 <main@@Base+0x8864>
   1ea68:	ldrb	r0, [r4]
   1ea6c:	cmp	r0, #91	; 0x5b
   1ea70:	bne	1eaa4 <main@@Base+0x8864>
   1ea74:	add	r1, r4, #1
   1ea78:	sub	r0, r5, r1
   1ea7c:	cmp	r0, #2
   1ea80:	blt	1f2b0 <main@@Base+0x9070>
   1ea84:	ldrb	r0, [r1]
   1ea88:	cmp	r0, #32
   1ea8c:	bls	1f2a0 <main@@Base+0x9060>
   1ea90:	mov	r4, r1
   1ea94:	b	1f2c0 <main@@Base+0x9080>
   1ea98:	mov	r0, r8
   1ea9c:	mov	r1, r7
   1eaa0:	b	1f710 <main@@Base+0x94d0>
   1eaa4:	ldr	r8, [sp, #40]	; 0x28
   1eaa8:	mov	r1, r4
   1eaac:	mov	r2, r5
   1eab0:	mov	r3, #22
   1eab4:	mov	r0, r8
   1eab8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1eabc:	mov	r4, r0
   1eac0:	ldr	r0, [r8]
   1eac4:	bl	32234 <flatcc_builder_end_vector@@Base>
   1eac8:	cmp	r0, #0
   1eacc:	str	r0, [sp, #52]	; 0x34
   1ead0:	beq	21470 <main@@Base+0xb230>
   1ead4:	ldr	r0, [r8]
   1ead8:	mov	r1, #33	; 0x21
   1eadc:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   1eae0:	cmp	r0, #0
   1eae4:	beq	21470 <main@@Base+0xb230>
   1eae8:	ldr	r1, [sp, #52]	; 0x34
   1eaec:	ldr	r5, [sp, #44]	; 0x2c
   1eaf0:	str	r1, [r0]
   1eaf4:	b	1a5c4 <main@@Base+0x4384>
   1eaf8:	mov	r6, r0
   1eafc:	ldr	r5, [sp, #44]	; 0x2c
   1eb00:	ldr	r8, [sp, #40]	; 0x28
   1eb04:	str	r6, [fp, #-60]	; 0xffffffc4
   1eb08:	ldr	sl, [sp, #36]	; 0x24
   1eb0c:	cmp	r7, r4
   1eb10:	bne	1eb50 <main@@Base+0x8910>
   1eb14:	sub	r0, fp, #60	; 0x3c
   1eb18:	mov	r1, r7
   1eb1c:	mov	r2, r5
   1eb20:	str	r0, [sp]
   1eb24:	mov	r0, r8
   1eb28:	ldr	r3, [pc, #4072]	; 1fb18 <main@@Base+0x98d8>
   1eb2c:	add	r3, pc, r3
   1eb30:	bl	259fc <main@@Base+0xf7bc>
   1eb34:	mov	r4, r0
   1eb38:	cmp	r0, r7
   1eb3c:	cmpne	r4, r5
   1eb40:	beq	214b0 <main@@Base+0xb270>
   1eb44:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1eb48:	ldr	r8, [sp, #40]	; 0x28
   1eb4c:	ldr	sl, [sp, #36]	; 0x24
   1eb50:	cmp	r6, #0
   1eb54:	bne	1eb64 <main@@Base+0x8924>
   1eb58:	ldrb	r0, [r8, #8]
   1eb5c:	tst	r0, #2
   1eb60:	beq	1f71c <main@@Base+0x94dc>
   1eb64:	ldr	r0, [r8]
   1eb68:	mov	r1, #20
   1eb6c:	mov	r2, #4
   1eb70:	mov	r3, #4
   1eb74:	bl	32964 <flatcc_builder_table_add@@Base>
   1eb78:	cmp	r0, #0
   1eb7c:	beq	214b0 <main@@Base+0xb270>
   1eb80:	str	r6, [r0]
   1eb84:	b	1f71c <main@@Base+0x94dc>
   1eb88:	ldr	r5, [sp, #44]	; 0x2c
   1eb8c:	ldr	r8, [sp, #40]	; 0x28
   1eb90:	bne	1eba0 <main@@Base+0x8960>
   1eb94:	ldrb	r0, [r4, #2]!
   1eb98:	cmp	r0, #32
   1eb9c:	bhi	1ebb0 <main@@Base+0x8970>
   1eba0:	mov	r0, r8
   1eba4:	mov	r2, r5
   1eba8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ebac:	mov	r4, r0
   1ebb0:	cmp	r4, r5
   1ebb4:	beq	1ec1c <main@@Base+0x89dc>
   1ebb8:	ldrb	r0, [r4]
   1ebbc:	cmp	r0, #93	; 0x5d
   1ebc0:	bne	1ec18 <main@@Base+0x89d8>
   1ebc4:	ldr	r5, [sp, #44]	; 0x2c
   1ebc8:	ldr	r8, [sp, #40]	; 0x28
   1ebcc:	ldr	sl, [sp, #36]	; 0x24
   1ebd0:	add	r1, r4, #1
   1ebd4:	sub	r0, r5, r1
   1ebd8:	cmp	r0, #2
   1ebdc:	blt	1ec08 <main@@Base+0x89c8>
   1ebe0:	ldrb	r0, [r1]
   1ebe4:	cmp	r0, #32
   1ebe8:	bhi	20d00 <main@@Base+0xaac0>
   1ebec:	ldr	r5, [sp, #44]	; 0x2c
   1ebf0:	ldr	r8, [sp, #40]	; 0x28
   1ebf4:	ldr	sl, [sp, #36]	; 0x24
   1ebf8:	bne	1ec08 <main@@Base+0x89c8>
   1ebfc:	ldrb	r0, [r4, #2]!
   1ec00:	cmp	r0, #32
   1ec04:	bhi	1dc78 <main@@Base+0x7a38>
   1ec08:	mov	r0, r8
   1ec0c:	mov	r2, r5
   1ec10:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ec14:	b	1dc74 <main@@Base+0x7a34>
   1ec18:	mov	r5, r4
   1ec1c:	mov	r0, #0
   1ec20:	mov	r1, #1
   1ec24:	str	r0, [sp, #60]	; 0x3c
   1ec28:	str	r0, [sp, #56]	; 0x38
   1ec2c:	ldr	r0, [sp, #40]	; 0x28
   1ec30:	ldr	r0, [r0]
   1ec34:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1ec38:	cmp	r0, #0
   1ec3c:	beq	21480 <main@@Base+0xb240>
   1ec40:	mov	r4, r5
   1ec44:	ldr	r5, [sp, #44]	; 0x2c
   1ec48:	ldr	r8, [sp, #40]	; 0x28
   1ec4c:	mov	r7, r0
   1ec50:	mov	r0, #0
   1ec54:	cmp	r4, r5
   1ec58:	str	r0, [fp, #-52]	; 0xffffffcc
   1ec5c:	str	r0, [fp, #-56]	; 0xffffffc8
   1ec60:	str	r0, [sp, #60]	; 0x3c
   1ec64:	str	r0, [sp, #56]	; 0x38
   1ec68:	str	r0, [fp, #-60]	; 0xffffffc4
   1ec6c:	beq	1eccc <main@@Base+0x8a8c>
   1ec70:	sub	r0, fp, #56	; 0x38
   1ec74:	mov	r1, r4
   1ec78:	mov	r2, r5
   1ec7c:	sub	r3, fp, #60	; 0x3c
   1ec80:	str	r0, [sp]
   1ec84:	mov	r0, r8
   1ec88:	bl	38410 <flatcc_json_parser_integer@@Base>
   1ec8c:	cmp	r0, r4
   1ec90:	beq	1ece0 <main@@Base+0x8aa0>
   1ec94:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ec98:	mov	r1, r0
   1ec9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eca0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eca4:	cmp	r2, #0
   1eca8:	beq	1ecf8 <main@@Base+0x8ab8>
   1ecac:	rsbs	r2, r0, #0
   1ecb0:	mov	r2, #-2147483648	; 0x80000000
   1ecb4:	sbcs	r2, r2, r3
   1ecb8:	bcs	1ed30 <main@@Base+0x8af0>
   1ecbc:	ldr	r8, [sp, #40]	; 0x28
   1ecc0:	ldr	r5, [sp, #44]	; 0x2c
   1ecc4:	mov	r3, #8
   1ecc8:	b	1ed0c <main@@Base+0x8acc>
   1eccc:	mov	r3, #0
   1ecd0:	mov	r1, r5
   1ecd4:	cmp	r4, r1
   1ecd8:	bne	1ed8c <main@@Base+0x8b4c>
   1ecdc:	b	1ed50 <main@@Base+0x8b10>
   1ece0:	mov	r0, #0
   1ece4:	mov	r3, #0
   1ece8:	mov	r1, r4
   1ecec:	cmp	r4, r1
   1ecf0:	bne	1ed8c <main@@Base+0x8b4c>
   1ecf4:	b	1ed50 <main@@Base+0x8b10>
   1ecf8:	cmn	r3, #1
   1ecfc:	bgt	1ed38 <main@@Base+0x8af8>
   1ed00:	ldr	r8, [sp, #40]	; 0x28
   1ed04:	ldr	r5, [sp, #44]	; 0x2c
   1ed08:	mov	r3, #7
   1ed0c:	mov	r0, r8
   1ed10:	mov	r2, r5
   1ed14:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1ed18:	mov	r1, r0
   1ed1c:	mov	r0, #0
   1ed20:	mov	r3, #0
   1ed24:	cmp	r4, r1
   1ed28:	bne	1ed8c <main@@Base+0x8b4c>
   1ed2c:	b	1ed50 <main@@Base+0x8b10>
   1ed30:	rsbs	r0, r0, #0
   1ed34:	rsc	r3, r3, #0
   1ed38:	ldr	r5, [sp, #44]	; 0x2c
   1ed3c:	ldr	r8, [sp, #40]	; 0x28
   1ed40:	str	r0, [sp, #56]	; 0x38
   1ed44:	str	r3, [sp, #60]	; 0x3c
   1ed48:	cmp	r4, r1
   1ed4c:	bne	1ed8c <main@@Base+0x8b4c>
   1ed50:	add	r0, sp, #56	; 0x38
   1ed54:	mov	r1, r4
   1ed58:	mov	r2, r5
   1ed5c:	str	r0, [sp]
   1ed60:	mov	r0, r8
   1ed64:	ldr	r3, [pc, #4016]	; 1fd1c <main@@Base+0x9adc>
   1ed68:	add	r3, pc, r3
   1ed6c:	bl	25c0c <main@@Base+0xf9cc>
   1ed70:	mov	r1, r0
   1ed74:	cmp	r0, r4
   1ed78:	cmpne	r1, r5
   1ed7c:	beq	21488 <main@@Base+0xb248>
   1ed80:	ldr	r0, [sp, #56]	; 0x38
   1ed84:	ldr	r3, [sp, #60]	; 0x3c
   1ed88:	ldr	r8, [sp, #40]	; 0x28
   1ed8c:	stm	r7, {r0, r3}
   1ed90:	sub	r0, r5, r1
   1ed94:	cmp	r0, #2
   1ed98:	blt	1edcc <main@@Base+0x8b8c>
   1ed9c:	ldrb	r0, [r1]
   1eda0:	cmp	r0, #32
   1eda4:	bls	1edb8 <main@@Base+0x8b78>
   1eda8:	mov	r4, r1
   1edac:	cmp	r4, r5
   1edb0:	bne	1ede4 <main@@Base+0x8ba4>
   1edb4:	b	2027c <main@@Base+0xa03c>
   1edb8:	bne	1edcc <main@@Base+0x8b8c>
   1edbc:	mov	r4, r1
   1edc0:	ldrb	r0, [r4, #1]!
   1edc4:	cmp	r0, #32
   1edc8:	bhi	1eddc <main@@Base+0x8b9c>
   1edcc:	mov	r0, r8
   1edd0:	mov	r2, r5
   1edd4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1edd8:	mov	r4, r0
   1eddc:	cmp	r4, r5
   1ede0:	beq	2027c <main@@Base+0xa03c>
   1ede4:	ldrb	r0, [r4]
   1ede8:	cmp	r0, #44	; 0x2c
   1edec:	bne	20290 <main@@Base+0xa050>
   1edf0:	add	r1, r4, #1
   1edf4:	sub	r0, r5, r1
   1edf8:	cmp	r0, #2
   1edfc:	blt	1ee2c <main@@Base+0x8bec>
   1ee00:	ldrb	r0, [r1]
   1ee04:	cmp	r0, #32
   1ee08:	bls	1ee1c <main@@Base+0x8bdc>
   1ee0c:	mov	r4, r1
   1ee10:	cmp	r4, r5
   1ee14:	bne	1ee44 <main@@Base+0x8c04>
   1ee18:	b	202b8 <main@@Base+0xa078>
   1ee1c:	bne	1ee2c <main@@Base+0x8bec>
   1ee20:	ldrb	r0, [r4, #2]!
   1ee24:	cmp	r0, #32
   1ee28:	bhi	1ee3c <main@@Base+0x8bfc>
   1ee2c:	mov	r0, r8
   1ee30:	mov	r2, r5
   1ee34:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ee38:	mov	r4, r0
   1ee3c:	cmp	r4, r5
   1ee40:	beq	202b8 <main@@Base+0xa078>
   1ee44:	ldrb	r0, [r4]
   1ee48:	cmp	r0, #93	; 0x5d
   1ee4c:	beq	20ce4 <main@@Base+0xaaa4>
   1ee50:	mov	r0, #0
   1ee54:	mov	r1, #1
   1ee58:	str	r0, [sp, #60]	; 0x3c
   1ee5c:	str	r0, [sp, #56]	; 0x38
   1ee60:	ldr	r0, [r8]
   1ee64:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1ee68:	mov	r7, r0
   1ee6c:	cmp	r0, #0
   1ee70:	bne	1ec50 <main@@Base+0x8a10>
   1ee74:	b	17308 <main@@Base+0x10c8>
   1ee78:	ldr	r5, [sp, #44]	; 0x2c
   1ee7c:	ldr	r8, [sp, #40]	; 0x28
   1ee80:	ldr	sl, [sp, #36]	; 0x24
   1ee84:	bne	1ee94 <main@@Base+0x8c54>
   1ee88:	ldrb	r0, [r7, #2]!
   1ee8c:	cmp	r0, #32
   1ee90:	bhi	1eea4 <main@@Base+0x8c64>
   1ee94:	mov	r0, r8
   1ee98:	mov	r2, r5
   1ee9c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1eea0:	mov	r7, r0
   1eea4:	cmp	r4, r7
   1eea8:	beq	1f708 <main@@Base+0x94c8>
   1eeac:	mov	r6, #0
   1eeb0:	cmp	r7, r5
   1eeb4:	str	r6, [fp, #-52]	; 0xffffffcc
   1eeb8:	str	r6, [fp, #-56]	; 0xffffffc8
   1eebc:	str	r6, [sp, #60]	; 0x3c
   1eec0:	str	r6, [sp, #56]	; 0x38
   1eec4:	str	r6, [fp, #-60]	; 0xffffffc4
   1eec8:	beq	1ef28 <main@@Base+0x8ce8>
   1eecc:	sub	r0, fp, #56	; 0x38
   1eed0:	mov	r1, r7
   1eed4:	mov	r2, r5
   1eed8:	sub	r3, fp, #60	; 0x3c
   1eedc:	str	r0, [sp]
   1eee0:	mov	r0, r8
   1eee4:	bl	38410 <flatcc_json_parser_integer@@Base>
   1eee8:	cmp	r0, r7
   1eeec:	beq	1ef3c <main@@Base+0x8cfc>
   1eef0:	sub	r9, fp, #60	; 0x3c
   1eef4:	mov	r4, r0
   1eef8:	ldm	r9, {r0, r6, r9}
   1eefc:	cmp	r0, #0
   1ef00:	beq	1ef4c <main@@Base+0x8d0c>
   1ef04:	subs	r0, r6, #1
   1ef08:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1ef0c:	bcc	1ef84 <main@@Base+0x8d44>
   1ef10:	ldr	r8, [sp, #40]	; 0x28
   1ef14:	ldr	r2, [sp, #44]	; 0x2c
   1ef18:	mov	r1, r4
   1ef1c:	mov	r3, #8
   1ef20:	b	1ef64 <main@@Base+0x8d24>
   1ef24:	andeq	r1, r4, r0, lsl #3
   1ef28:	mov	r9, #0
   1ef2c:	mov	r4, r5
   1ef30:	cmp	r7, r4
   1ef34:	bne	1efe0 <main@@Base+0x8da0>
   1ef38:	b	1efa0 <main@@Base+0x8d60>
   1ef3c:	mov	r6, #0
   1ef40:	mov	r9, #0
   1ef44:	mov	r4, r7
   1ef48:	b	1ef94 <main@@Base+0x8d54>
   1ef4c:	cmn	r9, #1
   1ef50:	bgt	1ef8c <main@@Base+0x8d4c>
   1ef54:	ldr	r8, [sp, #40]	; 0x28
   1ef58:	ldr	r2, [sp, #44]	; 0x2c
   1ef5c:	mov	r1, r4
   1ef60:	mov	r3, #7
   1ef64:	mov	r0, r8
   1ef68:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1ef6c:	mov	r4, r0
   1ef70:	mov	r6, #0
   1ef74:	mov	r9, #0
   1ef78:	cmp	r7, r4
   1ef7c:	bne	1efe0 <main@@Base+0x8da0>
   1ef80:	b	1efa0 <main@@Base+0x8d60>
   1ef84:	rsbs	r6, r6, #0
   1ef88:	rsc	r9, r9, #0
   1ef8c:	str	r6, [sp, #56]	; 0x38
   1ef90:	str	r9, [sp, #60]	; 0x3c
   1ef94:	ldr	r8, [sp, #40]	; 0x28
   1ef98:	cmp	r7, r4
   1ef9c:	bne	1efe0 <main@@Base+0x8da0>
   1efa0:	add	r0, sp, #56	; 0x38
   1efa4:	ldr	r2, [sp, #44]	; 0x2c
   1efa8:	mov	r1, r7
   1efac:	str	r0, [sp]
   1efb0:	mov	r0, r8
   1efb4:	ldr	r3, [pc, #3932]	; 1ff18 <main@@Base+0x9cd8>
   1efb8:	add	r3, pc, r3
   1efbc:	bl	25c0c <main@@Base+0xf9cc>
   1efc0:	cmp	r0, r7
   1efc4:	mov	r4, r0
   1efc8:	ldrne	r0, [sp, #44]	; 0x2c
   1efcc:	cmpne	r4, r0
   1efd0:	beq	214b0 <main@@Base+0xb270>
   1efd4:	ldr	r6, [sp, #56]	; 0x38
   1efd8:	ldr	r9, [sp, #60]	; 0x3c
   1efdc:	ldr	r8, [sp, #40]	; 0x28
   1efe0:	orrs	r0, r6, r9
   1efe4:	bne	1eff4 <main@@Base+0x8db4>
   1efe8:	ldrb	r0, [r8, #8]
   1efec:	tst	r0, #2
   1eff0:	beq	1f014 <main@@Base+0x8dd4>
   1eff4:	ldr	r0, [r8]
   1eff8:	mov	r1, #22
   1effc:	mov	r2, #8
   1f000:	mov	r3, #8
   1f004:	bl	32964 <flatcc_builder_table_add@@Base>
   1f008:	cmp	r0, #0
   1f00c:	beq	214b0 <main@@Base+0xb270>
   1f010:	stm	r0, {r6, r9}
   1f014:	ldr	r5, [sp, #44]	; 0x2c
   1f018:	b	1a5c4 <main@@Base+0x4384>
   1f01c:	ldr	sl, [sp, #36]	; 0x24
   1f020:	mov	r4, r5
   1f024:	b	1d01c <main@@Base+0x6ddc>
   1f028:	cmp	r0, #93	; 0x5d
   1f02c:	bne	20fd0 <main@@Base+0xad90>
   1f030:	ldr	r5, [sp, #44]	; 0x2c
   1f034:	ldr	r8, [sp, #40]	; 0x28
   1f038:	add	r1, r2, #1
   1f03c:	sub	r0, r5, r1
   1f040:	cmp	r0, #2
   1f044:	ldr	sl, [sp, #36]	; 0x24
   1f048:	blt	210fc <main@@Base+0xaebc>
   1f04c:	ldrb	r0, [r1]
   1f050:	cmp	r0, #32
   1f054:	bls	210dc <main@@Base+0xae9c>
   1f058:	ldr	r5, [sp, #44]	; 0x2c
   1f05c:	ldr	r8, [sp, #40]	; 0x28
   1f060:	ldr	sl, [sp, #36]	; 0x24
   1f064:	mov	r4, r1
   1f068:	b	1d01c <main@@Base+0x6ddc>
   1f06c:	mov	r4, r5
   1f070:	b	21150 <main@@Base+0xaf10>
   1f074:	mov	r0, r8
   1f078:	mov	r1, r5
   1f07c:	b	20fe0 <main@@Base+0xada0>
   1f080:	cmp	r0, #93	; 0x5d
   1f084:	bne	20ff4 <main@@Base+0xadb4>
   1f088:	ldr	r0, [sp, #44]	; 0x2c
   1f08c:	add	r1, r4, #1
   1f090:	sub	r0, r0, r1
   1f094:	cmp	r0, #2
   1f098:	blt	21140 <main@@Base+0xaf00>
   1f09c:	b	1f280 <main@@Base+0x9040>
   1f0a0:	mov	r0, r8
   1f0a4:	mov	r1, r5
   1f0a8:	mov	r2, r5
   1f0ac:	b	21000 <main@@Base+0xadc0>
   1f0b0:	ldr	r5, [sp, #44]	; 0x2c
   1f0b4:	bne	1f0c4 <main@@Base+0x8e84>
   1f0b8:	ldrb	r0, [r4, #2]!
   1f0bc:	cmp	r0, #32
   1f0c0:	bhi	1f0d4 <main@@Base+0x8e94>
   1f0c4:	ldr	r0, [sp, #40]	; 0x28
   1f0c8:	mov	r2, r5
   1f0cc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f0d0:	mov	r4, r0
   1f0d4:	cmp	r4, r5
   1f0d8:	mov	r3, r5
   1f0dc:	beq	1f130 <main@@Base+0x8ef0>
   1f0e0:	ldrb	r0, [r4]
   1f0e4:	cmp	r0, #125	; 0x7d
   1f0e8:	bne	1f12c <main@@Base+0x8eec>
   1f0ec:	ldr	r5, [sp, #44]	; 0x2c
   1f0f0:	ldr	r8, [sp, #40]	; 0x28
   1f0f4:	add	r1, r4, #1
   1f0f8:	sub	r0, r5, r1
   1f0fc:	cmp	r0, #2
   1f100:	blt	2131c <main@@Base+0xb0dc>
   1f104:	ldrb	r0, [r1]
   1f108:	cmp	r0, #32
   1f10c:	bhi	20cd4 <main@@Base+0xaa94>
   1f110:	ldr	r5, [sp, #44]	; 0x2c
   1f114:	ldr	r8, [sp, #40]	; 0x28
   1f118:	bne	2131c <main@@Base+0xb0dc>
   1f11c:	ldrb	r0, [r4, #2]!
   1f120:	cmp	r0, #32
   1f124:	bhi	1ce9c <main@@Base+0x6c5c>
   1f128:	b	2131c <main@@Base+0xb0dc>
   1f12c:	mov	r3, r4
   1f130:	ldr	r5, [sp, #44]	; 0x2c
   1f134:	ldr	r8, [sp, #40]	; 0x28
   1f138:	cmp	r3, r5
   1f13c:	mov	r1, r5
   1f140:	beq	1f198 <main@@Base+0x8f58>
   1f144:	ldrb	r0, [r3]
   1f148:	cmp	r0, #46	; 0x2e
   1f14c:	beq	1f16c <main@@Base+0x8f2c>
   1f150:	cmp	r0, #34	; 0x22
   1f154:	bne	1f188 <main@@Base+0x8f48>
   1f158:	ldr	r0, [sp, #32]
   1f15c:	mov	r1, #0
   1f160:	str	r1, [r0]
   1f164:	add	r1, r3, #1
   1f168:	b	1f198 <main@@Base+0x8f58>
   1f16c:	mov	r1, r3
   1f170:	mov	r0, r8
   1f174:	mov	r2, r5
   1f178:	mov	r3, #5
   1f17c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1f180:	mov	r1, r0
   1f184:	b	1f198 <main@@Base+0x8f58>
   1f188:	ldr	r0, [sp, #32]
   1f18c:	mov	r1, #1
   1f190:	str	r1, [r0]
   1f194:	mov	r1, r3
   1f198:	mov	r0, r8
   1f19c:	mov	r2, r5
   1f1a0:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   1f1a4:	mov	r2, r0
   1f1a8:	sub	r0, r5, r0
   1f1ac:	cmp	r0, #2
   1f1b0:	blt	1f1e4 <main@@Base+0x8fa4>
   1f1b4:	ldrb	r0, [r2]
   1f1b8:	cmp	r0, #32
   1f1bc:	bls	1f1d0 <main@@Base+0x8f90>
   1f1c0:	mov	r3, r2
   1f1c4:	cmp	r3, r5
   1f1c8:	bne	1f200 <main@@Base+0x8fc0>
   1f1cc:	b	202b0 <main@@Base+0xa070>
   1f1d0:	bne	1f1e4 <main@@Base+0x8fa4>
   1f1d4:	mov	r3, r2
   1f1d8:	ldrb	r0, [r3, #1]!
   1f1dc:	cmp	r0, #32
   1f1e0:	bhi	1f1f8 <main@@Base+0x8fb8>
   1f1e4:	mov	r1, r2
   1f1e8:	mov	r0, r8
   1f1ec:	mov	r2, r5
   1f1f0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f1f4:	mov	r3, r0
   1f1f8:	cmp	r3, r5
   1f1fc:	beq	202b0 <main@@Base+0xa070>
   1f200:	ldrb	r0, [r3]
   1f204:	cmp	r0, #44	; 0x2c
   1f208:	bne	20ca8 <main@@Base+0xaa68>
   1f20c:	add	r1, r3, #1
   1f210:	sub	r0, r5, r1
   1f214:	cmp	r0, #2
   1f218:	blt	1f248 <main@@Base+0x9008>
   1f21c:	ldrb	r0, [r1]
   1f220:	cmp	r0, #32
   1f224:	bls	1f238 <main@@Base+0x8ff8>
   1f228:	mov	r3, r1
   1f22c:	cmp	r3, r5
   1f230:	bne	1f260 <main@@Base+0x9020>
   1f234:	b	20d08 <main@@Base+0xaac8>
   1f238:	bne	1f248 <main@@Base+0x9008>
   1f23c:	ldrb	r0, [r3, #2]!
   1f240:	cmp	r0, #32
   1f244:	bhi	1f258 <main@@Base+0x9018>
   1f248:	mov	r0, r8
   1f24c:	mov	r2, r5
   1f250:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f254:	mov	r3, r0
   1f258:	cmp	r3, r5
   1f25c:	beq	20d08 <main@@Base+0xaac8>
   1f260:	ldrb	r0, [r3]
   1f264:	cmp	r0, #125	; 0x7d
   1f268:	bne	1f138 <main@@Base+0x8ef8>
   1f26c:	b	20cb8 <main@@Base+0xaa78>
   1f270:	add	r1, r4, #1
   1f274:	sub	r0, r5, r1
   1f278:	cmp	r0, #2
   1f27c:	blt	21140 <main@@Base+0xaf00>
   1f280:	ldrb	r0, [r1]
   1f284:	cmp	r0, #32
   1f288:	bls	21130 <main@@Base+0xaef0>
   1f28c:	mov	r4, r1
   1f290:	b	21150 <main@@Base+0xaf10>
   1f294:	ldr	sl, [sp, #36]	; 0x24
   1f298:	mov	r4, r5
   1f29c:	b	1c744 <main@@Base+0x6504>
   1f2a0:	bne	1f2b0 <main@@Base+0x9070>
   1f2a4:	ldrb	r0, [r4, #2]!
   1f2a8:	cmp	r0, #32
   1f2ac:	bhi	1f2c0 <main@@Base+0x9080>
   1f2b0:	ldr	r0, [sp, #40]	; 0x28
   1f2b4:	ldr	r2, [sp, #44]	; 0x2c
   1f2b8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f2bc:	mov	r4, r0
   1f2c0:	ldr	r7, [sp, #44]	; 0x2c
   1f2c4:	cmp	r4, r7
   1f2c8:	beq	1f324 <main@@Base+0x90e4>
   1f2cc:	ldrb	r0, [r4]
   1f2d0:	cmp	r0, #93	; 0x5d
   1f2d4:	bne	1f320 <main@@Base+0x90e0>
   1f2d8:	ldr	r0, [sp, #44]	; 0x2c
   1f2dc:	ldr	r8, [sp, #40]	; 0x28
   1f2e0:	add	r1, r4, #1
   1f2e4:	sub	r0, r0, r1
   1f2e8:	cmp	r0, #2
   1f2ec:	blt	1f310 <main@@Base+0x90d0>
   1f2f0:	ldrb	r0, [r1]
   1f2f4:	cmp	r0, #32
   1f2f8:	bhi	210d0 <main@@Base+0xae90>
   1f2fc:	ldr	r8, [sp, #40]	; 0x28
   1f300:	bne	1f310 <main@@Base+0x90d0>
   1f304:	ldrb	r0, [r4, #2]!
   1f308:	cmp	r0, #32
   1f30c:	bhi	1eac0 <main@@Base+0x8880>
   1f310:	ldr	r2, [sp, #44]	; 0x2c
   1f314:	mov	r0, r8
   1f318:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f31c:	b	1eabc <main@@Base+0x887c>
   1f320:	mov	r7, r4
   1f324:	mov	r0, #0
   1f328:	mov	r1, #1
   1f32c:	str	r0, [fp, #-52]	; 0xffffffcc
   1f330:	str	r0, [fp, #-56]	; 0xffffffc8
   1f334:	ldr	r0, [sp, #40]	; 0x28
   1f338:	ldr	r0, [r0]
   1f33c:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1f340:	cmp	r0, #0
   1f344:	beq	21494 <main@@Base+0xb254>
   1f348:	ldr	r5, [sp, #44]	; 0x2c
   1f34c:	ldr	r8, [sp, #40]	; 0x28
   1f350:	mov	r9, r0
   1f354:	mov	r4, r7
   1f358:	mov	r0, r8
   1f35c:	mov	r1, r4
   1f360:	mov	r2, r5
   1f364:	sub	r3, fp, #56	; 0x38
   1f368:	bl	378f4 <flatcc_json_parser_double@@Base>
   1f36c:	mov	r7, r0
   1f370:	cmp	r4, r0
   1f374:	bne	1f3b4 <main@@Base+0x9174>
   1f378:	sub	r0, fp, #56	; 0x38
   1f37c:	mov	r1, r4
   1f380:	mov	r2, r5
   1f384:	str	r0, [sp]
   1f388:	mov	r0, r8
   1f38c:	ldr	r3, [pc, #4048]	; 20364 <main@@Base+0xa124>
   1f390:	add	r3, pc, r3
   1f394:	bl	26214 <main@@Base+0xffd4>
   1f398:	mov	r7, r0
   1f39c:	cmp	r0, r4
   1f3a0:	beq	21494 <main@@Base+0xb254>
   1f3a4:	ldr	r5, [sp, #44]	; 0x2c
   1f3a8:	ldr	r8, [sp, #40]	; 0x28
   1f3ac:	cmp	r7, r5
   1f3b0:	beq	21460 <main@@Base+0xb220>
   1f3b4:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1f3b8:	sub	r0, r5, r7
   1f3bc:	cmp	r0, #2
   1f3c0:	vstr	d16, [r9]
   1f3c4:	blt	1f3f8 <main@@Base+0x91b8>
   1f3c8:	ldrb	r0, [r7]
   1f3cc:	cmp	r0, #32
   1f3d0:	bls	1f3e4 <main@@Base+0x91a4>
   1f3d4:	mov	r4, r7
   1f3d8:	cmp	r4, r5
   1f3dc:	bne	1f414 <main@@Base+0x91d4>
   1f3e0:	b	21020 <main@@Base+0xade0>
   1f3e4:	bne	1f3f8 <main@@Base+0x91b8>
   1f3e8:	mov	r4, r7
   1f3ec:	ldrb	r0, [r4, #1]!
   1f3f0:	cmp	r0, #32
   1f3f4:	bhi	1f40c <main@@Base+0x91cc>
   1f3f8:	mov	r0, r8
   1f3fc:	mov	r1, r7
   1f400:	mov	r2, r5
   1f404:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f408:	mov	r4, r0
   1f40c:	cmp	r4, r5
   1f410:	beq	21020 <main@@Base+0xade0>
   1f414:	ldrb	r0, [r4]
   1f418:	cmp	r0, #44	; 0x2c
   1f41c:	bne	21030 <main@@Base+0xadf0>
   1f420:	add	r1, r4, #1
   1f424:	sub	r0, r5, r1
   1f428:	cmp	r0, #2
   1f42c:	blt	1f45c <main@@Base+0x921c>
   1f430:	ldrb	r0, [r1]
   1f434:	cmp	r0, #32
   1f438:	bls	1f44c <main@@Base+0x920c>
   1f43c:	mov	r4, r1
   1f440:	cmp	r4, r5
   1f444:	bne	1f474 <main@@Base+0x9234>
   1f448:	b	21050 <main@@Base+0xae10>
   1f44c:	bne	1f45c <main@@Base+0x921c>
   1f450:	ldrb	r0, [r4, #2]!
   1f454:	cmp	r0, #32
   1f458:	bhi	1f46c <main@@Base+0x922c>
   1f45c:	mov	r0, r8
   1f460:	mov	r2, r5
   1f464:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f468:	mov	r4, r0
   1f46c:	cmp	r4, r5
   1f470:	beq	21050 <main@@Base+0xae10>
   1f474:	ldrb	r0, [r4]
   1f478:	cmp	r0, #93	; 0x5d
   1f47c:	beq	210b4 <main@@Base+0xae74>
   1f480:	mov	r0, #0
   1f484:	mov	r1, #1
   1f488:	str	r0, [fp, #-52]	; 0xffffffcc
   1f48c:	str	r0, [fp, #-56]	; 0xffffffc8
   1f490:	ldr	r0, [r8]
   1f494:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   1f498:	mov	r9, r0
   1f49c:	cmp	r0, #0
   1f4a0:	mov	r7, r4
   1f4a4:	bne	1f358 <main@@Base+0x9118>
   1f4a8:	b	21460 <main@@Base+0xb220>
   1f4ac:	cmp	r0, #125	; 0x7d
   1f4b0:	bne	21060 <main@@Base+0xae20>
   1f4b4:	ldr	r5, [sp, #44]	; 0x2c
   1f4b8:	ldr	r8, [sp, #40]	; 0x28
   1f4bc:	add	r1, r2, #1
   1f4c0:	sub	r0, r5, r1
   1f4c4:	cmp	r0, #2
   1f4c8:	ldr	sl, [sp, #36]	; 0x24
   1f4cc:	blt	21234 <main@@Base+0xaff4>
   1f4d0:	ldrb	r0, [r1]
   1f4d4:	cmp	r0, #32
   1f4d8:	bls	21214 <main@@Base+0xafd4>
   1f4dc:	ldr	r5, [sp, #44]	; 0x2c
   1f4e0:	ldr	r8, [sp, #40]	; 0x28
   1f4e4:	ldr	sl, [sp, #36]	; 0x24
   1f4e8:	mov	r4, r1
   1f4ec:	b	1c744 <main@@Base+0x6504>
   1f4f0:	mov	r0, r8
   1f4f4:	mov	r1, r5
   1f4f8:	b	21070 <main@@Base+0xae30>
   1f4fc:	ldr	r5, [sp, #44]	; 0x2c
   1f500:	ldr	r8, [sp, #40]	; 0x28
   1f504:	bne	1f514 <main@@Base+0x92d4>
   1f508:	ldrb	r0, [r7, #2]!
   1f50c:	cmp	r0, #32
   1f510:	bhi	1f524 <main@@Base+0x92e4>
   1f514:	mov	r0, r8
   1f518:	mov	r2, r5
   1f51c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f520:	mov	r7, r0
   1f524:	ldr	sl, [sp, #36]	; 0x24
   1f528:	cmp	r4, r7
   1f52c:	beq	1f708 <main@@Base+0x94c8>
   1f530:	mov	r6, #0
   1f534:	cmp	r7, r5
   1f538:	str	r6, [fp, #-52]	; 0xffffffcc
   1f53c:	str	r6, [fp, #-56]	; 0xffffffc8
   1f540:	str	r6, [fp, #-60]	; 0xffffffc4
   1f544:	str	r6, [sp, #56]	; 0x38
   1f548:	beq	1f594 <main@@Base+0x9354>
   1f54c:	sub	r0, fp, #56	; 0x38
   1f550:	mov	r1, r7
   1f554:	mov	r2, r5
   1f558:	add	r3, sp, #56	; 0x38
   1f55c:	str	r0, [sp]
   1f560:	ldr	r0, [sp, #40]	; 0x28
   1f564:	bl	38410 <flatcc_json_parser_integer@@Base>
   1f568:	cmp	r0, r7
   1f56c:	beq	1f5a4 <main@@Base+0x9364>
   1f570:	mov	r4, r0
   1f574:	ldr	r0, [sp, #56]	; 0x38
   1f578:	cmp	r0, #0
   1f57c:	beq	1f5b4 <main@@Base+0x9374>
   1f580:	ldr	r0, [sp, #40]	; 0x28
   1f584:	ldr	r2, [sp, #44]	; 0x2c
   1f588:	mov	r1, r4
   1f58c:	mov	r3, #8
   1f590:	b	1f5d0 <main@@Base+0x9390>
   1f594:	mov	r4, r5
   1f598:	cmp	r7, r4
   1f59c:	bne	1f618 <main@@Base+0x93d8>
   1f5a0:	b	1f5e0 <main@@Base+0x93a0>
   1f5a4:	mov	r4, r7
   1f5a8:	cmp	r7, r4
   1f5ac:	bne	1f618 <main@@Base+0x93d8>
   1f5b0:	b	1f5e0 <main@@Base+0x93a0>
   1f5b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f5b8:	cmp	r0, #0
   1f5bc:	beq	2100c <main@@Base+0xadcc>
   1f5c0:	ldr	r0, [sp, #40]	; 0x28
   1f5c4:	ldr	r2, [sp, #44]	; 0x2c
   1f5c8:	mov	r1, r4
   1f5cc:	mov	r3, #7
   1f5d0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1f5d4:	mov	r4, r0
   1f5d8:	cmp	r7, r4
   1f5dc:	bne	1f618 <main@@Base+0x93d8>
   1f5e0:	sub	r0, fp, #60	; 0x3c
   1f5e4:	ldr	r2, [sp, #44]	; 0x2c
   1f5e8:	mov	r1, r7
   1f5ec:	str	r0, [sp]
   1f5f0:	ldr	r0, [sp, #40]	; 0x28
   1f5f4:	ldr	r3, [pc, #3932]	; 20558 <main@@Base+0xa318>
   1f5f8:	add	r3, pc, r3
   1f5fc:	bl	25e28 <main@@Base+0xfbe8>
   1f600:	cmp	r0, r7
   1f604:	mov	r4, r0
   1f608:	ldrne	r0, [sp, #44]	; 0x2c
   1f60c:	cmpne	r4, r0
   1f610:	beq	214b0 <main@@Base+0xb270>
   1f614:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1f618:	ldr	r8, [sp, #40]	; 0x28
   1f61c:	cmp	r6, #0
   1f620:	bne	1f630 <main@@Base+0x93f0>
   1f624:	ldrb	r0, [r8, #8]
   1f628:	tst	r0, #2
   1f62c:	beq	1f014 <main@@Base+0x8dd4>
   1f630:	ldr	r0, [r8]
   1f634:	mov	r1, #21
   1f638:	mov	r2, #4
   1f63c:	mov	r3, #4
   1f640:	bl	32964 <flatcc_builder_table_add@@Base>
   1f644:	cmp	r0, #0
   1f648:	beq	214b0 <main@@Base+0xb270>
   1f64c:	str	r6, [r0]
   1f650:	b	1f8a4 <main@@Base+0x9664>
   1f654:	ldr	r5, [sp, #44]	; 0x2c
   1f658:	ldr	r8, [sp, #40]	; 0x28
   1f65c:	bne	1f66c <main@@Base+0x942c>
   1f660:	ldrb	r0, [r7, #2]!
   1f664:	cmp	r0, #32
   1f668:	bhi	1f67c <main@@Base+0x943c>
   1f66c:	mov	r0, r8
   1f670:	mov	r2, r5
   1f674:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f678:	mov	r7, r0
   1f67c:	ldr	sl, [sp, #36]	; 0x24
   1f680:	cmp	r4, r7
   1f684:	beq	1f708 <main@@Base+0x94c8>
   1f688:	mov	r6, #0
   1f68c:	cmp	r7, r5
   1f690:	str	r6, [fp, #-52]	; 0xffffffcc
   1f694:	str	r6, [fp, #-56]	; 0xffffffc8
   1f698:	str	r6, [sp, #60]	; 0x3c
   1f69c:	str	r6, [sp, #56]	; 0x38
   1f6a0:	str	r6, [fp, #-60]	; 0xffffffc4
   1f6a4:	beq	1f7ec <main@@Base+0x95ac>
   1f6a8:	sub	r0, fp, #56	; 0x38
   1f6ac:	mov	r1, r7
   1f6b0:	mov	r2, r5
   1f6b4:	sub	r3, fp, #60	; 0x3c
   1f6b8:	str	r0, [sp]
   1f6bc:	ldr	r0, [sp, #40]	; 0x28
   1f6c0:	bl	38410 <flatcc_json_parser_integer@@Base>
   1f6c4:	cmp	r0, r7
   1f6c8:	beq	1f800 <main@@Base+0x95c0>
   1f6cc:	mov	r4, r0
   1f6d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f6d4:	cmp	r0, #0
   1f6d8:	beq	1f818 <main@@Base+0x95d8>
   1f6dc:	ldr	r0, [sp, #40]	; 0x28
   1f6e0:	ldr	r2, [sp, #44]	; 0x2c
   1f6e4:	mov	r1, r4
   1f6e8:	mov	r3, #8
   1f6ec:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1f6f0:	mov	r4, r0
   1f6f4:	mov	r6, #0
   1f6f8:	mov	r9, #0
   1f6fc:	cmp	r7, r4
   1f700:	bne	1f86c <main@@Base+0x962c>
   1f704:	b	1f830 <main@@Base+0x95f0>
   1f708:	mov	r0, r8
   1f70c:	mov	r1, r4
   1f710:	mov	r2, r5
   1f714:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   1f718:	mov	r4, r0
   1f71c:	sub	r0, r5, r4
   1f720:	cmp	r0, #2
   1f724:	blt	1f758 <main@@Base+0x9518>
   1f728:	ldrb	r0, [r4]
   1f72c:	cmp	r0, #32
   1f730:	bls	1f744 <main@@Base+0x9504>
   1f734:	mov	r2, r4
   1f738:	cmp	r2, r5
   1f73c:	bne	1f774 <main@@Base+0x9534>
   1f740:	b	213b8 <main@@Base+0xb178>
   1f744:	bne	1f758 <main@@Base+0x9518>
   1f748:	mov	r2, r4
   1f74c:	ldrb	r0, [r2, #1]!
   1f750:	cmp	r0, #32
   1f754:	bhi	1f76c <main@@Base+0x952c>
   1f758:	mov	r0, r8
   1f75c:	mov	r1, r4
   1f760:	mov	r2, r5
   1f764:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f768:	mov	r2, r0
   1f76c:	cmp	r2, r5
   1f770:	beq	213b8 <main@@Base+0xb178>
   1f774:	ldrb	r0, [r2]
   1f778:	cmp	r0, #44	; 0x2c
   1f77c:	bne	213c0 <main@@Base+0xb180>
   1f780:	add	r1, r2, #1
   1f784:	sub	r0, r5, r1
   1f788:	cmp	r0, #2
   1f78c:	blt	1f7bc <main@@Base+0x957c>
   1f790:	ldrb	r0, [r1]
   1f794:	cmp	r0, #32
   1f798:	bls	1f7ac <main@@Base+0x956c>
   1f79c:	mov	r2, r1
   1f7a0:	cmp	r2, r5
   1f7a4:	bne	1f7d4 <main@@Base+0x9594>
   1f7a8:	b	21410 <main@@Base+0xb1d0>
   1f7ac:	bne	1f7bc <main@@Base+0x957c>
   1f7b0:	ldrb	r0, [r2, #2]!
   1f7b4:	cmp	r0, #32
   1f7b8:	bhi	1f7cc <main@@Base+0x958c>
   1f7bc:	mov	r0, r8
   1f7c0:	mov	r2, r5
   1f7c4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f7c8:	mov	r2, r0
   1f7cc:	cmp	r2, r5
   1f7d0:	beq	21410 <main@@Base+0xb1d0>
   1f7d4:	ldrb	r0, [r2]
   1f7d8:	movw	lr, #29556	; 0x7374
   1f7dc:	movt	lr, #29797	; 0x7465
   1f7e0:	cmp	r0, #125	; 0x7d
   1f7e4:	bne	174b8 <main@@Base+0x1278>
   1f7e8:	b	213c8 <main@@Base+0xb188>
   1f7ec:	mov	r9, #0
   1f7f0:	mov	r4, r5
   1f7f4:	cmp	r7, r4
   1f7f8:	bne	1f86c <main@@Base+0x962c>
   1f7fc:	b	1f830 <main@@Base+0x95f0>
   1f800:	mov	r6, #0
   1f804:	mov	r9, #0
   1f808:	mov	r4, r7
   1f80c:	cmp	r7, r4
   1f810:	bne	1f86c <main@@Base+0x962c>
   1f814:	b	1f830 <main@@Base+0x95f0>
   1f818:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1f81c:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1f820:	str	r9, [sp, #60]	; 0x3c
   1f824:	str	r6, [sp, #56]	; 0x38
   1f828:	cmp	r7, r4
   1f82c:	bne	1f86c <main@@Base+0x962c>
   1f830:	add	r0, sp, #56	; 0x38
   1f834:	ldr	r2, [sp, #44]	; 0x2c
   1f838:	mov	r1, r7
   1f83c:	str	r0, [sp]
   1f840:	ldr	r0, [sp, #40]	; 0x28
   1f844:	ldr	r3, [pc, #4056]	; 20824 <main@@Base+0xa5e4>
   1f848:	add	r3, pc, r3
   1f84c:	bl	2602c <main@@Base+0xfdec>
   1f850:	cmp	r0, r7
   1f854:	mov	r4, r0
   1f858:	ldrne	r0, [sp, #44]	; 0x2c
   1f85c:	cmpne	r4, r0
   1f860:	beq	214b0 <main@@Base+0xb270>
   1f864:	ldr	r6, [sp, #56]	; 0x38
   1f868:	ldr	r9, [sp, #60]	; 0x3c
   1f86c:	ldr	r8, [sp, #40]	; 0x28
   1f870:	orrs	r0, r6, r9
   1f874:	bne	1f884 <main@@Base+0x9644>
   1f878:	ldrb	r0, [r8, #8]
   1f87c:	tst	r0, #2
   1f880:	beq	1f014 <main@@Base+0x8dd4>
   1f884:	ldr	r0, [r8]
   1f888:	mov	r1, #23
   1f88c:	mov	r2, #8
   1f890:	mov	r3, #8
   1f894:	bl	32964 <flatcc_builder_table_add@@Base>
   1f898:	cmp	r0, #0
   1f89c:	beq	214b0 <main@@Base+0xb270>
   1f8a0:	stm	r0, {r6, r9}
   1f8a4:	ldr	r8, [sp, #40]	; 0x28
   1f8a8:	ldr	r5, [sp, #44]	; 0x2c
   1f8ac:	b	1a5c4 <main@@Base+0x4384>
   1f8b0:	ldr	sl, [sp, #36]	; 0x24
   1f8b4:	mov	r4, r5
   1f8b8:	b	1d7c0 <main@@Base+0x7580>
   1f8bc:	bne	1f8cc <main@@Base+0x968c>
   1f8c0:	ldrb	r0, [r4, #2]!
   1f8c4:	cmp	r0, #32
   1f8c8:	bhi	1f8dc <main@@Base+0x969c>
   1f8cc:	ldr	r0, [sp, #40]	; 0x28
   1f8d0:	ldr	r2, [sp, #44]	; 0x2c
   1f8d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1f8d8:	mov	r4, r0
   1f8dc:	ldr	r2, [sp, #44]	; 0x2c
   1f8e0:	cmp	r4, r2
   1f8e4:	beq	1f92c <main@@Base+0x96ec>
   1f8e8:	ldrb	r0, [r4]
   1f8ec:	cmp	r0, #125	; 0x7d
   1f8f0:	bne	1f928 <main@@Base+0x96e8>
   1f8f4:	ldr	r0, [sp, #44]	; 0x2c
   1f8f8:	add	r1, r4, #1
   1f8fc:	sub	r0, r0, r1
   1f900:	cmp	r0, #2
   1f904:	blt	213a8 <main@@Base+0xb168>
   1f908:	ldrb	r0, [r1]
   1f90c:	cmp	r0, #32
   1f910:	bhi	211a8 <main@@Base+0xaf68>
   1f914:	bne	213a8 <main@@Base+0xb168>
   1f918:	ldrb	r0, [r4, #2]!
   1f91c:	cmp	r0, #32
   1f920:	bhi	1d354 <main@@Base+0x7114>
   1f924:	b	213a8 <main@@Base+0xb168>
   1f928:	mov	r2, r4
   1f92c:	ldr	r5, [sp, #44]	; 0x2c
   1f930:	ldr	r6, [sp, #40]	; 0x28
   1f934:	cmp	r2, r5
   1f938:	mov	r9, r5
   1f93c:	beq	1f990 <main@@Base+0x9750>
   1f940:	ldrb	r0, [r2]
   1f944:	cmp	r0, #46	; 0x2e
   1f948:	beq	1f964 <main@@Base+0x9724>
   1f94c:	cmp	r0, #34	; 0x22
   1f950:	bne	1f980 <main@@Base+0x9740>
   1f954:	ldr	r0, [sp, #32]
   1f958:	mov	r1, #0
   1f95c:	add	r9, r2, #1
   1f960:	b	1f98c <main@@Base+0x974c>
   1f964:	mov	r1, r2
   1f968:	mov	r0, r6
   1f96c:	mov	r2, r5
   1f970:	mov	r3, #5
   1f974:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1f978:	mov	r9, r0
   1f97c:	b	1f990 <main@@Base+0x9750>
   1f980:	ldr	r0, [sp, #32]
   1f984:	mov	r1, #1
   1f988:	mov	r9, r2
   1f98c:	str	r1, [r0]
   1f990:	sub	lr, r5, r9
   1f994:	mov	r1, #8
   1f998:	cmp	lr, #8
   1f99c:	movcc	r1, lr
   1f9a0:	and	r1, r1, #15
   1f9a4:	sub	r2, r1, #1
   1f9a8:	cmp	r2, #7
   1f9ac:	bhi	20120 <main@@Base+0x9ee0>
   1f9b0:	add	r0, pc, #36	; 0x24
   1f9b4:	mov	r1, #0
   1f9b8:	mov	ip, #0
   1f9bc:	mov	r8, #0
   1f9c0:	mov	r7, #0
   1f9c4:	mov	r3, #0
   1f9c8:	mov	r6, #0
   1f9cc:	mov	r4, #0
   1f9d0:	ldr	r5, [r0, r2, lsl #2]
   1f9d4:	mov	r2, #0
   1f9d8:	add	pc, r0, r5
   1f9dc:	andeq	r0, r0, r4, rrx
   1f9e0:	andeq	r0, r0, ip, asr r0
   1f9e4:	andeq	r0, r0, r4, asr r0
   1f9e8:	andeq	r0, r0, ip, asr #32
   1f9ec:	andeq	r0, r0, r0, asr #32
   1f9f0:	andeq	r0, r0, r4, lsr r0
   1f9f4:	andeq	r0, r0, r4, lsr #32
   1f9f8:	andeq	r0, r0, r0, lsr #32
   1f9fc:	ldrb	ip, [r9, #7]
   1fa00:	ldrb	r0, [r9, #6]
   1fa04:	mov	r8, r1
   1fa08:	orr	r0, ip, r0, lsl #8
   1fa0c:	mov	r1, r0
   1fa10:	ldrb	r0, [r9, #5]
   1fa14:	mov	r7, r8
   1fa18:	orr	r1, r1, r0, lsl #16
   1fa1c:	ldrb	r0, [r9, #4]
   1fa20:	mov	r3, r7
   1fa24:	orr	r1, r1, r0, lsl #24
   1fa28:	ldrb	r0, [r9, #3]
   1fa2c:	orr	r6, r0, r3
   1fa30:	ldrb	r0, [r9, #2]
   1fa34:	orr	r4, r6, r0, lsl #8
   1fa38:	ldrb	r0, [r9, #1]
   1fa3c:	orr	r2, r4, r0, lsl #16
   1fa40:	ldrb	r0, [r9]
   1fa44:	orr	r2, r2, r0, lsl #24
   1fa48:	movw	r0, #65535	; 0xffff
   1fa4c:	movt	r0, #26979	; 0x6963
   1fa50:	cmp	r2, r0
   1fa54:	bhi	1fabc <main@@Base+0x987c>
   1fa58:	movw	r0, #30062	; 0x756e
   1fa5c:	and	r1, r1, #-16777216	; 0xff000000
   1fa60:	movt	r0, #25455	; 0x636f
   1fa64:	eor	r1, r1, #1946157056	; 0x74000000
   1fa68:	eor	r0, r2, r0
   1fa6c:	orrs	r0, r1, r0
   1fa70:	bne	20120 <main@@Base+0x9ee0>
   1fa74:	cmp	lr, #6
   1fa78:	mov	r7, r9
   1fa7c:	blt	1fdc4 <main@@Base+0x9b84>
   1fa80:	ldr	r2, [sp, #32]
   1fa84:	mov	r1, r9
   1fa88:	ldrb	r0, [r1, #5]!
   1fa8c:	ldr	r2, [r2]
   1fa90:	cmp	r2, #0
   1fa94:	beq	1fb78 <main@@Base+0x9938>
   1fa98:	cmp	r0, #33	; 0x21
   1fa9c:	bcc	1faac <main@@Base+0x986c>
   1faa0:	cmp	r0, #58	; 0x3a
   1faa4:	mov	r7, r9
   1faa8:	bne	1fdc4 <main@@Base+0x9b84>
   1faac:	ldr	r0, [sp, #32]
   1fab0:	mov	r2, #0
   1fab4:	str	r2, [r0]
   1fab8:	b	1fb88 <main@@Base+0x9948>
   1fabc:	movw	r1, #27648	; 0x6c00
   1fac0:	bic	r0, r2, #255	; 0xff
   1fac4:	movt	r1, #30305	; 0x7661
   1fac8:	teq	r0, r1
   1facc:	bne	1fb1c <main@@Base+0x98dc>
   1fad0:	cmp	lr, #4
   1fad4:	mov	r7, r9
   1fad8:	blt	1ff3c <main@@Base+0x9cfc>
   1fadc:	ldr	r2, [sp, #32]
   1fae0:	mov	r1, r9
   1fae4:	ldrb	r0, [r1, #3]!
   1fae8:	ldr	r2, [r2]
   1faec:	cmp	r2, #0
   1faf0:	beq	1fbac <main@@Base+0x996c>
   1faf4:	cmp	r0, #33	; 0x21
   1faf8:	bcc	1fb08 <main@@Base+0x98c8>
   1fafc:	cmp	r0, #58	; 0x3a
   1fb00:	mov	r7, r9
   1fb04:	bne	1ff3c <main@@Base+0x9cfc>
   1fb08:	ldr	r0, [sp, #32]
   1fb0c:	mov	r2, #0
   1fb10:	str	r2, [r0]
   1fb14:	b	1fbbc <main@@Base+0x997c>
   1fb18:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   1fb1c:	movw	r0, #0
   1fb20:	bfc	r2, #0, #16
   1fb24:	movt	r0, #26980	; 0x6964
   1fb28:	teq	r2, r0
   1fb2c:	bne	20120 <main@@Base+0x9ee0>
   1fb30:	cmp	lr, #3
   1fb34:	mov	r1, r9
   1fb38:	blt	200cc <main@@Base+0x9e8c>
   1fb3c:	ldr	r1, [sp, #32]
   1fb40:	mov	r2, r9
   1fb44:	ldrb	r0, [r2, #2]!
   1fb48:	ldr	r1, [r1]
   1fb4c:	cmp	r1, #0
   1fb50:	beq	1fbe0 <main@@Base+0x99a0>
   1fb54:	cmp	r0, #33	; 0x21
   1fb58:	bcc	1fb68 <main@@Base+0x9928>
   1fb5c:	cmp	r0, #58	; 0x3a
   1fb60:	mov	r1, r9
   1fb64:	bne	200cc <main@@Base+0x9e8c>
   1fb68:	ldr	r0, [sp, #32]
   1fb6c:	mov	r1, #0
   1fb70:	str	r1, [r0]
   1fb74:	b	1fbf0 <main@@Base+0x99b0>
   1fb78:	cmp	r0, #34	; 0x22
   1fb7c:	mov	r7, r9
   1fb80:	bne	1fdc4 <main@@Base+0x9b84>
   1fb84:	add	r1, r9, #6
   1fb88:	ldr	r0, [sp, #44]	; 0x2c
   1fb8c:	sub	r0, r0, r1
   1fb90:	cmp	r0, #2
   1fb94:	blt	1fc28 <main@@Base+0x99e8>
   1fb98:	ldrb	r0, [r1]
   1fb9c:	cmp	r0, #32
   1fba0:	bls	1fc14 <main@@Base+0x99d4>
   1fba4:	mov	r7, r1
   1fba8:	b	1fc38 <main@@Base+0x99f8>
   1fbac:	cmp	r0, #34	; 0x22
   1fbb0:	mov	r7, r9
   1fbb4:	bne	1ff3c <main@@Base+0x9cfc>
   1fbb8:	add	r1, r9, #4
   1fbbc:	ldr	r0, [sp, #44]	; 0x2c
   1fbc0:	sub	r0, r0, r1
   1fbc4:	cmp	r0, #2
   1fbc8:	blt	1fcac <main@@Base+0x9a6c>
   1fbcc:	ldrb	r0, [r1]
   1fbd0:	cmp	r0, #32
   1fbd4:	bls	1fc98 <main@@Base+0x9a58>
   1fbd8:	mov	r7, r1
   1fbdc:	b	1fcbc <main@@Base+0x9a7c>
   1fbe0:	cmp	r0, #34	; 0x22
   1fbe4:	mov	r1, r9
   1fbe8:	bne	200cc <main@@Base+0x9e8c>
   1fbec:	add	r2, r9, #3
   1fbf0:	ldr	r0, [sp, #44]	; 0x2c
   1fbf4:	sub	r0, r0, r2
   1fbf8:	cmp	r0, #2
   1fbfc:	blt	1fd34 <main@@Base+0x9af4>
   1fc00:	ldrb	r0, [r2]
   1fc04:	cmp	r0, #32
   1fc08:	bls	1fd20 <main@@Base+0x9ae0>
   1fc0c:	mov	r1, r2
   1fc10:	b	1fd48 <main@@Base+0x9b08>
   1fc14:	bne	1fc28 <main@@Base+0x99e8>
   1fc18:	mov	r7, r1
   1fc1c:	ldrb	r0, [r7, #1]!
   1fc20:	cmp	r0, #32
   1fc24:	bhi	1fc38 <main@@Base+0x99f8>
   1fc28:	ldr	r0, [sp, #40]	; 0x28
   1fc2c:	ldr	r2, [sp, #44]	; 0x2c
   1fc30:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1fc34:	mov	r7, r0
   1fc38:	ldr	r0, [sp, #44]	; 0x2c
   1fc3c:	cmp	r7, r0
   1fc40:	beq	1fc80 <main@@Base+0x9a40>
   1fc44:	ldrb	r0, [r7]
   1fc48:	cmp	r0, #58	; 0x3a
   1fc4c:	bne	1fc80 <main@@Base+0x9a40>
   1fc50:	ldr	r0, [sp, #44]	; 0x2c
   1fc54:	add	r1, r7, #1
   1fc58:	sub	r0, r0, r1
   1fc5c:	cmp	r0, #2
   1fc60:	blt	1fdb4 <main@@Base+0x9b74>
   1fc64:	ldrb	r0, [r1]
   1fc68:	cmp	r0, #32
   1fc6c:	bls	1fda4 <main@@Base+0x9b64>
   1fc70:	mov	r7, r1
   1fc74:	cmp	r9, r7
   1fc78:	bne	1fdcc <main@@Base+0x9b8c>
   1fc7c:	b	20120 <main@@Base+0x9ee0>
   1fc80:	ldr	r0, [sp, #40]	; 0x28
   1fc84:	ldr	r2, [sp, #44]	; 0x2c
   1fc88:	mov	r1, r7
   1fc8c:	mov	r3, #4
   1fc90:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1fc94:	b	1fdc0 <main@@Base+0x9b80>
   1fc98:	bne	1fcac <main@@Base+0x9a6c>
   1fc9c:	mov	r7, r1
   1fca0:	ldrb	r0, [r7, #1]!
   1fca4:	cmp	r0, #32
   1fca8:	bhi	1fcbc <main@@Base+0x9a7c>
   1fcac:	ldr	r0, [sp, #40]	; 0x28
   1fcb0:	ldr	r2, [sp, #44]	; 0x2c
   1fcb4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1fcb8:	mov	r7, r0
   1fcbc:	ldr	r0, [sp, #44]	; 0x2c
   1fcc0:	cmp	r7, r0
   1fcc4:	beq	1fd04 <main@@Base+0x9ac4>
   1fcc8:	ldrb	r0, [r7]
   1fccc:	cmp	r0, #58	; 0x3a
   1fcd0:	bne	1fd04 <main@@Base+0x9ac4>
   1fcd4:	ldr	r0, [sp, #44]	; 0x2c
   1fcd8:	add	r1, r7, #1
   1fcdc:	sub	r0, r0, r1
   1fce0:	cmp	r0, #2
   1fce4:	blt	1ff2c <main@@Base+0x9cec>
   1fce8:	ldrb	r0, [r1]
   1fcec:	cmp	r0, #32
   1fcf0:	bls	1ff1c <main@@Base+0x9cdc>
   1fcf4:	mov	r7, r1
   1fcf8:	cmp	r9, r7
   1fcfc:	bne	1ff44 <main@@Base+0x9d04>
   1fd00:	b	20120 <main@@Base+0x9ee0>
   1fd04:	ldr	r0, [sp, #40]	; 0x28
   1fd08:	ldr	r2, [sp, #44]	; 0x2c
   1fd0c:	mov	r1, r7
   1fd10:	mov	r3, #4
   1fd14:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1fd18:	b	1ff38 <main@@Base+0x9cf8>
   1fd1c:	andeq	r0, r4, r0, lsr #8
   1fd20:	bne	1fd34 <main@@Base+0x9af4>
   1fd24:	mov	r1, r2
   1fd28:	ldrb	r0, [r1, #1]!
   1fd2c:	cmp	r0, #32
   1fd30:	bhi	1fd48 <main@@Base+0x9b08>
   1fd34:	mov	r1, r2
   1fd38:	ldr	r0, [sp, #40]	; 0x28
   1fd3c:	ldr	r2, [sp, #44]	; 0x2c
   1fd40:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1fd44:	mov	r1, r0
   1fd48:	ldr	r0, [sp, #44]	; 0x2c
   1fd4c:	cmp	r1, r0
   1fd50:	beq	1fd90 <main@@Base+0x9b50>
   1fd54:	ldrb	r0, [r1]
   1fd58:	cmp	r0, #58	; 0x3a
   1fd5c:	bne	1fd90 <main@@Base+0x9b50>
   1fd60:	ldr	r0, [sp, #44]	; 0x2c
   1fd64:	add	r2, r1, #1
   1fd68:	sub	r0, r0, r2
   1fd6c:	cmp	r0, #2
   1fd70:	blt	200b8 <main@@Base+0x9e78>
   1fd74:	ldrb	r0, [r2]
   1fd78:	cmp	r0, #32
   1fd7c:	bls	200a8 <main@@Base+0x9e68>
   1fd80:	mov	r1, r2
   1fd84:	cmp	r9, r1
   1fd88:	bne	200d4 <main@@Base+0x9e94>
   1fd8c:	b	20120 <main@@Base+0x9ee0>
   1fd90:	ldr	r0, [sp, #40]	; 0x28
   1fd94:	ldr	r2, [sp, #44]	; 0x2c
   1fd98:	mov	r3, #4
   1fd9c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1fda0:	b	200c8 <main@@Base+0x9e88>
   1fda4:	bne	1fdb4 <main@@Base+0x9b74>
   1fda8:	ldrb	r0, [r7, #2]!
   1fdac:	cmp	r0, #32
   1fdb0:	bhi	1fdc4 <main@@Base+0x9b84>
   1fdb4:	ldr	r0, [sp, #40]	; 0x28
   1fdb8:	ldr	r2, [sp, #44]	; 0x2c
   1fdbc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1fdc0:	mov	r7, r0
   1fdc4:	cmp	r9, r7
   1fdc8:	beq	20120 <main@@Base+0x9ee0>
   1fdcc:	ldr	r0, [sp, #44]	; 0x2c
   1fdd0:	mov	r6, #0
   1fdd4:	str	r6, [fp, #-52]	; 0xffffffcc
   1fdd8:	str	r6, [fp, #-56]	; 0xffffffc8
   1fddc:	strh	r6, [fp, #-60]	; 0xffffffc4
   1fde0:	str	r6, [sp, #56]	; 0x38
   1fde4:	cmp	r7, r0
   1fde8:	beq	1fe34 <main@@Base+0x9bf4>
   1fdec:	sub	r0, fp, #56	; 0x38
   1fdf0:	ldr	r2, [sp, #44]	; 0x2c
   1fdf4:	mov	r1, r7
   1fdf8:	add	r3, sp, #56	; 0x38
   1fdfc:	str	r0, [sp]
   1fe00:	ldr	r0, [sp, #40]	; 0x28
   1fe04:	bl	38410 <flatcc_json_parser_integer@@Base>
   1fe08:	cmp	r0, r7
   1fe0c:	beq	1fe44 <main@@Base+0x9c04>
   1fe10:	mov	r4, r0
   1fe14:	ldr	r0, [sp, #56]	; 0x38
   1fe18:	cmp	r0, #0
   1fe1c:	beq	1fe54 <main@@Base+0x9c14>
   1fe20:	ldr	r0, [sp, #40]	; 0x28
   1fe24:	ldr	r2, [sp, #44]	; 0x2c
   1fe28:	mov	r1, r4
   1fe2c:	mov	r3, #8
   1fe30:	b	1fe78 <main@@Base+0x9c38>
   1fe34:	ldr	r4, [sp, #44]	; 0x2c
   1fe38:	cmp	r7, r4
   1fe3c:	bne	1fec0 <main@@Base+0x9c80>
   1fe40:	b	1fe88 <main@@Base+0x9c48>
   1fe44:	mov	r4, r7
   1fe48:	cmp	r7, r4
   1fe4c:	bne	1fec0 <main@@Base+0x9c80>
   1fe50:	b	1fe88 <main@@Base+0x9c48>
   1fe54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fe58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fe5c:	subs	r2, r0, #65536	; 0x10000
   1fe60:	sbcs	r1, r1, #0
   1fe64:	bcc	1ff04 <main@@Base+0x9cc4>
   1fe68:	ldr	r0, [sp, #40]	; 0x28
   1fe6c:	ldr	r2, [sp, #44]	; 0x2c
   1fe70:	mov	r1, r4
   1fe74:	mov	r3, #7
   1fe78:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1fe7c:	mov	r4, r0
   1fe80:	cmp	r7, r4
   1fe84:	bne	1fec0 <main@@Base+0x9c80>
   1fe88:	sub	r0, fp, #60	; 0x3c
   1fe8c:	ldr	r2, [sp, #44]	; 0x2c
   1fe90:	mov	r1, r7
   1fe94:	str	r0, [sp]
   1fe98:	ldr	r0, [sp, #40]	; 0x28
   1fe9c:	ldr	r3, [pc, #3972]	; 20e28 <main@@Base+0xabe8>
   1fea0:	add	r3, pc, r3
   1fea4:	bl	2dbb4 <main@@Base+0x17974>
   1fea8:	cmp	r0, r7
   1feac:	mov	r4, r0
   1feb0:	ldrne	r0, [sp, #44]	; 0x2c
   1feb4:	cmpne	r4, r0
   1feb8:	beq	1d364 <main@@Base+0x7124>
   1febc:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1fec0:	movw	r0, #65535	; 0xffff
   1fec4:	tst	r6, r0
   1fec8:	bne	1fedc <main@@Base+0x9c9c>
   1fecc:	ldr	r0, [sp, #40]	; 0x28
   1fed0:	ldrb	r0, [r0, #8]
   1fed4:	tst	r0, #2
   1fed8:	beq	20114 <main@@Base+0x9ed4>
   1fedc:	ldr	r0, [sp, #40]	; 0x28
   1fee0:	mov	r1, #2
   1fee4:	mov	r2, #2
   1fee8:	mov	r3, #2
   1feec:	ldr	r0, [r0]
   1fef0:	bl	32964 <flatcc_builder_table_add@@Base>
   1fef4:	cmp	r0, #0
   1fef8:	beq	1d364 <main@@Base+0x7124>
   1fefc:	strh	r6, [r0]
   1ff00:	b	20114 <main@@Base+0x9ed4>
   1ff04:	mov	r6, r0
   1ff08:	strh	r0, [fp, #-60]	; 0xffffffc4
   1ff0c:	cmp	r7, r4
   1ff10:	bne	1fec0 <main@@Base+0x9c80>
   1ff14:	b	1fe88 <main@@Base+0x9c48>
   1ff18:	andeq	r0, r4, ip, ror r1
   1ff1c:	bne	1ff2c <main@@Base+0x9cec>
   1ff20:	ldrb	r0, [r7, #2]!
   1ff24:	cmp	r0, #32
   1ff28:	bhi	1ff3c <main@@Base+0x9cfc>
   1ff2c:	ldr	r0, [sp, #40]	; 0x28
   1ff30:	ldr	r2, [sp, #44]	; 0x2c
   1ff34:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   1ff38:	mov	r7, r0
   1ff3c:	cmp	r9, r7
   1ff40:	beq	20120 <main@@Base+0x9ee0>
   1ff44:	ldr	r0, [sp, #44]	; 0x2c
   1ff48:	mov	r6, #0
   1ff4c:	str	r6, [fp, #-52]	; 0xffffffcc
   1ff50:	str	r6, [fp, #-56]	; 0xffffffc8
   1ff54:	str	r6, [sp, #60]	; 0x3c
   1ff58:	str	r6, [sp, #56]	; 0x38
   1ff5c:	str	r6, [fp, #-60]	; 0xffffffc4
   1ff60:	cmp	r7, r0
   1ff64:	beq	1ffc0 <main@@Base+0x9d80>
   1ff68:	sub	r0, fp, #56	; 0x38
   1ff6c:	ldr	r2, [sp, #44]	; 0x2c
   1ff70:	mov	r1, r7
   1ff74:	sub	r3, fp, #60	; 0x3c
   1ff78:	str	r0, [sp]
   1ff7c:	ldr	r0, [sp, #40]	; 0x28
   1ff80:	bl	38410 <flatcc_json_parser_integer@@Base>
   1ff84:	cmp	r0, r7
   1ff88:	beq	1ffc8 <main@@Base+0x9d88>
   1ff8c:	sub	r9, fp, #60	; 0x3c
   1ff90:	mov	r4, r0
   1ff94:	ldm	r9, {r0, r6, r9}
   1ff98:	cmp	r0, #0
   1ff9c:	beq	1ffe0 <main@@Base+0x9da0>
   1ffa0:	subs	r0, r6, #1
   1ffa4:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1ffa8:	bcc	20014 <main@@Base+0x9dd4>
   1ffac:	ldr	r0, [sp, #40]	; 0x28
   1ffb0:	ldr	r2, [sp, #44]	; 0x2c
   1ffb4:	mov	r1, r4
   1ffb8:	mov	r3, #8
   1ffbc:	b	1fff8 <main@@Base+0x9db8>
   1ffc0:	ldr	r4, [sp, #44]	; 0x2c
   1ffc4:	b	20004 <main@@Base+0x9dc4>
   1ffc8:	mov	r6, #0
   1ffcc:	mov	r9, #0
   1ffd0:	mov	r4, r7
   1ffd4:	cmp	r7, r4
   1ffd8:	bne	20068 <main@@Base+0x9e28>
   1ffdc:	b	2002c <main@@Base+0x9dec>
   1ffe0:	cmn	r9, #1
   1ffe4:	bgt	2001c <main@@Base+0x9ddc>
   1ffe8:	ldr	r0, [sp, #40]	; 0x28
   1ffec:	ldr	r2, [sp, #44]	; 0x2c
   1fff0:	mov	r1, r4
   1fff4:	mov	r3, #7
   1fff8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   1fffc:	mov	r4, r0
   20000:	mov	r6, #0
   20004:	mov	r9, #0
   20008:	cmp	r7, r4
   2000c:	bne	20068 <main@@Base+0x9e28>
   20010:	b	2002c <main@@Base+0x9dec>
   20014:	rsbs	r6, r6, #0
   20018:	rsc	r9, r9, #0
   2001c:	str	r6, [sp, #56]	; 0x38
   20020:	str	r9, [sp, #60]	; 0x3c
   20024:	cmp	r7, r4
   20028:	bne	20068 <main@@Base+0x9e28>
   2002c:	add	r0, sp, #56	; 0x38
   20030:	ldr	r2, [sp, #44]	; 0x2c
   20034:	mov	r1, r7
   20038:	str	r0, [sp]
   2003c:	ldr	r0, [sp, #40]	; 0x28
   20040:	ldr	r3, [pc, #4068]	; 2102c <main@@Base+0xadec>
   20044:	add	r3, pc, r3
   20048:	bl	25c0c <main@@Base+0xf9cc>
   2004c:	cmp	r0, r7
   20050:	mov	r4, r0
   20054:	ldrne	r0, [sp, #44]	; 0x2c
   20058:	cmpne	r4, r0
   2005c:	beq	1d364 <main@@Base+0x7124>
   20060:	ldr	r6, [sp, #56]	; 0x38
   20064:	ldr	r9, [sp, #60]	; 0x3c
   20068:	orrs	r0, r6, r9
   2006c:	bne	20080 <main@@Base+0x9e40>
   20070:	ldr	r0, [sp, #40]	; 0x28
   20074:	ldrb	r0, [r0, #8]
   20078:	tst	r0, #2
   2007c:	beq	20114 <main@@Base+0x9ed4>
   20080:	ldr	r0, [sp, #40]	; 0x28
   20084:	mov	r1, #1
   20088:	mov	r2, #8
   2008c:	mov	r3, #8
   20090:	ldr	r0, [r0]
   20094:	bl	32964 <flatcc_builder_table_add@@Base>
   20098:	cmp	r0, #0
   2009c:	beq	1d364 <main@@Base+0x7124>
   200a0:	stm	r0, {r6, r9}
   200a4:	b	20114 <main@@Base+0x9ed4>
   200a8:	bne	200b8 <main@@Base+0x9e78>
   200ac:	ldrb	r0, [r1, #2]!
   200b0:	cmp	r0, #32
   200b4:	bhi	200cc <main@@Base+0x9e8c>
   200b8:	mov	r1, r2
   200bc:	ldr	r0, [sp, #40]	; 0x28
   200c0:	ldr	r2, [sp, #44]	; 0x2c
   200c4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   200c8:	mov	r1, r0
   200cc:	cmp	r9, r1
   200d0:	beq	20120 <main@@Base+0x9ee0>
   200d4:	ldr	r0, [sp, #40]	; 0x28
   200d8:	ldr	r2, [sp, #44]	; 0x2c
   200dc:	add	r3, sp, #64	; 0x40
   200e0:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   200e4:	mov	r4, r0
   200e8:	ldr	r0, [sp, #64]	; 0x40
   200ec:	cmp	r0, #0
   200f0:	beq	1d364 <main@@Base+0x7124>
   200f4:	ldr	r0, [sp, #40]	; 0x28
   200f8:	mov	r1, #0
   200fc:	ldr	r0, [r0]
   20100:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   20104:	cmp	r0, #0
   20108:	beq	1d364 <main@@Base+0x7124>
   2010c:	ldr	r1, [sp, #64]	; 0x40
   20110:	str	r1, [r0]
   20114:	ldr	r5, [sp, #44]	; 0x2c
   20118:	ldr	r6, [sp, #40]	; 0x28
   2011c:	b	2013c <main@@Base+0x9efc>
   20120:	ldr	r6, [sp, #40]	; 0x28
   20124:	ldr	r5, [sp, #44]	; 0x2c
   20128:	mov	r1, r9
   2012c:	mov	r0, r6
   20130:	mov	r2, r5
   20134:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   20138:	mov	r4, r0
   2013c:	sub	r0, r5, r4
   20140:	cmp	r0, #2
   20144:	blt	20178 <main@@Base+0x9f38>
   20148:	ldrb	r0, [r4]
   2014c:	cmp	r0, #32
   20150:	bls	20164 <main@@Base+0x9f24>
   20154:	mov	r2, r4
   20158:	cmp	r2, r5
   2015c:	bne	20194 <main@@Base+0x9f54>
   20160:	b	21178 <main@@Base+0xaf38>
   20164:	bne	20178 <main@@Base+0x9f38>
   20168:	mov	r2, r4
   2016c:	ldrb	r0, [r2, #1]!
   20170:	cmp	r0, #32
   20174:	bhi	2018c <main@@Base+0x9f4c>
   20178:	mov	r0, r6
   2017c:	mov	r1, r4
   20180:	mov	r2, r5
   20184:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20188:	mov	r2, r0
   2018c:	cmp	r2, r5
   20190:	beq	21178 <main@@Base+0xaf38>
   20194:	ldrb	r0, [r2]
   20198:	cmp	r0, #44	; 0x2c
   2019c:	bne	21180 <main@@Base+0xaf40>
   201a0:	add	r1, r2, #1
   201a4:	sub	r0, r5, r1
   201a8:	cmp	r0, #2
   201ac:	blt	201dc <main@@Base+0x9f9c>
   201b0:	ldrb	r0, [r1]
   201b4:	cmp	r0, #32
   201b8:	bls	201cc <main@@Base+0x9f8c>
   201bc:	mov	r2, r1
   201c0:	cmp	r2, r5
   201c4:	bne	201f4 <main@@Base+0x9fb4>
   201c8:	b	211cc <main@@Base+0xaf8c>
   201cc:	bne	201dc <main@@Base+0x9f9c>
   201d0:	ldrb	r0, [r2, #2]!
   201d4:	cmp	r0, #32
   201d8:	bhi	201ec <main@@Base+0x9fac>
   201dc:	mov	r0, r6
   201e0:	mov	r2, r5
   201e4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   201e8:	mov	r2, r0
   201ec:	cmp	r2, r5
   201f0:	beq	211cc <main@@Base+0xaf8c>
   201f4:	ldrb	r0, [r2]
   201f8:	cmp	r0, #125	; 0x7d
   201fc:	bne	1f934 <main@@Base+0x96f4>
   20200:	add	r1, r2, #1
   20204:	sub	r0, r5, r1
   20208:	cmp	r0, #2
   2020c:	blt	213a8 <main@@Base+0xb168>
   20210:	b	2119c <main@@Base+0xaf5c>
   20214:	cmp	r0, #93	; 0x5d
   20218:	bne	2110c <main@@Base+0xaecc>
   2021c:	ldr	r5, [sp, #44]	; 0x2c
   20220:	ldr	r8, [sp, #40]	; 0x28
   20224:	add	r1, r2, #1
   20228:	sub	r0, r5, r1
   2022c:	cmp	r0, #2
   20230:	ldr	sl, [sp, #36]	; 0x24
   20234:	blt	212c0 <main@@Base+0xb080>
   20238:	ldrb	r0, [r1]
   2023c:	cmp	r0, #32
   20240:	bls	212a0 <main@@Base+0xb060>
   20244:	ldr	r5, [sp, #44]	; 0x2c
   20248:	ldr	r8, [sp, #40]	; 0x28
   2024c:	ldr	sl, [sp, #36]	; 0x24
   20250:	mov	r4, r1
   20254:	b	1d7c0 <main@@Base+0x7580>
   20258:	ldr	r8, [sp, #40]	; 0x28
   2025c:	ldr	r5, [sp, #44]	; 0x2c
   20260:	mov	r1, r2
   20264:	mov	r0, r8
   20268:	mov	r2, r5
   2026c:	mov	r3, #9
   20270:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20274:	ldr	sl, [sp, #36]	; 0x24
   20278:	b	1c8a0 <main@@Base+0x6660>
   2027c:	mov	r4, r5
   20280:	b	212f0 <main@@Base+0xb0b0>
   20284:	mov	r0, r8
   20288:	mov	r1, r5
   2028c:	b	2111c <main@@Base+0xaedc>
   20290:	cmp	r0, #93	; 0x5d
   20294:	bne	21160 <main@@Base+0xaf20>
   20298:	ldr	r0, [sp, #44]	; 0x2c
   2029c:	add	r1, r4, #1
   202a0:	sub	r0, r0, r1
   202a4:	cmp	r0, #2
   202a8:	blt	212e0 <main@@Base+0xb0a0>
   202ac:	b	20cf4 <main@@Base+0xaab4>
   202b0:	mov	r4, r5
   202b4:	b	1ce9c <main@@Base+0x6c5c>
   202b8:	mov	r0, r8
   202bc:	mov	r1, r5
   202c0:	mov	r2, r5
   202c4:	b	2116c <main@@Base+0xaf2c>
   202c8:	ldr	r5, [sp, #44]	; 0x2c
   202cc:	ldr	r8, [sp, #40]	; 0x28
   202d0:	ldr	sl, [sp, #36]	; 0x24
   202d4:	bne	202e8 <main@@Base+0xa0a8>
   202d8:	ldrb	r0, [r2, #2]!
   202dc:	cmp	r0, #32
   202e0:	mov	r4, r2
   202e4:	bhi	20b58 <main@@Base+0xa918>
   202e8:	mov	r0, r8
   202ec:	mov	r2, r5
   202f0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   202f4:	b	2035c <main@@Base+0xa11c>
   202f8:	ldr	r0, [r8]
   202fc:	mov	r1, #1
   20300:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   20304:	mov	r9, r0
   20308:	cmp	r0, #0
   2030c:	beq	17308 <main@@Base+0x10c8>
   20310:	cmp	r4, r5
   20314:	beq	20348 <main@@Base+0xa108>
   20318:	ldrb	r0, [r4]
   2031c:	cmp	r0, #123	; 0x7b
   20320:	bne	20348 <main@@Base+0xa108>
   20324:	add	r1, r4, #1
   20328:	sub	r0, r5, r1
   2032c:	cmp	r0, #2
   20330:	blt	20378 <main@@Base+0xa138>
   20334:	ldrb	r0, [r1]
   20338:	cmp	r0, #32
   2033c:	bls	20368 <main@@Base+0xa128>
   20340:	mov	r4, r1
   20344:	b	20388 <main@@Base+0xa148>
   20348:	mov	r0, r8
   2034c:	mov	r1, r4
   20350:	mov	r2, r5
   20354:	mov	r3, #21
   20358:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2035c:	mov	r4, r0
   20360:	b	20b58 <main@@Base+0xa918>
   20364:	andeq	pc, r3, ip, ror #27
   20368:	bne	20378 <main@@Base+0xa138>
   2036c:	ldrb	r0, [r4, #2]!
   20370:	cmp	r0, #32
   20374:	bhi	20388 <main@@Base+0xa148>
   20378:	mov	r0, r8
   2037c:	mov	r2, r5
   20380:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20384:	mov	r4, r0
   20388:	cmp	r4, r5
   2038c:	mov	r2, r5
   20390:	beq	20490 <main@@Base+0xa250>
   20394:	ldrb	r0, [r4]
   20398:	cmp	r0, #125	; 0x7d
   2039c:	bne	203dc <main@@Base+0xa19c>
   203a0:	add	r1, r4, #1
   203a4:	sub	r0, r5, r1
   203a8:	cmp	r0, #2
   203ac:	blt	202e8 <main@@Base+0xa0a8>
   203b0:	ldrb	r0, [r1]
   203b4:	cmp	r0, #32
   203b8:	bhi	20b18 <main@@Base+0xa8d8>
   203bc:	ldr	r5, [sp, #44]	; 0x2c
   203c0:	ldr	r8, [sp, #40]	; 0x28
   203c4:	ldr	sl, [sp, #36]	; 0x24
   203c8:	bne	202e8 <main@@Base+0xa0a8>
   203cc:	ldrb	r0, [r4, #2]!
   203d0:	cmp	r0, #32
   203d4:	bls	202e8 <main@@Base+0xa0a8>
   203d8:	b	20b58 <main@@Base+0xa918>
   203dc:	mov	r2, r4
   203e0:	b	20490 <main@@Base+0xa250>
   203e4:	mov	r1, r5
   203e8:	cmp	r7, r1
   203ec:	bne	2046c <main@@Base+0xa22c>
   203f0:	b	20434 <main@@Base+0xa1f4>
   203f4:	mov	r1, r7
   203f8:	cmp	r7, r1
   203fc:	bne	2046c <main@@Base+0xa22c>
   20400:	b	20434 <main@@Base+0xa1f4>
   20404:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20408:	cmp	r0, #0
   2040c:	beq	20474 <main@@Base+0xa234>
   20410:	ldr	r8, [sp, #40]	; 0x28
   20414:	ldr	r5, [sp, #44]	; 0x2c
   20418:	mov	r3, #7
   2041c:	mov	r0, r8
   20420:	mov	r2, r5
   20424:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20428:	mov	r1, r0
   2042c:	cmp	r7, r1
   20430:	bne	2046c <main@@Base+0xa22c>
   20434:	sub	r0, fp, #60	; 0x3c
   20438:	mov	r1, r7
   2043c:	mov	r2, r5
   20440:	str	r0, [sp]
   20444:	mov	r0, r8
   20448:	ldr	r3, [pc, #4076]	; 2143c <main@@Base+0xb1fc>
   2044c:	add	r3, pc, r3
   20450:	bl	25e28 <main@@Base+0xfbe8>
   20454:	mov	r1, r0
   20458:	cmp	r0, r7
   2045c:	cmpne	r1, r5
   20460:	beq	20ac8 <main@@Base+0xa888>
   20464:	ldr	r4, [fp, #-60]	; 0xffffffc4
   20468:	ldr	r8, [sp, #40]	; 0x28
   2046c:	str	r4, [r9, #4]
   20470:	b	20a04 <main@@Base+0xa7c4>
   20474:	ldr	r4, [fp, #-56]	; 0xffffffc8
   20478:	ldr	r5, [sp, #44]	; 0x2c
   2047c:	ldr	r8, [sp, #40]	; 0x28
   20480:	str	r4, [fp, #-60]	; 0xffffffc4
   20484:	cmp	r7, r1
   20488:	bne	2046c <main@@Base+0xa22c>
   2048c:	b	20434 <main@@Base+0xa1f4>
   20490:	cmp	r2, r5
   20494:	mov	sl, r5
   20498:	beq	204ec <main@@Base+0xa2ac>
   2049c:	ldrb	r0, [r2]
   204a0:	cmp	r0, #46	; 0x2e
   204a4:	beq	204c0 <main@@Base+0xa280>
   204a8:	cmp	r0, #34	; 0x22
   204ac:	bne	204dc <main@@Base+0xa29c>
   204b0:	ldr	r0, [sp, #32]
   204b4:	mov	r1, #0
   204b8:	add	sl, r2, #1
   204bc:	b	204e8 <main@@Base+0xa2a8>
   204c0:	mov	r1, r2
   204c4:	mov	r0, r8
   204c8:	mov	r2, r5
   204cc:	mov	r3, #5
   204d0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   204d4:	mov	sl, r0
   204d8:	b	204ec <main@@Base+0xa2ac>
   204dc:	ldr	r0, [sp, #32]
   204e0:	mov	r1, #1
   204e4:	mov	sl, r2
   204e8:	str	r1, [r0]
   204ec:	sub	lr, r5, sl
   204f0:	mov	r1, #8
   204f4:	cmp	lr, #8
   204f8:	movcc	r1, lr
   204fc:	and	r1, r1, #15
   20500:	sub	r2, r1, #1
   20504:	cmp	r2, #7
   20508:	bhi	209f0 <main@@Base+0xa7b0>
   2050c:	add	r0, pc, #36	; 0x24
   20510:	mov	r1, #0
   20514:	mov	ip, #0
   20518:	mov	r8, #0
   2051c:	mov	r7, #0
   20520:	mov	r3, #0
   20524:	mov	r6, #0
   20528:	mov	r4, #0
   2052c:	ldr	r5, [r0, r2, lsl #2]
   20530:	mov	r2, #0
   20534:	add	pc, r0, r5
   20538:	andeq	r0, r0, r8, rrx
   2053c:	andeq	r0, r0, r0, rrx
   20540:	andeq	r0, r0, r8, asr r0
   20544:	andeq	r0, r0, r0, asr r0
   20548:	andeq	r0, r0, r4, asr #32
   2054c:	andeq	r0, r0, r8, lsr r0
   20550:	andeq	r0, r0, r8, lsr #32
   20554:	andeq	r0, r0, r4, lsr #32
   20558:	andeq	pc, r3, r4, asr fp	; <UNPREDICTABLE>
   2055c:	ldrb	ip, [sl, #7]
   20560:	ldrb	r0, [sl, #6]
   20564:	mov	r8, r1
   20568:	orr	r0, ip, r0, lsl #8
   2056c:	mov	r1, r0
   20570:	ldrb	r0, [sl, #5]
   20574:	mov	r7, r8
   20578:	orr	r1, r1, r0, lsl #16
   2057c:	ldrb	r0, [sl, #4]
   20580:	mov	r3, r7
   20584:	orr	r1, r1, r0, lsl #24
   20588:	ldrb	r0, [sl, #3]
   2058c:	orr	r6, r0, r3
   20590:	ldrb	r0, [sl, #2]
   20594:	orr	r4, r6, r0, lsl #8
   20598:	ldrb	r0, [sl, #1]
   2059c:	orr	r2, r4, r0, lsl #16
   205a0:	ldrb	r0, [sl]
   205a4:	movw	r3, #0
   205a8:	movt	r3, #26980	; 0x6964
   205ac:	orr	r2, r2, r0, lsl #24
   205b0:	mov	r0, r2
   205b4:	bfc	r0, #0, #16
   205b8:	teq	r0, r3
   205bc:	bne	20610 <main@@Base+0xa3d0>
   205c0:	ldr	r5, [sp, #44]	; 0x2c
   205c4:	ldr	r8, [sp, #40]	; 0x28
   205c8:	cmp	lr, #3
   205cc:	mov	r7, sl
   205d0:	blt	20850 <main@@Base+0xa610>
   205d4:	ldr	r2, [sp, #32]
   205d8:	mov	r1, sl
   205dc:	ldrb	r0, [r1, #2]!
   205e0:	ldr	r2, [r2]
   205e4:	cmp	r2, #0
   205e8:	beq	20680 <main@@Base+0xa440>
   205ec:	cmp	r0, #33	; 0x21
   205f0:	bcc	20600 <main@@Base+0xa3c0>
   205f4:	cmp	r0, #58	; 0x3a
   205f8:	mov	r7, sl
   205fc:	bne	20850 <main@@Base+0xa610>
   20600:	ldr	r0, [sp, #32]
   20604:	mov	r2, #0
   20608:	str	r2, [r0]
   2060c:	b	20690 <main@@Base+0xa450>
   20610:	movw	r0, #25445	; 0x6365
   20614:	ldr	r5, [sp, #44]	; 0x2c
   20618:	ldr	r8, [sp, #40]	; 0x28
   2061c:	movt	r0, #24942	; 0x616e
   20620:	eor	r0, r1, r0
   20624:	movw	r1, #29556	; 0x7374
   20628:	movt	r1, #25705	; 0x6469
   2062c:	eor	r1, r2, r1
   20630:	orrs	r0, r0, r1
   20634:	bne	209f0 <main@@Base+0xa7b0>
   20638:	cmp	lr, #9
   2063c:	mov	r7, sl
   20640:	blt	20988 <main@@Base+0xa748>
   20644:	ldr	r2, [sp, #32]
   20648:	mov	r1, sl
   2064c:	ldrb	r0, [r1, #8]!
   20650:	ldr	r2, [r2]
   20654:	cmp	r2, #0
   20658:	beq	206c0 <main@@Base+0xa480>
   2065c:	cmp	r0, #33	; 0x21
   20660:	bcc	20670 <main@@Base+0xa430>
   20664:	cmp	r0, #58	; 0x3a
   20668:	mov	r7, sl
   2066c:	bne	20988 <main@@Base+0xa748>
   20670:	ldr	r0, [sp, #32]
   20674:	mov	r2, #0
   20678:	str	r2, [r0]
   2067c:	b	206d0 <main@@Base+0xa490>
   20680:	cmp	r0, #34	; 0x22
   20684:	mov	r7, sl
   20688:	bne	20850 <main@@Base+0xa610>
   2068c:	add	r1, sl, #3
   20690:	sub	r0, r5, r1
   20694:	cmp	r0, #2
   20698:	blt	2071c <main@@Base+0xa4dc>
   2069c:	ldrb	r0, [r1]
   206a0:	cmp	r0, #32
   206a4:	bls	20700 <main@@Base+0xa4c0>
   206a8:	ldr	r5, [sp, #44]	; 0x2c
   206ac:	ldr	r8, [sp, #40]	; 0x28
   206b0:	mov	r7, r1
   206b4:	cmp	r7, r5
   206b8:	bne	20734 <main@@Base+0xa4f4>
   206bc:	b	20774 <main@@Base+0xa534>
   206c0:	cmp	r0, #34	; 0x22
   206c4:	mov	r7, sl
   206c8:	bne	20988 <main@@Base+0xa748>
   206cc:	add	r1, sl, #9
   206d0:	ldr	r4, [sp, #44]	; 0x2c
   206d4:	sub	r0, r4, r1
   206d8:	cmp	r0, #2
   206dc:	blt	207a4 <main@@Base+0xa564>
   206e0:	ldrb	r0, [r1]
   206e4:	cmp	r0, #32
   206e8:	bls	2078c <main@@Base+0xa54c>
   206ec:	ldr	r4, [sp, #44]	; 0x2c
   206f0:	mov	r7, r1
   206f4:	cmp	r7, r4
   206f8:	bne	207bc <main@@Base+0xa57c>
   206fc:	b	20804 <main@@Base+0xa5c4>
   20700:	ldr	r5, [sp, #44]	; 0x2c
   20704:	ldr	r8, [sp, #40]	; 0x28
   20708:	bne	2071c <main@@Base+0xa4dc>
   2070c:	mov	r7, r1
   20710:	ldrb	r0, [r7, #1]!
   20714:	cmp	r0, #32
   20718:	bhi	2072c <main@@Base+0xa4ec>
   2071c:	mov	r0, r8
   20720:	mov	r2, r5
   20724:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20728:	mov	r7, r0
   2072c:	cmp	r7, r5
   20730:	beq	20774 <main@@Base+0xa534>
   20734:	ldrb	r0, [r7]
   20738:	cmp	r0, #58	; 0x3a
   2073c:	bne	20774 <main@@Base+0xa534>
   20740:	add	r1, r7, #1
   20744:	sub	r0, r5, r1
   20748:	cmp	r0, #2
   2074c:	blt	20840 <main@@Base+0xa600>
   20750:	ldrb	r0, [r1]
   20754:	cmp	r0, #32
   20758:	bls	20828 <main@@Base+0xa5e8>
   2075c:	ldr	r5, [sp, #44]	; 0x2c
   20760:	ldr	r8, [sp, #40]	; 0x28
   20764:	mov	r7, r1
   20768:	cmp	sl, r7
   2076c:	bne	20858 <main@@Base+0xa618>
   20770:	b	209f0 <main@@Base+0xa7b0>
   20774:	mov	r0, r8
   20778:	mov	r1, r7
   2077c:	mov	r2, r5
   20780:	mov	r3, #4
   20784:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20788:	b	2084c <main@@Base+0xa60c>
   2078c:	ldr	r4, [sp, #44]	; 0x2c
   20790:	bne	207a4 <main@@Base+0xa564>
   20794:	mov	r7, r1
   20798:	ldrb	r0, [r7, #1]!
   2079c:	cmp	r0, #32
   207a0:	bhi	207b4 <main@@Base+0xa574>
   207a4:	ldr	r0, [sp, #40]	; 0x28
   207a8:	mov	r2, r4
   207ac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   207b0:	mov	r7, r0
   207b4:	cmp	r7, r4
   207b8:	beq	20804 <main@@Base+0xa5c4>
   207bc:	ldrb	r0, [r7]
   207c0:	cmp	r0, #58	; 0x3a
   207c4:	bne	20804 <main@@Base+0xa5c4>
   207c8:	ldr	r5, [sp, #44]	; 0x2c
   207cc:	ldr	r8, [sp, #40]	; 0x28
   207d0:	add	r1, r7, #1
   207d4:	sub	r0, r5, r1
   207d8:	cmp	r0, #2
   207dc:	blt	20978 <main@@Base+0xa738>
   207e0:	ldrb	r0, [r1]
   207e4:	cmp	r0, #32
   207e8:	bls	20960 <main@@Base+0xa720>
   207ec:	ldr	r5, [sp, #44]	; 0x2c
   207f0:	ldr	r8, [sp, #40]	; 0x28
   207f4:	mov	r7, r1
   207f8:	cmp	sl, r7
   207fc:	bne	20990 <main@@Base+0xa750>
   20800:	b	209f0 <main@@Base+0xa7b0>
   20804:	ldr	r8, [sp, #40]	; 0x28
   20808:	ldr	r5, [sp, #44]	; 0x2c
   2080c:	mov	r1, r7
   20810:	mov	r3, #4
   20814:	mov	r0, r8
   20818:	mov	r2, r5
   2081c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20820:	b	20984 <main@@Base+0xa744>
   20824:	andeq	pc, r3, ip, lsl r9	; <UNPREDICTABLE>
   20828:	ldr	r5, [sp, #44]	; 0x2c
   2082c:	ldr	r8, [sp, #40]	; 0x28
   20830:	bne	20840 <main@@Base+0xa600>
   20834:	ldrb	r0, [r7, #2]!
   20838:	cmp	r0, #32
   2083c:	bhi	20850 <main@@Base+0xa610>
   20840:	mov	r0, r8
   20844:	mov	r2, r5
   20848:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2084c:	mov	r7, r0
   20850:	cmp	sl, r7
   20854:	beq	209f0 <main@@Base+0xa7b0>
   20858:	mov	r4, #0
   2085c:	cmp	r7, r5
   20860:	str	r4, [fp, #-52]	; 0xffffffcc
   20864:	str	r4, [fp, #-56]	; 0xffffffc8
   20868:	str	r4, [fp, #-60]	; 0xffffffc4
   2086c:	str	r4, [sp, #56]	; 0x38
   20870:	beq	208b8 <main@@Base+0xa678>
   20874:	sub	r0, fp, #56	; 0x38
   20878:	mov	r1, r7
   2087c:	mov	r2, r5
   20880:	add	r3, sp, #56	; 0x38
   20884:	str	r0, [sp]
   20888:	mov	r0, r8
   2088c:	bl	38410 <flatcc_json_parser_integer@@Base>
   20890:	cmp	r0, r7
   20894:	beq	208c8 <main@@Base+0xa688>
   20898:	mov	r1, r0
   2089c:	ldr	r0, [sp, #56]	; 0x38
   208a0:	cmp	r0, #0
   208a4:	beq	208d8 <main@@Base+0xa698>
   208a8:	mov	r0, r8
   208ac:	mov	r2, r5
   208b0:	mov	r3, #8
   208b4:	b	208f8 <main@@Base+0xa6b8>
   208b8:	mov	r1, r5
   208bc:	cmp	r7, r1
   208c0:	bne	2093c <main@@Base+0xa6fc>
   208c4:	b	20908 <main@@Base+0xa6c8>
   208c8:	mov	r1, r7
   208cc:	cmp	r7, r1
   208d0:	bne	2093c <main@@Base+0xa6fc>
   208d4:	b	20908 <main@@Base+0xa6c8>
   208d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   208dc:	cmp	r0, #0
   208e0:	beq	20944 <main@@Base+0xa704>
   208e4:	ldr	r8, [sp, #40]	; 0x28
   208e8:	ldr	r5, [sp, #44]	; 0x2c
   208ec:	mov	r3, #7
   208f0:	mov	r0, r8
   208f4:	mov	r2, r5
   208f8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   208fc:	mov	r1, r0
   20900:	cmp	r7, r1
   20904:	bne	2093c <main@@Base+0xa6fc>
   20908:	sub	r0, fp, #60	; 0x3c
   2090c:	mov	r1, r7
   20910:	mov	r2, r5
   20914:	str	r0, [sp]
   20918:	mov	r0, r8
   2091c:	ldr	r3, [pc, #2968]	; 214bc <main@@Base+0xb27c>
   20920:	add	r3, pc, r3
   20924:	bl	25e28 <main@@Base+0xfbe8>
   20928:	mov	r1, r0
   2092c:	cmp	r0, r7
   20930:	cmpne	r1, r5
   20934:	beq	20ac8 <main@@Base+0xa888>
   20938:	ldr	r4, [fp, #-60]	; 0xffffffc4
   2093c:	str	r4, [r9]
   20940:	b	20a04 <main@@Base+0xa7c4>
   20944:	ldr	r4, [fp, #-56]	; 0xffffffc8
   20948:	ldr	r5, [sp, #44]	; 0x2c
   2094c:	ldr	r8, [sp, #40]	; 0x28
   20950:	str	r4, [fp, #-60]	; 0xffffffc4
   20954:	cmp	r7, r1
   20958:	bne	2093c <main@@Base+0xa6fc>
   2095c:	b	20908 <main@@Base+0xa6c8>
   20960:	ldr	r5, [sp, #44]	; 0x2c
   20964:	ldr	r8, [sp, #40]	; 0x28
   20968:	bne	20978 <main@@Base+0xa738>
   2096c:	ldrb	r0, [r7, #2]!
   20970:	cmp	r0, #32
   20974:	bhi	20988 <main@@Base+0xa748>
   20978:	mov	r0, r8
   2097c:	mov	r2, r5
   20980:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20984:	mov	r7, r0
   20988:	cmp	sl, r7
   2098c:	beq	209f0 <main@@Base+0xa7b0>
   20990:	mov	r4, #0
   20994:	cmp	r7, r5
   20998:	str	r4, [fp, #-52]	; 0xffffffcc
   2099c:	str	r4, [fp, #-56]	; 0xffffffc8
   209a0:	str	r4, [fp, #-60]	; 0xffffffc4
   209a4:	str	r4, [sp, #56]	; 0x38
   209a8:	beq	203e4 <main@@Base+0xa1a4>
   209ac:	sub	r0, fp, #56	; 0x38
   209b0:	mov	r1, r7
   209b4:	mov	r2, r5
   209b8:	add	r3, sp, #56	; 0x38
   209bc:	str	r0, [sp]
   209c0:	mov	r0, r8
   209c4:	bl	38410 <flatcc_json_parser_integer@@Base>
   209c8:	cmp	r0, r7
   209cc:	beq	203f4 <main@@Base+0xa1b4>
   209d0:	mov	r1, r0
   209d4:	ldr	r0, [sp, #56]	; 0x38
   209d8:	cmp	r0, #0
   209dc:	beq	20404 <main@@Base+0xa1c4>
   209e0:	ldr	r8, [sp, #40]	; 0x28
   209e4:	ldr	r5, [sp, #44]	; 0x2c
   209e8:	mov	r3, #8
   209ec:	b	2041c <main@@Base+0xa1dc>
   209f0:	mov	r0, r8
   209f4:	mov	r1, sl
   209f8:	mov	r2, r5
   209fc:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   20a00:	mov	r1, r0
   20a04:	sub	r0, r5, r1
   20a08:	cmp	r0, #2
   20a0c:	blt	20a40 <main@@Base+0xa800>
   20a10:	ldrb	r0, [r1]
   20a14:	cmp	r0, #32
   20a18:	bls	20a2c <main@@Base+0xa7ec>
   20a1c:	mov	r2, r1
   20a20:	cmp	r2, r5
   20a24:	bne	20a58 <main@@Base+0xa818>
   20a28:	b	20ae0 <main@@Base+0xa8a0>
   20a2c:	bne	20a40 <main@@Base+0xa800>
   20a30:	mov	r2, r1
   20a34:	ldrb	r0, [r2, #1]!
   20a38:	cmp	r0, #32
   20a3c:	bhi	20a50 <main@@Base+0xa810>
   20a40:	mov	r0, r8
   20a44:	mov	r2, r5
   20a48:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20a4c:	mov	r2, r0
   20a50:	cmp	r2, r5
   20a54:	beq	20ae0 <main@@Base+0xa8a0>
   20a58:	ldrb	r0, [r2]
   20a5c:	cmp	r0, #44	; 0x2c
   20a60:	bne	20ae8 <main@@Base+0xa8a8>
   20a64:	add	r1, r2, #1
   20a68:	sub	r0, r5, r1
   20a6c:	cmp	r0, #2
   20a70:	blt	20aa0 <main@@Base+0xa860>
   20a74:	ldrb	r0, [r1]
   20a78:	cmp	r0, #32
   20a7c:	bls	20a90 <main@@Base+0xa850>
   20a80:	mov	r2, r1
   20a84:	cmp	r2, r5
   20a88:	bne	20ab8 <main@@Base+0xa878>
   20a8c:	b	20b28 <main@@Base+0xa8e8>
   20a90:	bne	20aa0 <main@@Base+0xa860>
   20a94:	ldrb	r0, [r2, #2]!
   20a98:	cmp	r0, #32
   20a9c:	bhi	20ab0 <main@@Base+0xa870>
   20aa0:	mov	r0, r8
   20aa4:	mov	r2, r5
   20aa8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20aac:	mov	r2, r0
   20ab0:	cmp	r2, r5
   20ab4:	beq	20b28 <main@@Base+0xa8e8>
   20ab8:	ldrb	r0, [r2]
   20abc:	cmp	r0, #125	; 0x7d
   20ac0:	bne	20490 <main@@Base+0xa250>
   20ac4:	b	20af8 <main@@Base+0xa8b8>
   20ac8:	ldr	r8, [sp, #40]	; 0x28
   20acc:	ldr	r5, [sp, #44]	; 0x2c
   20ad0:	mov	r3, #33	; 0x21
   20ad4:	mov	r0, r8
   20ad8:	mov	r2, r5
   20adc:	b	20b4c <main@@Base+0xa90c>
   20ae0:	mov	r4, r5
   20ae4:	b	20b54 <main@@Base+0xa914>
   20ae8:	cmp	r0, #125	; 0x7d
   20aec:	bne	20b34 <main@@Base+0xa8f4>
   20af0:	ldr	r5, [sp, #44]	; 0x2c
   20af4:	ldr	r8, [sp, #40]	; 0x28
   20af8:	add	r1, r2, #1
   20afc:	sub	r0, r5, r1
   20b00:	cmp	r0, #2
   20b04:	ldr	sl, [sp, #36]	; 0x24
   20b08:	blt	202e8 <main@@Base+0xa0a8>
   20b0c:	ldrb	r0, [r1]
   20b10:	cmp	r0, #32
   20b14:	bls	202c8 <main@@Base+0xa088>
   20b18:	ldr	r5, [sp, #44]	; 0x2c
   20b1c:	ldr	r8, [sp, #40]	; 0x28
   20b20:	mov	r4, r1
   20b24:	b	20b54 <main@@Base+0xa914>
   20b28:	mov	r0, r8
   20b2c:	mov	r1, r5
   20b30:	b	20b44 <main@@Base+0xa904>
   20b34:	ldr	r8, [sp, #40]	; 0x28
   20b38:	ldr	r5, [sp, #44]	; 0x2c
   20b3c:	mov	r1, r2
   20b40:	mov	r0, r8
   20b44:	mov	r2, r5
   20b48:	mov	r3, #10
   20b4c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20b50:	mov	r4, r0
   20b54:	ldr	sl, [sp, #36]	; 0x24
   20b58:	sub	r0, r5, r4
   20b5c:	cmp	r0, #2
   20b60:	blt	20b94 <main@@Base+0xa954>
   20b64:	ldrb	r0, [r4]
   20b68:	cmp	r0, #32
   20b6c:	bls	20b80 <main@@Base+0xa940>
   20b70:	mov	r7, r4
   20b74:	cmp	r7, r5
   20b78:	bne	20bb0 <main@@Base+0xa970>
   20b7c:	b	20c50 <main@@Base+0xaa10>
   20b80:	bne	20b94 <main@@Base+0xa954>
   20b84:	mov	r7, r4
   20b88:	ldrb	r0, [r7, #1]!
   20b8c:	cmp	r0, #32
   20b90:	bhi	20ba8 <main@@Base+0xa968>
   20b94:	mov	r0, r8
   20b98:	mov	r1, r4
   20b9c:	mov	r2, r5
   20ba0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20ba4:	mov	r7, r0
   20ba8:	cmp	r7, r5
   20bac:	beq	20c50 <main@@Base+0xaa10>
   20bb0:	ldrb	r0, [r7]
   20bb4:	cmp	r0, #44	; 0x2c
   20bb8:	bne	20c58 <main@@Base+0xaa18>
   20bbc:	add	r1, r7, #1
   20bc0:	sub	r0, r5, r1
   20bc4:	cmp	r0, #2
   20bc8:	blt	20bfc <main@@Base+0xa9bc>
   20bcc:	ldrb	r0, [r1]
   20bd0:	cmp	r0, #32
   20bd4:	bls	20be8 <main@@Base+0xa9a8>
   20bd8:	mov	r4, r1
   20bdc:	cmp	r4, r5
   20be0:	bne	20c14 <main@@Base+0xa9d4>
   20be4:	b	20c70 <main@@Base+0xaa30>
   20be8:	bne	20bfc <main@@Base+0xa9bc>
   20bec:	ldrb	r0, [r7, #2]!
   20bf0:	cmp	r0, #32
   20bf4:	mov	r4, r7
   20bf8:	bhi	20c0c <main@@Base+0xa9cc>
   20bfc:	mov	r0, r8
   20c00:	mov	r2, r5
   20c04:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20c08:	mov	r4, r0
   20c0c:	cmp	r4, r5
   20c10:	beq	20c70 <main@@Base+0xaa30>
   20c14:	ldrb	r0, [r4]
   20c18:	cmp	r0, #93	; 0x5d
   20c1c:	bne	202f8 <main@@Base+0xa0b8>
   20c20:	add	r1, r4, #1
   20c24:	sub	r0, r5, r1
   20c28:	cmp	r0, #2
   20c2c:	blt	210a4 <main@@Base+0xae64>
   20c30:	ldrb	r0, [r1]
   20c34:	cmp	r0, #32
   20c38:	bls	21084 <main@@Base+0xae44>
   20c3c:	ldr	r5, [sp, #44]	; 0x2c
   20c40:	ldr	r8, [sp, #40]	; 0x28
   20c44:	ldr	sl, [sp, #36]	; 0x24
   20c48:	mov	r7, r1
   20c4c:	b	1c95c <main@@Base+0x671c>
   20c50:	mov	r7, r5
   20c54:	b	1c95c <main@@Base+0x671c>
   20c58:	cmp	r0, #93	; 0x5d
   20c5c:	bne	20c84 <main@@Base+0xaa44>
   20c60:	ldr	r5, [sp, #44]	; 0x2c
   20c64:	ldr	r8, [sp, #40]	; 0x28
   20c68:	ldr	sl, [sp, #36]	; 0x24
   20c6c:	b	1d278 <main@@Base+0x7038>
   20c70:	mov	r0, r8
   20c74:	mov	r1, r5
   20c78:	mov	r2, r5
   20c7c:	mov	r3, #9
   20c80:	b	1c954 <main@@Base+0x6714>
   20c84:	ldr	r8, [sp, #40]	; 0x28
   20c88:	ldr	r5, [sp, #44]	; 0x2c
   20c8c:	mov	r1, r7
   20c90:	mov	r3, #9
   20c94:	mov	r0, r8
   20c98:	mov	r2, r5
   20c9c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20ca0:	ldr	sl, [sp, #36]	; 0x24
   20ca4:	b	1c958 <main@@Base+0x6718>
   20ca8:	cmp	r0, #125	; 0x7d
   20cac:	bne	211b0 <main@@Base+0xaf70>
   20cb0:	ldr	r5, [sp, #44]	; 0x2c
   20cb4:	ldr	r8, [sp, #40]	; 0x28
   20cb8:	add	r1, r3, #1
   20cbc:	sub	r0, r5, r1
   20cc0:	cmp	r0, #2
   20cc4:	blt	2131c <main@@Base+0xb0dc>
   20cc8:	ldrb	r0, [r1]
   20ccc:	cmp	r0, #32
   20cd0:	bls	21300 <main@@Base+0xb0c0>
   20cd4:	ldr	r5, [sp, #44]	; 0x2c
   20cd8:	ldr	r8, [sp, #40]	; 0x28
   20cdc:	mov	r4, r1
   20ce0:	b	1ce9c <main@@Base+0x6c5c>
   20ce4:	add	r1, r4, #1
   20ce8:	sub	r0, r5, r1
   20cec:	cmp	r0, #2
   20cf0:	blt	212e0 <main@@Base+0xb0a0>
   20cf4:	ldrb	r0, [r1]
   20cf8:	cmp	r0, #32
   20cfc:	bls	212d0 <main@@Base+0xb090>
   20d00:	mov	r4, r1
   20d04:	b	212f0 <main@@Base+0xb0b0>
   20d08:	mov	r0, r8
   20d0c:	mov	r1, r5
   20d10:	b	211c0 <main@@Base+0xaf80>
   20d14:	bne	20d24 <main@@Base+0xaae4>
   20d18:	ldrb	r0, [r4, #2]!
   20d1c:	cmp	r0, #32
   20d20:	bhi	20d34 <main@@Base+0xaaf4>
   20d24:	ldr	r0, [sp, #40]	; 0x28
   20d28:	ldr	r2, [sp, #44]	; 0x2c
   20d2c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20d30:	mov	r4, r0
   20d34:	ldr	r6, [sp, #44]	; 0x2c
   20d38:	cmp	r4, r6
   20d3c:	beq	20d50 <main@@Base+0xab10>
   20d40:	ldrb	r0, [r4]
   20d44:	cmp	r0, #93	; 0x5d
   20d48:	beq	211ec <main@@Base+0xafac>
   20d4c:	mov	r6, r4
   20d50:	mov	r0, #0
   20d54:	mov	r1, #1
   20d58:	strb	r0, [fp, #-60]	; 0xffffffc4
   20d5c:	ldr	r0, [sp, #40]	; 0x28
   20d60:	ldr	r0, [r0]
   20d64:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   20d68:	cmp	r0, #0
   20d6c:	beq	214ac <main@@Base+0xb26c>
   20d70:	mov	r8, r0
   20d74:	mov	r4, r6
   20d78:	ldr	r5, [sp, #44]	; 0x2c
   20d7c:	mov	r6, #0
   20d80:	str	r6, [fp, #-52]	; 0xffffffcc
   20d84:	str	r6, [fp, #-56]	; 0xffffffc8
   20d88:	strb	r6, [fp, #-60]	; 0xffffffc4
   20d8c:	str	r6, [sp, #56]	; 0x38
   20d90:	cmp	r4, r5
   20d94:	beq	20ddc <main@@Base+0xab9c>
   20d98:	sub	r0, fp, #56	; 0x38
   20d9c:	mov	r1, r4
   20da0:	mov	r2, r5
   20da4:	add	r3, sp, #56	; 0x38
   20da8:	str	r0, [sp]
   20dac:	ldr	r0, [sp, #40]	; 0x28
   20db0:	bl	38410 <flatcc_json_parser_integer@@Base>
   20db4:	cmp	r0, r4
   20db8:	beq	20de4 <main@@Base+0xaba4>
   20dbc:	mov	r1, r0
   20dc0:	ldr	r0, [sp, #56]	; 0x38
   20dc4:	cmp	r0, #0
   20dc8:	beq	20dec <main@@Base+0xabac>
   20dcc:	ldr	r7, [sp, #40]	; 0x28
   20dd0:	ldr	r5, [sp, #44]	; 0x2c
   20dd4:	mov	r3, #8
   20dd8:	b	20e0c <main@@Base+0xabcc>
   20ddc:	mov	r1, r5
   20de0:	b	20e38 <main@@Base+0xabf8>
   20de4:	mov	r1, r4
   20de8:	b	20e34 <main@@Base+0xabf4>
   20dec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20df0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   20df4:	subs	r3, r0, #256	; 0x100
   20df8:	sbcs	r2, r2, #0
   20dfc:	bcc	20e2c <main@@Base+0xabec>
   20e00:	ldr	r7, [sp, #40]	; 0x28
   20e04:	ldr	r5, [sp, #44]	; 0x2c
   20e08:	mov	r3, #7
   20e0c:	mov	r0, r7
   20e10:	mov	r2, r5
   20e14:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20e18:	mov	r1, r0
   20e1c:	cmp	r4, r1
   20e20:	bne	20e88 <main@@Base+0xac48>
   20e24:	b	20e44 <main@@Base+0xac04>
   20e28:	muleq	r3, r8, r4
   20e2c:	mov	r6, r0
   20e30:	strb	r0, [fp, #-60]	; 0xffffffc4
   20e34:	ldr	r5, [sp, #44]	; 0x2c
   20e38:	ldr	r7, [sp, #40]	; 0x28
   20e3c:	cmp	r4, r1
   20e40:	bne	20e88 <main@@Base+0xac48>
   20e44:	sub	r0, fp, #60	; 0x3c
   20e48:	mov	r1, r4
   20e4c:	mov	r2, r5
   20e50:	str	r0, [sp]
   20e54:	mov	r0, r7
   20e58:	ldr	r3, [pc, #1632]	; 214c0 <main@@Base+0xb280>
   20e5c:	add	r3, pc, r3
   20e60:	bl	23614 <main@@Base+0xd3d4>
   20e64:	mov	r1, r0
   20e68:	cmp	r0, r4
   20e6c:	beq	214a4 <main@@Base+0xb264>
   20e70:	ldr	r0, [sp, #44]	; 0x2c
   20e74:	cmp	r1, r0
   20e78:	beq	214a4 <main@@Base+0xb264>
   20e7c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   20e80:	ldr	r5, [sp, #44]	; 0x2c
   20e84:	ldr	r7, [sp, #40]	; 0x28
   20e88:	sub	r0, r5, r1
   20e8c:	strb	r6, [r8]
   20e90:	cmp	r0, #2
   20e94:	blt	20ed4 <main@@Base+0xac94>
   20e98:	ldrb	r0, [r1]
   20e9c:	cmp	r0, #32
   20ea0:	bls	20eb8 <main@@Base+0xac78>
   20ea4:	ldr	r5, [sp, #44]	; 0x2c
   20ea8:	mov	r4, r1
   20eac:	cmp	r4, r5
   20eb0:	bne	20eec <main@@Base+0xacac>
   20eb4:	b	211dc <main@@Base+0xaf9c>
   20eb8:	ldr	r5, [sp, #44]	; 0x2c
   20ebc:	ldr	r7, [sp, #40]	; 0x28
   20ec0:	bne	20ed4 <main@@Base+0xac94>
   20ec4:	mov	r4, r1
   20ec8:	ldrb	r0, [r4, #1]!
   20ecc:	cmp	r0, #32
   20ed0:	bhi	20ee4 <main@@Base+0xaca4>
   20ed4:	mov	r0, r7
   20ed8:	mov	r2, r5
   20edc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20ee0:	mov	r4, r0
   20ee4:	cmp	r4, r5
   20ee8:	beq	211dc <main@@Base+0xaf9c>
   20eec:	ldrb	r0, [r4]
   20ef0:	cmp	r0, #44	; 0x2c
   20ef4:	bne	211e4 <main@@Base+0xafa4>
   20ef8:	ldr	r5, [sp, #44]	; 0x2c
   20efc:	add	r1, r4, #1
   20f00:	sub	r0, r5, r1
   20f04:	cmp	r0, #2
   20f08:	ldr	r0, [sp, #40]	; 0x28
   20f0c:	blt	20f48 <main@@Base+0xad08>
   20f10:	ldrb	r0, [r1]
   20f14:	cmp	r0, #32
   20f18:	bls	20f30 <main@@Base+0xacf0>
   20f1c:	ldr	r5, [sp, #44]	; 0x2c
   20f20:	mov	r4, r1
   20f24:	cmp	r4, r5
   20f28:	bne	20f5c <main@@Base+0xad1c>
   20f2c:	b	21244 <main@@Base+0xb004>
   20f30:	ldr	r5, [sp, #44]	; 0x2c
   20f34:	ldr	r0, [sp, #40]	; 0x28
   20f38:	bne	20f48 <main@@Base+0xad08>
   20f3c:	ldrb	r2, [r4, #2]!
   20f40:	cmp	r2, #32
   20f44:	bhi	20f54 <main@@Base+0xad14>
   20f48:	mov	r2, r5
   20f4c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20f50:	mov	r4, r0
   20f54:	cmp	r4, r5
   20f58:	beq	21244 <main@@Base+0xb004>
   20f5c:	ldrb	r0, [r4]
   20f60:	cmp	r0, #93	; 0x5d
   20f64:	beq	211ec <main@@Base+0xafac>
   20f68:	mov	r0, #0
   20f6c:	mov	r1, #1
   20f70:	strb	r0, [fp, #-60]	; 0xffffffc4
   20f74:	ldr	r0, [sp, #40]	; 0x28
   20f78:	ldr	r0, [r0]
   20f7c:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   20f80:	mov	r8, r0
   20f84:	cmp	r0, #0
   20f88:	bne	20d78 <main@@Base+0xab38>
   20f8c:	b	214b0 <main@@Base+0xb270>
   20f90:	ldr	r5, [sp, #44]	; 0x2c
   20f94:	ldr	r8, [sp, #40]	; 0x28
   20f98:	ldr	sl, [sp, #36]	; 0x24
   20f9c:	b	1c754 <main@@Base+0x6514>
   20fa0:	ldr	r5, [sp, #44]	; 0x2c
   20fa4:	ldr	r8, [sp, #40]	; 0x28
   20fa8:	ldr	sl, [sp, #36]	; 0x24
   20fac:	bne	20fc0 <main@@Base+0xad80>
   20fb0:	ldrb	r0, [r2, #2]!
   20fb4:	cmp	r0, #32
   20fb8:	mov	r4, r2
   20fbc:	bhi	1c8a4 <main@@Base+0x6664>
   20fc0:	mov	r0, r8
   20fc4:	mov	r2, r5
   20fc8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   20fcc:	b	1c8a0 <main@@Base+0x6660>
   20fd0:	ldr	r8, [sp, #40]	; 0x28
   20fd4:	ldr	r5, [sp, #44]	; 0x2c
   20fd8:	mov	r1, r2
   20fdc:	mov	r0, r8
   20fe0:	mov	r2, r5
   20fe4:	mov	r3, #9
   20fe8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   20fec:	ldr	sl, [sp, #36]	; 0x24
   20ff0:	b	1d018 <main@@Base+0x6dd8>
   20ff4:	ldr	r0, [sp, #40]	; 0x28
   20ff8:	ldr	r2, [sp, #44]	; 0x2c
   20ffc:	mov	r1, r4
   21000:	mov	r3, #9
   21004:	bl	36078 <flatcc_json_parser_set_error@@Base>
   21008:	b	2114c <main@@Base+0xaf0c>
   2100c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   21010:	str	r6, [fp, #-60]	; 0xffffffc4
   21014:	cmp	r7, r4
   21018:	bne	1f618 <main@@Base+0x93d8>
   2101c:	b	1f5e0 <main@@Base+0x93a0>
   21020:	ldr	r8, [sp, #40]	; 0x28
   21024:	mov	r4, r5
   21028:	b	1eac0 <main@@Base+0x8880>
   2102c:	andeq	pc, r3, r0, lsl #6
   21030:	cmp	r0, #93	; 0x5d
   21034:	bne	2132c <main@@Base+0xb0ec>
   21038:	ldr	r0, [sp, #44]	; 0x2c
   2103c:	add	r1, r4, #1
   21040:	sub	r0, r0, r1
   21044:	cmp	r0, #2
   21048:	blt	21368 <main@@Base+0xb128>
   2104c:	b	210c4 <main@@Base+0xae84>
   21050:	mov	r0, r8
   21054:	mov	r1, r5
   21058:	mov	r2, r5
   2105c:	b	21338 <main@@Base+0xb0f8>
   21060:	ldr	r8, [sp, #40]	; 0x28
   21064:	ldr	r5, [sp, #44]	; 0x2c
   21068:	mov	r1, r2
   2106c:	mov	r0, r8
   21070:	mov	r2, r5
   21074:	mov	r3, #10
   21078:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2107c:	ldr	sl, [sp, #36]	; 0x24
   21080:	b	1c740 <main@@Base+0x6500>
   21084:	ldr	r5, [sp, #44]	; 0x2c
   21088:	ldr	r8, [sp, #40]	; 0x28
   2108c:	ldr	sl, [sp, #36]	; 0x24
   21090:	bne	210a4 <main@@Base+0xae64>
   21094:	ldrb	r0, [r4, #2]!
   21098:	cmp	r0, #32
   2109c:	mov	r7, r4
   210a0:	bhi	1c95c <main@@Base+0x671c>
   210a4:	mov	r0, r8
   210a8:	mov	r2, r5
   210ac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   210b0:	b	1c958 <main@@Base+0x6718>
   210b4:	add	r1, r4, #1
   210b8:	sub	r0, r5, r1
   210bc:	cmp	r0, #2
   210c0:	blt	21368 <main@@Base+0xb128>
   210c4:	ldrb	r0, [r1]
   210c8:	cmp	r0, #32
   210cc:	bls	21358 <main@@Base+0xb118>
   210d0:	ldr	r8, [sp, #40]	; 0x28
   210d4:	mov	r4, r1
   210d8:	b	1eac0 <main@@Base+0x8880>
   210dc:	ldr	r5, [sp, #44]	; 0x2c
   210e0:	ldr	r8, [sp, #40]	; 0x28
   210e4:	ldr	sl, [sp, #36]	; 0x24
   210e8:	bne	210fc <main@@Base+0xaebc>
   210ec:	ldrb	r0, [r2, #2]!
   210f0:	cmp	r0, #32
   210f4:	mov	r4, r2
   210f8:	bhi	1d01c <main@@Base+0x6ddc>
   210fc:	mov	r0, r8
   21100:	mov	r2, r5
   21104:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   21108:	b	1d018 <main@@Base+0x6dd8>
   2110c:	ldr	r8, [sp, #40]	; 0x28
   21110:	ldr	r5, [sp, #44]	; 0x2c
   21114:	mov	r1, r2
   21118:	mov	r0, r8
   2111c:	mov	r2, r5
   21120:	mov	r3, #9
   21124:	bl	36078 <flatcc_json_parser_set_error@@Base>
   21128:	ldr	sl, [sp, #36]	; 0x24
   2112c:	b	1d7bc <main@@Base+0x757c>
   21130:	bne	21140 <main@@Base+0xaf00>
   21134:	ldrb	r0, [r4, #2]!
   21138:	cmp	r0, #32
   2113c:	bhi	21150 <main@@Base+0xaf10>
   21140:	ldr	r0, [sp, #40]	; 0x28
   21144:	ldr	r2, [sp, #44]	; 0x2c
   21148:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2114c:	mov	r4, r0
   21150:	ldr	r5, [sp, #44]	; 0x2c
   21154:	ldr	r8, [sp, #40]	; 0x28
   21158:	ldr	sl, [sp, #36]	; 0x24
   2115c:	b	1d470 <main@@Base+0x7230>
   21160:	ldr	r0, [sp, #40]	; 0x28
   21164:	ldr	r2, [sp, #44]	; 0x2c
   21168:	mov	r1, r4
   2116c:	mov	r3, #9
   21170:	bl	36078 <flatcc_json_parser_set_error@@Base>
   21174:	b	212ec <main@@Base+0xb0ac>
   21178:	mov	r4, r5
   2117c:	b	1d354 <main@@Base+0x7114>
   21180:	cmp	r0, #125	; 0x7d
   21184:	bne	21344 <main@@Base+0xb104>
   21188:	ldr	r0, [sp, #44]	; 0x2c
   2118c:	add	r1, r2, #1
   21190:	sub	r0, r0, r1
   21194:	cmp	r0, #2
   21198:	blt	213a8 <main@@Base+0xb168>
   2119c:	ldrb	r0, [r1]
   211a0:	cmp	r0, #32
   211a4:	bls	21394 <main@@Base+0xb154>
   211a8:	mov	r4, r1
   211ac:	b	1d354 <main@@Base+0x7114>
   211b0:	ldr	r8, [sp, #40]	; 0x28
   211b4:	ldr	r5, [sp, #44]	; 0x2c
   211b8:	mov	r1, r3
   211bc:	mov	r0, r8
   211c0:	mov	r2, r5
   211c4:	mov	r3, #10
   211c8:	b	1ce94 <main@@Base+0x6c54>
   211cc:	mov	r0, r6
   211d0:	mov	r1, r5
   211d4:	mov	r2, r5
   211d8:	b	21350 <main@@Base+0xb110>
   211dc:	ldr	r4, [sp, #44]	; 0x2c
   211e0:	b	21274 <main@@Base+0xb034>
   211e4:	cmp	r0, #93	; 0x5d
   211e8:	bne	21380 <main@@Base+0xb140>
   211ec:	ldr	r0, [sp, #44]	; 0x2c
   211f0:	add	r1, r4, #1
   211f4:	sub	r0, r0, r1
   211f8:	cmp	r0, #2
   211fc:	blt	21264 <main@@Base+0xb024>
   21200:	ldrb	r0, [r1]
   21204:	cmp	r0, #32
   21208:	bls	21254 <main@@Base+0xb014>
   2120c:	mov	r4, r1
   21210:	b	21274 <main@@Base+0xb034>
   21214:	ldr	r5, [sp, #44]	; 0x2c
   21218:	ldr	r8, [sp, #40]	; 0x28
   2121c:	ldr	sl, [sp, #36]	; 0x24
   21220:	bne	21234 <main@@Base+0xaff4>
   21224:	ldrb	r0, [r2, #2]!
   21228:	cmp	r0, #32
   2122c:	mov	r4, r2
   21230:	bhi	1c744 <main@@Base+0x6504>
   21234:	mov	r0, r8
   21238:	mov	r2, r5
   2123c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   21240:	b	1c740 <main@@Base+0x6500>
   21244:	ldr	r1, [sp, #44]	; 0x2c
   21248:	ldr	r0, [sp, #40]	; 0x28
   2124c:	mov	r2, r1
   21250:	b	2138c <main@@Base+0xb14c>
   21254:	bne	21264 <main@@Base+0xb024>
   21258:	ldrb	r0, [r4, #2]!
   2125c:	cmp	r0, #32
   21260:	bhi	21274 <main@@Base+0xb034>
   21264:	ldr	r0, [sp, #40]	; 0x28
   21268:	ldr	r2, [sp, #44]	; 0x2c
   2126c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   21270:	mov	r4, r0
   21274:	ldr	r8, [sp, #40]	; 0x28
   21278:	ldr	r0, [r8]
   2127c:	bl	32234 <flatcc_builder_end_vector@@Base>
   21280:	ldr	r5, [sp, #44]	; 0x2c
   21284:	ldr	sl, [sp, #36]	; 0x24
   21288:	cmp	r0, #0
   2128c:	str	r0, [sp, #52]	; 0x34
   21290:	beq	17308 <main@@Base+0x10c8>
   21294:	ldr	r0, [r8]
   21298:	mov	r1, #13
   2129c:	b	19dc8 <main@@Base+0x3b88>
   212a0:	ldr	r5, [sp, #44]	; 0x2c
   212a4:	ldr	r8, [sp, #40]	; 0x28
   212a8:	ldr	sl, [sp, #36]	; 0x24
   212ac:	bne	212c0 <main@@Base+0xb080>
   212b0:	ldrb	r0, [r2, #2]!
   212b4:	cmp	r0, #32
   212b8:	mov	r4, r2
   212bc:	bhi	1d7c0 <main@@Base+0x7580>
   212c0:	mov	r0, r8
   212c4:	mov	r2, r5
   212c8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   212cc:	b	1d7bc <main@@Base+0x757c>
   212d0:	bne	212e0 <main@@Base+0xb0a0>
   212d4:	ldrb	r0, [r4, #2]!
   212d8:	cmp	r0, #32
   212dc:	bhi	212f0 <main@@Base+0xb0b0>
   212e0:	ldr	r0, [sp, #40]	; 0x28
   212e4:	ldr	r2, [sp, #44]	; 0x2c
   212e8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   212ec:	mov	r4, r0
   212f0:	ldr	r5, [sp, #44]	; 0x2c
   212f4:	ldr	r8, [sp, #40]	; 0x28
   212f8:	ldr	sl, [sp, #36]	; 0x24
   212fc:	b	1dc78 <main@@Base+0x7a38>
   21300:	ldr	r5, [sp, #44]	; 0x2c
   21304:	ldr	r8, [sp, #40]	; 0x28
   21308:	bne	2131c <main@@Base+0xb0dc>
   2130c:	ldrb	r0, [r3, #2]!
   21310:	cmp	r0, #32
   21314:	mov	r4, r3
   21318:	bhi	1ce9c <main@@Base+0x6c5c>
   2131c:	mov	r0, r8
   21320:	mov	r2, r5
   21324:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   21328:	b	1ce98 <main@@Base+0x6c58>
   2132c:	ldr	r0, [sp, #40]	; 0x28
   21330:	ldr	r2, [sp, #44]	; 0x2c
   21334:	mov	r1, r4
   21338:	mov	r3, #9
   2133c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   21340:	b	21374 <main@@Base+0xb134>
   21344:	mov	r1, r2
   21348:	ldr	r0, [sp, #40]	; 0x28
   2134c:	ldr	r2, [sp, #44]	; 0x2c
   21350:	mov	r3, #10
   21354:	b	1d34c <main@@Base+0x710c>
   21358:	bne	21368 <main@@Base+0xb128>
   2135c:	ldrb	r0, [r4, #2]!
   21360:	cmp	r0, #32
   21364:	bhi	21378 <main@@Base+0xb138>
   21368:	ldr	r0, [sp, #40]	; 0x28
   2136c:	ldr	r2, [sp, #44]	; 0x2c
   21370:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   21374:	mov	r4, r0
   21378:	ldr	r8, [sp, #40]	; 0x28
   2137c:	b	1eac0 <main@@Base+0x8880>
   21380:	ldr	r0, [sp, #40]	; 0x28
   21384:	ldr	r2, [sp, #44]	; 0x2c
   21388:	mov	r1, r4
   2138c:	mov	r3, #9
   21390:	b	1dd8c <main@@Base+0x7b4c>
   21394:	bne	213a8 <main@@Base+0xb168>
   21398:	ldrb	r0, [r2, #2]!
   2139c:	cmp	r0, #32
   213a0:	mov	r4, r2
   213a4:	bhi	1d354 <main@@Base+0x7114>
   213a8:	ldr	r0, [sp, #40]	; 0x28
   213ac:	ldr	r2, [sp, #44]	; 0x2c
   213b0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   213b4:	b	1d350 <main@@Base+0x7110>
   213b8:	mov	r4, r5
   213bc:	b	21458 <main@@Base+0xb218>
   213c0:	cmp	r0, #125	; 0x7d
   213c4:	bne	21440 <main@@Base+0xb200>
   213c8:	add	r4, r2, #1
   213cc:	sub	r0, r5, r4
   213d0:	cmp	r0, #2
   213d4:	blt	213fc <main@@Base+0xb1bc>
   213d8:	ldrb	r0, [r4]
   213dc:	cmp	r0, #32
   213e0:	bhi	21458 <main@@Base+0xb218>
   213e4:	bne	213fc <main@@Base+0xb1bc>
   213e8:	ldrb	r0, [r2, #2]!
   213ec:	cmp	r0, #32
   213f0:	bls	213fc <main@@Base+0xb1bc>
   213f4:	mov	r4, r2
   213f8:	b	21458 <main@@Base+0xb218>
   213fc:	mov	r0, r8
   21400:	mov	r1, r4
   21404:	mov	r2, r5
   21408:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2140c:	b	21454 <main@@Base+0xb214>
   21410:	mov	r0, r8
   21414:	mov	r1, r5
   21418:	b	21448 <main@@Base+0xb208>
   2141c:	bne	2142c <main@@Base+0xb1ec>
   21420:	ldrb	r0, [r4, #2]!
   21424:	cmp	r0, #32
   21428:	bhi	173a8 <main@@Base+0x1168>
   2142c:	mov	r0, r8
   21430:	mov	r2, r5
   21434:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   21438:	b	173a4 <main@@Base+0x1164>
   2143c:	andeq	lr, r3, r0, ror #29
   21440:	mov	r0, r8
   21444:	mov	r1, r2
   21448:	mov	r2, r5
   2144c:	mov	r3, #10
   21450:	bl	36078 <flatcc_json_parser_set_error@@Base>
   21454:	mov	r4, r0
   21458:	ldr	r0, [sp, #28]
   2145c:	b	173ac <main@@Base+0x116c>
   21460:	mov	r4, r7
   21464:	b	17308 <main@@Base+0x10c8>
   21468:	mov	r4, r6
   2146c:	b	17308 <main@@Base+0x10c8>
   21470:	ldr	r5, [sp, #44]	; 0x2c
   21474:	b	17308 <main@@Base+0x10c8>
   21478:	ldr	r8, [sp, #40]	; 0x28
   2147c:	b	17308 <main@@Base+0x10c8>
   21480:	mov	r4, r5
   21484:	b	214b0 <main@@Base+0xb270>
   21488:	ldr	r8, [sp, #40]	; 0x28
   2148c:	mov	r4, r1
   21490:	b	17308 <main@@Base+0x10c8>
   21494:	ldr	r5, [sp, #44]	; 0x2c
   21498:	ldr	r8, [sp, #40]	; 0x28
   2149c:	mov	r4, r7
   214a0:	b	17308 <main@@Base+0x10c8>
   214a4:	mov	r4, r1
   214a8:	b	214b0 <main@@Base+0xb270>
   214ac:	mov	r4, r6
   214b0:	ldr	r5, [sp, #44]	; 0x2c
   214b4:	ldr	r8, [sp, #40]	; 0x28
   214b8:	b	17308 <main@@Base+0x10c8>
   214bc:	andeq	lr, r3, r0, lsl #20
   214c0:	andeq	lr, r3, r4, lsl r3
   214c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   214c8:	add	fp, sp, #28
   214cc:	sub	sp, sp, #20
   214d0:	mov	r5, r0
   214d4:	ldr	r0, [pc, #1268]	; 219d0 <main@@Base+0xb790>
   214d8:	mov	r4, r1
   214dc:	mov	r1, #3
   214e0:	mov	r2, #0
   214e4:	mov	r8, #0
   214e8:	str	r1, [sp]
   214ec:	mov	r1, r4
   214f0:	add	r0, pc, r0
   214f4:	str	r0, [sp, #4]
   214f8:	mov	r0, r5
   214fc:	ldr	r3, [pc, #1232]	; 219d4 <main@@Base+0xb794>
   21500:	add	r3, pc, r3
   21504:	bl	45e5c <flatcc_json_printer_struct_field@@Base>
   21508:	mov	r0, #150	; 0x96
   2150c:	mov	r1, #4
   21510:	mov	r2, #1
   21514:	mov	r6, #4
   21518:	str	r1, [sp]
   2151c:	str	r0, [sp, #4]
   21520:	mov	r0, r5
   21524:	mov	r1, r4
   21528:	ldr	r3, [pc, #1192]	; 219d8 <main@@Base+0xb798>
   2152c:	add	r3, pc, r3
   21530:	bl	3ceb8 <flatcc_json_printer_int16_field@@Base>
   21534:	mov	r0, #100	; 0x64
   21538:	mov	r1, #2
   2153c:	mov	r2, #2
   21540:	str	r1, [sp]
   21544:	str	r0, [sp, #4]
   21548:	mov	r0, r5
   2154c:	mov	r1, r4
   21550:	ldr	r3, [pc, #1156]	; 219dc <main@@Base+0xb79c>
   21554:	add	r3, pc, r3
   21558:	bl	3ceb8 <flatcc_json_printer_int16_field@@Base>
   2155c:	str	r6, [sp]
   21560:	mov	r0, r5
   21564:	mov	r1, r4
   21568:	mov	r2, #3
   2156c:	ldr	r3, [pc, #1132]	; 219e0 <main@@Base+0xb7a0>
   21570:	add	r3, pc, r3
   21574:	bl	3c4f0 <flatcc_json_printer_string_field@@Base>
   21578:	mov	r0, #9
   2157c:	mov	r1, r4
   21580:	mov	r2, #5
   21584:	mov	r7, #5
   21588:	str	r0, [sp]
   2158c:	mov	r0, r5
   21590:	ldr	r3, [pc, #1100]	; 219e4 <main@@Base+0xb7a4>
   21594:	add	r3, pc, r3
   21598:	bl	3ef70 <flatcc_json_printer_uint8_vector_field@@Base>
   2159c:	ldr	r0, [pc, #1092]	; 219e8 <main@@Base+0xb7a8>
   215a0:	mov	r1, #8
   215a4:	str	r7, [sp]
   215a8:	mov	r2, #6
   215ac:	mov	r7, #5
   215b0:	str	r1, [sp, #4]
   215b4:	mov	r1, r4
   215b8:	add	r0, pc, r0
   215bc:	str	r0, [sp, #8]
   215c0:	mov	r0, r5
   215c4:	ldr	r3, [pc, #1056]	; 219ec <main@@Base+0xb7ac>
   215c8:	add	r3, pc, r3
   215cc:	bl	3d850 <flatcc_json_printer_int8_enum_field@@Base>
   215d0:	ldr	r0, [pc, #1048]	; 219f0 <main@@Base+0xb7b0>
   215d4:	ldr	r1, [pc, #1048]	; 219f4 <main@@Base+0xb7b4>
   215d8:	str	r6, [sp]
   215dc:	mov	r2, #8
   215e0:	add	r0, pc, r0
   215e4:	add	r1, pc, r1
   215e8:	str	r1, [sp, #4]
   215ec:	str	r0, [sp, #8]
   215f0:	mov	r0, r5
   215f4:	mov	r1, r4
   215f8:	ldr	r3, [pc, #1016]	; 219f8 <main@@Base+0xb7b8>
   215fc:	add	r3, pc, r3
   21600:	bl	45558 <flatcc_json_printer_union_field@@Base>
   21604:	ldr	r0, [pc, #1008]	; 219fc <main@@Base+0xb7bc>
   21608:	str	r7, [sp]
   2160c:	str	r6, [sp, #4]
   21610:	mov	r1, r4
   21614:	mov	r2, #9
   21618:	mov	sl, #5
   2161c:	add	r0, pc, r0
   21620:	str	r0, [sp, #8]
   21624:	mov	r0, r5
   21628:	ldr	r3, [pc, #976]	; 21a00 <main@@Base+0xb7c0>
   2162c:	add	r3, pc, r3
   21630:	bl	441b0 <flatcc_json_printer_struct_vector_field@@Base>
   21634:	mov	r7, #17
   21638:	mov	r0, r5
   2163c:	mov	r1, r4
   21640:	mov	r2, #10
   21644:	str	r7, [sp]
   21648:	ldr	r3, [pc, #948]	; 21a04 <main@@Base+0xb7c4>
   2164c:	add	r3, pc, r3
   21650:	bl	4474c <flatcc_json_printer_string_vector_field@@Base>
   21654:	ldr	r9, [pc, #940]	; 21a08 <main@@Base+0xb7c8>
   21658:	mov	r0, r5
   2165c:	mov	r1, r4
   21660:	mov	r2, #11
   21664:	add	r9, pc, r9
   21668:	stm	sp, {r7, r9}
   2166c:	ldr	r3, [pc, #920]	; 21a0c <main@@Base+0xb7cc>
   21670:	add	r3, pc, r3
   21674:	bl	44b04 <flatcc_json_printer_table_vector_field@@Base>
   21678:	str	sl, [sp]
   2167c:	str	r9, [sp, #4]
   21680:	mov	r0, r5
   21684:	mov	r1, r4
   21688:	mov	r2, #12
   2168c:	mov	sl, #5
   21690:	ldr	r3, [pc, #888]	; 21a10 <main@@Base+0xb7d0>
   21694:	add	r3, pc, r3
   21698:	bl	45370 <flatcc_json_printer_table_field@@Base>
   2169c:	mov	r0, #20
   216a0:	mov	r1, r4
   216a4:	mov	r2, #13
   216a8:	stm	sp, {r0, r8, r9}
   216ac:	mov	r0, r5
   216b0:	ldr	r3, [pc, #860]	; 21a14 <main@@Base+0xb7d4>
   216b4:	add	r3, pc, r3
   216b8:	bl	46700 <flatcc_json_printer_table_as_nested_root@@Base>
   216bc:	ldr	r0, [pc, #852]	; 21a18 <main@@Base+0xb7d8>
   216c0:	mov	r1, #9
   216c4:	mov	r2, #14
   216c8:	str	r1, [sp]
   216cc:	mov	r1, r4
   216d0:	add	r0, pc, r0
   216d4:	str	r0, [sp, #4]
   216d8:	mov	r0, r5
   216dc:	ldr	r3, [pc, #824]	; 21a1c <main@@Base+0xb7dc>
   216e0:	add	r3, pc, r3
   216e4:	bl	45370 <flatcc_json_printer_table_field@@Base>
   216e8:	mov	r9, #8
   216ec:	mov	r0, #1
   216f0:	mov	r1, r4
   216f4:	mov	r2, #15
   216f8:	str	r0, [sp, #4]
   216fc:	str	r9, [sp]
   21700:	mov	r0, r5
   21704:	ldr	r3, [pc, #788]	; 21a20 <main@@Base+0xb7e0>
   21708:	add	r3, pc, r3
   2170c:	bl	3d168 <flatcc_json_printer_bool_field@@Base>
   21710:	mov	r6, #16
   21714:	mov	r0, r5
   21718:	mov	r1, r4
   2171c:	mov	r2, #16
   21720:	stm	sp, {r6, r8}
   21724:	ldr	r3, [pc, #760]	; 21a24 <main@@Base+0xb7e4>
   21728:	add	r3, pc, r3
   2172c:	bl	3cf98 <flatcc_json_printer_int32_field@@Base>
   21730:	stm	sp, {r6, r8}
   21734:	mov	r0, r5
   21738:	mov	r1, r4
   2173c:	mov	r2, #17
   21740:	ldr	r3, [pc, #736]	; 21a28 <main@@Base+0xb7e8>
   21744:	add	r3, pc, r3
   21748:	bl	3cb90 <flatcc_json_printer_uint32_field@@Base>
   2174c:	str	r8, [sp, #8]
   21750:	str	r8, [sp, #12]
   21754:	str	r6, [sp]
   21758:	mov	r0, r5
   2175c:	mov	r1, r4
   21760:	mov	r2, #18
   21764:	ldr	r3, [pc, #704]	; 21a2c <main@@Base+0xb7ec>
   21768:	add	r3, pc, r3
   2176c:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   21770:	str	r8, [sp, #8]
   21774:	str	r8, [sp, #12]
   21778:	str	r6, [sp]
   2177c:	mov	r0, r5
   21780:	mov	r1, r4
   21784:	mov	r2, #19
   21788:	ldr	r3, [pc, #672]	; 21a30 <main@@Base+0xb7f0>
   2178c:	add	r3, pc, r3
   21790:	bl	3cc50 <flatcc_json_printer_uint64_field@@Base>
   21794:	stm	sp, {r7, r8}
   21798:	mov	r0, r5
   2179c:	mov	r1, r4
   217a0:	mov	r2, #20
   217a4:	ldr	r3, [pc, #648]	; 21a34 <main@@Base+0xb7f4>
   217a8:	add	r3, pc, r3
   217ac:	bl	3cf98 <flatcc_json_printer_int32_field@@Base>
   217b0:	stm	sp, {r7, r8}
   217b4:	mov	r0, r5
   217b8:	mov	r1, r4
   217bc:	mov	r2, #21
   217c0:	ldr	r3, [pc, #624]	; 21a38 <main@@Base+0xb7f8>
   217c4:	add	r3, pc, r3
   217c8:	bl	3cb90 <flatcc_json_printer_uint32_field@@Base>
   217cc:	str	r8, [sp, #8]
   217d0:	str	r8, [sp, #12]
   217d4:	str	r7, [sp]
   217d8:	mov	r0, r5
   217dc:	mov	r1, r4
   217e0:	mov	r2, #22
   217e4:	ldr	r3, [pc, #592]	; 21a3c <main@@Base+0xb7fc>
   217e8:	add	r3, pc, r3
   217ec:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   217f0:	str	r8, [sp, #8]
   217f4:	str	r8, [sp, #12]
   217f8:	str	r7, [sp]
   217fc:	mov	r0, r5
   21800:	mov	r1, r4
   21804:	mov	r2, #23
   21808:	mov	r8, #23
   2180c:	ldr	r3, [pc, #556]	; 21a40 <main@@Base+0xb800>
   21810:	add	r3, pc, r3
   21814:	bl	3cc50 <flatcc_json_printer_uint64_field@@Base>
   21818:	str	r6, [sp]
   2181c:	mov	r0, r5
   21820:	mov	r1, r4
   21824:	mov	r2, #24
   21828:	ldr	r3, [pc, #532]	; 21a44 <main@@Base+0xb804>
   2182c:	add	r3, pc, r3
   21830:	bl	410b0 <flatcc_json_printer_bool_vector_field@@Base>
   21834:	str	sl, [sp]
   21838:	vldr	s0, [pc, #392]	; 219c8 <main@@Base+0xb788>
   2183c:	mov	r0, r5
   21840:	mov	r1, r4
   21844:	mov	r2, #25
   21848:	ldr	r3, [pc, #504]	; 21a48 <main@@Base+0xb808>
   2184c:	add	r3, pc, r3
   21850:	bl	3d25c <flatcc_json_printer_float_field@@Base>
   21854:	mov	r6, #6
   21858:	vmov.f32	s0, #8	; 0x40400000  3.0
   2185c:	mov	r0, r5
   21860:	mov	r1, r4
   21864:	mov	r2, #26
   21868:	str	r6, [sp]
   2186c:	ldr	r3, [pc, #472]	; 21a4c <main@@Base+0xb80c>
   21870:	add	r3, pc, r3
   21874:	bl	3d25c <flatcc_json_printer_float_field@@Base>
   21878:	str	r6, [sp]
   2187c:	vldr	s0, [pc, #328]	; 219cc <main@@Base+0xb78c>
   21880:	mov	r0, r5
   21884:	mov	r1, r4
   21888:	mov	r2, #27
   2188c:	ldr	r3, [pc, #444]	; 21a50 <main@@Base+0xb810>
   21890:	add	r3, pc, r3
   21894:	bl	3d25c <flatcc_json_printer_float_field@@Base>
   21898:	mov	r0, #18
   2189c:	mov	r1, r4
   218a0:	mov	r2, #28
   218a4:	str	r0, [sp]
   218a8:	mov	r0, r5
   218ac:	ldr	r3, [pc, #416]	; 21a54 <main@@Base+0xb814>
   218b0:	add	r3, pc, r3
   218b4:	bl	4474c <flatcc_json_printer_string_vector_field@@Base>
   218b8:	ldr	r0, [pc, #408]	; 21a58 <main@@Base+0xb818>
   218bc:	stm	sp, {r8, r9}
   218c0:	mov	r1, r4
   218c4:	mov	r2, #29
   218c8:	add	r0, pc, r0
   218cc:	str	r0, [sp, #8]
   218d0:	mov	r0, r5
   218d4:	ldr	r3, [pc, #384]	; 21a5c <main@@Base+0xb81c>
   218d8:	add	r3, pc, r3
   218dc:	bl	441b0 <flatcc_json_printer_struct_vector_field@@Base>
   218e0:	mov	r6, #4
   218e4:	mov	r0, r5
   218e8:	mov	r1, r4
   218ec:	mov	r2, #30
   218f0:	str	r6, [sp]
   218f4:	ldr	r3, [pc, #356]	; 21a60 <main@@Base+0xb820>
   218f8:	add	r3, pc, r3
   218fc:	bl	3ef70 <flatcc_json_printer_uint8_vector_field@@Base>
   21900:	str	sl, [sp]
   21904:	str	r6, [sp, #4]
   21908:	mov	r1, r4
   2190c:	mov	r2, #31
   21910:	ldr	r0, [pc, #332]	; 21a64 <main@@Base+0xb824>
   21914:	add	r0, pc, r0
   21918:	str	r0, [sp, #8]
   2191c:	mov	r0, r5
   21920:	ldr	r3, [pc, #320]	; 21a68 <main@@Base+0xb828>
   21924:	add	r3, pc, r3
   21928:	bl	441b0 <flatcc_json_printer_struct_vector_field@@Base>
   2192c:	mov	r0, #15
   21930:	mov	r1, r4
   21934:	mov	r2, #32
   21938:	str	r0, [sp]
   2193c:	mov	r0, r5
   21940:	ldr	r3, [pc, #292]	; 21a6c <main@@Base+0xb82c>
   21944:	add	r3, pc, r3
   21948:	bl	40cb8 <flatcc_json_printer_int64_vector_field@@Base>
   2194c:	str	r7, [sp]
   21950:	mov	r0, r5
   21954:	mov	r1, r4
   21958:	mov	r2, #33	; 0x21
   2195c:	ldr	r3, [pc, #268]	; 21a70 <main@@Base+0xb830>
   21960:	add	r3, pc, r3
   21964:	bl	41898 <flatcc_json_printer_double_vector_field@@Base>
   21968:	ldr	r0, [pc, #260]	; 21a74 <main@@Base+0xb834>
   2196c:	mov	r1, #21
   21970:	mov	r2, #34	; 0x22
   21974:	str	r1, [sp]
   21978:	mov	r1, r4
   2197c:	add	r0, pc, r0
   21980:	str	r0, [sp, #4]
   21984:	mov	r0, r5
   21988:	ldr	r3, [pc, #232]	; 21a78 <main@@Base+0xb838>
   2198c:	add	r3, pc, r3
   21990:	bl	45370 <flatcc_json_printer_table_field@@Base>
   21994:	ldr	r0, [pc, #224]	; 21a7c <main@@Base+0xb83c>
   21998:	mov	r1, #10
   2199c:	mov	r2, #35	; 0x23
   219a0:	str	r1, [sp]
   219a4:	mov	r1, r4
   219a8:	add	r0, pc, r0
   219ac:	str	r0, [sp, #4]
   219b0:	mov	r0, r5
   219b4:	ldr	r3, [pc, #196]	; 21a80 <main@@Base+0xb840>
   219b8:	add	r3, pc, r3
   219bc:	bl	45370 <flatcc_json_printer_table_field@@Base>
   219c0:	sub	sp, fp, #28
   219c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219c8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   219cc:	andeq	r0, r0, r0
   219d0:	andeq	ip, r0, r4, asr #17
   219d4:	andeq	r9, r2, ip, lsl sl
   219d8:	strdeq	r9, [r2], -r4
   219dc:	ldrdeq	r9, [r2], -r1
   219e0:			; <UNDEFINED> instruction: 0x000299b8
   219e4:	muleq	r2, r9, r9
   219e8:	andeq	ip, r0, r8, lsl r9
   219ec:	andeq	r9, r2, pc, ror #18
   219f0:	andeq	ip, r0, r0, ror #20
   219f4:	ldrdeq	ip, [r0], -r0
   219f8:			; <UNDEFINED> instruction: 0x00029ab3
   219fc:	muleq	r0, r0, sl
   21a00:	andeq	r9, r2, r1, lsl r9
   21a04:	strdeq	r9, [r2], -r7
   21a08:			; <UNDEFINED> instruction: 0xfffffe58
   21a0c:	andeq	r9, r2, r5, ror #17
   21a10:	ldrdeq	r9, [r2], -r3
   21a14:			; <UNDEFINED> instruction: 0x000298b9
   21a18:	andeq	ip, r0, r4, asr #20
   21a1c:	andeq	r9, r2, r2, lsr #17
   21a20:	andeq	r9, r2, r4, lsl #17
   21a24:	andeq	r9, r2, sp, ror #16
   21a28:	andeq	r9, r2, r2, ror #16
   21a2c:	andeq	r9, r2, pc, asr #16
   21a30:	andeq	r9, r2, ip, lsr r8
   21a34:	andeq	r9, r2, r1, lsr r8
   21a38:	andeq	r9, r2, r7, lsr #16
   21a3c:	andeq	r9, r2, r5, lsl r8
   21a40:	strdeq	r9, [r2], -pc	; <UNPREDICTABLE>
   21a44:	strdeq	r9, [r2], -r5
   21a48:	andeq	r9, r2, r6, ror #15
   21a4c:	andeq	r9, r2, r8, asr #15
   21a50:	andeq	r9, r2, pc, lsr #15
   21a54:	muleq	r2, r6, r7
   21a58:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   21a5c:	andeq	r9, r2, r1, lsl #15
   21a60:	andeq	r9, r2, r9, ror r7
   21a64:	muleq	r0, r8, r7
   21a68:	andeq	r9, r2, r2, asr r7
   21a6c:	andeq	r9, r2, r8, lsr r7
   21a70:	andeq	r9, r2, ip, lsr #14
   21a74:	muleq	r0, ip, r8
   21a78:	andeq	r9, r2, r2, lsl r7
   21a7c:	andeq	ip, r0, r4, ror r8
   21a80:	strdeq	r9, [r2], -ip
   21a84:	push	{r4, r5, r6, r7, fp, lr}
   21a88:	add	fp, sp, #16
   21a8c:	sub	sp, sp, #8
   21a90:	mov	r1, #0
   21a94:	mov	r2, #32
   21a98:	mov	r3, #16
   21a9c:	mov	r4, r0
   21aa0:	bl	342dc <flatcc_verify_field@@Base>
   21aa4:	cmp	r0, #0
   21aa8:	bne	21eb0 <main@@Base+0xbc70>
   21aac:	mov	r0, r4
   21ab0:	mov	r1, #2
   21ab4:	mov	r2, #2
   21ab8:	mov	r3, #2
   21abc:	bl	342dc <flatcc_verify_field@@Base>
   21ac0:	cmp	r0, #0
   21ac4:	bne	21eb0 <main@@Base+0xbc70>
   21ac8:	mov	r0, r4
   21acc:	mov	r1, #1
   21ad0:	mov	r2, #2
   21ad4:	mov	r3, #2
   21ad8:	bl	342dc <flatcc_verify_field@@Base>
   21adc:	cmp	r0, #0
   21ae0:	bne	21eb0 <main@@Base+0xbc70>
   21ae4:	mov	r0, r4
   21ae8:	mov	r1, #3
   21aec:	mov	r2, #1
   21af0:	bl	34360 <flatcc_verify_string_field@@Base>
   21af4:	cmp	r0, #0
   21af8:	bne	21eb0 <main@@Base+0xbc70>
   21afc:	mov	r0, r4
   21b00:	mov	r1, #6
   21b04:	mov	r2, #1
   21b08:	mov	r3, #1
   21b0c:	mov	r5, #1
   21b10:	bl	342dc <flatcc_verify_field@@Base>
   21b14:	cmp	r0, #0
   21b18:	bne	21eb0 <main@@Base+0xbc70>
   21b1c:	mvn	r0, #0
   21b20:	mov	r1, #5
   21b24:	mov	r2, #0
   21b28:	mov	r3, #1
   21b2c:	str	r5, [sp]
   21b30:	str	r0, [sp, #4]
   21b34:	mov	r0, r4
   21b38:	bl	34444 <flatcc_verify_vector_field@@Base>
   21b3c:	cmp	r0, #0
   21b40:	bne	21eb0 <main@@Base+0xbc70>
   21b44:	ldr	r3, [pc, #908]	; 21ed8 <main@@Base+0xbc98>
   21b48:	mov	r0, r4
   21b4c:	mov	r1, #11
   21b50:	mov	r2, #0
   21b54:	add	r3, pc, r3
   21b58:	bl	34834 <flatcc_verify_table_vector_field@@Base>
   21b5c:	cmp	r0, #0
   21b60:	bne	21eb0 <main@@Base+0xbc70>
   21b64:	mov	r0, r4
   21b68:	mov	r1, #10
   21b6c:	mov	r2, #0
   21b70:	bl	3453c <flatcc_verify_string_vector_field@@Base>
   21b74:	cmp	r0, #0
   21b78:	bne	21eb0 <main@@Base+0xbc70>
   21b7c:	mov	r0, r4
   21b80:	mov	r1, #28
   21b84:	mov	r2, #0
   21b88:	bl	3453c <flatcc_verify_string_vector_field@@Base>
   21b8c:	cmp	r0, #0
   21b90:	bne	21eb0 <main@@Base+0xbc70>
   21b94:	mvn	r0, #0
   21b98:	mov	r1, #1
   21b9c:	mov	r2, #0
   21ba0:	mov	r3, #1
   21ba4:	str	r1, [sp]
   21ba8:	str	r0, [sp, #4]
   21bac:	mov	r0, r4
   21bb0:	mov	r1, #24
   21bb4:	bl	34444 <flatcc_verify_vector_field@@Base>
   21bb8:	cmp	r0, #0
   21bbc:	bne	21eb0 <main@@Base+0xbc70>
   21bc0:	mvn	r0, #-536870912	; 0xe0000000
   21bc4:	mov	r1, #4
   21bc8:	mov	r2, #0
   21bcc:	mov	r3, #8
   21bd0:	str	r1, [sp]
   21bd4:	str	r0, [sp, #4]
   21bd8:	mov	r0, r4
   21bdc:	mov	r1, #29
   21be0:	bl	34444 <flatcc_verify_vector_field@@Base>
   21be4:	cmp	r0, #0
   21be8:	bne	21eb0 <main@@Base+0xbc70>
   21bec:	ldr	r5, [pc, #744]	; 21edc <main@@Base+0xbc9c>
   21bf0:	mov	r0, r4
   21bf4:	mov	r1, #12
   21bf8:	mov	r2, #0
   21bfc:	add	r5, pc, r5
   21c00:	mov	r3, r5
   21c04:	bl	346e0 <flatcc_verify_table_field@@Base>
   21c08:	cmp	r0, #0
   21c0c:	bne	21eb0 <main@@Base+0xbc70>
   21c10:	ldr	r3, [pc, #712]	; 21ee0 <main@@Base+0xbca0>
   21c14:	mov	r0, r4
   21c18:	mov	r1, #8
   21c1c:	mov	r2, #0
   21c20:	add	r3, pc, r3
   21c24:	bl	35664 <flatcc_verify_union_field@@Base>
   21c28:	cmp	r0, #0
   21c2c:	bne	21eb0 <main@@Base+0xbc70>
   21c30:	mvn	r6, #-1073741824	; 0xc0000000
   21c34:	mov	r7, #2
   21c38:	mov	r0, r4
   21c3c:	mov	r1, #9
   21c40:	mov	r2, #0
   21c44:	mov	r3, #4
   21c48:	str	r7, [sp]
   21c4c:	str	r6, [sp, #4]
   21c50:	bl	34444 <flatcc_verify_vector_field@@Base>
   21c54:	cmp	r0, #0
   21c58:	bne	21eb0 <main@@Base+0xbc70>
   21c5c:	mov	r0, r4
   21c60:	mov	r1, #31
   21c64:	mov	r2, #0
   21c68:	mov	r3, #4
   21c6c:	str	r7, [sp]
   21c70:	str	r6, [sp, #4]
   21c74:	bl	34444 <flatcc_verify_vector_field@@Base>
   21c78:	cmp	r0, #0
   21c7c:	bne	21eb0 <main@@Base+0xbc70>
   21c80:	mov	r0, #1
   21c84:	mov	r1, #13
   21c88:	mov	r2, #0
   21c8c:	mov	r3, #0
   21c90:	stm	sp, {r0, r5}
   21c94:	mov	r0, r4
   21c98:	bl	35354 <flatcc_verify_table_as_nested_root@@Base>
   21c9c:	cmp	r0, #0
   21ca0:	bne	21eb0 <main@@Base+0xbc70>
   21ca4:	ldr	r3, [pc, #568]	; 21ee4 <main@@Base+0xbca4>
   21ca8:	mov	r0, r4
   21cac:	mov	r1, #14
   21cb0:	mov	r2, #0
   21cb4:	add	r3, pc, r3
   21cb8:	bl	346e0 <flatcc_verify_table_field@@Base>
   21cbc:	cmp	r0, #0
   21cc0:	bne	21eb0 <main@@Base+0xbc70>
   21cc4:	mov	r0, r4
   21cc8:	mov	r1, #15
   21ccc:	mov	r2, #1
   21cd0:	mov	r3, #1
   21cd4:	bl	342dc <flatcc_verify_field@@Base>
   21cd8:	cmp	r0, #0
   21cdc:	bne	21eb0 <main@@Base+0xbc70>
   21ce0:	mov	r0, r4
   21ce4:	mov	r1, #16
   21ce8:	mov	r2, #4
   21cec:	mov	r3, #4
   21cf0:	bl	342dc <flatcc_verify_field@@Base>
   21cf4:	cmp	r0, #0
   21cf8:	bne	21eb0 <main@@Base+0xbc70>
   21cfc:	mov	r0, r4
   21d00:	mov	r1, #17
   21d04:	mov	r2, #4
   21d08:	mov	r3, #4
   21d0c:	bl	342dc <flatcc_verify_field@@Base>
   21d10:	cmp	r0, #0
   21d14:	bne	21eb0 <main@@Base+0xbc70>
   21d18:	mov	r0, r4
   21d1c:	mov	r1, #18
   21d20:	mov	r2, #8
   21d24:	mov	r3, #8
   21d28:	bl	342dc <flatcc_verify_field@@Base>
   21d2c:	cmp	r0, #0
   21d30:	bne	21eb0 <main@@Base+0xbc70>
   21d34:	mov	r0, r4
   21d38:	mov	r1, #19
   21d3c:	mov	r2, #8
   21d40:	mov	r3, #8
   21d44:	bl	342dc <flatcc_verify_field@@Base>
   21d48:	cmp	r0, #0
   21d4c:	bne	21eb0 <main@@Base+0xbc70>
   21d50:	mov	r0, r4
   21d54:	mov	r1, #20
   21d58:	mov	r2, #4
   21d5c:	mov	r3, #4
   21d60:	bl	342dc <flatcc_verify_field@@Base>
   21d64:	cmp	r0, #0
   21d68:	bne	21eb0 <main@@Base+0xbc70>
   21d6c:	mov	r0, r4
   21d70:	mov	r1, #21
   21d74:	mov	r2, #4
   21d78:	mov	r3, #4
   21d7c:	bl	342dc <flatcc_verify_field@@Base>
   21d80:	cmp	r0, #0
   21d84:	bne	21eb0 <main@@Base+0xbc70>
   21d88:	mov	r0, r4
   21d8c:	mov	r1, #22
   21d90:	mov	r2, #8
   21d94:	mov	r3, #8
   21d98:	bl	342dc <flatcc_verify_field@@Base>
   21d9c:	cmp	r0, #0
   21da0:	bne	21eb0 <main@@Base+0xbc70>
   21da4:	mov	r0, r4
   21da8:	mov	r1, #23
   21dac:	mov	r2, #8
   21db0:	mov	r3, #8
   21db4:	bl	342dc <flatcc_verify_field@@Base>
   21db8:	cmp	r0, #0
   21dbc:	bne	21eb0 <main@@Base+0xbc70>
   21dc0:	mov	r0, r4
   21dc4:	mov	r1, #25
   21dc8:	mov	r2, #4
   21dcc:	mov	r3, #4
   21dd0:	bl	342dc <flatcc_verify_field@@Base>
   21dd4:	cmp	r0, #0
   21dd8:	bne	21eb0 <main@@Base+0xbc70>
   21ddc:	mov	r0, r4
   21de0:	mov	r1, #26
   21de4:	mov	r2, #4
   21de8:	mov	r3, #4
   21dec:	bl	342dc <flatcc_verify_field@@Base>
   21df0:	cmp	r0, #0
   21df4:	bne	21eb0 <main@@Base+0xbc70>
   21df8:	mov	r0, r4
   21dfc:	mov	r1, #27
   21e00:	mov	r2, #4
   21e04:	mov	r3, #4
   21e08:	bl	342dc <flatcc_verify_field@@Base>
   21e0c:	cmp	r0, #0
   21e10:	bne	21eb0 <main@@Base+0xbc70>
   21e14:	mvn	r0, #0
   21e18:	mov	r1, #1
   21e1c:	mov	r2, #0
   21e20:	mov	r3, #1
   21e24:	str	r1, [sp]
   21e28:	str	r0, [sp, #4]
   21e2c:	mov	r0, r4
   21e30:	mov	r1, #30
   21e34:	bl	34444 <flatcc_verify_vector_field@@Base>
   21e38:	cmp	r0, #0
   21e3c:	bne	21eb0 <main@@Base+0xbc70>
   21e40:	mvn	r5, #-536870912	; 0xe0000000
   21e44:	mov	r6, #8
   21e48:	mov	r0, r4
   21e4c:	mov	r1, #32
   21e50:	mov	r2, #0
   21e54:	mov	r3, #8
   21e58:	str	r6, [sp]
   21e5c:	str	r5, [sp, #4]
   21e60:	bl	34444 <flatcc_verify_vector_field@@Base>
   21e64:	cmp	r0, #0
   21e68:	bne	21eb0 <main@@Base+0xbc70>
   21e6c:	mov	r0, r4
   21e70:	mov	r1, #33	; 0x21
   21e74:	mov	r2, #0
   21e78:	mov	r3, #8
   21e7c:	str	r6, [sp]
   21e80:	str	r5, [sp, #4]
   21e84:	bl	34444 <flatcc_verify_vector_field@@Base>
   21e88:	cmp	r0, #0
   21e8c:	bne	21eb0 <main@@Base+0xbc70>
   21e90:	ldr	r3, [pc, #80]	; 21ee8 <main@@Base+0xbca8>
   21e94:	mov	r0, r4
   21e98:	mov	r1, #34	; 0x22
   21e9c:	mov	r2, #0
   21ea0:	add	r3, pc, r3
   21ea4:	bl	346e0 <flatcc_verify_table_field@@Base>
   21ea8:	cmp	r0, #0
   21eac:	beq	21eb8 <main@@Base+0xbc78>
   21eb0:	sub	sp, fp, #16
   21eb4:	pop	{r4, r5, r6, r7, fp, pc}
   21eb8:	ldr	r3, [pc, #44]	; 21eec <main@@Base+0xbcac>
   21ebc:	mov	r0, r4
   21ec0:	mov	r1, #35	; 0x23
   21ec4:	mov	r2, #0
   21ec8:	add	r3, pc, r3
   21ecc:	sub	sp, fp, #16
   21ed0:	pop	{r4, r5, r6, r7, fp, lr}
   21ed4:	b	346e0 <flatcc_verify_table_field@@Base>
   21ed8:			; <UNDEFINED> instruction: 0xffffff28
   21edc:			; <UNDEFINED> instruction: 0xfffffe80
   21ee0:	andeq	ip, r0, ip, lsl #28
   21ee4:	andeq	ip, r0, r8, lsr #27
   21ee8:	andeq	ip, r0, r4, lsl ip
   21eec:	strdeq	ip, [r0], -r4
   21ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ef4:	add	fp, sp, #28
   21ef8:	sub	sp, sp, #12
   21efc:	mov	r5, r1
   21f00:	sub	r1, r2, r1
   21f04:	cmp	r1, #8
   21f08:	movcs	r1, #8
   21f0c:	and	r1, r1, #15
   21f10:	sub	r1, r1, #1
   21f14:	cmp	r1, #7
   21f18:	bhi	2208c <main@@Base+0xbe4c>
   21f1c:	str	r3, [sp, #8]
   21f20:	add	r4, pc, #36	; 0x24
   21f24:	mov	r9, #0
   21f28:	mov	ip, #0
   21f2c:	mov	lr, #0
   21f30:	mov	sl, #0
   21f34:	mov	r6, #0
   21f38:	mov	r7, #0
   21f3c:	mov	r3, #0
   21f40:	ldr	r8, [r4, r1, lsl #2]
   21f44:	mov	r1, #0
   21f48:	add	pc, r4, r8
   21f4c:	andeq	r0, r0, r4, rrx
   21f50:	andeq	r0, r0, ip, asr r0
   21f54:	andeq	r0, r0, r4, asr r0
   21f58:	andeq	r0, r0, ip, asr #32
   21f5c:	andeq	r0, r0, r0, asr #32
   21f60:	andeq	r0, r0, r4, lsr r0
   21f64:	andeq	r0, r0, r4, lsr #32
   21f68:	andeq	r0, r0, r0, lsr #32
   21f6c:	ldrb	ip, [r5, #7]
   21f70:	ldrb	r1, [r5, #6]
   21f74:	mov	lr, r9
   21f78:	orr	r1, ip, r1, lsl #8
   21f7c:	mov	r9, r1
   21f80:	ldrb	r1, [r5, #5]
   21f84:	mov	sl, lr
   21f88:	orr	r9, r9, r1, lsl #16
   21f8c:	ldrb	r1, [r5, #4]
   21f90:	mov	r6, sl
   21f94:	orr	r9, r9, r1, lsl #24
   21f98:	ldrb	r1, [r5, #3]
   21f9c:	orr	r7, r1, r6
   21fa0:	ldrb	r1, [r5, #2]
   21fa4:	orr	r3, r7, r1, lsl #8
   21fa8:	ldrb	r1, [r5, #1]
   21fac:	orr	r1, r3, r1, lsl #16
   21fb0:	ldrb	r7, [r5]
   21fb4:	ldr	r3, [fp, #12]
   21fb8:	ldr	r8, [fp, #8]
   21fbc:	orr	r4, r1, r7, lsl #24
   21fc0:	movw	r7, #25957	; 0x6565
   21fc4:	mvn	r1, #-1845493760	; 0x92000000
   21fc8:	movt	r7, #18290	; 0x4772
   21fcc:	subs	r1, r1, r9
   21fd0:	sbcs	r1, r7, r4
   21fd4:	bcc	2200c <main@@Base+0xbdcc>
   21fd8:	movw	r1, #30053	; 0x7565
   21fdc:	movt	r1, #17004	; 0x426c
   21fe0:	teq	r4, r1
   21fe4:	bne	2208c <main@@Base+0xbe4c>
   21fe8:	str	r3, [sp]
   21fec:	mov	r1, r5
   21ff0:	mov	r3, #4
   21ff4:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   21ff8:	cmp	r0, r5
   21ffc:	beq	2208c <main@@Base+0xbe4c>
   22000:	mov	r1, #0
   22004:	mov	r2, #8
   22008:	b	22078 <main@@Base+0xbe38>
   2200c:	movw	r6, #25600	; 0x6400
   22010:	bic	r1, r4, #255	; 0xff
   22014:	movt	r6, #21093	; 0x5265
   22018:	teq	r1, r6
   2201c:	bne	22044 <main@@Base+0xbe04>
   22020:	str	r3, [sp]
   22024:	mov	r1, r5
   22028:	mov	r3, #3
   2202c:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   22030:	cmp	r0, r5
   22034:	beq	2208c <main@@Base+0xbe4c>
   22038:	mov	r1, #0
   2203c:	mov	r2, #1
   22040:	b	22078 <main@@Base+0xbe38>
   22044:	eor	r1, r4, r7
   22048:	and	r7, r9, #-16777216	; 0xff000000
   2204c:	eor	r7, r7, #1845493760	; 0x6e000000
   22050:	orrs	r1, r7, r1
   22054:	bne	2208c <main@@Base+0xbe4c>
   22058:	str	r3, [sp]
   2205c:	mov	r1, r5
   22060:	mov	r3, #5
   22064:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   22068:	cmp	r0, r5
   2206c:	beq	2208c <main@@Base+0xbe4c>
   22070:	mov	r1, #0
   22074:	mov	r2, #2
   22078:	str	r2, [r8]
   2207c:	str	r1, [r8, #4]
   22080:	mov	r5, r0
   22084:	ldr	r2, [sp, #8]
   22088:	str	r1, [r2]
   2208c:	mov	r0, r5
   22090:	sub	sp, fp, #28
   22094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2209c:	add	fp, sp, #28
   220a0:	sub	sp, sp, #20
   220a4:	sub	sl, r2, r1
   220a8:	cmp	sl, #8
   220ac:	mov	r7, sl
   220b0:	movcs	r7, #8
   220b4:	and	r7, r7, #15
   220b8:	sub	r7, r7, #1
   220bc:	cmp	r7, #7
   220c0:	bhi	224d0 <main@@Base+0xc290>
   220c4:	str	r0, [sp, #16]
   220c8:	str	r3, [sp, #12]
   220cc:	mov	r4, #0
   220d0:	mov	lr, #0
   220d4:	mov	r6, #0
   220d8:	mov	r3, #0
   220dc:	mov	r5, #0
   220e0:	mov	r8, #0
   220e4:	mov	r9, #0
   220e8:	ldr	r0, [fp, #12]
   220ec:	str	r0, [sp, #8]
   220f0:	ldr	r0, [fp, #8]
   220f4:	str	r0, [sp, #4]
   220f8:	add	ip, pc, #8
   220fc:	ldr	r0, [ip, r7, lsl #2]
   22100:	mov	r7, #0
   22104:	add	pc, ip, r0
   22108:	andeq	r0, r0, r4, rrx
   2210c:	andeq	r0, r0, ip, asr r0
   22110:	andeq	r0, r0, r4, asr r0
   22114:	andeq	r0, r0, ip, asr #32
   22118:	andeq	r0, r0, r0, asr #32
   2211c:	andeq	r0, r0, r4, lsr r0
   22120:	andeq	r0, r0, r4, lsr #32
   22124:	andeq	r0, r0, r0, lsr #32
   22128:	ldrb	lr, [r1, #7]
   2212c:	ldrb	r0, [r1, #6]
   22130:	mov	r7, r4
   22134:	orr	r0, lr, r0, lsl #8
   22138:	mov	r4, r0
   2213c:	ldrb	r0, [r1, #5]
   22140:	mov	r6, r7
   22144:	orr	r4, r4, r0, lsl #16
   22148:	ldrb	r0, [r1, #4]
   2214c:	mov	r3, r6
   22150:	orr	r4, r4, r0, lsl #24
   22154:	ldrb	r0, [r1, #3]
   22158:	orr	r5, r0, r3
   2215c:	ldrb	r0, [r1, #2]
   22160:	orr	r8, r5, r0, lsl #8
   22164:	ldrb	r0, [r1, #1]
   22168:	orr	r9, r8, r0, lsl #16
   2216c:	ldrb	r0, [r1]
   22170:	movw	lr, #30061	; 0x756d
   22174:	movw	r3, #30815	; 0x785f
   22178:	movt	lr, #25966	; 0x656e
   2217c:	movt	r3, #26725	; 0x6865
   22180:	orr	r6, r9, r0, lsl #24
   22184:	subs	r0, r4, lr
   22188:	sbcs	r0, r6, r3
   2218c:	bcs	221f4 <main@@Base+0xbfb4>
   22190:	movw	r3, #27759	; 0x6c6f
   22194:	mvn	r0, #-1912602624	; 0x8e000000
   22198:	bic	r7, r6, #255	; 0xff
   2219c:	movt	r3, #17263	; 0x436f
   221a0:	subs	r0, r0, r4
   221a4:	sbcs	r0, r3, r6
   221a8:	bcc	22250 <main@@Base+0xc010>
   221ac:	cmp	sl, #4
   221b0:	blt	224d0 <main@@Base+0xc290>
   221b4:	movw	r0, #30976	; 0x7900
   221b8:	movt	r0, #16750	; 0x416e
   221bc:	teq	r7, r0
   221c0:	bne	224d0 <main@@Base+0xc290>
   221c4:	ldrb	r0, [r1, #3]
   221c8:	mov	r3, r1
   221cc:	cmp	r0, #46	; 0x2e
   221d0:	addeq	r3, r3, #4
   221d4:	cmp	r3, r1
   221d8:	beq	224d0 <main@@Base+0xc290>
   221dc:	mov	r1, r3
   221e0:	ldr	r0, [sp, #16]
   221e4:	ldr	r3, [sp, #12]
   221e8:	sub	sp, fp, #28
   221ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221f0:	b	25238 <main@@Base+0xeff8>
   221f4:	add	r0, r3, #64512	; 0xfc00
   221f8:	add	r7, r0, #17301504	; 0x1080000
   221fc:	subs	r0, r4, lr
   22200:	sbcs	r0, r6, r7
   22204:	bcs	22298 <main@@Base+0xc058>
   22208:	cmp	sl, #9
   2220c:	blt	224d0 <main@@Base+0xc290>
   22210:	eor	r0, r4, lr
   22214:	eor	r3, r6, r3
   22218:	orrs	r0, r0, r3
   2221c:	bne	224d0 <main@@Base+0xc290>
   22220:	ldrb	r0, [r1, #8]
   22224:	mov	r3, r1
   22228:	cmp	r0, #46	; 0x2e
   2222c:	addeq	r3, r3, #9
   22230:	cmp	r3, r1
   22234:	beq	224d0 <main@@Base+0xc290>
   22238:	mov	r1, r3
   2223c:	ldr	r0, [sp, #16]
   22240:	ldr	r3, [sp, #12]
   22244:	sub	sp, fp, #28
   22248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2224c:	b	2663c <main@@Base+0x103fc>
   22250:	movw	r0, #28416	; 0x6f00
   22254:	movt	r0, #18031	; 0x466f
   22258:	teq	r7, r0
   2225c:	bne	222f4 <main@@Base+0xc0b4>
   22260:	cmp	sl, #4
   22264:	blt	224d0 <main@@Base+0xc290>
   22268:	ldrb	r0, [r1, #3]
   2226c:	mov	r3, r1
   22270:	cmp	r0, #46	; 0x2e
   22274:	addeq	r3, r3, #4
   22278:	cmp	r3, r1
   2227c:	beq	224d0 <main@@Base+0xc290>
   22280:	mov	r1, r3
   22284:	ldr	r0, [sp, #16]
   22288:	ldr	r3, [sp, #12]
   2228c:	sub	sp, fp, #28
   22290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22294:	b	263c4 <main@@Base+0x10184>
   22298:	sub	r0, r3, #4352	; 0x1100
   2229c:	subs	r3, r4, lr
   222a0:	sub	r0, r0, #-100663296	; 0xfa000000
   222a4:	sbcs	r0, r6, r0
   222a8:	bcs	22340 <main@@Base+0xc100>
   222ac:	cmp	sl, #9
   222b0:	blt	224d0 <main@@Base+0xc290>
   222b4:	eor	r0, r4, lr
   222b8:	eor	r3, r6, r7
   222bc:	orrs	r0, r0, r3
   222c0:	bne	224d0 <main@@Base+0xc290>
   222c4:	ldrb	r0, [r1, #8]
   222c8:	mov	r3, r1
   222cc:	cmp	r0, #46	; 0x2e
   222d0:	addeq	r3, r3, #9
   222d4:	cmp	r3, r1
   222d8:	beq	224d0 <main@@Base+0xc290>
   222dc:	mov	r1, r3
   222e0:	ldr	r0, [sp, #16]
   222e4:	ldr	r3, [sp, #12]
   222e8:	sub	sp, fp, #28
   222ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222f0:	b	267f0 <main@@Base+0x105b0>
   222f4:	cmp	sl, #6
   222f8:	blt	224d0 <main@@Base+0xc290>
   222fc:	and	r0, r4, #-16777216	; 0xff000000
   22300:	eor	r3, r6, r3
   22304:	eor	r0, r0, #1912602624	; 0x72000000
   22308:	orrs	r0, r0, r3
   2230c:	bne	224d0 <main@@Base+0xc290>
   22310:	ldrb	r0, [r1, #5]
   22314:	mov	r3, r1
   22318:	cmp	r0, #46	; 0x2e
   2231c:	addeq	r3, r3, #6
   22320:	cmp	r3, r1
   22324:	beq	224d0 <main@@Base+0xc290>
   22328:	mov	r1, r3
   2232c:	ldr	r0, [sp, #16]
   22330:	ldr	r3, [sp, #12]
   22334:	sub	sp, fp, #28
   22338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2233c:	b	21ef0 <main@@Base+0xbcb0>
   22340:	movw	r0, #29817	; 0x7479
   22344:	movw	r3, #29797	; 0x7465
   22348:	movt	r0, #28016	; 0x6d70
   2234c:	movt	r3, #28271	; 0x6e6f
   22350:	eor	r0, r4, r0
   22354:	eor	r3, r6, r3
   22358:	orrs	r0, r0, r3
   2235c:	beq	223b0 <main@@Base+0xc170>
   22360:	movw	r3, #26463	; 0x675f
   22364:	eor	r0, r4, lr
   22368:	movt	r3, #28261	; 0x6e65
   2236c:	eor	r3, r6, r3
   22370:	orrs	r0, r0, r3
   22374:	bne	224d0 <main@@Base+0xc290>
   22378:	cmp	sl, #9
   2237c:	blt	224d0 <main@@Base+0xc290>
   22380:	ldrb	r0, [r1, #8]
   22384:	mov	r3, r1
   22388:	cmp	r0, #46	; 0x2e
   2238c:	addeq	r3, r3, #9
   22390:	cmp	r3, r1
   22394:	beq	224d0 <main@@Base+0xc290>
   22398:	mov	r1, r3
   2239c:	ldr	r0, [sp, #16]
   223a0:	ldr	r3, [sp, #12]
   223a4:	sub	sp, fp, #28
   223a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223ac:	b	269e8 <main@@Base+0x107a8>
   223b0:	add	ip, r1, #8
   223b4:	sub	r5, r2, ip
   223b8:	cmp	r5, #8
   223bc:	mov	r0, r5
   223c0:	movcs	r0, #8
   223c4:	and	r0, r0, #15
   223c8:	sub	r3, r0, #1
   223cc:	cmp	r3, #7
   223d0:	bhi	224d0 <main@@Base+0xc290>
   223d4:	add	r0, pc, #20
   223d8:	mov	r8, #0
   223dc:	mov	r4, #0
   223e0:	mov	r7, #0
   223e4:	ldr	r6, [r0, r3, lsl #2]
   223e8:	mov	r3, #0
   223ec:	add	pc, r0, r6
   223f0:	andeq	r0, r0, r8, lsr r0
   223f4:	andeq	r0, r0, r0, lsr r0
   223f8:	andeq	r0, r0, r8, lsr #32
   223fc:	andeq	r0, r0, r0, lsr #32
   22400:	andeq	r0, r0, r0, lsr #32
   22404:	andeq	r0, r0, r0, lsr #32
   22408:	andeq	r0, r0, r0, lsr #32
   2240c:	andeq	r0, r0, r0, lsr #32
   22410:	ldrb	r3, [r1, #11]
   22414:	mov	r8, #0
   22418:	ldrb	r0, [r1, #10]
   2241c:	orr	r4, r3, r0, lsl #8
   22420:	ldrb	r0, [r1, #9]
   22424:	orr	r7, r4, r0, lsl #16
   22428:	cmp	r5, #5
   2242c:	blt	224d0 <main@@Base+0xc290>
   22430:	ldrb	r0, [ip]
   22434:	orr	r0, r7, r0, lsl #24
   22438:	eor	r0, r0, lr
   2243c:	orrs	r0, r8, r0
   22440:	bne	224d0 <main@@Base+0xc290>
   22444:	ldrb	r0, [r1, #12]
   22448:	mov	r5, ip
   2244c:	cmp	r0, #46	; 0x2e
   22450:	addeq	r5, r1, #13
   22454:	cmp	r5, ip
   22458:	beq	224d0 <main@@Base+0xc290>
   2245c:	sub	r0, r2, r5
   22460:	mov	r1, #-268435456	; 0xf0000000
   22464:	cmp	r0, #8
   22468:	movcs	r0, #8
   2246c:	add	r0, r1, r0, lsl #28
   22470:	asr	r0, r0, #28
   22474:	cmp	r0, #0
   22478:	blt	224cc <main@@Base+0xc28c>
   2247c:	ldrb	r0, [r5]
   22480:	cmp	r0, #120	; 0x78
   22484:	bne	224cc <main@@Base+0xc28c>
   22488:	ldr	r0, [sp, #8]
   2248c:	mov	r1, r5
   22490:	mov	r3, #1
   22494:	str	r0, [sp]
   22498:	ldr	r0, [sp, #16]
   2249c:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   224a0:	cmp	r0, r5
   224a4:	mov	r1, r5
   224a8:	beq	224d0 <main@@Base+0xc290>
   224ac:	ldr	r2, [sp, #4]
   224b0:	mov	r1, #0
   224b4:	str	r1, [r2]
   224b8:	str	r1, [r2, #4]
   224bc:	ldr	r2, [sp, #12]
   224c0:	str	r1, [r2]
   224c4:	mov	r1, r0
   224c8:	b	224d0 <main@@Base+0xc290>
   224cc:	mov	r1, r5
   224d0:	mov	r0, r1
   224d4:	sub	sp, fp, #28
   224d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   224e0:	add	fp, sp, #28
   224e4:	sub	sp, sp, #28
   224e8:	mov	r8, r2
   224ec:	sub	r2, r2, r1
   224f0:	cmp	r2, #8
   224f4:	movcs	r2, #8
   224f8:	and	r2, r2, #15
   224fc:	sub	r2, r2, #1
   22500:	cmp	r2, #7
   22504:	bhi	233f8 <main@@Base+0xd1b8>
   22508:	str	r0, [sp, #24]
   2250c:	mov	r0, #0
   22510:	mov	ip, #0
   22514:	mov	lr, #0
   22518:	mov	sl, #0
   2251c:	mov	r6, #0
   22520:	mov	r5, #0
   22524:	ldr	r7, [fp, #12]
   22528:	str	r7, [sp, #20]
   2252c:	ldr	r7, [fp, #8]
   22530:	str	r7, [sp, #16]
   22534:	add	r4, pc, #12
   22538:	mov	r7, #0
   2253c:	ldr	r9, [r4, r2, lsl #2]
   22540:	mov	r2, #0
   22544:	add	pc, r4, r9
   22548:	andeq	r0, r0, r4, rrx
   2254c:	andeq	r0, r0, ip, asr r0
   22550:	andeq	r0, r0, r4, asr r0
   22554:	andeq	r0, r0, ip, asr #32
   22558:	andeq	r0, r0, r0, asr #32
   2255c:	andeq	r0, r0, r4, lsr r0
   22560:	andeq	r0, r0, r4, lsr #32
   22564:	andeq	r0, r0, r0, lsr #32
   22568:	ldrb	ip, [r1, #7]
   2256c:	ldrb	r2, [r1, #6]
   22570:	mov	lr, r0
   22574:	orr	r2, ip, r2, lsl #8
   22578:	mov	r0, r2
   2257c:	ldrb	r2, [r1, #5]
   22580:	mov	sl, lr
   22584:	orr	r0, r0, r2, lsl #16
   22588:	ldrb	r2, [r1, #4]
   2258c:	mov	r6, sl
   22590:	orr	r0, r0, r2, lsl #24
   22594:	ldrb	r2, [r1, #3]
   22598:	orr	r7, r2, r6
   2259c:	ldrb	r2, [r1, #2]
   225a0:	orr	r5, r7, r2, lsl #8
   225a4:	ldrb	r2, [r1, #1]
   225a8:	orr	r2, r5, r2, lsl #16
   225ac:	ldrb	r7, [r1]
   225b0:	movw	r6, #18273	; 0x4761
   225b4:	movt	r6, #19833	; 0x4d79
   225b8:	orr	r2, r2, r7, lsl #24
   225bc:	movw	r7, #11844	; 0x2e44
   225c0:	movt	r7, #28005	; 0x6d65
   225c4:	subs	r7, r7, r0
   225c8:	sbcs	r7, r6, r2
   225cc:	bcc	22738 <main@@Base+0xc4f8>
   225d0:	movw	r7, #31022	; 0x792e
   225d4:	movt	r7, #24947	; 0x6173
   225d8:	eor	r0, r0, r7
   225dc:	movw	r7, #28276	; 0x6e74
   225e0:	movt	r7, #18017	; 0x4661
   225e4:	eor	r2, r2, r7
   225e8:	orrs	r0, r0, r2
   225ec:	bne	233f8 <main@@Base+0xd1b8>
   225f0:	add	lr, r1, #8
   225f4:	sub	r0, r8, lr
   225f8:	cmp	r0, #8
   225fc:	movcs	r0, #8
   22600:	and	r0, r0, #15
   22604:	sub	r0, r0, #1
   22608:	cmp	r0, #7
   2260c:	bhi	233f8 <main@@Base+0xd1b8>
   22610:	str	r3, [sp, #12]
   22614:	add	r5, pc, #36	; 0x24
   22618:	mov	sl, #0
   2261c:	mov	ip, #0
   22620:	mov	r9, #0
   22624:	mov	r6, #0
   22628:	mov	r7, #0
   2262c:	mov	r4, #0
   22630:	mov	r3, #0
   22634:	ldr	r2, [r5, r0, lsl #2]
   22638:	mov	r0, #0
   2263c:	add	pc, r5, r2
   22640:	andeq	r0, r0, r4, rrx
   22644:	andeq	r0, r0, ip, asr r0
   22648:	andeq	r0, r0, r4, asr r0
   2264c:	andeq	r0, r0, ip, asr #32
   22650:	andeq	r0, r0, r0, asr #32
   22654:	andeq	r0, r0, r4, lsr r0
   22658:	andeq	r0, r0, r4, lsr #32
   2265c:	andeq	r0, r0, r0, lsr #32
   22660:	ldrb	ip, [r1, #15]
   22664:	ldrb	r0, [r1, #14]
   22668:	mov	r9, sl
   2266c:	orr	r0, ip, r0, lsl #8
   22670:	mov	sl, r0
   22674:	ldrb	r0, [r1, #13]
   22678:	mov	r6, r9
   2267c:	orr	sl, sl, r0, lsl #16
   22680:	ldrb	r0, [r1, #12]
   22684:	mov	r7, r6
   22688:	orr	sl, sl, r0, lsl #24
   2268c:	ldrb	r0, [r1, #11]
   22690:	orr	r4, r0, r7
   22694:	ldrb	r0, [r1, #10]
   22698:	orr	r3, r4, r0, lsl #8
   2269c:	ldrb	r0, [r1, #9]
   226a0:	orr	r0, r3, r0, lsl #16
   226a4:	ldrb	r3, [lr]
   226a8:	movw	r2, #29797	; 0x7465
   226ac:	movt	r2, #24931	; 0x6163
   226b0:	eor	r2, sl, r2
   226b4:	orr	r0, r0, r3, lsl #24
   226b8:	movw	r3, #24946	; 0x6172
   226bc:	movt	r3, #17256	; 0x4368
   226c0:	eor	r0, r0, r3
   226c4:	orrs	r0, r2, r0
   226c8:	bne	233f8 <main@@Base+0xd1b8>
   226cc:	add	r0, r1, #16
   226d0:	mov	r7, #-268435456	; 0xf0000000
   226d4:	sub	r2, r8, r0
   226d8:	cmp	r2, #8
   226dc:	mov	r3, r2
   226e0:	movcs	r3, #8
   226e4:	add	r3, r7, r3, lsl #28
   226e8:	asr	r3, r3, #28
   226ec:	cmp	r3, #0
   226f0:	cmpge	r2, #2
   226f4:	blt	233f8 <main@@Base+0xd1b8>
   226f8:	ldrb	r2, [r0]
   226fc:	cmp	r2, #114	; 0x72
   22700:	bne	233f8 <main@@Base+0xd1b8>
   22704:	ldrb	r2, [r1, #17]
   22708:	ldr	r3, [sp, #12]
   2270c:	cmp	r2, #46	; 0x2e
   22710:	mov	r2, r0
   22714:	addeq	r2, r1, #18
   22718:	cmp	r2, r0
   2271c:	beq	233f8 <main@@Base+0xd1b8>
   22720:	ldr	r0, [sp, #24]
   22724:	mov	r1, r2
   22728:	mov	r2, r8
   2272c:	sub	sp, fp, #28
   22730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22734:	b	26b38 <main@@Base+0x108f8>
   22738:	movw	r7, #11855	; 0x2e4f
   2273c:	eor	r2, r2, r6
   22740:	movt	r7, #28005	; 0x6d65
   22744:	eor	r7, r0, r7
   22748:	orrs	r7, r7, r2
   2274c:	beq	228f0 <main@@Base+0xc6b0>
   22750:	movw	r7, #11845	; 0x2e45
   22754:	movt	r7, #28005	; 0x6d65
   22758:	eor	r0, r0, r7
   2275c:	orrs	r0, r0, r2
   22760:	bne	233f8 <main@@Base+0xd1b8>
   22764:	add	lr, r1, #8
   22768:	sub	r0, r8, lr
   2276c:	cmp	r0, #8
   22770:	movcs	r0, #8
   22774:	and	r0, r0, #15
   22778:	sub	r2, r0, #1
   2277c:	cmp	r2, #7
   22780:	bhi	233f8 <main@@Base+0xd1b8>
   22784:	str	r3, [sp, #12]
   22788:	add	r5, pc, #36	; 0x24
   2278c:	mov	r0, #0
   22790:	mov	ip, #0
   22794:	mov	r9, #0
   22798:	mov	r7, #0
   2279c:	mov	r6, #0
   227a0:	mov	r4, #0
   227a4:	mov	r3, #0
   227a8:	ldr	sl, [r5, r2, lsl #2]
   227ac:	mov	r2, #0
   227b0:	add	pc, r5, sl
   227b4:	andeq	r0, r0, r4, rrx
   227b8:	andeq	r0, r0, ip, asr r0
   227bc:	andeq	r0, r0, r4, asr r0
   227c0:	andeq	r0, r0, ip, asr #32
   227c4:	andeq	r0, r0, r0, asr #32
   227c8:	andeq	r0, r0, r4, lsr r0
   227cc:	andeq	r0, r0, r4, lsr #32
   227d0:	andeq	r0, r0, r0, lsr #32
   227d4:	ldrb	ip, [r1, #15]
   227d8:	ldrb	r2, [r1, #14]
   227dc:	mov	r9, r0
   227e0:	orr	r2, ip, r2, lsl #8
   227e4:	mov	r0, r2
   227e8:	ldrb	r2, [r1, #13]
   227ec:	mov	r7, r9
   227f0:	orr	r0, r0, r2, lsl #16
   227f4:	ldrb	r2, [r1, #12]
   227f8:	mov	r6, r7
   227fc:	orr	r0, r0, r2, lsl #24
   22800:	ldrb	r2, [r1, #11]
   22804:	orr	r4, r2, r6
   22808:	ldrb	r2, [r1, #10]
   2280c:	orr	r3, r4, r2, lsl #8
   22810:	ldrb	r2, [r1, #9]
   22814:	orr	r2, r3, r2, lsl #16
   22818:	ldrb	r3, [lr]
   2281c:	movw	r6, #11880	; 0x2e68
   22820:	movt	r6, #27749	; 0x6c65
   22824:	subs	r7, r0, r6
   22828:	orr	r2, r2, r3, lsl #24
   2282c:	movw	r3, #28016	; 0x6d70
   22830:	movt	r3, #30817	; 0x7861
   22834:	sbcs	r7, r2, r3
   22838:	bcs	22cd0 <main@@Base+0xca90>
   2283c:	ldr	lr, [sp, #12]
   22840:	subs	r7, r6, #37	; 0x25
   22844:	sbc	r5, r3, #0
   22848:	subs	r7, r0, r7
   2284c:	sbcs	r7, r2, r5
   22850:	bcs	22df0 <main@@Base+0xcbb0>
   22854:	subs	r7, r6, #39	; 0x27
   22858:	sbc	r3, r3, #0
   2285c:	eor	r0, r0, r7
   22860:	eor	r2, r2, r3
   22864:	orrs	r0, r0, r2
   22868:	bne	233f8 <main@@Base+0xd1b8>
   2286c:	add	r0, r1, #16
   22870:	sub	r2, r8, r0
   22874:	cmp	r2, #8
   22878:	mov	r3, r2
   2287c:	movcs	r3, #8
   22880:	and	r7, r3, #15
   22884:	sub	r3, r7, #2
   22888:	cmp	r3, #7
   2288c:	bcs	232d8 <main@@Base+0xd098>
   22890:	ldrb	r3, [r1, #17]
   22894:	lsl	r7, r3, #16
   22898:	mov	r3, #0
   2289c:	cmp	r2, #3
   228a0:	blt	233f8 <main@@Base+0xd1b8>
   228a4:	ldrb	r2, [r0]
   228a8:	orr	r2, r7, r2, lsl #24
   228ac:	eor	r2, r2, #7929856	; 0x790000
   228b0:	eor	r2, r2, #1845493760	; 0x6e000000
   228b4:	orrs	r2, r3, r2
   228b8:	bne	233f8 <main@@Base+0xd1b8>
   228bc:	ldrb	r2, [r1, #18]
   228c0:	cmp	r2, #46	; 0x2e
   228c4:	mov	r2, r0
   228c8:	addeq	r2, r1, #19
   228cc:	cmp	r2, r0
   228d0:	beq	233f8 <main@@Base+0xd1b8>
   228d4:	ldr	r0, [sp, #24]
   228d8:	mov	r1, r2
   228dc:	mov	r2, r8
   228e0:	mov	r3, lr
   228e4:	sub	sp, fp, #28
   228e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228ec:	b	25238 <main@@Base+0xeff8>
   228f0:	add	lr, r1, #8
   228f4:	sub	r0, r8, lr
   228f8:	cmp	r0, #8
   228fc:	movcs	r0, #8
   22900:	and	r0, r0, #15
   22904:	sub	r0, r0, #1
   22908:	cmp	r0, #7
   2290c:	bhi	233f8 <main@@Base+0xd1b8>
   22910:	str	r3, [sp, #12]
   22914:	add	r5, pc, #36	; 0x24
   22918:	mov	sl, #0
   2291c:	mov	ip, #0
   22920:	mov	r9, #0
   22924:	mov	r7, #0
   22928:	mov	r6, #0
   2292c:	mov	r4, #0
   22930:	mov	r3, #0
   22934:	ldr	r2, [r5, r0, lsl #2]
   22938:	mov	r0, #0
   2293c:	add	pc, r5, r2
   22940:	andeq	r0, r0, r4, rrx
   22944:	andeq	r0, r0, ip, asr r0
   22948:	andeq	r0, r0, r4, asr r0
   2294c:	andeq	r0, r0, ip, asr #32
   22950:	andeq	r0, r0, r0, asr #32
   22954:	andeq	r0, r0, r4, lsr r0
   22958:	andeq	r0, r0, r4, lsr #32
   2295c:	andeq	r0, r0, r0, lsr #32
   22960:	ldrb	ip, [r1, #15]
   22964:	ldrb	r0, [r1, #14]
   22968:	mov	r9, sl
   2296c:	orr	r0, ip, r0, lsl #8
   22970:	mov	sl, r0
   22974:	ldrb	r0, [r1, #13]
   22978:	mov	r7, r9
   2297c:	orr	sl, sl, r0, lsl #16
   22980:	ldrb	r0, [r1, #12]
   22984:	mov	r6, r7
   22988:	orr	sl, sl, r0, lsl #24
   2298c:	ldrb	r0, [r1, #11]
   22990:	orr	r4, r0, r6
   22994:	ldrb	r0, [r1, #10]
   22998:	orr	r3, r4, r0, lsl #8
   2299c:	ldrb	r0, [r1, #9]
   229a0:	orr	r0, r3, r0, lsl #16
   229a4:	ldrb	r3, [lr]
   229a8:	movw	r2, #28005	; 0x6d65
   229ac:	movt	r2, #20065	; 0x4e61
   229b0:	eor	r2, sl, r2
   229b4:	orr	r0, r0, r3, lsl #24
   229b8:	movw	r3, #25970	; 0x6572
   229bc:	movt	r3, #29800	; 0x7468
   229c0:	eor	r0, r0, r3
   229c4:	orrs	r0, r2, r0
   229c8:	bne	233f8 <main@@Base+0xd1b8>
   229cc:	add	lr, r1, #16
   229d0:	sub	r0, r8, lr
   229d4:	cmp	r0, #8
   229d8:	movcs	r0, #8
   229dc:	and	r0, r0, #15
   229e0:	sub	r0, r0, #1
   229e4:	cmp	r0, #7
   229e8:	bhi	233f8 <main@@Base+0xd1b8>
   229ec:	add	r5, pc, #36	; 0x24
   229f0:	mov	sl, #0
   229f4:	mov	ip, #0
   229f8:	mov	r9, #0
   229fc:	mov	r7, #0
   22a00:	mov	r6, #0
   22a04:	mov	r4, #0
   22a08:	mov	r3, #0
   22a0c:	ldr	r2, [r5, r0, lsl #2]
   22a10:	mov	r0, #0
   22a14:	add	pc, r5, r2
   22a18:	andeq	r0, r0, r4, rrx
   22a1c:	andeq	r0, r0, ip, asr r0
   22a20:	andeq	r0, r0, r4, asr r0
   22a24:	andeq	r0, r0, ip, asr #32
   22a28:	andeq	r0, r0, r0, asr #32
   22a2c:	andeq	r0, r0, r4, lsr r0
   22a30:	andeq	r0, r0, r4, lsr #32
   22a34:	andeq	r0, r0, r0, lsr #32
   22a38:	ldrb	ip, [r1, #23]
   22a3c:	ldrb	r0, [r1, #22]
   22a40:	mov	r9, sl
   22a44:	orr	r0, ip, r0, lsl #8
   22a48:	mov	sl, r0
   22a4c:	ldrb	r0, [r1, #21]
   22a50:	mov	r7, r9
   22a54:	orr	sl, sl, r0, lsl #16
   22a58:	ldrb	r0, [r1, #20]
   22a5c:	mov	r6, r7
   22a60:	orr	sl, sl, r0, lsl #24
   22a64:	ldrb	r0, [r1, #19]
   22a68:	orr	r4, r0, r6
   22a6c:	ldrb	r0, [r1, #18]
   22a70:	orr	r3, r4, r0, lsl #8
   22a74:	ldrb	r0, [r1, #17]
   22a78:	orr	r0, r3, r0, lsl #16
   22a7c:	ldrb	r3, [lr]
   22a80:	movw	r2, #18034	; 0x4672
   22a84:	movt	r2, #25902	; 0x652e
   22a88:	eor	r2, sl, r2
   22a8c:	orr	r0, r0, r3, lsl #24
   22a90:	movw	r3, #24931	; 0x6163
   22a94:	movt	r3, #21360	; 0x5370
   22a98:	eor	r0, r0, r3
   22a9c:	orrs	r0, r2, r0
   22aa0:	bne	233f8 <main@@Base+0xd1b8>
   22aa4:	add	lr, r1, #24
   22aa8:	sub	r0, r8, lr
   22aac:	cmp	r0, #8
   22ab0:	movcs	r0, #8
   22ab4:	and	r0, r0, #15
   22ab8:	sub	r0, r0, #1
   22abc:	cmp	r0, #7
   22ac0:	bhi	233f8 <main@@Base+0xd1b8>
   22ac4:	add	r5, pc, #36	; 0x24
   22ac8:	mov	sl, #0
   22acc:	mov	ip, #0
   22ad0:	mov	r9, #0
   22ad4:	mov	r7, #0
   22ad8:	mov	r6, #0
   22adc:	mov	r4, #0
   22ae0:	mov	r3, #0
   22ae4:	ldr	r2, [r5, r0, lsl #2]
   22ae8:	mov	r0, #0
   22aec:	add	pc, r5, r2
   22af0:	andeq	r0, r0, r4, rrx
   22af4:	andeq	r0, r0, ip, asr r0
   22af8:	andeq	r0, r0, r4, asr r0
   22afc:	andeq	r0, r0, ip, asr #32
   22b00:	andeq	r0, r0, r0, asr #32
   22b04:	andeq	r0, r0, r4, lsr r0
   22b08:	andeq	r0, r0, r4, lsr #32
   22b0c:	andeq	r0, r0, r0, lsr #32
   22b10:	ldrb	ip, [r1, #31]
   22b14:	ldrb	r0, [r1, #30]
   22b18:	mov	r9, sl
   22b1c:	orr	r0, ip, r0, lsl #8
   22b20:	mov	sl, r0
   22b24:	ldrb	r0, [r1, #29]
   22b28:	mov	r7, r9
   22b2c:	orr	sl, sl, r0, lsl #16
   22b30:	ldrb	r0, [r1, #28]
   22b34:	mov	r6, r7
   22b38:	orr	sl, sl, r0, lsl #24
   22b3c:	ldrb	r0, [r1, #27]
   22b40:	orr	r4, r0, r6
   22b44:	ldrb	r0, [r1, #26]
   22b48:	orr	r3, r4, r0, lsl #8
   22b4c:	ldrb	r0, [r1, #25]
   22b50:	orr	r0, r3, r0, lsl #16
   22b54:	ldrb	r3, [lr]
   22b58:	movw	r2, #30052	; 0x7564
   22b5c:	movt	r2, #25452	; 0x636c
   22b60:	eor	r2, sl, r2
   22b64:	orr	r0, r0, r3, lsl #24
   22b68:	movw	r3, #18798	; 0x496e
   22b6c:	movt	r3, #28525	; 0x6f6d
   22b70:	eor	r0, r0, r3
   22b74:	orrs	r0, r2, r0
   22b78:	bne	233f8 <main@@Base+0xd1b8>
   22b7c:	add	r0, r1, #32
   22b80:	mov	r7, #-268435456	; 0xf0000000
   22b84:	sub	r2, r8, r0
   22b88:	cmp	r2, #8
   22b8c:	mov	r3, r2
   22b90:	movcs	r3, #8
   22b94:	add	r3, r7, r3, lsl #28
   22b98:	asr	r3, r3, #28
   22b9c:	cmp	r3, #0
   22ba0:	cmpge	r2, #2
   22ba4:	blt	233f8 <main@@Base+0xd1b8>
   22ba8:	ldrb	r2, [r0]
   22bac:	cmp	r2, #101	; 0x65
   22bb0:	bne	233f8 <main@@Base+0xd1b8>
   22bb4:	ldrb	r2, [r1, #33]	; 0x21
   22bb8:	ldr	r9, [sp, #12]
   22bbc:	mov	r7, r0
   22bc0:	cmp	r2, #46	; 0x2e
   22bc4:	addeq	r7, r1, #34	; 0x22
   22bc8:	cmp	r7, r0
   22bcc:	beq	233f8 <main@@Base+0xd1b8>
   22bd0:	sub	r0, r8, r7
   22bd4:	cmp	r0, #8
   22bd8:	movcs	r0, #8
   22bdc:	and	r0, r0, #15
   22be0:	sub	r0, r0, #1
   22be4:	cmp	r0, #7
   22be8:	bhi	233f4 <main@@Base+0xd1b4>
   22bec:	add	r6, pc, #36	; 0x24
   22bf0:	mov	sl, #0
   22bf4:	mov	ip, #0
   22bf8:	mov	lr, #0
   22bfc:	mov	r1, #0
   22c00:	mov	r2, #0
   22c04:	mov	r3, #0
   22c08:	mov	r5, #0
   22c0c:	mov	r4, #0
   22c10:	ldr	r0, [r6, r0, lsl #2]
   22c14:	add	pc, r6, r0
   22c18:	andeq	r0, r0, r4, rrx
   22c1c:	andeq	r0, r0, ip, asr r0
   22c20:	andeq	r0, r0, r4, asr r0
   22c24:	andeq	r0, r0, ip, asr #32
   22c28:	andeq	r0, r0, r0, asr #32
   22c2c:	andeq	r0, r0, r4, lsr r0
   22c30:	andeq	r0, r0, r4, lsr #32
   22c34:	andeq	r0, r0, r0, lsr #32
   22c38:	ldrb	ip, [r7, #7]
   22c3c:	ldrb	r0, [r7, #6]
   22c40:	mov	lr, sl
   22c44:	orr	r0, ip, r0, lsl #8
   22c48:	mov	sl, r0
   22c4c:	ldrb	r0, [r7, #5]
   22c50:	mov	r1, lr
   22c54:	orr	sl, sl, r0, lsl #16
   22c58:	ldrb	r0, [r7, #4]
   22c5c:	mov	r2, r1
   22c60:	orr	sl, sl, r0, lsl #24
   22c64:	ldrb	r0, [r7, #3]
   22c68:	orr	r3, r0, r2
   22c6c:	ldrb	r0, [r7, #2]
   22c70:	orr	r5, r3, r0, lsl #8
   22c74:	ldrb	r0, [r7, #1]
   22c78:	orr	r4, r5, r0, lsl #16
   22c7c:	ldrb	r0, [r7]
   22c80:	movw	r1, #28416	; 0x6f00
   22c84:	movt	r1, #18031	; 0x466f
   22c88:	orr	r6, r4, r0, lsl #24
   22c8c:	ldr	r4, [sp, #24]
   22c90:	bic	r0, r6, #255	; 0xff
   22c94:	teq	r0, r1
   22c98:	bne	23300 <main@@Base+0xd0c0>
   22c9c:	ldr	r0, [sp, #20]
   22ca0:	mov	r1, r7
   22ca4:	mov	r2, r8
   22ca8:	mov	r3, #3
   22cac:	str	r0, [sp]
   22cb0:	mov	r0, r4
   22cb4:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   22cb8:	cmp	r0, r7
   22cbc:	beq	23300 <main@@Base+0xd0c0>
   22cc0:	mov	r1, r0
   22cc4:	mov	r3, #0
   22cc8:	mov	r2, #17
   22ccc:	b	23398 <main@@Base+0xd158>
   22cd0:	eor	r5, r0, r6
   22cd4:	eor	r7, r2, r3
   22cd8:	orrs	r5, r5, r7
   22cdc:	bne	22eec <main@@Base+0xccac>
   22ce0:	add	ip, r1, #16
   22ce4:	sub	r2, r8, ip
   22ce8:	cmp	r2, #8
   22cec:	mov	r0, r2
   22cf0:	movcs	r0, #8
   22cf4:	and	r0, r0, #15
   22cf8:	sub	r0, r0, #1
   22cfc:	cmp	r0, #7
   22d00:	bhi	233f8 <main@@Base+0xd1b8>
   22d04:	add	r5, pc, #32
   22d08:	mov	r9, #0
   22d0c:	mov	lr, #0
   22d10:	mov	sl, #0
   22d14:	mov	r3, #0
   22d18:	mov	r4, #0
   22d1c:	mov	r7, #0
   22d20:	ldr	r6, [r5, r0, lsl #2]
   22d24:	mov	r0, #0
   22d28:	add	pc, r5, r6
   22d2c:	andeq	r0, r0, ip, asr r0
   22d30:	andeq	r0, r0, r4, asr r0
   22d34:	andeq	r0, r0, ip, asr #32
   22d38:	andeq	r0, r0, r4, asr #32
   22d3c:	andeq	r0, r0, r8, lsr r0
   22d40:	andeq	r0, r0, r8, lsr #32
   22d44:	andeq	r0, r0, r0, lsr #32
   22d48:	andeq	r0, r0, r0, lsr #32
   22d4c:	ldrb	r0, [r1, #22]
   22d50:	lsl	lr, r0, #8
   22d54:	ldrb	r0, [r1, #21]
   22d58:	mov	sl, r9
   22d5c:	orr	r0, lr, r0, lsl #16
   22d60:	mov	r9, r0
   22d64:	ldrb	r0, [r1, #20]
   22d68:	mov	r3, sl
   22d6c:	orr	r9, r9, r0, lsl #24
   22d70:	ldrb	r0, [r1, #19]
   22d74:	orr	r4, r0, r3
   22d78:	ldrb	r0, [r1, #18]
   22d7c:	orr	r7, r4, r0, lsl #8
   22d80:	ldrb	r0, [r1, #17]
   22d84:	orr	r0, r7, r0, lsl #16
   22d88:	cmp	r2, #8
   22d8c:	blt	233f8 <main@@Base+0xd1b8>
   22d90:	ldrb	r2, [ip]
   22d94:	movw	r3, #27904	; 0x6d00
   22d98:	movt	r3, #28277	; 0x6e75
   22d9c:	eor	r3, r9, r3
   22da0:	orr	r0, r0, r2, lsl #24
   22da4:	movw	r2, #24421	; 0x5f65
   22da8:	movt	r2, #25959	; 0x6567
   22dac:	add	r2, r2, #1114112	; 0x110000
   22db0:	eor	r0, r0, r2
   22db4:	orrs	r0, r3, r0
   22db8:	bne	233f8 <main@@Base+0xd1b8>
   22dbc:	ldrb	r0, [r1, #23]
   22dc0:	ldr	r3, [sp, #12]
   22dc4:	mov	r2, ip
   22dc8:	cmp	r0, #46	; 0x2e
   22dcc:	addeq	r2, r1, #24
   22dd0:	cmp	r2, ip
   22dd4:	beq	233f8 <main@@Base+0xd1b8>
   22dd8:	ldr	r0, [sp, #24]
   22ddc:	mov	r1, r2
   22de0:	mov	r2, r8
   22de4:	sub	sp, fp, #28
   22de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22dec:	b	2663c <main@@Base+0x103fc>
   22df0:	movw	r7, #11846	; 0x2e46
   22df4:	eor	r2, r2, r3
   22df8:	movt	r7, #27749	; 0x6c65
   22dfc:	eor	r7, r0, r7
   22e00:	orrs	r3, r7, r2
   22e04:	beq	23154 <main@@Base+0xcf14>
   22e08:	movw	r3, #11843	; 0x2e43
   22e0c:	movt	r3, #27749	; 0x6c65
   22e10:	eor	r0, r0, r3
   22e14:	orrs	r0, r0, r2
   22e18:	bne	233f8 <main@@Base+0xd1b8>
   22e1c:	add	r0, r1, #16
   22e20:	sub	r2, r8, r0
   22e24:	cmp	r2, #8
   22e28:	mov	r3, r2
   22e2c:	movcs	r3, #8
   22e30:	and	r3, r3, #15
   22e34:	sub	r7, r3, #1
   22e38:	cmp	r7, #7
   22e3c:	bhi	233f8 <main@@Base+0xd1b8>
   22e40:	add	r4, pc, #20
   22e44:	mov	ip, #0
   22e48:	mov	r5, #0
   22e4c:	mov	r6, #0
   22e50:	ldr	r3, [r4, r7, lsl #2]
   22e54:	mov	r7, #0
   22e58:	add	pc, r4, r3
   22e5c:	andeq	r0, r0, r8, lsr r0
   22e60:	andeq	r0, r0, r0, lsr r0
   22e64:	andeq	r0, r0, r8, lsr #32
   22e68:	andeq	r0, r0, r0, lsr #32
   22e6c:	andeq	r0, r0, r0, lsr #32
   22e70:	andeq	r0, r0, r0, lsr #32
   22e74:	andeq	r0, r0, r0, lsr #32
   22e78:	andeq	r0, r0, r0, lsr #32
   22e7c:	ldrb	r7, [r1, #19]
   22e80:	mov	ip, #0
   22e84:	ldrb	r3, [r1, #18]
   22e88:	orr	r5, r7, r3, lsl #8
   22e8c:	ldrb	r3, [r1, #17]
   22e90:	orr	r6, r5, r3, lsl #16
   22e94:	cmp	r2, #5
   22e98:	blt	233f8 <main@@Base+0xd1b8>
   22e9c:	ldrb	r2, [r0]
   22ea0:	movw	r3, #28530	; 0x6f72
   22ea4:	movt	r3, #28524	; 0x6f6c
   22ea8:	orr	r2, r6, r2, lsl #24
   22eac:	eor	r2, r2, r3
   22eb0:	orrs	r2, ip, r2
   22eb4:	bne	233f8 <main@@Base+0xd1b8>
   22eb8:	ldrb	r2, [r1, #20]
   22ebc:	cmp	r2, #46	; 0x2e
   22ec0:	mov	r2, r0
   22ec4:	addeq	r2, r1, #21
   22ec8:	cmp	r2, r0
   22ecc:	beq	233f8 <main@@Base+0xd1b8>
   22ed0:	ldr	r0, [sp, #24]
   22ed4:	mov	r1, r2
   22ed8:	mov	r2, r8
   22edc:	mov	r3, lr
   22ee0:	sub	sp, fp, #28
   22ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ee8:	b	21ef0 <main@@Base+0xbcb0>
   22eec:	add	r5, r6, #6
   22ef0:	subs	r4, r0, r5
   22ef4:	sbcs	r2, r2, r3
   22ef8:	bcs	23020 <main@@Base+0xcde0>
   22efc:	add	r2, r6, #1
   22f00:	eor	r0, r0, r2
   22f04:	orrs	r0, r0, r7
   22f08:	bne	233f8 <main@@Base+0xd1b8>
   22f0c:	add	ip, r1, #16
   22f10:	sub	r2, r8, ip
   22f14:	cmp	r2, #8
   22f18:	mov	r0, r2
   22f1c:	movcs	r0, #8
   22f20:	and	r0, r0, #15
   22f24:	sub	r0, r0, #1
   22f28:	cmp	r0, #7
   22f2c:	bhi	233f8 <main@@Base+0xd1b8>
   22f30:	add	r7, pc, #32
   22f34:	mov	lr, #0
   22f38:	mov	r9, #0
   22f3c:	mov	sl, #0
   22f40:	mov	r3, #0
   22f44:	mov	r5, #0
   22f48:	mov	r4, #0
   22f4c:	ldr	r6, [r7, r0, lsl #2]
   22f50:	mov	r0, #0
   22f54:	add	pc, r7, r6
   22f58:	andeq	r0, r0, ip, asr r0
   22f5c:	andeq	r0, r0, r4, asr r0
   22f60:	andeq	r0, r0, ip, asr #32
   22f64:	andeq	r0, r0, r4, asr #32
   22f68:	andeq	r0, r0, r8, lsr r0
   22f6c:	andeq	r0, r0, r8, lsr #32
   22f70:	andeq	r0, r0, r0, lsr #32
   22f74:	andeq	r0, r0, r0, lsr #32
   22f78:	ldrb	r0, [r1, #22]
   22f7c:	lsl	r9, r0, #8
   22f80:	ldrb	r0, [r1, #21]
   22f84:	mov	sl, lr
   22f88:	orr	r0, r9, r0, lsl #16
   22f8c:	mov	lr, r0
   22f90:	ldrb	r0, [r1, #20]
   22f94:	mov	r3, sl
   22f98:	orr	lr, lr, r0, lsl #24
   22f9c:	ldrb	r0, [r1, #19]
   22fa0:	orr	r0, r0, r3
   22fa4:	ldrb	r3, [r1, #18]
   22fa8:	orr	r5, r0, r3, lsl #8
   22fac:	ldrb	r0, [r1, #17]
   22fb0:	orr	r4, r5, r0, lsl #16
   22fb4:	cmp	r2, #8
   22fb8:	blt	233f8 <main@@Base+0xd1b8>
   22fbc:	ldrb	r2, [ip]
   22fc0:	movw	r0, #24421	; 0x5f65
   22fc4:	movw	r3, #27904	; 0x6d00
   22fc8:	movt	r0, #25959	; 0x6567
   22fcc:	movt	r3, #28277	; 0x6e75
   22fd0:	add	r0, r0, #851968	; 0xd0000
   22fd4:	eor	r3, lr, r3
   22fd8:	add	r0, r0, #150994944	; 0x9000000
   22fdc:	orr	r2, r4, r2, lsl #24
   22fe0:	eor	r0, r2, r0
   22fe4:	orrs	r0, r3, r0
   22fe8:	bne	233f8 <main@@Base+0xd1b8>
   22fec:	ldrb	r0, [r1, #23]
   22ff0:	ldr	r3, [sp, #12]
   22ff4:	mov	r2, ip
   22ff8:	cmp	r0, #46	; 0x2e
   22ffc:	addeq	r2, r1, #24
   23000:	cmp	r2, ip
   23004:	beq	233f8 <main@@Base+0xd1b8>
   23008:	ldr	r0, [sp, #24]
   2300c:	mov	r1, r2
   23010:	mov	r2, r8
   23014:	sub	sp, fp, #28
   23018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2301c:	b	267f0 <main@@Base+0x105b0>
   23020:	eor	r0, r0, r5
   23024:	orrs	r0, r0, r7
   23028:	bne	233f8 <main@@Base+0xd1b8>
   2302c:	add	lr, r1, #16
   23030:	sub	r2, r8, lr
   23034:	cmp	r2, #8
   23038:	mov	r0, r2
   2303c:	movcs	r0, #8
   23040:	and	r0, r0, #15
   23044:	sub	r0, r0, #1
   23048:	cmp	r0, #7
   2304c:	bhi	233f8 <main@@Base+0xd1b8>
   23050:	add	r5, pc, #40	; 0x28
   23054:	mov	sl, #0
   23058:	mov	r9, #0
   2305c:	mov	r7, #0
   23060:	mov	r6, #0
   23064:	mov	r4, #0
   23068:	mov	ip, #0
   2306c:	ldr	r3, [r5, r0, lsl #2]
   23070:	mov	r0, #0
   23074:	str	r0, [sp, #8]
   23078:	mov	r0, #0
   2307c:	add	pc, r5, r3
   23080:	andeq	r0, r0, ip, rrx
   23084:	andeq	r0, r0, r4, rrx
   23088:	andeq	r0, r0, ip, asr r0
   2308c:	andeq	r0, r0, r4, asr r0
   23090:	andeq	r0, r0, r8, asr #32
   23094:	andeq	r0, r0, ip, lsr r0
   23098:	andeq	r0, r0, r8, lsr #32
   2309c:	andeq	r0, r0, r0, lsr #32
   230a0:	ldrb	r0, [r1, #23]
   230a4:	str	r0, [sp, #8]
   230a8:	ldrb	r0, [r1, #22]
   230ac:	ldr	r3, [sp, #8]
   230b0:	mov	r9, sl
   230b4:	orr	r0, r3, r0, lsl #8
   230b8:	mov	sl, r0
   230bc:	ldrb	r0, [r1, #21]
   230c0:	mov	r7, r9
   230c4:	orr	sl, sl, r0, lsl #16
   230c8:	ldrb	r0, [r1, #20]
   230cc:	mov	r6, r7
   230d0:	orr	sl, sl, r0, lsl #24
   230d4:	ldrb	r0, [r1, #19]
   230d8:	orr	r4, r0, r6
   230dc:	ldrb	r0, [r1, #18]
   230e0:	orr	r0, r4, r0, lsl #8
   230e4:	ldrb	r3, [r1, #17]
   230e8:	orr	ip, r0, r3, lsl #16
   230ec:	ldrb	r0, [lr]
   230f0:	cmp	r2, #8
   230f4:	orr	r6, ip, r0, lsl #24
   230f8:	movw	ip, #27904	; 0x6d00
   230fc:	movt	ip, #28277	; 0x6e75
   23100:	blt	231d8 <main@@Base+0xcf98>
   23104:	movw	r2, #24421	; 0x5f65
   23108:	bic	r0, sl, #255	; 0xff
   2310c:	movt	r2, #25959	; 0x6567
   23110:	eor	r0, r0, ip
   23114:	eor	r2, r6, r2
   23118:	orrs	r0, r0, r2
   2311c:	bne	231d8 <main@@Base+0xcf98>
   23120:	ldrb	r0, [r1, #23]
   23124:	mov	r2, lr
   23128:	cmp	r0, #46	; 0x2e
   2312c:	addeq	r2, r1, #24
   23130:	cmp	r2, lr
   23134:	beq	231d8 <main@@Base+0xcf98>
   23138:	ldr	r0, [sp, #24]
   2313c:	ldr	r3, [sp, #12]
   23140:	mov	r1, r2
   23144:	mov	r2, r8
   23148:	sub	sp, fp, #28
   2314c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23150:	b	269e8 <main@@Base+0x107a8>
   23154:	add	r0, r1, #16
   23158:	sub	r2, r8, r0
   2315c:	cmp	r2, #8
   23160:	mov	r3, r2
   23164:	movcs	r3, #8
   23168:	and	r7, r3, #15
   2316c:	sub	r3, r7, #2
   23170:	cmp	r3, #7
   23174:	bcs	232ec <main@@Base+0xd0ac>
   23178:	ldrb	r3, [r1, #17]
   2317c:	lsl	r7, r3, #16
   23180:	mov	r3, #0
   23184:	cmp	r2, #3
   23188:	blt	233f8 <main@@Base+0xd1b8>
   2318c:	ldrb	r2, [r0]
   23190:	orr	r2, r7, r2, lsl #24
   23194:	eor	r2, r2, #7274496	; 0x6f0000
   23198:	eor	r2, r2, #1862270976	; 0x6f000000
   2319c:	orrs	r2, r3, r2
   231a0:	bne	233f8 <main@@Base+0xd1b8>
   231a4:	ldrb	r2, [r1, #18]
   231a8:	cmp	r2, #46	; 0x2e
   231ac:	mov	r2, r0
   231b0:	addeq	r2, r1, #19
   231b4:	cmp	r2, r0
   231b8:	beq	233f8 <main@@Base+0xd1b8>
   231bc:	ldr	r0, [sp, #24]
   231c0:	mov	r1, r2
   231c4:	mov	r2, r8
   231c8:	mov	r3, lr
   231cc:	sub	sp, fp, #28
   231d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231d4:	b	263c4 <main@@Base+0x10184>
   231d8:	movw	r0, #31077	; 0x7965
   231dc:	movw	r2, #25965	; 0x656d
   231e0:	movt	r0, #28788	; 0x7074
   231e4:	movt	r2, #28532	; 0x6f74
   231e8:	eor	r0, sl, r0
   231ec:	eor	r2, r6, r2
   231f0:	orrs	r0, r0, r2
   231f4:	bne	233f8 <main@@Base+0xd1b8>
   231f8:	add	r0, r1, #24
   231fc:	sub	r2, r8, r0
   23200:	cmp	r2, #8
   23204:	mov	r3, r2
   23208:	movcs	r3, #8
   2320c:	and	r7, r3, #15
   23210:	sub	r3, r7, #3
   23214:	cmp	r3, #6
   23218:	bcs	233ac <main@@Base+0xd16c>
   2321c:	ldrb	r3, [r1, #26]
   23220:	ldr	r4, [sp, #12]
   23224:	lsl	r7, r3, #8
   23228:	mov	r3, #0
   2322c:	ldrb	r6, [r1, #25]
   23230:	orr	r7, r7, r6, lsl #16
   23234:	cmp	r2, #4
   23238:	blt	233f8 <main@@Base+0xd1b8>
   2323c:	ldrb	r2, [r0]
   23240:	orr	r2, r7, r2, lsl #24
   23244:	eor	r2, r2, ip
   23248:	orrs	r2, r3, r2
   2324c:	bne	233f8 <main@@Base+0xd1b8>
   23250:	ldrb	r2, [r1, #27]
   23254:	mov	r6, r0
   23258:	cmp	r2, #46	; 0x2e
   2325c:	addeq	r6, r1, #28
   23260:	cmp	r6, r0
   23264:	beq	233f8 <main@@Base+0xd1b8>
   23268:	sub	r0, r8, r6
   2326c:	mov	r1, #-268435456	; 0xf0000000
   23270:	cmp	r0, #8
   23274:	movcs	r0, #8
   23278:	add	r0, r1, r0, lsl #28
   2327c:	asr	r0, r0, #28
   23280:	cmp	r0, #0
   23284:	blt	233cc <main@@Base+0xd18c>
   23288:	ldrb	r0, [r6]
   2328c:	cmp	r0, #120	; 0x78
   23290:	bne	233cc <main@@Base+0xd18c>
   23294:	ldr	r0, [sp, #20]
   23298:	mov	r1, r6
   2329c:	mov	r2, r8
   232a0:	mov	r3, #1
   232a4:	str	r0, [sp]
   232a8:	ldr	r0, [sp, #24]
   232ac:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   232b0:	cmp	r0, r6
   232b4:	mov	r1, r6
   232b8:	beq	233f8 <main@@Base+0xd1b8>
   232bc:	ldr	r2, [sp, #16]
   232c0:	mov	r1, #0
   232c4:	str	r1, [r2]
   232c8:	str	r1, [r2, #4]
   232cc:	str	r1, [r4]
   232d0:	mov	r1, r0
   232d4:	b	233f8 <main@@Base+0xd1b8>
   232d8:	cmp	r7, #1
   232dc:	mov	r3, #0
   232e0:	mov	r7, #0
   232e4:	beq	2289c <main@@Base+0xc65c>
   232e8:	b	233f8 <main@@Base+0xd1b8>
   232ec:	cmp	r7, #1
   232f0:	mov	r3, #0
   232f4:	mov	r7, #0
   232f8:	beq	23184 <main@@Base+0xcf44>
   232fc:	b	233f8 <main@@Base+0xd1b8>
   23300:	movw	r0, #25942	; 0x6556
   23304:	movw	r1, #25452	; 0x636c
   23308:	movt	r0, #30052	; 0x7564
   2330c:	movt	r1, #18798	; 0x496e
   23310:	eor	r0, sl, r0
   23314:	eor	r1, r6, r1
   23318:	orrs	r0, r0, r1
   2331c:	bne	233f4 <main@@Base+0xd1b4>
   23320:	add	r6, r7, #8
   23324:	sub	r0, r8, r6
   23328:	cmp	r0, #8
   2332c:	movcs	r0, #8
   23330:	and	r1, r0, #15
   23334:	sub	r0, r1, #2
   23338:	cmp	r0, #7
   2333c:	bcs	233e4 <main@@Base+0xd1a4>
   23340:	ldrb	r0, [r7, #9]
   23344:	lsl	r1, r0, #16
   23348:	mov	r0, #0
   2334c:	ldrb	r2, [r6]
   23350:	orr	r1, r1, r2, lsl #24
   23354:	eor	r1, r1, #23855104	; 0x16c0000
   23358:	eor	r1, r1, #1610612736	; 0x60000000
   2335c:	orrs	r0, r0, r1
   23360:	bne	233f4 <main@@Base+0xd1b4>
   23364:	ldr	r0, [sp, #20]
   23368:	mov	r1, r6
   2336c:	mov	r2, r8
   23370:	mov	r3, #2
   23374:	str	r0, [sp]
   23378:	mov	r0, r4
   2337c:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   23380:	cmp	r0, r6
   23384:	mov	r1, r7
   23388:	beq	233f8 <main@@Base+0xd1b8>
   2338c:	mov	r2, #0
   23390:	mov	r3, #0
   23394:	mov	r1, r0
   23398:	ldr	r0, [sp, #16]
   2339c:	strd	r2, [r0]
   233a0:	mov	r0, #0
   233a4:	str	r0, [r9]
   233a8:	b	233f8 <main@@Base+0xd1b8>
   233ac:	ldr	r4, [sp, #12]
   233b0:	mov	r3, #0
   233b4:	cmp	r7, #1
   233b8:	beq	233d4 <main@@Base+0xd194>
   233bc:	cmp	r7, #2
   233c0:	mov	r7, #0
   233c4:	beq	2322c <main@@Base+0xcfec>
   233c8:	b	233f8 <main@@Base+0xd1b8>
   233cc:	mov	r1, r6
   233d0:	b	233f8 <main@@Base+0xd1b8>
   233d4:	mov	r7, #0
   233d8:	cmp	r2, #4
   233dc:	bge	2323c <main@@Base+0xcffc>
   233e0:	b	233f8 <main@@Base+0xd1b8>
   233e4:	cmp	r1, #1
   233e8:	mov	r0, #0
   233ec:	mov	r1, #0
   233f0:	beq	2334c <main@@Base+0xd10c>
   233f4:	mov	r1, r7
   233f8:	mov	r0, r1
   233fc:	sub	sp, fp, #28
   23400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23408:	add	fp, sp, #28
   2340c:	sub	sp, sp, #44	; 0x2c
   23410:	mov	r6, r2
   23414:	ldr	r2, [fp, #8]
   23418:	mov	r5, r0
   2341c:	mov	r0, #0
   23420:	mov	sl, r3
   23424:	cmp	r1, r6
   23428:	strb	r0, [r2]
   2342c:	beq	23470 <main@@Base+0xd230>
   23430:	ldrb	r0, [r1]
   23434:	cmp	r0, #46	; 0x2e
   23438:	beq	23450 <main@@Base+0xd210>
   2343c:	cmp	r0, #34	; 0x22
   23440:	bne	23468 <main@@Base+0xd228>
   23444:	mov	r0, #0
   23448:	add	r1, r1, #1
   2344c:	b	2346c <main@@Base+0xd22c>
   23450:	mov	r0, r5
   23454:	mov	r2, r6
   23458:	mov	r3, #5
   2345c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23460:	mov	r1, r0
   23464:	b	23470 <main@@Base+0xd230>
   23468:	mov	r0, #1
   2346c:	str	r0, [r5, #12]
   23470:	ldr	r0, [r5, #12]
   23474:	cmp	r0, #0
   23478:	beq	2348c <main@@Base+0xd24c>
   2347c:	mov	r7, r1
   23480:	cmp	r7, r6
   23484:	bne	234d0 <main@@Base+0xd290>
   23488:	b	235e8 <main@@Base+0xd3a8>
   2348c:	sub	r0, r6, r1
   23490:	cmp	r0, #2
   23494:	blt	234b8 <main@@Base+0xd278>
   23498:	ldrb	r0, [r1]
   2349c:	cmp	r0, #32
   234a0:	bhi	2347c <main@@Base+0xd23c>
   234a4:	bne	234b8 <main@@Base+0xd278>
   234a8:	mov	r7, r1
   234ac:	ldrb	r0, [r7, #1]!
   234b0:	cmp	r0, #32
   234b4:	bhi	234c8 <main@@Base+0xd288>
   234b8:	mov	r0, r5
   234bc:	mov	r2, r6
   234c0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   234c4:	mov	r7, r0
   234c8:	cmp	r7, r6
   234cc:	beq	235e8 <main@@Base+0xd3a8>
   234d0:	add	r0, sl, #4
   234d4:	mov	r2, #0
   234d8:	add	r8, sp, #32
   234dc:	add	r9, sp, #28
   234e0:	str	sl, [sp, #16]
   234e4:	str	r0, [sp, #12]
   234e8:	ldr	r4, [sl]
   234ec:	mov	sl, r0
   234f0:	str	r2, [sp, #20]
   234f4:	add	r0, sp, #24
   234f8:	mov	r1, r7
   234fc:	mov	r2, r6
   23500:	mov	r3, r9
   23504:	str	r8, [sp]
   23508:	str	r0, [sp, #4]
   2350c:	mov	r0, r5
   23510:	blx	r4
   23514:	cmp	r0, r6
   23518:	beq	235e8 <main@@Base+0xd3a8>
   2351c:	mov	r4, r0
   23520:	cmp	r0, r7
   23524:	bne	23538 <main@@Base+0xd2f8>
   23528:	ldr	r4, [sl], #4
   2352c:	cmp	r4, #0
   23530:	bne	234f4 <main@@Base+0xd2b4>
   23534:	b	235f0 <main@@Base+0xd3b0>
   23538:	ldr	r2, [sp, #28]
   2353c:	ldr	r0, [sp, #32]
   23540:	ldr	r1, [sp, #36]	; 0x24
   23544:	cmp	r2, #0
   23548:	beq	23570 <main@@Base+0xd330>
   2354c:	ldr	sl, [sp, #16]
   23550:	subs	r2, r0, #129	; 0x81
   23554:	sbcs	r1, r1, #0
   23558:	bcc	235a4 <main@@Base+0xd364>
   2355c:	mov	r0, r5
   23560:	mov	r1, r4
   23564:	mov	r2, r6
   23568:	mov	r3, #8
   2356c:	b	23590 <main@@Base+0xd350>
   23570:	ldr	sl, [sp, #16]
   23574:	subs	r2, r0, #128	; 0x80
   23578:	sbcs	r1, r1, #0
   2357c:	bcc	235ac <main@@Base+0xd36c>
   23580:	mov	r0, r5
   23584:	mov	r1, r4
   23588:	mov	r2, r6
   2358c:	mov	r3, #7
   23590:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23594:	ldr	r2, [sp, #20]
   23598:	cmp	r0, r6
   2359c:	bne	235bc <main@@Base+0xd37c>
   235a0:	b	235e8 <main@@Base+0xd3a8>
   235a4:	rsb	r2, r0, #0
   235a8:	b	235b0 <main@@Base+0xd370>
   235ac:	mov	r2, r0
   235b0:	mov	r0, r4
   235b4:	cmp	r0, r6
   235b8:	beq	235e8 <main@@Base+0xd3a8>
   235bc:	ldr	r0, [fp, #8]
   235c0:	mov	r7, r4
   235c4:	mov	r1, r0
   235c8:	ldrb	r0, [r0]
   235cc:	add	r0, r0, r2
   235d0:	strb	r0, [r1]
   235d4:	ldr	r0, [sp, #24]
   235d8:	cmp	r0, #0
   235dc:	ldr	r0, [sp, #12]
   235e0:	bne	234e8 <main@@Base+0xd2a8>
   235e4:	b	23608 <main@@Base+0xd3c8>
   235e8:	mov	r4, r6
   235ec:	b	23608 <main@@Base+0xd3c8>
   235f0:	mov	r0, r5
   235f4:	mov	r1, r7
   235f8:	mov	r2, r6
   235fc:	mov	r3, #23
   23600:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23604:	mov	r4, r0
   23608:	mov	r0, r4
   2360c:	sub	sp, fp, #28
   23610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23618:	add	fp, sp, #28
   2361c:	sub	sp, sp, #44	; 0x2c
   23620:	mov	r6, r2
   23624:	ldr	r2, [fp, #8]
   23628:	mov	r5, r0
   2362c:	mov	r0, #0
   23630:	mov	r8, r3
   23634:	cmp	r1, r6
   23638:	strb	r0, [r2]
   2363c:	beq	23680 <main@@Base+0xd440>
   23640:	ldrb	r0, [r1]
   23644:	cmp	r0, #46	; 0x2e
   23648:	beq	23660 <main@@Base+0xd420>
   2364c:	cmp	r0, #34	; 0x22
   23650:	bne	23678 <main@@Base+0xd438>
   23654:	mov	r0, #0
   23658:	add	r1, r1, #1
   2365c:	b	2367c <main@@Base+0xd43c>
   23660:	mov	r0, r5
   23664:	mov	r2, r6
   23668:	mov	r3, #5
   2366c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23670:	mov	r1, r0
   23674:	b	23680 <main@@Base+0xd440>
   23678:	mov	r0, #1
   2367c:	str	r0, [r5, #12]
   23680:	ldr	r0, [r5, #12]
   23684:	cmp	r0, #0
   23688:	beq	2369c <main@@Base+0xd45c>
   2368c:	mov	r7, r1
   23690:	cmp	r7, r6
   23694:	bne	236e0 <main@@Base+0xd4a0>
   23698:	b	237f0 <main@@Base+0xd5b0>
   2369c:	sub	r0, r6, r1
   236a0:	cmp	r0, #2
   236a4:	blt	236c8 <main@@Base+0xd488>
   236a8:	ldrb	r0, [r1]
   236ac:	cmp	r0, #32
   236b0:	bhi	2368c <main@@Base+0xd44c>
   236b4:	bne	236c8 <main@@Base+0xd488>
   236b8:	mov	r7, r1
   236bc:	ldrb	r0, [r7, #1]!
   236c0:	cmp	r0, #32
   236c4:	bhi	236d8 <main@@Base+0xd498>
   236c8:	mov	r0, r5
   236cc:	mov	r2, r6
   236d0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   236d4:	mov	r7, r0
   236d8:	cmp	r7, r6
   236dc:	beq	237f0 <main@@Base+0xd5b0>
   236e0:	add	r0, r8, #4
   236e4:	mov	r1, #0
   236e8:	add	sl, sp, #32
   236ec:	add	r9, sp, #28
   236f0:	str	r8, [sp, #16]
   236f4:	str	r1, [sp, #20]
   236f8:	str	r0, [sp, #12]
   236fc:	ldr	r4, [r8]
   23700:	mov	r8, r0
   23704:	add	r0, sp, #24
   23708:	mov	r1, r7
   2370c:	mov	r2, r6
   23710:	mov	r3, r9
   23714:	str	sl, [sp]
   23718:	str	r0, [sp, #4]
   2371c:	mov	r0, r5
   23720:	blx	r4
   23724:	cmp	r0, r6
   23728:	beq	237f0 <main@@Base+0xd5b0>
   2372c:	mov	r4, r0
   23730:	cmp	r0, r7
   23734:	bne	23748 <main@@Base+0xd508>
   23738:	ldr	r4, [r8], #4
   2373c:	cmp	r4, #0
   23740:	bne	23704 <main@@Base+0xd4c4>
   23744:	b	237f8 <main@@Base+0xd5b8>
   23748:	ldr	r0, [sp, #28]
   2374c:	cmp	r0, #0
   23750:	beq	23778 <main@@Base+0xd538>
   23754:	mov	r0, r5
   23758:	mov	r1, r4
   2375c:	mov	r2, r6
   23760:	mov	r3, #8
   23764:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23768:	ldr	r8, [sp, #16]
   2376c:	cmp	r0, r6
   23770:	bne	237c0 <main@@Base+0xd580>
   23774:	b	237f0 <main@@Base+0xd5b0>
   23778:	ldr	r0, [sp, #32]
   2377c:	ldr	r1, [sp, #36]	; 0x24
   23780:	ldr	r8, [sp, #16]
   23784:	subs	r2, r0, #256	; 0x100
   23788:	sbcs	r1, r1, #0
   2378c:	bcc	237b0 <main@@Base+0xd570>
   23790:	mov	r0, r5
   23794:	mov	r1, r4
   23798:	mov	r2, r6
   2379c:	mov	r3, #7
   237a0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   237a4:	cmp	r0, r6
   237a8:	bne	237c0 <main@@Base+0xd580>
   237ac:	b	237f0 <main@@Base+0xd5b0>
   237b0:	str	r0, [sp, #20]
   237b4:	mov	r0, r4
   237b8:	cmp	r0, r6
   237bc:	beq	237f0 <main@@Base+0xd5b0>
   237c0:	ldr	r0, [fp, #8]
   237c4:	ldr	r2, [sp, #20]
   237c8:	mov	r7, r4
   237cc:	mov	r1, r0
   237d0:	ldrb	r0, [r0]
   237d4:	add	r0, r0, r2
   237d8:	strb	r0, [r1]
   237dc:	ldr	r0, [sp, #24]
   237e0:	cmp	r0, #0
   237e4:	ldr	r0, [sp, #12]
   237e8:	bne	236fc <main@@Base+0xd4bc>
   237ec:	b	23810 <main@@Base+0xd5d0>
   237f0:	mov	r4, r6
   237f4:	b	23810 <main@@Base+0xd5d0>
   237f8:	mov	r0, r5
   237fc:	mov	r1, r7
   23800:	mov	r2, r6
   23804:	mov	r3, #23
   23808:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2380c:	mov	r4, r0
   23810:	mov	r0, r4
   23814:	sub	sp, fp, #28
   23818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2381c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23820:	add	fp, sp, #28
   23824:	sub	sp, sp, #44	; 0x2c
   23828:	mov	r6, r2
   2382c:	ldr	r2, [fp, #8]
   23830:	mov	r5, r0
   23834:	mov	r0, #0
   23838:	mov	sl, r3
   2383c:	cmp	r1, r6
   23840:	strh	r0, [r2]
   23844:	beq	23888 <main@@Base+0xd648>
   23848:	ldrb	r0, [r1]
   2384c:	cmp	r0, #46	; 0x2e
   23850:	beq	23868 <main@@Base+0xd628>
   23854:	cmp	r0, #34	; 0x22
   23858:	bne	23880 <main@@Base+0xd640>
   2385c:	mov	r0, #0
   23860:	add	r1, r1, #1
   23864:	b	23884 <main@@Base+0xd644>
   23868:	mov	r0, r5
   2386c:	mov	r2, r6
   23870:	mov	r3, #5
   23874:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23878:	mov	r1, r0
   2387c:	b	23888 <main@@Base+0xd648>
   23880:	mov	r0, #1
   23884:	str	r0, [r5, #12]
   23888:	ldr	r0, [r5, #12]
   2388c:	cmp	r0, #0
   23890:	beq	238a4 <main@@Base+0xd664>
   23894:	mov	r7, r1
   23898:	cmp	r7, r6
   2389c:	bne	238e8 <main@@Base+0xd6a8>
   238a0:	b	23a04 <main@@Base+0xd7c4>
   238a4:	sub	r0, r6, r1
   238a8:	cmp	r0, #2
   238ac:	blt	238d0 <main@@Base+0xd690>
   238b0:	ldrb	r0, [r1]
   238b4:	cmp	r0, #32
   238b8:	bhi	23894 <main@@Base+0xd654>
   238bc:	bne	238d0 <main@@Base+0xd690>
   238c0:	mov	r7, r1
   238c4:	ldrb	r0, [r7, #1]!
   238c8:	cmp	r0, #32
   238cc:	bhi	238e0 <main@@Base+0xd6a0>
   238d0:	mov	r0, r5
   238d4:	mov	r2, r6
   238d8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   238dc:	mov	r7, r0
   238e0:	cmp	r7, r6
   238e4:	beq	23a04 <main@@Base+0xd7c4>
   238e8:	add	r0, sl, #4
   238ec:	mov	r2, #0
   238f0:	add	r8, sp, #32
   238f4:	add	r9, sp, #28
   238f8:	str	sl, [sp, #16]
   238fc:	str	r0, [sp, #12]
   23900:	ldr	r4, [sl]
   23904:	mov	sl, r0
   23908:	str	r2, [sp, #20]
   2390c:	add	r0, sp, #24
   23910:	mov	r1, r7
   23914:	mov	r2, r6
   23918:	mov	r3, r9
   2391c:	str	r8, [sp]
   23920:	str	r0, [sp, #4]
   23924:	mov	r0, r5
   23928:	blx	r4
   2392c:	cmp	r0, r6
   23930:	beq	23a04 <main@@Base+0xd7c4>
   23934:	mov	r4, r0
   23938:	cmp	r0, r7
   2393c:	bne	23950 <main@@Base+0xd710>
   23940:	ldr	r4, [sl], #4
   23944:	cmp	r4, #0
   23948:	bne	2390c <main@@Base+0xd6cc>
   2394c:	b	23a0c <main@@Base+0xd7cc>
   23950:	ldr	r2, [sp, #28]
   23954:	ldr	r0, [sp, #32]
   23958:	ldr	r1, [sp, #36]	; 0x24
   2395c:	cmp	r2, #0
   23960:	beq	2398c <main@@Base+0xd74c>
   23964:	ldr	sl, [sp, #16]
   23968:	movw	r2, #32769	; 0x8001
   2396c:	subs	r2, r0, r2
   23970:	sbcs	r1, r1, #0
   23974:	bcc	239c0 <main@@Base+0xd780>
   23978:	mov	r0, r5
   2397c:	mov	r1, r4
   23980:	mov	r2, r6
   23984:	mov	r3, #8
   23988:	b	239ac <main@@Base+0xd76c>
   2398c:	ldr	sl, [sp, #16]
   23990:	subs	r2, r0, #32768	; 0x8000
   23994:	sbcs	r1, r1, #0
   23998:	bcc	239c8 <main@@Base+0xd788>
   2399c:	mov	r0, r5
   239a0:	mov	r1, r4
   239a4:	mov	r2, r6
   239a8:	mov	r3, #7
   239ac:	bl	36078 <flatcc_json_parser_set_error@@Base>
   239b0:	ldr	r2, [sp, #20]
   239b4:	cmp	r0, r6
   239b8:	bne	239d8 <main@@Base+0xd798>
   239bc:	b	23a04 <main@@Base+0xd7c4>
   239c0:	rsb	r2, r0, #0
   239c4:	b	239cc <main@@Base+0xd78c>
   239c8:	mov	r2, r0
   239cc:	mov	r0, r4
   239d0:	cmp	r0, r6
   239d4:	beq	23a04 <main@@Base+0xd7c4>
   239d8:	ldr	r0, [fp, #8]
   239dc:	mov	r7, r4
   239e0:	mov	r1, r0
   239e4:	ldrh	r0, [r0]
   239e8:	add	r0, r0, r2
   239ec:	strh	r0, [r1]
   239f0:	ldr	r0, [sp, #24]
   239f4:	cmp	r0, #0
   239f8:	ldr	r0, [sp, #12]
   239fc:	bne	23900 <main@@Base+0xd6c0>
   23a00:	b	23a24 <main@@Base+0xd7e4>
   23a04:	mov	r4, r6
   23a08:	b	23a24 <main@@Base+0xd7e4>
   23a0c:	mov	r0, r5
   23a10:	mov	r1, r7
   23a14:	mov	r2, r6
   23a18:	mov	r3, #23
   23a1c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23a20:	mov	r4, r0
   23a24:	mov	r0, r4
   23a28:	sub	sp, fp, #28
   23a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a34:	add	fp, sp, #28
   23a38:	sub	sp, sp, #28
   23a3c:	mov	r7, r2
   23a40:	mov	r5, r0
   23a44:	cmp	r1, r2
   23a48:	beq	23a80 <main@@Base+0xd840>
   23a4c:	ldrb	r0, [r1]
   23a50:	cmp	r0, #123	; 0x7b
   23a54:	bne	23a80 <main@@Base+0xd840>
   23a58:	add	r2, r1, #1
   23a5c:	mov	r9, r3
   23a60:	sub	r0, r7, r2
   23a64:	cmp	r0, #2
   23a68:	blt	23aa8 <main@@Base+0xd868>
   23a6c:	ldrb	r0, [r2]
   23a70:	cmp	r0, #32
   23a74:	bls	23a98 <main@@Base+0xd858>
   23a78:	mov	r1, r2
   23a7c:	b	23abc <main@@Base+0xd87c>
   23a80:	mov	r0, r5
   23a84:	mov	r2, r7
   23a88:	mov	r3, #21
   23a8c:	sub	sp, fp, #28
   23a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a94:	b	36078 <flatcc_json_parser_set_error@@Base>
   23a98:	bne	23aa8 <main@@Base+0xd868>
   23a9c:	ldrb	r0, [r1, #2]!
   23aa0:	cmp	r0, #32
   23aa4:	bhi	23abc <main@@Base+0xd87c>
   23aa8:	mov	r1, r2
   23aac:	mov	r0, r5
   23ab0:	mov	r2, r7
   23ab4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   23ab8:	mov	r1, r0
   23abc:	cmp	r1, r7
   23ac0:	mov	r2, r7
   23ac4:	beq	23afc <main@@Base+0xd8bc>
   23ac8:	ldrb	r0, [r1]
   23acc:	cmp	r0, #125	; 0x7d
   23ad0:	bne	23af8 <main@@Base+0xd8b8>
   23ad4:	add	r2, r1, #1
   23ad8:	sub	r0, r7, r2
   23adc:	cmp	r0, #2
   23ae0:	blt	24144 <main@@Base+0xdf04>
   23ae4:	ldrb	r0, [r2]
   23ae8:	cmp	r0, #32
   23aec:	bls	24134 <main@@Base+0xdef4>
   23af0:	mov	r1, r2
   23af4:	b	2419c <main@@Base+0xdf5c>
   23af8:	mov	r2, r1
   23afc:	mov	sl, #-268435456	; 0xf0000000
   23b00:	mov	r6, #1627389952	; 0x61000000
   23b04:	cmp	r2, r7
   23b08:	mov	r4, r7
   23b0c:	beq	23b58 <main@@Base+0xd918>
   23b10:	ldrb	r0, [r2]
   23b14:	cmp	r0, #46	; 0x2e
   23b18:	beq	23b30 <main@@Base+0xd8f0>
   23b1c:	cmp	r0, #34	; 0x22
   23b20:	bne	23b4c <main@@Base+0xd90c>
   23b24:	mov	r0, #0
   23b28:	add	r4, r2, #1
   23b2c:	b	23b54 <main@@Base+0xd914>
   23b30:	mov	r1, r2
   23b34:	mov	r0, r5
   23b38:	mov	r2, r7
   23b3c:	mov	r3, #5
   23b40:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23b44:	mov	r4, r0
   23b48:	b	23b58 <main@@Base+0xd918>
   23b4c:	mov	r0, #1
   23b50:	mov	r4, r2
   23b54:	str	r0, [r5, #12]
   23b58:	sub	r0, r7, r4
   23b5c:	mov	r1, #8
   23b60:	cmp	r0, #8
   23b64:	movcc	r1, r0
   23b68:	add	r1, sl, r1, lsl #28
   23b6c:	asr	r1, r1, #28
   23b70:	cmp	r1, #0
   23b74:	blt	23ce0 <main@@Base+0xdaa0>
   23b78:	ldrb	r1, [r4]
   23b7c:	teq	r6, r1, lsl #24
   23b80:	beq	23bd0 <main@@Base+0xd990>
   23b84:	lsl	r1, r1, #24
   23b88:	teq	r1, #1644167168	; 0x62000000
   23b8c:	bne	23ce0 <main@@Base+0xdaa0>
   23b90:	cmp	r0, #2
   23b94:	mov	r8, r4
   23b98:	blt	23e84 <main@@Base+0xdc44>
   23b9c:	mov	r1, r4
   23ba0:	ldr	r2, [r5, #12]
   23ba4:	ldrb	r0, [r1, #1]!
   23ba8:	cmp	r2, #0
   23bac:	beq	23c10 <main@@Base+0xd9d0>
   23bb0:	cmp	r0, #33	; 0x21
   23bb4:	bcc	23bc4 <main@@Base+0xd984>
   23bb8:	cmp	r0, #58	; 0x3a
   23bbc:	mov	r8, r4
   23bc0:	bne	23e84 <main@@Base+0xdc44>
   23bc4:	mov	r0, #0
   23bc8:	str	r0, [r5, #12]
   23bcc:	b	23c20 <main@@Base+0xd9e0>
   23bd0:	cmp	r0, #2
   23bd4:	mov	r6, r4
   23bd8:	blt	23fc0 <main@@Base+0xdd80>
   23bdc:	mov	r1, r4
   23be0:	ldr	r2, [r5, #12]
   23be4:	ldrb	r0, [r1, #1]!
   23be8:	cmp	r2, #0
   23bec:	beq	23c48 <main@@Base+0xda08>
   23bf0:	cmp	r0, #33	; 0x21
   23bf4:	bcc	23c04 <main@@Base+0xd9c4>
   23bf8:	cmp	r0, #58	; 0x3a
   23bfc:	mov	r6, r4
   23c00:	bne	23fc0 <main@@Base+0xdd80>
   23c04:	mov	r0, #0
   23c08:	str	r0, [r5, #12]
   23c0c:	b	23c58 <main@@Base+0xda18>
   23c10:	cmp	r0, #34	; 0x22
   23c14:	mov	r8, r4
   23c18:	bne	23e84 <main@@Base+0xdc44>
   23c1c:	add	r1, r4, #2
   23c20:	sub	r0, r7, r1
   23c24:	cmp	r0, #2
   23c28:	blt	23c94 <main@@Base+0xda54>
   23c2c:	ldrb	r0, [r1]
   23c30:	cmp	r0, #32
   23c34:	bls	23c80 <main@@Base+0xda40>
   23c38:	mov	r8, r1
   23c3c:	cmp	r8, r7
   23c40:	bne	23cac <main@@Base+0xda6c>
   23c44:	b	23db8 <main@@Base+0xdb78>
   23c48:	cmp	r0, #34	; 0x22
   23c4c:	mov	r6, r4
   23c50:	bne	23fc0 <main@@Base+0xdd80>
   23c54:	add	r1, r4, #2
   23c58:	sub	r0, r7, r1
   23c5c:	cmp	r0, #2
   23c60:	blt	23de4 <main@@Base+0xdba4>
   23c64:	ldrb	r0, [r1]
   23c68:	cmp	r0, #32
   23c6c:	bls	23dd0 <main@@Base+0xdb90>
   23c70:	mov	r6, r1
   23c74:	cmp	r6, r7
   23c78:	bne	23dfc <main@@Base+0xdbbc>
   23c7c:	b	23e4c <main@@Base+0xdc0c>
   23c80:	bne	23c94 <main@@Base+0xda54>
   23c84:	mov	r8, r1
   23c88:	ldrb	r0, [r8, #1]!
   23c8c:	cmp	r0, #32
   23c90:	bhi	23ca4 <main@@Base+0xda64>
   23c94:	mov	r0, r5
   23c98:	mov	r2, r7
   23c9c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   23ca0:	mov	r8, r0
   23ca4:	cmp	r8, r7
   23ca8:	beq	23db8 <main@@Base+0xdb78>
   23cac:	ldrb	r0, [r8]
   23cb0:	cmp	r0, #58	; 0x3a
   23cb4:	bne	23db8 <main@@Base+0xdb78>
   23cb8:	add	r1, r8, #1
   23cbc:	sub	r0, r7, r1
   23cc0:	cmp	r0, #2
   23cc4:	blt	23e74 <main@@Base+0xdc34>
   23cc8:	ldrb	r0, [r1]
   23ccc:	cmp	r0, #32
   23cd0:	bls	23e64 <main@@Base+0xdc24>
   23cd4:	mov	r8, r1
   23cd8:	cmp	r4, r8
   23cdc:	bne	23e8c <main@@Base+0xdc4c>
   23ce0:	mov	r0, r5
   23ce4:	mov	r1, r4
   23ce8:	mov	r2, r7
   23cec:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   23cf0:	mov	r1, r0
   23cf4:	sub	r0, r7, r1
   23cf8:	cmp	r0, #2
   23cfc:	blt	23d30 <main@@Base+0xdaf0>
   23d00:	ldrb	r0, [r1]
   23d04:	cmp	r0, #32
   23d08:	bls	23d1c <main@@Base+0xdadc>
   23d0c:	mov	r2, r1
   23d10:	cmp	r2, r7
   23d14:	bne	23d48 <main@@Base+0xdb08>
   23d18:	b	240f4 <main@@Base+0xdeb4>
   23d1c:	bne	23d30 <main@@Base+0xdaf0>
   23d20:	mov	r2, r1
   23d24:	ldrb	r0, [r2, #1]!
   23d28:	cmp	r0, #32
   23d2c:	bhi	23d40 <main@@Base+0xdb00>
   23d30:	mov	r0, r5
   23d34:	mov	r2, r7
   23d38:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   23d3c:	mov	r2, r0
   23d40:	cmp	r2, r7
   23d44:	beq	240f4 <main@@Base+0xdeb4>
   23d48:	ldrb	r0, [r2]
   23d4c:	cmp	r0, #44	; 0x2c
   23d50:	bne	240fc <main@@Base+0xdebc>
   23d54:	add	r1, r2, #1
   23d58:	sub	r0, r7, r1
   23d5c:	cmp	r0, #2
   23d60:	blt	23d90 <main@@Base+0xdb50>
   23d64:	ldrb	r0, [r1]
   23d68:	cmp	r0, #32
   23d6c:	bls	23d80 <main@@Base+0xdb40>
   23d70:	mov	r2, r1
   23d74:	cmp	r2, r7
   23d78:	bne	23da8 <main@@Base+0xdb68>
   23d7c:	b	24128 <main@@Base+0xdee8>
   23d80:	bne	23d90 <main@@Base+0xdb50>
   23d84:	ldrb	r0, [r2, #2]!
   23d88:	cmp	r0, #32
   23d8c:	bhi	23da0 <main@@Base+0xdb60>
   23d90:	mov	r0, r5
   23d94:	mov	r2, r7
   23d98:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   23d9c:	mov	r2, r0
   23da0:	cmp	r2, r7
   23da4:	beq	24128 <main@@Base+0xdee8>
   23da8:	ldrb	r0, [r2]
   23dac:	cmp	r0, #125	; 0x7d
   23db0:	bne	23b04 <main@@Base+0xd8c4>
   23db4:	b	24104 <main@@Base+0xdec4>
   23db8:	mov	r0, r5
   23dbc:	mov	r1, r8
   23dc0:	mov	r2, r7
   23dc4:	mov	r3, #4
   23dc8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23dcc:	b	23e80 <main@@Base+0xdc40>
   23dd0:	bne	23de4 <main@@Base+0xdba4>
   23dd4:	mov	r6, r1
   23dd8:	ldrb	r0, [r6, #1]!
   23ddc:	cmp	r0, #32
   23de0:	bhi	23df4 <main@@Base+0xdbb4>
   23de4:	mov	r0, r5
   23de8:	mov	r2, r7
   23dec:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   23df0:	mov	r6, r0
   23df4:	cmp	r6, r7
   23df8:	beq	23e4c <main@@Base+0xdc0c>
   23dfc:	ldrb	r0, [r6]
   23e00:	cmp	r0, #58	; 0x3a
   23e04:	bne	23e4c <main@@Base+0xdc0c>
   23e08:	add	r1, r6, #1
   23e0c:	sub	r0, r7, r1
   23e10:	cmp	r0, #2
   23e14:	blt	23fb0 <main@@Base+0xdd70>
   23e18:	ldrb	r0, [r1]
   23e1c:	cmp	r0, #32
   23e20:	bls	23fa0 <main@@Base+0xdd60>
   23e24:	mov	r6, r1
   23e28:	cmp	r4, r6
   23e2c:	bne	23fc8 <main@@Base+0xdd88>
   23e30:	mov	r0, r5
   23e34:	mov	r1, r4
   23e38:	mov	r2, r7
   23e3c:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   23e40:	mov	r1, r0
   23e44:	mov	r6, #1627389952	; 0x61000000
   23e48:	b	23cf4 <main@@Base+0xdab4>
   23e4c:	mov	r0, r5
   23e50:	mov	r1, r6
   23e54:	mov	r2, r7
   23e58:	mov	r3, #4
   23e5c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23e60:	b	23fbc <main@@Base+0xdd7c>
   23e64:	bne	23e74 <main@@Base+0xdc34>
   23e68:	ldrb	r0, [r8, #2]!
   23e6c:	cmp	r0, #32
   23e70:	bhi	23e84 <main@@Base+0xdc44>
   23e74:	mov	r0, r5
   23e78:	mov	r2, r7
   23e7c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   23e80:	mov	r8, r0
   23e84:	cmp	r4, r8
   23e88:	beq	23ce0 <main@@Base+0xdaa0>
   23e8c:	mov	r4, #0
   23e90:	cmp	r8, r7
   23e94:	str	r4, [sp, #20]
   23e98:	str	r4, [sp, #16]
   23e9c:	strb	r4, [sp, #10]
   23ea0:	str	r4, [sp, #12]
   23ea4:	beq	23f00 <main@@Base+0xdcc0>
   23ea8:	add	r0, sp, #16
   23eac:	mov	r1, r8
   23eb0:	mov	r2, r7
   23eb4:	add	r3, sp, #12
   23eb8:	str	r0, [sp]
   23ebc:	mov	r0, r5
   23ec0:	bl	38410 <flatcc_json_parser_integer@@Base>
   23ec4:	cmp	r0, r8
   23ec8:	beq	23f10 <main@@Base+0xdcd0>
   23ecc:	ldr	r3, [sp, #12]
   23ed0:	mov	r1, r0
   23ed4:	ldr	r0, [sp, #16]
   23ed8:	ldr	r2, [sp, #20]
   23edc:	cmp	r3, #0
   23ee0:	beq	23f20 <main@@Base+0xdce0>
   23ee4:	subs	r3, r0, #129	; 0x81
   23ee8:	sbcs	r2, r2, #0
   23eec:	bcc	23f4c <main@@Base+0xdd0c>
   23ef0:	mov	r0, r5
   23ef4:	mov	r2, r7
   23ef8:	mov	r3, #8
   23efc:	b	23f38 <main@@Base+0xdcf8>
   23f00:	mov	r1, r7
   23f04:	cmp	r8, r1
   23f08:	bne	23f98 <main@@Base+0xdd58>
   23f0c:	b	23f64 <main@@Base+0xdd24>
   23f10:	mov	r1, r8
   23f14:	cmp	r8, r1
   23f18:	bne	23f98 <main@@Base+0xdd58>
   23f1c:	b	23f64 <main@@Base+0xdd24>
   23f20:	subs	r3, r0, #128	; 0x80
   23f24:	sbcs	r2, r2, #0
   23f28:	bcc	23f54 <main@@Base+0xdd14>
   23f2c:	mov	r0, r5
   23f30:	mov	r2, r7
   23f34:	mov	r3, #7
   23f38:	bl	36078 <flatcc_json_parser_set_error@@Base>
   23f3c:	mov	r1, r0
   23f40:	cmp	r8, r1
   23f44:	bne	23f98 <main@@Base+0xdd58>
   23f48:	b	23f64 <main@@Base+0xdd24>
   23f4c:	rsb	r4, r0, #0
   23f50:	b	23f58 <main@@Base+0xdd18>
   23f54:	mov	r4, r0
   23f58:	strb	r4, [sp, #10]
   23f5c:	cmp	r8, r1
   23f60:	bne	23f98 <main@@Base+0xdd58>
   23f64:	add	r0, sp, #10
   23f68:	mov	r1, r8
   23f6c:	mov	r2, r7
   23f70:	str	r0, [sp]
   23f74:	mov	r0, r5
   23f78:	ldr	r3, [pc, #552]	; 241a8 <main@@Base+0xdf68>
   23f7c:	add	r3, pc, r3
   23f80:	bl	23404 <main@@Base+0xd1c4>
   23f84:	mov	r1, r0
   23f88:	cmp	r0, r8
   23f8c:	cmpne	r1, r7
   23f90:	beq	240e4 <main@@Base+0xdea4>
   23f94:	ldrb	r4, [sp, #10]
   23f98:	strb	r4, [r9, #2]
   23f9c:	b	23cf4 <main@@Base+0xdab4>
   23fa0:	bne	23fb0 <main@@Base+0xdd70>
   23fa4:	ldrb	r0, [r6, #2]!
   23fa8:	cmp	r0, #32
   23fac:	bhi	23fc0 <main@@Base+0xdd80>
   23fb0:	mov	r0, r5
   23fb4:	mov	r2, r7
   23fb8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   23fbc:	mov	r6, r0
   23fc0:	cmp	r4, r6
   23fc4:	beq	23e30 <main@@Base+0xdbf0>
   23fc8:	mov	r4, #0
   23fcc:	cmp	r6, r7
   23fd0:	str	r4, [sp, #20]
   23fd4:	str	r4, [sp, #16]
   23fd8:	strh	r4, [sp, #10]
   23fdc:	str	r4, [sp, #12]
   23fe0:	beq	24040 <main@@Base+0xde00>
   23fe4:	add	r0, sp, #16
   23fe8:	mov	r1, r6
   23fec:	mov	r2, r7
   23ff0:	add	r3, sp, #12
   23ff4:	str	r0, [sp]
   23ff8:	mov	r0, r5
   23ffc:	bl	38410 <flatcc_json_parser_integer@@Base>
   24000:	cmp	r0, r6
   24004:	beq	24050 <main@@Base+0xde10>
   24008:	ldr	r3, [sp, #12]
   2400c:	mov	r1, r0
   24010:	ldr	r0, [sp, #16]
   24014:	ldr	r2, [sp, #20]
   24018:	cmp	r3, #0
   2401c:	beq	24060 <main@@Base+0xde20>
   24020:	movw	r3, #32769	; 0x8001
   24024:	subs	r3, r0, r3
   24028:	sbcs	r2, r2, #0
   2402c:	bcc	2408c <main@@Base+0xde4c>
   24030:	mov	r0, r5
   24034:	mov	r2, r7
   24038:	mov	r3, #8
   2403c:	b	24078 <main@@Base+0xde38>
   24040:	mov	r1, r7
   24044:	cmp	r6, r1
   24048:	bne	240d8 <main@@Base+0xde98>
   2404c:	b	240a4 <main@@Base+0xde64>
   24050:	mov	r1, r6
   24054:	cmp	r6, r1
   24058:	bne	240d8 <main@@Base+0xde98>
   2405c:	b	240a4 <main@@Base+0xde64>
   24060:	subs	r3, r0, #32768	; 0x8000
   24064:	sbcs	r2, r2, #0
   24068:	bcc	24094 <main@@Base+0xde54>
   2406c:	mov	r0, r5
   24070:	mov	r2, r7
   24074:	mov	r3, #7
   24078:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2407c:	mov	r1, r0
   24080:	cmp	r6, r1
   24084:	bne	240d8 <main@@Base+0xde98>
   24088:	b	240a4 <main@@Base+0xde64>
   2408c:	rsb	r4, r0, #0
   24090:	b	24098 <main@@Base+0xde58>
   24094:	mov	r4, r0
   24098:	strh	r4, [sp, #10]
   2409c:	cmp	r6, r1
   240a0:	bne	240d8 <main@@Base+0xde98>
   240a4:	add	r0, sp, #10
   240a8:	mov	r1, r6
   240ac:	mov	r2, r7
   240b0:	str	r0, [sp]
   240b4:	mov	r0, r5
   240b8:	ldr	r3, [pc, #236]	; 241ac <main@@Base+0xdf6c>
   240bc:	add	r3, pc, r3
   240c0:	bl	2381c <main@@Base+0xd5dc>
   240c4:	mov	r1, r0
   240c8:	cmp	r0, r6
   240cc:	cmpne	r1, r7
   240d0:	beq	240e4 <main@@Base+0xdea4>
   240d4:	ldrh	r4, [sp, #10]
   240d8:	strh	r4, [r9]
   240dc:	mov	r6, #1627389952	; 0x61000000
   240e0:	b	23cf4 <main@@Base+0xdab4>
   240e4:	mov	r0, r5
   240e8:	mov	r2, r7
   240ec:	mov	r3, #33	; 0x21
   240f0:	b	2416c <main@@Base+0xdf2c>
   240f4:	mov	r1, r7
   240f8:	b	2419c <main@@Base+0xdf5c>
   240fc:	cmp	r0, #125	; 0x7d
   24100:	bne	2415c <main@@Base+0xdf1c>
   24104:	add	r3, r2, #1
   24108:	sub	r0, r7, r3
   2410c:	cmp	r0, #2
   24110:	blt	24188 <main@@Base+0xdf48>
   24114:	ldrb	r0, [r3]
   24118:	cmp	r0, #32
   2411c:	bls	24174 <main@@Base+0xdf34>
   24120:	mov	r1, r3
   24124:	b	2419c <main@@Base+0xdf5c>
   24128:	mov	r0, r5
   2412c:	mov	r1, r7
   24130:	b	24164 <main@@Base+0xdf24>
   24134:	bne	24144 <main@@Base+0xdf04>
   24138:	ldrb	r0, [r1, #2]!
   2413c:	cmp	r0, #32
   24140:	bhi	2419c <main@@Base+0xdf5c>
   24144:	mov	r1, r2
   24148:	mov	r0, r5
   2414c:	mov	r2, r7
   24150:	sub	sp, fp, #28
   24154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24158:	b	36128 <flatcc_json_parser_space_ext@@Base>
   2415c:	mov	r0, r5
   24160:	mov	r1, r2
   24164:	mov	r2, r7
   24168:	mov	r3, #10
   2416c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24170:	b	24198 <main@@Base+0xdf58>
   24174:	bne	24188 <main@@Base+0xdf48>
   24178:	ldrb	r0, [r2, #2]!
   2417c:	cmp	r0, #32
   24180:	mov	r1, r2
   24184:	bhi	2419c <main@@Base+0xdf5c>
   24188:	mov	r0, r5
   2418c:	mov	r1, r3
   24190:	mov	r2, r7
   24194:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24198:	mov	r1, r0
   2419c:	mov	r0, r1
   241a0:	sub	sp, fp, #28
   241a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241a8:	andeq	fp, r3, r8, asr r2
   241ac:	andeq	fp, r3, r4, lsr #2
   241b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241b4:	add	fp, sp, #28
   241b8:	sub	sp, sp, #28
   241bc:	ldr	r5, [fp, #8]
   241c0:	mov	r8, r0
   241c4:	mov	r0, #0
   241c8:	mov	sl, r2
   241cc:	mov	r4, r1
   241d0:	cmp	r3, #4
   241d4:	str	r0, [r5]
   241d8:	bhi	24230 <main@@Base+0xdff0>
   241dc:	add	r0, pc, #4
   241e0:	ldr	r1, [r0, r3, lsl #2]
   241e4:	add	pc, r0, r1
   241e8:	andeq	r0, r0, r4, lsl r0
   241ec:	andeq	r0, r0, r0, ror r0
   241f0:	andeq	r0, r0, r8, lsl #1
   241f4:	ldrdeq	r0, [r0], -ip
   241f8:	andeq	r0, r0, r0, lsr r1
   241fc:	sub	r0, sl, r4
   24200:	cmp	r0, #4
   24204:	blt	2421c <main@@Base+0xdfdc>
   24208:	ldr	r0, [r4]
   2420c:	movw	r1, #30062	; 0x756e
   24210:	movt	r1, #27756	; 0x6c6c
   24214:	cmp	r0, r1
   24218:	beq	243d0 <main@@Base+0xe190>
   2421c:	mov	r0, r8
   24220:	mov	r1, r4
   24224:	mov	r2, sl
   24228:	mov	r3, #26
   2422c:	b	2424c <main@@Base+0xe00c>
   24230:	ldrb	r0, [r8, #8]
   24234:	tst	r0, #1
   24238:	bne	243a0 <main@@Base+0xe160>
   2423c:	mov	r0, r8
   24240:	mov	r1, r4
   24244:	mov	r2, sl
   24248:	mov	r3, #15
   2424c:	sub	sp, fp, #28
   24250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24254:	b	36078 <flatcc_json_parser_set_error@@Base>
   24258:	mov	r0, r8
   2425c:	mov	r1, r4
   24260:	mov	r2, sl
   24264:	mov	r3, r5
   24268:	bl	172c8 <main@@Base+0x1088>
   2426c:	b	24368 <main@@Base+0xe128>
   24270:	mov	r0, #0
   24274:	mov	r1, #4
   24278:	str	r0, [r5]
   2427c:	ldr	r0, [r8]
   24280:	bl	314c0 <flatcc_builder_start_table@@Base>
   24284:	cmp	r0, #0
   24288:	bne	24354 <main@@Base+0xe114>
   2428c:	cmp	r4, sl
   24290:	beq	24330 <main@@Base+0xe0f0>
   24294:	ldrb	r0, [r4]
   24298:	cmp	r0, #123	; 0x7b
   2429c:	bne	24330 <main@@Base+0xe0f0>
   242a0:	add	r1, r4, #1
   242a4:	sub	r0, sl, r1
   242a8:	cmp	r0, #2
   242ac:	blt	243f0 <main@@Base+0xe1b0>
   242b0:	ldrb	r0, [r1]
   242b4:	cmp	r0, #32
   242b8:	bls	243e0 <main@@Base+0xe1a0>
   242bc:	mov	r4, r1
   242c0:	b	24400 <main@@Base+0xe1c0>
   242c4:	mov	r0, #0
   242c8:	mov	r1, #0
   242cc:	str	r0, [r5]
   242d0:	ldr	r0, [r8]
   242d4:	bl	314c0 <flatcc_builder_start_table@@Base>
   242d8:	cmp	r0, #0
   242dc:	bne	24354 <main@@Base+0xe114>
   242e0:	cmp	r4, sl
   242e4:	beq	24330 <main@@Base+0xe0f0>
   242e8:	ldrb	r0, [r4]
   242ec:	cmp	r0, #123	; 0x7b
   242f0:	bne	24330 <main@@Base+0xe0f0>
   242f4:	add	r1, r4, #1
   242f8:	sub	r0, sl, r1
   242fc:	cmp	r0, #2
   24300:	blt	24fdc <main@@Base+0xed9c>
   24304:	ldrb	r0, [r1]
   24308:	cmp	r0, #32
   2430c:	bls	24fcc <main@@Base+0xed8c>
   24310:	mov	r4, r1
   24314:	b	24fec <main@@Base+0xedac>
   24318:	mov	r0, r8
   2431c:	mov	r1, r4
   24320:	mov	r2, sl
   24324:	mov	r3, r5
   24328:	bl	26e24 <main@@Base+0x10be4>
   2432c:	b	24368 <main@@Base+0xe128>
   24330:	mov	r0, r8
   24334:	mov	r1, r4
   24338:	mov	r2, sl
   2433c:	mov	r3, #21
   24340:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24344:	mov	r4, r0
   24348:	ldr	r0, [r8, #24]
   2434c:	cmp	r0, #0
   24350:	beq	243b8 <main@@Base+0xe178>
   24354:	mov	r0, r8
   24358:	mov	r1, r4
   2435c:	mov	r2, sl
   24360:	mov	r3, #33	; 0x21
   24364:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24368:	mov	r4, r0
   2436c:	ldr	r0, [r8, #24]
   24370:	cmp	r0, #0
   24374:	bne	243d4 <main@@Base+0xe194>
   24378:	ldr	r0, [r5]
   2437c:	cmp	r0, #0
   24380:	bne	243d4 <main@@Base+0xe194>
   24384:	mov	r0, r8
   24388:	mov	r1, r4
   2438c:	mov	r2, sl
   24390:	mov	r3, #33	; 0x21
   24394:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24398:	mov	r4, r0
   2439c:	b	243d4 <main@@Base+0xe194>
   243a0:	mov	r0, r8
   243a4:	mov	r1, r4
   243a8:	mov	r2, sl
   243ac:	sub	sp, fp, #28
   243b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   243b4:	b	36b90 <flatcc_json_parser_generic_json@@Base>
   243b8:	ldr	r0, [r8]
   243bc:	bl	31ef0 <flatcc_builder_end_table@@Base>
   243c0:	cmp	r0, #0
   243c4:	str	r0, [r5]
   243c8:	bne	2436c <main@@Base+0xe12c>
   243cc:	b	24354 <main@@Base+0xe114>
   243d0:	add	r4, r4, #4
   243d4:	mov	r0, r4
   243d8:	sub	sp, fp, #28
   243dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243e0:	bne	243f0 <main@@Base+0xe1b0>
   243e4:	ldrb	r0, [r4, #2]!
   243e8:	cmp	r0, #32
   243ec:	bhi	24400 <main@@Base+0xe1c0>
   243f0:	mov	r0, r8
   243f4:	mov	r2, sl
   243f8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   243fc:	mov	r4, r0
   24400:	cmp	r4, sl
   24404:	mov	r2, sl
   24408:	beq	2441c <main@@Base+0xe1dc>
   2440c:	ldrb	r0, [r4]
   24410:	cmp	r0, #125	; 0x7d
   24414:	beq	25004 <main@@Base+0xedc4>
   24418:	mov	r2, r4
   2441c:	cmp	r2, sl
   24420:	mov	r9, sl
   24424:	beq	24470 <main@@Base+0xe230>
   24428:	ldrb	r0, [r2]
   2442c:	cmp	r0, #46	; 0x2e
   24430:	beq	24448 <main@@Base+0xe208>
   24434:	cmp	r0, #34	; 0x22
   24438:	bne	24464 <main@@Base+0xe224>
   2443c:	mov	r0, #0
   24440:	add	r9, r2, #1
   24444:	b	2446c <main@@Base+0xe22c>
   24448:	mov	r1, r2
   2444c:	mov	r0, r8
   24450:	mov	r2, sl
   24454:	mov	r3, #5
   24458:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2445c:	mov	r9, r0
   24460:	b	24470 <main@@Base+0xe230>
   24464:	mov	r0, #1
   24468:	mov	r9, r2
   2446c:	str	r0, [r8, #12]
   24470:	sub	lr, sl, r9
   24474:	mov	r0, #8
   24478:	cmp	lr, #8
   2447c:	movcc	r0, lr
   24480:	and	r0, r0, #15
   24484:	sub	r1, r0, #1
   24488:	cmp	r1, #7
   2448c:	bhi	24e1c <main@@Base+0xebdc>
   24490:	add	r4, pc, #32
   24494:	mov	ip, r5
   24498:	mov	r0, #0
   2449c:	mov	r2, #0
   244a0:	mov	r3, #0
   244a4:	mov	r7, #0
   244a8:	mov	r6, #0
   244ac:	ldr	r5, [r4, r1, lsl #2]
   244b0:	mov	r1, #0
   244b4:	add	pc, r4, r5
   244b8:	andeq	r0, r0, r0, asr r0
   244bc:	andeq	r0, r0, r8, asr #32
   244c0:	andeq	r0, r0, r0, asr #32
   244c4:	andeq	r0, r0, r8, lsr r0
   244c8:	andeq	r0, r0, r8, lsr #32
   244cc:	andeq	r0, r0, r0, lsr #32
   244d0:	andeq	r0, r0, r0, lsr #32
   244d4:	andeq	r0, r0, r0, lsr #32
   244d8:	ldrb	r1, [r9, #5]
   244dc:	lsl	r1, r1, #16
   244e0:	ldrb	r2, [r9, #4]
   244e4:	orr	r1, r1, r2, lsl #24
   244e8:	mov	r2, r0
   244ec:	mov	r0, r1
   244f0:	ldrb	r1, [r9, #3]
   244f4:	orr	r3, r1, r2
   244f8:	ldrb	r1, [r9, #2]
   244fc:	orr	r7, r3, r1, lsl #8
   24500:	ldrb	r1, [r9, #1]
   24504:	orr	r6, r7, r1, lsl #16
   24508:	ldrb	r1, [r9]
   2450c:	movw	r3, #29234	; 0x7232
   24510:	lsr	r2, r0, #16
   24514:	movt	r3, #27759	; 0x6c6f
   24518:	orr	r7, r6, r1, lsl #24
   2451c:	movw	r1, #25455	; 0x636f
   24520:	orr	r2, r2, r7, lsl #16
   24524:	eor	r1, r1, r7, lsr #16
   24528:	eor	r2, r2, r3
   2452c:	orrs	r1, r2, r1
   24530:	bne	24578 <main@@Base+0xe338>
   24534:	cmp	lr, #7
   24538:	mov	r6, r9
   2453c:	mov	r5, ip
   24540:	blt	24780 <main@@Base+0xe540>
   24544:	mov	r1, r9
   24548:	ldr	r2, [r8, #12]
   2454c:	ldrb	r0, [r1, #6]!
   24550:	cmp	r2, #0
   24554:	beq	245d8 <main@@Base+0xe398>
   24558:	cmp	r0, #33	; 0x21
   2455c:	bcc	2456c <main@@Base+0xe32c>
   24560:	cmp	r0, #58	; 0x3a
   24564:	mov	r6, r9
   24568:	bne	24780 <main@@Base+0xe540>
   2456c:	mov	r0, #0
   24570:	str	r0, [r8, #12]
   24574:	b	245e8 <main@@Base+0xe3a8>
   24578:	movw	r1, #27759	; 0x6c6f
   2457c:	and	r0, r0, #-16777216	; 0xff000000
   24580:	mov	r5, ip
   24584:	movt	r1, #25455	; 0x636f
   24588:	eor	r0, r0, #1912602624	; 0x72000000
   2458c:	eor	r1, r7, r1
   24590:	orrs	r0, r0, r1
   24594:	bne	24964 <main@@Base+0xe724>
   24598:	cmp	lr, #6
   2459c:	mov	r6, r9
   245a0:	blt	248e4 <main@@Base+0xe6a4>
   245a4:	mov	r1, r9
   245a8:	ldr	r2, [r8, #12]
   245ac:	ldrb	r0, [r1, #5]!
   245b0:	cmp	r2, #0
   245b4:	beq	24610 <main@@Base+0xe3d0>
   245b8:	cmp	r0, #33	; 0x21
   245bc:	bcc	245cc <main@@Base+0xe38c>
   245c0:	cmp	r0, #58	; 0x3a
   245c4:	mov	r6, r9
   245c8:	bne	248e4 <main@@Base+0xe6a4>
   245cc:	mov	r0, #0
   245d0:	str	r0, [r8, #12]
   245d4:	b	24620 <main@@Base+0xe3e0>
   245d8:	cmp	r0, #34	; 0x22
   245dc:	mov	r6, r9
   245e0:	bne	24780 <main@@Base+0xe540>
   245e4:	add	r1, r9, #7
   245e8:	sub	r0, sl, r1
   245ec:	cmp	r0, #2
   245f0:	blt	2465c <main@@Base+0xe41c>
   245f4:	ldrb	r0, [r1]
   245f8:	cmp	r0, #32
   245fc:	bls	24648 <main@@Base+0xe408>
   24600:	mov	r6, r1
   24604:	cmp	r6, sl
   24608:	bne	2467c <main@@Base+0xe43c>
   2460c:	b	246b4 <main@@Base+0xe474>
   24610:	cmp	r0, #34	; 0x22
   24614:	mov	r6, r9
   24618:	bne	248e4 <main@@Base+0xe6a4>
   2461c:	add	r1, r9, #6
   24620:	sub	r0, sl, r1
   24624:	cmp	r0, #2
   24628:	blt	246e4 <main@@Base+0xe4a4>
   2462c:	ldrb	r0, [r1]
   24630:	cmp	r0, #32
   24634:	bls	246d0 <main@@Base+0xe490>
   24638:	mov	r6, r1
   2463c:	cmp	r6, sl
   24640:	bne	24704 <main@@Base+0xe4c4>
   24644:	b	2473c <main@@Base+0xe4fc>
   24648:	bne	2465c <main@@Base+0xe41c>
   2464c:	mov	r6, r1
   24650:	ldrb	r0, [r6, #1]!
   24654:	cmp	r0, #32
   24658:	bhi	24674 <main@@Base+0xe434>
   2465c:	mov	r0, r8
   24660:	mov	r2, sl
   24664:	mov	r4, lr
   24668:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2466c:	mov	lr, r4
   24670:	mov	r6, r0
   24674:	cmp	r6, sl
   24678:	beq	246b4 <main@@Base+0xe474>
   2467c:	ldrb	r0, [r6]
   24680:	cmp	r0, #58	; 0x3a
   24684:	bne	246b4 <main@@Base+0xe474>
   24688:	add	r1, r6, #1
   2468c:	sub	r0, sl, r1
   24690:	cmp	r0, #2
   24694:	blt	24768 <main@@Base+0xe528>
   24698:	ldrb	r0, [r1]
   2469c:	cmp	r0, #32
   246a0:	bls	24758 <main@@Base+0xe518>
   246a4:	mov	r6, r1
   246a8:	cmp	r9, r6
   246ac:	bne	24788 <main@@Base+0xe548>
   246b0:	b	24964 <main@@Base+0xe724>
   246b4:	mov	r0, r8
   246b8:	mov	r1, r6
   246bc:	mov	r2, sl
   246c0:	mov	r3, #4
   246c4:	mov	r4, lr
   246c8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   246cc:	b	24778 <main@@Base+0xe538>
   246d0:	bne	246e4 <main@@Base+0xe4a4>
   246d4:	mov	r6, r1
   246d8:	ldrb	r0, [r6, #1]!
   246dc:	cmp	r0, #32
   246e0:	bhi	246fc <main@@Base+0xe4bc>
   246e4:	mov	r0, r8
   246e8:	mov	r2, sl
   246ec:	mov	r4, lr
   246f0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   246f4:	mov	lr, r4
   246f8:	mov	r6, r0
   246fc:	cmp	r6, sl
   24700:	beq	2473c <main@@Base+0xe4fc>
   24704:	ldrb	r0, [r6]
   24708:	cmp	r0, #58	; 0x3a
   2470c:	bne	2473c <main@@Base+0xe4fc>
   24710:	add	r1, r6, #1
   24714:	sub	r0, sl, r1
   24718:	cmp	r0, #2
   2471c:	blt	248cc <main@@Base+0xe68c>
   24720:	ldrb	r0, [r1]
   24724:	cmp	r0, #32
   24728:	bls	248bc <main@@Base+0xe67c>
   2472c:	mov	r6, r1
   24730:	cmp	r9, r6
   24734:	bne	248ec <main@@Base+0xe6ac>
   24738:	b	24964 <main@@Base+0xe724>
   2473c:	mov	r0, r8
   24740:	mov	r1, r6
   24744:	mov	r2, sl
   24748:	mov	r3, #4
   2474c:	mov	r4, lr
   24750:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24754:	b	248dc <main@@Base+0xe69c>
   24758:	bne	24768 <main@@Base+0xe528>
   2475c:	ldrb	r0, [r6, #2]!
   24760:	cmp	r0, #32
   24764:	bhi	24780 <main@@Base+0xe540>
   24768:	mov	r0, r8
   2476c:	mov	r2, sl
   24770:	mov	r4, lr
   24774:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24778:	mov	lr, r4
   2477c:	mov	r6, r0
   24780:	cmp	r9, r6
   24784:	beq	24964 <main@@Base+0xe724>
   24788:	mov	r7, #0
   2478c:	cmp	r6, sl
   24790:	str	r7, [sp, #20]
   24794:	str	r7, [sp, #16]
   24798:	strb	r7, [sp, #11]
   2479c:	str	r7, [sp, #12]
   247a0:	beq	24800 <main@@Base+0xe5c0>
   247a4:	add	r0, sp, #16
   247a8:	mov	r1, r6
   247ac:	mov	r2, sl
   247b0:	add	r3, sp, #12
   247b4:	str	r0, [sp]
   247b8:	mov	r0, r8
   247bc:	bl	38410 <flatcc_json_parser_integer@@Base>
   247c0:	cmp	r0, r6
   247c4:	beq	24810 <main@@Base+0xe5d0>
   247c8:	ldr	r2, [sp, #12]
   247cc:	mov	r4, r0
   247d0:	ldr	r0, [sp, #16]
   247d4:	ldr	r1, [sp, #20]
   247d8:	cmp	r2, #0
   247dc:	beq	24820 <main@@Base+0xe5e0>
   247e0:	subs	r2, r0, #129	; 0x81
   247e4:	sbcs	r1, r1, #0
   247e8:	bcc	24850 <main@@Base+0xe610>
   247ec:	mov	r0, r8
   247f0:	mov	r1, r4
   247f4:	mov	r2, sl
   247f8:	mov	r3, #8
   247fc:	b	2483c <main@@Base+0xe5fc>
   24800:	mov	r4, sl
   24804:	cmp	r6, r4
   24808:	bne	2489c <main@@Base+0xe65c>
   2480c:	b	24868 <main@@Base+0xe628>
   24810:	mov	r4, r6
   24814:	cmp	r6, r4
   24818:	bne	2489c <main@@Base+0xe65c>
   2481c:	b	24868 <main@@Base+0xe628>
   24820:	subs	r2, r0, #128	; 0x80
   24824:	sbcs	r1, r1, #0
   24828:	bcc	24858 <main@@Base+0xe618>
   2482c:	mov	r0, r8
   24830:	mov	r1, r4
   24834:	mov	r2, sl
   24838:	mov	r3, #7
   2483c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24840:	mov	r4, r0
   24844:	cmp	r6, r4
   24848:	bne	2489c <main@@Base+0xe65c>
   2484c:	b	24868 <main@@Base+0xe628>
   24850:	rsb	r7, r0, #0
   24854:	b	2485c <main@@Base+0xe61c>
   24858:	mov	r7, r0
   2485c:	strb	r7, [sp, #11]
   24860:	cmp	r6, r4
   24864:	bne	2489c <main@@Base+0xe65c>
   24868:	add	r0, sp, #11
   2486c:	mov	r1, r6
   24870:	mov	r2, sl
   24874:	str	r0, [sp]
   24878:	mov	r0, r8
   2487c:	ldr	r3, [pc, #2468]	; 25228 <main@@Base+0xefe8>
   24880:	add	r3, pc, r3
   24884:	bl	23404 <main@@Base+0xd1c4>
   24888:	mov	r4, r0
   2488c:	cmp	r0, r6
   24890:	cmpne	r4, sl
   24894:	beq	24354 <main@@Base+0xe114>
   24898:	ldrb	r7, [sp, #11]
   2489c:	uxtb	r0, r7
   248a0:	cmp	r0, #2
   248a4:	ldrbeq	r0, [r8, #8]
   248a8:	tsteq	r0, #2
   248ac:	beq	24f04 <main@@Base+0xecc4>
   248b0:	ldr	r0, [r8]
   248b4:	mov	r1, #1
   248b8:	b	24bb0 <main@@Base+0xe970>
   248bc:	bne	248cc <main@@Base+0xe68c>
   248c0:	ldrb	r0, [r6, #2]!
   248c4:	cmp	r0, #32
   248c8:	bhi	248e4 <main@@Base+0xe6a4>
   248cc:	mov	r0, r8
   248d0:	mov	r2, sl
   248d4:	mov	r4, lr
   248d8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   248dc:	mov	lr, r4
   248e0:	mov	r6, r0
   248e4:	cmp	r9, r6
   248e8:	beq	24964 <main@@Base+0xe724>
   248ec:	mov	r7, #0
   248f0:	cmp	r6, sl
   248f4:	str	r7, [sp, #20]
   248f8:	str	r7, [sp, #16]
   248fc:	strb	r7, [sp, #11]
   24900:	str	r7, [sp, #12]
   24904:	beq	24a0c <main@@Base+0xe7cc>
   24908:	add	r0, sp, #16
   2490c:	mov	r1, r6
   24910:	mov	r2, sl
   24914:	add	r3, sp, #12
   24918:	str	r0, [sp]
   2491c:	mov	r0, r8
   24920:	bl	38410 <flatcc_json_parser_integer@@Base>
   24924:	cmp	r0, r6
   24928:	beq	24a54 <main@@Base+0xe814>
   2492c:	ldr	r2, [sp, #12]
   24930:	mov	r4, r0
   24934:	ldr	r0, [sp, #16]
   24938:	ldr	r1, [sp, #20]
   2493c:	cmp	r2, #0
   24940:	beq	24a9c <main@@Base+0xe85c>
   24944:	subs	r2, r0, #129	; 0x81
   24948:	sbcs	r1, r1, #0
   2494c:	bcc	24acc <main@@Base+0xe88c>
   24950:	mov	r0, r8
   24954:	mov	r1, r4
   24958:	mov	r2, sl
   2495c:	mov	r3, #8
   24960:	b	24ab8 <main@@Base+0xe878>
   24964:	movw	r1, #12800	; 0x3200
   24968:	bic	r0, r7, #255	; 0xff
   2496c:	movt	r1, #30051	; 0x7563
   24970:	teq	r0, r1
   24974:	bne	249b8 <main@@Base+0xe778>
   24978:	cmp	lr, #4
   2497c:	mov	r7, r9
   24980:	blt	24c68 <main@@Base+0xea28>
   24984:	mov	r1, r9
   24988:	ldr	r2, [r8, #12]
   2498c:	ldrb	r0, [r1, #3]!
   24990:	cmp	r2, #0
   24994:	beq	24a1c <main@@Base+0xe7dc>
   24998:	cmp	r0, #33	; 0x21
   2499c:	bcc	249ac <main@@Base+0xe76c>
   249a0:	cmp	r0, #58	; 0x3a
   249a4:	mov	r7, r9
   249a8:	bne	24c68 <main@@Base+0xea28>
   249ac:	mov	r0, #0
   249b0:	str	r0, [r8, #12]
   249b4:	b	24a2c <main@@Base+0xe7ec>
   249b8:	movw	r0, #0
   249bc:	bfc	r7, #0, #16
   249c0:	movt	r0, #30051	; 0x7563
   249c4:	teq	r7, r0
   249c8:	bne	24e1c <main@@Base+0xebdc>
   249cc:	cmp	lr, #3
   249d0:	mov	r7, r9
   249d4:	blt	24db0 <main@@Base+0xeb70>
   249d8:	mov	r1, r9
   249dc:	ldr	r2, [r8, #12]
   249e0:	ldrb	r0, [r1, #2]!
   249e4:	cmp	r2, #0
   249e8:	beq	24a64 <main@@Base+0xe824>
   249ec:	cmp	r0, #33	; 0x21
   249f0:	bcc	24a00 <main@@Base+0xe7c0>
   249f4:	cmp	r0, #58	; 0x3a
   249f8:	mov	r7, r9
   249fc:	bne	24db0 <main@@Base+0xeb70>
   24a00:	mov	r0, #0
   24a04:	str	r0, [r8, #12]
   24a08:	b	24a74 <main@@Base+0xe834>
   24a0c:	mov	r4, sl
   24a10:	cmp	r6, r4
   24a14:	bne	24b94 <main@@Base+0xe954>
   24a18:	b	24b60 <main@@Base+0xe920>
   24a1c:	cmp	r0, #34	; 0x22
   24a20:	mov	r7, r9
   24a24:	bne	24c68 <main@@Base+0xea28>
   24a28:	add	r1, r9, #4
   24a2c:	sub	r0, sl, r1
   24a30:	cmp	r0, #2
   24a34:	blt	24ae8 <main@@Base+0xe8a8>
   24a38:	ldrb	r0, [r1]
   24a3c:	cmp	r0, #32
   24a40:	bls	24ad4 <main@@Base+0xe894>
   24a44:	mov	r7, r1
   24a48:	cmp	r7, sl
   24a4c:	bne	24b00 <main@@Base+0xe8c0>
   24a50:	b	24b38 <main@@Base+0xe8f8>
   24a54:	mov	r4, r6
   24a58:	cmp	r6, r4
   24a5c:	bne	24b94 <main@@Base+0xe954>
   24a60:	b	24b60 <main@@Base+0xe920>
   24a64:	cmp	r0, #34	; 0x22
   24a68:	mov	r7, r9
   24a6c:	bne	24db0 <main@@Base+0xeb70>
   24a70:	add	r1, r9, #3
   24a74:	sub	r0, sl, r1
   24a78:	cmp	r0, #2
   24a7c:	blt	24be0 <main@@Base+0xe9a0>
   24a80:	ldrb	r0, [r1]
   24a84:	cmp	r0, #32
   24a88:	bls	24bcc <main@@Base+0xe98c>
   24a8c:	mov	r7, r1
   24a90:	cmp	r7, sl
   24a94:	bne	24bf8 <main@@Base+0xe9b8>
   24a98:	b	24c30 <main@@Base+0xe9f0>
   24a9c:	subs	r2, r0, #128	; 0x80
   24aa0:	sbcs	r1, r1, #0
   24aa4:	bcc	24b50 <main@@Base+0xe910>
   24aa8:	mov	r0, r8
   24aac:	mov	r1, r4
   24ab0:	mov	r2, sl
   24ab4:	mov	r3, #7
   24ab8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24abc:	mov	r4, r0
   24ac0:	cmp	r6, r4
   24ac4:	bne	24b94 <main@@Base+0xe954>
   24ac8:	b	24b60 <main@@Base+0xe920>
   24acc:	rsb	r7, r0, #0
   24ad0:	b	24b54 <main@@Base+0xe914>
   24ad4:	bne	24ae8 <main@@Base+0xe8a8>
   24ad8:	mov	r7, r1
   24adc:	ldrb	r0, [r7, #1]!
   24ae0:	cmp	r0, #32
   24ae4:	bhi	24af8 <main@@Base+0xe8b8>
   24ae8:	mov	r0, r8
   24aec:	mov	r2, sl
   24af0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24af4:	mov	r7, r0
   24af8:	cmp	r7, sl
   24afc:	beq	24b38 <main@@Base+0xe8f8>
   24b00:	ldrb	r0, [r7]
   24b04:	cmp	r0, #58	; 0x3a
   24b08:	bne	24b38 <main@@Base+0xe8f8>
   24b0c:	add	r1, r7, #1
   24b10:	sub	r0, sl, r1
   24b14:	cmp	r0, #2
   24b18:	blt	24c58 <main@@Base+0xea18>
   24b1c:	ldrb	r0, [r1]
   24b20:	cmp	r0, #32
   24b24:	bls	24c48 <main@@Base+0xea08>
   24b28:	mov	r7, r1
   24b2c:	cmp	r9, r7
   24b30:	bne	24c70 <main@@Base+0xea30>
   24b34:	b	24e1c <main@@Base+0xebdc>
   24b38:	mov	r0, r8
   24b3c:	mov	r1, r7
   24b40:	mov	r2, sl
   24b44:	mov	r3, #4
   24b48:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24b4c:	b	24c64 <main@@Base+0xea24>
   24b50:	mov	r7, r0
   24b54:	strb	r7, [sp, #11]
   24b58:	cmp	r6, r4
   24b5c:	bne	24b94 <main@@Base+0xe954>
   24b60:	add	r0, sp, #11
   24b64:	mov	r1, r6
   24b68:	mov	r2, sl
   24b6c:	str	r0, [sp]
   24b70:	mov	r0, r8
   24b74:	ldr	r3, [pc, #1712]	; 2522c <main@@Base+0xefec>
   24b78:	add	r3, pc, r3
   24b7c:	bl	23404 <main@@Base+0xd1c4>
   24b80:	mov	r4, r0
   24b84:	cmp	r0, r6
   24b88:	cmpne	r4, sl
   24b8c:	beq	24354 <main@@Base+0xe114>
   24b90:	ldrb	r7, [sp, #11]
   24b94:	uxtb	r0, r7
   24b98:	cmp	r0, #2
   24b9c:	ldrbeq	r0, [r8, #8]
   24ba0:	tsteq	r0, #2
   24ba4:	beq	24f04 <main@@Base+0xecc4>
   24ba8:	ldr	r0, [r8]
   24bac:	mov	r1, #0
   24bb0:	mov	r2, #1
   24bb4:	mov	r3, #1
   24bb8:	bl	32964 <flatcc_builder_table_add@@Base>
   24bbc:	cmp	r0, #0
   24bc0:	beq	24354 <main@@Base+0xe114>
   24bc4:	strb	r7, [r0]
   24bc8:	b	24f04 <main@@Base+0xecc4>
   24bcc:	bne	24be0 <main@@Base+0xe9a0>
   24bd0:	mov	r7, r1
   24bd4:	ldrb	r0, [r7, #1]!
   24bd8:	cmp	r0, #32
   24bdc:	bhi	24bf0 <main@@Base+0xe9b0>
   24be0:	mov	r0, r8
   24be4:	mov	r2, sl
   24be8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24bec:	mov	r7, r0
   24bf0:	cmp	r7, sl
   24bf4:	beq	24c30 <main@@Base+0xe9f0>
   24bf8:	ldrb	r0, [r7]
   24bfc:	cmp	r0, #58	; 0x3a
   24c00:	bne	24c30 <main@@Base+0xe9f0>
   24c04:	add	r1, r7, #1
   24c08:	sub	r0, sl, r1
   24c0c:	cmp	r0, #2
   24c10:	blt	24da0 <main@@Base+0xeb60>
   24c14:	ldrb	r0, [r1]
   24c18:	cmp	r0, #32
   24c1c:	bls	24d90 <main@@Base+0xeb50>
   24c20:	mov	r7, r1
   24c24:	cmp	r9, r7
   24c28:	bne	24db8 <main@@Base+0xeb78>
   24c2c:	b	24e1c <main@@Base+0xebdc>
   24c30:	mov	r0, r8
   24c34:	mov	r1, r7
   24c38:	mov	r2, sl
   24c3c:	mov	r3, #4
   24c40:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24c44:	b	24dac <main@@Base+0xeb6c>
   24c48:	bne	24c58 <main@@Base+0xea18>
   24c4c:	ldrb	r0, [r7, #2]!
   24c50:	cmp	r0, #32
   24c54:	bhi	24c68 <main@@Base+0xea28>
   24c58:	mov	r0, r8
   24c5c:	mov	r2, sl
   24c60:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24c64:	mov	r7, r0
   24c68:	cmp	r9, r7
   24c6c:	beq	24e1c <main@@Base+0xebdc>
   24c70:	mov	r6, #0
   24c74:	cmp	r7, sl
   24c78:	str	r6, [sp, #20]
   24c7c:	str	r6, [sp, #16]
   24c80:	strb	r6, [sp, #11]
   24c84:	str	r6, [sp, #12]
   24c88:	beq	24cd4 <main@@Base+0xea94>
   24c8c:	add	r0, sp, #16
   24c90:	mov	r1, r7
   24c94:	mov	r2, sl
   24c98:	add	r3, sp, #12
   24c9c:	str	r0, [sp]
   24ca0:	mov	r0, r8
   24ca4:	bl	38410 <flatcc_json_parser_integer@@Base>
   24ca8:	cmp	r0, r7
   24cac:	beq	24ce4 <main@@Base+0xeaa4>
   24cb0:	mov	r4, r0
   24cb4:	ldr	r0, [sp, #12]
   24cb8:	cmp	r0, #0
   24cbc:	beq	24cf4 <main@@Base+0xeab4>
   24cc0:	mov	r0, r8
   24cc4:	mov	r1, r4
   24cc8:	mov	r2, sl
   24ccc:	mov	r3, #8
   24cd0:	b	24d18 <main@@Base+0xead8>
   24cd4:	mov	r4, sl
   24cd8:	cmp	r7, r4
   24cdc:	bne	24d5c <main@@Base+0xeb1c>
   24ce0:	b	24d28 <main@@Base+0xeae8>
   24ce4:	mov	r4, r7
   24ce8:	cmp	r7, r4
   24cec:	bne	24d5c <main@@Base+0xeb1c>
   24cf0:	b	24d28 <main@@Base+0xeae8>
   24cf4:	ldr	r0, [sp, #16]
   24cf8:	ldr	r1, [sp, #20]
   24cfc:	subs	r2, r0, #256	; 0x100
   24d00:	sbcs	r1, r1, #0
   24d04:	bcc	24d7c <main@@Base+0xeb3c>
   24d08:	mov	r0, r8
   24d0c:	mov	r1, r4
   24d10:	mov	r2, sl
   24d14:	mov	r3, #7
   24d18:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24d1c:	mov	r4, r0
   24d20:	cmp	r7, r4
   24d24:	bne	24d5c <main@@Base+0xeb1c>
   24d28:	add	r0, sp, #11
   24d2c:	mov	r1, r7
   24d30:	mov	r2, sl
   24d34:	str	r0, [sp]
   24d38:	mov	r0, r8
   24d3c:	ldr	r3, [pc, #1260]	; 25230 <main@@Base+0xeff0>
   24d40:	add	r3, pc, r3
   24d44:	bl	23614 <main@@Base+0xd3d4>
   24d48:	mov	r4, r0
   24d4c:	cmp	r0, r7
   24d50:	cmpne	r4, sl
   24d54:	beq	24354 <main@@Base+0xe114>
   24d58:	ldrb	r6, [sp, #11]
   24d5c:	uxtb	r0, r6
   24d60:	cmp	r0, #2
   24d64:	ldrbeq	r0, [r8, #8]
   24d68:	tsteq	r0, #2
   24d6c:	beq	24f04 <main@@Base+0xecc4>
   24d70:	ldr	r0, [r8]
   24d74:	mov	r1, #3
   24d78:	b	24eec <main@@Base+0xecac>
   24d7c:	mov	r6, r0
   24d80:	strb	r0, [sp, #11]
   24d84:	cmp	r7, r4
   24d88:	bne	24d5c <main@@Base+0xeb1c>
   24d8c:	b	24d28 <main@@Base+0xeae8>
   24d90:	bne	24da0 <main@@Base+0xeb60>
   24d94:	ldrb	r0, [r7, #2]!
   24d98:	cmp	r0, #32
   24d9c:	bhi	24db0 <main@@Base+0xeb70>
   24da0:	mov	r0, r8
   24da4:	mov	r2, sl
   24da8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24dac:	mov	r7, r0
   24db0:	cmp	r9, r7
   24db4:	beq	24e1c <main@@Base+0xebdc>
   24db8:	mov	r6, #0
   24dbc:	cmp	r7, sl
   24dc0:	str	r6, [sp, #20]
   24dc4:	str	r6, [sp, #16]
   24dc8:	strb	r6, [sp, #11]
   24dcc:	str	r6, [sp, #12]
   24dd0:	beq	24e34 <main@@Base+0xebf4>
   24dd4:	add	r0, sp, #16
   24dd8:	mov	r1, r7
   24ddc:	mov	r2, sl
   24de0:	add	r3, sp, #12
   24de4:	str	r0, [sp]
   24de8:	mov	r0, r8
   24dec:	bl	38410 <flatcc_json_parser_integer@@Base>
   24df0:	cmp	r0, r7
   24df4:	beq	24e44 <main@@Base+0xec04>
   24df8:	mov	r4, r0
   24dfc:	ldr	r0, [sp, #12]
   24e00:	cmp	r0, #0
   24e04:	beq	24e54 <main@@Base+0xec14>
   24e08:	mov	r0, r8
   24e0c:	mov	r1, r4
   24e10:	mov	r2, sl
   24e14:	mov	r3, #8
   24e18:	b	24e78 <main@@Base+0xec38>
   24e1c:	mov	r0, r8
   24e20:	mov	r1, r9
   24e24:	mov	r2, sl
   24e28:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   24e2c:	mov	r4, r0
   24e30:	b	24f04 <main@@Base+0xecc4>
   24e34:	mov	r4, sl
   24e38:	cmp	r7, r4
   24e3c:	bne	24ed0 <main@@Base+0xec90>
   24e40:	b	24e88 <main@@Base+0xec48>
   24e44:	mov	r4, r7
   24e48:	cmp	r7, r4
   24e4c:	bne	24ed0 <main@@Base+0xec90>
   24e50:	b	24e88 <main@@Base+0xec48>
   24e54:	ldr	r0, [sp, #16]
   24e58:	ldr	r1, [sp, #20]
   24e5c:	subs	r2, r0, #256	; 0x100
   24e60:	sbcs	r1, r1, #0
   24e64:	bcc	24ec0 <main@@Base+0xec80>
   24e68:	mov	r0, r8
   24e6c:	mov	r1, r4
   24e70:	mov	r2, sl
   24e74:	mov	r3, #7
   24e78:	bl	36078 <flatcc_json_parser_set_error@@Base>
   24e7c:	mov	r4, r0
   24e80:	cmp	r7, r4
   24e84:	bne	24ed0 <main@@Base+0xec90>
   24e88:	add	r0, sp, #11
   24e8c:	mov	r1, r7
   24e90:	mov	r2, sl
   24e94:	str	r0, [sp]
   24e98:	mov	r0, r8
   24e9c:	ldr	r3, [pc, #912]	; 25234 <main@@Base+0xeff4>
   24ea0:	add	r3, pc, r3
   24ea4:	bl	23614 <main@@Base+0xd3d4>
   24ea8:	mov	r4, r0
   24eac:	cmp	r0, r7
   24eb0:	cmpne	r4, sl
   24eb4:	beq	24354 <main@@Base+0xe114>
   24eb8:	ldrb	r6, [sp, #11]
   24ebc:	b	24ed0 <main@@Base+0xec90>
   24ec0:	mov	r6, r0
   24ec4:	strb	r0, [sp, #11]
   24ec8:	cmp	r7, r4
   24ecc:	beq	24e88 <main@@Base+0xec48>
   24ed0:	uxtb	r0, r6
   24ed4:	cmp	r0, #2
   24ed8:	ldrbeq	r0, [r8, #8]
   24edc:	tsteq	r0, #2
   24ee0:	beq	24f04 <main@@Base+0xecc4>
   24ee4:	ldr	r0, [r8]
   24ee8:	mov	r1, #2
   24eec:	mov	r2, #1
   24ef0:	mov	r3, #1
   24ef4:	bl	32964 <flatcc_builder_table_add@@Base>
   24ef8:	cmp	r0, #0
   24efc:	beq	24354 <main@@Base+0xe114>
   24f00:	strb	r6, [r0]
   24f04:	sub	r0, sl, r4
   24f08:	cmp	r0, #2
   24f0c:	blt	24f40 <main@@Base+0xed00>
   24f10:	ldrb	r0, [r4]
   24f14:	cmp	r0, #32
   24f18:	bls	24f2c <main@@Base+0xecec>
   24f1c:	mov	r2, r4
   24f20:	cmp	r2, sl
   24f24:	bne	24f5c <main@@Base+0xed1c>
   24f28:	b	25168 <main@@Base+0xef28>
   24f2c:	bne	24f40 <main@@Base+0xed00>
   24f30:	mov	r2, r4
   24f34:	ldrb	r0, [r2, #1]!
   24f38:	cmp	r0, #32
   24f3c:	bhi	24f54 <main@@Base+0xed14>
   24f40:	mov	r0, r8
   24f44:	mov	r1, r4
   24f48:	mov	r2, sl
   24f4c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24f50:	mov	r2, r0
   24f54:	cmp	r2, sl
   24f58:	beq	25168 <main@@Base+0xef28>
   24f5c:	ldrb	r0, [r2]
   24f60:	cmp	r0, #44	; 0x2c
   24f64:	bne	251c4 <main@@Base+0xef84>
   24f68:	add	r1, r2, #1
   24f6c:	sub	r0, sl, r1
   24f70:	cmp	r0, #2
   24f74:	blt	24fa4 <main@@Base+0xed64>
   24f78:	ldrb	r0, [r1]
   24f7c:	cmp	r0, #32
   24f80:	bls	24f94 <main@@Base+0xed54>
   24f84:	mov	r2, r1
   24f88:	cmp	r2, sl
   24f8c:	bne	24fbc <main@@Base+0xed7c>
   24f90:	b	25170 <main@@Base+0xef30>
   24f94:	bne	24fa4 <main@@Base+0xed64>
   24f98:	ldrb	r0, [r2, #2]!
   24f9c:	cmp	r0, #32
   24fa0:	bhi	24fb4 <main@@Base+0xed74>
   24fa4:	mov	r0, r8
   24fa8:	mov	r2, sl
   24fac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24fb0:	mov	r2, r0
   24fb4:	cmp	r2, sl
   24fb8:	beq	25170 <main@@Base+0xef30>
   24fbc:	ldrb	r0, [r2]
   24fc0:	cmp	r0, #125	; 0x7d
   24fc4:	bne	2441c <main@@Base+0xe1dc>
   24fc8:	b	251cc <main@@Base+0xef8c>
   24fcc:	bne	24fdc <main@@Base+0xed9c>
   24fd0:	ldrb	r0, [r4, #2]!
   24fd4:	cmp	r0, #32
   24fd8:	bhi	24fec <main@@Base+0xedac>
   24fdc:	mov	r0, r8
   24fe0:	mov	r2, sl
   24fe4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   24fe8:	mov	r4, r0
   24fec:	cmp	r4, sl
   24ff0:	mov	r3, sl
   24ff4:	beq	25038 <main@@Base+0xedf8>
   24ff8:	ldrb	r0, [r4]
   24ffc:	cmp	r0, #125	; 0x7d
   25000:	bne	25034 <main@@Base+0xedf4>
   25004:	add	r1, r4, #1
   25008:	sub	r0, sl, r1
   2500c:	cmp	r0, #2
   25010:	blt	25218 <main@@Base+0xefd8>
   25014:	ldrb	r0, [r1]
   25018:	cmp	r0, #32
   2501c:	bhi	251e8 <main@@Base+0xefa8>
   25020:	bne	25218 <main@@Base+0xefd8>
   25024:	ldrb	r0, [r4, #2]!
   25028:	cmp	r0, #32
   2502c:	bhi	24348 <main@@Base+0xe108>
   25030:	b	25218 <main@@Base+0xefd8>
   25034:	mov	r3, r4
   25038:	mov	r4, #0
   2503c:	mov	r7, #1
   25040:	cmp	r3, sl
   25044:	mov	r1, sl
   25048:	beq	25090 <main@@Base+0xee50>
   2504c:	ldrb	r0, [r3]
   25050:	cmp	r0, #46	; 0x2e
   25054:	beq	2506c <main@@Base+0xee2c>
   25058:	cmp	r0, #34	; 0x22
   2505c:	bne	25088 <main@@Base+0xee48>
   25060:	str	r4, [r8, #12]
   25064:	add	r1, r3, #1
   25068:	b	25090 <main@@Base+0xee50>
   2506c:	mov	r1, r3
   25070:	mov	r0, r8
   25074:	mov	r2, sl
   25078:	mov	r3, #5
   2507c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25080:	mov	r1, r0
   25084:	b	25090 <main@@Base+0xee50>
   25088:	mov	r1, r3
   2508c:	str	r7, [r8, #12]
   25090:	mov	r0, r8
   25094:	mov	r2, sl
   25098:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2509c:	mov	r2, r0
   250a0:	sub	r0, sl, r0
   250a4:	cmp	r0, #2
   250a8:	blt	250dc <main@@Base+0xee9c>
   250ac:	ldrb	r0, [r2]
   250b0:	cmp	r0, #32
   250b4:	bls	250c8 <main@@Base+0xee88>
   250b8:	mov	r3, r2
   250bc:	cmp	r3, sl
   250c0:	bne	250f8 <main@@Base+0xeeb8>
   250c4:	b	25168 <main@@Base+0xef28>
   250c8:	bne	250dc <main@@Base+0xee9c>
   250cc:	mov	r3, r2
   250d0:	ldrb	r0, [r3, #1]!
   250d4:	cmp	r0, #32
   250d8:	bhi	250f0 <main@@Base+0xeeb0>
   250dc:	mov	r1, r2
   250e0:	mov	r0, r8
   250e4:	mov	r2, sl
   250e8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   250ec:	mov	r3, r0
   250f0:	cmp	r3, sl
   250f4:	beq	25168 <main@@Base+0xef28>
   250f8:	ldrb	r0, [r3]
   250fc:	cmp	r0, #44	; 0x2c
   25100:	bne	2517c <main@@Base+0xef3c>
   25104:	add	r1, r3, #1
   25108:	sub	r0, sl, r1
   2510c:	cmp	r0, #2
   25110:	blt	25140 <main@@Base+0xef00>
   25114:	ldrb	r0, [r1]
   25118:	cmp	r0, #32
   2511c:	bls	25130 <main@@Base+0xeef0>
   25120:	mov	r3, r1
   25124:	cmp	r3, sl
   25128:	bne	25158 <main@@Base+0xef18>
   2512c:	b	25170 <main@@Base+0xef30>
   25130:	bne	25140 <main@@Base+0xef00>
   25134:	ldrb	r0, [r3, #2]!
   25138:	cmp	r0, #32
   2513c:	bhi	25150 <main@@Base+0xef10>
   25140:	mov	r0, r8
   25144:	mov	r2, sl
   25148:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2514c:	mov	r3, r0
   25150:	cmp	r3, sl
   25154:	beq	25170 <main@@Base+0xef30>
   25158:	ldrb	r0, [r3]
   2515c:	cmp	r0, #125	; 0x7d
   25160:	bne	25040 <main@@Base+0xee00>
   25164:	b	25184 <main@@Base+0xef44>
   25168:	mov	r4, sl
   2516c:	b	24348 <main@@Base+0xe108>
   25170:	mov	r0, r8
   25174:	mov	r1, sl
   25178:	b	251f8 <main@@Base+0xefb8>
   2517c:	cmp	r0, #125	; 0x7d
   25180:	bne	251b8 <main@@Base+0xef78>
   25184:	add	r1, r3, #1
   25188:	sub	r0, sl, r1
   2518c:	cmp	r0, #2
   25190:	blt	25218 <main@@Base+0xefd8>
   25194:	ldrb	r0, [r1]
   25198:	cmp	r0, #32
   2519c:	bhi	251e8 <main@@Base+0xefa8>
   251a0:	bne	25218 <main@@Base+0xefd8>
   251a4:	ldrb	r0, [r3, #2]!
   251a8:	cmp	r0, #32
   251ac:	mov	r4, r3
   251b0:	bhi	24348 <main@@Base+0xe108>
   251b4:	b	25218 <main@@Base+0xefd8>
   251b8:	mov	r0, r8
   251bc:	mov	r1, r3
   251c0:	b	251f8 <main@@Base+0xefb8>
   251c4:	cmp	r0, #125	; 0x7d
   251c8:	bne	251f0 <main@@Base+0xefb0>
   251cc:	add	r1, r2, #1
   251d0:	sub	r0, sl, r1
   251d4:	cmp	r0, #2
   251d8:	blt	25218 <main@@Base+0xefd8>
   251dc:	ldrb	r0, [r1]
   251e0:	cmp	r0, #32
   251e4:	bls	25204 <main@@Base+0xefc4>
   251e8:	mov	r4, r1
   251ec:	b	24348 <main@@Base+0xe108>
   251f0:	mov	r0, r8
   251f4:	mov	r1, r2
   251f8:	mov	r2, sl
   251fc:	mov	r3, #10
   25200:	b	24340 <main@@Base+0xe100>
   25204:	bne	25218 <main@@Base+0xefd8>
   25208:	ldrb	r0, [r2, #2]!
   2520c:	cmp	r0, #32
   25210:	mov	r4, r2
   25214:	bhi	24348 <main@@Base+0xe108>
   25218:	mov	r0, r8
   2521c:	mov	r2, sl
   25220:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   25224:	b	24344 <main@@Base+0xe104>
   25228:	andeq	sl, r3, ip, ror #18
   2522c:	andeq	sl, r3, r4, lsl #13
   25230:	andeq	sl, r3, ip, asr #9
   25234:	andeq	sl, r3, r8, ror r3
   25238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2523c:	add	fp, sp, #28
   25240:	sub	sp, sp, #20
   25244:	mov	r8, r1
   25248:	sub	r1, r2, r1
   2524c:	cmp	r1, #8
   25250:	movcs	r1, #8
   25254:	and	r1, r1, #15
   25258:	sub	r1, r1, #1
   2525c:	cmp	r1, #7
   25260:	bhi	25468 <main@@Base+0xf228>
   25264:	str	r2, [sp, #16]
   25268:	str	r0, [sp, #12]
   2526c:	add	r4, pc, #40	; 0x28
   25270:	mov	lr, r3
   25274:	mov	sl, #0
   25278:	mov	ip, #0
   2527c:	mov	r5, #0
   25280:	mov	r2, #0
   25284:	mov	r3, #0
   25288:	mov	r7, #0
   2528c:	mov	r6, #0
   25290:	ldr	r0, [r4, r1, lsl #2]
   25294:	mov	r1, #0
   25298:	add	pc, r4, r0
   2529c:	andeq	r0, r0, r4, rrx
   252a0:	andeq	r0, r0, ip, asr r0
   252a4:	andeq	r0, r0, r4, asr r0
   252a8:	andeq	r0, r0, ip, asr #32
   252ac:	andeq	r0, r0, r0, asr #32
   252b0:	andeq	r0, r0, r4, lsr r0
   252b4:	andeq	r0, r0, r4, lsr #32
   252b8:	andeq	r0, r0, r0, lsr #32
   252bc:	ldrb	ip, [r8, #7]
   252c0:	ldrb	r0, [r8, #6]
   252c4:	mov	r5, sl
   252c8:	orr	r0, ip, r0, lsl #8
   252cc:	mov	sl, r0
   252d0:	ldrb	r0, [r8, #5]
   252d4:	mov	r1, r5
   252d8:	orr	sl, sl, r0, lsl #16
   252dc:	ldrb	r0, [r8, #4]
   252e0:	mov	r2, r1
   252e4:	orr	sl, sl, r0, lsl #24
   252e8:	ldrb	r0, [r8, #3]
   252ec:	orr	r3, r0, r2
   252f0:	ldrb	r0, [r8, #2]
   252f4:	orr	r7, r3, r0, lsl #8
   252f8:	ldrb	r0, [r8, #1]
   252fc:	orr	r6, r7, r0, lsl #16
   25300:	ldrb	r0, [r8]
   25304:	ldr	r5, [fp, #12]
   25308:	ldr	r7, [fp, #8]
   2530c:	movw	r1, #28275	; 0x6e73
   25310:	movt	r1, #19823	; 0x4d6f
   25314:	orr	r9, r6, r0, lsl #24
   25318:	movw	r0, #29184	; 0x7200
   2531c:	movt	r0, #29797	; 0x7465
   25320:	subs	r2, sl, r0
   25324:	sbcs	r2, r9, r1
   25328:	bcs	25370 <main@@Base+0xf130>
   2532c:	movw	r1, #29696	; 0x7400
   25330:	bic	r0, r9, #255	; 0xff
   25334:	movt	r1, #16748	; 0x416c
   25338:	teq	r0, r1
   2533c:	bne	25468 <main@@Base+0xf228>
   25340:	ldr	r0, [sp, #12]
   25344:	ldr	r2, [sp, #16]
   25348:	mov	r1, r8
   2534c:	mov	r3, #3
   25350:	mov	r4, lr
   25354:	str	r5, [sp]
   25358:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   2535c:	cmp	r0, r8
   25360:	beq	25468 <main@@Base+0xf228>
   25364:	mov	r1, #0
   25368:	mov	r2, #4
   2536c:	b	253b0 <main@@Base+0xf170>
   25370:	add	r2, r0, #50	; 0x32
   25374:	eor	r1, r9, r1
   25378:	eor	r2, sl, r2
   2537c:	orrs	r2, r2, r1
   25380:	bne	253c0 <main@@Base+0xf180>
   25384:	ldr	r0, [sp, #12]
   25388:	ldr	r2, [sp, #16]
   2538c:	mov	r1, r8
   25390:	mov	r3, #8
   25394:	mov	r4, lr
   25398:	str	r5, [sp]
   2539c:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   253a0:	cmp	r0, r8
   253a4:	beq	25468 <main@@Base+0xf228>
   253a8:	mov	r1, #0
   253ac:	mov	r2, #3
   253b0:	str	r2, [r7]
   253b4:	str	r1, [r7, #4]
   253b8:	str	r1, [r4]
   253bc:	b	25464 <main@@Base+0xf224>
   253c0:	ldr	r6, [sp, #16]
   253c4:	ldr	r7, [sp, #12]
   253c8:	bic	r2, sl, #255	; 0xff
   253cc:	eor	r0, r2, r0
   253d0:	orrs	r0, r0, r1
   253d4:	bne	25418 <main@@Base+0xf1d8>
   253d8:	mov	r0, r7
   253dc:	mov	r1, r8
   253e0:	mov	r2, r6
   253e4:	mov	r3, #7
   253e8:	str	r5, [sp]
   253ec:	mov	r4, lr
   253f0:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   253f4:	mov	lr, r4
   253f8:	cmp	r0, r8
   253fc:	beq	25418 <main@@Base+0xf1d8>
   25400:	ldr	r3, [fp, #8]
   25404:	mov	r2, #1
   25408:	mov	r1, #0
   2540c:	str	r2, [r3]
   25410:	str	r1, [r3, #4]
   25414:	b	25460 <main@@Base+0xf220>
   25418:	movw	r0, #20037	; 0x4e45
   2541c:	movt	r0, #20047	; 0x4e4f
   25420:	teq	r9, r0
   25424:	bne	25474 <main@@Base+0xf234>
   25428:	mov	r0, r7
   2542c:	mov	r1, r8
   25430:	mov	r2, r6
   25434:	mov	r3, #4
   25438:	str	r5, [sp]
   2543c:	mov	r4, lr
   25440:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   25444:	mov	lr, r4
   25448:	cmp	r0, r8
   2544c:	beq	25474 <main@@Base+0xf234>
   25450:	ldr	r2, [fp, #8]
   25454:	mov	r1, #0
   25458:	str	r1, [r2]
   2545c:	str	r1, [r2, #4]
   25460:	str	r1, [lr]
   25464:	mov	r8, r0
   25468:	mov	r0, r8
   2546c:	sub	sp, fp, #28
   25470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25474:	movw	r0, #28016	; 0x6d70
   25478:	movw	r1, #29556	; 0x7374
   2547c:	movt	r0, #21353	; 0x5369
   25480:	movt	r1, #21605	; 0x5465
   25484:	eor	r0, sl, r0
   25488:	eor	r1, r9, r1
   2548c:	orrs	r0, r0, r1
   25490:	bne	25468 <main@@Base+0xf228>
   25494:	str	lr, [sp, #8]
   25498:	add	lr, r8, #8
   2549c:	sub	r0, r6, lr
   254a0:	cmp	r0, #8
   254a4:	movcs	r0, #8
   254a8:	and	r0, r0, #15
   254ac:	sub	r0, r0, #1
   254b0:	cmp	r0, #7
   254b4:	bhi	25468 <main@@Base+0xf228>
   254b8:	add	r4, pc, #36	; 0x24
   254bc:	mov	sl, #0
   254c0:	mov	ip, #0
   254c4:	mov	r9, #0
   254c8:	mov	r3, #0
   254cc:	mov	r2, #0
   254d0:	mov	r6, #0
   254d4:	mov	r7, #0
   254d8:	ldr	r1, [r4, r0, lsl #2]
   254dc:	mov	r0, #0
   254e0:	add	pc, r4, r1
   254e4:	andeq	r0, r0, r4, rrx
   254e8:	andeq	r0, r0, ip, asr r0
   254ec:	andeq	r0, r0, r4, asr r0
   254f0:	andeq	r0, r0, ip, asr #32
   254f4:	andeq	r0, r0, r0, asr #32
   254f8:	andeq	r0, r0, r4, lsr r0
   254fc:	andeq	r0, r0, r4, lsr #32
   25500:	andeq	r0, r0, r0, lsr #32
   25504:	ldrb	ip, [r8, #15]
   25508:	ldrb	r0, [r8, #14]
   2550c:	mov	r9, sl
   25510:	orr	r0, ip, r0, lsl #8
   25514:	mov	sl, r0
   25518:	ldrb	r0, [r8, #13]
   2551c:	orr	sl, sl, r0, lsl #16
   25520:	mov	r0, r9
   25524:	ldrb	r1, [r8, #12]
   25528:	mov	r3, r0
   2552c:	orr	sl, sl, r1, lsl #24
   25530:	ldrb	r0, [r8, #11]
   25534:	orr	r2, r0, r3
   25538:	ldrb	r0, [r8, #10]
   2553c:	orr	r6, r2, r0, lsl #8
   25540:	ldrb	r0, [r8, #9]
   25544:	orr	r7, r6, r0, lsl #16
   25548:	ldrb	r1, [lr]
   2554c:	movw	r0, #25943	; 0x6557
   25550:	movw	r2, #21601	; 0x5461
   25554:	movt	r0, #25196	; 0x626c
   25558:	movt	r2, #27749	; 0x6c65
   2555c:	eor	r0, sl, r0
   25560:	orr	r1, r7, r1, lsl #24
   25564:	eor	r1, r1, r2
   25568:	orrs	r0, r0, r1
   2556c:	bne	25468 <main@@Base+0xf228>
   25570:	ldr	r0, [sp, #16]
   25574:	add	r9, r8, #16
   25578:	sub	r0, r0, r9
   2557c:	cmp	r0, #8
   25580:	movcs	r0, #8
   25584:	and	r0, r0, #15
   25588:	sub	r0, r0, #1
   2558c:	cmp	r0, #7
   25590:	bhi	25468 <main@@Base+0xf228>
   25594:	add	r4, pc, #32
   25598:	mov	lr, #0
   2559c:	mov	ip, #0
   255a0:	mov	r2, #0
   255a4:	mov	r3, #0
   255a8:	mov	r7, #0
   255ac:	mov	r6, #0
   255b0:	ldr	r1, [r4, r0, lsl #2]
   255b4:	mov	r0, #0
   255b8:	add	pc, r4, r1
   255bc:	andeq	r0, r0, ip, asr r0
   255c0:	andeq	r0, r0, r4, asr r0
   255c4:	andeq	r0, r0, ip, asr #32
   255c8:	andeq	r0, r0, r4, asr #32
   255cc:	andeq	r0, r0, r8, lsr r0
   255d0:	andeq	r0, r0, r8, lsr #32
   255d4:	andeq	r0, r0, r0, lsr #32
   255d8:	andeq	r0, r0, r0, lsr #32
   255dc:	ldrb	r0, [r8, #22]
   255e0:	lsl	ip, r0, #8
   255e4:	ldrb	r0, [r8, #21]
   255e8:	orr	r1, ip, r0, lsl #16
   255ec:	mov	r0, lr
   255f0:	mov	lr, r1
   255f4:	ldrb	r1, [r8, #20]
   255f8:	mov	r2, r0
   255fc:	orr	lr, lr, r1, lsl #24
   25600:	ldrb	r0, [r8, #19]
   25604:	orr	r3, r0, r2
   25608:	ldrb	r0, [r8, #18]
   2560c:	orr	r7, r3, r0, lsl #8
   25610:	ldrb	r0, [r8, #17]
   25614:	orr	r6, r7, r0, lsl #16
   25618:	ldrb	r1, [r9]
   2561c:	movw	r0, #27904	; 0x6d00
   25620:	movw	r2, #26693	; 0x6845
   25624:	movt	r0, #28277	; 0x6e75
   25628:	movt	r2, #26996	; 0x6974
   2562c:	eor	r0, lr, r0
   25630:	orr	r1, r6, r1, lsl #24
   25634:	eor	r1, r1, r2
   25638:	orrs	r0, r0, r1
   2563c:	bne	25468 <main@@Base+0xf228>
   25640:	ldr	r0, [sp, #12]
   25644:	ldr	r2, [sp, #16]
   25648:	mov	r1, r9
   2564c:	mov	r3, #7
   25650:	str	r5, [sp]
   25654:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   25658:	ldr	r3, [fp, #8]
   2565c:	cmp	r0, r9
   25660:	beq	25468 <main@@Base+0xf228>
   25664:	mov	r2, #2
   25668:	mov	r1, #0
   2566c:	str	r2, [r3]
   25670:	str	r1, [r3, #4]
   25674:	ldr	r2, [sp, #8]
   25678:	str	r1, [r2]
   2567c:	b	25464 <main@@Base+0xf224>
   25680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25684:	add	fp, sp, #28
   25688:	sub	sp, sp, #44	; 0x2c
   2568c:	mov	r7, r2
   25690:	ldr	r2, [fp, #8]
   25694:	mov	r5, r0
   25698:	mov	r0, #0
   2569c:	mov	r8, r3
   256a0:	cmp	r1, r7
   256a4:	strb	r0, [r2]
   256a8:	beq	256ec <main@@Base+0xf4ac>
   256ac:	ldrb	r0, [r1]
   256b0:	cmp	r0, #46	; 0x2e
   256b4:	beq	256cc <main@@Base+0xf48c>
   256b8:	cmp	r0, #34	; 0x22
   256bc:	bne	256e4 <main@@Base+0xf4a4>
   256c0:	mov	r0, #0
   256c4:	add	r1, r1, #1
   256c8:	b	256e8 <main@@Base+0xf4a8>
   256cc:	mov	r0, r5
   256d0:	mov	r2, r7
   256d4:	mov	r3, #5
   256d8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   256dc:	mov	r1, r0
   256e0:	b	256ec <main@@Base+0xf4ac>
   256e4:	mov	r0, #1
   256e8:	str	r0, [r5, #12]
   256ec:	ldr	r0, [r5, #12]
   256f0:	cmp	r0, #0
   256f4:	beq	25708 <main@@Base+0xf4c8>
   256f8:	mov	r6, r1
   256fc:	cmp	r6, r7
   25700:	bne	2574c <main@@Base+0xf50c>
   25704:	b	2582c <main@@Base+0xf5ec>
   25708:	sub	r0, r7, r1
   2570c:	cmp	r0, #2
   25710:	blt	25734 <main@@Base+0xf4f4>
   25714:	ldrb	r0, [r1]
   25718:	cmp	r0, #32
   2571c:	bhi	256f8 <main@@Base+0xf4b8>
   25720:	bne	25734 <main@@Base+0xf4f4>
   25724:	mov	r6, r1
   25728:	ldrb	r0, [r6, #1]!
   2572c:	cmp	r0, #32
   25730:	bhi	25744 <main@@Base+0xf504>
   25734:	mov	r0, r5
   25738:	mov	r2, r7
   2573c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   25740:	mov	r6, r0
   25744:	cmp	r6, r7
   25748:	beq	2582c <main@@Base+0xf5ec>
   2574c:	add	r0, r8, #4
   25750:	mov	r1, #0
   25754:	add	sl, sp, #32
   25758:	add	r9, sp, #28
   2575c:	str	r8, [sp, #16]
   25760:	str	r1, [sp, #20]
   25764:	str	r0, [sp, #12]
   25768:	ldr	r4, [r8]
   2576c:	mov	r8, r0
   25770:	add	r0, sp, #24
   25774:	mov	r1, r6
   25778:	mov	r2, r7
   2577c:	mov	r3, r9
   25780:	str	sl, [sp]
   25784:	str	r0, [sp, #4]
   25788:	mov	r0, r5
   2578c:	blx	r4
   25790:	cmp	r0, r7
   25794:	beq	2582c <main@@Base+0xf5ec>
   25798:	mov	r4, r0
   2579c:	cmp	r0, r6
   257a0:	bne	257b4 <main@@Base+0xf574>
   257a4:	ldr	r4, [r8], #4
   257a8:	cmp	r4, #0
   257ac:	bne	25770 <main@@Base+0xf530>
   257b0:	b	25834 <main@@Base+0xf5f4>
   257b4:	ldr	r0, [sp, #28]
   257b8:	cmp	r0, #0
   257bc:	beq	257d8 <main@@Base+0xf598>
   257c0:	mov	r0, r5
   257c4:	mov	r1, r4
   257c8:	mov	r2, r7
   257cc:	mov	r3, #8
   257d0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   257d4:	b	257f0 <main@@Base+0xf5b0>
   257d8:	ldr	r0, [sp, #32]
   257dc:	ldr	r1, [sp, #36]	; 0x24
   257e0:	orrs	r0, r0, r1
   257e4:	movwne	r0, #1
   257e8:	str	r0, [sp, #20]
   257ec:	mov	r0, r4
   257f0:	ldr	r8, [sp, #16]
   257f4:	cmp	r0, r7
   257f8:	beq	2582c <main@@Base+0xf5ec>
   257fc:	ldr	r0, [fp, #8]
   25800:	ldr	r2, [sp, #20]
   25804:	mov	r6, r4
   25808:	mov	r1, r0
   2580c:	ldrb	r0, [r0]
   25810:	add	r0, r0, r2
   25814:	strb	r0, [r1]
   25818:	ldr	r0, [sp, #24]
   2581c:	cmp	r0, #0
   25820:	ldr	r0, [sp, #12]
   25824:	bne	25768 <main@@Base+0xf528>
   25828:	b	2584c <main@@Base+0xf60c>
   2582c:	mov	r4, r7
   25830:	b	2584c <main@@Base+0xf60c>
   25834:	mov	r0, r5
   25838:	mov	r1, r6
   2583c:	mov	r2, r7
   25840:	mov	r3, #23
   25844:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25848:	mov	r4, r0
   2584c:	mov	r0, r4
   25850:	sub	sp, fp, #28
   25854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2585c:	add	fp, sp, #28
   25860:	sub	sp, sp, #36	; 0x24
   25864:	mov	r6, r2
   25868:	ldr	r2, [fp, #8]
   2586c:	mov	r5, r0
   25870:	mov	r0, #0
   25874:	mov	r8, r3
   25878:	cmp	r1, r6
   2587c:	str	r0, [r2]
   25880:	beq	258c4 <main@@Base+0xf684>
   25884:	ldrb	r0, [r1]
   25888:	cmp	r0, #46	; 0x2e
   2588c:	beq	258a4 <main@@Base+0xf664>
   25890:	cmp	r0, #34	; 0x22
   25894:	bne	258bc <main@@Base+0xf67c>
   25898:	mov	r0, #0
   2589c:	add	r1, r1, #1
   258a0:	b	258c0 <main@@Base+0xf680>
   258a4:	mov	r0, r5
   258a8:	mov	r2, r6
   258ac:	mov	r3, #5
   258b0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   258b4:	mov	r1, r0
   258b8:	b	258c4 <main@@Base+0xf684>
   258bc:	mov	r0, #1
   258c0:	str	r0, [r5, #12]
   258c4:	ldr	r0, [r5, #12]
   258c8:	cmp	r0, #0
   258cc:	beq	258e0 <main@@Base+0xf6a0>
   258d0:	mov	r7, r1
   258d4:	cmp	r7, r6
   258d8:	bne	25924 <main@@Base+0xf6e4>
   258dc:	b	259d0 <main@@Base+0xf790>
   258e0:	sub	r0, r6, r1
   258e4:	cmp	r0, #2
   258e8:	blt	2590c <main@@Base+0xf6cc>
   258ec:	ldrb	r0, [r1]
   258f0:	cmp	r0, #32
   258f4:	bhi	258d0 <main@@Base+0xf690>
   258f8:	bne	2590c <main@@Base+0xf6cc>
   258fc:	mov	r7, r1
   25900:	ldrb	r0, [r7, #1]!
   25904:	cmp	r0, #32
   25908:	bhi	2591c <main@@Base+0xf6dc>
   2590c:	mov	r0, r5
   25910:	mov	r2, r6
   25914:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   25918:	mov	r7, r0
   2591c:	cmp	r7, r6
   25920:	beq	259d0 <main@@Base+0xf790>
   25924:	add	r0, r8, #4
   25928:	add	sl, sp, #24
   2592c:	add	r9, sp, #20
   25930:	str	r8, [sp, #12]
   25934:	str	r0, [sp, #8]
   25938:	ldr	r4, [r8]
   2593c:	mov	r8, r0
   25940:	add	r0, sp, #16
   25944:	mov	r1, r7
   25948:	mov	r2, r6
   2594c:	mov	r3, r9
   25950:	str	sl, [sp]
   25954:	str	r0, [sp, #4]
   25958:	mov	r0, r5
   2595c:	blx	r4
   25960:	cmp	r0, r6
   25964:	beq	259d0 <main@@Base+0xf790>
   25968:	mov	r4, r0
   2596c:	cmp	r0, r7
   25970:	bne	25984 <main@@Base+0xf744>
   25974:	ldr	r4, [r8], #4
   25978:	cmp	r4, #0
   2597c:	bne	25940 <main@@Base+0xf700>
   25980:	b	259d8 <main@@Base+0xf798>
   25984:	ldr	r0, [sp, #24]
   25988:	ldr	r1, [sp, #28]
   2598c:	bl	4748c <flatcc_json_printer_clear@@Base+0x718>
   25990:	ldr	r2, [fp, #8]
   25994:	ldr	r1, [sp, #20]
   25998:	vmov	s2, r0
   2599c:	ldr	r8, [sp, #12]
   259a0:	mov	r7, r4
   259a4:	vneg.f32	s4, s2
   259a8:	vldr	s0, [r2]
   259ac:	cmp	r1, #0
   259b0:	vseleq.f32	s2, s2, s4
   259b4:	vadd.f32	s0, s0, s2
   259b8:	vstr	s0, [r2]
   259bc:	ldr	r0, [sp, #16]
   259c0:	cmp	r0, #0
   259c4:	ldr	r0, [sp, #8]
   259c8:	bne	25938 <main@@Base+0xf6f8>
   259cc:	b	259f0 <main@@Base+0xf7b0>
   259d0:	mov	r4, r6
   259d4:	b	259f0 <main@@Base+0xf7b0>
   259d8:	mov	r0, r5
   259dc:	mov	r1, r7
   259e0:	mov	r2, r6
   259e4:	mov	r3, #23
   259e8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   259ec:	mov	r4, r0
   259f0:	mov	r0, r4
   259f4:	sub	sp, fp, #28
   259f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   259fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25a00:	add	fp, sp, #28
   25a04:	sub	sp, sp, #44	; 0x2c
   25a08:	mov	r6, r2
   25a0c:	ldr	r2, [fp, #8]
   25a10:	mov	r5, r0
   25a14:	mov	r0, #0
   25a18:	mov	sl, r3
   25a1c:	cmp	r1, r6
   25a20:	str	r0, [r2]
   25a24:	beq	25a68 <main@@Base+0xf828>
   25a28:	ldrb	r0, [r1]
   25a2c:	cmp	r0, #46	; 0x2e
   25a30:	beq	25a48 <main@@Base+0xf808>
   25a34:	cmp	r0, #34	; 0x22
   25a38:	bne	25a60 <main@@Base+0xf820>
   25a3c:	mov	r0, #0
   25a40:	add	r1, r1, #1
   25a44:	b	25a64 <main@@Base+0xf824>
   25a48:	mov	r0, r5
   25a4c:	mov	r2, r6
   25a50:	mov	r3, #5
   25a54:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25a58:	mov	r1, r0
   25a5c:	b	25a68 <main@@Base+0xf828>
   25a60:	mov	r0, #1
   25a64:	str	r0, [r5, #12]
   25a68:	ldr	r0, [r5, #12]
   25a6c:	cmp	r0, #0
   25a70:	beq	25a84 <main@@Base+0xf844>
   25a74:	mov	r7, r1
   25a78:	cmp	r7, r6
   25a7c:	bne	25ac8 <main@@Base+0xf888>
   25a80:	b	25be0 <main@@Base+0xf9a0>
   25a84:	sub	r0, r6, r1
   25a88:	cmp	r0, #2
   25a8c:	blt	25ab0 <main@@Base+0xf870>
   25a90:	ldrb	r0, [r1]
   25a94:	cmp	r0, #32
   25a98:	bhi	25a74 <main@@Base+0xf834>
   25a9c:	bne	25ab0 <main@@Base+0xf870>
   25aa0:	mov	r7, r1
   25aa4:	ldrb	r0, [r7, #1]!
   25aa8:	cmp	r0, #32
   25aac:	bhi	25ac0 <main@@Base+0xf880>
   25ab0:	mov	r0, r5
   25ab4:	mov	r2, r6
   25ab8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   25abc:	mov	r7, r0
   25ac0:	cmp	r7, r6
   25ac4:	beq	25be0 <main@@Base+0xf9a0>
   25ac8:	add	r0, sl, #4
   25acc:	mov	r2, #0
   25ad0:	add	r8, sp, #32
   25ad4:	add	r9, sp, #28
   25ad8:	str	sl, [sp, #16]
   25adc:	str	r0, [sp, #12]
   25ae0:	ldr	r4, [sl]
   25ae4:	mov	sl, r0
   25ae8:	str	r2, [sp, #20]
   25aec:	add	r0, sp, #24
   25af0:	mov	r1, r7
   25af4:	mov	r2, r6
   25af8:	mov	r3, r9
   25afc:	str	r8, [sp]
   25b00:	str	r0, [sp, #4]
   25b04:	mov	r0, r5
   25b08:	blx	r4
   25b0c:	cmp	r0, r6
   25b10:	beq	25be0 <main@@Base+0xf9a0>
   25b14:	mov	r4, r0
   25b18:	cmp	r0, r7
   25b1c:	bne	25b30 <main@@Base+0xf8f0>
   25b20:	ldr	r4, [sl], #4
   25b24:	cmp	r4, #0
   25b28:	bne	25aec <main@@Base+0xf8ac>
   25b2c:	b	25be8 <main@@Base+0xf9a8>
   25b30:	ldr	r2, [sp, #28]
   25b34:	ldr	r0, [sp, #32]
   25b38:	ldr	r1, [sp, #36]	; 0x24
   25b3c:	cmp	r2, #0
   25b40:	beq	25b68 <main@@Base+0xf928>
   25b44:	ldr	sl, [sp, #16]
   25b48:	subs	r2, r0, #-2147483647	; 0x80000001
   25b4c:	sbcs	r1, r1, #0
   25b50:	bcc	25b9c <main@@Base+0xf95c>
   25b54:	mov	r0, r5
   25b58:	mov	r1, r4
   25b5c:	mov	r2, r6
   25b60:	mov	r3, #8
   25b64:	b	25b88 <main@@Base+0xf948>
   25b68:	ldr	sl, [sp, #16]
   25b6c:	subs	r2, r0, #-2147483648	; 0x80000000
   25b70:	sbcs	r1, r1, #0
   25b74:	bcc	25ba4 <main@@Base+0xf964>
   25b78:	mov	r0, r5
   25b7c:	mov	r1, r4
   25b80:	mov	r2, r6
   25b84:	mov	r3, #7
   25b88:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25b8c:	ldr	r2, [sp, #20]
   25b90:	cmp	r0, r6
   25b94:	bne	25bb4 <main@@Base+0xf974>
   25b98:	b	25be0 <main@@Base+0xf9a0>
   25b9c:	rsb	r2, r0, #0
   25ba0:	b	25ba8 <main@@Base+0xf968>
   25ba4:	mov	r2, r0
   25ba8:	mov	r0, r4
   25bac:	cmp	r0, r6
   25bb0:	beq	25be0 <main@@Base+0xf9a0>
   25bb4:	ldr	r0, [fp, #8]
   25bb8:	mov	r7, r4
   25bbc:	mov	r1, r0
   25bc0:	ldr	r0, [r0]
   25bc4:	add	r0, r0, r2
   25bc8:	str	r0, [r1]
   25bcc:	ldr	r0, [sp, #24]
   25bd0:	cmp	r0, #0
   25bd4:	ldr	r0, [sp, #12]
   25bd8:	bne	25ae0 <main@@Base+0xf8a0>
   25bdc:	b	25c00 <main@@Base+0xf9c0>
   25be0:	mov	r4, r6
   25be4:	b	25c00 <main@@Base+0xf9c0>
   25be8:	mov	r0, r5
   25bec:	mov	r1, r7
   25bf0:	mov	r2, r6
   25bf4:	mov	r3, #23
   25bf8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25bfc:	mov	r4, r0
   25c00:	mov	r0, r4
   25c04:	sub	sp, fp, #28
   25c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c10:	add	fp, sp, #28
   25c14:	sub	sp, sp, #44	; 0x2c
   25c18:	mov	r6, r2
   25c1c:	ldr	r2, [fp, #8]
   25c20:	mov	r5, r0
   25c24:	mov	r0, #0
   25c28:	mov	sl, r3
   25c2c:	cmp	r1, r6
   25c30:	str	r0, [r2]
   25c34:	str	r0, [r2, #4]
   25c38:	beq	25c7c <main@@Base+0xfa3c>
   25c3c:	ldrb	r0, [r1]
   25c40:	cmp	r0, #46	; 0x2e
   25c44:	beq	25c5c <main@@Base+0xfa1c>
   25c48:	cmp	r0, #34	; 0x22
   25c4c:	bne	25c74 <main@@Base+0xfa34>
   25c50:	mov	r0, #0
   25c54:	add	r1, r1, #1
   25c58:	b	25c78 <main@@Base+0xfa38>
   25c5c:	mov	r0, r5
   25c60:	mov	r2, r6
   25c64:	mov	r3, #5
   25c68:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25c6c:	mov	r1, r0
   25c70:	b	25c7c <main@@Base+0xfa3c>
   25c74:	mov	r0, #1
   25c78:	str	r0, [r5, #12]
   25c7c:	ldr	r0, [r5, #12]
   25c80:	cmp	r0, #0
   25c84:	beq	25c98 <main@@Base+0xfa58>
   25c88:	mov	r7, r1
   25c8c:	cmp	r7, r6
   25c90:	bne	25cdc <main@@Base+0xfa9c>
   25c94:	b	25dfc <main@@Base+0xfbbc>
   25c98:	sub	r0, r6, r1
   25c9c:	cmp	r0, #2
   25ca0:	blt	25cc4 <main@@Base+0xfa84>
   25ca4:	ldrb	r0, [r1]
   25ca8:	cmp	r0, #32
   25cac:	bhi	25c88 <main@@Base+0xfa48>
   25cb0:	bne	25cc4 <main@@Base+0xfa84>
   25cb4:	mov	r7, r1
   25cb8:	ldrb	r0, [r7, #1]!
   25cbc:	cmp	r0, #32
   25cc0:	bhi	25cd4 <main@@Base+0xfa94>
   25cc4:	mov	r0, r5
   25cc8:	mov	r2, r6
   25ccc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   25cd0:	mov	r7, r0
   25cd4:	cmp	r7, r6
   25cd8:	beq	25dfc <main@@Base+0xfbbc>
   25cdc:	add	r0, sl, #4
   25ce0:	mov	r1, #0
   25ce4:	add	r8, sp, #32
   25ce8:	add	r9, sp, #28
   25cec:	mov	r2, #0
   25cf0:	str	sl, [sp, #12]
   25cf4:	str	r0, [sp, #8]
   25cf8:	ldr	r4, [sl]
   25cfc:	mov	sl, r0
   25d00:	str	r2, [sp, #16]
   25d04:	str	r1, [sp, #20]
   25d08:	add	r0, sp, #24
   25d0c:	mov	r1, r7
   25d10:	mov	r2, r6
   25d14:	mov	r3, r9
   25d18:	str	r8, [sp]
   25d1c:	str	r0, [sp, #4]
   25d20:	mov	r0, r5
   25d24:	blx	r4
   25d28:	cmp	r0, r6
   25d2c:	beq	25dfc <main@@Base+0xfbbc>
   25d30:	mov	r4, r0
   25d34:	cmp	r0, r7
   25d38:	bne	25d4c <main@@Base+0xfb0c>
   25d3c:	ldr	r4, [sl], #4
   25d40:	cmp	r4, #0
   25d44:	bne	25d08 <main@@Base+0xfac8>
   25d48:	b	25e04 <main@@Base+0xfbc4>
   25d4c:	add	r2, sp, #28
   25d50:	ldm	r2, {r0, r1, r2}
   25d54:	cmp	r0, #0
   25d58:	beq	25d80 <main@@Base+0xfb40>
   25d5c:	ldr	sl, [sp, #12]
   25d60:	subs	r0, r1, #1
   25d64:	sbcs	r0, r2, #-2147483648	; 0x80000000
   25d68:	bcc	25db8 <main@@Base+0xfb78>
   25d6c:	mov	r0, r5
   25d70:	mov	r1, r4
   25d74:	mov	r2, r6
   25d78:	mov	r3, #8
   25d7c:	b	25da0 <main@@Base+0xfb60>
   25d80:	ldr	sl, [sp, #12]
   25d84:	cmn	r2, #1
   25d88:	mov	r0, r4
   25d8c:	bgt	25dac <main@@Base+0xfb6c>
   25d90:	mov	r0, r5
   25d94:	mov	r1, r4
   25d98:	mov	r2, r6
   25d9c:	mov	r3, #7
   25da0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25da4:	ldr	r1, [sp, #20]
   25da8:	ldr	r2, [sp, #16]
   25dac:	cmp	r0, r6
   25db0:	bne	25dcc <main@@Base+0xfb8c>
   25db4:	b	25dfc <main@@Base+0xfbbc>
   25db8:	rsbs	r1, r1, #0
   25dbc:	mov	r0, r4
   25dc0:	rsc	r2, r2, #0
   25dc4:	cmp	r0, r6
   25dc8:	beq	25dfc <main@@Base+0xfbbc>
   25dcc:	ldr	r0, [fp, #8]
   25dd0:	mov	r7, r0
   25dd4:	ldm	r0, {r0, r3}
   25dd8:	adds	r0, r0, r1
   25ddc:	adc	r3, r3, r2
   25de0:	stm	r7, {r0, r3}
   25de4:	mov	r7, r4
   25de8:	ldr	r0, [sp, #24]
   25dec:	cmp	r0, #0
   25df0:	ldr	r0, [sp, #8]
   25df4:	bne	25cf8 <main@@Base+0xfab8>
   25df8:	b	25e1c <main@@Base+0xfbdc>
   25dfc:	mov	r4, r6
   25e00:	b	25e1c <main@@Base+0xfbdc>
   25e04:	mov	r0, r5
   25e08:	mov	r1, r7
   25e0c:	mov	r2, r6
   25e10:	mov	r3, #23
   25e14:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25e18:	mov	r4, r0
   25e1c:	mov	r0, r4
   25e20:	sub	sp, fp, #28
   25e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25e2c:	add	fp, sp, #28
   25e30:	sub	sp, sp, #44	; 0x2c
   25e34:	mov	r6, r2
   25e38:	ldr	r2, [fp, #8]
   25e3c:	mov	r5, r0
   25e40:	mov	r0, #0
   25e44:	mov	r8, r3
   25e48:	cmp	r1, r6
   25e4c:	str	r0, [r2]
   25e50:	beq	25e94 <main@@Base+0xfc54>
   25e54:	ldrb	r0, [r1]
   25e58:	cmp	r0, #46	; 0x2e
   25e5c:	beq	25e74 <main@@Base+0xfc34>
   25e60:	cmp	r0, #34	; 0x22
   25e64:	bne	25e8c <main@@Base+0xfc4c>
   25e68:	mov	r0, #0
   25e6c:	add	r1, r1, #1
   25e70:	b	25e90 <main@@Base+0xfc50>
   25e74:	mov	r0, r5
   25e78:	mov	r2, r6
   25e7c:	mov	r3, #5
   25e80:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25e84:	mov	r1, r0
   25e88:	b	25e94 <main@@Base+0xfc54>
   25e8c:	mov	r0, #1
   25e90:	str	r0, [r5, #12]
   25e94:	ldr	r0, [r5, #12]
   25e98:	cmp	r0, #0
   25e9c:	beq	25eb0 <main@@Base+0xfc70>
   25ea0:	mov	r7, r1
   25ea4:	cmp	r7, r6
   25ea8:	bne	25ef4 <main@@Base+0xfcb4>
   25eac:	b	26000 <main@@Base+0xfdc0>
   25eb0:	sub	r0, r6, r1
   25eb4:	cmp	r0, #2
   25eb8:	blt	25edc <main@@Base+0xfc9c>
   25ebc:	ldrb	r0, [r1]
   25ec0:	cmp	r0, #32
   25ec4:	bhi	25ea0 <main@@Base+0xfc60>
   25ec8:	bne	25edc <main@@Base+0xfc9c>
   25ecc:	mov	r7, r1
   25ed0:	ldrb	r0, [r7, #1]!
   25ed4:	cmp	r0, #32
   25ed8:	bhi	25eec <main@@Base+0xfcac>
   25edc:	mov	r0, r5
   25ee0:	mov	r2, r6
   25ee4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   25ee8:	mov	r7, r0
   25eec:	cmp	r7, r6
   25ef0:	beq	26000 <main@@Base+0xfdc0>
   25ef4:	add	r0, r8, #4
   25ef8:	mov	r1, #0
   25efc:	add	sl, sp, #32
   25f00:	add	r9, sp, #28
   25f04:	str	r8, [sp, #16]
   25f08:	str	r1, [sp, #20]
   25f0c:	str	r0, [sp, #12]
   25f10:	ldr	r4, [r8]
   25f14:	mov	r8, r0
   25f18:	add	r0, sp, #24
   25f1c:	mov	r1, r7
   25f20:	mov	r2, r6
   25f24:	mov	r3, r9
   25f28:	str	sl, [sp]
   25f2c:	str	r0, [sp, #4]
   25f30:	mov	r0, r5
   25f34:	blx	r4
   25f38:	cmp	r0, r6
   25f3c:	beq	26000 <main@@Base+0xfdc0>
   25f40:	mov	r4, r0
   25f44:	cmp	r0, r7
   25f48:	bne	25f5c <main@@Base+0xfd1c>
   25f4c:	ldr	r4, [r8], #4
   25f50:	cmp	r4, #0
   25f54:	bne	25f18 <main@@Base+0xfcd8>
   25f58:	b	26008 <main@@Base+0xfdc8>
   25f5c:	ldr	r0, [sp, #28]
   25f60:	cmp	r0, #0
   25f64:	beq	25f8c <main@@Base+0xfd4c>
   25f68:	mov	r0, r5
   25f6c:	mov	r1, r4
   25f70:	mov	r2, r6
   25f74:	mov	r3, #8
   25f78:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25f7c:	ldr	r8, [sp, #16]
   25f80:	cmp	r0, r6
   25f84:	bne	25fd0 <main@@Base+0xfd90>
   25f88:	b	26000 <main@@Base+0xfdc0>
   25f8c:	ldr	r0, [sp, #36]	; 0x24
   25f90:	ldr	r8, [sp, #16]
   25f94:	cmp	r0, #0
   25f98:	beq	25fbc <main@@Base+0xfd7c>
   25f9c:	mov	r0, r5
   25fa0:	mov	r1, r4
   25fa4:	mov	r2, r6
   25fa8:	mov	r3, #7
   25fac:	bl	36078 <flatcc_json_parser_set_error@@Base>
   25fb0:	cmp	r0, r6
   25fb4:	bne	25fd0 <main@@Base+0xfd90>
   25fb8:	b	26000 <main@@Base+0xfdc0>
   25fbc:	ldr	r0, [sp, #32]
   25fc0:	str	r0, [sp, #20]
   25fc4:	mov	r0, r4
   25fc8:	cmp	r0, r6
   25fcc:	beq	26000 <main@@Base+0xfdc0>
   25fd0:	ldr	r0, [fp, #8]
   25fd4:	ldr	r2, [sp, #20]
   25fd8:	mov	r7, r4
   25fdc:	mov	r1, r0
   25fe0:	ldr	r0, [r0]
   25fe4:	add	r0, r0, r2
   25fe8:	str	r0, [r1]
   25fec:	ldr	r0, [sp, #24]
   25ff0:	cmp	r0, #0
   25ff4:	ldr	r0, [sp, #12]
   25ff8:	bne	25f10 <main@@Base+0xfcd0>
   25ffc:	b	26020 <main@@Base+0xfde0>
   26000:	mov	r4, r6
   26004:	b	26020 <main@@Base+0xfde0>
   26008:	mov	r0, r5
   2600c:	mov	r1, r7
   26010:	mov	r2, r6
   26014:	mov	r3, #23
   26018:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2601c:	mov	r4, r0
   26020:	mov	r0, r4
   26024:	sub	sp, fp, #28
   26028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2602c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26030:	add	fp, sp, #28
   26034:	sub	sp, sp, #44	; 0x2c
   26038:	mov	r7, r2
   2603c:	ldr	r2, [fp, #8]
   26040:	mov	r5, r0
   26044:	mov	r0, #0
   26048:	mov	r8, r3
   2604c:	cmp	r1, r7
   26050:	str	r0, [r2]
   26054:	str	r0, [r2, #4]
   26058:	beq	2609c <main@@Base+0xfe5c>
   2605c:	ldrb	r0, [r1]
   26060:	cmp	r0, #46	; 0x2e
   26064:	beq	2607c <main@@Base+0xfe3c>
   26068:	cmp	r0, #34	; 0x22
   2606c:	bne	26094 <main@@Base+0xfe54>
   26070:	mov	r0, #0
   26074:	add	r1, r1, #1
   26078:	b	26098 <main@@Base+0xfe58>
   2607c:	mov	r0, r5
   26080:	mov	r2, r7
   26084:	mov	r3, #5
   26088:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2608c:	mov	r1, r0
   26090:	b	2609c <main@@Base+0xfe5c>
   26094:	mov	r0, #1
   26098:	str	r0, [r5, #12]
   2609c:	ldr	r0, [r5, #12]
   260a0:	cmp	r0, #0
   260a4:	beq	260b8 <main@@Base+0xfe78>
   260a8:	mov	r6, r1
   260ac:	cmp	r6, r7
   260b0:	bne	260fc <main@@Base+0xfebc>
   260b4:	b	261e8 <main@@Base+0xffa8>
   260b8:	sub	r0, r7, r1
   260bc:	cmp	r0, #2
   260c0:	blt	260e4 <main@@Base+0xfea4>
   260c4:	ldrb	r0, [r1]
   260c8:	cmp	r0, #32
   260cc:	bhi	260a8 <main@@Base+0xfe68>
   260d0:	bne	260e4 <main@@Base+0xfea4>
   260d4:	mov	r6, r1
   260d8:	ldrb	r0, [r6, #1]!
   260dc:	cmp	r0, #32
   260e0:	bhi	260f4 <main@@Base+0xfeb4>
   260e4:	mov	r0, r5
   260e8:	mov	r2, r7
   260ec:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   260f0:	mov	r6, r0
   260f4:	cmp	r6, r7
   260f8:	beq	261e8 <main@@Base+0xffa8>
   260fc:	mov	r1, #0
   26100:	add	r0, r8, #4
   26104:	add	sl, sp, #32
   26108:	add	r9, sp, #28
   2610c:	str	r8, [sp, #12]
   26110:	str	r1, [sp, #20]
   26114:	mov	r1, #0
   26118:	str	r0, [sp, #8]
   2611c:	str	r1, [sp, #16]
   26120:	ldr	r4, [r8]
   26124:	mov	r8, r0
   26128:	add	r0, sp, #24
   2612c:	mov	r1, r6
   26130:	mov	r2, r7
   26134:	mov	r3, r9
   26138:	str	sl, [sp]
   2613c:	str	r0, [sp, #4]
   26140:	mov	r0, r5
   26144:	blx	r4
   26148:	cmp	r0, r7
   2614c:	beq	261e8 <main@@Base+0xffa8>
   26150:	mov	r4, r0
   26154:	cmp	r0, r6
   26158:	bne	2616c <main@@Base+0xff2c>
   2615c:	ldr	r4, [r8], #4
   26160:	cmp	r4, #0
   26164:	bne	26128 <main@@Base+0xfee8>
   26168:	b	261f0 <main@@Base+0xffb0>
   2616c:	ldr	r0, [sp, #28]
   26170:	cmp	r0, #0
   26174:	beq	26190 <main@@Base+0xff50>
   26178:	mov	r0, r5
   2617c:	mov	r1, r4
   26180:	mov	r2, r7
   26184:	mov	r3, #8
   26188:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2618c:	b	261a4 <main@@Base+0xff64>
   26190:	ldr	r0, [sp, #32]
   26194:	str	r0, [sp, #20]
   26198:	ldr	r0, [sp, #36]	; 0x24
   2619c:	str	r0, [sp, #16]
   261a0:	mov	r0, r4
   261a4:	ldr	r8, [sp, #12]
   261a8:	cmp	r0, r7
   261ac:	beq	261e8 <main@@Base+0xffa8>
   261b0:	ldr	r0, [fp, #8]
   261b4:	ldr	r3, [sp, #20]
   261b8:	mov	r6, r4
   261bc:	mov	r2, r0
   261c0:	ldrd	r0, [r0]
   261c4:	adds	r0, r0, r3
   261c8:	ldr	r3, [sp, #16]
   261cc:	adc	r1, r1, r3
   261d0:	strd	r0, [r2]
   261d4:	ldr	r0, [sp, #24]
   261d8:	cmp	r0, #0
   261dc:	ldr	r0, [sp, #8]
   261e0:	bne	26120 <main@@Base+0xfee0>
   261e4:	b	26208 <main@@Base+0xffc8>
   261e8:	mov	r4, r7
   261ec:	b	26208 <main@@Base+0xffc8>
   261f0:	mov	r0, r5
   261f4:	mov	r1, r6
   261f8:	mov	r2, r7
   261fc:	mov	r3, #23
   26200:	bl	36078 <flatcc_json_parser_set_error@@Base>
   26204:	mov	r4, r0
   26208:	mov	r0, r4
   2620c:	sub	sp, fp, #28
   26210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26218:	add	fp, sp, #28
   2621c:	sub	sp, sp, #36	; 0x24
   26220:	mov	r6, r2
   26224:	ldr	r2, [fp, #8]
   26228:	mov	r5, r0
   2622c:	mov	r0, #0
   26230:	mov	r8, r3
   26234:	cmp	r1, r6
   26238:	str	r0, [r2]
   2623c:	str	r0, [r2, #4]
   26240:	beq	26284 <main@@Base+0x10044>
   26244:	ldrb	r0, [r1]
   26248:	cmp	r0, #46	; 0x2e
   2624c:	beq	26264 <main@@Base+0x10024>
   26250:	cmp	r0, #34	; 0x22
   26254:	bne	2627c <main@@Base+0x1003c>
   26258:	mov	r0, #0
   2625c:	add	r1, r1, #1
   26260:	b	26280 <main@@Base+0x10040>
   26264:	mov	r0, r5
   26268:	mov	r2, r6
   2626c:	mov	r3, #5
   26270:	bl	36078 <flatcc_json_parser_set_error@@Base>
   26274:	mov	r1, r0
   26278:	b	26284 <main@@Base+0x10044>
   2627c:	mov	r0, #1
   26280:	str	r0, [r5, #12]
   26284:	ldr	r0, [r5, #12]
   26288:	cmp	r0, #0
   2628c:	beq	262a0 <main@@Base+0x10060>
   26290:	mov	r7, r1
   26294:	cmp	r7, r6
   26298:	bne	262e4 <main@@Base+0x100a4>
   2629c:	b	26398 <main@@Base+0x10158>
   262a0:	sub	r0, r6, r1
   262a4:	cmp	r0, #2
   262a8:	blt	262cc <main@@Base+0x1008c>
   262ac:	ldrb	r0, [r1]
   262b0:	cmp	r0, #32
   262b4:	bhi	26290 <main@@Base+0x10050>
   262b8:	bne	262cc <main@@Base+0x1008c>
   262bc:	mov	r7, r1
   262c0:	ldrb	r0, [r7, #1]!
   262c4:	cmp	r0, #32
   262c8:	bhi	262dc <main@@Base+0x1009c>
   262cc:	mov	r0, r5
   262d0:	mov	r2, r6
   262d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   262d8:	mov	r7, r0
   262dc:	cmp	r7, r6
   262e0:	beq	26398 <main@@Base+0x10158>
   262e4:	add	r0, r8, #4
   262e8:	add	sl, sp, #24
   262ec:	add	r9, sp, #20
   262f0:	str	r8, [sp, #12]
   262f4:	str	r0, [sp, #8]
   262f8:	ldr	r4, [r8]
   262fc:	mov	r8, r0
   26300:	add	r0, sp, #16
   26304:	mov	r1, r7
   26308:	mov	r2, r6
   2630c:	mov	r3, r9
   26310:	str	sl, [sp]
   26314:	str	r0, [sp, #4]
   26318:	mov	r0, r5
   2631c:	blx	r4
   26320:	cmp	r0, r6
   26324:	beq	26398 <main@@Base+0x10158>
   26328:	mov	r4, r0
   2632c:	cmp	r0, r7
   26330:	bne	26344 <main@@Base+0x10104>
   26334:	ldr	r4, [r8], #4
   26338:	cmp	r4, #0
   2633c:	bne	26300 <main@@Base+0x100c0>
   26340:	b	263a0 <main@@Base+0x10160>
   26344:	ldr	r0, [sp, #24]
   26348:	ldr	r1, [sp, #28]
   2634c:	bl	47254 <flatcc_json_printer_clear@@Base+0x4e0>
   26350:	ldr	r2, [fp, #8]
   26354:	ldr	r3, [sp, #20]
   26358:	vmov	d17, r0, r1
   2635c:	ldr	r8, [sp, #12]
   26360:	vldr	d16, [r2]
   26364:	mov	r7, r2
   26368:	eor	r2, r1, #-2147483648	; 0x80000000
   2636c:	cmp	r3, #0
   26370:	vmov	d18, r0, r2
   26374:	vseleq.f64	d17, d17, d18
   26378:	vadd.f64	d16, d16, d17
   2637c:	vstr	d16, [r7]
   26380:	mov	r7, r4
   26384:	ldr	r0, [sp, #16]
   26388:	cmp	r0, #0
   2638c:	ldr	r0, [sp, #8]
   26390:	bne	262f8 <main@@Base+0x100b8>
   26394:	b	263b8 <main@@Base+0x10178>
   26398:	mov	r4, r6
   2639c:	b	263b8 <main@@Base+0x10178>
   263a0:	mov	r0, r5
   263a4:	mov	r1, r7
   263a8:	mov	r2, r6
   263ac:	mov	r3, #23
   263b0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   263b4:	mov	r4, r0
   263b8:	mov	r0, r4
   263bc:	sub	sp, fp, #28
   263c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   263c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   263c8:	add	fp, sp, #28
   263cc:	sub	sp, sp, #12
   263d0:	mov	sl, r1
   263d4:	sub	r1, r2, r1
   263d8:	cmp	r1, #8
   263dc:	movcs	r1, #8
   263e0:	and	r1, r1, #15
   263e4:	sub	r1, r1, #1
   263e8:	cmp	r1, #7
   263ec:	bhi	26630 <main@@Base+0x103f0>
   263f0:	str	r3, [sp, #8]
   263f4:	add	r3, pc, #36	; 0x24
   263f8:	mov	r8, #0
   263fc:	mov	ip, #0
   26400:	mov	lr, #0
   26404:	mov	r5, #0
   26408:	mov	r6, #0
   2640c:	mov	r7, #0
   26410:	mov	r4, #0
   26414:	ldr	r9, [r3, r1, lsl #2]
   26418:	mov	r1, #0
   2641c:	add	pc, r3, r9
   26420:	andeq	r0, r0, r4, rrx
   26424:	andeq	r0, r0, ip, asr r0
   26428:	andeq	r0, r0, r4, asr r0
   2642c:	andeq	r0, r0, ip, asr #32
   26430:	andeq	r0, r0, r0, asr #32
   26434:	andeq	r0, r0, r4, lsr r0
   26438:	andeq	r0, r0, r4, lsr #32
   2643c:	andeq	r0, r0, r0, lsr #32
   26440:	ldrb	ip, [sl, #7]
   26444:	ldrb	r1, [sl, #6]
   26448:	mov	lr, r8
   2644c:	orr	r1, ip, r1, lsl #8
   26450:	mov	r8, r1
   26454:	ldrb	r1, [sl, #5]
   26458:	mov	r5, lr
   2645c:	orr	r8, r8, r1, lsl #16
   26460:	ldrb	r1, [sl, #4]
   26464:	mov	r6, r5
   26468:	orr	r8, r8, r1, lsl #24
   2646c:	ldrb	r1, [sl, #3]
   26470:	orr	r7, r1, r6
   26474:	ldrb	r1, [sl, #2]
   26478:	orr	r4, r7, r1, lsl #8
   2647c:	ldrb	r1, [sl, #1]
   26480:	orr	r1, r4, r1, lsl #16
   26484:	ldrb	r7, [sl]
   26488:	movw	r3, #28276	; 0x6e74
   2648c:	ldr	r6, [fp, #12]
   26490:	movt	r3, #29285	; 0x7265
   26494:	eor	r3, r8, r3
   26498:	orr	r1, r1, r7, lsl #24
   2649c:	movw	r7, #20577	; 0x5061
   264a0:	movt	r7, #18798	; 0x496e
   264a4:	eor	r7, r1, r7
   264a8:	orrs	r3, r3, r7
   264ac:	bne	265e4 <main@@Base+0x103a4>
   264b0:	add	r8, sl, #8
   264b4:	sub	r1, r2, r8
   264b8:	cmp	r1, #8
   264bc:	movcs	r1, #8
   264c0:	and	r1, r1, #15
   264c4:	sub	r1, r1, #1
   264c8:	cmp	r1, #7
   264cc:	bhi	26630 <main@@Base+0x103f0>
   264d0:	str	r0, [sp, #4]
   264d4:	add	r3, pc, #36	; 0x24
   264d8:	mov	r6, #0
   264dc:	mov	r0, #0
   264e0:	mov	r9, #0
   264e4:	mov	r7, #0
   264e8:	mov	r5, #0
   264ec:	mov	r4, #0
   264f0:	mov	ip, #0
   264f4:	ldr	lr, [r3, r1, lsl #2]
   264f8:	mov	r1, #0
   264fc:	add	pc, r3, lr
   26500:	andeq	r0, r0, r4, rrx
   26504:	andeq	r0, r0, ip, asr r0
   26508:	andeq	r0, r0, r4, asr r0
   2650c:	andeq	r0, r0, ip, asr #32
   26510:	andeq	r0, r0, r0, asr #32
   26514:	andeq	r0, r0, r4, lsr r0
   26518:	andeq	r0, r0, r4, lsr #32
   2651c:	andeq	r0, r0, r0, lsr #32
   26520:	ldrb	r0, [sl, #15]
   26524:	ldrb	r1, [sl, #14]
   26528:	mov	r9, r6
   2652c:	orr	r0, r0, r1, lsl #8
   26530:	mov	r6, r0
   26534:	ldrb	r0, [sl, #13]
   26538:	mov	r7, r9
   2653c:	orr	r6, r6, r0, lsl #16
   26540:	ldrb	r0, [sl, #12]
   26544:	mov	r5, r7
   26548:	orr	r6, r6, r0, lsl #24
   2654c:	ldrb	r0, [sl, #11]
   26550:	orr	r1, r0, r5
   26554:	ldrb	r0, [sl, #10]
   26558:	orr	r4, r1, r0, lsl #8
   2655c:	ldrb	r0, [sl, #9]
   26560:	orr	ip, r4, r0, lsl #16
   26564:	ldrb	r1, [r8]
   26568:	movw	r0, #24931	; 0x6163
   2656c:	movw	r3, #28005	; 0x6d65
   26570:	movt	r0, #29552	; 0x7370
   26574:	movt	r3, #20065	; 0x4e61
   26578:	eor	r0, r6, r0
   2657c:	orr	r1, ip, r1, lsl #24
   26580:	eor	r1, r1, r3
   26584:	orrs	r0, r0, r1
   26588:	bne	26630 <main@@Base+0x103f0>
   2658c:	add	r6, sl, #16
   26590:	mov	r1, #-268435456	; 0xf0000000
   26594:	sub	r0, r2, r6
   26598:	cmp	r0, #8
   2659c:	movcs	r0, #8
   265a0:	add	r0, r1, r0, lsl #28
   265a4:	asr	r0, r0, #28
   265a8:	cmp	r0, #0
   265ac:	blt	26630 <main@@Base+0x103f0>
   265b0:	ldrb	r0, [r6]
   265b4:	cmp	r0, #101	; 0x65
   265b8:	bne	26630 <main@@Base+0x103f0>
   265bc:	ldr	r0, [fp, #12]
   265c0:	mov	r1, r6
   265c4:	mov	r3, #1
   265c8:	mov	r8, #1
   265cc:	str	r0, [sp]
   265d0:	ldr	r0, [sp, #4]
   265d4:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   265d8:	cmp	r0, r6
   265dc:	bne	26610 <main@@Base+0x103d0>
   265e0:	b	26630 <main@@Base+0x103f0>
   265e4:	movw	r3, #20037	; 0x4e45
   265e8:	movt	r3, #20047	; 0x4e4f
   265ec:	teq	r1, r3
   265f0:	bne	26630 <main@@Base+0x103f0>
   265f4:	mov	r1, sl
   265f8:	mov	r3, #4
   265fc:	str	r6, [sp]
   26600:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26604:	cmp	r0, sl
   26608:	beq	26630 <main@@Base+0x103f0>
   2660c:	mov	r8, #0
   26610:	mov	sl, r0
   26614:	ldr	r0, [fp, #8]
   26618:	mov	r1, #0
   2661c:	str	r8, [r0]
   26620:	str	r1, [r0, #4]
   26624:	mov	r0, #0
   26628:	ldr	r1, [sp, #8]
   2662c:	str	r0, [r1]
   26630:	mov	r0, sl
   26634:	sub	sp, fp, #28
   26638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2663c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26640:	add	fp, sp, #28
   26644:	sub	sp, sp, #12
   26648:	mov	r5, r1
   2664c:	sub	r1, r2, r1
   26650:	cmp	r1, #8
   26654:	movcs	r1, #8
   26658:	and	r1, r1, #15
   2665c:	sub	r1, r1, #1
   26660:	cmp	r1, #7
   26664:	bhi	267e4 <main@@Base+0x105a4>
   26668:	str	r3, [sp, #8]
   2666c:	add	r6, pc, #36	; 0x24
   26670:	mov	lr, #0
   26674:	mov	ip, #0
   26678:	mov	r9, #0
   2667c:	mov	sl, #0
   26680:	mov	r4, #0
   26684:	mov	r3, #0
   26688:	mov	r7, #0
   2668c:	ldr	r8, [r6, r1, lsl #2]
   26690:	mov	r1, #0
   26694:	add	pc, r6, r8
   26698:	andeq	r0, r0, r4, rrx
   2669c:	andeq	r0, r0, ip, asr r0
   266a0:	andeq	r0, r0, r4, asr r0
   266a4:	andeq	r0, r0, ip, asr #32
   266a8:	andeq	r0, r0, r0, asr #32
   266ac:	andeq	r0, r0, r4, lsr r0
   266b0:	andeq	r0, r0, r4, lsr #32
   266b4:	andeq	r0, r0, r0, lsr #32
   266b8:	ldrb	ip, [r5, #7]
   266bc:	ldrb	r1, [r5, #6]
   266c0:	mov	r9, lr
   266c4:	orr	r1, ip, r1, lsl #8
   266c8:	mov	lr, r1
   266cc:	ldrb	r1, [r5, #5]
   266d0:	mov	sl, r9
   266d4:	orr	lr, lr, r1, lsl #16
   266d8:	ldrb	r1, [r5, #4]
   266dc:	orr	lr, lr, r1, lsl #24
   266e0:	mov	r1, sl
   266e4:	ldrb	r3, [r5, #3]
   266e8:	orr	r4, r3, r1
   266ec:	ldrb	r1, [r5, #2]
   266f0:	orr	r3, r4, r1, lsl #8
   266f4:	ldrb	r1, [r5, #1]
   266f8:	orr	r7, r3, r1, lsl #16
   266fc:	ldrb	r1, [r5]
   26700:	ldr	r3, [fp, #12]
   26704:	ldr	r8, [fp, #8]
   26708:	orr	r1, r7, r1, lsl #24
   2670c:	movw	r7, #30769	; 0x7831
   26710:	movt	r7, #26725	; 0x6865
   26714:	cmp	r1, r7
   26718:	bhi	26748 <main@@Base+0x10508>
   2671c:	teq	r1, r7
   26720:	bne	267e4 <main@@Base+0x105a4>
   26724:	str	r3, [sp]
   26728:	mov	r1, r5
   2672c:	mov	r3, #4
   26730:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26734:	cmp	r0, r5
   26738:	beq	267e4 <main@@Base+0x105a4>
   2673c:	mov	r1, #0
   26740:	mov	r2, #3
   26744:	b	267d0 <main@@Base+0x10590>
   26748:	lsr	r4, lr, #16
   2674c:	movw	r6, #25959	; 0x6567
   26750:	movw	r7, #26725	; 0x6865
   26754:	orr	r4, r4, r1, lsl #16
   26758:	movt	r6, #30830	; 0x786e
   2675c:	eor	r7, r7, r1, lsr #16
   26760:	eor	r6, r4, r6
   26764:	orrs	r7, r6, r7
   26768:	bne	2679c <main@@Base+0x1055c>
   2676c:	str	r3, [sp]
   26770:	mov	r1, r5
   26774:	mov	r3, #6
   26778:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   2677c:	cmp	r0, r5
   26780:	beq	267e4 <main@@Base+0x105a4>
   26784:	mvn	r2, #1
   26788:	mvn	r1, #0
   2678c:	str	r2, [r8]
   26790:	str	r1, [r8, #4]
   26794:	mov	r1, #1
   26798:	b	267d8 <main@@Base+0x10598>
   2679c:	movw	r7, #30770	; 0x7832
   267a0:	movt	r7, #26725	; 0x6865
   267a4:	teq	r1, r7
   267a8:	bne	267e4 <main@@Base+0x105a4>
   267ac:	str	r3, [sp]
   267b0:	mov	r1, r5
   267b4:	mov	r3, #4
   267b8:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   267bc:	cmp	r0, r5
   267c0:	beq	267e4 <main@@Base+0x105a4>
   267c4:	movw	r2, #48815	; 0xbeaf
   267c8:	mov	r1, #0
   267cc:	movt	r2, #32431	; 0x7eaf
   267d0:	str	r2, [r8]
   267d4:	str	r1, [r8, #4]
   267d8:	ldr	r2, [sp, #8]
   267dc:	mov	r5, r0
   267e0:	str	r1, [r2]
   267e4:	mov	r0, r5
   267e8:	sub	sp, fp, #28
   267ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   267f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   267f4:	add	fp, sp, #28
   267f8:	sub	sp, sp, #12
   267fc:	mov	r8, r1
   26800:	sub	r1, r2, r1
   26804:	cmp	r1, #8
   26808:	movcs	r1, #8
   2680c:	and	r1, r1, #15
   26810:	sub	r1, r1, #1
   26814:	cmp	r1, #7
   26818:	bhi	269dc <main@@Base+0x1079c>
   2681c:	str	r3, [sp, #8]
   26820:	add	r5, pc, #36	; 0x24
   26824:	mov	sl, #0
   26828:	mov	ip, #0
   2682c:	mov	lr, #0
   26830:	mov	r4, #0
   26834:	mov	r6, #0
   26838:	mov	r7, #0
   2683c:	mov	r3, #0
   26840:	ldr	r9, [r5, r1, lsl #2]
   26844:	mov	r1, #0
   26848:	add	pc, r5, r9
   2684c:	andeq	r0, r0, r4, rrx
   26850:	andeq	r0, r0, ip, asr r0
   26854:	andeq	r0, r0, r4, asr r0
   26858:	andeq	r0, r0, ip, asr #32
   2685c:	andeq	r0, r0, r0, asr #32
   26860:	andeq	r0, r0, r4, lsr r0
   26864:	andeq	r0, r0, r4, lsr #32
   26868:	andeq	r0, r0, r0, lsr #32
   2686c:	ldrb	ip, [r8, #7]
   26870:	ldrb	r1, [r8, #6]
   26874:	mov	lr, sl
   26878:	orr	r1, ip, r1, lsl #8
   2687c:	mov	sl, r1
   26880:	ldrb	r1, [r8, #5]
   26884:	mov	r4, lr
   26888:	orr	sl, sl, r1, lsl #16
   2688c:	ldrb	r1, [r8, #4]
   26890:	mov	r6, r4
   26894:	orr	sl, sl, r1, lsl #24
   26898:	ldrb	r1, [r8, #3]
   2689c:	orr	r7, r1, r6
   268a0:	ldrb	r1, [r8, #2]
   268a4:	orr	r3, r7, r1, lsl #8
   268a8:	ldrb	r1, [r8, #1]
   268ac:	orr	r1, r3, r1, lsl #16
   268b0:	ldrb	r7, [r8]
   268b4:	ldr	r3, [fp, #12]
   268b8:	ldr	r5, [fp, #8]
   268bc:	orr	r4, r1, r7, lsl #24
   268c0:	movw	r1, #29745	; 0x7431
   268c4:	movt	r1, #26990	; 0x696e
   268c8:	cmp	r4, r1
   268cc:	bhi	268fc <main@@Base+0x106bc>
   268d0:	teq	r4, r1
   268d4:	bne	269dc <main@@Base+0x1079c>
   268d8:	str	r3, [sp]
   268dc:	mov	r1, r8
   268e0:	mov	r3, #4
   268e4:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   268e8:	cmp	r0, r8
   268ec:	beq	269dc <main@@Base+0x1079c>
   268f0:	mov	r1, #0
   268f4:	mov	r2, #2
   268f8:	b	26948 <main@@Base+0x10708>
   268fc:	movw	r6, #0
   26900:	movw	r1, #29806	; 0x746e
   26904:	movt	r6, #25959	; 0x6567
   26908:	movt	r1, #26990	; 0x696e
   2690c:	subs	r7, sl, r6
   26910:	sbcs	r7, r4, r1
   26914:	bcs	26954 <main@@Base+0x10714>
   26918:	movw	r1, #29746	; 0x7432
   2691c:	movt	r1, #26990	; 0x696e
   26920:	teq	r4, r1
   26924:	bne	269dc <main@@Base+0x1079c>
   26928:	str	r3, [sp]
   2692c:	mov	r1, r8
   26930:	mov	r3, #4
   26934:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26938:	cmp	r0, r8
   2693c:	beq	269dc <main@@Base+0x1079c>
   26940:	mov	r1, #0
   26944:	mov	r2, #42	; 0x2a
   26948:	str	r2, [r5]
   2694c:	str	r1, [r5, #4]
   26950:	b	269d0 <main@@Base+0x10790>
   26954:	eor	r1, r4, r1
   26958:	add	r7, r6, #12800	; 0x3200
   2695c:	bic	r4, sl, #255	; 0xff
   26960:	eor	r7, r4, r7
   26964:	orrs	r7, r7, r1
   26968:	bne	26994 <main@@Base+0x10754>
   2696c:	str	r3, [sp]
   26970:	mov	r1, r8
   26974:	mov	r3, #7
   26978:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   2697c:	cmp	r0, r8
   26980:	beq	269dc <main@@Base+0x1079c>
   26984:	mvn	r2, #1
   26988:	mvn	r1, #0
   2698c:	add	r2, r2, #1
   26990:	b	269c4 <main@@Base+0x10784>
   26994:	bfc	sl, #0, #16
   26998:	eor	r7, sl, r6
   2699c:	orrs	r1, r7, r1
   269a0:	bne	269dc <main@@Base+0x1079c>
   269a4:	str	r3, [sp]
   269a8:	mov	r1, r8
   269ac:	mov	r3, #6
   269b0:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   269b4:	cmp	r0, r8
   269b8:	beq	269dc <main@@Base+0x1079c>
   269bc:	mvn	r1, #0
   269c0:	mvn	r2, #1
   269c4:	str	r2, [r5]
   269c8:	str	r1, [r5, #4]
   269cc:	mov	r1, #1
   269d0:	ldr	r2, [sp, #8]
   269d4:	mov	r8, r0
   269d8:	str	r1, [r2]
   269dc:	mov	r0, r8
   269e0:	sub	sp, fp, #28
   269e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   269e8:	push	{r4, r5, r6, r7, fp, lr}
   269ec:	add	fp, sp, #16
   269f0:	sub	sp, sp, #8
   269f4:	mov	r5, r1
   269f8:	sub	r1, r2, r1
   269fc:	mov	r4, r3
   26a00:	cmp	r1, #8
   26a04:	movcs	r1, #8
   26a08:	and	r1, r1, #15
   26a0c:	sub	r3, r1, #1
   26a10:	cmp	r3, #7
   26a14:	bhi	26b2c <main@@Base+0x108ec>
   26a18:	add	r7, pc, #8
   26a1c:	mov	r1, #0
   26a20:	ldr	r3, [r7, r3, lsl #2]
   26a24:	add	pc, r7, r3
   26a28:	andeq	r0, r0, r8, lsr r0
   26a2c:	andeq	r0, r0, r0, lsr r0
   26a30:	andeq	r0, r0, r8, lsr #32
   26a34:	andeq	r0, r0, r0, lsr #32
   26a38:	andeq	r0, r0, r0, lsr #32
   26a3c:	andeq	r0, r0, r0, lsr #32
   26a40:	andeq	r0, r0, r0, lsr #32
   26a44:	andeq	r0, r0, r0, lsr #32
   26a48:	ldrb	r3, [r5, #3]
   26a4c:	orr	r1, r3, r1
   26a50:	ldrb	r3, [r5, #2]
   26a54:	orr	r1, r1, r3, lsl #8
   26a58:	ldrb	r3, [r5, #1]
   26a5c:	orr	r1, r1, r3, lsl #16
   26a60:	ldrb	r6, [r5]
   26a64:	ldr	r3, [fp, #12]
   26a68:	ldr	r7, [fp, #8]
   26a6c:	orr	r1, r1, r6, lsl #24
   26a70:	movw	r6, #26417	; 0x6731
   26a74:	movt	r6, #28261	; 0x6e65
   26a78:	cmp	r1, r6
   26a7c:	bhi	26aac <main@@Base+0x1086c>
   26a80:	teq	r1, r6
   26a84:	bne	26b2c <main@@Base+0x108ec>
   26a88:	str	r3, [sp]
   26a8c:	mov	r1, r5
   26a90:	mov	r3, #4
   26a94:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26a98:	cmp	r0, r5
   26a9c:	beq	26b2c <main@@Base+0x108ec>
   26aa0:	mvn	r1, #0
   26aa4:	mvn	r2, #11
   26aa8:	b	26b18 <main@@Base+0x108d8>
   26aac:	movw	r6, #26418	; 0x6732
   26ab0:	movt	r6, #28261	; 0x6e65
   26ab4:	teq	r1, r6
   26ab8:	beq	26af4 <main@@Base+0x108b4>
   26abc:	movw	r6, #26419	; 0x6733
   26ac0:	movt	r6, #28261	; 0x6e65
   26ac4:	teq	r1, r6
   26ac8:	bne	26b2c <main@@Base+0x108ec>
   26acc:	str	r3, [sp]
   26ad0:	mov	r1, r5
   26ad4:	mov	r3, #4
   26ad8:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26adc:	cmp	r0, r5
   26ae0:	beq	26b2c <main@@Base+0x108ec>
   26ae4:	mvn	r2, #11
   26ae8:	mvn	r1, #0
   26aec:	add	r2, r2, #2
   26af0:	b	26b18 <main@@Base+0x108d8>
   26af4:	str	r3, [sp]
   26af8:	mov	r1, r5
   26afc:	mov	r3, #4
   26b00:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26b04:	cmp	r0, r5
   26b08:	beq	26b2c <main@@Base+0x108ec>
   26b0c:	mvn	r2, #11
   26b10:	mvn	r1, #0
   26b14:	add	r2, r2, #1
   26b18:	str	r2, [r7]
   26b1c:	str	r1, [r7, #4]
   26b20:	mov	r1, #1
   26b24:	mov	r5, r0
   26b28:	str	r1, [r4]
   26b2c:	mov	r0, r5
   26b30:	sub	sp, fp, #16
   26b34:	pop	{r4, r5, r6, r7, fp, pc}
   26b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b3c:	add	fp, sp, #28
   26b40:	sub	sp, sp, #12
   26b44:	mov	sl, r1
   26b48:	sub	r1, r2, r1
   26b4c:	cmp	r1, #8
   26b50:	movcs	r1, #8
   26b54:	and	r1, r1, #15
   26b58:	sub	r7, r1, #1
   26b5c:	cmp	r7, #7
   26b60:	bhi	26de0 <main@@Base+0x10ba0>
   26b64:	str	r3, [sp, #8]
   26b68:	add	r1, pc, #36	; 0x24
   26b6c:	mov	r9, #0
   26b70:	mov	ip, #0
   26b74:	mov	lr, #0
   26b78:	mov	r6, #0
   26b7c:	mov	r4, #0
   26b80:	mov	r5, #0
   26b84:	mov	r8, #0
   26b88:	ldr	r3, [r1, r7, lsl #2]
   26b8c:	mov	r7, #0
   26b90:	add	pc, r1, r3
   26b94:	andeq	r0, r0, r4, rrx
   26b98:	andeq	r0, r0, ip, asr r0
   26b9c:	andeq	r0, r0, r4, asr r0
   26ba0:	andeq	r0, r0, ip, asr #32
   26ba4:	andeq	r0, r0, r0, asr #32
   26ba8:	andeq	r0, r0, r4, lsr r0
   26bac:	andeq	r0, r0, r4, lsr #32
   26bb0:	andeq	r0, r0, r0, lsr #32
   26bb4:	ldrb	ip, [sl, #7]
   26bb8:	ldrb	r1, [sl, #6]
   26bbc:	mov	lr, r9
   26bc0:	orr	r1, ip, r1, lsl #8
   26bc4:	mov	r9, r1
   26bc8:	ldrb	r1, [sl, #5]
   26bcc:	mov	r6, lr
   26bd0:	orr	r9, r9, r1, lsl #16
   26bd4:	ldrb	r1, [sl, #4]
   26bd8:	mov	r7, r6
   26bdc:	orr	r9, r9, r1, lsl #24
   26be0:	ldrb	r1, [sl, #3]
   26be4:	orr	r4, r1, r7
   26be8:	ldrb	r1, [sl, #2]
   26bec:	orr	r5, r4, r1, lsl #8
   26bf0:	ldrb	r1, [sl, #1]
   26bf4:	orr	r8, r5, r1, lsl #16
   26bf8:	ldrb	r1, [sl]
   26bfc:	ldr	lr, [fp, #12]
   26c00:	ldr	r5, [fp, #8]
   26c04:	orr	r6, r8, r1, lsl #24
   26c08:	movw	r1, #20036	; 0x4e44
   26c0c:	movt	r1, #20047	; 0x4e4f
   26c10:	cmp	r6, r1
   26c14:	bhi	26c74 <main@@Base+0x10a34>
   26c18:	movw	r7, #28160	; 0x6e00
   26c1c:	movw	r4, #28523	; 0x6f6b
   26c20:	and	r3, r9, #-16777216	; 0xff000000
   26c24:	movt	r7, #18017	; 0x4661
   26c28:	movt	r4, #17007	; 0x426f
   26c2c:	subs	r1, r9, r7
   26c30:	sbcs	r1, r6, r4
   26c34:	bcs	26cc0 <main@@Base+0x10a80>
   26c38:	movw	r1, #27756	; 0x6c6c
   26c3c:	eor	r3, r3, #1694498816	; 0x65000000
   26c40:	movt	r1, #16997	; 0x4265
   26c44:	eor	r1, r6, r1
   26c48:	orrs	r1, r3, r1
   26c4c:	bne	26de0 <main@@Base+0x10ba0>
   26c50:	mov	r1, sl
   26c54:	mov	r3, #5
   26c58:	str	lr, [sp]
   26c5c:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26c60:	cmp	r0, sl
   26c64:	beq	26de0 <main@@Base+0x10ba0>
   26c68:	mov	r1, #0
   26c6c:	mov	r2, #9
   26c70:	b	26dcc <main@@Base+0x10b8c>
   26c74:	movw	r7, #26725	; 0x6865
   26c78:	mvn	r1, #-1912602624	; 0x8e000000
   26c7c:	movt	r7, #20340	; 0x4f74
   26c80:	subs	r1, r1, r9
   26c84:	sbcs	r1, r7, r6
   26c88:	bcc	26cfc <main@@Base+0x10abc>
   26c8c:	movw	r1, #20037	; 0x4e45
   26c90:	movt	r1, #20047	; 0x4e4f
   26c94:	teq	r6, r1
   26c98:	bne	26de0 <main@@Base+0x10ba0>
   26c9c:	mov	r1, sl
   26ca0:	mov	r3, #4
   26ca4:	str	lr, [sp]
   26ca8:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26cac:	cmp	r0, sl
   26cb0:	beq	26de0 <main@@Base+0x10ba0>
   26cb4:	mov	r1, #0
   26cb8:	str	r1, [r5]
   26cbc:	b	26dd0 <main@@Base+0x10b90>
   26cc0:	movw	r1, #19553	; 0x4c61
   26cc4:	eor	r3, r3, #1845493760	; 0x6e000000
   26cc8:	movt	r1, #19829	; 0x4d75
   26ccc:	eor	r1, r6, r1
   26cd0:	orrs	r1, r3, r1
   26cd4:	bne	26d50 <main@@Base+0x10b10>
   26cd8:	mov	r1, sl
   26cdc:	mov	r3, #5
   26ce0:	str	lr, [sp]
   26ce4:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26ce8:	cmp	r0, sl
   26cec:	beq	26de0 <main@@Base+0x10ba0>
   26cf0:	mov	r1, #0
   26cf4:	mov	r2, #2
   26cf8:	b	26dcc <main@@Base+0x10b8c>
   26cfc:	movw	r4, #25964	; 0x656c
   26d00:	movw	ip, #28789	; 0x7075
   26d04:	movt	r4, #28282	; 0x6e7a
   26d08:	movt	ip, #21089	; 0x5261
   26d0c:	subs	r1, r9, r4
   26d10:	sbcs	r1, r6, ip
   26d14:	bcs	26d88 <main@@Base+0x10b48>
   26d18:	and	r3, r9, #-16777216	; 0xff000000
   26d1c:	eor	r1, r6, r7
   26d20:	eor	r3, r3, #1912602624	; 0x72000000
   26d24:	orrs	r1, r3, r1
   26d28:	bne	26de0 <main@@Base+0x10ba0>
   26d2c:	mov	r1, sl
   26d30:	mov	r3, #5
   26d34:	str	lr, [sp]
   26d38:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26d3c:	cmp	r0, sl
   26d40:	beq	26de0 <main@@Base+0x10ba0>
   26d44:	mov	r1, #0
   26d48:	mov	r2, #11
   26d4c:	b	26dcc <main@@Base+0x10b8c>
   26d50:	bic	r3, r9, #255	; 0xff
   26d54:	eor	r1, r6, r4
   26d58:	eor	r3, r3, r7
   26d5c:	orrs	r1, r3, r1
   26d60:	bne	26de0 <main@@Base+0x10ba0>
   26d64:	mov	r1, sl
   26d68:	mov	r3, #7
   26d6c:	str	lr, [sp]
   26d70:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26d74:	cmp	r0, sl
   26d78:	beq	26de0 <main@@Base+0x10ba0>
   26d7c:	mov	r1, #0
   26d80:	mov	r2, #10
   26d84:	b	26dcc <main@@Base+0x10b8c>
   26d88:	lsr	r3, r9, #16
   26d8c:	movw	r7, #25956	; 0x6564
   26d90:	movw	r1, #21870	; 0x556e
   26d94:	orr	r3, r3, r6, lsl #16
   26d98:	movt	r7, #30067	; 0x7573
   26d9c:	eor	r1, r1, r6, lsr #16
   26da0:	eor	r3, r3, r7
   26da4:	orrs	r1, r3, r1
   26da8:	bne	26dec <main@@Base+0x10bac>
   26dac:	mov	r1, sl
   26db0:	mov	r3, #6
   26db4:	str	lr, [sp]
   26db8:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26dbc:	cmp	r0, sl
   26dc0:	beq	26de0 <main@@Base+0x10ba0>
   26dc4:	mov	r1, #0
   26dc8:	mov	r2, #255	; 0xff
   26dcc:	str	r2, [r5]
   26dd0:	str	r1, [r5, #4]
   26dd4:	mov	sl, r0
   26dd8:	ldr	r2, [sp, #8]
   26ddc:	str	r1, [r2]
   26de0:	mov	r0, sl
   26de4:	sub	sp, fp, #28
   26de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26dec:	eor	r1, r9, r4
   26df0:	eor	r3, r6, ip
   26df4:	orrs	r1, r1, r3
   26df8:	bne	26de0 <main@@Base+0x10ba0>
   26dfc:	mov	r1, sl
   26e00:	mov	r3, #8
   26e04:	str	lr, [sp]
   26e08:	mov	r4, #8
   26e0c:	bl	3674c <flatcc_json_parser_match_constant@@Base>
   26e10:	cmp	r0, sl
   26e14:	beq	26de0 <main@@Base+0x10ba0>
   26e18:	mov	r1, #0
   26e1c:	str	r4, [r5]
   26e20:	b	26dd0 <main@@Base+0x10b90>
   26e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26e28:	add	fp, sp, #28
   26e2c:	sub	sp, sp, #36	; 0x24
   26e30:	mov	r5, r0
   26e34:	mov	r0, #0
   26e38:	mov	r4, r1
   26e3c:	mov	r1, #4
   26e40:	mov	r7, r3
   26e44:	mov	r8, r2
   26e48:	str	r0, [r3]
   26e4c:	ldr	r0, [r5]
   26e50:	bl	314c0 <flatcc_builder_start_table@@Base>
   26e54:	cmp	r0, #0
   26e58:	beq	26e80 <main@@Base+0x10c40>
   26e5c:	mov	r0, r5
   26e60:	mov	r1, r4
   26e64:	mov	r2, r8
   26e68:	mov	r3, #33	; 0x21
   26e6c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   26e70:	mov	r4, r0
   26e74:	mov	r0, r4
   26e78:	sub	sp, fp, #28
   26e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e80:	add	r0, sp, #28
   26e84:	mov	r1, r4
   26e88:	mov	r2, r8
   26e8c:	mov	r3, #1
   26e90:	str	r0, [sp]
   26e94:	mov	r0, r5
   26e98:	bl	38c74 <flatcc_json_parser_prepare_unions@@Base>
   26e9c:	cmp	r0, r8
   26ea0:	beq	26e5c <main@@Base+0x10c1c>
   26ea4:	cmp	r4, r8
   26ea8:	beq	26edc <main@@Base+0x10c9c>
   26eac:	ldrb	r0, [r4]
   26eb0:	cmp	r0, #123	; 0x7b
   26eb4:	bne	26edc <main@@Base+0x10c9c>
   26eb8:	add	r1, r4, #1
   26ebc:	sub	r0, r8, r1
   26ec0:	cmp	r0, #2
   26ec4:	blt	26f40 <main@@Base+0x10d00>
   26ec8:	ldrb	r0, [r1]
   26ecc:	cmp	r0, #32
   26ed0:	bls	26f30 <main@@Base+0x10cf0>
   26ed4:	mov	r4, r1
   26ed8:	b	26f50 <main@@Base+0x10d10>
   26edc:	mov	r0, r5
   26ee0:	mov	r1, r4
   26ee4:	mov	r2, r8
   26ee8:	mov	r3, #21
   26eec:	bl	36078 <flatcc_json_parser_set_error@@Base>
   26ef0:	mov	r4, r0
   26ef4:	ldr	r0, [r5, #24]
   26ef8:	cmp	r0, #0
   26efc:	bne	26e5c <main@@Base+0x10c1c>
   26f00:	ldr	r3, [sp, #28]
   26f04:	mov	r0, r5
   26f08:	mov	r1, r4
   26f0c:	mov	r2, r8
   26f10:	bl	38d04 <flatcc_json_parser_finalize_unions@@Base>
   26f14:	mov	r4, r0
   26f18:	ldr	r0, [r5]
   26f1c:	bl	31ef0 <flatcc_builder_end_table@@Base>
   26f20:	cmp	r0, #0
   26f24:	str	r0, [r7]
   26f28:	bne	26e74 <main@@Base+0x10c34>
   26f2c:	b	26e5c <main@@Base+0x10c1c>
   26f30:	bne	26f40 <main@@Base+0x10d00>
   26f34:	ldrb	r0, [r4, #2]!
   26f38:	cmp	r0, #32
   26f3c:	bhi	26f50 <main@@Base+0x10d10>
   26f40:	mov	r0, r5
   26f44:	mov	r2, r8
   26f48:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   26f4c:	mov	r4, r0
   26f50:	cmp	r4, r8
   26f54:	mov	r2, r8
   26f58:	beq	26f9c <main@@Base+0x10d5c>
   26f5c:	ldrb	r0, [r4]
   26f60:	cmp	r0, #125	; 0x7d
   26f64:	bne	26f98 <main@@Base+0x10d58>
   26f68:	add	r1, r4, #1
   26f6c:	sub	r0, r8, r1
   26f70:	cmp	r0, #2
   26f74:	blt	27860 <main@@Base+0x11620>
   26f78:	ldrb	r0, [r1]
   26f7c:	cmp	r0, #32
   26f80:	bhi	27824 <main@@Base+0x115e4>
   26f84:	bne	27860 <main@@Base+0x11620>
   26f88:	ldrb	r0, [r4, #2]!
   26f8c:	cmp	r0, #32
   26f90:	bhi	26ef4 <main@@Base+0x10cb4>
   26f94:	b	27860 <main@@Base+0x11620>
   26f98:	mov	r2, r4
   26f9c:	str	r7, [sp, #20]
   26fa0:	cmp	r2, r8
   26fa4:	mov	r9, r8
   26fa8:	beq	26ff4 <main@@Base+0x10db4>
   26fac:	ldrb	r0, [r2]
   26fb0:	cmp	r0, #46	; 0x2e
   26fb4:	beq	26fcc <main@@Base+0x10d8c>
   26fb8:	cmp	r0, #34	; 0x22
   26fbc:	bne	26fe8 <main@@Base+0x10da8>
   26fc0:	mov	r0, #0
   26fc4:	add	r9, r2, #1
   26fc8:	b	26ff0 <main@@Base+0x10db0>
   26fcc:	mov	r1, r2
   26fd0:	mov	r0, r5
   26fd4:	mov	r2, r8
   26fd8:	mov	r3, #5
   26fdc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   26fe0:	mov	r9, r0
   26fe4:	b	26ff4 <main@@Base+0x10db4>
   26fe8:	mov	r0, #1
   26fec:	mov	r9, r2
   26ff0:	str	r0, [r5, #12]
   26ff4:	sub	r1, r8, r9
   26ff8:	mov	r0, #8
   26ffc:	cmp	r1, #8
   27000:	movcc	r0, r1
   27004:	and	r0, r0, #15
   27008:	sub	r0, r0, #1
   2700c:	cmp	r0, #7
   27010:	bhi	2771c <main@@Base+0x114dc>
   27014:	str	r1, [sp, #24]
   27018:	add	r4, pc, #40	; 0x28
   2701c:	mov	lr, r5
   27020:	mov	sl, #0
   27024:	mov	ip, #0
   27028:	mov	r5, #0
   2702c:	mov	r1, #0
   27030:	mov	r2, #0
   27034:	mov	r3, #0
   27038:	mov	r6, #0
   2703c:	mov	r7, #0
   27040:	ldr	r0, [r4, r0, lsl #2]
   27044:	add	pc, r4, r0
   27048:	andeq	r0, r0, r4, rrx
   2704c:	andeq	r0, r0, ip, asr r0
   27050:	andeq	r0, r0, r4, asr r0
   27054:	andeq	r0, r0, ip, asr #32
   27058:	andeq	r0, r0, r0, asr #32
   2705c:	andeq	r0, r0, r4, lsr r0
   27060:	andeq	r0, r0, r4, lsr #32
   27064:	andeq	r0, r0, r0, lsr #32
   27068:	ldrb	ip, [r9, #7]
   2706c:	ldrb	r0, [r9, #6]
   27070:	mov	r5, sl
   27074:	orr	r0, ip, r0, lsl #8
   27078:	mov	sl, r0
   2707c:	ldrb	r0, [r9, #5]
   27080:	mov	r1, r5
   27084:	orr	sl, sl, r0, lsl #16
   27088:	ldrb	r0, [r9, #4]
   2708c:	mov	r2, r1
   27090:	orr	sl, sl, r0, lsl #24
   27094:	ldrb	r0, [r9, #3]
   27098:	orr	r3, r0, r2
   2709c:	ldrb	r0, [r9, #2]
   270a0:	orr	r6, r3, r0, lsl #8
   270a4:	ldrb	r0, [r9, #1]
   270a8:	orr	r7, r6, r0, lsl #16
   270ac:	movw	r2, #30976	; 0x7900
   270b0:	movt	r2, #24942	; 0x616e
   270b4:	add	r0, r2, #95	; 0x5f
   270b8:	eor	r1, sl, r0
   270bc:	ldrb	r0, [r9]
   270c0:	orr	r4, r7, r0, lsl #24
   270c4:	movw	r0, #28281	; 0x6e79
   270c8:	movt	r0, #28001	; 0x6d61
   270cc:	eor	r0, r4, r0
   270d0:	orrs	r1, r1, r0
   270d4:	bne	27198 <main@@Base+0x10f58>
   270d8:	add	r6, r9, #8
   270dc:	mov	r1, #8
   270e0:	ldr	r7, [sp, #20]
   270e4:	mov	r5, lr
   270e8:	sub	r0, r8, r6
   270ec:	cmp	r0, #8
   270f0:	movcc	r1, r0
   270f4:	and	r1, r1, #15
   270f8:	sub	r2, r1, #1
   270fc:	cmp	r2, #7
   27100:	bhi	2746c <main@@Base+0x1122c>
   27104:	add	r3, pc, #8
   27108:	mov	r1, #0
   2710c:	ldr	r2, [r3, r2, lsl #2]
   27110:	add	pc, r3, r2
   27114:	andeq	r0, r0, r4, lsr r0
   27118:	andeq	r0, r0, ip, lsr #32
   2711c:	andeq	r0, r0, r4, lsr #32
   27120:	andeq	r0, r0, r0, lsr #32
   27124:	andeq	r0, r0, r0, lsr #32
   27128:	andeq	r0, r0, r0, lsr #32
   2712c:	andeq	r0, r0, r0, lsr #32
   27130:	andeq	r0, r0, r0, lsr #32
   27134:	ldrb	r1, [r9, #11]
   27138:	ldrb	r2, [r9, #10]
   2713c:	orr	r1, r1, r2, lsl #8
   27140:	ldrb	r2, [r9, #9]
   27144:	orr	r1, r1, r2, lsl #16
   27148:	ldrb	r2, [r6]
   2714c:	orr	r1, r1, r2, lsl #24
   27150:	movw	r2, #28773	; 0x7065
   27154:	movt	r2, #29817	; 0x7479
   27158:	teq	r1, r2
   2715c:	bne	2746c <main@@Base+0x1122c>
   27160:	cmp	r0, #5
   27164:	blt	2746c <main@@Base+0x1122c>
   27168:	mov	r1, r9
   2716c:	ldr	r2, [r5, #12]
   27170:	ldrb	r0, [r1, #12]!
   27174:	cmp	r2, #0
   27178:	beq	27228 <main@@Base+0x10fe8>
   2717c:	cmp	r0, #33	; 0x21
   27180:	bcc	2718c <main@@Base+0x10f4c>
   27184:	cmp	r0, #58	; 0x3a
   27188:	bne	2746c <main@@Base+0x1122c>
   2718c:	mov	r0, #0
   27190:	str	r0, [r5, #12]
   27194:	b	27234 <main@@Base+0x10ff4>
   27198:	ldr	r6, [sp, #24]
   2719c:	bic	r1, sl, #255	; 0xff
   271a0:	mov	r5, lr
   271a4:	eor	r1, r1, r2
   271a8:	orrs	r0, r1, r0
   271ac:	bne	272c0 <main@@Base+0x11080>
   271b0:	cmp	r6, #8
   271b4:	mov	r1, r9
   271b8:	blt	275ac <main@@Base+0x1136c>
   271bc:	mov	r2, r9
   271c0:	ldr	r1, [r5, #12]
   271c4:	ldrb	r0, [r2, #7]!
   271c8:	cmp	r1, #0
   271cc:	beq	271f0 <main@@Base+0x10fb0>
   271d0:	cmp	r0, #33	; 0x21
   271d4:	bcc	271e4 <main@@Base+0x10fa4>
   271d8:	cmp	r0, #58	; 0x3a
   271dc:	mov	r1, r9
   271e0:	bne	275ac <main@@Base+0x1136c>
   271e4:	mov	r0, #0
   271e8:	str	r0, [r5, #12]
   271ec:	b	27200 <main@@Base+0x10fc0>
   271f0:	cmp	r0, #34	; 0x22
   271f4:	mov	r1, r9
   271f8:	bne	275ac <main@@Base+0x1136c>
   271fc:	add	r2, r9, #8
   27200:	sub	r0, r8, r2
   27204:	cmp	r0, #2
   27208:	blt	27270 <main@@Base+0x11030>
   2720c:	ldrb	r0, [r2]
   27210:	cmp	r0, #32
   27214:	bls	2725c <main@@Base+0x1101c>
   27218:	mov	r1, r2
   2721c:	cmp	r1, r8
   27220:	bne	2728c <main@@Base+0x1104c>
   27224:	b	27388 <main@@Base+0x11148>
   27228:	cmp	r0, #34	; 0x22
   2722c:	bne	2746c <main@@Base+0x1122c>
   27230:	add	r1, r9, #13
   27234:	sub	r0, r8, r1
   27238:	cmp	r0, #2
   2723c:	blt	27420 <main@@Base+0x111e0>
   27240:	ldrb	r0, [r1]
   27244:	cmp	r0, #32
   27248:	bls	2740c <main@@Base+0x111cc>
   2724c:	mov	r2, r1
   27250:	cmp	r2, r8
   27254:	bne	27438 <main@@Base+0x111f8>
   27258:	b	27478 <main@@Base+0x11238>
   2725c:	bne	27270 <main@@Base+0x11030>
   27260:	mov	r1, r2
   27264:	ldrb	r0, [r1, #1]!
   27268:	cmp	r0, #32
   2726c:	bhi	27284 <main@@Base+0x11044>
   27270:	mov	r1, r2
   27274:	mov	r0, r5
   27278:	mov	r2, r8
   2727c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27280:	mov	r1, r0
   27284:	cmp	r1, r8
   27288:	beq	27388 <main@@Base+0x11148>
   2728c:	ldrb	r0, [r1]
   27290:	cmp	r0, #58	; 0x3a
   27294:	bne	27388 <main@@Base+0x11148>
   27298:	add	r2, r1, #1
   2729c:	sub	r0, r8, r2
   272a0:	cmp	r0, #2
   272a4:	blt	27598 <main@@Base+0x11358>
   272a8:	ldrb	r0, [r2]
   272ac:	cmp	r0, #32
   272b0:	bls	27588 <main@@Base+0x11348>
   272b4:	mov	r1, r2
   272b8:	cmp	r9, r1
   272bc:	bne	275b4 <main@@Base+0x11374>
   272c0:	lsr	r1, sl, #16
   272c4:	movw	r2, #27000	; 0x6978
   272c8:	movw	r0, #28786	; 0x7072
   272cc:	orr	r1, r1, r4, lsl #16
   272d0:	movt	r2, #25958	; 0x6566
   272d4:	eor	r0, r0, r4, lsr #16
   272d8:	eor	r1, r1, r2
   272dc:	orrs	r0, r1, r0
   272e0:	bne	27328 <main@@Base+0x110e8>
   272e4:	ldr	r7, [sp, #20]
   272e8:	cmp	r6, #7
   272ec:	mov	r1, r9
   272f0:	blt	27680 <main@@Base+0x11440>
   272f4:	mov	r2, r9
   272f8:	ldr	r1, [r5, #12]
   272fc:	ldrb	r0, [r2, #6]!
   27300:	cmp	r1, #0
   27304:	beq	2739c <main@@Base+0x1115c>
   27308:	cmp	r0, #33	; 0x21
   2730c:	bcc	2731c <main@@Base+0x110dc>
   27310:	cmp	r0, #58	; 0x3a
   27314:	mov	r1, r9
   27318:	bne	27680 <main@@Base+0x11440>
   2731c:	mov	r0, #0
   27320:	str	r0, [r5, #12]
   27324:	b	273ac <main@@Base+0x1116c>
   27328:	movw	r0, #30313	; 0x7669
   2732c:	ldr	r7, [sp, #20]
   27330:	and	r1, sl, #-16777216	; 0xff000000
   27334:	movt	r0, #28015	; 0x6d6f
   27338:	eor	r1, r1, #1694498816	; 0x65000000
   2733c:	eor	r0, r4, r0
   27340:	orrs	r0, r1, r0
   27344:	bne	2771c <main@@Base+0x114dc>
   27348:	cmp	r6, #6
   2734c:	mov	r1, r9
   27350:	blt	276d8 <main@@Base+0x11498>
   27354:	mov	r2, r9
   27358:	ldr	r1, [r5, #12]
   2735c:	ldrb	r0, [r2, #5]!
   27360:	cmp	r1, #0
   27364:	beq	273d4 <main@@Base+0x11194>
   27368:	cmp	r0, #33	; 0x21
   2736c:	bcc	2737c <main@@Base+0x1113c>
   27370:	cmp	r0, #58	; 0x3a
   27374:	mov	r1, r9
   27378:	bne	276d8 <main@@Base+0x11498>
   2737c:	mov	r0, #0
   27380:	str	r0, [r5, #12]
   27384:	b	273e4 <main@@Base+0x111a4>
   27388:	mov	r0, r5
   2738c:	mov	r2, r8
   27390:	mov	r3, #4
   27394:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27398:	b	275a8 <main@@Base+0x11368>
   2739c:	cmp	r0, #34	; 0x22
   273a0:	mov	r1, r9
   273a4:	bne	27680 <main@@Base+0x11440>
   273a8:	add	r2, r9, #7
   273ac:	sub	r0, r8, r2
   273b0:	cmp	r0, #2
   273b4:	blt	274a4 <main@@Base+0x11264>
   273b8:	ldrb	r0, [r2]
   273bc:	cmp	r0, #32
   273c0:	bls	27490 <main@@Base+0x11250>
   273c4:	mov	r1, r2
   273c8:	cmp	r1, r8
   273cc:	bne	274c0 <main@@Base+0x11280>
   273d0:	b	274f8 <main@@Base+0x112b8>
   273d4:	cmp	r0, #34	; 0x22
   273d8:	mov	r1, r9
   273dc:	bne	276d8 <main@@Base+0x11498>
   273e0:	add	r2, r9, #6
   273e4:	sub	r0, r8, r2
   273e8:	cmp	r0, #2
   273ec:	blt	27520 <main@@Base+0x112e0>
   273f0:	ldrb	r0, [r2]
   273f4:	cmp	r0, #32
   273f8:	bls	2750c <main@@Base+0x112cc>
   273fc:	mov	r1, r2
   27400:	cmp	r1, r8
   27404:	bne	2753c <main@@Base+0x112fc>
   27408:	b	27574 <main@@Base+0x11334>
   2740c:	bne	27420 <main@@Base+0x111e0>
   27410:	mov	r2, r1
   27414:	ldrb	r0, [r2, #1]!
   27418:	cmp	r0, #32
   2741c:	bhi	27430 <main@@Base+0x111f0>
   27420:	mov	r0, r5
   27424:	mov	r2, r8
   27428:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2742c:	mov	r2, r0
   27430:	cmp	r2, r8
   27434:	beq	27478 <main@@Base+0x11238>
   27438:	ldrb	r0, [r2]
   2743c:	cmp	r0, #58	; 0x3a
   27440:	bne	27478 <main@@Base+0x11238>
   27444:	add	r1, r2, #1
   27448:	sub	r0, r8, r1
   2744c:	cmp	r0, #2
   27450:	blt	275f8 <main@@Base+0x113b8>
   27454:	ldrb	r0, [r1]
   27458:	cmp	r0, #32
   2745c:	bls	275e8 <main@@Base+0x113a8>
   27460:	mov	r2, r1
   27464:	cmp	r6, r2
   27468:	bne	27610 <main@@Base+0x113d0>
   2746c:	mov	r0, r5
   27470:	mov	r1, r6
   27474:	b	27724 <main@@Base+0x114e4>
   27478:	mov	r1, r2
   2747c:	mov	r0, r5
   27480:	mov	r2, r8
   27484:	mov	r3, #4
   27488:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2748c:	b	27604 <main@@Base+0x113c4>
   27490:	bne	274a4 <main@@Base+0x11264>
   27494:	mov	r1, r2
   27498:	ldrb	r0, [r1, #1]!
   2749c:	cmp	r0, #32
   274a0:	bhi	274b8 <main@@Base+0x11278>
   274a4:	mov	r1, r2
   274a8:	mov	r0, r5
   274ac:	mov	r2, r8
   274b0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   274b4:	mov	r1, r0
   274b8:	cmp	r1, r8
   274bc:	beq	274f8 <main@@Base+0x112b8>
   274c0:	ldrb	r0, [r1]
   274c4:	cmp	r0, #58	; 0x3a
   274c8:	bne	274f8 <main@@Base+0x112b8>
   274cc:	add	r2, r1, #1
   274d0:	sub	r0, r8, r2
   274d4:	cmp	r0, #2
   274d8:	blt	2766c <main@@Base+0x1142c>
   274dc:	ldrb	r0, [r2]
   274e0:	cmp	r0, #32
   274e4:	bls	2765c <main@@Base+0x1141c>
   274e8:	mov	r1, r2
   274ec:	cmp	r9, r1
   274f0:	bne	27688 <main@@Base+0x11448>
   274f4:	b	2771c <main@@Base+0x114dc>
   274f8:	mov	r0, r5
   274fc:	mov	r2, r8
   27500:	mov	r3, #4
   27504:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27508:	b	2767c <main@@Base+0x1143c>
   2750c:	bne	27520 <main@@Base+0x112e0>
   27510:	mov	r1, r2
   27514:	ldrb	r0, [r1, #1]!
   27518:	cmp	r0, #32
   2751c:	bhi	27534 <main@@Base+0x112f4>
   27520:	mov	r1, r2
   27524:	mov	r0, r5
   27528:	mov	r2, r8
   2752c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27530:	mov	r1, r0
   27534:	cmp	r1, r8
   27538:	beq	27574 <main@@Base+0x11334>
   2753c:	ldrb	r0, [r1]
   27540:	cmp	r0, #58	; 0x3a
   27544:	bne	27574 <main@@Base+0x11334>
   27548:	add	r2, r1, #1
   2754c:	sub	r0, r8, r2
   27550:	cmp	r0, #2
   27554:	blt	276c4 <main@@Base+0x11484>
   27558:	ldrb	r0, [r2]
   2755c:	cmp	r0, #32
   27560:	bls	276b4 <main@@Base+0x11474>
   27564:	mov	r1, r2
   27568:	cmp	r9, r1
   2756c:	bne	276e0 <main@@Base+0x114a0>
   27570:	b	2771c <main@@Base+0x114dc>
   27574:	mov	r0, r5
   27578:	mov	r2, r8
   2757c:	mov	r3, #4
   27580:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27584:	b	276d4 <main@@Base+0x11494>
   27588:	bne	27598 <main@@Base+0x11358>
   2758c:	ldrb	r0, [r1, #2]!
   27590:	cmp	r0, #32
   27594:	bhi	275ac <main@@Base+0x1136c>
   27598:	mov	r1, r2
   2759c:	mov	r0, r5
   275a0:	mov	r2, r8
   275a4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   275a8:	mov	r1, r0
   275ac:	cmp	r9, r1
   275b0:	beq	272c0 <main@@Base+0x11080>
   275b4:	ldr	r0, [sp, #28]
   275b8:	mov	r2, #3
   275bc:	mov	r3, #0
   275c0:	str	r2, [sp]
   275c4:	mov	r2, r8
   275c8:	str	r0, [sp, #4]
   275cc:	ldr	r0, [pc, #680]	; 2787c <main@@Base+0x1163c>
   275d0:	add	r0, pc, r0
   275d4:	str	r0, [sp, #8]
   275d8:	mov	r0, r5
   275dc:	bl	39450 <flatcc_json_parser_union_vector@@Base>
   275e0:	ldr	r7, [sp, #20]
   275e4:	b	2772c <main@@Base+0x114ec>
   275e8:	bne	275f8 <main@@Base+0x113b8>
   275ec:	ldrb	r0, [r2, #2]!
   275f0:	cmp	r0, #32
   275f4:	bhi	27608 <main@@Base+0x113c8>
   275f8:	mov	r0, r5
   275fc:	mov	r2, r8
   27600:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27604:	mov	r2, r0
   27608:	cmp	r6, r2
   2760c:	beq	2746c <main@@Base+0x1122c>
   27610:	ldr	r0, [sp, #28]
   27614:	mov	r1, #3
   27618:	mov	r3, #0
   2761c:	str	r1, [sp]
   27620:	mov	r1, r2
   27624:	mov	r2, r8
   27628:	str	r0, [sp, #4]
   2762c:	ldr	r0, [pc, #572]	; 27870 <main@@Base+0x11630>
   27630:	add	r0, pc, r0
   27634:	str	r0, [sp, #8]
   27638:	ldr	r0, [pc, #564]	; 27874 <main@@Base+0x11634>
   2763c:	add	r0, pc, r0
   27640:	str	r0, [sp, #12]
   27644:	ldr	r0, [pc, #556]	; 27878 <main@@Base+0x11638>
   27648:	add	r0, pc, r0
   2764c:	str	r0, [sp, #16]
   27650:	mov	r0, r5
   27654:	bl	39944 <flatcc_json_parser_union_type_vector@@Base>
   27658:	b	2772c <main@@Base+0x114ec>
   2765c:	bne	2766c <main@@Base+0x1142c>
   27660:	ldrb	r0, [r1, #2]!
   27664:	cmp	r0, #32
   27668:	bhi	27680 <main@@Base+0x11440>
   2766c:	mov	r1, r2
   27670:	mov	r0, r5
   27674:	mov	r2, r8
   27678:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2767c:	mov	r1, r0
   27680:	cmp	r9, r1
   27684:	beq	2771c <main@@Base+0x114dc>
   27688:	mov	r0, r5
   2768c:	mov	r2, r8
   27690:	add	r3, sp, #32
   27694:	bl	27894 <main@@Base+0x11654>
   27698:	ldr	r6, [sp, #32]
   2769c:	mov	r4, r0
   276a0:	cmp	r6, #0
   276a4:	beq	26e5c <main@@Base+0x10c1c>
   276a8:	ldr	r0, [r5]
   276ac:	mov	r1, #0
   276b0:	b	27708 <main@@Base+0x114c8>
   276b4:	bne	276c4 <main@@Base+0x11484>
   276b8:	ldrb	r0, [r1, #2]!
   276bc:	cmp	r0, #32
   276c0:	bhi	276d8 <main@@Base+0x11498>
   276c4:	mov	r1, r2
   276c8:	mov	r0, r5
   276cc:	mov	r2, r8
   276d0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   276d4:	mov	r1, r0
   276d8:	cmp	r9, r1
   276dc:	beq	2771c <main@@Base+0x114dc>
   276e0:	mov	r0, r5
   276e4:	mov	r2, r8
   276e8:	add	r3, sp, #32
   276ec:	bl	2add8 <main@@Base+0x14b98>
   276f0:	ldr	r6, [sp, #32]
   276f4:	mov	r4, r0
   276f8:	cmp	r6, #0
   276fc:	beq	26e5c <main@@Base+0x10c1c>
   27700:	ldr	r0, [r5]
   27704:	mov	r1, #1
   27708:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   2770c:	cmp	r0, #0
   27710:	beq	26e5c <main@@Base+0x10c1c>
   27714:	str	r6, [r0]
   27718:	b	27730 <main@@Base+0x114f0>
   2771c:	mov	r0, r5
   27720:	mov	r1, r9
   27724:	mov	r2, r8
   27728:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2772c:	mov	r4, r0
   27730:	sub	r0, r8, r4
   27734:	cmp	r0, #2
   27738:	blt	2776c <main@@Base+0x1152c>
   2773c:	ldrb	r0, [r4]
   27740:	cmp	r0, #32
   27744:	bls	27758 <main@@Base+0x11518>
   27748:	mov	r2, r4
   2774c:	cmp	r2, r8
   27750:	bne	27788 <main@@Base+0x11548>
   27754:	b	277f8 <main@@Base+0x115b8>
   27758:	bne	2776c <main@@Base+0x1152c>
   2775c:	mov	r2, r4
   27760:	ldrb	r0, [r2, #1]!
   27764:	cmp	r0, #32
   27768:	bhi	27780 <main@@Base+0x11540>
   2776c:	mov	r0, r5
   27770:	mov	r1, r4
   27774:	mov	r2, r8
   27778:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2777c:	mov	r2, r0
   27780:	cmp	r2, r8
   27784:	beq	277f8 <main@@Base+0x115b8>
   27788:	ldrb	r0, [r2]
   2778c:	cmp	r0, #44	; 0x2c
   27790:	bne	27800 <main@@Base+0x115c0>
   27794:	add	r1, r2, #1
   27798:	sub	r0, r8, r1
   2779c:	cmp	r0, #2
   277a0:	blt	277d0 <main@@Base+0x11590>
   277a4:	ldrb	r0, [r1]
   277a8:	cmp	r0, #32
   277ac:	bls	277c0 <main@@Base+0x11580>
   277b0:	mov	r2, r1
   277b4:	cmp	r2, r8
   277b8:	bne	277e8 <main@@Base+0x115a8>
   277bc:	b	2782c <main@@Base+0x115ec>
   277c0:	bne	277d0 <main@@Base+0x11590>
   277c4:	ldrb	r0, [r2, #2]!
   277c8:	cmp	r0, #32
   277cc:	bhi	277e0 <main@@Base+0x115a0>
   277d0:	mov	r0, r5
   277d4:	mov	r2, r8
   277d8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   277dc:	mov	r2, r0
   277e0:	cmp	r2, r8
   277e4:	beq	2782c <main@@Base+0x115ec>
   277e8:	ldrb	r0, [r2]
   277ec:	cmp	r0, #125	; 0x7d
   277f0:	bne	26fa0 <main@@Base+0x10d60>
   277f4:	b	27808 <main@@Base+0x115c8>
   277f8:	mov	r4, r8
   277fc:	b	26ef4 <main@@Base+0x10cb4>
   27800:	cmp	r0, #125	; 0x7d
   27804:	bne	27838 <main@@Base+0x115f8>
   27808:	add	r1, r2, #1
   2780c:	sub	r0, r8, r1
   27810:	cmp	r0, #2
   27814:	blt	27860 <main@@Base+0x11620>
   27818:	ldrb	r0, [r1]
   2781c:	cmp	r0, #32
   27820:	bls	2784c <main@@Base+0x1160c>
   27824:	mov	r4, r1
   27828:	b	26ef4 <main@@Base+0x10cb4>
   2782c:	mov	r0, r5
   27830:	mov	r1, r8
   27834:	b	27840 <main@@Base+0x11600>
   27838:	mov	r0, r5
   2783c:	mov	r1, r2
   27840:	mov	r2, r8
   27844:	mov	r3, #10
   27848:	b	26eec <main@@Base+0x10cac>
   2784c:	bne	27860 <main@@Base+0x11620>
   27850:	ldrb	r0, [r2, #2]!
   27854:	cmp	r0, #32
   27858:	mov	r4, r2
   2785c:	bhi	26ef4 <main@@Base+0x10cb4>
   27860:	mov	r0, r5
   27864:	mov	r2, r8
   27868:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2786c:	b	26ef0 <main@@Base+0x10cb0>
   27870:	strdeq	r7, [r3], -r4
   27874:			; <UNDEFINED> instruction: 0xffffcb6c
   27878:	andeq	r0, r0, r0, lsr r2
   2787c:			; <UNDEFINED> instruction: 0xffffcbd8
   27880:	mov	r1, #0
   27884:	cmp	r0, #5
   27888:	movwcc	r1, #1
   2788c:	mov	r0, r1
   27890:	bx	lr
   27894:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27898:	add	fp, sp, #28
   2789c:	sub	sp, sp, #68	; 0x44
   278a0:	mov	r9, r0
   278a4:	mov	r0, #0
   278a8:	mov	r4, r1
   278ac:	mov	r1, #3
   278b0:	mov	r6, r3
   278b4:	mov	r8, r2
   278b8:	str	r0, [r3]
   278bc:	ldr	r0, [r9]
   278c0:	bl	314c0 <flatcc_builder_start_table@@Base>
   278c4:	cmp	r0, #0
   278c8:	bne	2ad48 <main@@Base+0x14b08>
   278cc:	cmp	r4, r8
   278d0:	beq	27904 <main@@Base+0x116c4>
   278d4:	ldrb	r0, [r4]
   278d8:	cmp	r0, #123	; 0x7b
   278dc:	bne	27904 <main@@Base+0x116c4>
   278e0:	add	r1, r4, #1
   278e4:	sub	r0, r8, r1
   278e8:	cmp	r0, #2
   278ec:	blt	27934 <main@@Base+0x116f4>
   278f0:	ldrb	r0, [r1]
   278f4:	cmp	r0, #32
   278f8:	bls	27924 <main@@Base+0x116e4>
   278fc:	mov	r4, r1
   27900:	b	27944 <main@@Base+0x11704>
   27904:	mov	r0, r9
   27908:	mov	r1, r4
   2790c:	mov	r2, r8
   27910:	mov	r3, #21
   27914:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27918:	mov	r4, r0
   2791c:	add	r0, r9, #24
   27920:	b	2ad3c <main@@Base+0x14afc>
   27924:	bne	27934 <main@@Base+0x116f4>
   27928:	ldrb	r0, [r4, #2]!
   2792c:	cmp	r0, #32
   27930:	bhi	27944 <main@@Base+0x11704>
   27934:	mov	r0, r9
   27938:	mov	r2, r8
   2793c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27940:	mov	r4, r0
   27944:	cmp	r4, r8
   27948:	mov	r2, r8
   2794c:	beq	27988 <main@@Base+0x11748>
   27950:	ldrb	r0, [r4]
   27954:	cmp	r0, #125	; 0x7d
   27958:	bne	27984 <main@@Base+0x11744>
   2795c:	add	r1, r4, #1
   27960:	sub	r0, r8, r1
   27964:	cmp	r0, #2
   27968:	blt	2ad94 <main@@Base+0x14b54>
   2796c:	ldrb	r0, [r1]
   27970:	cmp	r0, #32
   27974:	bls	2ad84 <main@@Base+0x14b44>
   27978:	mov	r4, r1
   2797c:	add	r0, r9, #24
   27980:	b	2ad3c <main@@Base+0x14afc>
   27984:	mov	r2, r4
   27988:	add	r0, r9, #24
   2798c:	movw	r1, #25186	; 0x6262
   27990:	str	r9, [sp, #24]
   27994:	str	r6, [sp, #32]
   27998:	str	r0, [sp, #20]
   2799c:	add	r0, r9, #12
   279a0:	movt	r1, #25186	; 0x6262
   279a4:	str	r0, [sp, #28]
   279a8:	movw	r0, #257	; 0x101
   279ac:	movt	r0, #257	; 0x101
   279b0:	add	r0, r1, r0
   279b4:	str	r0, [sp, #16]
   279b8:	movw	r0, #514	; 0x202
   279bc:	movt	r0, #514	; 0x202
   279c0:	add	r0, r1, r0
   279c4:	str	r0, [sp, #12]
   279c8:	cmp	r2, r8
   279cc:	mov	sl, r8
   279d0:	beq	27a24 <main@@Base+0x117e4>
   279d4:	ldrb	r0, [r2]
   279d8:	cmp	r0, #46	; 0x2e
   279dc:	beq	279f8 <main@@Base+0x117b8>
   279e0:	cmp	r0, #34	; 0x22
   279e4:	bne	27a14 <main@@Base+0x117d4>
   279e8:	ldr	r0, [sp, #28]
   279ec:	mov	r1, #0
   279f0:	add	sl, r2, #1
   279f4:	b	27a20 <main@@Base+0x117e0>
   279f8:	mov	r1, r2
   279fc:	mov	r0, r9
   27a00:	mov	r2, r8
   27a04:	mov	r3, #5
   27a08:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27a0c:	mov	sl, r0
   27a10:	b	27a24 <main@@Base+0x117e4>
   27a14:	ldr	r0, [sp, #28]
   27a18:	mov	r1, #1
   27a1c:	mov	sl, r2
   27a20:	str	r1, [r0]
   27a24:	sub	r0, r8, sl
   27a28:	mov	r1, #8
   27a2c:	cmp	r0, #8
   27a30:	movcs	r0, r1
   27a34:	and	r0, r0, #15
   27a38:	sub	r1, r0, #1
   27a3c:	cmp	r1, #7
   27a40:	bhi	27ce0 <main@@Base+0x11aa0>
   27a44:	add	r6, pc, #36	; 0x24
   27a48:	mov	r0, #0
   27a4c:	mov	ip, #0
   27a50:	mov	lr, #0
   27a54:	mov	r2, #0
   27a58:	mov	r3, #0
   27a5c:	mov	r7, #0
   27a60:	mov	r5, #0
   27a64:	mov	r4, #0
   27a68:	ldr	r1, [r6, r1, lsl #2]
   27a6c:	add	pc, r6, r1
   27a70:	andeq	r0, r0, r4, rrx
   27a74:	andeq	r0, r0, ip, asr r0
   27a78:	andeq	r0, r0, r4, asr r0
   27a7c:	andeq	r0, r0, ip, asr #32
   27a80:	andeq	r0, r0, r0, asr #32
   27a84:	andeq	r0, r0, r4, lsr r0
   27a88:	andeq	r0, r0, r4, lsr #32
   27a8c:	andeq	r0, r0, r0, lsr #32
   27a90:	ldrb	ip, [sl, #7]
   27a94:	ldrb	r1, [sl, #6]
   27a98:	mov	lr, r0
   27a9c:	orr	r1, ip, r1, lsl #8
   27aa0:	mov	r0, r1
   27aa4:	ldrb	r1, [sl, #5]
   27aa8:	mov	r2, lr
   27aac:	orr	r0, r0, r1, lsl #16
   27ab0:	ldrb	r1, [sl, #4]
   27ab4:	mov	r3, r2
   27ab8:	orr	r0, r0, r1, lsl #24
   27abc:	ldrb	r1, [sl, #3]
   27ac0:	orr	r7, r1, r3
   27ac4:	ldrb	r1, [sl, #2]
   27ac8:	orr	r5, r7, r1, lsl #8
   27acc:	ldrb	r1, [sl, #1]
   27ad0:	orr	r4, r5, r1, lsl #16
   27ad4:	movw	r1, #28526	; 0x6f6e
   27ad8:	movw	r2, #29556	; 0x7374
   27adc:	movt	r1, #27251	; 0x6a73
   27ae0:	movt	r2, #29797	; 0x7465
   27ae4:	eor	r0, r0, r1
   27ae8:	ldrb	r1, [sl]
   27aec:	orr	r1, r4, r1, lsl #24
   27af0:	eor	r1, r1, r2
   27af4:	orrs	r0, r0, r1
   27af8:	bne	27ce0 <main@@Base+0x11aa0>
   27afc:	add	r1, sl, #8
   27b00:	mov	r2, #8
   27b04:	sub	r0, r8, r1
   27b08:	cmp	r0, #8
   27b0c:	movcs	r0, r2
   27b10:	and	r0, r0, #15
   27b14:	sub	r2, r0, #1
   27b18:	cmp	r2, #7
   27b1c:	bhi	27cec <main@@Base+0x11aac>
   27b20:	add	r5, pc, #36	; 0x24
   27b24:	mov	r9, #0
   27b28:	mov	ip, #0
   27b2c:	mov	lr, #0
   27b30:	mov	r7, #0
   27b34:	mov	r3, #0
   27b38:	mov	r6, #0
   27b3c:	mov	r4, #0
   27b40:	ldr	r0, [r5, r2, lsl #2]
   27b44:	mov	r2, #0
   27b48:	add	pc, r5, r0
   27b4c:	andeq	r0, r0, r4, rrx
   27b50:	andeq	r0, r0, ip, asr r0
   27b54:	andeq	r0, r0, r4, asr r0
   27b58:	andeq	r0, r0, ip, asr #32
   27b5c:	andeq	r0, r0, r0, asr #32
   27b60:	andeq	r0, r0, r4, lsr r0
   27b64:	andeq	r0, r0, r4, lsr #32
   27b68:	andeq	r0, r0, r0, lsr #32
   27b6c:	ldrb	ip, [sl, #15]
   27b70:	ldrb	r0, [sl, #14]
   27b74:	mov	lr, r9
   27b78:	orr	r0, ip, r0, lsl #8
   27b7c:	mov	r9, r0
   27b80:	ldrb	r0, [sl, #13]
   27b84:	mov	r7, lr
   27b88:	orr	r9, r9, r0, lsl #16
   27b8c:	ldrb	r0, [sl, #12]
   27b90:	mov	r3, r7
   27b94:	orr	r9, r9, r0, lsl #24
   27b98:	ldrb	r0, [sl, #11]
   27b9c:	orr	r6, r0, r3
   27ba0:	ldrb	r0, [sl, #10]
   27ba4:	orr	r4, r6, r0, lsl #8
   27ba8:	ldrb	r0, [sl, #9]
   27bac:	orr	r2, r4, r0, lsl #16
   27bb0:	ldrb	r3, [r1]
   27bb4:	movw	r0, #28769	; 0x7061
   27bb8:	movt	r0, #27000	; 0x6978
   27bbc:	eor	r0, r9, r0
   27bc0:	orr	r2, r2, r3, lsl #24
   27bc4:	movw	r3, #25958	; 0x6566
   27bc8:	movt	r3, #28786	; 0x7072
   27bcc:	eor	r2, r2, r3
   27bd0:	orrs	r0, r0, r2
   27bd4:	bne	27cec <main@@Base+0x11aac>
   27bd8:	add	ip, sl, #16
   27bdc:	mov	r0, #8
   27be0:	sub	r9, r8, ip
   27be4:	cmp	r9, #8
   27be8:	movcc	r0, r9
   27bec:	and	r0, r0, #15
   27bf0:	sub	r1, r0, #1
   27bf4:	cmp	r1, #7
   27bf8:	bhi	28058 <main@@Base+0x11e18>
   27bfc:	add	r4, pc, #28
   27c00:	mov	r0, #0
   27c04:	mov	r2, #0
   27c08:	mov	r3, #0
   27c0c:	mov	r6, #0
   27c10:	mov	r5, #0
   27c14:	ldr	r7, [r4, r1, lsl #2]
   27c18:	mov	r1, #0
   27c1c:	add	pc, r4, r7
   27c20:	andeq	r0, r0, r0, asr r0
   27c24:	andeq	r0, r0, r8, asr #32
   27c28:	andeq	r0, r0, r0, asr #32
   27c2c:	andeq	r0, r0, r8, lsr r0
   27c30:	andeq	r0, r0, r8, lsr #32
   27c34:	andeq	r0, r0, r0, lsr #32
   27c38:	andeq	r0, r0, r0, lsr #32
   27c3c:	andeq	r0, r0, r0, lsr #32
   27c40:	ldrb	r1, [sl, #21]
   27c44:	lsl	r1, r1, #16
   27c48:	ldrb	r2, [sl, #20]
   27c4c:	orr	r1, r1, r2, lsl #24
   27c50:	mov	r2, r0
   27c54:	mov	r0, r1
   27c58:	ldrb	r1, [sl, #19]
   27c5c:	orr	r3, r1, r2
   27c60:	ldrb	r1, [sl, #18]
   27c64:	orr	r6, r3, r1, lsl #8
   27c68:	ldrb	r1, [sl, #17]
   27c6c:	orr	r5, r6, r1, lsl #16
   27c70:	mov	r6, r0
   27c74:	movw	r1, #0
   27c78:	movw	r3, #26990	; 0x696e
   27c7c:	bfc	r6, #0, #16
   27c80:	movt	r1, #26418	; 0x6732
   27c84:	movt	r3, #29299	; 0x7273
   27c88:	eor	r2, r6, r1
   27c8c:	ldrb	r1, [ip]
   27c90:	orr	r1, r5, r1, lsl #24
   27c94:	eor	r5, r1, r3
   27c98:	orrs	r2, r2, r5
   27c9c:	bne	27cf8 <main@@Base+0x11ab8>
   27ca0:	cmp	r9, #7
   27ca4:	blt	28058 <main@@Base+0x11e18>
   27ca8:	ldr	r2, [sp, #28]
   27cac:	mov	r1, sl
   27cb0:	ldrb	r0, [r1, #22]!
   27cb4:	ldr	r2, [r2]
   27cb8:	cmp	r2, #0
   27cbc:	beq	27d54 <main@@Base+0x11b14>
   27cc0:	cmp	r0, #33	; 0x21
   27cc4:	bcc	27cd0 <main@@Base+0x11a90>
   27cc8:	cmp	r0, #58	; 0x3a
   27ccc:	bne	28058 <main@@Base+0x11e18>
   27cd0:	ldr	r0, [sp, #28]
   27cd4:	mov	r2, #0
   27cd8:	str	r2, [r0]
   27cdc:	b	27d60 <main@@Base+0x11b20>
   27ce0:	mov	r0, r9
   27ce4:	mov	r1, sl
   27ce8:	b	28064 <main@@Base+0x11e24>
   27cec:	ldr	r9, [sp, #24]
   27cf0:	mov	r0, r9
   27cf4:	b	28064 <main@@Base+0x11e24>
   27cf8:	cmp	r9, #6
   27cfc:	blt	27ffc <main@@Base+0x11dbc>
   27d00:	movw	r2, #26990	; 0x696e
   27d04:	and	r0, r0, #-16777216	; 0xff000000
   27d08:	movt	r2, #29299	; 0x7273
   27d0c:	eor	r0, r0, #1728053248	; 0x67000000
   27d10:	eor	r1, r1, r2
   27d14:	orrs	r0, r0, r1
   27d18:	bne	27ffc <main@@Base+0x11dbc>
   27d1c:	ldr	r2, [sp, #28]
   27d20:	mov	r1, sl
   27d24:	ldrb	r0, [r1, #21]!
   27d28:	ldr	r2, [r2]
   27d2c:	cmp	r2, #0
   27d30:	beq	27d84 <main@@Base+0x11b44>
   27d34:	cmp	r0, #33	; 0x21
   27d38:	bcc	27d44 <main@@Base+0x11b04>
   27d3c:	cmp	r0, #58	; 0x3a
   27d40:	bne	27ffc <main@@Base+0x11dbc>
   27d44:	ldr	r0, [sp, #28]
   27d48:	mov	r2, #0
   27d4c:	str	r2, [r0]
   27d50:	b	27d90 <main@@Base+0x11b50>
   27d54:	cmp	r0, #34	; 0x22
   27d58:	bne	28058 <main@@Base+0x11e18>
   27d5c:	add	r1, sl, #23
   27d60:	ldr	r5, [sp, #24]
   27d64:	sub	r0, r8, r1
   27d68:	cmp	r0, #2
   27d6c:	blt	27dc4 <main@@Base+0x11b84>
   27d70:	ldrb	r0, [r1]
   27d74:	cmp	r0, #32
   27d78:	bls	27db0 <main@@Base+0x11b70>
   27d7c:	mov	r4, r1
   27d80:	b	27ddc <main@@Base+0x11b9c>
   27d84:	cmp	r0, #34	; 0x22
   27d88:	bne	27ffc <main@@Base+0x11dbc>
   27d8c:	add	r1, sl, #22
   27d90:	sub	r0, r8, r1
   27d94:	cmp	r0, #2
   27d98:	blt	27e44 <main@@Base+0x11c04>
   27d9c:	ldrb	r0, [r1]
   27da0:	cmp	r0, #32
   27da4:	bls	27e30 <main@@Base+0x11bf0>
   27da8:	mov	r4, r1
   27dac:	b	27e5c <main@@Base+0x11c1c>
   27db0:	bne	27dc4 <main@@Base+0x11b84>
   27db4:	mov	r4, r1
   27db8:	ldrb	r0, [r4, #1]!
   27dbc:	cmp	r0, #32
   27dc0:	bhi	27ddc <main@@Base+0x11b9c>
   27dc4:	mov	r0, r5
   27dc8:	mov	r2, r8
   27dcc:	mov	r4, ip
   27dd0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27dd4:	mov	ip, r4
   27dd8:	mov	r4, r0
   27ddc:	mov	r6, ip
   27de0:	cmp	r4, r8
   27de4:	beq	27e18 <main@@Base+0x11bd8>
   27de8:	ldrb	r0, [r4]
   27dec:	cmp	r0, #58	; 0x3a
   27df0:	bne	27e18 <main@@Base+0x11bd8>
   27df4:	add	r1, r4, #1
   27df8:	sub	r0, r8, r1
   27dfc:	cmp	r0, #2
   27e00:	blt	27ec0 <main@@Base+0x11c80>
   27e04:	ldrb	r0, [r1]
   27e08:	cmp	r0, #32
   27e0c:	bls	27eb0 <main@@Base+0x11c70>
   27e10:	mov	r4, r1
   27e14:	b	27ed0 <main@@Base+0x11c90>
   27e18:	mov	r0, r5
   27e1c:	mov	r1, r4
   27e20:	mov	r2, r8
   27e24:	mov	r3, #4
   27e28:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27e2c:	b	27ecc <main@@Base+0x11c8c>
   27e30:	bne	27e44 <main@@Base+0x11c04>
   27e34:	mov	r4, r1
   27e38:	ldrb	r0, [r4, #1]!
   27e3c:	cmp	r0, #32
   27e40:	bhi	27e5c <main@@Base+0x11c1c>
   27e44:	ldr	r0, [sp, #24]
   27e48:	mov	r2, r8
   27e4c:	mov	r4, ip
   27e50:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27e54:	mov	ip, r4
   27e58:	mov	r4, r0
   27e5c:	mov	r7, ip
   27e60:	cmp	r4, r8
   27e64:	beq	27e98 <main@@Base+0x11c58>
   27e68:	ldrb	r0, [r4]
   27e6c:	cmp	r0, #58	; 0x3a
   27e70:	bne	27e98 <main@@Base+0x11c58>
   27e74:	add	r1, r4, #1
   27e78:	sub	r0, r8, r1
   27e7c:	cmp	r0, #2
   27e80:	blt	27f8c <main@@Base+0x11d4c>
   27e84:	ldrb	r0, [r1]
   27e88:	cmp	r0, #32
   27e8c:	bls	27f7c <main@@Base+0x11d3c>
   27e90:	mov	r4, r1
   27e94:	b	27f9c <main@@Base+0x11d5c>
   27e98:	ldr	r0, [sp, #24]
   27e9c:	mov	r1, r4
   27ea0:	mov	r2, r8
   27ea4:	mov	r3, #4
   27ea8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27eac:	b	27f98 <main@@Base+0x11d58>
   27eb0:	bne	27ec0 <main@@Base+0x11c80>
   27eb4:	ldrb	r0, [r4, #2]!
   27eb8:	cmp	r0, #32
   27ebc:	bhi	27ed0 <main@@Base+0x11c90>
   27ec0:	mov	r0, r5
   27ec4:	mov	r2, r8
   27ec8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27ecc:	mov	r4, r0
   27ed0:	mov	ip, r6
   27ed4:	cmp	r6, r4
   27ed8:	beq	28058 <main@@Base+0x11e18>
   27edc:	ldr	r9, [sp, #24]
   27ee0:	mov	r1, #2
   27ee4:	ldr	r0, [r9]
   27ee8:	bl	314c0 <flatcc_builder_start_table@@Base>
   27eec:	cmp	r0, #0
   27ef0:	bne	2ada8 <main@@Base+0x14b68>
   27ef4:	cmp	r4, r8
   27ef8:	beq	27f30 <main@@Base+0x11cf0>
   27efc:	ldrb	r0, [r4]
   27f00:	cmp	r0, #123	; 0x7b
   27f04:	bne	27f30 <main@@Base+0x11cf0>
   27f08:	ldr	r6, [sp, #32]
   27f0c:	add	r1, r4, #1
   27f10:	sub	r0, r8, r1
   27f14:	cmp	r0, #2
   27f18:	blt	28244 <main@@Base+0x12004>
   27f1c:	ldrb	r0, [r1]
   27f20:	cmp	r0, #32
   27f24:	bls	28234 <main@@Base+0x11ff4>
   27f28:	mov	r4, r1
   27f2c:	b	28254 <main@@Base+0x12014>
   27f30:	mov	r0, r9
   27f34:	mov	r1, r4
   27f38:	mov	r2, r8
   27f3c:	mov	r3, #21
   27f40:	bl	36078 <flatcc_json_parser_set_error@@Base>
   27f44:	ldr	r6, [sp, #32]
   27f48:	mov	r4, r0
   27f4c:	ldr	r0, [sp, #20]
   27f50:	ldr	r0, [r0]
   27f54:	cmp	r0, #0
   27f58:	bne	2ada8 <main@@Base+0x14b68>
   27f5c:	ldr	r0, [r9]
   27f60:	bl	31ef0 <flatcc_builder_end_table@@Base>
   27f64:	cmp	r0, #0
   27f68:	beq	2ada8 <main@@Base+0x14b68>
   27f6c:	mov	r7, r0
   27f70:	ldr	r0, [r9]
   27f74:	mov	r1, #1
   27f78:	b	283d8 <main@@Base+0x12198>
   27f7c:	bne	27f8c <main@@Base+0x11d4c>
   27f80:	ldrb	r0, [r4, #2]!
   27f84:	cmp	r0, #32
   27f88:	bhi	27f9c <main@@Base+0x11d5c>
   27f8c:	ldr	r0, [sp, #24]
   27f90:	mov	r2, r8
   27f94:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   27f98:	mov	r4, r0
   27f9c:	mov	ip, r7
   27fa0:	cmp	r7, r4
   27fa4:	beq	27ffc <main@@Base+0x11dbc>
   27fa8:	ldr	r9, [sp, #24]
   27fac:	mov	r1, #9
   27fb0:	ldr	r0, [r9]
   27fb4:	bl	314c0 <flatcc_builder_start_table@@Base>
   27fb8:	cmp	r0, #0
   27fbc:	bne	2ada8 <main@@Base+0x14b68>
   27fc0:	cmp	r4, r8
   27fc4:	beq	2813c <main@@Base+0x11efc>
   27fc8:	ldrb	r0, [r4]
   27fcc:	cmp	r0, #123	; 0x7b
   27fd0:	bne	2813c <main@@Base+0x11efc>
   27fd4:	ldr	r6, [sp, #32]
   27fd8:	add	r1, r4, #1
   27fdc:	sub	r0, r8, r1
   27fe0:	cmp	r0, #2
   27fe4:	blt	282b4 <main@@Base+0x12074>
   27fe8:	ldrb	r0, [r1]
   27fec:	cmp	r0, #32
   27ff0:	bls	282a4 <main@@Base+0x12064>
   27ff4:	mov	r4, r1
   27ff8:	b	282c4 <main@@Base+0x12084>
   27ffc:	movw	r0, #0
   28000:	movt	r0, #26418	; 0x6732
   28004:	add	r0, r0, #65536	; 0x10000
   28008:	eor	r0, r6, r0
   2800c:	orrs	r0, r0, r5
   28010:	bne	28058 <main@@Base+0x11e18>
   28014:	cmp	r9, #7
   28018:	ldr	r9, [sp, #24]
   2801c:	blt	2805c <main@@Base+0x11e1c>
   28020:	ldr	r2, [sp, #28]
   28024:	mov	r1, sl
   28028:	ldrb	r0, [r1, #22]!
   2802c:	ldr	r2, [r2]
   28030:	cmp	r2, #0
   28034:	beq	28188 <main@@Base+0x11f48>
   28038:	cmp	r0, #33	; 0x21
   2803c:	bcc	28048 <main@@Base+0x11e08>
   28040:	cmp	r0, #58	; 0x3a
   28044:	bne	2805c <main@@Base+0x11e1c>
   28048:	ldr	r0, [sp, #28]
   2804c:	mov	r2, #0
   28050:	str	r2, [r0]
   28054:	b	28194 <main@@Base+0x11f54>
   28058:	ldr	r9, [sp, #24]
   2805c:	mov	r0, r9
   28060:	mov	r1, ip
   28064:	mov	r2, r8
   28068:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2806c:	ldr	r6, [sp, #32]
   28070:	mov	r4, r0
   28074:	sub	r0, r8, r4
   28078:	cmp	r0, #2
   2807c:	blt	280b0 <main@@Base+0x11e70>
   28080:	ldrb	r0, [r4]
   28084:	cmp	r0, #32
   28088:	bls	2809c <main@@Base+0x11e5c>
   2808c:	mov	r2, r4
   28090:	cmp	r2, r8
   28094:	bne	280cc <main@@Base+0x11e8c>
   28098:	b	2acbc <main@@Base+0x14a7c>
   2809c:	bne	280b0 <main@@Base+0x11e70>
   280a0:	mov	r2, r4
   280a4:	ldrb	r0, [r2, #1]!
   280a8:	cmp	r0, #32
   280ac:	bhi	280c4 <main@@Base+0x11e84>
   280b0:	mov	r0, r9
   280b4:	mov	r1, r4
   280b8:	mov	r2, r8
   280bc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   280c0:	mov	r2, r0
   280c4:	cmp	r2, r8
   280c8:	beq	2acbc <main@@Base+0x14a7c>
   280cc:	ldrb	r0, [r2]
   280d0:	cmp	r0, #44	; 0x2c
   280d4:	bne	2acc4 <main@@Base+0x14a84>
   280d8:	add	r1, r2, #1
   280dc:	sub	r0, r8, r1
   280e0:	cmp	r0, #2
   280e4:	blt	28114 <main@@Base+0x11ed4>
   280e8:	ldrb	r0, [r1]
   280ec:	cmp	r0, #32
   280f0:	bls	28104 <main@@Base+0x11ec4>
   280f4:	mov	r2, r1
   280f8:	cmp	r2, r8
   280fc:	bne	2812c <main@@Base+0x11eec>
   28100:	b	2ad14 <main@@Base+0x14ad4>
   28104:	bne	28114 <main@@Base+0x11ed4>
   28108:	ldrb	r0, [r2, #2]!
   2810c:	cmp	r0, #32
   28110:	bhi	28124 <main@@Base+0x11ee4>
   28114:	mov	r0, r9
   28118:	mov	r2, r8
   2811c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28120:	mov	r2, r0
   28124:	cmp	r2, r8
   28128:	beq	2ad14 <main@@Base+0x14ad4>
   2812c:	ldrb	r0, [r2]
   28130:	cmp	r0, #125	; 0x7d
   28134:	bne	279c8 <main@@Base+0x11788>
   28138:	b	2accc <main@@Base+0x14a8c>
   2813c:	mov	r0, r9
   28140:	mov	r1, r4
   28144:	mov	r2, r8
   28148:	mov	r3, #21
   2814c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28150:	ldr	r6, [sp, #32]
   28154:	mov	r4, r0
   28158:	ldr	r0, [sp, #20]
   2815c:	ldr	r0, [r0]
   28160:	cmp	r0, #0
   28164:	bne	2ada8 <main@@Base+0x14b68>
   28168:	ldr	r0, [r9]
   2816c:	bl	31ef0 <flatcc_builder_end_table@@Base>
   28170:	cmp	r0, #0
   28174:	beq	2ada8 <main@@Base+0x14b68>
   28178:	mov	r7, r0
   2817c:	ldr	r0, [r9]
   28180:	mov	r1, #0
   28184:	b	283d8 <main@@Base+0x12198>
   28188:	cmp	r0, #34	; 0x22
   2818c:	bne	2805c <main@@Base+0x11e1c>
   28190:	add	r1, sl, #23
   28194:	sub	r0, r8, r1
   28198:	cmp	r0, #2
   2819c:	blt	281c8 <main@@Base+0x11f88>
   281a0:	ldrb	r0, [r1]
   281a4:	cmp	r0, #32
   281a8:	bls	281b4 <main@@Base+0x11f74>
   281ac:	mov	r4, r1
   281b0:	b	281e0 <main@@Base+0x11fa0>
   281b4:	bne	281c8 <main@@Base+0x11f88>
   281b8:	mov	r4, r1
   281bc:	ldrb	r0, [r4, #1]!
   281c0:	cmp	r0, #32
   281c4:	bhi	281e0 <main@@Base+0x11fa0>
   281c8:	mov	r0, r9
   281cc:	mov	r2, r8
   281d0:	mov	r4, ip
   281d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   281d8:	mov	ip, r4
   281dc:	mov	r4, r0
   281e0:	mov	r5, ip
   281e4:	cmp	r4, r8
   281e8:	beq	2821c <main@@Base+0x11fdc>
   281ec:	ldrb	r0, [r4]
   281f0:	cmp	r0, #58	; 0x3a
   281f4:	bne	2821c <main@@Base+0x11fdc>
   281f8:	add	r1, r4, #1
   281fc:	sub	r0, r8, r1
   28200:	cmp	r0, #2
   28204:	blt	28324 <main@@Base+0x120e4>
   28208:	ldrb	r0, [r1]
   2820c:	cmp	r0, #32
   28210:	bls	28314 <main@@Base+0x120d4>
   28214:	mov	r4, r1
   28218:	b	28334 <main@@Base+0x120f4>
   2821c:	mov	r0, r9
   28220:	mov	r1, r4
   28224:	mov	r2, r8
   28228:	mov	r3, #4
   2822c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28230:	b	28330 <main@@Base+0x120f0>
   28234:	bne	28244 <main@@Base+0x12004>
   28238:	ldrb	r0, [r4, #2]!
   2823c:	cmp	r0, #32
   28240:	bhi	28254 <main@@Base+0x12014>
   28244:	mov	r0, r9
   28248:	mov	r2, r8
   2824c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28250:	mov	r4, r0
   28254:	cmp	r4, r8
   28258:	mov	r2, r8
   2825c:	beq	28e78 <main@@Base+0x12c38>
   28260:	ldrb	r0, [r4]
   28264:	cmp	r0, #125	; 0x7d
   28268:	bne	2829c <main@@Base+0x1205c>
   2826c:	add	r1, r4, #1
   28270:	sub	r0, r8, r1
   28274:	cmp	r0, #2
   28278:	blt	29638 <main@@Base+0x133f8>
   2827c:	ldrb	r0, [r1]
   28280:	cmp	r0, #32
   28284:	bhi	295f8 <main@@Base+0x133b8>
   28288:	bne	29638 <main@@Base+0x133f8>
   2828c:	ldrb	r0, [r4, #2]!
   28290:	cmp	r0, #32
   28294:	bls	29638 <main@@Base+0x133f8>
   28298:	b	27f4c <main@@Base+0x11d0c>
   2829c:	mov	r2, r4
   282a0:	b	28e78 <main@@Base+0x12c38>
   282a4:	bne	282b4 <main@@Base+0x12074>
   282a8:	ldrb	r0, [r4, #2]!
   282ac:	cmp	r0, #32
   282b0:	bhi	282c4 <main@@Base+0x12084>
   282b4:	mov	r0, r9
   282b8:	mov	r2, r8
   282bc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   282c0:	mov	r4, r0
   282c4:	cmp	r4, r8
   282c8:	mov	r2, r8
   282cc:	beq	29758 <main@@Base+0x13518>
   282d0:	ldrb	r0, [r4]
   282d4:	cmp	r0, #125	; 0x7d
   282d8:	bne	2830c <main@@Base+0x120cc>
   282dc:	add	r1, r4, #1
   282e0:	sub	r0, r8, r1
   282e4:	cmp	r0, #2
   282e8:	blt	2acac <main@@Base+0x14a6c>
   282ec:	ldrb	r0, [r1]
   282f0:	cmp	r0, #32
   282f4:	bhi	2ac6c <main@@Base+0x14a2c>
   282f8:	bne	2acac <main@@Base+0x14a6c>
   282fc:	ldrb	r0, [r4, #2]!
   28300:	cmp	r0, #32
   28304:	bhi	28158 <main@@Base+0x11f18>
   28308:	b	2acac <main@@Base+0x14a6c>
   2830c:	mov	r2, r4
   28310:	b	29758 <main@@Base+0x13518>
   28314:	bne	28324 <main@@Base+0x120e4>
   28318:	ldrb	r0, [r4, #2]!
   2831c:	cmp	r0, #32
   28320:	bhi	28334 <main@@Base+0x120f4>
   28324:	mov	r0, r9
   28328:	mov	r2, r8
   2832c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28330:	mov	r4, r0
   28334:	mov	ip, r5
   28338:	cmp	r5, r4
   2833c:	beq	2805c <main@@Base+0x11e1c>
   28340:	ldr	r0, [r9]
   28344:	mov	r1, #2
   28348:	bl	314c0 <flatcc_builder_start_table@@Base>
   2834c:	cmp	r0, #0
   28350:	bne	2ada8 <main@@Base+0x14b68>
   28354:	cmp	r4, r8
   28358:	beq	28390 <main@@Base+0x12150>
   2835c:	ldrb	r0, [r4]
   28360:	cmp	r0, #123	; 0x7b
   28364:	bne	28390 <main@@Base+0x12150>
   28368:	ldr	r6, [sp, #32]
   2836c:	add	r1, r4, #1
   28370:	sub	r0, r8, r1
   28374:	cmp	r0, #2
   28378:	blt	283fc <main@@Base+0x121bc>
   2837c:	ldrb	r0, [r1]
   28380:	cmp	r0, #32
   28384:	bls	283ec <main@@Base+0x121ac>
   28388:	mov	r4, r1
   2838c:	b	2840c <main@@Base+0x121cc>
   28390:	mov	r0, r9
   28394:	mov	r1, r4
   28398:	mov	r2, r8
   2839c:	mov	r3, #21
   283a0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   283a4:	ldr	r6, [sp, #32]
   283a8:	mov	r4, r0
   283ac:	ldr	r0, [sp, #20]
   283b0:	ldr	r0, [r0]
   283b4:	cmp	r0, #0
   283b8:	bne	2ada8 <main@@Base+0x14b68>
   283bc:	ldr	r0, [r9]
   283c0:	bl	31ef0 <flatcc_builder_end_table@@Base>
   283c4:	cmp	r0, #0
   283c8:	beq	2ada8 <main@@Base+0x14b68>
   283cc:	mov	r7, r0
   283d0:	ldr	r0, [r9]
   283d4:	mov	r1, #2
   283d8:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   283dc:	cmp	r0, #0
   283e0:	beq	2ad48 <main@@Base+0x14b08>
   283e4:	str	r7, [r0]
   283e8:	b	28074 <main@@Base+0x11e34>
   283ec:	bne	283fc <main@@Base+0x121bc>
   283f0:	ldrb	r0, [r4, #2]!
   283f4:	cmp	r0, #32
   283f8:	bhi	2840c <main@@Base+0x121cc>
   283fc:	mov	r0, r9
   28400:	mov	r2, r8
   28404:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28408:	mov	r4, r0
   2840c:	cmp	r4, r8
   28410:	mov	r2, r8
   28414:	beq	28764 <main@@Base+0x12524>
   28418:	ldrb	r0, [r4]
   2841c:	cmp	r0, #125	; 0x7d
   28420:	bne	28454 <main@@Base+0x12214>
   28424:	add	r1, r4, #1
   28428:	sub	r0, r8, r1
   2842c:	cmp	r0, #2
   28430:	blt	2966c <main@@Base+0x1342c>
   28434:	ldrb	r0, [r1]
   28438:	cmp	r0, #32
   2843c:	bhi	28d38 <main@@Base+0x12af8>
   28440:	bne	2966c <main@@Base+0x1342c>
   28444:	ldrb	r0, [r4, #2]!
   28448:	cmp	r0, #32
   2844c:	bls	2966c <main@@Base+0x1342c>
   28450:	b	283ac <main@@Base+0x1216c>
   28454:	mov	r2, r4
   28458:	b	28764 <main@@Base+0x12524>
   2845c:	ldr	r0, [sp, #24]
   28460:	mov	r1, r7
   28464:	mov	r2, r8
   28468:	mov	r3, #4
   2846c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28470:	b	28634 <main@@Base+0x123f4>
   28474:	ldr	r9, [sp, #24]
   28478:	ldr	r6, [sp, #32]
   2847c:	ldr	r4, [sp, #8]
   28480:	bne	28490 <main@@Base+0x12250>
   28484:	ldrb	r0, [r7, #2]!
   28488:	cmp	r0, #32
   2848c:	bhi	284a0 <main@@Base+0x12260>
   28490:	mov	r0, r9
   28494:	mov	r2, r8
   28498:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2849c:	mov	r7, r0
   284a0:	cmp	r4, r7
   284a4:	beq	28bb4 <main@@Base+0x12974>
   284a8:	mov	r6, #0
   284ac:	cmp	r7, r8
   284b0:	str	r6, [fp, #-36]	; 0xffffffdc
   284b4:	str	r6, [fp, #-40]	; 0xffffffd8
   284b8:	str	r6, [sp, #44]	; 0x2c
   284bc:	str	r6, [sp, #40]	; 0x28
   284c0:	str	r6, [fp, #-44]	; 0xffffffd4
   284c4:	beq	28524 <main@@Base+0x122e4>
   284c8:	sub	r0, fp, #40	; 0x28
   284cc:	mov	r1, r7
   284d0:	mov	r2, r8
   284d4:	sub	r3, fp, #44	; 0x2c
   284d8:	str	r0, [sp]
   284dc:	mov	r0, r9
   284e0:	bl	38410 <flatcc_json_parser_integer@@Base>
   284e4:	cmp	r0, r7
   284e8:	beq	28538 <main@@Base+0x122f8>
   284ec:	mov	r4, r0
   284f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   284f4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   284f8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   284fc:	cmp	r0, #0
   28500:	beq	28548 <main@@Base+0x12308>
   28504:	subs	r0, r6, #1
   28508:	sbcs	r0, r5, #-2147483648	; 0x80000000
   2850c:	bcc	28580 <main@@Base+0x12340>
   28510:	ldr	r9, [sp, #24]
   28514:	mov	r1, r4
   28518:	mov	r2, r8
   2851c:	mov	r3, #8
   28520:	b	28560 <main@@Base+0x12320>
   28524:	mov	r5, #0
   28528:	mov	r4, r8
   2852c:	cmp	r7, r4
   28530:	bne	285d8 <main@@Base+0x12398>
   28534:	b	2859c <main@@Base+0x1235c>
   28538:	mov	r6, #0
   2853c:	mov	r5, #0
   28540:	mov	r4, r7
   28544:	b	28590 <main@@Base+0x12350>
   28548:	cmn	r5, #1
   2854c:	bgt	28588 <main@@Base+0x12348>
   28550:	ldr	r9, [sp, #24]
   28554:	mov	r1, r4
   28558:	mov	r2, r8
   2855c:	mov	r3, #7
   28560:	mov	r0, r9
   28564:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28568:	mov	r4, r0
   2856c:	mov	r6, #0
   28570:	mov	r5, #0
   28574:	cmp	r7, r4
   28578:	bne	285d8 <main@@Base+0x12398>
   2857c:	b	2859c <main@@Base+0x1235c>
   28580:	rsbs	r6, r6, #0
   28584:	rsc	r5, r5, #0
   28588:	str	r6, [sp, #40]	; 0x28
   2858c:	str	r5, [sp, #44]	; 0x2c
   28590:	ldr	r9, [sp, #24]
   28594:	cmp	r7, r4
   28598:	bne	285d8 <main@@Base+0x12398>
   2859c:	add	r0, sp, #40	; 0x28
   285a0:	mov	r1, r7
   285a4:	mov	r2, r8
   285a8:	str	r0, [sp]
   285ac:	mov	r0, r9
   285b0:	ldr	r3, [pc, #4056]	; 29590 <main@@Base+0x13350>
   285b4:	add	r3, pc, r3
   285b8:	bl	25c0c <main@@Base+0xf9cc>
   285bc:	mov	r4, r0
   285c0:	cmp	r0, r7
   285c4:	cmpne	r4, r8
   285c8:	beq	2ada4 <main@@Base+0x14b64>
   285cc:	ldr	r6, [sp, #40]	; 0x28
   285d0:	ldr	r5, [sp, #44]	; 0x2c
   285d4:	ldr	r9, [sp, #24]
   285d8:	orrs	r0, r6, r5
   285dc:	bne	285ec <main@@Base+0x123ac>
   285e0:	ldrb	r0, [r9, #8]
   285e4:	tst	r0, #2
   285e8:	beq	28750 <main@@Base+0x12510>
   285ec:	ldr	r0, [r9]
   285f0:	mov	r1, #0
   285f4:	mov	r2, #8
   285f8:	mov	r3, #8
   285fc:	bl	32964 <flatcc_builder_table_add@@Base>
   28600:	cmp	r0, #0
   28604:	beq	2ada4 <main@@Base+0x14b64>
   28608:	str	r6, [r0]
   2860c:	str	r5, [r0, #4]
   28610:	b	28750 <main@@Base+0x12510>
   28614:	ldr	r6, [sp, #32]
   28618:	bne	28628 <main@@Base+0x123e8>
   2861c:	ldrb	r0, [r7, #2]!
   28620:	cmp	r0, #32
   28624:	bhi	28638 <main@@Base+0x123f8>
   28628:	ldr	r0, [sp, #24]
   2862c:	mov	r2, r8
   28630:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28634:	mov	r7, r0
   28638:	cmp	r9, r7
   2863c:	beq	28c40 <main@@Base+0x12a00>
   28640:	mov	r5, #0
   28644:	cmp	r7, r8
   28648:	str	r5, [fp, #-36]	; 0xffffffdc
   2864c:	str	r5, [fp, #-40]	; 0xffffffd8
   28650:	str	r5, [fp, #-44]	; 0xffffffd4
   28654:	str	r5, [sp, #40]	; 0x28
   28658:	beq	286a4 <main@@Base+0x12464>
   2865c:	sub	r0, fp, #40	; 0x28
   28660:	mov	r1, r7
   28664:	mov	r2, r8
   28668:	add	r3, sp, #40	; 0x28
   2866c:	str	r0, [sp]
   28670:	ldr	r0, [sp, #24]
   28674:	bl	38410 <flatcc_json_parser_integer@@Base>
   28678:	cmp	r0, r7
   2867c:	beq	286ac <main@@Base+0x1246c>
   28680:	mov	r4, r0
   28684:	ldr	r0, [sp, #40]	; 0x28
   28688:	cmp	r0, #0
   2868c:	beq	286b4 <main@@Base+0x12474>
   28690:	ldr	r0, [sp, #24]
   28694:	mov	r1, r4
   28698:	mov	r2, r8
   2869c:	mov	r3, #8
   286a0:	b	286d0 <main@@Base+0x12490>
   286a4:	mov	r4, r8
   286a8:	b	286d8 <main@@Base+0x12498>
   286ac:	mov	r4, r7
   286b0:	b	286d8 <main@@Base+0x12498>
   286b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   286b8:	cmp	r0, #0
   286bc:	beq	28758 <main@@Base+0x12518>
   286c0:	ldr	r0, [sp, #24]
   286c4:	mov	r1, r4
   286c8:	mov	r2, r8
   286cc:	mov	r3, #7
   286d0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   286d4:	mov	r4, r0
   286d8:	ldr	r9, [sp, #24]
   286dc:	cmp	r7, r4
   286e0:	bne	2871c <main@@Base+0x124dc>
   286e4:	sub	r0, fp, #44	; 0x2c
   286e8:	mov	r1, r7
   286ec:	mov	r2, r8
   286f0:	str	r0, [sp]
   286f4:	mov	r0, r9
   286f8:	ldr	r3, [pc, #3996]	; 2969c <main@@Base+0x1345c>
   286fc:	add	r3, pc, r3
   28700:	bl	25e28 <main@@Base+0xfbe8>
   28704:	mov	r4, r0
   28708:	cmp	r0, r7
   2870c:	cmpne	r4, r8
   28710:	beq	2ada4 <main@@Base+0x14b64>
   28714:	ldr	r5, [fp, #-44]	; 0xffffffd4
   28718:	ldr	r9, [sp, #24]
   2871c:	cmp	r5, #0
   28720:	bne	28730 <main@@Base+0x124f0>
   28724:	ldrb	r0, [r9, #8]
   28728:	tst	r0, #2
   2872c:	beq	28750 <main@@Base+0x12510>
   28730:	ldr	r0, [r9]
   28734:	mov	r1, #1
   28738:	mov	r2, #4
   2873c:	mov	r3, #4
   28740:	bl	32964 <flatcc_builder_table_add@@Base>
   28744:	cmp	r0, #0
   28748:	beq	2ada4 <main@@Base+0x14b64>
   2874c:	str	r5, [r0]
   28750:	ldr	r6, [sp, #32]
   28754:	b	28c58 <main@@Base+0x12a18>
   28758:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2875c:	str	r5, [fp, #-44]	; 0xffffffd4
   28760:	b	286d8 <main@@Base+0x12498>
   28764:	cmp	r2, r8
   28768:	mov	r1, r8
   2876c:	beq	287c4 <main@@Base+0x12584>
   28770:	ldrb	r0, [r2]
   28774:	cmp	r0, #46	; 0x2e
   28778:	beq	28798 <main@@Base+0x12558>
   2877c:	cmp	r0, #34	; 0x22
   28780:	bne	287b4 <main@@Base+0x12574>
   28784:	ldr	r0, [sp, #28]
   28788:	mov	r1, #0
   2878c:	str	r1, [r0]
   28790:	add	r1, r2, #1
   28794:	b	287c4 <main@@Base+0x12584>
   28798:	mov	r1, r2
   2879c:	mov	r0, r9
   287a0:	mov	r2, r8
   287a4:	mov	r3, #5
   287a8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   287ac:	mov	r1, r0
   287b0:	b	287c4 <main@@Base+0x12584>
   287b4:	ldr	r0, [sp, #28]
   287b8:	mov	r1, #1
   287bc:	str	r1, [r0]
   287c0:	mov	r1, r2
   287c4:	sub	r0, r8, r1
   287c8:	mov	r2, #8
   287cc:	cmp	r0, #8
   287d0:	movcs	r0, r2
   287d4:	and	r0, r0, #15
   287d8:	sub	r2, r0, #1
   287dc:	cmp	r2, #7
   287e0:	bhi	28a74 <main@@Base+0x12834>
   287e4:	add	r5, pc, #36	; 0x24
   287e8:	mov	r9, #0
   287ec:	mov	ip, #0
   287f0:	mov	lr, #0
   287f4:	mov	sl, #0
   287f8:	mov	r3, #0
   287fc:	mov	r7, #0
   28800:	mov	r4, #0
   28804:	ldr	r0, [r5, r2, lsl #2]
   28808:	mov	r2, #0
   2880c:	add	pc, r5, r0
   28810:	andeq	r0, r0, r4, rrx
   28814:	andeq	r0, r0, ip, asr r0
   28818:	andeq	r0, r0, r4, asr r0
   2881c:	andeq	r0, r0, ip, asr #32
   28820:	andeq	r0, r0, r0, asr #32
   28824:	andeq	r0, r0, r4, lsr r0
   28828:	andeq	r0, r0, r4, lsr #32
   2882c:	andeq	r0, r0, r0, lsr #32
   28830:	ldrb	ip, [r1, #7]
   28834:	ldrb	r0, [r1, #6]
   28838:	mov	lr, r9
   2883c:	orr	r0, ip, r0, lsl #8
   28840:	mov	r9, r0
   28844:	ldrb	r0, [r1, #5]
   28848:	mov	sl, lr
   2884c:	orr	r9, r9, r0, lsl #16
   28850:	ldrb	r0, [r1, #4]
   28854:	mov	r3, sl
   28858:	orr	r9, r9, r0, lsl #24
   2885c:	ldrb	r0, [r1, #3]
   28860:	orr	r7, r0, r3
   28864:	ldrb	r0, [r1, #2]
   28868:	orr	r4, r7, r0, lsl #8
   2886c:	ldrb	r0, [r1, #1]
   28870:	orr	r2, r4, r0, lsl #16
   28874:	ldrb	r3, [r1]
   28878:	movw	r0, #25186	; 0x6262
   2887c:	movt	r0, #24418	; 0x5f62
   28880:	eor	r0, r9, r0
   28884:	ldr	r9, [sp, #24]
   28888:	orr	r2, r2, r3, lsl #24
   2888c:	movw	r3, #24929	; 0x6161
   28890:	movt	r3, #24929	; 0x6161
   28894:	eor	r2, r2, r3
   28898:	orrs	r0, r0, r2
   2889c:	bne	28a74 <main@@Base+0x12834>
   288a0:	add	r4, r1, #8
   288a4:	mov	r0, #8
   288a8:	sub	lr, r8, r4
   288ac:	cmp	lr, #8
   288b0:	movcc	r0, lr
   288b4:	and	r0, r0, #15
   288b8:	sub	r0, r0, #1
   288bc:	cmp	r0, #7
   288c0:	bhi	28bb4 <main@@Base+0x12974>
   288c4:	str	r4, [sp, #8]
   288c8:	add	r4, pc, #36	; 0x24
   288cc:	mov	r2, #0
   288d0:	mov	ip, #0
   288d4:	mov	sl, #0
   288d8:	mov	r6, #0
   288dc:	mov	r7, #0
   288e0:	mov	r5, #0
   288e4:	mov	r3, #0
   288e8:	ldr	r9, [r4, r0, lsl #2]
   288ec:	mov	r0, #0
   288f0:	add	pc, r4, r9
   288f4:	andeq	r0, r0, r4, rrx
   288f8:	andeq	r0, r0, ip, asr r0
   288fc:	andeq	r0, r0, r4, asr r0
   28900:	andeq	r0, r0, ip, asr #32
   28904:	andeq	r0, r0, r0, asr #32
   28908:	andeq	r0, r0, r4, lsr r0
   2890c:	andeq	r0, r0, r4, lsr #32
   28910:	andeq	r0, r0, r0, lsr #32
   28914:	ldrb	ip, [r1, #15]
   28918:	ldrb	r0, [r1, #14]
   2891c:	mov	sl, r2
   28920:	orr	r0, ip, r0, lsl #8
   28924:	mov	r2, r0
   28928:	ldrb	r0, [r1, #13]
   2892c:	mov	r6, sl
   28930:	orr	r2, r2, r0, lsl #16
   28934:	ldrb	r0, [r1, #12]
   28938:	mov	r7, r6
   2893c:	orr	r2, r2, r0, lsl #24
   28940:	ldrb	r0, [r1, #11]
   28944:	orr	r5, r0, r7
   28948:	ldrb	r0, [r1, #10]
   2894c:	orr	r3, r5, r0, lsl #8
   28950:	ldrb	r0, [r1, #9]
   28954:	orr	r0, r3, r0, lsl #16
   28958:	ldr	r4, [sp, #8]
   2895c:	movw	r3, #29791	; 0x745f
   28960:	movt	r3, #24946	; 0x6172
   28964:	eor	r3, r2, r3
   28968:	ldrb	r7, [r4]
   2896c:	orr	r0, r0, r7, lsl #24
   28970:	movw	r7, #29556	; 0x7374
   28974:	movt	r7, #25183	; 0x625f
   28978:	eor	r0, r0, r7
   2897c:	orrs	r3, r3, r0
   28980:	bne	28a7c <main@@Base+0x1283c>
   28984:	add	r9, r1, #16
   28988:	mov	r2, #8
   2898c:	ldr	r6, [sp, #32]
   28990:	sub	ip, r8, r9
   28994:	cmp	ip, #8
   28998:	movcc	r2, ip
   2899c:	and	r2, r2, #15
   289a0:	sub	r3, r2, #1
   289a4:	cmp	r3, #7
   289a8:	bhi	28c40 <main@@Base+0x12a00>
   289ac:	add	r4, pc, #24
   289b0:	mov	lr, #0
   289b4:	mov	r7, #0
   289b8:	mov	r2, #0
   289bc:	mov	r5, #0
   289c0:	ldr	r0, [r4, r3, lsl #2]
   289c4:	mov	r3, #0
   289c8:	add	pc, r4, r0
   289cc:	andeq	r0, r0, r4, asr #32
   289d0:	andeq	r0, r0, ip, lsr r0
   289d4:	andeq	r0, r0, r4, lsr r0
   289d8:	andeq	r0, r0, r8, lsr #32
   289dc:	andeq	r0, r0, r0, lsr #32
   289e0:	andeq	r0, r0, r0, lsr #32
   289e4:	andeq	r0, r0, r0, lsr #32
   289e8:	andeq	r0, r0, r0, lsr #32
   289ec:	ldrb	r0, [r1, #20]
   289f0:	lsl	r3, r0, #24
   289f4:	ldrb	r0, [r1, #19]
   289f8:	orr	r7, r0, lr
   289fc:	mov	lr, r3
   28a00:	ldrb	r0, [r1, #18]
   28a04:	orr	r2, r7, r0, lsl #8
   28a08:	ldrb	r0, [r1, #17]
   28a0c:	orr	r5, r2, r0, lsl #16
   28a10:	ldrb	r0, [r9]
   28a14:	movw	r2, #25968	; 0x6570
   28a18:	movt	r2, #29556	; 0x7374
   28a1c:	orr	r0, r5, r0, lsl #24
   28a20:	eor	r0, r0, r2
   28a24:	and	r2, lr, #-16777216	; 0xff000000
   28a28:	eor	r2, r2, #1929379840	; 0x73000000
   28a2c:	orrs	r0, r2, r0
   28a30:	bne	28c40 <main@@Base+0x12a00>
   28a34:	cmp	ip, #6
   28a38:	blt	28c40 <main@@Base+0x12a00>
   28a3c:	ldr	r3, [sp, #28]
   28a40:	mov	r2, r1
   28a44:	ldrb	r0, [r2, #21]!
   28a48:	ldr	r3, [r3]
   28a4c:	cmp	r3, #0
   28a50:	beq	28b10 <main@@Base+0x128d0>
   28a54:	cmp	r0, #33	; 0x21
   28a58:	bcc	28a64 <main@@Base+0x12824>
   28a5c:	cmp	r0, #58	; 0x3a
   28a60:	bne	28c40 <main@@Base+0x12a00>
   28a64:	ldr	r0, [sp, #28]
   28a68:	mov	r1, #0
   28a6c:	str	r1, [r0]
   28a70:	b	28b1c <main@@Base+0x128dc>
   28a74:	mov	r0, r9
   28a78:	b	28c4c <main@@Base+0x12a0c>
   28a7c:	movw	r3, #29440	; 0x7300
   28a80:	ldr	r9, [sp, #24]
   28a84:	ldr	r6, [sp, #32]
   28a88:	bic	r2, r2, #255	; 0xff
   28a8c:	movt	r3, #25968	; 0x6570
   28a90:	eor	r2, r2, r3
   28a94:	orrs	r0, r2, r0
   28a98:	bne	28bb4 <main@@Base+0x12974>
   28a9c:	cmp	lr, #8
   28aa0:	blt	28bb4 <main@@Base+0x12974>
   28aa4:	ldr	r3, [sp, #28]
   28aa8:	mov	r2, r1
   28aac:	ldrb	r0, [r2, #15]!
   28ab0:	ldr	r3, [r3]
   28ab4:	cmp	r3, #0
   28ab8:	beq	28adc <main@@Base+0x1289c>
   28abc:	cmp	r0, #33	; 0x21
   28ac0:	bcc	28acc <main@@Base+0x1288c>
   28ac4:	cmp	r0, #58	; 0x3a
   28ac8:	bne	28bb4 <main@@Base+0x12974>
   28acc:	ldr	r0, [sp, #28]
   28ad0:	mov	r1, #0
   28ad4:	str	r1, [r0]
   28ad8:	b	28ae8 <main@@Base+0x128a8>
   28adc:	cmp	r0, #34	; 0x22
   28ae0:	bne	28bb4 <main@@Base+0x12974>
   28ae4:	add	r2, r1, #16
   28ae8:	sub	r0, r8, r2
   28aec:	cmp	r0, #2
   28af0:	blt	28b58 <main@@Base+0x12918>
   28af4:	ldrb	r0, [r2]
   28af8:	cmp	r0, #32
   28afc:	bls	28b44 <main@@Base+0x12904>
   28b00:	mov	r7, r2
   28b04:	cmp	r7, r8
   28b08:	bne	28b74 <main@@Base+0x12934>
   28b0c:	b	28bc0 <main@@Base+0x12980>
   28b10:	cmp	r0, #34	; 0x22
   28b14:	bne	28c40 <main@@Base+0x12a00>
   28b18:	add	r2, r1, #22
   28b1c:	sub	r0, r8, r2
   28b20:	cmp	r0, #2
   28b24:	blt	28bec <main@@Base+0x129ac>
   28b28:	ldrb	r0, [r2]
   28b2c:	cmp	r0, #32
   28b30:	bls	28bd8 <main@@Base+0x12998>
   28b34:	mov	r7, r2
   28b38:	cmp	r7, r8
   28b3c:	bne	28c08 <main@@Base+0x129c8>
   28b40:	b	2845c <main@@Base+0x1221c>
   28b44:	bne	28b58 <main@@Base+0x12918>
   28b48:	mov	r7, r2
   28b4c:	ldrb	r0, [r7, #1]!
   28b50:	cmp	r0, #32
   28b54:	bhi	28b6c <main@@Base+0x1292c>
   28b58:	mov	r1, r2
   28b5c:	mov	r0, r9
   28b60:	mov	r2, r8
   28b64:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28b68:	mov	r7, r0
   28b6c:	cmp	r7, r8
   28b70:	beq	28bc0 <main@@Base+0x12980>
   28b74:	ldrb	r0, [r7]
   28b78:	cmp	r0, #58	; 0x3a
   28b7c:	bne	28bc0 <main@@Base+0x12980>
   28b80:	add	r1, r7, #1
   28b84:	sub	r0, r8, r1
   28b88:	cmp	r0, #2
   28b8c:	blt	28490 <main@@Base+0x12250>
   28b90:	ldrb	r0, [r1]
   28b94:	cmp	r0, #32
   28b98:	bls	28474 <main@@Base+0x12234>
   28b9c:	ldr	r9, [sp, #24]
   28ba0:	ldr	r6, [sp, #32]
   28ba4:	ldr	r4, [sp, #8]
   28ba8:	mov	r7, r1
   28bac:	cmp	r4, r7
   28bb0:	bne	284a8 <main@@Base+0x12268>
   28bb4:	mov	r0, r9
   28bb8:	mov	r1, r4
   28bbc:	b	28c4c <main@@Base+0x12a0c>
   28bc0:	mov	r0, r9
   28bc4:	mov	r1, r7
   28bc8:	mov	r2, r8
   28bcc:	mov	r3, #4
   28bd0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28bd4:	b	2849c <main@@Base+0x1225c>
   28bd8:	bne	28bec <main@@Base+0x129ac>
   28bdc:	mov	r7, r2
   28be0:	ldrb	r0, [r7, #1]!
   28be4:	cmp	r0, #32
   28be8:	bhi	28c00 <main@@Base+0x129c0>
   28bec:	ldr	r0, [sp, #24]
   28bf0:	mov	r1, r2
   28bf4:	mov	r2, r8
   28bf8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28bfc:	mov	r7, r0
   28c00:	cmp	r7, r8
   28c04:	beq	2845c <main@@Base+0x1221c>
   28c08:	ldrb	r0, [r7]
   28c0c:	cmp	r0, #58	; 0x3a
   28c10:	bne	2845c <main@@Base+0x1221c>
   28c14:	add	r1, r7, #1
   28c18:	sub	r0, r8, r1
   28c1c:	cmp	r0, #2
   28c20:	blt	28628 <main@@Base+0x123e8>
   28c24:	ldrb	r0, [r1]
   28c28:	cmp	r0, #32
   28c2c:	bls	28614 <main@@Base+0x123d4>
   28c30:	ldr	r6, [sp, #32]
   28c34:	mov	r7, r1
   28c38:	cmp	r9, r7
   28c3c:	bne	28640 <main@@Base+0x12400>
   28c40:	ldr	r0, [sp, #24]
   28c44:	mov	r1, r9
   28c48:	mov	r9, r0
   28c4c:	mov	r2, r8
   28c50:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   28c54:	mov	r4, r0
   28c58:	sub	r0, r8, r4
   28c5c:	cmp	r0, #2
   28c60:	blt	28c94 <main@@Base+0x12a54>
   28c64:	ldrb	r0, [r4]
   28c68:	cmp	r0, #32
   28c6c:	bls	28c80 <main@@Base+0x12a40>
   28c70:	mov	r2, r4
   28c74:	cmp	r2, r8
   28c78:	bne	28cb0 <main@@Base+0x12a70>
   28c7c:	b	28d40 <main@@Base+0x12b00>
   28c80:	bne	28c94 <main@@Base+0x12a54>
   28c84:	mov	r2, r4
   28c88:	ldrb	r0, [r2, #1]!
   28c8c:	cmp	r0, #32
   28c90:	bhi	28ca8 <main@@Base+0x12a68>
   28c94:	mov	r0, r9
   28c98:	mov	r1, r4
   28c9c:	mov	r2, r8
   28ca0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28ca4:	mov	r2, r0
   28ca8:	cmp	r2, r8
   28cac:	beq	28d40 <main@@Base+0x12b00>
   28cb0:	ldrb	r0, [r2]
   28cb4:	cmp	r0, #44	; 0x2c
   28cb8:	bne	28d48 <main@@Base+0x12b08>
   28cbc:	add	r1, r2, #1
   28cc0:	sub	r0, r8, r1
   28cc4:	cmp	r0, #2
   28cc8:	blt	28cf8 <main@@Base+0x12ab8>
   28ccc:	ldrb	r0, [r1]
   28cd0:	cmp	r0, #32
   28cd4:	bls	28ce8 <main@@Base+0x12aa8>
   28cd8:	mov	r2, r1
   28cdc:	cmp	r2, r8
   28ce0:	bne	28d10 <main@@Base+0x12ad0>
   28ce4:	b	28d7c <main@@Base+0x12b3c>
   28ce8:	bne	28cf8 <main@@Base+0x12ab8>
   28cec:	ldrb	r0, [r2, #2]!
   28cf0:	cmp	r0, #32
   28cf4:	bhi	28d08 <main@@Base+0x12ac8>
   28cf8:	mov	r0, r9
   28cfc:	mov	r2, r8
   28d00:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   28d04:	mov	r2, r0
   28d08:	cmp	r2, r8
   28d0c:	beq	28d7c <main@@Base+0x12b3c>
   28d10:	ldrb	r0, [r2]
   28d14:	cmp	r0, #125	; 0x7d
   28d18:	bne	28764 <main@@Base+0x12524>
   28d1c:	add	r1, r2, #1
   28d20:	sub	r0, r8, r1
   28d24:	cmp	r0, #2
   28d28:	blt	2966c <main@@Base+0x1342c>
   28d2c:	ldrb	r0, [r1]
   28d30:	cmp	r0, #32
   28d34:	bls	29648 <main@@Base+0x13408>
   28d38:	mov	r4, r1
   28d3c:	b	283ac <main@@Base+0x1216c>
   28d40:	mov	r4, r8
   28d44:	b	283ac <main@@Base+0x1216c>
   28d48:	cmp	r0, #125	; 0x7d
   28d4c:	bne	28d88 <main@@Base+0x12b48>
   28d50:	add	r1, r2, #1
   28d54:	sub	r0, r8, r1
   28d58:	cmp	r0, #2
   28d5c:	blt	2966c <main@@Base+0x1342c>
   28d60:	ldrb	r0, [r1]
   28d64:	cmp	r0, #32
   28d68:	bls	29650 <main@@Base+0x13410>
   28d6c:	ldr	r9, [sp, #24]
   28d70:	ldr	r6, [sp, #32]
   28d74:	mov	r4, r1
   28d78:	b	283ac <main@@Base+0x1216c>
   28d7c:	mov	r0, r9
   28d80:	mov	r1, r8
   28d84:	b	28d90 <main@@Base+0x12b50>
   28d88:	mov	r0, r9
   28d8c:	mov	r1, r2
   28d90:	mov	r2, r8
   28d94:	mov	r3, #10
   28d98:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28d9c:	b	283a8 <main@@Base+0x12168>
   28da0:	mov	r4, r8
   28da4:	cmp	r7, r4
   28da8:	bne	28e40 <main@@Base+0x12c00>
   28dac:	b	28e04 <main@@Base+0x12bc4>
   28db0:	mov	r4, r7
   28db4:	cmp	r7, r4
   28db8:	bne	28e40 <main@@Base+0x12c00>
   28dbc:	b	28e04 <main@@Base+0x12bc4>
   28dc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28dc4:	cmp	r0, #0
   28dc8:	beq	28dec <main@@Base+0x12bac>
   28dcc:	ldr	r9, [sp, #24]
   28dd0:	mov	r1, r4
   28dd4:	mov	r2, r8
   28dd8:	mov	r3, #7
   28ddc:	mov	r0, r9
   28de0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28de4:	mov	r4, r0
   28de8:	b	28df8 <main@@Base+0x12bb8>
   28dec:	ldr	r5, [fp, #-40]	; 0xffffffd8
   28df0:	ldr	r9, [sp, #24]
   28df4:	str	r5, [fp, #-44]	; 0xffffffd4
   28df8:	ldr	r6, [sp, #32]
   28dfc:	cmp	r7, r4
   28e00:	bne	28e40 <main@@Base+0x12c00>
   28e04:	sub	r0, fp, #44	; 0x2c
   28e08:	mov	r1, r7
   28e0c:	mov	r2, r8
   28e10:	str	r0, [sp]
   28e14:	mov	r0, r9
   28e18:	ldr	r3, [pc, #3940]	; 29d84 <main@@Base+0x13b44>
   28e1c:	add	r3, pc, r3
   28e20:	bl	25e28 <main@@Base+0xfbe8>
   28e24:	mov	r4, r0
   28e28:	cmp	r0, r7
   28e2c:	cmpne	r4, r8
   28e30:	beq	2ada4 <main@@Base+0x14b64>
   28e34:	ldr	r5, [fp, #-44]	; 0xffffffd4
   28e38:	ldr	r9, [sp, #24]
   28e3c:	ldr	r6, [sp, #32]
   28e40:	cmp	r5, #0
   28e44:	bne	28e54 <main@@Base+0x12c14>
   28e48:	ldrb	r0, [r9, #8]
   28e4c:	tst	r0, #2
   28e50:	beq	29500 <main@@Base+0x132c0>
   28e54:	ldr	r0, [r9]
   28e58:	mov	r1, #1
   28e5c:	mov	r2, #4
   28e60:	mov	r3, #4
   28e64:	bl	32964 <flatcc_builder_table_add@@Base>
   28e68:	cmp	r0, #0
   28e6c:	beq	2ada4 <main@@Base+0x14b64>
   28e70:	str	r5, [r0]
   28e74:	b	29500 <main@@Base+0x132c0>
   28e78:	cmp	r2, r8
   28e7c:	mov	r1, r8
   28e80:	beq	28ed8 <main@@Base+0x12c98>
   28e84:	ldrb	r0, [r2]
   28e88:	cmp	r0, #46	; 0x2e
   28e8c:	beq	28eac <main@@Base+0x12c6c>
   28e90:	cmp	r0, #34	; 0x22
   28e94:	bne	28ec8 <main@@Base+0x12c88>
   28e98:	ldr	r0, [sp, #28]
   28e9c:	mov	r1, #0
   28ea0:	str	r1, [r0]
   28ea4:	add	r1, r2, #1
   28ea8:	b	28ed8 <main@@Base+0x12c98>
   28eac:	mov	r1, r2
   28eb0:	mov	r0, r9
   28eb4:	mov	r2, r8
   28eb8:	mov	r3, #5
   28ebc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   28ec0:	mov	r1, r0
   28ec4:	b	28ed8 <main@@Base+0x12c98>
   28ec8:	ldr	r0, [sp, #28]
   28ecc:	mov	r1, #1
   28ed0:	str	r1, [r0]
   28ed4:	mov	r1, r2
   28ed8:	sub	r0, r8, r1
   28edc:	mov	r2, #8
   28ee0:	cmp	r0, #8
   28ee4:	movcs	r0, r2
   28ee8:	and	r0, r0, #15
   28eec:	sub	r2, r0, #1
   28ef0:	cmp	r2, #7
   28ef4:	bhi	290e4 <main@@Base+0x12ea4>
   28ef8:	add	r5, pc, #36	; 0x24
   28efc:	mov	r9, #0
   28f00:	mov	ip, #0
   28f04:	mov	lr, #0
   28f08:	mov	sl, #0
   28f0c:	mov	r3, #0
   28f10:	mov	r7, #0
   28f14:	mov	r4, #0
   28f18:	ldr	r0, [r5, r2, lsl #2]
   28f1c:	mov	r2, #0
   28f20:	add	pc, r5, r0
   28f24:	andeq	r0, r0, r4, rrx
   28f28:	andeq	r0, r0, ip, asr r0
   28f2c:	andeq	r0, r0, r4, asr r0
   28f30:	andeq	r0, r0, ip, asr #32
   28f34:	andeq	r0, r0, r0, asr #32
   28f38:	andeq	r0, r0, r4, lsr r0
   28f3c:	andeq	r0, r0, r4, lsr #32
   28f40:	andeq	r0, r0, r0, lsr #32
   28f44:	ldrb	ip, [r1, #7]
   28f48:	ldrb	r0, [r1, #6]
   28f4c:	mov	lr, r9
   28f50:	orr	r0, ip, r0, lsl #8
   28f54:	mov	r9, r0
   28f58:	ldrb	r0, [r1, #5]
   28f5c:	mov	sl, lr
   28f60:	orr	r9, r9, r0, lsl #16
   28f64:	ldrb	r0, [r1, #4]
   28f68:	mov	r3, sl
   28f6c:	orr	r9, r9, r0, lsl #24
   28f70:	ldrb	r0, [r1, #3]
   28f74:	orr	r7, r0, r3
   28f78:	ldrb	r0, [r1, #2]
   28f7c:	orr	r4, r7, r0, lsl #8
   28f80:	ldrb	r0, [r1, #1]
   28f84:	orr	r2, r4, r0, lsl #16
   28f88:	ldrb	r3, [r1]
   28f8c:	movw	r0, #25186	; 0x6262
   28f90:	movt	r0, #24418	; 0x5f62
   28f94:	eor	r0, r9, r0
   28f98:	ldr	r9, [sp, #24]
   28f9c:	orr	r2, r2, r3, lsl #24
   28fa0:	movw	r3, #24929	; 0x6161
   28fa4:	movt	r3, #24929	; 0x6161
   28fa8:	eor	r2, r2, r3
   28fac:	orrs	r0, r0, r2
   28fb0:	bne	290e4 <main@@Base+0x12ea4>
   28fb4:	add	r4, r1, #8
   28fb8:	mov	r0, #8
   28fbc:	sub	lr, r8, r4
   28fc0:	cmp	lr, #8
   28fc4:	movcc	r0, lr
   28fc8:	and	r0, r0, #15
   28fcc:	sub	r0, r0, #1
   28fd0:	cmp	r0, #7
   28fd4:	bhi	294ec <main@@Base+0x132ac>
   28fd8:	str	r4, [sp, #8]
   28fdc:	add	r4, pc, #36	; 0x24
   28fe0:	mov	r2, #0
   28fe4:	mov	ip, #0
   28fe8:	mov	sl, #0
   28fec:	mov	r6, #0
   28ff0:	mov	r7, #0
   28ff4:	mov	r5, #0
   28ff8:	mov	r3, #0
   28ffc:	ldr	r9, [r4, r0, lsl #2]
   29000:	mov	r0, #0
   29004:	add	pc, r4, r9
   29008:	andeq	r0, r0, r4, rrx
   2900c:	andeq	r0, r0, ip, asr r0
   29010:	andeq	r0, r0, r4, asr r0
   29014:	andeq	r0, r0, ip, asr #32
   29018:	andeq	r0, r0, r0, asr #32
   2901c:	andeq	r0, r0, r4, lsr r0
   29020:	andeq	r0, r0, r4, lsr #32
   29024:	andeq	r0, r0, r0, lsr #32
   29028:	ldrb	ip, [r1, #15]
   2902c:	ldrb	r0, [r1, #14]
   29030:	mov	sl, r2
   29034:	orr	r0, ip, r0, lsl #8
   29038:	mov	r2, r0
   2903c:	ldrb	r0, [r1, #13]
   29040:	mov	r6, sl
   29044:	orr	r2, r2, r0, lsl #16
   29048:	ldrb	r0, [r1, #12]
   2904c:	mov	r7, r6
   29050:	orr	r2, r2, r0, lsl #24
   29054:	ldrb	r0, [r1, #11]
   29058:	orr	r5, r0, r7
   2905c:	ldrb	r0, [r1, #10]
   29060:	orr	r3, r5, r0, lsl #8
   29064:	ldrb	r0, [r1, #9]
   29068:	orr	r0, r3, r0, lsl #16
   2906c:	ldr	r4, [sp, #8]
   29070:	movw	r7, #29440	; 0x7300
   29074:	bic	r3, r2, #255	; 0xff
   29078:	movt	r7, #25968	; 0x6570
   2907c:	eor	r3, r3, r7
   29080:	ldrb	r7, [r4]
   29084:	orr	r0, r0, r7, lsl #24
   29088:	movw	r7, #29556	; 0x7374
   2908c:	movt	r7, #25183	; 0x625f
   29090:	eor	r0, r0, r7
   29094:	orrs	r3, r3, r0
   29098:	bne	290ec <main@@Base+0x12eac>
   2909c:	ldr	r9, [sp, #24]
   290a0:	ldr	r6, [sp, #32]
   290a4:	cmp	lr, #8
   290a8:	blt	294ec <main@@Base+0x132ac>
   290ac:	ldr	r3, [sp, #28]
   290b0:	mov	r2, r1
   290b4:	ldrb	r0, [r2, #15]!
   290b8:	ldr	r3, [r3]
   290bc:	cmp	r3, #0
   290c0:	beq	29148 <main@@Base+0x12f08>
   290c4:	cmp	r0, #33	; 0x21
   290c8:	bcc	290d4 <main@@Base+0x12e94>
   290cc:	cmp	r0, #58	; 0x3a
   290d0:	bne	294ec <main@@Base+0x132ac>
   290d4:	ldr	r0, [sp, #28]
   290d8:	mov	r1, #0
   290dc:	str	r1, [r0]
   290e0:	b	29154 <main@@Base+0x12f14>
   290e4:	mov	r0, r9
   290e8:	b	294f4 <main@@Base+0x132b4>
   290ec:	movw	r3, #29791	; 0x745f
   290f0:	ldr	r9, [sp, #24]
   290f4:	ldr	r6, [sp, #32]
   290f8:	movt	r3, #24946	; 0x6172
   290fc:	eor	r2, r2, r3
   29100:	orrs	r0, r2, r0
   29104:	bne	294ec <main@@Base+0x132ac>
   29108:	cmp	lr, #9
   2910c:	blt	294ec <main@@Base+0x132ac>
   29110:	ldr	r3, [sp, #28]
   29114:	mov	r2, r1
   29118:	ldrb	r0, [r2, #16]!
   2911c:	ldr	r3, [r3]
   29120:	cmp	r3, #0
   29124:	beq	2917c <main@@Base+0x12f3c>
   29128:	cmp	r0, #33	; 0x21
   2912c:	bcc	29138 <main@@Base+0x12ef8>
   29130:	cmp	r0, #58	; 0x3a
   29134:	bne	294ec <main@@Base+0x132ac>
   29138:	ldr	r0, [sp, #28]
   2913c:	mov	r1, #0
   29140:	str	r1, [r0]
   29144:	b	29188 <main@@Base+0x12f48>
   29148:	cmp	r0, #34	; 0x22
   2914c:	bne	294ec <main@@Base+0x132ac>
   29150:	add	r2, r1, #16
   29154:	sub	r0, r8, r2
   29158:	cmp	r0, #2
   2915c:	blt	291c4 <main@@Base+0x12f84>
   29160:	ldrb	r0, [r2]
   29164:	cmp	r0, #32
   29168:	bls	291b0 <main@@Base+0x12f70>
   2916c:	mov	r7, r2
   29170:	cmp	r7, r8
   29174:	bne	291e0 <main@@Base+0x12fa0>
   29178:	b	29218 <main@@Base+0x12fd8>
   2917c:	cmp	r0, #34	; 0x22
   29180:	bne	294ec <main@@Base+0x132ac>
   29184:	add	r2, r1, #17
   29188:	sub	r0, r8, r2
   2918c:	cmp	r0, #2
   29190:	blt	29244 <main@@Base+0x13004>
   29194:	ldrb	r0, [r2]
   29198:	cmp	r0, #32
   2919c:	bls	29230 <main@@Base+0x12ff0>
   291a0:	mov	r7, r2
   291a4:	cmp	r7, r8
   291a8:	bne	29260 <main@@Base+0x13020>
   291ac:	b	292a4 <main@@Base+0x13064>
   291b0:	bne	291c4 <main@@Base+0x12f84>
   291b4:	mov	r7, r2
   291b8:	ldrb	r0, [r7, #1]!
   291bc:	cmp	r0, #32
   291c0:	bhi	291d8 <main@@Base+0x12f98>
   291c4:	mov	r1, r2
   291c8:	mov	r0, r9
   291cc:	mov	r2, r8
   291d0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   291d4:	mov	r7, r0
   291d8:	cmp	r7, r8
   291dc:	beq	29218 <main@@Base+0x12fd8>
   291e0:	ldrb	r0, [r7]
   291e4:	cmp	r0, #58	; 0x3a
   291e8:	bne	29218 <main@@Base+0x12fd8>
   291ec:	add	r1, r7, #1
   291f0:	sub	r0, r8, r1
   291f4:	cmp	r0, #2
   291f8:	blt	292cc <main@@Base+0x1308c>
   291fc:	ldrb	r0, [r1]
   29200:	cmp	r0, #32
   29204:	bls	292bc <main@@Base+0x1307c>
   29208:	mov	r7, r1
   2920c:	cmp	r4, r7
   29210:	bne	292e4 <main@@Base+0x130a4>
   29214:	b	294ec <main@@Base+0x132ac>
   29218:	mov	r0, r9
   2921c:	mov	r1, r7
   29220:	mov	r2, r8
   29224:	mov	r3, #4
   29228:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2922c:	b	292d8 <main@@Base+0x13098>
   29230:	bne	29244 <main@@Base+0x13004>
   29234:	mov	r7, r2
   29238:	ldrb	r0, [r7, #1]!
   2923c:	cmp	r0, #32
   29240:	bhi	29258 <main@@Base+0x13018>
   29244:	mov	r1, r2
   29248:	mov	r0, r9
   2924c:	mov	r2, r8
   29250:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29254:	mov	r7, r0
   29258:	cmp	r7, r8
   2925c:	beq	292a4 <main@@Base+0x13064>
   29260:	ldrb	r0, [r7]
   29264:	cmp	r0, #58	; 0x3a
   29268:	bne	292a4 <main@@Base+0x13064>
   2926c:	add	r1, r7, #1
   29270:	sub	r0, r8, r1
   29274:	cmp	r0, #2
   29278:	blt	29460 <main@@Base+0x13220>
   2927c:	ldrb	r0, [r1]
   29280:	cmp	r0, #32
   29284:	bls	29444 <main@@Base+0x13204>
   29288:	ldr	r9, [sp, #24]
   2928c:	ldr	r6, [sp, #32]
   29290:	ldr	r4, [sp, #8]
   29294:	mov	r7, r1
   29298:	cmp	r4, r7
   2929c:	bne	29478 <main@@Base+0x13238>
   292a0:	b	294ec <main@@Base+0x132ac>
   292a4:	mov	r0, r9
   292a8:	mov	r1, r7
   292ac:	mov	r2, r8
   292b0:	mov	r3, #4
   292b4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   292b8:	b	2946c <main@@Base+0x1322c>
   292bc:	bne	292cc <main@@Base+0x1308c>
   292c0:	ldrb	r0, [r7, #2]!
   292c4:	cmp	r0, #32
   292c8:	bhi	292dc <main@@Base+0x1309c>
   292cc:	mov	r0, r9
   292d0:	mov	r2, r8
   292d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   292d8:	mov	r7, r0
   292dc:	cmp	r4, r7
   292e0:	beq	294ec <main@@Base+0x132ac>
   292e4:	mov	r5, #0
   292e8:	cmp	r7, r8
   292ec:	str	r5, [fp, #-36]	; 0xffffffdc
   292f0:	str	r5, [fp, #-40]	; 0xffffffd8
   292f4:	str	r5, [sp, #44]	; 0x2c
   292f8:	str	r5, [sp, #40]	; 0x28
   292fc:	str	r5, [fp, #-44]	; 0xffffffd4
   29300:	beq	2935c <main@@Base+0x1311c>
   29304:	sub	r0, fp, #40	; 0x28
   29308:	mov	r1, r7
   2930c:	mov	r2, r8
   29310:	sub	r3, fp, #44	; 0x2c
   29314:	str	r0, [sp]
   29318:	mov	r0, r9
   2931c:	bl	38410 <flatcc_json_parser_integer@@Base>
   29320:	cmp	r0, r7
   29324:	beq	29370 <main@@Base+0x13130>
   29328:	sub	sl, fp, #44	; 0x2c
   2932c:	mov	r4, r0
   29330:	ldm	sl, {r0, r5, sl}
   29334:	cmp	r0, #0
   29338:	beq	29388 <main@@Base+0x13148>
   2933c:	subs	r0, r5, #1
   29340:	sbcs	r0, sl, #-2147483648	; 0x80000000
   29344:	bcc	293bc <main@@Base+0x1317c>
   29348:	mov	r0, r9
   2934c:	mov	r1, r4
   29350:	mov	r2, r8
   29354:	mov	r3, #8
   29358:	b	293a0 <main@@Base+0x13160>
   2935c:	mov	sl, #0
   29360:	mov	r4, r8
   29364:	cmp	r7, r4
   29368:	bne	2940c <main@@Base+0x131cc>
   2936c:	b	293d4 <main@@Base+0x13194>
   29370:	mov	r5, #0
   29374:	mov	sl, #0
   29378:	mov	r4, r7
   2937c:	cmp	r7, r4
   29380:	bne	2940c <main@@Base+0x131cc>
   29384:	b	293d4 <main@@Base+0x13194>
   29388:	cmn	sl, #1
   2938c:	bgt	293c4 <main@@Base+0x13184>
   29390:	mov	r0, r9
   29394:	mov	r1, r4
   29398:	mov	r2, r8
   2939c:	mov	r3, #7
   293a0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   293a4:	mov	r4, r0
   293a8:	mov	r5, #0
   293ac:	mov	sl, #0
   293b0:	cmp	r7, r4
   293b4:	bne	2940c <main@@Base+0x131cc>
   293b8:	b	293d4 <main@@Base+0x13194>
   293bc:	rsbs	r5, r5, #0
   293c0:	rsc	sl, sl, #0
   293c4:	str	r5, [sp, #40]	; 0x28
   293c8:	str	sl, [sp, #44]	; 0x2c
   293cc:	cmp	r7, r4
   293d0:	bne	2940c <main@@Base+0x131cc>
   293d4:	add	r0, sp, #40	; 0x28
   293d8:	mov	r1, r7
   293dc:	mov	r2, r8
   293e0:	str	r0, [sp]
   293e4:	mov	r0, r9
   293e8:	ldr	r3, [pc, #4044]	; 2a3bc <main@@Base+0x1417c>
   293ec:	add	r3, pc, r3
   293f0:	bl	25c0c <main@@Base+0xf9cc>
   293f4:	mov	r4, r0
   293f8:	cmp	r0, r7
   293fc:	cmpne	r4, r8
   29400:	beq	2ada4 <main@@Base+0x14b64>
   29404:	ldr	r5, [sp, #40]	; 0x28
   29408:	ldr	sl, [sp, #44]	; 0x2c
   2940c:	orrs	r0, r5, sl
   29410:	bne	29420 <main@@Base+0x131e0>
   29414:	ldrb	r0, [r9, #8]
   29418:	tst	r0, #2
   2941c:	beq	29500 <main@@Base+0x132c0>
   29420:	ldr	r0, [r9]
   29424:	mov	r1, #0
   29428:	mov	r2, #8
   2942c:	mov	r3, #8
   29430:	bl	32964 <flatcc_builder_table_add@@Base>
   29434:	cmp	r0, #0
   29438:	beq	2ada4 <main@@Base+0x14b64>
   2943c:	stm	r0, {r5, sl}
   29440:	b	29500 <main@@Base+0x132c0>
   29444:	ldr	r9, [sp, #24]
   29448:	ldr	r6, [sp, #32]
   2944c:	ldr	r4, [sp, #8]
   29450:	bne	29460 <main@@Base+0x13220>
   29454:	ldrb	r0, [r7, #2]!
   29458:	cmp	r0, #32
   2945c:	bhi	29470 <main@@Base+0x13230>
   29460:	mov	r0, r9
   29464:	mov	r2, r8
   29468:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2946c:	mov	r7, r0
   29470:	cmp	r4, r7
   29474:	beq	294ec <main@@Base+0x132ac>
   29478:	mov	r5, #0
   2947c:	cmp	r7, r8
   29480:	str	r5, [fp, #-36]	; 0xffffffdc
   29484:	str	r5, [fp, #-40]	; 0xffffffd8
   29488:	str	r5, [fp, #-44]	; 0xffffffd4
   2948c:	str	r5, [sp, #40]	; 0x28
   29490:	beq	28da0 <main@@Base+0x12b60>
   29494:	sub	r0, fp, #40	; 0x28
   29498:	mov	r1, r7
   2949c:	mov	r2, r8
   294a0:	add	r3, sp, #40	; 0x28
   294a4:	str	r0, [sp]
   294a8:	mov	r0, r9
   294ac:	bl	38410 <flatcc_json_parser_integer@@Base>
   294b0:	cmp	r0, r7
   294b4:	beq	28db0 <main@@Base+0x12b70>
   294b8:	mov	r4, r0
   294bc:	ldr	r0, [sp, #40]	; 0x28
   294c0:	cmp	r0, #0
   294c4:	beq	28dc0 <main@@Base+0x12b80>
   294c8:	mov	r0, r9
   294cc:	mov	r1, r4
   294d0:	mov	r2, r8
   294d4:	mov	r3, #8
   294d8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   294dc:	mov	r4, r0
   294e0:	cmp	r7, r4
   294e4:	bne	28e40 <main@@Base+0x12c00>
   294e8:	b	28e04 <main@@Base+0x12bc4>
   294ec:	mov	r0, r9
   294f0:	mov	r1, r4
   294f4:	mov	r2, r8
   294f8:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   294fc:	mov	r4, r0
   29500:	sub	r0, r8, r4
   29504:	cmp	r0, #2
   29508:	blt	2953c <main@@Base+0x132fc>
   2950c:	ldrb	r0, [r4]
   29510:	cmp	r0, #32
   29514:	bls	29528 <main@@Base+0x132e8>
   29518:	mov	r2, r4
   2951c:	cmp	r2, r8
   29520:	bne	29558 <main@@Base+0x13318>
   29524:	b	295cc <main@@Base+0x1338c>
   29528:	bne	2953c <main@@Base+0x132fc>
   2952c:	mov	r2, r4
   29530:	ldrb	r0, [r2, #1]!
   29534:	cmp	r0, #32
   29538:	bhi	29550 <main@@Base+0x13310>
   2953c:	mov	r0, r9
   29540:	mov	r1, r4
   29544:	mov	r2, r8
   29548:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2954c:	mov	r2, r0
   29550:	cmp	r2, r8
   29554:	beq	295cc <main@@Base+0x1338c>
   29558:	ldrb	r0, [r2]
   2955c:	cmp	r0, #44	; 0x2c
   29560:	bne	295d4 <main@@Base+0x13394>
   29564:	add	r1, r2, #1
   29568:	sub	r0, r8, r1
   2956c:	cmp	r0, #2
   29570:	blt	295a4 <main@@Base+0x13364>
   29574:	ldrb	r0, [r1]
   29578:	cmp	r0, #32
   2957c:	bls	29594 <main@@Base+0x13354>
   29580:	mov	r2, r1
   29584:	cmp	r2, r8
   29588:	bne	295bc <main@@Base+0x1337c>
   2958c:	b	29600 <main@@Base+0x133c0>
   29590:	andeq	r6, r3, ip, ror #25
   29594:	bne	295a4 <main@@Base+0x13364>
   29598:	ldrb	r0, [r2, #2]!
   2959c:	cmp	r0, #32
   295a0:	bhi	295b4 <main@@Base+0x13374>
   295a4:	mov	r0, r9
   295a8:	mov	r2, r8
   295ac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   295b0:	mov	r2, r0
   295b4:	cmp	r2, r8
   295b8:	beq	29600 <main@@Base+0x133c0>
   295bc:	ldrb	r0, [r2]
   295c0:	cmp	r0, #125	; 0x7d
   295c4:	bne	28e78 <main@@Base+0x12c38>
   295c8:	b	295dc <main@@Base+0x1339c>
   295cc:	mov	r4, r8
   295d0:	b	27f4c <main@@Base+0x11d0c>
   295d4:	cmp	r0, #125	; 0x7d
   295d8:	bne	2960c <main@@Base+0x133cc>
   295dc:	add	r1, r2, #1
   295e0:	sub	r0, r8, r1
   295e4:	cmp	r0, #2
   295e8:	blt	29638 <main@@Base+0x133f8>
   295ec:	ldrb	r0, [r1]
   295f0:	cmp	r0, #32
   295f4:	bls	29624 <main@@Base+0x133e4>
   295f8:	mov	r4, r1
   295fc:	b	27f4c <main@@Base+0x11d0c>
   29600:	mov	r0, r9
   29604:	mov	r1, r8
   29608:	b	29614 <main@@Base+0x133d4>
   2960c:	mov	r0, r9
   29610:	mov	r1, r2
   29614:	mov	r2, r8
   29618:	mov	r3, #10
   2961c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   29620:	b	27f48 <main@@Base+0x11d08>
   29624:	bne	29638 <main@@Base+0x133f8>
   29628:	ldrb	r0, [r2, #2]!
   2962c:	cmp	r0, #32
   29630:	mov	r4, r2
   29634:	bhi	27f4c <main@@Base+0x11d0c>
   29638:	mov	r0, r9
   2963c:	mov	r2, r8
   29640:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29644:	b	27f48 <main@@Base+0x11d08>
   29648:	beq	2965c <main@@Base+0x1341c>
   2964c:	b	2966c <main@@Base+0x1342c>
   29650:	ldr	r9, [sp, #24]
   29654:	ldr	r6, [sp, #32]
   29658:	bne	2966c <main@@Base+0x1342c>
   2965c:	ldrb	r0, [r2, #2]!
   29660:	cmp	r0, #32
   29664:	mov	r4, r2
   29668:	bhi	283ac <main@@Base+0x1216c>
   2966c:	mov	r0, r9
   29670:	mov	r2, r8
   29674:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29678:	b	283a8 <main@@Base+0x12168>
   2967c:	mov	r4, r8
   29680:	cmp	r9, r4
   29684:	bne	29700 <main@@Base+0x134c0>
   29688:	b	296cc <main@@Base+0x1348c>
   2968c:	mov	r4, r9
   29690:	cmp	r9, r4
   29694:	bne	29700 <main@@Base+0x134c0>
   29698:	b	296cc <main@@Base+0x1348c>
   2969c:	muleq	r3, r8, fp
   296a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   296a4:	cmp	r0, #0
   296a8:	beq	29744 <main@@Base+0x13504>
   296ac:	ldr	r0, [sp, #24]
   296b0:	mov	r1, r4
   296b4:	mov	r2, r8
   296b8:	mov	r3, #7
   296bc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   296c0:	mov	r4, r0
   296c4:	cmp	r9, r4
   296c8:	bne	29700 <main@@Base+0x134c0>
   296cc:	sub	r0, fp, #44	; 0x2c
   296d0:	mov	r1, r9
   296d4:	mov	r2, r8
   296d8:	str	r0, [sp]
   296dc:	ldr	r0, [sp, #24]
   296e0:	ldr	r3, [pc, #4060]	; 2a6c4 <main@@Base+0x14484>
   296e4:	add	r3, pc, r3
   296e8:	bl	25e28 <main@@Base+0xfbe8>
   296ec:	mov	r4, r0
   296f0:	cmp	r0, r9
   296f4:	cmpne	r4, r8
   296f8:	beq	2ada4 <main@@Base+0x14b64>
   296fc:	ldr	r5, [fp, #-44]	; 0xffffffd4
   29700:	cmp	r5, #0
   29704:	bne	29718 <main@@Base+0x134d8>
   29708:	ldr	r0, [sp, #24]
   2970c:	ldrb	r0, [r0, #8]
   29710:	tst	r0, #2
   29714:	beq	2973c <main@@Base+0x134fc>
   29718:	ldr	r0, [sp, #24]
   2971c:	mov	r1, #8
   29720:	mov	r2, #4
   29724:	mov	r3, #4
   29728:	ldr	r0, [r0]
   2972c:	bl	32964 <flatcc_builder_table_add@@Base>
   29730:	cmp	r0, #0
   29734:	beq	2ada4 <main@@Base+0x14b64>
   29738:	str	r5, [r0]
   2973c:	ldr	r9, [sp, #24]
   29740:	b	2ab74 <main@@Base+0x14934>
   29744:	ldr	r5, [fp, #-40]	; 0xffffffd8
   29748:	str	r5, [fp, #-44]	; 0xffffffd4
   2974c:	cmp	r9, r4
   29750:	bne	29700 <main@@Base+0x134c0>
   29754:	b	296cc <main@@Base+0x1348c>
   29758:	cmp	r2, r8
   2975c:	mov	sl, r8
   29760:	beq	297b4 <main@@Base+0x13574>
   29764:	ldrb	r0, [r2]
   29768:	cmp	r0, #46	; 0x2e
   2976c:	beq	29788 <main@@Base+0x13548>
   29770:	cmp	r0, #34	; 0x22
   29774:	bne	297a4 <main@@Base+0x13564>
   29778:	ldr	r0, [sp, #28]
   2977c:	mov	r1, #0
   29780:	add	sl, r2, #1
   29784:	b	297b0 <main@@Base+0x13570>
   29788:	mov	r1, r2
   2978c:	mov	r0, r9
   29790:	mov	r2, r8
   29794:	mov	r3, #5
   29798:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2979c:	mov	sl, r0
   297a0:	b	297b4 <main@@Base+0x13574>
   297a4:	ldr	r0, [sp, #28]
   297a8:	mov	r1, #1
   297ac:	mov	sl, r2
   297b0:	str	r1, [r0]
   297b4:	sub	r9, r8, sl
   297b8:	mov	r0, #8
   297bc:	cmp	r9, #8
   297c0:	movcc	r0, r9
   297c4:	and	r0, r0, #15
   297c8:	sub	r1, r0, #1
   297cc:	cmp	r1, #7
   297d0:	bhi	29e48 <main@@Base+0x13c08>
   297d4:	add	r6, pc, #36	; 0x24
   297d8:	mov	r0, #0
   297dc:	mov	ip, #0
   297e0:	mov	lr, #0
   297e4:	mov	r2, #0
   297e8:	mov	r3, #0
   297ec:	mov	r7, #0
   297f0:	mov	r5, #0
   297f4:	mov	r4, #0
   297f8:	ldr	r1, [r6, r1, lsl #2]
   297fc:	add	pc, r6, r1
   29800:	andeq	r0, r0, r4, rrx
   29804:	andeq	r0, r0, ip, asr r0
   29808:	andeq	r0, r0, r4, asr r0
   2980c:	andeq	r0, r0, ip, asr #32
   29810:	andeq	r0, r0, r0, asr #32
   29814:	andeq	r0, r0, r4, lsr r0
   29818:	andeq	r0, r0, r4, lsr #32
   2981c:	andeq	r0, r0, r0, lsr #32
   29820:	ldrb	ip, [sl, #7]
   29824:	ldrb	r1, [sl, #6]
   29828:	mov	lr, r0
   2982c:	orr	r1, ip, r1, lsl #8
   29830:	mov	r0, r1
   29834:	ldrb	r1, [sl, #5]
   29838:	mov	r2, lr
   2983c:	orr	r0, r0, r1, lsl #16
   29840:	ldrb	r1, [sl, #4]
   29844:	mov	r3, r2
   29848:	orr	r0, r0, r1, lsl #24
   2984c:	ldrb	r1, [sl, #3]
   29850:	orr	r7, r1, r3
   29854:	ldrb	r1, [sl, #2]
   29858:	orr	r5, r7, r1, lsl #8
   2985c:	ldrb	r1, [sl, #1]
   29860:	orr	r4, r5, r1, lsl #16
   29864:	ldrb	r1, [sl]
   29868:	orr	r7, r4, r1, lsl #24
   2986c:	movw	r1, #25442	; 0x6362
   29870:	movt	r1, #25443	; 0x6363
   29874:	cmp	r7, r1
   29878:	bhi	29910 <main@@Base+0x136d0>
   2987c:	movw	r1, #13108	; 0x3334
   29880:	movt	r1, #12594	; 0x3132
   29884:	eor	r5, r0, r1
   29888:	movw	r1, #24929	; 0x6161
   2988c:	movt	r1, #24929	; 0x6161
   29890:	eor	r0, r7, r1
   29894:	orrs	r0, r5, r0
   29898:	bne	29978 <main@@Base+0x13738>
   2989c:	add	r7, sl, #8
   298a0:	mov	r1, #8
   298a4:	mov	r2, #-268435456	; 0xf0000000
   298a8:	sub	r0, r8, r7
   298ac:	cmp	r0, #8
   298b0:	movcc	r1, r0
   298b4:	add	r1, r2, r1, lsl #28
   298b8:	asr	r1, r1, #28
   298bc:	cmp	r1, #0
   298c0:	blt	2ab5c <main@@Base+0x1491c>
   298c4:	ldrb	r1, [r7]
   298c8:	cmp	r1, #53	; 0x35
   298cc:	bne	2ab5c <main@@Base+0x1491c>
   298d0:	cmp	r0, #2
   298d4:	blt	2ab5c <main@@Base+0x1491c>
   298d8:	ldr	r2, [sp, #28]
   298dc:	mov	r1, sl
   298e0:	ldrb	r0, [r1, #9]!
   298e4:	ldr	r2, [r2]
   298e8:	cmp	r2, #0
   298ec:	beq	29bb4 <main@@Base+0x13974>
   298f0:	cmp	r0, #33	; 0x21
   298f4:	bcc	29900 <main@@Base+0x136c0>
   298f8:	cmp	r0, #58	; 0x3a
   298fc:	bne	2ab5c <main@@Base+0x1491c>
   29900:	ldr	r0, [sp, #28]
   29904:	mov	r2, #0
   29908:	str	r2, [r0]
   2990c:	b	29bc0 <main@@Base+0x13980>
   29910:	movw	r1, #13108	; 0x3334
   29914:	movt	r1, #12594	; 0x3132
   29918:	eor	r5, r0, r1
   2991c:	ldr	r0, [sp, #16]
   29920:	eor	r0, r7, r0
   29924:	orrs	r0, r5, r0
   29928:	bne	299c8 <main@@Base+0x13788>
   2992c:	cmp	r9, #9
   29930:	ldr	r9, [sp, #24]
   29934:	mov	r7, sl
   29938:	blt	2a068 <main@@Base+0x13e28>
   2993c:	ldr	r2, [sp, #28]
   29940:	mov	r1, sl
   29944:	ldrb	r0, [r1, #8]!
   29948:	ldr	r2, [r2]
   2994c:	cmp	r2, #0
   29950:	beq	29a20 <main@@Base+0x137e0>
   29954:	cmp	r0, #33	; 0x21
   29958:	bcc	29968 <main@@Base+0x13728>
   2995c:	cmp	r0, #58	; 0x3a
   29960:	mov	r7, sl
   29964:	bne	2a068 <main@@Base+0x13e28>
   29968:	ldr	r0, [sp, #28]
   2996c:	mov	r2, #0
   29970:	str	r2, [r0]
   29974:	b	29a30 <main@@Base+0x137f0>
   29978:	teq	r7, r1
   2997c:	bne	29c4c <main@@Base+0x13a0c>
   29980:	cmp	r9, #5
   29984:	mov	r1, sl
   29988:	blt	2a2f4 <main@@Base+0x140b4>
   2998c:	ldr	r1, [sp, #28]
   29990:	mov	r2, sl
   29994:	ldrb	r0, [r2, #4]!
   29998:	ldr	r1, [r1]
   2999c:	cmp	r1, #0
   299a0:	beq	29a58 <main@@Base+0x13818>
   299a4:	cmp	r0, #33	; 0x21
   299a8:	bcc	299b8 <main@@Base+0x13778>
   299ac:	cmp	r0, #58	; 0x3a
   299b0:	mov	r1, sl
   299b4:	bne	2a2f4 <main@@Base+0x140b4>
   299b8:	ldr	r0, [sp, #28]
   299bc:	mov	r1, #0
   299c0:	str	r1, [r0]
   299c4:	b	29a68 <main@@Base+0x13828>
   299c8:	movw	r0, #25443	; 0x6363
   299cc:	movt	r0, #25443	; 0x6363
   299d0:	teq	r7, r0
   299d4:	bne	29dec <main@@Base+0x13bac>
   299d8:	cmp	r9, #5
   299dc:	mov	r1, sl
   299e0:	blt	2a350 <main@@Base+0x14110>
   299e4:	ldr	r1, [sp, #28]
   299e8:	mov	r2, sl
   299ec:	ldrb	r0, [r2, #4]!
   299f0:	ldr	r1, [r1]
   299f4:	cmp	r1, #0
   299f8:	beq	29a90 <main@@Base+0x13850>
   299fc:	cmp	r0, #33	; 0x21
   29a00:	bcc	29a10 <main@@Base+0x137d0>
   29a04:	cmp	r0, #58	; 0x3a
   29a08:	mov	r1, sl
   29a0c:	bne	2a350 <main@@Base+0x14110>
   29a10:	ldr	r0, [sp, #28]
   29a14:	mov	r1, #0
   29a18:	str	r1, [r0]
   29a1c:	b	29aa0 <main@@Base+0x13860>
   29a20:	cmp	r0, #34	; 0x22
   29a24:	mov	r7, sl
   29a28:	bne	2a068 <main@@Base+0x13e28>
   29a2c:	add	r1, sl, #9
   29a30:	sub	r0, r8, r1
   29a34:	cmp	r0, #2
   29a38:	blt	29adc <main@@Base+0x1389c>
   29a3c:	ldrb	r0, [r1]
   29a40:	cmp	r0, #32
   29a44:	bls	29ac8 <main@@Base+0x13888>
   29a48:	mov	r7, r1
   29a4c:	cmp	r7, r8
   29a50:	bne	29af4 <main@@Base+0x138b4>
   29a54:	b	29b9c <main@@Base+0x1395c>
   29a58:	cmp	r0, #34	; 0x22
   29a5c:	mov	r1, sl
   29a60:	bne	2a2f4 <main@@Base+0x140b4>
   29a64:	add	r2, sl, #5
   29a68:	sub	r0, r8, r2
   29a6c:	cmp	r0, #2
   29a70:	blt	29bfc <main@@Base+0x139bc>
   29a74:	ldrb	r0, [r2]
   29a78:	cmp	r0, #32
   29a7c:	bls	29be8 <main@@Base+0x139a8>
   29a80:	mov	r1, r2
   29a84:	cmp	r1, r8
   29a88:	bne	29c18 <main@@Base+0x139d8>
   29a8c:	b	29d00 <main@@Base+0x13ac0>
   29a90:	cmp	r0, #34	; 0x22
   29a94:	mov	r1, sl
   29a98:	bne	2a350 <main@@Base+0x14110>
   29a9c:	add	r2, sl, #5
   29aa0:	sub	r0, r8, r2
   29aa4:	cmp	r0, #2
   29aa8:	blt	29d9c <main@@Base+0x13b5c>
   29aac:	ldrb	r0, [r2]
   29ab0:	cmp	r0, #32
   29ab4:	bls	29d88 <main@@Base+0x13b48>
   29ab8:	mov	r1, r2
   29abc:	cmp	r1, r8
   29ac0:	bne	29db8 <main@@Base+0x13b78>
   29ac4:	b	29e58 <main@@Base+0x13c18>
   29ac8:	bne	29adc <main@@Base+0x1389c>
   29acc:	mov	r7, r1
   29ad0:	ldrb	r0, [r7, #1]!
   29ad4:	cmp	r0, #32
   29ad8:	bhi	29aec <main@@Base+0x138ac>
   29adc:	mov	r0, r9
   29ae0:	mov	r2, r8
   29ae4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29ae8:	mov	r7, r0
   29aec:	cmp	r7, r8
   29af0:	beq	29b9c <main@@Base+0x1395c>
   29af4:	ldrb	r0, [r7]
   29af8:	cmp	r0, #58	; 0x3a
   29afc:	bne	29b9c <main@@Base+0x1395c>
   29b00:	add	r1, r7, #1
   29b04:	sub	r0, r8, r1
   29b08:	cmp	r0, #2
   29b0c:	blt	2a058 <main@@Base+0x13e18>
   29b10:	ldrb	r0, [r1]
   29b14:	cmp	r0, #32
   29b18:	bls	2a048 <main@@Base+0x13e08>
   29b1c:	mov	r7, r1
   29b20:	cmp	sl, r7
   29b24:	bne	2a070 <main@@Base+0x13e30>
   29b28:	add	r7, sl, #8
   29b2c:	mov	r1, #8
   29b30:	mov	r2, #-268435456	; 0xf0000000
   29b34:	sub	r0, r8, r7
   29b38:	cmp	r0, #8
   29b3c:	movcc	r1, r0
   29b40:	add	r1, r2, r1, lsl #28
   29b44:	asr	r1, r1, #28
   29b48:	cmp	r1, #0
   29b4c:	blt	2ab60 <main@@Base+0x14920>
   29b50:	ldrb	r1, [r7]
   29b54:	cmp	r1, #53	; 0x35
   29b58:	bne	2ab60 <main@@Base+0x14920>
   29b5c:	cmp	r0, #2
   29b60:	blt	2ab5c <main@@Base+0x1491c>
   29b64:	ldr	r2, [sp, #28]
   29b68:	mov	r1, sl
   29b6c:	ldrb	r0, [r1, #9]!
   29b70:	ldr	r2, [r2]
   29b74:	cmp	r2, #0
   29b78:	beq	29ea4 <main@@Base+0x13c64>
   29b7c:	cmp	r0, #33	; 0x21
   29b80:	bcc	29b8c <main@@Base+0x1394c>
   29b84:	cmp	r0, #58	; 0x3a
   29b88:	bne	2ab5c <main@@Base+0x1491c>
   29b8c:	ldr	r0, [sp, #28]
   29b90:	mov	r2, #0
   29b94:	str	r2, [r0]
   29b98:	b	29eb0 <main@@Base+0x13c70>
   29b9c:	mov	r0, r9
   29ba0:	mov	r1, r7
   29ba4:	mov	r2, r8
   29ba8:	mov	r3, #4
   29bac:	bl	36078 <flatcc_json_parser_set_error@@Base>
   29bb0:	b	2a064 <main@@Base+0x13e24>
   29bb4:	cmp	r0, #34	; 0x22
   29bb8:	bne	2ab5c <main@@Base+0x1491c>
   29bbc:	add	r1, sl, #10
   29bc0:	sub	r0, r8, r1
   29bc4:	cmp	r0, #2
   29bc8:	blt	2a1e8 <main@@Base+0x13fa8>
   29bcc:	ldrb	r0, [r1]
   29bd0:	cmp	r0, #32
   29bd4:	bls	2a1d4 <main@@Base+0x13f94>
   29bd8:	mov	r9, r1
   29bdc:	cmp	r9, r8
   29be0:	bne	2a200 <main@@Base+0x13fc0>
   29be4:	b	2a238 <main@@Base+0x13ff8>
   29be8:	bne	29bfc <main@@Base+0x139bc>
   29bec:	mov	r1, r2
   29bf0:	ldrb	r0, [r1, #1]!
   29bf4:	cmp	r0, #32
   29bf8:	bhi	29c10 <main@@Base+0x139d0>
   29bfc:	ldr	r0, [sp, #24]
   29c00:	mov	r1, r2
   29c04:	mov	r2, r8
   29c08:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29c0c:	mov	r1, r0
   29c10:	cmp	r1, r8
   29c14:	beq	29d00 <main@@Base+0x13ac0>
   29c18:	ldrb	r0, [r1]
   29c1c:	cmp	r0, #58	; 0x3a
   29c20:	bne	29d00 <main@@Base+0x13ac0>
   29c24:	add	r2, r1, #1
   29c28:	sub	r0, r8, r2
   29c2c:	cmp	r0, #2
   29c30:	blt	2a2e0 <main@@Base+0x140a0>
   29c34:	ldrb	r0, [r2]
   29c38:	cmp	r0, #32
   29c3c:	bls	2a2d0 <main@@Base+0x14090>
   29c40:	mov	r1, r2
   29c44:	cmp	sl, r1
   29c48:	bne	2a2fc <main@@Base+0x140bc>
   29c4c:	movw	r1, #25186	; 0x6262
   29c50:	movt	r1, #25186	; 0x6262
   29c54:	eor	r0, r7, r1
   29c58:	orrs	r0, r5, r0
   29c5c:	bne	29cac <main@@Base+0x13a6c>
   29c60:	cmp	r9, #9
   29c64:	ldr	r9, [sp, #24]
   29c68:	mov	r7, sl
   29c6c:	blt	2a460 <main@@Base+0x14220>
   29c70:	ldr	r2, [sp, #28]
   29c74:	mov	r1, sl
   29c78:	ldrb	r0, [r1, #8]!
   29c7c:	ldr	r2, [r2]
   29c80:	cmp	r2, #0
   29c84:	beq	29d14 <main@@Base+0x13ad4>
   29c88:	cmp	r0, #33	; 0x21
   29c8c:	bcc	29c9c <main@@Base+0x13a5c>
   29c90:	cmp	r0, #58	; 0x3a
   29c94:	mov	r7, sl
   29c98:	bne	2a460 <main@@Base+0x14220>
   29c9c:	ldr	r0, [sp, #28]
   29ca0:	mov	r2, #0
   29ca4:	str	r2, [r0]
   29ca8:	b	29d24 <main@@Base+0x13ae4>
   29cac:	teq	r7, r1
   29cb0:	bne	29e48 <main@@Base+0x13c08>
   29cb4:	cmp	r9, #5
   29cb8:	ldr	r9, [sp, #24]
   29cbc:	mov	r1, sl
   29cc0:	blt	2a8c4 <main@@Base+0x14684>
   29cc4:	ldr	r1, [sp, #28]
   29cc8:	mov	r2, sl
   29ccc:	ldrb	r0, [r2, #4]!
   29cd0:	ldr	r1, [r1]
   29cd4:	cmp	r1, #0
   29cd8:	beq	29d4c <main@@Base+0x13b0c>
   29cdc:	cmp	r0, #33	; 0x21
   29ce0:	bcc	29cf0 <main@@Base+0x13ab0>
   29ce4:	cmp	r0, #58	; 0x3a
   29ce8:	mov	r1, sl
   29cec:	bne	2a8c4 <main@@Base+0x14684>
   29cf0:	ldr	r0, [sp, #28]
   29cf4:	mov	r1, #0
   29cf8:	str	r1, [r0]
   29cfc:	b	29d5c <main@@Base+0x13b1c>
   29d00:	ldr	r0, [sp, #24]
   29d04:	mov	r2, r8
   29d08:	mov	r3, #4
   29d0c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   29d10:	b	2a2f0 <main@@Base+0x140b0>
   29d14:	cmp	r0, #34	; 0x22
   29d18:	mov	r7, sl
   29d1c:	bne	2a460 <main@@Base+0x14220>
   29d20:	add	r1, sl, #9
   29d24:	sub	r0, r8, r1
   29d28:	cmp	r0, #2
   29d2c:	blt	29eec <main@@Base+0x13cac>
   29d30:	ldrb	r0, [r1]
   29d34:	cmp	r0, #32
   29d38:	bls	29ed8 <main@@Base+0x13c98>
   29d3c:	mov	r7, r1
   29d40:	cmp	r7, r8
   29d44:	bne	29f04 <main@@Base+0x13cc4>
   29d48:	b	29f40 <main@@Base+0x13d00>
   29d4c:	cmp	r0, #34	; 0x22
   29d50:	mov	r1, sl
   29d54:	bne	2a8c4 <main@@Base+0x14684>
   29d58:	add	r2, sl, #5
   29d5c:	sub	r0, r8, r2
   29d60:	cmp	r0, #2
   29d64:	blt	2a264 <main@@Base+0x14024>
   29d68:	ldrb	r0, [r2]
   29d6c:	cmp	r0, #32
   29d70:	bls	2a250 <main@@Base+0x14010>
   29d74:	mov	r1, r2
   29d78:	cmp	r1, r8
   29d7c:	bne	2a280 <main@@Base+0x14040>
   29d80:	b	2a2bc <main@@Base+0x1407c>
   29d84:	andeq	r6, r3, r4, lsr #8
   29d88:	bne	29d9c <main@@Base+0x13b5c>
   29d8c:	mov	r1, r2
   29d90:	ldrb	r0, [r1, #1]!
   29d94:	cmp	r0, #32
   29d98:	bhi	29db0 <main@@Base+0x13b70>
   29d9c:	ldr	r0, [sp, #24]
   29da0:	mov	r1, r2
   29da4:	mov	r2, r8
   29da8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29dac:	mov	r1, r0
   29db0:	cmp	r1, r8
   29db4:	beq	29e58 <main@@Base+0x13c18>
   29db8:	ldrb	r0, [r1]
   29dbc:	cmp	r0, #58	; 0x3a
   29dc0:	bne	29e58 <main@@Base+0x13c18>
   29dc4:	add	r2, r1, #1
   29dc8:	sub	r0, r8, r2
   29dcc:	cmp	r0, #2
   29dd0:	blt	2a33c <main@@Base+0x140fc>
   29dd4:	ldrb	r0, [r2]
   29dd8:	cmp	r0, #32
   29ddc:	bls	2a32c <main@@Base+0x140ec>
   29de0:	mov	r1, r2
   29de4:	cmp	sl, r1
   29de8:	bne	2a358 <main@@Base+0x14118>
   29dec:	ldr	r0, [sp, #12]
   29df0:	eor	r0, r7, r0
   29df4:	orrs	r0, r5, r0
   29df8:	bne	29e48 <main@@Base+0x13c08>
   29dfc:	cmp	r9, #9
   29e00:	ldr	r9, [sp, #24]
   29e04:	mov	r7, sl
   29e08:	blt	2a5dc <main@@Base+0x1439c>
   29e0c:	ldr	r2, [sp, #28]
   29e10:	mov	r1, sl
   29e14:	ldrb	r0, [r1, #8]!
   29e18:	ldr	r2, [r2]
   29e1c:	cmp	r2, #0
   29e20:	beq	29e6c <main@@Base+0x13c2c>
   29e24:	cmp	r0, #33	; 0x21
   29e28:	bcc	29e38 <main@@Base+0x13bf8>
   29e2c:	cmp	r0, #58	; 0x3a
   29e30:	mov	r7, sl
   29e34:	bne	2a5dc <main@@Base+0x1439c>
   29e38:	ldr	r0, [sp, #28]
   29e3c:	mov	r2, #0
   29e40:	str	r2, [r0]
   29e44:	b	29e7c <main@@Base+0x13c3c>
   29e48:	ldr	r9, [sp, #24]
   29e4c:	mov	r0, r9
   29e50:	mov	r1, sl
   29e54:	b	2ab68 <main@@Base+0x14928>
   29e58:	ldr	r0, [sp, #24]
   29e5c:	mov	r2, r8
   29e60:	mov	r3, #4
   29e64:	bl	36078 <flatcc_json_parser_set_error@@Base>
   29e68:	b	2a34c <main@@Base+0x1410c>
   29e6c:	cmp	r0, #34	; 0x22
   29e70:	mov	r7, sl
   29e74:	bne	2a5dc <main@@Base+0x1439c>
   29e78:	add	r1, sl, #9
   29e7c:	sub	r0, r8, r1
   29e80:	cmp	r0, #2
   29e84:	blt	29f6c <main@@Base+0x13d2c>
   29e88:	ldrb	r0, [r1]
   29e8c:	cmp	r0, #32
   29e90:	bls	29f58 <main@@Base+0x13d18>
   29e94:	mov	r7, r1
   29e98:	cmp	r7, r8
   29e9c:	bne	29f84 <main@@Base+0x13d44>
   29ea0:	b	2a030 <main@@Base+0x13df0>
   29ea4:	cmp	r0, #34	; 0x22
   29ea8:	bne	2ab5c <main@@Base+0x1491c>
   29eac:	add	r1, sl, #10
   29eb0:	sub	r0, r8, r1
   29eb4:	cmp	r0, #2
   29eb8:	blt	2a3d4 <main@@Base+0x14194>
   29ebc:	ldrb	r0, [r1]
   29ec0:	cmp	r0, #32
   29ec4:	bls	2a3c0 <main@@Base+0x14180>
   29ec8:	mov	r9, r1
   29ecc:	cmp	r9, r8
   29ed0:	bne	2a3ec <main@@Base+0x141ac>
   29ed4:	b	2a424 <main@@Base+0x141e4>
   29ed8:	bne	29eec <main@@Base+0x13cac>
   29edc:	mov	r7, r1
   29ee0:	ldrb	r0, [r7, #1]!
   29ee4:	cmp	r0, #32
   29ee8:	bhi	29efc <main@@Base+0x13cbc>
   29eec:	mov	r0, r9
   29ef0:	mov	r2, r8
   29ef4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29ef8:	mov	r7, r0
   29efc:	cmp	r7, r8
   29f00:	beq	29f40 <main@@Base+0x13d00>
   29f04:	ldrb	r0, [r7]
   29f08:	cmp	r0, #58	; 0x3a
   29f0c:	bne	29f40 <main@@Base+0x13d00>
   29f10:	add	r1, r7, #1
   29f14:	sub	r0, r8, r1
   29f18:	cmp	r0, #2
   29f1c:	blt	2a450 <main@@Base+0x14210>
   29f20:	ldrb	r0, [r1]
   29f24:	cmp	r0, #32
   29f28:	bls	2a43c <main@@Base+0x141fc>
   29f2c:	ldr	r9, [sp, #24]
   29f30:	mov	r7, r1
   29f34:	cmp	sl, r7
   29f38:	bne	2a468 <main@@Base+0x14228>
   29f3c:	b	29e4c <main@@Base+0x13c0c>
   29f40:	mov	r0, r9
   29f44:	mov	r1, r7
   29f48:	mov	r2, r8
   29f4c:	mov	r3, #4
   29f50:	bl	36078 <flatcc_json_parser_set_error@@Base>
   29f54:	b	2a45c <main@@Base+0x1421c>
   29f58:	bne	29f6c <main@@Base+0x13d2c>
   29f5c:	mov	r7, r1
   29f60:	ldrb	r0, [r7, #1]!
   29f64:	cmp	r0, #32
   29f68:	bhi	29f7c <main@@Base+0x13d3c>
   29f6c:	mov	r0, r9
   29f70:	mov	r2, r8
   29f74:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   29f78:	mov	r7, r0
   29f7c:	cmp	r7, r8
   29f80:	beq	2a030 <main@@Base+0x13df0>
   29f84:	ldrb	r0, [r7]
   29f88:	cmp	r0, #58	; 0x3a
   29f8c:	bne	2a030 <main@@Base+0x13df0>
   29f90:	add	r1, r7, #1
   29f94:	sub	r0, r8, r1
   29f98:	cmp	r0, #2
   29f9c:	blt	2a5cc <main@@Base+0x1438c>
   29fa0:	ldrb	r0, [r1]
   29fa4:	cmp	r0, #32
   29fa8:	bls	2a5b8 <main@@Base+0x14378>
   29fac:	ldr	r9, [sp, #24]
   29fb0:	mov	r7, r1
   29fb4:	cmp	sl, r7
   29fb8:	bne	2a5e4 <main@@Base+0x143a4>
   29fbc:	add	r7, sl, #8
   29fc0:	mov	r1, #8
   29fc4:	mov	r2, #-268435456	; 0xf0000000
   29fc8:	sub	r0, r8, r7
   29fcc:	cmp	r0, #8
   29fd0:	movcc	r1, r0
   29fd4:	add	r1, r2, r1, lsl #28
   29fd8:	asr	r1, r1, #28
   29fdc:	cmp	r1, #0
   29fe0:	blt	2ab60 <main@@Base+0x14920>
   29fe4:	ldrb	r1, [r7]
   29fe8:	cmp	r1, #53	; 0x35
   29fec:	bne	2ab60 <main@@Base+0x14920>
   29ff0:	cmp	r0, #2
   29ff4:	blt	2ab5c <main@@Base+0x1491c>
   29ff8:	ldr	r2, [sp, #28]
   29ffc:	mov	r1, sl
   2a000:	ldrb	r0, [r1, #9]!
   2a004:	ldr	r2, [r2]
   2a008:	cmp	r2, #0
   2a00c:	beq	2a388 <main@@Base+0x14148>
   2a010:	cmp	r0, #33	; 0x21
   2a014:	bcc	2a020 <main@@Base+0x13de0>
   2a018:	cmp	r0, #58	; 0x3a
   2a01c:	bne	2ab5c <main@@Base+0x1491c>
   2a020:	ldr	r0, [sp, #28]
   2a024:	mov	r2, #0
   2a028:	str	r2, [r0]
   2a02c:	b	2a394 <main@@Base+0x14154>
   2a030:	mov	r0, r9
   2a034:	mov	r1, r7
   2a038:	mov	r2, r8
   2a03c:	mov	r3, #4
   2a040:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a044:	b	2a5d8 <main@@Base+0x14398>
   2a048:	bne	2a058 <main@@Base+0x13e18>
   2a04c:	ldrb	r0, [r7, #2]!
   2a050:	cmp	r0, #32
   2a054:	bhi	2a068 <main@@Base+0x13e28>
   2a058:	mov	r0, r9
   2a05c:	mov	r2, r8
   2a060:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a064:	mov	r7, r0
   2a068:	cmp	sl, r7
   2a06c:	beq	29b28 <main@@Base+0x138e8>
   2a070:	mov	r5, #0
   2a074:	cmp	r7, r8
   2a078:	str	r5, [fp, #-36]	; 0xffffffdc
   2a07c:	str	r5, [fp, #-40]	; 0xffffffd8
   2a080:	str	r5, [sp, #44]	; 0x2c
   2a084:	str	r5, [sp, #40]	; 0x28
   2a088:	str	r5, [fp, #-44]	; 0xffffffd4
   2a08c:	beq	2a0ec <main@@Base+0x13eac>
   2a090:	sub	r0, fp, #40	; 0x28
   2a094:	mov	r1, r7
   2a098:	mov	r2, r8
   2a09c:	sub	r3, fp, #44	; 0x2c
   2a0a0:	str	r0, [sp]
   2a0a4:	mov	r0, r9
   2a0a8:	bl	38410 <flatcc_json_parser_integer@@Base>
   2a0ac:	ldr	r6, [sp, #32]
   2a0b0:	cmp	r0, r7
   2a0b4:	beq	2a104 <main@@Base+0x13ec4>
   2a0b8:	sub	sl, fp, #44	; 0x2c
   2a0bc:	mov	r4, r0
   2a0c0:	ldm	sl, {r0, r5, sl}
   2a0c4:	cmp	r0, #0
   2a0c8:	beq	2a11c <main@@Base+0x13edc>
   2a0cc:	subs	r0, r5, #1
   2a0d0:	sbcs	r0, sl, #-2147483648	; 0x80000000
   2a0d4:	bcc	2a150 <main@@Base+0x13f10>
   2a0d8:	mov	r0, r9
   2a0dc:	mov	r1, r4
   2a0e0:	mov	r2, r8
   2a0e4:	mov	r3, #8
   2a0e8:	b	2a134 <main@@Base+0x13ef4>
   2a0ec:	ldr	r6, [sp, #32]
   2a0f0:	mov	sl, #0
   2a0f4:	mov	r4, r8
   2a0f8:	cmp	r7, r4
   2a0fc:	bne	2a1a0 <main@@Base+0x13f60>
   2a100:	b	2a168 <main@@Base+0x13f28>
   2a104:	mov	r5, #0
   2a108:	mov	sl, #0
   2a10c:	mov	r4, r7
   2a110:	cmp	r7, r4
   2a114:	bne	2a1a0 <main@@Base+0x13f60>
   2a118:	b	2a168 <main@@Base+0x13f28>
   2a11c:	cmn	sl, #1
   2a120:	bgt	2a158 <main@@Base+0x13f18>
   2a124:	mov	r0, r9
   2a128:	mov	r1, r4
   2a12c:	mov	r2, r8
   2a130:	mov	r3, #7
   2a134:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a138:	mov	r4, r0
   2a13c:	mov	r5, #0
   2a140:	mov	sl, #0
   2a144:	cmp	r7, r4
   2a148:	bne	2a1a0 <main@@Base+0x13f60>
   2a14c:	b	2a168 <main@@Base+0x13f28>
   2a150:	rsbs	r5, r5, #0
   2a154:	rsc	sl, sl, #0
   2a158:	str	r5, [sp, #40]	; 0x28
   2a15c:	str	sl, [sp, #44]	; 0x2c
   2a160:	cmp	r7, r4
   2a164:	bne	2a1a0 <main@@Base+0x13f60>
   2a168:	add	r0, sp, #40	; 0x28
   2a16c:	mov	r1, r7
   2a170:	mov	r2, r8
   2a174:	str	r0, [sp]
   2a178:	mov	r0, r9
   2a17c:	ldr	r3, [pc, #3144]	; 2adcc <main@@Base+0x14b8c>
   2a180:	add	r3, pc, r3
   2a184:	bl	25c0c <main@@Base+0xf9cc>
   2a188:	mov	r4, r0
   2a18c:	cmp	r0, r7
   2a190:	cmpne	r4, r8
   2a194:	beq	2ada8 <main@@Base+0x14b68>
   2a198:	ldr	r5, [sp, #40]	; 0x28
   2a19c:	ldr	sl, [sp, #44]	; 0x2c
   2a1a0:	orrs	r0, r5, sl
   2a1a4:	bne	2a1b4 <main@@Base+0x13f74>
   2a1a8:	ldrb	r0, [r9, #8]
   2a1ac:	tst	r0, #2
   2a1b0:	beq	2ab78 <main@@Base+0x14938>
   2a1b4:	ldr	r0, [r9]
   2a1b8:	mov	r1, #5
   2a1bc:	mov	r2, #8
   2a1c0:	mov	r3, #8
   2a1c4:	bl	32964 <flatcc_builder_table_add@@Base>
   2a1c8:	cmp	r0, #0
   2a1cc:	bne	2a748 <main@@Base+0x14508>
   2a1d0:	b	2ada8 <main@@Base+0x14b68>
   2a1d4:	bne	2a1e8 <main@@Base+0x13fa8>
   2a1d8:	mov	r9, r1
   2a1dc:	ldrb	r0, [r9, #1]!
   2a1e0:	cmp	r0, #32
   2a1e4:	bhi	2a1f8 <main@@Base+0x13fb8>
   2a1e8:	ldr	r0, [sp, #24]
   2a1ec:	mov	r2, r8
   2a1f0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a1f4:	mov	r9, r0
   2a1f8:	cmp	r9, r8
   2a1fc:	beq	2a238 <main@@Base+0x13ff8>
   2a200:	ldrb	r0, [r9]
   2a204:	cmp	r0, #58	; 0x3a
   2a208:	bne	2a238 <main@@Base+0x13ff8>
   2a20c:	add	r1, r9, #1
   2a210:	sub	r0, r8, r1
   2a214:	cmp	r0, #2
   2a218:	blt	2a760 <main@@Base+0x14520>
   2a21c:	ldrb	r0, [r1]
   2a220:	cmp	r0, #32
   2a224:	bls	2a750 <main@@Base+0x14510>
   2a228:	mov	r9, r1
   2a22c:	cmp	r7, r9
   2a230:	bne	2a778 <main@@Base+0x14538>
   2a234:	b	2ab5c <main@@Base+0x1491c>
   2a238:	ldr	r0, [sp, #24]
   2a23c:	mov	r1, r9
   2a240:	mov	r2, r8
   2a244:	mov	r3, #4
   2a248:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a24c:	b	2a76c <main@@Base+0x1452c>
   2a250:	bne	2a264 <main@@Base+0x14024>
   2a254:	mov	r1, r2
   2a258:	ldrb	r0, [r1, #1]!
   2a25c:	cmp	r0, #32
   2a260:	bhi	2a278 <main@@Base+0x14038>
   2a264:	mov	r1, r2
   2a268:	mov	r0, r9
   2a26c:	mov	r2, r8
   2a270:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a274:	mov	r1, r0
   2a278:	cmp	r1, r8
   2a27c:	beq	2a2bc <main@@Base+0x1407c>
   2a280:	ldrb	r0, [r1]
   2a284:	cmp	r0, #58	; 0x3a
   2a288:	bne	2a2bc <main@@Base+0x1407c>
   2a28c:	add	r2, r1, #1
   2a290:	sub	r0, r8, r2
   2a294:	cmp	r0, #2
   2a298:	blt	2a8b0 <main@@Base+0x14670>
   2a29c:	ldrb	r0, [r2]
   2a2a0:	cmp	r0, #32
   2a2a4:	bls	2a89c <main@@Base+0x1465c>
   2a2a8:	ldr	r9, [sp, #24]
   2a2ac:	mov	r1, r2
   2a2b0:	cmp	sl, r1
   2a2b4:	bne	2a8cc <main@@Base+0x1468c>
   2a2b8:	b	29e4c <main@@Base+0x13c0c>
   2a2bc:	mov	r0, r9
   2a2c0:	mov	r2, r8
   2a2c4:	mov	r3, #4
   2a2c8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a2cc:	b	2a8c0 <main@@Base+0x14680>
   2a2d0:	bne	2a2e0 <main@@Base+0x140a0>
   2a2d4:	ldrb	r0, [r1, #2]!
   2a2d8:	cmp	r0, #32
   2a2dc:	bhi	2a2f4 <main@@Base+0x140b4>
   2a2e0:	ldr	r0, [sp, #24]
   2a2e4:	mov	r1, r2
   2a2e8:	mov	r2, r8
   2a2ec:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a2f0:	mov	r1, r0
   2a2f4:	cmp	sl, r1
   2a2f8:	beq	29c4c <main@@Base+0x13a0c>
   2a2fc:	ldr	r9, [sp, #24]
   2a300:	mov	r2, r8
   2a304:	add	r3, sp, #36	; 0x24
   2a308:	mov	r0, r9
   2a30c:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   2a310:	mov	r4, r0
   2a314:	ldr	r0, [sp, #36]	; 0x24
   2a318:	cmp	r0, #0
   2a31c:	beq	2ada8 <main@@Base+0x14b68>
   2a320:	ldr	r0, [r9]
   2a324:	mov	r1, #0
   2a328:	b	2a8f4 <main@@Base+0x146b4>
   2a32c:	bne	2a33c <main@@Base+0x140fc>
   2a330:	ldrb	r0, [r1, #2]!
   2a334:	cmp	r0, #32
   2a338:	bhi	2a350 <main@@Base+0x14110>
   2a33c:	ldr	r0, [sp, #24]
   2a340:	mov	r1, r2
   2a344:	mov	r2, r8
   2a348:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a34c:	mov	r1, r0
   2a350:	cmp	sl, r1
   2a354:	beq	29dec <main@@Base+0x13bac>
   2a358:	ldr	r9, [sp, #24]
   2a35c:	mov	r2, r8
   2a360:	add	r3, sp, #36	; 0x24
   2a364:	mov	r0, r9
   2a368:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   2a36c:	mov	r4, r0
   2a370:	ldr	r0, [sp, #36]	; 0x24
   2a374:	cmp	r0, #0
   2a378:	beq	2ada8 <main@@Base+0x14b68>
   2a37c:	ldr	r0, [r9]
   2a380:	mov	r1, #4
   2a384:	b	2a8f4 <main@@Base+0x146b4>
   2a388:	cmp	r0, #34	; 0x22
   2a38c:	bne	2ab5c <main@@Base+0x1491c>
   2a390:	add	r1, sl, #10
   2a394:	sub	r0, r8, r1
   2a398:	cmp	r0, #2
   2a39c:	blt	2a924 <main@@Base+0x146e4>
   2a3a0:	ldrb	r0, [r1]
   2a3a4:	cmp	r0, #32
   2a3a8:	bls	2a910 <main@@Base+0x146d0>
   2a3ac:	mov	r9, r1
   2a3b0:	cmp	r9, r8
   2a3b4:	bne	2a93c <main@@Base+0x146fc>
   2a3b8:	b	2a974 <main@@Base+0x14734>
   2a3bc:	andeq	r5, r3, r8, asr #28
   2a3c0:	bne	2a3d4 <main@@Base+0x14194>
   2a3c4:	mov	r9, r1
   2a3c8:	ldrb	r0, [r9, #1]!
   2a3cc:	cmp	r0, #32
   2a3d0:	bhi	2a3e4 <main@@Base+0x141a4>
   2a3d4:	ldr	r0, [sp, #24]
   2a3d8:	mov	r2, r8
   2a3dc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a3e0:	mov	r9, r0
   2a3e4:	cmp	r9, r8
   2a3e8:	beq	2a424 <main@@Base+0x141e4>
   2a3ec:	ldrb	r0, [r9]
   2a3f0:	cmp	r0, #58	; 0x3a
   2a3f4:	bne	2a424 <main@@Base+0x141e4>
   2a3f8:	add	r1, r9, #1
   2a3fc:	sub	r0, r8, r1
   2a400:	cmp	r0, #2
   2a404:	blt	2a99c <main@@Base+0x1475c>
   2a408:	ldrb	r0, [r1]
   2a40c:	cmp	r0, #32
   2a410:	bls	2a98c <main@@Base+0x1474c>
   2a414:	mov	r9, r1
   2a418:	cmp	r7, r9
   2a41c:	bne	2a9b4 <main@@Base+0x14774>
   2a420:	b	2ab5c <main@@Base+0x1491c>
   2a424:	ldr	r0, [sp, #24]
   2a428:	mov	r1, r9
   2a42c:	mov	r2, r8
   2a430:	mov	r3, #4
   2a434:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a438:	b	2a9a8 <main@@Base+0x14768>
   2a43c:	ldr	r9, [sp, #24]
   2a440:	bne	2a450 <main@@Base+0x14210>
   2a444:	ldrb	r0, [r7, #2]!
   2a448:	cmp	r0, #32
   2a44c:	bhi	2a460 <main@@Base+0x14220>
   2a450:	mov	r0, r9
   2a454:	mov	r2, r8
   2a458:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a45c:	mov	r7, r0
   2a460:	cmp	sl, r7
   2a464:	beq	29e4c <main@@Base+0x13c0c>
   2a468:	mov	r5, #0
   2a46c:	cmp	r7, r8
   2a470:	str	r5, [fp, #-36]	; 0xffffffdc
   2a474:	str	r5, [fp, #-40]	; 0xffffffd8
   2a478:	str	r5, [sp, #44]	; 0x2c
   2a47c:	str	r5, [sp, #40]	; 0x28
   2a480:	str	r5, [fp, #-44]	; 0xffffffd4
   2a484:	beq	2a4e4 <main@@Base+0x142a4>
   2a488:	sub	r0, fp, #40	; 0x28
   2a48c:	mov	r1, r7
   2a490:	mov	r2, r8
   2a494:	sub	r3, fp, #44	; 0x2c
   2a498:	str	r0, [sp]
   2a49c:	mov	r0, r9
   2a4a0:	bl	38410 <flatcc_json_parser_integer@@Base>
   2a4a4:	ldr	r6, [sp, #32]
   2a4a8:	cmp	r0, r7
   2a4ac:	beq	2a4fc <main@@Base+0x142bc>
   2a4b0:	sub	sl, fp, #44	; 0x2c
   2a4b4:	mov	r4, r0
   2a4b8:	ldm	sl, {r0, r5, sl}
   2a4bc:	cmp	r0, #0
   2a4c0:	beq	2a514 <main@@Base+0x142d4>
   2a4c4:	subs	r0, r5, #1
   2a4c8:	sbcs	r0, sl, #-2147483648	; 0x80000000
   2a4cc:	bcc	2a548 <main@@Base+0x14308>
   2a4d0:	mov	r0, r9
   2a4d4:	mov	r1, r4
   2a4d8:	mov	r2, r8
   2a4dc:	mov	r3, #8
   2a4e0:	b	2a52c <main@@Base+0x142ec>
   2a4e4:	ldr	r6, [sp, #32]
   2a4e8:	mov	sl, #0
   2a4ec:	mov	r4, r8
   2a4f0:	cmp	r7, r4
   2a4f4:	bne	2a598 <main@@Base+0x14358>
   2a4f8:	b	2a560 <main@@Base+0x14320>
   2a4fc:	mov	r5, #0
   2a500:	mov	sl, #0
   2a504:	mov	r4, r7
   2a508:	cmp	r7, r4
   2a50c:	bne	2a598 <main@@Base+0x14358>
   2a510:	b	2a560 <main@@Base+0x14320>
   2a514:	cmn	sl, #1
   2a518:	bgt	2a550 <main@@Base+0x14310>
   2a51c:	mov	r0, r9
   2a520:	mov	r1, r4
   2a524:	mov	r2, r8
   2a528:	mov	r3, #7
   2a52c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a530:	mov	r4, r0
   2a534:	mov	r5, #0
   2a538:	mov	sl, #0
   2a53c:	cmp	r7, r4
   2a540:	bne	2a598 <main@@Base+0x14358>
   2a544:	b	2a560 <main@@Base+0x14320>
   2a548:	rsbs	r5, r5, #0
   2a54c:	rsc	sl, sl, #0
   2a550:	str	r5, [sp, #40]	; 0x28
   2a554:	str	sl, [sp, #44]	; 0x2c
   2a558:	cmp	r7, r4
   2a55c:	bne	2a598 <main@@Base+0x14358>
   2a560:	add	r0, sp, #40	; 0x28
   2a564:	mov	r1, r7
   2a568:	mov	r2, r8
   2a56c:	str	r0, [sp]
   2a570:	mov	r0, r9
   2a574:	ldr	r3, [pc, #2124]	; 2adc8 <main@@Base+0x14b88>
   2a578:	add	r3, pc, r3
   2a57c:	bl	25c0c <main@@Base+0xf9cc>
   2a580:	mov	r4, r0
   2a584:	cmp	r0, r7
   2a588:	cmpne	r4, r8
   2a58c:	beq	2ada4 <main@@Base+0x14b64>
   2a590:	ldr	r5, [sp, #40]	; 0x28
   2a594:	ldr	sl, [sp, #44]	; 0x2c
   2a598:	orrs	r0, r5, sl
   2a59c:	bne	2a5ac <main@@Base+0x1436c>
   2a5a0:	ldrb	r0, [r9, #8]
   2a5a4:	tst	r0, #2
   2a5a8:	beq	2ab78 <main@@Base+0x14938>
   2a5ac:	ldr	r0, [r9]
   2a5b0:	mov	r1, #3
   2a5b4:	b	2a734 <main@@Base+0x144f4>
   2a5b8:	ldr	r9, [sp, #24]
   2a5bc:	bne	2a5cc <main@@Base+0x1438c>
   2a5c0:	ldrb	r0, [r7, #2]!
   2a5c4:	cmp	r0, #32
   2a5c8:	bhi	2a5dc <main@@Base+0x1439c>
   2a5cc:	mov	r0, r9
   2a5d0:	mov	r2, r8
   2a5d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a5d8:	mov	r7, r0
   2a5dc:	cmp	sl, r7
   2a5e0:	beq	29fbc <main@@Base+0x13d7c>
   2a5e4:	mov	r5, #0
   2a5e8:	cmp	r7, r8
   2a5ec:	str	r5, [fp, #-36]	; 0xffffffdc
   2a5f0:	str	r5, [fp, #-40]	; 0xffffffd8
   2a5f4:	str	r5, [sp, #44]	; 0x2c
   2a5f8:	str	r5, [sp, #40]	; 0x28
   2a5fc:	str	r5, [fp, #-44]	; 0xffffffd4
   2a600:	beq	2a660 <main@@Base+0x14420>
   2a604:	sub	r0, fp, #40	; 0x28
   2a608:	mov	r1, r7
   2a60c:	mov	r2, r8
   2a610:	sub	r3, fp, #44	; 0x2c
   2a614:	str	r0, [sp]
   2a618:	mov	r0, r9
   2a61c:	bl	38410 <flatcc_json_parser_integer@@Base>
   2a620:	ldr	r6, [sp, #32]
   2a624:	cmp	r0, r7
   2a628:	beq	2a678 <main@@Base+0x14438>
   2a62c:	sub	sl, fp, #44	; 0x2c
   2a630:	mov	r4, r0
   2a634:	ldm	sl, {r0, r5, sl}
   2a638:	cmp	r0, #0
   2a63c:	beq	2a690 <main@@Base+0x14450>
   2a640:	subs	r0, r5, #1
   2a644:	sbcs	r0, sl, #-2147483648	; 0x80000000
   2a648:	bcc	2a6c8 <main@@Base+0x14488>
   2a64c:	mov	r0, r9
   2a650:	mov	r1, r4
   2a654:	mov	r2, r8
   2a658:	mov	r3, #8
   2a65c:	b	2a6a8 <main@@Base+0x14468>
   2a660:	ldr	r6, [sp, #32]
   2a664:	mov	sl, #0
   2a668:	mov	r4, r8
   2a66c:	cmp	r7, r4
   2a670:	bne	2a718 <main@@Base+0x144d8>
   2a674:	b	2a6e0 <main@@Base+0x144a0>
   2a678:	mov	r5, #0
   2a67c:	mov	sl, #0
   2a680:	mov	r4, r7
   2a684:	cmp	r7, r4
   2a688:	bne	2a718 <main@@Base+0x144d8>
   2a68c:	b	2a6e0 <main@@Base+0x144a0>
   2a690:	cmn	sl, #1
   2a694:	bgt	2a6d0 <main@@Base+0x14490>
   2a698:	mov	r0, r9
   2a69c:	mov	r1, r4
   2a6a0:	mov	r2, r8
   2a6a4:	mov	r3, #7
   2a6a8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a6ac:	mov	r4, r0
   2a6b0:	mov	r5, #0
   2a6b4:	mov	sl, #0
   2a6b8:	cmp	r7, r4
   2a6bc:	bne	2a718 <main@@Base+0x144d8>
   2a6c0:	b	2a6e0 <main@@Base+0x144a0>
   2a6c4:	andeq	r5, r3, r4, lsr #23
   2a6c8:	rsbs	r5, r5, #0
   2a6cc:	rsc	sl, sl, #0
   2a6d0:	str	r5, [sp, #40]	; 0x28
   2a6d4:	str	sl, [sp, #44]	; 0x2c
   2a6d8:	cmp	r7, r4
   2a6dc:	bne	2a718 <main@@Base+0x144d8>
   2a6e0:	add	r0, sp, #40	; 0x28
   2a6e4:	mov	r1, r7
   2a6e8:	mov	r2, r8
   2a6ec:	str	r0, [sp]
   2a6f0:	mov	r0, r9
   2a6f4:	ldr	r3, [pc, #1752]	; 2add4 <main@@Base+0x14b94>
   2a6f8:	add	r3, pc, r3
   2a6fc:	bl	25c0c <main@@Base+0xf9cc>
   2a700:	mov	r4, r0
   2a704:	cmp	r0, r7
   2a708:	cmpne	r4, r8
   2a70c:	beq	2ada4 <main@@Base+0x14b64>
   2a710:	ldr	r5, [sp, #40]	; 0x28
   2a714:	ldr	sl, [sp, #44]	; 0x2c
   2a718:	orrs	r0, r5, sl
   2a71c:	bne	2a72c <main@@Base+0x144ec>
   2a720:	ldrb	r0, [r9, #8]
   2a724:	tst	r0, #2
   2a728:	beq	2ab78 <main@@Base+0x14938>
   2a72c:	ldr	r0, [r9]
   2a730:	mov	r1, #7
   2a734:	mov	r2, #8
   2a738:	mov	r3, #8
   2a73c:	bl	32964 <flatcc_builder_table_add@@Base>
   2a740:	cmp	r0, #0
   2a744:	beq	2ada4 <main@@Base+0x14b64>
   2a748:	stm	r0, {r5, sl}
   2a74c:	b	2ab78 <main@@Base+0x14938>
   2a750:	bne	2a760 <main@@Base+0x14520>
   2a754:	ldrb	r0, [r9, #2]!
   2a758:	cmp	r0, #32
   2a75c:	bhi	2a770 <main@@Base+0x14530>
   2a760:	ldr	r0, [sp, #24]
   2a764:	mov	r2, r8
   2a768:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a76c:	mov	r9, r0
   2a770:	cmp	r7, r9
   2a774:	beq	2ab5c <main@@Base+0x1491c>
   2a778:	mov	r5, #0
   2a77c:	cmp	r9, r8
   2a780:	str	r5, [fp, #-36]	; 0xffffffdc
   2a784:	str	r5, [fp, #-40]	; 0xffffffd8
   2a788:	str	r5, [fp, #-44]	; 0xffffffd4
   2a78c:	str	r5, [sp, #40]	; 0x28
   2a790:	beq	2a7dc <main@@Base+0x1459c>
   2a794:	sub	r0, fp, #40	; 0x28
   2a798:	mov	r1, r9
   2a79c:	mov	r2, r8
   2a7a0:	add	r3, sp, #40	; 0x28
   2a7a4:	str	r0, [sp]
   2a7a8:	ldr	r0, [sp, #24]
   2a7ac:	bl	38410 <flatcc_json_parser_integer@@Base>
   2a7b0:	cmp	r0, r9
   2a7b4:	beq	2a7e4 <main@@Base+0x145a4>
   2a7b8:	mov	r4, r0
   2a7bc:	ldr	r0, [sp, #40]	; 0x28
   2a7c0:	cmp	r0, #0
   2a7c4:	beq	2a7ec <main@@Base+0x145ac>
   2a7c8:	ldr	r0, [sp, #24]
   2a7cc:	mov	r1, r4
   2a7d0:	mov	r2, r8
   2a7d4:	mov	r3, #8
   2a7d8:	b	2a808 <main@@Base+0x145c8>
   2a7dc:	mov	r4, r8
   2a7e0:	b	2a810 <main@@Base+0x145d0>
   2a7e4:	mov	r4, r9
   2a7e8:	b	2a810 <main@@Base+0x145d0>
   2a7ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a7f0:	cmp	r0, #0
   2a7f4:	beq	2a890 <main@@Base+0x14650>
   2a7f8:	ldr	r0, [sp, #24]
   2a7fc:	mov	r1, r4
   2a800:	mov	r2, r8
   2a804:	mov	r3, #7
   2a808:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a80c:	mov	r4, r0
   2a810:	ldr	r6, [sp, #32]
   2a814:	cmp	r9, r4
   2a818:	bne	2a854 <main@@Base+0x14614>
   2a81c:	sub	r0, fp, #44	; 0x2c
   2a820:	mov	r1, r9
   2a824:	mov	r2, r8
   2a828:	str	r0, [sp]
   2a82c:	ldr	r0, [sp, #24]
   2a830:	ldr	r3, [pc, #1420]	; 2adc4 <main@@Base+0x14b84>
   2a834:	add	r3, pc, r3
   2a838:	bl	25e28 <main@@Base+0xfbe8>
   2a83c:	mov	r4, r0
   2a840:	cmp	r0, r9
   2a844:	cmpne	r4, r8
   2a848:	beq	2ada4 <main@@Base+0x14b64>
   2a84c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2a850:	ldr	r6, [sp, #32]
   2a854:	ldr	r9, [sp, #24]
   2a858:	cmp	r5, #0
   2a85c:	bne	2a86c <main@@Base+0x1462c>
   2a860:	ldrb	r0, [r9, #8]
   2a864:	tst	r0, #2
   2a868:	beq	2ab78 <main@@Base+0x14938>
   2a86c:	ldr	r0, [r9]
   2a870:	mov	r1, #1
   2a874:	mov	r2, #4
   2a878:	mov	r3, #4
   2a87c:	bl	32964 <flatcc_builder_table_add@@Base>
   2a880:	cmp	r0, #0
   2a884:	beq	2ada4 <main@@Base+0x14b64>
   2a888:	str	r5, [r0]
   2a88c:	b	2ab78 <main@@Base+0x14938>
   2a890:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2a894:	str	r5, [fp, #-44]	; 0xffffffd4
   2a898:	b	2a810 <main@@Base+0x145d0>
   2a89c:	ldr	r9, [sp, #24]
   2a8a0:	bne	2a8b0 <main@@Base+0x14670>
   2a8a4:	ldrb	r0, [r1, #2]!
   2a8a8:	cmp	r0, #32
   2a8ac:	bhi	2a8c4 <main@@Base+0x14684>
   2a8b0:	mov	r1, r2
   2a8b4:	mov	r0, r9
   2a8b8:	mov	r2, r8
   2a8bc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a8c0:	mov	r1, r0
   2a8c4:	cmp	sl, r1
   2a8c8:	beq	29e4c <main@@Base+0x13c0c>
   2a8cc:	mov	r0, r9
   2a8d0:	mov	r2, r8
   2a8d4:	add	r3, sp, #36	; 0x24
   2a8d8:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   2a8dc:	mov	r4, r0
   2a8e0:	ldr	r0, [sp, #36]	; 0x24
   2a8e4:	cmp	r0, #0
   2a8e8:	beq	2ada8 <main@@Base+0x14b68>
   2a8ec:	ldr	r0, [r9]
   2a8f0:	mov	r1, #2
   2a8f4:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   2a8f8:	ldr	r6, [sp, #32]
   2a8fc:	cmp	r0, #0
   2a900:	beq	2ada8 <main@@Base+0x14b68>
   2a904:	ldr	r1, [sp, #36]	; 0x24
   2a908:	str	r1, [r0]
   2a90c:	b	2ab78 <main@@Base+0x14938>
   2a910:	bne	2a924 <main@@Base+0x146e4>
   2a914:	mov	r9, r1
   2a918:	ldrb	r0, [r9, #1]!
   2a91c:	cmp	r0, #32
   2a920:	bhi	2a934 <main@@Base+0x146f4>
   2a924:	ldr	r0, [sp, #24]
   2a928:	mov	r2, r8
   2a92c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a930:	mov	r9, r0
   2a934:	cmp	r9, r8
   2a938:	beq	2a974 <main@@Base+0x14734>
   2a93c:	ldrb	r0, [r9]
   2a940:	cmp	r0, #58	; 0x3a
   2a944:	bne	2a974 <main@@Base+0x14734>
   2a948:	add	r1, r9, #1
   2a94c:	sub	r0, r8, r1
   2a950:	cmp	r0, #2
   2a954:	blt	2aae0 <main@@Base+0x148a0>
   2a958:	ldrb	r0, [r1]
   2a95c:	cmp	r0, #32
   2a960:	bls	2aad0 <main@@Base+0x14890>
   2a964:	mov	r9, r1
   2a968:	cmp	r7, r9
   2a96c:	bne	2aaf8 <main@@Base+0x148b8>
   2a970:	b	2ab5c <main@@Base+0x1491c>
   2a974:	ldr	r0, [sp, #24]
   2a978:	mov	r1, r9
   2a97c:	mov	r2, r8
   2a980:	mov	r3, #4
   2a984:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2a988:	b	2aaec <main@@Base+0x148ac>
   2a98c:	bne	2a99c <main@@Base+0x1475c>
   2a990:	ldrb	r0, [r9, #2]!
   2a994:	cmp	r0, #32
   2a998:	bhi	2a9ac <main@@Base+0x1476c>
   2a99c:	ldr	r0, [sp, #24]
   2a9a0:	mov	r2, r8
   2a9a4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2a9a8:	mov	r9, r0
   2a9ac:	cmp	r7, r9
   2a9b0:	beq	2ab5c <main@@Base+0x1491c>
   2a9b4:	mov	r5, #0
   2a9b8:	cmp	r9, r8
   2a9bc:	str	r5, [fp, #-36]	; 0xffffffdc
   2a9c0:	str	r5, [fp, #-40]	; 0xffffffd8
   2a9c4:	str	r5, [fp, #-44]	; 0xffffffd4
   2a9c8:	str	r5, [sp, #40]	; 0x28
   2a9cc:	beq	2aa18 <main@@Base+0x147d8>
   2a9d0:	sub	r0, fp, #40	; 0x28
   2a9d4:	mov	r1, r9
   2a9d8:	mov	r2, r8
   2a9dc:	add	r3, sp, #40	; 0x28
   2a9e0:	str	r0, [sp]
   2a9e4:	ldr	r0, [sp, #24]
   2a9e8:	bl	38410 <flatcc_json_parser_integer@@Base>
   2a9ec:	cmp	r0, r9
   2a9f0:	beq	2aa28 <main@@Base+0x147e8>
   2a9f4:	mov	r4, r0
   2a9f8:	ldr	r0, [sp, #40]	; 0x28
   2a9fc:	cmp	r0, #0
   2aa00:	beq	2aa38 <main@@Base+0x147f8>
   2aa04:	ldr	r0, [sp, #24]
   2aa08:	mov	r1, r4
   2aa0c:	mov	r2, r8
   2aa10:	mov	r3, #8
   2aa14:	b	2aa54 <main@@Base+0x14814>
   2aa18:	mov	r4, r8
   2aa1c:	cmp	r9, r4
   2aa20:	bne	2aa98 <main@@Base+0x14858>
   2aa24:	b	2aa64 <main@@Base+0x14824>
   2aa28:	mov	r4, r9
   2aa2c:	cmp	r9, r4
   2aa30:	bne	2aa98 <main@@Base+0x14858>
   2aa34:	b	2aa64 <main@@Base+0x14824>
   2aa38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa3c:	cmp	r0, #0
   2aa40:	beq	2aabc <main@@Base+0x1487c>
   2aa44:	ldr	r0, [sp, #24]
   2aa48:	mov	r1, r4
   2aa4c:	mov	r2, r8
   2aa50:	mov	r3, #7
   2aa54:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2aa58:	mov	r4, r0
   2aa5c:	cmp	r9, r4
   2aa60:	bne	2aa98 <main@@Base+0x14858>
   2aa64:	sub	r0, fp, #44	; 0x2c
   2aa68:	mov	r1, r9
   2aa6c:	mov	r2, r8
   2aa70:	str	r0, [sp]
   2aa74:	ldr	r0, [sp, #24]
   2aa78:	ldr	r3, [pc, #848]	; 2add0 <main@@Base+0x14b90>
   2aa7c:	add	r3, pc, r3
   2aa80:	bl	25e28 <main@@Base+0xfbe8>
   2aa84:	mov	r4, r0
   2aa88:	cmp	r0, r9
   2aa8c:	cmpne	r4, r8
   2aa90:	beq	2ada4 <main@@Base+0x14b64>
   2aa94:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2aa98:	cmp	r5, #0
   2aa9c:	bne	2aab0 <main@@Base+0x14870>
   2aaa0:	ldr	r0, [sp, #24]
   2aaa4:	ldrb	r0, [r0, #8]
   2aaa8:	tst	r0, #2
   2aaac:	beq	2973c <main@@Base+0x134fc>
   2aab0:	ldr	r0, [sp, #24]
   2aab4:	mov	r1, #6
   2aab8:	b	29720 <main@@Base+0x134e0>
   2aabc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2aac0:	str	r5, [fp, #-44]	; 0xffffffd4
   2aac4:	cmp	r9, r4
   2aac8:	bne	2aa98 <main@@Base+0x14858>
   2aacc:	b	2aa64 <main@@Base+0x14824>
   2aad0:	bne	2aae0 <main@@Base+0x148a0>
   2aad4:	ldrb	r0, [r9, #2]!
   2aad8:	cmp	r0, #32
   2aadc:	bhi	2aaf0 <main@@Base+0x148b0>
   2aae0:	ldr	r0, [sp, #24]
   2aae4:	mov	r2, r8
   2aae8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2aaec:	mov	r9, r0
   2aaf0:	cmp	r7, r9
   2aaf4:	beq	2ab5c <main@@Base+0x1491c>
   2aaf8:	mov	r5, #0
   2aafc:	cmp	r9, r8
   2ab00:	str	r5, [fp, #-36]	; 0xffffffdc
   2ab04:	str	r5, [fp, #-40]	; 0xffffffd8
   2ab08:	str	r5, [fp, #-44]	; 0xffffffd4
   2ab0c:	str	r5, [sp, #40]	; 0x28
   2ab10:	beq	2967c <main@@Base+0x1343c>
   2ab14:	sub	r0, fp, #40	; 0x28
   2ab18:	mov	r1, r9
   2ab1c:	mov	r2, r8
   2ab20:	add	r3, sp, #40	; 0x28
   2ab24:	str	r0, [sp]
   2ab28:	ldr	r0, [sp, #24]
   2ab2c:	bl	38410 <flatcc_json_parser_integer@@Base>
   2ab30:	cmp	r0, r9
   2ab34:	beq	2968c <main@@Base+0x1344c>
   2ab38:	mov	r4, r0
   2ab3c:	ldr	r0, [sp, #40]	; 0x28
   2ab40:	cmp	r0, #0
   2ab44:	beq	296a0 <main@@Base+0x13460>
   2ab48:	ldr	r0, [sp, #24]
   2ab4c:	mov	r1, r4
   2ab50:	mov	r2, r8
   2ab54:	mov	r3, #8
   2ab58:	b	296bc <main@@Base+0x1347c>
   2ab5c:	ldr	r9, [sp, #24]
   2ab60:	mov	r0, r9
   2ab64:	mov	r1, r7
   2ab68:	mov	r2, r8
   2ab6c:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2ab70:	mov	r4, r0
   2ab74:	ldr	r6, [sp, #32]
   2ab78:	sub	r0, r8, r4
   2ab7c:	cmp	r0, #2
   2ab80:	blt	2abb4 <main@@Base+0x14974>
   2ab84:	ldrb	r0, [r4]
   2ab88:	cmp	r0, #32
   2ab8c:	bls	2aba0 <main@@Base+0x14960>
   2ab90:	mov	r2, r4
   2ab94:	cmp	r2, r8
   2ab98:	bne	2abd0 <main@@Base+0x14990>
   2ab9c:	b	2ac40 <main@@Base+0x14a00>
   2aba0:	bne	2abb4 <main@@Base+0x14974>
   2aba4:	mov	r2, r4
   2aba8:	ldrb	r0, [r2, #1]!
   2abac:	cmp	r0, #32
   2abb0:	bhi	2abc8 <main@@Base+0x14988>
   2abb4:	mov	r0, r9
   2abb8:	mov	r1, r4
   2abbc:	mov	r2, r8
   2abc0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2abc4:	mov	r2, r0
   2abc8:	cmp	r2, r8
   2abcc:	beq	2ac40 <main@@Base+0x14a00>
   2abd0:	ldrb	r0, [r2]
   2abd4:	cmp	r0, #44	; 0x2c
   2abd8:	bne	2ac48 <main@@Base+0x14a08>
   2abdc:	add	r1, r2, #1
   2abe0:	sub	r0, r8, r1
   2abe4:	cmp	r0, #2
   2abe8:	blt	2ac18 <main@@Base+0x149d8>
   2abec:	ldrb	r0, [r1]
   2abf0:	cmp	r0, #32
   2abf4:	bls	2ac08 <main@@Base+0x149c8>
   2abf8:	mov	r2, r1
   2abfc:	cmp	r2, r8
   2ac00:	bne	2ac30 <main@@Base+0x149f0>
   2ac04:	b	2ac74 <main@@Base+0x14a34>
   2ac08:	bne	2ac18 <main@@Base+0x149d8>
   2ac0c:	ldrb	r0, [r2, #2]!
   2ac10:	cmp	r0, #32
   2ac14:	bhi	2ac28 <main@@Base+0x149e8>
   2ac18:	mov	r0, r9
   2ac1c:	mov	r2, r8
   2ac20:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2ac24:	mov	r2, r0
   2ac28:	cmp	r2, r8
   2ac2c:	beq	2ac74 <main@@Base+0x14a34>
   2ac30:	ldrb	r0, [r2]
   2ac34:	cmp	r0, #125	; 0x7d
   2ac38:	bne	29758 <main@@Base+0x13518>
   2ac3c:	b	2ac50 <main@@Base+0x14a10>
   2ac40:	mov	r4, r8
   2ac44:	b	28158 <main@@Base+0x11f18>
   2ac48:	cmp	r0, #125	; 0x7d
   2ac4c:	bne	2ac80 <main@@Base+0x14a40>
   2ac50:	add	r1, r2, #1
   2ac54:	sub	r0, r8, r1
   2ac58:	cmp	r0, #2
   2ac5c:	blt	2acac <main@@Base+0x14a6c>
   2ac60:	ldrb	r0, [r1]
   2ac64:	cmp	r0, #32
   2ac68:	bls	2ac98 <main@@Base+0x14a58>
   2ac6c:	mov	r4, r1
   2ac70:	b	28158 <main@@Base+0x11f18>
   2ac74:	mov	r0, r9
   2ac78:	mov	r1, r8
   2ac7c:	b	2ac88 <main@@Base+0x14a48>
   2ac80:	mov	r0, r9
   2ac84:	mov	r1, r2
   2ac88:	mov	r2, r8
   2ac8c:	mov	r3, #10
   2ac90:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2ac94:	b	28154 <main@@Base+0x11f14>
   2ac98:	bne	2acac <main@@Base+0x14a6c>
   2ac9c:	ldrb	r0, [r2, #2]!
   2aca0:	cmp	r0, #32
   2aca4:	mov	r4, r2
   2aca8:	bhi	28158 <main@@Base+0x11f18>
   2acac:	mov	r0, r9
   2acb0:	mov	r2, r8
   2acb4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2acb8:	b	28154 <main@@Base+0x11f14>
   2acbc:	mov	r4, r8
   2acc0:	b	2ad38 <main@@Base+0x14af8>
   2acc4:	cmp	r0, #125	; 0x7d
   2acc8:	bne	2ad20 <main@@Base+0x14ae0>
   2accc:	add	r4, r2, #1
   2acd0:	sub	r0, r8, r4
   2acd4:	cmp	r0, #2
   2acd8:	blt	2ad00 <main@@Base+0x14ac0>
   2acdc:	ldrb	r0, [r4]
   2ace0:	cmp	r0, #32
   2ace4:	bhi	2ad38 <main@@Base+0x14af8>
   2ace8:	bne	2ad00 <main@@Base+0x14ac0>
   2acec:	ldrb	r0, [r2, #2]!
   2acf0:	cmp	r0, #32
   2acf4:	bls	2ad00 <main@@Base+0x14ac0>
   2acf8:	mov	r4, r2
   2acfc:	b	2ad38 <main@@Base+0x14af8>
   2ad00:	mov	r0, r9
   2ad04:	mov	r1, r4
   2ad08:	mov	r2, r8
   2ad0c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2ad10:	b	2ad34 <main@@Base+0x14af4>
   2ad14:	mov	r0, r9
   2ad18:	mov	r1, r8
   2ad1c:	b	2ad28 <main@@Base+0x14ae8>
   2ad20:	mov	r0, r9
   2ad24:	mov	r1, r2
   2ad28:	mov	r2, r8
   2ad2c:	mov	r3, #10
   2ad30:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2ad34:	mov	r4, r0
   2ad38:	ldr	r0, [sp, #20]
   2ad3c:	ldr	r0, [r0]
   2ad40:	cmp	r0, #0
   2ad44:	beq	2ad6c <main@@Base+0x14b2c>
   2ad48:	mov	r0, r9
   2ad4c:	mov	r1, r4
   2ad50:	mov	r2, r8
   2ad54:	mov	r3, #33	; 0x21
   2ad58:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2ad5c:	mov	r4, r0
   2ad60:	mov	r0, r4
   2ad64:	sub	sp, fp, #28
   2ad68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad6c:	ldr	r0, [r9]
   2ad70:	bl	31ef0 <flatcc_builder_end_table@@Base>
   2ad74:	cmp	r0, #0
   2ad78:	str	r0, [r6]
   2ad7c:	bne	2ad60 <main@@Base+0x14b20>
   2ad80:	b	2ad48 <main@@Base+0x14b08>
   2ad84:	bne	2ad94 <main@@Base+0x14b54>
   2ad88:	ldrb	r0, [r4, #2]!
   2ad8c:	cmp	r0, #32
   2ad90:	bhi	2791c <main@@Base+0x116dc>
   2ad94:	mov	r0, r9
   2ad98:	mov	r2, r8
   2ad9c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2ada0:	b	27918 <main@@Base+0x116d8>
   2ada4:	ldr	r9, [sp, #24]
   2ada8:	mov	r0, r9
   2adac:	mov	r1, r4
   2adb0:	mov	r2, r8
   2adb4:	mov	r3, #33	; 0x21
   2adb8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2adbc:	mov	r4, r0
   2adc0:	b	2ad48 <main@@Base+0x14b08>
   2adc4:	andeq	r4, r3, r8, lsl sl
   2adc8:	andeq	r4, r3, r0, ror #25
   2adcc:	andeq	r5, r3, r4, ror #1
   2add0:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2add4:	andeq	r4, r3, r4, lsl #23
   2add8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2addc:	add	fp, sp, #28
   2ade0:	sub	sp, sp, #44	; 0x2c
   2ade4:	mov	r5, r0
   2ade8:	mov	r0, #0
   2adec:	mov	r7, r1
   2adf0:	mov	r1, #10
   2adf4:	mov	r4, r3
   2adf8:	mov	r9, r2
   2adfc:	str	r0, [r3]
   2ae00:	ldr	r0, [r5]
   2ae04:	bl	314c0 <flatcc_builder_start_table@@Base>
   2ae08:	cmp	r0, #0
   2ae0c:	beq	2ae34 <main@@Base+0x14bf4>
   2ae10:	mov	r0, r5
   2ae14:	mov	r1, r7
   2ae18:	mov	r2, r9
   2ae1c:	mov	r3, #33	; 0x21
   2ae20:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2ae24:	mov	r7, r0
   2ae28:	mov	r0, r7
   2ae2c:	sub	sp, fp, #28
   2ae30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae34:	sub	r0, fp, #32
   2ae38:	mov	r1, r7
   2ae3c:	mov	r2, r9
   2ae40:	mov	r3, #5
   2ae44:	str	r0, [sp]
   2ae48:	mov	r0, r5
   2ae4c:	bl	38c74 <flatcc_json_parser_prepare_unions@@Base>
   2ae50:	cmp	r0, r9
   2ae54:	beq	2ae10 <main@@Base+0x14bd0>
   2ae58:	cmp	r7, r9
   2ae5c:	beq	2ae90 <main@@Base+0x14c50>
   2ae60:	ldrb	r0, [r7]
   2ae64:	cmp	r0, #123	; 0x7b
   2ae68:	bne	2ae90 <main@@Base+0x14c50>
   2ae6c:	add	r1, r7, #1
   2ae70:	sub	r0, r9, r1
   2ae74:	cmp	r0, #2
   2ae78:	blt	2aef4 <main@@Base+0x14cb4>
   2ae7c:	ldrb	r0, [r1]
   2ae80:	cmp	r0, #32
   2ae84:	bls	2aee4 <main@@Base+0x14ca4>
   2ae88:	mov	r7, r1
   2ae8c:	b	2af04 <main@@Base+0x14cc4>
   2ae90:	mov	r0, r5
   2ae94:	mov	r1, r7
   2ae98:	mov	r2, r9
   2ae9c:	mov	r3, #21
   2aea0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2aea4:	mov	r7, r0
   2aea8:	ldr	r0, [r5, #24]
   2aeac:	cmp	r0, #0
   2aeb0:	bne	2ae10 <main@@Base+0x14bd0>
   2aeb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aeb8:	mov	r0, r5
   2aebc:	mov	r1, r7
   2aec0:	mov	r2, r9
   2aec4:	bl	38d04 <flatcc_json_parser_finalize_unions@@Base>
   2aec8:	mov	r7, r0
   2aecc:	ldr	r0, [r5]
   2aed0:	bl	31ef0 <flatcc_builder_end_table@@Base>
   2aed4:	cmp	r0, #0
   2aed8:	str	r0, [r4]
   2aedc:	bne	2ae28 <main@@Base+0x14be8>
   2aee0:	b	2ae10 <main@@Base+0x14bd0>
   2aee4:	bne	2aef4 <main@@Base+0x14cb4>
   2aee8:	ldrb	r0, [r7, #2]!
   2aeec:	cmp	r0, #32
   2aef0:	bhi	2af04 <main@@Base+0x14cc4>
   2aef4:	mov	r0, r5
   2aef8:	mov	r2, r9
   2aefc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2af00:	mov	r7, r0
   2af04:	cmp	r7, r9
   2af08:	mov	r3, r9
   2af0c:	beq	2af50 <main@@Base+0x14d10>
   2af10:	ldrb	r0, [r7]
   2af14:	cmp	r0, #125	; 0x7d
   2af18:	bne	2af4c <main@@Base+0x14d0c>
   2af1c:	add	r1, r7, #1
   2af20:	sub	r0, r9, r1
   2af24:	cmp	r0, #2
   2af28:	blt	2c474 <main@@Base+0x16234>
   2af2c:	ldrb	r0, [r1]
   2af30:	cmp	r0, #32
   2af34:	bhi	2c438 <main@@Base+0x161f8>
   2af38:	bne	2c474 <main@@Base+0x16234>
   2af3c:	ldrb	r0, [r7, #2]!
   2af40:	cmp	r0, #32
   2af44:	bhi	2aea8 <main@@Base+0x14c68>
   2af48:	b	2c474 <main@@Base+0x16234>
   2af4c:	mov	r3, r7
   2af50:	add	r0, r5, #12
   2af54:	str	r5, [sp, #36]	; 0x24
   2af58:	str	r4, [sp, #32]
   2af5c:	str	r0, [sp, #28]
   2af60:	movw	r0, #24436	; 0x5f74
   2af64:	movt	r0, #29299	; 0x7273
   2af68:	add	r0, r0, #65536	; 0x10000
   2af6c:	add	r0, r0, #16777216	; 0x1000000
   2af70:	str	r0, [sp, #20]
   2af74:	cmp	r3, r9
   2af78:	mov	r8, r9
   2af7c:	beq	2afd0 <main@@Base+0x14d90>
   2af80:	ldrb	r0, [r3]
   2af84:	cmp	r0, #46	; 0x2e
   2af88:	beq	2afa4 <main@@Base+0x14d64>
   2af8c:	cmp	r0, #34	; 0x22
   2af90:	bne	2afc0 <main@@Base+0x14d80>
   2af94:	ldr	r0, [sp, #28]
   2af98:	mov	r1, #0
   2af9c:	add	r8, r3, #1
   2afa0:	b	2afcc <main@@Base+0x14d8c>
   2afa4:	mov	r1, r3
   2afa8:	mov	r0, r5
   2afac:	mov	r2, r9
   2afb0:	mov	r3, #5
   2afb4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2afb8:	mov	r8, r0
   2afbc:	b	2afd0 <main@@Base+0x14d90>
   2afc0:	ldr	r0, [sp, #28]
   2afc4:	mov	r1, #1
   2afc8:	mov	r8, r3
   2afcc:	str	r1, [r0]
   2afd0:	sub	ip, r9, r8
   2afd4:	mov	r0, #8
   2afd8:	cmp	ip, #8
   2afdc:	movcc	r0, ip
   2afe0:	and	r0, r0, #15
   2afe4:	sub	r0, r0, #1
   2afe8:	cmp	r0, #7
   2afec:	bhi	2ba58 <main@@Base+0x15818>
   2aff0:	add	r2, pc, #36	; 0x24
   2aff4:	mov	r1, #0
   2aff8:	mov	lr, #0
   2affc:	mov	r4, #0
   2b000:	mov	r6, #0
   2b004:	mov	r3, #0
   2b008:	mov	r5, #0
   2b00c:	mov	r7, #0
   2b010:	ldr	sl, [r2, r0, lsl #2]
   2b014:	mov	r0, #0
   2b018:	add	pc, r2, sl
   2b01c:	andeq	r0, r0, r4, rrx
   2b020:	andeq	r0, r0, ip, asr r0
   2b024:	andeq	r0, r0, r4, asr r0
   2b028:	andeq	r0, r0, ip, asr #32
   2b02c:	andeq	r0, r0, r0, asr #32
   2b030:	andeq	r0, r0, r4, lsr r0
   2b034:	andeq	r0, r0, r4, lsr #32
   2b038:	andeq	r0, r0, r0, lsr #32
   2b03c:	ldrb	lr, [r8, #7]
   2b040:	ldrb	r0, [r8, #6]
   2b044:	mov	r4, r1
   2b048:	orr	r0, lr, r0, lsl #8
   2b04c:	mov	r1, r0
   2b050:	ldrb	r0, [r8, #5]
   2b054:	mov	r6, r4
   2b058:	orr	r1, r1, r0, lsl #16
   2b05c:	ldrb	r0, [r8, #4]
   2b060:	mov	r3, r6
   2b064:	orr	r1, r1, r0, lsl #24
   2b068:	ldrb	r0, [r8, #3]
   2b06c:	orr	r5, r0, r3
   2b070:	ldrb	r0, [r8, #2]
   2b074:	orr	r7, r5, r0, lsl #8
   2b078:	ldrb	r0, [r8, #1]
   2b07c:	orr	r0, r7, r0, lsl #16
   2b080:	ldrb	r2, [r8]
   2b084:	orr	r2, r0, r2, lsl #24
   2b088:	movw	r0, #29797	; 0x7465
   2b08c:	movt	r0, #24931	; 0x6163
   2b090:	subs	r0, r1, r0
   2b094:	movw	r0, #24946	; 0x6172
   2b098:	movt	r0, #25448	; 0x6368
   2b09c:	sbcs	r0, r2, r0
   2b0a0:	bcs	2b200 <main@@Base+0x14fc0>
   2b0a4:	movw	r0, #29817	; 0x7479
   2b0a8:	movw	r3, #28005	; 0x6d65
   2b0ac:	ldr	r5, [sp, #36]	; 0x24
   2b0b0:	movt	r0, #28511	; 0x6f5f
   2b0b4:	movt	r3, #25441	; 0x6361
   2b0b8:	eor	r0, r1, r0
   2b0bc:	eor	r3, r2, r3
   2b0c0:	orrs	r0, r0, r3
   2b0c4:	beq	2b514 <main@@Base+0x152d4>
   2b0c8:	movw	r0, #28265	; 0x6e69
   2b0cc:	movw	r7, #29793	; 0x7461
   2b0d0:	movt	r0, #26479	; 0x676f
   2b0d4:	movt	r7, #24942	; 0x616e
   2b0d8:	eor	r0, r1, r0
   2b0dc:	eor	r2, r2, r7
   2b0e0:	orrs	r0, r0, r2
   2b0e4:	bne	2b5a0 <main@@Base+0x15360>
   2b0e8:	add	r6, r8, #8
   2b0ec:	mov	r1, #8
   2b0f0:	sub	ip, r9, r6
   2b0f4:	cmp	ip, #8
   2b0f8:	movcc	r1, ip
   2b0fc:	and	r1, r1, #15
   2b100:	sub	r1, r1, #1
   2b104:	cmp	r1, #7
   2b108:	bhi	2c204 <main@@Base+0x15fc4>
   2b10c:	str	r6, [sp, #24]
   2b110:	add	r0, pc, #32
   2b114:	mov	sl, #0
   2b118:	mov	lr, #0
   2b11c:	mov	r3, #0
   2b120:	mov	r6, #0
   2b124:	mov	r7, #0
   2b128:	mov	r4, #0
   2b12c:	ldr	r2, [r0, r1, lsl #2]
   2b130:	mov	r1, #0
   2b134:	add	pc, r0, r2
   2b138:	andeq	r0, r0, ip, asr r0
   2b13c:	andeq	r0, r0, r4, asr r0
   2b140:	andeq	r0, r0, ip, asr #32
   2b144:	andeq	r0, r0, r4, asr #32
   2b148:	andeq	r0, r0, r8, lsr r0
   2b14c:	andeq	r0, r0, r8, lsr #32
   2b150:	andeq	r0, r0, r0, lsr #32
   2b154:	andeq	r0, r0, r0, lsr #32
   2b158:	ldrb	r0, [r8, #14]
   2b15c:	lsl	lr, r0, #8
   2b160:	ldrb	r0, [r8, #13]
   2b164:	mov	r1, sl
   2b168:	orr	r0, lr, r0, lsl #16
   2b16c:	mov	sl, r0
   2b170:	ldrb	r0, [r8, #12]
   2b174:	mov	r3, r1
   2b178:	orr	sl, sl, r0, lsl #24
   2b17c:	ldrb	r0, [r8, #11]
   2b180:	orr	r6, r0, r3
   2b184:	ldrb	r0, [r8, #10]
   2b188:	orr	r7, r6, r0, lsl #8
   2b18c:	ldrb	r0, [r8, #9]
   2b190:	orr	r4, r7, r0, lsl #16
   2b194:	ldr	r6, [sp, #24]
   2b198:	movw	r3, #25856	; 0x6500
   2b19c:	bic	r2, sl, #255	; 0xff
   2b1a0:	movt	r3, #31088	; 0x7970
   2b1a4:	eor	r2, r2, r3
   2b1a8:	ldrb	r0, [r6]
   2b1ac:	orr	r1, r4, r0, lsl #24
   2b1b0:	ldr	r0, [sp, #20]
   2b1b4:	eor	r0, r1, r0
   2b1b8:	orrs	r0, r2, r0
   2b1bc:	bne	2b6fc <main@@Base+0x154bc>
   2b1c0:	cmp	ip, #8
   2b1c4:	blt	2c204 <main@@Base+0x15fc4>
   2b1c8:	ldr	r2, [sp, #28]
   2b1cc:	mov	r1, r8
   2b1d0:	ldrb	r0, [r1, #15]!
   2b1d4:	ldr	r2, [r2]
   2b1d8:	cmp	r2, #0
   2b1dc:	beq	2b8a4 <main@@Base+0x15664>
   2b1e0:	cmp	r0, #33	; 0x21
   2b1e4:	bcc	2b1f0 <main@@Base+0x14fb0>
   2b1e8:	cmp	r0, #58	; 0x3a
   2b1ec:	bne	2c204 <main@@Base+0x15fc4>
   2b1f0:	ldr	r0, [sp, #28]
   2b1f4:	mov	r2, #0
   2b1f8:	str	r2, [r0]
   2b1fc:	b	2b8b0 <main@@Base+0x15670>
   2b200:	movw	r0, #26720	; 0x6860
   2b204:	ldr	r5, [sp, #36]	; 0x24
   2b208:	movt	r0, #24419	; 0x5f63
   2b20c:	subs	r0, r0, r1
   2b210:	movw	r0, #26990	; 0x696e
   2b214:	movt	r0, #28001	; 0x6d61
   2b218:	sbcs	r0, r0, r2
   2b21c:	bcc	2b35c <main@@Base+0x1511c>
   2b220:	movw	r0, #29797	; 0x7465
   2b224:	movt	r0, #24931	; 0x6163
   2b228:	eor	r0, r1, r0
   2b22c:	movw	r1, #24946	; 0x6172
   2b230:	movt	r1, #25448	; 0x6368
   2b234:	eor	r1, r2, r1
   2b238:	orrs	r0, r0, r1
   2b23c:	bne	2ba58 <main@@Base+0x15818>
   2b240:	add	r6, r8, #8
   2b244:	mov	r1, #8
   2b248:	sub	ip, r9, r6
   2b24c:	cmp	ip, #8
   2b250:	movcc	r1, ip
   2b254:	and	r1, r1, #15
   2b258:	sub	r2, r1, #1
   2b25c:	cmp	r2, #7
   2b260:	bhi	2c204 <main@@Base+0x15fc4>
   2b264:	str	r6, [sp, #24]
   2b268:	add	r0, pc, #32
   2b26c:	mov	r1, #0
   2b270:	mov	lr, #0
   2b274:	mov	sl, #0
   2b278:	mov	r3, #0
   2b27c:	mov	r6, #0
   2b280:	mov	r7, #0
   2b284:	mov	r4, #0
   2b288:	ldr	r2, [r0, r2, lsl #2]
   2b28c:	add	pc, r0, r2
   2b290:	andeq	r0, r0, ip, asr r0
   2b294:	andeq	r0, r0, r4, asr r0
   2b298:	andeq	r0, r0, ip, asr #32
   2b29c:	andeq	r0, r0, r4, asr #32
   2b2a0:	andeq	r0, r0, r8, lsr r0
   2b2a4:	andeq	r0, r0, r8, lsr #32
   2b2a8:	andeq	r0, r0, r0, lsr #32
   2b2ac:	andeq	r0, r0, r0, lsr #32
   2b2b0:	ldrb	r0, [r8, #14]
   2b2b4:	lsl	lr, r0, #8
   2b2b8:	ldrb	r0, [r8, #13]
   2b2bc:	mov	sl, r1
   2b2c0:	orr	r0, lr, r0, lsl #16
   2b2c4:	mov	r1, r0
   2b2c8:	ldrb	r0, [r8, #12]
   2b2cc:	mov	r3, sl
   2b2d0:	orr	r1, r1, r0, lsl #24
   2b2d4:	ldrb	r0, [r8, #11]
   2b2d8:	orr	r6, r0, r3
   2b2dc:	ldrb	r0, [r8, #10]
   2b2e0:	orr	r7, r6, r0, lsl #8
   2b2e4:	ldrb	r0, [r8, #9]
   2b2e8:	orr	r4, r7, r0, lsl #16
   2b2ec:	ldr	r6, [sp, #24]
   2b2f0:	bic	r0, r1, #255	; 0xff
   2b2f4:	movw	r1, #25856	; 0x6500
   2b2f8:	movw	r2, #24436	; 0x5f74
   2b2fc:	movt	r1, #31088	; 0x7970
   2b300:	movt	r2, #29299	; 0x7273
   2b304:	eor	r0, r0, r1
   2b308:	ldrb	r1, [r6]
   2b30c:	orr	r1, r4, r1, lsl #24
   2b310:	eor	r2, r1, r2
   2b314:	orrs	r0, r0, r2
   2b318:	bne	2b750 <main@@Base+0x15510>
   2b31c:	cmp	ip, #8
   2b320:	blt	2c204 <main@@Base+0x15fc4>
   2b324:	ldr	r2, [sp, #28]
   2b328:	mov	r1, r8
   2b32c:	ldrb	r0, [r1, #15]!
   2b330:	ldr	r2, [r2]
   2b334:	cmp	r2, #0
   2b338:	beq	2b924 <main@@Base+0x156e4>
   2b33c:	cmp	r0, #33	; 0x21
   2b340:	bcc	2b34c <main@@Base+0x1510c>
   2b344:	cmp	r0, #58	; 0x3a
   2b348:	bne	2c204 <main@@Base+0x15fc4>
   2b34c:	ldr	r0, [sp, #28]
   2b350:	mov	r2, #0
   2b354:	str	r2, [r0]
   2b358:	b	2b930 <main@@Base+0x156f0>
   2b35c:	movw	r0, #26979	; 0x6963
   2b360:	movw	r3, #25701	; 0x6465
   2b364:	movt	r0, #24427	; 0x5f6b
   2b368:	movt	r3, #29545	; 0x7369
   2b36c:	eor	r0, r1, r0
   2b370:	eor	r3, r2, r3
   2b374:	orrs	r0, r0, r3
   2b378:	beq	2b5f8 <main@@Base+0x153b8>
   2b37c:	movw	r0, #26721	; 0x6861
   2b380:	movt	r0, #24419	; 0x5f63
   2b384:	eor	r0, r1, r0
   2b388:	movw	r1, #26990	; 0x696e
   2b38c:	movt	r1, #28001	; 0x6d61
   2b390:	eor	r1, r2, r1
   2b394:	orrs	r0, r0, r1
   2b398:	bne	2ba58 <main@@Base+0x15818>
   2b39c:	add	r4, r8, #8
   2b3a0:	mov	r1, #8
   2b3a4:	sub	lr, r9, r4
   2b3a8:	cmp	lr, #8
   2b3ac:	movcc	r1, lr
   2b3b0:	and	r1, r1, #15
   2b3b4:	sub	r2, r1, #1
   2b3b8:	cmp	r2, #7
   2b3bc:	bhi	2c400 <main@@Base+0x161c0>
   2b3c0:	str	r4, [sp, #24]
   2b3c4:	add	r0, pc, #36	; 0x24
   2b3c8:	mov	r1, #0
   2b3cc:	mov	ip, #0
   2b3d0:	mov	sl, #0
   2b3d4:	mov	r6, #0
   2b3d8:	mov	r3, #0
   2b3dc:	mov	r5, #0
   2b3e0:	mov	r7, #0
   2b3e4:	ldr	r4, [r0, r2, lsl #2]
   2b3e8:	mov	r2, #0
   2b3ec:	add	pc, r0, r4
   2b3f0:	andeq	r0, r0, r4, rrx
   2b3f4:	andeq	r0, r0, ip, asr r0
   2b3f8:	andeq	r0, r0, r4, asr r0
   2b3fc:	andeq	r0, r0, ip, asr #32
   2b400:	andeq	r0, r0, r0, asr #32
   2b404:	andeq	r0, r0, r4, lsr r0
   2b408:	andeq	r0, r0, r4, lsr #32
   2b40c:	andeq	r0, r0, r0, lsr #32
   2b410:	ldrb	ip, [r8, #15]
   2b414:	ldrb	r0, [r8, #14]
   2b418:	mov	sl, r1
   2b41c:	orr	r0, ip, r0, lsl #8
   2b420:	mov	r1, r0
   2b424:	ldrb	r0, [r8, #13]
   2b428:	mov	r6, sl
   2b42c:	orr	r1, r1, r0, lsl #16
   2b430:	ldrb	r0, [r8, #12]
   2b434:	mov	r3, r6
   2b438:	orr	r1, r1, r0, lsl #24
   2b43c:	ldrb	r0, [r8, #11]
   2b440:	orr	r5, r0, r3
   2b444:	ldrb	r0, [r8, #10]
   2b448:	orr	r7, r5, r0, lsl #8
   2b44c:	ldrb	r0, [r8, #9]
   2b450:	orr	r2, r7, r0, lsl #16
   2b454:	ldr	r4, [sp, #24]
   2b458:	movw	r0, #24436	; 0x5f74
   2b45c:	movt	r0, #25970	; 0x6572
   2b460:	eor	r0, r1, r0
   2b464:	ldrb	r3, [r4]
   2b468:	orr	r2, r2, r3, lsl #24
   2b46c:	movw	r3, #25460	; 0x6374
   2b470:	movt	r3, #29281	; 0x7261
   2b474:	eor	r3, r2, r3
   2b478:	orrs	r0, r0, r3
   2b47c:	bne	2b7a4 <main@@Base+0x15564>
   2b480:	add	r4, r8, #16
   2b484:	mov	r1, #8
   2b488:	ldr	r5, [sp, #36]	; 0x24
   2b48c:	sub	r0, r9, r4
   2b490:	cmp	r0, #8
   2b494:	movcc	r1, r0
   2b498:	and	r2, r1, #15
   2b49c:	sub	r1, r2, #3
   2b4a0:	cmp	r1, #6
   2b4a4:	bcs	2b90c <main@@Base+0x156cc>
   2b4a8:	ldrb	r1, [r8, #18]
   2b4ac:	lsl	r1, r1, #8
   2b4b0:	ldrb	r2, [r8, #17]
   2b4b4:	orr	r1, r1, r2, lsl #16
   2b4b8:	ldrb	r2, [r4]
   2b4bc:	bic	r1, r1, #255	; 0xff
   2b4c0:	orr	r1, r1, r2, lsl #24
   2b4c4:	movw	r2, #25856	; 0x6500
   2b4c8:	movt	r2, #31088	; 0x7970
   2b4cc:	teq	r1, r2
   2b4d0:	bne	2c400 <main@@Base+0x161c0>
   2b4d4:	cmp	r0, #4
   2b4d8:	blt	2c400 <main@@Base+0x161c0>
   2b4dc:	ldr	r2, [sp, #28]
   2b4e0:	mov	r1, r8
   2b4e4:	ldrb	r0, [r1, #19]!
   2b4e8:	ldr	r2, [r2]
   2b4ec:	cmp	r2, #0
   2b4f0:	beq	2bc54 <main@@Base+0x15a14>
   2b4f4:	cmp	r0, #33	; 0x21
   2b4f8:	bcc	2b504 <main@@Base+0x152c4>
   2b4fc:	cmp	r0, #58	; 0x3a
   2b500:	bne	2c400 <main@@Base+0x161c0>
   2b504:	ldr	r0, [sp, #28]
   2b508:	mov	r2, #0
   2b50c:	str	r2, [r0]
   2b510:	b	2bc60 <main@@Base+0x15a20>
   2b514:	add	r6, r8, #8
   2b518:	mov	r1, #8
   2b51c:	sub	r0, r9, r6
   2b520:	cmp	r0, #8
   2b524:	movcc	r1, r0
   2b528:	and	r2, r1, #15
   2b52c:	sub	r1, r2, #2
   2b530:	cmp	r1, #7
   2b534:	bcs	2b80c <main@@Base+0x155cc>
   2b538:	ldrb	r1, [r8, #9]
   2b53c:	lsl	r2, r1, #16
   2b540:	mov	r1, #0
   2b544:	ldrb	r3, [r6]
   2b548:	orr	r2, r2, r3, lsl #24
   2b54c:	movw	r3, #0
   2b550:	movt	r3, #28773	; 0x7065
   2b554:	eor	r2, r2, r3
   2b558:	orrs	r1, r1, r2
   2b55c:	bne	2c204 <main@@Base+0x15fc4>
   2b560:	cmp	r0, #3
   2b564:	blt	2c204 <main@@Base+0x15fc4>
   2b568:	ldr	r2, [sp, #28]
   2b56c:	mov	r1, r8
   2b570:	ldrb	r0, [r1, #10]!
   2b574:	ldr	r2, [r2]
   2b578:	cmp	r2, #0
   2b57c:	beq	2b8d8 <main@@Base+0x15698>
   2b580:	cmp	r0, #33	; 0x21
   2b584:	bcc	2b590 <main@@Base+0x15350>
   2b588:	cmp	r0, #58	; 0x3a
   2b58c:	bne	2c204 <main@@Base+0x15fc4>
   2b590:	ldr	r0, [sp, #28]
   2b594:	mov	r2, #0
   2b598:	str	r2, [r0]
   2b59c:	b	2b8e4 <main@@Base+0x156a4>
   2b5a0:	and	r0, r1, #-16777216	; 0xff000000
   2b5a4:	eor	r0, r0, #1862270976	; 0x6f000000
   2b5a8:	orrs	r0, r0, r3
   2b5ac:	bne	2ba58 <main@@Base+0x15818>
   2b5b0:	cmp	ip, #6
   2b5b4:	mov	r1, r8
   2b5b8:	blt	2be20 <main@@Base+0x15be0>
   2b5bc:	ldr	r1, [sp, #28]
   2b5c0:	mov	r2, r8
   2b5c4:	ldrb	r0, [r2, #5]!
   2b5c8:	ldr	r1, [r1]
   2b5cc:	cmp	r1, #0
   2b5d0:	beq	2b86c <main@@Base+0x1562c>
   2b5d4:	cmp	r0, #33	; 0x21
   2b5d8:	bcc	2b5e8 <main@@Base+0x153a8>
   2b5dc:	cmp	r0, #58	; 0x3a
   2b5e0:	mov	r1, r8
   2b5e4:	bne	2be20 <main@@Base+0x15be0>
   2b5e8:	ldr	r0, [sp, #28]
   2b5ec:	mov	r1, #0
   2b5f0:	str	r1, [r0]
   2b5f4:	b	2b87c <main@@Base+0x1563c>
   2b5f8:	add	sl, r8, #8
   2b5fc:	mov	r1, #8
   2b600:	sub	r0, r9, sl
   2b604:	cmp	r0, #8
   2b608:	movcc	r1, r0
   2b60c:	and	r1, r1, #15
   2b610:	sub	r2, r1, #1
   2b614:	cmp	r2, #7
   2b618:	bhi	2c388 <main@@Base+0x16148>
   2b61c:	add	r4, pc, #28
   2b620:	mov	ip, #0
   2b624:	mov	r3, #0
   2b628:	mov	r6, #0
   2b62c:	mov	r7, #0
   2b630:	mov	r5, #0
   2b634:	ldr	r1, [r4, r2, lsl #2]
   2b638:	mov	r2, #0
   2b63c:	add	pc, r4, r1
   2b640:	andeq	r0, r0, r0, asr r0
   2b644:	andeq	r0, r0, r8, asr #32
   2b648:	andeq	r0, r0, r0, asr #32
   2b64c:	andeq	r0, r0, r8, lsr r0
   2b650:	andeq	r0, r0, r8, lsr #32
   2b654:	andeq	r0, r0, r0, lsr #32
   2b658:	andeq	r0, r0, r0, lsr #32
   2b65c:	andeq	r0, r0, r0, lsr #32
   2b660:	ldrb	r1, [r8, #13]
   2b664:	lsl	r2, r1, #16
   2b668:	ldrb	r1, [r8, #12]
   2b66c:	mov	r3, ip
   2b670:	orr	r1, r2, r1, lsl #24
   2b674:	mov	ip, r1
   2b678:	ldrb	r1, [r8, #11]
   2b67c:	orr	r6, r1, r3
   2b680:	ldrb	r1, [r8, #10]
   2b684:	orr	r7, r6, r1, lsl #8
   2b688:	ldrb	r1, [r8, #9]
   2b68c:	orr	r5, r7, r1, lsl #16
   2b690:	ldrb	r1, [sl]
   2b694:	movw	r7, #28773	; 0x7065
   2b698:	lsr	r3, ip, #16
   2b69c:	movt	r7, #29817	; 0x7479
   2b6a0:	orr	r2, r5, r1, lsl #24
   2b6a4:	movw	r1, #27487	; 0x6b5f
   2b6a8:	orr	r3, r3, r2, lsl #16
   2b6ac:	eor	r1, r1, r2, lsr #16
   2b6b0:	eor	r3, r3, r7
   2b6b4:	orrs	r1, r3, r1
   2b6b8:	bne	2b820 <main@@Base+0x155e0>
   2b6bc:	cmp	r0, #7
   2b6c0:	blt	2c388 <main@@Base+0x16148>
   2b6c4:	ldr	r2, [sp, #28]
   2b6c8:	mov	r1, r8
   2b6cc:	ldrb	r0, [r1, #14]!
   2b6d0:	ldr	r2, [r2]
   2b6d4:	cmp	r2, #0
   2b6d8:	beq	2b958 <main@@Base+0x15718>
   2b6dc:	cmp	r0, #33	; 0x21
   2b6e0:	bcc	2b6ec <main@@Base+0x154ac>
   2b6e4:	cmp	r0, #58	; 0x3a
   2b6e8:	bne	2c388 <main@@Base+0x16148>
   2b6ec:	ldr	r0, [sp, #28]
   2b6f0:	mov	r2, #0
   2b6f4:	str	r2, [r0]
   2b6f8:	b	2b964 <main@@Base+0x15724>
   2b6fc:	movw	r0, #0
   2b700:	bfc	r1, #0, #16
   2b704:	movt	r0, #29556	; 0x7374
   2b708:	teq	r1, r0
   2b70c:	bne	2c204 <main@@Base+0x15fc4>
   2b710:	cmp	ip, #3
   2b714:	blt	2c204 <main@@Base+0x15fc4>
   2b718:	ldr	r2, [sp, #28]
   2b71c:	mov	r1, r8
   2b720:	ldrb	r0, [r1, #10]!
   2b724:	ldr	r2, [r2]
   2b728:	cmp	r2, #0
   2b72c:	beq	2b98c <main@@Base+0x1574c>
   2b730:	cmp	r0, #33	; 0x21
   2b734:	bcc	2b740 <main@@Base+0x15500>
   2b738:	cmp	r0, #58	; 0x3a
   2b73c:	bne	2c204 <main@@Base+0x15fc4>
   2b740:	ldr	r0, [sp, #28]
   2b744:	mov	r2, #0
   2b748:	str	r2, [r0]
   2b74c:	b	2b998 <main@@Base+0x15758>
   2b750:	movw	r0, #0
   2b754:	bfc	r1, #0, #16
   2b758:	movt	r0, #29299	; 0x7273
   2b75c:	teq	r1, r0
   2b760:	bne	2c204 <main@@Base+0x15fc4>
   2b764:	cmp	ip, #3
   2b768:	blt	2c204 <main@@Base+0x15fc4>
   2b76c:	ldr	r2, [sp, #28]
   2b770:	mov	r1, r8
   2b774:	ldrb	r0, [r1, #10]!
   2b778:	ldr	r2, [r2]
   2b77c:	cmp	r2, #0
   2b780:	beq	2b9c0 <main@@Base+0x15780>
   2b784:	cmp	r0, #33	; 0x21
   2b788:	bcc	2b794 <main@@Base+0x15554>
   2b78c:	cmp	r0, #58	; 0x3a
   2b790:	bne	2c204 <main@@Base+0x15fc4>
   2b794:	ldr	r0, [sp, #28]
   2b798:	mov	r2, #0
   2b79c:	str	r2, [r0]
   2b7a0:	b	2b9cc <main@@Base+0x1578c>
   2b7a4:	movw	r0, #29281	; 0x7261
   2b7a8:	lsr	r1, r1, #16
   2b7ac:	ldr	r5, [sp, #36]	; 0x24
   2b7b0:	eor	r0, r0, r2, lsr #16
   2b7b4:	orr	r1, r1, r2, lsl #16
   2b7b8:	movw	r2, #25970	; 0x6572
   2b7bc:	movt	r2, #25460	; 0x6374
   2b7c0:	eor	r1, r1, r2
   2b7c4:	orrs	r0, r1, r0
   2b7c8:	bne	2c400 <main@@Base+0x161c0>
   2b7cc:	cmp	lr, #7
   2b7d0:	blt	2c400 <main@@Base+0x161c0>
   2b7d4:	ldr	r2, [sp, #28]
   2b7d8:	mov	r1, r8
   2b7dc:	ldrb	r0, [r1, #14]!
   2b7e0:	ldr	r2, [r2]
   2b7e4:	cmp	r2, #0
   2b7e8:	beq	2bb70 <main@@Base+0x15930>
   2b7ec:	cmp	r0, #33	; 0x21
   2b7f0:	bcc	2b7fc <main@@Base+0x155bc>
   2b7f4:	cmp	r0, #58	; 0x3a
   2b7f8:	bne	2c400 <main@@Base+0x161c0>
   2b7fc:	ldr	r0, [sp, #28]
   2b800:	mov	r2, #0
   2b804:	str	r2, [r0]
   2b808:	b	2bb7c <main@@Base+0x1593c>
   2b80c:	cmp	r2, #1
   2b810:	mov	r1, #0
   2b814:	mov	r2, #0
   2b818:	beq	2b544 <main@@Base+0x15304>
   2b81c:	b	2c204 <main@@Base+0x15fc4>
   2b820:	and	r1, r2, #-16777216	; 0xff000000
   2b824:	teq	r1, #1795162112	; 0x6b000000
   2b828:	bne	2c388 <main@@Base+0x16148>
   2b82c:	cmp	r0, #2
   2b830:	blt	2c388 <main@@Base+0x16148>
   2b834:	ldr	r2, [sp, #28]
   2b838:	mov	r1, r8
   2b83c:	ldrb	r0, [r1, #9]!
   2b840:	ldr	r2, [r2]
   2b844:	cmp	r2, #0
   2b848:	beq	2bba4 <main@@Base+0x15964>
   2b84c:	cmp	r0, #33	; 0x21
   2b850:	bcc	2b85c <main@@Base+0x1561c>
   2b854:	cmp	r0, #58	; 0x3a
   2b858:	bne	2c388 <main@@Base+0x16148>
   2b85c:	ldr	r0, [sp, #28]
   2b860:	mov	r2, #0
   2b864:	str	r2, [r0]
   2b868:	b	2bbb0 <main@@Base+0x15970>
   2b86c:	cmp	r0, #34	; 0x22
   2b870:	mov	r1, r8
   2b874:	bne	2be20 <main@@Base+0x15be0>
   2b878:	add	r2, r8, #6
   2b87c:	sub	r0, r9, r2
   2b880:	cmp	r0, #2
   2b884:	blt	2ba08 <main@@Base+0x157c8>
   2b888:	ldrb	r0, [r2]
   2b88c:	cmp	r0, #32
   2b890:	bls	2b9f4 <main@@Base+0x157b4>
   2b894:	mov	r1, r2
   2b898:	cmp	r1, r9
   2b89c:	bne	2ba24 <main@@Base+0x157e4>
   2b8a0:	b	2ba64 <main@@Base+0x15824>
   2b8a4:	cmp	r0, #34	; 0x22
   2b8a8:	bne	2c204 <main@@Base+0x15fc4>
   2b8ac:	add	r1, r8, #16
   2b8b0:	sub	r0, r9, r1
   2b8b4:	cmp	r0, #2
   2b8b8:	blt	2ba8c <main@@Base+0x1584c>
   2b8bc:	ldrb	r0, [r1]
   2b8c0:	cmp	r0, #32
   2b8c4:	bls	2ba78 <main@@Base+0x15838>
   2b8c8:	mov	r2, r1
   2b8cc:	cmp	r2, r9
   2b8d0:	bne	2baa4 <main@@Base+0x15864>
   2b8d4:	b	2badc <main@@Base+0x1589c>
   2b8d8:	cmp	r0, #34	; 0x22
   2b8dc:	bne	2c204 <main@@Base+0x15fc4>
   2b8e0:	add	r1, r8, #11
   2b8e4:	sub	r0, r9, r1
   2b8e8:	cmp	r0, #2
   2b8ec:	blt	2bb08 <main@@Base+0x158c8>
   2b8f0:	ldrb	r0, [r1]
   2b8f4:	cmp	r0, #32
   2b8f8:	bls	2baf4 <main@@Base+0x158b4>
   2b8fc:	mov	r2, r1
   2b900:	cmp	r2, r9
   2b904:	bne	2bb20 <main@@Base+0x158e0>
   2b908:	b	2bb58 <main@@Base+0x15918>
   2b90c:	mov	r1, #0
   2b910:	cmp	r2, #1
   2b914:	beq	2b4b8 <main@@Base+0x15278>
   2b918:	cmp	r2, #2
   2b91c:	beq	2b4b0 <main@@Base+0x15270>
   2b920:	b	2c400 <main@@Base+0x161c0>
   2b924:	cmp	r0, #34	; 0x22
   2b928:	bne	2c204 <main@@Base+0x15fc4>
   2b92c:	add	r1, r8, #16
   2b930:	sub	r0, r9, r1
   2b934:	cmp	r0, #2
   2b938:	blt	2bbec <main@@Base+0x159ac>
   2b93c:	ldrb	r0, [r1]
   2b940:	cmp	r0, #32
   2b944:	bls	2bbd8 <main@@Base+0x15998>
   2b948:	mov	r2, r1
   2b94c:	cmp	r2, r9
   2b950:	bne	2bc04 <main@@Base+0x159c4>
   2b954:	b	2bc3c <main@@Base+0x159fc>
   2b958:	cmp	r0, #34	; 0x22
   2b95c:	bne	2c388 <main@@Base+0x16148>
   2b960:	add	r1, r8, #15
   2b964:	sub	r0, r9, r1
   2b968:	cmp	r0, #2
   2b96c:	blt	2bc9c <main@@Base+0x15a5c>
   2b970:	ldrb	r0, [r1]
   2b974:	cmp	r0, #32
   2b978:	bls	2bc88 <main@@Base+0x15a48>
   2b97c:	mov	r2, r1
   2b980:	cmp	r2, r9
   2b984:	bne	2bcb4 <main@@Base+0x15a74>
   2b988:	b	2bcec <main@@Base+0x15aac>
   2b98c:	cmp	r0, #34	; 0x22
   2b990:	bne	2c204 <main@@Base+0x15fc4>
   2b994:	add	r1, r8, #11
   2b998:	sub	r0, r9, r1
   2b99c:	cmp	r0, #2
   2b9a0:	blt	2bd18 <main@@Base+0x15ad8>
   2b9a4:	ldrb	r0, [r1]
   2b9a8:	cmp	r0, #32
   2b9ac:	bls	2bd04 <main@@Base+0x15ac4>
   2b9b0:	mov	r2, r1
   2b9b4:	cmp	r2, r9
   2b9b8:	bne	2bd30 <main@@Base+0x15af0>
   2b9bc:	b	2bd68 <main@@Base+0x15b28>
   2b9c0:	cmp	r0, #34	; 0x22
   2b9c4:	bne	2c204 <main@@Base+0x15fc4>
   2b9c8:	add	r1, r8, #11
   2b9cc:	sub	r0, r9, r1
   2b9d0:	cmp	r0, #2
   2b9d4:	blt	2bd94 <main@@Base+0x15b54>
   2b9d8:	ldrb	r0, [r1]
   2b9dc:	cmp	r0, #32
   2b9e0:	bls	2bd80 <main@@Base+0x15b40>
   2b9e4:	mov	r2, r1
   2b9e8:	cmp	r2, r9
   2b9ec:	bne	2bdac <main@@Base+0x15b6c>
   2b9f0:	b	2bde4 <main@@Base+0x15ba4>
   2b9f4:	bne	2ba08 <main@@Base+0x157c8>
   2b9f8:	mov	r1, r2
   2b9fc:	ldrb	r0, [r1, #1]!
   2ba00:	cmp	r0, #32
   2ba04:	bhi	2ba1c <main@@Base+0x157dc>
   2ba08:	mov	r1, r2
   2ba0c:	mov	r0, r5
   2ba10:	mov	r2, r9
   2ba14:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2ba18:	mov	r1, r0
   2ba1c:	cmp	r1, r9
   2ba20:	beq	2ba64 <main@@Base+0x15824>
   2ba24:	ldrb	r0, [r1]
   2ba28:	cmp	r0, #58	; 0x3a
   2ba2c:	bne	2ba64 <main@@Base+0x15824>
   2ba30:	add	r2, r1, #1
   2ba34:	sub	r0, r9, r2
   2ba38:	cmp	r0, #2
   2ba3c:	blt	2be0c <main@@Base+0x15bcc>
   2ba40:	ldrb	r0, [r2]
   2ba44:	cmp	r0, #32
   2ba48:	bls	2bdfc <main@@Base+0x15bbc>
   2ba4c:	mov	r1, r2
   2ba50:	cmp	r8, r1
   2ba54:	bne	2be28 <main@@Base+0x15be8>
   2ba58:	mov	r0, r5
   2ba5c:	mov	r1, r8
   2ba60:	b	2c20c <main@@Base+0x15fcc>
   2ba64:	mov	r0, r5
   2ba68:	mov	r2, r9
   2ba6c:	mov	r3, #4
   2ba70:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2ba74:	b	2be1c <main@@Base+0x15bdc>
   2ba78:	bne	2ba8c <main@@Base+0x1584c>
   2ba7c:	mov	r2, r1
   2ba80:	ldrb	r0, [r2, #1]!
   2ba84:	cmp	r0, #32
   2ba88:	bhi	2ba9c <main@@Base+0x1585c>
   2ba8c:	mov	r0, r5
   2ba90:	mov	r2, r9
   2ba94:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2ba98:	mov	r2, r0
   2ba9c:	cmp	r2, r9
   2baa0:	beq	2badc <main@@Base+0x1589c>
   2baa4:	ldrb	r0, [r2]
   2baa8:	cmp	r0, #58	; 0x3a
   2baac:	bne	2badc <main@@Base+0x1589c>
   2bab0:	add	r1, r2, #1
   2bab4:	sub	r0, r9, r1
   2bab8:	cmp	r0, #2
   2babc:	blt	2be68 <main@@Base+0x15c28>
   2bac0:	ldrb	r0, [r1]
   2bac4:	cmp	r0, #32
   2bac8:	bls	2be58 <main@@Base+0x15c18>
   2bacc:	mov	r2, r1
   2bad0:	cmp	r6, r2
   2bad4:	bne	2be80 <main@@Base+0x15c40>
   2bad8:	b	2c204 <main@@Base+0x15fc4>
   2badc:	mov	r1, r2
   2bae0:	mov	r0, r5
   2bae4:	mov	r2, r9
   2bae8:	mov	r3, #4
   2baec:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2baf0:	b	2be74 <main@@Base+0x15c34>
   2baf4:	bne	2bb08 <main@@Base+0x158c8>
   2baf8:	mov	r2, r1
   2bafc:	ldrb	r0, [r2, #1]!
   2bb00:	cmp	r0, #32
   2bb04:	bhi	2bb18 <main@@Base+0x158d8>
   2bb08:	mov	r0, r5
   2bb0c:	mov	r2, r9
   2bb10:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bb14:	mov	r2, r0
   2bb18:	cmp	r2, r9
   2bb1c:	beq	2bb58 <main@@Base+0x15918>
   2bb20:	ldrb	r0, [r2]
   2bb24:	cmp	r0, #58	; 0x3a
   2bb28:	bne	2bb58 <main@@Base+0x15918>
   2bb2c:	add	r1, r2, #1
   2bb30:	sub	r0, r9, r1
   2bb34:	cmp	r0, #2
   2bb38:	blt	2bec4 <main@@Base+0x15c84>
   2bb3c:	ldrb	r0, [r1]
   2bb40:	cmp	r0, #32
   2bb44:	bls	2beb4 <main@@Base+0x15c74>
   2bb48:	mov	r2, r1
   2bb4c:	cmp	r6, r2
   2bb50:	bne	2bedc <main@@Base+0x15c9c>
   2bb54:	b	2c204 <main@@Base+0x15fc4>
   2bb58:	mov	r1, r2
   2bb5c:	mov	r0, r5
   2bb60:	mov	r2, r9
   2bb64:	mov	r3, #4
   2bb68:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2bb6c:	b	2bed0 <main@@Base+0x15c90>
   2bb70:	cmp	r0, #34	; 0x22
   2bb74:	bne	2c400 <main@@Base+0x161c0>
   2bb78:	add	r1, r8, #15
   2bb7c:	sub	r0, r9, r1
   2bb80:	cmp	r0, #2
   2bb84:	blt	2bf24 <main@@Base+0x15ce4>
   2bb88:	ldrb	r0, [r1]
   2bb8c:	cmp	r0, #32
   2bb90:	bls	2bf10 <main@@Base+0x15cd0>
   2bb94:	mov	r2, r1
   2bb98:	cmp	r2, r9
   2bb9c:	bne	2bf3c <main@@Base+0x15cfc>
   2bba0:	b	2bf74 <main@@Base+0x15d34>
   2bba4:	cmp	r0, #34	; 0x22
   2bba8:	bne	2c388 <main@@Base+0x16148>
   2bbac:	add	r1, r8, #10
   2bbb0:	sub	r0, r9, r1
   2bbb4:	cmp	r0, #2
   2bbb8:	blt	2bfa0 <main@@Base+0x15d60>
   2bbbc:	ldrb	r0, [r1]
   2bbc0:	cmp	r0, #32
   2bbc4:	bls	2bf8c <main@@Base+0x15d4c>
   2bbc8:	mov	r2, r1
   2bbcc:	cmp	r2, r9
   2bbd0:	bne	2bfb8 <main@@Base+0x15d78>
   2bbd4:	b	2bff0 <main@@Base+0x15db0>
   2bbd8:	bne	2bbec <main@@Base+0x159ac>
   2bbdc:	mov	r2, r1
   2bbe0:	ldrb	r0, [r2, #1]!
   2bbe4:	cmp	r0, #32
   2bbe8:	bhi	2bbfc <main@@Base+0x159bc>
   2bbec:	mov	r0, r5
   2bbf0:	mov	r2, r9
   2bbf4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bbf8:	mov	r2, r0
   2bbfc:	cmp	r2, r9
   2bc00:	beq	2bc3c <main@@Base+0x159fc>
   2bc04:	ldrb	r0, [r2]
   2bc08:	cmp	r0, #58	; 0x3a
   2bc0c:	bne	2bc3c <main@@Base+0x159fc>
   2bc10:	add	r1, r2, #1
   2bc14:	sub	r0, r9, r1
   2bc18:	cmp	r0, #2
   2bc1c:	blt	2c018 <main@@Base+0x15dd8>
   2bc20:	ldrb	r0, [r1]
   2bc24:	cmp	r0, #32
   2bc28:	bls	2c008 <main@@Base+0x15dc8>
   2bc2c:	mov	r2, r1
   2bc30:	cmp	r6, r2
   2bc34:	bne	2c030 <main@@Base+0x15df0>
   2bc38:	b	2c204 <main@@Base+0x15fc4>
   2bc3c:	mov	r1, r2
   2bc40:	mov	r0, r5
   2bc44:	mov	r2, r9
   2bc48:	mov	r3, #4
   2bc4c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2bc50:	b	2c024 <main@@Base+0x15de4>
   2bc54:	cmp	r0, #34	; 0x22
   2bc58:	bne	2c400 <main@@Base+0x161c0>
   2bc5c:	add	r1, r8, #20
   2bc60:	sub	r0, r9, r1
   2bc64:	cmp	r0, #2
   2bc68:	blt	2c090 <main@@Base+0x15e50>
   2bc6c:	ldrb	r0, [r1]
   2bc70:	cmp	r0, #32
   2bc74:	bls	2c07c <main@@Base+0x15e3c>
   2bc78:	mov	r2, r1
   2bc7c:	cmp	r2, r9
   2bc80:	bne	2c0a8 <main@@Base+0x15e68>
   2bc84:	b	2c0e0 <main@@Base+0x15ea0>
   2bc88:	bne	2bc9c <main@@Base+0x15a5c>
   2bc8c:	mov	r2, r1
   2bc90:	ldrb	r0, [r2, #1]!
   2bc94:	cmp	r0, #32
   2bc98:	bhi	2bcac <main@@Base+0x15a6c>
   2bc9c:	ldr	r0, [sp, #36]	; 0x24
   2bca0:	mov	r2, r9
   2bca4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bca8:	mov	r2, r0
   2bcac:	cmp	r2, r9
   2bcb0:	beq	2bcec <main@@Base+0x15aac>
   2bcb4:	ldrb	r0, [r2]
   2bcb8:	cmp	r0, #58	; 0x3a
   2bcbc:	bne	2bcec <main@@Base+0x15aac>
   2bcc0:	add	r1, r2, #1
   2bcc4:	sub	r0, r9, r1
   2bcc8:	cmp	r0, #2
   2bccc:	blt	2c158 <main@@Base+0x15f18>
   2bcd0:	ldrb	r0, [r1]
   2bcd4:	cmp	r0, #32
   2bcd8:	bls	2c148 <main@@Base+0x15f08>
   2bcdc:	mov	r2, r1
   2bce0:	cmp	sl, r2
   2bce4:	bne	2c170 <main@@Base+0x15f30>
   2bce8:	b	2c388 <main@@Base+0x16148>
   2bcec:	ldr	r0, [sp, #36]	; 0x24
   2bcf0:	mov	r1, r2
   2bcf4:	mov	r2, r9
   2bcf8:	mov	r3, #4
   2bcfc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2bd00:	b	2c164 <main@@Base+0x15f24>
   2bd04:	bne	2bd18 <main@@Base+0x15ad8>
   2bd08:	mov	r2, r1
   2bd0c:	ldrb	r0, [r2, #1]!
   2bd10:	cmp	r0, #32
   2bd14:	bhi	2bd28 <main@@Base+0x15ae8>
   2bd18:	mov	r0, r5
   2bd1c:	mov	r2, r9
   2bd20:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bd24:	mov	r2, r0
   2bd28:	cmp	r2, r9
   2bd2c:	beq	2bd68 <main@@Base+0x15b28>
   2bd30:	ldrb	r0, [r2]
   2bd34:	cmp	r0, #58	; 0x3a
   2bd38:	bne	2bd68 <main@@Base+0x15b28>
   2bd3c:	add	r1, r2, #1
   2bd40:	sub	r0, r9, r1
   2bd44:	cmp	r0, #2
   2bd48:	blt	2c108 <main@@Base+0x15ec8>
   2bd4c:	ldrb	r0, [r1]
   2bd50:	cmp	r0, #32
   2bd54:	bls	2c0f8 <main@@Base+0x15eb8>
   2bd58:	mov	r2, r1
   2bd5c:	cmp	r6, r2
   2bd60:	bne	2c120 <main@@Base+0x15ee0>
   2bd64:	b	2c204 <main@@Base+0x15fc4>
   2bd68:	mov	r1, r2
   2bd6c:	mov	r0, r5
   2bd70:	mov	r2, r9
   2bd74:	mov	r3, #4
   2bd78:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2bd7c:	b	2c114 <main@@Base+0x15ed4>
   2bd80:	bne	2bd94 <main@@Base+0x15b54>
   2bd84:	mov	r2, r1
   2bd88:	ldrb	r0, [r2, #1]!
   2bd8c:	cmp	r0, #32
   2bd90:	bhi	2bda4 <main@@Base+0x15b64>
   2bd94:	mov	r0, r5
   2bd98:	mov	r2, r9
   2bd9c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bda0:	mov	r2, r0
   2bda4:	cmp	r2, r9
   2bda8:	beq	2bde4 <main@@Base+0x15ba4>
   2bdac:	ldrb	r0, [r2]
   2bdb0:	cmp	r0, #58	; 0x3a
   2bdb4:	bne	2bde4 <main@@Base+0x15ba4>
   2bdb8:	add	r1, r2, #1
   2bdbc:	sub	r0, r9, r1
   2bdc0:	cmp	r0, #2
   2bdc4:	blt	2c1b8 <main@@Base+0x15f78>
   2bdc8:	ldrb	r0, [r1]
   2bdcc:	cmp	r0, #32
   2bdd0:	bls	2c1a8 <main@@Base+0x15f68>
   2bdd4:	mov	r2, r1
   2bdd8:	cmp	r6, r2
   2bddc:	bne	2c1d0 <main@@Base+0x15f90>
   2bde0:	b	2c204 <main@@Base+0x15fc4>
   2bde4:	mov	r1, r2
   2bde8:	mov	r0, r5
   2bdec:	mov	r2, r9
   2bdf0:	mov	r3, #4
   2bdf4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2bdf8:	b	2c1c4 <main@@Base+0x15f84>
   2bdfc:	bne	2be0c <main@@Base+0x15bcc>
   2be00:	ldrb	r0, [r1, #2]!
   2be04:	cmp	r0, #32
   2be08:	bhi	2be20 <main@@Base+0x15be0>
   2be0c:	mov	r1, r2
   2be10:	mov	r0, r5
   2be14:	mov	r2, r9
   2be18:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2be1c:	mov	r1, r0
   2be20:	cmp	r8, r1
   2be24:	beq	2ba58 <main@@Base+0x15818>
   2be28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be2c:	mov	r2, #7
   2be30:	mov	r3, #3
   2be34:	str	r2, [sp]
   2be38:	mov	r2, r9
   2be3c:	str	r0, [sp, #4]
   2be40:	ldr	r0, [pc, #1616]	; 2c498 <main@@Base+0x16258>
   2be44:	add	r0, pc, r0
   2be48:	str	r0, [sp, #8]
   2be4c:	mov	r0, r5
   2be50:	bl	38d78 <flatcc_json_parser_union@@Base>
   2be54:	b	2c214 <main@@Base+0x15fd4>
   2be58:	bne	2be68 <main@@Base+0x15c28>
   2be5c:	ldrb	r0, [r2, #2]!
   2be60:	cmp	r0, #32
   2be64:	bhi	2be78 <main@@Base+0x15c38>
   2be68:	mov	r0, r5
   2be6c:	mov	r2, r9
   2be70:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2be74:	mov	r2, r0
   2be78:	cmp	r6, r2
   2be7c:	beq	2c204 <main@@Base+0x15fc4>
   2be80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be84:	mov	r1, #3
   2be88:	mov	r3, #1
   2be8c:	str	r1, [sp]
   2be90:	mov	r1, r2
   2be94:	mov	r2, r9
   2be98:	str	r0, [sp, #4]
   2be9c:	ldr	r0, [pc, #1504]	; 2c484 <main@@Base+0x16244>
   2bea0:	add	r0, pc, r0
   2bea4:	str	r0, [sp, #8]
   2bea8:	ldr	r0, [pc, #1496]	; 2c488 <main@@Base+0x16248>
   2beac:	add	r0, pc, r0
   2beb0:	b	2c3f0 <main@@Base+0x161b0>
   2beb4:	bne	2bec4 <main@@Base+0x15c84>
   2beb8:	ldrb	r0, [r2, #2]!
   2bebc:	cmp	r0, #32
   2bec0:	bhi	2bed4 <main@@Base+0x15c94>
   2bec4:	mov	r0, r5
   2bec8:	mov	r2, r9
   2becc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bed0:	mov	r2, r0
   2bed4:	cmp	r6, r2
   2bed8:	beq	2c204 <main@@Base+0x15fc4>
   2bedc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bee0:	mov	r1, #7
   2bee4:	mov	r3, #3
   2bee8:	str	r1, [sp]
   2beec:	mov	r1, r2
   2bef0:	mov	r2, r9
   2bef4:	str	r0, [sp, #4]
   2bef8:	ldr	r0, [pc, #1424]	; 2c490 <main@@Base+0x16250>
   2befc:	add	r0, pc, r0
   2bf00:	str	r0, [sp, #8]
   2bf04:	ldr	r0, [pc, #1416]	; 2c494 <main@@Base+0x16254>
   2bf08:	add	r0, pc, r0
   2bf0c:	b	2c3f0 <main@@Base+0x161b0>
   2bf10:	bne	2bf24 <main@@Base+0x15ce4>
   2bf14:	mov	r2, r1
   2bf18:	ldrb	r0, [r2, #1]!
   2bf1c:	cmp	r0, #32
   2bf20:	bhi	2bf34 <main@@Base+0x15cf4>
   2bf24:	mov	r0, r5
   2bf28:	mov	r2, r9
   2bf2c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bf30:	mov	r2, r0
   2bf34:	cmp	r2, r9
   2bf38:	beq	2bf74 <main@@Base+0x15d34>
   2bf3c:	ldrb	r0, [r2]
   2bf40:	cmp	r0, #58	; 0x3a
   2bf44:	bne	2bf74 <main@@Base+0x15d34>
   2bf48:	add	r1, r2, #1
   2bf4c:	sub	r0, r9, r1
   2bf50:	cmp	r0, #2
   2bf54:	blt	2c2f4 <main@@Base+0x160b4>
   2bf58:	ldrb	r0, [r1]
   2bf5c:	cmp	r0, #32
   2bf60:	bls	2c2e4 <main@@Base+0x160a4>
   2bf64:	mov	r2, r1
   2bf68:	cmp	r4, r2
   2bf6c:	bne	2c30c <main@@Base+0x160cc>
   2bf70:	b	2c400 <main@@Base+0x161c0>
   2bf74:	mov	r1, r2
   2bf78:	mov	r0, r5
   2bf7c:	mov	r2, r9
   2bf80:	mov	r3, #4
   2bf84:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2bf88:	b	2c300 <main@@Base+0x160c0>
   2bf8c:	bne	2bfa0 <main@@Base+0x15d60>
   2bf90:	mov	r2, r1
   2bf94:	ldrb	r0, [r2, #1]!
   2bf98:	cmp	r0, #32
   2bf9c:	bhi	2bfb0 <main@@Base+0x15d70>
   2bfa0:	ldr	r0, [sp, #36]	; 0x24
   2bfa4:	mov	r2, r9
   2bfa8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2bfac:	mov	r2, r0
   2bfb0:	cmp	r2, r9
   2bfb4:	beq	2bff0 <main@@Base+0x15db0>
   2bfb8:	ldrb	r0, [r2]
   2bfbc:	cmp	r0, #58	; 0x3a
   2bfc0:	bne	2bff0 <main@@Base+0x15db0>
   2bfc4:	add	r1, r2, #1
   2bfc8:	sub	r0, r9, r1
   2bfcc:	cmp	r0, #2
   2bfd0:	blt	2c344 <main@@Base+0x16104>
   2bfd4:	ldrb	r0, [r1]
   2bfd8:	cmp	r0, #32
   2bfdc:	bls	2c334 <main@@Base+0x160f4>
   2bfe0:	mov	r2, r1
   2bfe4:	cmp	sl, r2
   2bfe8:	bne	2c35c <main@@Base+0x1611c>
   2bfec:	b	2c388 <main@@Base+0x16148>
   2bff0:	ldr	r0, [sp, #36]	; 0x24
   2bff4:	mov	r1, r2
   2bff8:	mov	r2, r9
   2bffc:	mov	r3, #4
   2c000:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2c004:	b	2c350 <main@@Base+0x16110>
   2c008:	bne	2c018 <main@@Base+0x15dd8>
   2c00c:	ldrb	r0, [r2, #2]!
   2c010:	cmp	r0, #32
   2c014:	bhi	2c028 <main@@Base+0x15de8>
   2c018:	mov	r0, r5
   2c01c:	mov	r2, r9
   2c020:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c024:	mov	r2, r0
   2c028:	cmp	r6, r2
   2c02c:	beq	2c204 <main@@Base+0x15fc4>
   2c030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c034:	mov	r1, #9
   2c038:	mov	r3, #4
   2c03c:	str	r1, [sp]
   2c040:	mov	r1, r2
   2c044:	mov	r2, r9
   2c048:	str	r0, [sp, #4]
   2c04c:	ldr	r0, [pc, #1096]	; 2c49c <main@@Base+0x1625c>
   2c050:	add	r0, pc, r0
   2c054:	str	r0, [sp, #8]
   2c058:	ldr	r0, [pc, #1088]	; 2c4a0 <main@@Base+0x16260>
   2c05c:	add	r0, pc, r0
   2c060:	str	r0, [sp, #12]
   2c064:	ldr	r0, [pc, #1080]	; 2c4a4 <main@@Base+0x16264>
   2c068:	add	r0, pc, r0
   2c06c:	str	r0, [sp, #16]
   2c070:	mov	r0, r5
   2c074:	bl	39944 <flatcc_json_parser_union_type_vector@@Base>
   2c078:	b	2c214 <main@@Base+0x15fd4>
   2c07c:	bne	2c090 <main@@Base+0x15e50>
   2c080:	mov	r2, r1
   2c084:	ldrb	r0, [r2, #1]!
   2c088:	cmp	r0, #32
   2c08c:	bhi	2c0a0 <main@@Base+0x15e60>
   2c090:	mov	r0, r5
   2c094:	mov	r2, r9
   2c098:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c09c:	mov	r2, r0
   2c0a0:	cmp	r2, r9
   2c0a4:	beq	2c0e0 <main@@Base+0x15ea0>
   2c0a8:	ldrb	r0, [r2]
   2c0ac:	cmp	r0, #58	; 0x3a
   2c0b0:	bne	2c0e0 <main@@Base+0x15ea0>
   2c0b4:	add	r1, r2, #1
   2c0b8:	sub	r0, r9, r1
   2c0bc:	cmp	r0, #2
   2c0c0:	blt	2c3a8 <main@@Base+0x16168>
   2c0c4:	ldrb	r0, [r1]
   2c0c8:	cmp	r0, #32
   2c0cc:	bls	2c398 <main@@Base+0x16158>
   2c0d0:	mov	r2, r1
   2c0d4:	cmp	r4, r2
   2c0d8:	bne	2c3c0 <main@@Base+0x16180>
   2c0dc:	b	2c400 <main@@Base+0x161c0>
   2c0e0:	mov	r1, r2
   2c0e4:	mov	r0, r5
   2c0e8:	mov	r2, r9
   2c0ec:	mov	r3, #4
   2c0f0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2c0f4:	b	2c3b4 <main@@Base+0x16174>
   2c0f8:	bne	2c108 <main@@Base+0x15ec8>
   2c0fc:	ldrb	r0, [r2, #2]!
   2c100:	cmp	r0, #32
   2c104:	bhi	2c118 <main@@Base+0x15ed8>
   2c108:	mov	r0, r5
   2c10c:	mov	r2, r9
   2c110:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c114:	mov	r2, r0
   2c118:	cmp	r6, r2
   2c11c:	beq	2c204 <main@@Base+0x15fc4>
   2c120:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c124:	mov	r1, #3
   2c128:	mov	r3, #1
   2c12c:	str	r1, [sp]
   2c130:	mov	r1, r2
   2c134:	mov	r2, r9
   2c138:	str	r0, [sp, #4]
   2c13c:	ldr	r0, [pc, #840]	; 2c48c <main@@Base+0x1624c>
   2c140:	add	r0, pc, r0
   2c144:	b	2be48 <main@@Base+0x15c08>
   2c148:	bne	2c158 <main@@Base+0x15f18>
   2c14c:	ldrb	r0, [r2, #2]!
   2c150:	cmp	r0, #32
   2c154:	bhi	2c168 <main@@Base+0x15f28>
   2c158:	ldr	r0, [sp, #36]	; 0x24
   2c15c:	mov	r2, r9
   2c160:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c164:	mov	r2, r0
   2c168:	cmp	sl, r2
   2c16c:	beq	2c388 <main@@Base+0x16148>
   2c170:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c174:	mov	r1, #5
   2c178:	mov	r3, #2
   2c17c:	str	r1, [sp]
   2c180:	mov	r1, r2
   2c184:	mov	r2, r9
   2c188:	str	r0, [sp, #4]
   2c18c:	ldr	r0, [pc, #804]	; 2c4b8 <main@@Base+0x16278>
   2c190:	add	r0, pc, r0
   2c194:	str	r0, [sp, #8]
   2c198:	ldr	r0, [pc, #796]	; 2c4bc <main@@Base+0x1627c>
   2c19c:	ldr	r5, [sp, #36]	; 0x24
   2c1a0:	add	r0, pc, r0
   2c1a4:	b	2c3f0 <main@@Base+0x161b0>
   2c1a8:	bne	2c1b8 <main@@Base+0x15f78>
   2c1ac:	ldrb	r0, [r2, #2]!
   2c1b0:	cmp	r0, #32
   2c1b4:	bhi	2c1c8 <main@@Base+0x15f88>
   2c1b8:	mov	r0, r5
   2c1bc:	mov	r2, r9
   2c1c0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c1c4:	mov	r2, r0
   2c1c8:	cmp	r6, r2
   2c1cc:	beq	2c204 <main@@Base+0x15fc4>
   2c1d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c1d4:	mov	r1, #9
   2c1d8:	mov	r3, #4
   2c1dc:	str	r1, [sp]
   2c1e0:	mov	r1, r2
   2c1e4:	mov	r2, r9
   2c1e8:	str	r0, [sp, #4]
   2c1ec:	ldr	r0, [pc, #692]	; 2c4a8 <main@@Base+0x16268>
   2c1f0:	add	r0, pc, r0
   2c1f4:	str	r0, [sp, #8]
   2c1f8:	mov	r0, r5
   2c1fc:	bl	39450 <flatcc_json_parser_union_vector@@Base>
   2c200:	b	2c214 <main@@Base+0x15fd4>
   2c204:	mov	r0, r5
   2c208:	mov	r1, r6
   2c20c:	mov	r2, r9
   2c210:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2c214:	ldr	r4, [sp, #32]
   2c218:	mov	r2, r0
   2c21c:	sub	r0, r9, r0
   2c220:	cmp	r0, #2
   2c224:	blt	2c258 <main@@Base+0x16018>
   2c228:	ldrb	r0, [r2]
   2c22c:	cmp	r0, #32
   2c230:	bls	2c244 <main@@Base+0x16004>
   2c234:	mov	r3, r2
   2c238:	cmp	r3, r9
   2c23c:	bne	2c274 <main@@Base+0x16034>
   2c240:	b	2c40c <main@@Base+0x161cc>
   2c244:	bne	2c258 <main@@Base+0x16018>
   2c248:	mov	r3, r2
   2c24c:	ldrb	r0, [r3, #1]!
   2c250:	cmp	r0, #32
   2c254:	bhi	2c26c <main@@Base+0x1602c>
   2c258:	mov	r1, r2
   2c25c:	mov	r0, r5
   2c260:	mov	r2, r9
   2c264:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c268:	mov	r3, r0
   2c26c:	cmp	r3, r9
   2c270:	beq	2c40c <main@@Base+0x161cc>
   2c274:	ldrb	r0, [r3]
   2c278:	cmp	r0, #44	; 0x2c
   2c27c:	bne	2c414 <main@@Base+0x161d4>
   2c280:	add	r1, r3, #1
   2c284:	sub	r0, r9, r1
   2c288:	cmp	r0, #2
   2c28c:	blt	2c2bc <main@@Base+0x1607c>
   2c290:	ldrb	r0, [r1]
   2c294:	cmp	r0, #32
   2c298:	bls	2c2ac <main@@Base+0x1606c>
   2c29c:	mov	r3, r1
   2c2a0:	cmp	r3, r9
   2c2a4:	bne	2c2d4 <main@@Base+0x16094>
   2c2a8:	b	2c440 <main@@Base+0x16200>
   2c2ac:	bne	2c2bc <main@@Base+0x1607c>
   2c2b0:	ldrb	r0, [r3, #2]!
   2c2b4:	cmp	r0, #32
   2c2b8:	bhi	2c2cc <main@@Base+0x1608c>
   2c2bc:	mov	r0, r5
   2c2c0:	mov	r2, r9
   2c2c4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c2c8:	mov	r3, r0
   2c2cc:	cmp	r3, r9
   2c2d0:	beq	2c440 <main@@Base+0x16200>
   2c2d4:	ldrb	r0, [r3]
   2c2d8:	cmp	r0, #125	; 0x7d
   2c2dc:	bne	2af74 <main@@Base+0x14d34>
   2c2e0:	b	2c41c <main@@Base+0x161dc>
   2c2e4:	bne	2c2f4 <main@@Base+0x160b4>
   2c2e8:	ldrb	r0, [r2, #2]!
   2c2ec:	cmp	r0, #32
   2c2f0:	bhi	2c304 <main@@Base+0x160c4>
   2c2f4:	mov	r0, r5
   2c2f8:	mov	r2, r9
   2c2fc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c300:	mov	r2, r0
   2c304:	cmp	r4, r2
   2c308:	beq	2c400 <main@@Base+0x161c0>
   2c30c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c310:	mov	r1, #1
   2c314:	mov	r3, #0
   2c318:	str	r1, [sp]
   2c31c:	mov	r1, r2
   2c320:	mov	r2, r9
   2c324:	str	r0, [sp, #4]
   2c328:	ldr	r0, [pc, #388]	; 2c4b4 <main@@Base+0x16274>
   2c32c:	add	r0, pc, r0
   2c330:	b	2be48 <main@@Base+0x15c08>
   2c334:	bne	2c344 <main@@Base+0x16104>
   2c338:	ldrb	r0, [r2, #2]!
   2c33c:	cmp	r0, #32
   2c340:	bhi	2c354 <main@@Base+0x16114>
   2c344:	ldr	r0, [sp, #36]	; 0x24
   2c348:	mov	r2, r9
   2c34c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c350:	mov	r2, r0
   2c354:	cmp	sl, r2
   2c358:	beq	2c388 <main@@Base+0x16148>
   2c35c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c360:	mov	r1, #5
   2c364:	mov	r3, #2
   2c368:	str	r1, [sp]
   2c36c:	mov	r1, r2
   2c370:	mov	r2, r9
   2c374:	str	r0, [sp, #4]
   2c378:	ldr	r0, [pc, #320]	; 2c4c0 <main@@Base+0x16280>
   2c37c:	ldr	r5, [sp, #36]	; 0x24
   2c380:	add	r0, pc, r0
   2c384:	b	2be48 <main@@Base+0x15c08>
   2c388:	ldr	r5, [sp, #36]	; 0x24
   2c38c:	mov	r1, sl
   2c390:	mov	r0, r5
   2c394:	b	2c20c <main@@Base+0x15fcc>
   2c398:	bne	2c3a8 <main@@Base+0x16168>
   2c39c:	ldrb	r0, [r2, #2]!
   2c3a0:	cmp	r0, #32
   2c3a4:	bhi	2c3b8 <main@@Base+0x16178>
   2c3a8:	mov	r0, r5
   2c3ac:	mov	r2, r9
   2c3b0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c3b4:	mov	r2, r0
   2c3b8:	cmp	r4, r2
   2c3bc:	beq	2c400 <main@@Base+0x161c0>
   2c3c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c3c4:	mov	r1, #1
   2c3c8:	mov	r3, #0
   2c3cc:	str	r1, [sp]
   2c3d0:	mov	r1, r2
   2c3d4:	mov	r2, r9
   2c3d8:	str	r0, [sp, #4]
   2c3dc:	ldr	r0, [pc, #200]	; 2c4ac <main@@Base+0x1626c>
   2c3e0:	add	r0, pc, r0
   2c3e4:	str	r0, [sp, #8]
   2c3e8:	ldr	r0, [pc, #192]	; 2c4b0 <main@@Base+0x16270>
   2c3ec:	add	r0, pc, r0
   2c3f0:	str	r0, [sp, #12]
   2c3f4:	mov	r0, r5
   2c3f8:	bl	38eb8 <flatcc_json_parser_union_type@@Base>
   2c3fc:	b	2c214 <main@@Base+0x15fd4>
   2c400:	mov	r0, r5
   2c404:	mov	r1, r4
   2c408:	b	2c20c <main@@Base+0x15fcc>
   2c40c:	mov	r7, r9
   2c410:	b	2aea8 <main@@Base+0x14c68>
   2c414:	cmp	r0, #125	; 0x7d
   2c418:	bne	2c44c <main@@Base+0x1620c>
   2c41c:	add	r1, r3, #1
   2c420:	sub	r0, r9, r1
   2c424:	cmp	r0, #2
   2c428:	blt	2c474 <main@@Base+0x16234>
   2c42c:	ldrb	r0, [r1]
   2c430:	cmp	r0, #32
   2c434:	bls	2c460 <main@@Base+0x16220>
   2c438:	mov	r7, r1
   2c43c:	b	2aea8 <main@@Base+0x14c68>
   2c440:	mov	r0, r5
   2c444:	mov	r1, r9
   2c448:	b	2c454 <main@@Base+0x16214>
   2c44c:	mov	r0, r5
   2c450:	mov	r1, r3
   2c454:	mov	r2, r9
   2c458:	mov	r3, #10
   2c45c:	b	2aea0 <main@@Base+0x14c60>
   2c460:	bne	2c474 <main@@Base+0x16234>
   2c464:	ldrb	r0, [r3, #2]!
   2c468:	cmp	r0, #32
   2c46c:	mov	r7, r3
   2c470:	bhi	2aea8 <main@@Base+0x14c68>
   2c474:	mov	r0, r5
   2c478:	mov	r2, r9
   2c47c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c480:	b	2aea4 <main@@Base+0x14c64>
   2c484:	andeq	r3, r3, ip, lsl #8
   2c488:	andeq	r0, r0, r0, ror #14
   2c48c:	andeq	r0, r0, ip, asr #9
   2c490:	andeq	r3, r3, r0, asr #7
   2c494:	andeq	r0, r0, r4, lsl #14
   2c498:	andeq	r0, r0, r8, asr #15
   2c49c:	andeq	r3, r3, ip, ror r2
   2c4a0:			; <UNDEFINED> instruction: 0x000005b0
   2c4a4:	andeq	r1, r0, ip, lsr #9
   2c4a8:	andeq	r0, r0, ip, lsl r4
   2c4ac:	strdeq	r2, [r3], -ip
   2c4b0:	andeq	r0, r0, r0, lsr #4
   2c4b4:	andeq	r0, r0, r0, ror #5
   2c4b8:	andeq	r3, r3, ip, asr r1
   2c4bc:	andeq	r0, r0, ip, ror #8
   2c4c0:	andeq	r0, r0, ip, lsl #5
   2c4c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c4c8:	add	fp, sp, #28
   2c4cc:	push	{r3}		; (str r3, [sp, #-4]!)
   2c4d0:	sub	r7, r2, r1
   2c4d4:	cmp	r7, #8
   2c4d8:	movcs	r7, #8
   2c4dc:	and	r7, r7, #15
   2c4e0:	sub	r7, r7, #1
   2c4e4:	cmp	r7, #7
   2c4e8:	bhi	2c5d0 <main@@Base+0x16390>
   2c4ec:	add	r6, pc, #36	; 0x24
   2c4f0:	mov	ip, #0
   2c4f4:	mov	r3, #0
   2c4f8:	mov	r8, #0
   2c4fc:	mov	r9, #0
   2c500:	mov	sl, #0
   2c504:	mov	r4, #0
   2c508:	mov	r5, #0
   2c50c:	ldr	lr, [r6, r7, lsl #2]
   2c510:	mov	r7, #0
   2c514:	add	pc, r6, lr
   2c518:	andeq	r0, r0, r4, rrx
   2c51c:	andeq	r0, r0, ip, asr r0
   2c520:	andeq	r0, r0, r4, asr r0
   2c524:	andeq	r0, r0, ip, asr #32
   2c528:	andeq	r0, r0, r0, asr #32
   2c52c:	andeq	r0, r0, r4, lsr r0
   2c530:	andeq	r0, r0, r4, lsr #32
   2c534:	andeq	r0, r0, r0, lsr #32
   2c538:	ldrb	r3, [r1, #7]
   2c53c:	ldrb	r7, [r1, #6]
   2c540:	mov	r8, ip
   2c544:	orr	r3, r3, r7, lsl #8
   2c548:	mov	ip, r3
   2c54c:	ldrb	r3, [r1, #5]
   2c550:	mov	r9, r8
   2c554:	orr	ip, ip, r3, lsl #16
   2c558:	ldrb	r3, [r1, #4]
   2c55c:	mov	sl, r9
   2c560:	orr	ip, ip, r3, lsl #24
   2c564:	ldrb	r3, [r1, #3]
   2c568:	orr	r7, r3, sl
   2c56c:	ldrb	r3, [r1, #2]
   2c570:	orr	r4, r7, r3, lsl #8
   2c574:	ldrb	r3, [r1, #1]
   2c578:	orr	r5, r4, r3, lsl #16
   2c57c:	ldrb	r7, [r1]
   2c580:	movw	r3, #29797	; 0x7465
   2c584:	movw	r6, #24946	; 0x6172
   2c588:	movt	r3, #24931	; 0x6163
   2c58c:	movt	r6, #17256	; 0x4368
   2c590:	eor	r3, ip, r3
   2c594:	orr	r7, r5, r7, lsl #24
   2c598:	eor	r7, r7, r6
   2c59c:	orrs	r3, r3, r7
   2c5a0:	bne	2c5d0 <main@@Base+0x16390>
   2c5a4:	add	lr, r1, #8
   2c5a8:	mov	r6, #-268435456	; 0xf0000000
   2c5ac:	sub	r7, r2, lr
   2c5b0:	cmp	r7, #8
   2c5b4:	mov	r3, r7
   2c5b8:	movcs	r3, #8
   2c5bc:	add	r3, r6, r3, lsl #28
   2c5c0:	asr	r3, r3, #28
   2c5c4:	cmp	r3, #0
   2c5c8:	cmpge	r7, #2
   2c5cc:	bge	2c5dc <main@@Base+0x1639c>
   2c5d0:	mov	r0, r1
   2c5d4:	sub	sp, fp, #28
   2c5d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c5dc:	ldrb	r3, [lr]
   2c5e0:	cmp	r3, #114	; 0x72
   2c5e4:	bne	2c5d0 <main@@Base+0x16390>
   2c5e8:	ldrb	r3, [r1, #9]
   2c5ec:	mov	ip, lr
   2c5f0:	cmp	r3, #46	; 0x2e
   2c5f4:	addeq	ip, r1, #10
   2c5f8:	cmp	ip, lr
   2c5fc:	beq	2c5d0 <main@@Base+0x16390>
   2c600:	ldr	r3, [sp]
   2c604:	mov	r1, ip
   2c608:	sub	sp, fp, #28
   2c60c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c610:	b	26b38 <main@@Base+0x108f8>
   2c614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c618:	add	fp, sp, #28
   2c61c:	sub	sp, sp, #36	; 0x24
   2c620:	ldr	r7, [fp, #8]
   2c624:	mov	r9, r0
   2c628:	mov	r0, #0
   2c62c:	mov	r8, r2
   2c630:	mov	r4, r1
   2c634:	cmp	r3, #11
   2c638:	str	r0, [r7]
   2c63c:	bhi	2c694 <main@@Base+0x16454>
   2c640:	add	r0, pc, #4
   2c644:	ldr	r1, [r0, r3, lsl #2]
   2c648:	add	pc, r0, r1
   2c64c:	andeq	r0, r0, r8, lsl #1
   2c650:	andeq	r0, r0, r8, rrx
   2c654:	andeq	r0, r0, r4, asr #1
   2c658:	andeq	r0, r0, r8, rrx
   2c65c:	andeq	r0, r0, r8, rrx
   2c660:	andeq	r0, r0, r8, rrx
   2c664:	andeq	r0, r0, r8, rrx
   2c668:	andeq	r0, r0, r8, rrx
   2c66c:	andeq	r0, r0, r8, lsl r1
   2c670:	andeq	r0, r0, r0, lsr r0
   2c674:	andeq	r0, r0, r0, lsr r0
   2c678:	andeq	r0, r0, r0, asr r0
   2c67c:	mov	r0, r9
   2c680:	mov	r1, r4
   2c684:	mov	r2, r8
   2c688:	mov	r3, r7
   2c68c:	bl	2d548 <main@@Base+0x17308>
   2c690:	b	2c85c <main@@Base+0x1661c>
   2c694:	cmp	r3, #255	; 0xff
   2c698:	bne	2c6b4 <main@@Base+0x16474>
   2c69c:	mov	r0, r9
   2c6a0:	mov	r1, r4
   2c6a4:	mov	r2, r8
   2c6a8:	mov	r3, r7
   2c6ac:	bl	389a4 <flatcc_json_parser_build_string@@Base>
   2c6b0:	b	2c85c <main@@Base+0x1661c>
   2c6b4:	ldrb	r0, [r9, #8]
   2c6b8:	tst	r0, #1
   2c6bc:	bne	2c7c0 <main@@Base+0x16580>
   2c6c0:	mov	r0, r9
   2c6c4:	mov	r1, r4
   2c6c8:	mov	r2, r8
   2c6cc:	mov	r3, #15
   2c6d0:	b	2c704 <main@@Base+0x164c4>
   2c6d4:	sub	r0, r8, r4
   2c6d8:	cmp	r0, #4
   2c6dc:	blt	2c6f4 <main@@Base+0x164b4>
   2c6e0:	ldr	r0, [r4]
   2c6e4:	movw	r1, #30062	; 0x756e
   2c6e8:	movt	r1, #27756	; 0x6c6c
   2c6ec:	cmp	r0, r1
   2c6f0:	beq	2c89c <main@@Base+0x1665c>
   2c6f4:	mov	r0, r9
   2c6f8:	mov	r1, r4
   2c6fc:	mov	r2, r8
   2c700:	mov	r3, #26
   2c704:	sub	sp, fp, #28
   2c708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c70c:	b	36078 <flatcc_json_parser_set_error@@Base>
   2c710:	mov	r0, #0
   2c714:	mov	r1, #1
   2c718:	str	r0, [r7]
   2c71c:	ldr	r0, [r9]
   2c720:	bl	314c0 <flatcc_builder_start_table@@Base>
   2c724:	cmp	r0, #0
   2c728:	bne	2c848 <main@@Base+0x16608>
   2c72c:	cmp	r4, r8
   2c730:	beq	2c824 <main@@Base+0x165e4>
   2c734:	ldrb	r0, [r4]
   2c738:	cmp	r0, #123	; 0x7b
   2c73c:	bne	2c824 <main@@Base+0x165e4>
   2c740:	add	r1, r4, #1
   2c744:	sub	r0, r8, r1
   2c748:	cmp	r0, #2
   2c74c:	blt	2ce10 <main@@Base+0x16bd0>
   2c750:	ldrb	r0, [r1]
   2c754:	cmp	r0, #32
   2c758:	bls	2ce00 <main@@Base+0x16bc0>
   2c75c:	mov	r4, r1
   2c760:	b	2ce20 <main@@Base+0x16be0>
   2c764:	mov	r0, #0
   2c768:	mov	r1, #2
   2c76c:	mov	r2, #2
   2c770:	str	r0, [r7]
   2c774:	ldr	r0, [r9]
   2c778:	bl	30224 <flatcc_builder_start_struct@@Base>
   2c77c:	cmp	r0, #0
   2c780:	beq	2c818 <main@@Base+0x165d8>
   2c784:	cmp	r4, r8
   2c788:	beq	2c7d8 <main@@Base+0x16598>
   2c78c:	ldrb	r1, [r4]
   2c790:	cmp	r1, #123	; 0x7b
   2c794:	bne	2c7d8 <main@@Base+0x16598>
   2c798:	add	r1, r4, #1
   2c79c:	str	r0, [sp, #4]
   2c7a0:	sub	r0, r8, r1
   2c7a4:	cmp	r0, #2
   2c7a8:	blt	2c8cc <main@@Base+0x1668c>
   2c7ac:	ldrb	r0, [r1]
   2c7b0:	cmp	r0, #32
   2c7b4:	bls	2c8bc <main@@Base+0x1667c>
   2c7b8:	mov	r4, r1
   2c7bc:	b	2c8dc <main@@Base+0x1669c>
   2c7c0:	mov	r0, r9
   2c7c4:	mov	r1, r4
   2c7c8:	mov	r2, r8
   2c7cc:	sub	sp, fp, #28
   2c7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c7d4:	b	36b90 <flatcc_json_parser_generic_json@@Base>
   2c7d8:	mov	r0, r9
   2c7dc:	mov	r1, r4
   2c7e0:	mov	r2, r8
   2c7e4:	mov	r3, #21
   2c7e8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2c7ec:	mov	r4, r0
   2c7f0:	cmp	r4, r8
   2c7f4:	mov	r1, r8
   2c7f8:	beq	2c81c <main@@Base+0x165dc>
   2c7fc:	ldr	r0, [r9]
   2c800:	bl	3030c <flatcc_builder_end_struct@@Base>
   2c804:	cmp	r0, #0
   2c808:	mov	r1, r4
   2c80c:	str	r0, [r7]
   2c810:	bne	2c860 <main@@Base+0x16620>
   2c814:	b	2c81c <main@@Base+0x165dc>
   2c818:	mov	r1, r4
   2c81c:	mov	r0, r9
   2c820:	b	2c850 <main@@Base+0x16610>
   2c824:	mov	r0, r9
   2c828:	mov	r1, r4
   2c82c:	mov	r2, r8
   2c830:	mov	r3, #21
   2c834:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2c838:	mov	r4, r0
   2c83c:	ldr	r0, [r9, #24]
   2c840:	cmp	r0, #0
   2c844:	beq	2c8a4 <main@@Base+0x16664>
   2c848:	mov	r0, r9
   2c84c:	mov	r1, r4
   2c850:	mov	r2, r8
   2c854:	mov	r3, #33	; 0x21
   2c858:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2c85c:	mov	r4, r0
   2c860:	ldr	r0, [r9, #24]
   2c864:	cmp	r0, #0
   2c868:	bne	2c890 <main@@Base+0x16650>
   2c86c:	ldr	r0, [r7]
   2c870:	cmp	r0, #0
   2c874:	bne	2c890 <main@@Base+0x16650>
   2c878:	mov	r0, r9
   2c87c:	mov	r1, r4
   2c880:	mov	r2, r8
   2c884:	mov	r3, #33	; 0x21
   2c888:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2c88c:	mov	r4, r0
   2c890:	mov	r0, r4
   2c894:	sub	sp, fp, #28
   2c898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c89c:	add	r4, r4, #4
   2c8a0:	b	2c890 <main@@Base+0x16650>
   2c8a4:	ldr	r0, [r9]
   2c8a8:	bl	31ef0 <flatcc_builder_end_table@@Base>
   2c8ac:	cmp	r0, #0
   2c8b0:	str	r0, [r7]
   2c8b4:	bne	2c860 <main@@Base+0x16620>
   2c8b8:	b	2c848 <main@@Base+0x16608>
   2c8bc:	bne	2c8cc <main@@Base+0x1668c>
   2c8c0:	ldrb	r0, [r4, #2]!
   2c8c4:	cmp	r0, #32
   2c8c8:	bhi	2c8dc <main@@Base+0x1669c>
   2c8cc:	mov	r0, r9
   2c8d0:	mov	r2, r8
   2c8d4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2c8d8:	mov	r4, r0
   2c8dc:	cmp	r4, r8
   2c8e0:	mov	r2, r8
   2c8e4:	beq	2c928 <main@@Base+0x166e8>
   2c8e8:	ldrb	r0, [r4]
   2c8ec:	cmp	r0, #125	; 0x7d
   2c8f0:	bne	2c924 <main@@Base+0x166e4>
   2c8f4:	add	r1, r4, #1
   2c8f8:	sub	r0, r8, r1
   2c8fc:	cmp	r0, #2
   2c900:	blt	2d4b4 <main@@Base+0x17274>
   2c904:	ldrb	r0, [r1]
   2c908:	cmp	r0, #32
   2c90c:	bhi	2cdec <main@@Base+0x16bac>
   2c910:	bne	2d4b4 <main@@Base+0x17274>
   2c914:	ldrb	r0, [r4, #2]!
   2c918:	cmp	r0, #32
   2c91c:	bhi	2c7f0 <main@@Base+0x165b0>
   2c920:	b	2d4b4 <main@@Base+0x17274>
   2c924:	mov	r2, r4
   2c928:	str	r9, [sp, #12]
   2c92c:	cmp	r2, r8
   2c930:	mov	r1, r8
   2c934:	beq	2c980 <main@@Base+0x16740>
   2c938:	ldrb	r0, [r2]
   2c93c:	cmp	r0, #46	; 0x2e
   2c940:	beq	2c958 <main@@Base+0x16718>
   2c944:	cmp	r0, #34	; 0x22
   2c948:	bne	2c974 <main@@Base+0x16734>
   2c94c:	mov	r0, #0
   2c950:	add	r1, r2, #1
   2c954:	b	2c97c <main@@Base+0x1673c>
   2c958:	mov	r1, r2
   2c95c:	mov	r0, r9
   2c960:	mov	r2, r8
   2c964:	mov	r3, #5
   2c968:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2c96c:	mov	r1, r0
   2c970:	b	2c980 <main@@Base+0x16740>
   2c974:	mov	r0, #1
   2c978:	mov	r1, r2
   2c97c:	str	r0, [r9, #12]
   2c980:	sub	r0, r8, r1
   2c984:	mov	r2, #8
   2c988:	cmp	r0, #8
   2c98c:	movcs	r0, r2
   2c990:	and	r0, r0, #15
   2c994:	sub	r2, r0, #1
   2c998:	cmp	r2, #7
   2c99c:	bhi	2caec <main@@Base+0x168ac>
   2c9a0:	add	r5, pc, #40	; 0x28
   2c9a4:	mov	r9, r7
   2c9a8:	mov	sl, #0
   2c9ac:	mov	ip, #0
   2c9b0:	mov	lr, #0
   2c9b4:	mov	r4, #0
   2c9b8:	mov	r3, #0
   2c9bc:	mov	r6, #0
   2c9c0:	mov	r7, #0
   2c9c4:	ldr	r0, [r5, r2, lsl #2]
   2c9c8:	mov	r2, #0
   2c9cc:	add	pc, r5, r0
   2c9d0:	andeq	r0, r0, r4, rrx
   2c9d4:	andeq	r0, r0, ip, asr r0
   2c9d8:	andeq	r0, r0, r4, asr r0
   2c9dc:	andeq	r0, r0, ip, asr #32
   2c9e0:	andeq	r0, r0, r0, asr #32
   2c9e4:	andeq	r0, r0, r4, lsr r0
   2c9e8:	andeq	r0, r0, r4, lsr #32
   2c9ec:	andeq	r0, r0, r0, lsr #32
   2c9f0:	ldrb	ip, [r1, #7]
   2c9f4:	ldrb	r0, [r1, #6]
   2c9f8:	mov	lr, sl
   2c9fc:	orr	r0, ip, r0, lsl #8
   2ca00:	mov	sl, r0
   2ca04:	ldrb	r0, [r1, #5]
   2ca08:	mov	r4, lr
   2ca0c:	orr	sl, sl, r0, lsl #16
   2ca10:	ldrb	r0, [r1, #4]
   2ca14:	mov	r3, r4
   2ca18:	orr	sl, sl, r0, lsl #24
   2ca1c:	ldrb	r0, [r1, #3]
   2ca20:	orr	r6, r0, r3
   2ca24:	ldrb	r0, [r1, #2]
   2ca28:	orr	r7, r6, r0, lsl #8
   2ca2c:	ldrb	r0, [r1, #1]
   2ca30:	orr	r2, r7, r0, lsl #16
   2ca34:	ldrb	r3, [r1]
   2ca38:	movw	r0, #25966	; 0x656e
   2ca3c:	mov	r7, r9
   2ca40:	ldr	r9, [sp, #12]
   2ca44:	movt	r0, #24428	; 0x5f6c
   2ca48:	eor	r0, sl, r0
   2ca4c:	orr	r2, r2, r3, lsl #24
   2ca50:	movw	r3, #26994	; 0x6972
   2ca54:	movt	r3, #26721	; 0x6861
   2ca58:	eor	r2, r2, r3
   2ca5c:	orrs	r0, r0, r2
   2ca60:	bne	2caec <main@@Base+0x168ac>
   2ca64:	add	r4, r1, #8
   2ca68:	mov	r2, #8
   2ca6c:	sub	r0, r8, r4
   2ca70:	cmp	r0, #8
   2ca74:	movcc	r2, r0
   2ca78:	and	r3, r2, #15
   2ca7c:	sub	r2, r3, #3
   2ca80:	cmp	r2, #6
   2ca84:	bcs	2caf4 <main@@Base+0x168b4>
   2ca88:	ldrb	r2, [r1, #10]
   2ca8c:	lsl	r2, r2, #8
   2ca90:	ldrb	r3, [r1, #9]
   2ca94:	orr	r2, r2, r3, lsl #16
   2ca98:	ldrb	r3, [r4]
   2ca9c:	bic	r2, r2, #255	; 0xff
   2caa0:	orr	r2, r2, r3, lsl #24
   2caa4:	movw	r3, #26624	; 0x6800
   2caa8:	movt	r3, #26484	; 0x6774
   2caac:	teq	r2, r3
   2cab0:	bne	2cba4 <main@@Base+0x16964>
   2cab4:	cmp	r0, #4
   2cab8:	blt	2cba4 <main@@Base+0x16964>
   2cabc:	mov	r2, r1
   2cac0:	ldr	r3, [r9, #12]
   2cac4:	ldrb	r0, [r2, #11]!
   2cac8:	cmp	r3, #0
   2cacc:	beq	2cb0c <main@@Base+0x168cc>
   2cad0:	cmp	r0, #33	; 0x21
   2cad4:	bcc	2cae0 <main@@Base+0x168a0>
   2cad8:	cmp	r0, #58	; 0x3a
   2cadc:	bne	2cba4 <main@@Base+0x16964>
   2cae0:	mov	r0, #0
   2cae4:	str	r0, [r9, #12]
   2cae8:	b	2cb18 <main@@Base+0x168d8>
   2caec:	mov	r0, r9
   2caf0:	b	2cbac <main@@Base+0x1696c>
   2caf4:	mov	r2, #0
   2caf8:	cmp	r3, #1
   2cafc:	beq	2ca98 <main@@Base+0x16858>
   2cb00:	cmp	r3, #2
   2cb04:	beq	2ca90 <main@@Base+0x16850>
   2cb08:	b	2cba4 <main@@Base+0x16964>
   2cb0c:	cmp	r0, #34	; 0x22
   2cb10:	bne	2cba4 <main@@Base+0x16964>
   2cb14:	add	r2, r1, #12
   2cb18:	sub	r0, r8, r2
   2cb1c:	cmp	r0, #2
   2cb20:	blt	2cb54 <main@@Base+0x16914>
   2cb24:	ldrb	r0, [r2]
   2cb28:	cmp	r0, #32
   2cb2c:	bls	2cb40 <main@@Base+0x16900>
   2cb30:	mov	r5, r2
   2cb34:	cmp	r5, r8
   2cb38:	bne	2cb70 <main@@Base+0x16930>
   2cb3c:	b	2cc7c <main@@Base+0x16a3c>
   2cb40:	bne	2cb54 <main@@Base+0x16914>
   2cb44:	mov	r5, r2
   2cb48:	ldrb	r0, [r5, #1]!
   2cb4c:	cmp	r0, #32
   2cb50:	bhi	2cb68 <main@@Base+0x16928>
   2cb54:	mov	r1, r2
   2cb58:	mov	r0, r9
   2cb5c:	mov	r2, r8
   2cb60:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2cb64:	mov	r5, r0
   2cb68:	cmp	r5, r8
   2cb6c:	beq	2cc7c <main@@Base+0x16a3c>
   2cb70:	ldrb	r0, [r5]
   2cb74:	cmp	r0, #58	; 0x3a
   2cb78:	bne	2cc7c <main@@Base+0x16a3c>
   2cb7c:	add	r1, r5, #1
   2cb80:	sub	r0, r8, r1
   2cb84:	cmp	r0, #2
   2cb88:	blt	2cca4 <main@@Base+0x16a64>
   2cb8c:	ldrb	r0, [r1]
   2cb90:	cmp	r0, #32
   2cb94:	bls	2cc94 <main@@Base+0x16a54>
   2cb98:	mov	r5, r1
   2cb9c:	cmp	r4, r5
   2cba0:	bne	2ccbc <main@@Base+0x16a7c>
   2cba4:	mov	r0, r9
   2cba8:	mov	r1, r4
   2cbac:	mov	r2, r8
   2cbb0:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2cbb4:	mov	r1, r0
   2cbb8:	sub	r0, r8, r1
   2cbbc:	cmp	r0, #2
   2cbc0:	blt	2cbf4 <main@@Base+0x169b4>
   2cbc4:	ldrb	r0, [r1]
   2cbc8:	cmp	r0, #32
   2cbcc:	bls	2cbe0 <main@@Base+0x169a0>
   2cbd0:	mov	r2, r1
   2cbd4:	cmp	r2, r8
   2cbd8:	bne	2cc0c <main@@Base+0x169cc>
   2cbdc:	b	2cdc0 <main@@Base+0x16b80>
   2cbe0:	bne	2cbf4 <main@@Base+0x169b4>
   2cbe4:	mov	r2, r1
   2cbe8:	ldrb	r0, [r2, #1]!
   2cbec:	cmp	r0, #32
   2cbf0:	bhi	2cc04 <main@@Base+0x169c4>
   2cbf4:	mov	r0, r9
   2cbf8:	mov	r2, r8
   2cbfc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2cc00:	mov	r2, r0
   2cc04:	cmp	r2, r8
   2cc08:	beq	2cdc0 <main@@Base+0x16b80>
   2cc0c:	ldrb	r0, [r2]
   2cc10:	cmp	r0, #44	; 0x2c
   2cc14:	bne	2cdc8 <main@@Base+0x16b88>
   2cc18:	add	r1, r2, #1
   2cc1c:	sub	r0, r8, r1
   2cc20:	cmp	r0, #2
   2cc24:	blt	2cc54 <main@@Base+0x16a14>
   2cc28:	ldrb	r0, [r1]
   2cc2c:	cmp	r0, #32
   2cc30:	bls	2cc44 <main@@Base+0x16a04>
   2cc34:	mov	r2, r1
   2cc38:	cmp	r2, r8
   2cc3c:	bne	2cc6c <main@@Base+0x16a2c>
   2cc40:	b	2cdf4 <main@@Base+0x16bb4>
   2cc44:	bne	2cc54 <main@@Base+0x16a14>
   2cc48:	ldrb	r0, [r2, #2]!
   2cc4c:	cmp	r0, #32
   2cc50:	bhi	2cc64 <main@@Base+0x16a24>
   2cc54:	mov	r0, r9
   2cc58:	mov	r2, r8
   2cc5c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2cc60:	mov	r2, r0
   2cc64:	cmp	r2, r8
   2cc68:	beq	2cdf4 <main@@Base+0x16bb4>
   2cc6c:	ldrb	r0, [r2]
   2cc70:	cmp	r0, #125	; 0x7d
   2cc74:	bne	2c92c <main@@Base+0x166ec>
   2cc78:	b	2cdd0 <main@@Base+0x16b90>
   2cc7c:	mov	r0, r9
   2cc80:	mov	r1, r5
   2cc84:	mov	r2, r8
   2cc88:	mov	r3, #4
   2cc8c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2cc90:	b	2ccb0 <main@@Base+0x16a70>
   2cc94:	bne	2cca4 <main@@Base+0x16a64>
   2cc98:	ldrb	r0, [r5, #2]!
   2cc9c:	cmp	r0, #32
   2cca0:	bhi	2ccb4 <main@@Base+0x16a74>
   2cca4:	mov	r0, r9
   2cca8:	mov	r2, r8
   2ccac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2ccb0:	mov	r5, r0
   2ccb4:	cmp	r4, r5
   2ccb8:	beq	2cba4 <main@@Base+0x16964>
   2ccbc:	mov	r4, #0
   2ccc0:	cmp	r5, r8
   2ccc4:	str	r4, [sp, #28]
   2ccc8:	str	r4, [sp, #24]
   2cccc:	strh	r4, [sp, #16]
   2ccd0:	str	r4, [sp, #20]
   2ccd4:	beq	2cd1c <main@@Base+0x16adc>
   2ccd8:	add	r0, sp, #24
   2ccdc:	mov	r1, r5
   2cce0:	mov	r2, r8
   2cce4:	add	r3, sp, #20
   2cce8:	str	r0, [sp]
   2ccec:	mov	r0, r9
   2ccf0:	bl	38410 <flatcc_json_parser_integer@@Base>
   2ccf4:	cmp	r0, r5
   2ccf8:	beq	2cd2c <main@@Base+0x16aec>
   2ccfc:	mov	r1, r0
   2cd00:	ldr	r0, [sp, #20]
   2cd04:	cmp	r0, #0
   2cd08:	beq	2cd3c <main@@Base+0x16afc>
   2cd0c:	mov	r0, r9
   2cd10:	mov	r2, r8
   2cd14:	mov	r3, #8
   2cd18:	b	2cd5c <main@@Base+0x16b1c>
   2cd1c:	mov	r1, r8
   2cd20:	cmp	r5, r1
   2cd24:	bne	2cda0 <main@@Base+0x16b60>
   2cd28:	b	2cd6c <main@@Base+0x16b2c>
   2cd2c:	mov	r1, r5
   2cd30:	cmp	r5, r1
   2cd34:	bne	2cda0 <main@@Base+0x16b60>
   2cd38:	b	2cd6c <main@@Base+0x16b2c>
   2cd3c:	ldr	r0, [sp, #24]
   2cd40:	ldr	r2, [sp, #28]
   2cd44:	subs	r3, r0, #65536	; 0x10000
   2cd48:	sbcs	r2, r2, #0
   2cd4c:	bcc	2cdac <main@@Base+0x16b6c>
   2cd50:	mov	r0, r9
   2cd54:	mov	r2, r8
   2cd58:	mov	r3, #7
   2cd5c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2cd60:	mov	r1, r0
   2cd64:	cmp	r5, r1
   2cd68:	bne	2cda0 <main@@Base+0x16b60>
   2cd6c:	add	r0, sp, #16
   2cd70:	mov	r1, r5
   2cd74:	mov	r2, r8
   2cd78:	str	r0, [sp]
   2cd7c:	mov	r0, r9
   2cd80:	ldr	r3, [pc, #1936]	; 2d518 <main@@Base+0x172d8>
   2cd84:	add	r3, pc, r3
   2cd88:	bl	2dbb4 <main@@Base+0x17974>
   2cd8c:	mov	r1, r0
   2cd90:	cmp	r0, r5
   2cd94:	cmpne	r1, r8
   2cd98:	beq	2d4fc <main@@Base+0x172bc>
   2cd9c:	ldrh	r4, [sp, #16]
   2cda0:	ldr	r0, [sp, #4]
   2cda4:	strh	r4, [r0]
   2cda8:	b	2cbb8 <main@@Base+0x16978>
   2cdac:	mov	r4, r0
   2cdb0:	strh	r0, [sp, #16]
   2cdb4:	cmp	r5, r1
   2cdb8:	bne	2cda0 <main@@Base+0x16b60>
   2cdbc:	b	2cd6c <main@@Base+0x16b2c>
   2cdc0:	mov	r1, r8
   2cdc4:	b	2c81c <main@@Base+0x165dc>
   2cdc8:	cmp	r0, #125	; 0x7d
   2cdcc:	bne	2d48c <main@@Base+0x1724c>
   2cdd0:	add	r1, r2, #1
   2cdd4:	sub	r0, r8, r1
   2cdd8:	cmp	r0, #2
   2cddc:	blt	2d4b4 <main@@Base+0x17274>
   2cde0:	ldrb	r0, [r1]
   2cde4:	cmp	r0, #32
   2cde8:	bls	2d4a0 <main@@Base+0x17260>
   2cdec:	mov	r4, r1
   2cdf0:	b	2c7f0 <main@@Base+0x165b0>
   2cdf4:	mov	r0, r9
   2cdf8:	mov	r1, r8
   2cdfc:	b	2d494 <main@@Base+0x17254>
   2ce00:	bne	2ce10 <main@@Base+0x16bd0>
   2ce04:	ldrb	r0, [r4, #2]!
   2ce08:	cmp	r0, #32
   2ce0c:	bhi	2ce20 <main@@Base+0x16be0>
   2ce10:	mov	r0, r9
   2ce14:	mov	r2, r8
   2ce18:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2ce1c:	mov	r4, r0
   2ce20:	cmp	r4, r8
   2ce24:	mov	r2, r8
   2ce28:	beq	2ce6c <main@@Base+0x16c2c>
   2ce2c:	ldrb	r0, [r4]
   2ce30:	cmp	r0, #125	; 0x7d
   2ce34:	bne	2ce68 <main@@Base+0x16c28>
   2ce38:	add	r1, r4, #1
   2ce3c:	sub	r0, r8, r1
   2ce40:	cmp	r0, #2
   2ce44:	blt	2d4ec <main@@Base+0x172ac>
   2ce48:	ldrb	r0, [r1]
   2ce4c:	cmp	r0, #32
   2ce50:	bhi	2d478 <main@@Base+0x17238>
   2ce54:	bne	2d4ec <main@@Base+0x172ac>
   2ce58:	ldrb	r0, [r4, #2]!
   2ce5c:	cmp	r0, #32
   2ce60:	bhi	2c83c <main@@Base+0x165fc>
   2ce64:	b	2d4ec <main@@Base+0x172ac>
   2ce68:	mov	r2, r4
   2ce6c:	str	r7, [sp, #8]
   2ce70:	cmp	r2, r8
   2ce74:	mov	r1, r8
   2ce78:	beq	2cec4 <main@@Base+0x16c84>
   2ce7c:	ldrb	r0, [r2]
   2ce80:	cmp	r0, #46	; 0x2e
   2ce84:	beq	2ce9c <main@@Base+0x16c5c>
   2ce88:	cmp	r0, #34	; 0x22
   2ce8c:	bne	2ceb8 <main@@Base+0x16c78>
   2ce90:	mov	r0, #0
   2ce94:	add	r1, r2, #1
   2ce98:	b	2cec0 <main@@Base+0x16c80>
   2ce9c:	mov	r1, r2
   2cea0:	mov	r0, r9
   2cea4:	mov	r2, r8
   2cea8:	mov	r3, #5
   2ceac:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2ceb0:	mov	r1, r0
   2ceb4:	b	2cec4 <main@@Base+0x16c84>
   2ceb8:	mov	r0, #1
   2cebc:	mov	r1, r2
   2cec0:	str	r0, [r9, #12]
   2cec4:	sub	r0, r8, r1
   2cec8:	mov	r2, #8
   2cecc:	cmp	r0, #8
   2ced0:	movcs	r0, r2
   2ced4:	and	r0, r0, #15
   2ced8:	sub	r2, r0, #1
   2cedc:	cmp	r2, #7
   2cee0:	bhi	2d110 <main@@Base+0x16ed0>
   2cee4:	add	r0, pc, #36	; 0x24
   2cee8:	mov	lr, #0
   2ceec:	mov	ip, #0
   2cef0:	mov	r4, #0
   2cef4:	mov	r3, #0
   2cef8:	mov	r6, #0
   2cefc:	mov	r5, #0
   2cf00:	mov	r7, #0
   2cf04:	ldr	sl, [r0, r2, lsl #2]
   2cf08:	mov	r2, #0
   2cf0c:	add	pc, r0, sl
   2cf10:	andeq	r0, r0, r4, rrx
   2cf14:	andeq	r0, r0, ip, asr r0
   2cf18:	andeq	r0, r0, r4, asr r0
   2cf1c:	andeq	r0, r0, ip, asr #32
   2cf20:	andeq	r0, r0, r0, asr #32
   2cf24:	andeq	r0, r0, r4, lsr r0
   2cf28:	andeq	r0, r0, r4, lsr #32
   2cf2c:	andeq	r0, r0, r0, lsr #32
   2cf30:	ldrb	ip, [r1, #7]
   2cf34:	ldrb	r0, [r1, #6]
   2cf38:	mov	r2, lr
   2cf3c:	orr	r0, ip, r0, lsl #8
   2cf40:	mov	lr, r0
   2cf44:	ldrb	r0, [r1, #5]
   2cf48:	mov	r4, r2
   2cf4c:	orr	lr, lr, r0, lsl #16
   2cf50:	ldrb	r0, [r1, #4]
   2cf54:	mov	r3, r4
   2cf58:	orr	lr, lr, r0, lsl #24
   2cf5c:	ldrb	r0, [r1, #3]
   2cf60:	orr	r6, r0, r3
   2cf64:	ldrb	r0, [r1, #2]
   2cf68:	orr	r5, r6, r0, lsl #8
   2cf6c:	ldrb	r0, [r1, #1]
   2cf70:	orr	r7, r5, r0, lsl #16
   2cf74:	ldrb	r2, [r1]
   2cf78:	movw	r0, #24948	; 0x6174
   2cf7c:	movw	r3, #28530	; 0x6f72
   2cf80:	movt	r0, #25695	; 0x645f
   2cf84:	movt	r3, #29559	; 0x7377
   2cf88:	eor	r0, lr, r0
   2cf8c:	orr	r2, r7, r2, lsl #24
   2cf90:	eor	r2, r2, r3
   2cf94:	orrs	r0, r0, r2
   2cf98:	bne	2d110 <main@@Base+0x16ed0>
   2cf9c:	add	lr, r1, #8
   2cfa0:	mov	r2, #8
   2cfa4:	sub	r0, r8, lr
   2cfa8:	cmp	r0, #8
   2cfac:	movcs	r0, r2
   2cfb0:	and	r0, r0, #15
   2cfb4:	sub	r2, r0, #1
   2cfb8:	cmp	r2, #7
   2cfbc:	bhi	2d118 <main@@Base+0x16ed8>
   2cfc0:	add	r0, pc, #40	; 0x28
   2cfc4:	mov	sl, #0
   2cfc8:	mov	r3, #0
   2cfcc:	mov	r4, #0
   2cfd0:	mov	r6, #0
   2cfd4:	mov	r5, #0
   2cfd8:	mov	r7, #0
   2cfdc:	ldr	ip, [r0, r2, lsl #2]
   2cfe0:	mov	r2, #0
   2cfe4:	str	r2, [sp, #4]
   2cfe8:	mov	r2, #0
   2cfec:	add	pc, r0, ip
   2cff0:	andeq	r0, r0, ip, rrx
   2cff4:	andeq	r0, r0, r4, rrx
   2cff8:	andeq	r0, r0, ip, asr r0
   2cffc:	andeq	r0, r0, r4, asr r0
   2d000:	andeq	r0, r0, r8, asr #32
   2d004:	andeq	r0, r0, ip, lsr r0
   2d008:	andeq	r0, r0, r8, lsr #32
   2d00c:	andeq	r0, r0, r0, lsr #32
   2d010:	ldrb	r0, [r1, #15]
   2d014:	str	r0, [sp, #4]
   2d018:	ldrb	r0, [r1, #14]
   2d01c:	ldr	r2, [sp, #4]
   2d020:	orr	r0, r2, r0, lsl #8
   2d024:	mov	r2, sl
   2d028:	mov	sl, r0
   2d02c:	ldrb	r0, [r1, #13]
   2d030:	mov	r3, r2
   2d034:	orr	sl, sl, r0, lsl #16
   2d038:	ldrb	r0, [r1, #12]
   2d03c:	mov	r4, r3
   2d040:	orr	sl, sl, r0, lsl #24
   2d044:	ldrb	r0, [r1, #11]
   2d048:	orr	r6, r0, r4
   2d04c:	ldrb	r0, [r1, #10]
   2d050:	orr	r5, r6, r0, lsl #8
   2d054:	ldrb	r0, [r1, #9]
   2d058:	orr	r7, r5, r0, lsl #16
   2d05c:	ldrb	r2, [lr]
   2d060:	movw	r0, #24941	; 0x616d
   2d064:	movw	r3, #25451	; 0x636b
   2d068:	movt	r0, #24420	; 0x5f64
   2d06c:	movt	r3, #29793	; 0x7461
   2d070:	eor	r0, sl, r0
   2d074:	orr	r2, r7, r2, lsl #24
   2d078:	eor	r2, r2, r3
   2d07c:	orrs	r0, r0, r2
   2d080:	bne	2d118 <main@@Base+0x16ed8>
   2d084:	add	r4, r1, #16
   2d088:	mov	r2, #8
   2d08c:	sub	r0, r8, r4
   2d090:	cmp	r0, #8
   2d094:	movcc	r2, r0
   2d098:	and	r3, r2, #15
   2d09c:	sub	r2, r3, #3
   2d0a0:	cmp	r2, #6
   2d0a4:	bcs	2d1f8 <main@@Base+0x16fb8>
   2d0a8:	ldrb	r2, [r1, #18]
   2d0ac:	ldr	r7, [sp, #8]
   2d0b0:	lsl	r2, r2, #8
   2d0b4:	ldrb	r3, [r1, #17]
   2d0b8:	orr	r2, r2, r3, lsl #16
   2d0bc:	ldrb	r3, [r4]
   2d0c0:	bic	r2, r2, #255	; 0xff
   2d0c4:	orr	r2, r2, r3, lsl #24
   2d0c8:	movw	r3, #25856	; 0x6500
   2d0cc:	movt	r3, #24935	; 0x6167
   2d0d0:	teq	r2, r3
   2d0d4:	bne	2d2ac <main@@Base+0x1706c>
   2d0d8:	cmp	r0, #4
   2d0dc:	blt	2d2ac <main@@Base+0x1706c>
   2d0e0:	mov	r2, r1
   2d0e4:	ldr	r3, [r9, #12]
   2d0e8:	ldrb	r0, [r2, #19]!
   2d0ec:	cmp	r3, #0
   2d0f0:	beq	2d214 <main@@Base+0x16fd4>
   2d0f4:	cmp	r0, #33	; 0x21
   2d0f8:	bcc	2d104 <main@@Base+0x16ec4>
   2d0fc:	cmp	r0, #58	; 0x3a
   2d100:	bne	2d2ac <main@@Base+0x1706c>
   2d104:	mov	r0, #0
   2d108:	str	r0, [r9, #12]
   2d10c:	b	2d220 <main@@Base+0x16fe0>
   2d110:	mov	r0, r9
   2d114:	b	2d120 <main@@Base+0x16ee0>
   2d118:	mov	r0, r9
   2d11c:	mov	r1, lr
   2d120:	mov	r2, r8
   2d124:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2d128:	ldr	r7, [sp, #8]
   2d12c:	mov	r4, r0
   2d130:	sub	r0, r8, r4
   2d134:	cmp	r0, #2
   2d138:	blt	2d16c <main@@Base+0x16f2c>
   2d13c:	ldrb	r0, [r4]
   2d140:	cmp	r0, #32
   2d144:	bls	2d158 <main@@Base+0x16f18>
   2d148:	mov	r2, r4
   2d14c:	cmp	r2, r8
   2d150:	bne	2d188 <main@@Base+0x16f48>
   2d154:	b	2d44c <main@@Base+0x1720c>
   2d158:	bne	2d16c <main@@Base+0x16f2c>
   2d15c:	mov	r2, r4
   2d160:	ldrb	r0, [r2, #1]!
   2d164:	cmp	r0, #32
   2d168:	bhi	2d180 <main@@Base+0x16f40>
   2d16c:	mov	r0, r9
   2d170:	mov	r1, r4
   2d174:	mov	r2, r8
   2d178:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d17c:	mov	r2, r0
   2d180:	cmp	r2, r8
   2d184:	beq	2d44c <main@@Base+0x1720c>
   2d188:	ldrb	r0, [r2]
   2d18c:	cmp	r0, #44	; 0x2c
   2d190:	bne	2d454 <main@@Base+0x17214>
   2d194:	add	r1, r2, #1
   2d198:	sub	r0, r8, r1
   2d19c:	cmp	r0, #2
   2d1a0:	blt	2d1d0 <main@@Base+0x16f90>
   2d1a4:	ldrb	r0, [r1]
   2d1a8:	cmp	r0, #32
   2d1ac:	bls	2d1c0 <main@@Base+0x16f80>
   2d1b0:	mov	r2, r1
   2d1b4:	cmp	r2, r8
   2d1b8:	bne	2d1e8 <main@@Base+0x16fa8>
   2d1bc:	b	2d480 <main@@Base+0x17240>
   2d1c0:	bne	2d1d0 <main@@Base+0x16f90>
   2d1c4:	ldrb	r0, [r2, #2]!
   2d1c8:	cmp	r0, #32
   2d1cc:	bhi	2d1e0 <main@@Base+0x16fa0>
   2d1d0:	mov	r0, r9
   2d1d4:	mov	r2, r8
   2d1d8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d1dc:	mov	r2, r0
   2d1e0:	cmp	r2, r8
   2d1e4:	beq	2d480 <main@@Base+0x17240>
   2d1e8:	ldrb	r0, [r2]
   2d1ec:	cmp	r0, #125	; 0x7d
   2d1f0:	bne	2ce70 <main@@Base+0x16c30>
   2d1f4:	b	2d45c <main@@Base+0x1721c>
   2d1f8:	ldr	r7, [sp, #8]
   2d1fc:	mov	r2, #0
   2d200:	cmp	r3, #1
   2d204:	beq	2d0bc <main@@Base+0x16e7c>
   2d208:	cmp	r3, #2
   2d20c:	beq	2d0b4 <main@@Base+0x16e74>
   2d210:	b	2d2ac <main@@Base+0x1706c>
   2d214:	cmp	r0, #34	; 0x22
   2d218:	bne	2d2ac <main@@Base+0x1706c>
   2d21c:	add	r2, r1, #20
   2d220:	sub	r0, r8, r2
   2d224:	cmp	r0, #2
   2d228:	blt	2d25c <main@@Base+0x1701c>
   2d22c:	ldrb	r0, [r2]
   2d230:	cmp	r0, #32
   2d234:	bls	2d248 <main@@Base+0x17008>
   2d238:	mov	r6, r2
   2d23c:	cmp	r6, r8
   2d240:	bne	2d278 <main@@Base+0x17038>
   2d244:	b	2d2c0 <main@@Base+0x17080>
   2d248:	bne	2d25c <main@@Base+0x1701c>
   2d24c:	mov	r6, r2
   2d250:	ldrb	r0, [r6, #1]!
   2d254:	cmp	r0, #32
   2d258:	bhi	2d270 <main@@Base+0x17030>
   2d25c:	mov	r1, r2
   2d260:	mov	r0, r9
   2d264:	mov	r2, r8
   2d268:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d26c:	mov	r6, r0
   2d270:	cmp	r6, r8
   2d274:	beq	2d2c0 <main@@Base+0x17080>
   2d278:	ldrb	r0, [r6]
   2d27c:	cmp	r0, #58	; 0x3a
   2d280:	bne	2d2c0 <main@@Base+0x17080>
   2d284:	add	r1, r6, #1
   2d288:	sub	r0, r8, r1
   2d28c:	cmp	r0, #2
   2d290:	blt	2d2e8 <main@@Base+0x170a8>
   2d294:	ldrb	r0, [r1]
   2d298:	cmp	r0, #32
   2d29c:	bls	2d2d8 <main@@Base+0x17098>
   2d2a0:	mov	r6, r1
   2d2a4:	cmp	r4, r6
   2d2a8:	bne	2d300 <main@@Base+0x170c0>
   2d2ac:	mov	r0, r9
   2d2b0:	mov	r1, r4
   2d2b4:	mov	r2, r8
   2d2b8:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2d2bc:	b	2d12c <main@@Base+0x16eec>
   2d2c0:	mov	r0, r9
   2d2c4:	mov	r1, r6
   2d2c8:	mov	r2, r8
   2d2cc:	mov	r3, #4
   2d2d0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2d2d4:	b	2d2f4 <main@@Base+0x170b4>
   2d2d8:	bne	2d2e8 <main@@Base+0x170a8>
   2d2dc:	ldrb	r0, [r6, #2]!
   2d2e0:	cmp	r0, #32
   2d2e4:	bhi	2d2f8 <main@@Base+0x170b8>
   2d2e8:	mov	r0, r9
   2d2ec:	mov	r2, r8
   2d2f0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d2f4:	mov	r6, r0
   2d2f8:	cmp	r4, r6
   2d2fc:	beq	2d2ac <main@@Base+0x1706c>
   2d300:	mov	r5, #0
   2d304:	cmp	r6, r8
   2d308:	str	r5, [sp, #28]
   2d30c:	str	r5, [sp, #24]
   2d310:	str	r5, [sp, #16]
   2d314:	str	r5, [sp, #20]
   2d318:	beq	2d378 <main@@Base+0x17138>
   2d31c:	add	r0, sp, #24
   2d320:	mov	r1, r6
   2d324:	mov	r2, r8
   2d328:	add	r3, sp, #20
   2d32c:	str	r0, [sp]
   2d330:	mov	r0, r9
   2d334:	bl	38410 <flatcc_json_parser_integer@@Base>
   2d338:	cmp	r0, r6
   2d33c:	beq	2d388 <main@@Base+0x17148>
   2d340:	ldr	r2, [sp, #20]
   2d344:	mov	r4, r0
   2d348:	ldr	r0, [sp, #24]
   2d34c:	ldr	r1, [sp, #28]
   2d350:	cmp	r2, #0
   2d354:	beq	2d398 <main@@Base+0x17158>
   2d358:	subs	r2, r0, #-2147483647	; 0x80000001
   2d35c:	sbcs	r1, r1, #0
   2d360:	bcc	2d3c8 <main@@Base+0x17188>
   2d364:	mov	r0, r9
   2d368:	mov	r1, r4
   2d36c:	mov	r2, r8
   2d370:	mov	r3, #8
   2d374:	b	2d3b4 <main@@Base+0x17174>
   2d378:	mov	r4, r8
   2d37c:	cmp	r6, r4
   2d380:	bne	2d414 <main@@Base+0x171d4>
   2d384:	b	2d3e0 <main@@Base+0x171a0>
   2d388:	mov	r4, r6
   2d38c:	cmp	r6, r4
   2d390:	bne	2d414 <main@@Base+0x171d4>
   2d394:	b	2d3e0 <main@@Base+0x171a0>
   2d398:	subs	r2, r0, #-2147483648	; 0x80000000
   2d39c:	sbcs	r1, r1, #0
   2d3a0:	bcc	2d3d0 <main@@Base+0x17190>
   2d3a4:	mov	r0, r9
   2d3a8:	mov	r1, r4
   2d3ac:	mov	r2, r8
   2d3b0:	mov	r3, #7
   2d3b4:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2d3b8:	mov	r4, r0
   2d3bc:	cmp	r6, r4
   2d3c0:	bne	2d414 <main@@Base+0x171d4>
   2d3c4:	b	2d3e0 <main@@Base+0x171a0>
   2d3c8:	rsb	r5, r0, #0
   2d3cc:	b	2d3d4 <main@@Base+0x17194>
   2d3d0:	mov	r5, r0
   2d3d4:	str	r5, [sp, #16]
   2d3d8:	cmp	r6, r4
   2d3dc:	bne	2d414 <main@@Base+0x171d4>
   2d3e0:	add	r0, sp, #16
   2d3e4:	mov	r1, r6
   2d3e8:	mov	r2, r8
   2d3ec:	str	r0, [sp]
   2d3f0:	mov	r0, r9
   2d3f4:	ldr	r3, [pc, #280]	; 2d514 <main@@Base+0x172d4>
   2d3f8:	add	r3, pc, r3
   2d3fc:	bl	259fc <main@@Base+0xf7bc>
   2d400:	mov	r4, r0
   2d404:	cmp	r0, r6
   2d408:	cmpne	r4, r8
   2d40c:	beq	2d50c <main@@Base+0x172cc>
   2d410:	ldr	r5, [sp, #16]
   2d414:	cmp	r5, #0
   2d418:	bne	2d428 <main@@Base+0x171e8>
   2d41c:	ldrb	r0, [r9, #8]
   2d420:	tst	r0, #2
   2d424:	beq	2d130 <main@@Base+0x16ef0>
   2d428:	ldr	r0, [r9]
   2d42c:	mov	r1, #0
   2d430:	mov	r2, #4
   2d434:	mov	r3, #4
   2d438:	bl	32964 <flatcc_builder_table_add@@Base>
   2d43c:	cmp	r0, #0
   2d440:	beq	2d50c <main@@Base+0x172cc>
   2d444:	str	r5, [r0]
   2d448:	b	2d130 <main@@Base+0x16ef0>
   2d44c:	mov	r4, r8
   2d450:	b	2c83c <main@@Base+0x165fc>
   2d454:	cmp	r0, #125	; 0x7d
   2d458:	bne	2d4c4 <main@@Base+0x17284>
   2d45c:	add	r1, r2, #1
   2d460:	sub	r0, r8, r1
   2d464:	cmp	r0, #2
   2d468:	blt	2d4ec <main@@Base+0x172ac>
   2d46c:	ldrb	r0, [r1]
   2d470:	cmp	r0, #32
   2d474:	bls	2d4d8 <main@@Base+0x17298>
   2d478:	mov	r4, r1
   2d47c:	b	2c83c <main@@Base+0x165fc>
   2d480:	mov	r0, r9
   2d484:	mov	r1, r8
   2d488:	b	2d4cc <main@@Base+0x1728c>
   2d48c:	mov	r0, r9
   2d490:	mov	r1, r2
   2d494:	mov	r2, r8
   2d498:	mov	r3, #10
   2d49c:	b	2c7e8 <main@@Base+0x165a8>
   2d4a0:	bne	2d4b4 <main@@Base+0x17274>
   2d4a4:	ldrb	r0, [r2, #2]!
   2d4a8:	cmp	r0, #32
   2d4ac:	mov	r4, r2
   2d4b0:	bhi	2c7f0 <main@@Base+0x165b0>
   2d4b4:	mov	r0, r9
   2d4b8:	mov	r2, r8
   2d4bc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d4c0:	b	2c7ec <main@@Base+0x165ac>
   2d4c4:	mov	r0, r9
   2d4c8:	mov	r1, r2
   2d4cc:	mov	r2, r8
   2d4d0:	mov	r3, #10
   2d4d4:	b	2c834 <main@@Base+0x165f4>
   2d4d8:	bne	2d4ec <main@@Base+0x172ac>
   2d4dc:	ldrb	r0, [r2, #2]!
   2d4e0:	cmp	r0, #32
   2d4e4:	mov	r4, r2
   2d4e8:	bhi	2c83c <main@@Base+0x165fc>
   2d4ec:	mov	r0, r9
   2d4f0:	mov	r2, r8
   2d4f4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d4f8:	b	2c838 <main@@Base+0x165f8>
   2d4fc:	mov	r0, r9
   2d500:	mov	r2, r8
   2d504:	mov	r3, #33	; 0x21
   2d508:	b	2c7e8 <main@@Base+0x165a8>
   2d50c:	ldr	r7, [sp, #8]
   2d510:	b	2c848 <main@@Base+0x16608>
   2d514:	andeq	r1, r3, r4, lsl #30
   2d518:	andeq	r2, r3, r4, lsl #11
   2d51c:	add	r0, r0, #1
   2d520:	uxtb	r1, r0
   2d524:	cmp	r1, #12
   2d528:	movhi	r0, #0
   2d52c:	bxhi	lr
   2d530:	ldr	r1, [pc, #12]	; 2d544 <main@@Base+0x17304>
   2d534:	sxtb	r0, r0
   2d538:	add	r1, pc, r1
   2d53c:	ldr	r0, [r1, r0, lsl #2]
   2d540:	bx	lr
   2d544:	andeq	sp, r1, r0, ror sp
   2d548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d54c:	add	fp, sp, #28
   2d550:	sub	sp, sp, #36	; 0x24
   2d554:	mov	r9, r0
   2d558:	mov	r0, #0
   2d55c:	mov	sl, r2
   2d560:	mov	r6, r1
   2d564:	mov	r1, #4
   2d568:	mov	r2, #4
   2d56c:	str	r3, [sp, #12]
   2d570:	str	r0, [r3]
   2d574:	ldr	r0, [r9]
   2d578:	bl	30224 <flatcc_builder_start_struct@@Base>
   2d57c:	cmp	r0, #0
   2d580:	beq	2d604 <main@@Base+0x173c4>
   2d584:	cmp	r6, sl
   2d588:	beq	2d5c0 <main@@Base+0x17380>
   2d58c:	ldrb	r1, [r6]
   2d590:	cmp	r1, #123	; 0x7b
   2d594:	bne	2d5c0 <main@@Base+0x17380>
   2d598:	add	r1, r6, #1
   2d59c:	str	r0, [sp, #8]
   2d5a0:	sub	r0, sl, r1
   2d5a4:	cmp	r0, #2
   2d5a8:	blt	2d638 <main@@Base+0x173f8>
   2d5ac:	ldrb	r0, [r1]
   2d5b0:	cmp	r0, #32
   2d5b4:	bls	2d628 <main@@Base+0x173e8>
   2d5b8:	mov	r6, r1
   2d5bc:	b	2d648 <main@@Base+0x17408>
   2d5c0:	mov	r0, r9
   2d5c4:	mov	r1, r6
   2d5c8:	mov	r2, sl
   2d5cc:	mov	r3, #21
   2d5d0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2d5d4:	mov	r6, r0
   2d5d8:	cmp	r6, sl
   2d5dc:	mov	r1, sl
   2d5e0:	beq	2d608 <main@@Base+0x173c8>
   2d5e4:	ldr	r0, [r9]
   2d5e8:	bl	3030c <flatcc_builder_end_struct@@Base>
   2d5ec:	ldr	r1, [sp, #12]
   2d5f0:	cmp	r0, #0
   2d5f4:	str	r0, [r1]
   2d5f8:	mov	r1, r6
   2d5fc:	bne	2d61c <main@@Base+0x173dc>
   2d600:	b	2d608 <main@@Base+0x173c8>
   2d604:	mov	r1, r6
   2d608:	mov	r0, r9
   2d60c:	mov	r2, sl
   2d610:	mov	r3, #33	; 0x21
   2d614:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2d618:	mov	r6, r0
   2d61c:	mov	r0, r6
   2d620:	sub	sp, fp, #28
   2d624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d628:	bne	2d638 <main@@Base+0x173f8>
   2d62c:	ldrb	r0, [r6, #2]!
   2d630:	cmp	r0, #32
   2d634:	bhi	2d648 <main@@Base+0x17408>
   2d638:	mov	r0, r9
   2d63c:	mov	r2, sl
   2d640:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d644:	mov	r6, r0
   2d648:	cmp	r6, sl
   2d64c:	mov	r2, sl
   2d650:	beq	2d694 <main@@Base+0x17454>
   2d654:	ldrb	r0, [r6]
   2d658:	cmp	r0, #125	; 0x7d
   2d65c:	bne	2d690 <main@@Base+0x17450>
   2d660:	add	r1, r6, #1
   2d664:	sub	r0, sl, r1
   2d668:	cmp	r0, #2
   2d66c:	blt	2db90 <main@@Base+0x17950>
   2d670:	ldrb	r0, [r1]
   2d674:	cmp	r0, #32
   2d678:	bhi	2db54 <main@@Base+0x17914>
   2d67c:	bne	2db90 <main@@Base+0x17950>
   2d680:	ldrb	r0, [r6, #2]!
   2d684:	cmp	r0, #32
   2d688:	bhi	2d5d8 <main@@Base+0x17398>
   2d68c:	b	2db90 <main@@Base+0x17950>
   2d690:	mov	r2, r6
   2d694:	cmp	r2, sl
   2d698:	mov	r1, sl
   2d69c:	beq	2d6e8 <main@@Base+0x174a8>
   2d6a0:	ldrb	r0, [r2]
   2d6a4:	cmp	r0, #46	; 0x2e
   2d6a8:	beq	2d6c0 <main@@Base+0x17480>
   2d6ac:	cmp	r0, #34	; 0x22
   2d6b0:	bne	2d6dc <main@@Base+0x1749c>
   2d6b4:	mov	r0, #0
   2d6b8:	add	r1, r2, #1
   2d6bc:	b	2d6e4 <main@@Base+0x174a4>
   2d6c0:	mov	r1, r2
   2d6c4:	mov	r0, r9
   2d6c8:	mov	r2, sl
   2d6cc:	mov	r3, #5
   2d6d0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2d6d4:	mov	r1, r0
   2d6d8:	b	2d6e8 <main@@Base+0x174a8>
   2d6dc:	mov	r0, #1
   2d6e0:	mov	r1, r2
   2d6e4:	str	r0, [r9, #12]
   2d6e8:	sub	r0, sl, r1
   2d6ec:	mov	r2, #8
   2d6f0:	cmp	r0, #8
   2d6f4:	movcs	r0, r2
   2d6f8:	and	r0, r0, #15
   2d6fc:	sub	r2, r0, #1
   2d700:	cmp	r2, #7
   2d704:	bhi	2d844 <main@@Base+0x17604>
   2d708:	add	r5, pc, #36	; 0x24
   2d70c:	mov	r8, #0
   2d710:	mov	ip, #0
   2d714:	mov	lr, #0
   2d718:	mov	r6, #0
   2d71c:	mov	r3, #0
   2d720:	mov	r7, #0
   2d724:	mov	r4, #0
   2d728:	ldr	r0, [r5, r2, lsl #2]
   2d72c:	mov	r2, #0
   2d730:	add	pc, r5, r0
   2d734:	andeq	r0, r0, r4, rrx
   2d738:	andeq	r0, r0, ip, asr r0
   2d73c:	andeq	r0, r0, r4, asr r0
   2d740:	andeq	r0, r0, ip, asr #32
   2d744:	andeq	r0, r0, r0, asr #32
   2d748:	andeq	r0, r0, r4, lsr r0
   2d74c:	andeq	r0, r0, r4, lsr #32
   2d750:	andeq	r0, r0, r0, lsr #32
   2d754:	ldrb	ip, [r1, #7]
   2d758:	ldrb	r0, [r1, #6]
   2d75c:	mov	lr, r8
   2d760:	orr	r0, ip, r0, lsl #8
   2d764:	mov	r8, r0
   2d768:	ldrb	r0, [r1, #5]
   2d76c:	mov	r6, lr
   2d770:	orr	r8, r8, r0, lsl #16
   2d774:	ldrb	r0, [r1, #4]
   2d778:	mov	r3, r6
   2d77c:	orr	r8, r8, r0, lsl #24
   2d780:	ldrb	r0, [r1, #3]
   2d784:	orr	r7, r0, r3
   2d788:	ldrb	r0, [r1, #2]
   2d78c:	orr	r4, r7, r0, lsl #8
   2d790:	ldrb	r0, [r1, #1]
   2d794:	orr	r2, r4, r0, lsl #16
   2d798:	ldrb	r3, [r1]
   2d79c:	movw	r0, #29285	; 0x7265
   2d7a0:	movt	r0, #29535	; 0x735f
   2d7a4:	eor	r0, r8, r0
   2d7a8:	orr	r2, r2, r3, lsl #24
   2d7ac:	movw	r3, #28523	; 0x6f6b
   2d7b0:	movt	r3, #25199	; 0x626f
   2d7b4:	eor	r2, r2, r3
   2d7b8:	orrs	r0, r0, r2
   2d7bc:	bne	2d844 <main@@Base+0x17604>
   2d7c0:	add	r8, r1, #8
   2d7c4:	mov	r2, #8
   2d7c8:	sub	r0, sl, r8
   2d7cc:	cmp	r0, #8
   2d7d0:	movcc	r2, r0
   2d7d4:	and	r3, r2, #15
   2d7d8:	sub	r2, r3, #2
   2d7dc:	cmp	r2, #7
   2d7e0:	bcs	2d84c <main@@Base+0x1760c>
   2d7e4:	ldrb	r2, [r1, #9]
   2d7e8:	lsl	r3, r2, #16
   2d7ec:	mov	r2, #0
   2d7f0:	ldrb	r7, [r8]
   2d7f4:	orr	r3, r3, r7, lsl #24
   2d7f8:	movw	r7, #0
   2d7fc:	movt	r7, #24932	; 0x6164
   2d800:	eor	r3, r3, r7
   2d804:	orrs	r2, r2, r3
   2d808:	bne	2d8f8 <main@@Base+0x176b8>
   2d80c:	cmp	r0, #3
   2d810:	blt	2d8f8 <main@@Base+0x176b8>
   2d814:	mov	r2, r1
   2d818:	ldr	r3, [r9, #12]
   2d81c:	ldrb	r0, [r2, #10]!
   2d820:	cmp	r3, #0
   2d824:	beq	2d860 <main@@Base+0x17620>
   2d828:	cmp	r0, #33	; 0x21
   2d82c:	bcc	2d838 <main@@Base+0x175f8>
   2d830:	cmp	r0, #58	; 0x3a
   2d834:	bne	2d8f8 <main@@Base+0x176b8>
   2d838:	mov	r0, #0
   2d83c:	str	r0, [r9, #12]
   2d840:	b	2d86c <main@@Base+0x1762c>
   2d844:	mov	r0, r9
   2d848:	b	2d900 <main@@Base+0x176c0>
   2d84c:	cmp	r3, #1
   2d850:	mov	r2, #0
   2d854:	mov	r3, #0
   2d858:	beq	2d7f0 <main@@Base+0x175b0>
   2d85c:	b	2d8f8 <main@@Base+0x176b8>
   2d860:	cmp	r0, #34	; 0x22
   2d864:	bne	2d8f8 <main@@Base+0x176b8>
   2d868:	add	r2, r1, #11
   2d86c:	sub	r0, sl, r2
   2d870:	cmp	r0, #2
   2d874:	blt	2d8a8 <main@@Base+0x17668>
   2d878:	ldrb	r0, [r2]
   2d87c:	cmp	r0, #32
   2d880:	bls	2d894 <main@@Base+0x17654>
   2d884:	mov	r7, r2
   2d888:	cmp	r7, sl
   2d88c:	bne	2d8c4 <main@@Base+0x17684>
   2d890:	b	2d9d0 <main@@Base+0x17790>
   2d894:	bne	2d8a8 <main@@Base+0x17668>
   2d898:	mov	r7, r2
   2d89c:	ldrb	r0, [r7, #1]!
   2d8a0:	cmp	r0, #32
   2d8a4:	bhi	2d8bc <main@@Base+0x1767c>
   2d8a8:	mov	r1, r2
   2d8ac:	mov	r0, r9
   2d8b0:	mov	r2, sl
   2d8b4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d8b8:	mov	r7, r0
   2d8bc:	cmp	r7, sl
   2d8c0:	beq	2d9d0 <main@@Base+0x17790>
   2d8c4:	ldrb	r0, [r7]
   2d8c8:	cmp	r0, #58	; 0x3a
   2d8cc:	bne	2d9d0 <main@@Base+0x17790>
   2d8d0:	add	r1, r7, #1
   2d8d4:	sub	r0, sl, r1
   2d8d8:	cmp	r0, #2
   2d8dc:	blt	2d9f8 <main@@Base+0x177b8>
   2d8e0:	ldrb	r0, [r1]
   2d8e4:	cmp	r0, #32
   2d8e8:	bls	2d9e8 <main@@Base+0x177a8>
   2d8ec:	mov	r7, r1
   2d8f0:	cmp	r8, r7
   2d8f4:	bne	2da10 <main@@Base+0x177d0>
   2d8f8:	mov	r0, r9
   2d8fc:	mov	r1, r8
   2d900:	mov	r2, sl
   2d904:	bl	3692c <flatcc_json_parser_unmatched_symbol@@Base>
   2d908:	mov	r1, r0
   2d90c:	sub	r0, sl, r1
   2d910:	cmp	r0, #2
   2d914:	blt	2d948 <main@@Base+0x17708>
   2d918:	ldrb	r0, [r1]
   2d91c:	cmp	r0, #32
   2d920:	bls	2d934 <main@@Base+0x176f4>
   2d924:	mov	r2, r1
   2d928:	cmp	r2, sl
   2d92c:	bne	2d960 <main@@Base+0x17720>
   2d930:	b	2db28 <main@@Base+0x178e8>
   2d934:	bne	2d948 <main@@Base+0x17708>
   2d938:	mov	r2, r1
   2d93c:	ldrb	r0, [r2, #1]!
   2d940:	cmp	r0, #32
   2d944:	bhi	2d958 <main@@Base+0x17718>
   2d948:	mov	r0, r9
   2d94c:	mov	r2, sl
   2d950:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d954:	mov	r2, r0
   2d958:	cmp	r2, sl
   2d95c:	beq	2db28 <main@@Base+0x178e8>
   2d960:	ldrb	r0, [r2]
   2d964:	cmp	r0, #44	; 0x2c
   2d968:	bne	2db30 <main@@Base+0x178f0>
   2d96c:	add	r1, r2, #1
   2d970:	sub	r0, sl, r1
   2d974:	cmp	r0, #2
   2d978:	blt	2d9a8 <main@@Base+0x17768>
   2d97c:	ldrb	r0, [r1]
   2d980:	cmp	r0, #32
   2d984:	bls	2d998 <main@@Base+0x17758>
   2d988:	mov	r2, r1
   2d98c:	cmp	r2, sl
   2d990:	bne	2d9c0 <main@@Base+0x17780>
   2d994:	b	2db5c <main@@Base+0x1791c>
   2d998:	bne	2d9a8 <main@@Base+0x17768>
   2d99c:	ldrb	r0, [r2, #2]!
   2d9a0:	cmp	r0, #32
   2d9a4:	bhi	2d9b8 <main@@Base+0x17778>
   2d9a8:	mov	r0, r9
   2d9ac:	mov	r2, sl
   2d9b0:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2d9b4:	mov	r2, r0
   2d9b8:	cmp	r2, sl
   2d9bc:	beq	2db5c <main@@Base+0x1791c>
   2d9c0:	ldrb	r0, [r2]
   2d9c4:	cmp	r0, #125	; 0x7d
   2d9c8:	bne	2d694 <main@@Base+0x17454>
   2d9cc:	b	2db38 <main@@Base+0x178f8>
   2d9d0:	mov	r0, r9
   2d9d4:	mov	r1, r7
   2d9d8:	mov	r2, sl
   2d9dc:	mov	r3, #4
   2d9e0:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2d9e4:	b	2da04 <main@@Base+0x177c4>
   2d9e8:	bne	2d9f8 <main@@Base+0x177b8>
   2d9ec:	ldrb	r0, [r7, #2]!
   2d9f0:	cmp	r0, #32
   2d9f4:	bhi	2da08 <main@@Base+0x177c8>
   2d9f8:	mov	r0, r9
   2d9fc:	mov	r2, sl
   2da00:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2da04:	mov	r7, r0
   2da08:	cmp	r8, r7
   2da0c:	beq	2d8f8 <main@@Base+0x176b8>
   2da10:	mov	r6, #0
   2da14:	cmp	r7, sl
   2da18:	str	r6, [sp, #28]
   2da1c:	str	r6, [sp, #24]
   2da20:	str	r6, [sp, #16]
   2da24:	str	r6, [sp, #20]
   2da28:	beq	2da84 <main@@Base+0x17844>
   2da2c:	add	r0, sp, #24
   2da30:	mov	r1, r7
   2da34:	mov	r2, sl
   2da38:	add	r3, sp, #20
   2da3c:	str	r0, [sp]
   2da40:	mov	r0, r9
   2da44:	bl	38410 <flatcc_json_parser_integer@@Base>
   2da48:	cmp	r0, r7
   2da4c:	beq	2da94 <main@@Base+0x17854>
   2da50:	ldr	r3, [sp, #20]
   2da54:	mov	r1, r0
   2da58:	ldr	r0, [sp, #24]
   2da5c:	ldr	r2, [sp, #28]
   2da60:	cmp	r3, #0
   2da64:	beq	2daa4 <main@@Base+0x17864>
   2da68:	subs	r3, r0, #-2147483647	; 0x80000001
   2da6c:	sbcs	r2, r2, #0
   2da70:	bcc	2dad0 <main@@Base+0x17890>
   2da74:	mov	r0, r9
   2da78:	mov	r2, sl
   2da7c:	mov	r3, #8
   2da80:	b	2dabc <main@@Base+0x1787c>
   2da84:	mov	r1, sl
   2da88:	cmp	r7, r1
   2da8c:	bne	2db1c <main@@Base+0x178dc>
   2da90:	b	2dae8 <main@@Base+0x178a8>
   2da94:	mov	r1, r7
   2da98:	cmp	r7, r1
   2da9c:	bne	2db1c <main@@Base+0x178dc>
   2daa0:	b	2dae8 <main@@Base+0x178a8>
   2daa4:	subs	r3, r0, #-2147483648	; 0x80000000
   2daa8:	sbcs	r2, r2, #0
   2daac:	bcc	2dad8 <main@@Base+0x17898>
   2dab0:	mov	r0, r9
   2dab4:	mov	r2, sl
   2dab8:	mov	r3, #7
   2dabc:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2dac0:	mov	r1, r0
   2dac4:	cmp	r7, r1
   2dac8:	bne	2db1c <main@@Base+0x178dc>
   2dacc:	b	2dae8 <main@@Base+0x178a8>
   2dad0:	rsb	r6, r0, #0
   2dad4:	b	2dadc <main@@Base+0x1789c>
   2dad8:	mov	r6, r0
   2dadc:	str	r6, [sp, #16]
   2dae0:	cmp	r7, r1
   2dae4:	bne	2db1c <main@@Base+0x178dc>
   2dae8:	add	r0, sp, #16
   2daec:	mov	r1, r7
   2daf0:	mov	r2, sl
   2daf4:	str	r0, [sp]
   2daf8:	mov	r0, r9
   2dafc:	ldr	r3, [pc, #172]	; 2dbb0 <main@@Base+0x17970>
   2db00:	add	r3, pc, r3
   2db04:	bl	259fc <main@@Base+0xf7bc>
   2db08:	mov	r1, r0
   2db0c:	cmp	r0, r7
   2db10:	cmpne	r1, sl
   2db14:	beq	2dba0 <main@@Base+0x17960>
   2db18:	ldr	r6, [sp, #16]
   2db1c:	ldr	r0, [sp, #8]
   2db20:	str	r6, [r0]
   2db24:	b	2d90c <main@@Base+0x176cc>
   2db28:	mov	r1, sl
   2db2c:	b	2d608 <main@@Base+0x173c8>
   2db30:	cmp	r0, #125	; 0x7d
   2db34:	bne	2db68 <main@@Base+0x17928>
   2db38:	add	r1, r2, #1
   2db3c:	sub	r0, sl, r1
   2db40:	cmp	r0, #2
   2db44:	blt	2db90 <main@@Base+0x17950>
   2db48:	ldrb	r0, [r1]
   2db4c:	cmp	r0, #32
   2db50:	bls	2db7c <main@@Base+0x1793c>
   2db54:	mov	r6, r1
   2db58:	b	2d5d8 <main@@Base+0x17398>
   2db5c:	mov	r0, r9
   2db60:	mov	r1, sl
   2db64:	b	2db70 <main@@Base+0x17930>
   2db68:	mov	r0, r9
   2db6c:	mov	r1, r2
   2db70:	mov	r2, sl
   2db74:	mov	r3, #10
   2db78:	b	2d5d0 <main@@Base+0x17390>
   2db7c:	bne	2db90 <main@@Base+0x17950>
   2db80:	ldrb	r0, [r2, #2]!
   2db84:	cmp	r0, #32
   2db88:	mov	r6, r2
   2db8c:	bhi	2d5d8 <main@@Base+0x17398>
   2db90:	mov	r0, r9
   2db94:	mov	r2, sl
   2db98:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2db9c:	b	2d5d4 <main@@Base+0x17394>
   2dba0:	mov	r0, r9
   2dba4:	mov	r2, sl
   2dba8:	mov	r3, #33	; 0x21
   2dbac:	b	2d5d0 <main@@Base+0x17390>
   2dbb0:	andeq	r1, r3, r4, lsl r8
   2dbb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dbb8:	add	fp, sp, #28
   2dbbc:	sub	sp, sp, #44	; 0x2c
   2dbc0:	mov	r6, r2
   2dbc4:	ldr	r2, [fp, #8]
   2dbc8:	mov	r5, r0
   2dbcc:	mov	r0, #0
   2dbd0:	mov	r8, r3
   2dbd4:	cmp	r1, r6
   2dbd8:	strh	r0, [r2]
   2dbdc:	beq	2dc20 <main@@Base+0x179e0>
   2dbe0:	ldrb	r0, [r1]
   2dbe4:	cmp	r0, #46	; 0x2e
   2dbe8:	beq	2dc00 <main@@Base+0x179c0>
   2dbec:	cmp	r0, #34	; 0x22
   2dbf0:	bne	2dc18 <main@@Base+0x179d8>
   2dbf4:	mov	r0, #0
   2dbf8:	add	r1, r1, #1
   2dbfc:	b	2dc1c <main@@Base+0x179dc>
   2dc00:	mov	r0, r5
   2dc04:	mov	r2, r6
   2dc08:	mov	r3, #5
   2dc0c:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2dc10:	mov	r1, r0
   2dc14:	b	2dc20 <main@@Base+0x179e0>
   2dc18:	mov	r0, #1
   2dc1c:	str	r0, [r5, #12]
   2dc20:	ldr	r0, [r5, #12]
   2dc24:	cmp	r0, #0
   2dc28:	beq	2dc3c <main@@Base+0x179fc>
   2dc2c:	mov	r7, r1
   2dc30:	cmp	r7, r6
   2dc34:	bne	2dc80 <main@@Base+0x17a40>
   2dc38:	b	2dd90 <main@@Base+0x17b50>
   2dc3c:	sub	r0, r6, r1
   2dc40:	cmp	r0, #2
   2dc44:	blt	2dc68 <main@@Base+0x17a28>
   2dc48:	ldrb	r0, [r1]
   2dc4c:	cmp	r0, #32
   2dc50:	bhi	2dc2c <main@@Base+0x179ec>
   2dc54:	bne	2dc68 <main@@Base+0x17a28>
   2dc58:	mov	r7, r1
   2dc5c:	ldrb	r0, [r7, #1]!
   2dc60:	cmp	r0, #32
   2dc64:	bhi	2dc78 <main@@Base+0x17a38>
   2dc68:	mov	r0, r5
   2dc6c:	mov	r2, r6
   2dc70:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   2dc74:	mov	r7, r0
   2dc78:	cmp	r7, r6
   2dc7c:	beq	2dd90 <main@@Base+0x17b50>
   2dc80:	add	r0, r8, #4
   2dc84:	mov	r1, #0
   2dc88:	add	sl, sp, #32
   2dc8c:	add	r9, sp, #28
   2dc90:	str	r8, [sp, #16]
   2dc94:	str	r1, [sp, #20]
   2dc98:	str	r0, [sp, #12]
   2dc9c:	ldr	r4, [r8]
   2dca0:	mov	r8, r0
   2dca4:	add	r0, sp, #24
   2dca8:	mov	r1, r7
   2dcac:	mov	r2, r6
   2dcb0:	mov	r3, r9
   2dcb4:	str	sl, [sp]
   2dcb8:	str	r0, [sp, #4]
   2dcbc:	mov	r0, r5
   2dcc0:	blx	r4
   2dcc4:	cmp	r0, r6
   2dcc8:	beq	2dd90 <main@@Base+0x17b50>
   2dccc:	mov	r4, r0
   2dcd0:	cmp	r0, r7
   2dcd4:	bne	2dce8 <main@@Base+0x17aa8>
   2dcd8:	ldr	r4, [r8], #4
   2dcdc:	cmp	r4, #0
   2dce0:	bne	2dca4 <main@@Base+0x17a64>
   2dce4:	b	2dd98 <main@@Base+0x17b58>
   2dce8:	ldr	r0, [sp, #28]
   2dcec:	cmp	r0, #0
   2dcf0:	beq	2dd18 <main@@Base+0x17ad8>
   2dcf4:	mov	r0, r5
   2dcf8:	mov	r1, r4
   2dcfc:	mov	r2, r6
   2dd00:	mov	r3, #8
   2dd04:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2dd08:	ldr	r8, [sp, #16]
   2dd0c:	cmp	r0, r6
   2dd10:	bne	2dd60 <main@@Base+0x17b20>
   2dd14:	b	2dd90 <main@@Base+0x17b50>
   2dd18:	ldr	r0, [sp, #32]
   2dd1c:	ldr	r1, [sp, #36]	; 0x24
   2dd20:	ldr	r8, [sp, #16]
   2dd24:	subs	r2, r0, #65536	; 0x10000
   2dd28:	sbcs	r1, r1, #0
   2dd2c:	bcc	2dd50 <main@@Base+0x17b10>
   2dd30:	mov	r0, r5
   2dd34:	mov	r1, r4
   2dd38:	mov	r2, r6
   2dd3c:	mov	r3, #7
   2dd40:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2dd44:	cmp	r0, r6
   2dd48:	bne	2dd60 <main@@Base+0x17b20>
   2dd4c:	b	2dd90 <main@@Base+0x17b50>
   2dd50:	str	r0, [sp, #20]
   2dd54:	mov	r0, r4
   2dd58:	cmp	r0, r6
   2dd5c:	beq	2dd90 <main@@Base+0x17b50>
   2dd60:	ldr	r0, [fp, #8]
   2dd64:	ldr	r2, [sp, #20]
   2dd68:	mov	r7, r4
   2dd6c:	mov	r1, r0
   2dd70:	ldrh	r0, [r0]
   2dd74:	add	r0, r0, r2
   2dd78:	strh	r0, [r1]
   2dd7c:	ldr	r0, [sp, #24]
   2dd80:	cmp	r0, #0
   2dd84:	ldr	r0, [sp, #12]
   2dd88:	bne	2dc9c <main@@Base+0x17a5c>
   2dd8c:	b	2ddb0 <main@@Base+0x17b70>
   2dd90:	mov	r4, r6
   2dd94:	b	2ddb0 <main@@Base+0x17b70>
   2dd98:	mov	r0, r5
   2dd9c:	mov	r1, r7
   2dda0:	mov	r2, r6
   2dda4:	mov	r3, #23
   2dda8:	bl	36078 <flatcc_json_parser_set_error@@Base>
   2ddac:	mov	r4, r0
   2ddb0:	mov	r0, r4
   2ddb4:	sub	sp, fp, #28
   2ddb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ddbc:	push	{r4, r5, r6, sl, fp, lr}
   2ddc0:	add	fp, sp, #16
   2ddc4:	sub	sp, sp, #16
   2ddc8:	mov	r5, r0
   2ddcc:	ldr	r0, [pc, #228]	; 2deb8 <main@@Base+0x17c78>
   2ddd0:	mov	r4, r1
   2ddd4:	mov	r6, #1
   2ddd8:	mov	r1, #0
   2dddc:	mov	r3, #0
   2dde0:	mov	r2, r4
   2dde4:	add	r0, pc, r0
   2dde8:	stm	sp, {r0, r6}
   2ddec:	mov	r0, r5
   2ddf0:	bl	3e364 <flatcc_json_printer_float_struct_field@@Base>
   2ddf4:	ldr	r0, [pc, #192]	; 2debc <main@@Base+0x17c7c>
   2ddf8:	mov	r1, #1
   2ddfc:	mov	r2, r4
   2de00:	mov	r3, #4
   2de04:	add	r0, pc, r0
   2de08:	stm	sp, {r0, r6}
   2de0c:	mov	r0, r5
   2de10:	bl	3e364 <flatcc_json_printer_float_struct_field@@Base>
   2de14:	ldr	r0, [pc, #164]	; 2dec0 <main@@Base+0x17c80>
   2de18:	mov	r1, #2
   2de1c:	mov	r2, r4
   2de20:	mov	r3, #8
   2de24:	add	r0, pc, r0
   2de28:	stm	sp, {r0, r6}
   2de2c:	mov	r0, r5
   2de30:	bl	3e364 <flatcc_json_printer_float_struct_field@@Base>
   2de34:	ldr	r0, [pc, #136]	; 2dec4 <main@@Base+0x17c84>
   2de38:	mov	r6, #5
   2de3c:	mov	r1, #3
   2de40:	mov	r2, r4
   2de44:	mov	r3, #16
   2de48:	add	r0, pc, r0
   2de4c:	stm	sp, {r0, r6}
   2de50:	mov	r0, r5
   2de54:	bl	3e3c8 <flatcc_json_printer_double_struct_field@@Base>
   2de58:	ldr	r0, [pc, #104]	; 2dec8 <main@@Base+0x17c88>
   2de5c:	ldr	r1, [pc, #104]	; 2decc <main@@Base+0x17c8c>
   2de60:	mov	r2, r4
   2de64:	mov	r3, #24
   2de68:	add	r1, pc, r1
   2de6c:	add	r0, pc, r0
   2de70:	stm	sp, {r1, r6}
   2de74:	str	r0, [sp, #8]
   2de78:	mov	r0, r5
   2de7c:	mov	r1, #4
   2de80:	bl	3e6bc <flatcc_json_printer_int8_enum_struct_field@@Base>
   2de84:	ldr	r0, [pc, #68]	; 2ded0 <main@@Base+0x17c90>
   2de88:	ldr	r1, [pc, #68]	; 2ded4 <main@@Base+0x17c94>
   2de8c:	mov	r2, r4
   2de90:	mov	r3, #26
   2de94:	add	r1, pc, r1
   2de98:	add	r0, pc, r0
   2de9c:	stm	sp, {r1, r6}
   2dea0:	str	r0, [sp, #8]
   2dea4:	mov	r0, r5
   2dea8:	mov	r1, #5
   2deac:	bl	45d10 <flatcc_json_printer_embedded_struct_field@@Base>
   2deb0:	sub	sp, fp, #16
   2deb4:	pop	{r4, r5, r6, sl, fp, pc}
   2deb8:	andeq	sp, r1, r2, lsr #2
   2debc:	andeq	pc, r1, lr, lsl #13
   2dec0:	muleq	r1, fp, r2
   2dec4:	andeq	sp, r1, r9, ror r2
   2dec8:	andeq	r0, r0, r4, rrx
   2decc:	andeq	sp, r1, pc, asr r2
   2ded0:	andeq	r0, r0, r4, lsl r2
   2ded4:	andeq	sp, r1, r9, lsr r2
   2ded8:	push	{r4, r5, r6, r7, fp, lr}
   2dedc:	add	fp, sp, #16
   2dee0:	mov	r4, r0
   2dee4:	mvn	r0, #0
   2dee8:	uxtb	r7, r1
   2deec:	uxtab	r0, r0, r1
   2def0:	ands	r5, r0, r7
   2def4:	movwne	r5, #1
   2def8:	cmp	r1, #0
   2defc:	beq	2df58 <main@@Base+0x17d18>
   2df00:	ands	r0, r1, #244	; 0xf4
   2df04:	bne	2df58 <main@@Base+0x17d18>
   2df08:	mov	r0, r4
   2df0c:	mov	r1, r5
   2df10:	bl	3c3f0 <flatcc_json_printer_delimit_enum_flags@@Base>
   2df14:	mov	r6, #0
   2df18:	tst	r7, #1
   2df1c:	bne	2df64 <main@@Base+0x17d24>
   2df20:	tst	r7, #2
   2df24:	bne	2df88 <main@@Base+0x17d48>
   2df28:	tst	r7, #8
   2df2c:	beq	2df48 <main@@Base+0x17d08>
   2df30:	ldr	r2, [pc, #128]	; 2dfb8 <main@@Base+0x17d78>
   2df34:	mov	r0, r4
   2df38:	mov	r1, r6
   2df3c:	mov	r3, #4
   2df40:	add	r2, pc, r2
   2df44:	bl	3c424 <flatcc_json_printer_enum_flag@@Base>
   2df48:	mov	r0, r4
   2df4c:	mov	r1, r5
   2df50:	pop	{r4, r5, r6, r7, fp, lr}
   2df54:	b	3c3f0 <flatcc_json_printer_delimit_enum_flags@@Base>
   2df58:	mov	r0, r4
   2df5c:	pop	{r4, r5, r6, r7, fp, lr}
   2df60:	b	3c0f8 <flatcc_json_printer_int8@@Base>
   2df64:	ldr	r2, [pc, #68]	; 2dfb0 <main@@Base+0x17d70>
   2df68:	mov	r0, r4
   2df6c:	mov	r1, #0
   2df70:	mov	r3, #3
   2df74:	add	r2, pc, r2
   2df78:	bl	3c424 <flatcc_json_printer_enum_flag@@Base>
   2df7c:	mov	r6, #1
   2df80:	tst	r7, #2
   2df84:	beq	2df28 <main@@Base+0x17ce8>
   2df88:	ldr	r2, [pc, #36]	; 2dfb4 <main@@Base+0x17d74>
   2df8c:	mov	r0, r4
   2df90:	mov	r1, r6
   2df94:	mov	r3, #5
   2df98:	add	r2, pc, r2
   2df9c:	bl	3c424 <flatcc_json_printer_enum_flag@@Base>
   2dfa0:	add	r6, r6, #1
   2dfa4:	tst	r7, #8
   2dfa8:	bne	2df30 <main@@Base+0x17cf0>
   2dfac:	b	2df48 <main@@Base+0x17d08>
   2dfb0:	andeq	sp, r1, pc, asr r1
   2dfb4:	andeq	sp, r1, pc, lsr r1
   2dfb8:	muleq	r1, sp, r1
   2dfbc:	sub	r1, r1, #1
   2dfc0:	cmp	r1, #3
   2dfc4:	bhi	2dff4 <main@@Base+0x17db4>
   2dfc8:	add	r2, pc, #4
   2dfcc:	ldr	r1, [r2, r1, lsl #2]
   2dfd0:	add	pc, r2, r1
   2dfd4:	andeq	r0, r0, r0, lsl r0
   2dfd8:	andeq	r0, r0, r0, lsr r0
   2dfdc:	andeq	r0, r0, r0, asr #32
   2dfe0:	andeq	r0, r0, r0, asr r0
   2dfe4:	ldr	r1, [pc, #72]	; 2e034 <main@@Base+0x17df4>
   2dfe8:	mov	r2, #7
   2dfec:	add	r1, pc, r1
   2dff0:	b	3c304 <flatcc_json_printer_enum@@Base>
   2dff4:	ldr	r1, [pc, #72]	; 2e044 <main@@Base+0x17e04>
   2dff8:	mov	r2, #4
   2dffc:	add	r1, pc, r1
   2e000:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e004:	ldr	r1, [pc, #44]	; 2e038 <main@@Base+0x17df8>
   2e008:	mov	r2, #23
   2e00c:	add	r1, pc, r1
   2e010:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e014:	ldr	r1, [pc, #32]	; 2e03c <main@@Base+0x17dfc>
   2e018:	mov	r2, #8
   2e01c:	add	r1, pc, r1
   2e020:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e024:	ldr	r1, [pc, #20]	; 2e040 <main@@Base+0x17e00>
   2e028:	mov	r2, #3
   2e02c:	add	r1, pc, r1
   2e030:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e034:	strdeq	sp, [r1], -r6
   2e038:	ldrdeq	sp, [r1], -lr
   2e03c:	andeq	sp, r1, r6, ror #1
   2e040:	ldrdeq	sp, [r1], -pc	; <UNPREDICTABLE>
   2e044:	andeq	lr, r1, r7, ror #19
   2e048:	ldrb	r2, [r1, #8]
   2e04c:	sub	r2, r2, #1
   2e050:	cmp	r2, #3
   2e054:	bxhi	lr
   2e058:	add	r3, pc, #4
   2e05c:	ldr	r2, [r3, r2, lsl #2]
   2e060:	add	pc, r3, r2
   2e064:	andeq	r0, r0, r0, lsl r0
   2e068:	andeq	r0, r0, r4, lsr r0
   2e06c:	andeq	r0, r0, ip, lsl r0
   2e070:	andeq	r0, r0, r8, lsr #32
   2e074:	ldr	r2, [pc, #40]	; 2e0a4 <main@@Base+0x17e64>
   2e078:	add	r2, pc, r2
   2e07c:	b	45a5c <flatcc_json_printer_union_table@@Base>
   2e080:	ldr	r2, [pc, #36]	; 2e0ac <main@@Base+0x17e6c>
   2e084:	add	r2, pc, r2
   2e088:	b	45a5c <flatcc_json_printer_union_table@@Base>
   2e08c:	ldr	r2, [pc, #28]	; 2e0b0 <main@@Base+0x17e70>
   2e090:	add	r2, pc, r2
   2e094:	b	45a5c <flatcc_json_printer_union_table@@Base>
   2e098:	ldr	r2, [pc, #8]	; 2e0a8 <main@@Base+0x17e68>
   2e09c:	add	r2, pc, r2
   2e0a0:	b	45a5c <flatcc_json_printer_union_table@@Base>
   2e0a4:			; <UNDEFINED> instruction: 0xffff3444
   2e0a8:	andeq	r0, r0, r0, lsl r2
   2e0ac:	andeq	r0, r0, r0, ror #5
   2e0b0:	ldrdeq	r0, [r0], -r8
   2e0b4:	push	{r4, r5, r6, sl, fp, lr}
   2e0b8:	add	fp, sp, #16
   2e0bc:	sub	sp, sp, #8
   2e0c0:	mov	r5, r0
   2e0c4:	ldr	r0, [pc, #72]	; 2e114 <main@@Base+0x17ed4>
   2e0c8:	mov	r4, r1
   2e0cc:	mov	r6, #1
   2e0d0:	mov	r1, #0
   2e0d4:	mov	r3, #0
   2e0d8:	mov	r2, r4
   2e0dc:	add	r0, pc, r0
   2e0e0:	stm	sp, {r0, r6}
   2e0e4:	mov	r0, r5
   2e0e8:	bl	3e174 <flatcc_json_printer_int16_struct_field@@Base>
   2e0ec:	ldr	r0, [pc, #36]	; 2e118 <main@@Base+0x17ed8>
   2e0f0:	mov	r1, #1
   2e0f4:	mov	r2, r4
   2e0f8:	mov	r3, #2
   2e0fc:	add	r0, pc, r0
   2e100:	stm	sp, {r0, r6}
   2e104:	mov	r0, r5
   2e108:	bl	3e054 <flatcc_json_printer_int8_struct_field@@Base>
   2e10c:	sub	sp, fp, #16
   2e110:	pop	{r4, r5, r6, sl, fp, pc}
   2e114:	andeq	ip, r1, sp, lsl #30
   2e118:	andeq	sp, r1, ip, lsl #1
   2e11c:	push	{r4, r5, r6, sl, fp, lr}
   2e120:	add	fp, sp, #16
   2e124:	sub	sp, sp, #16
   2e128:	mov	r5, r0
   2e12c:	mov	r0, #2
   2e130:	mov	r2, #0
   2e134:	mov	r4, r1
   2e138:	mov	r6, #0
   2e13c:	str	r0, [sp]
   2e140:	mov	r0, r5
   2e144:	ldr	r3, [pc, #84]	; 2e1a0 <main@@Base+0x17f60>
   2e148:	add	r3, pc, r3
   2e14c:	bl	3c4f0 <flatcc_json_printer_string_field@@Base>
   2e150:	mov	r0, #3
   2e154:	str	r6, [sp, #8]
   2e158:	str	r6, [sp, #12]
   2e15c:	mov	r1, r4
   2e160:	mov	r2, #1
   2e164:	str	r0, [sp]
   2e168:	mov	r0, r5
   2e16c:	ldr	r3, [pc, #48]	; 2e1a4 <main@@Base+0x17f64>
   2e170:	add	r3, pc, r3
   2e174:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   2e178:	mov	r0, #5
   2e17c:	mov	r1, r4
   2e180:	mov	r2, #2
   2e184:	stm	sp, {r0, r6}
   2e188:	mov	r0, r5
   2e18c:	ldr	r3, [pc, #20]	; 2e1a8 <main@@Base+0x17f68>
   2e190:	add	r3, pc, r3
   2e194:	bl	3cad0 <flatcc_json_printer_uint16_field@@Base>
   2e198:	sub	sp, fp, #16
   2e19c:	pop	{r4, r5, r6, sl, fp, pc}
   2e1a0:	andeq	sp, r1, r7, lsr r1
   2e1a4:	andeq	sp, r1, r2, lsl r1
   2e1a8:	andeq	sp, r1, pc, lsr #19
   2e1ac:	push	{r4, r5, fp, lr}
   2e1b0:	add	fp, sp, #8
   2e1b4:	sub	sp, sp, #8
   2e1b8:	mov	r4, r1
   2e1bc:	ldr	r1, [pc, #84]	; 2e218 <main@@Base+0x17fd8>
   2e1c0:	mov	r5, r0
   2e1c4:	mov	r0, #2
   2e1c8:	mov	r3, #0
   2e1cc:	str	r0, [sp, #4]
   2e1d0:	mov	r0, r5
   2e1d4:	mov	r2, r4
   2e1d8:	add	r1, pc, r1
   2e1dc:	str	r1, [sp]
   2e1e0:	mov	r1, #0
   2e1e4:	bl	3df9c <flatcc_json_printer_uint32_struct_field@@Base>
   2e1e8:	ldr	r1, [pc, #44]	; 2e21c <main@@Base+0x17fdc>
   2e1ec:	mov	r0, #8
   2e1f0:	mov	r2, r4
   2e1f4:	mov	r3, #4
   2e1f8:	str	r0, [sp, #4]
   2e1fc:	mov	r0, r5
   2e200:	add	r1, pc, r1
   2e204:	str	r1, [sp]
   2e208:	mov	r1, #1
   2e20c:	bl	3df9c <flatcc_json_printer_uint32_struct_field@@Base>
   2e210:	sub	sp, fp, #8
   2e214:	pop	{r4, r5, fp, pc}
   2e218:	andeq	sp, r1, r7, lsr #1
   2e21c:	andeq	sp, r1, r6, lsl #1
   2e220:	bx	lr
   2e224:	push	{r4, r5, r6, sl, fp, lr}
   2e228:	add	fp, sp, #16
   2e22c:	sub	sp, sp, #8
   2e230:	mov	r5, r0
   2e234:	mov	r6, #0
   2e238:	mov	r0, #4
   2e23c:	mov	r2, #0
   2e240:	mov	r4, r1
   2e244:	stm	sp, {r0, r6}
   2e248:	mov	r0, r5
   2e24c:	ldr	r3, [pc, #84]	; 2e2a8 <main@@Base+0x18068>
   2e250:	add	r3, pc, r3
   2e254:	bl	3c780 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2e258:	mov	r0, #1
   2e25c:	mov	r1, #7
   2e260:	mov	r2, #1
   2e264:	str	r1, [sp]
   2e268:	str	r0, [sp, #4]
   2e26c:	mov	r0, r5
   2e270:	mov	r1, r4
   2e274:	ldr	r3, [pc, #48]	; 2e2ac <main@@Base+0x1806c>
   2e278:	add	r3, pc, r3
   2e27c:	bl	3c780 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2e280:	mov	r0, #6
   2e284:	mov	r1, r4
   2e288:	mov	r2, #2
   2e28c:	stm	sp, {r0, r6}
   2e290:	mov	r0, r5
   2e294:	ldr	r3, [pc, #20]	; 2e2b0 <main@@Base+0x18070>
   2e298:	add	r3, pc, r3
   2e29c:	bl	3c780 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2e2a0:	sub	sp, fp, #16
   2e2a4:	pop	{r4, r5, r6, sl, fp, pc}
   2e2a8:	andeq	sp, r1, r2, asr #32
   2e2ac:	andeq	sp, r1, r7, lsl r0
   2e2b0:	strdeq	ip, [r1], -pc	; <UNPREDICTABLE>
   2e2b4:	push	{r4, r5, r6, r7, fp, lr}
   2e2b8:	add	fp, sp, #16
   2e2bc:	sub	sp, sp, #16
   2e2c0:	ldr	r7, [pc, #144]	; 2e358 <main@@Base+0x18118>
   2e2c4:	mov	r5, r0
   2e2c8:	mov	r6, #2
   2e2cc:	mov	r0, #5
   2e2d0:	mov	r2, #0
   2e2d4:	mov	r4, r1
   2e2d8:	add	r7, pc, r7
   2e2dc:	stm	sp, {r0, r6, r7}
   2e2e0:	mov	r0, r5
   2e2e4:	ldr	r3, [pc, #112]	; 2e35c <main@@Base+0x1811c>
   2e2e8:	add	r3, pc, r3
   2e2ec:	bl	3d850 <flatcc_json_printer_int8_enum_field@@Base>
   2e2f0:	mov	r0, #6
   2e2f4:	mov	r1, r4
   2e2f8:	mov	r2, #1
   2e2fc:	stm	sp, {r0, r6, r7}
   2e300:	mov	r0, r5
   2e304:	ldr	r3, [pc, #84]	; 2e360 <main@@Base+0x18120>
   2e308:	add	r3, pc, r3
   2e30c:	bl	3d850 <flatcc_json_printer_int8_enum_field@@Base>
   2e310:	str	r6, [sp]
   2e314:	str	r6, [sp, #4]
   2e318:	mov	r0, r5
   2e31c:	mov	r1, r4
   2e320:	mov	r2, #2
   2e324:	ldr	r3, [pc, #56]	; 2e364 <main@@Base+0x18124>
   2e328:	add	r3, pc, r3
   2e32c:	bl	3c970 <flatcc_json_printer_uint8_field@@Base>
   2e330:	mov	r0, #3
   2e334:	mov	r1, r4
   2e338:	mov	r2, #3
   2e33c:	stm	sp, {r0, r6}
   2e340:	mov	r0, r5
   2e344:	ldr	r3, [pc, #28]	; 2e368 <main@@Base+0x18128>
   2e348:	add	r3, pc, r3
   2e34c:	bl	3c970 <flatcc_json_printer_uint8_field@@Base>
   2e350:	sub	sp, fp, #16
   2e354:	pop	{r4, r5, r6, r7, fp, pc}
   2e358:			; <UNDEFINED> instruction: 0xfffffbf8
   2e35c:	andeq	ip, r1, pc, asr #24
   2e360:	andeq	ip, r1, r7, lsl #28
   2e364:	andeq	ip, r1, lr, ror #27
   2e368:	ldrdeq	ip, [r1], -r1
   2e36c:	bx	lr
   2e370:	push	{r4, r5, fp, lr}
   2e374:	add	fp, sp, #8
   2e378:	sub	sp, sp, #16
   2e37c:	mov	r5, r0
   2e380:	ldr	r0, [pc, #148]	; 2e41c <main@@Base+0x181dc>
   2e384:	mov	r4, r1
   2e388:	mov	r1, #6
   2e38c:	mov	r2, #0
   2e390:	str	r1, [sp]
   2e394:	mov	r1, r4
   2e398:	add	r0, pc, r0
   2e39c:	str	r0, [sp, #4]
   2e3a0:	mov	r0, r5
   2e3a4:	ldr	r3, [pc, #116]	; 2e420 <main@@Base+0x181e0>
   2e3a8:	add	r3, pc, r3
   2e3ac:	bl	45370 <flatcc_json_printer_table_field@@Base>
   2e3b0:	ldr	r0, [pc, #108]	; 2e424 <main@@Base+0x181e4>
   2e3b4:	mov	r1, #5
   2e3b8:	mov	r2, #1
   2e3bc:	str	r1, [sp]
   2e3c0:	mov	r1, r4
   2e3c4:	add	r0, pc, r0
   2e3c8:	str	r0, [sp, #4]
   2e3cc:	mov	r0, r5
   2e3d0:	ldr	r3, [pc, #80]	; 2e428 <main@@Base+0x181e8>
   2e3d4:	add	r3, pc, r3
   2e3d8:	bl	45370 <flatcc_json_printer_table_field@@Base>
   2e3dc:	ldr	r0, [pc, #72]	; 2e42c <main@@Base+0x181ec>
   2e3e0:	ldr	r1, [pc, #72]	; 2e430 <main@@Base+0x181f0>
   2e3e4:	mov	r2, #7
   2e3e8:	str	r2, [sp]
   2e3ec:	mov	r2, #3
   2e3f0:	add	r0, pc, r0
   2e3f4:	add	r1, pc, r1
   2e3f8:	str	r1, [sp, #4]
   2e3fc:	str	r0, [sp, #8]
   2e400:	mov	r0, r5
   2e404:	mov	r1, r4
   2e408:	ldr	r3, [pc, #36]	; 2e434 <main@@Base+0x181f4>
   2e40c:	add	r3, pc, r3
   2e410:	bl	44f9c <flatcc_json_printer_union_vector_field@@Base>
   2e414:	sub	sp, fp, #8
   2e418:	pop	{r4, r5, fp, pc}
   2e41c:	muleq	r0, r8, r0
   2e420:	andeq	ip, r1, r5, ror sp
   2e424:	andeq	r0, r0, r0, lsr #2
   2e428:	andeq	ip, r1, r0, asr sp
   2e42c:			; <UNDEFINED> instruction: 0xfffffc50
   2e430:			; <UNDEFINED> instruction: 0xfffffbc0
   2e434:	andeq	ip, r1, lr, lsl sp
   2e438:	push	{r4, r5, r6, sl, fp, lr}
   2e43c:	add	fp, sp, #16
   2e440:	sub	sp, sp, #8
   2e444:	mov	r5, r0
   2e448:	ldr	r0, [pc, #132]	; 2e4d4 <main@@Base+0x18294>
   2e44c:	mov	r4, r1
   2e450:	mov	r1, #21
   2e454:	mov	r2, #0
   2e458:	str	r1, [sp]
   2e45c:	mov	r1, r4
   2e460:	add	r0, pc, r0
   2e464:	str	r0, [sp, #4]
   2e468:	mov	r0, r5
   2e46c:	ldr	r3, [pc, #100]	; 2e4d8 <main@@Base+0x18298>
   2e470:	add	r3, pc, r3
   2e474:	bl	45370 <flatcc_json_printer_table_field@@Base>
   2e478:	ldr	r0, [pc, #92]	; 2e4dc <main@@Base+0x1829c>
   2e47c:	mov	r6, #22
   2e480:	mov	r1, r4
   2e484:	mov	r2, #1
   2e488:	str	r6, [sp]
   2e48c:	add	r0, pc, r0
   2e490:	str	r0, [sp, #4]
   2e494:	mov	r0, r5
   2e498:	ldr	r3, [pc, #64]	; 2e4e0 <main@@Base+0x182a0>
   2e49c:	add	r3, pc, r3
   2e4a0:	bl	45370 <flatcc_json_printer_table_field@@Base>
   2e4a4:	ldr	r0, [pc, #56]	; 2e4e4 <main@@Base+0x182a4>
   2e4a8:	str	r6, [sp]
   2e4ac:	mov	r1, r4
   2e4b0:	mov	r2, #2
   2e4b4:	add	r0, pc, r0
   2e4b8:	str	r0, [sp, #4]
   2e4bc:	mov	r0, r5
   2e4c0:	ldr	r3, [pc, #32]	; 2e4e8 <main@@Base+0x182a8>
   2e4c4:	add	r3, pc, r3
   2e4c8:	bl	45370 <flatcc_json_printer_table_field@@Base>
   2e4cc:	sub	sp, fp, #16
   2e4d0:	pop	{r4, r5, r6, sl, fp, pc}
   2e4d4:	andeq	r0, r0, r4, lsl #3
   2e4d8:	andeq	ip, r1, r2, asr #25
   2e4dc:	andeq	r0, r0, r0, asr #5
   2e4e0:	andeq	ip, r1, ip, lsr #25
   2e4e4:	andeq	r0, r0, r4, lsl #6
   2e4e8:	muleq	r1, fp, ip
   2e4ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e4f0:	add	fp, sp, #24
   2e4f4:	sub	sp, sp, #16
   2e4f8:	ldr	r6, [pc, #208]	; 2e5d0 <main@@Base+0x18390>
   2e4fc:	ldr	r7, [pc, #208]	; 2e5d4 <main@@Base+0x18394>
   2e500:	mov	r5, r0
   2e504:	mov	r0, #14
   2e508:	mov	r2, #1
   2e50c:	mov	r4, r1
   2e510:	add	r7, pc, r7
   2e514:	add	r6, pc, r6
   2e518:	stm	sp, {r0, r7}
   2e51c:	str	r6, [sp, #8]
   2e520:	mov	r0, r5
   2e524:	ldr	r3, [pc, #172]	; 2e5d8 <main@@Base+0x18398>
   2e528:	add	r3, pc, r3
   2e52c:	bl	45558 <flatcc_json_printer_union_field@@Base>
   2e530:	mov	r8, #10
   2e534:	str	r7, [sp, #4]
   2e538:	str	r6, [sp, #8]
   2e53c:	mov	r0, r5
   2e540:	mov	r1, r4
   2e544:	mov	r2, #3
   2e548:	str	r8, [sp]
   2e54c:	ldr	r3, [pc, #136]	; 2e5dc <main@@Base+0x1839c>
   2e550:	add	r3, pc, r3
   2e554:	bl	45558 <flatcc_json_printer_union_field@@Base>
   2e558:	mov	r0, #9
   2e55c:	mov	r1, r4
   2e560:	mov	r2, #5
   2e564:	mov	r9, #5
   2e568:	stm	sp, {r0, r7}
   2e56c:	str	r6, [sp, #8]
   2e570:	mov	r0, r5
   2e574:	ldr	r3, [pc, #100]	; 2e5e0 <main@@Base+0x183a0>
   2e578:	add	r3, pc, r3
   2e57c:	bl	45558 <flatcc_json_printer_union_field@@Base>
   2e580:	str	r9, [sp]
   2e584:	str	r7, [sp, #4]
   2e588:	str	r6, [sp, #8]
   2e58c:	mov	r0, r5
   2e590:	mov	r1, r4
   2e594:	mov	r2, #7
   2e598:	ldr	r3, [pc, #68]	; 2e5e4 <main@@Base+0x183a4>
   2e59c:	add	r3, pc, r3
   2e5a0:	bl	45558 <flatcc_json_printer_union_field@@Base>
   2e5a4:	str	r8, [sp]
   2e5a8:	str	r7, [sp, #4]
   2e5ac:	str	r6, [sp, #8]
   2e5b0:	mov	r0, r5
   2e5b4:	mov	r1, r4
   2e5b8:	mov	r2, #9
   2e5bc:	ldr	r3, [pc, #36]	; 2e5e8 <main@@Base+0x183a8>
   2e5c0:	add	r3, pc, r3
   2e5c4:	bl	44f9c <flatcc_json_printer_union_vector_field@@Base>
   2e5c8:	sub	sp, fp, #24
   2e5cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e5d0:	andeq	r0, r0, r4, ror #7
   2e5d4:	andeq	r0, r0, r4, lsl r3
   2e5d8:	andeq	ip, r1, sp, asr #25
   2e5dc:			; <UNDEFINED> instruction: 0x0001ccb4
   2e5e0:	muleq	r1, r7, ip
   2e5e4:	andeq	ip, r1, sp, ror ip
   2e5e8:	andeq	ip, r1, pc, asr ip
   2e5ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e5f0:	add	fp, sp, #24
   2e5f4:	sub	sp, sp, #16
   2e5f8:	mov	r9, #4
   2e5fc:	mov	r2, #0
   2e600:	mov	r4, r1
   2e604:	mov	r5, r0
   2e608:	mov	r6, #0
   2e60c:	str	r9, [sp]
   2e610:	ldr	r3, [pc, #280]	; 2e730 <main@@Base+0x184f0>
   2e614:	add	r3, pc, r3
   2e618:	bl	3c4f0 <flatcc_json_printer_string_field@@Base>
   2e61c:	mov	r8, #9
   2e620:	str	r6, [sp, #4]
   2e624:	mov	r0, r5
   2e628:	mov	r1, r4
   2e62c:	mov	r2, #1
   2e630:	str	r8, [sp]
   2e634:	ldr	r3, [pc, #248]	; 2e734 <main@@Base+0x184f4>
   2e638:	add	r3, pc, r3
   2e63c:	bl	3cb90 <flatcc_json_printer_uint32_field@@Base>
   2e640:	str	r9, [sp]
   2e644:	mov	r0, r5
   2e648:	mov	r1, r4
   2e64c:	mov	r2, #2
   2e650:	ldr	r3, [pc, #224]	; 2e738 <main@@Base+0x184f8>
   2e654:	add	r3, pc, r3
   2e658:	bl	3c4f0 <flatcc_json_printer_string_field@@Base>
   2e65c:	mov	r7, #8
   2e660:	str	r6, [sp, #8]
   2e664:	str	r6, [sp, #12]
   2e668:	mov	r0, r5
   2e66c:	mov	r1, r4
   2e670:	mov	r2, #3
   2e674:	str	r7, [sp]
   2e678:	ldr	r3, [pc, #188]	; 2e73c <main@@Base+0x184fc>
   2e67c:	add	r3, pc, r3
   2e680:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   2e684:	str	r9, [sp]
   2e688:	mov	r0, r5
   2e68c:	mov	r1, r4
   2e690:	mov	r2, #4
   2e694:	ldr	r3, [pc, #164]	; 2e740 <main@@Base+0x18500>
   2e698:	add	r3, pc, r3
   2e69c:	bl	3c4f0 <flatcc_json_printer_string_field@@Base>
   2e6a0:	str	r6, [sp, #8]
   2e6a4:	str	r6, [sp, #12]
   2e6a8:	str	r7, [sp]
   2e6ac:	mov	r0, r5
   2e6b0:	mov	r1, r4
   2e6b4:	mov	r2, #5
   2e6b8:	ldr	r3, [pc, #132]	; 2e744 <main@@Base+0x18504>
   2e6bc:	add	r3, pc, r3
   2e6c0:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   2e6c4:	str	r8, [sp]
   2e6c8:	str	r6, [sp, #4]
   2e6cc:	mov	r0, r5
   2e6d0:	mov	r1, r4
   2e6d4:	mov	r2, #6
   2e6d8:	ldr	r3, [pc, #104]	; 2e748 <main@@Base+0x18508>
   2e6dc:	add	r3, pc, r3
   2e6e0:	bl	3cb90 <flatcc_json_printer_uint32_field@@Base>
   2e6e4:	str	r6, [sp, #8]
   2e6e8:	str	r6, [sp, #12]
   2e6ec:	str	r7, [sp]
   2e6f0:	mov	r0, r5
   2e6f4:	mov	r1, r4
   2e6f8:	mov	r2, #7
   2e6fc:	ldr	r3, [pc, #72]	; 2e74c <main@@Base+0x1850c>
   2e700:	add	r3, pc, r3
   2e704:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   2e708:	str	r8, [sp]
   2e70c:	str	r6, [sp, #4]
   2e710:	mov	r0, r5
   2e714:	mov	r1, r4
   2e718:	mov	r2, #8
   2e71c:	ldr	r3, [pc, #44]	; 2e750 <main@@Base+0x18510>
   2e720:	add	r3, pc, r3
   2e724:	bl	3cb90 <flatcc_json_printer_uint32_field@@Base>
   2e728:	sub	sp, fp, #24
   2e72c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e730:	andeq	ip, r1, r2, ror #22
   2e734:	andeq	ip, r1, r3, asr #22
   2e738:	andeq	ip, r1, r1, lsr fp
   2e73c:	andeq	ip, r1, lr, lsl #22
   2e740:	strdeq	ip, [r1], -fp
   2e744:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   2e748:	andeq	ip, r1, r5, asr #21
   2e74c:	andeq	ip, r1, fp, lsr #21
   2e750:	muleq	r1, r4, sl
   2e754:	push	{r4, r5, r6, sl, fp, lr}
   2e758:	add	fp, sp, #16
   2e75c:	sub	sp, sp, #16
   2e760:	mov	r6, #0
   2e764:	mov	r5, r0
   2e768:	mov	r0, #15
   2e76c:	mov	r2, #0
   2e770:	mov	r4, r1
   2e774:	str	r0, [sp]
   2e778:	str	r6, [sp, #8]
   2e77c:	str	r6, [sp, #12]
   2e780:	mov	r0, r5
   2e784:	ldr	r3, [pc, #44]	; 2e7b8 <main@@Base+0x18578>
   2e788:	add	r3, pc, r3
   2e78c:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   2e790:	mov	r0, #16
   2e794:	mov	r1, r4
   2e798:	mov	r2, #1
   2e79c:	stm	sp, {r0, r6}
   2e7a0:	mov	r0, r5
   2e7a4:	ldr	r3, [pc, #16]	; 2e7bc <main@@Base+0x1857c>
   2e7a8:	add	r3, pc, r3
   2e7ac:	bl	3cb90 <flatcc_json_printer_uint32_field@@Base>
   2e7b0:	sub	sp, fp, #16
   2e7b4:	pop	{r4, r5, r6, sl, fp, pc}
   2e7b8:	andeq	ip, r1, r6, lsr sl
   2e7bc:	andeq	ip, r1, r6, lsr #20
   2e7c0:	push	{r4, r5, r6, sl, fp, lr}
   2e7c4:	add	fp, sp, #16
   2e7c8:	sub	sp, sp, #16
   2e7cc:	mov	r6, #0
   2e7d0:	mov	r5, r0
   2e7d4:	mov	r0, #15
   2e7d8:	mov	r2, #0
   2e7dc:	mov	r4, r1
   2e7e0:	str	r0, [sp]
   2e7e4:	str	r6, [sp, #8]
   2e7e8:	str	r6, [sp, #12]
   2e7ec:	mov	r0, r5
   2e7f0:	ldr	r3, [pc, #44]	; 2e824 <main@@Base+0x185e4>
   2e7f4:	add	r3, pc, r3
   2e7f8:	bl	3d070 <flatcc_json_printer_int64_field@@Base>
   2e7fc:	mov	r0, #21
   2e800:	mov	r1, r4
   2e804:	mov	r2, #1
   2e808:	stm	sp, {r0, r6}
   2e80c:	mov	r0, r5
   2e810:	ldr	r3, [pc, #16]	; 2e828 <main@@Base+0x185e8>
   2e814:	add	r3, pc, r3
   2e818:	bl	3cb90 <flatcc_json_printer_uint32_field@@Base>
   2e81c:	sub	sp, fp, #16
   2e820:	pop	{r4, r5, r6, sl, fp, pc}
   2e824:	andeq	ip, r1, sl, asr #19
   2e828:	andeq	ip, r1, fp, asr #19
   2e82c:	sub	r2, r1, #2
   2e830:	cmp	r2, #9
   2e834:	bhi	2e87c <main@@Base+0x1863c>
   2e838:	add	r1, pc, #4
   2e83c:	ldr	r2, [r1, r2, lsl #2]
   2e840:	add	pc, r1, r2
   2e844:	andeq	r0, r0, r8, lsr #32
   2e848:	andeq	r0, r0, r0, asr r0
   2e84c:	andeq	r0, r0, r0, asr r0
   2e850:	andeq	r0, r0, r0, asr r0
   2e854:	andeq	r0, r0, r0, asr r0
   2e858:	andeq	r0, r0, r0, asr r0
   2e85c:	andeq	r0, r0, r0, rrx
   2e860:	andeq	r0, r0, r0, ror r0
   2e864:	andeq	r0, r0, r0, lsl #1
   2e868:	muleq	r0, r0, r0
   2e86c:	ldr	r1, [pc, #116]	; 2e8e8 <main@@Base+0x186a8>
   2e870:	mov	r2, #5
   2e874:	add	r1, pc, r1
   2e878:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e87c:	cmp	r1, #255	; 0xff
   2e880:	bne	2e894 <main@@Base+0x18654>
   2e884:	ldr	r1, [pc, #88]	; 2e8e4 <main@@Base+0x186a4>
   2e888:	mov	r2, #6
   2e88c:	add	r1, pc, r1
   2e890:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e894:	ldr	r1, [pc, #96]	; 2e8fc <main@@Base+0x186bc>
   2e898:	mov	r2, #4
   2e89c:	add	r1, pc, r1
   2e8a0:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e8a4:	ldr	r1, [pc, #64]	; 2e8ec <main@@Base+0x186ac>
   2e8a8:	mov	r2, #8
   2e8ac:	add	r1, pc, r1
   2e8b0:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e8b4:	ldr	r1, [pc, #52]	; 2e8f0 <main@@Base+0x186b0>
   2e8b8:	mov	r2, #5
   2e8bc:	add	r1, pc, r1
   2e8c0:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e8c4:	ldr	r1, [pc, #40]	; 2e8f4 <main@@Base+0x186b4>
   2e8c8:	mov	r2, #7
   2e8cc:	add	r1, pc, r1
   2e8d0:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e8d4:	ldr	r1, [pc, #28]	; 2e8f8 <main@@Base+0x186b8>
   2e8d8:	mov	r2, #5
   2e8dc:	add	r1, pc, r1
   2e8e0:	b	3c304 <flatcc_json_printer_enum@@Base>
   2e8e4:	andeq	ip, r1, r1, asr #19
   2e8e8:			; <UNDEFINED> instruction: 0x0001c9b6
   2e8ec:	andeq	ip, r1, r4, lsl #19
   2e8f0:	andeq	ip, r1, sp, ror r9
   2e8f4:	andeq	ip, r1, r3, ror r9
   2e8f8:	andeq	ip, r1, fp, ror #18
   2e8fc:	andeq	lr, r1, r7, asr #2
   2e900:	ldrb	r3, [r1, #8]
   2e904:	sub	r2, r3, #2
   2e908:	cmp	r2, #9
   2e90c:	bhi	2e950 <main@@Base+0x18710>
   2e910:	add	r3, pc, #4
   2e914:	ldr	r2, [r3, r2, lsl #2]
   2e918:	add	pc, r3, r2
   2e91c:	andeq	r0, r0, r0, asr #32
   2e920:	andeq	r0, r0, r8, asr r0
   2e924:	andeq	r0, r0, r8, asr r0
   2e928:	andeq	r0, r0, r8, asr r0
   2e92c:	andeq	r0, r0, r8, asr r0
   2e930:	andeq	r0, r0, r8, asr r0
   2e934:	andeq	r0, r0, ip, asr #32
   2e938:	andeq	r0, r0, r8, lsr #32
   2e93c:	andeq	r0, r0, r8, lsr #32
   2e940:	andeq	r0, r0, ip, lsr r0
   2e944:	ldr	r2, [pc, #52]	; 2e980 <main@@Base+0x18740>
   2e948:	add	r2, pc, r2
   2e94c:	b	45bdc <flatcc_json_printer_union_struct@@Base>
   2e950:	cmp	r3, #255	; 0xff
   2e954:	bxne	lr
   2e958:	b	45cfc <flatcc_json_printer_union_string@@Base>
   2e95c:	ldr	r2, [pc, #20]	; 2e978 <main@@Base+0x18738>
   2e960:	add	r2, pc, r2
   2e964:	b	45a5c <flatcc_json_printer_union_table@@Base>
   2e968:	ldr	r2, [pc, #12]	; 2e97c <main@@Base+0x1873c>
   2e96c:	add	r2, pc, r2
   2e970:	b	45bdc <flatcc_json_printer_union_struct@@Base>
   2e974:	bx	lr
   2e978:	andeq	r0, r0, ip, lsl r0
   2e97c:	andeq	r0, r0, r8, asr #32
   2e980:	andeq	r0, r0, r8, lsr #1
   2e984:	push	{fp, lr}
   2e988:	mov	fp, sp
   2e98c:	sub	sp, sp, #8
   2e990:	mov	r2, #0
   2e994:	mov	r3, #19
   2e998:	str	r2, [sp, #4]
   2e99c:	str	r3, [sp]
   2e9a0:	mov	r2, #0
   2e9a4:	ldr	r3, [pc, #12]	; 2e9b8 <main@@Base+0x18778>
   2e9a8:	add	r3, pc, r3
   2e9ac:	bl	3cf98 <flatcc_json_printer_int32_field@@Base>
   2e9b0:	mov	sp, fp
   2e9b4:	pop	{fp, pc}
   2e9b8:	andeq	ip, r1, ip, lsr #17
   2e9bc:	push	{fp, lr}
   2e9c0:	mov	fp, sp
   2e9c4:	sub	sp, sp, #8
   2e9c8:	ldr	r3, [pc, #36]	; 2e9f4 <main@@Base+0x187b4>
   2e9cc:	mov	r2, r1
   2e9d0:	mov	r1, #11
   2e9d4:	str	r1, [sp, #4]
   2e9d8:	mov	r1, #0
   2e9dc:	add	r3, pc, r3
   2e9e0:	str	r3, [sp]
   2e9e4:	mov	r3, #0
   2e9e8:	bl	3df40 <flatcc_json_printer_uint16_struct_field@@Base>
   2e9ec:	mov	sp, fp
   2e9f0:	pop	{fp, pc}
   2e9f4:	andeq	ip, r1, ip, lsl #17
   2e9f8:	push	{fp, lr}
   2e9fc:	mov	fp, sp
   2ea00:	sub	sp, sp, #8
   2ea04:	ldr	r3, [pc, #36]	; 2ea30 <main@@Base+0x187f0>
   2ea08:	mov	r2, r1
   2ea0c:	mov	r1, #10
   2ea10:	str	r1, [sp, #4]
   2ea14:	mov	r1, #0
   2ea18:	add	r3, pc, r3
   2ea1c:	str	r3, [sp]
   2ea20:	mov	r3, #0
   2ea24:	bl	3e1e8 <flatcc_json_printer_int32_struct_field@@Base>
   2ea28:	mov	sp, fp
   2ea2c:	pop	{fp, pc}
   2ea30:	andeq	ip, r1, ip, asr r8
   2ea34:	ldrb	r1, [r0, #12]
   2ea38:	sub	r1, r1, #1
   2ea3c:	uxtb	r2, r1
   2ea40:	cmp	r2, #3
   2ea44:	movhi	r0, #0
   2ea48:	bxhi	lr
   2ea4c:	ldr	r2, [pc, #12]	; 2ea60 <main@@Base+0x18820>
   2ea50:	sxtb	r1, r1
   2ea54:	add	r2, pc, r2
   2ea58:	ldr	r1, [r2, r1, lsl #2]
   2ea5c:	b	34b2c <flatcc_verify_union_table@@Base>
   2ea60:	andeq	r0, r3, r4, ror #6
   2ea64:	push	{r4, sl, fp, lr}
   2ea68:	add	fp, sp, #8
   2ea6c:	mov	r1, #0
   2ea70:	mov	r2, #0
   2ea74:	mov	r4, r0
   2ea78:	bl	34360 <flatcc_verify_string_field@@Base>
   2ea7c:	cmp	r0, #0
   2ea80:	popne	{r4, sl, fp, pc}
   2ea84:	mov	r0, r4
   2ea88:	mov	r1, #1
   2ea8c:	mov	r2, #8
   2ea90:	mov	r3, #8
   2ea94:	bl	342dc <flatcc_verify_field@@Base>
   2ea98:	cmp	r0, #0
   2ea9c:	beq	2eaa4 <main@@Base+0x18864>
   2eaa0:	pop	{r4, sl, fp, pc}
   2eaa4:	mov	r0, r4
   2eaa8:	mov	r1, #2
   2eaac:	mov	r2, #2
   2eab0:	mov	r3, #2
   2eab4:	pop	{r4, sl, fp, lr}
   2eab8:	b	342dc <flatcc_verify_field@@Base>
   2eabc:	mov	r0, #0
   2eac0:	bx	lr
   2eac4:	push	{r4, r5, r6, sl, fp, lr}
   2eac8:	add	fp, sp, #16
   2eacc:	sub	sp, sp, #8
   2ead0:	mvn	r5, #0
   2ead4:	mov	r6, #1
   2ead8:	mov	r1, #0
   2eadc:	mov	r2, #0
   2eae0:	mov	r3, #1
   2eae4:	mov	r4, r0
   2eae8:	str	r6, [sp]
   2eaec:	str	r5, [sp, #4]
   2eaf0:	bl	34444 <flatcc_verify_vector_field@@Base>
   2eaf4:	cmp	r0, #0
   2eaf8:	bne	2eb20 <main@@Base+0x188e0>
   2eafc:	mov	r0, r4
   2eb00:	mov	r1, #1
   2eb04:	mov	r2, #0
   2eb08:	mov	r3, #1
   2eb0c:	str	r6, [sp]
   2eb10:	str	r5, [sp, #4]
   2eb14:	bl	34444 <flatcc_verify_vector_field@@Base>
   2eb18:	cmp	r0, #0
   2eb1c:	beq	2eb28 <main@@Base+0x188e8>
   2eb20:	sub	sp, fp, #16
   2eb24:	pop	{r4, r5, r6, sl, fp, pc}
   2eb28:	ldr	r0, [pc, #40]	; 2eb58 <main@@Base+0x18918>
   2eb2c:	mov	r1, #1
   2eb30:	mov	r2, #0
   2eb34:	mov	r3, #0
   2eb38:	str	r1, [sp]
   2eb3c:	mov	r1, #2
   2eb40:	add	r0, pc, r0
   2eb44:	str	r0, [sp, #4]
   2eb48:	mov	r0, r4
   2eb4c:	bl	35354 <flatcc_verify_table_as_nested_root@@Base>
   2eb50:	sub	sp, fp, #16
   2eb54:	pop	{r4, r5, r6, sl, fp, pc}
   2eb58:			; <UNDEFINED> instruction: 0xffff2f3c
   2eb5c:	push	{r4, sl, fp, lr}
   2eb60:	add	fp, sp, #8
   2eb64:	mov	r1, #0
   2eb68:	mov	r2, #1
   2eb6c:	mov	r3, #1
   2eb70:	mov	r4, r0
   2eb74:	bl	342dc <flatcc_verify_field@@Base>
   2eb78:	cmp	r0, #0
   2eb7c:	bne	2ebb8 <main@@Base+0x18978>
   2eb80:	mov	r0, r4
   2eb84:	mov	r1, #1
   2eb88:	mov	r2, #1
   2eb8c:	mov	r3, #1
   2eb90:	bl	342dc <flatcc_verify_field@@Base>
   2eb94:	cmp	r0, #0
   2eb98:	popne	{r4, sl, fp, pc}
   2eb9c:	mov	r0, r4
   2eba0:	mov	r1, #2
   2eba4:	mov	r2, #1
   2eba8:	mov	r3, #1
   2ebac:	bl	342dc <flatcc_verify_field@@Base>
   2ebb0:	cmp	r0, #0
   2ebb4:	beq	2ebbc <main@@Base+0x1897c>
   2ebb8:	pop	{r4, sl, fp, pc}
   2ebbc:	mov	r0, r4
   2ebc0:	mov	r1, #3
   2ebc4:	mov	r2, #1
   2ebc8:	mov	r3, #1
   2ebcc:	pop	{r4, sl, fp, lr}
   2ebd0:	b	342dc <flatcc_verify_field@@Base>
   2ebd4:	mov	r0, #0
   2ebd8:	bx	lr
   2ebdc:	push	{r4, sl, fp, lr}
   2ebe0:	add	fp, sp, #8
   2ebe4:	ldr	r3, [pc, #88]	; 2ec44 <main@@Base+0x18a04>
   2ebe8:	mov	r1, #0
   2ebec:	mov	r2, #0
   2ebf0:	mov	r4, r0
   2ebf4:	add	r3, pc, r3
   2ebf8:	bl	346e0 <flatcc_verify_table_field@@Base>
   2ebfc:	cmp	r0, #0
   2ec00:	popne	{r4, sl, fp, pc}
   2ec04:	ldr	r3, [pc, #60]	; 2ec48 <main@@Base+0x18a08>
   2ec08:	mov	r0, r4
   2ec0c:	mov	r1, #1
   2ec10:	mov	r2, #0
   2ec14:	add	r3, pc, r3
   2ec18:	bl	346e0 <flatcc_verify_table_field@@Base>
   2ec1c:	cmp	r0, #0
   2ec20:	beq	2ec28 <main@@Base+0x189e8>
   2ec24:	pop	{r4, sl, fp, pc}
   2ec28:	ldr	r3, [pc, #28]	; 2ec4c <main@@Base+0x18a0c>
   2ec2c:	mov	r0, r4
   2ec30:	mov	r1, #3
   2ec34:	mov	r2, #0
   2ec38:	add	r3, pc, r3
   2ec3c:	pop	{r4, sl, fp, lr}
   2ec40:	b	357c8 <flatcc_verify_union_vector_field@@Base>
   2ec44:	andeq	r0, r0, r4, asr r0
   2ec48:	andeq	r0, r0, r8, lsr #1
   2ec4c:			; <UNDEFINED> instruction: 0xfffffdf4
   2ec50:	push	{r4, sl, fp, lr}
   2ec54:	add	fp, sp, #8
   2ec58:	ldr	r3, [pc, #88]	; 2ecb8 <main@@Base+0x18a78>
   2ec5c:	mov	r1, #0
   2ec60:	mov	r2, #0
   2ec64:	mov	r4, r0
   2ec68:	add	r3, pc, r3
   2ec6c:	bl	346e0 <flatcc_verify_table_field@@Base>
   2ec70:	cmp	r0, #0
   2ec74:	popne	{r4, sl, fp, pc}
   2ec78:	ldr	r3, [pc, #60]	; 2ecbc <main@@Base+0x18a7c>
   2ec7c:	mov	r0, r4
   2ec80:	mov	r1, #1
   2ec84:	mov	r2, #0
   2ec88:	add	r3, pc, r3
   2ec8c:	bl	346e0 <flatcc_verify_table_field@@Base>
   2ec90:	cmp	r0, #0
   2ec94:	beq	2ec9c <main@@Base+0x18a5c>
   2ec98:	pop	{r4, sl, fp, pc}
   2ec9c:	ldr	r3, [pc, #28]	; 2ecc0 <main@@Base+0x18a80>
   2eca0:	mov	r0, r4
   2eca4:	mov	r1, #2
   2eca8:	mov	r2, #0
   2ecac:	add	r3, pc, r3
   2ecb0:	pop	{r4, sl, fp, lr}
   2ecb4:	b	346e0 <flatcc_verify_table_field@@Base>
   2ecb8:	andeq	r0, r0, r0, lsl r1
   2ecbc:	andeq	r0, r0, r8, ror #3
   2ecc0:	andeq	r0, r0, r0, lsl #4
   2ecc4:	push	{r4, sl, fp, lr}
   2ecc8:	add	fp, sp, #8
   2eccc:	ldr	r3, [pc, #152]	; 2ed6c <main@@Base+0x18b2c>
   2ecd0:	mov	r1, #1
   2ecd4:	mov	r2, #0
   2ecd8:	mov	r4, r0
   2ecdc:	add	r3, pc, r3
   2ece0:	bl	35664 <flatcc_verify_union_field@@Base>
   2ece4:	cmp	r0, #0
   2ece8:	bne	2ed4c <main@@Base+0x18b0c>
   2ecec:	ldr	r3, [pc, #124]	; 2ed70 <main@@Base+0x18b30>
   2ecf0:	mov	r0, r4
   2ecf4:	mov	r1, #3
   2ecf8:	mov	r2, #0
   2ecfc:	add	r3, pc, r3
   2ed00:	bl	35664 <flatcc_verify_union_field@@Base>
   2ed04:	cmp	r0, #0
   2ed08:	bne	2ed4c <main@@Base+0x18b0c>
   2ed0c:	ldr	r3, [pc, #96]	; 2ed74 <main@@Base+0x18b34>
   2ed10:	mov	r0, r4
   2ed14:	mov	r1, #5
   2ed18:	mov	r2, #0
   2ed1c:	add	r3, pc, r3
   2ed20:	bl	35664 <flatcc_verify_union_field@@Base>
   2ed24:	cmp	r0, #0
   2ed28:	popne	{r4, sl, fp, pc}
   2ed2c:	ldr	r3, [pc, #68]	; 2ed78 <main@@Base+0x18b38>
   2ed30:	mov	r0, r4
   2ed34:	mov	r1, #7
   2ed38:	mov	r2, #0
   2ed3c:	add	r3, pc, r3
   2ed40:	bl	35664 <flatcc_verify_union_field@@Base>
   2ed44:	cmp	r0, #0
   2ed48:	beq	2ed50 <main@@Base+0x18b10>
   2ed4c:	pop	{r4, sl, fp, pc}
   2ed50:	ldr	r3, [pc, #36]	; 2ed7c <main@@Base+0x18b3c>
   2ed54:	mov	r0, r4
   2ed58:	mov	r1, #9
   2ed5c:	mov	r2, #0
   2ed60:	add	r3, pc, r3
   2ed64:	pop	{r4, sl, fp, lr}
   2ed68:	b	357c8 <flatcc_verify_union_vector_field@@Base>
   2ed6c:	andeq	r0, r0, ip, lsl #4
   2ed70:	andeq	r0, r0, ip, ror #3
   2ed74:	andeq	r0, r0, ip, asr #3
   2ed78:	andeq	r0, r0, ip, lsr #3
   2ed7c:	andeq	r0, r0, r8, lsl #3
   2ed80:	push	{r4, sl, fp, lr}
   2ed84:	add	fp, sp, #8
   2ed88:	mov	r1, #0
   2ed8c:	mov	r2, #0
   2ed90:	mov	r4, r0
   2ed94:	bl	34360 <flatcc_verify_string_field@@Base>
   2ed98:	cmp	r0, #0
   2ed9c:	bne	2ee5c <main@@Base+0x18c1c>
   2eda0:	mov	r0, r4
   2eda4:	mov	r1, #1
   2eda8:	mov	r2, #4
   2edac:	mov	r3, #4
   2edb0:	bl	342dc <flatcc_verify_field@@Base>
   2edb4:	cmp	r0, #0
   2edb8:	bne	2ee5c <main@@Base+0x18c1c>
   2edbc:	mov	r0, r4
   2edc0:	mov	r1, #2
   2edc4:	mov	r2, #0
   2edc8:	bl	34360 <flatcc_verify_string_field@@Base>
   2edcc:	cmp	r0, #0
   2edd0:	bne	2ee5c <main@@Base+0x18c1c>
   2edd4:	mov	r0, r4
   2edd8:	mov	r1, #3
   2eddc:	mov	r2, #8
   2ede0:	mov	r3, #8
   2ede4:	bl	342dc <flatcc_verify_field@@Base>
   2ede8:	cmp	r0, #0
   2edec:	bne	2ee5c <main@@Base+0x18c1c>
   2edf0:	mov	r0, r4
   2edf4:	mov	r1, #4
   2edf8:	mov	r2, #0
   2edfc:	bl	34360 <flatcc_verify_string_field@@Base>
   2ee00:	cmp	r0, #0
   2ee04:	bne	2ee5c <main@@Base+0x18c1c>
   2ee08:	mov	r0, r4
   2ee0c:	mov	r1, #5
   2ee10:	mov	r2, #8
   2ee14:	mov	r3, #8
   2ee18:	bl	342dc <flatcc_verify_field@@Base>
   2ee1c:	cmp	r0, #0
   2ee20:	bne	2ee5c <main@@Base+0x18c1c>
   2ee24:	mov	r0, r4
   2ee28:	mov	r1, #6
   2ee2c:	mov	r2, #4
   2ee30:	mov	r3, #4
   2ee34:	bl	342dc <flatcc_verify_field@@Base>
   2ee38:	cmp	r0, #0
   2ee3c:	popne	{r4, sl, fp, pc}
   2ee40:	mov	r0, r4
   2ee44:	mov	r1, #7
   2ee48:	mov	r2, #8
   2ee4c:	mov	r3, #8
   2ee50:	bl	342dc <flatcc_verify_field@@Base>
   2ee54:	cmp	r0, #0
   2ee58:	beq	2ee60 <main@@Base+0x18c20>
   2ee5c:	pop	{r4, sl, fp, pc}
   2ee60:	mov	r0, r4
   2ee64:	mov	r1, #8
   2ee68:	mov	r2, #4
   2ee6c:	mov	r3, #4
   2ee70:	pop	{r4, sl, fp, lr}
   2ee74:	b	342dc <flatcc_verify_field@@Base>
   2ee78:	push	{r4, sl, fp, lr}
   2ee7c:	add	fp, sp, #8
   2ee80:	mov	r1, #0
   2ee84:	mov	r2, #8
   2ee88:	mov	r3, #8
   2ee8c:	mov	r4, r0
   2ee90:	bl	342dc <flatcc_verify_field@@Base>
   2ee94:	cmp	r0, #0
   2ee98:	popne	{r4, sl, fp, pc}
   2ee9c:	mov	r0, r4
   2eea0:	mov	r1, #1
   2eea4:	mov	r2, #4
   2eea8:	mov	r3, #4
   2eeac:	pop	{r4, sl, fp, lr}
   2eeb0:	b	342dc <flatcc_verify_field@@Base>
   2eeb4:	push	{r4, sl, fp, lr}
   2eeb8:	add	fp, sp, #8
   2eebc:	mov	r1, #0
   2eec0:	mov	r2, #8
   2eec4:	mov	r3, #8
   2eec8:	mov	r4, r0
   2eecc:	bl	342dc <flatcc_verify_field@@Base>
   2eed0:	cmp	r0, #0
   2eed4:	popne	{r4, sl, fp, pc}
   2eed8:	mov	r0, r4
   2eedc:	mov	r1, #1
   2eee0:	mov	r2, #4
   2eee4:	mov	r3, #4
   2eee8:	pop	{r4, sl, fp, lr}
   2eeec:	b	342dc <flatcc_verify_field@@Base>
   2eef0:	ldrb	r2, [r0, #12]
   2eef4:	sub	r1, r2, #2
   2eef8:	cmp	r1, #9
   2eefc:	bhi	2ef40 <main@@Base+0x18d00>
   2ef00:	add	r2, pc, #4
   2ef04:	ldr	r1, [r2, r1, lsl #2]
   2ef08:	add	pc, r2, r1
   2ef0c:	andeq	r0, r0, r8, asr #32
   2ef10:	andeq	r0, r0, r0, asr #32
   2ef14:	andeq	r0, r0, r0, asr #32
   2ef18:	andeq	r0, r0, r0, asr #32
   2ef1c:	andeq	r0, r0, r0, asr #32
   2ef20:	andeq	r0, r0, r0, asr #32
   2ef24:	andeq	r0, r0, r4, asr r0
   2ef28:	andeq	r0, r0, r8, lsr #32
   2ef2c:	andeq	r0, r0, r8, lsr #32
   2ef30:	andeq	r0, r0, ip, lsr r0
   2ef34:	mov	r1, #4
   2ef38:	mov	r2, #4
   2ef3c:	b	34c14 <flatcc_verify_union_struct@@Base>
   2ef40:	cmp	r2, #255	; 0xff
   2ef44:	bne	2ef4c <main@@Base+0x18d0c>
   2ef48:	b	34c6c <flatcc_verify_union_string@@Base>
   2ef4c:	mov	r0, #0
   2ef50:	bx	lr
   2ef54:	ldr	r1, [pc, #16]	; 2ef6c <main@@Base+0x18d2c>
   2ef58:	add	r1, pc, r1
   2ef5c:	b	34b2c <flatcc_verify_union_table@@Base>
   2ef60:	mov	r1, #2
   2ef64:	mov	r2, #2
   2ef68:	b	34c14 <flatcc_verify_union_struct@@Base>
   2ef6c:	andeq	r0, r0, r0, lsl r0
   2ef70:	mov	r1, #0
   2ef74:	mov	r2, #4
   2ef78:	mov	r3, #4
   2ef7c:	b	342dc <flatcc_verify_field@@Base>

0002ef80 <flatcc_builder_default_alloc@@Base>:
   2ef80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ef84:	add	fp, sp, #24
   2ef88:	mov	r4, r1
   2ef8c:	cmp	r2, #0
   2ef90:	beq	2efdc <flatcc_builder_default_alloc@@Base+0x5c>
   2ef94:	ldr	r0, [fp, #8]
   2ef98:	mov	r8, r3
   2ef9c:	sub	r1, r0, #1
   2efa0:	cmp	r1, #6
   2efa4:	bhi	2f008 <flatcc_builder_default_alloc@@Base+0x88>
   2efa8:	add	r3, pc, #8
   2efac:	mov	r0, #256	; 0x100
   2efb0:	ldr	r1, [r3, r1, lsl #2]
   2efb4:	add	pc, r3, r1
   2efb8:	andeq	r0, r0, r4, rrx
   2efbc:	andeq	r0, r0, r0, asr r0
   2efc0:	andeq	r0, r0, r0, asr r0
   2efc4:	andeq	r0, r0, ip, lsl r0
   2efc8:	andeq	r0, r0, r8, asr r0
   2efcc:	andeq	r0, r0, r0, asr r0
   2efd0:	andeq	r0, r0, r0, rrx
   2efd4:	mov	r0, #288	; 0x120
   2efd8:	b	2f01c <flatcc_builder_default_alloc@@Base+0x9c>
   2efdc:	ldr	r0, [r4]
   2efe0:	cmp	r0, #0
   2efe4:	moveq	r6, #0
   2efe8:	moveq	r0, r6
   2efec:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eff0:	bl	14e4c <free@plt>
   2eff4:	mov	r6, #0
   2eff8:	mov	r0, r6
   2effc:	str	r6, [r4]
   2f000:	str	r6, [r4, #4]
   2f004:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f008:	mov	r0, #32
   2f00c:	b	2f01c <flatcc_builder_default_alloc@@Base+0x9c>
   2f010:	mov	r0, r2
   2f014:	b	2f01c <flatcc_builder_default_alloc@@Base+0x9c>
   2f018:	mov	r0, #64	; 0x40
   2f01c:	mov	r7, r0
   2f020:	lsl	r0, r0, #1
   2f024:	cmp	r7, r2
   2f028:	bcc	2f01c <flatcc_builder_default_alloc@@Base+0x9c>
   2f02c:	ldr	r0, [r4, #4]
   2f030:	mov	r6, #0
   2f034:	cmp	r0, r2
   2f038:	lsrcs	r0, r0, #1
   2f03c:	cmpcs	r0, r7
   2f040:	bcs	2f078 <flatcc_builder_default_alloc@@Base+0xf8>
   2f044:	ldr	r0, [r4]
   2f048:	mov	r1, r7
   2f04c:	bl	14e88 <realloc@plt>
   2f050:	cmp	r0, #0
   2f054:	mvneq	r6, #0
   2f058:	moveq	r0, r6
   2f05c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f060:	cmp	r8, #0
   2f064:	mov	r5, r0
   2f068:	ldrne	r1, [r4, #4]
   2f06c:	cmpne	r7, r1
   2f070:	bhi	2f080 <flatcc_builder_default_alloc@@Base+0x100>
   2f074:	stm	r4, {r5, r7}
   2f078:	mov	r0, r6
   2f07c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f080:	add	r0, r5, r1
   2f084:	sub	r2, r7, r1
   2f088:	mov	r1, #0
   2f08c:	bl	14ee8 <memset@plt>
   2f090:	b	2f074 <flatcc_builder_default_alloc@@Base+0xf4>

0002f094 <flatcc_builder_flush_vtable_cache@@Base>:
   2f094:	push	{r4, r5, fp, lr}
   2f098:	add	fp, sp, #8
   2f09c:	mov	r4, r0
   2f0a0:	ldr	r0, [r0, #116]	; 0x74
   2f0a4:	cmp	r0, #0
   2f0a8:	popeq	{r4, r5, fp, pc}
   2f0ac:	ldr	r0, [r4, #92]	; 0x5c
   2f0b0:	ldr	r2, [r4, #96]	; 0x60
   2f0b4:	mov	r1, #0
   2f0b8:	mov	r5, #0
   2f0bc:	bl	14ee8 <memset@plt>
   2f0c0:	mov	r0, #16
   2f0c4:	str	r5, [r4, #120]	; 0x78
   2f0c8:	str	r0, [r4, #124]	; 0x7c
   2f0cc:	pop	{r4, r5, fp, pc}

0002f0d0 <flatcc_builder_custom_init@@Base>:
   2f0d0:	push	{r4, r5, r6, r7, fp, lr}
   2f0d4:	add	fp, sp, #16
   2f0d8:	mov	r6, r2
   2f0dc:	mov	r7, r1
   2f0e0:	mov	r1, #0
   2f0e4:	mov	r2, #232	; 0xe8
   2f0e8:	mov	r5, r3
   2f0ec:	mov	r4, r0
   2f0f0:	bl	14ee8 <memset@plt>
   2f0f4:	ldr	r0, [fp, #8]
   2f0f8:	cmp	r7, #0
   2f0fc:	bne	2f114 <flatcc_builder_custom_init@@Base+0x44>
   2f100:	mov	r1, #1
   2f104:	add	r6, r4, #188	; 0xbc
   2f108:	str	r1, [r4, #184]	; 0xb8
   2f10c:	ldr	r7, [pc, #40]	; 2f13c <flatcc_builder_custom_init@@Base+0x6c>
   2f110:	ldr	r7, [pc, r7]
   2f114:	ldr	r1, [pc, #36]	; 2f140 <flatcc_builder_custom_init@@Base+0x70>
   2f118:	cmp	r5, #0
   2f11c:	ldr	r1, [pc, r1]
   2f120:	str	r6, [r4, #36]	; 0x24
   2f124:	str	r0, [r4, #40]	; 0x28
   2f128:	mov	r0, #0
   2f12c:	str	r7, [r4, #44]	; 0x2c
   2f130:	movne	r1, r5
   2f134:	str	r1, [r4, #48]	; 0x30
   2f138:	pop	{r4, r5, r6, r7, fp, pc}
   2f13c:	andeq	pc, r2, r8, ror #30
   2f140:	andeq	pc, r2, r4, asr pc	; <UNPREDICTABLE>

0002f144 <flatcc_builder_init@@Base>:
   2f144:	push	{r4, r5, fp, lr}
   2f148:	add	fp, sp, #8
   2f14c:	mov	r1, #0
   2f150:	mov	r2, #232	; 0xe8
   2f154:	mov	r4, r0
   2f158:	mov	r5, #0
   2f15c:	bl	14ee8 <memset@plt>
   2f160:	mov	r0, #1
   2f164:	str	r0, [r4, #184]	; 0xb8
   2f168:	add	r0, r4, #188	; 0xbc
   2f16c:	ldr	r1, [pc, #32]	; 2f194 <flatcc_builder_init@@Base+0x50>
   2f170:	ldr	r1, [pc, r1]
   2f174:	ldr	r2, [pc, #28]	; 2f198 <flatcc_builder_init@@Base+0x54>
   2f178:	ldr	r2, [pc, r2]
   2f17c:	str	r0, [r4, #36]	; 0x24
   2f180:	mov	r0, #0
   2f184:	str	r5, [r4, #40]	; 0x28
   2f188:	str	r2, [r4, #44]	; 0x2c
   2f18c:	str	r1, [r4, #48]	; 0x30
   2f190:	pop	{r4, r5, fp, pc}
   2f194:	andeq	pc, r2, r0, lsl #30
   2f198:	andeq	pc, r2, r0, lsl #30

0002f19c <flatcc_builder_custom_reset@@Base>:
   2f19c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f1a0:	add	fp, sp, #24
   2f1a4:	sub	sp, sp, #8
   2f1a8:	mov	r9, r2
   2f1ac:	mov	r8, r1
   2f1b0:	mov	r4, r0
   2f1b4:	add	r7, r0, #52	; 0x34
   2f1b8:	mov	r5, #0
   2f1bc:	ldr	r0, [r7]
   2f1c0:	cmp	r0, #0
   2f1c4:	beq	2f20c <flatcc_builder_custom_reset@@Base+0x70>
   2f1c8:	cmp	r9, #0
   2f1cc:	cmpne	r5, #5
   2f1d0:	beq	2f1fc <flatcc_builder_custom_reset@@Base+0x60>
   2f1d4:	ldr	r0, [r4, #40]	; 0x28
   2f1d8:	ldr	r6, [r4, #48]	; 0x30
   2f1dc:	mov	r1, r7
   2f1e0:	mov	r2, #1
   2f1e4:	mov	r3, #1
   2f1e8:	str	r5, [sp]
   2f1ec:	blx	r6
   2f1f0:	cmp	r0, #0
   2f1f4:	bne	2f2ac <flatcc_builder_custom_reset@@Base+0x110>
   2f1f8:	ldr	r0, [r7]
   2f1fc:	ldr	r2, [r7, #4]
   2f200:	mov	r1, #0
   2f204:	bl	14ee8 <memset@plt>
   2f208:	b	2f218 <flatcc_builder_custom_reset@@Base+0x7c>
   2f20c:	ldr	r0, [r7, #4]
   2f210:	cmp	r0, #0
   2f214:	bne	2f2bc <flatcc_builder_custom_reset@@Base+0x120>
   2f218:	add	r5, r5, #1
   2f21c:	add	r7, r7, #8
   2f220:	cmp	r5, #8
   2f224:	bcc	2f1bc <flatcc_builder_custom_reset@@Base+0x20>
   2f228:	mov	r0, #0
   2f22c:	vmov.i32	q8, #0	; 0x00000000
   2f230:	mov	r5, #0
   2f234:	str	r0, [r4, #120]	; 0x78
   2f238:	ldr	r1, [r4, #124]	; 0x7c
   2f23c:	cmp	r1, #0
   2f240:	movne	r1, #16
   2f244:	strne	r1, [r4, #124]	; 0x7c
   2f248:	add	r1, r4, #148	; 0x94
   2f24c:	strh	r0, [r4, #128]	; 0x80
   2f250:	str	r0, [r4, #136]	; 0x88
   2f254:	str	r0, [r4, #140]	; 0x8c
   2f258:	str	r0, [r4, #32]
   2f25c:	cmp	r8, #0
   2f260:	vst1.32	{d16-d17}, [r1]
   2f264:	ldr	r2, [r4, #60]	; 0x3c
   2f268:	ldr	r1, [r4, #52]	; 0x34
   2f26c:	ldr	r3, [r4, #76]	; 0x4c
   2f270:	str	r2, [r4, #16]
   2f274:	str	r0, [r4, #20]
   2f278:	str	r0, [r4, #24]
   2f27c:	movne	r0, #0
   2f280:	str	r3, [r4]
   2f284:	str	r1, [r4, #4]
   2f288:	strne	r0, [r4, #172]	; 0xac
   2f28c:	strne	r0, [r4, #176]	; 0xb0
   2f290:	strne	r0, [r4, #180]	; 0xb4
   2f294:	ldr	r0, [r4, #184]	; 0xb8
   2f298:	cmp	r0, #0
   2f29c:	beq	2f2b0 <flatcc_builder_custom_reset@@Base+0x114>
   2f2a0:	add	r0, r4, #188	; 0xbc
   2f2a4:	bl	33d80 <flatcc_emitter_reset@@Base>
   2f2a8:	b	2f2b0 <flatcc_builder_custom_reset@@Base+0x114>
   2f2ac:	mvn	r5, #0
   2f2b0:	mov	r0, r5
   2f2b4:	sub	sp, fp, #24
   2f2b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f2bc:	ldr	r0, [pc, #24]	; 2f2dc <flatcc_builder_custom_reset@@Base+0x140>
   2f2c0:	ldr	r1, [pc, #24]	; 2f2e0 <flatcc_builder_custom_reset@@Base+0x144>
   2f2c4:	ldr	r3, [pc, #24]	; 2f2e4 <flatcc_builder_custom_reset@@Base+0x148>
   2f2c8:	movw	r2, #434	; 0x1b2
   2f2cc:	add	r0, pc, r0
   2f2d0:	add	r1, pc, r1
   2f2d4:	add	r3, pc, r3
   2f2d8:	bl	14f3c <__assert_fail@plt>
   2f2dc:	andeq	ip, r1, r0, lsl r2
   2f2e0:	andeq	ip, r1, lr, lsl r2
   2f2e4:	andeq	ip, r1, r7, ror r2

0002f2e8 <flatcc_builder_reset@@Base>:
   2f2e8:	push	{r4, sl, fp, lr}
   2f2ec:	add	fp, sp, #8
   2f2f0:	mov	r4, r0
   2f2f4:	ldr	r0, [r0, #52]	; 0x34
   2f2f8:	ldr	r2, [r4, #56]	; 0x38
   2f2fc:	cmp	r0, #0
   2f300:	beq	2f310 <flatcc_builder_reset@@Base+0x28>
   2f304:	mov	r1, #0
   2f308:	bl	14ee8 <memset@plt>
   2f30c:	b	2f318 <flatcc_builder_reset@@Base+0x30>
   2f310:	cmp	r2, #0
   2f314:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f318:	ldr	r0, [r4, #60]	; 0x3c
   2f31c:	ldr	r2, [r4, #64]	; 0x40
   2f320:	cmp	r0, #0
   2f324:	beq	2f334 <flatcc_builder_reset@@Base+0x4c>
   2f328:	mov	r1, #0
   2f32c:	bl	14ee8 <memset@plt>
   2f330:	b	2f33c <flatcc_builder_reset@@Base+0x54>
   2f334:	cmp	r2, #0
   2f338:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f33c:	ldr	r0, [r4, #68]	; 0x44
   2f340:	ldr	r2, [r4, #72]	; 0x48
   2f344:	cmp	r0, #0
   2f348:	beq	2f358 <flatcc_builder_reset@@Base+0x70>
   2f34c:	mov	r1, #0
   2f350:	bl	14ee8 <memset@plt>
   2f354:	b	2f360 <flatcc_builder_reset@@Base+0x78>
   2f358:	cmp	r2, #0
   2f35c:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f360:	ldr	r0, [r4, #76]	; 0x4c
   2f364:	ldr	r2, [r4, #80]	; 0x50
   2f368:	cmp	r0, #0
   2f36c:	beq	2f37c <flatcc_builder_reset@@Base+0x94>
   2f370:	mov	r1, #0
   2f374:	bl	14ee8 <memset@plt>
   2f378:	b	2f384 <flatcc_builder_reset@@Base+0x9c>
   2f37c:	cmp	r2, #0
   2f380:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f384:	ldr	r0, [r4, #84]	; 0x54
   2f388:	ldr	r2, [r4, #88]	; 0x58
   2f38c:	cmp	r0, #0
   2f390:	beq	2f3a0 <flatcc_builder_reset@@Base+0xb8>
   2f394:	mov	r1, #0
   2f398:	bl	14ee8 <memset@plt>
   2f39c:	b	2f3a8 <flatcc_builder_reset@@Base+0xc0>
   2f3a0:	cmp	r2, #0
   2f3a4:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f3a8:	ldr	r0, [r4, #92]	; 0x5c
   2f3ac:	ldr	r2, [r4, #96]	; 0x60
   2f3b0:	cmp	r0, #0
   2f3b4:	beq	2f3c4 <flatcc_builder_reset@@Base+0xdc>
   2f3b8:	mov	r1, #0
   2f3bc:	bl	14ee8 <memset@plt>
   2f3c0:	b	2f3cc <flatcc_builder_reset@@Base+0xe4>
   2f3c4:	cmp	r2, #0
   2f3c8:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f3cc:	ldr	r0, [r4, #100]	; 0x64
   2f3d0:	ldr	r2, [r4, #104]	; 0x68
   2f3d4:	cmp	r0, #0
   2f3d8:	beq	2f3e8 <flatcc_builder_reset@@Base+0x100>
   2f3dc:	mov	r1, #0
   2f3e0:	bl	14ee8 <memset@plt>
   2f3e4:	b	2f3f0 <flatcc_builder_reset@@Base+0x108>
   2f3e8:	cmp	r2, #0
   2f3ec:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f3f0:	ldr	r0, [r4, #108]	; 0x6c
   2f3f4:	ldr	r2, [r4, #112]	; 0x70
   2f3f8:	cmp	r0, #0
   2f3fc:	beq	2f40c <flatcc_builder_reset@@Base+0x124>
   2f400:	mov	r1, #0
   2f404:	bl	14ee8 <memset@plt>
   2f408:	b	2f414 <flatcc_builder_reset@@Base+0x12c>
   2f40c:	cmp	r2, #0
   2f410:	bne	2f480 <flatcc_builder_reset@@Base+0x198>
   2f414:	mov	r0, #0
   2f418:	str	r0, [r4, #120]	; 0x78
   2f41c:	ldr	r1, [r4, #124]	; 0x7c
   2f420:	cmp	r1, #0
   2f424:	movne	r1, #16
   2f428:	strne	r1, [r4, #124]	; 0x7c
   2f42c:	vmov.i32	q8, #0	; 0x00000000
   2f430:	add	r1, r4, #148	; 0x94
   2f434:	strh	r0, [r4, #128]	; 0x80
   2f438:	str	r0, [r4, #136]	; 0x88
   2f43c:	str	r0, [r4, #140]	; 0x8c
   2f440:	str	r0, [r4, #32]
   2f444:	vst1.32	{d16-d17}, [r1]
   2f448:	ldr	r1, [r4, #184]	; 0xb8
   2f44c:	ldr	ip, [r4, #52]	; 0x34
   2f450:	ldr	r2, [r4, #60]	; 0x3c
   2f454:	ldr	r3, [r4, #76]	; 0x4c
   2f458:	cmp	r1, #0
   2f45c:	str	r2, [r4, #16]
   2f460:	str	r0, [r4, #20]
   2f464:	str	r0, [r4, #24]
   2f468:	stm	r4, {r3, ip}
   2f46c:	beq	2f478 <flatcc_builder_reset@@Base+0x190>
   2f470:	add	r0, r4, #188	; 0xbc
   2f474:	bl	33d80 <flatcc_emitter_reset@@Base>
   2f478:	mov	r0, #0
   2f47c:	pop	{r4, sl, fp, pc}
   2f480:	ldr	r0, [pc, #24]	; 2f4a0 <flatcc_builder_reset@@Base+0x1b8>
   2f484:	ldr	r1, [pc, #24]	; 2f4a4 <flatcc_builder_reset@@Base+0x1bc>
   2f488:	ldr	r3, [pc, #24]	; 2f4a8 <flatcc_builder_reset@@Base+0x1c0>
   2f48c:	movw	r2, #434	; 0x1b2
   2f490:	add	r0, pc, r0
   2f494:	add	r1, pc, r1
   2f498:	add	r3, pc, r3
   2f49c:	bl	14f3c <__assert_fail@plt>
   2f4a0:	andeq	ip, r1, ip, asr #32
   2f4a4:	andeq	ip, r1, sl, asr r0
   2f4a8:	strheq	ip, [r1], -r3

0002f4ac <flatcc_builder_clear@@Base>:
   2f4ac:	push	{r4, sl, fp, lr}
   2f4b0:	add	fp, sp, #8
   2f4b4:	sub	sp, sp, #8
   2f4b8:	mov	r4, r0
   2f4bc:	ldr	r0, [r0, #40]	; 0x28
   2f4c0:	mov	r1, #0
   2f4c4:	mov	r2, #0
   2f4c8:	mov	r3, #0
   2f4cc:	ldr	ip, [r4, #48]	; 0x30
   2f4d0:	str	r1, [sp]
   2f4d4:	add	r1, r4, #52	; 0x34
   2f4d8:	blx	ip
   2f4dc:	ldr	r0, [r4, #40]	; 0x28
   2f4e0:	ldr	ip, [r4, #48]	; 0x30
   2f4e4:	mov	r1, #1
   2f4e8:	mov	r2, #0
   2f4ec:	mov	r3, #0
   2f4f0:	str	r1, [sp]
   2f4f4:	add	r1, r4, #60	; 0x3c
   2f4f8:	blx	ip
   2f4fc:	ldr	r0, [r4, #40]	; 0x28
   2f500:	ldr	ip, [r4, #48]	; 0x30
   2f504:	mov	r1, #2
   2f508:	mov	r2, #0
   2f50c:	mov	r3, #0
   2f510:	str	r1, [sp]
   2f514:	add	r1, r4, #68	; 0x44
   2f518:	blx	ip
   2f51c:	ldr	r0, [r4, #40]	; 0x28
   2f520:	ldr	ip, [r4, #48]	; 0x30
   2f524:	mov	r1, #3
   2f528:	mov	r2, #0
   2f52c:	mov	r3, #0
   2f530:	str	r1, [sp]
   2f534:	add	r1, r4, #76	; 0x4c
   2f538:	blx	ip
   2f53c:	ldr	r0, [r4, #40]	; 0x28
   2f540:	ldr	ip, [r4, #48]	; 0x30
   2f544:	mov	r1, #4
   2f548:	mov	r2, #0
   2f54c:	mov	r3, #0
   2f550:	str	r1, [sp]
   2f554:	add	r1, r4, #84	; 0x54
   2f558:	blx	ip
   2f55c:	ldr	r0, [r4, #40]	; 0x28
   2f560:	ldr	ip, [r4, #48]	; 0x30
   2f564:	mov	r1, #5
   2f568:	mov	r2, #0
   2f56c:	mov	r3, #0
   2f570:	str	r1, [sp]
   2f574:	add	r1, r4, #92	; 0x5c
   2f578:	blx	ip
   2f57c:	ldr	r0, [r4, #40]	; 0x28
   2f580:	ldr	ip, [r4, #48]	; 0x30
   2f584:	mov	r1, #6
   2f588:	mov	r2, #0
   2f58c:	mov	r3, #0
   2f590:	str	r1, [sp]
   2f594:	add	r1, r4, #100	; 0x64
   2f598:	blx	ip
   2f59c:	ldr	r0, [r4, #40]	; 0x28
   2f5a0:	ldr	ip, [r4, #48]	; 0x30
   2f5a4:	mov	r1, #7
   2f5a8:	mov	r2, #0
   2f5ac:	mov	r3, #0
   2f5b0:	str	r1, [sp]
   2f5b4:	add	r1, r4, #108	; 0x6c
   2f5b8:	blx	ip
   2f5bc:	ldr	r0, [r4, #184]	; 0xb8
   2f5c0:	cmp	r0, #0
   2f5c4:	beq	2f5d0 <flatcc_builder_clear@@Base+0x124>
   2f5c8:	add	r0, r4, #188	; 0xbc
   2f5cc:	bl	33e4c <flatcc_emitter_clear@@Base>
   2f5d0:	mov	r0, r4
   2f5d4:	mov	r1, #0
   2f5d8:	mov	r2, #232	; 0xe8
   2f5dc:	sub	sp, fp, #8
   2f5e0:	pop	{r4, sl, fp, lr}
   2f5e4:	b	14ee8 <memset@plt>

0002f5e8 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2f5e8:	push	{r4, r5, r6, r7, fp, lr}
   2f5ec:	add	fp, sp, #16
   2f5f0:	sub	sp, sp, #8
   2f5f4:	mov	r4, r0
   2f5f8:	ldr	r0, [r0, #112]	; 0x70
   2f5fc:	add	r1, r1, #7
   2f600:	ldr	r7, [r4, #228]	; 0xe4
   2f604:	bic	r5, r1, #3
   2f608:	add	r6, r4, #108	; 0x6c
   2f60c:	add	r2, r7, r5
   2f610:	cmp	r2, r0
   2f614:	bls	2f63c <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2f618:	ldr	r0, [r4, #40]	; 0x28
   2f61c:	ldr	ip, [r4, #48]	; 0x30
   2f620:	mov	r1, #7
   2f624:	mov	r3, #0
   2f628:	str	r1, [sp]
   2f62c:	mov	r1, r6
   2f630:	blx	ip
   2f634:	cmp	r0, #0
   2f638:	bne	2f688 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2f63c:	ldr	r0, [r6]
   2f640:	adds	r6, r0, r7
   2f644:	beq	2f678 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2f648:	mov	r0, r6
   2f64c:	mov	r1, #0
   2f650:	mov	r2, r5
   2f654:	bl	14ee8 <memset@plt>
   2f658:	ldr	r0, [r4, #224]	; 0xe0
   2f65c:	str	r0, [r6], #4
   2f660:	ldr	r0, [r4, #228]	; 0xe4
   2f664:	add	r1, r0, #4
   2f668:	add	r0, r0, r5
   2f66c:	str	r1, [r4, #224]	; 0xe0
   2f670:	str	r0, [r4, #228]	; 0xe4
   2f674:	b	2f67c <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2f678:	mov	r6, #0
   2f67c:	mov	r0, r6
   2f680:	sub	sp, fp, #16
   2f684:	pop	{r4, r5, r6, r7, fp, pc}
   2f688:	ldr	r0, [pc, #24]	; 2f6a8 <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   2f68c:	ldr	r1, [pc, #24]	; 2f6ac <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2f690:	ldr	r3, [pc, #24]	; 2f6b0 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   2f694:	mov	r2, #308	; 0x134
   2f698:	add	r0, pc, r0
   2f69c:	add	r1, pc, r1
   2f6a0:	add	r3, pc, r3
   2f6a4:	bl	14f3c <__assert_fail@plt>
   2f6a8:	andeq	sp, r1, r3, lsl r0
   2f6ac:	andeq	fp, r1, r2, asr lr
   2f6b0:	andeq	ip, r1, r5, asr #28

0002f6b4 <flatcc_builder_enter_user_frame@@Base>:
   2f6b4:	push	{r4, r5, r6, r7, fp, lr}
   2f6b8:	add	fp, sp, #16
   2f6bc:	sub	sp, sp, #8
   2f6c0:	mov	r4, r0
   2f6c4:	ldr	r0, [r0, #112]	; 0x70
   2f6c8:	add	r1, r1, #7
   2f6cc:	ldr	r7, [r4, #228]	; 0xe4
   2f6d0:	bic	r5, r1, #3
   2f6d4:	add	r6, r4, #108	; 0x6c
   2f6d8:	add	r2, r7, r5
   2f6dc:	cmp	r2, r0
   2f6e0:	bls	2f708 <flatcc_builder_enter_user_frame@@Base+0x54>
   2f6e4:	ldr	r0, [r4, #40]	; 0x28
   2f6e8:	ldr	ip, [r4, #48]	; 0x30
   2f6ec:	mov	r1, #7
   2f6f0:	mov	r3, #0
   2f6f4:	str	r1, [sp]
   2f6f8:	mov	r1, r6
   2f6fc:	blx	ip
   2f700:	cmp	r0, #0
   2f704:	bne	2f750 <flatcc_builder_enter_user_frame@@Base+0x9c>
   2f708:	ldr	r0, [r6]
   2f70c:	adds	r6, r0, r7
   2f710:	moveq	r0, #0
   2f714:	subeq	sp, fp, #16
   2f718:	popeq	{r4, r5, r6, r7, fp, pc}
   2f71c:	mov	r0, r6
   2f720:	mov	r1, #0
   2f724:	mov	r2, r5
   2f728:	bl	14ee8 <memset@plt>
   2f72c:	ldr	r0, [r4, #224]	; 0xe0
   2f730:	str	r0, [r6]
   2f734:	ldr	r1, [r4, #228]	; 0xe4
   2f738:	add	r0, r1, #4
   2f73c:	add	r1, r1, r5
   2f740:	str	r0, [r4, #224]	; 0xe0
   2f744:	str	r1, [r4, #228]	; 0xe4
   2f748:	sub	sp, fp, #16
   2f74c:	pop	{r4, r5, r6, r7, fp, pc}
   2f750:	ldr	r0, [pc, #24]	; 2f770 <flatcc_builder_enter_user_frame@@Base+0xbc>
   2f754:	ldr	r1, [pc, #24]	; 2f774 <flatcc_builder_enter_user_frame@@Base+0xc0>
   2f758:	ldr	r3, [pc, #24]	; 2f778 <flatcc_builder_enter_user_frame@@Base+0xc4>
   2f75c:	mov	r2, #308	; 0x134
   2f760:	add	r0, pc, r0
   2f764:	add	r1, pc, r1
   2f768:	add	r3, pc, r3
   2f76c:	bl	14f3c <__assert_fail@plt>
   2f770:	andeq	ip, r1, fp, asr #30
   2f774:	andeq	fp, r1, sl, lsl #27
   2f778:	andeq	ip, r1, sp, ror sp

0002f77c <flatcc_builder_exit_user_frame@@Base>:
   2f77c:	ldr	r1, [r0, #224]	; 0xe0
   2f780:	cmp	r1, #0
   2f784:	subne	r2, r1, #4
   2f788:	strne	r2, [r0, #228]	; 0xe4
   2f78c:	ldrne	r2, [r0, #108]	; 0x6c
   2f790:	addne	r1, r2, r1
   2f794:	ldrne	r1, [r1, #-4]
   2f798:	strne	r1, [r0, #224]	; 0xe0
   2f79c:	movne	r0, r1
   2f7a0:	bxne	lr
   2f7a4:	push	{fp, lr}
   2f7a8:	mov	fp, sp
   2f7ac:	ldr	r0, [pc, #24]	; 2f7cc <flatcc_builder_exit_user_frame@@Base+0x50>
   2f7b0:	ldr	r1, [pc, #24]	; 2f7d0 <flatcc_builder_exit_user_frame@@Base+0x54>
   2f7b4:	ldr	r3, [pc, #24]	; 2f7d4 <flatcc_builder_exit_user_frame@@Base+0x58>
   2f7b8:	movw	r2, #542	; 0x21e
   2f7bc:	add	r0, pc, r0
   2f7c0:	add	r1, pc, r1
   2f7c4:	add	r3, pc, r3
   2f7c8:	bl	14f3c <__assert_fail@plt>
   2f7cc:	andeq	fp, r1, sp, asr #27
   2f7d0:	andeq	fp, r1, lr, lsr #26
   2f7d4:	ldrdeq	fp, [r1], -lr

0002f7d8 <flatcc_builder_exit_user_frame_at@@Base>:
   2f7d8:	push	{fp, lr}
   2f7dc:	mov	fp, sp
   2f7e0:	ldr	r2, [r0, #224]	; 0xe0
   2f7e4:	cmp	r2, r1
   2f7e8:	bcc	2f834 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2f7ec:	cmp	r1, #0
   2f7f0:	str	r1, [r0, #224]	; 0xe0
   2f7f4:	subne	r2, r1, #4
   2f7f8:	strne	r2, [r0, #228]	; 0xe4
   2f7fc:	ldrne	r2, [r0, #108]	; 0x6c
   2f800:	addne	r1, r2, r1
   2f804:	ldrne	r1, [r1, #-4]
   2f808:	strne	r1, [r0, #224]	; 0xe0
   2f80c:	movne	r0, r1
   2f810:	popne	{fp, pc}
   2f814:	ldr	r0, [pc, #68]	; 2f860 <flatcc_builder_exit_user_frame_at@@Base+0x88>
   2f818:	ldr	r1, [pc, #68]	; 2f864 <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   2f81c:	ldr	r3, [pc, #68]	; 2f868 <flatcc_builder_exit_user_frame_at@@Base+0x90>
   2f820:	movw	r2, #542	; 0x21e
   2f824:	add	r0, pc, r0
   2f828:	add	r1, pc, r1
   2f82c:	add	r3, pc, r3
   2f830:	bl	14f3c <__assert_fail@plt>
   2f834:	ldr	r0, [pc, #24]	; 2f854 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   2f838:	ldr	r1, [pc, #24]	; 2f858 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   2f83c:	ldr	r3, [pc, #24]	; 2f85c <flatcc_builder_exit_user_frame_at@@Base+0x84>
   2f840:	movw	r2, #551	; 0x227
   2f844:	add	r0, pc, r0
   2f848:	add	r1, pc, r1
   2f84c:	add	r3, pc, r3
   2f850:	bl	14f3c <__assert_fail@plt>
   2f854:	muleq	r1, r8, sp
   2f858:	andeq	fp, r1, r6, lsr #25
   2f85c:	andeq	fp, r1, pc, lsr #27
   2f860:	andeq	fp, r1, r5, ror #26
   2f864:	andeq	fp, r1, r6, asr #25
   2f868:	andeq	fp, r1, r6, ror sp

0002f86c <flatcc_builder_get_current_user_frame@@Base>:
   2f86c:	ldr	r0, [r0, #224]	; 0xe0
   2f870:	bx	lr

0002f874 <flatcc_builder_get_user_frame_ptr@@Base>:
   2f874:	ldr	r0, [r0, #108]	; 0x6c
   2f878:	add	r0, r0, r1
   2f87c:	bx	lr

0002f880 <flatcc_builder_embed_buffer@@Base>:
   2f880:	push	{r4, r5, r6, r7, fp, lr}
   2f884:	add	fp, sp, #16
   2f888:	sub	sp, sp, #88	; 0x58
   2f88c:	mov	r4, r0
   2f890:	ldr	r0, [fp, #8]
   2f894:	mov	r5, r3
   2f898:	mov	r7, r2
   2f89c:	mov	r2, r1
   2f8a0:	sub	r1, fp, #18
   2f8a4:	strh	r0, [fp, #-18]	; 0xffffffee
   2f8a8:	mov	r0, r4
   2f8ac:	ldr	r3, [r4, #152]	; 0x98
   2f8b0:	cmp	r3, #0
   2f8b4:	movwne	r3, #1
   2f8b8:	bl	2fa0c <flatcc_builder_embed_buffer@@Base+0x18c>
   2f8bc:	ldr	r1, [fp, #12]
   2f8c0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2f8c4:	ldr	r0, [r4, #136]	; 0x88
   2f8c8:	mov	r2, #0
   2f8cc:	str	r2, [sp, #8]
   2f8d0:	str	r2, [sp, #12]
   2f8d4:	and	r1, r1, #2
   2f8d8:	sub	r3, r3, #1
   2f8dc:	add	r1, r5, r1, lsl #1
   2f8e0:	sub	r1, r0, r1
   2f8e4:	and	r3, r1, r3
   2f8e8:	add	r1, r3, r5
   2f8ec:	str	r1, [fp, #-24]	; 0xffffffe8
   2f8f0:	ldr	r1, [r4, #152]	; 0x98
   2f8f4:	cmp	r1, #0
   2f8f8:	mov	r1, #0
   2f8fc:	beq	2f91c <flatcc_builder_embed_buffer@@Base+0x9c>
   2f900:	sub	r1, fp, #24
   2f904:	mov	r2, #1
   2f908:	str	r1, [sp, #16]
   2f90c:	mov	r1, #4
   2f910:	str	r1, [sp, #8]
   2f914:	str	r1, [sp, #20]
   2f918:	str	r2, [sp, #12]
   2f91c:	cmp	r5, #0
   2f920:	beq	2f944 <flatcc_builder_embed_buffer@@Base+0xc4>
   2f924:	add	r6, sp, #8
   2f928:	add	r1, r1, r5
   2f92c:	add	r6, r6, r2, lsl #3
   2f930:	add	r2, r2, #1
   2f934:	str	r1, [sp, #8]
   2f938:	str	r7, [r6, #8]
   2f93c:	str	r5, [r6, #12]
   2f940:	str	r2, [sp, #12]
   2f944:	cmp	r3, #0
   2f948:	beq	2f974 <flatcc_builder_embed_buffer@@Base+0xf4>
   2f94c:	add	r1, r1, r3
   2f950:	add	r7, sp, #8
   2f954:	str	r1, [sp, #8]
   2f958:	add	r7, r7, r2, lsl #3
   2f95c:	add	r2, r2, #1
   2f960:	ldr	r6, [pc, #136]	; 2f9f0 <flatcc_builder_embed_buffer@@Base+0x170>
   2f964:	ldr	r6, [pc, r6]
   2f968:	str	r6, [r7, #8]
   2f96c:	str	r3, [r7, #12]
   2f970:	str	r2, [sp, #12]
   2f974:	cmp	r1, #0
   2f978:	ble	2f9d0 <flatcc_builder_embed_buffer@@Base+0x150>
   2f97c:	sub	r5, r0, r1
   2f980:	ldr	r0, [r4, #36]	; 0x24
   2f984:	ldr	r7, [r4, #44]	; 0x2c
   2f988:	str	r1, [sp]
   2f98c:	add	r1, sp, #8
   2f990:	add	r1, r1, #8
   2f994:	mov	r3, r5
   2f998:	blx	r7
   2f99c:	cmp	r0, #0
   2f9a0:	streq	r5, [r4, #136]	; 0x88
   2f9a4:	moveq	r0, r5
   2f9a8:	subeq	sp, fp, #16
   2f9ac:	popeq	{r4, r5, r6, r7, fp, pc}
   2f9b0:	ldr	r0, [pc, #72]	; 2fa00 <flatcc_builder_embed_buffer@@Base+0x180>
   2f9b4:	ldr	r1, [pc, #72]	; 2fa04 <flatcc_builder_embed_buffer@@Base+0x184>
   2f9b8:	ldr	r3, [pc, #72]	; 2fa08 <flatcc_builder_embed_buffer@@Base+0x188>
   2f9bc:	movw	r2, #651	; 0x28b
   2f9c0:	add	r0, pc, r0
   2f9c4:	add	r1, pc, r1
   2f9c8:	add	r3, pc, r3
   2f9cc:	bl	14f3c <__assert_fail@plt>
   2f9d0:	ldr	r0, [pc, #28]	; 2f9f4 <flatcc_builder_embed_buffer@@Base+0x174>
   2f9d4:	ldr	r1, [pc, #28]	; 2f9f8 <flatcc_builder_embed_buffer@@Base+0x178>
   2f9d8:	ldr	r3, [pc, #28]	; 2f9fc <flatcc_builder_embed_buffer@@Base+0x17c>
   2f9dc:	movw	r2, #647	; 0x287
   2f9e0:	add	r0, pc, r0
   2f9e4:	add	r1, pc, r1
   2f9e8:	add	r3, pc, r3
   2f9ec:	bl	14f3c <__assert_fail@plt>
   2f9f0:	andeq	pc, r2, r0, lsl #14
   2f9f4:	andeq	ip, r1, fp, asr #25
   2f9f8:	andeq	fp, r1, sl, lsl #22
   2f9fc:	andeq	ip, r1, r2, lsl #23
   2fa00:	andeq	ip, r1, fp, ror #25
   2fa04:	andeq	fp, r1, sl, lsr #22
   2fa08:	andeq	ip, r1, r2, lsr #23
   2fa0c:	push	{r4, sl, fp, lr}
   2fa10:	add	fp, sp, #8
   2fa14:	sub	sp, sp, #80	; 0x50
   2fa18:	cmp	r2, #0
   2fa1c:	bne	2fa2c <flatcc_builder_embed_buffer@@Base+0x1ac>
   2fa20:	ldrh	r2, [r0, #132]	; 0x84
   2fa24:	cmp	r2, #0
   2fa28:	movweq	r2, #1
   2fa2c:	ldrh	r4, [r1]
   2fa30:	cmp	r4, #4
   2fa34:	movwcc	r4, #4
   2fa38:	cmpcs	r4, r2
   2fa3c:	bcs	2fa4c <flatcc_builder_embed_buffer@@Base+0x1cc>
   2fa40:	cmp	r4, r2
   2fa44:	movcc	r4, r2
   2fa48:	strh	r4, [r1]
   2fa4c:	cmp	r3, #0
   2fa50:	bne	2fac4 <flatcc_builder_embed_buffer@@Base+0x244>
   2fa54:	ldr	r4, [r0, #140]	; 0x8c
   2fa58:	sub	r1, r2, #1
   2fa5c:	ands	r1, r4, r1
   2fa60:	beq	2fac4 <flatcc_builder_embed_buffer@@Base+0x244>
   2fa64:	mov	r2, #1
   2fa68:	str	r1, [sp, #8]
   2fa6c:	str	r1, [sp, #20]
   2fa70:	cmn	r1, #1
   2fa74:	str	r2, [sp, #12]
   2fa78:	ldr	r2, [pc, #172]	; 2fb2c <flatcc_builder_embed_buffer@@Base+0x2ac>
   2fa7c:	ldr	r2, [pc, r2]
   2fa80:	str	r2, [sp, #16]
   2fa84:	add	r2, r1, r4
   2fa88:	str	r2, [r0, #140]	; 0x8c
   2fa8c:	ble	2facc <flatcc_builder_embed_buffer@@Base+0x24c>
   2fa90:	ldr	r2, [r0, #36]	; 0x24
   2fa94:	ldr	ip, [r0, #44]	; 0x2c
   2fa98:	add	r0, sp, #8
   2fa9c:	str	r1, [sp]
   2faa0:	mov	r3, r4
   2faa4:	add	r1, r0, #8
   2faa8:	mov	r0, r2
   2faac:	mov	r2, #1
   2fab0:	blx	ip
   2fab4:	cmp	r0, #0
   2fab8:	bne	2faec <flatcc_builder_embed_buffer@@Base+0x26c>
   2fabc:	cmn	r4, #1
   2fac0:	beq	2fb0c <flatcc_builder_embed_buffer@@Base+0x28c>
   2fac4:	sub	sp, fp, #8
   2fac8:	pop	{r4, sl, fp, pc}
   2facc:	ldr	r0, [pc, #92]	; 2fb30 <flatcc_builder_embed_buffer@@Base+0x2b0>
   2fad0:	ldr	r1, [pc, #92]	; 2fb34 <flatcc_builder_embed_buffer@@Base+0x2b4>
   2fad4:	ldr	r3, [pc, #92]	; 2fb38 <flatcc_builder_embed_buffer@@Base+0x2b8>
   2fad8:	movw	r2, #673	; 0x2a1
   2fadc:	add	r0, pc, r0
   2fae0:	add	r1, pc, r1
   2fae4:	add	r3, pc, r3
   2fae8:	bl	14f3c <__assert_fail@plt>
   2faec:	ldr	r0, [pc, #72]	; 2fb3c <flatcc_builder_embed_buffer@@Base+0x2bc>
   2faf0:	ldr	r1, [pc, #72]	; 2fb40 <flatcc_builder_embed_buffer@@Base+0x2c0>
   2faf4:	ldr	r3, [pc, #72]	; 2fb44 <flatcc_builder_embed_buffer@@Base+0x2c4>
   2faf8:	movw	r2, #677	; 0x2a5
   2fafc:	add	r0, pc, r0
   2fb00:	add	r1, pc, r1
   2fb04:	add	r3, pc, r3
   2fb08:	bl	14f3c <__assert_fail@plt>
   2fb0c:	ldr	r0, [pc, #52]	; 2fb48 <flatcc_builder_embed_buffer@@Base+0x2c8>
   2fb10:	ldr	r1, [pc, #52]	; 2fb4c <flatcc_builder_embed_buffer@@Base+0x2cc>
   2fb14:	ldr	r3, [pc, #52]	; 2fb50 <flatcc_builder_embed_buffer@@Base+0x2d0>
   2fb18:	movw	r2, #702	; 0x2be
   2fb1c:	add	r0, pc, r0
   2fb20:	add	r1, pc, r1
   2fb24:	add	r3, pc, r3
   2fb28:	bl	14f3c <__assert_fail@plt>
   2fb2c:	andeq	pc, r2, r8, ror #11
   2fb30:	andeq	ip, r1, pc, asr #23
   2fb34:	andeq	fp, r1, lr, lsl #20
   2fb38:	andeq	ip, r1, r2, asr #22
   2fb3c:	andeq	ip, r1, pc, lsr #23
   2fb40:	andeq	fp, r1, lr, ror #19
   2fb44:	andeq	ip, r1, r2, lsr #22
   2fb48:	andeq	ip, r1, pc, lsl #23
   2fb4c:	andeq	fp, r1, lr, asr #19
   2fb50:	andeq	ip, r1, r4, lsl #20

0002fb54 <flatcc_builder_create_buffer@@Base>:
   2fb54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fb58:	add	fp, sp, #28
   2fb5c:	sub	sp, sp, #100	; 0x64
   2fb60:	ldr	r8, [fp, #12]
   2fb64:	mov	r4, r0
   2fb68:	ldr	r0, [fp, #8]
   2fb6c:	mov	r7, r1
   2fb70:	mov	r5, #0
   2fb74:	mov	r9, r3
   2fb78:	sub	r1, fp, #30
   2fb7c:	str	r5, [sp, #12]
   2fb80:	and	r6, r8, #1
   2fb84:	strh	r0, [fp, #-30]	; 0xffffffe2
   2fb88:	mov	r0, r4
   2fb8c:	mov	r3, r6
   2fb90:	bl	2fa0c <flatcc_builder_embed_buffer@@Base+0x18c>
   2fb94:	ldrh	r0, [r4, #128]	; 0x80
   2fb98:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2fb9c:	cmp	r0, r1
   2fba0:	strhcc	r1, [r4, #128]	; 0x80
   2fba4:	cmp	r7, #0
   2fba8:	stmib	sp, {r6, r9}
   2fbac:	beq	2fbc8 <flatcc_builder_create_buffer@@Base+0x74>
   2fbb0:	ldr	r5, [r7]
   2fbb4:	cmp	r5, #0
   2fbb8:	str	r5, [sp, #12]
   2fbbc:	movwne	r5, #1
   2fbc0:	lsl	r7, r5, #2
   2fbc4:	b	2fbcc <flatcc_builder_create_buffer@@Base+0x78>
   2fbc8:	mov	r7, #0
   2fbcc:	ldr	r9, [r4, #136]	; 0x88
   2fbd0:	mov	sl, #4
   2fbd4:	mvn	r6, #3
   2fbd8:	mov	r3, #0
   2fbdc:	ands	ip, r8, #3
   2fbe0:	and	r2, sl, r8, lsl #1
   2fbe4:	str	r3, [sp, #20]
   2fbe8:	str	r3, [sp, #16]
   2fbec:	sub	r2, r6, r2
   2fbf0:	sub	r6, r1, #1
   2fbf4:	mov	r1, #4
   2fbf8:	add	r2, r2, r9
   2fbfc:	sub	r2, r2, r7
   2fc00:	beq	2fc24 <flatcc_builder_create_buffer@@Base+0xd0>
   2fc04:	sub	r1, fp, #40	; 0x28
   2fc08:	mov	r3, #1
   2fc0c:	str	r1, [sp, #24]
   2fc10:	mov	r1, #4
   2fc14:	str	r1, [sp, #16]
   2fc18:	str	r1, [sp, #28]
   2fc1c:	mov	r1, #8
   2fc20:	str	r3, [sp, #20]
   2fc24:	add	lr, sp, #16
   2fc28:	and	r6, r2, r6
   2fc2c:	sub	r0, fp, #36	; 0x24
   2fc30:	str	r1, [sp, #16]
   2fc34:	cmp	r5, #0
   2fc38:	add	r2, lr, r3, lsl #3
   2fc3c:	str	r0, [r2, #8]
   2fc40:	str	sl, [r2, #12]
   2fc44:	add	r2, r3, #1
   2fc48:	str	r2, [sp, #20]
   2fc4c:	beq	2fc70 <flatcc_builder_create_buffer@@Base+0x11c>
   2fc50:	add	r1, r1, r7
   2fc54:	add	r0, lr, r2, lsl #3
   2fc58:	add	r2, sp, #12
   2fc5c:	str	r1, [sp, #16]
   2fc60:	str	r2, [r0, #8]
   2fc64:	orr	r2, r3, #2
   2fc68:	str	r7, [r0, #12]
   2fc6c:	str	r2, [sp, #20]
   2fc70:	cmp	r6, #0
   2fc74:	beq	2fc9c <flatcc_builder_create_buffer@@Base+0x148>
   2fc78:	add	r1, r1, r6
   2fc7c:	add	r0, lr, r2, lsl #3
   2fc80:	add	r2, r2, #1
   2fc84:	str	r1, [sp, #16]
   2fc88:	ldr	r3, [pc, #224]	; 2fd70 <flatcc_builder_create_buffer@@Base+0x21c>
   2fc8c:	ldr	r3, [pc, r3]
   2fc90:	str	r3, [r0, #8]
   2fc94:	str	r6, [r0, #12]
   2fc98:	str	r2, [sp, #20]
   2fc9c:	ldr	r5, [sp, #4]
   2fca0:	sub	r7, r9, r1
   2fca4:	cmp	ip, #0
   2fca8:	mov	r6, #144	; 0x90
   2fcac:	ldr	r3, [sp, #8]
   2fcb0:	mov	r0, r7
   2fcb4:	addne	r0, r0, #4
   2fcb8:	cmp	r5, #0
   2fcbc:	sub	r3, r3, r0
   2fcc0:	movweq	r6, #140	; 0x8c
   2fcc4:	cmp	r1, #0
   2fcc8:	ldr	r6, [r4, r6]
   2fccc:	str	r3, [fp, #-36]	; 0xffffffdc
   2fcd0:	sub	r0, r6, r0
   2fcd4:	str	r0, [fp, #-40]	; 0xffffffd8
   2fcd8:	ble	2fd30 <flatcc_builder_create_buffer@@Base+0x1dc>
   2fcdc:	ldr	r0, [r4, #36]	; 0x24
   2fce0:	ldr	r6, [r4, #44]	; 0x2c
   2fce4:	str	r1, [sp]
   2fce8:	add	r1, lr, #8
   2fcec:	mov	r3, r7
   2fcf0:	blx	r6
   2fcf4:	cmp	r0, #0
   2fcf8:	bne	2fd50 <flatcc_builder_create_buffer@@Base+0x1fc>
   2fcfc:	cmp	r7, #0
   2fd00:	str	r7, [r4, #136]	; 0x88
   2fd04:	movne	r0, r7
   2fd08:	subne	sp, fp, #28
   2fd0c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fd10:	ldr	r0, [pc, #116]	; 2fd8c <flatcc_builder_create_buffer@@Base+0x238>
   2fd14:	ldr	r1, [pc, #116]	; 2fd90 <flatcc_builder_create_buffer@@Base+0x23c>
   2fd18:	ldr	r3, [pc, #116]	; 2fd94 <flatcc_builder_create_buffer@@Base+0x240>
   2fd1c:	mov	r2, #772	; 0x304
   2fd20:	add	r0, pc, r0
   2fd24:	add	r1, pc, r1
   2fd28:	add	r3, pc, r3
   2fd2c:	bl	14f3c <__assert_fail@plt>
   2fd30:	ldr	r0, [pc, #60]	; 2fd74 <flatcc_builder_create_buffer@@Base+0x220>
   2fd34:	ldr	r1, [pc, #60]	; 2fd78 <flatcc_builder_create_buffer@@Base+0x224>
   2fd38:	ldr	r3, [pc, #60]	; 2fd7c <flatcc_builder_create_buffer@@Base+0x228>
   2fd3c:	movw	r2, #647	; 0x287
   2fd40:	add	r0, pc, r0
   2fd44:	add	r1, pc, r1
   2fd48:	add	r3, pc, r3
   2fd4c:	bl	14f3c <__assert_fail@plt>
   2fd50:	ldr	r0, [pc, #40]	; 2fd80 <flatcc_builder_create_buffer@@Base+0x22c>
   2fd54:	ldr	r1, [pc, #40]	; 2fd84 <flatcc_builder_create_buffer@@Base+0x230>
   2fd58:	ldr	r3, [pc, #40]	; 2fd88 <flatcc_builder_create_buffer@@Base+0x234>
   2fd5c:	movw	r2, #651	; 0x28b
   2fd60:	add	r0, pc, r0
   2fd64:	add	r1, pc, r1
   2fd68:	add	r3, pc, r3
   2fd6c:	bl	14f3c <__assert_fail@plt>
   2fd70:	ldrdeq	pc, [r2], -r8
   2fd74:	andeq	ip, r1, fp, ror #18
   2fd78:	andeq	fp, r1, sl, lsr #15
   2fd7c:	andeq	ip, r1, r2, lsr #16
   2fd80:	andeq	ip, r1, fp, asr #18
   2fd84:	andeq	fp, r1, sl, lsl #15
   2fd88:	andeq	ip, r1, r2, lsl #16
   2fd8c:	andeq	ip, r1, fp, lsl #19
   2fd90:	andeq	fp, r1, sl, asr #15
   2fd94:	andeq	fp, r1, r8, lsl r9

0002fd98 <flatcc_builder_create_struct@@Base>:
   2fd98:	push	{r4, r5, r6, sl, fp, lr}
   2fd9c:	add	fp, sp, #16
   2fda0:	sub	sp, sp, #80	; 0x50
   2fda4:	cmp	r3, #0
   2fda8:	beq	2fe80 <flatcc_builder_create_struct@@Base+0xe8>
   2fdac:	mov	r5, r0
   2fdb0:	ldrh	r0, [r0, #128]	; 0x80
   2fdb4:	mov	r4, #0
   2fdb8:	cmp	r0, r3
   2fdbc:	strhcc	r3, [r5, #128]	; 0x80
   2fdc0:	sub	r3, r3, #1
   2fdc4:	cmp	r2, #0
   2fdc8:	ldr	r0, [r5, #136]	; 0x88
   2fdcc:	str	r4, [sp, #12]
   2fdd0:	str	r4, [sp, #8]
   2fdd4:	movne	r4, #1
   2fdd8:	strne	r1, [sp, #16]
   2fddc:	strne	r2, [sp, #8]
   2fde0:	strne	r2, [sp, #20]
   2fde4:	strne	r4, [sp, #12]
   2fde8:	sub	r6, r0, r2
   2fdec:	and	r3, r6, r3
   2fdf0:	cmp	r3, #0
   2fdf4:	beq	2fe20 <flatcc_builder_create_struct@@Base+0x88>
   2fdf8:	add	r2, r3, r2
   2fdfc:	add	r1, sp, #8
   2fe00:	str	r2, [sp, #8]
   2fe04:	add	r1, r1, r4, lsl #3
   2fe08:	add	r4, r4, #1
   2fe0c:	ldr	r6, [pc, #172]	; 2fec0 <flatcc_builder_create_struct@@Base+0x128>
   2fe10:	ldr	r6, [pc, r6]
   2fe14:	str	r6, [r1, #8]
   2fe18:	str	r3, [r1, #12]
   2fe1c:	str	r4, [sp, #12]
   2fe20:	cmp	r2, #0
   2fe24:	ble	2fea0 <flatcc_builder_create_struct@@Base+0x108>
   2fe28:	sub	r6, r0, r2
   2fe2c:	ldr	r0, [r5, #36]	; 0x24
   2fe30:	ldr	ip, [r5, #44]	; 0x2c
   2fe34:	add	r1, sp, #8
   2fe38:	str	r2, [sp]
   2fe3c:	mov	r2, r4
   2fe40:	add	r1, r1, #8
   2fe44:	mov	r3, r6
   2fe48:	blx	ip
   2fe4c:	cmp	r0, #0
   2fe50:	streq	r6, [r5, #136]	; 0x88
   2fe54:	moveq	r0, r6
   2fe58:	subeq	sp, fp, #16
   2fe5c:	popeq	{r4, r5, r6, sl, fp, pc}
   2fe60:	ldr	r0, [pc, #116]	; 2fedc <flatcc_builder_create_struct@@Base+0x144>
   2fe64:	ldr	r1, [pc, #116]	; 2fee0 <flatcc_builder_create_struct@@Base+0x148>
   2fe68:	ldr	r3, [pc, #116]	; 2fee4 <flatcc_builder_create_struct@@Base+0x14c>
   2fe6c:	movw	r2, #651	; 0x28b
   2fe70:	add	r0, pc, r0
   2fe74:	add	r1, pc, r1
   2fe78:	add	r3, pc, r3
   2fe7c:	bl	14f3c <__assert_fail@plt>
   2fe80:	ldr	r0, [pc, #60]	; 2fec4 <flatcc_builder_create_struct@@Base+0x12c>
   2fe84:	ldr	r1, [pc, #60]	; 2fec8 <flatcc_builder_create_struct@@Base+0x130>
   2fe88:	ldr	r3, [pc, #60]	; 2fecc <flatcc_builder_create_struct@@Base+0x134>
   2fe8c:	movw	r2, #783	; 0x30f
   2fe90:	add	r0, pc, r0
   2fe94:	add	r1, pc, r1
   2fe98:	add	r3, pc, r3
   2fe9c:	bl	14f3c <__assert_fail@plt>
   2fea0:	ldr	r0, [pc, #40]	; 2fed0 <flatcc_builder_create_struct@@Base+0x138>
   2fea4:	ldr	r1, [pc, #40]	; 2fed4 <flatcc_builder_create_struct@@Base+0x13c>
   2fea8:	ldr	r3, [pc, #40]	; 2fed8 <flatcc_builder_create_struct@@Base+0x140>
   2feac:	movw	r2, #647	; 0x287
   2feb0:	add	r0, pc, r0
   2feb4:	add	r1, pc, r1
   2feb8:	add	r3, pc, r3
   2febc:	bl	14f3c <__assert_fail@plt>
   2fec0:	andeq	pc, r2, r4, asr r2	; <UNPREDICTABLE>
   2fec4:	andeq	fp, r1, r3, lsr r8
   2fec8:	andeq	fp, r1, sl, asr r6
   2fecc:	andeq	fp, r1, r6, lsr r8
   2fed0:	strdeq	ip, [r1], -fp
   2fed4:	andeq	fp, r1, sl, lsr r6
   2fed8:			; <UNDEFINED> instruction: 0x0001c6b2
   2fedc:	andeq	ip, r1, fp, lsr r8
   2fee0:	andeq	fp, r1, sl, ror r6
   2fee4:	strdeq	ip, [r1], -r2

0002fee8 <flatcc_builder_start_buffer@@Base>:
   2fee8:	push	{r4, r5, r6, r7, fp, lr}
   2feec:	add	fp, sp, #16
   2fef0:	mov	r5, r1
   2fef4:	ldrh	r1, [r0, #128]	; 0x80
   2fef8:	mov	r6, r3
   2fefc:	mov	r7, r2
   2ff00:	mov	r4, r0
   2ff04:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   2ff08:	mov	r1, r0
   2ff0c:	mvn	r0, #0
   2ff10:	cmp	r1, #0
   2ff14:	popne	{r4, r5, r6, r7, fp, pc}
   2ff18:	mov	r0, #1
   2ff1c:	cmp	r5, #0
   2ff20:	strh	r0, [r4, #128]	; 0x80
   2ff24:	ldrh	r1, [r4, #132]	; 0x84
   2ff28:	ldr	r2, [r4, #32]
   2ff2c:	strh	r1, [r2, #34]	; 0x22
   2ff30:	strh	r7, [r4, #132]	; 0x84
   2ff34:	ldrh	r1, [r4, #164]	; 0xa4
   2ff38:	ldr	r2, [r4, #32]
   2ff3c:	strh	r1, [r2, #32]
   2ff40:	strh	r6, [r4, #164]	; 0xa4
   2ff44:	ldr	r1, [r4, #32]
   2ff48:	ldr	r2, [r4, #144]	; 0x90
   2ff4c:	str	r2, [r1, #20]
   2ff50:	ldr	r1, [r4, #32]
   2ff54:	ldr	r2, [r4, #152]	; 0x98
   2ff58:	str	r2, [r1, #28]
   2ff5c:	ldr	r3, [r4, #148]	; 0x94
   2ff60:	ldr	r1, [r4, #32]
   2ff64:	ldr	r2, [r4, #136]	; 0x88
   2ff68:	ldr	r7, [r4, #168]	; 0xa8
   2ff6c:	add	r6, r3, #1
   2ff70:	str	r2, [r4, #144]	; 0x90
   2ff74:	str	r6, [r4, #148]	; 0x94
   2ff78:	str	r3, [r4, #152]	; 0x98
   2ff7c:	str	r7, [r1, #16]
   2ff80:	ldr	r1, [pc, #28]	; 2ffa4 <flatcc_builder_start_buffer@@Base+0xbc>
   2ff84:	ldr	r1, [pc, r1]
   2ff88:	movne	r1, r5
   2ff8c:	ldr	r1, [r1]
   2ff90:	str	r1, [r4, #168]	; 0xa8
   2ff94:	ldr	r1, [r4, #32]
   2ff98:	strh	r0, [r1, #14]
   2ff9c:	mov	r0, #0
   2ffa0:	pop	{r4, r5, r6, r7, fp, pc}
   2ffa4:	andeq	pc, r2, r0, ror #1
   2ffa8:	push	{r4, r5, r6, r7, fp, lr}
   2ffac:	add	fp, sp, #16
   2ffb0:	sub	sp, sp, #8
   2ffb4:	mov	r5, r1
   2ffb8:	ldr	r1, [r0, #156]	; 0x9c
   2ffbc:	ldr	r2, [r0, #160]	; 0xa0
   2ffc0:	mov	r4, r0
   2ffc4:	add	r0, r1, #1
   2ffc8:	cmp	r1, r2
   2ffcc:	str	r0, [r4, #156]	; 0x9c
   2ffd0:	bge	2ffe4 <flatcc_builder_start_buffer@@Base+0xfc>
   2ffd4:	ldr	r0, [r4, #32]
   2ffd8:	add	r0, r0, #36	; 0x24
   2ffdc:	str	r0, [r4, #32]
   2ffe0:	b	30078 <flatcc_builder_start_buffer@@Base+0x190>
   2ffe4:	ldr	r2, [r4, #176]	; 0xb0
   2ffe8:	mvn	r6, #0
   2ffec:	cmp	r2, #1
   2fff0:	cmpge	r1, r2
   2fff4:	bge	300b0 <flatcc_builder_start_buffer@@Base+0x1c8>
   2fff8:	add	r7, r0, r0, lsl #3
   2fffc:	ldr	r0, [r4, #88]	; 0x58
   30000:	lsl	r2, r7, #2
   30004:	cmp	r2, r0
   30008:	bls	30030 <flatcc_builder_start_buffer@@Base+0x148>
   3000c:	ldr	r0, [r4, #40]	; 0x28
   30010:	ldr	ip, [r4, #48]	; 0x30
   30014:	mov	r3, #4
   30018:	add	r1, r4, #84	; 0x54
   3001c:	str	r3, [sp]
   30020:	mov	r3, #0
   30024:	blx	ip
   30028:	cmp	r0, #0
   3002c:	bne	300bc <flatcc_builder_start_buffer@@Base+0x1d4>
   30030:	ldr	r1, [r4, #84]	; 0x54
   30034:	mvn	r0, #35	; 0x23
   30038:	add	r0, r0, r7, lsl #2
   3003c:	adds	r0, r0, r1
   30040:	str	r0, [r4, #32]
   30044:	beq	300b0 <flatcc_builder_start_buffer@@Base+0x1c8>
   30048:	ldr	r1, [r4, #88]	; 0x58
   3004c:	movw	r3, #36409	; 0x8e39
   30050:	ldr	r2, [r4, #176]	; 0xb0
   30054:	movt	r3, #14563	; 0x38e3
   30058:	umull	r1, r3, r1, r3
   3005c:	lsr	r1, r3, #3
   30060:	cmp	r2, r3, lsr #3
   30064:	mov	r3, r1
   30068:	movlt	r3, r2
   3006c:	cmp	r2, #0
   30070:	movle	r3, r1
   30074:	str	r3, [r4, #160]	; 0xa0
   30078:	ldr	r1, [r4, #20]
   3007c:	mvn	r3, #3
   30080:	mov	r6, #0
   30084:	str	r1, [r0, #8]
   30088:	ldrh	r2, [r4, #130]	; 0x82
   3008c:	strh	r2, [r0, #12]
   30090:	strh	r5, [r4, #130]	; 0x82
   30094:	ldr	r2, [r4, #28]
   30098:	stm	r0, {r2, r3}
   3009c:	add	r0, r1, r2
   300a0:	str	r6, [r4, #20]
   300a4:	add	r0, r0, #7
   300a8:	bic	r0, r0, #7
   300ac:	str	r0, [r4, #28]
   300b0:	mov	r0, r6
   300b4:	sub	sp, fp, #16
   300b8:	pop	{r4, r5, r6, r7, fp, pc}
   300bc:	ldr	r0, [pc, #24]	; 300dc <flatcc_builder_start_buffer@@Base+0x1f4>
   300c0:	ldr	r1, [pc, #24]	; 300e0 <flatcc_builder_start_buffer@@Base+0x1f8>
   300c4:	ldr	r3, [pc, #24]	; 300e4 <flatcc_builder_start_buffer@@Base+0x1fc>
   300c8:	mov	r2, #308	; 0x134
   300cc:	add	r0, pc, r0
   300d0:	add	r1, pc, r1
   300d4:	add	r3, pc, r3
   300d8:	bl	14f3c <__assert_fail@plt>
   300dc:	ldrdeq	ip, [r1], -pc	; <UNPREDICTABLE>
   300e0:	andeq	fp, r1, lr, lsl r4
   300e4:	andeq	ip, r1, r1, lsl r4

000300e8 <flatcc_builder_end_buffer@@Base>:
   300e8:	push	{r4, r5, r6, sl, fp, lr}
   300ec:	add	fp, sp, #16
   300f0:	sub	sp, sp, #8
   300f4:	mov	r4, r0
   300f8:	ldr	r0, [r0, #32]
   300fc:	ldrh	r0, [r0, #14]
   30100:	cmp	r0, #1
   30104:	bne	301f8 <flatcc_builder_end_buffer@@Base+0x110>
   30108:	mov	r3, r1
   3010c:	ldr	r1, [r4, #152]	; 0x98
   30110:	ldrh	r0, [r4, #164]	; 0xa4
   30114:	ldrh	r2, [r4, #132]	; 0x84
   30118:	cmp	r1, #0
   3011c:	ldrh	r1, [r4, #128]	; 0x80
   30120:	and	r0, r0, #2
   30124:	orrne	r0, r0, #1
   30128:	cmp	r1, r2
   3012c:	movcc	r1, r2
   30130:	strhcc	r2, [r4, #128]	; 0x80
   30134:	str	r0, [sp, #4]
   30138:	mov	r0, r4
   3013c:	str	r1, [sp]
   30140:	add	r1, r4, #168	; 0xa8
   30144:	bl	2fb54 <flatcc_builder_create_buffer@@Base>
   30148:	mov	r6, r0
   3014c:	cmp	r0, #0
   30150:	beq	301ec <flatcc_builder_end_buffer@@Base+0x104>
   30154:	ldr	r1, [r4, #32]
   30158:	ldr	r0, [r4, #16]
   3015c:	ldr	r2, [r4, #20]
   30160:	ldr	r3, [r1, #20]
   30164:	str	r3, [r4, #144]	; 0x90
   30168:	ldr	r3, [r1, #28]
   3016c:	str	r3, [r4, #152]	; 0x98
   30170:	ldr	r3, [r1, #16]
   30174:	str	r3, [r4, #168]	; 0xa8
   30178:	ldrh	r1, [r1, #32]
   3017c:	strh	r1, [r4, #164]	; 0xa4
   30180:	mov	r1, #0
   30184:	bl	14ee8 <memset@plt>
   30188:	ldr	r0, [r4, #32]
   3018c:	ldr	r1, [r4, #60]	; 0x3c
   30190:	ldr	r2, [r4, #64]	; 0x40
   30194:	ldr	r3, [r0, #8]
   30198:	str	r3, [r4, #20]
   3019c:	ldr	r3, [r0]
   301a0:	str	r3, [r4, #28]
   301a4:	add	r1, r1, r3
   301a8:	ldr	r5, [r0, #4]
   301ac:	str	r1, [r4, #16]
   301b0:	sub	r1, r2, r3
   301b4:	cmp	r1, r5
   301b8:	movhi	r1, r5
   301bc:	str	r1, [r4, #24]
   301c0:	ldrh	r1, [r4, #130]	; 0x82
   301c4:	ldrh	r2, [r4, #128]	; 0x80
   301c8:	cmp	r2, r1
   301cc:	strhcc	r1, [r4, #128]	; 0x80
   301d0:	ldrh	r1, [r0, #12]
   301d4:	sub	r0, r0, #36	; 0x24
   301d8:	str	r0, [r4, #32]
   301dc:	strh	r1, [r4, #130]	; 0x82
   301e0:	ldr	r0, [r4, #156]	; 0x9c
   301e4:	sub	r0, r0, #1
   301e8:	str	r0, [r4, #156]	; 0x9c
   301ec:	mov	r0, r6
   301f0:	sub	sp, fp, #16
   301f4:	pop	{r4, r5, r6, sl, fp, pc}
   301f8:	ldr	r0, [pc, #24]	; 30218 <flatcc_builder_end_buffer@@Base+0x130>
   301fc:	ldr	r1, [pc, #24]	; 3021c <flatcc_builder_end_buffer@@Base+0x134>
   30200:	ldr	r3, [pc, #24]	; 30220 <flatcc_builder_end_buffer@@Base+0x138>
   30204:	movw	r2, #838	; 0x346
   30208:	add	r0, pc, r0
   3020c:	add	r1, pc, r1
   30210:	add	r3, pc, r3
   30214:	bl	14f3c <__assert_fail@plt>
   30218:	andeq	fp, r1, ip, lsr #10
   3021c:	andeq	fp, r1, r2, ror #5
   30220:	andeq	fp, r1, r0, asr r5

00030224 <flatcc_builder_start_struct@@Base>:
   30224:	push	{r4, r5, r6, r7, fp, lr}
   30228:	add	fp, sp, #16
   3022c:	sub	sp, sp, #8
   30230:	mov	r6, r1
   30234:	mov	r1, r2
   30238:	mov	r4, r0
   3023c:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   30240:	mov	r5, #0
   30244:	cmp	r0, #0
   30248:	bne	302f8 <flatcc_builder_start_struct@@Base+0xd4>
   3024c:	ldr	r2, [r4, #32]
   30250:	mov	r0, #2
   30254:	mvn	r7, #3
   30258:	strh	r0, [r2, #14]
   3025c:	ldr	r1, [r4, #28]
   30260:	ldr	r3, [r4, #64]	; 0x40
   30264:	ldr	r0, [r4, #60]	; 0x3c
   30268:	sub	r3, r3, r1
   3026c:	add	r0, r0, r1
   30270:	cmn	r3, #4
   30274:	str	r0, [r4, #16]
   30278:	movcs	r3, r7
   3027c:	str	r3, [r4, #24]
   30280:	str	r7, [r2, #4]
   30284:	ldr	r7, [r4, #20]
   30288:	add	r2, r7, r6
   3028c:	cmp	r2, r3
   30290:	str	r2, [r4, #20]
   30294:	bcc	302f4 <flatcc_builder_start_struct@@Base+0xd0>
   30298:	ldr	r0, [r4, #40]	; 0x28
   3029c:	ldr	r6, [r4, #48]	; 0x30
   302a0:	add	r1, r1, r2
   302a4:	mov	r3, #1
   302a8:	str	r3, [sp]
   302ac:	add	r2, r1, #1
   302b0:	add	r1, r4, #60	; 0x3c
   302b4:	mov	r3, #1
   302b8:	blx	r6
   302bc:	cmp	r0, #0
   302c0:	bne	302f8 <flatcc_builder_start_struct@@Base+0xd4>
   302c4:	ldr	r1, [r4, #28]
   302c8:	ldr	r0, [r4, #60]	; 0x3c
   302cc:	ldr	r3, [r4, #64]	; 0x40
   302d0:	ldr	r2, [r4, #32]
   302d4:	add	r0, r0, r1
   302d8:	sub	r1, r3, r1
   302dc:	mvn	r3, #3
   302e0:	cmn	r1, #4
   302e4:	str	r0, [r4, #16]
   302e8:	movcs	r1, r3
   302ec:	str	r1, [r4, #24]
   302f0:	str	r3, [r2, #4]
   302f4:	add	r5, r0, r7
   302f8:	mov	r0, r5
   302fc:	sub	sp, fp, #16
   30300:	pop	{r4, r5, r6, r7, fp, pc}

00030304 <flatcc_builder_struct_edit@@Base>:
   30304:	ldr	r0, [r0, #16]
   30308:	bx	lr

0003030c <flatcc_builder_end_struct@@Base>:
   3030c:	push	{r4, r5, fp, lr}
   30310:	add	fp, sp, #8
   30314:	mov	r4, r0
   30318:	ldr	r0, [r0, #32]
   3031c:	ldrh	r0, [r0, #14]
   30320:	cmp	r0, #2
   30324:	bne	303c4 <flatcc_builder_end_struct@@Base+0xb8>
   30328:	ldrh	r3, [r4, #130]	; 0x82
   3032c:	ldr	r1, [r4, #16]
   30330:	ldr	r2, [r4, #20]
   30334:	mov	r0, r4
   30338:	bl	2fd98 <flatcc_builder_create_struct@@Base>
   3033c:	mov	r5, r0
   30340:	cmp	r0, #0
   30344:	beq	303bc <flatcc_builder_end_struct@@Base+0xb0>
   30348:	ldr	r0, [r4, #16]
   3034c:	ldr	r2, [r4, #20]
   30350:	mov	r1, #0
   30354:	bl	14ee8 <memset@plt>
   30358:	ldr	r0, [r4, #32]
   3035c:	ldr	r1, [r4, #60]	; 0x3c
   30360:	ldr	ip, [r4, #64]	; 0x40
   30364:	ldr	r3, [r0, #8]
   30368:	str	r3, [r4, #20]
   3036c:	ldr	r3, [r0]
   30370:	str	r3, [r4, #28]
   30374:	add	r1, r1, r3
   30378:	ldr	r2, [r0, #4]
   3037c:	str	r1, [r4, #16]
   30380:	sub	r1, ip, r3
   30384:	cmp	r1, r2
   30388:	movhi	r1, r2
   3038c:	str	r1, [r4, #24]
   30390:	ldrh	r1, [r4, #130]	; 0x82
   30394:	ldrh	r2, [r4, #128]	; 0x80
   30398:	cmp	r2, r1
   3039c:	strhcc	r1, [r4, #128]	; 0x80
   303a0:	ldrh	r1, [r0, #12]
   303a4:	sub	r0, r0, #36	; 0x24
   303a8:	str	r0, [r4, #32]
   303ac:	strh	r1, [r4, #130]	; 0x82
   303b0:	ldr	r0, [r4, #156]	; 0x9c
   303b4:	sub	r0, r0, #1
   303b8:	str	r0, [r4, #156]	; 0x9c
   303bc:	mov	r0, r5
   303c0:	pop	{r4, r5, fp, pc}
   303c4:	ldr	r0, [pc, #24]	; 303e4 <flatcc_builder_end_struct@@Base+0xd8>
   303c8:	ldr	r1, [pc, #24]	; 303e8 <flatcc_builder_end_struct@@Base+0xdc>
   303cc:	ldr	r3, [pc, #24]	; 303ec <flatcc_builder_end_struct@@Base+0xe0>
   303d0:	mov	r2, #872	; 0x368
   303d4:	add	r0, pc, r0
   303d8:	add	r1, pc, r1
   303dc:	add	r3, pc, r3
   303e0:	bl	14f3c <__assert_fail@plt>
   303e4:	andeq	fp, r1, r5, ror #7
   303e8:	andeq	fp, r1, r6, lsl r1
   303ec:	andeq	fp, r1, r9, lsl #8

000303f0 <flatcc_builder_extend_vector@@Base>:
   303f0:	push	{r4, r5, fp, lr}
   303f4:	add	fp, sp, #8
   303f8:	sub	sp, sp, #8
   303fc:	mov	r4, r0
   30400:	ldr	r0, [r0, #32]
   30404:	ldr	r2, [r0, #20]
   30408:	adds	r2, r2, r1
   3040c:	bcs	304c4 <flatcc_builder_extend_vector@@Base+0xd4>
   30410:	ldr	r3, [r0, #24]
   30414:	cmp	r2, r3
   30418:	bhi	304c4 <flatcc_builder_extend_vector@@Base+0xd4>
   3041c:	str	r2, [r0, #20]
   30420:	ldr	r2, [r4, #32]
   30424:	ldr	r5, [r4, #20]
   30428:	ldr	r0, [r4, #24]
   3042c:	ldr	r2, [r2, #16]
   30430:	mla	r1, r2, r1, r5
   30434:	cmp	r1, r0
   30438:	str	r1, [r4, #20]
   3043c:	bcs	30448 <flatcc_builder_extend_vector@@Base+0x58>
   30440:	ldr	r0, [r4, #16]
   30444:	b	304b8 <flatcc_builder_extend_vector@@Base+0xc8>
   30448:	ldr	r2, [r4, #28]
   3044c:	ldr	r0, [r4, #40]	; 0x28
   30450:	ldr	ip, [r4, #48]	; 0x30
   30454:	mov	r3, #1
   30458:	str	r3, [sp]
   3045c:	mov	r3, #1
   30460:	add	r1, r1, r2
   30464:	add	r2, r1, #1
   30468:	add	r1, r4, #60	; 0x3c
   3046c:	blx	ip
   30470:	mov	r1, r0
   30474:	mov	r0, #0
   30478:	cmp	r1, #0
   3047c:	beq	30488 <flatcc_builder_extend_vector@@Base+0x98>
   30480:	sub	sp, fp, #8
   30484:	pop	{r4, r5, fp, pc}
   30488:	ldr	r1, [r4, #28]
   3048c:	ldr	r0, [r4, #60]	; 0x3c
   30490:	ldr	r3, [r4, #64]	; 0x40
   30494:	ldr	r2, [r4, #32]
   30498:	add	r0, r0, r1
   3049c:	sub	r1, r3, r1
   304a0:	mvn	r3, #3
   304a4:	cmn	r1, #4
   304a8:	str	r0, [r4, #16]
   304ac:	movcs	r1, r3
   304b0:	str	r1, [r4, #24]
   304b4:	str	r3, [r2, #4]
   304b8:	add	r0, r0, r5
   304bc:	sub	sp, fp, #8
   304c0:	pop	{r4, r5, fp, pc}
   304c4:	ldr	r0, [pc, #24]	; 304e4 <flatcc_builder_extend_vector@@Base+0xf4>
   304c8:	ldr	r1, [pc, #24]	; 304e8 <flatcc_builder_extend_vector@@Base+0xf8>
   304cc:	ldr	r3, [pc, #24]	; 304ec <flatcc_builder_extend_vector@@Base+0xfc>
   304d0:	mov	r2, #892	; 0x37c
   304d4:	add	r0, pc, r0
   304d8:	add	r1, pc, r1
   304dc:	add	r3, pc, r3
   304e0:	bl	14f3c <__assert_fail@plt>
   304e4:	andeq	ip, r1, r0, ror #1
   304e8:	andeq	fp, r1, r6, lsl r0
   304ec:	strdeq	ip, [r1], -r3

000304f0 <flatcc_builder_vector_push@@Base>:
   304f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   304f4:	add	fp, sp, #24
   304f8:	sub	sp, sp, #8
   304fc:	mov	r5, r0
   30500:	ldr	r0, [r0, #32]
   30504:	mov	r8, r1
   30508:	ldrh	r1, [r0, #14]
   3050c:	cmp	r1, #4
   30510:	bne	305e8 <flatcc_builder_vector_push@@Base+0xf8>
   30514:	ldr	r1, [r0, #20]
   30518:	ldr	r2, [r0, #24]
   3051c:	cmp	r1, r2
   30520:	bhi	30608 <flatcc_builder_vector_push@@Base+0x118>
   30524:	add	r1, r1, #1
   30528:	str	r1, [r0, #20]
   3052c:	ldr	r1, [r5, #32]
   30530:	ldr	r4, [r5, #20]
   30534:	ldr	r0, [r5, #24]
   30538:	ldr	r6, [r1, #16]
   3053c:	add	r1, r4, r6
   30540:	cmp	r1, r0
   30544:	str	r1, [r5, #20]
   30548:	bcs	3056c <flatcc_builder_vector_push@@Base+0x7c>
   3054c:	ldr	r0, [r5, #16]
   30550:	adds	r7, r0, r4
   30554:	beq	305d8 <flatcc_builder_vector_push@@Base+0xe8>
   30558:	mov	r0, r7
   3055c:	mov	r1, r8
   30560:	mov	r2, r6
   30564:	bl	14e58 <memcpy@plt>
   30568:	b	305dc <flatcc_builder_vector_push@@Base+0xec>
   3056c:	ldr	r2, [r5, #28]
   30570:	ldr	r0, [r5, #40]	; 0x28
   30574:	ldr	r7, [r5, #48]	; 0x30
   30578:	mov	r3, #1
   3057c:	str	r3, [sp]
   30580:	mov	r3, #1
   30584:	add	r1, r1, r2
   30588:	add	r2, r1, #1
   3058c:	add	r1, r5, #60	; 0x3c
   30590:	blx	r7
   30594:	mov	r7, #0
   30598:	cmp	r0, #0
   3059c:	bne	305dc <flatcc_builder_vector_push@@Base+0xec>
   305a0:	ldr	r1, [r5, #28]
   305a4:	ldr	r0, [r5, #60]	; 0x3c
   305a8:	ldr	r3, [r5, #64]	; 0x40
   305ac:	ldr	r2, [r5, #32]
   305b0:	add	r0, r0, r1
   305b4:	sub	r1, r3, r1
   305b8:	mvn	r3, #3
   305bc:	cmn	r1, #4
   305c0:	str	r0, [r5, #16]
   305c4:	movcs	r1, r3
   305c8:	str	r1, [r5, #24]
   305cc:	str	r3, [r2, #4]
   305d0:	adds	r7, r0, r4
   305d4:	bne	30558 <flatcc_builder_vector_push@@Base+0x68>
   305d8:	mov	r7, #0
   305dc:	mov	r0, r7
   305e0:	sub	sp, fp, #24
   305e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   305e8:	ldr	r0, [pc, #56]	; 30628 <flatcc_builder_vector_push@@Base+0x138>
   305ec:	ldr	r1, [pc, #56]	; 3062c <flatcc_builder_vector_push@@Base+0x13c>
   305f0:	ldr	r3, [pc, #56]	; 30630 <flatcc_builder_vector_push@@Base+0x140>
   305f4:	movw	r2, #907	; 0x38b
   305f8:	add	r0, pc, r0
   305fc:	add	r1, pc, r1
   30600:	add	r3, pc, r3
   30604:	bl	14f3c <__assert_fail@plt>
   30608:	ldr	r0, [pc, #36]	; 30634 <flatcc_builder_vector_push@@Base+0x144>
   3060c:	ldr	r1, [pc, #36]	; 30638 <flatcc_builder_vector_push@@Base+0x148>
   30610:	ldr	r3, [pc, #36]	; 3063c <flatcc_builder_vector_push@@Base+0x14c>
   30614:	mov	r2, #908	; 0x38c
   30618:	add	r0, pc, r0
   3061c:	add	r1, pc, r1
   30620:	add	r3, pc, r3
   30624:	bl	14f3c <__assert_fail@plt>
   30628:	andeq	fp, r1, r0, lsr r2
   3062c:	strdeq	sl, [r1], -r2
   30630:	andeq	fp, r1, r4, asr r2
   30634:	andeq	fp, r1, pc, ror r2
   30638:	ldrdeq	sl, [r1], -r2
   3063c:	andeq	fp, r1, r4, lsr r2

00030640 <flatcc_builder_append_vector@@Base>:
   30640:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30644:	add	fp, sp, #24
   30648:	sub	sp, sp, #8
   3064c:	mov	r6, r0
   30650:	ldr	r0, [r0, #32]
   30654:	mov	r8, r1
   30658:	ldrh	r1, [r0, #14]
   3065c:	cmp	r1, #4
   30660:	bne	30760 <flatcc_builder_append_vector@@Base+0x120>
   30664:	ldr	r1, [r0, #20]
   30668:	mov	r5, r2
   3066c:	adds	r1, r1, r2
   30670:	bcs	30740 <flatcc_builder_append_vector@@Base+0x100>
   30674:	ldr	r2, [r0, #24]
   30678:	cmp	r1, r2
   3067c:	bhi	30740 <flatcc_builder_append_vector@@Base+0x100>
   30680:	str	r1, [r0, #20]
   30684:	ldr	r1, [r6, #32]
   30688:	ldr	r4, [r6, #20]
   3068c:	ldr	r0, [r6, #24]
   30690:	ldr	r9, [r1, #16]
   30694:	mla	r1, r9, r5, r4
   30698:	cmp	r1, r0
   3069c:	str	r1, [r6, #20]
   306a0:	bcs	306c4 <flatcc_builder_append_vector@@Base+0x84>
   306a4:	ldr	r0, [r6, #16]
   306a8:	adds	r7, r0, r4
   306ac:	beq	30730 <flatcc_builder_append_vector@@Base+0xf0>
   306b0:	mul	r2, r9, r5
   306b4:	mov	r0, r7
   306b8:	mov	r1, r8
   306bc:	bl	14e58 <memcpy@plt>
   306c0:	b	30734 <flatcc_builder_append_vector@@Base+0xf4>
   306c4:	ldr	r2, [r6, #28]
   306c8:	ldr	r0, [r6, #40]	; 0x28
   306cc:	ldr	r7, [r6, #48]	; 0x30
   306d0:	mov	r3, #1
   306d4:	str	r3, [sp]
   306d8:	mov	r3, #1
   306dc:	add	r1, r1, r2
   306e0:	add	r2, r1, #1
   306e4:	add	r1, r6, #60	; 0x3c
   306e8:	blx	r7
   306ec:	mov	r7, #0
   306f0:	cmp	r0, #0
   306f4:	bne	30734 <flatcc_builder_append_vector@@Base+0xf4>
   306f8:	ldr	r1, [r6, #28]
   306fc:	ldr	r0, [r6, #60]	; 0x3c
   30700:	ldr	r3, [r6, #64]	; 0x40
   30704:	ldr	r2, [r6, #32]
   30708:	add	r0, r0, r1
   3070c:	sub	r1, r3, r1
   30710:	mvn	r3, #3
   30714:	cmn	r1, #4
   30718:	str	r0, [r6, #16]
   3071c:	movcs	r1, r3
   30720:	str	r1, [r6, #24]
   30724:	str	r3, [r2, #4]
   30728:	adds	r7, r0, r4
   3072c:	bne	306b0 <flatcc_builder_append_vector@@Base+0x70>
   30730:	mov	r7, #0
   30734:	mov	r0, r7
   30738:	sub	sp, fp, #24
   3073c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30740:	ldr	r0, [pc, #68]	; 3078c <flatcc_builder_append_vector@@Base+0x14c>
   30744:	ldr	r1, [pc, #68]	; 30790 <flatcc_builder_append_vector@@Base+0x150>
   30748:	ldr	r3, [pc, #68]	; 30794 <flatcc_builder_append_vector@@Base+0x154>
   3074c:	mov	r2, #892	; 0x37c
   30750:	add	r0, pc, r0
   30754:	add	r1, pc, r1
   30758:	add	r3, pc, r3
   3075c:	bl	14f3c <__assert_fail@plt>
   30760:	ldr	r0, [pc, #24]	; 30780 <flatcc_builder_append_vector@@Base+0x140>
   30764:	ldr	r1, [pc, #24]	; 30784 <flatcc_builder_append_vector@@Base+0x144>
   30768:	ldr	r3, [pc, #24]	; 30788 <flatcc_builder_append_vector@@Base+0x148>
   3076c:	movw	r2, #915	; 0x393
   30770:	add	r0, pc, r0
   30774:	add	r1, pc, r1
   30778:	add	r3, pc, r3
   3077c:	bl	14f3c <__assert_fail@plt>
   30780:	strheq	fp, [r1], -r8
   30784:	andeq	sl, r1, sl, ror sp
   30788:	andeq	fp, r1, ip, asr r1
   3078c:	andeq	fp, r1, r4, ror #28
   30790:	muleq	r1, sl, sp
   30794:	andeq	fp, r1, r7, ror lr

00030798 <flatcc_builder_extend_offset_vector@@Base>:
   30798:	push	{r4, r5, fp, lr}
   3079c:	add	fp, sp, #8
   307a0:	sub	sp, sp, #8
   307a4:	mov	r4, r0
   307a8:	ldr	r0, [r0, #32]
   307ac:	ldr	r2, [r0, #20]
   307b0:	adds	r2, r2, r1
   307b4:	cmpcc	r2, #1073741824	; 0x40000000
   307b8:	bcc	307dc <flatcc_builder_extend_offset_vector@@Base+0x44>
   307bc:	ldr	r0, [pc, #184]	; 3087c <flatcc_builder_extend_offset_vector@@Base+0xe4>
   307c0:	ldr	r1, [pc, #184]	; 30880 <flatcc_builder_extend_offset_vector@@Base+0xe8>
   307c4:	ldr	r3, [pc, #184]	; 30884 <flatcc_builder_extend_offset_vector@@Base+0xec>
   307c8:	mov	r2, #892	; 0x37c
   307cc:	add	r0, pc, r0
   307d0:	add	r1, pc, r1
   307d4:	add	r3, pc, r3
   307d8:	bl	14f3c <__assert_fail@plt>
   307dc:	str	r2, [r0, #20]
   307e0:	ldr	r5, [r4, #20]
   307e4:	ldr	r0, [r4, #24]
   307e8:	add	r1, r5, r1, lsl #2
   307ec:	cmp	r1, r0
   307f0:	str	r1, [r4, #20]
   307f4:	bcs	30800 <flatcc_builder_extend_offset_vector@@Base+0x68>
   307f8:	ldr	r0, [r4, #16]
   307fc:	b	30870 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   30800:	ldr	r2, [r4, #28]
   30804:	ldr	r0, [r4, #40]	; 0x28
   30808:	ldr	ip, [r4, #48]	; 0x30
   3080c:	mov	r3, #1
   30810:	str	r3, [sp]
   30814:	mov	r3, #1
   30818:	add	r1, r1, r2
   3081c:	add	r2, r1, #1
   30820:	add	r1, r4, #60	; 0x3c
   30824:	blx	ip
   30828:	mov	r1, r0
   3082c:	mov	r0, #0
   30830:	cmp	r1, #0
   30834:	beq	30840 <flatcc_builder_extend_offset_vector@@Base+0xa8>
   30838:	sub	sp, fp, #8
   3083c:	pop	{r4, r5, fp, pc}
   30840:	ldr	r1, [r4, #28]
   30844:	ldr	r0, [r4, #60]	; 0x3c
   30848:	ldr	r3, [r4, #64]	; 0x40
   3084c:	ldr	r2, [r4, #32]
   30850:	add	r0, r0, r1
   30854:	sub	r1, r3, r1
   30858:	mvn	r3, #3
   3085c:	cmn	r1, #4
   30860:	str	r0, [r4, #16]
   30864:	movcs	r1, r3
   30868:	str	r1, [r4, #24]
   3086c:	str	r3, [r2, #4]
   30870:	add	r0, r0, r5
   30874:	sub	sp, fp, #8
   30878:	pop	{r4, r5, fp, pc}
   3087c:	andeq	fp, r1, r8, ror #27
   30880:	andeq	sl, r1, lr, lsl sp
   30884:	strdeq	fp, [r1], -fp	; <UNPREDICTABLE>

00030888 <flatcc_builder_offset_vector_push@@Base>:
   30888:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3088c:	add	fp, sp, #24
   30890:	sub	sp, sp, #8
   30894:	mov	r6, r0
   30898:	ldr	r0, [r0, #32]
   3089c:	mov	r8, r1
   308a0:	ldrh	r1, [r0, #14]
   308a4:	cmp	r1, #5
   308a8:	bne	3095c <flatcc_builder_offset_vector_push@@Base+0xd4>
   308ac:	ldr	r1, [r0, #20]
   308b0:	mov	r5, #0
   308b4:	cmn	r1, #-1073741823	; 0xc0000001
   308b8:	beq	30950 <flatcc_builder_offset_vector_push@@Base+0xc8>
   308bc:	add	r1, r1, #1
   308c0:	str	r1, [r0, #20]
   308c4:	ldr	r7, [r6, #20]
   308c8:	ldr	r0, [r6, #24]
   308cc:	add	r1, r7, #4
   308d0:	cmp	r1, r0
   308d4:	str	r1, [r6, #20]
   308d8:	bcs	308e4 <flatcc_builder_offset_vector_push@@Base+0x5c>
   308dc:	ldr	r0, [r6, #16]
   308e0:	b	30944 <flatcc_builder_offset_vector_push@@Base+0xbc>
   308e4:	ldr	r1, [r6, #28]
   308e8:	ldr	r0, [r6, #40]	; 0x28
   308ec:	ldr	r4, [r6, #48]	; 0x30
   308f0:	mov	r2, #1
   308f4:	mov	r3, #1
   308f8:	str	r2, [sp]
   308fc:	add	r1, r7, r1
   30900:	add	r2, r1, #5
   30904:	add	r1, r6, #60	; 0x3c
   30908:	blx	r4
   3090c:	cmp	r0, #0
   30910:	bne	30950 <flatcc_builder_offset_vector_push@@Base+0xc8>
   30914:	ldr	r1, [r6, #28]
   30918:	ldr	r0, [r6, #60]	; 0x3c
   3091c:	ldr	r3, [r6, #64]	; 0x40
   30920:	ldr	r2, [r6, #32]
   30924:	add	r0, r0, r1
   30928:	sub	r1, r3, r1
   3092c:	mvn	r3, #3
   30930:	cmn	r1, #4
   30934:	str	r0, [r6, #16]
   30938:	movcs	r1, r3
   3093c:	str	r1, [r6, #24]
   30940:	str	r3, [r2, #4]
   30944:	adds	r0, r0, r7
   30948:	movne	r5, r0
   3094c:	strne	r8, [r0]
   30950:	mov	r0, r5
   30954:	sub	sp, fp, #24
   30958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3095c:	ldr	r0, [pc, #24]	; 3097c <flatcc_builder_offset_vector_push@@Base+0xf4>
   30960:	ldr	r1, [pc, #24]	; 30980 <flatcc_builder_offset_vector_push@@Base+0xf8>
   30964:	ldr	r3, [pc, #24]	; 30984 <flatcc_builder_offset_vector_push@@Base+0xfc>
   30968:	movw	r2, #934	; 0x3a6
   3096c:	add	r0, pc, r0
   30970:	add	r1, pc, r1
   30974:	add	r3, pc, r3
   30978:	bl	14f3c <__assert_fail@plt>
   3097c:			; <UNDEFINED> instruction: 0x0001afb5
   30980:	andeq	sl, r1, lr, ror fp
   30984:	andeq	sl, r1, r0, ror #31

00030988 <flatcc_builder_append_offset_vector@@Base>:
   30988:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3098c:	add	fp, sp, #24
   30990:	sub	sp, sp, #8
   30994:	mov	r6, r0
   30998:	ldr	r0, [r0, #32]
   3099c:	mov	r8, r1
   309a0:	ldrh	r1, [r0, #14]
   309a4:	cmp	r1, #5
   309a8:	bne	30a98 <flatcc_builder_append_offset_vector@@Base+0x110>
   309ac:	ldr	r1, [r0, #20]
   309b0:	mov	r5, r2
   309b4:	adds	r1, r1, r2
   309b8:	cmpcc	r1, #1073741824	; 0x40000000
   309bc:	bcc	309e0 <flatcc_builder_append_offset_vector@@Base+0x58>
   309c0:	ldr	r0, [pc, #252]	; 30ac4 <flatcc_builder_append_offset_vector@@Base+0x13c>
   309c4:	ldr	r1, [pc, #252]	; 30ac8 <flatcc_builder_append_offset_vector@@Base+0x140>
   309c8:	ldr	r3, [pc, #252]	; 30acc <flatcc_builder_append_offset_vector@@Base+0x144>
   309cc:	mov	r2, #892	; 0x37c
   309d0:	add	r0, pc, r0
   309d4:	add	r1, pc, r1
   309d8:	add	r3, pc, r3
   309dc:	bl	14f3c <__assert_fail@plt>
   309e0:	str	r1, [r0, #20]
   309e4:	ldr	r4, [r6, #20]
   309e8:	ldr	r0, [r6, #24]
   309ec:	add	r1, r4, r5, lsl #2
   309f0:	cmp	r1, r0
   309f4:	str	r1, [r6, #20]
   309f8:	bcs	30a1c <flatcc_builder_append_offset_vector@@Base+0x94>
   309fc:	ldr	r0, [r6, #16]
   30a00:	adds	r7, r0, r4
   30a04:	beq	30a88 <flatcc_builder_append_offset_vector@@Base+0x100>
   30a08:	lsl	r2, r5, #2
   30a0c:	mov	r0, r7
   30a10:	mov	r1, r8
   30a14:	bl	14e58 <memcpy@plt>
   30a18:	b	30a8c <flatcc_builder_append_offset_vector@@Base+0x104>
   30a1c:	ldr	r2, [r6, #28]
   30a20:	ldr	r0, [r6, #40]	; 0x28
   30a24:	ldr	r7, [r6, #48]	; 0x30
   30a28:	mov	r3, #1
   30a2c:	str	r3, [sp]
   30a30:	mov	r3, #1
   30a34:	add	r1, r1, r2
   30a38:	add	r2, r1, #1
   30a3c:	add	r1, r6, #60	; 0x3c
   30a40:	blx	r7
   30a44:	mov	r7, #0
   30a48:	cmp	r0, #0
   30a4c:	bne	30a8c <flatcc_builder_append_offset_vector@@Base+0x104>
   30a50:	ldr	r1, [r6, #28]
   30a54:	ldr	r0, [r6, #60]	; 0x3c
   30a58:	ldr	r3, [r6, #64]	; 0x40
   30a5c:	ldr	r2, [r6, #32]
   30a60:	add	r0, r0, r1
   30a64:	sub	r1, r3, r1
   30a68:	mvn	r3, #3
   30a6c:	cmn	r1, #4
   30a70:	str	r0, [r6, #16]
   30a74:	movcs	r1, r3
   30a78:	str	r1, [r6, #24]
   30a7c:	str	r3, [r2, #4]
   30a80:	adds	r7, r0, r4
   30a84:	bne	30a08 <flatcc_builder_append_offset_vector@@Base+0x80>
   30a88:	mov	r7, #0
   30a8c:	mov	r0, r7
   30a90:	sub	sp, fp, #24
   30a94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30a98:	ldr	r0, [pc, #24]	; 30ab8 <flatcc_builder_append_offset_vector@@Base+0x130>
   30a9c:	ldr	r1, [pc, #24]	; 30abc <flatcc_builder_append_offset_vector@@Base+0x134>
   30aa0:	ldr	r3, [pc, #24]	; 30ac0 <flatcc_builder_append_offset_vector@@Base+0x138>
   30aa4:	mov	r2, #948	; 0x3b4
   30aa8:	add	r0, pc, r0
   30aac:	add	r1, pc, r1
   30ab0:	add	r3, pc, r3
   30ab4:	bl	14f3c <__assert_fail@plt>
   30ab8:	andeq	sl, r1, r9, ror lr
   30abc:	andeq	sl, r1, r2, asr #20
   30ac0:	andeq	sl, r1, r6, lsl #30
   30ac4:	andeq	fp, r1, r4, ror #23
   30ac8:	andeq	sl, r1, sl, lsl fp
   30acc:	strdeq	fp, [r1], -r7

00030ad0 <flatcc_builder_extend_string@@Base>:
   30ad0:	push	{r4, r5, fp, lr}
   30ad4:	add	fp, sp, #8
   30ad8:	sub	sp, sp, #8
   30adc:	mov	r4, r0
   30ae0:	ldr	r0, [r0, #32]
   30ae4:	ldrh	r2, [r0, #14]
   30ae8:	cmp	r2, #6
   30aec:	bne	30b9c <flatcc_builder_extend_string@@Base+0xcc>
   30af0:	ldr	r2, [r0, #20]
   30af4:	adds	r2, r2, r1
   30af8:	bcs	30bbc <flatcc_builder_extend_string@@Base+0xec>
   30afc:	str	r2, [r0, #20]
   30b00:	ldr	r5, [r4, #20]
   30b04:	ldr	r0, [r4, #24]
   30b08:	add	r1, r5, r1
   30b0c:	cmp	r1, r0
   30b10:	str	r1, [r4, #20]
   30b14:	bcs	30b20 <flatcc_builder_extend_string@@Base+0x50>
   30b18:	ldr	r0, [r4, #16]
   30b1c:	b	30b90 <flatcc_builder_extend_string@@Base+0xc0>
   30b20:	ldr	r2, [r4, #28]
   30b24:	ldr	r0, [r4, #40]	; 0x28
   30b28:	ldr	ip, [r4, #48]	; 0x30
   30b2c:	mov	r3, #1
   30b30:	str	r3, [sp]
   30b34:	mov	r3, #1
   30b38:	add	r1, r1, r2
   30b3c:	add	r2, r1, #1
   30b40:	add	r1, r4, #60	; 0x3c
   30b44:	blx	ip
   30b48:	mov	r1, r0
   30b4c:	mov	r0, #0
   30b50:	cmp	r1, #0
   30b54:	beq	30b60 <flatcc_builder_extend_string@@Base+0x90>
   30b58:	sub	sp, fp, #8
   30b5c:	pop	{r4, r5, fp, pc}
   30b60:	ldr	r1, [r4, #28]
   30b64:	ldr	r0, [r4, #60]	; 0x3c
   30b68:	ldr	r3, [r4, #64]	; 0x40
   30b6c:	ldr	r2, [r4, #32]
   30b70:	add	r0, r0, r1
   30b74:	sub	r1, r3, r1
   30b78:	mvn	r3, #3
   30b7c:	cmn	r1, #4
   30b80:	str	r0, [r4, #16]
   30b84:	movcs	r1, r3
   30b88:	str	r1, [r4, #24]
   30b8c:	str	r3, [r2, #4]
   30b90:	add	r0, r0, r5
   30b94:	sub	sp, fp, #8
   30b98:	pop	{r4, r5, fp, pc}
   30b9c:	ldr	r0, [pc, #56]	; 30bdc <flatcc_builder_extend_string@@Base+0x10c>
   30ba0:	ldr	r1, [pc, #56]	; 30be0 <flatcc_builder_extend_string@@Base+0x110>
   30ba4:	ldr	r3, [pc, #56]	; 30be4 <flatcc_builder_extend_string@@Base+0x114>
   30ba8:	movw	r2, #957	; 0x3bd
   30bac:	add	r0, pc, r0
   30bb0:	add	r1, pc, r1
   30bb4:	add	r3, pc, r3
   30bb8:	bl	14f3c <__assert_fail@plt>
   30bbc:	ldr	r0, [pc, #36]	; 30be8 <flatcc_builder_extend_string@@Base+0x118>
   30bc0:	ldr	r1, [pc, #36]	; 30bec <flatcc_builder_extend_string@@Base+0x11c>
   30bc4:	ldr	r3, [pc, #36]	; 30bf0 <flatcc_builder_extend_string@@Base+0x120>
   30bc8:	mov	r2, #892	; 0x37c
   30bcc:	add	r0, pc, r0
   30bd0:	add	r1, pc, r1
   30bd4:	add	r3, pc, r3
   30bd8:	bl	14f3c <__assert_fail@plt>
   30bdc:	andeq	sl, r1, lr, ror lr
   30be0:	andeq	sl, r1, lr, lsr r9
   30be4:	andeq	sl, r1, r2, lsr #29
   30be8:	andeq	fp, r1, r8, ror #19
   30bec:	andeq	sl, r1, lr, lsl r9
   30bf0:	strdeq	fp, [r1], -fp	; <UNPREDICTABLE>

00030bf4 <flatcc_builder_append_string@@Base>:
   30bf4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30bf8:	add	fp, sp, #24
   30bfc:	sub	sp, sp, #8
   30c00:	mov	r6, r0
   30c04:	ldr	r0, [r0, #32]
   30c08:	mov	r8, r1
   30c0c:	ldrh	r1, [r0, #14]
   30c10:	cmp	r1, #6
   30c14:	bne	30ce0 <flatcc_builder_append_string@@Base+0xec>
   30c18:	ldr	r1, [r0, #20]
   30c1c:	mov	r4, r2
   30c20:	adds	r1, r1, r2
   30c24:	bcs	30d00 <flatcc_builder_append_string@@Base+0x10c>
   30c28:	str	r1, [r0, #20]
   30c2c:	ldr	r5, [r6, #20]
   30c30:	ldr	r0, [r6, #24]
   30c34:	add	r1, r5, r4
   30c38:	cmp	r1, r0
   30c3c:	str	r1, [r6, #20]
   30c40:	bcs	30c64 <flatcc_builder_append_string@@Base+0x70>
   30c44:	ldr	r0, [r6, #16]
   30c48:	adds	r7, r0, r5
   30c4c:	beq	30cd0 <flatcc_builder_append_string@@Base+0xdc>
   30c50:	mov	r0, r7
   30c54:	mov	r1, r8
   30c58:	mov	r2, r4
   30c5c:	bl	14e58 <memcpy@plt>
   30c60:	b	30cd4 <flatcc_builder_append_string@@Base+0xe0>
   30c64:	ldr	r2, [r6, #28]
   30c68:	ldr	r0, [r6, #40]	; 0x28
   30c6c:	ldr	r7, [r6, #48]	; 0x30
   30c70:	mov	r3, #1
   30c74:	str	r3, [sp]
   30c78:	mov	r3, #1
   30c7c:	add	r1, r1, r2
   30c80:	add	r2, r1, #1
   30c84:	add	r1, r6, #60	; 0x3c
   30c88:	blx	r7
   30c8c:	mov	r7, #0
   30c90:	cmp	r0, #0
   30c94:	bne	30cd4 <flatcc_builder_append_string@@Base+0xe0>
   30c98:	ldr	r1, [r6, #28]
   30c9c:	ldr	r0, [r6, #60]	; 0x3c
   30ca0:	ldr	r3, [r6, #64]	; 0x40
   30ca4:	ldr	r2, [r6, #32]
   30ca8:	add	r0, r0, r1
   30cac:	sub	r1, r3, r1
   30cb0:	mvn	r3, #3
   30cb4:	cmn	r1, #4
   30cb8:	str	r0, [r6, #16]
   30cbc:	movcs	r1, r3
   30cc0:	str	r1, [r6, #24]
   30cc4:	str	r3, [r2, #4]
   30cc8:	adds	r7, r0, r5
   30ccc:	bne	30c50 <flatcc_builder_append_string@@Base+0x5c>
   30cd0:	mov	r7, #0
   30cd4:	mov	r0, r7
   30cd8:	sub	sp, fp, #24
   30cdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30ce0:	ldr	r0, [pc, #56]	; 30d20 <flatcc_builder_append_string@@Base+0x12c>
   30ce4:	ldr	r1, [pc, #56]	; 30d24 <flatcc_builder_append_string@@Base+0x130>
   30ce8:	ldr	r3, [pc, #56]	; 30d28 <flatcc_builder_append_string@@Base+0x134>
   30cec:	movw	r2, #966	; 0x3c6
   30cf0:	add	r0, pc, r0
   30cf4:	add	r1, pc, r1
   30cf8:	add	r3, pc, r3
   30cfc:	bl	14f3c <__assert_fail@plt>
   30d00:	ldr	r0, [pc, #36]	; 30d2c <flatcc_builder_append_string@@Base+0x138>
   30d04:	ldr	r1, [pc, #36]	; 30d30 <flatcc_builder_append_string@@Base+0x13c>
   30d08:	ldr	r3, [pc, #36]	; 30d34 <flatcc_builder_append_string@@Base+0x140>
   30d0c:	mov	r2, #892	; 0x37c
   30d10:	add	r0, pc, r0
   30d14:	add	r1, pc, r1
   30d18:	add	r3, pc, r3
   30d1c:	bl	14f3c <__assert_fail@plt>
   30d20:	andeq	sl, r1, sl, lsr sp
   30d24:	strdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   30d28:	muleq	r1, sp, sp
   30d2c:	andeq	fp, r1, r4, lsr #17
   30d30:	ldrdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   30d34:			; <UNDEFINED> instruction: 0x0001b8b7

00030d38 <flatcc_builder_append_string_str@@Base>:
   30d38:	push	{r4, r5, fp, lr}
   30d3c:	add	fp, sp, #8
   30d40:	mov	r5, r0
   30d44:	mov	r0, r1
   30d48:	mov	r4, r1
   30d4c:	bl	14ec4 <strlen@plt>
   30d50:	mov	r2, r0
   30d54:	mov	r0, r5
   30d58:	mov	r1, r4
   30d5c:	pop	{r4, r5, fp, lr}
   30d60:	b	30bf4 <flatcc_builder_append_string@@Base>

00030d64 <flatcc_builder_append_string_strn@@Base>:
   30d64:	push	{r4, r5, r6, sl, fp, lr}
   30d68:	add	fp, sp, #16
   30d6c:	mov	r6, r0
   30d70:	mov	r5, r1
   30d74:	mov	r0, r1
   30d78:	mov	r1, #0
   30d7c:	mov	r4, r2
   30d80:	bl	14f0c <memchr@plt>
   30d84:	cmp	r0, #0
   30d88:	mov	r1, r5
   30d8c:	subne	r4, r0, r5
   30d90:	mov	r0, r6
   30d94:	mov	r2, r4
   30d98:	pop	{r4, r5, r6, sl, fp, lr}
   30d9c:	b	30bf4 <flatcc_builder_append_string@@Base>

00030da0 <flatcc_builder_truncate_vector@@Base>:
   30da0:	push	{fp, lr}
   30da4:	mov	fp, sp
   30da8:	ldr	r2, [r0, #32]
   30dac:	ldrh	r3, [r2, #14]
   30db0:	cmp	r3, #4
   30db4:	bne	30dfc <flatcc_builder_truncate_vector@@Base+0x5c>
   30db8:	ldr	r3, [r2, #20]
   30dbc:	cmp	r3, r1
   30dc0:	bcc	30e1c <flatcc_builder_truncate_vector@@Base+0x7c>
   30dc4:	sub	r3, r3, r1
   30dc8:	str	r3, [r2, #20]
   30dcc:	ldr	r2, [r0, #32]
   30dd0:	ldr	r3, [r0, #20]
   30dd4:	ldr	ip, [r0, #16]
   30dd8:	ldr	r2, [r2, #16]
   30ddc:	mls	r3, r2, r1, r3
   30de0:	mul	r2, r2, r1
   30de4:	mov	r1, #0
   30de8:	str	r3, [r0, #20]
   30dec:	add	r0, ip, r3
   30df0:	bl	14ee8 <memset@plt>
   30df4:	mov	r0, #0
   30df8:	pop	{fp, pc}
   30dfc:	ldr	r0, [pc, #56]	; 30e3c <flatcc_builder_truncate_vector@@Base+0x9c>
   30e00:	ldr	r1, [pc, #56]	; 30e40 <flatcc_builder_truncate_vector@@Base+0xa0>
   30e04:	ldr	r3, [pc, #56]	; 30e44 <flatcc_builder_truncate_vector@@Base+0xa4>
   30e08:	movw	r2, #985	; 0x3d9
   30e0c:	add	r0, pc, r0
   30e10:	add	r1, pc, r1
   30e14:	add	r3, pc, r3
   30e18:	bl	14f3c <__assert_fail@plt>
   30e1c:	ldr	r0, [pc, #36]	; 30e48 <flatcc_builder_truncate_vector@@Base+0xa8>
   30e20:	ldr	r1, [pc, #36]	; 30e4c <flatcc_builder_truncate_vector@@Base+0xac>
   30e24:	ldr	r3, [pc, #36]	; 30e50 <flatcc_builder_truncate_vector@@Base+0xb0>
   30e28:	movw	r2, #986	; 0x3da
   30e2c:	add	r0, pc, r0
   30e30:	add	r1, pc, r1
   30e34:	add	r3, pc, r3
   30e38:	bl	14f3c <__assert_fail@plt>
   30e3c:	andeq	sl, r1, ip, lsl sl
   30e40:	ldrdeq	sl, [r1], -lr
   30e44:	andeq	sl, r1, lr, asr #25
   30e48:	strdeq	sl, [r1], -r5
   30e4c:			; <UNDEFINED> instruction: 0x0001a6be
   30e50:	andeq	sl, r1, lr, lsr #25

00030e54 <flatcc_builder_truncate_offset_vector@@Base>:
   30e54:	push	{fp, lr}
   30e58:	mov	fp, sp
   30e5c:	ldr	r2, [r0, #32]
   30e60:	ldrh	r3, [r2, #14]
   30e64:	cmp	r3, #5
   30e68:	bne	30eb0 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   30e6c:	ldr	r3, [r2, #20]
   30e70:	cmp	r3, r1
   30e74:	bcc	30ed0 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   30e78:	sub	r3, r3, r1
   30e7c:	str	r3, [r2, #20]
   30e80:	ldr	r2, [r0, #32]
   30e84:	ldr	r3, [r0, #20]
   30e88:	ldr	ip, [r0, #16]
   30e8c:	ldr	r2, [r2, #16]
   30e90:	mls	r3, r2, r1, r3
   30e94:	mul	r2, r2, r1
   30e98:	mov	r1, #0
   30e9c:	str	r3, [r0, #20]
   30ea0:	add	r0, ip, r3
   30ea4:	bl	14ee8 <memset@plt>
   30ea8:	mov	r0, #0
   30eac:	pop	{fp, pc}
   30eb0:	ldr	r0, [pc, #56]	; 30ef0 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   30eb4:	ldr	r1, [pc, #56]	; 30ef4 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   30eb8:	ldr	r3, [pc, #56]	; 30ef8 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   30ebc:	movw	r2, #994	; 0x3e2
   30ec0:	add	r0, pc, r0
   30ec4:	add	r1, pc, r1
   30ec8:	add	r3, pc, r3
   30ecc:	bl	14f3c <__assert_fail@plt>
   30ed0:	ldr	r0, [pc, #36]	; 30efc <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   30ed4:	ldr	r1, [pc, #36]	; 30f00 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   30ed8:	ldr	r3, [pc, #36]	; 30f04 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   30edc:	movw	r2, #995	; 0x3e3
   30ee0:	add	r0, pc, r0
   30ee4:	add	r1, pc, r1
   30ee8:	add	r3, pc, r3
   30eec:	bl	14f3c <__assert_fail@plt>
   30ef0:	andeq	sl, r1, r1, ror #20
   30ef4:	andeq	sl, r1, sl, lsr #12
   30ef8:	andeq	sl, r1, sp, ror ip
   30efc:	andeq	sl, r1, fp, lsr #25
   30f00:	andeq	sl, r1, sl, lsl #12
   30f04:	andeq	sl, r1, sp, asr ip

00030f08 <flatcc_builder_truncate_string@@Base>:
   30f08:	push	{fp, lr}
   30f0c:	mov	fp, sp
   30f10:	mov	r2, r1
   30f14:	ldr	r1, [r0, #32]
   30f18:	ldrh	r3, [r1, #14]
   30f1c:	cmp	r3, #6
   30f20:	bne	30f5c <flatcc_builder_truncate_string@@Base+0x54>
   30f24:	ldr	r3, [r1, #20]
   30f28:	cmp	r3, r2
   30f2c:	bcc	30f7c <flatcc_builder_truncate_string@@Base+0x74>
   30f30:	sub	r3, r3, r2
   30f34:	str	r3, [r1, #20]
   30f38:	ldr	r3, [r0, #20]
   30f3c:	ldr	r1, [r0, #16]
   30f40:	sub	r3, r3, r2
   30f44:	str	r3, [r0, #20]
   30f48:	add	r0, r1, r3
   30f4c:	mov	r1, #0
   30f50:	bl	14ee8 <memset@plt>
   30f54:	mov	r0, #0
   30f58:	pop	{fp, pc}
   30f5c:	ldr	r0, [pc, #56]	; 30f9c <flatcc_builder_truncate_string@@Base+0x94>
   30f60:	ldr	r1, [pc, #56]	; 30fa0 <flatcc_builder_truncate_string@@Base+0x98>
   30f64:	ldr	r3, [pc, #56]	; 30fa4 <flatcc_builder_truncate_string@@Base+0x9c>
   30f68:	movw	r2, #1003	; 0x3eb
   30f6c:	add	r0, pc, r0
   30f70:	add	r1, pc, r1
   30f74:	add	r3, pc, r3
   30f78:	bl	14f3c <__assert_fail@plt>
   30f7c:	ldr	r0, [pc, #36]	; 30fa8 <flatcc_builder_truncate_string@@Base+0xa0>
   30f80:	ldr	r1, [pc, #36]	; 30fac <flatcc_builder_truncate_string@@Base+0xa4>
   30f84:	ldr	r3, [pc, #36]	; 30fb0 <flatcc_builder_truncate_string@@Base+0xa8>
   30f88:	mov	r2, #1004	; 0x3ec
   30f8c:	add	r0, pc, r0
   30f90:	add	r1, pc, r1
   30f94:	add	r3, pc, r3
   30f98:	bl	14f3c <__assert_fail@plt>
   30f9c:			; <UNDEFINED> instruction: 0x0001aabe
   30fa0:	andeq	sl, r1, lr, ror r5
   30fa4:	andeq	sl, r1, r2, asr ip
   30fa8:	andeq	sl, r1, r9, ror ip
   30fac:	andeq	sl, r1, lr, asr r5
   30fb0:	andeq	sl, r1, r2, lsr ip

00030fb4 <flatcc_builder_start_vector@@Base>:
   30fb4:	push	{r4, r5, r6, r7, fp, lr}
   30fb8:	add	fp, sp, #16
   30fbc:	mov	r7, #4
   30fc0:	cmp	r2, #4
   30fc4:	mov	r6, r1
   30fc8:	mov	r5, r3
   30fcc:	mov	r4, r0
   30fd0:	movls	r2, r7
   30fd4:	mov	r1, r2
   30fd8:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   30fdc:	mov	r1, r0
   30fe0:	mvn	r0, #0
   30fe4:	cmp	r1, #0
   30fe8:	popne	{r4, r5, r6, r7, fp, pc}
   30fec:	ldr	r0, [r4, #32]
   30ff0:	str	r6, [r0, #16]
   30ff4:	mov	r0, #0
   30ff8:	ldr	r1, [r4, #32]
   30ffc:	str	r0, [r1, #20]
   31000:	ldr	r1, [r4, #32]
   31004:	str	r5, [r1, #24]
   31008:	ldr	r1, [r4, #32]
   3100c:	strh	r7, [r1, #14]
   31010:	ldr	r2, [r4, #28]
   31014:	ldr	r3, [r4, #60]	; 0x3c
   31018:	ldr	r7, [r4, #64]	; 0x40
   3101c:	add	r3, r3, r2
   31020:	sub	r2, r7, r2
   31024:	str	r3, [r4, #16]
   31028:	mvn	r3, #3
   3102c:	cmn	r2, #4
   31030:	movcs	r2, r3
   31034:	str	r2, [r4, #24]
   31038:	str	r3, [r1, #4]
   3103c:	pop	{r4, r5, r6, r7, fp, pc}

00031040 <flatcc_builder_start_offset_vector@@Base>:
   31040:	push	{r4, r5, fp, lr}
   31044:	add	fp, sp, #8
   31048:	mov	r1, #4
   3104c:	mov	r4, r0
   31050:	mov	r5, #4
   31054:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   31058:	mov	r1, r0
   3105c:	mvn	r0, #0
   31060:	cmp	r1, #0
   31064:	popne	{r4, r5, fp, pc}
   31068:	ldr	r0, [r4, #32]
   3106c:	mov	r2, #5
   31070:	str	r5, [r0, #16]
   31074:	mov	r0, #0
   31078:	ldr	r1, [r4, #32]
   3107c:	str	r0, [r1, #20]
   31080:	ldr	r1, [r4, #32]
   31084:	strh	r2, [r1, #14]
   31088:	ldr	r2, [r4, #28]
   3108c:	ldr	r3, [r4, #60]	; 0x3c
   31090:	ldr	r5, [r4, #64]	; 0x40
   31094:	add	r3, r3, r2
   31098:	sub	r2, r5, r2
   3109c:	str	r3, [r4, #16]
   310a0:	mvn	r3, #3
   310a4:	cmn	r2, #4
   310a8:	movcs	r2, r3
   310ac:	str	r2, [r4, #24]
   310b0:	str	r3, [r1, #4]
   310b4:	pop	{r4, r5, fp, pc}

000310b8 <flatcc_builder_create_offset_vector@@Base>:
   310b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   310bc:	add	fp, sp, #24
   310c0:	sub	sp, sp, #8
   310c4:	mov	r8, r1
   310c8:	mov	r1, #4
   310cc:	mov	r6, r2
   310d0:	mov	r4, r0
   310d4:	mov	r7, #4
   310d8:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   310dc:	cmp	r0, #0
   310e0:	beq	310f0 <flatcc_builder_create_offset_vector@@Base+0x38>
   310e4:	mov	r0, #0
   310e8:	sub	sp, fp, #24
   310ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   310f0:	ldr	r0, [r4, #32]
   310f4:	mov	r1, #0
   310f8:	str	r7, [r0, #16]
   310fc:	ldr	r0, [r4, #32]
   31100:	str	r1, [r0, #20]
   31104:	mov	r1, #5
   31108:	ldr	r0, [r4, #32]
   3110c:	strh	r1, [r0, #14]
   31110:	ldr	r1, [r4, #28]
   31114:	ldr	r2, [r4, #60]	; 0x3c
   31118:	ldr	r3, [r4, #64]	; 0x40
   3111c:	add	r2, r2, r1
   31120:	sub	r1, r3, r1
   31124:	str	r2, [r4, #16]
   31128:	mvn	r2, #3
   3112c:	cmn	r1, #4
   31130:	movcs	r1, r2
   31134:	str	r1, [r4, #24]
   31138:	str	r2, [r0, #4]
   3113c:	ldr	r1, [r0, #20]
   31140:	adds	r1, r1, r6
   31144:	cmpcc	r1, #1073741824	; 0x40000000
   31148:	bcc	3116c <flatcc_builder_create_offset_vector@@Base+0xb4>
   3114c:	ldr	r0, [pc, #200]	; 3121c <flatcc_builder_create_offset_vector@@Base+0x164>
   31150:	ldr	r1, [pc, #200]	; 31220 <flatcc_builder_create_offset_vector@@Base+0x168>
   31154:	ldr	r3, [pc, #200]	; 31224 <flatcc_builder_create_offset_vector@@Base+0x16c>
   31158:	mov	r2, #892	; 0x37c
   3115c:	add	r0, pc, r0
   31160:	add	r1, pc, r1
   31164:	add	r3, pc, r3
   31168:	bl	14f3c <__assert_fail@plt>
   3116c:	str	r1, [r0, #20]
   31170:	ldr	r7, [r4, #20]
   31174:	ldr	r0, [r4, #24]
   31178:	add	r1, r7, r6, lsl #2
   3117c:	cmp	r1, r0
   31180:	str	r1, [r4, #20]
   31184:	bcs	31198 <flatcc_builder_create_offset_vector@@Base+0xe0>
   31188:	ldr	r0, [r4, #16]
   3118c:	adds	r0, r0, r7
   31190:	bne	31200 <flatcc_builder_create_offset_vector@@Base+0x148>
   31194:	b	310e4 <flatcc_builder_create_offset_vector@@Base+0x2c>
   31198:	ldr	r2, [r4, #28]
   3119c:	ldr	r0, [r4, #40]	; 0x28
   311a0:	ldr	r5, [r4, #48]	; 0x30
   311a4:	mov	r3, #1
   311a8:	str	r3, [sp]
   311ac:	mov	r3, #1
   311b0:	add	r1, r1, r2
   311b4:	add	r2, r1, #1
   311b8:	add	r1, r4, #60	; 0x3c
   311bc:	blx	r5
   311c0:	cmp	r0, #0
   311c4:	bne	310e4 <flatcc_builder_create_offset_vector@@Base+0x2c>
   311c8:	ldr	r1, [r4, #28]
   311cc:	ldr	r0, [r4, #60]	; 0x3c
   311d0:	ldr	r3, [r4, #64]	; 0x40
   311d4:	ldr	r2, [r4, #32]
   311d8:	add	r0, r0, r1
   311dc:	sub	r1, r3, r1
   311e0:	mvn	r3, #3
   311e4:	cmn	r1, #4
   311e8:	str	r0, [r4, #16]
   311ec:	movcs	r1, r3
   311f0:	str	r1, [r4, #24]
   311f4:	str	r3, [r2, #4]
   311f8:	adds	r0, r0, r7
   311fc:	beq	310e4 <flatcc_builder_create_offset_vector@@Base+0x2c>
   31200:	lsl	r2, r6, #2
   31204:	mov	r1, r8
   31208:	bl	14e58 <memcpy@plt>
   3120c:	mov	r0, r4
   31210:	sub	sp, fp, #24
   31214:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   31218:	b	31228 <flatcc_builder_end_offset_vector@@Base>
   3121c:	andeq	fp, r1, r8, asr r4
   31220:	andeq	sl, r1, lr, lsl #7
   31224:	andeq	fp, r1, fp, ror #8

00031228 <flatcc_builder_end_offset_vector@@Base>:
   31228:	push	{r4, r5, fp, lr}
   3122c:	add	fp, sp, #8
   31230:	mov	r4, r0
   31234:	ldr	r0, [r0, #32]
   31238:	ldrh	r1, [r0, #14]
   3123c:	cmp	r1, #5
   31240:	bne	312e0 <flatcc_builder_end_offset_vector@@Base+0xb8>
   31244:	ldr	r2, [r0, #20]
   31248:	ldr	r1, [r4, #16]
   3124c:	mov	r0, r4
   31250:	mov	r3, #0
   31254:	bl	3234c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31258:	mov	r5, r0
   3125c:	cmp	r0, #0
   31260:	beq	312d8 <flatcc_builder_end_offset_vector@@Base+0xb0>
   31264:	ldr	r0, [r4, #16]
   31268:	ldr	r2, [r4, #20]
   3126c:	mov	r1, #0
   31270:	bl	14ee8 <memset@plt>
   31274:	ldr	r0, [r4, #32]
   31278:	ldr	r1, [r4, #60]	; 0x3c
   3127c:	ldr	ip, [r4, #64]	; 0x40
   31280:	ldr	r3, [r0, #8]
   31284:	str	r3, [r4, #20]
   31288:	ldr	r3, [r0]
   3128c:	str	r3, [r4, #28]
   31290:	add	r1, r1, r3
   31294:	ldr	r2, [r0, #4]
   31298:	str	r1, [r4, #16]
   3129c:	sub	r1, ip, r3
   312a0:	cmp	r1, r2
   312a4:	movhi	r1, r2
   312a8:	str	r1, [r4, #24]
   312ac:	ldrh	r1, [r4, #130]	; 0x82
   312b0:	ldrh	r2, [r4, #128]	; 0x80
   312b4:	cmp	r2, r1
   312b8:	strhcc	r1, [r4, #128]	; 0x80
   312bc:	ldrh	r1, [r0, #12]
   312c0:	sub	r0, r0, #36	; 0x24
   312c4:	str	r0, [r4, #32]
   312c8:	strh	r1, [r4, #130]	; 0x82
   312cc:	ldr	r0, [r4, #156]	; 0x9c
   312d0:	sub	r0, r0, #1
   312d4:	str	r0, [r4, #156]	; 0x9c
   312d8:	mov	r0, r5
   312dc:	pop	{r4, r5, fp, pc}
   312e0:	ldr	r0, [pc, #24]	; 31300 <flatcc_builder_end_offset_vector@@Base+0xd8>
   312e4:	ldr	r1, [pc, #24]	; 31304 <flatcc_builder_end_offset_vector@@Base+0xdc>
   312e8:	ldr	r3, [pc, #24]	; 31308 <flatcc_builder_end_offset_vector@@Base+0xe0>
   312ec:	movw	r2, #1480	; 0x5c8
   312f0:	add	r0, pc, r0
   312f4:	add	r1, pc, r1
   312f8:	add	r3, pc, r3
   312fc:	bl	14f3c <__assert_fail@plt>
   31300:	andeq	sl, r1, r1, lsr r6
   31304:	strdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   31308:	andeq	sl, r1, r8, asr ip

0003130c <flatcc_builder_start_string@@Base>:
   3130c:	push	{r4, r5, fp, lr}
   31310:	add	fp, sp, #8
   31314:	mov	r1, #1
   31318:	mov	r4, r0
   3131c:	mov	r5, #1
   31320:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   31324:	mov	r1, r0
   31328:	mvn	r0, #0
   3132c:	cmp	r1, #0
   31330:	popne	{r4, r5, fp, pc}
   31334:	ldr	r0, [r4, #32]
   31338:	mov	r2, #6
   3133c:	str	r5, [r0, #16]
   31340:	mov	r0, #0
   31344:	ldr	r1, [r4, #32]
   31348:	str	r0, [r1, #20]
   3134c:	ldr	r1, [r4, #32]
   31350:	strh	r2, [r1, #14]
   31354:	ldr	r2, [r4, #28]
   31358:	ldr	r3, [r4, #60]	; 0x3c
   3135c:	ldr	r5, [r4, #64]	; 0x40
   31360:	add	r3, r3, r2
   31364:	sub	r2, r5, r2
   31368:	str	r3, [r4, #16]
   3136c:	mvn	r3, #3
   31370:	cmn	r2, #4
   31374:	movcs	r2, r3
   31378:	str	r2, [r4, #24]
   3137c:	str	r3, [r1, #4]
   31380:	pop	{r4, r5, fp, pc}

00031384 <flatcc_builder_reserve_table@@Base>:
   31384:	push	{r4, r5, r6, sl, fp, lr}
   31388:	add	fp, sp, #16
   3138c:	sub	sp, sp, #8
   31390:	cmn	r1, #1
   31394:	ble	31468 <flatcc_builder_reserve_table@@Base+0xe4>
   31398:	mov	r4, r0
   3139c:	ldr	r0, [r0, #32]
   313a0:	mov	r5, r1
   313a4:	ldr	r1, [r4, #56]	; 0x38
   313a8:	ldrh	r2, [r0, #28]
   313ac:	ldr	r0, [r0, #16]
   313b0:	add	r6, r0, r2, lsl #1
   313b4:	add	r0, r6, r5, lsl #1
   313b8:	add	r2, r0, #4
   313bc:	cmp	r2, r1
   313c0:	bls	313e8 <flatcc_builder_reserve_table@@Base+0x64>
   313c4:	ldr	r0, [r4, #40]	; 0x28
   313c8:	ldr	ip, [r4, #48]	; 0x30
   313cc:	mov	r3, #0
   313d0:	add	r1, r4, #52	; 0x34
   313d4:	str	r3, [sp]
   313d8:	mov	r3, #1
   313dc:	blx	ip
   313e0:	cmp	r0, #0
   313e4:	bne	31488 <flatcc_builder_reserve_table@@Base+0x104>
   313e8:	ldr	r0, [r4, #52]	; 0x34
   313ec:	adds	r0, r0, r6
   313f0:	str	r0, [r4, #4]
   313f4:	mvneq	r0, #0
   313f8:	subeq	sp, fp, #16
   313fc:	popeq	{r4, r5, r6, sl, fp, pc}
   31400:	add	r0, r0, #4
   31404:	lsl	r1, r5, #1
   31408:	str	r0, [r4, #4]
   3140c:	ldr	r0, [r4, #32]
   31410:	ldr	r3, [r4, #80]	; 0x50
   31414:	ldr	r5, [r0, #20]
   31418:	orr	r0, r1, #1
   3141c:	add	r2, r5, r0
   31420:	cmp	r2, r3
   31424:	bls	3144c <flatcc_builder_reserve_table@@Base+0xc8>
   31428:	ldr	r0, [r4, #40]	; 0x28
   3142c:	ldr	r6, [r4, #48]	; 0x30
   31430:	mov	r3, #3
   31434:	add	r1, r4, #76	; 0x4c
   31438:	str	r3, [sp]
   3143c:	mov	r3, #0
   31440:	blx	r6
   31444:	cmp	r0, #0
   31448:	bne	31488 <flatcc_builder_reserve_table@@Base+0x104>
   3144c:	ldr	r0, [r4, #76]	; 0x4c
   31450:	adds	r0, r0, r5
   31454:	str	r0, [r4]
   31458:	mov	r0, #0
   3145c:	mvneq	r0, #0
   31460:	sub	sp, fp, #16
   31464:	pop	{r4, r5, r6, sl, fp, pc}
   31468:	ldr	r0, [pc, #56]	; 314a8 <flatcc_builder_reserve_table@@Base+0x124>
   3146c:	ldr	r1, [pc, #56]	; 314ac <flatcc_builder_reserve_table@@Base+0x128>
   31470:	ldr	r3, [pc, #56]	; 314b0 <flatcc_builder_reserve_table@@Base+0x12c>
   31474:	movw	r2, #1065	; 0x429
   31478:	add	r0, pc, r0
   3147c:	add	r1, pc, r1
   31480:	add	r3, pc, r3
   31484:	bl	14f3c <__assert_fail@plt>
   31488:	ldr	r0, [pc, #36]	; 314b4 <flatcc_builder_reserve_table@@Base+0x130>
   3148c:	ldr	r1, [pc, #36]	; 314b8 <flatcc_builder_reserve_table@@Base+0x134>
   31490:	ldr	r3, [pc, #36]	; 314bc <flatcc_builder_reserve_table@@Base+0x138>
   31494:	mov	r2, #308	; 0x134
   31498:	add	r0, pc, r0
   3149c:	add	r1, pc, r1
   314a0:	add	r3, pc, r3
   314a4:	bl	14f3c <__assert_fail@plt>
   314a8:	strdeq	sl, [r1], -r0
   314ac:	andeq	sl, r1, r2, ror r0
   314b0:	andeq	sl, r1, r7, lsr #15
   314b4:	andeq	fp, r1, r3, lsl r2
   314b8:	andeq	sl, r1, r2, asr r0
   314bc:	andeq	fp, r1, r5, asr #32

000314c0 <flatcc_builder_start_table@@Base>:
   314c0:	push	{r4, r5, r6, r7, fp, lr}
   314c4:	add	fp, sp, #16
   314c8:	sub	sp, sp, #8
   314cc:	mov	r6, r1
   314d0:	mov	r1, #4
   314d4:	mov	r4, r0
   314d8:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   314dc:	mvn	r5, #0
   314e0:	cmp	r0, #0
   314e4:	beq	314f4 <flatcc_builder_start_table@@Base+0x34>
   314e8:	mov	r0, r5
   314ec:	sub	sp, fp, #16
   314f0:	pop	{r4, r5, r6, r7, fp, pc}
   314f4:	mov	r1, r4
   314f8:	ldr	r2, [r4, #4]
   314fc:	ldr	r3, [r4, #32]
   31500:	ldr	r0, [r1, #52]!	; 0x34
   31504:	sub	r0, r2, r0
   31508:	str	r0, [r3, #16]
   3150c:	ldr	r0, [r4]
   31510:	ldr	r3, [r4, #76]	; 0x4c
   31514:	ldr	r2, [r4, #32]
   31518:	sub	r0, r0, r3
   3151c:	mov	r3, #0
   31520:	str	r0, [r2, #20]
   31524:	ldr	r0, [r4, #12]
   31528:	ldr	r2, [r4, #32]
   3152c:	str	r0, [r2, #24]
   31530:	ldr	r0, [r4, #32]
   31534:	ldrh	r2, [r4, #8]
   31538:	strh	r2, [r0, #28]
   3153c:	movw	r0, #15186	; 0x3b52
   31540:	strh	r3, [r4, #8]
   31544:	mov	r2, #3
   31548:	movt	r0, #12137	; 0x2f69
   3154c:	str	r0, [r4, #12]
   31550:	ldr	r0, [r4, #32]
   31554:	strh	r2, [r0, #14]
   31558:	ldrh	r2, [r0, #28]
   3155c:	ldr	r0, [r0, #16]
   31560:	add	r7, r0, r2, lsl #1
   31564:	add	r0, r7, r6, lsl #1
   31568:	add	r2, r0, #4
   3156c:	ldr	r0, [r4, #56]	; 0x38
   31570:	cmp	r2, r0
   31574:	bls	31594 <flatcc_builder_start_table@@Base+0xd4>
   31578:	ldr	r0, [r4, #40]	; 0x28
   3157c:	ldr	ip, [r4, #48]	; 0x30
   31580:	str	r3, [sp]
   31584:	mov	r3, #1
   31588:	blx	ip
   3158c:	cmp	r0, #0
   31590:	bne	31638 <flatcc_builder_start_table@@Base+0x178>
   31594:	ldr	r0, [r4, #52]	; 0x34
   31598:	adds	r0, r0, r7
   3159c:	str	r0, [r4, #4]
   315a0:	beq	314e8 <flatcc_builder_start_table@@Base+0x28>
   315a4:	add	r0, r0, #4
   315a8:	lsl	r1, r6, #1
   315ac:	str	r0, [r4, #4]
   315b0:	ldr	r0, [r4, #32]
   315b4:	ldr	r3, [r4, #80]	; 0x50
   315b8:	ldr	r6, [r0, #20]
   315bc:	orr	r0, r1, #1
   315c0:	add	r2, r6, r0
   315c4:	cmp	r2, r3
   315c8:	bls	315f0 <flatcc_builder_start_table@@Base+0x130>
   315cc:	ldr	r0, [r4, #40]	; 0x28
   315d0:	ldr	r7, [r4, #48]	; 0x30
   315d4:	mov	r3, #3
   315d8:	add	r1, r4, #76	; 0x4c
   315dc:	str	r3, [sp]
   315e0:	mov	r3, #0
   315e4:	blx	r7
   315e8:	cmp	r0, #0
   315ec:	bne	31638 <flatcc_builder_start_table@@Base+0x178>
   315f0:	ldr	r0, [r4, #76]	; 0x4c
   315f4:	adds	r0, r0, r6
   315f8:	str	r0, [r4]
   315fc:	beq	314e8 <flatcc_builder_start_table@@Base+0x28>
   31600:	ldr	r0, [r4, #28]
   31604:	ldr	r2, [r4, #60]	; 0x3c
   31608:	ldr	r3, [r4, #64]	; 0x40
   3160c:	ldr	r1, [r4, #32]
   31610:	mov	r5, #0
   31614:	add	r2, r2, r0
   31618:	sub	r0, r3, r0
   3161c:	str	r2, [r4, #16]
   31620:	movw	r2, #65532	; 0xfffc
   31624:	cmp	r0, r2
   31628:	movcs	r0, r2
   3162c:	str	r0, [r4, #24]
   31630:	str	r2, [r1, #4]
   31634:	b	314e8 <flatcc_builder_start_table@@Base+0x28>
   31638:	ldr	r0, [pc, #24]	; 31658 <flatcc_builder_start_table@@Base+0x198>
   3163c:	ldr	r1, [pc, #24]	; 3165c <flatcc_builder_start_table@@Base+0x19c>
   31640:	ldr	r3, [pc, #24]	; 31660 <flatcc_builder_start_table@@Base+0x1a0>
   31644:	mov	r2, #308	; 0x134
   31648:	add	r0, pc, r0
   3164c:	add	r1, pc, r1
   31650:	add	r3, pc, r3
   31654:	bl	14f3c <__assert_fail@plt>
   31658:	andeq	fp, r1, r3, rrx
   3165c:	andeq	r9, r1, r2, lsr #29
   31660:	muleq	r1, r5, lr

00031664 <flatcc_builder_create_vtable@@Base>:
   31664:	push	{r4, r5, fp, lr}
   31668:	add	fp, sp, #8
   3166c:	sub	sp, sp, #80	; 0x50
   31670:	mov	r3, r2
   31674:	mov	r2, #0
   31678:	mov	r4, r0
   3167c:	cmp	r3, #0
   31680:	str	r2, [sp, #12]
   31684:	str	r2, [sp, #8]
   31688:	movne	r2, #1
   3168c:	strne	r1, [sp, #16]
   31690:	strne	r3, [sp, #8]
   31694:	strne	r3, [sp, #20]
   31698:	strne	r2, [sp, #12]
   3169c:	ldr	r0, [r4, #152]	; 0x98
   316a0:	cmp	r0, #0
   316a4:	bne	316b4 <flatcc_builder_create_vtable@@Base+0x50>
   316a8:	ldr	r0, [r4, #180]	; 0xb4
   316ac:	cmp	r0, #0
   316b0:	beq	31700 <flatcc_builder_create_vtable@@Base+0x9c>
   316b4:	cmp	r3, #0
   316b8:	beq	31744 <flatcc_builder_create_vtable@@Base+0xe0>
   316bc:	ldr	r0, [r4, #136]	; 0x88
   316c0:	ldr	ip, [r4, #44]	; 0x2c
   316c4:	add	r1, sp, #8
   316c8:	add	r1, r1, #8
   316cc:	sub	r5, r0, r3
   316d0:	ldr	r0, [r4, #36]	; 0x24
   316d4:	str	r3, [sp]
   316d8:	mov	r3, r5
   316dc:	blx	ip
   316e0:	cmp	r0, #0
   316e4:	bne	31764 <flatcc_builder_create_vtable@@Base+0x100>
   316e8:	cmp	r5, #0
   316ec:	str	r5, [r4, #136]	; 0x88
   316f0:	beq	31738 <flatcc_builder_create_vtable@@Base+0xd4>
   316f4:	add	r0, r5, #1
   316f8:	sub	sp, fp, #8
   316fc:	pop	{r4, r5, fp, pc}
   31700:	ldr	r5, [r4, #140]	; 0x8c
   31704:	ldr	r0, [r4, #36]	; 0x24
   31708:	ldr	ip, [r4, #44]	; 0x2c
   3170c:	add	r1, r5, r3
   31710:	str	r1, [r4, #140]	; 0x8c
   31714:	add	r1, sp, #8
   31718:	str	r3, [sp]
   3171c:	mov	r3, r5
   31720:	add	r1, r1, #8
   31724:	blx	ip
   31728:	cmp	r0, #0
   3172c:	bne	31784 <flatcc_builder_create_vtable@@Base+0x120>
   31730:	adds	r0, r5, #1
   31734:	bne	316f8 <flatcc_builder_create_vtable@@Base+0x94>
   31738:	mov	r0, #0
   3173c:	sub	sp, fp, #8
   31740:	pop	{r4, r5, fp, pc}
   31744:	ldr	r0, [pc, #100]	; 317b0 <flatcc_builder_create_vtable@@Base+0x14c>
   31748:	ldr	r1, [pc, #100]	; 317b4 <flatcc_builder_create_vtable@@Base+0x150>
   3174c:	ldr	r3, [pc, #100]	; 317b8 <flatcc_builder_create_vtable@@Base+0x154>
   31750:	movw	r2, #647	; 0x287
   31754:	add	r0, pc, r0
   31758:	add	r1, pc, r1
   3175c:	add	r3, pc, r3
   31760:	bl	14f3c <__assert_fail@plt>
   31764:	ldr	r0, [pc, #80]	; 317bc <flatcc_builder_create_vtable@@Base+0x158>
   31768:	ldr	r1, [pc, #80]	; 317c0 <flatcc_builder_create_vtable@@Base+0x15c>
   3176c:	ldr	r3, [pc, #80]	; 317c4 <flatcc_builder_create_vtable@@Base+0x160>
   31770:	movw	r2, #651	; 0x28b
   31774:	add	r0, pc, r0
   31778:	add	r1, pc, r1
   3177c:	add	r3, pc, r3
   31780:	bl	14f3c <__assert_fail@plt>
   31784:	ldr	r0, [pc, #24]	; 317a4 <flatcc_builder_create_vtable@@Base+0x140>
   31788:	ldr	r1, [pc, #24]	; 317a8 <flatcc_builder_create_vtable@@Base+0x144>
   3178c:	ldr	r3, [pc, #24]	; 317ac <flatcc_builder_create_vtable@@Base+0x148>
   31790:	movw	r2, #677	; 0x2a5
   31794:	add	r0, pc, r0
   31798:	add	r1, pc, r1
   3179c:	add	r3, pc, r3
   317a0:	bl	14f3c <__assert_fail@plt>
   317a4:	andeq	sl, r1, r7, lsl pc
   317a8:	andeq	r9, r1, r6, asr sp
   317ac:	andeq	sl, r1, sl, lsl #29
   317b0:	andeq	sl, r1, r7, asr pc
   317b4:	muleq	r1, r6, sp
   317b8:	andeq	sl, r1, lr, lsl #28
   317bc:	andeq	sl, r1, r7, lsr pc
   317c0:	andeq	r9, r1, r6, ror sp
   317c4:	andeq	sl, r1, lr, ror #27

000317c8 <flatcc_builder_create_cached_vtable@@Base>:
   317c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   317cc:	add	fp, sp, #28
   317d0:	sub	sp, sp, #20
   317d4:	mov	sl, r0
   317d8:	ldr	r0, [r0, #116]	; 0x74
   317dc:	mov	r8, r3
   317e0:	mov	r5, r2
   317e4:	str	r1, [sp, #16]
   317e8:	cmp	r0, #0
   317ec:	beq	31890 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   317f0:	ldr	r1, [sl, #92]	; 0x5c
   317f4:	rsb	r0, r0, #32
   317f8:	lsr	r0, r8, r0
   317fc:	add	r6, r1, r0, lsl #2
   31800:	cmp	r6, #0
   31804:	beq	31954 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   31808:	ldr	r7, [r6]
   3180c:	str	r6, [sp, #12]
   31810:	cmp	r7, #0
   31814:	beq	3195c <flatcc_builder_create_cached_vtable@@Base+0x194>
   31818:	ldr	r4, [sl, #68]	; 0x44
   3181c:	ldr	r8, [sl, #100]	; 0x64
   31820:	mov	r0, #0
   31824:	str	r0, [sp, #8]
   31828:	add	r9, r8, r7
   3182c:	mov	r1, r4
   31830:	ldr	r0, [r9, #8]
   31834:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   31838:	cmp	r0, r5
   3183c:	bne	31854 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   31840:	ldr	r0, [sp, #16]
   31844:	mov	r2, r5
   31848:	bl	14e64 <memcmp@plt>
   3184c:	cmp	r0, #0
   31850:	beq	31868 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   31854:	ldr	r7, [r9, #12]!
   31858:	cmp	r7, #0
   3185c:	mov	r6, r9
   31860:	bne	31828 <flatcc_builder_create_cached_vtable@@Base+0x60>
   31864:	b	3194c <flatcc_builder_create_cached_vtable@@Base+0x184>
   31868:	ldr	r0, [sl, #152]	; 0x98
   3186c:	ldr	r1, [r9, #4]
   31870:	cmp	r1, r0
   31874:	beq	31ac0 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   31878:	mov	r6, r9
   3187c:	mov	r0, r9
   31880:	ldr	r7, [r6, #12]!
   31884:	cmp	r7, #0
   31888:	bne	31824 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   3188c:	b	31960 <flatcc_builder_create_cached_vtable@@Base+0x198>
   31890:	ldr	r0, [sl, #124]	; 0x7c
   31894:	cmp	r0, #0
   31898:	bne	31b0c <flatcc_builder_create_cached_vtable@@Base+0x344>
   3189c:	ldr	r0, [sl, #104]	; 0x68
   318a0:	add	r7, sl, #100	; 0x64
   318a4:	cmp	r0, #15
   318a8:	bhi	318d4 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   318ac:	ldr	r0, [sl, #40]	; 0x28
   318b0:	ldr	r6, [sl, #48]	; 0x30
   318b4:	mov	r1, #6
   318b8:	mov	r2, #16
   318bc:	mov	r3, #0
   318c0:	str	r1, [sp]
   318c4:	mov	r1, r7
   318c8:	blx	r6
   318cc:	cmp	r0, #0
   318d0:	bne	31aec <flatcc_builder_create_cached_vtable@@Base+0x324>
   318d4:	ldr	r0, [r7]
   318d8:	mov	r7, #0
   318dc:	cmp	r0, #0
   318e0:	beq	31a00 <flatcc_builder_create_cached_vtable@@Base+0x238>
   318e4:	mov	r0, #16
   318e8:	mov	r2, #5
   318ec:	add	r1, sl, #92	; 0x5c
   318f0:	mov	r3, #1
   318f4:	mov	r4, #256	; 0x100
   318f8:	str	r0, [sl, #124]	; 0x7c
   318fc:	ldr	r0, [sl, #40]	; 0x28
   31900:	ldr	r6, [sl, #48]	; 0x30
   31904:	str	r2, [sp]
   31908:	mov	r2, #256	; 0x100
   3190c:	blx	r6
   31910:	cmp	r0, #0
   31914:	bne	31a00 <flatcc_builder_create_cached_vtable@@Base+0x238>
   31918:	ldr	r0, [sl, #96]	; 0x60
   3191c:	mov	r1, r4
   31920:	lsl	r4, r4, #1
   31924:	cmp	r0, r1, lsl #1
   31928:	bcs	3191c <flatcc_builder_create_cached_vtable@@Base+0x154>
   3192c:	lsr	r1, r1, #2
   31930:	mvn	r0, #0
   31934:	mov	r2, #1
   31938:	add	r0, r0, #1
   3193c:	cmp	r1, r2, lsl r0
   31940:	bhi	31938 <flatcc_builder_create_cached_vtable@@Base+0x170>
   31944:	str	r0, [sl, #116]	; 0x74
   31948:	b	317f0 <flatcc_builder_create_cached_vtable@@Base+0x28>
   3194c:	ldr	r9, [sp, #8]
   31950:	b	31960 <flatcc_builder_create_cached_vtable@@Base+0x198>
   31954:	mov	r7, #0
   31958:	b	31a00 <flatcc_builder_create_cached_vtable@@Base+0x238>
   3195c:	mov	r9, #0
   31960:	ldr	r4, [sl, #124]	; 0x7c
   31964:	ldr	r0, [sl, #104]	; 0x68
   31968:	add	r7, sl, #100	; 0x64
   3196c:	add	r2, r4, #16
   31970:	cmp	r2, r0
   31974:	bls	3199c <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   31978:	ldr	r0, [sl, #40]	; 0x28
   3197c:	ldr	r6, [sl, #48]	; 0x30
   31980:	mov	r1, #6
   31984:	mov	r3, #0
   31988:	str	r1, [sp]
   3198c:	mov	r1, r7
   31990:	blx	r6
   31994:	cmp	r0, #0
   31998:	bne	31aec <flatcc_builder_create_cached_vtable@@Base+0x324>
   3199c:	ldr	r0, [r7]
   319a0:	mov	r7, #0
   319a4:	adds	r4, r0, r4
   319a8:	beq	31a00 <flatcc_builder_create_cached_vtable@@Base+0x238>
   319ac:	ldr	r0, [sl, #124]	; 0x7c
   319b0:	ldr	r1, [sl, #152]	; 0x98
   319b4:	add	r2, r0, #16
   319b8:	str	r2, [sl, #124]	; 0x7c
   319bc:	ldr	r2, [sp, #12]
   319c0:	str	r1, [r4, #4]
   319c4:	ldr	r1, [r2]
   319c8:	str	r1, [r4, #12]
   319cc:	ldr	r1, [sp, #16]
   319d0:	str	r0, [r2]
   319d4:	mov	r0, sl
   319d8:	mov	r2, r5
   319dc:	bl	31664 <flatcc_builder_create_vtable@@Base>
   319e0:	cmp	r0, #0
   319e4:	str	r0, [r4]
   319e8:	beq	31a00 <flatcc_builder_create_cached_vtable@@Base+0x238>
   319ec:	cmp	r9, #0
   319f0:	beq	31a0c <flatcc_builder_create_cached_vtable@@Base+0x244>
   319f4:	ldr	r0, [r9, #8]
   319f8:	str	r0, [r4, #8]
   319fc:	ldr	r7, [r4]
   31a00:	mov	r0, r7
   31a04:	sub	sp, fp, #28
   31a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a0c:	ldr	r6, [sl, #120]	; 0x78
   31a10:	ldr	r0, [sl, #172]	; 0xac
   31a14:	add	r2, r6, r5
   31a18:	cmp	r0, #0
   31a1c:	beq	31a58 <flatcc_builder_create_cached_vtable@@Base+0x290>
   31a20:	cmp	r0, r2
   31a24:	bcs	31a58 <flatcc_builder_create_cached_vtable@@Base+0x290>
   31a28:	ldr	r0, [sl, #116]	; 0x74
   31a2c:	cmp	r0, #0
   31a30:	beq	319fc <flatcc_builder_create_cached_vtable@@Base+0x234>
   31a34:	ldr	r0, [sl, #92]	; 0x5c
   31a38:	ldr	r2, [sl, #96]	; 0x60
   31a3c:	mov	r1, #0
   31a40:	mov	r5, #0
   31a44:	bl	14ee8 <memset@plt>
   31a48:	mov	r0, #16
   31a4c:	str	r5, [sl, #120]	; 0x78
   31a50:	str	r0, [sl, #124]	; 0x7c
   31a54:	b	319fc <flatcc_builder_create_cached_vtable@@Base+0x234>
   31a58:	ldr	r0, [sl, #72]	; 0x48
   31a5c:	add	r7, sl, #68	; 0x44
   31a60:	cmp	r2, r0
   31a64:	bls	31a8c <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   31a68:	ldr	r0, [sl, #40]	; 0x28
   31a6c:	ldr	ip, [sl, #48]	; 0x30
   31a70:	mov	r1, #2
   31a74:	mov	r3, #0
   31a78:	str	r1, [sp]
   31a7c:	mov	r1, r7
   31a80:	blx	ip
   31a84:	cmp	r0, #0
   31a88:	bne	31aec <flatcc_builder_create_cached_vtable@@Base+0x324>
   31a8c:	ldr	r0, [r7]
   31a90:	adds	r0, r0, r6
   31a94:	beq	31ab8 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   31a98:	ldr	r1, [sl, #120]	; 0x78
   31a9c:	mov	r2, r5
   31aa0:	str	r1, [r4, #8]
   31aa4:	add	r1, r1, r5
   31aa8:	str	r1, [sl, #120]	; 0x78
   31aac:	ldr	r1, [sp, #16]
   31ab0:	bl	14e58 <memcpy@plt>
   31ab4:	b	319fc <flatcc_builder_create_cached_vtable@@Base+0x234>
   31ab8:	mvn	r7, #0
   31abc:	b	31a00 <flatcc_builder_create_cached_vtable@@Base+0x238>
   31ac0:	ldr	r0, [sp, #12]
   31ac4:	cmp	r6, r0
   31ac8:	beq	31ae4 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   31acc:	mov	r1, r0
   31ad0:	ldr	r0, [r9, #12]
   31ad4:	str	r0, [r6]
   31ad8:	ldr	r0, [r1]
   31adc:	str	r0, [r9, #12]
   31ae0:	str	r7, [r1]
   31ae4:	ldr	r7, [r9]
   31ae8:	b	31a00 <flatcc_builder_create_cached_vtable@@Base+0x238>
   31aec:	ldr	r0, [pc, #68]	; 31b38 <flatcc_builder_create_cached_vtable@@Base+0x370>
   31af0:	ldr	r1, [pc, #68]	; 31b3c <flatcc_builder_create_cached_vtable@@Base+0x374>
   31af4:	ldr	r3, [pc, #68]	; 31b40 <flatcc_builder_create_cached_vtable@@Base+0x378>
   31af8:	mov	r2, #308	; 0x134
   31afc:	add	r0, pc, r0
   31b00:	add	r1, pc, r1
   31b04:	add	r3, pc, r3
   31b08:	bl	14f3c <__assert_fail@plt>
   31b0c:	ldr	r0, [pc, #24]	; 31b2c <flatcc_builder_create_cached_vtable@@Base+0x364>
   31b10:	ldr	r1, [pc, #24]	; 31b30 <flatcc_builder_create_cached_vtable@@Base+0x368>
   31b14:	ldr	r3, [pc, #24]	; 31b34 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   31b18:	movw	r2, #342	; 0x156
   31b1c:	add	r0, pc, r0
   31b20:	add	r1, pc, r1
   31b24:	add	r3, pc, r3
   31b28:	bl	14f3c <__assert_fail@plt>
   31b2c:	andeq	sl, r1, r3, asr fp
   31b30:	andeq	r9, r1, lr, asr #19
   31b34:	andeq	sl, r1, sl, asr fp
   31b38:	andeq	sl, r1, pc, lsr #23
   31b3c:	andeq	r9, r1, lr, ror #19
   31b40:	andeq	sl, r1, r1, ror #19

00031b44 <flatcc_builder_create_table@@Base>:
   31b44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31b48:	add	fp, sp, #24
   31b4c:	sub	sp, sp, #80	; 0x50
   31b50:	ldr	r5, [fp, #12]
   31b54:	cmn	r5, #1
   31b58:	ble	31cac <flatcc_builder_create_table@@Base+0x168>
   31b5c:	ldr	ip, [fp, #16]
   31b60:	tst	ip, #1
   31b64:	beq	31ccc <flatcc_builder_create_table@@Base+0x188>
   31b68:	mov	r8, r0
   31b6c:	ldrh	r0, [r0, #128]	; 0x80
   31b70:	cmp	r3, #4
   31b74:	movls	r3, #4
   31b78:	cmp	r0, r3
   31b7c:	strhcc	r3, [r8, #128]	; 0x80
   31b80:	sub	r3, r3, #1
   31b84:	cmp	r5, #1
   31b88:	ldr	r4, [r8, #136]	; 0x88
   31b8c:	sub	r0, r4, r2
   31b90:	and	r0, r0, r3
   31b94:	add	r3, ip, r0
   31b98:	mvn	ip, #3
   31b9c:	sub	r6, ip, r2
   31ba0:	add	r4, r6, r4
   31ba4:	add	r6, r4, #1
   31ba8:	sub	r3, r6, r3
   31bac:	str	r3, [fp, #-28]	; 0xffffffe4
   31bb0:	blt	31bdc <flatcc_builder_create_table@@Base+0x98>
   31bb4:	ldr	r3, [fp, #8]
   31bb8:	sub	r6, r4, r0
   31bbc:	sub	r4, ip, r6
   31bc0:	ldrh	r6, [r3], #2
   31bc4:	subs	r5, r5, #1
   31bc8:	ldr	r7, [r6, r1]
   31bcc:	add	r7, r4, r7
   31bd0:	sub	r7, r7, r6
   31bd4:	str	r7, [r6, r1]
   31bd8:	bne	31bc0 <flatcc_builder_create_table@@Base+0x7c>
   31bdc:	sub	r3, fp, #28
   31be0:	mov	r4, #4
   31be4:	cmp	r2, #0
   31be8:	str	r3, [sp, #12]
   31bec:	mov	r3, #1
   31bf0:	str	r4, [sp, #4]
   31bf4:	str	r4, [sp, #16]
   31bf8:	str	r3, [sp, #8]
   31bfc:	beq	31c18 <flatcc_builder_create_table@@Base+0xd4>
   31c00:	mov	r3, #2
   31c04:	add	r4, r2, #4
   31c08:	str	r1, [sp, #20]
   31c0c:	str	r2, [sp, #24]
   31c10:	str	r3, [sp, #8]
   31c14:	str	r4, [sp, #4]
   31c18:	cmp	r0, #0
   31c1c:	beq	31c48 <flatcc_builder_create_table@@Base+0x104>
   31c20:	add	r4, r4, r0
   31c24:	add	r1, sp, #4
   31c28:	str	r4, [sp, #4]
   31c2c:	add	r1, r1, r3, lsl #3
   31c30:	add	r3, r3, #1
   31c34:	ldr	r2, [pc, #208]	; 31d0c <flatcc_builder_create_table@@Base+0x1c8>
   31c38:	ldr	r2, [pc, r2]
   31c3c:	str	r2, [r1, #8]
   31c40:	str	r0, [r1, #12]
   31c44:	str	r3, [sp, #8]
   31c48:	cmp	r4, #0
   31c4c:	ble	31cec <flatcc_builder_create_table@@Base+0x1a8>
   31c50:	ldr	r0, [r8, #136]	; 0x88
   31c54:	ldr	r7, [r8, #44]	; 0x2c
   31c58:	add	r1, sp, #4
   31c5c:	mov	r2, r3
   31c60:	add	r1, r1, #8
   31c64:	sub	r5, r0, r4
   31c68:	ldr	r0, [r8, #36]	; 0x24
   31c6c:	str	r4, [sp]
   31c70:	mov	r3, r5
   31c74:	blx	r7
   31c78:	cmp	r0, #0
   31c7c:	streq	r5, [r8, #136]	; 0x88
   31c80:	moveq	r0, r5
   31c84:	subeq	sp, fp, #24
   31c88:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   31c8c:	ldr	r0, [pc, #160]	; 31d34 <flatcc_builder_create_table@@Base+0x1f0>
   31c90:	ldr	r1, [pc, #160]	; 31d38 <flatcc_builder_create_table@@Base+0x1f4>
   31c94:	ldr	r3, [pc, #160]	; 31d3c <flatcc_builder_create_table@@Base+0x1f8>
   31c98:	movw	r2, #651	; 0x28b
   31c9c:	add	r0, pc, r0
   31ca0:	add	r1, pc, r1
   31ca4:	add	r3, pc, r3
   31ca8:	bl	14f3c <__assert_fail@plt>
   31cac:	ldr	r0, [pc, #92]	; 31d10 <flatcc_builder_create_table@@Base+0x1cc>
   31cb0:	ldr	r1, [pc, #92]	; 31d14 <flatcc_builder_create_table@@Base+0x1d0>
   31cb4:	ldr	r3, [pc, #92]	; 31d18 <flatcc_builder_create_table@@Base+0x1d4>
   31cb8:	movw	r2, #1237	; 0x4d5
   31cbc:	add	r0, pc, r0
   31cc0:	add	r1, pc, r1
   31cc4:	add	r3, pc, r3
   31cc8:	bl	14f3c <__assert_fail@plt>
   31ccc:	ldr	r0, [pc, #72]	; 31d1c <flatcc_builder_create_table@@Base+0x1d8>
   31cd0:	ldr	r1, [pc, #72]	; 31d20 <flatcc_builder_create_table@@Base+0x1dc>
   31cd4:	ldr	r3, [pc, #72]	; 31d24 <flatcc_builder_create_table@@Base+0x1e0>
   31cd8:	movw	r2, #1243	; 0x4db
   31cdc:	add	r0, pc, r0
   31ce0:	add	r1, pc, r1
   31ce4:	add	r3, pc, r3
   31ce8:	bl	14f3c <__assert_fail@plt>
   31cec:	ldr	r0, [pc, #52]	; 31d28 <flatcc_builder_create_table@@Base+0x1e4>
   31cf0:	ldr	r1, [pc, #52]	; 31d2c <flatcc_builder_create_table@@Base+0x1e8>
   31cf4:	ldr	r3, [pc, #52]	; 31d30 <flatcc_builder_create_table@@Base+0x1ec>
   31cf8:	movw	r2, #647	; 0x287
   31cfc:	add	r0, pc, r0
   31d00:	add	r1, pc, r1
   31d04:	add	r3, pc, r3
   31d08:	bl	14f3c <__assert_fail@plt>
   31d0c:	andeq	sp, r2, ip, lsr #8
   31d10:	andeq	r9, r1, r5, lsr #31
   31d14:	andeq	r9, r1, lr, lsr #16
   31d18:	andeq	r9, r1, pc, lsr #31
   31d1c:	andeq	sl, r1, r3, lsr r0
   31d20:	andeq	r9, r1, lr, lsl #16
   31d24:	andeq	r9, r1, pc, lsl #31
   31d28:	andeq	sl, r1, pc, lsr #19
   31d2c:	andeq	r9, r1, lr, ror #15
   31d30:	andeq	sl, r1, r6, ror #16
   31d34:	andeq	sl, r1, pc, lsl #20
   31d38:	andeq	r9, r1, lr, asr #16
   31d3c:	andeq	sl, r1, r6, asr #17

00031d40 <flatcc_builder_check_required_field@@Base>:
   31d40:	ldr	r2, [r0, #32]
   31d44:	ldrh	r2, [r2, #14]
   31d48:	cmp	r2, #3
   31d4c:	bne	31d7c <flatcc_builder_check_required_field@@Base+0x3c>
   31d50:	ldrh	r3, [r0, #8]
   31d54:	mov	r2, #0
   31d58:	cmp	r3, r1
   31d5c:	bls	31d74 <flatcc_builder_check_required_field@@Base+0x34>
   31d60:	ldr	r0, [r0, #4]
   31d64:	add	r0, r0, r1, lsl #1
   31d68:	ldrh	r2, [r0]
   31d6c:	cmp	r2, #0
   31d70:	movwne	r2, #1
   31d74:	mov	r0, r2
   31d78:	bx	lr
   31d7c:	push	{fp, lr}
   31d80:	mov	fp, sp
   31d84:	ldr	r0, [pc, #24]	; 31da4 <flatcc_builder_check_required_field@@Base+0x64>
   31d88:	ldr	r1, [pc, #24]	; 31da8 <flatcc_builder_check_required_field@@Base+0x68>
   31d8c:	ldr	r3, [pc, #24]	; 31dac <flatcc_builder_check_required_field@@Base+0x6c>
   31d90:	movw	r2, #1272	; 0x4f8
   31d94:	add	r0, pc, r0
   31d98:	add	r1, pc, r1
   31d9c:	add	r3, pc, r3
   31da0:	bl	14f3c <__assert_fail@plt>
   31da4:	andeq	r9, r1, r6, lsl #31
   31da8:	andeq	r9, r1, r6, asr r7
   31dac:	andeq	r9, r1, r9, lsr #31

00031db0 <flatcc_builder_check_union_field@@Base>:
   31db0:	mov	r2, r0
   31db4:	ldr	r0, [r0, #32]
   31db8:	ldrh	r0, [r0, #14]
   31dbc:	cmp	r0, #3
   31dc0:	bne	31e20 <flatcc_builder_check_union_field@@Base+0x70>
   31dc4:	cmp	r1, #0
   31dc8:	mov	r0, #0
   31dcc:	ldrhne	r3, [r2, #8]
   31dd0:	cmpne	r3, r1
   31dd4:	bhi	31ddc <flatcc_builder_check_union_field@@Base+0x2c>
   31dd8:	bx	lr
   31ddc:	ldr	r0, [r2, #4]
   31de0:	add	r0, r0, r1, lsl #1
   31de4:	ldrh	r1, [r0, #-2]
   31de8:	cmp	r1, #0
   31dec:	beq	31e10 <flatcc_builder_check_union_field@@Base+0x60>
   31df0:	ldr	r2, [r2, #16]
   31df4:	ldrh	r0, [r0]
   31df8:	ldrb	r1, [r2, r1]
   31dfc:	cmp	r1, #0
   31e00:	beq	31e14 <flatcc_builder_check_union_field@@Base+0x64>
   31e04:	cmp	r0, #0
   31e08:	movwne	r0, #1
   31e0c:	bx	lr
   31e10:	ldrh	r0, [r0]
   31e14:	clz	r0, r0
   31e18:	lsr	r0, r0, #5
   31e1c:	bx	lr
   31e20:	push	{fp, lr}
   31e24:	mov	fp, sp
   31e28:	ldr	r0, [pc, #24]	; 31e48 <flatcc_builder_check_union_field@@Base+0x98>
   31e2c:	ldr	r1, [pc, #24]	; 31e4c <flatcc_builder_check_union_field@@Base+0x9c>
   31e30:	ldr	r3, [pc, #24]	; 31e50 <flatcc_builder_check_union_field@@Base+0xa0>
   31e34:	movw	r2, #1279	; 0x4ff
   31e38:	add	r0, pc, r0
   31e3c:	add	r1, pc, r1
   31e40:	add	r3, pc, r3
   31e44:	bl	14f3c <__assert_fail@plt>
   31e48:	andeq	r9, r1, r2, ror #29
   31e4c:			; <UNDEFINED> instruction: 0x000196b2
   31e50:	andeq	r9, r1, r8, asr pc

00031e54 <flatcc_builder_check_required@@Base>:
   31e54:	push	{fp, lr}
   31e58:	mov	fp, sp
   31e5c:	mov	r3, r0
   31e60:	ldr	r0, [r0, #32]
   31e64:	ldrh	r0, [r0, #14]
   31e68:	cmp	r0, #3
   31e6c:	bne	31ec4 <flatcc_builder_check_required@@Base+0x70>
   31e70:	ldrh	ip, [r3, #8]
   31e74:	mov	r0, #0
   31e78:	cmp	ip, r2
   31e7c:	movge	r0, #1
   31e80:	cmpge	r2, #1
   31e84:	bge	31e8c <flatcc_builder_check_required@@Base+0x38>
   31e88:	pop	{fp, pc}
   31e8c:	ldr	ip, [r3, #4]
   31e90:	mov	lr, #0
   31e94:	b	31ea8 <flatcc_builder_check_required@@Base+0x54>
   31e98:	add	lr, lr, #1
   31e9c:	add	r1, r1, #2
   31ea0:	cmp	lr, r2
   31ea4:	popge	{fp, pc}
   31ea8:	ldrh	r3, [r1]
   31eac:	add	r3, ip, r3, lsl #1
   31eb0:	ldrh	r3, [r3]
   31eb4:	cmp	r3, #0
   31eb8:	bne	31e98 <flatcc_builder_check_required@@Base+0x44>
   31ebc:	mov	r0, #0
   31ec0:	pop	{fp, pc}
   31ec4:	ldr	r0, [pc, #24]	; 31ee4 <flatcc_builder_check_required@@Base+0x90>
   31ec8:	ldr	r1, [pc, #24]	; 31ee8 <flatcc_builder_check_required@@Base+0x94>
   31ecc:	ldr	r3, [pc, #24]	; 31eec <flatcc_builder_check_required@@Base+0x98>
   31ed0:	movw	r2, #1297	; 0x511
   31ed4:	add	r0, pc, r0
   31ed8:	add	r1, pc, r1
   31edc:	add	r3, pc, r3
   31ee0:	bl	14f3c <__assert_fail@plt>
   31ee4:	andeq	r9, r1, r6, asr #28
   31ee8:	andeq	r9, r1, r6, lsl r6
   31eec:	andeq	r9, r1, ip, lsl #30

00031ef0 <flatcc_builder_end_table@@Base>:
   31ef0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31ef4:	add	fp, sp, #24
   31ef8:	sub	sp, sp, #16
   31efc:	mov	r4, r0
   31f00:	ldr	r0, [r0, #32]
   31f04:	ldrh	r0, [r0, #14]
   31f08:	cmp	r0, #3
   31f0c:	bne	32088 <flatcc_builder_end_table@@Base+0x198>
   31f10:	ldrh	r0, [r4, #8]
   31f14:	ldr	r5, [r4, #4]
   31f18:	mov	r1, #4
   31f1c:	movw	r2, #31153	; 0x79b1
   31f20:	movt	r2, #40503	; 0x9e37
   31f24:	add	r0, r1, r0, lsl #1
   31f28:	strh	r0, [r5, #-4]!
   31f2c:	ldrh	r1, [r4, #20]
   31f30:	uxth	r6, r0
   31f34:	add	r1, r1, #4
   31f38:	strh	r1, [r5, #2]
   31f3c:	uxth	r1, r1
   31f40:	ldr	r0, [r4, #12]
   31f44:	eor	r0, r0, r6
   31f48:	mul	r0, r0, r2
   31f4c:	eor	r0, r0, r1
   31f50:	mov	r1, r5
   31f54:	mul	r3, r0, r2
   31f58:	mov	r0, r4
   31f5c:	mov	r2, r6
   31f60:	str	r3, [r4, #12]
   31f64:	bl	317c8 <flatcc_builder_create_cached_vtable@@Base>
   31f68:	cmp	r0, #0
   31f6c:	beq	32078 <flatcc_builder_end_table@@Base+0x188>
   31f70:	mov	r7, r0
   31f74:	mov	r0, r5
   31f78:	mov	r1, #0
   31f7c:	mov	r2, r6
   31f80:	mov	r8, #0
   31f84:	bl	14ee8 <memset@plt>
   31f88:	ldr	r5, [r4, #32]
   31f8c:	ldr	r0, [r4, #76]	; 0x4c
   31f90:	ldr	r6, [r4]
   31f94:	ldrh	r3, [r4, #130]	; 0x82
   31f98:	ldr	r1, [r4, #16]
   31f9c:	ldr	r2, [r4, #20]
   31fa0:	ldr	r5, [r5, #20]
   31fa4:	add	r0, r0, r5
   31fa8:	sub	r6, r6, r0
   31fac:	asr	r6, r6, #1
   31fb0:	stm	sp, {r0, r6, r7}
   31fb4:	mov	r0, r4
   31fb8:	bl	31b44 <flatcc_builder_create_table@@Base>
   31fbc:	cmp	r0, #0
   31fc0:	beq	3207c <flatcc_builder_end_table@@Base+0x18c>
   31fc4:	ldr	r1, [r4, #32]
   31fc8:	mov	r5, r0
   31fcc:	ldr	r0, [r4, #16]
   31fd0:	ldr	r2, [r4, #20]
   31fd4:	ldr	r3, [r4, #52]	; 0x34
   31fd8:	ldr	r7, [r1, #24]
   31fdc:	str	r7, [r4, #12]
   31fe0:	ldrh	r7, [r1, #28]
   31fe4:	strh	r7, [r4, #8]
   31fe8:	ldr	r7, [r1, #16]
   31fec:	add	r3, r3, r7
   31ff0:	str	r3, [r4, #4]
   31ff4:	ldr	r3, [r4, #76]	; 0x4c
   31ff8:	ldr	r1, [r1, #20]
   31ffc:	add	r1, r3, r1
   32000:	str	r1, [r4]
   32004:	mov	r1, #0
   32008:	bl	14ee8 <memset@plt>
   3200c:	ldr	r0, [r4, #32]
   32010:	ldr	r1, [r4, #60]	; 0x3c
   32014:	ldr	r2, [r4, #64]	; 0x40
   32018:	mov	r8, r5
   3201c:	ldr	r3, [r0, #8]
   32020:	str	r3, [r4, #20]
   32024:	ldr	r3, [r0]
   32028:	str	r3, [r4, #28]
   3202c:	add	r1, r1, r3
   32030:	ldr	r7, [r0, #4]
   32034:	str	r1, [r4, #16]
   32038:	sub	r1, r2, r3
   3203c:	cmp	r1, r7
   32040:	movhi	r1, r7
   32044:	str	r1, [r4, #24]
   32048:	ldrh	r1, [r4, #130]	; 0x82
   3204c:	ldrh	r2, [r4, #128]	; 0x80
   32050:	cmp	r2, r1
   32054:	strhcc	r1, [r4, #128]	; 0x80
   32058:	ldrh	r1, [r0, #12]
   3205c:	sub	r0, r0, #36	; 0x24
   32060:	str	r0, [r4, #32]
   32064:	strh	r1, [r4, #130]	; 0x82
   32068:	ldr	r0, [r4, #156]	; 0x9c
   3206c:	sub	r0, r0, #1
   32070:	str	r0, [r4, #156]	; 0x9c
   32074:	b	3207c <flatcc_builder_end_table@@Base+0x18c>
   32078:	mov	r8, #0
   3207c:	mov	r0, r8
   32080:	sub	sp, fp, #24
   32084:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32088:	ldr	r0, [pc, #24]	; 320a8 <flatcc_builder_end_table@@Base+0x1b8>
   3208c:	ldr	r1, [pc, #24]	; 320ac <flatcc_builder_end_table@@Base+0x1bc>
   32090:	ldr	r3, [pc, #24]	; 320b0 <flatcc_builder_end_table@@Base+0x1c0>
   32094:	movw	r2, #1317	; 0x525
   32098:	add	r0, pc, r0
   3209c:	add	r1, pc, r1
   320a0:	add	r3, pc, r3
   320a4:	bl	14f3c <__assert_fail@plt>
   320a8:	andeq	r9, r1, r2, lsl #25
   320ac:	andeq	r9, r1, r2, asr r4
   320b0:	andeq	r9, r1, r2, lsr #27

000320b4 <flatcc_builder_create_vector@@Base>:
   320b4:	push	{r4, r5, r6, r7, fp, lr}
   320b8:	add	fp, sp, #16
   320bc:	sub	sp, sp, #80	; 0x50
   320c0:	mov	r7, r0
   320c4:	ldr	r0, [fp, #12]
   320c8:	cmp	r2, r0
   320cc:	bhi	321cc <flatcc_builder_create_vector@@Base+0x118>
   320d0:	ldr	r0, [fp, #8]
   320d4:	mov	r4, r2
   320d8:	ldrh	r2, [r7, #128]	; 0x80
   320dc:	mov	r5, #4
   320e0:	cmp	r0, #4
   320e4:	movls	r0, r5
   320e8:	cmp	r2, r0
   320ec:	sub	r2, fp, #20
   320f0:	strhcc	r0, [r7, #128]	; 0x80
   320f4:	str	r4, [fp, #-20]	; 0xffffffec
   320f8:	sub	r0, r0, #1
   320fc:	ldr	ip, [r7, #136]	; 0x88
   32100:	str	r2, [sp, #12]
   32104:	mov	r2, #1
   32108:	str	r5, [sp, #4]
   3210c:	str	r5, [sp, #16]
   32110:	str	r2, [sp, #8]
   32114:	mls	r6, r3, r4, ip
   32118:	mul	r3, r3, r4
   3211c:	and	r0, r6, r0
   32120:	cmp	r3, #0
   32124:	beq	32140 <flatcc_builder_create_vector@@Base+0x8c>
   32128:	mov	r2, #2
   3212c:	add	r5, r3, #4
   32130:	str	r1, [sp, #20]
   32134:	str	r3, [sp, #24]
   32138:	str	r2, [sp, #8]
   3213c:	str	r5, [sp, #4]
   32140:	cmp	r0, #0
   32144:	beq	32170 <flatcc_builder_create_vector@@Base+0xbc>
   32148:	add	r5, r5, r0
   3214c:	add	r1, sp, #4
   32150:	str	r5, [sp, #4]
   32154:	add	r1, r1, r2, lsl #3
   32158:	add	r2, r2, #1
   3215c:	ldr	r3, [pc, #168]	; 3220c <flatcc_builder_create_vector@@Base+0x158>
   32160:	ldr	r3, [pc, r3]
   32164:	str	r3, [r1, #8]
   32168:	str	r0, [r1, #12]
   3216c:	str	r2, [sp, #8]
   32170:	cmp	r5, #0
   32174:	ble	321ec <flatcc_builder_create_vector@@Base+0x138>
   32178:	ldr	r0, [r7, #36]	; 0x24
   3217c:	ldr	r6, [r7, #44]	; 0x2c
   32180:	add	r1, sp, #4
   32184:	sub	r4, ip, r5
   32188:	str	r5, [sp]
   3218c:	add	r1, r1, #8
   32190:	mov	r3, r4
   32194:	blx	r6
   32198:	cmp	r0, #0
   3219c:	streq	r4, [r7, #136]	; 0x88
   321a0:	moveq	r0, r4
   321a4:	subeq	sp, fp, #16
   321a8:	popeq	{r4, r5, r6, r7, fp, pc}
   321ac:	ldr	r0, [pc, #116]	; 32228 <flatcc_builder_create_vector@@Base+0x174>
   321b0:	ldr	r1, [pc, #116]	; 3222c <flatcc_builder_create_vector@@Base+0x178>
   321b4:	ldr	r3, [pc, #116]	; 32230 <flatcc_builder_create_vector@@Base+0x17c>
   321b8:	movw	r2, #651	; 0x28b
   321bc:	add	r0, pc, r0
   321c0:	add	r1, pc, r1
   321c4:	add	r3, pc, r3
   321c8:	bl	14f3c <__assert_fail@plt>
   321cc:	ldr	r0, [pc, #60]	; 32210 <flatcc_builder_create_vector@@Base+0x15c>
   321d0:	ldr	r1, [pc, #60]	; 32214 <flatcc_builder_create_vector@@Base+0x160>
   321d4:	ldr	r3, [pc, #60]	; 32218 <flatcc_builder_create_vector@@Base+0x164>
   321d8:	movw	r2, #1365	; 0x555
   321dc:	add	r0, pc, r0
   321e0:	add	r1, pc, r1
   321e4:	add	r3, pc, r3
   321e8:	bl	14f3c <__assert_fail@plt>
   321ec:	ldr	r0, [pc, #40]	; 3221c <flatcc_builder_create_vector@@Base+0x168>
   321f0:	ldr	r1, [pc, #40]	; 32220 <flatcc_builder_create_vector@@Base+0x16c>
   321f4:	ldr	r3, [pc, #40]	; 32224 <flatcc_builder_create_vector@@Base+0x170>
   321f8:	movw	r2, #647	; 0x287
   321fc:	add	r0, pc, r0
   32200:	add	r1, pc, r1
   32204:	add	r3, pc, r3
   32208:	bl	14f3c <__assert_fail@plt>
   3220c:	andeq	ip, r2, r4, lsl #30
   32210:	andeq	r9, r1, r8, lsr #25
   32214:	andeq	r9, r1, lr, lsl #6
   32218:			; <UNDEFINED> instruction: 0x00019cb3
   3221c:	andeq	sl, r1, pc, lsr #9
   32220:	andeq	r9, r1, lr, ror #5
   32224:	andeq	sl, r1, r6, ror #6
   32228:	andeq	sl, r1, pc, ror #9
   3222c:	andeq	r9, r1, lr, lsr #6
   32230:	andeq	sl, r1, r6, lsr #7

00032234 <flatcc_builder_end_vector@@Base>:
   32234:	push	{r4, r5, fp, lr}
   32238:	add	fp, sp, #8
   3223c:	sub	sp, sp, #8
   32240:	mov	r4, r0
   32244:	ldr	r0, [r0, #32]
   32248:	ldrh	r1, [r0, #14]
   3224c:	cmp	r1, #4
   32250:	bne	32304 <flatcc_builder_end_vector@@Base+0xd0>
   32254:	ldr	r3, [r0, #16]
   32258:	ldr	r2, [r0, #20]
   3225c:	ldr	r0, [r0, #24]
   32260:	ldr	r1, [r4, #16]
   32264:	ldrh	r5, [r4, #130]	; 0x82
   32268:	str	r0, [sp, #4]
   3226c:	mov	r0, r4
   32270:	str	r5, [sp]
   32274:	bl	320b4 <flatcc_builder_create_vector@@Base>
   32278:	mov	r5, r0
   3227c:	cmp	r0, #0
   32280:	beq	322f8 <flatcc_builder_end_vector@@Base+0xc4>
   32284:	ldr	r0, [r4, #16]
   32288:	ldr	r2, [r4, #20]
   3228c:	mov	r1, #0
   32290:	bl	14ee8 <memset@plt>
   32294:	ldr	r0, [r4, #32]
   32298:	ldr	r1, [r4, #60]	; 0x3c
   3229c:	ldr	ip, [r4, #64]	; 0x40
   322a0:	ldr	r3, [r0, #8]
   322a4:	str	r3, [r4, #20]
   322a8:	ldr	r3, [r0]
   322ac:	str	r3, [r4, #28]
   322b0:	add	r1, r1, r3
   322b4:	ldr	r2, [r0, #4]
   322b8:	str	r1, [r4, #16]
   322bc:	sub	r1, ip, r3
   322c0:	cmp	r1, r2
   322c4:	movhi	r1, r2
   322c8:	str	r1, [r4, #24]
   322cc:	ldrh	r1, [r4, #130]	; 0x82
   322d0:	ldrh	r2, [r4, #128]	; 0x80
   322d4:	cmp	r2, r1
   322d8:	strhcc	r1, [r4, #128]	; 0x80
   322dc:	ldrh	r1, [r0, #12]
   322e0:	sub	r0, r0, #36	; 0x24
   322e4:	str	r0, [r4, #32]
   322e8:	strh	r1, [r4, #130]	; 0x82
   322ec:	ldr	r0, [r4, #156]	; 0x9c
   322f0:	sub	r0, r0, #1
   322f4:	str	r0, [r4, #156]	; 0x9c
   322f8:	mov	r0, r5
   322fc:	sub	sp, fp, #8
   32300:	pop	{r4, r5, fp, pc}
   32304:	ldr	r0, [pc, #24]	; 32324 <flatcc_builder_end_vector@@Base+0xf0>
   32308:	ldr	r1, [pc, #24]	; 32328 <flatcc_builder_end_vector@@Base+0xf4>
   3230c:	ldr	r3, [pc, #24]	; 3232c <flatcc_builder_end_vector@@Base+0xf8>
   32310:	movw	r2, #1400	; 0x578
   32314:	add	r0, pc, r0
   32318:	add	r1, pc, r1
   3231c:	add	r3, pc, r3
   32320:	bl	14f3c <__assert_fail@plt>
   32324:	andeq	r9, r1, r4, lsl r5
   32328:	ldrdeq	r9, [r1], -r6
   3232c:	strdeq	r9, [r1], -r1

00032330 <flatcc_builder_vector_count@@Base>:
   32330:	ldr	r0, [r0, #32]
   32334:	ldr	r0, [r0, #20]
   32338:	bx	lr

0003233c <flatcc_builder_vector_edit@@Base>:
   3233c:	ldr	r0, [r0, #16]
   32340:	bx	lr

00032344 <flatcc_builder_create_offset_vector_direct@@Base>:
   32344:	mov	r3, #0
   32348:	b	3234c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3234c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32350:	add	fp, sp, #24
   32354:	sub	sp, sp, #80	; 0x50
   32358:	mov	r6, #0
   3235c:	cmn	r2, #-1073741823	; 0xc0000001
   32360:	bhi	3249c <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   32364:	mov	r8, r0
   32368:	ldrh	r0, [r0, #128]	; 0x80
   3236c:	sub	r7, fp, #28
   32370:	mov	r5, #4
   32374:	mov	r4, #1
   32378:	cmp	r0, #3
   3237c:	movls	r0, #4
   32380:	strhls	r0, [r8, #128]	; 0x80
   32384:	str	r2, [fp, #-28]	; 0xffffffe4
   32388:	ldr	ip, [r8, #136]	; 0x88
   3238c:	str	r7, [sp, #12]
   32390:	mov	r7, #0
   32394:	str	r5, [sp, #4]
   32398:	str	r5, [sp, #16]
   3239c:	str	r4, [sp, #8]
   323a0:	cmp	r7, r2, lsl #2
   323a4:	and	r6, ip, #3
   323a8:	beq	323c8 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   323ac:	lsl	r7, r2, #2
   323b0:	mov	r4, #2
   323b4:	str	r1, [sp, #20]
   323b8:	add	r5, r7, #4
   323bc:	str	r7, [sp, #24]
   323c0:	str	r4, [sp, #8]
   323c4:	str	r5, [sp, #4]
   323c8:	cmp	r6, #0
   323cc:	beq	323f8 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   323d0:	add	r5, r5, r6
   323d4:	add	r7, sp, #4
   323d8:	str	r5, [sp, #4]
   323dc:	add	r7, r7, r4, lsl #3
   323e0:	add	r4, r4, #1
   323e4:	ldr	r0, [pc, #348]	; 32548 <flatcc_builder_create_offset_vector_direct@@Base+0x204>
   323e8:	ldr	r0, [pc, r0]
   323ec:	str	r0, [r7, #8]
   323f0:	str	r6, [r7, #12]
   323f4:	str	r4, [sp, #8]
   323f8:	cmp	r2, #0
   323fc:	beq	32464 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   32400:	mvn	r0, #3
   32404:	mov	r6, #0
   32408:	sub	r0, r0, ip
   3240c:	add	r0, r0, r5
   32410:	ldr	r7, [r1, r6, lsl #2]
   32414:	cmp	r7, #0
   32418:	beq	3243c <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   3241c:	add	r7, r0, r7
   32420:	cmp	r3, #0
   32424:	str	r7, [r1, r6, lsl #2]
   32428:	beq	32450 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   3242c:	ldrb	r7, [r3, r6]
   32430:	cmp	r7, #0
   32434:	bne	32450 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   32438:	b	324a8 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   3243c:	cmp	r3, #0
   32440:	beq	324e8 <flatcc_builder_create_offset_vector_direct@@Base+0x1a4>
   32444:	ldrb	r7, [r3, r6]
   32448:	cmp	r7, #0
   3244c:	bne	324c8 <flatcc_builder_create_offset_vector_direct@@Base+0x184>
   32450:	add	r6, r6, #1
   32454:	sub	r0, r0, #4
   32458:	cmp	r6, r2
   3245c:	bcc	32410 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   32460:	ldr	ip, [r8, #136]	; 0x88
   32464:	cmp	r5, #0
   32468:	ble	32508 <flatcc_builder_create_offset_vector_direct@@Base+0x1c4>
   3246c:	ldr	r0, [r8, #36]	; 0x24
   32470:	ldr	r7, [r8, #44]	; 0x2c
   32474:	add	r1, sp, #4
   32478:	sub	r6, ip, r5
   3247c:	mov	r2, r4
   32480:	str	r5, [sp]
   32484:	add	r1, r1, #8
   32488:	mov	r3, r6
   3248c:	blx	r7
   32490:	cmp	r0, #0
   32494:	bne	32528 <flatcc_builder_create_offset_vector_direct@@Base+0x1e4>
   32498:	str	r6, [r8, #136]	; 0x88
   3249c:	mov	r0, r6
   324a0:	sub	sp, fp, #24
   324a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   324a8:	ldr	r0, [pc, #156]	; 3254c <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   324ac:	ldr	r1, [pc, #156]	; 32550 <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   324b0:	ldr	r3, [pc, #156]	; 32554 <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   324b4:	movw	r2, #1457	; 0x5b1
   324b8:	add	r0, pc, r0
   324bc:	add	r1, pc, r1
   324c0:	add	r3, pc, r3
   324c4:	bl	14f3c <__assert_fail@plt>
   324c8:	ldr	r0, [pc, #136]	; 32558 <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   324cc:	ldr	r1, [pc, #136]	; 3255c <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   324d0:	ldr	r3, [pc, #136]	; 32560 <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   324d4:	movw	r2, #1461	; 0x5b5
   324d8:	add	r0, pc, r0
   324dc:	add	r1, pc, r1
   324e0:	add	r3, pc, r3
   324e4:	bl	14f3c <__assert_fail@plt>
   324e8:	ldr	r0, [pc, #116]	; 32564 <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   324ec:	ldr	r1, [pc, #116]	; 32568 <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   324f0:	ldr	r3, [pc, #116]	; 3256c <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   324f4:	movw	r2, #1463	; 0x5b7
   324f8:	add	r0, pc, r0
   324fc:	add	r1, pc, r1
   32500:	add	r3, pc, r3
   32504:	bl	14f3c <__assert_fail@plt>
   32508:	ldr	r0, [pc, #96]	; 32570 <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   3250c:	ldr	r1, [pc, #96]	; 32574 <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   32510:	ldr	r3, [pc, #96]	; 32578 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   32514:	movw	r2, #647	; 0x287
   32518:	add	r0, pc, r0
   3251c:	add	r1, pc, r1
   32520:	add	r3, pc, r3
   32524:	bl	14f3c <__assert_fail@plt>
   32528:	ldr	r0, [pc, #76]	; 3257c <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   3252c:	ldr	r1, [pc, #76]	; 32580 <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   32530:	ldr	r3, [pc, #76]	; 32584 <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   32534:	movw	r2, #651	; 0x28b
   32538:	add	r0, pc, r0
   3253c:	add	r1, pc, r1
   32540:	add	r3, pc, r3
   32544:	bl	14f3c <__assert_fail@plt>
   32548:	andeq	ip, r2, ip, ror ip
   3254c:	andeq	sl, r1, r7, ror #3
   32550:	andeq	r9, r1, r2, lsr r0
   32554:	andeq	sl, r1, sp, ror #3
   32558:	andeq	sl, r1, r8, asr r2
   3255c:	andeq	r9, r1, r2, lsl r0
   32560:	andeq	sl, r1, sp, asr #3
   32564:			; <UNDEFINED> instruction: 0x0001a1b3
   32568:	strdeq	r8, [r1], -r2
   3256c:	andeq	sl, r1, sp, lsr #3
   32570:	muleq	r1, r3, r1
   32574:	ldrdeq	r8, [r1], -r2
   32578:	andeq	sl, r1, sl, asr #32
   3257c:	andeq	sl, r1, r3, ror r1
   32580:			; <UNDEFINED> instruction: 0x00018fb2
   32584:	andeq	sl, r1, sl, lsr #32

00032588 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   32588:	push	{r4, r5, fp, lr}
   3258c:	add	fp, sp, #8
   32590:	mov	r4, r0
   32594:	ldr	r0, [r0, #32]
   32598:	mov	r3, r1
   3259c:	ldrh	r1, [r0, #14]
   325a0:	cmp	r1, #5
   325a4:	bne	32640 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   325a8:	ldr	r2, [r0, #20]
   325ac:	ldr	r1, [r4, #16]
   325b0:	mov	r0, r4
   325b4:	bl	3234c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   325b8:	mov	r5, r0
   325bc:	cmp	r0, #0
   325c0:	beq	32638 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   325c4:	ldr	r0, [r4, #16]
   325c8:	ldr	r2, [r4, #20]
   325cc:	mov	r1, #0
   325d0:	bl	14ee8 <memset@plt>
   325d4:	ldr	r0, [r4, #32]
   325d8:	ldr	r1, [r4, #60]	; 0x3c
   325dc:	ldr	ip, [r4, #64]	; 0x40
   325e0:	ldr	r3, [r0, #8]
   325e4:	str	r3, [r4, #20]
   325e8:	ldr	r3, [r0]
   325ec:	str	r3, [r4, #28]
   325f0:	add	r1, r1, r3
   325f4:	ldr	r2, [r0, #4]
   325f8:	str	r1, [r4, #16]
   325fc:	sub	r1, ip, r3
   32600:	cmp	r1, r2
   32604:	movhi	r1, r2
   32608:	str	r1, [r4, #24]
   3260c:	ldrh	r1, [r4, #130]	; 0x82
   32610:	ldrh	r2, [r4, #128]	; 0x80
   32614:	cmp	r2, r1
   32618:	strhcc	r1, [r4, #128]	; 0x80
   3261c:	ldrh	r1, [r0, #12]
   32620:	sub	r0, r0, #36	; 0x24
   32624:	str	r0, [r4, #32]
   32628:	strh	r1, [r4, #130]	; 0x82
   3262c:	ldr	r0, [r4, #156]	; 0x9c
   32630:	sub	r0, r0, #1
   32634:	str	r0, [r4, #156]	; 0x9c
   32638:	mov	r0, r5
   3263c:	pop	{r4, r5, fp, pc}
   32640:	ldr	r0, [pc, #24]	; 32660 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   32644:	ldr	r1, [pc, #24]	; 32664 <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   32648:	ldr	r3, [pc, #24]	; 32668 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   3264c:	movw	r2, #1493	; 0x5d5
   32650:	add	r0, pc, r0
   32654:	add	r1, pc, r1
   32658:	add	r3, pc, r3
   3265c:	bl	14f3c <__assert_fail@plt>
   32660:	ldrdeq	r9, [r1], -r1
   32664:	muleq	r1, sl, lr
   32668:	andeq	r9, r1, r2, asr #18

0003266c <flatcc_builder_offset_vector_edit@@Base>:
   3266c:	ldr	r0, [r0, #16]
   32670:	bx	lr

00032674 <flatcc_builder_offset_vector_count@@Base>:
   32674:	ldr	r0, [r0, #32]
   32678:	ldr	r0, [r0, #20]
   3267c:	bx	lr

00032680 <flatcc_builder_table_add_union@@Base>:
   32680:	push	{r4, r5, r6, r7, fp, lr}
   32684:	add	fp, sp, #16
   32688:	mov	r5, r0
   3268c:	ldr	r0, [r0, #32]
   32690:	ldrh	r0, [r0, #14]
   32694:	cmp	r0, #3
   32698:	bne	32720 <flatcc_builder_table_add_union@@Base+0xa0>
   3269c:	mov	r7, r3
   326a0:	mov	r4, r2
   326a4:	mov	r6, r1
   326a8:	cmp	r3, #0
   326ac:	beq	326bc <flatcc_builder_table_add_union@@Base+0x3c>
   326b0:	uxtb	r0, r4
   326b4:	cmp	r0, #0
   326b8:	beq	32740 <flatcc_builder_table_add_union@@Base+0xc0>
   326bc:	cmp	r7, #0
   326c0:	beq	326dc <flatcc_builder_table_add_union@@Base+0x5c>
   326c4:	mov	r0, r5
   326c8:	mov	r1, r6
   326cc:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   326d0:	cmp	r0, #0
   326d4:	beq	32760 <flatcc_builder_table_add_union@@Base+0xe0>
   326d8:	str	r7, [r0]
   326dc:	sub	r1, r6, #1
   326e0:	mov	r0, r5
   326e4:	mov	r2, #1
   326e8:	mov	r3, #1
   326ec:	bl	32964 <flatcc_builder_table_add@@Base>
   326f0:	cmp	r0, #0
   326f4:	strbne	r4, [r0]
   326f8:	movne	r0, #0
   326fc:	popne	{r4, r5, r6, r7, fp, pc}
   32700:	ldr	r0, [pc, #156]	; 327a4 <flatcc_builder_table_add_union@@Base+0x124>
   32704:	ldr	r1, [pc, #156]	; 327a8 <flatcc_builder_table_add_union@@Base+0x128>
   32708:	ldr	r3, [pc, #156]	; 327ac <flatcc_builder_table_add_union@@Base+0x12c>
   3270c:	movw	r2, #1526	; 0x5f6
   32710:	add	r0, pc, r0
   32714:	add	r1, pc, r1
   32718:	add	r3, pc, r3
   3271c:	bl	14f3c <__assert_fail@plt>
   32720:	ldr	r0, [pc, #88]	; 32780 <flatcc_builder_table_add_union@@Base+0x100>
   32724:	ldr	r1, [pc, #88]	; 32784 <flatcc_builder_table_add_union@@Base+0x104>
   32728:	ldr	r3, [pc, #88]	; 32788 <flatcc_builder_table_add_union@@Base+0x108>
   3272c:	movw	r2, #1518	; 0x5ee
   32730:	add	r0, pc, r0
   32734:	add	r1, pc, r1
   32738:	add	r3, pc, r3
   3273c:	bl	14f3c <__assert_fail@plt>
   32740:	ldr	r0, [pc, #68]	; 3278c <flatcc_builder_table_add_union@@Base+0x10c>
   32744:	ldr	r1, [pc, #68]	; 32790 <flatcc_builder_table_add_union@@Base+0x110>
   32748:	ldr	r3, [pc, #68]	; 32794 <flatcc_builder_table_add_union@@Base+0x114>
   3274c:	movw	r2, #1519	; 0x5ef
   32750:	add	r0, pc, r0
   32754:	add	r1, pc, r1
   32758:	add	r3, pc, r3
   3275c:	bl	14f3c <__assert_fail@plt>
   32760:	ldr	r0, [pc, #48]	; 32798 <flatcc_builder_table_add_union@@Base+0x118>
   32764:	ldr	r1, [pc, #48]	; 3279c <flatcc_builder_table_add_union@@Base+0x11c>
   32768:	ldr	r3, [pc, #48]	; 327a0 <flatcc_builder_table_add_union@@Base+0x120>
   3276c:	movw	r2, #1522	; 0x5f2
   32770:	add	r0, pc, r0
   32774:	add	r1, pc, r1
   32778:	add	r3, pc, r3
   3277c:	bl	14f3c <__assert_fail@plt>
   32780:	andeq	r9, r1, sl, ror #11
   32784:			; <UNDEFINED> instruction: 0x00018dba
   32788:	ldrdeq	r9, [r1], -r4
   3278c:	andeq	r9, r1, r4, lsl r9
   32790:	muleq	r1, sl, sp
   32794:			; <UNDEFINED> instruction: 0x000198b4
   32798:	andeq	r9, r1, r6, lsl r9
   3279c:	andeq	r8, r1, sl, ror sp
   327a0:	muleq	r1, r4, r8
   327a4:	andeq	r9, r1, r0, lsl #19
   327a8:	ldrdeq	r8, [r1], -sl
   327ac:	strdeq	r9, [r1], -r4

000327b0 <flatcc_builder_table_add_offset@@Base>:
   327b0:	push	{r4, r5, r6, r7, fp, lr}
   327b4:	add	fp, sp, #16
   327b8:	sub	sp, sp, #8
   327bc:	mov	r4, r0
   327c0:	ldr	r0, [r0, #32]
   327c4:	ldrh	r0, [r0, #14]
   327c8:	cmp	r0, #3
   327cc:	bne	328e0 <flatcc_builder_table_add_offset@@Base+0x130>
   327d0:	movw	r0, #32765	; 0x7ffd
   327d4:	mov	r5, r1
   327d8:	cmp	r1, r0
   327dc:	bcs	32900 <flatcc_builder_table_add_offset@@Base+0x150>
   327e0:	ldr	r0, [r4, #4]
   327e4:	add	r1, r0, r5, lsl #1
   327e8:	ldrh	r1, [r1]
   327ec:	cmp	r1, #0
   327f0:	bne	32920 <flatcc_builder_table_add_offset@@Base+0x170>
   327f4:	ldr	r2, [r4, #20]
   327f8:	ldr	r1, [r4, #12]
   327fc:	ldr	r3, [r4, #24]
   32800:	add	r2, r2, #3
   32804:	eor	r1, r1, r5
   32808:	bic	r6, r2, #3
   3280c:	movw	r2, #31153	; 0x79b1
   32810:	movt	r2, #40503	; 0x9e37
   32814:	add	r7, r6, #4
   32818:	mul	r1, r1, r2
   3281c:	cmp	r7, r3
   32820:	str	r7, [r4, #20]
   32824:	eor	r1, r1, #4
   32828:	mul	r1, r1, r2
   3282c:	str	r1, [r4, #12]
   32830:	bls	328a4 <flatcc_builder_table_add_offset@@Base+0xf4>
   32834:	ldr	r1, [r4, #28]
   32838:	ldr	r0, [r4, #40]	; 0x28
   3283c:	ldr	ip, [r4, #48]	; 0x30
   32840:	mov	r2, #1
   32844:	mov	r3, #1
   32848:	str	r2, [sp]
   3284c:	add	r2, r1, r7
   32850:	add	r1, r4, #60	; 0x3c
   32854:	blx	ip
   32858:	mov	r1, r0
   3285c:	mov	r0, #0
   32860:	cmp	r1, #0
   32864:	beq	32870 <flatcc_builder_table_add_offset@@Base+0xc0>
   32868:	sub	sp, fp, #16
   3286c:	pop	{r4, r5, r6, r7, fp, pc}
   32870:	ldr	r0, [r4, #28]
   32874:	ldr	r2, [r4, #60]	; 0x3c
   32878:	ldr	r3, [r4, #64]	; 0x40
   3287c:	ldr	r1, [r4, #32]
   32880:	add	r2, r2, r0
   32884:	sub	r0, r3, r0
   32888:	str	r2, [r4, #16]
   3288c:	movw	r2, #65532	; 0xfffc
   32890:	cmp	r0, r2
   32894:	movcs	r0, r2
   32898:	str	r0, [r4, #24]
   3289c:	str	r2, [r1, #4]
   328a0:	ldr	r0, [r4, #4]
   328a4:	uxth	r1, r5
   328a8:	add	r0, r0, r1, lsl #1
   328ac:	strh	r7, [r0]
   328b0:	ldrh	r0, [r4, #8]
   328b4:	cmp	r0, r1
   328b8:	addls	r0, r5, #1
   328bc:	strhls	r0, [r4, #8]
   328c0:	ldr	r0, [r4]
   328c4:	add	r1, r0, #2
   328c8:	str	r1, [r4]
   328cc:	strh	r6, [r0]
   328d0:	ldr	r0, [r4, #16]
   328d4:	add	r0, r0, r6
   328d8:	sub	sp, fp, #16
   328dc:	pop	{r4, r5, r6, r7, fp, pc}
   328e0:	ldr	r0, [pc, #88]	; 32940 <flatcc_builder_table_add_offset@@Base+0x190>
   328e4:	ldr	r1, [pc, #88]	; 32944 <flatcc_builder_table_add_offset@@Base+0x194>
   328e8:	ldr	r3, [pc, #88]	; 32948 <flatcc_builder_table_add_offset@@Base+0x198>
   328ec:	movw	r2, #1811	; 0x713
   328f0:	add	r0, pc, r0
   328f4:	add	r1, pc, r1
   328f8:	add	r3, pc, r3
   328fc:	bl	14f3c <__assert_fail@plt>
   32900:	ldr	r0, [pc, #68]	; 3294c <flatcc_builder_table_add_offset@@Base+0x19c>
   32904:	ldr	r1, [pc, #68]	; 32950 <flatcc_builder_table_add_offset@@Base+0x1a0>
   32908:	ldr	r3, [pc, #68]	; 32954 <flatcc_builder_table_add_offset@@Base+0x1a4>
   3290c:	movw	r2, #1812	; 0x714
   32910:	add	r0, pc, r0
   32914:	add	r1, pc, r1
   32918:	add	r3, pc, r3
   3291c:	bl	14f3c <__assert_fail@plt>
   32920:	ldr	r0, [pc, #48]	; 32958 <flatcc_builder_table_add_offset@@Base+0x1a8>
   32924:	ldr	r1, [pc, #48]	; 3295c <flatcc_builder_table_add_offset@@Base+0x1ac>
   32928:	ldr	r3, [pc, #48]	; 32960 <flatcc_builder_table_add_offset@@Base+0x1b0>
   3292c:	movw	r2, #1819	; 0x71b
   32930:	add	r0, pc, r0
   32934:	add	r1, pc, r1
   32938:	add	r3, pc, r3
   3293c:	bl	14f3c <__assert_fail@plt>
   32940:	andeq	r9, r1, sl, lsr #8
   32944:	strdeq	r8, [r1], -sl
   32948:	andeq	r9, r1, r6, lsl fp
   3294c:	andeq	r9, r1, lr, ror sl
   32950:	ldrdeq	r8, [r1], -sl
   32954:	strdeq	r9, [r1], -r6
   32958:	andeq	r9, r1, fp, ror sp
   3295c:			; <UNDEFINED> instruction: 0x00018bba
   32960:	ldrdeq	r9, [r1], -r6

00032964 <flatcc_builder_table_add@@Base>:
   32964:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32968:	add	fp, sp, #24
   3296c:	sub	sp, sp, #8
   32970:	mov	r4, r0
   32974:	ldr	r0, [r0, #32]
   32978:	ldrh	r0, [r0, #14]
   3297c:	cmp	r0, #3
   32980:	bne	32aa0 <flatcc_builder_table_add@@Base+0x13c>
   32984:	movw	r0, #32765	; 0x7ffd
   32988:	mov	r8, r1
   3298c:	cmp	r1, r0
   32990:	bcs	32ac0 <flatcc_builder_table_add@@Base+0x15c>
   32994:	ldrh	r0, [r4, #130]	; 0x82
   32998:	cmp	r0, r3
   3299c:	strhcc	r3, [r4, #130]	; 0x82
   329a0:	ldr	r0, [r4, #4]
   329a4:	add	r1, r0, r8, lsl #1
   329a8:	ldrh	r1, [r1]
   329ac:	cmp	r1, #0
   329b0:	bne	32ae0 <flatcc_builder_table_add@@Base+0x17c>
   329b4:	ldr	r1, [r4, #12]
   329b8:	movw	r7, #31153	; 0x79b1
   329bc:	ldr	r6, [r4, #20]
   329c0:	ldr	r5, [r4, #24]
   329c4:	movt	r7, #40503	; 0x9e37
   329c8:	eor	r1, r1, r8
   329cc:	mul	r1, r1, r7
   329d0:	eor	r1, r1, r2
   329d4:	mul	r1, r1, r7
   329d8:	str	r1, [r4, #12]
   329dc:	add	r1, r3, r6
   329e0:	rsb	r3, r3, #0
   329e4:	sub	r1, r1, #1
   329e8:	and	r6, r1, r3
   329ec:	add	r1, r6, r2
   329f0:	cmp	r1, r5
   329f4:	str	r1, [r4, #20]
   329f8:	bcc	32a70 <flatcc_builder_table_add@@Base+0x10c>
   329fc:	ldr	r2, [r4, #28]
   32a00:	ldr	r0, [r4, #40]	; 0x28
   32a04:	ldr	r7, [r4, #48]	; 0x30
   32a08:	mov	r3, #1
   32a0c:	str	r3, [sp]
   32a10:	mov	r3, #1
   32a14:	add	r1, r1, r2
   32a18:	add	r2, r1, #1
   32a1c:	add	r1, r4, #60	; 0x3c
   32a20:	blx	r7
   32a24:	mov	r1, r0
   32a28:	mov	r0, #0
   32a2c:	cmp	r1, #0
   32a30:	beq	32a3c <flatcc_builder_table_add@@Base+0xd8>
   32a34:	sub	sp, fp, #24
   32a38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32a3c:	ldr	r0, [r4, #28]
   32a40:	ldr	r2, [r4, #60]	; 0x3c
   32a44:	ldr	r3, [r4, #64]	; 0x40
   32a48:	ldr	r1, [r4, #32]
   32a4c:	add	r2, r2, r0
   32a50:	sub	r0, r3, r0
   32a54:	str	r2, [r4, #16]
   32a58:	movw	r2, #65532	; 0xfffc
   32a5c:	cmp	r0, r2
   32a60:	movcs	r0, r2
   32a64:	str	r0, [r4, #24]
   32a68:	str	r2, [r1, #4]
   32a6c:	ldr	r0, [r4, #4]
   32a70:	uxth	r1, r8
   32a74:	add	r2, r6, #4
   32a78:	add	r0, r0, r1, lsl #1
   32a7c:	strh	r2, [r0]
   32a80:	ldrh	r0, [r4, #8]
   32a84:	cmp	r0, r1
   32a88:	addls	r0, r8, #1
   32a8c:	strhls	r0, [r4, #8]
   32a90:	ldr	r0, [r4, #16]
   32a94:	add	r0, r0, r6
   32a98:	sub	sp, fp, #24
   32a9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32aa0:	ldr	r0, [pc, #88]	; 32b00 <flatcc_builder_table_add@@Base+0x19c>
   32aa4:	ldr	r1, [pc, #88]	; 32b04 <flatcc_builder_table_add@@Base+0x1a0>
   32aa8:	ldr	r3, [pc, #88]	; 32b08 <flatcc_builder_table_add@@Base+0x1a4>
   32aac:	movw	r2, #1773	; 0x6ed
   32ab0:	add	r0, pc, r0
   32ab4:	add	r1, pc, r1
   32ab8:	add	r3, pc, r3
   32abc:	bl	14f3c <__assert_fail@plt>
   32ac0:	ldr	r0, [pc, #68]	; 32b0c <flatcc_builder_table_add@@Base+0x1a8>
   32ac4:	ldr	r1, [pc, #68]	; 32b10 <flatcc_builder_table_add@@Base+0x1ac>
   32ac8:	ldr	r3, [pc, #68]	; 32b14 <flatcc_builder_table_add@@Base+0x1b0>
   32acc:	movw	r2, #1774	; 0x6ee
   32ad0:	add	r0, pc, r0
   32ad4:	add	r1, pc, r1
   32ad8:	add	r3, pc, r3
   32adc:	bl	14f3c <__assert_fail@plt>
   32ae0:	ldr	r0, [pc, #48]	; 32b18 <flatcc_builder_table_add@@Base+0x1b4>
   32ae4:	ldr	r1, [pc, #48]	; 32b1c <flatcc_builder_table_add@@Base+0x1b8>
   32ae8:	ldr	r3, [pc, #48]	; 32b20 <flatcc_builder_table_add@@Base+0x1bc>
   32aec:	movw	r2, #1784	; 0x6f8
   32af0:	add	r0, pc, r0
   32af4:	add	r1, pc, r1
   32af8:	add	r3, pc, r3
   32afc:	bl	14f3c <__assert_fail@plt>
   32b00:	andeq	r9, r1, sl, ror #4
   32b04:	andeq	r8, r1, sl, lsr sl
   32b08:	andeq	r9, r1, ip, lsl #17
   32b0c:			; <UNDEFINED> instruction: 0x000198be
   32b10:	andeq	r8, r1, sl, lsl sl
   32b14:	andeq	r9, r1, ip, ror #16
   32b18:			; <UNDEFINED> instruction: 0x00019bbb
   32b1c:	strdeq	r8, [r1], -sl
   32b20:	andeq	r9, r1, ip, asr #16

00032b24 <flatcc_builder_table_add_union_vector@@Base>:
   32b24:	push	{r4, r5, r6, r7, fp, lr}
   32b28:	add	fp, sp, #16
   32b2c:	mov	r6, r0
   32b30:	ldr	r0, [r0, #32]
   32b34:	ldrh	r0, [r0, #14]
   32b38:	cmp	r0, #3
   32b3c:	bne	32ba4 <flatcc_builder_table_add_union_vector@@Base+0x80>
   32b40:	clz	r0, r3
   32b44:	mov	r5, r1
   32b48:	clz	r1, r2
   32b4c:	mov	r4, r3
   32b50:	mov	r7, r2
   32b54:	lsr	r0, r0, #5
   32b58:	lsr	r1, r1, #5
   32b5c:	cmp	r1, r0
   32b60:	bne	32bc4 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   32b64:	cmp	r7, #0
   32b68:	beq	32b9c <flatcc_builder_table_add_union_vector@@Base+0x78>
   32b6c:	sub	r1, r5, #1
   32b70:	mov	r0, r6
   32b74:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   32b78:	cmp	r0, #0
   32b7c:	beq	32be4 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   32b80:	str	r7, [r0]
   32b84:	mov	r0, r6
   32b88:	mov	r1, r5
   32b8c:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   32b90:	cmp	r0, #0
   32b94:	beq	32c04 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   32b98:	str	r4, [r0]
   32b9c:	mov	r0, #0
   32ba0:	pop	{r4, r5, r6, r7, fp, pc}
   32ba4:	ldr	r0, [pc, #120]	; 32c24 <flatcc_builder_table_add_union_vector@@Base+0x100>
   32ba8:	ldr	r1, [pc, #120]	; 32c28 <flatcc_builder_table_add_union_vector@@Base+0x104>
   32bac:	ldr	r3, [pc, #120]	; 32c2c <flatcc_builder_table_add_union_vector@@Base+0x108>
   32bb0:	mov	r2, #1536	; 0x600
   32bb4:	add	r0, pc, r0
   32bb8:	add	r1, pc, r1
   32bbc:	add	r3, pc, r3
   32bc0:	bl	14f3c <__assert_fail@plt>
   32bc4:	ldr	r0, [pc, #100]	; 32c30 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   32bc8:	ldr	r1, [pc, #100]	; 32c34 <flatcc_builder_table_add_union_vector@@Base+0x110>
   32bcc:	ldr	r3, [pc, #100]	; 32c38 <flatcc_builder_table_add_union_vector@@Base+0x114>
   32bd0:	movw	r2, #1537	; 0x601
   32bd4:	add	r0, pc, r0
   32bd8:	add	r1, pc, r1
   32bdc:	add	r3, pc, r3
   32be0:	bl	14f3c <__assert_fail@plt>
   32be4:	ldr	r0, [pc, #80]	; 32c3c <flatcc_builder_table_add_union_vector@@Base+0x118>
   32be8:	ldr	r1, [pc, #80]	; 32c40 <flatcc_builder_table_add_union_vector@@Base+0x11c>
   32bec:	ldr	r3, [pc, #80]	; 32c44 <flatcc_builder_table_add_union_vector@@Base+0x120>
   32bf0:	movw	r2, #1540	; 0x604
   32bf4:	add	r0, pc, r0
   32bf8:	add	r1, pc, r1
   32bfc:	add	r3, pc, r3
   32c00:	bl	14f3c <__assert_fail@plt>
   32c04:	ldr	r0, [pc, #60]	; 32c48 <flatcc_builder_table_add_union_vector@@Base+0x124>
   32c08:	ldr	r1, [pc, #60]	; 32c4c <flatcc_builder_table_add_union_vector@@Base+0x128>
   32c0c:	ldr	r3, [pc, #60]	; 32c50 <flatcc_builder_table_add_union_vector@@Base+0x12c>
   32c10:	movw	r2, #1544	; 0x608
   32c14:	add	r0, pc, r0
   32c18:	add	r1, pc, r1
   32c1c:	add	r3, pc, r3
   32c20:	bl	14f3c <__assert_fail@plt>
   32c24:	andeq	r9, r1, r6, ror #2
   32c28:	andeq	r8, r1, r6, lsr r9
   32c2c:	andeq	r9, r1, r0, ror #9
   32c30:	andeq	r9, r1, fp, lsr #10
   32c34:	andeq	r8, r1, r6, lsl r9
   32c38:	andeq	r9, r1, r0, asr #9
   32c3c:	muleq	r1, r2, r4
   32c40:	strdeq	r8, [r1], -r6
   32c44:	andeq	r9, r1, r0, lsr #9
   32c48:	andeq	r9, r1, r2, ror r4
   32c4c:	ldrdeq	r8, [r1], -r6
   32c50:	andeq	r9, r1, r0, lsl #9

00032c54 <flatcc_builder_create_union_vector@@Base>:
   32c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32c58:	add	fp, sp, #28
   32c5c:	sub	sp, sp, #12
   32c60:	mov	r7, #0
   32c64:	mov	r4, r1
   32c68:	mov	r5, r0
   32c6c:	mov	sl, r3
   32c70:	mov	r9, r2
   32c74:	mov	r6, #4
   32c78:	str	r7, [r0]
   32c7c:	str	r7, [r0, #4]
   32c80:	mov	r0, r1
   32c84:	mov	r1, #4
   32c88:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   32c8c:	cmp	r0, #0
   32c90:	beq	32c9c <flatcc_builder_create_union_vector@@Base+0x48>
   32c94:	sub	sp, fp, #28
   32c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c9c:	ldr	r0, [r4, #32]
   32ca0:	mov	r1, #5
   32ca4:	str	r6, [r0, #16]
   32ca8:	ldr	r0, [r4, #32]
   32cac:	str	r7, [r0, #20]
   32cb0:	ldr	r0, [r4, #32]
   32cb4:	strh	r1, [r0, #14]
   32cb8:	ldr	r1, [r4, #28]
   32cbc:	ldr	r2, [r4, #60]	; 0x3c
   32cc0:	ldr	r3, [r4, #64]	; 0x40
   32cc4:	add	r2, r2, r1
   32cc8:	sub	r1, r3, r1
   32ccc:	str	r2, [r4, #16]
   32cd0:	mvn	r2, #3
   32cd4:	cmn	r1, #4
   32cd8:	movcs	r1, r2
   32cdc:	str	r1, [r4, #24]
   32ce0:	str	r2, [r0, #4]
   32ce4:	ldr	r1, [r0, #20]
   32ce8:	adds	r1, r1, sl
   32cec:	cmpcc	r1, #1073741824	; 0x40000000
   32cf0:	bcc	32d14 <flatcc_builder_create_union_vector@@Base+0xc0>
   32cf4:	ldr	r0, [pc, #556]	; 32f28 <flatcc_builder_create_union_vector@@Base+0x2d4>
   32cf8:	ldr	r1, [pc, #556]	; 32f2c <flatcc_builder_create_union_vector@@Base+0x2d8>
   32cfc:	ldr	r3, [pc, #556]	; 32f30 <flatcc_builder_create_union_vector@@Base+0x2dc>
   32d00:	mov	r2, #892	; 0x37c
   32d04:	add	r0, pc, r0
   32d08:	add	r1, pc, r1
   32d0c:	add	r3, pc, r3
   32d10:	bl	14f3c <__assert_fail@plt>
   32d14:	str	r1, [r0, #20]
   32d18:	ldr	r7, [r4, #20]
   32d1c:	ldr	r0, [r4, #24]
   32d20:	add	r1, r7, sl, lsl #2
   32d24:	cmp	r1, r0
   32d28:	str	r1, [r4, #20]
   32d2c:	bcs	32d40 <flatcc_builder_create_union_vector@@Base+0xec>
   32d30:	ldr	r1, [r4, #16]
   32d34:	adds	r2, r1, r7
   32d38:	bne	32da8 <flatcc_builder_create_union_vector@@Base+0x154>
   32d3c:	b	32c94 <flatcc_builder_create_union_vector@@Base+0x40>
   32d40:	ldr	r2, [r4, #28]
   32d44:	ldr	r0, [r4, #40]	; 0x28
   32d48:	ldr	r6, [r4, #48]	; 0x30
   32d4c:	mov	r3, #1
   32d50:	str	r3, [sp]
   32d54:	mov	r3, #1
   32d58:	add	r1, r1, r2
   32d5c:	add	r2, r1, #1
   32d60:	add	r1, r4, #60	; 0x3c
   32d64:	blx	r6
   32d68:	cmp	r0, #0
   32d6c:	bne	32c94 <flatcc_builder_create_union_vector@@Base+0x40>
   32d70:	ldr	r0, [r4, #28]
   32d74:	ldr	r1, [r4, #60]	; 0x3c
   32d78:	ldr	r3, [r4, #64]	; 0x40
   32d7c:	ldr	r2, [r4, #32]
   32d80:	add	r1, r1, r0
   32d84:	sub	r0, r3, r0
   32d88:	mvn	r3, #3
   32d8c:	cmn	r0, #4
   32d90:	str	r1, [r4, #16]
   32d94:	movcs	r0, r3
   32d98:	str	r0, [r4, #24]
   32d9c:	str	r3, [r2, #4]
   32da0:	adds	r2, r1, r7
   32da4:	beq	32c94 <flatcc_builder_create_union_vector@@Base+0x40>
   32da8:	ldr	r7, [r4, #20]
   32dac:	add	r2, r7, sl
   32db0:	cmp	r2, r0
   32db4:	str	r2, [r4, #20]
   32db8:	bcc	32e1c <flatcc_builder_create_union_vector@@Base+0x1c8>
   32dbc:	ldr	r1, [r4, #28]
   32dc0:	ldr	r0, [r4, #40]	; 0x28
   32dc4:	ldr	r6, [r4, #48]	; 0x30
   32dc8:	mov	r3, #1
   32dcc:	str	r3, [sp]
   32dd0:	mov	r3, #1
   32dd4:	add	r1, r2, r1
   32dd8:	add	r2, r1, #1
   32ddc:	add	r1, r4, #60	; 0x3c
   32de0:	blx	r6
   32de4:	cmp	r0, #0
   32de8:	bne	32c94 <flatcc_builder_create_union_vector@@Base+0x40>
   32dec:	ldr	r0, [r4, #28]
   32df0:	ldr	r1, [r4, #60]	; 0x3c
   32df4:	ldr	r3, [r4, #64]	; 0x40
   32df8:	ldr	r2, [r4, #32]
   32dfc:	add	r1, r1, r0
   32e00:	sub	r0, r3, r0
   32e04:	mvn	r3, #3
   32e08:	cmn	r0, #4
   32e0c:	str	r1, [r4, #16]
   32e10:	movcs	r0, r3
   32e14:	str	r0, [r4, #24]
   32e18:	str	r3, [r2, #4]
   32e1c:	adds	r8, r1, r7
   32e20:	beq	32c94 <flatcc_builder_create_union_vector@@Base+0x40>
   32e24:	cmp	sl, #0
   32e28:	beq	32e58 <flatcc_builder_create_union_vector@@Base+0x204>
   32e2c:	add	r0, r9, #4
   32e30:	mov	r2, sl
   32e34:	mov	r3, r1
   32e38:	mov	r7, r8
   32e3c:	ldrb	r6, [r0, #-4]
   32e40:	subs	r2, r2, #1
   32e44:	strb	r6, [r7], #1
   32e48:	ldr	r6, [r0]
   32e4c:	add	r0, r0, #8
   32e50:	str	r6, [r3], #4
   32e54:	bne	32e3c <flatcc_builder_create_union_vector@@Base+0x1e8>
   32e58:	mov	r0, r4
   32e5c:	mov	r2, sl
   32e60:	mov	r3, r8
   32e64:	bl	3234c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32e68:	mov	r7, r0
   32e6c:	mov	r9, #0
   32e70:	cmp	r0, #0
   32e74:	beq	32ea0 <flatcc_builder_create_union_vector@@Base+0x24c>
   32e78:	mvn	r0, #0
   32e7c:	mov	r1, #1
   32e80:	mov	r2, sl
   32e84:	mov	r3, #1
   32e88:	str	r1, [sp]
   32e8c:	str	r0, [sp, #4]
   32e90:	mov	r0, r4
   32e94:	mov	r1, r8
   32e98:	bl	320b4 <flatcc_builder_create_vector@@Base>
   32e9c:	b	32ea4 <flatcc_builder_create_union_vector@@Base+0x250>
   32ea0:	mov	r0, #0
   32ea4:	orr	r1, r9, r7
   32ea8:	stm	r5, {r0, r1}
   32eac:	mov	r1, #0
   32eb0:	ldr	r0, [r4, #16]
   32eb4:	ldr	r2, [r4, #20]
   32eb8:	bl	14ee8 <memset@plt>
   32ebc:	ldr	r0, [r4, #32]
   32ec0:	ldr	r1, [r4, #60]	; 0x3c
   32ec4:	ldr	r2, [r4, #64]	; 0x40
   32ec8:	ldr	r3, [r0, #8]
   32ecc:	str	r3, [r4, #20]
   32ed0:	ldr	r3, [r0]
   32ed4:	str	r3, [r4, #28]
   32ed8:	add	r1, r1, r3
   32edc:	ldr	r7, [r0, #4]
   32ee0:	str	r1, [r4, #16]
   32ee4:	sub	r1, r2, r3
   32ee8:	cmp	r1, r7
   32eec:	movhi	r1, r7
   32ef0:	str	r1, [r4, #24]
   32ef4:	ldrh	r1, [r4, #130]	; 0x82
   32ef8:	ldrh	r2, [r4, #128]	; 0x80
   32efc:	cmp	r2, r1
   32f00:	strhcc	r1, [r4, #128]	; 0x80
   32f04:	ldrh	r1, [r0, #12]
   32f08:	sub	r0, r0, #36	; 0x24
   32f0c:	str	r0, [r4, #32]
   32f10:	strh	r1, [r4, #130]	; 0x82
   32f14:	ldr	r0, [r4, #156]	; 0x9c
   32f18:	sub	r0, r0, #1
   32f1c:	str	r0, [r4, #156]	; 0x9c
   32f20:	sub	sp, fp, #28
   32f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f28:			; <UNDEFINED> instruction: 0x000198b0
   32f2c:	andeq	r8, r1, r6, ror #15
   32f30:	andeq	r9, r1, r3, asr #17

00032f34 <flatcc_builder_create_union_vector_direct@@Base>:
   32f34:	push	{r4, r5, r6, r7, fp, lr}
   32f38:	add	fp, sp, #16
   32f3c:	sub	sp, sp, #8
   32f40:	ldr	r7, [fp, #8]
   32f44:	mov	r5, r2
   32f48:	mov	r4, r0
   32f4c:	mov	r0, #0
   32f50:	mov	r6, r1
   32f54:	str	r0, [r4]
   32f58:	str	r0, [r4, #4]
   32f5c:	mov	r0, r1
   32f60:	mov	r1, r3
   32f64:	mov	r3, r5
   32f68:	mov	r2, r7
   32f6c:	bl	3234c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32f70:	cmp	r0, #0
   32f74:	str	r0, [r4, #4]
   32f78:	beq	32fa4 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   32f7c:	mvn	r0, #0
   32f80:	mov	r1, #1
   32f84:	mov	r2, r7
   32f88:	mov	r3, #1
   32f8c:	str	r1, [sp]
   32f90:	str	r0, [sp, #4]
   32f94:	mov	r0, r6
   32f98:	mov	r1, r5
   32f9c:	bl	320b4 <flatcc_builder_create_vector@@Base>
   32fa0:	str	r0, [r4]
   32fa4:	sub	sp, fp, #16
   32fa8:	pop	{r4, r5, r6, r7, fp, pc}

00032fac <flatcc_builder_start_union_vector@@Base>:
   32fac:	push	{r4, sl, fp, lr}
   32fb0:	add	fp, sp, #8
   32fb4:	mov	r1, #4
   32fb8:	mov	r4, r0
   32fbc:	bl	2ffa8 <flatcc_builder_start_buffer@@Base+0xc0>
   32fc0:	mov	r1, r0
   32fc4:	mvn	r0, #0
   32fc8:	cmp	r1, #0
   32fcc:	popne	{r4, sl, fp, pc}
   32fd0:	ldr	r0, [r4, #32]
   32fd4:	mov	r1, #8
   32fd8:	mov	r2, #7
   32fdc:	str	r1, [r0, #16]
   32fe0:	mov	r0, #0
   32fe4:	ldr	r1, [r4, #32]
   32fe8:	str	r0, [r1, #20]
   32fec:	ldr	r1, [r4, #32]
   32ff0:	strh	r2, [r1, #14]
   32ff4:	ldr	r2, [r4, #28]
   32ff8:	ldr	r3, [r4, #60]	; 0x3c
   32ffc:	ldr	ip, [r4, #64]	; 0x40
   33000:	add	r3, r3, r2
   33004:	sub	r2, ip, r2
   33008:	str	r3, [r4, #16]
   3300c:	mvn	r3, #3
   33010:	cmn	r2, #4
   33014:	movcs	r2, r3
   33018:	str	r2, [r4, #24]
   3301c:	str	r3, [r1, #4]
   33020:	pop	{r4, sl, fp, pc}

00033024 <flatcc_builder_end_union_vector@@Base>:
   33024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33028:	add	fp, sp, #28
   3302c:	sub	sp, sp, #12
   33030:	mov	sl, r0
   33034:	mov	r0, #0
   33038:	mov	r4, r1
   3303c:	str	r0, [sl]
   33040:	str	r0, [sl, #4]
   33044:	ldr	r0, [r1, #32]
   33048:	ldrh	r1, [r0, #14]
   3304c:	cmp	r1, #7
   33050:	bne	331f4 <flatcc_builder_end_union_vector@@Base+0x1d0>
   33054:	ldr	r6, [r0, #20]
   33058:	ldr	r7, [r4, #20]
   3305c:	ldr	r2, [r4, #24]
   33060:	add	r0, r6, r6, lsl #2
   33064:	add	r1, r7, r0
   33068:	cmp	r1, r2
   3306c:	str	r1, [r4, #20]
   33070:	bcs	33084 <flatcc_builder_end_union_vector@@Base+0x60>
   33074:	ldr	r0, [r4, #16]
   33078:	adds	r1, r0, r7
   3307c:	bne	330ec <flatcc_builder_end_union_vector@@Base+0xc8>
   33080:	b	331ec <flatcc_builder_end_union_vector@@Base+0x1c8>
   33084:	ldr	r2, [r4, #28]
   33088:	ldr	r0, [r4, #40]	; 0x28
   3308c:	ldr	r5, [r4, #48]	; 0x30
   33090:	mov	r3, #1
   33094:	str	r3, [sp]
   33098:	mov	r3, #1
   3309c:	add	r1, r1, r2
   330a0:	add	r2, r1, #1
   330a4:	add	r1, r4, #60	; 0x3c
   330a8:	blx	r5
   330ac:	cmp	r0, #0
   330b0:	bne	331ec <flatcc_builder_end_union_vector@@Base+0x1c8>
   330b4:	ldr	r1, [r4, #28]
   330b8:	ldr	r0, [r4, #60]	; 0x3c
   330bc:	ldr	r3, [r4, #64]	; 0x40
   330c0:	ldr	r2, [r4, #32]
   330c4:	add	r0, r0, r1
   330c8:	sub	r1, r3, r1
   330cc:	mvn	r3, #3
   330d0:	cmn	r1, #4
   330d4:	str	r0, [r4, #16]
   330d8:	movcs	r1, r3
   330dc:	str	r1, [r4, #24]
   330e0:	str	r3, [r2, #4]
   330e4:	adds	r1, r0, r7
   330e8:	beq	331ec <flatcc_builder_end_union_vector@@Base+0x1c8>
   330ec:	add	r8, r1, r6, lsl #2
   330f0:	cmp	r6, #0
   330f4:	beq	33124 <flatcc_builder_end_union_vector@@Base+0x100>
   330f8:	add	r0, r0, #4
   330fc:	mov	r2, r6
   33100:	mov	r3, r1
   33104:	mov	r7, r8
   33108:	ldrb	r5, [r0, #-4]
   3310c:	subs	r2, r2, #1
   33110:	strb	r5, [r7], #1
   33114:	ldr	r5, [r0]
   33118:	add	r0, r0, #8
   3311c:	str	r5, [r3], #4
   33120:	bne	33108 <flatcc_builder_end_union_vector@@Base+0xe4>
   33124:	mov	r0, r4
   33128:	mov	r2, r6
   3312c:	mov	r3, r8
   33130:	bl	3234c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33134:	mov	r7, r0
   33138:	mov	r9, #0
   3313c:	cmp	r0, #0
   33140:	beq	3316c <flatcc_builder_end_union_vector@@Base+0x148>
   33144:	mvn	r0, #0
   33148:	mov	r1, #1
   3314c:	mov	r2, r6
   33150:	mov	r3, #1
   33154:	str	r1, [sp]
   33158:	str	r0, [sp, #4]
   3315c:	mov	r0, r4
   33160:	mov	r1, r8
   33164:	bl	320b4 <flatcc_builder_create_vector@@Base>
   33168:	b	33170 <flatcc_builder_end_union_vector@@Base+0x14c>
   3316c:	mov	r0, #0
   33170:	orr	r1, r9, r7
   33174:	stm	sl, {r0, r1}
   33178:	mov	r1, #0
   3317c:	ldr	r0, [r4, #16]
   33180:	ldr	r2, [r4, #20]
   33184:	bl	14ee8 <memset@plt>
   33188:	ldr	r0, [r4, #32]
   3318c:	ldr	r1, [r4, #60]	; 0x3c
   33190:	ldr	r2, [r4, #64]	; 0x40
   33194:	ldr	r3, [r0, #8]
   33198:	str	r3, [r4, #20]
   3319c:	ldr	r3, [r0]
   331a0:	str	r3, [r4, #28]
   331a4:	add	r1, r1, r3
   331a8:	ldr	r7, [r0, #4]
   331ac:	str	r1, [r4, #16]
   331b0:	sub	r1, r2, r3
   331b4:	cmp	r1, r7
   331b8:	movhi	r1, r7
   331bc:	str	r1, [r4, #24]
   331c0:	ldrh	r1, [r4, #130]	; 0x82
   331c4:	ldrh	r2, [r4, #128]	; 0x80
   331c8:	cmp	r2, r1
   331cc:	strhcc	r1, [r4, #128]	; 0x80
   331d0:	ldrh	r1, [r0, #12]
   331d4:	sub	r0, r0, #36	; 0x24
   331d8:	str	r0, [r4, #32]
   331dc:	strh	r1, [r4, #130]	; 0x82
   331e0:	ldr	r0, [r4, #156]	; 0x9c
   331e4:	sub	r0, r0, #1
   331e8:	str	r0, [r4, #156]	; 0x9c
   331ec:	sub	sp, fp, #28
   331f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   331f4:	ldr	r0, [pc, #24]	; 33214 <flatcc_builder_end_union_vector@@Base+0x1f0>
   331f8:	ldr	r1, [pc, #24]	; 33218 <flatcc_builder_end_union_vector@@Base+0x1f4>
   331fc:	ldr	r3, [pc, #24]	; 3321c <flatcc_builder_end_union_vector@@Base+0x1f8>
   33200:	movw	r2, #1617	; 0x651
   33204:	add	r0, pc, r0
   33208:	add	r1, pc, r1
   3320c:	add	r3, pc, r3
   33210:	bl	14f3c <__assert_fail@plt>
   33214:	andeq	r8, r1, r3, lsr #30
   33218:	andeq	r8, r1, r6, ror #5
   3321c:	andeq	r8, r1, sp, asr #30

00033220 <flatcc_builder_union_vector_count@@Base>:
   33220:	ldr	r0, [r0, #32]
   33224:	ldr	r0, [r0, #20]
   33228:	bx	lr

0003322c <flatcc_builder_union_vector_edit@@Base>:
   3322c:	ldr	r0, [r0, #16]
   33230:	bx	lr

00033234 <flatcc_builder_extend_union_vector@@Base>:
   33234:	push	{r4, r5, fp, lr}
   33238:	add	fp, sp, #8
   3323c:	sub	sp, sp, #8
   33240:	mov	r4, r0
   33244:	ldr	r0, [r0, #32]
   33248:	ldr	r2, [r0, #20]
   3324c:	adds	r2, r2, r1
   33250:	cmpcc	r2, #536870912	; 0x20000000
   33254:	bcc	33278 <flatcc_builder_extend_union_vector@@Base+0x44>
   33258:	ldr	r0, [pc, #184]	; 33318 <flatcc_builder_extend_union_vector@@Base+0xe4>
   3325c:	ldr	r1, [pc, #184]	; 3331c <flatcc_builder_extend_union_vector@@Base+0xe8>
   33260:	ldr	r3, [pc, #184]	; 33320 <flatcc_builder_extend_union_vector@@Base+0xec>
   33264:	mov	r2, #892	; 0x37c
   33268:	add	r0, pc, r0
   3326c:	add	r1, pc, r1
   33270:	add	r3, pc, r3
   33274:	bl	14f3c <__assert_fail@plt>
   33278:	str	r2, [r0, #20]
   3327c:	ldr	r5, [r4, #20]
   33280:	ldr	r0, [r4, #24]
   33284:	add	r1, r5, r1, lsl #3
   33288:	cmp	r1, r0
   3328c:	str	r1, [r4, #20]
   33290:	bcs	3329c <flatcc_builder_extend_union_vector@@Base+0x68>
   33294:	ldr	r0, [r4, #16]
   33298:	b	3330c <flatcc_builder_extend_union_vector@@Base+0xd8>
   3329c:	ldr	r2, [r4, #28]
   332a0:	ldr	r0, [r4, #40]	; 0x28
   332a4:	ldr	ip, [r4, #48]	; 0x30
   332a8:	mov	r3, #1
   332ac:	str	r3, [sp]
   332b0:	mov	r3, #1
   332b4:	add	r1, r1, r2
   332b8:	add	r2, r1, #1
   332bc:	add	r1, r4, #60	; 0x3c
   332c0:	blx	ip
   332c4:	mov	r1, r0
   332c8:	mov	r0, #0
   332cc:	cmp	r1, #0
   332d0:	beq	332dc <flatcc_builder_extend_union_vector@@Base+0xa8>
   332d4:	sub	sp, fp, #8
   332d8:	pop	{r4, r5, fp, pc}
   332dc:	ldr	r1, [r4, #28]
   332e0:	ldr	r0, [r4, #60]	; 0x3c
   332e4:	ldr	r3, [r4, #64]	; 0x40
   332e8:	ldr	r2, [r4, #32]
   332ec:	add	r0, r0, r1
   332f0:	sub	r1, r3, r1
   332f4:	mvn	r3, #3
   332f8:	cmn	r1, #4
   332fc:	str	r0, [r4, #16]
   33300:	movcs	r1, r3
   33304:	str	r1, [r4, #24]
   33308:	str	r3, [r2, #4]
   3330c:	add	r0, r0, r5
   33310:	sub	sp, fp, #8
   33314:	pop	{r4, r5, fp, pc}
   33318:	andeq	r9, r1, ip, asr #6
   3331c:	andeq	r8, r1, r2, lsl #5
   33320:	andeq	r9, r1, pc, asr r3

00033324 <flatcc_builder_truncate_union_vector@@Base>:
   33324:	push	{fp, lr}
   33328:	mov	fp, sp
   3332c:	ldr	r2, [r0, #32]
   33330:	ldrh	r3, [r2, #14]
   33334:	cmp	r3, #7
   33338:	bne	33380 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   3333c:	ldr	r3, [r2, #20]
   33340:	cmp	r3, r1
   33344:	bcc	333a0 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   33348:	sub	r3, r3, r1
   3334c:	str	r3, [r2, #20]
   33350:	ldr	r2, [r0, #32]
   33354:	ldr	r3, [r0, #20]
   33358:	ldr	ip, [r0, #16]
   3335c:	ldr	r2, [r2, #16]
   33360:	mls	r3, r2, r1, r3
   33364:	mul	r2, r2, r1
   33368:	mov	r1, #0
   3336c:	str	r3, [r0, #20]
   33370:	add	r0, ip, r3
   33374:	bl	14ee8 <memset@plt>
   33378:	mov	r0, #0
   3337c:	pop	{fp, pc}
   33380:	ldr	r0, [pc, #56]	; 333c0 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   33384:	ldr	r1, [pc, #56]	; 333c4 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   33388:	ldr	r3, [pc, #56]	; 333c8 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   3338c:	movw	r2, #1665	; 0x681
   33390:	add	r0, pc, r0
   33394:	add	r1, pc, r1
   33398:	add	r3, pc, r3
   3339c:	bl	14f3c <__assert_fail@plt>
   333a0:	ldr	r0, [pc, #36]	; 333cc <flatcc_builder_truncate_union_vector@@Base+0xa8>
   333a4:	ldr	r1, [pc, #36]	; 333d0 <flatcc_builder_truncate_union_vector@@Base+0xac>
   333a8:	ldr	r3, [pc, #36]	; 333d4 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   333ac:	movw	r2, #1666	; 0x682
   333b0:	add	r0, pc, r0
   333b4:	add	r1, pc, r1
   333b8:	add	r3, pc, r3
   333bc:	bl	14f3c <__assert_fail@plt>
   333c0:	muleq	r1, r7, sp
   333c4:	andeq	r8, r1, sl, asr r1
   333c8:	andeq	r8, r1, r4, lsl lr
   333cc:	ldrdeq	r8, [r1], -fp
   333d0:	andeq	r8, r1, sl, lsr r1
   333d4:	strdeq	r8, [r1], -r4

000333d8 <flatcc_builder_union_vector_push@@Base>:
   333d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   333dc:	add	fp, sp, #24
   333e0:	sub	sp, sp, #8
   333e4:	mov	r7, r0
   333e8:	ldr	r0, [r0, #32]
   333ec:	mov	r9, r1
   333f0:	ldrh	r1, [r0, #14]
   333f4:	cmp	r1, #7
   333f8:	bne	334b4 <flatcc_builder_union_vector_push@@Base+0xdc>
   333fc:	ldr	r1, [r0, #20]
   33400:	mov	r6, #0
   33404:	cmn	r1, #-536870911	; 0xe0000001
   33408:	beq	334a8 <flatcc_builder_union_vector_push@@Base+0xd0>
   3340c:	add	r1, r1, #1
   33410:	mov	r8, r2
   33414:	str	r1, [r0, #20]
   33418:	ldr	r4, [r7, #20]
   3341c:	ldr	r0, [r7, #24]
   33420:	add	r1, r4, #8
   33424:	cmp	r1, r0
   33428:	str	r1, [r7, #20]
   3342c:	bcs	33438 <flatcc_builder_union_vector_push@@Base+0x60>
   33430:	ldr	r0, [r7, #16]
   33434:	b	33498 <flatcc_builder_union_vector_push@@Base+0xc0>
   33438:	ldr	r1, [r7, #28]
   3343c:	ldr	r0, [r7, #40]	; 0x28
   33440:	ldr	r5, [r7, #48]	; 0x30
   33444:	mov	r2, #1
   33448:	mov	r3, #1
   3344c:	str	r2, [sp]
   33450:	add	r1, r4, r1
   33454:	add	r2, r1, #9
   33458:	add	r1, r7, #60	; 0x3c
   3345c:	blx	r5
   33460:	cmp	r0, #0
   33464:	bne	334a8 <flatcc_builder_union_vector_push@@Base+0xd0>
   33468:	ldr	r1, [r7, #28]
   3346c:	ldr	r0, [r7, #60]	; 0x3c
   33470:	ldr	r3, [r7, #64]	; 0x40
   33474:	ldr	r2, [r7, #32]
   33478:	add	r0, r0, r1
   3347c:	sub	r1, r3, r1
   33480:	mvn	r3, #3
   33484:	cmn	r1, #4
   33488:	str	r0, [r7, #16]
   3348c:	movcs	r1, r3
   33490:	str	r1, [r7, #24]
   33494:	str	r3, [r2, #4]
   33498:	adds	r0, r0, r4
   3349c:	movne	r6, r0
   334a0:	strne	r9, [r0]
   334a4:	strne	r8, [r0, #4]
   334a8:	mov	r0, r6
   334ac:	sub	sp, fp, #24
   334b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   334b4:	ldr	r0, [pc, #24]	; 334d4 <flatcc_builder_union_vector_push@@Base+0xfc>
   334b8:	ldr	r1, [pc, #24]	; 334d8 <flatcc_builder_union_vector_push@@Base+0x100>
   334bc:	ldr	r3, [pc, #24]	; 334dc <flatcc_builder_union_vector_push@@Base+0x104>
   334c0:	movw	r2, #1677	; 0x68d
   334c4:	add	r0, pc, r0
   334c8:	add	r1, pc, r1
   334cc:	add	r3, pc, r3
   334d0:	bl	14f3c <__assert_fail@plt>
   334d4:	andeq	r8, r1, r3, ror #24
   334d8:	andeq	r8, r1, r6, lsr #32
   334dc:	andeq	r8, r1, r5, lsr #26

000334e0 <flatcc_builder_append_union_vector@@Base>:
   334e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   334e4:	add	fp, sp, #24
   334e8:	sub	sp, sp, #8
   334ec:	mov	r6, r0
   334f0:	ldr	r0, [r0, #32]
   334f4:	mov	r8, r1
   334f8:	ldrh	r1, [r0, #14]
   334fc:	cmp	r1, #7
   33500:	bne	335f0 <flatcc_builder_append_union_vector@@Base+0x110>
   33504:	ldr	r1, [r0, #20]
   33508:	mov	r5, r2
   3350c:	adds	r1, r1, r2
   33510:	cmpcc	r1, #536870912	; 0x20000000
   33514:	bcc	33538 <flatcc_builder_append_union_vector@@Base+0x58>
   33518:	ldr	r0, [pc, #252]	; 3361c <flatcc_builder_append_union_vector@@Base+0x13c>
   3351c:	ldr	r1, [pc, #252]	; 33620 <flatcc_builder_append_union_vector@@Base+0x140>
   33520:	ldr	r3, [pc, #252]	; 33624 <flatcc_builder_append_union_vector@@Base+0x144>
   33524:	mov	r2, #892	; 0x37c
   33528:	add	r0, pc, r0
   3352c:	add	r1, pc, r1
   33530:	add	r3, pc, r3
   33534:	bl	14f3c <__assert_fail@plt>
   33538:	str	r1, [r0, #20]
   3353c:	ldr	r4, [r6, #20]
   33540:	ldr	r0, [r6, #24]
   33544:	add	r1, r4, r5, lsl #3
   33548:	cmp	r1, r0
   3354c:	str	r1, [r6, #20]
   33550:	bcs	33574 <flatcc_builder_append_union_vector@@Base+0x94>
   33554:	ldr	r0, [r6, #16]
   33558:	adds	r7, r0, r4
   3355c:	beq	335e0 <flatcc_builder_append_union_vector@@Base+0x100>
   33560:	lsl	r2, r5, #3
   33564:	mov	r0, r7
   33568:	mov	r1, r8
   3356c:	bl	14e58 <memcpy@plt>
   33570:	b	335e4 <flatcc_builder_append_union_vector@@Base+0x104>
   33574:	ldr	r2, [r6, #28]
   33578:	ldr	r0, [r6, #40]	; 0x28
   3357c:	ldr	r7, [r6, #48]	; 0x30
   33580:	mov	r3, #1
   33584:	str	r3, [sp]
   33588:	mov	r3, #1
   3358c:	add	r1, r1, r2
   33590:	add	r2, r1, #1
   33594:	add	r1, r6, #60	; 0x3c
   33598:	blx	r7
   3359c:	mov	r7, #0
   335a0:	cmp	r0, #0
   335a4:	bne	335e4 <flatcc_builder_append_union_vector@@Base+0x104>
   335a8:	ldr	r1, [r6, #28]
   335ac:	ldr	r0, [r6, #60]	; 0x3c
   335b0:	ldr	r3, [r6, #64]	; 0x40
   335b4:	ldr	r2, [r6, #32]
   335b8:	add	r0, r0, r1
   335bc:	sub	r1, r3, r1
   335c0:	mvn	r3, #3
   335c4:	cmn	r1, #4
   335c8:	str	r0, [r6, #16]
   335cc:	movcs	r1, r3
   335d0:	str	r1, [r6, #24]
   335d4:	str	r3, [r2, #4]
   335d8:	adds	r7, r0, r4
   335dc:	bne	33560 <flatcc_builder_append_union_vector@@Base+0x80>
   335e0:	mov	r7, #0
   335e4:	mov	r0, r7
   335e8:	sub	sp, fp, #24
   335ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   335f0:	ldr	r0, [pc, #24]	; 33610 <flatcc_builder_append_union_vector@@Base+0x130>
   335f4:	ldr	r1, [pc, #24]	; 33614 <flatcc_builder_append_union_vector@@Base+0x134>
   335f8:	ldr	r3, [pc, #24]	; 33618 <flatcc_builder_append_union_vector@@Base+0x138>
   335fc:	movw	r2, #1692	; 0x69c
   33600:	add	r0, pc, r0
   33604:	add	r1, pc, r1
   33608:	add	r3, pc, r3
   3360c:	bl	14f3c <__assert_fail@plt>
   33610:	andeq	r8, r1, r7, lsr #22
   33614:	andeq	r7, r1, sl, ror #29
   33618:	andeq	r8, r1, r6, asr ip
   3361c:	andeq	r9, r1, ip, lsl #1
   33620:	andeq	r7, r1, r2, asr #31
   33624:	muleq	r1, pc, r0	; <UNPREDICTABLE>

00033628 <flatcc_builder_create_string@@Base>:
   33628:	push	{r4, r5, r6, sl, fp, lr}
   3362c:	add	fp, sp, #16
   33630:	sub	sp, sp, #80	; 0x50
   33634:	str	r2, [fp, #-20]	; 0xffffffec
   33638:	mvn	r5, r2
   3363c:	mov	r6, r0
   33640:	mov	r3, #1
   33644:	cmp	r2, #0
   33648:	ldr	ip, [r0, #136]	; 0x88
   3364c:	sub	r0, fp, #20
   33650:	str	r0, [sp, #12]
   33654:	mov	r0, #4
   33658:	str	r0, [sp, #4]
   3365c:	str	r0, [sp, #16]
   33660:	str	r3, [sp, #8]
   33664:	add	r5, ip, r5
   33668:	and	r5, r5, #3
   3366c:	add	r5, r5, #1
   33670:	beq	3368c <flatcc_builder_create_string@@Base+0x64>
   33674:	mov	r3, #2
   33678:	add	r0, r2, #4
   3367c:	str	r1, [sp, #20]
   33680:	str	r2, [sp, #24]
   33684:	str	r3, [sp, #8]
   33688:	str	r0, [sp, #4]
   3368c:	add	r1, r0, r5
   33690:	add	lr, sp, #4
   33694:	str	r1, [sp, #4]
   33698:	add	r0, lr, r3, lsl #3
   3369c:	cmp	r1, #0
   336a0:	ldr	r2, [pc, #132]	; 3372c <flatcc_builder_create_string@@Base+0x104>
   336a4:	ldr	r2, [pc, r2]
   336a8:	str	r2, [r0, #8]
   336ac:	add	r2, r3, #1
   336b0:	str	r5, [r0, #12]
   336b4:	str	r2, [sp, #8]
   336b8:	ble	3370c <flatcc_builder_create_string@@Base+0xe4>
   336bc:	ldr	r0, [r6, #36]	; 0x24
   336c0:	ldr	r4, [r6, #44]	; 0x2c
   336c4:	sub	r5, ip, r1
   336c8:	str	r1, [sp]
   336cc:	add	r1, lr, #8
   336d0:	mov	r3, r5
   336d4:	blx	r4
   336d8:	cmp	r0, #0
   336dc:	streq	r5, [r6, #136]	; 0x88
   336e0:	moveq	r0, r5
   336e4:	subeq	sp, fp, #16
   336e8:	popeq	{r4, r5, r6, sl, fp, pc}
   336ec:	ldr	r0, [pc, #72]	; 3373c <flatcc_builder_create_string@@Base+0x114>
   336f0:	ldr	r1, [pc, #72]	; 33740 <flatcc_builder_create_string@@Base+0x118>
   336f4:	ldr	r3, [pc, #72]	; 33744 <flatcc_builder_create_string@@Base+0x11c>
   336f8:	movw	r2, #651	; 0x28b
   336fc:	add	r0, pc, r0
   33700:	add	r1, pc, r1
   33704:	add	r3, pc, r3
   33708:	bl	14f3c <__assert_fail@plt>
   3370c:	ldr	r0, [pc, #28]	; 33730 <flatcc_builder_create_string@@Base+0x108>
   33710:	ldr	r1, [pc, #28]	; 33734 <flatcc_builder_create_string@@Base+0x10c>
   33714:	ldr	r3, [pc, #28]	; 33738 <flatcc_builder_create_string@@Base+0x110>
   33718:	movw	r2, #647	; 0x287
   3371c:	add	r0, pc, r0
   33720:	add	r1, pc, r1
   33724:	add	r3, pc, r3
   33728:	bl	14f3c <__assert_fail@plt>
   3372c:	andeq	fp, r2, r0, asr #19
   33730:	andeq	r8, r1, pc, lsl #31
   33734:	andeq	r7, r1, lr, asr #27
   33738:	andeq	r8, r1, r6, asr #28
   3373c:	andeq	r8, r1, pc, lsr #31
   33740:	andeq	r7, r1, lr, ror #27
   33744:	andeq	r8, r1, r6, ror #28

00033748 <flatcc_builder_create_string_str@@Base>:
   33748:	push	{r4, r5, fp, lr}
   3374c:	add	fp, sp, #8
   33750:	mov	r5, r0
   33754:	mov	r0, r1
   33758:	mov	r4, r1
   3375c:	bl	14ec4 <strlen@plt>
   33760:	mov	r2, r0
   33764:	mov	r0, r5
   33768:	mov	r1, r4
   3376c:	pop	{r4, r5, fp, lr}
   33770:	b	33628 <flatcc_builder_create_string@@Base>

00033774 <flatcc_builder_create_string_strn@@Base>:
   33774:	push	{r4, r5, r6, sl, fp, lr}
   33778:	add	fp, sp, #16
   3377c:	mov	r6, r0
   33780:	mov	r5, r1
   33784:	mov	r0, r1
   33788:	mov	r1, #0
   3378c:	mov	r4, r2
   33790:	bl	14f0c <memchr@plt>
   33794:	cmp	r0, #0
   33798:	mov	r1, r5
   3379c:	subne	r4, r0, r5
   337a0:	mov	r0, r6
   337a4:	mov	r2, r4
   337a8:	pop	{r4, r5, r6, sl, fp, lr}
   337ac:	b	33628 <flatcc_builder_create_string@@Base>

000337b0 <flatcc_builder_end_string@@Base>:
   337b0:	push	{r4, r5, fp, lr}
   337b4:	add	fp, sp, #8
   337b8:	mov	r4, r0
   337bc:	ldr	r0, [r0, #32]
   337c0:	ldrh	r1, [r0, #14]
   337c4:	cmp	r1, #6
   337c8:	bne	33870 <flatcc_builder_end_string@@Base+0xc0>
   337cc:	ldr	r2, [r0, #20]
   337d0:	ldr	r0, [r4, #20]
   337d4:	cmp	r2, r0
   337d8:	bne	33890 <flatcc_builder_end_string@@Base+0xe0>
   337dc:	ldr	r1, [r4, #16]
   337e0:	mov	r0, r4
   337e4:	bl	33628 <flatcc_builder_create_string@@Base>
   337e8:	mov	r5, r0
   337ec:	cmp	r0, #0
   337f0:	beq	33868 <flatcc_builder_end_string@@Base+0xb8>
   337f4:	ldr	r0, [r4, #16]
   337f8:	ldr	r2, [r4, #20]
   337fc:	mov	r1, #0
   33800:	bl	14ee8 <memset@plt>
   33804:	ldr	r0, [r4, #32]
   33808:	ldr	r1, [r4, #60]	; 0x3c
   3380c:	ldr	ip, [r4, #64]	; 0x40
   33810:	ldr	r3, [r0, #8]
   33814:	str	r3, [r4, #20]
   33818:	ldr	r3, [r0]
   3381c:	str	r3, [r4, #28]
   33820:	add	r1, r1, r3
   33824:	ldr	r2, [r0, #4]
   33828:	str	r1, [r4, #16]
   3382c:	sub	r1, ip, r3
   33830:	cmp	r1, r2
   33834:	movhi	r1, r2
   33838:	str	r1, [r4, #24]
   3383c:	ldrh	r1, [r4, #130]	; 0x82
   33840:	ldrh	r2, [r4, #128]	; 0x80
   33844:	cmp	r2, r1
   33848:	strhcc	r1, [r4, #128]	; 0x80
   3384c:	ldrh	r1, [r0, #12]
   33850:	sub	r0, r0, #36	; 0x24
   33854:	str	r0, [r4, #32]
   33858:	strh	r1, [r4, #130]	; 0x82
   3385c:	ldr	r0, [r4, #156]	; 0x9c
   33860:	sub	r0, r0, #1
   33864:	str	r0, [r4, #156]	; 0x9c
   33868:	mov	r0, r5
   3386c:	pop	{r4, r5, fp, pc}
   33870:	ldr	r0, [pc, #56]	; 338b0 <flatcc_builder_end_string@@Base+0x100>
   33874:	ldr	r1, [pc, #56]	; 338b4 <flatcc_builder_end_string@@Base+0x104>
   33878:	ldr	r3, [pc, #56]	; 338b8 <flatcc_builder_end_string@@Base+0x108>
   3387c:	movw	r2, #1732	; 0x6c4
   33880:	add	r0, pc, r0
   33884:	add	r1, pc, r1
   33888:	add	r3, pc, r3
   3388c:	bl	14f3c <__assert_fail@plt>
   33890:	ldr	r0, [pc, #36]	; 338bc <flatcc_builder_end_string@@Base+0x10c>
   33894:	ldr	r1, [pc, #36]	; 338c0 <flatcc_builder_end_string@@Base+0x110>
   33898:	ldr	r3, [pc, #36]	; 338c4 <flatcc_builder_end_string@@Base+0x114>
   3389c:	movw	r2, #1733	; 0x6c5
   338a0:	add	r0, pc, r0
   338a4:	add	r1, pc, r1
   338a8:	add	r3, pc, r3
   338ac:	bl	14f3c <__assert_fail@plt>
   338b0:	andeq	r8, r1, sl, lsr #3
   338b4:	andeq	r7, r1, sl, ror #24
   338b8:	andeq	r8, r1, r5, asr sl
   338bc:	andeq	r8, r1, r0, lsl #21
   338c0:	andeq	r7, r1, sl, asr #24
   338c4:	andeq	r8, r1, r5, lsr sl

000338c8 <flatcc_builder_string_edit@@Base>:
   338c8:	ldr	r0, [r0, #16]
   338cc:	bx	lr

000338d0 <flatcc_builder_string_len@@Base>:
   338d0:	ldr	r0, [r0, #32]
   338d4:	ldr	r0, [r0, #20]
   338d8:	bx	lr

000338dc <flatcc_builder_table_edit@@Base>:
   338dc:	ldr	r2, [r0, #32]
   338e0:	ldrh	r2, [r2, #14]
   338e4:	cmp	r2, #3
   338e8:	ldreq	r2, [r0, #16]
   338ec:	ldreq	r0, [r0, #20]
   338f0:	addeq	r0, r2, r0
   338f4:	subeq	r0, r0, r1
   338f8:	bxeq	lr
   338fc:	push	{fp, lr}
   33900:	mov	fp, sp
   33904:	ldr	r0, [pc, #24]	; 33924 <flatcc_builder_table_edit@@Base+0x48>
   33908:	ldr	r1, [pc, #24]	; 33928 <flatcc_builder_table_edit@@Base+0x4c>
   3390c:	ldr	r3, [pc, #24]	; 3392c <flatcc_builder_table_edit@@Base+0x50>
   33910:	movw	r2, #1794	; 0x702
   33914:	add	r0, pc, r0
   33918:	add	r1, pc, r1
   3391c:	add	r3, pc, r3
   33920:	bl	14f3c <__assert_fail@plt>
   33924:	andeq	r8, r1, r6, lsl #8
   33928:	ldrdeq	r7, [r1], -r6
   3392c:			; <UNDEFINED> instruction: 0x00018ab6

00033930 <flatcc_builder_table_add_copy@@Base>:
   33930:	push	{r4, r5, r6, sl, fp, lr}
   33934:	add	fp, sp, #16
   33938:	mov	r4, r3
   3393c:	ldr	r3, [fp, #8]
   33940:	mov	r5, r2
   33944:	mov	r2, r4
   33948:	bl	32964 <flatcc_builder_table_add@@Base>
   3394c:	mov	r6, r0
   33950:	cmp	r0, #0
   33954:	beq	33968 <flatcc_builder_table_add_copy@@Base+0x38>
   33958:	mov	r0, r6
   3395c:	mov	r1, r5
   33960:	mov	r2, r4
   33964:	bl	14e58 <memcpy@plt>
   33968:	mov	r0, r6
   3396c:	pop	{r4, r5, r6, sl, fp, pc}

00033970 <flatcc_builder_push_buffer_alignment@@Base>:
   33970:	ldrh	r1, [r0, #128]	; 0x80
   33974:	mov	r2, #4
   33978:	strh	r2, [r0, #128]	; 0x80
   3397c:	mov	r0, r1
   33980:	bx	lr

00033984 <flatcc_builder_pop_buffer_alignment@@Base>:
   33984:	ldrh	r2, [r0, #128]	; 0x80
   33988:	cmp	r2, r1
   3398c:	strhcc	r1, [r0, #128]	; 0x80
   33990:	bx	lr

00033994 <flatcc_builder_get_buffer_alignment@@Base>:
   33994:	ldrh	r0, [r0, #128]	; 0x80
   33998:	bx	lr

0003399c <flatcc_builder_set_vtable_clustering@@Base>:
   3399c:	clz	r1, r1
   339a0:	lsr	r1, r1, #5
   339a4:	str	r1, [r0, #180]	; 0xb4
   339a8:	bx	lr

000339ac <flatcc_builder_set_block_align@@Base>:
   339ac:	strh	r1, [r0, #132]	; 0x84
   339b0:	bx	lr

000339b4 <flatcc_builder_get_level@@Base>:
   339b4:	ldr	r0, [r0, #156]	; 0x9c
   339b8:	bx	lr

000339bc <flatcc_builder_set_max_level@@Base>:
   339bc:	str	r1, [r0, #176]	; 0xb0
   339c0:	ldr	r2, [r0, #160]	; 0xa0
   339c4:	cmp	r2, r1
   339c8:	strlt	r1, [r0, #160]	; 0xa0
   339cc:	bx	lr

000339d0 <flatcc_builder_get_buffer_size@@Base>:
   339d0:	ldr	r1, [r0, #136]	; 0x88
   339d4:	ldr	r0, [r0, #140]	; 0x8c
   339d8:	sub	r0, r0, r1
   339dc:	bx	lr

000339e0 <flatcc_builder_get_buffer_start@@Base>:
   339e0:	ldr	r0, [r0, #136]	; 0x88
   339e4:	bx	lr

000339e8 <flatcc_builder_get_buffer_end@@Base>:
   339e8:	ldr	r0, [r0, #140]	; 0x8c
   339ec:	bx	lr

000339f0 <flatcc_builder_set_vtable_cache_limit@@Base>:
   339f0:	str	r1, [r0, #172]	; 0xac
   339f4:	bx	lr

000339f8 <flatcc_builder_set_identifier@@Base>:
   339f8:	ldr	r2, [pc, #20]	; 33a14 <flatcc_builder_set_identifier@@Base+0x1c>
   339fc:	cmp	r1, #0
   33a00:	ldr	r2, [pc, r2]
   33a04:	movne	r2, r1
   33a08:	ldr	r1, [r2]
   33a0c:	str	r1, [r0, #168]	; 0xa8
   33a10:	bx	lr
   33a14:	andeq	fp, r2, r4, ror #12

00033a18 <flatcc_builder_get_type@@Base>:
   33a18:	ldr	r0, [r0, #32]
   33a1c:	cmp	r0, #0
   33a20:	ldrhne	r0, [r0, #14]
   33a24:	moveq	r0, #0
   33a28:	bx	lr

00033a2c <flatcc_builder_get_type_at@@Base>:
   33a2c:	mov	r2, r0
   33a30:	cmp	r1, #1
   33a34:	mov	r0, #0
   33a38:	ldrge	r3, [r2, #156]	; 0x9c
   33a3c:	cmpge	r3, r1
   33a40:	bge	33a48 <flatcc_builder_get_type_at@@Base+0x1c>
   33a44:	bx	lr
   33a48:	sub	r0, r1, r3
   33a4c:	ldr	r1, [r2, #32]
   33a50:	add	r0, r0, r0, lsl #3
   33a54:	add	r0, r1, r0, lsl #2
   33a58:	ldrh	r0, [r0, #14]
   33a5c:	bx	lr

00033a60 <flatcc_builder_get_direct_buffer@@Base>:
   33a60:	ldr	r2, [r0, #184]	; 0xb8
   33a64:	cmp	r2, #0
   33a68:	beq	33a7c <flatcc_builder_get_direct_buffer@@Base+0x1c>
   33a6c:	ldr	r2, [r0, #188]	; 0xbc
   33a70:	ldr	r3, [r0, #192]	; 0xc0
   33a74:	cmp	r2, r3
   33a78:	beq	33a94 <flatcc_builder_get_direct_buffer@@Base+0x34>
   33a7c:	cmp	r1, #0
   33a80:	moveq	r0, #0
   33a84:	bxeq	lr
   33a88:	mov	r0, #0
   33a8c:	str	r0, [r1]
   33a90:	bx	lr
   33a94:	cmp	r1, #0
   33a98:	ldrne	r2, [r0, #212]	; 0xd4
   33a9c:	strne	r2, [r1]
   33aa0:	ldr	r0, [r0, #196]	; 0xc4
   33aa4:	bx	lr

00033aa8 <flatcc_builder_copy_buffer@@Base>:
   33aa8:	push	{fp, lr}
   33aac:	mov	fp, sp
   33ab0:	ldr	r3, [r0, #184]	; 0xb8
   33ab4:	cmp	r3, #0
   33ab8:	beq	33aec <flatcc_builder_copy_buffer@@Base+0x44>
   33abc:	add	r0, r0, #188	; 0xbc
   33ac0:	bl	341f8 <flatcc_emitter_copy_buffer@@Base>
   33ac4:	cmp	r0, #0
   33ac8:	popne	{fp, pc}
   33acc:	ldr	r0, [pc, #32]	; 33af4 <flatcc_builder_copy_buffer@@Base+0x4c>
   33ad0:	ldr	r1, [pc, #32]	; 33af8 <flatcc_builder_copy_buffer@@Base+0x50>
   33ad4:	ldr	r3, [pc, #32]	; 33afc <flatcc_builder_copy_buffer@@Base+0x54>
   33ad8:	movw	r2, #1926	; 0x786
   33adc:	add	r0, pc, r0
   33ae0:	add	r1, pc, r1
   33ae4:	add	r3, pc, r3
   33ae8:	bl	14f3c <__assert_fail@plt>
   33aec:	mov	r0, #0
   33af0:	pop	{fp, pc}
   33af4:	andeq	r3, r1, sl, ror sp
   33af8:	andeq	r7, r1, lr, lsl #20
   33afc:	andeq	r8, r1, r9, ror r9

00033b00 <flatcc_builder_finalize_buffer@@Base>:
   33b00:	push	{r4, r5, r6, sl, fp, lr}
   33b04:	add	fp, sp, #16
   33b08:	mov	r5, r0
   33b0c:	ldr	r0, [r0, #136]	; 0x88
   33b10:	cmp	r1, #0
   33b14:	ldr	r2, [r5, #140]	; 0x8c
   33b18:	sub	r4, r2, r0
   33b1c:	mov	r0, r4
   33b20:	strne	r4, [r1]
   33b24:	bl	14ea0 <malloc@plt>
   33b28:	cmp	r0, #0
   33b2c:	beq	33b7c <flatcc_builder_finalize_buffer@@Base+0x7c>
   33b30:	mov	r6, r0
   33b34:	ldr	r0, [r5, #184]	; 0xb8
   33b38:	cmp	r0, #0
   33b3c:	beq	33b9c <flatcc_builder_finalize_buffer@@Base+0x9c>
   33b40:	add	r0, r5, #188	; 0xbc
   33b44:	mov	r1, r6
   33b48:	mov	r2, r4
   33b4c:	bl	341f8 <flatcc_emitter_copy_buffer@@Base>
   33b50:	cmp	r0, #0
   33b54:	movne	r0, r6
   33b58:	popne	{r4, r5, r6, sl, fp, pc}
   33b5c:	ldr	r0, [pc, #88]	; 33bbc <flatcc_builder_finalize_buffer@@Base+0xbc>
   33b60:	ldr	r1, [pc, #88]	; 33bc0 <flatcc_builder_finalize_buffer@@Base+0xc0>
   33b64:	ldr	r3, [pc, #88]	; 33bc4 <flatcc_builder_finalize_buffer@@Base+0xc4>
   33b68:	movw	r2, #1926	; 0x786
   33b6c:	add	r0, pc, r0
   33b70:	add	r1, pc, r1
   33b74:	add	r3, pc, r3
   33b78:	bl	14f3c <__assert_fail@plt>
   33b7c:	ldr	r0, [pc, #80]	; 33bd4 <flatcc_builder_finalize_buffer@@Base+0xd4>
   33b80:	ldr	r1, [pc, #80]	; 33bd8 <flatcc_builder_finalize_buffer@@Base+0xd8>
   33b84:	ldr	r3, [pc, #80]	; 33bdc <flatcc_builder_finalize_buffer@@Base+0xdc>
   33b88:	movw	r2, #1944	; 0x798
   33b8c:	add	r0, pc, r0
   33b90:	add	r1, pc, r1
   33b94:	add	r3, pc, r3
   33b98:	bl	14f3c <__assert_fail@plt>
   33b9c:	ldr	r0, [pc, #36]	; 33bc8 <flatcc_builder_finalize_buffer@@Base+0xc8>
   33ba0:	ldr	r1, [pc, #36]	; 33bcc <flatcc_builder_finalize_buffer@@Base+0xcc>
   33ba4:	ldr	r3, [pc, #36]	; 33bd0 <flatcc_builder_finalize_buffer@@Base+0xd0>
   33ba8:	movw	r2, #1948	; 0x79c
   33bac:	add	r0, pc, r0
   33bb0:	add	r1, pc, r1
   33bb4:	add	r3, pc, r3
   33bb8:	bl	14f3c <__assert_fail@plt>
   33bbc:	andeq	r3, r1, sl, ror #25
   33bc0:	andeq	r7, r1, lr, ror r9
   33bc4:	andeq	r8, r1, r9, ror #17
   33bc8:	strdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   33bcc:	andeq	r7, r1, lr, lsr r9
   33bd0:	andeq	r8, r1, lr, ror #17
   33bd4:	andeq	r8, r1, pc, lsl fp
   33bd8:	andeq	r7, r1, lr, asr r9
   33bdc:	andeq	r8, r1, lr, lsl #18

00033be0 <flatcc_builder_finalize_aligned_buffer@@Base>:
   33be0:	push	{r4, r5, r6, r7, fp, lr}
   33be4:	add	fp, sp, #16
   33be8:	sub	sp, sp, #8
   33bec:	mov	r5, r0
   33bf0:	mov	r4, r1
   33bf4:	ldr	r0, [r0, #136]	; 0x88
   33bf8:	ldr	r1, [r5, #140]	; 0x8c
   33bfc:	cmp	r4, #0
   33c00:	sub	r0, r1, r0
   33c04:	mov	r1, #0
   33c08:	strne	r0, [r4]
   33c0c:	ldrh	r2, [r5, #128]	; 0x80
   33c10:	str	r1, [sp, #4]
   33c14:	add	r0, r0, r2
   33c18:	cmp	r2, #4
   33c1c:	mov	r1, r2
   33c20:	rsb	r2, r2, #0
   33c24:	sub	r0, r0, #1
   33c28:	movls	r1, #4
   33c2c:	and	r7, r0, r2
   33c30:	add	r0, sp, #4
   33c34:	mov	r2, r7
   33c38:	bl	14edc <posix_memalign@plt>
   33c3c:	ldr	r6, [sp, #4]
   33c40:	cmp	r0, #0
   33c44:	cmpne	r6, #0
   33c48:	bne	33c98 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   33c4c:	cmp	r6, #0
   33c50:	beq	33ca0 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   33c54:	ldr	r0, [r5, #184]	; 0xb8
   33c58:	cmp	r0, #0
   33c5c:	beq	33c98 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   33c60:	add	r0, r5, #188	; 0xbc
   33c64:	mov	r1, r6
   33c68:	mov	r2, r7
   33c6c:	bl	341f8 <flatcc_emitter_copy_buffer@@Base>
   33c70:	cmp	r0, #0
   33c74:	bne	33cac <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   33c78:	ldr	r0, [pc, #56]	; 33cb8 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   33c7c:	ldr	r1, [pc, #56]	; 33cbc <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   33c80:	ldr	r3, [pc, #56]	; 33cc0 <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   33c84:	movw	r2, #1926	; 0x786
   33c88:	add	r0, pc, r0
   33c8c:	add	r1, pc, r1
   33c90:	add	r3, pc, r3
   33c94:	bl	14f3c <__assert_fail@plt>
   33c98:	mov	r0, r6
   33c9c:	bl	14e4c <free@plt>
   33ca0:	mov	r6, #0
   33ca4:	cmp	r4, #0
   33ca8:	strne	r6, [r4]
   33cac:	mov	r0, r6
   33cb0:	sub	sp, fp, #16
   33cb4:	pop	{r4, r5, r6, r7, fp, pc}
   33cb8:	andeq	r3, r1, lr, asr #23
   33cbc:	andeq	r7, r1, r2, ror #16
   33cc0:	andeq	r8, r1, sp, asr #15

00033cc4 <flatcc_builder_aligned_alloc@@Base>:
   33cc4:	push	{fp, lr}
   33cc8:	mov	fp, sp
   33ccc:	sub	sp, sp, #8
   33cd0:	mov	r2, r1
   33cd4:	mov	r1, r0
   33cd8:	mov	r0, #0
   33cdc:	cmp	r1, #4
   33ce0:	str	r0, [sp, #4]
   33ce4:	add	r0, sp, #4
   33ce8:	movls	r1, #4
   33cec:	bl	14edc <posix_memalign@plt>
   33cf0:	mov	r1, r0
   33cf4:	ldr	r0, [sp, #4]
   33cf8:	cmp	r1, #0
   33cfc:	cmpne	r0, #0
   33d00:	bne	33d0c <flatcc_builder_aligned_alloc@@Base+0x48>
   33d04:	mov	sp, fp
   33d08:	pop	{fp, pc}
   33d0c:	bl	14e4c <free@plt>
   33d10:	mov	r0, #0
   33d14:	str	r0, [sp, #4]
   33d18:	mov	sp, fp
   33d1c:	pop	{fp, pc}

00033d20 <flatcc_builder_aligned_free@@Base>:
   33d20:	b	14e4c <free@plt>

00033d24 <flatcc_builder_get_emit_context@@Base>:
   33d24:	ldr	r0, [r0, #36]	; 0x24
   33d28:	bx	lr

00033d2c <flatcc_emitter_recycle_page@@Base>:
   33d2c:	ldr	r3, [r0]
   33d30:	mov	r2, r0
   33d34:	mvn	r0, #0
   33d38:	cmp	r3, r1
   33d3c:	ldrne	r2, [r2, #4]
   33d40:	cmpne	r2, r1
   33d44:	bne	33d4c <flatcc_emitter_recycle_page@@Base+0x20>
   33d48:	bx	lr
   33d4c:	ldr	r0, [r1, #2944]	; 0xb80
   33d50:	ldr	r2, [r1, #2948]	; 0xb84
   33d54:	str	r2, [r0, #2948]	; 0xb84
   33d58:	ldr	r2, [r1, #2948]	; 0xb84
   33d5c:	str	r0, [r2, #2944]	; 0xb80
   33d60:	ldr	r0, [r3, #2948]	; 0xb84
   33d64:	str	r3, [r1, #2944]	; 0xb80
   33d68:	str	r0, [r1, #2948]	; 0xb84
   33d6c:	str	r1, [r0, #2944]	; 0xb80
   33d70:	ldr	r0, [r1, #2944]	; 0xb80
   33d74:	str	r1, [r0, #2948]	; 0xb84
   33d78:	mov	r0, #0
   33d7c:	bx	lr

00033d80 <flatcc_emitter_reset@@Base>:
   33d80:	push	{r4, sl, fp, lr}
   33d84:	add	fp, sp, #8
   33d88:	ldr	r1, [r0]
   33d8c:	cmp	r1, #0
   33d90:	beq	33e48 <flatcc_emitter_reset@@Base+0xc8>
   33d94:	mov	r4, r0
   33d98:	add	r2, r1, #1472	; 0x5c0
   33d9c:	mov	r0, #1472	; 0x5c0
   33da0:	mov	r3, #0
   33da4:	stmib	r4, {r1, r2}
   33da8:	str	r0, [r4, #12]
   33dac:	str	r2, [r4, #16]
   33db0:	str	r0, [r4, #20]
   33db4:	movw	r0, #64064	; 0xfa40
   33db8:	movt	r0, #65535	; 0xffff
   33dbc:	str	r0, [r1, #2952]	; 0xb88
   33dc0:	ldr	r2, [r4, #32]
   33dc4:	ldr	r0, [r4, #24]
   33dc8:	cmp	r2, #0
   33dcc:	moveq	r2, r0
   33dd0:	streq	r0, [r4, #32]
   33dd4:	str	r3, [r4, #24]
   33dd8:	add	r2, r2, r2, lsl #1
   33ddc:	lsr	r2, r2, #2
   33de0:	add	r0, r2, r0, lsr #2
   33de4:	str	r0, [r4, #32]
   33de8:	ldr	r2, [r4, #28]
   33dec:	cmp	r2, r0, lsl #1
   33df0:	bls	33e48 <flatcc_emitter_reset@@Base+0xc8>
   33df4:	mov	r2, r1
   33df8:	ldr	r0, [r2, #2944]!	; 0xb80
   33dfc:	cmp	r0, r1
   33e00:	beq	33e48 <flatcc_emitter_reset@@Base+0xc8>
   33e04:	ldr	r3, [r0, #2944]	; 0xb80
   33e08:	str	r3, [r2]
   33e0c:	ldr	r2, [r0, #2944]	; 0xb80
   33e10:	str	r1, [r2, #2948]	; 0xb84
   33e14:	bl	14e4c <free@plt>
   33e18:	ldr	r0, [r4, #28]
   33e1c:	ldr	r1, [r4, #32]
   33e20:	sub	r0, r0, #2944	; 0xb80
   33e24:	cmp	r0, r1, lsl #1
   33e28:	str	r0, [r4, #28]
   33e2c:	popls	{r4, sl, fp, pc}
   33e30:	ldr	r1, [r4, #4]
   33e34:	ldr	r3, [r4]
   33e38:	mov	r2, r1
   33e3c:	ldr	r0, [r2, #2944]!	; 0xb80
   33e40:	cmp	r0, r3
   33e44:	bne	33e04 <flatcc_emitter_reset@@Base+0x84>
   33e48:	pop	{r4, sl, fp, pc}

00033e4c <flatcc_emitter_clear@@Base>:
   33e4c:	push	{r4, r5, r6, sl, fp, lr}
   33e50:	add	fp, sp, #16
   33e54:	ldr	r5, [r0]
   33e58:	cmp	r5, #0
   33e5c:	popeq	{r4, r5, r6, sl, fp, pc}
   33e60:	mov	r4, r0
   33e64:	ldr	r0, [r5, #2948]	; 0xb84
   33e68:	mov	r6, #0
   33e6c:	str	r6, [r0, #2944]	; 0xb80
   33e70:	b	33e80 <flatcc_emitter_clear@@Base+0x34>
   33e74:	mov	r5, r0
   33e78:	ldr	r0, [r0, #2948]	; 0xb84
   33e7c:	bl	14e4c <free@plt>
   33e80:	ldr	r0, [r5, #2944]	; 0xb80
   33e84:	cmp	r0, #0
   33e88:	bne	33e74 <flatcc_emitter_clear@@Base+0x28>
   33e8c:	mov	r0, r5
   33e90:	bl	14e4c <free@plt>
   33e94:	vmov.i32	q8, #0	; 0x00000000
   33e98:	add	r0, r4, #16
   33e9c:	vst1.32	{d16-d17}, [r0]
   33ea0:	mov	r0, #32
   33ea4:	vst1.32	{d16-d17}, [r4], r0
   33ea8:	str	r6, [r4]
   33eac:	pop	{r4, r5, r6, sl, fp, pc}

00033eb0 <flatcc_emitter@@Base>:
   33eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33eb4:	add	fp, sp, #28
   33eb8:	sub	sp, sp, #4
   33ebc:	mov	r6, r0
   33ec0:	mov	r7, r1
   33ec4:	ldr	r0, [r0, #24]
   33ec8:	ldr	r1, [fp, #8]
   33ecc:	mov	r4, r2
   33ed0:	cmn	r3, #1
   33ed4:	mov	r9, r6
   33ed8:	add	r0, r0, r1
   33edc:	str	r0, [r6, #24]
   33ee0:	ble	34020 <flatcc_emitter@@Base+0x170>
   33ee4:	ldr	r0, [r9, #20]!
   33ee8:	cmp	r0, r1
   33eec:	bcs	34194 <flatcc_emitter@@Base+0x2e4>
   33ef0:	mov	r8, #0
   33ef4:	cmp	r4, #0
   33ef8:	beq	341ec <flatcc_emitter@@Base+0x33c>
   33efc:	movw	sl, #64064	; 0xfa40
   33f00:	movt	sl, #65535	; 0xffff
   33f04:	ldr	r8, [r7, #4]
   33f08:	cmp	r8, #0
   33f0c:	beq	34010 <flatcc_emitter@@Base+0x160>
   33f10:	ldr	r9, [r7]
   33f14:	cmp	r8, r0
   33f18:	mov	r5, r8
   33f1c:	bls	33fdc <flatcc_emitter@@Base+0x12c>
   33f20:	mov	r5, r0
   33f24:	cmp	r5, #0
   33f28:	bne	33fdc <flatcc_emitter@@Base+0x12c>
   33f2c:	ldr	r5, [r6, #4]
   33f30:	cmp	r5, #0
   33f34:	beq	33f48 <flatcc_emitter@@Base+0x98>
   33f38:	ldr	r0, [r5, #2944]	; 0xb80
   33f3c:	ldr	r1, [r6]
   33f40:	cmp	r0, r1
   33f44:	bne	33f80 <flatcc_emitter@@Base+0xd0>
   33f48:	movw	r0, #2956	; 0xb8c
   33f4c:	bl	14ea0 <malloc@plt>
   33f50:	cmp	r0, #0
   33f54:	beq	341a4 <flatcc_emitter@@Base+0x2f4>
   33f58:	ldr	r1, [r6, #28]
   33f5c:	cmp	r5, #0
   33f60:	add	r1, r1, #2944	; 0xb80
   33f64:	str	r1, [r6, #28]
   33f68:	beq	33fac <flatcc_emitter@@Base+0xfc>
   33f6c:	ldr	r1, [r6]
   33f70:	str	r1, [r0, #2944]	; 0xb80
   33f74:	str	r5, [r0, #2948]	; 0xb84
   33f78:	str	r0, [r1, #2948]	; 0xb84
   33f7c:	str	r0, [r5, #2944]	; 0xb80
   33f80:	mov	r5, #2944	; 0xb80
   33f84:	str	r0, [r6, #4]
   33f88:	str	r0, [r6, #16]
   33f8c:	str	r5, [r6, #20]
   33f90:	ldr	r1, [r0, #2948]	; 0xb84
   33f94:	ldr	r1, [r1, #2952]	; 0xb88
   33f98:	add	r1, r1, #2944	; 0xb80
   33f9c:	str	r1, [r0, #2952]	; 0xb88
   33fa0:	cmp	r8, r5
   33fa4:	bhi	33f24 <flatcc_emitter@@Base+0x74>
   33fa8:	b	33fd8 <flatcc_emitter@@Base+0x128>
   33fac:	add	r1, r0, #1472	; 0x5c0
   33fb0:	mov	r5, #1472	; 0x5c0
   33fb4:	str	r0, [r6]
   33fb8:	stmib	r6, {r0, r1, r5}
   33fbc:	str	r1, [r6, #16]
   33fc0:	str	r5, [r6, #20]
   33fc4:	str	r0, [r0, #2944]	; 0xb80
   33fc8:	str	r0, [r0, #2948]	; 0xb84
   33fcc:	str	sl, [r0, #2952]	; 0xb88
   33fd0:	cmp	r8, r5
   33fd4:	bhi	33f24 <flatcc_emitter@@Base+0x74>
   33fd8:	mov	r5, r8
   33fdc:	ldr	r0, [r6, #16]
   33fe0:	mov	r1, r9
   33fe4:	mov	r2, r5
   33fe8:	bl	14e58 <memcpy@plt>
   33fec:	ldr	r0, [r6, #16]
   33ff0:	ldr	r1, [r6, #20]
   33ff4:	add	r9, r9, r5
   33ff8:	subs	r8, r8, r5
   33ffc:	add	r2, r0, r5
   34000:	sub	r0, r1, r5
   34004:	str	r2, [r6, #16]
   34008:	str	r0, [r6, #20]
   3400c:	bne	33f14 <flatcc_emitter@@Base+0x64>
   34010:	subs	r4, r4, #1
   34014:	add	r7, r7, #8
   34018:	bne	33f04 <flatcc_emitter@@Base+0x54>
   3401c:	b	3418c <flatcc_emitter@@Base+0x2dc>
   34020:	ldr	r0, [r9, #12]!
   34024:	cmp	r0, r1
   34028:	bcs	341ac <flatcc_emitter@@Base+0x2fc>
   3402c:	mov	r8, #0
   34030:	cmp	r4, #0
   34034:	beq	341ec <flatcc_emitter@@Base+0x33c>
   34038:	add	r0, r7, r4, lsl #3
   3403c:	movw	sl, #2952	; 0xb88
   34040:	ldr	r8, [r0, #-4]
   34044:	sub	r1, r0, #8
   34048:	str	r1, [sp]
   3404c:	cmp	r8, #0
   34050:	beq	34180 <flatcc_emitter@@Base+0x2d0>
   34054:	ldr	r0, [sp]
   34058:	ldr	r0, [r0]
   3405c:	add	r7, r0, r8
   34060:	ldr	r1, [r9]
   34064:	cmp	r8, r1
   34068:	bls	34150 <flatcc_emitter@@Base+0x2a0>
   3406c:	cmp	r1, #0
   34070:	mov	r5, r1
   34074:	bne	34154 <flatcc_emitter@@Base+0x2a4>
   34078:	ldr	r5, [r6]
   3407c:	cmp	r5, #0
   34080:	beq	340ac <flatcc_emitter@@Base+0x1fc>
   34084:	ldr	r0, [r5, #2948]	; 0xb84
   34088:	ldr	r1, [r6, #4]
   3408c:	cmp	r0, r1
   34090:	beq	340ac <flatcc_emitter@@Base+0x1fc>
   34094:	ldr	r1, [r5, #2952]	; 0xb88
   34098:	mov	r2, r0
   3409c:	sub	r1, r1, #2944	; 0xb80
   340a0:	str	r1, [r2, #2952]!	; 0xb88
   340a4:	str	r0, [r6]
   340a8:	b	340ec <flatcc_emitter@@Base+0x23c>
   340ac:	movw	r0, #2956	; 0xb8c
   340b0:	bl	14ea0 <malloc@plt>
   340b4:	cmp	r0, #0
   340b8:	beq	341a4 <flatcc_emitter@@Base+0x2f4>
   340bc:	ldr	r1, [r6, #28]
   340c0:	cmp	r5, #0
   340c4:	add	r1, r1, #2944	; 0xb80
   340c8:	str	r1, [r6, #28]
   340cc:	beq	34118 <flatcc_emitter@@Base+0x268>
   340d0:	ldr	r1, [r6, #4]
   340d4:	add	r2, r0, sl
   340d8:	str	r5, [r0, #2944]	; 0xb80
   340dc:	str	r1, [r0, #2948]	; 0xb84
   340e0:	str	r0, [r5, #2948]	; 0xb84
   340e4:	str	r0, [r1, #2944]	; 0xb80
   340e8:	str	r0, [r6]
   340ec:	add	r3, r0, #2944	; 0xb80
   340f0:	mov	r1, #2944	; 0xb80
   340f4:	str	r3, [r6, #8]
   340f8:	str	r1, [r6, #12]
   340fc:	ldr	r0, [r0, #2944]	; 0xb80
   34100:	ldr	r0, [r0, #2952]	; 0xb88
   34104:	sub	r0, r0, #2944	; 0xb80
   34108:	str	r0, [r2]
   3410c:	cmp	r8, r1
   34110:	bhi	3406c <flatcc_emitter@@Base+0x1bc>
   34114:	b	34150 <flatcc_emitter@@Base+0x2a0>
   34118:	add	r2, r0, #1472	; 0x5c0
   3411c:	mov	r1, #1472	; 0x5c0
   34120:	str	r0, [r6]
   34124:	stmib	r6, {r0, r2}
   34128:	str	r1, [r6, #12]
   3412c:	str	r2, [r6, #16]
   34130:	movw	r2, #64064	; 0xfa40
   34134:	str	r1, [r6, #20]
   34138:	str	r0, [r0, #2944]	; 0xb80
   3413c:	str	r0, [r0, #2948]	; 0xb84
   34140:	movt	r2, #65535	; 0xffff
   34144:	str	r2, [r0, #2952]	; 0xb88
   34148:	cmp	r8, r1
   3414c:	bhi	3406c <flatcc_emitter@@Base+0x1bc>
   34150:	mov	r5, r8
   34154:	sub	r0, r1, r5
   34158:	sub	r7, r7, r5
   3415c:	mov	r2, r5
   34160:	str	r0, [r6, #12]
   34164:	mov	r1, r7
   34168:	ldr	r0, [r6, #8]
   3416c:	sub	r0, r0, r5
   34170:	str	r0, [r6, #8]
   34174:	bl	14e58 <memcpy@plt>
   34178:	subs	r8, r8, r5
   3417c:	bne	34060 <flatcc_emitter@@Base+0x1b0>
   34180:	ldr	r0, [sp]
   34184:	subs	r4, r4, #1
   34188:	bne	34040 <flatcc_emitter@@Base+0x190>
   3418c:	mov	r8, #0
   34190:	b	341ec <flatcc_emitter@@Base+0x33c>
   34194:	ldr	r5, [r6, #16]
   34198:	add	r2, r5, r1
   3419c:	str	r2, [r6, #16]
   341a0:	b	341b8 <flatcc_emitter@@Base+0x308>
   341a4:	mvn	r8, #0
   341a8:	b	341ec <flatcc_emitter@@Base+0x33c>
   341ac:	ldr	r2, [r6, #8]
   341b0:	sub	r5, r2, r1
   341b4:	str	r5, [r6, #8]
   341b8:	sub	r0, r0, r1
   341bc:	mov	r8, #0
   341c0:	cmp	r4, #0
   341c4:	str	r0, [r9]
   341c8:	beq	341ec <flatcc_emitter@@Base+0x33c>
   341cc:	ldm	r7, {r1, r2}
   341d0:	mov	r0, r5
   341d4:	bl	14e58 <memcpy@plt>
   341d8:	ldr	r0, [r7, #4]
   341dc:	add	r7, r7, #8
   341e0:	subs	r4, r4, #1
   341e4:	add	r5, r5, r0
   341e8:	bne	341cc <flatcc_emitter@@Base+0x31c>
   341ec:	mov	r0, r8
   341f0:	sub	sp, fp, #28
   341f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000341f8 <flatcc_emitter_copy_buffer@@Base>:
   341f8:	push	{r4, r5, r6, sl, fp, lr}
   341fc:	add	fp, sp, #16
   34200:	mov	r3, r2
   34204:	ldr	r2, [r0, #24]
   34208:	mov	r5, #0
   3420c:	cmp	r2, r3
   34210:	bhi	34298 <flatcc_emitter_copy_buffer@@Base+0xa0>
   34214:	mov	r4, r0
   34218:	ldr	r0, [r0]
   3421c:	cmp	r0, #0
   34220:	beq	34298 <flatcc_emitter_copy_buffer@@Base+0xa0>
   34224:	mov	r6, r1
   34228:	ldr	r1, [r4, #4]
   3422c:	cmp	r0, r1
   34230:	beq	342a0 <flatcc_emitter_copy_buffer@@Base+0xa8>
   34234:	ldr	r0, [r4, #12]
   34238:	ldr	r1, [r4, #8]
   3423c:	rsb	r5, r0, #2944	; 0xb80
   34240:	mov	r0, r6
   34244:	mov	r2, r5
   34248:	bl	14e58 <memcpy@plt>
   3424c:	ldm	r4, {r0, r1}
   34250:	add	r5, r6, r5
   34254:	ldr	r6, [r0, #2944]	; 0xb80
   34258:	cmp	r6, r1
   3425c:	beq	34284 <flatcc_emitter_copy_buffer@@Base+0x8c>
   34260:	mov	r0, r5
   34264:	mov	r1, r6
   34268:	mov	r2, #2944	; 0xb80
   3426c:	bl	14e58 <memcpy@plt>
   34270:	ldr	r6, [r6, #2944]	; 0xb80
   34274:	ldr	r0, [r4, #4]
   34278:	add	r5, r5, #2944	; 0xb80
   3427c:	cmp	r6, r0
   34280:	bne	34260 <flatcc_emitter_copy_buffer@@Base+0x68>
   34284:	ldr	r0, [r4, #20]
   34288:	mov	r1, r6
   3428c:	rsb	r2, r0, #2944	; 0xb80
   34290:	mov	r0, r5
   34294:	bl	14e58 <memcpy@plt>
   34298:	mov	r0, r5
   3429c:	pop	{r4, r5, r6, sl, fp, pc}
   342a0:	ldr	r1, [r4, #8]
   342a4:	mov	r0, r6
   342a8:	bl	14e58 <memcpy@plt>
   342ac:	mov	r0, r6
   342b0:	pop	{r4, r5, r6, sl, fp, pc}

000342b4 <flatcc_verify_error_string@@Base>:
   342b4:	cmp	r0, #36	; 0x24
   342b8:	ldrhi	r0, [pc, #24]	; 342d8 <flatcc_verify_error_string@@Base+0x24>
   342bc:	addhi	r0, pc, r0
   342c0:	bxhi	lr
   342c4:	ldr	r1, [pc, #8]	; 342d4 <flatcc_verify_error_string@@Base+0x20>
   342c8:	add	r1, pc, r1
   342cc:	ldr	r0, [r1, r0, lsl #2]
   342d0:	bx	lr
   342d4:	andeq	sl, r2, r0, lsl #22
   342d8:	andeq	r8, r1, sp, lsr #17

000342dc <flatcc_verify_field@@Base>:
   342dc:	push	{r4, sl, fp, lr}
   342e0:	add	fp, sp, #8
   342e4:	ldrh	r4, [r0, #22]
   342e8:	mov	ip, #4
   342ec:	mov	lr, #0
   342f0:	add	r1, ip, r1, lsl #1
   342f4:	uxth	ip, r1
   342f8:	cmp	ip, r4
   342fc:	bcs	34358 <flatcc_verify_field@@Base+0x7c>
   34300:	ldr	r4, [r0, #12]
   34304:	uxtah	r1, r4, r1
   34308:	ldrh	ip, [r1]
   3430c:	cmp	ip, #0
   34310:	beq	34358 <flatcc_verify_field@@Base+0x7c>
   34314:	add	r1, ip, r2
   34318:	ldrh	r2, [r0, #20]
   3431c:	mov	lr, #13
   34320:	cmp	r1, r2
   34324:	bhi	34358 <flatcc_verify_field@@Base+0x7c>
   34328:	ldr	r1, [r0]
   3432c:	mov	lr, #0
   34330:	add	r2, r1, ip
   34334:	ldr	r1, [r0, #16]
   34338:	add	r4, r2, r1
   3433c:	sub	r1, r3, #1
   34340:	tst	r4, r1
   34344:	beq	34358 <flatcc_verify_field@@Base+0x7c>
   34348:	ldr	r0, [r0, #16]
   3434c:	add	r0, r2, r0
   34350:	ands	lr, r0, r1
   34354:	movwne	lr, #12
   34358:	mov	r0, lr
   3435c:	pop	{r4, sl, fp, pc}

00034360 <flatcc_verify_string_field@@Base>:
   34360:	push	{fp, lr}
   34364:	mov	fp, sp
   34368:	mov	lr, r2
   3436c:	ldrh	r2, [r0, #22]
   34370:	mov	r3, #4
   34374:	add	r1, r3, r1, lsl #1
   34378:	uxth	r3, r1
   3437c:	cmp	r3, r2
   34380:	bcs	3441c <flatcc_verify_string_field@@Base+0xbc>
   34384:	ldr	r2, [r0, #12]
   34388:	uxtah	r1, r2, r1
   3438c:	ldrh	r1, [r1]
   34390:	cmp	r1, #0
   34394:	beq	3441c <flatcc_verify_string_field@@Base+0xbc>
   34398:	ldrh	r2, [r0, #20]
   3439c:	add	r3, r1, #4
   343a0:	mov	lr, #13
   343a4:	cmp	r3, r2
   343a8:	bhi	34414 <flatcc_verify_string_field@@Base+0xb4>
   343ac:	ldr	r2, [r0, #16]
   343b0:	mov	lr, #12
   343b4:	add	r3, r2, r1
   343b8:	tst	r3, #3
   343bc:	bne	34414 <flatcc_verify_string_field@@Base+0xb4>
   343c0:	cmp	r3, #0
   343c4:	moveq	lr, #0
   343c8:	moveq	r0, lr
   343cc:	popeq	{fp, pc}
   343d0:	ldr	ip, [r0]
   343d4:	mov	lr, #17
   343d8:	ldr	r1, [ip, r3]
   343dc:	add	r1, r1, r3
   343e0:	tst	r1, #3
   343e4:	bne	34414 <flatcc_verify_string_field@@Base+0xb4>
   343e8:	cmp	r1, r3
   343ec:	bls	34414 <flatcc_verify_string_field@@Base+0xb4>
   343f0:	ldr	r3, [r0, #4]
   343f4:	add	r0, r1, #4
   343f8:	cmp	r3, r0
   343fc:	ldrcs	r1, [ip, r1]
   34400:	subcs	r2, r3, r0
   34404:	movcs	lr, #8
   34408:	addcs	r3, r1, #1
   3440c:	cmpcs	r2, r3
   34410:	bcs	3442c <flatcc_verify_string_field@@Base+0xcc>
   34414:	mov	r0, lr
   34418:	pop	{fp, pc}
   3441c:	cmp	lr, #0
   34420:	movwne	lr, #4
   34424:	mov	r0, lr
   34428:	pop	{fp, pc}
   3442c:	add	r0, ip, r0
   34430:	ldrb	lr, [r0, r1]
   34434:	cmp	lr, #0
   34438:	movwne	lr, #7
   3443c:	mov	r0, lr
   34440:	pop	{fp, pc}

00034444 <flatcc_verify_vector_field@@Base>:
   34444:	push	{r4, r5, fp, lr}
   34448:	add	fp, sp, #8
   3444c:	mov	r5, r2
   34450:	ldrh	r2, [r0, #22]
   34454:	mov	r4, #4
   34458:	add	r1, r4, r1, lsl #1
   3445c:	uxth	r4, r1
   34460:	cmp	r4, r2
   34464:	bcs	3452c <flatcc_verify_vector_field@@Base+0xe8>
   34468:	ldr	r2, [r0, #12]
   3446c:	uxtah	r1, r2, r1
   34470:	ldrh	r1, [r1]
   34474:	cmp	r1, #0
   34478:	beq	3452c <flatcc_verify_vector_field@@Base+0xe8>
   3447c:	ldrh	r2, [r0, #20]
   34480:	add	r4, r1, #4
   34484:	mov	r5, #13
   34488:	cmp	r4, r2
   3448c:	bhi	34524 <flatcc_verify_vector_field@@Base+0xe0>
   34490:	ldr	r2, [r0, #16]
   34494:	mov	r5, #12
   34498:	add	r1, r2, r1
   3449c:	tst	r1, #3
   344a0:	bne	34524 <flatcc_verify_vector_field@@Base+0xe0>
   344a4:	cmp	r1, #0
   344a8:	moveq	r5, #0
   344ac:	moveq	r0, r5
   344b0:	popeq	{r4, r5, fp, pc}
   344b4:	ldr	ip, [r0]
   344b8:	ldr	r4, [fp, #8]
   344bc:	mov	r5, #16
   344c0:	ldr	r2, [ip, r1]
   344c4:	cmp	r4, #4
   344c8:	movls	r4, #4
   344cc:	add	lr, r2, r1
   344d0:	cmp	lr, r1
   344d4:	bls	34524 <flatcc_verify_vector_field@@Base+0xe0>
   344d8:	ldr	r0, [r0, #4]
   344dc:	add	r1, lr, #4
   344e0:	cmp	r1, r0
   344e4:	bhi	34524 <flatcc_verify_vector_field@@Base+0xe0>
   344e8:	sub	r2, r4, #1
   344ec:	orr	r2, r2, #3
   344f0:	tst	r1, r2
   344f4:	bne	34524 <flatcc_verify_vector_field@@Base+0xe0>
   344f8:	ldr	r2, [fp, #12]
   344fc:	ldr	r1, [ip, lr]
   34500:	mov	r5, #25
   34504:	cmp	r1, r2
   34508:	bhi	34524 <flatcc_verify_vector_field@@Base+0xe0>
   3450c:	sub	r0, r0, #4
   34510:	mul	r1, r1, r3
   34514:	mov	r5, #0
   34518:	sub	r0, r0, lr
   3451c:	cmp	r0, r1
   34520:	movwcc	r5, #26
   34524:	mov	r0, r5
   34528:	pop	{r4, r5, fp, pc}
   3452c:	cmp	r5, #0
   34530:	movwne	r5, #4
   34534:	mov	r0, r5
   34538:	pop	{r4, r5, fp, pc}

0003453c <flatcc_verify_string_vector_field@@Base>:
   3453c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   34540:	add	fp, sp, #24
   34544:	ldrh	r7, [r0, #22]
   34548:	mov	r3, #4
   3454c:	add	r1, r3, r1, lsl #1
   34550:	uxth	r3, r1
   34554:	cmp	r3, r7
   34558:	bcs	345a0 <flatcc_verify_string_vector_field@@Base+0x64>
   3455c:	ldr	r3, [r0, #12]
   34560:	uxtah	r1, r3, r1
   34564:	ldrh	r1, [r1]
   34568:	cmp	r1, #0
   3456c:	beq	345a0 <flatcc_verify_string_vector_field@@Base+0x64>
   34570:	ldrh	r3, [r0, #20]
   34574:	add	r7, r1, #4
   34578:	mov	r2, #13
   3457c:	cmp	r7, r3
   34580:	bhi	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   34584:	ldr	r4, [r0, #16]
   34588:	mov	r2, #12
   3458c:	add	r6, r4, r1
   34590:	tst	r6, #3
   34594:	beq	345b0 <flatcc_verify_string_vector_field@@Base+0x74>
   34598:	mov	r0, r2
   3459c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   345a0:	cmp	r2, #0
   345a4:	movwne	r2, #4
   345a8:	mov	r0, r2
   345ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   345b0:	mov	r2, #0
   345b4:	cmp	r6, #0
   345b8:	beq	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   345bc:	ldr	r5, [r0]
   345c0:	mov	r2, #16
   345c4:	ldr	r7, [r5, r6]
   345c8:	add	r3, r7, r6
   345cc:	cmp	r3, r6
   345d0:	bls	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   345d4:	ldr	lr, [r0, #4]
   345d8:	add	r0, r3, #4
   345dc:	cmp	r0, lr
   345e0:	bhi	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   345e4:	ands	r0, r0, #3
   345e8:	bne	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   345ec:	ldr	ip, [r5, r3]
   345f0:	mov	r2, #25
   345f4:	cmn	ip, #-1073741823	; 0xc0000001
   345f8:	bhi	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   345fc:	sub	r0, lr, #4
   34600:	mov	r2, #26
   34604:	sub	r0, r0, r3
   34608:	cmp	r0, ip, lsl #2
   3460c:	bcc	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   34610:	cmp	ip, #0
   34614:	mov	r2, #0
   34618:	beq	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   3461c:	sub	r0, lr, #8
   34620:	add	r9, r7, r4
   34624:	sub	r0, r0, r1
   34628:	sub	r0, r0, r7
   3462c:	sub	r8, r0, r4
   34630:	add	r0, r5, r9
   34634:	mov	r5, #0
   34638:	rsb	r4, r0, #0
   3463c:	sub	r0, r1, r4
   34640:	add	r3, r1, r9
   34644:	mov	r2, #17
   34648:	ldr	r6, [r0, #4]
   3464c:	add	r7, r3, r6
   34650:	add	r0, r7, #4
   34654:	tst	r0, #3
   34658:	bne	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   3465c:	add	r3, r3, #4
   34660:	cmp	r0, r3
   34664:	bls	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   34668:	add	r0, r7, #8
   3466c:	cmp	lr, r0
   34670:	bcc	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   34674:	add	r0, r1, r6
   34678:	sub	r2, r8, r6
   3467c:	sub	r0, r0, r4
   34680:	ldr	r0, [r0, #4]
   34684:	add	r3, r0, #1
   34688:	cmp	r2, r3
   3468c:	bcc	346c8 <flatcc_verify_string_vector_field@@Base+0x18c>
   34690:	add	r0, r6, r0
   34694:	add	r0, r1, r0
   34698:	sub	r0, r0, r4
   3469c:	ldrb	r0, [r0, #8]
   346a0:	cmp	r0, #0
   346a4:	bne	346d4 <flatcc_verify_string_vector_field@@Base+0x198>
   346a8:	add	r5, r5, #1
   346ac:	sub	r8, r8, #4
   346b0:	add	r9, r9, #4
   346b4:	sub	r4, r4, #4
   346b8:	mov	r2, #0
   346bc:	cmp	r5, ip
   346c0:	bcc	3463c <flatcc_verify_string_vector_field@@Base+0x100>
   346c4:	b	34598 <flatcc_verify_string_vector_field@@Base+0x5c>
   346c8:	mov	r2, #8
   346cc:	mov	r0, r2
   346d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   346d4:	mov	r2, #7
   346d8:	mov	r0, r2
   346dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000346e0 <flatcc_verify_table_field@@Base>:
   346e0:	push	{r4, r5, r6, sl, fp, lr}
   346e4:	add	fp, sp, #16
   346e8:	sub	sp, sp, #24
   346ec:	ldrh	r5, [r0, #22]
   346f0:	mov	r6, #4
   346f4:	add	r1, r6, r1, lsl #1
   346f8:	uxth	r6, r1
   346fc:	cmp	r6, r5
   34700:	bcs	34810 <flatcc_verify_table_field@@Base+0x130>
   34704:	ldr	r6, [r0, #12]
   34708:	uxtah	r1, r6, r1
   3470c:	ldrh	r1, [r1]
   34710:	cmp	r1, #0
   34714:	beq	34810 <flatcc_verify_table_field@@Base+0x130>
   34718:	ldrh	r6, [r0, #20]
   3471c:	add	r5, r1, #4
   34720:	mov	r2, #13
   34724:	cmp	r5, r6
   34728:	bhi	34818 <flatcc_verify_table_field@@Base+0x138>
   3472c:	ldr	r2, [r0, #16]
   34730:	add	r4, r2, r1
   34734:	mov	r2, #12
   34738:	tst	r4, #3
   3473c:	bne	34818 <flatcc_verify_table_field@@Base+0x138>
   34740:	cmp	r4, #0
   34744:	beq	34824 <flatcc_verify_table_field@@Base+0x144>
   34748:	ldm	r0, {r1, ip}
   3474c:	ldr	r2, [r0, #8]
   34750:	ldr	r0, [r1, r4]
   34754:	subs	r2, r2, #1
   34758:	str	r2, [sp, #8]
   3475c:	beq	3482c <flatcc_verify_table_field@@Base+0x14c>
   34760:	add	r0, r0, r4
   34764:	mov	r2, #15
   34768:	tst	r0, #3
   3476c:	bne	34818 <flatcc_verify_table_field@@Base+0x138>
   34770:	cmp	r0, r4
   34774:	bls	34818 <flatcc_verify_table_field@@Base+0x138>
   34778:	add	r6, r0, #4
   3477c:	cmp	r6, ip
   34780:	bhi	34818 <flatcc_verify_table_field@@Base+0x138>
   34784:	str	r0, [sp, #16]
   34788:	ldr	r2, [r1, r0]
   3478c:	sub	r5, r0, r2
   34790:	mov	r2, #29
   34794:	tst	r5, #-2147483647	; 0x80000001
   34798:	bne	34818 <flatcc_verify_table_field@@Base+0x138>
   3479c:	add	r4, r5, #2
   347a0:	mov	r2, #27
   347a4:	cmp	r4, ip
   347a8:	bhi	34818 <flatcc_verify_table_field@@Base+0x138>
   347ac:	mov	lr, r1
   347b0:	mov	r2, #30
   347b4:	ldrh	r6, [lr, r5]!
   347b8:	tst	r6, #1
   347bc:	strh	r6, [sp, #22]
   347c0:	bne	34818 <flatcc_verify_table_field@@Base+0x138>
   347c4:	add	r5, r5, r6
   347c8:	cmp	r5, ip
   347cc:	bhi	34818 <flatcc_verify_table_field@@Base+0x138>
   347d0:	mov	r2, #28
   347d4:	cmp	r6, #4
   347d8:	bcc	34818 <flatcc_verify_table_field@@Base+0x138>
   347dc:	add	r2, r1, r4
   347e0:	sub	r0, ip, r0
   347e4:	ldrh	r4, [r2]
   347e8:	mov	r2, #20
   347ec:	cmp	r0, r4
   347f0:	strh	r4, [sp, #20]
   347f4:	bcc	34818 <flatcc_verify_table_field@@Base+0x138>
   347f8:	mov	r0, sp
   347fc:	str	lr, [sp, #12]
   34800:	stm	sp, {r1, ip}
   34804:	blx	r3
   34808:	mov	r2, r0
   3480c:	b	34818 <flatcc_verify_table_field@@Base+0x138>
   34810:	cmp	r2, #0
   34814:	movwne	r2, #4
   34818:	mov	r0, r2
   3481c:	sub	sp, fp, #16
   34820:	pop	{r4, r5, r6, sl, fp, pc}
   34824:	mov	r2, #0
   34828:	b	34818 <flatcc_verify_table_field@@Base+0x138>
   3482c:	mov	r2, #3
   34830:	b	34818 <flatcc_verify_table_field@@Base+0x138>

00034834 <flatcc_verify_table_vector_field@@Base>:
   34834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34838:	add	fp, sp, #28
   3483c:	sub	sp, sp, #36	; 0x24
   34840:	ldrh	r7, [r0, #22]
   34844:	mov	r4, r3
   34848:	mov	r3, #4
   3484c:	add	r1, r3, r1, lsl #1
   34850:	uxth	r3, r1
   34854:	cmp	r3, r7
   34858:	bcs	34a2c <flatcc_verify_table_vector_field@@Base+0x1f8>
   3485c:	ldr	r3, [r0, #12]
   34860:	uxtah	r1, r3, r1
   34864:	ldrh	r1, [r1]
   34868:	cmp	r1, #0
   3486c:	beq	34a2c <flatcc_verify_table_vector_field@@Base+0x1f8>
   34870:	ldrh	r3, [r0, #20]
   34874:	add	r7, r1, #4
   34878:	mov	r2, #13
   3487c:	cmp	r7, r3
   34880:	bhi	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34884:	ldr	r3, [r0, #16]
   34888:	mov	r2, #12
   3488c:	add	r5, r3, r1
   34890:	tst	r5, #3
   34894:	bne	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34898:	mov	r2, #0
   3489c:	cmp	r5, #0
   348a0:	beq	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   348a4:	ldr	r7, [r0, #8]
   348a8:	cmp	r7, #1
   348ac:	blt	34a40 <flatcc_verify_table_vector_field@@Base+0x20c>
   348b0:	ldr	sl, [r0]
   348b4:	mov	r2, #16
   348b8:	ldr	ip, [sl, r5]
   348bc:	add	r6, ip, r5
   348c0:	cmp	r6, r5
   348c4:	bls	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   348c8:	ldr	lr, [r0, #4]
   348cc:	add	r0, r6, #4
   348d0:	cmp	r0, lr
   348d4:	bhi	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   348d8:	ands	r0, r0, #3
   348dc:	bne	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   348e0:	ldr	r9, [sl, r6]
   348e4:	mov	r2, #25
   348e8:	cmn	r9, #-1073741823	; 0xc0000001
   348ec:	bhi	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   348f0:	sub	r0, lr, #4
   348f4:	mov	r2, #26
   348f8:	sub	r6, r0, r6
   348fc:	cmp	r6, r9, lsl #2
   34900:	bcc	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34904:	cmp	r9, #0
   34908:	mov	r2, #0
   3490c:	beq	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34910:	sub	r0, r0, r1
   34914:	str	r9, [sp]
   34918:	sub	r0, r0, ip
   3491c:	ldr	r9, [sp]
   34920:	sub	r8, r0, r3
   34924:	add	r0, ip, r3
   34928:	add	r0, r0, r1
   3492c:	mov	r1, #0
   34930:	add	r5, r0, #4
   34934:	sub	r0, r7, #2
   34938:	str	r0, [sp, #4]
   3493c:	ldr	r0, [sp, #4]
   34940:	ldr	r2, [sl, r5]
   34944:	cmp	r0, #0
   34948:	str	r0, [sp, #20]
   3494c:	beq	34b00 <flatcc_verify_table_vector_field@@Base+0x2cc>
   34950:	add	r0, r5, r2
   34954:	str	r1, [sp, #8]
   34958:	add	ip, r0, #4
   3495c:	tst	r0, #3
   34960:	bne	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   34964:	cmp	r0, r5
   34968:	bls	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   3496c:	cmp	ip, lr
   34970:	bhi	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   34974:	str	r0, [sp, #28]
   34978:	add	r3, sl, r2
   3497c:	ldr	r7, [r3, r5]
   34980:	sub	r6, r2, r7
   34984:	add	r3, r5, r6
   34988:	tst	r3, #-2147483647	; 0x80000001
   3498c:	bne	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   34990:	add	r1, r3, #2
   34994:	cmp	r1, lr
   34998:	bhi	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   3499c:	add	r1, sl, r6
   349a0:	add	r1, r1, r5
   349a4:	ldrh	r6, [r1]
   349a8:	cmp	r6, #4
   349ac:	strh	r6, [sp, #34]	; 0x22
   349b0:	bcc	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   349b4:	ands	r1, r6, #1
   349b8:	bne	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   349bc:	add	r1, r2, r6
   349c0:	sub	r1, r1, r7
   349c4:	add	r1, r5, r1
   349c8:	cmp	r1, lr
   349cc:	bhi	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   349d0:	add	r3, sl, r3
   349d4:	sub	r2, r8, r2
   349d8:	ldrh	r1, [r3, #2]
   349dc:	cmp	r2, r1
   349e0:	strh	r1, [sp, #32]
   349e4:	bcc	34a48 <flatcc_verify_table_vector_field@@Base+0x214>
   349e8:	add	r0, sp, #12
   349ec:	str	sl, [sp, #12]
   349f0:	str	r3, [sp, #24]
   349f4:	mov	r6, lr
   349f8:	str	lr, [sp, #16]
   349fc:	blx	r4
   34a00:	cmp	r0, #0
   34a04:	bne	34b10 <flatcc_verify_table_vector_field@@Base+0x2dc>
   34a08:	ldr	r1, [sp, #8]
   34a0c:	sub	r8, r8, #4
   34a10:	add	r5, r5, #4
   34a14:	mov	r2, #0
   34a18:	mov	lr, r6
   34a1c:	add	r1, r1, #1
   34a20:	cmp	r1, r9
   34a24:	bcc	3493c <flatcc_verify_table_vector_field@@Base+0x108>
   34a28:	b	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34a2c:	cmp	r2, #0
   34a30:	movwne	r2, #4
   34a34:	mov	r0, r2
   34a38:	sub	sp, fp, #28
   34a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34a40:	mov	r2, #3
   34a44:	b	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34a48:	ldr	r1, [sp, #4]
   34a4c:	str	r1, [sp, #20]
   34a50:	mov	r2, #15
   34a54:	tst	r0, #3
   34a58:	bne	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34a5c:	cmp	r0, r5
   34a60:	bls	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34a64:	cmp	ip, lr
   34a68:	bhi	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34a6c:	str	r0, [sp, #28]
   34a70:	mov	r2, #29
   34a74:	ldr	r1, [sl, r0]
   34a78:	sub	r7, r0, r1
   34a7c:	tst	r7, #-2147483647	; 0x80000001
   34a80:	bne	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34a84:	add	r3, r7, #2
   34a88:	mov	r2, #27
   34a8c:	cmp	r3, lr
   34a90:	bhi	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34a94:	mov	r1, sl
   34a98:	mov	r2, #30
   34a9c:	ldrh	r6, [r1, r7]!
   34aa0:	tst	r6, #1
   34aa4:	strh	r6, [sp, #34]	; 0x22
   34aa8:	bne	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34aac:	add	r7, r7, r6
   34ab0:	cmp	r7, lr
   34ab4:	bhi	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34ab8:	mov	r2, #28
   34abc:	cmp	r6, #4
   34ac0:	bcc	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34ac4:	add	r2, sl, r3
   34ac8:	sub	r0, lr, r0
   34acc:	mov	r5, lr
   34ad0:	ldrh	r3, [r2]
   34ad4:	mov	r2, #20
   34ad8:	cmp	r0, r3
   34adc:	strh	r3, [sp, #32]
   34ae0:	bcc	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34ae4:	add	r0, sp, #12
   34ae8:	str	sl, [sp, #12]
   34aec:	str	r1, [sp, #24]
   34af0:	str	r5, [sp, #16]
   34af4:	blx	r4
   34af8:	mov	r2, r0
   34afc:	b	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34b00:	mov	r0, #0
   34b04:	mov	r2, #3
   34b08:	str	r0, [sp, #20]
   34b0c:	b	34a34 <flatcc_verify_table_vector_field@@Base+0x200>
   34b10:	ldr	r0, [sl, r5]
   34b14:	ldr	r1, [sp, #4]
   34b18:	mov	lr, r6
   34b1c:	add	r0, r0, r5
   34b20:	str	r1, [sp, #20]
   34b24:	add	ip, r0, #4
   34b28:	b	34a50 <flatcc_verify_table_vector_field@@Base+0x21c>

00034b2c <flatcc_verify_union_table@@Base>:
   34b2c:	push	{r4, r5, r6, sl, fp, lr}
   34b30:	add	fp, sp, #16
   34b34:	sub	sp, sp, #24
   34b38:	ldr	r5, [r0, #16]
   34b3c:	ldr	r3, [r0, #20]
   34b40:	ldr	ip, [r0]
   34b44:	ldr	r2, [r0, #4]
   34b48:	ldr	r0, [r0, #8]
   34b4c:	subs	r0, r0, #1
   34b50:	str	r0, [sp, #8]
   34b54:	moveq	r0, #3
   34b58:	subeq	sp, fp, #16
   34b5c:	popeq	{r4, r5, r6, sl, fp, pc}
   34b60:	add	r3, r3, r5
   34b64:	mov	r0, #15
   34b68:	tst	r3, #3
   34b6c:	bne	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34b70:	cmp	r3, r5
   34b74:	bls	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34b78:	add	r6, r3, #4
   34b7c:	cmp	r6, r2
   34b80:	bhi	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34b84:	str	r3, [sp, #16]
   34b88:	ldr	r0, [ip, r3]
   34b8c:	sub	r5, r3, r0
   34b90:	mov	r0, #29
   34b94:	tst	r5, #-2147483647	; 0x80000001
   34b98:	bne	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34b9c:	add	r4, r5, #2
   34ba0:	mov	r0, #27
   34ba4:	cmp	r4, r2
   34ba8:	bhi	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34bac:	mov	lr, ip
   34bb0:	mov	r0, #30
   34bb4:	ldrh	r6, [lr, r5]!
   34bb8:	tst	r6, #1
   34bbc:	strh	r6, [sp, #22]
   34bc0:	bne	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34bc4:	add	r5, r5, r6
   34bc8:	cmp	r5, r2
   34bcc:	bhi	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34bd0:	mov	r0, #28
   34bd4:	cmp	r6, #4
   34bd8:	bcc	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34bdc:	add	r0, ip, r4
   34be0:	sub	r3, r2, r3
   34be4:	ldrh	r4, [r0]
   34be8:	mov	r0, #20
   34bec:	cmp	r3, r4
   34bf0:	strh	r4, [sp, #20]
   34bf4:	bcc	34c0c <flatcc_verify_union_table@@Base+0xe0>
   34bf8:	mov	r0, sp
   34bfc:	str	ip, [sp]
   34c00:	str	lr, [sp, #12]
   34c04:	str	r2, [sp, #4]
   34c08:	blx	r1
   34c0c:	sub	sp, fp, #16
   34c10:	pop	{r4, r5, r6, sl, fp, pc}

00034c14 <flatcc_verify_union_struct@@Base>:
   34c14:	push	{fp, lr}
   34c18:	mov	fp, sp
   34c1c:	ldr	lr, [r0, #20]
   34c20:	mov	r3, r0
   34c24:	mov	r0, #18
   34c28:	cmp	lr, #0
   34c2c:	beq	34c68 <flatcc_verify_union_struct@@Base+0x54>
   34c30:	ldr	ip, [r3, #4]
   34c34:	ldr	r3, [r3, #16]
   34c38:	add	r3, r3, lr
   34c3c:	cmp	r3, ip
   34c40:	bhi	34c68 <flatcc_verify_union_struct@@Base+0x54>
   34c44:	adds	r1, r3, r1
   34c48:	mov	r0, #10
   34c4c:	bcs	34c68 <flatcc_verify_union_struct@@Base+0x54>
   34c50:	mov	r0, #9
   34c54:	cmp	r1, ip
   34c58:	pophi	{fp, pc}
   34c5c:	sub	r0, r2, #1
   34c60:	ands	r0, r3, r0
   34c64:	movwne	r0, #11
   34c68:	pop	{fp, pc}

00034c6c <flatcc_verify_union_string@@Base>:
   34c6c:	mov	r1, r0
   34c70:	ldr	r3, [r0, #16]
   34c74:	ldr	r0, [r0, #20]
   34c78:	add	r2, r0, r3
   34c7c:	mov	r0, #17
   34c80:	tst	r2, #3
   34c84:	bne	34cd8 <flatcc_verify_union_string@@Base+0x6c>
   34c88:	cmp	r2, r3
   34c8c:	bls	34cd8 <flatcc_verify_union_string@@Base+0x6c>
   34c90:	ldr	r3, [r1, #4]
   34c94:	add	ip, r2, #4
   34c98:	cmp	r3, ip
   34c9c:	bcc	34cd8 <flatcc_verify_union_string@@Base+0x6c>
   34ca0:	push	{fp, lr}
   34ca4:	mov	fp, sp
   34ca8:	ldr	r1, [r1]
   34cac:	sub	lr, r3, ip
   34cb0:	mov	r0, #8
   34cb4:	ldr	r2, [r1, r2]
   34cb8:	add	r3, r2, #1
   34cbc:	cmp	lr, r3
   34cc0:	pop	{fp, lr}
   34cc4:	bxcc	lr
   34cc8:	add	r0, r1, ip
   34ccc:	ldrb	r0, [r0, r2]
   34cd0:	cmp	r0, #0
   34cd4:	movwne	r0, #7
   34cd8:	bx	lr

00034cdc <flatcc_verify_buffer_header@@Base>:
   34cdc:	push	{r4, sl, fp, lr}
   34ce0:	add	fp, sp, #8
   34ce4:	sub	sp, sp, #8
   34ce8:	mov	r4, r0
   34cec:	mov	r0, #5
   34cf0:	tst	r4, #3
   34cf4:	bne	34d48 <flatcc_verify_buffer_header@@Base+0x6c>
   34cf8:	mov	r0, #6
   34cfc:	cmn	r1, #9
   34d00:	bhi	34d48 <flatcc_verify_buffer_header@@Base+0x6c>
   34d04:	mov	r0, #1
   34d08:	cmp	r1, #8
   34d0c:	bcc	34d48 <flatcc_verify_buffer_header@@Base+0x6c>
   34d10:	cmp	r2, #0
   34d14:	beq	34d50 <flatcc_verify_buffer_header@@Base+0x74>
   34d18:	mov	r0, #0
   34d1c:	mov	r1, r2
   34d20:	mov	r2, #4
   34d24:	str	r0, [sp, #4]
   34d28:	add	r0, sp, #4
   34d2c:	bl	14ef4 <strncpy@plt>
   34d30:	ldr	r1, [sp, #4]
   34d34:	cmp	r1, #0
   34d38:	ldrne	r2, [r4, #4]
   34d3c:	movne	r0, #2
   34d40:	cmpne	r2, r1
   34d44:	moveq	r0, #0
   34d48:	sub	sp, fp, #8
   34d4c:	pop	{r4, sl, fp, pc}
   34d50:	mov	r0, #0
   34d54:	sub	sp, fp, #8
   34d58:	pop	{r4, sl, fp, pc}

00034d5c <flatcc_verify_typed_buffer_header@@Base>:
   34d5c:	mov	r3, r0
   34d60:	mov	r0, #5
   34d64:	tst	r3, #3
   34d68:	bne	34d9c <flatcc_verify_typed_buffer_header@@Base+0x40>
   34d6c:	mov	r0, #6
   34d70:	cmn	r1, #9
   34d74:	bhi	34d9c <flatcc_verify_typed_buffer_header@@Base+0x40>
   34d78:	mov	r0, #1
   34d7c:	cmp	r1, #8
   34d80:	bxcc	lr
   34d84:	cmp	r2, #0
   34d88:	beq	34da0 <flatcc_verify_typed_buffer_header@@Base+0x44>
   34d8c:	ldr	r1, [r3, #4]
   34d90:	mov	r0, #2
   34d94:	cmp	r1, r2
   34d98:	moveq	r0, #0
   34d9c:	bx	lr
   34da0:	mov	r0, #0
   34da4:	bx	lr

00034da8 <flatcc_verify_struct_as_root@@Base>:
   34da8:	push	{r4, r5, r6, r7, fp, lr}
   34dac:	add	fp, sp, #16
   34db0:	sub	sp, sp, #8
   34db4:	mov	r5, r0
   34db8:	mov	r0, #5
   34dbc:	tst	r5, #3
   34dc0:	bne	34e58 <flatcc_verify_struct_as_root@@Base+0xb0>
   34dc4:	mov	r4, r1
   34dc8:	mov	r0, #6
   34dcc:	cmn	r1, #9
   34dd0:	bhi	34e58 <flatcc_verify_struct_as_root@@Base+0xb0>
   34dd4:	mov	r0, #1
   34dd8:	cmp	r4, #8
   34ddc:	bcc	34e58 <flatcc_verify_struct_as_root@@Base+0xb0>
   34de0:	mov	r6, r3
   34de4:	mov	r7, r2
   34de8:	cmp	r2, #0
   34dec:	beq	34e1c <flatcc_verify_struct_as_root@@Base+0x74>
   34df0:	mov	r0, #0
   34df4:	mov	r1, r7
   34df8:	mov	r2, #4
   34dfc:	str	r0, [sp]
   34e00:	mov	r0, sp
   34e04:	bl	14ef4 <strncpy@plt>
   34e08:	ldr	r0, [sp]
   34e0c:	cmp	r0, #0
   34e10:	ldrne	r1, [r5, #4]
   34e14:	cmpne	r1, r0
   34e18:	bne	34e60 <flatcc_verify_struct_as_root@@Base+0xb8>
   34e1c:	ldr	r1, [r5]
   34e20:	mov	r0, #18
   34e24:	sub	r2, r1, #1
   34e28:	cmp	r2, r4
   34e2c:	bcs	34e58 <flatcc_verify_struct_as_root@@Base+0xb0>
   34e30:	adds	r2, r1, r6
   34e34:	mov	r0, #10
   34e38:	bcs	34e58 <flatcc_verify_struct_as_root@@Base+0xb0>
   34e3c:	mov	r0, #9
   34e40:	cmp	r2, r4
   34e44:	bhi	34e58 <flatcc_verify_struct_as_root@@Base+0xb0>
   34e48:	ldr	r0, [fp, #8]
   34e4c:	sub	r0, r0, #1
   34e50:	ands	r0, r1, r0
   34e54:	movwne	r0, #11
   34e58:	sub	sp, fp, #16
   34e5c:	pop	{r4, r5, r6, r7, fp, pc}
   34e60:	mov	r0, #0
   34e64:	mov	r1, r7
   34e68:	mov	r2, #4
   34e6c:	str	r0, [sp, #4]
   34e70:	add	r0, sp, #4
   34e74:	bl	14ef4 <strncpy@plt>
   34e78:	ldr	r1, [sp, #4]
   34e7c:	ldr	r0, [r5, #4]
   34e80:	subs	r0, r0, r1
   34e84:	movwne	r0, #2
   34e88:	cmp	r1, #0
   34e8c:	moveq	r0, r1
   34e90:	sub	sp, fp, #16
   34e94:	pop	{r4, r5, r6, r7, fp, pc}

00034e98 <flatcc_verify_struct_as_typed_root@@Base>:
   34e98:	push	{fp, lr}
   34e9c:	mov	fp, sp
   34ea0:	mov	ip, r0
   34ea4:	mov	r0, #5
   34ea8:	tst	ip, #3
   34eac:	bne	34f1c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34eb0:	mov	r0, #6
   34eb4:	cmn	r1, #9
   34eb8:	bhi	34f1c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34ebc:	mov	r0, #1
   34ec0:	cmp	r1, #8
   34ec4:	bcc	34f1c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34ec8:	cmp	r2, #0
   34ecc:	beq	34ee0 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   34ed0:	ldr	lr, [ip, #4]
   34ed4:	mov	r0, #2
   34ed8:	cmp	lr, r2
   34edc:	bne	34f1c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34ee0:	ldr	ip, [ip]
   34ee4:	mov	r0, #18
   34ee8:	sub	r2, ip, #1
   34eec:	cmp	r2, r1
   34ef0:	bcs	34f1c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34ef4:	adds	r3, ip, r3
   34ef8:	mov	r0, #10
   34efc:	bcs	34f1c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   34f00:	mov	r0, #9
   34f04:	cmp	r3, r1
   34f08:	pophi	{fp, pc}
   34f0c:	ldr	r0, [fp, #8]
   34f10:	sub	r0, r0, #1
   34f14:	ands	r0, ip, r0
   34f18:	movwne	r0, #11
   34f1c:	pop	{fp, pc}

00034f20 <flatcc_verify_table_as_root@@Base>:
   34f20:	push	{r4, r5, r6, r7, fp, lr}
   34f24:	add	fp, sp, #16
   34f28:	sub	sp, sp, #24
   34f2c:	mov	r4, r0
   34f30:	mov	r0, #5
   34f34:	tst	r4, #3
   34f38:	bne	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34f3c:	mov	r6, r1
   34f40:	mov	r0, #6
   34f44:	cmn	r1, #9
   34f48:	bhi	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34f4c:	mov	r0, #1
   34f50:	cmp	r6, #8
   34f54:	bcc	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34f58:	mov	r5, r3
   34f5c:	mov	r7, r2
   34f60:	cmp	r2, #0
   34f64:	beq	34f94 <flatcc_verify_table_as_root@@Base+0x74>
   34f68:	mov	r0, #0
   34f6c:	mov	r1, r7
   34f70:	mov	r2, #4
   34f74:	str	r0, [sp]
   34f78:	mov	r0, sp
   34f7c:	bl	14ef4 <strncpy@plt>
   34f80:	ldr	r0, [sp]
   34f84:	cmp	r0, #0
   34f88:	ldrne	r1, [r4, #4]
   34f8c:	cmpne	r1, r0
   34f90:	bne	3504c <flatcc_verify_table_as_root@@Base+0x12c>
   34f94:	ldr	r1, [r4]
   34f98:	mov	r0, #99	; 0x63
   34f9c:	str	r0, [sp, #8]
   34fa0:	mov	r0, #15
   34fa4:	tst	r1, #3
   34fa8:	bne	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34fac:	cmp	r1, #0
   34fb0:	beq	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34fb4:	add	r2, r1, #4
   34fb8:	cmp	r2, r6
   34fbc:	bhi	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34fc0:	str	r1, [sp, #16]
   34fc4:	ldr	r0, [r4, r1]
   34fc8:	sub	r7, r1, r0
   34fcc:	mov	r0, #29
   34fd0:	tst	r7, #-2147483647	; 0x80000001
   34fd4:	bne	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34fd8:	add	r3, r7, #2
   34fdc:	mov	r0, #27
   34fe0:	cmp	r3, r6
   34fe4:	bhi	35044 <flatcc_verify_table_as_root@@Base+0x124>
   34fe8:	mov	ip, r4
   34fec:	mov	r0, #30
   34ff0:	ldrh	r2, [ip, r7]!
   34ff4:	tst	r2, #1
   34ff8:	strh	r2, [sp, #22]
   34ffc:	bne	35044 <flatcc_verify_table_as_root@@Base+0x124>
   35000:	add	r7, r7, r2
   35004:	cmp	r7, r6
   35008:	bhi	35044 <flatcc_verify_table_as_root@@Base+0x124>
   3500c:	mov	r0, #28
   35010:	cmp	r2, #4
   35014:	bcc	35044 <flatcc_verify_table_as_root@@Base+0x124>
   35018:	add	r0, r4, r3
   3501c:	sub	r1, r6, r1
   35020:	ldrh	r2, [r0]
   35024:	mov	r0, #20
   35028:	cmp	r1, r2
   3502c:	strh	r2, [sp, #20]
   35030:	bcc	35044 <flatcc_verify_table_as_root@@Base+0x124>
   35034:	mov	r0, sp
   35038:	str	ip, [sp, #12]
   3503c:	stm	sp, {r4, r6}
   35040:	blx	r5
   35044:	sub	sp, fp, #16
   35048:	pop	{r4, r5, r6, r7, fp, pc}
   3504c:	mov	r0, #0
   35050:	mov	r1, r7
   35054:	mov	r2, #4
   35058:	str	r0, [sp]
   3505c:	mov	r0, sp
   35060:	bl	14ef4 <strncpy@plt>
   35064:	ldr	r1, [sp]
   35068:	ldr	r0, [r4, #4]
   3506c:	subs	r0, r0, r1
   35070:	movwne	r0, #2
   35074:	cmp	r1, #0
   35078:	moveq	r0, r1
   3507c:	sub	sp, fp, #16
   35080:	pop	{r4, r5, r6, r7, fp, pc}

00035084 <flatcc_verify_table_as_typed_root@@Base>:
   35084:	push	{r4, r5, r6, sl, fp, lr}
   35088:	add	fp, sp, #16
   3508c:	sub	sp, sp, #24
   35090:	mov	ip, #5
   35094:	tst	r0, #3
   35098:	bne	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3509c:	mov	ip, #6
   350a0:	cmn	r1, #9
   350a4:	bhi	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   350a8:	mov	ip, #1
   350ac:	cmp	r1, #8
   350b0:	bcc	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   350b4:	cmp	r2, #0
   350b8:	beq	350cc <flatcc_verify_table_as_typed_root@@Base+0x48>
   350bc:	ldr	r6, [r0, #4]
   350c0:	mov	ip, #2
   350c4:	cmp	r6, r2
   350c8:	bne	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   350cc:	ldr	r2, [r0]
   350d0:	mov	r6, #99	; 0x63
   350d4:	mov	ip, #15
   350d8:	str	r6, [sp, #8]
   350dc:	tst	r2, #3
   350e0:	bne	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   350e4:	cmp	r2, #0
   350e8:	beq	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   350ec:	add	r6, r2, #4
   350f0:	cmp	r6, r1
   350f4:	bhi	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   350f8:	str	r2, [sp, #16]
   350fc:	mov	ip, #29
   35100:	ldr	r6, [r0, r2]
   35104:	sub	r5, r2, r6
   35108:	tst	r5, #-2147483647	; 0x80000001
   3510c:	bne	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35110:	add	r4, r5, #2
   35114:	mov	ip, #27
   35118:	cmp	r4, r1
   3511c:	bhi	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35120:	mov	lr, r0
   35124:	mov	ip, #30
   35128:	ldrh	r6, [lr, r5]!
   3512c:	tst	r6, #1
   35130:	strh	r6, [sp, #22]
   35134:	bne	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35138:	add	r5, r5, r6
   3513c:	cmp	r5, r1
   35140:	bhi	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35144:	mov	ip, #28
   35148:	cmp	r6, #4
   3514c:	bcc	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35150:	add	r6, r0, r4
   35154:	sub	r2, r1, r2
   35158:	mov	ip, #20
   3515c:	ldrh	r4, [r6]
   35160:	cmp	r2, r4
   35164:	strh	r4, [sp, #20]
   35168:	bcc	35180 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3516c:	str	lr, [sp, #12]
   35170:	stm	sp, {r0, r1}
   35174:	mov	r0, sp
   35178:	blx	r3
   3517c:	mov	ip, r0
   35180:	mov	r0, ip
   35184:	sub	sp, fp, #16
   35188:	pop	{r4, r5, r6, sl, fp, pc}

0003518c <flatcc_verify_struct_as_nested_root@@Base>:
   3518c:	push	{r4, r5, r6, sl, fp, lr}
   35190:	add	fp, sp, #16
   35194:	sub	sp, sp, #8
   35198:	ldrh	r5, [r0, #22]
   3519c:	mov	r6, #4
   351a0:	ldr	lr, [fp, #12]
   351a4:	add	r1, r6, r1, lsl #1
   351a8:	uxth	r4, r1
   351ac:	cmp	r4, r5
   351b0:	bcs	35234 <flatcc_verify_struct_as_nested_root@@Base+0xa8>
   351b4:	ldr	ip, [r0, #12]
   351b8:	ldrh	r6, [ip, r4]!
   351bc:	cmp	r6, #0
   351c0:	beq	35234 <flatcc_verify_struct_as_nested_root@@Base+0xa8>
   351c4:	ldrh	r1, [r0, #20]
   351c8:	add	r4, r6, #4
   351cc:	cmp	r4, r1
   351d0:	bhi	3524c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   351d4:	ldr	r1, [r0, #16]
   351d8:	add	r5, r1, r6
   351dc:	tst	r5, #3
   351e0:	bne	3524c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   351e4:	cmp	r5, #0
   351e8:	beq	352f8 <flatcc_verify_struct_as_nested_root@@Base+0x16c>
   351ec:	ldr	r1, [r0]
   351f0:	ldr	r4, [r1, r5]
   351f4:	add	r4, r4, r5
   351f8:	cmp	r4, r5
   351fc:	bls	3524c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   35200:	ldr	r5, [r0, #4]
   35204:	add	r6, r4, #4
   35208:	cmp	r6, r5
   3520c:	bhi	3524c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   35210:	ands	r6, r6, #3
   35214:	bne	3524c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   35218:	ldr	r1, [r1, r4]
   3521c:	sub	r5, r5, #4
   35220:	sub	r5, r5, r4
   35224:	mul	r1, r1, lr
   35228:	cmp	r5, r1
   3522c:	bcc	3524c <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   35230:	b	352f8 <flatcc_verify_struct_as_nested_root@@Base+0x16c>
   35234:	cmp	r2, #0
   35238:	beq	352e4 <flatcc_verify_struct_as_nested_root@@Base+0x158>
   3523c:	cmp	r4, r5
   35240:	bcs	352d8 <flatcc_verify_struct_as_nested_root@@Base+0x14c>
   35244:	ldr	r3, [r0, #12]
   35248:	uxtah	ip, r3, r1
   3524c:	ldrh	r1, [ip]
   35250:	cmp	r1, #0
   35254:	beq	352d8 <flatcc_verify_struct_as_nested_root@@Base+0x14c>
   35258:	ldrh	r3, [r0, #20]
   3525c:	add	r6, r1, #4
   35260:	mov	r2, #13
   35264:	cmp	r6, r3
   35268:	bhi	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   3526c:	ldr	r2, [r0, #16]
   35270:	add	r6, r2, r1
   35274:	mov	r2, #12
   35278:	tst	r6, #3
   3527c:	bne	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   35280:	cmp	r6, #0
   35284:	beq	3534c <flatcc_verify_struct_as_nested_root@@Base+0x1c0>
   35288:	ldr	r1, [r0]
   3528c:	ldr	r2, [r1, r6]
   35290:	add	r3, r2, r6
   35294:	mov	r2, #16
   35298:	cmp	r3, r6
   3529c:	bls	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   352a0:	ldr	r0, [r0, #4]
   352a4:	add	r6, r3, #4
   352a8:	cmp	r6, r0
   352ac:	bhi	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   352b0:	ands	r6, r6, #3
   352b4:	bne	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   352b8:	ldr	r1, [r1, r3]
   352bc:	sub	r0, r0, #4
   352c0:	mov	r2, #0
   352c4:	sub	r0, r0, r3
   352c8:	mul	r1, r1, lr
   352cc:	cmp	r0, r1
   352d0:	movwcc	r2, #26
   352d4:	b	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   352d8:	cmp	r2, #0
   352dc:	movwne	r2, #4
   352e0:	b	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   352e4:	mov	r2, #0
   352e8:	cmp	r4, r5
   352ec:	bcs	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   352f0:	ldr	r2, [r0, #12]
   352f4:	uxtah	ip, r2, r1
   352f8:	ldrh	r1, [ip]
   352fc:	mov	r2, #0
   35300:	cmp	r1, #0
   35304:	ldrne	r6, [r0]
   35308:	ldrne	r0, [r0, #16]
   3530c:	addne	r0, r6, r0
   35310:	addsne	r0, r0, r1
   35314:	bne	35324 <flatcc_verify_struct_as_nested_root@@Base+0x198>
   35318:	mov	r0, r2
   3531c:	sub	sp, fp, #16
   35320:	pop	{r4, r5, r6, sl, fp, pc}
   35324:	ldr	r2, [r0]
   35328:	ldr	ip, [fp, #8]
   3532c:	ldr	r1, [r2, r0]!
   35330:	str	lr, [sp]
   35334:	add	r0, r2, #4
   35338:	mov	r2, r3
   3533c:	mov	r3, ip
   35340:	bl	34da8 <flatcc_verify_struct_as_root@@Base>
   35344:	sub	sp, fp, #16
   35348:	pop	{r4, r5, r6, sl, fp, pc}
   3534c:	mov	r2, #0
   35350:	b	35318 <flatcc_verify_struct_as_nested_root@@Base+0x18c>

00035354 <flatcc_verify_table_as_nested_root@@Base>:
   35354:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   35358:	add	fp, sp, #24
   3535c:	sub	sp, sp, #24
   35360:	mov	r4, r0
   35364:	mov	r0, #4
   35368:	ldr	ip, [fp, #8]
   3536c:	mov	r5, r3
   35370:	ldrh	r6, [r4, #22]
   35374:	add	r3, r0, r1, lsl #1
   35378:	uxth	r7, r3
   3537c:	cmp	r7, r6
   35380:	bcs	35404 <flatcc_verify_table_as_nested_root@@Base+0xb0>
   35384:	ldr	r1, [r4, #12]
   35388:	ldrh	r0, [r1, r7]!
   3538c:	cmp	r0, #0
   35390:	beq	35404 <flatcc_verify_table_as_nested_root@@Base+0xb0>
   35394:	ldrh	r3, [r4, #20]
   35398:	add	r7, r0, #4
   3539c:	cmp	r7, r3
   353a0:	bhi	3541c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   353a4:	ldr	r3, [r4, #16]
   353a8:	add	r0, r3, r0
   353ac:	tst	r0, #3
   353b0:	bne	3541c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   353b4:	cmp	r0, #0
   353b8:	beq	354c8 <flatcc_verify_table_as_nested_root@@Base+0x174>
   353bc:	ldr	r3, [r4]
   353c0:	ldr	r7, [r3, r0]
   353c4:	add	r7, r7, r0
   353c8:	cmp	r7, r0
   353cc:	bls	3541c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   353d0:	ldr	r0, [r4, #4]
   353d4:	add	r6, r7, #4
   353d8:	cmp	r6, r0
   353dc:	bhi	3541c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   353e0:	ands	r6, r6, #3
   353e4:	bne	3541c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   353e8:	ldr	r3, [r3, r7]
   353ec:	sub	r0, r0, #4
   353f0:	sub	r0, r0, r7
   353f4:	mul	r3, r3, ip
   353f8:	cmp	r0, r3
   353fc:	bcc	3541c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35400:	b	354c8 <flatcc_verify_table_as_nested_root@@Base+0x174>
   35404:	cmp	r2, #0
   35408:	beq	354b4 <flatcc_verify_table_as_nested_root@@Base+0x160>
   3540c:	cmp	r7, r6
   35410:	bcs	354a8 <flatcc_verify_table_as_nested_root@@Base+0x154>
   35414:	ldr	r0, [r4, #12]
   35418:	uxtah	r1, r0, r3
   3541c:	ldrh	r0, [r1]
   35420:	cmp	r0, #0
   35424:	beq	354a8 <flatcc_verify_table_as_nested_root@@Base+0x154>
   35428:	ldrh	r1, [r4, #20]
   3542c:	add	r3, r0, #4
   35430:	mov	r2, #13
   35434:	cmp	r3, r1
   35438:	bhi	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3543c:	ldr	r1, [r4, #16]
   35440:	mov	r2, #12
   35444:	add	r0, r1, r0
   35448:	tst	r0, #3
   3544c:	bne	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35450:	cmp	r0, #0
   35454:	beq	3561c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35458:	ldr	r1, [r4]
   3545c:	ldr	r2, [r1, r0]
   35460:	add	r3, r2, r0
   35464:	mov	r2, #16
   35468:	cmp	r3, r0
   3546c:	bls	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35470:	ldr	r0, [r4, #4]
   35474:	add	r7, r3, #4
   35478:	cmp	r7, r0
   3547c:	bhi	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35480:	ands	r7, r7, #3
   35484:	bne	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35488:	ldr	r1, [r1, r3]
   3548c:	sub	r0, r0, #4
   35490:	mov	r2, #0
   35494:	sub	r0, r0, r3
   35498:	mul	r1, r1, ip
   3549c:	cmp	r0, r1
   354a0:	movwcc	r2, #26
   354a4:	b	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   354a8:	cmp	r2, #0
   354ac:	movwne	r2, #4
   354b0:	b	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   354b4:	mov	r2, #0
   354b8:	cmp	r7, r6
   354bc:	bcs	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   354c0:	ldr	r0, [r4, #12]
   354c4:	uxtah	r1, r0, r3
   354c8:	ldrh	r0, [r1]
   354cc:	mov	r2, #0
   354d0:	cmp	r0, #0
   354d4:	ldrne	r1, [r4]
   354d8:	ldrne	r3, [r4, #16]
   354dc:	addne	r1, r1, r3
   354e0:	addsne	r0, r1, r0
   354e4:	bne	354f4 <flatcc_verify_table_as_nested_root@@Base+0x1a0>
   354e8:	mov	r0, r2
   354ec:	sub	sp, fp, #24
   354f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   354f4:	ldr	r6, [r0]
   354f8:	mov	r2, #5
   354fc:	ldr	r8, [r6, r0]!
   35500:	add	r7, r6, #4
   35504:	tst	r7, #3
   35508:	bne	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3550c:	mov	r2, #6
   35510:	cmn	r8, #9
   35514:	bhi	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35518:	mov	r2, #1
   3551c:	cmp	r8, #8
   35520:	bcc	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35524:	cmp	r5, #0
   35528:	beq	35558 <flatcc_verify_table_as_nested_root@@Base+0x204>
   3552c:	mov	r0, #0
   35530:	mov	r1, r5
   35534:	mov	r2, #4
   35538:	str	r0, [sp]
   3553c:	mov	r0, sp
   35540:	bl	14ef4 <strncpy@plt>
   35544:	ldr	r0, [sp]
   35548:	cmp	r0, #0
   3554c:	ldrne	r1, [r6, #8]
   35550:	cmpne	r1, r0
   35554:	bne	35624 <flatcc_verify_table_as_nested_root@@Base+0x2d0>
   35558:	ldr	r1, [r4, #8]
   3555c:	ldr	r0, [r7]
   35560:	subs	r1, r1, #1
   35564:	str	r1, [sp, #8]
   35568:	beq	3565c <flatcc_verify_table_as_nested_root@@Base+0x308>
   3556c:	mov	r2, #15
   35570:	tst	r0, #3
   35574:	bne	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35578:	cmp	r0, #0
   3557c:	beq	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35580:	add	r1, r0, #4
   35584:	cmp	r1, r8
   35588:	bhi	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3558c:	str	r0, [sp, #16]
   35590:	mov	r2, #29
   35594:	ldr	r1, [r7, r0]
   35598:	sub	r6, r0, r1
   3559c:	tst	r6, #-2147483647	; 0x80000001
   355a0:	bne	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   355a4:	add	r3, r6, #2
   355a8:	mov	r2, #27
   355ac:	cmp	r3, r8
   355b0:	bhi	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   355b4:	mov	r1, r7
   355b8:	mov	r2, #30
   355bc:	ldrh	r5, [r1, r6]!
   355c0:	tst	r5, #1
   355c4:	strh	r5, [sp, #22]
   355c8:	bne	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   355cc:	add	r6, r6, r5
   355d0:	cmp	r6, r8
   355d4:	bhi	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   355d8:	mov	r2, #28
   355dc:	cmp	r5, #4
   355e0:	bcc	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   355e4:	add	r2, r7, r3
   355e8:	sub	r0, r8, r0
   355ec:	ldrh	r3, [r2]
   355f0:	mov	r2, #20
   355f4:	cmp	r0, r3
   355f8:	strh	r3, [sp, #20]
   355fc:	bcc	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35600:	ldr	r2, [fp, #12]
   35604:	mov	r0, sp
   35608:	str	r1, [sp, #12]
   3560c:	stm	sp, {r7, r8}
   35610:	blx	r2
   35614:	mov	r2, r0
   35618:	b	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3561c:	mov	r2, #0
   35620:	b	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>
   35624:	mov	r0, #0
   35628:	mov	r1, r5
   3562c:	mov	r2, #4
   35630:	str	r0, [sp]
   35634:	mov	r0, sp
   35638:	bl	14ef4 <strncpy@plt>
   3563c:	ldr	r1, [sp]
   35640:	ldr	r0, [r6, #8]
   35644:	subs	r0, r0, r1
   35648:	movwne	r0, #2
   3564c:	cmp	r1, #0
   35650:	moveq	r0, r1
   35654:	sub	sp, fp, #24
   35658:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3565c:	mov	r2, #3
   35660:	b	354e8 <flatcc_verify_table_as_nested_root@@Base+0x194>

00035664 <flatcc_verify_union_field@@Base>:
   35664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35668:	add	fp, sp, #28
   3566c:	sub	sp, sp, #28
   35670:	ldrh	r4, [r0, #22]
   35674:	mov	r7, #2
   35678:	lsl	r5, r1, #1
   3567c:	add	r7, r7, r1, lsl #1
   35680:	uxth	r6, r7
   35684:	cmp	r6, r4
   35688:	bcs	3577c <flatcc_verify_union_field@@Base+0x118>
   3568c:	ldr	r6, [r0, #12]
   35690:	uxtah	r1, r6, r7
   35694:	ldrh	ip, [r1]
   35698:	cmp	ip, #0
   3569c:	beq	3577c <flatcc_verify_union_field@@Base+0x118>
   356a0:	ldrh	r7, [r0, #20]
   356a4:	mov	r1, #13
   356a8:	cmp	ip, r7
   356ac:	bcs	357b0 <flatcc_verify_union_field@@Base+0x14c>
   356b0:	add	r7, r5, #4
   356b4:	ldr	lr, [r0]
   356b8:	ldr	r9, [r0, #16]
   356bc:	mov	r1, #1
   356c0:	uxth	sl, r7
   356c4:	cmp	sl, r4
   356c8:	uxtahcc	r1, r6, r7
   356cc:	ldrhcc	r1, [r1]
   356d0:	add	r8, lr, r9
   356d4:	ldrb	r5, [r8, ip]
   356d8:	clzcc	r1, r1
   356dc:	lsrcc	r1, r1, #5
   356e0:	cmp	r1, #0
   356e4:	moveq	r1, #24
   356e8:	cmpeq	r5, #0
   356ec:	beq	357b0 <flatcc_verify_union_field@@Base+0x14c>
   356f0:	mov	r1, #0
   356f4:	cmp	r5, #0
   356f8:	beq	357b0 <flatcc_verify_union_field@@Base+0x14c>
   356fc:	cmp	sl, r4
   35700:	bcs	357bc <flatcc_verify_union_field@@Base+0x158>
   35704:	uxtah	r1, r6, r7
   35708:	ldrh	r4, [r1]
   3570c:	cmp	r4, #0
   35710:	beq	357bc <flatcc_verify_union_field@@Base+0x158>
   35714:	ldrh	r1, [r0, #20]
   35718:	add	r2, r4, #4
   3571c:	cmp	r2, r1
   35720:	mov	r1, #13
   35724:	bhi	357b0 <flatcc_verify_union_field@@Base+0x14c>
   35728:	add	r2, r9, r4
   3572c:	mov	r1, #12
   35730:	tst	r2, #3
   35734:	bne	357b0 <flatcc_verify_union_field@@Base+0x14c>
   35738:	cmp	r2, #0
   3573c:	mov	r1, #0
   35740:	beq	357b0 <flatcc_verify_union_field@@Base+0x14c>
   35744:	str	lr, [sp, #4]
   35748:	ldr	r1, [r0, #4]
   3574c:	ldr	r0, [r0, #8]
   35750:	str	r1, [sp, #8]
   35754:	str	r2, [sp, #20]
   35758:	str	r0, [sp, #12]
   3575c:	ldr	r0, [lr, r2]
   35760:	str	r0, [sp, #24]
   35764:	ldrb	r0, [r8, ip]
   35768:	strb	r0, [sp, #16]
   3576c:	add	r0, sp, #4
   35770:	blx	r3
   35774:	mov	r1, r0
   35778:	b	357b0 <flatcc_verify_union_field@@Base+0x14c>
   3577c:	add	r1, r5, #4
   35780:	uxth	r3, r1
   35784:	cmp	r3, r4
   35788:	bcs	357a4 <flatcc_verify_union_field@@Base+0x140>
   3578c:	ldr	r0, [r0, #12]
   35790:	uxtah	r0, r0, r1
   35794:	mov	r1, #23
   35798:	ldrh	r0, [r0]
   3579c:	cmp	r0, #0
   357a0:	bne	357b0 <flatcc_verify_union_field@@Base+0x14c>
   357a4:	cmp	r2, #0
   357a8:	movwne	r2, #21
   357ac:	mov	r1, r2
   357b0:	mov	r0, r1
   357b4:	sub	sp, fp, #28
   357b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   357bc:	cmp	r2, #0
   357c0:	movwne	r2, #4
   357c4:	b	357ac <flatcc_verify_union_field@@Base+0x148>

000357c8 <flatcc_verify_union_vector_field@@Base>:
   357c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   357cc:	add	fp, sp, #28
   357d0:	sub	sp, sp, #28
   357d4:	mov	r9, r3
   357d8:	mov	r3, #2
   357dc:	lsl	lr, r1, #1
   357e0:	add	r6, r3, r1, lsl #1
   357e4:	ldrh	r3, [r0, #22]
   357e8:	uxth	r4, r6
   357ec:	cmp	r4, r3
   357f0:	bcs	35808 <flatcc_verify_union_vector_field@@Base+0x40>
   357f4:	ldr	r7, [r0, #12]
   357f8:	mov	r1, r7
   357fc:	ldrh	r5, [r1, r4]!
   35800:	cmp	r5, #0
   35804:	bne	35854 <flatcc_verify_union_vector_field@@Base+0x8c>
   35808:	add	r1, lr, #4
   3580c:	uxth	r7, r1
   35810:	cmp	r7, r3
   35814:	bcs	358c0 <flatcc_verify_union_vector_field@@Base+0xf8>
   35818:	cmp	r2, #0
   3581c:	beq	35838 <flatcc_verify_union_vector_field@@Base+0x70>
   35820:	ldr	r7, [r0, #12]
   35824:	uxtah	r1, r7, r1
   35828:	ldrh	r7, [r1]
   3582c:	mov	r1, #22
   35830:	cmp	r7, #0
   35834:	beq	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35838:	cmp	r4, r3
   3583c:	bcs	358d0 <flatcc_verify_union_vector_field@@Base+0x108>
   35840:	ldr	r7, [r0, #12]
   35844:	mov	r1, r7
   35848:	ldrh	r5, [r1, r4]!
   3584c:	cmp	r5, #0
   35850:	beq	358d0 <flatcc_verify_union_vector_field@@Base+0x108>
   35854:	ldrh	r6, [r0, #20]
   35858:	add	r4, r5, #4
   3585c:	cmp	r4, r6
   35860:	bhi	358e8 <flatcc_verify_union_vector_field@@Base+0x120>
   35864:	ldr	r6, [r0, #16]
   35868:	add	r4, r6, r5
   3586c:	tst	r4, #3
   35870:	bne	358e8 <flatcc_verify_union_vector_field@@Base+0x120>
   35874:	cmp	r4, #0
   35878:	beq	35984 <flatcc_verify_union_vector_field@@Base+0x1bc>
   3587c:	ldr	r6, [r0]
   35880:	ldr	r5, [r6, r4]
   35884:	add	r5, r5, r4
   35888:	cmp	r5, r4
   3588c:	bls	358e8 <flatcc_verify_union_vector_field@@Base+0x120>
   35890:	ldr	ip, [r0, #4]
   35894:	add	r4, r5, #4
   35898:	cmp	r4, ip
   3589c:	bhi	358e8 <flatcc_verify_union_vector_field@@Base+0x120>
   358a0:	ands	r4, r4, #3
   358a4:	bne	358e8 <flatcc_verify_union_vector_field@@Base+0x120>
   358a8:	ldr	r4, [r6, r5]
   358ac:	sub	r6, ip, #4
   358b0:	sub	r6, r6, r5
   358b4:	cmp	r6, r4
   358b8:	bcc	358e8 <flatcc_verify_union_vector_field@@Base+0x120>
   358bc:	b	35984 <flatcc_verify_union_vector_field@@Base+0x1bc>
   358c0:	mov	r1, #22
   358c4:	cmp	r2, #0
   358c8:	bne	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   358cc:	b	35838 <flatcc_verify_union_vector_field@@Base+0x70>
   358d0:	cmp	r2, #0
   358d4:	beq	35970 <flatcc_verify_union_vector_field@@Base+0x1a8>
   358d8:	cmp	r4, r3
   358dc:	bcs	35aec <flatcc_verify_union_vector_field@@Base+0x324>
   358e0:	ldr	r1, [r0, #12]
   358e4:	uxtah	r1, r1, r6
   358e8:	ldrh	r3, [r1]
   358ec:	cmp	r3, #0
   358f0:	beq	35aec <flatcc_verify_union_vector_field@@Base+0x324>
   358f4:	ldrh	r2, [r0, #20]
   358f8:	add	r7, r3, #4
   358fc:	mov	r1, #13
   35900:	cmp	r7, r2
   35904:	bhi	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35908:	ldr	r1, [r0, #16]
   3590c:	add	r7, r1, r3
   35910:	mov	r1, #12
   35914:	tst	r7, #3
   35918:	bne	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   3591c:	cmp	r7, #0
   35920:	beq	35b04 <flatcc_verify_union_vector_field@@Base+0x33c>
   35924:	ldr	r2, [r0]
   35928:	ldr	r1, [r2, r7]
   3592c:	add	r3, r1, r7
   35930:	mov	r1, #16
   35934:	cmp	r3, r7
   35938:	bls	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   3593c:	ldr	r0, [r0, #4]
   35940:	add	r7, r3, #4
   35944:	cmp	r7, r0
   35948:	bhi	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   3594c:	ands	r7, r7, #3
   35950:	bne	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35954:	ldr	r2, [r2, r3]
   35958:	sub	r0, r0, #4
   3595c:	mov	r1, #0
   35960:	sub	r0, r0, r3
   35964:	cmp	r0, r2
   35968:	movwcc	r1, #26
   3596c:	b	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35970:	mov	r1, #0
   35974:	cmp	r4, r3
   35978:	bcs	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   3597c:	ldr	r7, [r0, #12]
   35980:	uxtah	r1, r7, r6
   35984:	ldrh	r5, [r1]
   35988:	mov	r1, #0
   3598c:	cmp	r5, #0
   35990:	ldrne	r8, [r0]
   35994:	ldrne	r6, [r0, #16]
   35998:	addne	r4, r8, r6
   3599c:	addsne	ip, r4, r5
   359a0:	beq	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   359a4:	add	r1, lr, #4
   359a8:	uxth	r5, r1
   359ac:	cmp	r5, r3
   359b0:	bcs	35aec <flatcc_verify_union_vector_field@@Base+0x324>
   359b4:	uxtah	r1, r7, r1
   359b8:	ldrh	r3, [r1]
   359bc:	cmp	r3, #0
   359c0:	beq	35aec <flatcc_verify_union_vector_field@@Base+0x324>
   359c4:	ldrh	r2, [r0, #20]
   359c8:	add	r7, r3, #4
   359cc:	mov	r1, #13
   359d0:	cmp	r7, r2
   359d4:	bhi	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   359d8:	add	r4, r6, r3
   359dc:	mov	r1, #12
   359e0:	tst	r4, #3
   359e4:	bne	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   359e8:	cmp	r4, #0
   359ec:	mov	r1, #0
   359f0:	beq	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   359f4:	ldr	r7, [r0, #8]
   359f8:	cmp	r7, #1
   359fc:	blt	35b0c <flatcc_verify_union_vector_field@@Base+0x344>
   35a00:	ldr	r2, [r8, r4]
   35a04:	mov	r1, #16
   35a08:	add	r5, r2, r4
   35a0c:	cmp	r5, r4
   35a10:	bls	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35a14:	ldr	r0, [r0, #4]
   35a18:	add	r4, r5, #4
   35a1c:	cmp	r4, r0
   35a20:	bhi	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35a24:	ands	r4, r4, #3
   35a28:	bne	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35a2c:	ldr	r4, [r8, r5]
   35a30:	mov	r1, #25
   35a34:	cmn	r4, #-1073741823	; 0xc0000001
   35a38:	bhi	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35a3c:	sub	r1, r0, #4
   35a40:	sub	r5, r1, r5
   35a44:	mov	r1, #26
   35a48:	cmp	r5, r4, lsl #2
   35a4c:	bcc	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35a50:	ldr	r5, [ip]
   35a54:	mov	r1, #34	; 0x22
   35a58:	ldr	sl, [r5, ip]!
   35a5c:	cmp	r4, sl
   35a60:	bne	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35a64:	cmp	sl, #0
   35a68:	sub	r1, r7, #1
   35a6c:	str	r0, [sp, #8]
   35a70:	str	r8, [sp, #4]
   35a74:	str	r1, [sp, #12]
   35a78:	beq	35b04 <flatcc_verify_union_vector_field@@Base+0x33c>
   35a7c:	add	r0, r2, r6
   35a80:	add	r7, r5, #4
   35a84:	mov	r5, #0
   35a88:	add	r4, sp, #4
   35a8c:	add	r0, r0, r3
   35a90:	add	r6, r0, #4
   35a94:	ldr	r1, [r8, r6]
   35a98:	ldrb	r0, [r7, r5]
   35a9c:	cmp	r1, #0
   35aa0:	beq	35acc <flatcc_verify_union_vector_field@@Base+0x304>
   35aa4:	cmp	r0, #0
   35aa8:	beq	35b14 <flatcc_verify_union_vector_field@@Base+0x34c>
   35aac:	str	r6, [sp, #20]
   35ab0:	strb	r0, [sp, #16]
   35ab4:	mov	r0, r4
   35ab8:	str	r1, [sp, #24]
   35abc:	blx	r9
   35ac0:	cmp	r0, #0
   35ac4:	beq	35ad4 <flatcc_verify_union_vector_field@@Base+0x30c>
   35ac8:	b	35b1c <flatcc_verify_union_vector_field@@Base+0x354>
   35acc:	cmp	r0, #0
   35ad0:	bne	35b2c <flatcc_verify_union_vector_field@@Base+0x364>
   35ad4:	add	r5, r5, #1
   35ad8:	add	r6, r6, #4
   35adc:	mov	r1, #0
   35ae0:	cmp	r5, sl
   35ae4:	bcc	35a94 <flatcc_verify_union_vector_field@@Base+0x2cc>
   35ae8:	b	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35aec:	cmp	r2, #0
   35af0:	movwne	r2, #4
   35af4:	mov	r1, r2
   35af8:	mov	r0, r1
   35afc:	sub	sp, fp, #28
   35b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35b04:	mov	r1, #0
   35b08:	b	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35b0c:	mov	r1, #3
   35b10:	b	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35b14:	mov	r1, #33	; 0x21
   35b18:	b	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35b1c:	add	r0, sp, #4
   35b20:	blx	r9
   35b24:	mov	r1, r0
   35b28:	b	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35b2c:	mov	r1, #32
   35b30:	b	35af8 <flatcc_verify_union_vector_field@@Base+0x330>
   35b34:	andeq	r0, r0, r0

00035b38 <grisu3_diy_fp_encode_double@@Base>:
   35b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35b3c:	add	fp, sp, #28
   35b40:	sub	sp, sp, #12
   35b44:	ldr	lr, [fp, #8]
   35b48:	orr	r7, r0, r1
   35b4c:	cmp	lr, #0
   35b50:	movwne	lr, #4
   35b54:	cmp	r7, #0
   35b58:	beq	35f40 <grisu3_diy_fp_encode_double@@Base+0x408>
   35b5c:	mov	ip, #0
   35b60:	mov	r5, #0
   35b64:	cmp	ip, r1, lsr #22
   35b68:	bne	35b88 <grisu3_diy_fp_encode_double@@Base+0x50>
   35b6c:	mov	ip, #0
   35b70:	lsl	r1, r1, #10
   35b74:	sub	ip, ip, #10
   35b78:	orr	r1, r1, r0, lsr #22
   35b7c:	lsl	r0, r0, #10
   35b80:	cmp	r1, #4194304	; 0x400000
   35b84:	bcc	35b70 <grisu3_diy_fp_encode_double@@Base+0x38>
   35b88:	sub	r6, r2, r3
   35b8c:	mvn	r2, #0
   35b90:	cmp	r1, #0
   35b94:	blt	35bbc <grisu3_diy_fp_encode_double@@Base+0x84>
   35b98:	lsl	r1, r1, #1
   35b9c:	lsl	r4, r0, #1
   35ba0:	sub	ip, ip, #1
   35ba4:	orr	r1, r1, r0, lsr #31
   35ba8:	subs	r0, r2, r0, lsl #1
   35bac:	sbcs	r0, r2, r1
   35bb0:	mov	r0, r4
   35bb4:	blt	35b98 <grisu3_diy_fp_encode_double@@Base+0x60>
   35bb8:	b	35bc0 <grisu3_diy_fp_encode_double@@Base+0x88>
   35bbc:	mov	r4, r0
   35bc0:	cmn	r6, #348	; 0x15c
   35bc4:	blt	35f60 <grisu3_diy_fp_encode_double@@Base+0x428>
   35bc8:	cmp	r6, #348	; 0x15c
   35bcc:	bge	35f80 <grisu3_diy_fp_encode_double@@Base+0x448>
   35bd0:	ldr	r9, [pc, #1064]	; 36000 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   35bd4:	add	r0, r6, #348	; 0x15c
   35bd8:	asr	r5, r0, #31
   35bdc:	add	r0, r0, r5, lsr #29
   35be0:	mvn	r5, #15
   35be4:	and	r0, r5, r0, lsl #1
   35be8:	add	r9, pc, r9
   35bec:	ldr	r5, [r9, r0]!
   35bf0:	ldrsh	r0, [r9, #10]
   35bf4:	cmp	r6, r0
   35bf8:	blt	35fa0 <grisu3_diy_fp_encode_double@@Base+0x468>
   35bfc:	add	r7, r0, #8
   35c00:	cmp	r7, r6
   35c04:	ble	35fc0 <grisu3_diy_fp_encode_double@@Base+0x488>
   35c08:	rsb	r7, ip, #0
   35c0c:	cmp	r6, r0
   35c10:	lsl	r8, lr, r7
   35c14:	beq	35ca0 <grisu3_diy_fp_encode_double@@Base+0x168>
   35c18:	mvn	r0, r0
   35c1c:	str	r8, [sp, #4]
   35c20:	str	r3, [sp, #8]
   35c24:	add	sl, r6, r0
   35c28:	cmp	sl, #7
   35c2c:	bcs	35fe0 <grisu3_diy_fp_encode_double@@Base+0x4a8>
   35c30:	ldr	r0, [pc, #972]	; 36004 <grisu3_diy_fp_encode_double@@Base+0x4cc>
   35c34:	add	r0, pc, r0
   35c38:	ldr	r7, [r0, sl, lsl #4]!
   35c3c:	ldr	r8, [r0, #4]
   35c40:	ldr	r0, [r0, #8]
   35c44:	umull	lr, r6, r7, r1
   35c48:	str	r0, [sp]
   35c4c:	umull	r3, r0, r8, r4
   35c50:	umaal	r6, r0, r8, r1
   35c54:	umull	r1, r4, r7, r4
   35c58:	ldr	r8, [sp, #4]
   35c5c:	mov	r1, #0
   35c60:	adds	r7, lr, r4
   35c64:	adc	r1, r1, #0
   35c68:	adds	r3, r7, r3
   35c6c:	adc	r1, r1, #0
   35c70:	adds	r3, r3, #-2147483648	; 0x80000000
   35c74:	adc	r1, r1, #0
   35c78:	adds	r4, r6, r1
   35c7c:	adc	r1, r0, #0
   35c80:	ldr	r0, [sp, #8]
   35c84:	add	r0, r0, sl
   35c88:	add	r0, r0, #1
   35c8c:	cmp	r0, #19
   35c90:	ldr	r0, [sp]
   35c94:	addgt	r8, r8, #4
   35c98:	add	r0, ip, r0
   35c9c:	add	ip, r0, #64	; 0x40
   35ca0:	ldr	r0, [r9, #4]
   35ca4:	umull	r3, r6, r4, r5
   35ca8:	mov	lr, #0
   35cac:	umull	r3, r7, r1, r5
   35cb0:	adds	r3, r3, r6
   35cb4:	adc	r6, lr, #0
   35cb8:	umull	r4, r5, r4, r0
   35cbc:	adds	r3, r3, r4
   35cc0:	umaal	r7, r5, r1, r0
   35cc4:	adc	r4, r6, #0
   35cc8:	adds	r3, r3, #-2147483648	; 0x80000000
   35ccc:	mov	r6, #9
   35cd0:	adc	r3, r4, #0
   35cd4:	adds	r4, r7, r3
   35cd8:	adc	r3, r5, #0
   35cdc:	cmp	r8, #0
   35ce0:	orr	r0, r4, r3
   35ce4:	movweq	r6, #8
   35ce8:	cmp	r0, #0
   35cec:	beq	35f40 <grisu3_diy_fp_encode_double@@Base+0x408>
   35cf0:	ldrsh	r0, [r9, #8]
   35cf4:	cmp	lr, r3, lsr #22
   35cf8:	add	r0, r0, ip
   35cfc:	add	r5, r0, #64	; 0x40
   35d00:	bne	35d28 <grisu3_diy_fp_encode_double@@Base+0x1f0>
   35d04:	mov	lr, #0
   35d08:	mov	r1, r5
   35d0c:	lsl	r0, r3, #10
   35d10:	sub	r1, r1, #10
   35d14:	orr	r3, r0, r4, lsr #22
   35d18:	lsl	r4, r4, #10
   35d1c:	cmp	r3, #4194304	; 0x400000
   35d20:	bcc	35d0c <grisu3_diy_fp_encode_double@@Base+0x1d4>
   35d24:	b	35d2c <grisu3_diy_fp_encode_double@@Base+0x1f4>
   35d28:	mov	r1, r5
   35d2c:	subs	r0, r2, r4
   35d30:	add	r7, r6, r8
   35d34:	sbcs	r0, r2, r3
   35d38:	bge	35d60 <grisu3_diy_fp_encode_double@@Base+0x228>
   35d3c:	lsl	r0, r3, #1
   35d40:	subs	r6, r2, r4, lsl #1
   35d44:	sub	r1, r1, #1
   35d48:	orr	r3, r0, r4, lsr #31
   35d4c:	lsl	r0, r4, #1
   35d50:	sbcs	r6, r2, r3
   35d54:	mov	r4, r0
   35d58:	blt	35d3c <grisu3_diy_fp_encode_double@@Base+0x204>
   35d5c:	b	35d64 <grisu3_diy_fp_encode_double@@Base+0x22c>
   35d60:	mov	r0, r4
   35d64:	movw	ip, #64462	; 0xfbce
   35d68:	sub	r2, r5, r1
   35d6c:	mov	r5, #0
   35d70:	movt	ip, #65535	; 0xffff
   35d74:	lsl	lr, r7, r2
   35d78:	sub	r2, ip, #1
   35d7c:	cmp	r1, r2
   35d80:	bgt	35dd4 <grisu3_diy_fp_encode_double@@Base+0x29c>
   35d84:	mvn	r2, #1136	; 0x470
   35d88:	mov	r5, #64	; 0x40
   35d8c:	cmp	r1, r2
   35d90:	blt	35da0 <grisu3_diy_fp_encode_double@@Base+0x268>
   35d94:	sub	r5, ip, r1
   35d98:	cmp	r5, #61	; 0x3d
   35d9c:	blt	35dd4 <grisu3_diy_fp_encode_double@@Base+0x29c>
   35da0:	sub	r2, r5, #62	; 0x3e
   35da4:	mov	r4, #9
   35da8:	add	lr, r4, lr, asr r2
   35dac:	lsr	r0, r0, r2
   35db0:	rsb	r4, r5, #94	; 0x5e
   35db4:	add	r1, r2, r1
   35db8:	orr	r0, r0, r3, lsl r4
   35dbc:	sub	r4, r5, #94	; 0x5e
   35dc0:	mov	r5, #62	; 0x3e
   35dc4:	cmp	r4, #0
   35dc8:	lsrge	r0, r3, r4
   35dcc:	lsr	r3, r3, r2
   35dd0:	movwge	r3, #0
   35dd4:	lsr	r2, r0, r5
   35dd8:	rsb	r4, r5, #32
   35ddc:	lsr	r6, r3, r5
   35de0:	add	r1, r1, r5
   35de4:	orr	r2, r2, r3, lsl r4
   35de8:	sub	r4, r5, #32
   35dec:	cmp	r4, #0
   35df0:	lsrge	r2, r3, r4
   35df4:	sub	r3, r5, #1
   35df8:	mov	r4, #1
   35dfc:	movwge	r6, #0
   35e00:	lsl	r4, r4, r3
   35e04:	sub	r3, r5, #33	; 0x21
   35e08:	cmp	r3, #0
   35e0c:	movwge	r4, #0
   35e10:	add	sl, lr, r4, lsl #3
   35e14:	cmp	r5, sl
   35e18:	blt	35e38 <grisu3_diy_fp_encode_double@@Base+0x300>
   35e1c:	adds	r2, r2, #1
   35e20:	adc	r6, r6, #0
   35e24:	tst	r6, #2097152	; 0x200000
   35e28:	beq	35e38 <grisu3_diy_fp_encode_double@@Base+0x300>
   35e2c:	lsrs	r6, r6, #1
   35e30:	add	r1, r1, #1
   35e34:	rrx	r2, r2
   35e38:	and	r0, r4, r0
   35e3c:	cmp	r6, #2097152	; 0x200000
   35e40:	bcc	35e64 <grisu3_diy_fp_encode_double@@Base+0x32c>
   35e44:	mov	r3, #0
   35e48:	lsrs	r7, r6, #1
   35e4c:	add	r1, r1, #1
   35e50:	rrx	r2, r2
   35e54:	cmp	r3, r6, lsr #22
   35e58:	mov	r6, r7
   35e5c:	bne	35e48 <grisu3_diy_fp_encode_double@@Base+0x310>
   35e60:	b	35e68 <grisu3_diy_fp_encode_double@@Base+0x330>
   35e64:	mov	r7, r6
   35e68:	ldr	r8, [fp, #12]
   35e6c:	lsl	r9, r4, #3
   35e70:	lsl	r0, r0, #3
   35e74:	vmov.i32	d16, #0	; 0x00000000
   35e78:	cmp	r1, ip
   35e7c:	blt	35f14 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   35e80:	and	r3, r7, #1048576	; 0x100000
   35e84:	mov	r4, #1
   35e88:	cmp	r1, ip
   35e8c:	eor	r5, r4, r3, lsr #20
   35e90:	beq	35ed4 <grisu3_diy_fp_encode_double@@Base+0x39c>
   35e94:	cmp	r3, #0
   35e98:	bne	35ed4 <grisu3_diy_fp_encode_double@@Base+0x39c>
   35e9c:	mov	r3, #1
   35ea0:	lsl	r4, r7, #1
   35ea4:	and	r7, r7, #524288	; 0x80000
   35ea8:	cmn	r1, #1072	; 0x430
   35eac:	orr	r6, r4, r2, lsr #31
   35eb0:	eor	r5, r3, r7, lsr #19
   35eb4:	lsl	r2, r2, #1
   35eb8:	sub	r4, r1, #1
   35ebc:	blt	35edc <grisu3_diy_fp_encode_double@@Base+0x3a4>
   35ec0:	cmp	r7, #0
   35ec4:	mov	r7, r6
   35ec8:	mov	r1, r4
   35ecc:	beq	35ea0 <grisu3_diy_fp_encode_double@@Base+0x368>
   35ed0:	b	35edc <grisu3_diy_fp_encode_double@@Base+0x3a4>
   35ed4:	mov	r4, r1
   35ed8:	mov	r6, r7
   35edc:	cmp	r4, ip
   35ee0:	bne	35ef4 <grisu3_diy_fp_encode_double@@Base+0x3bc>
   35ee4:	mov	r1, #0
   35ee8:	cmp	r5, #0
   35eec:	mov	r3, #0
   35ef0:	bne	35f04 <grisu3_diy_fp_encode_double@@Base+0x3cc>
   35ef4:	movw	r1, #0
   35ef8:	movt	r1, #17200	; 0x4330
   35efc:	add	r3, r1, r4, lsl #20
   35f00:	mov	r1, #0
   35f04:	bfc	r6, #20, #12
   35f08:	orr	r1, r1, r2
   35f0c:	orr	r2, r3, r6
   35f10:	vmov	d16, r1, r2
   35f14:	cmp	r0, sl
   35f18:	mov	r2, #0
   35f1c:	sub	r3, r9, lr
   35f20:	mov	r1, #0
   35f24:	vstr	d16, [r8]
   35f28:	movwge	r2, #1
   35f2c:	cmp	r3, r0
   35f30:	movwge	r1, #1
   35f34:	orr	r0, r2, r1
   35f38:	sub	sp, fp, #28
   35f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35f40:	ldr	r0, [pc, #252]	; 36044 <grisu3_diy_fp_encode_double@@Base+0x50c>
   35f44:	ldr	r1, [pc, #252]	; 36048 <grisu3_diy_fp_encode_double@@Base+0x510>
   35f48:	ldr	r3, [pc, #252]	; 3604c <grisu3_diy_fp_encode_double@@Base+0x514>
   35f4c:	mov	r2, #260	; 0x104
   35f50:	add	r0, pc, r0
   35f54:	add	r1, pc, r1
   35f58:	add	r3, pc, r3
   35f5c:	bl	14f3c <__assert_fail@plt>
   35f60:	ldr	r0, [pc, #160]	; 36008 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   35f64:	ldr	r1, [pc, #160]	; 3600c <grisu3_diy_fp_encode_double@@Base+0x4d4>
   35f68:	ldr	r3, [pc, #160]	; 36010 <grisu3_diy_fp_encode_double@@Base+0x4d8>
   35f6c:	mov	r2, #80	; 0x50
   35f70:	add	r0, pc, r0
   35f74:	add	r1, pc, r1
   35f78:	add	r3, pc, r3
   35f7c:	bl	14f3c <__assert_fail@plt>
   35f80:	ldr	r0, [pc, #140]	; 36014 <grisu3_diy_fp_encode_double@@Base+0x4dc>
   35f84:	ldr	r1, [pc, #140]	; 36018 <grisu3_diy_fp_encode_double@@Base+0x4e0>
   35f88:	ldr	r3, [pc, #140]	; 3601c <grisu3_diy_fp_encode_double@@Base+0x4e4>
   35f8c:	mov	r2, #81	; 0x51
   35f90:	add	r0, pc, r0
   35f94:	add	r1, pc, r1
   35f98:	add	r3, pc, r3
   35f9c:	bl	14f3c <__assert_fail@plt>
   35fa0:	ldr	r0, [pc, #120]	; 36020 <grisu3_diy_fp_encode_double@@Base+0x4e8>
   35fa4:	ldr	r1, [pc, #120]	; 36024 <grisu3_diy_fp_encode_double@@Base+0x4ec>
   35fa8:	ldr	r3, [pc, #120]	; 36028 <grisu3_diy_fp_encode_double@@Base+0x4f0>
   35fac:	mov	r2, #88	; 0x58
   35fb0:	add	r0, pc, r0
   35fb4:	add	r1, pc, r1
   35fb8:	add	r3, pc, r3
   35fbc:	bl	14f3c <__assert_fail@plt>
   35fc0:	ldr	r0, [pc, #100]	; 3602c <grisu3_diy_fp_encode_double@@Base+0x4f4>
   35fc4:	ldr	r1, [pc, #100]	; 36030 <grisu3_diy_fp_encode_double@@Base+0x4f8>
   35fc8:	ldr	r3, [pc, #100]	; 36034 <grisu3_diy_fp_encode_double@@Base+0x4fc>
   35fcc:	mov	r2, #89	; 0x59
   35fd0:	add	r0, pc, r0
   35fd4:	add	r1, pc, r1
   35fd8:	add	r3, pc, r3
   35fdc:	bl	14f3c <__assert_fail@plt>
   35fe0:	ldr	r0, [pc, #80]	; 36038 <grisu3_diy_fp_encode_double@@Base+0x500>
   35fe4:	ldr	r1, [pc, #80]	; 3603c <grisu3_diy_fp_encode_double@@Base+0x504>
   35fe8:	ldr	r3, [pc, #80]	; 36040 <grisu3_diy_fp_encode_double@@Base+0x508>
   35fec:	mov	r2, #185	; 0xb9
   35ff0:	add	r0, pc, r0
   35ff4:	add	r1, pc, r1
   35ff8:	add	r3, pc, r3
   35ffc:	bl	14f3c <__assert_fail@plt>
   36000:	andeq	r7, r1, r0
   36004:	andeq	r6, r1, r4, asr #30
   36008:	andeq	r7, r1, fp, ror #19
   3600c:	andeq	r7, r1, r0, lsl #8
   36010:	andeq	r7, r1, r2, lsl #20
   36014:	andeq	r7, r1, r3, lsr #20
   36018:	andeq	r7, r1, r0, ror #7
   3601c:	andeq	r7, r1, r2, ror #19
   36020:	andeq	r7, r1, lr, lsr #20
   36024:	andeq	r7, r1, r0, asr #7
   36028:	andeq	r7, r1, r2, asr #19
   3602c:	andeq	r7, r1, sp, lsl sl
   36030:	andeq	r7, r1, r0, lsr #7
   36034:	andeq	r7, r1, r2, lsr #19
   36038:	andeq	r7, r1, r8, ror #6
   3603c:	andeq	r7, r1, r0, lsl #7
   36040:	andeq	r7, r1, sl, ror #7
   36044:	andeq	r7, r1, ip, asr r9
   36048:	andeq	r7, r1, r1, ror #18
   3604c:	andeq	r7, r1, sl, asr #19

00036050 <flatcc_json_parser_error_string@@Base>:
   36050:	cmp	r0, #34	; 0x22
   36054:	ldrhi	r0, [pc, #24]	; 36074 <flatcc_json_parser_error_string@@Base+0x24>
   36058:	addhi	r0, pc, r0
   3605c:	bxhi	lr
   36060:	ldr	r1, [pc, #8]	; 36070 <flatcc_json_parser_error_string@@Base+0x20>
   36064:	add	r1, pc, r1
   36068:	ldr	r0, [r1, r0, lsl #2]
   3606c:	bx	lr
   36070:	andeq	r8, r2, r4, lsl #28
   36074:	andeq	r6, r1, r1, lsl fp

00036078 <flatcc_json_parser_set_error@@Base>:
   36078:	mov	ip, r2
   3607c:	ldr	r2, [r0, #24]
   36080:	cmp	r2, #0
   36084:	beq	36090 <flatcc_json_parser_set_error@@Base+0x18>
   36088:	mov	r0, ip
   3608c:	bx	lr
   36090:	str	r1, [r0, #36]	; 0x24
   36094:	add	r1, r1, #1
   36098:	ldr	r2, [r0, #4]
   3609c:	sub	r1, r1, r2
   360a0:	str	r1, [r0, #20]
   360a4:	str	r3, [r0, #24]
   360a8:	mov	r0, ip
   360ac:	bx	lr

000360b0 <flatcc_json_parser_string_part@@Base>:
   360b0:	cmp	r1, r2
   360b4:	beq	360e0 <flatcc_json_parser_string_part@@Base+0x30>
   360b8:	ldrb	r3, [r1]
   360bc:	cmp	r3, #32
   360c0:	bcc	36114 <flatcc_json_parser_string_part@@Base+0x64>
   360c4:	cmp	r3, #34	; 0x22
   360c8:	cmpne	r3, #92	; 0x5c
   360cc:	beq	3610c <flatcc_json_parser_string_part@@Base+0x5c>
   360d0:	add	r1, r1, #1
   360d4:	cmp	r2, r1
   360d8:	bne	360b8 <flatcc_json_parser_string_part@@Base+0x8>
   360dc:	mov	r1, r2
   360e0:	ldr	r3, [r0, #24]
   360e4:	cmp	r3, #0
   360e8:	bne	36108 <flatcc_json_parser_string_part@@Base+0x58>
   360ec:	mov	ip, #20
   360f0:	str	r1, [r0, #36]	; 0x24
   360f4:	add	r1, r1, #1
   360f8:	ldr	r3, [r0, #4]
   360fc:	sub	r1, r1, r3
   36100:	str	r1, [r0, #20]
   36104:	str	ip, [r0, #24]
   36108:	mov	r1, r2
   3610c:	mov	r0, r1
   36110:	bx	lr
   36114:	ldr	r3, [r0, #24]
   36118:	cmp	r3, #0
   3611c:	bne	36108 <flatcc_json_parser_string_part@@Base+0x58>
   36120:	mov	ip, #17
   36124:	b	360f0 <flatcc_json_parser_string_part@@Base+0x40>

00036128 <flatcc_json_parser_space_ext@@Base>:
   36128:	mov	ip, r2
   3612c:	cmp	r1, r2
   36130:	bne	36210 <flatcc_json_parser_space_ext@@Base+0xe8>
   36134:	b	36238 <flatcc_json_parser_space_ext@@Base+0x110>
   36138:	add	r1, r1, #1
   3613c:	str	r1, [r0, #4]
   36140:	ldr	r2, [r0, #16]
   36144:	add	r2, r2, #1
   36148:	str	r2, [r0, #16]
   3614c:	cmp	r1, ip
   36150:	bne	36164 <flatcc_json_parser_space_ext@@Base+0x3c>
   36154:	b	36238 <flatcc_json_parser_space_ext@@Base+0x110>
   36158:	add	r1, r1, #1
   3615c:	cmp	r1, ip
   36160:	beq	36238 <flatcc_json_parser_space_ext@@Base+0x110>
   36164:	ldrb	r3, [r1]
   36168:	cmp	r3, #32
   3616c:	movhi	r0, r1
   36170:	bxhi	lr
   36174:	sub	r3, r3, #9
   36178:	cmp	r3, #23
   3617c:	bhi	3622c <flatcc_json_parser_space_ext@@Base+0x104>
   36180:	add	r2, pc, #4
   36184:	ldr	r3, [r2, r3, lsl #2]
   36188:	add	pc, r2, r3
   3618c:			; <UNDEFINED> instruction: 0xffffffcc
   36190:			; <UNDEFINED> instruction: 0xffffffac
   36194:	andeq	r0, r0, r0, lsr #1
   36198:	andeq	r0, r0, r0, lsr #1
   3619c:	andeq	r0, r0, r0, rrx
   361a0:	andeq	r0, r0, r0, lsr #1
   361a4:	andeq	r0, r0, r0, lsr #1
   361a8:	andeq	r0, r0, r0, lsr #1
   361ac:	andeq	r0, r0, r0, lsr #1
   361b0:	andeq	r0, r0, r0, lsr #1
   361b4:	andeq	r0, r0, r0, lsr #1
   361b8:	andeq	r0, r0, r0, lsr #1
   361bc:	andeq	r0, r0, r0, lsr #1
   361c0:	andeq	r0, r0, r0, lsr #1
   361c4:	andeq	r0, r0, r0, lsr #1
   361c8:	andeq	r0, r0, r0, lsr #1
   361cc:	andeq	r0, r0, r0, lsr #1
   361d0:	andeq	r0, r0, r0, lsr #1
   361d4:	andeq	r0, r0, r0, lsr #1
   361d8:	andeq	r0, r0, r0, lsr #1
   361dc:	andeq	r0, r0, r0, lsr #1
   361e0:	andeq	r0, r0, r0, lsr #1
   361e4:	andeq	r0, r0, r0, lsr #1
   361e8:	muleq	r0, r4, r0
   361ec:	sub	r2, ip, r1
   361f0:	mov	r3, #0
   361f4:	cmp	r2, #2
   361f8:	ldrbge	r2, [r1, #1]
   361fc:	subge	r2, r2, #10
   36200:	clzge	r2, r2
   36204:	lsrge	r3, r2, #5
   36208:	add	r1, r1, r3
   3620c:	b	36138 <flatcc_json_parser_space_ext@@Base+0x10>
   36210:	ldrb	r3, [r1]
   36214:	cmp	r3, #32
   36218:	bne	3614c <flatcc_json_parser_space_ext@@Base+0x24>
   3621c:	add	r1, r1, #1
   36220:	cmp	r1, ip
   36224:	bne	36210 <flatcc_json_parser_space_ext@@Base+0xe8>
   36228:	b	36238 <flatcc_json_parser_space_ext@@Base+0x110>
   3622c:	ldr	r2, [r0, #24]
   36230:	cmp	r2, #0
   36234:	beq	36240 <flatcc_json_parser_space_ext@@Base+0x118>
   36238:	mov	r0, ip
   3623c:	bx	lr
   36240:	str	r1, [r0, #36]	; 0x24
   36244:	add	r1, r1, #1
   36248:	mov	r2, #5
   3624c:	ldr	r3, [r0, #4]
   36250:	sub	r1, r1, r3
   36254:	str	r1, [r0, #20]
   36258:	str	r2, [r0, #24]
   3625c:	mov	r0, ip
   36260:	bx	lr

00036264 <flatcc_json_parser_string_escape@@Base>:
   36264:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36268:	add	fp, sp, #24
   3626c:	sub	r7, r2, r1
   36270:	cmp	r7, #2
   36274:	blt	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   36278:	ldrb	r6, [r1]
   3627c:	cmp	r6, #92	; 0x5c
   36280:	bne	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   36284:	ldrb	r6, [r1, #1]
   36288:	sub	r6, r6, #34	; 0x22
   3628c:	cmp	r6, #86	; 0x56
   36290:	bhi	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   36294:	add	r5, pc, #4
   36298:	ldr	r6, [r5, r6, lsl #2]
   3629c:	add	pc, r5, r6
   362a0:	andeq	r0, r0, ip, asr r1
   362a4:	ldrdeq	r0, [r0], -ip
   362a8:	ldrdeq	r0, [r0], -ip
   362ac:	ldrdeq	r0, [r0], -ip
   362b0:	ldrdeq	r0, [r0], -ip
   362b4:	ldrdeq	r0, [r0], -ip
   362b8:	ldrdeq	r0, [r0], -ip
   362bc:	ldrdeq	r0, [r0], -ip
   362c0:	ldrdeq	r0, [r0], -ip
   362c4:	ldrdeq	r0, [r0], -ip
   362c8:	ldrdeq	r0, [r0], -ip
   362cc:	ldrdeq	r0, [r0], -ip
   362d0:	ldrdeq	r0, [r0], -ip
   362d4:	andeq	r0, r0, r4, ror #2
   362d8:	ldrdeq	r0, [r0], -ip
   362dc:	ldrdeq	r0, [r0], -ip
   362e0:	ldrdeq	r0, [r0], -ip
   362e4:	ldrdeq	r0, [r0], -ip
   362e8:	ldrdeq	r0, [r0], -ip
   362ec:	ldrdeq	r0, [r0], -ip
   362f0:	ldrdeq	r0, [r0], -ip
   362f4:	ldrdeq	r0, [r0], -ip
   362f8:	ldrdeq	r0, [r0], -ip
   362fc:	ldrdeq	r0, [r0], -ip
   36300:	ldrdeq	r0, [r0], -ip
   36304:	ldrdeq	r0, [r0], -ip
   36308:	ldrdeq	r0, [r0], -ip
   3630c:	ldrdeq	r0, [r0], -ip
   36310:	ldrdeq	r0, [r0], -ip
   36314:	ldrdeq	r0, [r0], -ip
   36318:	ldrdeq	r0, [r0], -ip
   3631c:	ldrdeq	r0, [r0], -ip
   36320:	ldrdeq	r0, [r0], -ip
   36324:	ldrdeq	r0, [r0], -ip
   36328:	ldrdeq	r0, [r0], -ip
   3632c:	ldrdeq	r0, [r0], -ip
   36330:	ldrdeq	r0, [r0], -ip
   36334:	ldrdeq	r0, [r0], -ip
   36338:	ldrdeq	r0, [r0], -ip
   3633c:	ldrdeq	r0, [r0], -ip
   36340:	ldrdeq	r0, [r0], -ip
   36344:	ldrdeq	r0, [r0], -ip
   36348:	ldrdeq	r0, [r0], -ip
   3634c:	ldrdeq	r0, [r0], -ip
   36350:	ldrdeq	r0, [r0], -ip
   36354:	ldrdeq	r0, [r0], -ip
   36358:	ldrdeq	r0, [r0], -ip
   3635c:	ldrdeq	r0, [r0], -ip
   36360:	ldrdeq	r0, [r0], -ip
   36364:	ldrdeq	r0, [r0], -ip
   36368:	ldrdeq	r0, [r0], -ip
   3636c:	ldrdeq	r0, [r0], -ip
   36370:	ldrdeq	r0, [r0], -ip
   36374:	ldrdeq	r0, [r0], -ip
   36378:	ldrdeq	r0, [r0], -ip
   3637c:	ldrdeq	r0, [r0], -ip
   36380:	ldrdeq	r0, [r0], -ip
   36384:	ldrdeq	r0, [r0], -ip
   36388:	andeq	r0, r0, ip, ror #2
   3638c:	ldrdeq	r0, [r0], -ip
   36390:	ldrdeq	r0, [r0], -ip
   36394:	ldrdeq	r0, [r0], -ip
   36398:	ldrdeq	r0, [r0], -ip
   3639c:	ldrdeq	r0, [r0], -ip
   363a0:	andeq	r0, r0, r4, ror r1
   363a4:	ldrdeq	r0, [r0], -ip
   363a8:	ldrdeq	r0, [r0], -ip
   363ac:	ldrdeq	r0, [r0], -ip
   363b0:	andeq	r0, r0, ip, ror r1
   363b4:	ldrdeq	r0, [r0], -ip
   363b8:	ldrdeq	r0, [r0], -ip
   363bc:	ldrdeq	r0, [r0], -ip
   363c0:	ldrdeq	r0, [r0], -ip
   363c4:	ldrdeq	r0, [r0], -ip
   363c8:	ldrdeq	r0, [r0], -ip
   363cc:	ldrdeq	r0, [r0], -ip
   363d0:	andeq	r0, r0, r4, lsl #3
   363d4:	ldrdeq	r0, [r0], -ip
   363d8:	ldrdeq	r0, [r0], -ip
   363dc:	ldrdeq	r0, [r0], -ip
   363e0:	andeq	r0, r0, ip, lsl #3
   363e4:	ldrdeq	r0, [r0], -ip
   363e8:	muleq	r0, r4, r1
   363ec:	andeq	r0, r0, r8, lsr #3
   363f0:	ldrdeq	r0, [r0], -ip
   363f4:	ldrdeq	r0, [r0], -ip
   363f8:	andeq	r0, r0, ip, asr #3
   363fc:	movw	r0, #8705	; 0x2201
   36400:	b	36438 <flatcc_json_parser_string_escape@@Base+0x1d4>
   36404:	movw	r0, #12033	; 0x2f01
   36408:	b	36438 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3640c:	movw	r0, #23553	; 0x5c01
   36410:	b	36438 <flatcc_json_parser_string_escape@@Base+0x1d4>
   36414:	movw	r0, #2049	; 0x801
   36418:	b	36438 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3641c:	movw	r0, #3073	; 0xc01
   36420:	b	36438 <flatcc_json_parser_string_escape@@Base+0x1d4>
   36424:	movw	r0, #2561	; 0xa01
   36428:	b	36438 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3642c:	movw	r0, #3329	; 0xd01
   36430:	b	36438 <flatcc_json_parser_string_escape@@Base+0x1d4>
   36434:	movw	r0, #2305	; 0x901
   36438:	add	r2, r1, #2
   3643c:	strh	r0, [r3]
   36440:	mov	r0, r2
   36444:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36448:	cmp	r7, #5
   3644c:	ble	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   36450:	ldrb	r7, [r1, #2]
   36454:	sub	r6, r7, #48	; 0x30
   36458:	uxtb	r6, r6
   3645c:	cmp	r6, #9
   36460:	bhi	364d8 <flatcc_json_parser_string_escape@@Base+0x274>
   36464:	lsl	ip, r7, #12
   36468:	b	364f8 <flatcc_json_parser_string_escape@@Base+0x294>
   3646c:	mov	r6, #1
   36470:	cmp	r7, #3
   36474:	strb	r6, [r3]
   36478:	bgt	364bc <flatcc_json_parser_string_escape@@Base+0x258>
   3647c:	mov	r7, #0
   36480:	strb	r7, [r3]
   36484:	ldr	r3, [r0, #24]
   36488:	cmp	r3, #0
   3648c:	beq	36498 <flatcc_json_parser_string_escape@@Base+0x234>
   36490:	mov	r0, r2
   36494:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36498:	str	r1, [r0, #36]	; 0x24
   3649c:	add	r1, r1, #1
   364a0:	mov	r3, #18
   364a4:	ldr	r7, [r0, #4]
   364a8:	sub	r1, r1, r7
   364ac:	str	r1, [r0, #20]
   364b0:	str	r3, [r0, #24]
   364b4:	mov	r0, r2
   364b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   364bc:	ldrb	r7, [r1, #2]
   364c0:	sub	r6, r7, #48	; 0x30
   364c4:	uxtb	r6, r6
   364c8:	cmp	r6, #9
   364cc:	bhi	36514 <flatcc_json_parser_string_escape@@Base+0x2b0>
   364d0:	lsl	r7, r7, #4
   364d4:	b	36530 <flatcc_json_parser_string_escape@@Base+0x2cc>
   364d8:	orr	r6, r7, #32
   364dc:	sub	r6, r6, #97	; 0x61
   364e0:	uxtb	r6, r6
   364e4:	cmp	r6, #5
   364e8:	bhi	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   364ec:	movw	r6, #36864	; 0x9000
   364f0:	movt	r6, #65535	; 0xffff
   364f4:	add	ip, r6, r7, lsl #12
   364f8:	ldrb	lr, [r1, #3]
   364fc:	sub	r4, lr, #48	; 0x30
   36500:	uxtb	r4, r4
   36504:	cmp	r4, #10
   36508:	bcs	36570 <flatcc_json_parser_string_escape@@Base+0x30c>
   3650c:	mov	r8, #53248	; 0xd000
   36510:	b	36588 <flatcc_json_parser_string_escape@@Base+0x324>
   36514:	orr	r6, r7, #32
   36518:	sub	r6, r6, #97	; 0x61
   3651c:	uxtb	r6, r6
   36520:	cmp	r6, #5
   36524:	bhi	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   36528:	mvn	r6, #111	; 0x6f
   3652c:	add	r7, r6, r7, lsl #4
   36530:	ldrb	r5, [r1, #3]
   36534:	sub	r6, r5, #48	; 0x30
   36538:	uxtb	r4, r6
   3653c:	cmp	r4, #10
   36540:	bcc	3655c <flatcc_json_parser_string_escape@@Base+0x2f8>
   36544:	orr	r6, r5, #32
   36548:	sub	r5, r6, #97	; 0x61
   3654c:	uxtb	r5, r5
   36550:	cmp	r5, #5
   36554:	bhi	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   36558:	sub	r6, r6, #87	; 0x57
   3655c:	orr	r0, r6, r7
   36560:	add	r2, r1, #4
   36564:	strb	r0, [r3, #1]
   36568:	mov	r0, r2
   3656c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36570:	orr	lr, lr, #32
   36574:	mov	r8, #43264	; 0xa900
   36578:	sub	r4, lr, #97	; 0x61
   3657c:	uxtb	r4, r4
   36580:	cmp	r4, #6
   36584:	bcs	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   36588:	ldrb	r5, [r1, #4]
   3658c:	sub	r4, r5, #48	; 0x30
   36590:	uxtb	r4, r4
   36594:	cmp	r4, #10
   36598:	bcs	365a4 <flatcc_json_parser_string_escape@@Base+0x340>
   3659c:	mov	r9, #64768	; 0xfd00
   365a0:	b	365bc <flatcc_json_parser_string_escape@@Base+0x358>
   365a4:	orr	r5, r5, #32
   365a8:	movw	r9, #64144	; 0xfa90
   365ac:	sub	r4, r5, #97	; 0x61
   365b0:	uxtb	r4, r4
   365b4:	cmp	r4, #6
   365b8:	bcs	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   365bc:	ldrb	r7, [r1, #5]
   365c0:	sub	r4, r7, #48	; 0x30
   365c4:	uxtb	r4, r4
   365c8:	cmp	r4, #10
   365cc:	bcs	365dc <flatcc_json_parser_string_escape@@Base+0x378>
   365d0:	mvn	r0, #86	; 0x56
   365d4:	add	r4, r0, #39	; 0x27
   365d8:	b	365f4 <flatcc_json_parser_string_escape@@Base+0x390>
   365dc:	orr	r7, r7, #32
   365e0:	movw	r4, #65449	; 0xffa9
   365e4:	sub	r6, r7, #97	; 0x61
   365e8:	uxtb	r6, r6
   365ec:	cmp	r6, #6
   365f0:	bcs	3647c <flatcc_json_parser_string_escape@@Base+0x218>
   365f4:	add	r0, r8, lr, lsl #8
   365f8:	add	r2, r9, r5, lsl #4
   365fc:	orr	r0, r0, ip
   36600:	orr	r0, r0, r2
   36604:	add	r2, r4, r7
   36608:	orr	r0, r0, r2
   3660c:	uxth	r7, r0
   36610:	cmp	r7, #127	; 0x7f
   36614:	bhi	36624 <flatcc_json_parser_string_escape@@Base+0x3c0>
   36618:	mov	r2, #1
   3661c:	strb	r2, [r3]
   36620:	b	36678 <flatcc_json_parser_string_escape@@Base+0x414>
   36624:	and	r2, r0, #63488	; 0xf800
   36628:	mov	r6, #0
   3662c:	cmp	r6, r2, lsr #11
   36630:	bne	3664c <flatcc_json_parser_string_escape@@Base+0x3e8>
   36634:	mov	r7, #192	; 0xc0
   36638:	mov	r2, #2
   3663c:	orr	r7, r7, r0, lsr #6
   36640:	strb	r2, [r3]
   36644:	strb	r7, [r3, #1]
   36648:	b	36670 <flatcc_json_parser_string_escape@@Base+0x40c>
   3664c:	mov	r6, #224	; 0xe0
   36650:	mov	r2, #3
   36654:	orr	r6, r6, r7, lsr #12
   36658:	strb	r2, [r3]
   3665c:	lsr	r7, r7, #6
   36660:	strb	r6, [r3, #1]
   36664:	mov	r6, #2
   36668:	bfi	r7, r6, #6, #26
   3666c:	strb	r7, [r3, #2]
   36670:	mvn	r7, #-67108863	; 0xfc000001
   36674:	bfi	r0, r7, #6, #26
   36678:	strb	r0, [r3, r2]
   3667c:	add	r2, r1, #6
   36680:	mov	r0, r2
   36684:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00036688 <flatcc_json_parser_skip_constant@@Base>:
   36688:	push	{r4, r5, r6, sl, fp, lr}
   3668c:	add	fp, sp, #16
   36690:	cmp	r1, r2
   36694:	moveq	r0, r1
   36698:	popeq	{r4, r5, r6, sl, fp, pc}
   3669c:	mov	r4, r2
   366a0:	mov	r5, r0
   366a4:	b	366b4 <flatcc_json_parser_skip_constant@@Base+0x2c>
   366a8:	cmp	r1, r4
   366ac:	moveq	r0, r4
   366b0:	popeq	{r4, r5, r6, sl, fp, pc}
   366b4:	ldrsb	r0, [r1]
   366b8:	mov	r6, r1
   366bc:	cmp	r0, #0
   366c0:	blt	366d4 <flatcc_json_parser_skip_constant@@Base+0x4c>
   366c4:	uxtb	r0, r0
   366c8:	cmp	r0, #95	; 0x5f
   366cc:	cmpne	r0, #46	; 0x2e
   366d0:	bne	366dc <flatcc_json_parser_skip_constant@@Base+0x54>
   366d4:	add	r1, r6, #1
   366d8:	b	366a8 <flatcc_json_parser_skip_constant@@Base+0x20>
   366dc:	sub	r1, r0, #48	; 0x30
   366e0:	uxtb	r1, r1
   366e4:	cmp	r1, #9
   366e8:	bls	366d4 <flatcc_json_parser_skip_constant@@Base+0x4c>
   366ec:	orr	r1, r0, #32
   366f0:	sub	r1, r1, #97	; 0x61
   366f4:	uxtb	r1, r1
   366f8:	cmp	r1, #25
   366fc:	bls	366d4 <flatcc_json_parser_skip_constant@@Base+0x4c>
   36700:	sub	r1, r4, r6
   36704:	cmp	r1, #2
   36708:	blt	36728 <flatcc_json_parser_skip_constant@@Base+0xa0>
   3670c:	cmp	r0, #32
   36710:	bhi	36744 <flatcc_json_parser_skip_constant@@Base+0xbc>
   36714:	bne	36728 <flatcc_json_parser_skip_constant@@Base+0xa0>
   36718:	mov	r1, r6
   3671c:	ldrb	r0, [r1, #1]!
   36720:	cmp	r0, #32
   36724:	bhi	366a8 <flatcc_json_parser_skip_constant@@Base+0x20>
   36728:	mov	r0, r5
   3672c:	mov	r1, r6
   36730:	mov	r2, r4
   36734:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   36738:	mov	r1, r0
   3673c:	cmp	r0, r6
   36740:	bne	366a8 <flatcc_json_parser_skip_constant@@Base+0x20>
   36744:	mov	r0, r6
   36748:	pop	{r4, r5, r6, sl, fp, pc}

0003674c <flatcc_json_parser_match_constant@@Base>:
   3674c:	push	{r4, r5, r6, r7, fp, lr}
   36750:	add	fp, sp, #16
   36754:	ldr	r7, [fp, #8]
   36758:	mov	r4, r1
   3675c:	sub	r1, r2, r1
   36760:	cmp	r1, r3
   36764:	ble	36864 <flatcc_json_parser_match_constant@@Base+0x118>
   36768:	ldr	r1, [r0, #12]
   3676c:	mov	r5, r2
   36770:	add	r6, r4, r3
   36774:	cmp	r1, #0
   36778:	beq	367fc <flatcc_json_parser_match_constant@@Base+0xb0>
   3677c:	sub	r1, r5, r6
   36780:	cmp	r1, #2
   36784:	blt	367ac <flatcc_json_parser_match_constant@@Base+0x60>
   36788:	ldrb	r1, [r6]
   3678c:	mov	r2, r6
   36790:	cmp	r1, #32
   36794:	bhi	367bc <flatcc_json_parser_match_constant@@Base+0x70>
   36798:	bne	367ac <flatcc_json_parser_match_constant@@Base+0x60>
   3679c:	mov	r2, r6
   367a0:	ldrb	r1, [r2, #1]!
   367a4:	cmp	r1, #32
   367a8:	bhi	367bc <flatcc_json_parser_match_constant@@Base+0x70>
   367ac:	mov	r1, r6
   367b0:	mov	r2, r5
   367b4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   367b8:	mov	r2, r0
   367bc:	cmp	r2, r5
   367c0:	beq	36878 <flatcc_json_parser_match_constant@@Base+0x12c>
   367c4:	cmp	r2, r6
   367c8:	beq	36888 <flatcc_json_parser_match_constant@@Base+0x13c>
   367cc:	ldrsb	r0, [r2]
   367d0:	cmp	r0, #95	; 0x5f
   367d4:	beq	367f4 <flatcc_json_parser_match_constant@@Base+0xa8>
   367d8:	cmn	r0, #1
   367dc:	ble	367f4 <flatcc_json_parser_match_constant@@Base+0xa8>
   367e0:	orr	r0, r0, #32
   367e4:	sub	r0, r0, #97	; 0x61
   367e8:	uxtb	r0, r0
   367ec:	cmp	r0, #25
   367f0:	bhi	36888 <flatcc_json_parser_match_constant@@Base+0x13c>
   367f4:	mov	r0, #1
   367f8:	b	3690c <flatcc_json_parser_match_constant@@Base+0x1c0>
   367fc:	ldrb	r1, [r6]
   36800:	cmp	r1, #92	; 0x5c
   36804:	beq	368b0 <flatcc_json_parser_match_constant@@Base+0x164>
   36808:	cmp	r1, #34	; 0x22
   3680c:	beq	36840 <flatcc_json_parser_match_constant@@Base+0xf4>
   36810:	cmp	r1, #32
   36814:	bne	36864 <flatcc_json_parser_match_constant@@Base+0x118>
   36818:	add	r1, r4, r3
   3681c:	add	r1, r1, #1
   36820:	cmp	r5, r1
   36824:	beq	36878 <flatcc_json_parser_match_constant@@Base+0x12c>
   36828:	ldrb	r2, [r1], #1
   3682c:	cmp	r2, #32
   36830:	beq	36820 <flatcc_json_parser_match_constant@@Base+0xd4>
   36834:	cmp	r2, #34	; 0x22
   36838:	bne	36918 <flatcc_json_parser_match_constant@@Base+0x1cc>
   3683c:	sub	r6, r1, #1
   36840:	mvn	r2, r6
   36844:	add	r1, r6, #1
   36848:	cmp	r2, #2
   3684c:	blt	368fc <flatcc_json_parser_match_constant@@Base+0x1b0>
   36850:	ldrb	r2, [r1]
   36854:	cmp	r2, #32
   36858:	bls	368e8 <flatcc_json_parser_match_constant@@Base+0x19c>
   3685c:	mov	r2, r1
   36860:	b	36908 <flatcc_json_parser_match_constant@@Base+0x1bc>
   36864:	mov	r0, #0
   36868:	mov	r2, r4
   3686c:	str	r0, [r7]
   36870:	mov	r0, r2
   36874:	pop	{r4, r5, r6, r7, fp, pc}
   36878:	mov	r0, #0
   3687c:	str	r0, [r7]
   36880:	mov	r0, r5
   36884:	pop	{r4, r5, r6, r7, fp, pc}
   36888:	mov	r0, #0
   3688c:	str	r0, [r7]
   36890:	ldrb	r0, [r2]
   36894:	cmp	r0, #44	; 0x2c
   36898:	cmpne	r0, #93	; 0x5d
   3689c:	beq	36870 <flatcc_json_parser_match_constant@@Base+0x124>
   368a0:	cmp	r0, #125	; 0x7d
   368a4:	movne	r2, r4
   368a8:	mov	r0, r2
   368ac:	pop	{r4, r5, r6, r7, fp, pc}
   368b0:	mov	r1, #0
   368b4:	str	r1, [r7]
   368b8:	ldr	r1, [r0, #24]
   368bc:	cmp	r1, #0
   368c0:	bne	36880 <flatcc_json_parser_match_constant@@Base+0x134>
   368c4:	str	r6, [r0, #36]	; 0x24
   368c8:	add	r3, r6, #1
   368cc:	mov	r1, #18
   368d0:	ldr	r2, [r0, #4]
   368d4:	sub	r2, r3, r2
   368d8:	str	r2, [r0, #20]
   368dc:	str	r1, [r0, #24]
   368e0:	mov	r0, r5
   368e4:	pop	{r4, r5, r6, r7, fp, pc}
   368e8:	bne	368fc <flatcc_json_parser_match_constant@@Base+0x1b0>
   368ec:	ldrb	r2, [r6, #2]!
   368f0:	cmp	r2, #32
   368f4:	mov	r2, r6
   368f8:	bhi	36908 <flatcc_json_parser_match_constant@@Base+0x1bc>
   368fc:	mov	r2, #0
   36900:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   36904:	mov	r2, r0
   36908:	mov	r0, #0
   3690c:	str	r0, [r7]
   36910:	mov	r0, r2
   36914:	pop	{r4, r5, r6, r7, fp, pc}
   36918:	mov	r0, #1
   3691c:	sub	r2, r1, #1
   36920:	str	r0, [r7]
   36924:	mov	r0, r2
   36928:	pop	{r4, r5, r6, r7, fp, pc}

0003692c <flatcc_json_parser_unmatched_symbol@@Base>:
   3692c:	push	{r4, r5, r6, sl, fp, lr}
   36930:	add	fp, sp, #16
   36934:	mov	r6, r0
   36938:	ldrb	r0, [r0, #8]
   3693c:	mov	r4, r2
   36940:	tst	r0, #1
   36944:	bne	3696c <flatcc_json_parser_unmatched_symbol@@Base+0x40>
   36948:	ldr	r0, [r6, #24]
   3694c:	cmp	r0, #0
   36950:	bne	36b30 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   36954:	str	r1, [r6, #36]	; 0x24
   36958:	add	r1, r1, #1
   3695c:	mov	r0, #13
   36960:	ldr	r2, [r6, #4]
   36964:	sub	r1, r1, r2
   36968:	b	36b4c <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   3696c:	ldr	r0, [r6, #12]
   36970:	cmp	r0, #0
   36974:	beq	36a00 <flatcc_json_parser_unmatched_symbol@@Base+0xd4>
   36978:	cmp	r1, r4
   3697c:	beq	369f8 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   36980:	ldrb	r3, [r1]
   36984:	cmp	r3, #33	; 0x21
   36988:	bcc	369f8 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   3698c:	add	r0, r1, #1
   36990:	uxtb	r2, r3
   36994:	cmp	r2, #46	; 0x2e
   36998:	cmpne	r2, #95	; 0x5f
   3699c:	bne	369bc <flatcc_json_parser_unmatched_symbol@@Base+0x90>
   369a0:	cmp	r4, r0
   369a4:	beq	36a60 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   369a8:	ldrb	r3, [r0], #1
   369ac:	add	r1, r1, #1
   369b0:	cmp	r3, #33	; 0x21
   369b4:	bcs	36990 <flatcc_json_parser_unmatched_symbol@@Base+0x64>
   369b8:	b	36a64 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   369bc:	sxtb	r5, r3
   369c0:	cmp	r5, #0
   369c4:	blt	369a0 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   369c8:	sub	r5, r3, #48	; 0x30
   369cc:	uxtb	r5, r5
   369d0:	cmp	r5, #9
   369d4:	bls	369a0 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   369d8:	orr	r3, r3, #32
   369dc:	sub	r3, r3, #97	; 0x61
   369e0:	uxtb	r3, r3
   369e4:	cmp	r3, #26
   369e8:	bcc	369a0 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   369ec:	sub	r1, r0, #1
   369f0:	cmp	r2, #46	; 0x2e
   369f4:	beq	36a6c <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   369f8:	mov	r2, r1
   369fc:	b	36a9c <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   36a00:	cmp	r1, r4
   36a04:	beq	36a40 <flatcc_json_parser_unmatched_symbol@@Base+0x114>
   36a08:	ldrb	r0, [r1]
   36a0c:	cmp	r0, #92	; 0x5c
   36a10:	beq	36a20 <flatcc_json_parser_unmatched_symbol@@Base+0xf4>
   36a14:	cmp	r0, #34	; 0x22
   36a18:	bne	36a30 <flatcc_json_parser_unmatched_symbol@@Base+0x104>
   36a1c:	b	36a58 <flatcc_json_parser_unmatched_symbol@@Base+0x12c>
   36a20:	sub	r0, r4, r1
   36a24:	cmp	r0, #2
   36a28:	blt	36a40 <flatcc_json_parser_unmatched_symbol@@Base+0x114>
   36a2c:	add	r1, r1, #1
   36a30:	add	r1, r1, #1
   36a34:	cmp	r1, r4
   36a38:	bne	36a08 <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
   36a3c:	mov	r1, r4
   36a40:	ldr	r0, [r6, #24]
   36a44:	mov	r2, r4
   36a48:	cmp	r0, #0
   36a4c:	bne	36a9c <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   36a50:	mov	r0, #20
   36a54:	b	36a80 <flatcc_json_parser_unmatched_symbol@@Base+0x154>
   36a58:	add	r2, r1, #1
   36a5c:	b	36a9c <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   36a60:	mov	r1, r4
   36a64:	cmp	r2, #46	; 0x2e
   36a68:	bne	369f8 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   36a6c:	ldr	r0, [r6, #24]
   36a70:	mov	r2, r4
   36a74:	cmp	r0, #0
   36a78:	bne	36a9c <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   36a7c:	mov	r0, #5
   36a80:	str	r1, [r6, #36]	; 0x24
   36a84:	add	r1, r1, #1
   36a88:	ldr	r2, [r6, #4]
   36a8c:	sub	r1, r1, r2
   36a90:	mov	r2, r4
   36a94:	str	r1, [r6, #20]
   36a98:	str	r0, [r6, #24]
   36a9c:	sub	r0, r4, r2
   36aa0:	cmp	r0, #2
   36aa4:	blt	36ad8 <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   36aa8:	ldrb	r0, [r2]
   36aac:	cmp	r0, #32
   36ab0:	bls	36ac4 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   36ab4:	mov	r3, r2
   36ab8:	cmp	r3, r4
   36abc:	bne	36af4 <flatcc_json_parser_unmatched_symbol@@Base+0x1c8>
   36ac0:	b	36b24 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   36ac4:	bne	36ad8 <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   36ac8:	mov	r3, r2
   36acc:	ldrb	r0, [r3, #1]!
   36ad0:	cmp	r0, #32
   36ad4:	bhi	36aec <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   36ad8:	mov	r1, r2
   36adc:	mov	r0, r6
   36ae0:	mov	r2, r4
   36ae4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   36ae8:	mov	r3, r0
   36aec:	cmp	r3, r4
   36af0:	beq	36b24 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   36af4:	ldrb	r0, [r3]
   36af8:	cmp	r0, #58	; 0x3a
   36afc:	bne	36b24 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   36b00:	add	r1, r3, #1
   36b04:	sub	r0, r4, r1
   36b08:	cmp	r0, #2
   36b0c:	blt	36b6c <flatcc_json_parser_unmatched_symbol@@Base+0x240>
   36b10:	ldrb	r0, [r1]
   36b14:	cmp	r0, #32
   36b18:	bls	36b5c <flatcc_json_parser_unmatched_symbol@@Base+0x230>
   36b1c:	mov	r3, r1
   36b20:	b	36b7c <flatcc_json_parser_unmatched_symbol@@Base+0x250>
   36b24:	ldr	r0, [r6, #24]
   36b28:	cmp	r0, #0
   36b2c:	beq	36b38 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   36b30:	mov	r0, r4
   36b34:	pop	{r4, r5, r6, sl, fp, pc}
   36b38:	str	r3, [r6, #36]	; 0x24
   36b3c:	add	r2, r3, #1
   36b40:	mov	r0, #4
   36b44:	ldr	r1, [r6, #4]
   36b48:	sub	r1, r2, r1
   36b4c:	str	r1, [r6, #20]
   36b50:	str	r0, [r6, #24]
   36b54:	mov	r0, r4
   36b58:	pop	{r4, r5, r6, sl, fp, pc}
   36b5c:	bne	36b6c <flatcc_json_parser_unmatched_symbol@@Base+0x240>
   36b60:	ldrb	r0, [r3, #2]!
   36b64:	cmp	r0, #32
   36b68:	bhi	36b7c <flatcc_json_parser_unmatched_symbol@@Base+0x250>
   36b6c:	mov	r0, r6
   36b70:	mov	r2, r4
   36b74:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   36b78:	mov	r3, r0
   36b7c:	mov	r0, r6
   36b80:	mov	r1, r3
   36b84:	mov	r2, r4
   36b88:	pop	{r4, r5, r6, sl, fp, lr}
   36b8c:	b	36b90 <flatcc_json_parser_generic_json@@Base>

00036b90 <flatcc_json_parser_generic_json@@Base>:
   36b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36b94:	add	fp, sp, #28
   36b98:	sub	sp, sp, #540	; 0x21c
   36b9c:	mov	r7, r1
   36ba0:	cmp	r1, r2
   36ba4:	beq	377f8 <flatcc_json_parser_generic_json@@Base+0xc68>
   36ba8:	mov	r5, r0
   36bac:	add	r0, r2, #1
   36bb0:	add	r1, sp, #24
   36bb4:	mov	r6, r2
   36bb8:	mov	r8, #0
   36bbc:	str	r0, [sp, #4]
   36bc0:	add	r0, r5, #36	; 0x24
   36bc4:	sub	sl, r1, #1
   36bc8:	add	r9, r5, #24
   36bcc:	str	r0, [sp, #16]
   36bd0:	add	r0, r5, #20
   36bd4:	str	r0, [sp, #12]
   36bd8:	add	r0, r5, #4
   36bdc:	str	r0, [sp, #8]
   36be0:	mov	r0, r1
   36be4:	cmp	r8, #0
   36be8:	beq	36e74 <flatcc_json_parser_generic_json@@Base+0x2e4>
   36bec:	ldrb	r0, [r0, #-1]
   36bf0:	cmp	r0, #125	; 0x7d
   36bf4:	bne	36e74 <flatcc_json_parser_generic_json@@Base+0x2e4>
   36bf8:	ldrb	r0, [r7]
   36bfc:	cmp	r0, #46	; 0x2e
   36c00:	beq	36c60 <flatcc_json_parser_generic_json@@Base+0xd0>
   36c04:	cmp	r0, #34	; 0x22
   36c08:	bne	36cac <flatcc_json_parser_generic_json@@Base+0x11c>
   36c0c:	mov	r0, #0
   36c10:	mov	r2, r6
   36c14:	str	r0, [r5, #12]
   36c18:	add	r0, r7, #1
   36c1c:	cmp	r0, r6
   36c20:	beq	36d94 <flatcc_json_parser_generic_json@@Base+0x204>
   36c24:	ldrb	r1, [r0]
   36c28:	cmp	r1, #92	; 0x5c
   36c2c:	beq	36c3c <flatcc_json_parser_generic_json@@Base+0xac>
   36c30:	cmp	r1, #34	; 0x22
   36c34:	bne	36c4c <flatcc_json_parser_generic_json@@Base+0xbc>
   36c38:	b	36d40 <flatcc_json_parser_generic_json@@Base+0x1b0>
   36c3c:	sub	r1, r6, r0
   36c40:	cmp	r1, #2
   36c44:	blt	36d90 <flatcc_json_parser_generic_json@@Base+0x200>
   36c48:	add	r0, r0, #1
   36c4c:	add	r0, r0, #1
   36c50:	cmp	r0, r6
   36c54:	bne	36c24 <flatcc_json_parser_generic_json@@Base+0x94>
   36c58:	mov	r2, r6
   36c5c:	b	36d94 <flatcc_json_parser_generic_json@@Base+0x204>
   36c60:	ldr	r0, [r9]
   36c64:	cmp	r0, #0
   36c68:	bne	36c94 <flatcc_json_parser_generic_json@@Base+0x104>
   36c6c:	mov	r0, #5
   36c70:	add	r1, r7, #1
   36c74:	str	r0, [r9]
   36c78:	ldr	r0, [sp, #8]
   36c7c:	ldr	r0, [r0]
   36c80:	sub	r0, r1, r0
   36c84:	ldr	r1, [sp, #12]
   36c88:	str	r0, [r1]
   36c8c:	ldr	r0, [sp, #16]
   36c90:	str	r7, [r0]
   36c94:	ldr	r0, [r5, #12]
   36c98:	mov	r2, r6
   36c9c:	mov	r1, r6
   36ca0:	cmp	r0, #0
   36ca4:	bne	36dd0 <flatcc_json_parser_generic_json@@Base+0x240>
   36ca8:	b	36d94 <flatcc_json_parser_generic_json@@Base+0x204>
   36cac:	mov	r0, #1
   36cb0:	cmp	r7, r6
   36cb4:	mov	r1, r6
   36cb8:	str	r0, [r5, #12]
   36cbc:	beq	36dd0 <flatcc_json_parser_generic_json@@Base+0x240>
   36cc0:	ldrb	r2, [r7]
   36cc4:	cmp	r2, #33	; 0x21
   36cc8:	bcc	36d38 <flatcc_json_parser_generic_json@@Base+0x1a8>
   36ccc:	add	r0, r7, #1
   36cd0:	uxtb	r1, r2
   36cd4:	cmp	r1, #46	; 0x2e
   36cd8:	cmpne	r1, #95	; 0x5f
   36cdc:	bne	36cfc <flatcc_json_parser_generic_json@@Base+0x16c>
   36ce0:	cmp	r6, r0
   36ce4:	beq	36d48 <flatcc_json_parser_generic_json@@Base+0x1b8>
   36ce8:	ldrb	r2, [r0], #1
   36cec:	add	r7, r7, #1
   36cf0:	cmp	r2, #33	; 0x21
   36cf4:	bcs	36cd0 <flatcc_json_parser_generic_json@@Base+0x140>
   36cf8:	b	36d4c <flatcc_json_parser_generic_json@@Base+0x1bc>
   36cfc:	sxtb	r3, r2
   36d00:	cmp	r3, #0
   36d04:	blt	36ce0 <flatcc_json_parser_generic_json@@Base+0x150>
   36d08:	sub	r3, r2, #48	; 0x30
   36d0c:	uxtb	r3, r3
   36d10:	cmp	r3, #9
   36d14:	bls	36ce0 <flatcc_json_parser_generic_json@@Base+0x150>
   36d18:	orr	r2, r2, #32
   36d1c:	sub	r2, r2, #97	; 0x61
   36d20:	uxtb	r2, r2
   36d24:	cmp	r2, #26
   36d28:	bcc	36ce0 <flatcc_json_parser_generic_json@@Base+0x150>
   36d2c:	sub	r7, r0, #1
   36d30:	cmp	r1, #46	; 0x2e
   36d34:	beq	36d54 <flatcc_json_parser_generic_json@@Base+0x1c4>
   36d38:	mov	r1, r7
   36d3c:	b	36dd0 <flatcc_json_parser_generic_json@@Base+0x240>
   36d40:	add	r1, r0, #1
   36d44:	b	36dd0 <flatcc_json_parser_generic_json@@Base+0x240>
   36d48:	mov	r7, r6
   36d4c:	cmp	r1, #46	; 0x2e
   36d50:	bne	36d38 <flatcc_json_parser_generic_json@@Base+0x1a8>
   36d54:	ldr	r0, [r9]
   36d58:	mov	r1, r6
   36d5c:	cmp	r0, #0
   36d60:	bne	36dd0 <flatcc_json_parser_generic_json@@Base+0x240>
   36d64:	mov	r0, #5
   36d68:	add	r1, r7, #1
   36d6c:	str	r0, [r9]
   36d70:	ldr	r0, [sp, #8]
   36d74:	ldr	r0, [r0]
   36d78:	sub	r0, r1, r0
   36d7c:	ldr	r1, [sp, #12]
   36d80:	str	r0, [r1]
   36d84:	ldr	r0, [sp, #16]
   36d88:	str	r7, [r0]
   36d8c:	b	36dcc <flatcc_json_parser_generic_json@@Base+0x23c>
   36d90:	mov	r2, r0
   36d94:	ldr	r0, [r9]
   36d98:	mov	r1, r6
   36d9c:	cmp	r0, #0
   36da0:	bne	36dd0 <flatcc_json_parser_generic_json@@Base+0x240>
   36da4:	mov	r0, #20
   36da8:	add	r1, r2, #1
   36dac:	str	r0, [r9]
   36db0:	ldr	r0, [sp, #8]
   36db4:	ldr	r0, [r0]
   36db8:	sub	r0, r1, r0
   36dbc:	ldr	r1, [sp, #12]
   36dc0:	str	r0, [r1]
   36dc4:	ldr	r0, [sp, #16]
   36dc8:	str	r2, [r0]
   36dcc:	mov	r1, r6
   36dd0:	sub	r0, r6, r1
   36dd4:	cmp	r0, #2
   36dd8:	blt	36e0c <flatcc_json_parser_generic_json@@Base+0x27c>
   36ddc:	ldrb	r0, [r1]
   36de0:	cmp	r0, #32
   36de4:	bls	36df8 <flatcc_json_parser_generic_json@@Base+0x268>
   36de8:	mov	r7, r1
   36dec:	cmp	r7, r6
   36df0:	bne	36e24 <flatcc_json_parser_generic_json@@Base+0x294>
   36df4:	b	3787c <flatcc_json_parser_generic_json@@Base+0xcec>
   36df8:	bne	36e0c <flatcc_json_parser_generic_json@@Base+0x27c>
   36dfc:	mov	r7, r1
   36e00:	ldrb	r0, [r7, #1]!
   36e04:	cmp	r0, #32
   36e08:	bhi	36e1c <flatcc_json_parser_generic_json@@Base+0x28c>
   36e0c:	mov	r0, r5
   36e10:	mov	r2, r6
   36e14:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   36e18:	mov	r7, r0
   36e1c:	cmp	r7, r6
   36e20:	beq	3787c <flatcc_json_parser_generic_json@@Base+0xcec>
   36e24:	ldrb	r0, [r7]
   36e28:	cmp	r0, #58	; 0x3a
   36e2c:	bne	37894 <flatcc_json_parser_generic_json@@Base+0xd04>
   36e30:	add	r1, r7, #1
   36e34:	sub	r0, r6, r1
   36e38:	cmp	r0, #2
   36e3c:	blt	36e64 <flatcc_json_parser_generic_json@@Base+0x2d4>
   36e40:	ldrb	r2, [r1]
   36e44:	cmp	r2, #32
   36e48:	bls	36e54 <flatcc_json_parser_generic_json@@Base+0x2c4>
   36e4c:	mov	r7, r1
   36e50:	b	36e78 <flatcc_json_parser_generic_json@@Base+0x2e8>
   36e54:	bne	36e64 <flatcc_json_parser_generic_json@@Base+0x2d4>
   36e58:	ldrb	r2, [r7, #2]!
   36e5c:	cmp	r2, #32
   36e60:	bhi	36e78 <flatcc_json_parser_generic_json@@Base+0x2e8>
   36e64:	mov	r0, r5
   36e68:	mov	r2, r6
   36e6c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   36e70:	mov	r7, r0
   36e74:	ldrb	r2, [r7]
   36e78:	sub	r0, r2, #48	; 0x30
   36e7c:	cmp	r0, #10
   36e80:	bcs	36f1c <flatcc_json_parser_generic_json@@Base+0x38c>
   36e84:	cmp	r7, r6
   36e88:	beq	372d8 <flatcc_json_parser_generic_json@@Base+0x748>
   36e8c:	cmp	r2, #45	; 0x2d
   36e90:	bne	36ea4 <flatcc_json_parser_generic_json@@Base+0x314>
   36e94:	add	r7, r7, #1
   36e98:	cmp	r7, r6
   36e9c:	beq	372b4 <flatcc_json_parser_generic_json@@Base+0x724>
   36ea0:	ldrb	r2, [r7]
   36ea4:	cmp	r2, #48	; 0x30
   36ea8:	bne	36f38 <flatcc_json_parser_generic_json@@Base+0x3a8>
   36eac:	add	r4, r7, #1
   36eb0:	cmp	r4, r6
   36eb4:	mov	r1, r6
   36eb8:	beq	372cc <flatcc_json_parser_generic_json@@Base+0x73c>
   36ebc:	ldrb	r0, [r4]
   36ec0:	cmp	r0, #46	; 0x2e
   36ec4:	bne	37150 <flatcc_json_parser_generic_json@@Base+0x5c0>
   36ec8:	mov	r0, r4
   36ecc:	ldrb	r1, [r0, #1]!
   36ed0:	sub	r1, r1, #48	; 0x30
   36ed4:	uxtb	r1, r1
   36ed8:	cmp	r1, #10
   36edc:	bcc	3711c <flatcc_json_parser_generic_json@@Base+0x58c>
   36ee0:	ldr	r1, [r9]
   36ee4:	cmp	r1, #0
   36ee8:	bne	372d8 <flatcc_json_parser_generic_json@@Base+0x748>
   36eec:	mov	r1, #6
   36ef0:	add	r2, r0, #1
   36ef4:	mov	r4, r6
   36ef8:	str	r1, [r9]
   36efc:	ldr	r1, [sp, #8]
   36f00:	ldr	r1, [r1]
   36f04:	sub	r1, r2, r1
   36f08:	ldr	r2, [sp, #12]
   36f0c:	str	r1, [r2]
   36f10:	ldr	r1, [sp, #16]
   36f14:	str	r0, [r1]
   36f18:	b	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   36f1c:	cmp	r2, #90	; 0x5a
   36f20:	bgt	36f80 <flatcc_json_parser_generic_json@@Base+0x3f0>
   36f24:	cmp	r2, #34	; 0x22
   36f28:	beq	36ff8 <flatcc_json_parser_generic_json@@Base+0x468>
   36f2c:	cmp	r2, #45	; 0x2d
   36f30:	beq	36e84 <flatcc_json_parser_generic_json@@Base+0x2f4>
   36f34:	b	3705c <flatcc_json_parser_generic_json@@Base+0x4cc>
   36f38:	sub	r0, r2, #49	; 0x31
   36f3c:	uxtb	r0, r0
   36f40:	cmp	r0, #8
   36f44:	bls	36fd0 <flatcc_json_parser_generic_json@@Base+0x440>
   36f48:	ldr	r0, [r9]
   36f4c:	cmp	r0, #0
   36f50:	bne	372d8 <flatcc_json_parser_generic_json@@Base+0x748>
   36f54:	mov	r0, #6
   36f58:	add	r1, r7, #1
   36f5c:	str	r0, [r9]
   36f60:	ldr	r0, [sp, #8]
   36f64:	ldr	r0, [r0]
   36f68:	sub	r0, r1, r0
   36f6c:	ldr	r1, [sp, #12]
   36f70:	str	r0, [r1]
   36f74:	ldr	r0, [sp, #16]
   36f78:	str	r7, [r0]
   36f7c:	b	372d8 <flatcc_json_parser_generic_json@@Base+0x748>
   36f80:	cmp	r2, #91	; 0x5b
   36f84:	beq	3701c <flatcc_json_parser_generic_json@@Base+0x48c>
   36f88:	cmp	r2, #123	; 0x7b
   36f8c:	bne	3705c <flatcc_json_parser_generic_json@@Base+0x4cc>
   36f90:	cmp	r8, #512	; 0x200
   36f94:	beq	378a8 <flatcc_json_parser_generic_json@@Base+0xd18>
   36f98:	add	r0, sp, #24
   36f9c:	mov	r1, #125	; 0x7d
   36fa0:	strb	r1, [r0, r8]
   36fa4:	add	r1, r7, #1
   36fa8:	sub	r0, r6, r1
   36fac:	cmp	r0, #2
   36fb0:	blt	3762c <flatcc_json_parser_generic_json@@Base+0xa9c>
   36fb4:	ldrb	r0, [r1]
   36fb8:	cmp	r0, #32
   36fbc:	bls	3761c <flatcc_json_parser_generic_json@@Base+0xa8c>
   36fc0:	mov	r7, r1
   36fc4:	cmp	r7, r6
   36fc8:	bne	37644 <flatcc_json_parser_generic_json@@Base+0xab4>
   36fcc:	b	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   36fd0:	add	r0, r7, #1
   36fd4:	cmp	r6, r0
   36fd8:	beq	372c8 <flatcc_json_parser_generic_json@@Base+0x738>
   36fdc:	ldrb	r1, [r0], #1
   36fe0:	sub	r1, r1, #48	; 0x30
   36fe4:	uxtb	r1, r1
   36fe8:	cmp	r1, #10
   36fec:	bcc	36fd4 <flatcc_json_parser_generic_json@@Base+0x444>
   36ff0:	sub	r4, r0, #1
   36ff4:	b	36eb0 <flatcc_json_parser_generic_json@@Base+0x320>
   36ff8:	cmp	r7, r6
   36ffc:	beq	375e0 <flatcc_json_parser_generic_json@@Base+0xa50>
   37000:	add	r0, r7, #1
   37004:	mov	r1, r6
   37008:	add	r4, sp, #20
   3700c:	mov	r7, #17
   37010:	cmp	r0, r6
   37014:	bne	376ec <flatcc_json_parser_generic_json@@Base+0xb5c>
   37018:	b	377cc <flatcc_json_parser_generic_json@@Base+0xc3c>
   3701c:	cmp	r8, #512	; 0x200
   37020:	beq	378a8 <flatcc_json_parser_generic_json@@Base+0xd18>
   37024:	add	r0, sp, #24
   37028:	mov	r1, #93	; 0x5d
   3702c:	strb	r1, [r0, r8]
   37030:	add	r1, r7, #1
   37034:	sub	r0, r6, r1
   37038:	cmp	r0, #2
   3703c:	blt	3766c <flatcc_json_parser_generic_json@@Base+0xadc>
   37040:	ldrb	r0, [r1]
   37044:	cmp	r0, #32
   37048:	bls	3765c <flatcc_json_parser_generic_json@@Base+0xacc>
   3704c:	mov	r7, r1
   37050:	cmp	r7, r6
   37054:	bne	37684 <flatcc_json_parser_generic_json@@Base+0xaf4>
   37058:	b	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   3705c:	cmp	r7, r6
   37060:	mov	r4, r6
   37064:	beq	37110 <flatcc_json_parser_generic_json@@Base+0x580>
   37068:	mov	r4, r7
   3706c:	b	37078 <flatcc_json_parser_generic_json@@Base+0x4e8>
   37070:	ldrb	r2, [r0]
   37074:	mov	r4, r0
   37078:	sxtb	r0, r2
   3707c:	cmp	r0, #0
   37080:	blt	37094 <flatcc_json_parser_generic_json@@Base+0x504>
   37084:	uxtb	r0, r2
   37088:	cmp	r0, #95	; 0x5f
   3708c:	cmpne	r0, #46	; 0x2e
   37090:	bne	370a4 <flatcc_json_parser_generic_json@@Base+0x514>
   37094:	add	r0, r4, #1
   37098:	cmp	r0, r6
   3709c:	bne	37070 <flatcc_json_parser_generic_json@@Base+0x4e0>
   370a0:	b	3710c <flatcc_json_parser_generic_json@@Base+0x57c>
   370a4:	sub	r1, r2, #48	; 0x30
   370a8:	uxtb	r1, r1
   370ac:	cmp	r1, #9
   370b0:	bls	37094 <flatcc_json_parser_generic_json@@Base+0x504>
   370b4:	orr	r1, r2, #32
   370b8:	sub	r1, r1, #97	; 0x61
   370bc:	uxtb	r1, r1
   370c0:	cmp	r1, #25
   370c4:	bls	37094 <flatcc_json_parser_generic_json@@Base+0x504>
   370c8:	sub	r1, r6, r4
   370cc:	cmp	r1, #2
   370d0:	blt	370f0 <flatcc_json_parser_generic_json@@Base+0x560>
   370d4:	cmp	r0, #32
   370d8:	bhi	37110 <flatcc_json_parser_generic_json@@Base+0x580>
   370dc:	bne	370f0 <flatcc_json_parser_generic_json@@Base+0x560>
   370e0:	mov	r0, r4
   370e4:	ldrb	r1, [r0, #1]!
   370e8:	cmp	r1, #32
   370ec:	bhi	37098 <flatcc_json_parser_generic_json@@Base+0x508>
   370f0:	mov	r0, r5
   370f4:	mov	r1, r4
   370f8:	mov	r2, r6
   370fc:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   37100:	cmp	r0, r4
   37104:	bne	37098 <flatcc_json_parser_generic_json@@Base+0x508>
   37108:	b	37110 <flatcc_json_parser_generic_json@@Base+0x580>
   3710c:	mov	r4, r6
   37110:	cmp	r7, r4
   37114:	bne	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   37118:	b	378bc <flatcc_json_parser_generic_json@@Base+0xd2c>
   3711c:	add	r4, r4, #2
   37120:	mov	r1, r6
   37124:	cmp	r4, r6
   37128:	beq	372cc <flatcc_json_parser_generic_json@@Base+0x73c>
   3712c:	ldrb	r0, [r4]
   37130:	sub	r1, r0, #48	; 0x30
   37134:	uxtb	r1, r1
   37138:	cmp	r1, #9
   3713c:	bhi	37150 <flatcc_json_parser_generic_json@@Base+0x5c0>
   37140:	add	r4, r4, #1
   37144:	cmp	r6, r4
   37148:	bne	3712c <flatcc_json_parser_generic_json@@Base+0x59c>
   3714c:	b	372c8 <flatcc_json_parser_generic_json@@Base+0x738>
   37150:	cmp	r4, r6
   37154:	mov	r1, r6
   37158:	beq	372cc <flatcc_json_parser_generic_json@@Base+0x73c>
   3715c:	orr	r1, r0, #32
   37160:	cmp	r1, #101	; 0x65
   37164:	bne	371c4 <flatcc_json_parser_generic_json@@Base+0x634>
   37168:	add	r0, r4, #1
   3716c:	cmp	r0, r6
   37170:	beq	372b4 <flatcc_json_parser_generic_json@@Base+0x724>
   37174:	ldrb	r1, [r0]
   37178:	cmp	r1, #45	; 0x2d
   3717c:	cmpne	r1, #43	; 0x2b
   37180:	addeq	r0, r4, #2
   37184:	cmp	r0, r6
   37188:	beq	36ee0 <flatcc_json_parser_generic_json@@Base+0x350>
   3718c:	ldrb	r1, [r0]
   37190:	sub	r1, r1, #48	; 0x30
   37194:	uxtb	r1, r1
   37198:	cmp	r1, #9
   3719c:	bhi	36ee0 <flatcc_json_parser_generic_json@@Base+0x350>
   371a0:	add	r1, r0, #1
   371a4:	cmp	r6, r1
   371a8:	beq	372c8 <flatcc_json_parser_generic_json@@Base+0x738>
   371ac:	ldrb	r0, [r1], #1
   371b0:	sub	r2, r0, #48	; 0x30
   371b4:	uxtb	r2, r2
   371b8:	cmp	r2, #10
   371bc:	bcc	371a4 <flatcc_json_parser_generic_json@@Base+0x614>
   371c0:	sub	r4, r1, #1
   371c4:	cmp	r4, r6
   371c8:	mov	r1, r6
   371cc:	beq	372cc <flatcc_json_parser_generic_json@@Base+0x73c>
   371d0:	sub	r1, r0, #9
   371d4:	cmp	r1, #49	; 0x31
   371d8:	bhi	377e0 <flatcc_json_parser_generic_json@@Base+0xc50>
   371dc:	add	r0, pc, #8
   371e0:	ldr	r2, [r0, r1, lsl #2]
   371e4:	mov	r1, r4
   371e8:	add	pc, r0, r2
   371ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   371f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   371f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   371f8:	andeq	r0, r0, r0, ror #1
   371fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   37200:	andeq	r0, r0, r0, ror #1
   37204:	andeq	r0, r0, r0, ror #1
   37208:	andeq	r0, r0, r0, ror #1
   3720c:	andeq	r0, r0, r0, ror #1
   37210:	andeq	r0, r0, r0, ror #1
   37214:	andeq	r0, r0, r0, ror #1
   37218:	andeq	r0, r0, r0, ror #1
   3721c:	andeq	r0, r0, r0, ror #1
   37220:	andeq	r0, r0, r0, ror #1
   37224:	andeq	r0, r0, r0, ror #1
   37228:	andeq	r0, r0, r0, ror #1
   3722c:	andeq	r0, r0, r0, ror #1
   37230:	andeq	r0, r0, r0, ror #1
   37234:	andeq	r0, r0, r0, ror #1
   37238:	andeq	r0, r0, r0, ror #1
   3723c:	andeq	r0, r0, r0, ror #1
   37240:	andeq	r0, r0, r0, ror #1
   37244:	andeq	r0, r0, r0, ror #1
   37248:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3724c:	andeq	r0, r0, r0, ror #1
   37250:	andeq	r0, r0, r0, ror #1
   37254:	andeq	r0, r0, r0, ror #1
   37258:	andeq	r0, r0, r0, ror #1
   3725c:	andeq	r0, r0, r0, ror #1
   37260:	andeq	r0, r0, r0, ror #1
   37264:	andeq	r0, r0, r0, ror #1
   37268:	andeq	r0, r0, r0, ror #1
   3726c:	andeq	r0, r0, r0, ror #1
   37270:	andeq	r0, r0, r0, ror #1
   37274:	andeq	r0, r0, r0, ror #1
   37278:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3727c:	andeq	r0, r0, r0, ror #1
   37280:	andeq	r0, r0, r0, ror #1
   37284:	andeq	r0, r0, r0, ror #1
   37288:	andeq	r0, r0, r0, ror #1
   3728c:	andeq	r0, r0, r0, ror #1
   37290:	andeq	r0, r0, r0, ror #1
   37294:	andeq	r0, r0, r0, ror #1
   37298:	andeq	r0, r0, r0, ror #1
   3729c:	andeq	r0, r0, r0, ror #1
   372a0:	andeq	r0, r0, r0, ror #1
   372a4:	andeq	r0, r0, r0, ror #1
   372a8:	andeq	r0, r0, r0, ror #1
   372ac:	andeq	r0, r0, r0, ror #1
   372b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   372b4:	ldr	r0, [r9]
   372b8:	cmp	r0, #0
   372bc:	bne	372d8 <flatcc_json_parser_generic_json@@Base+0x748>
   372c0:	mov	r0, #6
   372c4:	b	375f0 <flatcc_json_parser_generic_json@@Base+0xa60>
   372c8:	mov	r1, r6
   372cc:	ldr	r0, [r9]
   372d0:	cmp	r0, #0
   372d4:	beq	375b0 <flatcc_json_parser_generic_json@@Base+0xa20>
   372d8:	mov	r4, r6
   372dc:	subs	r1, r4, r6
   372e0:	mov	r2, r8
   372e4:	movwne	r1, #1
   372e8:	cmp	r8, #0
   372ec:	movwne	r2, #1
   372f0:	beq	37800 <flatcc_json_parser_generic_json@@Base+0xc70>
   372f4:	cmp	r4, r6
   372f8:	beq	37810 <flatcc_json_parser_generic_json@@Base+0xc80>
   372fc:	ldrb	r1, [sl, r8]
   37300:	sub	r0, r6, r4
   37304:	cmp	r1, #93	; 0x5d
   37308:	bne	37328 <flatcc_json_parser_generic_json@@Base+0x798>
   3730c:	cmp	r0, #2
   37310:	blt	37358 <flatcc_json_parser_generic_json@@Base+0x7c8>
   37314:	ldrb	r0, [r4]
   37318:	cmp	r0, #32
   3731c:	bls	37344 <flatcc_json_parser_generic_json@@Base+0x7b4>
   37320:	mov	r7, r4
   37324:	b	3736c <flatcc_json_parser_generic_json@@Base+0x7dc>
   37328:	cmp	r0, #2
   3732c:	blt	373b8 <flatcc_json_parser_generic_json@@Base+0x828>
   37330:	ldrb	r0, [r4]
   37334:	cmp	r0, #32
   37338:	bls	373a4 <flatcc_json_parser_generic_json@@Base+0x814>
   3733c:	mov	r7, r4
   37340:	b	373cc <flatcc_json_parser_generic_json@@Base+0x83c>
   37344:	bne	37358 <flatcc_json_parser_generic_json@@Base+0x7c8>
   37348:	mov	r7, r4
   3734c:	ldrb	r0, [r7, #1]!
   37350:	cmp	r0, #32
   37354:	bhi	3736c <flatcc_json_parser_generic_json@@Base+0x7dc>
   37358:	mov	r0, r5
   3735c:	mov	r1, r4
   37360:	mov	r2, r6
   37364:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   37368:	mov	r7, r0
   3736c:	cmp	r7, r6
   37370:	mov	r4, r6
   37374:	beq	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   37378:	ldrb	r0, [r7]
   3737c:	cmp	r0, #44	; 0x2c
   37380:	beq	3742c <flatcc_json_parser_generic_json@@Base+0x89c>
   37384:	cmp	r0, #93	; 0x5d
   37388:	beq	37540 <flatcc_json_parser_generic_json@@Base+0x9b0>
   3738c:	ldr	r0, [r9]
   37390:	mov	r4, r6
   37394:	cmp	r0, #0
   37398:	bne	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   3739c:	mov	r0, #9
   373a0:	b	37400 <flatcc_json_parser_generic_json@@Base+0x870>
   373a4:	bne	373b8 <flatcc_json_parser_generic_json@@Base+0x828>
   373a8:	mov	r7, r4
   373ac:	ldrb	r0, [r7, #1]!
   373b0:	cmp	r0, #32
   373b4:	bhi	373cc <flatcc_json_parser_generic_json@@Base+0x83c>
   373b8:	mov	r0, r5
   373bc:	mov	r1, r4
   373c0:	mov	r2, r6
   373c4:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   373c8:	mov	r7, r0
   373cc:	cmp	r7, r6
   373d0:	mov	r4, r6
   373d4:	beq	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   373d8:	ldrb	r0, [r7]
   373dc:	cmp	r0, #44	; 0x2c
   373e0:	beq	3746c <flatcc_json_parser_generic_json@@Base+0x8dc>
   373e4:	cmp	r0, #125	; 0x7d
   373e8:	beq	37540 <flatcc_json_parser_generic_json@@Base+0x9b0>
   373ec:	ldr	r0, [r9]
   373f0:	mov	r4, r6
   373f4:	cmp	r0, #0
   373f8:	bne	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   373fc:	mov	r0, #10
   37400:	str	r0, [r9]
   37404:	ldr	r0, [sp, #8]
   37408:	add	r1, r7, #1
   3740c:	mov	r4, r6
   37410:	ldr	r0, [r0]
   37414:	sub	r0, r1, r0
   37418:	ldr	r1, [sp, #12]
   3741c:	str	r0, [r1]
   37420:	ldr	r0, [sp, #16]
   37424:	str	r7, [r0]
   37428:	b	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   3742c:	add	r1, r7, #1
   37430:	sub	r0, r6, r1
   37434:	cmp	r0, #2
   37438:	blt	374e4 <flatcc_json_parser_generic_json@@Base+0x954>
   3743c:	ldrb	r0, [r1]
   37440:	cmp	r0, #32
   37444:	bls	374d4 <flatcc_json_parser_generic_json@@Base+0x944>
   37448:	mov	r7, r1
   3744c:	cmp	r7, r6
   37450:	bne	374fc <flatcc_json_parser_generic_json@@Base+0x96c>
   37454:	ldr	r0, [r9]
   37458:	mov	r4, r6
   3745c:	cmp	r0, #0
   37460:	bne	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   37464:	mov	r0, #9
   37468:	b	374a8 <flatcc_json_parser_generic_json@@Base+0x918>
   3746c:	add	r1, r7, #1
   37470:	sub	r0, r6, r1
   37474:	cmp	r0, #2
   37478:	blt	3751c <flatcc_json_parser_generic_json@@Base+0x98c>
   3747c:	ldrb	r0, [r1]
   37480:	cmp	r0, #32
   37484:	bls	3750c <flatcc_json_parser_generic_json@@Base+0x97c>
   37488:	mov	r7, r1
   3748c:	cmp	r7, r6
   37490:	bne	37534 <flatcc_json_parser_generic_json@@Base+0x9a4>
   37494:	ldr	r0, [r9]
   37498:	mov	r4, r6
   3749c:	cmp	r0, #0
   374a0:	bne	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   374a4:	mov	r0, #10
   374a8:	str	r0, [r9]
   374ac:	ldr	r0, [sp, #8]
   374b0:	ldr	r1, [sp, #4]
   374b4:	mov	r4, r6
   374b8:	ldr	r0, [r0]
   374bc:	sub	r0, r1, r0
   374c0:	ldr	r1, [sp, #12]
   374c4:	str	r0, [r1]
   374c8:	ldr	r0, [sp, #16]
   374cc:	str	r6, [r0]
   374d0:	b	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   374d4:	bne	374e4 <flatcc_json_parser_generic_json@@Base+0x954>
   374d8:	ldrb	r0, [r7, #2]!
   374dc:	cmp	r0, #32
   374e0:	bhi	374f4 <flatcc_json_parser_generic_json@@Base+0x964>
   374e4:	mov	r0, r5
   374e8:	mov	r2, r6
   374ec:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   374f0:	mov	r7, r0
   374f4:	cmp	r7, r6
   374f8:	beq	37454 <flatcc_json_parser_generic_json@@Base+0x8c4>
   374fc:	ldrb	r0, [r7]
   37500:	cmp	r0, #93	; 0x5d
   37504:	beq	37540 <flatcc_json_parser_generic_json@@Base+0x9b0>
   37508:	b	37698 <flatcc_json_parser_generic_json@@Base+0xb08>
   3750c:	bne	3751c <flatcc_json_parser_generic_json@@Base+0x98c>
   37510:	ldrb	r0, [r7, #2]!
   37514:	cmp	r0, #32
   37518:	bhi	3752c <flatcc_json_parser_generic_json@@Base+0x99c>
   3751c:	mov	r0, r5
   37520:	mov	r2, r6
   37524:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   37528:	mov	r7, r0
   3752c:	cmp	r7, r6
   37530:	beq	37494 <flatcc_json_parser_generic_json@@Base+0x904>
   37534:	ldrb	r0, [r7]
   37538:	cmp	r0, #125	; 0x7d
   3753c:	bne	37698 <flatcc_json_parser_generic_json@@Base+0xb08>
   37540:	add	r1, r7, #1
   37544:	sub	r0, r6, r1
   37548:	cmp	r0, #2
   3754c:	blt	37578 <flatcc_json_parser_generic_json@@Base+0x9e8>
   37550:	ldrb	r0, [r1]
   37554:	cmp	r0, #32
   37558:	bls	37564 <flatcc_json_parser_generic_json@@Base+0x9d4>
   3755c:	mov	r4, r1
   37560:	b	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   37564:	bne	37578 <flatcc_json_parser_generic_json@@Base+0x9e8>
   37568:	ldrb	r0, [r7, #2]!
   3756c:	cmp	r0, #32
   37570:	mov	r4, r7
   37574:	bhi	37588 <flatcc_json_parser_generic_json@@Base+0x9f8>
   37578:	mov	r0, r5
   3757c:	mov	r2, r6
   37580:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   37584:	mov	r4, r0
   37588:	subs	r1, r4, r6
   3758c:	sub	r0, r8, #1
   37590:	movwne	r1, #1
   37594:	subs	r2, r8, #1
   37598:	movwne	r2, #1
   3759c:	beq	37814 <flatcc_json_parser_generic_json@@Base+0xc84>
   375a0:	cmp	r4, r6
   375a4:	mov	r8, r0
   375a8:	bne	372fc <flatcc_json_parser_generic_json@@Base+0x76c>
   375ac:	b	37814 <flatcc_json_parser_generic_json@@Base+0xc84>
   375b0:	mov	r0, #6
   375b4:	str	r0, [r9]
   375b8:	ldr	r0, [sp, #8]
   375bc:	add	r2, r1, #1
   375c0:	mov	r4, r6
   375c4:	ldr	r0, [r0]
   375c8:	sub	r0, r2, r0
   375cc:	ldr	r2, [sp, #12]
   375d0:	str	r0, [r2]
   375d4:	ldr	r0, [sp, #16]
   375d8:	str	r1, [r0]
   375dc:	b	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   375e0:	ldr	r0, [r9]
   375e4:	cmp	r0, #0
   375e8:	bne	372d8 <flatcc_json_parser_generic_json@@Base+0x748>
   375ec:	mov	r0, #16
   375f0:	str	r0, [r9]
   375f4:	ldr	r0, [sp, #8]
   375f8:	ldr	r1, [sp, #4]
   375fc:	mov	r4, r6
   37600:	ldr	r0, [r0]
   37604:	sub	r0, r1, r0
   37608:	ldr	r1, [sp, #12]
   3760c:	str	r0, [r1]
   37610:	ldr	r0, [sp, #16]
   37614:	str	r6, [r0]
   37618:	b	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   3761c:	bne	3762c <flatcc_json_parser_generic_json@@Base+0xa9c>
   37620:	ldrb	r0, [r7, #2]!
   37624:	cmp	r0, #32
   37628:	bhi	3763c <flatcc_json_parser_generic_json@@Base+0xaac>
   3762c:	mov	r0, r5
   37630:	mov	r2, r6
   37634:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   37638:	mov	r7, r0
   3763c:	cmp	r7, r6
   37640:	beq	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   37644:	ldrb	r0, [r7]
   37648:	add	r8, r8, #1
   3764c:	cmp	r0, #125	; 0x7d
   37650:	mov	r4, r7
   37654:	bne	37698 <flatcc_json_parser_generic_json@@Base+0xb08>
   37658:	b	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   3765c:	bne	3766c <flatcc_json_parser_generic_json@@Base+0xadc>
   37660:	ldrb	r0, [r7, #2]!
   37664:	cmp	r0, #32
   37668:	bhi	3767c <flatcc_json_parser_generic_json@@Base+0xaec>
   3766c:	mov	r0, r5
   37670:	mov	r2, r6
   37674:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   37678:	mov	r7, r0
   3767c:	cmp	r7, r6
   37680:	beq	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   37684:	ldrb	r0, [r7]
   37688:	add	r8, r8, #1
   3768c:	cmp	r0, #93	; 0x5d
   37690:	mov	r4, r7
   37694:	beq	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   37698:	add	r0, sp, #24
   3769c:	cmp	r7, r6
   376a0:	add	r0, r0, r8
   376a4:	bne	36be4 <flatcc_json_parser_generic_json@@Base+0x54>
   376a8:	b	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   376ac:	ldr	r0, [r9]
   376b0:	mov	r1, r6
   376b4:	cmp	r0, #0
   376b8:	bne	3778c <flatcc_json_parser_generic_json@@Base+0xbfc>
   376bc:	mov	r0, #20
   376c0:	ldr	r1, [sp, #4]
   376c4:	str	r0, [r9]
   376c8:	ldr	r0, [sp, #8]
   376cc:	ldr	r0, [r0]
   376d0:	sub	r0, r1, r0
   376d4:	ldr	r1, [sp, #12]
   376d8:	str	r0, [r1]
   376dc:	ldr	r0, [sp, #16]
   376e0:	mov	r1, r6
   376e4:	str	r6, [r0]
   376e8:	b	3778c <flatcc_json_parser_generic_json@@Base+0xbfc>
   376ec:	ldrb	r1, [r0]
   376f0:	cmp	r1, #34	; 0x22
   376f4:	beq	377ac <flatcc_json_parser_generic_json@@Base+0xc1c>
   376f8:	cmp	r1, #32
   376fc:	bcc	37738 <flatcc_json_parser_generic_json@@Base+0xba8>
   37700:	rsb	r0, r0, #0
   37704:	uxtb	r2, r1
   37708:	cmp	r2, #34	; 0x22
   3770c:	cmpne	r2, #92	; 0x5c
   37710:	beq	37774 <flatcc_json_parser_generic_json@@Base+0xbe4>
   37714:	add	r1, r6, r0
   37718:	cmp	r1, #1
   3771c:	beq	376ac <flatcc_json_parser_generic_json@@Base+0xb1c>
   37720:	rsb	r1, r0, #0
   37724:	sub	r0, r0, #1
   37728:	ldrb	r1, [r1, #1]
   3772c:	cmp	r1, #32
   37730:	bcs	37704 <flatcc_json_parser_generic_json@@Base+0xb74>
   37734:	rsb	r0, r0, #0
   37738:	ldr	r1, [r9]
   3773c:	cmp	r1, #0
   37740:	mov	r1, r6
   37744:	bne	3778c <flatcc_json_parser_generic_json@@Base+0xbfc>
   37748:	ldr	r1, [sp, #8]
   3774c:	str	r7, [r9]
   37750:	add	r2, r0, #1
   37754:	ldr	r1, [r1]
   37758:	sub	r1, r2, r1
   3775c:	ldr	r2, [sp, #12]
   37760:	str	r1, [r2]
   37764:	ldr	r1, [sp, #16]
   37768:	str	r0, [r1]
   3776c:	mov	r1, r6
   37770:	b	3778c <flatcc_json_parser_generic_json@@Base+0xbfc>
   37774:	adds	r1, r6, r0
   37778:	mov	r1, r6
   3777c:	beq	3778c <flatcc_json_parser_generic_json@@Base+0xbfc>
   37780:	rsb	r1, r0, #0
   37784:	cmp	r2, #34	; 0x22
   37788:	beq	377b0 <flatcc_json_parser_generic_json@@Base+0xc20>
   3778c:	mov	r0, r5
   37790:	mov	r2, r6
   37794:	mov	r3, r4
   37798:	bl	36264 <flatcc_json_parser_string_escape@@Base>
   3779c:	cmp	r0, r6
   377a0:	bne	376ec <flatcc_json_parser_generic_json@@Base+0xb5c>
   377a4:	mov	r1, r6
   377a8:	b	377cc <flatcc_json_parser_generic_json@@Base+0xc3c>
   377ac:	mov	r1, r0
   377b0:	cmp	r1, r6
   377b4:	beq	377cc <flatcc_json_parser_generic_json@@Base+0xc3c>
   377b8:	ldrb	r0, [r1]
   377bc:	cmp	r0, #34	; 0x22
   377c0:	bne	377cc <flatcc_json_parser_generic_json@@Base+0xc3c>
   377c4:	add	r4, r1, #1
   377c8:	b	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   377cc:	ldr	r0, [r9]
   377d0:	cmp	r0, #0
   377d4:	bne	372d8 <flatcc_json_parser_generic_json@@Base+0x748>
   377d8:	mov	r0, #20
   377dc:	b	375b4 <flatcc_json_parser_generic_json@@Base+0xa24>
   377e0:	cmp	r0, #93	; 0x5d
   377e4:	beq	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   377e8:	cmp	r0, #125	; 0x7d
   377ec:	mov	r1, r4
   377f0:	beq	372dc <flatcc_json_parser_generic_json@@Base+0x74c>
   377f4:	b	372cc <flatcc_json_parser_generic_json@@Base+0x73c>
   377f8:	mov	r4, r7
   377fc:	b	37870 <flatcc_json_parser_generic_json@@Base+0xce0>
   37800:	mov	r0, r8
   37804:	cmp	r1, #0
   37808:	beq	3781c <flatcc_json_parser_generic_json@@Base+0xc8c>
   3780c:	b	37870 <flatcc_json_parser_generic_json@@Base+0xce0>
   37810:	mov	r0, r8
   37814:	cmp	r1, #0
   37818:	bne	37870 <flatcc_json_parser_generic_json@@Base+0xce0>
   3781c:	cmp	r2, #0
   37820:	beq	37870 <flatcc_json_parser_generic_json@@Base+0xce0>
   37824:	ldr	r1, [r9]
   37828:	cmp	r1, #0
   3782c:	bne	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   37830:	add	r1, sp, #24
   37834:	add	r0, r1, r0
   37838:	mov	r1, #10
   3783c:	ldrb	r0, [r0, #-1]
   37840:	cmp	r0, #93	; 0x5d
   37844:	movweq	r1, #9
   37848:	str	r1, [r9]
   3784c:	ldr	r0, [sp, #8]
   37850:	ldr	r1, [sp, #4]
   37854:	ldr	r0, [r0]
   37858:	sub	r0, r1, r0
   3785c:	ldr	r1, [sp, #12]
   37860:	str	r0, [r1]
   37864:	ldr	r0, [sp, #16]
   37868:	str	r6, [r0]
   3786c:	mov	r4, r6
   37870:	mov	r0, r4
   37874:	sub	sp, fp, #28
   37878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3787c:	ldr	r0, [r9]
   37880:	cmp	r0, #0
   37884:	bne	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   37888:	mov	r0, #10
   3788c:	str	r0, [r9]
   37890:	b	3784c <flatcc_json_parser_generic_json@@Base+0xcbc>
   37894:	ldr	r0, [r9]
   37898:	cmp	r0, #0
   3789c:	bne	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   378a0:	mov	r0, #4
   378a4:	b	378cc <flatcc_json_parser_generic_json@@Base+0xd3c>
   378a8:	ldr	r0, [r9]
   378ac:	cmp	r0, #0
   378b0:	bne	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   378b4:	mov	r0, #2
   378b8:	b	378cc <flatcc_json_parser_generic_json@@Base+0xd3c>
   378bc:	ldr	r0, [r9]
   378c0:	cmp	r0, #0
   378c4:	bne	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>
   378c8:	mov	r0, #5
   378cc:	str	r0, [r9]
   378d0:	ldr	r0, [sp, #8]
   378d4:	add	r1, r7, #1
   378d8:	ldr	r0, [r0]
   378dc:	sub	r0, r1, r0
   378e0:	ldr	r1, [sp, #12]
   378e4:	str	r0, [r1]
   378e8:	ldr	r0, [sp, #16]
   378ec:	str	r7, [r0]
   378f0:	b	3786c <flatcc_json_parser_generic_json@@Base+0xcdc>

000378f4 <flatcc_json_parser_double@@Base>:
   378f4:	push	{r4, r5, r6, r7, fp, lr}
   378f8:	add	fp, sp, #16
   378fc:	mov	r5, r0
   37900:	mov	r0, #0
   37904:	mov	r6, r1
   37908:	cmp	r1, r2
   3790c:	str	r0, [r3]
   37910:	str	r0, [r3, #4]
   37914:	moveq	r0, r6
   37918:	popeq	{r4, r5, r6, r7, fp, pc}
   3791c:	mov	r0, r6
   37920:	mov	r4, r2
   37924:	mov	r7, r3
   37928:	ldrb	r1, [r0], #1
   3792c:	cmp	r1, #45	; 0x2d
   37930:	movne	r0, r6
   37934:	sub	r2, r2, r0
   37938:	cmp	r2, #2
   3793c:	blt	37968 <flatcc_json_parser_double@@Base+0x74>
   37940:	sub	r1, r1, #45	; 0x2d
   37944:	clz	r1, r1
   37948:	lsr	r1, r1, #5
   3794c:	ldrb	r1, [r6, r1]
   37950:	cmp	r1, #46	; 0x2e
   37954:	beq	379b8 <flatcc_json_parser_double@@Base+0xc4>
   37958:	cmp	r1, #48	; 0x30
   3795c:	ldrbeq	r0, [r0, #1]
   37960:	cmpeq	r0, #48	; 0x30
   37964:	beq	379b8 <flatcc_json_parser_double@@Base+0xc4>
   37968:	sub	r1, r4, r6
   3796c:	mov	r0, r6
   37970:	mov	r2, r7
   37974:	bl	379e8 <flatcc_json_parser_double@@Base+0xf4>
   37978:	cmp	r0, #0
   3797c:	cmpne	r0, r6
   37980:	popne	{r4, r5, r6, r7, fp, pc}
   37984:	vldr	d0, [r7]
   37988:	bl	14e7c <__isinf@plt>
   3798c:	ldr	r1, [r5, #24]
   37990:	cmp	r0, #0
   37994:	beq	379a8 <flatcc_json_parser_double@@Base+0xb4>
   37998:	cmp	r1, #0
   3799c:	bne	379b0 <flatcc_json_parser_double@@Base+0xbc>
   379a0:	mov	r0, #7
   379a4:	b	379c8 <flatcc_json_parser_double@@Base+0xd4>
   379a8:	cmp	r1, #0
   379ac:	beq	379c4 <flatcc_json_parser_double@@Base+0xd0>
   379b0:	mov	r0, r4
   379b4:	pop	{r4, r5, r6, r7, fp, pc}
   379b8:	ldr	r0, [r5, #24]
   379bc:	cmp	r0, #0
   379c0:	bne	379b0 <flatcc_json_parser_double@@Base+0xbc>
   379c4:	mov	r0, #6
   379c8:	str	r6, [r5, #36]	; 0x24
   379cc:	add	r2, r6, #1
   379d0:	ldr	r1, [r5, #4]
   379d4:	sub	r1, r2, r1
   379d8:	str	r1, [r5, #20]
   379dc:	str	r0, [r5, #24]
   379e0:	mov	r0, r4
   379e4:	pop	{r4, r5, r6, r7, fp, pc}
   379e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   379ec:	add	fp, sp, #28
   379f0:	sub	sp, sp, #36	; 0x24
   379f4:	cmp	r1, #1000	; 0x3e8
   379f8:	mov	r3, r1
   379fc:	mov	r6, #0
   37a00:	mov	r9, r0
   37a04:	movge	r1, #1000	; 0x3e8
   37a08:	str	r6, [r2]
   37a0c:	str	r6, [r2, #4]
   37a10:	add	lr, r0, r1
   37a14:	add	r4, lr, #1
   37a18:	cmp	r4, r0
   37a1c:	beq	37a90 <flatcc_json_parser_double@@Base+0x19c>
   37a20:	ldrb	r0, [r9]
   37a24:	mov	r5, r9
   37a28:	cmp	r0, #45	; 0x2d
   37a2c:	bne	37a44 <flatcc_json_parser_double@@Base+0x150>
   37a30:	cmp	r1, #0
   37a34:	beq	37dfc <flatcc_json_parser_double@@Base+0x508>
   37a38:	add	r5, r9, #1
   37a3c:	mov	r6, #1
   37a40:	ldrb	r0, [r5]
   37a44:	cmp	r0, #48	; 0x30
   37a48:	bne	37a78 <flatcc_json_parser_double@@Base+0x184>
   37a4c:	add	ip, r5, #1
   37a50:	cmp	r5, lr
   37a54:	beq	37ae0 <flatcc_json_parser_double@@Base+0x1ec>
   37a58:	ldrb	r1, [ip]
   37a5c:	orr	r0, r1, #32
   37a60:	cmp	r0, #120	; 0x78
   37a64:	bne	37ab0 <flatcc_json_parser_double@@Base+0x1bc>
   37a68:	mov	r0, #0
   37a6c:	str	r0, [r2]
   37a70:	str	r0, [r2, #4]
   37a74:	b	37a90 <flatcc_json_parser_double@@Base+0x19c>
   37a78:	sub	r1, r0, #49	; 0x31
   37a7c:	uxtb	r1, r1
   37a80:	cmp	r1, #9
   37a84:	bcc	37a98 <flatcc_json_parser_double@@Base+0x1a4>
   37a88:	cmp	r6, #0
   37a8c:	movne	r9, #0
   37a90:	mov	r2, r9
   37a94:	b	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37a98:	sub	r0, r0, #48	; 0x30
   37a9c:	add	ip, r5, #1
   37aa0:	asr	r1, r0, #31
   37aa4:	cmp	ip, r4
   37aa8:	bne	37af0 <flatcc_json_parser_double@@Base+0x1fc>
   37aac:	b	37dfc <flatcc_json_parser_double@@Base+0x508>
   37ab0:	cmp	r1, #48	; 0x30
   37ab4:	mov	r0, #0
   37ab8:	mov	r1, #0
   37abc:	bne	37ae8 <flatcc_json_parser_double@@Base+0x1f4>
   37ac0:	add	r0, r5, #2
   37ac4:	mov	ip, r0
   37ac8:	cmp	r4, r0
   37acc:	beq	37ae0 <flatcc_json_parser_double@@Base+0x1ec>
   37ad0:	mov	r0, ip
   37ad4:	ldrb	r1, [r0], #1
   37ad8:	cmp	r1, #48	; 0x30
   37adc:	beq	37ac4 <flatcc_json_parser_double@@Base+0x1d0>
   37ae0:	mov	r0, #0
   37ae4:	mov	r1, #0
   37ae8:	cmp	ip, r4
   37aec:	beq	37dfc <flatcc_json_parser_double@@Base+0x508>
   37af0:	movw	r5, #39321	; 0x9999
   37af4:	mov	sl, #10
   37af8:	mov	r7, ip
   37afc:	str	r6, [sp, #20]
   37b00:	str	r2, [sp, #24]
   37b04:	movt	r5, #6553	; 0x1999
   37b08:	ldrb	r8, [r7]
   37b0c:	sub	r2, r8, #48	; 0x30
   37b10:	uxtb	r6, r2
   37b14:	mov	r2, #0
   37b18:	cmp	r6, #9
   37b1c:	bhi	37b54 <flatcc_json_parser_double@@Base+0x260>
   37b20:	movw	r6, #39320	; 0x9998
   37b24:	movt	r6, #39321	; 0x9999
   37b28:	subs	r6, r6, r0
   37b2c:	sbcs	r6, r5, r1
   37b30:	bcc	37b6c <flatcc_json_parser_double@@Base+0x278>
   37b34:	add	r1, r1, r1, lsl #2
   37b38:	add	r7, r7, #1
   37b3c:	lsl	r1, r1, #1
   37b40:	umlal	r8, r1, r0, sl
   37b44:	subs	r0, r8, #48	; 0x30
   37b48:	sbc	r1, r1, #0
   37b4c:	cmp	r4, r7
   37b50:	bne	37b08 <flatcc_json_parser_double@@Base+0x214>
   37b54:	mov	r5, r1
   37b58:	mov	sl, #0
   37b5c:	str	r0, [sp, #28]
   37b60:	cmp	r7, r4
   37b64:	bne	37b90 <flatcc_json_parser_double@@Base+0x29c>
   37b68:	b	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37b6c:	adds	r6, r0, #1
   37b70:	mov	sl, #1
   37b74:	adc	r5, r1, #0
   37b78:	cmp	r8, #52	; 0x34
   37b7c:	movls	r6, r0
   37b80:	movls	r5, r1
   37b84:	str	r6, [sp, #28]
   37b88:	cmp	r7, r4
   37b8c:	beq	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37b90:	sub	r8, r7, ip
   37b94:	mvn	ip, r3
   37b98:	mov	r3, #0
   37b9c:	cmn	ip, #1000	; 0x3e8
   37ba0:	mov	r0, ip
   37ba4:	mvnlt	r0, #1000	; 0x3e8
   37ba8:	mvn	r0, r0
   37bac:	sub	r0, r0, r7
   37bb0:	add	r0, r9, r0
   37bb4:	ldrb	r1, [r7]
   37bb8:	cmp	r1, #48	; 0x30
   37bbc:	bne	37be0 <flatcc_json_parser_double@@Base+0x2ec>
   37bc0:	add	r1, r7, #1
   37bc4:	cmp	r7, lr
   37bc8:	sub	r0, r0, #1
   37bcc:	add	r3, r3, #1
   37bd0:	mov	r7, r1
   37bd4:	bne	37bb4 <flatcc_json_parser_double@@Base+0x2c0>
   37bd8:	mov	r7, r1
   37bdc:	b	37c28 <flatcc_json_parser_double@@Base+0x334>
   37be0:	sub	r1, r1, #49	; 0x31
   37be4:	uxtb	r1, r1
   37be8:	cmp	r1, #8
   37bec:	bhi	37c28 <flatcc_json_parser_double@@Base+0x334>
   37bf0:	mvn	r2, #0
   37bf4:	mov	r1, r2
   37bf8:	cmp	r0, #0
   37bfc:	beq	37c1c <flatcc_json_parser_double@@Base+0x328>
   37c00:	ldrb	r2, [r7, -r1]
   37c04:	sub	r0, r0, #1
   37c08:	sub	r2, r2, #48	; 0x30
   37c0c:	uxtb	r6, r2
   37c10:	sub	r2, r1, #1
   37c14:	cmp	r6, #10
   37c18:	bcc	37bf4 <flatcc_json_parser_double@@Base+0x300>
   37c1c:	sub	r3, r3, r1
   37c20:	sub	r7, r7, r1
   37c24:	mov	sl, #1
   37c28:	mov	r2, #0
   37c2c:	cmp	r7, r4
   37c30:	beq	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37c34:	ldrb	r0, [r7]
   37c38:	cmp	r0, #46	; 0x2e
   37c3c:	bne	37dd4 <flatcc_json_parser_double@@Base+0x4e0>
   37c40:	mov	r6, r7
   37c44:	ldrb	r0, [r6, #1]!
   37c48:	sub	r1, r0, #48	; 0x30
   37c4c:	uxtb	r1, r1
   37c50:	cmp	r1, #9
   37c54:	bhi	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37c58:	cmp	r7, lr
   37c5c:	beq	37d14 <flatcc_json_parser_double@@Base+0x420>
   37c60:	cmn	ip, #1000	; 0x3e8
   37c64:	mvn	r1, #1
   37c68:	str	sl, [sp, #12]
   37c6c:	str	r6, [sp, #8]
   37c70:	str	r8, [sp, #16]
   37c74:	mvnlt	ip, #1000	; 0x3e8
   37c78:	sub	r1, r1, ip
   37c7c:	sub	r1, r1, r7
   37c80:	add	sl, r9, r1
   37c84:	mov	r1, #0
   37c88:	mov	ip, r1
   37c8c:	ldr	r1, [sp, #28]
   37c90:	movw	r6, #39320	; 0x9998
   37c94:	movt	r6, #39321	; 0x9999
   37c98:	subs	r1, r6, r1
   37c9c:	movw	r1, #39321	; 0x9999
   37ca0:	movt	r1, #6553	; 0x1999
   37ca4:	sbcs	r1, r1, r5
   37ca8:	bcc	37d24 <flatcc_json_parser_double@@Base+0x430>
   37cac:	add	r1, r5, r5, lsl #2
   37cb0:	ldr	r5, [sp, #28]
   37cb4:	uxtb	r0, r0
   37cb8:	mov	r6, #10
   37cbc:	lsl	r1, r1, #1
   37cc0:	umlal	r0, r1, r5, r6
   37cc4:	add	r6, r7, ip
   37cc8:	subs	r0, r0, #48	; 0x30
   37ccc:	sbc	r5, r1, #0
   37cd0:	cmp	sl, ip
   37cd4:	str	r0, [sp, #28]
   37cd8:	beq	37cfc <flatcc_json_parser_double@@Base+0x408>
   37cdc:	ldrb	r0, [r6, #2]
   37ce0:	mov	r8, r5
   37ce4:	add	r1, ip, #1
   37ce8:	sub	r5, r0, #48	; 0x30
   37cec:	uxtb	r5, r5
   37cf0:	cmp	r5, #10
   37cf4:	mov	r5, r8
   37cf8:	bcc	37c88 <flatcc_json_parser_double@@Base+0x394>
   37cfc:	ldr	r8, [sp, #16]
   37d00:	ldr	sl, [sp, #12]
   37d04:	sub	r0, r3, #1
   37d08:	add	r7, r6, #2
   37d0c:	sub	r3, r0, ip
   37d10:	b	37d64 <flatcc_json_parser_double@@Base+0x470>
   37d14:	mov	r7, r6
   37d18:	cmp	r7, r4
   37d1c:	bne	37d70 <flatcc_json_parser_double@@Base+0x47c>
   37d20:	b	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37d24:	ldr	sl, [sp, #12]
   37d28:	ldr	r8, [sp, #16]
   37d2c:	add	r1, r7, ip
   37d30:	sub	r3, r3, ip
   37d34:	add	r7, r1, #1
   37d38:	cmp	sl, #0
   37d3c:	bne	37d64 <flatcc_json_parser_double@@Base+0x470>
   37d40:	ldr	r6, [sp, #28]
   37d44:	uxtb	r0, r0
   37d48:	mov	sl, #1
   37d4c:	adds	r1, r6, #1
   37d50:	adc	ip, r5, #0
   37d54:	cmp	r0, #52	; 0x34
   37d58:	movhi	r6, r1
   37d5c:	movhi	r5, ip
   37d60:	str	r6, [sp, #28]
   37d64:	ldr	r6, [sp, #8]
   37d68:	cmp	r7, r4
   37d6c:	beq	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37d70:	sub	r0, r7, r6
   37d74:	add	r8, r0, r8
   37d78:	ldrb	r0, [r7]
   37d7c:	cmp	r0, #48	; 0x30
   37d80:	bne	37d98 <flatcc_json_parser_double@@Base+0x4a4>
   37d84:	add	r7, r7, #1
   37d88:	add	r3, r3, #1
   37d8c:	cmp	r4, r7
   37d90:	bne	37d78 <flatcc_json_parser_double@@Base+0x484>
   37d94:	b	37dd4 <flatcc_json_parser_double@@Base+0x4e0>
   37d98:	sub	r0, r0, #49	; 0x31
   37d9c:	uxtb	r0, r0
   37da0:	cmp	r0, #8
   37da4:	bhi	37dd4 <flatcc_json_parser_double@@Base+0x4e0>
   37da8:	add	r0, r7, #1
   37dac:	mov	sl, #1
   37db0:	mov	r7, r0
   37db4:	cmp	r4, r0
   37db8:	beq	37dd4 <flatcc_json_parser_double@@Base+0x4e0>
   37dbc:	mov	r0, r7
   37dc0:	ldrb	r1, [r0], #1
   37dc4:	sub	r1, r1, #48	; 0x30
   37dc8:	uxtb	r1, r1
   37dcc:	cmp	r1, #10
   37dd0:	bcc	37db0 <flatcc_json_parser_double@@Base+0x4bc>
   37dd4:	cmp	r7, r4
   37dd8:	beq	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37ddc:	ldrb	r0, [r7]
   37de0:	mov	ip, #0
   37de4:	orr	r0, r0, #32
   37de8:	cmp	r0, #101	; 0x65
   37dec:	bne	37e0c <flatcc_json_parser_double@@Base+0x518>
   37df0:	sub	r0, r4, r7
   37df4:	cmp	r0, #2
   37df8:	bge	37e7c <flatcc_json_parser_double@@Base+0x588>
   37dfc:	mov	r2, #0
   37e00:	mov	r0, r2
   37e04:	sub	sp, fp, #28
   37e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37e0c:	mov	r0, #0
   37e10:	cmp	r7, r4
   37e14:	mov	r2, #0
   37e18:	beq	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37e1c:	ldr	r1, [sp, #28]
   37e20:	cmp	ip, #0
   37e24:	vmov.i32	d16, #0	; 0x00000000
   37e28:	rsbne	r0, r0, #0
   37e2c:	orrs	r1, r1, r5
   37e30:	beq	37e54 <flatcc_json_parser_double@@Base+0x560>
   37e34:	add	r1, r8, r3
   37e38:	add	r4, r1, r0
   37e3c:	cmn	r4, #324	; 0x144
   37e40:	blt	37e54 <flatcc_json_parser_double@@Base+0x560>
   37e44:	movw	r0, #310	; 0x136
   37e48:	cmp	r4, r0
   37e4c:	ble	37eb0 <flatcc_json_parser_double@@Base+0x5bc>
   37e50:	vldr	d16, [pc, #968]	; 38220 <flatcc_json_parser_double@@Base+0x92c>
   37e54:	ldr	r0, [sp, #24]
   37e58:	vstr	d16, [r0]
   37e5c:	ldr	r0, [sp, #20]
   37e60:	cmp	r0, #0
   37e64:	ldrne	r0, [sp, #24]
   37e68:	vldrne	d16, [r0]
   37e6c:	vnegne.f64	d16, d16
   37e70:	vstrne	d16, [r0]
   37e74:	mov	r2, r7
   37e78:	b	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37e7c:	mov	r1, r7
   37e80:	ldrb	r0, [r1, #1]!
   37e84:	cmp	r0, #45	; 0x2d
   37e88:	beq	37fac <flatcc_json_parser_double@@Base+0x6b8>
   37e8c:	mov	ip, #0
   37e90:	cmp	r0, #43	; 0x2b
   37e94:	bne	37fbc <flatcc_json_parser_double@@Base+0x6c8>
   37e98:	add	r1, r7, #2
   37e9c:	mov	r2, #0
   37ea0:	cmp	r1, r4
   37ea4:	beq	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37ea8:	mov	ip, #0
   37eac:	b	37fbc <flatcc_json_parser_double@@Base+0x6c8>
   37eb0:	mov	r0, #0
   37eb4:	cmp	r0, r5, lsr #21
   37eb8:	bne	3801c <flatcc_json_parser_double@@Base+0x728>
   37ebc:	cmp	r4, #22
   37ec0:	bhi	3801c <flatcc_json_parser_double@@Base+0x728>
   37ec4:	ldr	r0, [sp, #28]
   37ec8:	mov	r1, r5
   37ecc:	bl	47254 <flatcc_json_printer_clear@@Base+0x4e0>
   37ed0:	sub	r2, r4, r8
   37ed4:	vmov	d16, r0, r1
   37ed8:	add	r0, r2, #22
   37edc:	cmp	r0, #44	; 0x2c
   37ee0:	bhi	37e54 <flatcc_json_parser_double@@Base+0x560>
   37ee4:	add	r1, pc, #4
   37ee8:	ldr	r0, [r1, r0, lsl #2]
   37eec:	add	pc, r1, r0
   37ef0:	strheq	r0, [r0], -r4
   37ef4:	andeq	r0, r0, r8, ror r1
   37ef8:	andeq	r0, r0, r0, lsl #3
   37efc:	andeq	r0, r0, r8, lsl #3
   37f00:	muleq	r0, r0, r1
   37f04:	muleq	r0, r8, r1
   37f08:	andeq	r0, r0, r0, lsr #3
   37f0c:	andeq	r0, r0, r8, lsr #3
   37f10:			; <UNDEFINED> instruction: 0x000001b0
   37f14:			; <UNDEFINED> instruction: 0x000001b8
   37f18:	andeq	r0, r0, r0, asr #3
   37f1c:	andeq	r0, r0, r8, asr #3
   37f20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   37f24:	ldrdeq	r0, [r0], -r8
   37f28:	andeq	r0, r0, r0, ror #3
   37f2c:	andeq	r0, r0, r8, ror #3
   37f30:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   37f34:	strdeq	r0, [r0], -r8
   37f38:	andeq	r0, r0, r0, lsl #4
   37f3c:	andeq	r0, r0, r8, lsl #4
   37f40:	andeq	r0, r0, r0, lsl r2
   37f44:	andeq	r0, r0, r8, lsl r2
   37f48:			; <UNDEFINED> instruction: 0xffffff64
   37f4c:	andeq	r0, r0, r4, lsr #4
   37f50:	andeq	r0, r0, r0, lsr r2
   37f54:	andeq	r0, r0, ip, lsr r2
   37f58:	andeq	r0, r0, r8, asr #4
   37f5c:	andeq	r0, r0, r4, asr r2
   37f60:	andeq	r0, r0, r0, ror #4
   37f64:	andeq	r0, r0, ip, ror #4
   37f68:	andeq	r0, r0, r8, ror r2
   37f6c:	andeq	r0, r0, r4, lsl #5
   37f70:	muleq	r0, r0, r2
   37f74:	muleq	r0, ip, r2
   37f78:	andeq	r0, r0, r8, lsr #5
   37f7c:			; <UNDEFINED> instruction: 0x000002b4
   37f80:	andeq	r0, r0, r0, asr #5
   37f84:	andeq	r0, r0, ip, asr #5
   37f88:	ldrdeq	r0, [r0], -r8
   37f8c:	andeq	r0, r0, r4, ror #5
   37f90:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   37f94:	strdeq	r0, [r0], -ip
   37f98:	andeq	r0, r0, r8, lsl #6
   37f9c:	andeq	r0, r0, r4, lsl r3
   37fa0:	andeq	r0, r0, r0, lsr #6
   37fa4:	vldr	d17, [pc, #796]	; 382c8 <flatcc_json_parser_double@@Base+0x9d4>
   37fa8:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   37fac:	add	r1, r7, #2
   37fb0:	mov	ip, #1
   37fb4:	cmp	r1, r4
   37fb8:	beq	37dfc <flatcc_json_parser_double@@Base+0x508>
   37fbc:	ldrb	r0, [r1]
   37fc0:	mov	r7, r5
   37fc4:	mov	r2, #0
   37fc8:	sub	r0, r0, #48	; 0x30
   37fcc:	uxtb	r5, r0
   37fd0:	cmp	r5, #9
   37fd4:	bhi	37e00 <flatcc_json_parser_double@@Base+0x50c>
   37fd8:	mov	r5, r7
   37fdc:	add	r7, r1, #1
   37fe0:	cmp	r1, lr
   37fe4:	beq	37e10 <flatcc_json_parser_double@@Base+0x51c>
   37fe8:	ldrb	r1, [r7]
   37fec:	sub	r2, r1, #48	; 0x30
   37ff0:	uxtb	r2, r2
   37ff4:	cmp	r2, #9
   37ff8:	bhi	37e10 <flatcc_json_parser_double@@Base+0x51c>
   37ffc:	cmp	r0, #32768	; 0x8000
   38000:	add	r7, r7, #1
   38004:	addlt	r0, r0, r0, lsl #2
   38008:	addlt	r0, r1, r0, lsl #1
   3800c:	sublt	r0, r0, #48	; 0x30
   38010:	cmp	r4, r7
   38014:	bne	37fe8 <flatcc_json_parser_double@@Base+0x6f4>
   38018:	b	37e10 <flatcc_json_parser_double@@Base+0x51c>
   3801c:	ldr	r0, [sp, #24]
   38020:	mov	r1, r5
   38024:	mov	r2, r4
   38028:	mov	r3, r8
   3802c:	str	sl, [sp]
   38030:	str	r0, [sp, #4]
   38034:	ldr	r0, [sp, #28]
   38038:	bl	35b38 <grisu3_diy_fp_encode_double@@Base>
   3803c:	cmp	r0, #0
   38040:	bne	37e5c <flatcc_json_parser_double@@Base+0x568>
   38044:	add	r1, sp, #32
   38048:	mov	r0, r9
   3804c:	bl	14f00 <strtod@plt>
   38050:	ldr	r0, [sp, #24]
   38054:	vstr	d0, [r0]
   38058:	ldr	r0, [sp, #32]
   3805c:	cmp	r0, r7
   38060:	movcc	r7, r0
   38064:	b	37e74 <flatcc_json_parser_double@@Base+0x580>
   38068:	vldr	d17, [pc, #440]	; 38228 <flatcc_json_parser_double@@Base+0x934>
   3806c:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38070:	vldr	d17, [pc, #440]	; 38230 <flatcc_json_parser_double@@Base+0x93c>
   38074:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38078:	vldr	d17, [pc, #440]	; 38238 <flatcc_json_parser_double@@Base+0x944>
   3807c:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38080:	vldr	d17, [pc, #440]	; 38240 <flatcc_json_parser_double@@Base+0x94c>
   38084:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38088:	vldr	d17, [pc, #440]	; 38248 <flatcc_json_parser_double@@Base+0x954>
   3808c:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38090:	vldr	d17, [pc, #440]	; 38250 <flatcc_json_parser_double@@Base+0x95c>
   38094:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38098:	vldr	d17, [pc, #440]	; 38258 <flatcc_json_parser_double@@Base+0x964>
   3809c:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380a0:	vldr	d17, [pc, #440]	; 38260 <flatcc_json_parser_double@@Base+0x96c>
   380a4:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380a8:	vldr	d17, [pc, #440]	; 38268 <flatcc_json_parser_double@@Base+0x974>
   380ac:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380b0:	vldr	d17, [pc, #440]	; 38270 <flatcc_json_parser_double@@Base+0x97c>
   380b4:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380b8:	vldr	d17, [pc, #440]	; 38278 <flatcc_json_parser_double@@Base+0x984>
   380bc:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380c0:	vldr	d17, [pc, #440]	; 38280 <flatcc_json_parser_double@@Base+0x98c>
   380c4:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380c8:	vldr	d17, [pc, #440]	; 38288 <flatcc_json_parser_double@@Base+0x994>
   380cc:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380d0:	vldr	d17, [pc, #440]	; 38290 <flatcc_json_parser_double@@Base+0x99c>
   380d4:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380d8:	vldr	d17, [pc, #440]	; 38298 <flatcc_json_parser_double@@Base+0x9a4>
   380dc:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380e0:	vldr	d17, [pc, #440]	; 382a0 <flatcc_json_parser_double@@Base+0x9ac>
   380e4:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380e8:	vldr	d17, [pc, #440]	; 382a8 <flatcc_json_parser_double@@Base+0x9b4>
   380ec:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380f0:	vldr	d17, [pc, #440]	; 382b0 <flatcc_json_parser_double@@Base+0x9bc>
   380f4:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   380f8:	vldr	d17, [pc, #440]	; 382b8 <flatcc_json_parser_double@@Base+0x9c4>
   380fc:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38100:	vldr	d17, [pc, #440]	; 382c0 <flatcc_json_parser_double@@Base+0x9cc>
   38104:	b	3810c <flatcc_json_parser_double@@Base+0x818>
   38108:	vmov.f64	d17, #36	; 0x41200000  10.0
   3810c:	vdiv.f64	d16, d16, d17
   38110:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38114:	vmov.f64	d17, #36	; 0x41200000  10.0
   38118:	vmul.f64	d16, d16, d17
   3811c:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38120:	vldr	d17, [pc, #408]	; 382c0 <flatcc_json_parser_double@@Base+0x9cc>
   38124:	vmul.f64	d16, d16, d17
   38128:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   3812c:	vldr	d17, [pc, #388]	; 382b8 <flatcc_json_parser_double@@Base+0x9c4>
   38130:	vmul.f64	d16, d16, d17
   38134:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38138:	vldr	d17, [pc, #368]	; 382b0 <flatcc_json_parser_double@@Base+0x9bc>
   3813c:	vmul.f64	d16, d16, d17
   38140:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38144:	vldr	d17, [pc, #348]	; 382a8 <flatcc_json_parser_double@@Base+0x9b4>
   38148:	vmul.f64	d16, d16, d17
   3814c:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38150:	vldr	d17, [pc, #328]	; 382a0 <flatcc_json_parser_double@@Base+0x9ac>
   38154:	vmul.f64	d16, d16, d17
   38158:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   3815c:	vldr	d17, [pc, #308]	; 38298 <flatcc_json_parser_double@@Base+0x9a4>
   38160:	vmul.f64	d16, d16, d17
   38164:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38168:	vldr	d17, [pc, #288]	; 38290 <flatcc_json_parser_double@@Base+0x99c>
   3816c:	vmul.f64	d16, d16, d17
   38170:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38174:	vldr	d17, [pc, #268]	; 38288 <flatcc_json_parser_double@@Base+0x994>
   38178:	vmul.f64	d16, d16, d17
   3817c:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38180:	vldr	d17, [pc, #248]	; 38280 <flatcc_json_parser_double@@Base+0x98c>
   38184:	vmul.f64	d16, d16, d17
   38188:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   3818c:	vldr	d17, [pc, #228]	; 38278 <flatcc_json_parser_double@@Base+0x984>
   38190:	vmul.f64	d16, d16, d17
   38194:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38198:	vldr	d17, [pc, #208]	; 38270 <flatcc_json_parser_double@@Base+0x97c>
   3819c:	vmul.f64	d16, d16, d17
   381a0:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381a4:	vldr	d17, [pc, #188]	; 38268 <flatcc_json_parser_double@@Base+0x974>
   381a8:	vmul.f64	d16, d16, d17
   381ac:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381b0:	vldr	d17, [pc, #168]	; 38260 <flatcc_json_parser_double@@Base+0x96c>
   381b4:	vmul.f64	d16, d16, d17
   381b8:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381bc:	vldr	d17, [pc, #148]	; 38258 <flatcc_json_parser_double@@Base+0x964>
   381c0:	vmul.f64	d16, d16, d17
   381c4:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381c8:	vldr	d17, [pc, #128]	; 38250 <flatcc_json_parser_double@@Base+0x95c>
   381cc:	vmul.f64	d16, d16, d17
   381d0:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381d4:	vldr	d17, [pc, #108]	; 38248 <flatcc_json_parser_double@@Base+0x954>
   381d8:	vmul.f64	d16, d16, d17
   381dc:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381e0:	vldr	d17, [pc, #88]	; 38240 <flatcc_json_parser_double@@Base+0x94c>
   381e4:	vmul.f64	d16, d16, d17
   381e8:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381ec:	vldr	d17, [pc, #68]	; 38238 <flatcc_json_parser_double@@Base+0x944>
   381f0:	vmul.f64	d16, d16, d17
   381f4:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   381f8:	vldr	d17, [pc, #48]	; 38230 <flatcc_json_parser_double@@Base+0x93c>
   381fc:	vmul.f64	d16, d16, d17
   38200:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38204:	vldr	d17, [pc, #28]	; 38228 <flatcc_json_parser_double@@Base+0x934>
   38208:	vmul.f64	d16, d16, d17
   3820c:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   38210:	vldr	d17, [pc, #176]	; 382c8 <flatcc_json_parser_double@@Base+0x9d4>
   38214:	vmul.f64	d16, d16, d17
   38218:	b	37e54 <flatcc_json_parser_double@@Base+0x560>
   3821c:	nop	{0}
   38220:	andeq	r0, r0, r0
   38224:	svcvc	0x00f00000	; IMB
   38228:	usatle	lr, #2, r0, asr #30
   3822c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   38230:	ldmvc	r5!, {r6, sl, fp, pc}
   38234:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38238:	addsvs	r3, r1, r0, lsl #26
   3823c:	mvnmi	r5, #228, 16	; 0xe40000
   38240:	strbvs	ip, [lr, -r0, lsl #16]
   38244:			; <UNDEFINED> instruction: 0x43abc16d
   38248:	ldrbhi	sl, [r8]
   3824c:	cmnmi	r6, #1459617792	; 0x57000000
   38250:	strbcc	r8, [r0, r0]!
   38254:	movtmi	ip, #4985	; 0x1379
   38258:	ldrtcs	r0, [r4], -r0
   3825c:	movwmi	r6, #52213	; 0xcbf5
   38260:	cdpne	0, 9, cr0, cr0, cr0, {0}
   38264:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38268:	strb	r0, [r0, #-0]
   3826c:	adcmi	r3, r2, #156	; 0x9c
   38270:	andge	r0, r0, #0
   38274:	rsbmi	r1, sp, #148, 20	; 0x94000
   38278:	stmda	r0, {}	; <UNPREDICTABLE>
   3827c:	eorsmi	r4, r7, #7733248	; 0x760000
   38280:	andcs	r0, r0, r0
   38284:	andmi	sl, r2, #95	; 0x5f
   38288:	andeq	r0, r0, r0
   3828c:	bicmi	ip, sp, r5, ror #26
   38290:	andeq	r0, r0, r0
   38294:	orrsmi	sp, r7, r4, lsl #15
   38298:	andeq	r0, r0, r0
   3829c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   382a0:	andeq	r0, r0, r0
   382a4:	smlawbmi	lr, r0, r4, r8
   382a8:	andeq	r0, r0, r0
   382ac:	rscsmi	r6, r8, r0, lsl #20
   382b0:	andeq	r0, r0, r0
   382b4:	sbcmi	r8, r3, r0, lsl #16
   382b8:	andeq	r0, r0, r0
   382bc:	addmi	r4, pc, r0
   382c0:	andeq	r0, r0, r0
   382c4:	subsmi	r0, r9, r0
   382c8:			; <UNDEFINED> instruction: 0x064dd592
   382cc:	strmi	pc, [r0], #207	; 0xcf

000382d0 <flatcc_json_parser_float@@Base>:
   382d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   382d4:	add	fp, sp, #24
   382d8:	vpush	{d8-d9}
   382dc:	sub	sp, sp, #8
   382e0:	mov	r8, r0
   382e4:	mov	r0, #0
   382e8:	mov	r6, r1
   382ec:	cmp	r1, r2
   382f0:	str	r0, [r3]
   382f4:	beq	383b8 <flatcc_json_parser_float@@Base+0xe8>
   382f8:	mov	r0, r6
   382fc:	mov	r5, r2
   38300:	mov	r7, r3
   38304:	ldrb	r1, [r0], #1
   38308:	cmp	r1, #45	; 0x2d
   3830c:	movne	r0, r6
   38310:	sub	r2, r2, r0
   38314:	cmp	r2, #2
   38318:	blt	38344 <flatcc_json_parser_float@@Base+0x74>
   3831c:	sub	r1, r1, #45	; 0x2d
   38320:	clz	r1, r1
   38324:	lsr	r1, r1, #5
   38328:	ldrb	r1, [r6, r1]
   3832c:	cmp	r1, #46	; 0x2e
   38330:	beq	383c0 <flatcc_json_parser_float@@Base+0xf0>
   38334:	cmp	r1, #48	; 0x30
   38338:	ldrbeq	r0, [r0, #1]
   3833c:	cmpeq	r0, #48	; 0x30
   38340:	beq	383c0 <flatcc_json_parser_float@@Base+0xf0>
   38344:	sub	r1, r5, r6
   38348:	mov	r2, sp
   3834c:	mov	r0, r6
   38350:	bl	379e8 <flatcc_json_parser_double@@Base+0xf4>
   38354:	vldr	d16, [sp]
   38358:	mov	r4, r0
   3835c:	add	r0, pc, #164	; 0xa4
   38360:	vcmpe.f64	d16, #0.0
   38364:	vcvt.f32.f64	s16, d16
   38368:	vmrs	APSR_nzcv, fpscr
   3836c:	vmov.f32	s0, s16
   38370:	addmi	r0, r0, #4
   38374:	vldr	s18, [r0]
   38378:	bl	14e70 <__isinff@plt>
   3837c:	cmp	r0, #0
   38380:	movne	r4, r6
   38384:	vseleq.f32	s0, s16, s18
   38388:	cmp	r4, #0
   3838c:	vstr	s0, [r7]
   38390:	cmpne	r4, r6
   38394:	bne	383f8 <flatcc_json_parser_float@@Base+0x128>
   38398:	bl	14e70 <__isinff@plt>
   3839c:	ldr	r1, [r8, #24]
   383a0:	cmp	r0, #0
   383a4:	beq	383d0 <flatcc_json_parser_float@@Base+0x100>
   383a8:	cmp	r1, #0
   383ac:	bne	383f4 <flatcc_json_parser_float@@Base+0x124>
   383b0:	mov	r0, #7
   383b4:	b	383dc <flatcc_json_parser_float@@Base+0x10c>
   383b8:	mov	r4, r6
   383bc:	b	383f8 <flatcc_json_parser_float@@Base+0x128>
   383c0:	ldr	r0, [r8, #24]
   383c4:	cmp	r0, #0
   383c8:	bne	383f4 <flatcc_json_parser_float@@Base+0x124>
   383cc:	b	383d8 <flatcc_json_parser_float@@Base+0x108>
   383d0:	cmp	r1, #0
   383d4:	bne	383f4 <flatcc_json_parser_float@@Base+0x124>
   383d8:	mov	r0, #6
   383dc:	str	r6, [r8, #36]	; 0x24
   383e0:	add	r2, r6, #1
   383e4:	ldr	r1, [r8, #4]
   383e8:	sub	r1, r2, r1
   383ec:	str	r1, [r8, #20]
   383f0:	str	r0, [r8, #24]
   383f4:	mov	r4, r5
   383f8:	mov	r0, r4
   383fc:	sub	sp, fp, #40	; 0x28
   38400:	vpop	{d8-d9}
   38404:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38408:	svcvc	0x00800000
   3840c:			; <UNDEFINED> instruction: 0xff800000

00038410 <flatcc_json_parser_integer@@Base>:
   38410:	push	{r4, r5, r6, r7, fp, lr}
   38414:	add	fp, sp, #16
   38418:	mov	ip, r1
   3841c:	cmp	r1, r2
   38420:	beq	3850c <flatcc_json_parser_integer@@Base+0xfc>
   38424:	ldrb	r1, [ip]
   38428:	mov	r4, #0
   3842c:	sub	r1, r1, #45	; 0x2d
   38430:	clz	r1, r1
   38434:	lsr	r1, r1, #5
   38438:	str	r1, [r3]
   3843c:	add	r1, ip, r1
   38440:	cmp	r1, r2
   38444:	beq	384f8 <flatcc_json_parser_integer@@Base+0xe8>
   38448:	mov	lr, #10
   3844c:	mov	r5, #0
   38450:	ldrb	r6, [r1]
   38454:	sub	r7, r6, #48	; 0x30
   38458:	uxtb	r7, r7
   3845c:	cmp	r7, #9
   38460:	bhi	38514 <flatcc_json_parser_integer@@Base+0x104>
   38464:	add	r7, r5, r5, lsl #2
   38468:	lsl	r7, r7, #1
   3846c:	umlal	r6, r7, r4, lr
   38470:	subs	r6, r6, #48	; 0x30
   38474:	sbc	r7, r7, #0
   38478:	subs	r4, r6, r4
   3847c:	sbcs	r4, r7, r5
   38480:	bcc	38524 <flatcc_json_parser_integer@@Base+0x114>
   38484:	add	r1, r1, #1
   38488:	mov	r4, r6
   3848c:	mov	r5, r7
   38490:	cmp	r2, r1
   38494:	bne	38450 <flatcc_json_parser_integer@@Base+0x40>
   38498:	mov	r3, #0
   3849c:	mov	r1, r2
   384a0:	mov	r4, r6
   384a4:	mov	r5, r7
   384a8:	cmp	r1, ip
   384ac:	beq	3850c <flatcc_json_parser_integer@@Base+0xfc>
   384b0:	cmp	r3, #0
   384b4:	beq	38540 <flatcc_json_parser_integer@@Base+0x130>
   384b8:	ldrb	r3, [r1]
   384bc:	cmp	r3, #46	; 0x2e
   384c0:	cmpne	r3, #101	; 0x65
   384c4:	bne	38538 <flatcc_json_parser_integer@@Base+0x128>
   384c8:	ldr	r3, [r0, #24]
   384cc:	cmp	r3, #0
   384d0:	bne	38530 <flatcc_json_parser_integer@@Base+0x120>
   384d4:	str	r1, [r0, #36]	; 0x24
   384d8:	add	r1, r1, #1
   384dc:	mov	r3, #12
   384e0:	ldr	r7, [r0, #4]
   384e4:	sub	r1, r1, r7
   384e8:	str	r1, [r0, #20]
   384ec:	str	r3, [r0, #24]
   384f0:	mov	r0, r2
   384f4:	pop	{r4, r5, r6, r7, fp, pc}
   384f8:	mov	r1, r2
   384fc:	mov	r5, #0
   38500:	mov	r3, #0
   38504:	cmp	r1, ip
   38508:	bne	384b0 <flatcc_json_parser_integer@@Base+0xa0>
   3850c:	mov	r0, ip
   38510:	pop	{r4, r5, r6, r7, fp, pc}
   38514:	mov	r3, #1
   38518:	cmp	r1, ip
   3851c:	bne	384b0 <flatcc_json_parser_integer@@Base+0xa0>
   38520:	b	3850c <flatcc_json_parser_integer@@Base+0xfc>
   38524:	ldr	r7, [r0, #24]
   38528:	cmp	r7, #0
   3852c:	beq	38554 <flatcc_json_parser_integer@@Base+0x144>
   38530:	mov	r0, r2
   38534:	pop	{r4, r5, r6, r7, fp, pc}
   38538:	cmp	r3, #69	; 0x45
   3853c:	beq	384c8 <flatcc_json_parser_integer@@Base+0xb8>
   38540:	ldr	r0, [fp, #8]
   38544:	mov	ip, r1
   38548:	strd	r4, [r0]
   3854c:	mov	r0, ip
   38550:	pop	{r4, r5, r6, r7, fp, pc}
   38554:	str	r1, [r0, #36]	; 0x24
   38558:	cmp	r3, #0
   3855c:	mov	r7, #8
   38560:	add	r1, r1, #1
   38564:	ldr	r3, [r0, #4]
   38568:	movweq	r7, #7
   3856c:	sub	r1, r1, r3
   38570:	str	r1, [r0, #20]
   38574:	str	r7, [r0, #24]
   38578:	mov	r0, r2
   3857c:	pop	{r4, r5, r6, r7, fp, pc}

00038580 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   38580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38584:	add	fp, sp, #28
   38588:	sub	sp, sp, #28
   3858c:	ldr	r9, [fp, #8]
   38590:	mov	r6, r3
   38594:	mov	r4, r2
   38598:	mov	r5, r0
   3859c:	cmp	r1, r2
   385a0:	beq	385e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   385a4:	ldrb	r0, [r1]
   385a8:	cmp	r0, #34	; 0x22
   385ac:	bne	385e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   385b0:	add	sl, r1, #1
   385b4:	cmp	sl, r4
   385b8:	beq	38610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   385bc:	mov	r7, sl
   385c0:	ldrb	r1, [r7]
   385c4:	cmp	r1, #32
   385c8:	bcc	3881c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x29c>
   385cc:	cmp	r1, #34	; 0x22
   385d0:	cmpne	r1, #92	; 0x5c
   385d4:	beq	38684 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x104>
   385d8:	add	r7, r7, #1
   385dc:	cmp	r4, r7
   385e0:	bne	385c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   385e4:	b	38610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   385e8:	ldr	r0, [r5, #24]
   385ec:	cmp	r0, #0
   385f0:	bne	38610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   385f4:	str	r1, [r5, #36]	; 0x24
   385f8:	add	r1, r1, #1
   385fc:	mov	r0, #16
   38600:	ldr	r2, [r5, #4]
   38604:	sub	r1, r1, r2
   38608:	str	r1, [r5, #20]
   3860c:	str	r0, [r5, #24]
   38610:	ldr	r0, [r5, #24]
   38614:	cmp	r0, #0
   38618:	mov	r0, r4
   3861c:	bne	38640 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   38620:	str	r4, [r5, #36]	; 0x24
   38624:	mov	r0, #20
   38628:	add	r2, r4, #1
   3862c:	ldr	r1, [r5, #4]
   38630:	sub	r1, r2, r1
   38634:	str	r1, [r5, #20]
   38638:	str	r0, [r5, #24]
   3863c:	mov	r0, r4
   38640:	mov	r1, #0
   38644:	str	r1, [r6]
   38648:	ldr	r1, [r5, #24]
   3864c:	cmp	r1, #0
   38650:	bne	38678 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   38654:	str	r0, [r5, #36]	; 0x24
   38658:	mov	r1, #31
   3865c:	cmp	r9, #0
   38660:	add	r0, r0, #1
   38664:	ldr	r2, [r5, #4]
   38668:	movwne	r1, #32
   3866c:	sub	r0, r0, r2
   38670:	str	r0, [r5, #20]
   38674:	str	r1, [r5, #24]
   38678:	mov	r0, r4
   3867c:	sub	sp, fp, #28
   38680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38684:	cmp	r4, r7
   38688:	mov	r0, r4
   3868c:	beq	38640 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   38690:	cmp	r1, #34	; 0x22
   38694:	bne	386c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   38698:	sub	r1, r7, sl
   3869c:	and	r0, r1, #3
   386a0:	str	r1, [sp, #20]
   386a4:	lsr	r1, r1, #2
   386a8:	add	r8, r1, r1, lsl #1
   386ac:	cmp	r0, #2
   386b0:	beq	386c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x148>
   386b4:	cmp	r0, #3
   386b8:	addeq	r8, r8, #2
   386bc:	b	386cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   386c0:	mov	r0, r7
   386c4:	b	38640 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   386c8:	add	r8, r8, #1
   386cc:	ldr	r0, [r5]
   386d0:	mov	r1, #1
   386d4:	mov	r2, #1
   386d8:	mvn	r3, #0
   386dc:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   386e0:	cmp	r0, #0
   386e4:	beq	3871c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
   386e8:	mov	r0, #0
   386ec:	str	r0, [r6]
   386f0:	ldr	r0, [r5, #24]
   386f4:	cmp	r0, #0
   386f8:	bne	38678 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   386fc:	mov	r0, #33	; 0x21
   38700:	str	r7, [r5, #36]	; 0x24
   38704:	add	r2, r7, #1
   38708:	ldr	r1, [r5, #4]
   3870c:	sub	r1, r2, r1
   38710:	str	r1, [r5, #20]
   38714:	str	r0, [r5, #24]
   38718:	b	38678 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   3871c:	ldr	r0, [r5]
   38720:	mov	r1, r8
   38724:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   38728:	cmp	r0, #0
   3872c:	beq	386e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   38730:	ldr	r2, [pc, #612]	; 3899c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x41c>
   38734:	mov	r1, r8
   38738:	ldr	r8, [pc, #608]	; 389a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x420>
   3873c:	str	r0, [sp]
   38740:	str	r0, [sp, #12]
   38744:	ldr	r0, [sp, #20]
   38748:	cmp	r9, #0
   3874c:	add	lr, sp, #24
   38750:	mov	ip, sl
   38754:	str	r1, [sp, #4]
   38758:	add	r2, pc, r2
   3875c:	add	r8, pc, r8
   38760:	movne	r8, r2
   38764:	cmp	r1, #0
   38768:	mvneq	r1, #0
   3876c:	str	r1, [sp, #16]
   38770:	mov	r1, #0
   38774:	str	r0, [sp, #8]
   38778:	cmp	r0, r1
   3877c:	beq	3883c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2bc>
   38780:	ldrb	r2, [ip, r1]
   38784:	ldrb	r3, [r8, r2]
   38788:	cmp	r3, #64	; 0x40
   3878c:	strb	r3, [lr, r1]
   38790:	bcc	387a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x228>
   38794:	cmp	r3, #65	; 0x41
   38798:	bne	38878 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f8>
   3879c:	sub	r1, r1, #1
   387a0:	sub	r0, r0, #1
   387a4:	add	ip, ip, #1
   387a8:	add	r1, r1, #1
   387ac:	cmp	r1, #4
   387b0:	bcc	38778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f8>
   387b4:	ldr	lr, [sp, #16]
   387b8:	cmp	lr, #3
   387bc:	bcc	3886c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   387c0:	ldrb	r2, [sp, #25]
   387c4:	ldrb	r1, [sp, #24]
   387c8:	subs	lr, lr, #3
   387cc:	sub	r0, r0, #4
   387d0:	add	ip, ip, #4
   387d4:	str	lr, [sp, #16]
   387d8:	add	lr, sp, #24
   387dc:	lsr	r3, r2, #4
   387e0:	orr	r1, r3, r1, lsl #2
   387e4:	ldr	r3, [sp, #12]
   387e8:	strb	r1, [r3]
   387ec:	ldrb	r1, [sp, #26]
   387f0:	lsr	r1, r1, #2
   387f4:	orr	r1, r1, r2, lsl #4
   387f8:	strb	r1, [r3, #1]
   387fc:	ldrb	r1, [sp, #26]
   38800:	ldrb	r2, [sp, #27]
   38804:	orr	r1, r2, r1, lsl #6
   38808:	strb	r1, [r3, #2]
   3880c:	add	r3, r3, #3
   38810:	str	r3, [sp, #12]
   38814:	bne	38770 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   38818:	b	38918 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   3881c:	ldr	r0, [r5, #24]
   38820:	cmp	r0, #0
   38824:	mov	r0, r4
   38828:	bne	38640 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   3882c:	str	r7, [r5, #36]	; 0x24
   38830:	mov	r0, #17
   38834:	add	r2, r7, #1
   38838:	b	3862c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xac>
   3883c:	mov	r1, r0
   38840:	mov	r3, r0
   38844:	ldr	r2, [sp, #16]
   38848:	sub	r0, r0, r3
   3884c:	cmp	r1, #0
   38850:	beq	38918 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   38854:	cmp	r1, #3
   38858:	beq	388b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   3885c:	cmp	r1, #2
   38860:	ldrbeq	r1, [sp, #25]
   38864:	tsteq	r1, #15
   38868:	beq	38900 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x380>
   3886c:	ldr	r0, [sp, #20]
   38870:	ldr	r1, [sp, #8]
   38874:	b	38928 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   38878:	cmp	r3, #66	; 0x42
   3887c:	bne	388f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x378>
   38880:	add	r2, r1, #1
   38884:	mov	r3, r2
   38888:	cmp	r2, r0
   3888c:	bcs	38844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   38890:	cmp	r3, #7
   38894:	bhi	38844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   38898:	ldrb	r2, [ip, r3]
   3889c:	ldrb	r2, [r8, r2]
   388a0:	sub	r2, r2, #65	; 0x41
   388a4:	uxtb	lr, r2
   388a8:	add	r2, r3, #1
   388ac:	cmp	lr, #2
   388b0:	bcc	38884 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x304>
   388b4:	b	38844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   388b8:	cmp	r2, #2
   388bc:	bcc	3886c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   388c0:	ldrb	r1, [sp, #26]
   388c4:	ands	r2, r1, #3
   388c8:	bne	3886c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   388cc:	ldrb	r3, [sp, #25]
   388d0:	ldrb	ip, [sp, #24]
   388d4:	lsl	r2, r3, #4
   388d8:	orr	r1, r2, r1, lsr #2
   388dc:	ldr	r2, [sp, #12]
   388e0:	strb	r1, [r2, #1]
   388e4:	lsr	r1, r3, #4
   388e8:	orr	r1, r1, ip, lsl #2
   388ec:	strb	r1, [r2]
   388f0:	add	r2, r2, #2
   388f4:	b	38914 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   388f8:	mov	r3, r1
   388fc:	b	38844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   38900:	ldrb	r2, [sp, #24]
   38904:	lsl	r2, r2, #2
   38908:	orr	r1, r2, r1, lsr #4
   3890c:	ldr	r2, [sp, #12]
   38910:	strb	r1, [r2], #1
   38914:	str	r2, [sp, #12]
   38918:	cmp	r0, #0
   3891c:	beq	38934 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b4>
   38920:	mov	r1, r0
   38924:	ldr	r0, [sp, #20]
   38928:	sub	r0, r0, r1
   3892c:	add	r0, sl, r0
   38930:	b	38640 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   38934:	ldr	r0, [sp]
   38938:	ldr	r1, [sp, #12]
   3893c:	sub	r0, r1, r0
   38940:	ldr	r1, [sp, #4]
   38944:	cmp	r1, r0
   38948:	bls	38960 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   3894c:	sub	r1, r1, r0
   38950:	ldr	r0, [r5]
   38954:	bl	30da0 <flatcc_builder_truncate_vector@@Base>
   38958:	cmp	r0, #0
   3895c:	bne	386e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   38960:	ldr	r0, [r5]
   38964:	bl	32234 <flatcc_builder_end_vector@@Base>
   38968:	cmp	r0, #0
   3896c:	str	r0, [r6]
   38970:	beq	386e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   38974:	ldrb	r0, [r7]
   38978:	cmp	r0, #34	; 0x22
   3897c:	bne	38988 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x408>
   38980:	add	r4, r7, #1
   38984:	b	38678 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   38988:	ldr	r0, [r5, #24]
   3898c:	cmp	r0, #0
   38990:	bne	38678 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   38994:	mov	r0, #20
   38998:	b	38700 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   3899c:	andeq	r4, r1, r0, lsl #22
   389a0:	strdeq	r4, [r1], -ip

000389a4 <flatcc_json_parser_build_string@@Base>:
   389a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   389a8:	add	fp, sp, #28
   389ac:	sub	sp, sp, #4
   389b0:	mov	sl, r3
   389b4:	mov	r4, r2
   389b8:	mov	r5, r0
   389bc:	cmp	r1, r2
   389c0:	beq	38a10 <flatcc_json_parser_build_string@@Base+0x6c>
   389c4:	ldrb	r0, [r1]
   389c8:	cmp	r0, #34	; 0x22
   389cc:	bne	38a10 <flatcc_json_parser_build_string@@Base+0x6c>
   389d0:	add	r1, r1, #1
   389d4:	mov	r6, r4
   389d8:	cmp	r1, r4
   389dc:	beq	38a40 <flatcc_json_parser_build_string@@Base+0x9c>
   389e0:	mov	r6, r1
   389e4:	ldrb	r0, [r6]
   389e8:	cmp	r0, #32
   389ec:	bcc	38c38 <flatcc_json_parser_build_string@@Base+0x294>
   389f0:	cmp	r0, #34	; 0x22
   389f4:	cmpne	r0, #92	; 0x5c
   389f8:	beq	38b5c <flatcc_json_parser_build_string@@Base+0x1b8>
   389fc:	add	r6, r6, #1
   38a00:	cmp	r4, r6
   38a04:	bne	389e4 <flatcc_json_parser_build_string@@Base+0x40>
   38a08:	mov	r6, r1
   38a0c:	b	38a40 <flatcc_json_parser_build_string@@Base+0x9c>
   38a10:	ldr	r0, [r5, #24]
   38a14:	mov	r6, r4
   38a18:	cmp	r0, #0
   38a1c:	bne	38a40 <flatcc_json_parser_build_string@@Base+0x9c>
   38a20:	str	r1, [r5, #36]	; 0x24
   38a24:	add	r1, r1, #1
   38a28:	mov	r0, #16
   38a2c:	mov	r6, r4
   38a30:	ldr	r2, [r5, #4]
   38a34:	sub	r1, r1, r2
   38a38:	str	r1, [r5, #20]
   38a3c:	str	r0, [r5, #24]
   38a40:	ldr	r0, [r5, #24]
   38a44:	cmp	r0, #0
   38a48:	bne	38a68 <flatcc_json_parser_build_string@@Base+0xc4>
   38a4c:	str	r4, [r5, #36]	; 0x24
   38a50:	add	r2, r4, #1
   38a54:	mov	r0, #20
   38a58:	ldr	r1, [r5, #4]
   38a5c:	sub	r1, r2, r1
   38a60:	str	r1, [r5, #20]
   38a64:	str	r0, [r5, #24]
   38a68:	mov	r7, r4
   38a6c:	ldr	r0, [r5]
   38a70:	bl	3130c <flatcc_builder_start_string@@Base>
   38a74:	cmp	r0, #0
   38a78:	beq	38a94 <flatcc_json_parser_build_string@@Base+0xf0>
   38a7c:	mov	r4, r7
   38a80:	mov	r0, #0
   38a84:	str	r0, [sl]
   38a88:	mov	r0, r4
   38a8c:	sub	sp, fp, #28
   38a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38a94:	ldr	r0, [r5]
   38a98:	sub	r2, r7, r6
   38a9c:	mov	r1, r6
   38aa0:	bl	30bf4 <flatcc_builder_append_string@@Base>
   38aa4:	cmp	r0, #0
   38aa8:	beq	38a7c <flatcc_json_parser_build_string@@Base+0xd8>
   38aac:	cmp	r7, r4
   38ab0:	mov	r6, r4
   38ab4:	beq	38bdc <flatcc_json_parser_build_string@@Base+0x238>
   38ab8:	mov	r8, sp
   38abc:	add	r9, r8, #1
   38ac0:	ldrb	r0, [r7]
   38ac4:	cmp	r0, #34	; 0x22
   38ac8:	beq	38bd8 <flatcc_json_parser_build_string@@Base+0x234>
   38acc:	mov	r0, r5
   38ad0:	mov	r1, r7
   38ad4:	mov	r2, r4
   38ad8:	mov	r3, r8
   38adc:	bl	36264 <flatcc_json_parser_string_escape@@Base>
   38ae0:	mov	r6, r0
   38ae4:	ldr	r0, [r5]
   38ae8:	ldrb	r2, [sp]
   38aec:	mov	r1, r9
   38af0:	bl	30bf4 <flatcc_builder_append_string@@Base>
   38af4:	cmp	r0, #0
   38af8:	beq	38c30 <flatcc_json_parser_build_string@@Base+0x28c>
   38afc:	cmp	r6, r4
   38b00:	beq	38b84 <flatcc_json_parser_build_string@@Base+0x1e0>
   38b04:	mov	r7, r6
   38b08:	ldrb	r0, [r7]
   38b0c:	cmp	r0, #32
   38b10:	bcc	38ba4 <flatcc_json_parser_build_string@@Base+0x200>
   38b14:	cmp	r0, #34	; 0x22
   38b18:	cmpne	r0, #92	; 0x5c
   38b1c:	beq	38b30 <flatcc_json_parser_build_string@@Base+0x18c>
   38b20:	add	r7, r7, #1
   38b24:	cmp	r4, r7
   38b28:	bne	38b08 <flatcc_json_parser_build_string@@Base+0x164>
   38b2c:	b	38b84 <flatcc_json_parser_build_string@@Base+0x1e0>
   38b30:	cmp	r4, r7
   38b34:	beq	38bd0 <flatcc_json_parser_build_string@@Base+0x22c>
   38b38:	ldr	r0, [r5]
   38b3c:	sub	r2, r7, r6
   38b40:	mov	r1, r6
   38b44:	bl	30bf4 <flatcc_builder_append_string@@Base>
   38b48:	cmp	r0, #0
   38b4c:	beq	38a7c <flatcc_json_parser_build_string@@Base+0xd8>
   38b50:	cmp	r4, r7
   38b54:	bne	38ac0 <flatcc_json_parser_build_string@@Base+0x11c>
   38b58:	b	38bd0 <flatcc_json_parser_build_string@@Base+0x22c>
   38b5c:	cmp	r4, r6
   38b60:	beq	38c44 <flatcc_json_parser_build_string@@Base+0x2a0>
   38b64:	cmp	r0, #34	; 0x22
   38b68:	bne	38b7c <flatcc_json_parser_build_string@@Base+0x1d8>
   38b6c:	ldr	r0, [r5]
   38b70:	sub	r2, r6, r1
   38b74:	bl	33628 <flatcc_builder_create_string@@Base>
   38b78:	b	38be4 <flatcc_json_parser_build_string@@Base+0x240>
   38b7c:	mov	r7, r6
   38b80:	b	38c48 <flatcc_json_parser_build_string@@Base+0x2a4>
   38b84:	ldr	r0, [r5, #24]
   38b88:	mov	r6, r4
   38b8c:	cmp	r0, #0
   38b90:	bne	38bdc <flatcc_json_parser_build_string@@Base+0x238>
   38b94:	str	r4, [r5, #36]	; 0x24
   38b98:	mov	r0, #20
   38b9c:	add	r2, r4, #1
   38ba0:	b	38bc0 <flatcc_json_parser_build_string@@Base+0x21c>
   38ba4:	ldr	r0, [r5, #24]
   38ba8:	mov	r6, r4
   38bac:	cmp	r0, #0
   38bb0:	bne	38bdc <flatcc_json_parser_build_string@@Base+0x238>
   38bb4:	str	r7, [r5, #36]	; 0x24
   38bb8:	mov	r0, #17
   38bbc:	add	r2, r7, #1
   38bc0:	ldr	r1, [r5, #4]
   38bc4:	sub	r1, r2, r1
   38bc8:	str	r1, [r5, #20]
   38bcc:	str	r0, [r5, #24]
   38bd0:	mov	r6, r4
   38bd4:	b	38bdc <flatcc_json_parser_build_string@@Base+0x238>
   38bd8:	mov	r6, r7
   38bdc:	ldr	r0, [r5]
   38be0:	bl	337b0 <flatcc_builder_end_string@@Base>
   38be4:	cmp	r6, r4
   38be8:	str	r0, [sl]
   38bec:	beq	38c04 <flatcc_json_parser_build_string@@Base+0x260>
   38bf0:	ldrb	r0, [r6]
   38bf4:	cmp	r0, #34	; 0x22
   38bf8:	bne	38c04 <flatcc_json_parser_build_string@@Base+0x260>
   38bfc:	add	r4, r6, #1
   38c00:	b	38a88 <flatcc_json_parser_build_string@@Base+0xe4>
   38c04:	ldr	r0, [r5, #24]
   38c08:	cmp	r0, #0
   38c0c:	bne	38a88 <flatcc_json_parser_build_string@@Base+0xe4>
   38c10:	str	r6, [r5, #36]	; 0x24
   38c14:	add	r2, r6, #1
   38c18:	mov	r0, #20
   38c1c:	ldr	r1, [r5, #4]
   38c20:	sub	r1, r2, r1
   38c24:	str	r1, [r5, #20]
   38c28:	str	r0, [r5, #24]
   38c2c:	b	38a88 <flatcc_json_parser_build_string@@Base+0xe4>
   38c30:	mov	r4, r6
   38c34:	b	38a80 <flatcc_json_parser_build_string@@Base+0xdc>
   38c38:	ldr	r0, [r5, #24]
   38c3c:	cmp	r0, #0
   38c40:	beq	38c50 <flatcc_json_parser_build_string@@Base+0x2ac>
   38c44:	mov	r7, r4
   38c48:	mov	r6, r1
   38c4c:	b	38a6c <flatcc_json_parser_build_string@@Base+0xc8>
   38c50:	str	r6, [r5, #36]	; 0x24
   38c54:	add	r3, r6, #1
   38c58:	mov	r0, #17
   38c5c:	mov	r7, r4
   38c60:	ldr	r2, [r5, #4]
   38c64:	sub	r2, r3, r2
   38c68:	str	r2, [r5, #20]
   38c6c:	str	r0, [r5, #24]
   38c70:	b	38c48 <flatcc_json_parser_build_string@@Base+0x2a4>

00038c74 <flatcc_json_parser_prepare_unions@@Base>:
   38c74:	push	{r4, r5, r6, r7, fp, lr}
   38c78:	add	fp, sp, #16
   38c7c:	mov	r5, r1
   38c80:	mov	r6, r0
   38c84:	add	r0, r3, r3, lsl #1
   38c88:	mov	r1, #8
   38c8c:	mov	r7, r3
   38c90:	mov	r4, r2
   38c94:	add	r1, r1, r0, lsl #3
   38c98:	ldr	r0, [r6]
   38c9c:	bl	2f6b4 <flatcc_builder_enter_user_frame@@Base>
   38ca0:	mov	r1, r0
   38ca4:	ldr	r0, [fp, #8]
   38ca8:	cmp	r1, #0
   38cac:	str	r1, [r0]
   38cb0:	beq	38ccc <flatcc_json_parser_prepare_unions@@Base+0x58>
   38cb4:	ldr	r0, [r6]
   38cb8:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   38cbc:	mov	r4, r5
   38cc0:	str	r7, [r0]
   38cc4:	mov	r0, r4
   38cc8:	pop	{r4, r5, r6, r7, fp, pc}
   38ccc:	ldr	r0, [r6, #24]
   38cd0:	cmp	r0, #0
   38cd4:	beq	38ce0 <flatcc_json_parser_prepare_unions@@Base+0x6c>
   38cd8:	mov	r0, r4
   38cdc:	pop	{r4, r5, r6, r7, fp, pc}
   38ce0:	str	r5, [r6, #36]	; 0x24
   38ce4:	add	r2, r5, #1
   38ce8:	mov	r0, #33	; 0x21
   38cec:	ldr	r1, [r6, #4]
   38cf0:	sub	r1, r2, r1
   38cf4:	str	r1, [r6, #20]
   38cf8:	str	r0, [r6, #24]
   38cfc:	mov	r0, r4
   38d00:	pop	{r4, r5, r6, r7, fp, pc}

00038d04 <flatcc_json_parser_finalize_unions@@Base>:
   38d04:	push	{r4, r5, r6, r7, fp, lr}
   38d08:	add	fp, sp, #16
   38d0c:	mov	r6, r0
   38d10:	ldr	r0, [r0]
   38d14:	mov	r7, r1
   38d18:	mov	r1, r3
   38d1c:	mov	r5, r3
   38d20:	mov	r4, r2
   38d24:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   38d28:	ldr	r0, [r0, #4]
   38d2c:	cmp	r0, #0
   38d30:	beq	38d60 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   38d34:	ldr	r0, [r6, #24]
   38d38:	cmp	r0, #0
   38d3c:	bne	38d64 <flatcc_json_parser_finalize_unions@@Base+0x60>
   38d40:	str	r7, [r6, #36]	; 0x24
   38d44:	add	r2, r7, #1
   38d48:	mov	r0, #27
   38d4c:	ldr	r1, [r6, #4]
   38d50:	sub	r1, r2, r1
   38d54:	str	r1, [r6, #20]
   38d58:	str	r0, [r6, #24]
   38d5c:	b	38d64 <flatcc_json_parser_finalize_unions@@Base+0x60>
   38d60:	mov	r4, r7
   38d64:	ldr	r0, [r6]
   38d68:	mov	r1, r5
   38d6c:	bl	2f7d8 <flatcc_builder_exit_user_frame_at@@Base>
   38d70:	mov	r0, r4
   38d74:	pop	{r4, r5, r6, r7, fp, pc}

00038d78 <flatcc_json_parser_union@@Base>:
   38d78:	push	{r4, r5, r6, r7, fp, lr}
   38d7c:	add	fp, sp, #16
   38d80:	sub	sp, sp, #16
   38d84:	mov	r6, r1
   38d88:	mov	r5, r0
   38d8c:	ldr	r0, [r0]
   38d90:	ldr	r1, [fp, #12]
   38d94:	mov	r7, r3
   38d98:	mov	r4, r2
   38d9c:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   38da0:	add	r2, r0, #8
   38da4:	add	r3, r7, r7, lsl #1
   38da8:	mov	r1, r2
   38dac:	ldr	r7, [r1, r3, lsl #3]!
   38db0:	cmp	r7, #0
   38db4:	beq	38de4 <flatcc_json_parser_union@@Base+0x6c>
   38db8:	ldr	r0, [r5, #24]
   38dbc:	cmp	r0, #0
   38dc0:	bne	38ea4 <flatcc_json_parser_union@@Base+0x12c>
   38dc4:	mov	r0, #28
   38dc8:	str	r6, [r5, #36]	; 0x24
   38dcc:	add	r2, r6, #1
   38dd0:	ldr	r1, [r5, #4]
   38dd4:	sub	r1, r2, r1
   38dd8:	str	r1, [r5, #20]
   38ddc:	str	r0, [r5, #24]
   38de0:	b	38ea4 <flatcc_json_parser_union@@Base+0x12c>
   38de4:	add	r2, r2, r3, lsl #3
   38de8:	ldrb	r3, [r2, #12]
   38dec:	cmp	r3, #0
   38df0:	beq	38e60 <flatcc_json_parser_union@@Base+0xe8>
   38df4:	ldrb	r3, [r2, #13]
   38df8:	cmp	r3, #0
   38dfc:	strb	r3, [sp, #8]
   38e00:	beq	38e98 <flatcc_json_parser_union@@Base+0x120>
   38e04:	ldr	r1, [r0, #4]
   38e08:	ldr	r7, [fp, #16]
   38e0c:	mov	r2, r4
   38e10:	sub	r1, r1, #1
   38e14:	str	r1, [r0, #4]
   38e18:	add	r0, sp, #8
   38e1c:	mov	r1, r6
   38e20:	add	r0, r0, #4
   38e24:	str	r0, [sp]
   38e28:	mov	r0, r5
   38e2c:	blx	r7
   38e30:	cmp	r0, r4
   38e34:	beq	38ea4 <flatcc_json_parser_union@@Base+0x12c>
   38e38:	mov	r6, r0
   38e3c:	ldr	r1, [fp, #8]
   38e40:	ldr	r0, [r5]
   38e44:	ldr	r2, [sp, #8]
   38e48:	ldr	r3, [sp, #12]
   38e4c:	bl	32680 <flatcc_builder_table_add_union@@Base>
   38e50:	cmp	r0, #0
   38e54:	bne	38db8 <flatcc_json_parser_union@@Base+0x40>
   38e58:	mov	r4, r6
   38e5c:	b	38ea4 <flatcc_json_parser_union@@Base+0x12c>
   38e60:	ldr	r3, [r0, #4]
   38e64:	add	r3, r3, #1
   38e68:	str	r3, [r0, #4]
   38e6c:	ldr	r0, [r5, #16]
   38e70:	str	r0, [r2, #8]
   38e74:	ldr	r0, [r5, #4]
   38e78:	str	r0, [r2, #4]
   38e7c:	str	r6, [r1]
   38e80:	mov	r0, r5
   38e84:	mov	r1, r6
   38e88:	mov	r2, r4
   38e8c:	bl	36b90 <flatcc_json_parser_generic_json@@Base>
   38e90:	mov	r4, r0
   38e94:	b	38ea4 <flatcc_json_parser_union@@Base+0x12c>
   38e98:	ldr	r0, [r5, #24]
   38e9c:	cmp	r0, #0
   38ea0:	beq	38eb0 <flatcc_json_parser_union@@Base+0x138>
   38ea4:	mov	r0, r4
   38ea8:	sub	sp, fp, #16
   38eac:	pop	{r4, r5, r6, r7, fp, pc}
   38eb0:	mov	r0, #25
   38eb4:	b	38dc8 <flatcc_json_parser_union@@Base+0x50>

00038eb8 <flatcc_json_parser_union_type@@Base>:
   38eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38ebc:	add	fp, sp, #28
   38ec0:	sub	sp, sp, #20
   38ec4:	mov	r8, r1
   38ec8:	mov	r5, r0
   38ecc:	ldr	r0, [r0]
   38ed0:	ldr	r1, [fp, #12]
   38ed4:	mov	r6, r3
   38ed8:	mov	r4, r2
   38edc:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   38ee0:	add	r2, r0, #8
   38ee4:	add	r3, r6, r6, lsl #1
   38ee8:	mov	r9, r0
   38eec:	add	sl, r2, r3, lsl #3
   38ef0:	mov	r0, sl
   38ef4:	ldrb	r1, [r0, #12]!
   38ef8:	cmp	r1, #0
   38efc:	beq	38f2c <flatcc_json_parser_union_type@@Base+0x74>
   38f00:	ldr	r0, [r5, #24]
   38f04:	cmp	r0, #0
   38f08:	bne	39204 <flatcc_json_parser_union_type@@Base+0x34c>
   38f0c:	str	r8, [r5, #36]	; 0x24
   38f10:	mov	r0, #28
   38f14:	add	r2, r8, #1
   38f18:	ldr	r1, [r5, #4]
   38f1c:	sub	r1, r2, r1
   38f20:	str	r1, [r5, #20]
   38f24:	str	r0, [r5, #24]
   38f28:	b	39204 <flatcc_json_parser_union_type@@Base+0x34c>
   38f2c:	mov	r1, #1
   38f30:	mov	r6, #0
   38f34:	mov	lr, sl
   38f38:	cmp	r8, r4
   38f3c:	str	r3, [sp, #4]
   38f40:	str	r2, [sp, #8]
   38f44:	strb	r1, [r0]
   38f48:	strb	r6, [lr, #13]!
   38f4c:	beq	3910c <flatcc_json_parser_union_type@@Base+0x254>
   38f50:	mov	r2, r8
   38f54:	ldrb	ip, [r2], #1
   38f58:	cmp	ip, #45	; 0x2d
   38f5c:	movne	r2, r8
   38f60:	cmp	r2, r4
   38f64:	beq	39014 <flatcc_json_parser_union_type@@Base+0x15c>
   38f68:	mov	r6, #0
   38f6c:	mov	r0, #10
   38f70:	mov	r7, #0
   38f74:	ldrb	r1, [r2]
   38f78:	sub	r3, r1, #48	; 0x30
   38f7c:	uxtb	r3, r3
   38f80:	cmp	r3, #9
   38f84:	bhi	390a0 <flatcc_json_parser_union_type@@Base+0x1e8>
   38f88:	add	r3, r7, r7, lsl #2
   38f8c:	lsl	r3, r3, #1
   38f90:	umlal	r1, r3, r6, r0
   38f94:	subs	r1, r1, #48	; 0x30
   38f98:	sbc	r3, r3, #0
   38f9c:	subs	r6, r1, r6
   38fa0:	sbcs	r7, r3, r7
   38fa4:	bcc	390b0 <flatcc_json_parser_union_type@@Base+0x1f8>
   38fa8:	add	r2, r2, #1
   38fac:	mov	r6, r1
   38fb0:	mov	r7, r3
   38fb4:	cmp	r4, r2
   38fb8:	bne	38f74 <flatcc_json_parser_union_type@@Base+0xbc>
   38fbc:	mov	r0, #0
   38fc0:	mov	r2, r4
   38fc4:	mov	r6, r1
   38fc8:	mov	r7, r3
   38fcc:	cmp	r2, r8
   38fd0:	beq	3910c <flatcc_json_parser_union_type@@Base+0x254>
   38fd4:	cmp	r0, #0
   38fd8:	beq	3902c <flatcc_json_parser_union_type@@Base+0x174>
   38fdc:	ldrb	r0, [r2]
   38fe0:	cmp	r0, #46	; 0x2e
   38fe4:	beq	38ff4 <flatcc_json_parser_union_type@@Base+0x13c>
   38fe8:	cmp	r0, #101	; 0x65
   38fec:	cmpne	r0, #69	; 0x45
   38ff0:	bne	3902c <flatcc_json_parser_union_type@@Base+0x174>
   38ff4:	ldr	r0, [r5, #24]
   38ff8:	mov	r6, #0
   38ffc:	mov	r7, #0
   39000:	cmp	r0, #0
   39004:	mov	r0, r4
   39008:	bne	390f0 <flatcc_json_parser_union_type@@Base+0x238>
   3900c:	mov	r0, #12
   39010:	b	390cc <flatcc_json_parser_union_type@@Base+0x214>
   39014:	mov	r2, r4
   39018:	mov	r7, #0
   3901c:	mov	r0, #0
   39020:	cmp	r2, r8
   39024:	bne	38fd4 <flatcc_json_parser_union_type@@Base+0x11c>
   39028:	b	3910c <flatcc_json_parser_union_type@@Base+0x254>
   3902c:	mov	r0, r2
   39030:	cmp	r0, r8
   39034:	beq	3910c <flatcc_json_parser_union_type@@Base+0x254>
   39038:	cmp	ip, #45	; 0x2d
   3903c:	bne	39058 <flatcc_json_parser_union_type@@Base+0x1a0>
   39040:	ldr	r1, [r5, #24]
   39044:	mov	r2, r4
   39048:	cmp	r1, #0
   3904c:	bne	39104 <flatcc_json_parser_union_type@@Base+0x24c>
   39050:	mov	r1, #8
   39054:	b	39078 <flatcc_json_parser_union_type@@Base+0x1c0>
   39058:	subs	r1, r6, #256	; 0x100
   3905c:	sbcs	r1, r7, #0
   39060:	bcc	390fc <flatcc_json_parser_union_type@@Base+0x244>
   39064:	ldr	r1, [r5, #24]
   39068:	mov	r2, r4
   3906c:	cmp	r1, #0
   39070:	bne	39104 <flatcc_json_parser_union_type@@Base+0x24c>
   39074:	mov	r1, #7
   39078:	str	r0, [r5, #36]	; 0x24
   3907c:	add	r0, r0, #1
   39080:	ldr	r2, [r5, #4]
   39084:	sub	r0, r0, r2
   39088:	mov	r2, r4
   3908c:	str	r0, [r5, #20]
   39090:	str	r1, [r5, #24]
   39094:	cmp	r2, r8
   39098:	bne	39130 <flatcc_json_parser_union_type@@Base+0x278>
   3909c:	b	3910c <flatcc_json_parser_union_type@@Base+0x254>
   390a0:	mov	r0, #1
   390a4:	cmp	r2, r8
   390a8:	bne	38fd4 <flatcc_json_parser_union_type@@Base+0x11c>
   390ac:	b	3910c <flatcc_json_parser_union_type@@Base+0x254>
   390b0:	ldr	r0, [r5, #24]
   390b4:	mov	r6, #0
   390b8:	mov	r7, #0
   390bc:	cmp	r0, #0
   390c0:	mov	r0, r4
   390c4:	bne	390f0 <flatcc_json_parser_union_type@@Base+0x238>
   390c8:	mov	r0, #8
   390cc:	str	r2, [r5, #36]	; 0x24
   390d0:	add	r2, r2, #1
   390d4:	mov	r6, #0
   390d8:	mov	r7, #0
   390dc:	ldr	r1, [r5, #4]
   390e0:	sub	r1, r2, r1
   390e4:	str	r1, [r5, #20]
   390e8:	str	r0, [r5, #24]
   390ec:	mov	r0, r4
   390f0:	cmp	r0, r8
   390f4:	bne	39038 <flatcc_json_parser_union_type@@Base+0x180>
   390f8:	b	3910c <flatcc_json_parser_union_type@@Base+0x254>
   390fc:	mov	r2, r0
   39100:	strb	r6, [lr]
   39104:	cmp	r2, r8
   39108:	bne	39130 <flatcc_json_parser_union_type@@Base+0x278>
   3910c:	ldr	r3, [fp, #16]
   39110:	mov	r0, r5
   39114:	mov	r1, r8
   39118:	mov	r2, r4
   3911c:	str	lr, [sp]
   39120:	mov	r6, lr
   39124:	bl	3923c <flatcc_json_parser_union_type@@Base+0x384>
   39128:	mov	lr, r6
   3912c:	mov	r2, r0
   39130:	ldr	r0, [sp, #8]
   39134:	ldr	r1, [sp, #4]
   39138:	ldr	r1, [r0, r1, lsl #3]
   3913c:	cmp	r1, #0
   39140:	beq	391dc <flatcc_json_parser_union_type@@Base+0x324>
   39144:	ldr	r0, [r9, #4]
   39148:	str	r2, [sp, #8]
   3914c:	cmp	r0, #0
   39150:	beq	39210 <flatcc_json_parser_union_type@@Base+0x358>
   39154:	sub	r0, r0, #1
   39158:	ldr	r6, [fp, #20]
   3915c:	mov	r2, r4
   39160:	str	r0, [r9, #4]
   39164:	ldr	r0, [sl, #8]
   39168:	ldr	r8, [r5, #4]
   3916c:	ldr	r7, [r5, #16]
   39170:	str	r0, [r5, #16]
   39174:	ldr	r0, [sl, #4]
   39178:	str	r0, [r5, #4]
   3917c:	add	r0, sp, #12
   39180:	ldrb	r3, [lr]
   39184:	add	r0, r0, #4
   39188:	str	r0, [sp]
   3918c:	mov	r0, r5
   39190:	strb	r3, [sp, #12]
   39194:	blx	r6
   39198:	cmp	r0, r4
   3919c:	beq	39204 <flatcc_json_parser_union_type@@Base+0x34c>
   391a0:	ldr	r1, [fp, #8]
   391a4:	ldr	r0, [r5]
   391a8:	ldr	r2, [sp, #12]
   391ac:	ldr	r3, [sp, #16]
   391b0:	bl	32680 <flatcc_builder_table_add_union@@Base>
   391b4:	cmp	r0, #0
   391b8:	beq	391f8 <flatcc_json_parser_union_type@@Base+0x340>
   391bc:	ldr	r0, [r5, #24]
   391c0:	cmp	r0, #0
   391c4:	bne	39204 <flatcc_json_parser_union_type@@Base+0x34c>
   391c8:	ldr	r2, [sp, #8]
   391cc:	mov	r0, #28
   391d0:	str	r2, [r5, #36]	; 0x24
   391d4:	add	r2, r2, #1
   391d8:	b	38f18 <flatcc_json_parser_union_type@@Base+0x60>
   391dc:	ldrb	r0, [lr]
   391e0:	ldr	r1, [r9, #4]
   391e4:	mov	r4, r2
   391e8:	cmp	r0, #0
   391ec:	addne	r1, r1, #1
   391f0:	str	r1, [r9, #4]
   391f4:	b	39204 <flatcc_json_parser_union_type@@Base+0x34c>
   391f8:	ldr	r4, [sp, #8]
   391fc:	str	r8, [r5, #4]
   39200:	str	r7, [r5, #16]
   39204:	mov	r0, r4
   39208:	sub	sp, fp, #28
   3920c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39210:	ldr	r0, [pc, #24]	; 39230 <flatcc_json_parser_union_type@@Base+0x378>
   39214:	ldr	r1, [pc, #24]	; 39234 <flatcc_json_parser_union_type@@Base+0x37c>
   39218:	ldr	r3, [pc, #24]	; 39238 <flatcc_json_parser_union_type@@Base+0x380>
   3921c:	movw	r2, #965	; 0x3c5
   39220:	add	r0, pc, r0
   39224:	add	r1, pc, r1
   39228:	add	r3, pc, r3
   3922c:	bl	14f3c <__assert_fail@plt>
   39230:	andeq	r4, r1, r7, asr r4
   39234:	andeq	r4, r1, r2, ror #8
   39238:			; <UNDEFINED> instruction: 0x000144bf
   3923c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39240:	add	fp, sp, #28
   39244:	sub	sp, sp, #36	; 0x24
   39248:	mov	r4, r2
   3924c:	mov	r2, r1
   39250:	ldr	r1, [fp, #8]
   39254:	mov	r5, r0
   39258:	mov	r0, #0
   3925c:	mov	r6, r3
   39260:	cmp	r2, r4
   39264:	strb	r0, [r1]
   39268:	beq	392cc <flatcc_json_parser_union_type@@Base+0x414>
   3926c:	ldrb	r0, [r2]
   39270:	cmp	r0, #46	; 0x2e
   39274:	beq	39290 <flatcc_json_parser_union_type@@Base+0x3d8>
   39278:	cmp	r0, #34	; 0x22
   3927c:	bne	392c4 <flatcc_json_parser_union_type@@Base+0x40c>
   39280:	mov	r0, #0
   39284:	add	r1, r2, #1
   39288:	str	r0, [r5, #12]
   3928c:	b	392d0 <flatcc_json_parser_union_type@@Base+0x418>
   39290:	ldr	r0, [r5, #24]
   39294:	mov	r1, r4
   39298:	cmp	r0, #0
   3929c:	bne	392d0 <flatcc_json_parser_union_type@@Base+0x418>
   392a0:	str	r2, [r5, #36]	; 0x24
   392a4:	add	r2, r2, #1
   392a8:	mov	r0, #5
   392ac:	ldr	r1, [r5, #4]
   392b0:	sub	r1, r2, r1
   392b4:	str	r1, [r5, #20]
   392b8:	str	r0, [r5, #24]
   392bc:	mov	r1, r4
   392c0:	b	392d0 <flatcc_json_parser_union_type@@Base+0x418>
   392c4:	mov	r0, #1
   392c8:	str	r0, [r5, #12]
   392cc:	mov	r1, r2
   392d0:	ldr	r0, [r5, #12]
   392d4:	cmp	r0, #0
   392d8:	beq	392ec <flatcc_json_parser_union_type@@Base+0x434>
   392dc:	mov	r7, r1
   392e0:	cmp	r7, r4
   392e4:	bne	39330 <flatcc_json_parser_union_type@@Base+0x478>
   392e8:	b	39418 <flatcc_json_parser_union_type@@Base+0x560>
   392ec:	sub	r0, r4, r1
   392f0:	cmp	r0, #2
   392f4:	blt	39318 <flatcc_json_parser_union_type@@Base+0x460>
   392f8:	ldrb	r0, [r1]
   392fc:	cmp	r0, #32
   39300:	bhi	392dc <flatcc_json_parser_union_type@@Base+0x424>
   39304:	bne	39318 <flatcc_json_parser_union_type@@Base+0x460>
   39308:	mov	r7, r1
   3930c:	ldrb	r0, [r7, #1]!
   39310:	cmp	r0, #32
   39314:	bhi	39328 <flatcc_json_parser_union_type@@Base+0x470>
   39318:	mov	r0, r5
   3931c:	mov	r2, r4
   39320:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   39324:	mov	r7, r0
   39328:	cmp	r7, r4
   3932c:	beq	39418 <flatcc_json_parser_union_type@@Base+0x560>
   39330:	add	sl, r6, #4
   39334:	add	r8, sp, #24
   39338:	add	r9, sp, #20
   3933c:	str	r6, [sp, #12]
   39340:	str	sl, [sp, #8]
   39344:	b	39378 <flatcc_json_parser_union_type@@Base+0x4c0>
   39348:	ldr	r2, [fp, #8]
   3934c:	ldr	r6, [sp, #12]
   39350:	ldr	sl, [sp, #8]
   39354:	mov	r7, r0
   39358:	mov	r3, r2
   3935c:	ldrb	r2, [r2]
   39360:	add	r1, r2, r1
   39364:	strb	r1, [r3]
   39368:	ldr	r1, [sp, #16]
   3936c:	cmp	r1, #0
   39370:	subeq	sp, fp, #28
   39374:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39378:	ldr	r6, [r6]
   3937c:	add	r0, sp, #16
   39380:	mov	r1, r7
   39384:	mov	r2, r4
   39388:	mov	r3, r9
   3938c:	str	r8, [sp]
   39390:	str	r0, [sp, #4]
   39394:	mov	r0, r5
   39398:	blx	r6
   3939c:	cmp	r0, r4
   393a0:	beq	39418 <flatcc_json_parser_union_type@@Base+0x560>
   393a4:	cmp	r0, r7
   393a8:	bne	393bc <flatcc_json_parser_union_type@@Base+0x504>
   393ac:	ldr	r6, [sl], #4
   393b0:	cmp	r6, #0
   393b4:	bne	3937c <flatcc_json_parser_union_type@@Base+0x4c4>
   393b8:	b	393f0 <flatcc_json_parser_union_type@@Base+0x538>
   393bc:	ldr	r1, [sp, #20]
   393c0:	cmp	r1, #0
   393c4:	bne	39424 <flatcc_json_parser_union_type@@Base+0x56c>
   393c8:	ldr	r1, [sp, #24]
   393cc:	ldr	r2, [sp, #28]
   393d0:	subs	r3, r1, #256	; 0x100
   393d4:	sbcs	r2, r2, #0
   393d8:	bcc	39348 <flatcc_json_parser_union_type@@Base+0x490>
   393dc:	ldr	r1, [r5, #24]
   393e0:	cmp	r1, #0
   393e4:	bne	39418 <flatcc_json_parser_union_type@@Base+0x560>
   393e8:	mov	r1, #7
   393ec:	b	39434 <flatcc_json_parser_union_type@@Base+0x57c>
   393f0:	ldr	r0, [r5, #24]
   393f4:	cmp	r0, #0
   393f8:	bne	39418 <flatcc_json_parser_union_type@@Base+0x560>
   393fc:	str	r7, [r5, #36]	; 0x24
   39400:	add	r2, r7, #1
   39404:	mov	r0, #23
   39408:	ldr	r1, [r5, #4]
   3940c:	sub	r1, r2, r1
   39410:	str	r1, [r5, #20]
   39414:	str	r0, [r5, #24]
   39418:	mov	r0, r4
   3941c:	sub	sp, fp, #28
   39420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39424:	ldr	r1, [r5, #24]
   39428:	cmp	r1, #0
   3942c:	bne	39418 <flatcc_json_parser_union_type@@Base+0x560>
   39430:	mov	r1, #8
   39434:	str	r0, [r5, #36]	; 0x24
   39438:	add	r0, r0, #1
   3943c:	ldr	r2, [r5, #4]
   39440:	sub	r0, r0, r2
   39444:	str	r0, [r5, #20]
   39448:	str	r1, [r5, #24]
   3944c:	b	39418 <flatcc_json_parser_union_type@@Base+0x560>

00039450 <flatcc_json_parser_union_vector@@Base>:
   39450:	push	{r4, r5, r6, r7, fp, lr}
   39454:	add	fp, sp, #16
   39458:	sub	sp, sp, #16
   3945c:	mov	r6, r1
   39460:	mov	r5, r0
   39464:	ldr	r0, [r0]
   39468:	ldr	r1, [fp, #12]
   3946c:	mov	r7, r3
   39470:	mov	r4, r2
   39474:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   39478:	add	r2, r0, #8
   3947c:	add	r3, r7, r7, lsl #1
   39480:	mov	r1, r2
   39484:	ldr	r7, [r1, r3, lsl #3]!
   39488:	cmp	r7, #0
   3948c:	beq	394c4 <flatcc_json_parser_union_vector@@Base+0x74>
   39490:	ldr	r0, [r5, #24]
   39494:	cmp	r0, #0
   39498:	bne	394b8 <flatcc_json_parser_union_vector@@Base+0x68>
   3949c:	str	r6, [r5, #36]	; 0x24
   394a0:	add	r2, r6, #1
   394a4:	mov	r0, #28
   394a8:	ldr	r1, [r5, #4]
   394ac:	sub	r1, r2, r1
   394b0:	str	r1, [r5, #20]
   394b4:	str	r0, [r5, #24]
   394b8:	mov	r0, r4
   394bc:	sub	sp, fp, #16
   394c0:	pop	{r4, r5, r6, r7, fp, pc}
   394c4:	add	r2, r2, r3, lsl #3
   394c8:	ldr	r3, [r0, #4]
   394cc:	ldrb	r7, [r2, #12]
   394d0:	cmp	r7, #0
   394d4:	beq	39510 <flatcc_json_parser_union_vector@@Base+0xc0>
   394d8:	sub	r3, r3, #1
   394dc:	ldr	r1, [fp, #16]
   394e0:	ldr	r7, [fp, #8]
   394e4:	str	r3, [r0, #4]
   394e8:	ldr	r0, [r2, #16]
   394ec:	ldr	r3, [r2, #20]
   394f0:	mov	r2, r4
   394f4:	stm	sp, {r0, r7}
   394f8:	str	r1, [sp, #8]
   394fc:	mov	r0, r5
   39500:	mov	r1, r6
   39504:	bl	39544 <flatcc_json_parser_union_vector@@Base+0xf4>
   39508:	sub	sp, fp, #16
   3950c:	pop	{r4, r5, r6, r7, fp, pc}
   39510:	add	r3, r3, #1
   39514:	str	r3, [r0, #4]
   39518:	ldr	r0, [r5, #16]
   3951c:	str	r0, [r2, #8]
   39520:	ldr	r0, [r5, #4]
   39524:	str	r0, [r2, #4]
   39528:	str	r6, [r1]
   3952c:	mov	r0, r5
   39530:	mov	r1, r6
   39534:	mov	r2, r4
   39538:	sub	sp, fp, #16
   3953c:	pop	{r4, r5, r6, r7, fp, lr}
   39540:	b	36b90 <flatcc_json_parser_generic_json@@Base>
   39544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39548:	add	fp, sp, #28
   3954c:	sub	sp, sp, #12
   39550:	mov	r5, r0
   39554:	mov	r0, #0
   39558:	mov	r8, r3
   3955c:	mov	r6, r2
   39560:	mov	r7, r1
   39564:	str	r0, [sp, #8]
   39568:	ldr	r0, [r5]
   3956c:	bl	31040 <flatcc_builder_start_offset_vector@@Base>
   39570:	cmp	r0, #0
   39574:	beq	39594 <flatcc_json_parser_union_vector@@Base+0x144>
   39578:	ldr	r0, [r5, #24]
   3957c:	cmp	r0, #0
   39580:	bne	39610 <flatcc_json_parser_union_vector@@Base+0x1c0>
   39584:	str	r7, [r5, #36]	; 0x24
   39588:	mov	r0, #33	; 0x21
   3958c:	add	r2, r7, #1
   39590:	b	39600 <flatcc_json_parser_union_vector@@Base+0x1b0>
   39594:	ldr	sl, [fp, #8]
   39598:	cmp	r7, r6
   3959c:	beq	395d0 <flatcc_json_parser_union_vector@@Base+0x180>
   395a0:	ldrb	r0, [r7]
   395a4:	cmp	r0, #91	; 0x5b
   395a8:	bne	395d0 <flatcc_json_parser_union_vector@@Base+0x180>
   395ac:	add	r1, r7, #1
   395b0:	sub	r0, r6, r1
   395b4:	cmp	r0, #2
   395b8:	blt	396a4 <flatcc_json_parser_union_vector@@Base+0x254>
   395bc:	ldrb	r0, [r1]
   395c0:	cmp	r0, #32
   395c4:	bls	39694 <flatcc_json_parser_union_vector@@Base+0x244>
   395c8:	mov	r7, r1
   395cc:	b	396b4 <flatcc_json_parser_union_vector@@Base+0x264>
   395d0:	ldr	r0, [r5, #24]
   395d4:	mov	r9, r6
   395d8:	cmp	r0, #0
   395dc:	beq	3961c <flatcc_json_parser_union_vector@@Base+0x1cc>
   395e0:	cmp	sl, #0
   395e4:	beq	39644 <flatcc_json_parser_union_vector@@Base+0x1f4>
   395e8:	ldr	r0, [r5, #24]
   395ec:	cmp	r0, #0
   395f0:	bne	39610 <flatcc_json_parser_union_vector@@Base+0x1c0>
   395f4:	str	r9, [r5, #36]	; 0x24
   395f8:	mov	r0, #30
   395fc:	add	r2, r9, #1
   39600:	ldr	r1, [r5, #4]
   39604:	sub	r1, r2, r1
   39608:	str	r1, [r5, #20]
   3960c:	str	r0, [r5, #24]
   39610:	mov	r0, r6
   39614:	sub	sp, fp, #28
   39618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3961c:	str	r7, [r5, #36]	; 0x24
   39620:	add	r2, r7, #1
   39624:	mov	r0, #22
   39628:	mov	r9, r6
   3962c:	ldr	r1, [r5, #4]
   39630:	sub	r1, r2, r1
   39634:	str	r1, [r5, #20]
   39638:	str	r0, [r5, #24]
   3963c:	cmp	sl, #0
   39640:	bne	395e8 <flatcc_json_parser_union_vector@@Base+0x198>
   39644:	ldr	r0, [r5]
   39648:	mov	r1, r8
   3964c:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   39650:	mov	r1, r0
   39654:	ldr	r0, [r5]
   39658:	bl	32588 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3965c:	cmp	r0, #0
   39660:	str	r0, [sp, #8]
   39664:	beq	3968c <flatcc_json_parser_union_vector@@Base+0x23c>
   39668:	ldr	r1, [fp, #12]
   3966c:	ldr	r0, [r5]
   39670:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   39674:	cmp	r0, #0
   39678:	beq	3968c <flatcc_json_parser_union_vector@@Base+0x23c>
   3967c:	ldr	r1, [sp, #8]
   39680:	mov	r6, r9
   39684:	str	r1, [r0]
   39688:	b	39610 <flatcc_json_parser_union_vector@@Base+0x1c0>
   3968c:	mov	r7, r9
   39690:	b	39578 <flatcc_json_parser_union_vector@@Base+0x128>
   39694:	bne	396a4 <flatcc_json_parser_union_vector@@Base+0x254>
   39698:	ldrb	r0, [r7, #2]!
   3969c:	cmp	r0, #32
   396a0:	bhi	396b4 <flatcc_json_parser_union_vector@@Base+0x264>
   396a4:	mov	r0, r5
   396a8:	mov	r2, r6
   396ac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   396b0:	mov	r7, r0
   396b4:	cmp	r7, r6
   396b8:	mov	r4, r6
   396bc:	beq	396fc <flatcc_json_parser_union_vector@@Base+0x2ac>
   396c0:	ldrb	r0, [r7]
   396c4:	cmp	r0, #93	; 0x5d
   396c8:	bne	396f8 <flatcc_json_parser_union_vector@@Base+0x2a8>
   396cc:	add	r1, r7, #1
   396d0:	sub	r0, r6, r1
   396d4:	cmp	r0, #2
   396d8:	blt	39868 <flatcc_json_parser_union_vector@@Base+0x418>
   396dc:	ldrb	r0, [r1]
   396e0:	cmp	r0, #32
   396e4:	bls	39854 <flatcc_json_parser_union_vector@@Base+0x404>
   396e8:	mov	r9, r1
   396ec:	cmp	sl, #0
   396f0:	bne	395e8 <flatcc_json_parser_union_vector@@Base+0x198>
   396f4:	b	39644 <flatcc_json_parser_union_vector@@Base+0x1f4>
   396f8:	mov	r4, r7
   396fc:	cmp	sl, #0
   39700:	beq	39838 <flatcc_json_parser_union_vector@@Base+0x3e8>
   39704:	add	r0, r6, #1
   39708:	mov	sl, #0
   3970c:	add	r9, sp, #8
   39710:	str	r0, [sp, #4]
   39714:	ldr	r0, [r5]
   39718:	mov	r1, r8
   3971c:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   39720:	ldrb	r3, [r0, -sl]
   39724:	ldr	r7, [fp, #16]
   39728:	mov	r0, r5
   3972c:	mov	r1, r4
   39730:	mov	r2, r6
   39734:	str	r9, [sp]
   39738:	blx	r7
   3973c:	cmp	r0, r6
   39740:	beq	39610 <flatcc_json_parser_union_vector@@Base+0x1c0>
   39744:	mov	r7, r0
   39748:	ldr	r0, [r5]
   3974c:	mov	r1, #1
   39750:	bl	30798 <flatcc_builder_extend_offset_vector@@Base>
   39754:	cmp	r0, #0
   39758:	beq	39578 <flatcc_json_parser_union_vector@@Base+0x128>
   3975c:	ldr	r1, [sp, #8]
   39760:	str	r1, [r0]
   39764:	sub	r0, r6, r7
   39768:	cmp	r0, #2
   3976c:	blt	397a0 <flatcc_json_parser_union_vector@@Base+0x350>
   39770:	ldrb	r0, [r7]
   39774:	cmp	r0, #32
   39778:	bls	3978c <flatcc_json_parser_union_vector@@Base+0x33c>
   3977c:	mov	r4, r7
   39780:	cmp	r4, r6
   39784:	bne	397bc <flatcc_json_parser_union_vector@@Base+0x36c>
   39788:	b	39884 <flatcc_json_parser_union_vector@@Base+0x434>
   3978c:	bne	397a0 <flatcc_json_parser_union_vector@@Base+0x350>
   39790:	mov	r4, r7
   39794:	ldrb	r0, [r4, #1]!
   39798:	cmp	r0, #32
   3979c:	bhi	397b4 <flatcc_json_parser_union_vector@@Base+0x364>
   397a0:	mov	r0, r5
   397a4:	mov	r1, r7
   397a8:	mov	r2, r6
   397ac:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   397b0:	mov	r4, r0
   397b4:	cmp	r4, r6
   397b8:	beq	39884 <flatcc_json_parser_union_vector@@Base+0x434>
   397bc:	ldrb	r0, [r4]
   397c0:	cmp	r0, #44	; 0x2c
   397c4:	bne	3988c <flatcc_json_parser_union_vector@@Base+0x43c>
   397c8:	add	r1, r4, #1
   397cc:	sub	r0, r6, r1
   397d0:	cmp	r0, #2
   397d4:	blt	39804 <flatcc_json_parser_union_vector@@Base+0x3b4>
   397d8:	ldrb	r0, [r1]
   397dc:	cmp	r0, #32
   397e0:	bls	397f4 <flatcc_json_parser_union_vector@@Base+0x3a4>
   397e4:	mov	r4, r1
   397e8:	cmp	r4, r6
   397ec:	bne	3981c <flatcc_json_parser_union_vector@@Base+0x3cc>
   397f0:	b	398b8 <flatcc_json_parser_union_vector@@Base+0x468>
   397f4:	bne	39804 <flatcc_json_parser_union_vector@@Base+0x3b4>
   397f8:	ldrb	r0, [r4, #2]!
   397fc:	cmp	r0, #32
   39800:	bhi	39814 <flatcc_json_parser_union_vector@@Base+0x3c4>
   39804:	mov	r0, r5
   39808:	mov	r2, r6
   3980c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   39810:	mov	r4, r0
   39814:	cmp	r4, r6
   39818:	beq	398b8 <flatcc_json_parser_union_vector@@Base+0x468>
   3981c:	ldrb	r0, [r4]
   39820:	cmp	r0, #93	; 0x5d
   39824:	beq	39894 <flatcc_json_parser_union_vector@@Base+0x444>
   39828:	ldr	r0, [fp, #8]
   3982c:	sub	sl, sl, #1
   39830:	adds	r0, r0, sl
   39834:	bne	39714 <flatcc_json_parser_union_vector@@Base+0x2c4>
   39838:	ldr	r0, [r5, #24]
   3983c:	cmp	r0, #0
   39840:	bne	39610 <flatcc_json_parser_union_vector@@Base+0x1c0>
   39844:	str	r4, [r5, #36]	; 0x24
   39848:	mov	r0, #30
   3984c:	add	r2, r4, #1
   39850:	b	39600 <flatcc_json_parser_union_vector@@Base+0x1b0>
   39854:	bne	39868 <flatcc_json_parser_union_vector@@Base+0x418>
   39858:	ldrb	r0, [r7, #2]!
   3985c:	cmp	r0, #32
   39860:	mov	r9, r7
   39864:	bhi	395e0 <flatcc_json_parser_union_vector@@Base+0x190>
   39868:	mov	r0, r5
   3986c:	mov	r2, r6
   39870:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   39874:	mov	r9, r0
   39878:	cmp	sl, #0
   3987c:	bne	395e8 <flatcc_json_parser_union_vector@@Base+0x198>
   39880:	b	39644 <flatcc_json_parser_union_vector@@Base+0x1f4>
   39884:	mov	r9, r6
   39888:	b	39930 <flatcc_json_parser_union_vector@@Base+0x4e0>
   3988c:	cmp	r0, #93	; 0x5d
   39890:	bne	398d8 <flatcc_json_parser_union_vector@@Base+0x488>
   39894:	add	r1, r4, #1
   39898:	sub	r0, r6, r1
   3989c:	cmp	r0, #2
   398a0:	blt	39920 <flatcc_json_parser_union_vector@@Base+0x4d0>
   398a4:	ldrb	r0, [r1]
   398a8:	cmp	r0, #32
   398ac:	bls	3990c <flatcc_json_parser_union_vector@@Base+0x4bc>
   398b0:	mov	r9, r1
   398b4:	b	39930 <flatcc_json_parser_union_vector@@Base+0x4e0>
   398b8:	ldr	r0, [r5, #24]
   398bc:	mov	r9, r6
   398c0:	cmp	r0, #0
   398c4:	bne	39930 <flatcc_json_parser_union_vector@@Base+0x4e0>
   398c8:	str	r6, [r5, #36]	; 0x24
   398cc:	ldr	r2, [sp, #4]
   398d0:	mov	r0, #9
   398d4:	b	398f4 <flatcc_json_parser_union_vector@@Base+0x4a4>
   398d8:	ldr	r0, [r5, #24]
   398dc:	mov	r9, r6
   398e0:	cmp	r0, #0
   398e4:	bne	39930 <flatcc_json_parser_union_vector@@Base+0x4e0>
   398e8:	str	r4, [r5, #36]	; 0x24
   398ec:	mov	r0, #9
   398f0:	add	r2, r4, #1
   398f4:	ldr	r1, [r5, #4]
   398f8:	sub	r1, r2, r1
   398fc:	mov	r9, r6
   39900:	str	r1, [r5, #20]
   39904:	str	r0, [r5, #24]
   39908:	b	39930 <flatcc_json_parser_union_vector@@Base+0x4e0>
   3990c:	bne	39920 <flatcc_json_parser_union_vector@@Base+0x4d0>
   39910:	ldrb	r0, [r4, #2]!
   39914:	cmp	r0, #32
   39918:	mov	r9, r4
   3991c:	bhi	39930 <flatcc_json_parser_union_vector@@Base+0x4e0>
   39920:	mov	r0, r5
   39924:	mov	r2, r6
   39928:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   3992c:	mov	r9, r0
   39930:	ldr	r0, [fp, #8]
   39934:	add	r0, r0, sl
   39938:	cmp	r0, #1
   3993c:	bne	395e8 <flatcc_json_parser_union_vector@@Base+0x198>
   39940:	b	39644 <flatcc_json_parser_union_vector@@Base+0x1f4>

00039944 <flatcc_json_parser_union_type_vector@@Base>:
   39944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39948:	add	fp, sp, #28
   3994c:	sub	sp, sp, #28
   39950:	mov	r7, r1
   39954:	mov	r5, r0
   39958:	ldr	r0, [r0]
   3995c:	ldr	r1, [fp, #12]
   39960:	mov	r4, r3
   39964:	mov	r8, r2
   39968:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   3996c:	add	r0, r0, #8
   39970:	add	r6, r4, r4, lsl #1
   39974:	add	r4, r0, r6, lsl #3
   39978:	mov	r0, r4
   3997c:	ldrb	r1, [r0, #12]!
   39980:	cmp	r1, #0
   39984:	beq	399a4 <flatcc_json_parser_union_type_vector@@Base+0x60>
   39988:	ldr	r0, [r5, #24]
   3998c:	cmp	r0, #0
   39990:	bne	399f4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   39994:	str	r7, [r5, #36]	; 0x24
   39998:	mov	r0, #28
   3999c:	add	r2, r7, #1
   399a0:	b	399e4 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   399a4:	mov	r1, #1
   399a8:	mov	r2, #1
   399ac:	mvn	r3, #0
   399b0:	strb	r1, [r0]
   399b4:	mov	r1, #1
   399b8:	ldr	r0, [r5]
   399bc:	bl	30fb4 <flatcc_builder_start_vector@@Base>
   399c0:	cmp	r0, #0
   399c4:	beq	39a00 <flatcc_json_parser_union_type_vector@@Base+0xbc>
   399c8:	mov	sl, r7
   399cc:	ldr	r0, [r5, #24]
   399d0:	cmp	r0, #0
   399d4:	bne	399f4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   399d8:	str	sl, [r5, #36]	; 0x24
   399dc:	mov	r0, #33	; 0x21
   399e0:	add	r2, sl, #1
   399e4:	ldr	r1, [r5, #4]
   399e8:	sub	r1, r2, r1
   399ec:	str	r1, [r5, #20]
   399f0:	str	r0, [r5, #24]
   399f4:	mov	r0, r8
   399f8:	sub	sp, fp, #28
   399fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39a00:	cmp	r7, r8
   39a04:	beq	39a38 <flatcc_json_parser_union_type_vector@@Base+0xf4>
   39a08:	ldrb	r0, [r7]
   39a0c:	cmp	r0, #91	; 0x5b
   39a10:	bne	39a38 <flatcc_json_parser_union_type_vector@@Base+0xf4>
   39a14:	add	r1, r7, #1
   39a18:	sub	r0, r8, r1
   39a1c:	cmp	r0, #2
   39a20:	blt	39a7c <flatcc_json_parser_union_type_vector@@Base+0x138>
   39a24:	ldrb	r0, [r1]
   39a28:	cmp	r0, #32
   39a2c:	bls	39a6c <flatcc_json_parser_union_type_vector@@Base+0x128>
   39a30:	mov	r7, r1
   39a34:	b	39a8c <flatcc_json_parser_union_type_vector@@Base+0x148>
   39a38:	ldr	r0, [r5, #24]
   39a3c:	cmp	r0, #0
   39a40:	mov	r0, r8
   39a44:	bne	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39a48:	str	r7, [r5, #36]	; 0x24
   39a4c:	mov	r0, #22
   39a50:	add	r2, r7, #1
   39a54:	ldr	r1, [r5, #4]
   39a58:	sub	r1, r2, r1
   39a5c:	str	r1, [r5, #20]
   39a60:	str	r0, [r5, #24]
   39a64:	mov	r0, r8
   39a68:	b	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39a6c:	bne	39a7c <flatcc_json_parser_union_type_vector@@Base+0x138>
   39a70:	ldrb	r0, [r7, #2]!
   39a74:	cmp	r0, #32
   39a78:	bhi	39a8c <flatcc_json_parser_union_type_vector@@Base+0x148>
   39a7c:	mov	r0, r5
   39a80:	mov	r2, r8
   39a84:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   39a88:	mov	r7, r0
   39a8c:	cmp	r7, r8
   39a90:	mov	sl, r8
   39a94:	beq	39adc <flatcc_json_parser_union_type_vector@@Base+0x198>
   39a98:	ldrb	r0, [r7]
   39a9c:	cmp	r0, #93	; 0x5d
   39aa0:	bne	39ad8 <flatcc_json_parser_union_type_vector@@Base+0x194>
   39aa4:	add	r1, r7, #1
   39aa8:	sub	r0, r8, r1
   39aac:	cmp	r0, #2
   39ab0:	blt	39f04 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   39ab4:	ldrb	r0, [r1]
   39ab8:	cmp	r0, #32
   39abc:	bhi	39e84 <flatcc_json_parser_union_type_vector@@Base+0x540>
   39ac0:	bne	39f04 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   39ac4:	ldrb	r0, [r7, #2]!
   39ac8:	cmp	r0, #32
   39acc:	mov	r0, r7
   39ad0:	bls	39f04 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   39ad4:	b	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39ad8:	mov	sl, r7
   39adc:	ldr	r0, [r5]
   39ae0:	mov	r1, #1
   39ae4:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   39ae8:	cmp	r0, #0
   39aec:	beq	399cc <flatcc_json_parser_union_type_vector@@Base+0x88>
   39af0:	mov	r1, r0
   39af4:	add	r0, r8, #1
   39af8:	str	r4, [sp, #16]
   39afc:	str	r0, [sp, #12]
   39b00:	mov	r9, #0
   39b04:	cmp	sl, r8
   39b08:	mov	r4, r8
   39b0c:	str	r1, [sp, #20]
   39b10:	strb	r9, [sp, #27]
   39b14:	beq	39d04 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   39b18:	mov	r2, sl
   39b1c:	mov	r9, #0
   39b20:	ldrb	ip, [r2], #1
   39b24:	cmp	ip, #45	; 0x2d
   39b28:	movne	r2, sl
   39b2c:	cmp	r2, r8
   39b30:	beq	39b9c <flatcc_json_parser_union_type_vector@@Base+0x258>
   39b34:	mov	r7, #0
   39b38:	mov	r0, #0
   39b3c:	mov	r4, #10
   39b40:	ldrb	r1, [r2]
   39b44:	sub	r3, r1, #48	; 0x30
   39b48:	uxtb	r3, r3
   39b4c:	cmp	r3, #9
   39b50:	bhi	39bb0 <flatcc_json_parser_union_type_vector@@Base+0x26c>
   39b54:	add	r3, r0, r0, lsl #2
   39b58:	lsl	r3, r3, #1
   39b5c:	umlal	r1, r3, r7, r4
   39b60:	subs	r1, r1, #48	; 0x30
   39b64:	sbc	r3, r3, #0
   39b68:	subs	r7, r1, r7
   39b6c:	sbcs	r0, r3, r0
   39b70:	bcc	39c1c <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   39b74:	add	r2, r2, #1
   39b78:	mov	r7, r1
   39b7c:	mov	r0, r3
   39b80:	cmp	r8, r2
   39b84:	bne	39b40 <flatcc_json_parser_union_type_vector@@Base+0x1fc>
   39b88:	mov	lr, #0
   39b8c:	mov	r2, r8
   39b90:	mov	r7, r1
   39b94:	mov	r0, r3
   39b98:	b	39bb4 <flatcc_json_parser_union_type_vector@@Base+0x270>
   39b9c:	mov	r2, r8
   39ba0:	mov	r7, #0
   39ba4:	mov	r0, #0
   39ba8:	mov	lr, #0
   39bac:	b	39bb4 <flatcc_json_parser_union_type_vector@@Base+0x270>
   39bb0:	mov	lr, #1
   39bb4:	cmp	r2, sl
   39bb8:	mov	r4, sl
   39bbc:	beq	39d04 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   39bc0:	cmp	lr, #0
   39bc4:	beq	39c14 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   39bc8:	ldrb	r1, [r2]
   39bcc:	cmp	r1, #46	; 0x2e
   39bd0:	beq	39be0 <flatcc_json_parser_union_type_vector@@Base+0x29c>
   39bd4:	cmp	r1, #101	; 0x65
   39bd8:	cmpne	r1, #69	; 0x45
   39bdc:	bne	39c14 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   39be0:	ldr	r0, [r5, #24]
   39be4:	mov	r7, #0
   39be8:	mov	r4, r8
   39bec:	cmp	r0, #0
   39bf0:	mov	r0, #0
   39bf4:	bne	39c5c <flatcc_json_parser_union_type_vector@@Base+0x318>
   39bf8:	str	r2, [r5, #36]	; 0x24
   39bfc:	add	r1, r2, #1
   39c00:	ldr	r0, [r5, #4]
   39c04:	sub	r0, r1, r0
   39c08:	str	r0, [r5, #20]
   39c0c:	mov	r0, #12
   39c10:	b	39c4c <flatcc_json_parser_union_type_vector@@Base+0x308>
   39c14:	mov	r4, r2
   39c18:	b	39c5c <flatcc_json_parser_union_type_vector@@Base+0x318>
   39c1c:	ldr	r0, [r5, #24]
   39c20:	mov	r7, #0
   39c24:	mov	r4, r8
   39c28:	cmp	r0, #0
   39c2c:	mov	r0, #0
   39c30:	bne	39c5c <flatcc_json_parser_union_type_vector@@Base+0x318>
   39c34:	str	r2, [r5, #36]	; 0x24
   39c38:	add	r1, r2, #1
   39c3c:	ldr	r0, [r5, #4]
   39c40:	sub	r0, r1, r0
   39c44:	str	r0, [r5, #20]
   39c48:	mov	r0, #8
   39c4c:	str	r0, [r5, #24]
   39c50:	mov	r7, #0
   39c54:	mov	r0, #0
   39c58:	mov	r4, r8
   39c5c:	mov	r9, #0
   39c60:	cmp	r4, sl
   39c64:	beq	39c98 <flatcc_json_parser_union_type_vector@@Base+0x354>
   39c68:	cmp	ip, #45	; 0x2d
   39c6c:	bne	39ca8 <flatcc_json_parser_union_type_vector@@Base+0x364>
   39c70:	ldr	r0, [r5, #24]
   39c74:	cmp	r0, #0
   39c78:	bne	39cc0 <flatcc_json_parser_union_type_vector@@Base+0x37c>
   39c7c:	str	r4, [r5, #36]	; 0x24
   39c80:	add	r1, r4, #1
   39c84:	ldr	r0, [r5, #4]
   39c88:	sub	r0, r1, r0
   39c8c:	str	r0, [r5, #20]
   39c90:	mov	r0, #8
   39c94:	b	39cfc <flatcc_json_parser_union_type_vector@@Base+0x3b8>
   39c98:	mov	r4, sl
   39c9c:	cmp	sl, r4
   39ca0:	bne	39d40 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   39ca4:	b	39d0c <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   39ca8:	subs	r1, r7, #256	; 0x100
   39cac:	sbcs	r0, r0, #0
   39cb0:	bcc	39cd0 <flatcc_json_parser_union_type_vector@@Base+0x38c>
   39cb4:	ldr	r0, [r5, #24]
   39cb8:	cmp	r0, #0
   39cbc:	beq	39ce4 <flatcc_json_parser_union_type_vector@@Base+0x3a0>
   39cc0:	mov	r4, r8
   39cc4:	cmp	sl, r4
   39cc8:	bne	39d40 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   39ccc:	b	39d0c <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   39cd0:	mov	r9, r7
   39cd4:	strb	r7, [sp, #27]
   39cd8:	cmp	sl, r4
   39cdc:	bne	39d40 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   39ce0:	b	39d0c <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   39ce4:	str	r4, [r5, #36]	; 0x24
   39ce8:	add	r1, r4, #1
   39cec:	ldr	r0, [r5, #4]
   39cf0:	sub	r0, r1, r0
   39cf4:	str	r0, [r5, #20]
   39cf8:	mov	r0, #7
   39cfc:	str	r0, [r5, #24]
   39d00:	mov	r4, r8
   39d04:	cmp	sl, r4
   39d08:	bne	39d40 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   39d0c:	ldr	r3, [fp, #16]
   39d10:	add	r0, sp, #27
   39d14:	mov	r1, sl
   39d18:	mov	r2, r8
   39d1c:	str	r0, [sp]
   39d20:	mov	r0, r5
   39d24:	bl	3923c <flatcc_json_parser_union_type@@Base+0x384>
   39d28:	mov	r4, r0
   39d2c:	cmp	r0, sl
   39d30:	beq	39ecc <flatcc_json_parser_union_type_vector@@Base+0x588>
   39d34:	cmp	r4, r8
   39d38:	beq	39ecc <flatcc_json_parser_union_type_vector@@Base+0x588>
   39d3c:	ldrb	r9, [sp, #27]
   39d40:	ldr	r1, [fp, #24]
   39d44:	uxtb	r0, r9
   39d48:	blx	r1
   39d4c:	cmp	r0, #0
   39d50:	bne	39d68 <flatcc_json_parser_union_type_vector@@Base+0x424>
   39d54:	ldrb	r0, [r5, #8]
   39d58:	tst	r0, #1
   39d5c:	beq	39ed4 <flatcc_json_parser_union_type_vector@@Base+0x590>
   39d60:	mov	r9, #0
   39d64:	strb	r9, [sp, #27]
   39d68:	ldr	r0, [sp, #20]
   39d6c:	strb	r9, [r0]
   39d70:	sub	r0, r8, r4
   39d74:	cmp	r0, #2
   39d78:	blt	39dac <flatcc_json_parser_union_type_vector@@Base+0x468>
   39d7c:	ldrb	r0, [r4]
   39d80:	cmp	r0, #32
   39d84:	bls	39d98 <flatcc_json_parser_union_type_vector@@Base+0x454>
   39d88:	mov	sl, r4
   39d8c:	cmp	sl, r8
   39d90:	bne	39dc8 <flatcc_json_parser_union_type_vector@@Base+0x484>
   39d94:	b	39e54 <flatcc_json_parser_union_type_vector@@Base+0x510>
   39d98:	bne	39dac <flatcc_json_parser_union_type_vector@@Base+0x468>
   39d9c:	mov	sl, r4
   39da0:	ldrb	r0, [sl, #1]!
   39da4:	cmp	r0, #32
   39da8:	bhi	39dc0 <flatcc_json_parser_union_type_vector@@Base+0x47c>
   39dac:	mov	r0, r5
   39db0:	mov	r1, r4
   39db4:	mov	r2, r8
   39db8:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   39dbc:	mov	sl, r0
   39dc0:	cmp	sl, r8
   39dc4:	beq	39e54 <flatcc_json_parser_union_type_vector@@Base+0x510>
   39dc8:	ldrb	r0, [sl]
   39dcc:	ldr	r4, [sp, #16]
   39dd0:	cmp	r0, #44	; 0x2c
   39dd4:	bne	39e60 <flatcc_json_parser_union_type_vector@@Base+0x51c>
   39dd8:	add	r1, sl, #1
   39ddc:	sub	r0, r8, r1
   39de0:	cmp	r0, #2
   39de4:	blt	39e14 <flatcc_json_parser_union_type_vector@@Base+0x4d0>
   39de8:	ldrb	r0, [r1]
   39dec:	cmp	r0, #32
   39df0:	bls	39e04 <flatcc_json_parser_union_type_vector@@Base+0x4c0>
   39df4:	mov	sl, r1
   39df8:	cmp	sl, r8
   39dfc:	bne	39e2c <flatcc_json_parser_union_type_vector@@Base+0x4e8>
   39e00:	b	39e8c <flatcc_json_parser_union_type_vector@@Base+0x548>
   39e04:	bne	39e14 <flatcc_json_parser_union_type_vector@@Base+0x4d0>
   39e08:	ldrb	r0, [sl, #2]!
   39e0c:	cmp	r0, #32
   39e10:	bhi	39e24 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   39e14:	mov	r0, r5
   39e18:	mov	r2, r8
   39e1c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   39e20:	mov	sl, r0
   39e24:	cmp	sl, r8
   39e28:	beq	39e8c <flatcc_json_parser_union_type_vector@@Base+0x548>
   39e2c:	ldrb	r0, [sl]
   39e30:	cmp	r0, #93	; 0x5d
   39e34:	beq	39e68 <flatcc_json_parser_union_type_vector@@Base+0x524>
   39e38:	ldr	r0, [r5]
   39e3c:	mov	r1, #1
   39e40:	bl	303f0 <flatcc_builder_extend_vector@@Base>
   39e44:	mov	r1, r0
   39e48:	cmp	r0, #0
   39e4c:	bne	39b00 <flatcc_json_parser_union_type_vector@@Base+0x1bc>
   39e50:	b	399cc <flatcc_json_parser_union_type_vector@@Base+0x88>
   39e54:	ldr	r4, [sp, #16]
   39e58:	mov	r0, r8
   39e5c:	b	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39e60:	cmp	r0, #93	; 0x5d
   39e64:	bne	39eac <flatcc_json_parser_union_type_vector@@Base+0x568>
   39e68:	add	r1, sl, #1
   39e6c:	sub	r0, r8, r1
   39e70:	cmp	r0, #2
   39e74:	blt	39f04 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   39e78:	ldrb	r0, [r1]
   39e7c:	cmp	r0, #32
   39e80:	bls	39ef0 <flatcc_json_parser_union_type_vector@@Base+0x5ac>
   39e84:	mov	r0, r1
   39e88:	b	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39e8c:	ldr	r0, [r5, #24]
   39e90:	cmp	r0, #0
   39e94:	mov	r0, r8
   39e98:	bne	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39e9c:	str	r8, [r5, #36]	; 0x24
   39ea0:	ldr	r2, [sp, #12]
   39ea4:	mov	r0, #9
   39ea8:	b	39a54 <flatcc_json_parser_union_type_vector@@Base+0x110>
   39eac:	ldr	r0, [r5, #24]
   39eb0:	cmp	r0, #0
   39eb4:	mov	r0, r8
   39eb8:	bne	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39ebc:	str	sl, [r5, #36]	; 0x24
   39ec0:	mov	r0, #9
   39ec4:	add	r2, sl, #1
   39ec8:	b	39a54 <flatcc_json_parser_union_type_vector@@Base+0x110>
   39ecc:	mov	sl, r4
   39ed0:	b	399cc <flatcc_json_parser_union_type_vector@@Base+0x88>
   39ed4:	ldr	r0, [r5, #24]
   39ed8:	cmp	r0, #0
   39edc:	bne	399f4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   39ee0:	str	r4, [r5, #36]	; 0x24
   39ee4:	mov	r0, #15
   39ee8:	add	r2, r4, #1
   39eec:	b	399e4 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   39ef0:	bne	39f04 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   39ef4:	ldrb	r0, [sl, #2]!
   39ef8:	cmp	r0, #32
   39efc:	mov	r0, sl
   39f00:	bhi	39f10 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   39f04:	mov	r0, r5
   39f08:	mov	r2, r8
   39f0c:	bl	36128 <flatcc_json_parser_space_ext@@Base>
   39f10:	mov	sl, r0
   39f14:	ldr	r0, [r5]
   39f18:	bl	32330 <flatcc_builder_vector_count@@Base>
   39f1c:	str	r0, [r4, #16]
   39f20:	mov	r7, r0
   39f24:	ldr	r0, [r5]
   39f28:	mov	r1, r7
   39f2c:	bl	2f6b4 <flatcc_builder_enter_user_frame@@Base>
   39f30:	mov	r9, r0
   39f34:	ldr	r0, [r5]
   39f38:	mov	r1, r9
   39f3c:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   39f40:	mov	r4, r0
   39f44:	ldr	r0, [r5]
   39f48:	bl	3233c <flatcc_builder_vector_edit@@Base>
   39f4c:	mov	r1, r0
   39f50:	mov	r0, r4
   39f54:	mov	r2, r7
   39f58:	bl	14e58 <memcpy@plt>
   39f5c:	ldr	r0, [r5]
   39f60:	bl	32234 <flatcc_builder_end_vector@@Base>
   39f64:	cmp	r0, #0
   39f68:	beq	399cc <flatcc_json_parser_union_type_vector@@Base+0x88>
   39f6c:	ldr	r1, [fp, #8]
   39f70:	mov	r4, r0
   39f74:	ldr	r0, [r5]
   39f78:	sub	r1, r1, #1
   39f7c:	bl	327b0 <flatcc_builder_table_add_offset@@Base>
   39f80:	cmp	r0, #0
   39f84:	beq	399cc <flatcc_json_parser_union_type_vector@@Base+0x88>
   39f88:	str	r4, [r0]
   39f8c:	ldr	r1, [fp, #12]
   39f90:	ldr	r0, [r5]
   39f94:	bl	2f874 <flatcc_builder_get_user_frame_ptr@@Base>
   39f98:	add	r2, r0, #8
   39f9c:	mov	r3, r2
   39fa0:	ldr	r1, [r3, r6, lsl #3]!
   39fa4:	str	r9, [r3, #20]
   39fa8:	cmp	r1, #0
   39fac:	ldr	r3, [r0, #4]
   39fb0:	beq	3a014 <flatcc_json_parser_union_type_vector@@Base+0x6d0>
   39fb4:	cmp	r3, #0
   39fb8:	beq	3a024 <flatcc_json_parser_union_type_vector@@Base+0x6e0>
   39fbc:	sub	r3, r3, #1
   39fc0:	ldr	ip, [fp, #20]
   39fc4:	str	r3, [r0, #4]
   39fc8:	add	r0, r2, r6, lsl #3
   39fcc:	mov	r3, r9
   39fd0:	ldr	r2, [r0, #8]
   39fd4:	ldr	r6, [r5, #4]
   39fd8:	ldr	r4, [r5, #16]
   39fdc:	str	r2, [r5, #16]
   39fe0:	mov	r2, r8
   39fe4:	ldr	r0, [r0, #4]
   39fe8:	str	r0, [r5, #4]
   39fec:	ldr	r0, [fp, #8]
   39ff0:	str	r7, [sp]
   39ff4:	stmib	sp, {r0, ip}
   39ff8:	mov	r0, r5
   39ffc:	bl	39544 <flatcc_json_parser_union_vector@@Base+0xf4>
   3a000:	cmp	r0, r8
   3a004:	beq	399f4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3a008:	str	r6, [r5, #4]
   3a00c:	str	r4, [r5, #16]
   3a010:	b	3a01c <flatcc_json_parser_union_type_vector@@Base+0x6d8>
   3a014:	add	r1, r3, #1
   3a018:	str	r1, [r0, #4]
   3a01c:	mov	r8, sl
   3a020:	b	399f4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3a024:	ldr	r0, [pc, #24]	; 3a044 <flatcc_json_parser_union_type_vector@@Base+0x700>
   3a028:	ldr	r1, [pc, #24]	; 3a048 <flatcc_json_parser_union_type_vector@@Base+0x704>
   3a02c:	ldr	r3, [pc, #24]	; 3a04c <flatcc_json_parser_union_type_vector@@Base+0x708>
   3a030:	movw	r2, #1122	; 0x462
   3a034:	add	r0, pc, r0
   3a038:	add	r1, pc, r1
   3a03c:	add	r3, pc, r3
   3a040:	bl	14f3c <__assert_fail@plt>
   3a044:	andeq	r3, r1, r3, asr #12
   3a048:	andeq	r3, r1, lr, asr #12
   3a04c:	andeq	r3, r1, r7, ror r7

0003a050 <flatcc_json_parser_table_as_root@@Base>:
   3a050:	push	{r4, r5, r6, r7, fp, lr}
   3a054:	add	fp, sp, #16
   3a058:	sub	sp, sp, #48	; 0x30
   3a05c:	add	r5, sp, #4
   3a060:	cmp	r1, #0
   3a064:	mov	r6, r0
   3a068:	vmov.i32	q8, #0	; 0x00000000
   3a06c:	add	r7, r2, r3
   3a070:	mov	r4, r2
   3a074:	movne	r5, r1
   3a078:	mov	r1, #1
   3a07c:	add	r0, r5, #12
   3a080:	vst1.32	{d16-d17}, [r0]
   3a084:	add	r0, r5, #28
   3a088:	vst1.32	{d16-d17}, [r0]
   3a08c:	ldr	r0, [fp, #8]
   3a090:	str	r6, [r5]
   3a094:	str	r2, [r5, #4]
   3a098:	str	r0, [r5, #8]
   3a09c:	str	r1, [r5, #16]
   3a0a0:	mov	r1, #2
   3a0a4:	str	r2, [r5, #28]
   3a0a8:	str	r7, [r5, #32]
   3a0ac:	str	r2, [r5, #36]	; 0x24
   3a0b0:	mov	r2, #0
   3a0b4:	and	r3, r1, r0, lsr #1
   3a0b8:	ldr	r1, [fp, #12]
   3a0bc:	mov	r0, r6
   3a0c0:	bl	2fee8 <flatcc_builder_start_buffer@@Base>
   3a0c4:	mov	r1, r0
   3a0c8:	mvn	r0, #0
   3a0cc:	cmp	r1, #0
   3a0d0:	bne	3a0f8 <flatcc_json_parser_table_as_root@@Base+0xa8>
   3a0d4:	ldr	ip, [fp, #16]
   3a0d8:	mov	r3, sp
   3a0dc:	mov	r0, r5
   3a0e0:	mov	r1, r4
   3a0e4:	mov	r2, r7
   3a0e8:	blx	ip
   3a0ec:	ldr	r0, [r5, #24]
   3a0f0:	cmp	r0, #0
   3a0f4:	beq	3a100 <flatcc_json_parser_table_as_root@@Base+0xb0>
   3a0f8:	sub	sp, fp, #16
   3a0fc:	pop	{r4, r5, r6, r7, fp, pc}
   3a100:	ldr	r1, [sp]
   3a104:	mov	r0, r6
   3a108:	bl	300e8 <flatcc_builder_end_buffer@@Base>
   3a10c:	cmp	r0, #0
   3a110:	mvn	r0, #0
   3a114:	movne	r0, #0
   3a118:	strne	r4, [r5, #40]	; 0x28
   3a11c:	sub	sp, fp, #16
   3a120:	pop	{r4, r5, r6, r7, fp, pc}

0003a124 <flatcc_json_parser_struct_as_root@@Base>:
   3a124:	push	{r4, r5, r6, r7, fp, lr}
   3a128:	add	fp, sp, #16
   3a12c:	sub	sp, sp, #48	; 0x30
   3a130:	add	r5, sp, #4
   3a134:	cmp	r1, #0
   3a138:	mov	r6, r0
   3a13c:	vmov.i32	q8, #0	; 0x00000000
   3a140:	add	r7, r2, r3
   3a144:	mov	r4, r2
   3a148:	movne	r5, r1
   3a14c:	mov	r1, #1
   3a150:	add	r0, r5, #12
   3a154:	vst1.32	{d16-d17}, [r0]
   3a158:	add	r0, r5, #28
   3a15c:	vst1.32	{d16-d17}, [r0]
   3a160:	ldr	r0, [fp, #8]
   3a164:	str	r6, [r5]
   3a168:	str	r2, [r5, #4]
   3a16c:	str	r0, [r5, #8]
   3a170:	str	r1, [r5, #16]
   3a174:	mov	r1, #2
   3a178:	str	r2, [r5, #28]
   3a17c:	str	r7, [r5, #32]
   3a180:	str	r2, [r5, #36]	; 0x24
   3a184:	mov	r2, #0
   3a188:	and	r3, r1, r0, lsr #1
   3a18c:	ldr	r1, [fp, #12]
   3a190:	mov	r0, r6
   3a194:	bl	2fee8 <flatcc_builder_start_buffer@@Base>
   3a198:	mov	r1, r0
   3a19c:	mvn	r0, #0
   3a1a0:	cmp	r1, #0
   3a1a4:	bne	3a1cc <flatcc_json_parser_struct_as_root@@Base+0xa8>
   3a1a8:	ldr	ip, [fp, #16]
   3a1ac:	mov	r3, sp
   3a1b0:	mov	r0, r5
   3a1b4:	mov	r1, r4
   3a1b8:	mov	r2, r7
   3a1bc:	blx	ip
   3a1c0:	ldr	r0, [r5, #24]
   3a1c4:	cmp	r0, #0
   3a1c8:	beq	3a1d4 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   3a1cc:	sub	sp, fp, #16
   3a1d0:	pop	{r4, r5, r6, r7, fp, pc}
   3a1d4:	ldr	r1, [sp]
   3a1d8:	mov	r0, r6
   3a1dc:	bl	300e8 <flatcc_builder_end_buffer@@Base>
   3a1e0:	cmp	r0, #0
   3a1e4:	mvn	r0, #0
   3a1e8:	movne	r0, #0
   3a1ec:	strne	r4, [r5, #40]	; 0x28
   3a1f0:	sub	sp, fp, #16
   3a1f4:	pop	{r4, r5, r6, r7, fp, pc}

0003a1f8 <flatcc_json_printer_error_string@@Base>:
   3a1f8:	cmp	r0, #3
   3a1fc:	ldrhi	r0, [pc, #24]	; 3a21c <flatcc_json_printer_error_string@@Base+0x24>
   3a200:	addhi	r0, pc, r0
   3a204:	bxhi	lr
   3a208:	ldr	r1, [pc, #8]	; 3a218 <flatcc_json_printer_error_string@@Base+0x20>
   3a20c:	add	r1, pc, r1
   3a210:	ldr	r0, [r1, r0, lsl #2]
   3a214:	bx	lr
   3a218:	andeq	r4, r2, r8, ror #25
   3a21c:	andeq	r2, r1, r9, ror #18

0003a220 <flatcc_json_printer_fmt_float@@Base>:
   3a220:	vcvt.f64.f32	d0, s0
   3a224:	b	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   3a228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a22c:	add	fp, sp, #28
   3a230:	sub	sp, sp, #84	; 0x54
   3a234:	cmp	r0, #0
   3a238:	beq	3afe0 <flatcc_json_printer_fmt_float@@Base+0xdc0>
   3a23c:	mov	ip, r0
   3a240:	vmov	r3, r2, d0
   3a244:	mov	r0, #-2147483648	; 0x80000000
   3a248:	mov	r6, #0
   3a24c:	add	r1, r0, #266338304	; 0xfe00000
   3a250:	lsl	r7, r2, #1
   3a254:	subs	r6, r6, r3, lsl #1
   3a258:	add	r1, r1, #1879048192	; 0x70000000
   3a25c:	orr	r7, r7, r3, lsr #31
   3a260:	sbcs	r1, r1, r7
   3a264:	bcs	3a280 <flatcc_json_printer_fmt_float@@Base+0x60>
   3a268:	ldr	r1, [pc, #3592]	; 3b078 <flatcc_json_printer_fmt_float@@Base+0xe58>
   3a26c:	mov	r0, ip
   3a270:	add	r1, pc, r1
   3a274:	sub	sp, fp, #28
   3a278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a27c:	b	14f24 <sprintf@plt>
   3a280:	cmn	r2, #1
   3a284:	ble	3a290 <flatcc_json_printer_fmt_float@@Base+0x70>
   3a288:	mov	r5, ip
   3a28c:	b	3a2a4 <flatcc_json_printer_fmt_float@@Base+0x84>
   3a290:	mov	r1, #45	; 0x2d
   3a294:	mov	r5, ip
   3a298:	vneg.f64	d0, d0
   3a29c:	eor	r2, r2, r0
   3a2a0:	strb	r1, [r5], #1
   3a2a4:	movw	r0, #0
   3a2a8:	movt	r0, #32752	; 0x7ff0
   3a2ac:	eor	r1, r2, r0
   3a2b0:	orrs	r1, r3, r1
   3a2b4:	beq	3a2cc <flatcc_json_printer_fmt_float@@Base+0xac>
   3a2b8:	orrs	r1, r3, r2
   3a2bc:	bne	3a2e4 <flatcc_json_printer_fmt_float@@Base+0xc4>
   3a2c0:	mov	r0, #48	; 0x30
   3a2c4:	strh	r0, [r5], #1
   3a2c8:	b	3a2d8 <flatcc_json_printer_fmt_float@@Base+0xb8>
   3a2cc:	movw	r0, #28265	; 0x6e69
   3a2d0:	movt	r0, #102	; 0x66
   3a2d4:	str	r0, [r5], #3
   3a2d8:	sub	r0, r5, ip
   3a2dc:	sub	sp, fp, #28
   3a2e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a2e4:	vmov	sl, r9, d0
   3a2e8:	ands	r1, r9, r0
   3a2ec:	bfc	r9, #20, #12
   3a2f0:	str	r1, [fp, #-40]	; 0xffffffd8
   3a2f4:	beq	3a310 <flatcc_json_printer_fmt_float@@Base+0xf0>
   3a2f8:	movw	r0, #64461	; 0xfbcd
   3a2fc:	orr	r6, r9, #1048576	; 0x100000
   3a300:	movt	r0, #65535	; 0xffff
   3a304:	add	r4, r0, r1, lsr #20
   3a308:	mov	r0, #0
   3a30c:	b	3a328 <flatcc_json_printer_fmt_float@@Base+0x108>
   3a310:	orrs	r0, sl, r9
   3a314:	beq	3b040 <flatcc_json_printer_fmt_float@@Base+0xe20>
   3a318:	movw	r4, #64462	; 0xfbce
   3a31c:	mov	r0, #0
   3a320:	mov	r6, r9
   3a324:	movt	r4, #65535	; 0xffff
   3a328:	mov	r7, r4
   3a32c:	mov	r3, sl
   3a330:	mov	r2, r6
   3a334:	lsl	r1, r2, #10
   3a338:	sub	r7, r7, #10
   3a33c:	orr	r2, r1, r3, lsr #22
   3a340:	lsl	r3, r3, #10
   3a344:	cmp	r2, #4194304	; 0x400000
   3a348:	bcc	3a334 <flatcc_json_printer_fmt_float@@Base+0x114>
   3a34c:	cmp	r2, #0
   3a350:	str	r5, [fp, #-36]	; 0xffffffdc
   3a354:	blt	3a380 <flatcc_json_printer_fmt_float@@Base+0x160>
   3a358:	mvn	r5, #0
   3a35c:	lsl	r1, r2, #1
   3a360:	sub	r7, r7, #1
   3a364:	orr	r2, r1, r3, lsr #31
   3a368:	lsl	r1, r3, #1
   3a36c:	subs	r3, r5, r3, lsl #1
   3a370:	sbcs	r3, r5, r2
   3a374:	mov	r3, r1
   3a378:	blt	3a35c <flatcc_json_printer_fmt_float@@Base+0x13c>
   3a37c:	b	3a388 <flatcc_json_printer_fmt_float@@Base+0x168>
   3a380:	mov	r1, r3
   3a384:	mvn	r5, #0
   3a388:	mov	r0, #1
   3a38c:	sub	r8, r4, #1
   3a390:	str	r6, [fp, #-44]	; 0xffffffd4
   3a394:	str	r4, [fp, #-32]	; 0xffffffe0
   3a398:	orr	r3, r0, sl, lsl #1
   3a39c:	lsl	r0, r6, #1
   3a3a0:	orr	lr, r0, sl, lsr #31
   3a3a4:	mov	r0, #0
   3a3a8:	cmp	r0, lr, lsr #22
   3a3ac:	bne	3a3dc <flatcc_json_printer_fmt_float@@Base+0x1bc>
   3a3b0:	mov	r0, #0
   3a3b4:	mov	r6, lr
   3a3b8:	mov	r4, r8
   3a3bc:	str	r0, [fp, #-48]	; 0xffffffd0
   3a3c0:	lsl	r0, r6, #10
   3a3c4:	sub	r4, r4, #10
   3a3c8:	orr	r6, r0, r3, lsr #22
   3a3cc:	lsl	r3, r3, #10
   3a3d0:	cmp	r6, #4194304	; 0x400000
   3a3d4:	bcc	3a3c0 <flatcc_json_printer_fmt_float@@Base+0x1a0>
   3a3d8:	b	3a3ec <flatcc_json_printer_fmt_float@@Base+0x1cc>
   3a3dc:	mov	r0, #0
   3a3e0:	mov	r4, r8
   3a3e4:	mov	r6, lr
   3a3e8:	str	r0, [fp, #-48]	; 0xffffffd0
   3a3ec:	subs	r0, r5, r3
   3a3f0:	str	ip, [sp, #24]
   3a3f4:	sbcs	r0, r5, r6
   3a3f8:	bge	3a420 <flatcc_json_printer_fmt_float@@Base+0x200>
   3a3fc:	lsl	r0, r6, #1
   3a400:	lsl	ip, r3, #1
   3a404:	sub	r4, r4, #1
   3a408:	orr	r6, r0, r3, lsr #31
   3a40c:	subs	r0, r5, r3, lsl #1
   3a410:	mov	r3, ip
   3a414:	sbcs	r0, r5, r6
   3a418:	blt	3a3fc <flatcc_json_printer_fmt_float@@Base+0x1dc>
   3a41c:	b	3a424 <flatcc_json_printer_fmt_float@@Base+0x204>
   3a420:	mov	ip, r3
   3a424:	vcmpe.f64	d0, #0.0
   3a428:	vmrs	APSR_nzcv, fpscr
   3a42c:	ble	3b020 <flatcc_json_printer_fmt_float@@Base+0xe00>
   3a430:	vldr	d16, [pc, #672]	; 3a6d8 <flatcc_json_printer_fmt_float@@Base+0x4b8>
   3a434:	vcmpe.f64	d0, d16
   3a438:	vmrs	APSR_nzcv, fpscr
   3a43c:	bhi	3b020 <flatcc_json_printer_fmt_float@@Base+0xe00>
   3a440:	ldr	r5, [fp, #-40]	; 0xffffffd8
   3a444:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3a448:	orrs	r3, sl, r9
   3a44c:	vldr	d16, [pc, #652]	; 3a6e0 <flatcc_json_printer_fmt_float@@Base+0x4c0>
   3a450:	movwne	r3, #1
   3a454:	clz	r5, r5
   3a458:	lsl	r0, r0, #2
   3a45c:	lsr	r5, r5, #5
   3a460:	orrs	r3, r3, r5
   3a464:	mvn	r5, #60	; 0x3c
   3a468:	sub	r5, r5, r7
   3a46c:	orreq	lr, r0, sl, lsr #30
   3a470:	lsl	r0, sl, #2
   3a474:	lslne	r0, sl, #1
   3a478:	vmov	s2, r5
   3a47c:	subs	r9, r0, #1
   3a480:	vcvt.f64.s32	d17, s2
   3a484:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a488:	sbc	lr, lr, #0
   3a48c:	cmp	r3, #0
   3a490:	vmul.f64	d16, d17, d16
   3a494:	vcvt.s32.f64	s2, d16
   3a498:	vcmpe.f64	d16, #0.0
   3a49c:	subeq	r8, r0, #2
   3a4a0:	sub	r3, r8, r4
   3a4a4:	rsb	r0, r3, #32
   3a4a8:	lsl	sl, r9, r3
   3a4ac:	lsr	r0, r9, r0
   3a4b0:	orr	r5, r0, lr, lsl r3
   3a4b4:	sub	r0, r3, #32
   3a4b8:	cmp	r0, #0
   3a4bc:	lslge	r5, r9, r0
   3a4c0:	movwge	sl, #0
   3a4c4:	vmrs	APSR_nzcv, fpscr
   3a4c8:	str	r5, [fp, #-32]	; 0xffffffe0
   3a4cc:	vmov	r5, s2
   3a4d0:	bmi	3a4e8 <flatcc_json_printer_fmt_float@@Base+0x2c8>
   3a4d4:	vcvt.f64.s32	d17, s2
   3a4d8:	vsub.f64	d16, d16, d17
   3a4dc:	vcmp.f64	d16, #0.0
   3a4e0:	vmrs	APSR_nzcv, fpscr
   3a4e4:	addne	r5, r5, #1
   3a4e8:	movw	r0, #347	; 0x15b
   3a4ec:	bic	r1, r1, #1
   3a4f0:	add	r0, r5, r0
   3a4f4:	asr	r5, r0, #31
   3a4f8:	add	r0, r0, r5, lsr #29
   3a4fc:	mvn	r5, #15
   3a500:	and	r0, r5, r0, lsl #1
   3a504:	ldr	r5, [pc, #2900]	; 3b060 <flatcc_json_printer_fmt_float@@Base+0xe40>
   3a508:	add	r5, pc, r5
   3a50c:	add	r0, r5, r0
   3a510:	ldrd	r8, [r0, #16]
   3a514:	str	r0, [sp, #28]
   3a518:	umull	r0, r5, r9, ip
   3a51c:	str	r0, [fp, #-40]	; 0xffffffd8
   3a520:	umull	r0, lr, r8, r6
   3a524:	umaal	lr, r5, r9, r6
   3a528:	umull	r6, r3, r8, ip
   3a52c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   3a530:	adds	r0, r0, r3
   3a534:	mov	r3, #0
   3a538:	adc	r3, r3, #0
   3a53c:	adds	r0, r0, r6
   3a540:	adc	r3, r3, #0
   3a544:	adds	r0, r0, #-2147483648	; 0x80000000
   3a548:	adc	r0, r3, #0
   3a54c:	adds	r0, lr, r0
   3a550:	adc	r3, r5, #0
   3a554:	adds	r0, r0, #1
   3a558:	str	r0, [sp, #36]	; 0x24
   3a55c:	adc	ip, r3, #0
   3a560:	umull	r0, r3, r9, sl
   3a564:	str	r0, [fp, #-40]	; 0xffffffd8
   3a568:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a56c:	umull	lr, r5, r8, r0
   3a570:	umaal	r5, r3, r9, r0
   3a574:	umull	r0, r6, r8, sl
   3a578:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a57c:	adds	sl, lr, r6
   3a580:	mov	r6, #0
   3a584:	mov	lr, ip
   3a588:	adc	r6, r6, #0
   3a58c:	adds	r0, sl, r0
   3a590:	adc	r6, r6, #0
   3a594:	adds	r0, r0, #-2147483648	; 0x80000000
   3a598:	adc	r0, r6, #0
   3a59c:	adds	r0, r5, r0
   3a5a0:	adc	r3, r3, #0
   3a5a4:	subs	ip, r0, #1
   3a5a8:	umull	r0, r6, r8, r2
   3a5ac:	sbc	sl, r3, #0
   3a5b0:	umull	r3, r5, r9, r1
   3a5b4:	umaal	r6, r5, r9, r2
   3a5b8:	umull	r1, r2, r8, r1
   3a5bc:	ldr	r8, [sp, #36]	; 0x24
   3a5c0:	mov	r1, #0
   3a5c4:	adds	r0, r0, r2
   3a5c8:	bic	r2, r3, #1
   3a5cc:	str	r1, [sp, #40]	; 0x28
   3a5d0:	mov	r1, #0
   3a5d4:	adc	r1, r1, #0
   3a5d8:	adds	r0, r0, r2
   3a5dc:	adc	r1, r1, #0
   3a5e0:	adds	r0, r0, #-2147483648	; 0x80000000
   3a5e4:	adc	r0, r1, #0
   3a5e8:	adds	r0, r6, r0
   3a5ec:	str	r0, [sp, #12]
   3a5f0:	adc	r0, r5, #0
   3a5f4:	str	r0, [sp, #16]
   3a5f8:	subs	r0, r8, ip
   3a5fc:	str	r0, [sp, #48]	; 0x30
   3a600:	sbcs	r0, lr, sl
   3a604:	str	r0, [fp, #-44]	; 0xffffffd4
   3a608:	bcc	3b000 <flatcc_json_printer_fmt_float@@Base+0xde0>
   3a60c:	ldr	r0, [sp, #28]
   3a610:	ldrsh	r0, [r0, #24]
   3a614:	add	r0, r0, #64	; 0x40
   3a618:	add	r6, r0, r7
   3a61c:	add	r1, r0, r4
   3a620:	movw	r7, #1233	; 0x4d1
   3a624:	str	r1, [sp, #8]
   3a628:	str	r6, [sp, #4]
   3a62c:	mvn	r1, #31
   3a630:	rsb	r3, r6, #0
   3a634:	add	r2, r6, #32
   3a638:	ldr	sl, [pc, #2596]	; 3b064 <flatcc_json_printer_fmt_float@@Base+0xe44>
   3a63c:	sub	r4, r1, r6
   3a640:	movw	r1, #14609	; 0x3911
   3a644:	lsr	r0, r8, r3
   3a648:	movt	r1, #1
   3a64c:	orr	r0, r0, lr, lsl r2
   3a650:	cmp	r4, #0
   3a654:	mla	r5, r6, r7, r1
   3a658:	mov	r1, #1
   3a65c:	lsrge	r0, lr, r4
   3a660:	add	r7, r1, r5, asr #12
   3a664:	lsr	r2, r1, r2
   3a668:	add	sl, pc, sl
   3a66c:	ldr	r6, [sl, r7, lsl #2]
   3a670:	cmp	r6, r0
   3a674:	asrhi	r7, r5, #12
   3a678:	cmp	r4, #0
   3a67c:	lslge	r2, r1, r4
   3a680:	str	r2, [sp, #44]	; 0x2c
   3a684:	str	r3, [fp, #-40]	; 0xffffffd8
   3a688:	lsl	r3, r1, r3
   3a68c:	movwge	r3, #0
   3a690:	subs	r1, r3, #1
   3a694:	str	r3, [sp, #32]
   3a698:	str	lr, [sp, #20]
   3a69c:	sbc	r2, r2, #0
   3a6a0:	and	r3, r8, r1
   3a6a4:	cmp	r7, #0
   3a6a8:	str	r1, [fp, #-48]	; 0xffffffd0
   3a6ac:	and	r9, lr, r2
   3a6b0:	str	r2, [fp, #-52]	; 0xffffffcc
   3a6b4:	ble	3a76c <flatcc_json_printer_fmt_float@@Base+0x54c>
   3a6b8:	ldr	r1, [sl, r7, lsl #2]
   3a6bc:	movw	ip, #52429	; 0xcccd
   3a6c0:	sub	r7, r7, #1
   3a6c4:	mov	r4, #0
   3a6c8:	mov	r8, r9
   3a6cc:	movt	ip, #52428	; 0xcccc
   3a6d0:	str	r7, [fp, #-32]	; 0xffffffe0
   3a6d4:	b	3a700 <flatcc_json_printer_fmt_float@@Base+0x4e0>
   3a6d8:			; <UNDEFINED> instruction: 0xffffffff
   3a6dc:	svcvc	0x00efffff
   3a6e0:			; <UNDEFINED> instruction: 0x509f79fe
   3a6e4:	svccc	0x00d34413
   3a6e8:	umull	r1, r2, r1, ip
   3a6ec:	mov	r4, lr
   3a6f0:	sub	r7, r7, #1
   3a6f4:	add	r4, lr, #1
   3a6f8:	lsr	r1, r2, #3
   3a6fc:	str	r7, [fp, #-32]	; 0xffffffe0
   3a700:	udiv	r2, r0, r1
   3a704:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3a708:	mov	lr, r4
   3a70c:	ldr	r7, [sp, #48]	; 0x30
   3a710:	add	r6, r2, #48	; 0x30
   3a714:	mls	r0, r2, r1, r0
   3a718:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3a71c:	strb	r6, [r5, r4]
   3a720:	sub	r4, r2, #32
   3a724:	rsb	sl, r2, #32
   3a728:	lsl	r2, r0, r2
   3a72c:	cmp	r4, #0
   3a730:	lsr	r5, r0, sl
   3a734:	movwge	r2, #0
   3a738:	lslge	r5, r0, r4
   3a73c:	adds	r2, r2, r3
   3a740:	adc	r5, r5, r8
   3a744:	subs	r7, r2, r7
   3a748:	ldr	r7, [fp, #-44]	; 0xffffffd4
   3a74c:	sbcs	r7, r5, r7
   3a750:	bcc	3a97c <flatcc_json_printer_fmt_float@@Base+0x75c>
   3a754:	ldr	r7, [fp, #-32]	; 0xffffffe0
   3a758:	add	r2, r7, #1
   3a75c:	cmp	r2, #2
   3a760:	bge	3a6e8 <flatcc_json_printer_fmt_float@@Base+0x4c8>
   3a764:	add	r0, lr, #1
   3a768:	str	r0, [sp, #40]	; 0x28
   3a76c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a770:	mov	r4, r9
   3a774:	mov	r1, #0
   3a778:	mov	r9, #1
   3a77c:	rsb	r2, r0, #32
   3a780:	str	r2, [sp, #56]	; 0x38
   3a784:	sub	r2, r0, #32
   3a788:	str	r2, [sp, #52]	; 0x34
   3a78c:	ldr	lr, [sp, #40]	; 0x28
   3a790:	ldr	sl, [fp, #-44]	; 0xffffffd4
   3a794:	ldr	r6, [sp, #48]	; 0x30
   3a798:	mov	ip, r1
   3a79c:	mov	r1, #10
   3a7a0:	str	r7, [fp, #-32]	; 0xffffffe0
   3a7a4:	mov	r2, r9
   3a7a8:	umull	r7, r1, r3, r1
   3a7ac:	add	r3, r4, r4, lsl #2
   3a7b0:	add	r8, ip, ip, lsl #2
   3a7b4:	lsr	r5, r7, r0
   3a7b8:	ldr	r0, [sp, #56]	; 0x38
   3a7bc:	add	r3, r1, r3, lsl #1
   3a7c0:	orr	r1, r5, r3, lsl r0
   3a7c4:	ldr	r0, [sp, #52]	; 0x34
   3a7c8:	cmp	r0, #0
   3a7cc:	lsrge	r1, r3, r0
   3a7d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a7d4:	add	r5, r1, #48	; 0x30
   3a7d8:	strb	r5, [r0, lr]
   3a7dc:	mov	r0, #10
   3a7e0:	add	lr, lr, #1
   3a7e4:	umull	r9, r1, r9, r0
   3a7e8:	umull	r6, r4, r6, r0
   3a7ec:	add	r0, sl, sl, lsl #2
   3a7f0:	add	sl, r4, r0, lsl #1
   3a7f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3a7f8:	add	r1, r1, r8, lsl #1
   3a7fc:	and	r4, r3, r0
   3a800:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3a804:	and	r3, r7, r0
   3a808:	ldr	r7, [fp, #-32]	; 0xffffffe0
   3a80c:	subs	r0, r3, r6
   3a810:	sbcs	r0, r4, sl
   3a814:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a818:	sub	r7, r7, #1
   3a81c:	bcs	3a798 <flatcc_json_printer_fmt_float@@Base+0x578>
   3a820:	str	r4, [sp]
   3a824:	str	r8, [sp, #52]	; 0x34
   3a828:	str	r2, [sp, #56]	; 0x38
   3a82c:	str	ip, [fp, #-52]	; 0xffffffcc
   3a830:	str	lr, [sp, #40]	; 0x28
   3a834:	ldr	r0, [sp, #8]
   3a838:	ldr	r2, [sp, #4]
   3a83c:	ldr	ip, [sp, #20]
   3a840:	ldr	lr, [sp, #36]	; 0x24
   3a844:	ldr	r4, [sp, #12]
   3a848:	cmp	r0, r2
   3a84c:	ldr	r2, [sp, #16]
   3a850:	bne	3b000 <flatcc_json_printer_fmt_float@@Base+0xde0>
   3a854:	subs	r0, lr, r4
   3a858:	sbcs	r0, ip, r2
   3a85c:	bcc	3b000 <flatcc_json_printer_fmt_float@@Base+0xde0>
   3a860:	subs	r0, lr, r4
   3a864:	sbc	r2, ip, r2
   3a868:	umull	ip, r4, r9, r0
   3a86c:	mla	r2, r9, r2, r4
   3a870:	mla	r0, r1, r0, r2
   3a874:	adds	r2, ip, r9
   3a878:	str	r2, [sp, #36]	; 0x24
   3a87c:	adc	r2, r0, r1
   3a880:	subs	lr, ip, r9
   3a884:	mov	ip, #0
   3a888:	str	r2, [sp, #20]
   3a88c:	sbc	r9, r0, r1
   3a890:	subs	r0, r6, r3
   3a894:	ldr	r4, [sp]
   3a898:	str	sl, [fp, #-44]	; 0xffffffd4
   3a89c:	ldr	r2, [sp, #32]
   3a8a0:	sbc	r1, sl, r4
   3a8a4:	subs	r0, r0, r2
   3a8a8:	ldr	r0, [sp, #44]	; 0x2c
   3a8ac:	str	r7, [fp, #-32]	; 0xffffffe0
   3a8b0:	str	r6, [sp, #48]	; 0x30
   3a8b4:	sbcs	r0, r1, r0
   3a8b8:	movwcc	ip, #1
   3a8bc:	cmp	ip, #0
   3a8c0:	bne	3a974 <flatcc_json_printer_fmt_float@@Base+0x754>
   3a8c4:	subs	r0, r3, lr
   3a8c8:	str	lr, [fp, #-40]	; 0xffffffd8
   3a8cc:	sbcs	r0, r4, r9
   3a8d0:	bcs	3a974 <flatcc_json_printer_fmt_float@@Base+0x754>
   3a8d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a8d8:	ldr	r1, [sp, #40]	; 0x28
   3a8dc:	add	r0, r0, r1
   3a8e0:	str	r0, [fp, #-48]	; 0xffffffd0
   3a8e4:	ldr	r6, [sp, #44]	; 0x2c
   3a8e8:	ldr	lr, [sp, #32]
   3a8ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3a8f0:	adds	r8, r3, lr
   3a8f4:	adc	sl, r4, r6
   3a8f8:	subs	r0, r8, r2
   3a8fc:	sbcs	r0, sl, r9
   3a900:	bcc	3a924 <flatcc_json_printer_fmt_float@@Base+0x704>
   3a904:	subs	r0, r8, r2
   3a908:	sbc	r1, sl, r9
   3a90c:	subs	r7, r2, r3
   3a910:	sbc	r6, r9, r4
   3a914:	subs	r0, r7, r0
   3a918:	sbcs	r0, r6, r1
   3a91c:	ldr	r6, [sp, #44]	; 0x2c
   3a920:	bcc	3aad0 <flatcc_json_printer_fmt_float@@Base+0x8b0>
   3a924:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3a928:	sub	r5, r5, #1
   3a92c:	mov	ip, #0
   3a930:	strb	r5, [r0, #-1]
   3a934:	ldr	r0, [sp, #48]	; 0x30
   3a938:	subs	r1, r0, r8
   3a93c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3a940:	sbc	r7, r0, sl
   3a944:	subs	r0, r1, lr
   3a948:	sbcs	r0, r7, r6
   3a94c:	movwcc	ip, #1
   3a950:	subs	r0, r8, r2
   3a954:	sbcs	r0, sl, r9
   3a958:	bcs	3aadc <flatcc_json_printer_fmt_float@@Base+0x8bc>
   3a95c:	subs	r0, r1, lr
   3a960:	mov	r3, r8
   3a964:	mov	r4, sl
   3a968:	sbcs	r0, r7, r6
   3a96c:	bcs	3a8f0 <flatcc_json_printer_fmt_float@@Base+0x6d0>
   3a970:	b	3aadc <flatcc_json_printer_fmt_float@@Base+0x8bc>
   3a974:	ldr	r6, [sp, #44]	; 0x2c
   3a978:	b	3aad4 <flatcc_json_printer_fmt_float@@Base+0x8b4>
   3a97c:	ldr	r9, [sp, #36]	; 0x24
   3a980:	ldr	r0, [sp, #12]
   3a984:	subs	r3, r9, r0
   3a988:	str	r3, [sp, #52]	; 0x34
   3a98c:	ldr	r8, [sp, #20]
   3a990:	ldr	r7, [sp, #16]
   3a994:	sbc	r3, r8, r7
   3a998:	str	r3, [sp, #56]	; 0x38
   3a99c:	ldr	r3, [sp, #8]
   3a9a0:	ldr	ip, [sp, #4]
   3a9a4:	cmp	r3, ip
   3a9a8:	bne	3b000 <flatcc_json_printer_fmt_float@@Base+0xde0>
   3a9ac:	subs	r0, r9, r0
   3a9b0:	sbcs	r0, r8, r7
   3a9b4:	bcc	3b000 <flatcc_json_printer_fmt_float@@Base+0xde0>
   3a9b8:	ldr	r0, [sp, #48]	; 0x30
   3a9bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a9c0:	lsr	r8, r1, sl
   3a9c4:	subs	r0, r0, r2
   3a9c8:	sbc	r3, r3, r5
   3a9cc:	cmp	r4, #0
   3a9d0:	mov	sl, r3
   3a9d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a9d8:	lslge	r8, r1, r4
   3a9dc:	lsl	r9, r1, r3
   3a9e0:	mov	r1, #0
   3a9e4:	movwge	r9, #0
   3a9e8:	subs	r7, r0, r9
   3a9ec:	sbcs	r7, sl, r8
   3a9f0:	ldr	r7, [sp, #52]	; 0x34
   3a9f4:	movwcc	r1, #1
   3a9f8:	adds	r3, r7, #1
   3a9fc:	str	r3, [fp, #-48]	; 0xffffffd0
   3aa00:	ldr	r4, [sp, #56]	; 0x38
   3aa04:	adc	r3, r4, #0
   3aa08:	subs	ip, r7, #1
   3aa0c:	str	r3, [fp, #-52]	; 0xffffffcc
   3aa10:	sbc	r3, r4, #0
   3aa14:	subs	r4, r2, ip
   3aa18:	sbcs	r4, r5, r3
   3aa1c:	bcs	3aac8 <flatcc_json_printer_fmt_float@@Base+0x8a8>
   3aa20:	subs	r0, r0, r9
   3aa24:	sbcs	r0, sl, r8
   3aa28:	bcc	3aac8 <flatcc_json_printer_fmt_float@@Base+0x8a8>
   3aa2c:	ldr	sl, [sp, #48]	; 0x30
   3aa30:	adds	r4, r2, r9
   3aa34:	adc	r0, r5, r8
   3aa38:	subs	r1, r4, ip
   3aa3c:	sbcs	r1, r0, r3
   3aa40:	bcc	3aa7c <flatcc_json_printer_fmt_float@@Base+0x85c>
   3aa44:	subs	sl, r4, ip
   3aa48:	mov	r7, r9
   3aa4c:	mov	r9, r8
   3aa50:	sbc	r1, r0, r3
   3aa54:	str	r1, [fp, #-40]	; 0xffffffd8
   3aa58:	subs	r1, ip, r2
   3aa5c:	sbc	r8, r3, r5
   3aa60:	subs	r1, r1, sl
   3aa64:	ldr	sl, [sp, #48]	; 0x30
   3aa68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3aa6c:	sbcs	r1, r8, r1
   3aa70:	mov	r8, r9
   3aa74:	mov	r9, r7
   3aa78:	bcc	3abb8 <flatcc_json_printer_fmt_float@@Base+0x998>
   3aa7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3aa80:	sub	r6, r6, #1
   3aa84:	subs	r2, sl, r4
   3aa88:	strb	r6, [r1, lr]
   3aa8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3aa90:	sbc	r5, r1, r0
   3aa94:	subs	r1, r2, r9
   3aa98:	sbcs	r1, r5, r8
   3aa9c:	mov	r1, #0
   3aaa0:	movwcc	r1, #1
   3aaa4:	subs	r7, r4, ip
   3aaa8:	sbcs	r7, r0, r3
   3aaac:	bcs	3abc4 <flatcc_json_printer_fmt_float@@Base+0x9a4>
   3aab0:	subs	r2, r2, r9
   3aab4:	sbcs	r2, r5, r8
   3aab8:	mov	r5, r0
   3aabc:	mov	r2, r4
   3aac0:	bcs	3aa30 <flatcc_json_printer_fmt_float@@Base+0x810>
   3aac4:	b	3abc4 <flatcc_json_printer_fmt_float@@Base+0x9a4>
   3aac8:	ldr	sl, [sp, #48]	; 0x30
   3aacc:	b	3abbc <flatcc_json_printer_fmt_float@@Base+0x99c>
   3aad0:	mov	ip, #0
   3aad4:	mov	r8, r3
   3aad8:	mov	sl, r4
   3aadc:	ldr	r3, [sp, #36]	; 0x24
   3aae0:	ldr	r4, [sp, #20]
   3aae4:	subs	r0, r8, r3
   3aae8:	sbcs	r0, sl, r4
   3aaec:	bcs	3ab54 <flatcc_json_printer_fmt_float@@Base+0x934>
   3aaf0:	cmp	ip, #0
   3aaf4:	bne	3ab54 <flatcc_json_printer_fmt_float@@Base+0x934>
   3aaf8:	ldr	r0, [sp, #32]
   3aafc:	ldr	r5, [sp, #56]	; 0x38
   3ab00:	ldr	r9, [sp, #52]	; 0x34
   3ab04:	adds	r1, r8, r0
   3ab08:	adc	r7, sl, r6
   3ab0c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   3ab10:	subs	r0, r1, r3
   3ab14:	sbcs	r0, r7, r4
   3ab18:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ab1c:	subs	ip, r1, r3
   3ab20:	mov	r0, #20
   3ab24:	sbc	lr, r7, r4
   3ab28:	subs	r7, r3, r8
   3ab2c:	umull	r0, r3, r5, r0
   3ab30:	sbc	r1, r4, sl
   3ab34:	add	r3, r3, r9, lsl #2
   3ab38:	subs	r0, r8, r0
   3ab3c:	sbcs	r0, sl, r3
   3ab40:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ab44:	subs	r0, ip, r7
   3ab48:	sbcs	r0, lr, r1
   3ab4c:	bcs	3ab78 <flatcc_json_printer_fmt_float@@Base+0x958>
   3ab50:	b	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ab54:	ldr	r5, [sp, #56]	; 0x38
   3ab58:	ldr	r3, [sp, #52]	; 0x34
   3ab5c:	mov	r0, #20
   3ab60:	ldr	r6, [fp, #-52]	; 0xffffffcc
   3ab64:	umull	r0, r1, r5, r0
   3ab68:	add	r1, r1, r3, lsl #2
   3ab6c:	subs	r0, r8, r0
   3ab70:	sbcs	r0, sl, r1
   3ab74:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ab78:	mvn	r7, #0
   3ab7c:	ldr	r2, [sp, #48]	; 0x30
   3ab80:	subs	r0, r7, #39	; 0x27
   3ab84:	umull	r1, r3, r5, r0
   3ab88:	sbc	r7, r7, #0
   3ab8c:	mla	r3, r5, r7, r3
   3ab90:	mla	r0, r6, r0, r3
   3ab94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ab98:	adds	r1, r1, r2
   3ab9c:	adc	r0, r0, r3
   3aba0:	subs	r1, r1, r8
   3aba4:	sbcs	r0, r0, sl
   3aba8:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3abac:	ldr	r0, [sp, #40]	; 0x28
   3abb0:	sub	lr, r0, #1
   3abb4:	b	3ac64 <flatcc_json_printer_fmt_float@@Base+0xa44>
   3abb8:	mov	r1, #0
   3abbc:	mov	r4, r2
   3abc0:	mov	r0, r5
   3abc4:	add	r2, lr, #1
   3abc8:	str	r2, [sp, #40]	; 0x28
   3abcc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   3abd0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   3abd4:	subs	r2, r4, r5
   3abd8:	sbcs	r2, r0, r6
   3abdc:	bcs	3ac40 <flatcc_json_printer_fmt_float@@Base+0xa20>
   3abe0:	cmp	r1, #0
   3abe4:	bne	3ac40 <flatcc_json_printer_fmt_float@@Base+0xa20>
   3abe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3abec:	adds	r1, r4, r9
   3abf0:	adc	r2, r0, r8
   3abf4:	subs	r7, r1, r5
   3abf8:	sbcs	r7, r2, r6
   3abfc:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ac00:	subs	ip, r1, r5
   3ac04:	sbc	r9, r2, r6
   3ac08:	subs	r7, r5, r4
   3ac0c:	sbc	r1, r6, r0
   3ac10:	subs	r8, sl, #4
   3ac14:	sbc	r3, r3, #0
   3ac18:	subs	r2, r4, #2
   3ac1c:	sbcs	r2, r0, #0
   3ac20:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ac24:	subs	r2, ip, r7
   3ac28:	sbcs	r1, r9, r1
   3ac2c:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ac30:	subs	r1, r8, r4
   3ac34:	sbcs	r0, r3, r0
   3ac38:	bcs	3ac64 <flatcc_json_printer_fmt_float@@Base+0xa44>
   3ac3c:	b	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ac40:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3ac44:	subs	r1, sl, #4
   3ac48:	sbc	r2, r2, #0
   3ac4c:	subs	r3, r4, #2
   3ac50:	sbcs	r3, r0, #0
   3ac54:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ac58:	subs	r1, r1, r4
   3ac5c:	sbcs	r0, r2, r0
   3ac60:	bcc	3acbc <flatcc_json_printer_fmt_float@@Base+0xa9c>
   3ac64:	ldr	r0, [sp, #28]
   3ac68:	ldr	r4, [sp, #40]	; 0x28
   3ac6c:	ldr	r7, [fp, #-32]	; 0xffffffe0
   3ac70:	ldrsh	r5, [r0, #26]
   3ac74:	sub	r0, r4, #1
   3ac78:	cmp	r4, #3
   3ac7c:	movwlt	r0, #1
   3ac80:	sub	r9, r7, r5
   3ac84:	rsb	r3, r9, #0
   3ac88:	cmp	r0, r3
   3ac8c:	movge	r0, r3
   3ac90:	cmn	r9, #1
   3ac94:	ble	3ace8 <flatcc_json_printer_fmt_float@@Base+0xac8>
   3ac98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3ac9c:	cmp	r9, #3
   3aca0:	bcc	3ad68 <flatcc_json_printer_fmt_float@@Base+0xb48>
   3aca4:	mov	r0, #101	; 0x65
   3aca8:	add	lr, r4, #1
   3acac:	strb	r0, [r1, r4]
   3acb0:	add	r0, r1, lr
   3acb4:	mov	r2, r0
   3acb8:	b	3aec4 <flatcc_json_printer_fmt_float@@Base+0xca4>
   3acbc:	ldr	r1, [pc, #932]	; 3b068 <flatcc_json_printer_fmt_float@@Base+0xe48>
   3acc0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   3acc4:	vmov	r2, r3, d0
   3acc8:	add	r1, pc, r1
   3accc:	mov	r0, r4
   3acd0:	bl	14f24 <sprintf@plt>
   3acd4:	ldr	r1, [sp, #24]
   3acd8:	sub	r1, r4, r1
   3acdc:	add	r0, r1, r0
   3ace0:	sub	sp, fp, #28
   3ace4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ace8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3acec:	cmp	r4, r3
   3acf0:	bgt	3adcc <flatcc_json_printer_fmt_float@@Base+0xbac>
   3acf4:	add	r2, r9, r4
   3acf8:	cmn	r2, #2
   3acfc:	blt	3adcc <flatcc_json_printer_fmt_float@@Base+0xbac>
   3ad00:	add	r8, r1, #2
   3ad04:	mvn	r0, lr
   3ad08:	add	r2, r8, r3
   3ad0c:	add	r0, r2, r0
   3ad10:	mov	r2, r4
   3ad14:	bl	14e40 <memmove@plt>
   3ad18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3ad1c:	movw	r0, #11824	; 0x2e30
   3ad20:	mov	r6, r4
   3ad24:	strh	r0, [r1]
   3ad28:	rsb	r0, r4, #2
   3ad2c:	sub	r4, r0, r9
   3ad30:	mov	r0, #2
   3ad34:	cmp	r4, #3
   3ad38:	blt	3ad58 <flatcc_json_printer_fmt_float@@Base+0xb38>
   3ad3c:	sub	r0, r5, r7
   3ad40:	mov	r1, #48	; 0x30
   3ad44:	sub	r2, r0, r6
   3ad48:	mov	r0, r8
   3ad4c:	bl	14ee8 <memset@plt>
   3ad50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3ad54:	mov	r0, r4
   3ad58:	ldr	ip, [sp, #24]
   3ad5c:	add	r6, r0, r6
   3ad60:	mov	r4, r6
   3ad64:	b	3af40 <flatcc_json_printer_fmt_float@@Base+0xd20>
   3ad68:	cmp	r9, #0
   3ad6c:	beq	3ae3c <flatcc_json_printer_fmt_float@@Base+0xc1c>
   3ad70:	add	r0, r1, r4
   3ad74:	mvn	r1, r7
   3ad78:	mov	r6, r4
   3ad7c:	mvn	r4, #1
   3ad80:	add	r1, r1, r5
   3ad84:	cmn	r1, #2
   3ad88:	movle	r1, r4
   3ad8c:	add	r1, r7, r1
   3ad90:	add	r1, r1, #2
   3ad94:	sub	r2, r1, r5
   3ad98:	mov	r1, #48	; 0x30
   3ad9c:	bl	14ee8 <memset@plt>
   3ada0:	mvn	r0, r9
   3ada4:	cmn	r0, #2
   3ada8:	movgt	r4, r0
   3adac:	add	r0, r9, r4
   3adb0:	add	r0, r0, #2
   3adb4:	cmp	r0, #4
   3adb8:	bcs	3ae44 <flatcc_json_printer_fmt_float@@Base+0xc24>
   3adbc:	ldr	ip, [sp, #24]
   3adc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3adc4:	mov	r4, r6
   3adc8:	b	3ae90 <flatcc_json_printer_fmt_float@@Base+0xc70>
   3adcc:	cmp	r4, #2
   3add0:	blt	3aea8 <flatcc_json_printer_fmt_float@@Base+0xc88>
   3add4:	ldr	ip, [sp, #24]
   3add8:	cmp	r0, #1
   3addc:	blt	3ae04 <flatcc_json_printer_fmt_float@@Base+0xbe4>
   3ade0:	add	r2, r1, r4
   3ade4:	mov	r6, #0
   3ade8:	mov	r3, r2
   3adec:	ldrb	r7, [r3, #-1]!
   3adf0:	add	r6, r6, #1
   3adf4:	cmp	r6, r0
   3adf8:	strb	r7, [r2]
   3adfc:	mov	r2, r3
   3ae00:	blt	3adec <flatcc_json_printer_fmt_float@@Base+0xbcc>
   3ae04:	sub	r3, r4, r0
   3ae08:	mov	r2, #46	; 0x2e
   3ae0c:	adds	r7, r0, r9
   3ae10:	add	r0, r4, #1
   3ae14:	strb	r2, [r1, r3]
   3ae18:	beq	3af54 <flatcc_json_printer_fmt_float@@Base+0xd34>
   3ae1c:	mov	r2, #101	; 0x65
   3ae20:	add	lr, r4, #2
   3ae24:	cmn	r7, #1
   3ae28:	strb	r2, [r1, r0]
   3ae2c:	add	r0, r1, lr
   3ae30:	ble	3af5c <flatcc_json_printer_fmt_float@@Base+0xd3c>
   3ae34:	mov	r2, r0
   3ae38:	b	3af6c <flatcc_json_printer_fmt_float@@Base+0xd4c>
   3ae3c:	ldr	ip, [sp, #24]
   3ae40:	b	3af40 <flatcc_json_printer_fmt_float@@Base+0xd20>
   3ae44:	ldr	ip, [sp, #24]
   3ae48:	mov	r1, #0
   3ae4c:	vmov.i32	q9, #1	; 0x00000001
   3ae50:	vdup.32	q8, r1
   3ae54:	bic	r1, r0, #3
   3ae58:	vmov.32	d16[0], r6
   3ae5c:	sub	r9, r9, r1
   3ae60:	mov	r2, r1
   3ae64:	subs	r2, r2, #4
   3ae68:	vadd.i32	q8, q8, q9
   3ae6c:	bne	3ae64 <flatcc_json_printer_fmt_float@@Base+0xc44>
   3ae70:	vext.8	q9, q8, q8, #8
   3ae74:	cmp	r0, r1
   3ae78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3ae7c:	vadd.i32	q8, q8, q9
   3ae80:	vdup.32	q9, d16[1]
   3ae84:	vadd.i32	q8, q8, q9
   3ae88:	vmov.32	r4, d16[0]
   3ae8c:	beq	3af40 <flatcc_json_printer_fmt_float@@Base+0xd20>
   3ae90:	add	r0, r9, #1
   3ae94:	sub	r0, r0, #1
   3ae98:	add	r4, r4, #1
   3ae9c:	cmp	r0, #1
   3aea0:	bgt	3ae94 <flatcc_json_printer_fmt_float@@Base+0xc74>
   3aea4:	b	3af40 <flatcc_json_printer_fmt_float@@Base+0xd20>
   3aea8:	add	r0, r1, r4
   3aeac:	movw	r2, #11621	; 0x2d65
   3aeb0:	add	lr, r4, #1
   3aeb4:	mov	r9, r3
   3aeb8:	strh	r2, [r0]
   3aebc:	add	r0, r1, lr
   3aec0:	add	r2, r0, #1
   3aec4:	ldr	ip, [sp, #24]
   3aec8:	movw	r7, #26215	; 0x6667
   3aecc:	mov	r3, r2
   3aed0:	movt	r7, #26214	; 0x6666
   3aed4:	smmul	r6, r9, r7
   3aed8:	asr	r5, r6, #2
   3aedc:	add	r4, r5, r6, lsr #31
   3aee0:	add	r6, r4, r4, lsl #2
   3aee4:	sub	r6, r9, r6, lsl #1
   3aee8:	add	r6, r6, #48	; 0x30
   3aeec:	strb	r6, [r3], #1
   3aef0:	add	r6, r9, #9
   3aef4:	mov	r9, r4
   3aef8:	cmp	r6, #18
   3aefc:	bhi	3aed4 <flatcc_json_printer_fmt_float@@Base+0xcb4>
   3af00:	mov	r6, #0
   3af04:	mov	r7, r3
   3af08:	strb	r6, [r7], -r2
   3af0c:	cmp	r7, #2
   3af10:	blt	3af38 <flatcc_json_printer_fmt_float@@Base+0xd18>
   3af14:	add	r7, r7, r7, lsr #31
   3af18:	sub	r6, r3, #1
   3af1c:	asr	r7, r7, #1
   3af20:	ldrb	r5, [r2]
   3af24:	ldrb	r4, [r6]
   3af28:	subs	r7, r7, #1
   3af2c:	strb	r4, [r2], #1
   3af30:	strb	r5, [r6], #-1
   3af34:	bne	3af20 <flatcc_json_printer_fmt_float@@Base+0xd00>
   3af38:	sub	r0, lr, r0
   3af3c:	add	r4, r0, r3
   3af40:	mov	r0, #0
   3af44:	strb	r0, [r1, r4]!
   3af48:	sub	r0, r1, ip
   3af4c:	sub	sp, fp, #28
   3af50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3af54:	mov	r4, r0
   3af58:	b	3af40 <flatcc_json_printer_fmt_float@@Base+0xd20>
   3af5c:	mov	r3, #45	; 0x2d
   3af60:	mov	r2, r0
   3af64:	rsb	r7, r7, #0
   3af68:	strb	r3, [r2], #1
   3af6c:	movw	r6, #26215	; 0x6667
   3af70:	mov	r3, r2
   3af74:	movt	r6, #26214	; 0x6666
   3af78:	smmul	r5, r7, r6
   3af7c:	asr	r4, r5, #2
   3af80:	add	r5, r4, r5, lsr #31
   3af84:	add	r4, r5, r5, lsl #2
   3af88:	sub	r4, r7, r4, lsl #1
   3af8c:	add	r7, r7, #9
   3af90:	add	r4, r4, #48	; 0x30
   3af94:	cmp	r7, #18
   3af98:	mov	r7, r5
   3af9c:	strb	r4, [r3], #1
   3afa0:	bhi	3af78 <flatcc_json_printer_fmt_float@@Base+0xd58>
   3afa4:	mov	r6, #0
   3afa8:	mov	r7, r3
   3afac:	strb	r6, [r7], -r2
   3afb0:	cmp	r7, #2
   3afb4:	blt	3af38 <flatcc_json_printer_fmt_float@@Base+0xd18>
   3afb8:	add	r7, r7, r7, lsr #31
   3afbc:	sub	r6, r3, #1
   3afc0:	asr	r7, r7, #1
   3afc4:	ldrb	r5, [r2]
   3afc8:	ldrb	r4, [r6]
   3afcc:	subs	r7, r7, #1
   3afd0:	strb	r4, [r2], #1
   3afd4:	strb	r5, [r6], #-1
   3afd8:	bne	3afc4 <flatcc_json_printer_fmt_float@@Base+0xda4>
   3afdc:	b	3af38 <flatcc_json_printer_fmt_float@@Base+0xd18>
   3afe0:	ldr	r0, [pc, #132]	; 3b06c <flatcc_json_printer_fmt_float@@Base+0xe4c>
   3afe4:	ldr	r1, [pc, #132]	; 3b070 <flatcc_json_printer_fmt_float@@Base+0xe50>
   3afe8:	ldr	r3, [pc, #132]	; 3b074 <flatcc_json_printer_fmt_float@@Base+0xe54>
   3afec:	mov	r2, #189	; 0xbd
   3aff0:	add	r0, pc, r0
   3aff4:	add	r1, pc, r1
   3aff8:	add	r3, pc, r3
   3affc:	bl	14f3c <__assert_fail@plt>
   3b000:	ldr	r0, [pc, #128]	; 3b088 <flatcc_json_printer_fmt_float@@Base+0xe68>
   3b004:	ldr	r1, [pc, #128]	; 3b08c <flatcc_json_printer_fmt_float@@Base+0xe6c>
   3b008:	ldr	r3, [pc, #128]	; 3b090 <flatcc_json_printer_fmt_float@@Base+0xe70>
   3b00c:	mov	r2, #239	; 0xef
   3b010:	add	r0, pc, r0
   3b014:	add	r1, pc, r1
   3b018:	add	r3, pc, r3
   3b01c:	bl	14f3c <__assert_fail@plt>
   3b020:	ldr	r0, [pc, #84]	; 3b07c <flatcc_json_printer_fmt_float@@Base+0xe5c>
   3b024:	ldr	r1, [pc, #84]	; 3b080 <flatcc_json_printer_fmt_float@@Base+0xe60>
   3b028:	ldr	r3, [pc, #84]	; 3b084 <flatcc_json_printer_fmt_float@@Base+0xe64>
   3b02c:	mov	r2, #138	; 0x8a
   3b030:	add	r0, pc, r0
   3b034:	add	r1, pc, r1
   3b038:	add	r3, pc, r3
   3b03c:	bl	14f3c <__assert_fail@plt>
   3b040:	ldr	r0, [pc, #76]	; 3b094 <flatcc_json_printer_fmt_float@@Base+0xe74>
   3b044:	ldr	r1, [pc, #76]	; 3b098 <flatcc_json_printer_fmt_float@@Base+0xe78>
   3b048:	ldr	r3, [pc, #76]	; 3b09c <flatcc_json_printer_fmt_float@@Base+0xe7c>
   3b04c:	mov	r2, #260	; 0x104
   3b050:	add	r0, pc, r0
   3b054:	add	r1, pc, r1
   3b058:	add	r3, pc, r3
   3b05c:	bl	14f3c <__assert_fail@plt>
   3b060:	andeq	r3, r1, r8, ror #20
   3b064:	andeq	r3, r1, r8, ror lr
   3b068:	andeq	r2, r1, r4, asr #31
   3b06c:	strdeq	r2, [r1], -r4
   3b070:	strdeq	r2, [r1], -r4
   3b074:	andeq	r2, r1, lr, asr ip
   3b078:	andeq	r3, r1, lr, lsl #20
   3b07c:	andeq	r2, r1, r2, ror #24
   3b080:			; <UNDEFINED> instruction: 0x00012bb4
   3b084:	andeq	r2, r1, pc, ror ip
   3b088:	ldrdeq	r2, [r1], -r0
   3b08c:	andeq	r2, r1, r1, lsr #17
   3b090:	andeq	r2, r1, r1, ror #25
   3b094:	andeq	r2, r1, ip, asr r8
   3b098:	andeq	r2, r1, r1, ror #16
   3b09c:	andeq	r2, r1, sl, asr #17

0003b0a0 <flatcc_json_printer_fmt_double@@Base>:
   3b0a0:	b	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>

0003b0a4 <flatcc_json_printer_fmt_bool@@Base>:
   3b0a4:	cmp	r1, #0
   3b0a8:	movwne	r1, #29300	; 0x7274
   3b0ac:	movtne	r1, #25973	; 0x6575
   3b0b0:	strne	r1, [r0]
   3b0b4:	movne	r0, #4
   3b0b8:	bxne	lr
   3b0bc:	mov	r1, #101	; 0x65
   3b0c0:	strb	r1, [r0, #4]
   3b0c4:	movw	r1, #24934	; 0x6166
   3b0c8:	movt	r1, #29548	; 0x736c
   3b0cc:	str	r1, [r0]
   3b0d0:	mov	r0, #5
   3b0d4:	bx	lr

0003b0d8 <flatcc_json_printer_string@@Base>:
   3b0d8:	b	3b0dc <flatcc_json_printer_string@@Base+0x4>
   3b0dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b0e0:	add	fp, sp, #28
   3b0e4:	sub	sp, sp, #12
   3b0e8:	mov	r5, r0
   3b0ec:	mov	r4, r0
   3b0f0:	mov	r6, r1
   3b0f4:	mov	r3, r2
   3b0f8:	ldr	r0, [r5, #20]!
   3b0fc:	add	r1, r0, #1
   3b100:	str	r5, [sp, #4]
   3b104:	str	r1, [r5]
   3b108:	mov	r1, #34	; 0x22
   3b10c:	strb	r1, [r0]
   3b110:	b	3b120 <flatcc_json_printer_string@@Base+0x48>
   3b114:	strb	r2, [r1]
   3b118:	sub	r3, r0, #1
   3b11c:	add	r6, r8, #1
   3b120:	ldrb	sl, [r6]
   3b124:	mov	r8, r6
   3b128:	cmp	sl, #32
   3b12c:	bcc	3b14c <flatcc_json_printer_string@@Base+0x74>
   3b130:	uxtb	r0, sl
   3b134:	cmp	r0, #34	; 0x22
   3b138:	cmpne	r0, #92	; 0x5c
   3b13c:	beq	3b14c <flatcc_json_printer_string@@Base+0x74>
   3b140:	ldrb	sl, [r8, #1]!
   3b144:	cmp	sl, #31
   3b148:	bhi	3b130 <flatcc_json_printer_string@@Base+0x58>
   3b14c:	ldr	r0, [r4, #20]
   3b150:	ldr	r1, [r4, #16]
   3b154:	sub	r9, r8, r6
   3b158:	add	r2, r0, r9
   3b15c:	cmp	r2, r1
   3b160:	bcs	3b180 <flatcc_json_printer_string@@Base+0xa8>
   3b164:	mov	r1, r6
   3b168:	mov	r2, r9
   3b16c:	mov	r6, r3
   3b170:	bl	14e58 <memcpy@plt>
   3b174:	mov	r2, r6
   3b178:	mov	r7, r9
   3b17c:	b	3b20c <flatcc_json_printer_string@@Base+0x134>
   3b180:	cmp	r0, r1
   3b184:	str	r3, [sp, #8]
   3b188:	bcc	3b1a4 <flatcc_json_printer_string@@Base+0xcc>
   3b18c:	ldr	r2, [r4, #44]	; 0x2c
   3b190:	mov	r0, r4
   3b194:	mov	r1, #0
   3b198:	blx	r2
   3b19c:	ldr	r1, [r4, #16]
   3b1a0:	ldr	r0, [r4, #20]
   3b1a4:	sub	r5, r1, r0
   3b1a8:	mov	r7, r9
   3b1ac:	cmp	r5, r9
   3b1b0:	bcs	3b1f8 <flatcc_json_printer_string@@Base+0x120>
   3b1b4:	mov	r1, r6
   3b1b8:	mov	r2, r5
   3b1bc:	bl	14e58 <memcpy@plt>
   3b1c0:	ldr	r0, [r4, #20]
   3b1c4:	ldr	r2, [r4, #44]	; 0x2c
   3b1c8:	mov	r1, #0
   3b1cc:	add	r0, r0, r5
   3b1d0:	str	r0, [r4, #20]
   3b1d4:	mov	r0, r4
   3b1d8:	blx	r2
   3b1dc:	ldr	r1, [r4, #16]
   3b1e0:	ldr	r0, [r4, #20]
   3b1e4:	sub	r7, r7, r5
   3b1e8:	add	r6, r6, r5
   3b1ec:	sub	r5, r1, r0
   3b1f0:	cmp	r7, r5
   3b1f4:	bhi	3b1b4 <flatcc_json_printer_string@@Base+0xdc>
   3b1f8:	ldr	r5, [sp, #4]
   3b1fc:	mov	r1, r6
   3b200:	mov	r2, r7
   3b204:	bl	14e58 <memcpy@plt>
   3b208:	ldr	r2, [sp, #8]
   3b20c:	ldr	r0, [r5]
   3b210:	add	r1, r0, r7
   3b214:	add	r0, r1, #1
   3b218:	str	r0, [r5]
   3b21c:	subs	r0, r2, r9
   3b220:	beq	3b3c8 <flatcc_json_printer_string@@Base+0x2f0>
   3b224:	mov	r2, #92	; 0x5c
   3b228:	strb	r2, [r1]
   3b22c:	mvn	r1, #7
   3b230:	uxtab	r2, r1, sl
   3b234:	uxtb	r1, sl
   3b238:	cmp	r2, #26
   3b23c:	bhi	3b2cc <flatcc_json_printer_string@@Base+0x1f4>
   3b240:	add	r3, pc, #4
   3b244:	ldr	r2, [r3, r2, lsl #2]
   3b248:	add	pc, r3, r2
   3b24c:	andeq	r0, r0, ip, rrx
   3b250:	andeq	r0, r0, r8, lsl r1
   3b254:	andeq	r0, r0, ip, lsr #2
   3b258:	muleq	r0, ip, r0
   3b25c:	andeq	r0, r0, r0, asr #2
   3b260:	andeq	r0, r0, r4, asr r1
   3b264:	muleq	r0, ip, r0
   3b268:	muleq	r0, ip, r0
   3b26c:	muleq	r0, ip, r0
   3b270:	muleq	r0, ip, r0
   3b274:	muleq	r0, ip, r0
   3b278:	muleq	r0, ip, r0
   3b27c:	muleq	r0, ip, r0
   3b280:	muleq	r0, ip, r0
   3b284:	muleq	r0, ip, r0
   3b288:	muleq	r0, ip, r0
   3b28c:	muleq	r0, ip, r0
   3b290:	muleq	r0, ip, r0
   3b294:	muleq	r0, ip, r0
   3b298:	muleq	r0, ip, r0
   3b29c:	muleq	r0, ip, r0
   3b2a0:	muleq	r0, ip, r0
   3b2a4:	muleq	r0, ip, r0
   3b2a8:	muleq	r0, ip, r0
   3b2ac:	muleq	r0, ip, r0
   3b2b0:	muleq	r0, ip, r0
   3b2b4:	andeq	r0, r0, r8, ror #2
   3b2b8:	ldr	r1, [r5]
   3b2bc:	add	r2, r1, #1
   3b2c0:	str	r2, [r5]
   3b2c4:	mov	r2, #98	; 0x62
   3b2c8:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b2cc:	cmp	r1, #92	; 0x5c
   3b2d0:	bne	3b2e8 <flatcc_json_printer_string@@Base+0x210>
   3b2d4:	ldr	r1, [r5]
   3b2d8:	add	r2, r1, #1
   3b2dc:	str	r2, [r5]
   3b2e0:	mov	r2, #92	; 0x5c
   3b2e4:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b2e8:	ldr	r2, [r5]
   3b2ec:	mov	r7, #48	; 0x30
   3b2f0:	cmp	r1, #160	; 0xa0
   3b2f4:	add	r3, r2, #1
   3b2f8:	str	r3, [r5]
   3b2fc:	mov	r3, #117	; 0x75
   3b300:	strb	r3, [r2]
   3b304:	ldr	r2, [r5]
   3b308:	add	r3, r2, #1
   3b30c:	str	r3, [r5]
   3b310:	strb	r7, [r2]
   3b314:	ldr	r2, [r5]
   3b318:	add	r3, r2, #1
   3b31c:	str	r3, [r5]
   3b320:	strb	r7, [r2]
   3b324:	ldr	r2, [r5]
   3b328:	add	r3, r2, #1
   3b32c:	str	r3, [r5]
   3b330:	mov	r3, #87	; 0x57
   3b334:	movwcc	r3, #48	; 0x30
   3b338:	add	r1, r3, r1, lsr #4
   3b33c:	mov	r3, #87	; 0x57
   3b340:	strb	r1, [r2]
   3b344:	ldr	r1, [r5]
   3b348:	add	r2, r1, #1
   3b34c:	str	r2, [r5]
   3b350:	and	r2, sl, #15
   3b354:	cmp	r2, #10
   3b358:	movwcc	r3, #48	; 0x30
   3b35c:	add	r2, r3, r2
   3b360:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b364:	ldr	r1, [r5]
   3b368:	add	r2, r1, #1
   3b36c:	str	r2, [r5]
   3b370:	mov	r2, #116	; 0x74
   3b374:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b378:	ldr	r1, [r5]
   3b37c:	add	r2, r1, #1
   3b380:	str	r2, [r5]
   3b384:	mov	r2, #110	; 0x6e
   3b388:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b38c:	ldr	r1, [r5]
   3b390:	add	r2, r1, #1
   3b394:	str	r2, [r5]
   3b398:	mov	r2, #102	; 0x66
   3b39c:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b3a0:	ldr	r1, [r5]
   3b3a4:	add	r2, r1, #1
   3b3a8:	str	r2, [r5]
   3b3ac:	mov	r2, #114	; 0x72
   3b3b0:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b3b4:	ldr	r1, [r5]
   3b3b8:	add	r2, r1, #1
   3b3bc:	str	r2, [r5]
   3b3c0:	mov	r2, #34	; 0x22
   3b3c4:	b	3b114 <flatcc_json_printer_string@@Base+0x3c>
   3b3c8:	mov	r0, #34	; 0x22
   3b3cc:	strb	r0, [r1]
   3b3d0:	sub	sp, fp, #28
   3b3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b3d8 <flatcc_json_printer_write@@Base>:
   3b3d8:	push	{r4, r5, r6, r7, fp, lr}
   3b3dc:	add	fp, sp, #16
   3b3e0:	mov	r6, r1
   3b3e4:	mov	r5, r0
   3b3e8:	ldr	r1, [r0, #16]
   3b3ec:	ldr	r0, [r0, #20]
   3b3f0:	mov	r4, r2
   3b3f4:	add	r2, r0, r2
   3b3f8:	cmp	r2, r1
   3b3fc:	bcc	3b470 <flatcc_json_printer_write@@Base+0x98>
   3b400:	cmp	r0, r1
   3b404:	bcc	3b420 <flatcc_json_printer_write@@Base+0x48>
   3b408:	ldr	r2, [r5, #44]	; 0x2c
   3b40c:	mov	r0, r5
   3b410:	mov	r1, #0
   3b414:	blx	r2
   3b418:	ldr	r1, [r5, #16]
   3b41c:	ldr	r0, [r5, #20]
   3b420:	sub	r7, r1, r0
   3b424:	cmp	r7, r4
   3b428:	bcs	3b470 <flatcc_json_printer_write@@Base+0x98>
   3b42c:	mov	r1, r6
   3b430:	mov	r2, r7
   3b434:	bl	14e58 <memcpy@plt>
   3b438:	ldr	r0, [r5, #20]
   3b43c:	ldr	r2, [r5, #44]	; 0x2c
   3b440:	mov	r1, #0
   3b444:	add	r0, r0, r7
   3b448:	str	r0, [r5, #20]
   3b44c:	mov	r0, r5
   3b450:	blx	r2
   3b454:	ldr	r1, [r5, #16]
   3b458:	ldr	r0, [r5, #20]
   3b45c:	sub	r4, r4, r7
   3b460:	add	r6, r6, r7
   3b464:	sub	r7, r1, r0
   3b468:	cmp	r4, r7
   3b46c:	bhi	3b42c <flatcc_json_printer_write@@Base+0x54>
   3b470:	mov	r1, r6
   3b474:	mov	r2, r4
   3b478:	bl	14e58 <memcpy@plt>
   3b47c:	ldr	r0, [r5, #20]
   3b480:	add	r0, r0, r4
   3b484:	str	r0, [r5, #20]
   3b488:	pop	{r4, r5, r6, r7, fp, pc}

0003b48c <flatcc_json_printer_nl@@Base>:
   3b48c:	ldr	r1, [r0, #20]
   3b490:	add	r2, r1, #1
   3b494:	str	r2, [r0, #20]
   3b498:	mov	r2, #10
   3b49c:	strb	r2, [r1]
   3b4a0:	ldr	r1, [r0, #16]
   3b4a4:	ldr	r2, [r0, #20]
   3b4a8:	cmp	r2, r1
   3b4ac:	bxcc	lr
   3b4b0:	ldr	r2, [r0, #44]	; 0x2c
   3b4b4:	mov	r1, #0
   3b4b8:	bx	r2

0003b4bc <flatcc_json_printer_char@@Base>:
   3b4bc:	ldr	r2, [r0, #20]
   3b4c0:	add	r3, r2, #1
   3b4c4:	str	r3, [r0, #20]
   3b4c8:	strb	r1, [r2]
   3b4cc:	bx	lr

0003b4d0 <flatcc_json_printer_indent@@Base>:
   3b4d0:	push	{r4, r5, r6, sl, fp, lr}
   3b4d4:	add	fp, sp, #16
   3b4d8:	mov	r4, r0
   3b4dc:	ldr	r1, [r0, #16]
   3b4e0:	ldr	r0, [r0, #20]
   3b4e4:	ldrb	r2, [r4, #25]
   3b4e8:	ldr	r3, [r4, #32]
   3b4ec:	mla	r6, r3, r2, r0
   3b4f0:	mul	r5, r3, r2
   3b4f4:	cmp	r6, r1
   3b4f8:	bls	3b568 <flatcc_json_printer_indent@@Base+0x98>
   3b4fc:	cmp	r0, r1
   3b500:	bcc	3b51c <flatcc_json_printer_indent@@Base+0x4c>
   3b504:	ldr	r2, [r4, #44]	; 0x2c
   3b508:	mov	r0, r4
   3b50c:	mov	r1, #0
   3b510:	blx	r2
   3b514:	ldr	r1, [r4, #16]
   3b518:	ldr	r0, [r4, #20]
   3b51c:	sub	r6, r1, r0
   3b520:	cmp	r6, r5
   3b524:	bcs	3b568 <flatcc_json_printer_indent@@Base+0x98>
   3b528:	mov	r1, #32
   3b52c:	mov	r2, r6
   3b530:	bl	14ee8 <memset@plt>
   3b534:	ldr	r0, [r4, #20]
   3b538:	ldr	r2, [r4, #44]	; 0x2c
   3b53c:	mov	r1, #0
   3b540:	add	r0, r0, r6
   3b544:	str	r0, [r4, #20]
   3b548:	mov	r0, r4
   3b54c:	blx	r2
   3b550:	ldr	r1, [r4, #16]
   3b554:	ldr	r0, [r4, #20]
   3b558:	sub	r5, r5, r6
   3b55c:	sub	r6, r1, r0
   3b560:	cmp	r5, r6
   3b564:	bhi	3b528 <flatcc_json_printer_indent@@Base+0x58>
   3b568:	mov	r1, #32
   3b56c:	mov	r2, r5
   3b570:	bl	14ee8 <memset@plt>
   3b574:	ldr	r0, [r4, #20]
   3b578:	add	r0, r0, r5
   3b57c:	str	r0, [r4, #20]
   3b580:	pop	{r4, r5, r6, sl, fp, pc}

0003b584 <flatcc_json_printer_add_level@@Base>:
   3b584:	ldr	r2, [r0, #32]
   3b588:	add	r1, r2, r1
   3b58c:	str	r1, [r0, #32]
   3b590:	bx	lr

0003b594 <flatcc_json_printer_get_level@@Base>:
   3b594:	ldr	r0, [r0, #32]
   3b598:	bx	lr

0003b59c <flatcc_json_printer_uint8@@Base>:
   3b59c:	push	{fp, lr}
   3b5a0:	mov	fp, sp
   3b5a4:	ldr	lr, [r0, #20]
   3b5a8:	cmp	r1, #100	; 0x64
   3b5ac:	bcc	3b5f8 <flatcc_json_printer_uint8@@Base+0x5c>
   3b5b0:	mov	r3, #0
   3b5b4:	strb	r3, [lr, #3]
   3b5b8:	movw	r3, #34079	; 0x851f
   3b5bc:	movt	r3, #20971	; 0x51eb
   3b5c0:	umull	r3, ip, r1, r3
   3b5c4:	mov	r3, #48	; 0x30
   3b5c8:	orr	r3, r3, ip, lsr #5
   3b5cc:	lsr	ip, ip, #5
   3b5d0:	strb	r3, [lr]
   3b5d4:	mov	r3, #100	; 0x64
   3b5d8:	mls	r1, ip, r3, r1
   3b5dc:	ldr	r3, [pc, #124]	; 3b660 <flatcc_json_printer_uint8@@Base+0xc4>
   3b5e0:	add	r3, pc, r3
   3b5e4:	add	r1, r3, r1, lsl #1
   3b5e8:	ldrh	r1, [r1]
   3b5ec:	strh	r1, [lr, #1]
   3b5f0:	mov	r1, #3
   3b5f4:	b	3b650 <flatcc_json_printer_uint8@@Base+0xb4>
   3b5f8:	cmp	r1, #10
   3b5fc:	bcc	3b63c <flatcc_json_printer_uint8@@Base+0xa0>
   3b600:	mov	r3, #0
   3b604:	strb	r3, [lr, #2]
   3b608:	movw	r3, #34079	; 0x851f
   3b60c:	movt	r3, #20971	; 0x51eb
   3b610:	umull	r3, r2, r1, r3
   3b614:	lsr	r2, r2, #5
   3b618:	mov	r3, #100	; 0x64
   3b61c:	mls	r1, r2, r3, r1
   3b620:	ldr	r2, [pc, #60]	; 3b664 <flatcc_json_printer_uint8@@Base+0xc8>
   3b624:	add	r2, pc, r2
   3b628:	add	r1, r2, r1, lsl #1
   3b62c:	ldrh	r1, [r1]
   3b630:	strh	r1, [lr]
   3b634:	mov	r1, #2
   3b638:	b	3b650 <flatcc_json_printer_uint8@@Base+0xb4>
   3b63c:	mov	r2, #0
   3b640:	add	r1, r1, #48	; 0x30
   3b644:	strb	r2, [lr, #1]
   3b648:	strb	r1, [lr]
   3b64c:	mov	r1, #1
   3b650:	ldr	r2, [r0, #20]
   3b654:	add	r1, r2, r1
   3b658:	str	r1, [r0, #20]
   3b65c:	pop	{fp, pc}
   3b660:	andeq	r2, r1, pc, asr r7
   3b664:	andeq	r2, r1, fp, lsl r7

0003b668 <flatcc_json_printer_uint16@@Base>:
   3b668:	push	{r4, sl, fp, lr}
   3b66c:	add	fp, sp, #8
   3b670:	mov	r2, r1
   3b674:	ldr	r1, [r0, #20]
   3b678:	mov	r4, r0
   3b67c:	mov	r0, r2
   3b680:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3b684:	ldr	r1, [r4, #20]
   3b688:	add	r0, r1, r0
   3b68c:	str	r0, [r4, #20]
   3b690:	pop	{r4, sl, fp, pc}
   3b694:	mov	ip, r0
   3b698:	cmp	r0, #1000	; 0x3e8
   3b69c:	bcc	3b6b4 <flatcc_json_printer_uint16@@Base+0x4c>
   3b6a0:	movw	r3, #9999	; 0x270f
   3b6a4:	mov	r0, #4
   3b6a8:	cmp	ip, r3
   3b6ac:	movwhi	r0, #5
   3b6b0:	b	3b6d8 <flatcc_json_printer_uint16@@Base+0x70>
   3b6b4:	cmp	ip, #100	; 0x64
   3b6b8:	bcc	3b6cc <flatcc_json_printer_uint16@@Base+0x64>
   3b6bc:	mov	r0, #0
   3b6c0:	strb	r0, [r1, #3]!
   3b6c4:	mov	r0, #3
   3b6c8:	b	3b774 <flatcc_json_printer_uint16@@Base+0x10c>
   3b6cc:	mov	r0, #1
   3b6d0:	cmp	ip, #9
   3b6d4:	movwhi	r0, #2
   3b6d8:	mov	r3, #0
   3b6dc:	tst	r0, #1
   3b6e0:	strb	r3, [r1, r0]!
   3b6e4:	bne	3b72c <flatcc_json_printer_uint16@@Base+0xc4>
   3b6e8:	cmp	r0, #2
   3b6ec:	beq	3b7b4 <flatcc_json_printer_uint16@@Base+0x14c>
   3b6f0:	cmp	r0, #4
   3b6f4:	bxne	lr
   3b6f8:	movw	r2, #34079	; 0x851f
   3b6fc:	movt	r2, #20971	; 0x51eb
   3b700:	umull	r2, r3, ip, r2
   3b704:	lsr	r3, r3, #5
   3b708:	mov	r2, #100	; 0x64
   3b70c:	mls	r2, r3, r2, ip
   3b710:	uxth	ip, r2
   3b714:	ldr	r2, [pc, #224]	; 3b7fc <flatcc_json_printer_uint16@@Base+0x194>
   3b718:	add	r2, pc, r2
   3b71c:	add	r2, r2, ip, lsl #1
   3b720:	ldrh	r2, [r2]
   3b724:	strh	r2, [r1, #-2]!
   3b728:	b	3b7b8 <flatcc_json_printer_uint16@@Base+0x150>
   3b72c:	cmp	r0, #1
   3b730:	beq	3b7ec <flatcc_json_printer_uint16@@Base+0x184>
   3b734:	cmp	r0, #3
   3b738:	beq	3b774 <flatcc_json_printer_uint16@@Base+0x10c>
   3b73c:	cmp	r0, #5
   3b740:	bne	3b7e8 <flatcc_json_printer_uint16@@Base+0x180>
   3b744:	movw	r3, #34079	; 0x851f
   3b748:	movt	r3, #20971	; 0x51eb
   3b74c:	umull	r3, r2, ip, r3
   3b750:	lsr	r2, r2, #5
   3b754:	mov	r3, #100	; 0x64
   3b758:	mls	ip, r2, r3, ip
   3b75c:	ldr	r3, [pc, #144]	; 3b7f4 <flatcc_json_printer_uint16@@Base+0x18c>
   3b760:	add	r3, pc, r3
   3b764:	add	r3, r3, ip, lsl #1
   3b768:	mov	ip, r2
   3b76c:	ldrh	r3, [r3]
   3b770:	strh	r3, [r1, #-2]!
   3b774:	movw	r3, #34079	; 0x851f
   3b778:	uxth	r2, ip
   3b77c:	movt	r3, #20971	; 0x51eb
   3b780:	umull	r2, r3, r2, r3
   3b784:	lsr	r3, r3, #5
   3b788:	mov	r2, #100	; 0x64
   3b78c:	mls	r2, r3, r2, ip
   3b790:	uxth	ip, r2
   3b794:	ldr	r2, [pc, #92]	; 3b7f8 <flatcc_json_printer_uint16@@Base+0x190>
   3b798:	add	r2, pc, r2
   3b79c:	add	r2, r2, ip, lsl #1
   3b7a0:	ldrh	r2, [r2]
   3b7a4:	strh	r2, [r1, #-2]!
   3b7a8:	add	r2, r3, #48	; 0x30
   3b7ac:	strb	r2, [r1, #-1]
   3b7b0:	bx	lr
   3b7b4:	mov	r3, ip
   3b7b8:	uxth	ip, r3
   3b7bc:	movw	r3, #34079	; 0x851f
   3b7c0:	movt	r3, #20971	; 0x51eb
   3b7c4:	umull	r3, r2, ip, r3
   3b7c8:	lsr	r2, r2, #5
   3b7cc:	mov	r3, #100	; 0x64
   3b7d0:	mls	r2, r2, r3, ip
   3b7d4:	ldr	r3, [pc, #36]	; 3b800 <flatcc_json_printer_uint16@@Base+0x198>
   3b7d8:	add	r3, pc, r3
   3b7dc:	add	r2, r3, r2, lsl #1
   3b7e0:	ldrh	r2, [r2]
   3b7e4:	strh	r2, [r1, #-2]
   3b7e8:	bx	lr
   3b7ec:	mov	r3, ip
   3b7f0:	b	3b7a8 <flatcc_json_printer_uint16@@Base+0x140>
   3b7f4:	ldrdeq	r2, [r1], -pc	; <UNPREDICTABLE>
   3b7f8:	andeq	r2, r1, r7, lsr #11
   3b7fc:	andeq	r2, r1, r7, lsr #12
   3b800:	andeq	r2, r1, r7, ror #10

0003b804 <flatcc_json_printer_uint32@@Base>:
   3b804:	push	{r4, sl, fp, lr}
   3b808:	add	fp, sp, #8
   3b80c:	mov	r2, r1
   3b810:	ldr	r1, [r0, #20]
   3b814:	mov	r4, r0
   3b818:	mov	r0, r2
   3b81c:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3b820:	ldr	r1, [r4, #20]
   3b824:	add	r0, r1, r0
   3b828:	str	r0, [r4, #20]
   3b82c:	pop	{r4, sl, fp, pc}
   3b830:	mov	ip, r0
   3b834:	movw	r0, #10000	; 0x2710
   3b838:	cmp	ip, r0
   3b83c:	bcc	3b870 <flatcc_json_printer_uint32@@Base+0x6c>
   3b840:	movw	r0, #38528	; 0x9680
   3b844:	movt	r0, #152	; 0x98
   3b848:	cmp	ip, r0
   3b84c:	bcc	3b88c <flatcc_json_printer_uint32@@Base+0x88>
   3b850:	movw	r0, #51712	; 0xca00
   3b854:	movt	r0, #15258	; 0x3b9a
   3b858:	cmp	ip, r0
   3b85c:	bcc	3b8bc <flatcc_json_printer_uint32@@Base+0xb8>
   3b860:	mov	r0, #0
   3b864:	strb	r0, [r1, #10]!
   3b868:	mov	r0, #10
   3b86c:	b	3b8f8 <flatcc_json_printer_uint32@@Base+0xf4>
   3b870:	cmp	ip, #100	; 0x64
   3b874:	bcc	3b8ac <flatcc_json_printer_uint32@@Base+0xa8>
   3b878:	lsr	r3, ip, #3
   3b87c:	mov	r0, #3
   3b880:	cmp	r3, #124	; 0x7c
   3b884:	movwhi	r0, #4
   3b888:	b	3b8e8 <flatcc_json_printer_uint32@@Base+0xe4>
   3b88c:	movw	r0, #16960	; 0x4240
   3b890:	movt	r0, #15
   3b894:	cmp	ip, r0
   3b898:	bcc	3b8d4 <flatcc_json_printer_uint32@@Base+0xd0>
   3b89c:	mov	r0, #0
   3b8a0:	strb	r0, [r1, #7]!
   3b8a4:	mov	r0, #7
   3b8a8:	b	3ba30 <flatcc_json_printer_uint32@@Base+0x22c>
   3b8ac:	mov	r0, #1
   3b8b0:	cmp	ip, #9
   3b8b4:	movwhi	r0, #2
   3b8b8:	b	3b8e8 <flatcc_json_printer_uint32@@Base+0xe4>
   3b8bc:	movw	r3, #57599	; 0xe0ff
   3b8c0:	mov	r0, #8
   3b8c4:	movt	r3, #1525	; 0x5f5
   3b8c8:	cmp	ip, r3
   3b8cc:	movwhi	r0, #9
   3b8d0:	b	3b8e8 <flatcc_json_printer_uint32@@Base+0xe4>
   3b8d4:	movw	r3, #34463	; 0x869f
   3b8d8:	mov	r0, #5
   3b8dc:	movt	r3, #1
   3b8e0:	cmp	ip, r3
   3b8e4:	movwhi	r0, #6
   3b8e8:	mov	r3, #0
   3b8ec:	tst	r0, #1
   3b8f0:	strb	r3, [r1, r0]!
   3b8f4:	bne	3ba30 <flatcc_json_printer_uint32@@Base+0x22c>
   3b8f8:	lsr	r2, r0, #1
   3b8fc:	orr	r2, r2, r0, lsl #3
   3b900:	eor	r3, r2, #4
   3b904:	sbfx	r2, r3, #0, #4
   3b908:	cmp	r2, #0
   3b90c:	blt	3ba2c <flatcc_json_printer_uint32@@Base+0x228>
   3b910:	and	r2, r3, #15
   3b914:	add	r3, pc, #4
   3b918:	ldr	r2, [r3, r2, lsl #2]
   3b91c:	add	pc, r3, r2
   3b920:	andeq	r0, r0, r0, asr r0
   3b924:	andeq	r0, r0, r0, lsr #32
   3b928:	andeq	r0, r0, ip, lsl #2
   3b92c:	andeq	r0, r0, ip, lsl #2
   3b930:	andeq	r0, r0, ip, lsl #2
   3b934:	andeq	r0, r0, r0, ror #1
   3b938:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   3b93c:	andeq	r0, r0, r0, lsl #1
   3b940:	movw	r2, #34079	; 0x851f
   3b944:	movt	r2, #20971	; 0x51eb
   3b948:	umull	r2, r3, ip, r2
   3b94c:	lsr	r2, r3, #5
   3b950:	mov	r3, #100	; 0x64
   3b954:	mls	ip, r2, r3, ip
   3b958:	ldr	r3, [pc, #500]	; 3bb54 <flatcc_json_printer_uint32@@Base+0x350>
   3b95c:	add	r3, pc, r3
   3b960:	add	r3, r3, ip, lsl #1
   3b964:	mov	ip, r2
   3b968:	ldrh	r3, [r3]
   3b96c:	strh	r3, [r1, #-2]!
   3b970:	movw	r2, #34079	; 0x851f
   3b974:	movt	r2, #20971	; 0x51eb
   3b978:	umull	r2, r3, ip, r2
   3b97c:	lsr	r2, r3, #5
   3b980:	mov	r3, #100	; 0x64
   3b984:	mls	ip, r2, r3, ip
   3b988:	ldr	r3, [pc, #456]	; 3bb58 <flatcc_json_printer_uint32@@Base+0x354>
   3b98c:	add	r3, pc, r3
   3b990:	add	r3, r3, ip, lsl #1
   3b994:	mov	ip, r2
   3b998:	ldrh	r3, [r3]
   3b99c:	strh	r3, [r1, #-2]!
   3b9a0:	movw	r2, #34079	; 0x851f
   3b9a4:	movt	r2, #20971	; 0x51eb
   3b9a8:	umull	r2, r3, ip, r2
   3b9ac:	lsr	r2, r3, #5
   3b9b0:	mov	r3, #100	; 0x64
   3b9b4:	mls	ip, r2, r3, ip
   3b9b8:	ldr	r3, [pc, #412]	; 3bb5c <flatcc_json_printer_uint32@@Base+0x358>
   3b9bc:	add	r3, pc, r3
   3b9c0:	add	r3, r3, ip, lsl #1
   3b9c4:	mov	ip, r2
   3b9c8:	ldrh	r3, [r3]
   3b9cc:	strh	r3, [r1, #-2]!
   3b9d0:	movw	r2, #34079	; 0x851f
   3b9d4:	movt	r2, #20971	; 0x51eb
   3b9d8:	umull	r2, r3, ip, r2
   3b9dc:	lsr	r2, r3, #5
   3b9e0:	mov	r3, #100	; 0x64
   3b9e4:	mls	ip, r2, r3, ip
   3b9e8:	ldr	r3, [pc, #368]	; 3bb60 <flatcc_json_printer_uint32@@Base+0x35c>
   3b9ec:	add	r3, pc, r3
   3b9f0:	add	r3, r3, ip, lsl #1
   3b9f4:	mov	ip, r2
   3b9f8:	ldrh	r3, [r3]
   3b9fc:	strh	r3, [r1, #-2]!
   3ba00:	movw	r2, #34079	; 0x851f
   3ba04:	movt	r2, #20971	; 0x51eb
   3ba08:	umull	r2, r3, ip, r2
   3ba0c:	lsr	r2, r3, #5
   3ba10:	mov	r3, #100	; 0x64
   3ba14:	mls	r2, r2, r3, ip
   3ba18:	ldr	r3, [pc, #324]	; 3bb64 <flatcc_json_printer_uint32@@Base+0x360>
   3ba1c:	add	r3, pc, r3
   3ba20:	add	r2, r3, r2, lsl #1
   3ba24:	ldrh	r2, [r2]
   3ba28:	strh	r2, [r1, #-2]
   3ba2c:	bx	lr
   3ba30:	add	r3, r0, #7
   3ba34:	ubfx	r2, r3, #1, #3
   3ba38:	orr	r3, r2, r3, lsl #3
   3ba3c:	sbfx	r2, r3, #0, #4
   3ba40:	cmp	r2, #0
   3ba44:	bxlt	lr
   3ba48:	and	r2, r3, #15
   3ba4c:	add	r3, pc, #4
   3ba50:	ldr	r2, [r3, r2, lsl #2]
   3ba54:	add	pc, r3, r2
   3ba58:	andeq	r0, r0, r0, lsr #32
   3ba5c:			; <UNDEFINED> instruction: 0xffffffd4
   3ba60:			; <UNDEFINED> instruction: 0xffffffd4
   3ba64:			; <UNDEFINED> instruction: 0xffffffd4
   3ba68:	andeq	r0, r0, r0, ror #1
   3ba6c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   3ba70:	andeq	r0, r0, r0, lsl #1
   3ba74:	andeq	r0, r0, r0, asr r0
   3ba78:	movw	r2, #34079	; 0x851f
   3ba7c:	movt	r2, #20971	; 0x51eb
   3ba80:	umull	r2, r3, ip, r2
   3ba84:	lsr	r2, r3, #5
   3ba88:	mov	r3, #100	; 0x64
   3ba8c:	mls	ip, r2, r3, ip
   3ba90:	ldr	r3, [pc, #172]	; 3bb44 <flatcc_json_printer_uint32@@Base+0x340>
   3ba94:	add	r3, pc, r3
   3ba98:	add	r3, r3, ip, lsl #1
   3ba9c:	mov	ip, r2
   3baa0:	ldrh	r3, [r3]
   3baa4:	strh	r3, [r1, #-2]!
   3baa8:	movw	r2, #34079	; 0x851f
   3baac:	movt	r2, #20971	; 0x51eb
   3bab0:	umull	r2, r3, ip, r2
   3bab4:	lsr	r2, r3, #5
   3bab8:	mov	r3, #100	; 0x64
   3babc:	mls	ip, r2, r3, ip
   3bac0:	ldr	r3, [pc, #128]	; 3bb48 <flatcc_json_printer_uint32@@Base+0x344>
   3bac4:	add	r3, pc, r3
   3bac8:	add	r3, r3, ip, lsl #1
   3bacc:	mov	ip, r2
   3bad0:	ldrh	r3, [r3]
   3bad4:	strh	r3, [r1, #-2]!
   3bad8:	movw	r2, #34079	; 0x851f
   3badc:	movt	r2, #20971	; 0x51eb
   3bae0:	umull	r2, r3, ip, r2
   3bae4:	lsr	r2, r3, #5
   3bae8:	mov	r3, #100	; 0x64
   3baec:	mls	ip, r2, r3, ip
   3baf0:	ldr	r3, [pc, #84]	; 3bb4c <flatcc_json_printer_uint32@@Base+0x348>
   3baf4:	add	r3, pc, r3
   3baf8:	add	r3, r3, ip, lsl #1
   3bafc:	mov	ip, r2
   3bb00:	ldrh	r3, [r3]
   3bb04:	strh	r3, [r1, #-2]!
   3bb08:	movw	r2, #34079	; 0x851f
   3bb0c:	movt	r2, #20971	; 0x51eb
   3bb10:	umull	r2, r3, ip, r2
   3bb14:	lsr	r2, r3, #5
   3bb18:	mov	r3, #100	; 0x64
   3bb1c:	mls	ip, r2, r3, ip
   3bb20:	ldr	r3, [pc, #40]	; 3bb50 <flatcc_json_printer_uint32@@Base+0x34c>
   3bb24:	add	r3, pc, r3
   3bb28:	add	r3, r3, ip, lsl #1
   3bb2c:	mov	ip, r2
   3bb30:	ldrh	r3, [r3]
   3bb34:	strh	r3, [r1, #-2]!
   3bb38:	add	r2, ip, #48	; 0x30
   3bb3c:	strb	r2, [r1, #-1]
   3bb40:	bx	lr
   3bb44:	andeq	r2, r1, fp, lsr #5
   3bb48:	andeq	r2, r1, fp, ror r2
   3bb4c:	andeq	r2, r1, fp, asr #4
   3bb50:	andeq	r2, r1, fp, lsl r2
   3bb54:	andeq	r2, r1, r3, ror #7
   3bb58:			; <UNDEFINED> instruction: 0x000123b3
   3bb5c:	andeq	r2, r1, r3, lsl #7
   3bb60:	andeq	r2, r1, r3, asr r3
   3bb64:	andeq	r2, r1, r3, lsr #6

0003bb68 <flatcc_json_printer_uint64@@Base>:
   3bb68:	push	{r4, sl, fp, lr}
   3bb6c:	add	fp, sp, #8
   3bb70:	mov	r1, r3
   3bb74:	mov	r3, r2
   3bb78:	ldr	r2, [r0, #20]
   3bb7c:	mov	r4, r0
   3bb80:	mov	r0, r3
   3bb84:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3bb88:	ldr	r1, [r4, #20]
   3bb8c:	add	r0, r1, r0
   3bb90:	str	r0, [r4, #20]
   3bb94:	pop	{r4, sl, fp, pc}
   3bb98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3bb9c:	add	fp, sp, #24
   3bba0:	mov	r7, r0
   3bba4:	movw	r0, #51711	; 0xc9ff
   3bba8:	mov	r4, r2
   3bbac:	movt	r0, #15258	; 0x3b9a
   3bbb0:	subs	r0, r0, r7
   3bbb4:	rscs	r0, r1, #0
   3bbb8:	bcc	3bbcc <flatcc_json_printer_uint64@@Base+0x64>
   3bbbc:	mov	r0, r7
   3bbc0:	mov	r1, r4
   3bbc4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3bbc8:	b	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3bbcc:	mov	r6, r1
   3bbd0:	movw	r1, #40960	; 0xa000
   3bbd4:	movw	r0, #2328	; 0x918
   3bbd8:	movt	r1, #20082	; 0x4e72
   3bbdc:	subs	r1, r7, r1
   3bbe0:	sbcs	r0, r6, r0
   3bbe4:	bcc	3bc44 <flatcc_json_printer_uint64@@Base+0xdc>
   3bbe8:	movw	r1, #0
   3bbec:	movw	r0, #34546	; 0x86f2
   3bbf0:	movt	r1, #28609	; 0x6fc1
   3bbf4:	movt	r0, #35	; 0x23
   3bbf8:	subs	r1, r7, r1
   3bbfc:	sbcs	r0, r6, r0
   3bc00:	bcc	3bc74 <flatcc_json_printer_uint64@@Base+0x10c>
   3bc04:	movw	r1, #0
   3bc08:	movw	r0, #46771	; 0xb6b3
   3bc0c:	movt	r1, #42852	; 0xa764
   3bc10:	movt	r0, #3552	; 0xde0
   3bc14:	subs	r1, r7, r1
   3bc18:	sbcs	r0, r6, r0
   3bc1c:	bcc	3bcbc <flatcc_json_printer_uint64@@Base+0x154>
   3bc20:	movw	r1, #65535	; 0xffff
   3bc24:	movw	r0, #8964	; 0x2304
   3bc28:	mov	r8, #19
   3bc2c:	movt	r1, #35303	; 0x89e7
   3bc30:	movt	r0, #35527	; 0x8ac7
   3bc34:	subs	r1, r1, r7
   3bc38:	sbcs	r0, r0, r6
   3bc3c:	movwcc	r8, #20
   3bc40:	b	3bcfc <flatcc_json_printer_uint64@@Base+0x194>
   3bc44:	movw	r0, #59392	; 0xe800
   3bc48:	movt	r0, #18550	; 0x4876
   3bc4c:	subs	r0, r7, r0
   3bc50:	sbcs	r0, r6, #23
   3bc54:	bcc	3bca0 <flatcc_json_printer_uint64@@Base+0x138>
   3bc58:	movw	r0, #4095	; 0xfff
   3bc5c:	mov	r8, #12
   3bc60:	movt	r0, #54437	; 0xd4a5
   3bc64:	subs	r0, r0, r7
   3bc68:	rscs	r0, r6, #232	; 0xe8
   3bc6c:	movwcc	r8, #13
   3bc70:	b	3bcfc <flatcc_json_printer_uint64@@Base+0x194>
   3bc74:	movw	r1, #32768	; 0x8000
   3bc78:	movw	r0, #36222	; 0x8d7e
   3bc7c:	movt	r1, #42182	; 0xa4c6
   3bc80:	movt	r0, #3
   3bc84:	subs	r1, r7, r1
   3bc88:	sbcs	r0, r6, r0
   3bc8c:	bcc	3bce0 <flatcc_json_printer_uint64@@Base+0x178>
   3bc90:	mov	r0, #0
   3bc94:	mov	r8, #16
   3bc98:	strb	r0, [r4, #16]!
   3bc9c:	b	3bdc0 <flatcc_json_printer_uint64@@Base+0x258>
   3bca0:	movw	r0, #58367	; 0xe3ff
   3bca4:	mov	r8, #10
   3bca8:	movt	r0, #21515	; 0x540b
   3bcac:	subs	r0, r0, r7
   3bcb0:	rscs	r0, r6, #2
   3bcb4:	movwcc	r8, #11
   3bcb8:	b	3bcfc <flatcc_json_printer_uint64@@Base+0x194>
   3bcbc:	movw	r1, #65535	; 0xffff
   3bcc0:	movw	r0, #17784	; 0x4578
   3bcc4:	mov	r8, #17
   3bcc8:	movt	r1, #23945	; 0x5d89
   3bccc:	movt	r0, #355	; 0x163
   3bcd0:	subs	r1, r1, r7
   3bcd4:	sbcs	r0, r0, r6
   3bcd8:	movwcc	r8, #18
   3bcdc:	b	3bcfc <flatcc_json_printer_uint64@@Base+0x194>
   3bce0:	movw	r1, #16383	; 0x3fff
   3bce4:	movw	r0, #23283	; 0x5af3
   3bce8:	mov	r8, #14
   3bcec:	movt	r1, #4218	; 0x107a
   3bcf0:	subs	r1, r1, r7
   3bcf4:	sbcs	r0, r0, r6
   3bcf8:	movwcc	r8, #15
   3bcfc:	mov	r0, #0
   3bd00:	tst	r8, #1
   3bd04:	strb	r0, [r4, r8]!
   3bd08:	bne	3bea4 <flatcc_json_printer_uint64@@Base+0x33c>
   3bd0c:	sub	r0, r8, #10
   3bd10:	cmp	r0, #10
   3bd14:	bhi	3c01c <flatcc_json_printer_uint64@@Base+0x4b4>
   3bd18:	add	r1, pc, #4
   3bd1c:	ldr	r0, [r1, r0, lsl #2]
   3bd20:	add	pc, r1, r0
   3bd24:	andeq	r0, r0, r4, asr #2
   3bd28:	strdeq	r0, [r0], -r8
   3bd2c:	andeq	r0, r0, ip, lsl #2
   3bd30:	strdeq	r0, [r0], -r8
   3bd34:	ldrdeq	r0, [r0], -r4
   3bd38:	strdeq	r0, [r0], -r8
   3bd3c:	muleq	r0, ip, r0
   3bd40:	strdeq	r0, [r0], -r8
   3bd44:	andeq	r0, r0, r4, rrx
   3bd48:	strdeq	r0, [r0], -r8
   3bd4c:	andeq	r0, r0, ip, lsr #32
   3bd50:	mov	r0, r7
   3bd54:	mov	r1, r6
   3bd58:	mov	r2, #100	; 0x64
   3bd5c:	mov	r3, #0
   3bd60:	mov	r5, #100	; 0x64
   3bd64:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bd68:	ldr	r2, [pc, #876]	; 3c0dc <flatcc_json_printer_uint64@@Base+0x574>
   3bd6c:	mov	r6, r1
   3bd70:	mls	r1, r0, r5, r7
   3bd74:	mov	r7, r0
   3bd78:	add	r2, pc, r2
   3bd7c:	add	r1, r2, r1, lsl #1
   3bd80:	ldrh	r1, [r1]
   3bd84:	strh	r1, [r4, #-2]!
   3bd88:	mov	r0, r7
   3bd8c:	mov	r1, r6
   3bd90:	mov	r2, #100	; 0x64
   3bd94:	mov	r3, #0
   3bd98:	mov	r5, #100	; 0x64
   3bd9c:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bda0:	ldr	r2, [pc, #824]	; 3c0e0 <flatcc_json_printer_uint64@@Base+0x578>
   3bda4:	mov	r6, r1
   3bda8:	mls	r1, r0, r5, r7
   3bdac:	mov	r7, r0
   3bdb0:	add	r2, pc, r2
   3bdb4:	add	r1, r2, r1, lsl #1
   3bdb8:	ldrh	r1, [r1]
   3bdbc:	strh	r1, [r4, #-2]!
   3bdc0:	mov	r0, r7
   3bdc4:	mov	r1, r6
   3bdc8:	mov	r2, #100	; 0x64
   3bdcc:	mov	r3, #0
   3bdd0:	mov	r5, #100	; 0x64
   3bdd4:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bdd8:	ldr	r2, [pc, #772]	; 3c0e4 <flatcc_json_printer_uint64@@Base+0x57c>
   3bddc:	mov	r6, r1
   3bde0:	mls	r1, r0, r5, r7
   3bde4:	mov	r7, r0
   3bde8:	add	r2, pc, r2
   3bdec:	add	r1, r2, r1, lsl #1
   3bdf0:	ldrh	r1, [r1]
   3bdf4:	strh	r1, [r4, #-2]!
   3bdf8:	mov	r0, r7
   3bdfc:	mov	r1, r6
   3be00:	mov	r2, #100	; 0x64
   3be04:	mov	r3, #0
   3be08:	mov	r5, #100	; 0x64
   3be0c:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3be10:	ldr	r2, [pc, #720]	; 3c0e8 <flatcc_json_printer_uint64@@Base+0x580>
   3be14:	mov	r6, r1
   3be18:	mls	r1, r0, r5, r7
   3be1c:	mov	r7, r0
   3be20:	add	r2, pc, r2
   3be24:	add	r1, r2, r1, lsl #1
   3be28:	ldrh	r1, [r1]
   3be2c:	strh	r1, [r4, #-2]!
   3be30:	mov	r0, r7
   3be34:	mov	r1, r6
   3be38:	mov	r2, #100	; 0x64
   3be3c:	mov	r3, #0
   3be40:	mov	r5, #100	; 0x64
   3be44:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3be48:	ldr	r2, [pc, #668]	; 3c0ec <flatcc_json_printer_uint64@@Base+0x584>
   3be4c:	mov	r6, r1
   3be50:	mls	r1, r0, r5, r7
   3be54:	mov	r7, r0
   3be58:	add	r2, pc, r2
   3be5c:	add	r1, r2, r1, lsl #1
   3be60:	ldrh	r1, [r1]
   3be64:	strh	r1, [r4, #-2]!
   3be68:	mov	r0, r7
   3be6c:	mov	r1, r6
   3be70:	mov	r2, #100	; 0x64
   3be74:	mov	r3, #0
   3be78:	mov	r5, #100	; 0x64
   3be7c:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3be80:	ldr	r2, [pc, #616]	; 3c0f0 <flatcc_json_printer_uint64@@Base+0x588>
   3be84:	mov	r6, r1
   3be88:	mls	r1, r0, r5, r7
   3be8c:	mov	r7, r0
   3be90:	add	r2, pc, r2
   3be94:	add	r1, r2, r1, lsl #1
   3be98:	ldrh	r1, [r1]
   3be9c:	strh	r1, [r4, #-2]!
   3bea0:	b	3c01c <flatcc_json_printer_uint64@@Base+0x4b4>
   3bea4:	sub	r0, r8, #11
   3bea8:	cmp	r0, #8
   3beac:	bhi	3c01c <flatcc_json_printer_uint64@@Base+0x4b4>
   3beb0:	add	r1, pc, #4
   3beb4:	ldr	r0, [r1, r0, lsl #2]
   3beb8:	add	pc, r1, r0
   3bebc:	strdeq	r0, [r0], -ip
   3bec0:	andeq	r0, r0, r0, ror #2
   3bec4:	andeq	r0, r0, r4, asr #1
   3bec8:	andeq	r0, r0, r0, ror #2
   3becc:	andeq	r0, r0, ip, lsl #1
   3bed0:	andeq	r0, r0, r0, ror #2
   3bed4:	andeq	r0, r0, r4, asr r0
   3bed8:	andeq	r0, r0, r0, ror #2
   3bedc:	andeq	r0, r0, r4, lsr #32
   3bee0:	mov	r0, r7
   3bee4:	mov	r1, r6
   3bee8:	mov	r2, #100	; 0x64
   3beec:	mov	r3, #0
   3bef0:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bef4:	mov	r7, r0
   3bef8:	ldr	r0, [pc, #456]	; 3c0c8 <flatcc_json_printer_uint64@@Base+0x560>
   3befc:	mov	r6, r1
   3bf00:	add	r0, pc, r0
   3bf04:	add	r0, r0, r2, lsl #1
   3bf08:	ldrh	r0, [r0]
   3bf0c:	strh	r0, [r4, #-2]!
   3bf10:	mov	r0, r7
   3bf14:	mov	r1, r6
   3bf18:	mov	r2, #100	; 0x64
   3bf1c:	mov	r3, #0
   3bf20:	mov	r5, #100	; 0x64
   3bf24:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bf28:	ldr	r2, [pc, #412]	; 3c0cc <flatcc_json_printer_uint64@@Base+0x564>
   3bf2c:	mov	r6, r1
   3bf30:	mls	r1, r0, r5, r7
   3bf34:	mov	r7, r0
   3bf38:	add	r2, pc, r2
   3bf3c:	add	r1, r2, r1, lsl #1
   3bf40:	ldrh	r1, [r1]
   3bf44:	strh	r1, [r4, #-2]!
   3bf48:	mov	r0, r7
   3bf4c:	mov	r1, r6
   3bf50:	mov	r2, #100	; 0x64
   3bf54:	mov	r3, #0
   3bf58:	mov	r5, #100	; 0x64
   3bf5c:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bf60:	ldr	r2, [pc, #360]	; 3c0d0 <flatcc_json_printer_uint64@@Base+0x568>
   3bf64:	mov	r6, r1
   3bf68:	mls	r1, r0, r5, r7
   3bf6c:	mov	r7, r0
   3bf70:	add	r2, pc, r2
   3bf74:	add	r1, r2, r1, lsl #1
   3bf78:	ldrh	r1, [r1]
   3bf7c:	strh	r1, [r4, #-2]!
   3bf80:	mov	r0, r7
   3bf84:	mov	r1, r6
   3bf88:	mov	r2, #100	; 0x64
   3bf8c:	mov	r3, #0
   3bf90:	mov	r5, #100	; 0x64
   3bf94:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bf98:	ldr	r2, [pc, #308]	; 3c0d4 <flatcc_json_printer_uint64@@Base+0x56c>
   3bf9c:	mov	r6, r1
   3bfa0:	mls	r1, r0, r5, r7
   3bfa4:	mov	r7, r0
   3bfa8:	add	r2, pc, r2
   3bfac:	add	r1, r2, r1, lsl #1
   3bfb0:	ldrh	r1, [r1]
   3bfb4:	strh	r1, [r4, #-2]!
   3bfb8:	mov	r0, r7
   3bfbc:	mov	r1, r6
   3bfc0:	mov	r2, #100	; 0x64
   3bfc4:	mov	r3, #0
   3bfc8:	mov	r9, #100	; 0x64
   3bfcc:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bfd0:	mov	r2, #10
   3bfd4:	mov	r3, #0
   3bfd8:	mov	r5, r0
   3bfdc:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3bfe0:	orr	r0, r2, #48	; 0x30
   3bfe4:	mov	r2, #1000	; 0x3e8
   3bfe8:	mov	r3, #0
   3bfec:	strb	r0, [r4, #-3]!
   3bff0:	mls	r0, r5, r9, r7
   3bff4:	ldr	r1, [pc, #220]	; 3c0d8 <flatcc_json_printer_uint64@@Base+0x570>
   3bff8:	add	r1, pc, r1
   3bffc:	add	r0, r1, r0, lsl #1
   3c000:	mov	r1, r6
   3c004:	ldrh	r0, [r0]
   3c008:	strh	r0, [r4, #1]
   3c00c:	mov	r0, r7
   3c010:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3c014:	mov	r7, r0
   3c018:	mov	r6, r1
   3c01c:	mov	r0, r7
   3c020:	mov	r1, r6
   3c024:	mov	r2, #100	; 0x64
   3c028:	mov	r3, #0
   3c02c:	mov	r5, #100	; 0x64
   3c030:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3c034:	mls	r2, r0, r5, r7
   3c038:	ldr	r5, [pc, #180]	; 3c0f4 <flatcc_json_printer_uint64@@Base+0x58c>
   3c03c:	mov	r3, #0
   3c040:	add	r5, pc, r5
   3c044:	add	r2, r5, r2, lsl #1
   3c048:	ldrh	r2, [r2]
   3c04c:	strh	r2, [r4, #-2]
   3c050:	mov	r2, #100	; 0x64
   3c054:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3c058:	add	r0, r5, r2, lsl #1
   3c05c:	mov	r1, r6
   3c060:	movw	r2, #10000	; 0x2710
   3c064:	mov	r3, #0
   3c068:	ldrh	r0, [r0]
   3c06c:	strh	r0, [r4, #-4]
   3c070:	mov	r0, r7
   3c074:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3c078:	mov	r2, #100	; 0x64
   3c07c:	mov	r3, #0
   3c080:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3c084:	add	r0, r5, r2, lsl #1
   3c088:	movw	r2, #16960	; 0x4240
   3c08c:	mov	r1, r6
   3c090:	mov	r3, #0
   3c094:	ldrh	r0, [r0]
   3c098:	movt	r2, #15
   3c09c:	strh	r0, [r4, #-6]
   3c0a0:	mov	r0, r7
   3c0a4:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3c0a8:	mov	r2, #100	; 0x64
   3c0ac:	mov	r3, #0
   3c0b0:	bl	47518 <flatcc_json_printer_clear@@Base+0x7a4>
   3c0b4:	add	r0, r5, r2, lsl #1
   3c0b8:	ldrh	r0, [r0]
   3c0bc:	strh	r0, [r4, #-8]
   3c0c0:	mov	r0, r8
   3c0c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c0c8:	andeq	r1, r1, pc, lsr lr
   3c0cc:	andeq	r1, r1, r7, lsl #28
   3c0d0:	andeq	r1, r1, pc, asr #27
   3c0d4:	muleq	r1, r7, sp
   3c0d8:	andeq	r1, r1, r7, asr #26
   3c0dc:	andeq	r1, r1, r7, asr #31
   3c0e0:	andeq	r1, r1, pc, lsl #31
   3c0e4:	andeq	r1, r1, r7, asr pc
   3c0e8:	andeq	r1, r1, pc, lsl pc
   3c0ec:	andeq	r1, r1, r7, ror #29
   3c0f0:	andeq	r1, r1, pc, lsr #29
   3c0f4:	strdeq	r1, [r1], -pc	; <UNPREDICTABLE>

0003c0f8 <flatcc_json_printer_int8@@Base>:
   3c0f8:	push	{r4, sl, fp, lr}
   3c0fc:	add	fp, sp, #8
   3c100:	ubfx	ip, r1, #7, #1
   3c104:	ldr	r4, [r0, #20]
   3c108:	cmn	r1, #1
   3c10c:	movle	r2, #45	; 0x2d
   3c110:	rsble	r1, r1, #0
   3c114:	strble	r2, [r4], #1
   3c118:	uxtb	r2, r1
   3c11c:	cmp	r2, #100	; 0x64
   3c120:	bcc	3c16c <flatcc_json_printer_int8@@Base+0x74>
   3c124:	mov	r1, #0
   3c128:	strb	r1, [r4, #3]
   3c12c:	movw	r1, #34079	; 0x851f
   3c130:	movt	r1, #20971	; 0x51eb
   3c134:	umull	r1, lr, r2, r1
   3c138:	mov	r1, #48	; 0x30
   3c13c:	orr	r1, r1, lr, lsr #5
   3c140:	lsr	lr, lr, #5
   3c144:	strb	r1, [r4]
   3c148:	mov	r1, #100	; 0x64
   3c14c:	mls	r1, lr, r1, r2
   3c150:	ldr	r2, [pc, #128]	; 3c1d8 <flatcc_json_printer_int8@@Base+0xe0>
   3c154:	add	r2, pc, r2
   3c158:	add	r1, r2, r1, lsl #1
   3c15c:	ldrh	r1, [r1]
   3c160:	strh	r1, [r4, #1]
   3c164:	mov	r1, #3
   3c168:	b	3c1c4 <flatcc_json_printer_int8@@Base+0xcc>
   3c16c:	cmp	r2, #10
   3c170:	bcc	3c1b0 <flatcc_json_printer_int8@@Base+0xb8>
   3c174:	mov	r1, #0
   3c178:	strb	r1, [r4, #2]
   3c17c:	movw	r1, #34079	; 0x851f
   3c180:	movt	r1, #20971	; 0x51eb
   3c184:	umull	r1, r3, r2, r1
   3c188:	lsr	r1, r3, #5
   3c18c:	mov	r3, #100	; 0x64
   3c190:	mls	r1, r1, r3, r2
   3c194:	ldr	r2, [pc, #64]	; 3c1dc <flatcc_json_printer_int8@@Base+0xe4>
   3c198:	add	r2, pc, r2
   3c19c:	add	r1, r2, r1, lsl #1
   3c1a0:	ldrh	r1, [r1]
   3c1a4:	strh	r1, [r4]
   3c1a8:	mov	r1, #2
   3c1ac:	b	3c1c4 <flatcc_json_printer_int8@@Base+0xcc>
   3c1b0:	mov	r2, #0
   3c1b4:	add	r1, r1, #48	; 0x30
   3c1b8:	strb	r2, [r4, #1]
   3c1bc:	strb	r1, [r4]
   3c1c0:	mov	r1, #1
   3c1c4:	ldr	r2, [r0, #20]
   3c1c8:	add	r1, r1, ip
   3c1cc:	add	r1, r2, r1
   3c1d0:	str	r1, [r0, #20]
   3c1d4:	pop	{r4, sl, fp, pc}
   3c1d8:	andeq	r1, r1, fp, ror #23
   3c1dc:	andeq	r1, r1, r7, lsr #23

0003c1e0 <flatcc_json_printer_int16@@Base>:
   3c1e0:	push	{r4, r5, fp, lr}
   3c1e4:	add	fp, sp, #8
   3c1e8:	ubfx	r5, r1, #15, #1
   3c1ec:	ldr	r2, [r0, #20]
   3c1f0:	cmn	r1, #1
   3c1f4:	mov	r4, r0
   3c1f8:	movle	r0, #45	; 0x2d
   3c1fc:	rsble	r1, r1, #0
   3c200:	strble	r0, [r2], #1
   3c204:	uxth	r0, r1
   3c208:	mov	r1, r2
   3c20c:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3c210:	ldr	r1, [r4, #20]
   3c214:	add	r0, r0, r5
   3c218:	add	r0, r1, r0
   3c21c:	str	r0, [r4, #20]
   3c220:	pop	{r4, r5, fp, pc}

0003c224 <flatcc_json_printer_int32@@Base>:
   3c224:	push	{r4, r5, fp, lr}
   3c228:	add	fp, sp, #8
   3c22c:	mov	r2, r1
   3c230:	lsr	r5, r1, #31
   3c234:	ldr	r1, [r0, #20]
   3c238:	mov	r4, r0
   3c23c:	cmn	r2, #1
   3c240:	movle	r0, #45	; 0x2d
   3c244:	rsble	r2, r2, #0
   3c248:	strble	r0, [r1], #1
   3c24c:	mov	r0, r2
   3c250:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3c254:	ldr	r1, [r4, #20]
   3c258:	add	r0, r0, r5
   3c25c:	add	r0, r1, r0
   3c260:	str	r0, [r4, #20]
   3c264:	pop	{r4, r5, fp, pc}

0003c268 <flatcc_json_printer_int64@@Base>:
   3c268:	push	{r4, r5, fp, lr}
   3c26c:	add	fp, sp, #8
   3c270:	mov	r1, r3
   3c274:	mov	r3, r2
   3c278:	ldr	r2, [r0, #20]
   3c27c:	mov	r4, r0
   3c280:	lsr	r5, r1, #31
   3c284:	cmn	r1, #1
   3c288:	bgt	3c29c <flatcc_json_printer_int64@@Base+0x34>
   3c28c:	mov	r0, #45	; 0x2d
   3c290:	rsbs	r3, r3, #0
   3c294:	strb	r0, [r2], #1
   3c298:	rsc	r1, r1, #0
   3c29c:	mov	r0, r3
   3c2a0:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3c2a4:	ldr	r1, [r4, #20]
   3c2a8:	add	r0, r0, r5
   3c2ac:	add	r0, r1, r0
   3c2b0:	str	r0, [r4, #20]
   3c2b4:	pop	{r4, r5, fp, pc}

0003c2b8 <flatcc_json_printer_float@@Base>:
   3c2b8:	push	{r4, sl, fp, lr}
   3c2bc:	add	fp, sp, #8
   3c2c0:	mov	r4, r0
   3c2c4:	ldr	r0, [r0, #20]
   3c2c8:	vcvt.f64.f32	d0, s0
   3c2cc:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   3c2d0:	ldr	r1, [r4, #20]
   3c2d4:	add	r0, r1, r0
   3c2d8:	str	r0, [r4, #20]
   3c2dc:	pop	{r4, sl, fp, pc}

0003c2e0 <flatcc_json_printer_double@@Base>:
   3c2e0:	push	{r4, sl, fp, lr}
   3c2e4:	add	fp, sp, #8
   3c2e8:	mov	r4, r0
   3c2ec:	ldr	r0, [r0, #20]
   3c2f0:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   3c2f4:	ldr	r1, [r4, #20]
   3c2f8:	add	r0, r1, r0
   3c2fc:	str	r0, [r4, #20]
   3c300:	pop	{r4, sl, fp, pc}

0003c304 <flatcc_json_printer_enum@@Base>:
   3c304:	push	{r4, r5, r6, r7, fp, lr}
   3c308:	add	fp, sp, #16
   3c30c:	mov	r4, r0
   3c310:	ldr	r0, [r0, #20]
   3c314:	mov	r6, r1
   3c318:	mov	r1, #34	; 0x22
   3c31c:	mov	r5, r2
   3c320:	strb	r1, [r0]
   3c324:	ldrb	r2, [r4, #26]
   3c328:	ldr	r0, [r4, #20]
   3c32c:	ldr	r1, [r4, #16]
   3c330:	cmp	r2, #0
   3c334:	addeq	r0, r0, #1
   3c338:	add	r2, r0, r5
   3c33c:	str	r0, [r4, #20]
   3c340:	cmp	r2, r1
   3c344:	bcc	3c3b8 <flatcc_json_printer_enum@@Base+0xb4>
   3c348:	cmp	r0, r1
   3c34c:	bcc	3c368 <flatcc_json_printer_enum@@Base+0x64>
   3c350:	ldr	r2, [r4, #44]	; 0x2c
   3c354:	mov	r0, r4
   3c358:	mov	r1, #0
   3c35c:	blx	r2
   3c360:	ldr	r1, [r4, #16]
   3c364:	ldr	r0, [r4, #20]
   3c368:	sub	r7, r1, r0
   3c36c:	cmp	r7, r5
   3c370:	bcs	3c3b8 <flatcc_json_printer_enum@@Base+0xb4>
   3c374:	mov	r1, r6
   3c378:	mov	r2, r7
   3c37c:	bl	14e58 <memcpy@plt>
   3c380:	ldr	r0, [r4, #20]
   3c384:	ldr	r2, [r4, #44]	; 0x2c
   3c388:	mov	r1, #0
   3c38c:	add	r0, r0, r7
   3c390:	str	r0, [r4, #20]
   3c394:	mov	r0, r4
   3c398:	blx	r2
   3c39c:	ldr	r1, [r4, #16]
   3c3a0:	ldr	r0, [r4, #20]
   3c3a4:	sub	r5, r5, r7
   3c3a8:	add	r6, r6, r7
   3c3ac:	sub	r7, r1, r0
   3c3b0:	cmp	r5, r7
   3c3b4:	bhi	3c374 <flatcc_json_printer_enum@@Base+0x70>
   3c3b8:	mov	r1, r6
   3c3bc:	mov	r2, r5
   3c3c0:	bl	14e58 <memcpy@plt>
   3c3c4:	ldr	r0, [r4, #20]
   3c3c8:	add	r1, r0, r5
   3c3cc:	str	r1, [r4, #20]
   3c3d0:	mov	r1, #34	; 0x22
   3c3d4:	strb	r1, [r0, r5]
   3c3d8:	ldrb	r0, [r4, #26]
   3c3dc:	ldr	r1, [r4, #20]
   3c3e0:	cmp	r0, #0
   3c3e4:	addeq	r1, r1, #1
   3c3e8:	str	r1, [r4, #20]
   3c3ec:	pop	{r4, r5, r6, r7, fp, pc}

0003c3f0 <flatcc_json_printer_delimit_enum_flags@@Base>:
   3c3f0:	ldrb	ip, [r0, #26]
   3c3f4:	ldr	r3, [r0, #20]
   3c3f8:	mov	r2, #34	; 0x22
   3c3fc:	cmp	r1, #0
   3c400:	movwne	r1, #1
   3c404:	strb	r2, [r3]
   3c408:	clz	r2, ip
   3c40c:	lsr	r2, r2, #5
   3c410:	orr	r1, r1, r2
   3c414:	ldr	r2, [r0, #20]
   3c418:	add	r1, r2, r1
   3c41c:	str	r1, [r0, #20]
   3c420:	bx	lr

0003c424 <flatcc_json_printer_enum_flag@@Base>:
   3c424:	push	{r4, r5, r6, r7, fp, lr}
   3c428:	add	fp, sp, #16
   3c42c:	mov	r5, r0
   3c430:	ldr	r0, [r0, #20]
   3c434:	mov	r6, r2
   3c438:	mov	r2, #32
   3c43c:	cmp	r1, #0
   3c440:	mov	r4, r3
   3c444:	strb	r2, [r0]
   3c448:	ldr	r0, [r5, #20]
   3c44c:	ldr	r2, [r5, #16]
   3c450:	addgt	r0, r0, #1
   3c454:	add	r1, r0, r3
   3c458:	str	r0, [r5, #20]
   3c45c:	cmp	r1, r2
   3c460:	bcc	3c4d4 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3c464:	cmp	r0, r2
   3c468:	bcc	3c484 <flatcc_json_printer_enum_flag@@Base+0x60>
   3c46c:	ldr	r2, [r5, #44]	; 0x2c
   3c470:	mov	r0, r5
   3c474:	mov	r1, #0
   3c478:	blx	r2
   3c47c:	ldr	r2, [r5, #16]
   3c480:	ldr	r0, [r5, #20]
   3c484:	sub	r7, r2, r0
   3c488:	cmp	r7, r4
   3c48c:	bcs	3c4d4 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3c490:	mov	r1, r6
   3c494:	mov	r2, r7
   3c498:	bl	14e58 <memcpy@plt>
   3c49c:	ldr	r0, [r5, #20]
   3c4a0:	ldr	r2, [r5, #44]	; 0x2c
   3c4a4:	mov	r1, #0
   3c4a8:	add	r0, r0, r7
   3c4ac:	str	r0, [r5, #20]
   3c4b0:	mov	r0, r5
   3c4b4:	blx	r2
   3c4b8:	ldr	r1, [r5, #16]
   3c4bc:	ldr	r0, [r5, #20]
   3c4c0:	sub	r4, r4, r7
   3c4c4:	add	r6, r6, r7
   3c4c8:	sub	r7, r1, r0
   3c4cc:	cmp	r4, r7
   3c4d0:	bhi	3c490 <flatcc_json_printer_enum_flag@@Base+0x6c>
   3c4d4:	mov	r1, r6
   3c4d8:	mov	r2, r4
   3c4dc:	bl	14e58 <memcpy@plt>
   3c4e0:	ldr	r0, [r5, #20]
   3c4e4:	add	r0, r0, r4
   3c4e8:	str	r0, [r5, #20]
   3c4ec:	pop	{r4, r5, r6, r7, fp, pc}

0003c4f0 <flatcc_json_printer_string_field@@Base>:
   3c4f0:	push	{r4, r5, fp, lr}
   3c4f4:	add	fp, sp, #8
   3c4f8:	mov	r4, r0
   3c4fc:	mov	r0, #4
   3c500:	add	r0, r0, r2, lsl #1
   3c504:	ldr	r2, [r1, #8]
   3c508:	cmp	r0, r2
   3c50c:	popge	{r4, r5, fp, pc}
   3c510:	ldr	r2, [r1, #4]
   3c514:	add	r0, r2, r0
   3c518:	ldrh	r0, [r0]
   3c51c:	cmp	r0, #0
   3c520:	ldrne	r2, [r1]
   3c524:	addsne	r5, r2, r0
   3c528:	bne	3c530 <flatcc_json_printer_string_field@@Base+0x40>
   3c52c:	pop	{r4, r5, fp, pc}
   3c530:	ldr	ip, [r1, #16]
   3c534:	ldr	r2, [fp, #8]
   3c538:	add	r0, ip, #1
   3c53c:	cmp	ip, #0
   3c540:	str	r0, [r1, #16]
   3c544:	ldrne	r0, [r4, #20]
   3c548:	addne	r1, r0, #1
   3c54c:	strne	r1, [r4, #20]
   3c550:	movne	r1, #44	; 0x2c
   3c554:	strbne	r1, [r0]
   3c558:	mov	r0, r4
   3c55c:	mov	r1, r3
   3c560:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3c564:	ldr	r0, [r5]
   3c568:	ldr	r2, [r5, r0]!
   3c56c:	mov	r0, r4
   3c570:	add	r1, r5, #4
   3c574:	pop	{r4, r5, fp, lr}
   3c578:	b	3b0dc <flatcc_json_printer_string@@Base+0x4>
   3c57c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c580:	add	fp, sp, #24
   3c584:	mov	r4, r0
   3c588:	mov	r6, r1
   3c58c:	ldr	r0, [r0, #20]
   3c590:	mov	r8, r2
   3c594:	ldrb	r1, [r4, #25]
   3c598:	cmp	r1, #0
   3c59c:	beq	3c65c <flatcc_json_printer_string_field@@Base+0x16c>
   3c5a0:	add	r1, r0, #1
   3c5a4:	mov	r9, r4
   3c5a8:	str	r1, [r4, #20]
   3c5ac:	mov	r1, #10
   3c5b0:	strb	r1, [r0]
   3c5b4:	ldr	r1, [r9, #16]!
   3c5b8:	ldr	r0, [r4, #20]
   3c5bc:	ldrb	r2, [r9, #9]
   3c5c0:	ldr	r3, [r9, #16]
   3c5c4:	mla	r5, r3, r2, r0
   3c5c8:	mul	r7, r3, r2
   3c5cc:	cmp	r5, r1
   3c5d0:	bls	3c640 <flatcc_json_printer_string_field@@Base+0x150>
   3c5d4:	cmp	r0, r1
   3c5d8:	bcc	3c5f4 <flatcc_json_printer_string_field@@Base+0x104>
   3c5dc:	ldr	r2, [r4, #44]	; 0x2c
   3c5e0:	mov	r0, r4
   3c5e4:	mov	r1, #0
   3c5e8:	blx	r2
   3c5ec:	ldr	r1, [r4, #16]
   3c5f0:	ldr	r0, [r4, #20]
   3c5f4:	sub	r5, r1, r0
   3c5f8:	cmp	r5, r7
   3c5fc:	bcs	3c640 <flatcc_json_printer_string_field@@Base+0x150>
   3c600:	mov	r1, #32
   3c604:	mov	r2, r5
   3c608:	bl	14ee8 <memset@plt>
   3c60c:	ldr	r0, [r4, #20]
   3c610:	ldr	r2, [r4, #44]	; 0x2c
   3c614:	mov	r1, #0
   3c618:	add	r0, r0, r5
   3c61c:	str	r0, [r4, #20]
   3c620:	mov	r0, r4
   3c624:	blx	r2
   3c628:	ldr	r1, [r4, #16]
   3c62c:	ldr	r0, [r4, #20]
   3c630:	sub	r7, r7, r5
   3c634:	sub	r5, r1, r0
   3c638:	cmp	r7, r5
   3c63c:	bhi	3c600 <flatcc_json_printer_string_field@@Base+0x110>
   3c640:	mov	r1, #32
   3c644:	mov	r2, r7
   3c648:	bl	14ee8 <memset@plt>
   3c64c:	ldr	r0, [r4, #20]
   3c650:	add	r0, r0, r7
   3c654:	str	r0, [r4, #20]
   3c658:	b	3c680 <flatcc_json_printer_string_field@@Base+0x190>
   3c65c:	mov	r9, r4
   3c660:	ldr	r1, [r9, #16]!
   3c664:	cmp	r0, r1
   3c668:	bcc	3c680 <flatcc_json_printer_string_field@@Base+0x190>
   3c66c:	ldr	r2, [r4, #44]	; 0x2c
   3c670:	mov	r0, r4
   3c674:	mov	r1, #0
   3c678:	blx	r2
   3c67c:	ldr	r0, [r4, #20]
   3c680:	mov	r1, #34	; 0x22
   3c684:	strb	r1, [r0]
   3c688:	ldrb	r2, [r4, #26]
   3c68c:	ldr	r0, [r4, #20]
   3c690:	ldr	r1, [r4, #16]
   3c694:	cmp	r2, #0
   3c698:	addeq	r0, r0, #1
   3c69c:	add	r2, r0, r8
   3c6a0:	str	r0, [r4, #20]
   3c6a4:	cmp	r2, r1
   3c6a8:	bcc	3c71c <flatcc_json_printer_string_field@@Base+0x22c>
   3c6ac:	cmp	r0, r1
   3c6b0:	bcc	3c6cc <flatcc_json_printer_string_field@@Base+0x1dc>
   3c6b4:	ldr	r2, [r4, #44]	; 0x2c
   3c6b8:	mov	r0, r4
   3c6bc:	mov	r1, #0
   3c6c0:	blx	r2
   3c6c4:	ldr	r0, [r4, #20]
   3c6c8:	ldr	r1, [r9]
   3c6cc:	sub	r7, r1, r0
   3c6d0:	cmp	r7, r8
   3c6d4:	bcs	3c71c <flatcc_json_printer_string_field@@Base+0x22c>
   3c6d8:	mov	r1, r6
   3c6dc:	mov	r2, r7
   3c6e0:	bl	14e58 <memcpy@plt>
   3c6e4:	ldr	r0, [r4, #20]
   3c6e8:	ldr	r2, [r4, #44]	; 0x2c
   3c6ec:	mov	r1, #0
   3c6f0:	add	r0, r0, r7
   3c6f4:	str	r0, [r4, #20]
   3c6f8:	mov	r0, r4
   3c6fc:	blx	r2
   3c700:	ldr	r0, [r4, #20]
   3c704:	ldr	r1, [r9]
   3c708:	sub	r8, r8, r7
   3c70c:	add	r6, r6, r7
   3c710:	sub	r7, r1, r0
   3c714:	cmp	r8, r7
   3c718:	bhi	3c6d8 <flatcc_json_printer_string_field@@Base+0x1e8>
   3c71c:	mov	r1, r6
   3c720:	mov	r2, r8
   3c724:	bl	14e58 <memcpy@plt>
   3c728:	ldr	r0, [r4, #20]
   3c72c:	add	r1, r0, r8
   3c730:	str	r1, [r4, #20]
   3c734:	mov	r1, #34	; 0x22
   3c738:	strb	r1, [r0, r8]
   3c73c:	ldrb	r0, [r4, #26]
   3c740:	ldr	r1, [r4, #20]
   3c744:	cmp	r0, #0
   3c748:	addeq	r1, r1, #1
   3c74c:	add	r0, r1, #1
   3c750:	str	r0, [r4, #20]
   3c754:	mov	r0, #58	; 0x3a
   3c758:	strb	r0, [r1]
   3c75c:	mov	r1, #32
   3c760:	ldr	r0, [r4, #20]
   3c764:	strb	r1, [r0]
   3c768:	ldrb	r0, [r4, #25]
   3c76c:	ldr	r1, [r4, #20]
   3c770:	cmp	r0, #0
   3c774:	addne	r1, r1, #1
   3c778:	str	r1, [r4, #20]
   3c77c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003c780 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3c780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c784:	add	fp, sp, #28
   3c788:	sub	sp, sp, #12
   3c78c:	mov	r4, r0
   3c790:	mov	r0, #4
   3c794:	add	r0, r0, r2, lsl #1
   3c798:	ldr	r2, [r1, #8]
   3c79c:	cmp	r0, r2
   3c7a0:	bge	3c93c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   3c7a4:	ldr	r2, [r1, #4]
   3c7a8:	add	r0, r2, r0
   3c7ac:	ldrh	r0, [r0]
   3c7b0:	cmp	r0, #0
   3c7b4:	beq	3c93c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   3c7b8:	ldr	r5, [fp, #12]
   3c7bc:	ldr	r2, [r1]
   3c7c0:	cmp	r5, #0
   3c7c4:	add	r6, r2, r0
   3c7c8:	movwne	r5, #1
   3c7cc:	cmp	r6, #0
   3c7d0:	beq	3c93c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   3c7d4:	ldr	r0, [r1, #16]
   3c7d8:	ldr	r2, [fp, #8]
   3c7dc:	add	r7, r0, #1
   3c7e0:	cmp	r0, #0
   3c7e4:	str	r7, [r1, #16]
   3c7e8:	ldrne	r0, [r4, #20]
   3c7ec:	addne	r1, r0, #1
   3c7f0:	strne	r1, [r4, #20]
   3c7f4:	movne	r1, #44	; 0x2c
   3c7f8:	strbne	r1, [r0]
   3c7fc:	mov	r0, r4
   3c800:	mov	r1, r3
   3c804:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3c808:	ldr	r0, [r6]
   3c80c:	ldr	r0, [r6, r0]!
   3c810:	str	r0, [sp, #8]
   3c814:	ldr	r0, [r4, #20]
   3c818:	add	r1, r0, #1
   3c81c:	str	r1, [r4, #20]
   3c820:	mov	r1, #34	; 0x22
   3c824:	strb	r1, [r0]
   3c828:	movw	r1, #43691	; 0xaaab
   3c82c:	ldr	r0, [sp, #8]
   3c830:	movt	r1, #43690	; 0xaaaa
   3c834:	lsl	r0, r0, #2
   3c838:	umull	r0, r1, r0, r1
   3c83c:	mov	r0, #3
   3c840:	add	r0, r0, r1, lsr #1
   3c844:	ldr	r1, [r4, #16]
   3c848:	bic	r7, r0, #3
   3c84c:	ldr	r0, [r4, #20]
   3c850:	add	r2, r0, r7
   3c854:	cmp	r2, r1
   3c858:	bcc	3c878 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   3c85c:	ldr	r2, [r4, #44]	; 0x2c
   3c860:	mov	r0, r4
   3c864:	mov	r1, #0
   3c868:	blx	r2
   3c86c:	ldr	r0, [r4, #20]
   3c870:	ldr	r1, [r4, #16]
   3c874:	add	r2, r0, r7
   3c878:	add	r6, r6, #4
   3c87c:	cmp	r2, r1
   3c880:	bls	3c914 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   3c884:	add	r9, sp, #4
   3c888:	mov	sl, #3
   3c88c:	sub	r1, r1, r0
   3c890:	bic	r7, r1, #3
   3c894:	add	r1, r7, r7, lsl #1
   3c898:	cmp	r1, #0
   3c89c:	beq	3c944 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c4>
   3c8a0:	lsr	r8, r1, #2
   3c8a4:	mov	r1, r6
   3c8a8:	mov	r2, r9
   3c8ac:	mov	r3, r5
   3c8b0:	str	r8, [sp, #4]
   3c8b4:	bl	46db4 <flatcc_json_printer_clear@@Base+0x40>
   3c8b8:	ldr	r0, [r4, #20]
   3c8bc:	mov	r1, #0
   3c8c0:	add	r0, r0, r7
   3c8c4:	str	r0, [r4, #20]
   3c8c8:	ldr	r0, [sp, #8]
   3c8cc:	sub	r0, r0, r8
   3c8d0:	str	r0, [sp, #8]
   3c8d4:	mov	r0, r4
   3c8d8:	ldr	r2, [r4, #44]	; 0x2c
   3c8dc:	blx	r2
   3c8e0:	ldr	r0, [sp, #8]
   3c8e4:	movw	r1, #43691	; 0xaaab
   3c8e8:	add	r6, r6, r8
   3c8ec:	movt	r1, #43690	; 0xaaaa
   3c8f0:	lsl	r0, r0, #2
   3c8f4:	umull	r0, r1, r0, r1
   3c8f8:	add	r0, sl, r1, lsr #1
   3c8fc:	ldr	r1, [r4, #16]
   3c900:	bic	r7, r0, #3
   3c904:	ldr	r0, [r4, #20]
   3c908:	add	r2, r0, r7
   3c90c:	cmp	r2, r1
   3c910:	bhi	3c88c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x10c>
   3c914:	orr	r3, r5, #128	; 0x80
   3c918:	add	r2, sp, #8
   3c91c:	mov	r1, r6
   3c920:	bl	46db4 <flatcc_json_printer_clear@@Base+0x40>
   3c924:	ldr	r0, [r4, #20]
   3c928:	add	r1, r0, r7
   3c92c:	add	r1, r1, #1
   3c930:	str	r1, [r4, #20]
   3c934:	mov	r1, #34	; 0x22
   3c938:	strb	r1, [r0, r7]
   3c93c:	sub	sp, fp, #28
   3c940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c944:	ldr	r0, [pc, #24]	; 3c964 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3c948:	ldr	r1, [pc, #24]	; 3c968 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e8>
   3c94c:	ldr	r3, [pc, #24]	; 3c96c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   3c950:	movw	r2, #277	; 0x115
   3c954:	add	r0, pc, r0
   3c958:	add	r1, pc, r1
   3c95c:	add	r3, pc, r3
   3c960:	bl	14f3c <__assert_fail@plt>
   3c964:			; <UNDEFINED> instruction: 0x000114b4
   3c968:	andeq	r1, r1, r4, ror #1
   3c96c:			; <UNDEFINED> instruction: 0x000114b2

0003c970 <flatcc_json_printer_uint8_field@@Base>:
   3c970:	push	{r4, r5, r6, sl, fp, lr}
   3c974:	add	fp, sp, #16
   3c978:	mov	r6, r0
   3c97c:	mov	r0, #4
   3c980:	ldr	r5, [r1, #8]
   3c984:	add	r2, r0, r2, lsl #1
   3c988:	ldr	r0, [fp, #12]
   3c98c:	cmp	r2, r5
   3c990:	bge	3c9b0 <flatcc_json_printer_uint8_field@@Base+0x40>
   3c994:	ldr	r5, [r1, #4]
   3c998:	add	r2, r5, r2
   3c99c:	ldrh	r2, [r2]
   3c9a0:	cmp	r2, #0
   3c9a4:	ldrne	r5, [r1]
   3c9a8:	addsne	r2, r5, r2
   3c9ac:	bne	3caa8 <flatcc_json_printer_uint8_field@@Base+0x138>
   3c9b0:	ldrb	r2, [r6, #29]
   3c9b4:	mov	r5, r0
   3c9b8:	cmp	r2, #0
   3c9bc:	popeq	{r4, r5, r6, sl, fp, pc}
   3c9c0:	ldr	r0, [r1, #16]
   3c9c4:	ldr	r2, [fp, #8]
   3c9c8:	add	r4, r0, #1
   3c9cc:	cmp	r0, #0
   3c9d0:	str	r4, [r1, #16]
   3c9d4:	ldrne	r0, [r6, #20]
   3c9d8:	addne	r1, r0, #1
   3c9dc:	strne	r1, [r6, #20]
   3c9e0:	movne	r1, #44	; 0x2c
   3c9e4:	strbne	r1, [r0]
   3c9e8:	mov	r0, r6
   3c9ec:	mov	r1, r3
   3c9f0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3c9f4:	ldr	r0, [r6, #20]
   3c9f8:	mov	r1, #0
   3c9fc:	cmp	r5, #100	; 0x64
   3ca00:	bcc	3ca48 <flatcc_json_printer_uint8_field@@Base+0xd8>
   3ca04:	strb	r1, [r0, #3]
   3ca08:	movw	r1, #34079	; 0x851f
   3ca0c:	movt	r1, #20971	; 0x51eb
   3ca10:	umull	r1, r2, r5, r1
   3ca14:	mov	r1, #48	; 0x30
   3ca18:	orr	r1, r1, r2, lsr #5
   3ca1c:	strb	r1, [r0]
   3ca20:	lsr	r1, r2, #5
   3ca24:	mov	r2, #100	; 0x64
   3ca28:	mls	r1, r1, r2, r5
   3ca2c:	ldr	r2, [pc, #148]	; 3cac8 <flatcc_json_printer_uint8_field@@Base+0x158>
   3ca30:	add	r2, pc, r2
   3ca34:	add	r1, r2, r1, lsl #1
   3ca38:	ldrh	r1, [r1]
   3ca3c:	strh	r1, [r0, #1]
   3ca40:	mov	r0, #3
   3ca44:	b	3ca98 <flatcc_json_printer_uint8_field@@Base+0x128>
   3ca48:	cmp	r5, #10
   3ca4c:	bcc	3ca88 <flatcc_json_printer_uint8_field@@Base+0x118>
   3ca50:	strb	r1, [r0, #2]
   3ca54:	movw	r1, #34079	; 0x851f
   3ca58:	movt	r1, #20971	; 0x51eb
   3ca5c:	umull	r1, r2, r5, r1
   3ca60:	lsr	r1, r2, #5
   3ca64:	mov	r2, #100	; 0x64
   3ca68:	mls	r1, r1, r2, r5
   3ca6c:	ldr	r2, [pc, #88]	; 3cacc <flatcc_json_printer_uint8_field@@Base+0x15c>
   3ca70:	add	r2, pc, r2
   3ca74:	add	r1, r2, r1, lsl #1
   3ca78:	ldrh	r1, [r1]
   3ca7c:	strh	r1, [r0]
   3ca80:	mov	r0, #2
   3ca84:	b	3ca98 <flatcc_json_printer_uint8_field@@Base+0x128>
   3ca88:	strb	r1, [r0, #1]
   3ca8c:	add	r1, r5, #48	; 0x30
   3ca90:	strb	r1, [r0]
   3ca94:	mov	r0, #1
   3ca98:	ldr	r1, [r6, #20]
   3ca9c:	add	r0, r1, r0
   3caa0:	str	r0, [r6, #20]
   3caa4:	pop	{r4, r5, r6, sl, fp, pc}
   3caa8:	ldrb	r5, [r2]
   3caac:	cmp	r5, r0
   3cab0:	bne	3c9c0 <flatcc_json_printer_uint8_field@@Base+0x50>
   3cab4:	ldrb	r2, [r6, #28]
   3cab8:	mov	r5, r0
   3cabc:	cmp	r2, #0
   3cac0:	bne	3caa4 <flatcc_json_printer_uint8_field@@Base+0x134>
   3cac4:	b	3c9c0 <flatcc_json_printer_uint8_field@@Base+0x50>
   3cac8:	andeq	r1, r1, pc, lsl #6
   3cacc:	andeq	r1, r1, pc, asr #5

0003cad0 <flatcc_json_printer_uint16_field@@Base>:
   3cad0:	push	{r4, r5, r6, sl, fp, lr}
   3cad4:	add	fp, sp, #16
   3cad8:	mov	r4, r0
   3cadc:	mov	r0, #4
   3cae0:	ldr	r5, [r1, #8]
   3cae4:	add	r2, r0, r2, lsl #1
   3cae8:	ldr	r0, [fp, #12]
   3caec:	cmp	r2, r5
   3caf0:	bge	3cb10 <flatcc_json_printer_uint16_field@@Base+0x40>
   3caf4:	ldr	r5, [r1, #4]
   3caf8:	add	r2, r5, r2
   3cafc:	ldrh	r2, [r2]
   3cb00:	cmp	r2, #0
   3cb04:	ldrne	r5, [r1]
   3cb08:	addsne	r2, r5, r2
   3cb0c:	bne	3cb70 <flatcc_json_printer_uint16_field@@Base+0xa0>
   3cb10:	ldrb	r2, [r4, #29]
   3cb14:	mov	r6, r0
   3cb18:	cmp	r2, #0
   3cb1c:	popeq	{r4, r5, r6, sl, fp, pc}
   3cb20:	ldr	r0, [r1, #16]
   3cb24:	ldr	r2, [fp, #8]
   3cb28:	add	r5, r0, #1
   3cb2c:	cmp	r0, #0
   3cb30:	str	r5, [r1, #16]
   3cb34:	ldrne	r0, [r4, #20]
   3cb38:	addne	r1, r0, #1
   3cb3c:	strne	r1, [r4, #20]
   3cb40:	movne	r1, #44	; 0x2c
   3cb44:	strbne	r1, [r0]
   3cb48:	mov	r0, r4
   3cb4c:	mov	r1, r3
   3cb50:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3cb54:	ldr	r1, [r4, #20]
   3cb58:	mov	r0, r6
   3cb5c:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3cb60:	ldr	r1, [r4, #20]
   3cb64:	add	r0, r1, r0
   3cb68:	str	r0, [r4, #20]
   3cb6c:	pop	{r4, r5, r6, sl, fp, pc}
   3cb70:	ldrh	r6, [r2]
   3cb74:	cmp	r6, r0
   3cb78:	bne	3cb20 <flatcc_json_printer_uint16_field@@Base+0x50>
   3cb7c:	ldrb	r2, [r4, #28]
   3cb80:	mov	r6, r0
   3cb84:	cmp	r2, #0
   3cb88:	bne	3cb6c <flatcc_json_printer_uint16_field@@Base+0x9c>
   3cb8c:	b	3cb20 <flatcc_json_printer_uint16_field@@Base+0x50>

0003cb90 <flatcc_json_printer_uint32_field@@Base>:
   3cb90:	push	{r4, r5, r6, sl, fp, lr}
   3cb94:	add	fp, sp, #16
   3cb98:	mov	r4, r0
   3cb9c:	mov	r0, #4
   3cba0:	ldr	r5, [r1, #8]
   3cba4:	add	r2, r0, r2, lsl #1
   3cba8:	ldr	r0, [fp, #12]
   3cbac:	cmp	r2, r5
   3cbb0:	bge	3cbd0 <flatcc_json_printer_uint32_field@@Base+0x40>
   3cbb4:	ldr	r5, [r1, #4]
   3cbb8:	add	r2, r5, r2
   3cbbc:	ldrh	r2, [r2]
   3cbc0:	cmp	r2, #0
   3cbc4:	ldrne	r5, [r1]
   3cbc8:	addsne	r2, r5, r2
   3cbcc:	bne	3cc30 <flatcc_json_printer_uint32_field@@Base+0xa0>
   3cbd0:	ldrb	r2, [r4, #29]
   3cbd4:	mov	r6, r0
   3cbd8:	cmp	r2, #0
   3cbdc:	popeq	{r4, r5, r6, sl, fp, pc}
   3cbe0:	ldr	r0, [r1, #16]
   3cbe4:	ldr	r2, [fp, #8]
   3cbe8:	add	r5, r0, #1
   3cbec:	cmp	r0, #0
   3cbf0:	str	r5, [r1, #16]
   3cbf4:	ldrne	r0, [r4, #20]
   3cbf8:	addne	r1, r0, #1
   3cbfc:	strne	r1, [r4, #20]
   3cc00:	movne	r1, #44	; 0x2c
   3cc04:	strbne	r1, [r0]
   3cc08:	mov	r0, r4
   3cc0c:	mov	r1, r3
   3cc10:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3cc14:	ldr	r1, [r4, #20]
   3cc18:	mov	r0, r6
   3cc1c:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3cc20:	ldr	r1, [r4, #20]
   3cc24:	add	r0, r1, r0
   3cc28:	str	r0, [r4, #20]
   3cc2c:	pop	{r4, r5, r6, sl, fp, pc}
   3cc30:	ldr	r6, [r2]
   3cc34:	cmp	r6, r0
   3cc38:	bne	3cbe0 <flatcc_json_printer_uint32_field@@Base+0x50>
   3cc3c:	ldrb	r2, [r4, #28]
   3cc40:	mov	r6, r0
   3cc44:	cmp	r2, #0
   3cc48:	bne	3cc2c <flatcc_json_printer_uint32_field@@Base+0x9c>
   3cc4c:	b	3cbe0 <flatcc_json_printer_uint32_field@@Base+0x50>

0003cc50 <flatcc_json_printer_uint64_field@@Base>:
   3cc50:	push	{r4, r6, r7, r8, fp, lr}
   3cc54:	add	fp, sp, #16
   3cc58:	mov	r4, r0
   3cc5c:	mov	r0, #4
   3cc60:	ldr	r6, [r1, #8]
   3cc64:	ldr	lr, [fp, #20]
   3cc68:	add	r7, r0, r2, lsl #1
   3cc6c:	ldr	r2, [fp, #16]
   3cc70:	cmp	r7, r6
   3cc74:	bge	3cc94 <flatcc_json_printer_uint64_field@@Base+0x44>
   3cc78:	ldr	r6, [r1, #4]
   3cc7c:	add	r7, r6, r7
   3cc80:	ldrh	r7, [r7]
   3cc84:	cmp	r7, #0
   3cc88:	ldrne	r6, [r1]
   3cc8c:	addsne	r7, r6, r7
   3cc90:	bne	3ccfc <flatcc_json_printer_uint64_field@@Base+0xac>
   3cc94:	ldrb	r0, [r4, #29]
   3cc98:	mov	r8, r2
   3cc9c:	mov	r7, lr
   3cca0:	cmp	r0, #0
   3cca4:	popeq	{r4, r6, r7, r8, fp, pc}
   3cca8:	ldr	r0, [r1, #16]
   3ccac:	ldr	r2, [fp, #8]
   3ccb0:	add	r6, r0, #1
   3ccb4:	cmp	r0, #0
   3ccb8:	str	r6, [r1, #16]
   3ccbc:	ldrne	r0, [r4, #20]
   3ccc0:	addne	r1, r0, #1
   3ccc4:	strne	r1, [r4, #20]
   3ccc8:	movne	r1, #44	; 0x2c
   3cccc:	strbne	r1, [r0]
   3ccd0:	mov	r0, r4
   3ccd4:	mov	r1, r3
   3ccd8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3ccdc:	ldr	r2, [r4, #20]
   3cce0:	mov	r0, r8
   3cce4:	mov	r1, r7
   3cce8:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3ccec:	ldr	r1, [r4, #20]
   3ccf0:	add	r0, r1, r0
   3ccf4:	str	r0, [r4, #20]
   3ccf8:	pop	{r4, r6, r7, r8, fp, pc}
   3ccfc:	ldr	r8, [r7]
   3cd00:	ldr	r7, [r7, #4]
   3cd04:	eor	ip, r7, lr
   3cd08:	eor	r0, r8, r2
   3cd0c:	orrs	r0, r0, ip
   3cd10:	bne	3cca8 <flatcc_json_printer_uint64_field@@Base+0x58>
   3cd14:	ldrb	r0, [r4, #28]
   3cd18:	mov	r8, r2
   3cd1c:	mov	r7, lr
   3cd20:	cmp	r0, #0
   3cd24:	bne	3ccf8 <flatcc_json_printer_uint64_field@@Base+0xa8>
   3cd28:	b	3cca8 <flatcc_json_printer_uint64_field@@Base+0x58>

0003cd2c <flatcc_json_printer_int8_field@@Base>:
   3cd2c:	push	{r4, r5, r6, sl, fp, lr}
   3cd30:	add	fp, sp, #16
   3cd34:	mov	r6, r0
   3cd38:	mov	r0, #4
   3cd3c:	ldr	r5, [r1, #8]
   3cd40:	add	r2, r0, r2, lsl #1
   3cd44:	ldr	r0, [fp, #12]
   3cd48:	cmp	r2, r5
   3cd4c:	bge	3cd6c <flatcc_json_printer_int8_field@@Base+0x40>
   3cd50:	ldr	r5, [r1, #4]
   3cd54:	add	r2, r5, r2
   3cd58:	ldrh	r2, [r2]
   3cd5c:	cmp	r2, #0
   3cd60:	ldrne	r5, [r1]
   3cd64:	addsne	r2, r5, r2
   3cd68:	bne	3ce8c <flatcc_json_printer_int8_field@@Base+0x160>
   3cd6c:	ldrb	r2, [r6, #29]
   3cd70:	mov	r5, r0
   3cd74:	cmp	r2, #0
   3cd78:	popeq	{r4, r5, r6, sl, fp, pc}
   3cd7c:	ldr	r0, [r1, #16]
   3cd80:	ldr	r2, [fp, #8]
   3cd84:	add	r4, r0, #1
   3cd88:	cmp	r0, #0
   3cd8c:	str	r4, [r1, #16]
   3cd90:	ldrne	r0, [r6, #20]
   3cd94:	addne	r1, r0, #1
   3cd98:	strne	r1, [r6, #20]
   3cd9c:	movne	r1, #44	; 0x2c
   3cda0:	strbne	r1, [r0]
   3cda4:	mov	r0, r6
   3cda8:	mov	r1, r3
   3cdac:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3cdb0:	ubfx	r0, r5, #7, #1
   3cdb4:	ldr	r1, [r6, #20]
   3cdb8:	sxtb	r2, r5
   3cdbc:	cmn	r2, #1
   3cdc0:	movle	r2, #45	; 0x2d
   3cdc4:	rsble	r5, r5, #0
   3cdc8:	strble	r2, [r1], #1
   3cdcc:	uxtb	r2, r5
   3cdd0:	cmp	r2, #100	; 0x64
   3cdd4:	bcc	3ce20 <flatcc_json_printer_int8_field@@Base+0xf4>
   3cdd8:	mov	r3, #0
   3cddc:	strb	r3, [r1, #3]
   3cde0:	movw	r3, #34079	; 0x851f
   3cde4:	movt	r3, #20971	; 0x51eb
   3cde8:	umull	r3, r5, r2, r3
   3cdec:	mov	r3, #48	; 0x30
   3cdf0:	orr	r3, r3, r5, lsr #5
   3cdf4:	strb	r3, [r1]
   3cdf8:	lsr	r3, r5, #5
   3cdfc:	mov	r5, #100	; 0x64
   3ce00:	mls	r2, r3, r5, r2
   3ce04:	ldr	r3, [pc, #164]	; 3ceb0 <flatcc_json_printer_int8_field@@Base+0x184>
   3ce08:	add	r3, pc, r3
   3ce0c:	add	r2, r3, r2, lsl #1
   3ce10:	ldrh	r2, [r2]
   3ce14:	strh	r2, [r1, #1]
   3ce18:	mov	r1, #3
   3ce1c:	b	3ce78 <flatcc_json_printer_int8_field@@Base+0x14c>
   3ce20:	cmp	r2, #10
   3ce24:	bcc	3ce64 <flatcc_json_printer_int8_field@@Base+0x138>
   3ce28:	mov	r3, #0
   3ce2c:	strb	r3, [r1, #2]
   3ce30:	movw	r3, #34079	; 0x851f
   3ce34:	movt	r3, #20971	; 0x51eb
   3ce38:	umull	r3, r5, r2, r3
   3ce3c:	lsr	r3, r5, #5
   3ce40:	mov	r5, #100	; 0x64
   3ce44:	mls	r2, r3, r5, r2
   3ce48:	ldr	r3, [pc, #100]	; 3ceb4 <flatcc_json_printer_int8_field@@Base+0x188>
   3ce4c:	add	r3, pc, r3
   3ce50:	add	r2, r3, r2, lsl #1
   3ce54:	ldrh	r2, [r2]
   3ce58:	strh	r2, [r1]
   3ce5c:	mov	r1, #2
   3ce60:	b	3ce78 <flatcc_json_printer_int8_field@@Base+0x14c>
   3ce64:	mov	r2, #0
   3ce68:	strb	r2, [r1, #1]
   3ce6c:	add	r2, r5, #48	; 0x30
   3ce70:	strb	r2, [r1]
   3ce74:	mov	r1, #1
   3ce78:	add	r0, r1, r0
   3ce7c:	ldr	r1, [r6, #20]
   3ce80:	add	r0, r1, r0
   3ce84:	str	r0, [r6, #20]
   3ce88:	pop	{r4, r5, r6, sl, fp, pc}
   3ce8c:	ldrb	r5, [r2]
   3ce90:	uxtb	r2, r0
   3ce94:	cmp	r5, r2
   3ce98:	bne	3cd7c <flatcc_json_printer_int8_field@@Base+0x50>
   3ce9c:	ldrb	r2, [r6, #28]
   3cea0:	mov	r5, r0
   3cea4:	cmp	r2, #0
   3cea8:	bne	3ce88 <flatcc_json_printer_int8_field@@Base+0x15c>
   3ceac:	b	3cd7c <flatcc_json_printer_int8_field@@Base+0x50>
   3ceb0:	andeq	r0, r1, r7, lsr pc
   3ceb4:	strdeq	r0, [r1], -r3

0003ceb8 <flatcc_json_printer_int16_field@@Base>:
   3ceb8:	push	{r4, r5, r6, sl, fp, lr}
   3cebc:	add	fp, sp, #16
   3cec0:	mov	r4, r0
   3cec4:	mov	r0, #4
   3cec8:	ldr	r6, [r1, #8]
   3cecc:	add	r2, r0, r2, lsl #1
   3ced0:	ldr	r0, [fp, #12]
   3ced4:	cmp	r2, r6
   3ced8:	bge	3cef8 <flatcc_json_printer_int16_field@@Base+0x40>
   3cedc:	ldr	r6, [r1, #4]
   3cee0:	add	r2, r6, r2
   3cee4:	ldrh	r2, [r2]
   3cee8:	cmp	r2, #0
   3ceec:	ldrne	r6, [r1]
   3cef0:	addsne	r2, r6, r2
   3cef4:	bne	3cf74 <flatcc_json_printer_int16_field@@Base+0xbc>
   3cef8:	ldrb	r2, [r4, #29]
   3cefc:	mov	r5, r0
   3cf00:	cmp	r2, #0
   3cf04:	popeq	{r4, r5, r6, sl, fp, pc}
   3cf08:	ldr	r0, [r1, #16]
   3cf0c:	ldr	r2, [fp, #8]
   3cf10:	add	r6, r0, #1
   3cf14:	cmp	r0, #0
   3cf18:	str	r6, [r1, #16]
   3cf1c:	ldrne	r0, [r4, #20]
   3cf20:	addne	r1, r0, #1
   3cf24:	strne	r1, [r4, #20]
   3cf28:	movne	r1, #44	; 0x2c
   3cf2c:	strbne	r1, [r0]
   3cf30:	mov	r0, r4
   3cf34:	mov	r1, r3
   3cf38:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3cf3c:	ubfx	r6, r5, #15, #1
   3cf40:	ldr	r1, [r4, #20]
   3cf44:	sxth	r0, r5
   3cf48:	cmn	r0, #1
   3cf4c:	movle	r0, #45	; 0x2d
   3cf50:	rsble	r5, r5, #0
   3cf54:	strble	r0, [r1], #1
   3cf58:	uxth	r0, r5
   3cf5c:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3cf60:	ldr	r1, [r4, #20]
   3cf64:	add	r0, r0, r6
   3cf68:	add	r0, r1, r0
   3cf6c:	str	r0, [r4, #20]
   3cf70:	pop	{r4, r5, r6, sl, fp, pc}
   3cf74:	ldrh	r5, [r2]
   3cf78:	uxth	r2, r0
   3cf7c:	cmp	r5, r2
   3cf80:	bne	3cf08 <flatcc_json_printer_int16_field@@Base+0x50>
   3cf84:	ldrb	r2, [r4, #28]
   3cf88:	mov	r5, r0
   3cf8c:	cmp	r2, #0
   3cf90:	bne	3cf70 <flatcc_json_printer_int16_field@@Base+0xb8>
   3cf94:	b	3cf08 <flatcc_json_printer_int16_field@@Base+0x50>

0003cf98 <flatcc_json_printer_int32_field@@Base>:
   3cf98:	push	{r4, r5, r6, sl, fp, lr}
   3cf9c:	add	fp, sp, #16
   3cfa0:	mov	r4, r0
   3cfa4:	mov	r0, #4
   3cfa8:	ldr	r6, [r1, #8]
   3cfac:	add	r2, r0, r2, lsl #1
   3cfb0:	ldr	r0, [fp, #12]
   3cfb4:	cmp	r2, r6
   3cfb8:	bge	3cfd8 <flatcc_json_printer_int32_field@@Base+0x40>
   3cfbc:	ldr	r6, [r1, #4]
   3cfc0:	add	r2, r6, r2
   3cfc4:	ldrh	r2, [r2]
   3cfc8:	cmp	r2, #0
   3cfcc:	ldrne	r6, [r1]
   3cfd0:	addsne	r2, r6, r2
   3cfd4:	bne	3d050 <flatcc_json_printer_int32_field@@Base+0xb8>
   3cfd8:	ldrb	r2, [r4, #29]
   3cfdc:	mov	r5, r0
   3cfe0:	cmp	r2, #0
   3cfe4:	popeq	{r4, r5, r6, sl, fp, pc}
   3cfe8:	ldr	r0, [r1, #16]
   3cfec:	ldr	r2, [fp, #8]
   3cff0:	add	r6, r0, #1
   3cff4:	cmp	r0, #0
   3cff8:	str	r6, [r1, #16]
   3cffc:	ldrne	r0, [r4, #20]
   3d000:	addne	r1, r0, #1
   3d004:	strne	r1, [r4, #20]
   3d008:	movne	r1, #44	; 0x2c
   3d00c:	strbne	r1, [r0]
   3d010:	mov	r0, r4
   3d014:	mov	r1, r3
   3d018:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d01c:	ldr	r1, [r4, #20]
   3d020:	cmn	r5, #1
   3d024:	lsr	r6, r5, #31
   3d028:	movle	r0, #45	; 0x2d
   3d02c:	rsble	r5, r5, #0
   3d030:	strble	r0, [r1], #1
   3d034:	mov	r0, r5
   3d038:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3d03c:	ldr	r1, [r4, #20]
   3d040:	add	r0, r0, r6
   3d044:	add	r0, r1, r0
   3d048:	str	r0, [r4, #20]
   3d04c:	pop	{r4, r5, r6, sl, fp, pc}
   3d050:	ldr	r5, [r2]
   3d054:	cmp	r5, r0
   3d058:	bne	3cfe8 <flatcc_json_printer_int32_field@@Base+0x50>
   3d05c:	ldrb	r2, [r4, #28]
   3d060:	mov	r5, r0
   3d064:	cmp	r2, #0
   3d068:	bne	3d04c <flatcc_json_printer_int32_field@@Base+0xb4>
   3d06c:	b	3cfe8 <flatcc_json_printer_int32_field@@Base+0x50>

0003d070 <flatcc_json_printer_int64_field@@Base>:
   3d070:	push	{r4, r5, r6, r7, fp, lr}
   3d074:	add	fp, sp, #16
   3d078:	mov	r4, r0
   3d07c:	mov	r0, #4
   3d080:	ldr	r6, [r1, #8]
   3d084:	add	r7, r0, r2, lsl #1
   3d088:	ldr	r0, [fp, #20]
   3d08c:	ldr	r2, [fp, #16]
   3d090:	cmp	r7, r6
   3d094:	bge	3d0b4 <flatcc_json_printer_int64_field@@Base+0x44>
   3d098:	ldr	r6, [r1, #4]
   3d09c:	add	r7, r6, r7
   3d0a0:	ldrh	r7, [r7]
   3d0a4:	cmp	r7, #0
   3d0a8:	ldrne	r6, [r1]
   3d0ac:	addsne	r7, r6, r7
   3d0b0:	bne	3d13c <flatcc_json_printer_int64_field@@Base+0xcc>
   3d0b4:	ldrb	r7, [r4, #29]
   3d0b8:	mov	r6, r2
   3d0bc:	cmp	r7, #0
   3d0c0:	mov	r7, r0
   3d0c4:	popeq	{r4, r5, r6, r7, fp, pc}
   3d0c8:	ldr	r0, [r1, #16]
   3d0cc:	ldr	r2, [fp, #8]
   3d0d0:	add	r5, r0, #1
   3d0d4:	cmp	r0, #0
   3d0d8:	str	r5, [r1, #16]
   3d0dc:	ldrne	r0, [r4, #20]
   3d0e0:	addne	r1, r0, #1
   3d0e4:	strne	r1, [r4, #20]
   3d0e8:	movne	r1, #44	; 0x2c
   3d0ec:	strbne	r1, [r0]
   3d0f0:	mov	r0, r4
   3d0f4:	mov	r1, r3
   3d0f8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d0fc:	ldr	r2, [r4, #20]
   3d100:	lsr	r5, r7, #31
   3d104:	cmn	r7, #1
   3d108:	bgt	3d11c <flatcc_json_printer_int64_field@@Base+0xac>
   3d10c:	mov	r0, #45	; 0x2d
   3d110:	rsbs	r6, r6, #0
   3d114:	strb	r0, [r2], #1
   3d118:	rsc	r7, r7, #0
   3d11c:	mov	r0, r6
   3d120:	mov	r1, r7
   3d124:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3d128:	ldr	r1, [r4, #20]
   3d12c:	add	r0, r0, r5
   3d130:	add	r0, r1, r0
   3d134:	str	r0, [r4, #20]
   3d138:	pop	{r4, r5, r6, r7, fp, pc}
   3d13c:	ldrd	r6, [r7]
   3d140:	eor	ip, r7, r0
   3d144:	eor	r5, r6, r2
   3d148:	orrs	r5, r5, ip
   3d14c:	bne	3d0c8 <flatcc_json_printer_int64_field@@Base+0x58>
   3d150:	ldrb	r7, [r4, #28]
   3d154:	mov	r6, r2
   3d158:	cmp	r7, #0
   3d15c:	mov	r7, r0
   3d160:	bne	3d138 <flatcc_json_printer_int64_field@@Base+0xc8>
   3d164:	b	3d0c8 <flatcc_json_printer_int64_field@@Base+0x58>

0003d168 <flatcc_json_printer_bool_field@@Base>:
   3d168:	push	{r4, r5, r6, sl, fp, lr}
   3d16c:	add	fp, sp, #16
   3d170:	mov	r4, r0
   3d174:	mov	r0, #4
   3d178:	ldr	r5, [r1, #8]
   3d17c:	add	r2, r0, r2, lsl #1
   3d180:	ldr	r0, [fp, #12]
   3d184:	cmp	r2, r5
   3d188:	bge	3d1a8 <flatcc_json_printer_bool_field@@Base+0x40>
   3d18c:	ldr	r5, [r1, #4]
   3d190:	add	r2, r5, r2
   3d194:	ldrh	r2, [r2]
   3d198:	cmp	r2, #0
   3d19c:	ldrne	r5, [r1]
   3d1a0:	addsne	r2, r5, r2
   3d1a4:	bne	3d23c <flatcc_json_printer_bool_field@@Base+0xd4>
   3d1a8:	ldrb	r2, [r4, #29]
   3d1ac:	mov	r6, r0
   3d1b0:	cmp	r2, #0
   3d1b4:	popeq	{r4, r5, r6, sl, fp, pc}
   3d1b8:	ldr	r0, [r1, #16]
   3d1bc:	ldr	r2, [fp, #8]
   3d1c0:	add	r5, r0, #1
   3d1c4:	cmp	r0, #0
   3d1c8:	str	r5, [r1, #16]
   3d1cc:	ldrne	r0, [r4, #20]
   3d1d0:	addne	r1, r0, #1
   3d1d4:	strne	r1, [r4, #20]
   3d1d8:	movne	r1, #44	; 0x2c
   3d1dc:	strbne	r1, [r0]
   3d1e0:	mov	r0, r4
   3d1e4:	mov	r1, r3
   3d1e8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d1ec:	ldr	r0, [r4, #20]
   3d1f0:	cmp	r6, #0
   3d1f4:	beq	3d214 <flatcc_json_printer_bool_field@@Base+0xac>
   3d1f8:	mov	r1, #0
   3d1fc:	strb	r1, [r0, #4]
   3d200:	movw	r1, #29300	; 0x7274
   3d204:	movt	r1, #25973	; 0x6575
   3d208:	str	r1, [r0]
   3d20c:	mov	r0, #4
   3d210:	b	3d22c <flatcc_json_printer_bool_field@@Base+0xc4>
   3d214:	mov	r1, #101	; 0x65
   3d218:	strh	r1, [r0, #4]
   3d21c:	movw	r1, #24934	; 0x6166
   3d220:	movt	r1, #29548	; 0x736c
   3d224:	str	r1, [r0]
   3d228:	mov	r0, #5
   3d22c:	ldr	r1, [r4, #20]
   3d230:	add	r0, r1, r0
   3d234:	str	r0, [r4, #20]
   3d238:	pop	{r4, r5, r6, sl, fp, pc}
   3d23c:	ldrb	r6, [r2]
   3d240:	cmp	r6, r0
   3d244:	bne	3d1b8 <flatcc_json_printer_bool_field@@Base+0x50>
   3d248:	ldrb	r2, [r4, #28]
   3d24c:	mov	r6, r0
   3d250:	cmp	r2, #0
   3d254:	bne	3d238 <flatcc_json_printer_bool_field@@Base+0xd0>
   3d258:	b	3d1b8 <flatcc_json_printer_bool_field@@Base+0x50>

0003d25c <flatcc_json_printer_float_field@@Base>:
   3d25c:	push	{r4, r5, fp, lr}
   3d260:	add	fp, sp, #8
   3d264:	vpush	{d8}
   3d268:	mov	r5, r0
   3d26c:	mov	r0, #4
   3d270:	vmov.f32	s16, s0
   3d274:	add	r0, r0, r2, lsl #1
   3d278:	ldr	r2, [r1, #8]
   3d27c:	cmp	r0, r2
   3d280:	bge	3d2a0 <flatcc_json_printer_float_field@@Base+0x44>
   3d284:	ldr	r2, [r1, #4]
   3d288:	add	r0, r2, r0
   3d28c:	ldrh	r0, [r0]
   3d290:	cmp	r0, #0
   3d294:	ldrne	r2, [r1]
   3d298:	addsne	r0, r2, r0
   3d29c:	bne	3d300 <flatcc_json_printer_float_field@@Base+0xa4>
   3d2a0:	ldrb	r0, [r5, #29]
   3d2a4:	cmp	r0, #0
   3d2a8:	beq	3d2f8 <flatcc_json_printer_float_field@@Base+0x9c>
   3d2ac:	ldr	r0, [r1, #16]
   3d2b0:	ldr	r2, [fp, #8]
   3d2b4:	add	r4, r0, #1
   3d2b8:	cmp	r0, #0
   3d2bc:	str	r4, [r1, #16]
   3d2c0:	ldrne	r0, [r5, #20]
   3d2c4:	addne	r1, r0, #1
   3d2c8:	strne	r1, [r5, #20]
   3d2cc:	movne	r1, #44	; 0x2c
   3d2d0:	strbne	r1, [r0]
   3d2d4:	mov	r0, r5
   3d2d8:	mov	r1, r3
   3d2dc:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d2e0:	ldr	r0, [r5, #20]
   3d2e4:	vcvt.f64.f32	d0, s16
   3d2e8:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d2ec:	ldr	r1, [r5, #20]
   3d2f0:	add	r0, r1, r0
   3d2f4:	str	r0, [r5, #20]
   3d2f8:	vpop	{d8}
   3d2fc:	pop	{r4, r5, fp, pc}
   3d300:	vldr	s0, [r0]
   3d304:	vcmp.f32	s0, s16
   3d308:	vmrs	APSR_nzcv, fpscr
   3d30c:	bne	3d324 <flatcc_json_printer_float_field@@Base+0xc8>
   3d310:	ldrb	r0, [r5, #28]
   3d314:	vmov.f32	s16, s0
   3d318:	cmp	r0, #0
   3d31c:	bne	3d2f8 <flatcc_json_printer_float_field@@Base+0x9c>
   3d320:	b	3d2ac <flatcc_json_printer_float_field@@Base+0x50>
   3d324:	vmov.f32	s16, s0
   3d328:	b	3d2ac <flatcc_json_printer_float_field@@Base+0x50>

0003d32c <flatcc_json_printer_double_field@@Base>:
   3d32c:	push	{r4, r5, fp, lr}
   3d330:	add	fp, sp, #8
   3d334:	vpush	{d8}
   3d338:	mov	r5, r0
   3d33c:	mov	r0, #4
   3d340:	vmov.f64	d8, d0
   3d344:	add	r0, r0, r2, lsl #1
   3d348:	ldr	r2, [r1, #8]
   3d34c:	cmp	r0, r2
   3d350:	bge	3d370 <flatcc_json_printer_double_field@@Base+0x44>
   3d354:	ldr	r2, [r1, #4]
   3d358:	add	r0, r2, r0
   3d35c:	ldrh	r0, [r0]
   3d360:	cmp	r0, #0
   3d364:	ldrne	r2, [r1]
   3d368:	addsne	r0, r2, r0
   3d36c:	bne	3d3d0 <flatcc_json_printer_double_field@@Base+0xa4>
   3d370:	ldrb	r0, [r5, #29]
   3d374:	cmp	r0, #0
   3d378:	beq	3d3c8 <flatcc_json_printer_double_field@@Base+0x9c>
   3d37c:	ldr	r0, [r1, #16]
   3d380:	ldr	r2, [fp, #8]
   3d384:	add	r4, r0, #1
   3d388:	cmp	r0, #0
   3d38c:	str	r4, [r1, #16]
   3d390:	ldrne	r0, [r5, #20]
   3d394:	addne	r1, r0, #1
   3d398:	strne	r1, [r5, #20]
   3d39c:	movne	r1, #44	; 0x2c
   3d3a0:	strbne	r1, [r0]
   3d3a4:	mov	r0, r5
   3d3a8:	mov	r1, r3
   3d3ac:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d3b0:	ldr	r0, [r5, #20]
   3d3b4:	vmov.f64	d0, d8
   3d3b8:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d3bc:	ldr	r1, [r5, #20]
   3d3c0:	add	r0, r1, r0
   3d3c4:	str	r0, [r5, #20]
   3d3c8:	vpop	{d8}
   3d3cc:	pop	{r4, r5, fp, pc}
   3d3d0:	vldr	d16, [r0]
   3d3d4:	vcmp.f64	d16, d8
   3d3d8:	vmrs	APSR_nzcv, fpscr
   3d3dc:	bne	3d3f4 <flatcc_json_printer_double_field@@Base+0xc8>
   3d3e0:	ldrb	r0, [r5, #28]
   3d3e4:	vmov.f64	d8, d16
   3d3e8:	cmp	r0, #0
   3d3ec:	bne	3d3c8 <flatcc_json_printer_double_field@@Base+0x9c>
   3d3f0:	b	3d37c <flatcc_json_printer_double_field@@Base+0x50>
   3d3f4:	vmov.f64	d8, d16
   3d3f8:	b	3d37c <flatcc_json_printer_double_field@@Base+0x50>

0003d3fc <flatcc_json_printer_uint8_enum_field@@Base>:
   3d3fc:	push	{r4, r5, r6, r7, fp, lr}
   3d400:	add	fp, sp, #16
   3d404:	mov	r6, r0
   3d408:	mov	r0, #4
   3d40c:	ldr	r4, [r1, #8]
   3d410:	ldr	ip, [fp, #16]
   3d414:	add	r5, r0, r2, lsl #1
   3d418:	ldr	r0, [fp, #12]
   3d41c:	ldr	r2, [fp, #8]
   3d420:	cmp	r5, r4
   3d424:	bge	3d444 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3d428:	ldr	r4, [r1, #4]
   3d42c:	add	r5, r4, r5
   3d430:	ldrh	r5, [r5]
   3d434:	cmp	r5, #0
   3d438:	ldrne	r4, [r1]
   3d43c:	addsne	r5, r4, r5
   3d440:	bne	3d55c <flatcc_json_printer_uint8_enum_field@@Base+0x160>
   3d444:	ldrb	r5, [r6, #29]
   3d448:	cmp	r5, #0
   3d44c:	mov	r5, r0
   3d450:	popeq	{r4, r5, r6, r7, fp, pc}
   3d454:	ldr	r0, [r1, #16]
   3d458:	mov	r7, ip
   3d45c:	add	r4, r0, #1
   3d460:	cmp	r0, #0
   3d464:	str	r4, [r1, #16]
   3d468:	ldrne	r0, [r6, #20]
   3d46c:	addne	r1, r0, #1
   3d470:	strne	r1, [r6, #20]
   3d474:	movne	r1, #44	; 0x2c
   3d478:	strbne	r1, [r0]
   3d47c:	mov	r0, r6
   3d480:	mov	r1, r3
   3d484:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d488:	ldrb	r0, [r6, #27]
   3d48c:	cmp	r0, #0
   3d490:	beq	3d4e8 <flatcc_json_printer_uint8_enum_field@@Base+0xec>
   3d494:	ldr	r0, [r6, #20]
   3d498:	mov	r1, #0
   3d49c:	cmp	r5, #100	; 0x64
   3d4a0:	bcc	3d4fc <flatcc_json_printer_uint8_enum_field@@Base+0x100>
   3d4a4:	strb	r1, [r0, #3]
   3d4a8:	movw	r1, #34079	; 0x851f
   3d4ac:	movt	r1, #20971	; 0x51eb
   3d4b0:	umull	r1, r2, r5, r1
   3d4b4:	mov	r1, #48	; 0x30
   3d4b8:	orr	r1, r1, r2, lsr #5
   3d4bc:	strb	r1, [r0]
   3d4c0:	lsr	r1, r2, #5
   3d4c4:	mov	r2, #100	; 0x64
   3d4c8:	mls	r1, r1, r2, r5
   3d4cc:	ldr	r2, [pc, #168]	; 3d57c <flatcc_json_printer_uint8_enum_field@@Base+0x180>
   3d4d0:	add	r2, pc, r2
   3d4d4:	add	r1, r2, r1, lsl #1
   3d4d8:	ldrh	r1, [r1]
   3d4dc:	strh	r1, [r0, #1]
   3d4e0:	mov	r0, #3
   3d4e4:	b	3d54c <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3d4e8:	mov	r0, r6
   3d4ec:	mov	r1, r5
   3d4f0:	mov	r2, r7
   3d4f4:	pop	{r4, r5, r6, r7, fp, lr}
   3d4f8:	bx	r2
   3d4fc:	cmp	r5, #10
   3d500:	bcc	3d53c <flatcc_json_printer_uint8_enum_field@@Base+0x140>
   3d504:	strb	r1, [r0, #2]
   3d508:	movw	r1, #34079	; 0x851f
   3d50c:	movt	r1, #20971	; 0x51eb
   3d510:	umull	r1, r2, r5, r1
   3d514:	lsr	r1, r2, #5
   3d518:	mov	r2, #100	; 0x64
   3d51c:	mls	r1, r1, r2, r5
   3d520:	ldr	r2, [pc, #88]	; 3d580 <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   3d524:	add	r2, pc, r2
   3d528:	add	r1, r2, r1, lsl #1
   3d52c:	ldrh	r1, [r1]
   3d530:	strh	r1, [r0]
   3d534:	mov	r0, #2
   3d538:	b	3d54c <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3d53c:	strb	r1, [r0, #1]
   3d540:	add	r1, r5, #48	; 0x30
   3d544:	strb	r1, [r0]
   3d548:	mov	r0, #1
   3d54c:	ldr	r1, [r6, #20]
   3d550:	add	r0, r1, r0
   3d554:	str	r0, [r6, #20]
   3d558:	pop	{r4, r5, r6, r7, fp, pc}
   3d55c:	ldrb	r5, [r5]
   3d560:	cmp	r5, r0
   3d564:	bne	3d454 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3d568:	ldrb	r5, [r6, #28]
   3d56c:	cmp	r5, #0
   3d570:	mov	r5, r0
   3d574:	bne	3d558 <flatcc_json_printer_uint8_enum_field@@Base+0x15c>
   3d578:	b	3d454 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3d57c:	andeq	r0, r1, pc, ror #16
   3d580:	andeq	r0, r1, fp, lsl r8

0003d584 <flatcc_json_printer_uint16_enum_field@@Base>:
   3d584:	push	{r4, r5, r6, r7, fp, lr}
   3d588:	add	fp, sp, #16
   3d58c:	mov	r4, r0
   3d590:	mov	r0, #4
   3d594:	ldr	r7, [fp, #16]
   3d598:	ldr	ip, [fp, #12]
   3d59c:	add	r5, r0, r2, lsl #1
   3d5a0:	ldr	r0, [r1, #8]
   3d5a4:	ldr	r2, [fp, #8]
   3d5a8:	cmp	r5, r0
   3d5ac:	bge	3d5cc <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3d5b0:	ldr	r0, [r1, #4]
   3d5b4:	add	r0, r0, r5
   3d5b8:	ldrh	r5, [r0]
   3d5bc:	cmp	r5, #0
   3d5c0:	ldrne	r0, [r1]
   3d5c4:	addsne	r5, r0, r5
   3d5c8:	bne	3d648 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   3d5cc:	ldrb	r0, [r4, #29]
   3d5d0:	mov	r6, ip
   3d5d4:	cmp	r0, #0
   3d5d8:	popeq	{r4, r5, r6, r7, fp, pc}
   3d5dc:	ldr	r0, [r1, #16]
   3d5e0:	add	r5, r0, #1
   3d5e4:	cmp	r0, #0
   3d5e8:	str	r5, [r1, #16]
   3d5ec:	ldrne	r0, [r4, #20]
   3d5f0:	addne	r1, r0, #1
   3d5f4:	strne	r1, [r4, #20]
   3d5f8:	movne	r1, #44	; 0x2c
   3d5fc:	strbne	r1, [r0]
   3d600:	mov	r0, r4
   3d604:	mov	r1, r3
   3d608:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d60c:	ldrb	r0, [r4, #27]
   3d610:	cmp	r0, #0
   3d614:	beq	3d634 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3d618:	ldr	r1, [r4, #20]
   3d61c:	mov	r0, r6
   3d620:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3d624:	ldr	r1, [r4, #20]
   3d628:	add	r0, r1, r0
   3d62c:	str	r0, [r4, #20]
   3d630:	pop	{r4, r5, r6, r7, fp, pc}
   3d634:	mov	r0, r4
   3d638:	mov	r1, r6
   3d63c:	mov	r2, r7
   3d640:	pop	{r4, r5, r6, r7, fp, lr}
   3d644:	bx	r2
   3d648:	ldrh	r6, [r5]
   3d64c:	cmp	r6, ip
   3d650:	bne	3d5dc <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3d654:	ldrb	r0, [r4, #28]
   3d658:	mov	r6, ip
   3d65c:	cmp	r0, #0
   3d660:	bne	3d630 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   3d664:	b	3d5dc <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003d668 <flatcc_json_printer_uint32_enum_field@@Base>:
   3d668:	push	{r4, r5, r6, r7, fp, lr}
   3d66c:	add	fp, sp, #16
   3d670:	mov	r4, r0
   3d674:	mov	r0, #4
   3d678:	ldr	r7, [fp, #16]
   3d67c:	ldr	ip, [fp, #12]
   3d680:	add	r5, r0, r2, lsl #1
   3d684:	ldr	r0, [r1, #8]
   3d688:	ldr	r2, [fp, #8]
   3d68c:	cmp	r5, r0
   3d690:	bge	3d6b0 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3d694:	ldr	r0, [r1, #4]
   3d698:	add	r0, r0, r5
   3d69c:	ldrh	r5, [r0]
   3d6a0:	cmp	r5, #0
   3d6a4:	ldrne	r0, [r1]
   3d6a8:	addsne	r5, r0, r5
   3d6ac:	bne	3d72c <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   3d6b0:	ldrb	r0, [r4, #29]
   3d6b4:	mov	r6, ip
   3d6b8:	cmp	r0, #0
   3d6bc:	popeq	{r4, r5, r6, r7, fp, pc}
   3d6c0:	ldr	r0, [r1, #16]
   3d6c4:	add	r5, r0, #1
   3d6c8:	cmp	r0, #0
   3d6cc:	str	r5, [r1, #16]
   3d6d0:	ldrne	r0, [r4, #20]
   3d6d4:	addne	r1, r0, #1
   3d6d8:	strne	r1, [r4, #20]
   3d6dc:	movne	r1, #44	; 0x2c
   3d6e0:	strbne	r1, [r0]
   3d6e4:	mov	r0, r4
   3d6e8:	mov	r1, r3
   3d6ec:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d6f0:	ldrb	r0, [r4, #27]
   3d6f4:	cmp	r0, #0
   3d6f8:	beq	3d718 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3d6fc:	ldr	r1, [r4, #20]
   3d700:	mov	r0, r6
   3d704:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3d708:	ldr	r1, [r4, #20]
   3d70c:	add	r0, r1, r0
   3d710:	str	r0, [r4, #20]
   3d714:	pop	{r4, r5, r6, r7, fp, pc}
   3d718:	mov	r0, r4
   3d71c:	mov	r1, r6
   3d720:	mov	r2, r7
   3d724:	pop	{r4, r5, r6, r7, fp, lr}
   3d728:	bx	r2
   3d72c:	ldr	r6, [r5]
   3d730:	cmp	r6, ip
   3d734:	bne	3d6c0 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3d738:	ldrb	r0, [r4, #28]
   3d73c:	mov	r6, ip
   3d740:	cmp	r0, #0
   3d744:	bne	3d714 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   3d748:	b	3d6c0 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003d74c <flatcc_json_printer_uint64_enum_field@@Base>:
   3d74c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d750:	add	fp, sp, #24
   3d754:	mov	r4, r0
   3d758:	mov	r0, #4
   3d75c:	ldr	ip, [fp, #20]
   3d760:	ldr	r6, [fp, #16]
   3d764:	ldr	r5, [fp, #24]
   3d768:	add	r7, r0, r2, lsl #1
   3d76c:	ldr	r0, [r1, #8]
   3d770:	ldr	r2, [fp, #8]
   3d774:	cmp	r7, r0
   3d778:	bge	3d798 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3d77c:	ldr	r0, [r1, #4]
   3d780:	add	r0, r0, r7
   3d784:	ldrh	r7, [r0]
   3d788:	cmp	r7, #0
   3d78c:	ldrne	r0, [r1]
   3d790:	addsne	r7, r0, r7
   3d794:	bne	3d820 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   3d798:	ldrb	r0, [r4, #29]
   3d79c:	mov	r8, r6
   3d7a0:	mov	r7, ip
   3d7a4:	cmp	r0, #0
   3d7a8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d7ac:	ldr	r0, [r1, #16]
   3d7b0:	add	r6, r0, #1
   3d7b4:	cmp	r0, #0
   3d7b8:	str	r6, [r1, #16]
   3d7bc:	ldrne	r0, [r4, #20]
   3d7c0:	addne	r1, r0, #1
   3d7c4:	strne	r1, [r4, #20]
   3d7c8:	movne	r1, #44	; 0x2c
   3d7cc:	strbne	r1, [r0]
   3d7d0:	mov	r0, r4
   3d7d4:	mov	r1, r3
   3d7d8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d7dc:	ldrb	r0, [r4, #27]
   3d7e0:	cmp	r0, #0
   3d7e4:	beq	3d808 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3d7e8:	ldr	r2, [r4, #20]
   3d7ec:	mov	r0, r8
   3d7f0:	mov	r1, r7
   3d7f4:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3d7f8:	ldr	r1, [r4, #20]
   3d7fc:	add	r0, r1, r0
   3d800:	str	r0, [r4, #20]
   3d804:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d808:	mov	r0, r4
   3d80c:	mov	r2, r8
   3d810:	mov	r3, r7
   3d814:	mov	r1, r5
   3d818:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d81c:	bx	r1
   3d820:	ldr	r8, [r7]
   3d824:	ldr	r7, [r7, #4]
   3d828:	eor	lr, r7, ip
   3d82c:	eor	r0, r8, r6
   3d830:	orrs	r0, r0, lr
   3d834:	bne	3d7ac <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3d838:	ldrb	r0, [r4, #28]
   3d83c:	mov	r8, r6
   3d840:	mov	r7, ip
   3d844:	cmp	r0, #0
   3d848:	bne	3d804 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   3d84c:	b	3d7ac <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003d850 <flatcc_json_printer_int8_enum_field@@Base>:
   3d850:	push	{r4, r5, r6, r7, fp, lr}
   3d854:	add	fp, sp, #16
   3d858:	mov	r6, r0
   3d85c:	mov	r0, #4
   3d860:	ldr	r4, [r1, #8]
   3d864:	ldr	ip, [fp, #16]
   3d868:	add	r5, r0, r2, lsl #1
   3d86c:	ldr	r0, [fp, #12]
   3d870:	ldr	r2, [fp, #8]
   3d874:	cmp	r5, r4
   3d878:	bge	3d898 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3d87c:	ldr	r4, [r1, #4]
   3d880:	add	r5, r4, r5
   3d884:	ldrh	r5, [r5]
   3d888:	cmp	r5, #0
   3d88c:	ldrne	r4, [r1]
   3d890:	addsne	r5, r4, r5
   3d894:	bne	3d9d8 <flatcc_json_printer_int8_enum_field@@Base+0x188>
   3d898:	ldrb	r5, [r6, #29]
   3d89c:	cmp	r5, #0
   3d8a0:	mov	r5, r0
   3d8a4:	popeq	{r4, r5, r6, r7, fp, pc}
   3d8a8:	ldr	r0, [r1, #16]
   3d8ac:	mov	r7, ip
   3d8b0:	add	r4, r0, #1
   3d8b4:	cmp	r0, #0
   3d8b8:	str	r4, [r1, #16]
   3d8bc:	ldrne	r0, [r6, #20]
   3d8c0:	addne	r1, r0, #1
   3d8c4:	strne	r1, [r6, #20]
   3d8c8:	movne	r1, #44	; 0x2c
   3d8cc:	strbne	r1, [r0]
   3d8d0:	mov	r0, r6
   3d8d4:	mov	r1, r3
   3d8d8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3d8dc:	ldrb	r0, [r6, #27]
   3d8e0:	cmp	r0, #0
   3d8e4:	beq	3d958 <flatcc_json_printer_int8_enum_field@@Base+0x108>
   3d8e8:	ubfx	r0, r5, #7, #1
   3d8ec:	ldr	r1, [r6, #20]
   3d8f0:	sxtb	r2, r5
   3d8f4:	cmn	r2, #1
   3d8f8:	movle	r2, #45	; 0x2d
   3d8fc:	rsble	r5, r5, #0
   3d900:	strble	r2, [r1], #1
   3d904:	uxtb	r2, r5
   3d908:	cmp	r2, #100	; 0x64
   3d90c:	bcc	3d96c <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   3d910:	mov	r3, #0
   3d914:	strb	r3, [r1, #3]
   3d918:	movw	r3, #34079	; 0x851f
   3d91c:	movt	r3, #20971	; 0x51eb
   3d920:	umull	r3, r5, r2, r3
   3d924:	mov	r3, #48	; 0x30
   3d928:	orr	r3, r3, r5, lsr #5
   3d92c:	strb	r3, [r1]
   3d930:	lsr	r3, r5, #5
   3d934:	mov	r5, #100	; 0x64
   3d938:	mls	r2, r3, r5, r2
   3d93c:	ldr	r3, [pc, #184]	; 3d9fc <flatcc_json_printer_int8_enum_field@@Base+0x1ac>
   3d940:	add	r3, pc, r3
   3d944:	add	r2, r3, r2, lsl #1
   3d948:	ldrh	r2, [r2]
   3d94c:	strh	r2, [r1, #1]
   3d950:	mov	r1, #3
   3d954:	b	3d9c4 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3d958:	sxtb	r1, r5
   3d95c:	mov	r0, r6
   3d960:	mov	r2, r7
   3d964:	pop	{r4, r5, r6, r7, fp, lr}
   3d968:	bx	r2
   3d96c:	cmp	r2, #10
   3d970:	bcc	3d9b0 <flatcc_json_printer_int8_enum_field@@Base+0x160>
   3d974:	mov	r3, #0
   3d978:	strb	r3, [r1, #2]
   3d97c:	movw	r3, #34079	; 0x851f
   3d980:	movt	r3, #20971	; 0x51eb
   3d984:	umull	r3, r5, r2, r3
   3d988:	lsr	r3, r5, #5
   3d98c:	mov	r5, #100	; 0x64
   3d990:	mls	r2, r3, r5, r2
   3d994:	ldr	r3, [pc, #100]	; 3da00 <flatcc_json_printer_int8_enum_field@@Base+0x1b0>
   3d998:	add	r3, pc, r3
   3d99c:	add	r2, r3, r2, lsl #1
   3d9a0:	ldrh	r2, [r2]
   3d9a4:	strh	r2, [r1]
   3d9a8:	mov	r1, #2
   3d9ac:	b	3d9c4 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3d9b0:	mov	r2, #0
   3d9b4:	strb	r2, [r1, #1]
   3d9b8:	add	r2, r5, #48	; 0x30
   3d9bc:	strb	r2, [r1]
   3d9c0:	mov	r1, #1
   3d9c4:	add	r0, r1, r0
   3d9c8:	ldr	r1, [r6, #20]
   3d9cc:	add	r0, r1, r0
   3d9d0:	str	r0, [r6, #20]
   3d9d4:	pop	{r4, r5, r6, r7, fp, pc}
   3d9d8:	ldrb	r5, [r5]
   3d9dc:	uxtb	r4, r0
   3d9e0:	cmp	r5, r4
   3d9e4:	bne	3d8a8 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3d9e8:	ldrb	r5, [r6, #28]
   3d9ec:	cmp	r5, #0
   3d9f0:	mov	r5, r0
   3d9f4:	bne	3d9d4 <flatcc_json_printer_int8_enum_field@@Base+0x184>
   3d9f8:	b	3d8a8 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3d9fc:	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
   3da00:	andeq	r0, r1, r7, lsr #7

0003da04 <flatcc_json_printer_int16_enum_field@@Base>:
   3da04:	push	{r4, r5, r6, r7, fp, lr}
   3da08:	add	fp, sp, #16
   3da0c:	mov	r4, r0
   3da10:	mov	r0, #4
   3da14:	ldr	r5, [r1, #8]
   3da18:	ldr	ip, [fp, #16]
   3da1c:	add	r6, r0, r2, lsl #1
   3da20:	ldr	r0, [fp, #12]
   3da24:	ldr	r2, [fp, #8]
   3da28:	cmp	r6, r5
   3da2c:	bge	3da4c <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3da30:	ldr	r5, [r1, #4]
   3da34:	add	r6, r5, r6
   3da38:	ldrh	r6, [r6]
   3da3c:	cmp	r6, #0
   3da40:	ldrne	r5, [r1]
   3da44:	addsne	r6, r5, r6
   3da48:	bne	3dae8 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   3da4c:	ldrb	r6, [r4, #29]
   3da50:	mov	r5, r0
   3da54:	cmp	r6, #0
   3da58:	popeq	{r4, r5, r6, r7, fp, pc}
   3da5c:	ldr	r0, [r1, #16]
   3da60:	mov	r7, ip
   3da64:	add	r6, r0, #1
   3da68:	cmp	r0, #0
   3da6c:	str	r6, [r1, #16]
   3da70:	ldrne	r0, [r4, #20]
   3da74:	addne	r1, r0, #1
   3da78:	strne	r1, [r4, #20]
   3da7c:	movne	r1, #44	; 0x2c
   3da80:	strbne	r1, [r0]
   3da84:	mov	r0, r4
   3da88:	mov	r1, r3
   3da8c:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3da90:	ldrb	r0, [r4, #27]
   3da94:	cmp	r0, #0
   3da98:	beq	3dad4 <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   3da9c:	ubfx	r6, r5, #15, #1
   3daa0:	ldr	r1, [r4, #20]
   3daa4:	sxth	r0, r5
   3daa8:	cmn	r0, #1
   3daac:	movle	r0, #45	; 0x2d
   3dab0:	rsble	r5, r5, #0
   3dab4:	strble	r0, [r1], #1
   3dab8:	uxth	r0, r5
   3dabc:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3dac0:	ldr	r1, [r4, #20]
   3dac4:	add	r0, r0, r6
   3dac8:	add	r0, r1, r0
   3dacc:	str	r0, [r4, #20]
   3dad0:	pop	{r4, r5, r6, r7, fp, pc}
   3dad4:	sxth	r1, r5
   3dad8:	mov	r0, r4
   3dadc:	mov	r2, r7
   3dae0:	pop	{r4, r5, r6, r7, fp, lr}
   3dae4:	bx	r2
   3dae8:	ldrh	r5, [r6]
   3daec:	uxth	r6, r0
   3daf0:	cmp	r5, r6
   3daf4:	bne	3da5c <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3daf8:	ldrb	r6, [r4, #28]
   3dafc:	mov	r5, r0
   3db00:	cmp	r6, #0
   3db04:	bne	3dad0 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   3db08:	b	3da5c <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003db0c <flatcc_json_printer_int32_enum_field@@Base>:
   3db0c:	push	{r4, r5, r6, r7, fp, lr}
   3db10:	add	fp, sp, #16
   3db14:	mov	r4, r0
   3db18:	mov	r0, #4
   3db1c:	ldr	r5, [r1, #8]
   3db20:	ldr	ip, [fp, #16]
   3db24:	add	r6, r0, r2, lsl #1
   3db28:	ldr	r0, [fp, #12]
   3db2c:	ldr	r2, [fp, #8]
   3db30:	cmp	r6, r5
   3db34:	bge	3db54 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3db38:	ldr	r5, [r1, #4]
   3db3c:	add	r6, r5, r6
   3db40:	ldrh	r6, [r6]
   3db44:	cmp	r6, #0
   3db48:	ldrne	r5, [r1]
   3db4c:	addsne	r6, r5, r6
   3db50:	bne	3dbec <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   3db54:	ldrb	r6, [r4, #29]
   3db58:	mov	r5, r0
   3db5c:	cmp	r6, #0
   3db60:	popeq	{r4, r5, r6, r7, fp, pc}
   3db64:	ldr	r0, [r1, #16]
   3db68:	mov	r7, ip
   3db6c:	add	r6, r0, #1
   3db70:	cmp	r0, #0
   3db74:	str	r6, [r1, #16]
   3db78:	ldrne	r0, [r4, #20]
   3db7c:	addne	r1, r0, #1
   3db80:	strne	r1, [r4, #20]
   3db84:	movne	r1, #44	; 0x2c
   3db88:	strbne	r1, [r0]
   3db8c:	mov	r0, r4
   3db90:	mov	r1, r3
   3db94:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3db98:	ldrb	r0, [r4, #27]
   3db9c:	cmp	r0, #0
   3dba0:	beq	3dbd8 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3dba4:	ldr	r1, [r4, #20]
   3dba8:	cmn	r5, #1
   3dbac:	lsr	r6, r5, #31
   3dbb0:	movle	r0, #45	; 0x2d
   3dbb4:	rsble	r5, r5, #0
   3dbb8:	strble	r0, [r1], #1
   3dbbc:	mov	r0, r5
   3dbc0:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3dbc4:	ldr	r1, [r4, #20]
   3dbc8:	add	r0, r0, r6
   3dbcc:	add	r0, r1, r0
   3dbd0:	str	r0, [r4, #20]
   3dbd4:	pop	{r4, r5, r6, r7, fp, pc}
   3dbd8:	mov	r0, r4
   3dbdc:	mov	r1, r5
   3dbe0:	mov	r2, r7
   3dbe4:	pop	{r4, r5, r6, r7, fp, lr}
   3dbe8:	bx	r2
   3dbec:	ldr	r5, [r6]
   3dbf0:	cmp	r5, r0
   3dbf4:	bne	3db64 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3dbf8:	ldrb	r6, [r4, #28]
   3dbfc:	mov	r5, r0
   3dc00:	cmp	r6, #0
   3dc04:	bne	3dbd4 <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   3dc08:	b	3db64 <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003dc0c <flatcc_json_printer_int64_enum_field@@Base>:
   3dc0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3dc10:	add	fp, sp, #24
   3dc14:	mov	r4, r0
   3dc18:	mov	r0, #4
   3dc1c:	ldr	r5, [r1, #8]
   3dc20:	ldr	r6, [fp, #16]
   3dc24:	ldr	r9, [fp, #24]
   3dc28:	add	r7, r0, r2, lsl #1
   3dc2c:	ldr	r0, [fp, #20]
   3dc30:	ldr	r2, [fp, #8]
   3dc34:	cmp	r7, r5
   3dc38:	bge	3dc58 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3dc3c:	ldr	r5, [r1, #4]
   3dc40:	add	r7, r5, r7
   3dc44:	ldrh	r7, [r7]
   3dc48:	cmp	r7, #0
   3dc4c:	ldrne	r5, [r1]
   3dc50:	addsne	r7, r5, r7
   3dc54:	bne	3dd00 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   3dc58:	ldrb	r7, [r4, #29]
   3dc5c:	mov	r8, r6
   3dc60:	cmp	r7, #0
   3dc64:	mov	r7, r0
   3dc68:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   3dc6c:	ldr	r0, [r1, #16]
   3dc70:	add	r6, r0, #1
   3dc74:	cmp	r0, #0
   3dc78:	str	r6, [r1, #16]
   3dc7c:	ldrne	r0, [r4, #20]
   3dc80:	addne	r1, r0, #1
   3dc84:	strne	r1, [r4, #20]
   3dc88:	movne	r1, #44	; 0x2c
   3dc8c:	strbne	r1, [r0]
   3dc90:	mov	r0, r4
   3dc94:	mov	r1, r3
   3dc98:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3dc9c:	ldrb	r0, [r4, #27]
   3dca0:	cmp	r0, #0
   3dca4:	beq	3dce8 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3dca8:	ldr	r2, [r4, #20]
   3dcac:	lsr	r5, r7, #31
   3dcb0:	cmn	r7, #1
   3dcb4:	bgt	3dcc8 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   3dcb8:	mov	r0, #45	; 0x2d
   3dcbc:	rsbs	r8, r8, #0
   3dcc0:	strb	r0, [r2], #1
   3dcc4:	rsc	r7, r7, #0
   3dcc8:	mov	r0, r8
   3dccc:	mov	r1, r7
   3dcd0:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3dcd4:	ldr	r1, [r4, #20]
   3dcd8:	add	r0, r0, r5
   3dcdc:	add	r0, r1, r0
   3dce0:	str	r0, [r4, #20]
   3dce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3dce8:	mov	r0, r4
   3dcec:	mov	r2, r8
   3dcf0:	mov	r3, r7
   3dcf4:	mov	r1, r9
   3dcf8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3dcfc:	bx	r1
   3dd00:	ldr	r8, [r7]
   3dd04:	ldr	r7, [r7, #4]
   3dd08:	eor	ip, r7, r0
   3dd0c:	eor	r5, r8, r6
   3dd10:	orrs	r5, r5, ip
   3dd14:	bne	3dc6c <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3dd18:	ldrb	r7, [r4, #28]
   3dd1c:	mov	r8, r6
   3dd20:	cmp	r7, #0
   3dd24:	mov	r7, r0
   3dd28:	bne	3dce4 <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   3dd2c:	b	3dc6c <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003dd30 <flatcc_json_printer_bool_enum_field@@Base>:
   3dd30:	push	{r4, r5, r6, r7, fp, lr}
   3dd34:	add	fp, sp, #16
   3dd38:	mov	r4, r0
   3dd3c:	mov	r0, #4
   3dd40:	ldr	r7, [fp, #16]
   3dd44:	ldr	ip, [fp, #12]
   3dd48:	add	r5, r0, r2, lsl #1
   3dd4c:	ldr	r0, [r1, #8]
   3dd50:	ldr	r2, [fp, #8]
   3dd54:	cmp	r5, r0
   3dd58:	bge	3dd78 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3dd5c:	ldr	r0, [r1, #4]
   3dd60:	add	r0, r0, r5
   3dd64:	ldrh	r5, [r0]
   3dd68:	cmp	r5, #0
   3dd6c:	ldrne	r0, [r1]
   3dd70:	addsne	r5, r0, r5
   3dd74:	bne	3de28 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3dd78:	ldrb	r0, [r4, #29]
   3dd7c:	mov	r6, ip
   3dd80:	cmp	r0, #0
   3dd84:	popeq	{r4, r5, r6, r7, fp, pc}
   3dd88:	ldr	r0, [r1, #16]
   3dd8c:	add	r5, r0, #1
   3dd90:	cmp	r0, #0
   3dd94:	str	r5, [r1, #16]
   3dd98:	ldrne	r0, [r4, #20]
   3dd9c:	addne	r1, r0, #1
   3dda0:	strne	r1, [r4, #20]
   3dda4:	movne	r1, #44	; 0x2c
   3dda8:	strbne	r1, [r0]
   3ddac:	mov	r0, r4
   3ddb0:	mov	r1, r3
   3ddb4:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3ddb8:	ldrb	r0, [r4, #27]
   3ddbc:	cmp	r0, #0
   3ddc0:	beq	3ddec <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   3ddc4:	ldr	r0, [r4, #20]
   3ddc8:	cmp	r6, #0
   3ddcc:	beq	3de00 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   3ddd0:	mov	r1, #0
   3ddd4:	strb	r1, [r0, #4]
   3ddd8:	movw	r1, #29300	; 0x7274
   3dddc:	movt	r1, #25973	; 0x6575
   3dde0:	str	r1, [r0]
   3dde4:	mov	r0, #4
   3dde8:	b	3de18 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   3ddec:	mov	r0, r4
   3ddf0:	mov	r1, r6
   3ddf4:	mov	r2, r7
   3ddf8:	pop	{r4, r5, r6, r7, fp, lr}
   3ddfc:	bx	r2
   3de00:	mov	r1, #101	; 0x65
   3de04:	strh	r1, [r0, #4]
   3de08:	movw	r1, #24934	; 0x6166
   3de0c:	movt	r1, #29548	; 0x736c
   3de10:	str	r1, [r0]
   3de14:	mov	r0, #5
   3de18:	ldr	r1, [r4, #20]
   3de1c:	add	r0, r1, r0
   3de20:	str	r0, [r4, #20]
   3de24:	pop	{r4, r5, r6, r7, fp, pc}
   3de28:	ldrb	r6, [r5]
   3de2c:	cmp	r6, ip
   3de30:	bne	3dd88 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3de34:	ldrb	r0, [r4, #28]
   3de38:	mov	r6, ip
   3de3c:	cmp	r0, #0
   3de40:	bne	3de24 <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   3de44:	b	3dd88 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003de48 <flatcc_json_printer_uint8_struct_field@@Base>:
   3de48:	push	{r4, r5, r6, sl, fp, lr}
   3de4c:	add	fp, sp, #16
   3de50:	mov	r4, r1
   3de54:	mov	r5, r0
   3de58:	ldrb	r6, [r2, r3]
   3de5c:	ldr	r2, [fp, #12]
   3de60:	ldr	r1, [fp, #8]
   3de64:	cmp	r4, #0
   3de68:	ldrne	r0, [r5, #20]
   3de6c:	addne	r3, r0, #1
   3de70:	strne	r3, [r5, #20]
   3de74:	movne	r3, #44	; 0x2c
   3de78:	strbne	r3, [r0]
   3de7c:	mov	r0, r5
   3de80:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3de84:	ldr	r0, [r5, #20]
   3de88:	mov	r1, #0
   3de8c:	cmp	r6, #100	; 0x64
   3de90:	bcc	3ded8 <flatcc_json_printer_uint8_struct_field@@Base+0x90>
   3de94:	strb	r1, [r0, #3]
   3de98:	movw	r1, #34079	; 0x851f
   3de9c:	movt	r1, #20971	; 0x51eb
   3dea0:	umull	r1, r2, r6, r1
   3dea4:	mov	r1, #48	; 0x30
   3dea8:	orr	r1, r1, r2, lsr #5
   3deac:	strb	r1, [r0]
   3deb0:	lsr	r1, r2, #5
   3deb4:	mov	r2, #100	; 0x64
   3deb8:	mls	r1, r1, r2, r6
   3debc:	ldr	r2, [pc, #116]	; 3df38 <flatcc_json_printer_uint8_struct_field@@Base+0xf0>
   3dec0:	add	r2, pc, r2
   3dec4:	add	r1, r2, r1, lsl #1
   3dec8:	ldrh	r1, [r1]
   3decc:	strh	r1, [r0, #1]
   3ded0:	mov	r0, #3
   3ded4:	b	3df28 <flatcc_json_printer_uint8_struct_field@@Base+0xe0>
   3ded8:	cmp	r6, #10
   3dedc:	bcc	3df18 <flatcc_json_printer_uint8_struct_field@@Base+0xd0>
   3dee0:	strb	r1, [r0, #2]
   3dee4:	movw	r1, #34079	; 0x851f
   3dee8:	movt	r1, #20971	; 0x51eb
   3deec:	umull	r1, r2, r6, r1
   3def0:	lsr	r1, r2, #5
   3def4:	mov	r2, #100	; 0x64
   3def8:	mls	r1, r1, r2, r6
   3defc:	ldr	r2, [pc, #56]	; 3df3c <flatcc_json_printer_uint8_struct_field@@Base+0xf4>
   3df00:	add	r2, pc, r2
   3df04:	add	r1, r2, r1, lsl #1
   3df08:	ldrh	r1, [r1]
   3df0c:	strh	r1, [r0]
   3df10:	mov	r0, #2
   3df14:	b	3df28 <flatcc_json_printer_uint8_struct_field@@Base+0xe0>
   3df18:	strb	r1, [r0, #1]
   3df1c:	add	r1, r6, #48	; 0x30
   3df20:	strb	r1, [r0]
   3df24:	mov	r0, #1
   3df28:	ldr	r1, [r5, #20]
   3df2c:	add	r0, r1, r0
   3df30:	str	r0, [r5, #20]
   3df34:	pop	{r4, r5, r6, sl, fp, pc}
   3df38:	andeq	pc, r0, pc, ror lr	; <UNPREDICTABLE>
   3df3c:	andeq	pc, r0, pc, lsr lr	; <UNPREDICTABLE>

0003df40 <flatcc_json_printer_uint16_struct_field@@Base>:
   3df40:	push	{r4, r5, r6, sl, fp, lr}
   3df44:	add	fp, sp, #16
   3df48:	mov	r5, r1
   3df4c:	mov	r4, r0
   3df50:	add	r0, r2, r3
   3df54:	ldr	r2, [fp, #12]
   3df58:	ldr	r1, [fp, #8]
   3df5c:	cmp	r5, #0
   3df60:	ldrh	r6, [r0]
   3df64:	ldrne	r0, [r4, #20]
   3df68:	addne	r3, r0, #1
   3df6c:	strne	r3, [r4, #20]
   3df70:	movne	r3, #44	; 0x2c
   3df74:	strbne	r3, [r0]
   3df78:	mov	r0, r4
   3df7c:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3df80:	ldr	r1, [r4, #20]
   3df84:	mov	r0, r6
   3df88:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3df8c:	ldr	r1, [r4, #20]
   3df90:	add	r0, r1, r0
   3df94:	str	r0, [r4, #20]
   3df98:	pop	{r4, r5, r6, sl, fp, pc}

0003df9c <flatcc_json_printer_uint32_struct_field@@Base>:
   3df9c:	push	{r4, r5, r6, sl, fp, lr}
   3dfa0:	add	fp, sp, #16
   3dfa4:	mov	r5, r1
   3dfa8:	mov	r4, r0
   3dfac:	ldr	r6, [r2, r3]
   3dfb0:	ldr	r2, [fp, #12]
   3dfb4:	ldr	r1, [fp, #8]
   3dfb8:	cmp	r5, #0
   3dfbc:	ldrne	r0, [r4, #20]
   3dfc0:	addne	r3, r0, #1
   3dfc4:	strne	r3, [r4, #20]
   3dfc8:	movne	r3, #44	; 0x2c
   3dfcc:	strbne	r3, [r0]
   3dfd0:	mov	r0, r4
   3dfd4:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3dfd8:	ldr	r1, [r4, #20]
   3dfdc:	mov	r0, r6
   3dfe0:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3dfe4:	ldr	r1, [r4, #20]
   3dfe8:	add	r0, r1, r0
   3dfec:	str	r0, [r4, #20]
   3dff0:	pop	{r4, r5, r6, sl, fp, pc}

0003dff4 <flatcc_json_printer_uint64_struct_field@@Base>:
   3dff4:	push	{r4, r5, r6, r7, fp, lr}
   3dff8:	add	fp, sp, #16
   3dffc:	mov	r5, r1
   3e000:	ldr	r7, [r2, r3]!
   3e004:	mov	r4, r0
   3e008:	ldr	r1, [fp, #8]
   3e00c:	cmp	r5, #0
   3e010:	ldrne	r0, [r4, #20]
   3e014:	ldr	r6, [r2, #4]
   3e018:	ldr	r2, [fp, #12]
   3e01c:	addne	r3, r0, #1
   3e020:	strne	r3, [r4, #20]
   3e024:	movne	r3, #44	; 0x2c
   3e028:	strbne	r3, [r0]
   3e02c:	mov	r0, r4
   3e030:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e034:	ldr	r2, [r4, #20]
   3e038:	mov	r0, r7
   3e03c:	mov	r1, r6
   3e040:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3e044:	ldr	r1, [r4, #20]
   3e048:	add	r0, r1, r0
   3e04c:	str	r0, [r4, #20]
   3e050:	pop	{r4, r5, r6, r7, fp, pc}

0003e054 <flatcc_json_printer_int8_struct_field@@Base>:
   3e054:	push	{r4, r5, r6, sl, fp, lr}
   3e058:	add	fp, sp, #16
   3e05c:	mov	r4, r1
   3e060:	mov	r5, r0
   3e064:	add	r0, r2, r3
   3e068:	ldr	r2, [fp, #12]
   3e06c:	ldr	r1, [fp, #8]
   3e070:	cmp	r4, #0
   3e074:	ldrsb	r6, [r0]
   3e078:	ldrne	r0, [r5, #20]
   3e07c:	addne	r3, r0, #1
   3e080:	strne	r3, [r5, #20]
   3e084:	movne	r3, #44	; 0x2c
   3e088:	strbne	r3, [r0]
   3e08c:	mov	r0, r5
   3e090:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e094:	ubfx	r0, r6, #7, #1
   3e098:	ldr	r1, [r5, #20]
   3e09c:	cmn	r6, #1
   3e0a0:	movle	r2, #45	; 0x2d
   3e0a4:	rsble	r6, r6, #0
   3e0a8:	strble	r2, [r1], #1
   3e0ac:	uxtb	r2, r6
   3e0b0:	cmp	r2, #100	; 0x64
   3e0b4:	bcc	3e100 <flatcc_json_printer_int8_struct_field@@Base+0xac>
   3e0b8:	mov	r3, #0
   3e0bc:	strb	r3, [r1, #3]
   3e0c0:	movw	r3, #34079	; 0x851f
   3e0c4:	movt	r3, #20971	; 0x51eb
   3e0c8:	umull	r3, r6, r2, r3
   3e0cc:	mov	r3, #48	; 0x30
   3e0d0:	orr	r3, r3, r6, lsr #5
   3e0d4:	strb	r3, [r1]
   3e0d8:	lsr	r3, r6, #5
   3e0dc:	mov	r6, #100	; 0x64
   3e0e0:	mls	r2, r3, r6, r2
   3e0e4:	ldr	r3, [pc, #128]	; 3e16c <flatcc_json_printer_int8_struct_field@@Base+0x118>
   3e0e8:	add	r3, pc, r3
   3e0ec:	add	r2, r3, r2, lsl #1
   3e0f0:	ldrh	r2, [r2]
   3e0f4:	strh	r2, [r1, #1]
   3e0f8:	mov	r1, #3
   3e0fc:	b	3e158 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3e100:	cmp	r2, #10
   3e104:	bcc	3e144 <flatcc_json_printer_int8_struct_field@@Base+0xf0>
   3e108:	mov	r3, #0
   3e10c:	strb	r3, [r1, #2]
   3e110:	movw	r3, #34079	; 0x851f
   3e114:	movt	r3, #20971	; 0x51eb
   3e118:	umull	r3, r6, r2, r3
   3e11c:	lsr	r3, r6, #5
   3e120:	mov	r6, #100	; 0x64
   3e124:	mls	r2, r3, r6, r2
   3e128:	ldr	r3, [pc, #64]	; 3e170 <flatcc_json_printer_int8_struct_field@@Base+0x11c>
   3e12c:	add	r3, pc, r3
   3e130:	add	r2, r3, r2, lsl #1
   3e134:	ldrh	r2, [r2]
   3e138:	strh	r2, [r1]
   3e13c:	mov	r1, #2
   3e140:	b	3e158 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3e144:	mov	r2, #0
   3e148:	strb	r2, [r1, #1]
   3e14c:	add	r2, r6, #48	; 0x30
   3e150:	strb	r2, [r1]
   3e154:	mov	r1, #1
   3e158:	add	r0, r1, r0
   3e15c:	ldr	r1, [r5, #20]
   3e160:	add	r0, r1, r0
   3e164:	str	r0, [r5, #20]
   3e168:	pop	{r4, r5, r6, sl, fp, pc}
   3e16c:	andeq	pc, r0, r7, asr ip	; <UNPREDICTABLE>
   3e170:	andeq	pc, r0, r3, lsl ip	; <UNPREDICTABLE>

0003e174 <flatcc_json_printer_int16_struct_field@@Base>:
   3e174:	push	{r4, r5, r6, sl, fp, lr}
   3e178:	add	fp, sp, #16
   3e17c:	mov	ip, r1
   3e180:	mov	r4, r0
   3e184:	add	r0, r2, r3
   3e188:	ldr	r2, [fp, #12]
   3e18c:	ldr	r1, [fp, #8]
   3e190:	cmp	ip, #0
   3e194:	ldrsh	r5, [r0]
   3e198:	ldrne	r0, [r4, #20]
   3e19c:	addne	r3, r0, #1
   3e1a0:	strne	r3, [r4, #20]
   3e1a4:	movne	r3, #44	; 0x2c
   3e1a8:	strbne	r3, [r0]
   3e1ac:	mov	r0, r4
   3e1b0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e1b4:	ubfx	r6, r5, #15, #1
   3e1b8:	ldr	r1, [r4, #20]
   3e1bc:	cmn	r5, #1
   3e1c0:	movle	r0, #45	; 0x2d
   3e1c4:	rsble	r5, r5, #0
   3e1c8:	strble	r0, [r1], #1
   3e1cc:	uxth	r0, r5
   3e1d0:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3e1d4:	ldr	r1, [r4, #20]
   3e1d8:	add	r0, r0, r6
   3e1dc:	add	r0, r1, r0
   3e1e0:	str	r0, [r4, #20]
   3e1e4:	pop	{r4, r5, r6, sl, fp, pc}

0003e1e8 <flatcc_json_printer_int32_struct_field@@Base>:
   3e1e8:	push	{r4, r5, r6, sl, fp, lr}
   3e1ec:	add	fp, sp, #16
   3e1f0:	mov	ip, r1
   3e1f4:	mov	r4, r0
   3e1f8:	ldr	r5, [r2, r3]
   3e1fc:	ldr	r2, [fp, #12]
   3e200:	ldr	r1, [fp, #8]
   3e204:	cmp	ip, #0
   3e208:	ldrne	r0, [r4, #20]
   3e20c:	addne	r3, r0, #1
   3e210:	strne	r3, [r4, #20]
   3e214:	movne	r3, #44	; 0x2c
   3e218:	strbne	r3, [r0]
   3e21c:	mov	r0, r4
   3e220:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e224:	ldr	r1, [r4, #20]
   3e228:	cmn	r5, #1
   3e22c:	lsr	r6, r5, #31
   3e230:	movle	r0, #45	; 0x2d
   3e234:	rsble	r5, r5, #0
   3e238:	strble	r0, [r1], #1
   3e23c:	mov	r0, r5
   3e240:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3e244:	ldr	r1, [r4, #20]
   3e248:	add	r0, r0, r6
   3e24c:	add	r0, r1, r0
   3e250:	str	r0, [r4, #20]
   3e254:	pop	{r4, r5, r6, sl, fp, pc}

0003e258 <flatcc_json_printer_int64_struct_field@@Base>:
   3e258:	push	{r4, r5, r6, r7, fp, lr}
   3e25c:	add	fp, sp, #16
   3e260:	mov	r5, r1
   3e264:	ldr	r7, [r2, r3]!
   3e268:	mov	r4, r0
   3e26c:	ldr	r1, [fp, #8]
   3e270:	cmp	r5, #0
   3e274:	ldrne	r0, [r4, #20]
   3e278:	ldr	r6, [r2, #4]
   3e27c:	ldr	r2, [fp, #12]
   3e280:	addne	r3, r0, #1
   3e284:	strne	r3, [r4, #20]
   3e288:	movne	r3, #44	; 0x2c
   3e28c:	strbne	r3, [r0]
   3e290:	mov	r0, r4
   3e294:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e298:	ldr	r2, [r4, #20]
   3e29c:	lsr	r5, r6, #31
   3e2a0:	cmn	r6, #1
   3e2a4:	bgt	3e2b8 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   3e2a8:	mov	r0, #45	; 0x2d
   3e2ac:	rsbs	r7, r7, #0
   3e2b0:	strb	r0, [r2], #1
   3e2b4:	rsc	r6, r6, #0
   3e2b8:	mov	r0, r7
   3e2bc:	mov	r1, r6
   3e2c0:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3e2c4:	ldr	r1, [r4, #20]
   3e2c8:	add	r0, r0, r5
   3e2cc:	add	r0, r1, r0
   3e2d0:	str	r0, [r4, #20]
   3e2d4:	pop	{r4, r5, r6, r7, fp, pc}

0003e2d8 <flatcc_json_printer_bool_struct_field@@Base>:
   3e2d8:	push	{r4, r5, fp, lr}
   3e2dc:	add	fp, sp, #8
   3e2e0:	mov	ip, r1
   3e2e4:	mov	r4, r0
   3e2e8:	ldrb	r5, [r2, r3]
   3e2ec:	ldr	r2, [fp, #12]
   3e2f0:	ldr	r1, [fp, #8]
   3e2f4:	cmp	ip, #0
   3e2f8:	ldrne	r0, [r4, #20]
   3e2fc:	addne	r3, r0, #1
   3e300:	strne	r3, [r4, #20]
   3e304:	movne	r3, #44	; 0x2c
   3e308:	strbne	r3, [r0]
   3e30c:	mov	r0, r4
   3e310:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e314:	ldr	r0, [r4, #20]
   3e318:	cmp	r5, #0
   3e31c:	beq	3e33c <flatcc_json_printer_bool_struct_field@@Base+0x64>
   3e320:	mov	r1, #0
   3e324:	strb	r1, [r0, #4]
   3e328:	movw	r1, #29300	; 0x7274
   3e32c:	movt	r1, #25973	; 0x6575
   3e330:	str	r1, [r0]
   3e334:	mov	r0, #4
   3e338:	b	3e354 <flatcc_json_printer_bool_struct_field@@Base+0x7c>
   3e33c:	mov	r1, #101	; 0x65
   3e340:	strh	r1, [r0, #4]
   3e344:	movw	r1, #24934	; 0x6166
   3e348:	movt	r1, #29548	; 0x736c
   3e34c:	str	r1, [r0]
   3e350:	mov	r0, #5
   3e354:	ldr	r1, [r4, #20]
   3e358:	add	r0, r1, r0
   3e35c:	str	r0, [r4, #20]
   3e360:	pop	{r4, r5, fp, pc}

0003e364 <flatcc_json_printer_float_struct_field@@Base>:
   3e364:	push	{r4, sl, fp, lr}
   3e368:	add	fp, sp, #8
   3e36c:	vpush	{d8}
   3e370:	mov	ip, r1
   3e374:	mov	r4, r0
   3e378:	add	r0, r2, r3
   3e37c:	ldr	r2, [fp, #12]
   3e380:	ldr	r1, [fp, #8]
   3e384:	cmp	ip, #0
   3e388:	vldr	s16, [r0]
   3e38c:	ldrne	r0, [r4, #20]
   3e390:	addne	r3, r0, #1
   3e394:	strne	r3, [r4, #20]
   3e398:	movne	r3, #44	; 0x2c
   3e39c:	strbne	r3, [r0]
   3e3a0:	mov	r0, r4
   3e3a4:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e3a8:	ldr	r0, [r4, #20]
   3e3ac:	vcvt.f64.f32	d0, s16
   3e3b0:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   3e3b4:	ldr	r1, [r4, #20]
   3e3b8:	add	r0, r1, r0
   3e3bc:	str	r0, [r4, #20]
   3e3c0:	vpop	{d8}
   3e3c4:	pop	{r4, sl, fp, pc}

0003e3c8 <flatcc_json_printer_double_struct_field@@Base>:
   3e3c8:	push	{r4, sl, fp, lr}
   3e3cc:	add	fp, sp, #8
   3e3d0:	vpush	{d8}
   3e3d4:	mov	ip, r1
   3e3d8:	mov	r4, r0
   3e3dc:	add	r0, r2, r3
   3e3e0:	ldr	r2, [fp, #12]
   3e3e4:	ldr	r1, [fp, #8]
   3e3e8:	cmp	ip, #0
   3e3ec:	vldr	d8, [r0]
   3e3f0:	ldrne	r0, [r4, #20]
   3e3f4:	addne	r3, r0, #1
   3e3f8:	strne	r3, [r4, #20]
   3e3fc:	movne	r3, #44	; 0x2c
   3e400:	strbne	r3, [r0]
   3e404:	mov	r0, r4
   3e408:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e40c:	ldr	r0, [r4, #20]
   3e410:	vorr	d0, d8, d8
   3e414:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   3e418:	ldr	r1, [r4, #20]
   3e41c:	add	r0, r1, r0
   3e420:	str	r0, [r4, #20]
   3e424:	vpop	{d8}
   3e428:	pop	{r4, sl, fp, pc}

0003e42c <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3e42c:	push	{r4, r5, r6, r7, fp, lr}
   3e430:	add	fp, sp, #16
   3e434:	mov	r5, r1
   3e438:	mov	r4, r0
   3e43c:	add	r7, fp, #8
   3e440:	ldrb	r6, [r2, r3]
   3e444:	cmp	r5, #0
   3e448:	ldm	r7, {r1, r2, r7}
   3e44c:	ldrne	r0, [r4, #20]
   3e450:	addne	r3, r0, #1
   3e454:	strne	r3, [r4, #20]
   3e458:	movne	r3, #44	; 0x2c
   3e45c:	strbne	r3, [r0]
   3e460:	mov	r0, r4
   3e464:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e468:	ldrb	r0, [r4, #27]
   3e46c:	cmp	r0, #0
   3e470:	beq	3e4c8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x9c>
   3e474:	ldr	r0, [r4, #20]
   3e478:	mov	r1, #0
   3e47c:	cmp	r6, #100	; 0x64
   3e480:	bcc	3e4dc <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb0>
   3e484:	strb	r1, [r0, #3]
   3e488:	movw	r1, #34079	; 0x851f
   3e48c:	movt	r1, #20971	; 0x51eb
   3e490:	umull	r1, r2, r6, r1
   3e494:	mov	r1, #48	; 0x30
   3e498:	orr	r1, r1, r2, lsr #5
   3e49c:	strb	r1, [r0]
   3e4a0:	lsr	r1, r2, #5
   3e4a4:	mov	r2, #100	; 0x64
   3e4a8:	mls	r1, r1, r2, r6
   3e4ac:	ldr	r2, [pc, #136]	; 3e53c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x110>
   3e4b0:	add	r2, pc, r2
   3e4b4:	add	r1, r2, r1, lsl #1
   3e4b8:	ldrh	r1, [r1]
   3e4bc:	strh	r1, [r0, #1]
   3e4c0:	mov	r0, #3
   3e4c4:	b	3e52c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x100>
   3e4c8:	mov	r0, r4
   3e4cc:	mov	r1, r6
   3e4d0:	mov	r2, r7
   3e4d4:	pop	{r4, r5, r6, r7, fp, lr}
   3e4d8:	bx	r2
   3e4dc:	cmp	r6, #10
   3e4e0:	bcc	3e51c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf0>
   3e4e4:	strb	r1, [r0, #2]
   3e4e8:	movw	r1, #34079	; 0x851f
   3e4ec:	movt	r1, #20971	; 0x51eb
   3e4f0:	umull	r1, r2, r6, r1
   3e4f4:	lsr	r1, r2, #5
   3e4f8:	mov	r2, #100	; 0x64
   3e4fc:	mls	r1, r1, r2, r6
   3e500:	ldr	r2, [pc, #56]	; 3e540 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x114>
   3e504:	add	r2, pc, r2
   3e508:	add	r1, r2, r1, lsl #1
   3e50c:	ldrh	r1, [r1]
   3e510:	strh	r1, [r0]
   3e514:	mov	r0, #2
   3e518:	b	3e52c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x100>
   3e51c:	strb	r1, [r0, #1]
   3e520:	add	r1, r6, #48	; 0x30
   3e524:	strb	r1, [r0]
   3e528:	mov	r0, #1
   3e52c:	ldr	r1, [r4, #20]
   3e530:	add	r0, r1, r0
   3e534:	str	r0, [r4, #20]
   3e538:	pop	{r4, r5, r6, r7, fp, pc}
   3e53c:	andeq	pc, r0, pc, lsl #17
   3e540:	andeq	pc, r0, fp, lsr r8	; <UNPREDICTABLE>

0003e544 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3e544:	push	{r4, r5, r6, r7, fp, lr}
   3e548:	add	fp, sp, #16
   3e54c:	mov	r5, r1
   3e550:	mov	r4, r0
   3e554:	add	r0, r2, r3
   3e558:	add	r7, fp, #8
   3e55c:	cmp	r5, #0
   3e560:	ldrh	r6, [r0]
   3e564:	ldm	r7, {r1, r2, r7}
   3e568:	ldrne	r0, [r4, #20]
   3e56c:	addne	r3, r0, #1
   3e570:	strne	r3, [r4, #20]
   3e574:	movne	r3, #44	; 0x2c
   3e578:	strbne	r3, [r0]
   3e57c:	mov	r0, r4
   3e580:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e584:	ldrb	r0, [r4, #27]
   3e588:	cmp	r0, #0
   3e58c:	beq	3e5ac <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   3e590:	ldr	r1, [r4, #20]
   3e594:	mov	r0, r6
   3e598:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3e59c:	ldr	r1, [r4, #20]
   3e5a0:	add	r0, r1, r0
   3e5a4:	str	r0, [r4, #20]
   3e5a8:	pop	{r4, r5, r6, r7, fp, pc}
   3e5ac:	mov	r0, r4
   3e5b0:	mov	r1, r6
   3e5b4:	mov	r2, r7
   3e5b8:	pop	{r4, r5, r6, r7, fp, lr}
   3e5bc:	bx	r2

0003e5c0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3e5c0:	push	{r4, r5, r6, r7, fp, lr}
   3e5c4:	add	fp, sp, #16
   3e5c8:	mov	r5, r1
   3e5cc:	mov	r4, r0
   3e5d0:	add	r7, fp, #8
   3e5d4:	ldr	r6, [r2, r3]
   3e5d8:	cmp	r5, #0
   3e5dc:	ldm	r7, {r1, r2, r7}
   3e5e0:	ldrne	r0, [r4, #20]
   3e5e4:	addne	r3, r0, #1
   3e5e8:	strne	r3, [r4, #20]
   3e5ec:	movne	r3, #44	; 0x2c
   3e5f0:	strbne	r3, [r0]
   3e5f4:	mov	r0, r4
   3e5f8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e5fc:	ldrb	r0, [r4, #27]
   3e600:	cmp	r0, #0
   3e604:	beq	3e624 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   3e608:	ldr	r1, [r4, #20]
   3e60c:	mov	r0, r6
   3e610:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3e614:	ldr	r1, [r4, #20]
   3e618:	add	r0, r1, r0
   3e61c:	str	r0, [r4, #20]
   3e620:	pop	{r4, r5, r6, r7, fp, pc}
   3e624:	mov	r0, r4
   3e628:	mov	r1, r6
   3e62c:	mov	r2, r7
   3e630:	pop	{r4, r5, r6, r7, fp, lr}
   3e634:	bx	r2

0003e638 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3e638:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e63c:	add	fp, sp, #24
   3e640:	ldr	r6, [r2, r3]!
   3e644:	mov	r5, r1
   3e648:	mov	r4, r0
   3e64c:	add	r8, fp, #8
   3e650:	cmp	r5, #0
   3e654:	ldr	r7, [r2, #4]
   3e658:	ldm	r8, {r1, r2, r8}
   3e65c:	ldrne	r0, [r4, #20]
   3e660:	addne	r3, r0, #1
   3e664:	strne	r3, [r4, #20]
   3e668:	movne	r3, #44	; 0x2c
   3e66c:	strbne	r3, [r0]
   3e670:	mov	r0, r4
   3e674:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e678:	ldrb	r0, [r4, #27]
   3e67c:	cmp	r0, #0
   3e680:	beq	3e6a4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   3e684:	ldr	r2, [r4, #20]
   3e688:	mov	r0, r6
   3e68c:	mov	r1, r7
   3e690:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3e694:	ldr	r1, [r4, #20]
   3e698:	add	r0, r1, r0
   3e69c:	str	r0, [r4, #20]
   3e6a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e6a4:	mov	r0, r4
   3e6a8:	mov	r2, r6
   3e6ac:	mov	r3, r7
   3e6b0:	mov	r1, r8
   3e6b4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e6b8:	bx	r1

0003e6bc <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3e6bc:	push	{r4, r5, r6, r7, fp, lr}
   3e6c0:	add	fp, sp, #16
   3e6c4:	mov	r5, r1
   3e6c8:	mov	r4, r0
   3e6cc:	add	r0, r2, r3
   3e6d0:	add	r7, fp, #8
   3e6d4:	cmp	r5, #0
   3e6d8:	ldrsb	r6, [r0]
   3e6dc:	ldm	r7, {r1, r2, r7}
   3e6e0:	ldrne	r0, [r4, #20]
   3e6e4:	addne	r3, r0, #1
   3e6e8:	strne	r3, [r4, #20]
   3e6ec:	movne	r3, #44	; 0x2c
   3e6f0:	strbne	r3, [r0]
   3e6f4:	mov	r0, r4
   3e6f8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e6fc:	ldrb	r0, [r4, #27]
   3e700:	cmp	r0, #0
   3e704:	beq	3e774 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   3e708:	ubfx	r0, r6, #7, #1
   3e70c:	ldr	r1, [r4, #20]
   3e710:	cmn	r6, #1
   3e714:	movle	r2, #45	; 0x2d
   3e718:	rsble	r6, r6, #0
   3e71c:	strble	r2, [r1], #1
   3e720:	uxtb	r2, r6
   3e724:	cmp	r2, #100	; 0x64
   3e728:	bcc	3e788 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   3e72c:	mov	r3, #0
   3e730:	strb	r3, [r1, #3]
   3e734:	movw	r3, #34079	; 0x851f
   3e738:	movt	r3, #20971	; 0x51eb
   3e73c:	umull	r3, r6, r2, r3
   3e740:	mov	r3, #48	; 0x30
   3e744:	orr	r3, r3, r6, lsr #5
   3e748:	strb	r3, [r1]
   3e74c:	lsr	r3, r6, #5
   3e750:	mov	r6, #100	; 0x64
   3e754:	mls	r2, r3, r6, r2
   3e758:	ldr	r3, [pc, #148]	; 3e7f4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x138>
   3e75c:	add	r3, pc, r3
   3e760:	add	r2, r3, r2, lsl #1
   3e764:	ldrh	r2, [r2]
   3e768:	strh	r2, [r1, #1]
   3e76c:	mov	r1, #3
   3e770:	b	3e7e0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3e774:	mov	r0, r4
   3e778:	mov	r1, r6
   3e77c:	mov	r2, r7
   3e780:	pop	{r4, r5, r6, r7, fp, lr}
   3e784:	bx	r2
   3e788:	cmp	r2, #10
   3e78c:	bcc	3e7cc <flatcc_json_printer_int8_enum_struct_field@@Base+0x110>
   3e790:	mov	r3, #0
   3e794:	strb	r3, [r1, #2]
   3e798:	movw	r3, #34079	; 0x851f
   3e79c:	movt	r3, #20971	; 0x51eb
   3e7a0:	umull	r3, r6, r2, r3
   3e7a4:	lsr	r3, r6, #5
   3e7a8:	mov	r6, #100	; 0x64
   3e7ac:	mls	r2, r3, r6, r2
   3e7b0:	ldr	r3, [pc, #64]	; 3e7f8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x13c>
   3e7b4:	add	r3, pc, r3
   3e7b8:	add	r2, r3, r2, lsl #1
   3e7bc:	ldrh	r2, [r2]
   3e7c0:	strh	r2, [r1]
   3e7c4:	mov	r1, #2
   3e7c8:	b	3e7e0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3e7cc:	mov	r2, #0
   3e7d0:	strb	r2, [r1, #1]
   3e7d4:	add	r2, r6, #48	; 0x30
   3e7d8:	strb	r2, [r1]
   3e7dc:	mov	r1, #1
   3e7e0:	add	r0, r1, r0
   3e7e4:	ldr	r1, [r4, #20]
   3e7e8:	add	r0, r1, r0
   3e7ec:	str	r0, [r4, #20]
   3e7f0:	pop	{r4, r5, r6, r7, fp, pc}
   3e7f4:	andeq	pc, r0, r3, ror #11
   3e7f8:	andeq	pc, r0, fp, lsl #11

0003e7fc <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3e7fc:	push	{r4, r5, r6, r7, fp, lr}
   3e800:	add	fp, sp, #16
   3e804:	mov	r5, r1
   3e808:	mov	r4, r0
   3e80c:	add	r0, r2, r3
   3e810:	add	r7, fp, #8
   3e814:	cmp	r5, #0
   3e818:	ldrsh	r6, [r0]
   3e81c:	ldm	r7, {r1, r2, r7}
   3e820:	ldrne	r0, [r4, #20]
   3e824:	addne	r3, r0, #1
   3e828:	strne	r3, [r4, #20]
   3e82c:	movne	r3, #44	; 0x2c
   3e830:	strbne	r3, [r0]
   3e834:	mov	r0, r4
   3e838:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e83c:	ldrb	r0, [r4, #27]
   3e840:	cmp	r0, #0
   3e844:	beq	3e87c <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   3e848:	ubfx	r5, r6, #15, #1
   3e84c:	ldr	r1, [r4, #20]
   3e850:	cmn	r6, #1
   3e854:	movle	r0, #45	; 0x2d
   3e858:	rsble	r6, r6, #0
   3e85c:	strble	r0, [r1], #1
   3e860:	uxth	r0, r6
   3e864:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3e868:	ldr	r1, [r4, #20]
   3e86c:	add	r0, r0, r5
   3e870:	add	r0, r1, r0
   3e874:	str	r0, [r4, #20]
   3e878:	pop	{r4, r5, r6, r7, fp, pc}
   3e87c:	mov	r0, r4
   3e880:	mov	r1, r6
   3e884:	mov	r2, r7
   3e888:	pop	{r4, r5, r6, r7, fp, lr}
   3e88c:	bx	r2

0003e890 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3e890:	push	{r4, r5, r6, r7, fp, lr}
   3e894:	add	fp, sp, #16
   3e898:	mov	r5, r1
   3e89c:	mov	r4, r0
   3e8a0:	add	r7, fp, #8
   3e8a4:	ldr	r6, [r2, r3]
   3e8a8:	cmp	r5, #0
   3e8ac:	ldm	r7, {r1, r2, r7}
   3e8b0:	ldrne	r0, [r4, #20]
   3e8b4:	addne	r3, r0, #1
   3e8b8:	strne	r3, [r4, #20]
   3e8bc:	movne	r3, #44	; 0x2c
   3e8c0:	strbne	r3, [r0]
   3e8c4:	mov	r0, r4
   3e8c8:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e8cc:	ldrb	r0, [r4, #27]
   3e8d0:	cmp	r0, #0
   3e8d4:	beq	3e90c <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   3e8d8:	ldr	r1, [r4, #20]
   3e8dc:	cmn	r6, #1
   3e8e0:	lsr	r5, r6, #31
   3e8e4:	movle	r0, #45	; 0x2d
   3e8e8:	rsble	r6, r6, #0
   3e8ec:	strble	r0, [r1], #1
   3e8f0:	mov	r0, r6
   3e8f4:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3e8f8:	ldr	r1, [r4, #20]
   3e8fc:	add	r0, r0, r5
   3e900:	add	r0, r1, r0
   3e904:	str	r0, [r4, #20]
   3e908:	pop	{r4, r5, r6, r7, fp, pc}
   3e90c:	mov	r0, r4
   3e910:	mov	r1, r6
   3e914:	mov	r2, r7
   3e918:	pop	{r4, r5, r6, r7, fp, lr}
   3e91c:	bx	r2

0003e920 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3e920:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e924:	add	fp, sp, #24
   3e928:	ldr	r7, [r2, r3]!
   3e92c:	mov	r6, r1
   3e930:	mov	r4, r0
   3e934:	add	r8, fp, #8
   3e938:	cmp	r6, #0
   3e93c:	ldr	r5, [r2, #4]
   3e940:	ldm	r8, {r1, r2, r8}
   3e944:	ldrne	r0, [r4, #20]
   3e948:	addne	r3, r0, #1
   3e94c:	strne	r3, [r4, #20]
   3e950:	movne	r3, #44	; 0x2c
   3e954:	strbne	r3, [r0]
   3e958:	mov	r0, r4
   3e95c:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3e960:	ldrb	r0, [r4, #27]
   3e964:	cmp	r0, #0
   3e968:	beq	3e9ac <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   3e96c:	ldr	r2, [r4, #20]
   3e970:	lsr	r6, r5, #31
   3e974:	cmn	r5, #1
   3e978:	bgt	3e98c <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   3e97c:	mov	r0, #45	; 0x2d
   3e980:	rsbs	r7, r7, #0
   3e984:	strb	r0, [r2], #1
   3e988:	rsc	r5, r5, #0
   3e98c:	mov	r0, r7
   3e990:	mov	r1, r5
   3e994:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3e998:	ldr	r1, [r4, #20]
   3e99c:	add	r0, r0, r6
   3e9a0:	add	r0, r1, r0
   3e9a4:	str	r0, [r4, #20]
   3e9a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e9ac:	mov	r0, r4
   3e9b0:	mov	r2, r7
   3e9b4:	mov	r3, r5
   3e9b8:	mov	r1, r8
   3e9bc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e9c0:	bx	r1

0003e9c4 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3e9c4:	push	{r4, r5, r6, r7, fp, lr}
   3e9c8:	add	fp, sp, #16
   3e9cc:	mov	r5, r1
   3e9d0:	mov	r4, r0
   3e9d4:	add	r7, fp, #8
   3e9d8:	ldrb	r6, [r2, r3]
   3e9dc:	cmp	r5, #0
   3e9e0:	ldm	r7, {r1, r2, r7}
   3e9e4:	ldrne	r0, [r4, #20]
   3e9e8:	addne	r3, r0, #1
   3e9ec:	strne	r3, [r4, #20]
   3e9f0:	movne	r3, #44	; 0x2c
   3e9f4:	strbne	r3, [r0]
   3e9f8:	mov	r0, r4
   3e9fc:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3ea00:	ldrb	r0, [r4, #27]
   3ea04:	cmp	r0, #0
   3ea08:	beq	3ea34 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   3ea0c:	ldr	r0, [r4, #20]
   3ea10:	cmp	r6, #0
   3ea14:	beq	3ea48 <flatcc_json_printer_bool_enum_struct_field@@Base+0x84>
   3ea18:	mov	r1, #0
   3ea1c:	strb	r1, [r0, #4]
   3ea20:	movw	r1, #29300	; 0x7274
   3ea24:	movt	r1, #25973	; 0x6575
   3ea28:	str	r1, [r0]
   3ea2c:	mov	r0, #4
   3ea30:	b	3ea60 <flatcc_json_printer_bool_enum_struct_field@@Base+0x9c>
   3ea34:	mov	r0, r4
   3ea38:	mov	r1, r6
   3ea3c:	mov	r2, r7
   3ea40:	pop	{r4, r5, r6, r7, fp, lr}
   3ea44:	bx	r2
   3ea48:	mov	r1, #101	; 0x65
   3ea4c:	strh	r1, [r0, #4]
   3ea50:	movw	r1, #24934	; 0x6166
   3ea54:	movt	r1, #29548	; 0x736c
   3ea58:	str	r1, [r0]
   3ea5c:	mov	r0, #5
   3ea60:	ldr	r1, [r4, #20]
   3ea64:	add	r0, r1, r0
   3ea68:	str	r0, [r4, #20]
   3ea6c:	pop	{r4, r5, r6, r7, fp, pc}

0003ea70 <flatcc_json_printer_utype_vector_field@@Base>:
   3ea70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ea74:	add	fp, sp, #28
   3ea78:	sub	sp, sp, #4
   3ea7c:	mov	r4, r0
   3ea80:	mov	r0, #4
   3ea84:	add	r0, r0, r2, lsl #1
   3ea88:	ldr	r2, [r1, #8]
   3ea8c:	cmp	r0, r2
   3ea90:	bge	3eab0 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3ea94:	ldr	r2, [r1, #4]
   3ea98:	add	r0, r2, r0
   3ea9c:	ldrh	r0, [r0]
   3eaa0:	cmp	r0, #0
   3eaa4:	ldrne	r2, [r1]
   3eaa8:	addsne	r9, r2, r0
   3eaac:	bne	3eab8 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3eab0:	sub	sp, fp, #28
   3eab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eab8:	ldr	r0, [r1, #16]
   3eabc:	ldr	r2, [fp, #8]
   3eac0:	add	r7, r0, #1
   3eac4:	cmp	r0, #0
   3eac8:	str	r7, [r1, #16]
   3eacc:	ldrne	r0, [r4, #20]
   3ead0:	addne	r1, r0, #1
   3ead4:	strne	r1, [r4, #20]
   3ead8:	movne	r1, #44	; 0x2c
   3eadc:	strbne	r1, [r0]
   3eae0:	mov	r1, r3
   3eae4:	ldr	r0, [r9]
   3eae8:	ldr	r8, [r9, r0]!
   3eaec:	mov	r0, r4
   3eaf0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3eaf4:	ldr	r1, [r4, #32]
   3eaf8:	ldr	r0, [r4, #20]
   3eafc:	cmp	r8, #0
   3eb00:	add	r1, r1, #1
   3eb04:	str	r1, [r4, #32]
   3eb08:	add	r1, r0, #1
   3eb0c:	str	r1, [r4, #20]
   3eb10:	mov	r1, #91	; 0x5b
   3eb14:	strb	r1, [r0]
   3eb18:	beq	3ee7c <flatcc_json_printer_utype_vector_field@@Base+0x40c>
   3eb1c:	ldrb	r1, [r4, #25]
   3eb20:	ldr	r0, [r4, #20]
   3eb24:	cmp	r1, #0
   3eb28:	beq	3ebe4 <flatcc_json_printer_utype_vector_field@@Base+0x174>
   3eb2c:	add	r1, r0, #1
   3eb30:	str	r1, [r4, #20]
   3eb34:	mov	r1, #10
   3eb38:	strb	r1, [r0]
   3eb3c:	ldr	r0, [r4, #20]
   3eb40:	ldrb	r2, [r4, #25]
   3eb44:	ldr	r3, [r4, #32]
   3eb48:	ldr	r1, [r4, #16]
   3eb4c:	mla	r7, r3, r2, r0
   3eb50:	mul	r5, r3, r2
   3eb54:	cmp	r7, r1
   3eb58:	bls	3ebc8 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3eb5c:	cmp	r0, r1
   3eb60:	bcc	3eb7c <flatcc_json_printer_utype_vector_field@@Base+0x10c>
   3eb64:	ldr	r2, [r4, #44]	; 0x2c
   3eb68:	mov	r0, r4
   3eb6c:	mov	r1, #0
   3eb70:	blx	r2
   3eb74:	ldr	r1, [r4, #16]
   3eb78:	ldr	r0, [r4, #20]
   3eb7c:	sub	r6, r1, r0
   3eb80:	cmp	r6, r5
   3eb84:	bcs	3ebc8 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3eb88:	mov	r1, #32
   3eb8c:	mov	r2, r6
   3eb90:	bl	14ee8 <memset@plt>
   3eb94:	ldr	r0, [r4, #20]
   3eb98:	ldr	r2, [r4, #44]	; 0x2c
   3eb9c:	mov	r1, #0
   3eba0:	add	r0, r0, r6
   3eba4:	str	r0, [r4, #20]
   3eba8:	mov	r0, r4
   3ebac:	blx	r2
   3ebb0:	ldr	r1, [r4, #16]
   3ebb4:	ldr	r0, [r4, #20]
   3ebb8:	sub	r5, r5, r6
   3ebbc:	sub	r6, r1, r0
   3ebc0:	cmp	r5, r6
   3ebc4:	bhi	3eb88 <flatcc_json_printer_utype_vector_field@@Base+0x118>
   3ebc8:	mov	r1, #32
   3ebcc:	mov	r2, r5
   3ebd0:	bl	14ee8 <memset@plt>
   3ebd4:	ldr	r0, [r4, #20]
   3ebd8:	add	r0, r0, r5
   3ebdc:	str	r0, [r4, #20]
   3ebe0:	b	3ec04 <flatcc_json_printer_utype_vector_field@@Base+0x194>
   3ebe4:	ldr	r1, [r4, #16]
   3ebe8:	cmp	r0, r1
   3ebec:	bcc	3ec04 <flatcc_json_printer_utype_vector_field@@Base+0x194>
   3ebf0:	ldr	r2, [r4, #44]	; 0x2c
   3ebf4:	mov	r0, r4
   3ebf8:	mov	r1, #0
   3ebfc:	blx	r2
   3ec00:	ldr	r0, [r4, #20]
   3ec04:	ldrb	r1, [r9, #4]
   3ec08:	mov	r2, #0
   3ec0c:	cmp	r1, #100	; 0x64
   3ec10:	bcc	3ec58 <flatcc_json_printer_utype_vector_field@@Base+0x1e8>
   3ec14:	strb	r2, [r0, #3]
   3ec18:	movw	r2, #34079	; 0x851f
   3ec1c:	movt	r2, #20971	; 0x51eb
   3ec20:	umull	r2, r3, r1, r2
   3ec24:	mov	r2, #48	; 0x30
   3ec28:	orr	r2, r2, r3, lsr #5
   3ec2c:	strb	r2, [r0]
   3ec30:	lsr	r2, r3, #5
   3ec34:	mov	r3, #100	; 0x64
   3ec38:	mls	r1, r2, r3, r1
   3ec3c:	ldr	r2, [pc, #796]	; 3ef60 <flatcc_json_printer_utype_vector_field@@Base+0x4f0>
   3ec40:	add	r2, pc, r2
   3ec44:	add	r1, r2, r1, lsl #1
   3ec48:	ldrh	r1, [r1]
   3ec4c:	strh	r1, [r0, #1]
   3ec50:	mov	r0, #3
   3ec54:	b	3eca8 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   3ec58:	cmp	r1, #10
   3ec5c:	bcc	3ec98 <flatcc_json_printer_utype_vector_field@@Base+0x228>
   3ec60:	strb	r2, [r0, #2]
   3ec64:	movw	r2, #34079	; 0x851f
   3ec68:	movt	r2, #20971	; 0x51eb
   3ec6c:	umull	r2, r3, r1, r2
   3ec70:	lsr	r2, r3, #5
   3ec74:	mov	r3, #100	; 0x64
   3ec78:	mls	r1, r2, r3, r1
   3ec7c:	ldr	r2, [pc, #736]	; 3ef64 <flatcc_json_printer_utype_vector_field@@Base+0x4f4>
   3ec80:	add	r2, pc, r2
   3ec84:	add	r1, r2, r1, lsl #1
   3ec88:	ldrh	r1, [r1]
   3ec8c:	strh	r1, [r0]
   3ec90:	mov	r0, #2
   3ec94:	b	3eca8 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   3ec98:	add	r1, r1, #48	; 0x30
   3ec9c:	strb	r2, [r0, #1]
   3eca0:	strb	r1, [r0]
   3eca4:	mov	r0, #1
   3eca8:	ldr	r1, [r4, #20]
   3ecac:	subs	r8, r8, #1
   3ecb0:	add	r0, r1, r0
   3ecb4:	str	r0, [r4, #20]
   3ecb8:	beq	3ee7c <flatcc_json_printer_utype_vector_field@@Base+0x40c>
   3ecbc:	ldr	r0, [r4, #20]
   3ecc0:	add	r7, r9, #5
   3ecc4:	mov	r9, #44	; 0x2c
   3ecc8:	mov	sl, #0
   3eccc:	add	r1, r0, #1
   3ecd0:	str	r1, [r4, #20]
   3ecd4:	strb	r9, [r0]
   3ecd8:	ldrb	r1, [r4, #25]
   3ecdc:	ldr	r0, [r4, #20]
   3ece0:	cmp	r1, #0
   3ece4:	beq	3eda0 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   3ece8:	add	r1, r0, #1
   3ecec:	str	r1, [r4, #20]
   3ecf0:	mov	r1, #10
   3ecf4:	strb	r1, [r0]
   3ecf8:	ldr	r0, [r4, #20]
   3ecfc:	ldrb	r2, [r4, #25]
   3ed00:	ldr	r3, [r4, #32]
   3ed04:	ldr	r1, [r4, #16]
   3ed08:	mla	r6, r3, r2, r0
   3ed0c:	mul	r5, r3, r2
   3ed10:	cmp	r6, r1
   3ed14:	bls	3ed84 <flatcc_json_printer_utype_vector_field@@Base+0x314>
   3ed18:	cmp	r0, r1
   3ed1c:	bcc	3ed38 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   3ed20:	ldr	r2, [r4, #44]	; 0x2c
   3ed24:	mov	r0, r4
   3ed28:	mov	r1, #0
   3ed2c:	blx	r2
   3ed30:	ldr	r1, [r4, #16]
   3ed34:	ldr	r0, [r4, #20]
   3ed38:	sub	r6, r1, r0
   3ed3c:	cmp	r6, r5
   3ed40:	bcs	3ed84 <flatcc_json_printer_utype_vector_field@@Base+0x314>
   3ed44:	mov	r1, #32
   3ed48:	mov	r2, r6
   3ed4c:	bl	14ee8 <memset@plt>
   3ed50:	ldr	r0, [r4, #20]
   3ed54:	ldr	r2, [r4, #44]	; 0x2c
   3ed58:	mov	r1, #0
   3ed5c:	add	r0, r0, r6
   3ed60:	str	r0, [r4, #20]
   3ed64:	mov	r0, r4
   3ed68:	blx	r2
   3ed6c:	ldr	r1, [r4, #16]
   3ed70:	ldr	r0, [r4, #20]
   3ed74:	sub	r5, r5, r6
   3ed78:	sub	r6, r1, r0
   3ed7c:	cmp	r5, r6
   3ed80:	bhi	3ed44 <flatcc_json_printer_utype_vector_field@@Base+0x2d4>
   3ed84:	mov	r1, #32
   3ed88:	mov	r2, r5
   3ed8c:	bl	14ee8 <memset@plt>
   3ed90:	ldr	r0, [r4, #20]
   3ed94:	add	r0, r0, r5
   3ed98:	str	r0, [r4, #20]
   3ed9c:	b	3edc0 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   3eda0:	ldr	r1, [r4, #16]
   3eda4:	cmp	r0, r1
   3eda8:	bcc	3edc0 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   3edac:	ldr	r2, [r4, #44]	; 0x2c
   3edb0:	mov	r0, r4
   3edb4:	mov	r1, #0
   3edb8:	blx	r2
   3edbc:	ldr	r0, [r4, #20]
   3edc0:	ldrb	r1, [r7]
   3edc4:	sub	r8, r8, #1
   3edc8:	cmp	r1, #100	; 0x64
   3edcc:	bcc	3ee14 <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   3edd0:	movw	r2, #34079	; 0x851f
   3edd4:	strb	sl, [r0, #3]
   3edd8:	movt	r2, #20971	; 0x51eb
   3eddc:	umull	r2, r3, r1, r2
   3ede0:	mov	r2, #48	; 0x30
   3ede4:	orr	r2, r2, r3, lsr #5
   3ede8:	strb	r2, [r0]
   3edec:	lsr	r2, r3, #5
   3edf0:	mov	r3, #100	; 0x64
   3edf4:	mls	r1, r2, r3, r1
   3edf8:	ldr	r2, [pc, #360]	; 3ef68 <flatcc_json_printer_utype_vector_field@@Base+0x4f8>
   3edfc:	add	r2, pc, r2
   3ee00:	add	r1, r2, r1, lsl #1
   3ee04:	ldrh	r1, [r1]
   3ee08:	strh	r1, [r0, #1]
   3ee0c:	mov	r0, #3
   3ee10:	b	3ee64 <flatcc_json_printer_utype_vector_field@@Base+0x3f4>
   3ee14:	cmp	r1, #10
   3ee18:	bcc	3ee54 <flatcc_json_printer_utype_vector_field@@Base+0x3e4>
   3ee1c:	movw	r2, #34079	; 0x851f
   3ee20:	strb	sl, [r0, #2]
   3ee24:	movt	r2, #20971	; 0x51eb
   3ee28:	umull	r2, r3, r1, r2
   3ee2c:	lsr	r2, r3, #5
   3ee30:	mov	r3, #100	; 0x64
   3ee34:	mls	r1, r2, r3, r1
   3ee38:	ldr	r2, [pc, #300]	; 3ef6c <flatcc_json_printer_utype_vector_field@@Base+0x4fc>
   3ee3c:	add	r2, pc, r2
   3ee40:	add	r1, r2, r1, lsl #1
   3ee44:	ldrh	r1, [r1]
   3ee48:	strh	r1, [r0]
   3ee4c:	mov	r0, #2
   3ee50:	b	3ee64 <flatcc_json_printer_utype_vector_field@@Base+0x3f4>
   3ee54:	add	r1, r1, #48	; 0x30
   3ee58:	strb	sl, [r0, #1]
   3ee5c:	strb	r1, [r0]
   3ee60:	mov	r0, #1
   3ee64:	ldr	r1, [r4, #20]
   3ee68:	add	r7, r7, #1
   3ee6c:	cmp	r8, #0
   3ee70:	add	r0, r1, r0
   3ee74:	str	r0, [r4, #20]
   3ee78:	bne	3eccc <flatcc_json_printer_utype_vector_field@@Base+0x25c>
   3ee7c:	ldrb	r1, [r4, #25]
   3ee80:	ldr	r0, [r4, #20]
   3ee84:	cmp	r1, #0
   3ee88:	beq	3ef48 <flatcc_json_printer_utype_vector_field@@Base+0x4d8>
   3ee8c:	add	r1, r0, #1
   3ee90:	str	r1, [r4, #20]
   3ee94:	mov	r1, #10
   3ee98:	strb	r1, [r0]
   3ee9c:	ldr	r0, [r4, #32]
   3eea0:	sub	r2, r0, #1
   3eea4:	str	r2, [r4, #32]
   3eea8:	ldrb	r3, [r4, #25]
   3eeac:	ldr	r0, [r4, #20]
   3eeb0:	ldr	r1, [r4, #16]
   3eeb4:	mla	r7, r2, r3, r0
   3eeb8:	mul	r5, r2, r3
   3eebc:	cmp	r7, r1
   3eec0:	bls	3ef30 <flatcc_json_printer_utype_vector_field@@Base+0x4c0>
   3eec4:	cmp	r0, r1
   3eec8:	bcc	3eee4 <flatcc_json_printer_utype_vector_field@@Base+0x474>
   3eecc:	ldr	r2, [r4, #44]	; 0x2c
   3eed0:	mov	r0, r4
   3eed4:	mov	r1, #0
   3eed8:	blx	r2
   3eedc:	ldr	r1, [r4, #16]
   3eee0:	ldr	r0, [r4, #20]
   3eee4:	sub	r6, r1, r0
   3eee8:	cmp	r6, r5
   3eeec:	bcs	3ef30 <flatcc_json_printer_utype_vector_field@@Base+0x4c0>
   3eef0:	mov	r1, #32
   3eef4:	mov	r2, r6
   3eef8:	bl	14ee8 <memset@plt>
   3eefc:	ldr	r0, [r4, #20]
   3ef00:	ldr	r2, [r4, #44]	; 0x2c
   3ef04:	mov	r1, #0
   3ef08:	add	r0, r0, r6
   3ef0c:	str	r0, [r4, #20]
   3ef10:	mov	r0, r4
   3ef14:	blx	r2
   3ef18:	ldr	r1, [r4, #16]
   3ef1c:	ldr	r0, [r4, #20]
   3ef20:	sub	r5, r5, r6
   3ef24:	sub	r6, r1, r0
   3ef28:	cmp	r5, r6
   3ef2c:	bhi	3eef0 <flatcc_json_printer_utype_vector_field@@Base+0x480>
   3ef30:	mov	r1, #32
   3ef34:	mov	r2, r5
   3ef38:	bl	14ee8 <memset@plt>
   3ef3c:	ldr	r0, [r4, #20]
   3ef40:	add	r0, r0, r5
   3ef44:	str	r0, [r4, #20]
   3ef48:	add	r1, r0, #1
   3ef4c:	str	r1, [r4, #20]
   3ef50:	mov	r1, #93	; 0x5d
   3ef54:	strb	r1, [r0]
   3ef58:	sub	sp, fp, #28
   3ef5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ef60:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   3ef64:	strheq	pc, [r0], -pc	; <UNPREDICTABLE>
   3ef68:	andeq	lr, r0, r3, asr #30
   3ef6c:	andeq	lr, r0, r3, lsl #30

0003ef70 <flatcc_json_printer_uint8_vector_field@@Base>:
   3ef70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ef74:	add	fp, sp, #28
   3ef78:	sub	sp, sp, #4
   3ef7c:	mov	r4, r0
   3ef80:	mov	r0, #4
   3ef84:	add	r0, r0, r2, lsl #1
   3ef88:	ldr	r2, [r1, #8]
   3ef8c:	cmp	r0, r2
   3ef90:	bge	3efb0 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   3ef94:	ldr	r2, [r1, #4]
   3ef98:	add	r0, r2, r0
   3ef9c:	ldrh	r0, [r0]
   3efa0:	cmp	r0, #0
   3efa4:	ldrne	r2, [r1]
   3efa8:	addsne	r9, r2, r0
   3efac:	bne	3efb8 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   3efb0:	sub	sp, fp, #28
   3efb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3efb8:	ldr	r0, [r1, #16]
   3efbc:	ldr	r2, [fp, #8]
   3efc0:	add	r7, r0, #1
   3efc4:	cmp	r0, #0
   3efc8:	str	r7, [r1, #16]
   3efcc:	ldrne	r0, [r4, #20]
   3efd0:	addne	r1, r0, #1
   3efd4:	strne	r1, [r4, #20]
   3efd8:	movne	r1, #44	; 0x2c
   3efdc:	strbne	r1, [r0]
   3efe0:	mov	r1, r3
   3efe4:	ldr	r0, [r9]
   3efe8:	ldr	r8, [r9, r0]!
   3efec:	mov	r0, r4
   3eff0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3eff4:	ldr	r1, [r4, #32]
   3eff8:	ldr	r0, [r4, #20]
   3effc:	cmp	r8, #0
   3f000:	add	r1, r1, #1
   3f004:	str	r1, [r4, #32]
   3f008:	add	r1, r0, #1
   3f00c:	str	r1, [r4, #20]
   3f010:	mov	r1, #91	; 0x5b
   3f014:	strb	r1, [r0]
   3f018:	beq	3f37c <flatcc_json_printer_uint8_vector_field@@Base+0x40c>
   3f01c:	ldrb	r1, [r4, #25]
   3f020:	ldr	r0, [r4, #20]
   3f024:	cmp	r1, #0
   3f028:	beq	3f0e4 <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   3f02c:	add	r1, r0, #1
   3f030:	str	r1, [r4, #20]
   3f034:	mov	r1, #10
   3f038:	strb	r1, [r0]
   3f03c:	ldr	r0, [r4, #20]
   3f040:	ldrb	r2, [r4, #25]
   3f044:	ldr	r3, [r4, #32]
   3f048:	ldr	r1, [r4, #16]
   3f04c:	mla	r7, r3, r2, r0
   3f050:	mul	r5, r3, r2
   3f054:	cmp	r7, r1
   3f058:	bls	3f0c8 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   3f05c:	cmp	r0, r1
   3f060:	bcc	3f07c <flatcc_json_printer_uint8_vector_field@@Base+0x10c>
   3f064:	ldr	r2, [r4, #44]	; 0x2c
   3f068:	mov	r0, r4
   3f06c:	mov	r1, #0
   3f070:	blx	r2
   3f074:	ldr	r1, [r4, #16]
   3f078:	ldr	r0, [r4, #20]
   3f07c:	sub	r6, r1, r0
   3f080:	cmp	r6, r5
   3f084:	bcs	3f0c8 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   3f088:	mov	r1, #32
   3f08c:	mov	r2, r6
   3f090:	bl	14ee8 <memset@plt>
   3f094:	ldr	r0, [r4, #20]
   3f098:	ldr	r2, [r4, #44]	; 0x2c
   3f09c:	mov	r1, #0
   3f0a0:	add	r0, r0, r6
   3f0a4:	str	r0, [r4, #20]
   3f0a8:	mov	r0, r4
   3f0ac:	blx	r2
   3f0b0:	ldr	r1, [r4, #16]
   3f0b4:	ldr	r0, [r4, #20]
   3f0b8:	sub	r5, r5, r6
   3f0bc:	sub	r6, r1, r0
   3f0c0:	cmp	r5, r6
   3f0c4:	bhi	3f088 <flatcc_json_printer_uint8_vector_field@@Base+0x118>
   3f0c8:	mov	r1, #32
   3f0cc:	mov	r2, r5
   3f0d0:	bl	14ee8 <memset@plt>
   3f0d4:	ldr	r0, [r4, #20]
   3f0d8:	add	r0, r0, r5
   3f0dc:	str	r0, [r4, #20]
   3f0e0:	b	3f104 <flatcc_json_printer_uint8_vector_field@@Base+0x194>
   3f0e4:	ldr	r1, [r4, #16]
   3f0e8:	cmp	r0, r1
   3f0ec:	bcc	3f104 <flatcc_json_printer_uint8_vector_field@@Base+0x194>
   3f0f0:	ldr	r2, [r4, #44]	; 0x2c
   3f0f4:	mov	r0, r4
   3f0f8:	mov	r1, #0
   3f0fc:	blx	r2
   3f100:	ldr	r0, [r4, #20]
   3f104:	ldrb	r1, [r9, #4]
   3f108:	mov	r2, #0
   3f10c:	cmp	r1, #100	; 0x64
   3f110:	bcc	3f158 <flatcc_json_printer_uint8_vector_field@@Base+0x1e8>
   3f114:	strb	r2, [r0, #3]
   3f118:	movw	r2, #34079	; 0x851f
   3f11c:	movt	r2, #20971	; 0x51eb
   3f120:	umull	r2, r3, r1, r2
   3f124:	mov	r2, #48	; 0x30
   3f128:	orr	r2, r2, r3, lsr #5
   3f12c:	strb	r2, [r0]
   3f130:	lsr	r2, r3, #5
   3f134:	mov	r3, #100	; 0x64
   3f138:	mls	r1, r2, r3, r1
   3f13c:	ldr	r2, [pc, #796]	; 3f460 <flatcc_json_printer_uint8_vector_field@@Base+0x4f0>
   3f140:	add	r2, pc, r2
   3f144:	add	r1, r2, r1, lsl #1
   3f148:	ldrh	r1, [r1]
   3f14c:	strh	r1, [r0, #1]
   3f150:	mov	r0, #3
   3f154:	b	3f1a8 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   3f158:	cmp	r1, #10
   3f15c:	bcc	3f198 <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   3f160:	strb	r2, [r0, #2]
   3f164:	movw	r2, #34079	; 0x851f
   3f168:	movt	r2, #20971	; 0x51eb
   3f16c:	umull	r2, r3, r1, r2
   3f170:	lsr	r2, r3, #5
   3f174:	mov	r3, #100	; 0x64
   3f178:	mls	r1, r2, r3, r1
   3f17c:	ldr	r2, [pc, #736]	; 3f464 <flatcc_json_printer_uint8_vector_field@@Base+0x4f4>
   3f180:	add	r2, pc, r2
   3f184:	add	r1, r2, r1, lsl #1
   3f188:	ldrh	r1, [r1]
   3f18c:	strh	r1, [r0]
   3f190:	mov	r0, #2
   3f194:	b	3f1a8 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   3f198:	add	r1, r1, #48	; 0x30
   3f19c:	strb	r2, [r0, #1]
   3f1a0:	strb	r1, [r0]
   3f1a4:	mov	r0, #1
   3f1a8:	ldr	r1, [r4, #20]
   3f1ac:	subs	r8, r8, #1
   3f1b0:	add	r0, r1, r0
   3f1b4:	str	r0, [r4, #20]
   3f1b8:	beq	3f37c <flatcc_json_printer_uint8_vector_field@@Base+0x40c>
   3f1bc:	ldr	r0, [r4, #20]
   3f1c0:	add	r7, r9, #5
   3f1c4:	mov	r9, #44	; 0x2c
   3f1c8:	mov	sl, #0
   3f1cc:	add	r1, r0, #1
   3f1d0:	str	r1, [r4, #20]
   3f1d4:	strb	r9, [r0]
   3f1d8:	ldrb	r1, [r4, #25]
   3f1dc:	ldr	r0, [r4, #20]
   3f1e0:	cmp	r1, #0
   3f1e4:	beq	3f2a0 <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   3f1e8:	add	r1, r0, #1
   3f1ec:	str	r1, [r4, #20]
   3f1f0:	mov	r1, #10
   3f1f4:	strb	r1, [r0]
   3f1f8:	ldr	r0, [r4, #20]
   3f1fc:	ldrb	r2, [r4, #25]
   3f200:	ldr	r3, [r4, #32]
   3f204:	ldr	r1, [r4, #16]
   3f208:	mla	r6, r3, r2, r0
   3f20c:	mul	r5, r3, r2
   3f210:	cmp	r6, r1
   3f214:	bls	3f284 <flatcc_json_printer_uint8_vector_field@@Base+0x314>
   3f218:	cmp	r0, r1
   3f21c:	bcc	3f238 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   3f220:	ldr	r2, [r4, #44]	; 0x2c
   3f224:	mov	r0, r4
   3f228:	mov	r1, #0
   3f22c:	blx	r2
   3f230:	ldr	r1, [r4, #16]
   3f234:	ldr	r0, [r4, #20]
   3f238:	sub	r6, r1, r0
   3f23c:	cmp	r6, r5
   3f240:	bcs	3f284 <flatcc_json_printer_uint8_vector_field@@Base+0x314>
   3f244:	mov	r1, #32
   3f248:	mov	r2, r6
   3f24c:	bl	14ee8 <memset@plt>
   3f250:	ldr	r0, [r4, #20]
   3f254:	ldr	r2, [r4, #44]	; 0x2c
   3f258:	mov	r1, #0
   3f25c:	add	r0, r0, r6
   3f260:	str	r0, [r4, #20]
   3f264:	mov	r0, r4
   3f268:	blx	r2
   3f26c:	ldr	r1, [r4, #16]
   3f270:	ldr	r0, [r4, #20]
   3f274:	sub	r5, r5, r6
   3f278:	sub	r6, r1, r0
   3f27c:	cmp	r5, r6
   3f280:	bhi	3f244 <flatcc_json_printer_uint8_vector_field@@Base+0x2d4>
   3f284:	mov	r1, #32
   3f288:	mov	r2, r5
   3f28c:	bl	14ee8 <memset@plt>
   3f290:	ldr	r0, [r4, #20]
   3f294:	add	r0, r0, r5
   3f298:	str	r0, [r4, #20]
   3f29c:	b	3f2c0 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   3f2a0:	ldr	r1, [r4, #16]
   3f2a4:	cmp	r0, r1
   3f2a8:	bcc	3f2c0 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   3f2ac:	ldr	r2, [r4, #44]	; 0x2c
   3f2b0:	mov	r0, r4
   3f2b4:	mov	r1, #0
   3f2b8:	blx	r2
   3f2bc:	ldr	r0, [r4, #20]
   3f2c0:	ldrb	r1, [r7]
   3f2c4:	sub	r8, r8, #1
   3f2c8:	cmp	r1, #100	; 0x64
   3f2cc:	bcc	3f314 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   3f2d0:	movw	r2, #34079	; 0x851f
   3f2d4:	strb	sl, [r0, #3]
   3f2d8:	movt	r2, #20971	; 0x51eb
   3f2dc:	umull	r2, r3, r1, r2
   3f2e0:	mov	r2, #48	; 0x30
   3f2e4:	orr	r2, r2, r3, lsr #5
   3f2e8:	strb	r2, [r0]
   3f2ec:	lsr	r2, r3, #5
   3f2f0:	mov	r3, #100	; 0x64
   3f2f4:	mls	r1, r2, r3, r1
   3f2f8:	ldr	r2, [pc, #360]	; 3f468 <flatcc_json_printer_uint8_vector_field@@Base+0x4f8>
   3f2fc:	add	r2, pc, r2
   3f300:	add	r1, r2, r1, lsl #1
   3f304:	ldrh	r1, [r1]
   3f308:	strh	r1, [r0, #1]
   3f30c:	mov	r0, #3
   3f310:	b	3f364 <flatcc_json_printer_uint8_vector_field@@Base+0x3f4>
   3f314:	cmp	r1, #10
   3f318:	bcc	3f354 <flatcc_json_printer_uint8_vector_field@@Base+0x3e4>
   3f31c:	movw	r2, #34079	; 0x851f
   3f320:	strb	sl, [r0, #2]
   3f324:	movt	r2, #20971	; 0x51eb
   3f328:	umull	r2, r3, r1, r2
   3f32c:	lsr	r2, r3, #5
   3f330:	mov	r3, #100	; 0x64
   3f334:	mls	r1, r2, r3, r1
   3f338:	ldr	r2, [pc, #300]	; 3f46c <flatcc_json_printer_uint8_vector_field@@Base+0x4fc>
   3f33c:	add	r2, pc, r2
   3f340:	add	r1, r2, r1, lsl #1
   3f344:	ldrh	r1, [r1]
   3f348:	strh	r1, [r0]
   3f34c:	mov	r0, #2
   3f350:	b	3f364 <flatcc_json_printer_uint8_vector_field@@Base+0x3f4>
   3f354:	add	r1, r1, #48	; 0x30
   3f358:	strb	sl, [r0, #1]
   3f35c:	strb	r1, [r0]
   3f360:	mov	r0, #1
   3f364:	ldr	r1, [r4, #20]
   3f368:	add	r7, r7, #1
   3f36c:	cmp	r8, #0
   3f370:	add	r0, r1, r0
   3f374:	str	r0, [r4, #20]
   3f378:	bne	3f1cc <flatcc_json_printer_uint8_vector_field@@Base+0x25c>
   3f37c:	ldrb	r1, [r4, #25]
   3f380:	ldr	r0, [r4, #20]
   3f384:	cmp	r1, #0
   3f388:	beq	3f448 <flatcc_json_printer_uint8_vector_field@@Base+0x4d8>
   3f38c:	add	r1, r0, #1
   3f390:	str	r1, [r4, #20]
   3f394:	mov	r1, #10
   3f398:	strb	r1, [r0]
   3f39c:	ldr	r0, [r4, #32]
   3f3a0:	sub	r2, r0, #1
   3f3a4:	str	r2, [r4, #32]
   3f3a8:	ldrb	r3, [r4, #25]
   3f3ac:	ldr	r0, [r4, #20]
   3f3b0:	ldr	r1, [r4, #16]
   3f3b4:	mla	r7, r2, r3, r0
   3f3b8:	mul	r5, r2, r3
   3f3bc:	cmp	r7, r1
   3f3c0:	bls	3f430 <flatcc_json_printer_uint8_vector_field@@Base+0x4c0>
   3f3c4:	cmp	r0, r1
   3f3c8:	bcc	3f3e4 <flatcc_json_printer_uint8_vector_field@@Base+0x474>
   3f3cc:	ldr	r2, [r4, #44]	; 0x2c
   3f3d0:	mov	r0, r4
   3f3d4:	mov	r1, #0
   3f3d8:	blx	r2
   3f3dc:	ldr	r1, [r4, #16]
   3f3e0:	ldr	r0, [r4, #20]
   3f3e4:	sub	r6, r1, r0
   3f3e8:	cmp	r6, r5
   3f3ec:	bcs	3f430 <flatcc_json_printer_uint8_vector_field@@Base+0x4c0>
   3f3f0:	mov	r1, #32
   3f3f4:	mov	r2, r6
   3f3f8:	bl	14ee8 <memset@plt>
   3f3fc:	ldr	r0, [r4, #20]
   3f400:	ldr	r2, [r4, #44]	; 0x2c
   3f404:	mov	r1, #0
   3f408:	add	r0, r0, r6
   3f40c:	str	r0, [r4, #20]
   3f410:	mov	r0, r4
   3f414:	blx	r2
   3f418:	ldr	r1, [r4, #16]
   3f41c:	ldr	r0, [r4, #20]
   3f420:	sub	r5, r5, r6
   3f424:	sub	r6, r1, r0
   3f428:	cmp	r5, r6
   3f42c:	bhi	3f3f0 <flatcc_json_printer_uint8_vector_field@@Base+0x480>
   3f430:	mov	r1, #32
   3f434:	mov	r2, r5
   3f438:	bl	14ee8 <memset@plt>
   3f43c:	ldr	r0, [r4, #20]
   3f440:	add	r0, r0, r5
   3f444:	str	r0, [r4, #20]
   3f448:	add	r1, r0, #1
   3f44c:	str	r1, [r4, #20]
   3f450:	mov	r1, #93	; 0x5d
   3f454:	strb	r1, [r0]
   3f458:	sub	sp, fp, #28
   3f45c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f460:	strdeq	lr, [r0], -pc	; <UNPREDICTABLE>
   3f464:			; <UNDEFINED> instruction: 0x0000ebbf
   3f468:	andeq	lr, r0, r3, asr #20
   3f46c:	andeq	lr, r0, r3, lsl #20

0003f470 <flatcc_json_printer_uint16_vector_field@@Base>:
   3f470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f474:	add	fp, sp, #28
   3f478:	sub	sp, sp, #4
   3f47c:	mov	r4, r0
   3f480:	mov	r0, #4
   3f484:	add	r0, r0, r2, lsl #1
   3f488:	ldr	r2, [r1, #8]
   3f48c:	cmp	r0, r2
   3f490:	bge	3f4b0 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   3f494:	ldr	r2, [r1, #4]
   3f498:	add	r0, r2, r0
   3f49c:	ldrh	r0, [r0]
   3f4a0:	cmp	r0, #0
   3f4a4:	ldrne	r2, [r1]
   3f4a8:	addsne	r8, r2, r0
   3f4ac:	bne	3f4b8 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   3f4b0:	sub	sp, fp, #28
   3f4b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f4b8:	ldr	r0, [r1, #16]
   3f4bc:	ldr	r2, [fp, #8]
   3f4c0:	add	r7, r0, #1
   3f4c4:	cmp	r0, #0
   3f4c8:	str	r7, [r1, #16]
   3f4cc:	ldrne	r0, [r4, #20]
   3f4d0:	addne	r1, r0, #1
   3f4d4:	strne	r1, [r4, #20]
   3f4d8:	movne	r1, #44	; 0x2c
   3f4dc:	strbne	r1, [r0]
   3f4e0:	mov	r1, r3
   3f4e4:	ldr	r0, [r8]
   3f4e8:	ldr	r7, [r8, r0]!
   3f4ec:	mov	r0, r4
   3f4f0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3f4f4:	ldr	r1, [r4, #32]
   3f4f8:	ldr	r0, [r4, #20]
   3f4fc:	cmp	r7, #0
   3f500:	add	r1, r1, #1
   3f504:	str	r1, [r4, #32]
   3f508:	add	r1, r0, #1
   3f50c:	str	r1, [r4, #20]
   3f510:	mov	r1, #91	; 0x5b
   3f514:	strb	r1, [r0]
   3f518:	beq	3f740 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   3f51c:	ldrb	r0, [r4, #25]
   3f520:	ldr	r1, [r4, #20]
   3f524:	cmp	r0, #0
   3f528:	beq	3f5e4 <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   3f52c:	add	r0, r1, #1
   3f530:	str	r0, [r4, #20]
   3f534:	mov	r0, #10
   3f538:	strb	r0, [r1]
   3f53c:	ldr	r0, [r4, #20]
   3f540:	ldrb	r2, [r4, #25]
   3f544:	ldr	r3, [r4, #32]
   3f548:	ldr	r1, [r4, #16]
   3f54c:	mla	r6, r3, r2, r0
   3f550:	mul	r5, r3, r2
   3f554:	cmp	r6, r1
   3f558:	bls	3f5c8 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   3f55c:	cmp	r0, r1
   3f560:	bcc	3f57c <flatcc_json_printer_uint16_vector_field@@Base+0x10c>
   3f564:	ldr	r2, [r4, #44]	; 0x2c
   3f568:	mov	r0, r4
   3f56c:	mov	r1, #0
   3f570:	blx	r2
   3f574:	ldr	r1, [r4, #16]
   3f578:	ldr	r0, [r4, #20]
   3f57c:	sub	r6, r1, r0
   3f580:	cmp	r6, r5
   3f584:	bcs	3f5c8 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   3f588:	mov	r1, #32
   3f58c:	mov	r2, r6
   3f590:	bl	14ee8 <memset@plt>
   3f594:	ldr	r0, [r4, #20]
   3f598:	ldr	r2, [r4, #44]	; 0x2c
   3f59c:	mov	r1, #0
   3f5a0:	add	r0, r0, r6
   3f5a4:	str	r0, [r4, #20]
   3f5a8:	mov	r0, r4
   3f5ac:	blx	r2
   3f5b0:	ldr	r1, [r4, #16]
   3f5b4:	ldr	r0, [r4, #20]
   3f5b8:	sub	r5, r5, r6
   3f5bc:	sub	r6, r1, r0
   3f5c0:	cmp	r5, r6
   3f5c4:	bhi	3f588 <flatcc_json_printer_uint16_vector_field@@Base+0x118>
   3f5c8:	mov	r1, #32
   3f5cc:	mov	r2, r5
   3f5d0:	bl	14ee8 <memset@plt>
   3f5d4:	ldr	r0, [r4, #20]
   3f5d8:	add	r1, r0, r5
   3f5dc:	str	r1, [r4, #20]
   3f5e0:	b	3f604 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   3f5e4:	ldr	r0, [r4, #16]
   3f5e8:	cmp	r1, r0
   3f5ec:	bcc	3f604 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   3f5f0:	ldr	r2, [r4, #44]	; 0x2c
   3f5f4:	mov	r0, r4
   3f5f8:	mov	r1, #0
   3f5fc:	blx	r2
   3f600:	ldr	r1, [r4, #20]
   3f604:	ldrh	r0, [r8, #4]
   3f608:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3f60c:	ldr	r1, [r4, #20]
   3f610:	subs	r9, r7, #1
   3f614:	add	r0, r1, r0
   3f618:	str	r0, [r4, #20]
   3f61c:	beq	3f740 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   3f620:	ldr	r0, [r4, #20]
   3f624:	add	r7, r8, #6
   3f628:	mov	r8, #44	; 0x2c
   3f62c:	mov	sl, #10
   3f630:	add	r1, r0, #1
   3f634:	sub	r9, r9, #1
   3f638:	str	r1, [r4, #20]
   3f63c:	strb	r8, [r0]
   3f640:	ldrb	r0, [r4, #25]
   3f644:	ldr	r1, [r4, #20]
   3f648:	cmp	r0, #0
   3f64c:	beq	3f704 <flatcc_json_printer_uint16_vector_field@@Base+0x294>
   3f650:	add	r0, r1, #1
   3f654:	str	r0, [r4, #20]
   3f658:	strb	sl, [r1]
   3f65c:	ldr	r0, [r4, #20]
   3f660:	ldrb	r2, [r4, #25]
   3f664:	ldr	r3, [r4, #32]
   3f668:	ldr	r1, [r4, #16]
   3f66c:	mla	r6, r3, r2, r0
   3f670:	mul	r5, r3, r2
   3f674:	cmp	r6, r1
   3f678:	bls	3f6e8 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   3f67c:	cmp	r0, r1
   3f680:	bcc	3f69c <flatcc_json_printer_uint16_vector_field@@Base+0x22c>
   3f684:	ldr	r2, [r4, #44]	; 0x2c
   3f688:	mov	r0, r4
   3f68c:	mov	r1, #0
   3f690:	blx	r2
   3f694:	ldr	r1, [r4, #16]
   3f698:	ldr	r0, [r4, #20]
   3f69c:	sub	r6, r1, r0
   3f6a0:	cmp	r6, r5
   3f6a4:	bcs	3f6e8 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   3f6a8:	mov	r1, #32
   3f6ac:	mov	r2, r6
   3f6b0:	bl	14ee8 <memset@plt>
   3f6b4:	ldr	r0, [r4, #20]
   3f6b8:	ldr	r2, [r4, #44]	; 0x2c
   3f6bc:	mov	r1, #0
   3f6c0:	add	r0, r0, r6
   3f6c4:	str	r0, [r4, #20]
   3f6c8:	mov	r0, r4
   3f6cc:	blx	r2
   3f6d0:	ldr	r1, [r4, #16]
   3f6d4:	ldr	r0, [r4, #20]
   3f6d8:	sub	r5, r5, r6
   3f6dc:	sub	r6, r1, r0
   3f6e0:	cmp	r5, r6
   3f6e4:	bhi	3f6a8 <flatcc_json_printer_uint16_vector_field@@Base+0x238>
   3f6e8:	mov	r1, #32
   3f6ec:	mov	r2, r5
   3f6f0:	bl	14ee8 <memset@plt>
   3f6f4:	ldr	r0, [r4, #20]
   3f6f8:	add	r1, r0, r5
   3f6fc:	str	r1, [r4, #20]
   3f700:	b	3f724 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   3f704:	ldr	r0, [r4, #16]
   3f708:	cmp	r1, r0
   3f70c:	bcc	3f724 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   3f710:	ldr	r2, [r4, #44]	; 0x2c
   3f714:	mov	r0, r4
   3f718:	mov	r1, #0
   3f71c:	blx	r2
   3f720:	ldr	r1, [r4, #20]
   3f724:	ldrh	r0, [r7], #2
   3f728:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   3f72c:	ldr	r1, [r4, #20]
   3f730:	cmp	r9, #0
   3f734:	add	r0, r1, r0
   3f738:	str	r0, [r4, #20]
   3f73c:	bne	3f630 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
   3f740:	ldrb	r1, [r4, #25]
   3f744:	ldr	r0, [r4, #20]
   3f748:	cmp	r1, #0
   3f74c:	beq	3f80c <flatcc_json_printer_uint16_vector_field@@Base+0x39c>
   3f750:	add	r1, r0, #1
   3f754:	str	r1, [r4, #20]
   3f758:	mov	r1, #10
   3f75c:	strb	r1, [r0]
   3f760:	ldr	r0, [r4, #32]
   3f764:	sub	r2, r0, #1
   3f768:	str	r2, [r4, #32]
   3f76c:	ldrb	r3, [r4, #25]
   3f770:	ldr	r0, [r4, #20]
   3f774:	ldr	r1, [r4, #16]
   3f778:	mla	r7, r2, r3, r0
   3f77c:	mul	r5, r2, r3
   3f780:	cmp	r7, r1
   3f784:	bls	3f7f4 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   3f788:	cmp	r0, r1
   3f78c:	bcc	3f7a8 <flatcc_json_printer_uint16_vector_field@@Base+0x338>
   3f790:	ldr	r2, [r4, #44]	; 0x2c
   3f794:	mov	r0, r4
   3f798:	mov	r1, #0
   3f79c:	blx	r2
   3f7a0:	ldr	r1, [r4, #16]
   3f7a4:	ldr	r0, [r4, #20]
   3f7a8:	sub	r6, r1, r0
   3f7ac:	cmp	r6, r5
   3f7b0:	bcs	3f7f4 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   3f7b4:	mov	r1, #32
   3f7b8:	mov	r2, r6
   3f7bc:	bl	14ee8 <memset@plt>
   3f7c0:	ldr	r0, [r4, #20]
   3f7c4:	ldr	r2, [r4, #44]	; 0x2c
   3f7c8:	mov	r1, #0
   3f7cc:	add	r0, r0, r6
   3f7d0:	str	r0, [r4, #20]
   3f7d4:	mov	r0, r4
   3f7d8:	blx	r2
   3f7dc:	ldr	r1, [r4, #16]
   3f7e0:	ldr	r0, [r4, #20]
   3f7e4:	sub	r5, r5, r6
   3f7e8:	sub	r6, r1, r0
   3f7ec:	cmp	r5, r6
   3f7f0:	bhi	3f7b4 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   3f7f4:	mov	r1, #32
   3f7f8:	mov	r2, r5
   3f7fc:	bl	14ee8 <memset@plt>
   3f800:	ldr	r0, [r4, #20]
   3f804:	add	r0, r0, r5
   3f808:	str	r0, [r4, #20]
   3f80c:	add	r1, r0, #1
   3f810:	str	r1, [r4, #20]
   3f814:	mov	r1, #93	; 0x5d
   3f818:	strb	r1, [r0]
   3f81c:	sub	sp, fp, #28
   3f820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f824 <flatcc_json_printer_uint32_vector_field@@Base>:
   3f824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f828:	add	fp, sp, #28
   3f82c:	sub	sp, sp, #4
   3f830:	mov	r4, r0
   3f834:	mov	r0, #4
   3f838:	add	r0, r0, r2, lsl #1
   3f83c:	ldr	r2, [r1, #8]
   3f840:	cmp	r0, r2
   3f844:	bge	3f864 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   3f848:	ldr	r2, [r1, #4]
   3f84c:	add	r0, r2, r0
   3f850:	ldrh	r0, [r0]
   3f854:	cmp	r0, #0
   3f858:	ldrne	r2, [r1]
   3f85c:	addsne	r8, r2, r0
   3f860:	bne	3f86c <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   3f864:	sub	sp, fp, #28
   3f868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f86c:	ldr	r0, [r1, #16]
   3f870:	ldr	r2, [fp, #8]
   3f874:	add	r7, r0, #1
   3f878:	cmp	r0, #0
   3f87c:	str	r7, [r1, #16]
   3f880:	ldrne	r0, [r4, #20]
   3f884:	addne	r1, r0, #1
   3f888:	strne	r1, [r4, #20]
   3f88c:	movne	r1, #44	; 0x2c
   3f890:	strbne	r1, [r0]
   3f894:	mov	r1, r3
   3f898:	ldr	r0, [r8]
   3f89c:	ldr	r7, [r8, r0]!
   3f8a0:	mov	r0, r4
   3f8a4:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3f8a8:	ldr	r1, [r4, #32]
   3f8ac:	ldr	r0, [r4, #20]
   3f8b0:	cmp	r7, #0
   3f8b4:	add	r1, r1, #1
   3f8b8:	str	r1, [r4, #32]
   3f8bc:	add	r1, r0, #1
   3f8c0:	str	r1, [r4, #20]
   3f8c4:	mov	r1, #91	; 0x5b
   3f8c8:	strb	r1, [r0]
   3f8cc:	beq	3faf4 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   3f8d0:	ldrb	r0, [r4, #25]
   3f8d4:	ldr	r1, [r4, #20]
   3f8d8:	cmp	r0, #0
   3f8dc:	beq	3f998 <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   3f8e0:	add	r0, r1, #1
   3f8e4:	str	r0, [r4, #20]
   3f8e8:	mov	r0, #10
   3f8ec:	strb	r0, [r1]
   3f8f0:	ldr	r0, [r4, #20]
   3f8f4:	ldrb	r2, [r4, #25]
   3f8f8:	ldr	r3, [r4, #32]
   3f8fc:	ldr	r1, [r4, #16]
   3f900:	mla	r6, r3, r2, r0
   3f904:	mul	r5, r3, r2
   3f908:	cmp	r6, r1
   3f90c:	bls	3f97c <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   3f910:	cmp	r0, r1
   3f914:	bcc	3f930 <flatcc_json_printer_uint32_vector_field@@Base+0x10c>
   3f918:	ldr	r2, [r4, #44]	; 0x2c
   3f91c:	mov	r0, r4
   3f920:	mov	r1, #0
   3f924:	blx	r2
   3f928:	ldr	r1, [r4, #16]
   3f92c:	ldr	r0, [r4, #20]
   3f930:	sub	r6, r1, r0
   3f934:	cmp	r6, r5
   3f938:	bcs	3f97c <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   3f93c:	mov	r1, #32
   3f940:	mov	r2, r6
   3f944:	bl	14ee8 <memset@plt>
   3f948:	ldr	r0, [r4, #20]
   3f94c:	ldr	r2, [r4, #44]	; 0x2c
   3f950:	mov	r1, #0
   3f954:	add	r0, r0, r6
   3f958:	str	r0, [r4, #20]
   3f95c:	mov	r0, r4
   3f960:	blx	r2
   3f964:	ldr	r1, [r4, #16]
   3f968:	ldr	r0, [r4, #20]
   3f96c:	sub	r5, r5, r6
   3f970:	sub	r6, r1, r0
   3f974:	cmp	r5, r6
   3f978:	bhi	3f93c <flatcc_json_printer_uint32_vector_field@@Base+0x118>
   3f97c:	mov	r1, #32
   3f980:	mov	r2, r5
   3f984:	bl	14ee8 <memset@plt>
   3f988:	ldr	r0, [r4, #20]
   3f98c:	add	r1, r0, r5
   3f990:	str	r1, [r4, #20]
   3f994:	b	3f9b8 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   3f998:	ldr	r0, [r4, #16]
   3f99c:	cmp	r1, r0
   3f9a0:	bcc	3f9b8 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   3f9a4:	ldr	r2, [r4, #44]	; 0x2c
   3f9a8:	mov	r0, r4
   3f9ac:	mov	r1, #0
   3f9b0:	blx	r2
   3f9b4:	ldr	r1, [r4, #20]
   3f9b8:	ldr	r0, [r8, #4]
   3f9bc:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3f9c0:	ldr	r1, [r4, #20]
   3f9c4:	subs	r9, r7, #1
   3f9c8:	add	r0, r1, r0
   3f9cc:	str	r0, [r4, #20]
   3f9d0:	beq	3faf4 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   3f9d4:	ldr	r0, [r4, #20]
   3f9d8:	add	r7, r8, #8
   3f9dc:	mov	r8, #44	; 0x2c
   3f9e0:	mov	sl, #10
   3f9e4:	add	r1, r0, #1
   3f9e8:	sub	r9, r9, #1
   3f9ec:	str	r1, [r4, #20]
   3f9f0:	strb	r8, [r0]
   3f9f4:	ldrb	r0, [r4, #25]
   3f9f8:	ldr	r1, [r4, #20]
   3f9fc:	cmp	r0, #0
   3fa00:	beq	3fab8 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   3fa04:	add	r0, r1, #1
   3fa08:	str	r0, [r4, #20]
   3fa0c:	strb	sl, [r1]
   3fa10:	ldr	r0, [r4, #20]
   3fa14:	ldrb	r2, [r4, #25]
   3fa18:	ldr	r3, [r4, #32]
   3fa1c:	ldr	r1, [r4, #16]
   3fa20:	mla	r6, r3, r2, r0
   3fa24:	mul	r5, r3, r2
   3fa28:	cmp	r6, r1
   3fa2c:	bls	3fa9c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   3fa30:	cmp	r0, r1
   3fa34:	bcc	3fa50 <flatcc_json_printer_uint32_vector_field@@Base+0x22c>
   3fa38:	ldr	r2, [r4, #44]	; 0x2c
   3fa3c:	mov	r0, r4
   3fa40:	mov	r1, #0
   3fa44:	blx	r2
   3fa48:	ldr	r1, [r4, #16]
   3fa4c:	ldr	r0, [r4, #20]
   3fa50:	sub	r6, r1, r0
   3fa54:	cmp	r6, r5
   3fa58:	bcs	3fa9c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   3fa5c:	mov	r1, #32
   3fa60:	mov	r2, r6
   3fa64:	bl	14ee8 <memset@plt>
   3fa68:	ldr	r0, [r4, #20]
   3fa6c:	ldr	r2, [r4, #44]	; 0x2c
   3fa70:	mov	r1, #0
   3fa74:	add	r0, r0, r6
   3fa78:	str	r0, [r4, #20]
   3fa7c:	mov	r0, r4
   3fa80:	blx	r2
   3fa84:	ldr	r1, [r4, #16]
   3fa88:	ldr	r0, [r4, #20]
   3fa8c:	sub	r5, r5, r6
   3fa90:	sub	r6, r1, r0
   3fa94:	cmp	r5, r6
   3fa98:	bhi	3fa5c <flatcc_json_printer_uint32_vector_field@@Base+0x238>
   3fa9c:	mov	r1, #32
   3faa0:	mov	r2, r5
   3faa4:	bl	14ee8 <memset@plt>
   3faa8:	ldr	r0, [r4, #20]
   3faac:	add	r1, r0, r5
   3fab0:	str	r1, [r4, #20]
   3fab4:	b	3fad8 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   3fab8:	ldr	r0, [r4, #16]
   3fabc:	cmp	r1, r0
   3fac0:	bcc	3fad8 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   3fac4:	ldr	r2, [r4, #44]	; 0x2c
   3fac8:	mov	r0, r4
   3facc:	mov	r1, #0
   3fad0:	blx	r2
   3fad4:	ldr	r1, [r4, #20]
   3fad8:	ldr	r0, [r7], #4
   3fadc:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   3fae0:	ldr	r1, [r4, #20]
   3fae4:	cmp	r9, #0
   3fae8:	add	r0, r1, r0
   3faec:	str	r0, [r4, #20]
   3faf0:	bne	3f9e4 <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   3faf4:	ldrb	r1, [r4, #25]
   3faf8:	ldr	r0, [r4, #20]
   3fafc:	cmp	r1, #0
   3fb00:	beq	3fbc0 <flatcc_json_printer_uint32_vector_field@@Base+0x39c>
   3fb04:	add	r1, r0, #1
   3fb08:	str	r1, [r4, #20]
   3fb0c:	mov	r1, #10
   3fb10:	strb	r1, [r0]
   3fb14:	ldr	r0, [r4, #32]
   3fb18:	sub	r2, r0, #1
   3fb1c:	str	r2, [r4, #32]
   3fb20:	ldrb	r3, [r4, #25]
   3fb24:	ldr	r0, [r4, #20]
   3fb28:	ldr	r1, [r4, #16]
   3fb2c:	mla	r7, r2, r3, r0
   3fb30:	mul	r5, r2, r3
   3fb34:	cmp	r7, r1
   3fb38:	bls	3fba8 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   3fb3c:	cmp	r0, r1
   3fb40:	bcc	3fb5c <flatcc_json_printer_uint32_vector_field@@Base+0x338>
   3fb44:	ldr	r2, [r4, #44]	; 0x2c
   3fb48:	mov	r0, r4
   3fb4c:	mov	r1, #0
   3fb50:	blx	r2
   3fb54:	ldr	r1, [r4, #16]
   3fb58:	ldr	r0, [r4, #20]
   3fb5c:	sub	r6, r1, r0
   3fb60:	cmp	r6, r5
   3fb64:	bcs	3fba8 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   3fb68:	mov	r1, #32
   3fb6c:	mov	r2, r6
   3fb70:	bl	14ee8 <memset@plt>
   3fb74:	ldr	r0, [r4, #20]
   3fb78:	ldr	r2, [r4, #44]	; 0x2c
   3fb7c:	mov	r1, #0
   3fb80:	add	r0, r0, r6
   3fb84:	str	r0, [r4, #20]
   3fb88:	mov	r0, r4
   3fb8c:	blx	r2
   3fb90:	ldr	r1, [r4, #16]
   3fb94:	ldr	r0, [r4, #20]
   3fb98:	sub	r5, r5, r6
   3fb9c:	sub	r6, r1, r0
   3fba0:	cmp	r5, r6
   3fba4:	bhi	3fb68 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   3fba8:	mov	r1, #32
   3fbac:	mov	r2, r5
   3fbb0:	bl	14ee8 <memset@plt>
   3fbb4:	ldr	r0, [r4, #20]
   3fbb8:	add	r0, r0, r5
   3fbbc:	str	r0, [r4, #20]
   3fbc0:	add	r1, r0, #1
   3fbc4:	str	r1, [r4, #20]
   3fbc8:	mov	r1, #93	; 0x5d
   3fbcc:	strb	r1, [r0]
   3fbd0:	sub	sp, fp, #28
   3fbd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fbd8 <flatcc_json_printer_uint64_vector_field@@Base>:
   3fbd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fbdc:	add	fp, sp, #28
   3fbe0:	sub	sp, sp, #4
   3fbe4:	mov	r4, r0
   3fbe8:	mov	r0, #4
   3fbec:	add	r0, r0, r2, lsl #1
   3fbf0:	ldr	r2, [r1, #8]
   3fbf4:	cmp	r0, r2
   3fbf8:	bge	3fc18 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   3fbfc:	ldr	r2, [r1, #4]
   3fc00:	add	r0, r2, r0
   3fc04:	ldrh	r0, [r0]
   3fc08:	cmp	r0, #0
   3fc0c:	ldrne	r2, [r1]
   3fc10:	addsne	r8, r2, r0
   3fc14:	bne	3fc20 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   3fc18:	sub	sp, fp, #28
   3fc1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fc20:	ldr	r0, [r1, #16]
   3fc24:	ldr	r2, [fp, #8]
   3fc28:	add	r7, r0, #1
   3fc2c:	cmp	r0, #0
   3fc30:	str	r7, [r1, #16]
   3fc34:	ldrne	r0, [r4, #20]
   3fc38:	addne	r1, r0, #1
   3fc3c:	strne	r1, [r4, #20]
   3fc40:	movne	r1, #44	; 0x2c
   3fc44:	strbne	r1, [r0]
   3fc48:	mov	r1, r3
   3fc4c:	ldr	r0, [r8]
   3fc50:	ldr	r7, [r8, r0]!
   3fc54:	mov	r0, r4
   3fc58:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   3fc5c:	ldr	r1, [r4, #32]
   3fc60:	ldr	r0, [r4, #20]
   3fc64:	cmp	r7, #0
   3fc68:	add	r1, r1, #1
   3fc6c:	str	r1, [r4, #32]
   3fc70:	add	r1, r0, #1
   3fc74:	str	r1, [r4, #20]
   3fc78:	mov	r1, #91	; 0x5b
   3fc7c:	strb	r1, [r0]
   3fc80:	beq	3feac <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   3fc84:	ldrb	r0, [r4, #25]
   3fc88:	ldr	r2, [r4, #20]
   3fc8c:	cmp	r0, #0
   3fc90:	beq	3fd4c <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   3fc94:	add	r0, r2, #1
   3fc98:	str	r0, [r4, #20]
   3fc9c:	mov	r0, #10
   3fca0:	strb	r0, [r2]
   3fca4:	ldr	r0, [r4, #20]
   3fca8:	ldrb	r2, [r4, #25]
   3fcac:	ldr	r3, [r4, #32]
   3fcb0:	ldr	r1, [r4, #16]
   3fcb4:	mla	r6, r3, r2, r0
   3fcb8:	mul	r5, r3, r2
   3fcbc:	cmp	r6, r1
   3fcc0:	bls	3fd30 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   3fcc4:	cmp	r0, r1
   3fcc8:	bcc	3fce4 <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   3fccc:	ldr	r2, [r4, #44]	; 0x2c
   3fcd0:	mov	r0, r4
   3fcd4:	mov	r1, #0
   3fcd8:	blx	r2
   3fcdc:	ldr	r1, [r4, #16]
   3fce0:	ldr	r0, [r4, #20]
   3fce4:	sub	r6, r1, r0
   3fce8:	cmp	r6, r5
   3fcec:	bcs	3fd30 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   3fcf0:	mov	r1, #32
   3fcf4:	mov	r2, r6
   3fcf8:	bl	14ee8 <memset@plt>
   3fcfc:	ldr	r0, [r4, #20]
   3fd00:	ldr	r2, [r4, #44]	; 0x2c
   3fd04:	mov	r1, #0
   3fd08:	add	r0, r0, r6
   3fd0c:	str	r0, [r4, #20]
   3fd10:	mov	r0, r4
   3fd14:	blx	r2
   3fd18:	ldr	r1, [r4, #16]
   3fd1c:	ldr	r0, [r4, #20]
   3fd20:	sub	r5, r5, r6
   3fd24:	sub	r6, r1, r0
   3fd28:	cmp	r5, r6
   3fd2c:	bhi	3fcf0 <flatcc_json_printer_uint64_vector_field@@Base+0x118>
   3fd30:	mov	r1, #32
   3fd34:	mov	r2, r5
   3fd38:	bl	14ee8 <memset@plt>
   3fd3c:	ldr	r0, [r4, #20]
   3fd40:	add	r2, r0, r5
   3fd44:	str	r2, [r4, #20]
   3fd48:	b	3fd6c <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   3fd4c:	ldr	r0, [r4, #16]
   3fd50:	cmp	r2, r0
   3fd54:	bcc	3fd6c <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   3fd58:	ldr	r2, [r4, #44]	; 0x2c
   3fd5c:	mov	r0, r4
   3fd60:	mov	r1, #0
   3fd64:	blx	r2
   3fd68:	ldr	r2, [r4, #20]
   3fd6c:	ldrd	r0, [r8, #4]
   3fd70:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3fd74:	ldr	r1, [r4, #20]
   3fd78:	subs	r9, r7, #1
   3fd7c:	add	r0, r1, r0
   3fd80:	str	r0, [r4, #20]
   3fd84:	beq	3feac <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   3fd88:	ldr	r0, [r4, #20]
   3fd8c:	add	r7, r8, #12
   3fd90:	mov	r8, #44	; 0x2c
   3fd94:	mov	sl, #10
   3fd98:	add	r1, r0, #1
   3fd9c:	sub	r9, r9, #1
   3fda0:	str	r1, [r4, #20]
   3fda4:	strb	r8, [r0]
   3fda8:	ldrb	r0, [r4, #25]
   3fdac:	ldr	r2, [r4, #20]
   3fdb0:	cmp	r0, #0
   3fdb4:	beq	3fe6c <flatcc_json_printer_uint64_vector_field@@Base+0x294>
   3fdb8:	add	r0, r2, #1
   3fdbc:	str	r0, [r4, #20]
   3fdc0:	strb	sl, [r2]
   3fdc4:	ldr	r0, [r4, #20]
   3fdc8:	ldrb	r2, [r4, #25]
   3fdcc:	ldr	r3, [r4, #32]
   3fdd0:	ldr	r1, [r4, #16]
   3fdd4:	mla	r6, r3, r2, r0
   3fdd8:	mul	r5, r3, r2
   3fddc:	cmp	r6, r1
   3fde0:	bls	3fe50 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3fde4:	cmp	r0, r1
   3fde8:	bcc	3fe04 <flatcc_json_printer_uint64_vector_field@@Base+0x22c>
   3fdec:	ldr	r2, [r4, #44]	; 0x2c
   3fdf0:	mov	r0, r4
   3fdf4:	mov	r1, #0
   3fdf8:	blx	r2
   3fdfc:	ldr	r1, [r4, #16]
   3fe00:	ldr	r0, [r4, #20]
   3fe04:	sub	r6, r1, r0
   3fe08:	cmp	r6, r5
   3fe0c:	bcs	3fe50 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3fe10:	mov	r1, #32
   3fe14:	mov	r2, r6
   3fe18:	bl	14ee8 <memset@plt>
   3fe1c:	ldr	r0, [r4, #20]
   3fe20:	ldr	r2, [r4, #44]	; 0x2c
   3fe24:	mov	r1, #0
   3fe28:	add	r0, r0, r6
   3fe2c:	str	r0, [r4, #20]
   3fe30:	mov	r0, r4
   3fe34:	blx	r2
   3fe38:	ldr	r1, [r4, #16]
   3fe3c:	ldr	r0, [r4, #20]
   3fe40:	sub	r5, r5, r6
   3fe44:	sub	r6, r1, r0
   3fe48:	cmp	r5, r6
   3fe4c:	bhi	3fe10 <flatcc_json_printer_uint64_vector_field@@Base+0x238>
   3fe50:	mov	r1, #32
   3fe54:	mov	r2, r5
   3fe58:	bl	14ee8 <memset@plt>
   3fe5c:	ldr	r0, [r4, #20]
   3fe60:	add	r2, r0, r5
   3fe64:	str	r2, [r4, #20]
   3fe68:	b	3fe8c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   3fe6c:	ldr	r0, [r4, #16]
   3fe70:	cmp	r2, r0
   3fe74:	bcc	3fe8c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   3fe78:	ldr	r2, [r4, #44]	; 0x2c
   3fe7c:	mov	r0, r4
   3fe80:	mov	r1, #0
   3fe84:	blx	r2
   3fe88:	ldr	r2, [r4, #20]
   3fe8c:	ldrd	r0, [r7]
   3fe90:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   3fe94:	ldr	r1, [r4, #20]
   3fe98:	add	r7, r7, #8
   3fe9c:	cmp	r9, #0
   3fea0:	add	r0, r1, r0
   3fea4:	str	r0, [r4, #20]
   3fea8:	bne	3fd98 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
   3feac:	ldrb	r1, [r4, #25]
   3feb0:	ldr	r0, [r4, #20]
   3feb4:	cmp	r1, #0
   3feb8:	beq	3ff78 <flatcc_json_printer_uint64_vector_field@@Base+0x3a0>
   3febc:	add	r1, r0, #1
   3fec0:	str	r1, [r4, #20]
   3fec4:	mov	r1, #10
   3fec8:	strb	r1, [r0]
   3fecc:	ldr	r0, [r4, #32]
   3fed0:	sub	r2, r0, #1
   3fed4:	str	r2, [r4, #32]
   3fed8:	ldrb	r3, [r4, #25]
   3fedc:	ldr	r0, [r4, #20]
   3fee0:	ldr	r1, [r4, #16]
   3fee4:	mla	r7, r2, r3, r0
   3fee8:	mul	r5, r2, r3
   3feec:	cmp	r7, r1
   3fef0:	bls	3ff60 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   3fef4:	cmp	r0, r1
   3fef8:	bcc	3ff14 <flatcc_json_printer_uint64_vector_field@@Base+0x33c>
   3fefc:	ldr	r2, [r4, #44]	; 0x2c
   3ff00:	mov	r0, r4
   3ff04:	mov	r1, #0
   3ff08:	blx	r2
   3ff0c:	ldr	r1, [r4, #16]
   3ff10:	ldr	r0, [r4, #20]
   3ff14:	sub	r6, r1, r0
   3ff18:	cmp	r6, r5
   3ff1c:	bcs	3ff60 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   3ff20:	mov	r1, #32
   3ff24:	mov	r2, r6
   3ff28:	bl	14ee8 <memset@plt>
   3ff2c:	ldr	r0, [r4, #20]
   3ff30:	ldr	r2, [r4, #44]	; 0x2c
   3ff34:	mov	r1, #0
   3ff38:	add	r0, r0, r6
   3ff3c:	str	r0, [r4, #20]
   3ff40:	mov	r0, r4
   3ff44:	blx	r2
   3ff48:	ldr	r1, [r4, #16]
   3ff4c:	ldr	r0, [r4, #20]
   3ff50:	sub	r5, r5, r6
   3ff54:	sub	r6, r1, r0
   3ff58:	cmp	r5, r6
   3ff5c:	bhi	3ff20 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   3ff60:	mov	r1, #32
   3ff64:	mov	r2, r5
   3ff68:	bl	14ee8 <memset@plt>
   3ff6c:	ldr	r0, [r4, #20]
   3ff70:	add	r0, r0, r5
   3ff74:	str	r0, [r4, #20]
   3ff78:	add	r1, r0, #1
   3ff7c:	str	r1, [r4, #20]
   3ff80:	mov	r1, #93	; 0x5d
   3ff84:	strb	r1, [r0]
   3ff88:	sub	sp, fp, #28
   3ff8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ff90 <flatcc_json_printer_int8_vector_field@@Base>:
   3ff90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ff94:	add	fp, sp, #28
   3ff98:	sub	sp, sp, #4
   3ff9c:	mov	r4, r0
   3ffa0:	mov	r0, #4
   3ffa4:	add	r0, r0, r2, lsl #1
   3ffa8:	ldr	r2, [r1, #8]
   3ffac:	cmp	r0, r2
   3ffb0:	bge	3ffd0 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   3ffb4:	ldr	r2, [r1, #4]
   3ffb8:	add	r0, r2, r0
   3ffbc:	ldrh	r0, [r0]
   3ffc0:	cmp	r0, #0
   3ffc4:	ldrne	r2, [r1]
   3ffc8:	addsne	r9, r2, r0
   3ffcc:	bne	3ffd8 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   3ffd0:	sub	sp, fp, #28
   3ffd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ffd8:	ldr	r0, [r1, #16]
   3ffdc:	ldr	r2, [fp, #8]
   3ffe0:	add	r7, r0, #1
   3ffe4:	cmp	r0, #0
   3ffe8:	str	r7, [r1, #16]
   3ffec:	ldrne	r0, [r4, #20]
   3fff0:	addne	r1, r0, #1
   3fff4:	strne	r1, [r4, #20]
   3fff8:	movne	r1, #44	; 0x2c
   3fffc:	strbne	r1, [r0]
   40000:	mov	r1, r3
   40004:	ldr	r0, [r9]
   40008:	ldr	r8, [r9, r0]!
   4000c:	mov	r0, r4
   40010:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   40014:	ldr	r1, [r4, #32]
   40018:	ldr	r0, [r4, #20]
   4001c:	cmp	r8, #0
   40020:	add	r1, r1, #1
   40024:	str	r1, [r4, #32]
   40028:	add	r1, r0, #1
   4002c:	str	r1, [r4, #20]
   40030:	mov	r1, #91	; 0x5b
   40034:	strb	r1, [r0]
   40038:	beq	403e4 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   4003c:	ldrb	r1, [r4, #25]
   40040:	ldr	r0, [r4, #20]
   40044:	cmp	r1, #0
   40048:	beq	40104 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   4004c:	add	r1, r0, #1
   40050:	str	r1, [r4, #20]
   40054:	mov	r1, #10
   40058:	strb	r1, [r0]
   4005c:	ldr	r0, [r4, #20]
   40060:	ldrb	r2, [r4, #25]
   40064:	ldr	r3, [r4, #32]
   40068:	ldr	r1, [r4, #16]
   4006c:	mla	r7, r3, r2, r0
   40070:	mul	r5, r3, r2
   40074:	cmp	r7, r1
   40078:	bls	400e8 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   4007c:	cmp	r0, r1
   40080:	bcc	4009c <flatcc_json_printer_int8_vector_field@@Base+0x10c>
   40084:	ldr	r2, [r4, #44]	; 0x2c
   40088:	mov	r0, r4
   4008c:	mov	r1, #0
   40090:	blx	r2
   40094:	ldr	r1, [r4, #16]
   40098:	ldr	r0, [r4, #20]
   4009c:	sub	r6, r1, r0
   400a0:	cmp	r6, r5
   400a4:	bcs	400e8 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   400a8:	mov	r1, #32
   400ac:	mov	r2, r6
   400b0:	bl	14ee8 <memset@plt>
   400b4:	ldr	r0, [r4, #20]
   400b8:	ldr	r2, [r4, #44]	; 0x2c
   400bc:	mov	r1, #0
   400c0:	add	r0, r0, r6
   400c4:	str	r0, [r4, #20]
   400c8:	mov	r0, r4
   400cc:	blx	r2
   400d0:	ldr	r1, [r4, #16]
   400d4:	ldr	r0, [r4, #20]
   400d8:	sub	r5, r5, r6
   400dc:	sub	r6, r1, r0
   400e0:	cmp	r5, r6
   400e4:	bhi	400a8 <flatcc_json_printer_int8_vector_field@@Base+0x118>
   400e8:	mov	r1, #32
   400ec:	mov	r2, r5
   400f0:	bl	14ee8 <memset@plt>
   400f4:	ldr	r0, [r4, #20]
   400f8:	add	r0, r0, r5
   400fc:	str	r0, [r4, #20]
   40100:	b	40124 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   40104:	ldr	r1, [r4, #16]
   40108:	cmp	r0, r1
   4010c:	bcc	40124 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   40110:	ldr	r2, [r4, #44]	; 0x2c
   40114:	mov	r0, r4
   40118:	mov	r1, #0
   4011c:	blx	r2
   40120:	ldr	r0, [r4, #20]
   40124:	ldrb	r1, [r9, #4]
   40128:	sxtb	r2, r1
   4012c:	lsr	r1, r1, #7
   40130:	cmn	r2, #1
   40134:	movle	r3, #45	; 0x2d
   40138:	rsble	r2, r2, #0
   4013c:	strble	r3, [r0], #1
   40140:	uxtb	r3, r2
   40144:	cmp	r3, #100	; 0x64
   40148:	bcc	40194 <flatcc_json_printer_int8_vector_field@@Base+0x204>
   4014c:	mov	r2, #0
   40150:	strb	r2, [r0, #3]
   40154:	movw	r2, #34079	; 0x851f
   40158:	movt	r2, #20971	; 0x51eb
   4015c:	umull	r2, r7, r3, r2
   40160:	mov	r2, #48	; 0x30
   40164:	orr	r2, r2, r7, lsr #5
   40168:	strb	r2, [r0]
   4016c:	lsr	r2, r7, #5
   40170:	mov	r7, #100	; 0x64
   40174:	mls	r2, r2, r7, r3
   40178:	ldr	r3, [pc, #840]	; 404c8 <flatcc_json_printer_int8_vector_field@@Base+0x538>
   4017c:	add	r3, pc, r3
   40180:	add	r2, r3, r2, lsl #1
   40184:	ldrh	r2, [r2]
   40188:	strh	r2, [r0, #1]
   4018c:	mov	r0, #3
   40190:	b	401ec <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   40194:	cmp	r3, #10
   40198:	bcc	401d8 <flatcc_json_printer_int8_vector_field@@Base+0x248>
   4019c:	mov	r2, #0
   401a0:	strb	r2, [r0, #2]
   401a4:	movw	r2, #34079	; 0x851f
   401a8:	movt	r2, #20971	; 0x51eb
   401ac:	umull	r2, r7, r3, r2
   401b0:	lsr	r2, r7, #5
   401b4:	mov	r7, #100	; 0x64
   401b8:	mls	r2, r2, r7, r3
   401bc:	ldr	r3, [pc, #776]	; 404cc <flatcc_json_printer_int8_vector_field@@Base+0x53c>
   401c0:	add	r3, pc, r3
   401c4:	add	r2, r3, r2, lsl #1
   401c8:	ldrh	r2, [r2]
   401cc:	strh	r2, [r0]
   401d0:	mov	r0, #2
   401d4:	b	401ec <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   401d8:	mov	r3, #0
   401dc:	add	r2, r2, #48	; 0x30
   401e0:	strb	r3, [r0, #1]
   401e4:	strb	r2, [r0]
   401e8:	mov	r0, #1
   401ec:	add	r0, r0, r1
   401f0:	ldr	r1, [r4, #20]
   401f4:	subs	r8, r8, #1
   401f8:	add	r0, r1, r0
   401fc:	str	r0, [r4, #20]
   40200:	beq	403e4 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   40204:	ldr	r0, [r4, #20]
   40208:	add	r7, r9, #5
   4020c:	mov	r9, #44	; 0x2c
   40210:	mov	sl, #0
   40214:	add	r1, r0, #1
   40218:	str	r1, [r4, #20]
   4021c:	strb	r9, [r0]
   40220:	ldrb	r1, [r4, #25]
   40224:	ldr	r0, [r4, #20]
   40228:	cmp	r1, #0
   4022c:	beq	402e8 <flatcc_json_printer_int8_vector_field@@Base+0x358>
   40230:	add	r1, r0, #1
   40234:	str	r1, [r4, #20]
   40238:	mov	r1, #10
   4023c:	strb	r1, [r0]
   40240:	ldr	r0, [r4, #20]
   40244:	ldrb	r2, [r4, #25]
   40248:	ldr	r3, [r4, #32]
   4024c:	ldr	r1, [r4, #16]
   40250:	mla	r6, r3, r2, r0
   40254:	mul	r5, r3, r2
   40258:	cmp	r6, r1
   4025c:	bls	402cc <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   40260:	cmp	r0, r1
   40264:	bcc	40280 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   40268:	ldr	r2, [r4, #44]	; 0x2c
   4026c:	mov	r0, r4
   40270:	mov	r1, #0
   40274:	blx	r2
   40278:	ldr	r1, [r4, #16]
   4027c:	ldr	r0, [r4, #20]
   40280:	sub	r6, r1, r0
   40284:	cmp	r6, r5
   40288:	bcs	402cc <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   4028c:	mov	r1, #32
   40290:	mov	r2, r6
   40294:	bl	14ee8 <memset@plt>
   40298:	ldr	r0, [r4, #20]
   4029c:	ldr	r2, [r4, #44]	; 0x2c
   402a0:	mov	r1, #0
   402a4:	add	r0, r0, r6
   402a8:	str	r0, [r4, #20]
   402ac:	mov	r0, r4
   402b0:	blx	r2
   402b4:	ldr	r1, [r4, #16]
   402b8:	ldr	r0, [r4, #20]
   402bc:	sub	r5, r5, r6
   402c0:	sub	r6, r1, r0
   402c4:	cmp	r5, r6
   402c8:	bhi	4028c <flatcc_json_printer_int8_vector_field@@Base+0x2fc>
   402cc:	mov	r1, #32
   402d0:	mov	r2, r5
   402d4:	bl	14ee8 <memset@plt>
   402d8:	ldr	r0, [r4, #20]
   402dc:	add	r0, r0, r5
   402e0:	str	r0, [r4, #20]
   402e4:	b	40308 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   402e8:	ldr	r1, [r4, #16]
   402ec:	cmp	r0, r1
   402f0:	bcc	40308 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   402f4:	ldr	r2, [r4, #44]	; 0x2c
   402f8:	mov	r0, r4
   402fc:	mov	r1, #0
   40300:	blx	r2
   40304:	ldr	r0, [r4, #20]
   40308:	ldrb	r1, [r7]
   4030c:	sub	r8, r8, #1
   40310:	sxtb	r2, r1
   40314:	lsr	r1, r1, #7
   40318:	cmn	r2, #1
   4031c:	movle	r3, #45	; 0x2d
   40320:	rsble	r2, r2, #0
   40324:	strble	r3, [r0], #1
   40328:	uxtb	r3, r2
   4032c:	cmp	r3, #100	; 0x64
   40330:	bcc	40378 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   40334:	movw	r2, #34079	; 0x851f
   40338:	strb	sl, [r0, #3]
   4033c:	movt	r2, #20971	; 0x51eb
   40340:	umull	r2, r6, r3, r2
   40344:	mov	r2, #48	; 0x30
   40348:	orr	r2, r2, r6, lsr #5
   4034c:	strb	r2, [r0]
   40350:	lsr	r2, r6, #5
   40354:	mov	r6, #100	; 0x64
   40358:	mls	r2, r2, r6, r3
   4035c:	ldr	r3, [pc, #364]	; 404d0 <flatcc_json_printer_int8_vector_field@@Base+0x540>
   40360:	add	r3, pc, r3
   40364:	add	r2, r3, r2, lsl #1
   40368:	ldrh	r2, [r2]
   4036c:	strh	r2, [r0, #1]
   40370:	mov	r0, #3
   40374:	b	403c8 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   40378:	cmp	r3, #10
   4037c:	bcc	403b8 <flatcc_json_printer_int8_vector_field@@Base+0x428>
   40380:	movw	r2, #34079	; 0x851f
   40384:	strb	sl, [r0, #2]
   40388:	movt	r2, #20971	; 0x51eb
   4038c:	umull	r2, r6, r3, r2
   40390:	lsr	r2, r6, #5
   40394:	mov	r6, #100	; 0x64
   40398:	mls	r2, r2, r6, r3
   4039c:	ldr	r3, [pc, #304]	; 404d4 <flatcc_json_printer_int8_vector_field@@Base+0x544>
   403a0:	add	r3, pc, r3
   403a4:	add	r2, r3, r2, lsl #1
   403a8:	ldrh	r2, [r2]
   403ac:	strh	r2, [r0]
   403b0:	mov	r0, #2
   403b4:	b	403c8 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   403b8:	add	r2, r2, #48	; 0x30
   403bc:	strb	sl, [r0, #1]
   403c0:	strb	r2, [r0]
   403c4:	mov	r0, #1
   403c8:	add	r0, r0, r1
   403cc:	ldr	r1, [r4, #20]
   403d0:	add	r7, r7, #1
   403d4:	cmp	r8, #0
   403d8:	add	r0, r1, r0
   403dc:	str	r0, [r4, #20]
   403e0:	bne	40214 <flatcc_json_printer_int8_vector_field@@Base+0x284>
   403e4:	ldrb	r1, [r4, #25]
   403e8:	ldr	r0, [r4, #20]
   403ec:	cmp	r1, #0
   403f0:	beq	404b0 <flatcc_json_printer_int8_vector_field@@Base+0x520>
   403f4:	add	r1, r0, #1
   403f8:	str	r1, [r4, #20]
   403fc:	mov	r1, #10
   40400:	strb	r1, [r0]
   40404:	ldr	r0, [r4, #32]
   40408:	sub	r2, r0, #1
   4040c:	str	r2, [r4, #32]
   40410:	ldrb	r3, [r4, #25]
   40414:	ldr	r0, [r4, #20]
   40418:	ldr	r1, [r4, #16]
   4041c:	mla	r7, r2, r3, r0
   40420:	mul	r5, r2, r3
   40424:	cmp	r7, r1
   40428:	bls	40498 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   4042c:	cmp	r0, r1
   40430:	bcc	4044c <flatcc_json_printer_int8_vector_field@@Base+0x4bc>
   40434:	ldr	r2, [r4, #44]	; 0x2c
   40438:	mov	r0, r4
   4043c:	mov	r1, #0
   40440:	blx	r2
   40444:	ldr	r1, [r4, #16]
   40448:	ldr	r0, [r4, #20]
   4044c:	sub	r6, r1, r0
   40450:	cmp	r6, r5
   40454:	bcs	40498 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   40458:	mov	r1, #32
   4045c:	mov	r2, r6
   40460:	bl	14ee8 <memset@plt>
   40464:	ldr	r0, [r4, #20]
   40468:	ldr	r2, [r4, #44]	; 0x2c
   4046c:	mov	r1, #0
   40470:	add	r0, r0, r6
   40474:	str	r0, [r4, #20]
   40478:	mov	r0, r4
   4047c:	blx	r2
   40480:	ldr	r1, [r4, #16]
   40484:	ldr	r0, [r4, #20]
   40488:	sub	r5, r5, r6
   4048c:	sub	r6, r1, r0
   40490:	cmp	r5, r6
   40494:	bhi	40458 <flatcc_json_printer_int8_vector_field@@Base+0x4c8>
   40498:	mov	r1, #32
   4049c:	mov	r2, r5
   404a0:	bl	14ee8 <memset@plt>
   404a4:	ldr	r0, [r4, #20]
   404a8:	add	r0, r0, r5
   404ac:	str	r0, [r4, #20]
   404b0:	add	r1, r0, #1
   404b4:	str	r1, [r4, #20]
   404b8:	mov	r1, #93	; 0x5d
   404bc:	strb	r1, [r0]
   404c0:	sub	sp, fp, #28
   404c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   404c8:	andeq	sp, r0, r3, asr #23
   404cc:	andeq	sp, r0, pc, ror fp
   404d0:	ldrdeq	sp, [r0], -pc	; <UNPREDICTABLE>
   404d4:	muleq	r0, pc, r9	; <UNPREDICTABLE>

000404d8 <flatcc_json_printer_int16_vector_field@@Base>:
   404d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   404dc:	add	fp, sp, #28
   404e0:	sub	sp, sp, #4
   404e4:	mov	r4, r0
   404e8:	mov	r0, #4
   404ec:	add	r0, r0, r2, lsl #1
   404f0:	ldr	r2, [r1, #8]
   404f4:	cmp	r0, r2
   404f8:	bge	40518 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   404fc:	ldr	r2, [r1, #4]
   40500:	add	r0, r2, r0
   40504:	ldrh	r0, [r0]
   40508:	cmp	r0, #0
   4050c:	ldrne	r2, [r1]
   40510:	addsne	r8, r2, r0
   40514:	bne	40520 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   40518:	sub	sp, fp, #28
   4051c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40520:	ldr	r0, [r1, #16]
   40524:	ldr	r2, [fp, #8]
   40528:	add	r7, r0, #1
   4052c:	cmp	r0, #0
   40530:	str	r7, [r1, #16]
   40534:	ldrne	r0, [r4, #20]
   40538:	addne	r1, r0, #1
   4053c:	strne	r1, [r4, #20]
   40540:	movne	r1, #44	; 0x2c
   40544:	strbne	r1, [r0]
   40548:	mov	r1, r3
   4054c:	ldr	r0, [r8]
   40550:	ldr	r7, [r8, r0]!
   40554:	mov	r0, r4
   40558:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   4055c:	ldr	r1, [r4, #32]
   40560:	ldr	r0, [r4, #20]
   40564:	cmp	r7, #0
   40568:	add	r1, r1, #1
   4056c:	str	r1, [r4, #32]
   40570:	add	r1, r0, #1
   40574:	str	r1, [r4, #20]
   40578:	mov	r1, #91	; 0x5b
   4057c:	strb	r1, [r0]
   40580:	beq	407ec <flatcc_json_printer_int16_vector_field@@Base+0x314>
   40584:	ldrb	r0, [r4, #25]
   40588:	ldr	r1, [r4, #20]
   4058c:	cmp	r0, #0
   40590:	beq	4064c <flatcc_json_printer_int16_vector_field@@Base+0x174>
   40594:	add	r0, r1, #1
   40598:	str	r0, [r4, #20]
   4059c:	mov	r0, #10
   405a0:	strb	r0, [r1]
   405a4:	ldr	r0, [r4, #20]
   405a8:	ldrb	r2, [r4, #25]
   405ac:	ldr	r3, [r4, #32]
   405b0:	ldr	r1, [r4, #16]
   405b4:	mla	r6, r3, r2, r0
   405b8:	mul	r5, r3, r2
   405bc:	cmp	r6, r1
   405c0:	bls	40630 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   405c4:	cmp	r0, r1
   405c8:	bcc	405e4 <flatcc_json_printer_int16_vector_field@@Base+0x10c>
   405cc:	ldr	r2, [r4, #44]	; 0x2c
   405d0:	mov	r0, r4
   405d4:	mov	r1, #0
   405d8:	blx	r2
   405dc:	ldr	r1, [r4, #16]
   405e0:	ldr	r0, [r4, #20]
   405e4:	sub	r6, r1, r0
   405e8:	cmp	r6, r5
   405ec:	bcs	40630 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   405f0:	mov	r1, #32
   405f4:	mov	r2, r6
   405f8:	bl	14ee8 <memset@plt>
   405fc:	ldr	r0, [r4, #20]
   40600:	ldr	r2, [r4, #44]	; 0x2c
   40604:	mov	r1, #0
   40608:	add	r0, r0, r6
   4060c:	str	r0, [r4, #20]
   40610:	mov	r0, r4
   40614:	blx	r2
   40618:	ldr	r1, [r4, #16]
   4061c:	ldr	r0, [r4, #20]
   40620:	sub	r5, r5, r6
   40624:	sub	r6, r1, r0
   40628:	cmp	r5, r6
   4062c:	bhi	405f0 <flatcc_json_printer_int16_vector_field@@Base+0x118>
   40630:	mov	r1, #32
   40634:	mov	r2, r5
   40638:	bl	14ee8 <memset@plt>
   4063c:	ldr	r0, [r4, #20]
   40640:	add	r1, r0, r5
   40644:	str	r1, [r4, #20]
   40648:	b	4066c <flatcc_json_printer_int16_vector_field@@Base+0x194>
   4064c:	ldr	r0, [r4, #16]
   40650:	cmp	r1, r0
   40654:	bcc	4066c <flatcc_json_printer_int16_vector_field@@Base+0x194>
   40658:	ldr	r2, [r4, #44]	; 0x2c
   4065c:	mov	r0, r4
   40660:	mov	r1, #0
   40664:	blx	r2
   40668:	ldr	r1, [r4, #20]
   4066c:	ldrh	r0, [r8, #4]
   40670:	lsr	r5, r0, #15
   40674:	sxth	r0, r0
   40678:	cmn	r0, #1
   4067c:	rsble	r0, r0, #0
   40680:	movle	r2, #45	; 0x2d
   40684:	strble	r2, [r1], #1
   40688:	uxth	r0, r0
   4068c:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   40690:	ldr	r1, [r4, #20]
   40694:	add	r0, r0, r5
   40698:	subs	r9, r7, #1
   4069c:	add	r0, r1, r0
   406a0:	str	r0, [r4, #20]
   406a4:	beq	407ec <flatcc_json_printer_int16_vector_field@@Base+0x314>
   406a8:	ldr	r0, [r4, #20]
   406ac:	add	r7, r8, #6
   406b0:	mov	r8, #44	; 0x2c
   406b4:	mov	sl, #10
   406b8:	add	r1, r0, #1
   406bc:	str	r1, [r4, #20]
   406c0:	strb	r8, [r0]
   406c4:	ldrb	r0, [r4, #25]
   406c8:	ldr	r1, [r4, #20]
   406cc:	cmp	r0, #0
   406d0:	beq	40788 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
   406d4:	add	r0, r1, #1
   406d8:	str	r0, [r4, #20]
   406dc:	strb	sl, [r1]
   406e0:	ldr	r0, [r4, #20]
   406e4:	ldrb	r2, [r4, #25]
   406e8:	ldr	r3, [r4, #32]
   406ec:	ldr	r1, [r4, #16]
   406f0:	mla	r6, r3, r2, r0
   406f4:	mul	r5, r3, r2
   406f8:	cmp	r6, r1
   406fc:	bls	4076c <flatcc_json_printer_int16_vector_field@@Base+0x294>
   40700:	cmp	r0, r1
   40704:	bcc	40720 <flatcc_json_printer_int16_vector_field@@Base+0x248>
   40708:	ldr	r2, [r4, #44]	; 0x2c
   4070c:	mov	r0, r4
   40710:	mov	r1, #0
   40714:	blx	r2
   40718:	ldr	r1, [r4, #16]
   4071c:	ldr	r0, [r4, #20]
   40720:	sub	r6, r1, r0
   40724:	cmp	r6, r5
   40728:	bcs	4076c <flatcc_json_printer_int16_vector_field@@Base+0x294>
   4072c:	mov	r1, #32
   40730:	mov	r2, r6
   40734:	bl	14ee8 <memset@plt>
   40738:	ldr	r0, [r4, #20]
   4073c:	ldr	r2, [r4, #44]	; 0x2c
   40740:	mov	r1, #0
   40744:	add	r0, r0, r6
   40748:	str	r0, [r4, #20]
   4074c:	mov	r0, r4
   40750:	blx	r2
   40754:	ldr	r1, [r4, #16]
   40758:	ldr	r0, [r4, #20]
   4075c:	sub	r5, r5, r6
   40760:	sub	r6, r1, r0
   40764:	cmp	r5, r6
   40768:	bhi	4072c <flatcc_json_printer_int16_vector_field@@Base+0x254>
   4076c:	mov	r1, #32
   40770:	mov	r2, r5
   40774:	bl	14ee8 <memset@plt>
   40778:	ldr	r0, [r4, #20]
   4077c:	add	r1, r0, r5
   40780:	str	r1, [r4, #20]
   40784:	b	407a8 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   40788:	ldr	r0, [r4, #16]
   4078c:	cmp	r1, r0
   40790:	bcc	407a8 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   40794:	ldr	r2, [r4, #44]	; 0x2c
   40798:	mov	r0, r4
   4079c:	mov	r1, #0
   407a0:	blx	r2
   407a4:	ldr	r1, [r4, #20]
   407a8:	ldrh	r0, [r7]
   407ac:	sub	r9, r9, #1
   407b0:	lsr	r5, r0, #15
   407b4:	sxth	r0, r0
   407b8:	cmn	r0, #1
   407bc:	rsble	r0, r0, #0
   407c0:	movle	r2, #45	; 0x2d
   407c4:	strble	r2, [r1], #1
   407c8:	uxth	r0, r0
   407cc:	bl	3b694 <flatcc_json_printer_uint16@@Base+0x2c>
   407d0:	ldr	r1, [r4, #20]
   407d4:	add	r0, r0, r5
   407d8:	add	r7, r7, #2
   407dc:	cmp	r9, #0
   407e0:	add	r0, r1, r0
   407e4:	str	r0, [r4, #20]
   407e8:	bne	406b8 <flatcc_json_printer_int16_vector_field@@Base+0x1e0>
   407ec:	ldrb	r1, [r4, #25]
   407f0:	ldr	r0, [r4, #20]
   407f4:	cmp	r1, #0
   407f8:	beq	408b8 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
   407fc:	add	r1, r0, #1
   40800:	str	r1, [r4, #20]
   40804:	mov	r1, #10
   40808:	strb	r1, [r0]
   4080c:	ldr	r0, [r4, #32]
   40810:	sub	r2, r0, #1
   40814:	str	r2, [r4, #32]
   40818:	ldrb	r3, [r4, #25]
   4081c:	ldr	r0, [r4, #20]
   40820:	ldr	r1, [r4, #16]
   40824:	mla	r7, r2, r3, r0
   40828:	mul	r5, r2, r3
   4082c:	cmp	r7, r1
   40830:	bls	408a0 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   40834:	cmp	r0, r1
   40838:	bcc	40854 <flatcc_json_printer_int16_vector_field@@Base+0x37c>
   4083c:	ldr	r2, [r4, #44]	; 0x2c
   40840:	mov	r0, r4
   40844:	mov	r1, #0
   40848:	blx	r2
   4084c:	ldr	r1, [r4, #16]
   40850:	ldr	r0, [r4, #20]
   40854:	sub	r6, r1, r0
   40858:	cmp	r6, r5
   4085c:	bcs	408a0 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   40860:	mov	r1, #32
   40864:	mov	r2, r6
   40868:	bl	14ee8 <memset@plt>
   4086c:	ldr	r0, [r4, #20]
   40870:	ldr	r2, [r4, #44]	; 0x2c
   40874:	mov	r1, #0
   40878:	add	r0, r0, r6
   4087c:	str	r0, [r4, #20]
   40880:	mov	r0, r4
   40884:	blx	r2
   40888:	ldr	r1, [r4, #16]
   4088c:	ldr	r0, [r4, #20]
   40890:	sub	r5, r5, r6
   40894:	sub	r6, r1, r0
   40898:	cmp	r5, r6
   4089c:	bhi	40860 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   408a0:	mov	r1, #32
   408a4:	mov	r2, r5
   408a8:	bl	14ee8 <memset@plt>
   408ac:	ldr	r0, [r4, #20]
   408b0:	add	r0, r0, r5
   408b4:	str	r0, [r4, #20]
   408b8:	add	r1, r0, #1
   408bc:	str	r1, [r4, #20]
   408c0:	mov	r1, #93	; 0x5d
   408c4:	strb	r1, [r0]
   408c8:	sub	sp, fp, #28
   408cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000408d0 <flatcc_json_printer_int32_vector_field@@Base>:
   408d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   408d4:	add	fp, sp, #28
   408d8:	sub	sp, sp, #4
   408dc:	mov	r4, r0
   408e0:	mov	r0, #4
   408e4:	add	r0, r0, r2, lsl #1
   408e8:	ldr	r2, [r1, #8]
   408ec:	cmp	r0, r2
   408f0:	bge	40910 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   408f4:	ldr	r2, [r1, #4]
   408f8:	add	r0, r2, r0
   408fc:	ldrh	r0, [r0]
   40900:	cmp	r0, #0
   40904:	ldrne	r2, [r1]
   40908:	addsne	r8, r2, r0
   4090c:	bne	40918 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   40910:	sub	sp, fp, #28
   40914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40918:	ldr	r0, [r1, #16]
   4091c:	ldr	r2, [fp, #8]
   40920:	add	r7, r0, #1
   40924:	cmp	r0, #0
   40928:	str	r7, [r1, #16]
   4092c:	ldrne	r0, [r4, #20]
   40930:	addne	r1, r0, #1
   40934:	strne	r1, [r4, #20]
   40938:	movne	r1, #44	; 0x2c
   4093c:	strbne	r1, [r0]
   40940:	mov	r1, r3
   40944:	ldr	r0, [r8]
   40948:	ldr	r7, [r8, r0]!
   4094c:	mov	r0, r4
   40950:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   40954:	ldr	r1, [r4, #32]
   40958:	ldr	r0, [r4, #20]
   4095c:	cmp	r7, #0
   40960:	add	r1, r1, #1
   40964:	str	r1, [r4, #32]
   40968:	add	r1, r0, #1
   4096c:	str	r1, [r4, #20]
   40970:	mov	r1, #91	; 0x5b
   40974:	strb	r1, [r0]
   40978:	beq	40bd4 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   4097c:	ldrb	r0, [r4, #25]
   40980:	ldr	r1, [r4, #20]
   40984:	cmp	r0, #0
   40988:	beq	40a44 <flatcc_json_printer_int32_vector_field@@Base+0x174>
   4098c:	add	r0, r1, #1
   40990:	str	r0, [r4, #20]
   40994:	mov	r0, #10
   40998:	strb	r0, [r1]
   4099c:	ldr	r0, [r4, #20]
   409a0:	ldrb	r2, [r4, #25]
   409a4:	ldr	r3, [r4, #32]
   409a8:	ldr	r1, [r4, #16]
   409ac:	mla	r6, r3, r2, r0
   409b0:	mul	r5, r3, r2
   409b4:	cmp	r6, r1
   409b8:	bls	40a28 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   409bc:	cmp	r0, r1
   409c0:	bcc	409dc <flatcc_json_printer_int32_vector_field@@Base+0x10c>
   409c4:	ldr	r2, [r4, #44]	; 0x2c
   409c8:	mov	r0, r4
   409cc:	mov	r1, #0
   409d0:	blx	r2
   409d4:	ldr	r1, [r4, #16]
   409d8:	ldr	r0, [r4, #20]
   409dc:	sub	r6, r1, r0
   409e0:	cmp	r6, r5
   409e4:	bcs	40a28 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   409e8:	mov	r1, #32
   409ec:	mov	r2, r6
   409f0:	bl	14ee8 <memset@plt>
   409f4:	ldr	r0, [r4, #20]
   409f8:	ldr	r2, [r4, #44]	; 0x2c
   409fc:	mov	r1, #0
   40a00:	add	r0, r0, r6
   40a04:	str	r0, [r4, #20]
   40a08:	mov	r0, r4
   40a0c:	blx	r2
   40a10:	ldr	r1, [r4, #16]
   40a14:	ldr	r0, [r4, #20]
   40a18:	sub	r5, r5, r6
   40a1c:	sub	r6, r1, r0
   40a20:	cmp	r5, r6
   40a24:	bhi	409e8 <flatcc_json_printer_int32_vector_field@@Base+0x118>
   40a28:	mov	r1, #32
   40a2c:	mov	r2, r5
   40a30:	bl	14ee8 <memset@plt>
   40a34:	ldr	r0, [r4, #20]
   40a38:	add	r1, r0, r5
   40a3c:	str	r1, [r4, #20]
   40a40:	b	40a64 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   40a44:	ldr	r0, [r4, #16]
   40a48:	cmp	r1, r0
   40a4c:	bcc	40a64 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   40a50:	ldr	r2, [r4, #44]	; 0x2c
   40a54:	mov	r0, r4
   40a58:	mov	r1, #0
   40a5c:	blx	r2
   40a60:	ldr	r1, [r4, #20]
   40a64:	ldr	r0, [r8, #4]
   40a68:	cmn	r0, #1
   40a6c:	lsr	r5, r0, #31
   40a70:	movle	r2, #45	; 0x2d
   40a74:	rsble	r0, r0, #0
   40a78:	strble	r2, [r1], #1
   40a7c:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   40a80:	ldr	r1, [r4, #20]
   40a84:	add	r0, r0, r5
   40a88:	subs	r9, r7, #1
   40a8c:	add	r0, r1, r0
   40a90:	str	r0, [r4, #20]
   40a94:	beq	40bd4 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   40a98:	ldr	r0, [r4, #20]
   40a9c:	add	r7, r8, #8
   40aa0:	mov	r8, #44	; 0x2c
   40aa4:	mov	sl, #10
   40aa8:	add	r1, r0, #1
   40aac:	str	r1, [r4, #20]
   40ab0:	strb	r8, [r0]
   40ab4:	ldrb	r0, [r4, #25]
   40ab8:	ldr	r1, [r4, #20]
   40abc:	cmp	r0, #0
   40ac0:	beq	40b78 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   40ac4:	add	r0, r1, #1
   40ac8:	str	r0, [r4, #20]
   40acc:	strb	sl, [r1]
   40ad0:	ldr	r0, [r4, #20]
   40ad4:	ldrb	r2, [r4, #25]
   40ad8:	ldr	r3, [r4, #32]
   40adc:	ldr	r1, [r4, #16]
   40ae0:	mla	r6, r3, r2, r0
   40ae4:	mul	r5, r3, r2
   40ae8:	cmp	r6, r1
   40aec:	bls	40b5c <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   40af0:	cmp	r0, r1
   40af4:	bcc	40b10 <flatcc_json_printer_int32_vector_field@@Base+0x240>
   40af8:	ldr	r2, [r4, #44]	; 0x2c
   40afc:	mov	r0, r4
   40b00:	mov	r1, #0
   40b04:	blx	r2
   40b08:	ldr	r1, [r4, #16]
   40b0c:	ldr	r0, [r4, #20]
   40b10:	sub	r6, r1, r0
   40b14:	cmp	r6, r5
   40b18:	bcs	40b5c <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   40b1c:	mov	r1, #32
   40b20:	mov	r2, r6
   40b24:	bl	14ee8 <memset@plt>
   40b28:	ldr	r0, [r4, #20]
   40b2c:	ldr	r2, [r4, #44]	; 0x2c
   40b30:	mov	r1, #0
   40b34:	add	r0, r0, r6
   40b38:	str	r0, [r4, #20]
   40b3c:	mov	r0, r4
   40b40:	blx	r2
   40b44:	ldr	r1, [r4, #16]
   40b48:	ldr	r0, [r4, #20]
   40b4c:	sub	r5, r5, r6
   40b50:	sub	r6, r1, r0
   40b54:	cmp	r5, r6
   40b58:	bhi	40b1c <flatcc_json_printer_int32_vector_field@@Base+0x24c>
   40b5c:	mov	r1, #32
   40b60:	mov	r2, r5
   40b64:	bl	14ee8 <memset@plt>
   40b68:	ldr	r0, [r4, #20]
   40b6c:	add	r1, r0, r5
   40b70:	str	r1, [r4, #20]
   40b74:	b	40b98 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   40b78:	ldr	r0, [r4, #16]
   40b7c:	cmp	r1, r0
   40b80:	bcc	40b98 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   40b84:	ldr	r2, [r4, #44]	; 0x2c
   40b88:	mov	r0, r4
   40b8c:	mov	r1, #0
   40b90:	blx	r2
   40b94:	ldr	r1, [r4, #20]
   40b98:	ldr	r0, [r7]
   40b9c:	sub	r9, r9, #1
   40ba0:	cmn	r0, #1
   40ba4:	lsr	r5, r0, #31
   40ba8:	movle	r2, #45	; 0x2d
   40bac:	rsble	r0, r0, #0
   40bb0:	strble	r2, [r1], #1
   40bb4:	bl	3b830 <flatcc_json_printer_uint32@@Base+0x2c>
   40bb8:	ldr	r1, [r4, #20]
   40bbc:	add	r0, r0, r5
   40bc0:	add	r7, r7, #4
   40bc4:	cmp	r9, #0
   40bc8:	add	r0, r1, r0
   40bcc:	str	r0, [r4, #20]
   40bd0:	bne	40aa8 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   40bd4:	ldrb	r1, [r4, #25]
   40bd8:	ldr	r0, [r4, #20]
   40bdc:	cmp	r1, #0
   40be0:	beq	40ca0 <flatcc_json_printer_int32_vector_field@@Base+0x3d0>
   40be4:	add	r1, r0, #1
   40be8:	str	r1, [r4, #20]
   40bec:	mov	r1, #10
   40bf0:	strb	r1, [r0]
   40bf4:	ldr	r0, [r4, #32]
   40bf8:	sub	r2, r0, #1
   40bfc:	str	r2, [r4, #32]
   40c00:	ldrb	r3, [r4, #25]
   40c04:	ldr	r0, [r4, #20]
   40c08:	ldr	r1, [r4, #16]
   40c0c:	mla	r7, r2, r3, r0
   40c10:	mul	r5, r2, r3
   40c14:	cmp	r7, r1
   40c18:	bls	40c88 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   40c1c:	cmp	r0, r1
   40c20:	bcc	40c3c <flatcc_json_printer_int32_vector_field@@Base+0x36c>
   40c24:	ldr	r2, [r4, #44]	; 0x2c
   40c28:	mov	r0, r4
   40c2c:	mov	r1, #0
   40c30:	blx	r2
   40c34:	ldr	r1, [r4, #16]
   40c38:	ldr	r0, [r4, #20]
   40c3c:	sub	r6, r1, r0
   40c40:	cmp	r6, r5
   40c44:	bcs	40c88 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   40c48:	mov	r1, #32
   40c4c:	mov	r2, r6
   40c50:	bl	14ee8 <memset@plt>
   40c54:	ldr	r0, [r4, #20]
   40c58:	ldr	r2, [r4, #44]	; 0x2c
   40c5c:	mov	r1, #0
   40c60:	add	r0, r0, r6
   40c64:	str	r0, [r4, #20]
   40c68:	mov	r0, r4
   40c6c:	blx	r2
   40c70:	ldr	r1, [r4, #16]
   40c74:	ldr	r0, [r4, #20]
   40c78:	sub	r5, r5, r6
   40c7c:	sub	r6, r1, r0
   40c80:	cmp	r5, r6
   40c84:	bhi	40c48 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   40c88:	mov	r1, #32
   40c8c:	mov	r2, r5
   40c90:	bl	14ee8 <memset@plt>
   40c94:	ldr	r0, [r4, #20]
   40c98:	add	r0, r0, r5
   40c9c:	str	r0, [r4, #20]
   40ca0:	add	r1, r0, #1
   40ca4:	str	r1, [r4, #20]
   40ca8:	mov	r1, #93	; 0x5d
   40cac:	strb	r1, [r0]
   40cb0:	sub	sp, fp, #28
   40cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040cb8 <flatcc_json_printer_int64_vector_field@@Base>:
   40cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40cbc:	add	fp, sp, #28
   40cc0:	sub	sp, sp, #4
   40cc4:	mov	r4, r0
   40cc8:	mov	r0, #4
   40ccc:	add	r0, r0, r2, lsl #1
   40cd0:	ldr	r2, [r1, #8]
   40cd4:	cmp	r0, r2
   40cd8:	bge	40cf8 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   40cdc:	ldr	r2, [r1, #4]
   40ce0:	add	r0, r2, r0
   40ce4:	ldrh	r0, [r0]
   40ce8:	cmp	r0, #0
   40cec:	ldrne	r2, [r1]
   40cf0:	addsne	r8, r2, r0
   40cf4:	bne	40d00 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   40cf8:	sub	sp, fp, #28
   40cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40d00:	ldr	r0, [r1, #16]
   40d04:	ldr	r2, [fp, #8]
   40d08:	add	r7, r0, #1
   40d0c:	cmp	r0, #0
   40d10:	str	r7, [r1, #16]
   40d14:	ldrne	r0, [r4, #20]
   40d18:	addne	r1, r0, #1
   40d1c:	strne	r1, [r4, #20]
   40d20:	movne	r1, #44	; 0x2c
   40d24:	strbne	r1, [r0]
   40d28:	mov	r1, r3
   40d2c:	ldr	r0, [r8]
   40d30:	ldr	r7, [r8, r0]!
   40d34:	mov	r0, r4
   40d38:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   40d3c:	ldr	r1, [r4, #32]
   40d40:	ldr	r0, [r4, #20]
   40d44:	cmp	r7, #0
   40d48:	add	r1, r1, #1
   40d4c:	str	r1, [r4, #32]
   40d50:	add	r1, r0, #1
   40d54:	str	r1, [r4, #20]
   40d58:	mov	r1, #91	; 0x5b
   40d5c:	strb	r1, [r0]
   40d60:	beq	40fcc <flatcc_json_printer_int64_vector_field@@Base+0x314>
   40d64:	ldrb	r0, [r4, #25]
   40d68:	ldr	r2, [r4, #20]
   40d6c:	cmp	r0, #0
   40d70:	beq	40e2c <flatcc_json_printer_int64_vector_field@@Base+0x174>
   40d74:	add	r0, r2, #1
   40d78:	str	r0, [r4, #20]
   40d7c:	mov	r0, #10
   40d80:	strb	r0, [r2]
   40d84:	ldr	r0, [r4, #20]
   40d88:	ldrb	r2, [r4, #25]
   40d8c:	ldr	r3, [r4, #32]
   40d90:	ldr	r1, [r4, #16]
   40d94:	mla	r6, r3, r2, r0
   40d98:	mul	r5, r3, r2
   40d9c:	cmp	r6, r1
   40da0:	bls	40e10 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   40da4:	cmp	r0, r1
   40da8:	bcc	40dc4 <flatcc_json_printer_int64_vector_field@@Base+0x10c>
   40dac:	ldr	r2, [r4, #44]	; 0x2c
   40db0:	mov	r0, r4
   40db4:	mov	r1, #0
   40db8:	blx	r2
   40dbc:	ldr	r1, [r4, #16]
   40dc0:	ldr	r0, [r4, #20]
   40dc4:	sub	r6, r1, r0
   40dc8:	cmp	r6, r5
   40dcc:	bcs	40e10 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   40dd0:	mov	r1, #32
   40dd4:	mov	r2, r6
   40dd8:	bl	14ee8 <memset@plt>
   40ddc:	ldr	r0, [r4, #20]
   40de0:	ldr	r2, [r4, #44]	; 0x2c
   40de4:	mov	r1, #0
   40de8:	add	r0, r0, r6
   40dec:	str	r0, [r4, #20]
   40df0:	mov	r0, r4
   40df4:	blx	r2
   40df8:	ldr	r1, [r4, #16]
   40dfc:	ldr	r0, [r4, #20]
   40e00:	sub	r5, r5, r6
   40e04:	sub	r6, r1, r0
   40e08:	cmp	r5, r6
   40e0c:	bhi	40dd0 <flatcc_json_printer_int64_vector_field@@Base+0x118>
   40e10:	mov	r1, #32
   40e14:	mov	r2, r5
   40e18:	bl	14ee8 <memset@plt>
   40e1c:	ldr	r0, [r4, #20]
   40e20:	add	r2, r0, r5
   40e24:	str	r2, [r4, #20]
   40e28:	b	40e4c <flatcc_json_printer_int64_vector_field@@Base+0x194>
   40e2c:	ldr	r0, [r4, #16]
   40e30:	cmp	r2, r0
   40e34:	bcc	40e4c <flatcc_json_printer_int64_vector_field@@Base+0x194>
   40e38:	ldr	r2, [r4, #44]	; 0x2c
   40e3c:	mov	r0, r4
   40e40:	mov	r1, #0
   40e44:	blx	r2
   40e48:	ldr	r2, [r4, #20]
   40e4c:	ldrd	r0, [r8, #4]
   40e50:	lsr	r5, r1, #31
   40e54:	cmn	r1, #1
   40e58:	bgt	40e6c <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   40e5c:	mov	r3, #45	; 0x2d
   40e60:	rsbs	r0, r0, #0
   40e64:	strb	r3, [r2], #1
   40e68:	rsc	r1, r1, #0
   40e6c:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   40e70:	ldr	r1, [r4, #20]
   40e74:	add	r0, r0, r5
   40e78:	subs	r9, r7, #1
   40e7c:	add	r0, r1, r0
   40e80:	str	r0, [r4, #20]
   40e84:	beq	40fcc <flatcc_json_printer_int64_vector_field@@Base+0x314>
   40e88:	ldr	r0, [r4, #20]
   40e8c:	add	r7, r8, #12
   40e90:	mov	r8, #44	; 0x2c
   40e94:	mov	sl, #10
   40e98:	add	r1, r0, #1
   40e9c:	str	r1, [r4, #20]
   40ea0:	strb	r8, [r0]
   40ea4:	ldrb	r0, [r4, #25]
   40ea8:	ldr	r2, [r4, #20]
   40eac:	cmp	r0, #0
   40eb0:	beq	40f68 <flatcc_json_printer_int64_vector_field@@Base+0x2b0>
   40eb4:	add	r0, r2, #1
   40eb8:	str	r0, [r4, #20]
   40ebc:	strb	sl, [r2]
   40ec0:	ldr	r0, [r4, #20]
   40ec4:	ldrb	r2, [r4, #25]
   40ec8:	ldr	r3, [r4, #32]
   40ecc:	ldr	r1, [r4, #16]
   40ed0:	mla	r6, r3, r2, r0
   40ed4:	mul	r5, r3, r2
   40ed8:	cmp	r6, r1
   40edc:	bls	40f4c <flatcc_json_printer_int64_vector_field@@Base+0x294>
   40ee0:	cmp	r0, r1
   40ee4:	bcc	40f00 <flatcc_json_printer_int64_vector_field@@Base+0x248>
   40ee8:	ldr	r2, [r4, #44]	; 0x2c
   40eec:	mov	r0, r4
   40ef0:	mov	r1, #0
   40ef4:	blx	r2
   40ef8:	ldr	r1, [r4, #16]
   40efc:	ldr	r0, [r4, #20]
   40f00:	sub	r6, r1, r0
   40f04:	cmp	r6, r5
   40f08:	bcs	40f4c <flatcc_json_printer_int64_vector_field@@Base+0x294>
   40f0c:	mov	r1, #32
   40f10:	mov	r2, r6
   40f14:	bl	14ee8 <memset@plt>
   40f18:	ldr	r0, [r4, #20]
   40f1c:	ldr	r2, [r4, #44]	; 0x2c
   40f20:	mov	r1, #0
   40f24:	add	r0, r0, r6
   40f28:	str	r0, [r4, #20]
   40f2c:	mov	r0, r4
   40f30:	blx	r2
   40f34:	ldr	r1, [r4, #16]
   40f38:	ldr	r0, [r4, #20]
   40f3c:	sub	r5, r5, r6
   40f40:	sub	r6, r1, r0
   40f44:	cmp	r5, r6
   40f48:	bhi	40f0c <flatcc_json_printer_int64_vector_field@@Base+0x254>
   40f4c:	mov	r1, #32
   40f50:	mov	r2, r5
   40f54:	bl	14ee8 <memset@plt>
   40f58:	ldr	r0, [r4, #20]
   40f5c:	add	r2, r0, r5
   40f60:	str	r2, [r4, #20]
   40f64:	b	40f88 <flatcc_json_printer_int64_vector_field@@Base+0x2d0>
   40f68:	ldr	r0, [r4, #16]
   40f6c:	cmp	r2, r0
   40f70:	bcc	40f88 <flatcc_json_printer_int64_vector_field@@Base+0x2d0>
   40f74:	ldr	r2, [r4, #44]	; 0x2c
   40f78:	mov	r0, r4
   40f7c:	mov	r1, #0
   40f80:	blx	r2
   40f84:	ldr	r2, [r4, #20]
   40f88:	ldrd	r0, [r7]
   40f8c:	sub	r9, r9, #1
   40f90:	lsr	r5, r1, #31
   40f94:	cmn	r1, #1
   40f98:	bgt	40fac <flatcc_json_printer_int64_vector_field@@Base+0x2f4>
   40f9c:	mov	r3, #45	; 0x2d
   40fa0:	rsbs	r0, r0, #0
   40fa4:	strb	r3, [r2], #1
   40fa8:	rsc	r1, r1, #0
   40fac:	bl	3bb98 <flatcc_json_printer_uint64@@Base+0x30>
   40fb0:	ldr	r1, [r4, #20]
   40fb4:	add	r0, r0, r5
   40fb8:	add	r7, r7, #8
   40fbc:	cmp	r9, #0
   40fc0:	add	r0, r1, r0
   40fc4:	str	r0, [r4, #20]
   40fc8:	bne	40e98 <flatcc_json_printer_int64_vector_field@@Base+0x1e0>
   40fcc:	ldrb	r1, [r4, #25]
   40fd0:	ldr	r0, [r4, #20]
   40fd4:	cmp	r1, #0
   40fd8:	beq	41098 <flatcc_json_printer_int64_vector_field@@Base+0x3e0>
   40fdc:	add	r1, r0, #1
   40fe0:	str	r1, [r4, #20]
   40fe4:	mov	r1, #10
   40fe8:	strb	r1, [r0]
   40fec:	ldr	r0, [r4, #32]
   40ff0:	sub	r2, r0, #1
   40ff4:	str	r2, [r4, #32]
   40ff8:	ldrb	r3, [r4, #25]
   40ffc:	ldr	r0, [r4, #20]
   41000:	ldr	r1, [r4, #16]
   41004:	mla	r7, r2, r3, r0
   41008:	mul	r5, r2, r3
   4100c:	cmp	r7, r1
   41010:	bls	41080 <flatcc_json_printer_int64_vector_field@@Base+0x3c8>
   41014:	cmp	r0, r1
   41018:	bcc	41034 <flatcc_json_printer_int64_vector_field@@Base+0x37c>
   4101c:	ldr	r2, [r4, #44]	; 0x2c
   41020:	mov	r0, r4
   41024:	mov	r1, #0
   41028:	blx	r2
   4102c:	ldr	r1, [r4, #16]
   41030:	ldr	r0, [r4, #20]
   41034:	sub	r6, r1, r0
   41038:	cmp	r6, r5
   4103c:	bcs	41080 <flatcc_json_printer_int64_vector_field@@Base+0x3c8>
   41040:	mov	r1, #32
   41044:	mov	r2, r6
   41048:	bl	14ee8 <memset@plt>
   4104c:	ldr	r0, [r4, #20]
   41050:	ldr	r2, [r4, #44]	; 0x2c
   41054:	mov	r1, #0
   41058:	add	r0, r0, r6
   4105c:	str	r0, [r4, #20]
   41060:	mov	r0, r4
   41064:	blx	r2
   41068:	ldr	r1, [r4, #16]
   4106c:	ldr	r0, [r4, #20]
   41070:	sub	r5, r5, r6
   41074:	sub	r6, r1, r0
   41078:	cmp	r5, r6
   4107c:	bhi	41040 <flatcc_json_printer_int64_vector_field@@Base+0x388>
   41080:	mov	r1, #32
   41084:	mov	r2, r5
   41088:	bl	14ee8 <memset@plt>
   4108c:	ldr	r0, [r4, #20]
   41090:	add	r0, r0, r5
   41094:	str	r0, [r4, #20]
   41098:	add	r1, r0, #1
   4109c:	str	r1, [r4, #20]
   410a0:	mov	r1, #93	; 0x5d
   410a4:	strb	r1, [r0]
   410a8:	sub	sp, fp, #28
   410ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000410b0 <flatcc_json_printer_bool_vector_field@@Base>:
   410b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   410b4:	add	fp, sp, #28
   410b8:	sub	sp, sp, #4
   410bc:	mov	r4, r0
   410c0:	mov	r0, #4
   410c4:	add	r0, r0, r2, lsl #1
   410c8:	ldr	r2, [r1, #8]
   410cc:	cmp	r0, r2
   410d0:	bge	410f0 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   410d4:	ldr	r2, [r1, #4]
   410d8:	add	r0, r2, r0
   410dc:	ldrh	r0, [r0]
   410e0:	cmp	r0, #0
   410e4:	ldrne	r2, [r1]
   410e8:	addsne	r8, r2, r0
   410ec:	bne	410f8 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   410f0:	sub	sp, fp, #28
   410f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   410f8:	ldr	r0, [r1, #16]
   410fc:	ldr	r2, [fp, #8]
   41100:	add	r7, r0, #1
   41104:	cmp	r0, #0
   41108:	str	r7, [r1, #16]
   4110c:	ldrne	r0, [r4, #20]
   41110:	addne	r1, r0, #1
   41114:	strne	r1, [r4, #20]
   41118:	movne	r1, #44	; 0x2c
   4111c:	strbne	r1, [r0]
   41120:	mov	r1, r3
   41124:	ldr	r0, [r8]
   41128:	ldr	r7, [r8, r0]!
   4112c:	mov	r0, r4
   41130:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   41134:	ldr	r1, [r4, #32]
   41138:	ldr	r0, [r4, #20]
   4113c:	cmp	r7, #0
   41140:	add	r1, r1, #1
   41144:	str	r1, [r4, #32]
   41148:	add	r1, r0, #1
   4114c:	str	r1, [r4, #20]
   41150:	mov	r1, #91	; 0x5b
   41154:	strb	r1, [r0]
   41158:	beq	413f4 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   4115c:	ldrb	r1, [r4, #25]
   41160:	ldr	r0, [r4, #20]
   41164:	cmp	r1, #0
   41168:	beq	41224 <flatcc_json_printer_bool_vector_field@@Base+0x174>
   4116c:	add	r1, r0, #1
   41170:	str	r1, [r4, #20]
   41174:	mov	r1, #10
   41178:	strb	r1, [r0]
   4117c:	ldr	r0, [r4, #20]
   41180:	ldrb	r2, [r4, #25]
   41184:	ldr	r3, [r4, #32]
   41188:	ldr	r1, [r4, #16]
   4118c:	mla	r6, r3, r2, r0
   41190:	mul	r5, r3, r2
   41194:	cmp	r6, r1
   41198:	bls	41208 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   4119c:	cmp	r0, r1
   411a0:	bcc	411bc <flatcc_json_printer_bool_vector_field@@Base+0x10c>
   411a4:	ldr	r2, [r4, #44]	; 0x2c
   411a8:	mov	r0, r4
   411ac:	mov	r1, #0
   411b0:	blx	r2
   411b4:	ldr	r1, [r4, #16]
   411b8:	ldr	r0, [r4, #20]
   411bc:	sub	r6, r1, r0
   411c0:	cmp	r6, r5
   411c4:	bcs	41208 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   411c8:	mov	r1, #32
   411cc:	mov	r2, r6
   411d0:	bl	14ee8 <memset@plt>
   411d4:	ldr	r0, [r4, #20]
   411d8:	ldr	r2, [r4, #44]	; 0x2c
   411dc:	mov	r1, #0
   411e0:	add	r0, r0, r6
   411e4:	str	r0, [r4, #20]
   411e8:	mov	r0, r4
   411ec:	blx	r2
   411f0:	ldr	r1, [r4, #16]
   411f4:	ldr	r0, [r4, #20]
   411f8:	sub	r5, r5, r6
   411fc:	sub	r6, r1, r0
   41200:	cmp	r5, r6
   41204:	bhi	411c8 <flatcc_json_printer_bool_vector_field@@Base+0x118>
   41208:	mov	r1, #32
   4120c:	mov	r2, r5
   41210:	bl	14ee8 <memset@plt>
   41214:	ldr	r0, [r4, #20]
   41218:	add	r0, r0, r5
   4121c:	str	r0, [r4, #20]
   41220:	b	41244 <flatcc_json_printer_bool_vector_field@@Base+0x194>
   41224:	ldr	r1, [r4, #16]
   41228:	cmp	r0, r1
   4122c:	bcc	41244 <flatcc_json_printer_bool_vector_field@@Base+0x194>
   41230:	ldr	r2, [r4, #44]	; 0x2c
   41234:	mov	r0, r4
   41238:	mov	r1, #0
   4123c:	blx	r2
   41240:	ldr	r0, [r4, #20]
   41244:	ldrb	r1, [r8, #4]
   41248:	cmp	r1, #0
   4124c:	beq	4126c <flatcc_json_printer_bool_vector_field@@Base+0x1bc>
   41250:	mov	r1, #0
   41254:	strb	r1, [r0, #4]
   41258:	movw	r1, #29300	; 0x7274
   4125c:	movt	r1, #25973	; 0x6575
   41260:	str	r1, [r0]
   41264:	mov	r0, #4
   41268:	b	41284 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   4126c:	mov	r1, #101	; 0x65
   41270:	strh	r1, [r0, #4]
   41274:	movw	r1, #24934	; 0x6166
   41278:	movt	r1, #29548	; 0x736c
   4127c:	str	r1, [r0]
   41280:	mov	r0, #5
   41284:	ldr	r1, [r4, #20]
   41288:	subs	r9, r7, #1
   4128c:	add	r0, r1, r0
   41290:	str	r0, [r4, #20]
   41294:	beq	413f4 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   41298:	ldr	r0, [r4, #20]
   4129c:	add	r7, r8, #5
   412a0:	mov	r8, #44	; 0x2c
   412a4:	mov	sl, #10
   412a8:	add	r1, r0, #1
   412ac:	str	r1, [r4, #20]
   412b0:	strb	r8, [r0]
   412b4:	ldrb	r1, [r4, #25]
   412b8:	ldr	r0, [r4, #20]
   412bc:	cmp	r1, #0
   412c0:	beq	41378 <flatcc_json_printer_bool_vector_field@@Base+0x2c8>
   412c4:	add	r1, r0, #1
   412c8:	str	r1, [r4, #20]
   412cc:	strb	sl, [r0]
   412d0:	ldr	r0, [r4, #20]
   412d4:	ldrb	r2, [r4, #25]
   412d8:	ldr	r3, [r4, #32]
   412dc:	ldr	r1, [r4, #16]
   412e0:	mla	r6, r3, r2, r0
   412e4:	mul	r5, r3, r2
   412e8:	cmp	r6, r1
   412ec:	bls	4135c <flatcc_json_printer_bool_vector_field@@Base+0x2ac>
   412f0:	cmp	r0, r1
   412f4:	bcc	41310 <flatcc_json_printer_bool_vector_field@@Base+0x260>
   412f8:	ldr	r2, [r4, #44]	; 0x2c
   412fc:	mov	r0, r4
   41300:	mov	r1, #0
   41304:	blx	r2
   41308:	ldr	r1, [r4, #16]
   4130c:	ldr	r0, [r4, #20]
   41310:	sub	r6, r1, r0
   41314:	cmp	r6, r5
   41318:	bcs	4135c <flatcc_json_printer_bool_vector_field@@Base+0x2ac>
   4131c:	mov	r1, #32
   41320:	mov	r2, r6
   41324:	bl	14ee8 <memset@plt>
   41328:	ldr	r0, [r4, #20]
   4132c:	ldr	r2, [r4, #44]	; 0x2c
   41330:	mov	r1, #0
   41334:	add	r0, r0, r6
   41338:	str	r0, [r4, #20]
   4133c:	mov	r0, r4
   41340:	blx	r2
   41344:	ldr	r1, [r4, #16]
   41348:	ldr	r0, [r4, #20]
   4134c:	sub	r5, r5, r6
   41350:	sub	r6, r1, r0
   41354:	cmp	r5, r6
   41358:	bhi	4131c <flatcc_json_printer_bool_vector_field@@Base+0x26c>
   4135c:	mov	r1, #32
   41360:	mov	r2, r5
   41364:	bl	14ee8 <memset@plt>
   41368:	ldr	r0, [r4, #20]
   4136c:	add	r0, r0, r5
   41370:	str	r0, [r4, #20]
   41374:	b	41398 <flatcc_json_printer_bool_vector_field@@Base+0x2e8>
   41378:	ldr	r1, [r4, #16]
   4137c:	cmp	r0, r1
   41380:	bcc	41398 <flatcc_json_printer_bool_vector_field@@Base+0x2e8>
   41384:	ldr	r2, [r4, #44]	; 0x2c
   41388:	mov	r0, r4
   4138c:	mov	r1, #0
   41390:	blx	r2
   41394:	ldr	r0, [r4, #20]
   41398:	ldrb	r1, [r7]
   4139c:	sub	r9, r9, #1
   413a0:	cmp	r1, #0
   413a4:	beq	413c4 <flatcc_json_printer_bool_vector_field@@Base+0x314>
   413a8:	mov	r1, #0
   413ac:	strb	r1, [r0, #4]
   413b0:	movw	r1, #29300	; 0x7274
   413b4:	movt	r1, #25973	; 0x6575
   413b8:	str	r1, [r0]
   413bc:	mov	r0, #4
   413c0:	b	413dc <flatcc_json_printer_bool_vector_field@@Base+0x32c>
   413c4:	mov	r1, #101	; 0x65
   413c8:	strh	r1, [r0, #4]
   413cc:	movw	r1, #24934	; 0x6166
   413d0:	movt	r1, #29548	; 0x736c
   413d4:	str	r1, [r0]
   413d8:	mov	r0, #5
   413dc:	ldr	r1, [r4, #20]
   413e0:	add	r7, r7, #1
   413e4:	cmp	r9, #0
   413e8:	add	r0, r1, r0
   413ec:	str	r0, [r4, #20]
   413f0:	bne	412a8 <flatcc_json_printer_bool_vector_field@@Base+0x1f8>
   413f4:	ldrb	r1, [r4, #25]
   413f8:	ldr	r0, [r4, #20]
   413fc:	cmp	r1, #0
   41400:	beq	414c0 <flatcc_json_printer_bool_vector_field@@Base+0x410>
   41404:	add	r1, r0, #1
   41408:	str	r1, [r4, #20]
   4140c:	mov	r1, #10
   41410:	strb	r1, [r0]
   41414:	ldr	r0, [r4, #32]
   41418:	sub	r2, r0, #1
   4141c:	str	r2, [r4, #32]
   41420:	ldrb	r3, [r4, #25]
   41424:	ldr	r0, [r4, #20]
   41428:	ldr	r1, [r4, #16]
   4142c:	mla	r7, r2, r3, r0
   41430:	mul	r5, r2, r3
   41434:	cmp	r7, r1
   41438:	bls	414a8 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   4143c:	cmp	r0, r1
   41440:	bcc	4145c <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   41444:	ldr	r2, [r4, #44]	; 0x2c
   41448:	mov	r0, r4
   4144c:	mov	r1, #0
   41450:	blx	r2
   41454:	ldr	r1, [r4, #16]
   41458:	ldr	r0, [r4, #20]
   4145c:	sub	r6, r1, r0
   41460:	cmp	r6, r5
   41464:	bcs	414a8 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   41468:	mov	r1, #32
   4146c:	mov	r2, r6
   41470:	bl	14ee8 <memset@plt>
   41474:	ldr	r0, [r4, #20]
   41478:	ldr	r2, [r4, #44]	; 0x2c
   4147c:	mov	r1, #0
   41480:	add	r0, r0, r6
   41484:	str	r0, [r4, #20]
   41488:	mov	r0, r4
   4148c:	blx	r2
   41490:	ldr	r1, [r4, #16]
   41494:	ldr	r0, [r4, #20]
   41498:	sub	r5, r5, r6
   4149c:	sub	r6, r1, r0
   414a0:	cmp	r5, r6
   414a4:	bhi	41468 <flatcc_json_printer_bool_vector_field@@Base+0x3b8>
   414a8:	mov	r1, #32
   414ac:	mov	r2, r5
   414b0:	bl	14ee8 <memset@plt>
   414b4:	ldr	r0, [r4, #20]
   414b8:	add	r0, r0, r5
   414bc:	str	r0, [r4, #20]
   414c0:	add	r1, r0, #1
   414c4:	str	r1, [r4, #20]
   414c8:	mov	r1, #93	; 0x5d
   414cc:	strb	r1, [r0]
   414d0:	sub	sp, fp, #28
   414d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000414d8 <flatcc_json_printer_float_vector_field@@Base>:
   414d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   414dc:	add	fp, sp, #28
   414e0:	sub	sp, sp, #4
   414e4:	mov	r4, r0
   414e8:	mov	r0, #4
   414ec:	add	r0, r0, r2, lsl #1
   414f0:	ldr	r2, [r1, #8]
   414f4:	cmp	r0, r2
   414f8:	bge	41518 <flatcc_json_printer_float_vector_field@@Base+0x40>
   414fc:	ldr	r2, [r1, #4]
   41500:	add	r0, r2, r0
   41504:	ldrh	r0, [r0]
   41508:	cmp	r0, #0
   4150c:	ldrne	r2, [r1]
   41510:	addsne	r8, r2, r0
   41514:	bne	41520 <flatcc_json_printer_float_vector_field@@Base+0x48>
   41518:	sub	sp, fp, #28
   4151c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41520:	ldr	r0, [r1, #16]
   41524:	ldr	r2, [fp, #8]
   41528:	add	r7, r0, #1
   4152c:	cmp	r0, #0
   41530:	str	r7, [r1, #16]
   41534:	ldrne	r0, [r4, #20]
   41538:	addne	r1, r0, #1
   4153c:	strne	r1, [r4, #20]
   41540:	movne	r1, #44	; 0x2c
   41544:	strbne	r1, [r0]
   41548:	mov	r1, r3
   4154c:	ldr	r0, [r8]
   41550:	ldr	r7, [r8, r0]!
   41554:	mov	r0, r4
   41558:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   4155c:	ldr	r1, [r4, #32]
   41560:	ldr	r0, [r4, #20]
   41564:	cmp	r7, #0
   41568:	add	r1, r1, #1
   4156c:	str	r1, [r4, #32]
   41570:	add	r1, r0, #1
   41574:	str	r1, [r4, #20]
   41578:	mov	r1, #91	; 0x5b
   4157c:	strb	r1, [r0]
   41580:	beq	417b4 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   41584:	ldrb	r1, [r4, #25]
   41588:	ldr	r0, [r4, #20]
   4158c:	cmp	r1, #0
   41590:	beq	4164c <flatcc_json_printer_float_vector_field@@Base+0x174>
   41594:	add	r1, r0, #1
   41598:	str	r1, [r4, #20]
   4159c:	mov	r1, #10
   415a0:	strb	r1, [r0]
   415a4:	ldr	r0, [r4, #20]
   415a8:	ldrb	r2, [r4, #25]
   415ac:	ldr	r3, [r4, #32]
   415b0:	ldr	r1, [r4, #16]
   415b4:	mla	r6, r3, r2, r0
   415b8:	mul	r5, r3, r2
   415bc:	cmp	r6, r1
   415c0:	bls	41630 <flatcc_json_printer_float_vector_field@@Base+0x158>
   415c4:	cmp	r0, r1
   415c8:	bcc	415e4 <flatcc_json_printer_float_vector_field@@Base+0x10c>
   415cc:	ldr	r2, [r4, #44]	; 0x2c
   415d0:	mov	r0, r4
   415d4:	mov	r1, #0
   415d8:	blx	r2
   415dc:	ldr	r1, [r4, #16]
   415e0:	ldr	r0, [r4, #20]
   415e4:	sub	r6, r1, r0
   415e8:	cmp	r6, r5
   415ec:	bcs	41630 <flatcc_json_printer_float_vector_field@@Base+0x158>
   415f0:	mov	r1, #32
   415f4:	mov	r2, r6
   415f8:	bl	14ee8 <memset@plt>
   415fc:	ldr	r0, [r4, #20]
   41600:	ldr	r2, [r4, #44]	; 0x2c
   41604:	mov	r1, #0
   41608:	add	r0, r0, r6
   4160c:	str	r0, [r4, #20]
   41610:	mov	r0, r4
   41614:	blx	r2
   41618:	ldr	r1, [r4, #16]
   4161c:	ldr	r0, [r4, #20]
   41620:	sub	r5, r5, r6
   41624:	sub	r6, r1, r0
   41628:	cmp	r5, r6
   4162c:	bhi	415f0 <flatcc_json_printer_float_vector_field@@Base+0x118>
   41630:	mov	r1, #32
   41634:	mov	r2, r5
   41638:	bl	14ee8 <memset@plt>
   4163c:	ldr	r0, [r4, #20]
   41640:	add	r0, r0, r5
   41644:	str	r0, [r4, #20]
   41648:	b	4166c <flatcc_json_printer_float_vector_field@@Base+0x194>
   4164c:	ldr	r1, [r4, #16]
   41650:	cmp	r0, r1
   41654:	bcc	4166c <flatcc_json_printer_float_vector_field@@Base+0x194>
   41658:	ldr	r2, [r4, #44]	; 0x2c
   4165c:	mov	r0, r4
   41660:	mov	r1, #0
   41664:	blx	r2
   41668:	ldr	r0, [r4, #20]
   4166c:	vldr	s0, [r8, #4]
   41670:	vcvt.f64.f32	d0, s0
   41674:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   41678:	ldr	r1, [r4, #20]
   4167c:	subs	r9, r7, #1
   41680:	add	r0, r1, r0
   41684:	str	r0, [r4, #20]
   41688:	beq	417b4 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   4168c:	ldr	r0, [r4, #20]
   41690:	add	r7, r8, #8
   41694:	mov	r8, #44	; 0x2c
   41698:	mov	sl, #10
   4169c:	add	r1, r0, #1
   416a0:	sub	r9, r9, #1
   416a4:	str	r1, [r4, #20]
   416a8:	strb	r8, [r0]
   416ac:	ldrb	r1, [r4, #25]
   416b0:	ldr	r0, [r4, #20]
   416b4:	cmp	r1, #0
   416b8:	beq	41770 <flatcc_json_printer_float_vector_field@@Base+0x298>
   416bc:	add	r1, r0, #1
   416c0:	str	r1, [r4, #20]
   416c4:	strb	sl, [r0]
   416c8:	ldr	r0, [r4, #20]
   416cc:	ldrb	r2, [r4, #25]
   416d0:	ldr	r3, [r4, #32]
   416d4:	ldr	r1, [r4, #16]
   416d8:	mla	r6, r3, r2, r0
   416dc:	mul	r5, r3, r2
   416e0:	cmp	r6, r1
   416e4:	bls	41754 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   416e8:	cmp	r0, r1
   416ec:	bcc	41708 <flatcc_json_printer_float_vector_field@@Base+0x230>
   416f0:	ldr	r2, [r4, #44]	; 0x2c
   416f4:	mov	r0, r4
   416f8:	mov	r1, #0
   416fc:	blx	r2
   41700:	ldr	r1, [r4, #16]
   41704:	ldr	r0, [r4, #20]
   41708:	sub	r6, r1, r0
   4170c:	cmp	r6, r5
   41710:	bcs	41754 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   41714:	mov	r1, #32
   41718:	mov	r2, r6
   4171c:	bl	14ee8 <memset@plt>
   41720:	ldr	r0, [r4, #20]
   41724:	ldr	r2, [r4, #44]	; 0x2c
   41728:	mov	r1, #0
   4172c:	add	r0, r0, r6
   41730:	str	r0, [r4, #20]
   41734:	mov	r0, r4
   41738:	blx	r2
   4173c:	ldr	r1, [r4, #16]
   41740:	ldr	r0, [r4, #20]
   41744:	sub	r5, r5, r6
   41748:	sub	r6, r1, r0
   4174c:	cmp	r5, r6
   41750:	bhi	41714 <flatcc_json_printer_float_vector_field@@Base+0x23c>
   41754:	mov	r1, #32
   41758:	mov	r2, r5
   4175c:	bl	14ee8 <memset@plt>
   41760:	ldr	r0, [r4, #20]
   41764:	add	r0, r0, r5
   41768:	str	r0, [r4, #20]
   4176c:	b	41790 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   41770:	ldr	r1, [r4, #16]
   41774:	cmp	r0, r1
   41778:	bcc	41790 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   4177c:	ldr	r2, [r4, #44]	; 0x2c
   41780:	mov	r0, r4
   41784:	mov	r1, #0
   41788:	blx	r2
   4178c:	ldr	r0, [r4, #20]
   41790:	vldr	s0, [r7]
   41794:	vcvt.f64.f32	d0, s0
   41798:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   4179c:	ldr	r1, [r4, #20]
   417a0:	add	r7, r7, #4
   417a4:	cmp	r9, #0
   417a8:	add	r0, r1, r0
   417ac:	str	r0, [r4, #20]
   417b0:	bne	4169c <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   417b4:	ldrb	r1, [r4, #25]
   417b8:	ldr	r0, [r4, #20]
   417bc:	cmp	r1, #0
   417c0:	beq	41880 <flatcc_json_printer_float_vector_field@@Base+0x3a8>
   417c4:	add	r1, r0, #1
   417c8:	str	r1, [r4, #20]
   417cc:	mov	r1, #10
   417d0:	strb	r1, [r0]
   417d4:	ldr	r0, [r4, #32]
   417d8:	sub	r2, r0, #1
   417dc:	str	r2, [r4, #32]
   417e0:	ldrb	r3, [r4, #25]
   417e4:	ldr	r0, [r4, #20]
   417e8:	ldr	r1, [r4, #16]
   417ec:	mla	r7, r2, r3, r0
   417f0:	mul	r5, r2, r3
   417f4:	cmp	r7, r1
   417f8:	bls	41868 <flatcc_json_printer_float_vector_field@@Base+0x390>
   417fc:	cmp	r0, r1
   41800:	bcc	4181c <flatcc_json_printer_float_vector_field@@Base+0x344>
   41804:	ldr	r2, [r4, #44]	; 0x2c
   41808:	mov	r0, r4
   4180c:	mov	r1, #0
   41810:	blx	r2
   41814:	ldr	r1, [r4, #16]
   41818:	ldr	r0, [r4, #20]
   4181c:	sub	r6, r1, r0
   41820:	cmp	r6, r5
   41824:	bcs	41868 <flatcc_json_printer_float_vector_field@@Base+0x390>
   41828:	mov	r1, #32
   4182c:	mov	r2, r6
   41830:	bl	14ee8 <memset@plt>
   41834:	ldr	r0, [r4, #20]
   41838:	ldr	r2, [r4, #44]	; 0x2c
   4183c:	mov	r1, #0
   41840:	add	r0, r0, r6
   41844:	str	r0, [r4, #20]
   41848:	mov	r0, r4
   4184c:	blx	r2
   41850:	ldr	r1, [r4, #16]
   41854:	ldr	r0, [r4, #20]
   41858:	sub	r5, r5, r6
   4185c:	sub	r6, r1, r0
   41860:	cmp	r5, r6
   41864:	bhi	41828 <flatcc_json_printer_float_vector_field@@Base+0x350>
   41868:	mov	r1, #32
   4186c:	mov	r2, r5
   41870:	bl	14ee8 <memset@plt>
   41874:	ldr	r0, [r4, #20]
   41878:	add	r0, r0, r5
   4187c:	str	r0, [r4, #20]
   41880:	add	r1, r0, #1
   41884:	str	r1, [r4, #20]
   41888:	mov	r1, #93	; 0x5d
   4188c:	strb	r1, [r0]
   41890:	sub	sp, fp, #28
   41894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041898 <flatcc_json_printer_double_vector_field@@Base>:
   41898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4189c:	add	fp, sp, #28
   418a0:	sub	sp, sp, #4
   418a4:	mov	r4, r0
   418a8:	mov	r0, #4
   418ac:	add	r0, r0, r2, lsl #1
   418b0:	ldr	r2, [r1, #8]
   418b4:	cmp	r0, r2
   418b8:	bge	418d8 <flatcc_json_printer_double_vector_field@@Base+0x40>
   418bc:	ldr	r2, [r1, #4]
   418c0:	add	r0, r2, r0
   418c4:	ldrh	r0, [r0]
   418c8:	cmp	r0, #0
   418cc:	ldrne	r2, [r1]
   418d0:	addsne	r8, r2, r0
   418d4:	bne	418e0 <flatcc_json_printer_double_vector_field@@Base+0x48>
   418d8:	sub	sp, fp, #28
   418dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   418e0:	ldr	r0, [r1, #16]
   418e4:	ldr	r2, [fp, #8]
   418e8:	add	r7, r0, #1
   418ec:	cmp	r0, #0
   418f0:	str	r7, [r1, #16]
   418f4:	ldrne	r0, [r4, #20]
   418f8:	addne	r1, r0, #1
   418fc:	strne	r1, [r4, #20]
   41900:	movne	r1, #44	; 0x2c
   41904:	strbne	r1, [r0]
   41908:	mov	r1, r3
   4190c:	ldr	r0, [r8]
   41910:	ldr	r7, [r8, r0]!
   41914:	mov	r0, r4
   41918:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   4191c:	ldr	r1, [r4, #32]
   41920:	ldr	r0, [r4, #20]
   41924:	cmp	r7, #0
   41928:	add	r1, r1, #1
   4192c:	str	r1, [r4, #32]
   41930:	add	r1, r0, #1
   41934:	str	r1, [r4, #20]
   41938:	mov	r1, #91	; 0x5b
   4193c:	strb	r1, [r0]
   41940:	beq	41b6c <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   41944:	ldrb	r1, [r4, #25]
   41948:	ldr	r0, [r4, #20]
   4194c:	cmp	r1, #0
   41950:	beq	41a0c <flatcc_json_printer_double_vector_field@@Base+0x174>
   41954:	add	r1, r0, #1
   41958:	str	r1, [r4, #20]
   4195c:	mov	r1, #10
   41960:	strb	r1, [r0]
   41964:	ldr	r0, [r4, #20]
   41968:	ldrb	r2, [r4, #25]
   4196c:	ldr	r3, [r4, #32]
   41970:	ldr	r1, [r4, #16]
   41974:	mla	r6, r3, r2, r0
   41978:	mul	r5, r3, r2
   4197c:	cmp	r6, r1
   41980:	bls	419f0 <flatcc_json_printer_double_vector_field@@Base+0x158>
   41984:	cmp	r0, r1
   41988:	bcc	419a4 <flatcc_json_printer_double_vector_field@@Base+0x10c>
   4198c:	ldr	r2, [r4, #44]	; 0x2c
   41990:	mov	r0, r4
   41994:	mov	r1, #0
   41998:	blx	r2
   4199c:	ldr	r1, [r4, #16]
   419a0:	ldr	r0, [r4, #20]
   419a4:	sub	r6, r1, r0
   419a8:	cmp	r6, r5
   419ac:	bcs	419f0 <flatcc_json_printer_double_vector_field@@Base+0x158>
   419b0:	mov	r1, #32
   419b4:	mov	r2, r6
   419b8:	bl	14ee8 <memset@plt>
   419bc:	ldr	r0, [r4, #20]
   419c0:	ldr	r2, [r4, #44]	; 0x2c
   419c4:	mov	r1, #0
   419c8:	add	r0, r0, r6
   419cc:	str	r0, [r4, #20]
   419d0:	mov	r0, r4
   419d4:	blx	r2
   419d8:	ldr	r1, [r4, #16]
   419dc:	ldr	r0, [r4, #20]
   419e0:	sub	r5, r5, r6
   419e4:	sub	r6, r1, r0
   419e8:	cmp	r5, r6
   419ec:	bhi	419b0 <flatcc_json_printer_double_vector_field@@Base+0x118>
   419f0:	mov	r1, #32
   419f4:	mov	r2, r5
   419f8:	bl	14ee8 <memset@plt>
   419fc:	ldr	r0, [r4, #20]
   41a00:	add	r0, r0, r5
   41a04:	str	r0, [r4, #20]
   41a08:	b	41a2c <flatcc_json_printer_double_vector_field@@Base+0x194>
   41a0c:	ldr	r1, [r4, #16]
   41a10:	cmp	r0, r1
   41a14:	bcc	41a2c <flatcc_json_printer_double_vector_field@@Base+0x194>
   41a18:	ldr	r2, [r4, #44]	; 0x2c
   41a1c:	mov	r0, r4
   41a20:	mov	r1, #0
   41a24:	blx	r2
   41a28:	ldr	r0, [r4, #20]
   41a2c:	vldr	d0, [r8, #4]
   41a30:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   41a34:	ldr	r1, [r4, #20]
   41a38:	subs	r9, r7, #1
   41a3c:	add	r0, r1, r0
   41a40:	str	r0, [r4, #20]
   41a44:	beq	41b6c <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   41a48:	ldr	r0, [r4, #20]
   41a4c:	add	r7, r8, #12
   41a50:	mov	r8, #44	; 0x2c
   41a54:	mov	sl, #10
   41a58:	add	r1, r0, #1
   41a5c:	sub	r9, r9, #1
   41a60:	str	r1, [r4, #20]
   41a64:	strb	r8, [r0]
   41a68:	ldrb	r1, [r4, #25]
   41a6c:	ldr	r0, [r4, #20]
   41a70:	cmp	r1, #0
   41a74:	beq	41b2c <flatcc_json_printer_double_vector_field@@Base+0x294>
   41a78:	add	r1, r0, #1
   41a7c:	str	r1, [r4, #20]
   41a80:	strb	sl, [r0]
   41a84:	ldr	r0, [r4, #20]
   41a88:	ldrb	r2, [r4, #25]
   41a8c:	ldr	r3, [r4, #32]
   41a90:	ldr	r1, [r4, #16]
   41a94:	mla	r6, r3, r2, r0
   41a98:	mul	r5, r3, r2
   41a9c:	cmp	r6, r1
   41aa0:	bls	41b10 <flatcc_json_printer_double_vector_field@@Base+0x278>
   41aa4:	cmp	r0, r1
   41aa8:	bcc	41ac4 <flatcc_json_printer_double_vector_field@@Base+0x22c>
   41aac:	ldr	r2, [r4, #44]	; 0x2c
   41ab0:	mov	r0, r4
   41ab4:	mov	r1, #0
   41ab8:	blx	r2
   41abc:	ldr	r1, [r4, #16]
   41ac0:	ldr	r0, [r4, #20]
   41ac4:	sub	r6, r1, r0
   41ac8:	cmp	r6, r5
   41acc:	bcs	41b10 <flatcc_json_printer_double_vector_field@@Base+0x278>
   41ad0:	mov	r1, #32
   41ad4:	mov	r2, r6
   41ad8:	bl	14ee8 <memset@plt>
   41adc:	ldr	r0, [r4, #20]
   41ae0:	ldr	r2, [r4, #44]	; 0x2c
   41ae4:	mov	r1, #0
   41ae8:	add	r0, r0, r6
   41aec:	str	r0, [r4, #20]
   41af0:	mov	r0, r4
   41af4:	blx	r2
   41af8:	ldr	r1, [r4, #16]
   41afc:	ldr	r0, [r4, #20]
   41b00:	sub	r5, r5, r6
   41b04:	sub	r6, r1, r0
   41b08:	cmp	r5, r6
   41b0c:	bhi	41ad0 <flatcc_json_printer_double_vector_field@@Base+0x238>
   41b10:	mov	r1, #32
   41b14:	mov	r2, r5
   41b18:	bl	14ee8 <memset@plt>
   41b1c:	ldr	r0, [r4, #20]
   41b20:	add	r0, r0, r5
   41b24:	str	r0, [r4, #20]
   41b28:	b	41b4c <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   41b2c:	ldr	r1, [r4, #16]
   41b30:	cmp	r0, r1
   41b34:	bcc	41b4c <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   41b38:	ldr	r2, [r4, #44]	; 0x2c
   41b3c:	mov	r0, r4
   41b40:	mov	r1, #0
   41b44:	blx	r2
   41b48:	ldr	r0, [r4, #20]
   41b4c:	vldr	d0, [r7]
   41b50:	bl	3a228 <flatcc_json_printer_fmt_float@@Base+0x8>
   41b54:	ldr	r1, [r4, #20]
   41b58:	add	r7, r7, #8
   41b5c:	cmp	r9, #0
   41b60:	add	r0, r1, r0
   41b64:	str	r0, [r4, #20]
   41b68:	bne	41a58 <flatcc_json_printer_double_vector_field@@Base+0x1c0>
   41b6c:	ldrb	r1, [r4, #25]
   41b70:	ldr	r0, [r4, #20]
   41b74:	cmp	r1, #0
   41b78:	beq	41c38 <flatcc_json_printer_double_vector_field@@Base+0x3a0>
   41b7c:	add	r1, r0, #1
   41b80:	str	r1, [r4, #20]
   41b84:	mov	r1, #10
   41b88:	strb	r1, [r0]
   41b8c:	ldr	r0, [r4, #32]
   41b90:	sub	r2, r0, #1
   41b94:	str	r2, [r4, #32]
   41b98:	ldrb	r3, [r4, #25]
   41b9c:	ldr	r0, [r4, #20]
   41ba0:	ldr	r1, [r4, #16]
   41ba4:	mla	r7, r2, r3, r0
   41ba8:	mul	r5, r2, r3
   41bac:	cmp	r7, r1
   41bb0:	bls	41c20 <flatcc_json_printer_double_vector_field@@Base+0x388>
   41bb4:	cmp	r0, r1
   41bb8:	bcc	41bd4 <flatcc_json_printer_double_vector_field@@Base+0x33c>
   41bbc:	ldr	r2, [r4, #44]	; 0x2c
   41bc0:	mov	r0, r4
   41bc4:	mov	r1, #0
   41bc8:	blx	r2
   41bcc:	ldr	r1, [r4, #16]
   41bd0:	ldr	r0, [r4, #20]
   41bd4:	sub	r6, r1, r0
   41bd8:	cmp	r6, r5
   41bdc:	bcs	41c20 <flatcc_json_printer_double_vector_field@@Base+0x388>
   41be0:	mov	r1, #32
   41be4:	mov	r2, r6
   41be8:	bl	14ee8 <memset@plt>
   41bec:	ldr	r0, [r4, #20]
   41bf0:	ldr	r2, [r4, #44]	; 0x2c
   41bf4:	mov	r1, #0
   41bf8:	add	r0, r0, r6
   41bfc:	str	r0, [r4, #20]
   41c00:	mov	r0, r4
   41c04:	blx	r2
   41c08:	ldr	r1, [r4, #16]
   41c0c:	ldr	r0, [r4, #20]
   41c10:	sub	r5, r5, r6
   41c14:	sub	r6, r1, r0
   41c18:	cmp	r5, r6
   41c1c:	bhi	41be0 <flatcc_json_printer_double_vector_field@@Base+0x348>
   41c20:	mov	r1, #32
   41c24:	mov	r2, r5
   41c28:	bl	14ee8 <memset@plt>
   41c2c:	ldr	r0, [r4, #20]
   41c30:	add	r0, r0, r5
   41c34:	str	r0, [r4, #20]
   41c38:	add	r1, r0, #1
   41c3c:	str	r1, [r4, #20]
   41c40:	mov	r1, #93	; 0x5d
   41c44:	strb	r1, [r0]
   41c48:	sub	sp, fp, #28
   41c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041c50 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   41c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41c54:	add	fp, sp, #28
   41c58:	sub	sp, sp, #4
   41c5c:	mov	r4, r0
   41c60:	ldrb	r0, [r0, #27]
   41c64:	cmp	r0, #0
   41c68:	beq	41c7c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   41c6c:	mov	r0, r4
   41c70:	sub	sp, fp, #28
   41c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41c78:	b	3ea70 <flatcc_json_printer_utype_vector_field@@Base>
   41c7c:	mov	r0, #4
   41c80:	add	r0, r0, r2, lsl #1
   41c84:	ldr	r2, [r1, #8]
   41c88:	cmp	r0, r2
   41c8c:	bge	41cac <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   41c90:	ldr	r2, [r1, #4]
   41c94:	add	r0, r2, r0
   41c98:	ldrh	r0, [r0]
   41c9c:	cmp	r0, #0
   41ca0:	ldrne	r2, [r1]
   41ca4:	addsne	r8, r2, r0
   41ca8:	bne	41cb4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   41cac:	sub	sp, fp, #28
   41cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41cb4:	ldr	r0, [r1, #16]
   41cb8:	ldr	sl, [fp, #12]
   41cbc:	ldr	r2, [fp, #8]
   41cc0:	add	r7, r0, #1
   41cc4:	cmp	r0, #0
   41cc8:	str	r7, [r1, #16]
   41ccc:	ldrne	r0, [r4, #20]
   41cd0:	addne	r1, r0, #1
   41cd4:	strne	r1, [r4, #20]
   41cd8:	movne	r1, #44	; 0x2c
   41cdc:	strbne	r1, [r0]
   41ce0:	mov	r1, r3
   41ce4:	ldr	r0, [r8]
   41ce8:	ldr	r9, [r8, r0]!
   41cec:	mov	r0, r4
   41cf0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   41cf4:	ldr	r1, [r4, #32]
   41cf8:	ldr	r0, [r4, #20]
   41cfc:	cmp	r9, #0
   41d00:	add	r1, r1, #1
   41d04:	str	r1, [r4, #32]
   41d08:	add	r1, r0, #1
   41d0c:	str	r1, [r4, #20]
   41d10:	mov	r1, #91	; 0x5b
   41d14:	strb	r1, [r0]
   41d18:	beq	41f28 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   41d1c:	ldrb	r1, [r4, #25]
   41d20:	ldr	r0, [r4, #20]
   41d24:	cmp	r1, #0
   41d28:	beq	41de4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   41d2c:	add	r1, r0, #1
   41d30:	str	r1, [r4, #20]
   41d34:	mov	r1, #10
   41d38:	strb	r1, [r0]
   41d3c:	ldr	r0, [r4, #20]
   41d40:	ldrb	r2, [r4, #25]
   41d44:	ldr	r3, [r4, #32]
   41d48:	ldr	r1, [r4, #16]
   41d4c:	mla	r7, r3, r2, r0
   41d50:	mul	r5, r3, r2
   41d54:	cmp	r7, r1
   41d58:	bls	41dc8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   41d5c:	cmp	r0, r1
   41d60:	bcc	41d7c <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   41d64:	ldr	r2, [r4, #44]	; 0x2c
   41d68:	mov	r0, r4
   41d6c:	mov	r1, #0
   41d70:	blx	r2
   41d74:	ldr	r1, [r4, #16]
   41d78:	ldr	r0, [r4, #20]
   41d7c:	sub	r6, r1, r0
   41d80:	cmp	r6, r5
   41d84:	bcs	41dc8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   41d88:	mov	r1, #32
   41d8c:	mov	r2, r6
   41d90:	bl	14ee8 <memset@plt>
   41d94:	ldr	r0, [r4, #20]
   41d98:	ldr	r2, [r4, #44]	; 0x2c
   41d9c:	mov	r1, #0
   41da0:	add	r0, r0, r6
   41da4:	str	r0, [r4, #20]
   41da8:	mov	r0, r4
   41dac:	blx	r2
   41db0:	ldr	r1, [r4, #16]
   41db4:	ldr	r0, [r4, #20]
   41db8:	sub	r5, r5, r6
   41dbc:	sub	r6, r1, r0
   41dc0:	cmp	r5, r6
   41dc4:	bhi	41d88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x138>
   41dc8:	mov	r1, #32
   41dcc:	mov	r2, r5
   41dd0:	bl	14ee8 <memset@plt>
   41dd4:	ldr	r0, [r4, #20]
   41dd8:	add	r0, r0, r5
   41ddc:	str	r0, [r4, #20]
   41de0:	b	41e00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   41de4:	ldr	r1, [r4, #16]
   41de8:	cmp	r0, r1
   41dec:	bcc	41e00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   41df0:	ldr	r2, [r4, #44]	; 0x2c
   41df4:	mov	r0, r4
   41df8:	mov	r1, #0
   41dfc:	blx	r2
   41e00:	ldrb	r1, [r8, #4]
   41e04:	mov	r0, r4
   41e08:	blx	sl
   41e0c:	subs	r9, r9, #1
   41e10:	beq	41f28 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   41e14:	add	r7, r8, #5
   41e18:	mov	r8, #44	; 0x2c
   41e1c:	ldr	r0, [r4, #20]
   41e20:	sub	r9, r9, #1
   41e24:	add	r1, r0, #1
   41e28:	str	r1, [r4, #20]
   41e2c:	strb	r8, [r0]
   41e30:	ldrb	r1, [r4, #25]
   41e34:	ldr	r0, [r4, #20]
   41e38:	cmp	r1, #0
   41e3c:	beq	41ef8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   41e40:	add	r1, r0, #1
   41e44:	str	r1, [r4, #20]
   41e48:	mov	r1, #10
   41e4c:	strb	r1, [r0]
   41e50:	ldr	r0, [r4, #20]
   41e54:	ldrb	r2, [r4, #25]
   41e58:	ldr	r3, [r4, #32]
   41e5c:	ldr	r1, [r4, #16]
   41e60:	mla	r6, r3, r2, r0
   41e64:	mul	r5, r3, r2
   41e68:	cmp	r6, r1
   41e6c:	bls	41edc <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   41e70:	cmp	r0, r1
   41e74:	bcc	41e90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x240>
   41e78:	ldr	r2, [r4, #44]	; 0x2c
   41e7c:	mov	r0, r4
   41e80:	mov	r1, #0
   41e84:	blx	r2
   41e88:	ldr	r1, [r4, #16]
   41e8c:	ldr	r0, [r4, #20]
   41e90:	sub	r6, r1, r0
   41e94:	cmp	r6, r5
   41e98:	bcs	41edc <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   41e9c:	mov	r1, #32
   41ea0:	mov	r2, r6
   41ea4:	bl	14ee8 <memset@plt>
   41ea8:	ldr	r0, [r4, #20]
   41eac:	ldr	r2, [r4, #44]	; 0x2c
   41eb0:	mov	r1, #0
   41eb4:	add	r0, r0, r6
   41eb8:	str	r0, [r4, #20]
   41ebc:	mov	r0, r4
   41ec0:	blx	r2
   41ec4:	ldr	r1, [r4, #16]
   41ec8:	ldr	r0, [r4, #20]
   41ecc:	sub	r5, r5, r6
   41ed0:	sub	r6, r1, r0
   41ed4:	cmp	r5, r6
   41ed8:	bhi	41e9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
   41edc:	mov	r1, #32
   41ee0:	mov	r2, r5
   41ee4:	bl	14ee8 <memset@plt>
   41ee8:	ldr	r0, [r4, #20]
   41eec:	add	r0, r0, r5
   41ef0:	str	r0, [r4, #20]
   41ef4:	b	41f14 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   41ef8:	ldr	r1, [r4, #16]
   41efc:	cmp	r0, r1
   41f00:	bcc	41f14 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   41f04:	ldr	r2, [r4, #44]	; 0x2c
   41f08:	mov	r0, r4
   41f0c:	mov	r1, #0
   41f10:	blx	r2
   41f14:	ldrb	r1, [r7], #1
   41f18:	mov	r0, r4
   41f1c:	blx	sl
   41f20:	cmp	r9, #0
   41f24:	bne	41e1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>
   41f28:	ldrb	r1, [r4, #25]
   41f2c:	ldr	r0, [r4, #20]
   41f30:	cmp	r1, #0
   41f34:	beq	41ff4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a4>
   41f38:	add	r1, r0, #1
   41f3c:	str	r1, [r4, #20]
   41f40:	mov	r1, #10
   41f44:	strb	r1, [r0]
   41f48:	ldr	r0, [r4, #32]
   41f4c:	sub	r2, r0, #1
   41f50:	str	r2, [r4, #32]
   41f54:	ldrb	r3, [r4, #25]
   41f58:	ldr	r0, [r4, #20]
   41f5c:	ldr	r1, [r4, #16]
   41f60:	mla	r7, r2, r3, r0
   41f64:	mul	r5, r2, r3
   41f68:	cmp	r7, r1
   41f6c:	bls	41fdc <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   41f70:	cmp	r0, r1
   41f74:	bcc	41f90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x340>
   41f78:	ldr	r2, [r4, #44]	; 0x2c
   41f7c:	mov	r0, r4
   41f80:	mov	r1, #0
   41f84:	blx	r2
   41f88:	ldr	r1, [r4, #16]
   41f8c:	ldr	r0, [r4, #20]
   41f90:	sub	r6, r1, r0
   41f94:	cmp	r6, r5
   41f98:	bcs	41fdc <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   41f9c:	mov	r1, #32
   41fa0:	mov	r2, r6
   41fa4:	bl	14ee8 <memset@plt>
   41fa8:	ldr	r0, [r4, #20]
   41fac:	ldr	r2, [r4, #44]	; 0x2c
   41fb0:	mov	r1, #0
   41fb4:	add	r0, r0, r6
   41fb8:	str	r0, [r4, #20]
   41fbc:	mov	r0, r4
   41fc0:	blx	r2
   41fc4:	ldr	r1, [r4, #16]
   41fc8:	ldr	r0, [r4, #20]
   41fcc:	sub	r5, r5, r6
   41fd0:	sub	r6, r1, r0
   41fd4:	cmp	r5, r6
   41fd8:	bhi	41f9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   41fdc:	mov	r1, #32
   41fe0:	mov	r2, r5
   41fe4:	bl	14ee8 <memset@plt>
   41fe8:	ldr	r0, [r4, #20]
   41fec:	add	r0, r0, r5
   41ff0:	str	r0, [r4, #20]
   41ff4:	add	r1, r0, #1
   41ff8:	str	r1, [r4, #20]
   41ffc:	mov	r1, #93	; 0x5d
   42000:	strb	r1, [r0]
   42004:	sub	sp, fp, #28
   42008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004200c <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   4200c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42010:	add	fp, sp, #28
   42014:	sub	sp, sp, #4
   42018:	mov	r4, r0
   4201c:	ldrb	r0, [r0, #27]
   42020:	cmp	r0, #0
   42024:	beq	42038 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   42028:	mov	r0, r4
   4202c:	sub	sp, fp, #28
   42030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42034:	b	3ef70 <flatcc_json_printer_uint8_vector_field@@Base>
   42038:	mov	r0, #4
   4203c:	add	r0, r0, r2, lsl #1
   42040:	ldr	r2, [r1, #8]
   42044:	cmp	r0, r2
   42048:	bge	42068 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   4204c:	ldr	r2, [r1, #4]
   42050:	add	r0, r2, r0
   42054:	ldrh	r0, [r0]
   42058:	cmp	r0, #0
   4205c:	ldrne	r2, [r1]
   42060:	addsne	r8, r2, r0
   42064:	bne	42070 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   42068:	sub	sp, fp, #28
   4206c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42070:	ldr	r0, [r1, #16]
   42074:	ldr	sl, [fp, #12]
   42078:	ldr	r2, [fp, #8]
   4207c:	add	r7, r0, #1
   42080:	cmp	r0, #0
   42084:	str	r7, [r1, #16]
   42088:	ldrne	r0, [r4, #20]
   4208c:	addne	r1, r0, #1
   42090:	strne	r1, [r4, #20]
   42094:	movne	r1, #44	; 0x2c
   42098:	strbne	r1, [r0]
   4209c:	mov	r1, r3
   420a0:	ldr	r0, [r8]
   420a4:	ldr	r9, [r8, r0]!
   420a8:	mov	r0, r4
   420ac:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   420b0:	ldr	r1, [r4, #32]
   420b4:	ldr	r0, [r4, #20]
   420b8:	cmp	r9, #0
   420bc:	add	r1, r1, #1
   420c0:	str	r1, [r4, #32]
   420c4:	add	r1, r0, #1
   420c8:	str	r1, [r4, #20]
   420cc:	mov	r1, #91	; 0x5b
   420d0:	strb	r1, [r0]
   420d4:	beq	422e4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   420d8:	ldrb	r1, [r4, #25]
   420dc:	ldr	r0, [r4, #20]
   420e0:	cmp	r1, #0
   420e4:	beq	421a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   420e8:	add	r1, r0, #1
   420ec:	str	r1, [r4, #20]
   420f0:	mov	r1, #10
   420f4:	strb	r1, [r0]
   420f8:	ldr	r0, [r4, #20]
   420fc:	ldrb	r2, [r4, #25]
   42100:	ldr	r3, [r4, #32]
   42104:	ldr	r1, [r4, #16]
   42108:	mla	r7, r3, r2, r0
   4210c:	mul	r5, r3, r2
   42110:	cmp	r7, r1
   42114:	bls	42184 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   42118:	cmp	r0, r1
   4211c:	bcc	42138 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   42120:	ldr	r2, [r4, #44]	; 0x2c
   42124:	mov	r0, r4
   42128:	mov	r1, #0
   4212c:	blx	r2
   42130:	ldr	r1, [r4, #16]
   42134:	ldr	r0, [r4, #20]
   42138:	sub	r6, r1, r0
   4213c:	cmp	r6, r5
   42140:	bcs	42184 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   42144:	mov	r1, #32
   42148:	mov	r2, r6
   4214c:	bl	14ee8 <memset@plt>
   42150:	ldr	r0, [r4, #20]
   42154:	ldr	r2, [r4, #44]	; 0x2c
   42158:	mov	r1, #0
   4215c:	add	r0, r0, r6
   42160:	str	r0, [r4, #20]
   42164:	mov	r0, r4
   42168:	blx	r2
   4216c:	ldr	r1, [r4, #16]
   42170:	ldr	r0, [r4, #20]
   42174:	sub	r5, r5, r6
   42178:	sub	r6, r1, r0
   4217c:	cmp	r5, r6
   42180:	bhi	42144 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x138>
   42184:	mov	r1, #32
   42188:	mov	r2, r5
   4218c:	bl	14ee8 <memset@plt>
   42190:	ldr	r0, [r4, #20]
   42194:	add	r0, r0, r5
   42198:	str	r0, [r4, #20]
   4219c:	b	421bc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   421a0:	ldr	r1, [r4, #16]
   421a4:	cmp	r0, r1
   421a8:	bcc	421bc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   421ac:	ldr	r2, [r4, #44]	; 0x2c
   421b0:	mov	r0, r4
   421b4:	mov	r1, #0
   421b8:	blx	r2
   421bc:	ldrb	r1, [r8, #4]
   421c0:	mov	r0, r4
   421c4:	blx	sl
   421c8:	subs	r9, r9, #1
   421cc:	beq	422e4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   421d0:	add	r7, r8, #5
   421d4:	mov	r8, #44	; 0x2c
   421d8:	ldr	r0, [r4, #20]
   421dc:	sub	r9, r9, #1
   421e0:	add	r1, r0, #1
   421e4:	str	r1, [r4, #20]
   421e8:	strb	r8, [r0]
   421ec:	ldrb	r1, [r4, #25]
   421f0:	ldr	r0, [r4, #20]
   421f4:	cmp	r1, #0
   421f8:	beq	422b4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   421fc:	add	r1, r0, #1
   42200:	str	r1, [r4, #20]
   42204:	mov	r1, #10
   42208:	strb	r1, [r0]
   4220c:	ldr	r0, [r4, #20]
   42210:	ldrb	r2, [r4, #25]
   42214:	ldr	r3, [r4, #32]
   42218:	ldr	r1, [r4, #16]
   4221c:	mla	r6, r3, r2, r0
   42220:	mul	r5, r3, r2
   42224:	cmp	r6, r1
   42228:	bls	42298 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   4222c:	cmp	r0, r1
   42230:	bcc	4224c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x240>
   42234:	ldr	r2, [r4, #44]	; 0x2c
   42238:	mov	r0, r4
   4223c:	mov	r1, #0
   42240:	blx	r2
   42244:	ldr	r1, [r4, #16]
   42248:	ldr	r0, [r4, #20]
   4224c:	sub	r6, r1, r0
   42250:	cmp	r6, r5
   42254:	bcs	42298 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   42258:	mov	r1, #32
   4225c:	mov	r2, r6
   42260:	bl	14ee8 <memset@plt>
   42264:	ldr	r0, [r4, #20]
   42268:	ldr	r2, [r4, #44]	; 0x2c
   4226c:	mov	r1, #0
   42270:	add	r0, r0, r6
   42274:	str	r0, [r4, #20]
   42278:	mov	r0, r4
   4227c:	blx	r2
   42280:	ldr	r1, [r4, #16]
   42284:	ldr	r0, [r4, #20]
   42288:	sub	r5, r5, r6
   4228c:	sub	r6, r1, r0
   42290:	cmp	r5, r6
   42294:	bhi	42258 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   42298:	mov	r1, #32
   4229c:	mov	r2, r5
   422a0:	bl	14ee8 <memset@plt>
   422a4:	ldr	r0, [r4, #20]
   422a8:	add	r0, r0, r5
   422ac:	str	r0, [r4, #20]
   422b0:	b	422d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   422b4:	ldr	r1, [r4, #16]
   422b8:	cmp	r0, r1
   422bc:	bcc	422d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   422c0:	ldr	r2, [r4, #44]	; 0x2c
   422c4:	mov	r0, r4
   422c8:	mov	r1, #0
   422cc:	blx	r2
   422d0:	ldrb	r1, [r7], #1
   422d4:	mov	r0, r4
   422d8:	blx	sl
   422dc:	cmp	r9, #0
   422e0:	bne	421d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   422e4:	ldrb	r1, [r4, #25]
   422e8:	ldr	r0, [r4, #20]
   422ec:	cmp	r1, #0
   422f0:	beq	423b0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a4>
   422f4:	add	r1, r0, #1
   422f8:	str	r1, [r4, #20]
   422fc:	mov	r1, #10
   42300:	strb	r1, [r0]
   42304:	ldr	r0, [r4, #32]
   42308:	sub	r2, r0, #1
   4230c:	str	r2, [r4, #32]
   42310:	ldrb	r3, [r4, #25]
   42314:	ldr	r0, [r4, #20]
   42318:	ldr	r1, [r4, #16]
   4231c:	mla	r7, r2, r3, r0
   42320:	mul	r5, r2, r3
   42324:	cmp	r7, r1
   42328:	bls	42398 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   4232c:	cmp	r0, r1
   42330:	bcc	4234c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x340>
   42334:	ldr	r2, [r4, #44]	; 0x2c
   42338:	mov	r0, r4
   4233c:	mov	r1, #0
   42340:	blx	r2
   42344:	ldr	r1, [r4, #16]
   42348:	ldr	r0, [r4, #20]
   4234c:	sub	r6, r1, r0
   42350:	cmp	r6, r5
   42354:	bcs	42398 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   42358:	mov	r1, #32
   4235c:	mov	r2, r6
   42360:	bl	14ee8 <memset@plt>
   42364:	ldr	r0, [r4, #20]
   42368:	ldr	r2, [r4, #44]	; 0x2c
   4236c:	mov	r1, #0
   42370:	add	r0, r0, r6
   42374:	str	r0, [r4, #20]
   42378:	mov	r0, r4
   4237c:	blx	r2
   42380:	ldr	r1, [r4, #16]
   42384:	ldr	r0, [r4, #20]
   42388:	sub	r5, r5, r6
   4238c:	sub	r6, r1, r0
   42390:	cmp	r5, r6
   42394:	bhi	42358 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   42398:	mov	r1, #32
   4239c:	mov	r2, r5
   423a0:	bl	14ee8 <memset@plt>
   423a4:	ldr	r0, [r4, #20]
   423a8:	add	r0, r0, r5
   423ac:	str	r0, [r4, #20]
   423b0:	add	r1, r0, #1
   423b4:	str	r1, [r4, #20]
   423b8:	mov	r1, #93	; 0x5d
   423bc:	strb	r1, [r0]
   423c0:	sub	sp, fp, #28
   423c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000423c8 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   423c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   423cc:	add	fp, sp, #28
   423d0:	sub	sp, sp, #4
   423d4:	mov	r4, r0
   423d8:	ldrb	r0, [r0, #27]
   423dc:	cmp	r0, #0
   423e0:	beq	423f4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   423e4:	mov	r0, r4
   423e8:	sub	sp, fp, #28
   423ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   423f0:	b	3f470 <flatcc_json_printer_uint16_vector_field@@Base>
   423f4:	mov	r0, #4
   423f8:	add	r0, r0, r2, lsl #1
   423fc:	ldr	r2, [r1, #8]
   42400:	cmp	r0, r2
   42404:	bge	42424 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   42408:	ldr	r2, [r1, #4]
   4240c:	add	r0, r2, r0
   42410:	ldrh	r0, [r0]
   42414:	cmp	r0, #0
   42418:	ldrne	r2, [r1]
   4241c:	addsne	r8, r2, r0
   42420:	bne	4242c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   42424:	sub	sp, fp, #28
   42428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4242c:	ldr	r0, [r1, #16]
   42430:	ldr	sl, [fp, #12]
   42434:	ldr	r2, [fp, #8]
   42438:	add	r7, r0, #1
   4243c:	cmp	r0, #0
   42440:	str	r7, [r1, #16]
   42444:	ldrne	r0, [r4, #20]
   42448:	addne	r1, r0, #1
   4244c:	strne	r1, [r4, #20]
   42450:	movne	r1, #44	; 0x2c
   42454:	strbne	r1, [r0]
   42458:	mov	r1, r3
   4245c:	ldr	r0, [r8]
   42460:	ldr	r9, [r8, r0]!
   42464:	mov	r0, r4
   42468:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   4246c:	ldr	r1, [r4, #32]
   42470:	ldr	r0, [r4, #20]
   42474:	cmp	r9, #0
   42478:	add	r1, r1, #1
   4247c:	str	r1, [r4, #32]
   42480:	add	r1, r0, #1
   42484:	str	r1, [r4, #20]
   42488:	mov	r1, #91	; 0x5b
   4248c:	strb	r1, [r0]
   42490:	beq	426a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   42494:	ldrb	r1, [r4, #25]
   42498:	ldr	r0, [r4, #20]
   4249c:	cmp	r1, #0
   424a0:	beq	4255c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   424a4:	add	r1, r0, #1
   424a8:	str	r1, [r4, #20]
   424ac:	mov	r1, #10
   424b0:	strb	r1, [r0]
   424b4:	ldr	r0, [r4, #20]
   424b8:	ldrb	r2, [r4, #25]
   424bc:	ldr	r3, [r4, #32]
   424c0:	ldr	r1, [r4, #16]
   424c4:	mla	r7, r3, r2, r0
   424c8:	mul	r5, r3, r2
   424cc:	cmp	r7, r1
   424d0:	bls	42540 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   424d4:	cmp	r0, r1
   424d8:	bcc	424f4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x12c>
   424dc:	ldr	r2, [r4, #44]	; 0x2c
   424e0:	mov	r0, r4
   424e4:	mov	r1, #0
   424e8:	blx	r2
   424ec:	ldr	r1, [r4, #16]
   424f0:	ldr	r0, [r4, #20]
   424f4:	sub	r6, r1, r0
   424f8:	cmp	r6, r5
   424fc:	bcs	42540 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   42500:	mov	r1, #32
   42504:	mov	r2, r6
   42508:	bl	14ee8 <memset@plt>
   4250c:	ldr	r0, [r4, #20]
   42510:	ldr	r2, [r4, #44]	; 0x2c
   42514:	mov	r1, #0
   42518:	add	r0, r0, r6
   4251c:	str	r0, [r4, #20]
   42520:	mov	r0, r4
   42524:	blx	r2
   42528:	ldr	r1, [r4, #16]
   4252c:	ldr	r0, [r4, #20]
   42530:	sub	r5, r5, r6
   42534:	sub	r6, r1, r0
   42538:	cmp	r5, r6
   4253c:	bhi	42500 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   42540:	mov	r1, #32
   42544:	mov	r2, r5
   42548:	bl	14ee8 <memset@plt>
   4254c:	ldr	r0, [r4, #20]
   42550:	add	r0, r0, r5
   42554:	str	r0, [r4, #20]
   42558:	b	42578 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   4255c:	ldr	r1, [r4, #16]
   42560:	cmp	r0, r1
   42564:	bcc	42578 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   42568:	ldr	r2, [r4, #44]	; 0x2c
   4256c:	mov	r0, r4
   42570:	mov	r1, #0
   42574:	blx	r2
   42578:	ldrh	r1, [r8, #4]
   4257c:	mov	r0, r4
   42580:	blx	sl
   42584:	subs	r9, r9, #1
   42588:	beq	426a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   4258c:	add	r7, r8, #6
   42590:	mov	r8, #44	; 0x2c
   42594:	ldr	r0, [r4, #20]
   42598:	sub	r9, r9, #1
   4259c:	add	r1, r0, #1
   425a0:	str	r1, [r4, #20]
   425a4:	strb	r8, [r0]
   425a8:	ldrb	r1, [r4, #25]
   425ac:	ldr	r0, [r4, #20]
   425b0:	cmp	r1, #0
   425b4:	beq	42670 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   425b8:	add	r1, r0, #1
   425bc:	str	r1, [r4, #20]
   425c0:	mov	r1, #10
   425c4:	strb	r1, [r0]
   425c8:	ldr	r0, [r4, #20]
   425cc:	ldrb	r2, [r4, #25]
   425d0:	ldr	r3, [r4, #32]
   425d4:	ldr	r1, [r4, #16]
   425d8:	mla	r6, r3, r2, r0
   425dc:	mul	r5, r3, r2
   425e0:	cmp	r6, r1
   425e4:	bls	42654 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   425e8:	cmp	r0, r1
   425ec:	bcc	42608 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x240>
   425f0:	ldr	r2, [r4, #44]	; 0x2c
   425f4:	mov	r0, r4
   425f8:	mov	r1, #0
   425fc:	blx	r2
   42600:	ldr	r1, [r4, #16]
   42604:	ldr	r0, [r4, #20]
   42608:	sub	r6, r1, r0
   4260c:	cmp	r6, r5
   42610:	bcs	42654 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   42614:	mov	r1, #32
   42618:	mov	r2, r6
   4261c:	bl	14ee8 <memset@plt>
   42620:	ldr	r0, [r4, #20]
   42624:	ldr	r2, [r4, #44]	; 0x2c
   42628:	mov	r1, #0
   4262c:	add	r0, r0, r6
   42630:	str	r0, [r4, #20]
   42634:	mov	r0, r4
   42638:	blx	r2
   4263c:	ldr	r1, [r4, #16]
   42640:	ldr	r0, [r4, #20]
   42644:	sub	r5, r5, r6
   42648:	sub	r6, r1, r0
   4264c:	cmp	r5, r6
   42650:	bhi	42614 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24c>
   42654:	mov	r1, #32
   42658:	mov	r2, r5
   4265c:	bl	14ee8 <memset@plt>
   42660:	ldr	r0, [r4, #20]
   42664:	add	r0, r0, r5
   42668:	str	r0, [r4, #20]
   4266c:	b	4268c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   42670:	ldr	r1, [r4, #16]
   42674:	cmp	r0, r1
   42678:	bcc	4268c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   4267c:	ldr	r2, [r4, #44]	; 0x2c
   42680:	mov	r0, r4
   42684:	mov	r1, #0
   42688:	blx	r2
   4268c:	ldrh	r1, [r7], #2
   42690:	mov	r0, r4
   42694:	blx	sl
   42698:	cmp	r9, #0
   4269c:	bne	42594 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1cc>
   426a0:	ldrb	r1, [r4, #25]
   426a4:	ldr	r0, [r4, #20]
   426a8:	cmp	r1, #0
   426ac:	beq	4276c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a4>
   426b0:	add	r1, r0, #1
   426b4:	str	r1, [r4, #20]
   426b8:	mov	r1, #10
   426bc:	strb	r1, [r0]
   426c0:	ldr	r0, [r4, #32]
   426c4:	sub	r2, r0, #1
   426c8:	str	r2, [r4, #32]
   426cc:	ldrb	r3, [r4, #25]
   426d0:	ldr	r0, [r4, #20]
   426d4:	ldr	r1, [r4, #16]
   426d8:	mla	r7, r2, r3, r0
   426dc:	mul	r5, r2, r3
   426e0:	cmp	r7, r1
   426e4:	bls	42754 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   426e8:	cmp	r0, r1
   426ec:	bcc	42708 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x340>
   426f0:	ldr	r2, [r4, #44]	; 0x2c
   426f4:	mov	r0, r4
   426f8:	mov	r1, #0
   426fc:	blx	r2
   42700:	ldr	r1, [r4, #16]
   42704:	ldr	r0, [r4, #20]
   42708:	sub	r6, r1, r0
   4270c:	cmp	r6, r5
   42710:	bcs	42754 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   42714:	mov	r1, #32
   42718:	mov	r2, r6
   4271c:	bl	14ee8 <memset@plt>
   42720:	ldr	r0, [r4, #20]
   42724:	ldr	r2, [r4, #44]	; 0x2c
   42728:	mov	r1, #0
   4272c:	add	r0, r0, r6
   42730:	str	r0, [r4, #20]
   42734:	mov	r0, r4
   42738:	blx	r2
   4273c:	ldr	r1, [r4, #16]
   42740:	ldr	r0, [r4, #20]
   42744:	sub	r5, r5, r6
   42748:	sub	r6, r1, r0
   4274c:	cmp	r5, r6
   42750:	bhi	42714 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   42754:	mov	r1, #32
   42758:	mov	r2, r5
   4275c:	bl	14ee8 <memset@plt>
   42760:	ldr	r0, [r4, #20]
   42764:	add	r0, r0, r5
   42768:	str	r0, [r4, #20]
   4276c:	add	r1, r0, #1
   42770:	str	r1, [r4, #20]
   42774:	mov	r1, #93	; 0x5d
   42778:	strb	r1, [r0]
   4277c:	sub	sp, fp, #28
   42780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042784 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   42784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42788:	add	fp, sp, #28
   4278c:	sub	sp, sp, #4
   42790:	mov	r4, r0
   42794:	ldrb	r0, [r0, #27]
   42798:	cmp	r0, #0
   4279c:	beq	427b0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   427a0:	mov	r0, r4
   427a4:	sub	sp, fp, #28
   427a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   427ac:	b	3f824 <flatcc_json_printer_uint32_vector_field@@Base>
   427b0:	mov	r0, #4
   427b4:	add	r0, r0, r2, lsl #1
   427b8:	ldr	r2, [r1, #8]
   427bc:	cmp	r0, r2
   427c0:	bge	427e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   427c4:	ldr	r2, [r1, #4]
   427c8:	add	r0, r2, r0
   427cc:	ldrh	r0, [r0]
   427d0:	cmp	r0, #0
   427d4:	ldrne	r2, [r1]
   427d8:	addsne	r8, r2, r0
   427dc:	bne	427e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   427e0:	sub	sp, fp, #28
   427e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   427e8:	ldr	r0, [r1, #16]
   427ec:	ldr	sl, [fp, #12]
   427f0:	ldr	r2, [fp, #8]
   427f4:	add	r7, r0, #1
   427f8:	cmp	r0, #0
   427fc:	str	r7, [r1, #16]
   42800:	ldrne	r0, [r4, #20]
   42804:	addne	r1, r0, #1
   42808:	strne	r1, [r4, #20]
   4280c:	movne	r1, #44	; 0x2c
   42810:	strbne	r1, [r0]
   42814:	mov	r1, r3
   42818:	ldr	r0, [r8]
   4281c:	ldr	r9, [r8, r0]!
   42820:	mov	r0, r4
   42824:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   42828:	ldr	r1, [r4, #32]
   4282c:	ldr	r0, [r4, #20]
   42830:	cmp	r9, #0
   42834:	add	r1, r1, #1
   42838:	str	r1, [r4, #32]
   4283c:	add	r1, r0, #1
   42840:	str	r1, [r4, #20]
   42844:	mov	r1, #91	; 0x5b
   42848:	strb	r1, [r0]
   4284c:	beq	42a5c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   42850:	ldrb	r1, [r4, #25]
   42854:	ldr	r0, [r4, #20]
   42858:	cmp	r1, #0
   4285c:	beq	42918 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x194>
   42860:	add	r1, r0, #1
   42864:	str	r1, [r4, #20]
   42868:	mov	r1, #10
   4286c:	strb	r1, [r0]
   42870:	ldr	r0, [r4, #20]
   42874:	ldrb	r2, [r4, #25]
   42878:	ldr	r3, [r4, #32]
   4287c:	ldr	r1, [r4, #16]
   42880:	mla	r7, r3, r2, r0
   42884:	mul	r5, r3, r2
   42888:	cmp	r7, r1
   4288c:	bls	428fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   42890:	cmp	r0, r1
   42894:	bcc	428b0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x12c>
   42898:	ldr	r2, [r4, #44]	; 0x2c
   4289c:	mov	r0, r4
   428a0:	mov	r1, #0
   428a4:	blx	r2
   428a8:	ldr	r1, [r4, #16]
   428ac:	ldr	r0, [r4, #20]
   428b0:	sub	r6, r1, r0
   428b4:	cmp	r6, r5
   428b8:	bcs	428fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   428bc:	mov	r1, #32
   428c0:	mov	r2, r6
   428c4:	bl	14ee8 <memset@plt>
   428c8:	ldr	r0, [r4, #20]
   428cc:	ldr	r2, [r4, #44]	; 0x2c
   428d0:	mov	r1, #0
   428d4:	add	r0, r0, r6
   428d8:	str	r0, [r4, #20]
   428dc:	mov	r0, r4
   428e0:	blx	r2
   428e4:	ldr	r1, [r4, #16]
   428e8:	ldr	r0, [r4, #20]
   428ec:	sub	r5, r5, r6
   428f0:	sub	r6, r1, r0
   428f4:	cmp	r5, r6
   428f8:	bhi	428bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   428fc:	mov	r1, #32
   42900:	mov	r2, r5
   42904:	bl	14ee8 <memset@plt>
   42908:	ldr	r0, [r4, #20]
   4290c:	add	r0, r0, r5
   42910:	str	r0, [r4, #20]
   42914:	b	42934 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   42918:	ldr	r1, [r4, #16]
   4291c:	cmp	r0, r1
   42920:	bcc	42934 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   42924:	ldr	r2, [r4, #44]	; 0x2c
   42928:	mov	r0, r4
   4292c:	mov	r1, #0
   42930:	blx	r2
   42934:	ldr	r1, [r8, #4]
   42938:	mov	r0, r4
   4293c:	blx	sl
   42940:	subs	r9, r9, #1
   42944:	beq	42a5c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   42948:	add	r7, r8, #8
   4294c:	mov	r8, #44	; 0x2c
   42950:	ldr	r0, [r4, #20]
   42954:	sub	r9, r9, #1
   42958:	add	r1, r0, #1
   4295c:	str	r1, [r4, #20]
   42960:	strb	r8, [r0]
   42964:	ldrb	r1, [r4, #25]
   42968:	ldr	r0, [r4, #20]
   4296c:	cmp	r1, #0
   42970:	beq	42a2c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   42974:	add	r1, r0, #1
   42978:	str	r1, [r4, #20]
   4297c:	mov	r1, #10
   42980:	strb	r1, [r0]
   42984:	ldr	r0, [r4, #20]
   42988:	ldrb	r2, [r4, #25]
   4298c:	ldr	r3, [r4, #32]
   42990:	ldr	r1, [r4, #16]
   42994:	mla	r6, r3, r2, r0
   42998:	mul	r5, r3, r2
   4299c:	cmp	r6, r1
   429a0:	bls	42a10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   429a4:	cmp	r0, r1
   429a8:	bcc	429c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x240>
   429ac:	ldr	r2, [r4, #44]	; 0x2c
   429b0:	mov	r0, r4
   429b4:	mov	r1, #0
   429b8:	blx	r2
   429bc:	ldr	r1, [r4, #16]
   429c0:	ldr	r0, [r4, #20]
   429c4:	sub	r6, r1, r0
   429c8:	cmp	r6, r5
   429cc:	bcs	42a10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   429d0:	mov	r1, #32
   429d4:	mov	r2, r6
   429d8:	bl	14ee8 <memset@plt>
   429dc:	ldr	r0, [r4, #20]
   429e0:	ldr	r2, [r4, #44]	; 0x2c
   429e4:	mov	r1, #0
   429e8:	add	r0, r0, r6
   429ec:	str	r0, [r4, #20]
   429f0:	mov	r0, r4
   429f4:	blx	r2
   429f8:	ldr	r1, [r4, #16]
   429fc:	ldr	r0, [r4, #20]
   42a00:	sub	r5, r5, r6
   42a04:	sub	r6, r1, r0
   42a08:	cmp	r5, r6
   42a0c:	bhi	429d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
   42a10:	mov	r1, #32
   42a14:	mov	r2, r5
   42a18:	bl	14ee8 <memset@plt>
   42a1c:	ldr	r0, [r4, #20]
   42a20:	add	r0, r0, r5
   42a24:	str	r0, [r4, #20]
   42a28:	b	42a48 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   42a2c:	ldr	r1, [r4, #16]
   42a30:	cmp	r0, r1
   42a34:	bcc	42a48 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   42a38:	ldr	r2, [r4, #44]	; 0x2c
   42a3c:	mov	r0, r4
   42a40:	mov	r1, #0
   42a44:	blx	r2
   42a48:	ldr	r1, [r7], #4
   42a4c:	mov	r0, r4
   42a50:	blx	sl
   42a54:	cmp	r9, #0
   42a58:	bne	42950 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cc>
   42a5c:	ldrb	r1, [r4, #25]
   42a60:	ldr	r0, [r4, #20]
   42a64:	cmp	r1, #0
   42a68:	beq	42b28 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a4>
   42a6c:	add	r1, r0, #1
   42a70:	str	r1, [r4, #20]
   42a74:	mov	r1, #10
   42a78:	strb	r1, [r0]
   42a7c:	ldr	r0, [r4, #32]
   42a80:	sub	r2, r0, #1
   42a84:	str	r2, [r4, #32]
   42a88:	ldrb	r3, [r4, #25]
   42a8c:	ldr	r0, [r4, #20]
   42a90:	ldr	r1, [r4, #16]
   42a94:	mla	r7, r2, r3, r0
   42a98:	mul	r5, r2, r3
   42a9c:	cmp	r7, r1
   42aa0:	bls	42b10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   42aa4:	cmp	r0, r1
   42aa8:	bcc	42ac4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x340>
   42aac:	ldr	r2, [r4, #44]	; 0x2c
   42ab0:	mov	r0, r4
   42ab4:	mov	r1, #0
   42ab8:	blx	r2
   42abc:	ldr	r1, [r4, #16]
   42ac0:	ldr	r0, [r4, #20]
   42ac4:	sub	r6, r1, r0
   42ac8:	cmp	r6, r5
   42acc:	bcs	42b10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   42ad0:	mov	r1, #32
   42ad4:	mov	r2, r6
   42ad8:	bl	14ee8 <memset@plt>
   42adc:	ldr	r0, [r4, #20]
   42ae0:	ldr	r2, [r4, #44]	; 0x2c
   42ae4:	mov	r1, #0
   42ae8:	add	r0, r0, r6
   42aec:	str	r0, [r4, #20]
   42af0:	mov	r0, r4
   42af4:	blx	r2
   42af8:	ldr	r1, [r4, #16]
   42afc:	ldr	r0, [r4, #20]
   42b00:	sub	r5, r5, r6
   42b04:	sub	r6, r1, r0
   42b08:	cmp	r5, r6
   42b0c:	bhi	42ad0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   42b10:	mov	r1, #32
   42b14:	mov	r2, r5
   42b18:	bl	14ee8 <memset@plt>
   42b1c:	ldr	r0, [r4, #20]
   42b20:	add	r0, r0, r5
   42b24:	str	r0, [r4, #20]
   42b28:	add	r1, r0, #1
   42b2c:	str	r1, [r4, #20]
   42b30:	mov	r1, #93	; 0x5d
   42b34:	strb	r1, [r0]
   42b38:	sub	sp, fp, #28
   42b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042b40 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   42b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42b44:	add	fp, sp, #28
   42b48:	sub	sp, sp, #4
   42b4c:	mov	r4, r0
   42b50:	ldrb	r0, [r0, #27]
   42b54:	cmp	r0, #0
   42b58:	beq	42b6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   42b5c:	mov	r0, r4
   42b60:	sub	sp, fp, #28
   42b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42b68:	b	3fbd8 <flatcc_json_printer_uint64_vector_field@@Base>
   42b6c:	mov	r0, #4
   42b70:	add	r0, r0, r2, lsl #1
   42b74:	ldr	r2, [r1, #8]
   42b78:	cmp	r0, r2
   42b7c:	bge	42b9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   42b80:	ldr	r2, [r1, #4]
   42b84:	add	r0, r2, r0
   42b88:	ldrh	r0, [r0]
   42b8c:	cmp	r0, #0
   42b90:	ldrne	r2, [r1]
   42b94:	addsne	r8, r2, r0
   42b98:	bne	42ba4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   42b9c:	sub	sp, fp, #28
   42ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42ba4:	ldr	r0, [r1, #16]
   42ba8:	ldr	sl, [fp, #12]
   42bac:	ldr	r2, [fp, #8]
   42bb0:	add	r7, r0, #1
   42bb4:	cmp	r0, #0
   42bb8:	str	r7, [r1, #16]
   42bbc:	ldrne	r0, [r4, #20]
   42bc0:	addne	r1, r0, #1
   42bc4:	strne	r1, [r4, #20]
   42bc8:	movne	r1, #44	; 0x2c
   42bcc:	strbne	r1, [r0]
   42bd0:	mov	r1, r3
   42bd4:	ldr	r0, [r8]
   42bd8:	ldr	r9, [r8, r0]!
   42bdc:	mov	r0, r4
   42be0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   42be4:	ldr	r1, [r4, #32]
   42be8:	ldr	r0, [r4, #20]
   42bec:	cmp	r9, #0
   42bf0:	add	r1, r1, #1
   42bf4:	str	r1, [r4, #32]
   42bf8:	add	r1, r0, #1
   42bfc:	str	r1, [r4, #20]
   42c00:	mov	r1, #91	; 0x5b
   42c04:	strb	r1, [r0]
   42c08:	beq	42e1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   42c0c:	ldrb	r1, [r4, #25]
   42c10:	ldr	r0, [r4, #20]
   42c14:	cmp	r1, #0
   42c18:	beq	42cd4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x194>
   42c1c:	add	r1, r0, #1
   42c20:	str	r1, [r4, #20]
   42c24:	mov	r1, #10
   42c28:	strb	r1, [r0]
   42c2c:	ldr	r0, [r4, #20]
   42c30:	ldrb	r2, [r4, #25]
   42c34:	ldr	r3, [r4, #32]
   42c38:	ldr	r1, [r4, #16]
   42c3c:	mla	r7, r3, r2, r0
   42c40:	mul	r5, r3, r2
   42c44:	cmp	r7, r1
   42c48:	bls	42cb8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   42c4c:	cmp	r0, r1
   42c50:	bcc	42c6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x12c>
   42c54:	ldr	r2, [r4, #44]	; 0x2c
   42c58:	mov	r0, r4
   42c5c:	mov	r1, #0
   42c60:	blx	r2
   42c64:	ldr	r1, [r4, #16]
   42c68:	ldr	r0, [r4, #20]
   42c6c:	sub	r6, r1, r0
   42c70:	cmp	r6, r5
   42c74:	bcs	42cb8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   42c78:	mov	r1, #32
   42c7c:	mov	r2, r6
   42c80:	bl	14ee8 <memset@plt>
   42c84:	ldr	r0, [r4, #20]
   42c88:	ldr	r2, [r4, #44]	; 0x2c
   42c8c:	mov	r1, #0
   42c90:	add	r0, r0, r6
   42c94:	str	r0, [r4, #20]
   42c98:	mov	r0, r4
   42c9c:	blx	r2
   42ca0:	ldr	r1, [r4, #16]
   42ca4:	ldr	r0, [r4, #20]
   42ca8:	sub	r5, r5, r6
   42cac:	sub	r6, r1, r0
   42cb0:	cmp	r5, r6
   42cb4:	bhi	42c78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   42cb8:	mov	r1, #32
   42cbc:	mov	r2, r5
   42cc0:	bl	14ee8 <memset@plt>
   42cc4:	ldr	r0, [r4, #20]
   42cc8:	add	r0, r0, r5
   42ccc:	str	r0, [r4, #20]
   42cd0:	b	42cf0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   42cd4:	ldr	r1, [r4, #16]
   42cd8:	cmp	r0, r1
   42cdc:	bcc	42cf0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   42ce0:	ldr	r2, [r4, #44]	; 0x2c
   42ce4:	mov	r0, r4
   42ce8:	mov	r1, #0
   42cec:	blx	r2
   42cf0:	ldrd	r2, [r8, #4]
   42cf4:	mov	r0, r4
   42cf8:	blx	sl
   42cfc:	subs	r9, r9, #1
   42d00:	beq	42e1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   42d04:	add	r7, r8, #12
   42d08:	mov	r8, #44	; 0x2c
   42d0c:	ldr	r0, [r4, #20]
   42d10:	sub	r9, r9, #1
   42d14:	add	r1, r0, #1
   42d18:	str	r1, [r4, #20]
   42d1c:	strb	r8, [r0]
   42d20:	ldrb	r1, [r4, #25]
   42d24:	ldr	r0, [r4, #20]
   42d28:	cmp	r1, #0
   42d2c:	beq	42de8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   42d30:	add	r1, r0, #1
   42d34:	str	r1, [r4, #20]
   42d38:	mov	r1, #10
   42d3c:	strb	r1, [r0]
   42d40:	ldr	r0, [r4, #20]
   42d44:	ldrb	r2, [r4, #25]
   42d48:	ldr	r3, [r4, #32]
   42d4c:	ldr	r1, [r4, #16]
   42d50:	mla	r6, r3, r2, r0
   42d54:	mul	r5, r3, r2
   42d58:	cmp	r6, r1
   42d5c:	bls	42dcc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   42d60:	cmp	r0, r1
   42d64:	bcc	42d80 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x240>
   42d68:	ldr	r2, [r4, #44]	; 0x2c
   42d6c:	mov	r0, r4
   42d70:	mov	r1, #0
   42d74:	blx	r2
   42d78:	ldr	r1, [r4, #16]
   42d7c:	ldr	r0, [r4, #20]
   42d80:	sub	r6, r1, r0
   42d84:	cmp	r6, r5
   42d88:	bcs	42dcc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   42d8c:	mov	r1, #32
   42d90:	mov	r2, r6
   42d94:	bl	14ee8 <memset@plt>
   42d98:	ldr	r0, [r4, #20]
   42d9c:	ldr	r2, [r4, #44]	; 0x2c
   42da0:	mov	r1, #0
   42da4:	add	r0, r0, r6
   42da8:	str	r0, [r4, #20]
   42dac:	mov	r0, r4
   42db0:	blx	r2
   42db4:	ldr	r1, [r4, #16]
   42db8:	ldr	r0, [r4, #20]
   42dbc:	sub	r5, r5, r6
   42dc0:	sub	r6, r1, r0
   42dc4:	cmp	r5, r6
   42dc8:	bhi	42d8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24c>
   42dcc:	mov	r1, #32
   42dd0:	mov	r2, r5
   42dd4:	bl	14ee8 <memset@plt>
   42dd8:	ldr	r0, [r4, #20]
   42ddc:	add	r0, r0, r5
   42de0:	str	r0, [r4, #20]
   42de4:	b	42e04 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   42de8:	ldr	r1, [r4, #16]
   42dec:	cmp	r0, r1
   42df0:	bcc	42e04 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   42df4:	ldr	r2, [r4, #44]	; 0x2c
   42df8:	mov	r0, r4
   42dfc:	mov	r1, #0
   42e00:	blx	r2
   42e04:	ldrd	r2, [r7]
   42e08:	mov	r0, r4
   42e0c:	blx	sl
   42e10:	add	r7, r7, #8
   42e14:	cmp	r9, #0
   42e18:	bne	42d0c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1cc>
   42e1c:	ldrb	r1, [r4, #25]
   42e20:	ldr	r0, [r4, #20]
   42e24:	cmp	r1, #0
   42e28:	beq	42ee8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a8>
   42e2c:	add	r1, r0, #1
   42e30:	str	r1, [r4, #20]
   42e34:	mov	r1, #10
   42e38:	strb	r1, [r0]
   42e3c:	ldr	r0, [r4, #32]
   42e40:	sub	r2, r0, #1
   42e44:	str	r2, [r4, #32]
   42e48:	ldrb	r3, [r4, #25]
   42e4c:	ldr	r0, [r4, #20]
   42e50:	ldr	r1, [r4, #16]
   42e54:	mla	r7, r2, r3, r0
   42e58:	mul	r5, r2, r3
   42e5c:	cmp	r7, r1
   42e60:	bls	42ed0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   42e64:	cmp	r0, r1
   42e68:	bcc	42e84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x344>
   42e6c:	ldr	r2, [r4, #44]	; 0x2c
   42e70:	mov	r0, r4
   42e74:	mov	r1, #0
   42e78:	blx	r2
   42e7c:	ldr	r1, [r4, #16]
   42e80:	ldr	r0, [r4, #20]
   42e84:	sub	r6, r1, r0
   42e88:	cmp	r6, r5
   42e8c:	bcs	42ed0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   42e90:	mov	r1, #32
   42e94:	mov	r2, r6
   42e98:	bl	14ee8 <memset@plt>
   42e9c:	ldr	r0, [r4, #20]
   42ea0:	ldr	r2, [r4, #44]	; 0x2c
   42ea4:	mov	r1, #0
   42ea8:	add	r0, r0, r6
   42eac:	str	r0, [r4, #20]
   42eb0:	mov	r0, r4
   42eb4:	blx	r2
   42eb8:	ldr	r1, [r4, #16]
   42ebc:	ldr	r0, [r4, #20]
   42ec0:	sub	r5, r5, r6
   42ec4:	sub	r6, r1, r0
   42ec8:	cmp	r5, r6
   42ecc:	bhi	42e90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   42ed0:	mov	r1, #32
   42ed4:	mov	r2, r5
   42ed8:	bl	14ee8 <memset@plt>
   42edc:	ldr	r0, [r4, #20]
   42ee0:	add	r0, r0, r5
   42ee4:	str	r0, [r4, #20]
   42ee8:	add	r1, r0, #1
   42eec:	str	r1, [r4, #20]
   42ef0:	mov	r1, #93	; 0x5d
   42ef4:	strb	r1, [r0]
   42ef8:	sub	sp, fp, #28
   42efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042f00 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   42f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42f04:	add	fp, sp, #28
   42f08:	sub	sp, sp, #4
   42f0c:	mov	r4, r0
   42f10:	ldrb	r0, [r0, #27]
   42f14:	cmp	r0, #0
   42f18:	beq	42f2c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   42f1c:	mov	r0, r4
   42f20:	sub	sp, fp, #28
   42f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42f28:	b	3ff90 <flatcc_json_printer_int8_vector_field@@Base>
   42f2c:	mov	r0, #4
   42f30:	add	r0, r0, r2, lsl #1
   42f34:	ldr	r2, [r1, #8]
   42f38:	cmp	r0, r2
   42f3c:	bge	42f5c <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   42f40:	ldr	r2, [r1, #4]
   42f44:	add	r0, r2, r0
   42f48:	ldrh	r0, [r0]
   42f4c:	cmp	r0, #0
   42f50:	ldrne	r2, [r1]
   42f54:	addsne	r8, r2, r0
   42f58:	bne	42f64 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   42f5c:	sub	sp, fp, #28
   42f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42f64:	ldr	r0, [r1, #16]
   42f68:	ldr	sl, [fp, #12]
   42f6c:	ldr	r2, [fp, #8]
   42f70:	add	r7, r0, #1
   42f74:	cmp	r0, #0
   42f78:	str	r7, [r1, #16]
   42f7c:	ldrne	r0, [r4, #20]
   42f80:	addne	r1, r0, #1
   42f84:	strne	r1, [r4, #20]
   42f88:	movne	r1, #44	; 0x2c
   42f8c:	strbne	r1, [r0]
   42f90:	mov	r1, r3
   42f94:	ldr	r0, [r8]
   42f98:	ldr	r9, [r8, r0]!
   42f9c:	mov	r0, r4
   42fa0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   42fa4:	ldr	r1, [r4, #32]
   42fa8:	ldr	r0, [r4, #20]
   42fac:	cmp	r9, #0
   42fb0:	add	r1, r1, #1
   42fb4:	str	r1, [r4, #32]
   42fb8:	add	r1, r0, #1
   42fbc:	str	r1, [r4, #20]
   42fc0:	mov	r1, #91	; 0x5b
   42fc4:	strb	r1, [r0]
   42fc8:	beq	431d8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   42fcc:	ldrb	r1, [r4, #25]
   42fd0:	ldr	r0, [r4, #20]
   42fd4:	cmp	r1, #0
   42fd8:	beq	43094 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   42fdc:	add	r1, r0, #1
   42fe0:	str	r1, [r4, #20]
   42fe4:	mov	r1, #10
   42fe8:	strb	r1, [r0]
   42fec:	ldr	r0, [r4, #20]
   42ff0:	ldrb	r2, [r4, #25]
   42ff4:	ldr	r3, [r4, #32]
   42ff8:	ldr	r1, [r4, #16]
   42ffc:	mla	r7, r3, r2, r0
   43000:	mul	r5, r3, r2
   43004:	cmp	r7, r1
   43008:	bls	43078 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   4300c:	cmp	r0, r1
   43010:	bcc	4302c <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   43014:	ldr	r2, [r4, #44]	; 0x2c
   43018:	mov	r0, r4
   4301c:	mov	r1, #0
   43020:	blx	r2
   43024:	ldr	r1, [r4, #16]
   43028:	ldr	r0, [r4, #20]
   4302c:	sub	r6, r1, r0
   43030:	cmp	r6, r5
   43034:	bcs	43078 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   43038:	mov	r1, #32
   4303c:	mov	r2, r6
   43040:	bl	14ee8 <memset@plt>
   43044:	ldr	r0, [r4, #20]
   43048:	ldr	r2, [r4, #44]	; 0x2c
   4304c:	mov	r1, #0
   43050:	add	r0, r0, r6
   43054:	str	r0, [r4, #20]
   43058:	mov	r0, r4
   4305c:	blx	r2
   43060:	ldr	r1, [r4, #16]
   43064:	ldr	r0, [r4, #20]
   43068:	sub	r5, r5, r6
   4306c:	sub	r6, r1, r0
   43070:	cmp	r5, r6
   43074:	bhi	43038 <flatcc_json_printer_int8_enum_vector_field@@Base+0x138>
   43078:	mov	r1, #32
   4307c:	mov	r2, r5
   43080:	bl	14ee8 <memset@plt>
   43084:	ldr	r0, [r4, #20]
   43088:	add	r0, r0, r5
   4308c:	str	r0, [r4, #20]
   43090:	b	430b0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   43094:	ldr	r1, [r4, #16]
   43098:	cmp	r0, r1
   4309c:	bcc	430b0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   430a0:	ldr	r2, [r4, #44]	; 0x2c
   430a4:	mov	r0, r4
   430a8:	mov	r1, #0
   430ac:	blx	r2
   430b0:	ldrsb	r1, [r8, #4]
   430b4:	mov	r0, r4
   430b8:	blx	sl
   430bc:	subs	r9, r9, #1
   430c0:	beq	431d8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   430c4:	add	r7, r8, #5
   430c8:	mov	r8, #44	; 0x2c
   430cc:	ldr	r0, [r4, #20]
   430d0:	sub	r9, r9, #1
   430d4:	add	r1, r0, #1
   430d8:	str	r1, [r4, #20]
   430dc:	strb	r8, [r0]
   430e0:	ldrb	r1, [r4, #25]
   430e4:	ldr	r0, [r4, #20]
   430e8:	cmp	r1, #0
   430ec:	beq	431a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   430f0:	add	r1, r0, #1
   430f4:	str	r1, [r4, #20]
   430f8:	mov	r1, #10
   430fc:	strb	r1, [r0]
   43100:	ldr	r0, [r4, #20]
   43104:	ldrb	r2, [r4, #25]
   43108:	ldr	r3, [r4, #32]
   4310c:	ldr	r1, [r4, #16]
   43110:	mla	r6, r3, r2, r0
   43114:	mul	r5, r3, r2
   43118:	cmp	r6, r1
   4311c:	bls	4318c <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   43120:	cmp	r0, r1
   43124:	bcc	43140 <flatcc_json_printer_int8_enum_vector_field@@Base+0x240>
   43128:	ldr	r2, [r4, #44]	; 0x2c
   4312c:	mov	r0, r4
   43130:	mov	r1, #0
   43134:	blx	r2
   43138:	ldr	r1, [r4, #16]
   4313c:	ldr	r0, [r4, #20]
   43140:	sub	r6, r1, r0
   43144:	cmp	r6, r5
   43148:	bcs	4318c <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   4314c:	mov	r1, #32
   43150:	mov	r2, r6
   43154:	bl	14ee8 <memset@plt>
   43158:	ldr	r0, [r4, #20]
   4315c:	ldr	r2, [r4, #44]	; 0x2c
   43160:	mov	r1, #0
   43164:	add	r0, r0, r6
   43168:	str	r0, [r4, #20]
   4316c:	mov	r0, r4
   43170:	blx	r2
   43174:	ldr	r1, [r4, #16]
   43178:	ldr	r0, [r4, #20]
   4317c:	sub	r5, r5, r6
   43180:	sub	r6, r1, r0
   43184:	cmp	r5, r6
   43188:	bhi	4314c <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   4318c:	mov	r1, #32
   43190:	mov	r2, r5
   43194:	bl	14ee8 <memset@plt>
   43198:	ldr	r0, [r4, #20]
   4319c:	add	r0, r0, r5
   431a0:	str	r0, [r4, #20]
   431a4:	b	431c4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   431a8:	ldr	r1, [r4, #16]
   431ac:	cmp	r0, r1
   431b0:	bcc	431c4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   431b4:	ldr	r2, [r4, #44]	; 0x2c
   431b8:	mov	r0, r4
   431bc:	mov	r1, #0
   431c0:	blx	r2
   431c4:	ldrsb	r1, [r7], #1
   431c8:	mov	r0, r4
   431cc:	blx	sl
   431d0:	cmp	r9, #0
   431d4:	bne	430cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   431d8:	ldrb	r1, [r4, #25]
   431dc:	ldr	r0, [r4, #20]
   431e0:	cmp	r1, #0
   431e4:	beq	432a4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a4>
   431e8:	add	r1, r0, #1
   431ec:	str	r1, [r4, #20]
   431f0:	mov	r1, #10
   431f4:	strb	r1, [r0]
   431f8:	ldr	r0, [r4, #32]
   431fc:	sub	r2, r0, #1
   43200:	str	r2, [r4, #32]
   43204:	ldrb	r3, [r4, #25]
   43208:	ldr	r0, [r4, #20]
   4320c:	ldr	r1, [r4, #16]
   43210:	mla	r7, r2, r3, r0
   43214:	mul	r5, r2, r3
   43218:	cmp	r7, r1
   4321c:	bls	4328c <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   43220:	cmp	r0, r1
   43224:	bcc	43240 <flatcc_json_printer_int8_enum_vector_field@@Base+0x340>
   43228:	ldr	r2, [r4, #44]	; 0x2c
   4322c:	mov	r0, r4
   43230:	mov	r1, #0
   43234:	blx	r2
   43238:	ldr	r1, [r4, #16]
   4323c:	ldr	r0, [r4, #20]
   43240:	sub	r6, r1, r0
   43244:	cmp	r6, r5
   43248:	bcs	4328c <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   4324c:	mov	r1, #32
   43250:	mov	r2, r6
   43254:	bl	14ee8 <memset@plt>
   43258:	ldr	r0, [r4, #20]
   4325c:	ldr	r2, [r4, #44]	; 0x2c
   43260:	mov	r1, #0
   43264:	add	r0, r0, r6
   43268:	str	r0, [r4, #20]
   4326c:	mov	r0, r4
   43270:	blx	r2
   43274:	ldr	r1, [r4, #16]
   43278:	ldr	r0, [r4, #20]
   4327c:	sub	r5, r5, r6
   43280:	sub	r6, r1, r0
   43284:	cmp	r5, r6
   43288:	bhi	4324c <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   4328c:	mov	r1, #32
   43290:	mov	r2, r5
   43294:	bl	14ee8 <memset@plt>
   43298:	ldr	r0, [r4, #20]
   4329c:	add	r0, r0, r5
   432a0:	str	r0, [r4, #20]
   432a4:	add	r1, r0, #1
   432a8:	str	r1, [r4, #20]
   432ac:	mov	r1, #93	; 0x5d
   432b0:	strb	r1, [r0]
   432b4:	sub	sp, fp, #28
   432b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000432bc <flatcc_json_printer_int16_enum_vector_field@@Base>:
   432bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   432c0:	add	fp, sp, #28
   432c4:	sub	sp, sp, #4
   432c8:	mov	r4, r0
   432cc:	ldrb	r0, [r0, #27]
   432d0:	cmp	r0, #0
   432d4:	beq	432e8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   432d8:	mov	r0, r4
   432dc:	sub	sp, fp, #28
   432e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   432e4:	b	404d8 <flatcc_json_printer_int16_vector_field@@Base>
   432e8:	mov	r0, #4
   432ec:	add	r0, r0, r2, lsl #1
   432f0:	ldr	r2, [r1, #8]
   432f4:	cmp	r0, r2
   432f8:	bge	43318 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   432fc:	ldr	r2, [r1, #4]
   43300:	add	r0, r2, r0
   43304:	ldrh	r0, [r0]
   43308:	cmp	r0, #0
   4330c:	ldrne	r2, [r1]
   43310:	addsne	r8, r2, r0
   43314:	bne	43320 <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   43318:	sub	sp, fp, #28
   4331c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43320:	ldr	r0, [r1, #16]
   43324:	ldr	sl, [fp, #12]
   43328:	ldr	r2, [fp, #8]
   4332c:	add	r7, r0, #1
   43330:	cmp	r0, #0
   43334:	str	r7, [r1, #16]
   43338:	ldrne	r0, [r4, #20]
   4333c:	addne	r1, r0, #1
   43340:	strne	r1, [r4, #20]
   43344:	movne	r1, #44	; 0x2c
   43348:	strbne	r1, [r0]
   4334c:	mov	r1, r3
   43350:	ldr	r0, [r8]
   43354:	ldr	r9, [r8, r0]!
   43358:	mov	r0, r4
   4335c:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   43360:	ldr	r1, [r4, #32]
   43364:	ldr	r0, [r4, #20]
   43368:	cmp	r9, #0
   4336c:	add	r1, r1, #1
   43370:	str	r1, [r4, #32]
   43374:	add	r1, r0, #1
   43378:	str	r1, [r4, #20]
   4337c:	mov	r1, #91	; 0x5b
   43380:	strb	r1, [r0]
   43384:	beq	43594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   43388:	ldrb	r1, [r4, #25]
   4338c:	ldr	r0, [r4, #20]
   43390:	cmp	r1, #0
   43394:	beq	43450 <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   43398:	add	r1, r0, #1
   4339c:	str	r1, [r4, #20]
   433a0:	mov	r1, #10
   433a4:	strb	r1, [r0]
   433a8:	ldr	r0, [r4, #20]
   433ac:	ldrb	r2, [r4, #25]
   433b0:	ldr	r3, [r4, #32]
   433b4:	ldr	r1, [r4, #16]
   433b8:	mla	r7, r3, r2, r0
   433bc:	mul	r5, r3, r2
   433c0:	cmp	r7, r1
   433c4:	bls	43434 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   433c8:	cmp	r0, r1
   433cc:	bcc	433e8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x12c>
   433d0:	ldr	r2, [r4, #44]	; 0x2c
   433d4:	mov	r0, r4
   433d8:	mov	r1, #0
   433dc:	blx	r2
   433e0:	ldr	r1, [r4, #16]
   433e4:	ldr	r0, [r4, #20]
   433e8:	sub	r6, r1, r0
   433ec:	cmp	r6, r5
   433f0:	bcs	43434 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   433f4:	mov	r1, #32
   433f8:	mov	r2, r6
   433fc:	bl	14ee8 <memset@plt>
   43400:	ldr	r0, [r4, #20]
   43404:	ldr	r2, [r4, #44]	; 0x2c
   43408:	mov	r1, #0
   4340c:	add	r0, r0, r6
   43410:	str	r0, [r4, #20]
   43414:	mov	r0, r4
   43418:	blx	r2
   4341c:	ldr	r1, [r4, #16]
   43420:	ldr	r0, [r4, #20]
   43424:	sub	r5, r5, r6
   43428:	sub	r6, r1, r0
   4342c:	cmp	r5, r6
   43430:	bhi	433f4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   43434:	mov	r1, #32
   43438:	mov	r2, r5
   4343c:	bl	14ee8 <memset@plt>
   43440:	ldr	r0, [r4, #20]
   43444:	add	r0, r0, r5
   43448:	str	r0, [r4, #20]
   4344c:	b	4346c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   43450:	ldr	r1, [r4, #16]
   43454:	cmp	r0, r1
   43458:	bcc	4346c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   4345c:	ldr	r2, [r4, #44]	; 0x2c
   43460:	mov	r0, r4
   43464:	mov	r1, #0
   43468:	blx	r2
   4346c:	ldrsh	r1, [r8, #4]
   43470:	mov	r0, r4
   43474:	blx	sl
   43478:	subs	r9, r9, #1
   4347c:	beq	43594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   43480:	add	r7, r8, #6
   43484:	mov	r8, #44	; 0x2c
   43488:	ldr	r0, [r4, #20]
   4348c:	sub	r9, r9, #1
   43490:	add	r1, r0, #1
   43494:	str	r1, [r4, #20]
   43498:	strb	r8, [r0]
   4349c:	ldrb	r1, [r4, #25]
   434a0:	ldr	r0, [r4, #20]
   434a4:	cmp	r1, #0
   434a8:	beq	43564 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   434ac:	add	r1, r0, #1
   434b0:	str	r1, [r4, #20]
   434b4:	mov	r1, #10
   434b8:	strb	r1, [r0]
   434bc:	ldr	r0, [r4, #20]
   434c0:	ldrb	r2, [r4, #25]
   434c4:	ldr	r3, [r4, #32]
   434c8:	ldr	r1, [r4, #16]
   434cc:	mla	r6, r3, r2, r0
   434d0:	mul	r5, r3, r2
   434d4:	cmp	r6, r1
   434d8:	bls	43548 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   434dc:	cmp	r0, r1
   434e0:	bcc	434fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x240>
   434e4:	ldr	r2, [r4, #44]	; 0x2c
   434e8:	mov	r0, r4
   434ec:	mov	r1, #0
   434f0:	blx	r2
   434f4:	ldr	r1, [r4, #16]
   434f8:	ldr	r0, [r4, #20]
   434fc:	sub	r6, r1, r0
   43500:	cmp	r6, r5
   43504:	bcs	43548 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   43508:	mov	r1, #32
   4350c:	mov	r2, r6
   43510:	bl	14ee8 <memset@plt>
   43514:	ldr	r0, [r4, #20]
   43518:	ldr	r2, [r4, #44]	; 0x2c
   4351c:	mov	r1, #0
   43520:	add	r0, r0, r6
   43524:	str	r0, [r4, #20]
   43528:	mov	r0, r4
   4352c:	blx	r2
   43530:	ldr	r1, [r4, #16]
   43534:	ldr	r0, [r4, #20]
   43538:	sub	r5, r5, r6
   4353c:	sub	r6, r1, r0
   43540:	cmp	r5, r6
   43544:	bhi	43508 <flatcc_json_printer_int16_enum_vector_field@@Base+0x24c>
   43548:	mov	r1, #32
   4354c:	mov	r2, r5
   43550:	bl	14ee8 <memset@plt>
   43554:	ldr	r0, [r4, #20]
   43558:	add	r0, r0, r5
   4355c:	str	r0, [r4, #20]
   43560:	b	43580 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   43564:	ldr	r1, [r4, #16]
   43568:	cmp	r0, r1
   4356c:	bcc	43580 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   43570:	ldr	r2, [r4, #44]	; 0x2c
   43574:	mov	r0, r4
   43578:	mov	r1, #0
   4357c:	blx	r2
   43580:	ldrsh	r1, [r7], #2
   43584:	mov	r0, r4
   43588:	blx	sl
   4358c:	cmp	r9, #0
   43590:	bne	43488 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1cc>
   43594:	ldrb	r1, [r4, #25]
   43598:	ldr	r0, [r4, #20]
   4359c:	cmp	r1, #0
   435a0:	beq	43660 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a4>
   435a4:	add	r1, r0, #1
   435a8:	str	r1, [r4, #20]
   435ac:	mov	r1, #10
   435b0:	strb	r1, [r0]
   435b4:	ldr	r0, [r4, #32]
   435b8:	sub	r2, r0, #1
   435bc:	str	r2, [r4, #32]
   435c0:	ldrb	r3, [r4, #25]
   435c4:	ldr	r0, [r4, #20]
   435c8:	ldr	r1, [r4, #16]
   435cc:	mla	r7, r2, r3, r0
   435d0:	mul	r5, r2, r3
   435d4:	cmp	r7, r1
   435d8:	bls	43648 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   435dc:	cmp	r0, r1
   435e0:	bcc	435fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x340>
   435e4:	ldr	r2, [r4, #44]	; 0x2c
   435e8:	mov	r0, r4
   435ec:	mov	r1, #0
   435f0:	blx	r2
   435f4:	ldr	r1, [r4, #16]
   435f8:	ldr	r0, [r4, #20]
   435fc:	sub	r6, r1, r0
   43600:	cmp	r6, r5
   43604:	bcs	43648 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   43608:	mov	r1, #32
   4360c:	mov	r2, r6
   43610:	bl	14ee8 <memset@plt>
   43614:	ldr	r0, [r4, #20]
   43618:	ldr	r2, [r4, #44]	; 0x2c
   4361c:	mov	r1, #0
   43620:	add	r0, r0, r6
   43624:	str	r0, [r4, #20]
   43628:	mov	r0, r4
   4362c:	blx	r2
   43630:	ldr	r1, [r4, #16]
   43634:	ldr	r0, [r4, #20]
   43638:	sub	r5, r5, r6
   4363c:	sub	r6, r1, r0
   43640:	cmp	r5, r6
   43644:	bhi	43608 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   43648:	mov	r1, #32
   4364c:	mov	r2, r5
   43650:	bl	14ee8 <memset@plt>
   43654:	ldr	r0, [r4, #20]
   43658:	add	r0, r0, r5
   4365c:	str	r0, [r4, #20]
   43660:	add	r1, r0, #1
   43664:	str	r1, [r4, #20]
   43668:	mov	r1, #93	; 0x5d
   4366c:	strb	r1, [r0]
   43670:	sub	sp, fp, #28
   43674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043678 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   43678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4367c:	add	fp, sp, #28
   43680:	sub	sp, sp, #4
   43684:	mov	r4, r0
   43688:	ldrb	r0, [r0, #27]
   4368c:	cmp	r0, #0
   43690:	beq	436a4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   43694:	mov	r0, r4
   43698:	sub	sp, fp, #28
   4369c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   436a0:	b	408d0 <flatcc_json_printer_int32_vector_field@@Base>
   436a4:	mov	r0, #4
   436a8:	add	r0, r0, r2, lsl #1
   436ac:	ldr	r2, [r1, #8]
   436b0:	cmp	r0, r2
   436b4:	bge	436d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   436b8:	ldr	r2, [r1, #4]
   436bc:	add	r0, r2, r0
   436c0:	ldrh	r0, [r0]
   436c4:	cmp	r0, #0
   436c8:	ldrne	r2, [r1]
   436cc:	addsne	r8, r2, r0
   436d0:	bne	436dc <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   436d4:	sub	sp, fp, #28
   436d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   436dc:	ldr	r0, [r1, #16]
   436e0:	ldr	sl, [fp, #12]
   436e4:	ldr	r2, [fp, #8]
   436e8:	add	r7, r0, #1
   436ec:	cmp	r0, #0
   436f0:	str	r7, [r1, #16]
   436f4:	ldrne	r0, [r4, #20]
   436f8:	addne	r1, r0, #1
   436fc:	strne	r1, [r4, #20]
   43700:	movne	r1, #44	; 0x2c
   43704:	strbne	r1, [r0]
   43708:	mov	r1, r3
   4370c:	ldr	r0, [r8]
   43710:	ldr	r9, [r8, r0]!
   43714:	mov	r0, r4
   43718:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   4371c:	ldr	r1, [r4, #32]
   43720:	ldr	r0, [r4, #20]
   43724:	cmp	r9, #0
   43728:	add	r1, r1, #1
   4372c:	str	r1, [r4, #32]
   43730:	add	r1, r0, #1
   43734:	str	r1, [r4, #20]
   43738:	mov	r1, #91	; 0x5b
   4373c:	strb	r1, [r0]
   43740:	beq	43950 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   43744:	ldrb	r1, [r4, #25]
   43748:	ldr	r0, [r4, #20]
   4374c:	cmp	r1, #0
   43750:	beq	4380c <flatcc_json_printer_int32_enum_vector_field@@Base+0x194>
   43754:	add	r1, r0, #1
   43758:	str	r1, [r4, #20]
   4375c:	mov	r1, #10
   43760:	strb	r1, [r0]
   43764:	ldr	r0, [r4, #20]
   43768:	ldrb	r2, [r4, #25]
   4376c:	ldr	r3, [r4, #32]
   43770:	ldr	r1, [r4, #16]
   43774:	mla	r7, r3, r2, r0
   43778:	mul	r5, r3, r2
   4377c:	cmp	r7, r1
   43780:	bls	437f0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   43784:	cmp	r0, r1
   43788:	bcc	437a4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x12c>
   4378c:	ldr	r2, [r4, #44]	; 0x2c
   43790:	mov	r0, r4
   43794:	mov	r1, #0
   43798:	blx	r2
   4379c:	ldr	r1, [r4, #16]
   437a0:	ldr	r0, [r4, #20]
   437a4:	sub	r6, r1, r0
   437a8:	cmp	r6, r5
   437ac:	bcs	437f0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   437b0:	mov	r1, #32
   437b4:	mov	r2, r6
   437b8:	bl	14ee8 <memset@plt>
   437bc:	ldr	r0, [r4, #20]
   437c0:	ldr	r2, [r4, #44]	; 0x2c
   437c4:	mov	r1, #0
   437c8:	add	r0, r0, r6
   437cc:	str	r0, [r4, #20]
   437d0:	mov	r0, r4
   437d4:	blx	r2
   437d8:	ldr	r1, [r4, #16]
   437dc:	ldr	r0, [r4, #20]
   437e0:	sub	r5, r5, r6
   437e4:	sub	r6, r1, r0
   437e8:	cmp	r5, r6
   437ec:	bhi	437b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   437f0:	mov	r1, #32
   437f4:	mov	r2, r5
   437f8:	bl	14ee8 <memset@plt>
   437fc:	ldr	r0, [r4, #20]
   43800:	add	r0, r0, r5
   43804:	str	r0, [r4, #20]
   43808:	b	43828 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   4380c:	ldr	r1, [r4, #16]
   43810:	cmp	r0, r1
   43814:	bcc	43828 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   43818:	ldr	r2, [r4, #44]	; 0x2c
   4381c:	mov	r0, r4
   43820:	mov	r1, #0
   43824:	blx	r2
   43828:	ldr	r1, [r8, #4]
   4382c:	mov	r0, r4
   43830:	blx	sl
   43834:	subs	r9, r9, #1
   43838:	beq	43950 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   4383c:	add	r7, r8, #8
   43840:	mov	r8, #44	; 0x2c
   43844:	ldr	r0, [r4, #20]
   43848:	sub	r9, r9, #1
   4384c:	add	r1, r0, #1
   43850:	str	r1, [r4, #20]
   43854:	strb	r8, [r0]
   43858:	ldrb	r1, [r4, #25]
   4385c:	ldr	r0, [r4, #20]
   43860:	cmp	r1, #0
   43864:	beq	43920 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   43868:	add	r1, r0, #1
   4386c:	str	r1, [r4, #20]
   43870:	mov	r1, #10
   43874:	strb	r1, [r0]
   43878:	ldr	r0, [r4, #20]
   4387c:	ldrb	r2, [r4, #25]
   43880:	ldr	r3, [r4, #32]
   43884:	ldr	r1, [r4, #16]
   43888:	mla	r6, r3, r2, r0
   4388c:	mul	r5, r3, r2
   43890:	cmp	r6, r1
   43894:	bls	43904 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   43898:	cmp	r0, r1
   4389c:	bcc	438b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x240>
   438a0:	ldr	r2, [r4, #44]	; 0x2c
   438a4:	mov	r0, r4
   438a8:	mov	r1, #0
   438ac:	blx	r2
   438b0:	ldr	r1, [r4, #16]
   438b4:	ldr	r0, [r4, #20]
   438b8:	sub	r6, r1, r0
   438bc:	cmp	r6, r5
   438c0:	bcs	43904 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   438c4:	mov	r1, #32
   438c8:	mov	r2, r6
   438cc:	bl	14ee8 <memset@plt>
   438d0:	ldr	r0, [r4, #20]
   438d4:	ldr	r2, [r4, #44]	; 0x2c
   438d8:	mov	r1, #0
   438dc:	add	r0, r0, r6
   438e0:	str	r0, [r4, #20]
   438e4:	mov	r0, r4
   438e8:	blx	r2
   438ec:	ldr	r1, [r4, #16]
   438f0:	ldr	r0, [r4, #20]
   438f4:	sub	r5, r5, r6
   438f8:	sub	r6, r1, r0
   438fc:	cmp	r5, r6
   43900:	bhi	438c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
   43904:	mov	r1, #32
   43908:	mov	r2, r5
   4390c:	bl	14ee8 <memset@plt>
   43910:	ldr	r0, [r4, #20]
   43914:	add	r0, r0, r5
   43918:	str	r0, [r4, #20]
   4391c:	b	4393c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   43920:	ldr	r1, [r4, #16]
   43924:	cmp	r0, r1
   43928:	bcc	4393c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   4392c:	ldr	r2, [r4, #44]	; 0x2c
   43930:	mov	r0, r4
   43934:	mov	r1, #0
   43938:	blx	r2
   4393c:	ldr	r1, [r7], #4
   43940:	mov	r0, r4
   43944:	blx	sl
   43948:	cmp	r9, #0
   4394c:	bne	43844 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cc>
   43950:	ldrb	r1, [r4, #25]
   43954:	ldr	r0, [r4, #20]
   43958:	cmp	r1, #0
   4395c:	beq	43a1c <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a4>
   43960:	add	r1, r0, #1
   43964:	str	r1, [r4, #20]
   43968:	mov	r1, #10
   4396c:	strb	r1, [r0]
   43970:	ldr	r0, [r4, #32]
   43974:	sub	r2, r0, #1
   43978:	str	r2, [r4, #32]
   4397c:	ldrb	r3, [r4, #25]
   43980:	ldr	r0, [r4, #20]
   43984:	ldr	r1, [r4, #16]
   43988:	mla	r7, r2, r3, r0
   4398c:	mul	r5, r2, r3
   43990:	cmp	r7, r1
   43994:	bls	43a04 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   43998:	cmp	r0, r1
   4399c:	bcc	439b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x340>
   439a0:	ldr	r2, [r4, #44]	; 0x2c
   439a4:	mov	r0, r4
   439a8:	mov	r1, #0
   439ac:	blx	r2
   439b0:	ldr	r1, [r4, #16]
   439b4:	ldr	r0, [r4, #20]
   439b8:	sub	r6, r1, r0
   439bc:	cmp	r6, r5
   439c0:	bcs	43a04 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   439c4:	mov	r1, #32
   439c8:	mov	r2, r6
   439cc:	bl	14ee8 <memset@plt>
   439d0:	ldr	r0, [r4, #20]
   439d4:	ldr	r2, [r4, #44]	; 0x2c
   439d8:	mov	r1, #0
   439dc:	add	r0, r0, r6
   439e0:	str	r0, [r4, #20]
   439e4:	mov	r0, r4
   439e8:	blx	r2
   439ec:	ldr	r1, [r4, #16]
   439f0:	ldr	r0, [r4, #20]
   439f4:	sub	r5, r5, r6
   439f8:	sub	r6, r1, r0
   439fc:	cmp	r5, r6
   43a00:	bhi	439c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   43a04:	mov	r1, #32
   43a08:	mov	r2, r5
   43a0c:	bl	14ee8 <memset@plt>
   43a10:	ldr	r0, [r4, #20]
   43a14:	add	r0, r0, r5
   43a18:	str	r0, [r4, #20]
   43a1c:	add	r1, r0, #1
   43a20:	str	r1, [r4, #20]
   43a24:	mov	r1, #93	; 0x5d
   43a28:	strb	r1, [r0]
   43a2c:	sub	sp, fp, #28
   43a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043a34 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   43a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43a38:	add	fp, sp, #28
   43a3c:	sub	sp, sp, #4
   43a40:	mov	r4, r0
   43a44:	ldrb	r0, [r0, #27]
   43a48:	cmp	r0, #0
   43a4c:	beq	43a60 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   43a50:	mov	r0, r4
   43a54:	sub	sp, fp, #28
   43a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43a5c:	b	40cb8 <flatcc_json_printer_int64_vector_field@@Base>
   43a60:	mov	r0, #4
   43a64:	add	r0, r0, r2, lsl #1
   43a68:	ldr	r2, [r1, #8]
   43a6c:	cmp	r0, r2
   43a70:	bge	43a90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   43a74:	ldr	r2, [r1, #4]
   43a78:	add	r0, r2, r0
   43a7c:	ldrh	r0, [r0]
   43a80:	cmp	r0, #0
   43a84:	ldrne	r2, [r1]
   43a88:	addsne	r8, r2, r0
   43a8c:	bne	43a98 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   43a90:	sub	sp, fp, #28
   43a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43a98:	ldr	r0, [r1, #16]
   43a9c:	ldr	sl, [fp, #12]
   43aa0:	ldr	r2, [fp, #8]
   43aa4:	add	r7, r0, #1
   43aa8:	cmp	r0, #0
   43aac:	str	r7, [r1, #16]
   43ab0:	ldrne	r0, [r4, #20]
   43ab4:	addne	r1, r0, #1
   43ab8:	strne	r1, [r4, #20]
   43abc:	movne	r1, #44	; 0x2c
   43ac0:	strbne	r1, [r0]
   43ac4:	mov	r1, r3
   43ac8:	ldr	r0, [r8]
   43acc:	ldr	r9, [r8, r0]!
   43ad0:	mov	r0, r4
   43ad4:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   43ad8:	ldr	r1, [r4, #32]
   43adc:	ldr	r0, [r4, #20]
   43ae0:	cmp	r9, #0
   43ae4:	add	r1, r1, #1
   43ae8:	str	r1, [r4, #32]
   43aec:	add	r1, r0, #1
   43af0:	str	r1, [r4, #20]
   43af4:	mov	r1, #91	; 0x5b
   43af8:	strb	r1, [r0]
   43afc:	beq	43d10 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   43b00:	ldrb	r1, [r4, #25]
   43b04:	ldr	r0, [r4, #20]
   43b08:	cmp	r1, #0
   43b0c:	beq	43bc8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x194>
   43b10:	add	r1, r0, #1
   43b14:	str	r1, [r4, #20]
   43b18:	mov	r1, #10
   43b1c:	strb	r1, [r0]
   43b20:	ldr	r0, [r4, #20]
   43b24:	ldrb	r2, [r4, #25]
   43b28:	ldr	r3, [r4, #32]
   43b2c:	ldr	r1, [r4, #16]
   43b30:	mla	r7, r3, r2, r0
   43b34:	mul	r5, r3, r2
   43b38:	cmp	r7, r1
   43b3c:	bls	43bac <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   43b40:	cmp	r0, r1
   43b44:	bcc	43b60 <flatcc_json_printer_int64_enum_vector_field@@Base+0x12c>
   43b48:	ldr	r2, [r4, #44]	; 0x2c
   43b4c:	mov	r0, r4
   43b50:	mov	r1, #0
   43b54:	blx	r2
   43b58:	ldr	r1, [r4, #16]
   43b5c:	ldr	r0, [r4, #20]
   43b60:	sub	r6, r1, r0
   43b64:	cmp	r6, r5
   43b68:	bcs	43bac <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   43b6c:	mov	r1, #32
   43b70:	mov	r2, r6
   43b74:	bl	14ee8 <memset@plt>
   43b78:	ldr	r0, [r4, #20]
   43b7c:	ldr	r2, [r4, #44]	; 0x2c
   43b80:	mov	r1, #0
   43b84:	add	r0, r0, r6
   43b88:	str	r0, [r4, #20]
   43b8c:	mov	r0, r4
   43b90:	blx	r2
   43b94:	ldr	r1, [r4, #16]
   43b98:	ldr	r0, [r4, #20]
   43b9c:	sub	r5, r5, r6
   43ba0:	sub	r6, r1, r0
   43ba4:	cmp	r5, r6
   43ba8:	bhi	43b6c <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   43bac:	mov	r1, #32
   43bb0:	mov	r2, r5
   43bb4:	bl	14ee8 <memset@plt>
   43bb8:	ldr	r0, [r4, #20]
   43bbc:	add	r0, r0, r5
   43bc0:	str	r0, [r4, #20]
   43bc4:	b	43be4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   43bc8:	ldr	r1, [r4, #16]
   43bcc:	cmp	r0, r1
   43bd0:	bcc	43be4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   43bd4:	ldr	r2, [r4, #44]	; 0x2c
   43bd8:	mov	r0, r4
   43bdc:	mov	r1, #0
   43be0:	blx	r2
   43be4:	ldrd	r2, [r8, #4]
   43be8:	mov	r0, r4
   43bec:	blx	sl
   43bf0:	subs	r9, r9, #1
   43bf4:	beq	43d10 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   43bf8:	add	r7, r8, #12
   43bfc:	mov	r8, #44	; 0x2c
   43c00:	ldr	r0, [r4, #20]
   43c04:	sub	r9, r9, #1
   43c08:	add	r1, r0, #1
   43c0c:	str	r1, [r4, #20]
   43c10:	strb	r8, [r0]
   43c14:	ldrb	r1, [r4, #25]
   43c18:	ldr	r0, [r4, #20]
   43c1c:	cmp	r1, #0
   43c20:	beq	43cdc <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   43c24:	add	r1, r0, #1
   43c28:	str	r1, [r4, #20]
   43c2c:	mov	r1, #10
   43c30:	strb	r1, [r0]
   43c34:	ldr	r0, [r4, #20]
   43c38:	ldrb	r2, [r4, #25]
   43c3c:	ldr	r3, [r4, #32]
   43c40:	ldr	r1, [r4, #16]
   43c44:	mla	r6, r3, r2, r0
   43c48:	mul	r5, r3, r2
   43c4c:	cmp	r6, r1
   43c50:	bls	43cc0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   43c54:	cmp	r0, r1
   43c58:	bcc	43c74 <flatcc_json_printer_int64_enum_vector_field@@Base+0x240>
   43c5c:	ldr	r2, [r4, #44]	; 0x2c
   43c60:	mov	r0, r4
   43c64:	mov	r1, #0
   43c68:	blx	r2
   43c6c:	ldr	r1, [r4, #16]
   43c70:	ldr	r0, [r4, #20]
   43c74:	sub	r6, r1, r0
   43c78:	cmp	r6, r5
   43c7c:	bcs	43cc0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   43c80:	mov	r1, #32
   43c84:	mov	r2, r6
   43c88:	bl	14ee8 <memset@plt>
   43c8c:	ldr	r0, [r4, #20]
   43c90:	ldr	r2, [r4, #44]	; 0x2c
   43c94:	mov	r1, #0
   43c98:	add	r0, r0, r6
   43c9c:	str	r0, [r4, #20]
   43ca0:	mov	r0, r4
   43ca4:	blx	r2
   43ca8:	ldr	r1, [r4, #16]
   43cac:	ldr	r0, [r4, #20]
   43cb0:	sub	r5, r5, r6
   43cb4:	sub	r6, r1, r0
   43cb8:	cmp	r5, r6
   43cbc:	bhi	43c80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x24c>
   43cc0:	mov	r1, #32
   43cc4:	mov	r2, r5
   43cc8:	bl	14ee8 <memset@plt>
   43ccc:	ldr	r0, [r4, #20]
   43cd0:	add	r0, r0, r5
   43cd4:	str	r0, [r4, #20]
   43cd8:	b	43cf8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   43cdc:	ldr	r1, [r4, #16]
   43ce0:	cmp	r0, r1
   43ce4:	bcc	43cf8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   43ce8:	ldr	r2, [r4, #44]	; 0x2c
   43cec:	mov	r0, r4
   43cf0:	mov	r1, #0
   43cf4:	blx	r2
   43cf8:	ldrd	r2, [r7]
   43cfc:	mov	r0, r4
   43d00:	blx	sl
   43d04:	add	r7, r7, #8
   43d08:	cmp	r9, #0
   43d0c:	bne	43c00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1cc>
   43d10:	ldrb	r1, [r4, #25]
   43d14:	ldr	r0, [r4, #20]
   43d18:	cmp	r1, #0
   43d1c:	beq	43ddc <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a8>
   43d20:	add	r1, r0, #1
   43d24:	str	r1, [r4, #20]
   43d28:	mov	r1, #10
   43d2c:	strb	r1, [r0]
   43d30:	ldr	r0, [r4, #32]
   43d34:	sub	r2, r0, #1
   43d38:	str	r2, [r4, #32]
   43d3c:	ldrb	r3, [r4, #25]
   43d40:	ldr	r0, [r4, #20]
   43d44:	ldr	r1, [r4, #16]
   43d48:	mla	r7, r2, r3, r0
   43d4c:	mul	r5, r2, r3
   43d50:	cmp	r7, r1
   43d54:	bls	43dc4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   43d58:	cmp	r0, r1
   43d5c:	bcc	43d78 <flatcc_json_printer_int64_enum_vector_field@@Base+0x344>
   43d60:	ldr	r2, [r4, #44]	; 0x2c
   43d64:	mov	r0, r4
   43d68:	mov	r1, #0
   43d6c:	blx	r2
   43d70:	ldr	r1, [r4, #16]
   43d74:	ldr	r0, [r4, #20]
   43d78:	sub	r6, r1, r0
   43d7c:	cmp	r6, r5
   43d80:	bcs	43dc4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   43d84:	mov	r1, #32
   43d88:	mov	r2, r6
   43d8c:	bl	14ee8 <memset@plt>
   43d90:	ldr	r0, [r4, #20]
   43d94:	ldr	r2, [r4, #44]	; 0x2c
   43d98:	mov	r1, #0
   43d9c:	add	r0, r0, r6
   43da0:	str	r0, [r4, #20]
   43da4:	mov	r0, r4
   43da8:	blx	r2
   43dac:	ldr	r1, [r4, #16]
   43db0:	ldr	r0, [r4, #20]
   43db4:	sub	r5, r5, r6
   43db8:	sub	r6, r1, r0
   43dbc:	cmp	r5, r6
   43dc0:	bhi	43d84 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   43dc4:	mov	r1, #32
   43dc8:	mov	r2, r5
   43dcc:	bl	14ee8 <memset@plt>
   43dd0:	ldr	r0, [r4, #20]
   43dd4:	add	r0, r0, r5
   43dd8:	str	r0, [r4, #20]
   43ddc:	add	r1, r0, #1
   43de0:	str	r1, [r4, #20]
   43de4:	mov	r1, #93	; 0x5d
   43de8:	strb	r1, [r0]
   43dec:	sub	sp, fp, #28
   43df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043df4 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   43df4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43df8:	add	fp, sp, #28
   43dfc:	sub	sp, sp, #4
   43e00:	mov	r4, r0
   43e04:	ldrb	r0, [r0, #27]
   43e08:	cmp	r0, #0
   43e0c:	beq	43e20 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   43e10:	mov	r0, r4
   43e14:	sub	sp, fp, #28
   43e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43e1c:	b	410b0 <flatcc_json_printer_bool_vector_field@@Base>
   43e20:	mov	r0, #4
   43e24:	add	r0, r0, r2, lsl #1
   43e28:	ldr	r2, [r1, #8]
   43e2c:	cmp	r0, r2
   43e30:	bge	43e50 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   43e34:	ldr	r2, [r1, #4]
   43e38:	add	r0, r2, r0
   43e3c:	ldrh	r0, [r0]
   43e40:	cmp	r0, #0
   43e44:	ldrne	r2, [r1]
   43e48:	addsne	r8, r2, r0
   43e4c:	bne	43e58 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   43e50:	sub	sp, fp, #28
   43e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43e58:	ldr	r0, [r1, #16]
   43e5c:	ldr	sl, [fp, #12]
   43e60:	ldr	r2, [fp, #8]
   43e64:	add	r7, r0, #1
   43e68:	cmp	r0, #0
   43e6c:	str	r7, [r1, #16]
   43e70:	ldrne	r0, [r4, #20]
   43e74:	addne	r1, r0, #1
   43e78:	strne	r1, [r4, #20]
   43e7c:	movne	r1, #44	; 0x2c
   43e80:	strbne	r1, [r0]
   43e84:	mov	r1, r3
   43e88:	ldr	r0, [r8]
   43e8c:	ldr	r9, [r8, r0]!
   43e90:	mov	r0, r4
   43e94:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   43e98:	ldr	r1, [r4, #32]
   43e9c:	ldr	r0, [r4, #20]
   43ea0:	cmp	r9, #0
   43ea4:	add	r1, r1, #1
   43ea8:	str	r1, [r4, #32]
   43eac:	add	r1, r0, #1
   43eb0:	str	r1, [r4, #20]
   43eb4:	mov	r1, #91	; 0x5b
   43eb8:	strb	r1, [r0]
   43ebc:	beq	440cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   43ec0:	ldrb	r1, [r4, #25]
   43ec4:	ldr	r0, [r4, #20]
   43ec8:	cmp	r1, #0
   43ecc:	beq	43f88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   43ed0:	add	r1, r0, #1
   43ed4:	str	r1, [r4, #20]
   43ed8:	mov	r1, #10
   43edc:	strb	r1, [r0]
   43ee0:	ldr	r0, [r4, #20]
   43ee4:	ldrb	r2, [r4, #25]
   43ee8:	ldr	r3, [r4, #32]
   43eec:	ldr	r1, [r4, #16]
   43ef0:	mla	r7, r3, r2, r0
   43ef4:	mul	r5, r3, r2
   43ef8:	cmp	r7, r1
   43efc:	bls	43f6c <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   43f00:	cmp	r0, r1
   43f04:	bcc	43f20 <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   43f08:	ldr	r2, [r4, #44]	; 0x2c
   43f0c:	mov	r0, r4
   43f10:	mov	r1, #0
   43f14:	blx	r2
   43f18:	ldr	r1, [r4, #16]
   43f1c:	ldr	r0, [r4, #20]
   43f20:	sub	r6, r1, r0
   43f24:	cmp	r6, r5
   43f28:	bcs	43f6c <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   43f2c:	mov	r1, #32
   43f30:	mov	r2, r6
   43f34:	bl	14ee8 <memset@plt>
   43f38:	ldr	r0, [r4, #20]
   43f3c:	ldr	r2, [r4, #44]	; 0x2c
   43f40:	mov	r1, #0
   43f44:	add	r0, r0, r6
   43f48:	str	r0, [r4, #20]
   43f4c:	mov	r0, r4
   43f50:	blx	r2
   43f54:	ldr	r1, [r4, #16]
   43f58:	ldr	r0, [r4, #20]
   43f5c:	sub	r5, r5, r6
   43f60:	sub	r6, r1, r0
   43f64:	cmp	r5, r6
   43f68:	bhi	43f2c <flatcc_json_printer_bool_enum_vector_field@@Base+0x138>
   43f6c:	mov	r1, #32
   43f70:	mov	r2, r5
   43f74:	bl	14ee8 <memset@plt>
   43f78:	ldr	r0, [r4, #20]
   43f7c:	add	r0, r0, r5
   43f80:	str	r0, [r4, #20]
   43f84:	b	43fa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   43f88:	ldr	r1, [r4, #16]
   43f8c:	cmp	r0, r1
   43f90:	bcc	43fa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   43f94:	ldr	r2, [r4, #44]	; 0x2c
   43f98:	mov	r0, r4
   43f9c:	mov	r1, #0
   43fa0:	blx	r2
   43fa4:	ldrb	r1, [r8, #4]
   43fa8:	mov	r0, r4
   43fac:	blx	sl
   43fb0:	subs	r9, r9, #1
   43fb4:	beq	440cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   43fb8:	add	r7, r8, #5
   43fbc:	mov	r8, #44	; 0x2c
   43fc0:	ldr	r0, [r4, #20]
   43fc4:	sub	r9, r9, #1
   43fc8:	add	r1, r0, #1
   43fcc:	str	r1, [r4, #20]
   43fd0:	strb	r8, [r0]
   43fd4:	ldrb	r1, [r4, #25]
   43fd8:	ldr	r0, [r4, #20]
   43fdc:	cmp	r1, #0
   43fe0:	beq	4409c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   43fe4:	add	r1, r0, #1
   43fe8:	str	r1, [r4, #20]
   43fec:	mov	r1, #10
   43ff0:	strb	r1, [r0]
   43ff4:	ldr	r0, [r4, #20]
   43ff8:	ldrb	r2, [r4, #25]
   43ffc:	ldr	r3, [r4, #32]
   44000:	ldr	r1, [r4, #16]
   44004:	mla	r6, r3, r2, r0
   44008:	mul	r5, r3, r2
   4400c:	cmp	r6, r1
   44010:	bls	44080 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   44014:	cmp	r0, r1
   44018:	bcc	44034 <flatcc_json_printer_bool_enum_vector_field@@Base+0x240>
   4401c:	ldr	r2, [r4, #44]	; 0x2c
   44020:	mov	r0, r4
   44024:	mov	r1, #0
   44028:	blx	r2
   4402c:	ldr	r1, [r4, #16]
   44030:	ldr	r0, [r4, #20]
   44034:	sub	r6, r1, r0
   44038:	cmp	r6, r5
   4403c:	bcs	44080 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   44040:	mov	r1, #32
   44044:	mov	r2, r6
   44048:	bl	14ee8 <memset@plt>
   4404c:	ldr	r0, [r4, #20]
   44050:	ldr	r2, [r4, #44]	; 0x2c
   44054:	mov	r1, #0
   44058:	add	r0, r0, r6
   4405c:	str	r0, [r4, #20]
   44060:	mov	r0, r4
   44064:	blx	r2
   44068:	ldr	r1, [r4, #16]
   4406c:	ldr	r0, [r4, #20]
   44070:	sub	r5, r5, r6
   44074:	sub	r6, r1, r0
   44078:	cmp	r5, r6
   4407c:	bhi	44040 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   44080:	mov	r1, #32
   44084:	mov	r2, r5
   44088:	bl	14ee8 <memset@plt>
   4408c:	ldr	r0, [r4, #20]
   44090:	add	r0, r0, r5
   44094:	str	r0, [r4, #20]
   44098:	b	440b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   4409c:	ldr	r1, [r4, #16]
   440a0:	cmp	r0, r1
   440a4:	bcc	440b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   440a8:	ldr	r2, [r4, #44]	; 0x2c
   440ac:	mov	r0, r4
   440b0:	mov	r1, #0
   440b4:	blx	r2
   440b8:	ldrb	r1, [r7], #1
   440bc:	mov	r0, r4
   440c0:	blx	sl
   440c4:	cmp	r9, #0
   440c8:	bne	43fc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   440cc:	ldrb	r1, [r4, #25]
   440d0:	ldr	r0, [r4, #20]
   440d4:	cmp	r1, #0
   440d8:	beq	44198 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a4>
   440dc:	add	r1, r0, #1
   440e0:	str	r1, [r4, #20]
   440e4:	mov	r1, #10
   440e8:	strb	r1, [r0]
   440ec:	ldr	r0, [r4, #32]
   440f0:	sub	r2, r0, #1
   440f4:	str	r2, [r4, #32]
   440f8:	ldrb	r3, [r4, #25]
   440fc:	ldr	r0, [r4, #20]
   44100:	ldr	r1, [r4, #16]
   44104:	mla	r7, r2, r3, r0
   44108:	mul	r5, r2, r3
   4410c:	cmp	r7, r1
   44110:	bls	44180 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   44114:	cmp	r0, r1
   44118:	bcc	44134 <flatcc_json_printer_bool_enum_vector_field@@Base+0x340>
   4411c:	ldr	r2, [r4, #44]	; 0x2c
   44120:	mov	r0, r4
   44124:	mov	r1, #0
   44128:	blx	r2
   4412c:	ldr	r1, [r4, #16]
   44130:	ldr	r0, [r4, #20]
   44134:	sub	r6, r1, r0
   44138:	cmp	r6, r5
   4413c:	bcs	44180 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   44140:	mov	r1, #32
   44144:	mov	r2, r6
   44148:	bl	14ee8 <memset@plt>
   4414c:	ldr	r0, [r4, #20]
   44150:	ldr	r2, [r4, #44]	; 0x2c
   44154:	mov	r1, #0
   44158:	add	r0, r0, r6
   4415c:	str	r0, [r4, #20]
   44160:	mov	r0, r4
   44164:	blx	r2
   44168:	ldr	r1, [r4, #16]
   4416c:	ldr	r0, [r4, #20]
   44170:	sub	r5, r5, r6
   44174:	sub	r6, r1, r0
   44178:	cmp	r5, r6
   4417c:	bhi	44140 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   44180:	mov	r1, #32
   44184:	mov	r2, r5
   44188:	bl	14ee8 <memset@plt>
   4418c:	ldr	r0, [r4, #20]
   44190:	add	r0, r0, r5
   44194:	str	r0, [r4, #20]
   44198:	add	r1, r0, #1
   4419c:	str	r1, [r4, #20]
   441a0:	mov	r1, #93	; 0x5d
   441a4:	strb	r1, [r0]
   441a8:	sub	sp, fp, #28
   441ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000441b0 <flatcc_json_printer_struct_vector_field@@Base>:
   441b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   441b4:	add	fp, sp, #28
   441b8:	sub	sp, sp, #4
   441bc:	mov	r4, r0
   441c0:	mov	r0, #4
   441c4:	add	r0, r0, r2, lsl #1
   441c8:	ldr	r2, [r1, #8]
   441cc:	cmp	r0, r2
   441d0:	bge	441f0 <flatcc_json_printer_struct_vector_field@@Base+0x40>
   441d4:	ldr	r2, [r1, #4]
   441d8:	add	r0, r2, r0
   441dc:	ldrh	r0, [r0]
   441e0:	cmp	r0, #0
   441e4:	ldrne	r2, [r1]
   441e8:	addsne	r6, r2, r0
   441ec:	bne	441f8 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   441f0:	sub	sp, fp, #28
   441f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   441f8:	ldr	r0, [r1, #16]
   441fc:	ldr	r2, [fp, #8]
   44200:	add	r7, r0, #1
   44204:	cmp	r0, #0
   44208:	str	r7, [r1, #16]
   4420c:	ldrne	r0, [r4, #20]
   44210:	addne	r1, r0, #1
   44214:	strne	r1, [r4, #20]
   44218:	movne	r1, #44	; 0x2c
   4421c:	strbne	r1, [r0]
   44220:	mov	r1, r3
   44224:	ldr	r0, [r6]
   44228:	ldr	r5, [r6, r0]!
   4422c:	mov	r0, r4
   44230:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   44234:	ldr	r1, [r4, #32]
   44238:	ldr	r0, [r4, #20]
   4423c:	cmp	r5, #0
   44240:	add	r1, r1, #1
   44244:	str	r1, [r4, #32]
   44248:	add	r1, r0, #1
   4424c:	str	r1, [r4, #20]
   44250:	mov	r1, #91	; 0x5b
   44254:	strb	r1, [r0]
   44258:	beq	44668 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   4425c:	ldrb	r1, [r4, #25]
   44260:	ldr	r0, [r4, #20]
   44264:	add	r9, r6, #4
   44268:	cmp	r1, #0
   4426c:	beq	44328 <flatcc_json_printer_struct_vector_field@@Base+0x178>
   44270:	add	r1, r0, #1
   44274:	str	r1, [r4, #20]
   44278:	mov	r1, #10
   4427c:	strb	r1, [r0]
   44280:	ldr	r0, [r4, #20]
   44284:	ldrb	r2, [r4, #25]
   44288:	ldr	r3, [r4, #32]
   4428c:	ldr	r1, [r4, #16]
   44290:	mla	r7, r3, r2, r0
   44294:	mul	r6, r3, r2
   44298:	cmp	r7, r1
   4429c:	bls	4430c <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   442a0:	cmp	r0, r1
   442a4:	bcc	442c0 <flatcc_json_printer_struct_vector_field@@Base+0x110>
   442a8:	ldr	r2, [r4, #44]	; 0x2c
   442ac:	mov	r0, r4
   442b0:	mov	r1, #0
   442b4:	blx	r2
   442b8:	ldr	r1, [r4, #16]
   442bc:	ldr	r0, [r4, #20]
   442c0:	sub	r7, r1, r0
   442c4:	cmp	r7, r6
   442c8:	bcs	4430c <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   442cc:	mov	r1, #32
   442d0:	mov	r2, r7
   442d4:	bl	14ee8 <memset@plt>
   442d8:	ldr	r0, [r4, #20]
   442dc:	ldr	r2, [r4, #44]	; 0x2c
   442e0:	mov	r1, #0
   442e4:	add	r0, r0, r7
   442e8:	str	r0, [r4, #20]
   442ec:	mov	r0, r4
   442f0:	blx	r2
   442f4:	ldr	r1, [r4, #16]
   442f8:	ldr	r0, [r4, #20]
   442fc:	sub	r6, r6, r7
   44300:	sub	r7, r1, r0
   44304:	cmp	r6, r7
   44308:	bhi	442cc <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   4430c:	mov	r1, #32
   44310:	mov	r2, r6
   44314:	bl	14ee8 <memset@plt>
   44318:	ldr	r0, [r4, #20]
   4431c:	add	r0, r0, r6
   44320:	str	r0, [r4, #20]
   44324:	b	44348 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   44328:	ldr	r1, [r4, #16]
   4432c:	cmp	r0, r1
   44330:	bcc	44348 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   44334:	ldr	r2, [r4, #44]	; 0x2c
   44338:	mov	r0, r4
   4433c:	mov	r1, #0
   44340:	blx	r2
   44344:	ldr	r0, [r4, #20]
   44348:	add	r1, r0, #1
   4434c:	ldr	r2, [fp, #16]
   44350:	str	r1, [r4, #20]
   44354:	ldr	r1, [r4, #32]
   44358:	add	r1, r1, #1
   4435c:	str	r1, [r4, #32]
   44360:	mov	r1, #123	; 0x7b
   44364:	strb	r1, [r0]
   44368:	mov	r0, r4
   4436c:	mov	r1, r9
   44370:	blx	r2
   44374:	ldrb	r1, [r4, #25]
   44378:	ldr	r0, [r4, #20]
   4437c:	cmp	r1, #0
   44380:	beq	44440 <flatcc_json_printer_struct_vector_field@@Base+0x290>
   44384:	add	r1, r0, #1
   44388:	str	r1, [r4, #20]
   4438c:	mov	r1, #10
   44390:	strb	r1, [r0]
   44394:	ldr	r0, [r4, #32]
   44398:	sub	r2, r0, #1
   4439c:	str	r2, [r4, #32]
   443a0:	ldrb	r3, [r4, #25]
   443a4:	ldr	r0, [r4, #20]
   443a8:	ldr	r1, [r4, #16]
   443ac:	mla	r7, r2, r3, r0
   443b0:	mul	r6, r2, r3
   443b4:	cmp	r7, r1
   443b8:	bls	44428 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   443bc:	cmp	r0, r1
   443c0:	bcc	443dc <flatcc_json_printer_struct_vector_field@@Base+0x22c>
   443c4:	ldr	r2, [r4, #44]	; 0x2c
   443c8:	mov	r0, r4
   443cc:	mov	r1, #0
   443d0:	blx	r2
   443d4:	ldr	r1, [r4, #16]
   443d8:	ldr	r0, [r4, #20]
   443dc:	sub	r7, r1, r0
   443e0:	cmp	r7, r6
   443e4:	bcs	44428 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   443e8:	mov	r1, #32
   443ec:	mov	r2, r7
   443f0:	bl	14ee8 <memset@plt>
   443f4:	ldr	r0, [r4, #20]
   443f8:	ldr	r2, [r4, #44]	; 0x2c
   443fc:	mov	r1, #0
   44400:	add	r0, r0, r7
   44404:	str	r0, [r4, #20]
   44408:	mov	r0, r4
   4440c:	blx	r2
   44410:	ldr	r1, [r4, #16]
   44414:	ldr	r0, [r4, #20]
   44418:	sub	r6, r6, r7
   4441c:	sub	r7, r1, r0
   44420:	cmp	r6, r7
   44424:	bhi	443e8 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   44428:	mov	r1, #32
   4442c:	mov	r2, r6
   44430:	bl	14ee8 <memset@plt>
   44434:	ldr	r0, [r4, #20]
   44438:	add	r0, r0, r6
   4443c:	str	r0, [r4, #20]
   44440:	add	r1, r0, #1
   44444:	mov	sl, #125	; 0x7d
   44448:	subs	r5, r5, #1
   4444c:	str	r1, [r4, #20]
   44450:	strb	sl, [r0]
   44454:	beq	44668 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   44458:	mov	r8, #10
   4445c:	ldr	r0, [r4, #20]
   44460:	add	r1, r0, #1
   44464:	str	r1, [r4, #20]
   44468:	mov	r1, #44	; 0x2c
   4446c:	strb	r1, [r0]
   44470:	ldr	r0, [fp, #12]
   44474:	ldrb	r1, [r4, #25]
   44478:	add	r9, r9, r0
   4447c:	ldr	r0, [r4, #20]
   44480:	cmp	r1, #0
   44484:	beq	4453c <flatcc_json_printer_struct_vector_field@@Base+0x38c>
   44488:	add	r1, r0, #1
   4448c:	str	r1, [r4, #20]
   44490:	strb	r8, [r0]
   44494:	ldr	r0, [r4, #20]
   44498:	ldrb	r2, [r4, #25]
   4449c:	ldr	r3, [r4, #32]
   444a0:	ldr	r1, [r4, #16]
   444a4:	mla	r7, r3, r2, r0
   444a8:	mul	r6, r3, r2
   444ac:	cmp	r7, r1
   444b0:	bls	44520 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   444b4:	cmp	r0, r1
   444b8:	bcc	444d4 <flatcc_json_printer_struct_vector_field@@Base+0x324>
   444bc:	ldr	r2, [r4, #44]	; 0x2c
   444c0:	mov	r0, r4
   444c4:	mov	r1, #0
   444c8:	blx	r2
   444cc:	ldr	r1, [r4, #16]
   444d0:	ldr	r0, [r4, #20]
   444d4:	sub	r7, r1, r0
   444d8:	cmp	r7, r6
   444dc:	bcs	44520 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   444e0:	mov	r1, #32
   444e4:	mov	r2, r7
   444e8:	bl	14ee8 <memset@plt>
   444ec:	ldr	r0, [r4, #20]
   444f0:	ldr	r2, [r4, #44]	; 0x2c
   444f4:	mov	r1, #0
   444f8:	add	r0, r0, r7
   444fc:	str	r0, [r4, #20]
   44500:	mov	r0, r4
   44504:	blx	r2
   44508:	ldr	r1, [r4, #16]
   4450c:	ldr	r0, [r4, #20]
   44510:	sub	r6, r6, r7
   44514:	sub	r7, r1, r0
   44518:	cmp	r6, r7
   4451c:	bhi	444e0 <flatcc_json_printer_struct_vector_field@@Base+0x330>
   44520:	mov	r1, #32
   44524:	mov	r2, r6
   44528:	bl	14ee8 <memset@plt>
   4452c:	ldr	r0, [r4, #20]
   44530:	add	r0, r0, r6
   44534:	str	r0, [r4, #20]
   44538:	b	4455c <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   4453c:	ldr	r1, [r4, #16]
   44540:	cmp	r0, r1
   44544:	bcc	4455c <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   44548:	ldr	r2, [r4, #44]	; 0x2c
   4454c:	mov	r0, r4
   44550:	mov	r1, #0
   44554:	blx	r2
   44558:	ldr	r0, [r4, #20]
   4455c:	add	r1, r0, #1
   44560:	ldr	r2, [fp, #16]
   44564:	sub	r5, r5, #1
   44568:	str	r1, [r4, #20]
   4456c:	ldr	r1, [r4, #32]
   44570:	add	r1, r1, #1
   44574:	str	r1, [r4, #32]
   44578:	mov	r1, #123	; 0x7b
   4457c:	strb	r1, [r0]
   44580:	mov	r0, r4
   44584:	mov	r1, r9
   44588:	blx	r2
   4458c:	ldrb	r1, [r4, #25]
   44590:	ldr	r0, [r4, #20]
   44594:	cmp	r1, #0
   44598:	beq	44654 <flatcc_json_printer_struct_vector_field@@Base+0x4a4>
   4459c:	add	r1, r0, #1
   445a0:	str	r1, [r4, #20]
   445a4:	strb	r8, [r0]
   445a8:	ldr	r0, [r4, #32]
   445ac:	sub	r2, r0, #1
   445b0:	str	r2, [r4, #32]
   445b4:	ldrb	r3, [r4, #25]
   445b8:	ldr	r0, [r4, #20]
   445bc:	ldr	r1, [r4, #16]
   445c0:	mla	r7, r2, r3, r0
   445c4:	mul	r6, r2, r3
   445c8:	cmp	r7, r1
   445cc:	bls	4463c <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   445d0:	cmp	r0, r1
   445d4:	bcc	445f0 <flatcc_json_printer_struct_vector_field@@Base+0x440>
   445d8:	ldr	r2, [r4, #44]	; 0x2c
   445dc:	mov	r0, r4
   445e0:	mov	r1, #0
   445e4:	blx	r2
   445e8:	ldr	r1, [r4, #16]
   445ec:	ldr	r0, [r4, #20]
   445f0:	sub	r7, r1, r0
   445f4:	cmp	r7, r6
   445f8:	bcs	4463c <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   445fc:	mov	r1, #32
   44600:	mov	r2, r7
   44604:	bl	14ee8 <memset@plt>
   44608:	ldr	r0, [r4, #20]
   4460c:	ldr	r2, [r4, #44]	; 0x2c
   44610:	mov	r1, #0
   44614:	add	r0, r0, r7
   44618:	str	r0, [r4, #20]
   4461c:	mov	r0, r4
   44620:	blx	r2
   44624:	ldr	r1, [r4, #16]
   44628:	ldr	r0, [r4, #20]
   4462c:	sub	r6, r6, r7
   44630:	sub	r7, r1, r0
   44634:	cmp	r6, r7
   44638:	bhi	445fc <flatcc_json_printer_struct_vector_field@@Base+0x44c>
   4463c:	mov	r1, #32
   44640:	mov	r2, r6
   44644:	bl	14ee8 <memset@plt>
   44648:	ldr	r0, [r4, #20]
   4464c:	add	r0, r0, r6
   44650:	str	r0, [r4, #20]
   44654:	add	r1, r0, #1
   44658:	cmp	r5, #0
   4465c:	str	r1, [r4, #20]
   44660:	strb	sl, [r0]
   44664:	bne	4445c <flatcc_json_printer_struct_vector_field@@Base+0x2ac>
   44668:	ldrb	r1, [r4, #25]
   4466c:	ldr	r0, [r4, #20]
   44670:	cmp	r1, #0
   44674:	beq	44734 <flatcc_json_printer_struct_vector_field@@Base+0x584>
   44678:	add	r1, r0, #1
   4467c:	str	r1, [r4, #20]
   44680:	mov	r1, #10
   44684:	strb	r1, [r0]
   44688:	ldr	r0, [r4, #32]
   4468c:	sub	r2, r0, #1
   44690:	str	r2, [r4, #32]
   44694:	ldrb	r3, [r4, #25]
   44698:	ldr	r0, [r4, #20]
   4469c:	ldr	r1, [r4, #16]
   446a0:	mla	r7, r2, r3, r0
   446a4:	mul	r5, r2, r3
   446a8:	cmp	r7, r1
   446ac:	bls	4471c <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   446b0:	cmp	r0, r1
   446b4:	bcc	446d0 <flatcc_json_printer_struct_vector_field@@Base+0x520>
   446b8:	ldr	r2, [r4, #44]	; 0x2c
   446bc:	mov	r0, r4
   446c0:	mov	r1, #0
   446c4:	blx	r2
   446c8:	ldr	r1, [r4, #16]
   446cc:	ldr	r0, [r4, #20]
   446d0:	sub	r6, r1, r0
   446d4:	cmp	r6, r5
   446d8:	bcs	4471c <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   446dc:	mov	r1, #32
   446e0:	mov	r2, r6
   446e4:	bl	14ee8 <memset@plt>
   446e8:	ldr	r0, [r4, #20]
   446ec:	ldr	r2, [r4, #44]	; 0x2c
   446f0:	mov	r1, #0
   446f4:	add	r0, r0, r6
   446f8:	str	r0, [r4, #20]
   446fc:	mov	r0, r4
   44700:	blx	r2
   44704:	ldr	r1, [r4, #16]
   44708:	ldr	r0, [r4, #20]
   4470c:	sub	r5, r5, r6
   44710:	sub	r6, r1, r0
   44714:	cmp	r5, r6
   44718:	bhi	446dc <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   4471c:	mov	r1, #32
   44720:	mov	r2, r5
   44724:	bl	14ee8 <memset@plt>
   44728:	ldr	r0, [r4, #20]
   4472c:	add	r0, r0, r5
   44730:	str	r0, [r4, #20]
   44734:	add	r1, r0, #1
   44738:	str	r1, [r4, #20]
   4473c:	mov	r1, #93	; 0x5d
   44740:	strb	r1, [r0]
   44744:	sub	sp, fp, #28
   44748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004474c <flatcc_json_printer_string_vector_field@@Base>:
   4474c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44750:	add	fp, sp, #28
   44754:	sub	sp, sp, #4
   44758:	mov	r4, r0
   4475c:	mov	r0, #4
   44760:	add	r0, r0, r2, lsl #1
   44764:	ldr	r2, [r1, #8]
   44768:	cmp	r0, r2
   4476c:	bge	4478c <flatcc_json_printer_string_vector_field@@Base+0x40>
   44770:	ldr	r2, [r1, #4]
   44774:	add	r0, r2, r0
   44778:	ldrh	r0, [r0]
   4477c:	cmp	r0, #0
   44780:	ldrne	r2, [r1]
   44784:	addsne	r5, r2, r0
   44788:	bne	44794 <flatcc_json_printer_string_vector_field@@Base+0x48>
   4478c:	sub	sp, fp, #28
   44790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44794:	ldr	r0, [r1, #16]
   44798:	ldr	r2, [fp, #8]
   4479c:	add	r7, r0, #1
   447a0:	cmp	r0, #0
   447a4:	str	r7, [r1, #16]
   447a8:	ldrne	r0, [r4, #20]
   447ac:	addne	r1, r0, #1
   447b0:	strne	r1, [r4, #20]
   447b4:	movne	r1, #44	; 0x2c
   447b8:	strbne	r1, [r0]
   447bc:	mov	r1, r3
   447c0:	ldr	r0, [r5]
   447c4:	ldr	r8, [r5, r0]!
   447c8:	mov	r0, r4
   447cc:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   447d0:	ldr	r1, [r4, #32]
   447d4:	ldr	r0, [r4, #20]
   447d8:	cmp	r8, #0
   447dc:	add	r1, r1, #1
   447e0:	str	r1, [r4, #32]
   447e4:	add	r1, r0, #1
   447e8:	str	r1, [r4, #20]
   447ec:	mov	r1, #91	; 0x5b
   447f0:	strb	r1, [r0]
   447f4:	beq	44a20 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   447f8:	ldrb	r1, [r4, #25]
   447fc:	ldr	r0, [r4, #20]
   44800:	add	r9, r5, #4
   44804:	cmp	r1, #0
   44808:	beq	448c4 <flatcc_json_printer_string_vector_field@@Base+0x178>
   4480c:	add	r1, r0, #1
   44810:	str	r1, [r4, #20]
   44814:	mov	r1, #10
   44818:	strb	r1, [r0]
   4481c:	ldr	r0, [r4, #20]
   44820:	ldrb	r2, [r4, #25]
   44824:	ldr	r3, [r4, #32]
   44828:	ldr	r1, [r4, #16]
   4482c:	mla	r7, r3, r2, r0
   44830:	mul	r5, r3, r2
   44834:	cmp	r7, r1
   44838:	bls	448a8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   4483c:	cmp	r0, r1
   44840:	bcc	4485c <flatcc_json_printer_string_vector_field@@Base+0x110>
   44844:	ldr	r2, [r4, #44]	; 0x2c
   44848:	mov	r0, r4
   4484c:	mov	r1, #0
   44850:	blx	r2
   44854:	ldr	r1, [r4, #16]
   44858:	ldr	r0, [r4, #20]
   4485c:	sub	r6, r1, r0
   44860:	cmp	r6, r5
   44864:	bcs	448a8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   44868:	mov	r1, #32
   4486c:	mov	r2, r6
   44870:	bl	14ee8 <memset@plt>
   44874:	ldr	r0, [r4, #20]
   44878:	ldr	r2, [r4, #44]	; 0x2c
   4487c:	mov	r1, #0
   44880:	add	r0, r0, r6
   44884:	str	r0, [r4, #20]
   44888:	mov	r0, r4
   4488c:	blx	r2
   44890:	ldr	r1, [r4, #16]
   44894:	ldr	r0, [r4, #20]
   44898:	sub	r5, r5, r6
   4489c:	sub	r6, r1, r0
   448a0:	cmp	r5, r6
   448a4:	bhi	44868 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   448a8:	mov	r1, #32
   448ac:	mov	r2, r5
   448b0:	bl	14ee8 <memset@plt>
   448b4:	ldr	r0, [r4, #20]
   448b8:	add	r0, r0, r5
   448bc:	str	r0, [r4, #20]
   448c0:	b	448e0 <flatcc_json_printer_string_vector_field@@Base+0x194>
   448c4:	ldr	r1, [r4, #16]
   448c8:	cmp	r0, r1
   448cc:	bcc	448e0 <flatcc_json_printer_string_vector_field@@Base+0x194>
   448d0:	ldr	r2, [r4, #44]	; 0x2c
   448d4:	mov	r0, r4
   448d8:	mov	r1, #0
   448dc:	blx	r2
   448e0:	ldr	r0, [r9]
   448e4:	mov	r1, r9
   448e8:	ldr	r2, [r1, r0]!
   448ec:	mov	r0, r4
   448f0:	add	r1, r1, #4
   448f4:	bl	3b0dc <flatcc_json_printer_string@@Base+0x4>
   448f8:	subs	r7, r8, #1
   448fc:	beq	44a20 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   44900:	mov	r8, #44	; 0x2c
   44904:	mov	sl, #10
   44908:	ldr	r0, [r4, #20]
   4490c:	add	r9, r9, #4
   44910:	sub	r7, r7, #1
   44914:	add	r1, r0, #1
   44918:	str	r1, [r4, #20]
   4491c:	strb	r8, [r0]
   44920:	ldrb	r1, [r4, #25]
   44924:	ldr	r0, [r4, #20]
   44928:	cmp	r1, #0
   4492c:	beq	449e4 <flatcc_json_printer_string_vector_field@@Base+0x298>
   44930:	add	r1, r0, #1
   44934:	str	r1, [r4, #20]
   44938:	strb	sl, [r0]
   4493c:	ldr	r0, [r4, #20]
   44940:	ldrb	r2, [r4, #25]
   44944:	ldr	r3, [r4, #32]
   44948:	ldr	r1, [r4, #16]
   4494c:	mla	r6, r3, r2, r0
   44950:	mul	r5, r3, r2
   44954:	cmp	r6, r1
   44958:	bls	449c8 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   4495c:	cmp	r0, r1
   44960:	bcc	4497c <flatcc_json_printer_string_vector_field@@Base+0x230>
   44964:	ldr	r2, [r4, #44]	; 0x2c
   44968:	mov	r0, r4
   4496c:	mov	r1, #0
   44970:	blx	r2
   44974:	ldr	r1, [r4, #16]
   44978:	ldr	r0, [r4, #20]
   4497c:	sub	r6, r1, r0
   44980:	cmp	r6, r5
   44984:	bcs	449c8 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   44988:	mov	r1, #32
   4498c:	mov	r2, r6
   44990:	bl	14ee8 <memset@plt>
   44994:	ldr	r0, [r4, #20]
   44998:	ldr	r2, [r4, #44]	; 0x2c
   4499c:	mov	r1, #0
   449a0:	add	r0, r0, r6
   449a4:	str	r0, [r4, #20]
   449a8:	mov	r0, r4
   449ac:	blx	r2
   449b0:	ldr	r1, [r4, #16]
   449b4:	ldr	r0, [r4, #20]
   449b8:	sub	r5, r5, r6
   449bc:	sub	r6, r1, r0
   449c0:	cmp	r5, r6
   449c4:	bhi	44988 <flatcc_json_printer_string_vector_field@@Base+0x23c>
   449c8:	mov	r1, #32
   449cc:	mov	r2, r5
   449d0:	bl	14ee8 <memset@plt>
   449d4:	ldr	r0, [r4, #20]
   449d8:	add	r0, r0, r5
   449dc:	str	r0, [r4, #20]
   449e0:	b	44a00 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   449e4:	ldr	r1, [r4, #16]
   449e8:	cmp	r0, r1
   449ec:	bcc	44a00 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   449f0:	ldr	r2, [r4, #44]	; 0x2c
   449f4:	mov	r0, r4
   449f8:	mov	r1, #0
   449fc:	blx	r2
   44a00:	ldr	r0, [r9]
   44a04:	mov	r1, r9
   44a08:	ldr	r2, [r1, r0]!
   44a0c:	mov	r0, r4
   44a10:	add	r1, r1, #4
   44a14:	bl	3b0dc <flatcc_json_printer_string@@Base+0x4>
   44a18:	cmp	r7, #0
   44a1c:	bne	44908 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   44a20:	ldrb	r1, [r4, #25]
   44a24:	ldr	r0, [r4, #20]
   44a28:	cmp	r1, #0
   44a2c:	beq	44aec <flatcc_json_printer_string_vector_field@@Base+0x3a0>
   44a30:	add	r1, r0, #1
   44a34:	str	r1, [r4, #20]
   44a38:	mov	r1, #10
   44a3c:	strb	r1, [r0]
   44a40:	ldr	r0, [r4, #32]
   44a44:	sub	r2, r0, #1
   44a48:	str	r2, [r4, #32]
   44a4c:	ldrb	r3, [r4, #25]
   44a50:	ldr	r0, [r4, #20]
   44a54:	ldr	r1, [r4, #16]
   44a58:	mla	r7, r2, r3, r0
   44a5c:	mul	r5, r2, r3
   44a60:	cmp	r7, r1
   44a64:	bls	44ad4 <flatcc_json_printer_string_vector_field@@Base+0x388>
   44a68:	cmp	r0, r1
   44a6c:	bcc	44a88 <flatcc_json_printer_string_vector_field@@Base+0x33c>
   44a70:	ldr	r2, [r4, #44]	; 0x2c
   44a74:	mov	r0, r4
   44a78:	mov	r1, #0
   44a7c:	blx	r2
   44a80:	ldr	r1, [r4, #16]
   44a84:	ldr	r0, [r4, #20]
   44a88:	sub	r6, r1, r0
   44a8c:	cmp	r6, r5
   44a90:	bcs	44ad4 <flatcc_json_printer_string_vector_field@@Base+0x388>
   44a94:	mov	r1, #32
   44a98:	mov	r2, r6
   44a9c:	bl	14ee8 <memset@plt>
   44aa0:	ldr	r0, [r4, #20]
   44aa4:	ldr	r2, [r4, #44]	; 0x2c
   44aa8:	mov	r1, #0
   44aac:	add	r0, r0, r6
   44ab0:	str	r0, [r4, #20]
   44ab4:	mov	r0, r4
   44ab8:	blx	r2
   44abc:	ldr	r1, [r4, #16]
   44ac0:	ldr	r0, [r4, #20]
   44ac4:	sub	r5, r5, r6
   44ac8:	sub	r6, r1, r0
   44acc:	cmp	r5, r6
   44ad0:	bhi	44a94 <flatcc_json_printer_string_vector_field@@Base+0x348>
   44ad4:	mov	r1, #32
   44ad8:	mov	r2, r5
   44adc:	bl	14ee8 <memset@plt>
   44ae0:	ldr	r0, [r4, #20]
   44ae4:	add	r0, r0, r5
   44ae8:	str	r0, [r4, #20]
   44aec:	add	r1, r0, #1
   44af0:	str	r1, [r4, #20]
   44af4:	mov	r1, #93	; 0x5d
   44af8:	strb	r1, [r0]
   44afc:	sub	sp, fp, #28
   44b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044b04 <flatcc_json_printer_table_vector_field@@Base>:
   44b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44b08:	add	fp, sp, #28
   44b0c:	sub	sp, sp, #20
   44b10:	mov	sl, r1
   44b14:	ldr	r1, [r1, #8]
   44b18:	mov	r4, r0
   44b1c:	mov	r0, #4
   44b20:	add	r0, r0, r2, lsl #1
   44b24:	cmp	r0, r1
   44b28:	bge	44b48 <flatcc_json_printer_table_vector_field@@Base+0x44>
   44b2c:	ldr	r1, [sl, #4]
   44b30:	add	r0, r1, r0
   44b34:	ldrh	r0, [r0]
   44b38:	cmp	r0, #0
   44b3c:	ldrne	r1, [sl]
   44b40:	addsne	r5, r1, r0
   44b44:	bne	44b50 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   44b48:	sub	sp, fp, #28
   44b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44b50:	ldr	r0, [sl, #16]
   44b54:	ldr	r2, [fp, #8]
   44b58:	add	r1, r0, #1
   44b5c:	cmp	r0, #0
   44b60:	str	r1, [sl, #16]
   44b64:	ldrne	r0, [r4, #20]
   44b68:	addne	r1, r0, #1
   44b6c:	strne	r1, [r4, #20]
   44b70:	movne	r1, #44	; 0x2c
   44b74:	strbne	r1, [r0]
   44b78:	mov	r1, r3
   44b7c:	ldr	r0, [r5]
   44b80:	ldr	r8, [r5, r0]!
   44b84:	mov	r0, r4
   44b88:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   44b8c:	ldr	r1, [r4, #32]
   44b90:	ldr	r0, [r4, #20]
   44b94:	cmp	r8, #0
   44b98:	add	r1, r1, #1
   44b9c:	str	r1, [r4, #32]
   44ba0:	add	r1, r0, #1
   44ba4:	str	r1, [r4, #20]
   44ba8:	mov	r1, #91	; 0x5b
   44bac:	strb	r1, [r0]
   44bb0:	beq	44eb8 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   44bb4:	ldr	r0, [sl, #12]
   44bb8:	ldr	r6, [fp, #12]
   44bbc:	add	r5, r5, #4
   44bc0:	subs	r0, r0, #1
   44bc4:	beq	44d0c <flatcc_json_printer_table_vector_field@@Base+0x208>
   44bc8:	ldr	r3, [r4, #32]
   44bcc:	ldr	r2, [r4, #20]
   44bd0:	ldr	r1, [r5]
   44bd4:	add	r3, r3, #1
   44bd8:	add	r1, r5, r1
   44bdc:	str	r3, [r4, #32]
   44be0:	add	r3, r2, #1
   44be4:	str	r3, [r4, #20]
   44be8:	mov	r3, #123	; 0x7b
   44bec:	strb	r3, [r2]
   44bf0:	str	r0, [sp, #12]
   44bf4:	mov	r0, #0
   44bf8:	str	r0, [sp, #16]
   44bfc:	str	r1, [sp]
   44c00:	ldr	r0, [r1]
   44c04:	sub	r2, r1, r0
   44c08:	str	r2, [sp, #4]
   44c0c:	ldrh	r0, [r1, -r0]
   44c10:	mov	r1, sp
   44c14:	str	r0, [sp, #8]
   44c18:	mov	r0, r4
   44c1c:	blx	r6
   44c20:	ldrb	r1, [r4, #25]
   44c24:	ldr	r0, [r4, #20]
   44c28:	cmp	r1, #0
   44c2c:	beq	44cf0 <flatcc_json_printer_table_vector_field@@Base+0x1ec>
   44c30:	add	r1, r0, #1
   44c34:	str	r1, [r4, #20]
   44c38:	mov	r1, #10
   44c3c:	strb	r1, [r0]
   44c40:	ldr	r0, [r4, #32]
   44c44:	sub	r2, r0, #1
   44c48:	str	r2, [r4, #32]
   44c4c:	ldrb	r3, [r4, #25]
   44c50:	ldr	r0, [r4, #20]
   44c54:	ldr	r1, [r4, #16]
   44c58:	mla	r7, r2, r3, r0
   44c5c:	mul	r6, r2, r3
   44c60:	cmp	r7, r1
   44c64:	bls	44cd4 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   44c68:	cmp	r0, r1
   44c6c:	bcc	44c88 <flatcc_json_printer_table_vector_field@@Base+0x184>
   44c70:	ldr	r2, [r4, #44]	; 0x2c
   44c74:	mov	r0, r4
   44c78:	mov	r1, #0
   44c7c:	blx	r2
   44c80:	ldr	r1, [r4, #16]
   44c84:	ldr	r0, [r4, #20]
   44c88:	sub	r7, r1, r0
   44c8c:	cmp	r7, r6
   44c90:	bcs	44cd4 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   44c94:	mov	r1, #32
   44c98:	mov	r2, r7
   44c9c:	bl	14ee8 <memset@plt>
   44ca0:	ldr	r0, [r4, #20]
   44ca4:	ldr	r2, [r4, #44]	; 0x2c
   44ca8:	mov	r1, #0
   44cac:	add	r0, r0, r7
   44cb0:	str	r0, [r4, #20]
   44cb4:	mov	r0, r4
   44cb8:	blx	r2
   44cbc:	ldr	r1, [r4, #16]
   44cc0:	ldr	r0, [r4, #20]
   44cc4:	sub	r6, r6, r7
   44cc8:	sub	r7, r1, r0
   44ccc:	cmp	r6, r7
   44cd0:	bhi	44c94 <flatcc_json_printer_table_vector_field@@Base+0x190>
   44cd4:	mov	r1, #32
   44cd8:	mov	r2, r6
   44cdc:	bl	14ee8 <memset@plt>
   44ce0:	ldr	r0, [r4, #20]
   44ce4:	add	r0, r0, r6
   44ce8:	ldr	r6, [fp, #12]
   44cec:	str	r0, [r4, #20]
   44cf0:	add	r1, r0, #1
   44cf4:	str	r1, [r4, #20]
   44cf8:	mov	r1, #125	; 0x7d
   44cfc:	strb	r1, [r0]
   44d00:	subs	r9, r8, #1
   44d04:	bne	44d24 <flatcc_json_printer_table_vector_field@@Base+0x220>
   44d08:	b	44eb8 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   44d0c:	ldr	r0, [r4, #36]	; 0x24
   44d10:	cmp	r0, #0
   44d14:	moveq	r0, #2
   44d18:	streq	r0, [r4, #36]	; 0x24
   44d1c:	subs	r9, r8, #1
   44d20:	beq	44eb8 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   44d24:	mov	r8, #44	; 0x2c
   44d28:	ldr	r0, [r4, #20]
   44d2c:	sub	r9, r9, #1
   44d30:	add	r1, r0, #1
   44d34:	str	r1, [r4, #20]
   44d38:	strb	r8, [r0]
   44d3c:	ldr	r0, [sl, #12]
   44d40:	ldr	r1, [r5, #4]!
   44d44:	subs	r0, r0, #1
   44d48:	beq	44e68 <flatcc_json_printer_table_vector_field@@Base+0x364>
   44d4c:	ldr	r3, [r4, #32]
   44d50:	ldr	r2, [r4, #20]
   44d54:	add	r1, r5, r1
   44d58:	add	r3, r3, #1
   44d5c:	str	r3, [r4, #32]
   44d60:	add	r3, r2, #1
   44d64:	str	r3, [r4, #20]
   44d68:	mov	r3, #123	; 0x7b
   44d6c:	strb	r3, [r2]
   44d70:	str	r0, [sp, #12]
   44d74:	mov	r0, #0
   44d78:	str	r0, [sp, #16]
   44d7c:	str	r1, [sp]
   44d80:	ldr	r0, [r1]
   44d84:	sub	r2, r1, r0
   44d88:	str	r2, [sp, #4]
   44d8c:	ldrh	r0, [r1, -r0]
   44d90:	mov	r1, sp
   44d94:	str	r0, [sp, #8]
   44d98:	mov	r0, r4
   44d9c:	blx	r6
   44da0:	ldrb	r1, [r4, #25]
   44da4:	ldr	r0, [r4, #20]
   44da8:	cmp	r1, #0
   44dac:	beq	44ea0 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   44db0:	add	r1, r0, #1
   44db4:	str	r1, [r4, #20]
   44db8:	mov	r1, #10
   44dbc:	strb	r1, [r0]
   44dc0:	ldr	r0, [r4, #32]
   44dc4:	sub	r2, r0, #1
   44dc8:	str	r2, [r4, #32]
   44dcc:	ldrb	r3, [r4, #25]
   44dd0:	ldr	r0, [r4, #20]
   44dd4:	ldr	r1, [r4, #16]
   44dd8:	mla	r6, r2, r3, r0
   44ddc:	mul	r7, r2, r3
   44de0:	cmp	r6, r1
   44de4:	bls	44e84 <flatcc_json_printer_table_vector_field@@Base+0x380>
   44de8:	cmp	r0, r1
   44dec:	bcc	44e08 <flatcc_json_printer_table_vector_field@@Base+0x304>
   44df0:	ldr	r2, [r4, #44]	; 0x2c
   44df4:	mov	r0, r4
   44df8:	mov	r1, #0
   44dfc:	blx	r2
   44e00:	ldr	r1, [r4, #16]
   44e04:	ldr	r0, [r4, #20]
   44e08:	sub	r6, r1, r0
   44e0c:	cmp	r6, r7
   44e10:	bcs	44e54 <flatcc_json_printer_table_vector_field@@Base+0x350>
   44e14:	mov	r1, #32
   44e18:	mov	r2, r6
   44e1c:	bl	14ee8 <memset@plt>
   44e20:	ldr	r0, [r4, #20]
   44e24:	ldr	r2, [r4, #44]	; 0x2c
   44e28:	mov	r1, #0
   44e2c:	add	r0, r0, r6
   44e30:	str	r0, [r4, #20]
   44e34:	mov	r0, r4
   44e38:	blx	r2
   44e3c:	ldr	r1, [r4, #16]
   44e40:	ldr	r0, [r4, #20]
   44e44:	sub	r7, r7, r6
   44e48:	sub	r6, r1, r0
   44e4c:	cmp	r7, r6
   44e50:	bhi	44e14 <flatcc_json_printer_table_vector_field@@Base+0x310>
   44e54:	ldr	r6, [fp, #12]
   44e58:	mov	r1, #32
   44e5c:	mov	r2, r7
   44e60:	bl	14ee8 <memset@plt>
   44e64:	b	44e94 <flatcc_json_printer_table_vector_field@@Base+0x390>
   44e68:	ldr	r0, [r4, #36]	; 0x24
   44e6c:	cmp	r0, #0
   44e70:	moveq	r0, #2
   44e74:	streq	r0, [r4, #36]	; 0x24
   44e78:	cmp	r9, #0
   44e7c:	bne	44d28 <flatcc_json_printer_table_vector_field@@Base+0x224>
   44e80:	b	44eb8 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   44e84:	mov	r1, #32
   44e88:	mov	r2, r7
   44e8c:	bl	14ee8 <memset@plt>
   44e90:	ldr	r6, [fp, #12]
   44e94:	ldr	r0, [r4, #20]
   44e98:	add	r0, r0, r7
   44e9c:	str	r0, [r4, #20]
   44ea0:	add	r1, r0, #1
   44ea4:	str	r1, [r4, #20]
   44ea8:	mov	r1, #125	; 0x7d
   44eac:	strb	r1, [r0]
   44eb0:	cmp	r9, #0
   44eb4:	bne	44d28 <flatcc_json_printer_table_vector_field@@Base+0x224>
   44eb8:	ldrb	r1, [r4, #25]
   44ebc:	ldr	r0, [r4, #20]
   44ec0:	cmp	r1, #0
   44ec4:	beq	44f84 <flatcc_json_printer_table_vector_field@@Base+0x480>
   44ec8:	add	r1, r0, #1
   44ecc:	str	r1, [r4, #20]
   44ed0:	mov	r1, #10
   44ed4:	strb	r1, [r0]
   44ed8:	ldr	r0, [r4, #32]
   44edc:	sub	r2, r0, #1
   44ee0:	str	r2, [r4, #32]
   44ee4:	ldrb	r3, [r4, #25]
   44ee8:	ldr	r0, [r4, #20]
   44eec:	ldr	r1, [r4, #16]
   44ef0:	mla	r7, r2, r3, r0
   44ef4:	mul	r5, r2, r3
   44ef8:	cmp	r7, r1
   44efc:	bls	44f6c <flatcc_json_printer_table_vector_field@@Base+0x468>
   44f00:	cmp	r0, r1
   44f04:	bcc	44f20 <flatcc_json_printer_table_vector_field@@Base+0x41c>
   44f08:	ldr	r2, [r4, #44]	; 0x2c
   44f0c:	mov	r0, r4
   44f10:	mov	r1, #0
   44f14:	blx	r2
   44f18:	ldr	r1, [r4, #16]
   44f1c:	ldr	r0, [r4, #20]
   44f20:	sub	r6, r1, r0
   44f24:	cmp	r6, r5
   44f28:	bcs	44f6c <flatcc_json_printer_table_vector_field@@Base+0x468>
   44f2c:	mov	r1, #32
   44f30:	mov	r2, r6
   44f34:	bl	14ee8 <memset@plt>
   44f38:	ldr	r0, [r4, #20]
   44f3c:	ldr	r2, [r4, #44]	; 0x2c
   44f40:	mov	r1, #0
   44f44:	add	r0, r0, r6
   44f48:	str	r0, [r4, #20]
   44f4c:	mov	r0, r4
   44f50:	blx	r2
   44f54:	ldr	r1, [r4, #16]
   44f58:	ldr	r0, [r4, #20]
   44f5c:	sub	r5, r5, r6
   44f60:	sub	r6, r1, r0
   44f64:	cmp	r5, r6
   44f68:	bhi	44f2c <flatcc_json_printer_table_vector_field@@Base+0x428>
   44f6c:	mov	r1, #32
   44f70:	mov	r2, r5
   44f74:	bl	14ee8 <memset@plt>
   44f78:	ldr	r0, [r4, #20]
   44f7c:	add	r0, r0, r5
   44f80:	str	r0, [r4, #20]
   44f84:	add	r1, r0, #1
   44f88:	str	r1, [r4, #20]
   44f8c:	mov	r1, #93	; 0x5d
   44f90:	strb	r1, [r0]
   44f94:	sub	sp, fp, #28
   44f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044f9c <flatcc_json_printer_union_vector_field@@Base>:
   44f9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44fa0:	add	fp, sp, #28
   44fa4:	sub	sp, sp, #140	; 0x8c
   44fa8:	mov	r6, r1
   44fac:	mov	r9, r0
   44fb0:	sub	r1, r2, #1
   44fb4:	mov	r0, #4
   44fb8:	mov	r4, r3
   44fbc:	mov	r5, #0
   44fc0:	mov	r8, #0
   44fc4:	str	r1, [sp, #8]
   44fc8:	add	r3, r0, r1, lsl #1
   44fcc:	ldr	r1, [r6, #8]
   44fd0:	cmp	r3, r1
   44fd4:	bge	44ff4 <flatcc_json_printer_union_vector_field@@Base+0x58>
   44fd8:	ldr	r7, [r6, #4]
   44fdc:	mov	r8, #0
   44fe0:	add	r3, r7, r3
   44fe4:	ldrh	r3, [r3]
   44fe8:	cmp	r3, #0
   44fec:	ldrne	r7, [r6]
   44ff0:	addne	r8, r7, r3
   44ff4:	ldr	sl, [fp, #8]
   44ff8:	add	r0, r0, r2, lsl #1
   44ffc:	cmp	r0, r1
   45000:	bge	4501c <flatcc_json_printer_union_vector_field@@Base+0x80>
   45004:	ldr	r1, [r6, #4]
   45008:	add	r0, r1, r0
   4500c:	ldrh	r0, [r0]
   45010:	cmp	r0, #0
   45014:	ldrne	r1, [r6]
   45018:	addne	r5, r1, r0
   4501c:	ldr	r0, [r6, #12]
   45020:	cmp	sl, #101	; 0x65
   45024:	str	r5, [sp, #16]
   45028:	str	r0, [sp, #24]
   4502c:	bge	45334 <flatcc_json_printer_union_vector_field@@Base+0x398>
   45030:	add	r5, sp, #32
   45034:	mov	r1, r4
   45038:	mov	r2, sl
   4503c:	str	r4, [sp, #12]
   45040:	mov	r0, r5
   45044:	bl	14e58 <memcpy@plt>
   45048:	movw	r0, #29791	; 0x745f
   4504c:	cmp	r8, #0
   45050:	mov	r1, #101	; 0x65
   45054:	movt	r0, #28793	; 0x7079
   45058:	str	r0, [r5, sl]
   4505c:	add	r0, r5, sl
   45060:	ldr	r5, [sp, #16]
   45064:	strb	r1, [r0, #4]
   45068:	cmpne	r5, #0
   4506c:	bne	45078 <flatcc_json_printer_union_vector_field@@Base+0xdc>
   45070:	sub	sp, fp, #28
   45074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45078:	ldr	r0, [fp, #12]
   4507c:	ldr	r2, [sp, #8]
   45080:	add	r1, sl, #5
   45084:	add	r3, sp, #32
   45088:	str	r1, [sp]
   4508c:	mov	r1, r6
   45090:	str	r0, [sp, #4]
   45094:	mov	r0, r9
   45098:	bl	41c50 <flatcc_json_printer_utype_enum_vector_field@@Base>
   4509c:	ldr	r0, [r6, #16]
   450a0:	add	r7, r9, #20
   450a4:	mov	r2, sl
   450a8:	add	r1, r0, #1
   450ac:	cmp	r0, #0
   450b0:	str	r1, [r6, #16]
   450b4:	mov	r6, r5
   450b8:	ldrne	r0, [r7]
   450bc:	addne	r1, r0, #1
   450c0:	strne	r1, [r7]
   450c4:	movne	r1, #44	; 0x2c
   450c8:	strbne	r1, [r0]
   450cc:	ldr	r1, [sp, #12]
   450d0:	ldr	r0, [r5]
   450d4:	ldr	r5, [r8]
   450d8:	ldr	r4, [r6, r0]!
   450dc:	str	r0, [sp, #8]
   450e0:	mov	r0, r9
   450e4:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   450e8:	ldr	r1, [r9, #32]
   450ec:	ldr	r0, [r9, #20]
   450f0:	cmp	r4, #0
   450f4:	add	r1, r1, #1
   450f8:	str	r1, [r9, #32]
   450fc:	add	r1, r0, #1
   45100:	str	r1, [r9, #20]
   45104:	mov	r1, #91	; 0x5b
   45108:	strb	r1, [r0]
   4510c:	beq	45250 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   45110:	add	r5, r8, r5
   45114:	ldr	r2, [fp, #16]
   45118:	ldrb	r0, [r5, #4]
   4511c:	cmp	r0, #0
   45120:	beq	4514c <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   45124:	add	r1, r6, #4
   45128:	mov	r8, r2
   4512c:	str	r1, [sp, #20]
   45130:	strb	r0, [sp, #28]
   45134:	add	r1, sp, #20
   45138:	mov	r0, r9
   4513c:	blx	r2
   45140:	cmp	r4, #1
   45144:	bne	451a4 <flatcc_json_printer_union_vector_field@@Base+0x208>
   45148:	b	45250 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   4514c:	ldr	r0, [r7]
   45150:	mov	r8, r2
   45154:	add	r1, r0, #1
   45158:	str	r1, [r7]
   4515c:	mov	r1, #110	; 0x6e
   45160:	strb	r1, [r0]
   45164:	ldr	r0, [r7]
   45168:	add	r1, r0, #1
   4516c:	str	r1, [r7]
   45170:	mov	r1, #117	; 0x75
   45174:	strb	r1, [r0]
   45178:	ldr	r0, [r7]
   4517c:	add	r1, r0, #1
   45180:	str	r1, [r7]
   45184:	mov	r1, #108	; 0x6c
   45188:	strb	r1, [r0]
   4518c:	ldr	r0, [r7]
   45190:	add	r2, r0, #1
   45194:	str	r2, [r7]
   45198:	strb	r1, [r0]
   4519c:	cmp	r4, #1
   451a0:	beq	45250 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   451a4:	ldr	r0, [sp, #16]
   451a8:	ldr	r1, [sp, #8]
   451ac:	add	r5, r5, #5
   451b0:	rsb	r4, r4, #1
   451b4:	mov	sl, #44	; 0x2c
   451b8:	add	r0, r0, r1
   451bc:	add	r6, r0, #8
   451c0:	ldrb	r0, [r5]
   451c4:	ldr	r1, [r7]
   451c8:	add	r2, r1, #1
   451cc:	cmp	r0, #0
   451d0:	str	r2, [r7]
   451d4:	strb	sl, [r1]
   451d8:	beq	451f4 <flatcc_json_printer_union_vector_field@@Base+0x258>
   451dc:	str	r6, [sp, #20]
   451e0:	strb	r0, [sp, #28]
   451e4:	mov	r0, r9
   451e8:	add	r1, sp, #20
   451ec:	blx	r8
   451f0:	b	45240 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   451f4:	ldr	r0, [r7]
   451f8:	mov	r2, #108	; 0x6c
   451fc:	add	r1, r0, #1
   45200:	str	r1, [r7]
   45204:	mov	r1, #110	; 0x6e
   45208:	strb	r1, [r0]
   4520c:	ldr	r0, [r7]
   45210:	add	r1, r0, #1
   45214:	str	r1, [r7]
   45218:	mov	r1, #117	; 0x75
   4521c:	strb	r1, [r0]
   45220:	ldr	r0, [r7]
   45224:	add	r1, r0, #1
   45228:	str	r1, [r7]
   4522c:	strb	r2, [r0]
   45230:	ldr	r0, [r7]
   45234:	add	r1, r0, #1
   45238:	str	r1, [r7]
   4523c:	strb	r2, [r0]
   45240:	add	r6, r6, #4
   45244:	add	r5, r5, #1
   45248:	adds	r4, r4, #1
   4524c:	bne	451c0 <flatcc_json_printer_union_vector_field@@Base+0x224>
   45250:	ldrb	r1, [r9, #25]
   45254:	ldr	r0, [r9, #20]
   45258:	cmp	r1, #0
   4525c:	beq	4531c <flatcc_json_printer_union_vector_field@@Base+0x380>
   45260:	add	r1, r0, #1
   45264:	str	r1, [r9, #20]
   45268:	mov	r1, #10
   4526c:	strb	r1, [r0]
   45270:	ldr	r0, [r9, #32]
   45274:	sub	r2, r0, #1
   45278:	str	r2, [r9, #32]
   4527c:	ldrb	r3, [r9, #25]
   45280:	ldr	r0, [r9, #20]
   45284:	ldr	r1, [r9, #16]
   45288:	mla	r6, r2, r3, r0
   4528c:	mul	r5, r2, r3
   45290:	cmp	r6, r1
   45294:	bls	45304 <flatcc_json_printer_union_vector_field@@Base+0x368>
   45298:	cmp	r0, r1
   4529c:	bcc	452b8 <flatcc_json_printer_union_vector_field@@Base+0x31c>
   452a0:	ldr	r2, [r9, #44]	; 0x2c
   452a4:	mov	r0, r9
   452a8:	mov	r1, #0
   452ac:	blx	r2
   452b0:	ldr	r1, [r9, #16]
   452b4:	ldr	r0, [r9, #20]
   452b8:	sub	r6, r1, r0
   452bc:	cmp	r6, r5
   452c0:	bcs	45304 <flatcc_json_printer_union_vector_field@@Base+0x368>
   452c4:	mov	r1, #32
   452c8:	mov	r2, r6
   452cc:	bl	14ee8 <memset@plt>
   452d0:	ldr	r0, [r9, #20]
   452d4:	ldr	r2, [r9, #44]	; 0x2c
   452d8:	mov	r1, #0
   452dc:	add	r0, r0, r6
   452e0:	str	r0, [r9, #20]
   452e4:	mov	r0, r9
   452e8:	blx	r2
   452ec:	ldr	r1, [r9, #16]
   452f0:	ldr	r0, [r9, #20]
   452f4:	sub	r5, r5, r6
   452f8:	sub	r6, r1, r0
   452fc:	cmp	r5, r6
   45300:	bhi	452c4 <flatcc_json_printer_union_vector_field@@Base+0x328>
   45304:	mov	r1, #32
   45308:	mov	r2, r5
   4530c:	bl	14ee8 <memset@plt>
   45310:	ldr	r0, [r7]
   45314:	add	r0, r0, r5
   45318:	str	r0, [r7]
   4531c:	add	r1, r0, #1
   45320:	str	r1, [r7]
   45324:	mov	r1, #93	; 0x5d
   45328:	strb	r1, [r0]
   4532c:	sub	sp, fp, #28
   45330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45334:	ldr	r0, [r9, #36]	; 0x24
   45338:	movw	r2, #843	; 0x34b
   4533c:	cmp	r0, #0
   45340:	moveq	r0, #1
   45344:	streq	r0, [r9, #36]	; 0x24
   45348:	ldr	r0, [pc, #20]	; 45364 <flatcc_json_printer_union_vector_field@@Base+0x3c8>
   4534c:	ldr	r1, [pc, #20]	; 45368 <flatcc_json_printer_union_vector_field@@Base+0x3cc>
   45350:	ldr	r3, [pc, #20]	; 4536c <flatcc_json_printer_union_vector_field@@Base+0x3d0>
   45354:	add	r0, pc, r0
   45358:	add	r1, pc, r1
   4535c:	add	r3, pc, r3
   45360:	bl	14f3c <__assert_fail@plt>
   45364:	andeq	r8, r0, sp, asr #13
   45368:	andeq	r8, r0, r4, ror #13
   4536c:	andeq	r8, r0, r2, asr #14

00045370 <flatcc_json_printer_table_field@@Base>:
   45370:	push	{r4, r5, r6, sl, fp, lr}
   45374:	add	fp, sp, #16
   45378:	sub	sp, sp, #24
   4537c:	mov	r5, r1
   45380:	ldr	r1, [r1, #8]
   45384:	mov	r4, r0
   45388:	mov	r0, #4
   4538c:	add	r0, r0, r2, lsl #1
   45390:	cmp	r0, r1
   45394:	bge	453b4 <flatcc_json_printer_table_field@@Base+0x44>
   45398:	ldr	r1, [r5, #4]
   4539c:	add	r0, r1, r0
   453a0:	ldrh	r0, [r0]
   453a4:	cmp	r0, #0
   453a8:	ldrne	r1, [r5]
   453ac:	addsne	r6, r1, r0
   453b0:	bne	453bc <flatcc_json_printer_table_field@@Base+0x4c>
   453b4:	sub	sp, fp, #16
   453b8:	pop	{r4, r5, r6, sl, fp, pc}
   453bc:	ldr	r0, [r5, #16]
   453c0:	ldr	r2, [fp, #8]
   453c4:	add	r1, r0, #1
   453c8:	cmp	r0, #0
   453cc:	str	r1, [r5, #16]
   453d0:	ldrne	r0, [r4, #20]
   453d4:	addne	r1, r0, #1
   453d8:	strne	r1, [r4, #20]
   453dc:	movne	r1, #44	; 0x2c
   453e0:	strbne	r1, [r0]
   453e4:	mov	r0, r4
   453e8:	mov	r1, r3
   453ec:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   453f0:	ldr	r0, [r5, #12]
   453f4:	subs	r0, r0, #1
   453f8:	beq	4553c <flatcc_json_printer_table_field@@Base+0x1cc>
   453fc:	ldr	r1, [r6]
   45400:	ldr	r3, [r4, #20]
   45404:	ldr	r2, [fp, #12]
   45408:	add	r1, r6, r1
   4540c:	ldr	r6, [r4, #32]
   45410:	add	r6, r6, #1
   45414:	str	r6, [r4, #32]
   45418:	add	r6, r3, #1
   4541c:	str	r6, [r4, #20]
   45420:	mov	r6, #123	; 0x7b
   45424:	strb	r6, [r3]
   45428:	str	r0, [sp, #16]
   4542c:	mov	r0, #0
   45430:	str	r0, [sp, #20]
   45434:	str	r1, [sp, #4]
   45438:	ldr	r0, [r1]
   4543c:	sub	r3, r1, r0
   45440:	str	r3, [sp, #8]
   45444:	ldrh	r0, [r1, -r0]
   45448:	add	r1, sp, #4
   4544c:	str	r0, [sp, #12]
   45450:	mov	r0, r4
   45454:	blx	r2
   45458:	ldrb	r1, [r4, #25]
   4545c:	ldr	r0, [r4, #20]
   45460:	cmp	r1, #0
   45464:	beq	45524 <flatcc_json_printer_table_field@@Base+0x1b4>
   45468:	add	r1, r0, #1
   4546c:	str	r1, [r4, #20]
   45470:	mov	r1, #10
   45474:	strb	r1, [r0]
   45478:	ldr	r0, [r4, #32]
   4547c:	sub	r2, r0, #1
   45480:	str	r2, [r4, #32]
   45484:	ldrb	r3, [r4, #25]
   45488:	ldr	r0, [r4, #20]
   4548c:	ldr	r1, [r4, #16]
   45490:	mla	r6, r2, r3, r0
   45494:	mul	r5, r2, r3
   45498:	cmp	r6, r1
   4549c:	bls	4550c <flatcc_json_printer_table_field@@Base+0x19c>
   454a0:	cmp	r0, r1
   454a4:	bcc	454c0 <flatcc_json_printer_table_field@@Base+0x150>
   454a8:	ldr	r2, [r4, #44]	; 0x2c
   454ac:	mov	r0, r4
   454b0:	mov	r1, #0
   454b4:	blx	r2
   454b8:	ldr	r1, [r4, #16]
   454bc:	ldr	r0, [r4, #20]
   454c0:	sub	r6, r1, r0
   454c4:	cmp	r6, r5
   454c8:	bcs	4550c <flatcc_json_printer_table_field@@Base+0x19c>
   454cc:	mov	r1, #32
   454d0:	mov	r2, r6
   454d4:	bl	14ee8 <memset@plt>
   454d8:	ldr	r0, [r4, #20]
   454dc:	ldr	r2, [r4, #44]	; 0x2c
   454e0:	mov	r1, #0
   454e4:	add	r0, r0, r6
   454e8:	str	r0, [r4, #20]
   454ec:	mov	r0, r4
   454f0:	blx	r2
   454f4:	ldr	r1, [r4, #16]
   454f8:	ldr	r0, [r4, #20]
   454fc:	sub	r5, r5, r6
   45500:	sub	r6, r1, r0
   45504:	cmp	r5, r6
   45508:	bhi	454cc <flatcc_json_printer_table_field@@Base+0x15c>
   4550c:	mov	r1, #32
   45510:	mov	r2, r5
   45514:	bl	14ee8 <memset@plt>
   45518:	ldr	r0, [r4, #20]
   4551c:	add	r0, r0, r5
   45520:	str	r0, [r4, #20]
   45524:	add	r1, r0, #1
   45528:	str	r1, [r4, #20]
   4552c:	mov	r1, #125	; 0x7d
   45530:	strb	r1, [r0]
   45534:	sub	sp, fp, #16
   45538:	pop	{r4, r5, r6, sl, fp, pc}
   4553c:	ldr	r0, [r4, #36]	; 0x24
   45540:	cmp	r0, #0
   45544:	bne	453b4 <flatcc_json_printer_table_field@@Base+0x44>
   45548:	mov	r0, #2
   4554c:	str	r0, [r4, #36]	; 0x24
   45550:	sub	sp, fp, #16
   45554:	pop	{r4, r5, r6, sl, fp, pc}

00045558 <flatcc_json_printer_union_field@@Base>:
   45558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4555c:	add	fp, sp, #28
   45560:	sub	sp, sp, #20
   45564:	mov	r9, r1
   45568:	mov	r4, r0
   4556c:	mov	r0, #2
   45570:	mov	r8, r3
   45574:	lsl	r1, r2, #1
   45578:	add	r3, r0, r2, lsl #1
   4557c:	ldr	r2, [r9, #8]
   45580:	mov	r0, #0
   45584:	cmp	r3, r2
   45588:	bge	455a4 <flatcc_json_printer_union_field@@Base+0x4c>
   4558c:	ldr	r7, [r9, #4]
   45590:	add	r3, r7, r3
   45594:	ldrh	r3, [r3]
   45598:	cmp	r3, #0
   4559c:	ldrne	r0, [r9]
   455a0:	addne	r0, r0, r3
   455a4:	add	r1, r1, #4
   455a8:	cmp	r1, r2
   455ac:	bge	455d4 <flatcc_json_printer_union_field@@Base+0x7c>
   455b0:	ldr	r2, [r9, #4]
   455b4:	add	r1, r2, r1
   455b8:	ldrh	r1, [r1]
   455bc:	cmp	r1, #0
   455c0:	beq	455d4 <flatcc_json_printer_union_field@@Base+0x7c>
   455c4:	cmp	r0, #0
   455c8:	ldrne	r2, [r9]
   455cc:	addsne	r2, r2, r1
   455d0:	bne	455dc <flatcc_json_printer_union_field@@Base+0x84>
   455d4:	sub	sp, fp, #28
   455d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   455dc:	ldrb	r6, [r0]
   455e0:	ldr	r0, [r9, #16]
   455e4:	ldr	r7, [fp, #8]
   455e8:	str	r2, [sp]
   455ec:	add	r1, r0, #1
   455f0:	cmp	r0, #0
   455f4:	str	r1, [r9, #16]
   455f8:	ldrne	r0, [r4, #20]
   455fc:	addne	r1, r0, #1
   45600:	strne	r1, [r4, #20]
   45604:	movne	r1, #44	; 0x2c
   45608:	strbne	r1, [r0]
   4560c:	ldrb	r1, [r4, #25]
   45610:	ldr	r0, [r4, #20]
   45614:	cmp	r1, #0
   45618:	beq	456d4 <flatcc_json_printer_union_field@@Base+0x17c>
   4561c:	add	r1, r0, #1
   45620:	mov	sl, r4
   45624:	mov	r5, r6
   45628:	str	r1, [r4, #20]
   4562c:	mov	r1, #10
   45630:	strb	r1, [r0]
   45634:	ldr	r1, [sl, #16]!
   45638:	ldr	r0, [r4, #20]
   4563c:	ldrb	r2, [sl, #9]
   45640:	ldr	r3, [sl, #16]
   45644:	mla	r6, r3, r2, r0
   45648:	mul	r7, r3, r2
   4564c:	cmp	r6, r1
   45650:	bls	456fc <flatcc_json_printer_union_field@@Base+0x1a4>
   45654:	cmp	r0, r1
   45658:	bcc	45674 <flatcc_json_printer_union_field@@Base+0x11c>
   4565c:	ldr	r2, [r4, #44]	; 0x2c
   45660:	mov	r0, r4
   45664:	mov	r1, #0
   45668:	blx	r2
   4566c:	ldr	r1, [r4, #16]
   45670:	ldr	r0, [r4, #20]
   45674:	mov	r6, r5
   45678:	sub	r5, r1, r0
   4567c:	cmp	r5, r7
   45680:	bcs	456c4 <flatcc_json_printer_union_field@@Base+0x16c>
   45684:	mov	r1, #32
   45688:	mov	r2, r5
   4568c:	bl	14ee8 <memset@plt>
   45690:	ldr	r0, [r4, #20]
   45694:	ldr	r2, [r4, #44]	; 0x2c
   45698:	mov	r1, #0
   4569c:	add	r0, r0, r5
   456a0:	str	r0, [r4, #20]
   456a4:	mov	r0, r4
   456a8:	blx	r2
   456ac:	ldr	r1, [r4, #16]
   456b0:	ldr	r0, [r4, #20]
   456b4:	sub	r7, r7, r5
   456b8:	sub	r5, r1, r0
   456bc:	cmp	r7, r5
   456c0:	bhi	45684 <flatcc_json_printer_union_field@@Base+0x12c>
   456c4:	mov	r1, #32
   456c8:	mov	r2, r7
   456cc:	bl	14ee8 <memset@plt>
   456d0:	b	4570c <flatcc_json_printer_union_field@@Base+0x1b4>
   456d4:	mov	sl, r4
   456d8:	ldr	r1, [sl, #16]!
   456dc:	cmp	r0, r1
   456e0:	bcc	4571c <flatcc_json_printer_union_field@@Base+0x1c4>
   456e4:	ldr	r2, [r4, #44]	; 0x2c
   456e8:	mov	r0, r4
   456ec:	mov	r1, #0
   456f0:	blx	r2
   456f4:	ldr	r0, [r4, #20]
   456f8:	b	4571c <flatcc_json_printer_union_field@@Base+0x1c4>
   456fc:	mov	r1, #32
   45700:	mov	r2, r7
   45704:	bl	14ee8 <memset@plt>
   45708:	mov	r6, r5
   4570c:	ldr	r0, [r4, #20]
   45710:	add	r0, r0, r7
   45714:	ldr	r7, [fp, #8]
   45718:	str	r0, [r4, #20]
   4571c:	mov	r1, #34	; 0x22
   45720:	str	r6, [sp, #4]
   45724:	strb	r1, [r0]
   45728:	ldrb	r2, [r4, #26]
   4572c:	ldr	r0, [r4, #20]
   45730:	ldr	r1, [r4, #16]
   45734:	cmp	r2, #0
   45738:	addeq	r0, r0, #1
   4573c:	add	r2, r0, r7
   45740:	str	r0, [r4, #20]
   45744:	cmp	r2, r1
   45748:	bcs	4575c <flatcc_json_printer_union_field@@Base+0x204>
   4574c:	mov	r1, r8
   45750:	mov	r2, r7
   45754:	bl	14e58 <memcpy@plt>
   45758:	b	457f0 <flatcc_json_printer_union_field@@Base+0x298>
   4575c:	mov	r5, r8
   45760:	cmp	r0, r1
   45764:	bcc	45780 <flatcc_json_printer_union_field@@Base+0x228>
   45768:	ldr	r2, [r4, #44]	; 0x2c
   4576c:	mov	r0, r4
   45770:	mov	r1, #0
   45774:	blx	r2
   45778:	ldr	r0, [r4, #20]
   4577c:	ldr	r1, [sl]
   45780:	sub	r8, r1, r0
   45784:	mov	r6, r5
   45788:	cmp	r8, r7
   4578c:	bcs	457dc <flatcc_json_printer_union_field@@Base+0x284>
   45790:	ldr	r7, [fp, #8]
   45794:	mov	r6, r5
   45798:	mov	r1, r6
   4579c:	mov	r2, r8
   457a0:	bl	14e58 <memcpy@plt>
   457a4:	ldr	r0, [r4, #20]
   457a8:	ldr	r2, [r4, #44]	; 0x2c
   457ac:	mov	r1, #0
   457b0:	add	r0, r0, r8
   457b4:	str	r0, [r4, #20]
   457b8:	mov	r0, r4
   457bc:	blx	r2
   457c0:	ldr	r0, [r4, #20]
   457c4:	ldr	r1, [sl]
   457c8:	sub	r7, r7, r8
   457cc:	add	r6, r6, r8
   457d0:	sub	r8, r1, r0
   457d4:	cmp	r7, r8
   457d8:	bhi	45798 <flatcc_json_printer_union_field@@Base+0x240>
   457dc:	mov	r1, r6
   457e0:	mov	r2, r7
   457e4:	bl	14e58 <memcpy@plt>
   457e8:	ldr	r6, [sp, #4]
   457ec:	mov	r8, r5
   457f0:	ldr	r0, [r4, #20]
   457f4:	ldr	r1, [r4, #16]
   457f8:	add	r0, r0, r7
   457fc:	add	r2, r0, #5
   45800:	str	r0, [r4, #20]
   45804:	cmp	r2, r1
   45808:	bcs	4582c <flatcc_json_printer_union_field@@Base+0x2d4>
   4580c:	ldr	sl, [sp]
   45810:	mov	r1, #101	; 0x65
   45814:	mov	r7, #5
   45818:	strb	r1, [r0, #4]
   4581c:	movw	r1, #29791	; 0x745f
   45820:	movt	r1, #28793	; 0x7079
   45824:	str	r1, [r0]
   45828:	b	458cc <flatcc_json_printer_union_field@@Base+0x374>
   4582c:	cmp	r0, r1
   45830:	bcc	4584c <flatcc_json_printer_union_field@@Base+0x2f4>
   45834:	ldr	r2, [r4, #44]	; 0x2c
   45838:	mov	r0, r4
   4583c:	mov	r1, #0
   45840:	blx	r2
   45844:	ldr	r0, [r4, #20]
   45848:	ldr	r1, [sl]
   4584c:	sub	r5, r1, r0
   45850:	cmp	r5, #4
   45854:	bhi	458ac <flatcc_json_printer_union_field@@Base+0x354>
   45858:	ldr	r6, [pc, #496]	; 45a50 <flatcc_json_printer_union_field@@Base+0x4f8>
   4585c:	mov	r7, #5
   45860:	add	r6, pc, r6
   45864:	mov	r1, r6
   45868:	mov	r2, r5
   4586c:	bl	14e58 <memcpy@plt>
   45870:	ldr	r0, [r4, #20]
   45874:	ldr	r2, [r4, #44]	; 0x2c
   45878:	mov	r1, #0
   4587c:	add	r0, r0, r5
   45880:	str	r0, [r4, #20]
   45884:	mov	r0, r4
   45888:	blx	r2
   4588c:	ldr	r0, [r4, #20]
   45890:	ldr	r1, [sl]
   45894:	sub	r7, r7, r5
   45898:	add	r6, r6, r5
   4589c:	sub	r5, r1, r0
   458a0:	cmp	r7, r5
   458a4:	bhi	45864 <flatcc_json_printer_union_field@@Base+0x30c>
   458a8:	b	458b8 <flatcc_json_printer_union_field@@Base+0x360>
   458ac:	ldr	r6, [pc, #408]	; 45a4c <flatcc_json_printer_union_field@@Base+0x4f4>
   458b0:	mov	r7, #5
   458b4:	add	r6, pc, r6
   458b8:	ldr	sl, [sp]
   458bc:	mov	r1, r6
   458c0:	mov	r2, r7
   458c4:	bl	14e58 <memcpy@plt>
   458c8:	ldr	r6, [sp, #4]
   458cc:	ldr	r0, [r4, #20]
   458d0:	add	r1, r0, r7
   458d4:	str	r1, [r4, #20]
   458d8:	mov	r1, #34	; 0x22
   458dc:	strb	r1, [r0, r7]
   458e0:	ldrb	r0, [r4, #26]
   458e4:	ldr	r1, [r4, #20]
   458e8:	cmp	r0, #0
   458ec:	addeq	r1, r1, #1
   458f0:	add	r0, r1, #1
   458f4:	str	r0, [r4, #20]
   458f8:	mov	r0, #58	; 0x3a
   458fc:	strb	r0, [r1]
   45900:	mov	r1, #32
   45904:	ldr	r0, [r4, #20]
   45908:	strb	r1, [r0]
   4590c:	ldrb	r1, [r4, #25]
   45910:	ldr	r0, [r4, #20]
   45914:	cmp	r1, #0
   45918:	addne	r0, r0, #1
   4591c:	str	r0, [r4, #20]
   45920:	ldrb	r1, [r4, #27]
   45924:	cmp	r1, #0
   45928:	beq	4597c <flatcc_json_printer_union_field@@Base+0x424>
   4592c:	mov	r1, #0
   45930:	cmp	r6, #100	; 0x64
   45934:	bcc	4599c <flatcc_json_printer_union_field@@Base+0x444>
   45938:	strb	r1, [r0, #3]
   4593c:	movw	r1, #34079	; 0x851f
   45940:	movt	r1, #20971	; 0x51eb
   45944:	umull	r1, r2, r6, r1
   45948:	mov	r1, #48	; 0x30
   4594c:	orr	r1, r1, r2, lsr #5
   45950:	strb	r1, [r0]
   45954:	lsr	r1, r2, #5
   45958:	mov	r2, #100	; 0x64
   4595c:	mls	r1, r1, r2, r6
   45960:	ldr	r2, [pc, #236]	; 45a54 <flatcc_json_printer_union_field@@Base+0x4fc>
   45964:	add	r2, pc, r2
   45968:	add	r1, r2, r1, lsl #1
   4596c:	ldrh	r1, [r1]
   45970:	strh	r1, [r0, #1]
   45974:	mov	r0, #3
   45978:	b	459ec <flatcc_json_printer_union_field@@Base+0x494>
   4597c:	ldr	r2, [fp, #12]
   45980:	mov	r0, r4
   45984:	mov	r1, r6
   45988:	blx	r2
   4598c:	ldr	r2, [fp, #8]
   45990:	cmp	r6, #0
   45994:	bne	45a04 <flatcc_json_printer_union_field@@Base+0x4ac>
   45998:	b	455d4 <flatcc_json_printer_union_field@@Base+0x7c>
   4599c:	cmp	r6, #10
   459a0:	bcc	459dc <flatcc_json_printer_union_field@@Base+0x484>
   459a4:	strb	r1, [r0, #2]
   459a8:	movw	r1, #34079	; 0x851f
   459ac:	movt	r1, #20971	; 0x51eb
   459b0:	umull	r1, r2, r6, r1
   459b4:	lsr	r1, r2, #5
   459b8:	mov	r2, #100	; 0x64
   459bc:	mls	r1, r1, r2, r6
   459c0:	ldr	r2, [pc, #144]	; 45a58 <flatcc_json_printer_union_field@@Base+0x500>
   459c4:	add	r2, pc, r2
   459c8:	add	r1, r2, r1, lsl #1
   459cc:	ldrh	r1, [r1]
   459d0:	strh	r1, [r0]
   459d4:	mov	r0, #2
   459d8:	b	459ec <flatcc_json_printer_union_field@@Base+0x494>
   459dc:	strb	r1, [r0, #1]
   459e0:	add	r1, r6, #48	; 0x30
   459e4:	strb	r1, [r0]
   459e8:	mov	r0, #1
   459ec:	ldr	r1, [r4, #20]
   459f0:	ldr	r2, [fp, #8]
   459f4:	add	r0, r1, r0
   459f8:	str	r0, [r4, #20]
   459fc:	cmp	r6, #0
   45a00:	beq	455d4 <flatcc_json_printer_union_field@@Base+0x7c>
   45a04:	ldr	r0, [r4, #20]
   45a08:	ldr	r5, [fp, #16]
   45a0c:	add	r1, r0, #1
   45a10:	str	r1, [r4, #20]
   45a14:	mov	r1, #44	; 0x2c
   45a18:	strb	r1, [r0]
   45a1c:	mov	r0, r4
   45a20:	mov	r1, r8
   45a24:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   45a28:	ldr	r0, [r9, #12]
   45a2c:	strb	r6, [sp, #16]
   45a30:	str	sl, [sp, #8]
   45a34:	add	r1, sp, #8
   45a38:	str	r0, [sp, #12]
   45a3c:	mov	r0, r4
   45a40:	blx	r5
   45a44:	sub	sp, fp, #28
   45a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45a4c:			; <UNDEFINED> instruction: 0x000082b4
   45a50:	andeq	r8, r0, r8, lsl #6
   45a54:	ldrdeq	r8, [r0], -fp
   45a58:	andeq	r8, r0, fp, ror r3

00045a5c <flatcc_json_printer_union_table@@Base>:
   45a5c:	push	{r4, r5, r6, sl, fp, lr}
   45a60:	add	fp, sp, #16
   45a64:	sub	sp, sp, #24
   45a68:	mov	r4, r0
   45a6c:	ldr	r0, [r1, #4]
   45a70:	subs	r0, r0, #1
   45a74:	beq	45bb8 <flatcc_json_printer_union_table@@Base+0x15c>
   45a78:	ldr	r1, [r1]
   45a7c:	ldr	r6, [r4, #32]
   45a80:	ldr	r3, [r1]
   45a84:	add	r6, r6, #1
   45a88:	add	r1, r1, r3
   45a8c:	ldr	r3, [r4, #20]
   45a90:	str	r6, [r4, #32]
   45a94:	add	r6, r3, #1
   45a98:	str	r6, [r4, #20]
   45a9c:	mov	r6, #123	; 0x7b
   45aa0:	strb	r6, [r3]
   45aa4:	str	r0, [sp, #16]
   45aa8:	mov	r0, #0
   45aac:	str	r0, [sp, #20]
   45ab0:	str	r1, [sp, #4]
   45ab4:	ldr	r0, [r1]
   45ab8:	sub	r3, r1, r0
   45abc:	str	r3, [sp, #8]
   45ac0:	ldrh	r0, [r1, -r0]
   45ac4:	add	r1, sp, #4
   45ac8:	str	r0, [sp, #12]
   45acc:	mov	r0, r4
   45ad0:	blx	r2
   45ad4:	ldrb	r1, [r4, #25]
   45ad8:	ldr	r0, [r4, #20]
   45adc:	cmp	r1, #0
   45ae0:	beq	45ba0 <flatcc_json_printer_union_table@@Base+0x144>
   45ae4:	add	r1, r0, #1
   45ae8:	str	r1, [r4, #20]
   45aec:	mov	r1, #10
   45af0:	strb	r1, [r0]
   45af4:	ldr	r0, [r4, #32]
   45af8:	sub	r2, r0, #1
   45afc:	str	r2, [r4, #32]
   45b00:	ldrb	r3, [r4, #25]
   45b04:	ldr	r0, [r4, #20]
   45b08:	ldr	r1, [r4, #16]
   45b0c:	mla	r6, r2, r3, r0
   45b10:	mul	r5, r2, r3
   45b14:	cmp	r6, r1
   45b18:	bls	45b88 <flatcc_json_printer_union_table@@Base+0x12c>
   45b1c:	cmp	r0, r1
   45b20:	bcc	45b3c <flatcc_json_printer_union_table@@Base+0xe0>
   45b24:	ldr	r2, [r4, #44]	; 0x2c
   45b28:	mov	r0, r4
   45b2c:	mov	r1, #0
   45b30:	blx	r2
   45b34:	ldr	r1, [r4, #16]
   45b38:	ldr	r0, [r4, #20]
   45b3c:	sub	r6, r1, r0
   45b40:	cmp	r6, r5
   45b44:	bcs	45b88 <flatcc_json_printer_union_table@@Base+0x12c>
   45b48:	mov	r1, #32
   45b4c:	mov	r2, r6
   45b50:	bl	14ee8 <memset@plt>
   45b54:	ldr	r0, [r4, #20]
   45b58:	ldr	r2, [r4, #44]	; 0x2c
   45b5c:	mov	r1, #0
   45b60:	add	r0, r0, r6
   45b64:	str	r0, [r4, #20]
   45b68:	mov	r0, r4
   45b6c:	blx	r2
   45b70:	ldr	r1, [r4, #16]
   45b74:	ldr	r0, [r4, #20]
   45b78:	sub	r5, r5, r6
   45b7c:	sub	r6, r1, r0
   45b80:	cmp	r5, r6
   45b84:	bhi	45b48 <flatcc_json_printer_union_table@@Base+0xec>
   45b88:	mov	r1, #32
   45b8c:	mov	r2, r5
   45b90:	bl	14ee8 <memset@plt>
   45b94:	ldr	r0, [r4, #20]
   45b98:	add	r0, r0, r5
   45b9c:	str	r0, [r4, #20]
   45ba0:	add	r1, r0, #1
   45ba4:	str	r1, [r4, #20]
   45ba8:	mov	r1, #125	; 0x7d
   45bac:	strb	r1, [r0]
   45bb0:	sub	sp, fp, #16
   45bb4:	pop	{r4, r5, r6, sl, fp, pc}
   45bb8:	ldr	r0, [r4, #36]	; 0x24
   45bbc:	cmp	r0, #0
   45bc0:	beq	45bcc <flatcc_json_printer_union_table@@Base+0x170>
   45bc4:	sub	sp, fp, #16
   45bc8:	pop	{r4, r5, r6, sl, fp, pc}
   45bcc:	mov	r0, #2
   45bd0:	str	r0, [r4, #36]	; 0x24
   45bd4:	sub	sp, fp, #16
   45bd8:	pop	{r4, r5, r6, sl, fp, pc}

00045bdc <flatcc_json_printer_union_struct@@Base>:
   45bdc:	push	{r4, r5, r6, sl, fp, lr}
   45be0:	add	fp, sp, #16
   45be4:	mov	r4, r0
   45be8:	ldr	r0, [r0, #20]
   45bec:	ldr	r3, [r4, #32]
   45bf0:	add	r3, r3, #1
   45bf4:	str	r3, [r4, #32]
   45bf8:	add	r3, r0, #1
   45bfc:	str	r3, [r4, #20]
   45c00:	mov	r3, #123	; 0x7b
   45c04:	strb	r3, [r0]
   45c08:	ldr	r0, [r1]
   45c0c:	ldr	r1, [r0]
   45c10:	add	r1, r0, r1
   45c14:	mov	r0, r4
   45c18:	blx	r2
   45c1c:	ldrb	r1, [r4, #25]
   45c20:	ldr	r0, [r4, #20]
   45c24:	cmp	r1, #0
   45c28:	beq	45ce8 <flatcc_json_printer_union_struct@@Base+0x10c>
   45c2c:	add	r1, r0, #1
   45c30:	str	r1, [r4, #20]
   45c34:	mov	r1, #10
   45c38:	strb	r1, [r0]
   45c3c:	ldr	r0, [r4, #32]
   45c40:	sub	r2, r0, #1
   45c44:	str	r2, [r4, #32]
   45c48:	ldrb	r3, [r4, #25]
   45c4c:	ldr	r0, [r4, #20]
   45c50:	ldr	r1, [r4, #16]
   45c54:	mla	r6, r2, r3, r0
   45c58:	mul	r5, r2, r3
   45c5c:	cmp	r6, r1
   45c60:	bls	45cd0 <flatcc_json_printer_union_struct@@Base+0xf4>
   45c64:	cmp	r0, r1
   45c68:	bcc	45c84 <flatcc_json_printer_union_struct@@Base+0xa8>
   45c6c:	ldr	r2, [r4, #44]	; 0x2c
   45c70:	mov	r0, r4
   45c74:	mov	r1, #0
   45c78:	blx	r2
   45c7c:	ldr	r1, [r4, #16]
   45c80:	ldr	r0, [r4, #20]
   45c84:	sub	r6, r1, r0
   45c88:	cmp	r6, r5
   45c8c:	bcs	45cd0 <flatcc_json_printer_union_struct@@Base+0xf4>
   45c90:	mov	r1, #32
   45c94:	mov	r2, r6
   45c98:	bl	14ee8 <memset@plt>
   45c9c:	ldr	r0, [r4, #20]
   45ca0:	ldr	r2, [r4, #44]	; 0x2c
   45ca4:	mov	r1, #0
   45ca8:	add	r0, r0, r6
   45cac:	str	r0, [r4, #20]
   45cb0:	mov	r0, r4
   45cb4:	blx	r2
   45cb8:	ldr	r1, [r4, #16]
   45cbc:	ldr	r0, [r4, #20]
   45cc0:	sub	r5, r5, r6
   45cc4:	sub	r6, r1, r0
   45cc8:	cmp	r5, r6
   45ccc:	bhi	45c90 <flatcc_json_printer_union_struct@@Base+0xb4>
   45cd0:	mov	r1, #32
   45cd4:	mov	r2, r5
   45cd8:	bl	14ee8 <memset@plt>
   45cdc:	ldr	r0, [r4, #20]
   45ce0:	add	r0, r0, r5
   45ce4:	str	r0, [r4, #20]
   45ce8:	add	r1, r0, #1
   45cec:	str	r1, [r4, #20]
   45cf0:	mov	r1, #125	; 0x7d
   45cf4:	strb	r1, [r0]
   45cf8:	pop	{r4, r5, r6, sl, fp, pc}

00045cfc <flatcc_json_printer_union_string@@Base>:
   45cfc:	ldr	r1, [r1]
   45d00:	ldr	r2, [r1]
   45d04:	ldr	r2, [r1, r2]!
   45d08:	add	r1, r1, #4
   45d0c:	b	3b0dc <flatcc_json_printer_string@@Base+0x4>

00045d10 <flatcc_json_printer_embedded_struct_field@@Base>:
   45d10:	push	{r4, r5, r6, r7, fp, lr}
   45d14:	add	fp, sp, #16
   45d18:	mov	r5, r3
   45d1c:	mov	r3, r1
   45d20:	mov	r4, r0
   45d24:	add	r7, fp, #8
   45d28:	mov	r6, r2
   45d2c:	cmp	r3, #0
   45d30:	ldm	r7, {r1, r2, r7}
   45d34:	ldrne	r0, [r4, #20]
   45d38:	addne	r3, r0, #1
   45d3c:	strne	r3, [r4, #20]
   45d40:	movne	r3, #44	; 0x2c
   45d44:	strbne	r3, [r0]
   45d48:	mov	r0, r4
   45d4c:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   45d50:	ldr	r1, [r4, #32]
   45d54:	ldr	r0, [r4, #20]
   45d58:	add	r1, r1, #1
   45d5c:	str	r1, [r4, #32]
   45d60:	add	r1, r0, #1
   45d64:	str	r1, [r4, #20]
   45d68:	mov	r1, #123	; 0x7b
   45d6c:	strb	r1, [r0]
   45d70:	add	r1, r6, r5
   45d74:	mov	r0, r4
   45d78:	blx	r7
   45d7c:	ldrb	r1, [r4, #25]
   45d80:	ldr	r0, [r4, #20]
   45d84:	cmp	r1, #0
   45d88:	beq	45e48 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   45d8c:	add	r1, r0, #1
   45d90:	str	r1, [r4, #20]
   45d94:	mov	r1, #10
   45d98:	strb	r1, [r0]
   45d9c:	ldr	r0, [r4, #32]
   45da0:	sub	r2, r0, #1
   45da4:	str	r2, [r4, #32]
   45da8:	ldrb	r3, [r4, #25]
   45dac:	ldr	r0, [r4, #20]
   45db0:	ldr	r1, [r4, #16]
   45db4:	mla	r7, r2, r3, r0
   45db8:	mul	r5, r2, r3
   45dbc:	cmp	r7, r1
   45dc0:	bls	45e30 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   45dc4:	cmp	r0, r1
   45dc8:	bcc	45de4 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   45dcc:	ldr	r2, [r4, #44]	; 0x2c
   45dd0:	mov	r0, r4
   45dd4:	mov	r1, #0
   45dd8:	blx	r2
   45ddc:	ldr	r1, [r4, #16]
   45de0:	ldr	r0, [r4, #20]
   45de4:	sub	r6, r1, r0
   45de8:	cmp	r6, r5
   45dec:	bcs	45e30 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   45df0:	mov	r1, #32
   45df4:	mov	r2, r6
   45df8:	bl	14ee8 <memset@plt>
   45dfc:	ldr	r0, [r4, #20]
   45e00:	ldr	r2, [r4, #44]	; 0x2c
   45e04:	mov	r1, #0
   45e08:	add	r0, r0, r6
   45e0c:	str	r0, [r4, #20]
   45e10:	mov	r0, r4
   45e14:	blx	r2
   45e18:	ldr	r1, [r4, #16]
   45e1c:	ldr	r0, [r4, #20]
   45e20:	sub	r5, r5, r6
   45e24:	sub	r6, r1, r0
   45e28:	cmp	r5, r6
   45e2c:	bhi	45df0 <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   45e30:	mov	r1, #32
   45e34:	mov	r2, r5
   45e38:	bl	14ee8 <memset@plt>
   45e3c:	ldr	r0, [r4, #20]
   45e40:	add	r0, r0, r5
   45e44:	str	r0, [r4, #20]
   45e48:	add	r1, r0, #1
   45e4c:	str	r1, [r4, #20]
   45e50:	mov	r1, #125	; 0x7d
   45e54:	strb	r1, [r0]
   45e58:	pop	{r4, r5, r6, r7, fp, pc}

00045e5c <flatcc_json_printer_struct_field@@Base>:
   45e5c:	push	{r4, r5, r6, r7, fp, lr}
   45e60:	add	fp, sp, #16
   45e64:	mov	r4, r0
   45e68:	mov	r0, #4
   45e6c:	add	r0, r0, r2, lsl #1
   45e70:	ldr	r2, [r1, #8]
   45e74:	cmp	r0, r2
   45e78:	popge	{r4, r5, r6, r7, fp, pc}
   45e7c:	ldr	r2, [r1, #4]
   45e80:	add	r0, r2, r0
   45e84:	ldrh	r0, [r0]
   45e88:	cmp	r0, #0
   45e8c:	ldrne	r2, [r1]
   45e90:	addsne	r5, r2, r0
   45e94:	bne	45e9c <flatcc_json_printer_struct_field@@Base+0x40>
   45e98:	pop	{r4, r5, r6, r7, fp, pc}
   45e9c:	ldr	r0, [r1, #16]
   45ea0:	ldr	r2, [fp, #8]
   45ea4:	ldr	r7, [fp, #12]
   45ea8:	add	r6, r0, #1
   45eac:	cmp	r0, #0
   45eb0:	str	r6, [r1, #16]
   45eb4:	ldrne	r0, [r4, #20]
   45eb8:	addne	r1, r0, #1
   45ebc:	strne	r1, [r4, #20]
   45ec0:	movne	r1, #44	; 0x2c
   45ec4:	strbne	r1, [r0]
   45ec8:	mov	r0, r4
   45ecc:	mov	r1, r3
   45ed0:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   45ed4:	ldr	r1, [r4, #32]
   45ed8:	ldr	r0, [r4, #20]
   45edc:	add	r1, r1, #1
   45ee0:	str	r1, [r4, #32]
   45ee4:	add	r1, r0, #1
   45ee8:	str	r1, [r4, #20]
   45eec:	mov	r1, #123	; 0x7b
   45ef0:	strb	r1, [r0]
   45ef4:	mov	r0, r4
   45ef8:	mov	r1, r5
   45efc:	blx	r7
   45f00:	ldrb	r1, [r4, #25]
   45f04:	ldr	r0, [r4, #20]
   45f08:	cmp	r1, #0
   45f0c:	beq	45fcc <flatcc_json_printer_struct_field@@Base+0x170>
   45f10:	add	r1, r0, #1
   45f14:	str	r1, [r4, #20]
   45f18:	mov	r1, #10
   45f1c:	strb	r1, [r0]
   45f20:	ldr	r0, [r4, #32]
   45f24:	sub	r2, r0, #1
   45f28:	str	r2, [r4, #32]
   45f2c:	ldrb	r3, [r4, #25]
   45f30:	ldr	r0, [r4, #20]
   45f34:	ldr	r1, [r4, #16]
   45f38:	mla	r7, r2, r3, r0
   45f3c:	mul	r5, r2, r3
   45f40:	cmp	r7, r1
   45f44:	bls	45fb4 <flatcc_json_printer_struct_field@@Base+0x158>
   45f48:	cmp	r0, r1
   45f4c:	bcc	45f68 <flatcc_json_printer_struct_field@@Base+0x10c>
   45f50:	ldr	r2, [r4, #44]	; 0x2c
   45f54:	mov	r0, r4
   45f58:	mov	r1, #0
   45f5c:	blx	r2
   45f60:	ldr	r1, [r4, #16]
   45f64:	ldr	r0, [r4, #20]
   45f68:	sub	r6, r1, r0
   45f6c:	cmp	r6, r5
   45f70:	bcs	45fb4 <flatcc_json_printer_struct_field@@Base+0x158>
   45f74:	mov	r1, #32
   45f78:	mov	r2, r6
   45f7c:	bl	14ee8 <memset@plt>
   45f80:	ldr	r0, [r4, #20]
   45f84:	ldr	r2, [r4, #44]	; 0x2c
   45f88:	mov	r1, #0
   45f8c:	add	r0, r0, r6
   45f90:	str	r0, [r4, #20]
   45f94:	mov	r0, r4
   45f98:	blx	r2
   45f9c:	ldr	r1, [r4, #16]
   45fa0:	ldr	r0, [r4, #20]
   45fa4:	sub	r5, r5, r6
   45fa8:	sub	r6, r1, r0
   45fac:	cmp	r5, r6
   45fb0:	bhi	45f74 <flatcc_json_printer_struct_field@@Base+0x118>
   45fb4:	mov	r1, #32
   45fb8:	mov	r2, r5
   45fbc:	bl	14ee8 <memset@plt>
   45fc0:	ldr	r0, [r4, #20]
   45fc4:	add	r0, r0, r5
   45fc8:	str	r0, [r4, #20]
   45fcc:	add	r1, r0, #1
   45fd0:	str	r1, [r4, #20]
   45fd4:	mov	r1, #125	; 0x7d
   45fd8:	strb	r1, [r0]
   45fdc:	pop	{r4, r5, r6, r7, fp, pc}

00045fe0 <flatcc_json_printer_struct_as_root@@Base>:
   45fe0:	push	{r4, r5, r6, sl, fp, lr}
   45fe4:	add	fp, sp, #16
   45fe8:	sub	sp, sp, #8
   45fec:	cmp	r1, #0
   45ff0:	mov	r4, r0
   45ff4:	mov	r0, #0
   45ff8:	cmpne	r2, #7
   45ffc:	str	r0, [sp, #4]
   46000:	bls	461b4 <flatcc_json_printer_struct_as_root@@Base+0x1d4>
   46004:	mov	r5, r1
   46008:	cmp	r3, #0
   4600c:	beq	46034 <flatcc_json_printer_struct_as_root@@Base+0x54>
   46010:	add	r0, sp, #4
   46014:	mov	r1, r3
   46018:	mov	r2, #4
   4601c:	bl	14ef4 <strncpy@plt>
   46020:	ldr	r0, [sp, #4]
   46024:	cmp	r0, #0
   46028:	ldrne	r1, [r5, #4]
   4602c:	cmpne	r1, r0
   46030:	bne	461e4 <flatcc_json_printer_struct_as_root@@Base+0x204>
   46034:	ldr	r1, [r4, #32]
   46038:	ldr	r0, [r4, #20]
   4603c:	ldr	r2, [fp, #8]
   46040:	add	r1, r1, #1
   46044:	str	r1, [r4, #32]
   46048:	add	r1, r0, #1
   4604c:	str	r1, [r4, #20]
   46050:	mov	r1, #123	; 0x7b
   46054:	strb	r1, [r0]
   46058:	ldr	r0, [r5]
   4605c:	add	r1, r5, r0
   46060:	mov	r0, r4
   46064:	blx	r2
   46068:	ldrb	r1, [r4, #25]
   4606c:	ldr	r0, [r4, #20]
   46070:	cmp	r1, #0
   46074:	beq	46134 <flatcc_json_printer_struct_as_root@@Base+0x154>
   46078:	add	r1, r0, #1
   4607c:	str	r1, [r4, #20]
   46080:	mov	r1, #10
   46084:	strb	r1, [r0]
   46088:	ldr	r0, [r4, #32]
   4608c:	sub	r2, r0, #1
   46090:	str	r2, [r4, #32]
   46094:	ldrb	r3, [r4, #25]
   46098:	ldr	r0, [r4, #20]
   4609c:	ldr	r1, [r4, #16]
   460a0:	mla	r6, r2, r3, r0
   460a4:	mul	r5, r2, r3
   460a8:	cmp	r6, r1
   460ac:	bls	4611c <flatcc_json_printer_struct_as_root@@Base+0x13c>
   460b0:	cmp	r0, r1
   460b4:	bcc	460d0 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   460b8:	ldr	r2, [r4, #44]	; 0x2c
   460bc:	mov	r0, r4
   460c0:	mov	r1, #0
   460c4:	blx	r2
   460c8:	ldr	r1, [r4, #16]
   460cc:	ldr	r0, [r4, #20]
   460d0:	sub	r6, r1, r0
   460d4:	cmp	r6, r5
   460d8:	bcs	4611c <flatcc_json_printer_struct_as_root@@Base+0x13c>
   460dc:	mov	r1, #32
   460e0:	mov	r2, r6
   460e4:	bl	14ee8 <memset@plt>
   460e8:	ldr	r0, [r4, #20]
   460ec:	ldr	r2, [r4, #44]	; 0x2c
   460f0:	mov	r1, #0
   460f4:	add	r0, r0, r6
   460f8:	str	r0, [r4, #20]
   460fc:	mov	r0, r4
   46100:	blx	r2
   46104:	ldr	r1, [r4, #16]
   46108:	ldr	r0, [r4, #20]
   4610c:	sub	r5, r5, r6
   46110:	sub	r6, r1, r0
   46114:	cmp	r5, r6
   46118:	bhi	460dc <flatcc_json_printer_struct_as_root@@Base+0xfc>
   4611c:	mov	r1, #32
   46120:	mov	r2, r5
   46124:	bl	14ee8 <memset@plt>
   46128:	ldr	r0, [r4, #20]
   4612c:	add	r0, r0, r5
   46130:	str	r0, [r4, #20]
   46134:	add	r1, r0, #1
   46138:	str	r1, [r4, #20]
   4613c:	mov	r1, #125	; 0x7d
   46140:	strb	r1, [r0]
   46144:	ldrb	r0, [r4, #25]
   46148:	cmp	r0, #0
   4614c:	beq	46170 <flatcc_json_printer_struct_as_root@@Base+0x190>
   46150:	ldr	r0, [r4, #32]
   46154:	cmp	r0, #0
   46158:	bne	46170 <flatcc_json_printer_struct_as_root@@Base+0x190>
   4615c:	ldr	r0, [r4, #20]
   46160:	add	r1, r0, #1
   46164:	str	r1, [r4, #20]
   46168:	mov	r1, #10
   4616c:	strb	r1, [r0]
   46170:	ldr	r2, [r4, #44]	; 0x2c
   46174:	mov	r0, r4
   46178:	mov	r1, #1
   4617c:	blx	r2
   46180:	ldr	r1, [r4, #36]	; 0x24
   46184:	mvn	r0, #0
   46188:	cmp	r1, #0
   4618c:	beq	46198 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   46190:	sub	sp, fp, #16
   46194:	pop	{r4, r5, r6, sl, fp, pc}
   46198:	ldr	r1, [r4, #12]
   4619c:	ldr	r2, [r4, #20]
   461a0:	ldr	r0, [r4]
   461a4:	add	r1, r2, r1
   461a8:	sub	r0, r1, r0
   461ac:	sub	sp, fp, #16
   461b0:	pop	{r4, r5, r6, sl, fp, pc}
   461b4:	ldr	r0, [r4, #36]	; 0x24
   461b8:	movw	r2, #1019	; 0x3fb
   461bc:	cmp	r0, #0
   461c0:	moveq	r0, #1
   461c4:	streq	r0, [r4, #36]	; 0x24
   461c8:	ldr	r0, [pc, #68]	; 46214 <flatcc_json_printer_struct_as_root@@Base+0x234>
   461cc:	ldr	r1, [pc, #68]	; 46218 <flatcc_json_printer_struct_as_root@@Base+0x238>
   461d0:	ldr	r3, [pc, #68]	; 4621c <flatcc_json_printer_struct_as_root@@Base+0x23c>
   461d4:	add	r0, pc, r0
   461d8:	add	r1, pc, r1
   461dc:	add	r3, pc, r3
   461e0:	bl	14f3c <__assert_fail@plt>
   461e4:	ldr	r0, [r4, #36]	; 0x24
   461e8:	movw	r2, #1028	; 0x404
   461ec:	cmp	r0, #0
   461f0:	moveq	r0, #1
   461f4:	streq	r0, [r4, #36]	; 0x24
   461f8:	ldr	r0, [pc, #32]	; 46220 <flatcc_json_printer_struct_as_root@@Base+0x240>
   461fc:	ldr	r1, [pc, #32]	; 46224 <flatcc_json_printer_struct_as_root@@Base+0x244>
   46200:	ldr	r3, [pc, #32]	; 46228 <flatcc_json_printer_struct_as_root@@Base+0x248>
   46204:	add	r0, pc, r0
   46208:	add	r1, pc, r1
   4620c:	add	r3, pc, r3
   46210:	bl	14f3c <__assert_fail@plt>
   46214:	andeq	r7, r0, lr, lsl #26
   46218:	andeq	r7, r0, r4, ror #16
   4621c:	andeq	r7, r0, r5, lsr #26
   46220:	andeq	r7, r0, ip, asr #26
   46224:	andeq	r7, r0, r4, lsr r8
   46228:	strdeq	r7, [r0], -r5

0004622c <flatcc_json_printer_table_as_root@@Base>:
   4622c:	push	{r4, r5, r6, sl, fp, lr}
   46230:	add	fp, sp, #16
   46234:	sub	sp, sp, #24
   46238:	cmp	r1, #0
   4623c:	mov	r4, r0
   46240:	mov	r0, #0
   46244:	cmpne	r2, #7
   46248:	str	r0, [sp, #4]
   4624c:	bls	4642c <flatcc_json_printer_table_as_root@@Base+0x200>
   46250:	mov	r5, r1
   46254:	cmp	r3, #0
   46258:	beq	46280 <flatcc_json_printer_table_as_root@@Base+0x54>
   4625c:	add	r0, sp, #4
   46260:	mov	r1, r3
   46264:	mov	r2, #4
   46268:	bl	14ef4 <strncpy@plt>
   4626c:	ldr	r0, [sp, #4]
   46270:	cmp	r0, #0
   46274:	ldrne	r1, [r5, #4]
   46278:	cmpne	r1, r0
   4627c:	bne	4645c <flatcc_json_printer_table_as_root@@Base+0x230>
   46280:	ldr	r3, [r4, #32]
   46284:	ldr	r1, [r4, #20]
   46288:	ldr	r0, [r5]
   4628c:	ldr	r2, [fp, #8]
   46290:	add	r3, r3, #1
   46294:	str	r3, [r4, #32]
   46298:	add	r3, r1, #1
   4629c:	str	r3, [r4, #20]
   462a0:	mov	r3, #123	; 0x7b
   462a4:	strb	r3, [r1]
   462a8:	mov	r1, #99	; 0x63
   462ac:	str	r1, [sp, #16]
   462b0:	mov	r1, #0
   462b4:	str	r1, [sp, #20]
   462b8:	add	r1, r5, r0
   462bc:	str	r1, [sp, #4]
   462c0:	ldr	r0, [r5, r0]
   462c4:	sub	r3, r1, r0
   462c8:	str	r3, [sp, #8]
   462cc:	ldrh	r0, [r1, -r0]
   462d0:	add	r1, sp, #4
   462d4:	str	r0, [sp, #12]
   462d8:	mov	r0, r4
   462dc:	blx	r2
   462e0:	ldrb	r1, [r4, #25]
   462e4:	ldr	r0, [r4, #20]
   462e8:	cmp	r1, #0
   462ec:	beq	463ac <flatcc_json_printer_table_as_root@@Base+0x180>
   462f0:	add	r1, r0, #1
   462f4:	str	r1, [r4, #20]
   462f8:	mov	r1, #10
   462fc:	strb	r1, [r0]
   46300:	ldr	r0, [r4, #32]
   46304:	sub	r2, r0, #1
   46308:	str	r2, [r4, #32]
   4630c:	ldrb	r3, [r4, #25]
   46310:	ldr	r0, [r4, #20]
   46314:	ldr	r1, [r4, #16]
   46318:	mla	r6, r2, r3, r0
   4631c:	mul	r5, r2, r3
   46320:	cmp	r6, r1
   46324:	bls	46394 <flatcc_json_printer_table_as_root@@Base+0x168>
   46328:	cmp	r0, r1
   4632c:	bcc	46348 <flatcc_json_printer_table_as_root@@Base+0x11c>
   46330:	ldr	r2, [r4, #44]	; 0x2c
   46334:	mov	r0, r4
   46338:	mov	r1, #0
   4633c:	blx	r2
   46340:	ldr	r1, [r4, #16]
   46344:	ldr	r0, [r4, #20]
   46348:	sub	r6, r1, r0
   4634c:	cmp	r6, r5
   46350:	bcs	46394 <flatcc_json_printer_table_as_root@@Base+0x168>
   46354:	mov	r1, #32
   46358:	mov	r2, r6
   4635c:	bl	14ee8 <memset@plt>
   46360:	ldr	r0, [r4, #20]
   46364:	ldr	r2, [r4, #44]	; 0x2c
   46368:	mov	r1, #0
   4636c:	add	r0, r0, r6
   46370:	str	r0, [r4, #20]
   46374:	mov	r0, r4
   46378:	blx	r2
   4637c:	ldr	r1, [r4, #16]
   46380:	ldr	r0, [r4, #20]
   46384:	sub	r5, r5, r6
   46388:	sub	r6, r1, r0
   4638c:	cmp	r5, r6
   46390:	bhi	46354 <flatcc_json_printer_table_as_root@@Base+0x128>
   46394:	mov	r1, #32
   46398:	mov	r2, r5
   4639c:	bl	14ee8 <memset@plt>
   463a0:	ldr	r0, [r4, #20]
   463a4:	add	r0, r0, r5
   463a8:	str	r0, [r4, #20]
   463ac:	add	r1, r0, #1
   463b0:	str	r1, [r4, #20]
   463b4:	mov	r1, #125	; 0x7d
   463b8:	strb	r1, [r0]
   463bc:	ldrb	r0, [r4, #25]
   463c0:	cmp	r0, #0
   463c4:	beq	463e8 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   463c8:	ldr	r0, [r4, #32]
   463cc:	cmp	r0, #0
   463d0:	bne	463e8 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   463d4:	ldr	r0, [r4, #20]
   463d8:	add	r1, r0, #1
   463dc:	str	r1, [r4, #20]
   463e0:	mov	r1, #10
   463e4:	strb	r1, [r0]
   463e8:	ldr	r2, [r4, #44]	; 0x2c
   463ec:	mov	r0, r4
   463f0:	mov	r1, #1
   463f4:	blx	r2
   463f8:	ldr	r1, [r4, #36]	; 0x24
   463fc:	mvn	r0, #0
   46400:	cmp	r1, #0
   46404:	beq	46410 <flatcc_json_printer_table_as_root@@Base+0x1e4>
   46408:	sub	sp, fp, #16
   4640c:	pop	{r4, r5, r6, sl, fp, pc}
   46410:	ldr	r1, [r4, #12]
   46414:	ldr	r2, [r4, #20]
   46418:	ldr	r0, [r4]
   4641c:	add	r1, r2, r1
   46420:	sub	r0, r1, r0
   46424:	sub	sp, fp, #16
   46428:	pop	{r4, r5, r6, sl, fp, pc}
   4642c:	ldr	r0, [r4, #36]	; 0x24
   46430:	movw	r2, #1019	; 0x3fb
   46434:	cmp	r0, #0
   46438:	moveq	r0, #1
   4643c:	streq	r0, [r4, #36]	; 0x24
   46440:	ldr	r0, [pc, #68]	; 4648c <flatcc_json_printer_table_as_root@@Base+0x260>
   46444:	ldr	r1, [pc, #68]	; 46490 <flatcc_json_printer_table_as_root@@Base+0x264>
   46448:	ldr	r3, [pc, #68]	; 46494 <flatcc_json_printer_table_as_root@@Base+0x268>
   4644c:	add	r0, pc, r0
   46450:	add	r1, pc, r1
   46454:	add	r3, pc, r3
   46458:	bl	14f3c <__assert_fail@plt>
   4645c:	ldr	r0, [r4, #36]	; 0x24
   46460:	movw	r2, #1028	; 0x404
   46464:	cmp	r0, #0
   46468:	moveq	r0, #1
   4646c:	streq	r0, [r4, #36]	; 0x24
   46470:	ldr	r0, [pc, #32]	; 46498 <flatcc_json_printer_table_as_root@@Base+0x26c>
   46474:	ldr	r1, [pc, #32]	; 4649c <flatcc_json_printer_table_as_root@@Base+0x270>
   46478:	ldr	r3, [pc, #32]	; 464a0 <flatcc_json_printer_table_as_root@@Base+0x274>
   4647c:	add	r0, pc, r0
   46480:	add	r1, pc, r1
   46484:	add	r3, pc, r3
   46488:	bl	14f3c <__assert_fail@plt>
   4648c:	muleq	r0, r6, sl
   46490:	andeq	r7, r0, ip, ror #11
   46494:	andeq	r7, r0, sp, lsr #21
   46498:	ldrdeq	r7, [r0], -r4
   4649c:			; <UNDEFINED> instruction: 0x000075bc
   464a0:	andeq	r7, r0, sp, ror sl

000464a4 <flatcc_json_printer_struct_as_nested_root@@Base>:
   464a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   464a8:	add	fp, sp, #24
   464ac:	sub	sp, sp, #8
   464b0:	mov	r6, r1
   464b4:	ldr	r1, [r1, #8]
   464b8:	mov	r4, r0
   464bc:	mov	r0, #4
   464c0:	add	r0, r0, r2, lsl #1
   464c4:	cmp	r0, r1
   464c8:	bge	464e8 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   464cc:	ldr	r1, [r6, #4]
   464d0:	add	r0, r1, r0
   464d4:	ldrh	r0, [r0]
   464d8:	cmp	r0, #0
   464dc:	ldrne	r1, [r6]
   464e0:	addsne	r0, r1, r0
   464e4:	bne	464f0 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   464e8:	sub	sp, fp, #24
   464ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   464f0:	ldr	r7, [r0]
   464f4:	mov	r1, #0
   464f8:	ldr	r0, [r7, r0]!
   464fc:	str	r1, [sp, #4]
   46500:	cmp	r7, #0
   46504:	cmpne	r0, #7
   46508:	bls	46688 <flatcc_json_printer_struct_as_nested_root@@Base+0x1e4>
   4650c:	ldr	r1, [fp, #12]
   46510:	mov	r5, r3
   46514:	cmp	r1, #0
   46518:	beq	4653c <flatcc_json_printer_struct_as_nested_root@@Base+0x98>
   4651c:	add	r0, sp, #4
   46520:	mov	r2, #4
   46524:	bl	14ef4 <strncpy@plt>
   46528:	ldr	r0, [sp, #4]
   4652c:	cmp	r0, #0
   46530:	ldrne	r1, [r7, #4]
   46534:	cmpne	r1, r0
   46538:	bne	466b8 <flatcc_json_printer_struct_as_nested_root@@Base+0x214>
   4653c:	ldr	r0, [r6, #16]
   46540:	ldr	r2, [fp, #8]
   46544:	ldr	r8, [fp, #16]
   46548:	add	r1, r0, #1
   4654c:	cmp	r0, #0
   46550:	str	r1, [r6, #16]
   46554:	ldrne	r0, [r4, #20]
   46558:	addne	r1, r0, #1
   4655c:	strne	r1, [r4, #20]
   46560:	movne	r1, #44	; 0x2c
   46564:	strbne	r1, [r0]
   46568:	mov	r0, r4
   4656c:	mov	r1, r5
   46570:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   46574:	ldr	r1, [r4, #32]
   46578:	ldr	r0, [r4, #20]
   4657c:	add	r1, r1, #1
   46580:	str	r1, [r4, #32]
   46584:	add	r1, r0, #1
   46588:	str	r1, [r4, #20]
   4658c:	mov	r1, #123	; 0x7b
   46590:	strb	r1, [r0]
   46594:	ldr	r0, [r7]
   46598:	add	r1, r7, r0
   4659c:	mov	r0, r4
   465a0:	blx	r8
   465a4:	ldrb	r1, [r4, #25]
   465a8:	ldr	r0, [r4, #20]
   465ac:	cmp	r1, #0
   465b0:	beq	46670 <flatcc_json_printer_struct_as_nested_root@@Base+0x1cc>
   465b4:	add	r1, r0, #1
   465b8:	str	r1, [r4, #20]
   465bc:	mov	r1, #10
   465c0:	strb	r1, [r0]
   465c4:	ldr	r0, [r4, #32]
   465c8:	sub	r2, r0, #1
   465cc:	str	r2, [r4, #32]
   465d0:	ldrb	r3, [r4, #25]
   465d4:	ldr	r0, [r4, #20]
   465d8:	ldr	r1, [r4, #16]
   465dc:	mla	r7, r2, r3, r0
   465e0:	mul	r5, r2, r3
   465e4:	cmp	r7, r1
   465e8:	bls	46658 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   465ec:	cmp	r0, r1
   465f0:	bcc	4660c <flatcc_json_printer_struct_as_nested_root@@Base+0x168>
   465f4:	ldr	r2, [r4, #44]	; 0x2c
   465f8:	mov	r0, r4
   465fc:	mov	r1, #0
   46600:	blx	r2
   46604:	ldr	r1, [r4, #16]
   46608:	ldr	r0, [r4, #20]
   4660c:	sub	r6, r1, r0
   46610:	cmp	r6, r5
   46614:	bcs	46658 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   46618:	mov	r1, #32
   4661c:	mov	r2, r6
   46620:	bl	14ee8 <memset@plt>
   46624:	ldr	r0, [r4, #20]
   46628:	ldr	r2, [r4, #44]	; 0x2c
   4662c:	mov	r1, #0
   46630:	add	r0, r0, r6
   46634:	str	r0, [r4, #20]
   46638:	mov	r0, r4
   4663c:	blx	r2
   46640:	ldr	r1, [r4, #16]
   46644:	ldr	r0, [r4, #20]
   46648:	sub	r5, r5, r6
   4664c:	sub	r6, r1, r0
   46650:	cmp	r5, r6
   46654:	bhi	46618 <flatcc_json_printer_struct_as_nested_root@@Base+0x174>
   46658:	mov	r1, #32
   4665c:	mov	r2, r5
   46660:	bl	14ee8 <memset@plt>
   46664:	ldr	r0, [r4, #20]
   46668:	add	r0, r0, r5
   4666c:	str	r0, [r4, #20]
   46670:	add	r1, r0, #1
   46674:	str	r1, [r4, #20]
   46678:	mov	r1, #125	; 0x7d
   4667c:	strb	r1, [r0]
   46680:	sub	sp, fp, #24
   46684:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   46688:	ldr	r0, [r4, #36]	; 0x24
   4668c:	movw	r2, #1019	; 0x3fb
   46690:	cmp	r0, #0
   46694:	moveq	r0, #1
   46698:	streq	r0, [r4, #36]	; 0x24
   4669c:	ldr	r0, [pc, #68]	; 466e8 <flatcc_json_printer_struct_as_nested_root@@Base+0x244>
   466a0:	ldr	r1, [pc, #68]	; 466ec <flatcc_json_printer_struct_as_nested_root@@Base+0x248>
   466a4:	ldr	r3, [pc, #68]	; 466f0 <flatcc_json_printer_struct_as_nested_root@@Base+0x24c>
   466a8:	add	r0, pc, r0
   466ac:	add	r1, pc, r1
   466b0:	add	r3, pc, r3
   466b4:	bl	14f3c <__assert_fail@plt>
   466b8:	ldr	r0, [r4, #36]	; 0x24
   466bc:	movw	r2, #1028	; 0x404
   466c0:	cmp	r0, #0
   466c4:	moveq	r0, #1
   466c8:	streq	r0, [r4, #36]	; 0x24
   466cc:	ldr	r0, [pc, #32]	; 466f4 <flatcc_json_printer_struct_as_nested_root@@Base+0x250>
   466d0:	ldr	r1, [pc, #32]	; 466f8 <flatcc_json_printer_struct_as_nested_root@@Base+0x254>
   466d4:	ldr	r3, [pc, #32]	; 466fc <flatcc_json_printer_struct_as_nested_root@@Base+0x258>
   466d8:	add	r0, pc, r0
   466dc:	add	r1, pc, r1
   466e0:	add	r3, pc, r3
   466e4:	bl	14f3c <__assert_fail@plt>
   466e8:	andeq	r7, r0, sl, lsr r8
   466ec:	muleq	r0, r0, r3
   466f0:	andeq	r7, r0, r1, asr r8
   466f4:	andeq	r7, r0, r8, ror r8
   466f8:	andeq	r7, r0, r0, ror #6
   466fc:	andeq	r7, r0, r1, lsr #16

00046700 <flatcc_json_printer_table_as_nested_root@@Base>:
   46700:	push	{r4, r5, r6, r7, fp, lr}
   46704:	add	fp, sp, #16
   46708:	sub	sp, sp, #24
   4670c:	mov	r5, r1
   46710:	ldr	r1, [r1, #8]
   46714:	mov	r4, r0
   46718:	mov	r0, #4
   4671c:	add	r0, r0, r2, lsl #1
   46720:	cmp	r0, r1
   46724:	bge	46744 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   46728:	ldr	r1, [r5, #4]
   4672c:	add	r0, r1, r0
   46730:	ldrh	r0, [r0]
   46734:	cmp	r0, #0
   46738:	ldrne	r1, [r5]
   4673c:	addsne	r0, r1, r0
   46740:	bne	4674c <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   46744:	sub	sp, fp, #16
   46748:	pop	{r4, r5, r6, r7, fp, pc}
   4674c:	ldr	r7, [r0]
   46750:	mov	r1, #0
   46754:	ldr	r0, [r7, r0]!
   46758:	str	r1, [sp, #4]
   4675c:	cmp	r0, #7
   46760:	bls	46934 <flatcc_json_printer_table_as_nested_root@@Base+0x234>
   46764:	ldr	r1, [fp, #12]
   46768:	mov	r6, r3
   4676c:	cmp	r1, #0
   46770:	beq	46794 <flatcc_json_printer_table_as_nested_root@@Base+0x94>
   46774:	add	r0, sp, #4
   46778:	mov	r2, #4
   4677c:	bl	14ef4 <strncpy@plt>
   46780:	ldr	r0, [sp, #4]
   46784:	cmp	r0, #0
   46788:	ldrne	r1, [r7, #8]
   4678c:	cmpne	r1, r0
   46790:	bne	46964 <flatcc_json_printer_table_as_nested_root@@Base+0x264>
   46794:	ldr	r0, [r5, #16]
   46798:	ldr	r2, [fp, #8]
   4679c:	add	r1, r0, #1
   467a0:	cmp	r0, #0
   467a4:	str	r1, [r5, #16]
   467a8:	ldrne	r0, [r4, #20]
   467ac:	addne	r1, r0, #1
   467b0:	strne	r1, [r4, #20]
   467b4:	movne	r1, #44	; 0x2c
   467b8:	strbne	r1, [r0]
   467bc:	mov	r0, r4
   467c0:	mov	r1, r6
   467c4:	bl	3c57c <flatcc_json_printer_string_field@@Base+0x8c>
   467c8:	ldr	r0, [r5, #12]
   467cc:	subs	r0, r0, #1
   467d0:	beq	46918 <flatcc_json_printer_table_as_nested_root@@Base+0x218>
   467d4:	add	r1, r7, #4
   467d8:	ldr	r7, [r4, #32]
   467dc:	ldr	r2, [fp, #16]
   467e0:	ldr	r3, [r1]
   467e4:	add	r7, r7, #1
   467e8:	add	r1, r1, r3
   467ec:	ldr	r3, [r4, #20]
   467f0:	str	r7, [r4, #32]
   467f4:	add	r7, r3, #1
   467f8:	str	r7, [r4, #20]
   467fc:	mov	r7, #123	; 0x7b
   46800:	strb	r7, [r3]
   46804:	str	r0, [sp, #16]
   46808:	mov	r0, #0
   4680c:	str	r0, [sp, #20]
   46810:	str	r1, [sp, #4]
   46814:	ldr	r0, [r1]
   46818:	sub	r3, r1, r0
   4681c:	str	r3, [sp, #8]
   46820:	ldrh	r0, [r1, -r0]
   46824:	add	r1, sp, #4
   46828:	str	r0, [sp, #12]
   4682c:	mov	r0, r4
   46830:	blx	r2
   46834:	ldrb	r1, [r4, #25]
   46838:	ldr	r0, [r4, #20]
   4683c:	cmp	r1, #0
   46840:	beq	46900 <flatcc_json_printer_table_as_nested_root@@Base+0x200>
   46844:	add	r1, r0, #1
   46848:	str	r1, [r4, #20]
   4684c:	mov	r1, #10
   46850:	strb	r1, [r0]
   46854:	ldr	r0, [r4, #32]
   46858:	sub	r2, r0, #1
   4685c:	str	r2, [r4, #32]
   46860:	ldrb	r3, [r4, #25]
   46864:	ldr	r0, [r4, #20]
   46868:	ldr	r1, [r4, #16]
   4686c:	mla	r7, r2, r3, r0
   46870:	mul	r5, r2, r3
   46874:	cmp	r7, r1
   46878:	bls	468e8 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   4687c:	cmp	r0, r1
   46880:	bcc	4689c <flatcc_json_printer_table_as_nested_root@@Base+0x19c>
   46884:	ldr	r2, [r4, #44]	; 0x2c
   46888:	mov	r0, r4
   4688c:	mov	r1, #0
   46890:	blx	r2
   46894:	ldr	r1, [r4, #16]
   46898:	ldr	r0, [r4, #20]
   4689c:	sub	r6, r1, r0
   468a0:	cmp	r6, r5
   468a4:	bcs	468e8 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   468a8:	mov	r1, #32
   468ac:	mov	r2, r6
   468b0:	bl	14ee8 <memset@plt>
   468b4:	ldr	r0, [r4, #20]
   468b8:	ldr	r2, [r4, #44]	; 0x2c
   468bc:	mov	r1, #0
   468c0:	add	r0, r0, r6
   468c4:	str	r0, [r4, #20]
   468c8:	mov	r0, r4
   468cc:	blx	r2
   468d0:	ldr	r1, [r4, #16]
   468d4:	ldr	r0, [r4, #20]
   468d8:	sub	r5, r5, r6
   468dc:	sub	r6, r1, r0
   468e0:	cmp	r5, r6
   468e4:	bhi	468a8 <flatcc_json_printer_table_as_nested_root@@Base+0x1a8>
   468e8:	mov	r1, #32
   468ec:	mov	r2, r5
   468f0:	bl	14ee8 <memset@plt>
   468f4:	ldr	r0, [r4, #20]
   468f8:	add	r0, r0, r5
   468fc:	str	r0, [r4, #20]
   46900:	add	r1, r0, #1
   46904:	str	r1, [r4, #20]
   46908:	mov	r1, #125	; 0x7d
   4690c:	strb	r1, [r0]
   46910:	sub	sp, fp, #16
   46914:	pop	{r4, r5, r6, r7, fp, pc}
   46918:	ldr	r0, [r4, #36]	; 0x24
   4691c:	cmp	r0, #0
   46920:	bne	46744 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   46924:	mov	r0, #2
   46928:	str	r0, [r4, #36]	; 0x24
   4692c:	sub	sp, fp, #16
   46930:	pop	{r4, r5, r6, r7, fp, pc}
   46934:	ldr	r0, [r4, #36]	; 0x24
   46938:	movw	r2, #1019	; 0x3fb
   4693c:	cmp	r0, #0
   46940:	moveq	r0, #1
   46944:	streq	r0, [r4, #36]	; 0x24
   46948:	ldr	r0, [pc, #68]	; 46994 <flatcc_json_printer_table_as_nested_root@@Base+0x294>
   4694c:	ldr	r1, [pc, #68]	; 46998 <flatcc_json_printer_table_as_nested_root@@Base+0x298>
   46950:	ldr	r3, [pc, #68]	; 4699c <flatcc_json_printer_table_as_nested_root@@Base+0x29c>
   46954:	add	r0, pc, r0
   46958:	add	r1, pc, r1
   4695c:	add	r3, pc, r3
   46960:	bl	14f3c <__assert_fail@plt>
   46964:	ldr	r0, [r4, #36]	; 0x24
   46968:	movw	r2, #1028	; 0x404
   4696c:	cmp	r0, #0
   46970:	moveq	r0, #1
   46974:	streq	r0, [r4, #36]	; 0x24
   46978:	ldr	r0, [pc, #32]	; 469a0 <flatcc_json_printer_table_as_nested_root@@Base+0x2a0>
   4697c:	ldr	r1, [pc, #32]	; 469a4 <flatcc_json_printer_table_as_nested_root@@Base+0x2a4>
   46980:	ldr	r3, [pc, #32]	; 469a8 <flatcc_json_printer_table_as_nested_root@@Base+0x2a8>
   46984:	add	r0, pc, r0
   46988:	add	r1, pc, r1
   4698c:	add	r3, pc, r3
   46990:	bl	14f3c <__assert_fail@plt>
   46994:	andeq	r7, r0, lr, lsl #11
   46998:	andeq	r7, r0, r4, ror #1
   4699c:	andeq	r7, r0, r5, lsr #11
   469a0:	andeq	r7, r0, ip, asr #11
   469a4:	strheq	r7, [r0], -r4
   469a8:	andeq	r7, r0, r5, ror r5

000469ac <flatcc_json_printer_init@@Base>:
   469ac:	push	{r4, r5, r6, sl, fp, lr}
   469b0:	add	fp, sp, #16
   469b4:	mov	r5, r0
   469b8:	mov	r4, #0
   469bc:	vmov.i32	q8, #0	; 0x00000000
   469c0:	cmp	r1, #0
   469c4:	movw	r6, #16448	; 0x4040
   469c8:	str	r4, [r0, #32]
   469cc:	mov	r0, #36	; 0x24
   469d0:	mov	r2, r5
   469d4:	vst1.32	{d16-d17}, [r2], r0
   469d8:	add	r0, r5, #16
   469dc:	str	r4, [r2]
   469e0:	vst1.32	{d16-d17}, [r0]
   469e4:	ldr	r0, [pc, #92]	; 46a48 <flatcc_json_printer_init@@Base+0x9c>
   469e8:	ldr	r0, [pc, r0]
   469ec:	ldr	r0, [r0]
   469f0:	ldr	r2, [pc, #84]	; 46a4c <flatcc_json_printer_init@@Base+0xa0>
   469f4:	movne	r0, r1
   469f8:	add	r2, pc, r2
   469fc:	str	r0, [r5, #40]	; 0x28
   46a00:	movw	r0, #16448	; 0x4040
   46a04:	str	r2, [r5, #44]	; 0x2c
   46a08:	bl	14ea0 <malloc@plt>
   46a0c:	cmp	r0, #0
   46a10:	str	r0, [r5]
   46a14:	mvneq	r4, #0
   46a18:	moveq	r0, r4
   46a1c:	popeq	{r4, r5, r6, sl, fp, pc}
   46a20:	mov	r1, #1
   46a24:	strb	r1, [r5, #24]
   46a28:	mov	r1, #16384	; 0x4000
   46a2c:	str	r6, [r5, #4]
   46a30:	str	r1, [r5, #8]
   46a34:	add	r1, r0, #16384	; 0x4000
   46a38:	str	r1, [r5, #16]
   46a3c:	str	r0, [r5, #20]
   46a40:	mov	r0, r4
   46a44:	pop	{r4, r5, r6, sl, fp, pc}
   46a48:	andeq	r8, r1, ip, lsl #13
   46a4c:	andeq	r0, r0, r0, asr r0
   46a50:	push	{r4, r5, r6, sl, fp, lr}
   46a54:	add	fp, sp, #16
   46a58:	mov	r4, r0
   46a5c:	cmp	r1, #0
   46a60:	beq	46a6c <flatcc_json_printer_init@@Base+0xc0>
   46a64:	ldr	r5, [r4, #20]
   46a68:	b	46a7c <flatcc_json_printer_init@@Base+0xd0>
   46a6c:	ldr	r6, [r4, #16]
   46a70:	ldr	r5, [r4, #20]
   46a74:	cmp	r5, r6
   46a78:	bcs	46aa8 <flatcc_json_printer_init@@Base+0xfc>
   46a7c:	ldr	r0, [r4]
   46a80:	ldr	r3, [r4, #40]	; 0x28
   46a84:	mov	r2, #1
   46a88:	sub	r5, r5, r0
   46a8c:	mov	r1, r5
   46a90:	bl	14e94 <fwrite@plt>
   46a94:	ldr	r1, [r4, #12]
   46a98:	ldr	r0, [r4]
   46a9c:	str	r0, [r4, #20]
   46aa0:	add	r1, r1, r5
   46aa4:	b	46aec <flatcc_json_printer_init@@Base+0x140>
   46aa8:	ldr	r0, [r4]
   46aac:	ldr	r1, [r4, #8]
   46ab0:	ldr	r3, [r4, #40]	; 0x28
   46ab4:	mov	r2, #1
   46ab8:	bl	14e94 <fwrite@plt>
   46abc:	ldr	r0, [r4]
   46ac0:	ldr	r1, [r4, #8]
   46ac4:	sub	r5, r5, r6
   46ac8:	mov	r2, r5
   46acc:	add	r1, r0, r1
   46ad0:	bl	14e58 <memcpy@plt>
   46ad4:	ldr	r0, [r4]
   46ad8:	ldr	r1, [r4, #8]
   46adc:	ldr	r2, [r4, #12]
   46ae0:	add	r0, r0, r5
   46ae4:	add	r1, r2, r1
   46ae8:	str	r0, [r4, #20]
   46aec:	str	r1, [r4, #12]
   46af0:	mov	r1, #0
   46af4:	strb	r1, [r0]
   46af8:	pop	{r4, r5, r6, sl, fp, pc}

00046afc <flatcc_json_printer_init_buffer@@Base>:
   46afc:	cmp	r2, #63	; 0x3f
   46b00:	bls	46b40 <flatcc_json_printer_init_buffer@@Base+0x44>
   46b04:	vmov.i32	q8, #0	; 0x00000000
   46b08:	add	r3, r0, #12
   46b0c:	vst1.32	{d16-d17}, [r3]
   46b10:	ldr	r3, [pc, #80]	; 46b68 <flatcc_json_printer_init_buffer@@Base+0x6c>
   46b14:	add	r3, pc, r3
   46b18:	str	r3, [r0, #44]	; 0x2c
   46b1c:	add	r3, r0, #28
   46b20:	vst1.32	{d16-d17}, [r3]
   46b24:	sub	r3, r2, #64	; 0x40
   46b28:	stm	r0, {r1, r2, r3}
   46b2c:	add	r2, r1, r3
   46b30:	str	r2, [r0, #16]
   46b34:	str	r1, [r0, #20]
   46b38:	mov	r0, #0
   46b3c:	bx	lr
   46b40:	push	{fp, lr}
   46b44:	mov	fp, sp
   46b48:	ldr	r0, [pc, #28]	; 46b6c <flatcc_json_printer_init_buffer@@Base+0x70>
   46b4c:	ldr	r1, [pc, #28]	; 46b70 <flatcc_json_printer_init_buffer@@Base+0x74>
   46b50:	ldr	r3, [pc, #28]	; 46b74 <flatcc_json_printer_init_buffer@@Base+0x78>
   46b54:	movw	r2, #1165	; 0x48d
   46b58:	add	r0, pc, r0
   46b5c:	add	r1, pc, r1
   46b60:	add	r3, pc, r3
   46b64:	bl	14f3c <__assert_fail@plt>
   46b68:	andeq	r0, r0, ip, asr r0
   46b6c:	andeq	r7, r0, r6, lsl r0
   46b70:	andeq	r6, r0, r0, ror #29
   46b74:	andeq	r7, r0, r7, lsr r0
   46b78:	ldr	r2, [r0, #16]
   46b7c:	ldr	r1, [r0, #20]
   46b80:	cmp	r1, r2
   46b84:	bcs	46b90 <flatcc_json_printer_init_buffer@@Base+0x94>
   46b88:	mov	r2, r1
   46b8c:	b	46bb8 <flatcc_json_printer_init_buffer@@Base+0xbc>
   46b90:	ldr	r2, [r0, #36]	; 0x24
   46b94:	cmp	r2, #0
   46b98:	moveq	r2, #3
   46b9c:	streq	r2, [r0, #36]	; 0x24
   46ba0:	ldr	r2, [r0]
   46ba4:	ldr	r3, [r0, #12]
   46ba8:	sub	r1, r1, r2
   46bac:	str	r2, [r0, #20]
   46bb0:	add	r1, r1, r3
   46bb4:	str	r1, [r0, #12]
   46bb8:	mov	r0, #0
   46bbc:	strb	r0, [r2]
   46bc0:	bx	lr

00046bc4 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   46bc4:	push	{r4, r5, fp, lr}
   46bc8:	add	fp, sp, #8
   46bcc:	mov	r5, r1
   46bd0:	cmp	r1, #0
   46bd4:	mov	r4, r0
   46bd8:	vmov.i32	q8, #0	; 0x00000000
   46bdc:	add	r0, r0, #28
   46be0:	movweq	r5, #4096	; 0x1000
   46be4:	vst1.32	{d16-d17}, [r0]
   46be8:	add	r0, r4, #12
   46bec:	cmp	r5, #64	; 0x40
   46bf0:	vst1.32	{d16-d17}, [r0]
   46bf4:	movls	r5, #64	; 0x40
   46bf8:	mov	r0, r5
   46bfc:	bl	14ea0 <malloc@plt>
   46c00:	mov	r1, r0
   46c04:	mov	r0, #1
   46c08:	strb	r0, [r4, #24]
   46c0c:	sub	r0, r5, #64	; 0x40
   46c10:	stm	r4, {r1, r5}
   46c14:	cmp	r1, #0
   46c18:	str	r0, [r4, #8]
   46c1c:	add	r0, r1, r0
   46c20:	ldr	r2, [pc, #32]	; 46c48 <flatcc_json_printer_init_dynamic_buffer@@Base+0x84>
   46c24:	add	r2, pc, r2
   46c28:	str	r2, [r4, #44]	; 0x2c
   46c2c:	str	r0, [r4, #16]
   46c30:	mov	r0, #0
   46c34:	str	r1, [r4, #20]
   46c38:	moveq	r0, #3
   46c3c:	streq	r0, [r4, #36]	; 0x24
   46c40:	mvneq	r0, #0
   46c44:	pop	{r4, r5, fp, pc}
   46c48:	andeq	r0, r0, r0, lsr #32
   46c4c:	push	{r4, r5, fp, lr}
   46c50:	add	fp, sp, #8
   46c54:	mov	r4, r0
   46c58:	ldr	r0, [r0]
   46c5c:	mov	r1, #0
   46c60:	ldr	r5, [r4, #20]
   46c64:	strb	r1, [r5], -r0
   46c68:	ldr	r0, [r4, #16]
   46c6c:	ldr	r1, [r4, #20]
   46c70:	cmp	r1, r0
   46c74:	popcc	{r4, r5, fp, pc}
   46c78:	ldm	r4, {r0, r1}
   46c7c:	lsl	r1, r1, #1
   46c80:	bl	14e88 <realloc@plt>
   46c84:	cmp	r0, #0
   46c88:	beq	46cbc <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   46c8c:	str	r0, [r4]
   46c90:	mvn	r3, #63	; 0x3f
   46c94:	add	r1, r0, r5
   46c98:	ldr	r2, [r4, #4]
   46c9c:	add	r3, r3, r2, lsl #1
   46ca0:	lsl	r2, r2, #1
   46ca4:	add	r0, r0, r3
   46ca8:	str	r3, [r4, #8]
   46cac:	str	r2, [r4, #4]
   46cb0:	str	r0, [r4, #16]
   46cb4:	str	r1, [r4, #20]
   46cb8:	b	46ce0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x11c>
   46cbc:	ldr	r0, [r4, #36]	; 0x24
   46cc0:	cmp	r0, #0
   46cc4:	moveq	r0, #3
   46cc8:	streq	r0, [r4, #36]	; 0x24
   46ccc:	ldr	r0, [r4, #12]
   46cd0:	ldr	r1, [r4]
   46cd4:	add	r0, r0, r5
   46cd8:	str	r1, [r4, #20]
   46cdc:	str	r0, [r4, #12]
   46ce0:	mov	r0, #0
   46ce4:	strb	r0, [r1]
   46ce8:	pop	{r4, r5, fp, pc}

00046cec <flatcc_json_printer_get_buffer@@Base>:
   46cec:	push	{r4, r5, fp, lr}
   46cf0:	add	fp, sp, #8
   46cf4:	ldr	r2, [r0, #44]	; 0x2c
   46cf8:	mov	r4, r1
   46cfc:	mov	r1, #0
   46d00:	mov	r5, r0
   46d04:	blx	r2
   46d08:	cmp	r4, #0
   46d0c:	ldrne	r0, [r5]
   46d10:	ldrne	r1, [r5, #20]
   46d14:	subne	r1, r1, r0
   46d18:	strne	r1, [r4]
   46d1c:	popne	{r4, r5, fp, pc}
   46d20:	ldr	r0, [r5]
   46d24:	pop	{r4, r5, fp, pc}

00046d28 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   46d28:	push	{r4, r5, fp, lr}
   46d2c:	add	fp, sp, #8
   46d30:	ldr	r2, [r0, #44]	; 0x2c
   46d34:	mov	r5, r1
   46d38:	mov	r1, #0
   46d3c:	mov	r4, r0
   46d40:	blx	r2
   46d44:	cmp	r5, #0
   46d48:	ldr	r0, [r4]
   46d4c:	vmov.i32	q8, #0	; 0x00000000
   46d50:	add	r2, r4, #16
   46d54:	ldrne	r1, [r4, #20]
   46d58:	subne	r1, r1, r0
   46d5c:	strne	r1, [r5]
   46d60:	mov	r1, #32
   46d64:	vst1.32	{d16-d17}, [r2]
   46d68:	vst1.32	{d16-d17}, [r4], r1
   46d6c:	vst1.32	{d16-d17}, [r4]
   46d70:	pop	{r4, r5, fp, pc}

00046d74 <flatcc_json_printer_clear@@Base>:
   46d74:	push	{r4, sl, fp, lr}
   46d78:	add	fp, sp, #8
   46d7c:	mov	r4, r0
   46d80:	ldrb	r0, [r0, #24]
   46d84:	cmp	r0, #0
   46d88:	ldrne	r0, [r4]
   46d8c:	cmpne	r0, #0
   46d90:	beq	46d98 <flatcc_json_printer_clear@@Base+0x24>
   46d94:	bl	14e4c <free@plt>
   46d98:	vmov.i32	q8, #0	; 0x00000000
   46d9c:	mov	r0, #32
   46da0:	add	r1, r4, #16
   46da4:	vst1.32	{d16-d17}, [r4], r0
   46da8:	vst1.32	{d16-d17}, [r1]
   46dac:	vst1.32	{d16-d17}, [r4]
   46db0:	pop	{r4, sl, fp, pc}
   46db4:	cmp	r2, #0
   46db8:	bxeq	lr
   46dbc:	push	{r4, r5, fp, lr}
   46dc0:	add	fp, sp, #8
   46dc4:	ldr	lr, [r2]
   46dc8:	bic	ip, r3, #224	; 0xe0
   46dcc:	cmp	ip, #0
   46dd0:	beq	46df0 <flatcc_json_printer_clear@@Base+0x7c>
   46dd4:	cmp	ip, #1
   46dd8:	bne	46eb8 <flatcc_json_printer_clear@@Base+0x144>
   46ddc:	ldr	ip, [pc, #288]	; 46f04 <flatcc_json_printer_clear@@Base+0x190>
   46de0:	add	ip, pc, ip
   46de4:	cmp	lr, #3
   46de8:	bcs	46e00 <flatcc_json_printer_clear@@Base+0x8c>
   46dec:	b	46e60 <flatcc_json_printer_clear@@Base+0xec>
   46df0:	ldr	ip, [pc, #264]	; 46f00 <flatcc_json_printer_clear@@Base+0x18c>
   46df4:	add	ip, pc, ip
   46df8:	cmp	lr, #3
   46dfc:	bcc	46e60 <flatcc_json_printer_clear@@Base+0xec>
   46e00:	ldrb	r4, [r1]
   46e04:	sub	lr, lr, #3
   46e08:	cmp	lr, #2
   46e0c:	ldrb	r4, [ip, r4, lsr #2]
   46e10:	strb	r4, [r0]
   46e14:	ldrb	r5, [r1, #1]
   46e18:	ldrb	r4, [r1]
   46e1c:	lsr	r5, r5, #4
   46e20:	bfi	r5, r4, #4, #2
   46e24:	ldrb	r4, [ip, r5]
   46e28:	strb	r4, [r0, #1]
   46e2c:	ldrb	r5, [r1, #2]
   46e30:	ldrb	r4, [r1, #1]
   46e34:	lsr	r5, r5, #6
   46e38:	bfi	r5, r4, #2, #4
   46e3c:	ldrb	r4, [ip, r5]
   46e40:	strb	r4, [r0, #2]
   46e44:	ldrb	r4, [r1, #2]
   46e48:	add	r1, r1, #3
   46e4c:	and	r4, r4, #63	; 0x3f
   46e50:	ldrb	r4, [ip, r4]
   46e54:	strb	r4, [r0, #3]
   46e58:	add	r0, r0, #4
   46e5c:	bhi	46e00 <flatcc_json_printer_clear@@Base+0x8c>
   46e60:	and	r3, r3, #128	; 0x80
   46e64:	cmp	lr, #1
   46e68:	beq	46ec0 <flatcc_json_printer_clear@@Base+0x14c>
   46e6c:	cmp	lr, #2
   46e70:	bne	46ee8 <flatcc_json_printer_clear@@Base+0x174>
   46e74:	ldrb	r5, [r1]
   46e78:	cmp	r3, #0
   46e7c:	ldrb	r5, [ip, r5, lsr #2]
   46e80:	strb	r5, [r0]
   46e84:	ldrb	r4, [r1, #1]
   46e88:	ldrb	r5, [r1]
   46e8c:	lsr	r4, r4, #4
   46e90:	bfi	r4, r5, #4, #2
   46e94:	ldrb	r5, [ip, r4]
   46e98:	strb	r5, [r0, #1]
   46e9c:	ldrb	r1, [r1, #1]
   46ea0:	and	r1, r1, #15
   46ea4:	ldrb	r1, [ip, r1, lsl #2]
   46ea8:	strb	r1, [r0, #2]
   46eac:	movne	r1, #61	; 0x3d
   46eb0:	strbne	r1, [r0, #3]
   46eb4:	b	46ee8 <flatcc_json_printer_clear@@Base+0x174>
   46eb8:	mov	r0, lr
   46ebc:	b	46ef0 <flatcc_json_printer_clear@@Base+0x17c>
   46ec0:	ldrb	r5, [r1]
   46ec4:	cmp	r3, #0
   46ec8:	ldrb	r5, [ip, r5, lsr #2]
   46ecc:	strb	r5, [r0]
   46ed0:	ldrb	r1, [r1]
   46ed4:	and	r1, r1, #3
   46ed8:	ldrb	r1, [ip, r1, lsl #4]
   46edc:	strb	r1, [r0, #1]
   46ee0:	movwne	r1, #15677	; 0x3d3d
   46ee4:	strhne	r1, [r0, #2]
   46ee8:	ldr	lr, [r2]
   46eec:	mov	r0, #0
   46ef0:	sub	r0, lr, r0
   46ef4:	str	r0, [r2]
   46ef8:	pop	{r4, r5, fp, lr}
   46efc:	bx	lr
   46f00:	andeq	r7, r0, ip, rrx
   46f04:	andeq	r7, r0, r1, asr #1
   46f08:	eor	r1, r1, #-2147483648	; 0x80000000
   46f0c:	b	46f14 <flatcc_json_printer_clear@@Base+0x1a0>
   46f10:	eor	r3, r3, #-2147483648	; 0x80000000
   46f14:	push	{r4, r5, lr}
   46f18:	lsl	r4, r1, #1
   46f1c:	lsl	r5, r3, #1
   46f20:	teq	r4, r5
   46f24:	teqeq	r0, r2
   46f28:	orrsne	ip, r4, r0
   46f2c:	orrsne	ip, r5, r2
   46f30:	mvnsne	ip, r4, asr #21
   46f34:	mvnsne	ip, r5, asr #21
   46f38:	beq	47124 <flatcc_json_printer_clear@@Base+0x3b0>
   46f3c:	lsr	r4, r4, #21
   46f40:	rsbs	r5, r4, r5, lsr #21
   46f44:	rsblt	r5, r5, #0
   46f48:	ble	46f68 <flatcc_json_printer_clear@@Base+0x1f4>
   46f4c:	add	r4, r4, r5
   46f50:	eor	r2, r0, r2
   46f54:	eor	r3, r1, r3
   46f58:	eor	r0, r2, r0
   46f5c:	eor	r1, r3, r1
   46f60:	eor	r2, r0, r2
   46f64:	eor	r3, r1, r3
   46f68:	cmp	r5, #54	; 0x36
   46f6c:	pophi	{r4, r5, pc}
   46f70:	tst	r1, #-2147483648	; 0x80000000
   46f74:	lsl	r1, r1, #12
   46f78:	mov	ip, #1048576	; 0x100000
   46f7c:	orr	r1, ip, r1, lsr #12
   46f80:	beq	46f8c <flatcc_json_printer_clear@@Base+0x218>
   46f84:	rsbs	r0, r0, #0
   46f88:	rsc	r1, r1, #0
   46f8c:	tst	r3, #-2147483648	; 0x80000000
   46f90:	lsl	r3, r3, #12
   46f94:	orr	r3, ip, r3, lsr #12
   46f98:	beq	46fa4 <flatcc_json_printer_clear@@Base+0x230>
   46f9c:	rsbs	r2, r2, #0
   46fa0:	rsc	r3, r3, #0
   46fa4:	teq	r4, r5
   46fa8:	beq	4710c <flatcc_json_printer_clear@@Base+0x398>
   46fac:	sub	r4, r4, #1
   46fb0:	rsbs	lr, r5, #32
   46fb4:	blt	46fd0 <flatcc_json_printer_clear@@Base+0x25c>
   46fb8:	lsl	ip, r2, lr
   46fbc:	adds	r0, r0, r2, lsr r5
   46fc0:	adc	r1, r1, #0
   46fc4:	adds	r0, r0, r3, lsl lr
   46fc8:	adcs	r1, r1, r3, asr r5
   46fcc:	b	46fec <flatcc_json_printer_clear@@Base+0x278>
   46fd0:	sub	r5, r5, #32
   46fd4:	add	lr, lr, #32
   46fd8:	cmp	r2, #1
   46fdc:	lsl	ip, r3, lr
   46fe0:	orrcs	ip, ip, #2
   46fe4:	adds	r0, r0, r3, asr r5
   46fe8:	adcs	r1, r1, r3, asr #31
   46fec:	and	r5, r1, #-2147483648	; 0x80000000
   46ff0:	bpl	47000 <flatcc_json_printer_clear@@Base+0x28c>
   46ff4:	rsbs	ip, ip, #0
   46ff8:	rscs	r0, r0, #0
   46ffc:	rsc	r1, r1, #0
   47000:	cmp	r1, #1048576	; 0x100000
   47004:	bcc	47044 <flatcc_json_printer_clear@@Base+0x2d0>
   47008:	cmp	r1, #2097152	; 0x200000
   4700c:	bcc	4702c <flatcc_json_printer_clear@@Base+0x2b8>
   47010:	lsrs	r1, r1, #1
   47014:	rrxs	r0, r0
   47018:	rrx	ip, ip
   4701c:	add	r4, r4, #1
   47020:	lsl	r2, r4, #21
   47024:	cmn	r2, #4194304	; 0x400000
   47028:	bcs	47184 <flatcc_json_printer_clear@@Base+0x410>
   4702c:	cmp	ip, #-2147483648	; 0x80000000
   47030:	lsrseq	ip, r0, #1
   47034:	adcs	r0, r0, #0
   47038:	adc	r1, r1, r4, lsl #20
   4703c:	orr	r1, r1, r5
   47040:	pop	{r4, r5, pc}
   47044:	lsls	ip, ip, #1
   47048:	adcs	r0, r0, r0
   4704c:	adc	r1, r1, r1
   47050:	tst	r1, #1048576	; 0x100000
   47054:	sub	r4, r4, #1
   47058:	bne	4702c <flatcc_json_printer_clear@@Base+0x2b8>
   4705c:	teq	r1, #0
   47060:	moveq	r1, r0
   47064:	moveq	r0, #0
   47068:	clz	r3, r1
   4706c:	addeq	r3, r3, #32
   47070:	sub	r3, r3, #11
   47074:	subs	r2, r3, #32
   47078:	bge	4709c <flatcc_json_printer_clear@@Base+0x328>
   4707c:	adds	r2, r2, #12
   47080:	ble	47098 <flatcc_json_printer_clear@@Base+0x324>
   47084:	add	ip, r2, #20
   47088:	rsb	r2, r2, #12
   4708c:	lsl	r0, r1, ip
   47090:	lsr	r1, r1, r2
   47094:	b	470ac <flatcc_json_printer_clear@@Base+0x338>
   47098:	add	r2, r2, #20
   4709c:	rsble	ip, r2, #32
   470a0:	lsl	r1, r1, r2
   470a4:	orrle	r1, r1, r0, lsr ip
   470a8:	lslle	r0, r0, r2
   470ac:	subs	r4, r4, r3
   470b0:	addge	r1, r1, r4, lsl #20
   470b4:	orrge	r1, r1, r5
   470b8:	popge	{r4, r5, pc}
   470bc:	mvn	r4, r4
   470c0:	subs	r4, r4, #31
   470c4:	bge	47100 <flatcc_json_printer_clear@@Base+0x38c>
   470c8:	adds	r4, r4, #12
   470cc:	bgt	470e8 <flatcc_json_printer_clear@@Base+0x374>
   470d0:	add	r4, r4, #20
   470d4:	rsb	r2, r4, #32
   470d8:	lsr	r0, r0, r4
   470dc:	orr	r0, r0, r1, lsl r2
   470e0:	orr	r1, r5, r1, lsr r4
   470e4:	pop	{r4, r5, pc}
   470e8:	rsb	r4, r4, #12
   470ec:	rsb	r2, r4, #32
   470f0:	lsr	r0, r0, r2
   470f4:	orr	r0, r0, r1, lsl r4
   470f8:	mov	r1, r5
   470fc:	pop	{r4, r5, pc}
   47100:	lsr	r0, r1, r4
   47104:	mov	r1, r5
   47108:	pop	{r4, r5, pc}
   4710c:	teq	r4, #0
   47110:	eor	r3, r3, #1048576	; 0x100000
   47114:	eoreq	r1, r1, #1048576	; 0x100000
   47118:	addeq	r4, r4, #1
   4711c:	subne	r5, r5, #1
   47120:	b	46fac <flatcc_json_printer_clear@@Base+0x238>
   47124:	mvns	ip, r4, asr #21
   47128:	mvnsne	ip, r5, asr #21
   4712c:	beq	47194 <flatcc_json_printer_clear@@Base+0x420>
   47130:	teq	r4, r5
   47134:	teqeq	r0, r2
   47138:	beq	4714c <flatcc_json_printer_clear@@Base+0x3d8>
   4713c:	orrs	ip, r4, r0
   47140:	moveq	r1, r3
   47144:	moveq	r0, r2
   47148:	pop	{r4, r5, pc}
   4714c:	teq	r1, r3
   47150:	movne	r1, #0
   47154:	movne	r0, #0
   47158:	popne	{r4, r5, pc}
   4715c:	lsrs	ip, r4, #21
   47160:	bne	47174 <flatcc_json_printer_clear@@Base+0x400>
   47164:	lsls	r0, r0, #1
   47168:	adcs	r1, r1, r1
   4716c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   47170:	pop	{r4, r5, pc}
   47174:	adds	r4, r4, #4194304	; 0x400000
   47178:	addcc	r1, r1, #1048576	; 0x100000
   4717c:	popcc	{r4, r5, pc}
   47180:	and	r5, r1, #-2147483648	; 0x80000000
   47184:	orr	r1, r5, #2130706432	; 0x7f000000
   47188:	orr	r1, r1, #15728640	; 0xf00000
   4718c:	mov	r0, #0
   47190:	pop	{r4, r5, pc}
   47194:	mvns	ip, r4, asr #21
   47198:	movne	r1, r3
   4719c:	movne	r0, r2
   471a0:	mvnseq	ip, r5, asr #21
   471a4:	movne	r3, r1
   471a8:	movne	r2, r0
   471ac:	orrs	r4, r0, r1, lsl #12
   471b0:	orrseq	r5, r2, r3, lsl #12
   471b4:	teqeq	r1, r3
   471b8:	orrne	r1, r1, #524288	; 0x80000
   471bc:	pop	{r4, r5, pc}
   471c0:	teq	r0, #0
   471c4:	moveq	r1, #0
   471c8:	bxeq	lr
   471cc:	push	{r4, r5, lr}
   471d0:	mov	r4, #1024	; 0x400
   471d4:	add	r4, r4, #50	; 0x32
   471d8:	mov	r5, #0
   471dc:	mov	r1, #0
   471e0:	b	4705c <flatcc_json_printer_clear@@Base+0x2e8>
   471e4:	teq	r0, #0
   471e8:	moveq	r1, #0
   471ec:	bxeq	lr
   471f0:	push	{r4, r5, lr}
   471f4:	mov	r4, #1024	; 0x400
   471f8:	add	r4, r4, #50	; 0x32
   471fc:	ands	r5, r0, #-2147483648	; 0x80000000
   47200:	rsbmi	r0, r0, #0
   47204:	mov	r1, #0
   47208:	b	4705c <flatcc_json_printer_clear@@Base+0x2e8>
   4720c:	lsls	r2, r0, #1
   47210:	asr	r1, r2, #3
   47214:	rrx	r1, r1
   47218:	lsl	r0, r2, #28
   4721c:	andsne	r3, r2, #-16777216	; 0xff000000
   47220:	teqne	r3, #-16777216	; 0xff000000
   47224:	eorne	r1, r1, #939524096	; 0x38000000
   47228:	bxne	lr
   4722c:	bics	r2, r2, #-16777216	; 0xff000000
   47230:	bxeq	lr
   47234:	teq	r3, #-16777216	; 0xff000000
   47238:	orreq	r1, r1, #524288	; 0x80000
   4723c:	bxeq	lr
   47240:	push	{r4, r5, lr}
   47244:	mov	r4, #896	; 0x380
   47248:	and	r5, r1, #-2147483648	; 0x80000000
   4724c:	bic	r1, r1, #-2147483648	; 0x80000000
   47250:	b	4705c <flatcc_json_printer_clear@@Base+0x2e8>
   47254:	orrs	r2, r0, r1
   47258:	bxeq	lr
   4725c:	push	{r4, r5, lr}
   47260:	mov	r5, #0
   47264:	b	47284 <flatcc_json_printer_clear@@Base+0x510>
   47268:	orrs	r2, r0, r1
   4726c:	bxeq	lr
   47270:	push	{r4, r5, lr}
   47274:	ands	r5, r1, #-2147483648	; 0x80000000
   47278:	bpl	47284 <flatcc_json_printer_clear@@Base+0x510>
   4727c:	rsbs	r0, r0, #0
   47280:	rsc	r1, r1, #0
   47284:	mov	r4, #1024	; 0x400
   47288:	add	r4, r4, #50	; 0x32
   4728c:	lsrs	ip, r1, #22
   47290:	beq	47000 <flatcc_json_printer_clear@@Base+0x28c>
   47294:	mov	r2, #3
   47298:	lsrs	ip, ip, #3
   4729c:	addne	r2, r2, #3
   472a0:	lsrs	ip, ip, #3
   472a4:	addne	r2, r2, #3
   472a8:	add	r2, r2, ip, lsr #3
   472ac:	rsb	r3, r2, #32
   472b0:	lsl	ip, r0, r3
   472b4:	lsr	r0, r0, r2
   472b8:	orr	r0, r0, r1, lsl r3
   472bc:	lsr	r1, r1, r2
   472c0:	add	r4, r4, r2
   472c4:	b	47000 <flatcc_json_printer_clear@@Base+0x28c>
   472c8:	eor	r0, r0, #-2147483648	; 0x80000000
   472cc:	b	472d4 <flatcc_json_printer_clear@@Base+0x560>
   472d0:	eor	r1, r1, #-2147483648	; 0x80000000
   472d4:	lsls	r2, r0, #1
   472d8:	lslsne	r3, r1, #1
   472dc:	teqne	r2, r3
   472e0:	mvnsne	ip, r2, asr #24
   472e4:	mvnsne	ip, r3, asr #24
   472e8:	beq	473e0 <flatcc_json_printer_clear@@Base+0x66c>
   472ec:	lsr	r2, r2, #24
   472f0:	rsbs	r3, r2, r3, lsr #24
   472f4:	addgt	r2, r2, r3
   472f8:	eorgt	r1, r0, r1
   472fc:	eorgt	r0, r1, r0
   47300:	eorgt	r1, r0, r1
   47304:	rsblt	r3, r3, #0
   47308:	cmp	r3, #25
   4730c:	bxhi	lr
   47310:	tst	r0, #-2147483648	; 0x80000000
   47314:	orr	r0, r0, #8388608	; 0x800000
   47318:	bic	r0, r0, #-16777216	; 0xff000000
   4731c:	rsbne	r0, r0, #0
   47320:	tst	r1, #-2147483648	; 0x80000000
   47324:	orr	r1, r1, #8388608	; 0x800000
   47328:	bic	r1, r1, #-16777216	; 0xff000000
   4732c:	rsbne	r1, r1, #0
   47330:	teq	r2, r3
   47334:	beq	473c8 <flatcc_json_printer_clear@@Base+0x654>
   47338:	sub	r2, r2, #1
   4733c:	adds	r0, r0, r1, asr r3
   47340:	rsb	r3, r3, #32
   47344:	lsl	r1, r1, r3
   47348:	and	r3, r0, #-2147483648	; 0x80000000
   4734c:	bpl	47358 <flatcc_json_printer_clear@@Base+0x5e4>
   47350:	rsbs	r1, r1, #0
   47354:	rsc	r0, r0, #0
   47358:	cmp	r0, #8388608	; 0x800000
   4735c:	bcc	47390 <flatcc_json_printer_clear@@Base+0x61c>
   47360:	cmp	r0, #16777216	; 0x1000000
   47364:	bcc	4737c <flatcc_json_printer_clear@@Base+0x608>
   47368:	lsrs	r0, r0, #1
   4736c:	rrx	r1, r1
   47370:	add	r2, r2, #1
   47374:	cmp	r2, #254	; 0xfe
   47378:	bcs	47434 <flatcc_json_printer_clear@@Base+0x6c0>
   4737c:	cmp	r1, #-2147483648	; 0x80000000
   47380:	adc	r0, r0, r2, lsl #23
   47384:	biceq	r0, r0, #1
   47388:	orr	r0, r0, r3
   4738c:	bx	lr
   47390:	lsls	r1, r1, #1
   47394:	adc	r0, r0, r0
   47398:	tst	r0, #8388608	; 0x800000
   4739c:	sub	r2, r2, #1
   473a0:	bne	4737c <flatcc_json_printer_clear@@Base+0x608>
   473a4:	clz	ip, r0
   473a8:	sub	ip, ip, #8
   473ac:	subs	r2, r2, ip
   473b0:	lsl	r0, r0, ip
   473b4:	addge	r0, r0, r2, lsl #23
   473b8:	rsblt	r2, r2, #0
   473bc:	orrge	r0, r0, r3
   473c0:	orrlt	r0, r3, r0, lsr r2
   473c4:	bx	lr
   473c8:	teq	r2, #0
   473cc:	eor	r1, r1, #8388608	; 0x800000
   473d0:	eoreq	r0, r0, #8388608	; 0x800000
   473d4:	addeq	r2, r2, #1
   473d8:	subne	r3, r3, #1
   473dc:	b	47338 <flatcc_json_printer_clear@@Base+0x5c4>
   473e0:	lsl	r3, r1, #1
   473e4:	mvns	ip, r2, asr #24
   473e8:	mvnsne	ip, r3, asr #24
   473ec:	beq	47440 <flatcc_json_printer_clear@@Base+0x6cc>
   473f0:	teq	r2, r3
   473f4:	beq	47404 <flatcc_json_printer_clear@@Base+0x690>
   473f8:	teq	r2, #0
   473fc:	moveq	r0, r1
   47400:	bx	lr
   47404:	teq	r0, r1
   47408:	movne	r0, #0
   4740c:	bxne	lr
   47410:	tst	r2, #-16777216	; 0xff000000
   47414:	bne	47424 <flatcc_json_printer_clear@@Base+0x6b0>
   47418:	lsls	r0, r0, #1
   4741c:	orrcs	r0, r0, #-2147483648	; 0x80000000
   47420:	bx	lr
   47424:	adds	r2, r2, #33554432	; 0x2000000
   47428:	addcc	r0, r0, #8388608	; 0x800000
   4742c:	bxcc	lr
   47430:	and	r3, r0, #-2147483648	; 0x80000000
   47434:	orr	r0, r3, #2130706432	; 0x7f000000
   47438:	orr	r0, r0, #8388608	; 0x800000
   4743c:	bx	lr
   47440:	mvns	r2, r2, asr #24
   47444:	movne	r0, r1
   47448:	mvnseq	r3, r3, asr #24
   4744c:	movne	r1, r0
   47450:	lsls	r2, r0, #9
   47454:	lslseq	r3, r1, #9
   47458:	teqeq	r0, r1
   4745c:	orrne	r0, r0, #4194304	; 0x400000
   47460:	bx	lr
   47464:	mov	r3, #0
   47468:	b	47474 <flatcc_json_printer_clear@@Base+0x700>
   4746c:	ands	r3, r0, #-2147483648	; 0x80000000
   47470:	rsbmi	r0, r0, #0
   47474:	movs	ip, r0
   47478:	bxeq	lr
   4747c:	orr	r3, r3, #1258291200	; 0x4b000000
   47480:	mov	r1, r0
   47484:	mov	r0, #0
   47488:	b	474cc <flatcc_json_printer_clear@@Base+0x758>
   4748c:	orrs	r2, r0, r1
   47490:	bxeq	lr
   47494:	mov	r3, #0
   47498:	b	474b4 <flatcc_json_printer_clear@@Base+0x740>
   4749c:	orrs	r2, r0, r1
   474a0:	bxeq	lr
   474a4:	ands	r3, r1, #-2147483648	; 0x80000000
   474a8:	bpl	474b4 <flatcc_json_printer_clear@@Base+0x740>
   474ac:	rsbs	r0, r0, #0
   474b0:	rsc	r1, r1, #0
   474b4:	movs	ip, r1
   474b8:	moveq	ip, r0
   474bc:	moveq	r1, r0
   474c0:	moveq	r0, #0
   474c4:	orr	r3, r3, #1526726656	; 0x5b000000
   474c8:	subeq	r3, r3, #268435456	; 0x10000000
   474cc:	sub	r3, r3, #8388608	; 0x800000
   474d0:	clz	r2, ip
   474d4:	subs	r2, r2, #8
   474d8:	sub	r3, r3, r2, lsl #23
   474dc:	blt	474fc <flatcc_json_printer_clear@@Base+0x788>
   474e0:	add	r3, r3, r1, lsl r2
   474e4:	lsl	ip, r0, r2
   474e8:	rsb	r2, r2, #32
   474ec:	cmp	ip, #-2147483648	; 0x80000000
   474f0:	adc	r0, r3, r0, lsr r2
   474f4:	biceq	r0, r0, #1
   474f8:	bx	lr
   474fc:	add	r2, r2, #32
   47500:	lsl	ip, r1, r2
   47504:	rsb	r2, r2, #32
   47508:	orrs	r0, r0, ip, lsl #1
   4750c:	adc	r0, r3, r1, lsr r2
   47510:	biceq	r0, r0, ip, lsr #31
   47514:	bx	lr
   47518:	cmp	r3, #0
   4751c:	cmpeq	r2, #0
   47520:	bne	47538 <flatcc_json_printer_clear@@Base+0x7c4>
   47524:	cmp	r1, #0
   47528:	cmpeq	r0, #0
   4752c:	mvnne	r1, #0
   47530:	mvnne	r0, #0
   47534:	b	47554 <flatcc_json_printer_clear@@Base+0x7e0>
   47538:	sub	sp, sp, #8
   4753c:	push	{sp, lr}
   47540:	bl	47564 <flatcc_json_printer_clear@@Base+0x7f0>
   47544:	ldr	lr, [sp, #4]
   47548:	add	sp, sp, #8
   4754c:	pop	{r2, r3}
   47550:	bx	lr
   47554:	push	{r1, lr}
   47558:	mov	r0, #8
   4755c:	bl	14e28 <raise@plt>
   47560:	pop	{r1, pc}
   47564:	cmp	r1, r3
   47568:	cmpeq	r0, r2
   4756c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47570:	mov	r4, r0
   47574:	movcc	r0, #0
   47578:	mov	r5, r1
   4757c:	ldr	lr, [sp, #36]	; 0x24
   47580:	movcc	r1, r0
   47584:	bcc	47680 <flatcc_json_printer_clear@@Base+0x90c>
   47588:	cmp	r3, #0
   4758c:	clzeq	ip, r2
   47590:	clzne	ip, r3
   47594:	addeq	ip, ip, #32
   47598:	cmp	r5, #0
   4759c:	clzeq	r1, r4
   475a0:	addeq	r1, r1, #32
   475a4:	clzne	r1, r5
   475a8:	sub	ip, ip, r1
   475ac:	sub	sl, ip, #32
   475b0:	lsl	r9, r3, ip
   475b4:	rsb	fp, ip, #32
   475b8:	orr	r9, r9, r2, lsl sl
   475bc:	orr	r9, r9, r2, lsr fp
   475c0:	lsl	r8, r2, ip
   475c4:	cmp	r5, r9
   475c8:	cmpeq	r4, r8
   475cc:	movcc	r0, #0
   475d0:	movcc	r1, r0
   475d4:	bcc	475f0 <flatcc_json_printer_clear@@Base+0x87c>
   475d8:	mov	r0, #1
   475dc:	subs	r4, r4, r8
   475e0:	lsl	r1, r0, sl
   475e4:	orr	r1, r1, r0, lsr fp
   475e8:	lsl	r0, r0, ip
   475ec:	sbc	r5, r5, r9
   475f0:	cmp	ip, #0
   475f4:	beq	47680 <flatcc_json_printer_clear@@Base+0x90c>
   475f8:	lsr	r6, r8, #1
   475fc:	orr	r6, r6, r9, lsl #31
   47600:	lsr	r7, r9, #1
   47604:	mov	r2, ip
   47608:	b	4762c <flatcc_json_printer_clear@@Base+0x8b8>
   4760c:	subs	r3, r4, r6
   47610:	sbc	r8, r5, r7
   47614:	adds	r3, r3, r3
   47618:	adc	r8, r8, r8
   4761c:	adds	r4, r3, #1
   47620:	adc	r5, r8, #0
   47624:	subs	r2, r2, #1
   47628:	beq	47648 <flatcc_json_printer_clear@@Base+0x8d4>
   4762c:	cmp	r5, r7
   47630:	cmpeq	r4, r6
   47634:	bcs	4760c <flatcc_json_printer_clear@@Base+0x898>
   47638:	adds	r4, r4, r4
   4763c:	adc	r5, r5, r5
   47640:	subs	r2, r2, #1
   47644:	bne	4762c <flatcc_json_printer_clear@@Base+0x8b8>
   47648:	lsr	r3, r4, ip
   4764c:	orr	r3, r3, r5, lsl fp
   47650:	lsr	r2, r5, ip
   47654:	orr	r3, r3, r5, lsr sl
   47658:	adds	r0, r0, r4
   4765c:	mov	r4, r3
   47660:	lsl	r3, r2, ip
   47664:	orr	r3, r3, r4, lsl sl
   47668:	lsl	ip, r4, ip
   4766c:	orr	r3, r3, r4, lsr fp
   47670:	adc	r1, r1, r5
   47674:	subs	r0, r0, ip
   47678:	mov	r5, r2
   4767c:	sbc	r1, r1, r3
   47680:	cmp	lr, #0
   47684:	strdne	r4, [lr]
   47688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004768c <__libc_csu_init@@Base>:
   4768c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   47690:	mov	r7, r0
   47694:	ldr	r6, [pc, #72]	; 476e4 <__libc_csu_init@@Base+0x58>
   47698:	ldr	r5, [pc, #72]	; 476e8 <__libc_csu_init@@Base+0x5c>
   4769c:	add	r6, pc, r6
   476a0:	add	r5, pc, r5
   476a4:	sub	r6, r6, r5
   476a8:	mov	r8, r1
   476ac:	mov	r9, r2
   476b0:	bl	14e08 <raise@plt-0x20>
   476b4:	asrs	r6, r6, #2
   476b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   476bc:	mov	r4, #0
   476c0:	add	r4, r4, #1
   476c4:	ldr	r3, [r5], #4
   476c8:	mov	r2, r9
   476cc:	mov	r1, r8
   476d0:	mov	r0, r7
   476d4:	blx	r3
   476d8:	cmp	r6, r4
   476dc:	bne	476c0 <__libc_csu_init@@Base+0x34>
   476e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   476e4:	andeq	r7, r1, r8, ror #13
   476e8:	andeq	r7, r1, r0, ror #13

000476ec <__libc_csu_fini@@Base>:
   476ec:	bx	lr

Disassembly of section .fini:

000476f0 <.fini>:
   476f0:	push	{r3, lr}
   476f4:	pop	{r3, pc}
