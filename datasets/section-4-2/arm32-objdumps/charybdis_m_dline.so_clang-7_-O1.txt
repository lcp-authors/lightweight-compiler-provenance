
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

00000b44 <_init>:
 b44:	push	{r3, lr}
 b48:	bl	d14 <call_weak_fn>
 b4c:	pop	{r3, pc}

Disassembly of section .plt:

00000b50 <.plt>:
 b50:	push	{lr}		; (str lr, [sp, #-4]!)
 b54:	ldr	lr, [pc, #4]	; b60 <.plt+0x10>
 b58:	add	lr, pc, lr
 b5c:	ldr	pc, [lr, #8]!
 b60:	.word	0x000124a0

00000b64 <make_conf@plt>:
 b64:	add	ip, pc, #0, 12
 b68:	add	ip, ip, #73728	; 0x12000
 b6c:	ldr	pc, [ip, #1184]!	; 0x4a0

00000b70 <parse_netmask_strict@plt>:
 b70:	add	ip, pc, #0, 12
 b74:	add	ip, ip, #73728	; 0x12000
 b78:	ldr	pc, [ip, #1176]!	; 0x498

00000b7c <rb_current_time@plt>:
 b7c:	add	ip, pc, #0, 12
 b80:	add	ip, ip, #73728	; 0x12000
 b84:	ldr	pc, [ip, #1168]!	; 0x490

00000b88 <sendto_match_servs@plt>:
 b88:	add	ip, pc, #0, 12
 b8c:	add	ip, ip, #73728	; 0x12000
 b90:	ldr	pc, [ip, #1160]!	; 0x488

00000b94 <__cxa_finalize@plt>:
 b94:	add	ip, pc, #0, 12
 b98:	add	ip, ip, #73728	; 0x12000
 b9c:	ldr	pc, [ip, #1152]!	; 0x480

00000ba0 <sendto_one@plt>:
 ba0:	add	ip, pc, #0, 12
 ba4:	add	ip, ip, #73728	; 0x12000
 ba8:	ldr	pc, [ip, #1144]!	; 0x478

00000bac <rb_outofmemory@plt>:
 bac:	add	ip, pc, #0, 12
 bb0:	add	ip, ip, #73728	; 0x12000
 bb4:	ldr	pc, [ip, #1136]!	; 0x470

00000bb8 <parse_netmask@plt>:
 bb8:	add	ip, pc, #0, 12
 bbc:	add	ip, ip, #73728	; 0x12000
 bc0:	ldr	pc, [ip, #1128]!	; 0x468

00000bc4 <sendto_realops_snomask@plt>:
 bc4:	add	ip, pc, #0, 12
 bc8:	add	ip, ip, #73728	; 0x12000
 bcc:	ldr	pc, [ip, #1120]!	; 0x460

00000bd0 <bandb_add@plt>:
 bd0:	add	ip, pc, #0, 12
 bd4:	add	ip, ip, #73728	; 0x12000
 bd8:	ldr	pc, [ip, #1112]!	; 0x458

00000bdc <get_oper_name@plt>:
 bdc:	add	ip, pc, #0, 12
 be0:	add	ip, ip, #73728	; 0x12000
 be4:	ldr	pc, [ip, #1104]!	; 0x450

00000be8 <rb_free_rb_dlink_node@plt>:
 be8:	add	ip, pc, #0, 12
 bec:	add	ip, ip, #73728	; 0x12000
 bf0:	ldr	pc, [ip, #1096]!	; 0x448

00000bf4 <operhash_add@plt>:
 bf4:	add	ip, pc, #0, 12
 bf8:	add	ip, ip, #73728	; 0x12000
 bfc:	ldr	pc, [ip, #1088]!	; 0x440

00000c00 <strcpy@plt>:
 c00:	add	ip, pc, #0, 12
 c04:	add	ip, ip, #73728	; 0x12000
 c08:	ldr	pc, [ip, #1080]!	; 0x438

00000c0c <add_temp_dline@plt>:
 c0c:	add	ip, pc, #0, 12
 c10:	add	ip, ip, #73728	; 0x12000
 c14:	ldr	pc, [ip, #1072]!	; 0x430

00000c18 <rb_set_time@plt>:
 c18:	add	ip, pc, #0, 12
 c1c:	add	ip, ip, #73728	; 0x12000
 c20:	ldr	pc, [ip, #1064]!	; 0x428

00000c24 <malloc@plt>:
 c24:	add	ip, pc, #0, 12
 c28:	add	ip, ip, #73728	; 0x12000
 c2c:	ldr	pc, [ip, #1056]!	; 0x420

00000c30 <add_conf_by_address@plt>:
 c30:	add	ip, pc, #0, 12
 c34:	add	ip, ip, #73728	; 0x12000
 c38:	ldr	pc, [ip, #1048]!	; 0x418

00000c3c <__gmon_start__@plt>:
 c3c:	add	ip, pc, #0, 12
 c40:	add	ip, ip, #73728	; 0x12000
 c44:	ldr	pc, [ip, #1040]!	; 0x410

00000c48 <strlen@plt>:
 c48:	add	ip, pc, #0, 12
 c4c:	add	ip, ip, #73728	; 0x12000
 c50:	ldr	pc, [ip, #1032]!	; 0x408

00000c54 <strchr@plt>:
 c54:	add	ip, pc, #0, 12
 c58:	add	ip, ip, #73728	; 0x12000
 c5c:	ldr	pc, [ip, #1024]!	; 0x400

00000c60 <delete_one_address_conf@plt>:
 c60:	add	ip, pc, #0, 12
 c64:	add	ip, ip, #73728	; 0x12000
 c68:	ldr	pc, [ip, #1016]!	; 0x3f8

00000c6c <ilog@plt>:
 c6c:	add	ip, pc, #0, 12
 c70:	add	ip, ip, #73728	; 0x12000
 c74:	ldr	pc, [ip, #1008]!	; 0x3f0

00000c78 <match@plt>:
 c78:	add	ip, pc, #0, 12
 c7c:	add	ip, ip, #73728	; 0x12000
 c80:	ldr	pc, [ip, #1000]!	; 0x3e8

00000c84 <valid_temp_time@plt>:
 c84:	add	ip, pc, #0, 12
 c88:	add	ip, ip, #73728	; 0x12000
 c8c:	ldr	pc, [ip, #992]!	; 0x3e0

00000c90 <check_dlines@plt>:
 c90:	add	ip, pc, #0, 12
 c94:	add	ip, ip, #73728	; 0x12000
 c98:	ldr	pc, [ip, #984]!	; 0x3d8

00000c9c <sendto_one_notice@plt>:
 c9c:	add	ip, pc, #0, 12
 ca0:	add	ip, ip, #73728	; 0x12000
 ca4:	ldr	pc, [ip, #976]!	; 0x3d0

00000ca8 <bandb_del@plt>:
 ca8:	add	ip, pc, #0, 12
 cac:	add	ip, ip, #73728	; 0x12000
 cb0:	ldr	pc, [ip, #968]!	; 0x3c8

00000cb4 <atoi@plt>:
 cb4:	add	ip, pc, #0, 12
 cb8:	add	ip, ip, #73728	; 0x12000
 cbc:	ldr	pc, [ip, #960]!	; 0x3c0

00000cc0 <find_exact_conf_by_address@plt>:
 cc0:	add	ip, pc, #0, 12
 cc4:	add	ip, ip, #73728	; 0x12000
 cc8:	ldr	pc, [ip, #952]!	; 0x3b8

00000ccc <rb_strlcpy@plt>:
 ccc:	add	ip, pc, #0, 12
 cd0:	add	ip, ip, #73728	; 0x12000
 cd4:	ldr	pc, [ip, #944]!	; 0x3b0

00000cd8 <find_shared_conf@plt>:
 cd8:	add	ip, pc, #0, 12
 cdc:	add	ip, ip, #73728	; 0x12000
 ce0:	ldr	pc, [ip, #936]!	; 0x3a8

00000ce4 <privilegeset_in_set@plt>:
 ce4:	add	ip, pc, #0, 12
 ce8:	add	ip, ip, #73728	; 0x12000
 cec:	ldr	pc, [ip, #928]!	; 0x3a0

00000cf0 <irccmp@plt>:
 cf0:	add	ip, pc, #0, 12
 cf4:	add	ip, ip, #73728	; 0x12000
 cf8:	ldr	pc, [ip, #920]!	; 0x398

00000cfc <find_dline@plt>:
 cfc:	add	ip, pc, #0, 12
 d00:	add	ip, ip, #73728	; 0x12000
 d04:	ldr	pc, [ip, #912]!	; 0x390

00000d08 <__assert_fail@plt>:
 d08:	add	ip, pc, #0, 12
 d0c:	add	ip, ip, #73728	; 0x12000
 d10:	ldr	pc, [ip, #904]!	; 0x388

Disassembly of section .text:

00000d14 <call_weak_fn>:
     d14:	ldr	r3, [pc, #20]	; d30 <call_weak_fn+0x1c>
     d18:	ldr	r2, [pc, #20]	; d34 <call_weak_fn+0x20>
     d1c:	add	r3, pc, r3
     d20:	ldr	r2, [r3, r2]
     d24:	cmp	r2, #0
     d28:	bxeq	lr
     d2c:	b	c3c <__gmon_start__@plt>
     d30:	.word	0x000122dc
     d34:	.word	0x000000a4

00000d38 <deregister_tm_clones>:
     d38:	ldr	r0, [pc, #44]	; d6c <deregister_tm_clones+0x34>
     d3c:	ldr	r3, [pc, #44]	; d70 <deregister_tm_clones+0x38>
     d40:	add	r0, pc, r0
     d44:	add	r3, pc, r3
     d48:	cmp	r3, r0
     d4c:	ldr	r3, [pc, #32]	; d74 <deregister_tm_clones+0x3c>
     d50:	add	r3, pc, r3
     d54:	bxeq	lr
     d58:	ldr	r2, [pc, #24]	; d78 <deregister_tm_clones+0x40>
     d5c:	ldr	r3, [r3, r2]
     d60:	cmp	r3, #0
     d64:	bxeq	lr
     d68:	bx	r3
     d6c:	.word	0x00012434
     d70:	.word	0x00012430
     d74:	.word	0x000122a8
     d78:	.word	0x000000a0

00000d7c <register_tm_clones>:
     d7c:	ldr	r0, [pc, #56]	; dbc <register_tm_clones+0x40>
     d80:	ldr	r3, [pc, #56]	; dc0 <register_tm_clones+0x44>
     d84:	add	r0, pc, r0
     d88:	add	r3, pc, r3
     d8c:	sub	r1, r3, r0
     d90:	ldr	r3, [pc, #44]	; dc4 <register_tm_clones+0x48>
     d94:	asr	r1, r1, #2
     d98:	add	r3, pc, r3
     d9c:	add	r1, r1, r1, lsr #31
     da0:	asrs	r1, r1, #1
     da4:	bxeq	lr
     da8:	ldr	r2, [pc, #24]	; dc8 <register_tm_clones+0x4c>
     dac:	ldr	r3, [r3, r2]
     db0:	cmp	r3, #0
     db4:	bxeq	lr
     db8:	bx	r3
     dbc:	.word	0x000123f0
     dc0:	.word	0x000123ec
     dc4:	.word	0x00012260
     dc8:	.word	0x000000ac

00000dcc <__do_global_dtors_aux>:
     dcc:	ldr	r3, [pc, #76]	; e20 <__do_global_dtors_aux+0x54>
     dd0:	ldr	r2, [pc, #76]	; e24 <__do_global_dtors_aux+0x58>
     dd4:	add	r3, pc, r3
     dd8:	add	r2, pc, r2
     ddc:	ldrb	r3, [r3]
     de0:	cmp	r3, #0
     de4:	bxne	lr
     de8:	ldr	r3, [pc, #56]	; e28 <__do_global_dtors_aux+0x5c>
     dec:	push	{r4, lr}
     df0:	ldr	r3, [r2, r3]
     df4:	cmp	r3, #0
     df8:	beq	e08 <__do_global_dtors_aux+0x3c>
     dfc:	ldr	r3, [pc, #40]	; e2c <__do_global_dtors_aux+0x60>
     e00:	ldr	r0, [pc, r3]
     e04:	bl	b94 <__cxa_finalize@plt>
     e08:	bl	d38 <deregister_tm_clones>
     e0c:	ldr	r3, [pc, #28]	; e30 <__do_global_dtors_aux+0x64>
     e10:	mov	r2, #1
     e14:	add	r3, pc, r3
     e18:	strb	r2, [r3]
     e1c:	pop	{r4, pc}
     e20:	.word	0x000123a0
     e24:	.word	0x00012220
     e28:	.word	0x0000009c
     e2c:	.word	0x000122b4
     e30:	.word	0x00012360

00000e34 <frame_dummy>:
     e34:	b	d7c <register_tm_clones>

00000e38 <me_dline>:
     e38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     e3c:	add	fp, sp, #24
     e40:	mov	r4, r2
     e44:	ldr	r6, [fp, #8]
     e48:	ldr	r0, [r6, #4]
     e4c:	bl	cb4 <atoi@plt>
     e50:	mov	r5, r0
     e54:	ldrh	r0, [r4, #80]	; 0x50
     e58:	cmp	r0, #64	; 0x40
     e5c:	bne	ed8 <me_dline+0xa0>
     e60:	ldr	r0, [r4, #24]
     e64:	cmp	r0, #0
     e68:	beq	ed8 <me_dline+0xa0>
     e6c:	mov	r3, #4096	; 0x1000
     e70:	cmp	r5, #0
     e74:	movwgt	r3, #2048	; 0x800
     e78:	ldr	r2, [r4, #32]
     e7c:	add	r0, r4, #152	; 0x98
     e80:	add	r1, r4, #163	; 0xa3
     e84:	add	r2, r2, #88	; 0x58
     e88:	bl	cd8 <find_shared_conf@plt>
     e8c:	cmp	r0, #0
     e90:	beq	ed8 <me_dline+0xa0>
     e94:	ldr	r8, [r6, #8]
     e98:	ldr	r7, [r6, #12]
     e9c:	mov	r0, r7
     ea0:	bl	c48 <strlen@plt>
     ea4:	add	r0, r0, #8
     ea8:	bic	r0, r0, #7
     eac:	sub	r6, sp, r0
     eb0:	mov	sp, r6
     eb4:	mov	r0, r6
     eb8:	mov	r1, r7
     ebc:	bl	c00 <strcpy@plt>
     ec0:	mov	r0, r4
     ec4:	mov	r1, r8
     ec8:	mov	r2, r5
     ecc:	mov	r3, r6
     ed0:	bl	133c <apply_dline>
     ed4:	bl	c90 <check_dlines@plt>
     ed8:	sub	sp, fp, #24
     edc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000ee0 <mo_dline>:
     ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ee4:	add	fp, sp, #28
     ee8:	sub	sp, sp, #92	; 0x5c
     eec:	mov	r4, r2
     ef0:	ldr	r0, [pc, #600]	; 1150 <mo_dline+0x270>
     ef4:	add	r0, pc, r0
     ef8:	vldr	d16, [r0]
     efc:	mov	r0, #110	; 0x6e
     f00:	strh	r0, [fp, #-40]	; 0xffffffd8
     f04:	vstr	d16, [fp, #-48]	; 0xffffffd0
     f08:	ldr	r0, [r2, #24]
     f0c:	cmp	r0, #0
     f10:	ldrne	r0, [r0, #36]	; 0x24
     f14:	cmpne	r0, #0
     f18:	bne	f58 <mo_dline+0x78>
     f1c:	sub	sp, sp, #8
     f20:	ldr	r0, [pc, #560]	; 1158 <mo_dline+0x278>
     f24:	add	r0, pc, r0
     f28:	str	r0, [sp]
     f2c:	add	r3, r4, #88	; 0x58
     f30:	ldr	r0, [pc, #548]	; 115c <mo_dline+0x27c>
     f34:	ldr	r0, [pc, r0]
     f38:	add	r2, r0, #88	; 0x58
     f3c:	ldr	r1, [pc, #540]	; 1160 <mo_dline+0x280>
     f40:	add	r1, pc, r1
     f44:	mov	r0, r4
     f48:	bl	ba0 <sendto_one@plt>
     f4c:	add	sp, sp, #8
     f50:	sub	sp, fp, #28
     f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f58:	mov	r7, r3
     f5c:	ldr	r1, [pc, #496]	; 1154 <mo_dline+0x274>
     f60:	add	r1, pc, r1
     f64:	bl	ce4 <privilegeset_in_set@plt>
     f68:	cmp	r0, #0
     f6c:	beq	f1c <mo_dline+0x3c>
     f70:	ldr	r9, [fp, #8]
     f74:	ldr	r0, [r9, #4]
     f78:	bl	c84 <valid_temp_time@plt>
     f7c:	mov	sl, r0
     f80:	mov	r6, #1
     f84:	cmn	r0, #1
     f88:	movwgt	r6, #2
     f8c:	ldr	r5, [r9, r6, lsl #2]
     f90:	sub	r0, fp, #112	; 0x70
     f94:	mov	r1, r5
     f98:	mov	r2, #64	; 0x40
     f9c:	bl	ccc <rb_strlcpy@plt>
     fa0:	ldrb	r0, [r5]
     fa4:	cmp	r0, #58	; 0x3a
     fa8:	bne	fb8 <mo_dline+0xd8>
     fac:	ldr	r1, [pc, #432]	; 1164 <mo_dline+0x284>
     fb0:	add	r1, pc, r1
     fb4:	b	106c <mo_dline+0x18c>
     fb8:	mov	r0, r5
     fbc:	mov	r1, #0
     fc0:	mov	r2, #0
     fc4:	bl	b70 <parse_netmask_strict@plt>
     fc8:	orr	r0, r0, #1
     fcc:	cmp	r0, #3
     fd0:	bne	1064 <mo_dline+0x184>
     fd4:	mov	r0, #0
     fd8:	str	r0, [fp, #-116]	; 0xffffff8c
     fdc:	add	r8, r6, #1
     fe0:	add	r0, r6, #3
     fe4:	cmp	r0, r7
     fe8:	bgt	1008 <mo_dline+0x128>
     fec:	str	r0, [fp, #-120]	; 0xffffff88
     ff0:	ldr	r0, [r9, r8, lsl #2]
     ff4:	ldr	r1, [pc, #368]	; 116c <mo_dline+0x28c>
     ff8:	add	r1, pc, r1
     ffc:	bl	cf0 <irccmp@plt>
    1000:	cmp	r0, #0
    1004:	beq	1104 <mo_dline+0x224>
    1008:	sub	r1, fp, #48	; 0x30
    100c:	cmp	r8, r7
    1010:	bge	1080 <mo_dline+0x1a0>
    1014:	ldr	r8, [r9, r8, lsl #2]
    1018:	cmp	r8, #0
    101c:	beq	1080 <mo_dline+0x1a0>
    1020:	ldrb	r0, [r8]
    1024:	cmp	r0, #0
    1028:	ldr	r6, [fp, #-116]	; 0xffffff8c
    102c:	mov	r7, r1
    1030:	beq	1088 <mo_dline+0x1a8>
    1034:	mov	r0, r8
    1038:	bl	c48 <strlen@plt>
    103c:	add	r0, r0, #8
    1040:	bic	r0, r0, #7
    1044:	sub	r7, sp, r0
    1048:	mov	sp, r7
    104c:	mov	r0, r7
    1050:	mov	r1, r8
    1054:	bl	c00 <strcpy@plt>
    1058:	cmp	r6, #0
    105c:	bne	1090 <mo_dline+0x1b0>
    1060:	b	10e4 <mo_dline+0x204>
    1064:	ldr	r1, [pc, #252]	; 1168 <mo_dline+0x288>
    1068:	add	r1, pc, r1
    106c:	mov	r0, r4
    1070:	mov	r2, r5
    1074:	bl	c9c <sendto_one_notice@plt>
    1078:	sub	sp, fp, #28
    107c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1080:	ldr	r6, [fp, #-116]	; 0xffffff8c
    1084:	mov	r7, r1
    1088:	cmp	r6, #0
    108c:	beq	10e4 <mo_dline+0x204>
    1090:	ldr	r0, [pc, #224]	; 1178 <mo_dline+0x298>
    1094:	ldr	r0, [pc, r0]
    1098:	ldr	r2, [r0]
    109c:	sub	sp, sp, #24
    10a0:	ldr	r0, [pc, #212]	; 117c <mo_dline+0x29c>
    10a4:	add	r0, pc, r0
    10a8:	stm	sp, {r0, r6, sl}
    10ac:	str	r5, [sp, #12]
    10b0:	str	r7, [sp, #16]
    10b4:	mov	r0, r4
    10b8:	mov	r1, r6
    10bc:	mov	r3, #0
    10c0:	bl	b88 <sendto_match_servs@plt>
    10c4:	add	sp, sp, #24
    10c8:	ldr	r0, [pc, #176]	; 1180 <mo_dline+0x2a0>
    10cc:	ldr	r0, [pc, r0]
    10d0:	add	r1, r0, #88	; 0x58
    10d4:	mov	r0, r6
    10d8:	bl	c78 <match@plt>
    10dc:	cmp	r0, #0
    10e0:	beq	10fc <mo_dline+0x21c>
    10e4:	mov	r0, r4
    10e8:	mov	r1, r5
    10ec:	mov	r2, sl
    10f0:	mov	r3, r7
    10f4:	bl	133c <apply_dline>
    10f8:	bl	c90 <check_dlines@plt>
    10fc:	sub	sp, fp, #28
    1100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1104:	ldr	r0, [r4, #24]
    1108:	cmp	r0, #0
    110c:	ldrne	r0, [r0, #36]	; 0x24
    1110:	cmpne	r0, #0
    1114:	bne	1128 <mo_dline+0x248>
    1118:	sub	sp, sp, #8
    111c:	ldr	r0, [pc, #80]	; 1174 <mo_dline+0x294>
    1120:	add	r0, pc, r0
    1124:	b	f28 <mo_dline+0x48>
    1128:	ldr	r1, [pc, #64]	; 1170 <mo_dline+0x290>
    112c:	add	r1, pc, r1
    1130:	bl	ce4 <privilegeset_in_set@plt>
    1134:	cmp	r0, #0
    1138:	beq	1118 <mo_dline+0x238>
    113c:	add	r0, r9, r6, lsl #2
    1140:	ldr	r0, [r0, #8]
    1144:	str	r0, [fp, #-116]	; 0xffffff8c
    1148:	ldr	r8, [fp, #-120]	; 0xffffff88
    114c:	b	1008 <mo_dline+0x128>
    1150:	.word	0x000010dc
    1154:	.word	0x00000c00
    1158:	.word	0x00000c41
    115c:	.word	0x00012174
    1160:	.word	0x00000c2b
    1164:	.word	0x00000be2
    1168:	.word	0x00000b58
    116c:	.word	0x00000bfb
    1170:	.word	0x00000aca
    1174:	.word	0x00000adb
    1178:	.word	0x00012018
    117c:	.word	0x00000b61
    1180:	.word	0x00011fdc

00001184 <me_undline>:
    1184:	push	{r4, r5, fp, lr}
    1188:	add	fp, sp, #8
    118c:	ldrh	r0, [r2, #80]	; 0x50
    1190:	cmp	r0, #64	; 0x40
    1194:	bne	11dc <me_undline+0x58>
    1198:	mov	r4, r2
    119c:	ldr	r0, [r2, #24]
    11a0:	cmp	r0, #0
    11a4:	popeq	{r4, r5, fp, pc}
    11a8:	ldr	r5, [fp, #8]
    11ac:	ldr	r2, [r4, #32]
    11b0:	add	r0, r4, #152	; 0x98
    11b4:	add	r1, r4, #163	; 0xa3
    11b8:	add	r2, r2, #88	; 0x58
    11bc:	mov	r3, #8192	; 0x2000
    11c0:	bl	cd8 <find_shared_conf@plt>
    11c4:	cmp	r0, #0
    11c8:	beq	11dc <me_undline+0x58>
    11cc:	ldr	r1, [r5, #4]
    11d0:	mov	r0, r4
    11d4:	pop	{r4, r5, fp, lr}
    11d8:	b	1858 <apply_undline>
    11dc:	pop	{r4, r5, fp, pc}

000011e0 <mo_undline>:
    11e0:	push	{r4, r5, r6, r7, fp, lr}
    11e4:	add	fp, sp, #16
    11e8:	sub	sp, sp, #16
    11ec:	mov	r4, r2
    11f0:	ldr	r0, [r2, #24]
    11f4:	cmp	r0, #0
    11f8:	ldrne	r0, [r0, #36]	; 0x24
    11fc:	cmpne	r0, #0
    1200:	bne	1238 <mo_undline+0x58>
    1204:	ldr	r0, [pc, #268]	; 1318 <mo_undline+0x138>
    1208:	add	r0, pc, r0
    120c:	str	r0, [sp]
    1210:	add	r3, r4, #88	; 0x58
    1214:	ldr	r0, [pc, #256]	; 131c <mo_undline+0x13c>
    1218:	ldr	r0, [pc, r0]
    121c:	add	r2, r0, #88	; 0x58
    1220:	ldr	r1, [pc, #248]	; 1320 <mo_undline+0x140>
    1224:	add	r1, pc, r1
    1228:	mov	r0, r4
    122c:	bl	ba0 <sendto_one@plt>
    1230:	sub	sp, fp, #16
    1234:	pop	{r4, r5, r6, r7, fp, pc}
    1238:	mov	r6, r3
    123c:	ldr	r7, [fp, #8]
    1240:	ldr	r1, [pc, #204]	; 1314 <mo_undline+0x134>
    1244:	add	r1, pc, r1
    1248:	bl	ce4 <privilegeset_in_set@plt>
    124c:	cmp	r0, #0
    1250:	beq	1204 <mo_undline+0x24>
    1254:	ldr	r5, [r7, #4]
    1258:	cmp	r6, #4
    125c:	blt	1278 <mo_undline+0x98>
    1260:	ldr	r0, [r7, #8]
    1264:	ldr	r1, [pc, #184]	; 1324 <mo_undline+0x144>
    1268:	add	r1, pc, r1
    126c:	bl	cf0 <irccmp@plt>
    1270:	cmp	r0, #0
    1274:	beq	128c <mo_undline+0xac>
    1278:	mov	r0, r4
    127c:	mov	r1, r5
    1280:	sub	sp, fp, #16
    1284:	pop	{r4, r5, r6, r7, fp, lr}
    1288:	b	1858 <apply_undline>
    128c:	ldr	r0, [r4, #24]
    1290:	cmp	r0, #0
    1294:	ldrne	r0, [r0, #36]	; 0x24
    1298:	cmpne	r0, #0
    129c:	bne	12ac <mo_undline+0xcc>
    12a0:	ldr	r0, [pc, #132]	; 132c <mo_undline+0x14c>
    12a4:	add	r0, pc, r0
    12a8:	b	120c <mo_undline+0x2c>
    12ac:	ldr	r1, [pc, #116]	; 1328 <mo_undline+0x148>
    12b0:	add	r1, pc, r1
    12b4:	bl	ce4 <privilegeset_in_set@plt>
    12b8:	cmp	r0, #0
    12bc:	beq	12a0 <mo_undline+0xc0>
    12c0:	ldr	r0, [pc, #104]	; 1330 <mo_undline+0x150>
    12c4:	ldr	r0, [pc, r0]
    12c8:	ldr	r2, [r0]
    12cc:	ldr	r6, [r7, #12]
    12d0:	ldr	r0, [pc, #92]	; 1334 <mo_undline+0x154>
    12d4:	add	r0, pc, r0
    12d8:	stm	sp, {r0, r6}
    12dc:	str	r5, [sp, #8]
    12e0:	mov	r0, r4
    12e4:	mov	r1, r6
    12e8:	mov	r3, #0
    12ec:	bl	b88 <sendto_match_servs@plt>
    12f0:	ldr	r0, [pc, #64]	; 1338 <mo_undline+0x158>
    12f4:	ldr	r0, [pc, r0]
    12f8:	add	r1, r0, #88	; 0x58
    12fc:	mov	r0, r6
    1300:	bl	c78 <match@plt>
    1304:	cmp	r0, #0
    1308:	subeq	sp, fp, #16
    130c:	popeq	{r4, r5, r6, r7, fp, pc}
    1310:	b	1278 <mo_undline+0x98>
    1314:	.word	0x0000091c
    1318:	.word	0x00000c3b
    131c:	.word	0x00011e90
    1320:	.word	0x00000947
    1324:	.word	0x0000098b
    1328:	.word	0x00000946
    132c:	.word	0x00000957
    1330:	.word	0x00011de8
    1334:	.word	0x00000b77
    1338:	.word	0x00011db4

0000133c <apply_dline>:
    133c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1340:	add	fp, sp, #24
    1344:	sub	sp, sp, #152	; 0x98
    1348:	mov	r5, r3
    134c:	mov	r8, r2
    1350:	mov	r6, r1
    1354:	mov	r4, r0
    1358:	add	r1, sp, #24
    135c:	add	r2, sp, #20
    1360:	mov	r0, r6
    1364:	bl	b70 <parse_netmask_strict@plt>
    1368:	orr	r1, r0, #1
    136c:	cmp	r1, #3
    1370:	bne	13d8 <apply_dline+0x9c>
    1374:	mov	r7, #2
    1378:	cmp	r0, #3
    137c:	movweq	r7, #10
    1380:	ldr	r0, [r4, #24]
    1384:	cmp	r0, #0
    1388:	beq	13c0 <apply_dline+0x84>
    138c:	ldr	r0, [r0, #36]	; 0x24
    1390:	cmp	r0, #0
    1394:	beq	13ac <apply_dline+0x70>
    1398:	ldr	r1, [pc, #1072]	; 17d0 <apply_dline+0x494>
    139c:	add	r1, pc, r1
    13a0:	bl	ce4 <privilegeset_in_set@plt>
    13a4:	cmp	r0, #0
    13a8:	bne	1408 <apply_dline+0xcc>
    13ac:	ldr	r0, [r4, #24]
    13b0:	cmp	r0, #0
    13b4:	ldrne	r0, [r0, #36]	; 0x24
    13b8:	cmpne	r0, #0
    13bc:	bne	13f4 <apply_dline+0xb8>
    13c0:	ldr	r0, [sp, #20]
    13c4:	cmp	r0, #15
    13c8:	bgt	142c <apply_dline+0xf0>
    13cc:	ldr	r1, [pc, #1032]	; 17dc <apply_dline+0x4a0>
    13d0:	add	r1, pc, r1
    13d4:	b	141c <apply_dline+0xe0>
    13d8:	add	r3, r4, #88	; 0x58
    13dc:	ldr	r0, [pc, #996]	; 17c8 <apply_dline+0x48c>
    13e0:	ldr	r0, [pc, r0]
    13e4:	add	r2, r0, #88	; 0x58
    13e8:	ldr	r1, [pc, #988]	; 17cc <apply_dline+0x490>
    13ec:	add	r1, pc, r1
    13f0:	b	16f4 <apply_dline+0x3b8>
    13f4:	ldr	r1, [pc, #984]	; 17d4 <apply_dline+0x498>
    13f8:	add	r1, pc, r1
    13fc:	bl	ce4 <privilegeset_in_set@plt>
    1400:	cmp	r0, #0
    1404:	beq	13c0 <apply_dline+0x84>
    1408:	ldr	r0, [sp, #20]
    140c:	cmp	r0, #7
    1410:	bgt	142c <apply_dline+0xf0>
    1414:	ldr	r1, [pc, #956]	; 17d8 <apply_dline+0x49c>
    1418:	add	r1, pc, r1
    141c:	mov	r0, r4
    1420:	bl	c9c <sendto_one_notice@plt>
    1424:	sub	sp, fp, #24
    1428:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    142c:	ldr	r0, [pc, #940]	; 17e0 <apply_dline+0x4a4>
    1430:	ldr	r0, [pc, r0]
    1434:	ldr	r0, [r0, #140]	; 0x8c
    1438:	cmp	r0, #0
    143c:	beq	1480 <apply_dline+0x144>
    1440:	add	r0, sp, #24
    1444:	mov	r1, r7
    1448:	bl	cfc <find_dline@plt>
    144c:	cmp	r0, #0
    1450:	beq	1480 <apply_dline+0x144>
    1454:	mov	r7, r0
    1458:	ldr	r0, [r0, #16]
    145c:	add	r2, sp, #16
    1460:	mov	r1, #0
    1464:	bl	b70 <parse_netmask_strict@plt>
    1468:	cmp	r0, #0
    146c:	beq	1480 <apply_dline+0x144>
    1470:	ldr	r0, [sp, #16]
    1474:	ldr	r1, [sp, #20]
    1478:	cmp	r1, r0
    147c:	bge	1758 <apply_dline+0x41c>
    1480:	bl	c18 <rb_set_time@plt>
    1484:	bl	b64 <make_conf@plt>
    1488:	mov	r7, r0
    148c:	mov	r0, #131072	; 0x20000
    1490:	str	r0, [r7]
    1494:	bl	b7c <rb_current_time@plt>
    1498:	str	r0, [r7, #40]	; 0x28
    149c:	mov	r0, r6
    14a0:	bl	1820 <rb_strdup>
    14a4:	str	r0, [r7, #16]
    14a8:	mov	r0, r5
    14ac:	bl	1820 <rb_strdup>
    14b0:	str	r0, [r7, #20]
    14b4:	mov	r0, r4
    14b8:	bl	bdc <get_oper_name@plt>
    14bc:	bl	bf4 <operhash_add@plt>
    14c0:	str	r0, [r7, #12]
    14c4:	mov	r0, r5
    14c8:	bl	c48 <strlen@plt>
    14cc:	movw	r1, #391	; 0x187
    14d0:	cmp	r0, r1
    14d4:	movcs	r0, #0
    14d8:	strbcs	r0, [r5, #390]	; 0x186
    14dc:	mov	r0, r5
    14e0:	mov	r1, #124	; 0x7c
    14e4:	bl	c54 <strchr@plt>
    14e8:	cmp	r0, #0
    14ec:	beq	15a4 <apply_dline+0x268>
    14f0:	mov	r6, r0
    14f4:	mov	r0, #0
    14f8:	strb	r0, [r6]
    14fc:	ldrb	r0, [r6, #1]!
    1500:	cmp	r0, #0
    1504:	beq	1514 <apply_dline+0x1d8>
    1508:	mov	r0, r6
    150c:	bl	1820 <rb_strdup>
    1510:	str	r0, [r7, #24]
    1514:	cmp	r8, #1
    1518:	blt	15b0 <apply_dline+0x274>
    151c:	bl	b7c <rb_current_time@plt>
    1520:	add	r0, r0, r8
    1524:	str	r0, [r7, #36]	; 0x24
    1528:	mov	r0, r7
    152c:	bl	c0c <add_temp_dline@plt>
    1530:	cmp	r6, #0
    1534:	ldrbne	r0, [r6]
    1538:	cmpne	r0, #0
    153c:	bne	165c <apply_dline+0x320>
    1540:	mov	r0, r4
    1544:	bl	bdc <get_oper_name@plt>
    1548:	mov	r3, r0
    154c:	ldr	r0, [r7, #16]
    1550:	movw	r1, #34953	; 0x8889
    1554:	movt	r1, #34952	; 0x8888
    1558:	umull	r1, r2, r8, r1
    155c:	lsr	r6, r2, #5
    1560:	str	r6, [sp]
    1564:	stmib	sp, {r0, r5}
    1568:	ldr	r2, [pc, #648]	; 17f8 <apply_dline+0x4bc>
    156c:	add	r2, pc, r2
    1570:	mov	r0, #256	; 0x100
    1574:	mov	r1, #0
    1578:	bl	bc4 <sendto_realops_snomask@plt>
    157c:	mov	r0, r4
    1580:	bl	bdc <get_oper_name@plt>
    1584:	mov	r2, r0
    1588:	ldr	r0, [r7, #16]
    158c:	stm	sp, {r0, r5}
    1590:	ldr	r1, [pc, #612]	; 17fc <apply_dline+0x4c0>
    1594:	add	r1, pc, r1
    1598:	mov	r0, #7
    159c:	mov	r3, r6
    15a0:	b	16bc <apply_dline+0x380>
    15a4:	mov	r6, #0
    15a8:	cmp	r8, #1
    15ac:	bge	151c <apply_dline+0x1e0>
    15b0:	ldr	r0, [r7, #16]
    15b4:	str	r7, [sp]
    15b8:	mov	r8, #0
    15bc:	mov	r1, #131072	; 0x20000
    15c0:	mov	r2, #0
    15c4:	mov	r3, #0
    15c8:	bl	c30 <add_conf_by_address@plt>
    15cc:	ldr	r2, [r7, #16]
    15d0:	ldr	r1, [r7, #24]
    15d4:	cmp	r1, #0
    15d8:	mov	r0, #0
    15dc:	beq	15ec <apply_dline+0x2b0>
    15e0:	ldrb	r0, [r1]
    15e4:	cmp	r0, #0
    15e8:	movne	r0, r1
    15ec:	str	r5, [sp]
    15f0:	stmib	sp, {r0, r8}
    15f4:	mov	r0, #1
    15f8:	mov	r1, r4
    15fc:	mov	r3, #0
    1600:	bl	bd0 <bandb_add@plt>
    1604:	cmp	r6, #0
    1608:	ldrbne	r0, [r6]
    160c:	cmpne	r0, #0
    1610:	bne	1704 <apply_dline+0x3c8>
    1614:	mov	r0, r4
    1618:	bl	bdc <get_oper_name@plt>
    161c:	mov	r3, r0
    1620:	ldr	r0, [r7, #16]
    1624:	stm	sp, {r0, r5}
    1628:	ldr	r2, [pc, #480]	; 1810 <apply_dline+0x4d4>
    162c:	add	r2, pc, r2
    1630:	mov	r0, #256	; 0x100
    1634:	mov	r1, #0
    1638:	bl	bc4 <sendto_realops_snomask@plt>
    163c:	mov	r0, r4
    1640:	bl	bdc <get_oper_name@plt>
    1644:	mov	r2, r0
    1648:	ldr	r3, [r7, #16]
    164c:	str	r5, [sp]
    1650:	ldr	r1, [pc, #444]	; 1814 <apply_dline+0x4d8>
    1654:	add	r1, pc, r1
    1658:	b	1748 <apply_dline+0x40c>
    165c:	mov	r0, r4
    1660:	bl	bdc <get_oper_name@plt>
    1664:	mov	r3, r0
    1668:	ldr	r0, [r7, #16]
    166c:	movw	r1, #34953	; 0x8889
    1670:	movt	r1, #34952	; 0x8888
    1674:	umull	r1, r2, r8, r1
    1678:	lsr	r9, r2, #5
    167c:	str	r9, [sp]
    1680:	stmib	sp, {r0, r5, r6}
    1684:	ldr	r2, [pc, #372]	; 1800 <apply_dline+0x4c4>
    1688:	add	r2, pc, r2
    168c:	mov	r0, #256	; 0x100
    1690:	mov	r1, #0
    1694:	bl	bc4 <sendto_realops_snomask@plt>
    1698:	mov	r0, r4
    169c:	bl	bdc <get_oper_name@plt>
    16a0:	mov	r2, r0
    16a4:	ldr	r0, [r7, #16]
    16a8:	stm	sp, {r0, r5, r6}
    16ac:	ldr	r1, [pc, #336]	; 1804 <apply_dline+0x4c8>
    16b0:	add	r1, pc, r1
    16b4:	mov	r0, #7
    16b8:	mov	r3, r9
    16bc:	bl	c6c <ilog@plt>
    16c0:	ldr	r0, [r7, #16]
    16c4:	movw	r1, #34953	; 0x8889
    16c8:	movt	r1, #34952	; 0x8888
    16cc:	umull	r1, r2, r8, r1
    16d0:	lsr	r1, r2, #5
    16d4:	str	r1, [sp]
    16d8:	str	r0, [sp, #4]
    16dc:	add	r3, r4, #88	; 0x58
    16e0:	ldr	r0, [pc, #288]	; 1808 <apply_dline+0x4cc>
    16e4:	ldr	r0, [pc, r0]
    16e8:	add	r2, r0, #88	; 0x58
    16ec:	ldr	r1, [pc, #280]	; 180c <apply_dline+0x4d0>
    16f0:	add	r1, pc, r1
    16f4:	mov	r0, r4
    16f8:	bl	ba0 <sendto_one@plt>
    16fc:	sub	sp, fp, #24
    1700:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1704:	mov	r0, r4
    1708:	bl	bdc <get_oper_name@plt>
    170c:	mov	r3, r0
    1710:	ldr	r0, [r7, #16]
    1714:	stm	sp, {r0, r5, r6}
    1718:	ldr	r2, [pc, #248]	; 1818 <apply_dline+0x4dc>
    171c:	add	r2, pc, r2
    1720:	mov	r0, #256	; 0x100
    1724:	mov	r1, #0
    1728:	bl	bc4 <sendto_realops_snomask@plt>
    172c:	mov	r0, r4
    1730:	bl	bdc <get_oper_name@plt>
    1734:	mov	r2, r0
    1738:	ldr	r3, [r7, #16]
    173c:	stm	sp, {r5, r6}
    1740:	ldr	r1, [pc, #212]	; 181c <apply_dline+0x4e0>
    1744:	add	r1, pc, r1
    1748:	mov	r0, #7
    174c:	bl	c6c <ilog@plt>
    1750:	sub	sp, fp, #24
    1754:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1758:	ldr	r1, [r7, #16]
    175c:	ldr	r2, [r7, #20]
    1760:	ldr	r0, [pc, #124]	; 17e4 <apply_dline+0x4a8>
    1764:	add	r0, pc, r0
    1768:	cmp	r2, #0
    176c:	movne	r0, r2
    1770:	add	r3, r4, #88	; 0x58
    1774:	ldrb	r2, [r7, #4]
    1778:	tst	r2, #64	; 0x40
    177c:	bne	17a4 <apply_dline+0x468>
    1780:	str	r6, [sp]
    1784:	str	r1, [sp, #4]
    1788:	str	r0, [sp, #8]
    178c:	ldr	r0, [pc, #92]	; 17f0 <apply_dline+0x4b4>
    1790:	ldr	r0, [pc, r0]
    1794:	add	r2, r0, #88	; 0x58
    1798:	ldr	r1, [pc, #84]	; 17f4 <apply_dline+0x4b8>
    179c:	add	r1, pc, r1
    17a0:	b	16f4 <apply_dline+0x3b8>
    17a4:	str	r6, [sp]
    17a8:	str	r1, [sp, #4]
    17ac:	str	r0, [sp, #8]
    17b0:	ldr	r0, [pc, #48]	; 17e8 <apply_dline+0x4ac>
    17b4:	ldr	r0, [pc, r0]
    17b8:	add	r2, r0, #88	; 0x58
    17bc:	ldr	r1, [pc, #40]	; 17ec <apply_dline+0x4b0>
    17c0:	add	r1, pc, r1
    17c4:	b	16f4 <apply_dline+0x3b8>
    17c8:	.word	0x00011cc8
    17cc:	.word	0x00000832
    17d0:	.word	0x000008a0
    17d4:	.word	0x0000084f
    17d8:	.word	0x00000841
    17dc:	.word	0x000008c0
    17e0:	.word	0x00011c80
    17e4:	.word	0x0000055e
    17e8:	.word	0x000118f4
    17ec:	.word	0x0000050e
    17f0:	.word	0x00011918
    17f4:	.word	0x00000561
    17f8:	.word	0x000007c2
    17fc:	.word	0x000007ca
    1800:	.word	0x000006e4
    1804:	.word	0x000006ef
    1808:	.word	0x000119c4
    180c:	.word	0x000006c0
    1810:	.word	0x000007bb
    1814:	.word	0x000007b1
    1818:	.word	0x000006f6
    181c:	.word	0x000006ef

00001820 <rb_strdup>:
    1820:	push	{r4, r5, fp, lr}
    1824:	add	fp, sp, #8
    1828:	mov	r4, r0
    182c:	bl	c48 <strlen@plt>
    1830:	add	r0, r0, #1
    1834:	bl	c24 <malloc@plt>
    1838:	cmp	r0, #0
    183c:	beq	1854 <rb_strdup+0x34>
    1840:	mov	r5, r0
    1844:	mov	r1, r4
    1848:	bl	c00 <strcpy@plt>
    184c:	mov	r0, r5
    1850:	pop	{r4, r5, fp, pc}
    1854:	bl	bac <rb_outofmemory@plt>

00001858 <apply_undline>:
    1858:	push	{r4, r5, r6, sl, fp, lr}
    185c:	add	fp, sp, #16
    1860:	sub	sp, sp, #520	; 0x208
    1864:	mov	r6, r1
    1868:	mov	r4, r0
    186c:	mov	r0, r1
    1870:	mov	r1, #0
    1874:	mov	r2, #0
    1878:	bl	bb8 <parse_netmask@plt>
    187c:	orr	r0, r0, #1
    1880:	cmp	r0, #3
    1884:	bne	1938 <apply_undline+0xe0>
    1888:	mov	r0, r6
    188c:	mov	r1, #131072	; 0x20000
    1890:	mov	r2, #0
    1894:	bl	cc0 <find_exact_conf_by_address@plt>
    1898:	cmp	r0, #0
    189c:	beq	1944 <apply_undline+0xec>
    18a0:	mov	r5, r0
    18a4:	ldr	r1, [r0, #16]
    18a8:	add	r6, sp, #8
    18ac:	mov	r0, r6
    18b0:	mov	r2, #512	; 0x200
    18b4:	bl	ccc <rb_strlcpy@plt>
    18b8:	mov	r0, r5
    18bc:	bl	1a1c <remove_temp_dline>
    18c0:	cmp	r0, #0
    18c4:	beq	1960 <apply_undline+0x108>
    18c8:	str	r6, [sp]
    18cc:	add	r3, r4, #88	; 0x58
    18d0:	ldr	r0, [pc, #292]	; 19fc <apply_undline+0x1a4>
    18d4:	ldr	r0, [pc, r0]
    18d8:	add	r2, r0, #88	; 0x58
    18dc:	ldr	r1, [pc, #284]	; 1a00 <apply_undline+0x1a8>
    18e0:	add	r1, pc, r1
    18e4:	mov	r0, r4
    18e8:	bl	ba0 <sendto_one@plt>
    18ec:	mov	r0, r4
    18f0:	bl	bdc <get_oper_name@plt>
    18f4:	mov	r3, r0
    18f8:	str	r6, [sp]
    18fc:	ldr	r2, [pc, #256]	; 1a04 <apply_undline+0x1ac>
    1900:	add	r2, pc, r2
    1904:	mov	r0, #256	; 0x100
    1908:	mov	r1, #0
    190c:	bl	bc4 <sendto_realops_snomask@plt>
    1910:	mov	r0, r4
    1914:	bl	bdc <get_oper_name@plt>
    1918:	mov	r2, r0
    191c:	ldr	r1, [pc, #228]	; 1a08 <apply_undline+0x1b0>
    1920:	add	r1, pc, r1
    1924:	mov	r0, #7
    1928:	mov	r3, r6
    192c:	bl	c6c <ilog@plt>
    1930:	sub	sp, fp, #16
    1934:	pop	{r4, r5, r6, sl, fp, pc}
    1938:	ldr	r1, [pc, #180]	; 19f4 <apply_undline+0x19c>
    193c:	add	r1, pc, r1
    1940:	b	194c <apply_undline+0xf4>
    1944:	ldr	r1, [pc, #172]	; 19f8 <apply_undline+0x1a0>
    1948:	add	r1, pc, r1
    194c:	mov	r0, r4
    1950:	mov	r2, r6
    1954:	bl	c9c <sendto_one_notice@plt>
    1958:	sub	sp, fp, #16
    195c:	pop	{r4, r5, r6, sl, fp, pc}
    1960:	ldr	r1, [r5, #16]
    1964:	mov	r0, #1
    1968:	mov	r2, #0
    196c:	bl	ca8 <bandb_del@plt>
    1970:	ldr	r0, [r5, #16]
    1974:	str	r0, [sp]
    1978:	add	r3, r4, #88	; 0x58
    197c:	ldr	r0, [pc, #136]	; 1a0c <apply_undline+0x1b4>
    1980:	ldr	r0, [pc, r0]
    1984:	add	r2, r0, #88	; 0x58
    1988:	ldr	r1, [pc, #128]	; 1a10 <apply_undline+0x1b8>
    198c:	add	r1, pc, r1
    1990:	mov	r0, r4
    1994:	bl	ba0 <sendto_one@plt>
    1998:	mov	r0, r4
    199c:	bl	bdc <get_oper_name@plt>
    19a0:	mov	r3, r0
    19a4:	ldr	r0, [r5, #16]
    19a8:	str	r0, [sp]
    19ac:	ldr	r2, [pc, #96]	; 1a14 <apply_undline+0x1bc>
    19b0:	add	r2, pc, r2
    19b4:	mov	r0, #256	; 0x100
    19b8:	mov	r1, #0
    19bc:	bl	bc4 <sendto_realops_snomask@plt>
    19c0:	mov	r0, r4
    19c4:	bl	bdc <get_oper_name@plt>
    19c8:	mov	r2, r0
    19cc:	ldr	r3, [r5, #16]
    19d0:	ldr	r1, [pc, #64]	; 1a18 <apply_undline+0x1c0>
    19d4:	add	r1, pc, r1
    19d8:	mov	r0, #7
    19dc:	bl	c6c <ilog@plt>
    19e0:	ldr	r0, [r5, #16]
    19e4:	mov	r1, r5
    19e8:	bl	c60 <delete_one_address_conf@plt>
    19ec:	sub	sp, fp, #16
    19f0:	pop	{r4, r5, r6, sl, fp, pc}
    19f4:	.word	0x00000284
    19f8:	.word	0x00000517
    19fc:	.word	0x000117d4
    1a00:	.word	0x00000591
    1a04:	.word	0x000005a6
    1a08:	.word	0x000005b4
    1a0c:	.word	0x00011728
    1a10:	.word	0x00000551
    1a14:	.word	0x00000557
    1a18:	.word	0x00000500

00001a1c <remove_temp_dline>:
    1a1c:	push	{r4, r5, fp, lr}
    1a20:	add	fp, sp, #8
    1a24:	mov	r4, r0
    1a28:	mov	r0, #0
    1a2c:	ldr	r2, [pc, #104]	; 1a9c <remove_temp_dline+0x80>
    1a30:	ldr	r2, [pc, r2]
    1a34:	b	1a48 <remove_temp_dline+0x2c>
    1a38:	add	r0, r0, #1
    1a3c:	cmp	r0, #4
    1a40:	movcs	r0, #0
    1a44:	popcs	{r4, r5, fp, pc}
    1a48:	add	r3, r0, r0, lsl #1
    1a4c:	mov	r1, r2
    1a50:	ldr	r5, [r1, r3, lsl #2]!
    1a54:	cmp	r5, #0
    1a58:	bne	1a6c <remove_temp_dline+0x50>
    1a5c:	b	1a38 <remove_temp_dline+0x1c>
    1a60:	ldr	r5, [r5, #8]
    1a64:	cmp	r5, #0
    1a68:	beq	1a38 <remove_temp_dline+0x1c>
    1a6c:	ldr	r3, [r5]
    1a70:	cmp	r3, r4
    1a74:	bne	1a60 <remove_temp_dline+0x44>
    1a78:	mov	r0, r5
    1a7c:	bl	1aa0 <rb_dlinkDelete>
    1a80:	mov	r0, r5
    1a84:	bl	be8 <rb_free_rb_dlink_node@plt>
    1a88:	ldr	r0, [r4, #16]
    1a8c:	mov	r1, r4
    1a90:	bl	c60 <delete_one_address_conf@plt>
    1a94:	mov	r0, #1
    1a98:	pop	{r4, r5, fp, pc}
    1a9c:	.word	0x00011670

00001aa0 <rb_dlinkDelete>:
    1aa0:	push	{fp, lr}
    1aa4:	mov	fp, sp
    1aa8:	cmp	r0, #0
    1aac:	beq	1b00 <rb_dlinkDelete+0x60>
    1ab0:	cmp	r1, #0
    1ab4:	beq	1b20 <rb_dlinkDelete+0x80>
    1ab8:	ldr	ip, [r0, #4]
    1abc:	ldr	r3, [r0, #8]
    1ac0:	add	r2, r3, #4
    1ac4:	cmp	r3, #0
    1ac8:	addeq	r2, r1, #4
    1acc:	str	ip, [r2]
    1ad0:	ldmib	r0, {r2, ip}
    1ad4:	cmp	r2, #0
    1ad8:	mov	r3, r1
    1adc:	addne	r3, r2, #8
    1ae0:	str	ip, [r3]
    1ae4:	mov	r2, #0
    1ae8:	str	r2, [r0, #4]
    1aec:	str	r2, [r0, #8]
    1af0:	ldr	r0, [r1, #8]
    1af4:	sub	r0, r0, #1
    1af8:	str	r0, [r1, #8]
    1afc:	pop	{fp, pc}
    1b00:	ldr	r0, [pc, #56]	; 1b40 <rb_dlinkDelete+0xa0>
    1b04:	add	r0, pc, r0
    1b08:	ldr	r1, [pc, #52]	; 1b44 <rb_dlinkDelete+0xa4>
    1b0c:	add	r1, pc, r1
    1b10:	ldr	r3, [pc, #48]	; 1b48 <rb_dlinkDelete+0xa8>
    1b14:	add	r3, pc, r3
    1b18:	mov	r2, #235	; 0xeb
    1b1c:	bl	d08 <__assert_fail@plt>
    1b20:	ldr	r0, [pc, #36]	; 1b4c <rb_dlinkDelete+0xac>
    1b24:	add	r0, pc, r0
    1b28:	ldr	r1, [pc, #32]	; 1b50 <rb_dlinkDelete+0xb0>
    1b2c:	add	r1, pc, r1
    1b30:	ldr	r3, [pc, #28]	; 1b54 <rb_dlinkDelete+0xb4>
    1b34:	add	r3, pc, r3
    1b38:	mov	r2, #236	; 0xec
    1b3c:	bl	d08 <__assert_fail@plt>
    1b40:	.word	0x00000427
    1b44:	.word	0x00000429
    1b48:	.word	0x0000043d
    1b4c:	.word	0x00000463
    1b50:	.word	0x00000409
    1b54:	.word	0x0000041d

Disassembly of section .fini:

00001b58 <_fini>:
    1b58:	push	{r3, lr}
    1b5c:	pop	{r3, pc}
