
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011954 <.init>:
   11954:	push	{r3, lr}
   11958:	bl	11e60 <__assert_fail@plt+0x48>
   1195c:	pop	{r3, pc}

Disassembly of section .plt:

00011960 <calloc@plt-0x14>:
   11960:	push	{lr}		; (str lr, [sp, #-4]!)
   11964:	ldr	lr, [pc, #4]	; 11970 <calloc@plt-0x4>
   11968:	add	lr, pc, lr
   1196c:	ldr	pc, [lr, #8]!
   11970:	muleq	r1, r0, r6

00011974 <calloc@plt>:
   11974:	add	ip, pc, #0, 12
   11978:	add	ip, ip, #126976	; 0x1f000
   1197c:	ldr	pc, [ip, #1680]!	; 0x690

00011980 <fputs_unlocked@plt>:
   11980:	add	ip, pc, #0, 12
   11984:	add	ip, ip, #126976	; 0x1f000
   11988:	ldr	pc, [ip, #1672]!	; 0x688

0001198c <fsync@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #126976	; 0x1f000
   11994:	ldr	pc, [ip, #1664]!	; 0x680

00011998 <strcmp@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #126976	; 0x1f000
   119a0:	ldr	pc, [ip, #1656]!	; 0x678

000119a4 <strtol@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #126976	; 0x1f000
   119ac:	ldr	pc, [ip, #1648]!	; 0x670

000119b0 <setsockopt@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #126976	; 0x1f000
   119b8:	ldr	pc, [ip, #1640]!	; 0x668

000119bc <pause@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #126976	; 0x1f000
   119c4:	ldr	pc, [ip, #1632]!	; 0x660

000119c8 <printf@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #126976	; 0x1f000
   119d0:	ldr	pc, [ip, #1624]!	; 0x658

000119d4 <read@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #126976	; 0x1f000
   119dc:	ldr	pc, [ip, #1616]!	; 0x650

000119e0 <fflush@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #126976	; 0x1f000
   119e8:	ldr	pc, [ip, #1608]!	; 0x648

000119ec <utmpxname@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #126976	; 0x1f000
   119f4:	ldr	pc, [ip, #1600]!	; 0x640

000119f8 <sigprocmask@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #126976	; 0x1f000
   11a00:	ldr	pc, [ip, #1592]!	; 0x638

00011a04 <memmove@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #126976	; 0x1f000
   11a0c:	ldr	pc, [ip, #1584]!	; 0x630

00011a10 <strchrnul@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #126976	; 0x1f000
   11a18:	ldr	pc, [ip, #1576]!	; 0x628

00011a1c <free@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #126976	; 0x1f000
   11a24:	ldr	pc, [ip, #1568]!	; 0x620

00011a28 <gai_strerror@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #126976	; 0x1f000
   11a30:	ldr	pc, [ip, #1560]!	; 0x618

00011a34 <fgets@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #126976	; 0x1f000
   11a3c:	ldr	pc, [ip, #1552]!	; 0x610

00011a40 <strndup@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #126976	; 0x1f000
   11a48:	ldr	pc, [ip, #1544]!	; 0x608

00011a4c <_exit@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #126976	; 0x1f000
   11a54:	ldr	pc, [ip, #1536]!	; 0x600

00011a58 <memcpy@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #126976	; 0x1f000
   11a60:	ldr	pc, [ip, #1528]!	; 0x5f8

00011a64 <signal@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #126976	; 0x1f000
   11a6c:	ldr	pc, [ip, #1520]!	; 0x5f0

00011a70 <time@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #126976	; 0x1f000
   11a78:	ldr	pc, [ip, #1512]!	; 0x5e8

00011a7c <fwrite_unlocked@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #126976	; 0x1f000
   11a84:	ldr	pc, [ip, #1504]!	; 0x5e0

00011a88 <sleep@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #126976	; 0x1f000
   11a90:	ldr	pc, [ip, #1496]!	; 0x5d8

00011a94 <ctime@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #126976	; 0x1f000
   11a9c:	ldr	pc, [ip, #1488]!	; 0x5d0

00011aa0 <recvfrom@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #126976	; 0x1f000
   11aa8:	ldr	pc, [ip, #1480]!	; 0x5c8

00011aac <strdup@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #126976	; 0x1f000
   11ab4:	ldr	pc, [ip, #1472]!	; 0x5c0

00011ab8 <setutxent@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #126976	; 0x1f000
   11ac0:	ldr	pc, [ip, #1464]!	; 0x5b8

00011ac4 <alarm@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #126976	; 0x1f000
   11acc:	ldr	pc, [ip, #1456]!	; 0x5b0

00011ad0 <sysconf@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #126976	; 0x1f000
   11ad8:	ldr	pc, [ip, #1448]!	; 0x5a8

00011adc <unlink@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #126976	; 0x1f000
   11ae4:	ldr	pc, [ip, #1440]!	; 0x5a0

00011ae8 <dup2@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #126976	; 0x1f000
   11af0:	ldr	pc, [ip, #1432]!	; 0x598

00011af4 <realloc@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #126976	; 0x1f000
   11afc:	ldr	pc, [ip, #1424]!	; 0x590

00011b00 <chdir@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #126976	; 0x1f000
   11b08:	ldr	pc, [ip, #1416]!	; 0x588

00011b0c <strcasecmp@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #126976	; 0x1f000
   11b14:	ldr	pc, [ip, #1408]!	; 0x580

00011b18 <funlockfile@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #126976	; 0x1f000
   11b20:	ldr	pc, [ip, #1400]!	; 0x578

00011b24 <poll@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #126976	; 0x1f000
   11b2c:	ldr	pc, [ip, #1392]!	; 0x570

00011b30 <sigaction@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #126976	; 0x1f000
   11b38:	ldr	pc, [ip, #1384]!	; 0x568

00011b3c <fwrite@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #126976	; 0x1f000
   11b44:	ldr	pc, [ip, #1376]!	; 0x560

00011b48 <strcat@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #126976	; 0x1f000
   11b50:	ldr	pc, [ip, #1368]!	; 0x558

00011b54 <waitpid@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #126976	; 0x1f000
   11b5c:	ldr	pc, [ip, #1360]!	; 0x550

00011b60 <strcpy@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #126976	; 0x1f000
   11b68:	ldr	pc, [ip, #1352]!	; 0x548

00011b6c <error@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #126976	; 0x1f000
   11b74:	ldr	pc, [ip, #1344]!	; 0x540

00011b78 <gethostname@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #126976	; 0x1f000
   11b80:	ldr	pc, [ip, #1336]!	; 0x538

00011b84 <opendir@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #126976	; 0x1f000
   11b8c:	ldr	pc, [ip, #1328]!	; 0x530

00011b90 <open64@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #126976	; 0x1f000
   11b98:	ldr	pc, [ip, #1320]!	; 0x528

00011b9c <getenv@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #126976	; 0x1f000
   11ba4:	ldr	pc, [ip, #1312]!	; 0x520

00011ba8 <malloc@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #126976	; 0x1f000
   11bb0:	ldr	pc, [ip, #1304]!	; 0x518

00011bb4 <sigaddset@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #126976	; 0x1f000
   11bbc:	ldr	pc, [ip, #1296]!	; 0x510

00011bc0 <__libc_start_main@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #126976	; 0x1f000
   11bc8:	ldr	pc, [ip, #1288]!	; 0x508

00011bcc <strerror@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #126976	; 0x1f000
   11bd4:	ldr	pc, [ip, #1280]!	; 0x500

00011bd8 <__ctype_tolower_loc@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #126976	; 0x1f000
   11be0:	ldr	pc, [ip, #1272]!	; 0x4f8

00011be4 <__gmon_start__@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #126976	; 0x1f000
   11bec:	ldr	pc, [ip, #1264]!	; 0x4f0

00011bf0 <kill@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #126976	; 0x1f000
   11bf8:	ldr	pc, [ip, #1256]!	; 0x4e8

00011bfc <__ctype_b_loc@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #126976	; 0x1f000
   11c04:	ldr	pc, [ip, #1248]!	; 0x4e0

00011c08 <getpid@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #126976	; 0x1f000
   11c10:	ldr	pc, [ip, #1240]!	; 0x4d8

00011c14 <exit@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #126976	; 0x1f000
   11c1c:	ldr	pc, [ip, #1232]!	; 0x4d0

00011c20 <strlen@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #126976	; 0x1f000
   11c28:	ldr	pc, [ip, #1224]!	; 0x4c8

00011c2c <setsid@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #126976	; 0x1f000
   11c34:	ldr	pc, [ip, #1216]!	; 0x4c0

00011c38 <strchr@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #126976	; 0x1f000
   11c40:	ldr	pc, [ip, #1208]!	; 0x4b8

00011c44 <fprintf@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #126976	; 0x1f000
   11c4c:	ldr	pc, [ip, #1200]!	; 0x4b0

00011c50 <__errno_location@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #126976	; 0x1f000
   11c58:	ldr	pc, [ip, #1192]!	; 0x4a8

00011c5c <snprintf@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #126976	; 0x1f000
   11c64:	ldr	pc, [ip, #1184]!	; 0x4a0

00011c68 <strerror_r@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #126976	; 0x1f000
   11c70:	ldr	pc, [ip, #1176]!	; 0x498

00011c74 <bind@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #126976	; 0x1f000
   11c7c:	ldr	pc, [ip, #1168]!	; 0x490

00011c80 <setvbuf@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #126976	; 0x1f000
   11c88:	ldr	pc, [ip, #1160]!	; 0x488

00011c8c <memset@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #126976	; 0x1f000
   11c94:	ldr	pc, [ip, #1152]!	; 0x480

00011c98 <strncpy@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #126976	; 0x1f000
   11ca0:	ldr	pc, [ip, #1144]!	; 0x478

00011ca4 <asprintf@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #126976	; 0x1f000
   11cac:	ldr	pc, [ip, #1136]!	; 0x470

00011cb0 <memchr@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #126976	; 0x1f000
   11cb8:	ldr	pc, [ip, #1128]!	; 0x468

00011cbc <writev@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #126976	; 0x1f000
   11cc4:	ldr	pc, [ip, #1120]!	; 0x460

00011cc8 <fclose@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #126976	; 0x1f000
   11cd0:	ldr	pc, [ip, #1112]!	; 0x458

00011cd4 <fcntl64@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #126976	; 0x1f000
   11cdc:	ldr	pc, [ip, #1104]!	; 0x450

00011ce0 <sendto@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #126976	; 0x1f000
   11ce8:	ldr	pc, [ip, #1096]!	; 0x448

00011cec <endutxent@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #126976	; 0x1f000
   11cf4:	ldr	pc, [ip, #1088]!	; 0x440

00011cf8 <__overflow@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #126976	; 0x1f000
   11d00:	ldr	pc, [ip, #1080]!	; 0x438

00011d04 <sigemptyset@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #126976	; 0x1f000
   11d0c:	ldr	pc, [ip, #1072]!	; 0x430

00011d10 <fork@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #126976	; 0x1f000
   11d18:	ldr	pc, [ip, #1064]!	; 0x428

00011d1c <getnameinfo@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #126976	; 0x1f000
   11d24:	ldr	pc, [ip, #1056]!	; 0x420

00011d28 <strrchr@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #126976	; 0x1f000
   11d30:	ldr	pc, [ip, #1048]!	; 0x418

00011d34 <vfprintf@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #126976	; 0x1f000
   11d3c:	ldr	pc, [ip, #1040]!	; 0x410

00011d40 <fputc@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #126976	; 0x1f000
   11d48:	ldr	pc, [ip, #1032]!	; 0x408

00011d4c <readdir64@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #126976	; 0x1f000
   11d54:	ldr	pc, [ip, #1024]!	; 0x400

00011d58 <flockfile@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #126976	; 0x1f000
   11d60:	ldr	pc, [ip, #1016]!	; 0x3f8

00011d64 <vsnprintf@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #126976	; 0x1f000
   11d6c:	ldr	pc, [ip, #1008]!	; 0x3f0

00011d70 <fopen64@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #126976	; 0x1f000
   11d78:	ldr	pc, [ip, #1000]!	; 0x3e8

00011d7c <qsort@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #126976	; 0x1f000
   11d84:	ldr	pc, [ip, #992]!	; 0x3e0

00011d88 <strpbrk@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #126976	; 0x1f000
   11d90:	ldr	pc, [ip, #984]!	; 0x3d8

00011d94 <freeaddrinfo@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #126976	; 0x1f000
   11d9c:	ldr	pc, [ip, #976]!	; 0x3d0

00011da0 <getaddrinfo@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #126976	; 0x1f000
   11da8:	ldr	pc, [ip, #968]!	; 0x3c8

00011dac <socket@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #126976	; 0x1f000
   11db4:	ldr	pc, [ip, #960]!	; 0x3c0

00011db8 <chmod@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #126976	; 0x1f000
   11dc0:	ldr	pc, [ip, #952]!	; 0x3b8

00011dc4 <__xstat64@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #126976	; 0x1f000
   11dcc:	ldr	pc, [ip, #944]!	; 0x3b0

00011dd0 <isatty@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #126976	; 0x1f000
   11dd8:	ldr	pc, [ip, #936]!	; 0x3a8

00011ddc <strncmp@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #126976	; 0x1f000
   11de4:	ldr	pc, [ip, #928]!	; 0x3a0

00011de8 <abort@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #126976	; 0x1f000
   11df0:	ldr	pc, [ip, #920]!	; 0x398

00011df4 <getutxent@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #126976	; 0x1f000
   11dfc:	ldr	pc, [ip, #912]!	; 0x390

00011e00 <close@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #126976	; 0x1f000
   11e08:	ldr	pc, [ip, #904]!	; 0x388

00011e0c <closedir@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #126976	; 0x1f000
   11e14:	ldr	pc, [ip, #896]!	; 0x380

00011e18 <__assert_fail@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #126976	; 0x1f000
   11e20:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00011e24 <daemon@@Base-0x444c>:
   11e24:	mov	fp, #0
   11e28:	mov	lr, #0
   11e2c:	pop	{r1}		; (ldr r1, [sp], #4)
   11e30:	mov	r2, sp
   11e34:	push	{r2}		; (str r2, [sp, #-4]!)
   11e38:	push	{r0}		; (str r0, [sp, #-4]!)
   11e3c:	ldr	ip, [pc, #16]	; 11e54 <__assert_fail@plt+0x3c>
   11e40:	push	{ip}		; (str ip, [sp, #-4]!)
   11e44:	ldr	r0, [pc, #12]	; 11e58 <__assert_fail@plt+0x40>
   11e48:	ldr	r3, [pc, #12]	; 11e5c <__assert_fail@plt+0x44>
   11e4c:	bl	11bc0 <__libc_start_main@plt>
   11e50:	bl	11de8 <abort@plt>
   11e54:	andeq	lr, r1, r4, asr r9
   11e58:	andeq	r1, r1, r4, lsl pc
   11e5c:	strdeq	lr, [r1], -r4
   11e60:	ldr	r3, [pc, #20]	; 11e7c <__assert_fail@plt+0x64>
   11e64:	ldr	r2, [pc, #20]	; 11e80 <__assert_fail@plt+0x68>
   11e68:	add	r3, pc, r3
   11e6c:	ldr	r2, [r3, r2]
   11e70:	cmp	r2, #0
   11e74:	bxeq	lr
   11e78:	b	11be4 <__gmon_start__@plt>
   11e7c:	muleq	r1, r0, r1
   11e80:	muleq	r0, ip, r1
   11e84:	ldr	r0, [pc, #24]	; 11ea4 <__assert_fail@plt+0x8c>
   11e88:	ldr	r3, [pc, #24]	; 11ea8 <__assert_fail@plt+0x90>
   11e8c:	cmp	r3, r0
   11e90:	bxeq	lr
   11e94:	ldr	r3, [pc, #16]	; 11eac <__assert_fail@plt+0x94>
   11e98:	cmp	r3, #0
   11e9c:	bxeq	lr
   11ea0:	bx	r3
   11ea4:			; <UNDEFINED> instruction: 0x000315b4
   11ea8:			; <UNDEFINED> instruction: 0x000315b4
   11eac:	andeq	r0, r0, r0
   11eb0:	ldr	r0, [pc, #36]	; 11edc <__assert_fail@plt+0xc4>
   11eb4:	ldr	r1, [pc, #36]	; 11ee0 <__assert_fail@plt+0xc8>
   11eb8:	sub	r1, r1, r0
   11ebc:	asr	r1, r1, #2
   11ec0:	add	r1, r1, r1, lsr #31
   11ec4:	asrs	r1, r1, #1
   11ec8:	bxeq	lr
   11ecc:	ldr	r3, [pc, #16]	; 11ee4 <__assert_fail@plt+0xcc>
   11ed0:	cmp	r3, #0
   11ed4:	bxeq	lr
   11ed8:	bx	r3
   11edc:			; <UNDEFINED> instruction: 0x000315b4
   11ee0:			; <UNDEFINED> instruction: 0x000315b4
   11ee4:	andeq	r0, r0, r0
   11ee8:	push	{r4, lr}
   11eec:	ldr	r4, [pc, #24]	; 11f0c <__assert_fail@plt+0xf4>
   11ef0:	ldrb	r3, [r4]
   11ef4:	cmp	r3, #0
   11ef8:	popne	{r4, pc}
   11efc:	bl	11e84 <__assert_fail@plt+0x6c>
   11f00:	mov	r3, #1
   11f04:	strb	r3, [r4]
   11f08:	pop	{r4, pc}
   11f0c:	andeq	r1, r3, r8, asr #11
   11f10:	b	11eb0 <__assert_fail@plt+0x98>
   11f14:	push	{r4, r5, fp, lr}
   11f18:	add	fp, sp, #8
   11f1c:	sub	sp, sp, #312	; 0x138
   11f20:	sub	sp, sp, #2048	; 0x800
   11f24:	mov	r5, r0
   11f28:	ldr	r0, [r1]
   11f2c:	mov	r4, r1
   11f30:	bl	1bb3c <argp_parse@@Base+0x16ac>
   11f34:	movw	r6, #7200	; 0x1c20
   11f38:	movw	r7, #7296	; 0x1c80
   11f3c:	mov	r1, #8
   11f40:	movt	r6, #3
   11f44:	movt	r7, #3
   11f48:	ldr	r0, [r6]
   11f4c:	add	r1, r1, r0, lsl #3
   11f50:	ldr	r0, [r7]
   11f54:	bl	1caa8 <argp_parse@@Base+0x2618>
   11f58:	mov	r3, r7
   11f5c:	cmp	r0, #0
   11f60:	str	r0, [r7]
   11f64:	bne	11f8c <__assert_fail@plt+0x174>
   11f68:	bl	11c50 <__errno_location@plt>
   11f6c:	ldr	r1, [r0]
   11f70:	movw	r2, #62979	; 0xf603
   11f74:	mov	r0, #1
   11f78:	movt	r2, #1
   11f7c:	bl	11b6c <error@plt>
   11f80:	movw	r3, #7296	; 0x1c80
   11f84:	movt	r3, #3
   11f88:	ldr	r0, [r3]
   11f8c:	ldr	r1, [r6]
   11f90:	movw	r2, #62855	; 0xf587
   11f94:	movt	r2, #1
   11f98:	str	r2, [r0, r1, lsl #3]
   11f9c:	ldr	r0, [r3]
   11fa0:	add	r0, r0, r1, lsl #3
   11fa4:	mvn	r1, #0
   11fa8:	str	r1, [r0, #4]
   11fac:	movw	r0, #8332	; 0x208c
   11fb0:	movw	r1, #60096	; 0xeac0
   11fb4:	movt	r0, #3
   11fb8:	movt	r1, #1
   11fbc:	str	r1, [r0]
   11fc0:	ldr	r0, [r6]
   11fc4:	movw	r1, #5488	; 0x1570
   11fc8:	movt	r1, #3
   11fcc:	add	r0, r0, #1
   11fd0:	str	r0, [r6]
   11fd4:	movw	r0, #60120	; 0xead8
   11fd8:	movt	r0, #1
   11fdc:	bl	1b778 <argp_parse@@Base+0x12e8>
   11fe0:	mov	r0, #0
   11fe4:	mov	r1, r5
   11fe8:	mov	r2, r4
   11fec:	mov	r3, #0
   11ff0:	str	r0, [sp]
   11ff4:	str	r0, [sp, #4]
   11ff8:	movw	r0, #5400	; 0x1518
   11ffc:	movt	r0, #3
   12000:	mov	sl, r0
   12004:	add	r0, r0, #60	; 0x3c
   12008:	bl	1a490 <argp_parse@@Base>
   1200c:	movw	r7, #5584	; 0x15d0
   12010:	movw	r0, #61785	; 0xf159
   12014:	vmov.i32	q8, #0	; 0x00000000
   12018:	sub	r2, fp, #1040	; 0x410
   1201c:	movw	r5, #59867	; 0xe9db
   12020:	add	r9, sp, #296	; 0x128
   12024:	movt	r7, #3
   12028:	movt	r0, #1
   1202c:	add	r6, r2, #4
   12030:	movt	r5, #1
   12034:	add	r8, r2, #16
   12038:	mov	r3, r9
   1203c:	ldr	r4, [r7, #8]
   12040:	str	r0, [r7, #16]
   12044:	mov	r0, #1
   12048:	vst1.32	{d16-d17}, [r6]
   1204c:	vst1.32	{d16-d17}, [r8]
   12050:	mov	r1, r5
   12054:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12058:	mov	r0, #2
   1205c:	str	r0, [fp, #-1032]	; 0xfffffbf8
   12060:	mov	r0, #0
   12064:	bl	11da0 <getaddrinfo@plt>
   12068:	cmp	r0, #0
   1206c:	beq	120d0 <__assert_fail@plt+0x2b8>
   12070:	cmp	r4, #0
   12074:	str	r4, [r7, #12]
   12078:	beq	120e8 <__assert_fail@plt+0x2d0>
   1207c:	vmov.i32	q8, #0	; 0x00000000
   12080:	mov	r0, #12
   12084:	mov	r1, r6
   12088:	sub	r2, fp, #1040	; 0x410
   1208c:	add	r3, sp, #296	; 0x128
   12090:	mov	r5, #0
   12094:	vst1.32	{d16-d17}, [r1], r0
   12098:	mov	r0, #1
   1209c:	vst1.32	{d16-d17}, [r1]
   120a0:	str	r0, [fp, #-1040]	; 0xfffffbf0
   120a4:	mov	r0, #2
   120a8:	mov	r1, r4
   120ac:	str	r0, [fp, #-1032]	; 0xfffffbf8
   120b0:	mov	r0, #0
   120b4:	bl	11da0 <getaddrinfo@plt>
   120b8:	cmp	r0, #0
   120bc:	beq	120f4 <__assert_fail@plt+0x2dc>
   120c0:	movw	r7, #5584	; 0x15d0
   120c4:	movt	r7, #3
   120c8:	str	r5, [r7, #12]
   120cc:	b	12104 <__assert_fail@plt+0x2ec>
   120d0:	ldr	r0, [sp, #296]	; 0x128
   120d4:	str	r5, [r7, #16]
   120d8:	bl	11d94 <freeaddrinfo@plt>
   120dc:	cmp	r4, #0
   120e0:	str	r4, [r7, #12]
   120e4:	bne	1207c <__assert_fail@plt+0x264>
   120e8:	ldr	r0, [r7, #16]
   120ec:	str	r0, [r7, #12]
   120f0:	b	12104 <__assert_fail@plt+0x2ec>
   120f4:	ldr	r0, [sp, #296]	; 0x128
   120f8:	bl	11d94 <freeaddrinfo@plt>
   120fc:	movw	r7, #5584	; 0x15d0
   12100:	movt	r7, #3
   12104:	movw	r0, #7228	; 0x1c3c
   12108:	movt	r0, #3
   1210c:	ldr	r0, [r0]
   12110:	cmp	r0, #0
   12114:	beq	12158 <__assert_fail@plt+0x340>
   12118:	movw	r0, #7204	; 0x1c24
   1211c:	mov	r1, #0
   12120:	mov	r2, #1
   12124:	mov	r3, #0
   12128:	movt	r0, #3
   1212c:	str	r1, [sp, #8]
   12130:	mov	r1, #0
   12134:	ldr	r0, [r0]
   12138:	cmp	r0, #0
   1213c:	movne	r0, #1
   12140:	strne	r0, [r7, #24]
   12144:	movw	r0, #5572	; 0x15c4
   12148:	movt	r0, #3
   1214c:	ldr	r0, [r0]
   12150:	bl	11c80 <setvbuf@plt>
   12154:	b	1219c <__assert_fail@plt+0x384>
   12158:	movw	r1, #12060	; 0x2f1c
   1215c:	mov	r0, #15
   12160:	movt	r1, #1
   12164:	bl	11a64 <signal@plt>
   12168:	mov	r0, #0
   1216c:	mov	r1, #0
   12170:	mov	r2, #30
   12174:	bl	16128 <__assert_fail@plt+0x4310>
   12178:	cmn	r0, #1
   1217c:	str	r0, [sp, #8]
   12180:	bgt	1219c <__assert_fail@plt+0x384>
   12184:	bl	11c50 <__errno_location@plt>
   12188:	ldr	r1, [r0]
   1218c:	movw	r2, #60128	; 0xeae0
   12190:	mov	r0, #1
   12194:	movt	r2, #1
   12198:	bl	11b6c <error@plt>
   1219c:	bl	1628c <daemon@@Base+0x1c>
   121a0:	mov	r4, r0
   121a4:	movw	r0, #7224	; 0x1c38
   121a8:	movt	r0, #3
   121ac:	cmp	r4, #0
   121b0:	str	r4, [r0]
   121b4:	bne	121dc <__assert_fail@plt+0x3c4>
   121b8:	bl	11c50 <__errno_location@plt>
   121bc:	ldr	r1, [r0]
   121c0:	movw	r2, #60152	; 0xeaf8
   121c4:	mov	r0, #1
   121c8:	movt	r2, #1
   121cc:	bl	11b6c <error@plt>
   121d0:	movw	r0, #7224	; 0x1c38
   121d4:	movt	r0, #3
   121d8:	ldr	r4, [r0]
   121dc:	mov	r0, r4
   121e0:	mov	r1, #46	; 0x2e
   121e4:	bl	11c38 <strchr@plt>
   121e8:	movw	r5, #7220	; 0x1c34
   121ec:	cmp	r0, #0
   121f0:	movt	r5, #3
   121f4:	beq	12214 <__assert_fail@plt+0x3fc>
   121f8:	mov	r1, #0
   121fc:	movw	r8, #7200	; 0x1c20
   12200:	strb	r1, [r0], #1
   12204:	mov	r1, sl
   12208:	movt	r8, #3
   1220c:	str	r0, [r5]
   12210:	b	122a0 <__assert_fail@plt+0x488>
   12214:	vmov.i32	q8, #0	; 0x00000000
   12218:	mov	r0, #2
   1221c:	add	r3, sp, #296	; 0x128
   12220:	mov	r1, #0
   12224:	sub	r2, fp, #1040	; 0x410
   12228:	vst1.32	{d16-d17}, [r6]
   1222c:	vst1.32	{d16-d17}, [r8]
   12230:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12234:	mov	r0, r4
   12238:	bl	11da0 <getaddrinfo@plt>
   1223c:	cmp	r0, #0
   12240:	bne	12288 <__assert_fail@plt+0x470>
   12244:	movw	r0, #7224	; 0x1c38
   12248:	movt	r0, #3
   1224c:	mov	r4, r0
   12250:	ldr	r0, [r0]
   12254:	bl	1ba4c <argp_parse@@Base+0x15bc>
   12258:	ldr	r0, [sp, #296]	; 0x128
   1225c:	ldr	r0, [r0, #24]
   12260:	bl	11aac <strdup@plt>
   12264:	mov	r1, #46	; 0x2e
   12268:	str	r0, [r4]
   1226c:	bl	11c38 <strchr@plt>
   12270:	cmp	r0, #0
   12274:	movne	r1, #0
   12278:	strbne	r1, [r0], #1
   1227c:	strne	r0, [r5]
   12280:	ldr	r0, [sp, #296]	; 0x128
   12284:	bl	11d94 <freeaddrinfo@plt>
   12288:	ldr	r0, [r5]
   1228c:	movw	r8, #7200	; 0x1c20
   12290:	mov	r1, sl
   12294:	movt	r8, #3
   12298:	cmp	r0, #0
   1229c:	beq	12404 <__assert_fail@plt+0x5ec>
   122a0:	movw	r4, #6732	; 0x1a4c
   122a4:	mov	r0, #3
   122a8:	movt	r4, #3
   122ac:	strh	r0, [r4, #4]
   122b0:	add	r0, r1, #44	; 0x2c
   122b4:	bl	11aac <strdup@plt>
   122b8:	str	r0, [r4, #40]	; 0x28
   122bc:	movw	r4, #12076	; 0x2f2c
   122c0:	mov	r0, #15
   122c4:	movt	r4, #1
   122c8:	mov	r1, r4
   122cc:	bl	11a64 <signal@plt>
   122d0:	movw	r5, #7228	; 0x1c3c
   122d4:	mov	r1, r4
   122d8:	movt	r5, #3
   122dc:	ldr	r0, [r5]
   122e0:	cmp	r0, #0
   122e4:	mov	r0, #2
   122e8:	movweq	r1, #1
   122ec:	bl	11a64 <signal@plt>
   122f0:	ldr	r0, [r5]
   122f4:	cmp	r0, #0
   122f8:	mov	r0, #3
   122fc:	movweq	r4, #1
   12300:	mov	r1, r4
   12304:	bl	11a64 <signal@plt>
   12308:	mov	r0, #268435456	; 0x10000000
   1230c:	add	r4, sp, #156	; 0x9c
   12310:	str	r0, [sp, #288]	; 0x120
   12314:	add	r0, r4, #4
   12318:	bl	11d04 <sigemptyset@plt>
   1231c:	movw	r0, #12480	; 0x30c0
   12320:	mov	r1, r4
   12324:	mov	r2, #0
   12328:	mov	r6, #0
   1232c:	movt	r0, #1
   12330:	str	r0, [sp, #156]	; 0x9c
   12334:	mov	r0, #14
   12338:	bl	11b30 <sigaction@plt>
   1233c:	ldr	r0, [r5]
   12340:	movw	r1, #12796	; 0x31fc
   12344:	mov	r2, #0
   12348:	movt	r1, #1
   1234c:	cmp	r0, #0
   12350:	mov	r0, #10
   12354:	movweq	r1, #1
   12358:	str	r1, [sp, #156]	; 0x9c
   1235c:	mov	r1, r4
   12360:	bl	11b30 <sigaction@plt>
   12364:	mov	r0, #30
   12368:	bl	11ac4 <alarm@plt>
   1236c:	ldr	r0, [r8]
   12370:	mov	r1, #24
   12374:	add	r0, r1, r0, lsl #3
   12378:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1237c:	mov	r7, r0
   12380:	cmp	r0, #0
   12384:	bne	123a0 <__assert_fail@plt+0x588>
   12388:	bl	11c50 <__errno_location@plt>
   1238c:	ldr	r1, [r0]
   12390:	movw	r2, #60178	; 0xeb12
   12394:	mov	r0, #1
   12398:	movt	r2, #1
   1239c:	bl	11b6c <error@plt>
   123a0:	bl	1324c <__assert_fail@plt+0x1434>
   123a4:	movw	r0, #6716	; 0x1a3c
   123a8:	movt	r0, #3
   123ac:	ldr	r0, [r0]
   123b0:	cmp	r0, #0
   123b4:	bne	1243c <__assert_fail@plt+0x624>
   123b8:	movw	r0, #62522	; 0xf43a
   123bc:	mov	r1, #0
   123c0:	mov	r2, #0
   123c4:	mov	r6, #0
   123c8:	movt	r0, #1
   123cc:	bl	11b90 <open64@plt>
   123d0:	cmp	r0, #0
   123d4:	str	r0, [sl, #16]
   123d8:	bmi	12418 <__assert_fail@plt+0x600>
   123dc:	mov	r1, #3
   123e0:	strh	r1, [r7, #4]
   123e4:	movw	r1, #62522	; 0xf43a
   123e8:	str	r0, [r7]
   123ec:	movw	r0, #60202	; 0xeb2a
   123f0:	movt	r0, #1
   123f4:	movt	r1, #1
   123f8:	bl	13680 <__assert_fail@plt+0x1868>
   123fc:	mov	r6, #1
   12400:	b	1243c <__assert_fail@plt+0x624>
   12404:	movw	r0, #63437	; 0xf7cd
   12408:	movt	r0, #1
   1240c:	bl	11aac <strdup@plt>
   12410:	mov	r1, sl
   12414:	b	1220c <__assert_fail@plt+0x3f4>
   12418:	bl	11c50 <__errno_location@plt>
   1241c:	ldr	r0, [r0]
   12420:	bl	11bcc <strerror@plt>
   12424:	movw	r1, #62522	; 0xf43a
   12428:	mov	r2, r0
   1242c:	movw	r0, #60216	; 0xeb38
   12430:	movt	r0, #1
   12434:	movt	r1, #1
   12438:	bl	13680 <__assert_fail@plt+0x1868>
   1243c:	movw	r0, #7208	; 0x1c28
   12440:	movt	r0, #3
   12444:	ldr	r0, [r0]
   12448:	cmp	r0, #0
   1244c:	bne	126bc <__assert_fail@plt+0x8a4>
   12450:	ldr	r0, [r8]
   12454:	mov	r2, sl
   12458:	cmp	r0, #0
   1245c:	beq	126c0 <__assert_fail@plt+0x8a8>
   12460:	add	r0, sp, #296	; 0x128
   12464:	vmov.i32	q4, #0	; 0x00000000
   12468:	mov	r4, #0
   1246c:	orr	r0, r0, #2
   12470:	add	r1, r0, #16
   12474:	str	r0, [sp, #20]
   12478:	add	r0, r0, #32
   1247c:	str	r1, [sp, #16]
   12480:	movw	r1, #7296	; 0x1c80
   12484:	str	r0, [sp, #12]
   12488:	movt	r1, #3
   1248c:	b	124e4 <__assert_fail@plt+0x6cc>
   12490:	ldr	r5, [r0, r4, lsl #3]
   12494:	mov	r8, r9
   12498:	mov	r9, r2
   1249c:	bl	11c50 <__errno_location@plt>
   124a0:	ldr	r0, [r0]
   124a4:	bl	11bcc <strerror@plt>
   124a8:	mov	r2, r0
   124ac:	movw	r0, #60216	; 0xeb38
   124b0:	mov	r1, r5
   124b4:	movt	r0, #1
   124b8:	bl	13680 <__assert_fail@plt+0x1868>
   124bc:	movw	r1, #7296	; 0x1c80
   124c0:	mov	r2, r9
   124c4:	mov	r9, r8
   124c8:	movw	r8, #7200	; 0x1c20
   124cc:	movt	r1, #3
   124d0:	movt	r8, #3
   124d4:	ldr	r0, [r8]
   124d8:	add	r4, r4, #1
   124dc:	cmp	r4, r0
   124e0:	bcs	126c0 <__assert_fail@plt+0x8a8>
   124e4:	ldr	r0, [r1]
   124e8:	mvn	sl, #0
   124ec:	ldr	r5, [r0, r4, lsl #3]
   124f0:	ldrb	r0, [r5]
   124f4:	cmp	r0, #0
   124f8:	beq	12660 <__assert_fail@plt+0x848>
   124fc:	mov	r0, r5
   12500:	mov	r8, r9
   12504:	mov	r9, r2
   12508:	bl	11c20 <strlen@plt>
   1250c:	cmp	r0, #108	; 0x6c
   12510:	bcc	12540 <__assert_fail@plt+0x728>
   12514:	movw	r2, #63018	; 0xf62a
   12518:	sub	r0, fp, #1040	; 0x410
   1251c:	movw	r1, #1025	; 0x401
   12520:	mov	r3, r5
   12524:	movt	r2, #1
   12528:	bl	11c5c <snprintf@plt>
   1252c:	sub	r0, fp, #1040	; 0x410
   12530:	bl	1370c <__assert_fail@plt+0x18f4>
   12534:	mov	r2, r9
   12538:	mov	r9, r8
   1253c:	b	12650 <__assert_fail@plt+0x838>
   12540:	mov	r0, r5
   12544:	bl	11adc <unlink@plt>
   12548:	ldr	r0, [sp, #16]
   1254c:	mov	r2, #92	; 0x5c
   12550:	add	lr, sp, #256	; 0x100
   12554:	vst1.16	{d8-d9}, [r0]
   12558:	ldr	r0, [sp, #12]
   1255c:	vst1.16	{d8-d9}, [r0]
   12560:	ldr	r0, [sp, #20]
   12564:	add	r1, r0, #48	; 0x30
   12568:	vst1.16	{d8-d9}, [r1]
   1256c:	add	r1, r0, #64	; 0x40
   12570:	vst1.16	{d8-d9}, [r1]
   12574:	add	r1, r0, #80	; 0x50
   12578:	vst1.16	{d8-d9}, [r1]
   1257c:	mov	r1, r0
   12580:	vst1.16	{d8-d9}, [r1], r2
   12584:	mov	r2, #107	; 0x6b
   12588:	vst1.16	{d8-d9}, [r1]
   1258c:	mov	r1, #1
   12590:	strh	r1, [lr, #40]	; 0x28
   12594:	mov	r1, r5
   12598:	bl	11c98 <strncpy@plt>
   1259c:	mov	r0, #1
   125a0:	mov	r1, #2
   125a4:	mov	r2, #0
   125a8:	bl	11dac <socket@plt>
   125ac:	mov	r9, r0
   125b0:	cmp	r0, #0
   125b4:	bmi	125f4 <__assert_fail@plt+0x7dc>
   125b8:	ldr	r0, [sp, #20]
   125bc:	bl	11c20 <strlen@plt>
   125c0:	add	r2, r0, #2
   125c4:	mov	r0, r9
   125c8:	add	r1, sp, #296	; 0x128
   125cc:	bl	11c74 <bind@plt>
   125d0:	cmp	r0, #0
   125d4:	bmi	125f4 <__assert_fail@plt+0x7dc>
   125d8:	mov	r0, r5
   125dc:	movw	r1, #438	; 0x1b6
   125e0:	bl	11db8 <chmod@plt>
   125e4:	cmn	r0, #1
   125e8:	ble	125f4 <__assert_fail@plt+0x7dc>
   125ec:	mov	sl, r9
   125f0:	b	12640 <__assert_fail@plt+0x828>
   125f4:	movw	r2, #63048	; 0xf648
   125f8:	sub	r8, fp, #1040	; 0x410
   125fc:	movw	r1, #1025	; 0x401
   12600:	mov	r3, r5
   12604:	movt	r2, #1
   12608:	mov	r0, r8
   1260c:	bl	11c5c <snprintf@plt>
   12610:	mov	r0, r8
   12614:	bl	1370c <__assert_fail@plt+0x18f4>
   12618:	bl	11c50 <__errno_location@plt>
   1261c:	ldr	r0, [r0]
   12620:	bl	11bcc <strerror@plt>
   12624:	mov	r2, r0
   12628:	movw	r0, #63065	; 0xf659
   1262c:	mov	r1, r5
   12630:	movt	r0, #1
   12634:	bl	13680 <__assert_fail@plt+0x1868>
   12638:	mov	r0, r9
   1263c:	bl	11e00 <close@plt>
   12640:	movw	r9, #5400	; 0x1518
   12644:	movt	r9, #3
   12648:	mov	r2, r9
   1264c:	add	r9, sp, #296	; 0x128
   12650:	movw	r8, #7200	; 0x1c20
   12654:	movw	r1, #7296	; 0x1c80
   12658:	movt	r8, #3
   1265c:	movt	r1, #3
   12660:	ldr	r0, [r1]
   12664:	cmp	sl, #0
   12668:	add	r1, r0, r4, lsl #3
   1266c:	str	sl, [r1, #4]
   12670:	bmi	12490 <__assert_fail@plt+0x678>
   12674:	mov	r1, r7
   12678:	mov	r3, #3
   1267c:	mov	r5, r2
   12680:	str	sl, [r1, r6, lsl #3]!
   12684:	strh	r3, [r1, #4]
   12688:	ldr	r1, [r0, r4, lsl #3]
   1268c:	movw	r0, #60235	; 0xeb4b
   12690:	movt	r0, #1
   12694:	bl	13680 <__assert_fail@plt+0x1868>
   12698:	movw	r1, #7296	; 0x1c80
   1269c:	mov	r2, r5
   126a0:	add	r6, r6, #1
   126a4:	movt	r1, #3
   126a8:	ldr	r0, [r8]
   126ac:	add	r4, r4, #1
   126b0:	cmp	r4, r0
   126b4:	bcc	124e4 <__assert_fail@plt+0x6cc>
   126b8:	b	126c0 <__assert_fail@plt+0x8a8>
   126bc:	mov	r2, sl
   126c0:	movw	r0, #6720	; 0x1a40
   126c4:	movt	r0, #3
   126c8:	ldr	r0, [r0]
   126cc:	cmp	r0, #0
   126d0:	beq	12800 <__assert_fail@plt+0x9e8>
   126d4:	movw	r3, #5584	; 0x15d0
   126d8:	mvn	r0, #0
   126dc:	movt	r3, #3
   126e0:	str	r0, [r2, #36]	; 0x24
   126e4:	str	r0, [r2, #40]	; 0x28
   126e8:	ldr	r1, [r3, #12]
   126ec:	cmp	r1, #0
   126f0:	beq	1274c <__assert_fail@plt+0x934>
   126f4:	ldr	r0, [r2, #12]
   126f8:	vmov.i32	q8, #0	; 0x00000000
   126fc:	mov	r8, r2
   12700:	sub	r2, fp, #1040	; 0x410
   12704:	mov	r4, #0
   12708:	add	r5, r2, #12
   1270c:	str	r4, [fp, #-1012]	; 0xfffffc0c
   12710:	vst1.32	{d16-d17}, [r5]
   12714:	mov	r5, #2
   12718:	str	r5, [fp, #-1032]	; 0xfffffbf8
   1271c:	str	r0, [fp, #-1036]	; 0xfffffbf4
   12720:	mov	r0, #1
   12724:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12728:	ldr	r0, [r3, #4]
   1272c:	add	r3, sp, #296	; 0x128
   12730:	bl	11da0 <getaddrinfo@plt>
   12734:	cmp	r0, #0
   12738:	beq	12cb8 <__assert_fail@plt+0xea0>
   1273c:	movw	r0, #63122	; 0xf692
   12740:	movt	r0, #1
   12744:	bl	1370c <__assert_fail@plt+0x18f4>
   12748:	b	1275c <__assert_fail@plt+0x944>
   1274c:	movw	r0, #63087	; 0xf66f
   12750:	mov	r8, r2
   12754:	movt	r0, #1
   12758:	bl	13680 <__assert_fail@plt+0x1868>
   1275c:	ldr	r0, [r8, #36]	; 0x24
   12760:	mov	r2, r8
   12764:	cmp	r0, #0
   12768:	bmi	12794 <__assert_fail@plt+0x97c>
   1276c:	mov	r1, r7
   12770:	mov	r4, r2
   12774:	str	r0, [r1, r6, lsl #3]!
   12778:	mov	r0, #3
   1277c:	strh	r0, [r1, #4]
   12780:	movw	r0, #60261	; 0xeb65
   12784:	movt	r0, #1
   12788:	bl	13680 <__assert_fail@plt+0x1868>
   1278c:	mov	r2, r4
   12790:	add	r6, r6, #1
   12794:	ldr	r0, [r2, #40]	; 0x28
   12798:	cmp	r0, #0
   1279c:	bmi	127cc <__assert_fail@plt+0x9b4>
   127a0:	mov	r1, r7
   127a4:	mov	r4, r2
   127a8:	str	r0, [r1, r6, lsl #3]!
   127ac:	mov	r0, #3
   127b0:	strh	r0, [r1, #4]
   127b4:	movw	r0, #60291	; 0xeb83
   127b8:	movt	r0, #1
   127bc:	bl	13680 <__assert_fail@plt+0x1868>
   127c0:	ldr	r0, [r4, #40]	; 0x28
   127c4:	mov	r2, r4
   127c8:	add	r6, r6, #1
   127cc:	ldr	r1, [r2, #36]	; 0x24
   127d0:	and	r0, r0, r1
   127d4:	cmn	r0, #1
   127d8:	bgt	12800 <__assert_fail@plt+0x9e8>
   127dc:	mov	r4, r2
   127e0:	bl	11c50 <__errno_location@plt>
   127e4:	ldr	r0, [r0]
   127e8:	bl	11bcc <strerror@plt>
   127ec:	mov	r1, r0
   127f0:	movw	r0, #60321	; 0xeba1
   127f4:	movt	r0, #1
   127f8:	bl	13680 <__assert_fail@plt+0x1868>
   127fc:	mov	r2, r4
   12800:	ldr	r0, [r2, #8]
   12804:	movw	r1, #60346	; 0xebba
   12808:	movt	r1, #1
   1280c:	bl	11d70 <fopen64@plt>
   12810:	cmp	r0, #0
   12814:	beq	1283c <__assert_fail@plt+0xa24>
   12818:	mov	r4, r0
   1281c:	bl	11c08 <getpid@plt>
   12820:	movw	r1, #60861	; 0xedbd
   12824:	mov	r2, r0
   12828:	mov	r0, r4
   1282c:	movt	r1, #1
   12830:	bl	11c44 <fprintf@plt>
   12834:	mov	r0, r4
   12838:	bl	11cc8 <fclose@plt>
   1283c:	movw	r0, #60348	; 0xebbc
   12840:	movt	r0, #1
   12844:	bl	13680 <__assert_fail@plt+0x1868>
   12848:	movw	r0, #14072	; 0x36f8
   1284c:	add	r1, sp, #156	; 0x9c
   12850:	mov	r2, #0
   12854:	mov	r5, #1
   12858:	mov	r8, #0
   1285c:	movt	r0, #1
   12860:	str	r0, [sp, #156]	; 0x9c
   12864:	mov	r0, #1
   12868:	bl	11b30 <sigaction@plt>
   1286c:	movw	r0, #7228	; 0x1c3c
   12870:	movt	r0, #3
   12874:	ldr	r0, [r0]
   12878:	cmp	r0, #0
   1287c:	beq	128a8 <__assert_fail@plt+0xa90>
   12880:	movw	r0, #5584	; 0x15d0
   12884:	movt	r0, #3
   12888:	mov	r4, r0
   1288c:	str	r5, [r0, #24]
   12890:	bl	11c08 <getpid@plt>
   12894:	mov	r1, r0
   12898:	movw	r0, #60367	; 0xebcf
   1289c:	movt	r0, #1
   128a0:	bl	13680 <__assert_fail@plt+0x1868>
   128a4:	str	r8, [r4, #24]
   128a8:	ldr	r0, [sp, #8]
   128ac:	cmp	r0, #0
   128b0:	beq	128bc <__assert_fail@plt+0xaa4>
   128b4:	mov	r1, #15
   128b8:	bl	11bf0 <kill@plt>
   128bc:	movw	r2, #5400	; 0x1518
   128c0:	mov	r8, #0
   128c4:	mov	sl, #0
   128c8:	movt	r2, #3
   128cc:	movw	r4, #5584	; 0x15d0
   128d0:	mov	r5, r2
   128d4:	movt	r4, #3
   128d8:	b	128f0 <__assert_fail@plt+0xad8>
   128dc:	movw	r0, #60436	; 0xec14
   128e0:	movt	r0, #1
   128e4:	bl	13680 <__assert_fail@plt+0x1868>
   128e8:	bl	1324c <__assert_fail@plt+0x1434>
   128ec:	strb	r8, [r4]
   128f0:	mov	r0, r7
   128f4:	mov	r1, r6
   128f8:	mvn	r2, #0
   128fc:	bl	11b24 <poll@plt>
   12900:	cmp	r0, #0
   12904:	beq	128f0 <__assert_fail@plt+0xad8>
   12908:	ldrb	r1, [r4]
   1290c:	cmp	r1, #1
   12910:	beq	128dc <__assert_fail@plt+0xac4>
   12914:	cmp	r0, #0
   12918:	bmi	12928 <__assert_fail@plt+0xb10>
   1291c:	cmp	r6, #0
   12920:	beq	128f0 <__assert_fail@plt+0xad8>
   12924:	b	12948 <__assert_fail@plt+0xb30>
   12928:	bl	11c50 <__errno_location@plt>
   1292c:	ldr	r0, [r0]
   12930:	cmp	r0, #4
   12934:	beq	128f0 <__assert_fail@plt+0xad8>
   12938:	movw	r0, #60475	; 0xec3b
   1293c:	movt	r0, #1
   12940:	bl	1370c <__assert_fail@plt+0x18f4>
   12944:	b	128f0 <__assert_fail@plt+0xad8>
   12948:	mov	r4, #0
   1294c:	mov	r2, r5
   12950:	add	r3, sp, #24
   12954:	add	r0, r7, r4, lsl #3
   12958:	ldrsh	r0, [r0, #6]
   1295c:	tst	r0, #3
   12960:	bne	129a4 <__assert_fail@plt+0xb8c>
   12964:	b	129dc <__assert_fail@plt+0xbc4>
   12968:	movw	r0, #60508	; 0xec5c
   1296c:	mov	r5, r2
   12970:	movt	r0, #1
   12974:	bl	1370c <__assert_fail@plt+0x18f4>
   12978:	mvn	r0, #0
   1297c:	add	r3, sp, #24
   12980:	mov	r2, r5
   12984:	str	r0, [r7, r4, lsl #3]
   12988:	add	r4, r4, #1
   1298c:	cmp	r4, r6
   12990:	beq	128cc <__assert_fail@plt+0xab4>
   12994:	add	r0, r7, r4, lsl #3
   12998:	ldrsh	r0, [r0, #6]
   1299c:	tst	r0, #3
   129a0:	beq	129dc <__assert_fail@plt+0xbc4>
   129a4:	ldr	r5, [r7, r4, lsl #3]
   129a8:	cmn	r5, #1
   129ac:	beq	12988 <__assert_fail@plt+0xb70>
   129b0:	ldr	r0, [r2, #16]
   129b4:	cmp	r5, r0
   129b8:	bne	12a00 <__assert_fail@plt+0xbe8>
   129bc:	add	r1, r9, sl
   129c0:	rsb	r2, sl, #1024	; 0x400
   129c4:	mov	r0, r5
   129c8:	bl	119d4 <read@plt>
   129cc:	cmp	r0, #1
   129d0:	blt	12af8 <__assert_fail@plt+0xce0>
   129d4:	add	sl, r0, sl
   129d8:	b	12b30 <__assert_fail@plt+0xd18>
   129dc:	tst	r0, #32
   129e0:	bne	12968 <__assert_fail@plt+0xb50>
   129e4:	tst	r0, #8
   129e8:	bne	12ad0 <__assert_fail@plt+0xcb8>
   129ec:	tst	r0, #16
   129f0:	beq	12988 <__assert_fail@plt+0xb70>
   129f4:	movw	r0, #60529	; 0xec71
   129f8:	movt	r0, #1
   129fc:	b	12ad8 <__assert_fail@plt+0xcc0>
   12a00:	ldr	r1, [r2, #36]	; 0x24
   12a04:	ldr	r0, [r2, #40]	; 0x28
   12a08:	cmp	r5, r1
   12a0c:	cmpne	r5, r0
   12a10:	bne	12a80 <__assert_fail@plt+0xc68>
   12a14:	mov	r0, #128	; 0x80
   12a18:	sub	r9, fp, #1040	; 0x410
   12a1c:	mov	r1, #0
   12a20:	movw	r2, #1025	; 0x401
   12a24:	str	r0, [sp, #152]	; 0x98
   12a28:	mov	r0, r9
   12a2c:	mov	r9, r3
   12a30:	bl	11c8c <memset@plt>
   12a34:	add	r0, sp, #152	; 0x98
   12a38:	mov	r2, #1024	; 0x400
   12a3c:	mov	r3, #0
   12a40:	str	r9, [sp]
   12a44:	str	r0, [sp, #4]
   12a48:	mov	r0, r5
   12a4c:	sub	r5, fp, #1040	; 0x410
   12a50:	mov	r1, r5
   12a54:	bl	11aa0 <recvfrom@plt>
   12a58:	cmp	r0, #1
   12a5c:	blt	12c3c <__assert_fail@plt+0xe24>
   12a60:	ldr	r1, [sp, #152]	; 0x98
   12a64:	strb	r8, [r5, r0]
   12a68:	mov	r0, r9
   12a6c:	bl	13aa8 <__assert_fail@plt+0x1c90>
   12a70:	mov	r1, r5
   12a74:	bl	138fc <__assert_fail@plt+0x1ae4>
   12a78:	add	r9, sp, #296	; 0x128
   12a7c:	b	12c88 <__assert_fail@plt+0xe70>
   12a80:	mov	r0, #110	; 0x6e
   12a84:	str	r3, [sp]
   12a88:	mov	r2, #1024	; 0x400
   12a8c:	mov	r3, #0
   12a90:	str	r0, [sp, #152]	; 0x98
   12a94:	add	r0, sp, #152	; 0x98
   12a98:	str	r0, [sp, #4]
   12a9c:	mov	r0, r5
   12aa0:	sub	r5, fp, #1040	; 0x410
   12aa4:	mov	r1, r5
   12aa8:	bl	11aa0 <recvfrom@plt>
   12aac:	cmp	r0, #1
   12ab0:	blt	12c64 <__assert_fail@plt+0xe4c>
   12ab4:	strb	r8, [r5, r0]
   12ab8:	movw	r0, #7224	; 0x1c38
   12abc:	mov	r1, r5
   12ac0:	movt	r0, #3
   12ac4:	ldr	r0, [r0]
   12ac8:	bl	138fc <__assert_fail@plt+0x1ae4>
   12acc:	b	12c88 <__assert_fail@plt+0xe70>
   12ad0:	movw	r0, #60519	; 0xec67
   12ad4:	movt	r0, #1
   12ad8:	mov	r5, r2
   12adc:	bl	1370c <__assert_fail@plt+0x18f4>
   12ae0:	add	r3, sp, #24
   12ae4:	mov	r2, r5
   12ae8:	add	r4, r4, #1
   12aec:	cmp	r4, r6
   12af0:	bne	12994 <__assert_fail@plt+0xb7c>
   12af4:	b	128cc <__assert_fail@plt+0xab4>
   12af8:	cmn	r0, #1
   12afc:	bgt	12b30 <__assert_fail@plt+0xd18>
   12b00:	bl	11c50 <__errno_location@plt>
   12b04:	ldr	r0, [r0]
   12b08:	cmp	r0, #4
   12b0c:	beq	12b30 <__assert_fail@plt+0xd18>
   12b10:	movw	r0, #62482	; 0xf412
   12b14:	movt	r0, #1
   12b18:	bl	1370c <__assert_fail@plt+0x18f4>
   12b1c:	movw	r0, #5400	; 0x1518
   12b20:	mvn	r1, #0
   12b24:	movt	r0, #3
   12b28:	str	r1, [r7, r4, lsl #3]
   12b2c:	str	r1, [r0, #16]
   12b30:	mov	r0, r9
   12b34:	mov	r1, #10
   12b38:	strb	r8, [r9, sl]
   12b3c:	bl	11c38 <strchr@plt>
   12b40:	cmp	r0, #0
   12b44:	beq	12b7c <__assert_fail@plt+0xd64>
   12b48:	mov	r5, r0
   12b4c:	mov	r0, r9
   12b50:	strb	r8, [r5], #1
   12b54:	bl	137a0 <__assert_fail@plt+0x1988>
   12b58:	add	r0, sl, r9
   12b5c:	mov	r1, #10
   12b60:	sub	sl, r0, r5
   12b64:	mov	r0, r5
   12b68:	bl	11c38 <strchr@plt>
   12b6c:	cmp	r0, #0
   12b70:	mov	r9, r5
   12b74:	bne	12b48 <__assert_fail@plt+0xd30>
   12b78:	b	12b80 <__assert_fail@plt+0xd68>
   12b7c:	mov	r5, r9
   12b80:	movw	r9, #5400	; 0x1518
   12b84:	cmp	sl, #0
   12b88:	add	r3, sp, #24
   12b8c:	movt	r9, #3
   12b90:	mov	r2, r9
   12b94:	add	r9, sp, #296	; 0x128
   12b98:	beq	12ca4 <__assert_fail@plt+0xe8c>
   12b9c:	ldrb	r0, [r5]
   12ba0:	cmp	r0, #0
   12ba4:	bne	12bb8 <__assert_fail@plt+0xda0>
   12ba8:	subs	sl, sl, #1
   12bac:	add	r5, r5, #1
   12bb0:	bne	12b9c <__assert_fail@plt+0xd84>
   12bb4:	b	12c28 <__assert_fail@plt+0xe10>
   12bb8:	cmp	r9, r5
   12bbc:	beq	12bd4 <__assert_fail@plt+0xdbc>
   12bc0:	mov	r0, r9
   12bc4:	mov	r1, r5
   12bc8:	mov	r2, sl
   12bcc:	bl	11a04 <memmove@plt>
   12bd0:	b	12b30 <__assert_fail@plt+0xd18>
   12bd4:	cmp	sl, #1024	; 0x400
   12bd8:	blt	12988 <__assert_fail@plt+0xb70>
   12bdc:	mov	r0, r9
   12be0:	bl	137a0 <__assert_fail@plt+0x1988>
   12be4:	ldrb	r0, [sp, #296]	; 0x128
   12be8:	cmp	r0, #60	; 0x3c
   12bec:	bne	12c20 <__assert_fail@plt+0xe08>
   12bf0:	bl	11bfc <__ctype_b_loc@plt>
   12bf4:	ldr	r0, [r0]
   12bf8:	ldrb	r1, [sp, #297]	; 0x129
   12bfc:	add	r0, r0, r1, lsl #1
   12c00:	ldrb	r0, [r0, #1]
   12c04:	tst	r0, #8
   12c08:	beq	12c20 <__assert_fail@plt+0xe08>
   12c0c:	ldrb	r0, [sp, #298]	; 0x12a
   12c10:	mov	sl, #3
   12c14:	cmp	r0, #62	; 0x3e
   12c18:	movne	sl, #0
   12c1c:	b	12b30 <__assert_fail@plt+0xd18>
   12c20:	mov	sl, #0
   12c24:	b	12b30 <__assert_fail@plt+0xd18>
   12c28:	mov	sl, #0
   12c2c:	add	r4, r4, #1
   12c30:	cmp	r4, r6
   12c34:	bne	12994 <__assert_fail@plt+0xb7c>
   12c38:	b	128cc <__assert_fail@plt+0xab4>
   12c3c:	cmn	r0, #1
   12c40:	add	r9, sp, #296	; 0x128
   12c44:	bgt	12c88 <__assert_fail@plt+0xe70>
   12c48:	bl	11c50 <__errno_location@plt>
   12c4c:	ldr	r0, [r0]
   12c50:	cmp	r0, #4
   12c54:	beq	12c88 <__assert_fail@plt+0xe70>
   12c58:	movw	r0, #60480	; 0xec40
   12c5c:	movt	r0, #1
   12c60:	b	12c84 <__assert_fail@plt+0xe6c>
   12c64:	cmn	r0, #1
   12c68:	bgt	12c88 <__assert_fail@plt+0xe70>
   12c6c:	bl	11c50 <__errno_location@plt>
   12c70:	ldr	r0, [r0]
   12c74:	cmp	r0, #4
   12c78:	beq	12c88 <__assert_fail@plt+0xe70>
   12c7c:	movw	r0, #60494	; 0xec4e
   12c80:	movt	r0, #1
   12c84:	bl	1370c <__assert_fail@plt+0x18f4>
   12c88:	movw	r2, #5400	; 0x1518
   12c8c:	add	r3, sp, #24
   12c90:	movt	r2, #3
   12c94:	add	r4, r4, #1
   12c98:	cmp	r4, r6
   12c9c:	bne	12994 <__assert_fail@plt+0xb7c>
   12ca0:	b	128cc <__assert_fail@plt+0xab4>
   12ca4:	mov	sl, #0
   12ca8:	add	r4, r4, #1
   12cac:	cmp	r4, r6
   12cb0:	bne	12994 <__assert_fail@plt+0xb7c>
   12cb4:	b	128cc <__assert_fail@plt+0xab4>
   12cb8:	ldr	r5, [sp, #296]	; 0x128
   12cbc:	cmp	r5, #0
   12cc0:	beq	12df4 <__assert_fail@plt+0xfdc>
   12cc4:	mov	sl, #1
   12cc8:	mov	r9, #4
   12ccc:	add	r8, sp, #24
   12cd0:	b	12ce8 <__assert_fail@plt+0xed0>
   12cd4:	mov	r0, r4
   12cd8:	bl	11e00 <close@plt>
   12cdc:	ldr	r5, [r5, #28]
   12ce0:	cmp	r5, #0
   12ce4:	beq	12de0 <__assert_fail@plt+0xfc8>
   12ce8:	str	sl, [sp, #24]
   12cec:	ldmib	r5, {r0, r1, r2}
   12cf0:	bl	11dac <socket@plt>
   12cf4:	cmp	r0, #0
   12cf8:	bmi	12cdc <__assert_fail@plt+0xec4>
   12cfc:	mov	r1, #1
   12d00:	mov	r2, #2
   12d04:	mov	r3, r8
   12d08:	mov	r4, r0
   12d0c:	str	r9, [sp]
   12d10:	bl	119b0 <setsockopt@plt>
   12d14:	cmn	r0, #1
   12d18:	ble	12d94 <__assert_fail@plt+0xf7c>
   12d1c:	ldr	r0, [r5, #4]
   12d20:	cmp	r0, #10
   12d24:	bne	12d40 <__assert_fail@plt+0xf28>
   12d28:	mov	r0, r4
   12d2c:	mov	r1, #41	; 0x29
   12d30:	mov	r2, #26
   12d34:	mov	r3, r8
   12d38:	str	r9, [sp]
   12d3c:	bl	119b0 <setsockopt@plt>
   12d40:	ldr	r2, [r5, #16]
   12d44:	ldr	r1, [r5, #20]
   12d48:	mov	r0, r4
   12d4c:	bl	11c74 <bind@plt>
   12d50:	cmn	r0, #1
   12d54:	ble	12cd4 <__assert_fail@plt+0xebc>
   12d58:	ldr	r0, [r5, #4]
   12d5c:	cmp	r0, #2
   12d60:	bne	12db0 <__assert_fail@plt+0xf98>
   12d64:	movw	r1, #5400	; 0x1518
   12d68:	movt	r1, #3
   12d6c:	ldr	r1, [r1, #36]	; 0x24
   12d70:	cmn	r1, #1
   12d74:	bgt	12db0 <__assert_fail@plt+0xf98>
   12d78:	movw	r0, #5400	; 0x1518
   12d7c:	movt	r0, #3
   12d80:	str	r4, [r0, #36]	; 0x24
   12d84:	ldr	r5, [r5, #28]
   12d88:	cmp	r5, #0
   12d8c:	bne	12ce8 <__assert_fail@plt+0xed0>
   12d90:	b	12de0 <__assert_fail@plt+0xfc8>
   12d94:	movw	r0, #63160	; 0xf6b8
   12d98:	movt	r0, #1
   12d9c:	bl	1370c <__assert_fail@plt+0x18f4>
   12da0:	ldr	r0, [r5, #4]
   12da4:	cmp	r0, #10
   12da8:	beq	12d28 <__assert_fail@plt+0xf10>
   12dac:	b	12d40 <__assert_fail@plt+0xf28>
   12db0:	cmp	r0, #10
   12db4:	bne	12cdc <__assert_fail@plt+0xec4>
   12db8:	movw	r0, #5400	; 0x1518
   12dbc:	movt	r0, #3
   12dc0:	ldr	r0, [r0, #40]	; 0x28
   12dc4:	cmn	r0, #1
   12dc8:	movwle	r0, #5400	; 0x1518
   12dcc:	movtle	r0, #3
   12dd0:	strle	r4, [r0, #40]	; 0x28
   12dd4:	ldr	r5, [r5, #28]
   12dd8:	cmp	r5, #0
   12ddc:	bne	12ce8 <__assert_fail@plt+0xed0>
   12de0:	movw	r9, #5400	; 0x1518
   12de4:	ldr	r4, [sp, #296]	; 0x128
   12de8:	movt	r9, #3
   12dec:	mov	r8, r9
   12df0:	add	r9, sp, #296	; 0x128
   12df4:	mov	r0, r4
   12df8:	bl	11d94 <freeaddrinfo@plt>
   12dfc:	ldr	r0, [r8, #36]	; 0x24
   12e00:	ldr	r1, [r8, #40]	; 0x28
   12e04:	mov	r2, r8
   12e08:	and	r1, r1, r0
   12e0c:	cmn	r1, #1
   12e10:	bgt	12764 <__assert_fail@plt+0x94c>
   12e14:	movw	r0, #63187	; 0xf6d3
   12e18:	movt	r0, #1
   12e1c:	b	12744 <__assert_fail@plt+0x92c>
   12e20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e24:	add	fp, sp, #24
   12e28:	sub	sp, sp, #40	; 0x28
   12e2c:	movw	r8, #5584	; 0x15d0
   12e30:	mov	r4, r0
   12e34:	movw	r0, #61785	; 0xf159
   12e38:	vmov.i32	q8, #0	; 0x00000000
   12e3c:	add	r9, sp, #8
   12e40:	movw	r6, #59867	; 0xe9db
   12e44:	add	r3, sp, #4
   12e48:	movt	r8, #3
   12e4c:	movt	r0, #1
   12e50:	add	r7, r9, #4
   12e54:	movt	r6, #1
   12e58:	add	r5, r9, #16
   12e5c:	mov	r2, r9
   12e60:	str	r0, [r8, #16]
   12e64:	mov	r0, #1
   12e68:	vst1.32	{d16-d17}, [r7]
   12e6c:	vst1.32	{d16-d17}, [r5]
   12e70:	mov	r1, r6
   12e74:	str	r0, [sp, #8]
   12e78:	mov	r0, #2
   12e7c:	str	r0, [sp, #16]
   12e80:	mov	r0, #0
   12e84:	bl	11da0 <getaddrinfo@plt>
   12e88:	cmp	r0, #0
   12e8c:	beq	12ee4 <__assert_fail@plt+0x10cc>
   12e90:	cmp	r4, #0
   12e94:	str	r4, [r8, #12]
   12e98:	beq	12efc <__assert_fail@plt+0x10e4>
   12e9c:	vmov.i32	q8, #0	; 0x00000000
   12ea0:	mov	r0, #1
   12ea4:	add	r3, sp, #4
   12ea8:	mov	r1, r4
   12eac:	mov	r2, r9
   12eb0:	vst1.32	{d16-d17}, [r7]
   12eb4:	vst1.32	{d16-d17}, [r5]
   12eb8:	str	r0, [sp, #8]
   12ebc:	mov	r0, #2
   12ec0:	mov	r5, #0
   12ec4:	str	r0, [sp, #16]
   12ec8:	mov	r0, #0
   12ecc:	bl	11da0 <getaddrinfo@plt>
   12ed0:	cmp	r0, #0
   12ed4:	beq	12f0c <__assert_fail@plt+0x10f4>
   12ed8:	str	r5, [r8, #12]
   12edc:	sub	sp, fp, #24
   12ee0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ee4:	ldr	r0, [sp, #4]
   12ee8:	str	r6, [r8, #16]
   12eec:	bl	11d94 <freeaddrinfo@plt>
   12ef0:	cmp	r4, #0
   12ef4:	str	r4, [r8, #12]
   12ef8:	bne	12e9c <__assert_fail@plt+0x1084>
   12efc:	ldr	r0, [r8, #16]
   12f00:	str	r0, [r8, #12]
   12f04:	sub	sp, fp, #24
   12f08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f0c:	ldr	r0, [sp, #4]
   12f10:	bl	11d94 <freeaddrinfo@plt>
   12f14:	sub	sp, fp, #24
   12f18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f1c:	push	{fp, lr}
   12f20:	mov	fp, sp
   12f24:	mov	r0, #0
   12f28:	bl	11a4c <_exit@plt>
   12f2c:	push	{fp, lr}
   12f30:	mov	fp, sp
   12f34:	sub	sp, sp, #104	; 0x68
   12f38:	movw	r8, #7216	; 0x1c30
   12f3c:	mov	r4, r0
   12f40:	mov	r0, #0
   12f44:	movt	r8, #3
   12f48:	ldr	r7, [r8]
   12f4c:	str	r0, [r8]
   12f50:	movw	r0, #6728	; 0x1a48
   12f54:	movt	r0, #3
   12f58:	ldr	r5, [r0]
   12f5c:	cmp	r5, #0
   12f60:	beq	12fb0 <__assert_fail@plt+0x1198>
   12f64:	movw	r6, #7224	; 0x1c38
   12f68:	movt	r6, #3
   12f6c:	ldr	r0, [r5, #452]	; 0x1c4
   12f70:	cmp	r0, #0
   12f74:	bne	12f90 <__assert_fail@plt+0x1178>
   12f78:	ldr	r5, [r5]
   12f7c:	cmp	r5, #0
   12f80:	beq	12fb0 <__assert_fail@plt+0x1198>
   12f84:	ldr	r0, [r5, #452]	; 0x1c4
   12f88:	cmp	r0, #0
   12f8c:	beq	12f78 <__assert_fail@plt+0x1160>
   12f90:	ldr	r1, [r6]
   12f94:	mov	r0, r5
   12f98:	mov	r2, #0
   12f9c:	mov	r3, #0
   12fa0:	bl	14494 <__assert_fail@plt+0x267c>
   12fa4:	ldr	r5, [r5]
   12fa8:	cmp	r5, #0
   12fac:	bne	12f84 <__assert_fail@plt+0x116c>
   12fb0:	cmp	r4, #0
   12fb4:	str	r7, [r8]
   12fb8:	beq	13008 <__assert_fail@plt+0x11f0>
   12fbc:	movw	r0, #5564	; 0x15bc
   12fc0:	mov	r2, r4
   12fc4:	movt	r0, #3
   12fc8:	ldr	r1, [r0]
   12fcc:	movw	r0, #61393	; 0xefd1
   12fd0:	movt	r0, #1
   12fd4:	bl	13680 <__assert_fail@plt+0x1868>
   12fd8:	movw	r2, #61419	; 0xefeb
   12fdc:	add	r5, sp, #4
   12fe0:	mov	r1, #100	; 0x64
   12fe4:	mov	r3, r4
   12fe8:	movt	r2, #1
   12fec:	mov	r0, r5
   12ff0:	bl	11c5c <snprintf@plt>
   12ff4:	bl	11c50 <__errno_location@plt>
   12ff8:	mov	r1, #0
   12ffc:	str	r1, [r0]
   13000:	mov	r0, r5
   13004:	bl	1370c <__assert_fail@plt+0x18f4>
   13008:	movw	r4, #5400	; 0x1518
   1300c:	movt	r4, #3
   13010:	ldr	r0, [r4, #16]
   13014:	cmp	r0, #0
   13018:	bmi	13020 <__assert_fail@plt+0x1208>
   1301c:	bl	11e00 <close@plt>
   13020:	movw	r5, #7200	; 0x1c20
   13024:	movt	r5, #3
   13028:	ldr	r0, [r5]
   1302c:	cmp	r0, #0
   13030:	beq	13084 <__assert_fail@plt+0x126c>
   13034:	movw	r7, #7296	; 0x1c80
   13038:	mov	r6, #0
   1303c:	movt	r7, #3
   13040:	b	13054 <__assert_fail@plt+0x123c>
   13044:	ldr	r0, [r5]
   13048:	add	r6, r6, #1
   1304c:	cmp	r6, r0
   13050:	bcs	13084 <__assert_fail@plt+0x126c>
   13054:	ldr	r0, [r7]
   13058:	add	r0, r0, r6, lsl #3
   1305c:	ldr	r0, [r0, #4]
   13060:	cmp	r0, #0
   13064:	bmi	13044 <__assert_fail@plt+0x122c>
   13068:	bl	11e00 <close@plt>
   1306c:	ldr	r0, [r7]
   13070:	ldr	r0, [r0, r6, lsl #3]
   13074:	cmp	r0, #0
   13078:	beq	13044 <__assert_fail@plt+0x122c>
   1307c:	bl	11adc <unlink@plt>
   13080:	b	13044 <__assert_fail@plt+0x122c>
   13084:	ldr	r0, [r4, #36]	; 0x24
   13088:	cmp	r0, #0
   1308c:	bpl	130a4 <__assert_fail@plt+0x128c>
   13090:	ldr	r0, [r4, #40]	; 0x28
   13094:	cmp	r0, #0
   13098:	bpl	130b4 <__assert_fail@plt+0x129c>
   1309c:	mov	r0, #0
   130a0:	bl	11c14 <exit@plt>
   130a4:	bl	11e00 <close@plt>
   130a8:	ldr	r0, [r4, #40]	; 0x28
   130ac:	cmp	r0, #0
   130b0:	bmi	1309c <__assert_fail@plt+0x1284>
   130b4:	bl	11e00 <close@plt>
   130b8:	mov	r0, #0
   130bc:	bl	11c14 <exit@plt>
   130c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130c4:	add	fp, sp, #28
   130c8:	sub	sp, sp, #4
   130cc:	mov	r0, #0
   130d0:	bl	11a70 <time@plt>
   130d4:	movw	r6, #7288	; 0x1c78
   130d8:	movw	r7, #5400	; 0x1518
   130dc:	movt	r6, #3
   130e0:	movt	r7, #3
   130e4:	str	r0, [r6]
   130e8:	ldr	r0, [r7, #20]
   130ec:	cmp	r0, #1
   130f0:	blt	13138 <__assert_fail@plt+0x1320>
   130f4:	movw	r4, #7300	; 0x1c84
   130f8:	movt	r4, #3
   130fc:	ldr	r1, [r4]
   13100:	add	r1, r1, #30
   13104:	cmp	r1, r0
   13108:	str	r1, [r4]
   1310c:	blt	13138 <__assert_fail@plt+0x1320>
   13110:	movw	r0, #7224	; 0x1c38
   13114:	movw	r1, #61316	; 0xef84
   13118:	mov	r3, #12
   1311c:	movt	r0, #3
   13120:	movt	r1, #1
   13124:	ldr	r2, [r0]
   13128:	mov	r0, #6
   1312c:	bl	13e64 <__assert_fail@plt+0x204c>
   13130:	mov	r0, #0
   13134:	str	r0, [r4]
   13138:	movw	r0, #6728	; 0x1a48
   1313c:	movt	r0, #3
   13140:	ldr	r4, [r0]
   13144:	cmp	r4, #0
   13148:	beq	131ec <__assert_fail@plt+0x13d4>
   1314c:	movw	r8, #4808	; 0x12c8
   13150:	movw	r9, #61327	; 0xef8f
   13154:	movw	sl, #7224	; 0x1c38
   13158:	mvn	r5, #0
   1315c:	movt	r8, #3
   13160:	movt	r9, #1
   13164:	movt	sl, #3
   13168:	ldr	r2, [r4, #452]	; 0x1c4
   1316c:	cmp	r2, #0
   13170:	bne	1318c <__assert_fail@plt+0x1374>
   13174:	ldr	r4, [r4]
   13178:	cmp	r4, #0
   1317c:	beq	131ec <__assert_fail@plt+0x13d4>
   13180:	ldr	r2, [r4, #452]	; 0x1c4
   13184:	cmp	r2, #0
   13188:	beq	13174 <__assert_fail@plt+0x135c>
   1318c:	ldr	r1, [r4, #456]	; 0x1c8
   13190:	ldr	r0, [r4, #8]
   13194:	add	r1, r7, r1, lsl #2
   13198:	ldr	r3, [r1, #28]
   1319c:	ldr	r1, [r6]
   131a0:	add	r0, r3, r0
   131a4:	cmp	r1, r0
   131a8:	blt	13174 <__assert_fail@plt+0x135c>
   131ac:	ldrsh	r0, [r4, #4]
   131b0:	ldr	r1, [r8, r0, lsl #2]
   131b4:	mov	r0, r9
   131b8:	bl	13680 <__assert_fail@plt+0x1868>
   131bc:	ldr	r1, [sl]
   131c0:	mov	r0, r4
   131c4:	mov	r2, #0
   131c8:	mov	r3, #0
   131cc:	bl	14494 <__assert_fail@plt+0x267c>
   131d0:	ldr	r0, [r4, #456]	; 0x1c8
   131d4:	subs	r0, r0, r5
   131d8:	movwne	r0, #1
   131dc:	str	r0, [r4, #456]	; 0x1c8
   131e0:	ldr	r4, [r4]
   131e4:	cmp	r4, #0
   131e8:	bne	13180 <__assert_fail@plt+0x1368>
   131ec:	mov	r0, #30
   131f0:	sub	sp, fp, #28
   131f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131f8:	b	11ac4 <alarm@plt>
   131fc:	push	{r4, r5, fp, lr}
   13200:	add	fp, sp, #8
   13204:	movw	r4, #5584	; 0x15d0
   13208:	mov	r0, #1
   1320c:	movw	r1, #61779	; 0xf153
   13210:	movt	r4, #3
   13214:	movt	r1, #1
   13218:	ldr	r5, [r4, #24]
   1321c:	str	r0, [r4, #24]
   13220:	movw	r0, #61774	; 0xf14e
   13224:	movt	r0, #1
   13228:	cmp	r5, #0
   1322c:	moveq	r1, r0
   13230:	movw	r0, #61745	; 0xf131
   13234:	movt	r0, #1
   13238:	bl	13680 <__assert_fail@plt+0x1868>
   1323c:	clz	r0, r5
   13240:	lsr	r0, r0, #5
   13244:	str	r0, [r4, #24]
   13248:	pop	{r4, r5, fp, pc}
   1324c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13250:	add	fp, sp, #28
   13254:	sub	sp, sp, #116	; 0x74
   13258:	movw	r0, #61440	; 0xf000
   1325c:	movt	r0, #1
   13260:	bl	13680 <__assert_fail@plt+0x1868>
   13264:	movw	r0, #7216	; 0x1c30
   13268:	mov	r8, #0
   1326c:	movw	sl, #7224	; 0x1c38
   13270:	movt	r0, #3
   13274:	movt	sl, #3
   13278:	str	r8, [r0]
   1327c:	movw	r0, #6728	; 0x1a48
   13280:	movt	r0, #3
   13284:	ldr	r5, [r0]
   13288:	cmp	r5, #0
   1328c:	beq	1336c <__assert_fail@plt+0x1554>
   13290:	mov	r6, #1
   13294:	movw	r7, #526	; 0x20e
   13298:	mov	r9, #400	; 0x190
   1329c:	ldr	r0, [r5, #452]	; 0x1c4
   132a0:	mov	r4, r5
   132a4:	cmp	r0, #0
   132a8:	bne	132f4 <__assert_fail@plt+0x14dc>
   132ac:	b	13308 <__assert_fail@plt+0x14f0>
   132b0:	ldr	r0, [r4, #40]	; 0x28
   132b4:	bl	1ba4c <argp_parse@@Base+0x15bc>
   132b8:	ldrsh	r0, [r4, #6]
   132bc:	bl	11e00 <close@plt>
   132c0:	ldr	r0, [r4, #436]	; 0x1b4
   132c4:	bl	1ba4c <argp_parse@@Base+0x15bc>
   132c8:	ldr	r0, [r4, #432]	; 0x1b0
   132cc:	bl	1ba4c <argp_parse@@Base+0x15bc>
   132d0:	ldr	r5, [r4]
   132d4:	mov	r0, r4
   132d8:	bl	1ba4c <argp_parse@@Base+0x15bc>
   132dc:	cmp	r5, #0
   132e0:	beq	1336c <__assert_fail@plt+0x1554>
   132e4:	ldr	r0, [r5, #452]	; 0x1c4
   132e8:	mov	r4, r5
   132ec:	cmp	r0, #0
   132f0:	beq	13308 <__assert_fail@plt+0x14f0>
   132f4:	ldr	r1, [sl]
   132f8:	mov	r0, r4
   132fc:	mov	r2, #0
   13300:	mov	r3, #0
   13304:	bl	14494 <__assert_fail@plt+0x267c>
   13308:	ldrsh	r0, [r4, #4]
   1330c:	cmp	r0, #9
   13310:	bhi	132c0 <__assert_fail@plt+0x14a8>
   13314:	tst	r7, r6, lsl r0
   13318:	bne	132b0 <__assert_fail@plt+0x1498>
   1331c:	tst	r9, r6, lsl r0
   13320:	beq	13330 <__assert_fail@plt+0x1518>
   13324:	ldr	r0, [r4, #40]	; 0x28
   13328:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1332c:	b	132c0 <__assert_fail@plt+0x14a8>
   13330:	cmp	r0, #5
   13334:	bne	132c0 <__assert_fail@plt+0x14a8>
   13338:	ldr	r1, [r4, #40]	; 0x28
   1333c:	ldr	r0, [r4, #44]	; 0x2c
   13340:	cmp	r1, #1
   13344:	blt	13328 <__assert_fail@plt+0x1510>
   13348:	mov	r5, #0
   1334c:	ldr	r0, [r0, r5, lsl #2]
   13350:	bl	1ba4c <argp_parse@@Base+0x15bc>
   13354:	ldr	r1, [r4, #40]	; 0x28
   13358:	ldr	r0, [r4, #44]	; 0x2c
   1335c:	add	r5, r5, #1
   13360:	cmp	r5, r1
   13364:	blt	1334c <__assert_fail@plt+0x1534>
   13368:	b	13328 <__assert_fail@plt+0x1510>
   1336c:	movw	r0, #6724	; 0x1a44
   13370:	movw	r4, #5400	; 0x1518
   13374:	movt	r0, #3
   13378:	movt	r4, #3
   1337c:	str	r8, [r0]
   13380:	movw	r0, #6728	; 0x1a48
   13384:	movt	r0, #3
   13388:	str	r8, [r0]
   1338c:	ldr	r0, [r4]
   13390:	bl	14db4 <__assert_fail@plt+0x2f9c>
   13394:	ldr	r5, [r4, #4]
   13398:	str	r0, [sp]
   1339c:	mov	r0, r5
   133a0:	bl	11b84 <opendir@plt>
   133a4:	cmp	r0, #0
   133a8:	beq	13484 <__assert_fail@plt+0x166c>
   133ac:	mov	r6, r0
   133b0:	bl	11d4c <readdir64@plt>
   133b4:	cmp	r0, #0
   133b8:	beq	13498 <__assert_fail@plt+0x1680>
   133bc:	movw	r7, #63344	; 0xf770
   133c0:	mov	r8, #0
   133c4:	add	r4, sp, #4
   133c8:	add	r9, sp, #8
   133cc:	mov	sl, #0
   133d0:	movt	r7, #1
   133d4:	b	133f4 <__assert_fail@plt+0x15dc>
   133d8:	movw	r0, #63400	; 0xf7a8
   133dc:	movt	r0, #1
   133e0:	bl	13680 <__assert_fail@plt+0x1868>
   133e4:	mov	r0, r6
   133e8:	bl	11d4c <readdir64@plt>
   133ec:	cmp	r0, #0
   133f0:	beq	13460 <__assert_fail@plt+0x1648>
   133f4:	add	r3, r0, #19
   133f8:	mov	r0, r4
   133fc:	mov	r1, r7
   13400:	mov	r2, r5
   13404:	bl	11ca4 <asprintf@plt>
   13408:	cmn	r0, #1
   1340c:	ble	134a4 <__assert_fail@plt+0x168c>
   13410:	ldr	r1, [sp, #4]
   13414:	mov	r0, #3
   13418:	mov	r2, r9
   1341c:	bl	11dc4 <__xstat64@plt>
   13420:	cmp	r0, #0
   13424:	bne	133d8 <__assert_fail@plt+0x15c0>
   13428:	ldr	r0, [sp, #24]
   1342c:	and	r0, r0, #61440	; 0xf000
   13430:	cmp	r0, #32768	; 0x8000
   13434:	bne	13448 <__assert_fail@plt+0x1630>
   13438:	ldr	r0, [sp, #4]
   1343c:	bl	14db4 <__assert_fail@plt+0x2f9c>
   13440:	add	r8, r0, r8
   13444:	add	sl, sl, #1
   13448:	ldr	r0, [sp, #4]
   1344c:	bl	1ba4c <argp_parse@@Base+0x15bc>
   13450:	mov	r0, r6
   13454:	bl	11d4c <readdir64@plt>
   13458:	cmp	r0, #0
   1345c:	bne	133f4 <__assert_fail@plt+0x15dc>
   13460:	mov	r0, r6
   13464:	bl	11e0c <closedir@plt>
   13468:	cmp	sl, #0
   1346c:	beq	13674 <__assert_fail@plt+0x185c>
   13470:	movw	sl, #7224	; 0x1c38
   13474:	cmp	r8, #0
   13478:	movt	sl, #3
   1347c:	beq	134b8 <__assert_fail@plt+0x16a0>
   13480:	b	134c0 <__assert_fail@plt+0x16a8>
   13484:	movw	r0, #63216	; 0xf6f0
   13488:	mov	r1, r5
   1348c:	movt	r0, #1
   13490:	bl	13680 <__assert_fail@plt+0x1868>
   13494:	b	134c0 <__assert_fail@plt+0x16a8>
   13498:	mov	r0, r6
   1349c:	bl	11e0c <closedir@plt>
   134a0:	b	134c0 <__assert_fail@plt+0x16a8>
   134a4:	movw	r0, #63350	; 0xf776
   134a8:	movt	r0, #1
   134ac:	bl	13680 <__assert_fail@plt+0x1868>
   134b0:	movw	sl, #7224	; 0x1c38
   134b4:	movt	sl, #3
   134b8:	mov	r0, #0
   134bc:	str	r0, [sp]
   134c0:	movw	r1, #7216	; 0x1c30
   134c4:	mov	r0, #1
   134c8:	movt	r1, #3
   134cc:	str	r0, [r1]
   134d0:	movw	r0, #7204	; 0x1c24
   134d4:	movt	r0, #3
   134d8:	ldr	r0, [r0]
   134dc:	cmp	r0, #0
   134e0:	beq	13608 <__assert_fail@plt+0x17f0>
   134e4:	movw	r0, #6728	; 0x1a48
   134e8:	movt	r0, #3
   134ec:	ldr	r8, [r0]
   134f0:	cmp	r8, #0
   134f4:	beq	13608 <__assert_fail@plt+0x17f0>
   134f8:	movw	r5, #61446	; 0xf006
   134fc:	movw	r4, #61460	; 0xf014
   13500:	movw	r6, #61450	; 0xf00a
   13504:	movt	r5, #1
   13508:	movt	r4, #1
   1350c:	movt	r6, #1
   13510:	b	1353c <__assert_fail@plt+0x1724>
   13514:	ldr	r1, [r8, #40]	; 0x28
   13518:	movw	r0, #63892	; 0xf994
   1351c:	movt	r0, #1
   13520:	bl	13680 <__assert_fail@plt+0x1868>
   13524:	movw	r0, #60700	; 0xed1c
   13528:	movt	r0, #1
   1352c:	bl	13680 <__assert_fail@plt+0x1868>
   13530:	ldr	r8, [r8]
   13534:	cmp	r8, #0
   13538:	beq	13608 <__assert_fail@plt+0x17f0>
   1353c:	mov	r9, sl
   13540:	add	sl, r8, #12
   13544:	mov	r7, #0
   13548:	ldrb	r1, [sl, -r7]
   1354c:	cmp	r1, #0
   13550:	beq	13574 <__assert_fail@plt+0x175c>
   13554:	mov	r0, r6
   13558:	bl	13680 <__assert_fail@plt+0x1868>
   1355c:	sub	r7, r7, #1
   13560:	cmn	r7, #25
   13564:	beq	13588 <__assert_fail@plt+0x1770>
   13568:	ldrb	r1, [sl, -r7]
   1356c:	cmp	r1, #0
   13570:	bne	13554 <__assert_fail@plt+0x173c>
   13574:	mov	r0, r5
   13578:	bl	13680 <__assert_fail@plt+0x1868>
   1357c:	sub	r7, r7, #1
   13580:	cmn	r7, #25
   13584:	bne	13568 <__assert_fail@plt+0x1750>
   13588:	ldrsh	r0, [r8, #4]
   1358c:	movw	r1, #4808	; 0x12c8
   13590:	movt	r1, #3
   13594:	ldr	r1, [r1, r0, lsl #2]
   13598:	movw	r0, #61455	; 0xf00f
   1359c:	movt	r0, #1
   135a0:	bl	13680 <__assert_fail@plt+0x1868>
   135a4:	ldrsh	r0, [r8, #4]
   135a8:	mov	sl, r9
   135ac:	cmp	r0, #9
   135b0:	bhi	13524 <__assert_fail@plt+0x170c>
   135b4:	mov	r1, #1
   135b8:	movw	r2, #526	; 0x20e
   135bc:	tst	r2, r1, lsl r0
   135c0:	moveq	r2, #400	; 0x190
   135c4:	tsteq	r2, r1, lsl r0
   135c8:	bne	13514 <__assert_fail@plt+0x16fc>
   135cc:	cmp	r0, #5
   135d0:	bne	13524 <__assert_fail@plt+0x170c>
   135d4:	ldr	r0, [r8, #40]	; 0x28
   135d8:	cmp	r0, #1
   135dc:	blt	13524 <__assert_fail@plt+0x170c>
   135e0:	mov	r7, #0
   135e4:	ldr	r0, [r8, #44]	; 0x2c
   135e8:	ldr	r1, [r0, r7, lsl #2]
   135ec:	mov	r0, r4
   135f0:	bl	13680 <__assert_fail@plt+0x1868>
   135f4:	ldr	r0, [r8, #40]	; 0x28
   135f8:	add	r7, r7, #1
   135fc:	cmp	r7, r0
   13600:	blt	135e4 <__assert_fail@plt+0x17cc>
   13604:	b	13524 <__assert_fail@plt+0x170c>
   13608:	movw	r0, #6720	; 0x1a40
   1360c:	movw	r2, #61530	; 0xf05a
   13610:	movw	r1, #61465	; 0xf019
   13614:	mov	r3, #4
   13618:	movt	r0, #3
   1361c:	movt	r2, #1
   13620:	movt	r1, #1
   13624:	ldr	r0, [r0]
   13628:	cmp	r0, #0
   1362c:	mov	r0, #46	; 0x2e
   13630:	moveq	r1, r2
   13634:	ldr	r2, [sl]
   13638:	bl	13e64 <__assert_fail@plt+0x204c>
   1363c:	ldr	r0, [sp]
   13640:	cmp	r0, #0
   13644:	bne	13660 <__assert_fail@plt+0x1848>
   13648:	ldr	r2, [sl]
   1364c:	movw	r1, #61576	; 0xf088
   13650:	mov	r0, #43	; 0x2b
   13654:	mov	r3, #4
   13658:	movt	r1, #1
   1365c:	bl	13e64 <__assert_fail@plt+0x204c>
   13660:	movw	r0, #61611	; 0xf0ab
   13664:	movt	r0, #1
   13668:	bl	13680 <__assert_fail@plt+0x1868>
   1366c:	sub	sp, fp, #28
   13670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13674:	movw	sl, #7224	; 0x1c38
   13678:	movt	sl, #3
   1367c:	b	134c0 <__assert_fail@plt+0x16a8>
   13680:	sub	sp, sp, #12
   13684:	push	{r4, sl, fp, lr}
   13688:	add	fp, sp, #8
   1368c:	sub	sp, sp, #4
   13690:	mov	ip, r0
   13694:	add	r0, fp, #8
   13698:	stm	r0, {r1, r2, r3}
   1369c:	movw	r0, #7228	; 0x1c3c
   136a0:	movt	r0, #3
   136a4:	ldr	r0, [r0]
   136a8:	cmp	r0, #0
   136ac:	beq	136e8 <__assert_fail@plt+0x18d0>
   136b0:	movw	r0, #5584	; 0x15d0
   136b4:	movt	r0, #3
   136b8:	ldr	r0, [r0, #24]
   136bc:	cmp	r0, #0
   136c0:	beq	136e8 <__assert_fail@plt+0x18d0>
   136c4:	movw	r4, #5572	; 0x15c4
   136c8:	add	r2, fp, #8
   136cc:	mov	r1, ip
   136d0:	movt	r4, #3
   136d4:	str	r2, [sp]
   136d8:	ldr	r0, [r4]
   136dc:	bl	11d34 <vfprintf@plt>
   136e0:	ldr	r0, [r4]
   136e4:	bl	119e0 <fflush@plt>
   136e8:	sub	sp, fp, #8
   136ec:	pop	{r4, sl, fp, lr}
   136f0:	add	sp, sp, #12
   136f4:	bx	lr
   136f8:	movw	r0, #5584	; 0x15d0
   136fc:	mov	r1, #1
   13700:	movt	r0, #3
   13704:	strb	r1, [r0]
   13708:	bx	lr
   1370c:	push	{r4, r5, fp, lr}
   13710:	add	fp, sp, #8
   13714:	sub	sp, sp, #104	; 0x68
   13718:	mov	r5, r0
   1371c:	bl	11c50 <__errno_location@plt>
   13720:	mov	r4, r0
   13724:	ldr	r0, [r0]
   13728:	cmp	r0, #0
   1372c:	beq	13748 <__assert_fail@plt+0x1930>
   13730:	bl	11bcc <strerror@plt>
   13734:	movw	r2, #61365	; 0xefb5
   13738:	str	r0, [sp]
   1373c:	add	r0, sp, #4
   13740:	movt	r2, #1
   13744:	b	13754 <__assert_fail@plt+0x193c>
   13748:	movw	r2, #61381	; 0xefc5
   1374c:	add	r0, sp, #4
   13750:	movt	r2, #1
   13754:	mov	r1, #100	; 0x64
   13758:	mov	r3, r5
   1375c:	bl	11c5c <snprintf@plt>
   13760:	mov	r0, #0
   13764:	str	r0, [r4]
   13768:	movw	r0, #65203	; 0xfeb3
   1376c:	add	r4, sp, #4
   13770:	movt	r0, #1
   13774:	mov	r1, r4
   13778:	bl	13680 <__assert_fail@plt+0x1868>
   1377c:	movw	r0, #7224	; 0x1c38
   13780:	mov	r1, r4
   13784:	mov	r3, #4
   13788:	movt	r0, #3
   1378c:	ldr	r2, [r0]
   13790:	mov	r0, #43	; 0x2b
   13794:	bl	13e64 <__assert_fail@plt+0x204c>
   13798:	sub	sp, fp, #8
   1379c:	pop	{r4, r5, fp, pc}
   137a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137a4:	add	fp, sp, #28
   137a8:	sub	sp, sp, #12
   137ac:	sub	sp, sp, #1024	; 0x400
   137b0:	mov	r6, r0
   137b4:	movw	r0, #63464	; 0xf7e8
   137b8:	mov	r8, sp
   137bc:	mov	sl, #0
   137c0:	movt	r0, #1
   137c4:	strb	sl, [sp, #8]
   137c8:	vldr	d16, [r0]
   137cc:	mov	r0, r8
   137d0:	vstr	d16, [sp]
   137d4:	bl	11c20 <strlen@plt>
   137d8:	movw	r9, #7224	; 0x1c38
   137dc:	add	r7, r8, r0
   137e0:	add	r4, r8, #1024	; 0x400
   137e4:	movt	r9, #3
   137e8:	ldrb	r1, [r6]
   137ec:	cmp	r1, #60	; 0x3c
   137f0:	bne	13818 <__assert_fail@plt+0x1a00>
   137f4:	b	13834 <__assert_fail@plt+0x1a1c>
   137f8:	mov	r2, r7
   137fc:	strb	sl, [r2]
   13800:	ldr	r2, [r9]
   13804:	mov	r1, r8
   13808:	bl	13e64 <__assert_fail@plt+0x204c>
   1380c:	ldrb	r1, [r6]
   13810:	cmp	r1, #60	; 0x3c
   13814:	beq	13834 <__assert_fail@plt+0x1a1c>
   13818:	cmp	r1, #0
   1381c:	beq	138f4 <__assert_fail@plt+0x1adc>
   13820:	mov	r0, #2
   13824:	mov	r3, #7
   13828:	cmp	r1, #0
   1382c:	bne	138c0 <__assert_fail@plt+0x1aa8>
   13830:	b	137f8 <__assert_fail@plt+0x19e0>
   13834:	bl	11bfc <__ctype_b_loc@plt>
   13838:	mov	r3, r6
   1383c:	ldr	r2, [r0]
   13840:	ldrb	r1, [r3, #1]!
   13844:	add	r0, r2, r1, lsl #1
   13848:	ldrb	r0, [r0, #1]
   1384c:	tst	r0, #8
   13850:	bne	13878 <__assert_fail@plt+0x1a60>
   13854:	cmp	r1, #62	; 0x3e
   13858:	mov	r0, #0
   1385c:	addeq	r3, r6, #2
   13860:	mov	r6, r3
   13864:	ldrb	r1, [r6]
   13868:	mov	r3, #6
   1386c:	cmp	r1, #0
   13870:	bne	138c0 <__assert_fail@plt+0x1aa8>
   13874:	b	137f8 <__assert_fail@plt+0x19e0>
   13878:	add	r6, r6, #2
   1387c:	mov	r0, #0
   13880:	add	r0, r0, r0, lsl #2
   13884:	add	r0, r1, r0, lsl #1
   13888:	ldrb	r1, [r6], #1
   1388c:	sub	r0, r0, #48	; 0x30
   13890:	add	r3, r2, r1, lsl #1
   13894:	ldrb	r3, [r3, #1]
   13898:	tst	r3, #8
   1389c:	bne	13880 <__assert_fail@plt+0x1a68>
   138a0:	cmp	r1, #62	; 0x3e
   138a4:	subne	r6, r6, #1
   138a8:	cmp	sl, r0, lsr #10
   138ac:	movwne	r0, #2
   138b0:	ldrb	r1, [r6]
   138b4:	mov	r3, #6
   138b8:	cmp	r1, #0
   138bc:	beq	137f8 <__assert_fail@plt+0x19e0>
   138c0:	add	r5, r6, #1
   138c4:	mov	r2, r7
   138c8:	mov	r6, r5
   138cc:	cmp	r2, r4
   138d0:	bcs	137fc <__assert_fail@plt+0x19e4>
   138d4:	uxtb	r5, r1
   138d8:	cmp	r5, #10
   138dc:	strbne	r1, [r2], #1
   138e0:	movne	r5, r6
   138e4:	ldrbne	r1, [r5], #1
   138e8:	cmpne	r1, #0
   138ec:	bne	138c8 <__assert_fail@plt+0x1ab0>
   138f0:	b	137fc <__assert_fail@plt+0x19e4>
   138f4:	sub	sp, fp, #28
   138f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13900:	add	fp, sp, #24
   13904:	sub	sp, sp, #8
   13908:	sub	sp, sp, #1024	; 0x400
   1390c:	ldrb	r4, [r1]
   13910:	mov	r6, r1
   13914:	mov	r8, r0
   13918:	cmp	r4, #60	; 0x3c
   1391c:	bne	13954 <__assert_fail@plt+0x1b3c>
   13920:	bl	11bfc <__ctype_b_loc@plt>
   13924:	mov	r3, r6
   13928:	ldr	r2, [r0]
   1392c:	ldrb	r1, [r3, #1]!
   13930:	add	r0, r2, r1, lsl #1
   13934:	ldrb	r0, [r0, #1]
   13938:	tst	r0, #8
   1393c:	bne	1395c <__assert_fail@plt+0x1b44>
   13940:	cmp	r1, #62	; 0x3e
   13944:	mov	r0, #0
   13948:	addeq	r3, r6, #2
   1394c:	mov	r6, r3
   13950:	b	13998 <__assert_fail@plt+0x1b80>
   13954:	mov	r0, #13
   13958:	b	1399c <__assert_fail@plt+0x1b84>
   1395c:	add	r6, r6, #2
   13960:	mov	r0, #0
   13964:	add	r0, r0, r0, lsl #2
   13968:	add	r0, r1, r0, lsl #1
   1396c:	ldrb	r1, [r6], #1
   13970:	sub	r0, r0, #48	; 0x30
   13974:	add	r3, r2, r1, lsl #1
   13978:	ldrb	r3, [r3, #1]
   1397c:	tst	r3, #8
   13980:	bne	13964 <__assert_fail@plt+0x1b4c>
   13984:	cmp	r1, #62	; 0x3e
   13988:	mov	r1, #0
   1398c:	subne	r6, r6, #1
   13990:	cmp	r1, r0, lsr #10
   13994:	movwne	r0, #13
   13998:	ldrb	r4, [r6]
   1399c:	and	r1, r0, #1016	; 0x3f8
   139a0:	add	r7, sp, #3
   139a4:	cmp	r1, #192	; 0xc0
   139a8:	mov	r1, #1
   139ac:	movwhi	r0, #13
   139b0:	mov	r9, r0
   139b4:	tst	r0, #1016	; 0x3f8
   139b8:	bfi	r9, r1, #3, #29
   139bc:	movne	r9, r0
   139c0:	cmp	r4, #0
   139c4:	beq	13a70 <__assert_fail@plt+0x1c58>
   139c8:	add	r5, r7, #1024	; 0x400
   139cc:	add	r6, r6, #1
   139d0:	add	r7, sp, #3
   139d4:	bl	11bfc <__ctype_b_loc@plt>
   139d8:	mov	lr, #9
   139dc:	mov	r2, #32
   139e0:	mov	ip, #94	; 0x5e
   139e4:	ldr	r1, [r0]
   139e8:	uxtb	r3, r4
   139ec:	ldrb	r1, [r1, r3, lsl #1]
   139f0:	tst	r1, #2
   139f4:	bne	13a18 <__assert_fail@plt+0x1c00>
   139f8:	strb	r4, [r7]
   139fc:	add	r7, r7, #1
   13a00:	cmp	r7, r5
   13a04:	bcs	13a70 <__assert_fail@plt+0x1c58>
   13a08:	ldrb	r4, [r6], #1
   13a0c:	cmp	r4, #0
   13a10:	bne	139e4 <__assert_fail@plt+0x1bcc>
   13a14:	b	13a70 <__assert_fail@plt+0x1c58>
   13a18:	cmp	r3, #9
   13a1c:	beq	13a3c <__assert_fail@plt+0x1c24>
   13a20:	cmp	r3, #10
   13a24:	bne	13a50 <__assert_fail@plt+0x1c38>
   13a28:	strb	r2, [r7]
   13a2c:	add	r7, r7, #1
   13a30:	cmp	r7, r5
   13a34:	bcc	13a08 <__assert_fail@plt+0x1bf0>
   13a38:	b	13a70 <__assert_fail@plt+0x1c58>
   13a3c:	strb	lr, [r7]
   13a40:	add	r7, r7, #1
   13a44:	cmp	r7, r5
   13a48:	bcc	13a08 <__assert_fail@plt+0x1bf0>
   13a4c:	b	13a70 <__assert_fail@plt+0x1c58>
   13a50:	cmp	r3, #127	; 0x7f
   13a54:	bcs	139f8 <__assert_fail@plt+0x1be0>
   13a58:	eor	r1, r4, #64	; 0x40
   13a5c:	strb	ip, [r7]
   13a60:	strb	r1, [r7, #1]!
   13a64:	add	r7, r7, #1
   13a68:	cmp	r7, r5
   13a6c:	bcc	13a08 <__assert_fail@plt+0x1bf0>
   13a70:	mov	r0, #0
   13a74:	add	r1, sp, #3
   13a78:	mov	r2, r8
   13a7c:	strb	r0, [r7]
   13a80:	movw	r0, #7212	; 0x1c2c
   13a84:	movt	r0, #3
   13a88:	ldr	r0, [r0]
   13a8c:	cmp	r0, #0
   13a90:	movwne	r0, #1
   13a94:	lsl	r3, r0, #1
   13a98:	mov	r0, r9
   13a9c:	bl	13e64 <__assert_fail@plt+0x204c>
   13aa0:	sub	sp, fp, #24
   13aa4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13aa8:	push	{r4, r5, r6, r7, fp, lr}
   13aac:	add	fp, sp, #16
   13ab0:	sub	sp, sp, #16
   13ab4:	movw	r2, #7240	; 0x1c48
   13ab8:	mov	r6, r0
   13abc:	mov	r0, #1
   13ac0:	mov	r4, #0
   13ac4:	mov	r3, #46	; 0x2e
   13ac8:	mov	r5, r1
   13acc:	movt	r2, #3
   13ad0:	str	r0, [sp, #8]
   13ad4:	mov	r0, r6
   13ad8:	str	r4, [sp]
   13adc:	str	r4, [sp, #4]
   13ae0:	bl	11d1c <getnameinfo@plt>
   13ae4:	cmp	r0, #0
   13ae8:	beq	13b14 <__assert_fail@plt+0x1cfc>
   13aec:	bl	11a28 <gai_strerror@plt>
   13af0:	mov	r1, r0
   13af4:	movw	r0, #61227	; 0xef2b
   13af8:	movt	r0, #1
   13afc:	bl	13680 <__assert_fail@plt+0x1868>
   13b00:	movw	r4, #61256	; 0xef48
   13b04:	movt	r4, #1
   13b08:	mov	r0, r4
   13b0c:	sub	sp, fp, #16
   13b10:	pop	{r4, r5, r6, r7, fp, pc}
   13b14:	movw	r7, #7240	; 0x1c48
   13b18:	movw	r0, #61260	; 0xef4c
   13b1c:	movt	r7, #3
   13b20:	movt	r0, #1
   13b24:	mov	r1, r7
   13b28:	bl	13680 <__assert_fail@plt+0x1868>
   13b2c:	str	r4, [sp]
   13b30:	str	r4, [sp, #4]
   13b34:	movw	r4, #7304	; 0x1c88
   13b38:	mov	r0, #8
   13b3c:	mov	r1, r5
   13b40:	movw	r3, #1025	; 0x401
   13b44:	movt	r4, #3
   13b48:	str	r0, [sp, #8]
   13b4c:	mov	r0, r6
   13b50:	mov	r2, r4
   13b54:	bl	11d1c <getnameinfo@plt>
   13b58:	cmp	r0, #0
   13b5c:	beq	13b80 <__assert_fail@plt+0x1d68>
   13b60:	movw	r0, #61274	; 0xef5a
   13b64:	mov	r1, r7
   13b68:	movt	r0, #1
   13b6c:	bl	13680 <__assert_fail@plt+0x1868>
   13b70:	mov	r4, r7
   13b74:	mov	r0, r4
   13b78:	sub	sp, fp, #16
   13b7c:	pop	{r4, r5, r6, r7, fp, pc}
   13b80:	mov	r0, r4
   13b84:	mov	r1, #46	; 0x2e
   13b88:	bl	11c38 <strchr@plt>
   13b8c:	cmp	r0, #0
   13b90:	beq	13b74 <__assert_fail@plt+0x1d5c>
   13b94:	mov	r5, r0
   13b98:	movw	r0, #7220	; 0x1c34
   13b9c:	movt	r0, #3
   13ba0:	add	r6, r5, #1
   13ba4:	ldr	r1, [r0]
   13ba8:	mov	r0, r6
   13bac:	bl	11b0c <strcasecmp@plt>
   13bb0:	cmp	r0, #0
   13bb4:	beq	13c44 <__assert_fail@plt+0x1e2c>
   13bb8:	movw	r0, #7196	; 0x1c1c
   13bbc:	movt	r0, #3
   13bc0:	ldr	r0, [r0]
   13bc4:	cmp	r0, #0
   13bc8:	beq	13bf8 <__assert_fail@plt+0x1de0>
   13bcc:	ldr	r1, [r0]
   13bd0:	cmp	r1, #0
   13bd4:	beq	13bf8 <__assert_fail@plt+0x1de0>
   13bd8:	add	r7, r0, #4
   13bdc:	mov	r0, r6
   13be0:	bl	11b0c <strcasecmp@plt>
   13be4:	cmp	r0, #0
   13be8:	beq	13c44 <__assert_fail@plt+0x1e2c>
   13bec:	ldr	r1, [r7], #4
   13bf0:	cmp	r1, #0
   13bf4:	bne	13bdc <__assert_fail@plt+0x1dc4>
   13bf8:	movw	r0, #7236	; 0x1c44
   13bfc:	movt	r0, #3
   13c00:	ldr	r0, [r0]
   13c04:	cmp	r0, #0
   13c08:	beq	13b74 <__assert_fail@plt+0x1d5c>
   13c0c:	ldr	r1, [r0]
   13c10:	cmp	r1, #0
   13c14:	beq	13b74 <__assert_fail@plt+0x1d5c>
   13c18:	movw	r4, #7304	; 0x1c88
   13c1c:	add	r6, r0, #4
   13c20:	movt	r4, #3
   13c24:	mov	r0, r4
   13c28:	bl	11b0c <strcasecmp@plt>
   13c2c:	cmp	r0, #0
   13c30:	beq	13c44 <__assert_fail@plt+0x1e2c>
   13c34:	ldr	r1, [r6], #4
   13c38:	cmp	r1, #0
   13c3c:	bne	13c24 <__assert_fail@plt+0x1e0c>
   13c40:	b	13b74 <__assert_fail@plt+0x1d5c>
   13c44:	mov	r0, #0
   13c48:	strb	r0, [r5]
   13c4c:	mov	r0, r4
   13c50:	sub	sp, fp, #16
   13c54:	pop	{r4, r5, r6, r7, fp, pc}
   13c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c5c:	add	fp, sp, #28
   13c60:	sub	sp, sp, #4
   13c64:	mov	r9, r0
   13c68:	mov	r0, r1
   13c6c:	mov	r5, r1
   13c70:	bl	11c20 <strlen@plt>
   13c74:	add	r0, r0, r5
   13c78:	ldrb	r1, [r0, #-1]!
   13c7c:	cmp	r1, #58	; 0x3a
   13c80:	bne	13cac <__assert_fail@plt+0x1e94>
   13c84:	mov	r4, #0
   13c88:	strb	r4, [r0]
   13c8c:	mov	r0, r5
   13c90:	bl	11c20 <strlen@plt>
   13c94:	add	r0, r0, r5
   13c98:	ldrb	r1, [r0, #-1]!
   13c9c:	cmp	r1, #58	; 0x3a
   13ca0:	beq	13c88 <__assert_fail@plt+0x1e70>
   13ca4:	b	13cac <__assert_fail@plt+0x1e94>
   13ca8:	add	r5, r5, #1
   13cac:	ldrb	r2, [r5]
   13cb0:	cmp	r2, #58	; 0x3a
   13cb4:	beq	13ca8 <__assert_fail@plt+0x1e90>
   13cb8:	cmp	r2, #0
   13cbc:	beq	13e58 <__assert_fail@plt+0x2040>
   13cc0:	mov	r1, #1
   13cc4:	mov	r0, #1
   13cc8:	uxtb	r2, r2
   13ccc:	cmp	r2, #58	; 0x3a
   13cd0:	bne	13cec <__assert_fail@plt+0x1ed4>
   13cd4:	add	r0, r0, #1
   13cd8:	ldrb	r2, [r5, r1]
   13cdc:	add	r1, r1, #1
   13ce0:	uxtb	r2, r2
   13ce4:	cmp	r2, #58	; 0x3a
   13ce8:	beq	13cd4 <__assert_fail@plt+0x1ebc>
   13cec:	cmp	r2, #0
   13cf0:	bne	13cd8 <__assert_fail@plt+0x1ec0>
   13cf4:	cmp	r9, #0
   13cf8:	beq	13d18 <__assert_fail@plt+0x1f00>
   13cfc:	mov	r1, #0
   13d00:	ldr	r2, [r9, r1, lsl #2]
   13d04:	add	r1, r1, #1
   13d08:	cmp	r2, #0
   13d0c:	bne	13d00 <__assert_fail@plt+0x1ee8>
   13d10:	sub	r4, r1, #1
   13d14:	b	13d1c <__assert_fail@plt+0x1f04>
   13d18:	mov	r4, #0
   13d1c:	add	r0, r4, r0
   13d20:	mov	r1, #4
   13d24:	add	r1, r1, r0, lsl #2
   13d28:	mov	r0, r9
   13d2c:	bl	1caa8 <argp_parse@@Base+0x2618>
   13d30:	mov	r9, r0
   13d34:	cmp	r0, #0
   13d38:	bne	13d54 <__assert_fail@plt+0x1f3c>
   13d3c:	bl	11c50 <__errno_location@plt>
   13d40:	ldr	r1, [r0]
   13d44:	movw	r2, #60539	; 0xec7b
   13d48:	mov	r0, #1
   13d4c:	movt	r2, #1
   13d50:	bl	11b6c <error@plt>
   13d54:	mov	r0, r5
   13d58:	mov	r1, #58	; 0x3a
   13d5c:	bl	11c38 <strchr@plt>
   13d60:	cmp	r0, #0
   13d64:	beq	13de4 <__assert_fail@plt+0x1fcc>
   13d68:	movw	r8, #60539	; 0xec7b
   13d6c:	mov	r6, r0
   13d70:	mov	sl, #0
   13d74:	movt	r8, #1
   13d78:	b	13db0 <__assert_fail@plt+0x1f98>
   13d7c:	mov	r1, r5
   13d80:	mov	r2, r7
   13d84:	bl	11c98 <strncpy@plt>
   13d88:	ldr	r0, [r9, r4, lsl #2]
   13d8c:	add	r5, r6, #1
   13d90:	mov	r1, #58	; 0x3a
   13d94:	strb	sl, [r0, r7]
   13d98:	mov	r0, r5
   13d9c:	bl	11c38 <strchr@plt>
   13da0:	mov	r6, r0
   13da4:	add	r4, r4, #1
   13da8:	cmp	r0, #0
   13dac:	beq	13de4 <__assert_fail@plt+0x1fcc>
   13db0:	sub	r7, r6, r5
   13db4:	add	r0, r7, #1
   13db8:	bl	1ca78 <argp_parse@@Base+0x25e8>
   13dbc:	cmp	r0, #0
   13dc0:	str	r0, [r9, r4, lsl #2]
   13dc4:	bne	13d7c <__assert_fail@plt+0x1f64>
   13dc8:	bl	11c50 <__errno_location@plt>
   13dcc:	ldr	r1, [r0]
   13dd0:	mov	r0, #1
   13dd4:	mov	r2, r8
   13dd8:	bl	11b6c <error@plt>
   13ddc:	ldr	r0, [r9, r4, lsl #2]
   13de0:	b	13d7c <__assert_fail@plt+0x1f64>
   13de4:	mov	r0, r5
   13de8:	bl	11c20 <strlen@plt>
   13dec:	add	r0, r0, #1
   13df0:	bl	1c4b8 <argp_parse@@Base+0x2028>
   13df4:	mov	r6, r9
   13df8:	mov	r1, r5
   13dfc:	str	r0, [r6, r4, lsl #2]!
   13e00:	bl	11b60 <strcpy@plt>
   13e04:	mov	r0, #0
   13e08:	str	r0, [r6, #4]
   13e0c:	movw	r0, #7204	; 0x1c24
   13e10:	movt	r0, #3
   13e14:	ldr	r0, [r0]
   13e18:	cmp	r0, #0
   13e1c:	beq	13e58 <__assert_fail@plt+0x2040>
   13e20:	ldr	r2, [r9]
   13e24:	cmp	r2, #0
   13e28:	beq	13e58 <__assert_fail@plt+0x2040>
   13e2c:	movw	r6, #60561	; 0xec91
   13e30:	add	r4, r9, #4
   13e34:	mov	r5, #0
   13e38:	movt	r6, #1
   13e3c:	mov	r0, r6
   13e40:	mov	r1, r5
   13e44:	bl	119c8 <printf@plt>
   13e48:	ldr	r2, [r4, r5, lsl #2]
   13e4c:	add	r5, r5, #1
   13e50:	cmp	r2, #0
   13e54:	bne	13e3c <__assert_fail@plt+0x2024>
   13e58:	mov	r0, r9
   13e5c:	sub	sp, fp, #28
   13e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e68:	add	fp, sp, #28
   13e6c:	sub	sp, sp, #300	; 0x12c
   13e70:	mov	r5, r1
   13e74:	movw	r1, #4624	; 0x1210
   13e78:	mov	r4, r3
   13e7c:	mov	r9, r0
   13e80:	mov	r3, #0
   13e84:	movt	r1, #3
   13e88:	ldr	r7, [r1]
   13e8c:	cmp	r7, #0
   13e90:	beq	13ed4 <__assert_fail@plt+0x20bc>
   13e94:	ldr	r3, [r1, #4]
   13e98:	and	r0, r9, #1016	; 0x3f8
   13e9c:	cmp	r3, r0
   13ea0:	mov	r3, r7
   13ea4:	beq	13ed4 <__assert_fail@plt+0x20bc>
   13ea8:	add	r1, r1, #8
   13eac:	ldr	r3, [r1]
   13eb0:	cmp	r3, #0
   13eb4:	beq	13ed0 <__assert_fail@plt+0x20b8>
   13eb8:	add	r7, r1, #8
   13ebc:	ldr	r1, [r1, #4]
   13ec0:	cmp	r1, r0
   13ec4:	mov	r1, r7
   13ec8:	bne	13eac <__assert_fail@plt+0x2094>
   13ecc:	b	13ed4 <__assert_fail@plt+0x20bc>
   13ed0:	mov	r3, #0
   13ed4:	str	r2, [sp, #32]
   13ed8:	movw	r2, #4520	; 0x11a8
   13edc:	movt	r2, #3
   13ee0:	ldr	r0, [r2]
   13ee4:	cmp	r0, #0
   13ee8:	beq	13f24 <__assert_fail@plt+0x210c>
   13eec:	ldr	r7, [r2, #4]
   13ef0:	and	r1, r9, #7
   13ef4:	cmp	r7, r1
   13ef8:	beq	13f28 <__assert_fail@plt+0x2110>
   13efc:	add	r2, r2, #8
   13f00:	ldr	r0, [r2]
   13f04:	cmp	r0, #0
   13f08:	beq	13f24 <__assert_fail@plt+0x210c>
   13f0c:	add	r7, r2, #8
   13f10:	ldr	r2, [r2, #4]
   13f14:	cmp	r2, r1
   13f18:	mov	r2, r7
   13f1c:	bne	13f00 <__assert_fail@plt+0x20e8>
   13f20:	b	13f28 <__assert_fail@plt+0x2110>
   13f24:	mov	r0, #0
   13f28:	movw	r7, #5584	; 0x15d0
   13f2c:	movw	r2, #60570	; 0xec9a
   13f30:	str	r0, [sp]
   13f34:	mov	r1, #20
   13f38:	movt	r7, #3
   13f3c:	movt	r2, #1
   13f40:	add	r6, r7, #28
   13f44:	mov	r0, r6
   13f48:	bl	11c5c <snprintf@plt>
   13f4c:	ldr	r0, [sp, #32]
   13f50:	mov	r1, r6
   13f54:	mov	r2, r9
   13f58:	mov	r3, r4
   13f5c:	stm	sp, {r0, r5}
   13f60:	movw	r0, #60576	; 0xeca0
   13f64:	movt	r0, #1
   13f68:	bl	13680 <__assert_fail@plt+0x1868>
   13f6c:	sub	r6, fp, #160	; 0xa0
   13f70:	mov	r0, r6
   13f74:	bl	11d04 <sigemptyset@plt>
   13f78:	mov	r0, r6
   13f7c:	mov	r1, #1
   13f80:	bl	11bb4 <sigaddset@plt>
   13f84:	mov	r0, r6
   13f88:	mov	r1, #14
   13f8c:	bl	11bb4 <sigaddset@plt>
   13f90:	add	r2, sp, #40	; 0x28
   13f94:	mov	r0, #0
   13f98:	mov	r1, r6
   13f9c:	bl	119f8 <sigprocmask@plt>
   13fa0:	mov	r0, r5
   13fa4:	bl	11c20 <strlen@plt>
   13fa8:	mov	r6, r0
   13fac:	cmp	r0, #16
   13fb0:	blt	13ff4 <__assert_fail@plt+0x21dc>
   13fb4:	ldrb	r0, [r5, #3]
   13fb8:	cmp	r0, #32
   13fbc:	bne	13ff4 <__assert_fail@plt+0x21dc>
   13fc0:	ldrb	r0, [r5, #6]
   13fc4:	cmp	r0, #32
   13fc8:	bne	13ff4 <__assert_fail@plt+0x21dc>
   13fcc:	ldrb	r0, [r5, #9]
   13fd0:	cmp	r0, #58	; 0x3a
   13fd4:	bne	13ff4 <__assert_fail@plt+0x21dc>
   13fd8:	ldrb	r0, [r5, #12]
   13fdc:	cmp	r0, #58	; 0x3a
   13fe0:	bne	13ff4 <__assert_fail@plt+0x21dc>
   13fe4:	ldrb	r0, [r5, #15]
   13fe8:	cmp	r0, #32
   13fec:	orrne	r4, r4, #4
   13ff0:	b	13ff8 <__assert_fail@plt+0x21e0>
   13ff4:	orr	r4, r4, #4
   13ff8:	movw	r0, #7288	; 0x1c78
   13ffc:	movt	r0, #3
   14000:	bl	11a70 <time@plt>
   14004:	tst	r4, #4
   14008:	bne	14040 <__assert_fail@plt+0x2228>
   1400c:	ldr	r0, [r7, #20]
   14010:	str	r5, [sp, #24]
   14014:	cmp	r0, #0
   14018:	beq	14030 <__assert_fail@plt+0x2218>
   1401c:	movw	r0, #7288	; 0x1c78
   14020:	movt	r0, #3
   14024:	bl	11a94 <ctime@plt>
   14028:	add	r0, r0, #4
   1402c:	str	r0, [sp, #24]
   14030:	sub	r6, r6, #16
   14034:	add	r5, r5, #16
   14038:	str	r5, [sp, #36]	; 0x24
   1403c:	b	14058 <__assert_fail@plt+0x2240>
   14040:	movw	r0, #7288	; 0x1c78
   14044:	str	r5, [sp, #36]	; 0x24
   14048:	movt	r0, #3
   1404c:	bl	11a94 <ctime@plt>
   14050:	add	r0, r0, #4
   14054:	str	r0, [sp, #24]
   14058:	movw	r0, #7216	; 0x1c30
   1405c:	str	r4, [sp, #28]
   14060:	ands	r8, r4, #8
   14064:	ubfx	r4, r9, #3, #7
   14068:	movt	r0, #3
   1406c:	movwne	r4, #24
   14070:	ldr	r0, [r0]
   14074:	cmp	r0, #0
   14078:	beq	14338 <__assert_fail@plt+0x2520>
   1407c:	movw	r0, #6728	; 0x1a48
   14080:	str	r9, [sp, #16]
   14084:	str	r6, [sp, #20]
   14088:	movt	r0, #3
   1408c:	ldr	r9, [r0]
   14090:	cmp	r9, #0
   14094:	beq	14398 <__assert_fail@plt+0x2580>
   14098:	ldr	r0, [sp, #16]
   1409c:	mov	r1, #1
   140a0:	mov	r2, #0
   140a4:	and	r0, r0, #7
   140a8:	lsl	r6, r1, r0
   140ac:	ldr	r0, [sp, #28]
   140b0:	and	sl, r0, #1
   140b4:	movw	r0, #5400	; 0x1518
   140b8:	movt	r0, #3
   140bc:	add	r0, r0, #28
   140c0:	str	r0, [sp, #12]
   140c4:	add	r0, r9, r4
   140c8:	ldrb	r0, [r0, #12]
   140cc:	tst	r6, r0
   140d0:	bne	14114 <__assert_fail@plt+0x22fc>
   140d4:	b	140f8 <__assert_fail@plt+0x22e0>
   140d8:	ldr	r2, [sp, #28]
   140dc:	ldr	r3, [sp, #36]	; 0x24
   140e0:	mov	r0, r9
   140e4:	mov	r1, r7
   140e8:	str	r5, [r9, #448]	; 0x1c0
   140ec:	strb	r5, [r9, #176]	; 0xb0
   140f0:	bl	14494 <__assert_fail@plt+0x267c>
   140f4:	mov	r2, #0
   140f8:	ldr	r9, [r9]
   140fc:	cmp	r9, #0
   14100:	beq	14398 <__assert_fail@plt+0x2580>
   14104:	add	r0, r9, r4
   14108:	ldrb	r0, [r0, #12]
   1410c:	tst	r6, r0
   14110:	beq	140f8 <__assert_fail@plt+0x22e0>
   14114:	cmp	sl, #0
   14118:	beq	14128 <__assert_fail@plt+0x2310>
   1411c:	ldrh	r0, [r9, #4]
   14120:	cmp	r0, #3
   14124:	beq	140f8 <__assert_fail@plt+0x22e0>
   14128:	cmp	r8, #0
   1412c:	beq	1415c <__assert_fail@plt+0x2344>
   14130:	movw	r1, #7288	; 0x1c78
   14134:	ldr	r0, [r9, #8]
   14138:	movt	r1, #3
   1413c:	ldr	r1, [r1]
   14140:	sub	r0, r1, r0
   14144:	movw	r1, #5400	; 0x1518
   14148:	movt	r1, #3
   1414c:	ldr	r1, [r1, #20]
   14150:	add	r1, r1, r1, lsr #31
   14154:	cmp	r0, r1, asr #1
   14158:	blt	140f8 <__assert_fail@plt+0x22e0>
   1415c:	ldr	r1, [r9, #436]	; 0x1b4
   14160:	cmp	r1, #0
   14164:	beq	141b0 <__assert_fail@plt+0x2398>
   14168:	ldr	r7, [r9, #440]	; 0x1b8
   1416c:	ldr	r0, [sp, #36]	; 0x24
   14170:	mov	r2, r7
   14174:	bl	11ddc <strncmp@plt>
   14178:	mov	r2, #0
   1417c:	cmp	r0, #0
   14180:	bne	140f8 <__assert_fail@plt+0x22e0>
   14184:	bl	11bfc <__ctype_b_loc@plt>
   14188:	ldr	r1, [sp, #36]	; 0x24
   1418c:	ldr	r0, [r0]
   14190:	mov	r2, #0
   14194:	ldrb	r1, [r1, r7]
   14198:	ldrb	r0, [r0, r1, lsl #1]
   1419c:	tst	r0, #8
   141a0:	bne	140f8 <__assert_fail@plt+0x22e0>
   141a4:	cmp	r1, #45	; 0x2d
   141a8:	cmpne	r1, #95	; 0x5f
   141ac:	beq	140f8 <__assert_fail@plt+0x22e0>
   141b0:	cmp	r8, #0
   141b4:	bne	14204 <__assert_fail@plt+0x23ec>
   141b8:	ldr	r0, [r9, #448]	; 0x1c0
   141bc:	ldr	r1, [sp, #20]
   141c0:	cmp	r1, r0
   141c4:	bne	14204 <__assert_fail@plt+0x23ec>
   141c8:	ldr	r7, [r9, #432]	; 0x1b0
   141cc:	cmp	r7, #0
   141d0:	beq	14204 <__assert_fail@plt+0x23ec>
   141d4:	ldr	r0, [sp, #36]	; 0x24
   141d8:	add	r1, r9, #176	; 0xb0
   141dc:	bl	11998 <strcmp@plt>
   141e0:	mov	r2, #0
   141e4:	cmp	r0, #0
   141e8:	bne	14204 <__assert_fail@plt+0x23ec>
   141ec:	ldr	r0, [sp, #32]
   141f0:	mov	r1, r7
   141f4:	bl	11998 <strcmp@plt>
   141f8:	mov	r2, #0
   141fc:	cmp	r0, #0
   14200:	beq	14290 <__assert_fail@plt+0x2478>
   14204:	ldr	r0, [r9, #452]	; 0x1c4
   14208:	ldr	r7, [sp, #32]
   1420c:	cmp	r0, #0
   14210:	beq	1422c <__assert_fail@plt+0x2414>
   14214:	mov	r0, r9
   14218:	mov	r1, r7
   1421c:	mov	r2, #0
   14220:	mov	r3, #0
   14224:	bl	14494 <__assert_fail@plt+0x267c>
   14228:	mov	r2, #0
   1422c:	ldr	r1, [sp, #24]
   14230:	str	r2, [r9, #456]	; 0x1c8
   14234:	add	r0, r9, #416	; 0x1a0
   14238:	mov	r2, #15
   1423c:	mov	r5, #0
   14240:	bl	11c98 <strncpy@plt>
   14244:	ldr	r0, [r9, #432]	; 0x1b0
   14248:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1424c:	mov	r0, r7
   14250:	bl	11aac <strdup@plt>
   14254:	str	r0, [r9, #432]	; 0x1b0
   14258:	ldr	r0, [sp, #20]
   1425c:	cmp	r0, #239	; 0xef
   14260:	bgt	140d8 <__assert_fail@plt+0x22c0>
   14264:	ldr	r1, [sp, #16]
   14268:	str	r1, [r9, #444]	; 0x1bc
   1426c:	ldr	r1, [sp, #36]	; 0x24
   14270:	str	r0, [r9, #448]	; 0x1c0
   14274:	add	r0, r9, #176	; 0xb0
   14278:	bl	11b60 <strcpy@plt>
   1427c:	ldr	r2, [sp, #28]
   14280:	mov	r0, r9
   14284:	mov	r1, r7
   14288:	mov	r3, #0
   1428c:	b	140f0 <__assert_fail@plt+0x22d8>
   14290:	ldr	r1, [sp, #24]
   14294:	add	r0, r9, #416	; 0x1a0
   14298:	mov	r2, #15
   1429c:	bl	11c98 <strncpy@plt>
   142a0:	ldr	r1, [r9, #452]	; 0x1c4
   142a4:	ldr	r2, [r9, #456]	; 0x1c8
   142a8:	ldr	r7, [sp, #12]
   142ac:	ldr	r0, [r9, #8]
   142b0:	add	r1, r1, #1
   142b4:	str	r1, [r9, #452]	; 0x1c4
   142b8:	ldr	r3, [r7, r2, lsl #2]
   142bc:	movw	r2, #7288	; 0x1c78
   142c0:	movt	r2, #3
   142c4:	mov	r5, r2
   142c8:	ldr	r2, [r2]
   142cc:	sub	r2, r2, r0
   142d0:	movw	r0, #60622	; 0xecce
   142d4:	movt	r0, #1
   142d8:	bl	13680 <__assert_fail@plt+0x1868>
   142dc:	ldr	r1, [r9, #456]	; 0x1c8
   142e0:	ldr	r0, [r9, #8]
   142e4:	mov	r2, #0
   142e8:	ldr	r1, [r7, r1, lsl #2]
   142ec:	add	r0, r1, r0
   142f0:	ldr	r1, [r5]
   142f4:	cmp	r1, r0
   142f8:	ble	140f8 <__assert_fail@plt+0x22e0>
   142fc:	ldr	r1, [sp, #32]
   14300:	ldr	r2, [sp, #28]
   14304:	mov	r0, r9
   14308:	mov	r3, #0
   1430c:	bl	14494 <__assert_fail@plt+0x267c>
   14310:	ldr	r0, [r9, #456]	; 0x1c8
   14314:	mvn	r1, #0
   14318:	mov	r2, #0
   1431c:	subs	r0, r0, r1
   14320:	movwne	r0, #1
   14324:	str	r0, [r9, #456]	; 0x1c8
   14328:	ldr	r9, [r9]
   1432c:	cmp	r9, #0
   14330:	bne	14104 <__assert_fail@plt+0x22ec>
   14334:	b	14398 <__assert_fail@plt+0x2580>
   14338:	movw	r0, #5400	; 0x1518
   1433c:	mov	r1, #1
   14340:	mov	r2, #0
   14344:	movt	r0, #3
   14348:	add	r0, r0, #44	; 0x2c
   1434c:	bl	11b90 <open64@plt>
   14350:	movw	r6, #6732	; 0x1a4c
   14354:	movt	r6, #3
   14358:	strh	r0, [r6, #6]
   1435c:	movw	r0, #7224	; 0x1c38
   14360:	movt	r0, #3
   14364:	ldr	r0, [r0]
   14368:	bl	11aac <strdup@plt>
   1436c:	str	r0, [r6, #432]	; 0x1b0
   14370:	ldrsh	r0, [r6, #6]
   14374:	cmp	r0, #0
   14378:	bmi	14398 <__assert_fail@plt+0x2580>
   1437c:	ldr	r1, [sp, #32]
   14380:	ldr	r2, [sp, #28]
   14384:	ldr	r3, [sp, #36]	; 0x24
   14388:	mov	r0, r6
   1438c:	bl	14494 <__assert_fail@plt+0x267c>
   14390:	ldrsh	r0, [r6, #6]
   14394:	bl	11e00 <close@plt>
   14398:	add	r1, sp, #40	; 0x28
   1439c:	mov	r0, #2
   143a0:	mov	r2, #0
   143a4:	bl	119f8 <sigprocmask@plt>
   143a8:	sub	sp, fp, #28
   143ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143b0:	push	{r4, sl, fp, lr}
   143b4:	add	fp, sp, #8
   143b8:	sub	sp, sp, #8
   143bc:	movw	r2, #4624	; 0x1210
   143c0:	mov	r3, #0
   143c4:	movt	r2, #3
   143c8:	ldr	r4, [r2]
   143cc:	cmp	r4, #0
   143d0:	beq	14414 <__assert_fail@plt+0x25fc>
   143d4:	ldr	r3, [r2, #4]
   143d8:	and	r1, r0, #1016	; 0x3f8
   143dc:	cmp	r3, r1
   143e0:	mov	r3, r4
   143e4:	beq	14414 <__assert_fail@plt+0x25fc>
   143e8:	add	r2, r2, #8
   143ec:	ldr	r3, [r2]
   143f0:	cmp	r3, #0
   143f4:	beq	14410 <__assert_fail@plt+0x25f8>
   143f8:	add	r4, r2, #8
   143fc:	ldr	r2, [r2, #4]
   14400:	cmp	r2, r1
   14404:	mov	r2, r4
   14408:	bne	143ec <__assert_fail@plt+0x25d4>
   1440c:	b	14414 <__assert_fail@plt+0x25fc>
   14410:	mov	r3, #0
   14414:	movw	r2, #4520	; 0x11a8
   14418:	movt	r2, #3
   1441c:	ldr	r1, [r2]
   14420:	cmp	r1, #0
   14424:	beq	14460 <__assert_fail@plt+0x2648>
   14428:	ldr	r4, [r2, #4]
   1442c:	and	r0, r0, #7
   14430:	cmp	r4, r0
   14434:	beq	14464 <__assert_fail@plt+0x264c>
   14438:	add	r2, r2, #8
   1443c:	ldr	r1, [r2]
   14440:	cmp	r1, #0
   14444:	beq	14460 <__assert_fail@plt+0x2648>
   14448:	add	r4, r2, #8
   1444c:	ldr	r2, [r2, #4]
   14450:	cmp	r2, r0
   14454:	mov	r2, r4
   14458:	bne	1443c <__assert_fail@plt+0x2624>
   1445c:	b	14464 <__assert_fail@plt+0x264c>
   14460:	mov	r1, #0
   14464:	movw	r0, #5584	; 0x15d0
   14468:	movw	r2, #60570	; 0xec9a
   1446c:	str	r1, [sp]
   14470:	mov	r1, #20
   14474:	movt	r0, #3
   14478:	movt	r2, #1
   1447c:	add	r4, r0, #28
   14480:	mov	r0, r4
   14484:	bl	11c5c <snprintf@plt>
   14488:	mov	r0, r4
   1448c:	sub	sp, fp, #8
   14490:	pop	{r4, sl, fp, pc}
   14494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14498:	add	fp, sp, #28
   1449c:	sub	sp, sp, #356	; 0x164
   144a0:	sub	sp, sp, #1024	; 0x400
   144a4:	vmov.i32	q8, #0	; 0x00000000
   144a8:	sub	r6, fp, #80	; 0x50
   144ac:	mov	sl, r1
   144b0:	mov	r4, r0
   144b4:	mov	r0, #32
   144b8:	mov	r7, r3
   144bc:	mov	r8, r2
   144c0:	mov	r1, r6
   144c4:	add	r5, r6, #16
   144c8:	vst1.64	{d16-d17}, [r1], r0
   144cc:	vst1.64	{d16-d17}, [r5]
   144d0:	vst1.64	{d16-d17}, [r1]
   144d4:	ldrh	r0, [r4, #4]
   144d8:	cmp	r0, #6
   144dc:	bne	14538 <__assert_fail@plt+0x2720>
   144e0:	mov	r9, sl
   144e4:	add	sl, sp, #16
   144e8:	movw	r0, #7288	; 0x1c78
   144ec:	str	sl, [fp, #-80]	; 0xffffffb0
   144f0:	movt	r0, #3
   144f4:	ldr	r6, [r4, #432]	; 0x1b0
   144f8:	bl	11a94 <ctime@plt>
   144fc:	movw	r2, #60660	; 0xecf4
   14500:	str	r0, [sp]
   14504:	mov	r3, r6
   14508:	mov	r0, sl
   1450c:	mov	r1, #200	; 0xc8
   14510:	sub	r6, fp, #80	; 0x50
   14514:	movt	r2, #1
   14518:	bl	11c5c <snprintf@plt>
   1451c:	mov	r0, sl
   14520:	mov	sl, r9
   14524:	bl	11c20 <strlen@plt>
   14528:	movw	r1, #63437	; 0xf7cd
   1452c:	mov	r2, #0
   14530:	movt	r1, #1
   14534:	b	14550 <__assert_fail@plt+0x2738>
   14538:	movw	r1, #64409	; 0xfb99
   1453c:	add	r0, r4, #416	; 0x1a0
   14540:	mov	r2, #1
   14544:	movt	r1, #1
   14548:	str	r0, [fp, #-80]	; 0xffffffb0
   1454c:	mov	r0, #15
   14550:	sub	r3, fp, #76	; 0x4c
   14554:	stm	r3, {r0, r1, r2}
   14558:	ldr	r0, [r4, #432]	; 0x1b0
   1455c:	cmp	r0, #0
   14560:	beq	14574 <__assert_fail@plt+0x275c>
   14564:	str	r0, [fp, #-64]	; 0xffffffc0
   14568:	bl	11c20 <strlen@plt>
   1456c:	add	r5, r6, #24
   14570:	str	r0, [fp, #-60]	; 0xffffffc4
   14574:	movw	r1, #64409	; 0xfb99
   14578:	cmp	r7, #0
   1457c:	mov	r0, #1
   14580:	movt	r1, #1
   14584:	str	r1, [r5]
   14588:	str	r0, [r5, #4]
   1458c:	beq	145a0 <__assert_fail@plt+0x2788>
   14590:	mov	r0, r7
   14594:	str	r7, [r5, #8]
   14598:	bl	11c20 <strlen@plt>
   1459c:	b	145e0 <__assert_fail@plt+0x27c8>
   145a0:	ldr	r3, [r4, #452]	; 0x1c4
   145a4:	cmp	r3, #2
   145a8:	blt	145d4 <__assert_fail@plt+0x27bc>
   145ac:	movw	r2, #60702	; 0xed1e
   145b0:	add	r6, sp, #216	; 0xd8
   145b4:	mov	r1, #80	; 0x50
   145b8:	movt	r2, #1
   145bc:	mov	r0, r6
   145c0:	str	r6, [r5, #8]
   145c4:	bl	11c5c <snprintf@plt>
   145c8:	mov	r0, r6
   145cc:	bl	11c20 <strlen@plt>
   145d0:	b	145e0 <__assert_fail@plt+0x27c8>
   145d4:	add	r0, r4, #176	; 0xb0
   145d8:	str	r0, [r5, #8]
   145dc:	ldr	r0, [r4, #448]	; 0x1c0
   145e0:	str	r0, [r5, #12]
   145e4:	movw	r1, #4808	; 0x12c8
   145e8:	ldrsh	r0, [r4, #4]
   145ec:	movt	r1, #3
   145f0:	ldr	r1, [r1, r0, lsl #2]
   145f4:	movw	r0, #60733	; 0xed3d
   145f8:	movt	r0, #1
   145fc:	bl	13680 <__assert_fail@plt+0x1868>
   14600:	ldrsh	r0, [r4, #4]
   14604:	cmp	r0, #9
   14608:	bhi	14794 <__assert_fail@plt+0x297c>
   1460c:	add	r1, pc, #0
   14610:	ldr	pc, [r1, r0, lsl #2]
   14614:	andeq	r4, r1, r4, lsr #15
   14618:	andeq	r4, r1, ip, lsr r6
   1461c:	andeq	r4, r1, ip, lsr r6
   14620:	ldrdeq	r4, [r1], -r0
   14624:	andeq	r4, r1, r8, asr #19
   14628:	andeq	r4, r1, r4, lsl r7
   1462c:	andeq	r4, r1, r4, lsl r7
   14630:	andeq	r4, r1, r4, lsl #16
   14634:	andeq	r4, r1, r4, lsr r8
   14638:	andeq	r4, r1, ip, lsr r6
   1463c:	movw	r0, #7288	; 0x1c78
   14640:	movt	r0, #3
   14644:	ldr	r0, [r0]
   14648:	str	r0, [r4, #8]
   1464c:	movw	r0, #65202	; 0xfeb2
   14650:	ldr	r1, [r4, #40]	; 0x28
   14654:	movt	r0, #1
   14658:	bl	13680 <__assert_fail@plt+0x1868>
   1465c:	ldrh	r0, [r4, #4]
   14660:	movw	r1, #60699	; 0xed1b
   14664:	movw	r2, #60700	; 0xed1c
   14668:	movt	r1, #1
   1466c:	movt	r2, #1
   14670:	bic	r0, r0, #1
   14674:	cmp	r0, #2
   14678:	moveq	r2, r1
   1467c:	movwne	r0, #1
   14680:	str	r2, [r5, #16]
   14684:	str	r0, [r5, #20]
   14688:	sub	r5, fp, #80	; 0x50
   1468c:	ldrh	r0, [r4, #6]
   14690:	sxth	r0, r0
   14694:	mov	r1, r5
   14698:	mov	r2, #6
   1469c:	bl	11cbc <writev@plt>
   146a0:	cmn	r0, #1
   146a4:	bgt	14908 <__assert_fail@plt+0x2af0>
   146a8:	bl	11c50 <__errno_location@plt>
   146ac:	ldr	r6, [r0]
   146b0:	mov	r7, r0
   146b4:	cmp	r6, #11
   146b8:	bne	146c8 <__assert_fail@plt+0x28b0>
   146bc:	ldrh	r0, [r4, #4]
   146c0:	cmp	r0, #9
   146c4:	beq	14bb4 <__assert_fail@plt+0x2d9c>
   146c8:	ldrsh	r0, [r4, #6]
   146cc:	bl	11e00 <close@plt>
   146d0:	cmp	r6, #9
   146d4:	cmpne	r6, #5
   146d8:	bne	14760 <__assert_fail@plt+0x2948>
   146dc:	ldrh	r0, [r4, #4]
   146e0:	bic	r0, r0, #1
   146e4:	cmp	r0, #2
   146e8:	bne	14760 <__assert_fail@plt+0x2948>
   146ec:	ldr	r0, [r4, #40]	; 0x28
   146f0:	movw	r1, #1025	; 0x401
   146f4:	mov	r2, #0
   146f8:	bl	11b90 <open64@plt>
   146fc:	tst	r0, #32768	; 0x8000
   14700:	strh	r0, [r4, #6]
   14704:	beq	14690 <__assert_fail@plt+0x2878>
   14708:	mov	r0, #0
   1470c:	strh	r0, [r4, #4]
   14710:	b	1476c <__assert_fail@plt+0x2954>
   14714:	movw	r0, #7288	; 0x1c78
   14718:	movt	r0, #3
   1471c:	ldr	r0, [r0]
   14720:	str	r0, [r4, #8]
   14724:	movw	r0, #60700	; 0xed1c
   14728:	movt	r0, #1
   1472c:	bl	13680 <__assert_fail@plt+0x1868>
   14730:	movw	r1, #60699	; 0xed1b
   14734:	mov	r0, #2
   14738:	movt	r1, #1
   1473c:	str	r1, [r5, #16]
   14740:	str	r0, [r5, #20]
   14744:	sub	r1, fp, #80	; 0x50
   14748:	mov	r0, r4
   1474c:	bl	14c54 <__assert_fail@plt+0x2e3c>
   14750:	ldrh	r0, [r4, #4]
   14754:	cmp	r0, #8
   14758:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   1475c:	b	14bbc <__assert_fail@plt+0x2da4>
   14760:	mov	r0, #0
   14764:	strh	r0, [r4, #4]
   14768:	str	r6, [r7]
   1476c:	ldr	r0, [r4, #40]	; 0x28
   14770:	bl	1370c <__assert_fail@plt+0x18f4>
   14774:	ldr	r0, [r4, #40]	; 0x28
   14778:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1477c:	mov	r0, #0
   14780:	str	r0, [r4, #40]	; 0x28
   14784:	ldrh	r0, [r4, #4]
   14788:	cmp	r0, #8
   1478c:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14790:	b	14bbc <__assert_fail@plt+0x2da4>
   14794:	uxth	r0, r0
   14798:	cmp	r0, #8
   1479c:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   147a0:	b	14bbc <__assert_fail@plt+0x2da4>
   147a4:	movw	r0, #7288	; 0x1c78
   147a8:	movt	r0, #3
   147ac:	ldr	r0, [r0]
   147b0:	str	r0, [r4, #8]
   147b4:	movw	r0, #60700	; 0xed1c
   147b8:	movt	r0, #1
   147bc:	bl	13680 <__assert_fail@plt+0x1868>
   147c0:	ldrh	r0, [r4, #4]
   147c4:	cmp	r0, #8
   147c8:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   147cc:	b	14bbc <__assert_fail@plt+0x2da4>
   147d0:	movw	r0, #7288	; 0x1c78
   147d4:	tst	r8, #1
   147d8:	movt	r0, #3
   147dc:	ldr	r0, [r0]
   147e0:	str	r0, [r4, #8]
   147e4:	beq	1463c <__assert_fail@plt+0x2824>
   147e8:	movw	r0, #61183	; 0xeeff
   147ec:	movt	r0, #1
   147f0:	bl	13680 <__assert_fail@plt+0x1868>
   147f4:	ldrh	r0, [r4, #4]
   147f8:	cmp	r0, #8
   147fc:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14800:	b	14bbc <__assert_fail@plt+0x2da4>
   14804:	mov	r0, #0
   14808:	bl	11a70 <time@plt>
   1480c:	ldr	r1, [r4, #8]
   14810:	sub	r5, r0, r1
   14814:	cmp	r5, #180	; 0xb4
   14818:	blt	14934 <__assert_fail@plt+0x2b1c>
   1481c:	movw	r0, #60747	; 0xed4b
   14820:	movt	r0, #1
   14824:	bl	13680 <__assert_fail@plt+0x1868>
   14828:	mov	r0, #4
   1482c:	strh	r0, [r4, #4]
   14830:	b	149c8 <__assert_fail@plt+0x2bb0>
   14834:	ldr	r1, [r4, #40]	; 0x28
   14838:	movw	r0, #65202	; 0xfeb2
   1483c:	movt	r0, #1
   14840:	bl	13680 <__assert_fail@plt+0x1868>
   14844:	mov	r0, #0
   14848:	bl	11a70 <time@plt>
   1484c:	ldr	r1, [r4, #8]
   14850:	sub	r0, r0, r1
   14854:	cmp	r0, #180	; 0xb4
   14858:	blt	14964 <__assert_fail@plt+0x2b4c>
   1485c:	vmov.i32	q8, #0	; 0x00000000
   14860:	add	r0, sp, #296	; 0x128
   14864:	add	r2, sp, #296	; 0x128
   14868:	add	r3, sp, #12
   1486c:	vst1.64	{d16-d17}, [r0]!
   14870:	vst1.64	{d16-d17}, [r0]
   14874:	movw	r0, #5400	; 0x1518
   14878:	movt	r0, #3
   1487c:	ldr	r0, [r0, #12]
   14880:	cmp	r0, #0
   14884:	str	r0, [sp, #300]	; 0x12c
   14888:	moveq	r0, #32
   1488c:	streq	r0, [sp, #296]	; 0x128
   14890:	movw	r0, #5584	; 0x15d0
   14894:	movt	r0, #3
   14898:	ldr	r1, [r0, #16]
   1489c:	ldr	r0, [r4, #40]	; 0x28
   148a0:	bl	11da0 <getaddrinfo@plt>
   148a4:	cmp	r0, #0
   148a8:	beq	14984 <__assert_fail@plt+0x2b6c>
   148ac:	bl	11a28 <gai_strerror@plt>
   148b0:	mov	r1, r0
   148b4:	movw	r0, #60839	; 0xeda7
   148b8:	movt	r0, #1
   148bc:	bl	13680 <__assert_fail@plt+0x1868>
   148c0:	ldr	r1, [r4, #452]	; 0x1c4
   148c4:	movw	r0, #60852	; 0xedb4
   148c8:	movt	r0, #1
   148cc:	bl	13680 <__assert_fail@plt+0x1868>
   148d0:	ldr	r0, [r4, #452]	; 0x1c4
   148d4:	sub	r1, r0, #1
   148d8:	cmp	r0, #0
   148dc:	str	r1, [r4, #452]	; 0x1c4
   148e0:	bgt	14ba8 <__assert_fail@plt+0x2d90>
   148e4:	mov	r5, #0
   148e8:	strh	r5, [r4, #4]
   148ec:	ldr	r0, [r4, #40]	; 0x28
   148f0:	bl	1ba4c <argp_parse@@Base+0x15bc>
   148f4:	str	r5, [r4, #40]	; 0x28
   148f8:	ldrh	r0, [r4, #4]
   148fc:	cmp	r0, #8
   14900:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14904:	b	14bbc <__assert_fail@plt+0x2da4>
   14908:	tst	r8, #2
   1490c:	beq	14ba8 <__assert_fail@plt+0x2d90>
   14910:	ldrb	r0, [r4, #460]	; 0x1cc
   14914:	tst	r0, #1
   14918:	bne	14ba8 <__assert_fail@plt+0x2d90>
   1491c:	ldrsh	r0, [r4, #6]
   14920:	bl	1198c <fsync@plt>
   14924:	ldrh	r0, [r4, #4]
   14928:	cmp	r0, #8
   1492c:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14930:	b	14bbc <__assert_fail@plt+0x2da4>
   14934:	ldr	r1, [r4, #40]	; 0x28
   14938:	movw	r0, #65202	; 0xfeb2
   1493c:	movt	r0, #1
   14940:	bl	13680 <__assert_fail@plt+0x1868>
   14944:	movw	r0, #60791	; 0xed77
   14948:	rsb	r1, r5, #180	; 0xb4
   1494c:	movt	r0, #1
   14950:	bl	13680 <__assert_fail@plt+0x1868>
   14954:	ldrh	r0, [r4, #4]
   14958:	cmp	r0, #8
   1495c:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14960:	b	14bbc <__assert_fail@plt+0x2da4>
   14964:	rsb	r1, r0, #180	; 0xb4
   14968:	movw	r0, #60886	; 0xedd6
   1496c:	movt	r0, #1
   14970:	bl	13680 <__assert_fail@plt+0x1868>
   14974:	ldrh	r0, [r4, #4]
   14978:	cmp	r0, #8
   1497c:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14980:	b	14bbc <__assert_fail@plt+0x2da4>
   14984:	ldr	r1, [r4, #40]	; 0x28
   14988:	movw	r0, #60865	; 0xedc1
   1498c:	movt	r0, #1
   14990:	bl	13680 <__assert_fail@plt+0x1868>
   14994:	ldr	r5, [sp, #12]
   14998:	ldr	r0, [r5, #16]
   1499c:	str	r0, [r4, #172]	; 0xac
   149a0:	add	r0, r4, #44	; 0x2c
   149a4:	ldr	r2, [r5, #16]
   149a8:	ldr	r1, [r5, #20]
   149ac:	bl	11a58 <memcpy@plt>
   149b0:	mov	r0, r5
   149b4:	bl	11d94 <freeaddrinfo@plt>
   149b8:	mov	r0, #4
   149bc:	strh	r0, [r4, #4]
   149c0:	mov	r0, #0
   149c4:	str	r0, [r4, #452]	; 0x1c4
   149c8:	ldr	r1, [r4, #40]	; 0x28
   149cc:	movw	r0, #65202	; 0xfeb2
   149d0:	movt	r0, #1
   149d4:	bl	13680 <__assert_fail@plt+0x1868>
   149d8:	movw	r0, #7224	; 0x1c38
   149dc:	movt	r0, #3
   149e0:	ldr	r1, [r0]
   149e4:	mov	r0, sl
   149e8:	bl	11b0c <strcasecmp@plt>
   149ec:	movw	r5, #5400	; 0x1518
   149f0:	cmp	r0, #0
   149f4:	movt	r5, #3
   149f8:	ldrne	r0, [r5, #24]
   149fc:	cmpne	r0, #0
   14a00:	bne	14a34 <__assert_fail@plt+0x2c1c>
   14a04:	movw	r0, #7292	; 0x1c7c
   14a08:	movt	r0, #3
   14a0c:	ldr	r0, [r0]
   14a10:	cmp	r0, #0
   14a14:	beq	14a50 <__assert_fail@plt+0x2c38>
   14a18:	movw	r0, #60965	; 0xee25
   14a1c:	movt	r0, #1
   14a20:	bl	13680 <__assert_fail@plt+0x1868>
   14a24:	ldrh	r0, [r4, #4]
   14a28:	cmp	r0, #8
   14a2c:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14a30:	b	14bbc <__assert_fail@plt+0x2da4>
   14a34:	movw	r0, #60933	; 0xee05
   14a38:	movt	r0, #1
   14a3c:	bl	13680 <__assert_fail@plt+0x1868>
   14a40:	ldrh	r0, [r4, #4]
   14a44:	cmp	r0, #8
   14a48:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14a4c:	b	14bbc <__assert_fail@plt+0x2da4>
   14a50:	mov	r6, r4
   14a54:	mov	sl, #40	; 0x28
   14a58:	ldrh	r0, [r6, #44]!	; 0x2c
   14a5c:	cmp	r0, #2
   14a60:	movweq	sl, #36	; 0x24
   14a64:	ldr	r8, [r5, sl]
   14a68:	cmn	r8, #1
   14a6c:	ble	14b48 <__assert_fail@plt+0x2d30>
   14a70:	movw	r0, #7288	; 0x1c78
   14a74:	movw	r2, #61134	; 0xeece
   14a78:	add	r9, sp, #296	; 0x128
   14a7c:	movt	r0, #3
   14a80:	movt	r2, #1
   14a84:	ldr	r0, [r0]
   14a88:	str	r0, [r4, #8]
   14a8c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14a90:	ldr	r3, [r4, #444]	; 0x1bc
   14a94:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14a98:	stm	sp, {r0, r1}
   14a9c:	mov	r0, r9
   14aa0:	movw	r1, #1025	; 0x401
   14aa4:	bl	11c5c <snprintf@plt>
   14aa8:	mov	r0, r9
   14aac:	bl	11c20 <strlen@plt>
   14ab0:	mov	r7, r0
   14ab4:	ldr	r0, [r4, #172]	; 0xac
   14ab8:	mov	r1, r9
   14abc:	mov	r3, #0
   14ac0:	str	r6, [sp]
   14ac4:	cmp	r7, #1024	; 0x400
   14ac8:	movge	r7, #1024	; 0x400
   14acc:	mov	r2, r7
   14ad0:	str	r0, [sp, #4]
   14ad4:	mov	r0, r8
   14ad8:	bl	11ce0 <sendto@plt>
   14adc:	cmp	r0, r7
   14ae0:	beq	14b24 <__assert_fail@plt+0x2d0c>
   14ae4:	bl	11c50 <__errno_location@plt>
   14ae8:	ldr	r7, [r0]
   14aec:	mov	r9, r0
   14af0:	mov	r0, r7
   14af4:	bl	11bcc <strerror@plt>
   14af8:	mov	r2, r0
   14afc:	movw	r0, #61147	; 0xeedb
   14b00:	mov	r1, r7
   14b04:	movt	r0, #1
   14b08:	bl	13680 <__assert_fail@plt+0x1868>
   14b0c:	mov	r0, #7
   14b10:	strh	r0, [r4, #4]
   14b14:	movw	r0, #61176	; 0xeef8
   14b18:	str	r7, [r9]
   14b1c:	movt	r0, #1
   14b20:	bl	1370c <__assert_fail@plt+0x18f4>
   14b24:	ldr	r0, [r5, sl]
   14b28:	cmn	r0, #1
   14b2c:	bgt	14ba8 <__assert_fail@plt+0x2d90>
   14b30:	mov	r0, r8
   14b34:	bl	11e00 <close@plt>
   14b38:	ldrh	r0, [r4, #4]
   14b3c:	cmp	r0, #8
   14b40:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14b44:	b	14bbc <__assert_fail@plt+0x2da4>
   14b48:	vmov.i32	q8, #0	; 0x00000000
   14b4c:	add	r2, sp, #296	; 0x128
   14b50:	add	r3, sp, #12
   14b54:	add	r1, r2, #12
   14b58:	vst1.32	{d16-d17}, [r1]
   14b5c:	mov	r1, #0
   14b60:	str	r1, [sp, #324]	; 0x144
   14b64:	mov	r1, #2
   14b68:	str	r1, [sp, #304]	; 0x130
   14b6c:	str	r0, [sp, #300]	; 0x12c
   14b70:	mov	r0, #1
   14b74:	str	r0, [sp, #296]	; 0x128
   14b78:	movw	r0, #5584	; 0x15d0
   14b7c:	movt	r0, #3
   14b80:	ldr	r1, [r0, #16]
   14b84:	mov	r0, #0
   14b88:	bl	11da0 <getaddrinfo@plt>
   14b8c:	cmp	r0, #0
   14b90:	beq	14bc4 <__assert_fail@plt+0x2dac>
   14b94:	bl	11a28 <gai_strerror@plt>
   14b98:	mov	r1, r0
   14b9c:	movw	r0, #61013	; 0xee55
   14ba0:	movt	r0, #1
   14ba4:	bl	13680 <__assert_fail@plt+0x1868>
   14ba8:	ldrh	r0, [r4, #4]
   14bac:	cmp	r0, #8
   14bb0:	beq	14bbc <__assert_fail@plt+0x2da4>
   14bb4:	mov	r0, #0
   14bb8:	str	r0, [r4, #452]	; 0x1c4
   14bbc:	sub	sp, fp, #28
   14bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bc4:	ldr	r2, [sp, #12]
   14bc8:	ldmib	r2, {r0, r1, r2}
   14bcc:	bl	11dac <socket@plt>
   14bd0:	cmn	r0, #1
   14bd4:	ble	14c30 <__assert_fail@plt+0x2e18>
   14bd8:	mov	r8, r0
   14bdc:	ldr	r0, [sp, #12]
   14be0:	ldr	r2, [r0, #16]
   14be4:	ldr	r1, [r0, #20]
   14be8:	mov	r0, r8
   14bec:	bl	11c74 <bind@plt>
   14bf0:	mov	r7, r0
   14bf4:	ldr	r0, [sp, #12]
   14bf8:	bl	11d94 <freeaddrinfo@plt>
   14bfc:	cmp	r7, #0
   14c00:	beq	14a70 <__assert_fail@plt+0x2c58>
   14c04:	bl	11c50 <__errno_location@plt>
   14c08:	ldr	r0, [r0]
   14c0c:	bl	11bcc <strerror@plt>
   14c10:	mov	r1, r0
   14c14:	movw	r0, #61095	; 0xeea7
   14c18:	movt	r0, #1
   14c1c:	bl	13680 <__assert_fail@plt+0x1868>
   14c20:	ldrh	r0, [r4, #4]
   14c24:	cmp	r0, #8
   14c28:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14c2c:	b	14bbc <__assert_fail@plt+0x2da4>
   14c30:	movw	r0, #61056	; 0xee80
   14c34:	movt	r0, #1
   14c38:	bl	13680 <__assert_fail@plt+0x1868>
   14c3c:	ldr	r0, [sp, #12]
   14c40:	bl	11d94 <freeaddrinfo@plt>
   14c44:	ldrh	r0, [r4, #4]
   14c48:	cmp	r0, #8
   14c4c:	bne	14bb4 <__assert_fail@plt+0x2d9c>
   14c50:	b	14bbc <__assert_fail@plt+0x2da4>
   14c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c58:	add	fp, sp, #28
   14c5c:	sub	sp, sp, #52	; 0x34
   14c60:	movw	r2, #5580	; 0x15cc
   14c64:	mov	r5, r0
   14c68:	mov	r6, r1
   14c6c:	movt	r2, #3
   14c70:	ldr	r0, [r2]
   14c74:	add	r1, r0, #1
   14c78:	cmp	r0, #0
   14c7c:	str	r1, [r2]
   14c80:	beq	14c8c <__assert_fail@plt+0x2e74>
   14c84:	sub	sp, fp, #28
   14c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c8c:	movw	r0, #61195	; 0xef0b
   14c90:	sub	r1, fp, #36	; 0x24
   14c94:	sub	r2, fp, #32
   14c98:	mov	r3, #3
   14c9c:	movt	r0, #1
   14ca0:	bl	1bc64 <argp_parse@@Base+0x17d4>
   14ca4:	cmn	r0, #1
   14ca8:	ble	14d80 <__assert_fail@plt+0x2f68>
   14cac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14cb0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14cb4:	cmp	r0, #1
   14cb8:	blt	14d94 <__assert_fail@plt+0x2f7c>
   14cbc:	str	r6, [sp, #4]
   14cc0:	add	r6, sp, #11
   14cc4:	b	14ce4 <__assert_fail@plt+0x2ecc>
   14cc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14ccc:	add	r4, r4, #384	; 0x180
   14cd0:	add	r1, r0, r0, lsl #1
   14cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cd8:	add	r1, r0, r1, lsl #7
   14cdc:	cmp	r4, r1
   14ce0:	bcs	14d98 <__assert_fail@plt+0x2f80>
   14ce4:	add	r1, r4, #8
   14ce8:	mov	r0, r6
   14cec:	mov	r2, #32
   14cf0:	bl	11c98 <strncpy@plt>
   14cf4:	mov	r0, #0
   14cf8:	strb	r0, [sp, #43]	; 0x2b
   14cfc:	ldrh	r0, [r5, #4]
   14d00:	cmp	r0, #6
   14d04:	beq	14d48 <__assert_fail@plt+0x2f30>
   14d08:	ldr	r8, [r5, #40]	; 0x28
   14d0c:	cmp	r8, #1
   14d10:	blt	14cc8 <__assert_fail@plt+0x2eb0>
   14d14:	ldr	r9, [r5, #44]	; 0x2c
   14d18:	add	r7, r4, #44	; 0x2c
   14d1c:	mov	sl, #0
   14d20:	ldr	r0, [r9, sl, lsl #2]
   14d24:	mov	r1, r7
   14d28:	mov	r2, #32
   14d2c:	bl	11ddc <strncmp@plt>
   14d30:	cmp	r0, #0
   14d34:	beq	14d48 <__assert_fail@plt+0x2f30>
   14d38:	add	sl, sl, #1
   14d3c:	cmp	sl, r8
   14d40:	blt	14d20 <__assert_fail@plt+0x2f08>
   14d44:	b	14cc8 <__assert_fail@plt+0x2eb0>
   14d48:	ldr	r0, [sp, #4]
   14d4c:	mov	r1, #6
   14d50:	mov	r2, r6
   14d54:	mov	r3, #10
   14d58:	bl	16424 <daemon@@Base+0x1b4>
   14d5c:	cmp	r0, #0
   14d60:	beq	14cc8 <__assert_fail@plt+0x2eb0>
   14d64:	mov	r7, r0
   14d68:	bl	11c50 <__errno_location@plt>
   14d6c:	mov	r1, #0
   14d70:	str	r1, [r0]
   14d74:	mov	r0, r7
   14d78:	bl	1370c <__assert_fail@plt+0x18f4>
   14d7c:	b	14cc8 <__assert_fail@plt+0x2eb0>
   14d80:	movw	r0, #61209	; 0xef19
   14d84:	movt	r0, #1
   14d88:	bl	1370c <__assert_fail@plt+0x18f4>
   14d8c:	sub	sp, fp, #28
   14d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d94:	mov	r0, r4
   14d98:	bl	1ba4c <argp_parse@@Base+0x15bc>
   14d9c:	movw	r1, #5580	; 0x15cc
   14da0:	mov	r0, #0
   14da4:	movt	r1, #3
   14da8:	str	r0, [r1]
   14dac:	sub	sp, fp, #28
   14db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14db8:	add	fp, sp, #28
   14dbc:	sub	sp, sp, #4
   14dc0:	movw	r1, #59877	; 0xe9e5
   14dc4:	mov	r4, r0
   14dc8:	movt	r1, #1
   14dcc:	bl	11d70 <fopen64@plt>
   14dd0:	cmp	r0, #0
   14dd4:	beq	15078 <__assert_fail@plt+0x3260>
   14dd8:	mov	r9, r0
   14ddc:	mov	r0, #2048	; 0x800
   14de0:	bl	1ca78 <argp_parse@@Base+0x25e8>
   14de4:	cmp	r0, #0
   14de8:	beq	150f8 <__assert_fail@plt+0x32e0>
   14dec:	movw	r4, #7232	; 0x1c40
   14df0:	mov	r6, r0
   14df4:	movt	r4, #3
   14df8:	ldr	r0, [r4]
   14dfc:	bl	1ba4c <argp_parse@@Base+0x15bc>
   14e00:	mov	r0, #0
   14e04:	mov	r1, #2048	; 0x800
   14e08:	mov	r2, r9
   14e0c:	mov	r5, #2048	; 0x800
   14e10:	str	r0, [r4]
   14e14:	mov	r0, r6
   14e18:	bl	11a34 <fgets@plt>
   14e1c:	cmp	r0, #0
   14e20:	beq	15118 <__assert_fail@plt+0x3300>
   14e24:	mov	sl, #0
   14e28:	mov	r8, #0
   14e2c:	mov	r7, r6
   14e30:	b	14e58 <__assert_fail@plt+0x3040>
   14e34:	mov	r8, #0
   14e38:	mov	r6, r7
   14e3c:	sub	sl, r6, r7
   14e40:	mov	r0, r6
   14e44:	mov	r2, r9
   14e48:	sub	r1, r5, sl
   14e4c:	bl	11a34 <fgets@plt>
   14e50:	cmp	r0, #0
   14e54:	beq	1511c <__assert_fail@plt+0x3304>
   14e58:	mov	r0, r6
   14e5c:	bl	11c20 <strlen@plt>
   14e60:	mov	r4, r0
   14e64:	cmp	r8, #0
   14e68:	beq	14ea8 <__assert_fail@plt+0x3090>
   14e6c:	mov	r1, r6
   14e70:	ldrb	r0, [r1]
   14e74:	cmp	r0, #32
   14e78:	cmpne	r0, #9
   14e7c:	bne	14e94 <__assert_fail@plt+0x307c>
   14e80:	add	r1, r1, #1
   14e84:	ldrb	r0, [r1]
   14e88:	cmp	r0, #32
   14e8c:	cmpne	r0, #9
   14e90:	beq	14e80 <__assert_fail@plt+0x3068>
   14e94:	sub	r0, r6, r1
   14e98:	add	r4, r0, r4
   14e9c:	mov	r0, r6
   14ea0:	add	r2, r4, #1
   14ea4:	bl	11a04 <memmove@plt>
   14ea8:	mov	r0, r6
   14eac:	mov	r1, #10
   14eb0:	bl	11c38 <strchr@plt>
   14eb4:	cmp	r0, #0
   14eb8:	beq	14f50 <__assert_fail@plt+0x3138>
   14ebc:	bl	11bfc <__ctype_b_loc@plt>
   14ec0:	mov	r4, r0
   14ec4:	ldr	r0, [r0]
   14ec8:	mov	r1, r7
   14ecc:	ldrb	r2, [r1], #1
   14ed0:	add	r3, r0, r2, lsl #1
   14ed4:	ldrb	r3, [r3, #1]
   14ed8:	tst	r3, #32
   14edc:	bne	14ecc <__assert_fail@plt+0x30b4>
   14ee0:	cmp	r2, #35	; 0x23
   14ee4:	beq	14f80 <__assert_fail@plt+0x3168>
   14ee8:	cmp	r2, #33	; 0x21
   14eec:	beq	14f98 <__assert_fail@plt+0x3180>
   14ef0:	cmp	r2, #0
   14ef4:	beq	14e34 <__assert_fail@plt+0x301c>
   14ef8:	sub	r6, r1, #1
   14efc:	mov	r0, r6
   14f00:	bl	11c20 <strlen@plt>
   14f04:	add	r2, r0, #1
   14f08:	mov	r0, r7
   14f0c:	mov	r1, r6
   14f10:	bl	11a04 <memmove@plt>
   14f14:	mov	r0, r7
   14f18:	bl	11c20 <strlen@plt>
   14f1c:	add	r6, r7, r0
   14f20:	ldr	r0, [r4]
   14f24:	ldrb	r1, [r6, #-1]!
   14f28:	add	r2, r0, r1, lsl #1
   14f2c:	ldrb	r2, [r2, #1]
   14f30:	tst	r2, #32
   14f34:	bne	14f24 <__assert_fail@plt+0x310c>
   14f38:	cmp	r1, #92	; 0x5c
   14f3c:	bne	15038 <__assert_fail@plt+0x3220>
   14f40:	mov	r0, #0
   14f44:	mov	r8, #1
   14f48:	strb	r0, [r6]
   14f4c:	b	14e3c <__assert_fail@plt+0x3024>
   14f50:	lsl	r5, r5, #1
   14f54:	mov	r0, r7
   14f58:	mov	r1, r5
   14f5c:	bl	1caa8 <argp_parse@@Base+0x2618>
   14f60:	cmp	r0, #0
   14f64:	beq	15138 <__assert_fail@plt+0x3320>
   14f68:	add	r1, r0, sl
   14f6c:	mov	r8, #0
   14f70:	mov	r7, r0
   14f74:	add	r1, r1, r4
   14f78:	sub	r6, r1, #1
   14f7c:	b	14e3c <__assert_fail@plt+0x3024>
   14f80:	ldrb	r2, [r1]
   14f84:	mov	r8, #0
   14f88:	cmp	r2, #33	; 0x21
   14f8c:	bne	14e38 <__assert_fail@plt+0x3020>
   14f90:	add	r1, r1, #1
   14f94:	b	14fa4 <__assert_fail@plt+0x318c>
   14f98:	ldrb	r2, [r1]
   14f9c:	cmp	r2, #33	; 0x21
   14fa0:	addeq	r1, r1, #1
   14fa4:	sub	r4, r1, #1
   14fa8:	ldrb	r1, [r4, #1]!
   14fac:	add	r2, r0, r1, lsl #1
   14fb0:	ldrb	r2, [r2, #1]
   14fb4:	tst	r2, #32
   14fb8:	bne	14fa8 <__assert_fail@plt+0x3190>
   14fbc:	cmp	r1, #0
   14fc0:	beq	14e34 <__assert_fail@plt+0x301c>
   14fc4:	movw	r0, #7232	; 0x1c40
   14fc8:	movt	r0, #3
   14fcc:	mov	r6, r0
   14fd0:	ldr	r0, [r0]
   14fd4:	bl	1ba4c <argp_parse@@Base+0x15bc>
   14fd8:	mov	r8, #0
   14fdc:	str	r8, [r6]
   14fe0:	ldrb	r0, [r4]
   14fe4:	cmp	r0, #42	; 0x2a
   14fe8:	beq	14e38 <__assert_fail@plt+0x3020>
   14fec:	mov	r0, r4
   14ff0:	mov	r1, #44	; 0x2c
   14ff4:	bl	11c38 <strchr@plt>
   14ff8:	cmp	r0, #0
   14ffc:	movne	r1, #0
   15000:	strbne	r1, [r0]
   15004:	movw	r1, #63339	; 0xf76b
   15008:	mov	r0, r4
   1500c:	movt	r1, #1
   15010:	bl	11d88 <strpbrk@plt>
   15014:	cmp	r0, #0
   15018:	movne	r1, #0
   1501c:	strbne	r1, [r0]
   15020:	mov	r0, r4
   15024:	bl	11aac <strdup@plt>
   15028:	movw	r1, #7232	; 0x1c40
   1502c:	movt	r1, #3
   15030:	str	r0, [r1]
   15034:	b	14e38 <__assert_fail@plt+0x3020>
   15038:	mov	r8, #0
   1503c:	mov	r0, #1
   15040:	mov	r1, #464	; 0x1d0
   15044:	strb	r8, [r6, #1]
   15048:	bl	1ca24 <argp_parse@@Base+0x2594>
   1504c:	mov	r4, r0
   15050:	mov	r0, r7
   15054:	mov	r1, r4
   15058:	bl	15160 <__assert_fail@plt+0x3348>
   1505c:	movw	r0, #6728	; 0x1a48
   15060:	movt	r0, #3
   15064:	mov	r1, r0
   15068:	ldr	r0, [r0]
   1506c:	str	r4, [r1]
   15070:	str	r0, [r4]
   15074:	b	14e38 <__assert_fail@plt+0x3020>
   15078:	movw	r0, #63216	; 0xf6f0
   1507c:	mov	r1, r4
   15080:	movt	r0, #1
   15084:	bl	13680 <__assert_fail@plt+0x1868>
   15088:	movw	r5, #6728	; 0x1a48
   1508c:	movt	r5, #3
   15090:	ldr	r0, [r5]
   15094:	cmp	r0, #0
   15098:	bne	150e0 <__assert_fail@plt+0x32c8>
   1509c:	mov	r0, #1
   150a0:	mov	r1, #464	; 0x1d0
   150a4:	bl	1ca24 <argp_parse@@Base+0x2594>
   150a8:	mov	r4, r0
   150ac:	movw	r0, #63232	; 0xf700
   150b0:	movt	r0, #1
   150b4:	mov	r1, r4
   150b8:	bl	15160 <__assert_fail@plt+0x3348>
   150bc:	mov	r0, #1
   150c0:	mov	r1, #464	; 0x1d0
   150c4:	bl	1ca24 <argp_parse@@Base+0x2594>
   150c8:	mov	r1, r0
   150cc:	str	r0, [r4]
   150d0:	movw	r0, #63251	; 0xf713
   150d4:	movt	r0, #1
   150d8:	bl	15160 <__assert_fail@plt+0x3348>
   150dc:	str	r4, [r5]
   150e0:	movw	r1, #7216	; 0x1c30
   150e4:	mov	r0, #1
   150e8:	movt	r1, #3
   150ec:	str	r0, [r1]
   150f0:	sub	sp, fp, #28
   150f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150f8:	movw	r0, #63261	; 0xf71d
   150fc:	movt	r0, #1
   15100:	bl	13680 <__assert_fail@plt+0x1868>
   15104:	mov	r0, r9
   15108:	bl	11cc8 <fclose@plt>
   1510c:	mov	r0, #0
   15110:	sub	sp, fp, #28
   15114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15118:	mov	r7, r6
   1511c:	mov	r0, r9
   15120:	bl	11cc8 <fclose@plt>
   15124:	mov	r0, r7
   15128:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1512c:	mov	r0, #1
   15130:	sub	sp, fp, #28
   15134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15138:	movw	r0, #63302	; 0xf746
   1513c:	movt	r0, #1
   15140:	bl	13680 <__assert_fail@plt+0x1868>
   15144:	mov	r0, r9
   15148:	bl	11cc8 <fclose@plt>
   1514c:	mov	r0, r7
   15150:	bl	1ba4c <argp_parse@@Base+0x15bc>
   15154:	mov	r0, #0
   15158:	sub	sp, fp, #28
   1515c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15164:	add	fp, sp, #28
   15168:	sub	sp, sp, #4
   1516c:	vpush	{d8-d11}
   15170:	sub	sp, sp, #216	; 0xd8
   15174:	sub	sp, sp, #1024	; 0x400
   15178:	mov	r5, r0
   1517c:	movw	r0, #7232	; 0x1c40
   15180:	movw	r3, #63437	; 0xf7cd
   15184:	movw	r2, #61647	; 0xf0cf
   15188:	mov	r4, r1
   1518c:	movt	r0, #3
   15190:	movt	r3, #1
   15194:	movt	r2, #1
   15198:	mov	r1, r5
   1519c:	ldr	r0, [r0]
   151a0:	cmp	r0, #0
   151a4:	moveq	r2, r3
   151a8:	movne	r3, r0
   151ac:	movw	r0, #61631	; 0xf0bf
   151b0:	movt	r0, #1
   151b4:	bl	13680 <__assert_fail@plt+0x1868>
   151b8:	bl	11c50 <__errno_location@plt>
   151bc:	mov	r1, #0
   151c0:	mov	r2, #464	; 0x1d0
   151c4:	str	r1, [r0]
   151c8:	mov	r0, r4
   151cc:	mov	r1, #0
   151d0:	bl	11c8c <memset@plt>
   151d4:	movw	r9, #61656	; 0xf0d8
   151d8:	add	r0, r4, #12
   151dc:	add	r7, sp, #208	; 0xd0
   151e0:	str	r4, [sp, #4]
   151e4:	movt	r9, #1
   151e8:	str	r0, [sp]
   151ec:	b	15660 <__assert_fail@plt+0x3848>
   151f0:	mov	r5, r8
   151f4:	uxtb	r0, r6
   151f8:	cmp	r0, #0
   151fc:	cmpne	r0, #9
   15200:	beq	15210 <__assert_fail@plt+0x33f8>
   15204:	ldrb	r6, [r5, #1]!
   15208:	cmp	r0, #46	; 0x2e
   1520c:	bne	151f4 <__assert_fail@plt+0x33dc>
   15210:	mov	r4, r7
   15214:	tst	r6, #255	; 0xff
   15218:	beq	15244 <__assert_fail@plt+0x342c>
   1521c:	uxtb	r1, r6
   15220:	mov	r0, r9
   15224:	mov	r2, #5
   15228:	bl	11cb0 <memchr@plt>
   1522c:	cmp	r0, #0
   15230:	bne	15250 <__assert_fail@plt+0x3438>
   15234:	strb	r6, [r4], #1
   15238:	ldrb	r6, [r5, #1]!
   1523c:	cmp	r6, #0
   15240:	bne	1521c <__assert_fail@plt+0x3404>
   15244:	mov	r0, #0
   15248:	strb	r0, [r4]
   1524c:	b	15280 <__assert_fail@plt+0x3468>
   15250:	mov	r0, #0
   15254:	strb	r0, [r4]
   15258:	movw	r4, #61658	; 0xf0da
   1525c:	movt	r4, #1
   15260:	uxtb	r1, r6
   15264:	mov	r0, r4
   15268:	mov	r2, #3
   1526c:	bl	11cb0 <memchr@plt>
   15270:	cmp	r0, #0
   15274:	ldrbne	r6, [r5, #1]!
   15278:	cmpne	r6, #0
   1527c:	bne	15260 <__assert_fail@plt+0x3448>
   15280:	mov	r4, #0
   15284:	mov	sl, #0
   15288:	mov	r6, r7
   1528c:	b	152ac <__assert_fail@plt+0x3494>
   15290:	add	r6, r6, #1
   15294:	cmp	r7, #33	; 0x21
   15298:	beq	152a8 <__assert_fail@plt+0x3490>
   1529c:	cmp	r7, #61	; 0x3d
   152a0:	moveq	r4, #1
   152a4:	b	152ac <__assert_fail@plt+0x3494>
   152a8:	mov	sl, #1
   152ac:	ldrb	r7, [r6]
   152b0:	cmp	r7, #33	; 0x21
   152b4:	cmpne	r7, #61	; 0x3d
   152b8:	beq	15290 <__assert_fail@plt+0x3478>
   152bc:	cmp	r7, #42	; 0x2a
   152c0:	bne	152e0 <__assert_fail@plt+0x34c8>
   152c4:	mov	r6, #0
   152c8:	mov	r0, #255	; 0xff
   152cc:	add	r7, sp, #208	; 0xd0
   152d0:	ldrb	r4, [r8]
   152d4:	cmp	r4, #0
   152d8:	beq	15660 <__assert_fail@plt+0x3848>
   152dc:	b	153e0 <__assert_fail@plt+0x35c8>
   152e0:	bl	11bfc <__ctype_b_loc@plt>
   152e4:	ldr	r0, [r0]
   152e8:	add	r0, r0, r7, lsl #1
   152ec:	ldrb	r0, [r0, #1]
   152f0:	tst	r0, #8
   152f4:	bne	15340 <__assert_fail@plt+0x3528>
   152f8:	movw	r0, #4520	; 0x11a8
   152fc:	movt	r0, #3
   15300:	ldr	r1, [r0]
   15304:	cmp	r1, #0
   15308:	beq	15980 <__assert_fail@plt+0x3b68>
   1530c:	movw	r0, #4520	; 0x11a8
   15310:	movt	r0, #3
   15314:	add	r7, r0, #4
   15318:	mov	r0, r6
   1531c:	bl	11b0c <strcasecmp@plt>
   15320:	cmp	r0, #0
   15324:	beq	153b4 <__assert_fail@plt+0x359c>
   15328:	ldr	r1, [r7, #4]
   1532c:	add	r0, r7, #8
   15330:	mov	r7, r0
   15334:	cmp	r1, #0
   15338:	bne	15318 <__assert_fail@plt+0x3500>
   1533c:	b	15980 <__assert_fail@plt+0x3b68>
   15340:	mov	r0, r6
   15344:	mov	r1, #0
   15348:	mov	r2, #10
   1534c:	bl	119a4 <strtol@plt>
   15350:	cmp	r0, #0
   15354:	bmi	15980 <__assert_fail@plt+0x3b68>
   15358:	cmp	r0, #8
   1535c:	blt	15368 <__assert_fail@plt+0x3550>
   15360:	cmp	r0, #16
   15364:	bne	15980 <__assert_fail@plt+0x3b68>
   15368:	cmp	r0, #16
   1536c:	bne	1538c <__assert_fail@plt+0x3574>
   15370:	mov	r6, #255	; 0xff
   15374:	mov	r0, #0
   15378:	add	r7, sp, #208	; 0xd0
   1537c:	ldrb	r4, [r8]
   15380:	cmp	r4, #0
   15384:	beq	15660 <__assert_fail@plt+0x3848>
   15388:	b	153e0 <__assert_fail@plt+0x35c8>
   1538c:	cmp	r4, #0
   15390:	add	r7, sp, #208	; 0xd0
   15394:	beq	153c4 <__assert_fail@plt+0x35ac>
   15398:	mov	r1, #1
   1539c:	lsl	r0, r1, r0
   153a0:	mov	r6, #0
   153a4:	ldrb	r4, [r8]
   153a8:	cmp	r4, #0
   153ac:	beq	15660 <__assert_fail@plt+0x3848>
   153b0:	b	153e0 <__assert_fail@plt+0x35c8>
   153b4:	ldr	r0, [r7]
   153b8:	cmp	r0, #0
   153bc:	bpl	15358 <__assert_fail@plt+0x3540>
   153c0:	b	15980 <__assert_fail@plt+0x3b68>
   153c4:	add	r0, r0, #1
   153c8:	mvn	r1, #0
   153cc:	mvn	r0, r1, lsl r0
   153d0:	mov	r6, #0
   153d4:	ldrb	r4, [r8]
   153d8:	cmp	r4, #0
   153dc:	beq	15660 <__assert_fail@plt+0x3848>
   153e0:	cmp	sl, #0
   153e4:	mov	r1, r0
   153e8:	moveq	r1, r6
   153ec:	moveq	r6, r0
   153f0:	mvn	sl, r1
   153f4:	vdup.8	q4, r6
   153f8:	vdup.8	q5, sl
   153fc:	movw	r0, #61688	; 0xf0f8
   15400:	uxtb	r1, r4
   15404:	mov	r2, #5
   15408:	movt	r0, #1
   1540c:	bl	11cb0 <memchr@plt>
   15410:	cmp	r0, #0
   15414:	bne	15660 <__assert_fail@plt+0x3848>
   15418:	tst	r4, #255	; 0xff
   1541c:	beq	1544c <__assert_fail@plt+0x3634>
   15420:	movw	r0, #61693	; 0xf0fd
   15424:	uxtb	r1, r4
   15428:	mov	r2, #6
   1542c:	movt	r0, #1
   15430:	bl	11cb0 <memchr@plt>
   15434:	cmp	r0, #0
   15438:	bne	1544c <__assert_fail@plt+0x3634>
   1543c:	strb	r4, [r7], #1
   15440:	ldrb	r4, [r8, #1]!
   15444:	cmp	r4, #0
   15448:	bne	15420 <__assert_fail@plt+0x3608>
   1544c:	mov	r0, #0
   15450:	strb	r0, [r7]
   15454:	ldrb	r4, [sp, #208]	; 0xd0
   15458:	cmp	r4, #42	; 0x2a
   1545c:	bne	154c8 <__assert_fail@plt+0x36b0>
   15460:	ldrb	r0, [sp, #209]	; 0xd1
   15464:	movw	r3, #6724	; 0x1a44
   15468:	mov	r4, #1
   1546c:	movt	r3, #3
   15470:	cmp	r0, #42	; 0x2a
   15474:	bne	1552c <__assert_fail@plt+0x3714>
   15478:	ldr	r2, [sp]
   1547c:	mov	r0, #0
   15480:	add	r7, sp, #208	; 0xd0
   15484:	ldr	r1, [r3]
   15488:	tst	r1, r4, lsl r0
   1548c:	beq	154a8 <__assert_fail@plt+0x3690>
   15490:	add	r0, r0, #1
   15494:	cmp	r0, #25
   15498:	beq	15648 <__assert_fail@plt+0x3830>
   1549c:	ldr	r1, [r3]
   154a0:	tst	r1, r4, lsl r0
   154a4:	bne	15490 <__assert_fail@plt+0x3678>
   154a8:	ldrb	r1, [r2, r0]
   154ac:	and	r1, r1, sl
   154b0:	orr	r1, r1, r6
   154b4:	strb	r1, [r2, r0]
   154b8:	add	r0, r0, #1
   154bc:	cmp	r0, #25
   154c0:	bne	1549c <__assert_fail@plt+0x3684>
   154c4:	b	15648 <__assert_fail@plt+0x3830>
   154c8:	bl	11bfc <__ctype_b_loc@plt>
   154cc:	ldr	r0, [r0]
   154d0:	add	r0, r0, r4, lsl #1
   154d4:	ldrb	r0, [r0, #1]
   154d8:	tst	r0, #8
   154dc:	bne	155dc <__assert_fail@plt+0x37c4>
   154e0:	movw	r0, #4624	; 0x1210
   154e4:	add	r7, sp, #208	; 0xd0
   154e8:	movt	r0, #3
   154ec:	ldr	r1, [r0]
   154f0:	cmp	r1, #0
   154f4:	beq	15998 <__assert_fail@plt+0x3b80>
   154f8:	movw	r0, #4624	; 0x1210
   154fc:	movt	r0, #3
   15500:	add	r4, r0, #4
   15504:	mov	r0, r7
   15508:	bl	11b0c <strcasecmp@plt>
   1550c:	cmp	r0, #0
   15510:	beq	155fc <__assert_fail@plt+0x37e4>
   15514:	ldr	r1, [r4, #4]
   15518:	add	r0, r4, #8
   1551c:	mov	r4, r0
   15520:	cmp	r1, #0
   15524:	bne	15504 <__assert_fail@plt+0x36ec>
   15528:	b	15998 <__assert_fail@plt+0x3b80>
   1552c:	ldr	r0, [sp]
   15530:	ldr	r7, [sp, #4]
   15534:	vld1.8	{d16-d17}, [r0]
   15538:	vand	q8, q8, q5
   1553c:	vorr	q8, q8, q4
   15540:	vst1.8	{d16-d17}, [r0]
   15544:	ldrb	r0, [r7, #28]
   15548:	ldrb	r1, [r7, #29]
   1554c:	ldrb	r2, [r7, #30]
   15550:	ldrb	r3, [r7, #31]
   15554:	and	r0, r0, sl
   15558:	orr	r0, r0, r6
   1555c:	strb	r0, [r7, #28]
   15560:	and	r0, r1, sl
   15564:	orr	r0, r0, r6
   15568:	strb	r0, [r7, #29]
   1556c:	and	r0, r2, sl
   15570:	orr	r0, r0, r6
   15574:	strb	r0, [r7, #30]
   15578:	and	r0, r3, sl
   1557c:	orr	r0, r0, r6
   15580:	strb	r0, [r7, #31]
   15584:	ldrb	r0, [r7, #32]
   15588:	and	r0, r0, sl
   1558c:	orr	r0, r0, r6
   15590:	strb	r0, [r7, #32]
   15594:	ldrb	r0, [r7, #33]	; 0x21
   15598:	and	r0, r0, sl
   1559c:	orr	r0, r0, r6
   155a0:	strb	r0, [r7, #33]	; 0x21
   155a4:	ldrb	r0, [r7, #34]	; 0x22
   155a8:	and	r0, r0, sl
   155ac:	orr	r0, r0, r6
   155b0:	strb	r0, [r7, #34]	; 0x22
   155b4:	ldrb	r0, [r7, #35]	; 0x23
   155b8:	and	r0, r0, sl
   155bc:	orr	r0, r0, r6
   155c0:	strb	r0, [r7, #35]	; 0x23
   155c4:	ldrb	r0, [r7, #36]	; 0x24
   155c8:	and	r0, r0, sl
   155cc:	orr	r0, r0, r6
   155d0:	strb	r0, [r7, #36]	; 0x24
   155d4:	add	r7, sp, #208	; 0xd0
   155d8:	b	15648 <__assert_fail@plt+0x3830>
   155dc:	add	r7, sp, #208	; 0xd0
   155e0:	mov	r1, #0
   155e4:	mov	r2, #10
   155e8:	mov	r0, r7
   155ec:	bl	119a4 <strtol@plt>
   155f0:	cmp	r0, #193	; 0xc1
   155f4:	bcc	15608 <__assert_fail@plt+0x37f0>
   155f8:	b	15998 <__assert_fail@plt+0x3b80>
   155fc:	ldr	r0, [r4]
   15600:	cmp	r0, #193	; 0xc1
   15604:	bcs	15998 <__assert_fail@plt+0x3b80>
   15608:	ubfx	r0, r0, #3, #7
   1560c:	ldr	r1, [sp, #4]
   15610:	mov	r3, #1
   15614:	add	r1, r1, r0
   15618:	ldrb	r2, [r1, #12]
   1561c:	and	r2, r2, sl
   15620:	orr	r2, r2, r6
   15624:	strb	r2, [r1, #12]
   15628:	movw	r1, #6724	; 0x1a44
   1562c:	movt	r1, #3
   15630:	mov	r2, r1
   15634:	ldr	r1, [r1]
   15638:	orr	r0, r1, r3, lsl r0
   1563c:	str	r0, [r2]
   15640:	b	15648 <__assert_fail@plt+0x3830>
   15644:	add	r8, r8, #1
   15648:	ldrb	r4, [r8]
   1564c:	cmp	r4, #32
   15650:	cmpne	r4, #44	; 0x2c
   15654:	beq	15644 <__assert_fail@plt+0x382c>
   15658:	cmp	r4, #0
   1565c:	bne	153fc <__assert_fail@plt+0x35e4>
   15660:	ldrb	r6, [r5]
   15664:	mov	r8, r5
   15668:	cmp	r6, #0
   1566c:	beq	1567c <__assert_fail@plt+0x3864>
   15670:	cmp	r6, #9
   15674:	cmpne	r6, #32
   15678:	bne	151f0 <__assert_fail@plt+0x33d8>
   1567c:	ldr	r9, [sp, #4]
   15680:	add	r5, r8, #1
   15684:	b	1568c <__assert_fail@plt+0x3874>
   15688:	ldrb	r6, [r5], #1
   1568c:	uxtb	r0, r6
   15690:	cmp	r0, #9
   15694:	cmpne	r0, #32
   15698:	beq	15688 <__assert_fail@plt+0x3870>
   1569c:	cmp	r0, #45	; 0x2d
   156a0:	bne	1573c <__assert_fail@plt+0x3924>
   156a4:	ldr	r0, [r9, #460]	; 0x1cc
   156a8:	orr	r0, r0, #1
   156ac:	str	r0, [r9, #460]	; 0x1cc
   156b0:	ldrb	r6, [r5]
   156b4:	uxtb	r0, r6
   156b8:	cmp	r0, #46	; 0x2e
   156bc:	ble	1574c <__assert_fail@plt+0x3934>
   156c0:	cmp	r0, #47	; 0x2f
   156c4:	beq	15764 <__assert_fail@plt+0x394c>
   156c8:	cmp	r0, #64	; 0x40
   156cc:	beq	157c8 <__assert_fail@plt+0x39b0>
   156d0:	cmp	r0, #124	; 0x7c
   156d4:	bne	15880 <__assert_fail@plt+0x3a68>
   156d8:	mov	r0, r5
   156dc:	bl	11aac <strdup@plt>
   156e0:	add	r4, r5, #1
   156e4:	str	r0, [r9, #40]	; 0x28
   156e8:	movw	r1, #2050	; 0x802
   156ec:	mov	r0, r4
   156f0:	bl	11b90 <open64@plt>
   156f4:	mov	r5, r0
   156f8:	strh	r0, [r9, #6]
   156fc:	lsl	r0, r0, #16
   15700:	cmn	r0, #1
   15704:	ble	159d4 <__assert_fail@plt+0x3bbc>
   15708:	movw	r0, #5400	; 0x1518
   1570c:	movt	r0, #3
   15710:	add	r1, r0, #44	; 0x2c
   15714:	mov	r0, r4
   15718:	bl	11998 <strcmp@plt>
   1571c:	cmp	r0, #0
   15720:	beq	159cc <__assert_fail@plt+0x3bb4>
   15724:	sxth	r0, r5
   15728:	bl	11dd0 <isatty@plt>
   1572c:	cmp	r0, #0
   15730:	bne	157c0 <__assert_fail@plt+0x39a8>
   15734:	mov	r0, #9
   15738:	b	15a60 <__assert_fail@plt+0x3c48>
   1573c:	sub	r5, r5, #1
   15740:	uxtb	r0, r6
   15744:	cmp	r0, #46	; 0x2e
   15748:	bgt	156c0 <__assert_fail@plt+0x38a8>
   1574c:	cmp	r0, #0
   15750:	beq	1586c <__assert_fail@plt+0x3a54>
   15754:	cmp	r0, #42	; 0x2a
   15758:	bne	15880 <__assert_fail@plt+0x3a68>
   1575c:	mov	r0, #6
   15760:	b	15a60 <__assert_fail@plt+0x3c48>
   15764:	mov	r0, r5
   15768:	bl	11aac <strdup@plt>
   1576c:	str	r0, [r9, #40]	; 0x28
   15770:	mov	r0, r5
   15774:	movw	r1, #1089	; 0x441
   15778:	mov	r2, #420	; 0x1a4
   1577c:	bl	11b90 <open64@plt>
   15780:	mov	r4, r0
   15784:	strh	r0, [r9, #6]
   15788:	lsl	r0, r0, #16
   1578c:	cmn	r0, #1
   15790:	ble	159f4 <__assert_fail@plt+0x3bdc>
   15794:	movw	r0, #5400	; 0x1518
   15798:	movt	r0, #3
   1579c:	add	r1, r0, #44	; 0x2c
   157a0:	mov	r0, r5
   157a4:	bl	11998 <strcmp@plt>
   157a8:	cmp	r0, #0
   157ac:	beq	159cc <__assert_fail@plt+0x3bb4>
   157b0:	sxth	r0, r4
   157b4:	bl	11dd0 <isatty@plt>
   157b8:	cmp	r0, #0
   157bc:	beq	15a5c <__assert_fail@plt+0x3c44>
   157c0:	mov	r0, #2
   157c4:	b	15a60 <__assert_fail@plt+0x3c48>
   157c8:	add	r4, r5, #1
   157cc:	mov	r0, r4
   157d0:	bl	11aac <strdup@plt>
   157d4:	vmov.i32	q8, #0	; 0x00000000
   157d8:	str	r0, [r9, #40]	; 0x28
   157dc:	add	r0, sp, #8
   157e0:	add	r5, r9, #44	; 0x2c
   157e4:	mov	r2, #132	; 0x84
   157e8:	add	r1, r0, #16
   157ec:	vst1.64	{d16-d17}, [r1]
   157f0:	mov	r1, #8
   157f4:	vst1.64	{d16-d17}, [r0], r1
   157f8:	mov	r1, #2
   157fc:	str	r1, [r0]
   15800:	movw	r0, #5400	; 0x1518
   15804:	mov	r1, #0
   15808:	movt	r0, #3
   1580c:	ldr	r0, [r0, #12]
   15810:	cmp	r0, #0
   15814:	str	r0, [sp, #12]
   15818:	moveq	r0, #32
   1581c:	streq	r0, [sp, #8]
   15820:	mov	r0, r5
   15824:	bl	11c8c <memset@plt>
   15828:	movw	r0, #5584	; 0x15d0
   1582c:	add	r2, sp, #8
   15830:	sub	r3, fp, #72	; 0x48
   15834:	movt	r0, #3
   15838:	ldr	r1, [r0, #16]
   1583c:	mov	r0, r4
   15840:	bl	11da0 <getaddrinfo@plt>
   15844:	cmn	r0, #10
   15848:	beq	1585c <__assert_fail@plt+0x3a44>
   1584c:	cmp	r0, #0
   15850:	beq	15a14 <__assert_fail@plt+0x3bfc>
   15854:	cmn	r0, #3
   15858:	bne	15a44 <__assert_fail@plt+0x3c2c>
   1585c:	mov	r0, #10
   15860:	str	r0, [r9, #452]	; 0x1c4
   15864:	mov	r0, #8
   15868:	b	15a48 <__assert_fail@plt+0x3c30>
   1586c:	mov	r0, #0
   15870:	strh	r0, [r9, #4]
   15874:	movw	r0, #61726	; 0xf11e
   15878:	movt	r0, #1
   1587c:	b	159b8 <__assert_fail@plt+0x3ba0>
   15880:	mov	r0, #1
   15884:	mov	r1, r5
   15888:	str	r0, [r9, #40]	; 0x28
   1588c:	ldrb	r2, [r1]
   15890:	cmp	r2, #44	; 0x2c
   15894:	bne	158c4 <__assert_fail@plt+0x3aac>
   15898:	b	158ac <__assert_fail@plt+0x3a94>
   1589c:	add	r1, r1, #1
   158a0:	ldrb	r2, [r1]
   158a4:	cmp	r2, #44	; 0x2c
   158a8:	bne	158c4 <__assert_fail@plt+0x3aac>
   158ac:	add	r0, r0, #1
   158b0:	str	r0, [r9, #40]	; 0x28
   158b4:	add	r1, r1, #1
   158b8:	ldrb	r2, [r1]
   158bc:	cmp	r2, #44	; 0x2c
   158c0:	beq	158ac <__assert_fail@plt+0x3a94>
   158c4:	cmp	r2, #0
   158c8:	bne	1589c <__assert_fail@plt+0x3a84>
   158cc:	lsl	r0, r0, #2
   158d0:	bl	1ca78 <argp_parse@@Base+0x25e8>
   158d4:	str	r0, [r9, #44]	; 0x2c
   158d8:	ldrb	r0, [r5]
   158dc:	cmp	r0, #0
   158e0:	beq	15978 <__assert_fail@plt+0x3b60>
   158e4:	mov	r8, #0
   158e8:	mov	r7, #0
   158ec:	mov	r4, r5
   158f0:	uxtb	r0, r0
   158f4:	cmp	r0, #0
   158f8:	cmpne	r0, #44	; 0x2c
   158fc:	beq	15914 <__assert_fail@plt+0x3afc>
   15900:	ldrb	r0, [r4, #1]!
   15904:	uxtb	r0, r0
   15908:	cmp	r0, #0
   1590c:	cmpne	r0, #44	; 0x2c
   15910:	bne	15900 <__assert_fail@plt+0x3ae8>
   15914:	sub	r6, r4, r5
   15918:	add	r0, r6, #1
   1591c:	bl	1ca78 <argp_parse@@Base+0x25e8>
   15920:	ldr	r1, [r9, #44]	; 0x2c
   15924:	str	r0, [r1, r7, lsl #2]
   15928:	ldr	r0, [r9, #44]	; 0x2c
   1592c:	ldr	r0, [r0, r7, lsl #2]
   15930:	cmp	r0, #0
   15934:	beq	15958 <__assert_fail@plt+0x3b40>
   15938:	mov	r1, r5
   1593c:	mov	r2, r6
   15940:	bl	11c98 <strncpy@plt>
   15944:	ldr	r0, [r9, #44]	; 0x2c
   15948:	ldr	r0, [r0, r7, lsl #2]
   1594c:	strb	r8, [r0, r6]
   15950:	b	15958 <__assert_fail@plt+0x3b40>
   15954:	add	r4, r4, #1
   15958:	ldrb	r0, [r4]
   1595c:	cmp	r0, #44	; 0x2c
   15960:	cmpne	r0, #32
   15964:	beq	15954 <__assert_fail@plt+0x3b3c>
   15968:	add	r7, r7, #1
   1596c:	cmp	r0, #0
   15970:	mov	r5, r4
   15974:	bne	15904 <__assert_fail@plt+0x3aec>
   15978:	mov	r0, #5
   1597c:	b	15a60 <__assert_fail@plt+0x3c48>
   15980:	movw	r2, #61661	; 0xf0dd
   15984:	add	r4, sp, #8
   15988:	mov	r1, #200	; 0xc8
   1598c:	mov	r3, r6
   15990:	movt	r2, #1
   15994:	b	159ac <__assert_fail@plt+0x3b94>
   15998:	movw	r2, #61699	; 0xf103
   1599c:	add	r4, sp, #8
   159a0:	add	r3, sp, #208	; 0xd0
   159a4:	mov	r1, #200	; 0xc8
   159a8:	movt	r2, #1
   159ac:	mov	r0, r4
   159b0:	bl	11c5c <snprintf@plt>
   159b4:	mov	r0, r4
   159b8:	bl	1370c <__assert_fail@plt+0x18f4>
   159bc:	sub	sp, fp, #64	; 0x40
   159c0:	vpop	{d8-d11}
   159c4:	add	sp, sp, #4
   159c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159cc:	mov	r0, #3
   159d0:	b	15a60 <__assert_fail@plt+0x3c48>
   159d4:	mov	r5, #0
   159d8:	mov	r0, r4
   159dc:	strh	r5, [r9, #4]
   159e0:	bl	1370c <__assert_fail@plt+0x18f4>
   159e4:	ldr	r0, [r9, #40]	; 0x28
   159e8:	bl	1ba4c <argp_parse@@Base+0x15bc>
   159ec:	str	r5, [r9, #40]	; 0x28
   159f0:	b	15a64 <__assert_fail@plt+0x3c4c>
   159f4:	mov	r4, #0
   159f8:	mov	r0, r5
   159fc:	strh	r4, [r9, #4]
   15a00:	bl	1370c <__assert_fail@plt+0x18f4>
   15a04:	ldr	r0, [r9, #40]	; 0x28
   15a08:	bl	1ba4c <argp_parse@@Base+0x15bc>
   15a0c:	str	r4, [r9, #40]	; 0x28
   15a10:	b	15a64 <__assert_fail@plt+0x3c4c>
   15a14:	mov	r0, #4
   15a18:	strh	r0, [r9, #4]
   15a1c:	ldr	r4, [fp, #-72]	; 0xffffffb8
   15a20:	ldr	r0, [r4, #16]
   15a24:	str	r0, [r9, #172]	; 0xac
   15a28:	mov	r0, r5
   15a2c:	ldr	r2, [r4, #16]
   15a30:	ldr	r1, [r4, #20]
   15a34:	bl	11a58 <memcpy@plt>
   15a38:	mov	r0, r4
   15a3c:	bl	11d94 <freeaddrinfo@plt>
   15a40:	b	15a64 <__assert_fail@plt+0x3c4c>
   15a44:	mov	r0, #0
   15a48:	strh	r0, [r9, #4]
   15a4c:	mov	r0, #0
   15a50:	bl	11a70 <time@plt>
   15a54:	str	r0, [r9, #8]
   15a58:	b	15a64 <__assert_fail@plt+0x3c4c>
   15a5c:	mov	r0, #1
   15a60:	strh	r0, [r9, #4]
   15a64:	movw	r4, #7232	; 0x1c40
   15a68:	movt	r4, #3
   15a6c:	ldr	r0, [r4]
   15a70:	cmp	r0, #0
   15a74:	beq	15a9c <__assert_fail@plt+0x3c84>
   15a78:	bl	11aac <strdup@plt>
   15a7c:	str	r0, [r9, #436]	; 0x1b4
   15a80:	ldr	r0, [r4]
   15a84:	bl	11c20 <strlen@plt>
   15a88:	str	r0, [r9, #440]	; 0x1b8
   15a8c:	sub	sp, fp, #64	; 0x40
   15a90:	vpop	{d8-d11}
   15a94:	add	sp, sp, #4
   15a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a9c:	mov	r0, #0
   15aa0:	str	r0, [r9, #436]	; 0x1b4
   15aa4:	sub	sp, fp, #64	; 0x40
   15aa8:	vpop	{d8-d11}
   15aac:	add	sp, sp, #4
   15ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ab4:	push	{r4, r5, r6, sl, fp, lr}
   15ab8:	add	fp, sp, #16
   15abc:	mov	r6, r1
   15ac0:	mov	r4, r0
   15ac4:	bl	11bfc <__ctype_b_loc@plt>
   15ac8:	ldrb	r1, [r4]
   15acc:	ldr	r0, [r0]
   15ad0:	add	r0, r0, r1, lsl #1
   15ad4:	ldrb	r0, [r0, #1]
   15ad8:	tst	r0, #8
   15adc:	bne	15b20 <__assert_fail@plt+0x3d08>
   15ae0:	ldr	r1, [r6]
   15ae4:	mvn	r5, #0
   15ae8:	cmp	r1, #0
   15aec:	beq	15b18 <__assert_fail@plt+0x3d00>
   15af0:	add	r6, r6, #4
   15af4:	mov	r0, r4
   15af8:	bl	11b0c <strcasecmp@plt>
   15afc:	cmp	r0, #0
   15b00:	beq	15b34 <__assert_fail@plt+0x3d1c>
   15b04:	ldr	r1, [r6, #4]
   15b08:	add	r0, r6, #8
   15b0c:	mov	r6, r0
   15b10:	cmp	r1, #0
   15b14:	bne	15af4 <__assert_fail@plt+0x3cdc>
   15b18:	mov	r0, r5
   15b1c:	pop	{r4, r5, r6, sl, fp, pc}
   15b20:	mov	r0, r4
   15b24:	mov	r1, #0
   15b28:	mov	r2, #10
   15b2c:	pop	{r4, r5, r6, sl, fp, lr}
   15b30:	b	119a4 <strtol@plt>
   15b34:	ldr	r5, [r6]
   15b38:	mov	r0, r5
   15b3c:	pop	{r4, r5, r6, sl, fp, pc}
   15b40:	push	{r4, r5, r6, sl, fp, lr}
   15b44:	add	fp, sp, #16
   15b48:	sub	sp, sp, #8
   15b4c:	mov	r4, r1
   15b50:	sub	r1, r0, #52	; 0x34
   15b54:	mov	r0, #7
   15b58:	cmp	r1, #207	; 0xcf
   15b5c:	bhi	160c8 <__assert_fail@plt+0x42b0>
   15b60:	mov	r5, r2
   15b64:	add	r2, pc, #0
   15b68:	ldr	pc, [r2, r1, lsl #2]
   15b6c:	andeq	r5, r1, ip, lsr #29
   15b70:	andeq	r6, r1, r8, asr #1
   15b74:	andeq	r5, r1, r0, asr #29
   15b78:	andeq	r6, r1, r8, asr #1
   15b7c:	andeq	r6, r1, r8, asr #1
   15b80:	andeq	r6, r1, r8, asr #1
   15b84:	andeq	r6, r1, r8, asr #1
   15b88:	andeq	r6, r1, r8, asr #1
   15b8c:	andeq	r6, r1, r8, asr #1
   15b90:	andeq	r6, r1, r8, asr #1
   15b94:	andeq	r6, r1, r8, asr #1
   15b98:	andeq	r6, r1, r8, asr #1
   15b9c:	andeq	r6, r1, r8, asr #1
   15ba0:	andeq	r6, r1, r8, asr #1
   15ba4:	ldrdeq	r5, [r1], -r4
   15ba8:	andeq	r6, r1, r8, asr #1
   15bac:	andeq	r5, r1, r4, ror #29
   15bb0:	andeq	r6, r1, r8, asr #1
   15bb4:	andeq	r6, r1, r8, asr #1
   15bb8:	andeq	r6, r1, r8, asr #1
   15bbc:	andeq	r6, r1, r8, asr #1
   15bc0:	andeq	r6, r1, r8, asr #1
   15bc4:	andeq	r6, r1, r8, asr #1
   15bc8:	andeq	r6, r1, r8, asr #1
   15bcc:	andeq	r6, r1, r8, asr #1
   15bd0:	andeq	r6, r1, r8, asr #1
   15bd4:	andeq	r6, r1, r8, asr #1
   15bd8:	andeq	r6, r1, r8, asr #1
   15bdc:	strdeq	r5, [r1], -r4
   15be0:	andeq	r6, r1, r8, asr #1
   15be4:	andeq	r6, r1, r8, asr #1
   15be8:	andeq	r5, r1, r4, lsl #30
   15bec:	andeq	r5, r1, r0, lsl pc
   15bf0:	andeq	r6, r1, r8, asr #1
   15bf4:	andeq	r6, r1, r8, asr #1
   15bf8:	andeq	r6, r1, r8, asr #1
   15bfc:	andeq	r6, r1, r8, asr #1
   15c00:	andeq	r6, r1, r8, asr #1
   15c04:	andeq	r6, r1, r8, asr #1
   15c08:	andeq	r6, r1, r8, asr #1
   15c0c:	andeq	r6, r1, r8, asr #1
   15c10:	andeq	r6, r1, r8, asr #1
   15c14:	andeq	r6, r1, r8, asr #1
   15c18:	andeq	r6, r1, r8, asr #1
   15c1c:	andeq	r6, r1, r8, asr #1
   15c20:	andeq	r5, r1, r4, lsr #30
   15c24:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15c28:	andeq	r6, r1, r8, asr #1
   15c2c:	andeq	r5, r1, r8, lsr #31
   15c30:	andeq	r6, r1, r8, asr #1
   15c34:	andeq	r5, r1, r4, asr #31
   15c38:	andeq	r6, r1, r8, asr #1
   15c3c:	ldrdeq	r5, [r1], -r4
   15c40:	andeq	r6, r1, r8, asr #1
   15c44:	andeq	r6, r1, r8, asr #1
   15c48:	andeq	r6, r1, r8, asr #1
   15c4c:	andeq	r5, r1, ip, ror #31
   15c50:	strdeq	r5, [r1], -r8
   15c54:	andeq	r6, r1, r8, asr #32
   15c58:	andeq	r6, r1, r8, asr #1
   15c5c:	andeq	r6, r1, r4, asr r0
   15c60:	andeq	r6, r1, r8, asr #1
   15c64:	andeq	r6, r1, r4, ror r0
   15c68:	andeq	r6, r1, r0, lsl #1
   15c6c:	andeq	r6, r1, r8, asr #1
   15c70:	andeq	r6, r1, r8, asr #1
   15c74:	andeq	r6, r1, r8, asr #1
   15c78:	andeq	r6, r1, r8, asr #1
   15c7c:	andeq	r6, r1, r8, asr #1
   15c80:	andeq	r6, r1, r8, asr #1
   15c84:	andeq	r6, r1, r8, asr #1
   15c88:	andeq	r6, r1, r8, asr #1
   15c8c:	andeq	r6, r1, r8, asr #1
   15c90:	andeq	r6, r1, r8, asr #1
   15c94:	andeq	r6, r1, r8, asr #1
   15c98:	andeq	r6, r1, r8, asr #1
   15c9c:	andeq	r6, r1, r8, asr #1
   15ca0:	andeq	r6, r1, r8, asr #1
   15ca4:	andeq	r6, r1, r8, asr #1
   15ca8:	andeq	r6, r1, r8, asr #1
   15cac:	andeq	r6, r1, r8, asr #1
   15cb0:	andeq	r6, r1, r8, asr #1
   15cb4:	andeq	r6, r1, r8, asr #1
   15cb8:	andeq	r6, r1, r8, asr #1
   15cbc:	andeq	r6, r1, r8, asr #1
   15cc0:	andeq	r6, r1, r8, asr #1
   15cc4:	andeq	r6, r1, r8, asr #1
   15cc8:	andeq	r6, r1, r8, asr #1
   15ccc:	andeq	r6, r1, r8, asr #1
   15cd0:	andeq	r6, r1, r8, asr #1
   15cd4:	andeq	r6, r1, r8, asr #1
   15cd8:	andeq	r6, r1, r8, asr #1
   15cdc:	andeq	r6, r1, r8, asr #1
   15ce0:	andeq	r6, r1, r8, asr #1
   15ce4:	andeq	r6, r1, r8, asr #1
   15ce8:	andeq	r6, r1, r8, asr #1
   15cec:	andeq	r6, r1, r8, asr #1
   15cf0:	andeq	r6, r1, r8, asr #1
   15cf4:	andeq	r6, r1, r8, asr #1
   15cf8:	andeq	r6, r1, r8, asr #1
   15cfc:	andeq	r6, r1, r8, asr #1
   15d00:	andeq	r6, r1, r8, asr #1
   15d04:	andeq	r6, r1, r8, asr #1
   15d08:	andeq	r6, r1, r8, asr #1
   15d0c:	andeq	r6, r1, r8, asr #1
   15d10:	andeq	r6, r1, r8, asr #1
   15d14:	andeq	r6, r1, r8, asr #1
   15d18:	andeq	r6, r1, r8, asr #1
   15d1c:	andeq	r6, r1, r8, asr #1
   15d20:	andeq	r6, r1, r8, asr #1
   15d24:	andeq	r6, r1, r8, asr #1
   15d28:	andeq	r6, r1, r8, asr #1
   15d2c:	andeq	r6, r1, r8, asr #1
   15d30:	andeq	r6, r1, r8, asr #1
   15d34:	andeq	r6, r1, r8, asr #1
   15d38:	andeq	r6, r1, r8, asr #1
   15d3c:	andeq	r6, r1, r8, asr #1
   15d40:	andeq	r6, r1, r8, asr #1
   15d44:	andeq	r6, r1, r8, asr #1
   15d48:	andeq	r6, r1, r8, asr #1
   15d4c:	andeq	r6, r1, r8, asr #1
   15d50:	andeq	r6, r1, r8, asr #1
   15d54:	andeq	r6, r1, r8, asr #1
   15d58:	andeq	r6, r1, r8, asr #1
   15d5c:	andeq	r6, r1, r8, asr #1
   15d60:	andeq	r6, r1, r8, asr #1
   15d64:	andeq	r6, r1, r8, asr #1
   15d68:	andeq	r6, r1, r8, asr #1
   15d6c:	andeq	r6, r1, r8, asr #1
   15d70:	andeq	r6, r1, r8, asr #1
   15d74:	andeq	r6, r1, r8, asr #1
   15d78:	andeq	r6, r1, r8, asr #1
   15d7c:	andeq	r6, r1, r8, asr #1
   15d80:	andeq	r6, r1, r8, asr #1
   15d84:	andeq	r6, r1, r8, asr #1
   15d88:	andeq	r6, r1, r8, asr #1
   15d8c:	andeq	r6, r1, r8, asr #1
   15d90:	andeq	r6, r1, r8, asr #1
   15d94:	andeq	r6, r1, r8, asr #1
   15d98:	andeq	r6, r1, r8, asr #1
   15d9c:	andeq	r6, r1, r8, asr #1
   15da0:	andeq	r6, r1, r8, asr #1
   15da4:	andeq	r6, r1, r8, asr #1
   15da8:	andeq	r6, r1, r8, asr #1
   15dac:	andeq	r6, r1, r8, asr #1
   15db0:	andeq	r6, r1, r8, asr #1
   15db4:	andeq	r6, r1, r8, asr #1
   15db8:	andeq	r6, r1, r8, asr #1
   15dbc:	andeq	r6, r1, r8, asr #1
   15dc0:	andeq	r6, r1, r8, asr #1
   15dc4:	andeq	r6, r1, r8, asr #1
   15dc8:	andeq	r6, r1, r8, asr #1
   15dcc:	andeq	r6, r1, r8, asr #1
   15dd0:	andeq	r6, r1, r8, asr #1
   15dd4:	andeq	r6, r1, r8, asr #1
   15dd8:	andeq	r6, r1, r8, asr #1
   15ddc:	andeq	r6, r1, r8, asr #1
   15de0:	andeq	r6, r1, r8, asr #1
   15de4:	andeq	r6, r1, r8, asr #1
   15de8:	andeq	r6, r1, r8, asr #1
   15dec:	andeq	r6, r1, r8, asr #1
   15df0:	andeq	r6, r1, r8, asr #1
   15df4:	andeq	r6, r1, r8, asr #1
   15df8:	andeq	r6, r1, r8, asr #1
   15dfc:	andeq	r6, r1, r8, asr #1
   15e00:	andeq	r6, r1, r8, asr #1
   15e04:	andeq	r6, r1, r8, asr #1
   15e08:	andeq	r6, r1, r8, asr #1
   15e0c:	andeq	r6, r1, r8, asr #1
   15e10:	andeq	r6, r1, r8, asr #1
   15e14:	andeq	r6, r1, r8, asr #1
   15e18:	andeq	r6, r1, r8, asr #1
   15e1c:	andeq	r6, r1, r8, asr #1
   15e20:	andeq	r6, r1, r8, asr #1
   15e24:	andeq	r6, r1, r8, asr #1
   15e28:	andeq	r6, r1, r8, asr #1
   15e2c:	andeq	r6, r1, r8, asr #1
   15e30:	andeq	r6, r1, r8, asr #1
   15e34:	andeq	r6, r1, r8, asr #1
   15e38:	andeq	r6, r1, r8, asr #1
   15e3c:	andeq	r6, r1, r8, asr #1
   15e40:	andeq	r6, r1, r8, asr #1
   15e44:	andeq	r6, r1, r8, asr #1
   15e48:	andeq	r6, r1, r8, asr #1
   15e4c:	andeq	r6, r1, r8, asr #1
   15e50:	andeq	r6, r1, r8, asr #1
   15e54:	andeq	r6, r1, r8, asr #1
   15e58:	andeq	r6, r1, r8, asr #1
   15e5c:	andeq	r6, r1, r8, asr #1
   15e60:	andeq	r6, r1, r8, asr #1
   15e64:	andeq	r6, r1, r8, asr #1
   15e68:	andeq	r6, r1, r8, asr #1
   15e6c:	andeq	r6, r1, r8, asr #1
   15e70:	andeq	r6, r1, r8, asr #1
   15e74:	andeq	r6, r1, r8, asr #1
   15e78:	andeq	r6, r1, r8, asr #1
   15e7c:	andeq	r6, r1, r8, asr #1
   15e80:	andeq	r6, r1, r8, asr #1
   15e84:	andeq	r6, r1, r8, asr #1
   15e88:	andeq	r6, r1, r8, asr #1
   15e8c:	andeq	r6, r1, r8, asr #1
   15e90:	andeq	r6, r1, r8, asr #1
   15e94:	andeq	r6, r1, r8, asr #1
   15e98:	andeq	r6, r1, r8, asr #1
   15e9c:	muleq	r1, ip, r0
   15ea0:	andeq	r6, r1, r8, lsr #1
   15ea4:	strheq	r6, [r1], -r4
   15ea8:	ldrdeq	r6, [r1], -r0
   15eac:	movw	r0, #5400	; 0x1518
   15eb0:	mov	r1, #2
   15eb4:	movt	r0, #3
   15eb8:	str	r1, [r0, #12]
   15ebc:	b	160c4 <__assert_fail@plt+0x42ac>
   15ec0:	movw	r0, #5400	; 0x1518
   15ec4:	mov	r1, #10
   15ec8:	movt	r0, #3
   15ecc:	str	r1, [r0, #12]
   15ed0:	b	160c4 <__assert_fail@plt+0x42ac>
   15ed4:	movw	r0, #5584	; 0x15d0
   15ed8:	movt	r0, #3
   15edc:	str	r4, [r0, #8]
   15ee0:	b	160c4 <__assert_fail@plt+0x42ac>
   15ee4:	movw	r0, #5400	; 0x1518
   15ee8:	movt	r0, #3
   15eec:	str	r4, [r0, #4]
   15ef0:	b	160c4 <__assert_fail@plt+0x42ac>
   15ef4:	movw	r0, #5400	; 0x1518
   15ef8:	movt	r0, #3
   15efc:	str	r4, [r0, #8]
   15f00:	b	160c4 <__assert_fail@plt+0x42ac>
   15f04:	movw	r0, #7212	; 0x1c2c
   15f08:	movt	r0, #3
   15f0c:	b	160bc <__assert_fail@plt+0x42a4>
   15f10:	movw	r0, #5584	; 0x15d0
   15f14:	mov	r1, #1
   15f18:	movt	r0, #3
   15f1c:	str	r1, [r0, #20]
   15f20:	b	160c4 <__assert_fail@plt+0x42ac>
   15f24:	movw	r5, #7200	; 0x1c20
   15f28:	movw	r6, #7296	; 0x1c80
   15f2c:	mov	r1, #8
   15f30:	movt	r5, #3
   15f34:	movt	r6, #3
   15f38:	ldr	r0, [r5]
   15f3c:	add	r1, r1, r0, lsl #3
   15f40:	ldr	r0, [r6]
   15f44:	bl	1caa8 <argp_parse@@Base+0x2618>
   15f48:	cmp	r0, #0
   15f4c:	str	r0, [r6]
   15f50:	bne	15f70 <__assert_fail@plt+0x4158>
   15f54:	bl	11c50 <__errno_location@plt>
   15f58:	ldr	r1, [r0]
   15f5c:	movw	r2, #62979	; 0xf603
   15f60:	mov	r0, #1
   15f64:	movt	r2, #1
   15f68:	bl	11b6c <error@plt>
   15f6c:	ldr	r0, [r6]
   15f70:	ldr	r1, [r5]
   15f74:	str	r4, [r0, r1, lsl #3]
   15f78:	ldr	r0, [r6]
   15f7c:	add	r0, r0, r1, lsl #3
   15f80:	mvn	r1, #0
   15f84:	str	r1, [r0, #4]
   15f88:	ldr	r0, [r5]
   15f8c:	add	r0, r0, #1
   15f90:	str	r0, [r5]
   15f94:	b	160c4 <__assert_fail@plt+0x42ac>
   15f98:	movw	r0, #5584	; 0x15d0
   15f9c:	movt	r0, #3
   15fa0:	str	r4, [r0, #4]
   15fa4:	b	160c4 <__assert_fail@plt+0x42ac>
   15fa8:	movw	r0, #7228	; 0x1c3c
   15fac:	mov	r1, #1
   15fb0:	movt	r0, #3
   15fb4:	str	r1, [r0]
   15fb8:	movw	r0, #7204	; 0x1c24
   15fbc:	movt	r0, #3
   15fc0:	b	160c0 <__assert_fail@plt+0x42a8>
   15fc4:	movw	r0, #5400	; 0x1518
   15fc8:	movt	r0, #3
   15fcc:	str	r4, [r0]
   15fd0:	b	160c4 <__assert_fail@plt+0x42ac>
   15fd4:	movw	r1, #5400	; 0x1518
   15fd8:	mov	r0, #0
   15fdc:	movt	r1, #3
   15fe0:	str	r0, [r1, #24]
   15fe4:	sub	sp, fp, #16
   15fe8:	pop	{r4, r5, r6, sl, fp, pc}
   15fec:	movw	r5, #7236	; 0x1c44
   15ff0:	movt	r5, #3
   15ff4:	b	16088 <__assert_fail@plt+0x4270>
   15ff8:	add	r1, sp, #4
   15ffc:	mov	r0, r4
   16000:	mov	r2, #10
   16004:	bl	119a4 <strtol@plt>
   16008:	ldr	r3, [sp, #4]
   1600c:	mov	r6, r0
   16010:	ldrb	r0, [r3]
   16014:	cmp	r0, #0
   16018:	beq	16030 <__assert_fail@plt+0x4218>
   1601c:	movw	r1, #62948	; 0xf5e4
   16020:	mov	r0, r5
   16024:	mov	r2, r4
   16028:	movt	r1, #1
   1602c:	bl	18224 <argp_error@@Base>
   16030:	rsb	r0, r6, r6, lsl #4
   16034:	movw	r1, #5400	; 0x1518
   16038:	movt	r1, #3
   1603c:	lsl	r0, r0, #2
   16040:	str	r0, [r1, #20]
   16044:	b	160c4 <__assert_fail@plt+0x42ac>
   16048:	movw	r0, #7228	; 0x1c3c
   1604c:	movt	r0, #3
   16050:	b	160bc <__assert_fail@plt+0x42a4>
   16054:	movw	r0, #7296	; 0x1c80
   16058:	movt	r0, #3
   1605c:	ldr	r1, [r0]
   16060:	str	r4, [r1]
   16064:	mvn	r1, #0
   16068:	ldr	r0, [r0]
   1606c:	str	r1, [r0, #4]
   16070:	b	160c4 <__assert_fail@plt+0x42ac>
   16074:	movw	r0, #6720	; 0x1a40
   16078:	movt	r0, #3
   1607c:	b	160bc <__assert_fail@plt+0x42a4>
   16080:	movw	r5, #7196	; 0x1c1c
   16084:	movt	r5, #3
   16088:	ldr	r0, [r5]
   1608c:	mov	r1, r4
   16090:	bl	13c58 <__assert_fail@plt+0x1e40>
   16094:	str	r0, [r5]
   16098:	b	160c4 <__assert_fail@plt+0x42ac>
   1609c:	movw	r0, #7292	; 0x1c7c
   160a0:	movt	r0, #3
   160a4:	b	160bc <__assert_fail@plt+0x42a4>
   160a8:	movw	r0, #6716	; 0x1a3c
   160ac:	movt	r0, #3
   160b0:	b	160bc <__assert_fail@plt+0x42a4>
   160b4:	movw	r0, #7208	; 0x1c28
   160b8:	movt	r0, #3
   160bc:	mov	r1, #1
   160c0:	str	r1, [r0]
   160c4:	mov	r0, #0
   160c8:	sub	sp, fp, #16
   160cc:	pop	{r4, r5, r6, sl, fp, pc}
   160d0:	movw	r1, #5400	; 0x1518
   160d4:	mov	r0, #0
   160d8:	movt	r1, #3
   160dc:	str	r0, [r1, #12]
   160e0:	sub	sp, fp, #16
   160e4:	pop	{r4, r5, r6, sl, fp, pc}
   160e8:	push	{r4, sl, fp, lr}
   160ec:	add	fp, sp, #8
   160f0:	mov	r0, #0
   160f4:	bl	11ac4 <alarm@plt>
   160f8:	mov	r4, r0
   160fc:	mov	r0, #14
   16100:	mov	r1, #0
   16104:	bl	11a64 <signal@plt>
   16108:	cmp	r4, #0
   1610c:	popne	{r4, sl, fp, pc}
   16110:	movw	r2, #63473	; 0xf7f1
   16114:	mov	r0, #1
   16118:	mov	r1, #0
   1611c:	movt	r2, #1
   16120:	pop	{r4, sl, fp, lr}
   16124:	b	11b6c <error@plt>
   16128:	push	{r4, r5, r6, r7, fp, lr}
   1612c:	add	fp, sp, #16
   16130:	mov	r7, r2
   16134:	mov	r5, r1
   16138:	mov	r6, r0
   1613c:	bl	11c08 <getpid@plt>
   16140:	mov	r4, r0
   16144:	bl	11d10 <fork@plt>
   16148:	cmn	r0, #1
   1614c:	beq	161b8 <__assert_fail@plt+0x43a0>
   16150:	cmp	r0, #0
   16154:	bne	16244 <__assert_fail@plt+0x442c>
   16158:	bl	11c2c <setsid@plt>
   1615c:	mov	r1, r0
   16160:	mvn	r0, #0
   16164:	cmn	r1, #1
   16168:	beq	161b8 <__assert_fail@plt+0x43a0>
   1616c:	mov	r0, #1
   16170:	mov	r1, #1
   16174:	bl	11a64 <signal@plt>
   16178:	bl	11d10 <fork@plt>
   1617c:	cmn	r0, #1
   16180:	beq	161b8 <__assert_fail@plt+0x43a0>
   16184:	cmp	r0, #0
   16188:	bne	16268 <__assert_fail@plt+0x4450>
   1618c:	cmp	r6, #0
   16190:	bne	161ac <__assert_fail@plt+0x4394>
   16194:	movw	r0, #433	; 0x1b1
   16198:	movt	r0, #2
   1619c:	bl	11b00 <chdir@plt>
   161a0:	cmp	r0, #0
   161a4:	mvn	r0, #0
   161a8:	bmi	161b8 <__assert_fail@plt+0x43a0>
   161ac:	cmp	r5, #0
   161b0:	beq	161bc <__assert_fail@plt+0x43a4>
   161b4:	mov	r0, r4
   161b8:	pop	{r4, r5, r6, r7, fp, pc}
   161bc:	mov	r0, #4
   161c0:	bl	11ad0 <sysconf@plt>
   161c4:	cmn	r0, #1
   161c8:	mov	r5, r0
   161cc:	movweq	r5, #64	; 0x40
   161d0:	cmp	r5, #1
   161d4:	blt	161f0 <__assert_fail@plt+0x43d8>
   161d8:	mov	r6, #0
   161dc:	mov	r0, r6
   161e0:	bl	11e00 <close@plt>
   161e4:	add	r6, r6, #1
   161e8:	cmp	r5, r6
   161ec:	bne	161dc <__assert_fail@plt+0x43c4>
   161f0:	movw	r0, #63501	; 0xf80d
   161f4:	mov	r1, #2
   161f8:	mov	r2, #0
   161fc:	movt	r0, #1
   16200:	bl	11b90 <open64@plt>
   16204:	cmn	r0, #1
   16208:	beq	161b4 <__assert_fail@plt+0x439c>
   1620c:	mov	r1, #0
   16210:	mov	r5, r0
   16214:	bl	11ae8 <dup2@plt>
   16218:	mov	r0, r5
   1621c:	mov	r1, #1
   16220:	bl	11ae8 <dup2@plt>
   16224:	mov	r0, r5
   16228:	mov	r1, #2
   1622c:	bl	11ae8 <dup2@plt>
   16230:	cmp	r5, #3
   16234:	blt	161b4 <__assert_fail@plt+0x439c>
   16238:	mov	r0, r5
   1623c:	bl	11e00 <close@plt>
   16240:	b	161b4 <__assert_fail@plt+0x439c>
   16244:	cmp	r7, #1
   16248:	blt	16268 <__assert_fail@plt+0x4450>
   1624c:	movw	r1, #24808	; 0x60e8
   16250:	mov	r0, #14
   16254:	movt	r1, #1
   16258:	bl	11a64 <signal@plt>
   1625c:	mov	r0, r7
   16260:	bl	11ac4 <alarm@plt>
   16264:	bl	119bc <pause@plt>
   16268:	mov	r0, #0
   1626c:	bl	11a4c <_exit@plt>

00016270 <daemon@@Base>:
   16270:	push	{fp, lr}
   16274:	mov	fp, sp
   16278:	mov	r2, #0
   1627c:	bl	16128 <__assert_fail@plt+0x4310>
   16280:	cmn	r0, #1
   16284:	movwne	r0, #0
   16288:	pop	{fp, pc}
   1628c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16290:	add	fp, sp, #28
   16294:	sub	sp, sp, #60	; 0x3c
   16298:	sub	sp, sp, #1024	; 0x400
   1629c:	bl	11c50 <__errno_location@plt>
   162a0:	mov	r8, #0
   162a4:	mov	r9, r0
   162a8:	mov	r1, #256	; 0x100
   162ac:	str	r8, [r0]
   162b0:	mov	r0, #0
   162b4:	bl	1caa8 <argp_parse@@Base+0x2618>
   162b8:	mov	r4, r0
   162bc:	cmp	r0, #0
   162c0:	mov	r0, #0
   162c4:	beq	16340 <daemon@@Base+0xd0>
   162c8:	mov	r7, #512	; 0x200
   162cc:	mov	sl, #0
   162d0:	b	16308 <daemon@@Base+0x98>
   162d4:	ldr	r0, [r9]
   162d8:	cmp	r0, #36	; 0x24
   162dc:	bne	16358 <daemon@@Base+0xe8>
   162e0:	mov	r0, r4
   162e4:	mov	r1, r7
   162e8:	str	sl, [r9]
   162ec:	bl	1caa8 <argp_parse@@Base+0x2618>
   162f0:	mov	r1, r0
   162f4:	mov	r0, r4
   162f8:	add	r7, r7, #256	; 0x100
   162fc:	cmp	r1, #0
   16300:	mov	r4, r1
   16304:	beq	16340 <daemon@@Base+0xd0>
   16308:	sub	r6, r7, #256	; 0x100
   1630c:	mov	r0, r4
   16310:	mov	r1, r6
   16314:	bl	11b78 <gethostname@plt>
   16318:	mov	r5, r0
   1631c:	cmp	r0, #0
   16320:	bne	162d4 <daemon@@Base+0x64>
   16324:	mov	r0, r4
   16328:	mov	r1, #0
   1632c:	mov	r2, r6
   16330:	bl	11cb0 <memchr@plt>
   16334:	cmp	r0, #0
   16338:	bne	162d4 <daemon@@Base+0x64>
   1633c:	b	162e0 <daemon@@Base+0x70>
   16340:	mov	r1, #12
   16344:	str	r1, [r9]
   16348:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1634c:	mov	r0, r8
   16350:	sub	sp, fp, #28
   16354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16358:	cmp	r5, #0
   1635c:	cmpne	r0, #0
   16360:	bne	163ac <daemon@@Base+0x13c>
   16364:	vmov.i32	q8, #0	; 0x00000000
   16368:	sub	r2, fp, #64	; 0x40
   1636c:	sub	r3, fp, #68	; 0x44
   16370:	mov	r1, #0
   16374:	mov	r5, #0
   16378:	mov	r0, r2
   1637c:	vst1.64	{d16-d17}, [r0]!
   16380:	vst1.64	{d16-d17}, [r0]
   16384:	mov	r0, #2
   16388:	str	r0, [fp, #-60]	; 0xffffffc4
   1638c:	mov	r0, r4
   16390:	bl	11da0 <getaddrinfo@plt>
   16394:	cmp	r0, #0
   16398:	beq	163c4 <daemon@@Base+0x154>
   1639c:	mov	r8, r4
   163a0:	mov	r0, r8
   163a4:	sub	sp, fp, #28
   163a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163ac:	mov	r0, r4
   163b0:	bl	1ba4c <argp_parse@@Base+0x15bc>
   163b4:	mov	r8, #0
   163b8:	mov	r0, r8
   163bc:	sub	sp, fp, #28
   163c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163c8:	mov	r2, #8
   163cc:	movw	r3, #1025	; 0x401
   163d0:	ldr	r1, [r0, #16]
   163d4:	ldr	r0, [r0, #20]
   163d8:	str	r2, [sp, #8]
   163dc:	add	r2, sp, #19
   163e0:	str	r5, [sp]
   163e4:	str	r5, [sp, #4]
   163e8:	bl	11d1c <getnameinfo@plt>
   163ec:	cmp	r0, #0
   163f0:	beq	163fc <daemon@@Base+0x18c>
   163f4:	mov	r8, r4
   163f8:	b	16410 <daemon@@Base+0x1a0>
   163fc:	mov	r0, r4
   16400:	bl	1ba4c <argp_parse@@Base+0x15bc>
   16404:	add	r0, sp, #19
   16408:	bl	11aac <strdup@plt>
   1640c:	mov	r8, r0
   16410:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16414:	bl	11d94 <freeaddrinfo@plt>
   16418:	mov	r0, r8
   1641c:	sub	sp, fp, #28
   16420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16428:	add	fp, sp, #28
   1642c:	sub	sp, sp, #204	; 0xcc
   16430:	cmp	r1, #6
   16434:	ble	1644c <daemon@@Base+0x1dc>
   16438:	movw	sl, #63524	; 0xf824
   1643c:	movt	sl, #1
   16440:	mov	r0, sl
   16444:	sub	sp, fp, #28
   16448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1644c:	mov	sl, r0
   16450:	mov	r0, r2
   16454:	mov	r9, r3
   16458:	mov	r7, r2
   1645c:	mov	r6, r1
   16460:	bl	11c20 <strlen@plt>
   16464:	add	r0, r0, #6
   16468:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1646c:	cmp	r0, #0
   16470:	beq	165b4 <daemon@@Base+0x344>
   16474:	mov	r4, r0
   16478:	mov	r0, #47	; 0x2f
   1647c:	mov	r1, r7
   16480:	strh	r0, [r4, #4]
   16484:	movw	r0, #25647	; 0x642f
   16488:	movt	r0, #30309	; 0x7665
   1648c:	str	r0, [r4]
   16490:	mov	r0, r4
   16494:	bl	11b48 <strcat@plt>
   16498:	bl	11c20 <strlen@plt>
   1649c:	cmp	r0, #0
   164a0:	beq	1656c <daemon@@Base+0x2fc>
   164a4:	sub	r0, r0, #1
   164a8:	ldrb	r1, [r4, r0]
   164ac:	cmp	r1, #47	; 0x2f
   164b0:	moveq	r1, #0
   164b4:	strbeq	r1, [r4, r0]
   164b8:	mov	r0, r4
   164bc:	mov	r1, #46	; 0x2e
   164c0:	bl	11c38 <strchr@plt>
   164c4:	cmp	r0, #0
   164c8:	beq	1655c <daemon@@Base+0x2ec>
   164cc:	cmp	r0, r4
   164d0:	bls	16544 <daemon@@Base+0x2d4>
   164d4:	ldrb	r1, [r0, #-1]
   164d8:	cmp	r1, #47	; 0x2f
   164dc:	bne	16544 <daemon@@Base+0x2d4>
   164e0:	ldrb	r1, [r0, #1]
   164e4:	cmp	r1, #46	; 0x2e
   164e8:	bne	16544 <daemon@@Base+0x2d4>
   164ec:	ldrb	r3, [r0, #2]
   164f0:	cmp	r3, #47	; 0x2f
   164f4:	cmpne	r3, #0
   164f8:	bne	16544 <daemon@@Base+0x2d4>
   164fc:	sub	r1, r0, #1
   16500:	mov	r2, r1
   16504:	ldrb	r5, [r1, #-1]!
   16508:	cmp	r1, r4
   1650c:	bcc	16518 <daemon@@Base+0x2a8>
   16510:	cmp	r5, #47	; 0x2f
   16514:	bne	16500 <daemon@@Base+0x290>
   16518:	cmp	r1, r4
   1651c:	bcc	1655c <daemon@@Base+0x2ec>
   16520:	cmp	r3, #0
   16524:	strb	r3, [r1]
   16528:	beq	16548 <daemon@@Base+0x2d8>
   1652c:	add	r0, r0, #3
   16530:	ldrb	r3, [r0], #1
   16534:	strb	r3, [r2], #1
   16538:	cmp	r3, #0
   1653c:	bne	16530 <daemon@@Base+0x2c0>
   16540:	b	16548 <daemon@@Base+0x2d8>
   16544:	add	r1, r0, #1
   16548:	mov	r0, r1
   1654c:	mov	r1, #46	; 0x2e
   16550:	bl	11c38 <strchr@plt>
   16554:	cmp	r0, #0
   16558:	bne	164cc <daemon@@Base+0x25c>
   1655c:	ldrb	r0, [r4]
   16560:	cmp	r0, #0
   16564:	moveq	r0, #47	; 0x2f
   16568:	strheq	r0, [r4]
   1656c:	movw	r1, #63570	; 0xf852
   16570:	mov	r0, r4
   16574:	mov	r2, #5
   16578:	movt	r1, #1
   1657c:	bl	11ddc <strncmp@plt>
   16580:	cmp	r0, #0
   16584:	beq	165f8 <daemon@@Base+0x388>
   16588:	movw	sl, #5632	; 0x1600
   1658c:	movw	r2, #63576	; 0xf858
   16590:	mov	r1, #1024	; 0x400
   16594:	mov	r3, r7
   16598:	movt	sl, #3
   1659c:	movt	r2, #1
   165a0:	mov	r0, sl
   165a4:	bl	11c5c <snprintf@plt>
   165a8:	mov	r0, sl
   165ac:	sub	sp, fp, #28
   165b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165b4:	movw	r1, #63608	; 0xf878
   165b8:	mov	r0, #30
   165bc:	movw	sl, #5632	; 0x1600
   165c0:	movt	r1, #1
   165c4:	movt	sl, #3
   165c8:	add	r2, r1, #16
   165cc:	vld1.64	{d16-d17}, [r1], r0
   165d0:	vld1.64	{d18-d19}, [r2]
   165d4:	vld1.16	{d20}, [r1]
   165d8:	mov	r1, sl
   165dc:	add	r2, sl, #16
   165e0:	vst1.64	{d16-d17}, [r1], r0
   165e4:	vst1.64	{d18-d19}, [r2]
   165e8:	vst1.16	{d20}, [r1]
   165ec:	mov	r0, sl
   165f0:	sub	sp, fp, #28
   165f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165f8:	mov	r0, r4
   165fc:	movw	r1, #2049	; 0x801
   16600:	mov	r2, #0
   16604:	mov	r8, #0
   16608:	bl	11b90 <open64@plt>
   1660c:	cmp	r0, #0
   16610:	str	r0, [sp, #16]
   16614:	bmi	16834 <daemon@@Base+0x5c4>
   16618:	cmp	r6, #1
   1661c:	blt	16688 <daemon@@Base+0x418>
   16620:	mov	r8, #0
   16624:	cmp	r6, #4
   16628:	mov	r0, #0
   1662c:	bls	1666c <daemon@@Base+0x3fc>
   16630:	ands	r0, r6, #3
   16634:	vmov.i32	q8, #0	; 0x00000000
   16638:	add	r1, sl, #4
   1663c:	movweq	r0, #4
   16640:	sub	r0, r6, r0
   16644:	mov	r2, r0
   16648:	vld2.32	{d18-d21}, [r1]!
   1664c:	subs	r2, r2, #4
   16650:	vadd.i32	q8, q9, q8
   16654:	bne	16648 <daemon@@Base+0x3d8>
   16658:	vext.8	q9, q8, q8, #8
   1665c:	vadd.i32	q8, q8, q9
   16660:	vdup.32	q9, d16[1]
   16664:	vadd.i32	q8, q8, q9
   16668:	vmov.32	r8, d16[0]
   1666c:	sub	r1, r6, r0
   16670:	add	r0, sl, r0, lsl #3
   16674:	add	r0, r0, #4
   16678:	ldr	r2, [r0], #8
   1667c:	subs	r1, r1, #1
   16680:	add	r8, r2, r8
   16684:	bne	16678 <daemon@@Base+0x408>
   16688:	ldr	r0, [sp, #16]
   1668c:	mov	r1, sl
   16690:	mov	r2, r6
   16694:	str	r9, [sp, #8]
   16698:	str	sl, [sp, #12]
   1669c:	bl	11cbc <writev@plt>
   166a0:	mov	sl, #0
   166a4:	cmp	r8, r0
   166a8:	mov	r9, #0
   166ac:	ble	16884 <daemon@@Base+0x614>
   166b0:	sub	r7, fp, #80	; 0x50
   166b4:	mov	r5, r0
   166b8:	mov	r9, #0
   166bc:	orr	r0, r7, #4
   166c0:	str	r0, [sp, #4]
   166c4:	cmp	r5, #0
   166c8:	bpl	16784 <daemon@@Base+0x514>
   166cc:	bl	11c50 <__errno_location@plt>
   166d0:	mov	r7, r0
   166d4:	ldr	r0, [r0]
   166d8:	cmp	r0, #11
   166dc:	bne	16878 <daemon@@Base+0x608>
   166e0:	mov	r0, #0
   166e4:	cmp	r9, #0
   166e8:	str	r0, [fp, #-84]	; 0xffffffac
   166ec:	bne	16960 <daemon@@Base+0x6f0>
   166f0:	bl	11d10 <fork@plt>
   166f4:	ldr	r5, [sp, #8]
   166f8:	cmp	r0, #0
   166fc:	bne	168a8 <daemon@@Base+0x638>
   16700:	bl	11d10 <fork@plt>
   16704:	cmp	r0, #0
   16708:	bne	16948 <daemon@@Base+0x6d8>
   1670c:	mov	r0, #14
   16710:	mov	r1, #0
   16714:	bl	11a64 <signal@plt>
   16718:	mov	r0, #15
   1671c:	mov	r1, #0
   16720:	bl	11a64 <signal@plt>
   16724:	add	r7, sp, #20
   16728:	mov	r0, r7
   1672c:	bl	11d04 <sigemptyset@plt>
   16730:	mov	r0, #2
   16734:	mov	r1, r7
   16738:	mov	r2, #0
   1673c:	bl	119f8 <sigprocmask@plt>
   16740:	mov	r0, r5
   16744:	bl	11ac4 <alarm@plt>
   16748:	ldr	r5, [sp, #16]
   1674c:	mov	r1, #2048	; 0x800
   16750:	sub	r2, fp, #84	; 0x54
   16754:	mov	r0, r5
   16758:	bl	1b86c <argp_parse@@Base+0x13dc>
   1675c:	ldr	r1, [sp, #12]
   16760:	mov	r0, r5
   16764:	mov	r2, r6
   16768:	bl	11cbc <writev@plt>
   1676c:	mov	r5, r0
   16770:	mov	r9, #1
   16774:	cmp	r8, r0
   16778:	sub	r7, fp, #80	; 0x50
   1677c:	bgt	166c4 <daemon@@Base+0x454>
   16780:	b	16884 <daemon@@Base+0x614>
   16784:	ldr	r1, [sp, #12]
   16788:	cmp	r1, r7
   1678c:	beq	1679c <daemon@@Base+0x52c>
   16790:	lsl	r2, r6, #3
   16794:	mov	r0, r7
   16798:	bl	11a58 <memcpy@plt>
   1679c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   167a0:	cmp	r5, r0
   167a4:	bge	167f8 <daemon@@Base+0x588>
   167a8:	ldr	r2, [sp, #4]
   167ac:	str	r7, [sp, #12]
   167b0:	mov	r7, r5
   167b4:	ldr	r1, [sp, #12]
   167b8:	sub	r8, r8, r5
   167bc:	cmp	r7, #0
   167c0:	beq	167d8 <daemon@@Base+0x568>
   167c4:	ldr	r3, [r1]
   167c8:	sub	r0, r0, r7
   167cc:	add	r3, r3, r7
   167d0:	str	r3, [r1]
   167d4:	str	r0, [r2]
   167d8:	ldr	r0, [sp, #16]
   167dc:	mov	r2, r6
   167e0:	bl	11cbc <writev@plt>
   167e4:	mov	r5, r0
   167e8:	cmp	r8, r0
   167ec:	sub	r7, fp, #80	; 0x50
   167f0:	bgt	166c4 <daemon@@Base+0x454>
   167f4:	b	16884 <daemon@@Base+0x614>
   167f8:	mov	r1, r7
   167fc:	mov	r7, r5
   16800:	sub	r7, r7, r0
   16804:	ldr	r0, [r1, #12]
   16808:	sub	r6, r6, #1
   1680c:	add	r1, r1, #8
   16810:	cmp	r7, r0
   16814:	bge	16800 <daemon@@Base+0x590>
   16818:	add	r2, r1, #4
   1681c:	str	r1, [sp, #12]
   16820:	ldr	r1, [sp, #12]
   16824:	sub	r8, r8, r5
   16828:	cmp	r7, #0
   1682c:	bne	167c4 <daemon@@Base+0x554>
   16830:	b	167d8 <daemon@@Base+0x568>
   16834:	bl	11c50 <__errno_location@plt>
   16838:	ldr	r0, [r0]
   1683c:	mov	sl, #0
   16840:	cmp	r0, #13
   16844:	cmpne	r0, #16
   16848:	beq	1689c <daemon@@Base+0x62c>
   1684c:	bl	11bcc <strerror@plt>
   16850:	movw	sl, #5632	; 0x1600
   16854:	movw	r2, #61374	; 0xefbe
   16858:	str	r0, [sp]
   1685c:	mov	r1, #1024	; 0x400
   16860:	mov	r3, r4
   16864:	movt	sl, #3
   16868:	movt	r2, #1
   1686c:	mov	r0, sl
   16870:	bl	11c5c <snprintf@plt>
   16874:	b	1692c <daemon@@Base+0x6bc>
   16878:	cmp	r0, #5
   1687c:	cmpne	r0, #19
   16880:	bne	168d4 <daemon@@Base+0x664>
   16884:	mov	r0, r4
   16888:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1688c:	ldr	r0, [sp, #16]
   16890:	bl	11e00 <close@plt>
   16894:	cmp	r9, #0
   16898:	bne	16958 <daemon@@Base+0x6e8>
   1689c:	mov	r0, sl
   168a0:	sub	sp, fp, #28
   168a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168a8:	bmi	168fc <daemon@@Base+0x68c>
   168ac:	add	r1, sp, #20
   168b0:	mov	r2, #0
   168b4:	bl	11b54 <waitpid@plt>
   168b8:	cmp	r0, #0
   168bc:	bmi	168fc <daemon@@Base+0x68c>
   168c0:	ldr	r0, [sp, #20]
   168c4:	tst	r0, #127	; 0x7f
   168c8:	beq	168ec <daemon@@Base+0x67c>
   168cc:	mov	r0, #4
   168d0:	b	168f8 <daemon@@Base+0x688>
   168d4:	ldr	r0, [sp, #16]
   168d8:	bl	11e00 <close@plt>
   168dc:	cmp	r9, #0
   168e0:	bne	16968 <daemon@@Base+0x6f8>
   168e4:	ldr	r0, [r7]
   168e8:	b	1684c <daemon@@Base+0x5dc>
   168ec:	ubfx	r0, r0, #8, #8
   168f0:	cmp	r0, #0
   168f4:	beq	16940 <daemon@@Base+0x6d0>
   168f8:	str	r0, [r7]
   168fc:	ldr	r0, [r7]
   16900:	bl	11bcc <strerror@plt>
   16904:	movw	sl, #5632	; 0x1600
   16908:	movw	r2, #63594	; 0xf86a
   1690c:	mov	r3, r0
   16910:	mov	r1, #1024	; 0x400
   16914:	movt	sl, #3
   16918:	movt	r2, #1
   1691c:	mov	r0, sl
   16920:	bl	11c5c <snprintf@plt>
   16924:	ldr	r0, [sp, #16]
   16928:	bl	11e00 <close@plt>
   1692c:	mov	r0, r4
   16930:	bl	1ba4c <argp_parse@@Base+0x15bc>
   16934:	mov	r0, sl
   16938:	sub	sp, fp, #28
   1693c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16940:	mov	sl, #0
   16944:	b	16924 <daemon@@Base+0x6b4>
   16948:	cmn	r0, #1
   1694c:	bne	16958 <daemon@@Base+0x6e8>
   16950:	ldr	r0, [r7]
   16954:	bl	11a4c <_exit@plt>
   16958:	mov	r0, #0
   1695c:	bl	11a4c <_exit@plt>
   16960:	ldr	r0, [sp, #16]
   16964:	bl	11e00 <close@plt>
   16968:	mov	r0, #1
   1696c:	bl	11a4c <_exit@plt>

00016970 <argp_help@@Base>:
   16970:	push	{fp, lr}
   16974:	mov	fp, sp
   16978:	sub	sp, sp, #8
   1697c:	mov	ip, r2
   16980:	mov	r2, r1
   16984:	str	r3, [sp]
   16988:	mov	r1, #0
   1698c:	mov	r3, ip
   16990:	bl	1699c <argp_help@@Base+0x2c>
   16994:	mov	sp, fp
   16998:	pop	{fp, pc}
   1699c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169a0:	add	fp, sp, #28
   169a4:	sub	sp, sp, #108	; 0x6c
   169a8:	cmp	r2, #0
   169ac:	str	r1, [fp, #-96]	; 0xffffffa0
   169b0:	str	r0, [fp, #-104]	; 0xffffff98
   169b4:	beq	17f94 <argp_help@@Base+0x1624>
   169b8:	ldr	r0, [fp, #8]
   169bc:	mov	r6, r3
   169c0:	mov	r5, r2
   169c4:	str	r0, [fp, #-92]	; 0xffffffa4
   169c8:	mov	r0, r2
   169cc:	bl	11d58 <flockfile@plt>
   169d0:	movw	sl, #5496	; 0x1578
   169d4:	str	r6, [fp, #-128]	; 0xffffff80
   169d8:	movt	sl, #3
   169dc:	ldr	r0, [sl, #36]	; 0x24
   169e0:	cmp	r0, #0
   169e4:	bne	16fac <argp_help@@Base+0x63c>
   169e8:	movw	r0, #63767	; 0xf917
   169ec:	movt	r0, #1
   169f0:	bl	11b9c <getenv@plt>
   169f4:	mov	r8, r0
   169f8:	mov	r0, #32
   169fc:	mov	r1, sl
   16a00:	add	r3, sl, #16
   16a04:	sub	r2, fp, #88	; 0x58
   16a08:	vld1.64	{d16-d17}, [r1], r0
   16a0c:	vld1.64	{d18-d19}, [r3]
   16a10:	add	r7, r2, #16
   16a14:	cmp	r8, #0
   16a18:	vldr	d20, [r1]
   16a1c:	mov	r1, r2
   16a20:	vst1.64	{d16-d17}, [r1], r0
   16a24:	vst1.64	{d18-d19}, [r7]
   16a28:	vstr	d20, [r1]
   16a2c:	beq	16fac <argp_help@@Base+0x63c>
   16a30:	str	r7, [fp, #-112]	; 0xffffff90
   16a34:	str	r3, [fp, #-108]	; 0xffffff94
   16a38:	str	r5, [fp, #-132]	; 0xffffff7c
   16a3c:	ldrb	r5, [r8]
   16a40:	cmp	r5, #0
   16a44:	beq	16ea8 <argp_help@@Base+0x538>
   16a48:	movw	r7, #64432	; 0xfbb0
   16a4c:	movt	r7, #1
   16a50:	bl	11bfc <__ctype_b_loc@plt>
   16a54:	str	r0, [fp, #-100]	; 0xffffff9c
   16a58:	b	16a90 <argp_help@@Base+0x120>
   16a5c:	ldrb	r0, [r5, #15]
   16a60:	sub	r1, fp, #88	; 0x58
   16a64:	str	r6, [r1, r0]
   16a68:	ldr	r6, [fp, #-128]	; 0xffffff80
   16a6c:	movw	sl, #5496	; 0x1578
   16a70:	movt	sl, #3
   16a74:	mov	r8, r4
   16a78:	ldrb	r0, [r8], #1
   16a7c:	cmp	r0, #44	; 0x2c
   16a80:	movne	r8, r4
   16a84:	ldrb	r5, [r8]
   16a88:	cmp	r5, #0
   16a8c:	beq	16ea8 <argp_help@@Base+0x538>
   16a90:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16a94:	uxtb	r1, r5
   16a98:	ldr	r0, [r0]
   16a9c:	add	r1, r0, r1, lsl #1
   16aa0:	ldrh	r1, [r1]
   16aa4:	tst	r1, #8192	; 0x2000
   16aa8:	beq	16ac0 <argp_help@@Base+0x150>
   16aac:	ldrb	r5, [r8, #1]!
   16ab0:	add	r1, r0, r5, lsl #1
   16ab4:	ldrh	r1, [r1]
   16ab8:	tst	r1, #8192	; 0x2000
   16abc:	bne	16aac <argp_help@@Base+0x13c>
   16ac0:	tst	r1, #1024	; 0x400
   16ac4:	beq	16e64 <argp_help@@Base+0x4f4>
   16ac8:	mov	r3, r5
   16acc:	mov	r2, r8
   16ad0:	b	16ad8 <argp_help@@Base+0x168>
   16ad4:	ldrb	r3, [r2, #1]!
   16ad8:	uxtb	r6, r3
   16adc:	add	r1, r0, r6, lsl #1
   16ae0:	ldrh	r1, [r1]
   16ae4:	tst	r1, #8
   16ae8:	bne	16ad4 <argp_help@@Base+0x164>
   16aec:	cmp	r6, #95	; 0x5f
   16af0:	cmpne	r6, #45	; 0x2d
   16af4:	beq	16ad4 <argp_help@@Base+0x164>
   16af8:	tst	r1, #8192	; 0x2000
   16afc:	mov	r4, r2
   16b00:	beq	16b1c <argp_help@@Base+0x1ac>
   16b04:	mov	r4, r2
   16b08:	ldrb	r3, [r4, #1]!
   16b0c:	add	r1, r0, r3, lsl #1
   16b10:	ldrh	r1, [r1]
   16b14:	tst	r1, #8192	; 0x2000
   16b18:	bne	16b08 <argp_help@@Base+0x198>
   16b1c:	sub	r9, r2, r8
   16b20:	uxtb	r2, r3
   16b24:	cmp	r2, #0
   16b28:	cmpne	r2, #44	; 0x2c
   16b2c:	bne	16b9c <argp_help@@Base+0x22c>
   16b30:	uxtb	r0, r5
   16b34:	mov	sl, #1
   16b38:	cmp	r0, #110	; 0x6e
   16b3c:	bne	16b84 <argp_help@@Base+0x214>
   16b40:	ldrb	r0, [r8, #1]
   16b44:	mov	sl, #1
   16b48:	cmp	r0, #111	; 0x6f
   16b4c:	bne	16b84 <argp_help@@Base+0x214>
   16b50:	ldrb	r0, [r8, #2]
   16b54:	mov	sl, #1
   16b58:	cmp	r0, #45	; 0x2d
   16b5c:	bne	16b84 <argp_help@@Base+0x214>
   16b60:	sub	r9, r9, #3
   16b64:	add	r8, r8, #3
   16b68:	mov	r6, #0
   16b6c:	mov	sl, #1
   16b70:	mov	r0, r7
   16b74:	bl	11c20 <strlen@plt>
   16b78:	cmp	r0, r9
   16b7c:	beq	16c40 <argp_help@@Base+0x2d0>
   16b80:	b	16c5c <argp_help@@Base+0x2ec>
   16b84:	mov	r6, #1
   16b88:	mov	r0, r7
   16b8c:	bl	11c20 <strlen@plt>
   16b90:	cmp	r0, r9
   16b94:	beq	16c40 <argp_help@@Base+0x2d0>
   16b98:	b	16c5c <argp_help@@Base+0x2ec>
   16b9c:	cmp	r2, #61	; 0x3d
   16ba0:	bne	16bb8 <argp_help@@Base+0x248>
   16ba4:	ldrb	r1, [r4, #1]!
   16ba8:	add	r1, r0, r1, lsl #1
   16bac:	ldrh	r1, [r1]
   16bb0:	tst	r1, #8192	; 0x2000
   16bb4:	bne	16ba4 <argp_help@@Base+0x234>
   16bb8:	mov	sl, #0
   16bbc:	tst	r1, #2048	; 0x800
   16bc0:	bne	16bdc <argp_help@@Base+0x26c>
   16bc4:	mov	r6, #0
   16bc8:	mov	r0, r7
   16bcc:	bl	11c20 <strlen@plt>
   16bd0:	cmp	r0, r9
   16bd4:	beq	16c40 <argp_help@@Base+0x2d0>
   16bd8:	b	16c5c <argp_help@@Base+0x2ec>
   16bdc:	mov	r0, r4
   16be0:	mov	r1, #0
   16be4:	mov	r2, #10
   16be8:	bl	119a4 <strtol@plt>
   16bec:	mov	r6, r0
   16bf0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16bf4:	sub	r4, r4, #1
   16bf8:	ldr	r0, [r0]
   16bfc:	ldrb	r1, [r4, #1]!
   16c00:	add	r1, r0, r1, lsl #1
   16c04:	ldrh	r1, [r1]
   16c08:	tst	r1, #2048	; 0x800
   16c0c:	bne	16bfc <argp_help@@Base+0x28c>
   16c10:	mov	sl, #0
   16c14:	tst	r1, #8192	; 0x2000
   16c18:	beq	16c30 <argp_help@@Base+0x2c0>
   16c1c:	ldrb	r1, [r4, #1]!
   16c20:	add	r1, r0, r1, lsl #1
   16c24:	ldrb	r1, [r1, #1]
   16c28:	tst	r1, #32
   16c2c:	bne	16c1c <argp_help@@Base+0x2ac>
   16c30:	mov	r0, r7
   16c34:	bl	11c20 <strlen@plt>
   16c38:	cmp	r0, r9
   16c3c:	bne	16c5c <argp_help@@Base+0x2ec>
   16c40:	mov	r0, r8
   16c44:	mov	r1, r7
   16c48:	mov	r2, r9
   16c4c:	bl	11ddc <strncmp@plt>
   16c50:	cmp	r0, #0
   16c54:	mov	r5, r7
   16c58:	beq	16de0 <argp_help@@Base+0x470>
   16c5c:	add	r5, r7, #16
   16c60:	mov	r0, r5
   16c64:	bl	11c20 <strlen@plt>
   16c68:	cmp	r0, r9
   16c6c:	bne	16c88 <argp_help@@Base+0x318>
   16c70:	mov	r0, r8
   16c74:	mov	r1, r5
   16c78:	mov	r2, r9
   16c7c:	bl	11ddc <strncmp@plt>
   16c80:	cmp	r0, #0
   16c84:	beq	16de0 <argp_help@@Base+0x470>
   16c88:	add	r5, r7, #32
   16c8c:	mov	r0, r5
   16c90:	bl	11c20 <strlen@plt>
   16c94:	cmp	r0, r9
   16c98:	bne	16cb4 <argp_help@@Base+0x344>
   16c9c:	mov	r0, r8
   16ca0:	mov	r1, r5
   16ca4:	mov	r2, r9
   16ca8:	bl	11ddc <strncmp@plt>
   16cac:	cmp	r0, #0
   16cb0:	beq	16de0 <argp_help@@Base+0x470>
   16cb4:	add	r5, r7, #48	; 0x30
   16cb8:	mov	r0, r5
   16cbc:	bl	11c20 <strlen@plt>
   16cc0:	cmp	r0, r9
   16cc4:	bne	16ce0 <argp_help@@Base+0x370>
   16cc8:	mov	r0, r8
   16ccc:	mov	r1, r5
   16cd0:	mov	r2, r9
   16cd4:	bl	11ddc <strncmp@plt>
   16cd8:	cmp	r0, #0
   16cdc:	beq	16de0 <argp_help@@Base+0x470>
   16ce0:	add	r5, r7, #64	; 0x40
   16ce4:	mov	r0, r5
   16ce8:	bl	11c20 <strlen@plt>
   16cec:	cmp	r0, r9
   16cf0:	bne	16d0c <argp_help@@Base+0x39c>
   16cf4:	mov	r0, r8
   16cf8:	mov	r1, r5
   16cfc:	mov	r2, r9
   16d00:	bl	11ddc <strncmp@plt>
   16d04:	cmp	r0, #0
   16d08:	beq	16de0 <argp_help@@Base+0x470>
   16d0c:	add	r5, r7, #80	; 0x50
   16d10:	mov	r0, r5
   16d14:	bl	11c20 <strlen@plt>
   16d18:	cmp	r0, r9
   16d1c:	bne	16d38 <argp_help@@Base+0x3c8>
   16d20:	mov	r0, r8
   16d24:	mov	r1, r5
   16d28:	mov	r2, r9
   16d2c:	bl	11ddc <strncmp@plt>
   16d30:	cmp	r0, #0
   16d34:	beq	16de0 <argp_help@@Base+0x470>
   16d38:	add	r5, r7, #96	; 0x60
   16d3c:	mov	r0, r5
   16d40:	bl	11c20 <strlen@plt>
   16d44:	cmp	r0, r9
   16d48:	bne	16d64 <argp_help@@Base+0x3f4>
   16d4c:	mov	r0, r8
   16d50:	mov	r1, r5
   16d54:	mov	r2, r9
   16d58:	bl	11ddc <strncmp@plt>
   16d5c:	cmp	r0, #0
   16d60:	beq	16de0 <argp_help@@Base+0x470>
   16d64:	add	r5, r7, #112	; 0x70
   16d68:	mov	r0, r5
   16d6c:	bl	11c20 <strlen@plt>
   16d70:	cmp	r0, r9
   16d74:	bne	16d90 <argp_help@@Base+0x420>
   16d78:	mov	r0, r8
   16d7c:	mov	r1, r5
   16d80:	mov	r2, r9
   16d84:	bl	11ddc <strncmp@plt>
   16d88:	cmp	r0, #0
   16d8c:	beq	16de0 <argp_help@@Base+0x470>
   16d90:	add	r5, r7, #128	; 0x80
   16d94:	mov	r0, r5
   16d98:	bl	11c20 <strlen@plt>
   16d9c:	cmp	r0, r9
   16da0:	bne	16dbc <argp_help@@Base+0x44c>
   16da4:	mov	r0, r8
   16da8:	mov	r1, r5
   16dac:	mov	r2, r9
   16db0:	bl	11ddc <strncmp@plt>
   16db4:	cmp	r0, #0
   16db8:	beq	16de0 <argp_help@@Base+0x470>
   16dbc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16dc0:	movw	sl, #5496	; 0x1578
   16dc4:	movt	sl, #3
   16dc8:	cmp	r0, #0
   16dcc:	sub	sp, sp, #8
   16dd0:	beq	16e38 <argp_help@@Base+0x4c8>
   16dd4:	str	r9, [sp]
   16dd8:	str	r8, [sp, #4]
   16ddc:	b	16e44 <argp_help@@Base+0x4d4>
   16de0:	cmp	sl, #0
   16de4:	beq	16a5c <argp_help@@Base+0xec>
   16de8:	ldrb	r0, [r5, #14]
   16dec:	cmp	r0, #0
   16df0:	bne	16a5c <argp_help@@Base+0xec>
   16df4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16df8:	sub	sp, sp, #8
   16dfc:	cmp	r0, #0
   16e00:	beq	16e10 <argp_help@@Base+0x4a0>
   16e04:	str	r9, [sp]
   16e08:	str	r8, [sp, #4]
   16e0c:	b	16e1c <argp_help@@Base+0x4ac>
   16e10:	str	r9, [sp]
   16e14:	str	r8, [sp, #4]
   16e18:	mov	r0, #0
   16e1c:	movw	r3, #63781	; 0xf925
   16e20:	mov	r1, #0
   16e24:	mov	r2, #0
   16e28:	movt	r3, #1
   16e2c:	bl	1838c <argp_failure@@Base>
   16e30:	add	sp, sp, #8
   16e34:	b	16a68 <argp_help@@Base+0xf8>
   16e38:	str	r9, [sp]
   16e3c:	str	r8, [sp, #4]
   16e40:	mov	r0, #0
   16e44:	movw	r3, #63828	; 0xf954
   16e48:	mov	r1, #0
   16e4c:	mov	r2, #0
   16e50:	movt	r3, #1
   16e54:	bl	1838c <argp_failure@@Base>
   16e58:	add	sp, sp, #8
   16e5c:	ldr	r6, [fp, #-128]	; 0xffffff80
   16e60:	b	16a74 <argp_help@@Base+0x104>
   16e64:	tst	r5, #255	; 0xff
   16e68:	beq	16ea8 <argp_help@@Base+0x538>
   16e6c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16e70:	sub	sp, sp, #8
   16e74:	cmp	r0, #0
   16e78:	beq	16e88 <argp_help@@Base+0x518>
   16e7c:	movw	r3, #63866	; 0xf97a
   16e80:	str	r8, [sp]
   16e84:	b	16e94 <argp_help@@Base+0x524>
   16e88:	movw	r3, #63866	; 0xf97a
   16e8c:	str	r8, [sp]
   16e90:	mov	r0, #0
   16e94:	movt	r3, #1
   16e98:	mov	r1, #0
   16e9c:	mov	r2, #0
   16ea0:	bl	1838c <argp_failure@@Base>
   16ea4:	add	sp, sp, #8
   16ea8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16eac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16eb0:	movw	r0, #64432	; 0xfbb0
   16eb4:	movt	r0, #1
   16eb8:	cmp	r2, r1
   16ebc:	bge	16f40 <argp_help@@Base+0x5d0>
   16ec0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16ec4:	cmp	r2, r1
   16ec8:	bge	16f48 <argp_help@@Base+0x5d8>
   16ecc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16ed0:	cmp	r2, r1
   16ed4:	bge	16f50 <argp_help@@Base+0x5e0>
   16ed8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16edc:	cmp	r2, r1
   16ee0:	bge	16f58 <argp_help@@Base+0x5e8>
   16ee4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16ee8:	cmp	r2, r1
   16eec:	bge	16f60 <argp_help@@Base+0x5f0>
   16ef0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16ef4:	ldr	r5, [fp, #-132]	; 0xffffff7c
   16ef8:	cmp	r2, r1
   16efc:	bge	18160 <argp_help@@Base+0x17f0>
   16f00:	ldr	r0, [fp, #-112]	; 0xffffff90
   16f04:	sub	r1, fp, #88	; 0x58
   16f08:	mov	r2, r1
   16f0c:	mov	r1, sl
   16f10:	vld1.64	{d16-d17}, [r0]
   16f14:	mov	r0, #32
   16f18:	vld1.64	{d18-d19}, [r2], r0
   16f1c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16f20:	vst1.64	{d16-d17}, [r0]
   16f24:	mov	r0, #36	; 0x24
   16f28:	vst1.64	{d18-d19}, [r1], r0
   16f2c:	mov	r0, #1
   16f30:	str	r0, [r1]
   16f34:	ldr	r0, [r2]
   16f38:	str	r0, [sl, #32]
   16f3c:	b	16fac <argp_help@@Base+0x63c>
   16f40:	add	r2, r0, #32
   16f44:	b	16f64 <argp_help@@Base+0x5f4>
   16f48:	add	r2, r0, #48	; 0x30
   16f4c:	b	16f64 <argp_help@@Base+0x5f4>
   16f50:	add	r2, r0, #64	; 0x40
   16f54:	b	16f64 <argp_help@@Base+0x5f4>
   16f58:	add	r2, r0, #80	; 0x50
   16f5c:	b	16f64 <argp_help@@Base+0x5f4>
   16f60:	add	r2, r0, #96	; 0x60
   16f64:	ldr	r5, [fp, #-132]	; 0xffffff7c
   16f68:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16f6c:	sub	sp, sp, #8
   16f70:	movw	r1, #63947	; 0xf9cb
   16f74:	cmp	r0, #0
   16f78:	movt	r1, #1
   16f7c:	beq	16f8c <argp_help@@Base+0x61c>
   16f80:	movw	r3, #63895	; 0xf997
   16f84:	stm	sp, {r1, r2}
   16f88:	b	16f98 <argp_help@@Base+0x628>
   16f8c:	movw	r3, #63895	; 0xf997
   16f90:	stm	sp, {r1, r2}
   16f94:	mov	r0, #0
   16f98:	movt	r3, #1
   16f9c:	mov	r1, #0
   16fa0:	mov	r2, #0
   16fa4:	bl	1838c <argp_failure@@Base>
   16fa8:	add	sp, sp, #8
   16fac:	ldr	r2, [sl, #32]
   16fb0:	mov	r0, #0
   16fb4:	mov	r1, #0
   16fb8:	mov	r3, #0
   16fbc:	str	r0, [fp, #-108]	; 0xffffff94
   16fc0:	mov	r0, r5
   16fc4:	bl	1cafc <argp_parse@@Base+0x266c>
   16fc8:	cmp	r0, #0
   16fcc:	beq	17e60 <argp_help@@Base+0x14f0>
   16fd0:	mov	r9, r0
   16fd4:	tst	r6, #11
   16fd8:	str	r5, [fp, #-132]	; 0xffffff7c
   16fdc:	beq	171a8 <argp_help@@Base+0x838>
   16fe0:	ldr	r0, [fp, #-104]	; 0xffffff98
   16fe4:	mov	r1, #0
   16fe8:	bl	185b0 <argp_failure@@Base+0x224>
   16fec:	ldr	r4, [r0, #4]
   16ff0:	str	r0, [fp, #-108]	; 0xffffff94
   16ff4:	cmp	r4, #0
   16ff8:	beq	171a8 <argp_help@@Base+0x838>
   16ffc:	ldr	r6, [r0]
   17000:	movw	sl, #63667	; 0xf8b3
   17004:	mov	r5, r4
   17008:	movt	sl, #1
   1700c:	str	r6, [fp, #-100]	; 0xffffff9c
   17010:	ldr	r7, [r6, #4]
   17014:	cmp	r7, #0
   17018:	bne	17034 <argp_help@@Base+0x6c4>
   1701c:	subs	r5, r5, #1
   17020:	add	r6, r6, #28
   17024:	beq	17088 <argp_help@@Base+0x718>
   17028:	ldr	r7, [r6, #4]
   1702c:	cmp	r7, #0
   17030:	beq	1701c <argp_help@@Base+0x6ac>
   17034:	ldr	r0, [r6]
   17038:	add	r8, r0, #12
   1703c:	ldr	r0, [r8, #-12]
   17040:	cmp	r0, #0
   17044:	bne	17060 <argp_help@@Base+0x6f0>
   17048:	subs	r7, r7, #1
   1704c:	add	r8, r8, #24
   17050:	beq	1701c <argp_help@@Base+0x6ac>
   17054:	ldr	r0, [r8, #-12]
   17058:	cmp	r0, #0
   1705c:	beq	17048 <argp_help@@Base+0x6d8>
   17060:	ldrb	r1, [r8]
   17064:	tst	r1, #2
   17068:	bne	17048 <argp_help@@Base+0x6d8>
   1706c:	mov	r1, sl
   17070:	bl	11998 <strcmp@plt>
   17074:	cmp	r0, #0
   17078:	bne	17048 <argp_help@@Base+0x6d8>
   1707c:	cmp	r6, #0
   17080:	mvnne	r0, #0
   17084:	strne	r0, [r6, #12]
   17088:	ldr	r6, [fp, #-100]	; 0xffffff9c
   1708c:	movw	sl, #65016	; 0xfdf8
   17090:	mov	r8, r4
   17094:	movt	sl, #1
   17098:	ldr	r7, [r6, #4]
   1709c:	cmp	r7, #0
   170a0:	bne	170bc <argp_help@@Base+0x74c>
   170a4:	subs	r8, r8, #1
   170a8:	add	r6, r6, #28
   170ac:	beq	17110 <argp_help@@Base+0x7a0>
   170b0:	ldr	r7, [r6, #4]
   170b4:	cmp	r7, #0
   170b8:	beq	170a4 <argp_help@@Base+0x734>
   170bc:	ldr	r0, [r6]
   170c0:	add	r5, r0, #12
   170c4:	ldr	r0, [r5, #-12]
   170c8:	cmp	r0, #0
   170cc:	bne	170e8 <argp_help@@Base+0x778>
   170d0:	subs	r7, r7, #1
   170d4:	add	r5, r5, #24
   170d8:	beq	170a4 <argp_help@@Base+0x734>
   170dc:	ldr	r0, [r5, #-12]
   170e0:	cmp	r0, #0
   170e4:	beq	170d0 <argp_help@@Base+0x760>
   170e8:	ldrb	r1, [r5]
   170ec:	tst	r1, #2
   170f0:	bne	170d0 <argp_help@@Base+0x760>
   170f4:	mov	r1, sl
   170f8:	bl	11998 <strcmp@plt>
   170fc:	cmp	r0, #0
   17100:	bne	170d0 <argp_help@@Base+0x760>
   17104:	cmp	r6, #0
   17108:	mvnne	r0, #0
   1710c:	strne	r0, [r6, #12]
   17110:	cmp	r4, #0
   17114:	beq	17fc4 <argp_help@@Base+0x1654>
   17118:	sub	r2, r4, #1
   1711c:	ldr	r6, [fp, #-128]	; 0xffffff80
   17120:	movw	sl, #5496	; 0x1578
   17124:	and	r0, r4, #3
   17128:	mov	r1, #0
   1712c:	cmp	r2, #3
   17130:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17134:	movt	sl, #3
   17138:	bcc	17174 <argp_help@@Base+0x804>
   1713c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17140:	sub	r3, r4, r0
   17144:	mov	r1, #0
   17148:	add	r7, r1, #3
   1714c:	str	r1, [r2, #24]
   17150:	str	r7, [r2, #108]	; 0x6c
   17154:	add	r7, r1, #2
   17158:	str	r7, [r2, #80]	; 0x50
   1715c:	add	r7, r1, #1
   17160:	add	r1, r1, #4
   17164:	str	r7, [r2, #52]	; 0x34
   17168:	add	r2, r2, #112	; 0x70
   1716c:	cmp	r3, r1
   17170:	bne	17148 <argp_help@@Base+0x7d8>
   17174:	cmp	r0, #0
   17178:	beq	17190 <argp_help@@Base+0x820>
   1717c:	add	r2, r2, #24
   17180:	str	r1, [r2], #28
   17184:	subs	r0, r0, #1
   17188:	add	r1, r1, #1
   1718c:	bne	17180 <argp_help@@Base+0x810>
   17190:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17194:	movw	r3, #39380	; 0x99d4
   17198:	mov	r1, r4
   1719c:	mov	r2, #28
   171a0:	movt	r3, #1
   171a4:	bl	11d7c <qsort@plt>
   171a8:	tst	r6, #3
   171ac:	beq	17fd8 <argp_help@@Base+0x1668>
   171b0:	ldr	r1, [fp, #-104]	; 0xffffff98
   171b4:	ldr	r0, [r1, #8]
   171b8:	ldr	r1, [r1, #16]
   171bc:	bl	18d4c <argp_failure@@Base+0x9c0>
   171c0:	mov	r2, r0
   171c4:	add	r0, r0, #7
   171c8:	bic	r0, r0, #7
   171cc:	sub	r5, sp, r0
   171d0:	mov	sp, r5
   171d4:	mov	r0, r5
   171d8:	mov	r1, #0
   171dc:	bl	11c8c <memset@plt>
   171e0:	movw	r7, #63678	; 0xf8be
   171e4:	movt	r7, #1
   171e8:	b	1720c <argp_help@@Base+0x89c>
   171ec:	add	r1, r0, #1
   171f0:	str	r1, [r9, #28]
   171f4:	mov	r1, #10
   171f8:	strb	r1, [r0]
   171fc:	cmp	r7, #0
   17200:	movw	r7, #63685	; 0xf8c5
   17204:	movt	r7, #1
   17208:	beq	173d0 <argp_help@@Base+0xa60>
   1720c:	movw	r0, #5496	; 0x1578
   17210:	ldr	r1, [r9, #24]
   17214:	ldr	r2, [r9, #28]
   17218:	mov	sl, r6
   1721c:	movt	r0, #3
   17220:	ldr	r6, [r0, #28]
   17224:	ldr	r0, [r9, #16]
   17228:	sub	r1, r2, r1
   1722c:	cmp	r1, r0
   17230:	bls	1723c <argp_help@@Base+0x8cc>
   17234:	mov	r0, r9
   17238:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1723c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17240:	movw	r1, #63672	; 0xf8b8
   17244:	ldr	r4, [r9, #12]
   17248:	mov	r0, r9
   1724c:	mov	r2, r7
   17250:	str	r6, [r9, #12]
   17254:	str	r5, [fp, #-88]	; 0xffffffa8
   17258:	movt	r1, #1
   1725c:	bl	1d230 <argp_parse@@Base+0x2da0>
   17260:	movw	r0, #5496	; 0x1578
   17264:	ldr	r1, [r9, #24]
   17268:	ldr	r2, [r9, #28]
   1726c:	movt	r0, #3
   17270:	ldr	r6, [r0, #28]
   17274:	ldr	r0, [r9, #16]
   17278:	sub	r1, r2, r1
   1727c:	cmp	r1, r0
   17280:	bls	1728c <argp_help@@Base+0x91c>
   17284:	mov	r0, r9
   17288:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1728c:	ldr	r8, [r9, #4]
   17290:	str	r6, [r9, #4]
   17294:	mov	r6, sl
   17298:	tst	sl, #2
   1729c:	bne	172b4 <argp_help@@Base+0x944>
   172a0:	ldr	r0, [fp, #-108]	; 0xffffff94
   172a4:	mov	r1, r9
   172a8:	bl	18dc0 <argp_failure@@Base+0xa34>
   172ac:	orr	r6, r6, #2
   172b0:	b	17318 <argp_help@@Base+0x9a8>
   172b4:	ldr	r0, [fp, #-108]	; 0xffffff94
   172b8:	ldr	r0, [r0, #4]
   172bc:	cmp	r0, #0
   172c0:	beq	17318 <argp_help@@Base+0x9a8>
   172c4:	ldr	r0, [r9, #28]
   172c8:	ldr	r1, [r9, #32]
   172cc:	add	r2, r0, #12
   172d0:	cmp	r2, r1
   172d4:	bls	172f0 <argp_help@@Base+0x980>
   172d8:	mov	r0, r9
   172dc:	mov	r1, #12
   172e0:	bl	1d144 <argp_parse@@Base+0x2cb4>
   172e4:	cmp	r0, #0
   172e8:	beq	17318 <argp_help@@Base+0x9a8>
   172ec:	ldr	r0, [r9, #28]
   172f0:	movw	r1, #64416	; 0xfba0
   172f4:	movt	r1, #1
   172f8:	vldr	d16, [r1]
   172fc:	movw	r1, #11822	; 0x2e2e
   17300:	movt	r1, #23854	; 0x5d2e
   17304:	str	r1, [r0, #8]
   17308:	vst1.8	{d16}, [r0]
   1730c:	ldr	r0, [r9, #28]
   17310:	add	r0, r0, #12
   17314:	str	r0, [r9, #28]
   17318:	sub	sp, sp, #8
   1731c:	str	r9, [sp]
   17320:	sub	r2, fp, #88	; 0x58
   17324:	mov	r3, #1
   17328:	ldr	r0, [fp, #-104]	; 0xffffff98
   1732c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17330:	bl	191dc <argp_failure@@Base+0xe50>
   17334:	add	sp, sp, #8
   17338:	mov	r7, r0
   1733c:	ldr	r2, [r9, #24]
   17340:	ldr	r0, [r9, #28]
   17344:	ldr	r1, [r9, #16]
   17348:	sub	r2, r0, r2
   1734c:	cmp	r2, r1
   17350:	bls	1738c <argp_help@@Base+0xa1c>
   17354:	mov	r0, r9
   17358:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1735c:	ldr	r2, [r9, #24]
   17360:	ldr	r0, [r9, #28]
   17364:	ldr	r1, [r9, #16]
   17368:	sub	r2, r0, r2
   1736c:	cmp	r2, r1
   17370:	str	r4, [r9, #12]
   17374:	bhi	17398 <argp_help@@Base+0xa28>
   17378:	str	r8, [r9, #4]
   1737c:	ldr	r1, [r9, #32]
   17380:	cmp	r0, r1
   17384:	bcc	171ec <argp_help@@Base+0x87c>
   17388:	b	173b4 <argp_help@@Base+0xa44>
   1738c:	cmp	r2, r1
   17390:	str	r4, [r9, #12]
   17394:	bls	17378 <argp_help@@Base+0xa08>
   17398:	mov	r0, r9
   1739c:	bl	1cbc8 <argp_parse@@Base+0x2738>
   173a0:	ldr	r0, [r9, #28]
   173a4:	str	r8, [r9, #4]
   173a8:	ldr	r1, [r9, #32]
   173ac:	cmp	r0, r1
   173b0:	bcc	171ec <argp_help@@Base+0x87c>
   173b4:	mov	r0, r9
   173b8:	mov	r1, #1
   173bc:	bl	1d144 <argp_parse@@Base+0x2cb4>
   173c0:	cmp	r0, #0
   173c4:	beq	171fc <argp_help@@Base+0x88c>
   173c8:	ldr	r0, [r9, #28]
   173cc:	b	171ec <argp_help@@Base+0x87c>
   173d0:	movw	sl, #5496	; 0x1578
   173d4:	mov	r5, #1
   173d8:	movt	sl, #3
   173dc:	tst	r6, #16
   173e0:	beq	1740c <argp_help@@Base+0xa9c>
   173e4:	sub	sp, sp, #8
   173e8:	mov	r0, #1
   173ec:	mov	r2, #0
   173f0:	mov	r3, #0
   173f4:	stm	sp, {r0, r9}
   173f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   173fc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17400:	bl	194f0 <argp_failure@@Base+0x1164>
   17404:	add	sp, sp, #8
   17408:	orr	r5, r0, r5
   1740c:	tst	r6, #4
   17410:	bne	17e70 <argp_help@@Base+0x1500>
   17414:	tst	r6, #8
   17418:	beq	17e94 <argp_help@@Base+0x1524>
   1741c:	ldr	r0, [fp, #-108]	; 0xffffff94
   17420:	ldr	r1, [r0, #4]
   17424:	cmp	r1, #0
   17428:	beq	17e94 <argp_help@@Base+0x1524>
   1742c:	str	r6, [fp, #-128]	; 0xffffff80
   17430:	cmp	r5, #0
   17434:	ldr	r4, [fp, #-108]	; 0xffffff94
   17438:	beq	17478 <argp_help@@Base+0xb08>
   1743c:	ldr	r0, [r9, #28]
   17440:	ldr	r1, [r9, #32]
   17444:	cmp	r0, r1
   17448:	bcc	17464 <argp_help@@Base+0xaf4>
   1744c:	mov	r0, r9
   17450:	mov	r1, #1
   17454:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17458:	cmp	r0, #0
   1745c:	beq	17474 <argp_help@@Base+0xb04>
   17460:	ldr	r0, [r9, #28]
   17464:	add	r1, r0, #1
   17468:	str	r1, [r9, #28]
   1746c:	mov	r1, #10
   17470:	strb	r1, [r0]
   17474:	ldr	r1, [r4, #4]
   17478:	ldr	r5, [r4]
   1747c:	mov	r0, #0
   17480:	cmp	r1, #0
   17484:	str	r0, [fp, #-44]	; 0xffffffd4
   17488:	str	r0, [fp, #-48]	; 0xffffffd0
   1748c:	str	r0, [fp, #-40]	; 0xffffffd8
   17490:	beq	17fb0 <argp_help@@Base+0x1640>
   17494:	add	r0, r9, #28
   17498:	str	r0, [fp, #-100]	; 0xffffff9c
   1749c:	b	174b8 <argp_help@@Base+0xb48>
   174a0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   174a4:	ldr	r0, [fp, #-120]	; 0xffffff88
   174a8:	add	r5, r5, #28
   174ac:	subs	r1, r1, #1
   174b0:	str	r0, [r9, #12]
   174b4:	beq	17f9c <argp_help@@Base+0x162c>
   174b8:	ldr	r0, [r5, #8]
   174bc:	str	r1, [fp, #-116]	; 0xffffff8c
   174c0:	ldr	r1, [r9, #24]
   174c4:	ldr	r2, [r9, #28]
   174c8:	ldr	r4, [r5]
   174cc:	str	r0, [fp, #-92]	; 0xffffffa4
   174d0:	ldr	r0, [r9, #16]
   174d4:	sub	r1, r2, r1
   174d8:	cmp	r1, r0
   174dc:	bls	174e8 <argp_help@@Base+0xb78>
   174e0:	mov	r0, r9
   174e4:	bl	1cbc8 <argp_parse@@Base+0x2738>
   174e8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   174ec:	mov	r7, #0
   174f0:	ldr	r1, [r9, #12]
   174f4:	ldr	r2, [r9, #4]
   174f8:	mov	r8, r4
   174fc:	str	r7, [r9, #4]
   17500:	str	r0, [fp, #-72]	; 0xffffffb8
   17504:	mov	r0, #1
   17508:	str	r1, [fp, #-120]	; 0xffffff88
   1750c:	str	r2, [fp, #-124]	; 0xffffff84
   17510:	str	r0, [fp, #-76]	; 0xffffffb4
   17514:	sub	r0, fp, #48	; 0x30
   17518:	str	r0, [fp, #-80]	; 0xffffffb0
   1751c:	str	r9, [fp, #-84]	; 0xffffffac
   17520:	str	r5, [fp, #-88]	; 0xffffffa8
   17524:	ldrb	r0, [r4, #12]
   17528:	tst	r0, #8
   1752c:	bne	17574 <argp_help@@Base+0xc04>
   17530:	ldr	r0, [r5, #4]
   17534:	cmp	r0, #0
   17538:	beq	17574 <argp_help@@Base+0xc04>
   1753c:	add	r1, r4, #12
   17540:	ldr	r2, [r1, #-12]
   17544:	cmp	r2, #0
   17548:	bne	17564 <argp_help@@Base+0xbf4>
   1754c:	add	r1, r1, #24
   17550:	subs	r0, r0, #1
   17554:	beq	17574 <argp_help@@Base+0xc04>
   17558:	ldr	r2, [r1, #-12]
   1755c:	cmp	r2, #0
   17560:	beq	1754c <argp_help@@Base+0xbdc>
   17564:	ldrb	r2, [r1]
   17568:	tst	r2, #2
   1756c:	bne	1754c <argp_help@@Base+0xbdc>
   17570:	mov	r7, #1
   17574:	ldr	r1, [r9, #24]
   17578:	ldr	r2, [r9, #28]
   1757c:	ldr	r0, [r9, #16]
   17580:	ldr	r4, [sl, #8]
   17584:	sub	r1, r2, r1
   17588:	cmp	r1, r0
   1758c:	bls	17598 <argp_help@@Base+0xc28>
   17590:	mov	r0, r9
   17594:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17598:	str	r4, [r9, #12]
   1759c:	mov	r4, r8
   175a0:	str	r5, [fp, #-112]	; 0xffffff90
   175a4:	ldr	r6, [r5, #4]
   175a8:	cmp	r6, #0
   175ac:	beq	178b0 <argp_help@@Base+0xf40>
   175b0:	cmp	r7, #0
   175b4:	beq	17754 <argp_help@@Base+0xde4>
   175b8:	add	r7, r4, #12
   175bc:	ldr	r5, [r7]
   175c0:	tst	r5, #8
   175c4:	bne	175d0 <argp_help@@Base+0xc60>
   175c8:	b	175e8 <argp_help@@Base+0xc78>
   175cc:	mov	r4, r8
   175d0:	add	r7, r7, #24
   175d4:	subs	r6, r6, #1
   175d8:	beq	178b0 <argp_help@@Base+0xf40>
   175dc:	ldr	r5, [r7]
   175e0:	tst	r5, #8
   175e4:	bne	175d0 <argp_help@@Base+0xc60>
   175e8:	ldr	r4, [r7, #-8]
   175ec:	sub	r0, r4, #1
   175f0:	cmp	r0, #254	; 0xfe
   175f4:	bhi	175cc <argp_help@@Base+0xc5c>
   175f8:	bl	11bfc <__ctype_b_loc@plt>
   175fc:	ldr	r0, [r0]
   17600:	add	r0, r0, r4, lsl #1
   17604:	ldrb	r0, [r0, #1]
   17608:	tst	r0, #64	; 0x40
   1760c:	bne	17624 <argp_help@@Base+0xcb4>
   17610:	mov	r4, r8
   17614:	add	r7, r7, #24
   17618:	subs	r6, r6, #1
   1761c:	bne	175dc <argp_help@@Base+0xc6c>
   17620:	b	178b0 <argp_help@@Base+0xf40>
   17624:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17628:	ldrb	r0, [r0]
   1762c:	cmp	r4, r0
   17630:	bne	17704 <argp_help@@Base+0xd94>
   17634:	tst	r5, #2
   17638:	mov	r4, r8
   1763c:	bne	17738 <argp_help@@Base+0xdc8>
   17640:	ldr	r0, [sl, #8]
   17644:	sub	r1, fp, #88	; 0x58
   17648:	bl	19fd8 <argp_failure@@Base+0x1c4c>
   1764c:	ldr	r0, [r9, #28]
   17650:	ldr	r1, [r9, #32]
   17654:	cmp	r0, r1
   17658:	bcc	17678 <argp_help@@Base+0xd08>
   1765c:	mov	r0, r9
   17660:	mov	r1, #1
   17664:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17668:	cmp	r0, #0
   1766c:	beq	1768c <argp_help@@Base+0xd1c>
   17670:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17674:	ldr	r0, [r0]
   17678:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1767c:	add	r1, r0, #1
   17680:	str	r1, [r2]
   17684:	mov	r1, #45	; 0x2d
   17688:	strb	r1, [r0]
   1768c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17690:	ldr	r0, [r9, #28]
   17694:	ldr	r1, [r9, #32]
   17698:	ldrb	r5, [r2]
   1769c:	cmp	r0, r1
   176a0:	bcc	176c0 <argp_help@@Base+0xd50>
   176a4:	mov	r0, r9
   176a8:	mov	r1, #1
   176ac:	bl	1d144 <argp_parse@@Base+0x2cb4>
   176b0:	cmp	r0, #0
   176b4:	beq	176d0 <argp_help@@Base+0xd60>
   176b8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   176bc:	ldr	r0, [r0]
   176c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   176c4:	add	r1, r0, #1
   176c8:	str	r1, [r2]
   176cc:	strb	r5, [r0]
   176d0:	ldr	r0, [sl]
   176d4:	ldr	r2, [r4, #8]
   176d8:	cmp	r0, #0
   176dc:	beq	17718 <argp_help@@Base+0xda8>
   176e0:	cmp	r2, #0
   176e4:	beq	17738 <argp_help@@Base+0xdc8>
   176e8:	ldrb	r0, [r4, #12]
   176ec:	tst	r0, #1
   176f0:	bne	17728 <argp_help@@Base+0xdb8>
   176f4:	movw	r1, #63891	; 0xf993
   176f8:	mov	r0, r9
   176fc:	movt	r1, #1
   17700:	b	17734 <argp_help@@Base+0xdc4>
   17704:	mov	r4, r8
   17708:	add	r7, r7, #24
   1770c:	subs	r6, r6, #1
   17710:	bne	175dc <argp_help@@Base+0xc6c>
   17714:	b	178b0 <argp_help@@Base+0xf40>
   17718:	cmp	r2, #0
   1771c:	movne	r0, #1
   17720:	strne	r0, [fp, #-40]	; 0xffffffd8
   17724:	b	17738 <argp_help@@Base+0xdc8>
   17728:	movw	r1, #64387	; 0xfb83
   1772c:	mov	r0, r9
   17730:	movt	r1, #1
   17734:	bl	1d230 <argp_parse@@Base+0x2da0>
   17738:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1773c:	add	r0, r0, #1
   17740:	str	r0, [fp, #-92]	; 0xffffffa4
   17744:	add	r7, r7, #24
   17748:	subs	r6, r6, #1
   1774c:	bne	175dc <argp_help@@Base+0xc6c>
   17750:	b	178b0 <argp_help@@Base+0xf40>
   17754:	add	r7, r4, #12
   17758:	ldr	r5, [r7]
   1775c:	tst	r5, #8
   17760:	bne	17770 <argp_help@@Base+0xe00>
   17764:	b	17788 <argp_help@@Base+0xe18>
   17768:	movw	sl, #5496	; 0x1578
   1776c:	movt	sl, #3
   17770:	add	r7, r7, #24
   17774:	subs	r6, r6, #1
   17778:	beq	178b0 <argp_help@@Base+0xf40>
   1777c:	ldr	r5, [r7]
   17780:	tst	r5, #8
   17784:	bne	17770 <argp_help@@Base+0xe00>
   17788:	ldr	sl, [r7, #-8]
   1778c:	sub	r0, sl, #1
   17790:	cmp	r0, #254	; 0xfe
   17794:	bhi	17768 <argp_help@@Base+0xdf8>
   17798:	bl	11bfc <__ctype_b_loc@plt>
   1779c:	ldr	r0, [r0]
   177a0:	add	r0, r0, sl, lsl #1
   177a4:	ldrb	r0, [r0, #1]
   177a8:	tst	r0, #64	; 0x40
   177ac:	beq	17768 <argp_help@@Base+0xdf8>
   177b0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   177b4:	ldrb	r0, [r0]
   177b8:	cmp	sl, r0
   177bc:	bne	17768 <argp_help@@Base+0xdf8>
   177c0:	movw	sl, #5496	; 0x1578
   177c4:	tst	r5, #2
   177c8:	movt	sl, #3
   177cc:	bne	17898 <argp_help@@Base+0xf28>
   177d0:	ldr	r0, [sl, #8]
   177d4:	sub	r1, fp, #88	; 0x58
   177d8:	bl	19fd8 <argp_failure@@Base+0x1c4c>
   177dc:	ldr	r0, [r9, #28]
   177e0:	ldr	r1, [r9, #32]
   177e4:	cmp	r0, r1
   177e8:	bcc	17808 <argp_help@@Base+0xe98>
   177ec:	mov	r0, r9
   177f0:	mov	r1, #1
   177f4:	bl	1d144 <argp_parse@@Base+0x2cb4>
   177f8:	cmp	r0, #0
   177fc:	beq	1781c <argp_help@@Base+0xeac>
   17800:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17804:	ldr	r0, [r0]
   17808:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1780c:	add	r1, r0, #1
   17810:	str	r1, [r2]
   17814:	mov	r1, #45	; 0x2d
   17818:	strb	r1, [r0]
   1781c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17820:	ldr	r0, [r9, #28]
   17824:	ldr	r1, [r9, #32]
   17828:	ldrb	r5, [r2]
   1782c:	cmp	r0, r1
   17830:	bcc	17850 <argp_help@@Base+0xee0>
   17834:	mov	r0, r9
   17838:	mov	r1, #1
   1783c:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17840:	cmp	r0, #0
   17844:	beq	17860 <argp_help@@Base+0xef0>
   17848:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1784c:	ldr	r0, [r0]
   17850:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17854:	add	r1, r0, #1
   17858:	str	r1, [r2]
   1785c:	strb	r5, [r0]
   17860:	ldr	r2, [r4, #8]
   17864:	cmp	r2, #0
   17868:	beq	17898 <argp_help@@Base+0xf28>
   1786c:	ldrb	r0, [r4, #12]
   17870:	tst	r0, #1
   17874:	bne	17888 <argp_help@@Base+0xf18>
   17878:	movw	r1, #63891	; 0xf993
   1787c:	mov	r0, r9
   17880:	movt	r1, #1
   17884:	b	17894 <argp_help@@Base+0xf24>
   17888:	movw	r1, #64387	; 0xfb83
   1788c:	mov	r0, r9
   17890:	movt	r1, #1
   17894:	bl	1d230 <argp_parse@@Base+0x2da0>
   17898:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1789c:	add	r0, r0, #1
   178a0:	str	r0, [fp, #-92]	; 0xffffffa4
   178a4:	add	r7, r7, #24
   178a8:	subs	r6, r6, #1
   178ac:	bne	1777c <argp_help@@Base+0xe0c>
   178b0:	ldrb	r0, [r4, #12]
   178b4:	tst	r0, #8
   178b8:	bne	17988 <argp_help@@Base+0x1018>
   178bc:	ldr	r1, [r9, #24]
   178c0:	ldr	r2, [r9, #28]
   178c4:	ldr	r0, [r9, #16]
   178c8:	ldr	r4, [sl, #12]
   178cc:	sub	r1, r2, r1
   178d0:	cmp	r1, r0
   178d4:	bls	178e0 <argp_help@@Base+0xf70>
   178d8:	mov	r0, r9
   178dc:	bl	1cbc8 <argp_parse@@Base+0x2738>
   178e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   178e4:	str	r4, [r9, #12]
   178e8:	mov	r4, r8
   178ec:	ldr	r5, [r0, #4]
   178f0:	cmp	r5, #0
   178f4:	beq	17a70 <argp_help@@Base+0x1100>
   178f8:	add	r6, r4, #12
   178fc:	ldr	r0, [r6, #-12]
   17900:	cmp	r0, #0
   17904:	bne	17934 <argp_help@@Base+0xfc4>
   17908:	b	1791c <argp_help@@Base+0xfac>
   1790c:	movw	r1, #64397	; 0xfb8d
   17910:	mov	r0, r9
   17914:	movt	r1, #1
   17918:	bl	1d230 <argp_parse@@Base+0x2da0>
   1791c:	add	r6, r6, #24
   17920:	subs	r5, r5, #1
   17924:	beq	17a70 <argp_help@@Base+0x1100>
   17928:	ldr	r0, [r6, #-12]
   1792c:	cmp	r0, #0
   17930:	beq	1791c <argp_help@@Base+0xfac>
   17934:	ldrb	r0, [r6]
   17938:	tst	r0, #2
   1793c:	bne	1791c <argp_help@@Base+0xfac>
   17940:	ldr	r0, [sl, #12]
   17944:	sub	r1, fp, #88	; 0x58
   17948:	bl	19fd8 <argp_failure@@Base+0x1c4c>
   1794c:	ldr	r2, [r6, #-12]
   17950:	movw	r1, #64392	; 0xfb88
   17954:	mov	r0, r9
   17958:	movt	r1, #1
   1795c:	bl	1d230 <argp_parse@@Base+0x2da0>
   17960:	ldr	r2, [r4, #8]
   17964:	cmp	r2, #0
   17968:	beq	1791c <argp_help@@Base+0xfac>
   1796c:	ldrb	r0, [r4, #12]
   17970:	tst	r0, #1
   17974:	beq	1790c <argp_help@@Base+0xf9c>
   17978:	movw	r1, #64401	; 0xfb91
   1797c:	mov	r0, r9
   17980:	movt	r1, #1
   17984:	b	17918 <argp_help@@Base+0xfa8>
   17988:	ldr	r1, [r9, #24]
   1798c:	ldr	r2, [r9, #28]
   17990:	ldr	r0, [r9, #16]
   17994:	ldr	r4, [sl, #16]
   17998:	sub	r1, r2, r1
   1799c:	cmp	r1, r0
   179a0:	bls	179ac <argp_help@@Base+0x103c>
   179a4:	mov	r0, r9
   179a8:	bl	1cbc8 <argp_parse@@Base+0x2738>
   179ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   179b0:	str	r4, [r9, #12]
   179b4:	mov	r4, r8
   179b8:	ldr	r6, [r0, #4]
   179bc:	cmp	r6, #0
   179c0:	beq	17a70 <argp_help@@Base+0x1100>
   179c4:	add	r8, r4, #12
   179c8:	ldr	r0, [r8, #-12]
   179cc:	cmp	r0, #0
   179d0:	bne	17a0c <argp_help@@Base+0x109c>
   179d4:	b	179f4 <argp_help@@Base+0x1084>
   179d8:	mov	r1, r5
   179dc:	mov	r2, r7
   179e0:	bl	11a58 <memcpy@plt>
   179e4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   179e8:	ldr	r0, [r1]
   179ec:	add	r0, r0, r7
   179f0:	str	r0, [r1]
   179f4:	add	r8, r8, #24
   179f8:	subs	r6, r6, #1
   179fc:	beq	17a70 <argp_help@@Base+0x1100>
   17a00:	ldr	r0, [r8, #-12]
   17a04:	cmp	r0, #0
   17a08:	beq	179f4 <argp_help@@Base+0x1084>
   17a0c:	ldrb	r0, [r8]
   17a10:	tst	r0, #2
   17a14:	bne	179f4 <argp_help@@Base+0x1084>
   17a18:	ldr	r0, [sl, #16]
   17a1c:	sub	r1, fp, #88	; 0x58
   17a20:	bl	19fd8 <argp_failure@@Base+0x1c4c>
   17a24:	ldr	r5, [r8, #-12]
   17a28:	mov	r0, r5
   17a2c:	bl	11c20 <strlen@plt>
   17a30:	cmp	r0, #0
   17a34:	beq	179f4 <argp_help@@Base+0x1084>
   17a38:	mov	r7, r0
   17a3c:	ldr	r0, [r9, #28]
   17a40:	ldr	r1, [r9, #32]
   17a44:	add	r2, r0, r7
   17a48:	cmp	r2, r1
   17a4c:	bls	179d8 <argp_help@@Base+0x1068>
   17a50:	mov	r0, r9
   17a54:	mov	r1, r7
   17a58:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17a5c:	cmp	r0, #0
   17a60:	beq	179f4 <argp_help@@Base+0x1084>
   17a64:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17a68:	ldr	r0, [r0]
   17a6c:	b	179d8 <argp_help@@Base+0x1068>
   17a70:	ldr	r1, [r9, #24]
   17a74:	ldr	r2, [r9, #28]
   17a78:	ldr	r0, [r9, #16]
   17a7c:	sub	r1, r2, r1
   17a80:	cmp	r1, r0
   17a84:	bls	17a90 <argp_help@@Base+0x1120>
   17a88:	mov	r0, r9
   17a8c:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17a90:	mov	r0, #0
   17a94:	ldr	r5, [fp, #-112]	; 0xffffff90
   17a98:	str	r0, [r9, #4]
   17a9c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17aa0:	cmp	r0, #0
   17aa4:	beq	17b00 <argp_help@@Base+0x1190>
   17aa8:	ldrb	r0, [r4, #12]
   17aac:	mov	r6, r4
   17ab0:	tst	r0, #8
   17ab4:	bne	17ae0 <argp_help@@Base+0x1170>
   17ab8:	ldr	r4, [r6, #4]
   17abc:	sub	r0, r4, #1
   17ac0:	cmp	r0, #254	; 0xfe
   17ac4:	bhi	17ae0 <argp_help@@Base+0x1170>
   17ac8:	bl	11bfc <__ctype_b_loc@plt>
   17acc:	ldr	r0, [r0]
   17ad0:	add	r0, r0, r4, lsl #1
   17ad4:	ldrb	r0, [r0, #1]
   17ad8:	tst	r0, #64	; 0x40
   17adc:	bne	17e14 <argp_help@@Base+0x14a4>
   17ae0:	ldr	r0, [r6]
   17ae4:	cmp	r0, #0
   17ae8:	bne	17e14 <argp_help@@Base+0x14a4>
   17aec:	ldr	r1, [r5, #20]
   17af0:	ldr	r0, [r6, #16]
   17af4:	sub	r2, fp, #88	; 0x58
   17af8:	bl	1a1e4 <argp_failure@@Base+0x1e58>
   17afc:	b	17e10 <argp_help@@Base+0x14a0>
   17b00:	ldr	r6, [r5, #20]
   17b04:	ldr	r5, [r4, #16]
   17b08:	cmp	r6, #0
   17b0c:	mov	r8, r5
   17b10:	beq	17b4c <argp_help@@Base+0x11dc>
   17b14:	ldr	r0, [r6, #20]
   17b18:	mov	r8, r5
   17b1c:	cmp	r0, #0
   17b20:	beq	17b4c <argp_help@@Base+0x11dc>
   17b24:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17b28:	ldr	r7, [r4, #4]
   17b2c:	mov	r0, r6
   17b30:	bl	1b1bc <argp_parse@@Base+0xd2c>
   17b34:	ldr	r3, [r6, #20]
   17b38:	mov	r2, r0
   17b3c:	mov	r0, r7
   17b40:	mov	r1, r5
   17b44:	blx	r3
   17b48:	mov	r8, r0
   17b4c:	cmp	r8, #0
   17b50:	beq	17da4 <argp_help@@Base+0x1434>
   17b54:	ldrb	r0, [r8]
   17b58:	cmp	r0, #0
   17b5c:	beq	17d94 <argp_help@@Base+0x1424>
   17b60:	ldr	r1, [r9, #24]
   17b64:	ldr	r2, [r9, #28]
   17b68:	ldr	r0, [r9, #16]
   17b6c:	str	r5, [fp, #-92]	; 0xffffffa4
   17b70:	sub	r1, r2, r1
   17b74:	cmp	r1, r0
   17b78:	bls	17b94 <argp_help@@Base+0x1224>
   17b7c:	mov	r0, r9
   17b80:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17b84:	ldr	r1, [r9, #24]
   17b88:	ldr	r2, [r9, #28]
   17b8c:	ldr	r0, [r9, #16]
   17b90:	sub	r1, r2, r1
   17b94:	ldr	r6, [sl, #20]
   17b98:	ldr	r4, [r9, #20]
   17b9c:	cmp	r1, r0
   17ba0:	mov	r5, r6
   17ba4:	bls	17bc4 <argp_help@@Base+0x1254>
   17ba8:	mov	r0, r9
   17bac:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17bb0:	ldr	r1, [r9, #24]
   17bb4:	ldr	r2, [r9, #28]
   17bb8:	ldr	r5, [sl, #20]
   17bbc:	ldr	r0, [r9, #16]
   17bc0:	sub	r1, r2, r1
   17bc4:	bic	r7, r4, r4, asr #31
   17bc8:	str	r6, [r9, #4]
   17bcc:	cmp	r1, r0
   17bd0:	mov	r6, r5
   17bd4:	bls	17be4 <argp_help@@Base+0x1274>
   17bd8:	mov	r0, r9
   17bdc:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17be0:	ldr	r6, [sl, #20]
   17be4:	add	r0, r6, #3
   17be8:	str	r5, [r9, #12]
   17bec:	cmp	r7, r0
   17bf0:	bls	17c4c <argp_help@@Base+0x12dc>
   17bf4:	ldr	r0, [r9, #28]
   17bf8:	ldr	r1, [r9, #32]
   17bfc:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17c00:	cmp	r0, r1
   17c04:	bcc	17c24 <argp_help@@Base+0x12b4>
   17c08:	mov	r0, r9
   17c0c:	mov	r1, #1
   17c10:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17c14:	cmp	r0, #0
   17c18:	beq	17d34 <argp_help@@Base+0x13c4>
   17c1c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17c20:	ldr	r0, [r0]
   17c24:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17c28:	add	r1, r0, #1
   17c2c:	str	r1, [r2]
   17c30:	mov	r1, #10
   17c34:	strb	r1, [r0]
   17c38:	mov	r0, r8
   17c3c:	bl	11c20 <strlen@plt>
   17c40:	cmp	r0, #0
   17c44:	bne	17d44 <argp_help@@Base+0x13d4>
   17c48:	b	17d94 <argp_help@@Base+0x1424>
   17c4c:	cmp	r7, r6
   17c50:	bcs	17ce0 <argp_help@@Base+0x1370>
   17c54:	ldr	r1, [r9, #24]
   17c58:	ldr	r2, [r9, #28]
   17c5c:	ldr	r0, [r9, #16]
   17c60:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17c64:	sub	r1, r2, r1
   17c68:	cmp	r1, r0
   17c6c:	bls	17c78 <argp_help@@Base+0x1308>
   17c70:	mov	r0, r9
   17c74:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17c78:	ldr	r0, [r9, #20]
   17c7c:	cmp	r0, #0
   17c80:	subgt	r6, r6, r0
   17c84:	cmp	r6, #1
   17c88:	bge	17cb4 <argp_help@@Base+0x1344>
   17c8c:	b	17d34 <argp_help@@Base+0x13c4>
   17c90:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17c94:	ldr	r0, [r0]
   17c98:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17c9c:	add	r1, r0, #1
   17ca0:	str	r1, [r2]
   17ca4:	mov	r1, #32
   17ca8:	strb	r1, [r0]
   17cac:	cmp	r6, #0
   17cb0:	ble	17d34 <argp_help@@Base+0x13c4>
   17cb4:	ldr	r0, [r9, #28]
   17cb8:	ldr	r1, [r9, #32]
   17cbc:	sub	r6, r6, #1
   17cc0:	cmp	r0, r1
   17cc4:	bcc	17c98 <argp_help@@Base+0x1328>
   17cc8:	mov	r0, r9
   17ccc:	mov	r1, #1
   17cd0:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17cd4:	cmp	r0, #0
   17cd8:	bne	17c90 <argp_help@@Base+0x1320>
   17cdc:	b	17cac <argp_help@@Base+0x133c>
   17ce0:	ldr	r0, [r9, #28]
   17ce4:	ldr	r1, [r9, #32]
   17ce8:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17cec:	add	r2, r0, #3
   17cf0:	cmp	r2, r1
   17cf4:	bls	17d14 <argp_help@@Base+0x13a4>
   17cf8:	mov	r0, r9
   17cfc:	mov	r1, #3
   17d00:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17d04:	cmp	r0, #0
   17d08:	beq	17d34 <argp_help@@Base+0x13c4>
   17d0c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17d10:	ldr	r0, [r0]
   17d14:	mov	r1, #32
   17d18:	strb	r1, [r0, #2]
   17d1c:	movw	r1, #8224	; 0x2020
   17d20:	strh	r1, [r0]
   17d24:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17d28:	ldr	r0, [r1]
   17d2c:	add	r0, r0, #3
   17d30:	str	r0, [r1]
   17d34:	mov	r0, r8
   17d38:	bl	11c20 <strlen@plt>
   17d3c:	cmp	r0, #0
   17d40:	beq	17d94 <argp_help@@Base+0x1424>
   17d44:	mov	r6, r0
   17d48:	ldr	r0, [r9, #28]
   17d4c:	ldr	r1, [r9, #32]
   17d50:	add	r2, r0, r6
   17d54:	cmp	r2, r1
   17d58:	bls	17d78 <argp_help@@Base+0x1408>
   17d5c:	mov	r0, r9
   17d60:	mov	r1, r6
   17d64:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17d68:	cmp	r0, #0
   17d6c:	beq	17d94 <argp_help@@Base+0x1424>
   17d70:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17d74:	ldr	r0, [r0]
   17d78:	mov	r1, r8
   17d7c:	mov	r2, r6
   17d80:	bl	11a58 <memcpy@plt>
   17d84:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17d88:	ldr	r0, [r1]
   17d8c:	add	r0, r0, r6
   17d90:	str	r0, [r1]
   17d94:	cmp	r8, r5
   17d98:	beq	17da4 <argp_help@@Base+0x1434>
   17d9c:	mov	r0, r8
   17da0:	bl	1ba4c <argp_parse@@Base+0x15bc>
   17da4:	ldr	r2, [r9, #24]
   17da8:	ldr	r0, [r9, #28]
   17dac:	ldr	r1, [r9, #16]
   17db0:	sub	r2, r0, r2
   17db4:	cmp	r2, r1
   17db8:	bls	17dc8 <argp_help@@Base+0x1458>
   17dbc:	mov	r0, r9
   17dc0:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17dc4:	ldr	r0, [r9, #28]
   17dc8:	mov	r1, #0
   17dcc:	ldr	r5, [fp, #-112]	; 0xffffff90
   17dd0:	str	r1, [r9, #4]
   17dd4:	ldr	r1, [r9, #32]
   17dd8:	cmp	r0, r1
   17ddc:	bcc	17dfc <argp_help@@Base+0x148c>
   17de0:	mov	r0, r9
   17de4:	mov	r1, #1
   17de8:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17dec:	cmp	r0, #0
   17df0:	beq	17e10 <argp_help@@Base+0x14a0>
   17df4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17df8:	ldr	r0, [r0]
   17dfc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17e00:	add	r1, r0, #1
   17e04:	str	r1, [r2]
   17e08:	mov	r1, #10
   17e0c:	strb	r1, [r0]
   17e10:	str	r5, [fp, #-48]	; 0xffffffd0
   17e14:	ldr	r1, [r9, #24]
   17e18:	ldr	r2, [r9, #28]
   17e1c:	ldr	r0, [r9, #16]
   17e20:	sub	r1, r2, r1
   17e24:	cmp	r1, r0
   17e28:	bls	17e44 <argp_help@@Base+0x14d4>
   17e2c:	mov	r0, r9
   17e30:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17e34:	ldr	r1, [r9, #24]
   17e38:	ldr	r2, [r9, #28]
   17e3c:	ldr	r0, [r9, #16]
   17e40:	sub	r1, r2, r1
   17e44:	ldr	r2, [fp, #-124]	; 0xffffff84
   17e48:	cmp	r1, r0
   17e4c:	str	r2, [r9, #4]
   17e50:	bls	174a0 <argp_help@@Base+0xb30>
   17e54:	mov	r0, r9
   17e58:	bl	1cbc8 <argp_parse@@Base+0x2738>
   17e5c:	b	174a0 <argp_help@@Base+0xb30>
   17e60:	mov	r0, r5
   17e64:	sub	sp, fp, #28
   17e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e6c:	b	11b18 <funlockfile@plt>
   17e70:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17e74:	movw	r1, #63692	; 0xf8cc
   17e78:	mov	r0, r9
   17e7c:	movt	r1, #1
   17e80:	mov	r3, r2
   17e84:	bl	1d230 <argp_parse@@Base+0x2da0>
   17e88:	mov	r5, #1
   17e8c:	tst	r6, #8
   17e90:	bne	1741c <argp_help@@Base+0xaac>
   17e94:	tst	r6, #32
   17e98:	beq	17ec4 <argp_help@@Base+0x1554>
   17e9c:	sub	sp, sp, #8
   17ea0:	mov	r0, #0
   17ea4:	mov	r2, #1
   17ea8:	mov	r3, r5
   17eac:	stm	sp, {r0, r9}
   17eb0:	ldr	r0, [fp, #-104]	; 0xffffff98
   17eb4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17eb8:	bl	194f0 <argp_failure@@Base+0x1164>
   17ebc:	add	sp, sp, #8
   17ec0:	orr	r5, r0, r5
   17ec4:	tst	r6, #64	; 0x40
   17ec8:	beq	17f34 <argp_help@@Base+0x15c4>
   17ecc:	movw	r6, #8332	; 0x208c
   17ed0:	movt	r6, #3
   17ed4:	ldr	r0, [r6]
   17ed8:	cmp	r0, #0
   17edc:	beq	17f34 <argp_help@@Base+0x15c4>
   17ee0:	cmp	r5, #0
   17ee4:	beq	17f20 <argp_help@@Base+0x15b0>
   17ee8:	ldr	r0, [r9, #28]
   17eec:	ldr	r1, [r9, #32]
   17ef0:	cmp	r0, r1
   17ef4:	bcc	17f10 <argp_help@@Base+0x15a0>
   17ef8:	mov	r0, r9
   17efc:	mov	r1, #1
   17f00:	bl	1d144 <argp_parse@@Base+0x2cb4>
   17f04:	cmp	r0, #0
   17f08:	beq	17f20 <argp_help@@Base+0x15b0>
   17f0c:	ldr	r0, [r9, #28]
   17f10:	add	r1, r0, #1
   17f14:	str	r1, [r9, #28]
   17f18:	mov	r1, #10
   17f1c:	strb	r1, [r0]
   17f20:	ldr	r2, [r6]
   17f24:	movw	r1, #63747	; 0xf903
   17f28:	mov	r0, r9
   17f2c:	movt	r1, #1
   17f30:	bl	1d230 <argp_parse@@Base+0x2da0>
   17f34:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17f38:	bl	11b18 <funlockfile@plt>
   17f3c:	ldr	r5, [fp, #-108]	; 0xffffff94
   17f40:	cmp	r5, #0
   17f44:	beq	17f8c <argp_help@@Base+0x161c>
   17f48:	ldr	r0, [r5, #12]
   17f4c:	cmp	r0, #0
   17f50:	beq	17f68 <argp_help@@Base+0x15f8>
   17f54:	ldr	r4, [r0, #24]
   17f58:	bl	1ba4c <argp_parse@@Base+0x15bc>
   17f5c:	cmp	r4, #0
   17f60:	mov	r0, r4
   17f64:	bne	17f54 <argp_help@@Base+0x15e4>
   17f68:	ldr	r0, [r5, #4]
   17f6c:	cmp	r0, #0
   17f70:	beq	17f84 <argp_help@@Base+0x1614>
   17f74:	ldr	r0, [r5]
   17f78:	bl	1ba4c <argp_parse@@Base+0x15bc>
   17f7c:	ldr	r0, [r5, #8]
   17f80:	bl	1ba4c <argp_parse@@Base+0x15bc>
   17f84:	mov	r0, r5
   17f88:	bl	1ba4c <argp_parse@@Base+0x15bc>
   17f8c:	mov	r0, r9
   17f90:	bl	1cb84 <argp_parse@@Base+0x26f4>
   17f94:	sub	sp, fp, #28
   17f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17fa0:	cmp	r0, #0
   17fa4:	ldrne	r0, [sl, #4]
   17fa8:	cmpne	r0, #0
   17fac:	bne	17fe8 <argp_help@@Base+0x1678>
   17fb0:	ldr	r6, [fp, #-128]	; 0xffffff80
   17fb4:	mov	r5, #1
   17fb8:	tst	r6, #32
   17fbc:	bne	17e9c <argp_help@@Base+0x152c>
   17fc0:	b	17ec4 <argp_help@@Base+0x1554>
   17fc4:	ldr	r6, [fp, #-128]	; 0xffffff80
   17fc8:	movw	sl, #5496	; 0x1578
   17fcc:	movt	sl, #3
   17fd0:	tst	r6, #3
   17fd4:	bne	171b0 <argp_help@@Base+0x840>
   17fd8:	mov	r5, #0
   17fdc:	tst	r6, #16
   17fe0:	bne	173e4 <argp_help@@Base+0xa74>
   17fe4:	b	1740c <argp_help@@Base+0xa9c>
   17fe8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17fec:	movw	r5, #64271	; 0xfb0f
   17ff0:	movt	r5, #1
   17ff4:	cmp	r0, #0
   17ff8:	beq	18048 <argp_help@@Base+0x16d8>
   17ffc:	ldr	r6, [r0]
   18000:	cmp	r6, #0
   18004:	beq	18048 <argp_help@@Base+0x16d8>
   18008:	ldr	r0, [r6, #20]
   1800c:	cmp	r0, #0
   18010:	beq	18048 <argp_help@@Base+0x16d8>
   18014:	ldr	r1, [fp, #-96]	; 0xffffffa0
   18018:	mov	r0, r6
   1801c:	bl	1b1bc <argp_parse@@Base+0xd2c>
   18020:	ldr	r3, [r6, #20]
   18024:	movw	r1, #64271	; 0xfb0f
   18028:	mov	r2, r0
   1802c:	movw	r0, #5
   18030:	movt	r0, #512	; 0x200
   18034:	movt	r1, #1
   18038:	blx	r3
   1803c:	mov	r5, r0
   18040:	cmp	r0, #0
   18044:	beq	17fb0 <argp_help@@Base+0x1640>
   18048:	ldrb	r0, [r5]
   1804c:	cmp	r0, #0
   18050:	beq	18134 <argp_help@@Base+0x17c4>
   18054:	ldr	r0, [r9, #28]
   18058:	ldr	r1, [r9, #32]
   1805c:	cmp	r0, r1
   18060:	bcc	18080 <argp_help@@Base+0x1710>
   18064:	mov	r0, r9
   18068:	mov	r1, #1
   1806c:	bl	1d144 <argp_parse@@Base+0x2cb4>
   18070:	cmp	r0, #0
   18074:	beq	18094 <argp_help@@Base+0x1724>
   18078:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1807c:	ldr	r0, [r0]
   18080:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18084:	add	r1, r0, #1
   18088:	str	r1, [r2]
   1808c:	mov	r1, #10
   18090:	strb	r1, [r0]
   18094:	mov	r0, r5
   18098:	bl	11c20 <strlen@plt>
   1809c:	cmp	r0, #0
   180a0:	beq	180f4 <argp_help@@Base+0x1784>
   180a4:	mov	r6, r0
   180a8:	ldr	r0, [r9, #28]
   180ac:	ldr	r1, [r9, #32]
   180b0:	add	r2, r0, r6
   180b4:	cmp	r2, r1
   180b8:	bls	180d8 <argp_help@@Base+0x1768>
   180bc:	mov	r0, r9
   180c0:	mov	r1, r6
   180c4:	bl	1d144 <argp_parse@@Base+0x2cb4>
   180c8:	cmp	r0, #0
   180cc:	beq	180f4 <argp_help@@Base+0x1784>
   180d0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   180d4:	ldr	r0, [r0]
   180d8:	mov	r1, r5
   180dc:	mov	r2, r6
   180e0:	bl	11a58 <memcpy@plt>
   180e4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   180e8:	ldr	r0, [r1]
   180ec:	add	r0, r0, r6
   180f0:	str	r0, [r1]
   180f4:	ldr	r0, [r9, #28]
   180f8:	ldr	r1, [r9, #32]
   180fc:	cmp	r0, r1
   18100:	bcc	18120 <argp_help@@Base+0x17b0>
   18104:	mov	r0, r9
   18108:	mov	r1, #1
   1810c:	bl	1d144 <argp_parse@@Base+0x2cb4>
   18110:	cmp	r0, #0
   18114:	beq	18134 <argp_help@@Base+0x17c4>
   18118:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1811c:	ldr	r0, [r0]
   18120:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18124:	add	r1, r0, #1
   18128:	str	r1, [r2]
   1812c:	mov	r1, #10
   18130:	strb	r1, [r0]
   18134:	movw	r0, #64271	; 0xfb0f
   18138:	movt	r0, #1
   1813c:	cmp	r5, r0
   18140:	beq	17fb0 <argp_help@@Base+0x1640>
   18144:	mov	r0, r5
   18148:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1814c:	ldr	r6, [fp, #-128]	; 0xffffff80
   18150:	mov	r5, #1
   18154:	tst	r6, #32
   18158:	bne	17e9c <argp_help@@Base+0x152c>
   1815c:	b	17ec4 <argp_help@@Base+0x1554>
   18160:	add	r2, r0, #112	; 0x70
   18164:	b	16f68 <argp_help@@Base+0x5f8>

00018168 <argp_state_help@@Base>:
   18168:	push	{r4, r5, fp, lr}
   1816c:	add	fp, sp, #8
   18170:	sub	sp, sp, #8
   18174:	mov	r4, r2
   18178:	mov	r2, r1
   1817c:	cmp	r0, #0
   18180:	beq	181cc <argp_state_help@@Base+0x64>
   18184:	cmp	r2, #0
   18188:	beq	18204 <argp_state_help@@Base+0x9c>
   1818c:	ldr	r1, [r0, #16]
   18190:	mov	r5, r0
   18194:	ands	r0, r1, #2
   18198:	bne	18204 <argp_state_help@@Base+0x9c>
   1819c:	ldr	r3, [r5, #40]	; 0x28
   181a0:	ldr	r0, [r5]
   181a4:	and	r1, r1, #64	; 0x40
   181a8:	orr	r4, r4, r1, lsl #1
   181ac:	mov	r1, r5
   181b0:	str	r3, [sp]
   181b4:	mov	r3, r4
   181b8:	bl	1699c <argp_help@@Base+0x2c>
   181bc:	ldrb	r0, [r5, #16]
   181c0:	tst	r0, #32
   181c4:	beq	181f4 <argp_state_help@@Base+0x8c>
   181c8:	b	18204 <argp_state_help@@Base+0x9c>
   181cc:	cmp	r2, #0
   181d0:	beq	18204 <argp_state_help@@Base+0x9c>
   181d4:	movw	r0, #5560	; 0x15b8
   181d8:	mov	r1, #0
   181dc:	mov	r3, r4
   181e0:	movt	r0, #3
   181e4:	ldr	r0, [r0]
   181e8:	str	r0, [sp]
   181ec:	mov	r0, #0
   181f0:	bl	1699c <argp_help@@Base+0x2c>
   181f4:	tst	r4, #256	; 0x100
   181f8:	bne	1820c <argp_state_help@@Base+0xa4>
   181fc:	tst	r4, #512	; 0x200
   18200:	bne	1821c <argp_state_help@@Base+0xb4>
   18204:	sub	sp, fp, #8
   18208:	pop	{r4, r5, fp, pc}
   1820c:	movw	r0, #5536	; 0x15a0
   18210:	movt	r0, #3
   18214:	ldr	r0, [r0]
   18218:	bl	11c14 <exit@plt>
   1821c:	mov	r0, #0
   18220:	bl	11c14 <exit@plt>

00018224 <argp_error@@Base>:
   18224:	sub	sp, sp, #8
   18228:	push	{r4, r5, r6, sl, fp, lr}
   1822c:	add	fp, sp, #16
   18230:	sub	sp, sp, #8
   18234:	mov	r6, r1
   18238:	mov	r4, r0
   1823c:	cmp	r0, #0
   18240:	str	r2, [fp, #8]
   18244:	str	r3, [fp, #12]
   18248:	beq	18278 <argp_error@@Base+0x54>
   1824c:	ldrb	r0, [r4, #16]
   18250:	tst	r0, #2
   18254:	bne	18268 <argp_error@@Base+0x44>
   18258:	add	r0, r4, #44	; 0x2c
   1825c:	ldr	r5, [r0]
   18260:	cmp	r5, #0
   18264:	bne	1828c <argp_error@@Base+0x68>
   18268:	sub	sp, fp, #16
   1826c:	pop	{r4, r5, r6, sl, fp, lr}
   18270:	add	sp, sp, #8
   18274:	bx	lr
   18278:	movw	r0, #5568	; 0x15c0
   1827c:	movt	r0, #3
   18280:	ldr	r5, [r0]
   18284:	cmp	r5, #0
   18288:	beq	18268 <argp_error@@Base+0x44>
   1828c:	mov	r0, r5
   18290:	bl	11d58 <flockfile@plt>
   18294:	add	r0, fp, #8
   18298:	cmp	r4, #0
   1829c:	mov	r1, r5
   182a0:	str	r0, [sp, #4]
   182a4:	movw	r0, #5560	; 0x15b8
   182a8:	movt	r0, #3
   182ac:	addne	r0, r4, #40	; 0x28
   182b0:	ldr	r0, [r0]
   182b4:	bl	11980 <fputs_unlocked@plt>
   182b8:	ldr	r0, [r5, #20]
   182bc:	ldr	r1, [r5, #24]
   182c0:	cmp	r0, r1
   182c4:	bcs	18350 <argp_error@@Base+0x12c>
   182c8:	add	r1, r0, #1
   182cc:	str	r1, [r5, #20]
   182d0:	mov	r1, #58	; 0x3a
   182d4:	strb	r1, [r0]
   182d8:	ldr	r0, [r5, #20]
   182dc:	ldr	r1, [r5, #24]
   182e0:	cmp	r0, r1
   182e4:	bcs	1836c <argp_error@@Base+0x148>
   182e8:	add	r1, r0, #1
   182ec:	str	r1, [r5, #20]
   182f0:	mov	r1, #32
   182f4:	strb	r1, [r0]
   182f8:	ldr	r2, [sp, #4]
   182fc:	mov	r0, r5
   18300:	mov	r1, r6
   18304:	bl	11d34 <vfprintf@plt>
   18308:	ldr	r0, [r5, #20]
   1830c:	ldr	r1, [r5, #24]
   18310:	cmp	r0, r1
   18314:	bcs	1837c <argp_error@@Base+0x158>
   18318:	add	r1, r0, #1
   1831c:	str	r1, [r5, #20]
   18320:	mov	r1, #10
   18324:	strb	r1, [r0]
   18328:	mov	r0, r4
   1832c:	mov	r1, r5
   18330:	mov	r2, #260	; 0x104
   18334:	bl	18168 <argp_state_help@@Base>
   18338:	mov	r0, r5
   1833c:	bl	11b18 <funlockfile@plt>
   18340:	sub	sp, fp, #16
   18344:	pop	{r4, r5, r6, sl, fp, lr}
   18348:	add	sp, sp, #8
   1834c:	bx	lr
   18350:	mov	r0, r5
   18354:	mov	r1, #58	; 0x3a
   18358:	bl	11cf8 <__overflow@plt>
   1835c:	ldr	r0, [r5, #20]
   18360:	ldr	r1, [r5, #24]
   18364:	cmp	r0, r1
   18368:	bcc	182e8 <argp_error@@Base+0xc4>
   1836c:	mov	r0, r5
   18370:	mov	r1, #32
   18374:	bl	11cf8 <__overflow@plt>
   18378:	b	182f8 <argp_error@@Base+0xd4>
   1837c:	mov	r0, r5
   18380:	mov	r1, #10
   18384:	bl	11cf8 <__overflow@plt>
   18388:	b	18328 <argp_error@@Base+0x104>

0001838c <argp_failure@@Base>:
   1838c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18390:	add	fp, sp, #24
   18394:	sub	sp, sp, #200	; 0xc8
   18398:	mov	r4, r3
   1839c:	mov	r7, r2
   183a0:	mov	r8, r1
   183a4:	mov	r5, r0
   183a8:	cmp	r0, #0
   183ac:	beq	183d0 <argp_failure@@Base+0x44>
   183b0:	ldrb	r0, [r5, #16]
   183b4:	tst	r0, #2
   183b8:	bne	18550 <argp_failure@@Base+0x1c4>
   183bc:	add	r0, r5, #44	; 0x2c
   183c0:	ldr	r6, [r0]
   183c4:	cmp	r6, #0
   183c8:	bne	183e4 <argp_failure@@Base+0x58>
   183cc:	b	18550 <argp_failure@@Base+0x1c4>
   183d0:	movw	r0, #5568	; 0x15c0
   183d4:	movt	r0, #3
   183d8:	ldr	r6, [r0]
   183dc:	cmp	r6, #0
   183e0:	beq	18550 <argp_failure@@Base+0x1c4>
   183e4:	mov	r0, r6
   183e8:	bl	11d58 <flockfile@plt>
   183ec:	movw	r0, #5560	; 0x15b8
   183f0:	cmp	r5, #0
   183f4:	mov	r1, r6
   183f8:	movt	r0, #3
   183fc:	addne	r0, r5, #40	; 0x28
   18400:	ldr	r0, [r0]
   18404:	bl	11980 <fputs_unlocked@plt>
   18408:	cmp	r4, #0
   1840c:	beq	18468 <argp_failure@@Base+0xdc>
   18410:	add	r0, fp, #8
   18414:	str	r0, [sp]
   18418:	ldr	r0, [r6, #20]
   1841c:	ldr	r1, [r6, #24]
   18420:	cmp	r0, r1
   18424:	bcs	18558 <argp_failure@@Base+0x1cc>
   18428:	add	r1, r0, #1
   1842c:	str	r1, [r6, #20]
   18430:	mov	r1, #58	; 0x3a
   18434:	strb	r1, [r0]
   18438:	ldr	r0, [r6, #20]
   1843c:	ldr	r1, [r6, #24]
   18440:	cmp	r0, r1
   18444:	bcs	18574 <argp_failure@@Base+0x1e8>
   18448:	add	r1, r0, #1
   1844c:	str	r1, [r6, #20]
   18450:	mov	r1, #32
   18454:	strb	r1, [r0]
   18458:	ldr	r2, [sp]
   1845c:	mov	r0, r6
   18460:	mov	r1, r4
   18464:	bl	11d34 <vfprintf@plt>
   18468:	cmp	r7, #0
   1846c:	beq	184ec <argp_failure@@Base+0x160>
   18470:	ldr	r0, [r6, #20]
   18474:	ldr	r1, [r6, #24]
   18478:	cmp	r0, r1
   1847c:	bcs	18584 <argp_failure@@Base+0x1f8>
   18480:	add	r1, r0, #1
   18484:	str	r1, [r6, #20]
   18488:	mov	r1, #58	; 0x3a
   1848c:	strb	r1, [r0]
   18490:	ldr	r0, [r6, #20]
   18494:	ldr	r1, [r6, #24]
   18498:	cmp	r0, r1
   1849c:	bcs	185a0 <argp_failure@@Base+0x214>
   184a0:	add	r1, r0, #1
   184a4:	str	r1, [r6, #20]
   184a8:	mov	r1, #32
   184ac:	strb	r1, [r0]
   184b0:	mov	r1, sp
   184b4:	mov	r0, r7
   184b8:	mov	r2, #200	; 0xc8
   184bc:	bl	11c68 <strerror_r@plt>
   184c0:	cmp	r0, #0
   184c4:	bne	184e4 <argp_failure@@Base+0x158>
   184c8:	mov	r0, r7
   184cc:	bl	11bcc <strerror@plt>
   184d0:	mov	r1, r0
   184d4:	movw	r0, #63646	; 0xf89e
   184d8:	cmp	r1, #0
   184dc:	movt	r0, #1
   184e0:	movne	r0, r1
   184e4:	mov	r1, r6
   184e8:	bl	11980 <fputs_unlocked@plt>
   184ec:	ldr	r0, [r6, #20]
   184f0:	ldr	r1, [r6, #24]
   184f4:	cmp	r0, r1
   184f8:	bcs	18534 <argp_failure@@Base+0x1a8>
   184fc:	add	r1, r0, #1
   18500:	str	r1, [r6, #20]
   18504:	mov	r1, #10
   18508:	strb	r1, [r0]
   1850c:	mov	r0, r6
   18510:	bl	11b18 <funlockfile@plt>
   18514:	cmp	r8, #0
   18518:	beq	18550 <argp_failure@@Base+0x1c4>
   1851c:	cmp	r5, #0
   18520:	ldrbne	r0, [r5, #16]
   18524:	tstne	r0, #32
   18528:	bne	18550 <argp_failure@@Base+0x1c4>
   1852c:	mov	r0, r8
   18530:	bl	11c14 <exit@plt>
   18534:	mov	r0, r6
   18538:	mov	r1, #10
   1853c:	bl	11cf8 <__overflow@plt>
   18540:	mov	r0, r6
   18544:	bl	11b18 <funlockfile@plt>
   18548:	cmp	r8, #0
   1854c:	bne	1851c <argp_failure@@Base+0x190>
   18550:	sub	sp, fp, #24
   18554:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18558:	mov	r0, r6
   1855c:	mov	r1, #58	; 0x3a
   18560:	bl	11cf8 <__overflow@plt>
   18564:	ldr	r0, [r6, #20]
   18568:	ldr	r1, [r6, #24]
   1856c:	cmp	r0, r1
   18570:	bcc	18448 <argp_failure@@Base+0xbc>
   18574:	mov	r0, r6
   18578:	mov	r1, #32
   1857c:	bl	11cf8 <__overflow@plt>
   18580:	b	18458 <argp_failure@@Base+0xcc>
   18584:	mov	r0, r6
   18588:	mov	r1, #58	; 0x3a
   1858c:	bl	11cf8 <__overflow@plt>
   18590:	ldr	r0, [r6, #20]
   18594:	ldr	r1, [r6, #24]
   18598:	cmp	r0, r1
   1859c:	bcc	184a0 <argp_failure@@Base+0x114>
   185a0:	mov	r0, r6
   185a4:	mov	r1, #32
   185a8:	bl	11cf8 <__overflow@plt>
   185ac:	b	184b0 <argp_failure@@Base+0x124>
   185b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185b4:	add	fp, sp, #28
   185b8:	sub	sp, sp, #52	; 0x34
   185bc:	ldr	r4, [r0]
   185c0:	ldr	r7, [r0, #16]
   185c4:	mov	r8, r0
   185c8:	mov	r0, #16
   185cc:	mov	sl, r1
   185d0:	bl	1ca78 <argp_parse@@Base+0x25e8>
   185d4:	cmp	r0, #0
   185d8:	beq	18ccc <argp_failure@@Base+0x940>
   185dc:	mov	r9, r0
   185e0:	mov	r0, #0
   185e4:	cmp	r4, #0
   185e8:	str	r8, [sp, #40]	; 0x28
   185ec:	mov	r1, r9
   185f0:	str	r9, [fp, #-32]	; 0xffffffe0
   185f4:	str	r0, [r1, #12]!
   185f8:	str	r1, [sp, #28]
   185fc:	str	r0, [r1, #-8]
   18600:	beq	18860 <argp_failure@@Base+0x4d4>
   18604:	ldrb	r0, [r4, #12]
   18608:	str	r7, [sp, #12]
   1860c:	tst	r0, #4
   18610:	bne	18cec <argp_failure@@Base+0x960>
   18614:	add	r5, r4, #12
   18618:	mov	r6, #0
   1861c:	mov	r8, #0
   18620:	ldr	r7, [r5, #-8]
   18624:	cmp	r7, #0
   18628:	bne	18664 <argp_failure@@Base+0x2d8>
   1862c:	b	18640 <argp_failure@@Base+0x2b4>
   18630:	add	r5, r5, #24
   18634:	ldr	r7, [r5, #-8]
   18638:	cmp	r7, #0
   1863c:	bne	18664 <argp_failure@@Base+0x2d8>
   18640:	ldr	r0, [r5, #-12]
   18644:	cmp	r0, #0
   18648:	bne	18664 <argp_failure@@Base+0x2d8>
   1864c:	ldr	r0, [r5, #4]
   18650:	cmp	r0, #0
   18654:	bne	18664 <argp_failure@@Base+0x2d8>
   18658:	ldr	r0, [r5, #8]
   1865c:	cmp	r0, #0
   18660:	beq	186a4 <argp_failure@@Base+0x318>
   18664:	ldr	r0, [r5]
   18668:	sub	r1, r7, #1
   1866c:	tst	r0, #4
   18670:	addeq	r6, r6, #1
   18674:	streq	r6, [r9, #4]
   18678:	cmp	r1, #254	; 0xfe
   1867c:	bhi	18630 <argp_failure@@Base+0x2a4>
   18680:	ands	r0, r0, #8
   18684:	bne	18630 <argp_failure@@Base+0x2a4>
   18688:	bl	11bfc <__ctype_b_loc@plt>
   1868c:	ldr	r0, [r0]
   18690:	add	r0, r0, r7, lsl #1
   18694:	ldrb	r0, [r0, #1]
   18698:	tst	r0, #64	; 0x40
   1869c:	addne	r8, r8, #1
   186a0:	b	18630 <argp_failure@@Base+0x2a4>
   186a4:	rsb	r0, r6, r6, lsl #3
   186a8:	lsl	r0, r0, #2
   186ac:	bl	1ca78 <argp_parse@@Base+0x25e8>
   186b0:	mov	r5, r0
   186b4:	str	r0, [r9]
   186b8:	add	r0, r8, #1
   186bc:	bl	1ca78 <argp_parse@@Base+0x25e8>
   186c0:	cmp	r5, #0
   186c4:	str	r0, [r9, #8]
   186c8:	movne	r7, r0
   186cc:	cmpne	r0, #0
   186d0:	bne	186f4 <argp_failure@@Base+0x368>
   186d4:	movw	r0, #64051	; 0xfa33
   186d8:	movw	r1, #63959	; 0xf9d7
   186dc:	movw	r3, #63971	; 0xf9e3
   186e0:	movw	r2, #474	; 0x1da
   186e4:	movt	r0, #1
   186e8:	movt	r1, #1
   186ec:	movt	r3, #1
   186f0:	bl	11e18 <__assert_fail@plt>
   186f4:	movw	r0, #37450	; 0x924a
   186f8:	movt	r0, #2340	; 0x924
   186fc:	cmp	r6, r0
   18700:	bcs	18d0c <argp_failure@@Base+0x980>
   18704:	mov	r8, #0
   18708:	mov	r0, #0
   1870c:	ldr	r1, [r4, #4]
   18710:	cmp	r1, #0
   18714:	bne	18758 <argp_failure@@Base+0x3cc>
   18718:	b	18734 <argp_failure@@Base+0x3a8>
   1871c:	mov	r4, r0
   18720:	add	r5, r5, #28
   18724:	mov	r0, r9
   18728:	ldr	r1, [r4, #4]
   1872c:	cmp	r1, #0
   18730:	bne	18758 <argp_failure@@Base+0x3cc>
   18734:	ldr	r2, [r4]
   18738:	cmp	r2, #0
   1873c:	bne	18758 <argp_failure@@Base+0x3cc>
   18740:	ldr	r2, [r4, #16]
   18744:	cmp	r2, #0
   18748:	bne	18758 <argp_failure@@Base+0x3cc>
   1874c:	ldr	r2, [r4, #20]
   18750:	cmp	r2, #0
   18754:	beq	1884c <argp_failure@@Base+0x4c0>
   18758:	stm	r5, {r4, r8}
   1875c:	str	r7, [r5, #8]
   18760:	ldr	r9, [r4, #20]
   18764:	cmp	r9, #0
   18768:	bne	18784 <argp_failure@@Base+0x3f8>
   1876c:	ldr	r2, [r4]
   18770:	cmp	r2, #0
   18774:	bne	18780 <argp_failure@@Base+0x3f4>
   18778:	cmp	r1, #0
   1877c:	addeq	r0, r0, #1
   18780:	mov	r9, r0
   18784:	ldr	r0, [sp, #40]	; 0x28
   18788:	mov	r1, #0
   1878c:	str	r9, [r5, #12]
   18790:	str	sl, [r5, #16]
   18794:	str	r0, [r5, #20]
   18798:	add	r0, r1, #1
   1879c:	str	r0, [r5, #4]
   187a0:	ldrb	r0, [r4, #12]
   187a4:	tst	r0, #8
   187a8:	bne	18800 <argp_failure@@Base+0x474>
   187ac:	ldr	r6, [r4, #4]
   187b0:	sub	r0, r6, #1
   187b4:	cmp	r0, #254	; 0xfe
   187b8:	bhi	18800 <argp_failure@@Base+0x474>
   187bc:	bl	11bfc <__ctype_b_loc@plt>
   187c0:	ldr	r0, [r0]
   187c4:	add	r0, r0, r6, lsl #1
   187c8:	ldrb	r0, [r0, #1]
   187cc:	tst	r0, #64	; 0x40
   187d0:	beq	18800 <argp_failure@@Base+0x474>
   187d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187d8:	ldr	r0, [r0, #8]
   187dc:	cmp	r0, r7
   187e0:	bcs	187fc <argp_failure@@Base+0x470>
   187e4:	ldrb	r1, [r0], #1
   187e8:	uxtb	r2, r6
   187ec:	cmp	r1, r2
   187f0:	beq	18800 <argp_failure@@Base+0x474>
   187f4:	cmp	r7, r0
   187f8:	bne	187e4 <argp_failure@@Base+0x458>
   187fc:	strb	r6, [r7], #1
   18800:	ldr	r1, [r4, #28]
   18804:	add	r0, r4, #24
   18808:	cmp	r1, #0
   1880c:	bne	18834 <argp_failure@@Base+0x4a8>
   18810:	ldr	r1, [r0]
   18814:	cmp	r1, #0
   18818:	bne	18834 <argp_failure@@Base+0x4a8>
   1881c:	ldr	r1, [r4, #40]	; 0x28
   18820:	cmp	r1, #0
   18824:	bne	18834 <argp_failure@@Base+0x4a8>
   18828:	ldr	r1, [r4, #44]	; 0x2c
   1882c:	cmp	r1, #0
   18830:	beq	1871c <argp_failure@@Base+0x390>
   18834:	ldrb	r1, [r4, #36]	; 0x24
   18838:	tst	r1, #4
   1883c:	beq	1871c <argp_failure@@Base+0x390>
   18840:	ldr	r1, [r5, #4]
   18844:	mov	r4, r0
   18848:	b	18798 <argp_failure@@Base+0x40c>
   1884c:	mov	r0, #0
   18850:	ldr	r8, [sp, #40]	; 0x28
   18854:	ldr	r9, [fp, #-32]	; 0xffffffe0
   18858:	strb	r0, [r7]
   1885c:	ldr	r7, [sp, #12]
   18860:	cmp	r7, #0
   18864:	beq	18ca0 <argp_failure@@Base+0x914>
   18868:	ldr	r0, [r7]
   1886c:	cmp	r0, #0
   18870:	beq	18ca0 <argp_failure@@Base+0x914>
   18874:	str	sl, [sp, #4]
   18878:	ldr	r4, [r7, #12]
   1887c:	cmp	r4, #0
   18880:	bne	188c0 <argp_failure@@Base+0x534>
   18884:	b	188c8 <argp_failure@@Base+0x53c>
   18888:	ldr	r1, [r6]
   1888c:	ldr	r2, [r6, #8]
   18890:	str	r1, [r9]
   18894:	stmib	r9, {r0, r2}
   18898:	mov	r0, #0
   1889c:	str	r0, [r6, #4]
   188a0:	mov	r0, r6
   188a4:	bl	1ba4c <argp_parse@@Base+0x15bc>
   188a8:	ldr	r0, [r7, #16]!
   188ac:	cmp	r0, #0
   188b0:	beq	18ca0 <argp_failure@@Base+0x914>
   188b4:	ldr	r4, [r7, #12]
   188b8:	cmp	r4, #0
   188bc:	beq	188c8 <argp_failure@@Base+0x53c>
   188c0:	ldr	r5, [r7, #8]
   188c4:	b	188d8 <argp_failure@@Base+0x54c>
   188c8:	ldr	r5, [r7, #8]
   188cc:	mov	r1, sl
   188d0:	cmp	r5, #0
   188d4:	beq	18930 <argp_failure@@Base+0x5a4>
   188d8:	ldr	r6, [r8, #16]
   188dc:	mov	r0, #28
   188e0:	bl	1ca78 <argp_parse@@Base+0x25e8>
   188e4:	mov	r1, r0
   188e8:	cmp	r0, #0
   188ec:	beq	18930 <argp_failure@@Base+0x5a4>
   188f0:	sub	r0, r7, r6
   188f4:	cmp	sl, #0
   188f8:	str	r5, [r1]
   188fc:	asr	r0, r0, #4
   18900:	stmib	r1, {r0, r4, sl}
   18904:	str	r8, [r1, #16]
   18908:	beq	18918 <argp_failure@@Base+0x58c>
   1890c:	ldr	r0, [sl, #20]
   18910:	add	r0, r0, #1
   18914:	b	1891c <argp_failure@@Base+0x590>
   18918:	mov	r0, #0
   1891c:	ldr	r3, [sp, #28]
   18920:	str	r0, [r1, #20]
   18924:	ldr	r2, [r3]
   18928:	str	r1, [r3]
   1892c:	str	r2, [r1, #24]
   18930:	ldr	r0, [r7]
   18934:	bl	185b0 <argp_failure@@Base+0x224>
   18938:	ldr	r1, [sp, #28]
   1893c:	mov	r6, r0
   18940:	ldr	r2, [r1]
   18944:	mov	r0, r1
   18948:	add	r1, r2, #24
   1894c:	cmp	r2, #0
   18950:	bne	18940 <argp_failure@@Base+0x5b4>
   18954:	ldr	r1, [r6, #12]
   18958:	str	r1, [r0]
   1895c:	mov	r0, #0
   18960:	str	r0, [r6, #12]
   18964:	ldr	r0, [r6, #4]
   18968:	cmp	r0, #0
   1896c:	beq	188a0 <argp_failure@@Base+0x514>
   18970:	ldr	r1, [r9, #4]
   18974:	cmp	r1, #0
   18978:	beq	18888 <argp_failure@@Base+0x4fc>
   1897c:	add	r5, r1, r0
   18980:	str	r1, [fp, #-36]	; 0xffffffdc
   18984:	rsb	r0, r5, r5, lsl #3
   18988:	lsl	r0, r0, #2
   1898c:	bl	1ca78 <argp_parse@@Base+0x25e8>
   18990:	ldr	r4, [r9, #8]
   18994:	str	r0, [sp, #24]
   18998:	mov	r0, r4
   1899c:	bl	11c20 <strlen@plt>
   189a0:	mov	r8, r0
   189a4:	ldr	r0, [r6, #8]
   189a8:	bl	11c20 <strlen@plt>
   189ac:	add	r0, r8, r0
   189b0:	str	r8, [sp, #16]
   189b4:	ldr	r8, [sp, #24]
   189b8:	add	r0, r0, #1
   189bc:	bl	1ca78 <argp_parse@@Base+0x25e8>
   189c0:	cmp	r8, #0
   189c4:	cmpne	r0, #0
   189c8:	beq	18cac <argp_failure@@Base+0x920>
   189cc:	str	r0, [sp, #36]	; 0x24
   189d0:	movw	r0, #37450	; 0x924a
   189d4:	str	r6, [sp, #20]
   189d8:	str	r7, [sp, #12]
   189dc:	str	r5, [sp, #8]
   189e0:	movt	r0, #2340	; 0x924
   189e4:	cmp	r5, r0
   189e8:	bcs	18d2c <argp_failure@@Base+0x9a0>
   189ec:	ldr	r5, [fp, #-36]	; 0xffffffdc
   189f0:	ldr	r1, [r9]
   189f4:	mov	r0, r8
   189f8:	rsb	r6, r5, r5, lsl #3
   189fc:	lsl	r2, r6, #2
   18a00:	bl	11a58 <memcpy@plt>
   18a04:	add	r0, r8, r6, lsl #2
   18a08:	ldr	r6, [sp, #20]
   18a0c:	ldm	r6, {r1, r2}
   18a10:	rsb	r2, r2, r2, lsl #3
   18a14:	lsl	r2, r2, #2
   18a18:	bl	11a58 <memcpy@plt>
   18a1c:	ldr	r0, [sp, #36]	; 0x24
   18a20:	ldr	r2, [sp, #16]
   18a24:	mov	r1, r4
   18a28:	bl	11a58 <memcpy@plt>
   18a2c:	tst	r5, #1
   18a30:	mov	r0, r5
   18a34:	beq	18a58 <argp_failure@@Base+0x6cc>
   18a38:	ldr	r1, [sp, #24]
   18a3c:	ldr	r2, [sp, #36]	; 0x24
   18a40:	ldr	r0, [r1, #8]
   18a44:	add	r8, r1, #28
   18a48:	sub	r0, r0, r4
   18a4c:	add	r0, r2, r0
   18a50:	str	r0, [r1, #8]
   18a54:	sub	r0, r5, #1
   18a58:	ldr	r3, [sp, #36]	; 0x24
   18a5c:	cmp	r5, #1
   18a60:	beq	18a90 <argp_failure@@Base+0x704>
   18a64:	ldr	r1, [r8, #8]
   18a68:	ldr	r2, [r8, #36]	; 0x24
   18a6c:	subs	r0, r0, #2
   18a70:	sub	r1, r1, r4
   18a74:	add	r1, r3, r1
   18a78:	str	r1, [r8, #8]
   18a7c:	sub	r1, r2, r4
   18a80:	add	r1, r3, r1
   18a84:	str	r1, [r8, #36]	; 0x24
   18a88:	add	r8, r8, #56	; 0x38
   18a8c:	bne	18a64 <argp_failure@@Base+0x6d8>
   18a90:	ldr	r4, [sp, #16]
   18a94:	add	r0, r3, r4
   18a98:	str	r0, [fp, #-36]	; 0xffffffdc
   18a9c:	ldr	r0, [r6, #4]
   18aa0:	cmp	r0, #0
   18aa4:	beq	18c1c <argp_failure@@Base+0x890>
   18aa8:	ldr	sl, [r6, #8]
   18aac:	cmp	r4, #0
   18ab0:	str	r0, [sp, #32]
   18ab4:	bgt	18ad4 <argp_failure@@Base+0x748>
   18ab8:	b	18b8c <argp_failure@@Base+0x800>
   18abc:	ldr	r0, [sp, #32]
   18ac0:	ldr	r9, [fp, #-32]	; 0xffffffe0
   18ac4:	add	r8, r8, #28
   18ac8:	subs	r0, r0, #1
   18acc:	str	r0, [sp, #32]
   18ad0:	beq	18c1c <argp_failure@@Base+0x890>
   18ad4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18ad8:	str	r0, [r8, #8]
   18adc:	ldr	r6, [r8, #4]
   18ae0:	cmp	r6, #0
   18ae4:	beq	18abc <argp_failure@@Base+0x730>
   18ae8:	ldr	r9, [r8]
   18aec:	ldrb	r0, [r9, #12]
   18af0:	tst	r0, #8
   18af4:	bne	18b0c <argp_failure@@Base+0x780>
   18af8:	b	18b24 <argp_failure@@Base+0x798>
   18afc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b00:	strb	r7, [r0], #1
   18b04:	str	r0, [fp, #-36]	; 0xffffffdc
   18b08:	add	sl, sl, #1
   18b0c:	subs	r6, r6, #1
   18b10:	add	r9, r9, #24
   18b14:	beq	18abc <argp_failure@@Base+0x730>
   18b18:	ldrb	r0, [r9, #12]
   18b1c:	tst	r0, #8
   18b20:	bne	18b0c <argp_failure@@Base+0x780>
   18b24:	ldr	r5, [r9, #4]
   18b28:	sub	r0, r5, #1
   18b2c:	cmp	r0, #254	; 0xfe
   18b30:	bhi	18b0c <argp_failure@@Base+0x780>
   18b34:	ldrb	r7, [sl]
   18b38:	bl	11bfc <__ctype_b_loc@plt>
   18b3c:	cmp	r5, r7
   18b40:	bne	18b0c <argp_failure@@Base+0x780>
   18b44:	ldr	r0, [r0]
   18b48:	ldr	r1, [sp, #36]	; 0x24
   18b4c:	add	r0, r0, r5, lsl #1
   18b50:	ldrh	r0, [r0]
   18b54:	ands	r0, r0, #16384	; 0x4000
   18b58:	mov	r0, r4
   18b5c:	beq	18b0c <argp_failure@@Base+0x780>
   18b60:	ldrb	r2, [r1], #1
   18b64:	cmp	r2, r7
   18b68:	beq	18b08 <argp_failure@@Base+0x77c>
   18b6c:	subs	r0, r0, #1
   18b70:	bne	18b60 <argp_failure@@Base+0x7d4>
   18b74:	b	18afc <argp_failure@@Base+0x770>
   18b78:	ldr	r0, [sp, #32]
   18b7c:	add	r8, r8, #28
   18b80:	subs	r0, r0, #1
   18b84:	str	r0, [sp, #32]
   18b88:	beq	18c1c <argp_failure@@Base+0x890>
   18b8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b90:	str	r0, [r8, #8]
   18b94:	ldr	r6, [r8, #4]
   18b98:	cmp	r6, #0
   18b9c:	beq	18b78 <argp_failure@@Base+0x7ec>
   18ba0:	ldr	r0, [r8]
   18ba4:	add	r7, r0, #12
   18ba8:	ldrb	r0, [r7]
   18bac:	tst	r0, #8
   18bb0:	beq	18bcc <argp_failure@@Base+0x840>
   18bb4:	add	r7, r7, #24
   18bb8:	subs	r6, r6, #1
   18bbc:	beq	18b78 <argp_failure@@Base+0x7ec>
   18bc0:	ldrb	r0, [r7]
   18bc4:	tst	r0, #8
   18bc8:	bne	18bb4 <argp_failure@@Base+0x828>
   18bcc:	ldr	r4, [r7, #-8]
   18bd0:	sub	r0, r4, #1
   18bd4:	cmp	r0, #254	; 0xfe
   18bd8:	bhi	18bb4 <argp_failure@@Base+0x828>
   18bdc:	ldrb	r5, [sl]
   18be0:	bl	11bfc <__ctype_b_loc@plt>
   18be4:	cmp	r4, r5
   18be8:	bne	18bb4 <argp_failure@@Base+0x828>
   18bec:	ldr	r0, [r0]
   18bf0:	add	r0, r0, r4, lsl #1
   18bf4:	ldrh	r0, [r0]
   18bf8:	ands	r0, r0, #16384	; 0x4000
   18bfc:	ldrne	r0, [fp, #-36]	; 0xffffffdc
   18c00:	addne	sl, sl, #1
   18c04:	strbne	r5, [r0], #1
   18c08:	strne	r0, [fp, #-36]	; 0xffffffdc
   18c0c:	add	r7, r7, #24
   18c10:	subs	r6, r6, #1
   18c14:	bne	18bc0 <argp_failure@@Base+0x834>
   18c18:	b	18b78 <argp_failure@@Base+0x7ec>
   18c1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18c20:	mov	r0, #0
   18c24:	strb	r0, [r1]
   18c28:	ldr	r0, [r9]
   18c2c:	bl	1ba4c <argp_parse@@Base+0x15bc>
   18c30:	ldr	r0, [r9, #8]
   18c34:	bl	1ba4c <argp_parse@@Base+0x15bc>
   18c38:	ldr	r0, [sp, #24]
   18c3c:	ldr	r6, [sp, #20]
   18c40:	str	r0, [r9]
   18c44:	ldr	r0, [sp, #8]
   18c48:	str	r0, [r9, #4]
   18c4c:	ldr	r0, [sp, #36]	; 0x24
   18c50:	str	r0, [r9, #8]
   18c54:	ldr	r0, [r6, #12]
   18c58:	cmp	r0, #0
   18c5c:	beq	18c74 <argp_failure@@Base+0x8e8>
   18c60:	ldr	r4, [r0, #24]
   18c64:	bl	1ba4c <argp_parse@@Base+0x15bc>
   18c68:	cmp	r4, #0
   18c6c:	mov	r0, r4
   18c70:	bne	18c60 <argp_failure@@Base+0x8d4>
   18c74:	ldr	r0, [r6, #4]
   18c78:	ldr	sl, [sp, #4]
   18c7c:	ldr	r8, [sp, #40]	; 0x28
   18c80:	ldr	r7, [sp, #12]
   18c84:	cmp	r0, #0
   18c88:	beq	188a0 <argp_failure@@Base+0x514>
   18c8c:	ldr	r0, [r6]
   18c90:	bl	1ba4c <argp_parse@@Base+0x15bc>
   18c94:	ldr	r0, [r6, #8]
   18c98:	bl	1ba4c <argp_parse@@Base+0x15bc>
   18c9c:	b	188a0 <argp_failure@@Base+0x514>
   18ca0:	mov	r0, r9
   18ca4:	sub	sp, fp, #28
   18ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18cac:	movw	r0, #64143	; 0xfa8f
   18cb0:	movw	r1, #63959	; 0xf9d7
   18cb4:	movw	r3, #64168	; 0xfaa8
   18cb8:	movw	r2, #970	; 0x3ca
   18cbc:	movt	r0, #1
   18cc0:	movt	r1, #1
   18cc4:	movt	r3, #1
   18cc8:	bl	11e18 <__assert_fail@plt>
   18ccc:	movw	r0, #63955	; 0xf9d3
   18cd0:	movw	r1, #63959	; 0xf9d7
   18cd4:	movw	r3, #63971	; 0xf9e3
   18cd8:	movw	r2, #450	; 0x1c2
   18cdc:	movt	r0, #1
   18ce0:	movt	r1, #1
   18ce4:	movt	r3, #1
   18ce8:	bl	11e18 <__assert_fail@plt>
   18cec:	movw	r0, #64035	; 0xfa23
   18cf0:	movw	r1, #63959	; 0xf9d7
   18cf4:	movw	r3, #63971	; 0xf9e3
   18cf8:	mov	r2, #460	; 0x1cc
   18cfc:	movt	r0, #1
   18d00:	movt	r1, #1
   18d04:	movt	r3, #1
   18d08:	bl	11e18 <__assert_fail@plt>
   18d0c:	movw	r0, #64086	; 0xfa56
   18d10:	movw	r1, #63959	; 0xf9d7
   18d14:	movw	r3, #63971	; 0xf9e3
   18d18:	mov	r2, #476	; 0x1dc
   18d1c:	movt	r0, #1
   18d20:	movt	r1, #1
   18d24:	movt	r3, #1
   18d28:	bl	11e18 <__assert_fail@plt>
   18d2c:	movw	r0, #64091	; 0xfa5b
   18d30:	movw	r1, #63959	; 0xf9d7
   18d34:	movw	r3, #64168	; 0xfaa8
   18d38:	mov	r2, #972	; 0x3cc
   18d3c:	movt	r0, #1
   18d40:	movt	r1, #1
   18d44:	movt	r3, #1
   18d48:	bl	11e18 <__assert_fail@plt>
   18d4c:	push	{r4, r5, fp, lr}
   18d50:	add	fp, sp, #8
   18d54:	mov	r5, r1
   18d58:	cmp	r0, #0
   18d5c:	beq	18dac <argp_failure@@Base+0xa20>
   18d60:	mov	r1, #10
   18d64:	bl	11c38 <strchr@plt>
   18d68:	cmp	r0, #0
   18d6c:	mov	r4, r0
   18d70:	movwne	r4, #1
   18d74:	cmp	r5, #0
   18d78:	beq	18db8 <argp_failure@@Base+0xa2c>
   18d7c:	ldr	r1, [r5]
   18d80:	cmp	r1, #0
   18d84:	beq	18db8 <argp_failure@@Base+0xa2c>
   18d88:	add	r5, r5, #16
   18d8c:	ldr	r0, [r1, #8]
   18d90:	ldr	r1, [r1, #16]
   18d94:	bl	18d4c <argp_failure@@Base+0x9c0>
   18d98:	ldr	r1, [r5], #16
   18d9c:	add	r4, r0, r4
   18da0:	cmp	r1, #0
   18da4:	bne	18d8c <argp_failure@@Base+0xa00>
   18da8:	b	18db8 <argp_failure@@Base+0xa2c>
   18dac:	mov	r4, #0
   18db0:	cmp	r5, #0
   18db4:	bne	18d7c <argp_failure@@Base+0x9f0>
   18db8:	mov	r0, r4
   18dbc:	pop	{r4, r5, fp, pc}
   18dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18dc4:	add	fp, sp, #28
   18dc8:	sub	sp, sp, #28
   18dcc:	ldr	r4, [r0, #4]
   18dd0:	str	r1, [fp, #-40]	; 0xffffffd8
   18dd4:	cmp	r4, #0
   18dd8:	beq	191d4 <argp_failure@@Base+0xe48>
   18ddc:	mov	r5, r0
   18de0:	ldr	r0, [r0, #8]
   18de4:	bl	11c20 <strlen@plt>
   18de8:	add	r0, r0, #8
   18dec:	bic	r0, r0, #7
   18df0:	sub	r0, sp, r0
   18df4:	mov	sp, r0
   18df8:	ldr	r7, [r5]
   18dfc:	str	r0, [fp, #-52]	; 0xffffffcc
   18e00:	str	r0, [fp, #-48]	; 0xffffffd0
   18e04:	str	r5, [fp, #-44]	; 0xffffffd4
   18e08:	ldr	r6, [r7, #4]
   18e0c:	str	r4, [fp, #-36]	; 0xffffffdc
   18e10:	cmp	r6, #0
   18e14:	bne	18e3c <argp_failure@@Base+0xab0>
   18e18:	ldr	r4, [fp, #-36]	; 0xffffffdc
   18e1c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   18e20:	add	r7, r7, #28
   18e24:	subs	r4, r4, #1
   18e28:	beq	18ef0 <argp_failure@@Base+0xb64>
   18e2c:	ldr	r6, [r7, #4]
   18e30:	str	r4, [fp, #-36]	; 0xffffffdc
   18e34:	cmp	r6, #0
   18e38:	beq	18e18 <argp_failure@@Base+0xa8c>
   18e3c:	ldr	r4, [r7]
   18e40:	ldr	r5, [r7, #8]
   18e44:	mov	sl, r4
   18e48:	ldr	r8, [sl, #12]
   18e4c:	tst	r8, #8
   18e50:	bne	18e5c <argp_failure@@Base+0xad0>
   18e54:	b	18e74 <argp_failure@@Base+0xae8>
   18e58:	add	r5, r5, #1
   18e5c:	subs	r6, r6, #1
   18e60:	add	sl, sl, #24
   18e64:	beq	18e18 <argp_failure@@Base+0xa8c>
   18e68:	ldr	r8, [sl, #12]
   18e6c:	tst	r8, #8
   18e70:	bne	18e5c <argp_failure@@Base+0xad0>
   18e74:	ldr	r9, [sl, #4]
   18e78:	sub	r0, r9, #1
   18e7c:	cmp	r0, #254	; 0xfe
   18e80:	bhi	18e5c <argp_failure@@Base+0xad0>
   18e84:	bl	11bfc <__ctype_b_loc@plt>
   18e88:	ldr	r0, [r0]
   18e8c:	add	r0, r0, r9, lsl #1
   18e90:	ldrb	r0, [r0, #1]
   18e94:	tst	r0, #64	; 0x40
   18e98:	beq	18e5c <argp_failure@@Base+0xad0>
   18e9c:	ldrb	r0, [r5]
   18ea0:	cmp	r9, r0
   18ea4:	bne	18e5c <argp_failure@@Base+0xad0>
   18ea8:	tst	r8, #4
   18eac:	moveq	r4, sl
   18eb0:	tst	r8, #2
   18eb4:	bne	18e58 <argp_failure@@Base+0xacc>
   18eb8:	ldr	r0, [sl, #8]
   18ebc:	cmp	r0, #0
   18ec0:	bne	18e58 <argp_failure@@Base+0xacc>
   18ec4:	ldr	r0, [r4, #8]
   18ec8:	cmp	r0, #0
   18ecc:	bne	18e58 <argp_failure@@Base+0xacc>
   18ed0:	ldr	r0, [r4, #12]
   18ed4:	orr	r0, r0, r8
   18ed8:	tst	r0, #16
   18edc:	bne	18e58 <argp_failure@@Base+0xacc>
   18ee0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18ee4:	strb	r9, [r0], #1
   18ee8:	str	r0, [fp, #-48]	; 0xffffffd0
   18eec:	b	18e58 <argp_failure@@Base+0xacc>
   18ef0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18ef4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18ef8:	cmp	r1, r2
   18efc:	bls	18f18 <argp_failure@@Base+0xb8c>
   18f00:	mov	r0, #0
   18f04:	strb	r0, [r1]
   18f08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f0c:	movw	r1, #64212	; 0xfad4
   18f10:	movt	r1, #1
   18f14:	bl	1d230 <argp_parse@@Base+0x2da0>
   18f18:	ldr	r5, [r6, #4]
   18f1c:	cmp	r5, #0
   18f20:	beq	191d4 <argp_failure@@Base+0xe48>
   18f24:	ldr	r8, [r6]
   18f28:	ldr	r9, [r8, #4]
   18f2c:	cmp	r9, #0
   18f30:	bne	18f4c <argp_failure@@Base+0xbc0>
   18f34:	subs	r5, r5, #1
   18f38:	add	r8, r8, #28
   18f3c:	beq	190f0 <argp_failure@@Base+0xd64>
   18f40:	ldr	r9, [r8, #4]
   18f44:	cmp	r9, #0
   18f48:	beq	18f34 <argp_failure@@Base+0xba8>
   18f4c:	ldr	sl, [r8]
   18f50:	ldr	r4, [r8, #8]
   18f54:	str	sl, [fp, #-36]	; 0xffffffdc
   18f58:	ldr	r6, [sl, #12]
   18f5c:	tst	r6, #8
   18f60:	bne	18f80 <argp_failure@@Base+0xbf4>
   18f64:	b	18f98 <argp_failure@@Base+0xc0c>
   18f68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f6c:	movw	r1, #64219	; 0xfadb
   18f70:	mov	r2, r7
   18f74:	movt	r1, #1
   18f78:	bl	1d230 <argp_parse@@Base+0x2da0>
   18f7c:	add	r4, r4, #1
   18f80:	subs	r9, r9, #1
   18f84:	add	sl, sl, #24
   18f88:	beq	18f34 <argp_failure@@Base+0xba8>
   18f8c:	ldr	r6, [sl, #12]
   18f90:	tst	r6, #8
   18f94:	bne	18f80 <argp_failure@@Base+0xbf4>
   18f98:	ldr	r7, [sl, #4]
   18f9c:	sub	r0, r7, #1
   18fa0:	cmp	r0, #254	; 0xfe
   18fa4:	bhi	18f80 <argp_failure@@Base+0xbf4>
   18fa8:	bl	11bfc <__ctype_b_loc@plt>
   18fac:	ldr	r0, [r0]
   18fb0:	add	r0, r0, r7, lsl #1
   18fb4:	ldrb	r0, [r0, #1]
   18fb8:	tst	r0, #64	; 0x40
   18fbc:	beq	18f80 <argp_failure@@Base+0xbf4>
   18fc0:	ldrb	r0, [r4]
   18fc4:	cmp	r7, r0
   18fc8:	bne	18f80 <argp_failure@@Base+0xbf4>
   18fcc:	tst	r6, #4
   18fd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18fd4:	moveq	r0, sl
   18fd8:	tst	r6, #2
   18fdc:	str	r0, [fp, #-36]	; 0xffffffdc
   18fe0:	bne	18f7c <argp_failure@@Base+0xbf0>
   18fe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18fe8:	ldr	r3, [sl, #8]
   18fec:	ldr	r0, [r0, #12]
   18ff0:	cmp	r3, #0
   18ff4:	orr	r0, r0, r6
   18ff8:	bne	19004 <argp_failure@@Base+0xc78>
   18ffc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19000:	ldr	r3, [r1, #8]
   19004:	tst	r0, #16
   19008:	bne	18f7c <argp_failure@@Base+0xbf0>
   1900c:	cmp	r3, #0
   19010:	beq	18f7c <argp_failure@@Base+0xbf0>
   19014:	tst	r0, #1
   19018:	bne	18f68 <argp_failure@@Base+0xbdc>
   1901c:	mov	r0, r3
   19020:	str	r3, [fp, #-48]	; 0xffffffd0
   19024:	bl	11c20 <strlen@plt>
   19028:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1902c:	add	r6, r0, #6
   19030:	ldr	r2, [r7, #24]
   19034:	ldr	r0, [r7, #28]
   19038:	ldr	r1, [r7, #16]
   1903c:	sub	r2, r0, r2
   19040:	cmp	r2, r1
   19044:	bls	19054 <argp_failure@@Base+0xcc8>
   19048:	mov	r0, r7
   1904c:	bl	1cbc8 <argp_parse@@Base+0x2738>
   19050:	ldr	r0, [r7, #28]
   19054:	ldr	r3, [r7, #20]
   19058:	ldr	r2, [r7, #8]
   1905c:	ldr	r1, [r7, #32]
   19060:	cmp	r3, #0
   19064:	addgt	r6, r6, r3
   19068:	cmp	r6, r2
   1906c:	bcs	190a4 <argp_failure@@Base+0xd18>
   19070:	ldr	r6, [fp, #-48]	; 0xffffffd0
   19074:	cmp	r0, r1
   19078:	bcc	19094 <argp_failure@@Base+0xd08>
   1907c:	mov	r0, r7
   19080:	mov	r1, #1
   19084:	bl	1d144 <argp_parse@@Base+0x2cb4>
   19088:	cmp	r0, #0
   1908c:	beq	190d8 <argp_failure@@Base+0xd4c>
   19090:	ldr	r0, [r7, #28]
   19094:	add	r1, r0, #1
   19098:	str	r1, [r7, #28]
   1909c:	mov	r1, #32
   190a0:	b	190d4 <argp_failure@@Base+0xd48>
   190a4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   190a8:	cmp	r0, r1
   190ac:	bcc	190c8 <argp_failure@@Base+0xd3c>
   190b0:	mov	r0, r7
   190b4:	mov	r1, #1
   190b8:	bl	1d144 <argp_parse@@Base+0x2cb4>
   190bc:	cmp	r0, #0
   190c0:	beq	190d8 <argp_failure@@Base+0xd4c>
   190c4:	ldr	r0, [r7, #28]
   190c8:	add	r1, r0, #1
   190cc:	str	r1, [r7, #28]
   190d0:	mov	r1, #10
   190d4:	strb	r1, [r0]
   190d8:	ldr	r2, [sl, #4]
   190dc:	movw	r1, #64230	; 0xfae6
   190e0:	mov	r0, r7
   190e4:	mov	r3, r6
   190e8:	movt	r1, #1
   190ec:	b	18f78 <argp_failure@@Base+0xbec>
   190f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190f4:	ldr	r4, [r0, #4]
   190f8:	cmp	r4, #0
   190fc:	beq	191d4 <argp_failure@@Base+0xe48>
   19100:	ldr	r6, [r0]
   19104:	movw	sl, #64263	; 0xfb07
   19108:	movw	r9, #64239	; 0xfaef
   1910c:	movt	sl, #1
   19110:	movt	r9, #1
   19114:	ldr	r7, [r6, #4]
   19118:	cmp	r7, #0
   1911c:	bne	19138 <argp_failure@@Base+0xdac>
   19120:	subs	r4, r4, #1
   19124:	add	r6, r6, #28
   19128:	beq	191d4 <argp_failure@@Base+0xe48>
   1912c:	ldr	r7, [r6, #4]
   19130:	cmp	r7, #0
   19134:	beq	19120 <argp_failure@@Base+0xd94>
   19138:	ldr	r8, [r6]
   1913c:	mov	r5, r8
   19140:	ldr	r2, [r5]
   19144:	cmp	r2, #0
   19148:	bne	19174 <argp_failure@@Base+0xde8>
   1914c:	b	1915c <argp_failure@@Base+0xdd0>
   19150:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19154:	mov	r1, sl
   19158:	bl	1d230 <argp_parse@@Base+0x2da0>
   1915c:	subs	r7, r7, #1
   19160:	add	r5, r5, #24
   19164:	beq	19120 <argp_failure@@Base+0xd94>
   19168:	ldr	r2, [r5]
   1916c:	cmp	r2, #0
   19170:	beq	1915c <argp_failure@@Base+0xdd0>
   19174:	ldr	r0, [r5, #12]
   19178:	tst	r0, #4
   1917c:	moveq	r8, r5
   19180:	tst	r0, #2
   19184:	bne	1915c <argp_failure@@Base+0xdd0>
   19188:	ldr	r3, [r5, #8]
   1918c:	ldr	r1, [r8, #12]
   19190:	cmp	r3, #0
   19194:	orr	r0, r1, r0
   19198:	ldreq	r3, [r8, #8]
   1919c:	tst	r0, #16
   191a0:	bne	1915c <argp_failure@@Base+0xdd0>
   191a4:	cmp	r3, #0
   191a8:	beq	19150 <argp_failure@@Base+0xdc4>
   191ac:	tst	r0, #1
   191b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191b4:	movne	r1, r9
   191b8:	movweq	r1, #64252	; 0xfafc
   191bc:	movteq	r1, #1
   191c0:	bl	1d230 <argp_parse@@Base+0x2da0>
   191c4:	subs	r7, r7, #1
   191c8:	add	r5, r5, #24
   191cc:	bne	19168 <argp_failure@@Base+0xddc>
   191d0:	b	19120 <argp_failure@@Base+0xd94>
   191d4:	sub	sp, fp, #28
   191d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191e0:	add	fp, sp, #28
   191e4:	sub	sp, sp, #28
   191e8:	ldr	r5, [r0, #8]
   191ec:	mov	r7, r0
   191f0:	ldr	sl, [r0, #16]
   191f4:	ldr	r0, [r2]
   191f8:	mov	r4, r3
   191fc:	mov	r9, r2
   19200:	mov	r8, r1
   19204:	cmp	r7, #0
   19208:	mov	r6, r5
   1920c:	str	r0, [sp, #20]
   19210:	beq	1924c <argp_failure@@Base+0xec0>
   19214:	ldr	r0, [r7, #20]
   19218:	mov	r6, r5
   1921c:	cmp	r0, #0
   19220:	beq	1924c <argp_failure@@Base+0xec0>
   19224:	mov	r0, r7
   19228:	mov	r1, r8
   1922c:	bl	1b1bc <argp_parse@@Base+0xd2c>
   19230:	ldr	r3, [r7, #20]
   19234:	mov	r2, r0
   19238:	movw	r0, #6
   1923c:	mov	r1, r5
   19240:	movt	r0, #512	; 0x200
   19244:	blx	r3
   19248:	mov	r6, r0
   1924c:	cmp	r6, #0
   19250:	beq	192b4 <argp_failure@@Base+0xf28>
   19254:	mov	r0, r6
   19258:	mov	r1, #10
   1925c:	bl	11a10 <strchrnul@plt>
   19260:	mov	r7, r0
   19264:	ldrb	r0, [r0]
   19268:	str	r5, [sp, #12]
   1926c:	str	r6, [sp, #16]
   19270:	stmib	sp, {r8, sl}
   19274:	cmp	r0, #0
   19278:	beq	19324 <argp_failure@@Base+0xf98>
   1927c:	ldr	r0, [sp, #20]
   19280:	ldrb	r6, [r0]
   19284:	cmp	r6, #0
   19288:	beq	19330 <argp_failure@@Base+0xfa4>
   1928c:	mov	r8, #0
   19290:	add	sl, r7, #1
   19294:	mov	r1, #10
   19298:	mov	r0, sl
   1929c:	bl	11a10 <strchrnul@plt>
   192a0:	add	r8, r8, #1
   192a4:	mov	r7, r0
   192a8:	cmp	r8, r6
   192ac:	bcc	19290 <argp_failure@@Base+0xf04>
   192b0:	b	19334 <argp_failure@@Base+0xfa8>
   192b4:	mov	r0, #0
   192b8:	mov	r7, #0
   192bc:	str	r0, [sp, #24]
   192c0:	cmp	sl, #0
   192c4:	beq	19494 <argp_failure@@Base+0x1108>
   192c8:	ldr	r0, [sl]
   192cc:	cmp	r0, #0
   192d0:	beq	19494 <argp_failure@@Base+0x1108>
   192d4:	add	r6, sl, #16
   192d8:	ldr	r5, [fp, #8]
   192dc:	ldr	sl, [sp, #24]
   192e0:	mov	r1, r8
   192e4:	mov	r2, r9
   192e8:	mov	r3, r4
   192ec:	str	r5, [sp]
   192f0:	bl	191dc <argp_failure@@Base+0xe50>
   192f4:	clz	r0, r0
   192f8:	lsr	r4, r0, #5
   192fc:	ldr	r0, [r6], #16
   19300:	cmp	r0, #0
   19304:	bne	192e0 <argp_failure@@Base+0xf54>
   19308:	cmp	sl, #0
   1930c:	cmpne	r4, #0
   19310:	bne	194a4 <argp_failure@@Base+0x1118>
   19314:	clz	r0, r4
   19318:	lsr	r0, r0, #5
   1931c:	sub	sp, fp, #28
   19320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19324:	mov	r0, #0
   19328:	mov	sl, r6
   1932c:	b	19344 <argp_failure@@Base+0xfb8>
   19330:	ldr	sl, [sp, #16]
   19334:	ldr	r0, [r9]
   19338:	add	r0, r0, #1
   1933c:	str	r0, [r9]
   19340:	mov	r0, #1
   19344:	str	r0, [sp, #24]
   19348:	ldr	r8, [fp, #8]
   1934c:	sub	r2, r7, sl
   19350:	add	r6, r2, #1
   19354:	ldr	r3, [r8, #24]
   19358:	ldr	r0, [r8, #28]
   1935c:	ldr	r1, [r8, #16]
   19360:	sub	r3, r0, r3
   19364:	cmp	r3, r1
   19368:	bls	19380 <argp_failure@@Base+0xff4>
   1936c:	mov	r0, r8
   19370:	mov	r5, r2
   19374:	bl	1cbc8 <argp_parse@@Base+0x2738>
   19378:	ldr	r0, [r8, #28]
   1937c:	mov	r2, r5
   19380:	ldr	r3, [r8, #20]
   19384:	ldr	r5, [r8, #8]
   19388:	ldr	r1, [r8, #32]
   1938c:	cmp	r3, #0
   19390:	addgt	r6, r6, r3
   19394:	cmp	r6, r5
   19398:	bcs	193e0 <argp_failure@@Base+0x1054>
   1939c:	ldr	r8, [sp, #4]
   193a0:	cmp	r0, r1
   193a4:	bcc	193cc <argp_failure@@Base+0x1040>
   193a8:	ldr	r6, [fp, #8]
   193ac:	mov	r1, #1
   193b0:	mov	r5, r2
   193b4:	mov	r0, r6
   193b8:	bl	1d144 <argp_parse@@Base+0x2cb4>
   193bc:	mov	r2, r5
   193c0:	cmp	r0, #0
   193c4:	beq	19424 <argp_failure@@Base+0x1098>
   193c8:	ldr	r0, [r6, #28]
   193cc:	ldr	r6, [fp, #8]
   193d0:	add	r1, r0, #1
   193d4:	str	r1, [r6, #28]
   193d8:	mov	r1, #32
   193dc:	b	19420 <argp_failure@@Base+0x1094>
   193e0:	ldr	r8, [sp, #4]
   193e4:	cmp	r0, r1
   193e8:	bcc	19410 <argp_failure@@Base+0x1084>
   193ec:	ldr	r6, [fp, #8]
   193f0:	mov	r1, #1
   193f4:	mov	r5, r2
   193f8:	mov	r0, r6
   193fc:	bl	1d144 <argp_parse@@Base+0x2cb4>
   19400:	mov	r2, r5
   19404:	cmp	r0, #0
   19408:	beq	19424 <argp_failure@@Base+0x1098>
   1940c:	ldr	r0, [r6, #28]
   19410:	ldr	r6, [fp, #8]
   19414:	add	r1, r0, #1
   19418:	str	r1, [r6, #28]
   1941c:	mov	r1, #10
   19420:	strb	r1, [r0]
   19424:	ldr	r0, [r6, #28]
   19428:	ldr	r1, [r6, #32]
   1942c:	add	r3, r0, r2
   19430:	cmp	r3, r1
   19434:	bls	1945c <argp_failure@@Base+0x10d0>
   19438:	mov	r0, r6
   1943c:	mov	r1, r2
   19440:	mov	r5, r2
   19444:	bl	1d144 <argp_parse@@Base+0x2cb4>
   19448:	cmp	r0, #0
   1944c:	beq	19474 <argp_failure@@Base+0x10e8>
   19450:	ldr	r6, [fp, #8]
   19454:	mov	r2, r5
   19458:	ldr	r0, [r6, #28]
   1945c:	mov	r1, sl
   19460:	mov	r5, r2
   19464:	bl	11a58 <memcpy@plt>
   19468:	ldr	r0, [r6, #28]
   1946c:	add	r0, r0, r5
   19470:	str	r0, [r6, #28]
   19474:	ldr	r0, [sp, #16]
   19478:	ldr	r1, [sp, #12]
   1947c:	cmp	r0, r1
   19480:	beq	19488 <argp_failure@@Base+0x10fc>
   19484:	bl	1ba4c <argp_parse@@Base+0x15bc>
   19488:	ldr	sl, [sp, #8]
   1948c:	cmp	sl, #0
   19490:	bne	192c8 <argp_failure@@Base+0xf3c>
   19494:	ldr	sl, [sp, #24]
   19498:	cmp	sl, #0
   1949c:	cmpne	r4, #0
   194a0:	beq	19314 <argp_failure@@Base+0xf88>
   194a4:	ldr	r2, [sp, #20]
   194a8:	ldrb	r1, [r7]
   194ac:	ldrb	r0, [r2]
   194b0:	cmp	r1, #0
   194b4:	beq	194d4 <argp_failure@@Base+0x1148>
   194b8:	add	r0, r0, #1
   194bc:	mov	r4, #0
   194c0:	strb	r0, [r2]
   194c4:	clz	r0, r4
   194c8:	lsr	r0, r0, #5
   194cc:	sub	sp, fp, #28
   194d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194d4:	cmp	r0, #0
   194d8:	movne	r0, #0
   194dc:	strbne	r0, [r2]
   194e0:	clz	r0, r4
   194e4:	lsr	r0, r0, #5
   194e8:	sub	sp, fp, #28
   194ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194f4:	add	fp, sp, #28
   194f8:	sub	sp, sp, #28
   194fc:	ldr	r6, [r0, #12]
   19500:	mov	r5, r0
   19504:	ldr	r0, [r0, #16]
   19508:	mov	sl, r2
   1950c:	mov	r7, #0
   19510:	str	r3, [sp, #24]
   19514:	str	r1, [sp, #20]
   19518:	cmp	r6, #0
   1951c:	str	r0, [sp, #16]
   19520:	beq	1955c <argp_failure@@Base+0x11d0>
   19524:	mov	r0, r6
   19528:	mov	r1, #11
   1952c:	bl	11c38 <strchr@plt>
   19530:	cmp	r0, #0
   19534:	mov	r9, r0
   19538:	mov	r4, r0
   1953c:	subne	r9, r9, r6
   19540:	cmp	sl, #0
   19544:	movne	r9, #0
   19548:	cmp	r0, #0
   1954c:	addne	r4, r4, #1
   19550:	cmp	sl, #0
   19554:	moveq	r4, r6
   19558:	b	19564 <argp_failure@@Base+0x11d8>
   1955c:	mov	r9, #0
   19560:	mov	r4, #0
   19564:	ldr	r0, [r5, #20]
   19568:	movw	r6, #1
   1956c:	movt	r6, #512	; 0x200
   19570:	cmp	r0, #0
   19574:	beq	1967c <argp_failure@@Base+0x12f0>
   19578:	cmp	r9, #0
   1957c:	beq	19590 <argp_failure@@Base+0x1204>
   19580:	mov	r0, r4
   19584:	mov	r1, r9
   19588:	bl	11a40 <strndup@plt>
   1958c:	mov	r4, r0
   19590:	ldr	r1, [sp, #20]
   19594:	mov	r0, r5
   19598:	bl	1b1bc <argp_parse@@Base+0xd2c>
   1959c:	ldr	r3, [r5, #20]
   195a0:	mov	r7, r0
   195a4:	cmp	sl, #0
   195a8:	mov	r0, r6
   195ac:	mov	r1, r4
   195b0:	addne	r0, r0, #1
   195b4:	mov	r2, r7
   195b8:	blx	r3
   195bc:	mov	r3, r0
   195c0:	cmp	r3, #0
   195c4:	str	r7, [sp, #8]
   195c8:	beq	1968c <argp_failure@@Base+0x1300>
   195cc:	ldr	r0, [sp, #24]
   195d0:	str	r3, [sp, #12]
   195d4:	cmp	r0, #0
   195d8:	beq	1961c <argp_failure@@Base+0x1290>
   195dc:	ldr	r0, [fp, #12]
   195e0:	ldr	r2, [r0, #28]
   195e4:	ldr	r1, [r0, #32]
   195e8:	cmp	r2, r1
   195ec:	bcc	1960c <argp_failure@@Base+0x1280>
   195f0:	mov	r1, #1
   195f4:	bl	1d144 <argp_parse@@Base+0x2cb4>
   195f8:	ldr	r3, [sp, #12]
   195fc:	cmp	r0, #0
   19600:	beq	1961c <argp_failure@@Base+0x1290>
   19604:	ldr	r0, [fp, #12]
   19608:	ldr	r2, [r0, #28]
   1960c:	add	r1, r2, #1
   19610:	str	r1, [r0, #28]
   19614:	mov	r1, #10
   19618:	strb	r1, [r2]
   1961c:	cmp	r9, #0
   19620:	beq	196a0 <argp_failure@@Base+0x1314>
   19624:	cmp	r3, r4
   19628:	bne	196a0 <argp_failure@@Base+0x1314>
   1962c:	mov	r7, r5
   19630:	ldr	r5, [fp, #12]
   19634:	mov	r8, r6
   19638:	ldr	r0, [r5, #28]
   1963c:	ldr	r1, [r5, #32]
   19640:	add	r2, r0, r9
   19644:	cmp	r2, r1
   19648:	bls	19664 <argp_failure@@Base+0x12d8>
   1964c:	mov	r0, r5
   19650:	mov	r1, r9
   19654:	bl	1d144 <argp_parse@@Base+0x2cb4>
   19658:	cmp	r0, #0
   1965c:	beq	19704 <argp_failure@@Base+0x1378>
   19660:	ldr	r0, [r5, #28]
   19664:	mov	r1, r4
   19668:	mov	r2, r9
   1966c:	bl	11a58 <memcpy@plt>
   19670:	ldr	r0, [r5, #28]
   19674:	add	r0, r0, r9
   19678:	b	19700 <argp_failure@@Base+0x1374>
   1967c:	mov	r3, r4
   19680:	cmp	r3, #0
   19684:	str	r7, [sp, #8]
   19688:	bne	195cc <argp_failure@@Base+0x1240>
   1968c:	mov	r8, #0
   19690:	cmp	r9, #0
   19694:	cmpne	r4, #0
   19698:	beq	197b4 <argp_failure@@Base+0x1428>
   1969c:	b	197a0 <argp_failure@@Base+0x1414>
   196a0:	mov	r0, r3
   196a4:	mov	r8, r6
   196a8:	mov	r7, r5
   196ac:	bl	11c20 <strlen@plt>
   196b0:	ldr	r5, [fp, #12]
   196b4:	cmp	r0, #0
   196b8:	beq	19704 <argp_failure@@Base+0x1378>
   196bc:	mov	r6, r0
   196c0:	ldr	r0, [r5, #28]
   196c4:	ldr	r1, [r5, #32]
   196c8:	add	r2, r0, r6
   196cc:	cmp	r2, r1
   196d0:	bls	196ec <argp_failure@@Base+0x1360>
   196d4:	mov	r0, r5
   196d8:	mov	r1, r6
   196dc:	bl	1d144 <argp_parse@@Base+0x2cb4>
   196e0:	cmp	r0, #0
   196e4:	beq	19704 <argp_failure@@Base+0x1378>
   196e8:	ldr	r0, [r5, #28]
   196ec:	ldr	r1, [sp, #12]
   196f0:	mov	r2, r6
   196f4:	bl	11a58 <memcpy@plt>
   196f8:	ldr	r0, [r5, #28]
   196fc:	add	r0, r0, r6
   19700:	str	r0, [r5, #28]
   19704:	ldr	r1, [r5, #24]
   19708:	ldr	r2, [r5, #28]
   1970c:	ldr	r0, [r5, #16]
   19710:	sub	r1, r2, r1
   19714:	cmp	r1, r0
   19718:	bls	19724 <argp_failure@@Base+0x1398>
   1971c:	mov	r0, r5
   19720:	bl	1cbc8 <argp_parse@@Base+0x2738>
   19724:	ldr	r1, [r5, #20]
   19728:	ldr	r0, [r5, #4]
   1972c:	ldr	r2, [sp, #12]
   19730:	mov	r6, r8
   19734:	bic	r1, r1, r1, asr #31
   19738:	cmp	r1, r0
   1973c:	bls	1977c <argp_failure@@Base+0x13f0>
   19740:	ldr	r0, [r5, #28]
   19744:	ldr	r1, [r5, #32]
   19748:	cmp	r0, r1
   1974c:	bcc	1976c <argp_failure@@Base+0x13e0>
   19750:	mov	r0, r5
   19754:	mov	r1, #1
   19758:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1975c:	ldr	r2, [sp, #12]
   19760:	cmp	r0, #0
   19764:	beq	1977c <argp_failure@@Base+0x13f0>
   19768:	ldr	r0, [r5, #28]
   1976c:	add	r1, r0, #1
   19770:	str	r1, [r5, #28]
   19774:	mov	r1, #10
   19778:	strb	r1, [r0]
   1977c:	mov	r8, #1
   19780:	cmp	r2, r4
   19784:	beq	19790 <argp_failure@@Base+0x1404>
   19788:	mov	r0, r2
   1978c:	bl	1ba4c <argp_parse@@Base+0x15bc>
   19790:	mov	r5, r7
   19794:	cmp	r9, #0
   19798:	cmpne	r4, #0
   1979c:	beq	197b4 <argp_failure@@Base+0x1428>
   197a0:	ldr	r0, [r5, #20]
   197a4:	cmp	r0, #0
   197a8:	beq	197b4 <argp_failure@@Base+0x1428>
   197ac:	mov	r0, r4
   197b0:	bl	1ba4c <argp_parse@@Base+0x15bc>
   197b4:	str	sl, [sp, #12]
   197b8:	cmp	sl, #0
   197bc:	ldr	r9, [sp, #24]
   197c0:	ldr	sl, [sp, #20]
   197c4:	ldr	r4, [sp, #16]
   197c8:	beq	19924 <argp_failure@@Base+0x1598>
   197cc:	ldr	r3, [r5, #20]
   197d0:	cmp	r3, #0
   197d4:	beq	19924 <argp_failure@@Base+0x1598>
   197d8:	ldr	r2, [sp, #8]
   197dc:	add	r0, r6, #3
   197e0:	mov	r1, #0
   197e4:	blx	r3
   197e8:	cmp	r0, #0
   197ec:	beq	19924 <argp_failure@@Base+0x1598>
   197f0:	mov	r7, r0
   197f4:	orrs	r0, r8, r9
   197f8:	beq	19838 <argp_failure@@Base+0x14ac>
   197fc:	ldr	r0, [fp, #12]
   19800:	ldr	r2, [r0, #28]
   19804:	ldr	r1, [r0, #32]
   19808:	cmp	r2, r1
   1980c:	bcc	19828 <argp_failure@@Base+0x149c>
   19810:	mov	r1, #1
   19814:	bl	1d144 <argp_parse@@Base+0x2cb4>
   19818:	cmp	r0, #0
   1981c:	beq	19838 <argp_failure@@Base+0x14ac>
   19820:	ldr	r0, [fp, #12]
   19824:	ldr	r2, [r0, #28]
   19828:	add	r1, r2, #1
   1982c:	str	r1, [r0, #28]
   19830:	mov	r1, #10
   19834:	strb	r1, [r2]
   19838:	mov	r0, r7
   1983c:	mov	r5, r4
   19840:	bl	11c20 <strlen@plt>
   19844:	ldr	r4, [fp, #12]
   19848:	cmp	r0, #0
   1984c:	beq	19898 <argp_failure@@Base+0x150c>
   19850:	mov	r6, r0
   19854:	ldr	r0, [r4, #28]
   19858:	ldr	r1, [r4, #32]
   1985c:	add	r2, r0, r6
   19860:	cmp	r2, r1
   19864:	bls	19880 <argp_failure@@Base+0x14f4>
   19868:	mov	r0, r4
   1986c:	mov	r1, r6
   19870:	bl	1d144 <argp_parse@@Base+0x2cb4>
   19874:	cmp	r0, #0
   19878:	beq	19898 <argp_failure@@Base+0x150c>
   1987c:	ldr	r0, [r4, #28]
   19880:	mov	r1, r7
   19884:	mov	r2, r6
   19888:	bl	11a58 <memcpy@plt>
   1988c:	ldr	r0, [r4, #28]
   19890:	add	r0, r0, r6
   19894:	str	r0, [r4, #28]
   19898:	mov	r0, r7
   1989c:	bl	1ba4c <argp_parse@@Base+0x15bc>
   198a0:	ldr	r1, [r4, #24]
   198a4:	ldr	r2, [r4, #28]
   198a8:	ldr	r0, [r4, #16]
   198ac:	sub	r1, r2, r1
   198b0:	cmp	r1, r0
   198b4:	bls	198c0 <argp_failure@@Base+0x1534>
   198b8:	mov	r0, r4
   198bc:	bl	1cbc8 <argp_parse@@Base+0x2738>
   198c0:	ldr	r1, [r4, #20]
   198c4:	ldr	r0, [r4, #4]
   198c8:	mov	r8, #1
   198cc:	bic	r1, r1, r1, asr #31
   198d0:	cmp	r1, r0
   198d4:	bls	19920 <argp_failure@@Base+0x1594>
   198d8:	ldr	r0, [r4, #28]
   198dc:	ldr	r1, [r4, #32]
   198e0:	cmp	r0, r1
   198e4:	bcc	1990c <argp_failure@@Base+0x1580>
   198e8:	mov	r0, r4
   198ec:	mov	r1, #1
   198f0:	mov	r8, #1
   198f4:	bl	1d144 <argp_parse@@Base+0x2cb4>
   198f8:	cmp	r0, #0
   198fc:	mov	r4, r5
   19900:	beq	19924 <argp_failure@@Base+0x1598>
   19904:	ldr	r4, [fp, #12]
   19908:	ldr	r0, [r4, #28]
   1990c:	add	r1, r0, #1
   19910:	mov	r8, #1
   19914:	str	r1, [r4, #28]
   19918:	mov	r1, #10
   1991c:	strb	r1, [r0]
   19920:	mov	r4, r5
   19924:	cmp	r4, #0
   19928:	beq	199c8 <argp_failure@@Base+0x163c>
   1992c:	ldr	r0, [r4]
   19930:	cmp	r0, #0
   19934:	beq	199c8 <argp_failure@@Base+0x163c>
   19938:	ldr	r7, [fp, #8]
   1993c:	cmp	r7, #0
   19940:	beq	1998c <argp_failure@@Base+0x1600>
   19944:	add	r6, r4, #16
   19948:	ldr	r4, [fp, #12]
   1994c:	ldr	r5, [sp, #12]
   19950:	cmp	r9, #0
   19954:	movwne	r9, #1
   19958:	cmp	r8, #0
   1995c:	bne	199c8 <argp_failure@@Base+0x163c>
   19960:	mov	r1, sl
   19964:	mov	r2, r5
   19968:	mov	r3, r9
   1996c:	str	r7, [sp]
   19970:	str	r4, [sp, #4]
   19974:	bl	194f0 <argp_failure@@Base+0x1164>
   19978:	mov	r8, r0
   1997c:	ldr	r0, [r6], #16
   19980:	cmp	r0, #0
   19984:	bne	19958 <argp_failure@@Base+0x15cc>
   19988:	b	199c8 <argp_failure@@Base+0x163c>
   1998c:	ldr	r5, [fp, #12]
   19990:	ldr	r7, [sp, #12]
   19994:	add	r4, r4, #16
   19998:	mov	r6, #0
   1999c:	orrs	r3, r8, r9
   199a0:	mov	r1, sl
   199a4:	mov	r2, r7
   199a8:	str	r6, [sp]
   199ac:	str	r5, [sp, #4]
   199b0:	movwne	r3, #1
   199b4:	bl	194f0 <argp_failure@@Base+0x1164>
   199b8:	orr	r8, r0, r8
   199bc:	ldr	r0, [r4], #16
   199c0:	cmp	r0, #0
   199c4:	bne	1999c <argp_failure@@Base+0x1610>
   199c8:	mov	r0, r8
   199cc:	sub	sp, fp, #28
   199d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199d8:	add	fp, sp, #28
   199dc:	sub	sp, sp, #28
   199e0:	mov	r7, r0
   199e4:	ldr	r0, [r0, #16]
   199e8:	mov	r6, r1
   199ec:	cmp	r0, #0
   199f0:	beq	19a38 <argp_failure@@Base+0x16ac>
   199f4:	mov	r2, r0
   199f8:	mov	r1, r2
   199fc:	ldr	r2, [r2, #12]
   19a00:	cmp	r2, #0
   19a04:	bne	199f8 <argp_failure@@Base+0x166c>
   19a08:	add	r2, r1, #8
   19a0c:	ldr	r1, [r6, #16]
   19a10:	ldr	r3, [r2]
   19a14:	cmp	r1, #0
   19a18:	beq	19a4c <argp_failure@@Base+0x16c0>
   19a1c:	mov	r2, r1
   19a20:	mov	r5, r2
   19a24:	ldr	r2, [r2, #12]
   19a28:	cmp	r2, #0
   19a2c:	bne	19a20 <argp_failure@@Base+0x1694>
   19a30:	add	r2, r5, #8
   19a34:	b	19a50 <argp_failure@@Base+0x16c4>
   19a38:	add	r2, r7, #12
   19a3c:	ldr	r1, [r6, #16]
   19a40:	ldr	r3, [r2]
   19a44:	cmp	r1, #0
   19a48:	bne	19a1c <argp_failure@@Base+0x1690>
   19a4c:	add	r2, r6, #12
   19a50:	ldr	r5, [r2]
   19a54:	orr	r4, r5, r3
   19a58:	sub	r2, r3, r5
   19a5c:	cmn	r4, #1
   19a60:	mov	r4, r2
   19a64:	suble	r4, r5, r3
   19a68:	ands	r3, r5, r3
   19a6c:	movmi	r4, r2
   19a70:	cmp	r4, #0
   19a74:	bne	19a94 <argp_failure@@Base+0x1708>
   19a78:	cmp	r0, #0
   19a7c:	mov	r4, r0
   19a80:	movwne	r4, #1
   19a84:	cmp	r1, #0
   19a88:	subne	r4, r4, #1
   19a8c:	cmp	r4, #0
   19a90:	beq	19aa0 <argp_failure@@Base+0x1714>
   19a94:	mov	r0, r4
   19a98:	sub	sp, fp, #28
   19a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19aa0:	cmp	r0, #0
   19aa4:	beq	19b24 <argp_failure@@Base+0x1798>
   19aa8:	ldr	r3, [r1, #20]
   19aac:	ldr	r2, [r0, #20]
   19ab0:	cmp	r2, r3
   19ab4:	ble	19ae4 <argp_failure@@Base+0x1758>
   19ab8:	ldr	r0, [r0, #12]
   19abc:	ldr	r2, [r0, #20]
   19ac0:	cmp	r2, r3
   19ac4:	bgt	19ab8 <argp_failure@@Base+0x172c>
   19ac8:	bl	19f6c <argp_failure@@Base+0x1be0>
   19acc:	cmp	r0, #0
   19ad0:	mov	r4, r0
   19ad4:	movweq	r4, #1
   19ad8:	mov	r0, r4
   19adc:	sub	sp, fp, #28
   19ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ae4:	bge	19b14 <argp_failure@@Base+0x1788>
   19ae8:	ldr	r1, [r1, #12]
   19aec:	ldr	r3, [r1, #20]
   19af0:	cmp	r2, r3
   19af4:	blt	19ae8 <argp_failure@@Base+0x175c>
   19af8:	bl	19f6c <argp_failure@@Base+0x1be0>
   19afc:	cmp	r0, #0
   19b00:	mov	r4, r0
   19b04:	mvneq	r4, #0
   19b08:	mov	r0, r4
   19b0c:	sub	sp, fp, #28
   19b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b14:	bl	19f6c <argp_failure@@Base+0x1be0>
   19b18:	mov	r4, r0
   19b1c:	cmp	r0, #0
   19b20:	bne	19a94 <argp_failure@@Base+0x1708>
   19b24:	ldr	r0, [r7, #12]
   19b28:	ldr	r1, [r6, #12]
   19b2c:	orr	r2, r1, r0
   19b30:	sub	r3, r0, r1
   19b34:	cmn	r2, #1
   19b38:	mov	r4, r3
   19b3c:	suble	r4, r1, r0
   19b40:	ands	r0, r1, r0
   19b44:	movmi	r4, r3
   19b48:	cmp	r4, #0
   19b4c:	bne	19a94 <argp_failure@@Base+0x1708>
   19b50:	ldr	r4, [r7, #4]
   19b54:	ldr	sl, [r7]
   19b58:	mov	r9, #0
   19b5c:	cmp	r4, #0
   19b60:	beq	19ba4 <argp_failure@@Base+0x1818>
   19b64:	add	r0, sl, #12
   19b68:	mov	r1, r4
   19b6c:	ldr	r9, [r0, #-12]
   19b70:	cmp	r9, #0
   19b74:	bne	19b90 <argp_failure@@Base+0x1804>
   19b78:	add	r0, r0, #24
   19b7c:	subs	r1, r1, #1
   19b80:	beq	19ba0 <argp_failure@@Base+0x1814>
   19b84:	ldr	r9, [r0, #-12]
   19b88:	cmp	r9, #0
   19b8c:	beq	19b78 <argp_failure@@Base+0x17ec>
   19b90:	ldrb	r2, [r0]
   19b94:	tst	r2, #2
   19b98:	bne	19b78 <argp_failure@@Base+0x17ec>
   19b9c:	b	19ba4 <argp_failure@@Base+0x1818>
   19ba0:	mov	r9, #0
   19ba4:	ldr	r3, [r6, #4]
   19ba8:	ldr	ip, [r6]
   19bac:	cmp	r3, #0
   19bb0:	beq	19bf0 <argp_failure@@Base+0x1864>
   19bb4:	add	r0, ip, #12
   19bb8:	mov	r1, r3
   19bbc:	ldr	r5, [r0, #-12]
   19bc0:	cmp	r5, #0
   19bc4:	bne	19be0 <argp_failure@@Base+0x1854>
   19bc8:	add	r0, r0, #24
   19bcc:	subs	r1, r1, #1
   19bd0:	beq	19bf0 <argp_failure@@Base+0x1864>
   19bd4:	ldr	r5, [r0, #-12]
   19bd8:	cmp	r5, #0
   19bdc:	beq	19bc8 <argp_failure@@Base+0x183c>
   19be0:	ldrb	r2, [r0]
   19be4:	tst	r2, #2
   19be8:	bne	19bc8 <argp_failure@@Base+0x183c>
   19bec:	b	19bf4 <argp_failure@@Base+0x1868>
   19bf0:	mov	r5, #0
   19bf4:	ldr	r1, [sl, #12]
   19bf8:	mov	r8, #0
   19bfc:	cmp	r9, #0
   19c00:	str	r4, [sp, #12]
   19c04:	str	r3, [sp, #16]
   19c08:	str	sl, [sp, #8]
   19c0c:	str	r1, [sp, #24]
   19c10:	beq	19c88 <argp_failure@@Base+0x18fc>
   19c14:	ands	r0, r1, #8
   19c18:	beq	19c88 <argp_failure@@Base+0x18fc>
   19c1c:	str	ip, [sp, #20]
   19c20:	bl	11bfc <__ctype_b_loc@plt>
   19c24:	ldrb	r1, [r9]
   19c28:	ldr	r0, [r0]
   19c2c:	add	r2, r0, r1, lsl #1
   19c30:	ldrb	r2, [r2, #1]
   19c34:	tst	r2, #32
   19c38:	beq	19c50 <argp_failure@@Base+0x18c4>
   19c3c:	ldrb	r1, [r9, #1]!
   19c40:	add	r2, r0, r1, lsl #1
   19c44:	ldrb	r2, [r2, #1]
   19c48:	tst	r2, #32
   19c4c:	bne	19c3c <argp_failure@@Base+0x18b0>
   19c50:	ldr	ip, [sp, #20]
   19c54:	subs	r4, r1, #45	; 0x2d
   19c58:	movwne	r4, #1
   19c5c:	cmp	r1, #0
   19c60:	beq	19c80 <argp_failure@@Base+0x18f4>
   19c64:	uxtb	r1, r1
   19c68:	ldrb	r1, [r0, r1, lsl #1]
   19c6c:	tst	r1, #8
   19c70:	bne	19c80 <argp_failure@@Base+0x18f4>
   19c74:	ldrb	r1, [r9, #1]!
   19c78:	cmp	r1, #0
   19c7c:	bne	19c64 <argp_failure@@Base+0x18d8>
   19c80:	ldr	r1, [sp, #24]
   19c84:	b	19c8c <argp_failure@@Base+0x1900>
   19c88:	mov	r4, #0
   19c8c:	ldr	r0, [ip, #12]
   19c90:	cmp	r5, #0
   19c94:	str	r0, [sp, #4]
   19c98:	andsne	r0, r0, #8
   19c9c:	beq	19d08 <argp_failure@@Base+0x197c>
   19ca0:	mov	sl, ip
   19ca4:	bl	11bfc <__ctype_b_loc@plt>
   19ca8:	ldrb	r1, [r5]
   19cac:	ldr	r0, [r0]
   19cb0:	add	r2, r0, r1, lsl #1
   19cb4:	ldrb	r2, [r2, #1]
   19cb8:	tst	r2, #32
   19cbc:	beq	19cd4 <argp_failure@@Base+0x1948>
   19cc0:	ldrb	r1, [r5, #1]!
   19cc4:	add	r2, r0, r1, lsl #1
   19cc8:	ldrb	r2, [r2, #1]
   19ccc:	tst	r2, #32
   19cd0:	bne	19cc0 <argp_failure@@Base+0x1934>
   19cd4:	subs	r8, r1, #45	; 0x2d
   19cd8:	mov	ip, sl
   19cdc:	movwne	r8, #1
   19ce0:	cmp	r1, #0
   19ce4:	beq	19d04 <argp_failure@@Base+0x1978>
   19ce8:	uxtb	r1, r1
   19cec:	ldrb	r1, [r0, r1, lsl #1]
   19cf0:	tst	r1, #8
   19cf4:	bne	19d04 <argp_failure@@Base+0x1978>
   19cf8:	ldrb	r1, [r5, #1]!
   19cfc:	cmp	r1, #0
   19d00:	bne	19ce8 <argp_failure@@Base+0x195c>
   19d04:	ldr	r1, [sp, #24]
   19d08:	subs	r4, r4, r8
   19d0c:	bne	19a94 <argp_failure@@Base+0x1708>
   19d10:	ldr	r0, [sp, #12]
   19d14:	mov	r2, #0
   19d18:	str	ip, [sp, #20]
   19d1c:	cmp	r0, #0
   19d20:	beq	19db8 <argp_failure@@Base+0x1a2c>
   19d24:	sub	sl, r0, #1
   19d28:	ldr	r0, [sp, #8]
   19d2c:	ldr	r4, [r7, #8]
   19d30:	add	r8, r0, #36	; 0x24
   19d34:	tst	r1, #8
   19d38:	beq	19d60 <argp_failure@@Base+0x19d4>
   19d3c:	mov	r2, #0
   19d40:	cmp	sl, #0
   19d44:	beq	19db8 <argp_failure@@Base+0x1a2c>
   19d48:	cmp	r2, #0
   19d4c:	bne	19db8 <argp_failure@@Base+0x1a2c>
   19d50:	ldr	r1, [r8], #24
   19d54:	sub	sl, sl, #1
   19d58:	tst	r1, #8
   19d5c:	bne	19d3c <argp_failure@@Base+0x19b0>
   19d60:	ldr	r7, [r8, #-32]	; 0xffffffe0
   19d64:	sub	r0, r7, #1
   19d68:	cmp	r0, #254	; 0xfe
   19d6c:	bhi	19d3c <argp_failure@@Base+0x19b0>
   19d70:	str	r1, [sp, #24]
   19d74:	bl	11bfc <__ctype_b_loc@plt>
   19d78:	ldr	r0, [r0]
   19d7c:	add	r0, r0, r7, lsl #1
   19d80:	ldrb	r0, [r0, #1]
   19d84:	tst	r0, #64	; 0x40
   19d88:	beq	19d3c <argp_failure@@Base+0x19b0>
   19d8c:	ldrb	r0, [r4]
   19d90:	mov	r2, r7
   19d94:	cmp	r7, r0
   19d98:	bne	19d3c <argp_failure@@Base+0x19b0>
   19d9c:	ldr	r0, [sp, #24]
   19da0:	add	r4, r4, #1
   19da4:	tst	r0, #2
   19da8:	mov	r0, #0
   19dac:	movne	r2, r0
   19db0:	cmp	sl, #0
   19db4:	bne	19d48 <argp_failure@@Base+0x19bc>
   19db8:	ldr	r0, [sp, #16]
   19dbc:	mov	sl, #0
   19dc0:	mov	r1, r2
   19dc4:	str	r2, [sp, #24]
   19dc8:	cmp	r0, #0
   19dcc:	beq	19e68 <argp_failure@@Base+0x1adc>
   19dd0:	sub	r7, r0, #1
   19dd4:	ldr	r0, [sp, #20]
   19dd8:	ldr	r6, [r6, #8]
   19ddc:	ldr	r4, [sp, #4]
   19de0:	add	r8, r0, #36	; 0x24
   19de4:	tst	r4, #8
   19de8:	bne	19df4 <argp_failure@@Base+0x1a68>
   19dec:	b	19e18 <argp_failure@@Base+0x1a8c>
   19df0:	ldr	r2, [sp, #24]
   19df4:	mov	sl, #0
   19df8:	cmp	r7, #0
   19dfc:	beq	19e68 <argp_failure@@Base+0x1adc>
   19e00:	cmp	sl, #0
   19e04:	bne	19e68 <argp_failure@@Base+0x1adc>
   19e08:	ldr	r4, [r8], #24
   19e0c:	sub	r7, r7, #1
   19e10:	tst	r4, #8
   19e14:	bne	19df4 <argp_failure@@Base+0x1a68>
   19e18:	ldr	sl, [r8, #-32]	; 0xffffffe0
   19e1c:	sub	r0, sl, #1
   19e20:	cmp	r0, #254	; 0xfe
   19e24:	bhi	19df4 <argp_failure@@Base+0x1a68>
   19e28:	bl	11bfc <__ctype_b_loc@plt>
   19e2c:	ldr	r0, [r0]
   19e30:	add	r0, r0, sl, lsl #1
   19e34:	ldrb	r0, [r0, #1]
   19e38:	tst	r0, #64	; 0x40
   19e3c:	beq	19df0 <argp_failure@@Base+0x1a64>
   19e40:	ldrb	r0, [r6]
   19e44:	ldr	r2, [sp, #24]
   19e48:	cmp	sl, r0
   19e4c:	bne	19df4 <argp_failure@@Base+0x1a68>
   19e50:	tst	r4, #2
   19e54:	mov	r0, #0
   19e58:	add	r6, r6, #1
   19e5c:	movne	sl, r0
   19e60:	cmp	r7, #0
   19e64:	bne	19e00 <argp_failure@@Base+0x1a74>
   19e68:	tst	r2, #255	; 0xff
   19e6c:	mov	r6, r2
   19e70:	beq	19e90 <argp_failure@@Base+0x1b04>
   19e74:	tst	sl, #255	; 0xff
   19e78:	mov	r7, sl
   19e7c:	bne	19ec4 <argp_failure@@Base+0x1b38>
   19e80:	cmp	r5, #0
   19e84:	beq	19eac <argp_failure@@Base+0x1b20>
   19e88:	ldrb	r7, [r5]
   19e8c:	b	19ec4 <argp_failure@@Base+0x1b38>
   19e90:	cmp	r9, #0
   19e94:	beq	19eb4 <argp_failure@@Base+0x1b28>
   19e98:	ldrb	r6, [r9]
   19e9c:	tst	sl, #255	; 0xff
   19ea0:	mov	r7, sl
   19ea4:	bne	19ec4 <argp_failure@@Base+0x1b38>
   19ea8:	b	19e80 <argp_failure@@Base+0x1af4>
   19eac:	mov	r7, #0
   19eb0:	b	19ec4 <argp_failure@@Base+0x1b38>
   19eb4:	mov	r6, #0
   19eb8:	tst	sl, #255	; 0xff
   19ebc:	mov	r7, sl
   19ec0:	beq	19e80 <argp_failure@@Base+0x1af4>
   19ec4:	bl	11bd8 <__ctype_tolower_loc@plt>
   19ec8:	ldr	r2, [r0]
   19ecc:	uxtb	r0, r7
   19ed0:	uxtb	r1, r6
   19ed4:	ldr	r3, [r2, r0, lsl #2]
   19ed8:	ldr	r2, [r2, r1, lsl #2]
   19edc:	subs	r4, r2, r3
   19ee0:	subseq	r4, r0, r1
   19ee4:	bne	19a94 <argp_failure@@Base+0x1708>
   19ee8:	ldr	r0, [sp, #24]
   19eec:	uxtb	r4, r0
   19ef0:	cmp	r4, #0
   19ef4:	movwne	r4, #1
   19ef8:	tst	sl, #255	; 0xff
   19efc:	subne	r4, r4, #1
   19f00:	cmp	r4, #0
   19f04:	bne	19a94 <argp_failure@@Base+0x1708>
   19f08:	ldr	r0, [sp, #24]
   19f0c:	tst	r0, #255	; 0xff
   19f10:	beq	19f24 <argp_failure@@Base+0x1b98>
   19f14:	mov	r4, #0
   19f18:	mov	r0, r4
   19f1c:	sub	sp, fp, #28
   19f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f24:	cmp	r9, #0
   19f28:	mov	r4, r9
   19f2c:	movwne	r4, #1
   19f30:	cmp	r5, #0
   19f34:	subne	r4, r4, #1
   19f38:	cmp	r4, #0
   19f3c:	bne	19a94 <argp_failure@@Base+0x1708>
   19f40:	cmp	r9, #0
   19f44:	beq	19f14 <argp_failure@@Base+0x1b88>
   19f48:	mov	r0, r9
   19f4c:	mov	r1, r5
   19f50:	bl	11b0c <strcasecmp@plt>
   19f54:	cmp	r0, #0
   19f58:	mov	r4, r0
   19f5c:	moveq	r4, #0
   19f60:	mov	r0, r4
   19f64:	sub	sp, fp, #28
   19f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f6c:	push	{r4, r5, fp, lr}
   19f70:	add	fp, sp, #8
   19f74:	mov	r4, r1
   19f78:	mov	r5, r0
   19f7c:	ldr	r1, [r1, #12]
   19f80:	ldr	r0, [r0, #12]
   19f84:	cmp	r0, r1
   19f88:	beq	19f9c <argp_failure@@Base+0x1c10>
   19f8c:	bl	19f6c <argp_failure@@Base+0x1be0>
   19f90:	cmp	r0, #0
   19f94:	beq	19f9c <argp_failure@@Base+0x1c10>
   19f98:	pop	{r4, r5, fp, pc}
   19f9c:	ldr	r1, [r5, #8]
   19fa0:	ldr	r2, [r4, #8]
   19fa4:	orr	r0, r2, r1
   19fa8:	sub	r3, r1, r2
   19fac:	cmn	r0, #1
   19fb0:	mov	r0, r3
   19fb4:	suble	r0, r2, r1
   19fb8:	ands	r1, r2, r1
   19fbc:	movmi	r0, r3
   19fc0:	cmp	r0, #0
   19fc4:	popne	{r4, r5, fp, pc}
   19fc8:	ldr	r0, [r5, #4]
   19fcc:	ldr	r1, [r4, #4]
   19fd0:	sub	r0, r1, r0
   19fd4:	pop	{r4, r5, fp, pc}
   19fd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19fdc:	add	fp, sp, #24
   19fe0:	mov	r4, r0
   19fe4:	ldr	r0, [r1, #12]
   19fe8:	mov	r5, r1
   19fec:	cmp	r0, #0
   19ff0:	beq	1a06c <argp_failure@@Base+0x1ce0>
   19ff4:	ldr	r1, [r5, #8]
   19ff8:	ldr	r0, [r5]
   19ffc:	ldr	r6, [r1]
   1a000:	ldr	r7, [r0, #16]
   1a004:	cmp	r6, #0
   1a008:	ldrne	r1, [r1, #4]
   1a00c:	cmpne	r1, #0
   1a010:	bne	1a0b4 <argp_failure@@Base+0x1d28>
   1a014:	cmp	r7, #0
   1a018:	beq	1a154 <argp_failure@@Base+0x1dc8>
   1a01c:	ldr	r0, [r7]
   1a020:	cmp	r0, #0
   1a024:	beq	1a154 <argp_failure@@Base+0x1dc8>
   1a028:	ldrb	r1, [r0]
   1a02c:	cmp	r1, #0
   1a030:	beq	1a154 <argp_failure@@Base+0x1dc8>
   1a034:	cmp	r6, #0
   1a038:	beq	1a118 <argp_failure@@Base+0x1d8c>
   1a03c:	ldr	r1, [r6, #16]
   1a040:	cmp	r1, r7
   1a044:	beq	1a154 <argp_failure@@Base+0x1dc8>
   1a048:	cmp	r1, #0
   1a04c:	beq	1a10c <argp_failure@@Base+0x1d80>
   1a050:	ldr	r1, [r1, #12]
   1a054:	cmp	r1, r7
   1a058:	cmpne	r1, #0
   1a05c:	bne	1a050 <argp_failure@@Base+0x1cc4>
   1a060:	cmp	r1, r7
   1a064:	bne	1a118 <argp_failure@@Base+0x1d8c>
   1a068:	b	1a154 <argp_failure@@Base+0x1dc8>
   1a06c:	ldr	r6, [r5, #4]
   1a070:	ldr	r0, [r6, #28]
   1a074:	ldr	r1, [r6, #32]
   1a078:	add	r2, r0, #2
   1a07c:	cmp	r2, r1
   1a080:	bls	1a09c <argp_failure@@Base+0x1d10>
   1a084:	mov	r0, r6
   1a088:	mov	r1, #2
   1a08c:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1a090:	cmp	r0, #0
   1a094:	beq	1a15c <argp_failure@@Base+0x1dd0>
   1a098:	ldr	r0, [r6, #28]
   1a09c:	movw	r1, #8236	; 0x202c
   1a0a0:	strh	r1, [r0]
   1a0a4:	ldr	r0, [r6, #28]
   1a0a8:	add	r0, r0, #2
   1a0ac:	str	r0, [r6, #28]
   1a0b0:	b	1a15c <argp_failure@@Base+0x1dd0>
   1a0b4:	ldr	r1, [r6, #12]
   1a0b8:	ldr	r0, [r0, #12]
   1a0bc:	cmp	r0, r1
   1a0c0:	beq	1a014 <argp_failure@@Base+0x1c88>
   1a0c4:	ldr	r8, [r5, #4]
   1a0c8:	ldr	r0, [r8, #28]
   1a0cc:	ldr	r1, [r8, #32]
   1a0d0:	cmp	r0, r1
   1a0d4:	bcc	1a0f0 <argp_failure@@Base+0x1d64>
   1a0d8:	mov	r0, r8
   1a0dc:	mov	r1, #1
   1a0e0:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1a0e4:	cmp	r0, #0
   1a0e8:	beq	1a014 <argp_failure@@Base+0x1c88>
   1a0ec:	ldr	r0, [r8, #28]
   1a0f0:	add	r1, r0, #1
   1a0f4:	str	r1, [r8, #28]
   1a0f8:	mov	r1, #10
   1a0fc:	strb	r1, [r0]
   1a100:	cmp	r7, #0
   1a104:	bne	1a01c <argp_failure@@Base+0x1c90>
   1a108:	b	1a154 <argp_failure@@Base+0x1dc8>
   1a10c:	mov	r1, #0
   1a110:	cmp	r1, r7
   1a114:	beq	1a154 <argp_failure@@Base+0x1dc8>
   1a118:	ldr	r1, [r5, #4]
   1a11c:	mov	r2, r5
   1a120:	ldr	r8, [r1, #12]
   1a124:	ldr	r1, [r7, #16]
   1a128:	bl	1a1e4 <argp_failure@@Base+0x1e58>
   1a12c:	ldr	r6, [r5, #4]
   1a130:	ldr	r1, [r6, #24]
   1a134:	ldr	r2, [r6, #28]
   1a138:	ldr	r0, [r6, #16]
   1a13c:	sub	r1, r2, r1
   1a140:	cmp	r1, r0
   1a144:	bls	1a150 <argp_failure@@Base+0x1dc4>
   1a148:	mov	r0, r6
   1a14c:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1a150:	str	r8, [r6, #12]
   1a154:	mov	r0, #0
   1a158:	str	r0, [r5, #12]
   1a15c:	ldr	r5, [r5, #4]
   1a160:	ldr	r1, [r5, #24]
   1a164:	ldr	r2, [r5, #28]
   1a168:	ldr	r0, [r5, #16]
   1a16c:	sub	r1, r2, r1
   1a170:	cmp	r1, r0
   1a174:	bls	1a180 <argp_failure@@Base+0x1df4>
   1a178:	mov	r0, r5
   1a17c:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1a180:	ldr	r0, [r5, #20]
   1a184:	cmp	r0, #0
   1a188:	subgt	r4, r4, r0
   1a18c:	cmp	r4, #1
   1a190:	blt	1a1e0 <argp_failure@@Base+0x1e54>
   1a194:	mov	r6, #32
   1a198:	b	1a1b0 <argp_failure@@Base+0x1e24>
   1a19c:	add	r1, r0, #1
   1a1a0:	str	r1, [r5, #28]
   1a1a4:	strb	r6, [r0]
   1a1a8:	cmp	r4, #0
   1a1ac:	ble	1a1e0 <argp_failure@@Base+0x1e54>
   1a1b0:	ldr	r0, [r5, #28]
   1a1b4:	ldr	r1, [r5, #32]
   1a1b8:	sub	r4, r4, #1
   1a1bc:	cmp	r0, r1
   1a1c0:	bcc	1a19c <argp_failure@@Base+0x1e10>
   1a1c4:	mov	r0, r5
   1a1c8:	mov	r1, #1
   1a1cc:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1a1d0:	cmp	r0, #0
   1a1d4:	beq	1a1a8 <argp_failure@@Base+0x1e1c>
   1a1d8:	ldr	r0, [r5, #28]
   1a1dc:	b	1a19c <argp_failure@@Base+0x1e10>
   1a1e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a1e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1e8:	add	fp, sp, #28
   1a1ec:	sub	sp, sp, #4
   1a1f0:	mov	r9, r2
   1a1f4:	mov	r8, r0
   1a1f8:	cmp	r1, #0
   1a1fc:	mov	r6, r0
   1a200:	beq	1a240 <argp_failure@@Base+0x1eb4>
   1a204:	ldr	r0, [r1, #20]
   1a208:	mov	r4, r1
   1a20c:	mov	r6, r8
   1a210:	cmp	r0, #0
   1a214:	beq	1a240 <argp_failure@@Base+0x1eb4>
   1a218:	ldr	r1, [r9, #16]
   1a21c:	mov	r0, r4
   1a220:	bl	1b1bc <argp_parse@@Base+0xd2c>
   1a224:	ldr	r3, [r4, #20]
   1a228:	mov	r2, r0
   1a22c:	movw	r0, #3
   1a230:	mov	r1, r8
   1a234:	movt	r0, #512	; 0x200
   1a238:	blx	r3
   1a23c:	mov	r6, r0
   1a240:	cmp	r6, #0
   1a244:	beq	1a470 <argp_failure@@Base+0x20e4>
   1a248:	ldrb	r0, [r6]
   1a24c:	cmp	r0, #0
   1a250:	beq	1a464 <argp_failure@@Base+0x20d8>
   1a254:	ldr	r0, [r9, #8]
   1a258:	ldr	r0, [r0]
   1a25c:	cmp	r0, #0
   1a260:	beq	1a2a0 <argp_failure@@Base+0x1f14>
   1a264:	ldr	r4, [r9, #4]
   1a268:	ldr	r0, [r4, #28]
   1a26c:	ldr	r1, [r4, #32]
   1a270:	cmp	r0, r1
   1a274:	bcc	1a290 <argp_failure@@Base+0x1f04>
   1a278:	mov	r0, r4
   1a27c:	mov	r1, #1
   1a280:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1a284:	cmp	r0, #0
   1a288:	beq	1a2a0 <argp_failure@@Base+0x1f14>
   1a28c:	ldr	r0, [r4, #28]
   1a290:	add	r1, r0, #1
   1a294:	str	r1, [r4, #28]
   1a298:	mov	r1, #10
   1a29c:	strb	r1, [r0]
   1a2a0:	ldr	r7, [r9, #4]
   1a2a4:	movw	sl, #5496	; 0x1578
   1a2a8:	movt	sl, #3
   1a2ac:	ldr	r4, [sl, #24]
   1a2b0:	ldr	r1, [r7, #24]
   1a2b4:	ldr	r2, [r7, #28]
   1a2b8:	ldr	r0, [r7, #16]
   1a2bc:	sub	r1, r2, r1
   1a2c0:	cmp	r1, r0
   1a2c4:	bls	1a2d0 <argp_failure@@Base+0x1f44>
   1a2c8:	mov	r0, r7
   1a2cc:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1a2d0:	ldr	r0, [r7, #20]
   1a2d4:	cmp	r0, #0
   1a2d8:	subgt	r4, r4, r0
   1a2dc:	cmp	r4, #1
   1a2e0:	blt	1a330 <argp_failure@@Base+0x1fa4>
   1a2e4:	mov	r5, #32
   1a2e8:	b	1a300 <argp_failure@@Base+0x1f74>
   1a2ec:	add	r1, r0, #1
   1a2f0:	str	r1, [r7, #28]
   1a2f4:	strb	r5, [r0]
   1a2f8:	cmp	r4, #0
   1a2fc:	ble	1a330 <argp_failure@@Base+0x1fa4>
   1a300:	ldr	r0, [r7, #28]
   1a304:	ldr	r1, [r7, #32]
   1a308:	sub	r4, r4, #1
   1a30c:	cmp	r0, r1
   1a310:	bcc	1a2ec <argp_failure@@Base+0x1f60>
   1a314:	mov	r0, r7
   1a318:	mov	r1, #1
   1a31c:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1a320:	cmp	r0, #0
   1a324:	beq	1a2f8 <argp_failure@@Base+0x1f6c>
   1a328:	ldr	r0, [r7, #28]
   1a32c:	b	1a2ec <argp_failure@@Base+0x1f60>
   1a330:	ldr	r4, [r9, #4]
   1a334:	ldr	r5, [sl, #24]
   1a338:	ldr	r1, [r4, #24]
   1a33c:	ldr	r2, [r4, #28]
   1a340:	ldr	r0, [r4, #16]
   1a344:	mov	r7, r4
   1a348:	sub	r1, r2, r1
   1a34c:	mov	r2, sl
   1a350:	mov	sl, r5
   1a354:	cmp	r1, r0
   1a358:	bls	1a380 <argp_failure@@Base+0x1ff4>
   1a35c:	mov	r0, r4
   1a360:	mov	r7, r2
   1a364:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1a368:	ldr	sl, [r7, #24]
   1a36c:	ldr	r7, [r9, #4]
   1a370:	ldr	r1, [r7, #24]
   1a374:	ldr	r2, [r7, #28]
   1a378:	ldr	r0, [r7, #16]
   1a37c:	sub	r1, r2, r1
   1a380:	str	r5, [r4, #4]
   1a384:	cmp	r1, r0
   1a388:	mov	r5, r7
   1a38c:	bls	1a39c <argp_failure@@Base+0x2010>
   1a390:	mov	r0, r7
   1a394:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1a398:	ldr	r5, [r9, #4]
   1a39c:	mov	r0, r6
   1a3a0:	str	sl, [r7, #12]
   1a3a4:	bl	11c20 <strlen@plt>
   1a3a8:	cmp	r0, #0
   1a3ac:	beq	1a3f8 <argp_failure@@Base+0x206c>
   1a3b0:	mov	r4, r0
   1a3b4:	ldr	r0, [r5, #28]
   1a3b8:	ldr	r1, [r5, #32]
   1a3bc:	add	r2, r0, r4
   1a3c0:	cmp	r2, r1
   1a3c4:	bls	1a3e0 <argp_failure@@Base+0x2054>
   1a3c8:	mov	r0, r5
   1a3cc:	mov	r1, r4
   1a3d0:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1a3d4:	cmp	r0, #0
   1a3d8:	beq	1a3f8 <argp_failure@@Base+0x206c>
   1a3dc:	ldr	r0, [r5, #28]
   1a3e0:	mov	r1, r6
   1a3e4:	mov	r2, r4
   1a3e8:	bl	11a58 <memcpy@plt>
   1a3ec:	ldr	r0, [r5, #28]
   1a3f0:	add	r0, r0, r4
   1a3f4:	str	r0, [r5, #28]
   1a3f8:	ldr	r5, [r9, #4]
   1a3fc:	ldr	r2, [r5, #24]
   1a400:	ldr	r0, [r5, #28]
   1a404:	ldr	r1, [r5, #16]
   1a408:	mov	r4, r5
   1a40c:	sub	r2, r0, r2
   1a410:	cmp	r2, r1
   1a414:	bls	1a428 <argp_failure@@Base+0x209c>
   1a418:	mov	r0, r5
   1a41c:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1a420:	ldr	r4, [r9, #4]
   1a424:	ldr	r0, [r4, #28]
   1a428:	mov	r1, #0
   1a42c:	str	r1, [r5, #4]
   1a430:	ldr	r1, [r4, #32]
   1a434:	cmp	r0, r1
   1a438:	bcc	1a454 <argp_failure@@Base+0x20c8>
   1a43c:	mov	r0, r4
   1a440:	mov	r1, #1
   1a444:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1a448:	cmp	r0, #0
   1a44c:	beq	1a464 <argp_failure@@Base+0x20d8>
   1a450:	ldr	r0, [r4, #28]
   1a454:	add	r1, r0, #1
   1a458:	str	r1, [r4, #28]
   1a45c:	mov	r1, #10
   1a460:	strb	r1, [r0]
   1a464:	ldr	r0, [r9, #8]
   1a468:	mov	r1, #1
   1a46c:	str	r1, [r0, #4]
   1a470:	cmp	r6, r8
   1a474:	beq	1a488 <argp_failure@@Base+0x20fc>
   1a478:	mov	r0, r6
   1a47c:	sub	sp, fp, #28
   1a480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a484:	b	1ba4c <argp_parse@@Base+0x15bc>
   1a488:	sub	sp, fp, #28
   1a48c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a490 <argp_parse@@Base>:
   1a490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a494:	add	fp, sp, #28
   1a498:	sub	sp, sp, #212	; 0xd4
   1a49c:	mov	r4, r3
   1a4a0:	mov	r6, r2
   1a4a4:	mov	r7, r1
   1a4a8:	mov	r5, r0
   1a4ac:	tst	r3, #1
   1a4b0:	bne	1a4e4 <argp_parse@@Base+0x54>
   1a4b4:	movw	r0, #5564	; 0x15bc
   1a4b8:	movt	r0, #3
   1a4bc:	ldr	r1, [r0]
   1a4c0:	cmp	r1, #0
   1a4c4:	bne	1a4d0 <argp_parse@@Base+0x40>
   1a4c8:	ldr	r1, [r6]
   1a4cc:	str	r1, [r0]
   1a4d0:	movw	r8, #5560	; 0x15b8
   1a4d4:	movt	r8, #3
   1a4d8:	ldr	r0, [r8]
   1a4dc:	cmp	r0, #0
   1a4e0:	beq	1a5a0 <argp_parse@@Base+0x110>
   1a4e4:	tst	r4, #16
   1a4e8:	str	r6, [fp, #-228]	; 0xffffff1c
   1a4ec:	str	r7, [fp, #-232]	; 0xffffff18
   1a4f0:	bne	1a5bc <argp_parse@@Base+0x12c>
   1a4f4:	mov	r1, sp
   1a4f8:	sub	r3, r1, #64	; 0x40
   1a4fc:	mov	sp, r3
   1a500:	mov	r2, sp
   1a504:	sub	r0, r2, #32
   1a508:	mov	sp, r0
   1a50c:	vmov.i32	q8, #0	; 0x00000000
   1a510:	sub	r2, r2, #20
   1a514:	cmp	r5, #0
   1a518:	vst1.32	{d16-d17}, [r2]
   1a51c:	mov	r2, r0
   1a520:	vst1.64	{d16-d17}, [r2]!
   1a524:	str	r3, [r2]
   1a528:	sub	r2, r1, #32
   1a52c:	sub	r1, r1, #48	; 0x30
   1a530:	vst1.64	{d16-d17}, [r2]
   1a534:	vst1.64	{d16-d17}, [r1]
   1a538:	mov	r1, #48	; 0x30
   1a53c:	mov	r2, r3
   1a540:	vst1.64	{d16-d17}, [r2], r1
   1a544:	vst1.64	{d16-d17}, [r2]
   1a548:	movw	r2, #64576	; 0xfc40
   1a54c:	strne	r5, [r3], #16
   1a550:	movt	r2, #1
   1a554:	mov	r1, r3
   1a558:	str	r2, [r1], #16
   1a55c:	movw	r2, #8336	; 0x2090
   1a560:	movt	r2, #3
   1a564:	ldr	r2, [r2]
   1a568:	cmp	r2, #0
   1a56c:	bne	1a584 <argp_parse@@Base+0xf4>
   1a570:	movw	r2, #6660	; 0x1a04
   1a574:	movt	r2, #3
   1a578:	ldr	r2, [r2]
   1a57c:	cmp	r2, #0
   1a580:	beq	1a594 <argp_parse@@Base+0x104>
   1a584:	movw	r2, #64604	; 0xfc5c
   1a588:	mov	r3, r1
   1a58c:	movt	r2, #1
   1a590:	str	r2, [r1]
   1a594:	mov	r1, #0
   1a598:	str	r1, [r3, #16]
   1a59c:	b	1a5c0 <argp_parse@@Base+0x130>
   1a5a0:	ldr	r0, [r6]
   1a5a4:	bl	1b7d4 <argp_parse@@Base+0x1344>
   1a5a8:	str	r0, [r8]
   1a5ac:	tst	r4, #16
   1a5b0:	str	r6, [fp, #-228]	; 0xffffff1c
   1a5b4:	str	r7, [fp, #-232]	; 0xffffff18
   1a5b8:	beq	1a4f4 <argp_parse@@Base+0x64>
   1a5bc:	mov	r0, r5
   1a5c0:	vmov.i32	q8, #0	; 0x00000000
   1a5c4:	sub	r9, fp, #96	; 0x60
   1a5c8:	mov	r7, #12
   1a5cc:	mov	r5, #0
   1a5d0:	cmp	r0, #0
   1a5d4:	str	r4, [fp, #-224]	; 0xffffff20
   1a5d8:	str	r0, [fp, #-236]	; 0xffffff14
   1a5dc:	mov	r1, r9
   1a5e0:	str	r5, [fp, #-52]	; 0xffffffcc
   1a5e4:	str	r5, [fp, #-56]	; 0xffffffc8
   1a5e8:	str	r5, [fp, #-60]	; 0xffffffc4
   1a5ec:	vst1.64	{d16-d17}, [r1], r7
   1a5f0:	vst1.32	{d16-d17}, [r1]
   1a5f4:	mov	r1, #1
   1a5f8:	bic	r3, r1, r4, lsr #2
   1a5fc:	str	r3, [fp, #-64]	; 0xffffffc0
   1a600:	beq	1a638 <argp_parse@@Base+0x1a8>
   1a604:	sub	r1, fp, #64	; 0x40
   1a608:	bl	1b3cc <argp_parse@@Base+0xf3c>
   1a60c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a610:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a614:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a618:	mov	r6, #16
   1a61c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a620:	add	r2, r2, r2, lsl #3
   1a624:	add	r1, r6, r1, lsl #4
   1a628:	mov	r6, #36	; 0x24
   1a62c:	lsl	r5, r0, #2
   1a630:	add	r8, r6, r2, lsl #2
   1a634:	b	1a640 <argp_parse@@Base+0x1b0>
   1a638:	mov	r8, #36	; 0x24
   1a63c:	mov	r1, #16
   1a640:	add	r4, r8, r5
   1a644:	add	sl, r4, r1
   1a648:	add	r0, r3, sl
   1a64c:	add	r0, r0, #1
   1a650:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1a654:	cmp	r0, #0
   1a658:	str	r0, [fp, #-100]	; 0xffffff9c
   1a65c:	beq	1b144 <argp_parse@@Base+0xcb4>
   1a660:	mov	r6, r0
   1a664:	mov	r0, #12
   1a668:	sub	r1, fp, #220	; 0xdc
   1a66c:	mov	r2, r5
   1a670:	vld1.64	{d16-d17}, [r9], r0
   1a674:	add	r0, r1, #20
   1a678:	add	r7, r6, r8
   1a67c:	add	r8, r6, r4
   1a680:	add	r4, r6, sl
   1a684:	vld1.32	{d18-d19}, [r9]
   1a688:	mov	r9, r1
   1a68c:	vst1.32	{d16-d17}, [r0]
   1a690:	add	r0, r1, #32
   1a694:	mov	r1, #0
   1a698:	vst1.32	{d18-d19}, [r0]
   1a69c:	mov	r0, #1
   1a6a0:	str	r6, [fp, #-172]	; 0xffffff54
   1a6a4:	str	r0, [fp, #-204]	; 0xffffff34
   1a6a8:	str	r0, [fp, #-208]	; 0xffffff30
   1a6ac:	mov	r0, r7
   1a6b0:	str	r7, [fp, #-164]	; 0xffffff5c
   1a6b4:	str	r8, [fp, #-212]	; 0xffffff2c
   1a6b8:	str	r4, [fp, #-216]	; 0xffffff28
   1a6bc:	bl	11c8c <memset@plt>
   1a6c0:	ldr	sl, [fp, #-224]	; 0xffffff20
   1a6c4:	mov	r0, #45	; 0x2d
   1a6c8:	str	r7, [fp, #-36]	; 0xffffffdc
   1a6cc:	str	r8, [fp, #-40]	; 0xffffffd8
   1a6d0:	str	r4, [fp, #-44]	; 0xffffffd4
   1a6d4:	str	r9, [fp, #-48]	; 0xffffffd0
   1a6d8:	tst	sl, #8
   1a6dc:	moveq	r0, #43	; 0x2b
   1a6e0:	tsteq	sl, #4
   1a6e4:	beq	1ad18 <argp_parse@@Base+0x888>
   1a6e8:	add	r1, r4, #1
   1a6ec:	strb	r0, [r4]
   1a6f0:	str	r1, [fp, #-44]	; 0xffffffd4
   1a6f4:	ldr	r0, [fp, #-236]	; 0xffffff14
   1a6f8:	ldr	r5, [fp, #-228]	; 0xffffff1c
   1a6fc:	ldr	r9, [fp, #-232]	; 0xffffff18
   1a700:	mov	r3, #0
   1a704:	strb	r3, [r1]
   1a708:	str	r3, [r8]
   1a70c:	cmp	r0, #0
   1a710:	str	r0, [fp, #-220]	; 0xffffff24
   1a714:	beq	1a74c <argp_parse@@Base+0x2bc>
   1a718:	sub	sp, sp, #8
   1a71c:	sub	r1, fp, #48	; 0x30
   1a720:	mov	r2, #0
   1a724:	mov	r3, r6
   1a728:	str	r1, [sp]
   1a72c:	mov	r1, #0
   1a730:	bl	1b4b8 <argp_parse@@Base+0x1028>
   1a734:	add	sp, sp, #8
   1a738:	str	r0, [fp, #-168]	; 0xffffff58
   1a73c:	mov	r6, r0
   1a740:	ldr	r3, [fp, #-220]	; 0xffffff24
   1a744:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a748:	b	1a754 <argp_parse@@Base+0x2c4>
   1a74c:	mov	r4, r6
   1a750:	str	r6, [fp, #-168]	; 0xffffff58
   1a754:	vmov.i32	q8, #0	; 0x00000000
   1a758:	sub	r1, fp, #220	; 0xdc
   1a75c:	mov	r7, #0
   1a760:	mov	r0, #1
   1a764:	mov	r8, r5
   1a768:	cmp	r4, r6
   1a76c:	mov	r2, r1
   1a770:	add	r1, r1, #84	; 0x54
   1a774:	str	r7, [fp, #-116]	; 0xffffff8c
   1a778:	str	r7, [fp, #-120]	; 0xffffff88
   1a77c:	vst1.32	{d16-d17}, [r1]
   1a780:	str	sl, [fp, #-140]	; 0xffffff74
   1a784:	str	r5, [fp, #-148]	; 0xffffff6c
   1a788:	str	r9, [fp, #-152]	; 0xffffff68
   1a78c:	str	r3, [fp, #-156]	; 0xffffff64
   1a790:	str	r2, [fp, #-104]	; 0xffffff98
   1a794:	str	r7, [fp, #-144]	; 0xffffff70
   1a798:	str	r0, [fp, #-160]	; 0xffffff60
   1a79c:	movw	r0, #5568	; 0x15c0
   1a7a0:	add	sl, r2, #64	; 0x40
   1a7a4:	movt	r0, #3
   1a7a8:	ldr	r0, [r0]
   1a7ac:	str	r0, [fp, #-112]	; 0xffffff90
   1a7b0:	movw	r0, #5572	; 0x15c4
   1a7b4:	movt	r0, #3
   1a7b8:	ldr	r0, [r0]
   1a7bc:	str	r0, [fp, #-108]	; 0xffffff94
   1a7c0:	bcs	1a8ac <argp_parse@@Base+0x41c>
   1a7c4:	ldr	r0, [fp, #12]
   1a7c8:	str	r0, [r4, #24]
   1a7cc:	cmp	r7, #7
   1a7d0:	cmpne	r7, #0
   1a7d4:	beq	1a83c <argp_parse@@Base+0x3ac>
   1a7d8:	b	1b144 <argp_parse@@Base+0xcb4>
   1a7dc:	ldr	r0, [r4, #32]
   1a7e0:	mov	r1, #0
   1a7e4:	mov	r2, sl
   1a7e8:	str	r0, [fp, #-120]	; 0xffffff88
   1a7ec:	ldr	r0, [r4, #24]
   1a7f0:	str	r0, [fp, #-128]	; 0xffffff80
   1a7f4:	ldr	r0, [r4, #28]
   1a7f8:	str	r0, [fp, #-124]	; 0xffffff84
   1a7fc:	ldr	r0, [r4, #12]
   1a800:	str	r0, [fp, #-136]	; 0xffffff78
   1a804:	movw	r0, #6
   1a808:	movt	r0, #256	; 0x100
   1a80c:	sub	r0, r0, #3
   1a810:	blx	r3
   1a814:	mov	r7, r0
   1a818:	ldr	r0, [fp, #-120]	; 0xffffff88
   1a81c:	str	r0, [r4, #32]
   1a820:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a824:	add	r4, r4, #36	; 0x24
   1a828:	cmp	r4, r0
   1a82c:	bcs	1a8a0 <argp_parse@@Base+0x410>
   1a830:	cmp	r7, #7
   1a834:	cmpne	r7, #0
   1a838:	bne	1b144 <argp_parse@@Base+0xcb4>
   1a83c:	ldr	r0, [r4, #16]
   1a840:	cmp	r0, #0
   1a844:	beq	1a858 <argp_parse@@Base+0x3c8>
   1a848:	ldr	r1, [r4, #20]
   1a84c:	ldr	r0, [r0, #28]
   1a850:	ldr	r0, [r0, r1, lsl #2]
   1a854:	str	r0, [r4, #24]
   1a858:	ldr	r3, [r4]
   1a85c:	cmp	r3, #0
   1a860:	bne	1a7dc <argp_parse@@Base+0x34c>
   1a864:	ldr	r0, [r4, #4]
   1a868:	mov	r7, #7
   1a86c:	ldr	r0, [r0, #16]
   1a870:	cmp	r0, #0
   1a874:	beq	1a820 <argp_parse@@Base+0x390>
   1a878:	ldr	r0, [r0]
   1a87c:	cmp	r0, #0
   1a880:	beq	1a820 <argp_parse@@Base+0x390>
   1a884:	ldr	r0, [r4, #24]
   1a888:	ldr	r1, [r4, #28]
   1a88c:	str	r0, [r1]
   1a890:	ldr	r3, [r4]
   1a894:	cmp	r3, #0
   1a898:	bne	1a7dc <argp_parse@@Base+0x34c>
   1a89c:	b	1a820 <argp_parse@@Base+0x390>
   1a8a0:	cmp	r7, #7
   1a8a4:	cmpne	r7, #0
   1a8a8:	bne	1b144 <argp_parse@@Base+0xcb4>
   1a8ac:	ldr	r0, [fp, #-140]	; 0xffffff74
   1a8b0:	tst	r0, #2
   1a8b4:	bne	1a8e0 <argp_parse@@Base+0x450>
   1a8b8:	mov	r0, #1
   1a8bc:	str	r0, [fp, #-204]	; 0xffffff34
   1a8c0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1a8c4:	cmp	r0, r8
   1a8c8:	bne	1a914 <argp_parse@@Base+0x484>
   1a8cc:	ldr	r0, [r8]
   1a8d0:	cmp	r0, #0
   1a8d4:	beq	1a914 <argp_parse@@Base+0x484>
   1a8d8:	bl	1b7d4 <argp_parse@@Base+0x1344>
   1a8dc:	b	1a920 <argp_parse@@Base+0x490>
   1a8e0:	mov	r1, #0
   1a8e4:	tst	r0, #1
   1a8e8:	str	r1, [fp, #-204]	; 0xffffff34
   1a8ec:	beq	1a908 <argp_parse@@Base+0x478>
   1a8f0:	ldr	r0, [fp, #-152]	; 0xffffff68
   1a8f4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1a8f8:	sub	r1, r1, #4
   1a8fc:	add	r0, r0, #1
   1a900:	str	r1, [fp, #-148]	; 0xffffff6c
   1a904:	str	r0, [fp, #-152]	; 0xffffff68
   1a908:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1a90c:	cmp	r0, r8
   1a910:	beq	1a8cc <argp_parse@@Base+0x43c>
   1a914:	movw	r0, #5560	; 0x15b8
   1a918:	movt	r0, #3
   1a91c:	ldr	r0, [r0]
   1a920:	str	r0, [fp, #-116]	; 0xffffff8c
   1a924:	sub	r0, fp, #220	; 0xdc
   1a928:	mov	r8, #0
   1a92c:	add	r6, r0, #12
   1a930:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1a934:	cmp	r0, #0
   1a938:	bne	1a95c <argp_parse@@Base+0x4cc>
   1a93c:	b	1a96c <argp_parse@@Base+0x4dc>
   1a940:	cmp	r0, #7
   1a944:	beq	1ad20 <argp_parse@@Base+0x890>
   1a948:	cmp	r0, #0
   1a94c:	bne	1af94 <argp_parse@@Base+0xb04>
   1a950:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1a954:	cmp	r0, #0
   1a958:	beq	1a96c <argp_parse@@Base+0x4dc>
   1a95c:	ldr	r9, [fp, #-144]	; 0xffffff70
   1a960:	cmp	r9, r0
   1a964:	bge	1aa20 <argp_parse@@Base+0x590>
   1a968:	str	r8, [fp, #-132]	; 0xffffff7c
   1a96c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1a970:	ldr	r9, [fp, #-144]	; 0xffffff70
   1a974:	cmp	r0, #0
   1a978:	beq	1aa20 <argp_parse@@Base+0x590>
   1a97c:	mvn	r0, #0
   1a980:	str	r0, [fp, #-200]	; 0xffffff38
   1a984:	str	r9, [fp, #-208]	; 0xffffff30
   1a988:	ldr	r2, [fp, #-216]	; 0xffffff28
   1a98c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   1a990:	ldr	r0, [fp, #-152]	; 0xffffff68
   1a994:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1a998:	ldrb	r7, [fp, #-140]	; 0xffffff74
   1a99c:	sub	sp, sp, #8
   1a9a0:	tst	r7, #64	; 0x40
   1a9a4:	bne	1a9b8 <argp_parse@@Base+0x528>
   1a9a8:	str	r8, [sp]
   1a9ac:	str	r6, [sp, #4]
   1a9b0:	bl	1baa0 <argp_parse@@Base+0x1610>
   1a9b4:	b	1a9c4 <argp_parse@@Base+0x534>
   1a9b8:	str	r8, [sp]
   1a9bc:	str	r6, [sp, #4]
   1a9c0:	bl	1bb04 <argp_parse@@Base+0x1674>
   1a9c4:	add	sp, sp, #8
   1a9c8:	ldr	r9, [fp, #-208]	; 0xffffff30
   1a9cc:	mov	r7, r0
   1a9d0:	cmn	r0, #1
   1a9d4:	str	r9, [fp, #-144]	; 0xffffff70
   1a9d8:	beq	1a9f4 <argp_parse@@Base+0x564>
   1a9dc:	cmp	r7, #63	; 0x3f
   1a9e0:	beq	1abc4 <argp_parse@@Base+0x734>
   1a9e4:	cmp	r7, #1
   1a9e8:	bne	1abd4 <argp_parse@@Base+0x744>
   1a9ec:	ldr	r7, [fp, #-196]	; 0xffffff3c
   1a9f0:	b	1aa58 <argp_parse@@Base+0x5c8>
   1a9f4:	cmp	r9, #2
   1a9f8:	str	r8, [fp, #-160]	; 0xffffff60
   1a9fc:	blt	1aa20 <argp_parse@@Base+0x590>
   1aa00:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1aa04:	movw	r1, #61324	; 0xef8c
   1aa08:	movt	r1, #1
   1aa0c:	add	r0, r0, r9, lsl #2
   1aa10:	ldr	r0, [r0, #-4]
   1aa14:	bl	11998 <strcmp@plt>
   1aa18:	cmp	r0, #0
   1aa1c:	streq	r9, [fp, #-132]	; 0xffffff7c
   1aa20:	ldr	r2, [fp, #-152]	; 0xffffff68
   1aa24:	mov	r1, #1
   1aa28:	mov	r0, #7
   1aa2c:	cmp	r9, r2
   1aa30:	bge	1ad3c <argp_parse@@Base+0x8ac>
   1aa34:	ldrb	r2, [fp, #-140]	; 0xffffff74
   1aa38:	tst	r2, #4
   1aa3c:	bne	1ad3c <argp_parse@@Base+0x8ac>
   1aa40:	add	r0, r9, #1
   1aa44:	str	r0, [fp, #-144]	; 0xffffff70
   1aa48:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1aa4c:	ldr	r7, [r1, r9, lsl #2]
   1aa50:	mov	r9, r0
   1aa54:	str	r7, [fp, #-196]	; 0xffffff3c
   1aa58:	sub	r0, r9, #1
   1aa5c:	str	r0, [fp, #-144]	; 0xffffff70
   1aa60:	ldr	r1, [fp, #-172]	; 0xffffff54
   1aa64:	ldr	r2, [fp, #-168]	; 0xffffff58
   1aa68:	cmp	r1, r2
   1aa6c:	bcs	1ad20 <argp_parse@@Base+0x890>
   1aa70:	add	r4, r1, #24
   1aa74:	add	r1, r0, #1
   1aa78:	str	r1, [fp, #-144]	; 0xffffff70
   1aa7c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1aa80:	cmp	r3, #0
   1aa84:	beq	1ab3c <argp_parse@@Base+0x6ac>
   1aa88:	ldr	r0, [r4, #8]
   1aa8c:	mov	r1, r7
   1aa90:	mov	r2, sl
   1aa94:	mov	r5, #0
   1aa98:	str	r0, [fp, #-120]	; 0xffffff88
   1aa9c:	ldr	r0, [r4]
   1aaa0:	str	r0, [fp, #-128]	; 0xffffff80
   1aaa4:	ldr	r0, [r4, #4]
   1aaa8:	str	r0, [fp, #-124]	; 0xffffff84
   1aaac:	ldr	r0, [r4, #-12]
   1aab0:	str	r0, [fp, #-136]	; 0xffffff78
   1aab4:	mov	r0, #0
   1aab8:	blx	r3
   1aabc:	ldr	r1, [fp, #-120]	; 0xffffff88
   1aac0:	cmp	r0, #7
   1aac4:	str	r1, [r4, #8]
   1aac8:	bne	1ab54 <argp_parse@@Base+0x6c4>
   1aacc:	ldr	r0, [fp, #-144]	; 0xffffff70
   1aad0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1aad4:	sub	r0, r0, #1
   1aad8:	cmp	r3, #0
   1aadc:	str	r0, [fp, #-144]	; 0xffffff70
   1aae0:	beq	1ab40 <argp_parse@@Base+0x6b0>
   1aae4:	ldr	r0, [r4]
   1aae8:	mov	r1, #0
   1aaec:	mov	r2, sl
   1aaf0:	str	r0, [fp, #-128]	; 0xffffff80
   1aaf4:	ldr	r0, [r4, #4]
   1aaf8:	str	r0, [fp, #-124]	; 0xffffff84
   1aafc:	ldr	r0, [r4, #-12]
   1ab00:	str	r0, [fp, #-136]	; 0xffffff78
   1ab04:	movw	r0, #6
   1ab08:	movt	r0, #256	; 0x100
   1ab0c:	blx	r3
   1ab10:	ldr	r1, [fp, #-120]	; 0xffffff88
   1ab14:	str	r1, [r4, #8]
   1ab18:	cmp	r0, #7
   1ab1c:	bne	1ab4c <argp_parse@@Base+0x6bc>
   1ab20:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ab24:	add	r1, r4, #12
   1ab28:	cmp	r1, r2
   1ab2c:	bcs	1ab4c <argp_parse@@Base+0x6bc>
   1ab30:	ldr	r0, [fp, #-144]	; 0xffffff70
   1ab34:	add	r4, r4, #36	; 0x24
   1ab38:	b	1aa74 <argp_parse@@Base+0x5e4>
   1ab3c:	str	r0, [fp, #-144]	; 0xffffff70
   1ab40:	mov	r0, #7
   1ab44:	cmp	r0, #7
   1ab48:	beq	1ab20 <argp_parse@@Base+0x690>
   1ab4c:	movw	r5, #6
   1ab50:	movt	r5, #256	; 0x100
   1ab54:	cmp	r0, #0
   1ab58:	bne	1a940 <argp_parse@@Base+0x4b0>
   1ab5c:	movw	r0, #6
   1ab60:	movt	r0, #256	; 0x100
   1ab64:	cmp	r5, r0
   1ab68:	bne	1aba0 <argp_parse@@Base+0x710>
   1ab6c:	ldr	r0, [fp, #-152]	; 0xffffff68
   1ab70:	str	r0, [fp, #-144]	; 0xffffff70
   1ab74:	cmp	r0, r9
   1ab78:	blt	1abac <argp_parse@@Base+0x71c>
   1ab7c:	ldr	r1, [r4, #-12]
   1ab80:	sub	r0, r0, r9
   1ab84:	add	r0, r0, r1
   1ab88:	add	r0, r0, #1
   1ab8c:	str	r0, [r4, #-12]
   1ab90:	mov	r0, #0
   1ab94:	cmp	r0, #0
   1ab98:	beq	1a950 <argp_parse@@Base+0x4c0>
   1ab9c:	b	1af94 <argp_parse@@Base+0xb04>
   1aba0:	ldr	r0, [fp, #-144]	; 0xffffff70
   1aba4:	cmp	r0, r9
   1aba8:	bge	1ab7c <argp_parse@@Base+0x6ec>
   1abac:	mov	r0, #1
   1abb0:	str	r0, [fp, #-160]	; 0xffffff60
   1abb4:	mov	r0, #0
   1abb8:	cmp	r0, #0
   1abbc:	beq	1a950 <argp_parse@@Base+0x4c0>
   1abc0:	b	1af94 <argp_parse@@Base+0xb04>
   1abc4:	ldr	r0, [fp, #-200]	; 0xffffff38
   1abc8:	cmn	r0, #1
   1abcc:	beq	1ac4c <argp_parse@@Base+0x7bc>
   1abd0:	b	1b184 <argp_parse@@Base+0xcf4>
   1abd4:	cmp	r8, r7, asr #24
   1abd8:	beq	1ac4c <argp_parse@@Base+0x7bc>
   1abdc:	asr	r0, r7, #24
   1abe0:	ldr	r1, [fp, #-172]	; 0xffffff54
   1abe4:	sub	r0, r0, #1
   1abe8:	add	r0, r0, r0, lsl #3
   1abec:	ldr	r3, [r1, r0, lsl #2]
   1abf0:	cmp	r3, #0
   1abf4:	beq	1b150 <argp_parse@@Base+0xcc0>
   1abf8:	add	r4, r1, r0, lsl #2
   1abfc:	tst	r7, #8388608	; 0x800000
   1ac00:	mov	r2, sl
   1ac04:	ldr	r0, [r4, #32]!
   1ac08:	str	r0, [fp, #-120]	; 0xffffff88
   1ac0c:	ldr	r0, [r4, #-8]
   1ac10:	str	r0, [fp, #-128]	; 0xffffff80
   1ac14:	ldr	r0, [r4, #-4]
   1ac18:	str	r0, [fp, #-124]	; 0xffffff84
   1ac1c:	ldr	r0, [r4, #-20]	; 0xffffffec
   1ac20:	str	r0, [fp, #-136]	; 0xffffff78
   1ac24:	bic	r0, r7, #-16777216	; 0xff000000
   1ac28:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1ac2c:	orrne	r0, r0, #-16777216	; 0xff000000
   1ac30:	blx	r3
   1ac34:	mov	r1, #0
   1ac38:	ldr	r2, [fp, #-120]	; 0xffffff88
   1ac3c:	cmp	r0, #7
   1ac40:	str	r2, [r4]
   1ac44:	bne	1a948 <argp_parse@@Base+0x4b8>
   1ac48:	b	1acec <argp_parse@@Base+0x85c>
   1ac4c:	ldr	r0, [fp, #-216]	; 0xffffff28
   1ac50:	mov	r1, r7
   1ac54:	bl	11c38 <strchr@plt>
   1ac58:	cmp	r0, #0
   1ac5c:	beq	1acf4 <argp_parse@@Base+0x864>
   1ac60:	ldr	r1, [fp, #-172]	; 0xffffff54
   1ac64:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ac68:	cmp	r1, r2
   1ac6c:	bcs	1acf4 <argp_parse@@Base+0x864>
   1ac70:	add	r1, r1, #24
   1ac74:	ldr	r3, [r1, #-16]
   1ac78:	cmp	r3, r0
   1ac7c:	bhi	1ac98 <argp_parse@@Base+0x808>
   1ac80:	add	r3, r1, #36	; 0x24
   1ac84:	add	r1, r1, #12
   1ac88:	cmp	r1, r2
   1ac8c:	mov	r1, r3
   1ac90:	bcc	1ac74 <argp_parse@@Base+0x7e4>
   1ac94:	b	1acf4 <argp_parse@@Base+0x864>
   1ac98:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1ac9c:	cmp	r3, #0
   1aca0:	beq	1acf4 <argp_parse@@Base+0x864>
   1aca4:	mov	r4, r1
   1aca8:	mov	r2, sl
   1acac:	ldr	r0, [r4, #8]!
   1acb0:	str	r0, [fp, #-120]	; 0xffffff88
   1acb4:	ldr	r0, [r1]
   1acb8:	str	r0, [fp, #-128]	; 0xffffff80
   1acbc:	ldr	r0, [r1, #4]
   1acc0:	str	r0, [fp, #-124]	; 0xffffff84
   1acc4:	ldr	r0, [r1, #-12]
   1acc8:	str	r0, [fp, #-136]	; 0xffffff78
   1accc:	mov	r0, r7
   1acd0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1acd4:	blx	r3
   1acd8:	mov	r1, #1
   1acdc:	ldr	r2, [fp, #-120]	; 0xffffff88
   1ace0:	cmp	r0, #7
   1ace4:	str	r2, [r4]
   1ace8:	bne	1a948 <argp_parse@@Base+0x4b8>
   1acec:	cmp	r1, #0
   1acf0:	beq	1b150 <argp_parse@@Base+0xcc0>
   1acf4:	movw	r1, #65059	; 0xfe23
   1acf8:	movw	r3, #64800	; 0xfd20
   1acfc:	mov	r0, sl
   1ad00:	mov	r2, r7
   1ad04:	movt	r1, #1
   1ad08:	movt	r3, #1
   1ad0c:	bl	18224 <argp_error@@Base>
   1ad10:	mov	r0, #0
   1ad14:	b	1ad28 <argp_parse@@Base+0x898>
   1ad18:	mov	r1, r4
   1ad1c:	b	1a6f4 <argp_parse@@Base+0x264>
   1ad20:	mov	r7, #1
   1ad24:	mov	r0, #1
   1ad28:	add	r1, r7, #1
   1ad2c:	clz	r1, r1
   1ad30:	lsr	r1, r1, #5
   1ad34:	orr	r1, r1, r0
   1ad38:	mov	r0, #7
   1ad3c:	subs	r7, r0, #7
   1ad40:	movne	r7, r0
   1ad44:	cmp	r1, #0
   1ad48:	moveq	r7, r0
   1ad4c:	cmp	r7, #0
   1ad50:	beq	1ae18 <argp_parse@@Base+0x988>
   1ad54:	cmp	r7, #0
   1ad58:	beq	1afe4 <argp_parse@@Base+0xb54>
   1ad5c:	cmp	r7, #7
   1ad60:	bne	1ad78 <argp_parse@@Base+0x8e8>
   1ad64:	ldr	r1, [fp, #-112]	; 0xffffff90
   1ad68:	mov	r0, sl
   1ad6c:	mov	r2, #260	; 0x104
   1ad70:	bl	18168 <argp_state_help@@Base>
   1ad74:	mov	r7, #7
   1ad78:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ad7c:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ad80:	cmp	r4, r0
   1ad84:	bcs	1b0ac <argp_parse@@Base+0xc1c>
   1ad88:	movw	r1, #6
   1ad8c:	movt	r1, #256	; 0x100
   1ad90:	sub	r6, r1, #1
   1ad94:	ldr	r3, [r4]
   1ad98:	cmp	r3, #0
   1ad9c:	bne	1adb8 <argp_parse@@Base+0x928>
   1ada0:	add	r4, r4, #36	; 0x24
   1ada4:	cmp	r4, r0
   1ada8:	bcs	1ae00 <argp_parse@@Base+0x970>
   1adac:	ldr	r3, [r4]
   1adb0:	cmp	r3, #0
   1adb4:	beq	1ada0 <argp_parse@@Base+0x910>
   1adb8:	ldr	r0, [r4, #32]
   1adbc:	mov	r1, #0
   1adc0:	mov	r2, sl
   1adc4:	str	r0, [fp, #-120]	; 0xffffff88
   1adc8:	ldr	r0, [r4, #24]
   1adcc:	str	r0, [fp, #-128]	; 0xffffff80
   1add0:	ldr	r0, [r4, #28]
   1add4:	str	r0, [fp, #-124]	; 0xffffff84
   1add8:	ldr	r0, [r4, #12]
   1addc:	str	r0, [fp, #-136]	; 0xffffff78
   1ade0:	mov	r0, r6
   1ade4:	blx	r3
   1ade8:	ldr	r0, [fp, #-120]	; 0xffffff88
   1adec:	str	r0, [r4, #32]
   1adf0:	ldr	r0, [fp, #-168]	; 0xffffff58
   1adf4:	add	r4, r4, #36	; 0x24
   1adf8:	cmp	r4, r0
   1adfc:	bcc	1adac <argp_parse@@Base+0x91c>
   1ae00:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ae04:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ae08:	sub	r6, r0, #36	; 0x24
   1ae0c:	cmp	r6, r4
   1ae10:	bcs	1b0bc <argp_parse@@Base+0xc2c>
   1ae14:	b	1b134 <argp_parse@@Base+0xca4>
   1ae18:	ldr	r1, [fp, #-152]	; 0xffffff68
   1ae1c:	ldr	r0, [fp, #-144]	; 0xffffff70
   1ae20:	cmp	r0, r1
   1ae24:	bne	1af80 <argp_parse@@Base+0xaf0>
   1ae28:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ae2c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1ae30:	mov	r0, #0
   1ae34:	cmp	r4, r1
   1ae38:	bcs	1aedc <argp_parse@@Base+0xa4c>
   1ae3c:	movw	r0, #6
   1ae40:	mov	r7, #0
   1ae44:	movt	r0, #256	; 0x100
   1ae48:	sub	r6, r0, #4
   1ae4c:	mov	r0, #0
   1ae50:	cmp	r0, #7
   1ae54:	cmpne	r0, #0
   1ae58:	beq	1aeb0 <argp_parse@@Base+0xa20>
   1ae5c:	b	1aed8 <argp_parse@@Base+0xa48>
   1ae60:	ldr	r0, [r4, #32]
   1ae64:	mov	r1, #0
   1ae68:	mov	r2, sl
   1ae6c:	str	r0, [fp, #-120]	; 0xffffff88
   1ae70:	ldr	r0, [r4, #24]
   1ae74:	str	r0, [fp, #-128]	; 0xffffff80
   1ae78:	ldr	r0, [r4, #28]
   1ae7c:	str	r7, [fp, #-136]	; 0xffffff78
   1ae80:	str	r0, [fp, #-124]	; 0xffffff84
   1ae84:	mov	r0, r6
   1ae88:	blx	r3
   1ae8c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1ae90:	str	r1, [r4, #32]
   1ae94:	ldr	r1, [fp, #-168]	; 0xffffff58
   1ae98:	add	r4, r4, #36	; 0x24
   1ae9c:	cmp	r4, r1
   1aea0:	bcs	1aed8 <argp_parse@@Base+0xa48>
   1aea4:	cmp	r0, #7
   1aea8:	cmpne	r0, #0
   1aeac:	bne	1aed8 <argp_parse@@Base+0xa48>
   1aeb0:	ldr	r2, [r4, #12]
   1aeb4:	cmp	r2, #0
   1aeb8:	bne	1ae98 <argp_parse@@Base+0xa08>
   1aebc:	ldr	r3, [r4]
   1aec0:	cmp	r3, #0
   1aec4:	bne	1ae60 <argp_parse@@Base+0x9d0>
   1aec8:	mov	r0, #7
   1aecc:	add	r4, r4, #36	; 0x24
   1aed0:	cmp	r4, r1
   1aed4:	bcc	1aea4 <argp_parse@@Base+0xa14>
   1aed8:	ldr	r4, [fp, #-172]	; 0xffffff54
   1aedc:	sub	r7, r1, #36	; 0x24
   1aee0:	cmp	r7, r4
   1aee4:	bcc	1af74 <argp_parse@@Base+0xae4>
   1aee8:	movw	r1, #6
   1aeec:	movt	r1, #256	; 0x100
   1aef0:	sub	r6, r1, #5
   1aef4:	cmp	r0, #7
   1aef8:	cmpne	r0, #0
   1aefc:	beq	1af20 <argp_parse@@Base+0xa90>
   1af00:	b	1afc8 <argp_parse@@Base+0xb38>
   1af04:	mov	r0, #7
   1af08:	sub	r7, r7, #36	; 0x24
   1af0c:	cmp	r7, r4
   1af10:	bcc	1af74 <argp_parse@@Base+0xae4>
   1af14:	cmp	r0, #7
   1af18:	cmpne	r0, #0
   1af1c:	bne	1afc8 <argp_parse@@Base+0xb38>
   1af20:	ldr	r3, [r7]
   1af24:	cmp	r3, #0
   1af28:	beq	1af04 <argp_parse@@Base+0xa74>
   1af2c:	ldr	r0, [r7, #32]
   1af30:	mov	r1, #0
   1af34:	mov	r2, sl
   1af38:	str	r0, [fp, #-120]	; 0xffffff88
   1af3c:	ldr	r0, [r7, #24]
   1af40:	str	r0, [fp, #-128]	; 0xffffff80
   1af44:	ldr	r0, [r7, #28]
   1af48:	str	r0, [fp, #-124]	; 0xffffff84
   1af4c:	ldr	r0, [r7, #12]
   1af50:	str	r0, [fp, #-136]	; 0xffffff78
   1af54:	mov	r0, r6
   1af58:	blx	r3
   1af5c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1af60:	str	r1, [r7, #32]
   1af64:	ldr	r4, [fp, #-172]	; 0xffffff54
   1af68:	sub	r7, r7, #36	; 0x24
   1af6c:	cmp	r7, r4
   1af70:	bcs	1af14 <argp_parse@@Base+0xa84>
   1af74:	subs	r7, r0, #7
   1af78:	movne	r7, r0
   1af7c:	b	1afcc <argp_parse@@Base+0xb3c>
   1af80:	ldr	r1, [fp, #8]
   1af84:	cmp	r1, #0
   1af88:	beq	1af9c <argp_parse@@Base+0xb0c>
   1af8c:	str	r0, [r1]
   1af90:	b	1afe4 <argp_parse@@Base+0xb54>
   1af94:	mov	r1, #0
   1af98:	b	1ad3c <argp_parse@@Base+0x8ac>
   1af9c:	ldrb	r0, [fp, #-140]	; 0xffffff74
   1afa0:	tst	r0, #2
   1afa4:	bne	1ad64 <argp_parse@@Base+0x8d4>
   1afa8:	ldr	r0, [fp, #-112]	; 0xffffff90
   1afac:	cmp	r0, #0
   1afb0:	beq	1ad64 <argp_parse@@Base+0x8d4>
   1afb4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1afb8:	movw	r1, #65076	; 0xfe34
   1afbc:	movt	r1, #1
   1afc0:	bl	11c44 <fprintf@plt>
   1afc4:	b	1ad64 <argp_parse@@Base+0x8d4>
   1afc8:	mov	r7, r0
   1afcc:	ldr	r1, [fp, #8]
   1afd0:	cmp	r1, #0
   1afd4:	ldrne	r0, [fp, #-144]	; 0xffffff70
   1afd8:	strne	r0, [r1]
   1afdc:	cmp	r7, #0
   1afe0:	bne	1ad5c <argp_parse@@Base+0x8cc>
   1afe4:	ldr	r0, [fp, #-168]	; 0xffffff58
   1afe8:	ldr	r4, [fp, #-172]	; 0xffffff54
   1afec:	mov	r7, #0
   1aff0:	sub	r5, r0, #36	; 0x24
   1aff4:	cmp	r5, r4
   1aff8:	bcc	1b0ac <argp_parse@@Base+0xc1c>
   1affc:	movw	r1, #6
   1b000:	mov	r0, #0
   1b004:	movt	r1, #256	; 0x100
   1b008:	sub	r6, r1, #2
   1b00c:	cmp	r0, #7
   1b010:	cmpne	r0, #0
   1b014:	beq	1b038 <argp_parse@@Base+0xba8>
   1b018:	b	1b0a8 <argp_parse@@Base+0xc18>
   1b01c:	mov	r0, #7
   1b020:	sub	r5, r5, #36	; 0x24
   1b024:	cmp	r5, r4
   1b028:	bcc	1b08c <argp_parse@@Base+0xbfc>
   1b02c:	cmp	r0, #7
   1b030:	cmpne	r0, #0
   1b034:	bne	1b0a8 <argp_parse@@Base+0xc18>
   1b038:	ldr	r3, [r5]
   1b03c:	cmp	r3, #0
   1b040:	beq	1b01c <argp_parse@@Base+0xb8c>
   1b044:	ldr	r0, [r5, #32]
   1b048:	mov	r1, #0
   1b04c:	mov	r2, sl
   1b050:	str	r0, [fp, #-120]	; 0xffffff88
   1b054:	ldr	r0, [r5, #24]
   1b058:	str	r0, [fp, #-128]	; 0xffffff80
   1b05c:	ldr	r0, [r5, #28]
   1b060:	str	r0, [fp, #-124]	; 0xffffff84
   1b064:	ldr	r0, [r5, #12]
   1b068:	str	r0, [fp, #-136]	; 0xffffff78
   1b06c:	mov	r0, r6
   1b070:	blx	r3
   1b074:	ldr	r1, [fp, #-120]	; 0xffffff88
   1b078:	str	r1, [r5, #32]
   1b07c:	ldr	r4, [fp, #-172]	; 0xffffff54
   1b080:	sub	r5, r5, #36	; 0x24
   1b084:	cmp	r5, r4
   1b088:	bcs	1b02c <argp_parse@@Base+0xb9c>
   1b08c:	subs	r7, r0, #7
   1b090:	movne	r7, r0
   1b094:	ldr	r0, [fp, #-168]	; 0xffffff58
   1b098:	sub	r6, r0, #36	; 0x24
   1b09c:	cmp	r6, r4
   1b0a0:	bcc	1b134 <argp_parse@@Base+0xca4>
   1b0a4:	b	1b0bc <argp_parse@@Base+0xc2c>
   1b0a8:	mov	r7, r0
   1b0ac:	ldr	r0, [fp, #-168]	; 0xffffff58
   1b0b0:	sub	r6, r0, #36	; 0x24
   1b0b4:	cmp	r6, r4
   1b0b8:	bcc	1b134 <argp_parse@@Base+0xca4>
   1b0bc:	movw	r0, #6
   1b0c0:	movt	r0, #256	; 0x100
   1b0c4:	add	r5, r0, #1
   1b0c8:	ldr	r3, [r6]
   1b0cc:	cmp	r3, #0
   1b0d0:	bne	1b0ec <argp_parse@@Base+0xc5c>
   1b0d4:	sub	r6, r6, #36	; 0x24
   1b0d8:	cmp	r6, r4
   1b0dc:	bcc	1b134 <argp_parse@@Base+0xca4>
   1b0e0:	ldr	r3, [r6]
   1b0e4:	cmp	r3, #0
   1b0e8:	beq	1b0d4 <argp_parse@@Base+0xc44>
   1b0ec:	ldr	r0, [r6, #32]
   1b0f0:	mov	r1, #0
   1b0f4:	mov	r2, sl
   1b0f8:	str	r0, [fp, #-120]	; 0xffffff88
   1b0fc:	ldr	r0, [r6, #24]
   1b100:	str	r0, [fp, #-128]	; 0xffffff80
   1b104:	ldr	r0, [r6, #28]
   1b108:	str	r0, [fp, #-124]	; 0xffffff84
   1b10c:	ldr	r0, [r6, #12]
   1b110:	str	r0, [fp, #-136]	; 0xffffff78
   1b114:	mov	r0, r5
   1b118:	blx	r3
   1b11c:	ldr	r0, [fp, #-120]	; 0xffffff88
   1b120:	str	r0, [r6, #32]
   1b124:	ldr	r4, [fp, #-172]	; 0xffffff54
   1b128:	sub	r6, r6, #36	; 0x24
   1b12c:	cmp	r6, r4
   1b130:	bcs	1b0e0 <argp_parse@@Base+0xc50>
   1b134:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b138:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1b13c:	cmp	r7, #7
   1b140:	movweq	r7, #22
   1b144:	mov	r0, r7
   1b148:	sub	sp, fp, #28
   1b14c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b150:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1b154:	ldr	r1, [r0, #12]
   1b158:	cmp	r1, r7
   1b15c:	beq	1b18c <argp_parse@@Base+0xcfc>
   1b160:	ldr	r1, [r0]
   1b164:	cmp	r1, #0
   1b168:	beq	1b18c <argp_parse@@Base+0xcfc>
   1b16c:	add	r1, r0, #16
   1b170:	ldr	r0, [r0, #28]
   1b174:	cmp	r0, r7
   1b178:	mov	r0, r1
   1b17c:	bne	1b160 <argp_parse@@Base+0xcd0>
   1b180:	b	1b190 <argp_parse@@Base+0xd00>
   1b184:	mov	r1, #0
   1b188:	b	1ad38 <argp_parse@@Base+0x8a8>
   1b18c:	mov	r1, r0
   1b190:	ldr	r0, [r1]
   1b194:	movw	r1, #65067	; 0xfe2b
   1b198:	movw	r3, #64800	; 0xfd20
   1b19c:	movw	r2, #61256	; 0xef48
   1b1a0:	movt	r1, #1
   1b1a4:	movt	r3, #1
   1b1a8:	movt	r2, #1
   1b1ac:	cmp	r0, #0
   1b1b0:	movne	r2, r0
   1b1b4:	mov	r0, sl
   1b1b8:	b	1ad0c <argp_parse@@Base+0x87c>
   1b1bc:	mov	ip, r0
   1b1c0:	mov	r0, #0
   1b1c4:	cmp	r1, #0
   1b1c8:	beq	1b1f8 <argp_parse@@Base+0xd68>
   1b1cc:	ldr	r3, [r1, #52]	; 0x34
   1b1d0:	ldr	r1, [r3, #48]	; 0x30
   1b1d4:	ldr	r3, [r3, #52]	; 0x34
   1b1d8:	cmp	r1, r3
   1b1dc:	bxcs	lr
   1b1e0:	ldr	r2, [r1, #4]
   1b1e4:	cmp	r2, ip
   1b1e8:	beq	1b1f4 <argp_parse@@Base+0xd64>
   1b1ec:	add	r1, r1, #36	; 0x24
   1b1f0:	b	1b1d8 <argp_parse@@Base+0xd48>
   1b1f4:	ldr	r0, [r1, #24]
   1b1f8:	bx	lr
   1b1fc:	push	{r4, r5, r6, sl, fp, lr}
   1b200:	add	fp, sp, #16
   1b204:	mov	r5, r2
   1b208:	mov	r6, r1
   1b20c:	mov	r4, #7
   1b210:	cmn	r0, #3
   1b214:	bgt	1b244 <argp_parse@@Base+0xdb4>
   1b218:	cmn	r0, #4
   1b21c:	beq	1b270 <argp_parse@@Base+0xde0>
   1b220:	cmn	r0, #3
   1b224:	bne	1b30c <argp_parse@@Base+0xe7c>
   1b228:	ldr	r1, [r5, #48]	; 0x30
   1b22c:	mov	r0, r5
   1b230:	movw	r2, #513	; 0x201
   1b234:	bl	18168 <argp_state_help@@Base>
   1b238:	mov	r4, #0
   1b23c:	mov	r0, r4
   1b240:	pop	{r4, r5, r6, sl, fp, pc}
   1b244:	cmn	r0, #2
   1b248:	beq	1b2cc <argp_parse@@Base+0xe3c>
   1b24c:	cmp	r0, #63	; 0x3f
   1b250:	bne	1b30c <argp_parse@@Base+0xe7c>
   1b254:	ldr	r1, [r5, #48]	; 0x30
   1b258:	mov	r0, r5
   1b25c:	movw	r2, #634	; 0x27a
   1b260:	bl	18168 <argp_state_help@@Base>
   1b264:	mov	r4, #0
   1b268:	mov	r0, r4
   1b26c:	pop	{r4, r5, r6, sl, fp, pc}
   1b270:	movw	r0, #64997	; 0xfde5
   1b274:	cmp	r6, #0
   1b278:	mov	r1, #0
   1b27c:	mov	r2, #10
   1b280:	mov	r4, #0
   1b284:	movt	r0, #1
   1b288:	movne	r0, r6
   1b28c:	bl	119a4 <strtol@plt>
   1b290:	movw	r5, #6656	; 0x1a00
   1b294:	movt	r5, #3
   1b298:	str	r0, [r5]
   1b29c:	ldr	r0, [r5]
   1b2a0:	subs	r0, r0, #1
   1b2a4:	str	r0, [r5]
   1b2a8:	blt	1b30c <argp_parse@@Base+0xe7c>
   1b2ac:	mov	r0, #1
   1b2b0:	bl	11a88 <sleep@plt>
   1b2b4:	ldr	r0, [r5]
   1b2b8:	sub	r1, r0, #1
   1b2bc:	cmp	r0, #0
   1b2c0:	str	r1, [r5]
   1b2c4:	bgt	1b2ac <argp_parse@@Base+0xe1c>
   1b2c8:	b	1b30c <argp_parse@@Base+0xe7c>
   1b2cc:	movw	r0, #5564	; 0x15bc
   1b2d0:	movt	r0, #3
   1b2d4:	str	r6, [r0]
   1b2d8:	mov	r0, r6
   1b2dc:	bl	1b7d4 <argp_parse@@Base+0x1344>
   1b2e0:	movw	r1, #5560	; 0x15b8
   1b2e4:	str	r0, [r5, #40]	; 0x28
   1b2e8:	mov	r4, #0
   1b2ec:	movt	r1, #3
   1b2f0:	str	r0, [r1]
   1b2f4:	ldr	r0, [r5, #16]
   1b2f8:	and	r0, r0, #3
   1b2fc:	cmp	r0, #1
   1b300:	bne	1b30c <argp_parse@@Base+0xe7c>
   1b304:	ldr	r0, [r5, #8]
   1b308:	str	r6, [r0]
   1b30c:	mov	r0, r4
   1b310:	pop	{r4, r5, r6, sl, fp, pc}
   1b314:	push	{r4, sl, fp, lr}
   1b318:	add	fp, sp, #8
   1b31c:	mov	r1, r0
   1b320:	mov	r0, #7
   1b324:	cmp	r1, #86	; 0x56
   1b328:	popne	{r4, sl, fp, pc}
   1b32c:	movw	r0, #6660	; 0x1a04
   1b330:	mov	r4, r2
   1b334:	movt	r0, #3
   1b338:	ldr	r2, [r0]
   1b33c:	cmp	r2, #0
   1b340:	beq	1b364 <argp_parse@@Base+0xed4>
   1b344:	ldr	r0, [r4, #48]	; 0x30
   1b348:	mov	r1, r4
   1b34c:	blx	r2
   1b350:	ldrb	r1, [r4, #16]
   1b354:	mov	r0, #0
   1b358:	tst	r1, #32
   1b35c:	beq	1b398 <argp_parse@@Base+0xf08>
   1b360:	pop	{r4, sl, fp, pc}
   1b364:	movw	r0, #8336	; 0x2090
   1b368:	movt	r0, #3
   1b36c:	ldr	r2, [r0]
   1b370:	cmp	r2, #0
   1b374:	beq	1b3a0 <argp_parse@@Base+0xf10>
   1b378:	ldr	r0, [r4, #48]	; 0x30
   1b37c:	movw	r1, #65203	; 0xfeb3
   1b380:	movt	r1, #1
   1b384:	bl	11c44 <fprintf@plt>
   1b388:	ldrb	r1, [r4, #16]
   1b38c:	mov	r0, #0
   1b390:	tst	r1, #32
   1b394:	bne	1b360 <argp_parse@@Base+0xed0>
   1b398:	mov	r0, #0
   1b39c:	bl	11c14 <exit@plt>
   1b3a0:	movw	r1, #63892	; 0xf994
   1b3a4:	movw	r2, #65024	; 0xfe00
   1b3a8:	mov	r0, r4
   1b3ac:	movt	r1, #1
   1b3b0:	movt	r2, #1
   1b3b4:	bl	18224 <argp_error@@Base>
   1b3b8:	ldrb	r1, [r4, #16]
   1b3bc:	mov	r0, #0
   1b3c0:	tst	r1, #32
   1b3c4:	bne	1b360 <argp_parse@@Base+0xed0>
   1b3c8:	b	1b398 <argp_parse@@Base+0xf08>
   1b3cc:	push	{r4, r5, fp, lr}
   1b3d0:	add	fp, sp, #8
   1b3d4:	ldr	r2, [r0]
   1b3d8:	ldr	ip, [r0, #16]
   1b3dc:	mov	r4, r1
   1b3e0:	cmp	r2, #0
   1b3e4:	beq	1b45c <argp_parse@@Base+0xfcc>
   1b3e8:	ldr	r0, [r4, #8]
   1b3ec:	mov	r3, #0
   1b3f0:	add	r0, r0, #1
   1b3f4:	str	r0, [r4, #8]
   1b3f8:	mov	r0, #0
   1b3fc:	add	r5, r2, r3, lsl #3
   1b400:	ldr	r1, [r5, #4]
   1b404:	cmp	r1, #0
   1b408:	beq	1b424 <argp_parse@@Base+0xf94>
   1b40c:	add	r3, r3, #3
   1b410:	add	r0, r0, #1
   1b414:	add	r5, r2, r3, lsl #3
   1b418:	ldr	r1, [r5, #4]
   1b41c:	cmp	r1, #0
   1b420:	bne	1b40c <argp_parse@@Base+0xf7c>
   1b424:	ldr	r1, [r2, r3, lsl #3]
   1b428:	cmp	r1, #0
   1b42c:	bne	1b40c <argp_parse@@Base+0xf7c>
   1b430:	ldr	r1, [r5, #16]
   1b434:	cmp	r1, #0
   1b438:	bne	1b40c <argp_parse@@Base+0xf7c>
   1b43c:	ldr	r1, [r5, #20]
   1b440:	cmp	r1, #0
   1b444:	bne	1b40c <argp_parse@@Base+0xf7c>
   1b448:	ldr	r1, [r4]
   1b44c:	mov	r2, r4
   1b450:	add	r1, r1, r3
   1b454:	str	r1, [r2], #4
   1b458:	b	1b470 <argp_parse@@Base+0xfe0>
   1b45c:	ldr	r0, [r0, #4]
   1b460:	cmp	r0, #0
   1b464:	beq	1b47c <argp_parse@@Base+0xfec>
   1b468:	add	r2, r4, #8
   1b46c:	mov	r0, #1
   1b470:	ldr	r1, [r2]
   1b474:	add	r0, r1, r0
   1b478:	str	r0, [r2]
   1b47c:	cmp	ip, #0
   1b480:	beq	1b4b4 <argp_parse@@Base+0x1024>
   1b484:	ldr	r0, [ip]
   1b488:	cmp	r0, #0
   1b48c:	popeq	{r4, r5, fp, pc}
   1b490:	add	r5, ip, #16
   1b494:	mov	r1, r4
   1b498:	bl	1b3cc <argp_parse@@Base+0xf3c>
   1b49c:	ldr	r0, [r4, #12]
   1b4a0:	add	r0, r0, #1
   1b4a4:	str	r0, [r4, #12]
   1b4a8:	ldr	r0, [r5], #16
   1b4ac:	cmp	r0, #0
   1b4b0:	bne	1b494 <argp_parse@@Base+0x1004>
   1b4b4:	pop	{r4, r5, fp, pc}
   1b4b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b4bc:	add	fp, sp, #28
   1b4c0:	sub	sp, sp, #28
   1b4c4:	ldr	sl, [r0]
   1b4c8:	ldr	r5, [r0, #16]
   1b4cc:	ldr	r6, [fp, #8]
   1b4d0:	mov	r7, r3
   1b4d4:	cmp	sl, #0
   1b4d8:	beq	1b6b4 <argp_parse@@Base+0x1224>
   1b4dc:	str	r0, [sp, #8]
   1b4e0:	add	r0, sp, #16
   1b4e4:	mov	r8, sl
   1b4e8:	str	r2, [sp, #12]
   1b4ec:	stm	r0, {r1, r5, r7}
   1b4f0:	ldr	r5, [r8, #4]
   1b4f4:	cmp	r5, #0
   1b4f8:	bne	1b5a0 <argp_parse@@Base+0x1110>
   1b4fc:	b	1b57c <argp_parse@@Base+0x10ec>
   1b500:	ldr	r0, [r6, #8]
   1b504:	str	r5, [r0]
   1b508:	ldr	r1, [sl, #8]
   1b50c:	cmp	r1, #0
   1b510:	beq	1b694 <argp_parse@@Base+0x1204>
   1b514:	ldrb	r1, [sl, #12]
   1b518:	tst	r1, #1
   1b51c:	mov	r1, #2
   1b520:	movweq	r1, #1
   1b524:	mov	r5, #0
   1b528:	stmib	r0, {r1, r5}
   1b52c:	ldr	r1, [r8, #4]
   1b530:	ldr	r2, [r7, #48]	; 0x30
   1b534:	ldr	r3, [sp, #24]
   1b538:	cmp	r1, #0
   1b53c:	sub	r2, r3, r2
   1b540:	mov	r3, #956301312	; 0x39000000
   1b544:	ldreq	r1, [sl, #4]
   1b548:	lsr	r2, r2, #2
   1b54c:	mul	r2, r2, r3
   1b550:	bic	r1, r1, #-16777216	; 0xff000000
   1b554:	orr	r1, r2, r1
   1b558:	add	r1, r1, #16777216	; 0x1000000
   1b55c:	str	r1, [r0, #12]
   1b560:	add	r1, r0, #16
   1b564:	str	r1, [r6, #8]
   1b568:	str	r5, [r0, #16]
   1b56c:	add	r8, r8, #24
   1b570:	ldr	r5, [r8, #4]
   1b574:	cmp	r5, #0
   1b578:	bne	1b5a0 <argp_parse@@Base+0x1110>
   1b57c:	ldr	r0, [r8]
   1b580:	cmp	r0, #0
   1b584:	bne	1b5a0 <argp_parse@@Base+0x1110>
   1b588:	ldr	r0, [r8, #16]
   1b58c:	cmp	r0, #0
   1b590:	bne	1b5a0 <argp_parse@@Base+0x1110>
   1b594:	ldr	r0, [r8, #20]
   1b598:	cmp	r0, #0
   1b59c:	beq	1b69c <argp_parse@@Base+0x120c>
   1b5a0:	ldr	r0, [r8, #12]
   1b5a4:	tst	r0, #4
   1b5a8:	moveq	sl, r8
   1b5ac:	ldrb	r1, [sl, #12]
   1b5b0:	tst	r1, #8
   1b5b4:	bne	1b56c <argp_parse@@Base+0x10dc>
   1b5b8:	sub	r1, r5, #1
   1b5bc:	cmp	r1, #254	; 0xfe
   1b5c0:	bhi	1b640 <argp_parse@@Base+0x11b0>
   1b5c4:	ands	r0, r0, #8
   1b5c8:	bne	1b640 <argp_parse@@Base+0x11b0>
   1b5cc:	bl	11bfc <__ctype_b_loc@plt>
   1b5d0:	ldr	r0, [r0]
   1b5d4:	add	r0, r0, r5, lsl #1
   1b5d8:	ldrb	r0, [r0, #1]
   1b5dc:	tst	r0, #64	; 0x40
   1b5e0:	beq	1b640 <argp_parse@@Base+0x11b0>
   1b5e4:	ldr	r0, [r6, #4]
   1b5e8:	add	r1, r0, #1
   1b5ec:	str	r1, [r6, #4]
   1b5f0:	strb	r5, [r0]
   1b5f4:	ldr	r0, [sl, #8]
   1b5f8:	cmp	r0, #0
   1b5fc:	beq	1b634 <argp_parse@@Base+0x11a4>
   1b600:	ldr	r0, [r6, #4]
   1b604:	add	r1, r0, #1
   1b608:	str	r1, [r6, #4]
   1b60c:	mov	r1, #58	; 0x3a
   1b610:	strb	r1, [r0]
   1b614:	ldrb	r0, [sl, #12]
   1b618:	tst	r0, #1
   1b61c:	beq	1b634 <argp_parse@@Base+0x11a4>
   1b620:	ldr	r0, [r6, #4]
   1b624:	add	r1, r0, #1
   1b628:	str	r1, [r6, #4]
   1b62c:	mov	r1, #58	; 0x3a
   1b630:	strb	r1, [r0]
   1b634:	ldr	r0, [r6, #4]
   1b638:	mov	r1, #0
   1b63c:	strb	r1, [r0]
   1b640:	ldr	r5, [r8]
   1b644:	cmp	r5, #0
   1b648:	beq	1b56c <argp_parse@@Base+0x10dc>
   1b64c:	ldr	r7, [r6]
   1b650:	ldr	r9, [r7, #8]
   1b654:	ldr	r0, [r9]
   1b658:	cmp	r0, #0
   1b65c:	beq	1b500 <argp_parse@@Base+0x1070>
   1b660:	mov	r4, r9
   1b664:	mov	r1, r5
   1b668:	bl	11998 <strcmp@plt>
   1b66c:	cmp	r0, #0
   1b670:	beq	1b684 <argp_parse@@Base+0x11f4>
   1b674:	ldr	r0, [r4, #16]!
   1b678:	cmp	r0, #0
   1b67c:	bne	1b664 <argp_parse@@Base+0x11d4>
   1b680:	b	1b500 <argp_parse@@Base+0x1070>
   1b684:	sub	r0, r4, r9
   1b688:	cmn	r0, #1
   1b68c:	bgt	1b56c <argp_parse@@Base+0x10dc>
   1b690:	b	1b500 <argp_parse@@Base+0x1070>
   1b694:	mov	r1, #0
   1b698:	b	1b524 <argp_parse@@Base+0x1094>
   1b69c:	ldr	r0, [sp, #8]
   1b6a0:	add	r7, sp, #16
   1b6a4:	ldr	r2, [sp, #12]
   1b6a8:	ldm	r7, {r1, r5, r7}
   1b6ac:	ldr	r3, [r0, #4]
   1b6b0:	b	1b6c0 <argp_parse@@Base+0x1230>
   1b6b4:	ldr	r3, [r0, #4]
   1b6b8:	cmp	r3, #0
   1b6bc:	beq	1b764 <argp_parse@@Base+0x12d4>
   1b6c0:	str	r0, [r7, #4]
   1b6c4:	str	r3, [r7]
   1b6c8:	mov	r0, #0
   1b6cc:	cmp	r5, #0
   1b6d0:	add	ip, r7, #12
   1b6d4:	ldr	r3, [r6, #4]
   1b6d8:	str	r0, [r7, #32]
   1b6dc:	str	r0, [r7, #24]
   1b6e0:	stm	ip, {r0, r1, r2}
   1b6e4:	str	r0, [r7, #28]
   1b6e8:	str	r3, [r7, #8]
   1b6ec:	beq	1b714 <argp_parse@@Base+0x1284>
   1b6f0:	ldr	r1, [r5, r0, lsl #2]
   1b6f4:	add	r0, r0, #4
   1b6f8:	cmp	r1, #0
   1b6fc:	bne	1b6f0 <argp_parse@@Base+0x1260>
   1b700:	ldr	r1, [r6, #12]
   1b704:	add	r0, r1, r0
   1b708:	str	r1, [r7, #28]
   1b70c:	sub	r0, r0, #4
   1b710:	str	r0, [r6, #12]
   1b714:	add	r3, r7, #36	; 0x24
   1b718:	cmp	r5, #0
   1b71c:	beq	1b758 <argp_parse@@Base+0x12c8>
   1b720:	ldr	r0, [r5]
   1b724:	cmp	r0, #0
   1b728:	beq	1b758 <argp_parse@@Base+0x12c8>
   1b72c:	add	r4, r5, #16
   1b730:	mov	r5, #0
   1b734:	mov	r1, r7
   1b738:	mov	r2, r5
   1b73c:	str	r6, [sp]
   1b740:	bl	1b4b8 <argp_parse@@Base+0x1028>
   1b744:	mov	r3, r0
   1b748:	ldr	r0, [r4, r5, lsl #4]
   1b74c:	add	r5, r5, #1
   1b750:	cmp	r0, #0
   1b754:	bne	1b734 <argp_parse@@Base+0x12a4>
   1b758:	mov	r0, r3
   1b75c:	sub	sp, fp, #28
   1b760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b764:	mov	r3, r7
   1b768:	mov	r7, #0
   1b76c:	cmp	r5, #0
   1b770:	bne	1b720 <argp_parse@@Base+0x1290>
   1b774:	b	1b758 <argp_parse@@Base+0x12c8>
   1b778:	movw	r2, #6664	; 0x1a08
   1b77c:	movt	r2, #3
   1b780:	stm	r2, {r0, r1}
   1b784:	movw	r0, #6660	; 0x1a04
   1b788:	movw	r1, #47004	; 0xb79c
   1b78c:	movt	r0, #3
   1b790:	movt	r1, #1
   1b794:	str	r1, [r0]
   1b798:	bx	lr
   1b79c:	push	{fp, lr}
   1b7a0:	mov	fp, sp
   1b7a4:	sub	sp, sp, #8
   1b7a8:	movw	r2, #6664	; 0x1a08
   1b7ac:	movw	r3, #65114	; 0xfe5a
   1b7b0:	movt	r2, #3
   1b7b4:	movt	r3, #1
   1b7b8:	ldm	r2, {r1, r2}
   1b7bc:	str	r2, [sp]
   1b7c0:	movw	r2, #65100	; 0xfe4c
   1b7c4:	movt	r2, #1
   1b7c8:	bl	1c174 <argp_parse@@Base+0x1ce4>
   1b7cc:	mov	sp, fp
   1b7d0:	pop	{fp, pc}
   1b7d4:	sub	r0, r0, #1
   1b7d8:	ldrb	r3, [r0, #1]!
   1b7dc:	cmp	r3, #47	; 0x2f
   1b7e0:	beq	1b7d8 <argp_parse@@Base+0x1348>
   1b7e4:	mov	r2, #0
   1b7e8:	mov	r1, r0
   1b7ec:	uxtb	r3, r3
   1b7f0:	cmp	r3, #47	; 0x2f
   1b7f4:	bne	1b80c <argp_parse@@Base+0x137c>
   1b7f8:	ldrb	r3, [r1, #1]!
   1b7fc:	mov	r2, #1
   1b800:	uxtb	r3, r3
   1b804:	cmp	r3, #47	; 0x2f
   1b808:	beq	1b7f8 <argp_parse@@Base+0x1368>
   1b80c:	cmp	r3, #0
   1b810:	bxeq	lr
   1b814:	tst	r2, #1
   1b818:	mov	r2, #0
   1b81c:	movne	r0, r1
   1b820:	ldrb	r3, [r1, #1]!
   1b824:	uxtb	r3, r3
   1b828:	cmp	r3, #47	; 0x2f
   1b82c:	bne	1b80c <argp_parse@@Base+0x137c>
   1b830:	b	1b7f8 <argp_parse@@Base+0x1368>
   1b834:	push	{r4, sl, fp, lr}
   1b838:	add	fp, sp, #8
   1b83c:	mov	r4, r0
   1b840:	bl	11c20 <strlen@plt>
   1b844:	mov	r1, r0
   1b848:	sub	r2, r4, #1
   1b84c:	mov	r0, r1
   1b850:	cmp	r1, #2
   1b854:	bcc	1b868 <argp_parse@@Base+0x13d8>
   1b858:	ldrb	r3, [r2, r0]
   1b85c:	sub	r1, r0, #1
   1b860:	cmp	r3, #47	; 0x2f
   1b864:	beq	1b84c <argp_parse@@Base+0x13bc>
   1b868:	pop	{r4, sl, fp, pc}
   1b86c:	sub	sp, sp, #8
   1b870:	push	{r4, r5, r6, r7, fp, lr}
   1b874:	add	fp, sp, #16
   1b878:	sub	sp, sp, #8
   1b87c:	mov	r5, r0
   1b880:	add	r0, fp, #8
   1b884:	cmp	r1, #11
   1b888:	str	r2, [fp, #8]
   1b88c:	str	r3, [fp, #12]
   1b890:	str	r0, [sp, #4]
   1b894:	bhi	1b8d0 <argp_parse@@Base+0x1440>
   1b898:	mov	r0, #1
   1b89c:	movw	r2, #1300	; 0x514
   1b8a0:	tst	r2, r0, lsl r1
   1b8a4:	bne	1b990 <argp_parse@@Base+0x1500>
   1b8a8:	movw	r2, #2570	; 0xa0a
   1b8ac:	tst	r2, r0, lsl r1
   1b8b0:	bne	1b8f8 <argp_parse@@Base+0x1468>
   1b8b4:	cmp	r1, #0
   1b8b8:	bne	1b8d0 <argp_parse@@Base+0x1440>
   1b8bc:	ldr	r0, [sp, #4]
   1b8c0:	add	r1, r0, #4
   1b8c4:	str	r1, [sp, #4]
   1b8c8:	mov	r1, #0
   1b8cc:	b	1b99c <argp_parse@@Base+0x150c>
   1b8d0:	sub	r0, r1, #1024	; 0x400
   1b8d4:	cmp	r0, #10
   1b8d8:	bhi	1b990 <argp_parse@@Base+0x1500>
   1b8dc:	mov	r2, #1
   1b8e0:	movw	r3, #645	; 0x285
   1b8e4:	tst	r3, r2, lsl r0
   1b8e8:	bne	1b990 <argp_parse@@Base+0x1500>
   1b8ec:	movw	r3, #1282	; 0x502
   1b8f0:	tst	r3, r2, lsl r0
   1b8f4:	beq	1b904 <argp_parse@@Base+0x1474>
   1b8f8:	mov	r0, r5
   1b8fc:	bl	11cd4 <fcntl64@plt>
   1b900:	b	1b9a8 <argp_parse@@Base+0x1518>
   1b904:	cmp	r0, #6
   1b908:	bne	1b990 <argp_parse@@Base+0x1500>
   1b90c:	ldr	r0, [sp, #4]
   1b910:	movw	r7, #6672	; 0x1a10
   1b914:	movt	r7, #3
   1b918:	add	r1, r0, #4
   1b91c:	str	r1, [sp, #4]
   1b920:	ldr	r6, [r0]
   1b924:	ldr	r0, [r7]
   1b928:	cmp	r0, #0
   1b92c:	bmi	1b9cc <argp_parse@@Base+0x153c>
   1b930:	mov	r0, r5
   1b934:	movw	r1, #1030	; 0x406
   1b938:	mov	r2, r6
   1b93c:	bl	11cd4 <fcntl64@plt>
   1b940:	mov	r4, r0
   1b944:	cmn	r0, #1
   1b948:	bgt	1b9c0 <argp_parse@@Base+0x1530>
   1b94c:	bl	11c50 <__errno_location@plt>
   1b950:	ldr	r0, [r0]
   1b954:	cmp	r0, #22
   1b958:	bne	1b9c0 <argp_parse@@Base+0x1530>
   1b95c:	mov	r0, r5
   1b960:	mov	r1, #0
   1b964:	mov	r2, r6
   1b968:	bl	11cd4 <fcntl64@plt>
   1b96c:	mov	r4, r0
   1b970:	cmp	r0, #0
   1b974:	bmi	1b9ac <argp_parse@@Base+0x151c>
   1b978:	mvn	r0, #0
   1b97c:	str	r0, [r7]
   1b980:	mov	r0, #1
   1b984:	cmp	r0, #0
   1b988:	bne	1b9f8 <argp_parse@@Base+0x1568>
   1b98c:	b	1b9ac <argp_parse@@Base+0x151c>
   1b990:	ldr	r0, [sp, #4]
   1b994:	add	r2, r0, #4
   1b998:	str	r2, [sp, #4]
   1b99c:	ldr	r2, [r0]
   1b9a0:	mov	r0, r5
   1b9a4:	bl	11cd4 <fcntl64@plt>
   1b9a8:	mov	r4, r0
   1b9ac:	mov	r0, r4
   1b9b0:	sub	sp, fp, #16
   1b9b4:	pop	{r4, r5, r6, r7, fp, lr}
   1b9b8:	add	sp, sp, #8
   1b9bc:	bx	lr
   1b9c0:	mov	r0, #1
   1b9c4:	str	r0, [r7]
   1b9c8:	b	1b9ac <argp_parse@@Base+0x151c>
   1b9cc:	mov	r0, r5
   1b9d0:	mov	r1, #0
   1b9d4:	mov	r2, r6
   1b9d8:	bl	11cd4 <fcntl64@plt>
   1b9dc:	mov	r4, r0
   1b9e0:	ldr	r0, [r7]
   1b9e4:	add	r0, r0, #1
   1b9e8:	clz	r0, r0
   1b9ec:	lsr	r0, r0, #5
   1b9f0:	cmp	r0, #0
   1b9f4:	beq	1b9ac <argp_parse@@Base+0x151c>
   1b9f8:	cmp	r4, #0
   1b9fc:	bmi	1b9ac <argp_parse@@Base+0x151c>
   1ba00:	mov	r0, r4
   1ba04:	mov	r1, #1
   1ba08:	bl	11cd4 <fcntl64@plt>
   1ba0c:	cmp	r0, #0
   1ba10:	bmi	1ba2c <argp_parse@@Base+0x159c>
   1ba14:	orr	r2, r0, #1
   1ba18:	mov	r0, r4
   1ba1c:	mov	r1, #2
   1ba20:	bl	11cd4 <fcntl64@plt>
   1ba24:	cmn	r0, #1
   1ba28:	bne	1b9ac <argp_parse@@Base+0x151c>
   1ba2c:	bl	11c50 <__errno_location@plt>
   1ba30:	ldr	r6, [r0]
   1ba34:	mov	r5, r0
   1ba38:	mov	r0, r4
   1ba3c:	bl	11e00 <close@plt>
   1ba40:	str	r6, [r5]
   1ba44:	mvn	r4, #0
   1ba48:	b	1b9ac <argp_parse@@Base+0x151c>
   1ba4c:	push	{r4, r5, r6, sl, fp, lr}
   1ba50:	add	fp, sp, #16
   1ba54:	mov	r4, r0
   1ba58:	bl	11c50 <__errno_location@plt>
   1ba5c:	ldr	r6, [r0]
   1ba60:	mov	r5, r0
   1ba64:	mov	r0, r4
   1ba68:	bl	11a1c <free@plt>
   1ba6c:	str	r6, [r5]
   1ba70:	pop	{r4, r5, r6, sl, fp, pc}
   1ba74:	push	{fp, lr}
   1ba78:	mov	fp, sp
   1ba7c:	sub	sp, sp, #16
   1ba80:	mov	ip, #0
   1ba84:	str	ip, [sp, #8]
   1ba88:	str	ip, [sp, #4]
   1ba8c:	ldr	ip, [fp, #8]
   1ba90:	str	ip, [sp]
   1ba94:	bl	1e7e4 <argp_parse@@Base+0x4354>
   1ba98:	mov	sp, fp
   1ba9c:	pop	{fp, pc}
   1baa0:	push	{fp, lr}
   1baa4:	mov	fp, sp
   1baa8:	sub	sp, sp, #16
   1baac:	mov	ip, #0
   1bab0:	str	ip, [sp, #12]
   1bab4:	str	ip, [sp, #4]
   1bab8:	ldr	ip, [fp, #12]
   1babc:	str	ip, [sp, #8]
   1bac0:	ldr	ip, [fp, #8]
   1bac4:	str	ip, [sp]
   1bac8:	bl	1d2c4 <argp_parse@@Base+0x2e34>
   1bacc:	mov	sp, fp
   1bad0:	pop	{fp, pc}
   1bad4:	push	{fp, lr}
   1bad8:	mov	fp, sp
   1badc:	sub	sp, sp, #16
   1bae0:	mov	ip, #0
   1bae4:	str	ip, [sp, #8]
   1bae8:	mov	ip, #1
   1baec:	str	ip, [sp, #4]
   1baf0:	ldr	ip, [fp, #8]
   1baf4:	str	ip, [sp]
   1baf8:	bl	1e7e4 <argp_parse@@Base+0x4354>
   1bafc:	mov	sp, fp
   1bb00:	pop	{fp, pc}
   1bb04:	push	{fp, lr}
   1bb08:	mov	fp, sp
   1bb0c:	sub	sp, sp, #16
   1bb10:	mov	ip, #0
   1bb14:	str	ip, [sp, #12]
   1bb18:	mov	ip, #1
   1bb1c:	str	ip, [sp, #4]
   1bb20:	ldr	ip, [fp, #12]
   1bb24:	str	ip, [sp, #8]
   1bb28:	ldr	ip, [fp, #8]
   1bb2c:	str	ip, [sp]
   1bb30:	bl	1d2c4 <argp_parse@@Base+0x2e34>
   1bb34:	mov	sp, fp
   1bb38:	pop	{fp, pc}
   1bb3c:	push	{r4, r5, fp, lr}
   1bb40:	add	fp, sp, #8
   1bb44:	cmp	r0, #0
   1bb48:	beq	1bbdc <argp_parse@@Base+0x174c>
   1bb4c:	mov	r1, #47	; 0x2f
   1bb50:	mov	r4, r0
   1bb54:	bl	11d28 <strrchr@plt>
   1bb58:	cmp	r0, #0
   1bb5c:	mov	r5, r4
   1bb60:	addne	r5, r0, #1
   1bb64:	sub	r0, r5, r4
   1bb68:	cmp	r0, #7
   1bb6c:	blt	1bbc0 <argp_parse@@Base+0x1730>
   1bb70:	movw	r1, #65183	; 0xfe9f
   1bb74:	sub	r0, r5, #7
   1bb78:	mov	r2, #7
   1bb7c:	movt	r1, #1
   1bb80:	bl	11ddc <strncmp@plt>
   1bb84:	cmp	r0, #0
   1bb88:	bne	1bbc0 <argp_parse@@Base+0x1730>
   1bb8c:	movw	r1, #65191	; 0xfea7
   1bb90:	mov	r0, r5
   1bb94:	mov	r2, #3
   1bb98:	movt	r1, #1
   1bb9c:	bl	11ddc <strncmp@plt>
   1bba0:	cmp	r0, #0
   1bba4:	beq	1bbb0 <argp_parse@@Base+0x1720>
   1bba8:	mov	r4, r5
   1bbac:	b	1bbc0 <argp_parse@@Base+0x1730>
   1bbb0:	movw	r0, #5560	; 0x15b8
   1bbb4:	add	r4, r5, #3
   1bbb8:	movt	r0, #3
   1bbbc:	str	r4, [r0]
   1bbc0:	movw	r0, #5564	; 0x15bc
   1bbc4:	movt	r0, #3
   1bbc8:	str	r4, [r0]
   1bbcc:	movw	r0, #6676	; 0x1a14
   1bbd0:	movt	r0, #3
   1bbd4:	str	r4, [r0]
   1bbd8:	pop	{r4, r5, fp, pc}
   1bbdc:	movw	r0, #5568	; 0x15c0
   1bbe0:	mov	r1, #55	; 0x37
   1bbe4:	mov	r2, #1
   1bbe8:	movt	r0, #3
   1bbec:	ldr	r3, [r0]
   1bbf0:	movw	r0, #65127	; 0xfe67
   1bbf4:	movt	r0, #1
   1bbf8:	bl	11b3c <fwrite@plt>
   1bbfc:	bl	11de8 <abort@plt>
   1bc00:	push	{r4, r5, fp, lr}
   1bc04:	add	fp, sp, #8
   1bc08:	mov	r5, r0
   1bc0c:	mov	r0, #33	; 0x21
   1bc10:	bl	1c4b8 <argp_parse@@Base+0x2028>
   1bc14:	add	r1, r5, #44	; 0x2c
   1bc18:	mov	r2, #32
   1bc1c:	mov	r4, r0
   1bc20:	bl	11c98 <strncpy@plt>
   1bc24:	mov	r5, #0
   1bc28:	strb	r5, [r0, #32]
   1bc2c:	bl	11c20 <strlen@plt>
   1bc30:	cmp	r0, #1
   1bc34:	blt	1bc5c <argp_parse@@Base+0x17cc>
   1bc38:	add	r1, r4, r0
   1bc3c:	mov	r0, r1
   1bc40:	ldrb	r2, [r0, #-1]!
   1bc44:	cmp	r2, #32
   1bc48:	bne	1bc5c <argp_parse@@Base+0x17cc>
   1bc4c:	strb	r5, [r1, #-1]
   1bc50:	cmp	r4, r0
   1bc54:	mov	r1, r0
   1bc58:	bcc	1bc40 <argp_parse@@Base+0x17b0>
   1bc5c:	mov	r0, r4
   1bc60:	pop	{r4, r5, fp, pc}
   1bc64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc68:	add	fp, sp, #28
   1bc6c:	sub	sp, sp, #12
   1bc70:	mov	r6, #0
   1bc74:	mov	r4, r3
   1bc78:	str	r2, [sp, #4]
   1bc7c:	mov	sl, r1
   1bc80:	str	r6, [sp, #8]
   1bc84:	bl	119ec <utmpxname@plt>
   1bc88:	bl	11ab8 <setutxent@plt>
   1bc8c:	bl	11df4 <getutxent@plt>
   1bc90:	cmp	r0, #0
   1bc94:	beq	1bd58 <argp_parse@@Base+0x18c8>
   1bc98:	mov	r7, r0
   1bc9c:	and	r8, r4, #1
   1bca0:	mov	r5, #0
   1bca4:	tst	r4, #2
   1bca8:	bne	1bd60 <argp_parse@@Base+0x18d0>
   1bcac:	mov	r9, #384	; 0x180
   1bcb0:	add	r4, sp, #8
   1bcb4:	mov	r6, #0
   1bcb8:	ldrb	r0, [r7, #44]	; 0x2c
   1bcbc:	cmp	r0, #0
   1bcc0:	cmpne	r8, #0
   1bcc4:	bne	1bd1c <argp_parse@@Base+0x188c>
   1bcc8:	ldr	r0, [sp, #8]
   1bccc:	cmp	r5, r0
   1bcd0:	bne	1bcf0 <argp_parse@@Base+0x1860>
   1bcd4:	mov	r0, r6
   1bcd8:	mov	r1, r4
   1bcdc:	mov	r2, #1
   1bce0:	mvn	r3, #0
   1bce4:	str	r9, [sp]
   1bce8:	bl	1c6e8 <argp_parse@@Base+0x2258>
   1bcec:	mov	r6, r0
   1bcf0:	add	r0, r5, r5, lsl #1
   1bcf4:	mov	r1, r7
   1bcf8:	mov	r2, #384	; 0x180
   1bcfc:	add	r0, r6, r0, lsl #7
   1bd00:	bl	11a58 <memcpy@plt>
   1bd04:	add	r5, r5, #1
   1bd08:	bl	11df4 <getutxent@plt>
   1bd0c:	mov	r7, r0
   1bd10:	cmp	r0, #0
   1bd14:	bne	1bcb8 <argp_parse@@Base+0x1828>
   1bd18:	b	1bea4 <argp_parse@@Base+0x1a14>
   1bd1c:	ldrh	r0, [r7]
   1bd20:	cmp	r0, #7
   1bd24:	bne	1bcc8 <argp_parse@@Base+0x1838>
   1bd28:	ldr	r0, [r7, #4]
   1bd2c:	cmp	r0, #1
   1bd30:	blt	1bcc8 <argp_parse@@Base+0x1838>
   1bd34:	mov	r1, #0
   1bd38:	bl	11bf0 <kill@plt>
   1bd3c:	cmn	r0, #1
   1bd40:	bgt	1bcc8 <argp_parse@@Base+0x1838>
   1bd44:	bl	11c50 <__errno_location@plt>
   1bd48:	ldr	r0, [r0]
   1bd4c:	cmp	r0, #3
   1bd50:	bne	1bcc8 <argp_parse@@Base+0x1838>
   1bd54:	b	1bd08 <argp_parse@@Base+0x1878>
   1bd58:	mov	r5, #0
   1bd5c:	b	1bea4 <argp_parse@@Base+0x1a14>
   1bd60:	cmp	r8, #0
   1bd64:	bne	1bdf0 <argp_parse@@Base+0x1960>
   1bd68:	mov	r8, #384	; 0x180
   1bd6c:	add	r4, sp, #8
   1bd70:	mov	r6, #0
   1bd74:	ldrb	r0, [r7, #44]	; 0x2c
   1bd78:	cmp	r0, #0
   1bd7c:	bne	1bdb8 <argp_parse@@Base+0x1928>
   1bd80:	b	1bd9c <argp_parse@@Base+0x190c>
   1bd84:	add	r0, r5, r5, lsl #1
   1bd88:	mov	r1, r7
   1bd8c:	mov	r2, #384	; 0x180
   1bd90:	add	r0, r6, r0, lsl #7
   1bd94:	bl	11a58 <memcpy@plt>
   1bd98:	add	r5, r5, #1
   1bd9c:	bl	11df4 <getutxent@plt>
   1bda0:	mov	r7, r0
   1bda4:	cmp	r0, #0
   1bda8:	beq	1bea4 <argp_parse@@Base+0x1a14>
   1bdac:	ldrb	r0, [r7, #44]	; 0x2c
   1bdb0:	cmp	r0, #0
   1bdb4:	beq	1bd9c <argp_parse@@Base+0x190c>
   1bdb8:	ldrh	r0, [r7]
   1bdbc:	cmp	r0, #7
   1bdc0:	bne	1bd9c <argp_parse@@Base+0x190c>
   1bdc4:	ldr	r0, [sp, #8]
   1bdc8:	cmp	r5, r0
   1bdcc:	bne	1bd84 <argp_parse@@Base+0x18f4>
   1bdd0:	mov	r0, r6
   1bdd4:	mov	r1, r4
   1bdd8:	mov	r2, #1
   1bddc:	mvn	r3, #0
   1bde0:	str	r8, [sp]
   1bde4:	bl	1c6e8 <argp_parse@@Base+0x2258>
   1bde8:	mov	r6, r0
   1bdec:	b	1bd84 <argp_parse@@Base+0x18f4>
   1bdf0:	mov	r4, #384	; 0x180
   1bdf4:	add	r8, sp, #8
   1bdf8:	mov	r6, #0
   1bdfc:	ldrb	r0, [r7, #44]	; 0x2c
   1be00:	cmp	r0, #0
   1be04:	bne	1be40 <argp_parse@@Base+0x19b0>
   1be08:	b	1be24 <argp_parse@@Base+0x1994>
   1be0c:	add	r0, r5, r5, lsl #1
   1be10:	mov	r1, r7
   1be14:	mov	r2, #384	; 0x180
   1be18:	add	r0, r6, r0, lsl #7
   1be1c:	bl	11a58 <memcpy@plt>
   1be20:	add	r5, r5, #1
   1be24:	bl	11df4 <getutxent@plt>
   1be28:	mov	r7, r0
   1be2c:	cmp	r0, #0
   1be30:	beq	1bea4 <argp_parse@@Base+0x1a14>
   1be34:	ldrb	r0, [r7, #44]	; 0x2c
   1be38:	cmp	r0, #0
   1be3c:	beq	1be24 <argp_parse@@Base+0x1994>
   1be40:	ldrh	r0, [r7]
   1be44:	cmp	r0, #7
   1be48:	bne	1be24 <argp_parse@@Base+0x1994>
   1be4c:	ldr	r0, [r7, #4]
   1be50:	cmp	r0, #1
   1be54:	blt	1be78 <argp_parse@@Base+0x19e8>
   1be58:	mov	r1, #0
   1be5c:	bl	11bf0 <kill@plt>
   1be60:	cmn	r0, #1
   1be64:	bgt	1be78 <argp_parse@@Base+0x19e8>
   1be68:	bl	11c50 <__errno_location@plt>
   1be6c:	ldr	r0, [r0]
   1be70:	cmp	r0, #3
   1be74:	beq	1be24 <argp_parse@@Base+0x1994>
   1be78:	ldr	r0, [sp, #8]
   1be7c:	cmp	r5, r0
   1be80:	bne	1be0c <argp_parse@@Base+0x197c>
   1be84:	mov	r0, r6
   1be88:	mov	r1, r8
   1be8c:	mov	r2, #1
   1be90:	mvn	r3, #0
   1be94:	str	r4, [sp]
   1be98:	bl	1c6e8 <argp_parse@@Base+0x2258>
   1be9c:	mov	r6, r0
   1bea0:	b	1be0c <argp_parse@@Base+0x197c>
   1bea4:	bl	11cec <endutxent@plt>
   1bea8:	ldr	r0, [sp, #4]
   1beac:	str	r5, [sl]
   1beb0:	str	r6, [r0]
   1beb4:	mov	r0, #0
   1beb8:	sub	sp, fp, #28
   1bebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bec0:	push	{r4, r5, r6, r7, fp, lr}
   1bec4:	add	fp, sp, #16
   1bec8:	sub	sp, sp, #32
   1becc:	ldr	r7, [fp, #12]
   1bed0:	ldr	r6, [fp, #8]
   1bed4:	mov	r4, r2
   1bed8:	mov	r5, r0
   1bedc:	cmp	r1, #0
   1bee0:	beq	1bf00 <argp_parse@@Base+0x1a70>
   1bee4:	mov	r2, r1
   1bee8:	movw	r1, #65195	; 0xfeab
   1beec:	str	r3, [sp]
   1bef0:	mov	r0, r5
   1bef4:	mov	r3, r4
   1bef8:	movt	r1, #1
   1befc:	b	1bf10 <argp_parse@@Base+0x1a80>
   1bf00:	movw	r1, #65207	; 0xfeb7
   1bf04:	mov	r0, r5
   1bf08:	mov	r2, r4
   1bf0c:	movt	r1, #1
   1bf10:	bl	11c44 <fprintf@plt>
   1bf14:	movw	r1, #435	; 0x1b3
   1bf18:	movw	r2, #65214	; 0xfebe
   1bf1c:	mov	r0, r5
   1bf20:	movw	r3, #2022	; 0x7e6
   1bf24:	movt	r1, #2
   1bf28:	movt	r2, #1
   1bf2c:	bl	11c44 <fprintf@plt>
   1bf30:	mov	r0, #10
   1bf34:	mov	r1, r5
   1bf38:	bl	11d40 <fputc@plt>
   1bf3c:	movw	r1, #65218	; 0xfec2
   1bf40:	movw	r2, #65389	; 0xff6d
   1bf44:	mov	r0, r5
   1bf48:	movt	r1, #1
   1bf4c:	movt	r2, #1
   1bf50:	bl	11c44 <fprintf@plt>
   1bf54:	mov	r0, #10
   1bf58:	mov	r1, r5
   1bf5c:	bl	11d40 <fputc@plt>
   1bf60:	cmp	r7, #9
   1bf64:	bhi	1bfa0 <argp_parse@@Base+0x1b10>
   1bf68:	add	r0, pc, #0
   1bf6c:	ldr	pc, [r0, r7, lsl #2]
   1bf70:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1bf74:	andeq	fp, r1, r0, ror #31
   1bf78:	strdeq	fp, [r1], -ip
   1bf7c:	andeq	ip, r1, r8, lsl r0
   1bf80:	andeq	ip, r1, ip, lsr r0
   1bf84:	andeq	ip, r1, r4, rrx
   1bf88:	andeq	ip, r1, ip, lsl #1
   1bf8c:	strheq	ip, [r1], -ip	; <UNPREDICTABLE>
   1bf90:	andeq	ip, r1, r4, lsr r1
   1bf94:	strdeq	ip, [r1], -r4
   1bf98:	sub	sp, fp, #16
   1bf9c:	pop	{r4, r5, r6, r7, fp, pc}
   1bfa0:	add	r7, r6, #8
   1bfa4:	add	lr, r6, #20
   1bfa8:	ldm	r6, {r2, r3}
   1bfac:	ldr	r6, [r6, #32]
   1bfb0:	ldm	r7, {r0, r1, r7}
   1bfb4:	ldm	lr, {r4, ip, lr}
   1bfb8:	stm	sp, {r0, r1, r7}
   1bfbc:	movw	r1, #206	; 0xce
   1bfc0:	add	r0, sp, #12
   1bfc4:	stm	r0, {r4, ip, lr}
   1bfc8:	str	r6, [sp, #24]
   1bfcc:	movt	r1, #2
   1bfd0:	mov	r0, r5
   1bfd4:	bl	11c44 <fprintf@plt>
   1bfd8:	sub	sp, fp, #16
   1bfdc:	pop	{r4, r5, r6, r7, fp, pc}
   1bfe0:	ldr	r2, [r6]
   1bfe4:	movw	r1, #65423	; 0xff8f
   1bfe8:	mov	r0, r5
   1bfec:	movt	r1, #1
   1bff0:	sub	sp, fp, #16
   1bff4:	pop	{r4, r5, r6, r7, fp, lr}
   1bff8:	b	11c44 <fprintf@plt>
   1bffc:	ldm	r6, {r2, r3}
   1c000:	movw	r1, #65439	; 0xff9f
   1c004:	mov	r0, r5
   1c008:	movt	r1, #1
   1c00c:	sub	sp, fp, #16
   1c010:	pop	{r4, r5, r6, r7, fp, lr}
   1c014:	b	11c44 <fprintf@plt>
   1c018:	ldr	r0, [r6, #8]
   1c01c:	movw	r1, #65462	; 0xffb6
   1c020:	ldm	r6, {r2, r3}
   1c024:	movt	r1, #1
   1c028:	str	r0, [sp]
   1c02c:	mov	r0, r5
   1c030:	bl	11c44 <fprintf@plt>
   1c034:	sub	sp, fp, #16
   1c038:	pop	{r4, r5, r6, r7, fp, pc}
   1c03c:	ldr	r0, [r6, #8]
   1c040:	ldm	r6, {r2, r3}
   1c044:	ldr	r1, [r6, #12]
   1c048:	stm	sp, {r0, r1}
   1c04c:	movw	r1, #65490	; 0xffd2
   1c050:	movt	r1, #1
   1c054:	mov	r0, r5
   1c058:	bl	11c44 <fprintf@plt>
   1c05c:	sub	sp, fp, #16
   1c060:	pop	{r4, r5, r6, r7, fp, pc}
   1c064:	add	r7, r6, #8
   1c068:	ldm	r6, {r2, r3}
   1c06c:	ldm	r7, {r0, r1, r7}
   1c070:	stm	sp, {r0, r1, r7}
   1c074:	movw	r1, #65522	; 0xfff2
   1c078:	movt	r1, #1
   1c07c:	mov	r0, r5
   1c080:	bl	11c44 <fprintf@plt>
   1c084:	sub	sp, fp, #16
   1c088:	pop	{r4, r5, r6, r7, fp, pc}
   1c08c:	add	r7, r6, #8
   1c090:	ldm	r6, {r2, r3}
   1c094:	ldr	r6, [r6, #20]
   1c098:	ldm	r7, {r0, r1, r7}
   1c09c:	stm	sp, {r0, r1, r7}
   1c0a0:	movw	r1, #22
   1c0a4:	str	r6, [sp, #12]
   1c0a8:	movt	r1, #2
   1c0ac:	mov	r0, r5
   1c0b0:	bl	11c44 <fprintf@plt>
   1c0b4:	sub	sp, fp, #16
   1c0b8:	pop	{r4, r5, r6, r7, fp, pc}
   1c0bc:	add	r7, r6, #8
   1c0c0:	ldm	r6, {r2, r3}
   1c0c4:	ldr	r4, [r6, #20]
   1c0c8:	ldr	r6, [r6, #24]
   1c0cc:	ldm	r7, {r0, r1, r7}
   1c0d0:	stm	sp, {r0, r1, r7}
   1c0d4:	movw	r1, #62	; 0x3e
   1c0d8:	str	r4, [sp, #12]
   1c0dc:	str	r6, [sp, #16]
   1c0e0:	movt	r1, #2
   1c0e4:	mov	r0, r5
   1c0e8:	bl	11c44 <fprintf@plt>
   1c0ec:	sub	sp, fp, #16
   1c0f0:	pop	{r4, r5, r6, r7, fp, pc}
   1c0f4:	add	r7, r6, #8
   1c0f8:	add	lr, r6, #20
   1c0fc:	ldm	r6, {r2, r3}
   1c100:	ldr	r6, [r6, #32]
   1c104:	ldm	r7, {r0, r1, r7}
   1c108:	ldm	lr, {r4, ip, lr}
   1c10c:	stm	sp, {r0, r1, r7}
   1c110:	movw	r1, #154	; 0x9a
   1c114:	add	r0, sp, #12
   1c118:	stm	r0, {r4, ip, lr}
   1c11c:	str	r6, [sp, #24]
   1c120:	movt	r1, #2
   1c124:	mov	r0, r5
   1c128:	bl	11c44 <fprintf@plt>
   1c12c:	sub	sp, fp, #16
   1c130:	pop	{r4, r5, r6, r7, fp, pc}
   1c134:	add	r7, r6, #8
   1c138:	ldm	r6, {r2, r3}
   1c13c:	ldr	r4, [r6, #20]
   1c140:	ldr	ip, [r6, #24]
   1c144:	ldr	r6, [r6, #28]
   1c148:	ldm	r7, {r0, r1, r7}
   1c14c:	stm	sp, {r0, r1, r7}
   1c150:	movw	r1, #106	; 0x6a
   1c154:	str	r4, [sp, #12]
   1c158:	str	ip, [sp, #16]
   1c15c:	str	r6, [sp, #20]
   1c160:	movt	r1, #2
   1c164:	mov	r0, r5
   1c168:	bl	11c44 <fprintf@plt>
   1c16c:	sub	sp, fp, #16
   1c170:	pop	{r4, r5, r6, r7, fp, pc}
   1c174:	push	{r4, sl, fp, lr}
   1c178:	add	fp, sp, #8
   1c17c:	sub	sp, sp, #8
   1c180:	ldr	ip, [fp, #8]
   1c184:	mov	lr, #0
   1c188:	ldr	r4, [ip, lr, lsl #2]
   1c18c:	add	lr, lr, #1
   1c190:	cmp	r4, #0
   1c194:	bne	1c188 <argp_parse@@Base+0x1cf8>
   1c198:	sub	r4, lr, #1
   1c19c:	str	ip, [sp]
   1c1a0:	str	r4, [sp, #4]
   1c1a4:	bl	1bec0 <argp_parse@@Base+0x1a30>
   1c1a8:	sub	sp, fp, #8
   1c1ac:	pop	{r4, sl, fp, pc}
   1c1b0:	push	{fp, lr}
   1c1b4:	mov	fp, sp
   1c1b8:	sub	sp, sp, #48	; 0x30
   1c1bc:	ldr	ip, [fp, #8]
   1c1c0:	ldr	lr, [ip]
   1c1c4:	cmp	lr, #0
   1c1c8:	str	lr, [sp, #8]
   1c1cc:	beq	1c268 <argp_parse@@Base+0x1dd8>
   1c1d0:	ldr	lr, [ip, #4]
   1c1d4:	cmp	lr, #0
   1c1d8:	str	lr, [sp, #12]
   1c1dc:	beq	1c270 <argp_parse@@Base+0x1de0>
   1c1e0:	ldr	lr, [ip, #8]
   1c1e4:	cmp	lr, #0
   1c1e8:	str	lr, [sp, #16]
   1c1ec:	beq	1c278 <argp_parse@@Base+0x1de8>
   1c1f0:	ldr	lr, [ip, #12]
   1c1f4:	cmp	lr, #0
   1c1f8:	str	lr, [sp, #20]
   1c1fc:	beq	1c280 <argp_parse@@Base+0x1df0>
   1c200:	ldr	lr, [ip, #16]
   1c204:	cmp	lr, #0
   1c208:	str	lr, [sp, #24]
   1c20c:	beq	1c288 <argp_parse@@Base+0x1df8>
   1c210:	ldr	lr, [ip, #20]
   1c214:	cmp	lr, #0
   1c218:	str	lr, [sp, #28]
   1c21c:	beq	1c290 <argp_parse@@Base+0x1e00>
   1c220:	ldr	lr, [ip, #24]
   1c224:	cmp	lr, #0
   1c228:	str	lr, [sp, #32]
   1c22c:	beq	1c298 <argp_parse@@Base+0x1e08>
   1c230:	ldr	lr, [ip, #28]
   1c234:	cmp	lr, #0
   1c238:	str	lr, [sp, #36]	; 0x24
   1c23c:	beq	1c2a0 <argp_parse@@Base+0x1e10>
   1c240:	ldr	lr, [ip, #32]
   1c244:	cmp	lr, #0
   1c248:	str	lr, [sp, #40]	; 0x28
   1c24c:	beq	1c2a8 <argp_parse@@Base+0x1e18>
   1c250:	ldr	lr, [ip, #36]	; 0x24
   1c254:	mov	ip, #10
   1c258:	cmp	lr, #0
   1c25c:	str	lr, [sp, #44]	; 0x2c
   1c260:	movweq	ip, #9
   1c264:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c268:	mov	ip, #0
   1c26c:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c270:	mov	ip, #1
   1c274:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c278:	mov	ip, #2
   1c27c:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c280:	mov	ip, #3
   1c284:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c288:	mov	ip, #4
   1c28c:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c290:	mov	ip, #5
   1c294:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c298:	mov	ip, #6
   1c29c:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c2a0:	mov	ip, #7
   1c2a4:	b	1c2ac <argp_parse@@Base+0x1e1c>
   1c2a8:	mov	ip, #8
   1c2ac:	add	lr, sp, #8
   1c2b0:	str	ip, [sp, #4]
   1c2b4:	str	lr, [sp]
   1c2b8:	bl	1bec0 <argp_parse@@Base+0x1a30>
   1c2bc:	mov	sp, fp
   1c2c0:	pop	{fp, pc}
   1c2c4:	push	{fp, lr}
   1c2c8:	mov	fp, sp
   1c2cc:	sub	sp, sp, #56	; 0x38
   1c2d0:	add	ip, fp, #8
   1c2d4:	str	ip, [sp, #12]
   1c2d8:	ldr	lr, [fp, #8]
   1c2dc:	cmp	lr, #0
   1c2e0:	str	lr, [sp, #16]
   1c2e4:	beq	1c380 <argp_parse@@Base+0x1ef0>
   1c2e8:	ldr	lr, [ip, #4]
   1c2ec:	cmp	lr, #0
   1c2f0:	str	lr, [sp, #20]
   1c2f4:	beq	1c388 <argp_parse@@Base+0x1ef8>
   1c2f8:	ldr	lr, [ip, #8]
   1c2fc:	cmp	lr, #0
   1c300:	str	lr, [sp, #24]
   1c304:	beq	1c390 <argp_parse@@Base+0x1f00>
   1c308:	ldr	lr, [ip, #12]
   1c30c:	cmp	lr, #0
   1c310:	str	lr, [sp, #28]
   1c314:	beq	1c398 <argp_parse@@Base+0x1f08>
   1c318:	ldr	lr, [ip, #16]
   1c31c:	cmp	lr, #0
   1c320:	str	lr, [sp, #32]
   1c324:	beq	1c3a0 <argp_parse@@Base+0x1f10>
   1c328:	ldr	lr, [ip, #20]
   1c32c:	cmp	lr, #0
   1c330:	str	lr, [sp, #36]	; 0x24
   1c334:	beq	1c3a8 <argp_parse@@Base+0x1f18>
   1c338:	ldr	lr, [ip, #24]
   1c33c:	cmp	lr, #0
   1c340:	str	lr, [sp, #40]	; 0x28
   1c344:	beq	1c3b0 <argp_parse@@Base+0x1f20>
   1c348:	ldr	lr, [ip, #28]
   1c34c:	cmp	lr, #0
   1c350:	str	lr, [sp, #44]	; 0x2c
   1c354:	beq	1c3b8 <argp_parse@@Base+0x1f28>
   1c358:	ldr	lr, [ip, #32]
   1c35c:	cmp	lr, #0
   1c360:	str	lr, [sp, #48]	; 0x30
   1c364:	beq	1c3c0 <argp_parse@@Base+0x1f30>
   1c368:	ldr	lr, [ip, #36]	; 0x24
   1c36c:	mov	ip, #10
   1c370:	cmp	lr, #0
   1c374:	str	lr, [sp, #52]	; 0x34
   1c378:	movweq	ip, #9
   1c37c:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c380:	mov	ip, #0
   1c384:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c388:	mov	ip, #1
   1c38c:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c390:	mov	ip, #2
   1c394:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c398:	mov	ip, #3
   1c39c:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c3a0:	mov	ip, #4
   1c3a4:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c3a8:	mov	ip, #5
   1c3ac:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c3b0:	mov	ip, #6
   1c3b4:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c3b8:	mov	ip, #7
   1c3bc:	b	1c3c4 <argp_parse@@Base+0x1f34>
   1c3c0:	mov	ip, #8
   1c3c4:	add	lr, sp, #16
   1c3c8:	str	ip, [sp, #4]
   1c3cc:	str	lr, [sp]
   1c3d0:	bl	1bec0 <argp_parse@@Base+0x1a30>
   1c3d4:	mov	sp, fp
   1c3d8:	pop	{fp, pc}
   1c3dc:	push	{fp, lr}
   1c3e0:	mov	fp, sp
   1c3e4:	movw	r0, #5572	; 0x15c4
   1c3e8:	movt	r0, #3
   1c3ec:	ldr	r1, [r0]
   1c3f0:	mov	r0, #10
   1c3f4:	bl	11d40 <fputc@plt>
   1c3f8:	movw	r0, #266	; 0x10a
   1c3fc:	movw	r1, #286	; 0x11e
   1c400:	movt	r0, #2
   1c404:	movt	r1, #2
   1c408:	bl	119c8 <printf@plt>
   1c40c:	movw	r0, #308	; 0x134
   1c410:	movw	r1, #65100	; 0xfe4c
   1c414:	movw	r2, #328	; 0x148
   1c418:	movt	r0, #2
   1c41c:	movt	r1, #1
   1c420:	movt	r2, #2
   1c424:	bl	119c8 <printf@plt>
   1c428:	movw	r0, #367	; 0x16f
   1c42c:	movw	r1, #406	; 0x196
   1c430:	movt	r0, #2
   1c434:	movt	r1, #2
   1c438:	pop	{fp, lr}
   1c43c:	b	119c8 <printf@plt>
   1c440:	push	{r4, r5, r6, sl, fp, lr}
   1c444:	add	fp, sp, #16
   1c448:	mov	r4, r2
   1c44c:	mov	r5, r1
   1c450:	mov	r6, r0
   1c454:	bl	1e8b8 <argp_parse@@Base+0x4428>
   1c458:	cmp	r0, #0
   1c45c:	popne	{r4, r5, r6, sl, fp, pc}
   1c460:	cmp	r6, #0
   1c464:	beq	1c478 <argp_parse@@Base+0x1fe8>
   1c468:	cmp	r5, #0
   1c46c:	cmpne	r4, #0
   1c470:	bne	1c478 <argp_parse@@Base+0x1fe8>
   1c474:	pop	{r4, r5, r6, sl, fp, pc}
   1c478:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c47c:	push	{r4, r5, r6, sl, fp, lr}
   1c480:	add	fp, sp, #16
   1c484:	mov	r4, r2
   1c488:	mov	r5, r1
   1c48c:	mov	r6, r0
   1c490:	bl	1e8b8 <argp_parse@@Base+0x4428>
   1c494:	cmp	r0, #0
   1c498:	popne	{r4, r5, r6, sl, fp, pc}
   1c49c:	cmp	r6, #0
   1c4a0:	beq	1c4b4 <argp_parse@@Base+0x2024>
   1c4a4:	cmp	r5, #0
   1c4a8:	cmpne	r4, #0
   1c4ac:	bne	1c4b4 <argp_parse@@Base+0x2024>
   1c4b0:	pop	{r4, r5, r6, sl, fp, pc}
   1c4b4:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c4b8:	push	{fp, lr}
   1c4bc:	mov	fp, sp
   1c4c0:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1c4c4:	cmp	r0, #0
   1c4c8:	popne	{fp, pc}
   1c4cc:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c4d0:	push	{fp, lr}
   1c4d4:	mov	fp, sp
   1c4d8:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1c4dc:	cmp	r0, #0
   1c4e0:	popne	{fp, pc}
   1c4e4:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c4e8:	push	{fp, lr}
   1c4ec:	mov	fp, sp
   1c4f0:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1c4f4:	cmp	r0, #0
   1c4f8:	popne	{fp, pc}
   1c4fc:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c500:	push	{r4, r5, fp, lr}
   1c504:	add	fp, sp, #8
   1c508:	mov	r4, r1
   1c50c:	mov	r5, r0
   1c510:	bl	1caa8 <argp_parse@@Base+0x2618>
   1c514:	cmp	r0, #0
   1c518:	popne	{r4, r5, fp, pc}
   1c51c:	cmp	r5, #0
   1c520:	beq	1c530 <argp_parse@@Base+0x20a0>
   1c524:	cmp	r4, #0
   1c528:	bne	1c530 <argp_parse@@Base+0x20a0>
   1c52c:	pop	{r4, r5, fp, pc}
   1c530:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c534:	push	{fp, lr}
   1c538:	mov	fp, sp
   1c53c:	cmp	r1, #0
   1c540:	orreq	r1, r1, #1
   1c544:	bl	1caa8 <argp_parse@@Base+0x2618>
   1c548:	cmp	r0, #0
   1c54c:	popne	{fp, pc}
   1c550:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c554:	push	{fp, lr}
   1c558:	mov	fp, sp
   1c55c:	clz	r3, r2
   1c560:	lsr	ip, r3, #5
   1c564:	clz	r3, r1
   1c568:	lsr	r3, r3, #5
   1c56c:	orrs	r3, r3, ip
   1c570:	movwne	r1, #1
   1c574:	movwne	r2, #1
   1c578:	bl	1e8b8 <argp_parse@@Base+0x4428>
   1c57c:	cmp	r0, #0
   1c580:	popne	{fp, pc}
   1c584:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c588:	push	{fp, lr}
   1c58c:	mov	fp, sp
   1c590:	mov	r2, r1
   1c594:	mov	r1, r0
   1c598:	mov	r0, #0
   1c59c:	bl	1e8b8 <argp_parse@@Base+0x4428>
   1c5a0:	cmp	r0, #0
   1c5a4:	popne	{fp, pc}
   1c5a8:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c5ac:	push	{fp, lr}
   1c5b0:	mov	fp, sp
   1c5b4:	mov	r2, r1
   1c5b8:	mov	r1, r0
   1c5bc:	clz	r0, r2
   1c5c0:	clz	r3, r1
   1c5c4:	lsr	r0, r0, #5
   1c5c8:	lsr	r3, r3, #5
   1c5cc:	orrs	r0, r3, r0
   1c5d0:	mov	r0, #0
   1c5d4:	movwne	r1, #1
   1c5d8:	movwne	r2, #1
   1c5dc:	bl	1e8b8 <argp_parse@@Base+0x4428>
   1c5e0:	cmp	r0, #0
   1c5e4:	popne	{fp, pc}
   1c5e8:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c5ec:	push	{r4, r5, r6, sl, fp, lr}
   1c5f0:	add	fp, sp, #16
   1c5f4:	ldr	r5, [r1]
   1c5f8:	mov	r4, r1
   1c5fc:	mov	r6, r0
   1c600:	cmp	r0, #0
   1c604:	beq	1c61c <argp_parse@@Base+0x218c>
   1c608:	mov	r0, #1
   1c60c:	add	r0, r0, r5, lsr #1
   1c610:	adds	r5, r5, r0
   1c614:	bcc	1c624 <argp_parse@@Base+0x2194>
   1c618:	b	1c660 <argp_parse@@Base+0x21d0>
   1c61c:	cmp	r5, #0
   1c620:	movweq	r5, #64	; 0x40
   1c624:	mov	r0, r6
   1c628:	mov	r1, r5
   1c62c:	mov	r2, #1
   1c630:	bl	1e8b8 <argp_parse@@Base+0x4428>
   1c634:	cmp	r5, #0
   1c638:	mov	r1, r5
   1c63c:	movwne	r1, #1
   1c640:	cmp	r0, #0
   1c644:	bne	1c658 <argp_parse@@Base+0x21c8>
   1c648:	clz	r2, r6
   1c64c:	lsr	r2, r2, #5
   1c650:	orrs	r1, r2, r1
   1c654:	bne	1c660 <argp_parse@@Base+0x21d0>
   1c658:	str	r5, [r4]
   1c65c:	pop	{r4, r5, r6, sl, fp, pc}
   1c660:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c664:	push	{r4, r5, r6, r7, fp, lr}
   1c668:	add	fp, sp, #16
   1c66c:	ldr	r5, [r1]
   1c670:	mov	r6, r2
   1c674:	mov	r4, r1
   1c678:	mov	r7, r0
   1c67c:	cmp	r0, #0
   1c680:	beq	1c698 <argp_parse@@Base+0x2208>
   1c684:	mov	r0, #1
   1c688:	add	r0, r0, r5, lsr #1
   1c68c:	adds	r5, r5, r0
   1c690:	bcc	1c6b0 <argp_parse@@Base+0x2220>
   1c694:	b	1c6e4 <argp_parse@@Base+0x2254>
   1c698:	cmp	r5, #0
   1c69c:	bne	1c6b0 <argp_parse@@Base+0x2220>
   1c6a0:	mov	r0, #64	; 0x40
   1c6a4:	cmp	r6, #64	; 0x40
   1c6a8:	udiv	r5, r0, r6
   1c6ac:	addhi	r5, r5, #1
   1c6b0:	mov	r0, r7
   1c6b4:	mov	r1, r5
   1c6b8:	mov	r2, r6
   1c6bc:	bl	1e8b8 <argp_parse@@Base+0x4428>
   1c6c0:	cmp	r0, #0
   1c6c4:	bne	1c6dc <argp_parse@@Base+0x224c>
   1c6c8:	cmp	r7, #0
   1c6cc:	beq	1c6e4 <argp_parse@@Base+0x2254>
   1c6d0:	cmp	r6, #0
   1c6d4:	cmpne	r5, #0
   1c6d8:	bne	1c6e4 <argp_parse@@Base+0x2254>
   1c6dc:	str	r5, [r4]
   1c6e0:	pop	{r4, r5, r6, r7, fp, pc}
   1c6e4:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c6e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c6ec:	add	fp, sp, #24
   1c6f0:	mov	r8, r1
   1c6f4:	ldr	r1, [r1]
   1c6f8:	mov	r5, r0
   1c6fc:	add	r0, r1, r1, asr #1
   1c700:	cmp	r0, r1
   1c704:	mvnvs	r0, #-2147483648	; 0x80000000
   1c708:	cmp	r0, r3
   1c70c:	mov	r7, r0
   1c710:	movgt	r7, r3
   1c714:	cmn	r3, #1
   1c718:	movle	r7, r0
   1c71c:	ldr	r0, [fp, #8]
   1c720:	cmn	r0, #1
   1c724:	ble	1c74c <argp_parse@@Base+0x22bc>
   1c728:	cmp	r0, #0
   1c72c:	beq	1c7a0 <argp_parse@@Base+0x2310>
   1c730:	cmn	r7, #1
   1c734:	ble	1c774 <argp_parse@@Base+0x22e4>
   1c738:	mvn	r4, #-2147483648	; 0x80000000
   1c73c:	udiv	r6, r4, r0
   1c740:	cmp	r6, r7
   1c744:	bge	1c7a0 <argp_parse@@Base+0x2310>
   1c748:	b	1c7b0 <argp_parse@@Base+0x2320>
   1c74c:	cmn	r7, #1
   1c750:	ble	1c790 <argp_parse@@Base+0x2300>
   1c754:	cmn	r0, #1
   1c758:	beq	1c7a0 <argp_parse@@Base+0x2310>
   1c75c:	mov	r6, #-2147483648	; 0x80000000
   1c760:	mvn	r4, #-2147483648	; 0x80000000
   1c764:	sdiv	r6, r6, r0
   1c768:	cmp	r6, r7
   1c76c:	bge	1c7a0 <argp_parse@@Base+0x2310>
   1c770:	b	1c7b0 <argp_parse@@Base+0x2320>
   1c774:	beq	1c7a0 <argp_parse@@Base+0x2310>
   1c778:	mov	r6, #-2147483648	; 0x80000000
   1c77c:	mvn	r4, #-2147483648	; 0x80000000
   1c780:	sdiv	r6, r6, r7
   1c784:	cmp	r6, r0
   1c788:	bge	1c7a0 <argp_parse@@Base+0x2310>
   1c78c:	b	1c7b0 <argp_parse@@Base+0x2320>
   1c790:	mvn	r4, #-2147483648	; 0x80000000
   1c794:	sdiv	r6, r4, r0
   1c798:	cmp	r7, r6
   1c79c:	blt	1c7b0 <argp_parse@@Base+0x2320>
   1c7a0:	mul	r6, r7, r0
   1c7a4:	mov	r4, #64	; 0x40
   1c7a8:	cmp	r6, #63	; 0x3f
   1c7ac:	bgt	1c7b8 <argp_parse@@Base+0x2328>
   1c7b0:	sdiv	r7, r4, r0
   1c7b4:	mul	r6, r7, r0
   1c7b8:	cmp	r5, #0
   1c7bc:	moveq	r4, #0
   1c7c0:	streq	r4, [r8]
   1c7c4:	sub	r4, r7, r1
   1c7c8:	cmp	r4, r2
   1c7cc:	bge	1c878 <argp_parse@@Base+0x23e8>
   1c7d0:	add	r7, r1, r2
   1c7d4:	mov	r6, #0
   1c7d8:	mov	r2, #0
   1c7dc:	cmp	r7, r3
   1c7e0:	movwgt	r6, #1
   1c7e4:	cmn	r3, #1
   1c7e8:	movwgt	r2, #1
   1c7ec:	cmp	r7, r1
   1c7f0:	bvs	1c8ac <argp_parse@@Base+0x241c>
   1c7f4:	ands	r1, r2, r6
   1c7f8:	bne	1c8ac <argp_parse@@Base+0x241c>
   1c7fc:	cmn	r0, #1
   1c800:	ble	1c828 <argp_parse@@Base+0x2398>
   1c804:	cmp	r0, #0
   1c808:	beq	1c874 <argp_parse@@Base+0x23e4>
   1c80c:	cmn	r7, #1
   1c810:	ble	1c84c <argp_parse@@Base+0x23bc>
   1c814:	mvn	r1, #-2147483648	; 0x80000000
   1c818:	udiv	r1, r1, r0
   1c81c:	cmp	r1, r7
   1c820:	bge	1c874 <argp_parse@@Base+0x23e4>
   1c824:	b	1c8ac <argp_parse@@Base+0x241c>
   1c828:	cmn	r7, #1
   1c82c:	ble	1c864 <argp_parse@@Base+0x23d4>
   1c830:	cmn	r0, #1
   1c834:	beq	1c874 <argp_parse@@Base+0x23e4>
   1c838:	mov	r1, #-2147483648	; 0x80000000
   1c83c:	sdiv	r1, r1, r0
   1c840:	cmp	r1, r7
   1c844:	bge	1c874 <argp_parse@@Base+0x23e4>
   1c848:	b	1c8ac <argp_parse@@Base+0x241c>
   1c84c:	beq	1c874 <argp_parse@@Base+0x23e4>
   1c850:	mov	r1, #-2147483648	; 0x80000000
   1c854:	sdiv	r1, r1, r7
   1c858:	cmp	r1, r0
   1c85c:	bge	1c874 <argp_parse@@Base+0x23e4>
   1c860:	b	1c8ac <argp_parse@@Base+0x241c>
   1c864:	mvn	r1, #-2147483648	; 0x80000000
   1c868:	sdiv	r1, r1, r0
   1c86c:	cmp	r7, r1
   1c870:	blt	1c8ac <argp_parse@@Base+0x241c>
   1c874:	mul	r6, r7, r0
   1c878:	mov	r0, r5
   1c87c:	mov	r1, r6
   1c880:	bl	1caa8 <argp_parse@@Base+0x2618>
   1c884:	cmp	r6, #0
   1c888:	movwne	r6, #1
   1c88c:	cmp	r0, #0
   1c890:	bne	1c8a4 <argp_parse@@Base+0x2414>
   1c894:	clz	r1, r5
   1c898:	lsr	r1, r1, #5
   1c89c:	orrs	r1, r1, r6
   1c8a0:	bne	1c8ac <argp_parse@@Base+0x241c>
   1c8a4:	str	r7, [r8]
   1c8a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c8ac:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c8b0:	push	{fp, lr}
   1c8b4:	mov	fp, sp
   1c8b8:	mov	r1, #1
   1c8bc:	bl	1ca24 <argp_parse@@Base+0x2594>
   1c8c0:	cmp	r0, #0
   1c8c4:	popne	{fp, pc}
   1c8c8:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c8cc:	push	{fp, lr}
   1c8d0:	mov	fp, sp
   1c8d4:	bl	1ca24 <argp_parse@@Base+0x2594>
   1c8d8:	cmp	r0, #0
   1c8dc:	popne	{fp, pc}
   1c8e0:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c8e4:	push	{fp, lr}
   1c8e8:	mov	fp, sp
   1c8ec:	mov	r1, #1
   1c8f0:	bl	1ca24 <argp_parse@@Base+0x2594>
   1c8f4:	cmp	r0, #0
   1c8f8:	popne	{fp, pc}
   1c8fc:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c900:	push	{fp, lr}
   1c904:	mov	fp, sp
   1c908:	bl	1ca24 <argp_parse@@Base+0x2594>
   1c90c:	cmp	r0, #0
   1c910:	popne	{fp, pc}
   1c914:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c918:	push	{r4, r5, fp, lr}
   1c91c:	add	fp, sp, #8
   1c920:	mov	r5, r0
   1c924:	mov	r0, r1
   1c928:	mov	r4, r1
   1c92c:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1c930:	cmp	r0, #0
   1c934:	beq	1c948 <argp_parse@@Base+0x24b8>
   1c938:	mov	r1, r5
   1c93c:	mov	r2, r4
   1c940:	pop	{r4, r5, fp, lr}
   1c944:	b	11a58 <memcpy@plt>
   1c948:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c94c:	push	{r4, r5, fp, lr}
   1c950:	add	fp, sp, #8
   1c954:	mov	r5, r0
   1c958:	mov	r0, r1
   1c95c:	mov	r4, r1
   1c960:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1c964:	cmp	r0, #0
   1c968:	beq	1c97c <argp_parse@@Base+0x24ec>
   1c96c:	mov	r1, r5
   1c970:	mov	r2, r4
   1c974:	pop	{r4, r5, fp, lr}
   1c978:	b	11a58 <memcpy@plt>
   1c97c:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c980:	push	{r4, r5, fp, lr}
   1c984:	add	fp, sp, #8
   1c988:	mov	r5, r0
   1c98c:	add	r0, r1, #1
   1c990:	mov	r4, r1
   1c994:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1c998:	cmp	r0, #0
   1c99c:	beq	1c9b8 <argp_parse@@Base+0x2528>
   1c9a0:	mov	r1, #0
   1c9a4:	mov	r2, r4
   1c9a8:	strb	r1, [r0, r4]
   1c9ac:	mov	r1, r5
   1c9b0:	pop	{r4, r5, fp, lr}
   1c9b4:	b	11a58 <memcpy@plt>
   1c9b8:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c9bc:	push	{r4, r5, fp, lr}
   1c9c0:	add	fp, sp, #8
   1c9c4:	mov	r4, r0
   1c9c8:	bl	11c20 <strlen@plt>
   1c9cc:	add	r5, r0, #1
   1c9d0:	mov	r0, r5
   1c9d4:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1c9d8:	cmp	r0, #0
   1c9dc:	beq	1c9f0 <argp_parse@@Base+0x2560>
   1c9e0:	mov	r1, r4
   1c9e4:	mov	r2, r5
   1c9e8:	pop	{r4, r5, fp, lr}
   1c9ec:	b	11a58 <memcpy@plt>
   1c9f0:	bl	1c9f4 <argp_parse@@Base+0x2564>
   1c9f4:	push	{fp, lr}
   1c9f8:	mov	fp, sp
   1c9fc:	movw	r0, #5540	; 0x15a4
   1ca00:	movw	r2, #63892	; 0xf994
   1ca04:	movw	r3, #482	; 0x1e2
   1ca08:	mov	r1, #0
   1ca0c:	movt	r0, #3
   1ca10:	movt	r2, #1
   1ca14:	movt	r3, #2
   1ca18:	ldr	r0, [r0]
   1ca1c:	bl	11b6c <error@plt>
   1ca20:	bl	11de8 <abort@plt>
   1ca24:	clz	r2, r1
   1ca28:	clz	r3, r0
   1ca2c:	lsr	r2, r2, #5
   1ca30:	lsr	r3, r3, #5
   1ca34:	orrs	r2, r3, r2
   1ca38:	movwne	r1, #1
   1ca3c:	movwne	r0, #1
   1ca40:	cmp	r1, #0
   1ca44:	beq	1ca74 <argp_parse@@Base+0x25e4>
   1ca48:	mvn	r2, #-2147483648	; 0x80000000
   1ca4c:	udiv	r2, r2, r1
   1ca50:	cmp	r2, r0
   1ca54:	bcs	1ca74 <argp_parse@@Base+0x25e4>
   1ca58:	push	{fp, lr}
   1ca5c:	mov	fp, sp
   1ca60:	bl	11c50 <__errno_location@plt>
   1ca64:	mov	r1, #12
   1ca68:	str	r1, [r0]
   1ca6c:	mov	r0, #0
   1ca70:	pop	{fp, pc}
   1ca74:	b	11974 <calloc@plt>
   1ca78:	cmp	r0, #0
   1ca7c:	movweq	r0, #1
   1ca80:	cmn	r0, #1
   1ca84:	ble	1ca8c <argp_parse@@Base+0x25fc>
   1ca88:	b	11ba8 <malloc@plt>
   1ca8c:	push	{fp, lr}
   1ca90:	mov	fp, sp
   1ca94:	bl	11c50 <__errno_location@plt>
   1ca98:	mov	r1, #12
   1ca9c:	str	r1, [r0]
   1caa0:	mov	r0, #0
   1caa4:	pop	{fp, pc}
   1caa8:	push	{fp, lr}
   1caac:	mov	fp, sp
   1cab0:	cmp	r0, #0
   1cab4:	beq	1cad0 <argp_parse@@Base+0x2640>
   1cab8:	cmp	r1, #0
   1cabc:	beq	1cadc <argp_parse@@Base+0x264c>
   1cac0:	cmn	r1, #1
   1cac4:	ble	1cae8 <argp_parse@@Base+0x2658>
   1cac8:	pop	{fp, lr}
   1cacc:	b	11af4 <realloc@plt>
   1cad0:	mov	r0, r1
   1cad4:	pop	{fp, lr}
   1cad8:	b	1ca78 <argp_parse@@Base+0x25e8>
   1cadc:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1cae0:	mov	r0, #0
   1cae4:	pop	{fp, pc}
   1cae8:	bl	11c50 <__errno_location@plt>
   1caec:	mov	r1, #12
   1caf0:	str	r1, [r0]
   1caf4:	mov	r0, #0
   1caf8:	pop	{fp, pc}
   1cafc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cb00:	add	fp, sp, #24
   1cb04:	mov	r7, r0
   1cb08:	mov	r0, #36	; 0x24
   1cb0c:	mov	r8, r3
   1cb10:	mov	r9, r2
   1cb14:	mov	r6, r1
   1cb18:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1cb1c:	cmp	r0, #0
   1cb20:	beq	1cb68 <argp_parse@@Base+0x26d8>
   1cb24:	mov	r5, #0
   1cb28:	str	r7, [r0]
   1cb2c:	stmib	r0, {r6, r9}
   1cb30:	str	r8, [r0, #12]
   1cb34:	mov	r4, r0
   1cb38:	str	r5, [r0, #16]
   1cb3c:	str	r5, [r0, #20]
   1cb40:	mov	r0, #200	; 0xc8
   1cb44:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1cb48:	cmp	r0, #0
   1cb4c:	str	r0, [r4, #24]
   1cb50:	beq	1cb74 <argp_parse@@Base+0x26e4>
   1cb54:	add	r1, r0, #200	; 0xc8
   1cb58:	str	r0, [r4, #28]
   1cb5c:	mov	r0, r4
   1cb60:	str	r1, [r4, #32]
   1cb64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cb68:	mov	r5, #0
   1cb6c:	mov	r0, r5
   1cb70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cb74:	mov	r0, r4
   1cb78:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1cb7c:	mov	r0, r5
   1cb80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cb84:	push	{r4, sl, fp, lr}
   1cb88:	add	fp, sp, #8
   1cb8c:	mov	r4, r0
   1cb90:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1cb94:	ldr	r0, [r4, #24]
   1cb98:	ldr	r1, [r4, #28]
   1cb9c:	cmp	r1, r0
   1cba0:	bls	1cbb4 <argp_parse@@Base+0x2724>
   1cba4:	ldr	r3, [r4]
   1cba8:	sub	r2, r1, r0
   1cbac:	mov	r1, #1
   1cbb0:	bl	11a7c <fwrite_unlocked@plt>
   1cbb4:	ldr	r0, [r4, #24]
   1cbb8:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1cbbc:	mov	r0, r4
   1cbc0:	pop	{r4, sl, fp, lr}
   1cbc4:	b	1ba4c <argp_parse@@Base+0x15bc>
   1cbc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cbcc:	add	fp, sp, #28
   1cbd0:	sub	sp, sp, #12
   1cbd4:	mov	sl, r0
   1cbd8:	ldr	r0, [r0, #16]
   1cbdc:	ldr	r1, [sl, #24]
   1cbe0:	ldr	r8, [sl, #28]
   1cbe4:	add	r5, r1, r0
   1cbe8:	cmp	r5, r8
   1cbec:	bcs	1d130 <argp_parse@@Base+0x2ca0>
   1cbf0:	ldr	r7, [sl, #20]
   1cbf4:	mov	r3, #32
   1cbf8:	cmp	r7, #0
   1cbfc:	bne	1cc34 <argp_parse@@Base+0x27a4>
   1cc00:	b	1cc3c <argp_parse@@Base+0x27ac>
   1cc04:	ldr	r0, [sp, #8]
   1cc08:	cmp	r7, #0
   1cc0c:	mvneq	r7, #0
   1cc10:	str	r7, [sl, #20]
   1cc14:	sub	r0, r0, r6
   1cc18:	add	r0, r0, r9
   1cc1c:	add	r8, r5, r0
   1cc20:	str	r8, [sl, #28]
   1cc24:	cmp	r5, r8
   1cc28:	bcs	1d130 <argp_parse@@Base+0x2ca0>
   1cc2c:	cmp	r7, #0
   1cc30:	beq	1cc3c <argp_parse@@Base+0x27ac>
   1cc34:	mov	r9, r5
   1cc38:	b	1ccdc <argp_parse@@Base+0x284c>
   1cc3c:	ldr	r7, [sl, #4]
   1cc40:	cmp	r7, #0
   1cc44:	beq	1ce5c <argp_parse@@Base+0x29cc>
   1cc48:	ldr	r1, [sl, #32]
   1cc4c:	add	r0, r8, r7
   1cc50:	mov	r4, r7
   1cc54:	cmp	r0, r1
   1cc58:	bcs	1cc90 <argp_parse@@Base+0x2800>
   1cc5c:	add	r9, r5, r7
   1cc60:	sub	r2, r8, r5
   1cc64:	mov	r1, r5
   1cc68:	mov	r0, r9
   1cc6c:	bl	11a04 <memmove@plt>
   1cc70:	ldr	r0, [sl, #28]
   1cc74:	mov	r1, #32
   1cc78:	mov	r2, r7
   1cc7c:	add	r0, r0, r7
   1cc80:	str	r0, [sl, #28]
   1cc84:	mov	r0, r5
   1cc88:	bl	11c8c <memset@plt>
   1cc8c:	b	1ccd4 <argp_parse@@Base+0x2844>
   1cc90:	ldr	r0, [sl]
   1cc94:	ldr	r1, [r0, #20]
   1cc98:	ldr	r2, [r0, #24]
   1cc9c:	cmp	r1, r2
   1cca0:	bcs	1ccbc <argp_parse@@Base+0x282c>
   1cca4:	add	r2, r1, #1
   1cca8:	str	r2, [r0, #20]
   1ccac:	strb	r3, [r1]
   1ccb0:	subs	r4, r4, #1
   1ccb4:	bne	1cc90 <argp_parse@@Base+0x2800>
   1ccb8:	b	1ccd0 <argp_parse@@Base+0x2840>
   1ccbc:	mov	r1, #32
   1ccc0:	bl	11cf8 <__overflow@plt>
   1ccc4:	mov	r3, #32
   1ccc8:	subs	r4, r4, #1
   1cccc:	bne	1cc90 <argp_parse@@Base+0x2800>
   1ccd0:	mov	r9, r5
   1ccd4:	str	r7, [sl, #20]
   1ccd8:	ldr	r8, [sl, #28]
   1ccdc:	sub	r6, r8, r9
   1cce0:	mov	r0, r9
   1cce4:	mov	r1, #10
   1cce8:	mov	r2, r6
   1ccec:	bl	11cb0 <memchr@plt>
   1ccf0:	cmn	r7, #1
   1ccf4:	mov	r4, r0
   1ccf8:	movle	r7, #0
   1ccfc:	strle	r7, [sl, #20]
   1cd00:	cmp	r4, #0
   1cd04:	beq	1cd38 <argp_parse@@Base+0x28a8>
   1cd08:	ldr	r5, [sl, #8]
   1cd0c:	sub	r0, r4, r9
   1cd10:	mov	r3, #32
   1cd14:	add	r0, r0, r7
   1cd18:	cmp	r0, r5
   1cd1c:	bge	1cd4c <argp_parse@@Base+0x28bc>
   1cd20:	mov	r7, #0
   1cd24:	add	r5, r4, #1
   1cd28:	str	r7, [sl, #20]
   1cd2c:	cmp	r5, r8
   1cd30:	bcc	1cc2c <argp_parse@@Base+0x279c>
   1cd34:	b	1d130 <argp_parse@@Base+0x2ca0>
   1cd38:	ldr	r5, [sl, #8]
   1cd3c:	add	r0, r7, r6
   1cd40:	mov	r4, r8
   1cd44:	cmp	r0, r5
   1cd48:	bcc	1d114 <argp_parse@@Base+0x2c84>
   1cd4c:	ldr	r0, [sl, #12]
   1cd50:	cmn	r0, #1
   1cd54:	str	r0, [sp, #4]
   1cd58:	ble	1cdb4 <argp_parse@@Base+0x2924>
   1cd5c:	subs	r0, r5, r7
   1cd60:	mov	r1, #0
   1cd64:	str	r6, [sp, #8]
   1cd68:	add	r5, r9, r0
   1cd6c:	bmi	1ce10 <argp_parse@@Base+0x2980>
   1cd70:	str	r0, [sp]
   1cd74:	bl	11bfc <__ctype_b_loc@plt>
   1cd78:	ldr	r0, [r0]
   1cd7c:	mov	r7, r5
   1cd80:	ldrb	r1, [r7]
   1cd84:	ldrb	r1, [r0, r1, lsl #1]
   1cd88:	tst	r1, #1
   1cd8c:	bne	1ce64 <argp_parse@@Base+0x29d4>
   1cd90:	sub	r7, r7, #1
   1cd94:	cmp	r7, r9
   1cd98:	bcs	1cd80 <argp_parse@@Base+0x28f0>
   1cd9c:	ldr	r0, [sp]
   1cda0:	mov	r1, #0
   1cda4:	add	r6, r7, #1
   1cda8:	cmp	r6, r9
   1cdac:	bhi	1ce20 <argp_parse@@Base+0x2990>
   1cdb0:	b	1ce78 <argp_parse@@Base+0x29e8>
   1cdb4:	mov	r0, r6
   1cdb8:	sub	r6, r5, #1
   1cdbc:	cmp	r4, r8
   1cdc0:	bcs	1d11c <argp_parse@@Base+0x2c8c>
   1cdc4:	sub	r0, r6, r7
   1cdc8:	sub	r2, r8, r4
   1cdcc:	mov	r1, r4
   1cdd0:	add	r0, r9, r0
   1cdd4:	bl	11a04 <memmove@plt>
   1cdd8:	ldr	r0, [sl, #20]
   1cddc:	ldr	r1, [sl, #28]
   1cde0:	mov	r7, #0
   1cde4:	mov	r3, #32
   1cde8:	add	r5, r9, r5
   1cdec:	str	r7, [sl, #20]
   1cdf0:	sub	r0, r6, r0
   1cdf4:	add	r0, r9, r0
   1cdf8:	sub	r0, r4, r0
   1cdfc:	add	r8, r1, r0
   1ce00:	str	r8, [sl, #28]
   1ce04:	cmp	r5, r8
   1ce08:	bcc	1cc2c <argp_parse@@Base+0x279c>
   1ce0c:	b	1d130 <argp_parse@@Base+0x2ca0>
   1ce10:	mov	r7, r5
   1ce14:	add	r6, r7, #1
   1ce18:	cmp	r6, r9
   1ce1c:	bls	1ce78 <argp_parse@@Base+0x29e8>
   1ce20:	cmp	r1, #0
   1ce24:	beq	1cf50 <argp_parse@@Base+0x2ac0>
   1ce28:	ldr	r4, [sp, #4]
   1ce2c:	sub	r1, r7, #1
   1ce30:	mov	r7, r1
   1ce34:	cmp	r1, r9
   1ce38:	bcc	1cf54 <argp_parse@@Base+0x2ac4>
   1ce3c:	bl	11bfc <__ctype_b_loc@plt>
   1ce40:	mov	r1, r7
   1ce44:	ldr	r0, [r0]
   1ce48:	ldrb	r2, [r1], #-1
   1ce4c:	ldrb	r0, [r0, r2, lsl #1]
   1ce50:	tst	r0, #1
   1ce54:	bne	1ce30 <argp_parse@@Base+0x29a0>
   1ce58:	b	1cf54 <argp_parse@@Base+0x2ac4>
   1ce5c:	mov	r7, #0
   1ce60:	b	1cc34 <argp_parse@@Base+0x27a4>
   1ce64:	ldr	r0, [sp]
   1ce68:	mov	r1, #1
   1ce6c:	add	r6, r7, #1
   1ce70:	cmp	r6, r9
   1ce74:	bhi	1ce20 <argp_parse@@Base+0x2990>
   1ce78:	cmp	r5, r4
   1ce7c:	bcs	1ceb0 <argp_parse@@Base+0x2a20>
   1ce80:	add	r0, r9, r0
   1ce84:	add	r1, r0, #1
   1ce88:	mov	r5, r1
   1ce8c:	cmp	r1, r4
   1ce90:	bcs	1ceb0 <argp_parse@@Base+0x2a20>
   1ce94:	bl	11bfc <__ctype_b_loc@plt>
   1ce98:	mov	r1, r5
   1ce9c:	ldr	r0, [r0]
   1cea0:	ldrb	r2, [r1], #1
   1cea4:	ldrb	r0, [r0, r2, lsl #1]
   1cea8:	tst	r0, #1
   1ceac:	beq	1ce88 <argp_parse@@Base+0x29f8>
   1ceb0:	cmp	r5, r4
   1ceb4:	beq	1d0e8 <argp_parse@@Base+0x2c58>
   1ceb8:	bl	11bfc <__ctype_b_loc@plt>
   1cebc:	ldr	r0, [r0]
   1cec0:	mov	r6, r5
   1cec4:	ldrb	r1, [r6, #1]!
   1cec8:	ldrb	r1, [r0, r1, lsl #1]
   1cecc:	tst	r1, #1
   1ced0:	bne	1cec4 <argp_parse@@Base+0x2a34>
   1ced4:	ldr	r4, [sp, #4]
   1ced8:	mov	r3, #32
   1cedc:	add	r0, r8, #1
   1cee0:	cmp	r6, r0
   1cee4:	bne	1cf68 <argp_parse@@Base+0x2ad8>
   1cee8:	cmp	r8, r6
   1ceec:	bls	1cffc <argp_parse@@Base+0x2b6c>
   1cef0:	ldr	r0, [sl, #32]
   1cef4:	sub	r1, r0, r5
   1cef8:	cmp	r1, r4
   1cefc:	bgt	1cffc <argp_parse@@Base+0x2b6c>
   1cf00:	sub	r0, r0, r8
   1cf04:	add	r1, r4, #1
   1cf08:	cmp	r0, r1
   1cf0c:	ble	1cf94 <argp_parse@@Base+0x2b04>
   1cf10:	mov	r0, r4
   1cf14:	sub	r4, r8, r6
   1cf18:	add	r7, r5, #1
   1cf1c:	mov	r1, r6
   1cf20:	add	r0, r7, r0
   1cf24:	mov	r2, r4
   1cf28:	bl	11a04 <memmove@plt>
   1cf2c:	ldr	r0, [sl, #12]
   1cf30:	mov	r1, #10
   1cf34:	mov	r3, #32
   1cf38:	strb	r1, [r5]
   1cf3c:	mov	r5, r7
   1cf40:	add	r6, r7, r0
   1cf44:	add	r0, r6, r4
   1cf48:	sub	r0, r0, r9
   1cf4c:	b	1cfe4 <argp_parse@@Base+0x2b54>
   1cf50:	ldr	r4, [sp, #4]
   1cf54:	add	r5, r7, #1
   1cf58:	mov	r3, #32
   1cf5c:	add	r0, r8, #1
   1cf60:	cmp	r6, r0
   1cf64:	beq	1cee8 <argp_parse@@Base+0x2a58>
   1cf68:	cmp	r8, r6
   1cf6c:	bls	1cffc <argp_parse@@Base+0x2b6c>
   1cf70:	mvn	r0, r5
   1cf74:	add	r0, r0, r6
   1cf78:	cmp	r0, r4
   1cf7c:	bge	1cffc <argp_parse@@Base+0x2b6c>
   1cf80:	ldr	r0, [sl, #32]
   1cf84:	sub	r0, r0, r8
   1cf88:	add	r1, r4, #1
   1cf8c:	cmp	r0, r1
   1cf90:	bgt	1cf10 <argp_parse@@Base+0x2a80>
   1cf94:	ldr	r0, [sl, #24]
   1cf98:	cmp	r5, r0
   1cf9c:	bls	1cfb4 <argp_parse@@Base+0x2b24>
   1cfa0:	ldr	r3, [sl]
   1cfa4:	sub	r2, r5, r0
   1cfa8:	mov	r1, #1
   1cfac:	bl	11a7c <fwrite_unlocked@plt>
   1cfb0:	mov	r3, #32
   1cfb4:	ldr	r0, [sl]
   1cfb8:	ldr	r1, [r0, #20]
   1cfbc:	ldr	r2, [r0, #24]
   1cfc0:	cmp	r1, r2
   1cfc4:	bcs	1d104 <argp_parse@@Base+0x2c74>
   1cfc8:	add	r2, r1, #1
   1cfcc:	str	r2, [r0, #20]
   1cfd0:	mov	r0, #10
   1cfd4:	strb	r0, [r1]
   1cfd8:	ldr	r5, [sl, #24]
   1cfdc:	sub	r0, r8, r5
   1cfe0:	mov	r9, r5
   1cfe4:	str	r0, [sp, #8]
   1cfe8:	ldr	r7, [sl, #12]
   1cfec:	sub	r0, r6, r5
   1cff0:	cmp	r0, r7
   1cff4:	blt	1d014 <argp_parse@@Base+0x2b84>
   1cff8:	b	1d098 <argp_parse@@Base+0x2c08>
   1cffc:	mov	r0, #10
   1d000:	strb	r0, [r5], #1
   1d004:	ldr	r7, [sl, #12]
   1d008:	sub	r0, r6, r5
   1d00c:	cmp	r0, r7
   1d010:	bge	1d098 <argp_parse@@Base+0x2c08>
   1d014:	ldr	r0, [sp, #8]
   1d018:	add	r0, r9, r0
   1d01c:	add	r0, r0, #1
   1d020:	cmp	r6, r0
   1d024:	bne	1d038 <argp_parse@@Base+0x2ba8>
   1d028:	ldr	r0, [sl, #32]
   1d02c:	sub	r0, r0, r6
   1d030:	cmp	r0, r7
   1d034:	bge	1d098 <argp_parse@@Base+0x2c08>
   1d038:	cmp	r7, #1
   1d03c:	blt	1d0bc <argp_parse@@Base+0x2c2c>
   1d040:	mov	r4, #0
   1d044:	ldr	r0, [sl]
   1d048:	ldr	r1, [r0, #20]
   1d04c:	ldr	r2, [r0, #24]
   1d050:	cmp	r1, r2
   1d054:	bcs	1d078 <argp_parse@@Base+0x2be8>
   1d058:	add	r2, r1, #1
   1d05c:	str	r2, [r0, #20]
   1d060:	strb	r3, [r1]
   1d064:	ldr	r7, [sl, #12]
   1d068:	add	r4, r4, #1
   1d06c:	cmp	r4, r7
   1d070:	blt	1d044 <argp_parse@@Base+0x2bb4>
   1d074:	b	1d0bc <argp_parse@@Base+0x2c2c>
   1d078:	mov	r1, #32
   1d07c:	bl	11cf8 <__overflow@plt>
   1d080:	mov	r3, #32
   1d084:	ldr	r7, [sl, #12]
   1d088:	add	r4, r4, #1
   1d08c:	cmp	r4, r7
   1d090:	blt	1d044 <argp_parse@@Base+0x2bb4>
   1d094:	b	1d0bc <argp_parse@@Base+0x2c2c>
   1d098:	cmp	r7, #1
   1d09c:	blt	1d0bc <argp_parse@@Base+0x2c2c>
   1d0a0:	mov	r0, #0
   1d0a4:	strb	r3, [r5, r0]
   1d0a8:	add	r0, r0, #1
   1d0ac:	ldr	r7, [sl, #12]
   1d0b0:	cmp	r0, r7
   1d0b4:	blt	1d0a4 <argp_parse@@Base+0x2c14>
   1d0b8:	add	r5, r5, r0
   1d0bc:	cmp	r5, r6
   1d0c0:	bcs	1cc04 <argp_parse@@Base+0x2774>
   1d0c4:	ldr	r0, [sp, #8]
   1d0c8:	mov	r1, r6
   1d0cc:	add	r0, r9, r0
   1d0d0:	sub	r2, r0, r6
   1d0d4:	mov	r0, r5
   1d0d8:	bl	11a04 <memmove@plt>
   1d0dc:	ldr	r7, [sl, #12]
   1d0e0:	mov	r3, #32
   1d0e4:	b	1cc04 <argp_parse@@Base+0x2774>
   1d0e8:	mov	r7, #0
   1d0ec:	add	r5, r4, #1
   1d0f0:	mov	r3, #32
   1d0f4:	str	r7, [sl, #20]
   1d0f8:	cmp	r5, r8
   1d0fc:	bcc	1cc2c <argp_parse@@Base+0x279c>
   1d100:	b	1d130 <argp_parse@@Base+0x2ca0>
   1d104:	mov	r1, #10
   1d108:	bl	11cf8 <__overflow@plt>
   1d10c:	mov	r3, #32
   1d110:	b	1cfd8 <argp_parse@@Base+0x2b48>
   1d114:	str	r0, [sl, #20]
   1d118:	b	1d130 <argp_parse@@Base+0x2ca0>
   1d11c:	add	r0, r7, r0
   1d120:	str	r0, [sl, #20]
   1d124:	sub	r0, r6, r0
   1d128:	add	r8, r8, r0
   1d12c:	str	r8, [sl, #28]
   1d130:	ldr	r0, [sl, #24]
   1d134:	sub	r0, r8, r0
   1d138:	str	r0, [sl, #16]
   1d13c:	sub	sp, fp, #28
   1d140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d144:	push	{r4, r5, r6, sl, fp, lr}
   1d148:	add	fp, sp, #16
   1d14c:	mov	r4, r0
   1d150:	mov	r5, r1
   1d154:	ldr	r0, [r0, #28]
   1d158:	mov	r6, #1
   1d15c:	ldr	r1, [r4, #32]
   1d160:	sub	r0, r1, r0
   1d164:	cmp	r0, r5
   1d168:	bcs	1d228 <argp_parse@@Base+0x2d98>
   1d16c:	mov	r0, r4
   1d170:	bl	1cbc8 <argp_parse@@Base+0x2738>
   1d174:	ldr	r0, [r4, #24]
   1d178:	ldr	r1, [r4, #28]
   1d17c:	ldr	r3, [r4]
   1d180:	sub	r2, r1, r0
   1d184:	mov	r1, #1
   1d188:	bl	11a7c <fwrite_unlocked@plt>
   1d18c:	mov	r1, r0
   1d190:	ldr	r0, [r4, #24]
   1d194:	ldr	r2, [r4, #28]
   1d198:	sub	r3, r2, r0
   1d19c:	cmp	r1, r3
   1d1a0:	bne	1d1f4 <argp_parse@@Base+0x2d64>
   1d1a4:	mov	r1, #0
   1d1a8:	mov	r6, #1
   1d1ac:	str	r1, [r4, #16]
   1d1b0:	str	r0, [r4, #28]
   1d1b4:	ldr	r1, [r4, #32]
   1d1b8:	sub	r1, r1, r0
   1d1bc:	cmp	r1, r5
   1d1c0:	bcs	1d228 <argp_parse@@Base+0x2d98>
   1d1c4:	adds	r5, r1, r5
   1d1c8:	bcs	1d218 <argp_parse@@Base+0x2d88>
   1d1cc:	mov	r1, r5
   1d1d0:	bl	1caa8 <argp_parse@@Base+0x2618>
   1d1d4:	cmp	r0, #0
   1d1d8:	beq	1d218 <argp_parse@@Base+0x2d88>
   1d1dc:	str	r0, [r4, #24]
   1d1e0:	add	r1, r0, r5
   1d1e4:	str	r0, [r4, #28]
   1d1e8:	mov	r0, r6
   1d1ec:	str	r1, [r4, #32]
   1d1f0:	pop	{r4, r5, r6, sl, fp, pc}
   1d1f4:	sub	r2, r2, r1
   1d1f8:	str	r2, [r4, #28]
   1d1fc:	sub	r2, r2, r0
   1d200:	ldr	r3, [r4, #16]
   1d204:	sub	r3, r3, r1
   1d208:	add	r1, r0, r1
   1d20c:	str	r3, [r4, #16]
   1d210:	bl	11a04 <memmove@plt>
   1d214:	b	1d224 <argp_parse@@Base+0x2d94>
   1d218:	bl	11c50 <__errno_location@plt>
   1d21c:	mov	r1, #12
   1d220:	str	r1, [r0]
   1d224:	mov	r6, #0
   1d228:	mov	r0, r6
   1d22c:	pop	{r4, r5, r6, sl, fp, pc}
   1d230:	sub	sp, sp, #8
   1d234:	push	{r4, r5, r6, r7, fp, lr}
   1d238:	add	fp, sp, #16
   1d23c:	sub	sp, sp, #8
   1d240:	mov	r5, r1
   1d244:	mov	r4, r0
   1d248:	mov	r1, #150	; 0x96
   1d24c:	add	r6, fp, #8
   1d250:	str	r2, [fp, #8]
   1d254:	str	r3, [fp, #12]
   1d258:	mov	r0, r4
   1d25c:	bl	1d144 <argp_parse@@Base+0x2cb4>
   1d260:	cmp	r0, #0
   1d264:	beq	1d2b0 <argp_parse@@Base+0x2e20>
   1d268:	str	r6, [sp, #4]
   1d26c:	mov	r2, r5
   1d270:	mov	r3, r6
   1d274:	ldr	r0, [r4, #28]
   1d278:	ldr	r1, [r4, #32]
   1d27c:	sub	r7, r1, r0
   1d280:	mov	r1, r7
   1d284:	bl	11d64 <vsnprintf@plt>
   1d288:	add	r1, r0, #1
   1d28c:	cmp	r0, r7
   1d290:	bcs	1d258 <argp_parse@@Base+0x2dc8>
   1d294:	ldr	r1, [r4, #28]
   1d298:	add	r1, r1, r0
   1d29c:	str	r1, [r4, #28]
   1d2a0:	sub	sp, fp, #16
   1d2a4:	pop	{r4, r5, r6, r7, fp, lr}
   1d2a8:	add	sp, sp, #8
   1d2ac:	bx	lr
   1d2b0:	mvn	r0, #0
   1d2b4:	sub	sp, fp, #16
   1d2b8:	pop	{r4, r5, r6, r7, fp, lr}
   1d2bc:	add	sp, sp, #8
   1d2c0:	bx	lr
   1d2c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2c8:	add	fp, sp, #28
   1d2cc:	sub	sp, sp, #92	; 0x5c
   1d2d0:	mvn	r4, #0
   1d2d4:	cmp	r0, #1
   1d2d8:	blt	1de24 <argp_parse@@Base+0x3994>
   1d2dc:	ldr	ip, [fp, #16]
   1d2e0:	mov	r9, r2
   1d2e4:	mov	r2, r0
   1d2e8:	mov	r8, r1
   1d2ec:	mov	r0, #0
   1d2f0:	str	r3, [fp, #-48]	; 0xffffffd0
   1d2f4:	ldr	r6, [ip]
   1d2f8:	ldr	r4, [ip, #4]
   1d2fc:	str	r0, [ip, #12]
   1d300:	cmp	r6, #0
   1d304:	beq	1d328 <argp_parse@@Base+0x2e98>
   1d308:	ldr	r0, [ip, #16]
   1d30c:	cmp	r0, #0
   1d310:	beq	1d330 <argp_parse@@Base+0x2ea0>
   1d314:	ldrb	r0, [r9]
   1d318:	cmp	r0, #45	; 0x2d
   1d31c:	cmpne	r0, #43	; 0x2b
   1d320:	addeq	r9, r9, #1
   1d324:	b	1d3a4 <argp_parse@@Base+0x2f14>
   1d328:	mov	r6, #1
   1d32c:	str	r6, [ip]
   1d330:	mov	r0, #0
   1d334:	str	r6, [ip, #28]
   1d338:	str	r6, [ip, #32]
   1d33c:	str	r0, [ip, #20]
   1d340:	ldrb	r1, [r9]
   1d344:	cmp	r1, #43	; 0x2b
   1d348:	beq	1d358 <argp_parse@@Base+0x2ec8>
   1d34c:	cmp	r1, #45	; 0x2d
   1d350:	bne	1d364 <argp_parse@@Base+0x2ed4>
   1d354:	mov	r0, #2
   1d358:	str	r0, [ip, #24]
   1d35c:	add	r9, r9, #1
   1d360:	b	1d39c <argp_parse@@Base+0x2f0c>
   1d364:	ldr	r0, [fp, #20]
   1d368:	cmp	r0, #0
   1d36c:	bne	1d394 <argp_parse@@Base+0x2f04>
   1d370:	movw	r0, #572	; 0x23c
   1d374:	mov	r5, ip
   1d378:	mov	r7, r2
   1d37c:	movt	r0, #2
   1d380:	bl	11b9c <getenv@plt>
   1d384:	mov	r2, r7
   1d388:	mov	ip, r5
   1d38c:	cmp	r0, #0
   1d390:	beq	1de30 <argp_parse@@Base+0x39a0>
   1d394:	mov	r0, #0
   1d398:	str	r0, [ip, #24]
   1d39c:	mov	r0, #1
   1d3a0:	str	r0, [ip, #16]
   1d3a4:	ldrb	r0, [r9]
   1d3a8:	ldr	r5, [ip, #20]
   1d3ac:	str	r8, [fp, #-32]	; 0xffffffe0
   1d3b0:	subs	r1, r0, #58	; 0x3a
   1d3b4:	movne	r1, r4
   1d3b8:	cmp	r5, #0
   1d3bc:	str	r1, [fp, #-44]	; 0xffffffd4
   1d3c0:	beq	1d434 <argp_parse@@Base+0x2fa4>
   1d3c4:	ldrb	r0, [r5]
   1d3c8:	cmp	r0, #0
   1d3cc:	beq	1d434 <argp_parse@@Base+0x2fa4>
   1d3d0:	str	r2, [fp, #-36]	; 0xffffffdc
   1d3d4:	add	r8, r5, #1
   1d3d8:	mov	r0, r9
   1d3dc:	mov	r7, ip
   1d3e0:	str	r8, [ip, #20]
   1d3e4:	ldrb	r4, [r5]
   1d3e8:	mov	r1, r4
   1d3ec:	bl	11c38 <strchr@plt>
   1d3f0:	ldrb	r1, [r5, #1]
   1d3f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d3f8:	cmp	r1, #0
   1d3fc:	orr	r1, r4, #1
   1d400:	addeq	r6, r6, #1
   1d404:	streq	r6, [r7]
   1d408:	cmp	r1, #59	; 0x3b
   1d40c:	cmpne	r0, #0
   1d410:	bne	1d494 <argp_parse@@Base+0x3004>
   1d414:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d418:	cmp	r0, #0
   1d41c:	bne	1de64 <argp_parse@@Base+0x39d4>
   1d420:	str	r4, [r7, #8]
   1d424:	mov	r4, #63	; 0x3f
   1d428:	mov	r0, r4
   1d42c:	sub	sp, fp, #28
   1d430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d434:	mov	r3, ip
   1d438:	str	r9, [sp, #48]	; 0x30
   1d43c:	mov	r5, ip
   1d440:	ldr	r9, [r3, #32]!
   1d444:	cmp	r9, r6
   1d448:	strgt	r6, [r3]
   1d44c:	movgt	r9, r6
   1d450:	ldr	r7, [r5, #28]!
   1d454:	cmp	r7, r6
   1d458:	strgt	r6, [r5]
   1d45c:	movgt	r7, r6
   1d460:	ldr	r4, [ip, #24]
   1d464:	cmp	r4, #1
   1d468:	bne	1d940 <argp_parse@@Base+0x34b0>
   1d46c:	cmp	r7, r9
   1d470:	cmpne	r9, r6
   1d474:	bne	1d520 <argp_parse@@Base+0x3090>
   1d478:	cmp	r9, r6
   1d47c:	mov	r1, r5
   1d480:	mov	r0, r6
   1d484:	bne	1d8ec <argp_parse@@Base+0x345c>
   1d488:	cmp	r6, r2
   1d48c:	blt	1d910 <argp_parse@@Base+0x3480>
   1d490:	b	1d92c <argp_parse@@Base+0x349c>
   1d494:	ldrb	r2, [r0]
   1d498:	ldrb	r1, [r0, #1]
   1d49c:	cmp	r2, #87	; 0x57
   1d4a0:	bne	1d4f8 <argp_parse@@Base+0x3068>
   1d4a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d4a8:	cmp	r2, #0
   1d4ac:	beq	1d4f8 <argp_parse@@Base+0x3068>
   1d4b0:	cmp	r1, #59	; 0x3b
   1d4b4:	bne	1d4f8 <argp_parse@@Base+0x3068>
   1d4b8:	ldrb	r0, [r8]
   1d4bc:	cmp	r0, #0
   1d4c0:	bne	1de94 <argp_parse@@Base+0x3a04>
   1d4c4:	cmp	r6, r3
   1d4c8:	bne	1de8c <argp_parse@@Base+0x39fc>
   1d4cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d4d0:	cmp	r0, #0
   1d4d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d4d8:	bne	1df94 <argp_parse@@Base+0x3b04>
   1d4dc:	str	r4, [r7, #8]
   1d4e0:	ldrb	r4, [r9]
   1d4e4:	cmp	r4, #58	; 0x3a
   1d4e8:	movwne	r4, #63	; 0x3f
   1d4ec:	mov	r0, r4
   1d4f0:	sub	sp, fp, #28
   1d4f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4f8:	cmp	r1, #58	; 0x3a
   1d4fc:	bne	1de24 <argp_parse@@Base+0x3994>
   1d500:	ldrb	r0, [r0, #2]
   1d504:	ldrb	r1, [r8]
   1d508:	cmp	r0, #58	; 0x3a
   1d50c:	bne	1da5c <argp_parse@@Base+0x35cc>
   1d510:	cmp	r1, #0
   1d514:	bne	1da64 <argp_parse@@Base+0x35d4>
   1d518:	mov	r0, #0
   1d51c:	b	1df54 <argp_parse@@Base+0x3ac4>
   1d520:	cmp	r6, r9
   1d524:	str	r4, [sp, #28]
   1d528:	str	r5, [sp, #56]	; 0x38
   1d52c:	str	r7, [fp, #-40]	; 0xffffffd8
   1d530:	str	r3, [sp, #52]	; 0x34
   1d534:	str	r2, [fp, #-36]	; 0xffffffdc
   1d538:	ble	1d8c8 <argp_parse@@Base+0x3438>
   1d53c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d540:	cmp	r0, r9
   1d544:	bge	1d8c8 <argp_parse@@Base+0x3438>
   1d548:	add	r0, r8, r9, lsl #2
   1d54c:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1d550:	mov	r2, r6
   1d554:	str	r0, [fp, #-52]	; 0xffffffcc
   1d558:	sub	r0, r8, r9, lsl #2
   1d55c:	str	r0, [sp, #32]
   1d560:	rsb	r0, r9, #1
   1d564:	add	r0, r8, r0, lsl #2
   1d568:	str	r0, [sp, #44]	; 0x2c
   1d56c:	mvn	r0, r9
   1d570:	str	r0, [fp, #-56]	; 0xffffffc8
   1d574:	add	r0, r8, r0, lsl #2
   1d578:	add	r0, r0, #4
   1d57c:	str	r0, [sp, #24]
   1d580:	add	r0, r8, #4
   1d584:	str	r0, [sp, #60]	; 0x3c
   1d588:	sub	r4, r9, lr
   1d58c:	sub	r0, r2, r9
   1d590:	cmp	r0, r4
   1d594:	bgt	1d5bc <argp_parse@@Base+0x312c>
   1d598:	b	1d668 <argp_parse@@Base+0x31d8>
   1d59c:	mov	r2, sl
   1d5a0:	cmp	r2, r9
   1d5a4:	cmpgt	r9, lr
   1d5a8:	ble	1d8c8 <argp_parse@@Base+0x3438>
   1d5ac:	sub	r4, r9, lr
   1d5b0:	sub	r0, r2, r9
   1d5b4:	cmp	r0, r4
   1d5b8:	ble	1d668 <argp_parse@@Base+0x31d8>
   1d5bc:	sub	sl, r2, r4
   1d5c0:	cmp	r4, #1
   1d5c4:	blt	1d59c <argp_parse@@Base+0x310c>
   1d5c8:	mov	r3, #0
   1d5cc:	cmp	r4, #4
   1d5d0:	bcc	1d824 <argp_parse@@Base+0x3394>
   1d5d4:	add	r5, r8, r2, lsl #2
   1d5d8:	add	r1, r8, lr, lsl #2
   1d5dc:	cmp	r1, r5
   1d5e0:	bcs	1d5f4 <argp_parse@@Base+0x3164>
   1d5e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d5e8:	add	r5, r8, sl, lsl #2
   1d5ec:	cmp	r5, r0
   1d5f0:	bcc	1d824 <argp_parse@@Base+0x3394>
   1d5f4:	bic	r3, r4, #3
   1d5f8:	mov	r0, #1
   1d5fc:	str	sl, [sp, #40]	; 0x28
   1d600:	subs	r5, r3, #4
   1d604:	add	r5, r0, r5, lsr #2
   1d608:	and	r0, r5, #1
   1d60c:	str	r0, [sp, #36]	; 0x24
   1d610:	beq	1d7e0 <argp_parse@@Base+0x3350>
   1d614:	sub	r8, r5, r0
   1d618:	ldr	r0, [sp, #24]
   1d61c:	add	r5, r2, lr
   1d620:	mov	r7, #0
   1d624:	add	sl, r0, r5, lsl #2
   1d628:	mov	r5, #0
   1d62c:	add	ip, r1, r5
   1d630:	add	r0, sl, r5
   1d634:	add	r5, r5, #32
   1d638:	subs	r8, r8, #2
   1d63c:	add	r7, r7, #8
   1d640:	vld1.32	{d16-d17}, [r0]
   1d644:	vld1.32	{d18-d19}, [ip]
   1d648:	vst1.32	{d16-d17}, [ip]!
   1d64c:	vst1.32	{d18-d19}, [r0]!
   1d650:	vld1.32	{d16-d17}, [r0]
   1d654:	vld1.32	{d18-d19}, [ip]
   1d658:	vst1.32	{d16-d17}, [ip]
   1d65c:	vst1.32	{d18-d19}, [r0]
   1d660:	bne	1d62c <argp_parse@@Base+0x319c>
   1d664:	b	1d7e4 <argp_parse@@Base+0x3354>
   1d668:	cmp	r0, #1
   1d66c:	blt	1d7c8 <argp_parse@@Base+0x3338>
   1d670:	mov	sl, #0
   1d674:	cmp	r0, #3
   1d678:	bls	1d744 <argp_parse@@Base+0x32b4>
   1d67c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d680:	add	r1, r3, r2, lsl #2
   1d684:	add	r8, r3, lr, lsl #2
   1d688:	cmp	r8, r1
   1d68c:	bcs	1d6a8 <argp_parse@@Base+0x3218>
   1d690:	ldr	r3, [sp, #32]
   1d694:	add	r1, r2, lr
   1d698:	add	r1, r3, r1, lsl #2
   1d69c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d6a0:	cmp	r3, r1
   1d6a4:	bcc	1d744 <argp_parse@@Base+0x32b4>
   1d6a8:	bic	sl, r0, #3
   1d6ac:	mov	r3, #1
   1d6b0:	subs	r1, sl, #4
   1d6b4:	add	r1, r3, r1, lsr #2
   1d6b8:	and	r3, r1, #1
   1d6bc:	str	r3, [sp, #40]	; 0x28
   1d6c0:	beq	1d8b0 <argp_parse@@Base+0x3420>
   1d6c4:	sub	r7, r3, r1
   1d6c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d6cc:	mov	r1, #0
   1d6d0:	mov	ip, #32
   1d6d4:	mov	r5, r3
   1d6d8:	mov	r4, r8
   1d6dc:	adds	r7, r7, #2
   1d6e0:	add	r1, r1, #8
   1d6e4:	vld1.32	{d16-d17}, [r5]!
   1d6e8:	vld1.32	{d18-d19}, [r4]!
   1d6ec:	vst1.32	{d16-d17}, [r8], ip
   1d6f0:	vst1.32	{d18-d19}, [r3], ip
   1d6f4:	vld1.32	{d16-d17}, [r5]
   1d6f8:	vld1.32	{d18-d19}, [r4]
   1d6fc:	vst1.32	{d16-d17}, [r4]
   1d700:	vst1.32	{d18-d19}, [r5]
   1d704:	bne	1d6d4 <argp_parse@@Base+0x3244>
   1d708:	ldr	r3, [sp, #40]	; 0x28
   1d70c:	ldr	ip, [fp, #16]
   1d710:	cmp	r3, #0
   1d714:	beq	1d73c <argp_parse@@Base+0x32ac>
   1d718:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1d71c:	add	r3, r1, lr
   1d720:	add	r1, r1, r9
   1d724:	add	r3, r4, r3, lsl #2
   1d728:	add	r1, r4, r1, lsl #2
   1d72c:	vld1.32	{d16-d17}, [r1]
   1d730:	vld1.32	{d18-d19}, [r3]
   1d734:	vst1.32	{d16-d17}, [r3]
   1d738:	vst1.32	{d18-d19}, [r1]
   1d73c:	cmp	r0, sl
   1d740:	beq	1d7c8 <argp_parse@@Base+0x3338>
   1d744:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d748:	tst	r0, #1
   1d74c:	mov	r4, sl
   1d750:	add	r1, r2, r1
   1d754:	beq	1d778 <argp_parse@@Base+0x32e8>
   1d758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d75c:	add	r7, sl, r9
   1d760:	add	r4, sl, lr
   1d764:	ldr	r5, [r3, r7, lsl #2]
   1d768:	ldr	r8, [r3, r4, lsl #2]
   1d76c:	str	r5, [r3, r4, lsl #2]
   1d770:	orr	r4, sl, #1
   1d774:	str	r8, [r3, r7, lsl #2]
   1d778:	cmp	r1, sl
   1d77c:	beq	1d7c8 <argp_parse@@Base+0x3338>
   1d780:	ldr	r3, [sp, #60]	; 0x3c
   1d784:	add	r1, lr, r4
   1d788:	add	r4, r9, r4
   1d78c:	add	r1, r3, r1, lsl #2
   1d790:	add	r3, r3, r4, lsl #2
   1d794:	sub	r4, r4, r2
   1d798:	ldr	r7, [r1, #-4]
   1d79c:	ldr	r5, [r3, #-4]
   1d7a0:	adds	r4, r4, #2
   1d7a4:	str	r5, [r1, #-4]
   1d7a8:	str	r7, [r3, #-4]
   1d7ac:	ldr	r7, [r1]
   1d7b0:	ldr	r5, [r3]
   1d7b4:	str	r5, [r1]
   1d7b8:	str	r7, [r3]
   1d7bc:	add	r1, r1, #8
   1d7c0:	add	r3, r3, #8
   1d7c4:	bne	1d798 <argp_parse@@Base+0x3308>
   1d7c8:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1d7cc:	add	lr, r0, lr
   1d7d0:	cmp	r2, r9
   1d7d4:	cmpgt	r9, lr
   1d7d8:	bgt	1d5ac <argp_parse@@Base+0x311c>
   1d7dc:	b	1d8c8 <argp_parse@@Base+0x3438>
   1d7e0:	mov	r7, #0
   1d7e4:	ldr	r0, [sp, #36]	; 0x24
   1d7e8:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1d7ec:	ldr	sl, [sp, #40]	; 0x28
   1d7f0:	cmp	r0, #0
   1d7f4:	beq	1d818 <argp_parse@@Base+0x3388>
   1d7f8:	add	r0, r7, lr
   1d7fc:	add	r1, r7, sl
   1d800:	add	r0, r8, r0, lsl #2
   1d804:	add	r1, r8, r1, lsl #2
   1d808:	vld1.32	{d16-d17}, [r1]
   1d80c:	vld1.32	{d18-d19}, [r0]
   1d810:	vst1.32	{d16-d17}, [r0]
   1d814:	vst1.32	{d18-d19}, [r1]
   1d818:	ldr	ip, [fp, #16]
   1d81c:	cmp	r4, r3
   1d820:	beq	1d59c <argp_parse@@Base+0x310c>
   1d824:	mvn	r0, r3
   1d828:	tst	r4, #1
   1d82c:	add	r1, r9, r0
   1d830:	beq	1d850 <argp_parse@@Base+0x33c0>
   1d834:	add	r0, r3, lr
   1d838:	add	r5, r3, sl
   1d83c:	orr	r3, r3, #1
   1d840:	ldr	r7, [r8, r0, lsl #2]
   1d844:	ldr	r4, [r8, r5, lsl #2]
   1d848:	str	r4, [r8, r0, lsl #2]
   1d84c:	str	r7, [r8, r5, lsl #2]
   1d850:	cmp	r1, lr
   1d854:	beq	1d59c <argp_parse@@Base+0x310c>
   1d858:	ldr	r4, [sp, #60]	; 0x3c
   1d85c:	add	r0, lr, r3
   1d860:	sub	r1, r9, r3
   1d864:	add	r4, r4, r0, lsl #2
   1d868:	add	r0, r2, lr
   1d86c:	ldr	r2, [sp, #44]	; 0x2c
   1d870:	add	r0, r0, r3
   1d874:	add	r2, r2, r0, lsl #2
   1d878:	ldr	r0, [r4, #-4]
   1d87c:	ldr	r3, [r2, #-4]
   1d880:	sub	r1, r1, #2
   1d884:	cmp	lr, r1
   1d888:	str	r3, [r4, #-4]
   1d88c:	str	r0, [r2, #-4]
   1d890:	ldr	r0, [r4]
   1d894:	ldr	r3, [r2]
   1d898:	str	r3, [r4]
   1d89c:	str	r0, [r2]
   1d8a0:	add	r2, r2, #8
   1d8a4:	add	r4, r4, #8
   1d8a8:	bne	1d878 <argp_parse@@Base+0x33e8>
   1d8ac:	b	1d59c <argp_parse@@Base+0x310c>
   1d8b0:	mov	r1, #0
   1d8b4:	ldr	r3, [sp, #40]	; 0x28
   1d8b8:	ldr	ip, [fp, #16]
   1d8bc:	cmp	r3, #0
   1d8c0:	bne	1d718 <argp_parse@@Base+0x3288>
   1d8c4:	b	1d73c <argp_parse@@Base+0x32ac>
   1d8c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d8cc:	ldr	r3, [sp, #52]	; 0x34
   1d8d0:	ldr	r5, [sp, #56]	; 0x38
   1d8d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d8d8:	ldr	r4, [sp, #28]
   1d8dc:	add	r0, r0, r6
   1d8e0:	mov	r1, r3
   1d8e4:	sub	r0, r0, r9
   1d8e8:	str	r0, [r5]
   1d8ec:	mov	r7, r0
   1d8f0:	str	r6, [r1]
   1d8f4:	cmp	r6, r2
   1d8f8:	blt	1d910 <argp_parse@@Base+0x3480>
   1d8fc:	b	1d92c <argp_parse@@Base+0x349c>
   1d900:	add	r6, r6, #1
   1d904:	cmp	r2, r6
   1d908:	str	r6, [ip]
   1d90c:	beq	1d934 <argp_parse@@Base+0x34a4>
   1d910:	ldr	r0, [r8, r6, lsl #2]
   1d914:	ldrb	r1, [r0]
   1d918:	cmp	r1, #45	; 0x2d
   1d91c:	bne	1d900 <argp_parse@@Base+0x3470>
   1d920:	ldrb	r0, [r0, #1]
   1d924:	cmp	r0, #0
   1d928:	beq	1d900 <argp_parse@@Base+0x3470>
   1d92c:	mov	r9, r6
   1d930:	b	1d938 <argp_parse@@Base+0x34a8>
   1d934:	mov	r9, r2
   1d938:	mov	r6, r9
   1d93c:	str	r9, [r3]
   1d940:	cmp	r6, r2
   1d944:	beq	1de18 <argp_parse@@Base+0x3988>
   1d948:	mov	sl, r4
   1d94c:	movw	r4, #61324	; 0xef8c
   1d950:	ldr	r0, [r8, r6, lsl #2]
   1d954:	str	r5, [sp, #56]	; 0x38
   1d958:	str	r7, [fp, #-40]	; 0xffffffd8
   1d95c:	str	r3, [sp, #52]	; 0x34
   1d960:	str	r2, [fp, #-36]	; 0xffffffdc
   1d964:	movt	r4, #1
   1d968:	mov	r1, r4
   1d96c:	bl	11998 <strcmp@plt>
   1d970:	cmp	r0, #0
   1d974:	beq	1da04 <argp_parse@@Base+0x3574>
   1d978:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d97c:	ldr	ip, [fp, #16]
   1d980:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1d984:	cmp	r6, r2
   1d988:	beq	1de18 <argp_parse@@Base+0x3988>
   1d98c:	ldr	r5, [r8, r6, lsl #2]
   1d990:	mov	r3, r4
   1d994:	mvn	r4, #0
   1d998:	ldrb	r0, [r5]
   1d99c:	cmp	r0, #45	; 0x2d
   1d9a0:	bne	1da3c <argp_parse@@Base+0x35ac>
   1d9a4:	mov	r7, r5
   1d9a8:	ldrb	r1, [r7, #1]!
   1d9ac:	cmp	r1, #0
   1d9b0:	beq	1da3c <argp_parse@@Base+0x35ac>
   1d9b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d9b8:	cmp	r0, #0
   1d9bc:	beq	1df84 <argp_parse@@Base+0x3af4>
   1d9c0:	ldr	r9, [fp, #12]
   1d9c4:	cmp	r1, #45	; 0x2d
   1d9c8:	bne	1dee0 <argp_parse@@Base+0x3a50>
   1d9cc:	add	r0, r5, #2
   1d9d0:	mov	r1, r8
   1d9d4:	str	r0, [ip, #20]
   1d9d8:	ldr	r0, [fp, #8]
   1d9dc:	stm	sp, {r0, r9, ip}
   1d9e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d9e4:	str	r3, [sp, #16]
   1d9e8:	str	r0, [sp, #12]
   1d9ec:	mov	r0, r2
   1d9f0:	ldr	r2, [sp, #48]	; 0x30
   1d9f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d9f8:	bl	1dfdc <argp_parse@@Base+0x3b4c>
   1d9fc:	sub	sp, fp, #28
   1da00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1da08:	ldr	ip, [fp, #16]
   1da0c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1da10:	add	r2, r6, #1
   1da14:	cmp	r0, r9
   1da18:	str	r2, [ip]
   1da1c:	cmpne	r9, r2
   1da20:	bne	1da74 <argp_parse@@Base+0x35e4>
   1da24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1da28:	ldr	r1, [sp, #56]	; 0x38
   1da2c:	cmp	r0, r9
   1da30:	mov	r0, r2
   1da34:	beq	1de00 <argp_parse@@Base+0x3970>
   1da38:	b	1de08 <argp_parse@@Base+0x3978>
   1da3c:	cmp	sl, #0
   1da40:	addne	r0, r6, #1
   1da44:	strne	r5, [ip, #12]
   1da48:	movne	r4, #1
   1da4c:	strne	r0, [ip]
   1da50:	mov	r0, r4
   1da54:	sub	sp, fp, #28
   1da58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da5c:	cmp	r1, #0
   1da60:	beq	1de38 <argp_parse@@Base+0x39a8>
   1da64:	add	r0, r6, #1
   1da68:	str	r8, [r7, #12]
   1da6c:	str	r0, [r7]
   1da70:	b	1df58 <argp_parse@@Base+0x3ac8>
   1da74:	cmp	r6, r9
   1da78:	str	r2, [sp, #48]	; 0x30
   1da7c:	blt	1dde0 <argp_parse@@Base+0x3950>
   1da80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1da84:	cmp	r0, r9
   1da88:	bge	1dde0 <argp_parse@@Base+0x3950>
   1da8c:	add	r0, r8, r9, lsl #2
   1da90:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1da94:	str	r0, [fp, #-44]	; 0xffffffd4
   1da98:	sub	r0, r8, r9, lsl #2
   1da9c:	str	r0, [sp, #44]	; 0x2c
   1daa0:	rsb	r0, r9, #1
   1daa4:	add	r0, r8, r0, lsl #2
   1daa8:	str	r0, [fp, #-56]	; 0xffffffc8
   1daac:	mvn	r0, r9
   1dab0:	str	r0, [fp, #-48]	; 0xffffffd0
   1dab4:	add	r0, r8, r0, lsl #2
   1dab8:	add	r0, r0, #4
   1dabc:	str	r0, [sp, #40]	; 0x28
   1dac0:	add	r0, r8, #4
   1dac4:	str	r0, [fp, #-52]	; 0xffffffcc
   1dac8:	ldr	r0, [sp, #48]	; 0x30
   1dacc:	sub	r4, r9, ip
   1dad0:	sub	sl, r0, r9
   1dad4:	cmp	sl, r4
   1dad8:	bgt	1db00 <argp_parse@@Base+0x3670>
   1dadc:	b	1dba8 <argp_parse@@Base+0x3718>
   1dae0:	mov	r0, r3
   1dae4:	cmp	r0, r9
   1dae8:	cmpgt	r9, ip
   1daec:	ble	1dde0 <argp_parse@@Base+0x3950>
   1daf0:	sub	r4, r9, ip
   1daf4:	sub	sl, r0, r9
   1daf8:	cmp	sl, r4
   1dafc:	ble	1dba8 <argp_parse@@Base+0x3718>
   1db00:	sub	r3, r0, r4
   1db04:	cmp	r4, #1
   1db08:	blt	1dae0 <argp_parse@@Base+0x3650>
   1db0c:	mov	r1, #0
   1db10:	cmp	r4, #4
   1db14:	bcc	1dc88 <argp_parse@@Base+0x37f8>
   1db18:	add	r2, r8, r0, lsl #2
   1db1c:	add	r7, r8, ip, lsl #2
   1db20:	cmp	r7, r2
   1db24:	bcs	1db38 <argp_parse@@Base+0x36a8>
   1db28:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1db2c:	add	r2, r8, r3, lsl #2
   1db30:	cmp	r2, r5
   1db34:	bcc	1dc88 <argp_parse@@Base+0x37f8>
   1db38:	bic	r1, r4, #3
   1db3c:	mov	r6, #1
   1db40:	subs	r2, r1, #4
   1db44:	add	r2, r6, r2, lsr #2
   1db48:	and	r6, r2, #1
   1db4c:	str	r6, [sp, #60]	; 0x3c
   1db50:	beq	1dc48 <argp_parse@@Base+0x37b8>
   1db54:	ldr	r5, [sp, #40]	; 0x28
   1db58:	sub	r2, r6, r2
   1db5c:	add	r6, ip, r0
   1db60:	add	lr, r5, r6, lsl #2
   1db64:	mov	r5, #0
   1db68:	mov	r6, #0
   1db6c:	add	sl, r7, r5
   1db70:	add	r8, lr, r5
   1db74:	adds	r2, r2, #2
   1db78:	add	r5, r5, #32
   1db7c:	add	r6, r6, #8
   1db80:	vld1.32	{d16-d17}, [r8]
   1db84:	vld1.32	{d18-d19}, [sl]
   1db88:	vst1.32	{d16-d17}, [sl]!
   1db8c:	vst1.32	{d18-d19}, [r8]!
   1db90:	vld1.32	{d16-d17}, [r8]
   1db94:	vld1.32	{d18-d19}, [sl]
   1db98:	vst1.32	{d16-d17}, [sl]
   1db9c:	vst1.32	{d18-d19}, [r8]
   1dba0:	bne	1db6c <argp_parse@@Base+0x36dc>
   1dba4:	b	1dc4c <argp_parse@@Base+0x37bc>
   1dba8:	cmp	sl, #1
   1dbac:	blt	1ddd0 <argp_parse@@Base+0x3940>
   1dbb0:	mov	r1, #0
   1dbb4:	cmp	sl, #3
   1dbb8:	bls	1dd50 <argp_parse@@Base+0x38c0>
   1dbbc:	add	r2, r8, r0, lsl #2
   1dbc0:	add	r7, r8, ip, lsl #2
   1dbc4:	cmp	r7, r2
   1dbc8:	bcs	1dbe4 <argp_parse@@Base+0x3754>
   1dbcc:	ldr	r3, [sp, #44]	; 0x2c
   1dbd0:	add	r2, ip, r0
   1dbd4:	add	r2, r3, r2, lsl #2
   1dbd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dbdc:	cmp	r3, r2
   1dbe0:	bcc	1dd50 <argp_parse@@Base+0x38c0>
   1dbe4:	bic	r1, sl, #3
   1dbe8:	mov	r3, #1
   1dbec:	subs	r2, r1, #4
   1dbf0:	add	r2, r3, r2, lsr #2
   1dbf4:	and	r3, r2, #1
   1dbf8:	str	r3, [sp, #60]	; 0x3c
   1dbfc:	beq	1dd14 <argp_parse@@Base+0x3884>
   1dc00:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1dc04:	sub	r6, r3, r2
   1dc08:	mov	r4, #0
   1dc0c:	mov	lr, #32
   1dc10:	mov	r2, r5
   1dc14:	mov	r3, r7
   1dc18:	adds	r6, r6, #2
   1dc1c:	add	r4, r4, #8
   1dc20:	vld1.32	{d16-d17}, [r2]!
   1dc24:	vld1.32	{d18-d19}, [r3]!
   1dc28:	vst1.32	{d16-d17}, [r7], lr
   1dc2c:	vst1.32	{d18-d19}, [r5], lr
   1dc30:	vld1.32	{d16-d17}, [r2]
   1dc34:	vld1.32	{d18-d19}, [r3]
   1dc38:	vst1.32	{d16-d17}, [r3]
   1dc3c:	vst1.32	{d18-d19}, [r2]
   1dc40:	bne	1dc10 <argp_parse@@Base+0x3780>
   1dc44:	b	1dd18 <argp_parse@@Base+0x3888>
   1dc48:	mov	r6, #0
   1dc4c:	ldr	r2, [sp, #60]	; 0x3c
   1dc50:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1dc54:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1dc58:	cmp	r2, #0
   1dc5c:	beq	1dc80 <argp_parse@@Base+0x37f0>
   1dc60:	add	r2, r6, ip
   1dc64:	add	r7, r6, r3
   1dc68:	add	r2, r8, r2, lsl #2
   1dc6c:	add	r7, r8, r7, lsl #2
   1dc70:	vld1.32	{d16-d17}, [r7]
   1dc74:	vld1.32	{d18-d19}, [r2]
   1dc78:	vst1.32	{d16-d17}, [r2]
   1dc7c:	vst1.32	{d18-d19}, [r7]
   1dc80:	cmp	r4, r1
   1dc84:	beq	1dae0 <argp_parse@@Base+0x3650>
   1dc88:	mvn	r2, r1
   1dc8c:	tst	r4, #1
   1dc90:	add	r2, r9, r2
   1dc94:	beq	1dcb4 <argp_parse@@Base+0x3824>
   1dc98:	add	r7, r1, ip
   1dc9c:	add	r5, r1, r3
   1dca0:	orr	r1, r1, #1
   1dca4:	ldr	r6, [r8, r7, lsl #2]
   1dca8:	ldr	r4, [r8, r5, lsl #2]
   1dcac:	str	r4, [r8, r7, lsl #2]
   1dcb0:	str	r6, [r8, r5, lsl #2]
   1dcb4:	cmp	r2, ip
   1dcb8:	beq	1dae0 <argp_parse@@Base+0x3650>
   1dcbc:	add	r0, ip, r0
   1dcc0:	sub	r2, r9, r1
   1dcc4:	add	r7, ip, r1
   1dcc8:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1dccc:	add	r0, r0, r1
   1dcd0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1dcd4:	add	r7, r4, r7, lsl #2
   1dcd8:	add	r0, r1, r0, lsl #2
   1dcdc:	ldr	r1, [r7, #-4]
   1dce0:	ldr	r6, [r0, #-4]
   1dce4:	sub	r2, r2, #2
   1dce8:	cmp	ip, r2
   1dcec:	str	r6, [r7, #-4]
   1dcf0:	str	r1, [r0, #-4]
   1dcf4:	ldr	r1, [r7]
   1dcf8:	ldr	r6, [r0]
   1dcfc:	str	r6, [r7]
   1dd00:	str	r1, [r0]
   1dd04:	add	r0, r0, #8
   1dd08:	add	r7, r7, #8
   1dd0c:	bne	1dcdc <argp_parse@@Base+0x384c>
   1dd10:	b	1dae0 <argp_parse@@Base+0x3650>
   1dd14:	mov	r4, #0
   1dd18:	ldr	r2, [sp, #60]	; 0x3c
   1dd1c:	cmp	r2, #0
   1dd20:	beq	1dd44 <argp_parse@@Base+0x38b4>
   1dd24:	add	r2, r4, ip
   1dd28:	add	r3, r4, r9
   1dd2c:	add	r2, r8, r2, lsl #2
   1dd30:	add	r3, r8, r3, lsl #2
   1dd34:	vld1.32	{d16-d17}, [r3]
   1dd38:	vld1.32	{d18-d19}, [r2]
   1dd3c:	vst1.32	{d16-d17}, [r2]
   1dd40:	vst1.32	{d18-d19}, [r3]
   1dd44:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1dd48:	cmp	sl, r1
   1dd4c:	beq	1ddd0 <argp_parse@@Base+0x3940>
   1dd50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dd54:	tst	sl, #1
   1dd58:	mov	r3, r1
   1dd5c:	add	r2, r0, r2
   1dd60:	beq	1dd80 <argp_parse@@Base+0x38f0>
   1dd64:	add	r6, r1, r9
   1dd68:	add	r3, r1, ip
   1dd6c:	ldr	r5, [r8, r6, lsl #2]
   1dd70:	ldr	r7, [r8, r3, lsl #2]
   1dd74:	str	r5, [r8, r3, lsl #2]
   1dd78:	orr	r3, r1, #1
   1dd7c:	str	r7, [r8, r6, lsl #2]
   1dd80:	cmp	r2, r1
   1dd84:	beq	1ddd0 <argp_parse@@Base+0x3940>
   1dd88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1dd8c:	add	r1, ip, r3
   1dd90:	add	r3, r9, r3
   1dd94:	add	r1, r2, r1, lsl #2
   1dd98:	add	r2, r2, r3, lsl #2
   1dd9c:	sub	r3, r3, r0
   1dda0:	ldr	r7, [r1, #-4]
   1dda4:	ldr	r6, [r2, #-4]
   1dda8:	adds	r3, r3, #2
   1ddac:	str	r6, [r1, #-4]
   1ddb0:	str	r7, [r2, #-4]
   1ddb4:	ldr	r7, [r1]
   1ddb8:	ldr	r6, [r2]
   1ddbc:	str	r6, [r1]
   1ddc0:	str	r7, [r2]
   1ddc4:	add	r1, r1, #8
   1ddc8:	add	r2, r2, #8
   1ddcc:	bne	1dda0 <argp_parse@@Base+0x3910>
   1ddd0:	add	ip, sl, ip
   1ddd4:	cmp	r0, r9
   1ddd8:	cmpgt	r9, ip
   1dddc:	bgt	1daf0 <argp_parse@@Base+0x3660>
   1dde0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dde4:	ldr	r2, [sp, #48]	; 0x30
   1dde8:	ldr	r1, [sp, #56]	; 0x38
   1ddec:	ldr	ip, [fp, #16]
   1ddf0:	add	r0, r0, r2
   1ddf4:	sub	r0, r0, r9
   1ddf8:	str	r0, [r1]
   1ddfc:	ldr	r1, [sp, #52]	; 0x34
   1de00:	str	r2, [r1]
   1de04:	str	r0, [fp, #-40]	; 0xffffffd8
   1de08:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1de0c:	str	lr, [ip]
   1de10:	str	lr, [ip, #32]
   1de14:	mov	r9, lr
   1de18:	cmp	r7, r9
   1de1c:	mvn	r4, #0
   1de20:	strne	r7, [ip]
   1de24:	mov	r0, r4
   1de28:	sub	sp, fp, #28
   1de2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de30:	mov	r0, #1
   1de34:	b	1d398 <argp_parse@@Base+0x2f08>
   1de38:	cmp	r6, r3
   1de3c:	bne	1df44 <argp_parse@@Base+0x3ab4>
   1de40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1de44:	cmp	r0, #0
   1de48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de4c:	bne	1dfb8 <argp_parse@@Base+0x3b28>
   1de50:	str	r4, [r7, #8]
   1de54:	ldrb	r4, [r9]
   1de58:	cmp	r4, #58	; 0x3a
   1de5c:	movwne	r4, #63	; 0x3f
   1de60:	b	1df58 <argp_parse@@Base+0x3ac8>
   1de64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de68:	movw	r1, #499	; 0x1f3
   1de6c:	mov	r3, r4
   1de70:	movt	r1, #2
   1de74:	ldr	r2, [r0]
   1de78:	movw	r0, #5568	; 0x15c0
   1de7c:	movt	r0, #3
   1de80:	ldr	r0, [r0]
   1de84:	bl	11c44 <fprintf@plt>
   1de88:	b	1d420 <argp_parse@@Base+0x2f90>
   1de8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de90:	ldr	r8, [r0, r6, lsl #2]
   1de94:	ldr	r2, [fp, #8]
   1de98:	movw	r1, #568	; 0x238
   1de9c:	str	r8, [r7, #12]
   1dea0:	mov	r0, #0
   1dea4:	movt	r1, #2
   1dea8:	str	r0, [r7, #12]
   1deac:	str	r8, [r7, #20]
   1deb0:	str	r2, [sp]
   1deb4:	stmib	sp, {r0, r7}
   1deb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1debc:	str	r1, [sp, #16]
   1dec0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dec4:	mov	r2, r9
   1dec8:	str	r0, [sp, #12]
   1decc:	mov	r0, r3
   1ded0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ded4:	bl	1dfdc <argp_parse@@Base+0x3b4c>
   1ded8:	sub	sp, fp, #28
   1dedc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dee0:	cmp	r9, #0
   1dee4:	beq	1df84 <argp_parse@@Base+0x3af4>
   1dee8:	ldrb	r0, [r5, #2]
   1deec:	cmp	r0, #0
   1def0:	beq	1df6c <argp_parse@@Base+0x3adc>
   1def4:	ldr	r1, [fp, #8]
   1def8:	movw	r0, #61325	; 0xef8d
   1defc:	str	r7, [ip, #20]
   1df00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1df04:	movt	r0, #1
   1df08:	stm	sp, {r1, r9, ip}
   1df0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1df10:	str	r0, [sp, #16]
   1df14:	mov	r0, r2
   1df18:	ldr	r2, [sp, #48]	; 0x30
   1df1c:	str	r1, [sp, #12]
   1df20:	mov	r1, r8
   1df24:	bl	1dfdc <argp_parse@@Base+0x3b4c>
   1df28:	ldr	ip, [fp, #16]
   1df2c:	mov	r4, r0
   1df30:	cmn	r0, #1
   1df34:	bne	1de24 <argp_parse@@Base+0x3994>
   1df38:	ldr	r6, [ip]
   1df3c:	ldr	r5, [r8, r6, lsl #2]
   1df40:	b	1df84 <argp_parse@@Base+0x3af4>
   1df44:	add	r0, r6, #1
   1df48:	str	r0, [r7]
   1df4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1df50:	ldr	r0, [r0, r6, lsl #2]
   1df54:	str	r0, [r7, #12]
   1df58:	mov	r0, #0
   1df5c:	str	r0, [r7, #20]
   1df60:	mov	r0, r4
   1df64:	sub	sp, fp, #28
   1df68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df6c:	ldr	r0, [sp, #48]	; 0x30
   1df70:	bl	11c38 <strchr@plt>
   1df74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1df78:	ldr	ip, [fp, #16]
   1df7c:	cmp	r0, #0
   1df80:	beq	1def4 <argp_parse@@Base+0x3a64>
   1df84:	ldr	r9, [sp, #48]	; 0x30
   1df88:	add	r5, r5, #1
   1df8c:	str	r5, [ip, #20]
   1df90:	b	1d3d4 <argp_parse@@Base+0x2f44>
   1df94:	ldr	r2, [r0]
   1df98:	movw	r0, #5568	; 0x15c0
   1df9c:	movw	r1, #527	; 0x20f
   1dfa0:	mov	r3, r4
   1dfa4:	movt	r0, #3
   1dfa8:	movt	r1, #2
   1dfac:	ldr	r0, [r0]
   1dfb0:	bl	11c44 <fprintf@plt>
   1dfb4:	b	1d4dc <argp_parse@@Base+0x304c>
   1dfb8:	ldr	r2, [r0]
   1dfbc:	movw	r0, #5568	; 0x15c0
   1dfc0:	movw	r1, #527	; 0x20f
   1dfc4:	mov	r3, r4
   1dfc8:	movt	r0, #3
   1dfcc:	movt	r1, #2
   1dfd0:	ldr	r0, [r0]
   1dfd4:	bl	11c44 <fprintf@plt>
   1dfd8:	b	1de50 <argp_parse@@Base+0x39c0>
   1dfdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dfe0:	add	fp, sp, #28
   1dfe4:	sub	sp, sp, #44	; 0x2c
   1dfe8:	str	r0, [sp, #8]
   1dfec:	ldr	r0, [fp, #16]
   1dff0:	str	r2, [sp, #12]
   1dff4:	str	r1, [sp, #16]
   1dff8:	ldr	r8, [r0, #20]
   1dffc:	mov	r9, r8
   1e000:	b	1e008 <argp_parse@@Base+0x3b78>
   1e004:	add	r9, r9, #1
   1e008:	ldrb	r0, [r9]
   1e00c:	cmp	r0, #0
   1e010:	cmpne	r0, #61	; 0x3d
   1e014:	bne	1e004 <argp_parse@@Base+0x3b74>
   1e018:	ldr	sl, [r3]
   1e01c:	mvn	r0, #0
   1e020:	str	r0, [sp, #24]
   1e024:	cmp	sl, #0
   1e028:	beq	1e1d4 <argp_parse@@Base+0x3d44>
   1e02c:	sub	r0, r9, r8
   1e030:	mov	r4, #0
   1e034:	mov	r6, sl
   1e038:	mov	r7, r3
   1e03c:	str	r3, [sp, #28]
   1e040:	str	r0, [fp, #-32]	; 0xffffffe0
   1e044:	b	1e058 <argp_parse@@Base+0x3bc8>
   1e048:	ldr	r6, [r7, #16]!
   1e04c:	add	r4, r4, #1
   1e050:	cmp	r6, #0
   1e054:	beq	1e08c <argp_parse@@Base+0x3bfc>
   1e058:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e05c:	mov	r0, r6
   1e060:	mov	r1, r8
   1e064:	bl	11ddc <strncmp@plt>
   1e068:	cmp	r0, #0
   1e06c:	bne	1e048 <argp_parse@@Base+0x3bb8>
   1e070:	mov	r0, r6
   1e074:	bl	11c20 <strlen@plt>
   1e078:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e07c:	cmp	r1, r0
   1e080:	bne	1e048 <argp_parse@@Base+0x3bb8>
   1e084:	str	r4, [sp, #24]
   1e088:	b	1e448 <argp_parse@@Base+0x3fb8>
   1e08c:	cmp	sl, #0
   1e090:	beq	1e1f0 <argp_parse@@Base+0x3d60>
   1e094:	ldr	r0, [fp, #12]
   1e098:	cmp	r0, #0
   1e09c:	beq	1e270 <argp_parse@@Base+0x3de0>
   1e0a0:	ldr	r0, [fp, #20]
   1e0a4:	cmp	r0, #0
   1e0a8:	beq	1e58c <argp_parse@@Base+0x40fc>
   1e0ac:	mov	r0, #0
   1e0b0:	ldr	r6, [sp, #28]
   1e0b4:	mov	r5, #0
   1e0b8:	mov	r7, #0
   1e0bc:	str	r0, [sp, #32]
   1e0c0:	mvn	r0, #0
   1e0c4:	str	r0, [sp, #24]
   1e0c8:	mov	r0, #0
   1e0cc:	str	r0, [sp, #4]
   1e0d0:	mov	r0, #0
   1e0d4:	str	r0, [sp, #20]
   1e0d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e0dc:	mov	r0, sl
   1e0e0:	mov	r1, r8
   1e0e4:	bl	11ddc <strncmp@plt>
   1e0e8:	cmp	r0, #0
   1e0ec:	beq	1e114 <argp_parse@@Base+0x3c84>
   1e0f0:	mov	r1, r5
   1e0f4:	ldr	sl, [r6, #16]!
   1e0f8:	cmp	sl, #0
   1e0fc:	beq	1e424 <argp_parse@@Base+0x3f94>
   1e100:	ldr	r0, [fp, #16]
   1e104:	add	r1, r1, #1
   1e108:	mov	r5, r1
   1e10c:	ldr	r8, [r0, #20]
   1e110:	b	1e0d8 <argp_parse@@Base+0x3c48>
   1e114:	cmp	r7, #0
   1e118:	beq	1e194 <argp_parse@@Base+0x3d04>
   1e11c:	ldr	r0, [sp, #32]
   1e120:	mov	r1, r5
   1e124:	cmp	r0, #0
   1e128:	bne	1e0f4 <argp_parse@@Base+0x3c64>
   1e12c:	ldr	r8, [sp, #20]
   1e130:	cmp	r8, #0
   1e134:	bne	1e170 <argp_parse@@Base+0x3ce0>
   1e138:	mov	r0, r4
   1e13c:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1e140:	cmp	r0, #0
   1e144:	beq	1e1b0 <argp_parse@@Base+0x3d20>
   1e148:	mov	r1, #0
   1e14c:	mov	r2, r4
   1e150:	mov	r8, r0
   1e154:	bl	11c8c <memset@plt>
   1e158:	ldr	r0, [sp, #24]
   1e15c:	mov	r1, #1
   1e160:	mov	r2, #1
   1e164:	str	r1, [sp, #4]
   1e168:	mov	r1, r5
   1e16c:	strb	r2, [r8, r0]
   1e170:	mov	r0, #1
   1e174:	str	r8, [sp, #20]
   1e178:	strb	r0, [r8, r1]
   1e17c:	mov	r0, #0
   1e180:	str	r0, [sp, #32]
   1e184:	ldr	sl, [r6, #16]!
   1e188:	cmp	sl, #0
   1e18c:	bne	1e100 <argp_parse@@Base+0x3c70>
   1e190:	b	1e424 <argp_parse@@Base+0x3f94>
   1e194:	mov	r7, r6
   1e198:	mov	r1, r5
   1e19c:	str	r5, [sp, #24]
   1e1a0:	ldr	sl, [r6, #16]!
   1e1a4:	cmp	sl, #0
   1e1a8:	bne	1e100 <argp_parse@@Base+0x3c70>
   1e1ac:	b	1e424 <argp_parse@@Base+0x3f94>
   1e1b0:	mov	r0, #1
   1e1b4:	mov	r1, r5
   1e1b8:	str	r0, [sp, #32]
   1e1bc:	mov	r0, #0
   1e1c0:	str	r0, [sp, #20]
   1e1c4:	ldr	sl, [r6, #16]!
   1e1c8:	cmp	sl, #0
   1e1cc:	bne	1e100 <argp_parse@@Base+0x3c70>
   1e1d0:	b	1e424 <argp_parse@@Base+0x3f94>
   1e1d4:	mov	r0, #0
   1e1d8:	mov	r4, #0
   1e1dc:	mov	r7, #0
   1e1e0:	mov	r1, #0
   1e1e4:	mov	r8, #0
   1e1e8:	mov	r6, r3
   1e1ec:	b	1e204 <argp_parse@@Base+0x3d74>
   1e1f0:	ldr	r6, [sp, #28]
   1e1f4:	mov	r0, #0
   1e1f8:	mov	r7, #0
   1e1fc:	mov	r1, #0
   1e200:	mov	r8, #0
   1e204:	str	r0, [sp, #32]
   1e208:	cmp	r1, #0
   1e20c:	ldreq	r0, [sp, #32]
   1e210:	cmpeq	r0, #0
   1e214:	beq	1e440 <argp_parse@@Base+0x3fb0>
   1e218:	ldr	r0, [fp, #20]
   1e21c:	cmp	r0, #0
   1e220:	bne	1e658 <argp_parse@@Base+0x41c8>
   1e224:	cmp	r8, #0
   1e228:	beq	1e234 <argp_parse@@Base+0x3da4>
   1e22c:	mov	r0, r1
   1e230:	bl	1ba4c <argp_parse@@Base+0x15bc>
   1e234:	ldr	r0, [fp, #16]
   1e238:	ldr	r4, [r0, #20]
   1e23c:	mov	r5, r0
   1e240:	mov	r0, r4
   1e244:	bl	11c20 <strlen@plt>
   1e248:	mov	r1, #0
   1e24c:	add	r0, r4, r0
   1e250:	str	r1, [r5, #8]
   1e254:	str	r0, [r5, #20]
   1e258:	ldr	r0, [r5]
   1e25c:	add	r0, r0, #1
   1e260:	str	r0, [r5]
   1e264:	mov	r0, #63	; 0x3f
   1e268:	sub	sp, fp, #28
   1e26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e270:	mov	r0, #0
   1e274:	mov	r6, #0
   1e278:	mov	r7, #0
   1e27c:	str	r0, [sp, #36]	; 0x24
   1e280:	mvn	r0, #0
   1e284:	str	r0, [sp, #24]
   1e288:	mov	r0, #0
   1e28c:	str	r0, [sp, #32]
   1e290:	mov	r0, #0
   1e294:	str	r0, [sp, #4]
   1e298:	mov	r0, #0
   1e29c:	str	r0, [sp, #20]
   1e2a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e2a4:	mov	r0, sl
   1e2a8:	mov	r1, r8
   1e2ac:	bl	11ddc <strncmp@plt>
   1e2b0:	cmp	r0, #0
   1e2b4:	beq	1e2e8 <argp_parse@@Base+0x3e58>
   1e2b8:	ldr	r5, [sp, #28]
   1e2bc:	ldr	r3, [sp, #36]	; 0x24
   1e2c0:	add	r0, r5, r6, lsl #4
   1e2c4:	ldr	sl, [r0, #16]
   1e2c8:	cmp	sl, #0
   1e2cc:	beq	1e424 <argp_parse@@Base+0x3f94>
   1e2d0:	ldr	r0, [fp, #16]
   1e2d4:	add	r3, r3, #16
   1e2d8:	add	r6, r6, #1
   1e2dc:	str	r3, [sp, #36]	; 0x24
   1e2e0:	ldr	r8, [r0, #20]
   1e2e4:	b	1e2a0 <argp_parse@@Base+0x3e10>
   1e2e8:	ldr	r5, [sp, #28]
   1e2ec:	ldr	r3, [sp, #36]	; 0x24
   1e2f0:	cmp	r7, #0
   1e2f4:	add	r0, r5, r3
   1e2f8:	beq	1e390 <argp_parse@@Base+0x3f00>
   1e2fc:	ldr	r1, [r0, #4]
   1e300:	ldr	r2, [r7, #4]
   1e304:	cmp	r2, r1
   1e308:	bne	1e31c <argp_parse@@Base+0x3e8c>
   1e30c:	ldr	r1, [r0, #8]
   1e310:	ldr	r2, [r7, #8]
   1e314:	cmp	r2, r1
   1e318:	beq	1e3ac <argp_parse@@Base+0x3f1c>
   1e31c:	ldr	r0, [sp, #32]
   1e320:	cmp	r0, #0
   1e324:	bne	1e2c0 <argp_parse@@Base+0x3e30>
   1e328:	ldr	r0, [fp, #20]
   1e32c:	cmp	r0, #0
   1e330:	beq	1e3cc <argp_parse@@Base+0x3f3c>
   1e334:	ldr	r8, [sp, #20]
   1e338:	mov	r0, #0
   1e33c:	str	r0, [sp, #32]
   1e340:	cmp	r8, #0
   1e344:	bne	1e3e0 <argp_parse@@Base+0x3f50>
   1e348:	mov	r0, r4
   1e34c:	bl	1ca78 <argp_parse@@Base+0x25e8>
   1e350:	cmp	r0, #0
   1e354:	beq	1e400 <argp_parse@@Base+0x3f70>
   1e358:	mov	r8, r0
   1e35c:	mov	r0, #0
   1e360:	mov	r1, #0
   1e364:	mov	r2, r4
   1e368:	str	r0, [sp, #32]
   1e36c:	mov	r0, r8
   1e370:	bl	11c8c <memset@plt>
   1e374:	ldr	r3, [sp, #36]	; 0x24
   1e378:	ldr	r0, [sp, #24]
   1e37c:	mov	r2, #1
   1e380:	mov	r1, #1
   1e384:	str	r1, [sp, #4]
   1e388:	strb	r2, [r8, r0]
   1e38c:	b	1e3e0 <argp_parse@@Base+0x3f50>
   1e390:	mov	r7, r0
   1e394:	str	r6, [sp, #24]
   1e398:	add	r0, r5, r6, lsl #4
   1e39c:	ldr	sl, [r0, #16]
   1e3a0:	cmp	sl, #0
   1e3a4:	bne	1e2d0 <argp_parse@@Base+0x3e40>
   1e3a8:	b	1e424 <argp_parse@@Base+0x3f94>
   1e3ac:	ldr	r1, [sp, #32]
   1e3b0:	cmp	r1, #0
   1e3b4:	bne	1e2c0 <argp_parse@@Base+0x3e30>
   1e3b8:	ldr	r0, [r0, #12]
   1e3bc:	ldr	r1, [r7, #12]
   1e3c0:	cmp	r1, r0
   1e3c4:	bne	1e328 <argp_parse@@Base+0x3e98>
   1e3c8:	b	1e2c0 <argp_parse@@Base+0x3e30>
   1e3cc:	ldr	r8, [sp, #20]
   1e3d0:	mov	r0, #1
   1e3d4:	str	r0, [sp, #32]
   1e3d8:	cmp	r8, #0
   1e3dc:	beq	1e40c <argp_parse@@Base+0x3f7c>
   1e3e0:	mov	r0, #1
   1e3e4:	str	r8, [sp, #20]
   1e3e8:	strb	r0, [r8, r6]
   1e3ec:	add	r0, r5, r6, lsl #4
   1e3f0:	ldr	sl, [r0, #16]
   1e3f4:	cmp	sl, #0
   1e3f8:	bne	1e2d0 <argp_parse@@Base+0x3e40>
   1e3fc:	b	1e424 <argp_parse@@Base+0x3f94>
   1e400:	ldr	r3, [sp, #36]	; 0x24
   1e404:	mov	r0, #1
   1e408:	str	r0, [sp, #32]
   1e40c:	mov	r0, #0
   1e410:	str	r0, [sp, #20]
   1e414:	add	r0, r5, r6, lsl #4
   1e418:	ldr	sl, [r0, #16]
   1e41c:	cmp	sl, #0
   1e420:	bne	1e2d0 <argp_parse@@Base+0x3e40>
   1e424:	ldr	r6, [sp, #28]
   1e428:	ldr	r1, [sp, #20]
   1e42c:	ldr	r8, [sp, #4]
   1e430:	cmp	r1, #0
   1e434:	ldreq	r0, [sp, #32]
   1e438:	cmpeq	r0, #0
   1e43c:	bne	1e218 <argp_parse@@Base+0x3d88>
   1e440:	cmp	r7, #0
   1e444:	beq	1e4e8 <argp_parse@@Base+0x4058>
   1e448:	ldr	r1, [fp, #16]
   1e44c:	mov	r0, #0
   1e450:	str	r0, [r1, #20]
   1e454:	mov	r2, r1
   1e458:	ldr	r1, [r1]
   1e45c:	add	r0, r1, #1
   1e460:	str	r0, [r2]
   1e464:	ldrb	r3, [r9]
   1e468:	ldr	r2, [r7, #4]
   1e46c:	cmp	r3, #0
   1e470:	beq	1e48c <argp_parse@@Base+0x3ffc>
   1e474:	cmp	r2, #0
   1e478:	beq	1e568 <argp_parse@@Base+0x40d8>
   1e47c:	ldr	r1, [fp, #16]
   1e480:	add	r0, r9, #1
   1e484:	str	r0, [r1, #12]
   1e488:	b	1e4b8 <argp_parse@@Base+0x4028>
   1e48c:	cmp	r2, #1
   1e490:	bne	1e4b8 <argp_parse@@Base+0x4028>
   1e494:	ldr	r2, [sp, #8]
   1e498:	cmp	r0, r2
   1e49c:	bge	1e628 <argp_parse@@Base+0x4198>
   1e4a0:	ldr	r2, [fp, #16]
   1e4a4:	add	r1, r1, #2
   1e4a8:	str	r1, [r2]
   1e4ac:	ldr	r1, [sp, #16]
   1e4b0:	ldr	r0, [r1, r0, lsl #2]
   1e4b4:	str	r0, [r2, #12]
   1e4b8:	ldr	r0, [fp, #8]
   1e4bc:	cmp	r0, #0
   1e4c0:	ldrne	r1, [sp, #24]
   1e4c4:	strne	r1, [r0]
   1e4c8:	ldr	r1, [r7, #8]
   1e4cc:	ldr	r0, [r7, #12]
   1e4d0:	cmp	r1, #0
   1e4d4:	beq	1e650 <argp_parse@@Base+0x41c0>
   1e4d8:	str	r0, [r1]
   1e4dc:	mov	r0, #0
   1e4e0:	sub	sp, fp, #28
   1e4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e4e8:	ldr	r0, [fp, #12]
   1e4ec:	cmp	r0, #0
   1e4f0:	beq	1e534 <argp_parse@@Base+0x40a4>
   1e4f4:	ldr	r0, [fp, #16]
   1e4f8:	ldr	r1, [sp, #16]
   1e4fc:	ldr	r0, [r0]
   1e500:	ldr	r0, [r1, r0, lsl #2]
   1e504:	ldrb	r0, [r0, #1]
   1e508:	cmp	r0, #45	; 0x2d
   1e50c:	beq	1e534 <argp_parse@@Base+0x40a4>
   1e510:	ldr	r0, [fp, #16]
   1e514:	ldr	r0, [r0, #20]
   1e518:	ldrb	r1, [r0]
   1e51c:	ldr	r0, [sp, #12]
   1e520:	bl	11c38 <strchr@plt>
   1e524:	mov	r1, r0
   1e528:	mvn	r0, #0
   1e52c:	cmp	r1, #0
   1e530:	bne	1e650 <argp_parse@@Base+0x41c0>
   1e534:	ldr	r0, [fp, #20]
   1e538:	cmp	r0, #0
   1e53c:	bne	1e750 <argp_parse@@Base+0x42c0>
   1e540:	ldr	r1, [fp, #16]
   1e544:	mov	r0, #0
   1e548:	str	r0, [r1, #20]
   1e54c:	str	r0, [r1, #8]
   1e550:	ldr	r0, [r1]
   1e554:	add	r0, r0, #1
   1e558:	str	r0, [r1]
   1e55c:	mov	r0, #63	; 0x3f
   1e560:	sub	sp, fp, #28
   1e564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e568:	ldr	r0, [fp, #20]
   1e56c:	cmp	r0, #0
   1e570:	bne	1e784 <argp_parse@@Base+0x42f4>
   1e574:	ldr	r0, [r7, #12]
   1e578:	ldr	r1, [fp, #16]
   1e57c:	str	r0, [r1, #8]
   1e580:	mov	r0, #63	; 0x3f
   1e584:	sub	sp, fp, #28
   1e588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e58c:	ldr	r5, [sp, #28]
   1e590:	mov	r0, #0
   1e594:	mov	r6, #0
   1e598:	mov	r7, #0
   1e59c:	str	r0, [sp, #32]
   1e5a0:	mvn	r0, #0
   1e5a4:	str	r0, [sp, #24]
   1e5a8:	b	1e5cc <argp_parse@@Base+0x413c>
   1e5ac:	ldr	r0, [sp, #32]
   1e5b0:	cmp	r0, #0
   1e5b4:	movweq	r0, #1
   1e5b8:	str	r0, [sp, #32]
   1e5bc:	ldr	sl, [r5, #16]!
   1e5c0:	add	r6, r6, #1
   1e5c4:	cmp	sl, #0
   1e5c8:	beq	1e608 <argp_parse@@Base+0x4178>
   1e5cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e5d0:	mov	r0, sl
   1e5d4:	mov	r1, r8
   1e5d8:	bl	11ddc <strncmp@plt>
   1e5dc:	cmp	r0, #0
   1e5e0:	bne	1e5bc <argp_parse@@Base+0x412c>
   1e5e4:	cmp	r7, #0
   1e5e8:	bne	1e5ac <argp_parse@@Base+0x411c>
   1e5ec:	mov	r7, r5
   1e5f0:	mov	r0, r6
   1e5f4:	str	r6, [sp, #24]
   1e5f8:	ldr	sl, [r5, #16]!
   1e5fc:	add	r6, r6, #1
   1e600:	cmp	sl, #0
   1e604:	bne	1e5cc <argp_parse@@Base+0x413c>
   1e608:	ldr	r6, [sp, #28]
   1e60c:	mov	r1, #0
   1e610:	mov	r8, #0
   1e614:	cmp	r1, #0
   1e618:	ldreq	r0, [sp, #32]
   1e61c:	cmpeq	r0, #0
   1e620:	bne	1e218 <argp_parse@@Base+0x3d88>
   1e624:	b	1e440 <argp_parse@@Base+0x3fb0>
   1e628:	ldr	r0, [fp, #20]
   1e62c:	cmp	r0, #0
   1e630:	bne	1e7b4 <argp_parse@@Base+0x4324>
   1e634:	ldr	r0, [r7, #12]
   1e638:	ldr	r1, [fp, #16]
   1e63c:	str	r0, [r1, #8]
   1e640:	ldr	r0, [sp, #12]
   1e644:	ldrb	r0, [r0]
   1e648:	cmp	r0, #58	; 0x3a
   1e64c:	movwne	r0, #63	; 0x3f
   1e650:	sub	sp, fp, #28
   1e654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e658:	movw	sl, #5568	; 0x15c0
   1e65c:	mov	r9, r1
   1e660:	ldr	r1, [sp, #32]
   1e664:	movt	sl, #3
   1e668:	ldr	r0, [sl]
   1e66c:	cmp	r1, #0
   1e670:	beq	1e6a8 <argp_parse@@Base+0x4218>
   1e674:	ldr	r1, [sp, #16]
   1e678:	ldr	r3, [fp, #24]
   1e67c:	ldr	r2, [r1]
   1e680:	ldr	r1, [fp, #16]
   1e684:	ldr	r1, [r1, #20]
   1e688:	str	r1, [sp]
   1e68c:	movw	r1, #588	; 0x24c
   1e690:	movt	r1, #2
   1e694:	bl	11c44 <fprintf@plt>
   1e698:	mov	r1, r9
   1e69c:	cmp	r8, #0
   1e6a0:	bne	1e22c <argp_parse@@Base+0x3d9c>
   1e6a4:	b	1e234 <argp_parse@@Base+0x3da4>
   1e6a8:	bl	11d58 <flockfile@plt>
   1e6ac:	ldr	r1, [fp, #16]
   1e6b0:	ldr	r0, [sp, #16]
   1e6b4:	ldr	r5, [fp, #24]
   1e6b8:	ldr	r1, [r1, #20]
   1e6bc:	ldr	r2, [r0]
   1e6c0:	ldr	r0, [sl]
   1e6c4:	mov	r3, r5
   1e6c8:	str	r1, [sp]
   1e6cc:	movw	r1, #620	; 0x26c
   1e6d0:	movt	r1, #2
   1e6d4:	bl	11c44 <fprintf@plt>
   1e6d8:	cmp	r4, #0
   1e6dc:	beq	1e72c <argp_parse@@Base+0x429c>
   1e6e0:	mov	r7, r9
   1e6e4:	ldrb	r0, [r7]
   1e6e8:	cmp	r0, #0
   1e6ec:	bne	1e704 <argp_parse@@Base+0x4274>
   1e6f0:	add	r6, r6, #16
   1e6f4:	add	r7, r7, #1
   1e6f8:	subs	r4, r4, #1
   1e6fc:	bne	1e6e4 <argp_parse@@Base+0x4254>
   1e700:	b	1e72c <argp_parse@@Base+0x429c>
   1e704:	ldr	r3, [r6]
   1e708:	ldr	r0, [sl]
   1e70c:	movw	r1, #667	; 0x29b
   1e710:	mov	r2, r5
   1e714:	movt	r1, #2
   1e718:	bl	11c44 <fprintf@plt>
   1e71c:	add	r6, r6, #16
   1e720:	add	r7, r7, #1
   1e724:	subs	r4, r4, #1
   1e728:	bne	1e6e4 <argp_parse@@Base+0x4254>
   1e72c:	ldr	r1, [sl]
   1e730:	mov	r0, #10
   1e734:	bl	11d40 <fputc@plt>
   1e738:	ldr	r0, [sl]
   1e73c:	bl	11b18 <funlockfile@plt>
   1e740:	mov	r1, r9
   1e744:	cmp	r8, #0
   1e748:	bne	1e22c <argp_parse@@Base+0x3d9c>
   1e74c:	b	1e234 <argp_parse@@Base+0x3da4>
   1e750:	ldr	r1, [fp, #16]
   1e754:	ldr	r0, [sp, #16]
   1e758:	ldr	r3, [fp, #24]
   1e75c:	ldr	r2, [r0]
   1e760:	movw	r0, #5568	; 0x15c0
   1e764:	ldr	r1, [r1, #20]
   1e768:	movt	r0, #3
   1e76c:	ldr	r0, [r0]
   1e770:	str	r1, [sp]
   1e774:	movw	r1, #675	; 0x2a3
   1e778:	movt	r1, #2
   1e77c:	bl	11c44 <fprintf@plt>
   1e780:	b	1e540 <argp_parse@@Base+0x40b0>
   1e784:	ldr	r0, [sp, #16]
   1e788:	ldr	r1, [r7]
   1e78c:	ldr	r3, [fp, #24]
   1e790:	ldr	r2, [r0]
   1e794:	movw	r0, #5568	; 0x15c0
   1e798:	str	r1, [sp]
   1e79c:	movw	r1, #707	; 0x2c3
   1e7a0:	movt	r0, #3
   1e7a4:	movt	r1, #2
   1e7a8:	ldr	r0, [r0]
   1e7ac:	bl	11c44 <fprintf@plt>
   1e7b0:	b	1e574 <argp_parse@@Base+0x40e4>
   1e7b4:	ldr	r0, [sp, #16]
   1e7b8:	ldr	r1, [r7]
   1e7bc:	ldr	r3, [fp, #24]
   1e7c0:	ldr	r2, [r0]
   1e7c4:	movw	r0, #5568	; 0x15c0
   1e7c8:	str	r1, [sp]
   1e7cc:	movw	r1, #752	; 0x2f0
   1e7d0:	movt	r0, #3
   1e7d4:	movt	r1, #2
   1e7d8:	ldr	r0, [r0]
   1e7dc:	bl	11c44 <fprintf@plt>
   1e7e0:	b	1e634 <argp_parse@@Base+0x41a4>
   1e7e4:	push	{r4, r5, r6, r7, fp, lr}
   1e7e8:	add	fp, sp, #16
   1e7ec:	sub	sp, sp, #16
   1e7f0:	movw	r6, #5544	; 0x15a8
   1e7f4:	movw	r7, #6680	; 0x1a18
   1e7f8:	movt	r6, #3
   1e7fc:	movt	r7, #3
   1e800:	ldm	r6, {r4, r5}
   1e804:	str	r7, [sp, #8]
   1e808:	stm	r7, {r4, r5}
   1e80c:	ldr	r5, [fp, #16]
   1e810:	str	r5, [sp, #12]
   1e814:	ldr	r5, [fp, #12]
   1e818:	str	r5, [sp, #4]
   1e81c:	ldr	r5, [fp, #8]
   1e820:	str	r5, [sp]
   1e824:	bl	1d2c4 <argp_parse@@Base+0x2e34>
   1e828:	ldr	r1, [r7]
   1e82c:	ldr	r2, [r7, #8]
   1e830:	ldr	r3, [r7, #12]
   1e834:	str	r1, [r6]
   1e838:	movw	r1, #8340	; 0x2094
   1e83c:	str	r2, [r6, #8]
   1e840:	movt	r1, #3
   1e844:	str	r3, [r1]
   1e848:	sub	sp, fp, #16
   1e84c:	pop	{r4, r5, r6, r7, fp, pc}
   1e850:	push	{r4, r5, r6, sl, fp, lr}
   1e854:	add	fp, sp, #16
   1e858:	sub	sp, sp, #16
   1e85c:	movw	r5, #5544	; 0x15a8
   1e860:	movw	r6, #6680	; 0x1a18
   1e864:	movt	r5, #3
   1e868:	movt	r6, #3
   1e86c:	ldm	r5, {r3, r4}
   1e870:	stm	r6, {r3, r4}
   1e874:	mov	r4, #0
   1e878:	mov	r3, #1
   1e87c:	str	r4, [sp]
   1e880:	stmib	sp, {r4, r6}
   1e884:	str	r3, [sp, #12]
   1e888:	mov	r3, #0
   1e88c:	bl	1d2c4 <argp_parse@@Base+0x2e34>
   1e890:	ldr	r1, [r6]
   1e894:	ldr	r2, [r6, #8]
   1e898:	ldr	r3, [r6, #12]
   1e89c:	str	r1, [r5]
   1e8a0:	movw	r1, #8340	; 0x2094
   1e8a4:	str	r2, [r5, #8]
   1e8a8:	movt	r1, #3
   1e8ac:	str	r3, [r1]
   1e8b0:	sub	sp, fp, #16
   1e8b4:	pop	{r4, r5, r6, sl, fp, pc}
   1e8b8:	cmp	r2, #0
   1e8bc:	beq	1e8ec <argp_parse@@Base+0x445c>
   1e8c0:	mvn	r3, #0
   1e8c4:	udiv	r3, r3, r2
   1e8c8:	cmp	r3, r1
   1e8cc:	bcs	1e8ec <argp_parse@@Base+0x445c>
   1e8d0:	push	{fp, lr}
   1e8d4:	mov	fp, sp
   1e8d8:	bl	11c50 <__errno_location@plt>
   1e8dc:	mov	r1, #12
   1e8e0:	str	r1, [r0]
   1e8e4:	mov	r0, #0
   1e8e8:	pop	{fp, pc}
   1e8ec:	mul	r1, r2, r1
   1e8f0:	b	1caa8 <argp_parse@@Base+0x2618>
   1e8f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e8f8:	mov	r7, r0
   1e8fc:	ldr	r6, [pc, #72]	; 1e94c <argp_parse@@Base+0x44bc>
   1e900:	ldr	r5, [pc, #72]	; 1e950 <argp_parse@@Base+0x44c0>
   1e904:	add	r6, pc, r6
   1e908:	add	r5, pc, r5
   1e90c:	sub	r6, r6, r5
   1e910:	mov	r8, r1
   1e914:	mov	r9, r2
   1e918:	bl	11954 <calloc@plt-0x20>
   1e91c:	asrs	r6, r6, #2
   1e920:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e924:	mov	r4, #0
   1e928:	add	r4, r4, #1
   1e92c:	ldr	r3, [r5], #4
   1e930:	mov	r2, r9
   1e934:	mov	r1, r8
   1e938:	mov	r0, r7
   1e93c:	blx	r3
   1e940:	cmp	r6, r4
   1e944:	bne	1e928 <argp_parse@@Base+0x4498>
   1e948:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e94c:	strdeq	r2, [r1], -r8
   1e950:	strdeq	r2, [r1], -r0
   1e954:	bx	lr

Disassembly of section .fini:

0001e958 <.fini>:
   1e958:	push	{r3, lr}
   1e95c:	pop	{r3, pc}
