
../repos/takev-yyast-2f13a16/yyast/.libs/libyyast.so.1.0.0:     file format elf32-littlearm


Disassembly of section .init:

00000c78 <_init>:
 c78:	push	{r3, lr}
 c7c:	bl	e90 <call_weak_fn>
 c80:	pop	{r3, pc}

Disassembly of section .plt:

00000c84 <.plt>:
 c84:	push	{lr}		; (str lr, [sp, #-4]!)
 c88:	ldr	lr, [pc, #4]	; c94 <.plt+0x10>
 c8c:	add	lr, pc, lr
 c90:	ldr	pc, [lr, #8]!
 c94:	.word	0x0001236c

00000c98 <calloc@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #876]!	; 0x36c

00000ca4 <ya_reposition@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #868]!	; 0x364

00000cb0 <ya_node_save@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #860]!	; 0x35c

00000cbc <vasprintf@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #852]!	; 0x354

00000cc8 <strcmp@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #844]!	; 0x34c

00000cd4 <__cxa_finalize@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #836]!	; 0x344

00000ce0 <strtol@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #828]!	; 0x33c

00000cec <fopen@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #820]!	; 0x334

00000cf8 <free@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #812]!	; 0x32c

00000d04 <strndup@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #804]!	; 0x324

00000d10 <memcpy@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #796]!	; 0x31c

00000d1c <ya_null@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #788]!	; 0x314

00000d28 <yyparse@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #780]!	; 0x30c

00000d34 <strtold@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #772]!	; 0x304

00000d40 <strdup@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #764]!	; 0x2fc

00000d4c <perror@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #756]!	; 0x2f4

00000d58 <ya_get_filenames@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #748]!	; 0x2ec

00000d64 <fwrite@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #740]!	; 0x2e4

00000d70 <ya_branch@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #732]!	; 0x2dc

00000d7c <__gmon_start__@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #724]!	; 0x2d4

00000d88 <getopt_long@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #716]!	; 0x2cc

00000d94 <exit@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #708]!	; 0x2c4

00000da0 <strlen@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #73728	; 0x12000
 da8:	ldr	pc, [ip, #700]!	; 0x2bc

00000dac <fprintf@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #73728	; 0x12000
 db4:	ldr	pc, [ip, #692]!	; 0x2b4

00000db8 <__errno_location@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #73728	; 0x12000
 dc0:	ldr	pc, [ip, #684]!	; 0x2ac

00000dc4 <ya_integer@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #73728	; 0x12000
 dcc:	ldr	pc, [ip, #676]!	; 0x2a4

00000dd0 <memset@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #73728	; 0x12000
 dd8:	ldr	pc, [ip, #668]!	; 0x29c

00000ddc <ya_list@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #73728	; 0x12000
 de4:	ldr	pc, [ip, #660]!	; 0x294

00000de8 <asprintf@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #73728	; 0x12000
 df0:	ldr	pc, [ip, #652]!	; 0x28c

00000df4 <ya_get_file_nr@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #73728	; 0x12000
 dfc:	ldr	pc, [ip, #644]!	; 0x284

00000e00 <fclose@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #73728	; 0x12000
 e08:	ldr	pc, [ip, #636]!	; 0x27c

00000e0c <strrchr@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #73728	; 0x12000
 e14:	ldr	pc, [ip, #628]!	; 0x274

00000e18 <ya_error@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #73728	; 0x12000
 e20:	ldr	pc, [ip, #620]!	; 0x26c

00000e24 <ya_literal@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #73728	; 0x12000
 e2c:	ldr	pc, [ip, #612]!	; 0x264

00000e30 <fputc@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #73728	; 0x12000
 e38:	ldr	pc, [ip, #604]!	; 0x25c

00000e3c <ya_generic_nodev@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #73728	; 0x12000
 e44:	ldr	pc, [ip, #596]!	; 0x254

00000e48 <ya_new_extension@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #73728	; 0x12000
 e50:	ldr	pc, [ip, #588]!	; 0x24c

00000e54 <ya_clear_position@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #73728	; 0x12000
 e5c:	ldr	pc, [ip, #580]!	; 0x244

00000e60 <ya_usage@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #73728	; 0x12000
 e68:	ldr	pc, [ip, #572]!	; 0x23c

00000e6c <ya_text@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #73728	; 0x12000
 e74:	ldr	pc, [ip, #564]!	; 0x234

00000e78 <abort@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #73728	; 0x12000
 e80:	ldr	pc, [ip, #556]!	; 0x22c

00000e84 <ya_parse_options@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #73728	; 0x12000
 e8c:	ldr	pc, [ip, #548]!	; 0x224

Disassembly of section .text:

00000e90 <call_weak_fn>:
     e90:	ldr	r3, [pc, #20]	; eac <call_weak_fn+0x1c>
     e94:	ldr	r2, [pc, #20]	; eb0 <call_weak_fn+0x20>
     e98:	add	r3, pc, r3
     e9c:	ldr	r2, [r3, r2]
     ea0:	cmp	r2, #0
     ea4:	bxeq	lr
     ea8:	b	d7c <__gmon_start__@plt>
     eac:	.word	0x00012160
     eb0:	.word	0x000000d0

00000eb4 <deregister_tm_clones>:
     eb4:	ldr	r0, [pc, #44]	; ee8 <deregister_tm_clones+0x34>
     eb8:	ldr	r3, [pc, #44]	; eec <deregister_tm_clones+0x38>
     ebc:	add	r0, pc, r0
     ec0:	add	r3, pc, r3
     ec4:	cmp	r3, r0
     ec8:	ldr	r3, [pc, #32]	; ef0 <deregister_tm_clones+0x3c>
     ecc:	add	r3, pc, r3
     ed0:	bxeq	lr
     ed4:	ldr	r2, [pc, #24]	; ef4 <deregister_tm_clones+0x40>
     ed8:	ldr	r3, [r3, r2]
     edc:	cmp	r3, #0
     ee0:	bxeq	lr
     ee4:	bx	r3
     ee8:	.word	0x000122a4
     eec:	.word	0x000122a0
     ef0:	.word	0x0001212c
     ef4:	.word	0x000000b8

00000ef8 <register_tm_clones>:
     ef8:	ldr	r0, [pc, #56]	; f38 <register_tm_clones+0x40>
     efc:	ldr	r3, [pc, #56]	; f3c <register_tm_clones+0x44>
     f00:	add	r0, pc, r0
     f04:	add	r3, pc, r3
     f08:	sub	r1, r3, r0
     f0c:	ldr	r3, [pc, #44]	; f40 <register_tm_clones+0x48>
     f10:	asr	r1, r1, #2
     f14:	add	r3, pc, r3
     f18:	add	r1, r1, r1, lsr #31
     f1c:	asrs	r1, r1, #1
     f20:	bxeq	lr
     f24:	ldr	r2, [pc, #24]	; f44 <register_tm_clones+0x4c>
     f28:	ldr	r3, [r3, r2]
     f2c:	cmp	r3, #0
     f30:	bxeq	lr
     f34:	bx	r3
     f38:	.word	0x00012260
     f3c:	.word	0x0001225c
     f40:	.word	0x000120e4
     f44:	.word	0x000000f4

00000f48 <__do_global_dtors_aux>:
     f48:	ldr	r3, [pc, #76]	; f9c <__do_global_dtors_aux+0x54>
     f4c:	ldr	r2, [pc, #76]	; fa0 <__do_global_dtors_aux+0x58>
     f50:	add	r3, pc, r3
     f54:	add	r2, pc, r2
     f58:	ldrb	r3, [r3]
     f5c:	cmp	r3, #0
     f60:	bxne	lr
     f64:	ldr	r3, [pc, #56]	; fa4 <__do_global_dtors_aux+0x5c>
     f68:	push	{r4, lr}
     f6c:	ldr	r3, [r2, r3]
     f70:	cmp	r3, #0
     f74:	beq	f84 <__do_global_dtors_aux+0x3c>
     f78:	ldr	r3, [pc, #40]	; fa8 <__do_global_dtors_aux+0x60>
     f7c:	ldr	r0, [pc, r3]
     f80:	bl	cd4 <__cxa_finalize@plt>
     f84:	bl	eb4 <deregister_tm_clones>
     f88:	ldr	r3, [pc, #28]	; fac <__do_global_dtors_aux+0x64>
     f8c:	mov	r2, #1
     f90:	add	r3, pc, r3
     f94:	strb	r2, [r3]
     f98:	pop	{r4, pc}
     f9c:	.word	0x00012210
     fa0:	.word	0x000120a4
     fa4:	.word	0x000000b4
     fa8:	.word	0x0001217c
     fac:	.word	0x000121d0

00000fb0 <frame_dummy>:
     fb0:	b	ef8 <register_tm_clones>

00000fb4 <ya_string_escape>:
     fb4:	cmp	r1, #0
     fb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
     fbc:	strd	r6, [sp, #8]
     fc0:	strd	r8, [sp, #16]
     fc4:	strd	sl, [sp, #24]
     fc8:	str	lr, [sp, #32]
     fcc:	sub	sp, sp, #44	; 0x2c
     fd0:	beq	14c8 <ya_string_escape+0x514>
     fd4:	movw	r3, #65535	; 0xffff
     fd8:	movt	r3, #31
     fdc:	mov	r7, #0
     fe0:	add	r1, r0, r1
     fe4:	mov	r8, r2
     fe8:	mov	fp, r0
     fec:	str	r3, [sp, #12]
     ff0:	sub	r5, r1, #1
     ff4:	mov	r6, r7
     ff8:	mov	sl, r7
     ffc:	mov	r4, r7
    1000:	sub	r9, r0, #1
    1004:	b	10a4 <ya_string_escape+0xf0>
    1008:	sub	r2, r3, #48	; 0x30
    100c:	uxtb	r1, r2
    1010:	cmp	r1, #9
    1014:	orrls	r7, r2, r7, lsl #4
    1018:	bls	1030 <ya_string_escape+0x7c>
    101c:	sub	r2, r3, #97	; 0x61
    1020:	cmp	r2, #5
    1024:	bhi	113c <ya_string_escape+0x188>
    1028:	sub	r3, r3, #87	; 0x57
    102c:	orr	r7, r3, r7, lsl #4
    1030:	subs	r6, r6, #1
    1034:	bne	109c <ya_string_escape+0xe8>
    1038:	add	r1, fp, r4
    103c:	cmp	r7, #127	; 0x7f
    1040:	add	r3, r4, #1
    1044:	str	r1, [sp]
    1048:	uxtb	r1, r7
    104c:	add	r2, fp, r3
    1050:	strble	r1, [fp, r4]
    1054:	ble	1094 <ya_string_escape+0xe0>
    1058:	and	lr, r7, #63	; 0x3f
    105c:	add	r3, r4, #2
    1060:	sbfx	r0, r7, #6, #8
    1064:	orr	lr, lr, #128	; 0x80
    1068:	add	ip, fp, r3
    106c:	cmp	r7, #2048	; 0x800
    1070:	str	lr, [sp, #4]
    1074:	str	ip, [sp, #8]
    1078:	bge	12e8 <ya_string_escape+0x334>
    107c:	mvn	r0, r0, lsl #26
    1080:	ldr	r4, [sp]
    1084:	mvn	r0, r0, lsr #26
    1088:	strb	r0, [r4]
    108c:	strb	lr, [r2]
    1090:	mov	r2, ip
    1094:	add	r4, r3, #1
    1098:	strb	r1, [r2]
    109c:	cmp	r9, r5
    10a0:	beq	10f0 <ya_string_escape+0x13c>
    10a4:	cmp	r6, #0
    10a8:	ldrb	r3, [r9, #1]!
    10ac:	bne	1008 <ya_string_escape+0x54>
    10b0:	cmp	sl, #0
    10b4:	beq	1124 <ya_string_escape+0x170>
    10b8:	cmp	r8, #1
    10bc:	beq	12cc <ya_string_escape+0x318>
    10c0:	cmp	r8, #2
    10c4:	bne	1160 <ya_string_escape+0x1ac>
    10c8:	cmp	r3, #47	; 0x2f
    10cc:	add	r2, r4, #1
    10d0:	beq	12d8 <ya_string_escape+0x324>
    10d4:	mov	r1, #92	; 0x5c
    10d8:	cmp	r9, r5
    10dc:	mov	sl, r6
    10e0:	strb	r1, [fp, r4]
    10e4:	add	r4, r4, #2
    10e8:	strb	r3, [fp, r2]
    10ec:	bne	10a4 <ya_string_escape+0xf0>
    10f0:	cmp	sl, #0
    10f4:	beq	1104 <ya_string_escape+0x150>
    10f8:	mov	r3, #92	; 0x5c
    10fc:	strb	r3, [fp, r4]
    1100:	add	r4, r4, #1
    1104:	mov	r0, r4
    1108:	add	sp, sp, #44	; 0x2c
    110c:	ldrd	r4, [sp]
    1110:	ldrd	r6, [sp, #8]
    1114:	ldrd	r8, [sp, #16]
    1118:	ldrd	sl, [sp, #24]
    111c:	add	sp, sp, #32
    1120:	pop	{pc}		; (ldr pc, [sp], #4)
    1124:	cmp	r3, #92	; 0x5c
    1128:	beq	1154 <ya_string_escape+0x1a0>
    112c:	mov	r6, sl
    1130:	strb	r3, [fp, r4]
    1134:	add	r4, r4, #1
    1138:	b	109c <ya_string_escape+0xe8>
    113c:	sub	r2, r3, #65	; 0x41
    1140:	cmp	r2, #5
    1144:	bhi	13c0 <ya_string_escape+0x40c>
    1148:	sub	r3, r3, #55	; 0x37
    114c:	orr	r7, r3, r7, lsl #4
    1150:	b	1030 <ya_string_escape+0x7c>
    1154:	mov	r6, sl
    1158:	mov	sl, #1
    115c:	b	109c <ya_string_escape+0xe8>
    1160:	sub	r2, r3, #34	; 0x22
    1164:	cmp	r2, #86	; 0x56
    1168:	addls	pc, pc, r2, lsl #2
    116c:	b	14ac <ya_string_escape+0x4f8>
    1170:	b	144c <ya_string_escape+0x498>
    1174:	b	14ac <ya_string_escape+0x4f8>
    1178:	b	14ac <ya_string_escape+0x4f8>
    117c:	b	14ac <ya_string_escape+0x4f8>
    1180:	b	14ac <ya_string_escape+0x4f8>
    1184:	b	14ac <ya_string_escape+0x4f8>
    1188:	b	14ac <ya_string_escape+0x4f8>
    118c:	b	14ac <ya_string_escape+0x4f8>
    1190:	b	14ac <ya_string_escape+0x4f8>
    1194:	b	14ac <ya_string_escape+0x4f8>
    1198:	b	14ac <ya_string_escape+0x4f8>
    119c:	b	14ac <ya_string_escape+0x4f8>
    11a0:	b	14ac <ya_string_escape+0x4f8>
    11a4:	b	1460 <ya_string_escape+0x4ac>
    11a8:	b	14ac <ya_string_escape+0x4f8>
    11ac:	b	14ac <ya_string_escape+0x4f8>
    11b0:	b	14ac <ya_string_escape+0x4f8>
    11b4:	b	14ac <ya_string_escape+0x4f8>
    11b8:	b	14ac <ya_string_escape+0x4f8>
    11bc:	b	14ac <ya_string_escape+0x4f8>
    11c0:	b	14ac <ya_string_escape+0x4f8>
    11c4:	b	14ac <ya_string_escape+0x4f8>
    11c8:	b	14ac <ya_string_escape+0x4f8>
    11cc:	b	14ac <ya_string_escape+0x4f8>
    11d0:	b	14ac <ya_string_escape+0x4f8>
    11d4:	b	14ac <ya_string_escape+0x4f8>
    11d8:	b	14ac <ya_string_escape+0x4f8>
    11dc:	b	14ac <ya_string_escape+0x4f8>
    11e0:	b	14ac <ya_string_escape+0x4f8>
    11e4:	b	14ac <ya_string_escape+0x4f8>
    11e8:	b	14ac <ya_string_escape+0x4f8>
    11ec:	b	14ac <ya_string_escape+0x4f8>
    11f0:	b	14ac <ya_string_escape+0x4f8>
    11f4:	b	14ac <ya_string_escape+0x4f8>
    11f8:	b	14ac <ya_string_escape+0x4f8>
    11fc:	b	14ac <ya_string_escape+0x4f8>
    1200:	b	14ac <ya_string_escape+0x4f8>
    1204:	b	14ac <ya_string_escape+0x4f8>
    1208:	b	14ac <ya_string_escape+0x4f8>
    120c:	b	14ac <ya_string_escape+0x4f8>
    1210:	b	14ac <ya_string_escape+0x4f8>
    1214:	b	14ac <ya_string_escape+0x4f8>
    1218:	b	14ac <ya_string_escape+0x4f8>
    121c:	b	14ac <ya_string_escape+0x4f8>
    1220:	b	14ac <ya_string_escape+0x4f8>
    1224:	b	14ac <ya_string_escape+0x4f8>
    1228:	b	14ac <ya_string_escape+0x4f8>
    122c:	b	14ac <ya_string_escape+0x4f8>
    1230:	b	14ac <ya_string_escape+0x4f8>
    1234:	b	14ac <ya_string_escape+0x4f8>
    1238:	b	14ac <ya_string_escape+0x4f8>
    123c:	b	1474 <ya_string_escape+0x4c0>
    1240:	b	14ac <ya_string_escape+0x4f8>
    1244:	b	14ac <ya_string_escape+0x4f8>
    1248:	b	14ac <ya_string_escape+0x4f8>
    124c:	b	14ac <ya_string_escape+0x4f8>
    1250:	b	14ac <ya_string_escape+0x4f8>
    1254:	b	14ac <ya_string_escape+0x4f8>
    1258:	b	1484 <ya_string_escape+0x4d0>
    125c:	b	14ac <ya_string_escape+0x4f8>
    1260:	b	14ac <ya_string_escape+0x4f8>
    1264:	b	14ac <ya_string_escape+0x4f8>
    1268:	b	14ac <ya_string_escape+0x4f8>
    126c:	b	14ac <ya_string_escape+0x4f8>
    1270:	b	14ac <ya_string_escape+0x4f8>
    1274:	b	14ac <ya_string_escape+0x4f8>
    1278:	b	14ac <ya_string_escape+0x4f8>
    127c:	b	14ac <ya_string_escape+0x4f8>
    1280:	b	14ac <ya_string_escape+0x4f8>
    1284:	b	14ac <ya_string_escape+0x4f8>
    1288:	b	14ac <ya_string_escape+0x4f8>
    128c:	b	14ac <ya_string_escape+0x4f8>
    1290:	b	14ac <ya_string_escape+0x4f8>
    1294:	b	14ac <ya_string_escape+0x4f8>
    1298:	b	14ac <ya_string_escape+0x4f8>
    129c:	b	14ac <ya_string_escape+0x4f8>
    12a0:	b	1498 <ya_string_escape+0x4e4>
    12a4:	b	14ac <ya_string_escape+0x4f8>
    12a8:	b	14ac <ya_string_escape+0x4f8>
    12ac:	b	14ac <ya_string_escape+0x4f8>
    12b0:	b	1424 <ya_string_escape+0x470>
    12b4:	b	14ac <ya_string_escape+0x4f8>
    12b8:	b	1438 <ya_string_escape+0x484>
    12bc:	b	1414 <ya_string_escape+0x460>
    12c0:	b	14ac <ya_string_escape+0x4f8>
    12c4:	b	14ac <ya_string_escape+0x4f8>
    12c8:	b	1404 <ya_string_escape+0x450>
    12cc:	cmp	r3, #34	; 0x22
    12d0:	add	r2, r4, #1
    12d4:	bne	10d4 <ya_string_escape+0x120>
    12d8:	mov	sl, r6
    12dc:	strb	r3, [fp, r4]
    12e0:	mov	r4, r2
    12e4:	b	109c <ya_string_escape+0xe8>
    12e8:	and	r0, r0, #63	; 0x3f
    12ec:	add	r3, r4, #3
    12f0:	sbfx	lr, r7, #12, #8
    12f4:	orr	r0, r0, #128	; 0x80
    12f8:	add	ip, fp, r3
    12fc:	cmp	r7, #65536	; 0x10000
    1300:	str	r0, [sp, #16]
    1304:	str	ip, [sp, #20]
    1308:	bge	1334 <ya_string_escape+0x380>
    130c:	mvn	lr, lr, lsl #27
    1310:	ldr	r4, [sp]
    1314:	mvn	lr, lr, lsr #27
    1318:	strb	lr, [r4]
    131c:	strb	r0, [r2]
    1320:	mov	r2, ip
    1324:	ldr	ip, [sp, #4]
    1328:	ldr	r0, [sp, #8]
    132c:	strb	ip, [r0]
    1330:	b	1094 <ya_string_escape+0xe0>
    1334:	ldr	r3, [sp, #12]
    1338:	and	lr, lr, #63	; 0x3f
    133c:	sbfx	r0, r7, #18, #8
    1340:	orr	ip, lr, #128	; 0x80
    1344:	str	ip, [sp, #24]
    1348:	cmp	r7, r3
    134c:	add	r3, r4, #4
    1350:	add	lr, fp, r3
    1354:	str	lr, [sp, #28]
    1358:	ble	13d0 <ya_string_escape+0x41c>
    135c:	and	r0, r0, #63	; 0x3f
    1360:	add	r3, r4, #5
    1364:	asr	lr, r7, #24
    1368:	orr	r0, r0, #128	; 0x80
    136c:	add	ip, fp, r3
    1370:	cmn	r7, #-67108863	; 0xfc000001
    1374:	str	r0, [sp, #32]
    1378:	str	ip, [sp, #36]	; 0x24
    137c:	bgt	14d0 <ya_string_escape+0x51c>
    1380:	mvn	lr, lr, lsl #29
    1384:	ldr	r4, [sp]
    1388:	mvn	lr, lr, lsr #29
    138c:	strb	lr, [r4]
    1390:	strb	r0, [r2]
    1394:	mov	r2, ip
    1398:	ldr	r0, [sp, #8]
    139c:	ldr	ip, [sp, #24]
    13a0:	strb	ip, [r0]
    13a4:	ldr	ip, [sp, #16]
    13a8:	ldr	r0, [sp, #20]
    13ac:	strb	ip, [r0]
    13b0:	ldr	ip, [sp, #4]
    13b4:	ldr	r0, [sp, #28]
    13b8:	strb	ip, [r0]
    13bc:	b	1094 <ya_string_escape+0xe0>
    13c0:	ldr	r0, [pc, #356]	; 152c <ya_string_escape+0x578>
    13c4:	add	r0, pc, r0
    13c8:	bl	e18 <ya_error@plt>
    13cc:	b	1030 <ya_string_escape+0x7c>
    13d0:	mvn	r0, r0, lsl #28
    13d4:	ldr	r4, [sp]
    13d8:	mvn	r0, r0, lsr #28
    13dc:	strb	r0, [r4]
    13e0:	strb	ip, [r2]
    13e4:	mov	r2, lr
    13e8:	ldr	r0, [sp, #8]
    13ec:	ldr	ip, [sp, #16]
    13f0:	strb	ip, [r0]
    13f4:	ldr	ip, [sp, #4]
    13f8:	ldr	r0, [sp, #20]
    13fc:	strb	ip, [r0]
    1400:	b	1094 <ya_string_escape+0xe0>
    1404:	mov	r7, #0
    1408:	mov	r6, #2
    140c:	mov	sl, r7
    1410:	b	109c <ya_string_escape+0xe8>
    1414:	mov	r7, #0
    1418:	mov	r6, #4
    141c:	mov	sl, r7
    1420:	b	109c <ya_string_escape+0xe8>
    1424:	mov	r3, #13
    1428:	mov	sl, #0
    142c:	strb	r3, [fp, r4]
    1430:	add	r4, r4, #1
    1434:	b	109c <ya_string_escape+0xe8>
    1438:	mov	r3, #9
    143c:	mov	sl, #0
    1440:	strb	r3, [fp, r4]
    1444:	add	r4, r4, #1
    1448:	b	109c <ya_string_escape+0xe8>
    144c:	mov	r3, #34	; 0x22
    1450:	mov	sl, #0
    1454:	strb	r3, [fp, r4]
    1458:	add	r4, r4, #1
    145c:	b	109c <ya_string_escape+0xe8>
    1460:	mov	r3, #47	; 0x2f
    1464:	mov	sl, #0
    1468:	strb	r3, [fp, r4]
    146c:	add	r4, r4, #1
    1470:	b	109c <ya_string_escape+0xe8>
    1474:	mov	r7, #0
    1478:	mov	r6, #8
    147c:	mov	sl, r7
    1480:	b	109c <ya_string_escape+0xe8>
    1484:	mov	r3, #92	; 0x5c
    1488:	mov	sl, #0
    148c:	strb	r3, [fp, r4]
    1490:	add	r4, r4, #1
    1494:	b	109c <ya_string_escape+0xe8>
    1498:	mov	r3, #10
    149c:	mov	sl, #0
    14a0:	strb	r3, [fp, r4]
    14a4:	add	r4, r4, #1
    14a8:	b	109c <ya_string_escape+0xe8>
    14ac:	add	r2, r4, #1
    14b0:	mov	r1, #92	; 0x5c
    14b4:	mov	sl, #0
    14b8:	strb	r1, [fp, r4]
    14bc:	add	r4, r4, #2
    14c0:	strb	r3, [fp, r2]
    14c4:	b	109c <ya_string_escape+0xe8>
    14c8:	mov	r4, r1
    14cc:	b	1104 <ya_string_escape+0x150>
    14d0:	ldr	ip, [sp]
    14d4:	mvn	r0, #3
    14d8:	and	r3, lr, #63	; 0x3f
    14dc:	orr	r0, r0, r7, asr #30
    14e0:	mvn	lr, #127	; 0x7f
    14e4:	orr	lr, r3, lr
    14e8:	add	r3, r4, #6
    14ec:	strb	r0, [ip]
    14f0:	ldr	r0, [sp, #8]
    14f4:	strb	lr, [r2]
    14f8:	add	r2, fp, r3
    14fc:	ldr	ip, [sp, #32]
    1500:	strb	ip, [r0]
    1504:	ldr	r0, [sp, #20]
    1508:	ldr	ip, [sp, #24]
    150c:	strb	ip, [r0]
    1510:	ldr	ip, [sp, #16]
    1514:	ldr	r0, [sp, #28]
    1518:	strb	ip, [r0]
    151c:	ldr	ip, [sp, #4]
    1520:	ldr	r0, [sp, #36]	; 0x24
    1524:	strb	ip, [r0]
    1528:	b	1094 <ya_string_escape+0xe0>
    152c:	.word	0x0000177c

00001530 <ya_new_extension>:
    1530:	strd	r4, [sp, #-12]!
    1534:	mov	r5, r1
    1538:	str	lr, [sp, #8]
    153c:	sub	sp, sp, #12
    1540:	bl	d40 <strdup@plt>
    1544:	mov	r1, #46	; 0x2e
    1548:	mov	r4, r0
    154c:	bl	e0c <strrchr@plt>
    1550:	ldr	r1, [pc, #80]	; 15a8 <ya_new_extension+0x78>
    1554:	cmp	r0, #0
    1558:	mov	r2, r4
    155c:	movne	r3, #0
    1560:	strbne	r3, [r0]
    1564:	mov	r3, r5
    1568:	add	r0, sp, #4
    156c:	add	r1, pc, r1
    1570:	bl	de8 <asprintf@plt>
    1574:	cmn	r0, #1
    1578:	beq	1598 <ya_new_extension+0x68>
    157c:	mov	r0, r4
    1580:	bl	cf8 <free@plt>
    1584:	ldr	r0, [sp, #4]
    1588:	add	sp, sp, #12
    158c:	ldrd	r4, [sp]
    1590:	add	sp, sp, #8
    1594:	pop	{pc}		; (ldr pc, [sp], #4)
    1598:	ldr	r0, [pc, #12]	; 15ac <ya_new_extension+0x7c>
    159c:	add	r0, pc, r0
    15a0:	bl	d4c <perror@plt>
    15a4:	bl	e78 <abort@plt>
    15a8:	.word	0x000015fc
    15ac:	.word	0x000015d4

000015b0 <ya_error>:
    15b0:	push	{r0, r1, r2, r3}
    15b4:	push	{lr}		; (str lr, [sp, #-4]!)
    15b8:	sub	sp, sp, #20
    15bc:	add	r3, sp, #28
    15c0:	add	r0, sp, #8
    15c4:	ldr	r1, [sp, #24]
    15c8:	mov	r2, r3
    15cc:	str	r3, [sp, #12]
    15d0:	bl	cbc <vasprintf@plt>
    15d4:	ldr	r3, [pc, #76]	; 1628 <ya_error+0x78>
    15d8:	cmp	r0, #0
    15dc:	add	r3, pc, r3
    15e0:	blt	1620 <ya_error+0x70>
    15e4:	ldr	r1, [pc, #64]	; 162c <ya_error+0x7c>
    15e8:	ldr	r2, [pc, #64]	; 1630 <ya_error+0x80>
    15ec:	ldr	r0, [sp, #8]
    15f0:	ldr	ip, [r3, r1]
    15f4:	ldr	r3, [r3, r2]
    15f8:	str	r0, [sp]
    15fc:	ldr	r1, [pc, #48]	; 1634 <ya_error+0x84>
    1600:	ldr	r0, [r3]
    1604:	ldrd	r2, [ip]
    1608:	add	r1, pc, r1
    160c:	add	r2, r2, #1
    1610:	add	r3, r3, #1
    1614:	bl	dac <fprintf@plt>
    1618:	ldr	r0, [sp, #8]
    161c:	bl	cf8 <free@plt>
    1620:	mov	r0, #1
    1624:	bl	d94 <exit@plt>
    1628:	.word	0x00011a1c
    162c:	.word	0x000000ec
    1630:	.word	0x000000cc
    1634:	.word	0x00001594

00001638 <ya_count>:
    1638:	ldr	r3, [pc, #252]	; 173c <ya_count+0x104>
    163c:	cmp	r2, #0
    1640:	strd	r4, [sp, #-20]!	; 0xffffffec
    1644:	mov	r4, r0
    1648:	ldr	r0, [pc, #240]	; 1740 <ya_count+0x108>
    164c:	strd	r6, [sp, #8]
    1650:	ldr	ip, [pc, #236]	; 1744 <ya_count+0x10c>
    1654:	add	r3, pc, r3
    1658:	str	lr, [sp, #16]
    165c:	ldr	r0, [r3, r0]
    1660:	ldr	r5, [r3, ip]
    1664:	ldrd	r6, [r0]
    1668:	ldr	r3, [r0, #8]
    166c:	strd	r6, [r5]
    1670:	str	r3, [r5, #8]
    1674:	beq	16ec <ya_count+0xb4>
    1678:	add	r2, r1, r2
    167c:	mov	r6, #0
    1680:	sub	r1, r1, #1
    1684:	sub	r2, r2, #1
    1688:	b	16ac <ya_count+0x74>
    168c:	cmp	ip, #128	; 0x80
    1690:	cmpne	lr, #94	; 0x5e
    1694:	bhi	16a4 <ya_count+0x6c>
    1698:	ldr	r3, [r0, #4]
    169c:	add	r3, r3, #1
    16a0:	str	r3, [r0, #4]
    16a4:	cmp	r1, r2
    16a8:	beq	16ec <ya_count+0xb4>
    16ac:	ldrb	r3, [r1, #1]!
    16b0:	cmp	r3, #10
    16b4:	beq	172c <ya_count+0xf4>
    16b8:	cmp	r3, #13
    16bc:	sub	lr, r3, #32
    16c0:	and	ip, r3, #192	; 0xc0
    16c4:	streq	r6, [r0, #4]
    16c8:	beq	16a4 <ya_count+0x6c>
    16cc:	cmp	r3, #9
    16d0:	bne	168c <ya_count+0x54>
    16d4:	ldr	r3, [r0, #4]
    16d8:	cmp	r1, r2
    16dc:	bic	r3, r3, #7
    16e0:	add	r3, r3, #8
    16e4:	str	r3, [r0, #4]
    16e8:	bne	16ac <ya_count+0x74>
    16ec:	ldrd	r2, [r5]
    16f0:	mvn	r0, #0
    16f4:	mov	r6, #0
    16f8:	mov	r7, #0
    16fc:	mov	ip, #0
    1700:	ldr	r1, [r5, #8]
    1704:	strd	r6, [r4]
    1708:	ldrd	r6, [sp, #8]
    170c:	strd	r2, [r4, #8]
    1710:	strb	r0, [r4, #20]
    1714:	mov	r0, r4
    1718:	str	r1, [r4, #16]
    171c:	str	ip, [r4, #24]
    1720:	ldrd	r4, [sp]
    1724:	add	sp, sp, #16
    1728:	pop	{pc}		; (ldr pc, [sp], #4)
    172c:	ldr	r3, [r0]
    1730:	add	r3, r3, #1
    1734:	stm	r0, {r3, r6}
    1738:	b	16a4 <ya_count+0x6c>
    173c:	.word	0x000119a4
    1740:	.word	0x000000ec
    1744:	.word	0x000000e8

00001748 <ya_get_file_nr>:
    1748:	ldr	r3, [pc, #168]	; 17f8 <ya_get_file_nr+0xb0>
    174c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1750:	mov	r4, #0
    1754:	ldr	r1, [pc, #160]	; 17fc <ya_get_file_nr+0xb4>
    1758:	strd	r6, [sp, #8]
    175c:	mov	r6, r0
    1760:	ldr	r2, [pc, #152]	; 1800 <ya_get_file_nr+0xb8>
    1764:	add	r3, pc, r3
    1768:	strd	r8, [sp, #16]
    176c:	str	sl, [sp, #24]
    1770:	str	lr, [sp, #28]
    1774:	ldr	r8, [r3, r1]
    1778:	ldr	r9, [r3, r2]
    177c:	ldr	r7, [r8]
    1780:	sub	r5, r9, #4
    1784:	b	17a4 <ya_get_file_nr+0x5c>
    1788:	ldr	r0, [r5, #4]!
    178c:	bl	cc8 <strcmp@plt>
    1790:	cmp	r0, #0
    1794:	beq	17e8 <ya_get_file_nr+0xa0>
    1798:	add	r4, r4, #1
    179c:	cmp	r4, #65536	; 0x10000
    17a0:	beq	17f0 <ya_get_file_nr+0xa8>
    17a4:	cmp	r7, r4
    17a8:	mov	r1, r6
    17ac:	bgt	1788 <ya_get_file_nr+0x40>
    17b0:	mov	r0, r6
    17b4:	bl	d40 <strdup@plt>
    17b8:	ldr	r2, [r8]
    17bc:	mov	r3, r4
    17c0:	str	r0, [r9, r4, lsl #2]
    17c4:	add	r2, r2, #1
    17c8:	str	r2, [r8]
    17cc:	ldrd	r4, [sp]
    17d0:	mov	r0, r3
    17d4:	ldrd	r6, [sp, #8]
    17d8:	ldrd	r8, [sp, #16]
    17dc:	ldr	sl, [sp, #24]
    17e0:	add	sp, sp, #28
    17e4:	pop	{pc}		; (ldr pc, [sp], #4)
    17e8:	mov	r3, r4
    17ec:	b	17cc <ya_get_file_nr+0x84>
    17f0:	mvn	r3, #0
    17f4:	b	17cc <ya_get_file_nr+0x84>
    17f8:	.word	0x00011894
    17fc:	.word	0x000000c8
    1800:	.word	0x000000e0

00001804 <ya_reposition>:
    1804:	strd	r4, [sp, #-20]!	; 0xffffffec
    1808:	mov	r2, #10
    180c:	strd	r6, [sp, #8]
    1810:	mov	r7, r1
    1814:	mov	r6, r0
    1818:	str	lr, [sp, #16]
    181c:	sub	sp, sp, #12
    1820:	add	r1, sp, #4
    1824:	ldr	r5, [pc, #160]	; 18cc <ya_reposition+0xc8>
    1828:	bl	ce0 <strtol@plt>
    182c:	ldr	r2, [pc, #156]	; 18d0 <ya_reposition+0xcc>
    1830:	ldr	r3, [pc, #156]	; 18d4 <ya_reposition+0xd0>
    1834:	add	r5, pc, r5
    1838:	ldr	ip, [sp, #4]
    183c:	ldr	r4, [r5, r2]
    1840:	ldr	r1, [r5, r3]
    1844:	cmp	ip, r6
    1848:	ldrd	r2, [r4]
    184c:	ldr	lr, [r4, #8]
    1850:	strd	r2, [r1]
    1854:	str	lr, [r1, #8]
    1858:	beq	18a8 <ya_reposition+0xa4>
    185c:	mov	r3, #0
    1860:	sub	r0, r0, #1
    1864:	stm	r4, {r0, r3}
    1868:	ldrb	r3, [ip]
    186c:	cmp	r3, #32
    1870:	beq	1888 <ya_reposition+0x84>
    1874:	add	sp, sp, #12
    1878:	ldrd	r4, [sp]
    187c:	ldrd	r6, [sp, #8]
    1880:	add	sp, sp, #16
    1884:	pop	{pc}		; (ldr pc, [sp], #4)
    1888:	sub	r6, ip, r6
    188c:	sub	r1, r7, #3
    1890:	sub	r1, r1, r6
    1894:	add	r0, ip, #2
    1898:	bl	d04 <strndup@plt>
    189c:	bl	df4 <ya_get_file_nr@plt>
    18a0:	str	r0, [r4, #8]
    18a4:	b	1874 <ya_reposition+0x70>
    18a8:	ldr	r3, [pc, #40]	; 18d8 <ya_reposition+0xd4>
    18ac:	mov	r2, #37	; 0x25
    18b0:	mov	r1, #1
    18b4:	ldr	r0, [pc, #32]	; 18dc <ya_reposition+0xd8>
    18b8:	ldr	r3, [r5, r3]
    18bc:	add	r0, pc, r0
    18c0:	ldr	r3, [r3]
    18c4:	bl	d64 <fwrite@plt>
    18c8:	bl	e78 <abort@plt>
    18cc:	.word	0x000117c4
    18d0:	.word	0x000000ec
    18d4:	.word	0x000000e8
    18d8:	.word	0x000000cc
    18dc:	.word	0x000012f0

000018e0 <ya_clear_position>:
    18e0:	ldr	r2, [r0, #24]
    18e4:	mvn	r3, #0
    18e8:	str	r3, [r0, #8]
    18ec:	str	r3, [r0, #12]
    18f0:	str	r3, [r0, #16]
    18f4:	str	r3, [r2, #16]
    18f8:	str	r3, [r2, #20]
    18fc:	str	r3, [r2, #24]
    1900:	bx	lr

00001904 <ya_get_filenames>:
    1904:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1908:	mov	r2, #0
    190c:	strd	r6, [sp, #8]
    1910:	strd	r8, [sp, #16]
    1914:	ldr	r9, [pc, #384]	; 1a9c <ya_get_filenames+0x198>
    1918:	strd	sl, [sp, #24]
    191c:	str	lr, [sp, #32]
    1920:	sub	sp, sp, #148	; 0x94
    1924:	add	r6, sp, #80	; 0x50
    1928:	ldr	r8, [pc, #368]	; 1aa0 <ya_get_filenames+0x19c>
    192c:	str	r0, [sp, #12]
    1930:	mov	r0, r6
    1934:	add	r9, pc, r9
    1938:	mov	r1, r9
    193c:	bl	ddc <ya_list@plt>
    1940:	ldr	r3, [pc, #348]	; 1aa4 <ya_get_filenames+0x1a0>
    1944:	add	r8, pc, r8
    1948:	ldr	sl, [r8, r3]
    194c:	ldr	r3, [sl]
    1950:	cmp	r3, #0
    1954:	addle	r4, sp, #16
    1958:	ble	1a14 <ya_get_filenames+0x110>
    195c:	ldr	r2, [pc, #324]	; 1aa8 <ya_get_filenames+0x1a4>
    1960:	mov	r7, #0
    1964:	add	r4, sp, #16
    1968:	add	r5, sp, #48	; 0x30
    196c:	ldr	r3, [pc, #312]	; 1aac <ya_get_filenames+0x1a8>
    1970:	add	r2, pc, r2
    1974:	str	r2, [sp, #8]
    1978:	ldr	r8, [r8, r3]
    197c:	sub	r8, r8, #4
    1980:	ldr	fp, [r8, #4]!
    1984:	add	r7, r7, #1
    1988:	mov	r0, fp
    198c:	bl	da0 <strlen@plt>
    1990:	mov	r3, r0
    1994:	mov	r2, fp
    1998:	ldr	r1, [sp, #8]
    199c:	mov	r0, r4
    19a0:	bl	e6c <ya_text@plt>
    19a4:	ldrd	r2, [r4]
    19a8:	mov	r0, r5
    19ac:	strd	r2, [r5]
    19b0:	ldrd	r2, [r4, #8]
    19b4:	strd	r2, [r5, #8]
    19b8:	ldrd	r2, [r4, #16]
    19bc:	strd	r2, [r5, #16]
    19c0:	ldrd	r2, [r4, #24]
    19c4:	strd	r2, [r5, #24]
    19c8:	bl	e54 <ya_clear_position@plt>
    19cc:	mov	r1, #0
    19d0:	mov	r3, r5
    19d4:	mov	r2, r6
    19d8:	mov	r0, r4
    19dc:	str	r1, [sp]
    19e0:	mov	r1, r9
    19e4:	bl	ddc <ya_list@plt>
    19e8:	ldrd	r2, [r4]
    19ec:	ldr	r1, [sl]
    19f0:	strd	r2, [r6]
    19f4:	ldrd	r2, [r4, #8]
    19f8:	cmp	r1, r7
    19fc:	strd	r2, [r6, #8]
    1a00:	ldrd	r2, [r4, #16]
    1a04:	strd	r2, [r6, #16]
    1a08:	ldrd	r2, [r4, #24]
    1a0c:	strd	r2, [r6, #24]
    1a10:	bgt	1980 <ya_get_filenames+0x7c>
    1a14:	ldr	r1, [pc, #148]	; 1ab0 <ya_get_filenames+0x1ac>
    1a18:	mov	r2, r6
    1a1c:	mov	r0, r4
    1a20:	mov	r3, #0
    1a24:	add	r6, sp, #112	; 0x70
    1a28:	add	r1, pc, r1
    1a2c:	bl	d70 <ya_branch@plt>
    1a30:	ldrd	r2, [sp, #16]
    1a34:	mov	r0, r6
    1a38:	strd	r2, [sp, #112]	; 0x70
    1a3c:	ldrd	r2, [r4, #8]
    1a40:	strd	r2, [r6, #8]
    1a44:	ldrd	r2, [r4, #16]
    1a48:	strd	r2, [r6, #16]
    1a4c:	ldrd	r2, [r4, #24]
    1a50:	strd	r2, [r6, #24]
    1a54:	bl	e54 <ya_clear_position@plt>
    1a58:	ldr	r1, [sp, #12]
    1a5c:	ldrd	r2, [sp, #112]	; 0x70
    1a60:	ldrd	r4, [r6, #8]
    1a64:	mov	r0, r1
    1a68:	ldrd	r8, [r6, #16]
    1a6c:	strd	r2, [r1]
    1a70:	ldrd	r2, [r6, #24]
    1a74:	strd	r4, [r1, #8]
    1a78:	strd	r8, [r1, #16]
    1a7c:	strd	r2, [r1, #24]
    1a80:	add	sp, sp, #148	; 0x94
    1a84:	ldrd	r4, [sp]
    1a88:	ldrd	r6, [sp, #8]
    1a8c:	ldrd	r8, [sp, #16]
    1a90:	ldrd	sl, [sp, #24]
    1a94:	add	sp, sp, #32
    1a98:	pop	{pc}		; (ldr pc, [sp], #4)
    1a9c:	.word	0x000012a0
    1aa0:	.word	0x000116b4
    1aa4:	.word	0x000000c8
    1aa8:	.word	0x0000126c
    1aac:	.word	0x000000e0
    1ab0:	.word	0x000011bc
    1ab4:	.word	0x00000000

00001ab8 <ya_literal>:
    1ab8:	ldr	ip, [pc, #384]	; 1c40 <ya_literal+0x188>
    1abc:	cmp	r2, #0
    1ac0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1ac4:	mov	r5, r0
    1ac8:	ldr	r0, [pc, #372]	; 1c44 <ya_literal+0x18c>
    1acc:	strd	r6, [sp, #8]
    1ad0:	mov	r6, #0
    1ad4:	strd	r8, [sp, #16]
    1ad8:	mov	r9, r1
    1adc:	strd	sl, [sp, #24]
    1ae0:	add	ip, pc, ip
    1ae4:	str	lr, [sp, #32]
    1ae8:	sub	sp, sp, #36	; 0x24
    1aec:	str	r6, [r5, #20]
    1af0:	strd	r2, [sp, #24]
    1af4:	mov	r2, ip
    1af8:	str	r6, [r5, #24]
    1afc:	str	r6, [r5, #28]
    1b00:	ldr	r3, [ip, r0]
    1b04:	ldr	r7, [sp, #72]	; 0x48
    1b08:	ldr	r2, [r3]
    1b0c:	ldmib	r3, {r1, r3}
    1b10:	add	r8, r7, #7
    1b14:	bic	r8, r8, #7
    1b18:	add	sl, r8, #32
    1b1c:	stmib	sp, {r1, r2, r3}
    1b20:	beq	1c24 <ya_literal+0x16c>
    1b24:	rev	r3, r3
    1b28:	rev	fp, r1
    1b2c:	str	r3, [sp, #16]
    1b30:	rev	r3, r2
    1b34:	str	r3, [sp, #20]
    1b38:	mov	r1, sl
    1b3c:	mov	r0, #1
    1b40:	bl	c98 <calloc@plt>
    1b44:	mov	r4, r0
    1b48:	mov	r0, r9
    1b4c:	bl	da0 <strlen@plt>
    1b50:	mov	ip, #0
    1b54:	mov	r2, ip
    1b58:	mov	r3, ip
    1b5c:	lsl	r1, r3, #8
    1b60:	cmp	r0, ip
    1b64:	lsl	lr, r2, #8
    1b68:	orr	r1, r1, r2, lsr #24
    1b6c:	ldrbhi	r2, [r9, ip]
    1b70:	add	ip, ip, #1
    1b74:	orrls	r2, lr, #32
    1b78:	mov	r3, r1
    1b7c:	orrhi	r2, r2, lr
    1b80:	cmp	ip, #8
    1b84:	bne	1b5c <ya_literal+0xa4>
    1b88:	rev	ip, sl
    1b8c:	rev	r3, r2
    1b90:	ldr	r2, [sp, #20]
    1b94:	rev	r0, r1
    1b98:	mov	r9, #0
    1b9c:	ldr	r1, [sp, #28]
    1ba0:	stm	r4, {r0, r3, r9, ip}
    1ba4:	add	r0, r4, #32
    1ba8:	ldr	r3, [sp, #16]
    1bac:	str	fp, [r4, #20]
    1bb0:	ldr	fp, [sp, #24]
    1bb4:	str	r2, [r4, #16]
    1bb8:	mov	r2, r7
    1bbc:	str	r3, [r4, #24]
    1bc0:	strb	fp, [r4, #31]
    1bc4:	bl	d10 <memcpy@plt>
    1bc8:	add	r0, r7, #32
    1bcc:	mov	r1, r9
    1bd0:	sub	r2, r8, r7
    1bd4:	add	r0, r4, r0
    1bd8:	bl	dd0 <memset@plt>
    1bdc:	ldr	r3, [sp, #8]
    1be0:	mov	r0, r5
    1be4:	str	sl, [r5]
    1be8:	str	r6, [r5, #4]
    1bec:	str	r3, [r5, #8]
    1bf0:	ldr	r3, [sp, #4]
    1bf4:	strb	fp, [r5, #20]
    1bf8:	str	r4, [r5, #24]
    1bfc:	str	r3, [r5, #12]
    1c00:	ldr	r3, [sp, #12]
    1c04:	str	r3, [r5, #16]
    1c08:	add	sp, sp, #36	; 0x24
    1c0c:	ldrd	r4, [sp]
    1c10:	ldrd	r6, [sp, #8]
    1c14:	ldrd	r8, [sp, #16]
    1c18:	ldrd	sl, [sp, #24]
    1c1c:	add	sp, sp, #32
    1c20:	pop	{pc}		; (ldr pc, [sp], #4)
    1c24:	mvn	fp, #0
    1c28:	str	fp, [sp, #4]
    1c2c:	str	fp, [sp, #8]
    1c30:	str	fp, [sp, #12]
    1c34:	str	fp, [sp, #16]
    1c38:	str	fp, [sp, #20]
    1c3c:	b	1b38 <ya_literal+0x80>
    1c40:	.word	0x00011518
    1c44:	.word	0x000000e8

00001c48 <ya_binary_float>:
    1c48:	strd	r4, [sp, #-16]!
    1c4c:	mov	r5, r0
    1c50:	mov	r0, r2
    1c54:	str	r6, [sp, #8]
    1c58:	mov	r6, r1
    1c5c:	mov	r4, r2
    1c60:	str	lr, [sp, #12]
    1c64:	vpush	{d8}
    1c68:	sub	sp, sp, #24
    1c6c:	add	r1, sp, #12
    1c70:	bl	d34 <strtold@plt>
    1c74:	ldr	r3, [sp, #12]
    1c78:	vstr	d0, [sp, #16]
    1c7c:	cmp	r3, r4
    1c80:	vmovne.f64	d8, d0
    1c84:	beq	1d48 <ya_binary_float+0x100>
    1c88:	vldr	d6, [pc, #232]	; 1d78 <ya_binary_float+0x130>
    1c8c:	vldr	d7, [pc, #236]	; 1d80 <ya_binary_float+0x138>
    1c90:	vcmp.f64	d8, d6
    1c94:	vmrs	APSR_nzcv, fpscr
    1c98:	vcmp.f64	d8, d7
    1c9c:	movpl	r3, #1
    1ca0:	movmi	r3, #0
    1ca4:	vmrs	APSR_nzcv, fpscr
    1ca8:	movgt	r3, #0
    1cac:	andle	r3, r3, #1
    1cb0:	cmp	r3, #0
    1cb4:	bne	1cc8 <ya_binary_float+0x80>
    1cb8:	bl	db8 <__errno_location@plt>
    1cbc:	ldr	r3, [r0]
    1cc0:	cmp	r3, #34	; 0x22
    1cc4:	beq	1d60 <ya_binary_float+0x118>
    1cc8:	vcmp.f64	d8, #0.0
    1ccc:	vmrs	APSR_nzcv, fpscr
    1cd0:	bne	1ce4 <ya_binary_float+0x9c>
    1cd4:	bl	db8 <__errno_location@plt>
    1cd8:	ldr	r3, [r0]
    1cdc:	cmp	r3, #34	; 0x22
    1ce0:	beq	1d34 <ya_binary_float+0xec>
    1ce4:	ldr	lr, [sp, #16]
    1ce8:	mov	r2, #8
    1cec:	mov	r0, r5
    1cf0:	mov	r1, r6
    1cf4:	add	r3, sp, #16
    1cf8:	ldr	ip, [sp, #20]
    1cfc:	str	r2, [sp]
    1d00:	mov	r2, #6
    1d04:	rev	lr, lr
    1d08:	rev	ip, ip
    1d0c:	str	ip, [sp, #16]
    1d10:	str	lr, [sp, #20]
    1d14:	bl	e24 <ya_literal@plt>
    1d18:	mov	r0, r5
    1d1c:	add	sp, sp, #24
    1d20:	vpop	{d8}
    1d24:	ldrd	r4, [sp]
    1d28:	ldr	r6, [sp, #8]
    1d2c:	add	sp, sp, #12
    1d30:	pop	{pc}		; (ldr pc, [sp], #4)
    1d34:	ldr	r0, [pc, #76]	; 1d88 <ya_binary_float+0x140>
    1d38:	mov	r1, r4
    1d3c:	add	r0, pc, r0
    1d40:	bl	e18 <ya_error@plt>
    1d44:	b	1ce4 <ya_binary_float+0x9c>
    1d48:	ldr	r0, [pc, #60]	; 1d8c <ya_binary_float+0x144>
    1d4c:	mov	r1, r4
    1d50:	add	r0, pc, r0
    1d54:	bl	e18 <ya_error@plt>
    1d58:	vldr	d8, [sp, #16]
    1d5c:	b	1c88 <ya_binary_float+0x40>
    1d60:	ldr	r0, [pc, #40]	; 1d90 <ya_binary_float+0x148>
    1d64:	mov	r1, r4
    1d68:	add	r0, pc, r0
    1d6c:	bl	e18 <ya_error@plt>
    1d70:	vldr	d8, [sp, #16]
    1d74:	b	1cc8 <ya_binary_float+0x80>
    1d78:	.word	0xffffffff
    1d7c:	.word	0xffefffff
    1d80:	.word	0xffffffff
    1d84:	.word	0x7fefffff
    1d88:	.word	0x00000f00
    1d8c:	.word	0x00000e9c
    1d90:	.word	0x00000ea8

00001d94 <ya_integer>:
    1d94:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1d98:	strd	r6, [sp, #8]
    1d9c:	strd	r8, [sp, #16]
    1da0:	strd	sl, [sp, #24]
    1da4:	str	lr, [sp, #32]
    1da8:	sub	sp, sp, #44	; 0x2c
    1dac:	ldr	sl, [sp, #80]	; 0x50
    1db0:	strd	r0, [sp, #16]
    1db4:	str	r2, [sp, #24]
    1db8:	ldr	r2, [pc, #508]	; 1fbc <ya_integer+0x228>
    1dbc:	cmp	sl, #0
    1dc0:	ldr	r4, [sp, #84]	; 0x54
    1dc4:	add	r2, pc, r2
    1dc8:	str	r2, [sp, #28]
    1dcc:	beq	1f88 <ya_integer+0x1f4>
    1dd0:	ldr	fp, [pc, #488]	; 1fc0 <ya_integer+0x22c>
    1dd4:	add	sl, r3, sl
    1dd8:	mov	r6, #0
    1ddc:	sub	r5, r3, #1
    1de0:	asr	r3, r4, #31
    1de4:	mov	r2, r4
    1de8:	sub	sl, sl, #1
    1dec:	mov	r7, r6
    1df0:	strd	r2, [sp, #8]
    1df4:	add	fp, pc, fp
    1df8:	cmp	r4, #32
    1dfc:	ldrb	r3, [r5, #1]!
    1e00:	beq	1ef4 <ya_integer+0x160>
    1e04:	sub	r2, r4, #37	; 0x25
    1e08:	cmp	r2, #27
    1e0c:	bhi	1f28 <ya_integer+0x194>
    1e10:	sub	r2, r3, #65	; 0x41
    1e14:	uxtb	r1, r2
    1e18:	cmp	r1, #25
    1e1c:	bls	1e5c <ya_integer+0xc8>
    1e20:	sub	r2, r3, #97	; 0x61
    1e24:	cmp	r2, #25
    1e28:	subls	r2, r3, #71	; 0x47
    1e2c:	bls	1e54 <ya_integer+0xc0>
    1e30:	sub	r2, r3, #48	; 0x30
    1e34:	cmp	r2, #9
    1e38:	addls	r2, r3, #4
    1e3c:	bls	1e54 <ya_integer+0xc0>
    1e40:	cmp	r3, #43	; 0x2b
    1e44:	beq	1f78 <ya_integer+0x1e4>
    1e48:	cmp	r3, #47	; 0x2f
    1e4c:	bne	1e9c <ya_integer+0x108>
    1e50:	mov	r2, #63	; 0x3f
    1e54:	cmp	r2, r4
    1e58:	bge	1e9c <ya_integer+0x108>
    1e5c:	ldr	ip, [sp, #12]
    1e60:	mul	r7, r4, r7
    1e64:	umull	r0, r1, r4, r6
    1e68:	asr	r3, r2, #31
    1e6c:	adds	r8, r2, r0
    1e70:	mla	ip, r6, ip, r7
    1e74:	mov	r6, #0
    1e78:	mov	r7, #0
    1e7c:	add	r1, ip, r1
    1e80:	adcs	r9, r3, r1
    1e84:	movcs	r6, #1
    1e88:	movcs	r7, #0
    1e8c:	orrs	r3, r6, r7
    1e90:	mov	r6, r8
    1e94:	mov	r7, r9
    1e98:	bne	1f6c <ya_integer+0x1d8>
    1e9c:	cmp	sl, r5
    1ea0:	bne	1df8 <ya_integer+0x64>
    1ea4:	rev	r7, r7
    1ea8:	rev	r6, r6
    1eac:	ldr	r4, [sp, #16]
    1eb0:	mov	r0, #8
    1eb4:	add	r3, sp, #32
    1eb8:	ldr	r1, [sp, #20]
    1ebc:	str	r0, [sp]
    1ec0:	ldr	r2, [sp, #24]
    1ec4:	mov	r0, r4
    1ec8:	str	r7, [sp, #32]
    1ecc:	str	r6, [sp, #36]	; 0x24
    1ed0:	bl	e24 <ya_literal@plt>
    1ed4:	mov	r0, r4
    1ed8:	add	sp, sp, #44	; 0x2c
    1edc:	ldrd	r4, [sp]
    1ee0:	ldrd	r6, [sp, #8]
    1ee4:	ldrd	r8, [sp, #16]
    1ee8:	ldrd	sl, [sp, #24]
    1eec:	add	sp, sp, #32
    1ef0:	pop	{pc}		; (ldr pc, [sp], #4)
    1ef4:	sub	r2, r3, #97	; 0x61
    1ef8:	uxtb	r1, r2
    1efc:	cmp	r1, #25
    1f00:	bls	1e5c <ya_integer+0xc8>
    1f04:	sub	r2, r3, #65	; 0x41
    1f08:	uxtb	r1, r2
    1f0c:	cmp	r1, #25
    1f10:	bls	1e5c <ya_integer+0xc8>
    1f14:	sub	r2, r3, #50	; 0x32
    1f18:	cmp	r2, #5
    1f1c:	subls	r2, r3, #24
    1f20:	bls	1e5c <ya_integer+0xc8>
    1f24:	b	1e9c <ya_integer+0x108>
    1f28:	cmp	r4, #36	; 0x24
    1f2c:	bhi	1f94 <ya_integer+0x200>
    1f30:	sub	r2, r3, #48	; 0x30
    1f34:	uxtb	r1, r2
    1f38:	cmp	r1, #9
    1f3c:	bls	1e54 <ya_integer+0xc0>
    1f40:	sub	r2, r3, #65	; 0x41
    1f44:	cmp	r2, #25
    1f48:	subls	r2, r3, #55	; 0x37
    1f4c:	bls	1e54 <ya_integer+0xc0>
    1f50:	sub	r2, r3, #97	; 0x61
    1f54:	cmp	r2, #25
    1f58:	subls	r2, r3, #87	; 0x57
    1f5c:	bhi	1e9c <ya_integer+0x108>
    1f60:	cmp	r2, r4
    1f64:	bge	1e9c <ya_integer+0x108>
    1f68:	b	1e5c <ya_integer+0xc8>
    1f6c:	mov	r0, fp
    1f70:	bl	e18 <ya_error@plt>
    1f74:	b	1e9c <ya_integer+0x108>
    1f78:	mov	r2, #62	; 0x3e
    1f7c:	cmp	r2, r4
    1f80:	bge	1e9c <ya_integer+0x108>
    1f84:	b	1e5c <ya_integer+0xc8>
    1f88:	mov	r7, sl
    1f8c:	mov	r6, sl
    1f90:	b	1eac <ya_integer+0x118>
    1f94:	ldr	r3, [pc, #40]	; 1fc4 <ya_integer+0x230>
    1f98:	mov	r2, #47	; 0x2f
    1f9c:	mov	r1, #1
    1fa0:	ldr	ip, [sp, #28]
    1fa4:	ldr	r0, [pc, #28]	; 1fc8 <ya_integer+0x234>
    1fa8:	ldr	r3, [ip, r3]
    1fac:	add	r0, pc, r0
    1fb0:	ldr	r3, [r3]
    1fb4:	bl	d64 <fwrite@plt>
    1fb8:	bl	e78 <abort@plt>
    1fbc:	.word	0x00011234
    1fc0:	.word	0x00000ea8
    1fc4:	.word	0x000000cc
    1fc8:	.word	0x00000cc0

00001fcc <ya_text>:
    1fcc:	str	r4, [sp, #-8]!
    1fd0:	mov	r4, r0
    1fd4:	str	lr, [sp, #4]
    1fd8:	sub	sp, sp, #8
    1fdc:	str	r3, [sp]
    1fe0:	mov	r3, r2
    1fe4:	mov	r2, #3
    1fe8:	bl	e24 <ya_literal@plt>
    1fec:	mov	r0, r4
    1ff0:	add	sp, sp, #8
    1ff4:	ldr	r4, [sp]
    1ff8:	add	sp, sp, #4
    1ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00002000 <ya_leaf>:
    2000:	mov	ip, #0
    2004:	str	r4, [sp, #-8]!
    2008:	mov	r2, #1
    200c:	str	lr, [sp, #4]
    2010:	sub	sp, sp, #8
    2014:	mov	r4, r0
    2018:	mov	r3, ip
    201c:	str	ip, [sp]
    2020:	bl	e24 <ya_literal@plt>
    2024:	mov	r0, r4
    2028:	add	sp, sp, #8
    202c:	ldr	r4, [sp]
    2030:	add	sp, sp, #4
    2034:	pop	{pc}		; (ldr pc, [sp], #4)

00002038 <ya_null>:
    2038:	ldr	r1, [pc, #56]	; 2078 <ya_null+0x40>
    203c:	mov	ip, #0
    2040:	str	r4, [sp, #-8]!
    2044:	mov	r3, ip
    2048:	mov	r4, r0
    204c:	str	lr, [sp, #4]
    2050:	sub	sp, sp, #8
    2054:	mov	r2, ip
    2058:	str	ip, [sp]
    205c:	add	r1, pc, r1
    2060:	bl	e24 <ya_literal@plt>
    2064:	mov	r0, r4
    2068:	add	sp, sp, #8
    206c:	ldr	r4, [sp]
    2070:	add	sp, sp, #4
    2074:	pop	{pc}		; (ldr pc, [sp], #4)
    2078:	.word	0x00000c5c

0000207c <ya_positive_integer>:
    207c:	str	r4, [sp, #-8]!
    2080:	mov	r4, r0
    2084:	str	lr, [sp, #4]
    2088:	sub	sp, sp, #8
    208c:	ldr	ip, [sp, #16]
    2090:	stm	sp, {r3, ip}
    2094:	mov	r3, r2
    2098:	mov	r2, #4
    209c:	bl	dc4 <ya_integer@plt>
    20a0:	mov	r0, r4
    20a4:	add	sp, sp, #8
    20a8:	ldr	r4, [sp]
    20ac:	add	sp, sp, #4
    20b0:	pop	{pc}		; (ldr pc, [sp], #4)

000020b4 <ya_negative_integer>:
    20b4:	str	r4, [sp, #-8]!
    20b8:	mov	r4, r0
    20bc:	str	lr, [sp, #4]
    20c0:	sub	sp, sp, #8
    20c4:	ldr	ip, [sp, #16]
    20c8:	stm	sp, {r3, ip}
    20cc:	mov	r3, r2
    20d0:	mov	r2, #5
    20d4:	bl	dc4 <ya_integer@plt>
    20d8:	mov	r0, r4
    20dc:	add	sp, sp, #8
    20e0:	ldr	r4, [sp]
    20e4:	add	sp, sp, #4
    20e8:	pop	{pc}		; (ldr pc, [sp], #4)

000020ec <ya_generic_nodev>:
    20ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
    20f0:	mov	r5, r1
    20f4:	ldr	ip, [pc, #772]	; 2400 <ya_generic_nodev+0x314>
    20f8:	str	lr, [sp, #32]
    20fc:	ldr	lr, [pc, #768]	; 2404 <ya_generic_nodev+0x318>
    2100:	strd	r6, [sp, #8]
    2104:	strd	r8, [sp, #16]
    2108:	strd	sl, [sp, #24]
    210c:	sub	sp, sp, #28
    2110:	mov	sl, r0
    2114:	mov	r0, r3
    2118:	add	lr, pc, lr
    211c:	str	r2, [sp, #8]
    2120:	ldr	r1, [r0], #4
    2124:	str	lr, [sp, #12]
    2128:	ldr	ip, [lr, ip]
    212c:	str	r3, [sp, #20]
    2130:	cmp	r1, #0
    2134:	ldm	ip, {r4, r6}
    2138:	ldrd	r2, [ip, #8]
    213c:	ldrd	r8, [ip, #16]
    2140:	stm	sl, {r4, r6}
    2144:	ldr	r7, [ip, #16]
    2148:	strd	r2, [sl, #8]
    214c:	ldrd	r2, [ip, #24]
    2150:	strd	r8, [sl, #16]
    2154:	ldr	r9, [ip, #8]
    2158:	strd	r2, [sl, #24]
    215c:	ldr	r2, [ip, #12]
    2160:	str	r2, [sp, #4]
    2164:	bne	2190 <ya_generic_nodev+0xa4>
    2168:	b	21d8 <ya_generic_nodev+0xec>
    216c:	ldr	r3, [r1]
    2170:	subs	r4, r4, #32
    2174:	sbc	r6, r6, #0
    2178:	ldr	r1, [r1, #4]
    217c:	adds	r4, r4, r3
    2180:	adc	r6, r6, r1
    2184:	ldr	r1, [r0], #4
    2188:	cmp	r1, #0
    218c:	beq	21d4 <ya_generic_nodev+0xe8>
    2190:	cmn	r7, #1
    2194:	ldr	r3, [r1, #16]
    2198:	beq	231c <ya_generic_nodev+0x230>
    219c:	cmp	r3, r7
    21a0:	beq	2338 <ya_generic_nodev+0x24c>
    21a4:	ldrb	r3, [r1, #20]
    21a8:	cmp	r3, #254	; 0xfe
    21ac:	beq	216c <ya_generic_nodev+0x80>
    21b0:	cmp	r3, #255	; 0xff
    21b4:	beq	23e8 <ya_generic_nodev+0x2fc>
    21b8:	ldr	r3, [r1]
    21bc:	ldr	r1, [r1, #4]
    21c0:	adds	r4, r4, r3
    21c4:	adc	r6, r6, r1
    21c8:	ldr	r1, [r0], #4
    21cc:	cmp	r1, #0
    21d0:	bne	2190 <ya_generic_nodev+0xa4>
    21d4:	str	r2, [sp, #4]
    21d8:	mov	r1, r4
    21dc:	mov	r0, #1
    21e0:	bl	c98 <calloc@plt>
    21e4:	mov	r8, r0
    21e8:	mov	r0, r5
    21ec:	bl	da0 <strlen@plt>
    21f0:	mov	r3, #0
    21f4:	mov	lr, r0
    21f8:	mov	fp, r3
    21fc:	mov	r0, r3
    2200:	lsl	r2, fp, #8
    2204:	cmp	lr, r3
    2208:	lsl	ip, r0, #8
    220c:	orr	r2, r2, r0, lsr #24
    2210:	orrls	r0, ip, #32
    2214:	movls	fp, r2
    2218:	bls	2228 <ya_generic_nodev+0x13c>
    221c:	ldrb	r0, [r5, r3]
    2220:	mov	fp, r2
    2224:	orr	r0, r0, ip
    2228:	add	r3, r3, #1
    222c:	cmp	r3, #8
    2230:	bne	2200 <ya_generic_nodev+0x114>
    2234:	rev	r2, r2
    2238:	ldr	r1, [sp, #8]
    223c:	rev	r0, r0
    2240:	rev	ip, r4
    2244:	rev	lr, r6
    2248:	ldr	r3, [sp, #20]
    224c:	str	r2, [r8]
    2250:	stmib	r8, {r0, lr}
    2254:	str	ip, [r8, #12]
    2258:	strb	r1, [r8, #31]
    225c:	rev	r1, r7
    2260:	add	r2, r3, #4
    2264:	str	r1, [r8, #24]
    2268:	rev	r1, r9
    226c:	str	r2, [sp, #20]
    2270:	ldr	r2, [sp, #4]
    2274:	ldr	r5, [r3]
    2278:	str	r1, [r8, #16]
    227c:	rev	r2, r2
    2280:	cmp	r5, #0
    2284:	str	r2, [r8, #20]
    2288:	movne	fp, #0
    228c:	bne	22d8 <ya_generic_nodev+0x1ec>
    2290:	b	2364 <ya_generic_nodev+0x278>
    2294:	ldr	r2, [r5]
    2298:	add	r0, fp, #32
    229c:	add	r0, r8, r0
    22a0:	ldr	r1, [r5, #24]
    22a4:	sub	r2, r2, #32
    22a8:	add	fp, fp, r2
    22ac:	add	r1, r1, #32
    22b0:	bl	d10 <memcpy@plt>
    22b4:	ldrb	r3, [r5, #20]
    22b8:	cmp	r3, #0
    22bc:	bne	2310 <ya_generic_nodev+0x224>
    22c0:	ldr	r3, [sp, #20]
    22c4:	add	r2, r3, #4
    22c8:	str	r2, [sp, #20]
    22cc:	ldr	r5, [r3]
    22d0:	cmp	r5, #0
    22d4:	beq	2364 <ya_generic_nodev+0x278>
    22d8:	ldrb	r3, [r5, #20]
    22dc:	cmp	r3, #254	; 0xfe
    22e0:	beq	2294 <ya_generic_nodev+0x1a8>
    22e4:	cmp	r3, #255	; 0xff
    22e8:	beq	23c0 <ya_generic_nodev+0x2d4>
    22ec:	ldr	r2, [r5]
    22f0:	add	r0, fp, #32
    22f4:	add	r0, r8, r0
    22f8:	ldr	r1, [r5, #24]
    22fc:	add	fp, fp, r2
    2300:	bl	d10 <memcpy@plt>
    2304:	ldrb	r3, [r5, #20]
    2308:	cmp	r3, #0
    230c:	beq	22c0 <ya_generic_nodev+0x1d4>
    2310:	ldr	r0, [r5, #24]
    2314:	bl	cf8 <free@plt>
    2318:	b	22c0 <ya_generic_nodev+0x1d4>
    231c:	cmn	r3, #1
    2320:	ldr	ip, [r1, #8]
    2324:	beq	233c <ya_generic_nodev+0x250>
    2328:	mov	r7, r3
    232c:	mov	r9, ip
    2330:	ldr	r2, [r1, #12]
    2334:	b	21a4 <ya_generic_nodev+0xb8>
    2338:	ldr	ip, [r1, #8]
    233c:	cmp	ip, r9
    2340:	bcs	2350 <ya_generic_nodev+0x264>
    2344:	mov	r9, ip
    2348:	ldr	r2, [r1, #12]
    234c:	b	21a4 <ya_generic_nodev+0xb8>
    2350:	bne	21a4 <ya_generic_nodev+0xb8>
    2354:	ldr	r3, [r1, #12]
    2358:	cmp	r2, r3
    235c:	movcs	r2, r3
    2360:	b	21a4 <ya_generic_nodev+0xb8>
    2364:	cmn	r7, #1
    2368:	bne	2384 <ya_generic_nodev+0x298>
    236c:	ldr	r3, [pc, #148]	; 2408 <ya_generic_nodev+0x31c>
    2370:	ldr	r2, [sp, #12]
    2374:	ldr	r3, [r2, r3]
    2378:	ldr	r9, [r3]
    237c:	ldmib	r3, {r2, r7}
    2380:	str	r2, [sp, #4]
    2384:	ldr	r3, [sp, #4]
    2388:	mov	r0, sl
    238c:	stm	sl, {r4, r6, r9}
    2390:	str	r3, [sl, #12]
    2394:	ldr	r3, [sp, #8]
    2398:	str	r7, [sl, #16]
    239c:	str	r8, [sl, #24]
    23a0:	strb	r3, [sl, #20]
    23a4:	add	sp, sp, #28
    23a8:	ldrd	r4, [sp]
    23ac:	ldrd	r6, [sp, #8]
    23b0:	ldrd	r8, [sp, #16]
    23b4:	ldrd	sl, [sp, #24]
    23b8:	add	sp, sp, #32
    23bc:	pop	{pc}		; (ldr pc, [sp], #4)
    23c0:	ldr	r0, [pc, #68]	; 240c <ya_generic_nodev+0x320>
    23c4:	mov	r2, #72	; 0x48
    23c8:	mov	r1, #1
    23cc:	ldr	r3, [pc, #60]	; 2410 <ya_generic_nodev+0x324>
    23d0:	add	r0, pc, r0
    23d4:	ldr	ip, [sp, #12]
    23d8:	ldr	r3, [ip, r3]
    23dc:	ldr	r3, [r3]
    23e0:	bl	d64 <fwrite@plt>
    23e4:	bl	e78 <abort@plt>
    23e8:	ldr	r0, [pc, #36]	; 2414 <ya_generic_nodev+0x328>
    23ec:	mov	r2, #72	; 0x48
    23f0:	mov	r1, #1
    23f4:	ldr	r3, [pc, #20]	; 2410 <ya_generic_nodev+0x324>
    23f8:	add	r0, pc, r0
    23fc:	b	23d4 <ya_generic_nodev+0x2e8>
    2400:	.word	0x000000f0
    2404:	.word	0x00010ee0
    2408:	.word	0x000000e8
    240c:	.word	0x000008f0
    2410:	.word	0x000000cc
    2414:	.word	0x000008c8

00002418 <ya_generic_node>:
    2418:	push	{r2, r3}
    241c:	str	r4, [sp, #-8]!
    2420:	mov	r4, r0
    2424:	str	lr, [sp, #4]
    2428:	sub	sp, sp, #8
    242c:	ldrb	r2, [sp, #16]
    2430:	add	ip, sp, #20
    2434:	mov	r3, ip
    2438:	str	ip, [sp, #4]
    243c:	bl	e3c <ya_generic_nodev@plt>
    2440:	mov	r0, r4
    2444:	add	sp, sp, #8
    2448:	ldr	r4, [sp]
    244c:	ldr	lr, [sp, #4]
    2450:	add	sp, sp, #8
    2454:	add	sp, sp, #8
    2458:	bx	lr

0000245c <ya_branch>:
    245c:	push	{r1, r2, r3}
    2460:	mov	r2, #2
    2464:	str	r4, [sp, #-8]!
    2468:	mov	r4, r0
    246c:	str	lr, [sp, #4]
    2470:	sub	sp, sp, #12
    2474:	ldr	r1, [sp, #20]
    2478:	add	ip, sp, #24
    247c:	mov	r3, ip
    2480:	str	ip, [sp, #4]
    2484:	bl	e3c <ya_generic_nodev@plt>
    2488:	mov	r0, r4
    248c:	add	sp, sp, #12
    2490:	ldr	r4, [sp]
    2494:	ldr	lr, [sp, #4]
    2498:	add	sp, sp, #8
    249c:	add	sp, sp, #12
    24a0:	bx	lr

000024a4 <ya_list>:
    24a4:	push	{r1, r2, r3}
    24a8:	mov	r2, #254	; 0xfe
    24ac:	str	r4, [sp, #-8]!
    24b0:	mov	r4, r0
    24b4:	str	lr, [sp, #4]
    24b8:	sub	sp, sp, #12
    24bc:	ldr	r1, [sp, #20]
    24c0:	add	ip, sp, #24
    24c4:	mov	r3, ip
    24c8:	str	ip, [sp, #4]
    24cc:	bl	e3c <ya_generic_nodev@plt>
    24d0:	mov	r0, r4
    24d4:	add	sp, sp, #12
    24d8:	ldr	r4, [sp]
    24dc:	ldr	lr, [sp, #4]
    24e0:	add	sp, sp, #8
    24e4:	add	sp, sp, #12
    24e8:	bx	lr

000024ec <ya_node_save>:
    24ec:	mov	ip, r1
    24f0:	mov	r3, r0
    24f4:	ldr	r1, [r1]
    24f8:	mov	r2, #1
    24fc:	ldr	r0, [ip, #24]
    2500:	b	d64 <fwrite@plt>

00002504 <ya_header>:
    2504:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2508:	mov	r5, r1
    250c:	strd	r6, [sp, #8]
    2510:	mov	r7, r0
    2514:	strd	r8, [sp, #16]
    2518:	strd	sl, [sp, #24]
    251c:	str	lr, [sp, #32]
    2520:	sub	sp, sp, #108	; 0x6c
    2524:	add	r4, sp, #72	; 0x48
    2528:	add	r8, sp, #8
    252c:	mov	r0, r4
    2530:	add	r6, sp, #40	; 0x28
    2534:	bl	d58 <ya_get_filenames@plt>
    2538:	ldr	r1, [pc, #128]	; 25c0 <ya_header+0xbc>
    253c:	mov	r0, #0
    2540:	mov	r3, r5
    2544:	mov	r2, r4
    2548:	str	r0, [sp]
    254c:	mov	r0, r8
    2550:	add	r1, pc, r1
    2554:	bl	d70 <ya_branch@plt>
    2558:	ldrd	r4, [r8, #8]
    255c:	mov	r0, r6
    2560:	ldrd	r2, [sp, #8]
    2564:	ldrd	sl, [r8, #16]
    2568:	strd	r4, [r6, #8]
    256c:	ldrd	r4, [r8, #24]
    2570:	strd	r2, [sp, #40]	; 0x28
    2574:	strd	sl, [r6, #16]
    2578:	strd	r4, [r6, #24]
    257c:	bl	e54 <ya_clear_position@plt>
    2580:	ldrd	r2, [sp, #40]	; 0x28
    2584:	mov	r0, r7
    2588:	ldrd	r4, [r6, #8]
    258c:	ldrd	r8, [r6, #16]
    2590:	strd	r2, [r7]
    2594:	ldrd	r2, [r6, #24]
    2598:	strd	r4, [r7, #8]
    259c:	strd	r8, [r7, #16]
    25a0:	strd	r2, [r7, #24]
    25a4:	add	sp, sp, #108	; 0x6c
    25a8:	ldrd	r4, [sp]
    25ac:	ldrd	r6, [sp, #8]
    25b0:	ldrd	r8, [sp, #16]
    25b4:	ldrd	sl, [sp, #24]
    25b8:	add	sp, sp, #32
    25bc:	pop	{pc}		; (ldr pc, [sp], #4)
    25c0:	.word	0x000007bc

000025c4 <ya_usage>:
    25c4:	ldr	r3, [pc, #220]	; 26a8 <ya_usage+0xe4>
    25c8:	mov	r2, #7
    25cc:	strd	r4, [sp, #-16]!
    25d0:	mov	r5, r0
    25d4:	ldr	ip, [pc, #208]	; 26ac <ya_usage+0xe8>
    25d8:	str	r6, [sp, #8]
    25dc:	mov	r6, r1
    25e0:	mov	r1, #1
    25e4:	ldr	r0, [pc, #196]	; 26b0 <ya_usage+0xec>
    25e8:	add	r3, pc, r3
    25ec:	str	lr, [sp, #12]
    25f0:	ldr	r4, [r3, ip]
    25f4:	add	r0, pc, r0
    25f8:	ldr	r3, [r4]
    25fc:	bl	d64 <fwrite@plt>
    2600:	ldr	r1, [pc, #172]	; 26b4 <ya_usage+0xf0>
    2604:	mov	r2, r5
    2608:	ldr	r0, [r4]
    260c:	add	r1, pc, r1
    2610:	bl	dac <fprintf@plt>
    2614:	ldr	r1, [pc, #156]	; 26b8 <ya_usage+0xf4>
    2618:	mov	r2, r5
    261c:	ldr	r0, [r4]
    2620:	add	r1, pc, r1
    2624:	bl	dac <fprintf@plt>
    2628:	mov	r0, #10
    262c:	ldr	r1, [r4]
    2630:	bl	e30 <fputc@plt>
    2634:	ldr	r0, [pc, #128]	; 26bc <ya_usage+0xf8>
    2638:	mov	r2, #9
    263c:	mov	r1, #1
    2640:	ldr	r3, [r4]
    2644:	add	r0, pc, r0
    2648:	bl	d64 <fwrite@plt>
    264c:	ldr	r0, [pc, #108]	; 26c0 <ya_usage+0xfc>
    2650:	mov	r2, #25
    2654:	mov	r1, #1
    2658:	ldr	r3, [r4]
    265c:	add	r0, pc, r0
    2660:	bl	d64 <fwrite@plt>
    2664:	ldr	r0, [pc, #88]	; 26c4 <ya_usage+0x100>
    2668:	mov	r2, #39	; 0x27
    266c:	mov	r1, #1
    2670:	ldr	r3, [r4]
    2674:	add	r0, pc, r0
    2678:	bl	d64 <fwrite@plt>
    267c:	ldr	r0, [pc, #68]	; 26c8 <ya_usage+0x104>
    2680:	mov	r2, #70	; 0x46
    2684:	mov	r1, #1
    2688:	ldr	r3, [r4]
    268c:	add	r0, pc, r0
    2690:	bl	d64 <fwrite@plt>
    2694:	mov	r0, #10
    2698:	ldr	r1, [r4]
    269c:	bl	e30 <fputc@plt>
    26a0:	mov	r0, r6
    26a4:	bl	d94 <exit@plt>
    26a8:	.word	0x00010a10
    26ac:	.word	0x000000cc
    26b0:	.word	0x00000720
    26b4:	.word	0x00000710
    26b8:	.word	0x00000708
    26bc:	.word	0x0000070c
    26c0:	.word	0x00000700
    26c4:	.word	0x00000704
    26c8:	.word	0x00000714

000026cc <ya_parse_options>:
    26cc:	ldr	ip, [pc, #564]	; 2908 <ya_parse_options+0x23c>
    26d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    26d4:	mov	r5, r1
    26d8:	strd	r6, [sp, #8]
    26dc:	strd	r8, [sp, #16]
    26e0:	mov	r8, r0
    26e4:	strd	sl, [sp, #24]
    26e8:	str	lr, [sp, #32]
    26ec:	sub	sp, sp, #84	; 0x54
    26f0:	add	ip, pc, ip
    26f4:	ldrd	r0, [ip, #8]
    26f8:	add	r7, sp, #16
    26fc:	str	r2, [sp, #12]
    2700:	ldrd	r2, [ip]
    2704:	ldrd	sl, [ip, #16]
    2708:	strd	r0, [r7, #8]
    270c:	ldrd	r0, [ip, #32]
    2710:	strd	r2, [sp, #16]
    2714:	ldrd	r2, [ip, #24]
    2718:	strd	sl, [r7, #16]
    271c:	ldrd	sl, [ip, #40]	; 0x28
    2720:	ldr	r6, [pc, #484]	; 290c <ya_parse_options+0x240>
    2724:	strd	r2, [r7, #24]
    2728:	ldr	lr, [pc, #480]	; 2910 <ya_parse_options+0x244>
    272c:	strd	r0, [r7, #32]
    2730:	ldrd	r2, [ip, #48]	; 0x30
    2734:	strd	sl, [r7, #40]	; 0x28
    2738:	add	r6, pc, r6
    273c:	ldrd	r0, [ip, #56]	; 0x38
    2740:	ldr	r9, [pc, #460]	; 2914 <ya_parse_options+0x248>
    2744:	strd	r2, [r7, #48]	; 0x30
    2748:	ldr	sl, [pc, #456]	; 2918 <ya_parse_options+0x24c>
    274c:	strd	r0, [r7, #56]	; 0x38
    2750:	ldr	fp, [pc, #452]	; 291c <ya_parse_options+0x250>
    2754:	add	r9, pc, r9
    2758:	ldr	r3, [r6, lr]
    275c:	add	sl, pc, sl
    2760:	add	fp, pc, fp
    2764:	str	r3, [sp, #8]
    2768:	mov	r4, #0
    276c:	mov	r3, r7
    2770:	mov	r2, r9
    2774:	str	r4, [sp]
    2778:	mov	r1, r5
    277c:	mov	r0, r8
    2780:	bl	d88 <getopt_long@plt>
    2784:	cmn	r0, #1
    2788:	beq	2874 <ya_parse_options+0x1a8>
    278c:	cmp	r0, #63	; 0x3f
    2790:	beq	2868 <ya_parse_options+0x19c>
    2794:	ble	27c4 <ya_parse_options+0xf8>
    2798:	cmp	r0, #104	; 0x68
    279c:	beq	2858 <ya_parse_options+0x18c>
    27a0:	cmp	r0, #111	; 0x6f
    27a4:	bne	2844 <ya_parse_options+0x178>
    27a8:	ldr	r3, [pc, #368]	; 2920 <ya_parse_options+0x254>
    27ac:	mov	r4, #0
    27b0:	ldr	r2, [sp, #8]
    27b4:	ldr	r3, [r6, r3]
    27b8:	ldr	r3, [r3]
    27bc:	str	r3, [r2]
    27c0:	b	276c <ya_parse_options+0xa0>
    27c4:	cmp	r0, #0
    27c8:	beq	276c <ya_parse_options+0xa0>
    27cc:	cmp	r0, #58	; 0x3a
    27d0:	ldr	r3, [pc, #332]	; 2924 <ya_parse_options+0x258>
    27d4:	bne	2850 <ya_parse_options+0x184>
    27d8:	ldr	r0, [pc, #328]	; 2928 <ya_parse_options+0x25c>
    27dc:	mov	r1, #1
    27e0:	mov	r2, #24
    27e4:	ldr	r4, [r6, r3]
    27e8:	add	r0, pc, r0
    27ec:	ldr	r3, [r4]
    27f0:	bl	d64 <fwrite@plt>
    27f4:	mov	r1, #2
    27f8:	ldr	r0, [r5]
    27fc:	bl	e60 <ya_usage@plt>
    2800:	mov	r1, #1
    2804:	mov	r2, #15
    2808:	ldr	r3, [r4]
    280c:	mov	r0, fp
    2810:	bl	d64 <fwrite@plt>
    2814:	mov	r1, #2
    2818:	ldr	r0, [r5]
    281c:	bl	e60 <ya_usage@plt>
    2820:	mov	r2, #31
    2824:	mov	r1, #1
    2828:	ldr	r3, [r4]
    282c:	mov	r0, sl
    2830:	bl	d64 <fwrite@plt>
    2834:	mov	r1, #2
    2838:	ldr	r0, [r5]
    283c:	bl	e60 <ya_usage@plt>
    2840:	b	2768 <ya_parse_options+0x9c>
    2844:	cmp	r0, #99	; 0x63
    2848:	beq	276c <ya_parse_options+0xa0>
    284c:	ldr	r3, [pc, #208]	; 2924 <ya_parse_options+0x258>
    2850:	ldr	r4, [r6, r3]
    2854:	b	2820 <ya_parse_options+0x154>
    2858:	mov	r1, #0
    285c:	ldr	r0, [r5]
    2860:	bl	e60 <ya_usage@plt>
    2864:	b	2768 <ya_parse_options+0x9c>
    2868:	ldr	r3, [pc, #180]	; 2924 <ya_parse_options+0x258>
    286c:	ldr	r4, [r6, r3]
    2870:	b	2800 <ya_parse_options+0x134>
    2874:	ldr	r3, [pc, #176]	; 292c <ya_parse_options+0x260>
    2878:	ldr	r3, [r6, r3]
    287c:	ldr	r4, [r3]
    2880:	sub	r8, r8, r4
    2884:	cmp	r8, #1
    2888:	beq	28b8 <ya_parse_options+0x1ec>
    288c:	ldr	r3, [pc, #144]	; 2924 <ya_parse_options+0x258>
    2890:	mov	r1, #1
    2894:	mov	r2, #29
    2898:	ldr	r0, [pc, #144]	; 2930 <ya_parse_options+0x264>
    289c:	ldr	r3, [r6, r3]
    28a0:	add	r0, pc, r0
    28a4:	ldr	r3, [r3]
    28a8:	bl	d64 <fwrite@plt>
    28ac:	mov	r1, #2
    28b0:	ldr	r0, [r5, r4, lsl #2]
    28b4:	bl	e60 <ya_usage@plt>
    28b8:	ldr	r2, [sp, #8]
    28bc:	ldr	r3, [pc, #112]	; 2934 <ya_parse_options+0x268>
    28c0:	ldr	r0, [r5, r4, lsl #2]
    28c4:	ldr	r2, [r2]
    28c8:	ldr	r3, [r6, r3]
    28cc:	cmp	r2, #0
    28d0:	str	r0, [r3]
    28d4:	beq	28f4 <ya_parse_options+0x228>
    28d8:	add	sp, sp, #84	; 0x54
    28dc:	ldrd	r4, [sp]
    28e0:	ldrd	r6, [sp, #8]
    28e4:	ldrd	r8, [sp, #16]
    28e8:	ldrd	sl, [sp, #24]
    28ec:	add	sp, sp, #32
    28f0:	pop	{pc}		; (ldr pc, [sp], #4)
    28f4:	ldr	r1, [sp, #12]
    28f8:	bl	e48 <ya_new_extension@plt>
    28fc:	ldr	r3, [sp, #8]
    2900:	str	r0, [r3]
    2904:	b	28d8 <ya_parse_options+0x20c>
    2908:	.word	0x00010a30
    290c:	.word	0x000108c0
    2910:	.word	0x000000f8
    2914:	.word	0x000006e0
    2918:	.word	0x000006b8
    291c:	.word	0x000006a4
    2920:	.word	0x000000fc
    2924:	.word	0x000000cc
    2928:	.word	0x00000600
    292c:	.word	0x000000c4
    2930:	.word	0x0000059c
    2934:	.word	0x000000bc

00002938 <ya_main>:
    2938:	strd	r4, [sp, #-36]!	; 0xffffffdc
    293c:	mov	r4, r0
    2940:	mov	r5, r1
    2944:	ldr	ip, [pc, #440]	; 2b04 <ya_main+0x1cc>
    2948:	strd	sl, [sp, #24]
    294c:	ldr	sl, [pc, #436]	; 2b08 <ya_main+0x1d0>
    2950:	strd	r6, [sp, #8]
    2954:	strd	r8, [sp, #16]
    2958:	mov	r8, r2
    295c:	str	lr, [sp, #32]
    2960:	sub	sp, sp, #52	; 0x34
    2964:	add	r6, sp, #8
    2968:	add	sl, pc, sl
    296c:	mov	r0, r6
    2970:	ldr	fp, [sl, ip]
    2974:	bl	d1c <ya_null@plt>
    2978:	mov	r1, r5
    297c:	mov	r0, r4
    2980:	ldrd	r4, [r6, #8]
    2984:	mov	r2, r8
    2988:	ldrd	r8, [r6, #16]
    298c:	strd	r4, [sp]
    2990:	ldrd	r4, [sp, #8]
    2994:	strd	r4, [fp]
    2998:	ldrd	r4, [sp]
    299c:	ldrd	r6, [r6, #24]
    29a0:	strd	r4, [fp, #8]
    29a4:	strd	r8, [fp, #16]
    29a8:	strd	r6, [fp, #24]
    29ac:	bl	e84 <ya_parse_options@plt>
    29b0:	ldr	r3, [pc, #340]	; 2b0c <ya_main+0x1d4>
    29b4:	ldr	r1, [pc, #340]	; 2b10 <ya_main+0x1d8>
    29b8:	ldr	r6, [sl, r3]
    29bc:	add	r1, pc, r1
    29c0:	ldr	r4, [r6]
    29c4:	mov	r0, r4
    29c8:	bl	cc8 <strcmp@plt>
    29cc:	cmp	r0, #0
    29d0:	bne	2a9c <ya_main+0x164>
    29d4:	ldr	r2, [pc, #312]	; 2b14 <ya_main+0x1dc>
    29d8:	ldr	r3, [pc, #312]	; 2b18 <ya_main+0x1e0>
    29dc:	ldr	r2, [sl, r2]
    29e0:	ldr	r5, [sl, r3]
    29e4:	ldr	r3, [r2]
    29e8:	str	r3, [r5]
    29ec:	ldr	r1, [pc, #296]	; 2b1c <ya_main+0x1e4>
    29f0:	mov	r2, r4
    29f4:	add	r0, sp, #44	; 0x2c
    29f8:	add	r1, pc, r1
    29fc:	bl	de8 <asprintf@plt>
    2a00:	cmp	r0, #0
    2a04:	blt	2a28 <ya_main+0xf0>
    2a08:	ldr	r4, [sp, #44]	; 0x2c
    2a0c:	mov	r0, r4
    2a10:	bl	da0 <strlen@plt>
    2a14:	mov	r1, r0
    2a18:	mov	r0, r4
    2a1c:	bl	ca4 <ya_reposition@plt>
    2a20:	ldr	r0, [sp, #44]	; 0x2c
    2a24:	bl	cf8 <free@plt>
    2a28:	bl	d28 <yyparse@plt>
    2a2c:	ldr	r0, [r5]
    2a30:	bl	e00 <fclose@plt>
    2a34:	ldr	r3, [pc, #228]	; 2b20 <ya_main+0x1e8>
    2a38:	ldr	r1, [pc, #228]	; 2b24 <ya_main+0x1ec>
    2a3c:	ldr	r3, [sl, r3]
    2a40:	add	r1, pc, r1
    2a44:	ldr	r4, [r3]
    2a48:	mov	r0, r4
    2a4c:	bl	cc8 <strcmp@plt>
    2a50:	cmp	r0, #0
    2a54:	bne	2ad8 <ya_main+0x1a0>
    2a58:	ldr	r3, [pc, #200]	; 2b28 <ya_main+0x1f0>
    2a5c:	ldr	r3, [sl, r3]
    2a60:	ldr	r4, [r3]
    2a64:	mov	r0, r4
    2a68:	ldr	r3, [pc, #188]	; 2b2c <ya_main+0x1f4>
    2a6c:	ldr	r1, [sl, r3]
    2a70:	bl	cb0 <ya_node_save@plt>
    2a74:	mov	r0, r4
    2a78:	bl	e00 <fclose@plt>
    2a7c:	mov	r0, #0
    2a80:	add	sp, sp, #52	; 0x34
    2a84:	ldrd	r4, [sp]
    2a88:	ldrd	r6, [sp, #8]
    2a8c:	ldrd	r8, [sp, #16]
    2a90:	ldrd	sl, [sp, #24]
    2a94:	add	sp, sp, #32
    2a98:	pop	{pc}		; (ldr pc, [sp], #4)
    2a9c:	ldr	r1, [pc, #140]	; 2b30 <ya_main+0x1f8>
    2aa0:	mov	r0, r4
    2aa4:	add	r1, pc, r1
    2aa8:	bl	cec <fopen@plt>
    2aac:	ldr	r3, [pc, #100]	; 2b18 <ya_main+0x1e0>
    2ab0:	cmp	r0, #0
    2ab4:	ldrne	r4, [r6]
    2ab8:	ldr	r5, [sl, r3]
    2abc:	str	r0, [r5]
    2ac0:	bne	29ec <ya_main+0xb4>
    2ac4:	ldr	r0, [pc, #104]	; 2b34 <ya_main+0x1fc>
    2ac8:	add	r0, pc, r0
    2acc:	bl	d4c <perror@plt>
    2ad0:	mvn	r0, #0
    2ad4:	b	2a80 <ya_main+0x148>
    2ad8:	ldr	r1, [pc, #88]	; 2b38 <ya_main+0x200>
    2adc:	mov	r0, r4
    2ae0:	add	r1, pc, r1
    2ae4:	bl	cec <fopen@plt>
    2ae8:	subs	r4, r0, #0
    2aec:	bne	2a64 <ya_main+0x12c>
    2af0:	ldr	r0, [pc, #68]	; 2b3c <ya_main+0x204>
    2af4:	add	r0, pc, r0
    2af8:	bl	d4c <perror@plt>
    2afc:	mvn	r0, #0
    2b00:	b	2a80 <ya_main+0x148>
    2b04:	.word	0x000000d4
    2b08:	.word	0x00010690
    2b0c:	.word	0x000000bc
    2b10:	.word	0x000004a0
    2b14:	.word	0x000000dc
    2b18:	.word	0x000000c0
    2b1c:	.word	0x00000488
    2b20:	.word	0x000000f8
    2b24:	.word	0x0000041c
    2b28:	.word	0x000000e4
    2b2c:	.word	0x000000d8
    2b30:	.word	0x000003bc
    2b34:	.word	0x0000039c
    2b38:	.word	0x000003a8
    2b3c:	.word	0x00000398

Disassembly of section .fini:

00002b40 <_fini>:
    2b40:	push	{r3, lr}
    2b44:	pop	{r3, pc}
