
../repos/charybdis/extensions/.libs/chm_operpeace.so:     file format elf32-littlearm


Disassembly of section .init:

00000464 <_init>:
 464:	push	{r3, lr}
 468:	bl	4d8 <call_weak_fn>
 46c:	pop	{r3, pc}

Disassembly of section .plt:

00000470 <.plt>:
 470:	push	{lr}		; (str lr, [sp, #-4]!)
 474:	ldr	lr, [pc, #4]	; 480 <.plt+0x10>
 478:	add	lr, pc, lr
 47c:	ldr	pc, [lr, #8]!
 480:	.word	0x00010b80

00000484 <cflag_add@plt>:
 484:	add	ip, pc, #0, 12
 488:	add	ip, ip, #16, 20	; 0x10000
 48c:	ldr	pc, [ip, #2944]!	; 0xb80

00000490 <__cxa_finalize@plt>:
 490:	add	ip, pc, #0, 12
 494:	add	ip, ip, #16, 20	; 0x10000
 498:	ldr	pc, [ip, #2936]!	; 0xb78

0000049c <sendto_realops_snomask@plt>:
 49c:	add	ip, pc, #0, 12
 4a0:	add	ip, ip, #16, 20	; 0x10000
 4a4:	ldr	pc, [ip, #2928]!	; 0xb70

000004a8 <__gmon_start__@plt>:
 4a8:	add	ip, pc, #0, 12
 4ac:	add	ip, ip, #16, 20	; 0x10000
 4b0:	ldr	pc, [ip, #2920]!	; 0xb68

000004b4 <sendto_one_numeric@plt>:
 4b4:	add	ip, pc, #0, 12
 4b8:	add	ip, ip, #16, 20	; 0x10000
 4bc:	ldr	pc, [ip, #2912]!	; 0xb60

000004c0 <privilegeset_in_set@plt>:
 4c0:	add	ip, pc, #0, 12
 4c4:	add	ip, ip, #16, 20	; 0x10000
 4c8:	ldr	pc, [ip, #2904]!	; 0xb58

000004cc <cflag_orphan@plt>:
 4cc:	add	ip, pc, #0, 12
 4d0:	add	ip, ip, #16, 20	; 0x10000
 4d4:	ldr	pc, [ip, #2896]!	; 0xb50

Disassembly of section .text:

000004d8 <call_weak_fn>:
 4d8:	ldr	r3, [pc, #20]	; 4f4 <call_weak_fn+0x1c>
 4dc:	ldr	r2, [pc, #20]	; 4f8 <call_weak_fn+0x20>
 4e0:	add	r3, pc, r3
 4e4:	ldr	r2, [r3, r2]
 4e8:	cmp	r2, #0
 4ec:	bxeq	lr
 4f0:	b	4a8 <__gmon_start__@plt>
 4f4:	.word	0x00010b18
 4f8:	.word	0x00000034

000004fc <deregister_tm_clones>:
 4fc:	ldr	r3, [pc, #52]	; 538 <deregister_tm_clones+0x3c>
 500:	ldr	r0, [pc, #52]	; 53c <deregister_tm_clones+0x40>
 504:	add	r3, pc, r3
 508:	add	r0, pc, r0
 50c:	add	r3, r3, #3
 510:	sub	r3, r3, r0
 514:	cmp	r3, #6
 518:	ldr	r3, [pc, #32]	; 540 <deregister_tm_clones+0x44>
 51c:	add	r3, pc, r3
 520:	bxls	lr
 524:	ldr	r2, [pc, #24]	; 544 <deregister_tm_clones+0x48>
 528:	ldr	r3, [r3, r2]
 52c:	cmp	r3, #0
 530:	bxeq	lr
 534:	bx	r3
 538:	.word	0x00010b78
 53c:	.word	0x00010b74
 540:	.word	0x00010adc
 544:	.word	0x0000002c

00000548 <register_tm_clones>:
 548:	ldr	r1, [pc, #56]	; 588 <register_tm_clones+0x40>
 54c:	ldr	r0, [pc, #56]	; 58c <register_tm_clones+0x44>
 550:	add	r1, pc, r1
 554:	add	r0, pc, r0
 558:	sub	r1, r1, r0
 55c:	ldr	r3, [pc, #44]	; 590 <register_tm_clones+0x48>
 560:	asr	r1, r1, #2
 564:	add	r3, pc, r3
 568:	add	r1, r1, r1, lsr #31
 56c:	asrs	r1, r1, #1
 570:	bxeq	lr
 574:	ldr	r2, [pc, #24]	; 594 <register_tm_clones+0x4c>
 578:	ldr	r3, [r3, r2]
 57c:	cmp	r3, #0
 580:	bxeq	lr
 584:	bx	r3
 588:	.word	0x00010b2c
 58c:	.word	0x00010b28
 590:	.word	0x00010a94
 594:	.word	0x0000003c

00000598 <__do_global_dtors_aux>:
 598:	ldr	r3, [pc, #76]	; 5ec <__do_global_dtors_aux+0x54>
 59c:	ldr	r2, [pc, #76]	; 5f0 <__do_global_dtors_aux+0x58>
 5a0:	add	r3, pc, r3
 5a4:	add	r2, pc, r2
 5a8:	ldrb	r3, [r3]
 5ac:	cmp	r3, #0
 5b0:	bxne	lr
 5b4:	ldr	r3, [pc, #56]	; 5f4 <__do_global_dtors_aux+0x5c>
 5b8:	push	{r4, lr}
 5bc:	ldr	r3, [r2, r3]
 5c0:	cmp	r3, #0
 5c4:	beq	5d4 <__do_global_dtors_aux+0x3c>
 5c8:	ldr	r3, [pc, #40]	; 5f8 <__do_global_dtors_aux+0x60>
 5cc:	ldr	r0, [pc, r3]
 5d0:	bl	490 <__cxa_finalize@plt>
 5d4:	bl	4fc <deregister_tm_clones>
 5d8:	ldr	r3, [pc, #28]	; 5fc <__do_global_dtors_aux+0x64>
 5dc:	mov	r2, #1
 5e0:	add	r3, pc, r3
 5e4:	strb	r2, [r3]
 5e8:	pop	{r4, pc}
 5ec:	.word	0x00010adc
 5f0:	.word	0x00010a54
 5f4:	.word	0x00000028
 5f8:	.word	0x00010a6c
 5fc:	.word	0x00010a9c

00000600 <frame_dummy>:
 600:	ldr	r0, [pc, #56]	; 640 <frame_dummy+0x40>
 604:	ldr	r3, [pc, #56]	; 644 <frame_dummy+0x44>
 608:	add	r0, pc, r0
 60c:	ldr	r2, [r0]
 610:	add	r3, pc, r3
 614:	cmp	r2, #0
 618:	bne	620 <frame_dummy+0x20>
 61c:	b	548 <register_tm_clones>
 620:	ldr	r2, [pc, #32]	; 648 <frame_dummy+0x48>
 624:	ldr	r3, [r3, r2]
 628:	cmp	r3, #0
 62c:	beq	61c <frame_dummy+0x1c>
 630:	push	{r4, lr}
 634:	blx	r3
 638:	pop	{r4, lr}
 63c:	b	548 <register_tm_clones>
 640:	.word	0x000108ec
 644:	.word	0x000109e8
 648:	.word	0x00000038

0000064c <_modinit>:
 64c:	push	{fp, lr}
 650:	add	fp, sp, #4
 654:	ldr	r2, [pc, #76]	; 6a8 <_modinit+0x5c>
 658:	add	r2, pc, r2
 65c:	ldr	r3, [pc, #72]	; 6ac <_modinit+0x60>
 660:	ldr	r3, [r2, r3]
 664:	mov	r1, r3
 668:	mov	r0, #77	; 0x4d
 66c:	bl	484 <cflag_add@plt>
 670:	mov	r2, r0
 674:	ldr	r3, [pc, #52]	; 6b0 <_modinit+0x64>
 678:	add	r3, pc, r3
 67c:	str	r2, [r3]
 680:	ldr	r3, [pc, #44]	; 6b4 <_modinit+0x68>
 684:	add	r3, pc, r3
 688:	ldr	r3, [r3]
 68c:	cmp	r3, #0
 690:	bne	69c <_modinit+0x50>
 694:	mvn	r3, #0
 698:	b	6a0 <_modinit+0x54>
 69c:	mov	r3, #0
 6a0:	mov	r0, r3
 6a4:	pop	{fp, pc}
 6a8:	.word	0x000109a0
 6ac:	.word	0x00000030
 6b0:	.word	0x00010a08
 6b4:	.word	0x000109fc

000006b8 <_moddeinit>:
 6b8:	push	{fp, lr}
 6bc:	add	fp, sp, #4
 6c0:	mov	r0, #77	; 0x4d
 6c4:	bl	4cc <cflag_orphan@plt>
 6c8:	nop			; (mov r0, r0)
 6cc:	pop	{fp, pc}

000006d0 <hdl_can_kick>:
 6d0:	push	{fp, lr}
 6d4:	add	fp, sp, #4
 6d8:	sub	sp, sp, #32
 6dc:	str	r0, [fp, #-24]	; 0xffffffe8
 6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6e4:	ldr	r3, [r3]
 6e8:	str	r3, [fp, #-8]
 6ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6f0:	ldr	r3, [r3, #12]
 6f4:	str	r3, [fp, #-12]
 6f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6fc:	ldr	r3, [r3, #4]
 700:	str	r3, [fp, #-16]
 704:	ldr	r3, [fp, #-8]
 708:	ldr	r3, [r3, #56]	; 0x38
 70c:	and	r3, r3, #4096	; 0x1000
 710:	cmp	r3, #0
 714:	bne	7fc <hdl_can_kick+0x12c>
 718:	ldr	r3, [fp, #-16]
 71c:	ldr	r2, [r3, #12]
 720:	ldr	r3, [pc, #224]	; 808 <hdl_can_kick+0x138>
 724:	add	r3, pc, r3
 728:	ldr	r3, [r3]
 72c:	and	r3, r3, r2
 730:	cmp	r3, #0
 734:	beq	800 <hdl_can_kick+0x130>
 738:	ldr	r3, [fp, #-12]
 73c:	ldr	r3, [r3, #24]
 740:	cmp	r3, #0
 744:	beq	800 <hdl_can_kick+0x130>
 748:	ldr	r3, [fp, #-12]
 74c:	ldr	r3, [r3, #24]
 750:	ldr	r3, [r3, #36]	; 0x24
 754:	cmp	r3, #0
 758:	beq	800 <hdl_can_kick+0x130>
 75c:	ldr	r3, [fp, #-12]
 760:	ldr	r3, [r3, #24]
 764:	ldr	r3, [r3, #36]	; 0x24
 768:	ldr	r2, [pc, #156]	; 80c <hdl_can_kick+0x13c>
 76c:	add	r2, pc, r2
 770:	mov	r1, r2
 774:	mov	r0, r3
 778:	bl	4c0 <privilegeset_in_set@plt>
 77c:	mov	r3, r0
 780:	cmp	r3, #0
 784:	beq	800 <hdl_can_kick+0x130>
 788:	ldr	r3, [fp, #-8]
 78c:	add	r1, r3, #88	; 0x58
 790:	ldr	r3, [fp, #-12]
 794:	add	r3, r3, #88	; 0x58
 798:	ldr	r2, [fp, #-16]
 79c:	ldr	r2, [r2, #236]	; 0xec
 7a0:	str	r2, [sp, #4]
 7a4:	str	r3, [sp]
 7a8:	mov	r3, r1
 7ac:	ldr	r2, [pc, #92]	; 810 <hdl_can_kick+0x140>
 7b0:	add	r2, pc, r2
 7b4:	mov	r1, #256	; 0x100
 7b8:	mov	r0, #256	; 0x100
 7bc:	bl	49c <sendto_realops_snomask@plt>
 7c0:	ldr	r3, [fp, #-12]
 7c4:	add	r2, r3, #88	; 0x58
 7c8:	ldr	r3, [fp, #-16]
 7cc:	ldr	r3, [r3, #236]	; 0xec
 7d0:	str	r3, [sp]
 7d4:	mov	r3, r2
 7d8:	ldr	r2, [pc, #52]	; 814 <hdl_can_kick+0x144>
 7dc:	add	r2, pc, r2
 7e0:	mov	r1, #484	; 0x1e4
 7e4:	ldr	r0, [fp, #-8]
 7e8:	bl	4b4 <sendto_one_numeric@plt>
 7ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7f0:	mov	r2, #0
 7f4:	str	r2, [r3, #16]
 7f8:	b	800 <hdl_can_kick+0x130>
 7fc:	nop			; (mov r0, r0)
 800:	sub	sp, fp, #4
 804:	pop	{fp, pc}
 808:	.word	0x0001095c
 80c:	.word	0x000000fc
 810:	.word	0x000000d0
 814:	.word	0x000000d4

Disassembly of section .fini:

00000818 <_fini>:
 818:	push	{r3, lr}
 81c:	pop	{r3, pc}
