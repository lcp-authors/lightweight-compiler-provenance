
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

00000730 <_init>:
 730:	push	{r3, lr}
 734:	bl	864 <call_weak_fn>
 738:	pop	{r3, pc}

Disassembly of section .plt:

0000073c <.plt>:
 73c:	push	{lr}		; (str lr, [sp, #-4]!)
 740:	ldr	lr, [pc, #4]	; 74c <.plt+0x10>
 744:	add	lr, pc, lr
 748:	ldr	pc, [lr, #8]!
 74c:	.word	0x000118b4

00000750 <calloc@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2228]!	; 0x8b4

0000075c <mod_del_cmd@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2220]!	; 0x8ac

00000768 <__cxa_finalize@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2212]!	; 0x8a4

00000774 <sendto_one@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2204]!	; 0x89c

00000780 <free@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2196]!	; 0x894

0000078c <memcpy@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2188]!	; 0x88c

00000798 <rb_outofmemory@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2180]!	; 0x884

000007a4 <rb_free_rb_dlink_node@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2172]!	; 0x87c

000007b0 <rb_dictionary_foreach_start@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2164]!	; 0x874

000007bc <msgbuf_reconstruct_tail@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2156]!	; 0x86c

000007c8 <__gmon_start__@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2148]!	; 0x864

000007d4 <rb_make_rb_dlink_node@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2140]!	; 0x85c

000007e0 <sendto_one_numeric@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2132]!	; 0x854

000007ec <strlen@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2124]!	; 0x84c

000007f8 <strchr@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2116]!	; 0x844

00000804 <find_server@plt>:
 804:	add	ip, pc, #0, 12
 808:	add	ip, ip, #69632	; 0x11000
 80c:	ldr	pc, [ip, #2108]!	; 0x83c

00000810 <rb_dictionary_foreach_cur@plt>:
 810:	add	ip, pc, #0, 12
 814:	add	ip, ip, #69632	; 0x11000
 818:	ldr	pc, [ip, #2100]!	; 0x834

0000081c <find_named_person@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2092]!	; 0x82c

00000828 <flood_endgrace@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2084]!	; 0x824

00000834 <rb_dictionary_foreach_next@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2076]!	; 0x81c

00000840 <mod_add_cmd@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2068]!	; 0x814

0000084c <rb_dictionary_retrieve@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #2060]!	; 0x80c

00000858 <__assert_fail@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #2052]!	; 0x804

Disassembly of section .text:

00000864 <call_weak_fn>:
     864:	ldr	r3, [pc, #20]	; 880 <call_weak_fn+0x1c>
     868:	ldr	r2, [pc, #20]	; 884 <call_weak_fn+0x20>
     86c:	add	r3, pc, r3
     870:	ldr	r2, [r3, r2]
     874:	cmp	r2, #0
     878:	bxeq	lr
     87c:	b	7c8 <__gmon_start__@plt>
     880:	.word	0x0001178c
     884:	.word	0x00000074

00000888 <deregister_tm_clones>:
     888:	ldr	r0, [pc, #44]	; 8bc <deregister_tm_clones+0x34>
     88c:	ldr	r3, [pc, #44]	; 8c0 <deregister_tm_clones+0x38>
     890:	add	r0, pc, r0
     894:	add	r3, pc, r3
     898:	cmp	r3, r0
     89c:	ldr	r3, [pc, #32]	; 8c4 <deregister_tm_clones+0x3c>
     8a0:	add	r3, pc, r3
     8a4:	bxeq	lr
     8a8:	ldr	r2, [pc, #24]	; 8c8 <deregister_tm_clones+0x40>
     8ac:	ldr	r3, [r3, r2]
     8b0:	cmp	r3, #0
     8b4:	bxeq	lr
     8b8:	bx	r3
     8bc:	.word	0x0001182c
     8c0:	.word	0x00011828
     8c4:	.word	0x00011758
     8c8:	.word	0x0000006c

000008cc <register_tm_clones>:
     8cc:	ldr	r0, [pc, #56]	; 90c <register_tm_clones+0x40>
     8d0:	ldr	r3, [pc, #56]	; 910 <register_tm_clones+0x44>
     8d4:	add	r0, pc, r0
     8d8:	add	r3, pc, r3
     8dc:	sub	r1, r3, r0
     8e0:	ldr	r3, [pc, #44]	; 914 <register_tm_clones+0x48>
     8e4:	asr	r1, r1, #2
     8e8:	add	r3, pc, r3
     8ec:	add	r1, r1, r1, lsr #31
     8f0:	asrs	r1, r1, #1
     8f4:	bxeq	lr
     8f8:	ldr	r2, [pc, #24]	; 918 <register_tm_clones+0x4c>
     8fc:	ldr	r3, [r3, r2]
     900:	cmp	r3, #0
     904:	bxeq	lr
     908:	bx	r3
     90c:	.word	0x000117e8
     910:	.word	0x000117e4
     914:	.word	0x00011710
     918:	.word	0x00000078

0000091c <__do_global_dtors_aux>:
     91c:	ldr	r3, [pc, #76]	; 970 <__do_global_dtors_aux+0x54>
     920:	ldr	r2, [pc, #76]	; 974 <__do_global_dtors_aux+0x58>
     924:	add	r3, pc, r3
     928:	add	r2, pc, r2
     92c:	ldrb	r3, [r3]
     930:	cmp	r3, #0
     934:	bxne	lr
     938:	ldr	r3, [pc, #56]	; 978 <__do_global_dtors_aux+0x5c>
     93c:	push	{r4, lr}
     940:	ldr	r3, [r2, r3]
     944:	cmp	r3, #0
     948:	beq	958 <__do_global_dtors_aux+0x3c>
     94c:	ldr	r3, [pc, #40]	; 97c <__do_global_dtors_aux+0x60>
     950:	ldr	r0, [pc, r3]
     954:	bl	768 <__cxa_finalize@plt>
     958:	bl	888 <deregister_tm_clones>
     95c:	ldr	r3, [pc, #28]	; 980 <__do_global_dtors_aux+0x64>
     960:	mov	r2, #1
     964:	add	r3, pc, r3
     968:	strb	r2, [r3]
     96c:	pop	{r4, pc}
     970:	.word	0x00011798
     974:	.word	0x000116d0
     978:	.word	0x00000068
     97c:	.word	0x00011728
     980:	.word	0x00011758

00000984 <frame_dummy>:
     984:	b	8cc <register_tm_clones>

00000988 <m_alias>:
     988:	strd	r4, [sp, #-32]!	; 0xffffffe0
     98c:	mov	r4, r1
     990:	ldr	r5, [pc, #548]	; bbc <m_alias+0x234>
     994:	ldr	r3, [pc, #548]	; bc0 <m_alias+0x238>
     998:	ldr	r1, [r0, #192]	; 0xc0
     99c:	add	r5, pc, r5
     9a0:	strd	r6, [sp, #8]
     9a4:	mov	r6, r0
     9a8:	strd	r8, [sp, #16]
     9ac:	str	sl, [sp, #24]
     9b0:	str	lr, [sp, #28]
     9b4:	ldr	r3, [r5, r3]
     9b8:	ldr	r7, [sp, #32]
     9bc:	ldr	r0, [r3]
     9c0:	bl	84c <rb_dictionary_retrieve@plt>
     9c4:	subs	r8, r0, #0
     9c8:	beq	b64 <m_alias+0x1dc>
     9cc:	ldr	r1, [r4, #64]	; 0x40
     9d0:	mov	r3, #0
     9d4:	and	r2, r1, #256	; 0x100
     9d8:	orrs	r3, r2, r3
     9dc:	beq	a88 <m_alias+0x100>
     9e0:	ldr	r9, [r8, #4]
     9e4:	mov	r1, #64	; 0x40
     9e8:	mov	r0, r9
     9ec:	bl	7f8 <strchr@plt>
     9f0:	subs	sl, r0, #0
     9f4:	beq	aa4 <m_alias+0x11c>
     9f8:	add	r1, sl, #1
     9fc:	mov	r0, #0
     a00:	bl	804 <find_server@plt>
     a04:	subs	r9, r0, #0
     a08:	beq	ac0 <m_alias+0x138>
     a0c:	ldrh	r3, [r9, #80]	; 0x50
     a10:	cmp	r3, #4
     a14:	beq	ac0 <m_alias+0x138>
     a18:	mov	r0, r6
     a1c:	mov	r1, #1
     a20:	bl	7bc <msgbuf_reconstruct_tail@plt>
     a24:	ldr	ip, [r7, #4]
     a28:	cmp	ip, #0
     a2c:	beq	b2c <m_alias+0x1a4>
     a30:	ldrb	r3, [ip]
     a34:	cmp	r3, #0
     a38:	beq	b2c <m_alias+0x1a4>
     a3c:	ldr	r3, [r9, #36]	; 0x24
     a40:	ldrh	r2, [r3, #80]	; 0x50
     a44:	cmp	r2, #32
     a48:	beq	af0 <m_alias+0x168>
     a4c:	cmp	sl, #0
     a50:	add	r2, r4, #88	; 0x58
     a54:	beq	b24 <m_alias+0x19c>
     a58:	ldr	r3, [r8, #4]
     a5c:	mov	r0, r9
     a60:	str	ip, [sp, #32]
     a64:	ldr	r1, [pc, #344]	; bc4 <m_alias+0x23c>
     a68:	add	r1, pc, r1
     a6c:	ldrd	r4, [sp]
     a70:	ldrd	r6, [sp, #8]
     a74:	ldrd	r8, [sp, #16]
     a78:	ldr	sl, [sp, #24]
     a7c:	ldr	lr, [sp, #28]
     a80:	add	sp, sp, #32
     a84:	b	774 <sendto_one@plt>
     a88:	ldr	r3, [r4, #432]	; 0x1b0
     a8c:	ldr	r3, [r3, #116]	; 0x74
     a90:	cmp	r3, #20
     a94:	bls	9e0 <m_alias+0x58>
     a98:	mov	r0, r4
     a9c:	bl	828 <flood_endgrace@plt>
     aa0:	b	9e0 <m_alias+0x58>
     aa4:	mov	r0, r9
     aa8:	bl	81c <find_named_person@plt>
     aac:	subs	r9, r0, #0
     ab0:	beq	ac0 <m_alias+0x138>
     ab4:	ldr	r3, [r9, #56]	; 0x38
     ab8:	tst	r3, #64	; 0x40
     abc:	bne	a18 <m_alias+0x90>
     ac0:	ldr	r2, [pc, #256]	; bc8 <m_alias+0x240>
     ac4:	mov	r0, r4
     ac8:	mov	r1, #440	; 0x1b8
     acc:	ldrd	r4, [sp]
     ad0:	ldr	r3, [r8, #4]
     ad4:	add	r2, pc, r2
     ad8:	ldrd	r6, [sp, #8]
     adc:	ldrd	r8, [sp, #16]
     ae0:	ldr	sl, [sp, #24]
     ae4:	ldr	lr, [sp, #28]
     ae8:	add	sp, sp, #32
     aec:	b	7e0 <sendto_one_numeric@plt>
     af0:	ldrb	r3, [r3, #396]	; 0x18c
     af4:	cmp	r3, #0
     af8:	beq	a4c <m_alias+0xc4>
     afc:	ldrb	r3, [r4, #396]	; 0x18c
     b00:	cmp	r3, #0
     b04:	addne	r2, r4, #396	; 0x18c
     b08:	addeq	r2, r4, #88	; 0x58
     b0c:	cmp	sl, #0
     b10:	bne	a58 <m_alias+0xd0>
     b14:	ldrb	r3, [r9, #396]	; 0x18c
     b18:	cmp	r3, #0
     b1c:	addne	r3, r9, #396	; 0x18c
     b20:	bne	a5c <m_alias+0xd4>
     b24:	add	r3, r9, #88	; 0x58
     b28:	b	a5c <m_alias+0xd4>
     b2c:	ldr	r2, [pc, #152]	; bcc <m_alias+0x244>
     b30:	add	r3, r9, #88	; 0x58
     b34:	mov	r0, r4
     b38:	ldr	r1, [pc, #144]	; bd0 <m_alias+0x248>
     b3c:	ldrd	r6, [sp, #8]
     b40:	ldr	r2, [r5, r2]
     b44:	add	r1, pc, r1
     b48:	ldrd	r4, [sp]
     b4c:	ldrd	r8, [sp, #16]
     b50:	add	r2, r2, #88	; 0x58
     b54:	ldr	sl, [sp, #24]
     b58:	ldr	lr, [sp, #28]
     b5c:	add	sp, sp, #32
     b60:	b	774 <sendto_one@plt>
     b64:	ldrh	r3, [r4, #80]	; 0x50
     b68:	cmp	r3, #64	; 0x40
     b6c:	beq	b88 <m_alias+0x200>
     b70:	ldrd	r4, [sp]
     b74:	ldrd	r6, [sp, #8]
     b78:	ldrd	r8, [sp, #16]
     b7c:	ldr	sl, [sp, #24]
     b80:	add	sp, sp, #28
     b84:	pop	{pc}		; (ldr pc, [sp], #4)
     b88:	ldr	r3, [r4, #24]
     b8c:	cmp	r3, #0
     b90:	beq	b70 <m_alias+0x1e8>
     b94:	ldr	r2, [pc, #48]	; bcc <m_alias+0x244>
     b98:	add	r3, r4, #88	; 0x58
     b9c:	mov	r0, r4
     ba0:	ldr	r1, [pc, #44]	; bd4 <m_alias+0x24c>
     ba4:	ldr	ip, [r6, #192]	; 0xc0
     ba8:	ldr	r2, [r5, r2]
     bac:	add	r1, pc, r1
     bb0:	str	ip, [sp, #32]
     bb4:	add	r2, r2, #88	; 0x58
     bb8:	b	a6c <m_alias+0xe4>
     bbc:	.word	0x0001165c
     bc0:	.word	0x00000070
     bc4:	.word	0x00000714
     bc8:	.word	0x00000664
     bcc:	.word	0x0000007c
     bd0:	.word	0x0000061c
     bd4:	.word	0x0000056c

00000bd8 <reload_aliases>:
     bd8:	ldr	r3, [pc, #572]	; e1c <reload_aliases+0x244>
     bdc:	strd	r4, [sp, #-36]!	; 0xffffffdc
     be0:	ldr	r4, [pc, r3]
     be4:	strd	r6, [sp, #8]
     be8:	ldr	r6, [pc, #560]	; e20 <reload_aliases+0x248>
     bec:	strd	r8, [sp, #16]
     bf0:	strd	sl, [sp, #24]
     bf4:	cmp	r4, #0
     bf8:	str	lr, [sp, #32]
     bfc:	sub	sp, sp, #20
     c00:	add	r6, pc, r6
     c04:	beq	cbc <reload_aliases+0xe4>
     c08:	ldr	r9, [pc, #532]	; e24 <reload_aliases+0x24c>
     c0c:	ldr	r7, [pc, #532]	; e28 <reload_aliases+0x250>
     c10:	ldr	r8, [pc, #532]	; e2c <reload_aliases+0x254>
     c14:	add	r9, pc, r9
     c18:	ldr	r5, [r4, #8]
     c1c:	add	r7, pc, r7
     c20:	add	r8, pc, r8
     c24:	ldr	r0, [r4]
     c28:	bl	75c <mod_del_cmd@plt>
     c2c:	ldr	r0, [r4]
     c30:	cmp	r0, #0
     c34:	beq	c3c <reload_aliases+0x64>
     c38:	bl	780 <free@plt>
     c3c:	ldr	r3, [r4, #4]
     c40:	ldr	r2, [r4, #8]
     c44:	cmp	r2, #0
     c48:	strne	r3, [r2, #4]
     c4c:	ldrne	r3, [r4, #4]
     c50:	streq	r3, [r9, #4]
     c54:	cmp	r3, #0
     c58:	beq	c94 <reload_aliases+0xbc>
     c5c:	ldr	r1, [r8, #8]
     c60:	mov	ip, #0
     c64:	mov	r0, r4
     c68:	str	r2, [r3, #8]
     c6c:	str	ip, [r4, #4]
     c70:	str	ip, [r4, #8]
     c74:	sub	r3, r1, #1
     c78:	str	r3, [r8, #8]
     c7c:	bl	7a4 <rb_free_rb_dlink_node@plt>
     c80:	cmp	r5, #0
     c84:	beq	cbc <reload_aliases+0xe4>
     c88:	mov	r4, r5
     c8c:	ldr	r5, [r5, #8]
     c90:	b	c24 <reload_aliases+0x4c>
     c94:	ldr	r1, [r7, #8]
     c98:	mov	r0, r4
     c9c:	str	r3, [r4, #4]
     ca0:	str	r3, [r4, #8]
     ca4:	str	r2, [r7]
     ca8:	sub	r3, r1, #1
     cac:	str	r3, [r7, #8]
     cb0:	bl	7a4 <rb_free_rb_dlink_node@plt>
     cb4:	cmp	r5, #0
     cb8:	bne	c88 <reload_aliases+0xb0>
     cbc:	ldr	r3, [pc, #364]	; e30 <reload_aliases+0x258>
     cc0:	add	r8, sp, #8
     cc4:	mov	r1, r8
     cc8:	ldr	r4, [pc, #356]	; e34 <reload_aliases+0x25c>
     ccc:	ldr	r9, [pc, #356]	; e38 <reload_aliases+0x260>
     cd0:	ldr	r6, [r6, r3]
     cd4:	add	r4, pc, r4
     cd8:	ldr	r7, [pc, #348]	; e3c <reload_aliases+0x264>
     cdc:	add	r9, pc, r9
     ce0:	ldr	r0, [r6]
     ce4:	add	r7, pc, r7
     ce8:	bl	7b0 <rb_dictionary_foreach_start@plt>
     cec:	b	d0c <reload_aliases+0x134>
     cf0:	ldr	r3, [r7, #8]
     cf4:	mov	r1, r8
     cf8:	str	r0, [r7]
     cfc:	ldr	r0, [r6]
     d00:	add	r3, r3, #1
     d04:	str	r3, [r7, #8]
     d08:	bl	834 <rb_dictionary_foreach_next@plt>
     d0c:	mov	r1, r8
     d10:	ldr	r0, [r6]
     d14:	bl	810 <rb_dictionary_foreach_cur@plt>
     d18:	subs	r3, r0, #0
     d1c:	beq	ddc <reload_aliases+0x204>
     d20:	ldr	sl, [r3]
     d24:	mov	r0, sl
     d28:	bl	7ec <strlen@plt>
     d2c:	mov	fp, r0
     d30:	mov	r0, #1
     d34:	add	r1, fp, #69	; 0x45
     d38:	bl	750 <calloc@plt>
     d3c:	subs	r5, r0, #0
     d40:	beq	df8 <reload_aliases+0x220>
     d44:	add	r3, r5, #68	; 0x44
     d48:	mov	r1, sl
     d4c:	add	r2, fp, #1
     d50:	mov	r0, r3
     d54:	bl	78c <memcpy@plt>
     d58:	ldrd	sl, [r4]
     d5c:	mov	r2, r5
     d60:	mov	r3, r0
     d64:	mov	r0, r5
     d68:	str	r3, [r2], #20
     d6c:	strd	sl, [r5, #20]
     d70:	ldrd	sl, [r4, #24]
     d74:	strd	sl, [sp]
     d78:	ldrd	sl, [r4, #8]
     d7c:	strd	sl, [r2, #8]
     d80:	ldrd	sl, [r4, #16]
     d84:	strd	sl, [r2, #16]
     d88:	ldrd	sl, [sp]
     d8c:	strd	sl, [r2, #24]
     d90:	ldrd	sl, [r4, #32]
     d94:	strd	sl, [r2, #32]
     d98:	ldrd	sl, [r4, #40]	; 0x28
     d9c:	strd	sl, [r2, #40]	; 0x28
     da0:	bl	840 <mod_add_cmd@plt>
     da4:	bl	7d4 <rb_make_rb_dlink_node@plt>
     da8:	cmp	r0, #0
     dac:	beq	dfc <reload_aliases+0x224>
     db0:	ldr	r3, [r9]
     db4:	mov	r2, #0
     db8:	str	r5, [r0]
     dbc:	cmp	r3, r2
     dc0:	strd	r2, [r0, #4]
     dc4:	strne	r0, [r3, #4]
     dc8:	bne	cf0 <reload_aliases+0x118>
     dcc:	ldr	r3, [r9, #4]
     dd0:	cmp	r3, #0
     dd4:	streq	r0, [r9, #4]
     dd8:	b	cf0 <reload_aliases+0x118>
     ddc:	add	sp, sp, #20
     de0:	ldrd	r4, [sp]
     de4:	ldrd	r6, [sp, #8]
     de8:	ldrd	r8, [sp, #16]
     dec:	ldrd	sl, [sp, #24]
     df0:	add	sp, sp, #32
     df4:	pop	{pc}		; (ldr pc, [sp], #4)
     df8:	bl	798 <rb_outofmemory@plt>
     dfc:	ldr	r3, [pc, #60]	; e40 <reload_aliases+0x268>
     e00:	mov	r2, #144	; 0x90
     e04:	ldr	r1, [pc, #56]	; e44 <reload_aliases+0x26c>
     e08:	ldr	r0, [pc, #56]	; e48 <reload_aliases+0x270>
     e0c:	add	r3, pc, r3
     e10:	add	r1, pc, r1
     e14:	add	r0, pc, r0
     e18:	bl	858 <__assert_fail@plt>
     e1c:	.word	0x000114e0
     e20:	.word	0x000113f8
     e24:	.word	0x000114ac
     e28:	.word	0x000114a4
     e2c:	.word	0x000114a0
     e30:	.word	0x00000070
     e34:	.word	0x000111f4
     e38:	.word	0x000113e4
     e3c:	.word	0x000113dc
     e40:	.word	0x000002d4
     e44:	.word	0x00000380
     e48:	.word	0x00000398

00000e4c <_moddeinit>:
     e4c:	ldr	r3, [pc, #220]	; f30 <_moddeinit+0xe4>
     e50:	strd	r4, [sp, #-24]!	; 0xffffffe8
     e54:	ldr	r4, [pc, r3]
     e58:	strd	r6, [sp, #8]
     e5c:	str	r8, [sp, #16]
     e60:	str	lr, [sp, #20]
     e64:	cmp	r4, #0
     e68:	beq	f1c <_moddeinit+0xd0>
     e6c:	ldr	r8, [pc, #192]	; f34 <_moddeinit+0xe8>
     e70:	ldr	r6, [pc, #192]	; f38 <_moddeinit+0xec>
     e74:	ldr	r7, [pc, #192]	; f3c <_moddeinit+0xf0>
     e78:	add	r8, pc, r8
     e7c:	ldr	r5, [r4, #8]
     e80:	add	r6, pc, r6
     e84:	add	r7, pc, r7
     e88:	ldr	r0, [r4]
     e8c:	bl	75c <mod_del_cmd@plt>
     e90:	ldr	r3, [r4]
     e94:	subs	r0, r3, #0
     e98:	beq	ea0 <_moddeinit+0x54>
     e9c:	bl	780 <free@plt>
     ea0:	ldr	r3, [r4, #4]
     ea4:	mov	ip, #0
     ea8:	mov	r0, r4
     eac:	ldr	r2, [r4, #8]
     eb0:	cmp	r2, #0
     eb4:	strne	r3, [r2, #4]
     eb8:	ldrne	r3, [r4, #4]
     ebc:	streq	r3, [r8, #4]
     ec0:	cmp	r3, ip
     ec4:	beq	ef8 <_moddeinit+0xac>
     ec8:	ldr	r1, [r7, #8]
     ecc:	str	r2, [r3, #8]
     ed0:	str	ip, [r4, #4]
     ed4:	str	ip, [r4, #8]
     ed8:	sub	r3, r1, #1
     edc:	str	r3, [r7, #8]
     ee0:	bl	7a4 <rb_free_rb_dlink_node@plt>
     ee4:	cmp	r5, #0
     ee8:	beq	f1c <_moddeinit+0xd0>
     eec:	mov	r4, r5
     ef0:	ldr	r5, [r5, #8]
     ef4:	b	e88 <_moddeinit+0x3c>
     ef8:	ldr	r1, [r6, #8]
     efc:	str	r3, [r4, #4]
     f00:	str	r3, [r4, #8]
     f04:	str	r2, [r6]
     f08:	sub	r3, r1, #1
     f0c:	str	r3, [r6, #8]
     f10:	bl	7a4 <rb_free_rb_dlink_node@plt>
     f14:	cmp	r5, #0
     f18:	bne	eec <_moddeinit+0xa0>
     f1c:	ldrd	r4, [sp]
     f20:	ldrd	r6, [sp, #8]
     f24:	ldr	r8, [sp, #16]
     f28:	add	sp, sp, #20
     f2c:	pop	{pc}		; (ldr pc, [sp], #4)
     f30:	.word	0x0001126c
     f34:	.word	0x00011248
     f38:	.word	0x00011240
     f3c:	.word	0x0001123c

00000f40 <_modinit>:
     f40:	ldr	r3, [pc, #376]	; 10c0 <_modinit+0x180>
     f44:	strd	r4, [sp, #-36]!	; 0xffffffdc
     f48:	ldr	r2, [pc, #372]	; 10c4 <_modinit+0x184>
     f4c:	strd	r6, [sp, #8]
     f50:	strd	r8, [sp, #16]
     f54:	add	r3, pc, r3
     f58:	strd	sl, [sp, #24]
     f5c:	str	lr, [sp, #32]
     f60:	sub	sp, sp, #20
     f64:	ldr	r6, [r3, r2]
     f68:	add	r8, sp, #8
     f6c:	mov	r1, r8
     f70:	ldr	r4, [pc, #336]	; 10c8 <_modinit+0x188>
     f74:	ldr	r9, [pc, #336]	; 10cc <_modinit+0x18c>
     f78:	ldr	r7, [pc, #336]	; 10d0 <_modinit+0x190>
     f7c:	add	r4, pc, r4
     f80:	ldr	r0, [r6]
     f84:	add	r9, pc, r9
     f88:	add	r7, pc, r7
     f8c:	bl	7b0 <rb_dictionary_foreach_start@plt>
     f90:	b	fb0 <_modinit+0x70>
     f94:	ldr	r3, [r7, #8]
     f98:	mov	r1, r8
     f9c:	str	r0, [r7]
     fa0:	ldr	r0, [r6]
     fa4:	add	r3, r3, #1
     fa8:	str	r3, [r7, #8]
     fac:	bl	834 <rb_dictionary_foreach_next@plt>
     fb0:	mov	r1, r8
     fb4:	ldr	r0, [r6]
     fb8:	bl	810 <rb_dictionary_foreach_cur@plt>
     fbc:	subs	r3, r0, #0
     fc0:	beq	1080 <_modinit+0x140>
     fc4:	ldr	sl, [r3]
     fc8:	mov	r0, sl
     fcc:	bl	7ec <strlen@plt>
     fd0:	mov	fp, r0
     fd4:	mov	r0, #1
     fd8:	add	r1, fp, #69	; 0x45
     fdc:	bl	750 <calloc@plt>
     fe0:	subs	r5, r0, #0
     fe4:	beq	109c <_modinit+0x15c>
     fe8:	add	r3, r5, #68	; 0x44
     fec:	add	r2, fp, #1
     ff0:	mov	r1, sl
     ff4:	mov	r0, r3
     ff8:	bl	78c <memcpy@plt>
     ffc:	mov	r3, r0
    1000:	mov	r1, r5
    1004:	ldrd	sl, [r4]
    1008:	mov	r0, r5
    100c:	str	r3, [r1], #20
    1010:	ldrd	r2, [r4, #16]
    1014:	strd	sl, [r5, #20]
    1018:	ldrd	sl, [r4, #24]
    101c:	strd	r2, [sp]
    1020:	ldrd	r2, [r4, #8]
    1024:	strd	r2, [r1, #8]
    1028:	ldrd	r2, [sp]
    102c:	strd	sl, [r1, #24]
    1030:	ldrd	sl, [r4, #32]
    1034:	strd	r2, [r1, #16]
    1038:	ldrd	r2, [r4, #40]	; 0x28
    103c:	strd	sl, [r1, #32]
    1040:	strd	r2, [r1, #40]	; 0x28
    1044:	bl	840 <mod_add_cmd@plt>
    1048:	bl	7d4 <rb_make_rb_dlink_node@plt>
    104c:	cmp	r0, #0
    1050:	beq	10a0 <_modinit+0x160>
    1054:	ldr	r3, [r9]
    1058:	mov	r2, #0
    105c:	str	r5, [r0]
    1060:	cmp	r3, r2
    1064:	strd	r2, [r0, #4]
    1068:	strne	r0, [r3, #4]
    106c:	bne	f94 <_modinit+0x54>
    1070:	ldr	r3, [r9, #4]
    1074:	cmp	r3, #0
    1078:	streq	r0, [r9, #4]
    107c:	b	f94 <_modinit+0x54>
    1080:	add	sp, sp, #20
    1084:	ldrd	r4, [sp]
    1088:	ldrd	r6, [sp, #8]
    108c:	ldrd	r8, [sp, #16]
    1090:	ldrd	sl, [sp, #24]
    1094:	add	sp, sp, #32
    1098:	pop	{pc}		; (ldr pc, [sp], #4)
    109c:	bl	798 <rb_outofmemory@plt>
    10a0:	ldr	r3, [pc, #44]	; 10d4 <_modinit+0x194>
    10a4:	mov	r2, #144	; 0x90
    10a8:	ldr	r1, [pc, #40]	; 10d8 <_modinit+0x198>
    10ac:	ldr	r0, [pc, #40]	; 10dc <_modinit+0x19c>
    10b0:	add	r3, pc, r3
    10b4:	add	r1, pc, r1
    10b8:	add	r0, pc, r0
    10bc:	bl	858 <__assert_fail@plt>
    10c0:	.word	0x000110a4
    10c4:	.word	0x00000070
    10c8:	.word	0x00010f4c
    10cc:	.word	0x0001113c
    10d0:	.word	0x00011138
    10d4:	.word	0x00000030
    10d8:	.word	0x000000dc
    10dc:	.word	0x000000f4

Disassembly of section .fini:

000010e0 <_fini>:
    10e0:	push	{r3, lr}
    10e4:	pop	{r3, pc}
