
../repos/charybdis/extensions/.libs/umode_noctcp.so:     file format elf32-littlearm


Disassembly of section .init:

0000040c <_init>:
 40c:	push	{r3, lr}
 410:	bl	474 <call_weak_fn>
 414:	pop	{r3, pc}

Disassembly of section .plt:

00000418 <.plt>:
 418:	push	{lr}		; (str lr, [sp, #-4]!)
 41c:	ldr	lr, [pc, #4]	; 428 <.plt+0x10>
 420:	add	lr, pc, lr
 424:	ldr	pc, [lr, #8]!
 428:	.word	0x00010bd8

0000042c <__cxa_finalize@plt>:
 42c:	add	ip, pc, #0, 12
 430:	add	ip, ip, #16, 20	; 0x10000
 434:	ldr	pc, [ip, #3032]!	; 0xbd8

00000438 <rb_strncasecmp@plt>:
 438:	add	ip, pc, #0, 12
 43c:	add	ip, ip, #16, 20	; 0x10000
 440:	ldr	pc, [ip, #3024]!	; 0xbd0

00000444 <find_umode_slot@plt>:
 444:	add	ip, pc, #0, 12
 448:	add	ip, ip, #16, 20	; 0x10000
 44c:	ldr	pc, [ip, #3016]!	; 0xbc8

00000450 <__gmon_start__@plt>:
 450:	add	ip, pc, #0, 12
 454:	add	ip, ip, #16, 20	; 0x10000
 458:	ldr	pc, [ip, #3008]!	; 0xbc0

0000045c <sendto_one_numeric@plt>:
 45c:	add	ip, pc, #0, 12
 460:	add	ip, ip, #16, 20	; 0x10000
 464:	ldr	pc, [ip, #3000]!	; 0xbb8

00000468 <construct_umodebuf@plt>:
 468:	add	ip, pc, #0, 12
 46c:	add	ip, ip, #16, 20	; 0x10000
 470:	ldr	pc, [ip, #2992]!	; 0xbb0

Disassembly of section .text:

00000474 <call_weak_fn>:
 474:	ldr	r3, [pc, #20]	; 490 <call_weak_fn+0x1c>
 478:	ldr	r2, [pc, #20]	; 494 <call_weak_fn+0x20>
 47c:	add	r3, pc, r3
 480:	ldr	r2, [r3, r2]
 484:	cmp	r2, #0
 488:	bxeq	lr
 48c:	b	450 <__gmon_start__@plt>
 490:	.word	0x00010b7c
 494:	.word	0x00000030

00000498 <deregister_tm_clones>:
 498:	ldr	r0, [pc, #44]	; 4cc <deregister_tm_clones+0x34>
 49c:	ldr	r3, [pc, #44]	; 4d0 <deregister_tm_clones+0x38>
 4a0:	add	r0, pc, r0
 4a4:	add	r3, pc, r3
 4a8:	cmp	r3, r0
 4ac:	ldr	r3, [pc, #32]	; 4d4 <deregister_tm_clones+0x3c>
 4b0:	add	r3, pc, r3
 4b4:	bxeq	lr
 4b8:	ldr	r2, [pc, #24]	; 4d8 <deregister_tm_clones+0x40>
 4bc:	ldr	r3, [r3, r2]
 4c0:	cmp	r3, #0
 4c4:	bxeq	lr
 4c8:	bx	r3
 4cc:	.word	0x00010bd4
 4d0:	.word	0x00010bd0
 4d4:	.word	0x00010b48
 4d8:	.word	0x00000028

000004dc <register_tm_clones>:
 4dc:	ldr	r0, [pc, #56]	; 51c <register_tm_clones+0x40>
 4e0:	ldr	r3, [pc, #56]	; 520 <register_tm_clones+0x44>
 4e4:	add	r0, pc, r0
 4e8:	add	r3, pc, r3
 4ec:	sub	r1, r3, r0
 4f0:	ldr	r3, [pc, #44]	; 524 <register_tm_clones+0x48>
 4f4:	asr	r1, r1, #2
 4f8:	add	r3, pc, r3
 4fc:	add	r1, r1, r1, lsr #31
 500:	asrs	r1, r1, #1
 504:	bxeq	lr
 508:	ldr	r2, [pc, #24]	; 528 <register_tm_clones+0x4c>
 50c:	ldr	r3, [r3, r2]
 510:	cmp	r3, #0
 514:	bxeq	lr
 518:	bx	r3
 51c:	.word	0x00010b90
 520:	.word	0x00010b8c
 524:	.word	0x00010b00
 528:	.word	0x00000034

0000052c <__do_global_dtors_aux>:
 52c:	ldr	r3, [pc, #76]	; 580 <__do_global_dtors_aux+0x54>
 530:	ldr	r2, [pc, #76]	; 584 <__do_global_dtors_aux+0x58>
 534:	add	r3, pc, r3
 538:	add	r2, pc, r2
 53c:	ldrb	r3, [r3]
 540:	cmp	r3, #0
 544:	bxne	lr
 548:	ldr	r3, [pc, #56]	; 588 <__do_global_dtors_aux+0x5c>
 54c:	push	{r4, lr}
 550:	ldr	r3, [r2, r3]
 554:	cmp	r3, #0
 558:	beq	568 <__do_global_dtors_aux+0x3c>
 55c:	ldr	r3, [pc, #40]	; 58c <__do_global_dtors_aux+0x60>
 560:	ldr	r0, [pc, r3]
 564:	bl	42c <__cxa_finalize@plt>
 568:	bl	498 <deregister_tm_clones>
 56c:	ldr	r3, [pc, #28]	; 590 <__do_global_dtors_aux+0x64>
 570:	mov	r2, #1
 574:	add	r3, pc, r3
 578:	strb	r2, [r3]
 57c:	pop	{r4, pc}
 580:	.word	0x00010b40
 584:	.word	0x00010ac0
 588:	.word	0x00000024
 58c:	.word	0x00010ad0
 590:	.word	0x00010b00

00000594 <frame_dummy>:
 594:	b	4dc <register_tm_clones>

00000598 <umode_noctcp_process>:
 598:	strd	r4, [sp, #-16]!
 59c:	str	fp, [sp, #8]
 5a0:	str	lr, [sp, #12]
 5a4:	add	fp, sp, #12
 5a8:	sub	sp, sp, #16
 5ac:	str	r0, [fp, #-16]
 5b0:	ldr	ip, [pc, #288]	; 6d8 <umode_noctcp_process+0x140>
 5b4:	add	ip, pc, ip
 5b8:	ldr	r1, [fp, #-16]
 5bc:	ldr	r1, [r1, #8]
 5c0:	ldrd	r0, [r1, #64]	; 0x40
 5c4:	mov	r4, #8192	; 0x2000
 5c8:	mov	r5, #0
 5cc:	and	r2, r0, r4
 5d0:	and	r3, r1, r5
 5d4:	orrs	r3, r2, r3
 5d8:	beq	6b8 <umode_noctcp_process+0x120>
 5dc:	ldr	r3, [fp, #-16]
 5e0:	ldr	r3, [r3, #8]
 5e4:	ldrh	r3, [r3, #80]	; 0x50
 5e8:	cmp	r3, #64	; 0x40
 5ec:	bne	6b8 <umode_noctcp_process+0x120>
 5f0:	ldr	r3, [fp, #-16]
 5f4:	ldr	r3, [r3, #16]
 5f8:	cmp	r3, #0
 5fc:	bne	6c0 <umode_noctcp_process+0x128>
 600:	ldr	r3, [fp, #-16]
 604:	ldr	r3, [r3]
 608:	cmp	r3, #0
 60c:	beq	6c0 <umode_noctcp_process+0x128>
 610:	ldr	r3, [fp, #-16]
 614:	ldr	r3, [r3, #8]
 618:	ldr	r3, [r3, #56]	; 0x38
 61c:	ldr	r2, [pc, #184]	; 6dc <umode_noctcp_process+0x144>
 620:	ldr	r2, [ip, r2]
 624:	ldr	r2, [r2, #268]	; 0x10c
 628:	and	r3, r3, r2
 62c:	cmp	r3, #0
 630:	beq	6c4 <umode_noctcp_process+0x12c>
 634:	ldr	r3, [fp, #-16]
 638:	ldr	r3, [r3, #12]
 63c:	ldrb	r3, [r3]
 640:	cmp	r3, #1
 644:	bne	6c4 <umode_noctcp_process+0x12c>
 648:	ldr	r3, [fp, #-16]
 64c:	ldr	r3, [r3, #12]
 650:	add	r3, r3, #1
 654:	mov	r2, #6
 658:	ldr	r1, [pc, #128]	; 6e0 <umode_noctcp_process+0x148>
 65c:	add	r1, pc, r1
 660:	mov	r0, r3
 664:	bl	438 <rb_strncasecmp@plt>
 668:	mov	r3, r0
 66c:	cmp	r3, #0
 670:	beq	6c4 <umode_noctcp_process+0x12c>
 674:	ldr	r3, [fp, #-16]
 678:	ldr	r0, [r3, #4]
 67c:	ldr	r3, [fp, #-16]
 680:	ldr	r3, [r3, #8]
 684:	add	r3, r3, #88	; 0x58
 688:	ldr	r2, [pc, #84]	; 6e4 <umode_noctcp_process+0x14c>
 68c:	add	r2, pc, r2
 690:	str	r2, [sp]
 694:	ldr	r2, [pc, #76]	; 6e8 <umode_noctcp_process+0x150>
 698:	add	r2, pc, r2
 69c:	mov	r1, #492	; 0x1ec
 6a0:	bl	45c <sendto_one_numeric@plt>
 6a4:	ldr	r3, [fp, #-16]
 6a8:	mov	r2, #492	; 0x1ec
 6ac:	str	r2, [r3, #16]
 6b0:	nop	{0}
 6b4:	b	6c4 <umode_noctcp_process+0x12c>
 6b8:	nop	{0}
 6bc:	b	6c4 <umode_noctcp_process+0x12c>
 6c0:	nop	{0}
 6c4:	sub	sp, fp, #12
 6c8:	ldrd	r4, [sp]
 6cc:	ldr	fp, [sp, #8]
 6d0:	add	sp, sp, #12
 6d4:	pop	{pc}		; (ldr pc, [sp], #4)
 6d8:	.word	0x00010a44
 6dc:	.word	0x0000002c
 6e0:	.word	0x00000170
 6e4:	.word	0x00000168
 6e8:	.word	0x0000013c

000006ec <_modinit>:
 6ec:	strd	r4, [sp, #-16]!
 6f0:	str	fp, [sp, #8]
 6f4:	str	lr, [sp, #12]
 6f8:	add	fp, sp, #12
 6fc:	ldr	r4, [pc, #56]	; 73c <_modinit+0x50>
 700:	add	r4, pc, r4
 704:	bl	444 <find_umode_slot@plt>
 708:	mov	r3, r0
 70c:	mov	r2, r3
 710:	ldr	r3, [pc, #40]	; 740 <_modinit+0x54>
 714:	ldr	r3, [r4, r3]
 718:	str	r2, [r3, #268]	; 0x10c
 71c:	bl	468 <construct_umodebuf@plt>
 720:	mov	r3, #0
 724:	mov	r0, r3
 728:	sub	sp, fp, #12
 72c:	ldrd	r4, [sp]
 730:	ldr	fp, [sp, #8]
 734:	add	sp, sp, #12
 738:	pop	{pc}		; (ldr pc, [sp], #4)
 73c:	.word	0x000108f8
 740:	.word	0x0000002c

00000744 <_moddeinit>:
 744:	str	fp, [sp, #-8]!
 748:	str	lr, [sp, #4]
 74c:	add	fp, sp, #4
 750:	ldr	r2, [pc, #40]	; 780 <_moddeinit+0x3c>
 754:	add	r2, pc, r2
 758:	ldr	r3, [pc, #36]	; 784 <_moddeinit+0x40>
 75c:	ldr	r3, [r2, r3]
 760:	mov	r2, #0
 764:	str	r2, [r3, #268]	; 0x10c
 768:	bl	468 <construct_umodebuf@plt>
 76c:	nop	{0}
 770:	sub	sp, fp, #4
 774:	ldr	fp, [sp]
 778:	add	sp, sp, #4
 77c:	pop	{pc}		; (ldr pc, [sp], #4)
 780:	.word	0x000108a4
 784:	.word	0x0000002c

Disassembly of section .fini:

00000788 <_fini>:
 788:	push	{r3, lr}
 78c:	pop	{r3, pc}
