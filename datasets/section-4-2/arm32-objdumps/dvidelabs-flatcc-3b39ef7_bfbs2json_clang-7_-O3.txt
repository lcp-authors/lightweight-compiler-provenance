
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001098c <.init>:
   1098c:	push	{r3, lr}
   10990:	bl	10ac0 <_start@@Base+0x3c>
   10994:	pop	{r3, pc}

Disassembly of section .plt:

00010998 <printf@plt-0x14>:
   10998:	push	{lr}		; (str lr, [sp, #-4]!)
   1099c:	ldr	lr, [pc, #4]	; 109a8 <printf@plt-0x4>
   109a0:	add	lr, pc, lr
   109a4:	ldr	pc, [lr, #8]!
   109a8:	andeq	r2, r1, r8, asr r6

000109ac <printf@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #73728	; 0x12000
   109b4:	ldr	pc, [ip, #1624]!	; 0x658

000109b8 <fopen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #73728	; 0x12000
   109c0:	ldr	pc, [ip, #1616]!	; 0x650

000109c4 <free@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #73728	; 0x12000
   109cc:	ldr	pc, [ip, #1608]!	; 0x648

000109d0 <ftell@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #73728	; 0x12000
   109d8:	ldr	pc, [ip, #1600]!	; 0x640

000109dc <rewind@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #73728	; 0x12000
   109e4:	ldr	pc, [ip, #1592]!	; 0x638

000109e8 <fwrite@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #73728	; 0x12000
   109f0:	ldr	pc, [ip, #1584]!	; 0x630

000109f4 <puts@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #73728	; 0x12000
   109fc:	ldr	pc, [ip, #1576]!	; 0x628

00010a00 <malloc@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #73728	; 0x12000
   10a08:	ldr	pc, [ip, #1568]!	; 0x620

00010a0c <__libc_start_main@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #73728	; 0x12000
   10a14:	ldr	pc, [ip, #1560]!	; 0x618

00010a18 <__gmon_start__@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #73728	; 0x12000
   10a20:	ldr	pc, [ip, #1552]!	; 0x610

00010a24 <exit@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #73728	; 0x12000
   10a2c:	ldr	pc, [ip, #1544]!	; 0x608

00010a30 <fprintf@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #73728	; 0x12000
   10a38:	ldr	pc, [ip, #1536]!	; 0x600

00010a3c <putchar@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #73728	; 0x12000
   10a44:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a48 <fclose@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #73728	; 0x12000
   10a50:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a54 <fread_unlocked@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #73728	; 0x12000
   10a5c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a60 <fseek@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #73728	; 0x12000
   10a68:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a6c <abort@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #73728	; 0x12000
   10a74:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a78 <__assert_fail@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #73728	; 0x12000
   10a80:	ldr	pc, [ip, #1488]!	; 0x5d0

Disassembly of section .text:

00010a84 <_start@@Base>:
   10a84:	mov	fp, #0
   10a88:	mov	lr, #0
   10a8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a90:	mov	r2, sp
   10a94:	push	{r2}		; (str r2, [sp, #-4]!)
   10a98:	push	{r0}		; (str r0, [sp, #-4]!)
   10a9c:	ldr	ip, [pc, #16]	; 10ab4 <_start@@Base+0x30>
   10aa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa4:	ldr	r0, [pc, #12]	; 10ab8 <_start@@Base+0x34>
   10aa8:	ldr	r3, [pc, #12]	; 10abc <_start@@Base+0x38>
   10aac:	bl	10a0c <__libc_start_main@plt>
   10ab0:	bl	10a6c <abort@plt>
   10ab4:	andeq	r1, r1, r4, lsl #20
   10ab8:	andeq	r1, r1, r4, lsr r9
   10abc:	andeq	r1, r1, r4, lsr #19
   10ac0:	ldr	r3, [pc, #20]	; 10adc <_start@@Base+0x58>
   10ac4:	ldr	r2, [pc, #20]	; 10ae0 <_start@@Base+0x5c>
   10ac8:	add	r3, pc, r3
   10acc:	ldr	r2, [r3, r2]
   10ad0:	cmp	r2, #0
   10ad4:	bxeq	lr
   10ad8:	b	10a18 <__gmon_start__@plt>
   10adc:	andeq	r2, r1, r0, lsr r5
   10ae0:	andeq	r0, r0, r4, asr r0
   10ae4:	ldr	r0, [pc, #24]	; 10b04 <_start@@Base+0x80>
   10ae8:	ldr	r3, [pc, #24]	; 10b08 <_start@@Base+0x84>
   10aec:	cmp	r3, r0
   10af0:	bxeq	lr
   10af4:	ldr	r3, [pc, #16]	; 10b0c <_start@@Base+0x88>
   10af8:	cmp	r3, #0
   10afc:	bxeq	lr
   10b00:	bx	r3
   10b04:	andeq	r3, r2, r0, rrx
   10b08:	andeq	r3, r2, r0, rrx
   10b0c:	andeq	r0, r0, r0
   10b10:	ldr	r0, [pc, #36]	; 10b3c <_start@@Base+0xb8>
   10b14:	ldr	r1, [pc, #36]	; 10b40 <_start@@Base+0xbc>
   10b18:	sub	r1, r1, r0
   10b1c:	asr	r1, r1, #2
   10b20:	add	r1, r1, r1, lsr #31
   10b24:	asrs	r1, r1, #1
   10b28:	bxeq	lr
   10b2c:	ldr	r3, [pc, #16]	; 10b44 <_start@@Base+0xc0>
   10b30:	cmp	r3, #0
   10b34:	bxeq	lr
   10b38:	bx	r3
   10b3c:	andeq	r3, r2, r0, rrx
   10b40:	andeq	r3, r2, r0, rrx
   10b44:	andeq	r0, r0, r0
   10b48:	push	{r4, lr}
   10b4c:	ldr	r4, [pc, #24]	; 10b6c <_start@@Base+0xe8>
   10b50:	ldrb	r3, [r4]
   10b54:	cmp	r3, #0
   10b58:	popne	{r4, pc}
   10b5c:	bl	10ae4 <_start@@Base+0x60>
   10b60:	mov	r3, #1
   10b64:	strb	r3, [r4]
   10b68:	pop	{r4, pc}
   10b6c:	andeq	r3, r2, r4, rrx
   10b70:	b	10b10 <_start@@Base+0x8c>

00010b74 <print_type@@Base>:
   10b74:	push	{r4, sl, fp, lr}
   10b78:	add	fp, sp, #8
   10b7c:	mov	r4, r0
   10b80:	mov	r0, #123	; 0x7b
   10b84:	bl	10a3c <putchar@plt>
   10b88:	cmp	r4, #0
   10b8c:	beq	10cf8 <print_type@@Base+0x184>
   10b90:	ldr	r1, [r4]
   10b94:	mov	r0, r4
   10b98:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10b9c:	cmp	r1, #6
   10ba0:	bcc	10cec <print_type@@Base+0x178>
   10ba4:	ldrh	r1, [r0, #4]
   10ba8:	cmp	r1, #0
   10bac:	beq	10bd0 <print_type@@Base+0x5c>
   10bb0:	add	r0, r4, r1
   10bb4:	ldrsb	r0, [r0]
   10bb8:	cmp	r0, #16
   10bbc:	bhi	10c44 <print_type@@Base+0xd0>
   10bc0:	movw	r1, #8832	; 0x2280
   10bc4:	movt	r1, #1
   10bc8:	ldr	r1, [r1, r0, lsl #2]
   10bcc:	b	10c4c <print_type@@Base+0xd8>
   10bd0:	mov	r1, #1
   10bd4:	ldrh	r2, [r0]
   10bd8:	cmp	r2, #8
   10bdc:	bcc	10cec <print_type@@Base+0x178>
   10be0:	ldrh	r2, [r0, #6]
   10be4:	cmp	r2, #0
   10be8:	beq	10c94 <print_type@@Base+0x120>
   10bec:	cmp	r1, #0
   10bf0:	bne	10c04 <print_type@@Base+0x90>
   10bf4:	mov	r0, #44	; 0x2c
   10bf8:	bl	10a3c <putchar@plt>
   10bfc:	ldr	r0, [r4]
   10c00:	sub	r0, r4, r0
   10c04:	ldrh	r2, [r0]
   10c08:	movw	r1, #7675	; 0x1dfb
   10c0c:	movt	r1, #1
   10c10:	cmp	r2, #6
   10c14:	bcc	10c7c <print_type@@Base+0x108>
   10c18:	ldrh	r0, [r0, #4]
   10c1c:	cmp	r0, #0
   10c20:	beq	10c7c <print_type@@Base+0x108>
   10c24:	add	r0, r4, r0
   10c28:	ldrsb	r0, [r0]
   10c2c:	cmp	r0, #16
   10c30:	bhi	10c74 <print_type@@Base+0x100>
   10c34:	movw	r1, #8832	; 0x2280
   10c38:	movt	r1, #1
   10c3c:	ldr	r1, [r1, r0, lsl #2]
   10c40:	b	10c7c <print_type@@Base+0x108>
   10c44:	movw	r1, #7295	; 0x1c7f
   10c48:	movt	r1, #1
   10c4c:	movw	r0, #6676	; 0x1a14
   10c50:	movt	r0, #1
   10c54:	bl	109ac <printf@plt>
   10c58:	ldr	r0, [r4]
   10c5c:	mov	r1, #0
   10c60:	sub	r0, r4, r0
   10c64:	ldrh	r2, [r0]
   10c68:	cmp	r2, #8
   10c6c:	bcs	10be0 <print_type@@Base+0x6c>
   10c70:	b	10cec <print_type@@Base+0x178>
   10c74:	movw	r1, #7295	; 0x1c7f
   10c78:	movt	r1, #1
   10c7c:	movw	r0, #6693	; 0x1a25
   10c80:	movt	r0, #1
   10c84:	bl	109ac <printf@plt>
   10c88:	ldr	r0, [r4]
   10c8c:	mov	r1, #0
   10c90:	sub	r0, r4, r0
   10c94:	ldrh	r2, [r0]
   10c98:	cmp	r2, #10
   10c9c:	bcc	10cec <print_type@@Base+0x178>
   10ca0:	ldrh	r2, [r0, #8]
   10ca4:	cmp	r2, #0
   10ca8:	beq	10cec <print_type@@Base+0x178>
   10cac:	cmp	r1, #0
   10cb0:	bne	10cc4 <print_type@@Base+0x150>
   10cb4:	mov	r0, #44	; 0x2c
   10cb8:	bl	10a3c <putchar@plt>
   10cbc:	ldr	r0, [r4]
   10cc0:	sub	r0, r4, r0
   10cc4:	ldrh	r2, [r0]
   10cc8:	mvn	r1, #0
   10ccc:	cmp	r2, #10
   10cd0:	bcc	10ce0 <print_type@@Base+0x16c>
   10cd4:	ldrh	r0, [r0, #8]
   10cd8:	cmp	r0, #0
   10cdc:	ldrne	r1, [r4, r0]
   10ce0:	movw	r0, #6708	; 0x1a34
   10ce4:	movt	r0, #1
   10ce8:	bl	109ac <printf@plt>
   10cec:	mov	r0, #125	; 0x7d
   10cf0:	pop	{r4, sl, fp, lr}
   10cf4:	b	10a3c <putchar@plt>
   10cf8:	movw	r0, #7477	; 0x1d35
   10cfc:	movw	r1, #7515	; 0x1d5b
   10d00:	movw	r3, #7609	; 0x1db9
   10d04:	mov	r2, #147	; 0x93
   10d08:	movt	r0, #1
   10d0c:	movt	r1, #1
   10d10:	movt	r3, #1
   10d14:	bl	10a78 <__assert_fail@plt>

00010d18 <print_object@@Base>:
   10d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d1c:	add	fp, sp, #28
   10d20:	sub	sp, sp, #4
   10d24:	cmp	r0, #0
   10d28:	beq	1114c <print_object@@Base+0x434>
   10d2c:	ldr	r1, [r0]
   10d30:	mov	r4, r0
   10d34:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10d38:	cmp	r1, #8
   10d3c:	bcc	11140 <print_object@@Base+0x428>
   10d40:	ldrh	r5, [r0, #6]
   10d44:	cmp	r5, #0
   10d48:	beq	11140 <print_object@@Base+0x428>
   10d4c:	ldrh	r0, [r0, #4]
   10d50:	cmp	r0, #0
   10d54:	beq	1116c <print_object@@Base+0x454>
   10d58:	mov	r1, r4
   10d5c:	ldr	r6, [r1, r5]!
   10d60:	add	r1, r1, r6
   10d64:	add	r8, r1, #4
   10d68:	mov	r1, r4
   10d6c:	ldr	r0, [r1, r0]!
   10d70:	add	r0, r1, r0
   10d74:	add	r1, r0, #4
   10d78:	movw	r0, #6719	; 0x1a3f
   10d7c:	movt	r0, #1
   10d80:	bl	109ac <printf@plt>
   10d84:	movw	r0, #6732	; 0x1a4c
   10d88:	movt	r0, #1
   10d8c:	bl	109ac <printf@plt>
   10d90:	ldr	r0, [r8, #-4]
   10d94:	cmp	r0, #0
   10d98:	beq	11014 <print_object@@Base+0x2fc>
   10d9c:	add	r1, r6, r5
   10da0:	movw	r5, #6744	; 0x1a58
   10da4:	mov	sl, #0
   10da8:	add	r1, r4, r1
   10dac:	movt	r5, #1
   10db0:	add	r9, r1, #8
   10db4:	cmp	sl, #0
   10db8:	beq	10dc8 <print_object@@Base+0xb0>
   10dbc:	mov	r0, #44	; 0x2c
   10dc0:	bl	10a3c <putchar@plt>
   10dc4:	ldr	r0, [r8, #-4]
   10dc8:	cmp	r0, sl
   10dcc:	bls	11100 <print_object@@Base+0x3e8>
   10dd0:	ldr	r7, [r9, #-4]
   10dd4:	add	r6, r9, r7
   10dd8:	cmp	r6, #4
   10ddc:	beq	11120 <print_object@@Base+0x408>
   10de0:	ldr	r0, [r6, #-4]
   10de4:	sub	r0, r7, r0
   10de8:	add	r0, r9, r0
   10dec:	ldrh	r1, [r0, #-4]
   10df0:	cmp	r1, #6
   10df4:	bcc	110d4 <print_object@@Base+0x3bc>
   10df8:	ldrh	r0, [r0]
   10dfc:	cmp	r0, #0
   10e00:	beq	110d4 <print_object@@Base+0x3bc>
   10e04:	add	r1, r7, r0
   10e08:	add	r1, r9, r1
   10e0c:	ldr	r1, [r1, #-4]
   10e10:	add	r1, r1, r7
   10e14:	add	r0, r1, r0
   10e18:	add	r1, r9, r0
   10e1c:	mov	r0, r5
   10e20:	bl	109ac <printf@plt>
   10e24:	ldr	r0, [r6, #-4]
   10e28:	sub	r0, r7, r0
   10e2c:	add	r0, r9, r0
   10e30:	ldrh	r1, [r0, #-4]
   10e34:	cmp	r1, #8
   10e38:	bcc	110e0 <print_object@@Base+0x3c8>
   10e3c:	ldrh	r0, [r0, #2]
   10e40:	cmp	r0, #0
   10e44:	beq	110e0 <print_object@@Base+0x3c8>
   10e48:	add	r1, r7, r0
   10e4c:	add	r1, r9, r1
   10e50:	ldr	r1, [r1, #-4]
   10e54:	add	r1, r1, r7
   10e58:	add	r0, r1, r0
   10e5c:	add	r0, r9, r0
   10e60:	sub	r0, r0, #4
   10e64:	bl	10b74 <print_type@@Base>
   10e68:	ldr	r0, [r6, #-4]
   10e6c:	sub	r1, r7, r0
   10e70:	add	r1, r9, r1
   10e74:	ldrh	r2, [r1, #-4]
   10e78:	cmp	r2, #10
   10e7c:	bcc	10ff8 <print_object@@Base+0x2e0>
   10e80:	ldrh	r1, [r1, #4]
   10e84:	cmp	r1, #0
   10e88:	beq	10fe0 <print_object@@Base+0x2c8>
   10e8c:	add	r0, r7, r1
   10e90:	add	r0, r9, r0
   10e94:	ldrh	r1, [r0, #-4]
   10e98:	movw	r0, #6765	; 0x1a6d
   10e9c:	movt	r0, #1
   10ea0:	bl	109ac <printf@plt>
   10ea4:	ldr	r0, [r6, #-4]
   10ea8:	sub	r0, r7, r0
   10eac:	add	r0, r9, r0
   10eb0:	sub	r0, r0, #4
   10eb4:	ldrh	r1, [r0]
   10eb8:	cmp	r1, #14
   10ebc:	bcc	10ff8 <print_object@@Base+0x2e0>
   10ec0:	ldrh	r1, [r0, #12]
   10ec4:	cmp	r1, #0
   10ec8:	beq	10ef8 <print_object@@Base+0x1e0>
   10ecc:	add	r0, r7, r1
   10ed0:	mov	r1, r9
   10ed4:	ldr	r3, [r1, r0]!
   10ed8:	movw	r0, #6775	; 0x1a77
   10edc:	movt	r0, #1
   10ee0:	ldr	r2, [r1, #-4]
   10ee4:	bl	109ac <printf@plt>
   10ee8:	ldr	r0, [r6, #-4]
   10eec:	sub	r0, r7, r0
   10ef0:	add	r0, r9, r0
   10ef4:	sub	r0, r0, #4
   10ef8:	ldrh	r1, [r0]
   10efc:	cmp	r1, #16
   10f00:	bcc	10ff8 <print_object@@Base+0x2e0>
   10f04:	ldrh	r1, [r0, #14]
   10f08:	cmp	r1, #0
   10f0c:	beq	10f3c <print_object@@Base+0x224>
   10f10:	add	r0, r7, r1
   10f14:	add	r0, r9, r0
   10f18:	vldr	d16, [r0, #-4]
   10f1c:	movw	r0, #6799	; 0x1a8f
   10f20:	movt	r0, #1
   10f24:	vmov	r2, r3, d16
   10f28:	bl	109ac <printf@plt>
   10f2c:	ldr	r0, [r6, #-4]
   10f30:	sub	r0, r7, r0
   10f34:	add	r0, r9, r0
   10f38:	sub	r0, r0, #4
   10f3c:	ldrh	r1, [r0]
   10f40:	cmp	r1, #20
   10f44:	bcc	10ff8 <print_object@@Base+0x2e0>
   10f48:	ldrh	r1, [r0, #18]
   10f4c:	cmp	r1, #0
   10f50:	beq	10f94 <print_object@@Base+0x27c>
   10f54:	add	r0, r7, r1
   10f58:	movw	r1, #6837	; 0x1ab5
   10f5c:	add	r0, r9, r0
   10f60:	movt	r1, #1
   10f64:	ldrb	r0, [r0, #-4]
   10f68:	cmp	r0, #0
   10f6c:	movw	r0, #6842	; 0x1aba
   10f70:	movt	r0, #1
   10f74:	moveq	r1, r0
   10f78:	movw	r0, #6822	; 0x1aa6
   10f7c:	movt	r0, #1
   10f80:	bl	109ac <printf@plt>
   10f84:	ldr	r0, [r6, #-4]
   10f88:	sub	r0, r7, r0
   10f8c:	add	r0, r9, r0
   10f90:	sub	r0, r0, #4
   10f94:	ldrh	r1, [r0]
   10f98:	cmp	r1, #22
   10f9c:	bcc	10ff8 <print_object@@Base+0x2e0>
   10fa0:	ldrh	r0, [r0, #20]
   10fa4:	cmp	r0, #0
   10fa8:	beq	10ff8 <print_object@@Base+0x2e0>
   10fac:	add	r0, r7, r0
   10fb0:	movw	r1, #6837	; 0x1ab5
   10fb4:	add	r0, r9, r0
   10fb8:	movt	r1, #1
   10fbc:	ldrb	r0, [r0, #-4]
   10fc0:	cmp	r0, #0
   10fc4:	movw	r0, #6842	; 0x1aba
   10fc8:	movt	r0, #1
   10fcc:	moveq	r1, r0
   10fd0:	movw	r0, #6848	; 0x1ac0
   10fd4:	movt	r0, #1
   10fd8:	bl	109ac <printf@plt>
   10fdc:	b	10ff8 <print_object@@Base+0x2e0>
   10fe0:	add	r1, r8, sl, lsl #2
   10fe4:	add	r1, r1, r7
   10fe8:	sub	r0, r1, r0
   10fec:	ldrh	r1, [r0]
   10ff0:	cmp	r1, #14
   10ff4:	bcs	10ec0 <print_object@@Base+0x1a8>
   10ff8:	mov	r0, #125	; 0x7d
   10ffc:	bl	10a3c <putchar@plt>
   11000:	ldr	r0, [r8, #-4]
   11004:	add	sl, sl, #1
   11008:	add	r9, r9, #4
   1100c:	cmp	sl, r0
   11010:	bcc	10db4 <print_object@@Base+0x9c>
   11014:	mov	r0, #93	; 0x5d
   11018:	bl	10a3c <putchar@plt>
   1101c:	ldr	r1, [r4]
   11020:	mov	r0, r4
   11024:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11028:	cmp	r1, #10
   1102c:	bcc	110c4 <print_object@@Base+0x3ac>
   11030:	ldrh	r1, [r0, #8]
   11034:	cmp	r1, #0
   11038:	beq	1106c <print_object@@Base+0x354>
   1103c:	ldrb	r0, [r4, r1]
   11040:	movw	r2, #6842	; 0x1aba
   11044:	movw	r1, #6837	; 0x1ab5
   11048:	movt	r2, #1
   1104c:	movt	r1, #1
   11050:	cmp	r0, #0
   11054:	movw	r0, #6858	; 0x1aca
   11058:	moveq	r1, r2
   1105c:	movt	r0, #1
   11060:	bl	109ac <printf@plt>
   11064:	ldr	r0, [r4]
   11068:	sub	r0, r4, r0
   1106c:	ldrh	r1, [r0]
   11070:	cmp	r1, #12
   11074:	bcc	110c4 <print_object@@Base+0x3ac>
   11078:	ldrh	r1, [r0, #10]
   1107c:	cmp	r1, #0
   11080:	beq	1109c <print_object@@Base+0x384>
   11084:	ldr	r1, [r4, r1]
   11088:	movw	r0, #6874	; 0x1ada
   1108c:	movt	r0, #1
   11090:	bl	109ac <printf@plt>
   11094:	ldr	r0, [r4]
   11098:	sub	r0, r4, r0
   1109c:	ldrh	r1, [r0]
   110a0:	cmp	r1, #14
   110a4:	bcc	110c4 <print_object@@Base+0x3ac>
   110a8:	ldrh	r0, [r0, #12]
   110ac:	cmp	r0, #0
   110b0:	beq	110c4 <print_object@@Base+0x3ac>
   110b4:	ldr	r1, [r4, r0]
   110b8:	movw	r0, #6889	; 0x1ae9
   110bc:	movt	r0, #1
   110c0:	bl	109ac <printf@plt>
   110c4:	mov	r0, #125	; 0x7d
   110c8:	sub	sp, fp, #28
   110cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110d0:	b	10a3c <putchar@plt>
   110d4:	movw	r0, #7827	; 0x1e93
   110d8:	movt	r0, #1
   110dc:	b	11128 <print_object@@Base+0x410>
   110e0:	movw	r0, #7827	; 0x1e93
   110e4:	movw	r1, #7515	; 0x1d5b
   110e8:	movw	r3, #8136	; 0x1fc8
   110ec:	mov	r2, #201	; 0xc9
   110f0:	movt	r0, #1
   110f4:	movt	r1, #1
   110f8:	movt	r3, #1
   110fc:	bl	10a78 <__assert_fail@plt>
   11100:	movw	r0, #7931	; 0x1efb
   11104:	movw	r1, #7515	; 0x1d5b
   11108:	movw	r3, #7986	; 0x1f32
   1110c:	mov	r2, #192	; 0xc0
   11110:	movt	r0, #1
   11114:	movt	r1, #1
   11118:	movt	r3, #1
   1111c:	bl	10a78 <__assert_fail@plt>
   11120:	movw	r0, #7477	; 0x1d35
   11124:	movt	r0, #1
   11128:	movw	r1, #7515	; 0x1d5b
   1112c:	movw	r3, #8067	; 0x1f83
   11130:	mov	r2, #195	; 0xc3
   11134:	movt	r1, #1
   11138:	movt	r3, #1
   1113c:	bl	10a78 <__assert_fail@plt>
   11140:	movw	r0, #7827	; 0x1e93
   11144:	movt	r0, #1
   11148:	b	11154 <print_object@@Base+0x43c>
   1114c:	movw	r0, #7477	; 0x1d35
   11150:	movt	r0, #1
   11154:	movw	r1, #7515	; 0x1d5b
   11158:	movw	r3, #7752	; 0x1e48
   1115c:	mov	r2, #224	; 0xe0
   11160:	movt	r1, #1
   11164:	movt	r3, #1
   11168:	bl	10a78 <__assert_fail@plt>
   1116c:	movw	r0, #7827	; 0x1e93
   11170:	movw	r1, #7515	; 0x1d5b
   11174:	movw	r3, #7860	; 0x1eb4
   11178:	mov	r2, #218	; 0xda
   1117c:	movt	r0, #1
   11180:	movt	r1, #1
   11184:	movt	r3, #1
   11188:	bl	10a78 <__assert_fail@plt>

0001118c <print_enum@@Base>:
   1118c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11190:	add	fp, sp, #28
   11194:	sub	sp, sp, #4
   11198:	cmp	r0, #0
   1119c:	beq	114b0 <print_enum@@Base+0x324>
   111a0:	ldr	r1, [r0]
   111a4:	mov	sl, r0
   111a8:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   111ac:	cmp	r1, #6
   111b0:	bcc	11464 <print_enum@@Base+0x2d8>
   111b4:	ldrh	r0, [r0, #4]
   111b8:	cmp	r0, #0
   111bc:	beq	11464 <print_enum@@Base+0x2d8>
   111c0:	mov	r1, sl
   111c4:	ldr	r0, [r1, r0]!
   111c8:	add	r0, r1, r0
   111cc:	add	r1, r0, #4
   111d0:	movw	r0, #6719	; 0x1a3f
   111d4:	movt	r0, #1
   111d8:	bl	109ac <printf@plt>
   111dc:	ldr	r1, [sl]
   111e0:	mov	r0, sl
   111e4:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   111e8:	cmp	r1, #8
   111ec:	bcc	11470 <print_enum@@Base+0x2e4>
   111f0:	ldrh	r4, [r0, #6]
   111f4:	cmp	r4, #0
   111f8:	beq	11470 <print_enum@@Base+0x2e4>
   111fc:	mov	r6, sl
   11200:	movw	r0, #6904	; 0x1af8
   11204:	ldr	r5, [r6, r4]!
   11208:	movt	r0, #1
   1120c:	bl	109ac <printf@plt>
   11210:	ldr	r0, [r6, r5]!
   11214:	cmp	r0, #0
   11218:	beq	113a0 <print_enum@@Base+0x214>
   1121c:	add	r0, r5, r4
   11220:	movw	r5, #6719	; 0x1a3f
   11224:	add	r6, r6, #4
   11228:	mov	r4, #0
   1122c:	add	r0, sl, r0
   11230:	movt	r5, #1
   11234:	add	r7, r0, #8
   11238:	ldr	r8, [r7, #-4]
   1123c:	cmp	r4, #0
   11240:	add	r9, r7, r8
   11244:	beq	11250 <print_enum@@Base+0xc4>
   11248:	mov	r0, #44	; 0x2c
   1124c:	bl	10a3c <putchar@plt>
   11250:	cmp	r9, #4
   11254:	beq	11444 <print_enum@@Base+0x2b8>
   11258:	ldr	r0, [r9, #-4]
   1125c:	sub	r0, r8, r0
   11260:	add	r0, r7, r0
   11264:	ldrh	r1, [r0, #-4]
   11268:	cmp	r1, #6
   1126c:	bcc	11438 <print_enum@@Base+0x2ac>
   11270:	ldrh	r0, [r0]
   11274:	cmp	r0, #0
   11278:	beq	11438 <print_enum@@Base+0x2ac>
   1127c:	add	r1, r8, r0
   11280:	add	r1, r7, r1
   11284:	ldr	r1, [r1, #-4]
   11288:	add	r1, r1, r8
   1128c:	add	r0, r1, r0
   11290:	add	r1, r7, r0
   11294:	mov	r0, r5
   11298:	bl	109ac <printf@plt>
   1129c:	ldr	r0, [r9, #-4]
   112a0:	sub	r1, r8, r0
   112a4:	add	r1, r7, r1
   112a8:	ldrh	r2, [r1, #-4]
   112ac:	cmp	r2, #8
   112b0:	bcc	11384 <print_enum@@Base+0x1f8>
   112b4:	ldrh	r1, [r1, #2]
   112b8:	cmp	r1, #0
   112bc:	beq	11300 <print_enum@@Base+0x174>
   112c0:	add	r0, r8, r1
   112c4:	mov	r1, r7
   112c8:	ldr	r3, [r1, r0]!
   112cc:	movw	r0, #6916	; 0x1b04
   112d0:	movt	r0, #1
   112d4:	ldr	r2, [r1, #-4]
   112d8:	bl	109ac <printf@plt>
   112dc:	ldr	r0, [r9, #-4]
   112e0:	sub	r1, r8, r0
   112e4:	add	r1, r7, r1
   112e8:	sub	r1, r1, #4
   112ec:	ldrh	r1, [r1]
   112f0:	rsb	r0, r0, #0
   112f4:	cmp	r1, #10
   112f8:	bcs	1131c <print_enum@@Base+0x190>
   112fc:	b	11384 <print_enum@@Base+0x1f8>
   11300:	add	r1, r6, r4, lsl #2
   11304:	add	r1, r1, r8
   11308:	sub	r1, r1, r0
   1130c:	ldrh	r1, [r1]
   11310:	rsb	r0, r0, #0
   11314:	cmp	r1, #10
   11318:	bcc	11384 <print_enum@@Base+0x1f8>
   1131c:	add	r0, r0, r8
   11320:	add	r0, r7, r0
   11324:	ldrh	r0, [r0, #4]
   11328:	cmp	r0, #0
   1132c:	beq	11384 <print_enum@@Base+0x1f8>
   11330:	movw	r0, #6930	; 0x1b12
   11334:	movt	r0, #1
   11338:	bl	109ac <printf@plt>
   1133c:	ldr	r0, [r9, #-4]
   11340:	sub	r0, r8, r0
   11344:	add	r1, r7, r0
   11348:	mov	r0, #0
   1134c:	ldrh	r2, [r1, #-4]
   11350:	cmp	r2, #10
   11354:	bcc	11380 <print_enum@@Base+0x1f4>
   11358:	ldrh	r1, [r1, #4]
   1135c:	cmp	r1, #0
   11360:	beq	11380 <print_enum@@Base+0x1f4>
   11364:	add	r0, r8, r1
   11368:	add	r0, r7, r0
   1136c:	ldr	r0, [r0, #-4]
   11370:	add	r0, r0, r8
   11374:	add	r0, r0, r1
   11378:	add	r0, r7, r0
   1137c:	sub	r0, r0, #4
   11380:	bl	10d18 <print_object@@Base>
   11384:	mov	r0, #125	; 0x7d
   11388:	bl	10a3c <putchar@plt>
   1138c:	ldr	r0, [r6, #-4]
   11390:	add	r4, r4, #1
   11394:	add	r7, r7, #4
   11398:	cmp	r4, r0
   1139c:	bcc	11238 <print_enum@@Base+0xac>
   113a0:	mov	r0, #93	; 0x5d
   113a4:	bl	10a3c <putchar@plt>
   113a8:	ldr	r1, [sl]
   113ac:	mov	r0, sl
   113b0:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   113b4:	cmp	r1, #10
   113b8:	bcc	113f0 <print_enum@@Base+0x264>
   113bc:	ldrh	r0, [r0, #8]
   113c0:	cmp	r0, #0
   113c4:	beq	113f0 <print_enum@@Base+0x264>
   113c8:	ldrb	r0, [sl, r0]
   113cc:	movw	r2, #6842	; 0x1aba
   113d0:	movw	r1, #6837	; 0x1ab5
   113d4:	movt	r2, #1
   113d8:	movt	r1, #1
   113dc:	cmp	r0, #0
   113e0:	movw	r0, #6941	; 0x1b1d
   113e4:	moveq	r1, r2
   113e8:	movt	r0, #1
   113ec:	bl	109ac <printf@plt>
   113f0:	movw	r0, #6956	; 0x1b2c
   113f4:	movt	r0, #1
   113f8:	bl	109ac <printf@plt>
   113fc:	ldr	r1, [sl]
   11400:	mov	r0, sl
   11404:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11408:	cmp	r1, #12
   1140c:	bcc	11490 <print_enum@@Base+0x304>
   11410:	ldrh	r0, [r0, #10]
   11414:	cmp	r0, #0
   11418:	beq	11490 <print_enum@@Base+0x304>
   1141c:	ldr	r0, [sl, r0]!
   11420:	add	r0, sl, r0
   11424:	bl	10b74 <print_type@@Base>
   11428:	mov	r0, #125	; 0x7d
   1142c:	sub	sp, fp, #28
   11430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11434:	b	10a3c <putchar@plt>
   11438:	movw	r0, #7827	; 0x1e93
   1143c:	movt	r0, #1
   11440:	b	1144c <print_enum@@Base+0x2c0>
   11444:	movw	r0, #7477	; 0x1d35
   11448:	movt	r0, #1
   1144c:	movw	r1, #7515	; 0x1d5b
   11450:	movw	r3, #8348	; 0x209c
   11454:	mov	r2, #159	; 0x9f
   11458:	movt	r1, #1
   1145c:	movt	r3, #1
   11460:	bl	10a78 <__assert_fail@plt>
   11464:	movw	r0, #7827	; 0x1e93
   11468:	movt	r0, #1
   1146c:	b	114b8 <print_enum@@Base+0x32c>
   11470:	movw	r0, #7827	; 0x1e93
   11474:	movw	r1, #7515	; 0x1d5b
   11478:	movw	r3, #8275	; 0x2053
   1147c:	mov	r2, #183	; 0xb7
   11480:	movt	r0, #1
   11484:	movt	r1, #1
   11488:	movt	r3, #1
   1148c:	bl	10a78 <__assert_fail@plt>
   11490:	movw	r0, #7827	; 0x1e93
   11494:	movw	r1, #7515	; 0x1d5b
   11498:	movw	r3, #8421	; 0x20e5
   1149c:	mov	r2, #185	; 0xb9
   114a0:	movt	r0, #1
   114a4:	movt	r1, #1
   114a8:	movt	r3, #1
   114ac:	bl	10a78 <__assert_fail@plt>
   114b0:	movw	r0, #7477	; 0x1d35
   114b4:	movt	r0, #1
   114b8:	movw	r1, #7515	; 0x1d5b
   114bc:	movw	r3, #8208	; 0x2010
   114c0:	mov	r2, #177	; 0xb1
   114c4:	movt	r1, #1
   114c8:	movt	r3, #1
   114cc:	bl	10a78 <__assert_fail@plt>

000114d0 <print_schema@@Base>:
   114d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   114d4:	add	fp, sp, #24
   114d8:	cmp	r0, #0
   114dc:	beq	1176c <print_schema@@Base+0x29c>
   114e0:	ldr	r1, [r0]
   114e4:	mov	r8, r0
   114e8:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   114ec:	cmp	r1, #6
   114f0:	bcc	11740 <print_schema@@Base+0x270>
   114f4:	ldrh	r4, [r0, #4]
   114f8:	cmp	r4, #0
   114fc:	beq	11740 <print_schema@@Base+0x270>
   11500:	mov	r5, r8
   11504:	mov	r0, #123	; 0x7b
   11508:	ldr	r9, [r5, r4]!
   1150c:	bl	10a3c <putchar@plt>
   11510:	movw	r0, #6976	; 0x1b40
   11514:	movt	r0, #1
   11518:	bl	109ac <printf@plt>
   1151c:	ldr	r0, [r5, r9]
   11520:	cmp	r0, #0
   11524:	beq	1157c <print_schema@@Base+0xac>
   11528:	add	r1, r9, r4
   1152c:	mov	r4, #0
   11530:	mov	r6, #0
   11534:	add	r1, r8, r1
   11538:	add	r7, r1, #4
   1153c:	cmp	r6, #0
   11540:	beq	11550 <print_schema@@Base+0x80>
   11544:	mov	r0, #44	; 0x2c
   11548:	bl	10a3c <putchar@plt>
   1154c:	ldr	r0, [r5, r9]
   11550:	cmp	r0, r6
   11554:	bls	11700 <print_schema@@Base+0x230>
   11558:	ldr	r0, [r7, r6, lsl #2]
   1155c:	add	r0, r4, r0
   11560:	add	r0, r7, r0
   11564:	bl	10d18 <print_object@@Base>
   11568:	ldr	r0, [r5, r9]
   1156c:	add	r6, r6, #1
   11570:	add	r4, r4, #4
   11574:	cmp	r6, r0
   11578:	bcc	1153c <print_schema@@Base+0x6c>
   1157c:	mov	r0, #93	; 0x5d
   11580:	bl	10a3c <putchar@plt>
   11584:	ldr	r1, [r8]
   11588:	mov	r0, r8
   1158c:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11590:	cmp	r1, #8
   11594:	bcc	1174c <print_schema@@Base+0x27c>
   11598:	ldrh	r4, [r0, #6]
   1159c:	cmp	r4, #0
   115a0:	beq	1174c <print_schema@@Base+0x27c>
   115a4:	mov	r5, r8
   115a8:	movw	r0, #6988	; 0x1b4c
   115ac:	ldr	r9, [r5, r4]!
   115b0:	movt	r0, #1
   115b4:	bl	109ac <printf@plt>
   115b8:	ldr	r0, [r5, r9]
   115bc:	cmp	r0, #0
   115c0:	beq	11618 <print_schema@@Base+0x148>
   115c4:	add	r1, r9, r4
   115c8:	mov	r4, #0
   115cc:	mov	r6, #0
   115d0:	add	r1, r8, r1
   115d4:	add	r7, r1, #4
   115d8:	cmp	r6, #0
   115dc:	beq	115ec <print_schema@@Base+0x11c>
   115e0:	mov	r0, #44	; 0x2c
   115e4:	bl	10a3c <putchar@plt>
   115e8:	ldr	r0, [r5, r9]
   115ec:	cmp	r0, r6
   115f0:	bls	11720 <print_schema@@Base+0x250>
   115f4:	ldr	r0, [r7, r6, lsl #2]
   115f8:	add	r0, r4, r0
   115fc:	add	r0, r7, r0
   11600:	bl	1118c <print_enum@@Base>
   11604:	ldr	r0, [r5, r9]
   11608:	add	r6, r6, #1
   1160c:	add	r4, r4, #4
   11610:	cmp	r6, r0
   11614:	bcc	115d8 <print_schema@@Base+0x108>
   11618:	mov	r0, #93	; 0x5d
   1161c:	bl	10a3c <putchar@plt>
   11620:	ldr	r1, [r8]
   11624:	mov	r0, r8
   11628:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   1162c:	cmp	r1, #10
   11630:	bcc	116f0 <print_schema@@Base+0x220>
   11634:	ldrh	r1, [r0, #8]
   11638:	cmp	r1, #0
   1163c:	beq	11664 <print_schema@@Base+0x194>
   11640:	mov	r0, r8
   11644:	ldr	r1, [r0, r1]!
   11648:	add	r0, r0, r1
   1164c:	add	r1, r0, #4
   11650:	movw	r0, #6999	; 0x1b57
   11654:	movt	r0, #1
   11658:	bl	109ac <printf@plt>
   1165c:	ldr	r0, [r8]
   11660:	sub	r0, r8, r0
   11664:	ldrh	r1, [r0]
   11668:	cmp	r1, #12
   1166c:	bcc	116f0 <print_schema@@Base+0x220>
   11670:	ldrh	r1, [r0, #10]
   11674:	cmp	r1, #0
   11678:	beq	116a0 <print_schema@@Base+0x1d0>
   1167c:	mov	r0, r8
   11680:	ldr	r1, [r0, r1]!
   11684:	add	r0, r0, r1
   11688:	add	r1, r0, #4
   1168c:	movw	r0, #7018	; 0x1b6a
   11690:	movt	r0, #1
   11694:	bl	109ac <printf@plt>
   11698:	ldr	r0, [r8]
   1169c:	sub	r0, r8, r0
   116a0:	ldrh	r1, [r0]
   116a4:	cmp	r1, #14
   116a8:	bcc	116f0 <print_schema@@Base+0x220>
   116ac:	ldrh	r0, [r0, #12]
   116b0:	cmp	r0, #0
   116b4:	beq	116f0 <print_schema@@Base+0x220>
   116b8:	movw	r0, #7035	; 0x1b7b
   116bc:	movt	r0, #1
   116c0:	bl	109ac <printf@plt>
   116c4:	ldr	r0, [r8]
   116c8:	mov	r1, r8
   116cc:	ldrh	r2, [r1, -r0]!
   116d0:	mov	r0, #0
   116d4:	cmp	r2, #14
   116d8:	bcc	116ec <print_schema@@Base+0x21c>
   116dc:	ldrh	r1, [r1, #12]
   116e0:	cmp	r1, #0
   116e4:	ldrne	r0, [r8, r1]!
   116e8:	addne	r0, r8, r0
   116ec:	bl	10d18 <print_object@@Base>
   116f0:	movw	r0, #8817	; 0x2271
   116f4:	movt	r0, #1
   116f8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   116fc:	b	109f4 <puts@plt>
   11700:	movw	r0, #7931	; 0x1efb
   11704:	movw	r1, #7515	; 0x1d5b
   11708:	movw	r3, #8579	; 0x2183
   1170c:	mov	r2, #215	; 0xd7
   11710:	movt	r0, #1
   11714:	movt	r1, #1
   11718:	movt	r3, #1
   1171c:	bl	10a78 <__assert_fail@plt>
   11720:	movw	r0, #7931	; 0x1efb
   11724:	movw	r1, #7515	; 0x1d5b
   11728:	movw	r3, #8736	; 0x2220
   1172c:	mov	r2, #174	; 0xae
   11730:	movt	r0, #1
   11734:	movt	r1, #1
   11738:	movt	r3, #1
   1173c:	bl	10a78 <__assert_fail@plt>
   11740:	movw	r0, #7827	; 0x1e93
   11744:	movt	r0, #1
   11748:	b	11774 <print_schema@@Base+0x2a4>
   1174c:	movw	r0, #7827	; 0x1e93
   11750:	movw	r1, #7515	; 0x1d5b
   11754:	movw	r3, #8663	; 0x21d7
   11758:	mov	r2, #238	; 0xee
   1175c:	movt	r0, #1
   11760:	movt	r1, #1
   11764:	movt	r3, #1
   11768:	bl	10a78 <__assert_fail@plt>
   1176c:	movw	r0, #7477	; 0x1d35
   11770:	movt	r0, #1
   11774:	movw	r1, #7515	; 0x1d5b
   11778:	movw	r3, #8502	; 0x2136
   1177c:	mov	r2, #237	; 0xed
   11780:	movt	r1, #1
   11784:	movt	r3, #1
   11788:	bl	10a78 <__assert_fail@plt>

0001178c <load_and_dump_schema@@Base>:
   1178c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11790:	add	fp, sp, #24
   11794:	movw	r1, #8814	; 0x226e
   11798:	mov	r8, r0
   1179c:	movt	r1, #1
   117a0:	bl	109b8 <fopen@plt>
   117a4:	cmp	r0, #0
   117a8:	beq	11884 <load_and_dump_schema@@Base+0xf8>
   117ac:	mov	r1, #0
   117b0:	mov	r2, #2
   117b4:	mov	r6, r0
   117b8:	bl	10a60 <fseek@plt>
   117bc:	mov	r0, r6
   117c0:	bl	109d0 <ftell@plt>
   117c4:	mov	r7, r0
   117c8:	movw	r0, #10000	; 0x2710
   117cc:	cmp	r7, r0
   117d0:	bhi	11870 <load_and_dump_schema@@Base+0xe4>
   117d4:	mov	r0, r6
   117d8:	bl	109dc <rewind@plt>
   117dc:	cmp	r7, #0
   117e0:	mov	r0, r7
   117e4:	movweq	r0, #1
   117e8:	bl	10a00 <malloc@plt>
   117ec:	cmp	r0, #0
   117f0:	beq	11870 <load_and_dump_schema@@Base+0xe4>
   117f4:	mov	r4, r0
   117f8:	mov	r1, #0
   117fc:	mov	r5, r1
   11800:	add	r0, r4, r1
   11804:	sub	r2, r7, r1
   11808:	mov	r1, #1
   1180c:	mov	r3, r6
   11810:	bl	10a54 <fread_unlocked@plt>
   11814:	add	r1, r0, r5
   11818:	cmp	r0, #0
   1181c:	bne	117fc <load_and_dump_schema@@Base+0x70>
   11820:	mov	r0, r6
   11824:	bl	10a48 <fclose@plt>
   11828:	cmp	r7, r5
   1182c:	bne	1187c <load_and_dump_schema@@Base+0xf0>
   11830:	cmp	r7, #11
   11834:	bls	118ac <load_and_dump_schema@@Base+0x120>
   11838:	mov	r5, r4
   1183c:	movw	r0, #17986	; 0x4642
   11840:	ldr	r6, [r5, #4]!
   11844:	movt	r0, #21314	; 0x5342
   11848:	cmp	r6, r0
   1184c:	bne	118cc <load_and_dump_schema@@Base+0x140>
   11850:	ldr	r0, [r4]
   11854:	add	r0, r4, r0
   11858:	bl	114d0 <print_schema@@Base>
   1185c:	mov	r5, #0
   11860:	mov	r0, r4
   11864:	bl	109c4 <free@plt>
   11868:	mov	r0, r5
   1186c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11870:	mov	r0, r6
   11874:	bl	10a48 <fclose@plt>
   11878:	b	11884 <load_and_dump_schema@@Base+0xf8>
   1187c:	mov	r0, r4
   11880:	bl	109c4 <free@plt>
   11884:	movw	r0, #12384	; 0x3060
   11888:	movw	r1, #7050	; 0x1b8a
   1188c:	mov	r2, r8
   11890:	movt	r0, #2
   11894:	movt	r1, #1
   11898:	ldr	r0, [r0]
   1189c:	bl	10a30 <fprintf@plt>
   118a0:	mvn	r5, #0
   118a4:	mov	r0, r5
   118a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   118ac:	movw	r0, #12384	; 0x3060
   118b0:	movw	r1, #7091	; 0x1bb3
   118b4:	mov	r2, r8
   118b8:	movt	r0, #2
   118bc:	movt	r1, #1
   118c0:	ldr	r0, [r0]
   118c4:	bl	10a30 <fprintf@plt>
   118c8:	b	11920 <load_and_dump_schema@@Base+0x194>
   118cc:	ldr	r1, [r4, #8]
   118d0:	cmp	r1, r0
   118d4:	bne	11900 <load_and_dump_schema@@Base+0x174>
   118d8:	movw	r0, #12384	; 0x3060
   118dc:	mov	r1, #40	; 0x28
   118e0:	mov	r2, #1
   118e4:	movt	r0, #2
   118e8:	ldr	r3, [r0]
   118ec:	movw	r0, #7123	; 0x1bd3
   118f0:	movt	r0, #1
   118f4:	bl	109e8 <fwrite@plt>
   118f8:	add	r0, r5, r6
   118fc:	b	11858 <load_and_dump_schema@@Base+0xcc>
   11900:	movw	r0, #12384	; 0x3060
   11904:	mov	r1, #27
   11908:	mov	r2, #1
   1190c:	movt	r0, #2
   11910:	ldr	r3, [r0]
   11914:	movw	r0, #7164	; 0x1bfc
   11918:	movt	r0, #1
   1191c:	bl	109e8 <fwrite@plt>
   11920:	mvn	r5, #0
   11924:	mov	r0, r4
   11928:	bl	109c4 <free@plt>
   1192c:	mov	r0, r5
   11930:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011934 <main@@Base>:
   11934:	cmp	r0, #2
   11938:	bne	11944 <main@@Base+0x10>
   1193c:	ldr	r0, [r1, #4]
   11940:	b	1178c <load_and_dump_schema@@Base>
   11944:	push	{r4, sl, fp, lr}
   11948:	add	fp, sp, #8
   1194c:	movw	r4, #12384	; 0x3060
   11950:	movw	r0, #7192	; 0x1c18
   11954:	mov	r1, #28
   11958:	mov	r2, #1
   1195c:	movt	r4, #2
   11960:	movt	r0, #1
   11964:	ldr	r3, [r4]
   11968:	bl	109e8 <fwrite@plt>
   1196c:	ldr	r3, [r4]
   11970:	movw	r0, #7221	; 0x1c35
   11974:	mov	r1, #74	; 0x4a
   11978:	mov	r2, #1
   1197c:	movt	r0, #1
   11980:	bl	109e8 <fwrite@plt>
   11984:	ldr	r3, [r4]
   11988:	movw	r0, #7296	; 0x1c80
   1198c:	mov	r1, #180	; 0xb4
   11990:	mov	r2, #1
   11994:	movt	r0, #1
   11998:	bl	109e8 <fwrite@plt>
   1199c:	mvn	r0, #0
   119a0:	bl	10a24 <exit@plt>

000119a4 <__libc_csu_init@@Base>:
   119a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119a8:	mov	r7, r0
   119ac:	ldr	r6, [pc, #72]	; 119fc <__libc_csu_init@@Base+0x58>
   119b0:	ldr	r5, [pc, #72]	; 11a00 <__libc_csu_init@@Base+0x5c>
   119b4:	add	r6, pc, r6
   119b8:	add	r5, pc, r5
   119bc:	sub	r6, r6, r5
   119c0:	mov	r8, r1
   119c4:	mov	r9, r2
   119c8:	bl	1098c <printf@plt-0x20>
   119cc:	asrs	r6, r6, #2
   119d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119d4:	mov	r4, #0
   119d8:	add	r4, r4, #1
   119dc:	ldr	r3, [r5], #4
   119e0:	mov	r2, r9
   119e4:	mov	r1, r8
   119e8:	mov	r0, r7
   119ec:	blx	r3
   119f0:	cmp	r6, r4
   119f4:	bne	119d8 <__libc_csu_init@@Base+0x34>
   119f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119fc:	andeq	r1, r1, r0, asr r5
   11a00:	andeq	r1, r1, r8, asr #10

00011a04 <__libc_csu_fini@@Base>:
   11a04:	bx	lr

Disassembly of section .fini:

00011a08 <.fini>:
   11a08:	push	{r3, lr}
   11a0c:	pop	{r3, pc}
