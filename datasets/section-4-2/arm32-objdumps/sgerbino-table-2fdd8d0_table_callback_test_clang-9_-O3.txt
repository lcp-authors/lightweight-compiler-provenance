
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011e98 <.init>:
   11e98:	push	{r3, lr}
   11e9c:	bl	11f90 <_start@@Base+0x3c>
   11ea0:	pop	{r3, pc}

Disassembly of section .plt:

00011ea4 <strcmp@plt-0x14>:
   11ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ea8:	ldr	lr, [pc, #4]	; 11eb4 <strcmp@plt-0x4>
   11eac:	add	lr, pc, lr
   11eb0:	ldr	pc, [lr, #8]!
   11eb4:	andeq	r4, r1, ip, asr #2

00011eb8 <strcmp@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #20, 20	; 0x14000
   11ec0:	ldr	pc, [ip, #332]!	; 0x14c

00011ec4 <printf@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #20, 20	; 0x14000
   11ecc:	ldr	pc, [ip, #324]!	; 0x144

00011ed0 <free@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #20, 20	; 0x14000
   11ed8:	ldr	pc, [ip, #316]!	; 0x13c

00011edc <realloc@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #20, 20	; 0x14000
   11ee4:	ldr	pc, [ip, #308]!	; 0x134

00011ee8 <strcpy@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #20, 20	; 0x14000
   11ef0:	ldr	pc, [ip, #300]!	; 0x12c

00011ef4 <puts@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #20, 20	; 0x14000
   11efc:	ldr	pc, [ip, #292]!	; 0x124

00011f00 <malloc@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #20, 20	; 0x14000
   11f08:	ldr	pc, [ip, #284]!	; 0x11c

00011f0c <__libc_start_main@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #20, 20	; 0x14000
   11f14:	ldr	pc, [ip, #276]!	; 0x114

00011f18 <__gmon_start__@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #20, 20	; 0x14000
   11f20:	ldr	pc, [ip, #268]!	; 0x10c

00011f24 <strlen@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #20, 20	; 0x14000
   11f2c:	ldr	pc, [ip, #260]!	; 0x104

00011f30 <snprintf@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #20, 20	; 0x14000
   11f38:	ldr	pc, [ip, #252]!	; 0xfc

00011f3c <__isoc99_sscanf@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #20, 20	; 0x14000
   11f44:	ldr	pc, [ip, #244]!	; 0xf4

00011f48 <abort@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #20, 20	; 0x14000
   11f50:	ldr	pc, [ip, #236]!	; 0xec

Disassembly of section .text:

00011f54 <_start@@Base>:
   11f54:	mov	fp, #0
   11f58:	mov	lr, #0
   11f5c:	pop	{r1}		; (ldr r1, [sp], #4)
   11f60:	mov	r2, sp
   11f64:	push	{r2}		; (str r2, [sp, #-4]!)
   11f68:	push	{r0}		; (str r0, [sp, #-4]!)
   11f6c:	ldr	ip, [pc, #16]	; 11f84 <_start@@Base+0x30>
   11f70:	push	{ip}		; (str ip, [sp, #-4]!)
   11f74:	ldr	r0, [pc, #12]	; 11f88 <_start@@Base+0x34>
   11f78:	ldr	r3, [pc, #12]	; 11f8c <_start@@Base+0x38>
   11f7c:	bl	11f0c <__libc_start_main@plt>
   11f80:	bl	11f48 <abort@plt>
   11f84:	andeq	r5, r1, r0, lsl r7
   11f88:	andeq	r2, r1, r4, asr #32
   11f8c:			; <UNDEFINED> instruction: 0x000156b0
   11f90:	ldr	r3, [pc, #20]	; 11fac <_start@@Base+0x58>
   11f94:	ldr	r2, [pc, #20]	; 11fb0 <_start@@Base+0x5c>
   11f98:	add	r3, pc, r3
   11f9c:	ldr	r2, [r3, r2]
   11fa0:	cmp	r2, #0
   11fa4:	bxeq	lr
   11fa8:	b	11f18 <__gmon_start__@plt>
   11fac:	andeq	r4, r1, r0, rrx
   11fb0:	andeq	r0, r0, r0, asr #32
   11fb4:	ldr	r0, [pc, #24]	; 11fd4 <_start@@Base+0x80>
   11fb8:	ldr	r3, [pc, #24]	; 11fd8 <_start@@Base+0x84>
   11fbc:	cmp	r3, r0
   11fc0:	bxeq	lr
   11fc4:	ldr	r3, [pc, #16]	; 11fdc <_start@@Base+0x88>
   11fc8:	cmp	r3, #0
   11fcc:	bxeq	lr
   11fd0:	bx	r3
   11fd4:	andeq	r6, r2, ip, asr #32
   11fd8:	andeq	r6, r2, ip, asr #32
   11fdc:	andeq	r0, r0, r0
   11fe0:	ldr	r0, [pc, #36]	; 1200c <_start@@Base+0xb8>
   11fe4:	ldr	r1, [pc, #36]	; 12010 <_start@@Base+0xbc>
   11fe8:	sub	r1, r1, r0
   11fec:	asr	r1, r1, #2
   11ff0:	add	r1, r1, r1, lsr #31
   11ff4:	asrs	r1, r1, #1
   11ff8:	bxeq	lr
   11ffc:	ldr	r3, [pc, #16]	; 12014 <_start@@Base+0xc0>
   12000:	cmp	r3, #0
   12004:	bxeq	lr
   12008:	bx	r3
   1200c:	andeq	r6, r2, ip, asr #32
   12010:	andeq	r6, r2, ip, asr #32
   12014:	andeq	r0, r0, r0
   12018:	push	{r4, lr}
   1201c:	ldr	r4, [pc, #24]	; 1203c <_start@@Base+0xe8>
   12020:	ldrb	r3, [r4]
   12024:	cmp	r3, #0
   12028:	popne	{r4, pc}
   1202c:	bl	11fb4 <_start@@Base+0x60>
   12030:	mov	r3, #1
   12034:	strb	r3, [r4]
   12038:	pop	{r4, pc}
   1203c:	andeq	r6, r2, ip, asr #32
   12040:	b	11fe0 <_start@@Base+0x8c>

00012044 <main@@Base>:
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	sub	sp, sp, #64	; 0x40
   12050:	add	r5, sp, #8
   12054:	mov	r4, #0
   12058:	mov	r0, r5
   1205c:	str	r4, [sp, #4]
   12060:	bl	121ec <table_init@@Base>
   12064:	movw	r1, #8584	; 0x2188
   12068:	add	r2, sp, #4
   1206c:	mov	r0, r5
   12070:	mvn	r3, #0
   12074:	movt	r1, #1
   12078:	bl	129a0 <table_register_callback@@Base>
   1207c:	mov	r0, r5
   12080:	bl	13af8 <table_add_row@@Base>
   12084:	mov	r5, r0
   12088:	ldrb	r0, [sp, #4]
   1208c:	tst	r0, #2
   12090:	bne	120a4 <main@@Base+0x60>
   12094:	movw	r0, #22478	; 0x57ce
   12098:	movt	r0, #1
   1209c:	bl	11ef4 <puts@plt>
   120a0:	mvn	r4, #0
   120a4:	movw	r1, #22304	; 0x5720
   120a8:	add	r0, sp, #8
   120ac:	mov	r2, #0
   120b0:	movt	r1, #1
   120b4:	bl	12db0 <table_add_column@@Base>
   120b8:	mov	r6, r0
   120bc:	ldrb	r0, [sp, #4]
   120c0:	tst	r0, #8
   120c4:	bne	120d8 <main@@Base+0x94>
   120c8:	movw	r0, #22518	; 0x57f6
   120cc:	movt	r0, #1
   120d0:	bl	11ef4 <puts@plt>
   120d4:	mvn	r4, #0
   120d8:	add	r0, sp, #8
   120dc:	mov	r1, r5
   120e0:	mov	r2, r6
   120e4:	mov	r3, #42	; 0x2a
   120e8:	bl	140a4 <table_set_int@@Base>
   120ec:	ldrb	r0, [sp, #4]
   120f0:	tst	r0, #1
   120f4:	bne	12108 <main@@Base+0xc4>
   120f8:	movw	r0, #22307	; 0x5723
   120fc:	movt	r0, #1
   12100:	bl	11ec4 <printf@plt>
   12104:	mvn	r4, #0
   12108:	add	r0, sp, #8
   1210c:	mov	r1, r5
   12110:	bl	13ba8 <table_remove_row@@Base>
   12114:	ldrb	r0, [sp, #4]
   12118:	tst	r0, #4
   1211c:	bne	12130 <main@@Base+0xec>
   12120:	movw	r0, #22351	; 0x574f
   12124:	movt	r0, #1
   12128:	bl	11ec4 <printf@plt>
   1212c:	mvn	r4, #0
   12130:	add	r0, sp, #8
   12134:	mov	r1, r6
   12138:	bl	12ee8 <table_remove_column@@Base>
   1213c:	ldrb	r0, [sp, #4]
   12140:	tst	r0, #16
   12144:	bne	12158 <main@@Base+0x114>
   12148:	movw	r0, #22393	; 0x5779
   1214c:	movt	r0, #1
   12150:	bl	11ec4 <printf@plt>
   12154:	mvn	r4, #0
   12158:	add	r0, sp, #8
   1215c:	bl	12248 <table_destroy@@Base>
   12160:	ldrb	r0, [sp, #4]
   12164:	tst	r0, #64	; 0x40
   12168:	bne	1217c <main@@Base+0x138>
   1216c:	movw	r0, #22438	; 0x57a6
   12170:	movt	r0, #1
   12174:	bl	11ec4 <printf@plt>
   12178:	mvn	r4, #0
   1217c:	mov	r0, r4
   12180:	sub	sp, fp, #16
   12184:	pop	{r4, r5, r6, sl, fp, pc}
   12188:	ldr	r0, [sp]
   1218c:	ldr	r1, [r0]
   12190:	orr	r1, r1, r3
   12194:	str	r1, [r0]
   12198:	bx	lr

0001219c <table_new@@Base>:
   1219c:	push	{fp, lr}
   121a0:	mov	fp, sp
   121a4:	mov	r0, #56	; 0x38
   121a8:	bl	11f00 <malloc@plt>
   121ac:	vmov.i32	q8, #0	; 0x00000000
   121b0:	mov	r1, #0
   121b4:	mov	r2, #10
   121b8:	mov	r3, #20
   121bc:	str	r1, [r0]
   121c0:	stmib	r0, {r1, r2}
   121c4:	str	r1, [r0, #12]
   121c8:	str	r1, [r0, #16]
   121cc:	str	r1, [r0, #20]
   121d0:	str	r3, [r0, #24]
   121d4:	str	r1, [r0, #28]
   121d8:	str	r2, [r0, #48]	; 0x30
   121dc:	str	r1, [r0, #52]	; 0x34
   121e0:	add	r1, r0, #32
   121e4:	vst1.32	{d16-d17}, [r1]
   121e8:	pop	{fp, pc}

000121ec <table_init@@Base>:
   121ec:	vmov.i32	q8, #0	; 0x00000000
   121f0:	mov	r1, #0
   121f4:	mov	r2, #10
   121f8:	mov	r3, #20
   121fc:	str	r1, [r0]
   12200:	stmib	r0, {r1, r2}
   12204:	str	r1, [r0, #12]
   12208:	str	r1, [r0, #16]
   1220c:	str	r1, [r0, #20]
   12210:	str	r3, [r0, #24]
   12214:	str	r1, [r0, #28]
   12218:	str	r2, [r0, #48]	; 0x30
   1221c:	str	r1, [r0, #52]	; 0x34
   12220:	add	r0, r0, #32
   12224:	vst1.32	{d16-d17}, [r0]
   12228:	bx	lr

0001222c <table_delete@@Base>:
   1222c:	push	{r4, sl, fp, lr}
   12230:	add	fp, sp, #8
   12234:	mov	r4, r0
   12238:	bl	12248 <table_destroy@@Base>
   1223c:	mov	r0, r4
   12240:	pop	{r4, sl, fp, lr}
   12244:	b	11ed0 <free@plt>

00012248 <table_destroy@@Base>:
   12248:	cmp	r0, #0
   1224c:	bxeq	lr
   12250:	push	{r4, r5, r6, sl, fp, lr}
   12254:	add	fp, sp, #16
   12258:	mvn	r1, #0
   1225c:	mvn	r2, #0
   12260:	mov	r3, #64	; 0x40
   12264:	mov	r4, r0
   12268:	bl	12c08 <table_notify@@Base>
   1226c:	mov	r0, r4
   12270:	bl	13af0 <table_get_row_length@@Base>
   12274:	cmp	r0, #1
   12278:	blt	1229c <table_destroy@@Base+0x54>
   1227c:	mov	r5, r0
   12280:	mov	r6, #0
   12284:	mov	r0, r4
   12288:	mov	r1, r6
   1228c:	bl	13a94 <table_row_destroy@@Base>
   12290:	add	r6, r6, #1
   12294:	cmp	r5, r6
   12298:	bne	12284 <table_destroy@@Base+0x3c>
   1229c:	ldr	r0, [r4, #16]
   122a0:	cmp	r0, #0
   122a4:	beq	122ac <table_destroy@@Base+0x64>
   122a8:	bl	11ed0 <free@plt>
   122ac:	mov	r0, r4
   122b0:	bl	12d18 <table_get_column_length@@Base>
   122b4:	cmp	r0, #1
   122b8:	blt	122dc <table_destroy@@Base+0x94>
   122bc:	mov	r5, r0
   122c0:	mov	r6, #0
   122c4:	mov	r0, r4
   122c8:	mov	r1, r6
   122cc:	bl	12d00 <table_column_destroy@@Base>
   122d0:	add	r6, r6, #1
   122d4:	cmp	r5, r6
   122d8:	bne	122c4 <table_destroy@@Base+0x7c>
   122dc:	ldr	r0, [r4]
   122e0:	cmp	r0, #0
   122e4:	beq	122ec <table_destroy@@Base+0xa4>
   122e8:	bl	11ed0 <free@plt>
   122ec:	ldr	r0, [r4, #36]	; 0x24
   122f0:	cmp	r0, #0
   122f4:	beq	122fc <table_destroy@@Base+0xb4>
   122f8:	bl	11ed0 <free@plt>
   122fc:	ldr	r0, [r4, #40]	; 0x28
   12300:	cmp	r0, #0
   12304:	beq	1230c <table_destroy@@Base+0xc4>
   12308:	bl	11ed0 <free@plt>
   1230c:	ldr	r0, [r4, #44]	; 0x2c
   12310:	cmp	r0, #0
   12314:	pop	{r4, r5, r6, sl, fp, lr}
   12318:	beq	12320 <table_destroy@@Base+0xd8>
   1231c:	b	11ed0 <free@plt>
   12320:	bx	lr

00012324 <table_dupe@@Base>:
   12324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12328:	add	fp, sp, #28
   1232c:	sub	sp, sp, #12
   12330:	mov	r4, r0
   12334:	bl	13af0 <table_get_row_length@@Base>
   12338:	mov	r8, r0
   1233c:	mov	r0, r4
   12340:	bl	12d18 <table_get_column_length@@Base>
   12344:	mov	r6, r0
   12348:	mov	r0, #56	; 0x38
   1234c:	bl	11f00 <malloc@plt>
   12350:	vmov.i32	q8, #0	; 0x00000000
   12354:	mov	sl, r0
   12358:	mov	r5, #0
   1235c:	mov	r0, #10
   12360:	mov	r1, #20
   12364:	cmp	r6, #1
   12368:	str	r5, [sl]
   1236c:	str	r5, [sl, #4]
   12370:	str	r0, [sl, #8]
   12374:	str	r5, [sl, #12]
   12378:	str	r5, [sl, #16]
   1237c:	str	r5, [sl, #20]
   12380:	str	r1, [sl, #24]
   12384:	str	r5, [sl, #28]
   12388:	str	r0, [sl, #48]	; 0x30
   1238c:	add	r0, sl, #32
   12390:	str	r5, [sl, #52]	; 0x34
   12394:	vst1.32	{d16-d17}, [r0]
   12398:	blt	123d4 <table_dupe@@Base+0xb0>
   1239c:	mov	r0, r4
   123a0:	mov	r1, r5
   123a4:	bl	12d8c <table_get_column_name@@Base>
   123a8:	mov	r7, r0
   123ac:	mov	r0, r4
   123b0:	mov	r1, r5
   123b4:	bl	12d9c <table_get_column_data_type@@Base>
   123b8:	mov	r2, r0
   123bc:	mov	r0, sl
   123c0:	mov	r1, r7
   123c4:	bl	12db0 <table_add_column@@Base>
   123c8:	add	r5, r5, #1
   123cc:	cmp	r6, r5
   123d0:	bne	1239c <table_dupe@@Base+0x78>
   123d4:	cmp	r8, #1
   123d8:	blt	12968 <table_dupe@@Base+0x644>
   123dc:	mov	r5, #0
   123e0:	add	r9, sp, #8
   123e4:	mov	r0, sl
   123e8:	bl	13af8 <table_add_row@@Base>
   123ec:	cmp	r6, #1
   123f0:	bge	12410 <table_dupe@@Base+0xec>
   123f4:	add	r5, r5, #1
   123f8:	cmp	r5, r8
   123fc:	beq	12968 <table_dupe@@Base+0x644>
   12400:	mov	r0, sl
   12404:	bl	13af8 <table_add_row@@Base>
   12408:	cmp	r6, #1
   1240c:	blt	123f4 <table_dupe@@Base+0xd0>
   12410:	mov	r7, #0
   12414:	b	1244c <table_dupe@@Base+0x128>
   12418:	mov	r0, r4
   1241c:	mov	r1, r5
   12420:	mov	r2, r7
   12424:	bl	13a50 <table_get_ptr@@Base>
   12428:	str	r0, [sp, #8]
   1242c:	mov	r0, sl
   12430:	mov	r1, r5
   12434:	mov	r2, r7
   12438:	mov	r3, r9
   1243c:	bl	14be8 <table_set_ptr@@Base>
   12440:	add	r7, r7, #1
   12444:	cmp	r6, r7
   12448:	beq	123f4 <table_dupe@@Base+0xd0>
   1244c:	mov	r0, r4
   12450:	mov	r1, r7
   12454:	bl	12d9c <table_get_column_data_type@@Base>
   12458:	cmp	r0, #23
   1245c:	bhi	12440 <table_dupe@@Base+0x11c>
   12460:	add	r1, pc, #0
   12464:	ldr	pc, [r1, r0, lsl #2]
   12468:	andeq	r2, r1, r8, asr #9
   1246c:	strdeq	r2, [r1], -ip
   12470:	andeq	r2, r1, r0, lsr r5
   12474:	andeq	r2, r1, r4, ror #10
   12478:	muleq	r1, r8, r5
   1247c:	andeq	r2, r1, ip, asr #11
   12480:	andeq	r2, r1, r0, lsl #12
   12484:	andeq	r2, r1, r4, lsr r6
   12488:	andeq	r2, r1, r8, ror #12
   1248c:	muleq	r1, ip, r6
   12490:	ldrdeq	r2, [r1], -r0
   12494:	andeq	r2, r1, r4, lsl #14
   12498:	andeq	r2, r1, r8, lsr r7
   1249c:	andeq	r2, r1, ip, ror #14
   124a0:	andeq	r2, r1, r0, lsr #15
   124a4:	ldrdeq	r2, [r1], -r4
   124a8:	andeq	r2, r1, r8, lsl #16
   124ac:	andeq	r2, r1, r8, lsr r8
   124b0:	andeq	r2, r1, r8, ror #16
   124b4:	muleq	r1, r8, r8
   124b8:	andeq	r2, r1, ip, asr #17
   124bc:	andeq	r2, r1, r0, lsl #18
   124c0:	andeq	r2, r1, r4, lsr r9
   124c4:	andeq	r2, r1, r8, lsl r4
   124c8:	mov	r0, r4
   124cc:	mov	r1, r5
   124d0:	mov	r2, r7
   124d4:	bl	13844 <table_get_int@@Base>
   124d8:	mov	r3, r0
   124dc:	mov	r0, sl
   124e0:	mov	r1, r5
   124e4:	mov	r2, r7
   124e8:	bl	140a4 <table_set_int@@Base>
   124ec:	add	r7, r7, #1
   124f0:	cmp	r6, r7
   124f4:	bne	1244c <table_dupe@@Base+0x128>
   124f8:	b	123f4 <table_dupe@@Base+0xd0>
   124fc:	mov	r0, r4
   12500:	mov	r1, r5
   12504:	mov	r2, r7
   12508:	bl	1385c <table_get_uint@@Base>
   1250c:	mov	r3, r0
   12510:	mov	r0, sl
   12514:	mov	r1, r5
   12518:	mov	r2, r7
   1251c:	bl	14124 <table_set_uint@@Base>
   12520:	add	r7, r7, #1
   12524:	cmp	r6, r7
   12528:	bne	1244c <table_dupe@@Base+0x128>
   1252c:	b	123f4 <table_dupe@@Base+0xd0>
   12530:	mov	r0, r4
   12534:	mov	r1, r5
   12538:	mov	r2, r7
   1253c:	bl	13874 <table_get_int8@@Base>
   12540:	mov	r3, r0
   12544:	mov	r0, sl
   12548:	mov	r1, r5
   1254c:	mov	r2, r7
   12550:	bl	141a4 <table_set_int8@@Base>
   12554:	add	r7, r7, #1
   12558:	cmp	r6, r7
   1255c:	bne	1244c <table_dupe@@Base+0x128>
   12560:	b	123f4 <table_dupe@@Base+0xd0>
   12564:	mov	r0, r4
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	1388c <table_get_uint8@@Base>
   12574:	mov	r3, r0
   12578:	mov	r0, sl
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	14224 <table_set_uint8@@Base>
   12588:	add	r7, r7, #1
   1258c:	cmp	r6, r7
   12590:	bne	1244c <table_dupe@@Base+0x128>
   12594:	b	123f4 <table_dupe@@Base+0xd0>
   12598:	mov	r0, r4
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	138a4 <table_get_int16@@Base>
   125a8:	mov	r3, r0
   125ac:	mov	r0, sl
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	142a4 <table_set_int16@@Base>
   125bc:	add	r7, r7, #1
   125c0:	cmp	r6, r7
   125c4:	bne	1244c <table_dupe@@Base+0x128>
   125c8:	b	123f4 <table_dupe@@Base+0xd0>
   125cc:	mov	r0, r4
   125d0:	mov	r1, r5
   125d4:	mov	r2, r7
   125d8:	bl	138bc <table_get_uint16@@Base>
   125dc:	mov	r3, r0
   125e0:	mov	r0, sl
   125e4:	mov	r1, r5
   125e8:	mov	r2, r7
   125ec:	bl	14324 <table_set_uint16@@Base>
   125f0:	add	r7, r7, #1
   125f4:	cmp	r6, r7
   125f8:	bne	1244c <table_dupe@@Base+0x128>
   125fc:	b	123f4 <table_dupe@@Base+0xd0>
   12600:	mov	r0, r4
   12604:	mov	r1, r5
   12608:	mov	r2, r7
   1260c:	bl	138d4 <table_get_int32@@Base>
   12610:	mov	r3, r0
   12614:	mov	r0, sl
   12618:	mov	r1, r5
   1261c:	mov	r2, r7
   12620:	bl	143a4 <table_set_int32@@Base>
   12624:	add	r7, r7, #1
   12628:	cmp	r6, r7
   1262c:	bne	1244c <table_dupe@@Base+0x128>
   12630:	b	123f4 <table_dupe@@Base+0xd0>
   12634:	mov	r0, r4
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	138ec <table_get_uint32@@Base>
   12644:	mov	r3, r0
   12648:	mov	r0, sl
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	14424 <table_set_uint32@@Base>
   12658:	add	r7, r7, #1
   1265c:	cmp	r6, r7
   12660:	bne	1244c <table_dupe@@Base+0x128>
   12664:	b	123f4 <table_dupe@@Base+0xd0>
   12668:	mov	r0, r4
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	13904 <table_get_int64@@Base>
   12678:	stm	sp, {r0, r1}
   1267c:	mov	r0, sl
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	144a4 <table_set_int64@@Base>
   1268c:	add	r7, r7, #1
   12690:	cmp	r6, r7
   12694:	bne	1244c <table_dupe@@Base+0x128>
   12698:	b	123f4 <table_dupe@@Base+0xd0>
   1269c:	mov	r0, r4
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	1391c <table_get_uint64@@Base>
   126ac:	stm	sp, {r0, r1}
   126b0:	mov	r0, sl
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	1452c <table_set_uint64@@Base>
   126c0:	add	r7, r7, #1
   126c4:	cmp	r6, r7
   126c8:	bne	1244c <table_dupe@@Base+0x128>
   126cc:	b	123f4 <table_dupe@@Base+0xd0>
   126d0:	mov	r0, r4
   126d4:	mov	r1, r5
   126d8:	mov	r2, r7
   126dc:	bl	13934 <table_get_short@@Base>
   126e0:	mov	r3, r0
   126e4:	mov	r0, sl
   126e8:	mov	r1, r5
   126ec:	mov	r2, r7
   126f0:	bl	145b4 <table_set_short@@Base>
   126f4:	add	r7, r7, #1
   126f8:	cmp	r6, r7
   126fc:	bne	1244c <table_dupe@@Base+0x128>
   12700:	b	123f4 <table_dupe@@Base+0xd0>
   12704:	mov	r0, r4
   12708:	mov	r1, r5
   1270c:	mov	r2, r7
   12710:	bl	1394c <table_get_ushort@@Base>
   12714:	mov	r3, r0
   12718:	mov	r0, sl
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	14634 <table_set_ushort@@Base>
   12728:	add	r7, r7, #1
   1272c:	cmp	r6, r7
   12730:	bne	1244c <table_dupe@@Base+0x128>
   12734:	b	123f4 <table_dupe@@Base+0xd0>
   12738:	mov	r0, r4
   1273c:	mov	r1, r5
   12740:	mov	r2, r7
   12744:	bl	13964 <table_get_long@@Base>
   12748:	mov	r3, r0
   1274c:	mov	r0, sl
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	146b4 <table_set_long@@Base>
   1275c:	add	r7, r7, #1
   12760:	cmp	r6, r7
   12764:	bne	1244c <table_dupe@@Base+0x128>
   12768:	b	123f4 <table_dupe@@Base+0xd0>
   1276c:	mov	r0, r4
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	1397c <table_get_ulong@@Base>
   1277c:	mov	r3, r0
   12780:	mov	r0, sl
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	14734 <table_set_ulong@@Base>
   12790:	add	r7, r7, #1
   12794:	cmp	r6, r7
   12798:	bne	1244c <table_dupe@@Base+0x128>
   1279c:	b	123f4 <table_dupe@@Base+0xd0>
   127a0:	mov	r0, r4
   127a4:	mov	r1, r5
   127a8:	mov	r2, r7
   127ac:	bl	13994 <table_get_llong@@Base>
   127b0:	stm	sp, {r0, r1}
   127b4:	mov	r0, sl
   127b8:	mov	r1, r5
   127bc:	mov	r2, r7
   127c0:	bl	147b4 <table_set_llong@@Base>
   127c4:	add	r7, r7, #1
   127c8:	cmp	r6, r7
   127cc:	bne	1244c <table_dupe@@Base+0x128>
   127d0:	b	123f4 <table_dupe@@Base+0xd0>
   127d4:	mov	r0, r4
   127d8:	mov	r1, r5
   127dc:	mov	r2, r7
   127e0:	bl	139ac <table_get_ullong@@Base>
   127e4:	stm	sp, {r0, r1}
   127e8:	mov	r0, sl
   127ec:	mov	r1, r5
   127f0:	mov	r2, r7
   127f4:	bl	1483c <table_set_ullong@@Base>
   127f8:	add	r7, r7, #1
   127fc:	cmp	r6, r7
   12800:	bne	1244c <table_dupe@@Base+0x128>
   12804:	b	123f4 <table_dupe@@Base+0xd0>
   12808:	mov	r0, r4
   1280c:	mov	r1, r5
   12810:	mov	r2, r7
   12814:	bl	139c4 <table_get_float@@Base>
   12818:	mov	r0, sl
   1281c:	mov	r1, r5
   12820:	mov	r2, r7
   12824:	bl	148c4 <table_set_float@@Base>
   12828:	add	r7, r7, #1
   1282c:	cmp	r6, r7
   12830:	bne	1244c <table_dupe@@Base+0x128>
   12834:	b	123f4 <table_dupe@@Base+0xd0>
   12838:	mov	r0, r4
   1283c:	mov	r1, r5
   12840:	mov	r2, r7
   12844:	bl	139dc <table_get_double@@Base>
   12848:	mov	r0, sl
   1284c:	mov	r1, r5
   12850:	mov	r2, r7
   12854:	bl	14950 <table_set_double@@Base>
   12858:	add	r7, r7, #1
   1285c:	cmp	r6, r7
   12860:	bne	1244c <table_dupe@@Base+0x128>
   12864:	b	123f4 <table_dupe@@Base+0xd0>
   12868:	mov	r0, r4
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	139f4 <table_get_ldouble@@Base>
   12878:	mov	r0, sl
   1287c:	mov	r1, r5
   12880:	mov	r2, r7
   12884:	bl	149d8 <table_set_ldouble@@Base>
   12888:	add	r7, r7, #1
   1288c:	cmp	r6, r7
   12890:	bne	1244c <table_dupe@@Base+0x128>
   12894:	b	123f4 <table_dupe@@Base+0xd0>
   12898:	mov	r0, r4
   1289c:	mov	r1, r5
   128a0:	mov	r2, r7
   128a4:	bl	13a0c <table_get_char@@Base>
   128a8:	mov	r3, r0
   128ac:	mov	r0, sl
   128b0:	mov	r1, r5
   128b4:	mov	r2, r7
   128b8:	bl	14ae8 <table_set_char@@Base>
   128bc:	add	r7, r7, #1
   128c0:	cmp	r6, r7
   128c4:	bne	1244c <table_dupe@@Base+0x128>
   128c8:	b	123f4 <table_dupe@@Base+0xd0>
   128cc:	mov	r0, r4
   128d0:	mov	r1, r5
   128d4:	mov	r2, r7
   128d8:	bl	13a24 <table_get_uchar@@Base>
   128dc:	mov	r3, r0
   128e0:	mov	r0, sl
   128e4:	mov	r1, r5
   128e8:	mov	r2, r7
   128ec:	bl	14b68 <table_set_uchar@@Base>
   128f0:	add	r7, r7, #1
   128f4:	cmp	r6, r7
   128f8:	bne	1244c <table_dupe@@Base+0x128>
   128fc:	b	123f4 <table_dupe@@Base+0xd0>
   12900:	mov	r0, r4
   12904:	mov	r1, r5
   12908:	mov	r2, r7
   1290c:	bl	13a3c <table_get_string@@Base>
   12910:	mov	r3, r0
   12914:	mov	r0, sl
   12918:	mov	r1, r5
   1291c:	mov	r2, r7
   12920:	bl	14a60 <table_set_string@@Base>
   12924:	add	r7, r7, #1
   12928:	cmp	r6, r7
   1292c:	bne	1244c <table_dupe@@Base+0x128>
   12930:	b	123f4 <table_dupe@@Base+0xd0>
   12934:	mov	r0, r4
   12938:	mov	r1, r5
   1293c:	mov	r2, r7
   12940:	bl	1382c <table_get_bool@@Base>
   12944:	mov	r3, r0
   12948:	mov	r0, sl
   1294c:	mov	r1, r5
   12950:	mov	r2, r7
   12954:	bl	14024 <table_set_bool@@Base>
   12958:	add	r7, r7, #1
   1295c:	cmp	r6, r7
   12960:	bne	1244c <table_dupe@@Base+0x128>
   12964:	b	123f4 <table_dupe@@Base+0xd0>
   12968:	mov	r0, sl
   1296c:	sub	sp, fp, #28
   12970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012974 <table_get_major_version@@Base>:
   12974:	mov	r0, #0
   12978:	bx	lr

0001297c <table_get_minor_version@@Base>:
   1297c:	mov	r0, #0
   12980:	bx	lr

00012984 <table_get_patch_version@@Base>:
   12984:	mov	r0, #0
   12988:	bx	lr

0001298c <table_get_version@@Base>:
   1298c:	movw	r0, #22708	; 0x58b4
   12990:	movt	r0, #1
   12994:	bx	lr

00012998 <table_get_callback_length@@Base>:
   12998:	ldr	r0, [r0, #32]
   1299c:	bx	lr

000129a0 <table_register_callback@@Base>:
   129a0:	push	{r4, r5, r6, r7, fp, lr}
   129a4:	add	fp, sp, #16
   129a8:	mov	r5, r0
   129ac:	ldr	r0, [r0, #32]
   129b0:	mov	r4, r3
   129b4:	mov	r6, r2
   129b8:	mov	r7, r1
   129bc:	cmp	r0, #1
   129c0:	blt	12a1c <table_register_callback@@Base+0x7c>
   129c4:	ldr	r2, [r5, #36]	; 0x24
   129c8:	mov	r1, #0
   129cc:	ldr	r3, [r2, r1, lsl #2]
   129d0:	cmp	r3, r7
   129d4:	beq	129f0 <table_register_callback@@Base+0x50>
   129d8:	add	r1, r1, #1
   129dc:	cmp	r0, r1
   129e0:	beq	12a1c <table_register_callback@@Base+0x7c>
   129e4:	ldr	r3, [r2, r1, lsl #2]
   129e8:	cmp	r3, r7
   129ec:	bne	129d8 <table_register_callback@@Base+0x38>
   129f0:	ldr	r3, [r5, #40]	; 0x28
   129f4:	ldr	r3, [r3, r1, lsl #2]
   129f8:	cmp	r3, r6
   129fc:	bne	129d8 <table_register_callback@@Base+0x38>
   12a00:	cmp	r1, #0
   12a04:	beq	12a1c <table_register_callback@@Base+0x7c>
   12a08:	ldr	r0, [r5, #44]	; 0x2c
   12a0c:	ldr	r2, [r0, r1, lsl #2]
   12a10:	orr	r2, r2, r4
   12a14:	str	r2, [r0, r1, lsl #2]
   12a18:	pop	{r4, r5, r6, r7, fp, pc}
   12a1c:	ldr	r1, [r5, #48]	; 0x30
   12a20:	udiv	r2, r0, r1
   12a24:	mls	r2, r2, r1, r0
   12a28:	cmp	r2, #0
   12a2c:	bne	12a78 <table_register_callback@@Base+0xd8>
   12a30:	ldr	r2, [r5, #52]	; 0x34
   12a34:	ldr	r0, [r5, #36]	; 0x24
   12a38:	add	r1, r2, r1
   12a3c:	str	r1, [r5, #52]	; 0x34
   12a40:	lsl	r1, r1, #2
   12a44:	bl	11edc <realloc@plt>
   12a48:	str	r0, [r5, #36]	; 0x24
   12a4c:	ldr	r1, [r5, #52]	; 0x34
   12a50:	ldr	r0, [r5, #40]	; 0x28
   12a54:	lsl	r1, r1, #2
   12a58:	bl	11edc <realloc@plt>
   12a5c:	str	r0, [r5, #40]	; 0x28
   12a60:	ldr	r1, [r5, #52]	; 0x34
   12a64:	ldr	r0, [r5, #44]	; 0x2c
   12a68:	lsl	r1, r1, #2
   12a6c:	bl	11edc <realloc@plt>
   12a70:	str	r0, [r5, #44]	; 0x2c
   12a74:	ldr	r0, [r5, #32]
   12a78:	ldr	r1, [r5, #36]	; 0x24
   12a7c:	str	r7, [r1, r0, lsl #2]
   12a80:	ldr	r1, [r5, #40]	; 0x28
   12a84:	str	r6, [r1, r0, lsl #2]
   12a88:	ldr	r1, [r5, #44]	; 0x2c
   12a8c:	str	r4, [r1, r0, lsl #2]
   12a90:	ldr	r0, [r5, #32]
   12a94:	add	r0, r0, #1
   12a98:	str	r0, [r5, #32]
   12a9c:	pop	{r4, r5, r6, r7, fp, pc}

00012aa0 <table_unregister_callback@@Base>:
   12aa0:	push	{r4, r5, r6, sl, fp, lr}
   12aa4:	add	fp, sp, #16
   12aa8:	ldr	r4, [r0, #32]
   12aac:	cmp	r4, #1
   12ab0:	blt	12c04 <table_unregister_callback@@Base+0x164>
   12ab4:	ldr	r3, [r0, #36]	; 0x24
   12ab8:	mov	r6, r0
   12abc:	mov	r0, #0
   12ac0:	ldr	r5, [r3, r0, lsl #2]
   12ac4:	cmp	r5, r1
   12ac8:	beq	12ae4 <table_unregister_callback@@Base+0x44>
   12acc:	add	r0, r0, #1
   12ad0:	cmp	r0, r4
   12ad4:	beq	12c04 <table_unregister_callback@@Base+0x164>
   12ad8:	ldr	r5, [r3, r0, lsl #2]
   12adc:	cmp	r5, r1
   12ae0:	bne	12acc <table_unregister_callback@@Base+0x2c>
   12ae4:	ldr	r5, [r6, #40]	; 0x28
   12ae8:	ldr	r5, [r5, r0, lsl #2]
   12aec:	cmp	r5, r2
   12af0:	bne	12acc <table_unregister_callback@@Base+0x2c>
   12af4:	sub	r1, r4, #1
   12af8:	cmp	r0, r1
   12afc:	bge	12b80 <table_unregister_callback@@Base+0xe0>
   12b00:	add	r2, r0, #1
   12b04:	ldr	r1, [r3, r2, lsl #2]
   12b08:	str	r1, [r3, r0, lsl #2]
   12b0c:	ldr	r1, [r6, #40]	; 0x28
   12b10:	ldr	r3, [r1, r2, lsl #2]
   12b14:	str	r3, [r1, r0, lsl #2]
   12b18:	ldr	r1, [r6, #44]	; 0x2c
   12b1c:	ldr	r3, [r1, r2, lsl #2]
   12b20:	str	r3, [r1, r0, lsl #2]
   12b24:	ldr	r1, [r6, #32]
   12b28:	sub	r1, r1, #1
   12b2c:	cmp	r2, r1
   12b30:	bge	12b80 <table_unregister_callback@@Base+0xe0>
   12b34:	ldr	r1, [r6, #36]	; 0x24
   12b38:	add	r1, r1, r0, lsl #2
   12b3c:	ldr	r2, [r1, #8]
   12b40:	str	r2, [r1, #4]
   12b44:	ldr	r1, [r6, #40]	; 0x28
   12b48:	add	r1, r1, r0, lsl #2
   12b4c:	ldr	r2, [r1, #8]
   12b50:	str	r2, [r1, #4]
   12b54:	ldr	r1, [r6, #44]	; 0x2c
   12b58:	add	r1, r1, r0, lsl #2
   12b5c:	ldr	r2, [r1, #8]
   12b60:	str	r2, [r1, #4]
   12b64:	add	r2, r0, #1
   12b68:	add	r0, r0, #2
   12b6c:	ldr	r1, [r6, #32]
   12b70:	sub	r1, r1, #1
   12b74:	cmp	r0, r1
   12b78:	mov	r0, r2
   12b7c:	blt	12b34 <table_unregister_callback@@Base+0x94>
   12b80:	str	r1, [r6, #32]
   12b84:	ldr	r2, [r6, #48]	; 0x30
   12b88:	udiv	r0, r1, r2
   12b8c:	mls	r0, r0, r2, r1
   12b90:	cmp	r0, #0
   12b94:	popne	{r4, r5, r6, sl, fp, pc}
   12b98:	ldr	r1, [r6, #52]	; 0x34
   12b9c:	ldr	r0, [r6, #36]	; 0x24
   12ba0:	subs	r1, r1, r2
   12ba4:	str	r1, [r6, #52]	; 0x34
   12ba8:	beq	12be0 <table_unregister_callback@@Base+0x140>
   12bac:	lsl	r1, r1, #2
   12bb0:	bl	11edc <realloc@plt>
   12bb4:	str	r0, [r6, #36]	; 0x24
   12bb8:	ldr	r1, [r6, #52]	; 0x34
   12bbc:	ldr	r0, [r6, #40]	; 0x28
   12bc0:	lsl	r1, r1, #2
   12bc4:	bl	11edc <realloc@plt>
   12bc8:	str	r0, [r6, #40]	; 0x28
   12bcc:	ldr	r1, [r6, #52]	; 0x34
   12bd0:	ldr	r0, [r6, #44]	; 0x2c
   12bd4:	lsl	r1, r1, #2
   12bd8:	bl	11edc <realloc@plt>
   12bdc:	b	12c00 <table_unregister_callback@@Base+0x160>
   12be0:	bl	11ed0 <free@plt>
   12be4:	ldr	r0, [r6, #40]	; 0x28
   12be8:	bl	11ed0 <free@plt>
   12bec:	ldr	r0, [r6, #44]	; 0x2c
   12bf0:	bl	11ed0 <free@plt>
   12bf4:	mov	r0, #0
   12bf8:	str	r0, [r6, #36]	; 0x24
   12bfc:	str	r0, [r6, #40]	; 0x28
   12c00:	str	r0, [r6, #44]	; 0x2c
   12c04:	pop	{r4, r5, r6, sl, fp, pc}

00012c08 <table_notify@@Base>:
   12c08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c0c:	add	fp, sp, #24
   12c10:	sub	sp, sp, #8
   12c14:	mov	r7, r0
   12c18:	ldr	r0, [r0, #32]
   12c1c:	cmp	r0, #1
   12c20:	blt	12c98 <table_notify@@Base+0x90>
   12c24:	mov	r4, r3
   12c28:	mov	r8, r2
   12c2c:	mov	r9, r1
   12c30:	mov	r5, #0
   12c34:	ldr	r1, [r7, #44]	; 0x2c
   12c38:	ldr	r1, [r1, r5, lsl #2]
   12c3c:	tst	r1, r4
   12c40:	bne	12c60 <table_notify@@Base+0x58>
   12c44:	add	r5, r5, #1
   12c48:	cmp	r5, r0
   12c4c:	bge	12c98 <table_notify@@Base+0x90>
   12c50:	ldr	r1, [r7, #44]	; 0x2c
   12c54:	ldr	r1, [r1, r5, lsl #2]
   12c58:	tst	r1, r4
   12c5c:	beq	12c44 <table_notify@@Base+0x3c>
   12c60:	ldr	r0, [r7, #36]	; 0x24
   12c64:	ldr	r1, [r7, #40]	; 0x28
   12c68:	mov	r2, r8
   12c6c:	mov	r3, r4
   12c70:	ldr	r6, [r0, r5, lsl #2]
   12c74:	ldr	r0, [r1, r5, lsl #2]
   12c78:	mov	r1, r9
   12c7c:	str	r0, [sp]
   12c80:	mov	r0, r7
   12c84:	blx	r6
   12c88:	ldr	r0, [r7, #32]
   12c8c:	add	r5, r5, #1
   12c90:	cmp	r5, r0
   12c94:	blt	12c50 <table_notify@@Base+0x48>
   12c98:	sub	sp, fp, #24
   12c9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ca0 <table_column_init@@Base>:
   12ca0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ca4:	add	fp, sp, #24
   12ca8:	ldr	r7, [r0]
   12cac:	mov	r0, r2
   12cb0:	mov	r4, r3
   12cb4:	mov	r5, r2
   12cb8:	mov	r6, r1
   12cbc:	bl	11f24 <strlen@plt>
   12cc0:	add	r0, r0, #1
   12cc4:	bl	11f00 <malloc@plt>
   12cc8:	ldr	r8, [fp, #8]
   12ccc:	add	r6, r6, r6, lsl #1
   12cd0:	cmp	r0, #0
   12cd4:	str	r0, [r7, r6, lsl #2]
   12cd8:	beq	12ce4 <table_column_init@@Base+0x44>
   12cdc:	mov	r1, r5
   12ce0:	bl	11ee8 <strcpy@plt>
   12ce4:	add	r0, r7, r6, lsl #2
   12ce8:	stmib	r0, {r4, r8}
   12cec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012cf0 <table_get_col_ptr@@Base>:
   12cf0:	ldr	r0, [r0]
   12cf4:	add	r1, r1, r1, lsl #1
   12cf8:	add	r0, r0, r1, lsl #2
   12cfc:	bx	lr

00012d00 <table_column_destroy@@Base>:
   12d00:	ldr	r0, [r0]
   12d04:	add	r1, r1, r1, lsl #1
   12d08:	ldr	r0, [r0, r1, lsl #2]
   12d0c:	cmp	r0, #0
   12d10:	bxeq	lr
   12d14:	b	11ed0 <free@plt>

00012d18 <table_get_column_length@@Base>:
   12d18:	ldr	r0, [r0, #4]
   12d1c:	bx	lr

00012d20 <table_get_column@@Base>:
   12d20:	push	{r4, r5, r6, r7, fp, lr}
   12d24:	add	fp, sp, #16
   12d28:	ldr	r6, [r0, #4]
   12d2c:	cmp	r6, #1
   12d30:	blt	12d78 <table_get_column@@Base+0x58>
   12d34:	ldr	r7, [r0]
   12d38:	mov	r5, r1
   12d3c:	mov	r4, #0
   12d40:	ldr	r0, [r7]
   12d44:	mov	r1, r5
   12d48:	bl	11eb8 <strcmp@plt>
   12d4c:	cmp	r0, #0
   12d50:	beq	12d68 <table_get_column@@Base+0x48>
   12d54:	add	r4, r4, #1
   12d58:	add	r7, r7, #12
   12d5c:	cmp	r6, r4
   12d60:	bne	12d40 <table_get_column@@Base+0x20>
   12d64:	mov	r4, r6
   12d68:	cmp	r4, r6
   12d6c:	mvneq	r4, #0
   12d70:	mov	r0, r4
   12d74:	pop	{r4, r5, r6, r7, fp, pc}
   12d78:	mov	r4, #0
   12d7c:	cmp	r4, r6
   12d80:	mvneq	r4, #0
   12d84:	mov	r0, r4
   12d88:	pop	{r4, r5, r6, r7, fp, pc}

00012d8c <table_get_column_name@@Base>:
   12d8c:	ldr	r0, [r0]
   12d90:	add	r1, r1, r1, lsl #1
   12d94:	ldr	r0, [r0, r1, lsl #2]
   12d98:	bx	lr

00012d9c <table_get_column_data_type@@Base>:
   12d9c:	ldr	r0, [r0]
   12da0:	add	r1, r1, r1, lsl #1
   12da4:	add	r0, r0, r1, lsl #2
   12da8:	ldr	r0, [r0, #4]
   12dac:	bx	lr

00012db0 <table_add_column@@Base>:
   12db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12db4:	add	fp, sp, #28
   12db8:	sub	sp, sp, #4
   12dbc:	mov	r4, r0
   12dc0:	mov	r8, r1
   12dc4:	ldr	r0, [r0, #4]
   12dc8:	mov	r9, r2
   12dcc:	ldr	r1, [r4, #8]
   12dd0:	udiv	r2, r0, r1
   12dd4:	mls	r0, r2, r1, r0
   12dd8:	cmp	r0, #0
   12ddc:	bne	12e48 <table_add_column@@Base+0x98>
   12de0:	ldr	r2, [r4, #12]
   12de4:	ldr	r0, [r4]
   12de8:	add	r1, r2, r1
   12dec:	str	r1, [r4, #12]
   12df0:	add	r1, r1, r1, lsl #1
   12df4:	lsl	r1, r1, #2
   12df8:	bl	11edc <realloc@plt>
   12dfc:	str	r0, [r4]
   12e00:	mov	r0, r4
   12e04:	bl	13af0 <table_get_row_length@@Base>
   12e08:	cmp	r0, #1
   12e0c:	blt	12e48 <table_add_column@@Base+0x98>
   12e10:	mov	r6, r0
   12e14:	mov	r5, #0
   12e18:	mov	r0, r4
   12e1c:	mov	r1, r5
   12e20:	bl	13a88 <table_get_row_ptr@@Base>
   12e24:	ldr	r1, [r4, #12]
   12e28:	mov	r7, r0
   12e2c:	ldr	r0, [r0]
   12e30:	lsl	r1, r1, #2
   12e34:	bl	11edc <realloc@plt>
   12e38:	add	r5, r5, #1
   12e3c:	str	r0, [r7]
   12e40:	cmp	r6, r5
   12e44:	bne	12e18 <table_add_column@@Base+0x68>
   12e48:	mov	r0, r4
   12e4c:	bl	13af0 <table_get_row_length@@Base>
   12e50:	ldr	r6, [r4, #4]
   12e54:	mov	r7, r0
   12e58:	mov	r0, r9
   12e5c:	bl	137fc <table_get_default_compare_function_for_data_type@@Base>
   12e60:	ldr	r5, [r4]
   12e64:	mov	sl, r0
   12e68:	mov	r0, r8
   12e6c:	bl	11f24 <strlen@plt>
   12e70:	add	r0, r0, #1
   12e74:	bl	11f00 <malloc@plt>
   12e78:	mov	r1, r8
   12e7c:	add	r8, r6, r6, lsl #1
   12e80:	cmp	r0, #0
   12e84:	str	r0, [r5, r8, lsl #2]
   12e88:	beq	12e90 <table_add_column@@Base+0xe0>
   12e8c:	bl	11ee8 <strcpy@plt>
   12e90:	add	r0, r5, r8, lsl #2
   12e94:	cmp	r7, #1
   12e98:	stmib	r0, {r9, sl}
   12e9c:	blt	12ec0 <table_add_column@@Base+0x110>
   12ea0:	mov	r5, #0
   12ea4:	mov	r0, r4
   12ea8:	mov	r1, r5
   12eac:	mov	r2, r6
   12eb0:	bl	14c44 <table_cell_init@@Base>
   12eb4:	add	r5, r5, #1
   12eb8:	cmp	r7, r5
   12ebc:	bne	12ea4 <table_add_column@@Base+0xf4>
   12ec0:	ldr	r2, [r4, #4]
   12ec4:	mov	r0, r4
   12ec8:	mvn	r1, #0
   12ecc:	mov	r3, #8
   12ed0:	bl	12c08 <table_notify@@Base>
   12ed4:	ldr	r0, [r4, #4]
   12ed8:	add	r1, r0, #1
   12edc:	str	r1, [r4, #4]
   12ee0:	sub	sp, fp, #28
   12ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ee8 <table_remove_column@@Base>:
   12ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12eec:	add	fp, sp, #28
   12ef0:	sub	sp, sp, #12
   12ef4:	mov	r5, r0
   12ef8:	ldr	r0, [r0]
   12efc:	add	r6, r1, r1, lsl #1
   12f00:	mov	r4, r1
   12f04:	ldr	r0, [r0, r6, lsl #2]
   12f08:	cmp	r0, #0
   12f0c:	beq	12f14 <table_remove_column@@Base+0x2c>
   12f10:	bl	11ed0 <free@plt>
   12f14:	ldr	r7, [r5, #4]
   12f18:	sub	r0, r7, #1
   12f1c:	cmp	r0, r4
   12f20:	str	r0, [sp, #8]
   12f24:	ble	12f58 <table_remove_column@@Base+0x70>
   12f28:	mvn	r0, r4
   12f2c:	lsl	r1, r6, #2
   12f30:	add	r0, r0, r7
   12f34:	ldr	r2, [r5]
   12f38:	subs	r0, r0, #1
   12f3c:	add	r2, r2, r1
   12f40:	add	r1, r1, #12
   12f44:	vldr	d16, [r2, #12]
   12f48:	ldr	r3, [r2, #20]
   12f4c:	str	r3, [r2, #8]
   12f50:	vstr	d16, [r2]
   12f54:	bne	12f34 <table_remove_column@@Base+0x4c>
   12f58:	mov	r0, r5
   12f5c:	bl	13af0 <table_get_row_length@@Base>
   12f60:	cmp	r0, #1
   12f64:	blt	13050 <table_remove_column@@Base+0x168>
   12f68:	mov	sl, r0
   12f6c:	ldr	r0, [sp, #8]
   12f70:	cmp	r0, r4
   12f74:	ble	13024 <table_remove_column@@Base+0x13c>
   12f78:	mvn	r0, r4
   12f7c:	sub	r8, r7, #2
   12f80:	add	r0, r7, r0
   12f84:	mov	r7, #0
   12f88:	and	r9, r0, #1
   12f8c:	add	r0, r4, #1
   12f90:	str	r0, [sp, #4]
   12f94:	b	12fa4 <table_remove_column@@Base+0xbc>
   12f98:	add	r7, r7, #1
   12f9c:	cmp	r7, sl
   12fa0:	beq	13050 <table_remove_column@@Base+0x168>
   12fa4:	mov	r0, r5
   12fa8:	mov	r1, r7
   12fac:	mov	r2, r4
   12fb0:	bl	14c80 <table_cell_destroy@@Base>
   12fb4:	mov	r0, r5
   12fb8:	mov	r1, r7
   12fbc:	bl	13a88 <table_get_row_ptr@@Base>
   12fc0:	cmp	r9, #0
   12fc4:	mov	r2, r4
   12fc8:	beq	12fe0 <table_remove_column@@Base+0xf8>
   12fcc:	ldr	r1, [r0]
   12fd0:	add	r2, r1, r4, lsl #2
   12fd4:	ldr	r2, [r2, #4]
   12fd8:	str	r2, [r1, r4, lsl #2]
   12fdc:	ldr	r2, [sp, #4]
   12fe0:	cmp	r8, r4
   12fe4:	beq	12f98 <table_remove_column@@Base+0xb0>
   12fe8:	ldr	r1, [sp, #8]
   12fec:	sub	r1, r1, r2
   12ff0:	lsl	r2, r2, #2
   12ff4:	ldr	r3, [r0]
   12ff8:	subs	r1, r1, #2
   12ffc:	add	r6, r3, r2
   13000:	ldr	r6, [r6, #4]
   13004:	str	r6, [r3, r2]
   13008:	ldr	r3, [r0]
   1300c:	add	r3, r3, r2
   13010:	add	r2, r2, #8
   13014:	ldr	r6, [r3, #8]
   13018:	str	r6, [r3, #4]
   1301c:	bne	12ff4 <table_remove_column@@Base+0x10c>
   13020:	b	12f98 <table_remove_column@@Base+0xb0>
   13024:	mov	r7, #0
   13028:	mov	r0, r5
   1302c:	mov	r1, r7
   13030:	mov	r2, r4
   13034:	bl	14c80 <table_cell_destroy@@Base>
   13038:	mov	r0, r5
   1303c:	mov	r1, r7
   13040:	bl	13a88 <table_get_row_ptr@@Base>
   13044:	add	r7, r7, #1
   13048:	cmp	sl, r7
   1304c:	bne	13028 <table_remove_column@@Base+0x140>
   13050:	ldmib	r5, {r0, r1}
   13054:	sub	r0, r0, #1
   13058:	udiv	r2, r0, r1
   1305c:	str	r0, [r5, #4]
   13060:	mls	r0, r2, r1, r0
   13064:	cmp	r0, #0
   13068:	bne	130d4 <table_remove_column@@Base+0x1ec>
   1306c:	ldr	r2, [r5, #12]
   13070:	ldr	r0, [r5]
   13074:	sub	r1, r2, r1
   13078:	str	r1, [r5, #12]
   1307c:	add	r1, r1, r1, lsl #1
   13080:	lsl	r1, r1, #2
   13084:	bl	11edc <realloc@plt>
   13088:	str	r0, [r5]
   1308c:	mov	r0, r5
   13090:	bl	13af0 <table_get_row_length@@Base>
   13094:	cmp	r0, #1
   13098:	blt	130d4 <table_remove_column@@Base+0x1ec>
   1309c:	mov	r8, r0
   130a0:	mov	r7, #0
   130a4:	mov	r0, r5
   130a8:	mov	r1, r7
   130ac:	bl	13a88 <table_get_row_ptr@@Base>
   130b0:	ldr	r1, [r5, #12]
   130b4:	mov	r6, r0
   130b8:	ldr	r0, [r0]
   130bc:	lsl	r1, r1, #2
   130c0:	bl	11edc <realloc@plt>
   130c4:	add	r7, r7, #1
   130c8:	str	r0, [r6]
   130cc:	cmp	r8, r7
   130d0:	bne	130a4 <table_remove_column@@Base+0x1bc>
   130d4:	mov	r0, r5
   130d8:	mvn	r1, #0
   130dc:	mov	r2, r4
   130e0:	mov	r3, #16
   130e4:	bl	12c08 <table_notify@@Base>
   130e8:	mov	r0, #0
   130ec:	sub	sp, fp, #28
   130f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000130f4 <table_get_column_compare_function@@Base>:
   130f4:	ldr	r0, [r0]
   130f8:	add	r1, r1, r1, lsl #1
   130fc:	add	r0, r0, r1, lsl #2
   13100:	ldr	r0, [r0, #8]
   13104:	bx	lr

00013108 <table_set_column_compare_function@@Base>:
   13108:	ldr	r0, [r0]
   1310c:	add	r1, r1, r1, lsl #1
   13110:	add	r0, r0, r1, lsl #2
   13114:	str	r2, [r0, #8]
   13118:	bx	lr

0001311c <table_compare_bool@@Base>:
   1311c:	cmp	r0, #0
   13120:	beq	13154 <table_compare_bool@@Base+0x38>
   13124:	cmp	r1, #0
   13128:	moveq	r1, #1
   1312c:	moveq	r0, r1
   13130:	bxeq	lr
   13134:	ldrb	r2, [r1]
   13138:	ldrb	r0, [r0]
   1313c:	mov	r1, #0
   13140:	cmp	r0, r2
   13144:	mvncc	r1, #0
   13148:	movwhi	r1, #1
   1314c:	mov	r0, r1
   13150:	bx	lr
   13154:	cmp	r1, #0
   13158:	mvnne	r1, #0
   1315c:	mov	r0, r1
   13160:	bx	lr

00013164 <table_compare_int@@Base>:
   13164:	cmp	r0, #0
   13168:	beq	1319c <table_compare_int@@Base+0x38>
   1316c:	cmp	r1, #0
   13170:	moveq	r1, #1
   13174:	moveq	r0, r1
   13178:	bxeq	lr
   1317c:	ldr	r2, [r1]
   13180:	ldr	r0, [r0]
   13184:	mov	r1, #0
   13188:	cmp	r0, r2
   1318c:	mvnlt	r1, #0
   13190:	movwgt	r1, #1
   13194:	mov	r0, r1
   13198:	bx	lr
   1319c:	cmp	r1, #0
   131a0:	mvnne	r1, #0
   131a4:	mov	r0, r1
   131a8:	bx	lr

000131ac <table_compare_uint@@Base>:
   131ac:	cmp	r0, #0
   131b0:	beq	131e4 <table_compare_uint@@Base+0x38>
   131b4:	cmp	r1, #0
   131b8:	moveq	r1, #1
   131bc:	moveq	r0, r1
   131c0:	bxeq	lr
   131c4:	ldr	r2, [r1]
   131c8:	ldr	r0, [r0]
   131cc:	mov	r1, #0
   131d0:	cmp	r0, r2
   131d4:	mvncc	r1, #0
   131d8:	movwhi	r1, #1
   131dc:	mov	r0, r1
   131e0:	bx	lr
   131e4:	cmp	r1, #0
   131e8:	mvnne	r1, #0
   131ec:	mov	r0, r1
   131f0:	bx	lr

000131f4 <table_compare_int8@@Base>:
   131f4:	cmp	r0, #0
   131f8:	beq	1322c <table_compare_int8@@Base+0x38>
   131fc:	cmp	r1, #0
   13200:	moveq	r1, #1
   13204:	moveq	r0, r1
   13208:	bxeq	lr
   1320c:	ldrsb	r2, [r1]
   13210:	ldrsb	r0, [r0]
   13214:	mov	r1, #0
   13218:	cmp	r0, r2
   1321c:	mvnlt	r1, #0
   13220:	movwgt	r1, #1
   13224:	mov	r0, r1
   13228:	bx	lr
   1322c:	cmp	r1, #0
   13230:	mvnne	r1, #0
   13234:	mov	r0, r1
   13238:	bx	lr

0001323c <table_compare_uint8@@Base>:
   1323c:	cmp	r0, #0
   13240:	beq	13274 <table_compare_uint8@@Base+0x38>
   13244:	cmp	r1, #0
   13248:	moveq	r1, #1
   1324c:	moveq	r0, r1
   13250:	bxeq	lr
   13254:	ldrb	r2, [r1]
   13258:	ldrb	r0, [r0]
   1325c:	mov	r1, #0
   13260:	cmp	r0, r2
   13264:	mvncc	r1, #0
   13268:	movwhi	r1, #1
   1326c:	mov	r0, r1
   13270:	bx	lr
   13274:	cmp	r1, #0
   13278:	mvnne	r1, #0
   1327c:	mov	r0, r1
   13280:	bx	lr

00013284 <table_compare_int16@@Base>:
   13284:	cmp	r0, #0
   13288:	beq	132bc <table_compare_int16@@Base+0x38>
   1328c:	cmp	r1, #0
   13290:	moveq	r1, #1
   13294:	moveq	r0, r1
   13298:	bxeq	lr
   1329c:	ldrsh	r2, [r1]
   132a0:	ldrsh	r0, [r0]
   132a4:	mov	r1, #0
   132a8:	cmp	r0, r2
   132ac:	mvnlt	r1, #0
   132b0:	movwgt	r1, #1
   132b4:	mov	r0, r1
   132b8:	bx	lr
   132bc:	cmp	r1, #0
   132c0:	mvnne	r1, #0
   132c4:	mov	r0, r1
   132c8:	bx	lr

000132cc <table_compare_uint16@@Base>:
   132cc:	cmp	r0, #0
   132d0:	beq	13304 <table_compare_uint16@@Base+0x38>
   132d4:	cmp	r1, #0
   132d8:	moveq	r1, #1
   132dc:	moveq	r0, r1
   132e0:	bxeq	lr
   132e4:	ldrh	r2, [r1]
   132e8:	ldrh	r0, [r0]
   132ec:	mov	r1, #0
   132f0:	cmp	r0, r2
   132f4:	mvncc	r1, #0
   132f8:	movwhi	r1, #1
   132fc:	mov	r0, r1
   13300:	bx	lr
   13304:	cmp	r1, #0
   13308:	mvnne	r1, #0
   1330c:	mov	r0, r1
   13310:	bx	lr

00013314 <table_compare_int32@@Base>:
   13314:	cmp	r0, #0
   13318:	beq	1334c <table_compare_int32@@Base+0x38>
   1331c:	cmp	r1, #0
   13320:	moveq	r1, #1
   13324:	moveq	r0, r1
   13328:	bxeq	lr
   1332c:	ldr	r2, [r1]
   13330:	ldr	r0, [r0]
   13334:	mov	r1, #0
   13338:	cmp	r0, r2
   1333c:	mvnlt	r1, #0
   13340:	movwgt	r1, #1
   13344:	mov	r0, r1
   13348:	bx	lr
   1334c:	cmp	r1, #0
   13350:	mvnne	r1, #0
   13354:	mov	r0, r1
   13358:	bx	lr

0001335c <table_compare_uint32@@Base>:
   1335c:	cmp	r0, #0
   13360:	beq	13394 <table_compare_uint32@@Base+0x38>
   13364:	cmp	r1, #0
   13368:	moveq	r1, #1
   1336c:	moveq	r0, r1
   13370:	bxeq	lr
   13374:	ldr	r2, [r1]
   13378:	ldr	r0, [r0]
   1337c:	mov	r1, #0
   13380:	cmp	r0, r2
   13384:	mvncc	r1, #0
   13388:	movwhi	r1, #1
   1338c:	mov	r0, r1
   13390:	bx	lr
   13394:	cmp	r1, #0
   13398:	mvnne	r1, #0
   1339c:	mov	r0, r1
   133a0:	bx	lr

000133a4 <table_compare_int64@@Base>:
   133a4:	cmp	r0, #0
   133a8:	beq	133fc <table_compare_int64@@Base+0x58>
   133ac:	cmp	r1, #0
   133b0:	moveq	r1, #1
   133b4:	moveq	r0, r1
   133b8:	bxeq	lr
   133bc:	push	{r5, r7, fp, lr}
   133c0:	add	fp, sp, #8
   133c4:	ldm	r0, {r0, r5}
   133c8:	ldm	r1, {r2, r7}
   133cc:	mov	r1, #0
   133d0:	subs	r3, r0, r2
   133d4:	sbcs	r3, r5, r7
   133d8:	movwlt	r1, #1
   133dc:	cmp	r1, #0
   133e0:	mvnne	r1, #0
   133e4:	subs	r0, r2, r0
   133e8:	sbcs	r0, r7, r5
   133ec:	movwlt	r1, #1
   133f0:	pop	{r5, r7, fp, lr}
   133f4:	mov	r0, r1
   133f8:	bx	lr
   133fc:	cmp	r1, #0
   13400:	mvnne	r1, #0
   13404:	mov	r0, r1
   13408:	bx	lr

0001340c <table_compare_uint64@@Base>:
   1340c:	cmp	r0, #0
   13410:	beq	13464 <table_compare_uint64@@Base+0x58>
   13414:	cmp	r1, #0
   13418:	moveq	r1, #1
   1341c:	moveq	r0, r1
   13420:	bxeq	lr
   13424:	push	{r5, r7, fp, lr}
   13428:	add	fp, sp, #8
   1342c:	ldm	r0, {r0, r5}
   13430:	ldm	r1, {r2, r7}
   13434:	mov	r1, #0
   13438:	subs	r3, r0, r2
   1343c:	sbcs	r3, r5, r7
   13440:	movwcc	r1, #1
   13444:	cmp	r1, #0
   13448:	mvnne	r1, #0
   1344c:	subs	r0, r2, r0
   13450:	sbcs	r0, r7, r5
   13454:	movwcc	r1, #1
   13458:	pop	{r5, r7, fp, lr}
   1345c:	mov	r0, r1
   13460:	bx	lr
   13464:	cmp	r1, #0
   13468:	mvnne	r1, #0
   1346c:	mov	r0, r1
   13470:	bx	lr

00013474 <table_compare_short@@Base>:
   13474:	cmp	r0, #0
   13478:	beq	134ac <table_compare_short@@Base+0x38>
   1347c:	cmp	r1, #0
   13480:	moveq	r1, #1
   13484:	moveq	r0, r1
   13488:	bxeq	lr
   1348c:	ldrsh	r2, [r1]
   13490:	ldrsh	r0, [r0]
   13494:	mov	r1, #0
   13498:	cmp	r0, r2
   1349c:	mvnlt	r1, #0
   134a0:	movwgt	r1, #1
   134a4:	mov	r0, r1
   134a8:	bx	lr
   134ac:	cmp	r1, #0
   134b0:	mvnne	r1, #0
   134b4:	mov	r0, r1
   134b8:	bx	lr

000134bc <table_compare_ushort@@Base>:
   134bc:	cmp	r0, #0
   134c0:	beq	134f4 <table_compare_ushort@@Base+0x38>
   134c4:	cmp	r1, #0
   134c8:	moveq	r1, #1
   134cc:	moveq	r0, r1
   134d0:	bxeq	lr
   134d4:	ldrh	r2, [r1]
   134d8:	ldrh	r0, [r0]
   134dc:	mov	r1, #0
   134e0:	cmp	r0, r2
   134e4:	mvncc	r1, #0
   134e8:	movwhi	r1, #1
   134ec:	mov	r0, r1
   134f0:	bx	lr
   134f4:	cmp	r1, #0
   134f8:	mvnne	r1, #0
   134fc:	mov	r0, r1
   13500:	bx	lr

00013504 <table_compare_long@@Base>:
   13504:	cmp	r0, #0
   13508:	beq	1353c <table_compare_long@@Base+0x38>
   1350c:	cmp	r1, #0
   13510:	moveq	r1, #1
   13514:	moveq	r0, r1
   13518:	bxeq	lr
   1351c:	ldr	r2, [r1]
   13520:	ldr	r0, [r0]
   13524:	mov	r1, #0
   13528:	cmp	r0, r2
   1352c:	mvnlt	r1, #0
   13530:	movwgt	r1, #1
   13534:	mov	r0, r1
   13538:	bx	lr
   1353c:	cmp	r1, #0
   13540:	mvnne	r1, #0
   13544:	mov	r0, r1
   13548:	bx	lr

0001354c <table_compare_ulong@@Base>:
   1354c:	cmp	r0, #0
   13550:	beq	13584 <table_compare_ulong@@Base+0x38>
   13554:	cmp	r1, #0
   13558:	moveq	r1, #1
   1355c:	moveq	r0, r1
   13560:	bxeq	lr
   13564:	ldr	r2, [r1]
   13568:	ldr	r0, [r0]
   1356c:	mov	r1, #0
   13570:	cmp	r0, r2
   13574:	mvncc	r1, #0
   13578:	movwhi	r1, #1
   1357c:	mov	r0, r1
   13580:	bx	lr
   13584:	cmp	r1, #0
   13588:	mvnne	r1, #0
   1358c:	mov	r0, r1
   13590:	bx	lr

00013594 <table_compare_llong@@Base>:
   13594:	cmp	r0, #0
   13598:	beq	135ec <table_compare_llong@@Base+0x58>
   1359c:	cmp	r1, #0
   135a0:	moveq	r1, #1
   135a4:	moveq	r0, r1
   135a8:	bxeq	lr
   135ac:	push	{r5, r7, fp, lr}
   135b0:	add	fp, sp, #8
   135b4:	ldm	r0, {r0, r5}
   135b8:	ldm	r1, {r2, r7}
   135bc:	mov	r1, #0
   135c0:	subs	r3, r0, r2
   135c4:	sbcs	r3, r5, r7
   135c8:	movwlt	r1, #1
   135cc:	cmp	r1, #0
   135d0:	mvnne	r1, #0
   135d4:	subs	r0, r2, r0
   135d8:	sbcs	r0, r7, r5
   135dc:	movwlt	r1, #1
   135e0:	pop	{r5, r7, fp, lr}
   135e4:	mov	r0, r1
   135e8:	bx	lr
   135ec:	cmp	r1, #0
   135f0:	mvnne	r1, #0
   135f4:	mov	r0, r1
   135f8:	bx	lr

000135fc <table_compare_ullong@@Base>:
   135fc:	cmp	r0, #0
   13600:	beq	13634 <table_compare_ullong@@Base+0x38>
   13604:	cmp	r1, #0
   13608:	moveq	r1, #1
   1360c:	moveq	r0, r1
   13610:	bxeq	lr
   13614:	ldr	r2, [r1]
   13618:	ldr	r0, [r0]
   1361c:	mov	r1, #0
   13620:	cmp	r0, r2
   13624:	mvncc	r1, #0
   13628:	movwhi	r1, #1
   1362c:	mov	r0, r1
   13630:	bx	lr
   13634:	cmp	r1, #0
   13638:	mvnne	r1, #0
   1363c:	mov	r0, r1
   13640:	bx	lr

00013644 <table_compare_float@@Base>:
   13644:	cmp	r0, #0
   13648:	beq	13680 <table_compare_float@@Base+0x3c>
   1364c:	cmp	r1, #0
   13650:	moveq	r1, #1
   13654:	moveq	r0, r1
   13658:	bxeq	lr
   1365c:	vldr	s0, [r1]
   13660:	vldr	s2, [r0]
   13664:	mov	r1, #0
   13668:	vcmpe.f32	s2, s0
   1366c:	vmrs	APSR_nzcv, fpscr
   13670:	mvnmi	r1, #0
   13674:	movwgt	r1, #1
   13678:	mov	r0, r1
   1367c:	bx	lr
   13680:	cmp	r1, #0
   13684:	mvnne	r1, #0
   13688:	mov	r0, r1
   1368c:	bx	lr

00013690 <table_compare_double@@Base>:
   13690:	cmp	r0, #0
   13694:	beq	136cc <table_compare_double@@Base+0x3c>
   13698:	cmp	r1, #0
   1369c:	moveq	r1, #1
   136a0:	moveq	r0, r1
   136a4:	bxeq	lr
   136a8:	vldr	d16, [r1]
   136ac:	vldr	d17, [r0]
   136b0:	mov	r1, #0
   136b4:	vcmpe.f64	d17, d16
   136b8:	vmrs	APSR_nzcv, fpscr
   136bc:	mvnmi	r1, #0
   136c0:	movwgt	r1, #1
   136c4:	mov	r0, r1
   136c8:	bx	lr
   136cc:	cmp	r1, #0
   136d0:	mvnne	r1, #0
   136d4:	mov	r0, r1
   136d8:	bx	lr

000136dc <table_compare_ldouble@@Base>:
   136dc:	cmp	r0, #0
   136e0:	beq	13718 <table_compare_ldouble@@Base+0x3c>
   136e4:	cmp	r1, #0
   136e8:	moveq	r1, #1
   136ec:	moveq	r0, r1
   136f0:	bxeq	lr
   136f4:	vldr	d16, [r1]
   136f8:	vldr	d17, [r0]
   136fc:	mov	r1, #0
   13700:	vcmpe.f64	d17, d16
   13704:	vmrs	APSR_nzcv, fpscr
   13708:	mvnmi	r1, #0
   1370c:	movwgt	r1, #1
   13710:	mov	r0, r1
   13714:	bx	lr
   13718:	cmp	r1, #0
   1371c:	mvnne	r1, #0
   13720:	mov	r0, r1
   13724:	bx	lr

00013728 <table_compare_char@@Base>:
   13728:	cmp	r0, #0
   1372c:	beq	13760 <table_compare_char@@Base+0x38>
   13730:	cmp	r1, #0
   13734:	moveq	r1, #1
   13738:	moveq	r0, r1
   1373c:	bxeq	lr
   13740:	ldrb	r2, [r1]
   13744:	ldrb	r0, [r0]
   13748:	mov	r1, #0
   1374c:	cmp	r0, r2
   13750:	mvncc	r1, #0
   13754:	movwhi	r1, #1
   13758:	mov	r0, r1
   1375c:	bx	lr
   13760:	cmp	r1, #0
   13764:	mvnne	r1, #0
   13768:	mov	r0, r1
   1376c:	bx	lr

00013770 <table_compare_uchar@@Base>:
   13770:	cmp	r0, #0
   13774:	beq	137a8 <table_compare_uchar@@Base+0x38>
   13778:	cmp	r1, #0
   1377c:	moveq	r1, #1
   13780:	moveq	r0, r1
   13784:	bxeq	lr
   13788:	ldrb	r2, [r1]
   1378c:	ldrb	r0, [r0]
   13790:	mov	r1, #0
   13794:	cmp	r0, r2
   13798:	mvncc	r1, #0
   1379c:	movwhi	r1, #1
   137a0:	mov	r0, r1
   137a4:	bx	lr
   137a8:	cmp	r1, #0
   137ac:	mvnne	r1, #0
   137b0:	mov	r0, r1
   137b4:	bx	lr

000137b8 <table_compare_string@@Base>:
   137b8:	cmp	r0, #0
   137bc:	beq	137d4 <table_compare_string@@Base+0x1c>
   137c0:	cmp	r1, #0
   137c4:	moveq	r1, #1
   137c8:	moveq	r0, r1
   137cc:	bxeq	lr
   137d0:	b	11eb8 <strcmp@plt>
   137d4:	cmp	r1, #0
   137d8:	mvnne	r1, #0
   137dc:	mov	r0, r1
   137e0:	bx	lr

000137e4 <table_compare_ptr@@Base>:
   137e4:	cmp	r0, r1
   137e8:	mov	r2, #0
   137ec:	mvncc	r2, #0
   137f0:	movwhi	r2, #1
   137f4:	mov	r0, r2
   137f8:	bx	lr

000137fc <table_get_default_compare_function_for_data_type@@Base>:
   137fc:	cmp	r0, #23
   13800:	movhi	r0, #0
   13804:	bxhi	lr
   13808:	movw	r1, #22564	; 0x5824
   1380c:	movt	r1, #1
   13810:	ldr	r0, [r1, r0, lsl #2]
   13814:	bx	lr

00013818 <table_get@@Base>:
   13818:	push	{fp, lr}
   1381c:	mov	fp, sp
   13820:	bl	14c64 <table_get_cell_ptr@@Base>
   13824:	ldr	r0, [r0]
   13828:	pop	{fp, pc}

0001382c <table_get_bool@@Base>:
   1382c:	push	{fp, lr}
   13830:	mov	fp, sp
   13834:	bl	14c64 <table_get_cell_ptr@@Base>
   13838:	ldr	r0, [r0]
   1383c:	ldrb	r0, [r0]
   13840:	pop	{fp, pc}

00013844 <table_get_int@@Base>:
   13844:	push	{fp, lr}
   13848:	mov	fp, sp
   1384c:	bl	14c64 <table_get_cell_ptr@@Base>
   13850:	ldr	r0, [r0]
   13854:	ldr	r0, [r0]
   13858:	pop	{fp, pc}

0001385c <table_get_uint@@Base>:
   1385c:	push	{fp, lr}
   13860:	mov	fp, sp
   13864:	bl	14c64 <table_get_cell_ptr@@Base>
   13868:	ldr	r0, [r0]
   1386c:	ldr	r0, [r0]
   13870:	pop	{fp, pc}

00013874 <table_get_int8@@Base>:
   13874:	push	{fp, lr}
   13878:	mov	fp, sp
   1387c:	bl	14c64 <table_get_cell_ptr@@Base>
   13880:	ldr	r0, [r0]
   13884:	ldrsb	r0, [r0]
   13888:	pop	{fp, pc}

0001388c <table_get_uint8@@Base>:
   1388c:	push	{fp, lr}
   13890:	mov	fp, sp
   13894:	bl	14c64 <table_get_cell_ptr@@Base>
   13898:	ldr	r0, [r0]
   1389c:	ldrb	r0, [r0]
   138a0:	pop	{fp, pc}

000138a4 <table_get_int16@@Base>:
   138a4:	push	{fp, lr}
   138a8:	mov	fp, sp
   138ac:	bl	14c64 <table_get_cell_ptr@@Base>
   138b0:	ldr	r0, [r0]
   138b4:	ldrsh	r0, [r0]
   138b8:	pop	{fp, pc}

000138bc <table_get_uint16@@Base>:
   138bc:	push	{fp, lr}
   138c0:	mov	fp, sp
   138c4:	bl	14c64 <table_get_cell_ptr@@Base>
   138c8:	ldr	r0, [r0]
   138cc:	ldrh	r0, [r0]
   138d0:	pop	{fp, pc}

000138d4 <table_get_int32@@Base>:
   138d4:	push	{fp, lr}
   138d8:	mov	fp, sp
   138dc:	bl	14c64 <table_get_cell_ptr@@Base>
   138e0:	ldr	r0, [r0]
   138e4:	ldr	r0, [r0]
   138e8:	pop	{fp, pc}

000138ec <table_get_uint32@@Base>:
   138ec:	push	{fp, lr}
   138f0:	mov	fp, sp
   138f4:	bl	14c64 <table_get_cell_ptr@@Base>
   138f8:	ldr	r0, [r0]
   138fc:	ldr	r0, [r0]
   13900:	pop	{fp, pc}

00013904 <table_get_int64@@Base>:
   13904:	push	{fp, lr}
   13908:	mov	fp, sp
   1390c:	bl	14c64 <table_get_cell_ptr@@Base>
   13910:	ldr	r0, [r0]
   13914:	ldrd	r0, [r0]
   13918:	pop	{fp, pc}

0001391c <table_get_uint64@@Base>:
   1391c:	push	{fp, lr}
   13920:	mov	fp, sp
   13924:	bl	14c64 <table_get_cell_ptr@@Base>
   13928:	ldr	r0, [r0]
   1392c:	ldrd	r0, [r0]
   13930:	pop	{fp, pc}

00013934 <table_get_short@@Base>:
   13934:	push	{fp, lr}
   13938:	mov	fp, sp
   1393c:	bl	14c64 <table_get_cell_ptr@@Base>
   13940:	ldr	r0, [r0]
   13944:	ldrsh	r0, [r0]
   13948:	pop	{fp, pc}

0001394c <table_get_ushort@@Base>:
   1394c:	push	{fp, lr}
   13950:	mov	fp, sp
   13954:	bl	14c64 <table_get_cell_ptr@@Base>
   13958:	ldr	r0, [r0]
   1395c:	ldrh	r0, [r0]
   13960:	pop	{fp, pc}

00013964 <table_get_long@@Base>:
   13964:	push	{fp, lr}
   13968:	mov	fp, sp
   1396c:	bl	14c64 <table_get_cell_ptr@@Base>
   13970:	ldr	r0, [r0]
   13974:	ldr	r0, [r0]
   13978:	pop	{fp, pc}

0001397c <table_get_ulong@@Base>:
   1397c:	push	{fp, lr}
   13980:	mov	fp, sp
   13984:	bl	14c64 <table_get_cell_ptr@@Base>
   13988:	ldr	r0, [r0]
   1398c:	ldr	r0, [r0]
   13990:	pop	{fp, pc}

00013994 <table_get_llong@@Base>:
   13994:	push	{fp, lr}
   13998:	mov	fp, sp
   1399c:	bl	14c64 <table_get_cell_ptr@@Base>
   139a0:	ldr	r0, [r0]
   139a4:	ldrd	r0, [r0]
   139a8:	pop	{fp, pc}

000139ac <table_get_ullong@@Base>:
   139ac:	push	{fp, lr}
   139b0:	mov	fp, sp
   139b4:	bl	14c64 <table_get_cell_ptr@@Base>
   139b8:	ldr	r0, [r0]
   139bc:	ldrd	r0, [r0]
   139c0:	pop	{fp, pc}

000139c4 <table_get_float@@Base>:
   139c4:	push	{fp, lr}
   139c8:	mov	fp, sp
   139cc:	bl	14c64 <table_get_cell_ptr@@Base>
   139d0:	ldr	r0, [r0]
   139d4:	vldr	s0, [r0]
   139d8:	pop	{fp, pc}

000139dc <table_get_double@@Base>:
   139dc:	push	{fp, lr}
   139e0:	mov	fp, sp
   139e4:	bl	14c64 <table_get_cell_ptr@@Base>
   139e8:	ldr	r0, [r0]
   139ec:	vldr	d0, [r0]
   139f0:	pop	{fp, pc}

000139f4 <table_get_ldouble@@Base>:
   139f4:	push	{fp, lr}
   139f8:	mov	fp, sp
   139fc:	bl	14c64 <table_get_cell_ptr@@Base>
   13a00:	ldr	r0, [r0]
   13a04:	vldr	d0, [r0]
   13a08:	pop	{fp, pc}

00013a0c <table_get_char@@Base>:
   13a0c:	push	{fp, lr}
   13a10:	mov	fp, sp
   13a14:	bl	14c64 <table_get_cell_ptr@@Base>
   13a18:	ldr	r0, [r0]
   13a1c:	ldrb	r0, [r0]
   13a20:	pop	{fp, pc}

00013a24 <table_get_uchar@@Base>:
   13a24:	push	{fp, lr}
   13a28:	mov	fp, sp
   13a2c:	bl	14c64 <table_get_cell_ptr@@Base>
   13a30:	ldr	r0, [r0]
   13a34:	ldrb	r0, [r0]
   13a38:	pop	{fp, pc}

00013a3c <table_get_string@@Base>:
   13a3c:	push	{fp, lr}
   13a40:	mov	fp, sp
   13a44:	bl	14c64 <table_get_cell_ptr@@Base>
   13a48:	ldr	r0, [r0]
   13a4c:	pop	{fp, pc}

00013a50 <table_get_ptr@@Base>:
   13a50:	push	{fp, lr}
   13a54:	mov	fp, sp
   13a58:	bl	14c64 <table_get_cell_ptr@@Base>
   13a5c:	ldr	r0, [r0]
   13a60:	pop	{fp, pc}

00013a64 <table_row_init@@Base>:
   13a64:	push	{r4, r5, fp, lr}
   13a68:	add	fp, sp, #8
   13a6c:	mov	r4, r1
   13a70:	ldr	r1, [r0, #12]
   13a74:	ldr	r5, [r0, #16]
   13a78:	lsl	r0, r1, #2
   13a7c:	bl	11f00 <malloc@plt>
   13a80:	str	r0, [r5, r4, lsl #2]
   13a84:	pop	{r4, r5, fp, pc}

00013a88 <table_get_row_ptr@@Base>:
   13a88:	ldr	r0, [r0, #16]
   13a8c:	add	r0, r0, r1, lsl #2
   13a90:	bx	lr

00013a94 <table_row_destroy@@Base>:
   13a94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a98:	add	fp, sp, #24
   13a9c:	mov	r4, r1
   13aa0:	mov	r5, r0
   13aa4:	bl	12d18 <table_get_column_length@@Base>
   13aa8:	ldr	r8, [r5, #16]
   13aac:	cmp	r0, #1
   13ab0:	blt	13ad8 <table_row_destroy@@Base+0x44>
   13ab4:	mov	r6, r0
   13ab8:	mov	r7, #0
   13abc:	mov	r0, r5
   13ac0:	mov	r1, r4
   13ac4:	mov	r2, r7
   13ac8:	bl	14c80 <table_cell_destroy@@Base>
   13acc:	add	r7, r7, #1
   13ad0:	cmp	r6, r7
   13ad4:	bne	13abc <table_row_destroy@@Base+0x28>
   13ad8:	ldr	r0, [r8, r4, lsl #2]
   13adc:	cmp	r0, #0
   13ae0:	beq	13aec <table_row_destroy@@Base+0x58>
   13ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ae8:	b	11ed0 <free@plt>
   13aec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013af0 <table_get_row_length@@Base>:
   13af0:	ldr	r0, [r0, #20]
   13af4:	bx	lr

00013af8 <table_add_row@@Base>:
   13af8:	push	{r4, r5, r6, r7, fp, lr}
   13afc:	add	fp, sp, #16
   13b00:	ldr	r5, [r0, #20]
   13b04:	ldr	r1, [r0, #24]
   13b08:	mov	r4, r0
   13b0c:	udiv	r0, r5, r1
   13b10:	mls	r0, r0, r1, r5
   13b14:	cmp	r0, #0
   13b18:	bne	13b3c <table_add_row@@Base+0x44>
   13b1c:	ldr	r2, [r4, #28]
   13b20:	ldr	r0, [r4, #16]
   13b24:	add	r1, r2, r1
   13b28:	str	r1, [r4, #28]
   13b2c:	lsl	r1, r1, #2
   13b30:	bl	11edc <realloc@plt>
   13b34:	str	r0, [r4, #16]
   13b38:	ldr	r5, [r4, #20]
   13b3c:	mov	r0, r4
   13b40:	bl	12d18 <table_get_column_length@@Base>
   13b44:	mov	r6, r0
   13b48:	ldr	r0, [r4, #12]
   13b4c:	ldr	r7, [r4, #16]
   13b50:	lsl	r0, r0, #2
   13b54:	bl	11f00 <malloc@plt>
   13b58:	cmp	r6, #1
   13b5c:	str	r0, [r7, r5, lsl #2]
   13b60:	blt	13b84 <table_add_row@@Base+0x8c>
   13b64:	mov	r7, #0
   13b68:	mov	r0, r4
   13b6c:	mov	r1, r5
   13b70:	mov	r2, r7
   13b74:	bl	14c44 <table_cell_init@@Base>
   13b78:	add	r7, r7, #1
   13b7c:	cmp	r6, r7
   13b80:	bne	13b68 <table_add_row@@Base+0x70>
   13b84:	ldr	r1, [r4, #20]
   13b88:	mov	r0, r4
   13b8c:	mvn	r2, #0
   13b90:	mov	r3, #2
   13b94:	bl	12c08 <table_notify@@Base>
   13b98:	ldr	r0, [r4, #20]
   13b9c:	add	r1, r0, #1
   13ba0:	str	r1, [r4, #20]
   13ba4:	pop	{r4, r5, r6, r7, fp, pc}

00013ba8 <table_remove_row@@Base>:
   13ba8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13bac:	add	fp, sp, #24
   13bb0:	ldr	r8, [r0, #20]
   13bb4:	mov	r4, r1
   13bb8:	mov	r5, r0
   13bbc:	bl	12d18 <table_get_column_length@@Base>
   13bc0:	cmp	r0, #1
   13bc4:	blt	13c18 <table_remove_row@@Base+0x70>
   13bc8:	mov	r6, r0
   13bcc:	mov	r7, #0
   13bd0:	b	13be0 <table_remove_row@@Base+0x38>
   13bd4:	add	r7, r7, #1
   13bd8:	cmp	r6, r7
   13bdc:	beq	13c18 <table_remove_row@@Base+0x70>
   13be0:	mov	r0, r5
   13be4:	mov	r1, r7
   13be8:	bl	12d9c <table_get_column_data_type@@Base>
   13bec:	cmp	r0, #23
   13bf0:	beq	13bd4 <table_remove_row@@Base+0x2c>
   13bf4:	mov	r0, r5
   13bf8:	mov	r1, r4
   13bfc:	mov	r2, r7
   13c00:	bl	14c64 <table_get_cell_ptr@@Base>
   13c04:	ldr	r0, [r0]
   13c08:	cmp	r0, #0
   13c0c:	beq	13bd4 <table_remove_row@@Base+0x2c>
   13c10:	bl	11ed0 <free@plt>
   13c14:	b	13bd4 <table_remove_row@@Base+0x2c>
   13c18:	ldr	r0, [r5, #16]
   13c1c:	ldr	r0, [r0, r4, lsl #2]
   13c20:	cmp	r0, #0
   13c24:	beq	13c2c <table_remove_row@@Base+0x84>
   13c28:	bl	11ed0 <free@plt>
   13c2c:	sub	r0, r8, #1
   13c30:	cmp	r0, r4
   13c34:	ble	13ca4 <table_remove_row@@Base+0xfc>
   13c38:	mvn	r0, r4
   13c3c:	add	r1, r8, r0
   13c40:	sub	r0, r8, #2
   13c44:	tst	r1, #1
   13c48:	mov	r1, r4
   13c4c:	beq	13c64 <table_remove_row@@Base+0xbc>
   13c50:	ldr	r1, [r5, #16]
   13c54:	add	r2, r1, r4, lsl #2
   13c58:	ldr	r2, [r2, #4]
   13c5c:	str	r2, [r1, r4, lsl #2]
   13c60:	add	r1, r4, #1
   13c64:	cmp	r0, r4
   13c68:	beq	13ca4 <table_remove_row@@Base+0xfc>
   13c6c:	mvn	r0, r1
   13c70:	lsl	r1, r1, #2
   13c74:	add	r0, r0, r8
   13c78:	ldr	r2, [r5, #16]
   13c7c:	subs	r0, r0, #2
   13c80:	add	r3, r2, r1
   13c84:	ldr	r3, [r3, #4]
   13c88:	str	r3, [r2, r1]
   13c8c:	ldr	r2, [r5, #16]
   13c90:	add	r2, r2, r1
   13c94:	add	r1, r1, #8
   13c98:	ldr	r3, [r2, #8]
   13c9c:	str	r3, [r2, #4]
   13ca0:	bne	13c78 <table_remove_row@@Base+0xd0>
   13ca4:	ldr	r0, [r5, #20]
   13ca8:	ldr	r1, [r5, #24]
   13cac:	sub	r0, r0, #1
   13cb0:	udiv	r2, r0, r1
   13cb4:	str	r0, [r5, #20]
   13cb8:	mls	r0, r2, r1, r0
   13cbc:	cmp	r0, #0
   13cc0:	bne	13ce0 <table_remove_row@@Base+0x138>
   13cc4:	ldr	r2, [r5, #28]
   13cc8:	ldr	r0, [r5, #16]
   13ccc:	sub	r1, r2, r1
   13cd0:	str	r1, [r5, #28]
   13cd4:	lsl	r1, r1, #2
   13cd8:	bl	11edc <realloc@plt>
   13cdc:	str	r0, [r5, #16]
   13ce0:	mov	r0, r5
   13ce4:	mov	r1, r4
   13ce8:	mvn	r2, #0
   13cec:	mov	r3, #4
   13cf0:	bl	12c08 <table_notify@@Base>
   13cf4:	mov	r0, #0
   13cf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013cfc <table_set_row_ptr@@Base>:
   13cfc:	ldr	r2, [r2]
   13d00:	ldr	r0, [r0, #16]
   13d04:	str	r2, [r0, r1, lsl #2]
   13d08:	bx	lr

00013d0c <table_set@@Base>:
   13d0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d10:	add	fp, sp, #24
   13d14:	mov	r8, r3
   13d18:	mov	r4, r2
   13d1c:	mov	r9, r1
   13d20:	mov	r6, r0
   13d24:	bl	14c64 <table_get_cell_ptr@@Base>
   13d28:	mov	r5, r0
   13d2c:	mov	r0, r6
   13d30:	mov	r1, r4
   13d34:	bl	12cf0 <table_get_col_ptr@@Base>
   13d38:	ldr	r1, [fp, #8]
   13d3c:	mvn	r7, #0
   13d40:	cmp	r1, #23
   13d44:	bhi	14008 <table_set@@Base+0x2fc>
   13d48:	add	r2, pc, #0
   13d4c:	ldr	pc, [r2, r1, lsl #2]
   13d50:			; <UNDEFINED> instruction: 0x00013db0
   13d54:	andeq	r3, r1, r0, asr #27
   13d58:	ldrdeq	r3, [r1], -r0
   13d5c:	andeq	r3, r1, r0, ror #27
   13d60:	strdeq	r3, [r1], -r0
   13d64:	andeq	r3, r1, r0, lsl #28
   13d68:	andeq	r3, r1, r0, lsl lr
   13d6c:	andeq	r3, r1, r0, lsr #28
   13d70:	andeq	r3, r1, r0, lsr lr
   13d74:	andeq	r3, r1, r0, asr #28
   13d78:	andeq	r3, r1, r0, asr lr
   13d7c:	andeq	r3, r1, r0, ror #28
   13d80:	muleq	r1, r8, lr
   13d84:	andeq	r3, r1, r8, lsr #29
   13d88:			; <UNDEFINED> instruction: 0x00013eb8
   13d8c:	andeq	r3, r1, r8, asr #29
   13d90:	ldrdeq	r3, [r1], -r8
   13d94:	andeq	r3, r1, r0, lsl pc
   13d98:	andeq	r3, r1, r0, lsr #30
   13d9c:	andeq	r3, r1, r0, ror #30
   13da0:	andeq	r3, r1, r0, ror pc
   13da4:	andeq	r3, r1, r0, lsl #31
   13da8:			; <UNDEFINED> instruction: 0x00013fbc
   13dac:	andeq	r4, r1, r0, lsl r0
   13db0:	ldr	r0, [r0, #4]
   13db4:	cmp	r0, #0
   13db8:	bne	14008 <table_set@@Base+0x2fc>
   13dbc:	b	13ee4 <table_set@@Base+0x1d8>
   13dc0:	ldr	r0, [r0, #4]
   13dc4:	cmp	r0, #1
   13dc8:	beq	13ee4 <table_set@@Base+0x1d8>
   13dcc:	b	14008 <table_set@@Base+0x2fc>
   13dd0:	ldr	r0, [r0, #4]
   13dd4:	cmp	r0, #2
   13dd8:	beq	13fc8 <table_set@@Base+0x2bc>
   13ddc:	b	14008 <table_set@@Base+0x2fc>
   13de0:	ldr	r0, [r0, #4]
   13de4:	cmp	r0, #3
   13de8:	beq	13fc8 <table_set@@Base+0x2bc>
   13dec:	b	14008 <table_set@@Base+0x2fc>
   13df0:	ldr	r0, [r0, #4]
   13df4:	cmp	r0, #4
   13df8:	beq	13e6c <table_set@@Base+0x160>
   13dfc:	b	14008 <table_set@@Base+0x2fc>
   13e00:	ldr	r0, [r0, #4]
   13e04:	cmp	r0, #5
   13e08:	beq	13e6c <table_set@@Base+0x160>
   13e0c:	b	14008 <table_set@@Base+0x2fc>
   13e10:	ldr	r0, [r0, #4]
   13e14:	cmp	r0, #6
   13e18:	beq	13ee4 <table_set@@Base+0x1d8>
   13e1c:	b	14008 <table_set@@Base+0x2fc>
   13e20:	ldr	r0, [r0, #4]
   13e24:	cmp	r0, #7
   13e28:	beq	13ee4 <table_set@@Base+0x1d8>
   13e2c:	b	14008 <table_set@@Base+0x2fc>
   13e30:	ldr	r0, [r0, #4]
   13e34:	cmp	r0, #8
   13e38:	beq	13f2c <table_set@@Base+0x220>
   13e3c:	b	14008 <table_set@@Base+0x2fc>
   13e40:	ldr	r0, [r0, #4]
   13e44:	cmp	r0, #9
   13e48:	beq	13f2c <table_set@@Base+0x220>
   13e4c:	b	14008 <table_set@@Base+0x2fc>
   13e50:	ldr	r0, [r0, #4]
   13e54:	cmp	r0, #10
   13e58:	beq	13e6c <table_set@@Base+0x160>
   13e5c:	b	14008 <table_set@@Base+0x2fc>
   13e60:	ldr	r0, [r0, #4]
   13e64:	cmp	r0, #11
   13e68:	bne	14008 <table_set@@Base+0x2fc>
   13e6c:	ldr	r0, [r5]
   13e70:	cmp	r0, #0
   13e74:	bne	13e8c <table_set@@Base+0x180>
   13e78:	mov	r0, #2
   13e7c:	bl	11f00 <malloc@plt>
   13e80:	cmp	r0, #0
   13e84:	str	r0, [r5]
   13e88:	beq	14008 <table_set@@Base+0x2fc>
   13e8c:	ldrh	r1, [r8]
   13e90:	strh	r1, [r0]
   13e94:	b	13ff0 <table_set@@Base+0x2e4>
   13e98:	ldr	r0, [r0, #4]
   13e9c:	cmp	r0, #12
   13ea0:	beq	13ee4 <table_set@@Base+0x1d8>
   13ea4:	b	14008 <table_set@@Base+0x2fc>
   13ea8:	ldr	r0, [r0, #4]
   13eac:	cmp	r0, #13
   13eb0:	beq	13ee4 <table_set@@Base+0x1d8>
   13eb4:	b	14008 <table_set@@Base+0x2fc>
   13eb8:	ldr	r0, [r0, #4]
   13ebc:	cmp	r0, #14
   13ec0:	beq	13f2c <table_set@@Base+0x220>
   13ec4:	b	14008 <table_set@@Base+0x2fc>
   13ec8:	ldr	r0, [r0, #4]
   13ecc:	cmp	r0, #15
   13ed0:	beq	13f2c <table_set@@Base+0x220>
   13ed4:	b	14008 <table_set@@Base+0x2fc>
   13ed8:	ldr	r0, [r0, #4]
   13edc:	cmp	r0, #16
   13ee0:	bne	14008 <table_set@@Base+0x2fc>
   13ee4:	ldr	r0, [r5]
   13ee8:	cmp	r0, #0
   13eec:	bne	13f04 <table_set@@Base+0x1f8>
   13ef0:	mov	r0, #4
   13ef4:	bl	11f00 <malloc@plt>
   13ef8:	cmp	r0, #0
   13efc:	str	r0, [r5]
   13f00:	beq	14008 <table_set@@Base+0x2fc>
   13f04:	ldr	r1, [r8]
   13f08:	str	r1, [r0]
   13f0c:	b	13ff0 <table_set@@Base+0x2e4>
   13f10:	ldr	r0, [r0, #4]
   13f14:	cmp	r0, #17
   13f18:	beq	13f2c <table_set@@Base+0x220>
   13f1c:	b	14008 <table_set@@Base+0x2fc>
   13f20:	ldr	r0, [r0, #4]
   13f24:	cmp	r0, #18
   13f28:	bne	14008 <table_set@@Base+0x2fc>
   13f2c:	ldr	r0, [r5]
   13f30:	cmp	r0, #0
   13f34:	bne	13f4c <table_set@@Base+0x240>
   13f38:	mov	r0, #8
   13f3c:	bl	11f00 <malloc@plt>
   13f40:	cmp	r0, #0
   13f44:	str	r0, [r5]
   13f48:	beq	14008 <table_set@@Base+0x2fc>
   13f4c:	ldr	r1, [r8]
   13f50:	ldr	r2, [r8, #4]
   13f54:	str	r2, [r0, #4]
   13f58:	str	r1, [r0]
   13f5c:	b	13ff0 <table_set@@Base+0x2e4>
   13f60:	ldr	r0, [r0, #4]
   13f64:	cmp	r0, #19
   13f68:	beq	13fc8 <table_set@@Base+0x2bc>
   13f6c:	b	14008 <table_set@@Base+0x2fc>
   13f70:	ldr	r0, [r0, #4]
   13f74:	cmp	r0, #20
   13f78:	beq	13fc8 <table_set@@Base+0x2bc>
   13f7c:	b	14008 <table_set@@Base+0x2fc>
   13f80:	ldr	r0, [r0, #4]
   13f84:	cmp	r0, #21
   13f88:	bne	14008 <table_set@@Base+0x2fc>
   13f8c:	mov	r0, r8
   13f90:	bl	11f24 <strlen@plt>
   13f94:	ldr	r2, [r5]
   13f98:	add	r1, r0, #1
   13f9c:	mov	r0, r2
   13fa0:	bl	11edc <realloc@plt>
   13fa4:	cmp	r0, #0
   13fa8:	str	r0, [r5]
   13fac:	beq	14008 <table_set@@Base+0x2fc>
   13fb0:	mov	r1, r8
   13fb4:	bl	11ee8 <strcpy@plt>
   13fb8:	b	13ff0 <table_set@@Base+0x2e4>
   13fbc:	ldr	r0, [r0, #4]
   13fc0:	cmp	r0, #22
   13fc4:	bne	14008 <table_set@@Base+0x2fc>
   13fc8:	ldr	r0, [r5]
   13fcc:	cmp	r0, #0
   13fd0:	bne	13fe8 <table_set@@Base+0x2dc>
   13fd4:	mov	r0, #1
   13fd8:	bl	11f00 <malloc@plt>
   13fdc:	cmp	r0, #0
   13fe0:	str	r0, [r5]
   13fe4:	beq	14008 <table_set@@Base+0x2fc>
   13fe8:	ldrb	r1, [r8]
   13fec:	strb	r1, [r0]
   13ff0:	mov	r0, r6
   13ff4:	mov	r1, r9
   13ff8:	mov	r2, r4
   13ffc:	mov	r3, #1
   14000:	bl	12c08 <table_notify@@Base>
   14004:	mov	r7, #0
   14008:	mov	r0, r7
   1400c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14010:	ldr	r0, [r0, #4]
   14014:	cmp	r0, #23
   14018:	bne	14008 <table_set@@Base+0x2fc>
   1401c:	str	r8, [r5]
   14020:	b	13ff0 <table_set@@Base+0x2e4>

00014024 <table_set_bool@@Base>:
   14024:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14028:	add	fp, sp, #24
   1402c:	mov	r8, r3
   14030:	mov	r4, r2
   14034:	mov	r9, r1
   14038:	mov	r6, r0
   1403c:	bl	14c64 <table_get_cell_ptr@@Base>
   14040:	mov	r5, r0
   14044:	mov	r0, r6
   14048:	mov	r1, r4
   1404c:	bl	12cf0 <table_get_col_ptr@@Base>
   14050:	ldr	r0, [r0, #4]
   14054:	mvn	r7, #0
   14058:	cmp	r0, #22
   1405c:	bne	1409c <table_set_bool@@Base+0x78>
   14060:	ldr	r0, [r5]
   14064:	cmp	r0, #0
   14068:	bne	14080 <table_set_bool@@Base+0x5c>
   1406c:	mov	r0, #1
   14070:	bl	11f00 <malloc@plt>
   14074:	cmp	r0, #0
   14078:	str	r0, [r5]
   1407c:	beq	1409c <table_set_bool@@Base+0x78>
   14080:	strb	r8, [r0]
   14084:	mov	r0, r6
   14088:	mov	r1, r9
   1408c:	mov	r2, r4
   14090:	mov	r3, #1
   14094:	bl	12c08 <table_notify@@Base>
   14098:	mov	r7, #0
   1409c:	mov	r0, r7
   140a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140a4 <table_set_int@@Base>:
   140a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140a8:	add	fp, sp, #24
   140ac:	mov	r8, r3
   140b0:	mov	r4, r2
   140b4:	mov	r5, r1
   140b8:	mov	r6, r0
   140bc:	bl	14c64 <table_get_cell_ptr@@Base>
   140c0:	mov	r9, r0
   140c4:	mov	r0, r6
   140c8:	mov	r1, r4
   140cc:	bl	12cf0 <table_get_col_ptr@@Base>
   140d0:	ldr	r0, [r0, #4]
   140d4:	mvn	r7, #0
   140d8:	cmp	r0, #0
   140dc:	bne	1411c <table_set_int@@Base+0x78>
   140e0:	ldr	r0, [r9]
   140e4:	cmp	r0, #0
   140e8:	bne	14100 <table_set_int@@Base+0x5c>
   140ec:	mov	r0, #4
   140f0:	bl	11f00 <malloc@plt>
   140f4:	cmp	r0, #0
   140f8:	str	r0, [r9]
   140fc:	beq	1411c <table_set_int@@Base+0x78>
   14100:	str	r8, [r0]
   14104:	mov	r0, r6
   14108:	mov	r1, r5
   1410c:	mov	r2, r4
   14110:	mov	r3, #1
   14114:	bl	12c08 <table_notify@@Base>
   14118:	mov	r7, #0
   1411c:	mov	r0, r7
   14120:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014124 <table_set_uint@@Base>:
   14124:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14128:	add	fp, sp, #24
   1412c:	mov	r8, r3
   14130:	mov	r4, r2
   14134:	mov	r5, r1
   14138:	mov	r6, r0
   1413c:	bl	14c64 <table_get_cell_ptr@@Base>
   14140:	mov	r9, r0
   14144:	mov	r0, r6
   14148:	mov	r1, r4
   1414c:	bl	12cf0 <table_get_col_ptr@@Base>
   14150:	ldr	r0, [r0, #4]
   14154:	mvn	r7, #0
   14158:	cmp	r0, #1
   1415c:	bne	1419c <table_set_uint@@Base+0x78>
   14160:	ldr	r0, [r9]
   14164:	cmp	r0, #0
   14168:	bne	14180 <table_set_uint@@Base+0x5c>
   1416c:	mov	r0, #4
   14170:	bl	11f00 <malloc@plt>
   14174:	cmp	r0, #0
   14178:	str	r0, [r9]
   1417c:	beq	1419c <table_set_uint@@Base+0x78>
   14180:	str	r8, [r0]
   14184:	mov	r0, r6
   14188:	mov	r1, r5
   1418c:	mov	r2, r4
   14190:	mov	r3, #1
   14194:	bl	12c08 <table_notify@@Base>
   14198:	mov	r7, #0
   1419c:	mov	r0, r7
   141a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141a4 <table_set_int8@@Base>:
   141a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141a8:	add	fp, sp, #24
   141ac:	mov	r8, r3
   141b0:	mov	r4, r2
   141b4:	mov	r9, r1
   141b8:	mov	r6, r0
   141bc:	bl	14c64 <table_get_cell_ptr@@Base>
   141c0:	mov	r5, r0
   141c4:	mov	r0, r6
   141c8:	mov	r1, r4
   141cc:	bl	12cf0 <table_get_col_ptr@@Base>
   141d0:	ldr	r0, [r0, #4]
   141d4:	mvn	r7, #0
   141d8:	cmp	r0, #2
   141dc:	bne	1421c <table_set_int8@@Base+0x78>
   141e0:	ldr	r0, [r5]
   141e4:	cmp	r0, #0
   141e8:	bne	14200 <table_set_int8@@Base+0x5c>
   141ec:	mov	r0, #1
   141f0:	bl	11f00 <malloc@plt>
   141f4:	cmp	r0, #0
   141f8:	str	r0, [r5]
   141fc:	beq	1421c <table_set_int8@@Base+0x78>
   14200:	strb	r8, [r0]
   14204:	mov	r0, r6
   14208:	mov	r1, r9
   1420c:	mov	r2, r4
   14210:	mov	r3, #1
   14214:	bl	12c08 <table_notify@@Base>
   14218:	mov	r7, #0
   1421c:	mov	r0, r7
   14220:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014224 <table_set_uint8@@Base>:
   14224:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14228:	add	fp, sp, #24
   1422c:	mov	r8, r3
   14230:	mov	r4, r2
   14234:	mov	r9, r1
   14238:	mov	r6, r0
   1423c:	bl	14c64 <table_get_cell_ptr@@Base>
   14240:	mov	r5, r0
   14244:	mov	r0, r6
   14248:	mov	r1, r4
   1424c:	bl	12cf0 <table_get_col_ptr@@Base>
   14250:	ldr	r0, [r0, #4]
   14254:	mvn	r7, #0
   14258:	cmp	r0, #3
   1425c:	bne	1429c <table_set_uint8@@Base+0x78>
   14260:	ldr	r0, [r5]
   14264:	cmp	r0, #0
   14268:	bne	14280 <table_set_uint8@@Base+0x5c>
   1426c:	mov	r0, #1
   14270:	bl	11f00 <malloc@plt>
   14274:	cmp	r0, #0
   14278:	str	r0, [r5]
   1427c:	beq	1429c <table_set_uint8@@Base+0x78>
   14280:	strb	r8, [r0]
   14284:	mov	r0, r6
   14288:	mov	r1, r9
   1428c:	mov	r2, r4
   14290:	mov	r3, #1
   14294:	bl	12c08 <table_notify@@Base>
   14298:	mov	r7, #0
   1429c:	mov	r0, r7
   142a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142a4 <table_set_int16@@Base>:
   142a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142a8:	add	fp, sp, #24
   142ac:	mov	r8, r3
   142b0:	mov	r4, r2
   142b4:	mov	r9, r1
   142b8:	mov	r6, r0
   142bc:	bl	14c64 <table_get_cell_ptr@@Base>
   142c0:	mov	r5, r0
   142c4:	mov	r0, r6
   142c8:	mov	r1, r4
   142cc:	bl	12cf0 <table_get_col_ptr@@Base>
   142d0:	ldr	r0, [r0, #4]
   142d4:	mvn	r7, #0
   142d8:	cmp	r0, #4
   142dc:	bne	1431c <table_set_int16@@Base+0x78>
   142e0:	ldr	r0, [r5]
   142e4:	cmp	r0, #0
   142e8:	bne	14300 <table_set_int16@@Base+0x5c>
   142ec:	mov	r0, #2
   142f0:	bl	11f00 <malloc@plt>
   142f4:	cmp	r0, #0
   142f8:	str	r0, [r5]
   142fc:	beq	1431c <table_set_int16@@Base+0x78>
   14300:	strh	r8, [r0]
   14304:	mov	r0, r6
   14308:	mov	r1, r9
   1430c:	mov	r2, r4
   14310:	mov	r3, #1
   14314:	bl	12c08 <table_notify@@Base>
   14318:	mov	r7, #0
   1431c:	mov	r0, r7
   14320:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014324 <table_set_uint16@@Base>:
   14324:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14328:	add	fp, sp, #24
   1432c:	mov	r8, r3
   14330:	mov	r4, r2
   14334:	mov	r9, r1
   14338:	mov	r6, r0
   1433c:	bl	14c64 <table_get_cell_ptr@@Base>
   14340:	mov	r5, r0
   14344:	mov	r0, r6
   14348:	mov	r1, r4
   1434c:	bl	12cf0 <table_get_col_ptr@@Base>
   14350:	ldr	r0, [r0, #4]
   14354:	mvn	r7, #0
   14358:	cmp	r0, #5
   1435c:	bne	1439c <table_set_uint16@@Base+0x78>
   14360:	ldr	r0, [r5]
   14364:	cmp	r0, #0
   14368:	bne	14380 <table_set_uint16@@Base+0x5c>
   1436c:	mov	r0, #2
   14370:	bl	11f00 <malloc@plt>
   14374:	cmp	r0, #0
   14378:	str	r0, [r5]
   1437c:	beq	1439c <table_set_uint16@@Base+0x78>
   14380:	strh	r8, [r0]
   14384:	mov	r0, r6
   14388:	mov	r1, r9
   1438c:	mov	r2, r4
   14390:	mov	r3, #1
   14394:	bl	12c08 <table_notify@@Base>
   14398:	mov	r7, #0
   1439c:	mov	r0, r7
   143a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143a4 <table_set_int32@@Base>:
   143a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143a8:	add	fp, sp, #24
   143ac:	mov	r8, r3
   143b0:	mov	r4, r2
   143b4:	mov	r5, r1
   143b8:	mov	r6, r0
   143bc:	bl	14c64 <table_get_cell_ptr@@Base>
   143c0:	mov	r9, r0
   143c4:	mov	r0, r6
   143c8:	mov	r1, r4
   143cc:	bl	12cf0 <table_get_col_ptr@@Base>
   143d0:	ldr	r0, [r0, #4]
   143d4:	mvn	r7, #0
   143d8:	cmp	r0, #6
   143dc:	bne	1441c <table_set_int32@@Base+0x78>
   143e0:	ldr	r0, [r9]
   143e4:	cmp	r0, #0
   143e8:	bne	14400 <table_set_int32@@Base+0x5c>
   143ec:	mov	r0, #4
   143f0:	bl	11f00 <malloc@plt>
   143f4:	cmp	r0, #0
   143f8:	str	r0, [r9]
   143fc:	beq	1441c <table_set_int32@@Base+0x78>
   14400:	str	r8, [r0]
   14404:	mov	r0, r6
   14408:	mov	r1, r5
   1440c:	mov	r2, r4
   14410:	mov	r3, #1
   14414:	bl	12c08 <table_notify@@Base>
   14418:	mov	r7, #0
   1441c:	mov	r0, r7
   14420:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014424 <table_set_uint32@@Base>:
   14424:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14428:	add	fp, sp, #24
   1442c:	mov	r8, r3
   14430:	mov	r4, r2
   14434:	mov	r5, r1
   14438:	mov	r6, r0
   1443c:	bl	14c64 <table_get_cell_ptr@@Base>
   14440:	mov	r9, r0
   14444:	mov	r0, r6
   14448:	mov	r1, r4
   1444c:	bl	12cf0 <table_get_col_ptr@@Base>
   14450:	ldr	r0, [r0, #4]
   14454:	mvn	r7, #0
   14458:	cmp	r0, #7
   1445c:	bne	1449c <table_set_uint32@@Base+0x78>
   14460:	ldr	r0, [r9]
   14464:	cmp	r0, #0
   14468:	bne	14480 <table_set_uint32@@Base+0x5c>
   1446c:	mov	r0, #4
   14470:	bl	11f00 <malloc@plt>
   14474:	cmp	r0, #0
   14478:	str	r0, [r9]
   1447c:	beq	1449c <table_set_uint32@@Base+0x78>
   14480:	str	r8, [r0]
   14484:	mov	r0, r6
   14488:	mov	r1, r5
   1448c:	mov	r2, r4
   14490:	mov	r3, #1
   14494:	bl	12c08 <table_notify@@Base>
   14498:	mov	r7, #0
   1449c:	mov	r0, r7
   144a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144a4 <table_set_int64@@Base>:
   144a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144a8:	add	fp, sp, #24
   144ac:	mov	r4, r2
   144b0:	mov	r8, r1
   144b4:	mov	r6, r0
   144b8:	bl	14c64 <table_get_cell_ptr@@Base>
   144bc:	mov	r5, r0
   144c0:	mov	r0, r6
   144c4:	mov	r1, r4
   144c8:	bl	12cf0 <table_get_col_ptr@@Base>
   144cc:	ldr	r0, [r0, #4]
   144d0:	mvn	r7, #0
   144d4:	cmp	r0, #8
   144d8:	bne	14524 <table_set_int64@@Base+0x80>
   144dc:	ldr	r0, [r5]
   144e0:	cmp	r0, #0
   144e4:	bne	144fc <table_set_int64@@Base+0x58>
   144e8:	mov	r0, #8
   144ec:	bl	11f00 <malloc@plt>
   144f0:	cmp	r0, #0
   144f4:	str	r0, [r5]
   144f8:	beq	14524 <table_set_int64@@Base+0x80>
   144fc:	ldr	r1, [fp, #12]
   14500:	ldr	r2, [fp, #8]
   14504:	mov	r3, #1
   14508:	str	r2, [r0]
   1450c:	str	r1, [r0, #4]
   14510:	mov	r0, r6
   14514:	mov	r1, r8
   14518:	mov	r2, r4
   1451c:	bl	12c08 <table_notify@@Base>
   14520:	mov	r7, #0
   14524:	mov	r0, r7
   14528:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001452c <table_set_uint64@@Base>:
   1452c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14530:	add	fp, sp, #24
   14534:	mov	r4, r2
   14538:	mov	r8, r1
   1453c:	mov	r6, r0
   14540:	bl	14c64 <table_get_cell_ptr@@Base>
   14544:	mov	r5, r0
   14548:	mov	r0, r6
   1454c:	mov	r1, r4
   14550:	bl	12cf0 <table_get_col_ptr@@Base>
   14554:	ldr	r0, [r0, #4]
   14558:	mvn	r7, #0
   1455c:	cmp	r0, #9
   14560:	bne	145ac <table_set_uint64@@Base+0x80>
   14564:	ldr	r0, [r5]
   14568:	cmp	r0, #0
   1456c:	bne	14584 <table_set_uint64@@Base+0x58>
   14570:	mov	r0, #8
   14574:	bl	11f00 <malloc@plt>
   14578:	cmp	r0, #0
   1457c:	str	r0, [r5]
   14580:	beq	145ac <table_set_uint64@@Base+0x80>
   14584:	ldr	r1, [fp, #12]
   14588:	ldr	r2, [fp, #8]
   1458c:	mov	r3, #1
   14590:	str	r2, [r0]
   14594:	str	r1, [r0, #4]
   14598:	mov	r0, r6
   1459c:	mov	r1, r8
   145a0:	mov	r2, r4
   145a4:	bl	12c08 <table_notify@@Base>
   145a8:	mov	r7, #0
   145ac:	mov	r0, r7
   145b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000145b4 <table_set_short@@Base>:
   145b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145b8:	add	fp, sp, #24
   145bc:	mov	r8, r3
   145c0:	mov	r4, r2
   145c4:	mov	r9, r1
   145c8:	mov	r6, r0
   145cc:	bl	14c64 <table_get_cell_ptr@@Base>
   145d0:	mov	r5, r0
   145d4:	mov	r0, r6
   145d8:	mov	r1, r4
   145dc:	bl	12cf0 <table_get_col_ptr@@Base>
   145e0:	ldr	r0, [r0, #4]
   145e4:	mvn	r7, #0
   145e8:	cmp	r0, #10
   145ec:	bne	1462c <table_set_short@@Base+0x78>
   145f0:	ldr	r0, [r5]
   145f4:	cmp	r0, #0
   145f8:	bne	14610 <table_set_short@@Base+0x5c>
   145fc:	mov	r0, #2
   14600:	bl	11f00 <malloc@plt>
   14604:	cmp	r0, #0
   14608:	str	r0, [r5]
   1460c:	beq	1462c <table_set_short@@Base+0x78>
   14610:	strh	r8, [r0]
   14614:	mov	r0, r6
   14618:	mov	r1, r9
   1461c:	mov	r2, r4
   14620:	mov	r3, #1
   14624:	bl	12c08 <table_notify@@Base>
   14628:	mov	r7, #0
   1462c:	mov	r0, r7
   14630:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014634 <table_set_ushort@@Base>:
   14634:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14638:	add	fp, sp, #24
   1463c:	mov	r8, r3
   14640:	mov	r4, r2
   14644:	mov	r9, r1
   14648:	mov	r6, r0
   1464c:	bl	14c64 <table_get_cell_ptr@@Base>
   14650:	mov	r5, r0
   14654:	mov	r0, r6
   14658:	mov	r1, r4
   1465c:	bl	12cf0 <table_get_col_ptr@@Base>
   14660:	ldr	r0, [r0, #4]
   14664:	mvn	r7, #0
   14668:	cmp	r0, #11
   1466c:	bne	146ac <table_set_ushort@@Base+0x78>
   14670:	ldr	r0, [r5]
   14674:	cmp	r0, #0
   14678:	bne	14690 <table_set_ushort@@Base+0x5c>
   1467c:	mov	r0, #2
   14680:	bl	11f00 <malloc@plt>
   14684:	cmp	r0, #0
   14688:	str	r0, [r5]
   1468c:	beq	146ac <table_set_ushort@@Base+0x78>
   14690:	strh	r8, [r0]
   14694:	mov	r0, r6
   14698:	mov	r1, r9
   1469c:	mov	r2, r4
   146a0:	mov	r3, #1
   146a4:	bl	12c08 <table_notify@@Base>
   146a8:	mov	r7, #0
   146ac:	mov	r0, r7
   146b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146b4 <table_set_long@@Base>:
   146b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146b8:	add	fp, sp, #24
   146bc:	mov	r8, r3
   146c0:	mov	r4, r2
   146c4:	mov	r5, r1
   146c8:	mov	r6, r0
   146cc:	bl	14c64 <table_get_cell_ptr@@Base>
   146d0:	mov	r9, r0
   146d4:	mov	r0, r6
   146d8:	mov	r1, r4
   146dc:	bl	12cf0 <table_get_col_ptr@@Base>
   146e0:	ldr	r0, [r0, #4]
   146e4:	mvn	r7, #0
   146e8:	cmp	r0, #12
   146ec:	bne	1472c <table_set_long@@Base+0x78>
   146f0:	ldr	r0, [r9]
   146f4:	cmp	r0, #0
   146f8:	bne	14710 <table_set_long@@Base+0x5c>
   146fc:	mov	r0, #4
   14700:	bl	11f00 <malloc@plt>
   14704:	cmp	r0, #0
   14708:	str	r0, [r9]
   1470c:	beq	1472c <table_set_long@@Base+0x78>
   14710:	str	r8, [r0]
   14714:	mov	r0, r6
   14718:	mov	r1, r5
   1471c:	mov	r2, r4
   14720:	mov	r3, #1
   14724:	bl	12c08 <table_notify@@Base>
   14728:	mov	r7, #0
   1472c:	mov	r0, r7
   14730:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014734 <table_set_ulong@@Base>:
   14734:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14738:	add	fp, sp, #24
   1473c:	mov	r8, r3
   14740:	mov	r4, r2
   14744:	mov	r5, r1
   14748:	mov	r6, r0
   1474c:	bl	14c64 <table_get_cell_ptr@@Base>
   14750:	mov	r9, r0
   14754:	mov	r0, r6
   14758:	mov	r1, r4
   1475c:	bl	12cf0 <table_get_col_ptr@@Base>
   14760:	ldr	r0, [r0, #4]
   14764:	mvn	r7, #0
   14768:	cmp	r0, #13
   1476c:	bne	147ac <table_set_ulong@@Base+0x78>
   14770:	ldr	r0, [r9]
   14774:	cmp	r0, #0
   14778:	bne	14790 <table_set_ulong@@Base+0x5c>
   1477c:	mov	r0, #4
   14780:	bl	11f00 <malloc@plt>
   14784:	cmp	r0, #0
   14788:	str	r0, [r9]
   1478c:	beq	147ac <table_set_ulong@@Base+0x78>
   14790:	str	r8, [r0]
   14794:	mov	r0, r6
   14798:	mov	r1, r5
   1479c:	mov	r2, r4
   147a0:	mov	r3, #1
   147a4:	bl	12c08 <table_notify@@Base>
   147a8:	mov	r7, #0
   147ac:	mov	r0, r7
   147b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147b4 <table_set_llong@@Base>:
   147b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147b8:	add	fp, sp, #24
   147bc:	mov	r4, r2
   147c0:	mov	r8, r1
   147c4:	mov	r6, r0
   147c8:	bl	14c64 <table_get_cell_ptr@@Base>
   147cc:	mov	r5, r0
   147d0:	mov	r0, r6
   147d4:	mov	r1, r4
   147d8:	bl	12cf0 <table_get_col_ptr@@Base>
   147dc:	ldr	r0, [r0, #4]
   147e0:	mvn	r7, #0
   147e4:	cmp	r0, #14
   147e8:	bne	14834 <table_set_llong@@Base+0x80>
   147ec:	ldr	r0, [r5]
   147f0:	cmp	r0, #0
   147f4:	bne	1480c <table_set_llong@@Base+0x58>
   147f8:	mov	r0, #8
   147fc:	bl	11f00 <malloc@plt>
   14800:	cmp	r0, #0
   14804:	str	r0, [r5]
   14808:	beq	14834 <table_set_llong@@Base+0x80>
   1480c:	ldr	r1, [fp, #12]
   14810:	ldr	r2, [fp, #8]
   14814:	mov	r3, #1
   14818:	str	r2, [r0]
   1481c:	str	r1, [r0, #4]
   14820:	mov	r0, r6
   14824:	mov	r1, r8
   14828:	mov	r2, r4
   1482c:	bl	12c08 <table_notify@@Base>
   14830:	mov	r7, #0
   14834:	mov	r0, r7
   14838:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001483c <table_set_ullong@@Base>:
   1483c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14840:	add	fp, sp, #24
   14844:	mov	r4, r2
   14848:	mov	r8, r1
   1484c:	mov	r6, r0
   14850:	bl	14c64 <table_get_cell_ptr@@Base>
   14854:	mov	r5, r0
   14858:	mov	r0, r6
   1485c:	mov	r1, r4
   14860:	bl	12cf0 <table_get_col_ptr@@Base>
   14864:	ldr	r0, [r0, #4]
   14868:	mvn	r7, #0
   1486c:	cmp	r0, #15
   14870:	bne	148bc <table_set_ullong@@Base+0x80>
   14874:	ldr	r0, [r5]
   14878:	cmp	r0, #0
   1487c:	bne	14894 <table_set_ullong@@Base+0x58>
   14880:	mov	r0, #8
   14884:	bl	11f00 <malloc@plt>
   14888:	cmp	r0, #0
   1488c:	str	r0, [r5]
   14890:	beq	148bc <table_set_ullong@@Base+0x80>
   14894:	ldr	r1, [fp, #12]
   14898:	ldr	r2, [fp, #8]
   1489c:	mov	r3, #1
   148a0:	str	r2, [r0]
   148a4:	str	r1, [r0, #4]
   148a8:	mov	r0, r6
   148ac:	mov	r1, r8
   148b0:	mov	r2, r4
   148b4:	bl	12c08 <table_notify@@Base>
   148b8:	mov	r7, #0
   148bc:	mov	r0, r7
   148c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148c4 <table_set_float@@Base>:
   148c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148c8:	add	fp, sp, #24
   148cc:	vpush	{d8}
   148d0:	vmov.f32	s16, s0
   148d4:	mov	r4, r2
   148d8:	mov	r8, r1
   148dc:	mov	r6, r0
   148e0:	bl	14c64 <table_get_cell_ptr@@Base>
   148e4:	mov	r5, r0
   148e8:	mov	r0, r6
   148ec:	mov	r1, r4
   148f0:	bl	12cf0 <table_get_col_ptr@@Base>
   148f4:	ldr	r0, [r0, #4]
   148f8:	mvn	r7, #0
   148fc:	cmp	r0, #16
   14900:	bne	14944 <table_set_float@@Base+0x80>
   14904:	ldr	r0, [r5]
   14908:	cmp	r0, #0
   1490c:	bne	14924 <table_set_float@@Base+0x60>
   14910:	mov	r0, #4
   14914:	bl	11f00 <malloc@plt>
   14918:	cmp	r0, #0
   1491c:	str	r0, [r5]
   14920:	beq	14944 <table_set_float@@Base+0x80>
   14924:	vmov	r1, s16
   14928:	mov	r2, r4
   1492c:	mov	r3, #1
   14930:	str	r1, [r0]
   14934:	mov	r0, r6
   14938:	mov	r1, r8
   1493c:	bl	12c08 <table_notify@@Base>
   14940:	mov	r7, #0
   14944:	mov	r0, r7
   14948:	vpop	{d8}
   1494c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014950 <table_set_double@@Base>:
   14950:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14954:	add	fp, sp, #24
   14958:	vpush	{d8}
   1495c:	vorr	d8, d0, d0
   14960:	mov	r4, r2
   14964:	mov	r5, r1
   14968:	mov	r6, r0
   1496c:	bl	14c64 <table_get_cell_ptr@@Base>
   14970:	mov	r8, r0
   14974:	mov	r0, r6
   14978:	mov	r1, r4
   1497c:	bl	12cf0 <table_get_col_ptr@@Base>
   14980:	ldr	r0, [r0, #4]
   14984:	mvn	r7, #0
   14988:	cmp	r0, #17
   1498c:	bne	149cc <table_set_double@@Base+0x7c>
   14990:	ldr	r0, [r8]
   14994:	cmp	r0, #0
   14998:	bne	149b0 <table_set_double@@Base+0x60>
   1499c:	mov	r0, #8
   149a0:	bl	11f00 <malloc@plt>
   149a4:	cmp	r0, #0
   149a8:	str	r0, [r8]
   149ac:	beq	149cc <table_set_double@@Base+0x7c>
   149b0:	vst1.8	{d8}, [r0]
   149b4:	mov	r0, r6
   149b8:	mov	r1, r5
   149bc:	mov	r2, r4
   149c0:	mov	r3, #1
   149c4:	bl	12c08 <table_notify@@Base>
   149c8:	mov	r7, #0
   149cc:	mov	r0, r7
   149d0:	vpop	{d8}
   149d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149d8 <table_set_ldouble@@Base>:
   149d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149dc:	add	fp, sp, #24
   149e0:	vpush	{d8}
   149e4:	vorr	d8, d0, d0
   149e8:	mov	r4, r2
   149ec:	mov	r5, r1
   149f0:	mov	r6, r0
   149f4:	bl	14c64 <table_get_cell_ptr@@Base>
   149f8:	mov	r8, r0
   149fc:	mov	r0, r6
   14a00:	mov	r1, r4
   14a04:	bl	12cf0 <table_get_col_ptr@@Base>
   14a08:	ldr	r0, [r0, #4]
   14a0c:	mvn	r7, #0
   14a10:	cmp	r0, #18
   14a14:	bne	14a54 <table_set_ldouble@@Base+0x7c>
   14a18:	ldr	r0, [r8]
   14a1c:	cmp	r0, #0
   14a20:	bne	14a38 <table_set_ldouble@@Base+0x60>
   14a24:	mov	r0, #8
   14a28:	bl	11f00 <malloc@plt>
   14a2c:	cmp	r0, #0
   14a30:	str	r0, [r8]
   14a34:	beq	14a54 <table_set_ldouble@@Base+0x7c>
   14a38:	vst1.8	{d8}, [r0]
   14a3c:	mov	r0, r6
   14a40:	mov	r1, r5
   14a44:	mov	r2, r4
   14a48:	mov	r3, #1
   14a4c:	bl	12c08 <table_notify@@Base>
   14a50:	mov	r7, #0
   14a54:	mov	r0, r7
   14a58:	vpop	{d8}
   14a5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a60 <table_set_string@@Base>:
   14a60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a64:	add	fp, sp, #24
   14a68:	mov	r8, r3
   14a6c:	mov	r4, r2
   14a70:	mov	r9, r1
   14a74:	mov	r6, r0
   14a78:	bl	14c64 <table_get_cell_ptr@@Base>
   14a7c:	mov	r5, r0
   14a80:	mov	r0, r6
   14a84:	mov	r1, r4
   14a88:	bl	12cf0 <table_get_col_ptr@@Base>
   14a8c:	ldr	r0, [r0, #4]
   14a90:	mvn	r7, #0
   14a94:	cmp	r0, #21
   14a98:	bne	14ae0 <table_set_string@@Base+0x80>
   14a9c:	mov	r0, r8
   14aa0:	bl	11f24 <strlen@plt>
   14aa4:	ldr	r2, [r5]
   14aa8:	add	r1, r0, #1
   14aac:	mov	r0, r2
   14ab0:	bl	11edc <realloc@plt>
   14ab4:	cmp	r0, #0
   14ab8:	str	r0, [r5]
   14abc:	beq	14ae0 <table_set_string@@Base+0x80>
   14ac0:	mov	r1, r8
   14ac4:	bl	11ee8 <strcpy@plt>
   14ac8:	mov	r0, r6
   14acc:	mov	r1, r9
   14ad0:	mov	r2, r4
   14ad4:	mov	r3, #1
   14ad8:	bl	12c08 <table_notify@@Base>
   14adc:	mov	r7, #0
   14ae0:	mov	r0, r7
   14ae4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ae8 <table_set_char@@Base>:
   14ae8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14aec:	add	fp, sp, #24
   14af0:	mov	r8, r3
   14af4:	mov	r4, r2
   14af8:	mov	r9, r1
   14afc:	mov	r6, r0
   14b00:	bl	14c64 <table_get_cell_ptr@@Base>
   14b04:	mov	r5, r0
   14b08:	mov	r0, r6
   14b0c:	mov	r1, r4
   14b10:	bl	12cf0 <table_get_col_ptr@@Base>
   14b14:	ldr	r0, [r0, #4]
   14b18:	mvn	r7, #0
   14b1c:	cmp	r0, #19
   14b20:	bne	14b60 <table_set_char@@Base+0x78>
   14b24:	ldr	r0, [r5]
   14b28:	cmp	r0, #0
   14b2c:	bne	14b44 <table_set_char@@Base+0x5c>
   14b30:	mov	r0, #1
   14b34:	bl	11f00 <malloc@plt>
   14b38:	cmp	r0, #0
   14b3c:	str	r0, [r5]
   14b40:	beq	14b60 <table_set_char@@Base+0x78>
   14b44:	strb	r8, [r0]
   14b48:	mov	r0, r6
   14b4c:	mov	r1, r9
   14b50:	mov	r2, r4
   14b54:	mov	r3, #1
   14b58:	bl	12c08 <table_notify@@Base>
   14b5c:	mov	r7, #0
   14b60:	mov	r0, r7
   14b64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b68 <table_set_uchar@@Base>:
   14b68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b6c:	add	fp, sp, #24
   14b70:	mov	r8, r3
   14b74:	mov	r4, r2
   14b78:	mov	r9, r1
   14b7c:	mov	r6, r0
   14b80:	bl	14c64 <table_get_cell_ptr@@Base>
   14b84:	mov	r5, r0
   14b88:	mov	r0, r6
   14b8c:	mov	r1, r4
   14b90:	bl	12cf0 <table_get_col_ptr@@Base>
   14b94:	ldr	r0, [r0, #4]
   14b98:	mvn	r7, #0
   14b9c:	cmp	r0, #20
   14ba0:	bne	14be0 <table_set_uchar@@Base+0x78>
   14ba4:	ldr	r0, [r5]
   14ba8:	cmp	r0, #0
   14bac:	bne	14bc4 <table_set_uchar@@Base+0x5c>
   14bb0:	mov	r0, #1
   14bb4:	bl	11f00 <malloc@plt>
   14bb8:	cmp	r0, #0
   14bbc:	str	r0, [r5]
   14bc0:	beq	14be0 <table_set_uchar@@Base+0x78>
   14bc4:	strb	r8, [r0]
   14bc8:	mov	r0, r6
   14bcc:	mov	r1, r9
   14bd0:	mov	r2, r4
   14bd4:	mov	r3, #1
   14bd8:	bl	12c08 <table_notify@@Base>
   14bdc:	mov	r7, #0
   14be0:	mov	r0, r7
   14be4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014be8 <table_set_ptr@@Base>:
   14be8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14bec:	add	fp, sp, #24
   14bf0:	mov	r8, r3
   14bf4:	mov	r4, r2
   14bf8:	mov	r5, r1
   14bfc:	mov	r6, r0
   14c00:	bl	14c64 <table_get_cell_ptr@@Base>
   14c04:	mov	r7, r0
   14c08:	mov	r0, r6
   14c0c:	mov	r1, r4
   14c10:	bl	12cf0 <table_get_col_ptr@@Base>
   14c14:	ldr	r1, [r0, #4]
   14c18:	mvn	r0, #0
   14c1c:	cmp	r1, #23
   14c20:	bne	14c40 <table_set_ptr@@Base+0x58>
   14c24:	mov	r0, r6
   14c28:	mov	r1, r5
   14c2c:	mov	r2, r4
   14c30:	mov	r3, #1
   14c34:	str	r8, [r7]
   14c38:	bl	12c08 <table_notify@@Base>
   14c3c:	mov	r0, #0
   14c40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014c44 <table_cell_init@@Base>:
   14c44:	push	{r4, sl, fp, lr}
   14c48:	add	fp, sp, #8
   14c4c:	mov	r4, r2
   14c50:	bl	13a88 <table_get_row_ptr@@Base>
   14c54:	ldr	r0, [r0]
   14c58:	mov	r1, #0
   14c5c:	str	r1, [r0, r4, lsl #2]
   14c60:	pop	{r4, sl, fp, pc}

00014c64 <table_get_cell_ptr@@Base>:
   14c64:	push	{r4, sl, fp, lr}
   14c68:	add	fp, sp, #8
   14c6c:	mov	r4, r2
   14c70:	bl	13a88 <table_get_row_ptr@@Base>
   14c74:	ldr	r0, [r0]
   14c78:	add	r0, r0, r4, lsl #2
   14c7c:	pop	{r4, sl, fp, pc}

00014c80 <table_cell_destroy@@Base>:
   14c80:	push	{r4, r5, r6, sl, fp, lr}
   14c84:	add	fp, sp, #16
   14c88:	mov	r5, r1
   14c8c:	mov	r1, r2
   14c90:	mov	r4, r2
   14c94:	mov	r6, r0
   14c98:	bl	12d9c <table_get_column_data_type@@Base>
   14c9c:	cmp	r0, #23
   14ca0:	popeq	{r4, r5, r6, sl, fp, pc}
   14ca4:	mov	r0, r6
   14ca8:	mov	r1, r5
   14cac:	bl	13a88 <table_get_row_ptr@@Base>
   14cb0:	ldr	r0, [r0]
   14cb4:	ldr	r0, [r0, r4, lsl #2]
   14cb8:	cmp	r0, #0
   14cbc:	beq	14cc8 <table_cell_destroy@@Base+0x48>
   14cc0:	pop	{r4, r5, r6, sl, fp, lr}
   14cc4:	b	11ed0 <free@plt>
   14cc8:	pop	{r4, r5, r6, sl, fp, pc}

00014ccc <table_cell_to_buffer@@Base>:
   14ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14cd0:	add	fp, sp, #24
   14cd4:	sub	sp, sp, #8
   14cd8:	mov	r7, r1
   14cdc:	mov	r1, r2
   14ce0:	mov	r5, r3
   14ce4:	mov	r6, r2
   14ce8:	mov	r4, r0
   14cec:	bl	12d9c <table_get_column_data_type@@Base>
   14cf0:	cmp	r0, #23
   14cf4:	bhi	14f64 <table_cell_to_buffer@@Base+0x298>
   14cf8:	ldr	r8, [fp, #8]
   14cfc:	add	r1, pc, #0
   14d00:	ldr	pc, [r1, r0, lsl #2]
   14d04:	andeq	r4, r1, r4, ror #26
   14d08:	andeq	r4, r1, r8, ror sp
   14d0c:	andeq	r4, r1, ip, lsl #27
   14d10:	andeq	r4, r1, r0, lsr #27
   14d14:			; <UNDEFINED> instruction: 0x00014db4
   14d18:	andeq	r4, r1, r8, asr #27
   14d1c:	ldrdeq	r4, [r1], -ip
   14d20:	strdeq	r4, [r1], -r0
   14d24:	andeq	r4, r1, r0, lsl lr
   14d28:	andeq	r4, r1, r4, lsr #28
   14d2c:	andeq	r4, r1, r8, lsr lr
   14d30:	andeq	r4, r1, r8, asr lr
   14d34:	andeq	r4, r1, r8, ror lr
   14d38:	muleq	r1, r8, lr
   14d3c:			; <UNDEFINED> instruction: 0x00014eb8
   14d40:	ldrdeq	r4, [r1], -r8
   14d44:	strdeq	r4, [r1], -r8
   14d48:	andeq	r4, r1, ip, lsl pc
   14d4c:	andeq	r4, r1, ip, lsr pc
   14d50:	andeq	r4, r1, r0, ror pc
   14d54:	andeq	r4, r1, r4, lsl #31
   14d58:	andeq	r4, r1, r4, lsr #31
   14d5c:	andeq	r4, r1, r4, asr #31
   14d60:	strdeq	r4, [r1], -r8
   14d64:	mov	r0, r4
   14d68:	mov	r1, r7
   14d6c:	mov	r2, r6
   14d70:	bl	13844 <table_get_int@@Base>
   14d74:	b	14fd4 <table_cell_to_buffer@@Base+0x308>
   14d78:	mov	r0, r4
   14d7c:	mov	r1, r7
   14d80:	mov	r2, r6
   14d84:	bl	1385c <table_get_uint@@Base>
   14d88:	b	14e00 <table_cell_to_buffer@@Base+0x134>
   14d8c:	mov	r0, r4
   14d90:	mov	r1, r7
   14d94:	mov	r2, r6
   14d98:	bl	13874 <table_get_int8@@Base>
   14d9c:	b	14fd4 <table_cell_to_buffer@@Base+0x308>
   14da0:	mov	r0, r4
   14da4:	mov	r1, r7
   14da8:	mov	r2, r6
   14dac:	bl	1388c <table_get_uint8@@Base>
   14db0:	b	14e00 <table_cell_to_buffer@@Base+0x134>
   14db4:	mov	r0, r4
   14db8:	mov	r1, r7
   14dbc:	mov	r2, r6
   14dc0:	bl	138a4 <table_get_int16@@Base>
   14dc4:	b	14fd4 <table_cell_to_buffer@@Base+0x308>
   14dc8:	mov	r0, r4
   14dcc:	mov	r1, r7
   14dd0:	mov	r2, r6
   14dd4:	bl	138bc <table_get_uint16@@Base>
   14dd8:	b	14e00 <table_cell_to_buffer@@Base+0x134>
   14ddc:	mov	r0, r4
   14de0:	mov	r1, r7
   14de4:	mov	r2, r6
   14de8:	bl	138d4 <table_get_int32@@Base>
   14dec:	b	14fd4 <table_cell_to_buffer@@Base+0x308>
   14df0:	mov	r0, r4
   14df4:	mov	r1, r7
   14df8:	mov	r2, r6
   14dfc:	bl	138ec <table_get_uint32@@Base>
   14e00:	movw	r2, #22663	; 0x5887
   14e04:	mov	r3, r0
   14e08:	movt	r2, #1
   14e0c:	b	14fe0 <table_cell_to_buffer@@Base+0x314>
   14e10:	mov	r0, r4
   14e14:	mov	r1, r7
   14e18:	mov	r2, r6
   14e1c:	bl	13904 <table_get_int64@@Base>
   14e20:	b	14ec8 <table_cell_to_buffer@@Base+0x1fc>
   14e24:	mov	r0, r4
   14e28:	mov	r1, r7
   14e2c:	mov	r2, r6
   14e30:	bl	1391c <table_get_uint64@@Base>
   14e34:	b	14ee8 <table_cell_to_buffer@@Base+0x21c>
   14e38:	mov	r0, r4
   14e3c:	mov	r1, r7
   14e40:	mov	r2, r6
   14e44:	bl	13934 <table_get_short@@Base>
   14e48:	movw	r2, #22676	; 0x5894
   14e4c:	mov	r3, r0
   14e50:	movt	r2, #1
   14e54:	b	14fe0 <table_cell_to_buffer@@Base+0x314>
   14e58:	mov	r0, r4
   14e5c:	mov	r1, r7
   14e60:	mov	r2, r6
   14e64:	bl	1394c <table_get_ushort@@Base>
   14e68:	movw	r2, #22680	; 0x5898
   14e6c:	mov	r3, r0
   14e70:	movt	r2, #1
   14e74:	b	14fe0 <table_cell_to_buffer@@Base+0x314>
   14e78:	mov	r0, r4
   14e7c:	mov	r1, r7
   14e80:	mov	r2, r6
   14e84:	bl	13964 <table_get_long@@Base>
   14e88:	movw	r2, #22684	; 0x589c
   14e8c:	mov	r3, r0
   14e90:	movt	r2, #1
   14e94:	b	14fe0 <table_cell_to_buffer@@Base+0x314>
   14e98:	mov	r0, r4
   14e9c:	mov	r1, r7
   14ea0:	mov	r2, r6
   14ea4:	bl	1397c <table_get_ulong@@Base>
   14ea8:	movw	r2, #22688	; 0x58a0
   14eac:	mov	r3, r0
   14eb0:	movt	r2, #1
   14eb4:	b	14fe0 <table_cell_to_buffer@@Base+0x314>
   14eb8:	mov	r0, r4
   14ebc:	mov	r1, r7
   14ec0:	mov	r2, r6
   14ec4:	bl	13994 <table_get_llong@@Base>
   14ec8:	movw	r2, #22666	; 0x588a
   14ecc:	stm	sp, {r0, r1}
   14ed0:	movt	r2, #1
   14ed4:	b	14f58 <table_cell_to_buffer@@Base+0x28c>
   14ed8:	mov	r0, r4
   14edc:	mov	r1, r7
   14ee0:	mov	r2, r6
   14ee4:	bl	139ac <table_get_ullong@@Base>
   14ee8:	movw	r2, #22671	; 0x588f
   14eec:	stm	sp, {r0, r1}
   14ef0:	movt	r2, #1
   14ef4:	b	14f58 <table_cell_to_buffer@@Base+0x28c>
   14ef8:	mov	r0, r4
   14efc:	mov	r1, r7
   14f00:	mov	r2, r6
   14f04:	bl	139c4 <table_get_float@@Base>
   14f08:	vcvt.f64.f32	d16, s0
   14f0c:	movw	r2, #22695	; 0x58a7
   14f10:	movt	r2, #1
   14f14:	vstr	d16, [sp]
   14f18:	b	14f58 <table_cell_to_buffer@@Base+0x28c>
   14f1c:	mov	r0, r4
   14f20:	mov	r1, r7
   14f24:	mov	r2, r6
   14f28:	bl	139dc <table_get_double@@Base>
   14f2c:	movw	r2, #22698	; 0x58aa
   14f30:	vstr	d0, [sp]
   14f34:	movt	r2, #1
   14f38:	b	14f58 <table_cell_to_buffer@@Base+0x28c>
   14f3c:	mov	r0, r4
   14f40:	mov	r1, r7
   14f44:	mov	r2, r6
   14f48:	bl	139f4 <table_get_ldouble@@Base>
   14f4c:	movw	r2, #22702	; 0x58ae
   14f50:	vstr	d0, [sp]
   14f54:	movt	r2, #1
   14f58:	mov	r0, r5
   14f5c:	mov	r1, r8
   14f60:	bl	11f30 <snprintf@plt>
   14f64:	mov	r0, #0
   14f68:	sub	sp, fp, #24
   14f6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f70:	mov	r0, r4
   14f74:	mov	r1, r7
   14f78:	mov	r2, r6
   14f7c:	bl	13a0c <table_get_char@@Base>
   14f80:	b	14f94 <table_cell_to_buffer@@Base+0x2c8>
   14f84:	mov	r0, r4
   14f88:	mov	r1, r7
   14f8c:	mov	r2, r6
   14f90:	bl	13a24 <table_get_uchar@@Base>
   14f94:	movw	r2, #22706	; 0x58b2
   14f98:	mov	r3, r0
   14f9c:	movt	r2, #1
   14fa0:	b	14fe0 <table_cell_to_buffer@@Base+0x314>
   14fa4:	mov	r0, r4
   14fa8:	mov	r1, r7
   14fac:	mov	r2, r6
   14fb0:	bl	13a3c <table_get_string@@Base>
   14fb4:	movw	r2, #22692	; 0x58a4
   14fb8:	mov	r3, r0
   14fbc:	movt	r2, #1
   14fc0:	b	14fe0 <table_cell_to_buffer@@Base+0x314>
   14fc4:	mov	r0, r4
   14fc8:	mov	r1, r7
   14fcc:	mov	r2, r6
   14fd0:	bl	1382c <table_get_bool@@Base>
   14fd4:	movw	r2, #22660	; 0x5884
   14fd8:	mov	r3, r0
   14fdc:	movt	r2, #1
   14fe0:	mov	r0, r5
   14fe4:	mov	r1, r8
   14fe8:	bl	11f30 <snprintf@plt>
   14fec:	mov	r0, #0
   14ff0:	sub	sp, fp, #24
   14ff4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ff8:	mov	r0, r4
   14ffc:	mov	r1, r7
   15000:	mov	r2, r6
   15004:	bl	13a50 <table_get_ptr@@Base>
   15008:	movw	r2, #22709	; 0x58b5
   1500c:	mov	r3, r0
   15010:	movt	r2, #1
   15014:	b	14fe0 <table_cell_to_buffer@@Base+0x314>

00015018 <table_cell_from_buffer@@Base>:
   15018:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1501c:	add	fp, sp, #24
   15020:	sub	sp, sp, #264	; 0x108
   15024:	mov	r5, r1
   15028:	mov	r1, r2
   1502c:	mov	r7, r3
   15030:	mov	r4, r2
   15034:	mov	r6, r0
   15038:	bl	12d9c <table_get_column_data_type@@Base>
   1503c:	cmp	r0, #23
   15040:	bhi	15670 <table_cell_from_buffer@@Base+0x658>
   15044:	add	r1, pc, #0
   15048:	ldr	pc, [r1, r0, lsl #2]
   1504c:	andeq	r5, r1, ip, lsr #1
   15050:	andeq	r5, r1, r8, ror #1
   15054:	andeq	r5, r1, r4, lsr #2
   15058:	andeq	r5, r1, r0, ror #2
   1505c:	muleq	r1, ip, r1
   15060:	ldrdeq	r5, [r1], -r8
   15064:	andeq	r5, r1, r4, lsl r2
   15068:	andeq	r5, r1, r0, asr r2
   1506c:	andeq	r5, r1, ip, lsl #5
   15070:	ldrdeq	r5, [r1], -r0
   15074:	andeq	r5, r1, r4, lsl r3
   15078:	andeq	r5, r1, r0, asr r3
   1507c:	andeq	r5, r1, ip, lsl #7
   15080:	andeq	r5, r1, r8, asr #7
   15084:	andeq	r5, r1, r4, lsl #8
   15088:	andeq	r5, r1, r8, asr #8
   1508c:	andeq	r5, r1, ip, lsl #9
   15090:	andeq	r5, r1, r8, asr #9
   15094:	andeq	r5, r1, r4, lsl #10
   15098:	andeq	r5, r1, r0, asr #10
   1509c:	andeq	r5, r1, ip, ror r5
   150a0:			; <UNDEFINED> instruction: 0x000155b8
   150a4:	strdeq	r5, [r1], -r4
   150a8:	andeq	r5, r1, r8, lsr r6
   150ac:	movw	r1, #22660	; 0x5884
   150b0:	add	r2, sp, #8
   150b4:	mov	r0, r7
   150b8:	movt	r1, #1
   150bc:	bl	11f3c <__isoc99_sscanf@plt>
   150c0:	mov	r1, r0
   150c4:	mvn	r0, #0
   150c8:	cmp	r1, #1
   150cc:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   150d0:	ldr	r3, [sp, #8]
   150d4:	mov	r0, r6
   150d8:	mov	r1, r5
   150dc:	mov	r2, r4
   150e0:	bl	140a4 <table_set_int@@Base>
   150e4:	b	15670 <table_cell_from_buffer@@Base+0x658>
   150e8:	movw	r1, #22663	; 0x5887
   150ec:	add	r2, sp, #8
   150f0:	mov	r0, r7
   150f4:	movt	r1, #1
   150f8:	bl	11f3c <__isoc99_sscanf@plt>
   150fc:	mov	r1, r0
   15100:	mvn	r0, #0
   15104:	cmp	r1, #1
   15108:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   1510c:	ldr	r3, [sp, #8]
   15110:	mov	r0, r6
   15114:	mov	r1, r5
   15118:	mov	r2, r4
   1511c:	bl	14124 <table_set_uint@@Base>
   15120:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15124:	movw	r1, #22712	; 0x58b8
   15128:	add	r2, sp, #8
   1512c:	mov	r0, r7
   15130:	movt	r1, #1
   15134:	bl	11f3c <__isoc99_sscanf@plt>
   15138:	mov	r1, r0
   1513c:	mvn	r0, #0
   15140:	cmp	r1, #1
   15144:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15148:	ldrsb	r3, [sp, #8]
   1514c:	mov	r0, r6
   15150:	mov	r1, r5
   15154:	mov	r2, r4
   15158:	bl	141a4 <table_set_int8@@Base>
   1515c:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15160:	movw	r1, #22717	; 0x58bd
   15164:	add	r2, sp, #8
   15168:	mov	r0, r7
   1516c:	movt	r1, #1
   15170:	bl	11f3c <__isoc99_sscanf@plt>
   15174:	mov	r1, r0
   15178:	mvn	r0, #0
   1517c:	cmp	r1, #1
   15180:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15184:	ldrb	r3, [sp, #8]
   15188:	mov	r0, r6
   1518c:	mov	r1, r5
   15190:	mov	r2, r4
   15194:	bl	14224 <table_set_uint8@@Base>
   15198:	b	15670 <table_cell_from_buffer@@Base+0x658>
   1519c:	movw	r1, #22676	; 0x5894
   151a0:	add	r2, sp, #8
   151a4:	mov	r0, r7
   151a8:	movt	r1, #1
   151ac:	bl	11f3c <__isoc99_sscanf@plt>
   151b0:	mov	r1, r0
   151b4:	mvn	r0, #0
   151b8:	cmp	r1, #1
   151bc:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   151c0:	ldrsh	r3, [sp, #8]
   151c4:	mov	r0, r6
   151c8:	mov	r1, r5
   151cc:	mov	r2, r4
   151d0:	bl	142a4 <table_set_int16@@Base>
   151d4:	b	15670 <table_cell_from_buffer@@Base+0x658>
   151d8:	movw	r1, #22680	; 0x5898
   151dc:	add	r2, sp, #8
   151e0:	mov	r0, r7
   151e4:	movt	r1, #1
   151e8:	bl	11f3c <__isoc99_sscanf@plt>
   151ec:	mov	r1, r0
   151f0:	mvn	r0, #0
   151f4:	cmp	r1, #1
   151f8:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   151fc:	ldrh	r3, [sp, #8]
   15200:	mov	r0, r6
   15204:	mov	r1, r5
   15208:	mov	r2, r4
   1520c:	bl	14324 <table_set_uint16@@Base>
   15210:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15214:	movw	r1, #22660	; 0x5884
   15218:	add	r2, sp, #8
   1521c:	mov	r0, r7
   15220:	movt	r1, #1
   15224:	bl	11f3c <__isoc99_sscanf@plt>
   15228:	mov	r1, r0
   1522c:	mvn	r0, #0
   15230:	cmp	r1, #1
   15234:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15238:	ldr	r3, [sp, #8]
   1523c:	mov	r0, r6
   15240:	mov	r1, r5
   15244:	mov	r2, r4
   15248:	bl	143a4 <table_set_int32@@Base>
   1524c:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15250:	movw	r1, #22663	; 0x5887
   15254:	add	r2, sp, #8
   15258:	mov	r0, r7
   1525c:	movt	r1, #1
   15260:	bl	11f3c <__isoc99_sscanf@plt>
   15264:	mov	r1, r0
   15268:	mvn	r0, #0
   1526c:	cmp	r1, #1
   15270:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15274:	ldr	r3, [sp, #8]
   15278:	mov	r0, r6
   1527c:	mov	r1, r5
   15280:	mov	r2, r4
   15284:	bl	14424 <table_set_uint32@@Base>
   15288:	b	15670 <table_cell_from_buffer@@Base+0x658>
   1528c:	movw	r1, #22666	; 0x588a
   15290:	add	r2, sp, #8
   15294:	mov	r0, r7
   15298:	movt	r1, #1
   1529c:	bl	11f3c <__isoc99_sscanf@plt>
   152a0:	mov	r1, r0
   152a4:	mvn	r0, #0
   152a8:	cmp	r1, #1
   152ac:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   152b0:	ldr	r0, [sp, #8]
   152b4:	ldr	r1, [sp, #12]
   152b8:	mov	r2, r4
   152bc:	stm	sp, {r0, r1}
   152c0:	mov	r0, r6
   152c4:	mov	r1, r5
   152c8:	bl	144a4 <table_set_int64@@Base>
   152cc:	b	15670 <table_cell_from_buffer@@Base+0x658>
   152d0:	movw	r1, #22671	; 0x588f
   152d4:	add	r2, sp, #8
   152d8:	mov	r0, r7
   152dc:	movt	r1, #1
   152e0:	bl	11f3c <__isoc99_sscanf@plt>
   152e4:	mov	r1, r0
   152e8:	mvn	r0, #0
   152ec:	cmp	r1, #1
   152f0:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   152f4:	ldr	r0, [sp, #8]
   152f8:	ldr	r1, [sp, #12]
   152fc:	mov	r2, r4
   15300:	stm	sp, {r0, r1}
   15304:	mov	r0, r6
   15308:	mov	r1, r5
   1530c:	bl	1452c <table_set_uint64@@Base>
   15310:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15314:	movw	r1, #22676	; 0x5894
   15318:	add	r2, sp, #8
   1531c:	mov	r0, r7
   15320:	movt	r1, #1
   15324:	bl	11f3c <__isoc99_sscanf@plt>
   15328:	mov	r1, r0
   1532c:	mvn	r0, #0
   15330:	cmp	r1, #1
   15334:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15338:	ldrsh	r3, [sp, #8]
   1533c:	mov	r0, r6
   15340:	mov	r1, r5
   15344:	mov	r2, r4
   15348:	bl	145b4 <table_set_short@@Base>
   1534c:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15350:	movw	r1, #22680	; 0x5898
   15354:	add	r2, sp, #8
   15358:	mov	r0, r7
   1535c:	movt	r1, #1
   15360:	bl	11f3c <__isoc99_sscanf@plt>
   15364:	mov	r1, r0
   15368:	mvn	r0, #0
   1536c:	cmp	r1, #1
   15370:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15374:	ldrh	r3, [sp, #8]
   15378:	mov	r0, r6
   1537c:	mov	r1, r5
   15380:	mov	r2, r4
   15384:	bl	14634 <table_set_ushort@@Base>
   15388:	b	15670 <table_cell_from_buffer@@Base+0x658>
   1538c:	movw	r1, #22684	; 0x589c
   15390:	add	r2, sp, #8
   15394:	mov	r0, r7
   15398:	movt	r1, #1
   1539c:	bl	11f3c <__isoc99_sscanf@plt>
   153a0:	mov	r1, r0
   153a4:	mvn	r0, #0
   153a8:	cmp	r1, #1
   153ac:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   153b0:	ldr	r3, [sp, #8]
   153b4:	mov	r0, r6
   153b8:	mov	r1, r5
   153bc:	mov	r2, r4
   153c0:	bl	146b4 <table_set_long@@Base>
   153c4:	b	15670 <table_cell_from_buffer@@Base+0x658>
   153c8:	movw	r1, #22688	; 0x58a0
   153cc:	add	r2, sp, #8
   153d0:	mov	r0, r7
   153d4:	movt	r1, #1
   153d8:	bl	11f3c <__isoc99_sscanf@plt>
   153dc:	mov	r1, r0
   153e0:	mvn	r0, #0
   153e4:	cmp	r1, #1
   153e8:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   153ec:	ldr	r3, [sp, #8]
   153f0:	mov	r0, r6
   153f4:	mov	r1, r5
   153f8:	mov	r2, r4
   153fc:	bl	14734 <table_set_ulong@@Base>
   15400:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15404:	movw	r1, #22666	; 0x588a
   15408:	add	r2, sp, #8
   1540c:	mov	r0, r7
   15410:	movt	r1, #1
   15414:	bl	11f3c <__isoc99_sscanf@plt>
   15418:	mov	r1, r0
   1541c:	mvn	r0, #0
   15420:	cmp	r1, #1
   15424:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15428:	ldr	r0, [sp, #8]
   1542c:	ldr	r1, [sp, #12]
   15430:	mov	r2, r4
   15434:	stm	sp, {r0, r1}
   15438:	mov	r0, r6
   1543c:	mov	r1, r5
   15440:	bl	147b4 <table_set_llong@@Base>
   15444:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15448:	movw	r1, #22671	; 0x588f
   1544c:	add	r2, sp, #8
   15450:	mov	r0, r7
   15454:	movt	r1, #1
   15458:	bl	11f3c <__isoc99_sscanf@plt>
   1545c:	mov	r1, r0
   15460:	mvn	r0, #0
   15464:	cmp	r1, #1
   15468:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   1546c:	ldr	r0, [sp, #8]
   15470:	ldr	r1, [sp, #12]
   15474:	mov	r2, r4
   15478:	stm	sp, {r0, r1}
   1547c:	mov	r0, r6
   15480:	mov	r1, r5
   15484:	bl	1483c <table_set_ullong@@Base>
   15488:	b	15670 <table_cell_from_buffer@@Base+0x658>
   1548c:	movw	r1, #22695	; 0x58a7
   15490:	add	r2, sp, #8
   15494:	mov	r0, r7
   15498:	movt	r1, #1
   1549c:	bl	11f3c <__isoc99_sscanf@plt>
   154a0:	mov	r1, r0
   154a4:	mvn	r0, #0
   154a8:	cmp	r1, #1
   154ac:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   154b0:	vldr	s0, [sp, #8]
   154b4:	mov	r0, r6
   154b8:	mov	r1, r5
   154bc:	mov	r2, r4
   154c0:	bl	148c4 <table_set_float@@Base>
   154c4:	b	15670 <table_cell_from_buffer@@Base+0x658>
   154c8:	movw	r1, #22698	; 0x58aa
   154cc:	add	r2, sp, #8
   154d0:	mov	r0, r7
   154d4:	movt	r1, #1
   154d8:	bl	11f3c <__isoc99_sscanf@plt>
   154dc:	mov	r1, r0
   154e0:	mvn	r0, #0
   154e4:	cmp	r1, #1
   154e8:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   154ec:	vldr	d0, [sp, #8]
   154f0:	mov	r0, r6
   154f4:	mov	r1, r5
   154f8:	mov	r2, r4
   154fc:	bl	14950 <table_set_double@@Base>
   15500:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15504:	movw	r1, #22702	; 0x58ae
   15508:	add	r2, sp, #8
   1550c:	mov	r0, r7
   15510:	movt	r1, #1
   15514:	bl	11f3c <__isoc99_sscanf@plt>
   15518:	mov	r1, r0
   1551c:	mvn	r0, #0
   15520:	cmp	r1, #1
   15524:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15528:	vldr	d0, [sp, #8]
   1552c:	mov	r0, r6
   15530:	mov	r1, r5
   15534:	mov	r2, r4
   15538:	bl	149d8 <table_set_ldouble@@Base>
   1553c:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15540:	movw	r1, #22706	; 0x58b2
   15544:	add	r2, sp, #8
   15548:	mov	r0, r7
   1554c:	movt	r1, #1
   15550:	bl	11f3c <__isoc99_sscanf@plt>
   15554:	mov	r1, r0
   15558:	mvn	r0, #0
   1555c:	cmp	r1, #1
   15560:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15564:	ldrb	r3, [sp, #8]
   15568:	mov	r0, r6
   1556c:	mov	r1, r5
   15570:	mov	r2, r4
   15574:	bl	14ae8 <table_set_char@@Base>
   15578:	b	15670 <table_cell_from_buffer@@Base+0x658>
   1557c:	movw	r1, #22706	; 0x58b2
   15580:	add	r2, sp, #8
   15584:	mov	r0, r7
   15588:	movt	r1, #1
   1558c:	bl	11f3c <__isoc99_sscanf@plt>
   15590:	mov	r1, r0
   15594:	mvn	r0, #0
   15598:	cmp	r1, #1
   1559c:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   155a0:	ldrb	r3, [sp, #8]
   155a4:	mov	r0, r6
   155a8:	mov	r1, r5
   155ac:	mov	r2, r4
   155b0:	bl	14b68 <table_set_uchar@@Base>
   155b4:	b	15670 <table_cell_from_buffer@@Base+0x658>
   155b8:	movw	r1, #22692	; 0x58a4
   155bc:	add	r2, sp, #8
   155c0:	mov	r0, r7
   155c4:	movt	r1, #1
   155c8:	bl	11f3c <__isoc99_sscanf@plt>
   155cc:	mov	r1, r0
   155d0:	mvn	r0, #0
   155d4:	cmp	r1, #1
   155d8:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   155dc:	add	r3, sp, #8
   155e0:	mov	r0, r6
   155e4:	mov	r1, r5
   155e8:	mov	r2, r4
   155ec:	bl	14a60 <table_set_string@@Base>
   155f0:	b	15670 <table_cell_from_buffer@@Base+0x658>
   155f4:	movw	r1, #22660	; 0x5884
   155f8:	add	r2, sp, #8
   155fc:	mov	r0, r7
   15600:	movt	r1, #1
   15604:	bl	11f3c <__isoc99_sscanf@plt>
   15608:	mov	r1, r0
   1560c:	mvn	r0, #0
   15610:	cmp	r1, #1
   15614:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   15618:	ldr	r3, [sp, #8]
   1561c:	mov	r0, r6
   15620:	mov	r1, r5
   15624:	mov	r2, r4
   15628:	cmp	r3, #0
   1562c:	movwne	r3, #1
   15630:	bl	14024 <table_set_bool@@Base>
   15634:	b	15670 <table_cell_from_buffer@@Base+0x658>
   15638:	movw	r1, #22709	; 0x58b5
   1563c:	add	r2, sp, #8
   15640:	mov	r0, r7
   15644:	movt	r1, #1
   15648:	bl	11f3c <__isoc99_sscanf@plt>
   1564c:	mov	r1, r0
   15650:	mvn	r0, #0
   15654:	cmp	r1, #1
   15658:	bne	15674 <table_cell_from_buffer@@Base+0x65c>
   1565c:	ldr	r3, [sp, #8]
   15660:	mov	r0, r6
   15664:	mov	r1, r5
   15668:	mov	r2, r4
   1566c:	bl	14be8 <table_set_ptr@@Base>
   15670:	mov	r0, #0
   15674:	sub	sp, fp, #24
   15678:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001567c <table_cell_nullify@@Base>:
   1567c:	push	{r4, r5, fp, lr}
   15680:	add	fp, sp, #8
   15684:	mov	r4, r2
   15688:	bl	13a88 <table_get_row_ptr@@Base>
   1568c:	ldr	r5, [r0]
   15690:	ldr	r0, [r5, r4, lsl #2]
   15694:	cmp	r0, #0
   15698:	beq	156a8 <table_cell_nullify@@Base+0x2c>
   1569c:	bl	11ed0 <free@plt>
   156a0:	mov	r0, #0
   156a4:	str	r0, [r5, r4, lsl #2]
   156a8:	mov	r0, #0
   156ac:	pop	{r4, r5, fp, pc}

000156b0 <__libc_csu_init@@Base>:
   156b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156b4:	mov	r7, r0
   156b8:	ldr	r6, [pc, #72]	; 15708 <__libc_csu_init@@Base+0x58>
   156bc:	ldr	r5, [pc, #72]	; 1570c <__libc_csu_init@@Base+0x5c>
   156c0:	add	r6, pc, r6
   156c4:	add	r5, pc, r5
   156c8:	sub	r6, r6, r5
   156cc:	mov	r8, r1
   156d0:	mov	r9, r2
   156d4:	bl	11e98 <strcmp@plt-0x20>
   156d8:	asrs	r6, r6, #2
   156dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   156e0:	mov	r4, #0
   156e4:	add	r4, r4, #1
   156e8:	ldr	r3, [r5], #4
   156ec:	mov	r2, r9
   156f0:	mov	r1, r8
   156f4:	mov	r0, r7
   156f8:	blx	r3
   156fc:	cmp	r6, r4
   15700:	bne	156e4 <__libc_csu_init@@Base+0x34>
   15704:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15708:	andeq	r0, r1, r4, asr #16
   1570c:	andeq	r0, r1, ip, lsr r8

00015710 <__libc_csu_fini@@Base>:
   15710:	bx	lr

Disassembly of section .fini:

00015714 <.fini>:
   15714:	push	{r3, lr}
   15718:	pop	{r3, pc}
