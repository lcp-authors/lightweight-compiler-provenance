
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011f9c <.init>:
   11f9c:	push	{r3, lr}
   11fa0:	bl	120ac <_start@@Base+0x3c>
   11fa4:	pop	{r3, pc}

Disassembly of section .plt:

00011fa8 <strcmp@plt-0x14>:
   11fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   11fac:	ldr	lr, [pc, #4]	; 11fb8 <strcmp@plt-0x4>
   11fb0:	add	lr, pc, lr
   11fb4:	ldr	pc, [lr, #8]!
   11fb8:	andeq	r4, r1, r8, asr #32

00011fbc <strcmp@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #72]!	; 0x48

00011fc8 <printf@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #64]!	; 0x40

00011fd4 <free@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #56]!	; 0x38

00011fe0 <time@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #48]!	; 0x30

00011fec <realloc@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #40]!	; 0x28

00011ff8 <strcpy@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #32]!

00012004 <malloc@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #24]!

00012010 <__libc_start_main@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #16]!

0001201c <__gmon_start__@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #8]!

00012028 <strlen@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #0]!

00012034 <srand@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #77824	; 0x13000
   1203c:	ldr	pc, [ip, #4088]!	; 0xff8

00012040 <snprintf@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #77824	; 0x13000
   12048:	ldr	pc, [ip, #4080]!	; 0xff0

0001204c <__isoc99_sscanf@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #77824	; 0x13000
   12054:	ldr	pc, [ip, #4072]!	; 0xfe8

00012058 <rand@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #77824	; 0x13000
   12060:	ldr	pc, [ip, #4064]!	; 0xfe0

00012064 <abort@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #77824	; 0x13000
   1206c:	ldr	pc, [ip, #4056]!	; 0xfd8

Disassembly of section .text:

00012070 <_start@@Base>:
   12070:	mov	fp, #0
   12074:	mov	lr, #0
   12078:	pop	{r1}		; (ldr r1, [sp], #4)
   1207c:	mov	r2, sp
   12080:	push	{r2}		; (str r2, [sp, #-4]!)
   12084:	push	{r0}		; (str r0, [sp, #-4]!)
   12088:	ldr	ip, [pc, #16]	; 120a0 <_start@@Base+0x30>
   1208c:	push	{ip}		; (str ip, [sp, #-4]!)
   12090:	ldr	r0, [pc, #12]	; 120a4 <_start@@Base+0x34>
   12094:	ldr	r3, [pc, #12]	; 120a8 <_start@@Base+0x38>
   12098:	bl	12010 <__libc_start_main@plt>
   1209c:	bl	12064 <abort@plt>
   120a0:	andeq	r5, r1, r4, ror #18
   120a4:	andeq	r2, r1, r0, ror #2
   120a8:	andeq	r5, r1, r4, lsl #18
   120ac:	ldr	r3, [pc, #20]	; 120c8 <_start@@Base+0x58>
   120b0:	ldr	r2, [pc, #20]	; 120cc <_start@@Base+0x5c>
   120b4:	add	r3, pc, r3
   120b8:	ldr	r2, [r3, r2]
   120bc:	cmp	r2, #0
   120c0:	bxeq	lr
   120c4:	b	1201c <__gmon_start__@plt>
   120c8:	andeq	r3, r1, r4, asr #30
   120cc:	andeq	r0, r0, r8, asr #32
   120d0:	ldr	r0, [pc, #24]	; 120f0 <_start@@Base+0x80>
   120d4:	ldr	r3, [pc, #24]	; 120f4 <_start@@Base+0x84>
   120d8:	cmp	r3, r0
   120dc:	bxeq	lr
   120e0:	ldr	r3, [pc, #16]	; 120f8 <_start@@Base+0x88>
   120e4:	cmp	r3, #0
   120e8:	bxeq	lr
   120ec:	bx	r3
   120f0:	andeq	r6, r2, r4, asr r0
   120f4:	andeq	r6, r2, r4, asr r0
   120f8:	andeq	r0, r0, r0
   120fc:	ldr	r0, [pc, #36]	; 12128 <_start@@Base+0xb8>
   12100:	ldr	r1, [pc, #36]	; 1212c <_start@@Base+0xbc>
   12104:	sub	r1, r1, r0
   12108:	asr	r1, r1, #2
   1210c:	add	r1, r1, r1, lsr #31
   12110:	asrs	r1, r1, #1
   12114:	bxeq	lr
   12118:	ldr	r3, [pc, #16]	; 12130 <_start@@Base+0xc0>
   1211c:	cmp	r3, #0
   12120:	bxeq	lr
   12124:	bx	r3
   12128:	andeq	r6, r2, r4, asr r0
   1212c:	andeq	r6, r2, r4, asr r0
   12130:	andeq	r0, r0, r0
   12134:	push	{r4, lr}
   12138:	ldr	r4, [pc, #24]	; 12158 <_start@@Base+0xe8>
   1213c:	ldrb	r3, [r4]
   12140:	cmp	r3, #0
   12144:	popne	{r4, pc}
   12148:	bl	120d0 <_start@@Base+0x60>
   1214c:	mov	r3, #1
   12150:	strb	r3, [r4]
   12154:	pop	{r4, pc}
   12158:	andeq	r6, r2, r4, asr r0
   1215c:	b	120fc <_start@@Base+0x8c>

00012160 <main@@Base>:
   12160:	push	{r4, r5, r6, r7, fp, lr}
   12164:	add	fp, sp, #16
   12168:	sub	sp, sp, #64	; 0x40
   1216c:	add	r4, sp, #4
   12170:	mov	r0, r4
   12174:	bl	11fe0 <time@plt>
   12178:	bl	12034 <srand@plt>
   1217c:	bl	12058 <rand@plt>
   12180:	mov	r5, r0
   12184:	mov	r0, r4
   12188:	bl	11fe0 <time@plt>
   1218c:	bl	12034 <srand@plt>
   12190:	bl	12058 <rand@plt>
   12194:	add	r4, sp, #8
   12198:	mov	r6, r0
   1219c:	mov	r0, r4
   121a0:	bl	1233c <table_init@@Base>
   121a4:	mov	r0, r4
   121a8:	mov	r1, r5
   121ac:	bl	14dd0 <table_row_is_valid@@Base>
   121b0:	cmp	r0, #0
   121b4:	beq	121d0 <main@@Base+0x70>
   121b8:	movw	r0, #22900	; 0x5974
   121bc:	mov	r1, r5
   121c0:	movt	r0, #1
   121c4:	bl	11fc8 <printf@plt>
   121c8:	mvn	r4, #0
   121cc:	b	121d4 <main@@Base+0x74>
   121d0:	mov	r4, #0
   121d4:	add	r0, sp, #8
   121d8:	mov	r1, r6
   121dc:	bl	14d94 <table_column_is_valid@@Base>
   121e0:	cmp	r0, #0
   121e4:	beq	121fc <main@@Base+0x9c>
   121e8:	movw	r0, #22927	; 0x598f
   121ec:	mov	r1, r6
   121f0:	movt	r0, #1
   121f4:	bl	11fc8 <printf@plt>
   121f8:	mvn	r4, #0
   121fc:	add	r0, sp, #8
   12200:	mov	r1, r5
   12204:	mov	r2, r6
   12208:	bl	14e0c <table_cell_is_valid@@Base>
   1220c:	cmp	r0, #0
   12210:	beq	1222c <main@@Base+0xcc>
   12214:	movw	r0, #22957	; 0x59ad
   12218:	mov	r1, r5
   1221c:	mov	r2, r6
   12220:	movt	r0, #1
   12224:	bl	11fc8 <printf@plt>
   12228:	mvn	r4, #0
   1222c:	add	r6, sp, #8
   12230:	mov	r0, r6
   12234:	bl	13c48 <table_add_row@@Base>
   12238:	mov	r5, r0
   1223c:	mov	r0, r6
   12240:	mov	r1, r5
   12244:	bl	14dd0 <table_row_is_valid@@Base>
   12248:	cmp	r0, #0
   1224c:	bne	12264 <main@@Base+0x104>
   12250:	movw	r0, #22989	; 0x59cd
   12254:	mov	r1, r5
   12258:	movt	r0, #1
   1225c:	bl	11fc8 <printf@plt>
   12260:	mvn	r4, #0
   12264:	movw	r1, #23063	; 0x5a17
   12268:	add	r7, sp, #8
   1226c:	mov	r2, #0
   12270:	movt	r1, #1
   12274:	mov	r0, r7
   12278:	bl	12f00 <table_add_column@@Base>
   1227c:	mov	r6, r0
   12280:	mov	r0, r7
   12284:	mov	r1, r6
   12288:	bl	14d94 <table_column_is_valid@@Base>
   1228c:	cmp	r0, #0
   12290:	bne	122a8 <main@@Base+0x148>
   12294:	movw	r0, #23012	; 0x59e4
   12298:	mov	r1, r6
   1229c:	movt	r0, #1
   122a0:	bl	11fc8 <printf@plt>
   122a4:	mvn	r4, #0
   122a8:	add	r0, sp, #8
   122ac:	mov	r1, r5
   122b0:	mov	r2, r6
   122b4:	bl	14e0c <table_cell_is_valid@@Base>
   122b8:	cmp	r0, #0
   122bc:	bne	122d8 <main@@Base+0x178>
   122c0:	movw	r0, #23038	; 0x59fe
   122c4:	mov	r1, r5
   122c8:	mov	r2, r6
   122cc:	movt	r0, #1
   122d0:	bl	11fc8 <printf@plt>
   122d4:	mvn	r4, #0
   122d8:	add	r0, sp, #8
   122dc:	bl	12398 <table_destroy@@Base>
   122e0:	mov	r0, r4
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, r7, fp, pc}

000122ec <table_new@@Base>:
   122ec:	push	{fp, lr}
   122f0:	mov	fp, sp
   122f4:	mov	r0, #56	; 0x38
   122f8:	bl	12004 <malloc@plt>
   122fc:	vmov.i32	q8, #0	; 0x00000000
   12300:	mov	r1, #0
   12304:	mov	r2, #10
   12308:	mov	r3, #20
   1230c:	str	r1, [r0]
   12310:	stmib	r0, {r1, r2}
   12314:	str	r1, [r0, #12]
   12318:	str	r1, [r0, #16]
   1231c:	str	r1, [r0, #20]
   12320:	str	r3, [r0, #24]
   12324:	str	r1, [r0, #28]
   12328:	str	r2, [r0, #48]	; 0x30
   1232c:	str	r1, [r0, #52]	; 0x34
   12330:	add	r1, r0, #32
   12334:	vst1.32	{d16-d17}, [r1]
   12338:	pop	{fp, pc}

0001233c <table_init@@Base>:
   1233c:	vmov.i32	q8, #0	; 0x00000000
   12340:	mov	r1, #0
   12344:	mov	r2, #10
   12348:	mov	r3, #20
   1234c:	str	r1, [r0]
   12350:	stmib	r0, {r1, r2}
   12354:	str	r1, [r0, #12]
   12358:	str	r1, [r0, #16]
   1235c:	str	r1, [r0, #20]
   12360:	str	r3, [r0, #24]
   12364:	str	r1, [r0, #28]
   12368:	str	r2, [r0, #48]	; 0x30
   1236c:	str	r1, [r0, #52]	; 0x34
   12370:	add	r0, r0, #32
   12374:	vst1.32	{d16-d17}, [r0]
   12378:	bx	lr

0001237c <table_delete@@Base>:
   1237c:	push	{r4, sl, fp, lr}
   12380:	add	fp, sp, #8
   12384:	mov	r4, r0
   12388:	bl	12398 <table_destroy@@Base>
   1238c:	mov	r0, r4
   12390:	pop	{r4, sl, fp, lr}
   12394:	b	11fd4 <free@plt>

00012398 <table_destroy@@Base>:
   12398:	cmp	r0, #0
   1239c:	bxeq	lr
   123a0:	push	{r4, r5, r6, sl, fp, lr}
   123a4:	add	fp, sp, #16
   123a8:	mvn	r1, #0
   123ac:	mvn	r2, #0
   123b0:	mov	r3, #64	; 0x40
   123b4:	mov	r4, r0
   123b8:	bl	12d58 <table_notify@@Base>
   123bc:	mov	r0, r4
   123c0:	bl	13c40 <table_get_row_length@@Base>
   123c4:	cmp	r0, #1
   123c8:	blt	123ec <table_destroy@@Base+0x54>
   123cc:	mov	r5, r0
   123d0:	mov	r6, #0
   123d4:	mov	r0, r4
   123d8:	mov	r1, r6
   123dc:	bl	13be4 <table_row_destroy@@Base>
   123e0:	add	r6, r6, #1
   123e4:	cmp	r5, r6
   123e8:	bne	123d4 <table_destroy@@Base+0x3c>
   123ec:	ldr	r0, [r4, #16]
   123f0:	cmp	r0, #0
   123f4:	beq	123fc <table_destroy@@Base+0x64>
   123f8:	bl	11fd4 <free@plt>
   123fc:	mov	r0, r4
   12400:	bl	12e68 <table_get_column_length@@Base>
   12404:	cmp	r0, #1
   12408:	blt	1242c <table_destroy@@Base+0x94>
   1240c:	mov	r5, r0
   12410:	mov	r6, #0
   12414:	mov	r0, r4
   12418:	mov	r1, r6
   1241c:	bl	12e50 <table_column_destroy@@Base>
   12420:	add	r6, r6, #1
   12424:	cmp	r5, r6
   12428:	bne	12414 <table_destroy@@Base+0x7c>
   1242c:	ldr	r0, [r4]
   12430:	cmp	r0, #0
   12434:	beq	1243c <table_destroy@@Base+0xa4>
   12438:	bl	11fd4 <free@plt>
   1243c:	ldr	r0, [r4, #36]	; 0x24
   12440:	cmp	r0, #0
   12444:	beq	1244c <table_destroy@@Base+0xb4>
   12448:	bl	11fd4 <free@plt>
   1244c:	ldr	r0, [r4, #40]	; 0x28
   12450:	cmp	r0, #0
   12454:	beq	1245c <table_destroy@@Base+0xc4>
   12458:	bl	11fd4 <free@plt>
   1245c:	ldr	r0, [r4, #44]	; 0x2c
   12460:	cmp	r0, #0
   12464:	pop	{r4, r5, r6, sl, fp, lr}
   12468:	beq	12470 <table_destroy@@Base+0xd8>
   1246c:	b	11fd4 <free@plt>
   12470:	bx	lr

00012474 <table_dupe@@Base>:
   12474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12478:	add	fp, sp, #28
   1247c:	sub	sp, sp, #12
   12480:	mov	r4, r0
   12484:	bl	13c40 <table_get_row_length@@Base>
   12488:	mov	r8, r0
   1248c:	mov	r0, r4
   12490:	bl	12e68 <table_get_column_length@@Base>
   12494:	mov	r6, r0
   12498:	mov	r0, #56	; 0x38
   1249c:	bl	12004 <malloc@plt>
   124a0:	vmov.i32	q8, #0	; 0x00000000
   124a4:	mov	sl, r0
   124a8:	mov	r5, #0
   124ac:	mov	r0, #10
   124b0:	mov	r1, #20
   124b4:	cmp	r6, #1
   124b8:	str	r5, [sl]
   124bc:	str	r5, [sl, #4]
   124c0:	str	r0, [sl, #8]
   124c4:	str	r5, [sl, #12]
   124c8:	str	r5, [sl, #16]
   124cc:	str	r5, [sl, #20]
   124d0:	str	r1, [sl, #24]
   124d4:	str	r5, [sl, #28]
   124d8:	str	r0, [sl, #48]	; 0x30
   124dc:	add	r0, sl, #32
   124e0:	str	r5, [sl, #52]	; 0x34
   124e4:	vst1.32	{d16-d17}, [r0]
   124e8:	blt	12524 <table_dupe@@Base+0xb0>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	bl	12edc <table_get_column_name@@Base>
   124f8:	mov	r7, r0
   124fc:	mov	r0, r4
   12500:	mov	r1, r5
   12504:	bl	12eec <table_get_column_data_type@@Base>
   12508:	mov	r2, r0
   1250c:	mov	r0, sl
   12510:	mov	r1, r7
   12514:	bl	12f00 <table_add_column@@Base>
   12518:	add	r5, r5, #1
   1251c:	cmp	r6, r5
   12520:	bne	124ec <table_dupe@@Base+0x78>
   12524:	cmp	r8, #1
   12528:	blt	12ab8 <table_dupe@@Base+0x644>
   1252c:	mov	r5, #0
   12530:	add	r9, sp, #8
   12534:	mov	r0, sl
   12538:	bl	13c48 <table_add_row@@Base>
   1253c:	cmp	r6, #1
   12540:	bge	12560 <table_dupe@@Base+0xec>
   12544:	add	r5, r5, #1
   12548:	cmp	r5, r8
   1254c:	beq	12ab8 <table_dupe@@Base+0x644>
   12550:	mov	r0, sl
   12554:	bl	13c48 <table_add_row@@Base>
   12558:	cmp	r6, #1
   1255c:	blt	12544 <table_dupe@@Base+0xd0>
   12560:	mov	r7, #0
   12564:	b	1259c <table_dupe@@Base+0x128>
   12568:	mov	r0, r4
   1256c:	mov	r1, r5
   12570:	mov	r2, r7
   12574:	bl	13ba0 <table_get_ptr@@Base>
   12578:	str	r0, [sp, #8]
   1257c:	mov	r0, sl
   12580:	mov	r1, r5
   12584:	mov	r2, r7
   12588:	mov	r3, r9
   1258c:	bl	14d38 <table_set_ptr@@Base>
   12590:	add	r7, r7, #1
   12594:	cmp	r6, r7
   12598:	beq	12544 <table_dupe@@Base+0xd0>
   1259c:	mov	r0, r4
   125a0:	mov	r1, r7
   125a4:	bl	12eec <table_get_column_data_type@@Base>
   125a8:	cmp	r0, #23
   125ac:	bhi	12590 <table_dupe@@Base+0x11c>
   125b0:	add	r1, pc, #0
   125b4:	ldr	pc, [r1, r0, lsl #2]
   125b8:	andeq	r2, r1, r8, lsl r6
   125bc:	andeq	r2, r1, ip, asr #12
   125c0:	andeq	r2, r1, r0, lsl #13
   125c4:			; <UNDEFINED> instruction: 0x000126b4
   125c8:	andeq	r2, r1, r8, ror #13
   125cc:	andeq	r2, r1, ip, lsl r7
   125d0:	andeq	r2, r1, r0, asr r7
   125d4:	andeq	r2, r1, r4, lsl #15
   125d8:			; <UNDEFINED> instruction: 0x000127b8
   125dc:	andeq	r2, r1, ip, ror #15
   125e0:	andeq	r2, r1, r0, lsr #16
   125e4:	andeq	r2, r1, r4, asr r8
   125e8:	andeq	r2, r1, r8, lsl #17
   125ec:			; <UNDEFINED> instruction: 0x000128bc
   125f0:	strdeq	r2, [r1], -r0
   125f4:	andeq	r2, r1, r4, lsr #18
   125f8:	andeq	r2, r1, r8, asr r9
   125fc:	andeq	r2, r1, r8, lsl #19
   12600:			; <UNDEFINED> instruction: 0x000129b8
   12604:	andeq	r2, r1, r8, ror #19
   12608:	andeq	r2, r1, ip, lsl sl
   1260c:	andeq	r2, r1, r0, asr sl
   12610:	andeq	r2, r1, r4, lsl #21
   12614:	andeq	r2, r1, r8, ror #10
   12618:	mov	r0, r4
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	13994 <table_get_int@@Base>
   12628:	mov	r3, r0
   1262c:	mov	r0, sl
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	141f4 <table_set_int@@Base>
   1263c:	add	r7, r7, #1
   12640:	cmp	r6, r7
   12644:	bne	1259c <table_dupe@@Base+0x128>
   12648:	b	12544 <table_dupe@@Base+0xd0>
   1264c:	mov	r0, r4
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	139ac <table_get_uint@@Base>
   1265c:	mov	r3, r0
   12660:	mov	r0, sl
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	14274 <table_set_uint@@Base>
   12670:	add	r7, r7, #1
   12674:	cmp	r6, r7
   12678:	bne	1259c <table_dupe@@Base+0x128>
   1267c:	b	12544 <table_dupe@@Base+0xd0>
   12680:	mov	r0, r4
   12684:	mov	r1, r5
   12688:	mov	r2, r7
   1268c:	bl	139c4 <table_get_int8@@Base>
   12690:	mov	r3, r0
   12694:	mov	r0, sl
   12698:	mov	r1, r5
   1269c:	mov	r2, r7
   126a0:	bl	142f4 <table_set_int8@@Base>
   126a4:	add	r7, r7, #1
   126a8:	cmp	r6, r7
   126ac:	bne	1259c <table_dupe@@Base+0x128>
   126b0:	b	12544 <table_dupe@@Base+0xd0>
   126b4:	mov	r0, r4
   126b8:	mov	r1, r5
   126bc:	mov	r2, r7
   126c0:	bl	139dc <table_get_uint8@@Base>
   126c4:	mov	r3, r0
   126c8:	mov	r0, sl
   126cc:	mov	r1, r5
   126d0:	mov	r2, r7
   126d4:	bl	14374 <table_set_uint8@@Base>
   126d8:	add	r7, r7, #1
   126dc:	cmp	r6, r7
   126e0:	bne	1259c <table_dupe@@Base+0x128>
   126e4:	b	12544 <table_dupe@@Base+0xd0>
   126e8:	mov	r0, r4
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	bl	139f4 <table_get_int16@@Base>
   126f8:	mov	r3, r0
   126fc:	mov	r0, sl
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	bl	143f4 <table_set_int16@@Base>
   1270c:	add	r7, r7, #1
   12710:	cmp	r6, r7
   12714:	bne	1259c <table_dupe@@Base+0x128>
   12718:	b	12544 <table_dupe@@Base+0xd0>
   1271c:	mov	r0, r4
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	13a0c <table_get_uint16@@Base>
   1272c:	mov	r3, r0
   12730:	mov	r0, sl
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	14474 <table_set_uint16@@Base>
   12740:	add	r7, r7, #1
   12744:	cmp	r6, r7
   12748:	bne	1259c <table_dupe@@Base+0x128>
   1274c:	b	12544 <table_dupe@@Base+0xd0>
   12750:	mov	r0, r4
   12754:	mov	r1, r5
   12758:	mov	r2, r7
   1275c:	bl	13a24 <table_get_int32@@Base>
   12760:	mov	r3, r0
   12764:	mov	r0, sl
   12768:	mov	r1, r5
   1276c:	mov	r2, r7
   12770:	bl	144f4 <table_set_int32@@Base>
   12774:	add	r7, r7, #1
   12778:	cmp	r6, r7
   1277c:	bne	1259c <table_dupe@@Base+0x128>
   12780:	b	12544 <table_dupe@@Base+0xd0>
   12784:	mov	r0, r4
   12788:	mov	r1, r5
   1278c:	mov	r2, r7
   12790:	bl	13a3c <table_get_uint32@@Base>
   12794:	mov	r3, r0
   12798:	mov	r0, sl
   1279c:	mov	r1, r5
   127a0:	mov	r2, r7
   127a4:	bl	14574 <table_set_uint32@@Base>
   127a8:	add	r7, r7, #1
   127ac:	cmp	r6, r7
   127b0:	bne	1259c <table_dupe@@Base+0x128>
   127b4:	b	12544 <table_dupe@@Base+0xd0>
   127b8:	mov	r0, r4
   127bc:	mov	r1, r5
   127c0:	mov	r2, r7
   127c4:	bl	13a54 <table_get_int64@@Base>
   127c8:	stm	sp, {r0, r1}
   127cc:	mov	r0, sl
   127d0:	mov	r1, r5
   127d4:	mov	r2, r7
   127d8:	bl	145f4 <table_set_int64@@Base>
   127dc:	add	r7, r7, #1
   127e0:	cmp	r6, r7
   127e4:	bne	1259c <table_dupe@@Base+0x128>
   127e8:	b	12544 <table_dupe@@Base+0xd0>
   127ec:	mov	r0, r4
   127f0:	mov	r1, r5
   127f4:	mov	r2, r7
   127f8:	bl	13a6c <table_get_uint64@@Base>
   127fc:	stm	sp, {r0, r1}
   12800:	mov	r0, sl
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	1467c <table_set_uint64@@Base>
   12810:	add	r7, r7, #1
   12814:	cmp	r6, r7
   12818:	bne	1259c <table_dupe@@Base+0x128>
   1281c:	b	12544 <table_dupe@@Base+0xd0>
   12820:	mov	r0, r4
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	bl	13a84 <table_get_short@@Base>
   12830:	mov	r3, r0
   12834:	mov	r0, sl
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	14704 <table_set_short@@Base>
   12844:	add	r7, r7, #1
   12848:	cmp	r6, r7
   1284c:	bne	1259c <table_dupe@@Base+0x128>
   12850:	b	12544 <table_dupe@@Base+0xd0>
   12854:	mov	r0, r4
   12858:	mov	r1, r5
   1285c:	mov	r2, r7
   12860:	bl	13a9c <table_get_ushort@@Base>
   12864:	mov	r3, r0
   12868:	mov	r0, sl
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	14784 <table_set_ushort@@Base>
   12878:	add	r7, r7, #1
   1287c:	cmp	r6, r7
   12880:	bne	1259c <table_dupe@@Base+0x128>
   12884:	b	12544 <table_dupe@@Base+0xd0>
   12888:	mov	r0, r4
   1288c:	mov	r1, r5
   12890:	mov	r2, r7
   12894:	bl	13ab4 <table_get_long@@Base>
   12898:	mov	r3, r0
   1289c:	mov	r0, sl
   128a0:	mov	r1, r5
   128a4:	mov	r2, r7
   128a8:	bl	14804 <table_set_long@@Base>
   128ac:	add	r7, r7, #1
   128b0:	cmp	r6, r7
   128b4:	bne	1259c <table_dupe@@Base+0x128>
   128b8:	b	12544 <table_dupe@@Base+0xd0>
   128bc:	mov	r0, r4
   128c0:	mov	r1, r5
   128c4:	mov	r2, r7
   128c8:	bl	13acc <table_get_ulong@@Base>
   128cc:	mov	r3, r0
   128d0:	mov	r0, sl
   128d4:	mov	r1, r5
   128d8:	mov	r2, r7
   128dc:	bl	14884 <table_set_ulong@@Base>
   128e0:	add	r7, r7, #1
   128e4:	cmp	r6, r7
   128e8:	bne	1259c <table_dupe@@Base+0x128>
   128ec:	b	12544 <table_dupe@@Base+0xd0>
   128f0:	mov	r0, r4
   128f4:	mov	r1, r5
   128f8:	mov	r2, r7
   128fc:	bl	13ae4 <table_get_llong@@Base>
   12900:	stm	sp, {r0, r1}
   12904:	mov	r0, sl
   12908:	mov	r1, r5
   1290c:	mov	r2, r7
   12910:	bl	14904 <table_set_llong@@Base>
   12914:	add	r7, r7, #1
   12918:	cmp	r6, r7
   1291c:	bne	1259c <table_dupe@@Base+0x128>
   12920:	b	12544 <table_dupe@@Base+0xd0>
   12924:	mov	r0, r4
   12928:	mov	r1, r5
   1292c:	mov	r2, r7
   12930:	bl	13afc <table_get_ullong@@Base>
   12934:	stm	sp, {r0, r1}
   12938:	mov	r0, sl
   1293c:	mov	r1, r5
   12940:	mov	r2, r7
   12944:	bl	1498c <table_set_ullong@@Base>
   12948:	add	r7, r7, #1
   1294c:	cmp	r6, r7
   12950:	bne	1259c <table_dupe@@Base+0x128>
   12954:	b	12544 <table_dupe@@Base+0xd0>
   12958:	mov	r0, r4
   1295c:	mov	r1, r5
   12960:	mov	r2, r7
   12964:	bl	13b14 <table_get_float@@Base>
   12968:	mov	r0, sl
   1296c:	mov	r1, r5
   12970:	mov	r2, r7
   12974:	bl	14a14 <table_set_float@@Base>
   12978:	add	r7, r7, #1
   1297c:	cmp	r6, r7
   12980:	bne	1259c <table_dupe@@Base+0x128>
   12984:	b	12544 <table_dupe@@Base+0xd0>
   12988:	mov	r0, r4
   1298c:	mov	r1, r5
   12990:	mov	r2, r7
   12994:	bl	13b2c <table_get_double@@Base>
   12998:	mov	r0, sl
   1299c:	mov	r1, r5
   129a0:	mov	r2, r7
   129a4:	bl	14aa0 <table_set_double@@Base>
   129a8:	add	r7, r7, #1
   129ac:	cmp	r6, r7
   129b0:	bne	1259c <table_dupe@@Base+0x128>
   129b4:	b	12544 <table_dupe@@Base+0xd0>
   129b8:	mov	r0, r4
   129bc:	mov	r1, r5
   129c0:	mov	r2, r7
   129c4:	bl	13b44 <table_get_ldouble@@Base>
   129c8:	mov	r0, sl
   129cc:	mov	r1, r5
   129d0:	mov	r2, r7
   129d4:	bl	14b28 <table_set_ldouble@@Base>
   129d8:	add	r7, r7, #1
   129dc:	cmp	r6, r7
   129e0:	bne	1259c <table_dupe@@Base+0x128>
   129e4:	b	12544 <table_dupe@@Base+0xd0>
   129e8:	mov	r0, r4
   129ec:	mov	r1, r5
   129f0:	mov	r2, r7
   129f4:	bl	13b5c <table_get_char@@Base>
   129f8:	mov	r3, r0
   129fc:	mov	r0, sl
   12a00:	mov	r1, r5
   12a04:	mov	r2, r7
   12a08:	bl	14c38 <table_set_char@@Base>
   12a0c:	add	r7, r7, #1
   12a10:	cmp	r6, r7
   12a14:	bne	1259c <table_dupe@@Base+0x128>
   12a18:	b	12544 <table_dupe@@Base+0xd0>
   12a1c:	mov	r0, r4
   12a20:	mov	r1, r5
   12a24:	mov	r2, r7
   12a28:	bl	13b74 <table_get_uchar@@Base>
   12a2c:	mov	r3, r0
   12a30:	mov	r0, sl
   12a34:	mov	r1, r5
   12a38:	mov	r2, r7
   12a3c:	bl	14cb8 <table_set_uchar@@Base>
   12a40:	add	r7, r7, #1
   12a44:	cmp	r6, r7
   12a48:	bne	1259c <table_dupe@@Base+0x128>
   12a4c:	b	12544 <table_dupe@@Base+0xd0>
   12a50:	mov	r0, r4
   12a54:	mov	r1, r5
   12a58:	mov	r2, r7
   12a5c:	bl	13b8c <table_get_string@@Base>
   12a60:	mov	r3, r0
   12a64:	mov	r0, sl
   12a68:	mov	r1, r5
   12a6c:	mov	r2, r7
   12a70:	bl	14bb0 <table_set_string@@Base>
   12a74:	add	r7, r7, #1
   12a78:	cmp	r6, r7
   12a7c:	bne	1259c <table_dupe@@Base+0x128>
   12a80:	b	12544 <table_dupe@@Base+0xd0>
   12a84:	mov	r0, r4
   12a88:	mov	r1, r5
   12a8c:	mov	r2, r7
   12a90:	bl	1397c <table_get_bool@@Base>
   12a94:	mov	r3, r0
   12a98:	mov	r0, sl
   12a9c:	mov	r1, r5
   12aa0:	mov	r2, r7
   12aa4:	bl	14174 <table_set_bool@@Base>
   12aa8:	add	r7, r7, #1
   12aac:	cmp	r6, r7
   12ab0:	bne	1259c <table_dupe@@Base+0x128>
   12ab4:	b	12544 <table_dupe@@Base+0xd0>
   12ab8:	mov	r0, sl
   12abc:	sub	sp, fp, #28
   12ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ac4 <table_get_major_version@@Base>:
   12ac4:	mov	r0, #0
   12ac8:	bx	lr

00012acc <table_get_minor_version@@Base>:
   12acc:	mov	r0, #0
   12ad0:	bx	lr

00012ad4 <table_get_patch_version@@Base>:
   12ad4:	mov	r0, #0
   12ad8:	bx	lr

00012adc <table_get_version@@Base>:
   12adc:	movw	r0, #23212	; 0x5aac
   12ae0:	movt	r0, #1
   12ae4:	bx	lr

00012ae8 <table_get_callback_length@@Base>:
   12ae8:	ldr	r0, [r0, #32]
   12aec:	bx	lr

00012af0 <table_register_callback@@Base>:
   12af0:	push	{r4, r5, r6, r7, fp, lr}
   12af4:	add	fp, sp, #16
   12af8:	mov	r5, r0
   12afc:	ldr	r0, [r0, #32]
   12b00:	mov	r4, r3
   12b04:	mov	r6, r2
   12b08:	mov	r7, r1
   12b0c:	cmp	r0, #1
   12b10:	blt	12b6c <table_register_callback@@Base+0x7c>
   12b14:	ldr	r2, [r5, #36]	; 0x24
   12b18:	mov	r1, #0
   12b1c:	ldr	r3, [r2, r1, lsl #2]
   12b20:	cmp	r3, r7
   12b24:	beq	12b40 <table_register_callback@@Base+0x50>
   12b28:	add	r1, r1, #1
   12b2c:	cmp	r0, r1
   12b30:	beq	12b6c <table_register_callback@@Base+0x7c>
   12b34:	ldr	r3, [r2, r1, lsl #2]
   12b38:	cmp	r3, r7
   12b3c:	bne	12b28 <table_register_callback@@Base+0x38>
   12b40:	ldr	r3, [r5, #40]	; 0x28
   12b44:	ldr	r3, [r3, r1, lsl #2]
   12b48:	cmp	r3, r6
   12b4c:	bne	12b28 <table_register_callback@@Base+0x38>
   12b50:	cmp	r1, #0
   12b54:	beq	12b6c <table_register_callback@@Base+0x7c>
   12b58:	ldr	r0, [r5, #44]	; 0x2c
   12b5c:	ldr	r2, [r0, r1, lsl #2]
   12b60:	orr	r2, r2, r4
   12b64:	str	r2, [r0, r1, lsl #2]
   12b68:	pop	{r4, r5, r6, r7, fp, pc}
   12b6c:	ldr	r1, [r5, #48]	; 0x30
   12b70:	udiv	r2, r0, r1
   12b74:	mls	r2, r2, r1, r0
   12b78:	cmp	r2, #0
   12b7c:	bne	12bc8 <table_register_callback@@Base+0xd8>
   12b80:	ldr	r2, [r5, #52]	; 0x34
   12b84:	ldr	r0, [r5, #36]	; 0x24
   12b88:	add	r1, r2, r1
   12b8c:	str	r1, [r5, #52]	; 0x34
   12b90:	lsl	r1, r1, #2
   12b94:	bl	11fec <realloc@plt>
   12b98:	str	r0, [r5, #36]	; 0x24
   12b9c:	ldr	r1, [r5, #52]	; 0x34
   12ba0:	ldr	r0, [r5, #40]	; 0x28
   12ba4:	lsl	r1, r1, #2
   12ba8:	bl	11fec <realloc@plt>
   12bac:	str	r0, [r5, #40]	; 0x28
   12bb0:	ldr	r1, [r5, #52]	; 0x34
   12bb4:	ldr	r0, [r5, #44]	; 0x2c
   12bb8:	lsl	r1, r1, #2
   12bbc:	bl	11fec <realloc@plt>
   12bc0:	str	r0, [r5, #44]	; 0x2c
   12bc4:	ldr	r0, [r5, #32]
   12bc8:	ldr	r1, [r5, #36]	; 0x24
   12bcc:	str	r7, [r1, r0, lsl #2]
   12bd0:	ldr	r1, [r5, #40]	; 0x28
   12bd4:	str	r6, [r1, r0, lsl #2]
   12bd8:	ldr	r1, [r5, #44]	; 0x2c
   12bdc:	str	r4, [r1, r0, lsl #2]
   12be0:	ldr	r0, [r5, #32]
   12be4:	add	r0, r0, #1
   12be8:	str	r0, [r5, #32]
   12bec:	pop	{r4, r5, r6, r7, fp, pc}

00012bf0 <table_unregister_callback@@Base>:
   12bf0:	push	{r4, r5, r6, sl, fp, lr}
   12bf4:	add	fp, sp, #16
   12bf8:	ldr	r4, [r0, #32]
   12bfc:	cmp	r4, #1
   12c00:	blt	12d54 <table_unregister_callback@@Base+0x164>
   12c04:	ldr	r3, [r0, #36]	; 0x24
   12c08:	mov	r6, r0
   12c0c:	mov	r0, #0
   12c10:	ldr	r5, [r3, r0, lsl #2]
   12c14:	cmp	r5, r1
   12c18:	beq	12c34 <table_unregister_callback@@Base+0x44>
   12c1c:	add	r0, r0, #1
   12c20:	cmp	r0, r4
   12c24:	beq	12d54 <table_unregister_callback@@Base+0x164>
   12c28:	ldr	r5, [r3, r0, lsl #2]
   12c2c:	cmp	r5, r1
   12c30:	bne	12c1c <table_unregister_callback@@Base+0x2c>
   12c34:	ldr	r5, [r6, #40]	; 0x28
   12c38:	ldr	r5, [r5, r0, lsl #2]
   12c3c:	cmp	r5, r2
   12c40:	bne	12c1c <table_unregister_callback@@Base+0x2c>
   12c44:	sub	r1, r4, #1
   12c48:	cmp	r0, r1
   12c4c:	bge	12cd0 <table_unregister_callback@@Base+0xe0>
   12c50:	add	r2, r0, #1
   12c54:	ldr	r1, [r3, r2, lsl #2]
   12c58:	str	r1, [r3, r0, lsl #2]
   12c5c:	ldr	r1, [r6, #40]	; 0x28
   12c60:	ldr	r3, [r1, r2, lsl #2]
   12c64:	str	r3, [r1, r0, lsl #2]
   12c68:	ldr	r1, [r6, #44]	; 0x2c
   12c6c:	ldr	r3, [r1, r2, lsl #2]
   12c70:	str	r3, [r1, r0, lsl #2]
   12c74:	ldr	r1, [r6, #32]
   12c78:	sub	r1, r1, #1
   12c7c:	cmp	r2, r1
   12c80:	bge	12cd0 <table_unregister_callback@@Base+0xe0>
   12c84:	ldr	r1, [r6, #36]	; 0x24
   12c88:	add	r1, r1, r0, lsl #2
   12c8c:	ldr	r2, [r1, #8]
   12c90:	str	r2, [r1, #4]
   12c94:	ldr	r1, [r6, #40]	; 0x28
   12c98:	add	r1, r1, r0, lsl #2
   12c9c:	ldr	r2, [r1, #8]
   12ca0:	str	r2, [r1, #4]
   12ca4:	ldr	r1, [r6, #44]	; 0x2c
   12ca8:	add	r1, r1, r0, lsl #2
   12cac:	ldr	r2, [r1, #8]
   12cb0:	str	r2, [r1, #4]
   12cb4:	add	r2, r0, #1
   12cb8:	add	r0, r0, #2
   12cbc:	ldr	r1, [r6, #32]
   12cc0:	sub	r1, r1, #1
   12cc4:	cmp	r0, r1
   12cc8:	mov	r0, r2
   12ccc:	blt	12c84 <table_unregister_callback@@Base+0x94>
   12cd0:	str	r1, [r6, #32]
   12cd4:	ldr	r2, [r6, #48]	; 0x30
   12cd8:	udiv	r0, r1, r2
   12cdc:	mls	r0, r0, r2, r1
   12ce0:	cmp	r0, #0
   12ce4:	popne	{r4, r5, r6, sl, fp, pc}
   12ce8:	ldr	r1, [r6, #52]	; 0x34
   12cec:	ldr	r0, [r6, #36]	; 0x24
   12cf0:	subs	r1, r1, r2
   12cf4:	str	r1, [r6, #52]	; 0x34
   12cf8:	beq	12d30 <table_unregister_callback@@Base+0x140>
   12cfc:	lsl	r1, r1, #2
   12d00:	bl	11fec <realloc@plt>
   12d04:	str	r0, [r6, #36]	; 0x24
   12d08:	ldr	r1, [r6, #52]	; 0x34
   12d0c:	ldr	r0, [r6, #40]	; 0x28
   12d10:	lsl	r1, r1, #2
   12d14:	bl	11fec <realloc@plt>
   12d18:	str	r0, [r6, #40]	; 0x28
   12d1c:	ldr	r1, [r6, #52]	; 0x34
   12d20:	ldr	r0, [r6, #44]	; 0x2c
   12d24:	lsl	r1, r1, #2
   12d28:	bl	11fec <realloc@plt>
   12d2c:	b	12d50 <table_unregister_callback@@Base+0x160>
   12d30:	bl	11fd4 <free@plt>
   12d34:	ldr	r0, [r6, #40]	; 0x28
   12d38:	bl	11fd4 <free@plt>
   12d3c:	ldr	r0, [r6, #44]	; 0x2c
   12d40:	bl	11fd4 <free@plt>
   12d44:	mov	r0, #0
   12d48:	str	r0, [r6, #36]	; 0x24
   12d4c:	str	r0, [r6, #40]	; 0x28
   12d50:	str	r0, [r6, #44]	; 0x2c
   12d54:	pop	{r4, r5, r6, sl, fp, pc}

00012d58 <table_notify@@Base>:
   12d58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d5c:	add	fp, sp, #24
   12d60:	sub	sp, sp, #8
   12d64:	mov	r7, r0
   12d68:	ldr	r0, [r0, #32]
   12d6c:	cmp	r0, #1
   12d70:	blt	12de8 <table_notify@@Base+0x90>
   12d74:	mov	r4, r3
   12d78:	mov	r8, r2
   12d7c:	mov	r9, r1
   12d80:	mov	r5, #0
   12d84:	ldr	r1, [r7, #44]	; 0x2c
   12d88:	ldr	r1, [r1, r5, lsl #2]
   12d8c:	tst	r1, r4
   12d90:	bne	12db0 <table_notify@@Base+0x58>
   12d94:	add	r5, r5, #1
   12d98:	cmp	r5, r0
   12d9c:	bge	12de8 <table_notify@@Base+0x90>
   12da0:	ldr	r1, [r7, #44]	; 0x2c
   12da4:	ldr	r1, [r1, r5, lsl #2]
   12da8:	tst	r1, r4
   12dac:	beq	12d94 <table_notify@@Base+0x3c>
   12db0:	ldr	r0, [r7, #36]	; 0x24
   12db4:	ldr	r1, [r7, #40]	; 0x28
   12db8:	mov	r2, r8
   12dbc:	mov	r3, r4
   12dc0:	ldr	r6, [r0, r5, lsl #2]
   12dc4:	ldr	r0, [r1, r5, lsl #2]
   12dc8:	mov	r1, r9
   12dcc:	str	r0, [sp]
   12dd0:	mov	r0, r7
   12dd4:	blx	r6
   12dd8:	ldr	r0, [r7, #32]
   12ddc:	add	r5, r5, #1
   12de0:	cmp	r5, r0
   12de4:	blt	12da0 <table_notify@@Base+0x48>
   12de8:	sub	sp, fp, #24
   12dec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012df0 <table_column_init@@Base>:
   12df0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12df4:	add	fp, sp, #24
   12df8:	ldr	r7, [r0]
   12dfc:	mov	r0, r2
   12e00:	mov	r4, r3
   12e04:	mov	r5, r2
   12e08:	mov	r6, r1
   12e0c:	bl	12028 <strlen@plt>
   12e10:	add	r0, r0, #1
   12e14:	bl	12004 <malloc@plt>
   12e18:	ldr	r8, [fp, #8]
   12e1c:	add	r6, r6, r6, lsl #1
   12e20:	cmp	r0, #0
   12e24:	str	r0, [r7, r6, lsl #2]
   12e28:	beq	12e34 <table_column_init@@Base+0x44>
   12e2c:	mov	r1, r5
   12e30:	bl	11ff8 <strcpy@plt>
   12e34:	add	r0, r7, r6, lsl #2
   12e38:	stmib	r0, {r4, r8}
   12e3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012e40 <table_get_col_ptr@@Base>:
   12e40:	ldr	r0, [r0]
   12e44:	add	r1, r1, r1, lsl #1
   12e48:	add	r0, r0, r1, lsl #2
   12e4c:	bx	lr

00012e50 <table_column_destroy@@Base>:
   12e50:	ldr	r0, [r0]
   12e54:	add	r1, r1, r1, lsl #1
   12e58:	ldr	r0, [r0, r1, lsl #2]
   12e5c:	cmp	r0, #0
   12e60:	bxeq	lr
   12e64:	b	11fd4 <free@plt>

00012e68 <table_get_column_length@@Base>:
   12e68:	ldr	r0, [r0, #4]
   12e6c:	bx	lr

00012e70 <table_get_column@@Base>:
   12e70:	push	{r4, r5, r6, r7, fp, lr}
   12e74:	add	fp, sp, #16
   12e78:	ldr	r6, [r0, #4]
   12e7c:	cmp	r6, #1
   12e80:	blt	12ec8 <table_get_column@@Base+0x58>
   12e84:	ldr	r7, [r0]
   12e88:	mov	r5, r1
   12e8c:	mov	r4, #0
   12e90:	ldr	r0, [r7]
   12e94:	mov	r1, r5
   12e98:	bl	11fbc <strcmp@plt>
   12e9c:	cmp	r0, #0
   12ea0:	beq	12eb8 <table_get_column@@Base+0x48>
   12ea4:	add	r4, r4, #1
   12ea8:	add	r7, r7, #12
   12eac:	cmp	r6, r4
   12eb0:	bne	12e90 <table_get_column@@Base+0x20>
   12eb4:	mov	r4, r6
   12eb8:	cmp	r4, r6
   12ebc:	mvneq	r4, #0
   12ec0:	mov	r0, r4
   12ec4:	pop	{r4, r5, r6, r7, fp, pc}
   12ec8:	mov	r4, #0
   12ecc:	cmp	r4, r6
   12ed0:	mvneq	r4, #0
   12ed4:	mov	r0, r4
   12ed8:	pop	{r4, r5, r6, r7, fp, pc}

00012edc <table_get_column_name@@Base>:
   12edc:	ldr	r0, [r0]
   12ee0:	add	r1, r1, r1, lsl #1
   12ee4:	ldr	r0, [r0, r1, lsl #2]
   12ee8:	bx	lr

00012eec <table_get_column_data_type@@Base>:
   12eec:	ldr	r0, [r0]
   12ef0:	add	r1, r1, r1, lsl #1
   12ef4:	add	r0, r0, r1, lsl #2
   12ef8:	ldr	r0, [r0, #4]
   12efc:	bx	lr

00012f00 <table_add_column@@Base>:
   12f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f04:	add	fp, sp, #28
   12f08:	sub	sp, sp, #4
   12f0c:	mov	r4, r0
   12f10:	mov	r8, r1
   12f14:	ldr	r0, [r0, #4]
   12f18:	mov	r9, r2
   12f1c:	ldr	r1, [r4, #8]
   12f20:	udiv	r2, r0, r1
   12f24:	mls	r0, r2, r1, r0
   12f28:	cmp	r0, #0
   12f2c:	bne	12f98 <table_add_column@@Base+0x98>
   12f30:	ldr	r2, [r4, #12]
   12f34:	ldr	r0, [r4]
   12f38:	add	r1, r2, r1
   12f3c:	str	r1, [r4, #12]
   12f40:	add	r1, r1, r1, lsl #1
   12f44:	lsl	r1, r1, #2
   12f48:	bl	11fec <realloc@plt>
   12f4c:	str	r0, [r4]
   12f50:	mov	r0, r4
   12f54:	bl	13c40 <table_get_row_length@@Base>
   12f58:	cmp	r0, #1
   12f5c:	blt	12f98 <table_add_column@@Base+0x98>
   12f60:	mov	r6, r0
   12f64:	mov	r5, #0
   12f68:	mov	r0, r4
   12f6c:	mov	r1, r5
   12f70:	bl	13bd8 <table_get_row_ptr@@Base>
   12f74:	ldr	r1, [r4, #12]
   12f78:	mov	r7, r0
   12f7c:	ldr	r0, [r0]
   12f80:	lsl	r1, r1, #2
   12f84:	bl	11fec <realloc@plt>
   12f88:	add	r5, r5, #1
   12f8c:	str	r0, [r7]
   12f90:	cmp	r6, r5
   12f94:	bne	12f68 <table_add_column@@Base+0x68>
   12f98:	mov	r0, r4
   12f9c:	bl	13c40 <table_get_row_length@@Base>
   12fa0:	ldr	r6, [r4, #4]
   12fa4:	mov	r7, r0
   12fa8:	mov	r0, r9
   12fac:	bl	1394c <table_get_default_compare_function_for_data_type@@Base>
   12fb0:	ldr	r5, [r4]
   12fb4:	mov	sl, r0
   12fb8:	mov	r0, r8
   12fbc:	bl	12028 <strlen@plt>
   12fc0:	add	r0, r0, #1
   12fc4:	bl	12004 <malloc@plt>
   12fc8:	mov	r1, r8
   12fcc:	add	r8, r6, r6, lsl #1
   12fd0:	cmp	r0, #0
   12fd4:	str	r0, [r5, r8, lsl #2]
   12fd8:	beq	12fe0 <table_add_column@@Base+0xe0>
   12fdc:	bl	11ff8 <strcpy@plt>
   12fe0:	add	r0, r5, r8, lsl #2
   12fe4:	cmp	r7, #1
   12fe8:	stmib	r0, {r9, sl}
   12fec:	blt	13010 <table_add_column@@Base+0x110>
   12ff0:	mov	r5, #0
   12ff4:	mov	r0, r4
   12ff8:	mov	r1, r5
   12ffc:	mov	r2, r6
   13000:	bl	14e98 <table_cell_init@@Base>
   13004:	add	r5, r5, #1
   13008:	cmp	r7, r5
   1300c:	bne	12ff4 <table_add_column@@Base+0xf4>
   13010:	ldr	r2, [r4, #4]
   13014:	mov	r0, r4
   13018:	mvn	r1, #0
   1301c:	mov	r3, #8
   13020:	bl	12d58 <table_notify@@Base>
   13024:	ldr	r0, [r4, #4]
   13028:	add	r1, r0, #1
   1302c:	str	r1, [r4, #4]
   13030:	sub	sp, fp, #28
   13034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013038 <table_remove_column@@Base>:
   13038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1303c:	add	fp, sp, #28
   13040:	sub	sp, sp, #12
   13044:	mov	r5, r0
   13048:	ldr	r0, [r0]
   1304c:	add	r6, r1, r1, lsl #1
   13050:	mov	r4, r1
   13054:	ldr	r0, [r0, r6, lsl #2]
   13058:	cmp	r0, #0
   1305c:	beq	13064 <table_remove_column@@Base+0x2c>
   13060:	bl	11fd4 <free@plt>
   13064:	ldr	r7, [r5, #4]
   13068:	sub	r0, r7, #1
   1306c:	cmp	r0, r4
   13070:	str	r0, [sp, #8]
   13074:	ble	130a8 <table_remove_column@@Base+0x70>
   13078:	mvn	r0, r4
   1307c:	lsl	r1, r6, #2
   13080:	add	r0, r0, r7
   13084:	ldr	r2, [r5]
   13088:	subs	r0, r0, #1
   1308c:	add	r2, r2, r1
   13090:	add	r1, r1, #12
   13094:	vldr	d16, [r2, #12]
   13098:	ldr	r3, [r2, #20]
   1309c:	str	r3, [r2, #8]
   130a0:	vstr	d16, [r2]
   130a4:	bne	13084 <table_remove_column@@Base+0x4c>
   130a8:	mov	r0, r5
   130ac:	bl	13c40 <table_get_row_length@@Base>
   130b0:	cmp	r0, #1
   130b4:	blt	131a0 <table_remove_column@@Base+0x168>
   130b8:	mov	sl, r0
   130bc:	ldr	r0, [sp, #8]
   130c0:	cmp	r0, r4
   130c4:	ble	13174 <table_remove_column@@Base+0x13c>
   130c8:	mvn	r0, r4
   130cc:	sub	r8, r7, #2
   130d0:	add	r0, r7, r0
   130d4:	mov	r7, #0
   130d8:	and	r9, r0, #1
   130dc:	add	r0, r4, #1
   130e0:	str	r0, [sp, #4]
   130e4:	b	130f4 <table_remove_column@@Base+0xbc>
   130e8:	add	r7, r7, #1
   130ec:	cmp	r7, sl
   130f0:	beq	131a0 <table_remove_column@@Base+0x168>
   130f4:	mov	r0, r5
   130f8:	mov	r1, r7
   130fc:	mov	r2, r4
   13100:	bl	14ed4 <table_cell_destroy@@Base>
   13104:	mov	r0, r5
   13108:	mov	r1, r7
   1310c:	bl	13bd8 <table_get_row_ptr@@Base>
   13110:	cmp	r9, #0
   13114:	mov	r2, r4
   13118:	beq	13130 <table_remove_column@@Base+0xf8>
   1311c:	ldr	r1, [r0]
   13120:	add	r2, r1, r4, lsl #2
   13124:	ldr	r2, [r2, #4]
   13128:	str	r2, [r1, r4, lsl #2]
   1312c:	ldr	r2, [sp, #4]
   13130:	cmp	r8, r4
   13134:	beq	130e8 <table_remove_column@@Base+0xb0>
   13138:	ldr	r1, [sp, #8]
   1313c:	sub	r1, r1, r2
   13140:	lsl	r2, r2, #2
   13144:	ldr	r3, [r0]
   13148:	subs	r1, r1, #2
   1314c:	add	r6, r3, r2
   13150:	ldr	r6, [r6, #4]
   13154:	str	r6, [r3, r2]
   13158:	ldr	r3, [r0]
   1315c:	add	r3, r3, r2
   13160:	add	r2, r2, #8
   13164:	ldr	r6, [r3, #8]
   13168:	str	r6, [r3, #4]
   1316c:	bne	13144 <table_remove_column@@Base+0x10c>
   13170:	b	130e8 <table_remove_column@@Base+0xb0>
   13174:	mov	r7, #0
   13178:	mov	r0, r5
   1317c:	mov	r1, r7
   13180:	mov	r2, r4
   13184:	bl	14ed4 <table_cell_destroy@@Base>
   13188:	mov	r0, r5
   1318c:	mov	r1, r7
   13190:	bl	13bd8 <table_get_row_ptr@@Base>
   13194:	add	r7, r7, #1
   13198:	cmp	sl, r7
   1319c:	bne	13178 <table_remove_column@@Base+0x140>
   131a0:	ldmib	r5, {r0, r1}
   131a4:	sub	r0, r0, #1
   131a8:	udiv	r2, r0, r1
   131ac:	str	r0, [r5, #4]
   131b0:	mls	r0, r2, r1, r0
   131b4:	cmp	r0, #0
   131b8:	bne	13224 <table_remove_column@@Base+0x1ec>
   131bc:	ldr	r2, [r5, #12]
   131c0:	ldr	r0, [r5]
   131c4:	sub	r1, r2, r1
   131c8:	str	r1, [r5, #12]
   131cc:	add	r1, r1, r1, lsl #1
   131d0:	lsl	r1, r1, #2
   131d4:	bl	11fec <realloc@plt>
   131d8:	str	r0, [r5]
   131dc:	mov	r0, r5
   131e0:	bl	13c40 <table_get_row_length@@Base>
   131e4:	cmp	r0, #1
   131e8:	blt	13224 <table_remove_column@@Base+0x1ec>
   131ec:	mov	r8, r0
   131f0:	mov	r7, #0
   131f4:	mov	r0, r5
   131f8:	mov	r1, r7
   131fc:	bl	13bd8 <table_get_row_ptr@@Base>
   13200:	ldr	r1, [r5, #12]
   13204:	mov	r6, r0
   13208:	ldr	r0, [r0]
   1320c:	lsl	r1, r1, #2
   13210:	bl	11fec <realloc@plt>
   13214:	add	r7, r7, #1
   13218:	str	r0, [r6]
   1321c:	cmp	r8, r7
   13220:	bne	131f4 <table_remove_column@@Base+0x1bc>
   13224:	mov	r0, r5
   13228:	mvn	r1, #0
   1322c:	mov	r2, r4
   13230:	mov	r3, #16
   13234:	bl	12d58 <table_notify@@Base>
   13238:	mov	r0, #0
   1323c:	sub	sp, fp, #28
   13240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013244 <table_get_column_compare_function@@Base>:
   13244:	ldr	r0, [r0]
   13248:	add	r1, r1, r1, lsl #1
   1324c:	add	r0, r0, r1, lsl #2
   13250:	ldr	r0, [r0, #8]
   13254:	bx	lr

00013258 <table_set_column_compare_function@@Base>:
   13258:	ldr	r0, [r0]
   1325c:	add	r1, r1, r1, lsl #1
   13260:	add	r0, r0, r1, lsl #2
   13264:	str	r2, [r0, #8]
   13268:	bx	lr

0001326c <table_compare_bool@@Base>:
   1326c:	cmp	r0, #0
   13270:	beq	132a4 <table_compare_bool@@Base+0x38>
   13274:	cmp	r1, #0
   13278:	moveq	r1, #1
   1327c:	moveq	r0, r1
   13280:	bxeq	lr
   13284:	ldrb	r2, [r1]
   13288:	ldrb	r0, [r0]
   1328c:	mov	r1, #0
   13290:	cmp	r0, r2
   13294:	mvncc	r1, #0
   13298:	movwhi	r1, #1
   1329c:	mov	r0, r1
   132a0:	bx	lr
   132a4:	cmp	r1, #0
   132a8:	mvnne	r1, #0
   132ac:	mov	r0, r1
   132b0:	bx	lr

000132b4 <table_compare_int@@Base>:
   132b4:	cmp	r0, #0
   132b8:	beq	132ec <table_compare_int@@Base+0x38>
   132bc:	cmp	r1, #0
   132c0:	moveq	r1, #1
   132c4:	moveq	r0, r1
   132c8:	bxeq	lr
   132cc:	ldr	r2, [r1]
   132d0:	ldr	r0, [r0]
   132d4:	mov	r1, #0
   132d8:	cmp	r0, r2
   132dc:	mvnlt	r1, #0
   132e0:	movwgt	r1, #1
   132e4:	mov	r0, r1
   132e8:	bx	lr
   132ec:	cmp	r1, #0
   132f0:	mvnne	r1, #0
   132f4:	mov	r0, r1
   132f8:	bx	lr

000132fc <table_compare_uint@@Base>:
   132fc:	cmp	r0, #0
   13300:	beq	13334 <table_compare_uint@@Base+0x38>
   13304:	cmp	r1, #0
   13308:	moveq	r1, #1
   1330c:	moveq	r0, r1
   13310:	bxeq	lr
   13314:	ldr	r2, [r1]
   13318:	ldr	r0, [r0]
   1331c:	mov	r1, #0
   13320:	cmp	r0, r2
   13324:	mvncc	r1, #0
   13328:	movwhi	r1, #1
   1332c:	mov	r0, r1
   13330:	bx	lr
   13334:	cmp	r1, #0
   13338:	mvnne	r1, #0
   1333c:	mov	r0, r1
   13340:	bx	lr

00013344 <table_compare_int8@@Base>:
   13344:	cmp	r0, #0
   13348:	beq	1337c <table_compare_int8@@Base+0x38>
   1334c:	cmp	r1, #0
   13350:	moveq	r1, #1
   13354:	moveq	r0, r1
   13358:	bxeq	lr
   1335c:	ldrsb	r2, [r1]
   13360:	ldrsb	r0, [r0]
   13364:	mov	r1, #0
   13368:	cmp	r0, r2
   1336c:	mvnlt	r1, #0
   13370:	movwgt	r1, #1
   13374:	mov	r0, r1
   13378:	bx	lr
   1337c:	cmp	r1, #0
   13380:	mvnne	r1, #0
   13384:	mov	r0, r1
   13388:	bx	lr

0001338c <table_compare_uint8@@Base>:
   1338c:	cmp	r0, #0
   13390:	beq	133c4 <table_compare_uint8@@Base+0x38>
   13394:	cmp	r1, #0
   13398:	moveq	r1, #1
   1339c:	moveq	r0, r1
   133a0:	bxeq	lr
   133a4:	ldrb	r2, [r1]
   133a8:	ldrb	r0, [r0]
   133ac:	mov	r1, #0
   133b0:	cmp	r0, r2
   133b4:	mvncc	r1, #0
   133b8:	movwhi	r1, #1
   133bc:	mov	r0, r1
   133c0:	bx	lr
   133c4:	cmp	r1, #0
   133c8:	mvnne	r1, #0
   133cc:	mov	r0, r1
   133d0:	bx	lr

000133d4 <table_compare_int16@@Base>:
   133d4:	cmp	r0, #0
   133d8:	beq	1340c <table_compare_int16@@Base+0x38>
   133dc:	cmp	r1, #0
   133e0:	moveq	r1, #1
   133e4:	moveq	r0, r1
   133e8:	bxeq	lr
   133ec:	ldrsh	r2, [r1]
   133f0:	ldrsh	r0, [r0]
   133f4:	mov	r1, #0
   133f8:	cmp	r0, r2
   133fc:	mvnlt	r1, #0
   13400:	movwgt	r1, #1
   13404:	mov	r0, r1
   13408:	bx	lr
   1340c:	cmp	r1, #0
   13410:	mvnne	r1, #0
   13414:	mov	r0, r1
   13418:	bx	lr

0001341c <table_compare_uint16@@Base>:
   1341c:	cmp	r0, #0
   13420:	beq	13454 <table_compare_uint16@@Base+0x38>
   13424:	cmp	r1, #0
   13428:	moveq	r1, #1
   1342c:	moveq	r0, r1
   13430:	bxeq	lr
   13434:	ldrh	r2, [r1]
   13438:	ldrh	r0, [r0]
   1343c:	mov	r1, #0
   13440:	cmp	r0, r2
   13444:	mvncc	r1, #0
   13448:	movwhi	r1, #1
   1344c:	mov	r0, r1
   13450:	bx	lr
   13454:	cmp	r1, #0
   13458:	mvnne	r1, #0
   1345c:	mov	r0, r1
   13460:	bx	lr

00013464 <table_compare_int32@@Base>:
   13464:	cmp	r0, #0
   13468:	beq	1349c <table_compare_int32@@Base+0x38>
   1346c:	cmp	r1, #0
   13470:	moveq	r1, #1
   13474:	moveq	r0, r1
   13478:	bxeq	lr
   1347c:	ldr	r2, [r1]
   13480:	ldr	r0, [r0]
   13484:	mov	r1, #0
   13488:	cmp	r0, r2
   1348c:	mvnlt	r1, #0
   13490:	movwgt	r1, #1
   13494:	mov	r0, r1
   13498:	bx	lr
   1349c:	cmp	r1, #0
   134a0:	mvnne	r1, #0
   134a4:	mov	r0, r1
   134a8:	bx	lr

000134ac <table_compare_uint32@@Base>:
   134ac:	cmp	r0, #0
   134b0:	beq	134e4 <table_compare_uint32@@Base+0x38>
   134b4:	cmp	r1, #0
   134b8:	moveq	r1, #1
   134bc:	moveq	r0, r1
   134c0:	bxeq	lr
   134c4:	ldr	r2, [r1]
   134c8:	ldr	r0, [r0]
   134cc:	mov	r1, #0
   134d0:	cmp	r0, r2
   134d4:	mvncc	r1, #0
   134d8:	movwhi	r1, #1
   134dc:	mov	r0, r1
   134e0:	bx	lr
   134e4:	cmp	r1, #0
   134e8:	mvnne	r1, #0
   134ec:	mov	r0, r1
   134f0:	bx	lr

000134f4 <table_compare_int64@@Base>:
   134f4:	cmp	r0, #0
   134f8:	beq	1354c <table_compare_int64@@Base+0x58>
   134fc:	cmp	r1, #0
   13500:	moveq	r1, #1
   13504:	moveq	r0, r1
   13508:	bxeq	lr
   1350c:	push	{r5, r7, fp, lr}
   13510:	add	fp, sp, #8
   13514:	ldm	r0, {r0, r5}
   13518:	ldm	r1, {r2, r7}
   1351c:	mov	r1, #0
   13520:	subs	r3, r0, r2
   13524:	sbcs	r3, r5, r7
   13528:	movwlt	r1, #1
   1352c:	cmp	r1, #0
   13530:	mvnne	r1, #0
   13534:	subs	r0, r2, r0
   13538:	sbcs	r0, r7, r5
   1353c:	movwlt	r1, #1
   13540:	pop	{r5, r7, fp, lr}
   13544:	mov	r0, r1
   13548:	bx	lr
   1354c:	cmp	r1, #0
   13550:	mvnne	r1, #0
   13554:	mov	r0, r1
   13558:	bx	lr

0001355c <table_compare_uint64@@Base>:
   1355c:	cmp	r0, #0
   13560:	beq	135b4 <table_compare_uint64@@Base+0x58>
   13564:	cmp	r1, #0
   13568:	moveq	r1, #1
   1356c:	moveq	r0, r1
   13570:	bxeq	lr
   13574:	push	{r5, r7, fp, lr}
   13578:	add	fp, sp, #8
   1357c:	ldm	r0, {r0, r5}
   13580:	ldm	r1, {r2, r7}
   13584:	mov	r1, #0
   13588:	subs	r3, r0, r2
   1358c:	sbcs	r3, r5, r7
   13590:	movwcc	r1, #1
   13594:	cmp	r1, #0
   13598:	mvnne	r1, #0
   1359c:	subs	r0, r2, r0
   135a0:	sbcs	r0, r7, r5
   135a4:	movwcc	r1, #1
   135a8:	pop	{r5, r7, fp, lr}
   135ac:	mov	r0, r1
   135b0:	bx	lr
   135b4:	cmp	r1, #0
   135b8:	mvnne	r1, #0
   135bc:	mov	r0, r1
   135c0:	bx	lr

000135c4 <table_compare_short@@Base>:
   135c4:	cmp	r0, #0
   135c8:	beq	135fc <table_compare_short@@Base+0x38>
   135cc:	cmp	r1, #0
   135d0:	moveq	r1, #1
   135d4:	moveq	r0, r1
   135d8:	bxeq	lr
   135dc:	ldrsh	r2, [r1]
   135e0:	ldrsh	r0, [r0]
   135e4:	mov	r1, #0
   135e8:	cmp	r0, r2
   135ec:	mvnlt	r1, #0
   135f0:	movwgt	r1, #1
   135f4:	mov	r0, r1
   135f8:	bx	lr
   135fc:	cmp	r1, #0
   13600:	mvnne	r1, #0
   13604:	mov	r0, r1
   13608:	bx	lr

0001360c <table_compare_ushort@@Base>:
   1360c:	cmp	r0, #0
   13610:	beq	13644 <table_compare_ushort@@Base+0x38>
   13614:	cmp	r1, #0
   13618:	moveq	r1, #1
   1361c:	moveq	r0, r1
   13620:	bxeq	lr
   13624:	ldrh	r2, [r1]
   13628:	ldrh	r0, [r0]
   1362c:	mov	r1, #0
   13630:	cmp	r0, r2
   13634:	mvncc	r1, #0
   13638:	movwhi	r1, #1
   1363c:	mov	r0, r1
   13640:	bx	lr
   13644:	cmp	r1, #0
   13648:	mvnne	r1, #0
   1364c:	mov	r0, r1
   13650:	bx	lr

00013654 <table_compare_long@@Base>:
   13654:	cmp	r0, #0
   13658:	beq	1368c <table_compare_long@@Base+0x38>
   1365c:	cmp	r1, #0
   13660:	moveq	r1, #1
   13664:	moveq	r0, r1
   13668:	bxeq	lr
   1366c:	ldr	r2, [r1]
   13670:	ldr	r0, [r0]
   13674:	mov	r1, #0
   13678:	cmp	r0, r2
   1367c:	mvnlt	r1, #0
   13680:	movwgt	r1, #1
   13684:	mov	r0, r1
   13688:	bx	lr
   1368c:	cmp	r1, #0
   13690:	mvnne	r1, #0
   13694:	mov	r0, r1
   13698:	bx	lr

0001369c <table_compare_ulong@@Base>:
   1369c:	cmp	r0, #0
   136a0:	beq	136d4 <table_compare_ulong@@Base+0x38>
   136a4:	cmp	r1, #0
   136a8:	moveq	r1, #1
   136ac:	moveq	r0, r1
   136b0:	bxeq	lr
   136b4:	ldr	r2, [r1]
   136b8:	ldr	r0, [r0]
   136bc:	mov	r1, #0
   136c0:	cmp	r0, r2
   136c4:	mvncc	r1, #0
   136c8:	movwhi	r1, #1
   136cc:	mov	r0, r1
   136d0:	bx	lr
   136d4:	cmp	r1, #0
   136d8:	mvnne	r1, #0
   136dc:	mov	r0, r1
   136e0:	bx	lr

000136e4 <table_compare_llong@@Base>:
   136e4:	cmp	r0, #0
   136e8:	beq	1373c <table_compare_llong@@Base+0x58>
   136ec:	cmp	r1, #0
   136f0:	moveq	r1, #1
   136f4:	moveq	r0, r1
   136f8:	bxeq	lr
   136fc:	push	{r5, r7, fp, lr}
   13700:	add	fp, sp, #8
   13704:	ldm	r0, {r0, r5}
   13708:	ldm	r1, {r2, r7}
   1370c:	mov	r1, #0
   13710:	subs	r3, r0, r2
   13714:	sbcs	r3, r5, r7
   13718:	movwlt	r1, #1
   1371c:	cmp	r1, #0
   13720:	mvnne	r1, #0
   13724:	subs	r0, r2, r0
   13728:	sbcs	r0, r7, r5
   1372c:	movwlt	r1, #1
   13730:	pop	{r5, r7, fp, lr}
   13734:	mov	r0, r1
   13738:	bx	lr
   1373c:	cmp	r1, #0
   13740:	mvnne	r1, #0
   13744:	mov	r0, r1
   13748:	bx	lr

0001374c <table_compare_ullong@@Base>:
   1374c:	cmp	r0, #0
   13750:	beq	13784 <table_compare_ullong@@Base+0x38>
   13754:	cmp	r1, #0
   13758:	moveq	r1, #1
   1375c:	moveq	r0, r1
   13760:	bxeq	lr
   13764:	ldr	r2, [r1]
   13768:	ldr	r0, [r0]
   1376c:	mov	r1, #0
   13770:	cmp	r0, r2
   13774:	mvncc	r1, #0
   13778:	movwhi	r1, #1
   1377c:	mov	r0, r1
   13780:	bx	lr
   13784:	cmp	r1, #0
   13788:	mvnne	r1, #0
   1378c:	mov	r0, r1
   13790:	bx	lr

00013794 <table_compare_float@@Base>:
   13794:	cmp	r0, #0
   13798:	beq	137d0 <table_compare_float@@Base+0x3c>
   1379c:	cmp	r1, #0
   137a0:	moveq	r1, #1
   137a4:	moveq	r0, r1
   137a8:	bxeq	lr
   137ac:	vldr	s0, [r1]
   137b0:	vldr	s2, [r0]
   137b4:	mov	r1, #0
   137b8:	vcmpe.f32	s2, s0
   137bc:	vmrs	APSR_nzcv, fpscr
   137c0:	mvnmi	r1, #0
   137c4:	movwgt	r1, #1
   137c8:	mov	r0, r1
   137cc:	bx	lr
   137d0:	cmp	r1, #0
   137d4:	mvnne	r1, #0
   137d8:	mov	r0, r1
   137dc:	bx	lr

000137e0 <table_compare_double@@Base>:
   137e0:	cmp	r0, #0
   137e4:	beq	1381c <table_compare_double@@Base+0x3c>
   137e8:	cmp	r1, #0
   137ec:	moveq	r1, #1
   137f0:	moveq	r0, r1
   137f4:	bxeq	lr
   137f8:	vldr	d16, [r1]
   137fc:	vldr	d17, [r0]
   13800:	mov	r1, #0
   13804:	vcmpe.f64	d17, d16
   13808:	vmrs	APSR_nzcv, fpscr
   1380c:	mvnmi	r1, #0
   13810:	movwgt	r1, #1
   13814:	mov	r0, r1
   13818:	bx	lr
   1381c:	cmp	r1, #0
   13820:	mvnne	r1, #0
   13824:	mov	r0, r1
   13828:	bx	lr

0001382c <table_compare_ldouble@@Base>:
   1382c:	cmp	r0, #0
   13830:	beq	13868 <table_compare_ldouble@@Base+0x3c>
   13834:	cmp	r1, #0
   13838:	moveq	r1, #1
   1383c:	moveq	r0, r1
   13840:	bxeq	lr
   13844:	vldr	d16, [r1]
   13848:	vldr	d17, [r0]
   1384c:	mov	r1, #0
   13850:	vcmpe.f64	d17, d16
   13854:	vmrs	APSR_nzcv, fpscr
   13858:	mvnmi	r1, #0
   1385c:	movwgt	r1, #1
   13860:	mov	r0, r1
   13864:	bx	lr
   13868:	cmp	r1, #0
   1386c:	mvnne	r1, #0
   13870:	mov	r0, r1
   13874:	bx	lr

00013878 <table_compare_char@@Base>:
   13878:	cmp	r0, #0
   1387c:	beq	138b0 <table_compare_char@@Base+0x38>
   13880:	cmp	r1, #0
   13884:	moveq	r1, #1
   13888:	moveq	r0, r1
   1388c:	bxeq	lr
   13890:	ldrb	r2, [r1]
   13894:	ldrb	r0, [r0]
   13898:	mov	r1, #0
   1389c:	cmp	r0, r2
   138a0:	mvncc	r1, #0
   138a4:	movwhi	r1, #1
   138a8:	mov	r0, r1
   138ac:	bx	lr
   138b0:	cmp	r1, #0
   138b4:	mvnne	r1, #0
   138b8:	mov	r0, r1
   138bc:	bx	lr

000138c0 <table_compare_uchar@@Base>:
   138c0:	cmp	r0, #0
   138c4:	beq	138f8 <table_compare_uchar@@Base+0x38>
   138c8:	cmp	r1, #0
   138cc:	moveq	r1, #1
   138d0:	moveq	r0, r1
   138d4:	bxeq	lr
   138d8:	ldrb	r2, [r1]
   138dc:	ldrb	r0, [r0]
   138e0:	mov	r1, #0
   138e4:	cmp	r0, r2
   138e8:	mvncc	r1, #0
   138ec:	movwhi	r1, #1
   138f0:	mov	r0, r1
   138f4:	bx	lr
   138f8:	cmp	r1, #0
   138fc:	mvnne	r1, #0
   13900:	mov	r0, r1
   13904:	bx	lr

00013908 <table_compare_string@@Base>:
   13908:	cmp	r0, #0
   1390c:	beq	13924 <table_compare_string@@Base+0x1c>
   13910:	cmp	r1, #0
   13914:	moveq	r1, #1
   13918:	moveq	r0, r1
   1391c:	bxeq	lr
   13920:	b	11fbc <strcmp@plt>
   13924:	cmp	r1, #0
   13928:	mvnne	r1, #0
   1392c:	mov	r0, r1
   13930:	bx	lr

00013934 <table_compare_ptr@@Base>:
   13934:	cmp	r0, r1
   13938:	mov	r2, #0
   1393c:	mvncc	r2, #0
   13940:	movwhi	r2, #1
   13944:	mov	r0, r2
   13948:	bx	lr

0001394c <table_get_default_compare_function_for_data_type@@Base>:
   1394c:	cmp	r0, #23
   13950:	movhi	r0, #0
   13954:	bxhi	lr
   13958:	movw	r1, #23068	; 0x5a1c
   1395c:	movt	r1, #1
   13960:	ldr	r0, [r1, r0, lsl #2]
   13964:	bx	lr

00013968 <table_get@@Base>:
   13968:	push	{fp, lr}
   1396c:	mov	fp, sp
   13970:	bl	14eb8 <table_get_cell_ptr@@Base>
   13974:	ldr	r0, [r0]
   13978:	pop	{fp, pc}

0001397c <table_get_bool@@Base>:
   1397c:	push	{fp, lr}
   13980:	mov	fp, sp
   13984:	bl	14eb8 <table_get_cell_ptr@@Base>
   13988:	ldr	r0, [r0]
   1398c:	ldrb	r0, [r0]
   13990:	pop	{fp, pc}

00013994 <table_get_int@@Base>:
   13994:	push	{fp, lr}
   13998:	mov	fp, sp
   1399c:	bl	14eb8 <table_get_cell_ptr@@Base>
   139a0:	ldr	r0, [r0]
   139a4:	ldr	r0, [r0]
   139a8:	pop	{fp, pc}

000139ac <table_get_uint@@Base>:
   139ac:	push	{fp, lr}
   139b0:	mov	fp, sp
   139b4:	bl	14eb8 <table_get_cell_ptr@@Base>
   139b8:	ldr	r0, [r0]
   139bc:	ldr	r0, [r0]
   139c0:	pop	{fp, pc}

000139c4 <table_get_int8@@Base>:
   139c4:	push	{fp, lr}
   139c8:	mov	fp, sp
   139cc:	bl	14eb8 <table_get_cell_ptr@@Base>
   139d0:	ldr	r0, [r0]
   139d4:	ldrsb	r0, [r0]
   139d8:	pop	{fp, pc}

000139dc <table_get_uint8@@Base>:
   139dc:	push	{fp, lr}
   139e0:	mov	fp, sp
   139e4:	bl	14eb8 <table_get_cell_ptr@@Base>
   139e8:	ldr	r0, [r0]
   139ec:	ldrb	r0, [r0]
   139f0:	pop	{fp, pc}

000139f4 <table_get_int16@@Base>:
   139f4:	push	{fp, lr}
   139f8:	mov	fp, sp
   139fc:	bl	14eb8 <table_get_cell_ptr@@Base>
   13a00:	ldr	r0, [r0]
   13a04:	ldrsh	r0, [r0]
   13a08:	pop	{fp, pc}

00013a0c <table_get_uint16@@Base>:
   13a0c:	push	{fp, lr}
   13a10:	mov	fp, sp
   13a14:	bl	14eb8 <table_get_cell_ptr@@Base>
   13a18:	ldr	r0, [r0]
   13a1c:	ldrh	r0, [r0]
   13a20:	pop	{fp, pc}

00013a24 <table_get_int32@@Base>:
   13a24:	push	{fp, lr}
   13a28:	mov	fp, sp
   13a2c:	bl	14eb8 <table_get_cell_ptr@@Base>
   13a30:	ldr	r0, [r0]
   13a34:	ldr	r0, [r0]
   13a38:	pop	{fp, pc}

00013a3c <table_get_uint32@@Base>:
   13a3c:	push	{fp, lr}
   13a40:	mov	fp, sp
   13a44:	bl	14eb8 <table_get_cell_ptr@@Base>
   13a48:	ldr	r0, [r0]
   13a4c:	ldr	r0, [r0]
   13a50:	pop	{fp, pc}

00013a54 <table_get_int64@@Base>:
   13a54:	push	{fp, lr}
   13a58:	mov	fp, sp
   13a5c:	bl	14eb8 <table_get_cell_ptr@@Base>
   13a60:	ldr	r0, [r0]
   13a64:	ldrd	r0, [r0]
   13a68:	pop	{fp, pc}

00013a6c <table_get_uint64@@Base>:
   13a6c:	push	{fp, lr}
   13a70:	mov	fp, sp
   13a74:	bl	14eb8 <table_get_cell_ptr@@Base>
   13a78:	ldr	r0, [r0]
   13a7c:	ldrd	r0, [r0]
   13a80:	pop	{fp, pc}

00013a84 <table_get_short@@Base>:
   13a84:	push	{fp, lr}
   13a88:	mov	fp, sp
   13a8c:	bl	14eb8 <table_get_cell_ptr@@Base>
   13a90:	ldr	r0, [r0]
   13a94:	ldrsh	r0, [r0]
   13a98:	pop	{fp, pc}

00013a9c <table_get_ushort@@Base>:
   13a9c:	push	{fp, lr}
   13aa0:	mov	fp, sp
   13aa4:	bl	14eb8 <table_get_cell_ptr@@Base>
   13aa8:	ldr	r0, [r0]
   13aac:	ldrh	r0, [r0]
   13ab0:	pop	{fp, pc}

00013ab4 <table_get_long@@Base>:
   13ab4:	push	{fp, lr}
   13ab8:	mov	fp, sp
   13abc:	bl	14eb8 <table_get_cell_ptr@@Base>
   13ac0:	ldr	r0, [r0]
   13ac4:	ldr	r0, [r0]
   13ac8:	pop	{fp, pc}

00013acc <table_get_ulong@@Base>:
   13acc:	push	{fp, lr}
   13ad0:	mov	fp, sp
   13ad4:	bl	14eb8 <table_get_cell_ptr@@Base>
   13ad8:	ldr	r0, [r0]
   13adc:	ldr	r0, [r0]
   13ae0:	pop	{fp, pc}

00013ae4 <table_get_llong@@Base>:
   13ae4:	push	{fp, lr}
   13ae8:	mov	fp, sp
   13aec:	bl	14eb8 <table_get_cell_ptr@@Base>
   13af0:	ldr	r0, [r0]
   13af4:	ldrd	r0, [r0]
   13af8:	pop	{fp, pc}

00013afc <table_get_ullong@@Base>:
   13afc:	push	{fp, lr}
   13b00:	mov	fp, sp
   13b04:	bl	14eb8 <table_get_cell_ptr@@Base>
   13b08:	ldr	r0, [r0]
   13b0c:	ldrd	r0, [r0]
   13b10:	pop	{fp, pc}

00013b14 <table_get_float@@Base>:
   13b14:	push	{fp, lr}
   13b18:	mov	fp, sp
   13b1c:	bl	14eb8 <table_get_cell_ptr@@Base>
   13b20:	ldr	r0, [r0]
   13b24:	vldr	s0, [r0]
   13b28:	pop	{fp, pc}

00013b2c <table_get_double@@Base>:
   13b2c:	push	{fp, lr}
   13b30:	mov	fp, sp
   13b34:	bl	14eb8 <table_get_cell_ptr@@Base>
   13b38:	ldr	r0, [r0]
   13b3c:	vldr	d0, [r0]
   13b40:	pop	{fp, pc}

00013b44 <table_get_ldouble@@Base>:
   13b44:	push	{fp, lr}
   13b48:	mov	fp, sp
   13b4c:	bl	14eb8 <table_get_cell_ptr@@Base>
   13b50:	ldr	r0, [r0]
   13b54:	vldr	d0, [r0]
   13b58:	pop	{fp, pc}

00013b5c <table_get_char@@Base>:
   13b5c:	push	{fp, lr}
   13b60:	mov	fp, sp
   13b64:	bl	14eb8 <table_get_cell_ptr@@Base>
   13b68:	ldr	r0, [r0]
   13b6c:	ldrb	r0, [r0]
   13b70:	pop	{fp, pc}

00013b74 <table_get_uchar@@Base>:
   13b74:	push	{fp, lr}
   13b78:	mov	fp, sp
   13b7c:	bl	14eb8 <table_get_cell_ptr@@Base>
   13b80:	ldr	r0, [r0]
   13b84:	ldrb	r0, [r0]
   13b88:	pop	{fp, pc}

00013b8c <table_get_string@@Base>:
   13b8c:	push	{fp, lr}
   13b90:	mov	fp, sp
   13b94:	bl	14eb8 <table_get_cell_ptr@@Base>
   13b98:	ldr	r0, [r0]
   13b9c:	pop	{fp, pc}

00013ba0 <table_get_ptr@@Base>:
   13ba0:	push	{fp, lr}
   13ba4:	mov	fp, sp
   13ba8:	bl	14eb8 <table_get_cell_ptr@@Base>
   13bac:	ldr	r0, [r0]
   13bb0:	pop	{fp, pc}

00013bb4 <table_row_init@@Base>:
   13bb4:	push	{r4, r5, fp, lr}
   13bb8:	add	fp, sp, #8
   13bbc:	mov	r4, r1
   13bc0:	ldr	r1, [r0, #12]
   13bc4:	ldr	r5, [r0, #16]
   13bc8:	lsl	r0, r1, #2
   13bcc:	bl	12004 <malloc@plt>
   13bd0:	str	r0, [r5, r4, lsl #2]
   13bd4:	pop	{r4, r5, fp, pc}

00013bd8 <table_get_row_ptr@@Base>:
   13bd8:	ldr	r0, [r0, #16]
   13bdc:	add	r0, r0, r1, lsl #2
   13be0:	bx	lr

00013be4 <table_row_destroy@@Base>:
   13be4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13be8:	add	fp, sp, #24
   13bec:	mov	r4, r1
   13bf0:	mov	r5, r0
   13bf4:	bl	12e68 <table_get_column_length@@Base>
   13bf8:	ldr	r8, [r5, #16]
   13bfc:	cmp	r0, #1
   13c00:	blt	13c28 <table_row_destroy@@Base+0x44>
   13c04:	mov	r6, r0
   13c08:	mov	r7, #0
   13c0c:	mov	r0, r5
   13c10:	mov	r1, r4
   13c14:	mov	r2, r7
   13c18:	bl	14ed4 <table_cell_destroy@@Base>
   13c1c:	add	r7, r7, #1
   13c20:	cmp	r6, r7
   13c24:	bne	13c0c <table_row_destroy@@Base+0x28>
   13c28:	ldr	r0, [r8, r4, lsl #2]
   13c2c:	cmp	r0, #0
   13c30:	beq	13c3c <table_row_destroy@@Base+0x58>
   13c34:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c38:	b	11fd4 <free@plt>
   13c3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013c40 <table_get_row_length@@Base>:
   13c40:	ldr	r0, [r0, #20]
   13c44:	bx	lr

00013c48 <table_add_row@@Base>:
   13c48:	push	{r4, r5, r6, r7, fp, lr}
   13c4c:	add	fp, sp, #16
   13c50:	ldr	r5, [r0, #20]
   13c54:	ldr	r1, [r0, #24]
   13c58:	mov	r4, r0
   13c5c:	udiv	r0, r5, r1
   13c60:	mls	r0, r0, r1, r5
   13c64:	cmp	r0, #0
   13c68:	bne	13c8c <table_add_row@@Base+0x44>
   13c6c:	ldr	r2, [r4, #28]
   13c70:	ldr	r0, [r4, #16]
   13c74:	add	r1, r2, r1
   13c78:	str	r1, [r4, #28]
   13c7c:	lsl	r1, r1, #2
   13c80:	bl	11fec <realloc@plt>
   13c84:	str	r0, [r4, #16]
   13c88:	ldr	r5, [r4, #20]
   13c8c:	mov	r0, r4
   13c90:	bl	12e68 <table_get_column_length@@Base>
   13c94:	mov	r6, r0
   13c98:	ldr	r0, [r4, #12]
   13c9c:	ldr	r7, [r4, #16]
   13ca0:	lsl	r0, r0, #2
   13ca4:	bl	12004 <malloc@plt>
   13ca8:	cmp	r6, #1
   13cac:	str	r0, [r7, r5, lsl #2]
   13cb0:	blt	13cd4 <table_add_row@@Base+0x8c>
   13cb4:	mov	r7, #0
   13cb8:	mov	r0, r4
   13cbc:	mov	r1, r5
   13cc0:	mov	r2, r7
   13cc4:	bl	14e98 <table_cell_init@@Base>
   13cc8:	add	r7, r7, #1
   13ccc:	cmp	r6, r7
   13cd0:	bne	13cb8 <table_add_row@@Base+0x70>
   13cd4:	ldr	r1, [r4, #20]
   13cd8:	mov	r0, r4
   13cdc:	mvn	r2, #0
   13ce0:	mov	r3, #2
   13ce4:	bl	12d58 <table_notify@@Base>
   13ce8:	ldr	r0, [r4, #20]
   13cec:	add	r1, r0, #1
   13cf0:	str	r1, [r4, #20]
   13cf4:	pop	{r4, r5, r6, r7, fp, pc}

00013cf8 <table_remove_row@@Base>:
   13cf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cfc:	add	fp, sp, #24
   13d00:	ldr	r8, [r0, #20]
   13d04:	mov	r4, r1
   13d08:	mov	r5, r0
   13d0c:	bl	12e68 <table_get_column_length@@Base>
   13d10:	cmp	r0, #1
   13d14:	blt	13d68 <table_remove_row@@Base+0x70>
   13d18:	mov	r6, r0
   13d1c:	mov	r7, #0
   13d20:	b	13d30 <table_remove_row@@Base+0x38>
   13d24:	add	r7, r7, #1
   13d28:	cmp	r6, r7
   13d2c:	beq	13d68 <table_remove_row@@Base+0x70>
   13d30:	mov	r0, r5
   13d34:	mov	r1, r7
   13d38:	bl	12eec <table_get_column_data_type@@Base>
   13d3c:	cmp	r0, #23
   13d40:	beq	13d24 <table_remove_row@@Base+0x2c>
   13d44:	mov	r0, r5
   13d48:	mov	r1, r4
   13d4c:	mov	r2, r7
   13d50:	bl	14eb8 <table_get_cell_ptr@@Base>
   13d54:	ldr	r0, [r0]
   13d58:	cmp	r0, #0
   13d5c:	beq	13d24 <table_remove_row@@Base+0x2c>
   13d60:	bl	11fd4 <free@plt>
   13d64:	b	13d24 <table_remove_row@@Base+0x2c>
   13d68:	ldr	r0, [r5, #16]
   13d6c:	ldr	r0, [r0, r4, lsl #2]
   13d70:	cmp	r0, #0
   13d74:	beq	13d7c <table_remove_row@@Base+0x84>
   13d78:	bl	11fd4 <free@plt>
   13d7c:	sub	r0, r8, #1
   13d80:	cmp	r0, r4
   13d84:	ble	13df4 <table_remove_row@@Base+0xfc>
   13d88:	mvn	r0, r4
   13d8c:	add	r1, r8, r0
   13d90:	sub	r0, r8, #2
   13d94:	tst	r1, #1
   13d98:	mov	r1, r4
   13d9c:	beq	13db4 <table_remove_row@@Base+0xbc>
   13da0:	ldr	r1, [r5, #16]
   13da4:	add	r2, r1, r4, lsl #2
   13da8:	ldr	r2, [r2, #4]
   13dac:	str	r2, [r1, r4, lsl #2]
   13db0:	add	r1, r4, #1
   13db4:	cmp	r0, r4
   13db8:	beq	13df4 <table_remove_row@@Base+0xfc>
   13dbc:	mvn	r0, r1
   13dc0:	lsl	r1, r1, #2
   13dc4:	add	r0, r0, r8
   13dc8:	ldr	r2, [r5, #16]
   13dcc:	subs	r0, r0, #2
   13dd0:	add	r3, r2, r1
   13dd4:	ldr	r3, [r3, #4]
   13dd8:	str	r3, [r2, r1]
   13ddc:	ldr	r2, [r5, #16]
   13de0:	add	r2, r2, r1
   13de4:	add	r1, r1, #8
   13de8:	ldr	r3, [r2, #8]
   13dec:	str	r3, [r2, #4]
   13df0:	bne	13dc8 <table_remove_row@@Base+0xd0>
   13df4:	ldr	r0, [r5, #20]
   13df8:	ldr	r1, [r5, #24]
   13dfc:	sub	r0, r0, #1
   13e00:	udiv	r2, r0, r1
   13e04:	str	r0, [r5, #20]
   13e08:	mls	r0, r2, r1, r0
   13e0c:	cmp	r0, #0
   13e10:	bne	13e30 <table_remove_row@@Base+0x138>
   13e14:	ldr	r2, [r5, #28]
   13e18:	ldr	r0, [r5, #16]
   13e1c:	sub	r1, r2, r1
   13e20:	str	r1, [r5, #28]
   13e24:	lsl	r1, r1, #2
   13e28:	bl	11fec <realloc@plt>
   13e2c:	str	r0, [r5, #16]
   13e30:	mov	r0, r5
   13e34:	mov	r1, r4
   13e38:	mvn	r2, #0
   13e3c:	mov	r3, #4
   13e40:	bl	12d58 <table_notify@@Base>
   13e44:	mov	r0, #0
   13e48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013e4c <table_set_row_ptr@@Base>:
   13e4c:	ldr	r2, [r2]
   13e50:	ldr	r0, [r0, #16]
   13e54:	str	r2, [r0, r1, lsl #2]
   13e58:	bx	lr

00013e5c <table_set@@Base>:
   13e5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e60:	add	fp, sp, #24
   13e64:	mov	r8, r3
   13e68:	mov	r4, r2
   13e6c:	mov	r9, r1
   13e70:	mov	r6, r0
   13e74:	bl	14eb8 <table_get_cell_ptr@@Base>
   13e78:	mov	r5, r0
   13e7c:	mov	r0, r6
   13e80:	mov	r1, r4
   13e84:	bl	12e40 <table_get_col_ptr@@Base>
   13e88:	ldr	r1, [fp, #8]
   13e8c:	mvn	r7, #0
   13e90:	cmp	r1, #23
   13e94:	bhi	14158 <table_set@@Base+0x2fc>
   13e98:	add	r2, pc, #0
   13e9c:	ldr	pc, [r2, r1, lsl #2]
   13ea0:	andeq	r3, r1, r0, lsl #30
   13ea4:	andeq	r3, r1, r0, lsl pc
   13ea8:	andeq	r3, r1, r0, lsr #30
   13eac:	andeq	r3, r1, r0, lsr pc
   13eb0:	andeq	r3, r1, r0, asr #30
   13eb4:	andeq	r3, r1, r0, asr pc
   13eb8:	andeq	r3, r1, r0, ror #30
   13ebc:	andeq	r3, r1, r0, ror pc
   13ec0:	andeq	r3, r1, r0, lsl #31
   13ec4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ec8:	andeq	r3, r1, r0, lsr #31
   13ecc:			; <UNDEFINED> instruction: 0x00013fb0
   13ed0:	andeq	r3, r1, r8, ror #31
   13ed4:	strdeq	r3, [r1], -r8
   13ed8:	andeq	r4, r1, r8
   13edc:	andeq	r4, r1, r8, lsl r0
   13ee0:	andeq	r4, r1, r8, lsr #32
   13ee4:	andeq	r4, r1, r0, rrx
   13ee8:	andeq	r4, r1, r0, ror r0
   13eec:	strheq	r4, [r1], -r0
   13ef0:	andeq	r4, r1, r0, asr #1
   13ef4:	ldrdeq	r4, [r1], -r0
   13ef8:	andeq	r4, r1, ip, lsl #2
   13efc:	andeq	r4, r1, r0, ror #2
   13f00:	ldr	r0, [r0, #4]
   13f04:	cmp	r0, #0
   13f08:	bne	14158 <table_set@@Base+0x2fc>
   13f0c:	b	14034 <table_set@@Base+0x1d8>
   13f10:	ldr	r0, [r0, #4]
   13f14:	cmp	r0, #1
   13f18:	beq	14034 <table_set@@Base+0x1d8>
   13f1c:	b	14158 <table_set@@Base+0x2fc>
   13f20:	ldr	r0, [r0, #4]
   13f24:	cmp	r0, #2
   13f28:	beq	14118 <table_set@@Base+0x2bc>
   13f2c:	b	14158 <table_set@@Base+0x2fc>
   13f30:	ldr	r0, [r0, #4]
   13f34:	cmp	r0, #3
   13f38:	beq	14118 <table_set@@Base+0x2bc>
   13f3c:	b	14158 <table_set@@Base+0x2fc>
   13f40:	ldr	r0, [r0, #4]
   13f44:	cmp	r0, #4
   13f48:	beq	13fbc <table_set@@Base+0x160>
   13f4c:	b	14158 <table_set@@Base+0x2fc>
   13f50:	ldr	r0, [r0, #4]
   13f54:	cmp	r0, #5
   13f58:	beq	13fbc <table_set@@Base+0x160>
   13f5c:	b	14158 <table_set@@Base+0x2fc>
   13f60:	ldr	r0, [r0, #4]
   13f64:	cmp	r0, #6
   13f68:	beq	14034 <table_set@@Base+0x1d8>
   13f6c:	b	14158 <table_set@@Base+0x2fc>
   13f70:	ldr	r0, [r0, #4]
   13f74:	cmp	r0, #7
   13f78:	beq	14034 <table_set@@Base+0x1d8>
   13f7c:	b	14158 <table_set@@Base+0x2fc>
   13f80:	ldr	r0, [r0, #4]
   13f84:	cmp	r0, #8
   13f88:	beq	1407c <table_set@@Base+0x220>
   13f8c:	b	14158 <table_set@@Base+0x2fc>
   13f90:	ldr	r0, [r0, #4]
   13f94:	cmp	r0, #9
   13f98:	beq	1407c <table_set@@Base+0x220>
   13f9c:	b	14158 <table_set@@Base+0x2fc>
   13fa0:	ldr	r0, [r0, #4]
   13fa4:	cmp	r0, #10
   13fa8:	beq	13fbc <table_set@@Base+0x160>
   13fac:	b	14158 <table_set@@Base+0x2fc>
   13fb0:	ldr	r0, [r0, #4]
   13fb4:	cmp	r0, #11
   13fb8:	bne	14158 <table_set@@Base+0x2fc>
   13fbc:	ldr	r0, [r5]
   13fc0:	cmp	r0, #0
   13fc4:	bne	13fdc <table_set@@Base+0x180>
   13fc8:	mov	r0, #2
   13fcc:	bl	12004 <malloc@plt>
   13fd0:	cmp	r0, #0
   13fd4:	str	r0, [r5]
   13fd8:	beq	14158 <table_set@@Base+0x2fc>
   13fdc:	ldrh	r1, [r8]
   13fe0:	strh	r1, [r0]
   13fe4:	b	14140 <table_set@@Base+0x2e4>
   13fe8:	ldr	r0, [r0, #4]
   13fec:	cmp	r0, #12
   13ff0:	beq	14034 <table_set@@Base+0x1d8>
   13ff4:	b	14158 <table_set@@Base+0x2fc>
   13ff8:	ldr	r0, [r0, #4]
   13ffc:	cmp	r0, #13
   14000:	beq	14034 <table_set@@Base+0x1d8>
   14004:	b	14158 <table_set@@Base+0x2fc>
   14008:	ldr	r0, [r0, #4]
   1400c:	cmp	r0, #14
   14010:	beq	1407c <table_set@@Base+0x220>
   14014:	b	14158 <table_set@@Base+0x2fc>
   14018:	ldr	r0, [r0, #4]
   1401c:	cmp	r0, #15
   14020:	beq	1407c <table_set@@Base+0x220>
   14024:	b	14158 <table_set@@Base+0x2fc>
   14028:	ldr	r0, [r0, #4]
   1402c:	cmp	r0, #16
   14030:	bne	14158 <table_set@@Base+0x2fc>
   14034:	ldr	r0, [r5]
   14038:	cmp	r0, #0
   1403c:	bne	14054 <table_set@@Base+0x1f8>
   14040:	mov	r0, #4
   14044:	bl	12004 <malloc@plt>
   14048:	cmp	r0, #0
   1404c:	str	r0, [r5]
   14050:	beq	14158 <table_set@@Base+0x2fc>
   14054:	ldr	r1, [r8]
   14058:	str	r1, [r0]
   1405c:	b	14140 <table_set@@Base+0x2e4>
   14060:	ldr	r0, [r0, #4]
   14064:	cmp	r0, #17
   14068:	beq	1407c <table_set@@Base+0x220>
   1406c:	b	14158 <table_set@@Base+0x2fc>
   14070:	ldr	r0, [r0, #4]
   14074:	cmp	r0, #18
   14078:	bne	14158 <table_set@@Base+0x2fc>
   1407c:	ldr	r0, [r5]
   14080:	cmp	r0, #0
   14084:	bne	1409c <table_set@@Base+0x240>
   14088:	mov	r0, #8
   1408c:	bl	12004 <malloc@plt>
   14090:	cmp	r0, #0
   14094:	str	r0, [r5]
   14098:	beq	14158 <table_set@@Base+0x2fc>
   1409c:	ldr	r1, [r8]
   140a0:	ldr	r2, [r8, #4]
   140a4:	str	r2, [r0, #4]
   140a8:	str	r1, [r0]
   140ac:	b	14140 <table_set@@Base+0x2e4>
   140b0:	ldr	r0, [r0, #4]
   140b4:	cmp	r0, #19
   140b8:	beq	14118 <table_set@@Base+0x2bc>
   140bc:	b	14158 <table_set@@Base+0x2fc>
   140c0:	ldr	r0, [r0, #4]
   140c4:	cmp	r0, #20
   140c8:	beq	14118 <table_set@@Base+0x2bc>
   140cc:	b	14158 <table_set@@Base+0x2fc>
   140d0:	ldr	r0, [r0, #4]
   140d4:	cmp	r0, #21
   140d8:	bne	14158 <table_set@@Base+0x2fc>
   140dc:	mov	r0, r8
   140e0:	bl	12028 <strlen@plt>
   140e4:	ldr	r2, [r5]
   140e8:	add	r1, r0, #1
   140ec:	mov	r0, r2
   140f0:	bl	11fec <realloc@plt>
   140f4:	cmp	r0, #0
   140f8:	str	r0, [r5]
   140fc:	beq	14158 <table_set@@Base+0x2fc>
   14100:	mov	r1, r8
   14104:	bl	11ff8 <strcpy@plt>
   14108:	b	14140 <table_set@@Base+0x2e4>
   1410c:	ldr	r0, [r0, #4]
   14110:	cmp	r0, #22
   14114:	bne	14158 <table_set@@Base+0x2fc>
   14118:	ldr	r0, [r5]
   1411c:	cmp	r0, #0
   14120:	bne	14138 <table_set@@Base+0x2dc>
   14124:	mov	r0, #1
   14128:	bl	12004 <malloc@plt>
   1412c:	cmp	r0, #0
   14130:	str	r0, [r5]
   14134:	beq	14158 <table_set@@Base+0x2fc>
   14138:	ldrb	r1, [r8]
   1413c:	strb	r1, [r0]
   14140:	mov	r0, r6
   14144:	mov	r1, r9
   14148:	mov	r2, r4
   1414c:	mov	r3, #1
   14150:	bl	12d58 <table_notify@@Base>
   14154:	mov	r7, #0
   14158:	mov	r0, r7
   1415c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14160:	ldr	r0, [r0, #4]
   14164:	cmp	r0, #23
   14168:	bne	14158 <table_set@@Base+0x2fc>
   1416c:	str	r8, [r5]
   14170:	b	14140 <table_set@@Base+0x2e4>

00014174 <table_set_bool@@Base>:
   14174:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14178:	add	fp, sp, #24
   1417c:	mov	r8, r3
   14180:	mov	r4, r2
   14184:	mov	r9, r1
   14188:	mov	r6, r0
   1418c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14190:	mov	r5, r0
   14194:	mov	r0, r6
   14198:	mov	r1, r4
   1419c:	bl	12e40 <table_get_col_ptr@@Base>
   141a0:	ldr	r0, [r0, #4]
   141a4:	mvn	r7, #0
   141a8:	cmp	r0, #22
   141ac:	bne	141ec <table_set_bool@@Base+0x78>
   141b0:	ldr	r0, [r5]
   141b4:	cmp	r0, #0
   141b8:	bne	141d0 <table_set_bool@@Base+0x5c>
   141bc:	mov	r0, #1
   141c0:	bl	12004 <malloc@plt>
   141c4:	cmp	r0, #0
   141c8:	str	r0, [r5]
   141cc:	beq	141ec <table_set_bool@@Base+0x78>
   141d0:	strb	r8, [r0]
   141d4:	mov	r0, r6
   141d8:	mov	r1, r9
   141dc:	mov	r2, r4
   141e0:	mov	r3, #1
   141e4:	bl	12d58 <table_notify@@Base>
   141e8:	mov	r7, #0
   141ec:	mov	r0, r7
   141f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141f4 <table_set_int@@Base>:
   141f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141f8:	add	fp, sp, #24
   141fc:	mov	r8, r3
   14200:	mov	r4, r2
   14204:	mov	r5, r1
   14208:	mov	r6, r0
   1420c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14210:	mov	r9, r0
   14214:	mov	r0, r6
   14218:	mov	r1, r4
   1421c:	bl	12e40 <table_get_col_ptr@@Base>
   14220:	ldr	r0, [r0, #4]
   14224:	mvn	r7, #0
   14228:	cmp	r0, #0
   1422c:	bne	1426c <table_set_int@@Base+0x78>
   14230:	ldr	r0, [r9]
   14234:	cmp	r0, #0
   14238:	bne	14250 <table_set_int@@Base+0x5c>
   1423c:	mov	r0, #4
   14240:	bl	12004 <malloc@plt>
   14244:	cmp	r0, #0
   14248:	str	r0, [r9]
   1424c:	beq	1426c <table_set_int@@Base+0x78>
   14250:	str	r8, [r0]
   14254:	mov	r0, r6
   14258:	mov	r1, r5
   1425c:	mov	r2, r4
   14260:	mov	r3, #1
   14264:	bl	12d58 <table_notify@@Base>
   14268:	mov	r7, #0
   1426c:	mov	r0, r7
   14270:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014274 <table_set_uint@@Base>:
   14274:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14278:	add	fp, sp, #24
   1427c:	mov	r8, r3
   14280:	mov	r4, r2
   14284:	mov	r5, r1
   14288:	mov	r6, r0
   1428c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14290:	mov	r9, r0
   14294:	mov	r0, r6
   14298:	mov	r1, r4
   1429c:	bl	12e40 <table_get_col_ptr@@Base>
   142a0:	ldr	r0, [r0, #4]
   142a4:	mvn	r7, #0
   142a8:	cmp	r0, #1
   142ac:	bne	142ec <table_set_uint@@Base+0x78>
   142b0:	ldr	r0, [r9]
   142b4:	cmp	r0, #0
   142b8:	bne	142d0 <table_set_uint@@Base+0x5c>
   142bc:	mov	r0, #4
   142c0:	bl	12004 <malloc@plt>
   142c4:	cmp	r0, #0
   142c8:	str	r0, [r9]
   142cc:	beq	142ec <table_set_uint@@Base+0x78>
   142d0:	str	r8, [r0]
   142d4:	mov	r0, r6
   142d8:	mov	r1, r5
   142dc:	mov	r2, r4
   142e0:	mov	r3, #1
   142e4:	bl	12d58 <table_notify@@Base>
   142e8:	mov	r7, #0
   142ec:	mov	r0, r7
   142f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142f4 <table_set_int8@@Base>:
   142f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142f8:	add	fp, sp, #24
   142fc:	mov	r8, r3
   14300:	mov	r4, r2
   14304:	mov	r9, r1
   14308:	mov	r6, r0
   1430c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14310:	mov	r5, r0
   14314:	mov	r0, r6
   14318:	mov	r1, r4
   1431c:	bl	12e40 <table_get_col_ptr@@Base>
   14320:	ldr	r0, [r0, #4]
   14324:	mvn	r7, #0
   14328:	cmp	r0, #2
   1432c:	bne	1436c <table_set_int8@@Base+0x78>
   14330:	ldr	r0, [r5]
   14334:	cmp	r0, #0
   14338:	bne	14350 <table_set_int8@@Base+0x5c>
   1433c:	mov	r0, #1
   14340:	bl	12004 <malloc@plt>
   14344:	cmp	r0, #0
   14348:	str	r0, [r5]
   1434c:	beq	1436c <table_set_int8@@Base+0x78>
   14350:	strb	r8, [r0]
   14354:	mov	r0, r6
   14358:	mov	r1, r9
   1435c:	mov	r2, r4
   14360:	mov	r3, #1
   14364:	bl	12d58 <table_notify@@Base>
   14368:	mov	r7, #0
   1436c:	mov	r0, r7
   14370:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014374 <table_set_uint8@@Base>:
   14374:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14378:	add	fp, sp, #24
   1437c:	mov	r8, r3
   14380:	mov	r4, r2
   14384:	mov	r9, r1
   14388:	mov	r6, r0
   1438c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14390:	mov	r5, r0
   14394:	mov	r0, r6
   14398:	mov	r1, r4
   1439c:	bl	12e40 <table_get_col_ptr@@Base>
   143a0:	ldr	r0, [r0, #4]
   143a4:	mvn	r7, #0
   143a8:	cmp	r0, #3
   143ac:	bne	143ec <table_set_uint8@@Base+0x78>
   143b0:	ldr	r0, [r5]
   143b4:	cmp	r0, #0
   143b8:	bne	143d0 <table_set_uint8@@Base+0x5c>
   143bc:	mov	r0, #1
   143c0:	bl	12004 <malloc@plt>
   143c4:	cmp	r0, #0
   143c8:	str	r0, [r5]
   143cc:	beq	143ec <table_set_uint8@@Base+0x78>
   143d0:	strb	r8, [r0]
   143d4:	mov	r0, r6
   143d8:	mov	r1, r9
   143dc:	mov	r2, r4
   143e0:	mov	r3, #1
   143e4:	bl	12d58 <table_notify@@Base>
   143e8:	mov	r7, #0
   143ec:	mov	r0, r7
   143f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143f4 <table_set_int16@@Base>:
   143f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143f8:	add	fp, sp, #24
   143fc:	mov	r8, r3
   14400:	mov	r4, r2
   14404:	mov	r9, r1
   14408:	mov	r6, r0
   1440c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14410:	mov	r5, r0
   14414:	mov	r0, r6
   14418:	mov	r1, r4
   1441c:	bl	12e40 <table_get_col_ptr@@Base>
   14420:	ldr	r0, [r0, #4]
   14424:	mvn	r7, #0
   14428:	cmp	r0, #4
   1442c:	bne	1446c <table_set_int16@@Base+0x78>
   14430:	ldr	r0, [r5]
   14434:	cmp	r0, #0
   14438:	bne	14450 <table_set_int16@@Base+0x5c>
   1443c:	mov	r0, #2
   14440:	bl	12004 <malloc@plt>
   14444:	cmp	r0, #0
   14448:	str	r0, [r5]
   1444c:	beq	1446c <table_set_int16@@Base+0x78>
   14450:	strh	r8, [r0]
   14454:	mov	r0, r6
   14458:	mov	r1, r9
   1445c:	mov	r2, r4
   14460:	mov	r3, #1
   14464:	bl	12d58 <table_notify@@Base>
   14468:	mov	r7, #0
   1446c:	mov	r0, r7
   14470:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014474 <table_set_uint16@@Base>:
   14474:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14478:	add	fp, sp, #24
   1447c:	mov	r8, r3
   14480:	mov	r4, r2
   14484:	mov	r9, r1
   14488:	mov	r6, r0
   1448c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14490:	mov	r5, r0
   14494:	mov	r0, r6
   14498:	mov	r1, r4
   1449c:	bl	12e40 <table_get_col_ptr@@Base>
   144a0:	ldr	r0, [r0, #4]
   144a4:	mvn	r7, #0
   144a8:	cmp	r0, #5
   144ac:	bne	144ec <table_set_uint16@@Base+0x78>
   144b0:	ldr	r0, [r5]
   144b4:	cmp	r0, #0
   144b8:	bne	144d0 <table_set_uint16@@Base+0x5c>
   144bc:	mov	r0, #2
   144c0:	bl	12004 <malloc@plt>
   144c4:	cmp	r0, #0
   144c8:	str	r0, [r5]
   144cc:	beq	144ec <table_set_uint16@@Base+0x78>
   144d0:	strh	r8, [r0]
   144d4:	mov	r0, r6
   144d8:	mov	r1, r9
   144dc:	mov	r2, r4
   144e0:	mov	r3, #1
   144e4:	bl	12d58 <table_notify@@Base>
   144e8:	mov	r7, #0
   144ec:	mov	r0, r7
   144f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144f4 <table_set_int32@@Base>:
   144f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144f8:	add	fp, sp, #24
   144fc:	mov	r8, r3
   14500:	mov	r4, r2
   14504:	mov	r5, r1
   14508:	mov	r6, r0
   1450c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14510:	mov	r9, r0
   14514:	mov	r0, r6
   14518:	mov	r1, r4
   1451c:	bl	12e40 <table_get_col_ptr@@Base>
   14520:	ldr	r0, [r0, #4]
   14524:	mvn	r7, #0
   14528:	cmp	r0, #6
   1452c:	bne	1456c <table_set_int32@@Base+0x78>
   14530:	ldr	r0, [r9]
   14534:	cmp	r0, #0
   14538:	bne	14550 <table_set_int32@@Base+0x5c>
   1453c:	mov	r0, #4
   14540:	bl	12004 <malloc@plt>
   14544:	cmp	r0, #0
   14548:	str	r0, [r9]
   1454c:	beq	1456c <table_set_int32@@Base+0x78>
   14550:	str	r8, [r0]
   14554:	mov	r0, r6
   14558:	mov	r1, r5
   1455c:	mov	r2, r4
   14560:	mov	r3, #1
   14564:	bl	12d58 <table_notify@@Base>
   14568:	mov	r7, #0
   1456c:	mov	r0, r7
   14570:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014574 <table_set_uint32@@Base>:
   14574:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14578:	add	fp, sp, #24
   1457c:	mov	r8, r3
   14580:	mov	r4, r2
   14584:	mov	r5, r1
   14588:	mov	r6, r0
   1458c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14590:	mov	r9, r0
   14594:	mov	r0, r6
   14598:	mov	r1, r4
   1459c:	bl	12e40 <table_get_col_ptr@@Base>
   145a0:	ldr	r0, [r0, #4]
   145a4:	mvn	r7, #0
   145a8:	cmp	r0, #7
   145ac:	bne	145ec <table_set_uint32@@Base+0x78>
   145b0:	ldr	r0, [r9]
   145b4:	cmp	r0, #0
   145b8:	bne	145d0 <table_set_uint32@@Base+0x5c>
   145bc:	mov	r0, #4
   145c0:	bl	12004 <malloc@plt>
   145c4:	cmp	r0, #0
   145c8:	str	r0, [r9]
   145cc:	beq	145ec <table_set_uint32@@Base+0x78>
   145d0:	str	r8, [r0]
   145d4:	mov	r0, r6
   145d8:	mov	r1, r5
   145dc:	mov	r2, r4
   145e0:	mov	r3, #1
   145e4:	bl	12d58 <table_notify@@Base>
   145e8:	mov	r7, #0
   145ec:	mov	r0, r7
   145f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145f4 <table_set_int64@@Base>:
   145f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145f8:	add	fp, sp, #24
   145fc:	mov	r4, r2
   14600:	mov	r8, r1
   14604:	mov	r6, r0
   14608:	bl	14eb8 <table_get_cell_ptr@@Base>
   1460c:	mov	r5, r0
   14610:	mov	r0, r6
   14614:	mov	r1, r4
   14618:	bl	12e40 <table_get_col_ptr@@Base>
   1461c:	ldr	r0, [r0, #4]
   14620:	mvn	r7, #0
   14624:	cmp	r0, #8
   14628:	bne	14674 <table_set_int64@@Base+0x80>
   1462c:	ldr	r0, [r5]
   14630:	cmp	r0, #0
   14634:	bne	1464c <table_set_int64@@Base+0x58>
   14638:	mov	r0, #8
   1463c:	bl	12004 <malloc@plt>
   14640:	cmp	r0, #0
   14644:	str	r0, [r5]
   14648:	beq	14674 <table_set_int64@@Base+0x80>
   1464c:	ldr	r1, [fp, #12]
   14650:	ldr	r2, [fp, #8]
   14654:	mov	r3, #1
   14658:	str	r2, [r0]
   1465c:	str	r1, [r0, #4]
   14660:	mov	r0, r6
   14664:	mov	r1, r8
   14668:	mov	r2, r4
   1466c:	bl	12d58 <table_notify@@Base>
   14670:	mov	r7, #0
   14674:	mov	r0, r7
   14678:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001467c <table_set_uint64@@Base>:
   1467c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14680:	add	fp, sp, #24
   14684:	mov	r4, r2
   14688:	mov	r8, r1
   1468c:	mov	r6, r0
   14690:	bl	14eb8 <table_get_cell_ptr@@Base>
   14694:	mov	r5, r0
   14698:	mov	r0, r6
   1469c:	mov	r1, r4
   146a0:	bl	12e40 <table_get_col_ptr@@Base>
   146a4:	ldr	r0, [r0, #4]
   146a8:	mvn	r7, #0
   146ac:	cmp	r0, #9
   146b0:	bne	146fc <table_set_uint64@@Base+0x80>
   146b4:	ldr	r0, [r5]
   146b8:	cmp	r0, #0
   146bc:	bne	146d4 <table_set_uint64@@Base+0x58>
   146c0:	mov	r0, #8
   146c4:	bl	12004 <malloc@plt>
   146c8:	cmp	r0, #0
   146cc:	str	r0, [r5]
   146d0:	beq	146fc <table_set_uint64@@Base+0x80>
   146d4:	ldr	r1, [fp, #12]
   146d8:	ldr	r2, [fp, #8]
   146dc:	mov	r3, #1
   146e0:	str	r2, [r0]
   146e4:	str	r1, [r0, #4]
   146e8:	mov	r0, r6
   146ec:	mov	r1, r8
   146f0:	mov	r2, r4
   146f4:	bl	12d58 <table_notify@@Base>
   146f8:	mov	r7, #0
   146fc:	mov	r0, r7
   14700:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014704 <table_set_short@@Base>:
   14704:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14708:	add	fp, sp, #24
   1470c:	mov	r8, r3
   14710:	mov	r4, r2
   14714:	mov	r9, r1
   14718:	mov	r6, r0
   1471c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14720:	mov	r5, r0
   14724:	mov	r0, r6
   14728:	mov	r1, r4
   1472c:	bl	12e40 <table_get_col_ptr@@Base>
   14730:	ldr	r0, [r0, #4]
   14734:	mvn	r7, #0
   14738:	cmp	r0, #10
   1473c:	bne	1477c <table_set_short@@Base+0x78>
   14740:	ldr	r0, [r5]
   14744:	cmp	r0, #0
   14748:	bne	14760 <table_set_short@@Base+0x5c>
   1474c:	mov	r0, #2
   14750:	bl	12004 <malloc@plt>
   14754:	cmp	r0, #0
   14758:	str	r0, [r5]
   1475c:	beq	1477c <table_set_short@@Base+0x78>
   14760:	strh	r8, [r0]
   14764:	mov	r0, r6
   14768:	mov	r1, r9
   1476c:	mov	r2, r4
   14770:	mov	r3, #1
   14774:	bl	12d58 <table_notify@@Base>
   14778:	mov	r7, #0
   1477c:	mov	r0, r7
   14780:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014784 <table_set_ushort@@Base>:
   14784:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14788:	add	fp, sp, #24
   1478c:	mov	r8, r3
   14790:	mov	r4, r2
   14794:	mov	r9, r1
   14798:	mov	r6, r0
   1479c:	bl	14eb8 <table_get_cell_ptr@@Base>
   147a0:	mov	r5, r0
   147a4:	mov	r0, r6
   147a8:	mov	r1, r4
   147ac:	bl	12e40 <table_get_col_ptr@@Base>
   147b0:	ldr	r0, [r0, #4]
   147b4:	mvn	r7, #0
   147b8:	cmp	r0, #11
   147bc:	bne	147fc <table_set_ushort@@Base+0x78>
   147c0:	ldr	r0, [r5]
   147c4:	cmp	r0, #0
   147c8:	bne	147e0 <table_set_ushort@@Base+0x5c>
   147cc:	mov	r0, #2
   147d0:	bl	12004 <malloc@plt>
   147d4:	cmp	r0, #0
   147d8:	str	r0, [r5]
   147dc:	beq	147fc <table_set_ushort@@Base+0x78>
   147e0:	strh	r8, [r0]
   147e4:	mov	r0, r6
   147e8:	mov	r1, r9
   147ec:	mov	r2, r4
   147f0:	mov	r3, #1
   147f4:	bl	12d58 <table_notify@@Base>
   147f8:	mov	r7, #0
   147fc:	mov	r0, r7
   14800:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014804 <table_set_long@@Base>:
   14804:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14808:	add	fp, sp, #24
   1480c:	mov	r8, r3
   14810:	mov	r4, r2
   14814:	mov	r5, r1
   14818:	mov	r6, r0
   1481c:	bl	14eb8 <table_get_cell_ptr@@Base>
   14820:	mov	r9, r0
   14824:	mov	r0, r6
   14828:	mov	r1, r4
   1482c:	bl	12e40 <table_get_col_ptr@@Base>
   14830:	ldr	r0, [r0, #4]
   14834:	mvn	r7, #0
   14838:	cmp	r0, #12
   1483c:	bne	1487c <table_set_long@@Base+0x78>
   14840:	ldr	r0, [r9]
   14844:	cmp	r0, #0
   14848:	bne	14860 <table_set_long@@Base+0x5c>
   1484c:	mov	r0, #4
   14850:	bl	12004 <malloc@plt>
   14854:	cmp	r0, #0
   14858:	str	r0, [r9]
   1485c:	beq	1487c <table_set_long@@Base+0x78>
   14860:	str	r8, [r0]
   14864:	mov	r0, r6
   14868:	mov	r1, r5
   1486c:	mov	r2, r4
   14870:	mov	r3, #1
   14874:	bl	12d58 <table_notify@@Base>
   14878:	mov	r7, #0
   1487c:	mov	r0, r7
   14880:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014884 <table_set_ulong@@Base>:
   14884:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14888:	add	fp, sp, #24
   1488c:	mov	r8, r3
   14890:	mov	r4, r2
   14894:	mov	r5, r1
   14898:	mov	r6, r0
   1489c:	bl	14eb8 <table_get_cell_ptr@@Base>
   148a0:	mov	r9, r0
   148a4:	mov	r0, r6
   148a8:	mov	r1, r4
   148ac:	bl	12e40 <table_get_col_ptr@@Base>
   148b0:	ldr	r0, [r0, #4]
   148b4:	mvn	r7, #0
   148b8:	cmp	r0, #13
   148bc:	bne	148fc <table_set_ulong@@Base+0x78>
   148c0:	ldr	r0, [r9]
   148c4:	cmp	r0, #0
   148c8:	bne	148e0 <table_set_ulong@@Base+0x5c>
   148cc:	mov	r0, #4
   148d0:	bl	12004 <malloc@plt>
   148d4:	cmp	r0, #0
   148d8:	str	r0, [r9]
   148dc:	beq	148fc <table_set_ulong@@Base+0x78>
   148e0:	str	r8, [r0]
   148e4:	mov	r0, r6
   148e8:	mov	r1, r5
   148ec:	mov	r2, r4
   148f0:	mov	r3, #1
   148f4:	bl	12d58 <table_notify@@Base>
   148f8:	mov	r7, #0
   148fc:	mov	r0, r7
   14900:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014904 <table_set_llong@@Base>:
   14904:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14908:	add	fp, sp, #24
   1490c:	mov	r4, r2
   14910:	mov	r8, r1
   14914:	mov	r6, r0
   14918:	bl	14eb8 <table_get_cell_ptr@@Base>
   1491c:	mov	r5, r0
   14920:	mov	r0, r6
   14924:	mov	r1, r4
   14928:	bl	12e40 <table_get_col_ptr@@Base>
   1492c:	ldr	r0, [r0, #4]
   14930:	mvn	r7, #0
   14934:	cmp	r0, #14
   14938:	bne	14984 <table_set_llong@@Base+0x80>
   1493c:	ldr	r0, [r5]
   14940:	cmp	r0, #0
   14944:	bne	1495c <table_set_llong@@Base+0x58>
   14948:	mov	r0, #8
   1494c:	bl	12004 <malloc@plt>
   14950:	cmp	r0, #0
   14954:	str	r0, [r5]
   14958:	beq	14984 <table_set_llong@@Base+0x80>
   1495c:	ldr	r1, [fp, #12]
   14960:	ldr	r2, [fp, #8]
   14964:	mov	r3, #1
   14968:	str	r2, [r0]
   1496c:	str	r1, [r0, #4]
   14970:	mov	r0, r6
   14974:	mov	r1, r8
   14978:	mov	r2, r4
   1497c:	bl	12d58 <table_notify@@Base>
   14980:	mov	r7, #0
   14984:	mov	r0, r7
   14988:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001498c <table_set_ullong@@Base>:
   1498c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14990:	add	fp, sp, #24
   14994:	mov	r4, r2
   14998:	mov	r8, r1
   1499c:	mov	r6, r0
   149a0:	bl	14eb8 <table_get_cell_ptr@@Base>
   149a4:	mov	r5, r0
   149a8:	mov	r0, r6
   149ac:	mov	r1, r4
   149b0:	bl	12e40 <table_get_col_ptr@@Base>
   149b4:	ldr	r0, [r0, #4]
   149b8:	mvn	r7, #0
   149bc:	cmp	r0, #15
   149c0:	bne	14a0c <table_set_ullong@@Base+0x80>
   149c4:	ldr	r0, [r5]
   149c8:	cmp	r0, #0
   149cc:	bne	149e4 <table_set_ullong@@Base+0x58>
   149d0:	mov	r0, #8
   149d4:	bl	12004 <malloc@plt>
   149d8:	cmp	r0, #0
   149dc:	str	r0, [r5]
   149e0:	beq	14a0c <table_set_ullong@@Base+0x80>
   149e4:	ldr	r1, [fp, #12]
   149e8:	ldr	r2, [fp, #8]
   149ec:	mov	r3, #1
   149f0:	str	r2, [r0]
   149f4:	str	r1, [r0, #4]
   149f8:	mov	r0, r6
   149fc:	mov	r1, r8
   14a00:	mov	r2, r4
   14a04:	bl	12d58 <table_notify@@Base>
   14a08:	mov	r7, #0
   14a0c:	mov	r0, r7
   14a10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a14 <table_set_float@@Base>:
   14a14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a18:	add	fp, sp, #24
   14a1c:	vpush	{d8}
   14a20:	vmov.f32	s16, s0
   14a24:	mov	r4, r2
   14a28:	mov	r8, r1
   14a2c:	mov	r6, r0
   14a30:	bl	14eb8 <table_get_cell_ptr@@Base>
   14a34:	mov	r5, r0
   14a38:	mov	r0, r6
   14a3c:	mov	r1, r4
   14a40:	bl	12e40 <table_get_col_ptr@@Base>
   14a44:	ldr	r0, [r0, #4]
   14a48:	mvn	r7, #0
   14a4c:	cmp	r0, #16
   14a50:	bne	14a94 <table_set_float@@Base+0x80>
   14a54:	ldr	r0, [r5]
   14a58:	cmp	r0, #0
   14a5c:	bne	14a74 <table_set_float@@Base+0x60>
   14a60:	mov	r0, #4
   14a64:	bl	12004 <malloc@plt>
   14a68:	cmp	r0, #0
   14a6c:	str	r0, [r5]
   14a70:	beq	14a94 <table_set_float@@Base+0x80>
   14a74:	vmov	r1, s16
   14a78:	mov	r2, r4
   14a7c:	mov	r3, #1
   14a80:	str	r1, [r0]
   14a84:	mov	r0, r6
   14a88:	mov	r1, r8
   14a8c:	bl	12d58 <table_notify@@Base>
   14a90:	mov	r7, #0
   14a94:	mov	r0, r7
   14a98:	vpop	{d8}
   14a9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014aa0 <table_set_double@@Base>:
   14aa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14aa4:	add	fp, sp, #24
   14aa8:	vpush	{d8}
   14aac:	vorr	d8, d0, d0
   14ab0:	mov	r4, r2
   14ab4:	mov	r5, r1
   14ab8:	mov	r6, r0
   14abc:	bl	14eb8 <table_get_cell_ptr@@Base>
   14ac0:	mov	r8, r0
   14ac4:	mov	r0, r6
   14ac8:	mov	r1, r4
   14acc:	bl	12e40 <table_get_col_ptr@@Base>
   14ad0:	ldr	r0, [r0, #4]
   14ad4:	mvn	r7, #0
   14ad8:	cmp	r0, #17
   14adc:	bne	14b1c <table_set_double@@Base+0x7c>
   14ae0:	ldr	r0, [r8]
   14ae4:	cmp	r0, #0
   14ae8:	bne	14b00 <table_set_double@@Base+0x60>
   14aec:	mov	r0, #8
   14af0:	bl	12004 <malloc@plt>
   14af4:	cmp	r0, #0
   14af8:	str	r0, [r8]
   14afc:	beq	14b1c <table_set_double@@Base+0x7c>
   14b00:	vst1.8	{d8}, [r0]
   14b04:	mov	r0, r6
   14b08:	mov	r1, r5
   14b0c:	mov	r2, r4
   14b10:	mov	r3, #1
   14b14:	bl	12d58 <table_notify@@Base>
   14b18:	mov	r7, #0
   14b1c:	mov	r0, r7
   14b20:	vpop	{d8}
   14b24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b28 <table_set_ldouble@@Base>:
   14b28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b2c:	add	fp, sp, #24
   14b30:	vpush	{d8}
   14b34:	vorr	d8, d0, d0
   14b38:	mov	r4, r2
   14b3c:	mov	r5, r1
   14b40:	mov	r6, r0
   14b44:	bl	14eb8 <table_get_cell_ptr@@Base>
   14b48:	mov	r8, r0
   14b4c:	mov	r0, r6
   14b50:	mov	r1, r4
   14b54:	bl	12e40 <table_get_col_ptr@@Base>
   14b58:	ldr	r0, [r0, #4]
   14b5c:	mvn	r7, #0
   14b60:	cmp	r0, #18
   14b64:	bne	14ba4 <table_set_ldouble@@Base+0x7c>
   14b68:	ldr	r0, [r8]
   14b6c:	cmp	r0, #0
   14b70:	bne	14b88 <table_set_ldouble@@Base+0x60>
   14b74:	mov	r0, #8
   14b78:	bl	12004 <malloc@plt>
   14b7c:	cmp	r0, #0
   14b80:	str	r0, [r8]
   14b84:	beq	14ba4 <table_set_ldouble@@Base+0x7c>
   14b88:	vst1.8	{d8}, [r0]
   14b8c:	mov	r0, r6
   14b90:	mov	r1, r5
   14b94:	mov	r2, r4
   14b98:	mov	r3, #1
   14b9c:	bl	12d58 <table_notify@@Base>
   14ba0:	mov	r7, #0
   14ba4:	mov	r0, r7
   14ba8:	vpop	{d8}
   14bac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014bb0 <table_set_string@@Base>:
   14bb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14bb4:	add	fp, sp, #24
   14bb8:	mov	r8, r3
   14bbc:	mov	r4, r2
   14bc0:	mov	r9, r1
   14bc4:	mov	r6, r0
   14bc8:	bl	14eb8 <table_get_cell_ptr@@Base>
   14bcc:	mov	r5, r0
   14bd0:	mov	r0, r6
   14bd4:	mov	r1, r4
   14bd8:	bl	12e40 <table_get_col_ptr@@Base>
   14bdc:	ldr	r0, [r0, #4]
   14be0:	mvn	r7, #0
   14be4:	cmp	r0, #21
   14be8:	bne	14c30 <table_set_string@@Base+0x80>
   14bec:	mov	r0, r8
   14bf0:	bl	12028 <strlen@plt>
   14bf4:	ldr	r2, [r5]
   14bf8:	add	r1, r0, #1
   14bfc:	mov	r0, r2
   14c00:	bl	11fec <realloc@plt>
   14c04:	cmp	r0, #0
   14c08:	str	r0, [r5]
   14c0c:	beq	14c30 <table_set_string@@Base+0x80>
   14c10:	mov	r1, r8
   14c14:	bl	11ff8 <strcpy@plt>
   14c18:	mov	r0, r6
   14c1c:	mov	r1, r9
   14c20:	mov	r2, r4
   14c24:	mov	r3, #1
   14c28:	bl	12d58 <table_notify@@Base>
   14c2c:	mov	r7, #0
   14c30:	mov	r0, r7
   14c34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014c38 <table_set_char@@Base>:
   14c38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c3c:	add	fp, sp, #24
   14c40:	mov	r8, r3
   14c44:	mov	r4, r2
   14c48:	mov	r9, r1
   14c4c:	mov	r6, r0
   14c50:	bl	14eb8 <table_get_cell_ptr@@Base>
   14c54:	mov	r5, r0
   14c58:	mov	r0, r6
   14c5c:	mov	r1, r4
   14c60:	bl	12e40 <table_get_col_ptr@@Base>
   14c64:	ldr	r0, [r0, #4]
   14c68:	mvn	r7, #0
   14c6c:	cmp	r0, #19
   14c70:	bne	14cb0 <table_set_char@@Base+0x78>
   14c74:	ldr	r0, [r5]
   14c78:	cmp	r0, #0
   14c7c:	bne	14c94 <table_set_char@@Base+0x5c>
   14c80:	mov	r0, #1
   14c84:	bl	12004 <malloc@plt>
   14c88:	cmp	r0, #0
   14c8c:	str	r0, [r5]
   14c90:	beq	14cb0 <table_set_char@@Base+0x78>
   14c94:	strb	r8, [r0]
   14c98:	mov	r0, r6
   14c9c:	mov	r1, r9
   14ca0:	mov	r2, r4
   14ca4:	mov	r3, #1
   14ca8:	bl	12d58 <table_notify@@Base>
   14cac:	mov	r7, #0
   14cb0:	mov	r0, r7
   14cb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014cb8 <table_set_uchar@@Base>:
   14cb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14cbc:	add	fp, sp, #24
   14cc0:	mov	r8, r3
   14cc4:	mov	r4, r2
   14cc8:	mov	r9, r1
   14ccc:	mov	r6, r0
   14cd0:	bl	14eb8 <table_get_cell_ptr@@Base>
   14cd4:	mov	r5, r0
   14cd8:	mov	r0, r6
   14cdc:	mov	r1, r4
   14ce0:	bl	12e40 <table_get_col_ptr@@Base>
   14ce4:	ldr	r0, [r0, #4]
   14ce8:	mvn	r7, #0
   14cec:	cmp	r0, #20
   14cf0:	bne	14d30 <table_set_uchar@@Base+0x78>
   14cf4:	ldr	r0, [r5]
   14cf8:	cmp	r0, #0
   14cfc:	bne	14d14 <table_set_uchar@@Base+0x5c>
   14d00:	mov	r0, #1
   14d04:	bl	12004 <malloc@plt>
   14d08:	cmp	r0, #0
   14d0c:	str	r0, [r5]
   14d10:	beq	14d30 <table_set_uchar@@Base+0x78>
   14d14:	strb	r8, [r0]
   14d18:	mov	r0, r6
   14d1c:	mov	r1, r9
   14d20:	mov	r2, r4
   14d24:	mov	r3, #1
   14d28:	bl	12d58 <table_notify@@Base>
   14d2c:	mov	r7, #0
   14d30:	mov	r0, r7
   14d34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d38 <table_set_ptr@@Base>:
   14d38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d3c:	add	fp, sp, #24
   14d40:	mov	r8, r3
   14d44:	mov	r4, r2
   14d48:	mov	r5, r1
   14d4c:	mov	r6, r0
   14d50:	bl	14eb8 <table_get_cell_ptr@@Base>
   14d54:	mov	r7, r0
   14d58:	mov	r0, r6
   14d5c:	mov	r1, r4
   14d60:	bl	12e40 <table_get_col_ptr@@Base>
   14d64:	ldr	r1, [r0, #4]
   14d68:	mvn	r0, #0
   14d6c:	cmp	r1, #23
   14d70:	bne	14d90 <table_set_ptr@@Base+0x58>
   14d74:	mov	r0, r6
   14d78:	mov	r1, r5
   14d7c:	mov	r2, r4
   14d80:	mov	r3, #1
   14d84:	str	r8, [r7]
   14d88:	bl	12d58 <table_notify@@Base>
   14d8c:	mov	r0, #0
   14d90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014d94 <table_column_is_valid@@Base>:
   14d94:	cmp	r0, #0
   14d98:	moveq	r0, #0
   14d9c:	bxeq	lr
   14da0:	push	{r4, sl, fp, lr}
   14da4:	add	fp, sp, #8
   14da8:	mov	r4, r1
   14dac:	bl	12e68 <table_get_column_length@@Base>
   14db0:	cmp	r0, r4
   14db4:	mov	r0, #0
   14db8:	mov	r1, #0
   14dbc:	movwgt	r0, #1
   14dc0:	cmn	r4, #1
   14dc4:	movwgt	r1, #1
   14dc8:	and	r0, r1, r0
   14dcc:	pop	{r4, sl, fp, pc}

00014dd0 <table_row_is_valid@@Base>:
   14dd0:	cmp	r0, #0
   14dd4:	moveq	r0, #0
   14dd8:	bxeq	lr
   14ddc:	push	{r4, sl, fp, lr}
   14de0:	add	fp, sp, #8
   14de4:	mov	r4, r1
   14de8:	bl	13c40 <table_get_row_length@@Base>
   14dec:	cmp	r0, r4
   14df0:	mov	r0, #0
   14df4:	mov	r1, #0
   14df8:	movwgt	r0, #1
   14dfc:	cmn	r4, #1
   14e00:	movwgt	r1, #1
   14e04:	and	r0, r1, r0
   14e08:	pop	{r4, sl, fp, pc}

00014e0c <table_cell_is_valid@@Base>:
   14e0c:	push	{r4, r5, r6, r7, fp, lr}
   14e10:	add	fp, sp, #16
   14e14:	mov	r5, #0
   14e18:	cmp	r0, #0
   14e1c:	beq	14e64 <table_cell_is_valid@@Base+0x58>
   14e20:	mov	r7, r2
   14e24:	mov	r4, r1
   14e28:	mov	r6, r0
   14e2c:	bl	12e68 <table_get_column_length@@Base>
   14e30:	cmp	r7, #0
   14e34:	bmi	14e64 <table_cell_is_valid@@Base+0x58>
   14e38:	cmp	r0, r7
   14e3c:	ble	14e64 <table_cell_is_valid@@Base+0x58>
   14e40:	mov	r0, r6
   14e44:	bl	13c40 <table_get_row_length@@Base>
   14e48:	cmp	r0, r4
   14e4c:	mov	r0, #0
   14e50:	mov	r1, #0
   14e54:	movwgt	r0, #1
   14e58:	cmn	r4, #1
   14e5c:	movwgt	r1, #1
   14e60:	and	r5, r1, r0
   14e64:	mov	r0, r5
   14e68:	pop	{r4, r5, r6, r7, fp, pc}

00014e6c <table_cell_has_value@@Base>:
   14e6c:	push	{fp, lr}
   14e70:	mov	fp, sp
   14e74:	bl	14eb8 <table_get_cell_ptr@@Base>
   14e78:	cmp	r0, #0
   14e7c:	beq	14e90 <table_cell_has_value@@Base+0x24>
   14e80:	ldr	r0, [r0]
   14e84:	cmp	r0, #0
   14e88:	movwne	r0, #1
   14e8c:	pop	{fp, pc}
   14e90:	mov	r0, #0
   14e94:	pop	{fp, pc}

00014e98 <table_cell_init@@Base>:
   14e98:	push	{r4, sl, fp, lr}
   14e9c:	add	fp, sp, #8
   14ea0:	mov	r4, r2
   14ea4:	bl	13bd8 <table_get_row_ptr@@Base>
   14ea8:	ldr	r0, [r0]
   14eac:	mov	r1, #0
   14eb0:	str	r1, [r0, r4, lsl #2]
   14eb4:	pop	{r4, sl, fp, pc}

00014eb8 <table_get_cell_ptr@@Base>:
   14eb8:	push	{r4, sl, fp, lr}
   14ebc:	add	fp, sp, #8
   14ec0:	mov	r4, r2
   14ec4:	bl	13bd8 <table_get_row_ptr@@Base>
   14ec8:	ldr	r0, [r0]
   14ecc:	add	r0, r0, r4, lsl #2
   14ed0:	pop	{r4, sl, fp, pc}

00014ed4 <table_cell_destroy@@Base>:
   14ed4:	push	{r4, r5, r6, sl, fp, lr}
   14ed8:	add	fp, sp, #16
   14edc:	mov	r5, r1
   14ee0:	mov	r1, r2
   14ee4:	mov	r4, r2
   14ee8:	mov	r6, r0
   14eec:	bl	12eec <table_get_column_data_type@@Base>
   14ef0:	cmp	r0, #23
   14ef4:	popeq	{r4, r5, r6, sl, fp, pc}
   14ef8:	mov	r0, r6
   14efc:	mov	r1, r5
   14f00:	bl	13bd8 <table_get_row_ptr@@Base>
   14f04:	ldr	r0, [r0]
   14f08:	ldr	r0, [r0, r4, lsl #2]
   14f0c:	cmp	r0, #0
   14f10:	beq	14f1c <table_cell_destroy@@Base+0x48>
   14f14:	pop	{r4, r5, r6, sl, fp, lr}
   14f18:	b	11fd4 <free@plt>
   14f1c:	pop	{r4, r5, r6, sl, fp, pc}

00014f20 <table_cell_to_buffer@@Base>:
   14f20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f24:	add	fp, sp, #24
   14f28:	sub	sp, sp, #8
   14f2c:	mov	r7, r1
   14f30:	mov	r1, r2
   14f34:	mov	r5, r3
   14f38:	mov	r6, r2
   14f3c:	mov	r4, r0
   14f40:	bl	12eec <table_get_column_data_type@@Base>
   14f44:	cmp	r0, #23
   14f48:	bhi	151b8 <table_cell_to_buffer@@Base+0x298>
   14f4c:	ldr	r8, [fp, #8]
   14f50:	add	r1, pc, #0
   14f54:	ldr	pc, [r1, r0, lsl #2]
   14f58:			; <UNDEFINED> instruction: 0x00014fb8
   14f5c:	andeq	r4, r1, ip, asr #31
   14f60:	andeq	r4, r1, r0, ror #31
   14f64:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f68:	andeq	r5, r1, r8
   14f6c:	andeq	r5, r1, ip, lsl r0
   14f70:	andeq	r5, r1, r0, lsr r0
   14f74:	andeq	r5, r1, r4, asr #32
   14f78:	andeq	r5, r1, r4, rrx
   14f7c:	andeq	r5, r1, r8, ror r0
   14f80:	andeq	r5, r1, ip, lsl #1
   14f84:	andeq	r5, r1, ip, lsr #1
   14f88:	andeq	r5, r1, ip, asr #1
   14f8c:	andeq	r5, r1, ip, ror #1
   14f90:	andeq	r5, r1, ip, lsl #2
   14f94:	andeq	r5, r1, ip, lsr #2
   14f98:	andeq	r5, r1, ip, asr #2
   14f9c:	andeq	r5, r1, r0, ror r1
   14fa0:	muleq	r1, r0, r1
   14fa4:	andeq	r5, r1, r4, asr #3
   14fa8:	ldrdeq	r5, [r1], -r8
   14fac:	strdeq	r5, [r1], -r8
   14fb0:	andeq	r5, r1, r8, lsl r2
   14fb4:	andeq	r5, r1, ip, asr #4
   14fb8:	mov	r0, r4
   14fbc:	mov	r1, r7
   14fc0:	mov	r2, r6
   14fc4:	bl	13994 <table_get_int@@Base>
   14fc8:	b	15228 <table_cell_to_buffer@@Base+0x308>
   14fcc:	mov	r0, r4
   14fd0:	mov	r1, r7
   14fd4:	mov	r2, r6
   14fd8:	bl	139ac <table_get_uint@@Base>
   14fdc:	b	15054 <table_cell_to_buffer@@Base+0x134>
   14fe0:	mov	r0, r4
   14fe4:	mov	r1, r7
   14fe8:	mov	r2, r6
   14fec:	bl	139c4 <table_get_int8@@Base>
   14ff0:	b	15228 <table_cell_to_buffer@@Base+0x308>
   14ff4:	mov	r0, r4
   14ff8:	mov	r1, r7
   14ffc:	mov	r2, r6
   15000:	bl	139dc <table_get_uint8@@Base>
   15004:	b	15054 <table_cell_to_buffer@@Base+0x134>
   15008:	mov	r0, r4
   1500c:	mov	r1, r7
   15010:	mov	r2, r6
   15014:	bl	139f4 <table_get_int16@@Base>
   15018:	b	15228 <table_cell_to_buffer@@Base+0x308>
   1501c:	mov	r0, r4
   15020:	mov	r1, r7
   15024:	mov	r2, r6
   15028:	bl	13a0c <table_get_uint16@@Base>
   1502c:	b	15054 <table_cell_to_buffer@@Base+0x134>
   15030:	mov	r0, r4
   15034:	mov	r1, r7
   15038:	mov	r2, r6
   1503c:	bl	13a24 <table_get_int32@@Base>
   15040:	b	15228 <table_cell_to_buffer@@Base+0x308>
   15044:	mov	r0, r4
   15048:	mov	r1, r7
   1504c:	mov	r2, r6
   15050:	bl	13a3c <table_get_uint32@@Base>
   15054:	movw	r2, #23167	; 0x5a7f
   15058:	mov	r3, r0
   1505c:	movt	r2, #1
   15060:	b	15234 <table_cell_to_buffer@@Base+0x314>
   15064:	mov	r0, r4
   15068:	mov	r1, r7
   1506c:	mov	r2, r6
   15070:	bl	13a54 <table_get_int64@@Base>
   15074:	b	1511c <table_cell_to_buffer@@Base+0x1fc>
   15078:	mov	r0, r4
   1507c:	mov	r1, r7
   15080:	mov	r2, r6
   15084:	bl	13a6c <table_get_uint64@@Base>
   15088:	b	1513c <table_cell_to_buffer@@Base+0x21c>
   1508c:	mov	r0, r4
   15090:	mov	r1, r7
   15094:	mov	r2, r6
   15098:	bl	13a84 <table_get_short@@Base>
   1509c:	movw	r2, #23180	; 0x5a8c
   150a0:	mov	r3, r0
   150a4:	movt	r2, #1
   150a8:	b	15234 <table_cell_to_buffer@@Base+0x314>
   150ac:	mov	r0, r4
   150b0:	mov	r1, r7
   150b4:	mov	r2, r6
   150b8:	bl	13a9c <table_get_ushort@@Base>
   150bc:	movw	r2, #23184	; 0x5a90
   150c0:	mov	r3, r0
   150c4:	movt	r2, #1
   150c8:	b	15234 <table_cell_to_buffer@@Base+0x314>
   150cc:	mov	r0, r4
   150d0:	mov	r1, r7
   150d4:	mov	r2, r6
   150d8:	bl	13ab4 <table_get_long@@Base>
   150dc:	movw	r2, #23188	; 0x5a94
   150e0:	mov	r3, r0
   150e4:	movt	r2, #1
   150e8:	b	15234 <table_cell_to_buffer@@Base+0x314>
   150ec:	mov	r0, r4
   150f0:	mov	r1, r7
   150f4:	mov	r2, r6
   150f8:	bl	13acc <table_get_ulong@@Base>
   150fc:	movw	r2, #23192	; 0x5a98
   15100:	mov	r3, r0
   15104:	movt	r2, #1
   15108:	b	15234 <table_cell_to_buffer@@Base+0x314>
   1510c:	mov	r0, r4
   15110:	mov	r1, r7
   15114:	mov	r2, r6
   15118:	bl	13ae4 <table_get_llong@@Base>
   1511c:	movw	r2, #23170	; 0x5a82
   15120:	stm	sp, {r0, r1}
   15124:	movt	r2, #1
   15128:	b	151ac <table_cell_to_buffer@@Base+0x28c>
   1512c:	mov	r0, r4
   15130:	mov	r1, r7
   15134:	mov	r2, r6
   15138:	bl	13afc <table_get_ullong@@Base>
   1513c:	movw	r2, #23175	; 0x5a87
   15140:	stm	sp, {r0, r1}
   15144:	movt	r2, #1
   15148:	b	151ac <table_cell_to_buffer@@Base+0x28c>
   1514c:	mov	r0, r4
   15150:	mov	r1, r7
   15154:	mov	r2, r6
   15158:	bl	13b14 <table_get_float@@Base>
   1515c:	vcvt.f64.f32	d16, s0
   15160:	movw	r2, #23199	; 0x5a9f
   15164:	movt	r2, #1
   15168:	vstr	d16, [sp]
   1516c:	b	151ac <table_cell_to_buffer@@Base+0x28c>
   15170:	mov	r0, r4
   15174:	mov	r1, r7
   15178:	mov	r2, r6
   1517c:	bl	13b2c <table_get_double@@Base>
   15180:	movw	r2, #23202	; 0x5aa2
   15184:	vstr	d0, [sp]
   15188:	movt	r2, #1
   1518c:	b	151ac <table_cell_to_buffer@@Base+0x28c>
   15190:	mov	r0, r4
   15194:	mov	r1, r7
   15198:	mov	r2, r6
   1519c:	bl	13b44 <table_get_ldouble@@Base>
   151a0:	movw	r2, #23206	; 0x5aa6
   151a4:	vstr	d0, [sp]
   151a8:	movt	r2, #1
   151ac:	mov	r0, r5
   151b0:	mov	r1, r8
   151b4:	bl	12040 <snprintf@plt>
   151b8:	mov	r0, #0
   151bc:	sub	sp, fp, #24
   151c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   151c4:	mov	r0, r4
   151c8:	mov	r1, r7
   151cc:	mov	r2, r6
   151d0:	bl	13b5c <table_get_char@@Base>
   151d4:	b	151e8 <table_cell_to_buffer@@Base+0x2c8>
   151d8:	mov	r0, r4
   151dc:	mov	r1, r7
   151e0:	mov	r2, r6
   151e4:	bl	13b74 <table_get_uchar@@Base>
   151e8:	movw	r2, #23210	; 0x5aaa
   151ec:	mov	r3, r0
   151f0:	movt	r2, #1
   151f4:	b	15234 <table_cell_to_buffer@@Base+0x314>
   151f8:	mov	r0, r4
   151fc:	mov	r1, r7
   15200:	mov	r2, r6
   15204:	bl	13b8c <table_get_string@@Base>
   15208:	movw	r2, #23196	; 0x5a9c
   1520c:	mov	r3, r0
   15210:	movt	r2, #1
   15214:	b	15234 <table_cell_to_buffer@@Base+0x314>
   15218:	mov	r0, r4
   1521c:	mov	r1, r7
   15220:	mov	r2, r6
   15224:	bl	1397c <table_get_bool@@Base>
   15228:	movw	r2, #23164	; 0x5a7c
   1522c:	mov	r3, r0
   15230:	movt	r2, #1
   15234:	mov	r0, r5
   15238:	mov	r1, r8
   1523c:	bl	12040 <snprintf@plt>
   15240:	mov	r0, #0
   15244:	sub	sp, fp, #24
   15248:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1524c:	mov	r0, r4
   15250:	mov	r1, r7
   15254:	mov	r2, r6
   15258:	bl	13ba0 <table_get_ptr@@Base>
   1525c:	movw	r2, #23213	; 0x5aad
   15260:	mov	r3, r0
   15264:	movt	r2, #1
   15268:	b	15234 <table_cell_to_buffer@@Base+0x314>

0001526c <table_cell_from_buffer@@Base>:
   1526c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15270:	add	fp, sp, #24
   15274:	sub	sp, sp, #264	; 0x108
   15278:	mov	r5, r1
   1527c:	mov	r1, r2
   15280:	mov	r7, r3
   15284:	mov	r4, r2
   15288:	mov	r6, r0
   1528c:	bl	12eec <table_get_column_data_type@@Base>
   15290:	cmp	r0, #23
   15294:	bhi	158c4 <table_cell_from_buffer@@Base+0x658>
   15298:	add	r1, pc, #0
   1529c:	ldr	pc, [r1, r0, lsl #2]
   152a0:	andeq	r5, r1, r0, lsl #6
   152a4:	andeq	r5, r1, ip, lsr r3
   152a8:	andeq	r5, r1, r8, ror r3
   152ac:			; <UNDEFINED> instruction: 0x000153b4
   152b0:	strdeq	r5, [r1], -r0
   152b4:	andeq	r5, r1, ip, lsr #8
   152b8:	andeq	r5, r1, r8, ror #8
   152bc:	andeq	r5, r1, r4, lsr #9
   152c0:	andeq	r5, r1, r0, ror #9
   152c4:	andeq	r5, r1, r4, lsr #10
   152c8:	andeq	r5, r1, r8, ror #10
   152cc:	andeq	r5, r1, r4, lsr #11
   152d0:	andeq	r5, r1, r0, ror #11
   152d4:	andeq	r5, r1, ip, lsl r6
   152d8:	andeq	r5, r1, r8, asr r6
   152dc:	muleq	r1, ip, r6
   152e0:	andeq	r5, r1, r0, ror #13
   152e4:	andeq	r5, r1, ip, lsl r7
   152e8:	andeq	r5, r1, r8, asr r7
   152ec:	muleq	r1, r4, r7
   152f0:	ldrdeq	r5, [r1], -r0
   152f4:	andeq	r5, r1, ip, lsl #16
   152f8:	andeq	r5, r1, r8, asr #16
   152fc:	andeq	r5, r1, ip, lsl #17
   15300:	movw	r1, #23164	; 0x5a7c
   15304:	add	r2, sp, #8
   15308:	mov	r0, r7
   1530c:	movt	r1, #1
   15310:	bl	1204c <__isoc99_sscanf@plt>
   15314:	mov	r1, r0
   15318:	mvn	r0, #0
   1531c:	cmp	r1, #1
   15320:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15324:	ldr	r3, [sp, #8]
   15328:	mov	r0, r6
   1532c:	mov	r1, r5
   15330:	mov	r2, r4
   15334:	bl	141f4 <table_set_int@@Base>
   15338:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   1533c:	movw	r1, #23167	; 0x5a7f
   15340:	add	r2, sp, #8
   15344:	mov	r0, r7
   15348:	movt	r1, #1
   1534c:	bl	1204c <__isoc99_sscanf@plt>
   15350:	mov	r1, r0
   15354:	mvn	r0, #0
   15358:	cmp	r1, #1
   1535c:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15360:	ldr	r3, [sp, #8]
   15364:	mov	r0, r6
   15368:	mov	r1, r5
   1536c:	mov	r2, r4
   15370:	bl	14274 <table_set_uint@@Base>
   15374:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15378:	movw	r1, #23216	; 0x5ab0
   1537c:	add	r2, sp, #8
   15380:	mov	r0, r7
   15384:	movt	r1, #1
   15388:	bl	1204c <__isoc99_sscanf@plt>
   1538c:	mov	r1, r0
   15390:	mvn	r0, #0
   15394:	cmp	r1, #1
   15398:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   1539c:	ldrsb	r3, [sp, #8]
   153a0:	mov	r0, r6
   153a4:	mov	r1, r5
   153a8:	mov	r2, r4
   153ac:	bl	142f4 <table_set_int8@@Base>
   153b0:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   153b4:	movw	r1, #23221	; 0x5ab5
   153b8:	add	r2, sp, #8
   153bc:	mov	r0, r7
   153c0:	movt	r1, #1
   153c4:	bl	1204c <__isoc99_sscanf@plt>
   153c8:	mov	r1, r0
   153cc:	mvn	r0, #0
   153d0:	cmp	r1, #1
   153d4:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   153d8:	ldrb	r3, [sp, #8]
   153dc:	mov	r0, r6
   153e0:	mov	r1, r5
   153e4:	mov	r2, r4
   153e8:	bl	14374 <table_set_uint8@@Base>
   153ec:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   153f0:	movw	r1, #23180	; 0x5a8c
   153f4:	add	r2, sp, #8
   153f8:	mov	r0, r7
   153fc:	movt	r1, #1
   15400:	bl	1204c <__isoc99_sscanf@plt>
   15404:	mov	r1, r0
   15408:	mvn	r0, #0
   1540c:	cmp	r1, #1
   15410:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15414:	ldrsh	r3, [sp, #8]
   15418:	mov	r0, r6
   1541c:	mov	r1, r5
   15420:	mov	r2, r4
   15424:	bl	143f4 <table_set_int16@@Base>
   15428:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   1542c:	movw	r1, #23184	; 0x5a90
   15430:	add	r2, sp, #8
   15434:	mov	r0, r7
   15438:	movt	r1, #1
   1543c:	bl	1204c <__isoc99_sscanf@plt>
   15440:	mov	r1, r0
   15444:	mvn	r0, #0
   15448:	cmp	r1, #1
   1544c:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15450:	ldrh	r3, [sp, #8]
   15454:	mov	r0, r6
   15458:	mov	r1, r5
   1545c:	mov	r2, r4
   15460:	bl	14474 <table_set_uint16@@Base>
   15464:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15468:	movw	r1, #23164	; 0x5a7c
   1546c:	add	r2, sp, #8
   15470:	mov	r0, r7
   15474:	movt	r1, #1
   15478:	bl	1204c <__isoc99_sscanf@plt>
   1547c:	mov	r1, r0
   15480:	mvn	r0, #0
   15484:	cmp	r1, #1
   15488:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   1548c:	ldr	r3, [sp, #8]
   15490:	mov	r0, r6
   15494:	mov	r1, r5
   15498:	mov	r2, r4
   1549c:	bl	144f4 <table_set_int32@@Base>
   154a0:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   154a4:	movw	r1, #23167	; 0x5a7f
   154a8:	add	r2, sp, #8
   154ac:	mov	r0, r7
   154b0:	movt	r1, #1
   154b4:	bl	1204c <__isoc99_sscanf@plt>
   154b8:	mov	r1, r0
   154bc:	mvn	r0, #0
   154c0:	cmp	r1, #1
   154c4:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   154c8:	ldr	r3, [sp, #8]
   154cc:	mov	r0, r6
   154d0:	mov	r1, r5
   154d4:	mov	r2, r4
   154d8:	bl	14574 <table_set_uint32@@Base>
   154dc:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   154e0:	movw	r1, #23170	; 0x5a82
   154e4:	add	r2, sp, #8
   154e8:	mov	r0, r7
   154ec:	movt	r1, #1
   154f0:	bl	1204c <__isoc99_sscanf@plt>
   154f4:	mov	r1, r0
   154f8:	mvn	r0, #0
   154fc:	cmp	r1, #1
   15500:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15504:	ldr	r0, [sp, #8]
   15508:	ldr	r1, [sp, #12]
   1550c:	mov	r2, r4
   15510:	stm	sp, {r0, r1}
   15514:	mov	r0, r6
   15518:	mov	r1, r5
   1551c:	bl	145f4 <table_set_int64@@Base>
   15520:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15524:	movw	r1, #23175	; 0x5a87
   15528:	add	r2, sp, #8
   1552c:	mov	r0, r7
   15530:	movt	r1, #1
   15534:	bl	1204c <__isoc99_sscanf@plt>
   15538:	mov	r1, r0
   1553c:	mvn	r0, #0
   15540:	cmp	r1, #1
   15544:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15548:	ldr	r0, [sp, #8]
   1554c:	ldr	r1, [sp, #12]
   15550:	mov	r2, r4
   15554:	stm	sp, {r0, r1}
   15558:	mov	r0, r6
   1555c:	mov	r1, r5
   15560:	bl	1467c <table_set_uint64@@Base>
   15564:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15568:	movw	r1, #23180	; 0x5a8c
   1556c:	add	r2, sp, #8
   15570:	mov	r0, r7
   15574:	movt	r1, #1
   15578:	bl	1204c <__isoc99_sscanf@plt>
   1557c:	mov	r1, r0
   15580:	mvn	r0, #0
   15584:	cmp	r1, #1
   15588:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   1558c:	ldrsh	r3, [sp, #8]
   15590:	mov	r0, r6
   15594:	mov	r1, r5
   15598:	mov	r2, r4
   1559c:	bl	14704 <table_set_short@@Base>
   155a0:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   155a4:	movw	r1, #23184	; 0x5a90
   155a8:	add	r2, sp, #8
   155ac:	mov	r0, r7
   155b0:	movt	r1, #1
   155b4:	bl	1204c <__isoc99_sscanf@plt>
   155b8:	mov	r1, r0
   155bc:	mvn	r0, #0
   155c0:	cmp	r1, #1
   155c4:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   155c8:	ldrh	r3, [sp, #8]
   155cc:	mov	r0, r6
   155d0:	mov	r1, r5
   155d4:	mov	r2, r4
   155d8:	bl	14784 <table_set_ushort@@Base>
   155dc:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   155e0:	movw	r1, #23188	; 0x5a94
   155e4:	add	r2, sp, #8
   155e8:	mov	r0, r7
   155ec:	movt	r1, #1
   155f0:	bl	1204c <__isoc99_sscanf@plt>
   155f4:	mov	r1, r0
   155f8:	mvn	r0, #0
   155fc:	cmp	r1, #1
   15600:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15604:	ldr	r3, [sp, #8]
   15608:	mov	r0, r6
   1560c:	mov	r1, r5
   15610:	mov	r2, r4
   15614:	bl	14804 <table_set_long@@Base>
   15618:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   1561c:	movw	r1, #23192	; 0x5a98
   15620:	add	r2, sp, #8
   15624:	mov	r0, r7
   15628:	movt	r1, #1
   1562c:	bl	1204c <__isoc99_sscanf@plt>
   15630:	mov	r1, r0
   15634:	mvn	r0, #0
   15638:	cmp	r1, #1
   1563c:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15640:	ldr	r3, [sp, #8]
   15644:	mov	r0, r6
   15648:	mov	r1, r5
   1564c:	mov	r2, r4
   15650:	bl	14884 <table_set_ulong@@Base>
   15654:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15658:	movw	r1, #23170	; 0x5a82
   1565c:	add	r2, sp, #8
   15660:	mov	r0, r7
   15664:	movt	r1, #1
   15668:	bl	1204c <__isoc99_sscanf@plt>
   1566c:	mov	r1, r0
   15670:	mvn	r0, #0
   15674:	cmp	r1, #1
   15678:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   1567c:	ldr	r0, [sp, #8]
   15680:	ldr	r1, [sp, #12]
   15684:	mov	r2, r4
   15688:	stm	sp, {r0, r1}
   1568c:	mov	r0, r6
   15690:	mov	r1, r5
   15694:	bl	14904 <table_set_llong@@Base>
   15698:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   1569c:	movw	r1, #23175	; 0x5a87
   156a0:	add	r2, sp, #8
   156a4:	mov	r0, r7
   156a8:	movt	r1, #1
   156ac:	bl	1204c <__isoc99_sscanf@plt>
   156b0:	mov	r1, r0
   156b4:	mvn	r0, #0
   156b8:	cmp	r1, #1
   156bc:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   156c0:	ldr	r0, [sp, #8]
   156c4:	ldr	r1, [sp, #12]
   156c8:	mov	r2, r4
   156cc:	stm	sp, {r0, r1}
   156d0:	mov	r0, r6
   156d4:	mov	r1, r5
   156d8:	bl	1498c <table_set_ullong@@Base>
   156dc:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   156e0:	movw	r1, #23199	; 0x5a9f
   156e4:	add	r2, sp, #8
   156e8:	mov	r0, r7
   156ec:	movt	r1, #1
   156f0:	bl	1204c <__isoc99_sscanf@plt>
   156f4:	mov	r1, r0
   156f8:	mvn	r0, #0
   156fc:	cmp	r1, #1
   15700:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15704:	vldr	s0, [sp, #8]
   15708:	mov	r0, r6
   1570c:	mov	r1, r5
   15710:	mov	r2, r4
   15714:	bl	14a14 <table_set_float@@Base>
   15718:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   1571c:	movw	r1, #23202	; 0x5aa2
   15720:	add	r2, sp, #8
   15724:	mov	r0, r7
   15728:	movt	r1, #1
   1572c:	bl	1204c <__isoc99_sscanf@plt>
   15730:	mov	r1, r0
   15734:	mvn	r0, #0
   15738:	cmp	r1, #1
   1573c:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15740:	vldr	d0, [sp, #8]
   15744:	mov	r0, r6
   15748:	mov	r1, r5
   1574c:	mov	r2, r4
   15750:	bl	14aa0 <table_set_double@@Base>
   15754:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15758:	movw	r1, #23206	; 0x5aa6
   1575c:	add	r2, sp, #8
   15760:	mov	r0, r7
   15764:	movt	r1, #1
   15768:	bl	1204c <__isoc99_sscanf@plt>
   1576c:	mov	r1, r0
   15770:	mvn	r0, #0
   15774:	cmp	r1, #1
   15778:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   1577c:	vldr	d0, [sp, #8]
   15780:	mov	r0, r6
   15784:	mov	r1, r5
   15788:	mov	r2, r4
   1578c:	bl	14b28 <table_set_ldouble@@Base>
   15790:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15794:	movw	r1, #23210	; 0x5aaa
   15798:	add	r2, sp, #8
   1579c:	mov	r0, r7
   157a0:	movt	r1, #1
   157a4:	bl	1204c <__isoc99_sscanf@plt>
   157a8:	mov	r1, r0
   157ac:	mvn	r0, #0
   157b0:	cmp	r1, #1
   157b4:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   157b8:	ldrb	r3, [sp, #8]
   157bc:	mov	r0, r6
   157c0:	mov	r1, r5
   157c4:	mov	r2, r4
   157c8:	bl	14c38 <table_set_char@@Base>
   157cc:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   157d0:	movw	r1, #23210	; 0x5aaa
   157d4:	add	r2, sp, #8
   157d8:	mov	r0, r7
   157dc:	movt	r1, #1
   157e0:	bl	1204c <__isoc99_sscanf@plt>
   157e4:	mov	r1, r0
   157e8:	mvn	r0, #0
   157ec:	cmp	r1, #1
   157f0:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   157f4:	ldrb	r3, [sp, #8]
   157f8:	mov	r0, r6
   157fc:	mov	r1, r5
   15800:	mov	r2, r4
   15804:	bl	14cb8 <table_set_uchar@@Base>
   15808:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   1580c:	movw	r1, #23196	; 0x5a9c
   15810:	add	r2, sp, #8
   15814:	mov	r0, r7
   15818:	movt	r1, #1
   1581c:	bl	1204c <__isoc99_sscanf@plt>
   15820:	mov	r1, r0
   15824:	mvn	r0, #0
   15828:	cmp	r1, #1
   1582c:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   15830:	add	r3, sp, #8
   15834:	mov	r0, r6
   15838:	mov	r1, r5
   1583c:	mov	r2, r4
   15840:	bl	14bb0 <table_set_string@@Base>
   15844:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   15848:	movw	r1, #23164	; 0x5a7c
   1584c:	add	r2, sp, #8
   15850:	mov	r0, r7
   15854:	movt	r1, #1
   15858:	bl	1204c <__isoc99_sscanf@plt>
   1585c:	mov	r1, r0
   15860:	mvn	r0, #0
   15864:	cmp	r1, #1
   15868:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   1586c:	ldr	r3, [sp, #8]
   15870:	mov	r0, r6
   15874:	mov	r1, r5
   15878:	mov	r2, r4
   1587c:	cmp	r3, #0
   15880:	movwne	r3, #1
   15884:	bl	14174 <table_set_bool@@Base>
   15888:	b	158c4 <table_cell_from_buffer@@Base+0x658>
   1588c:	movw	r1, #23213	; 0x5aad
   15890:	add	r2, sp, #8
   15894:	mov	r0, r7
   15898:	movt	r1, #1
   1589c:	bl	1204c <__isoc99_sscanf@plt>
   158a0:	mov	r1, r0
   158a4:	mvn	r0, #0
   158a8:	cmp	r1, #1
   158ac:	bne	158c8 <table_cell_from_buffer@@Base+0x65c>
   158b0:	ldr	r3, [sp, #8]
   158b4:	mov	r0, r6
   158b8:	mov	r1, r5
   158bc:	mov	r2, r4
   158c0:	bl	14d38 <table_set_ptr@@Base>
   158c4:	mov	r0, #0
   158c8:	sub	sp, fp, #24
   158cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000158d0 <table_cell_nullify@@Base>:
   158d0:	push	{r4, r5, fp, lr}
   158d4:	add	fp, sp, #8
   158d8:	mov	r4, r2
   158dc:	bl	13bd8 <table_get_row_ptr@@Base>
   158e0:	ldr	r5, [r0]
   158e4:	ldr	r0, [r5, r4, lsl #2]
   158e8:	cmp	r0, #0
   158ec:	beq	158fc <table_cell_nullify@@Base+0x2c>
   158f0:	bl	11fd4 <free@plt>
   158f4:	mov	r0, #0
   158f8:	str	r0, [r5, r4, lsl #2]
   158fc:	mov	r0, #0
   15900:	pop	{r4, r5, fp, pc}

00015904 <__libc_csu_init@@Base>:
   15904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15908:	mov	r7, r0
   1590c:	ldr	r6, [pc, #72]	; 1595c <__libc_csu_init@@Base+0x58>
   15910:	ldr	r5, [pc, #72]	; 15960 <__libc_csu_init@@Base+0x5c>
   15914:	add	r6, pc, r6
   15918:	add	r5, pc, r5
   1591c:	sub	r6, r6, r5
   15920:	mov	r8, r1
   15924:	mov	r9, r2
   15928:	bl	11f9c <strcmp@plt-0x20>
   1592c:	asrs	r6, r6, #2
   15930:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15934:	mov	r4, #0
   15938:	add	r4, r4, #1
   1593c:	ldr	r3, [r5], #4
   15940:	mov	r2, r9
   15944:	mov	r1, r8
   15948:	mov	r0, r7
   1594c:	blx	r3
   15950:	cmp	r6, r4
   15954:	bne	15938 <__libc_csu_init@@Base+0x34>
   15958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1595c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   15960:	andeq	r0, r1, r8, ror #11

00015964 <__libc_csu_fini@@Base>:
   15964:	bx	lr

Disassembly of section .fini:

00015968 <.fini>:
   15968:	push	{r3, lr}
   1596c:	pop	{r3, pc}
