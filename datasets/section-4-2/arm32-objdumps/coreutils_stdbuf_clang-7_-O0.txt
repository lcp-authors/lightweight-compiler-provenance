
../repos/coreutils/src/stdbuf:     file format elf32-littlearm


Disassembly of section .init:

00010e48 <.init>:
   10e48:	push	{r3, lr}
   10e4c:	bl	11138 <__assert_fail@plt+0x48>
   10e50:	pop	{r3, pc}

Disassembly of section .plt:

00010e54 <calloc@plt-0x14>:
   10e54:	push	{lr}		; (str lr, [sp, #-4]!)
   10e58:	ldr	lr, [pc, #4]	; 10e64 <calloc@plt-0x4>
   10e5c:	add	lr, pc, lr
   10e60:	ldr	pc, [lr, #8]!
   10e64:	muleq	r1, ip, r1

00010e68 <calloc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #122880	; 0x1e000
   10e70:	ldr	pc, [ip, #412]!	; 0x19c

00010e74 <fputs_unlocked@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #122880	; 0x1e000
   10e7c:	ldr	pc, [ip, #404]!	; 0x194

00010e80 <raise@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #122880	; 0x1e000
   10e88:	ldr	pc, [ip, #396]!	; 0x18c

00010e8c <strcmp@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #122880	; 0x1e000
   10e94:	ldr	pc, [ip, #388]!	; 0x184

00010e98 <printf@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #122880	; 0x1e000
   10ea0:	ldr	pc, [ip, #380]!	; 0x17c

00010ea4 <fflush@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #122880	; 0x1e000
   10eac:	ldr	pc, [ip, #372]!	; 0x174

00010eb0 <free@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #122880	; 0x1e000
   10eb8:	ldr	pc, [ip, #364]!	; 0x16c

00010ebc <_exit@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #122880	; 0x1e000
   10ec4:	ldr	pc, [ip, #356]!	; 0x164

00010ec8 <memcpy@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #122880	; 0x1e000
   10ed0:	ldr	pc, [ip, #348]!	; 0x15c

00010ed4 <execvp@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #122880	; 0x1e000
   10edc:	ldr	pc, [ip, #340]!	; 0x154

00010ee0 <mbsinit@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #122880	; 0x1e000
   10ee8:	ldr	pc, [ip, #332]!	; 0x14c

00010eec <memcmp@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #122880	; 0x1e000
   10ef4:	ldr	pc, [ip, #324]!	; 0x144

00010ef8 <realloc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #122880	; 0x1e000
   10f00:	ldr	pc, [ip, #316]!	; 0x13c

00010f04 <textdomain@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #122880	; 0x1e000
   10f0c:	ldr	pc, [ip, #308]!	; 0x134

00010f10 <iswprint@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #122880	; 0x1e000
   10f18:	ldr	pc, [ip, #300]!	; 0x12c

00010f1c <readlink@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #122880	; 0x1e000
   10f24:	ldr	pc, [ip, #292]!	; 0x124

00010f28 <lseek64@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #122880	; 0x1e000
   10f30:	ldr	pc, [ip, #284]!	; 0x11c

00010f34 <__ctype_get_mb_cur_max@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #122880	; 0x1e000
   10f3c:	ldr	pc, [ip, #276]!	; 0x114

00010f40 <__fpending@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #122880	; 0x1e000
   10f48:	ldr	pc, [ip, #268]!	; 0x10c

00010f4c <ferror_unlocked@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #122880	; 0x1e000
   10f54:	ldr	pc, [ip, #260]!	; 0x104

00010f58 <mbrtowc@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #122880	; 0x1e000
   10f60:	ldr	pc, [ip, #252]!	; 0xfc

00010f64 <error@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #122880	; 0x1e000
   10f6c:	ldr	pc, [ip, #244]!	; 0xf4

00010f70 <getenv@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #122880	; 0x1e000
   10f78:	ldr	pc, [ip, #236]!	; 0xec

00010f7c <malloc@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #122880	; 0x1e000
   10f84:	ldr	pc, [ip, #228]!	; 0xe4

00010f88 <__libc_start_main@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #122880	; 0x1e000
   10f90:	ldr	pc, [ip, #220]!	; 0xdc

00010f94 <__freading@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #122880	; 0x1e000
   10f9c:	ldr	pc, [ip, #212]!	; 0xd4

00010fa0 <__gmon_start__@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #122880	; 0x1e000
   10fa8:	ldr	pc, [ip, #204]!	; 0xcc

00010fac <getopt_long@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #122880	; 0x1e000
   10fb4:	ldr	pc, [ip, #196]!	; 0xc4

00010fb8 <__ctype_b_loc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #122880	; 0x1e000
   10fc0:	ldr	pc, [ip, #188]!	; 0xbc

00010fc4 <exit@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #122880	; 0x1e000
   10fcc:	ldr	pc, [ip, #180]!	; 0xb4

00010fd0 <gettext@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #122880	; 0x1e000
   10fd8:	ldr	pc, [ip, #172]!	; 0xac

00010fdc <strlen@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #122880	; 0x1e000
   10fe4:	ldr	pc, [ip, #164]!	; 0xa4

00010fe8 <strchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #122880	; 0x1e000
   10ff0:	ldr	pc, [ip, #156]!	; 0x9c

00010ff4 <fprintf@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #122880	; 0x1e000
   10ffc:	ldr	pc, [ip, #148]!	; 0x94

00011000 <__errno_location@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #122880	; 0x1e000
   11008:	ldr	pc, [ip, #140]!	; 0x8c

0001100c <__cxa_atexit@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #122880	; 0x1e000
   11014:	ldr	pc, [ip, #132]!	; 0x84

00011018 <memset@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #122880	; 0x1e000
   11020:	ldr	pc, [ip, #124]!	; 0x7c

00011024 <fileno@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #122880	; 0x1e000
   1102c:	ldr	pc, [ip, #116]!	; 0x74

00011030 <strtoumax@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #122880	; 0x1e000
   11038:	ldr	pc, [ip, #108]!	; 0x6c

0001103c <asprintf@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #122880	; 0x1e000
   11044:	ldr	pc, [ip, #100]!	; 0x64

00011048 <access@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #122880	; 0x1e000
   11050:	ldr	pc, [ip, #92]!	; 0x5c

00011054 <fclose@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #122880	; 0x1e000
   1105c:	ldr	pc, [ip, #84]!	; 0x54

00011060 <fseeko64@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #122880	; 0x1e000
   11068:	ldr	pc, [ip, #76]!	; 0x4c

0001106c <strtok@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #122880	; 0x1e000
   11074:	ldr	pc, [ip, #68]!	; 0x44

00011078 <setlocale@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #122880	; 0x1e000
   11080:	ldr	pc, [ip, #60]!	; 0x3c

00011084 <putenv@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #122880	; 0x1e000
   1108c:	ldr	pc, [ip, #52]!	; 0x34

00011090 <toupper@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #122880	; 0x1e000
   11098:	ldr	pc, [ip, #44]!	; 0x2c

0001109c <strrchr@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #122880	; 0x1e000
   110a4:	ldr	pc, [ip, #36]!	; 0x24

000110a8 <nl_langinfo@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #122880	; 0x1e000
   110b0:	ldr	pc, [ip, #28]!

000110b4 <bindtextdomain@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #122880	; 0x1e000
   110bc:	ldr	pc, [ip, #20]!

000110c0 <__xstat64@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #122880	; 0x1e000
   110c8:	ldr	pc, [ip, #12]!

000110cc <fputs@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #122880	; 0x1e000
   110d4:	ldr	pc, [ip, #4]!

000110d8 <strncmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #118784	; 0x1d000
   110e0:	ldr	pc, [ip, #4092]!	; 0xffc

000110e4 <abort@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #118784	; 0x1d000
   110ec:	ldr	pc, [ip, #4084]!	; 0xff4

000110f0 <__assert_fail@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #118784	; 0x1d000
   110f8:	ldr	pc, [ip, #4076]!	; 0xfec

Disassembly of section .text:

000110fc <.text>:
   110fc:	mov	fp, #0
   11100:	mov	lr, #0
   11104:	pop	{r1}		; (ldr r1, [sp], #4)
   11108:	mov	r2, sp
   1110c:	push	{r2}		; (str r2, [sp, #-4]!)
   11110:	push	{r0}		; (str r0, [sp, #-4]!)
   11114:	ldr	ip, [pc, #16]	; 1112c <__assert_fail@plt+0x3c>
   11118:	push	{ip}		; (str ip, [sp, #-4]!)
   1111c:	ldr	r0, [pc, #12]	; 11130 <__assert_fail@plt+0x40>
   11120:	ldr	r3, [pc, #12]	; 11134 <__assert_fail@plt+0x44>
   11124:	bl	10f88 <__libc_start_main@plt>
   11128:	bl	110e4 <abort@plt>
   1112c:	andeq	sp, r1, ip, lsr #8
   11130:	muleq	r1, r4, r5
   11134:	andeq	sp, r1, ip, asr #7
   11138:	ldr	r3, [pc, #20]	; 11154 <__assert_fail@plt+0x64>
   1113c:	ldr	r2, [pc, #20]	; 11158 <__assert_fail@plt+0x68>
   11140:	add	r3, pc, r3
   11144:	ldr	r2, [r3, r2]
   11148:	cmp	r2, #0
   1114c:	bxeq	lr
   11150:	b	10fa0 <__gmon_start__@plt>
   11154:			; <UNDEFINED> instruction: 0x0001deb8
   11158:	andeq	r0, r0, r8, ror #1
   1115c:	ldr	r0, [pc, #24]	; 1117c <__assert_fail@plt+0x8c>
   11160:	ldr	r3, [pc, #24]	; 11180 <__assert_fail@plt+0x90>
   11164:	cmp	r3, r0
   11168:	bxeq	lr
   1116c:	ldr	r3, [pc, #16]	; 11184 <__assert_fail@plt+0x94>
   11170:	cmp	r3, #0
   11174:	bxeq	lr
   11178:	bx	r3
   1117c:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11180:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11184:	andeq	r0, r0, r0
   11188:	ldr	r0, [pc, #36]	; 111b4 <__assert_fail@plt+0xc4>
   1118c:	ldr	r1, [pc, #36]	; 111b8 <__assert_fail@plt+0xc8>
   11190:	sub	r1, r1, r0
   11194:	asr	r1, r1, #2
   11198:	add	r1, r1, r1, lsr #31
   1119c:	asrs	r1, r1, #1
   111a0:	bxeq	lr
   111a4:	ldr	r3, [pc, #16]	; 111bc <__assert_fail@plt+0xcc>
   111a8:	cmp	r3, #0
   111ac:	bxeq	lr
   111b0:	bx	r3
   111b4:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   111b8:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   111bc:	andeq	r0, r0, r0
   111c0:	push	{r4, lr}
   111c4:	ldr	r4, [pc, #24]	; 111e4 <__assert_fail@plt+0xf4>
   111c8:	ldrb	r3, [r4]
   111cc:	cmp	r3, #0
   111d0:	popne	{r4, pc}
   111d4:	bl	1115c <__assert_fail@plt+0x6c>
   111d8:	mov	r3, #1
   111dc:	strb	r3, [r4]
   111e0:	pop	{r4, pc}
   111e4:	andeq	pc, r2, ip, asr r1	; <UNPREDICTABLE>
   111e8:	b	11188 <__assert_fail@plt+0x98>
   111ec:	push	{fp, lr}
   111f0:	mov	fp, sp
   111f4:	sub	sp, sp, #56	; 0x38
   111f8:	str	r0, [fp, #-4]
   111fc:	ldr	r0, [fp, #-4]
   11200:	cmp	r0, #0
   11204:	beq	11254 <__assert_fail@plt+0x164>
   11208:	b	1120c <__assert_fail@plt+0x11c>
   1120c:	movw	r0, #61776	; 0xf150
   11210:	movt	r0, #2
   11214:	ldr	r0, [r0]
   11218:	movw	r1, #54372	; 0xd464
   1121c:	movt	r1, #1
   11220:	str	r0, [fp, #-8]
   11224:	mov	r0, r1
   11228:	bl	10fd0 <gettext@plt>
   1122c:	movw	r1, #61840	; 0xf190
   11230:	movt	r1, #2
   11234:	ldr	r2, [r1]
   11238:	ldr	r1, [fp, #-8]
   1123c:	str	r0, [fp, #-12]
   11240:	mov	r0, r1
   11244:	ldr	r1, [fp, #-12]
   11248:	bl	10ff4 <fprintf@plt>
   1124c:	str	r0, [fp, #-16]
   11250:	b	113a4 <__assert_fail@plt+0x2b4>
   11254:	movw	r0, #54411	; 0xd48b
   11258:	movt	r0, #1
   1125c:	bl	10fd0 <gettext@plt>
   11260:	movw	lr, #61840	; 0xf190
   11264:	movt	lr, #2
   11268:	ldr	r1, [lr]
   1126c:	bl	10e98 <printf@plt>
   11270:	movw	r1, #54440	; 0xd4a8
   11274:	movt	r1, #1
   11278:	str	r0, [fp, #-20]	; 0xffffffec
   1127c:	mov	r0, r1
   11280:	bl	10fd0 <gettext@plt>
   11284:	movw	r1, #61780	; 0xf154
   11288:	movt	r1, #2
   1128c:	ldr	r1, [r1]
   11290:	bl	10e74 <fputs_unlocked@plt>
   11294:	str	r0, [fp, #-24]	; 0xffffffe8
   11298:	bl	113ac <__assert_fail@plt+0x2bc>
   1129c:	movw	r0, #54515	; 0xd4f3
   112a0:	movt	r0, #1
   112a4:	bl	10fd0 <gettext@plt>
   112a8:	movw	r1, #61780	; 0xf154
   112ac:	movt	r1, #2
   112b0:	ldr	r1, [r1]
   112b4:	bl	10e74 <fputs_unlocked@plt>
   112b8:	movw	r1, #54697	; 0xd5a9
   112bc:	movt	r1, #1
   112c0:	str	r0, [sp, #28]
   112c4:	mov	r0, r1
   112c8:	bl	10fd0 <gettext@plt>
   112cc:	movw	r1, #61780	; 0xf154
   112d0:	movt	r1, #2
   112d4:	ldr	r1, [r1]
   112d8:	bl	10e74 <fputs_unlocked@plt>
   112dc:	movw	r1, #54742	; 0xd5d6
   112e0:	movt	r1, #1
   112e4:	str	r0, [sp, #24]
   112e8:	mov	r0, r1
   112ec:	bl	10fd0 <gettext@plt>
   112f0:	movw	r1, #61780	; 0xf154
   112f4:	movt	r1, #2
   112f8:	ldr	r1, [r1]
   112fc:	bl	10e74 <fputs_unlocked@plt>
   11300:	movw	r1, #54796	; 0xd60c
   11304:	movt	r1, #1
   11308:	str	r0, [sp, #20]
   1130c:	mov	r0, r1
   11310:	bl	10fd0 <gettext@plt>
   11314:	movw	r1, #61780	; 0xf154
   11318:	movt	r1, #2
   1131c:	ldr	r1, [r1]
   11320:	bl	10e74 <fputs_unlocked@plt>
   11324:	movw	r1, #54905	; 0xd679
   11328:	movt	r1, #1
   1132c:	str	r0, [sp, #16]
   11330:	mov	r0, r1
   11334:	bl	10fd0 <gettext@plt>
   11338:	movw	r1, #61780	; 0xf154
   1133c:	movt	r1, #2
   11340:	ldr	r1, [r1]
   11344:	bl	10e74 <fputs_unlocked@plt>
   11348:	movw	r1, #54967	; 0xd6b7
   1134c:	movt	r1, #1
   11350:	str	r0, [sp, #12]
   11354:	mov	r0, r1
   11358:	bl	10fd0 <gettext@plt>
   1135c:	movw	r1, #61780	; 0xf154
   11360:	movt	r1, #2
   11364:	ldr	r1, [r1]
   11368:	bl	10e74 <fputs_unlocked@plt>
   1136c:	movw	r1, #55279	; 0xd7ef
   11370:	movt	r1, #1
   11374:	str	r0, [sp, #8]
   11378:	mov	r0, r1
   1137c:	bl	10fd0 <gettext@plt>
   11380:	movw	r1, #61780	; 0xf154
   11384:	movt	r1, #2
   11388:	ldr	r1, [r1]
   1138c:	bl	10e74 <fputs_unlocked@plt>
   11390:	movw	r1, #55546	; 0xd8fa
   11394:	movt	r1, #1
   11398:	str	r0, [sp, #4]
   1139c:	mov	r0, r1
   113a0:	bl	113e0 <__assert_fail@plt+0x2f0>
   113a4:	ldr	r0, [fp, #-4]
   113a8:	bl	10fc4 <exit@plt>
   113ac:	push	{fp, lr}
   113b0:	mov	fp, sp
   113b4:	sub	sp, sp, #8
   113b8:	movw	r0, #55867	; 0xda3b
   113bc:	movt	r0, #1
   113c0:	bl	10fd0 <gettext@plt>
   113c4:	movw	lr, #61780	; 0xf154
   113c8:	movt	lr, #2
   113cc:	ldr	r1, [lr]
   113d0:	bl	10e74 <fputs_unlocked@plt>
   113d4:	str	r0, [sp, #4]
   113d8:	mov	sp, fp
   113dc:	pop	{fp, pc}
   113e0:	push	{fp, lr}
   113e4:	mov	fp, sp
   113e8:	sub	sp, sp, #96	; 0x60
   113ec:	add	r1, sp, #36	; 0x24
   113f0:	movw	r2, #56568	; 0xdcf8
   113f4:	movt	r2, #1
   113f8:	str	r0, [fp, #-4]
   113fc:	mov	r0, r1
   11400:	str	r1, [sp, #20]
   11404:	mov	r1, r2
   11408:	movw	r2, #56	; 0x38
   1140c:	bl	10ec8 <memcpy@plt>
   11410:	ldr	r0, [fp, #-4]
   11414:	str	r0, [sp, #32]
   11418:	ldr	r0, [sp, #20]
   1141c:	str	r0, [sp, #28]
   11420:	ldr	r0, [sp, #28]
   11424:	ldr	r0, [r0]
   11428:	movw	r1, #0
   1142c:	cmp	r0, r1
   11430:	movw	r0, #0
   11434:	str	r0, [sp, #16]
   11438:	beq	11464 <__assert_fail@plt+0x374>
   1143c:	ldr	r0, [fp, #-4]
   11440:	ldr	r1, [sp, #28]
   11444:	ldr	r1, [r1]
   11448:	bl	10e8c <strcmp@plt>
   1144c:	cmp	r0, #0
   11450:	movw	r0, #0
   11454:	moveq	r0, #1
   11458:	mvn	r1, #0
   1145c:	eor	r0, r0, r1
   11460:	str	r0, [sp, #16]
   11464:	ldr	r0, [sp, #16]
   11468:	tst	r0, #1
   1146c:	beq	11480 <__assert_fail@plt+0x390>
   11470:	ldr	r0, [sp, #28]
   11474:	add	r0, r0, #8
   11478:	str	r0, [sp, #28]
   1147c:	b	11420 <__assert_fail@plt+0x330>
   11480:	ldr	r0, [sp, #28]
   11484:	ldr	r0, [r0, #4]
   11488:	movw	r1, #0
   1148c:	cmp	r0, r1
   11490:	beq	114a0 <__assert_fail@plt+0x3b0>
   11494:	ldr	r0, [sp, #28]
   11498:	ldr	r0, [r0, #4]
   1149c:	str	r0, [sp, #32]
   114a0:	movw	r0, #56037	; 0xdae5
   114a4:	movt	r0, #1
   114a8:	bl	10fd0 <gettext@plt>
   114ac:	movw	r1, #55732	; 0xd9b4
   114b0:	movt	r1, #1
   114b4:	movw	r2, #56060	; 0xdafc
   114b8:	movt	r2, #1
   114bc:	bl	10e98 <printf@plt>
   114c0:	movw	r1, #5
   114c4:	str	r0, [sp, #12]
   114c8:	mov	r0, r1
   114cc:	movw	r1, #0
   114d0:	bl	11078 <setlocale@plt>
   114d4:	str	r0, [sp, #24]
   114d8:	ldr	r0, [sp, #24]
   114dc:	movw	r1, #0
   114e0:	cmp	r0, r1
   114e4:	beq	11524 <__assert_fail@plt+0x434>
   114e8:	ldr	r0, [sp, #24]
   114ec:	movw	r1, #56100	; 0xdb24
   114f0:	movt	r1, #1
   114f4:	movw	r2, #3
   114f8:	bl	110d8 <strncmp@plt>
   114fc:	cmp	r0, #0
   11500:	beq	11524 <__assert_fail@plt+0x434>
   11504:	movw	r0, #56104	; 0xdb28
   11508:	movt	r0, #1
   1150c:	bl	10fd0 <gettext@plt>
   11510:	movw	lr, #61780	; 0xf154
   11514:	movt	lr, #2
   11518:	ldr	r1, [lr]
   1151c:	bl	10e74 <fputs_unlocked@plt>
   11520:	str	r0, [sp, #8]
   11524:	movw	r0, #56175	; 0xdb6f
   11528:	movt	r0, #1
   1152c:	bl	10fd0 <gettext@plt>
   11530:	ldr	r2, [fp, #-4]
   11534:	movw	r1, #56060	; 0xdafc
   11538:	movt	r1, #1
   1153c:	bl	10e98 <printf@plt>
   11540:	movw	r1, #56202	; 0xdb8a
   11544:	movt	r1, #1
   11548:	str	r0, [sp, #4]
   1154c:	mov	r0, r1
   11550:	bl	10fd0 <gettext@plt>
   11554:	ldr	r1, [sp, #32]
   11558:	ldr	r2, [sp, #32]
   1155c:	ldr	lr, [fp, #-4]
   11560:	cmp	r2, lr
   11564:	movw	r2, #0
   11568:	moveq	r2, #1
   1156c:	tst	r2, #1
   11570:	movw	r2, #56252	; 0xdbbc
   11574:	movt	r2, #1
   11578:	movw	lr, #55970	; 0xdaa2
   1157c:	movt	lr, #1
   11580:	movne	r2, lr
   11584:	bl	10e98 <printf@plt>
   11588:	str	r0, [sp]
   1158c:	mov	sp, fp
   11590:	pop	{fp, pc}
   11594:	push	{fp, lr}
   11598:	mov	fp, sp
   1159c:	sub	sp, sp, #96	; 0x60
   115a0:	movw	r2, #0
   115a4:	str	r2, [fp, #-4]
   115a8:	str	r0, [fp, #-8]
   115ac:	str	r1, [fp, #-12]
   115b0:	ldr	r0, [fp, #-12]
   115b4:	ldr	r0, [r0]
   115b8:	bl	12c94 <__assert_fail@plt+0x1ba4>
   115bc:	movw	r0, #6
   115c0:	movw	r1, #56252	; 0xdbbc
   115c4:	movt	r1, #1
   115c8:	bl	11078 <setlocale@plt>
   115cc:	movw	r1, #55736	; 0xd9b8
   115d0:	movt	r1, #1
   115d4:	str	r0, [fp, #-28]	; 0xffffffe4
   115d8:	mov	r0, r1
   115dc:	movw	r1, #55553	; 0xd901
   115e0:	movt	r1, #1
   115e4:	bl	110b4 <bindtextdomain@plt>
   115e8:	movw	r1, #55736	; 0xd9b8
   115ec:	movt	r1, #1
   115f0:	str	r0, [fp, #-32]	; 0xffffffe0
   115f4:	mov	r0, r1
   115f8:	bl	10f04 <textdomain@plt>
   115fc:	movw	r1, #125	; 0x7d
   11600:	str	r0, [fp, #-36]	; 0xffffffdc
   11604:	mov	r0, r1
   11608:	bl	11a34 <__assert_fail@plt+0x944>
   1160c:	movw	r0, #10040	; 0x2738
   11610:	movt	r0, #1
   11614:	bl	1d430 <__assert_fail@plt+0xc340>
   11618:	str	r0, [fp, #-40]	; 0xffffffd8
   1161c:	ldr	r0, [fp, #-8]
   11620:	ldr	r1, [fp, #-12]
   11624:	movw	r2, #55577	; 0xd919
   11628:	movt	r2, #1
   1162c:	movw	r3, #56472	; 0xdc98
   11630:	movt	r3, #1
   11634:	movw	ip, #0
   11638:	str	ip, [sp]
   1163c:	bl	10fac <getopt_long@plt>
   11640:	str	r0, [fp, #-16]
   11644:	cmn	r0, #1
   11648:	beq	118b4 <__assert_fail@plt+0x7c4>
   1164c:	ldr	r0, [fp, #-16]
   11650:	cmn	r0, #3
   11654:	str	r0, [fp, #-44]	; 0xffffffd4
   11658:	beq	11860 <__assert_fail@plt+0x770>
   1165c:	b	11660 <__assert_fail@plt+0x570>
   11660:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11664:	cmn	r0, #2
   11668:	beq	11858 <__assert_fail@plt+0x768>
   1166c:	b	11670 <__assert_fail@plt+0x580>
   11670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11674:	cmp	r0, #101	; 0x65
   11678:	beq	116a0 <__assert_fail@plt+0x5b0>
   1167c:	b	11680 <__assert_fail@plt+0x590>
   11680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11684:	cmp	r0, #105	; 0x69
   11688:	beq	116a0 <__assert_fail@plt+0x5b0>
   1168c:	b	11690 <__assert_fail@plt+0x5a0>
   11690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11694:	cmp	r0, #111	; 0x6f
   11698:	bne	118a8 <__assert_fail@plt+0x7b8>
   1169c:	b	116a0 <__assert_fail@plt+0x5b0>
   116a0:	ldr	r0, [fp, #-16]
   116a4:	bl	11a60 <__assert_fail@plt+0x970>
   116a8:	str	r0, [fp, #-20]	; 0xffffffec
   116ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   116b0:	movw	lr, #0
   116b4:	cmp	lr, r0
   116b8:	bgt	116cc <__assert_fail@plt+0x5dc>
   116bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   116c0:	cmp	r0, #3
   116c4:	bcs	116cc <__assert_fail@plt+0x5dc>
   116c8:	b	116ec <__assert_fail@plt+0x5fc>
   116cc:	movw	r0, #55585	; 0xd921
   116d0:	movt	r0, #1
   116d4:	movw	r1, #55644	; 0xd95c
   116d8:	movt	r1, #1
   116dc:	movw	r2, #336	; 0x150
   116e0:	movw	r3, #55657	; 0xd969
   116e4:	movt	r3, #1
   116e8:	bl	110f0 <__assert_fail@plt>
   116ec:	ldr	r0, [fp, #-16]
   116f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   116f4:	movw	r2, #12
   116f8:	mul	r1, r1, r2
   116fc:	movw	r2, #61792	; 0xf160
   11700:	movt	r2, #2
   11704:	add	r1, r2, r1
   11708:	str	r0, [r1, #4]
   1170c:	movw	r0, #61784	; 0xf158
   11710:	movt	r0, #2
   11714:	ldr	r0, [r0]
   11718:	ldrb	r0, [r0]
   1171c:	bl	12550 <__assert_fail@plt+0x1460>
   11720:	tst	r0, #1
   11724:	beq	11740 <__assert_fail@plt+0x650>
   11728:	movw	r0, #61784	; 0xf158
   1172c:	movt	r0, #2
   11730:	ldr	r1, [r0]
   11734:	add	r1, r1, #1
   11738:	str	r1, [r0]
   1173c:	b	1170c <__assert_fail@plt+0x61c>
   11740:	movw	r0, #61784	; 0xf158
   11744:	movt	r0, #2
   11748:	ldr	r0, [r0]
   1174c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11750:	movw	r2, #12
   11754:	mul	r1, r1, r2
   11758:	movw	r2, #61792	; 0xf160
   1175c:	movt	r2, #2
   11760:	add	r1, r2, r1
   11764:	str	r0, [r1, #8]
   11768:	ldr	r0, [fp, #-16]
   1176c:	cmp	r0, #105	; 0x69
   11770:	bne	117b8 <__assert_fail@plt+0x6c8>
   11774:	movw	r0, #61784	; 0xf158
   11778:	movt	r0, #2
   1177c:	ldr	r0, [r0]
   11780:	ldrb	r0, [r0]
   11784:	cmp	r0, #76	; 0x4c
   11788:	bne	117b8 <__assert_fail@plt+0x6c8>
   1178c:	movw	r0, #55680	; 0xd980
   11790:	movt	r0, #1
   11794:	bl	10fd0 <gettext@plt>
   11798:	movw	lr, #0
   1179c:	str	r0, [sp, #48]	; 0x30
   117a0:	mov	r0, lr
   117a4:	mov	r1, lr
   117a8:	ldr	r2, [sp, #48]	; 0x30
   117ac:	bl	10f64 <error@plt>
   117b0:	movw	r0, #125	; 0x7d
   117b4:	bl	111ec <__assert_fail@plt+0xfc>
   117b8:	movw	r0, #61784	; 0xf158
   117bc:	movt	r0, #2
   117c0:	ldr	r0, [r0]
   117c4:	movw	r1, #56295	; 0xdbe7
   117c8:	movt	r1, #1
   117cc:	bl	10e8c <strcmp@plt>
   117d0:	cmp	r0, #0
   117d4:	beq	11854 <__assert_fail@plt+0x764>
   117d8:	movw	r0, #61784	; 0xf158
   117dc:	movt	r0, #2
   117e0:	ldr	r0, [r0]
   117e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   117e8:	movw	r2, #12
   117ec:	mul	r1, r1, r2
   117f0:	movw	r2, #61792	; 0xf160
   117f4:	movt	r2, #2
   117f8:	add	r1, r2, r1
   117fc:	bl	11ad0 <__assert_fail@plt+0x9e0>
   11800:	cmn	r0, #1
   11804:	bne	11854 <__assert_fail@plt+0x764>
   11808:	bl	11000 <__errno_location@plt>
   1180c:	ldr	r1, [r0]
   11810:	movw	r0, #55716	; 0xd9a4
   11814:	movt	r0, #1
   11818:	str	r1, [sp, #44]	; 0x2c
   1181c:	bl	10fd0 <gettext@plt>
   11820:	movw	r1, #61784	; 0xf158
   11824:	movt	r1, #2
   11828:	ldr	r1, [r1]
   1182c:	str	r0, [sp, #40]	; 0x28
   11830:	mov	r0, r1
   11834:	bl	152f0 <__assert_fail@plt+0x4200>
   11838:	movw	r1, #125	; 0x7d
   1183c:	str	r0, [sp, #36]	; 0x24
   11840:	mov	r0, r1
   11844:	ldr	r1, [sp, #44]	; 0x2c
   11848:	ldr	r2, [sp, #40]	; 0x28
   1184c:	ldr	r3, [sp, #36]	; 0x24
   11850:	bl	10f64 <error@plt>
   11854:	b	118b0 <__assert_fail@plt+0x7c0>
   11858:	movw	r0, #0
   1185c:	bl	111ec <__assert_fail@plt+0xfc>
   11860:	movw	r0, #61780	; 0xf154
   11864:	movt	r0, #2
   11868:	ldr	r0, [r0]
   1186c:	movw	r1, #61684	; 0xf0f4
   11870:	movt	r1, #2
   11874:	ldr	r3, [r1]
   11878:	movw	r1, #55546	; 0xd8fa
   1187c:	movt	r1, #1
   11880:	movw	r2, #55732	; 0xd9b4
   11884:	movt	r2, #1
   11888:	movw	ip, #55746	; 0xd9c2
   1188c:	movt	ip, #1
   11890:	str	ip, [sp]
   11894:	movw	ip, #0
   11898:	str	ip, [sp, #4]
   1189c:	bl	15bac <__assert_fail@plt+0x4abc>
   118a0:	movw	r0, #0
   118a4:	bl	10fc4 <exit@plt>
   118a8:	movw	r0, #125	; 0x7d
   118ac:	bl	111ec <__assert_fail@plt+0xfc>
   118b0:	b	1161c <__assert_fail@plt+0x52c>
   118b4:	movw	r0, #61768	; 0xf148
   118b8:	movt	r0, #2
   118bc:	ldr	r0, [r0]
   118c0:	ldr	r1, [fp, #-12]
   118c4:	add	r0, r1, r0, lsl #2
   118c8:	str	r0, [fp, #-12]
   118cc:	movw	r0, #61768	; 0xf148
   118d0:	movt	r0, #2
   118d4:	ldr	r0, [r0]
   118d8:	ldr	r1, [fp, #-8]
   118dc:	sub	r0, r1, r0
   118e0:	str	r0, [fp, #-8]
   118e4:	ldr	r0, [fp, #-8]
   118e8:	cmp	r0, #1
   118ec:	bge	1191c <__assert_fail@plt+0x82c>
   118f0:	movw	r0, #55760	; 0xd9d0
   118f4:	movt	r0, #1
   118f8:	bl	10fd0 <gettext@plt>
   118fc:	movw	lr, #0
   11900:	str	r0, [sp, #32]
   11904:	mov	r0, lr
   11908:	mov	r1, lr
   1190c:	ldr	r2, [sp, #32]
   11910:	bl	10f64 <error@plt>
   11914:	movw	r0, #125	; 0x7d
   11918:	bl	111ec <__assert_fail@plt+0xfc>
   1191c:	bl	11ba8 <__assert_fail@plt+0xab8>
   11920:	tst	r0, #1
   11924:	bne	11954 <__assert_fail@plt+0x864>
   11928:	movw	r0, #55776	; 0xd9e0
   1192c:	movt	r0, #1
   11930:	bl	10fd0 <gettext@plt>
   11934:	movw	lr, #0
   11938:	str	r0, [sp, #28]
   1193c:	mov	r0, lr
   11940:	mov	r1, lr
   11944:	ldr	r2, [sp, #28]
   11948:	bl	10f64 <error@plt>
   1194c:	movw	r0, #125	; 0x7d
   11950:	bl	111ec <__assert_fail@plt+0xfc>
   11954:	movw	r0, #61840	; 0xf190
   11958:	movt	r0, #2
   1195c:	ldr	r0, [r0]
   11960:	bl	11d64 <__assert_fail@plt+0xc74>
   11964:	movw	r0, #61828	; 0xf184
   11968:	movt	r0, #2
   1196c:	ldr	r0, [r0]
   11970:	movw	lr, #0
   11974:	cmp	r0, lr
   11978:	bne	11994 <__assert_fail@plt+0x8a4>
   1197c:	movw	r0, #55817	; 0xda09
   11980:	movt	r0, #1
   11984:	bl	18ae0 <__assert_fail@plt+0x79f0>
   11988:	movw	lr, #61828	; 0xf184
   1198c:	movt	lr, #2
   11990:	str	r0, [lr]
   11994:	bl	11ea8 <__assert_fail@plt+0xdb8>
   11998:	movw	lr, #61828	; 0xf184
   1199c:	movt	lr, #2
   119a0:	ldr	r0, [lr]
   119a4:	bl	12c54 <__assert_fail@plt+0x1b64>
   119a8:	ldr	r0, [fp, #-12]
   119ac:	ldr	r0, [r0]
   119b0:	ldr	r1, [fp, #-12]
   119b4:	bl	10ed4 <execvp@plt>
   119b8:	str	r0, [sp, #24]
   119bc:	bl	11000 <__errno_location@plt>
   119c0:	ldr	r0, [r0]
   119c4:	cmp	r0, #2
   119c8:	movw	r0, #0
   119cc:	moveq	r0, #1
   119d0:	tst	r0, #1
   119d4:	movw	r0, #127	; 0x7f
   119d8:	moveq	r0, #126	; 0x7e
   119dc:	str	r0, [fp, #-24]	; 0xffffffe8
   119e0:	bl	11000 <__errno_location@plt>
   119e4:	ldr	r1, [r0]
   119e8:	movw	r0, #55842	; 0xda22
   119ec:	movt	r0, #1
   119f0:	str	r1, [sp, #20]
   119f4:	bl	10fd0 <gettext@plt>
   119f8:	ldr	r1, [fp, #-12]
   119fc:	ldr	r1, [r1]
   11a00:	str	r0, [sp, #16]
   11a04:	mov	r0, r1
   11a08:	bl	152f0 <__assert_fail@plt+0x4200>
   11a0c:	movw	r1, #0
   11a10:	str	r0, [sp, #12]
   11a14:	mov	r0, r1
   11a18:	ldr	r1, [sp, #20]
   11a1c:	ldr	r2, [sp, #16]
   11a20:	ldr	r3, [sp, #12]
   11a24:	bl	10f64 <error@plt>
   11a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a2c:	mov	sp, fp
   11a30:	pop	{fp, pc}
   11a34:	sub	sp, sp, #4
   11a38:	str	r0, [sp]
   11a3c:	ldr	r0, [sp]
   11a40:	cmp	r0, #1
   11a44:	beq	11a58 <__assert_fail@plt+0x968>
   11a48:	ldr	r0, [sp]
   11a4c:	movw	r1, #61688	; 0xf0f8
   11a50:	movt	r1, #2
   11a54:	str	r0, [r1]
   11a58:	add	sp, sp, #4
   11a5c:	bx	lr
   11a60:	sub	sp, sp, #12
   11a64:	str	r0, [sp, #8]
   11a68:	mvn	r0, #0
   11a6c:	str	r0, [sp, #4]
   11a70:	ldr	r0, [sp, #8]
   11a74:	cmp	r0, #101	; 0x65
   11a78:	str	r0, [sp]
   11a7c:	beq	11aa4 <__assert_fail@plt+0x9b4>
   11a80:	b	11a84 <__assert_fail@plt+0x994>
   11a84:	ldr	r0, [sp]
   11a88:	cmp	r0, #105	; 0x69
   11a8c:	beq	11ab0 <__assert_fail@plt+0x9c0>
   11a90:	b	11a94 <__assert_fail@plt+0x9a4>
   11a94:	ldr	r0, [sp]
   11a98:	cmp	r0, #111	; 0x6f
   11a9c:	beq	11abc <__assert_fail@plt+0x9cc>
   11aa0:	b	11ac4 <__assert_fail@plt+0x9d4>
   11aa4:	movw	r0, #2
   11aa8:	str	r0, [sp, #4]
   11aac:	b	11ac4 <__assert_fail@plt+0x9d4>
   11ab0:	movw	r0, #0
   11ab4:	str	r0, [sp, #4]
   11ab8:	b	11ac4 <__assert_fail@plt+0x9d4>
   11abc:	movw	r0, #1
   11ac0:	str	r0, [sp, #4]
   11ac4:	ldr	r0, [sp, #4]
   11ac8:	add	sp, sp, #12
   11acc:	bx	lr
   11ad0:	push	{fp, lr}
   11ad4:	mov	fp, sp
   11ad8:	sub	sp, sp, #40	; 0x28
   11adc:	str	r0, [fp, #-8]
   11ae0:	str	r1, [fp, #-12]
   11ae4:	ldr	r0, [fp, #-8]
   11ae8:	movw	r1, #0
   11aec:	movw	r2, #10
   11af0:	add	r3, sp, #16
   11af4:	movw	ip, #56279	; 0xdbd7
   11af8:	movt	ip, #1
   11afc:	str	ip, [sp]
   11b00:	bl	18bb4 <__assert_fail@plt+0x7ac4>
   11b04:	str	r0, [sp, #12]
   11b08:	ldr	r0, [sp, #12]
   11b0c:	cmp	r0, #0
   11b10:	bne	11b2c <__assert_fail@plt+0xa3c>
   11b14:	ldr	r0, [sp, #20]
   11b18:	cmp	r0, #0
   11b1c:	beq	11b2c <__assert_fail@plt+0xa3c>
   11b20:	b	11b24 <__assert_fail@plt+0xa34>
   11b24:	movw	r0, #1
   11b28:	str	r0, [sp, #12]
   11b2c:	ldr	r0, [sp, #12]
   11b30:	cmp	r0, #0
   11b34:	bne	11b5c <__assert_fail@plt+0xa6c>
   11b38:	bl	11000 <__errno_location@plt>
   11b3c:	mov	lr, #0
   11b40:	str	lr, [r0]
   11b44:	ldr	r0, [sp, #16]
   11b48:	ldr	lr, [fp, #-12]
   11b4c:	str	r0, [lr]
   11b50:	movw	r0, #0
   11b54:	str	r0, [fp, #-4]
   11b58:	b	11b9c <__assert_fail@plt+0xaac>
   11b5c:	ldr	r0, [sp, #12]
   11b60:	cmp	r0, #1
   11b64:	bne	11b74 <__assert_fail@plt+0xa84>
   11b68:	movw	r0, #75	; 0x4b
   11b6c:	str	r0, [sp, #8]
   11b70:	b	11b80 <__assert_fail@plt+0xa90>
   11b74:	bl	11000 <__errno_location@plt>
   11b78:	ldr	r0, [r0]
   11b7c:	str	r0, [sp, #8]
   11b80:	ldr	r0, [sp, #8]
   11b84:	str	r0, [sp, #4]
   11b88:	bl	11000 <__errno_location@plt>
   11b8c:	ldr	lr, [sp, #4]
   11b90:	str	lr, [r0]
   11b94:	mvn	r0, #0
   11b98:	str	r0, [fp, #-4]
   11b9c:	ldr	r0, [fp, #-4]
   11ba0:	mov	sp, fp
   11ba4:	pop	{fp, pc}
   11ba8:	push	{fp, lr}
   11bac:	mov	fp, sp
   11bb0:	sub	sp, sp, #48	; 0x30
   11bb4:	movw	r0, #0
   11bb8:	strb	r0, [fp, #-1]
   11bbc:	movw	r0, #0
   11bc0:	str	r0, [fp, #-8]
   11bc4:	ldr	r0, [fp, #-8]
   11bc8:	cmp	r0, #3
   11bcc:	bcs	11d54 <__assert_fail@plt+0xc64>
   11bd0:	ldr	r0, [fp, #-8]
   11bd4:	movw	r1, #12
   11bd8:	mul	r0, r0, r1
   11bdc:	movw	r1, #61792	; 0xf160
   11be0:	movt	r1, #2
   11be4:	add	r0, r1, r0
   11be8:	ldr	r0, [r0, #8]
   11bec:	movw	r1, #0
   11bf0:	cmp	r0, r1
   11bf4:	beq	11d40 <__assert_fail@plt+0xc50>
   11bf8:	ldr	r0, [fp, #-8]
   11bfc:	movw	r1, #12
   11c00:	mul	r0, r0, r1
   11c04:	movw	r1, #61792	; 0xf160
   11c08:	movt	r1, #2
   11c0c:	add	r0, r1, r0
   11c10:	ldr	r0, [r0, #8]
   11c14:	ldrb	r0, [r0]
   11c18:	cmp	r0, #76	; 0x4c
   11c1c:	bne	11c6c <__assert_fail@plt+0xb7c>
   11c20:	ldr	r0, [fp, #-8]
   11c24:	movw	r1, #12
   11c28:	mul	r0, r0, r1
   11c2c:	movw	r1, #61792	; 0xf160
   11c30:	movt	r1, #2
   11c34:	add	r0, r1, r0
   11c38:	ldr	r0, [r0, #4]
   11c3c:	bl	11090 <toupper@plt>
   11c40:	sub	r1, fp, #12
   11c44:	str	r0, [fp, #-20]	; 0xffffffec
   11c48:	mov	r0, r1
   11c4c:	movw	r1, #56290	; 0xdbe2
   11c50:	movt	r1, #1
   11c54:	movw	r2, #56297	; 0xdbe9
   11c58:	movt	r2, #1
   11c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c60:	bl	1103c <asprintf@plt>
   11c64:	str	r0, [fp, #-16]
   11c68:	b	11cd4 <__assert_fail@plt+0xbe4>
   11c6c:	ldr	r0, [fp, #-8]
   11c70:	add	r0, r0, r0, lsl #1
   11c74:	movw	r1, #61792	; 0xf160
   11c78:	movt	r1, #2
   11c7c:	add	r0, r1, r0, lsl #2
   11c80:	ldr	r0, [r0, #4]
   11c84:	str	r1, [sp, #24]
   11c88:	bl	11090 <toupper@plt>
   11c8c:	ldr	r1, [fp, #-8]
   11c90:	add	r1, r1, r1, lsl #1
   11c94:	ldr	lr, [sp, #24]
   11c98:	ldr	r1, [lr, r1, lsl #2]
   11c9c:	mov	r2, #0
   11ca0:	mov	r3, sp
   11ca4:	str	r2, [r3, #4]
   11ca8:	str	r1, [r3]
   11cac:	movw	r1, #56306	; 0xdbf2
   11cb0:	movt	r1, #1
   11cb4:	movw	r2, #56297	; 0xdbe9
   11cb8:	movt	r2, #1
   11cbc:	sub	r3, fp, #12
   11cc0:	str	r0, [sp, #20]
   11cc4:	mov	r0, r3
   11cc8:	ldr	r3, [sp, #20]
   11ccc:	bl	1103c <asprintf@plt>
   11cd0:	str	r0, [fp, #-16]
   11cd4:	ldr	r0, [fp, #-16]
   11cd8:	cmp	r0, #0
   11cdc:	bge	11ce4 <__assert_fail@plt+0xbf4>
   11ce0:	bl	18b18 <__assert_fail@plt+0x7a28>
   11ce4:	ldr	r0, [fp, #-12]
   11ce8:	bl	11084 <putenv@plt>
   11cec:	cmp	r0, #0
   11cf0:	beq	11d38 <__assert_fail@plt+0xc48>
   11cf4:	bl	11000 <__errno_location@plt>
   11cf8:	ldr	r1, [r0]
   11cfc:	movw	r0, #56316	; 0xdbfc
   11d00:	movt	r0, #1
   11d04:	str	r1, [sp, #16]
   11d08:	bl	10fd0 <gettext@plt>
   11d0c:	ldr	r1, [fp, #-12]
   11d10:	str	r0, [sp, #12]
   11d14:	mov	r0, r1
   11d18:	bl	152f0 <__assert_fail@plt+0x4200>
   11d1c:	movw	r1, #125	; 0x7d
   11d20:	str	r0, [sp, #8]
   11d24:	mov	r0, r1
   11d28:	ldr	r1, [sp, #16]
   11d2c:	ldr	r2, [sp, #12]
   11d30:	ldr	r3, [sp, #8]
   11d34:	bl	10f64 <error@plt>
   11d38:	movw	r0, #1
   11d3c:	strb	r0, [fp, #-1]
   11d40:	b	11d44 <__assert_fail@plt+0xc54>
   11d44:	ldr	r0, [fp, #-8]
   11d48:	add	r0, r0, #1
   11d4c:	str	r0, [fp, #-8]
   11d50:	b	11bc4 <__assert_fail@plt+0xad4>
   11d54:	ldrb	r0, [fp, #-1]
   11d58:	and	r0, r0, #1
   11d5c:	mov	sp, fp
   11d60:	pop	{fp, pc}
   11d64:	push	{fp, lr}
   11d68:	mov	fp, sp
   11d6c:	sub	sp, sp, #16
   11d70:	str	r0, [fp, #-4]
   11d74:	ldr	r0, [fp, #-4]
   11d78:	movw	r1, #47	; 0x2f
   11d7c:	bl	10fe8 <strchr@plt>
   11d80:	movw	r1, #0
   11d84:	cmp	r0, r1
   11d88:	beq	11da4 <__assert_fail@plt+0xcb4>
   11d8c:	ldr	r0, [fp, #-4]
   11d90:	bl	12858 <__assert_fail@plt+0x1768>
   11d94:	movw	lr, #61828	; 0xf184
   11d98:	movt	lr, #2
   11d9c:	str	r0, [lr]
   11da0:	b	11ea0 <__assert_fail@plt+0xdb0>
   11da4:	movw	r0, #56357	; 0xdc25
   11da8:	movt	r0, #1
   11dac:	bl	18b68 <__assert_fail@plt+0x7a78>
   11db0:	str	r0, [sp, #8]
   11db4:	ldr	r0, [sp, #8]
   11db8:	movw	lr, #0
   11dbc:	cmp	r0, lr
   11dc0:	beq	11ddc <__assert_fail@plt+0xcec>
   11dc4:	ldr	r0, [sp, #8]
   11dc8:	bl	12858 <__assert_fail@plt+0x1768>
   11dcc:	movw	lr, #61828	; 0xf184
   11dd0:	movt	lr, #2
   11dd4:	str	r0, [lr]
   11dd8:	b	11e98 <__assert_fail@plt+0xda8>
   11ddc:	movw	r0, #56372	; 0xdc34
   11de0:	movt	r0, #1
   11de4:	bl	10f70 <getenv@plt>
   11de8:	str	r0, [sp, #8]
   11dec:	movw	lr, #0
   11df0:	cmp	r0, lr
   11df4:	beq	11e94 <__assert_fail@plt+0xda4>
   11df8:	ldr	r0, [sp, #8]
   11dfc:	bl	18ae0 <__assert_fail@plt+0x79f0>
   11e00:	str	r0, [sp, #8]
   11e04:	ldr	r0, [sp, #8]
   11e08:	movw	r1, #55583	; 0xd91f
   11e0c:	movt	r1, #1
   11e10:	bl	1106c <strtok@plt>
   11e14:	str	r0, [sp, #4]
   11e18:	ldr	r0, [sp, #4]
   11e1c:	movw	r1, #0
   11e20:	cmp	r0, r1
   11e24:	beq	11e90 <__assert_fail@plt+0xda0>
   11e28:	ldr	r0, [sp, #4]
   11e2c:	ldr	r1, [fp, #-4]
   11e30:	movw	r2, #0
   11e34:	bl	12a40 <__assert_fail@plt+0x1950>
   11e38:	str	r0, [sp]
   11e3c:	ldr	r0, [sp]
   11e40:	movw	r1, #1
   11e44:	bl	11048 <access@plt>
   11e48:	cmp	r0, #0
   11e4c:	bne	11e70 <__assert_fail@plt+0xd80>
   11e50:	ldr	r0, [sp]
   11e54:	bl	12858 <__assert_fail@plt+0x1768>
   11e58:	movw	lr, #61828	; 0xf184
   11e5c:	movt	lr, #2
   11e60:	str	r0, [lr]
   11e64:	ldr	r0, [sp]
   11e68:	bl	12c54 <__assert_fail@plt+0x1b64>
   11e6c:	b	11e90 <__assert_fail@plt+0xda0>
   11e70:	ldr	r0, [sp]
   11e74:	bl	12c54 <__assert_fail@plt+0x1b64>
   11e78:	movw	r0, #0
   11e7c:	movw	r1, #55583	; 0xd91f
   11e80:	movt	r1, #1
   11e84:	bl	1106c <strtok@plt>
   11e88:	str	r0, [sp, #4]
   11e8c:	b	11e18 <__assert_fail@plt+0xd28>
   11e90:	b	11e94 <__assert_fail@plt+0xda4>
   11e94:	b	11e98 <__assert_fail@plt+0xda8>
   11e98:	ldr	r0, [sp, #8]
   11e9c:	bl	12c54 <__assert_fail@plt+0x1b64>
   11ea0:	mov	sp, fp
   11ea4:	pop	{fp, pc}
   11ea8:	push	{fp, lr}
   11eac:	mov	fp, sp
   11eb0:	sub	sp, sp, #176	; 0xb0
   11eb4:	movw	r0, #56377	; 0xdc39
   11eb8:	movt	r0, #1
   11ebc:	str	r0, [fp, #-8]
   11ec0:	ldr	r0, [fp, #-8]
   11ec4:	bl	10f70 <getenv@plt>
   11ec8:	sub	lr, fp, #28
   11ecc:	str	r0, [fp, #-12]
   11ed0:	movw	r0, #61828	; 0xf184
   11ed4:	movt	r0, #2
   11ed8:	ldr	r0, [r0]
   11edc:	str	r0, [fp, #-28]	; 0xffffffe4
   11ee0:	movw	r0, #56388	; 0xdc44
   11ee4:	movt	r0, #1
   11ee8:	str	r0, [fp, #-24]	; 0xffffffe8
   11eec:	movw	r0, #0
   11ef0:	str	r0, [fp, #-20]	; 0xffffffec
   11ef4:	str	lr, [fp, #-32]	; 0xffffffe0
   11ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11efc:	ldr	r0, [r0]
   11f00:	ldrsb	r0, [r0]
   11f04:	cmp	r0, #0
   11f08:	bne	11f20 <__assert_fail@plt+0xe30>
   11f0c:	movw	r0, #56417	; 0xdc61
   11f10:	movt	r0, #1
   11f14:	bl	18ae0 <__assert_fail@plt+0x79f0>
   11f18:	str	r0, [fp, #-36]	; 0xffffffdc
   11f1c:	b	11fd4 <__assert_fail@plt+0xee4>
   11f20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f24:	ldr	r2, [r0]
   11f28:	sub	r0, fp, #36	; 0x24
   11f2c:	movw	r1, #56430	; 0xdc6e
   11f30:	movt	r1, #1
   11f34:	movw	r3, #56417	; 0xdc61
   11f38:	movt	r3, #1
   11f3c:	bl	1103c <asprintf@plt>
   11f40:	str	r0, [fp, #-4]
   11f44:	ldr	r0, [fp, #-4]
   11f48:	cmp	r0, #0
   11f4c:	bge	11f54 <__assert_fail@plt+0xe64>
   11f50:	bl	18b18 <__assert_fail@plt+0x7a28>
   11f54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11f58:	add	r1, sp, #32
   11f5c:	bl	1d448 <__assert_fail@plt+0xc358>
   11f60:	cmp	r0, #0
   11f64:	bne	11f6c <__assert_fail@plt+0xe7c>
   11f68:	b	11fd4 <__assert_fail@plt+0xee4>
   11f6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11f70:	bl	12c54 <__assert_fail@plt+0x1b64>
   11f74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f78:	add	r0, r0, #4
   11f7c:	str	r0, [fp, #-32]	; 0xffffffe0
   11f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f84:	ldr	r0, [r0]
   11f88:	movw	lr, #0
   11f8c:	cmp	r0, lr
   11f90:	bne	11fd0 <__assert_fail@plt+0xee0>
   11f94:	movw	r0, #56436	; 0xdc74
   11f98:	movt	r0, #1
   11f9c:	bl	10fd0 <gettext@plt>
   11fa0:	movw	lr, #56417	; 0xdc61
   11fa4:	movt	lr, #1
   11fa8:	str	r0, [sp, #28]
   11fac:	mov	r0, lr
   11fb0:	bl	152f0 <__assert_fail@plt+0x4200>
   11fb4:	movw	lr, #125	; 0x7d
   11fb8:	str	r0, [sp, #24]
   11fbc:	mov	r0, lr
   11fc0:	movw	r1, #0
   11fc4:	ldr	r2, [sp, #28]
   11fc8:	ldr	r3, [sp, #24]
   11fcc:	bl	10f64 <error@plt>
   11fd0:	b	11ef8 <__assert_fail@plt+0xe08>
   11fd4:	ldr	r0, [fp, #-12]
   11fd8:	movw	r1, #0
   11fdc:	cmp	r0, r1
   11fe0:	beq	12018 <__assert_fail@plt+0xf28>
   11fe4:	ldr	r2, [fp, #-8]
   11fe8:	ldr	r3, [fp, #-12]
   11fec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ff0:	sub	r1, fp, #16
   11ff4:	str	r0, [sp, #20]
   11ff8:	mov	r0, r1
   11ffc:	movw	r1, #56454	; 0xdc86
   12000:	movt	r1, #1
   12004:	ldr	ip, [sp, #20]
   12008:	str	ip, [sp]
   1200c:	bl	1103c <asprintf@plt>
   12010:	str	r0, [fp, #-4]
   12014:	b	12034 <__assert_fail@plt+0xf44>
   12018:	ldr	r2, [fp, #-8]
   1201c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12020:	sub	r0, fp, #16
   12024:	movw	r1, #56463	; 0xdc8f
   12028:	movt	r1, #1
   1202c:	bl	1103c <asprintf@plt>
   12030:	str	r0, [fp, #-4]
   12034:	ldr	r0, [fp, #-4]
   12038:	cmp	r0, #0
   1203c:	bge	12044 <__assert_fail@plt+0xf54>
   12040:	bl	18b18 <__assert_fail@plt+0x7a28>
   12044:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12048:	bl	12c54 <__assert_fail@plt+0x1b64>
   1204c:	ldr	r0, [fp, #-16]
   12050:	bl	11084 <putenv@plt>
   12054:	str	r0, [fp, #-4]
   12058:	ldr	r0, [fp, #-4]
   1205c:	cmp	r0, #0
   12060:	beq	120a8 <__assert_fail@plt+0xfb8>
   12064:	bl	11000 <__errno_location@plt>
   12068:	ldr	r1, [r0]
   1206c:	movw	r0, #56316	; 0xdbfc
   12070:	movt	r0, #1
   12074:	str	r1, [sp, #16]
   12078:	bl	10fd0 <gettext@plt>
   1207c:	ldr	r1, [fp, #-16]
   12080:	str	r0, [sp, #12]
   12084:	mov	r0, r1
   12088:	bl	152f0 <__assert_fail@plt+0x4200>
   1208c:	movw	r1, #125	; 0x7d
   12090:	str	r0, [sp, #8]
   12094:	mov	r0, r1
   12098:	ldr	r1, [sp, #16]
   1209c:	ldr	r2, [sp, #12]
   120a0:	ldr	r3, [sp, #8]
   120a4:	bl	10f64 <error@plt>
   120a8:	mov	sp, fp
   120ac:	pop	{fp, pc}
   120b0:	sub	sp, sp, #12
   120b4:	str	r0, [sp, #4]
   120b8:	ldr	r0, [sp, #4]
   120bc:	sub	r1, r0, #48	; 0x30
   120c0:	cmp	r1, #10
   120c4:	str	r0, [sp]
   120c8:	bcc	120f8 <__assert_fail@plt+0x1008>
   120cc:	b	120d0 <__assert_fail@plt+0xfe0>
   120d0:	ldr	r0, [sp]
   120d4:	sub	r1, r0, #65	; 0x41
   120d8:	cmp	r1, #26
   120dc:	bcc	120f8 <__assert_fail@plt+0x1008>
   120e0:	b	120e4 <__assert_fail@plt+0xff4>
   120e4:	ldr	r0, [sp]
   120e8:	sub	r1, r0, #97	; 0x61
   120ec:	cmp	r1, #25
   120f0:	bhi	12108 <__assert_fail@plt+0x1018>
   120f4:	b	120f8 <__assert_fail@plt+0x1008>
   120f8:	movw	r0, #1
   120fc:	and	r0, r0, #1
   12100:	strb	r0, [sp, #11]
   12104:	b	12114 <__assert_fail@plt+0x1024>
   12108:	movw	r0, #0
   1210c:	and	r0, r0, #1
   12110:	strb	r0, [sp, #11]
   12114:	ldrb	r0, [sp, #11]
   12118:	and	r0, r0, #1
   1211c:	add	sp, sp, #12
   12120:	bx	lr
   12124:	sub	sp, sp, #12
   12128:	str	r0, [sp, #4]
   1212c:	ldr	r0, [sp, #4]
   12130:	sub	r1, r0, #65	; 0x41
   12134:	cmp	r1, #26
   12138:	str	r0, [sp]
   1213c:	bcc	12158 <__assert_fail@plt+0x1068>
   12140:	b	12144 <__assert_fail@plt+0x1054>
   12144:	ldr	r0, [sp]
   12148:	sub	r1, r0, #97	; 0x61
   1214c:	cmp	r1, #25
   12150:	bhi	12168 <__assert_fail@plt+0x1078>
   12154:	b	12158 <__assert_fail@plt+0x1068>
   12158:	movw	r0, #1
   1215c:	and	r0, r0, #1
   12160:	strb	r0, [sp, #11]
   12164:	b	12174 <__assert_fail@plt+0x1084>
   12168:	movw	r0, #0
   1216c:	and	r0, r0, #1
   12170:	strb	r0, [sp, #11]
   12174:	ldrb	r0, [sp, #11]
   12178:	and	r0, r0, #1
   1217c:	add	sp, sp, #12
   12180:	bx	lr
   12184:	sub	sp, sp, #8
   12188:	str	r0, [sp]
   1218c:	ldr	r0, [sp]
   12190:	cmp	r0, #127	; 0x7f
   12194:	bhi	121ac <__assert_fail@plt+0x10bc>
   12198:	b	1219c <__assert_fail@plt+0x10ac>
   1219c:	movw	r0, #1
   121a0:	and	r0, r0, #1
   121a4:	strb	r0, [sp, #7]
   121a8:	b	121b8 <__assert_fail@plt+0x10c8>
   121ac:	movw	r0, #0
   121b0:	and	r0, r0, #1
   121b4:	strb	r0, [sp, #7]
   121b8:	ldrb	r0, [sp, #7]
   121bc:	and	r0, r0, #1
   121c0:	add	sp, sp, #8
   121c4:	bx	lr
   121c8:	sub	sp, sp, #8
   121cc:	str	r0, [sp, #4]
   121d0:	ldr	r0, [sp, #4]
   121d4:	cmp	r0, #32
   121d8:	movw	r0, #1
   121dc:	str	r0, [sp]
   121e0:	beq	121f8 <__assert_fail@plt+0x1108>
   121e4:	ldr	r0, [sp, #4]
   121e8:	cmp	r0, #9
   121ec:	movw	r0, #0
   121f0:	moveq	r0, #1
   121f4:	str	r0, [sp]
   121f8:	ldr	r0, [sp]
   121fc:	and	r0, r0, #1
   12200:	add	sp, sp, #8
   12204:	bx	lr
   12208:	sub	sp, sp, #12
   1220c:	str	r0, [sp, #4]
   12210:	ldr	r0, [sp, #4]
   12214:	cmp	r0, #32
   12218:	str	r0, [sp]
   1221c:	bcc	12234 <__assert_fail@plt+0x1144>
   12220:	b	12224 <__assert_fail@plt+0x1134>
   12224:	ldr	r0, [sp]
   12228:	cmp	r0, #127	; 0x7f
   1222c:	bne	12244 <__assert_fail@plt+0x1154>
   12230:	b	12234 <__assert_fail@plt+0x1144>
   12234:	movw	r0, #1
   12238:	and	r0, r0, #1
   1223c:	strb	r0, [sp, #11]
   12240:	b	12250 <__assert_fail@plt+0x1160>
   12244:	movw	r0, #0
   12248:	and	r0, r0, #1
   1224c:	strb	r0, [sp, #11]
   12250:	ldrb	r0, [sp, #11]
   12254:	and	r0, r0, #1
   12258:	add	sp, sp, #12
   1225c:	bx	lr
   12260:	sub	sp, sp, #8
   12264:	str	r0, [sp]
   12268:	ldr	r0, [sp]
   1226c:	sub	r0, r0, #48	; 0x30
   12270:	cmp	r0, #9
   12274:	bhi	1228c <__assert_fail@plt+0x119c>
   12278:	b	1227c <__assert_fail@plt+0x118c>
   1227c:	movw	r0, #1
   12280:	and	r0, r0, #1
   12284:	strb	r0, [sp, #7]
   12288:	b	12298 <__assert_fail@plt+0x11a8>
   1228c:	movw	r0, #0
   12290:	and	r0, r0, #1
   12294:	strb	r0, [sp, #7]
   12298:	ldrb	r0, [sp, #7]
   1229c:	and	r0, r0, #1
   122a0:	add	sp, sp, #8
   122a4:	bx	lr
   122a8:	sub	sp, sp, #8
   122ac:	str	r0, [sp]
   122b0:	ldr	r0, [sp]
   122b4:	sub	r0, r0, #33	; 0x21
   122b8:	cmp	r0, #93	; 0x5d
   122bc:	bhi	122d4 <__assert_fail@plt+0x11e4>
   122c0:	b	122c4 <__assert_fail@plt+0x11d4>
   122c4:	movw	r0, #1
   122c8:	and	r0, r0, #1
   122cc:	strb	r0, [sp, #7]
   122d0:	b	122e0 <__assert_fail@plt+0x11f0>
   122d4:	movw	r0, #0
   122d8:	and	r0, r0, #1
   122dc:	strb	r0, [sp, #7]
   122e0:	ldrb	r0, [sp, #7]
   122e4:	and	r0, r0, #1
   122e8:	add	sp, sp, #8
   122ec:	bx	lr
   122f0:	sub	sp, sp, #8
   122f4:	str	r0, [sp]
   122f8:	ldr	r0, [sp]
   122fc:	sub	r0, r0, #97	; 0x61
   12300:	cmp	r0, #25
   12304:	bhi	1231c <__assert_fail@plt+0x122c>
   12308:	b	1230c <__assert_fail@plt+0x121c>
   1230c:	movw	r0, #1
   12310:	and	r0, r0, #1
   12314:	strb	r0, [sp, #7]
   12318:	b	12328 <__assert_fail@plt+0x1238>
   1231c:	movw	r0, #0
   12320:	and	r0, r0, #1
   12324:	strb	r0, [sp, #7]
   12328:	ldrb	r0, [sp, #7]
   1232c:	and	r0, r0, #1
   12330:	add	sp, sp, #8
   12334:	bx	lr
   12338:	sub	sp, sp, #8
   1233c:	str	r0, [sp]
   12340:	ldr	r0, [sp]
   12344:	sub	r0, r0, #32
   12348:	cmp	r0, #94	; 0x5e
   1234c:	bhi	12364 <__assert_fail@plt+0x1274>
   12350:	b	12354 <__assert_fail@plt+0x1264>
   12354:	movw	r0, #1
   12358:	and	r0, r0, #1
   1235c:	strb	r0, [sp, #7]
   12360:	b	12370 <__assert_fail@plt+0x1280>
   12364:	movw	r0, #0
   12368:	and	r0, r0, #1
   1236c:	strb	r0, [sp, #7]
   12370:	ldrb	r0, [sp, #7]
   12374:	and	r0, r0, #1
   12378:	add	sp, sp, #8
   1237c:	bx	lr
   12380:	sub	sp, sp, #12
   12384:	str	r0, [sp, #4]
   12388:	ldr	r0, [sp, #4]
   1238c:	sub	r0, r0, #33	; 0x21
   12390:	cmp	r0, #93	; 0x5d
   12394:	str	r0, [sp]
   12398:	bhi	12534 <__assert_fail@plt+0x1444>
   1239c:	add	r0, pc, #8
   123a0:	ldr	r1, [sp]
   123a4:	ldr	r0, [r0, r1, lsl #2]
   123a8:	mov	pc, r0
   123ac:	andeq	r2, r1, r4, lsr #10
   123b0:	andeq	r2, r1, r4, lsr #10
   123b4:	andeq	r2, r1, r4, lsr #10
   123b8:	andeq	r2, r1, r4, lsr #10
   123bc:	andeq	r2, r1, r4, lsr #10
   123c0:	andeq	r2, r1, r4, lsr #10
   123c4:	andeq	r2, r1, r4, lsr #10
   123c8:	andeq	r2, r1, r4, lsr #10
   123cc:	andeq	r2, r1, r4, lsr #10
   123d0:	andeq	r2, r1, r4, lsr #10
   123d4:	andeq	r2, r1, r4, lsr #10
   123d8:	andeq	r2, r1, r4, lsr #10
   123dc:	andeq	r2, r1, r4, lsr #10
   123e0:	andeq	r2, r1, r4, lsr #10
   123e4:	andeq	r2, r1, r4, lsr #10
   123e8:	andeq	r2, r1, r4, lsr r5
   123ec:	andeq	r2, r1, r4, lsr r5
   123f0:	andeq	r2, r1, r4, lsr r5
   123f4:	andeq	r2, r1, r4, lsr r5
   123f8:	andeq	r2, r1, r4, lsr r5
   123fc:	andeq	r2, r1, r4, lsr r5
   12400:	andeq	r2, r1, r4, lsr r5
   12404:	andeq	r2, r1, r4, lsr r5
   12408:	andeq	r2, r1, r4, lsr r5
   1240c:	andeq	r2, r1, r4, lsr r5
   12410:	andeq	r2, r1, r4, lsr #10
   12414:	andeq	r2, r1, r4, lsr #10
   12418:	andeq	r2, r1, r4, lsr #10
   1241c:	andeq	r2, r1, r4, lsr #10
   12420:	andeq	r2, r1, r4, lsr #10
   12424:	andeq	r2, r1, r4, lsr #10
   12428:	andeq	r2, r1, r4, lsr #10
   1242c:	andeq	r2, r1, r4, lsr r5
   12430:	andeq	r2, r1, r4, lsr r5
   12434:	andeq	r2, r1, r4, lsr r5
   12438:	andeq	r2, r1, r4, lsr r5
   1243c:	andeq	r2, r1, r4, lsr r5
   12440:	andeq	r2, r1, r4, lsr r5
   12444:	andeq	r2, r1, r4, lsr r5
   12448:	andeq	r2, r1, r4, lsr r5
   1244c:	andeq	r2, r1, r4, lsr r5
   12450:	andeq	r2, r1, r4, lsr r5
   12454:	andeq	r2, r1, r4, lsr r5
   12458:	andeq	r2, r1, r4, lsr r5
   1245c:	andeq	r2, r1, r4, lsr r5
   12460:	andeq	r2, r1, r4, lsr r5
   12464:	andeq	r2, r1, r4, lsr r5
   12468:	andeq	r2, r1, r4, lsr r5
   1246c:	andeq	r2, r1, r4, lsr r5
   12470:	andeq	r2, r1, r4, lsr r5
   12474:	andeq	r2, r1, r4, lsr r5
   12478:	andeq	r2, r1, r4, lsr r5
   1247c:	andeq	r2, r1, r4, lsr r5
   12480:	andeq	r2, r1, r4, lsr r5
   12484:	andeq	r2, r1, r4, lsr r5
   12488:	andeq	r2, r1, r4, lsr r5
   1248c:	andeq	r2, r1, r4, lsr r5
   12490:	andeq	r2, r1, r4, lsr r5
   12494:	andeq	r2, r1, r4, lsr #10
   12498:	andeq	r2, r1, r4, lsr #10
   1249c:	andeq	r2, r1, r4, lsr #10
   124a0:	andeq	r2, r1, r4, lsr #10
   124a4:	andeq	r2, r1, r4, lsr #10
   124a8:	andeq	r2, r1, r4, lsr #10
   124ac:	andeq	r2, r1, r4, lsr r5
   124b0:	andeq	r2, r1, r4, lsr r5
   124b4:	andeq	r2, r1, r4, lsr r5
   124b8:	andeq	r2, r1, r4, lsr r5
   124bc:	andeq	r2, r1, r4, lsr r5
   124c0:	andeq	r2, r1, r4, lsr r5
   124c4:	andeq	r2, r1, r4, lsr r5
   124c8:	andeq	r2, r1, r4, lsr r5
   124cc:	andeq	r2, r1, r4, lsr r5
   124d0:	andeq	r2, r1, r4, lsr r5
   124d4:	andeq	r2, r1, r4, lsr r5
   124d8:	andeq	r2, r1, r4, lsr r5
   124dc:	andeq	r2, r1, r4, lsr r5
   124e0:	andeq	r2, r1, r4, lsr r5
   124e4:	andeq	r2, r1, r4, lsr r5
   124e8:	andeq	r2, r1, r4, lsr r5
   124ec:	andeq	r2, r1, r4, lsr r5
   124f0:	andeq	r2, r1, r4, lsr r5
   124f4:	andeq	r2, r1, r4, lsr r5
   124f8:	andeq	r2, r1, r4, lsr r5
   124fc:	andeq	r2, r1, r4, lsr r5
   12500:	andeq	r2, r1, r4, lsr r5
   12504:	andeq	r2, r1, r4, lsr r5
   12508:	andeq	r2, r1, r4, lsr r5
   1250c:	andeq	r2, r1, r4, lsr r5
   12510:	andeq	r2, r1, r4, lsr r5
   12514:	andeq	r2, r1, r4, lsr #10
   12518:	andeq	r2, r1, r4, lsr #10
   1251c:	andeq	r2, r1, r4, lsr #10
   12520:	andeq	r2, r1, r4, lsr #10
   12524:	movw	r0, #1
   12528:	and	r0, r0, #1
   1252c:	strb	r0, [sp, #11]
   12530:	b	12540 <__assert_fail@plt+0x1450>
   12534:	movw	r0, #0
   12538:	and	r0, r0, #1
   1253c:	strb	r0, [sp, #11]
   12540:	ldrb	r0, [sp, #11]
   12544:	and	r0, r0, #1
   12548:	add	sp, sp, #12
   1254c:	bx	lr
   12550:	sub	sp, sp, #12
   12554:	str	r0, [sp, #4]
   12558:	ldr	r0, [sp, #4]
   1255c:	sub	r1, r0, #9
   12560:	cmp	r1, #5
   12564:	str	r0, [sp]
   12568:	bcc	12580 <__assert_fail@plt+0x1490>
   1256c:	b	12570 <__assert_fail@plt+0x1480>
   12570:	ldr	r0, [sp]
   12574:	cmp	r0, #32
   12578:	bne	12590 <__assert_fail@plt+0x14a0>
   1257c:	b	12580 <__assert_fail@plt+0x1490>
   12580:	movw	r0, #1
   12584:	and	r0, r0, #1
   12588:	strb	r0, [sp, #11]
   1258c:	b	1259c <__assert_fail@plt+0x14ac>
   12590:	movw	r0, #0
   12594:	and	r0, r0, #1
   12598:	strb	r0, [sp, #11]
   1259c:	ldrb	r0, [sp, #11]
   125a0:	and	r0, r0, #1
   125a4:	add	sp, sp, #12
   125a8:	bx	lr
   125ac:	sub	sp, sp, #8
   125b0:	str	r0, [sp]
   125b4:	ldr	r0, [sp]
   125b8:	sub	r0, r0, #65	; 0x41
   125bc:	cmp	r0, #25
   125c0:	bhi	125d8 <__assert_fail@plt+0x14e8>
   125c4:	b	125c8 <__assert_fail@plt+0x14d8>
   125c8:	movw	r0, #1
   125cc:	and	r0, r0, #1
   125d0:	strb	r0, [sp, #7]
   125d4:	b	125e4 <__assert_fail@plt+0x14f4>
   125d8:	movw	r0, #0
   125dc:	and	r0, r0, #1
   125e0:	strb	r0, [sp, #7]
   125e4:	ldrb	r0, [sp, #7]
   125e8:	and	r0, r0, #1
   125ec:	add	sp, sp, #8
   125f0:	bx	lr
   125f4:	sub	sp, sp, #12
   125f8:	str	r0, [sp, #4]
   125fc:	ldr	r0, [sp, #4]
   12600:	sub	r1, r0, #48	; 0x30
   12604:	cmp	r1, #10
   12608:	str	r0, [sp]
   1260c:	bcc	1263c <__assert_fail@plt+0x154c>
   12610:	b	12614 <__assert_fail@plt+0x1524>
   12614:	ldr	r0, [sp]
   12618:	sub	r1, r0, #65	; 0x41
   1261c:	cmp	r1, #6
   12620:	bcc	1263c <__assert_fail@plt+0x154c>
   12624:	b	12628 <__assert_fail@plt+0x1538>
   12628:	ldr	r0, [sp]
   1262c:	sub	r1, r0, #97	; 0x61
   12630:	cmp	r1, #5
   12634:	bhi	1264c <__assert_fail@plt+0x155c>
   12638:	b	1263c <__assert_fail@plt+0x154c>
   1263c:	movw	r0, #1
   12640:	and	r0, r0, #1
   12644:	strb	r0, [sp, #11]
   12648:	b	12658 <__assert_fail@plt+0x1568>
   1264c:	movw	r0, #0
   12650:	and	r0, r0, #1
   12654:	strb	r0, [sp, #11]
   12658:	ldrb	r0, [sp, #11]
   1265c:	and	r0, r0, #1
   12660:	add	sp, sp, #12
   12664:	bx	lr
   12668:	sub	sp, sp, #8
   1266c:	str	r0, [sp]
   12670:	ldr	r0, [sp]
   12674:	sub	r0, r0, #65	; 0x41
   12678:	cmp	r0, #25
   1267c:	bhi	12698 <__assert_fail@plt+0x15a8>
   12680:	b	12684 <__assert_fail@plt+0x1594>
   12684:	ldr	r0, [sp]
   12688:	sub	r0, r0, #65	; 0x41
   1268c:	add	r0, r0, #97	; 0x61
   12690:	str	r0, [sp, #4]
   12694:	b	126a0 <__assert_fail@plt+0x15b0>
   12698:	ldr	r0, [sp]
   1269c:	str	r0, [sp, #4]
   126a0:	ldr	r0, [sp, #4]
   126a4:	add	sp, sp, #8
   126a8:	bx	lr
   126ac:	sub	sp, sp, #8
   126b0:	str	r0, [sp]
   126b4:	ldr	r0, [sp]
   126b8:	sub	r0, r0, #97	; 0x61
   126bc:	cmp	r0, #25
   126c0:	bhi	126dc <__assert_fail@plt+0x15ec>
   126c4:	b	126c8 <__assert_fail@plt+0x15d8>
   126c8:	ldr	r0, [sp]
   126cc:	sub	r0, r0, #97	; 0x61
   126d0:	add	r0, r0, #65	; 0x41
   126d4:	str	r0, [sp, #4]
   126d8:	b	126e4 <__assert_fail@plt+0x15f4>
   126dc:	ldr	r0, [sp]
   126e0:	str	r0, [sp, #4]
   126e4:	ldr	r0, [sp, #4]
   126e8:	add	sp, sp, #8
   126ec:	bx	lr
   126f0:	sub	sp, sp, #4
   126f4:	str	r0, [sp]
   126f8:	ldr	r0, [sp]
   126fc:	movw	r1, #61832	; 0xf188
   12700:	movt	r1, #2
   12704:	str	r0, [r1]
   12708:	add	sp, sp, #4
   1270c:	bx	lr
   12710:	sub	sp, sp, #4
   12714:	and	r0, r0, #1
   12718:	strb	r0, [sp, #3]
   1271c:	ldrb	r0, [sp, #3]
   12720:	and	r0, r0, #1
   12724:	movw	r1, #61836	; 0xf18c
   12728:	movt	r1, #2
   1272c:	strb	r0, [r1]
   12730:	add	sp, sp, #4
   12734:	bx	lr
   12738:	push	{fp, lr}
   1273c:	mov	fp, sp
   12740:	sub	sp, sp, #24
   12744:	movw	r0, #61780	; 0xf154
   12748:	movt	r0, #2
   1274c:	ldr	r0, [r0]
   12750:	bl	1b5a4 <__assert_fail@plt+0xa4b4>
   12754:	cmp	r0, #0
   12758:	beq	12828 <__assert_fail@plt+0x1738>
   1275c:	movw	r0, #61836	; 0xf18c
   12760:	movt	r0, #2
   12764:	ldrb	r0, [r0]
   12768:	tst	r0, #1
   1276c:	beq	12780 <__assert_fail@plt+0x1690>
   12770:	bl	11000 <__errno_location@plt>
   12774:	ldr	r0, [r0]
   12778:	cmp	r0, #32
   1277c:	beq	12828 <__assert_fail@plt+0x1738>
   12780:	movw	r0, #56639	; 0xdd3f
   12784:	movt	r0, #1
   12788:	bl	10fd0 <gettext@plt>
   1278c:	str	r0, [fp, #-4]
   12790:	movw	r0, #61832	; 0xf188
   12794:	movt	r0, #2
   12798:	ldr	r0, [r0]
   1279c:	movw	lr, #0
   127a0:	cmp	r0, lr
   127a4:	beq	127fc <__assert_fail@plt+0x170c>
   127a8:	bl	11000 <__errno_location@plt>
   127ac:	ldr	r1, [r0]
   127b0:	movw	r0, #61832	; 0xf188
   127b4:	movt	r0, #2
   127b8:	ldr	r0, [r0]
   127bc:	str	r1, [fp, #-8]
   127c0:	bl	15054 <__assert_fail@plt+0x3f64>
   127c4:	ldr	r1, [fp, #-4]
   127c8:	movw	lr, #0
   127cc:	str	r0, [sp, #12]
   127d0:	mov	r0, lr
   127d4:	ldr	lr, [fp, #-8]
   127d8:	str	r1, [sp, #8]
   127dc:	mov	r1, lr
   127e0:	movw	r2, #56651	; 0xdd4b
   127e4:	movt	r2, #1
   127e8:	ldr	r3, [sp, #12]
   127ec:	ldr	ip, [sp, #8]
   127f0:	str	ip, [sp]
   127f4:	bl	10f64 <error@plt>
   127f8:	b	12818 <__assert_fail@plt+0x1728>
   127fc:	bl	11000 <__errno_location@plt>
   12800:	ldr	r1, [r0]
   12804:	ldr	r3, [fp, #-4]
   12808:	movw	r0, #0
   1280c:	movw	r2, #56655	; 0xdd4f
   12810:	movt	r2, #1
   12814:	bl	10f64 <error@plt>
   12818:	movw	r0, #61688	; 0xf0f8
   1281c:	movt	r0, #2
   12820:	ldr	r0, [r0]
   12824:	bl	10ebc <_exit@plt>
   12828:	movw	r0, #61776	; 0xf150
   1282c:	movt	r0, #2
   12830:	ldr	r0, [r0]
   12834:	bl	1b5a4 <__assert_fail@plt+0xa4b4>
   12838:	cmp	r0, #0
   1283c:	beq	12850 <__assert_fail@plt+0x1760>
   12840:	movw	r0, #61688	; 0xf0f8
   12844:	movt	r0, #2
   12848:	ldr	r0, [r0]
   1284c:	bl	10ebc <_exit@plt>
   12850:	mov	sp, fp
   12854:	pop	{fp, pc}
   12858:	push	{fp, lr}
   1285c:	mov	fp, sp
   12860:	sub	sp, sp, #8
   12864:	str	r0, [sp, #4]
   12868:	ldr	r0, [sp, #4]
   1286c:	bl	12960 <__assert_fail@plt+0x1870>
   12870:	str	r0, [sp]
   12874:	ldr	r0, [sp]
   12878:	movw	lr, #0
   1287c:	cmp	r0, lr
   12880:	bne	12888 <__assert_fail@plt+0x1798>
   12884:	bl	18b18 <__assert_fail@plt+0x7a28>
   12888:	ldr	r0, [sp]
   1288c:	mov	sp, fp
   12890:	pop	{fp, pc}
   12894:	push	{fp, lr}
   12898:	mov	fp, sp
   1289c:	sub	sp, sp, #16
   128a0:	str	r0, [fp, #-4]
   128a4:	movw	r0, #0
   128a8:	str	r0, [sp, #8]
   128ac:	ldr	r0, [sp, #8]
   128b0:	cmp	r0, #0
   128b4:	beq	128c4 <__assert_fail@plt+0x17d4>
   128b8:	movw	r0, #0
   128bc:	str	r0, [sp]
   128c0:	b	128e8 <__assert_fail@plt+0x17f8>
   128c4:	ldr	r0, [fp, #-4]
   128c8:	ldrb	r0, [r0]
   128cc:	cmp	r0, #47	; 0x2f
   128d0:	movw	r0, #0
   128d4:	moveq	r0, #1
   128d8:	tst	r0, #1
   128dc:	movw	r0, #1
   128e0:	moveq	r0, #0
   128e4:	str	r0, [sp]
   128e8:	ldr	r0, [sp]
   128ec:	ldr	r1, [sp, #8]
   128f0:	add	r0, r1, r0
   128f4:	str	r0, [sp, #8]
   128f8:	ldr	r0, [fp, #-4]
   128fc:	bl	1afec <__assert_fail@plt+0x9efc>
   12900:	ldr	r1, [fp, #-4]
   12904:	sub	r0, r0, r1
   12908:	str	r0, [sp, #4]
   1290c:	ldr	r0, [sp, #8]
   12910:	ldr	r1, [sp, #4]
   12914:	cmp	r0, r1
   12918:	bcs	12954 <__assert_fail@plt+0x1864>
   1291c:	ldr	r0, [fp, #-4]
   12920:	ldr	r1, [sp, #4]
   12924:	sub	r1, r1, #1
   12928:	add	r0, r0, r1
   1292c:	ldrb	r0, [r0]
   12930:	cmp	r0, #47	; 0x2f
   12934:	beq	1293c <__assert_fail@plt+0x184c>
   12938:	b	12954 <__assert_fail@plt+0x1864>
   1293c:	b	12940 <__assert_fail@plt+0x1850>
   12940:	ldr	r0, [sp, #4]
   12944:	mvn	r1, #0
   12948:	add	r0, r0, r1
   1294c:	str	r0, [sp, #4]
   12950:	b	1290c <__assert_fail@plt+0x181c>
   12954:	ldr	r0, [sp, #4]
   12958:	mov	sp, fp
   1295c:	pop	{fp, pc}
   12960:	push	{fp, lr}
   12964:	mov	fp, sp
   12968:	sub	sp, sp, #24
   1296c:	str	r0, [fp, #-8]
   12970:	ldr	r0, [fp, #-8]
   12974:	bl	12894 <__assert_fail@plt+0x17a4>
   12978:	str	r0, [sp, #12]
   1297c:	ldr	r0, [sp, #12]
   12980:	cmp	r0, #0
   12984:	movw	r0, #1
   12988:	str	r0, [sp]
   1298c:	beq	1299c <__assert_fail@plt+0x18ac>
   12990:	movw	r0, #0
   12994:	str	r0, [sp]
   12998:	b	1299c <__assert_fail@plt+0x18ac>
   1299c:	ldr	r0, [sp]
   129a0:	and	r0, r0, #1
   129a4:	strb	r0, [sp, #11]
   129a8:	ldr	r0, [sp, #12]
   129ac:	ldrb	r1, [sp, #11]
   129b0:	and	r1, r1, #1
   129b4:	add	r0, r0, r1
   129b8:	add	r0, r0, #1
   129bc:	bl	1ae50 <__assert_fail@plt+0x9d60>
   129c0:	str	r0, [sp, #4]
   129c4:	ldr	r0, [sp, #4]
   129c8:	movw	r1, #0
   129cc:	cmp	r0, r1
   129d0:	bne	129e0 <__assert_fail@plt+0x18f0>
   129d4:	movw	r0, #0
   129d8:	str	r0, [fp, #-4]
   129dc:	b	12a34 <__assert_fail@plt+0x1944>
   129e0:	ldr	r0, [sp, #4]
   129e4:	ldr	r1, [fp, #-8]
   129e8:	ldr	r2, [sp, #12]
   129ec:	bl	10ec8 <memcpy@plt>
   129f0:	ldrb	r0, [sp, #11]
   129f4:	tst	r0, #1
   129f8:	beq	12a18 <__assert_fail@plt+0x1928>
   129fc:	ldr	r0, [sp, #4]
   12a00:	ldr	r1, [sp, #12]
   12a04:	add	r2, r1, #1
   12a08:	str	r2, [sp, #12]
   12a0c:	add	r0, r0, r1
   12a10:	movw	r1, #46	; 0x2e
   12a14:	strb	r1, [r0]
   12a18:	ldr	r0, [sp, #4]
   12a1c:	ldr	r1, [sp, #12]
   12a20:	add	r0, r0, r1
   12a24:	movw	r1, #0
   12a28:	strb	r1, [r0]
   12a2c:	ldr	r0, [sp, #4]
   12a30:	str	r0, [fp, #-4]
   12a34:	ldr	r0, [fp, #-4]
   12a38:	mov	sp, fp
   12a3c:	pop	{fp, pc}
   12a40:	push	{fp, lr}
   12a44:	mov	fp, sp
   12a48:	sub	sp, sp, #16
   12a4c:	str	r0, [fp, #-4]
   12a50:	str	r1, [sp, #8]
   12a54:	str	r2, [sp, #4]
   12a58:	ldr	r0, [fp, #-4]
   12a5c:	ldr	r1, [sp, #8]
   12a60:	ldr	r2, [sp, #4]
   12a64:	bl	12a8c <__assert_fail@plt+0x199c>
   12a68:	str	r0, [sp]
   12a6c:	ldr	r0, [sp]
   12a70:	movw	r1, #0
   12a74:	cmp	r0, r1
   12a78:	bne	12a80 <__assert_fail@plt+0x1990>
   12a7c:	bl	18b18 <__assert_fail@plt+0x7a28>
   12a80:	ldr	r0, [sp]
   12a84:	mov	sp, fp
   12a88:	pop	{fp, pc}
   12a8c:	push	{fp, lr}
   12a90:	mov	fp, sp
   12a94:	sub	sp, sp, #72	; 0x48
   12a98:	str	r0, [fp, #-8]
   12a9c:	str	r1, [fp, #-12]
   12aa0:	str	r2, [fp, #-16]
   12aa4:	ldr	r0, [fp, #-8]
   12aa8:	bl	1afec <__assert_fail@plt+0x9efc>
   12aac:	str	r0, [fp, #-20]	; 0xffffffec
   12ab0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ab4:	bl	1b098 <__assert_fail@plt+0x9fa8>
   12ab8:	str	r0, [fp, #-24]	; 0xffffffe8
   12abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ac0:	ldr	r1, [fp, #-8]
   12ac4:	sub	r0, r0, r1
   12ac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12acc:	add	r0, r0, r1
   12ad0:	str	r0, [fp, #-28]	; 0xffffffe4
   12ad4:	ldr	r0, [fp, #-12]
   12ad8:	bl	10fdc <strlen@plt>
   12adc:	str	r0, [fp, #-32]	; 0xffffffe0
   12ae0:	movw	r0, #0
   12ae4:	strb	r0, [fp, #-33]	; 0xffffffdf
   12ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12aec:	cmp	r0, #0
   12af0:	beq	12b2c <__assert_fail@plt+0x1a3c>
   12af4:	ldr	r0, [fp, #-8]
   12af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12afc:	sub	r1, r1, #1
   12b00:	add	r0, r0, r1
   12b04:	ldrb	r0, [r0]
   12b08:	cmp	r0, #47	; 0x2f
   12b0c:	beq	12b28 <__assert_fail@plt+0x1a38>
   12b10:	ldr	r0, [fp, #-12]
   12b14:	ldrb	r0, [r0]
   12b18:	cmp	r0, #47	; 0x2f
   12b1c:	beq	12b28 <__assert_fail@plt+0x1a38>
   12b20:	movw	r0, #47	; 0x2f
   12b24:	strb	r0, [fp, #-33]	; 0xffffffdf
   12b28:	b	12b48 <__assert_fail@plt+0x1a58>
   12b2c:	ldr	r0, [fp, #-12]
   12b30:	ldrb	r0, [r0]
   12b34:	cmp	r0, #47	; 0x2f
   12b38:	bne	12b44 <__assert_fail@plt+0x1a54>
   12b3c:	movw	r0, #46	; 0x2e
   12b40:	strb	r0, [fp, #-33]	; 0xffffffdf
   12b44:	b	12b48 <__assert_fail@plt+0x1a58>
   12b48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b4c:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   12b50:	cmp	r1, #0
   12b54:	movw	r1, #0
   12b58:	movne	r1, #1
   12b5c:	and	r1, r1, #1
   12b60:	add	r0, r0, r1
   12b64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12b68:	add	r0, r0, r1
   12b6c:	add	r0, r0, #1
   12b70:	bl	1ae50 <__assert_fail@plt+0x9d60>
   12b74:	str	r0, [sp, #32]
   12b78:	ldr	r0, [sp, #32]
   12b7c:	movw	r1, #0
   12b80:	cmp	r0, r1
   12b84:	bne	12b94 <__assert_fail@plt+0x1aa4>
   12b88:	movw	r0, #0
   12b8c:	str	r0, [fp, #-4]
   12b90:	b	12c48 <__assert_fail@plt+0x1b58>
   12b94:	ldr	r0, [sp, #32]
   12b98:	ldr	r1, [fp, #-8]
   12b9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12ba0:	str	r0, [sp, #24]
   12ba4:	str	r2, [sp, #20]
   12ba8:	bl	10ec8 <memcpy@plt>
   12bac:	ldr	r1, [sp, #24]
   12bb0:	ldr	r2, [sp, #20]
   12bb4:	add	lr, r1, r2
   12bb8:	str	lr, [sp, #28]
   12bbc:	ldrb	lr, [fp, #-33]	; 0xffffffdf
   12bc0:	ldr	r3, [sp, #28]
   12bc4:	strb	lr, [r3]
   12bc8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12bcc:	cmp	r3, #0
   12bd0:	movw	r3, #0
   12bd4:	movne	r3, #1
   12bd8:	and	r3, r3, #1
   12bdc:	ldr	lr, [sp, #28]
   12be0:	add	r3, lr, r3
   12be4:	str	r3, [sp, #28]
   12be8:	ldr	r3, [fp, #-16]
   12bec:	movw	lr, #0
   12bf0:	cmp	r3, lr
   12bf4:	str	r0, [sp, #16]
   12bf8:	beq	12c08 <__assert_fail@plt+0x1b18>
   12bfc:	ldr	r0, [sp, #28]
   12c00:	ldr	r1, [fp, #-16]
   12c04:	str	r0, [r1]
   12c08:	ldr	r0, [sp, #28]
   12c0c:	ldr	r1, [fp, #-12]
   12c10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12c14:	str	r0, [sp, #12]
   12c18:	str	r2, [sp, #8]
   12c1c:	bl	10ec8 <memcpy@plt>
   12c20:	ldr	r1, [sp, #12]
   12c24:	ldr	r2, [sp, #8]
   12c28:	add	lr, r1, r2
   12c2c:	str	lr, [sp, #28]
   12c30:	ldr	lr, [sp, #28]
   12c34:	movw	r3, #0
   12c38:	strb	r3, [lr]
   12c3c:	ldr	r3, [sp, #32]
   12c40:	str	r3, [fp, #-4]
   12c44:	str	r0, [sp, #4]
   12c48:	ldr	r0, [fp, #-4]
   12c4c:	mov	sp, fp
   12c50:	pop	{fp, pc}
   12c54:	push	{fp, lr}
   12c58:	mov	fp, sp
   12c5c:	sub	sp, sp, #16
   12c60:	str	r0, [fp, #-4]
   12c64:	bl	11000 <__errno_location@plt>
   12c68:	ldr	r0, [r0]
   12c6c:	str	r0, [sp, #8]
   12c70:	ldr	r0, [fp, #-4]
   12c74:	bl	10eb0 <free@plt>
   12c78:	ldr	r0, [sp, #8]
   12c7c:	str	r0, [sp, #4]
   12c80:	bl	11000 <__errno_location@plt>
   12c84:	ldr	lr, [sp, #4]
   12c88:	str	lr, [r0]
   12c8c:	mov	sp, fp
   12c90:	pop	{fp, pc}
   12c94:	push	{fp, lr}
   12c98:	mov	fp, sp
   12c9c:	sub	sp, sp, #24
   12ca0:	str	r0, [fp, #-4]
   12ca4:	ldr	r0, [fp, #-4]
   12ca8:	movw	r1, #0
   12cac:	cmp	r0, r1
   12cb0:	bne	12cd4 <__assert_fail@plt+0x1be4>
   12cb4:	movw	r0, #61776	; 0xf150
   12cb8:	movt	r0, #2
   12cbc:	ldr	r1, [r0]
   12cc0:	movw	r0, #56658	; 0xdd52
   12cc4:	movt	r0, #1
   12cc8:	bl	110cc <fputs@plt>
   12ccc:	str	r0, [sp, #8]
   12cd0:	bl	110e4 <abort@plt>
   12cd4:	ldr	r0, [fp, #-4]
   12cd8:	movw	r1, #47	; 0x2f
   12cdc:	bl	1109c <strrchr@plt>
   12ce0:	str	r0, [fp, #-8]
   12ce4:	ldr	r0, [fp, #-8]
   12ce8:	movw	r1, #0
   12cec:	cmp	r0, r1
   12cf0:	beq	12d04 <__assert_fail@plt+0x1c14>
   12cf4:	ldr	r0, [fp, #-8]
   12cf8:	add	r0, r0, #1
   12cfc:	str	r0, [sp, #4]
   12d00:	b	12d0c <__assert_fail@plt+0x1c1c>
   12d04:	ldr	r0, [fp, #-4]
   12d08:	str	r0, [sp, #4]
   12d0c:	ldr	r0, [sp, #4]
   12d10:	str	r0, [sp, #12]
   12d14:	ldr	r0, [sp, #12]
   12d18:	ldr	r1, [fp, #-4]
   12d1c:	sub	r0, r0, r1
   12d20:	cmp	r0, #7
   12d24:	blt	12d90 <__assert_fail@plt+0x1ca0>
   12d28:	ldr	r0, [sp, #12]
   12d2c:	mvn	r1, #6
   12d30:	add	r0, r0, r1
   12d34:	movw	r1, #56714	; 0xdd8a
   12d38:	movt	r1, #1
   12d3c:	movw	r2, #7
   12d40:	bl	110d8 <strncmp@plt>
   12d44:	cmp	r0, #0
   12d48:	bne	12d90 <__assert_fail@plt+0x1ca0>
   12d4c:	ldr	r0, [sp, #12]
   12d50:	str	r0, [fp, #-4]
   12d54:	ldr	r0, [sp, #12]
   12d58:	movw	r1, #56722	; 0xdd92
   12d5c:	movt	r1, #1
   12d60:	movw	r2, #3
   12d64:	bl	110d8 <strncmp@plt>
   12d68:	cmp	r0, #0
   12d6c:	bne	12d8c <__assert_fail@plt+0x1c9c>
   12d70:	ldr	r0, [sp, #12]
   12d74:	add	r0, r0, #3
   12d78:	str	r0, [fp, #-4]
   12d7c:	ldr	r0, [fp, #-4]
   12d80:	movw	r1, #61760	; 0xf140
   12d84:	movt	r1, #2
   12d88:	str	r0, [r1]
   12d8c:	b	12d90 <__assert_fail@plt+0x1ca0>
   12d90:	ldr	r0, [fp, #-4]
   12d94:	movw	r1, #61840	; 0xf190
   12d98:	movt	r1, #2
   12d9c:	str	r0, [r1]
   12da0:	ldr	r0, [fp, #-4]
   12da4:	movw	r1, #61764	; 0xf144
   12da8:	movt	r1, #2
   12dac:	str	r0, [r1]
   12db0:	mov	sp, fp
   12db4:	pop	{fp, pc}
   12db8:	push	{fp, lr}
   12dbc:	mov	fp, sp
   12dc0:	sub	sp, sp, #24
   12dc4:	str	r0, [fp, #-4]
   12dc8:	bl	11000 <__errno_location@plt>
   12dcc:	ldr	r0, [r0]
   12dd0:	str	r0, [fp, #-8]
   12dd4:	ldr	r0, [fp, #-4]
   12dd8:	movw	lr, #0
   12ddc:	cmp	r0, lr
   12de0:	beq	12df0 <__assert_fail@plt+0x1d00>
   12de4:	ldr	r0, [fp, #-4]
   12de8:	str	r0, [sp, #8]
   12dec:	b	12e00 <__assert_fail@plt+0x1d10>
   12df0:	movw	r0, #61844	; 0xf194
   12df4:	movt	r0, #2
   12df8:	str	r0, [sp, #8]
   12dfc:	b	12e00 <__assert_fail@plt+0x1d10>
   12e00:	ldr	r0, [sp, #8]
   12e04:	movw	r1, #48	; 0x30
   12e08:	bl	18a18 <__assert_fail@plt+0x7928>
   12e0c:	str	r0, [sp, #12]
   12e10:	ldr	r0, [fp, #-8]
   12e14:	str	r0, [sp, #4]
   12e18:	bl	11000 <__errno_location@plt>
   12e1c:	ldr	r1, [sp, #4]
   12e20:	str	r1, [r0]
   12e24:	ldr	r0, [sp, #12]
   12e28:	mov	sp, fp
   12e2c:	pop	{fp, pc}
   12e30:	sub	sp, sp, #8
   12e34:	str	r0, [sp, #4]
   12e38:	ldr	r0, [sp, #4]
   12e3c:	movw	r1, #0
   12e40:	cmp	r0, r1
   12e44:	beq	12e54 <__assert_fail@plt+0x1d64>
   12e48:	ldr	r0, [sp, #4]
   12e4c:	str	r0, [sp]
   12e50:	b	12e64 <__assert_fail@plt+0x1d74>
   12e54:	movw	r0, #61844	; 0xf194
   12e58:	movt	r0, #2
   12e5c:	str	r0, [sp]
   12e60:	b	12e64 <__assert_fail@plt+0x1d74>
   12e64:	ldr	r0, [sp]
   12e68:	ldr	r0, [r0]
   12e6c:	add	sp, sp, #8
   12e70:	bx	lr
   12e74:	sub	sp, sp, #16
   12e78:	str	r0, [sp, #12]
   12e7c:	str	r1, [sp, #8]
   12e80:	ldr	r0, [sp, #8]
   12e84:	ldr	r1, [sp, #12]
   12e88:	movw	r2, #0
   12e8c:	cmp	r1, r2
   12e90:	str	r0, [sp, #4]
   12e94:	beq	12ea4 <__assert_fail@plt+0x1db4>
   12e98:	ldr	r0, [sp, #12]
   12e9c:	str	r0, [sp]
   12ea0:	b	12eb4 <__assert_fail@plt+0x1dc4>
   12ea4:	movw	r0, #61844	; 0xf194
   12ea8:	movt	r0, #2
   12eac:	str	r0, [sp]
   12eb0:	b	12eb4 <__assert_fail@plt+0x1dc4>
   12eb4:	ldr	r0, [sp]
   12eb8:	ldr	r1, [sp, #4]
   12ebc:	str	r1, [r0]
   12ec0:	add	sp, sp, #16
   12ec4:	bx	lr
   12ec8:	sub	sp, sp, #32
   12ecc:	str	r0, [sp, #28]
   12ed0:	strb	r1, [sp, #27]
   12ed4:	str	r2, [sp, #20]
   12ed8:	ldrb	r0, [sp, #27]
   12edc:	strb	r0, [sp, #19]
   12ee0:	ldr	r0, [sp, #28]
   12ee4:	movw	r1, #0
   12ee8:	cmp	r0, r1
   12eec:	beq	12efc <__assert_fail@plt+0x1e0c>
   12ef0:	ldr	r0, [sp, #28]
   12ef4:	str	r0, [sp]
   12ef8:	b	12f0c <__assert_fail@plt+0x1e1c>
   12efc:	movw	r0, #61844	; 0xf194
   12f00:	movt	r0, #2
   12f04:	str	r0, [sp]
   12f08:	b	12f0c <__assert_fail@plt+0x1e1c>
   12f0c:	ldr	r0, [sp]
   12f10:	add	r0, r0, #8
   12f14:	ldrb	r1, [sp, #19]
   12f18:	lsr	r1, r1, #5
   12f1c:	add	r0, r0, r1, lsl #2
   12f20:	str	r0, [sp, #12]
   12f24:	ldrb	r0, [sp, #19]
   12f28:	and	r0, r0, #31
   12f2c:	str	r0, [sp, #8]
   12f30:	ldr	r0, [sp, #12]
   12f34:	ldr	r0, [r0]
   12f38:	ldr	r1, [sp, #8]
   12f3c:	lsr	r0, r0, r1
   12f40:	and	r0, r0, #1
   12f44:	str	r0, [sp, #4]
   12f48:	ldr	r0, [sp, #20]
   12f4c:	and	r0, r0, #1
   12f50:	ldr	r1, [sp, #4]
   12f54:	eor	r0, r0, r1
   12f58:	ldr	r1, [sp, #8]
   12f5c:	lsl	r0, r0, r1
   12f60:	ldr	r1, [sp, #12]
   12f64:	ldr	r2, [r1]
   12f68:	eor	r0, r2, r0
   12f6c:	str	r0, [r1]
   12f70:	ldr	r0, [sp, #4]
   12f74:	add	sp, sp, #32
   12f78:	bx	lr
   12f7c:	sub	sp, sp, #12
   12f80:	str	r0, [sp, #8]
   12f84:	str	r1, [sp, #4]
   12f88:	ldr	r0, [sp, #8]
   12f8c:	movw	r1, #0
   12f90:	cmp	r0, r1
   12f94:	bne	12fa4 <__assert_fail@plt+0x1eb4>
   12f98:	movw	r0, #61844	; 0xf194
   12f9c:	movt	r0, #2
   12fa0:	str	r0, [sp, #8]
   12fa4:	ldr	r0, [sp, #8]
   12fa8:	ldr	r0, [r0, #4]
   12fac:	str	r0, [sp]
   12fb0:	ldr	r0, [sp, #4]
   12fb4:	ldr	r1, [sp, #8]
   12fb8:	str	r0, [r1, #4]
   12fbc:	ldr	r0, [sp]
   12fc0:	add	sp, sp, #12
   12fc4:	bx	lr
   12fc8:	push	{fp, lr}
   12fcc:	mov	fp, sp
   12fd0:	sub	sp, sp, #16
   12fd4:	str	r0, [fp, #-4]
   12fd8:	str	r1, [sp, #8]
   12fdc:	str	r2, [sp, #4]
   12fe0:	ldr	r0, [fp, #-4]
   12fe4:	movw	r1, #0
   12fe8:	cmp	r0, r1
   12fec:	bne	12ffc <__assert_fail@plt+0x1f0c>
   12ff0:	movw	r0, #61844	; 0xf194
   12ff4:	movt	r0, #2
   12ff8:	str	r0, [fp, #-4]
   12ffc:	ldr	r0, [fp, #-4]
   13000:	movw	r1, #10
   13004:	str	r1, [r0]
   13008:	ldr	r0, [sp, #8]
   1300c:	movw	r1, #0
   13010:	cmp	r0, r1
   13014:	beq	13028 <__assert_fail@plt+0x1f38>
   13018:	ldr	r0, [sp, #4]
   1301c:	movw	r1, #0
   13020:	cmp	r0, r1
   13024:	bne	1302c <__assert_fail@plt+0x1f3c>
   13028:	bl	110e4 <abort@plt>
   1302c:	ldr	r0, [sp, #8]
   13030:	ldr	r1, [fp, #-4]
   13034:	str	r0, [r1, #40]	; 0x28
   13038:	ldr	r0, [sp, #4]
   1303c:	ldr	r1, [fp, #-4]
   13040:	str	r0, [r1, #44]	; 0x2c
   13044:	mov	sp, fp
   13048:	pop	{fp, pc}
   1304c:	push	{r4, r5, r6, sl, fp, lr}
   13050:	add	fp, sp, #16
   13054:	sub	sp, sp, #64	; 0x40
   13058:	ldr	ip, [fp, #8]
   1305c:	str	r0, [fp, #-20]	; 0xffffffec
   13060:	str	r1, [fp, #-24]	; 0xffffffe8
   13064:	str	r2, [fp, #-28]	; 0xffffffe4
   13068:	str	r3, [fp, #-32]	; 0xffffffe0
   1306c:	ldr	r0, [fp, #8]
   13070:	movw	r1, #0
   13074:	cmp	r0, r1
   13078:	str	ip, [sp, #32]
   1307c:	beq	1308c <__assert_fail@plt+0x1f9c>
   13080:	ldr	r0, [fp, #8]
   13084:	str	r0, [sp, #28]
   13088:	b	1309c <__assert_fail@plt+0x1fac>
   1308c:	movw	r0, #61844	; 0xf194
   13090:	movt	r0, #2
   13094:	str	r0, [sp, #28]
   13098:	b	1309c <__assert_fail@plt+0x1fac>
   1309c:	ldr	r0, [sp, #28]
   130a0:	str	r0, [fp, #-36]	; 0xffffffdc
   130a4:	bl	11000 <__errno_location@plt>
   130a8:	ldr	r0, [r0]
   130ac:	str	r0, [sp, #40]	; 0x28
   130b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   130b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   130b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   130bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   130c0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   130c4:	ldr	lr, [lr]
   130c8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   130cc:	ldr	ip, [ip, #4]
   130d0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   130d4:	add	r4, r4, #8
   130d8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   130dc:	ldr	r5, [r5, #40]	; 0x28
   130e0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   130e4:	ldr	r6, [r6, #44]	; 0x2c
   130e8:	str	lr, [sp]
   130ec:	str	ip, [sp, #4]
   130f0:	str	r4, [sp, #8]
   130f4:	str	r5, [sp, #12]
   130f8:	str	r6, [sp, #16]
   130fc:	bl	13124 <__assert_fail@plt+0x2034>
   13100:	str	r0, [sp, #36]	; 0x24
   13104:	ldr	r0, [sp, #40]	; 0x28
   13108:	str	r0, [sp, #24]
   1310c:	bl	11000 <__errno_location@plt>
   13110:	ldr	r1, [sp, #24]
   13114:	str	r1, [r0]
   13118:	ldr	r0, [sp, #36]	; 0x24
   1311c:	sub	sp, fp, #16
   13120:	pop	{r4, r5, r6, sl, fp, pc}
   13124:	push	{r4, r5, r6, sl, fp, lr}
   13128:	add	fp, sp, #16
   1312c:	sub	sp, sp, #168	; 0xa8
   13130:	ldr	ip, [fp, #24]
   13134:	ldr	lr, [fp, #20]
   13138:	ldr	r4, [fp, #16]
   1313c:	ldr	r5, [fp, #12]
   13140:	ldr	r6, [fp, #8]
   13144:	str	r0, [fp, #-24]	; 0xffffffe8
   13148:	str	r1, [fp, #-28]	; 0xffffffe4
   1314c:	str	r2, [fp, #-32]	; 0xffffffe0
   13150:	str	r3, [fp, #-36]	; 0xffffffdc
   13154:	movw	r0, #0
   13158:	str	r0, [fp, #-44]	; 0xffffffd4
   1315c:	str	r0, [fp, #-48]	; 0xffffffd0
   13160:	str	r0, [fp, #-52]	; 0xffffffcc
   13164:	str	r0, [fp, #-56]	; 0xffffffc8
   13168:	movw	r0, #0
   1316c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13170:	str	r6, [sp, #80]	; 0x50
   13174:	str	lr, [sp, #76]	; 0x4c
   13178:	str	r4, [sp, #72]	; 0x48
   1317c:	str	r5, [sp, #68]	; 0x44
   13180:	str	ip, [sp, #64]	; 0x40
   13184:	bl	10f34 <__ctype_get_mb_cur_max@plt>
   13188:	cmp	r0, #1
   1318c:	movw	r0, #0
   13190:	moveq	r0, #1
   13194:	and	r0, r0, #1
   13198:	strb	r0, [fp, #-58]	; 0xffffffc6
   1319c:	ldr	r0, [fp, #12]
   131a0:	and	r0, r0, #2
   131a4:	cmp	r0, #0
   131a8:	movw	r0, #0
   131ac:	movne	r0, #1
   131b0:	and	r0, r0, #1
   131b4:	strb	r0, [fp, #-59]	; 0xffffffc5
   131b8:	movw	r0, #0
   131bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   131c0:	strb	r0, [fp, #-61]	; 0xffffffc3
   131c4:	movw	r0, #1
   131c8:	strb	r0, [fp, #-62]	; 0xffffffc2
   131cc:	ldr	r0, [fp, #8]
   131d0:	cmp	r0, #10
   131d4:	str	r0, [sp, #60]	; 0x3c
   131d8:	bhi	13400 <__assert_fail@plt+0x2310>
   131dc:	add	r0, pc, #8
   131e0:	ldr	r1, [sp, #60]	; 0x3c
   131e4:	ldr	r0, [r0, r1, lsl #2]
   131e8:	mov	pc, r0
   131ec:	strdeq	r3, [r1], -r4
   131f0:	andeq	r3, r1, r0, ror r3
   131f4:	muleq	r1, r0, r3
   131f8:	andeq	r3, r1, r8, ror #6
   131fc:	andeq	r3, r1, r8, ror r3
   13200:	andeq	r3, r1, r8, lsr #4
   13204:	andeq	r3, r1, r8, lsl r2
   13208:	andeq	r3, r1, ip, lsl #5
   1320c:	andeq	r3, r1, r0, lsr #5
   13210:	andeq	r3, r1, r0, lsr #5
   13214:	andeq	r3, r1, r0, lsr #5
   13218:	movw	r0, #5
   1321c:	str	r0, [fp, #8]
   13220:	movw	r0, #1
   13224:	strb	r0, [fp, #-59]	; 0xffffffc5
   13228:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1322c:	tst	r0, #1
   13230:	bne	1326c <__assert_fail@plt+0x217c>
   13234:	b	13238 <__assert_fail@plt+0x2148>
   13238:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1323c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13240:	cmp	r0, r1
   13244:	bcs	1325c <__assert_fail@plt+0x216c>
   13248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1324c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13250:	add	r0, r0, r1
   13254:	movw	r1, #34	; 0x22
   13258:	strb	r1, [r0]
   1325c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13260:	add	r0, r0, #1
   13264:	str	r0, [fp, #-44]	; 0xffffffd4
   13268:	b	1326c <__assert_fail@plt+0x217c>
   1326c:	movw	r0, #1
   13270:	strb	r0, [fp, #-57]	; 0xffffffc7
   13274:	movw	r0, #56802	; 0xdde2
   13278:	movt	r0, #1
   1327c:	str	r0, [fp, #-52]	; 0xffffffcc
   13280:	movw	r0, #1
   13284:	str	r0, [fp, #-56]	; 0xffffffc8
   13288:	b	13404 <__assert_fail@plt+0x2314>
   1328c:	movw	r0, #1
   13290:	strb	r0, [fp, #-57]	; 0xffffffc7
   13294:	movw	r0, #0
   13298:	strb	r0, [fp, #-59]	; 0xffffffc5
   1329c:	b	13404 <__assert_fail@plt+0x2314>
   132a0:	ldr	r0, [fp, #8]
   132a4:	cmp	r0, #10
   132a8:	beq	132d4 <__assert_fail@plt+0x21e4>
   132ac:	ldr	r1, [fp, #8]
   132b0:	movw	r0, #56804	; 0xdde4
   132b4:	movt	r0, #1
   132b8:	bl	15314 <__assert_fail@plt+0x4224>
   132bc:	str	r0, [fp, #20]
   132c0:	ldr	r1, [fp, #8]
   132c4:	movw	r0, #56806	; 0xdde6
   132c8:	movt	r0, #1
   132cc:	bl	15314 <__assert_fail@plt+0x4224>
   132d0:	str	r0, [fp, #24]
   132d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132d8:	tst	r0, #1
   132dc:	bne	13348 <__assert_fail@plt+0x2258>
   132e0:	ldr	r0, [fp, #20]
   132e4:	str	r0, [fp, #-52]	; 0xffffffcc
   132e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   132ec:	ldrsb	r0, [r0]
   132f0:	cmp	r0, #0
   132f4:	beq	13344 <__assert_fail@plt+0x2254>
   132f8:	b	132fc <__assert_fail@plt+0x220c>
   132fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13300:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13304:	cmp	r0, r1
   13308:	bcs	13324 <__assert_fail@plt+0x2234>
   1330c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13310:	ldrb	r0, [r0]
   13314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13318:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1331c:	add	r1, r1, r2
   13320:	strb	r0, [r1]
   13324:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13328:	add	r0, r0, #1
   1332c:	str	r0, [fp, #-44]	; 0xffffffd4
   13330:	b	13334 <__assert_fail@plt+0x2244>
   13334:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13338:	add	r0, r0, #1
   1333c:	str	r0, [fp, #-52]	; 0xffffffcc
   13340:	b	132e8 <__assert_fail@plt+0x21f8>
   13344:	b	13348 <__assert_fail@plt+0x2258>
   13348:	movw	r0, #1
   1334c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13350:	ldr	r0, [fp, #24]
   13354:	str	r0, [fp, #-52]	; 0xffffffcc
   13358:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1335c:	bl	10fdc <strlen@plt>
   13360:	str	r0, [fp, #-56]	; 0xffffffc8
   13364:	b	13404 <__assert_fail@plt+0x2314>
   13368:	movw	r0, #1
   1336c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13370:	movw	r0, #1
   13374:	strb	r0, [fp, #-59]	; 0xffffffc5
   13378:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1337c:	tst	r0, #1
   13380:	bne	1338c <__assert_fail@plt+0x229c>
   13384:	movw	r0, #1
   13388:	strb	r0, [fp, #-57]	; 0xffffffc7
   1338c:	b	13390 <__assert_fail@plt+0x22a0>
   13390:	movw	r0, #2
   13394:	str	r0, [fp, #8]
   13398:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1339c:	tst	r0, #1
   133a0:	bne	133dc <__assert_fail@plt+0x22ec>
   133a4:	b	133a8 <__assert_fail@plt+0x22b8>
   133a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133b0:	cmp	r0, r1
   133b4:	bcs	133cc <__assert_fail@plt+0x22dc>
   133b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133c0:	add	r0, r0, r1
   133c4:	movw	r1, #39	; 0x27
   133c8:	strb	r1, [r0]
   133cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133d0:	add	r0, r0, #1
   133d4:	str	r0, [fp, #-44]	; 0xffffffd4
   133d8:	b	133dc <__assert_fail@plt+0x22ec>
   133dc:	movw	r0, #56806	; 0xdde6
   133e0:	movt	r0, #1
   133e4:	str	r0, [fp, #-52]	; 0xffffffcc
   133e8:	movw	r0, #1
   133ec:	str	r0, [fp, #-56]	; 0xffffffc8
   133f0:	b	13404 <__assert_fail@plt+0x2314>
   133f4:	movw	r0, #0
   133f8:	strb	r0, [fp, #-59]	; 0xffffffc5
   133fc:	b	13404 <__assert_fail@plt+0x2314>
   13400:	bl	110e4 <abort@plt>
   13404:	movw	r0, #0
   13408:	str	r0, [fp, #-40]	; 0xffffffd8
   1340c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13410:	cmn	r0, #1
   13414:	bne	13440 <__assert_fail@plt+0x2350>
   13418:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1341c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13420:	add	r0, r0, r1
   13424:	ldrb	r0, [r0]
   13428:	cmp	r0, #0
   1342c:	movw	r0, #0
   13430:	moveq	r0, #1
   13434:	and	r0, r0, #1
   13438:	str	r0, [sp, #56]	; 0x38
   1343c:	b	1345c <__assert_fail@plt+0x236c>
   13440:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13444:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13448:	cmp	r0, r1
   1344c:	movw	r0, #0
   13450:	moveq	r0, #1
   13454:	and	r0, r0, #1
   13458:	str	r0, [sp, #56]	; 0x38
   1345c:	ldr	r0, [sp, #56]	; 0x38
   13460:	cmp	r0, #0
   13464:	movw	r0, #0
   13468:	movne	r0, #1
   1346c:	mvn	r1, #0
   13470:	eor	r0, r0, r1
   13474:	tst	r0, #1
   13478:	beq	14668 <__assert_fail@plt+0x3578>
   1347c:	movw	r0, #0
   13480:	strb	r0, [fp, #-65]	; 0xffffffbf
   13484:	strb	r0, [fp, #-66]	; 0xffffffbe
   13488:	strb	r0, [fp, #-67]	; 0xffffffbd
   1348c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13490:	tst	r0, #1
   13494:	beq	13540 <__assert_fail@plt+0x2450>
   13498:	ldr	r0, [fp, #8]
   1349c:	cmp	r0, #2
   134a0:	beq	13540 <__assert_fail@plt+0x2450>
   134a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   134a8:	cmp	r0, #0
   134ac:	beq	13540 <__assert_fail@plt+0x2450>
   134b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   134b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   134b8:	add	r0, r0, r1
   134bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   134c0:	cmn	r1, #1
   134c4:	str	r0, [sp, #52]	; 0x34
   134c8:	bne	134f0 <__assert_fail@plt+0x2400>
   134cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   134d0:	movw	r1, #1
   134d4:	cmp	r1, r0
   134d8:	bcs	134f0 <__assert_fail@plt+0x2400>
   134dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134e0:	bl	10fdc <strlen@plt>
   134e4:	str	r0, [fp, #-36]	; 0xffffffdc
   134e8:	str	r0, [sp, #48]	; 0x30
   134ec:	b	134f8 <__assert_fail@plt+0x2408>
   134f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   134f4:	str	r0, [sp, #48]	; 0x30
   134f8:	ldr	r0, [sp, #48]	; 0x30
   134fc:	ldr	r1, [sp, #52]	; 0x34
   13500:	cmp	r1, r0
   13504:	bhi	13540 <__assert_fail@plt+0x2450>
   13508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1350c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13510:	add	r0, r0, r1
   13514:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13518:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1351c:	bl	10eec <memcmp@plt>
   13520:	cmp	r0, #0
   13524:	bne	13540 <__assert_fail@plt+0x2450>
   13528:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1352c:	tst	r0, #1
   13530:	beq	13538 <__assert_fail@plt+0x2448>
   13534:	b	147e8 <__assert_fail@plt+0x36f8>
   13538:	movw	r0, #1
   1353c:	strb	r0, [fp, #-65]	; 0xffffffbf
   13540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13544:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13548:	ldrb	r0, [r0, r1]
   1354c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13550:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13554:	mov	r1, r0
   13558:	cmp	r0, #126	; 0x7e
   1355c:	str	r1, [sp, #44]	; 0x2c
   13560:	bhi	13dd0 <__assert_fail@plt+0x2ce0>
   13564:	add	r0, pc, #8
   13568:	ldr	r1, [sp, #44]	; 0x2c
   1356c:	ldr	r0, [r0, r1, lsl #2]
   13570:	mov	pc, r0
   13574:	andeq	r3, r1, r0, ror r7
   13578:	ldrdeq	r3, [r1], -r0
   1357c:	ldrdeq	r3, [r1], -r0
   13580:	ldrdeq	r3, [r1], -r0
   13584:	ldrdeq	r3, [r1], -r0
   13588:	ldrdeq	r3, [r1], -r0
   1358c:	ldrdeq	r3, [r1], -r0
   13590:	andeq	r3, r1, r8, ror fp
   13594:	andeq	r3, r1, r4, lsl #23
   13598:			; <UNDEFINED> instruction: 0x00013bb4
   1359c:	muleq	r1, ip, fp
   135a0:	andeq	r3, r1, r0, asr #23
   135a4:	muleq	r1, r0, fp
   135a8:	andeq	r3, r1, r8, lsr #23
   135ac:	ldrdeq	r3, [r1], -r0
   135b0:	ldrdeq	r3, [r1], -r0
   135b4:	ldrdeq	r3, [r1], -r0
   135b8:	ldrdeq	r3, [r1], -r0
   135bc:	ldrdeq	r3, [r1], -r0
   135c0:	ldrdeq	r3, [r1], -r0
   135c4:	ldrdeq	r3, [r1], -r0
   135c8:	ldrdeq	r3, [r1], -r0
   135cc:	ldrdeq	r3, [r1], -r0
   135d0:	ldrdeq	r3, [r1], -r0
   135d4:	ldrdeq	r3, [r1], -r0
   135d8:	ldrdeq	r3, [r1], -r0
   135dc:	ldrdeq	r3, [r1], -r0
   135e0:	ldrdeq	r3, [r1], -r0
   135e4:	ldrdeq	r3, [r1], -r0
   135e8:	ldrdeq	r3, [r1], -r0
   135ec:	ldrdeq	r3, [r1], -r0
   135f0:	ldrdeq	r3, [r1], -r0
   135f4:	andeq	r3, r1, r4, lsr #25
   135f8:	andeq	r3, r1, ip, lsr #25
   135fc:	andeq	r3, r1, ip, lsr #25
   13600:	muleq	r1, r0, ip
   13604:	andeq	r3, r1, ip, lsr #25
   13608:	andeq	r3, r1, r4, asr #27
   1360c:	andeq	r3, r1, ip, lsr #25
   13610:	andeq	r3, r1, ip, asr #25
   13614:	andeq	r3, r1, ip, lsr #25
   13618:	andeq	r3, r1, ip, lsr #25
   1361c:	andeq	r3, r1, ip, lsr #25
   13620:	andeq	r3, r1, r4, asr #27
   13624:	andeq	r3, r1, r4, asr #27
   13628:	andeq	r3, r1, r4, asr #27
   1362c:	andeq	r3, r1, r4, asr #27
   13630:	andeq	r3, r1, r4, asr #27
   13634:	andeq	r3, r1, r4, asr #27
   13638:	andeq	r3, r1, r4, asr #27
   1363c:	andeq	r3, r1, r4, asr #27
   13640:	andeq	r3, r1, r4, asr #27
   13644:	andeq	r3, r1, r4, asr #27
   13648:	andeq	r3, r1, r4, asr #27
   1364c:	andeq	r3, r1, r4, asr #27
   13650:	andeq	r3, r1, r4, asr #27
   13654:	andeq	r3, r1, r4, asr #27
   13658:	andeq	r3, r1, r4, asr #27
   1365c:	andeq	r3, r1, r4, asr #27
   13660:	andeq	r3, r1, ip, lsr #25
   13664:	andeq	r3, r1, ip, lsr #25
   13668:	andeq	r3, r1, ip, lsr #25
   1366c:	andeq	r3, r1, ip, lsr #25
   13670:	andeq	r3, r1, ip, ror r9
   13674:	ldrdeq	r3, [r1], -r0
   13678:	andeq	r3, r1, r4, asr #27
   1367c:	andeq	r3, r1, r4, asr #27
   13680:	andeq	r3, r1, r4, asr #27
   13684:	andeq	r3, r1, r4, asr #27
   13688:	andeq	r3, r1, r4, asr #27
   1368c:	andeq	r3, r1, r4, asr #27
   13690:	andeq	r3, r1, r4, asr #27
   13694:	andeq	r3, r1, r4, asr #27
   13698:	andeq	r3, r1, r4, asr #27
   1369c:	andeq	r3, r1, r4, asr #27
   136a0:	andeq	r3, r1, r4, asr #27
   136a4:	andeq	r3, r1, r4, asr #27
   136a8:	andeq	r3, r1, r4, asr #27
   136ac:	andeq	r3, r1, r4, asr #27
   136b0:	andeq	r3, r1, r4, asr #27
   136b4:	andeq	r3, r1, r4, asr #27
   136b8:	andeq	r3, r1, r4, asr #27
   136bc:	andeq	r3, r1, r4, asr #27
   136c0:	andeq	r3, r1, r4, asr #27
   136c4:	andeq	r3, r1, r4, asr #27
   136c8:	andeq	r3, r1, r4, asr #27
   136cc:	andeq	r3, r1, r4, asr #27
   136d0:	andeq	r3, r1, r4, asr #27
   136d4:	andeq	r3, r1, r4, asr #27
   136d8:	andeq	r3, r1, r4, asr #27
   136dc:	andeq	r3, r1, r4, asr #27
   136e0:	andeq	r3, r1, ip, lsr #25
   136e4:	andeq	r3, r1, ip, asr #23
   136e8:	andeq	r3, r1, r4, asr #27
   136ec:	andeq	r3, r1, ip, lsr #25
   136f0:	andeq	r3, r1, r4, asr #27
   136f4:	andeq	r3, r1, ip, lsr #25
   136f8:	andeq	r3, r1, r4, asr #27
   136fc:	andeq	r3, r1, r4, asr #27
   13700:	andeq	r3, r1, r4, asr #27
   13704:	andeq	r3, r1, r4, asr #27
   13708:	andeq	r3, r1, r4, asr #27
   1370c:	andeq	r3, r1, r4, asr #27
   13710:	andeq	r3, r1, r4, asr #27
   13714:	andeq	r3, r1, r4, asr #27
   13718:	andeq	r3, r1, r4, asr #27
   1371c:	andeq	r3, r1, r4, asr #27
   13720:	andeq	r3, r1, r4, asr #27
   13724:	andeq	r3, r1, r4, asr #27
   13728:	andeq	r3, r1, r4, asr #27
   1372c:	andeq	r3, r1, r4, asr #27
   13730:	andeq	r3, r1, r4, asr #27
   13734:	andeq	r3, r1, r4, asr #27
   13738:	andeq	r3, r1, r4, asr #27
   1373c:	andeq	r3, r1, r4, asr #27
   13740:	andeq	r3, r1, r4, asr #27
   13744:	andeq	r3, r1, r4, asr #27
   13748:	andeq	r3, r1, r4, asr #27
   1374c:	andeq	r3, r1, r4, asr #27
   13750:	andeq	r3, r1, r4, asr #27
   13754:	andeq	r3, r1, r4, asr #27
   13758:	andeq	r3, r1, r4, asr #27
   1375c:	andeq	r3, r1, r4, asr #27
   13760:	andeq	r3, r1, ip, asr ip
   13764:	andeq	r3, r1, ip, lsr #25
   13768:	andeq	r3, r1, ip, asr ip
   1376c:	muleq	r1, r0, ip
   13770:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13774:	tst	r0, #1
   13778:	beq	13960 <__assert_fail@plt+0x2870>
   1377c:	b	13780 <__assert_fail@plt+0x2690>
   13780:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13784:	tst	r0, #1
   13788:	beq	13790 <__assert_fail@plt+0x26a0>
   1378c:	b	147e8 <__assert_fail@plt+0x36f8>
   13790:	movw	r0, #1
   13794:	strb	r0, [fp, #-66]	; 0xffffffbe
   13798:	ldr	r0, [fp, #8]
   1379c:	cmp	r0, #2
   137a0:	bne	13854 <__assert_fail@plt+0x2764>
   137a4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   137a8:	tst	r0, #1
   137ac:	bne	13854 <__assert_fail@plt+0x2764>
   137b0:	b	137b4 <__assert_fail@plt+0x26c4>
   137b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137bc:	cmp	r0, r1
   137c0:	bcs	137d8 <__assert_fail@plt+0x26e8>
   137c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   137cc:	add	r0, r0, r1
   137d0:	movw	r1, #39	; 0x27
   137d4:	strb	r1, [r0]
   137d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137dc:	add	r0, r0, #1
   137e0:	str	r0, [fp, #-44]	; 0xffffffd4
   137e4:	b	137e8 <__assert_fail@plt+0x26f8>
   137e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137f0:	cmp	r0, r1
   137f4:	bcs	1380c <__assert_fail@plt+0x271c>
   137f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13800:	add	r0, r0, r1
   13804:	movw	r1, #36	; 0x24
   13808:	strb	r1, [r0]
   1380c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13810:	add	r0, r0, #1
   13814:	str	r0, [fp, #-44]	; 0xffffffd4
   13818:	b	1381c <__assert_fail@plt+0x272c>
   1381c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13820:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13824:	cmp	r0, r1
   13828:	bcs	13840 <__assert_fail@plt+0x2750>
   1382c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13830:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13834:	add	r0, r0, r1
   13838:	movw	r1, #39	; 0x27
   1383c:	strb	r1, [r0]
   13840:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13844:	add	r0, r0, #1
   13848:	str	r0, [fp, #-44]	; 0xffffffd4
   1384c:	movw	r0, #1
   13850:	strb	r0, [fp, #-60]	; 0xffffffc4
   13854:	b	13858 <__assert_fail@plt+0x2768>
   13858:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1385c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13860:	cmp	r0, r1
   13864:	bcs	1387c <__assert_fail@plt+0x278c>
   13868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1386c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13870:	add	r0, r0, r1
   13874:	movw	r1, #92	; 0x5c
   13878:	strb	r1, [r0]
   1387c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13880:	add	r0, r0, #1
   13884:	str	r0, [fp, #-44]	; 0xffffffd4
   13888:	b	1388c <__assert_fail@plt+0x279c>
   1388c:	ldr	r0, [fp, #8]
   13890:	cmp	r0, #2
   13894:	beq	13954 <__assert_fail@plt+0x2864>
   13898:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1389c:	add	r0, r0, #1
   138a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   138a4:	cmp	r0, r1
   138a8:	bcs	13954 <__assert_fail@plt+0x2864>
   138ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138b4:	add	r1, r1, #1
   138b8:	add	r0, r0, r1
   138bc:	ldrb	r0, [r0]
   138c0:	movw	r1, #48	; 0x30
   138c4:	cmp	r1, r0
   138c8:	bgt	13954 <__assert_fail@plt+0x2864>
   138cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138d4:	add	r1, r1, #1
   138d8:	add	r0, r0, r1
   138dc:	ldrb	r0, [r0]
   138e0:	cmp	r0, #57	; 0x39
   138e4:	bgt	13954 <__assert_fail@plt+0x2864>
   138e8:	b	138ec <__assert_fail@plt+0x27fc>
   138ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138f4:	cmp	r0, r1
   138f8:	bcs	13910 <__assert_fail@plt+0x2820>
   138fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13900:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13904:	add	r0, r0, r1
   13908:	movw	r1, #48	; 0x30
   1390c:	strb	r1, [r0]
   13910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13914:	add	r0, r0, #1
   13918:	str	r0, [fp, #-44]	; 0xffffffd4
   1391c:	b	13920 <__assert_fail@plt+0x2830>
   13920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13924:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13928:	cmp	r0, r1
   1392c:	bcs	13944 <__assert_fail@plt+0x2854>
   13930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13934:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13938:	add	r0, r0, r1
   1393c:	movw	r1, #48	; 0x30
   13940:	strb	r1, [r0]
   13944:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13948:	add	r0, r0, #1
   1394c:	str	r0, [fp, #-44]	; 0xffffffd4
   13950:	b	13954 <__assert_fail@plt+0x2864>
   13954:	movw	r0, #48	; 0x30
   13958:	strb	r0, [fp, #-63]	; 0xffffffc1
   1395c:	b	13978 <__assert_fail@plt+0x2888>
   13960:	ldr	r0, [fp, #12]
   13964:	and	r0, r0, #1
   13968:	cmp	r0, #0
   1396c:	beq	13974 <__assert_fail@plt+0x2884>
   13970:	b	14658 <__assert_fail@plt+0x3568>
   13974:	b	13978 <__assert_fail@plt+0x2888>
   13978:	b	143f4 <__assert_fail@plt+0x3304>
   1397c:	ldr	r0, [fp, #8]
   13980:	cmp	r0, #2
   13984:	str	r0, [sp, #40]	; 0x28
   13988:	beq	139a0 <__assert_fail@plt+0x28b0>
   1398c:	b	13990 <__assert_fail@plt+0x28a0>
   13990:	ldr	r0, [sp, #40]	; 0x28
   13994:	cmp	r0, #5
   13998:	beq	139b4 <__assert_fail@plt+0x28c4>
   1399c:	b	13b70 <__assert_fail@plt+0x2a80>
   139a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   139a4:	tst	r0, #1
   139a8:	beq	139b0 <__assert_fail@plt+0x28c0>
   139ac:	b	147e8 <__assert_fail@plt+0x36f8>
   139b0:	b	13b74 <__assert_fail@plt+0x2a84>
   139b4:	ldr	r0, [fp, #12]
   139b8:	and	r0, r0, #4
   139bc:	cmp	r0, #0
   139c0:	beq	13b6c <__assert_fail@plt+0x2a7c>
   139c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139c8:	add	r0, r0, #2
   139cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   139d0:	cmp	r0, r1
   139d4:	bcs	13b6c <__assert_fail@plt+0x2a7c>
   139d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139e0:	add	r1, r1, #1
   139e4:	add	r0, r0, r1
   139e8:	ldrb	r0, [r0]
   139ec:	cmp	r0, #63	; 0x3f
   139f0:	bne	13b6c <__assert_fail@plt+0x2a7c>
   139f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139fc:	add	r0, r0, r1
   13a00:	ldrb	r0, [r0, #2]
   13a04:	mov	r1, r0
   13a08:	cmp	r0, #33	; 0x21
   13a0c:	str	r1, [sp, #36]	; 0x24
   13a10:	beq	13a60 <__assert_fail@plt+0x2970>
   13a14:	b	13a18 <__assert_fail@plt+0x2928>
   13a18:	ldr	r0, [sp, #36]	; 0x24
   13a1c:	sub	r1, r0, #39	; 0x27
   13a20:	cmp	r1, #3
   13a24:	bcc	13a60 <__assert_fail@plt+0x2970>
   13a28:	b	13a2c <__assert_fail@plt+0x293c>
   13a2c:	ldr	r0, [sp, #36]	; 0x24
   13a30:	cmp	r0, #45	; 0x2d
   13a34:	beq	13a60 <__assert_fail@plt+0x2970>
   13a38:	b	13a3c <__assert_fail@plt+0x294c>
   13a3c:	ldr	r0, [sp, #36]	; 0x24
   13a40:	cmp	r0, #47	; 0x2f
   13a44:	beq	13a60 <__assert_fail@plt+0x2970>
   13a48:	b	13a4c <__assert_fail@plt+0x295c>
   13a4c:	ldr	r0, [sp, #36]	; 0x24
   13a50:	sub	r1, r0, #60	; 0x3c
   13a54:	cmp	r1, #2
   13a58:	bhi	13b64 <__assert_fail@plt+0x2a74>
   13a5c:	b	13a60 <__assert_fail@plt+0x2970>
   13a60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a64:	tst	r0, #1
   13a68:	beq	13a70 <__assert_fail@plt+0x2980>
   13a6c:	b	147e8 <__assert_fail@plt+0x36f8>
   13a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a78:	add	r1, r1, #2
   13a7c:	add	r0, r0, r1
   13a80:	ldrb	r0, [r0]
   13a84:	strb	r0, [fp, #-63]	; 0xffffffc1
   13a88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a8c:	add	r0, r0, #2
   13a90:	str	r0, [fp, #-40]	; 0xffffffd8
   13a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a9c:	cmp	r0, r1
   13aa0:	bcs	13ab8 <__assert_fail@plt+0x29c8>
   13aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13aac:	add	r0, r0, r1
   13ab0:	movw	r1, #63	; 0x3f
   13ab4:	strb	r1, [r0]
   13ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13abc:	add	r0, r0, #1
   13ac0:	str	r0, [fp, #-44]	; 0xffffffd4
   13ac4:	b	13ac8 <__assert_fail@plt+0x29d8>
   13ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ad0:	cmp	r0, r1
   13ad4:	bcs	13aec <__assert_fail@plt+0x29fc>
   13ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13adc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ae0:	add	r0, r0, r1
   13ae4:	movw	r1, #34	; 0x22
   13ae8:	strb	r1, [r0]
   13aec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13af0:	add	r0, r0, #1
   13af4:	str	r0, [fp, #-44]	; 0xffffffd4
   13af8:	b	13afc <__assert_fail@plt+0x2a0c>
   13afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b04:	cmp	r0, r1
   13b08:	bcs	13b20 <__assert_fail@plt+0x2a30>
   13b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b14:	add	r0, r0, r1
   13b18:	movw	r1, #34	; 0x22
   13b1c:	strb	r1, [r0]
   13b20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b24:	add	r0, r0, #1
   13b28:	str	r0, [fp, #-44]	; 0xffffffd4
   13b2c:	b	13b30 <__assert_fail@plt+0x2a40>
   13b30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b38:	cmp	r0, r1
   13b3c:	bcs	13b54 <__assert_fail@plt+0x2a64>
   13b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b48:	add	r0, r0, r1
   13b4c:	movw	r1, #63	; 0x3f
   13b50:	strb	r1, [r0]
   13b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b58:	add	r0, r0, #1
   13b5c:	str	r0, [fp, #-44]	; 0xffffffd4
   13b60:	b	13b68 <__assert_fail@plt+0x2a78>
   13b64:	b	13b68 <__assert_fail@plt+0x2a78>
   13b68:	b	13b6c <__assert_fail@plt+0x2a7c>
   13b6c:	b	13b74 <__assert_fail@plt+0x2a84>
   13b70:	b	13b74 <__assert_fail@plt+0x2a84>
   13b74:	b	143f4 <__assert_fail@plt+0x3304>
   13b78:	movw	r0, #97	; 0x61
   13b7c:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b80:	b	13c40 <__assert_fail@plt+0x2b50>
   13b84:	movw	r0, #98	; 0x62
   13b88:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b8c:	b	13c40 <__assert_fail@plt+0x2b50>
   13b90:	movw	r0, #102	; 0x66
   13b94:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b98:	b	13c40 <__assert_fail@plt+0x2b50>
   13b9c:	movw	r0, #110	; 0x6e
   13ba0:	strb	r0, [fp, #-64]	; 0xffffffc0
   13ba4:	b	13c20 <__assert_fail@plt+0x2b30>
   13ba8:	movw	r0, #114	; 0x72
   13bac:	strb	r0, [fp, #-64]	; 0xffffffc0
   13bb0:	b	13c20 <__assert_fail@plt+0x2b30>
   13bb4:	movw	r0, #116	; 0x74
   13bb8:	strb	r0, [fp, #-64]	; 0xffffffc0
   13bbc:	b	13c20 <__assert_fail@plt+0x2b30>
   13bc0:	movw	r0, #118	; 0x76
   13bc4:	strb	r0, [fp, #-64]	; 0xffffffc0
   13bc8:	b	13c40 <__assert_fail@plt+0x2b50>
   13bcc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13bd0:	strb	r0, [fp, #-64]	; 0xffffffc0
   13bd4:	ldr	r0, [fp, #8]
   13bd8:	cmp	r0, #2
   13bdc:	bne	13bf4 <__assert_fail@plt+0x2b04>
   13be0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13be4:	tst	r0, #1
   13be8:	beq	13bf0 <__assert_fail@plt+0x2b00>
   13bec:	b	147e8 <__assert_fail@plt+0x36f8>
   13bf0:	b	1457c <__assert_fail@plt+0x348c>
   13bf4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13bf8:	tst	r0, #1
   13bfc:	beq	13c1c <__assert_fail@plt+0x2b2c>
   13c00:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c04:	tst	r0, #1
   13c08:	beq	13c1c <__assert_fail@plt+0x2b2c>
   13c0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13c10:	cmp	r0, #0
   13c14:	beq	13c1c <__assert_fail@plt+0x2b2c>
   13c18:	b	1457c <__assert_fail@plt+0x348c>
   13c1c:	b	13c20 <__assert_fail@plt+0x2b30>
   13c20:	ldr	r0, [fp, #8]
   13c24:	cmp	r0, #2
   13c28:	bne	13c3c <__assert_fail@plt+0x2b4c>
   13c2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c30:	tst	r0, #1
   13c34:	beq	13c3c <__assert_fail@plt+0x2b4c>
   13c38:	b	147e8 <__assert_fail@plt+0x36f8>
   13c3c:	b	13c40 <__assert_fail@plt+0x2b50>
   13c40:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c44:	tst	r0, #1
   13c48:	beq	13c58 <__assert_fail@plt+0x2b68>
   13c4c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13c50:	strb	r0, [fp, #-63]	; 0xffffffc1
   13c54:	b	14468 <__assert_fail@plt+0x3378>
   13c58:	b	143f4 <__assert_fail@plt+0x3304>
   13c5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c60:	cmn	r0, #1
   13c64:	bne	13c7c <__assert_fail@plt+0x2b8c>
   13c68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c6c:	ldrb	r0, [r0, #1]
   13c70:	cmp	r0, #0
   13c74:	beq	13c8c <__assert_fail@plt+0x2b9c>
   13c78:	b	13c88 <__assert_fail@plt+0x2b98>
   13c7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c80:	cmp	r0, #1
   13c84:	beq	13c8c <__assert_fail@plt+0x2b9c>
   13c88:	b	143f4 <__assert_fail@plt+0x3304>
   13c8c:	b	13c90 <__assert_fail@plt+0x2ba0>
   13c90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c94:	cmp	r0, #0
   13c98:	beq	13ca0 <__assert_fail@plt+0x2bb0>
   13c9c:	b	143f4 <__assert_fail@plt+0x3304>
   13ca0:	b	13ca4 <__assert_fail@plt+0x2bb4>
   13ca4:	movw	r0, #1
   13ca8:	strb	r0, [fp, #-67]	; 0xffffffbd
   13cac:	ldr	r0, [fp, #8]
   13cb0:	cmp	r0, #2
   13cb4:	bne	13cc8 <__assert_fail@plt+0x2bd8>
   13cb8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13cbc:	tst	r0, #1
   13cc0:	beq	13cc8 <__assert_fail@plt+0x2bd8>
   13cc4:	b	147e8 <__assert_fail@plt+0x36f8>
   13cc8:	b	143f4 <__assert_fail@plt+0x3304>
   13ccc:	movw	r0, #1
   13cd0:	strb	r0, [fp, #-61]	; 0xffffffc3
   13cd4:	strb	r0, [fp, #-67]	; 0xffffffbd
   13cd8:	ldr	r0, [fp, #8]
   13cdc:	cmp	r0, #2
   13ce0:	bne	13dc0 <__assert_fail@plt+0x2cd0>
   13ce4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13ce8:	tst	r0, #1
   13cec:	beq	13cf4 <__assert_fail@plt+0x2c04>
   13cf0:	b	147e8 <__assert_fail@plt+0x36f8>
   13cf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13cf8:	cmp	r0, #0
   13cfc:	beq	13d1c <__assert_fail@plt+0x2c2c>
   13d00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13d04:	cmp	r0, #0
   13d08:	bne	13d1c <__assert_fail@plt+0x2c2c>
   13d0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d10:	str	r0, [fp, #-48]	; 0xffffffd0
   13d14:	movw	r0, #0
   13d18:	str	r0, [fp, #-28]	; 0xffffffe4
   13d1c:	b	13d20 <__assert_fail@plt+0x2c30>
   13d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d28:	cmp	r0, r1
   13d2c:	bcs	13d44 <__assert_fail@plt+0x2c54>
   13d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d38:	add	r0, r0, r1
   13d3c:	movw	r1, #39	; 0x27
   13d40:	strb	r1, [r0]
   13d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d48:	add	r0, r0, #1
   13d4c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d50:	b	13d54 <__assert_fail@plt+0x2c64>
   13d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d5c:	cmp	r0, r1
   13d60:	bcs	13d78 <__assert_fail@plt+0x2c88>
   13d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d6c:	add	r0, r0, r1
   13d70:	movw	r1, #92	; 0x5c
   13d74:	strb	r1, [r0]
   13d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d7c:	add	r0, r0, #1
   13d80:	str	r0, [fp, #-44]	; 0xffffffd4
   13d84:	b	13d88 <__assert_fail@plt+0x2c98>
   13d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d90:	cmp	r0, r1
   13d94:	bcs	13dac <__assert_fail@plt+0x2cbc>
   13d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13da0:	add	r0, r0, r1
   13da4:	movw	r1, #39	; 0x27
   13da8:	strb	r1, [r0]
   13dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13db0:	add	r0, r0, #1
   13db4:	str	r0, [fp, #-44]	; 0xffffffd4
   13db8:	movw	r0, #0
   13dbc:	strb	r0, [fp, #-60]	; 0xffffffc4
   13dc0:	b	143f4 <__assert_fail@plt+0x3304>
   13dc4:	movw	r0, #1
   13dc8:	strb	r0, [fp, #-67]	; 0xffffffbd
   13dcc:	b	143f4 <__assert_fail@plt+0x3304>
   13dd0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13dd4:	tst	r0, #1
   13dd8:	beq	13e1c <__assert_fail@plt+0x2d2c>
   13ddc:	mov	r0, #1
   13de0:	str	r0, [fp, #-72]	; 0xffffffb8
   13de4:	bl	10fb8 <__ctype_b_loc@plt>
   13de8:	ldr	r0, [r0]
   13dec:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   13df0:	mov	r1, lr
   13df4:	add	r0, r0, lr, lsl #1
   13df8:	ldrh	r0, [r0]
   13dfc:	and	r0, r0, #16384	; 0x4000
   13e00:	cmp	r0, #0
   13e04:	movw	r0, #0
   13e08:	movne	r0, #1
   13e0c:	and	r0, r0, #1
   13e10:	strb	r0, [fp, #-73]	; 0xffffffb7
   13e14:	str	r1, [sp, #32]
   13e18:	b	140a8 <__assert_fail@plt+0x2fb8>
   13e1c:	sub	r0, fp, #84	; 0x54
   13e20:	movw	r1, #0
   13e24:	and	r1, r1, #255	; 0xff
   13e28:	movw	r2, #8
   13e2c:	bl	11018 <memset@plt>
   13e30:	movw	r0, #0
   13e34:	str	r0, [fp, #-72]	; 0xffffffb8
   13e38:	movw	r0, #1
   13e3c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13e40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e44:	cmn	r0, #1
   13e48:	bne	13e58 <__assert_fail@plt+0x2d68>
   13e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e50:	bl	10fdc <strlen@plt>
   13e54:	str	r0, [fp, #-36]	; 0xffffffdc
   13e58:	b	13e5c <__assert_fail@plt+0x2d6c>
   13e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e64:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13e68:	add	r1, r1, r2
   13e6c:	add	r1, r0, r1
   13e70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13e78:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13e7c:	add	r2, r2, r3
   13e80:	sub	r2, r0, r2
   13e84:	sub	r0, fp, #88	; 0x58
   13e88:	sub	r3, fp, #84	; 0x54
   13e8c:	bl	1bb4c <__assert_fail@plt+0xaa5c>
   13e90:	str	r0, [sp, #92]	; 0x5c
   13e94:	ldr	r0, [sp, #92]	; 0x5c
   13e98:	cmp	r0, #0
   13e9c:	bne	13ea4 <__assert_fail@plt+0x2db4>
   13ea0:	b	140a4 <__assert_fail@plt+0x2fb4>
   13ea4:	ldr	r0, [sp, #92]	; 0x5c
   13ea8:	cmn	r0, #1
   13eac:	bne	13ebc <__assert_fail@plt+0x2dcc>
   13eb0:	movw	r0, #0
   13eb4:	strb	r0, [fp, #-73]	; 0xffffffb7
   13eb8:	b	140a4 <__assert_fail@plt+0x2fb4>
   13ebc:	ldr	r0, [sp, #92]	; 0x5c
   13ec0:	cmn	r0, #2
   13ec4:	bne	13f38 <__assert_fail@plt+0x2e48>
   13ec8:	movw	r0, #0
   13ecc:	strb	r0, [fp, #-73]	; 0xffffffb7
   13ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ed4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13ed8:	add	r0, r0, r1
   13edc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ee0:	cmp	r0, r1
   13ee4:	movw	r0, #0
   13ee8:	str	r0, [sp, #28]
   13eec:	bcs	13f18 <__assert_fail@plt+0x2e28>
   13ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ef4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ef8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13efc:	add	r1, r1, r2
   13f00:	add	r0, r0, r1
   13f04:	ldrb	r0, [r0]
   13f08:	cmp	r0, #0
   13f0c:	movw	r0, #0
   13f10:	movne	r0, #1
   13f14:	str	r0, [sp, #28]
   13f18:	ldr	r0, [sp, #28]
   13f1c:	tst	r0, #1
   13f20:	beq	13f34 <__assert_fail@plt+0x2e44>
   13f24:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13f28:	add	r0, r0, #1
   13f2c:	str	r0, [fp, #-72]	; 0xffffffb8
   13f30:	b	13ed0 <__assert_fail@plt+0x2de0>
   13f34:	b	140a4 <__assert_fail@plt+0x2fb4>
   13f38:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f3c:	tst	r0, #1
   13f40:	beq	1404c <__assert_fail@plt+0x2f5c>
   13f44:	ldr	r0, [fp, #8]
   13f48:	cmp	r0, #2
   13f4c:	bne	1404c <__assert_fail@plt+0x2f5c>
   13f50:	movw	r0, #1
   13f54:	str	r0, [sp, #88]	; 0x58
   13f58:	ldr	r0, [sp, #88]	; 0x58
   13f5c:	ldr	r1, [sp, #92]	; 0x5c
   13f60:	cmp	r0, r1
   13f64:	bcs	14048 <__assert_fail@plt+0x2f58>
   13f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13f74:	add	r1, r1, r2
   13f78:	ldr	r2, [sp, #88]	; 0x58
   13f7c:	add	r1, r1, r2
   13f80:	ldrb	r0, [r0, r1]
   13f84:	sub	r0, r0, #91	; 0x5b
   13f88:	cmp	r0, #33	; 0x21
   13f8c:	str	r0, [sp, #24]
   13f90:	bhi	14030 <__assert_fail@plt+0x2f40>
   13f94:	add	r0, pc, #8
   13f98:	ldr	r1, [sp, #24]
   13f9c:	ldr	r0, [r0, r1, lsl #2]
   13fa0:	mov	pc, r0
   13fa4:	andeq	r4, r1, ip, lsr #32
   13fa8:	andeq	r4, r1, ip, lsr #32
   13fac:	andeq	r4, r1, r0, lsr r0
   13fb0:	andeq	r4, r1, ip, lsr #32
   13fb4:	andeq	r4, r1, r0, lsr r0
   13fb8:	andeq	r4, r1, ip, lsr #32
   13fbc:	andeq	r4, r1, r0, lsr r0
   13fc0:	andeq	r4, r1, r0, lsr r0
   13fc4:	andeq	r4, r1, r0, lsr r0
   13fc8:	andeq	r4, r1, r0, lsr r0
   13fcc:	andeq	r4, r1, r0, lsr r0
   13fd0:	andeq	r4, r1, r0, lsr r0
   13fd4:	andeq	r4, r1, r0, lsr r0
   13fd8:	andeq	r4, r1, r0, lsr r0
   13fdc:	andeq	r4, r1, r0, lsr r0
   13fe0:	andeq	r4, r1, r0, lsr r0
   13fe4:	andeq	r4, r1, r0, lsr r0
   13fe8:	andeq	r4, r1, r0, lsr r0
   13fec:	andeq	r4, r1, r0, lsr r0
   13ff0:	andeq	r4, r1, r0, lsr r0
   13ff4:	andeq	r4, r1, r0, lsr r0
   13ff8:	andeq	r4, r1, r0, lsr r0
   13ffc:	andeq	r4, r1, r0, lsr r0
   14000:	andeq	r4, r1, r0, lsr r0
   14004:	andeq	r4, r1, r0, lsr r0
   14008:	andeq	r4, r1, r0, lsr r0
   1400c:	andeq	r4, r1, r0, lsr r0
   14010:	andeq	r4, r1, r0, lsr r0
   14014:	andeq	r4, r1, r0, lsr r0
   14018:	andeq	r4, r1, r0, lsr r0
   1401c:	andeq	r4, r1, r0, lsr r0
   14020:	andeq	r4, r1, r0, lsr r0
   14024:	andeq	r4, r1, r0, lsr r0
   14028:	andeq	r4, r1, ip, lsr #32
   1402c:	b	147e8 <__assert_fail@plt+0x36f8>
   14030:	b	14034 <__assert_fail@plt+0x2f44>
   14034:	b	14038 <__assert_fail@plt+0x2f48>
   14038:	ldr	r0, [sp, #88]	; 0x58
   1403c:	add	r0, r0, #1
   14040:	str	r0, [sp, #88]	; 0x58
   14044:	b	13f58 <__assert_fail@plt+0x2e68>
   14048:	b	1404c <__assert_fail@plt+0x2f5c>
   1404c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14050:	bl	10f10 <iswprint@plt>
   14054:	cmp	r0, #0
   14058:	bne	14064 <__assert_fail@plt+0x2f74>
   1405c:	movw	r0, #0
   14060:	strb	r0, [fp, #-73]	; 0xffffffb7
   14064:	ldr	r0, [sp, #92]	; 0x5c
   14068:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1406c:	add	r0, r1, r0
   14070:	str	r0, [fp, #-72]	; 0xffffffb8
   14074:	b	14078 <__assert_fail@plt+0x2f88>
   14078:	b	1407c <__assert_fail@plt+0x2f8c>
   1407c:	b	14080 <__assert_fail@plt+0x2f90>
   14080:	sub	r0, fp, #84	; 0x54
   14084:	bl	10ee0 <mbsinit@plt>
   14088:	cmp	r0, #0
   1408c:	movw	r0, #0
   14090:	movne	r0, #1
   14094:	mvn	lr, #0
   14098:	eor	r0, r0, lr
   1409c:	tst	r0, #1
   140a0:	bne	13e5c <__assert_fail@plt+0x2d6c>
   140a4:	b	140a8 <__assert_fail@plt+0x2fb8>
   140a8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   140ac:	and	r0, r0, #1
   140b0:	strb	r0, [fp, #-67]	; 0xffffffbd
   140b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   140b8:	movw	r1, #1
   140bc:	cmp	r1, r0
   140c0:	bcc	140dc <__assert_fail@plt+0x2fec>
   140c4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   140c8:	tst	r0, #1
   140cc:	beq	143f0 <__assert_fail@plt+0x3300>
   140d0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   140d4:	tst	r0, #1
   140d8:	bne	143f0 <__assert_fail@plt+0x3300>
   140dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   140e0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   140e4:	add	r0, r0, r1
   140e8:	str	r0, [sp, #84]	; 0x54
   140ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   140f0:	tst	r0, #1
   140f4:	beq	142a4 <__assert_fail@plt+0x31b4>
   140f8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   140fc:	tst	r0, #1
   14100:	bne	142a4 <__assert_fail@plt+0x31b4>
   14104:	b	14108 <__assert_fail@plt+0x3018>
   14108:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1410c:	tst	r0, #1
   14110:	beq	14118 <__assert_fail@plt+0x3028>
   14114:	b	147e8 <__assert_fail@plt+0x36f8>
   14118:	movw	r0, #1
   1411c:	strb	r0, [fp, #-66]	; 0xffffffbe
   14120:	ldr	r0, [fp, #8]
   14124:	cmp	r0, #2
   14128:	bne	141dc <__assert_fail@plt+0x30ec>
   1412c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14130:	tst	r0, #1
   14134:	bne	141dc <__assert_fail@plt+0x30ec>
   14138:	b	1413c <__assert_fail@plt+0x304c>
   1413c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14140:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14144:	cmp	r0, r1
   14148:	bcs	14160 <__assert_fail@plt+0x3070>
   1414c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14150:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14154:	add	r0, r0, r1
   14158:	movw	r1, #39	; 0x27
   1415c:	strb	r1, [r0]
   14160:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14164:	add	r0, r0, #1
   14168:	str	r0, [fp, #-44]	; 0xffffffd4
   1416c:	b	14170 <__assert_fail@plt+0x3080>
   14170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14174:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14178:	cmp	r0, r1
   1417c:	bcs	14194 <__assert_fail@plt+0x30a4>
   14180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14184:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14188:	add	r0, r0, r1
   1418c:	movw	r1, #36	; 0x24
   14190:	strb	r1, [r0]
   14194:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14198:	add	r0, r0, #1
   1419c:	str	r0, [fp, #-44]	; 0xffffffd4
   141a0:	b	141a4 <__assert_fail@plt+0x30b4>
   141a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141ac:	cmp	r0, r1
   141b0:	bcs	141c8 <__assert_fail@plt+0x30d8>
   141b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141bc:	add	r0, r0, r1
   141c0:	movw	r1, #39	; 0x27
   141c4:	strb	r1, [r0]
   141c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141cc:	add	r0, r0, #1
   141d0:	str	r0, [fp, #-44]	; 0xffffffd4
   141d4:	movw	r0, #1
   141d8:	strb	r0, [fp, #-60]	; 0xffffffc4
   141dc:	b	141e0 <__assert_fail@plt+0x30f0>
   141e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141e8:	cmp	r0, r1
   141ec:	bcs	14204 <__assert_fail@plt+0x3114>
   141f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141f8:	add	r0, r0, r1
   141fc:	movw	r1, #92	; 0x5c
   14200:	strb	r1, [r0]
   14204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14208:	add	r0, r0, #1
   1420c:	str	r0, [fp, #-44]	; 0xffffffd4
   14210:	b	14214 <__assert_fail@plt+0x3124>
   14214:	b	14218 <__assert_fail@plt+0x3128>
   14218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1421c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14220:	cmp	r0, r1
   14224:	bcs	14244 <__assert_fail@plt+0x3154>
   14228:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1422c:	asr	r0, r0, #6
   14230:	add	r0, r0, #48	; 0x30
   14234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14238:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1423c:	add	r1, r1, r2
   14240:	strb	r0, [r1]
   14244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14248:	add	r0, r0, #1
   1424c:	str	r0, [fp, #-44]	; 0xffffffd4
   14250:	b	14254 <__assert_fail@plt+0x3164>
   14254:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14258:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1425c:	cmp	r0, r1
   14260:	bcs	14284 <__assert_fail@plt+0x3194>
   14264:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14268:	asr	r0, r0, #3
   1426c:	and	r0, r0, #7
   14270:	add	r0, r0, #48	; 0x30
   14274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14278:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1427c:	add	r1, r1, r2
   14280:	strb	r0, [r1]
   14284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14288:	add	r0, r0, #1
   1428c:	str	r0, [fp, #-44]	; 0xffffffd4
   14290:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14294:	and	r0, r0, #7
   14298:	add	r0, r0, #48	; 0x30
   1429c:	strb	r0, [fp, #-63]	; 0xffffffc1
   142a0:	b	142f0 <__assert_fail@plt+0x3200>
   142a4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   142a8:	tst	r0, #1
   142ac:	beq	142ec <__assert_fail@plt+0x31fc>
   142b0:	b	142b4 <__assert_fail@plt+0x31c4>
   142b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142bc:	cmp	r0, r1
   142c0:	bcs	142d8 <__assert_fail@plt+0x31e8>
   142c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142cc:	add	r0, r0, r1
   142d0:	movw	r1, #92	; 0x5c
   142d4:	strb	r1, [r0]
   142d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142dc:	add	r0, r0, #1
   142e0:	str	r0, [fp, #-44]	; 0xffffffd4
   142e4:	movw	r0, #0
   142e8:	strb	r0, [fp, #-65]	; 0xffffffbf
   142ec:	b	142f0 <__assert_fail@plt+0x3200>
   142f0:	ldr	r0, [sp, #84]	; 0x54
   142f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   142f8:	add	r1, r1, #1
   142fc:	cmp	r0, r1
   14300:	bhi	14308 <__assert_fail@plt+0x3218>
   14304:	b	143ec <__assert_fail@plt+0x32fc>
   14308:	b	1430c <__assert_fail@plt+0x321c>
   1430c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14310:	tst	r0, #1
   14314:	beq	14394 <__assert_fail@plt+0x32a4>
   14318:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1431c:	tst	r0, #1
   14320:	bne	14394 <__assert_fail@plt+0x32a4>
   14324:	b	14328 <__assert_fail@plt+0x3238>
   14328:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1432c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14330:	cmp	r0, r1
   14334:	bcs	1434c <__assert_fail@plt+0x325c>
   14338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1433c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14340:	add	r0, r0, r1
   14344:	movw	r1, #39	; 0x27
   14348:	strb	r1, [r0]
   1434c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14350:	add	r0, r0, #1
   14354:	str	r0, [fp, #-44]	; 0xffffffd4
   14358:	b	1435c <__assert_fail@plt+0x326c>
   1435c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14364:	cmp	r0, r1
   14368:	bcs	14380 <__assert_fail@plt+0x3290>
   1436c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14370:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14374:	add	r0, r0, r1
   14378:	movw	r1, #39	; 0x27
   1437c:	strb	r1, [r0]
   14380:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14384:	add	r0, r0, #1
   14388:	str	r0, [fp, #-44]	; 0xffffffd4
   1438c:	movw	r0, #0
   14390:	strb	r0, [fp, #-60]	; 0xffffffc4
   14394:	b	14398 <__assert_fail@plt+0x32a8>
   14398:	b	1439c <__assert_fail@plt+0x32ac>
   1439c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143a4:	cmp	r0, r1
   143a8:	bcs	143c0 <__assert_fail@plt+0x32d0>
   143ac:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   143b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   143b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   143b8:	add	r1, r1, r2
   143bc:	strb	r0, [r1]
   143c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143c4:	add	r0, r0, #1
   143c8:	str	r0, [fp, #-44]	; 0xffffffd4
   143cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   143d4:	add	r1, r1, #1
   143d8:	str	r1, [fp, #-40]	; 0xffffffd8
   143dc:	add	r0, r0, r1
   143e0:	ldrb	r0, [r0]
   143e4:	strb	r0, [fp, #-63]	; 0xffffffc1
   143e8:	b	140ec <__assert_fail@plt+0x2ffc>
   143ec:	b	1457c <__assert_fail@plt+0x348c>
   143f0:	b	143f4 <__assert_fail@plt+0x3304>
   143f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   143f8:	tst	r0, #1
   143fc:	beq	1440c <__assert_fail@plt+0x331c>
   14400:	ldr	r0, [fp, #8]
   14404:	cmp	r0, #2
   14408:	bne	14418 <__assert_fail@plt+0x3328>
   1440c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14410:	tst	r0, #1
   14414:	beq	14454 <__assert_fail@plt+0x3364>
   14418:	ldr	r0, [fp, #16]
   1441c:	movw	r1, #0
   14420:	cmp	r0, r1
   14424:	beq	14454 <__assert_fail@plt+0x3364>
   14428:	ldr	r0, [fp, #16]
   1442c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14430:	lsr	r1, r1, #5
   14434:	add	r0, r0, r1, lsl #2
   14438:	ldr	r0, [r0]
   1443c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14440:	and	r1, r1, #31
   14444:	lsr	r0, r0, r1
   14448:	and	r0, r0, #1
   1444c:	cmp	r0, #0
   14450:	bne	14464 <__assert_fail@plt+0x3374>
   14454:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14458:	tst	r0, #1
   1445c:	bne	14464 <__assert_fail@plt+0x3374>
   14460:	b	1457c <__assert_fail@plt+0x348c>
   14464:	b	14468 <__assert_fail@plt+0x3378>
   14468:	b	1446c <__assert_fail@plt+0x337c>
   1446c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14470:	tst	r0, #1
   14474:	beq	1447c <__assert_fail@plt+0x338c>
   14478:	b	147e8 <__assert_fail@plt+0x36f8>
   1447c:	movw	r0, #1
   14480:	strb	r0, [fp, #-66]	; 0xffffffbe
   14484:	ldr	r0, [fp, #8]
   14488:	cmp	r0, #2
   1448c:	bne	14540 <__assert_fail@plt+0x3450>
   14490:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14494:	tst	r0, #1
   14498:	bne	14540 <__assert_fail@plt+0x3450>
   1449c:	b	144a0 <__assert_fail@plt+0x33b0>
   144a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144a8:	cmp	r0, r1
   144ac:	bcs	144c4 <__assert_fail@plt+0x33d4>
   144b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144b8:	add	r0, r0, r1
   144bc:	movw	r1, #39	; 0x27
   144c0:	strb	r1, [r0]
   144c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144c8:	add	r0, r0, #1
   144cc:	str	r0, [fp, #-44]	; 0xffffffd4
   144d0:	b	144d4 <__assert_fail@plt+0x33e4>
   144d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144dc:	cmp	r0, r1
   144e0:	bcs	144f8 <__assert_fail@plt+0x3408>
   144e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144ec:	add	r0, r0, r1
   144f0:	movw	r1, #36	; 0x24
   144f4:	strb	r1, [r0]
   144f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144fc:	add	r0, r0, #1
   14500:	str	r0, [fp, #-44]	; 0xffffffd4
   14504:	b	14508 <__assert_fail@plt+0x3418>
   14508:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1450c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14510:	cmp	r0, r1
   14514:	bcs	1452c <__assert_fail@plt+0x343c>
   14518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1451c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14520:	add	r0, r0, r1
   14524:	movw	r1, #39	; 0x27
   14528:	strb	r1, [r0]
   1452c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14530:	add	r0, r0, #1
   14534:	str	r0, [fp, #-44]	; 0xffffffd4
   14538:	movw	r0, #1
   1453c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14540:	b	14544 <__assert_fail@plt+0x3454>
   14544:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14548:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1454c:	cmp	r0, r1
   14550:	bcs	14568 <__assert_fail@plt+0x3478>
   14554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14558:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1455c:	add	r0, r0, r1
   14560:	movw	r1, #92	; 0x5c
   14564:	strb	r1, [r0]
   14568:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1456c:	add	r0, r0, #1
   14570:	str	r0, [fp, #-44]	; 0xffffffd4
   14574:	b	14578 <__assert_fail@plt+0x3488>
   14578:	b	1457c <__assert_fail@plt+0x348c>
   1457c:	b	14580 <__assert_fail@plt+0x3490>
   14580:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14584:	tst	r0, #1
   14588:	beq	14608 <__assert_fail@plt+0x3518>
   1458c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14590:	tst	r0, #1
   14594:	bne	14608 <__assert_fail@plt+0x3518>
   14598:	b	1459c <__assert_fail@plt+0x34ac>
   1459c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145a4:	cmp	r0, r1
   145a8:	bcs	145c0 <__assert_fail@plt+0x34d0>
   145ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145b4:	add	r0, r0, r1
   145b8:	movw	r1, #39	; 0x27
   145bc:	strb	r1, [r0]
   145c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145c4:	add	r0, r0, #1
   145c8:	str	r0, [fp, #-44]	; 0xffffffd4
   145cc:	b	145d0 <__assert_fail@plt+0x34e0>
   145d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145d8:	cmp	r0, r1
   145dc:	bcs	145f4 <__assert_fail@plt+0x3504>
   145e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145e8:	add	r0, r0, r1
   145ec:	movw	r1, #39	; 0x27
   145f0:	strb	r1, [r0]
   145f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145f8:	add	r0, r0, #1
   145fc:	str	r0, [fp, #-44]	; 0xffffffd4
   14600:	movw	r0, #0
   14604:	strb	r0, [fp, #-60]	; 0xffffffc4
   14608:	b	1460c <__assert_fail@plt+0x351c>
   1460c:	b	14610 <__assert_fail@plt+0x3520>
   14610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14614:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14618:	cmp	r0, r1
   1461c:	bcs	14634 <__assert_fail@plt+0x3544>
   14620:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14628:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1462c:	add	r1, r1, r2
   14630:	strb	r0, [r1]
   14634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14638:	add	r0, r0, #1
   1463c:	str	r0, [fp, #-44]	; 0xffffffd4
   14640:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14644:	tst	r0, #1
   14648:	bne	14654 <__assert_fail@plt+0x3564>
   1464c:	movw	r0, #0
   14650:	strb	r0, [fp, #-62]	; 0xffffffc2
   14654:	b	14658 <__assert_fail@plt+0x3568>
   14658:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1465c:	add	r0, r0, #1
   14660:	str	r0, [fp, #-40]	; 0xffffffd8
   14664:	b	1340c <__assert_fail@plt+0x231c>
   14668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1466c:	cmp	r0, #0
   14670:	bne	14690 <__assert_fail@plt+0x35a0>
   14674:	ldr	r0, [fp, #8]
   14678:	cmp	r0, #2
   1467c:	bne	14690 <__assert_fail@plt+0x35a0>
   14680:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14684:	tst	r0, #1
   14688:	beq	14690 <__assert_fail@plt+0x35a0>
   1468c:	b	147e8 <__assert_fail@plt+0x36f8>
   14690:	ldr	r0, [fp, #8]
   14694:	cmp	r0, #2
   14698:	bne	14738 <__assert_fail@plt+0x3648>
   1469c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   146a0:	tst	r0, #1
   146a4:	bne	14738 <__assert_fail@plt+0x3648>
   146a8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   146ac:	tst	r0, #1
   146b0:	beq	14738 <__assert_fail@plt+0x3648>
   146b4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   146b8:	tst	r0, #1
   146bc:	beq	14704 <__assert_fail@plt+0x3614>
   146c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   146c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   146cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   146d0:	ldr	ip, [fp, #12]
   146d4:	ldr	lr, [fp, #16]
   146d8:	ldr	r4, [fp, #20]
   146dc:	ldr	r5, [fp, #24]
   146e0:	movw	r6, #5
   146e4:	str	r6, [sp]
   146e8:	str	ip, [sp, #4]
   146ec:	str	lr, [sp, #8]
   146f0:	str	r4, [sp, #12]
   146f4:	str	r5, [sp, #16]
   146f8:	bl	13124 <__assert_fail@plt+0x2034>
   146fc:	str	r0, [fp, #-20]	; 0xffffffec
   14700:	b	14850 <__assert_fail@plt+0x3760>
   14704:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14708:	cmp	r0, #0
   1470c:	bne	14730 <__assert_fail@plt+0x3640>
   14710:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14714:	cmp	r0, #0
   14718:	beq	14730 <__assert_fail@plt+0x3640>
   1471c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14720:	str	r0, [fp, #-28]	; 0xffffffe4
   14724:	movw	r0, #0
   14728:	str	r0, [fp, #-44]	; 0xffffffd4
   1472c:	b	131cc <__assert_fail@plt+0x20dc>
   14730:	b	14734 <__assert_fail@plt+0x3644>
   14734:	b	14738 <__assert_fail@plt+0x3648>
   14738:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1473c:	movw	r1, #0
   14740:	cmp	r0, r1
   14744:	beq	147b8 <__assert_fail@plt+0x36c8>
   14748:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1474c:	tst	r0, #1
   14750:	bne	147b8 <__assert_fail@plt+0x36c8>
   14754:	b	14758 <__assert_fail@plt+0x3668>
   14758:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1475c:	ldrsb	r0, [r0]
   14760:	cmp	r0, #0
   14764:	beq	147b4 <__assert_fail@plt+0x36c4>
   14768:	b	1476c <__assert_fail@plt+0x367c>
   1476c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14770:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14774:	cmp	r0, r1
   14778:	bcs	14794 <__assert_fail@plt+0x36a4>
   1477c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14780:	ldrb	r0, [r0]
   14784:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14788:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1478c:	add	r1, r1, r2
   14790:	strb	r0, [r1]
   14794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14798:	add	r0, r0, #1
   1479c:	str	r0, [fp, #-44]	; 0xffffffd4
   147a0:	b	147a4 <__assert_fail@plt+0x36b4>
   147a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   147a8:	add	r0, r0, #1
   147ac:	str	r0, [fp, #-52]	; 0xffffffcc
   147b0:	b	14758 <__assert_fail@plt+0x3668>
   147b4:	b	147b8 <__assert_fail@plt+0x36c8>
   147b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147c0:	cmp	r0, r1
   147c4:	bcs	147dc <__assert_fail@plt+0x36ec>
   147c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147d0:	add	r0, r0, r1
   147d4:	movw	r1, #0
   147d8:	strb	r1, [r0]
   147dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147e0:	str	r0, [fp, #-20]	; 0xffffffec
   147e4:	b	14850 <__assert_fail@plt+0x3760>
   147e8:	ldr	r0, [fp, #8]
   147ec:	cmp	r0, #2
   147f0:	bne	14808 <__assert_fail@plt+0x3718>
   147f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   147f8:	tst	r0, #1
   147fc:	beq	14808 <__assert_fail@plt+0x3718>
   14800:	movw	r0, #4
   14804:	str	r0, [fp, #8]
   14808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1480c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14810:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14814:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14818:	ldr	ip, [fp, #8]
   1481c:	ldr	lr, [fp, #12]
   14820:	mvn	r4, #2
   14824:	and	lr, lr, r4
   14828:	ldr	r4, [fp, #20]
   1482c:	ldr	r5, [fp, #24]
   14830:	str	ip, [sp]
   14834:	str	lr, [sp, #4]
   14838:	movw	ip, #0
   1483c:	str	ip, [sp, #8]
   14840:	str	r4, [sp, #12]
   14844:	str	r5, [sp, #16]
   14848:	bl	13124 <__assert_fail@plt+0x2034>
   1484c:	str	r0, [fp, #-20]	; 0xffffffec
   14850:	ldr	r0, [fp, #-20]	; 0xffffffec
   14854:	sub	sp, fp, #16
   14858:	pop	{r4, r5, r6, sl, fp, pc}
   1485c:	push	{fp, lr}
   14860:	mov	fp, sp
   14864:	sub	sp, sp, #16
   14868:	str	r0, [fp, #-4]
   1486c:	str	r1, [sp, #8]
   14870:	str	r2, [sp, #4]
   14874:	ldr	r0, [fp, #-4]
   14878:	ldr	r1, [sp, #8]
   1487c:	ldr	r3, [sp, #4]
   14880:	movw	r2, #0
   14884:	bl	14890 <__assert_fail@plt+0x37a0>
   14888:	mov	sp, fp
   1488c:	pop	{fp, pc}
   14890:	push	{r4, r5, r6, sl, fp, lr}
   14894:	add	fp, sp, #16
   14898:	sub	sp, sp, #72	; 0x48
   1489c:	str	r0, [fp, #-20]	; 0xffffffec
   148a0:	str	r1, [fp, #-24]	; 0xffffffe8
   148a4:	str	r2, [fp, #-28]	; 0xffffffe4
   148a8:	str	r3, [fp, #-32]	; 0xffffffe0
   148ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148b0:	movw	r1, #0
   148b4:	cmp	r0, r1
   148b8:	beq	148c8 <__assert_fail@plt+0x37d8>
   148bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148c0:	str	r0, [sp, #32]
   148c4:	b	148d8 <__assert_fail@plt+0x37e8>
   148c8:	movw	r0, #61844	; 0xf194
   148cc:	movt	r0, #2
   148d0:	str	r0, [sp, #32]
   148d4:	b	148d8 <__assert_fail@plt+0x37e8>
   148d8:	ldr	r0, [sp, #32]
   148dc:	str	r0, [fp, #-36]	; 0xffffffdc
   148e0:	bl	11000 <__errno_location@plt>
   148e4:	ldr	r0, [r0]
   148e8:	str	r0, [fp, #-40]	; 0xffffffd8
   148ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   148f0:	ldr	r0, [r0, #4]
   148f4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   148f8:	movw	r1, #0
   148fc:	cmp	lr, r1
   14900:	movw	lr, #0
   14904:	movne	lr, #1
   14908:	tst	lr, #1
   1490c:	mov	lr, r1
   14910:	moveq	lr, #1
   14914:	orr	r0, r0, lr
   14918:	str	r0, [sp, #44]	; 0x2c
   1491c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14924:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14928:	ldr	r0, [r0]
   1492c:	ldr	lr, [sp, #44]	; 0x2c
   14930:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14934:	add	ip, ip, #8
   14938:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1493c:	ldr	r4, [r4, #40]	; 0x28
   14940:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14944:	ldr	r5, [r5, #44]	; 0x2c
   14948:	str	r0, [sp, #28]
   1494c:	mov	r0, r1
   14950:	ldr	r6, [sp, #28]
   14954:	str	r6, [sp]
   14958:	str	lr, [sp, #4]
   1495c:	str	ip, [sp, #8]
   14960:	str	r4, [sp, #12]
   14964:	str	r5, [sp, #16]
   14968:	bl	13124 <__assert_fail@plt+0x2034>
   1496c:	add	r0, r0, #1
   14970:	str	r0, [sp, #40]	; 0x28
   14974:	ldr	r0, [sp, #40]	; 0x28
   14978:	bl	15db4 <__assert_fail@plt+0x4cc4>
   1497c:	str	r0, [sp, #36]	; 0x24
   14980:	ldr	r0, [sp, #36]	; 0x24
   14984:	ldr	r1, [sp, #40]	; 0x28
   14988:	ldr	r2, [fp, #-20]	; 0xffffffec
   1498c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14990:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14994:	ldr	ip, [ip]
   14998:	ldr	lr, [sp, #44]	; 0x2c
   1499c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   149a0:	add	r4, r4, #8
   149a4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   149a8:	ldr	r5, [r5, #40]	; 0x28
   149ac:	ldr	r6, [fp, #-36]	; 0xffffffdc
   149b0:	ldr	r6, [r6, #44]	; 0x2c
   149b4:	str	ip, [sp]
   149b8:	str	lr, [sp, #4]
   149bc:	str	r4, [sp, #8]
   149c0:	str	r5, [sp, #12]
   149c4:	str	r6, [sp, #16]
   149c8:	bl	13124 <__assert_fail@plt+0x2034>
   149cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   149d0:	str	r0, [sp, #24]
   149d4:	str	r1, [sp, #20]
   149d8:	bl	11000 <__errno_location@plt>
   149dc:	ldr	r1, [sp, #20]
   149e0:	str	r1, [r0]
   149e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   149e8:	movw	r2, #0
   149ec:	cmp	r0, r2
   149f0:	beq	14a04 <__assert_fail@plt+0x3914>
   149f4:	ldr	r0, [sp, #40]	; 0x28
   149f8:	sub	r0, r0, #1
   149fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a00:	str	r0, [r1]
   14a04:	ldr	r0, [sp, #36]	; 0x24
   14a08:	sub	sp, fp, #16
   14a0c:	pop	{r4, r5, r6, sl, fp, pc}
   14a10:	push	{fp, lr}
   14a14:	mov	fp, sp
   14a18:	sub	sp, sp, #8
   14a1c:	movw	r0, #61692	; 0xf0fc
   14a20:	movt	r0, #2
   14a24:	ldr	r0, [r0]
   14a28:	str	r0, [sp, #4]
   14a2c:	movw	r0, #1
   14a30:	str	r0, [sp]
   14a34:	ldr	r0, [sp]
   14a38:	movw	r1, #61696	; 0xf100
   14a3c:	movt	r1, #2
   14a40:	ldr	r1, [r1]
   14a44:	cmp	r0, r1
   14a48:	bge	14a70 <__assert_fail@plt+0x3980>
   14a4c:	ldr	r0, [sp, #4]
   14a50:	ldr	r1, [sp]
   14a54:	add	r0, r0, r1, lsl #3
   14a58:	ldr	r0, [r0, #4]
   14a5c:	bl	12c54 <__assert_fail@plt+0x1b64>
   14a60:	ldr	r0, [sp]
   14a64:	add	r0, r0, #1
   14a68:	str	r0, [sp]
   14a6c:	b	14a34 <__assert_fail@plt+0x3944>
   14a70:	ldr	r0, [sp, #4]
   14a74:	ldr	r0, [r0, #4]
   14a78:	movw	r1, #61892	; 0xf1c4
   14a7c:	movt	r1, #2
   14a80:	cmp	r0, r1
   14a84:	beq	14ab0 <__assert_fail@plt+0x39c0>
   14a88:	ldr	r0, [sp, #4]
   14a8c:	ldr	r0, [r0, #4]
   14a90:	bl	12c54 <__assert_fail@plt+0x1b64>
   14a94:	movw	r0, #256	; 0x100
   14a98:	movw	lr, #61700	; 0xf104
   14a9c:	movt	lr, #2
   14aa0:	str	r0, [lr]
   14aa4:	movw	r0, #61892	; 0xf1c4
   14aa8:	movt	r0, #2
   14aac:	str	r0, [lr, #4]
   14ab0:	ldr	r0, [sp, #4]
   14ab4:	movw	r1, #61700	; 0xf104
   14ab8:	movt	r1, #2
   14abc:	cmp	r0, r1
   14ac0:	beq	14ae0 <__assert_fail@plt+0x39f0>
   14ac4:	ldr	r0, [sp, #4]
   14ac8:	bl	12c54 <__assert_fail@plt+0x1b64>
   14acc:	movw	r0, #61692	; 0xf0fc
   14ad0:	movt	r0, #2
   14ad4:	movw	lr, #61700	; 0xf104
   14ad8:	movt	lr, #2
   14adc:	str	lr, [r0]
   14ae0:	movw	r0, #61696	; 0xf100
   14ae4:	movt	r0, #2
   14ae8:	movw	r1, #1
   14aec:	str	r1, [r0]
   14af0:	mov	sp, fp
   14af4:	pop	{fp, pc}
   14af8:	push	{fp, lr}
   14afc:	mov	fp, sp
   14b00:	sub	sp, sp, #8
   14b04:	str	r0, [sp, #4]
   14b08:	str	r1, [sp]
   14b0c:	ldr	r0, [sp, #4]
   14b10:	ldr	r1, [sp]
   14b14:	mvn	r2, #0
   14b18:	movw	r3, #61844	; 0xf194
   14b1c:	movt	r3, #2
   14b20:	bl	14b2c <__assert_fail@plt+0x3a3c>
   14b24:	mov	sp, fp
   14b28:	pop	{fp, pc}
   14b2c:	push	{r4, r5, r6, sl, fp, lr}
   14b30:	add	fp, sp, #16
   14b34:	sub	sp, sp, #88	; 0x58
   14b38:	str	r0, [fp, #-20]	; 0xffffffec
   14b3c:	str	r1, [fp, #-24]	; 0xffffffe8
   14b40:	str	r2, [fp, #-28]	; 0xffffffe4
   14b44:	str	r3, [fp, #-32]	; 0xffffffe0
   14b48:	bl	11000 <__errno_location@plt>
   14b4c:	ldr	r1, [pc, #676]	; 14df8 <__assert_fail@plt+0x3d08>
   14b50:	ldr	r0, [r0]
   14b54:	str	r0, [fp, #-36]	; 0xffffffdc
   14b58:	movw	r0, #61692	; 0xf0fc
   14b5c:	movt	r0, #2
   14b60:	ldr	r0, [r0]
   14b64:	str	r0, [fp, #-40]	; 0xffffffd8
   14b68:	str	r1, [fp, #-44]	; 0xffffffd4
   14b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b70:	movw	r1, #0
   14b74:	cmp	r1, r0
   14b78:	bgt	14b8c <__assert_fail@plt+0x3a9c>
   14b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b84:	cmp	r0, r1
   14b88:	blt	14b90 <__assert_fail@plt+0x3aa0>
   14b8c:	bl	110e4 <abort@plt>
   14b90:	movw	r0, #61696	; 0xf100
   14b94:	movt	r0, #2
   14b98:	ldr	r0, [r0]
   14b9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ba0:	cmp	r0, r1
   14ba4:	bgt	14c9c <__assert_fail@plt+0x3bac>
   14ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bac:	movw	r1, #61700	; 0xf104
   14bb0:	movt	r1, #2
   14bb4:	cmp	r0, r1
   14bb8:	movw	r0, #0
   14bbc:	moveq	r0, #1
   14bc0:	and	r0, r0, #1
   14bc4:	strb	r0, [fp, #-45]	; 0xffffffd3
   14bc8:	movw	r0, #61696	; 0xf100
   14bcc:	movt	r0, #2
   14bd0:	ldr	r0, [r0]
   14bd4:	str	r0, [sp, #52]	; 0x34
   14bd8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14bdc:	tst	r0, #1
   14be0:	beq	14bf0 <__assert_fail@plt+0x3b00>
   14be4:	movw	r0, #0
   14be8:	str	r0, [sp, #32]
   14bec:	b	14bf8 <__assert_fail@plt+0x3b08>
   14bf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bf4:	str	r0, [sp, #32]
   14bf8:	ldr	r0, [sp, #32]
   14bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c00:	movw	r2, #61696	; 0xf100
   14c04:	movt	r2, #2
   14c08:	ldr	r2, [r2]
   14c0c:	sub	r1, r1, r2
   14c10:	add	r2, r1, #1
   14c14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14c18:	add	r1, sp, #52	; 0x34
   14c1c:	movw	ip, #8
   14c20:	str	ip, [sp]
   14c24:	bl	15ff0 <__assert_fail@plt+0x4f00>
   14c28:	str	r0, [fp, #-40]	; 0xffffffd8
   14c2c:	movw	r1, #61692	; 0xf0fc
   14c30:	movt	r1, #2
   14c34:	str	r0, [r1]
   14c38:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14c3c:	tst	r0, #1
   14c40:	beq	14c60 <__assert_fail@plt+0x3b70>
   14c44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c48:	movw	r1, #61700	; 0xf104
   14c4c:	movt	r1, #2
   14c50:	ldr	r2, [r1]
   14c54:	str	r2, [r0]
   14c58:	ldr	r1, [r1, #4]
   14c5c:	str	r1, [r0, #4]
   14c60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c64:	movw	r1, #61696	; 0xf100
   14c68:	movt	r1, #2
   14c6c:	ldr	r1, [r1]
   14c70:	add	r0, r0, r1, lsl #3
   14c74:	ldr	r2, [sp, #52]	; 0x34
   14c78:	sub	r1, r2, r1
   14c7c:	lsl	r2, r1, #3
   14c80:	movw	r1, #0
   14c84:	and	r1, r1, #255	; 0xff
   14c88:	bl	11018 <memset@plt>
   14c8c:	ldr	r0, [sp, #52]	; 0x34
   14c90:	movw	r1, #61696	; 0xf100
   14c94:	movt	r1, #2
   14c98:	str	r0, [r1]
   14c9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ca4:	ldr	r0, [r0, r1, lsl #3]
   14ca8:	str	r0, [sp, #48]	; 0x30
   14cac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14cb4:	add	r0, r0, r1, lsl #3
   14cb8:	ldr	r0, [r0, #4]
   14cbc:	str	r0, [sp, #44]	; 0x2c
   14cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cc4:	ldr	r0, [r0, #4]
   14cc8:	orr	r0, r0, #1
   14ccc:	str	r0, [sp, #40]	; 0x28
   14cd0:	ldr	r0, [sp, #44]	; 0x2c
   14cd4:	ldr	r1, [sp, #48]	; 0x30
   14cd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14cdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ce0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14ce4:	ldr	ip, [ip]
   14ce8:	ldr	lr, [sp, #40]	; 0x28
   14cec:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14cf0:	add	r4, r4, #8
   14cf4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14cf8:	ldr	r5, [r5, #40]	; 0x28
   14cfc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14d00:	ldr	r6, [r6, #44]	; 0x2c
   14d04:	str	ip, [sp]
   14d08:	str	lr, [sp, #4]
   14d0c:	str	r4, [sp, #8]
   14d10:	str	r5, [sp, #12]
   14d14:	str	r6, [sp, #16]
   14d18:	bl	13124 <__assert_fail@plt+0x2034>
   14d1c:	str	r0, [sp, #36]	; 0x24
   14d20:	ldr	r0, [sp, #48]	; 0x30
   14d24:	ldr	r1, [sp, #36]	; 0x24
   14d28:	cmp	r0, r1
   14d2c:	bhi	14dd8 <__assert_fail@plt+0x3ce8>
   14d30:	ldr	r0, [sp, #36]	; 0x24
   14d34:	add	r0, r0, #1
   14d38:	str	r0, [sp, #48]	; 0x30
   14d3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d40:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d44:	add	r1, r1, r2, lsl #3
   14d48:	str	r0, [r1]
   14d4c:	ldr	r0, [sp, #44]	; 0x2c
   14d50:	movw	r1, #61892	; 0xf1c4
   14d54:	movt	r1, #2
   14d58:	cmp	r0, r1
   14d5c:	beq	14d68 <__assert_fail@plt+0x3c78>
   14d60:	ldr	r0, [sp, #44]	; 0x2c
   14d64:	bl	12c54 <__assert_fail@plt+0x1b64>
   14d68:	ldr	r0, [sp, #48]	; 0x30
   14d6c:	bl	15db4 <__assert_fail@plt+0x4cc4>
   14d70:	mov	lr, r0
   14d74:	str	r0, [sp, #44]	; 0x2c
   14d78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d80:	add	r0, r0, r1, lsl #3
   14d84:	str	lr, [r0, #4]
   14d88:	ldr	r0, [sp, #44]	; 0x2c
   14d8c:	ldr	r1, [sp, #48]	; 0x30
   14d90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d98:	ldr	lr, [fp, #-32]	; 0xffffffe0
   14d9c:	ldr	lr, [lr]
   14da0:	ldr	ip, [sp, #40]	; 0x28
   14da4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14da8:	add	r4, r4, #8
   14dac:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14db0:	ldr	r5, [r5, #40]	; 0x28
   14db4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14db8:	ldr	r6, [r6, #44]	; 0x2c
   14dbc:	str	lr, [sp]
   14dc0:	str	ip, [sp, #4]
   14dc4:	str	r4, [sp, #8]
   14dc8:	str	r5, [sp, #12]
   14dcc:	str	r6, [sp, #16]
   14dd0:	bl	13124 <__assert_fail@plt+0x2034>
   14dd4:	str	r0, [sp, #28]
   14dd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14ddc:	str	r0, [sp, #24]
   14de0:	bl	11000 <__errno_location@plt>
   14de4:	ldr	lr, [sp, #24]
   14de8:	str	lr, [r0]
   14dec:	ldr	r0, [sp, #44]	; 0x2c
   14df0:	sub	sp, fp, #16
   14df4:	pop	{r4, r5, r6, sl, fp, pc}
   14df8:	svcvc	0x00ffffff
   14dfc:	push	{fp, lr}
   14e00:	mov	fp, sp
   14e04:	sub	sp, sp, #16
   14e08:	str	r0, [fp, #-4]
   14e0c:	str	r1, [sp, #8]
   14e10:	str	r2, [sp, #4]
   14e14:	ldr	r0, [fp, #-4]
   14e18:	ldr	r1, [sp, #8]
   14e1c:	ldr	r2, [sp, #4]
   14e20:	movw	r3, #61844	; 0xf194
   14e24:	movt	r3, #2
   14e28:	bl	14b2c <__assert_fail@plt+0x3a3c>
   14e2c:	mov	sp, fp
   14e30:	pop	{fp, pc}
   14e34:	push	{fp, lr}
   14e38:	mov	fp, sp
   14e3c:	sub	sp, sp, #8
   14e40:	str	r0, [sp, #4]
   14e44:	ldr	r1, [sp, #4]
   14e48:	movw	r0, #0
   14e4c:	bl	14af8 <__assert_fail@plt+0x3a08>
   14e50:	mov	sp, fp
   14e54:	pop	{fp, pc}
   14e58:	push	{fp, lr}
   14e5c:	mov	fp, sp
   14e60:	sub	sp, sp, #8
   14e64:	str	r0, [sp, #4]
   14e68:	str	r1, [sp]
   14e6c:	ldr	r1, [sp, #4]
   14e70:	ldr	r2, [sp]
   14e74:	movw	r0, #0
   14e78:	bl	14dfc <__assert_fail@plt+0x3d0c>
   14e7c:	mov	sp, fp
   14e80:	pop	{fp, pc}
   14e84:	push	{fp, lr}
   14e88:	mov	fp, sp
   14e8c:	sub	sp, sp, #64	; 0x40
   14e90:	str	r0, [fp, #-4]
   14e94:	str	r1, [fp, #-8]
   14e98:	str	r2, [fp, #-12]
   14e9c:	ldr	r1, [fp, #-8]
   14ea0:	add	r0, sp, #4
   14ea4:	bl	14ec4 <__assert_fail@plt+0x3dd4>
   14ea8:	ldr	r0, [fp, #-4]
   14eac:	ldr	r1, [fp, #-12]
   14eb0:	mvn	r2, #0
   14eb4:	add	r3, sp, #4
   14eb8:	bl	14b2c <__assert_fail@plt+0x3a3c>
   14ebc:	mov	sp, fp
   14ec0:	pop	{fp, pc}
   14ec4:	push	{fp, lr}
   14ec8:	mov	fp, sp
   14ecc:	sub	sp, sp, #8
   14ed0:	str	r1, [sp, #4]
   14ed4:	mov	r1, r0
   14ed8:	str	r0, [sp]
   14edc:	mov	r0, r1
   14ee0:	movw	r1, #0
   14ee4:	and	r1, r1, #255	; 0xff
   14ee8:	movw	r2, #48	; 0x30
   14eec:	bl	11018 <memset@plt>
   14ef0:	ldr	r0, [sp, #4]
   14ef4:	cmp	r0, #10
   14ef8:	bne	14f00 <__assert_fail@plt+0x3e10>
   14efc:	bl	110e4 <abort@plt>
   14f00:	ldr	r0, [sp, #4]
   14f04:	ldr	r1, [sp]
   14f08:	str	r0, [r1]
   14f0c:	mov	sp, fp
   14f10:	pop	{fp, pc}
   14f14:	push	{fp, lr}
   14f18:	mov	fp, sp
   14f1c:	sub	sp, sp, #64	; 0x40
   14f20:	str	r0, [fp, #-4]
   14f24:	str	r1, [fp, #-8]
   14f28:	str	r2, [fp, #-12]
   14f2c:	str	r3, [fp, #-16]
   14f30:	ldr	r1, [fp, #-8]
   14f34:	mov	r0, sp
   14f38:	bl	14ec4 <__assert_fail@plt+0x3dd4>
   14f3c:	ldr	r0, [fp, #-4]
   14f40:	ldr	r1, [fp, #-12]
   14f44:	ldr	r2, [fp, #-16]
   14f48:	mov	r3, sp
   14f4c:	bl	14b2c <__assert_fail@plt+0x3a3c>
   14f50:	mov	sp, fp
   14f54:	pop	{fp, pc}
   14f58:	push	{fp, lr}
   14f5c:	mov	fp, sp
   14f60:	sub	sp, sp, #8
   14f64:	str	r0, [sp, #4]
   14f68:	str	r1, [sp]
   14f6c:	ldr	r1, [sp, #4]
   14f70:	ldr	r2, [sp]
   14f74:	movw	r0, #0
   14f78:	bl	14e84 <__assert_fail@plt+0x3d94>
   14f7c:	mov	sp, fp
   14f80:	pop	{fp, pc}
   14f84:	push	{fp, lr}
   14f88:	mov	fp, sp
   14f8c:	sub	sp, sp, #16
   14f90:	str	r0, [fp, #-4]
   14f94:	str	r1, [sp, #8]
   14f98:	str	r2, [sp, #4]
   14f9c:	ldr	r1, [fp, #-4]
   14fa0:	ldr	r2, [sp, #8]
   14fa4:	ldr	r3, [sp, #4]
   14fa8:	movw	r0, #0
   14fac:	bl	14f14 <__assert_fail@plt+0x3e24>
   14fb0:	mov	sp, fp
   14fb4:	pop	{fp, pc}
   14fb8:	push	{fp, lr}
   14fbc:	mov	fp, sp
   14fc0:	sub	sp, sp, #72	; 0x48
   14fc4:	movw	r3, #61844	; 0xf194
   14fc8:	movt	r3, #2
   14fcc:	str	r0, [fp, #-4]
   14fd0:	str	r1, [fp, #-8]
   14fd4:	strb	r2, [fp, #-9]
   14fd8:	add	r0, sp, #12
   14fdc:	mov	r1, r0
   14fe0:	str	r0, [sp, #8]
   14fe4:	mov	r0, r1
   14fe8:	mov	r1, r3
   14fec:	movw	r2, #48	; 0x30
   14ff0:	bl	10ec8 <memcpy@plt>
   14ff4:	ldr	r0, [sp, #8]
   14ff8:	ldrb	r1, [fp, #-9]
   14ffc:	movw	r2, #1
   15000:	bl	12ec8 <__assert_fail@plt+0x1dd8>
   15004:	ldr	r1, [fp, #-4]
   15008:	ldr	r2, [fp, #-8]
   1500c:	movw	r3, #0
   15010:	str	r0, [sp, #4]
   15014:	mov	r0, r3
   15018:	add	r3, sp, #12
   1501c:	bl	14b2c <__assert_fail@plt+0x3a3c>
   15020:	mov	sp, fp
   15024:	pop	{fp, pc}
   15028:	push	{fp, lr}
   1502c:	mov	fp, sp
   15030:	sub	sp, sp, #8
   15034:	str	r0, [sp, #4]
   15038:	strb	r1, [sp, #3]
   1503c:	ldr	r0, [sp, #4]
   15040:	mvn	r1, #0
   15044:	ldrb	r2, [sp, #3]
   15048:	bl	14fb8 <__assert_fail@plt+0x3ec8>
   1504c:	mov	sp, fp
   15050:	pop	{fp, pc}
   15054:	push	{fp, lr}
   15058:	mov	fp, sp
   1505c:	sub	sp, sp, #8
   15060:	str	r0, [sp, #4]
   15064:	ldr	r0, [sp, #4]
   15068:	movw	r1, #58	; 0x3a
   1506c:	and	r1, r1, #255	; 0xff
   15070:	bl	15028 <__assert_fail@plt+0x3f38>
   15074:	mov	sp, fp
   15078:	pop	{fp, pc}
   1507c:	push	{fp, lr}
   15080:	mov	fp, sp
   15084:	sub	sp, sp, #8
   15088:	str	r0, [sp, #4]
   1508c:	str	r1, [sp]
   15090:	ldr	r0, [sp, #4]
   15094:	ldr	r1, [sp]
   15098:	movw	r2, #58	; 0x3a
   1509c:	and	r2, r2, #255	; 0xff
   150a0:	bl	14fb8 <__assert_fail@plt+0x3ec8>
   150a4:	mov	sp, fp
   150a8:	pop	{fp, pc}
   150ac:	push	{fp, lr}
   150b0:	mov	fp, sp
   150b4:	sub	sp, sp, #120	; 0x78
   150b8:	str	r0, [fp, #-4]
   150bc:	str	r1, [fp, #-8]
   150c0:	str	r2, [fp, #-12]
   150c4:	ldr	r1, [fp, #-8]
   150c8:	add	r0, sp, #12
   150cc:	bl	14ec4 <__assert_fail@plt+0x3dd4>
   150d0:	add	r0, sp, #60	; 0x3c
   150d4:	mov	r1, r0
   150d8:	add	r2, sp, #12
   150dc:	str	r0, [sp, #8]
   150e0:	mov	r0, r1
   150e4:	mov	r1, r2
   150e8:	movw	r2, #48	; 0x30
   150ec:	bl	10ec8 <memcpy@plt>
   150f0:	ldr	r0, [sp, #8]
   150f4:	movw	r1, #58	; 0x3a
   150f8:	and	r1, r1, #255	; 0xff
   150fc:	movw	r2, #1
   15100:	bl	12ec8 <__assert_fail@plt+0x1dd8>
   15104:	ldr	r1, [fp, #-4]
   15108:	ldr	r2, [fp, #-12]
   1510c:	str	r0, [sp, #4]
   15110:	mov	r0, r1
   15114:	mov	r1, r2
   15118:	mvn	r2, #0
   1511c:	add	r3, sp, #60	; 0x3c
   15120:	bl	14b2c <__assert_fail@plt+0x3a3c>
   15124:	mov	sp, fp
   15128:	pop	{fp, pc}
   1512c:	push	{fp, lr}
   15130:	mov	fp, sp
   15134:	sub	sp, sp, #24
   15138:	str	r0, [fp, #-4]
   1513c:	str	r1, [fp, #-8]
   15140:	str	r2, [sp, #12]
   15144:	str	r3, [sp, #8]
   15148:	ldr	r0, [fp, #-4]
   1514c:	ldr	r1, [fp, #-8]
   15150:	ldr	r2, [sp, #12]
   15154:	ldr	r3, [sp, #8]
   15158:	mvn	ip, #0
   1515c:	str	ip, [sp]
   15160:	bl	1516c <__assert_fail@plt+0x407c>
   15164:	mov	sp, fp
   15168:	pop	{fp, pc}
   1516c:	push	{fp, lr}
   15170:	mov	fp, sp
   15174:	sub	sp, sp, #72	; 0x48
   15178:	ldr	ip, [fp, #8]
   1517c:	movw	lr, #61844	; 0xf194
   15180:	movt	lr, #2
   15184:	str	r0, [fp, #-4]
   15188:	str	r1, [fp, #-8]
   1518c:	str	r2, [fp, #-12]
   15190:	str	r3, [fp, #-16]
   15194:	add	r0, sp, #8
   15198:	mov	r1, r0
   1519c:	str	r0, [sp, #4]
   151a0:	mov	r0, r1
   151a4:	mov	r1, lr
   151a8:	movw	r2, #48	; 0x30
   151ac:	str	ip, [sp]
   151b0:	bl	10ec8 <memcpy@plt>
   151b4:	ldr	r1, [fp, #-8]
   151b8:	ldr	r2, [fp, #-12]
   151bc:	ldr	r0, [sp, #4]
   151c0:	bl	12fc8 <__assert_fail@plt+0x1ed8>
   151c4:	ldr	r0, [fp, #-4]
   151c8:	ldr	r1, [fp, #-16]
   151cc:	ldr	r2, [fp, #8]
   151d0:	add	r3, sp, #8
   151d4:	bl	14b2c <__assert_fail@plt+0x3a3c>
   151d8:	mov	sp, fp
   151dc:	pop	{fp, pc}
   151e0:	push	{fp, lr}
   151e4:	mov	fp, sp
   151e8:	sub	sp, sp, #16
   151ec:	str	r0, [fp, #-4]
   151f0:	str	r1, [sp, #8]
   151f4:	str	r2, [sp, #4]
   151f8:	ldr	r1, [fp, #-4]
   151fc:	ldr	r2, [sp, #8]
   15200:	ldr	r3, [sp, #4]
   15204:	movw	r0, #0
   15208:	bl	1512c <__assert_fail@plt+0x403c>
   1520c:	mov	sp, fp
   15210:	pop	{fp, pc}
   15214:	push	{fp, lr}
   15218:	mov	fp, sp
   1521c:	sub	sp, sp, #24
   15220:	str	r0, [fp, #-4]
   15224:	str	r1, [fp, #-8]
   15228:	str	r2, [sp, #12]
   1522c:	str	r3, [sp, #8]
   15230:	ldr	r1, [fp, #-4]
   15234:	ldr	r2, [fp, #-8]
   15238:	ldr	r3, [sp, #12]
   1523c:	ldr	r0, [sp, #8]
   15240:	movw	ip, #0
   15244:	str	r0, [sp, #4]
   15248:	mov	r0, ip
   1524c:	ldr	ip, [sp, #4]
   15250:	str	ip, [sp]
   15254:	bl	1516c <__assert_fail@plt+0x407c>
   15258:	mov	sp, fp
   1525c:	pop	{fp, pc}
   15260:	push	{fp, lr}
   15264:	mov	fp, sp
   15268:	sub	sp, sp, #16
   1526c:	str	r0, [fp, #-4]
   15270:	str	r1, [sp, #8]
   15274:	str	r2, [sp, #4]
   15278:	ldr	r0, [fp, #-4]
   1527c:	ldr	r1, [sp, #8]
   15280:	ldr	r2, [sp, #4]
   15284:	movw	r3, #61708	; 0xf10c
   15288:	movt	r3, #2
   1528c:	bl	14b2c <__assert_fail@plt+0x3a3c>
   15290:	mov	sp, fp
   15294:	pop	{fp, pc}
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	sub	sp, sp, #8
   152a4:	str	r0, [sp, #4]
   152a8:	str	r1, [sp]
   152ac:	ldr	r1, [sp, #4]
   152b0:	ldr	r2, [sp]
   152b4:	movw	r0, #0
   152b8:	bl	15260 <__assert_fail@plt+0x4170>
   152bc:	mov	sp, fp
   152c0:	pop	{fp, pc}
   152c4:	push	{fp, lr}
   152c8:	mov	fp, sp
   152cc:	sub	sp, sp, #8
   152d0:	str	r0, [sp, #4]
   152d4:	str	r1, [sp]
   152d8:	ldr	r0, [sp, #4]
   152dc:	ldr	r1, [sp]
   152e0:	mvn	r2, #0
   152e4:	bl	15260 <__assert_fail@plt+0x4170>
   152e8:	mov	sp, fp
   152ec:	pop	{fp, pc}
   152f0:	push	{fp, lr}
   152f4:	mov	fp, sp
   152f8:	sub	sp, sp, #8
   152fc:	str	r0, [sp, #4]
   15300:	ldr	r1, [sp, #4]
   15304:	movw	r0, #0
   15308:	bl	152c4 <__assert_fail@plt+0x41d4>
   1530c:	mov	sp, fp
   15310:	pop	{fp, pc}
   15314:	push	{fp, lr}
   15318:	mov	fp, sp
   1531c:	sub	sp, sp, #24
   15320:	str	r0, [fp, #-8]
   15324:	str	r1, [sp, #12]
   15328:	ldr	r0, [fp, #-8]
   1532c:	bl	10fd0 <gettext@plt>
   15330:	str	r0, [sp, #8]
   15334:	ldr	r0, [sp, #8]
   15338:	ldr	r1, [fp, #-8]
   1533c:	cmp	r0, r1
   15340:	beq	15350 <__assert_fail@plt+0x4260>
   15344:	ldr	r0, [sp, #8]
   15348:	str	r0, [fp, #-4]
   1534c:	b	1541c <__assert_fail@plt+0x432c>
   15350:	bl	1baf0 <__assert_fail@plt+0xaa00>
   15354:	str	r0, [sp, #4]
   15358:	ldr	r0, [sp, #4]
   1535c:	movw	r1, #56808	; 0xdde8
   15360:	movt	r1, #1
   15364:	bl	1b128 <__assert_fail@plt+0xa038>
   15368:	cmp	r0, #0
   1536c:	bne	153a4 <__assert_fail@plt+0x42b4>
   15370:	ldr	r0, [fp, #-8]
   15374:	ldrb	r0, [r0]
   15378:	cmp	r0, #96	; 0x60
   1537c:	movw	r0, #0
   15380:	moveq	r0, #1
   15384:	tst	r0, #1
   15388:	movw	r0, #56818	; 0xddf2
   1538c:	movt	r0, #1
   15390:	movw	r1, #56814	; 0xddee
   15394:	movt	r1, #1
   15398:	movne	r0, r1
   1539c:	str	r0, [fp, #-4]
   153a0:	b	1541c <__assert_fail@plt+0x432c>
   153a4:	ldr	r0, [sp, #4]
   153a8:	movw	r1, #56822	; 0xddf6
   153ac:	movt	r1, #1
   153b0:	bl	1b128 <__assert_fail@plt+0xa038>
   153b4:	cmp	r0, #0
   153b8:	bne	153f0 <__assert_fail@plt+0x4300>
   153bc:	ldr	r0, [fp, #-8]
   153c0:	ldrb	r0, [r0]
   153c4:	cmp	r0, #96	; 0x60
   153c8:	movw	r0, #0
   153cc:	moveq	r0, #1
   153d0:	tst	r0, #1
   153d4:	movw	r0, #56834	; 0xde02
   153d8:	movt	r0, #1
   153dc:	movw	r1, #56830	; 0xddfe
   153e0:	movt	r1, #1
   153e4:	movne	r0, r1
   153e8:	str	r0, [fp, #-4]
   153ec:	b	1541c <__assert_fail@plt+0x432c>
   153f0:	ldr	r0, [sp, #12]
   153f4:	cmp	r0, #9
   153f8:	movw	r0, #0
   153fc:	moveq	r0, #1
   15400:	tst	r0, #1
   15404:	movw	r0, #56806	; 0xdde6
   15408:	movt	r0, #1
   1540c:	movw	r1, #56802	; 0xdde2
   15410:	movt	r1, #1
   15414:	movne	r0, r1
   15418:	str	r0, [fp, #-4]
   1541c:	ldr	r0, [fp, #-4]
   15420:	mov	sp, fp
   15424:	pop	{fp, pc}
   15428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1542c:	add	fp, sp, #28
   15430:	sub	sp, sp, #260	; 0x104
   15434:	ldr	ip, [fp, #12]
   15438:	ldr	lr, [fp, #8]
   1543c:	str	r0, [fp, #-32]	; 0xffffffe0
   15440:	str	r1, [fp, #-36]	; 0xffffffdc
   15444:	str	r2, [fp, #-40]	; 0xffffffd8
   15448:	str	r3, [fp, #-44]	; 0xffffffd4
   1544c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15450:	movw	r1, #0
   15454:	cmp	r0, r1
   15458:	str	lr, [fp, #-48]	; 0xffffffd0
   1545c:	str	ip, [fp, #-52]	; 0xffffffcc
   15460:	beq	15498 <__assert_fail@plt+0x43a8>
   15464:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15468:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1546c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15470:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15474:	movw	ip, #56924	; 0xde5c
   15478:	movt	ip, #1
   1547c:	str	r1, [fp, #-56]	; 0xffffffc8
   15480:	mov	r1, ip
   15484:	ldr	ip, [fp, #-56]	; 0xffffffc8
   15488:	str	ip, [sp]
   1548c:	bl	10ff4 <fprintf@plt>
   15490:	str	r0, [fp, #-60]	; 0xffffffc4
   15494:	b	154b4 <__assert_fail@plt+0x43c4>
   15498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1549c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   154a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154a4:	movw	r1, #56936	; 0xde68
   154a8:	movt	r1, #1
   154ac:	bl	10ff4 <fprintf@plt>
   154b0:	str	r0, [fp, #-64]	; 0xffffffc0
   154b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154b8:	movw	r1, #56943	; 0xde6f
   154bc:	movt	r1, #1
   154c0:	str	r0, [fp, #-68]	; 0xffffffbc
   154c4:	mov	r0, r1
   154c8:	bl	10fd0 <gettext@plt>
   154cc:	movw	r1, #57661	; 0xe13d
   154d0:	movt	r1, #1
   154d4:	movw	r3, #2022	; 0x7e6
   154d8:	ldr	lr, [fp, #-68]	; 0xffffffbc
   154dc:	str	r0, [fp, #-72]	; 0xffffffb8
   154e0:	mov	r0, lr
   154e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   154e8:	bl	10ff4 <fprintf@plt>
   154ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   154f0:	movw	r2, #56251	; 0xdbbb
   154f4:	movt	r2, #1
   154f8:	str	r0, [fp, #-76]	; 0xffffffb4
   154fc:	mov	r0, r2
   15500:	str	r2, [fp, #-80]	; 0xffffffb0
   15504:	bl	10e74 <fputs_unlocked@plt>
   15508:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1550c:	movw	r2, #56947	; 0xde73
   15510:	movt	r2, #1
   15514:	str	r0, [fp, #-84]	; 0xffffffac
   15518:	mov	r0, r2
   1551c:	str	r1, [fp, #-88]	; 0xffffffa8
   15520:	bl	10fd0 <gettext@plt>
   15524:	movw	r2, #57118	; 0xdf1e
   15528:	movt	r2, #1
   1552c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15530:	str	r0, [fp, #-92]	; 0xffffffa4
   15534:	mov	r0, r1
   15538:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1553c:	bl	10ff4 <fprintf@plt>
   15540:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15544:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15548:	str	r0, [fp, #-96]	; 0xffffffa0
   1554c:	mov	r0, r2
   15550:	bl	10e74 <fputs_unlocked@plt>
   15554:	ldr	r1, [fp, #12]
   15558:	cmp	r1, #9
   1555c:	str	r0, [fp, #-100]	; 0xffffff9c
   15560:	str	r1, [fp, #-104]	; 0xffffff98
   15564:	bhi	159a4 <__assert_fail@plt+0x48b4>
   15568:	add	r0, pc, #8
   1556c:	ldr	r1, [fp, #-104]	; 0xffffff98
   15570:	ldr	r0, [r0, r1, lsl #2]
   15574:	mov	pc, r0
   15578:	andeq	r5, r1, r0, lsr #11
   1557c:	andeq	r5, r1, r4, lsr #11
   15580:	andeq	r5, r1, r0, ror #11
   15584:	andeq	r5, r1, r4, lsr #12
   15588:	andeq	r5, r1, r0, lsl #13
   1558c:	andeq	r5, r1, r8, ror #13
   15590:	andeq	r5, r1, ip, asr r7
   15594:	ldrdeq	r5, [r1], -ip
   15598:	andeq	r5, r1, r8, ror #16
   1559c:	andeq	r5, r1, r0, lsl #18
   155a0:	b	15a44 <__assert_fail@plt+0x4954>
   155a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155a8:	movw	r1, #57152	; 0xdf40
   155ac:	movt	r1, #1
   155b0:	str	r0, [fp, #-108]	; 0xffffff94
   155b4:	mov	r0, r1
   155b8:	bl	10fd0 <gettext@plt>
   155bc:	ldr	r1, [fp, #8]
   155c0:	ldr	r2, [r1]
   155c4:	ldr	r1, [fp, #-108]	; 0xffffff94
   155c8:	str	r0, [fp, #-112]	; 0xffffff90
   155cc:	mov	r0, r1
   155d0:	ldr	r1, [fp, #-112]	; 0xffffff90
   155d4:	bl	10ff4 <fprintf@plt>
   155d8:	str	r0, [fp, #-116]	; 0xffffff8c
   155dc:	b	15a44 <__assert_fail@plt+0x4954>
   155e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155e4:	movw	r1, #57168	; 0xdf50
   155e8:	movt	r1, #1
   155ec:	str	r0, [fp, #-120]	; 0xffffff88
   155f0:	mov	r0, r1
   155f4:	bl	10fd0 <gettext@plt>
   155f8:	ldr	r1, [fp, #8]
   155fc:	ldr	r2, [r1]
   15600:	ldr	r1, [fp, #8]
   15604:	ldr	r3, [r1, #4]
   15608:	ldr	r1, [fp, #-120]	; 0xffffff88
   1560c:	str	r0, [fp, #-124]	; 0xffffff84
   15610:	mov	r0, r1
   15614:	ldr	r1, [fp, #-124]	; 0xffffff84
   15618:	bl	10ff4 <fprintf@plt>
   1561c:	str	r0, [fp, #-128]	; 0xffffff80
   15620:	b	15a44 <__assert_fail@plt+0x4954>
   15624:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15628:	movw	r1, #57191	; 0xdf67
   1562c:	movt	r1, #1
   15630:	str	r0, [fp, #-132]	; 0xffffff7c
   15634:	mov	r0, r1
   15638:	bl	10fd0 <gettext@plt>
   1563c:	ldr	r1, [fp, #8]
   15640:	ldr	r2, [r1]
   15644:	ldr	r1, [fp, #8]
   15648:	ldr	r3, [r1, #4]
   1564c:	ldr	r1, [fp, #8]
   15650:	ldr	r1, [r1, #8]
   15654:	ldr	lr, [fp, #-132]	; 0xffffff7c
   15658:	str	r0, [fp, #-136]	; 0xffffff78
   1565c:	mov	r0, lr
   15660:	ldr	ip, [fp, #-136]	; 0xffffff78
   15664:	str	r1, [fp, #-140]	; 0xffffff74
   15668:	mov	r1, ip
   1566c:	ldr	r4, [fp, #-140]	; 0xffffff74
   15670:	str	r4, [sp]
   15674:	bl	10ff4 <fprintf@plt>
   15678:	str	r0, [sp, #144]	; 0x90
   1567c:	b	15a44 <__assert_fail@plt+0x4954>
   15680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15684:	movw	r1, #57219	; 0xdf83
   15688:	movt	r1, #1
   1568c:	str	r0, [sp, #140]	; 0x8c
   15690:	mov	r0, r1
   15694:	bl	10fd0 <gettext@plt>
   15698:	ldr	r1, [fp, #8]
   1569c:	ldr	r2, [r1]
   156a0:	ldr	r1, [fp, #8]
   156a4:	ldr	r3, [r1, #4]
   156a8:	ldr	r1, [fp, #8]
   156ac:	ldr	r1, [r1, #8]
   156b0:	ldr	lr, [fp, #8]
   156b4:	ldr	lr, [lr, #12]
   156b8:	ldr	ip, [sp, #140]	; 0x8c
   156bc:	str	r0, [sp, #136]	; 0x88
   156c0:	mov	r0, ip
   156c4:	ldr	r4, [sp, #136]	; 0x88
   156c8:	str	r1, [sp, #132]	; 0x84
   156cc:	mov	r1, r4
   156d0:	ldr	r5, [sp, #132]	; 0x84
   156d4:	str	r5, [sp]
   156d8:	str	lr, [sp, #4]
   156dc:	bl	10ff4 <fprintf@plt>
   156e0:	str	r0, [sp, #128]	; 0x80
   156e4:	b	15a44 <__assert_fail@plt+0x4954>
   156e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156ec:	movw	r1, #57251	; 0xdfa3
   156f0:	movt	r1, #1
   156f4:	str	r0, [sp, #124]	; 0x7c
   156f8:	mov	r0, r1
   156fc:	bl	10fd0 <gettext@plt>
   15700:	ldr	r1, [fp, #8]
   15704:	ldr	r2, [r1]
   15708:	ldr	r1, [fp, #8]
   1570c:	ldr	r3, [r1, #4]
   15710:	ldr	r1, [fp, #8]
   15714:	ldr	r1, [r1, #8]
   15718:	ldr	lr, [fp, #8]
   1571c:	ldr	lr, [lr, #12]
   15720:	ldr	ip, [fp, #8]
   15724:	ldr	ip, [ip, #16]
   15728:	ldr	r4, [sp, #124]	; 0x7c
   1572c:	str	r0, [sp, #120]	; 0x78
   15730:	mov	r0, r4
   15734:	ldr	r5, [sp, #120]	; 0x78
   15738:	str	r1, [sp, #116]	; 0x74
   1573c:	mov	r1, r5
   15740:	ldr	r6, [sp, #116]	; 0x74
   15744:	str	r6, [sp]
   15748:	str	lr, [sp, #4]
   1574c:	str	ip, [sp, #8]
   15750:	bl	10ff4 <fprintf@plt>
   15754:	str	r0, [sp, #112]	; 0x70
   15758:	b	15a44 <__assert_fail@plt+0x4954>
   1575c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15760:	movw	r1, #57287	; 0xdfc7
   15764:	movt	r1, #1
   15768:	str	r0, [sp, #108]	; 0x6c
   1576c:	mov	r0, r1
   15770:	bl	10fd0 <gettext@plt>
   15774:	ldr	r1, [fp, #8]
   15778:	ldr	r2, [r1]
   1577c:	ldr	r1, [fp, #8]
   15780:	ldr	r3, [r1, #4]
   15784:	ldr	r1, [fp, #8]
   15788:	ldr	r1, [r1, #8]
   1578c:	ldr	lr, [fp, #8]
   15790:	ldr	lr, [lr, #12]
   15794:	ldr	ip, [fp, #8]
   15798:	ldr	ip, [ip, #16]
   1579c:	ldr	r4, [fp, #8]
   157a0:	ldr	r4, [r4, #20]
   157a4:	ldr	r5, [sp, #108]	; 0x6c
   157a8:	str	r0, [sp, #104]	; 0x68
   157ac:	mov	r0, r5
   157b0:	ldr	r6, [sp, #104]	; 0x68
   157b4:	str	r1, [sp, #100]	; 0x64
   157b8:	mov	r1, r6
   157bc:	ldr	r7, [sp, #100]	; 0x64
   157c0:	str	r7, [sp]
   157c4:	str	lr, [sp, #4]
   157c8:	str	ip, [sp, #8]
   157cc:	str	r4, [sp, #12]
   157d0:	bl	10ff4 <fprintf@plt>
   157d4:	str	r0, [sp, #96]	; 0x60
   157d8:	b	15a44 <__assert_fail@plt+0x4954>
   157dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157e0:	movw	r1, #57327	; 0xdfef
   157e4:	movt	r1, #1
   157e8:	str	r0, [sp, #92]	; 0x5c
   157ec:	mov	r0, r1
   157f0:	bl	10fd0 <gettext@plt>
   157f4:	ldr	r1, [fp, #8]
   157f8:	ldr	r2, [r1]
   157fc:	ldr	r1, [fp, #8]
   15800:	ldr	r3, [r1, #4]
   15804:	ldr	r1, [fp, #8]
   15808:	ldr	r1, [r1, #8]
   1580c:	ldr	lr, [fp, #8]
   15810:	ldr	lr, [lr, #12]
   15814:	ldr	ip, [fp, #8]
   15818:	ldr	ip, [ip, #16]
   1581c:	ldr	r4, [fp, #8]
   15820:	ldr	r4, [r4, #20]
   15824:	ldr	r5, [fp, #8]
   15828:	ldr	r5, [r5, #24]
   1582c:	ldr	r6, [sp, #92]	; 0x5c
   15830:	str	r0, [sp, #88]	; 0x58
   15834:	mov	r0, r6
   15838:	ldr	r7, [sp, #88]	; 0x58
   1583c:	str	r1, [sp, #84]	; 0x54
   15840:	mov	r1, r7
   15844:	ldr	r8, [sp, #84]	; 0x54
   15848:	str	r8, [sp]
   1584c:	str	lr, [sp, #4]
   15850:	str	ip, [sp, #8]
   15854:	str	r4, [sp, #12]
   15858:	str	r5, [sp, #16]
   1585c:	bl	10ff4 <fprintf@plt>
   15860:	str	r0, [sp, #80]	; 0x50
   15864:	b	15a44 <__assert_fail@plt+0x4954>
   15868:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1586c:	movw	r1, #57371	; 0xe01b
   15870:	movt	r1, #1
   15874:	str	r0, [sp, #76]	; 0x4c
   15878:	mov	r0, r1
   1587c:	bl	10fd0 <gettext@plt>
   15880:	ldr	r1, [fp, #8]
   15884:	ldr	r2, [r1]
   15888:	ldr	r1, [fp, #8]
   1588c:	ldr	r3, [r1, #4]
   15890:	ldr	r1, [fp, #8]
   15894:	ldr	r1, [r1, #8]
   15898:	ldr	lr, [fp, #8]
   1589c:	ldr	lr, [lr, #12]
   158a0:	ldr	ip, [fp, #8]
   158a4:	ldr	ip, [ip, #16]
   158a8:	ldr	r4, [fp, #8]
   158ac:	ldr	r4, [r4, #20]
   158b0:	ldr	r5, [fp, #8]
   158b4:	ldr	r5, [r5, #24]
   158b8:	ldr	r6, [fp, #8]
   158bc:	ldr	r6, [r6, #28]
   158c0:	ldr	r7, [sp, #76]	; 0x4c
   158c4:	str	r0, [sp, #72]	; 0x48
   158c8:	mov	r0, r7
   158cc:	ldr	r8, [sp, #72]	; 0x48
   158d0:	str	r1, [sp, #68]	; 0x44
   158d4:	mov	r1, r8
   158d8:	ldr	r9, [sp, #68]	; 0x44
   158dc:	str	r9, [sp]
   158e0:	str	lr, [sp, #4]
   158e4:	str	ip, [sp, #8]
   158e8:	str	r4, [sp, #12]
   158ec:	str	r5, [sp, #16]
   158f0:	str	r6, [sp, #20]
   158f4:	bl	10ff4 <fprintf@plt>
   158f8:	str	r0, [sp, #64]	; 0x40
   158fc:	b	15a44 <__assert_fail@plt+0x4954>
   15900:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15904:	movw	r1, #57419	; 0xe04b
   15908:	movt	r1, #1
   1590c:	str	r0, [sp, #60]	; 0x3c
   15910:	mov	r0, r1
   15914:	bl	10fd0 <gettext@plt>
   15918:	ldr	r1, [fp, #8]
   1591c:	ldr	r2, [r1]
   15920:	ldr	r1, [fp, #8]
   15924:	ldr	r3, [r1, #4]
   15928:	ldr	r1, [fp, #8]
   1592c:	ldr	r1, [r1, #8]
   15930:	ldr	lr, [fp, #8]
   15934:	ldr	lr, [lr, #12]
   15938:	ldr	ip, [fp, #8]
   1593c:	ldr	ip, [ip, #16]
   15940:	ldr	r4, [fp, #8]
   15944:	ldr	r4, [r4, #20]
   15948:	ldr	r5, [fp, #8]
   1594c:	ldr	r5, [r5, #24]
   15950:	ldr	r6, [fp, #8]
   15954:	ldr	r6, [r6, #28]
   15958:	ldr	r7, [fp, #8]
   1595c:	ldr	r7, [r7, #32]
   15960:	ldr	r8, [sp, #60]	; 0x3c
   15964:	str	r0, [sp, #56]	; 0x38
   15968:	mov	r0, r8
   1596c:	ldr	r9, [sp, #56]	; 0x38
   15970:	str	r1, [sp, #52]	; 0x34
   15974:	mov	r1, r9
   15978:	ldr	sl, [sp, #52]	; 0x34
   1597c:	str	sl, [sp]
   15980:	str	lr, [sp, #4]
   15984:	str	ip, [sp, #8]
   15988:	str	r4, [sp, #12]
   1598c:	str	r5, [sp, #16]
   15990:	str	r6, [sp, #20]
   15994:	str	r7, [sp, #24]
   15998:	bl	10ff4 <fprintf@plt>
   1599c:	str	r0, [sp, #48]	; 0x30
   159a0:	b	15a44 <__assert_fail@plt+0x4954>
   159a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159a8:	movw	r1, #57471	; 0xe07f
   159ac:	movt	r1, #1
   159b0:	str	r0, [sp, #44]	; 0x2c
   159b4:	mov	r0, r1
   159b8:	bl	10fd0 <gettext@plt>
   159bc:	ldr	r1, [fp, #8]
   159c0:	ldr	r2, [r1]
   159c4:	ldr	r1, [fp, #8]
   159c8:	ldr	r3, [r1, #4]
   159cc:	ldr	r1, [fp, #8]
   159d0:	ldr	r1, [r1, #8]
   159d4:	ldr	lr, [fp, #8]
   159d8:	ldr	lr, [lr, #12]
   159dc:	ldr	ip, [fp, #8]
   159e0:	ldr	ip, [ip, #16]
   159e4:	ldr	r4, [fp, #8]
   159e8:	ldr	r4, [r4, #20]
   159ec:	ldr	r5, [fp, #8]
   159f0:	ldr	r5, [r5, #24]
   159f4:	ldr	r6, [fp, #8]
   159f8:	ldr	r6, [r6, #28]
   159fc:	ldr	r7, [fp, #8]
   15a00:	ldr	r7, [r7, #32]
   15a04:	ldr	r8, [sp, #44]	; 0x2c
   15a08:	str	r0, [sp, #40]	; 0x28
   15a0c:	mov	r0, r8
   15a10:	ldr	r9, [sp, #40]	; 0x28
   15a14:	str	r1, [sp, #36]	; 0x24
   15a18:	mov	r1, r9
   15a1c:	ldr	sl, [sp, #36]	; 0x24
   15a20:	str	sl, [sp]
   15a24:	str	lr, [sp, #4]
   15a28:	str	ip, [sp, #8]
   15a2c:	str	r4, [sp, #12]
   15a30:	str	r5, [sp, #16]
   15a34:	str	r6, [sp, #20]
   15a38:	str	r7, [sp, #24]
   15a3c:	bl	10ff4 <fprintf@plt>
   15a40:	str	r0, [sp, #32]
   15a44:	sub	sp, fp, #28
   15a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a4c:	push	{fp, lr}
   15a50:	mov	fp, sp
   15a54:	sub	sp, sp, #32
   15a58:	ldr	ip, [fp, #8]
   15a5c:	str	r0, [fp, #-4]
   15a60:	str	r1, [fp, #-8]
   15a64:	str	r2, [fp, #-12]
   15a68:	str	r3, [sp, #16]
   15a6c:	movw	r0, #0
   15a70:	str	r0, [sp, #12]
   15a74:	str	ip, [sp, #8]
   15a78:	ldr	r0, [fp, #8]
   15a7c:	ldr	r1, [sp, #12]
   15a80:	add	r0, r0, r1, lsl #2
   15a84:	ldr	r0, [r0]
   15a88:	movw	r1, #0
   15a8c:	cmp	r0, r1
   15a90:	beq	15aa8 <__assert_fail@plt+0x49b8>
   15a94:	b	15a98 <__assert_fail@plt+0x49a8>
   15a98:	ldr	r0, [sp, #12]
   15a9c:	add	r0, r0, #1
   15aa0:	str	r0, [sp, #12]
   15aa4:	b	15a78 <__assert_fail@plt+0x4988>
   15aa8:	ldr	r0, [fp, #-4]
   15aac:	ldr	r1, [fp, #-8]
   15ab0:	ldr	r2, [fp, #-12]
   15ab4:	ldr	r3, [sp, #16]
   15ab8:	ldr	ip, [fp, #8]
   15abc:	ldr	lr, [sp, #12]
   15ac0:	str	ip, [sp]
   15ac4:	str	lr, [sp, #4]
   15ac8:	bl	15428 <__assert_fail@plt+0x4338>
   15acc:	mov	sp, fp
   15ad0:	pop	{fp, pc}
   15ad4:	push	{fp, lr}
   15ad8:	mov	fp, sp
   15adc:	sub	sp, sp, #80	; 0x50
   15ae0:	ldr	ip, [fp, #8]
   15ae4:	str	ip, [fp, #-4]
   15ae8:	str	r0, [fp, #-8]
   15aec:	str	r1, [fp, #-12]
   15af0:	str	r2, [fp, #-16]
   15af4:	str	r3, [fp, #-20]	; 0xffffffec
   15af8:	movw	r0, #0
   15afc:	str	r0, [fp, #-24]	; 0xffffffe8
   15b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b04:	cmp	r0, #10
   15b08:	movw	r0, #0
   15b0c:	str	r0, [sp, #12]
   15b10:	bcs	15b48 <__assert_fail@plt+0x4a58>
   15b14:	ldr	r0, [fp, #-4]
   15b18:	add	r1, r0, #4
   15b1c:	str	r1, [fp, #-4]
   15b20:	ldr	r0, [r0]
   15b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b28:	add	r2, sp, #16
   15b2c:	add	r1, r2, r1, lsl #2
   15b30:	str	r0, [r1]
   15b34:	movw	r1, #0
   15b38:	cmp	r0, r1
   15b3c:	movw	r0, #0
   15b40:	movne	r0, #1
   15b44:	str	r0, [sp, #12]
   15b48:	ldr	r0, [sp, #12]
   15b4c:	tst	r0, #1
   15b50:	beq	15b68 <__assert_fail@plt+0x4a78>
   15b54:	b	15b58 <__assert_fail@plt+0x4a68>
   15b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b5c:	add	r0, r0, #1
   15b60:	str	r0, [fp, #-24]	; 0xffffffe8
   15b64:	b	15b00 <__assert_fail@plt+0x4a10>
   15b68:	add	r0, sp, #16
   15b6c:	ldr	r1, [fp, #-8]
   15b70:	ldr	r2, [fp, #-12]
   15b74:	ldr	r3, [fp, #-16]
   15b78:	ldr	ip, [fp, #-20]	; 0xffffffec
   15b7c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15b80:	str	r0, [sp, #8]
   15b84:	mov	r0, r1
   15b88:	mov	r1, r2
   15b8c:	mov	r2, r3
   15b90:	mov	r3, ip
   15b94:	ldr	ip, [sp, #8]
   15b98:	str	ip, [sp]
   15b9c:	str	lr, [sp, #4]
   15ba0:	bl	15428 <__assert_fail@plt+0x4338>
   15ba4:	mov	sp, fp
   15ba8:	pop	{fp, pc}
   15bac:	push	{fp, lr}
   15bb0:	mov	fp, sp
   15bb4:	sub	sp, sp, #32
   15bb8:	str	r0, [fp, #-4]
   15bbc:	str	r1, [fp, #-8]
   15bc0:	str	r2, [fp, #-12]
   15bc4:	str	r3, [sp, #16]
   15bc8:	add	r0, fp, #8
   15bcc:	str	r0, [sp, #12]
   15bd0:	ldr	r0, [fp, #-4]
   15bd4:	ldr	r1, [fp, #-8]
   15bd8:	ldr	r2, [fp, #-12]
   15bdc:	ldr	r3, [sp, #16]
   15be0:	ldr	ip, [sp, #12]
   15be4:	mov	lr, sp
   15be8:	str	ip, [lr]
   15bec:	bl	15ad4 <__assert_fail@plt+0x49e4>
   15bf0:	add	r0, sp, #12
   15bf4:	str	r0, [sp, #8]
   15bf8:	mov	sp, fp
   15bfc:	pop	{fp, pc}
   15c00:	push	{fp, lr}
   15c04:	mov	fp, sp
   15c08:	sub	sp, sp, #16
   15c0c:	movw	r0, #61780	; 0xf154
   15c10:	movt	r0, #2
   15c14:	ldr	r1, [r0]
   15c18:	movw	r0, #56251	; 0xdbbb
   15c1c:	movt	r0, #1
   15c20:	bl	10e74 <fputs_unlocked@plt>
   15c24:	movw	r1, #57531	; 0xe0bb
   15c28:	movt	r1, #1
   15c2c:	str	r0, [fp, #-4]
   15c30:	mov	r0, r1
   15c34:	bl	10fd0 <gettext@plt>
   15c38:	movw	r1, #57551	; 0xe0cf
   15c3c:	movt	r1, #1
   15c40:	bl	10e98 <printf@plt>
   15c44:	movw	r1, #57573	; 0xe0e5
   15c48:	movt	r1, #1
   15c4c:	str	r0, [sp, #8]
   15c50:	mov	r0, r1
   15c54:	bl	10fd0 <gettext@plt>
   15c58:	movw	r1, #55732	; 0xd9b4
   15c5c:	movt	r1, #1
   15c60:	movw	r2, #56060	; 0xdafc
   15c64:	movt	r2, #1
   15c68:	bl	10e98 <printf@plt>
   15c6c:	movw	r1, #57593	; 0xe0f9
   15c70:	movt	r1, #1
   15c74:	str	r0, [sp, #4]
   15c78:	mov	r0, r1
   15c7c:	bl	10fd0 <gettext@plt>
   15c80:	movw	r1, #57632	; 0xe120
   15c84:	movt	r1, #1
   15c88:	bl	10e98 <printf@plt>
   15c8c:	str	r0, [sp]
   15c90:	mov	sp, fp
   15c94:	pop	{fp, pc}
   15c98:	push	{fp, lr}
   15c9c:	mov	fp, sp
   15ca0:	sub	sp, sp, #16
   15ca4:	str	r0, [fp, #-4]
   15ca8:	str	r1, [sp, #8]
   15cac:	str	r2, [sp, #4]
   15cb0:	ldr	r0, [fp, #-4]
   15cb4:	ldr	r1, [sp, #8]
   15cb8:	ldr	r2, [sp, #4]
   15cbc:	bl	15cc8 <__assert_fail@plt+0x4bd8>
   15cc0:	mov	sp, fp
   15cc4:	pop	{fp, pc}
   15cc8:	push	{fp, lr}
   15ccc:	mov	fp, sp
   15cd0:	sub	sp, sp, #16
   15cd4:	str	r0, [fp, #-4]
   15cd8:	str	r1, [sp, #8]
   15cdc:	str	r2, [sp, #4]
   15ce0:	ldr	r0, [fp, #-4]
   15ce4:	ldr	r1, [sp, #8]
   15ce8:	ldr	r2, [sp, #4]
   15cec:	bl	1bbfc <__assert_fail@plt+0xab0c>
   15cf0:	str	r0, [sp]
   15cf4:	ldr	r0, [sp]
   15cf8:	movw	r1, #0
   15cfc:	cmp	r0, r1
   15d00:	bne	15d30 <__assert_fail@plt+0x4c40>
   15d04:	ldr	r0, [fp, #-4]
   15d08:	movw	r1, #0
   15d0c:	cmp	r0, r1
   15d10:	beq	15d2c <__assert_fail@plt+0x4c3c>
   15d14:	ldr	r0, [sp, #8]
   15d18:	cmp	r0, #0
   15d1c:	beq	15d30 <__assert_fail@plt+0x4c40>
   15d20:	ldr	r0, [sp, #4]
   15d24:	cmp	r0, #0
   15d28:	beq	15d30 <__assert_fail@plt+0x4c40>
   15d2c:	bl	18b18 <__assert_fail@plt+0x7a28>
   15d30:	ldr	r0, [sp]
   15d34:	mov	sp, fp
   15d38:	pop	{fp, pc}
   15d3c:	push	{fp, lr}
   15d40:	mov	fp, sp
   15d44:	sub	sp, sp, #8
   15d48:	str	r0, [sp, #4]
   15d4c:	ldr	r0, [sp, #4]
   15d50:	bl	1ae50 <__assert_fail@plt+0x9d60>
   15d54:	bl	15d60 <__assert_fail@plt+0x4c70>
   15d58:	mov	sp, fp
   15d5c:	pop	{fp, pc}
   15d60:	push	{fp, lr}
   15d64:	mov	fp, sp
   15d68:	sub	sp, sp, #8
   15d6c:	str	r0, [sp, #4]
   15d70:	ldr	r0, [sp, #4]
   15d74:	movw	r1, #0
   15d78:	cmp	r0, r1
   15d7c:	bne	15d84 <__assert_fail@plt+0x4c94>
   15d80:	bl	18b18 <__assert_fail@plt+0x7a28>
   15d84:	ldr	r0, [sp, #4]
   15d88:	mov	sp, fp
   15d8c:	pop	{fp, pc}
   15d90:	push	{fp, lr}
   15d94:	mov	fp, sp
   15d98:	sub	sp, sp, #8
   15d9c:	str	r0, [sp, #4]
   15da0:	ldr	r0, [sp, #4]
   15da4:	bl	1b938 <__assert_fail@plt+0xa848>
   15da8:	bl	15d60 <__assert_fail@plt+0x4c70>
   15dac:	mov	sp, fp
   15db0:	pop	{fp, pc}
   15db4:	push	{fp, lr}
   15db8:	mov	fp, sp
   15dbc:	sub	sp, sp, #8
   15dc0:	str	r0, [sp, #4]
   15dc4:	ldr	r0, [sp, #4]
   15dc8:	bl	15d3c <__assert_fail@plt+0x4c4c>
   15dcc:	mov	sp, fp
   15dd0:	pop	{fp, pc}
   15dd4:	push	{fp, lr}
   15dd8:	mov	fp, sp
   15ddc:	sub	sp, sp, #16
   15de0:	str	r0, [fp, #-4]
   15de4:	str	r1, [sp, #8]
   15de8:	ldr	r0, [fp, #-4]
   15dec:	ldr	r1, [sp, #8]
   15df0:	bl	1aec0 <__assert_fail@plt+0x9dd0>
   15df4:	str	r0, [sp, #4]
   15df8:	ldr	r0, [sp, #4]
   15dfc:	movw	r1, #0
   15e00:	cmp	r0, r1
   15e04:	bne	15e28 <__assert_fail@plt+0x4d38>
   15e08:	ldr	r0, [fp, #-4]
   15e0c:	movw	r1, #0
   15e10:	cmp	r0, r1
   15e14:	beq	15e24 <__assert_fail@plt+0x4d34>
   15e18:	ldr	r0, [sp, #8]
   15e1c:	cmp	r0, #0
   15e20:	beq	15e28 <__assert_fail@plt+0x4d38>
   15e24:	bl	18b18 <__assert_fail@plt+0x7a28>
   15e28:	ldr	r0, [sp, #4]
   15e2c:	mov	sp, fp
   15e30:	pop	{fp, pc}
   15e34:	push	{fp, lr}
   15e38:	mov	fp, sp
   15e3c:	sub	sp, sp, #8
   15e40:	str	r0, [sp, #4]
   15e44:	str	r1, [sp]
   15e48:	ldr	r0, [sp, #4]
   15e4c:	ldr	r1, [sp]
   15e50:	bl	1b978 <__assert_fail@plt+0xa888>
   15e54:	bl	15d60 <__assert_fail@plt+0x4c70>
   15e58:	mov	sp, fp
   15e5c:	pop	{fp, pc}
   15e60:	push	{fp, lr}
   15e64:	mov	fp, sp
   15e68:	sub	sp, sp, #16
   15e6c:	str	r0, [fp, #-4]
   15e70:	str	r1, [sp, #8]
   15e74:	str	r2, [sp, #4]
   15e78:	ldr	r0, [fp, #-4]
   15e7c:	ldr	r1, [sp, #8]
   15e80:	ldr	r2, [sp, #4]
   15e84:	bl	1ba70 <__assert_fail@plt+0xa980>
   15e88:	bl	15d60 <__assert_fail@plt+0x4c70>
   15e8c:	mov	sp, fp
   15e90:	pop	{fp, pc}
   15e94:	push	{fp, lr}
   15e98:	mov	fp, sp
   15e9c:	sub	sp, sp, #8
   15ea0:	str	r0, [sp, #4]
   15ea4:	str	r1, [sp]
   15ea8:	ldr	r1, [sp, #4]
   15eac:	ldr	r2, [sp]
   15eb0:	movw	r0, #0
   15eb4:	bl	15cc8 <__assert_fail@plt+0x4bd8>
   15eb8:	mov	sp, fp
   15ebc:	pop	{fp, pc}
   15ec0:	push	{fp, lr}
   15ec4:	mov	fp, sp
   15ec8:	sub	sp, sp, #8
   15ecc:	str	r0, [sp, #4]
   15ed0:	str	r1, [sp]
   15ed4:	ldr	r1, [sp, #4]
   15ed8:	ldr	r2, [sp]
   15edc:	movw	r0, #0
   15ee0:	bl	15e60 <__assert_fail@plt+0x4d70>
   15ee4:	mov	sp, fp
   15ee8:	pop	{fp, pc}
   15eec:	push	{fp, lr}
   15ef0:	mov	fp, sp
   15ef4:	sub	sp, sp, #8
   15ef8:	str	r0, [sp, #4]
   15efc:	str	r1, [sp]
   15f00:	ldr	r0, [sp, #4]
   15f04:	ldr	r1, [sp]
   15f08:	movw	r2, #1
   15f0c:	bl	15f18 <__assert_fail@plt+0x4e28>
   15f10:	mov	sp, fp
   15f14:	pop	{fp, pc}
   15f18:	push	{fp, lr}
   15f1c:	mov	fp, sp
   15f20:	sub	sp, sp, #16
   15f24:	str	r0, [fp, #-4]
   15f28:	str	r1, [sp, #8]
   15f2c:	str	r2, [sp, #4]
   15f30:	ldr	r0, [sp, #8]
   15f34:	ldr	r0, [r0]
   15f38:	str	r0, [sp]
   15f3c:	ldr	r0, [fp, #-4]
   15f40:	movw	r1, #0
   15f44:	cmp	r0, r1
   15f48:	bne	15f94 <__assert_fail@plt+0x4ea4>
   15f4c:	ldr	r0, [sp]
   15f50:	cmp	r0, #0
   15f54:	bne	15f90 <__assert_fail@plt+0x4ea0>
   15f58:	ldr	r0, [sp, #4]
   15f5c:	movw	r1, #64	; 0x40
   15f60:	udiv	r0, r1, r0
   15f64:	str	r0, [sp]
   15f68:	ldr	r0, [sp]
   15f6c:	cmp	r0, #0
   15f70:	movw	r0, #0
   15f74:	movne	r0, #1
   15f78:	mvn	r1, #0
   15f7c:	eor	r0, r0, r1
   15f80:	and	r0, r0, #1
   15f84:	ldr	r1, [sp]
   15f88:	add	r0, r1, r0
   15f8c:	str	r0, [sp]
   15f90:	b	15fc4 <__assert_fail@plt+0x4ed4>
   15f94:	ldr	r0, [sp]
   15f98:	ldr	r1, [sp]
   15f9c:	lsr	r1, r1, #1
   15fa0:	add	r1, r1, #1
   15fa4:	adds	r0, r0, r1
   15fa8:	mov	r1, #0
   15fac:	adc	r1, r1, #0
   15fb0:	str	r0, [sp]
   15fb4:	tst	r1, #1
   15fb8:	beq	15fc0 <__assert_fail@plt+0x4ed0>
   15fbc:	bl	18b18 <__assert_fail@plt+0x7a28>
   15fc0:	b	15fc4 <__assert_fail@plt+0x4ed4>
   15fc4:	ldr	r0, [fp, #-4]
   15fc8:	ldr	r1, [sp]
   15fcc:	ldr	r2, [sp, #4]
   15fd0:	bl	15cc8 <__assert_fail@plt+0x4bd8>
   15fd4:	str	r0, [fp, #-4]
   15fd8:	ldr	r0, [sp]
   15fdc:	ldr	r1, [sp, #8]
   15fe0:	str	r0, [r1]
   15fe4:	ldr	r0, [fp, #-4]
   15fe8:	mov	sp, fp
   15fec:	pop	{fp, pc}
   15ff0:	push	{fp, lr}
   15ff4:	mov	fp, sp
   15ff8:	sub	sp, sp, #376	; 0x178
   15ffc:	ldr	ip, [fp, #8]
   16000:	str	r0, [fp, #-4]
   16004:	str	r1, [fp, #-8]
   16008:	str	r2, [fp, #-12]
   1600c:	str	r3, [fp, #-16]
   16010:	ldr	r0, [fp, #-8]
   16014:	ldr	r0, [r0]
   16018:	str	r0, [fp, #-20]	; 0xffffffec
   1601c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16020:	ldr	r1, [fp, #-20]	; 0xffffffec
   16024:	asr	r1, r1, #1
   16028:	add	r1, r0, r1
   1602c:	mov	r2, #1
   16030:	cmp	r1, r0
   16034:	movwvc	r2, #0
   16038:	str	r1, [fp, #-24]	; 0xffffffe8
   1603c:	tst	r2, #1
   16040:	str	ip, [fp, #-36]	; 0xffffffdc
   16044:	beq	16050 <__assert_fail@plt+0x4f60>
   16048:	ldr	r0, [pc, #4044]	; 1701c <__assert_fail@plt+0x5f2c>
   1604c:	str	r0, [fp, #-24]	; 0xffffffe8
   16050:	ldr	r0, [fp, #-16]
   16054:	movw	r1, #0
   16058:	cmp	r1, r0
   1605c:	bgt	16078 <__assert_fail@plt+0x4f88>
   16060:	ldr	r0, [fp, #-16]
   16064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16068:	cmp	r0, r1
   1606c:	bge	16078 <__assert_fail@plt+0x4f88>
   16070:	ldr	r0, [fp, #-16]
   16074:	str	r0, [fp, #-24]	; 0xffffffe8
   16078:	b	16450 <__assert_fail@plt+0x5360>
   1607c:	b	16080 <__assert_fail@plt+0x4f90>
   16080:	ldr	r0, [fp, #8]
   16084:	cmp	r0, #0
   16088:	bge	1619c <__assert_fail@plt+0x50ac>
   1608c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16090:	cmp	r0, #0
   16094:	bge	16120 <__assert_fail@plt+0x5030>
   16098:	b	1609c <__assert_fail@plt+0x4fac>
   1609c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160a0:	ldr	r1, [fp, #8]
   160a4:	movw	r2, #127	; 0x7f
   160a8:	sdiv	r1, r2, r1
   160ac:	cmp	r0, r1
   160b0:	blt	1623c <__assert_fail@plt+0x514c>
   160b4:	b	16254 <__assert_fail@plt+0x5164>
   160b8:	b	160bc <__assert_fail@plt+0x4fcc>
   160bc:	ldr	r0, [pc, #4076]	; 170b0 <__assert_fail@plt+0x5fc0>
   160c0:	ldr	r1, [fp, #8]
   160c4:	cmp	r1, r0
   160c8:	blt	160e0 <__assert_fail@plt+0x4ff0>
   160cc:	b	160ec <__assert_fail@plt+0x4ffc>
   160d0:	ldr	r0, [fp, #8]
   160d4:	movw	r1, #0
   160d8:	cmp	r1, r0
   160dc:	bge	160ec <__assert_fail@plt+0x4ffc>
   160e0:	movw	r0, #0
   160e4:	str	r0, [fp, #-40]	; 0xffffffd8
   160e8:	b	16104 <__assert_fail@plt+0x5014>
   160ec:	ldr	r0, [fp, #8]
   160f0:	movw	r1, #0
   160f4:	sub	r0, r1, r0
   160f8:	movw	r1, #127	; 0x7f
   160fc:	sdiv	r0, r1, r0
   16100:	str	r0, [fp, #-40]	; 0xffffffd8
   16104:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1610c:	mvn	r2, #0
   16110:	sub	r1, r2, r1
   16114:	cmp	r0, r1
   16118:	ble	1623c <__assert_fail@plt+0x514c>
   1611c:	b	16254 <__assert_fail@plt+0x5164>
   16120:	b	16124 <__assert_fail@plt+0x5034>
   16124:	b	16180 <__assert_fail@plt+0x5090>
   16128:	b	16180 <__assert_fail@plt+0x5090>
   1612c:	ldr	r0, [fp, #8]
   16130:	cmn	r0, #1
   16134:	bne	16180 <__assert_fail@plt+0x5090>
   16138:	b	1613c <__assert_fail@plt+0x504c>
   1613c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16140:	mvn	r1, #127	; 0x7f
   16144:	add	r0, r0, r1
   16148:	movw	r1, #0
   1614c:	cmp	r1, r0
   16150:	blt	1623c <__assert_fail@plt+0x514c>
   16154:	b	16254 <__assert_fail@plt+0x5164>
   16158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1615c:	movw	r1, #0
   16160:	cmp	r1, r0
   16164:	bge	16254 <__assert_fail@plt+0x5164>
   16168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1616c:	sub	r0, r0, #1
   16170:	movw	r1, #127	; 0x7f
   16174:	cmp	r1, r0
   16178:	blt	1623c <__assert_fail@plt+0x514c>
   1617c:	b	16254 <__assert_fail@plt+0x5164>
   16180:	ldr	r0, [fp, #8]
   16184:	mvn	r1, #127	; 0x7f
   16188:	sdiv	r0, r1, r0
   1618c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16190:	cmp	r0, r1
   16194:	blt	1623c <__assert_fail@plt+0x514c>
   16198:	b	16254 <__assert_fail@plt+0x5164>
   1619c:	ldr	r0, [fp, #8]
   161a0:	cmp	r0, #0
   161a4:	bne	161ac <__assert_fail@plt+0x50bc>
   161a8:	b	16254 <__assert_fail@plt+0x5164>
   161ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161b0:	cmp	r0, #0
   161b4:	bge	16224 <__assert_fail@plt+0x5134>
   161b8:	b	161bc <__assert_fail@plt+0x50cc>
   161bc:	b	16208 <__assert_fail@plt+0x5118>
   161c0:	b	16208 <__assert_fail@plt+0x5118>
   161c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161c8:	cmn	r0, #1
   161cc:	bne	16208 <__assert_fail@plt+0x5118>
   161d0:	b	161d4 <__assert_fail@plt+0x50e4>
   161d4:	ldr	r0, [fp, #8]
   161d8:	mvn	r1, #127	; 0x7f
   161dc:	add	r0, r0, r1
   161e0:	movw	r1, #0
   161e4:	cmp	r1, r0
   161e8:	blt	1623c <__assert_fail@plt+0x514c>
   161ec:	b	16254 <__assert_fail@plt+0x5164>
   161f0:	ldr	r0, [fp, #8]
   161f4:	sub	r0, r0, #1
   161f8:	movw	r1, #127	; 0x7f
   161fc:	cmp	r1, r0
   16200:	blt	1623c <__assert_fail@plt+0x514c>
   16204:	b	16254 <__assert_fail@plt+0x5164>
   16208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1620c:	mvn	r1, #127	; 0x7f
   16210:	sdiv	r0, r1, r0
   16214:	ldr	r1, [fp, #8]
   16218:	cmp	r0, r1
   1621c:	blt	1623c <__assert_fail@plt+0x514c>
   16220:	b	16254 <__assert_fail@plt+0x5164>
   16224:	ldr	r0, [fp, #8]
   16228:	movw	r1, #127	; 0x7f
   1622c:	sdiv	r0, r1, r0
   16230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16234:	cmp	r0, r1
   16238:	bge	16254 <__assert_fail@plt+0x5164>
   1623c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16240:	ldr	r1, [fp, #8]
   16244:	mul	r0, r0, r1
   16248:	sxtb	r0, r0
   1624c:	str	r0, [fp, #-28]	; 0xffffffe4
   16250:	b	17468 <__assert_fail@plt+0x6378>
   16254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16258:	ldr	r1, [fp, #8]
   1625c:	mul	r0, r0, r1
   16260:	sxtb	r0, r0
   16264:	str	r0, [fp, #-28]	; 0xffffffe4
   16268:	b	17478 <__assert_fail@plt+0x6388>
   1626c:	ldr	r0, [fp, #8]
   16270:	cmp	r0, #0
   16274:	bge	16384 <__assert_fail@plt+0x5294>
   16278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1627c:	cmp	r0, #0
   16280:	bge	1630c <__assert_fail@plt+0x521c>
   16284:	b	16288 <__assert_fail@plt+0x5198>
   16288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1628c:	ldr	r1, [fp, #8]
   16290:	movw	r2, #255	; 0xff
   16294:	sdiv	r1, r2, r1
   16298:	cmp	r0, r1
   1629c:	blt	16420 <__assert_fail@plt+0x5330>
   162a0:	b	16438 <__assert_fail@plt+0x5348>
   162a4:	b	162a8 <__assert_fail@plt+0x51b8>
   162a8:	ldr	r0, [pc, #3584]	; 170b0 <__assert_fail@plt+0x5fc0>
   162ac:	ldr	r1, [fp, #8]
   162b0:	cmp	r1, r0
   162b4:	blt	162cc <__assert_fail@plt+0x51dc>
   162b8:	b	162d8 <__assert_fail@plt+0x51e8>
   162bc:	ldr	r0, [fp, #8]
   162c0:	movw	r1, #0
   162c4:	cmp	r1, r0
   162c8:	bge	162d8 <__assert_fail@plt+0x51e8>
   162cc:	movw	r0, #0
   162d0:	str	r0, [fp, #-44]	; 0xffffffd4
   162d4:	b	162f0 <__assert_fail@plt+0x5200>
   162d8:	ldr	r0, [fp, #8]
   162dc:	movw	r1, #0
   162e0:	sub	r0, r1, r0
   162e4:	movw	r1, #255	; 0xff
   162e8:	sdiv	r0, r1, r0
   162ec:	str	r0, [fp, #-44]	; 0xffffffd4
   162f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162f8:	mvn	r2, #0
   162fc:	sub	r1, r2, r1
   16300:	cmp	r0, r1
   16304:	ble	16420 <__assert_fail@plt+0x5330>
   16308:	b	16438 <__assert_fail@plt+0x5348>
   1630c:	b	16310 <__assert_fail@plt+0x5220>
   16310:	b	16368 <__assert_fail@plt+0x5278>
   16314:	b	16368 <__assert_fail@plt+0x5278>
   16318:	ldr	r0, [fp, #8]
   1631c:	cmn	r0, #1
   16320:	bne	16368 <__assert_fail@plt+0x5278>
   16324:	b	16328 <__assert_fail@plt+0x5238>
   16328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1632c:	add	r0, r0, #0
   16330:	movw	r1, #0
   16334:	cmp	r1, r0
   16338:	blt	16420 <__assert_fail@plt+0x5330>
   1633c:	b	16438 <__assert_fail@plt+0x5348>
   16340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16344:	movw	r1, #0
   16348:	cmp	r1, r0
   1634c:	bge	16438 <__assert_fail@plt+0x5348>
   16350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16354:	sub	r0, r0, #1
   16358:	mvn	r1, #0
   1635c:	cmp	r1, r0
   16360:	blt	16420 <__assert_fail@plt+0x5330>
   16364:	b	16438 <__assert_fail@plt+0x5348>
   16368:	ldr	r0, [fp, #8]
   1636c:	movw	r1, #0
   16370:	sdiv	r0, r1, r0
   16374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16378:	cmp	r0, r1
   1637c:	blt	16420 <__assert_fail@plt+0x5330>
   16380:	b	16438 <__assert_fail@plt+0x5348>
   16384:	ldr	r0, [fp, #8]
   16388:	cmp	r0, #0
   1638c:	bne	16394 <__assert_fail@plt+0x52a4>
   16390:	b	16438 <__assert_fail@plt+0x5348>
   16394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16398:	cmp	r0, #0
   1639c:	bge	16408 <__assert_fail@plt+0x5318>
   163a0:	b	163a4 <__assert_fail@plt+0x52b4>
   163a4:	b	163ec <__assert_fail@plt+0x52fc>
   163a8:	b	163ec <__assert_fail@plt+0x52fc>
   163ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b0:	cmn	r0, #1
   163b4:	bne	163ec <__assert_fail@plt+0x52fc>
   163b8:	b	163bc <__assert_fail@plt+0x52cc>
   163bc:	ldr	r0, [fp, #8]
   163c0:	add	r0, r0, #0
   163c4:	movw	r1, #0
   163c8:	cmp	r1, r0
   163cc:	blt	16420 <__assert_fail@plt+0x5330>
   163d0:	b	16438 <__assert_fail@plt+0x5348>
   163d4:	ldr	r0, [fp, #8]
   163d8:	sub	r0, r0, #1
   163dc:	mvn	r1, #0
   163e0:	cmp	r1, r0
   163e4:	blt	16420 <__assert_fail@plt+0x5330>
   163e8:	b	16438 <__assert_fail@plt+0x5348>
   163ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163f0:	movw	r1, #0
   163f4:	sdiv	r0, r1, r0
   163f8:	ldr	r1, [fp, #8]
   163fc:	cmp	r0, r1
   16400:	blt	16420 <__assert_fail@plt+0x5330>
   16404:	b	16438 <__assert_fail@plt+0x5348>
   16408:	ldr	r0, [fp, #8]
   1640c:	movw	r1, #255	; 0xff
   16410:	sdiv	r0, r1, r0
   16414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16418:	cmp	r0, r1
   1641c:	bge	16438 <__assert_fail@plt+0x5348>
   16420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16424:	ldr	r1, [fp, #8]
   16428:	mul	r0, r0, r1
   1642c:	and	r0, r0, #255	; 0xff
   16430:	str	r0, [fp, #-28]	; 0xffffffe4
   16434:	b	17468 <__assert_fail@plt+0x6378>
   16438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1643c:	ldr	r1, [fp, #8]
   16440:	mul	r0, r0, r1
   16444:	and	r0, r0, #255	; 0xff
   16448:	str	r0, [fp, #-28]	; 0xffffffe4
   1644c:	b	17478 <__assert_fail@plt+0x6388>
   16450:	b	16828 <__assert_fail@plt+0x5738>
   16454:	b	16458 <__assert_fail@plt+0x5368>
   16458:	ldr	r0, [fp, #8]
   1645c:	cmp	r0, #0
   16460:	bge	16574 <__assert_fail@plt+0x5484>
   16464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16468:	cmp	r0, #0
   1646c:	bge	164f8 <__assert_fail@plt+0x5408>
   16470:	b	16474 <__assert_fail@plt+0x5384>
   16474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16478:	ldr	r1, [fp, #8]
   1647c:	movw	r2, #32767	; 0x7fff
   16480:	sdiv	r1, r2, r1
   16484:	cmp	r0, r1
   16488:	blt	16614 <__assert_fail@plt+0x5524>
   1648c:	b	1662c <__assert_fail@plt+0x553c>
   16490:	b	16494 <__assert_fail@plt+0x53a4>
   16494:	ldr	r0, [pc, #3092]	; 170b0 <__assert_fail@plt+0x5fc0>
   16498:	ldr	r1, [fp, #8]
   1649c:	cmp	r1, r0
   164a0:	blt	164b8 <__assert_fail@plt+0x53c8>
   164a4:	b	164c4 <__assert_fail@plt+0x53d4>
   164a8:	ldr	r0, [fp, #8]
   164ac:	movw	r1, #0
   164b0:	cmp	r1, r0
   164b4:	bge	164c4 <__assert_fail@plt+0x53d4>
   164b8:	movw	r0, #0
   164bc:	str	r0, [fp, #-48]	; 0xffffffd0
   164c0:	b	164dc <__assert_fail@plt+0x53ec>
   164c4:	ldr	r0, [fp, #8]
   164c8:	movw	r1, #0
   164cc:	sub	r0, r1, r0
   164d0:	movw	r1, #32767	; 0x7fff
   164d4:	sdiv	r0, r1, r0
   164d8:	str	r0, [fp, #-48]	; 0xffffffd0
   164dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   164e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164e4:	mvn	r2, #0
   164e8:	sub	r1, r2, r1
   164ec:	cmp	r0, r1
   164f0:	ble	16614 <__assert_fail@plt+0x5524>
   164f4:	b	1662c <__assert_fail@plt+0x553c>
   164f8:	b	164fc <__assert_fail@plt+0x540c>
   164fc:	b	16558 <__assert_fail@plt+0x5468>
   16500:	b	16558 <__assert_fail@plt+0x5468>
   16504:	ldr	r0, [fp, #8]
   16508:	cmn	r0, #1
   1650c:	bne	16558 <__assert_fail@plt+0x5468>
   16510:	b	16514 <__assert_fail@plt+0x5424>
   16514:	ldr	r0, [pc, #3928]	; 17474 <__assert_fail@plt+0x6384>
   16518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1651c:	add	r0, r1, r0
   16520:	movw	r1, #0
   16524:	cmp	r1, r0
   16528:	blt	16614 <__assert_fail@plt+0x5524>
   1652c:	b	1662c <__assert_fail@plt+0x553c>
   16530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16534:	movw	r1, #0
   16538:	cmp	r1, r0
   1653c:	bge	1662c <__assert_fail@plt+0x553c>
   16540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16544:	sub	r0, r0, #1
   16548:	movw	r1, #32767	; 0x7fff
   1654c:	cmp	r1, r0
   16550:	blt	16614 <__assert_fail@plt+0x5524>
   16554:	b	1662c <__assert_fail@plt+0x553c>
   16558:	ldr	r0, [pc, #3860]	; 17474 <__assert_fail@plt+0x6384>
   1655c:	ldr	r1, [fp, #8]
   16560:	sdiv	r0, r0, r1
   16564:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16568:	cmp	r0, r1
   1656c:	blt	16614 <__assert_fail@plt+0x5524>
   16570:	b	1662c <__assert_fail@plt+0x553c>
   16574:	ldr	r0, [fp, #8]
   16578:	cmp	r0, #0
   1657c:	bne	16584 <__assert_fail@plt+0x5494>
   16580:	b	1662c <__assert_fail@plt+0x553c>
   16584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16588:	cmp	r0, #0
   1658c:	bge	165fc <__assert_fail@plt+0x550c>
   16590:	b	16594 <__assert_fail@plt+0x54a4>
   16594:	b	165e0 <__assert_fail@plt+0x54f0>
   16598:	b	165e0 <__assert_fail@plt+0x54f0>
   1659c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165a0:	cmn	r0, #1
   165a4:	bne	165e0 <__assert_fail@plt+0x54f0>
   165a8:	b	165ac <__assert_fail@plt+0x54bc>
   165ac:	ldr	r0, [pc, #3776]	; 17474 <__assert_fail@plt+0x6384>
   165b0:	ldr	r1, [fp, #8]
   165b4:	add	r0, r1, r0
   165b8:	movw	r1, #0
   165bc:	cmp	r1, r0
   165c0:	blt	16614 <__assert_fail@plt+0x5524>
   165c4:	b	1662c <__assert_fail@plt+0x553c>
   165c8:	ldr	r0, [fp, #8]
   165cc:	sub	r0, r0, #1
   165d0:	movw	r1, #32767	; 0x7fff
   165d4:	cmp	r1, r0
   165d8:	blt	16614 <__assert_fail@plt+0x5524>
   165dc:	b	1662c <__assert_fail@plt+0x553c>
   165e0:	ldr	r0, [pc, #3724]	; 17474 <__assert_fail@plt+0x6384>
   165e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165e8:	sdiv	r0, r0, r1
   165ec:	ldr	r1, [fp, #8]
   165f0:	cmp	r0, r1
   165f4:	blt	16614 <__assert_fail@plt+0x5524>
   165f8:	b	1662c <__assert_fail@plt+0x553c>
   165fc:	ldr	r0, [fp, #8]
   16600:	movw	r1, #32767	; 0x7fff
   16604:	sdiv	r0, r1, r0
   16608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1660c:	cmp	r0, r1
   16610:	bge	1662c <__assert_fail@plt+0x553c>
   16614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16618:	ldr	r1, [fp, #8]
   1661c:	mul	r0, r0, r1
   16620:	sxth	r0, r0
   16624:	str	r0, [fp, #-28]	; 0xffffffe4
   16628:	b	17468 <__assert_fail@plt+0x6378>
   1662c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16630:	ldr	r1, [fp, #8]
   16634:	mul	r0, r0, r1
   16638:	sxth	r0, r0
   1663c:	str	r0, [fp, #-28]	; 0xffffffe4
   16640:	b	17478 <__assert_fail@plt+0x6388>
   16644:	ldr	r0, [fp, #8]
   16648:	cmp	r0, #0
   1664c:	bge	1675c <__assert_fail@plt+0x566c>
   16650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16654:	cmp	r0, #0
   16658:	bge	166e4 <__assert_fail@plt+0x55f4>
   1665c:	b	16660 <__assert_fail@plt+0x5570>
   16660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16664:	ldr	r1, [fp, #8]
   16668:	movw	r2, #65535	; 0xffff
   1666c:	sdiv	r1, r2, r1
   16670:	cmp	r0, r1
   16674:	blt	167f8 <__assert_fail@plt+0x5708>
   16678:	b	16810 <__assert_fail@plt+0x5720>
   1667c:	b	16680 <__assert_fail@plt+0x5590>
   16680:	ldr	r0, [pc, #2600]	; 170b0 <__assert_fail@plt+0x5fc0>
   16684:	ldr	r1, [fp, #8]
   16688:	cmp	r1, r0
   1668c:	blt	166a4 <__assert_fail@plt+0x55b4>
   16690:	b	166b0 <__assert_fail@plt+0x55c0>
   16694:	ldr	r0, [fp, #8]
   16698:	movw	r1, #0
   1669c:	cmp	r1, r0
   166a0:	bge	166b0 <__assert_fail@plt+0x55c0>
   166a4:	movw	r0, #0
   166a8:	str	r0, [fp, #-52]	; 0xffffffcc
   166ac:	b	166c8 <__assert_fail@plt+0x55d8>
   166b0:	ldr	r0, [fp, #8]
   166b4:	movw	r1, #0
   166b8:	sub	r0, r1, r0
   166bc:	movw	r1, #65535	; 0xffff
   166c0:	sdiv	r0, r1, r0
   166c4:	str	r0, [fp, #-52]	; 0xffffffcc
   166c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   166cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166d0:	mvn	r2, #0
   166d4:	sub	r1, r2, r1
   166d8:	cmp	r0, r1
   166dc:	ble	167f8 <__assert_fail@plt+0x5708>
   166e0:	b	16810 <__assert_fail@plt+0x5720>
   166e4:	b	166e8 <__assert_fail@plt+0x55f8>
   166e8:	b	16740 <__assert_fail@plt+0x5650>
   166ec:	b	16740 <__assert_fail@plt+0x5650>
   166f0:	ldr	r0, [fp, #8]
   166f4:	cmn	r0, #1
   166f8:	bne	16740 <__assert_fail@plt+0x5650>
   166fc:	b	16700 <__assert_fail@plt+0x5610>
   16700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16704:	add	r0, r0, #0
   16708:	movw	r1, #0
   1670c:	cmp	r1, r0
   16710:	blt	167f8 <__assert_fail@plt+0x5708>
   16714:	b	16810 <__assert_fail@plt+0x5720>
   16718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1671c:	movw	r1, #0
   16720:	cmp	r1, r0
   16724:	bge	16810 <__assert_fail@plt+0x5720>
   16728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1672c:	sub	r0, r0, #1
   16730:	mvn	r1, #0
   16734:	cmp	r1, r0
   16738:	blt	167f8 <__assert_fail@plt+0x5708>
   1673c:	b	16810 <__assert_fail@plt+0x5720>
   16740:	ldr	r0, [fp, #8]
   16744:	movw	r1, #0
   16748:	sdiv	r0, r1, r0
   1674c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16750:	cmp	r0, r1
   16754:	blt	167f8 <__assert_fail@plt+0x5708>
   16758:	b	16810 <__assert_fail@plt+0x5720>
   1675c:	ldr	r0, [fp, #8]
   16760:	cmp	r0, #0
   16764:	bne	1676c <__assert_fail@plt+0x567c>
   16768:	b	16810 <__assert_fail@plt+0x5720>
   1676c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16770:	cmp	r0, #0
   16774:	bge	167e0 <__assert_fail@plt+0x56f0>
   16778:	b	1677c <__assert_fail@plt+0x568c>
   1677c:	b	167c4 <__assert_fail@plt+0x56d4>
   16780:	b	167c4 <__assert_fail@plt+0x56d4>
   16784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16788:	cmn	r0, #1
   1678c:	bne	167c4 <__assert_fail@plt+0x56d4>
   16790:	b	16794 <__assert_fail@plt+0x56a4>
   16794:	ldr	r0, [fp, #8]
   16798:	add	r0, r0, #0
   1679c:	movw	r1, #0
   167a0:	cmp	r1, r0
   167a4:	blt	167f8 <__assert_fail@plt+0x5708>
   167a8:	b	16810 <__assert_fail@plt+0x5720>
   167ac:	ldr	r0, [fp, #8]
   167b0:	sub	r0, r0, #1
   167b4:	mvn	r1, #0
   167b8:	cmp	r1, r0
   167bc:	blt	167f8 <__assert_fail@plt+0x5708>
   167c0:	b	16810 <__assert_fail@plt+0x5720>
   167c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167c8:	movw	r1, #0
   167cc:	sdiv	r0, r1, r0
   167d0:	ldr	r1, [fp, #8]
   167d4:	cmp	r0, r1
   167d8:	blt	167f8 <__assert_fail@plt+0x5708>
   167dc:	b	16810 <__assert_fail@plt+0x5720>
   167e0:	ldr	r0, [fp, #8]
   167e4:	movw	r1, #65535	; 0xffff
   167e8:	sdiv	r0, r1, r0
   167ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167f0:	cmp	r0, r1
   167f4:	bge	16810 <__assert_fail@plt+0x5720>
   167f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167fc:	ldr	r1, [fp, #8]
   16800:	mul	r0, r0, r1
   16804:	uxth	r0, r0
   16808:	str	r0, [fp, #-28]	; 0xffffffe4
   1680c:	b	17468 <__assert_fail@plt+0x6378>
   16810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16814:	ldr	r1, [fp, #8]
   16818:	mul	r0, r0, r1
   1681c:	uxth	r0, r0
   16820:	str	r0, [fp, #-28]	; 0xffffffe4
   16824:	b	17478 <__assert_fail@plt+0x6388>
   16828:	b	1682c <__assert_fail@plt+0x573c>
   1682c:	b	16830 <__assert_fail@plt+0x5740>
   16830:	ldr	r0, [fp, #8]
   16834:	cmp	r0, #0
   16838:	bge	1693c <__assert_fail@plt+0x584c>
   1683c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16840:	cmp	r0, #0
   16844:	bge	168d0 <__assert_fail@plt+0x57e0>
   16848:	b	1684c <__assert_fail@plt+0x575c>
   1684c:	ldr	r0, [pc, #1992]	; 1701c <__assert_fail@plt+0x5f2c>
   16850:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16854:	ldr	r2, [fp, #8]
   16858:	sdiv	r0, r0, r2
   1685c:	cmp	r1, r0
   16860:	blt	169cc <__assert_fail@plt+0x58dc>
   16864:	b	169e0 <__assert_fail@plt+0x58f0>
   16868:	b	1686c <__assert_fail@plt+0x577c>
   1686c:	ldr	r0, [pc, #2108]	; 170b0 <__assert_fail@plt+0x5fc0>
   16870:	ldr	r1, [fp, #8]
   16874:	cmp	r1, r0
   16878:	blt	16890 <__assert_fail@plt+0x57a0>
   1687c:	b	1689c <__assert_fail@plt+0x57ac>
   16880:	ldr	r0, [fp, #8]
   16884:	movw	r1, #0
   16888:	cmp	r1, r0
   1688c:	bge	1689c <__assert_fail@plt+0x57ac>
   16890:	movw	r0, #0
   16894:	str	r0, [fp, #-56]	; 0xffffffc8
   16898:	b	168b4 <__assert_fail@plt+0x57c4>
   1689c:	ldr	r0, [pc, #1912]	; 1701c <__assert_fail@plt+0x5f2c>
   168a0:	ldr	r1, [fp, #8]
   168a4:	movw	r2, #0
   168a8:	sub	r1, r2, r1
   168ac:	sdiv	r0, r0, r1
   168b0:	str	r0, [fp, #-56]	; 0xffffffc8
   168b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   168b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168bc:	mvn	r2, #0
   168c0:	sub	r1, r2, r1
   168c4:	cmp	r0, r1
   168c8:	ble	169cc <__assert_fail@plt+0x58dc>
   168cc:	b	169e0 <__assert_fail@plt+0x58f0>
   168d0:	ldr	r0, [fp, #8]
   168d4:	cmn	r0, #1
   168d8:	bne	16920 <__assert_fail@plt+0x5830>
   168dc:	b	168e0 <__assert_fail@plt+0x57f0>
   168e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168e4:	add	r0, r0, #-2147483648	; 0x80000000
   168e8:	movw	r1, #0
   168ec:	cmp	r1, r0
   168f0:	blt	169cc <__assert_fail@plt+0x58dc>
   168f4:	b	169e0 <__assert_fail@plt+0x58f0>
   168f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168fc:	movw	r1, #0
   16900:	cmp	r1, r0
   16904:	bge	169e0 <__assert_fail@plt+0x58f0>
   16908:	ldr	r0, [pc, #1804]	; 1701c <__assert_fail@plt+0x5f2c>
   1690c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16910:	sub	r1, r1, #1
   16914:	cmp	r0, r1
   16918:	blt	169cc <__assert_fail@plt+0x58dc>
   1691c:	b	169e0 <__assert_fail@plt+0x58f0>
   16920:	ldr	r0, [pc, #4072]	; 17910 <__assert_fail@plt+0x6820>
   16924:	ldr	r1, [fp, #8]
   16928:	sdiv	r0, r0, r1
   1692c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16930:	cmp	r0, r1
   16934:	blt	169cc <__assert_fail@plt+0x58dc>
   16938:	b	169e0 <__assert_fail@plt+0x58f0>
   1693c:	ldr	r0, [fp, #8]
   16940:	cmp	r0, #0
   16944:	bne	1694c <__assert_fail@plt+0x585c>
   16948:	b	169e0 <__assert_fail@plt+0x58f0>
   1694c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16950:	cmp	r0, #0
   16954:	bge	169b4 <__assert_fail@plt+0x58c4>
   16958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1695c:	cmn	r0, #1
   16960:	bne	16998 <__assert_fail@plt+0x58a8>
   16964:	b	16968 <__assert_fail@plt+0x5878>
   16968:	ldr	r0, [fp, #8]
   1696c:	add	r0, r0, #-2147483648	; 0x80000000
   16970:	movw	r1, #0
   16974:	cmp	r1, r0
   16978:	blt	169cc <__assert_fail@plt+0x58dc>
   1697c:	b	169e0 <__assert_fail@plt+0x58f0>
   16980:	ldr	r0, [pc, #1684]	; 1701c <__assert_fail@plt+0x5f2c>
   16984:	ldr	r1, [fp, #8]
   16988:	sub	r1, r1, #1
   1698c:	cmp	r0, r1
   16990:	blt	169cc <__assert_fail@plt+0x58dc>
   16994:	b	169e0 <__assert_fail@plt+0x58f0>
   16998:	ldr	r0, [pc, #3952]	; 17910 <__assert_fail@plt+0x6820>
   1699c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169a0:	sdiv	r0, r0, r1
   169a4:	ldr	r1, [fp, #8]
   169a8:	cmp	r0, r1
   169ac:	blt	169cc <__assert_fail@plt+0x58dc>
   169b0:	b	169e0 <__assert_fail@plt+0x58f0>
   169b4:	ldr	r0, [pc, #1632]	; 1701c <__assert_fail@plt+0x5f2c>
   169b8:	ldr	r1, [fp, #8]
   169bc:	sdiv	r0, r0, r1
   169c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169c4:	cmp	r0, r1
   169c8:	bge	169e0 <__assert_fail@plt+0x58f0>
   169cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169d0:	ldr	r1, [fp, #8]
   169d4:	mul	r0, r0, r1
   169d8:	str	r0, [fp, #-28]	; 0xffffffe4
   169dc:	b	17468 <__assert_fail@plt+0x6378>
   169e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169e4:	ldr	r1, [fp, #8]
   169e8:	mul	r0, r0, r1
   169ec:	str	r0, [fp, #-28]	; 0xffffffe4
   169f0:	b	17478 <__assert_fail@plt+0x6388>
   169f4:	ldr	r0, [fp, #8]
   169f8:	cmp	r0, #0
   169fc:	bge	16b0c <__assert_fail@plt+0x5a1c>
   16a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a04:	cmp	r0, #0
   16a08:	bge	16a94 <__assert_fail@plt+0x59a4>
   16a0c:	b	16a2c <__assert_fail@plt+0x593c>
   16a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a14:	ldr	r1, [fp, #8]
   16a18:	mvn	r2, #0
   16a1c:	udiv	r1, r2, r1
   16a20:	cmp	r0, r1
   16a24:	bcc	16ba8 <__assert_fail@plt+0x5ab8>
   16a28:	b	16bbc <__assert_fail@plt+0x5acc>
   16a2c:	b	16a30 <__assert_fail@plt+0x5940>
   16a30:	ldr	r0, [pc, #1656]	; 170b0 <__assert_fail@plt+0x5fc0>
   16a34:	ldr	r1, [fp, #8]
   16a38:	cmp	r1, r0
   16a3c:	blt	16a54 <__assert_fail@plt+0x5964>
   16a40:	b	16a60 <__assert_fail@plt+0x5970>
   16a44:	ldr	r0, [fp, #8]
   16a48:	movw	r1, #0
   16a4c:	cmp	r1, r0
   16a50:	bge	16a60 <__assert_fail@plt+0x5970>
   16a54:	movw	r0, #1
   16a58:	str	r0, [fp, #-60]	; 0xffffffc4
   16a5c:	b	16a78 <__assert_fail@plt+0x5988>
   16a60:	ldr	r0, [fp, #8]
   16a64:	movw	r1, #0
   16a68:	sub	r0, r1, r0
   16a6c:	mvn	r1, #0
   16a70:	udiv	r0, r1, r0
   16a74:	str	r0, [fp, #-60]	; 0xffffffc4
   16a78:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a80:	mvn	r2, #0
   16a84:	sub	r1, r2, r1
   16a88:	cmp	r0, r1
   16a8c:	bls	16ba8 <__assert_fail@plt+0x5ab8>
   16a90:	b	16bbc <__assert_fail@plt+0x5acc>
   16a94:	b	16a98 <__assert_fail@plt+0x59a8>
   16a98:	b	16af0 <__assert_fail@plt+0x5a00>
   16a9c:	b	16af0 <__assert_fail@plt+0x5a00>
   16aa0:	ldr	r0, [fp, #8]
   16aa4:	cmn	r0, #1
   16aa8:	bne	16af0 <__assert_fail@plt+0x5a00>
   16aac:	b	16ab0 <__assert_fail@plt+0x59c0>
   16ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab4:	add	r0, r0, #0
   16ab8:	movw	r1, #0
   16abc:	cmp	r1, r0
   16ac0:	blt	16ba8 <__assert_fail@plt+0x5ab8>
   16ac4:	b	16bbc <__assert_fail@plt+0x5acc>
   16ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16acc:	movw	r1, #0
   16ad0:	cmp	r1, r0
   16ad4:	bge	16bbc <__assert_fail@plt+0x5acc>
   16ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16adc:	sub	r0, r0, #1
   16ae0:	mvn	r1, #0
   16ae4:	cmp	r1, r0
   16ae8:	blt	16ba8 <__assert_fail@plt+0x5ab8>
   16aec:	b	16bbc <__assert_fail@plt+0x5acc>
   16af0:	ldr	r0, [fp, #8]
   16af4:	movw	r1, #0
   16af8:	sdiv	r0, r1, r0
   16afc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b00:	cmp	r0, r1
   16b04:	blt	16ba8 <__assert_fail@plt+0x5ab8>
   16b08:	b	16bbc <__assert_fail@plt+0x5acc>
   16b0c:	ldr	r0, [fp, #8]
   16b10:	cmp	r0, #0
   16b14:	bne	16b1c <__assert_fail@plt+0x5a2c>
   16b18:	b	16bbc <__assert_fail@plt+0x5acc>
   16b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b20:	cmp	r0, #0
   16b24:	bge	16b90 <__assert_fail@plt+0x5aa0>
   16b28:	b	16b2c <__assert_fail@plt+0x5a3c>
   16b2c:	b	16b74 <__assert_fail@plt+0x5a84>
   16b30:	b	16b74 <__assert_fail@plt+0x5a84>
   16b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b38:	cmn	r0, #1
   16b3c:	bne	16b74 <__assert_fail@plt+0x5a84>
   16b40:	b	16b44 <__assert_fail@plt+0x5a54>
   16b44:	ldr	r0, [fp, #8]
   16b48:	add	r0, r0, #0
   16b4c:	movw	r1, #0
   16b50:	cmp	r1, r0
   16b54:	blt	16ba8 <__assert_fail@plt+0x5ab8>
   16b58:	b	16bbc <__assert_fail@plt+0x5acc>
   16b5c:	ldr	r0, [fp, #8]
   16b60:	sub	r0, r0, #1
   16b64:	mvn	r1, #0
   16b68:	cmp	r1, r0
   16b6c:	blt	16ba8 <__assert_fail@plt+0x5ab8>
   16b70:	b	16bbc <__assert_fail@plt+0x5acc>
   16b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b78:	movw	r1, #0
   16b7c:	sdiv	r0, r1, r0
   16b80:	ldr	r1, [fp, #8]
   16b84:	cmp	r0, r1
   16b88:	blt	16ba8 <__assert_fail@plt+0x5ab8>
   16b8c:	b	16bbc <__assert_fail@plt+0x5acc>
   16b90:	ldr	r0, [fp, #8]
   16b94:	mvn	r1, #0
   16b98:	udiv	r0, r1, r0
   16b9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ba0:	cmp	r0, r1
   16ba4:	bcs	16bbc <__assert_fail@plt+0x5acc>
   16ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bac:	ldr	r1, [fp, #8]
   16bb0:	mul	r0, r0, r1
   16bb4:	str	r0, [fp, #-28]	; 0xffffffe4
   16bb8:	b	17468 <__assert_fail@plt+0x6378>
   16bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc0:	ldr	r1, [fp, #8]
   16bc4:	mul	r0, r0, r1
   16bc8:	str	r0, [fp, #-28]	; 0xffffffe4
   16bcc:	b	17478 <__assert_fail@plt+0x6388>
   16bd0:	b	16bd4 <__assert_fail@plt+0x5ae4>
   16bd4:	b	16bd8 <__assert_fail@plt+0x5ae8>
   16bd8:	ldr	r0, [fp, #8]
   16bdc:	cmp	r0, #0
   16be0:	bge	16ce4 <__assert_fail@plt+0x5bf4>
   16be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16be8:	cmp	r0, #0
   16bec:	bge	16c78 <__assert_fail@plt+0x5b88>
   16bf0:	b	16bf4 <__assert_fail@plt+0x5b04>
   16bf4:	ldr	r0, [pc, #1056]	; 1701c <__assert_fail@plt+0x5f2c>
   16bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bfc:	ldr	r2, [fp, #8]
   16c00:	sdiv	r0, r0, r2
   16c04:	cmp	r1, r0
   16c08:	blt	16d74 <__assert_fail@plt+0x5c84>
   16c0c:	b	16d88 <__assert_fail@plt+0x5c98>
   16c10:	b	16c14 <__assert_fail@plt+0x5b24>
   16c14:	ldr	r0, [pc, #1172]	; 170b0 <__assert_fail@plt+0x5fc0>
   16c18:	ldr	r1, [fp, #8]
   16c1c:	cmp	r1, r0
   16c20:	blt	16c38 <__assert_fail@plt+0x5b48>
   16c24:	b	16c44 <__assert_fail@plt+0x5b54>
   16c28:	ldr	r0, [fp, #8]
   16c2c:	movw	r1, #0
   16c30:	cmp	r1, r0
   16c34:	bge	16c44 <__assert_fail@plt+0x5b54>
   16c38:	movw	r0, #0
   16c3c:	str	r0, [fp, #-64]	; 0xffffffc0
   16c40:	b	16c5c <__assert_fail@plt+0x5b6c>
   16c44:	ldr	r0, [pc, #976]	; 1701c <__assert_fail@plt+0x5f2c>
   16c48:	ldr	r1, [fp, #8]
   16c4c:	movw	r2, #0
   16c50:	sub	r1, r2, r1
   16c54:	sdiv	r0, r0, r1
   16c58:	str	r0, [fp, #-64]	; 0xffffffc0
   16c5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16c60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c64:	mvn	r2, #0
   16c68:	sub	r1, r2, r1
   16c6c:	cmp	r0, r1
   16c70:	ble	16d74 <__assert_fail@plt+0x5c84>
   16c74:	b	16d88 <__assert_fail@plt+0x5c98>
   16c78:	ldr	r0, [fp, #8]
   16c7c:	cmn	r0, #1
   16c80:	bne	16cc8 <__assert_fail@plt+0x5bd8>
   16c84:	b	16c88 <__assert_fail@plt+0x5b98>
   16c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c8c:	add	r0, r0, #-2147483648	; 0x80000000
   16c90:	movw	r1, #0
   16c94:	cmp	r1, r0
   16c98:	blt	16d74 <__assert_fail@plt+0x5c84>
   16c9c:	b	16d88 <__assert_fail@plt+0x5c98>
   16ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ca4:	movw	r1, #0
   16ca8:	cmp	r1, r0
   16cac:	bge	16d88 <__assert_fail@plt+0x5c98>
   16cb0:	ldr	r0, [pc, #868]	; 1701c <__assert_fail@plt+0x5f2c>
   16cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cb8:	sub	r1, r1, #1
   16cbc:	cmp	r0, r1
   16cc0:	blt	16d74 <__assert_fail@plt+0x5c84>
   16cc4:	b	16d88 <__assert_fail@plt+0x5c98>
   16cc8:	ldr	r0, [pc, #3136]	; 17910 <__assert_fail@plt+0x6820>
   16ccc:	ldr	r1, [fp, #8]
   16cd0:	sdiv	r0, r0, r1
   16cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cd8:	cmp	r0, r1
   16cdc:	blt	16d74 <__assert_fail@plt+0x5c84>
   16ce0:	b	16d88 <__assert_fail@plt+0x5c98>
   16ce4:	ldr	r0, [fp, #8]
   16ce8:	cmp	r0, #0
   16cec:	bne	16cf4 <__assert_fail@plt+0x5c04>
   16cf0:	b	16d88 <__assert_fail@plt+0x5c98>
   16cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf8:	cmp	r0, #0
   16cfc:	bge	16d5c <__assert_fail@plt+0x5c6c>
   16d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d04:	cmn	r0, #1
   16d08:	bne	16d40 <__assert_fail@plt+0x5c50>
   16d0c:	b	16d10 <__assert_fail@plt+0x5c20>
   16d10:	ldr	r0, [fp, #8]
   16d14:	add	r0, r0, #-2147483648	; 0x80000000
   16d18:	movw	r1, #0
   16d1c:	cmp	r1, r0
   16d20:	blt	16d74 <__assert_fail@plt+0x5c84>
   16d24:	b	16d88 <__assert_fail@plt+0x5c98>
   16d28:	ldr	r0, [pc, #748]	; 1701c <__assert_fail@plt+0x5f2c>
   16d2c:	ldr	r1, [fp, #8]
   16d30:	sub	r1, r1, #1
   16d34:	cmp	r0, r1
   16d38:	blt	16d74 <__assert_fail@plt+0x5c84>
   16d3c:	b	16d88 <__assert_fail@plt+0x5c98>
   16d40:	ldr	r0, [pc, #3016]	; 17910 <__assert_fail@plt+0x6820>
   16d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d48:	sdiv	r0, r0, r1
   16d4c:	ldr	r1, [fp, #8]
   16d50:	cmp	r0, r1
   16d54:	blt	16d74 <__assert_fail@plt+0x5c84>
   16d58:	b	16d88 <__assert_fail@plt+0x5c98>
   16d5c:	ldr	r0, [pc, #696]	; 1701c <__assert_fail@plt+0x5f2c>
   16d60:	ldr	r1, [fp, #8]
   16d64:	sdiv	r0, r0, r1
   16d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d6c:	cmp	r0, r1
   16d70:	bge	16d88 <__assert_fail@plt+0x5c98>
   16d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d78:	ldr	r1, [fp, #8]
   16d7c:	mul	r0, r0, r1
   16d80:	str	r0, [fp, #-28]	; 0xffffffe4
   16d84:	b	17468 <__assert_fail@plt+0x6378>
   16d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d8c:	ldr	r1, [fp, #8]
   16d90:	mul	r0, r0, r1
   16d94:	str	r0, [fp, #-28]	; 0xffffffe4
   16d98:	b	17478 <__assert_fail@plt+0x6388>
   16d9c:	ldr	r0, [fp, #8]
   16da0:	cmp	r0, #0
   16da4:	bge	16eb4 <__assert_fail@plt+0x5dc4>
   16da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dac:	cmp	r0, #0
   16db0:	bge	16e3c <__assert_fail@plt+0x5d4c>
   16db4:	b	16dd4 <__assert_fail@plt+0x5ce4>
   16db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dbc:	ldr	r1, [fp, #8]
   16dc0:	mvn	r2, #0
   16dc4:	udiv	r1, r2, r1
   16dc8:	cmp	r0, r1
   16dcc:	bcc	16f50 <__assert_fail@plt+0x5e60>
   16dd0:	b	16f64 <__assert_fail@plt+0x5e74>
   16dd4:	b	16dd8 <__assert_fail@plt+0x5ce8>
   16dd8:	ldr	r0, [pc, #720]	; 170b0 <__assert_fail@plt+0x5fc0>
   16ddc:	ldr	r1, [fp, #8]
   16de0:	cmp	r1, r0
   16de4:	blt	16dfc <__assert_fail@plt+0x5d0c>
   16de8:	b	16e08 <__assert_fail@plt+0x5d18>
   16dec:	ldr	r0, [fp, #8]
   16df0:	movw	r1, #0
   16df4:	cmp	r1, r0
   16df8:	bge	16e08 <__assert_fail@plt+0x5d18>
   16dfc:	movw	r0, #1
   16e00:	str	r0, [fp, #-68]	; 0xffffffbc
   16e04:	b	16e20 <__assert_fail@plt+0x5d30>
   16e08:	ldr	r0, [fp, #8]
   16e0c:	movw	r1, #0
   16e10:	sub	r0, r1, r0
   16e14:	mvn	r1, #0
   16e18:	udiv	r0, r1, r0
   16e1c:	str	r0, [fp, #-68]	; 0xffffffbc
   16e20:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e28:	mvn	r2, #0
   16e2c:	sub	r1, r2, r1
   16e30:	cmp	r0, r1
   16e34:	bls	16f50 <__assert_fail@plt+0x5e60>
   16e38:	b	16f64 <__assert_fail@plt+0x5e74>
   16e3c:	b	16e40 <__assert_fail@plt+0x5d50>
   16e40:	b	16e98 <__assert_fail@plt+0x5da8>
   16e44:	b	16e98 <__assert_fail@plt+0x5da8>
   16e48:	ldr	r0, [fp, #8]
   16e4c:	cmn	r0, #1
   16e50:	bne	16e98 <__assert_fail@plt+0x5da8>
   16e54:	b	16e58 <__assert_fail@plt+0x5d68>
   16e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e5c:	add	r0, r0, #0
   16e60:	movw	r1, #0
   16e64:	cmp	r1, r0
   16e68:	blt	16f50 <__assert_fail@plt+0x5e60>
   16e6c:	b	16f64 <__assert_fail@plt+0x5e74>
   16e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e74:	movw	r1, #0
   16e78:	cmp	r1, r0
   16e7c:	bge	16f64 <__assert_fail@plt+0x5e74>
   16e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e84:	sub	r0, r0, #1
   16e88:	mvn	r1, #0
   16e8c:	cmp	r1, r0
   16e90:	blt	16f50 <__assert_fail@plt+0x5e60>
   16e94:	b	16f64 <__assert_fail@plt+0x5e74>
   16e98:	ldr	r0, [fp, #8]
   16e9c:	movw	r1, #0
   16ea0:	sdiv	r0, r1, r0
   16ea4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ea8:	cmp	r0, r1
   16eac:	blt	16f50 <__assert_fail@plt+0x5e60>
   16eb0:	b	16f64 <__assert_fail@plt+0x5e74>
   16eb4:	ldr	r0, [fp, #8]
   16eb8:	cmp	r0, #0
   16ebc:	bne	16ec4 <__assert_fail@plt+0x5dd4>
   16ec0:	b	16f64 <__assert_fail@plt+0x5e74>
   16ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ec8:	cmp	r0, #0
   16ecc:	bge	16f38 <__assert_fail@plt+0x5e48>
   16ed0:	b	16ed4 <__assert_fail@plt+0x5de4>
   16ed4:	b	16f1c <__assert_fail@plt+0x5e2c>
   16ed8:	b	16f1c <__assert_fail@plt+0x5e2c>
   16edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ee0:	cmn	r0, #1
   16ee4:	bne	16f1c <__assert_fail@plt+0x5e2c>
   16ee8:	b	16eec <__assert_fail@plt+0x5dfc>
   16eec:	ldr	r0, [fp, #8]
   16ef0:	add	r0, r0, #0
   16ef4:	movw	r1, #0
   16ef8:	cmp	r1, r0
   16efc:	blt	16f50 <__assert_fail@plt+0x5e60>
   16f00:	b	16f64 <__assert_fail@plt+0x5e74>
   16f04:	ldr	r0, [fp, #8]
   16f08:	sub	r0, r0, #1
   16f0c:	mvn	r1, #0
   16f10:	cmp	r1, r0
   16f14:	blt	16f50 <__assert_fail@plt+0x5e60>
   16f18:	b	16f64 <__assert_fail@plt+0x5e74>
   16f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f20:	movw	r1, #0
   16f24:	sdiv	r0, r1, r0
   16f28:	ldr	r1, [fp, #8]
   16f2c:	cmp	r0, r1
   16f30:	blt	16f50 <__assert_fail@plt+0x5e60>
   16f34:	b	16f64 <__assert_fail@plt+0x5e74>
   16f38:	ldr	r0, [fp, #8]
   16f3c:	mvn	r1, #0
   16f40:	udiv	r0, r1, r0
   16f44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f48:	cmp	r0, r1
   16f4c:	bcs	16f64 <__assert_fail@plt+0x5e74>
   16f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f54:	ldr	r1, [fp, #8]
   16f58:	mul	r0, r0, r1
   16f5c:	str	r0, [fp, #-28]	; 0xffffffe4
   16f60:	b	17468 <__assert_fail@plt+0x6378>
   16f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f68:	ldr	r1, [fp, #8]
   16f6c:	mul	r0, r0, r1
   16f70:	str	r0, [fp, #-28]	; 0xffffffe4
   16f74:	b	17478 <__assert_fail@plt+0x6388>
   16f78:	b	16f7c <__assert_fail@plt+0x5e8c>
   16f7c:	ldr	r0, [fp, #8]
   16f80:	cmp	r0, #0
   16f84:	bge	17114 <__assert_fail@plt+0x6024>
   16f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f8c:	cmp	r0, #0
   16f90:	bge	1707c <__assert_fail@plt+0x5f8c>
   16f94:	b	16f98 <__assert_fail@plt+0x5ea8>
   16f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f9c:	ldr	r1, [fp, #8]
   16fa0:	asr	r3, r1, #31
   16fa4:	mvn	r2, #0
   16fa8:	mvn	ip, #-2147483648	; 0x80000000
   16fac:	str	r0, [fp, #-72]	; 0xffffffb8
   16fb0:	mov	r0, r2
   16fb4:	str	r1, [fp, #-76]	; 0xffffffb4
   16fb8:	mov	r1, ip
   16fbc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16fc0:	bl	1d184 <__assert_fail@plt+0xc094>
   16fc4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16fc8:	subs	r0, r2, r0
   16fcc:	rscs	r1, r1, r2, asr #31
   16fd0:	str	r0, [fp, #-80]	; 0xffffffb0
   16fd4:	str	r1, [fp, #-84]	; 0xffffffac
   16fd8:	blt	171f4 <__assert_fail@plt+0x6104>
   16fdc:	b	17208 <__assert_fail@plt+0x6118>
   16fe0:	b	16fe4 <__assert_fail@plt+0x5ef4>
   16fe4:	ldr	r0, [pc, #196]	; 170b0 <__assert_fail@plt+0x5fc0>
   16fe8:	ldr	r1, [fp, #8]
   16fec:	cmp	r1, r0
   16ff0:	blt	17008 <__assert_fail@plt+0x5f18>
   16ff4:	b	17020 <__assert_fail@plt+0x5f30>
   16ff8:	ldr	r0, [fp, #8]
   16ffc:	movw	r1, #0
   17000:	cmp	r1, r0
   17004:	bge	17020 <__assert_fail@plt+0x5f30>
   17008:	mov	r0, #0
   1700c:	mvn	r1, #0
   17010:	str	r1, [fp, #-88]	; 0xffffffa8
   17014:	str	r0, [fp, #-92]	; 0xffffffa4
   17018:	b	17054 <__assert_fail@plt+0x5f64>
   1701c:	svcvc	0x00ffffff
   17020:	ldr	r0, [fp, #8]
   17024:	rsb	r0, r0, #0
   17028:	asr	r3, r0, #31
   1702c:	mvn	r1, #0
   17030:	mvn	r2, #-2147483648	; 0x80000000
   17034:	str	r0, [fp, #-96]	; 0xffffffa0
   17038:	mov	r0, r1
   1703c:	mov	r1, r2
   17040:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17044:	bl	1d184 <__assert_fail@plt+0xc094>
   17048:	str	r0, [fp, #-88]	; 0xffffffa8
   1704c:	str	r1, [fp, #-92]	; 0xffffffa4
   17050:	b	17054 <__assert_fail@plt+0x5f64>
   17054:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17058:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1705c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17060:	mvn	r2, r2
   17064:	subs	r1, r2, r1
   17068:	rscs	r0, r0, r2, asr #31
   1706c:	str	r1, [fp, #-100]	; 0xffffff9c
   17070:	str	r0, [fp, #-104]	; 0xffffff98
   17074:	bge	171f4 <__assert_fail@plt+0x6104>
   17078:	b	17208 <__assert_fail@plt+0x6118>
   1707c:	ldr	r0, [fp, #8]
   17080:	cmn	r0, #1
   17084:	bne	170d4 <__assert_fail@plt+0x5fe4>
   17088:	b	1708c <__assert_fail@plt+0x5f9c>
   1708c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17090:	mov	r1, #-2147483648	; 0x80000000
   17094:	add	r1, r1, r0, asr #31
   17098:	rsbs	r0, r0, #0
   1709c:	rscs	r1, r1, #0
   170a0:	str	r0, [fp, #-108]	; 0xffffff94
   170a4:	str	r1, [fp, #-112]	; 0xffffff90
   170a8:	blt	171f4 <__assert_fail@plt+0x6104>
   170ac:	b	17208 <__assert_fail@plt+0x6118>
   170b0:	andhi	r0, r0, r1
   170b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170b8:	movw	r1, #0
   170bc:	cmp	r1, r0
   170c0:	bge	17208 <__assert_fail@plt+0x6118>
   170c4:	mov	r0, #0
   170c8:	cmp	r0, #0
   170cc:	bne	171f4 <__assert_fail@plt+0x6104>
   170d0:	b	17208 <__assert_fail@plt+0x6118>
   170d4:	ldr	r0, [fp, #8]
   170d8:	asr	r3, r0, #31
   170dc:	mov	r1, #0
   170e0:	mov	r2, #-2147483648	; 0x80000000
   170e4:	str	r0, [fp, #-116]	; 0xffffff8c
   170e8:	mov	r0, r1
   170ec:	mov	r1, r2
   170f0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   170f4:	bl	1d184 <__assert_fail@plt+0xc094>
   170f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170fc:	subs	r0, r0, r2
   17100:	sbcs	r1, r1, r2, asr #31
   17104:	str	r0, [fp, #-120]	; 0xffffff88
   17108:	str	r1, [fp, #-124]	; 0xffffff84
   1710c:	blt	171f4 <__assert_fail@plt+0x6104>
   17110:	b	17208 <__assert_fail@plt+0x6118>
   17114:	ldr	r0, [fp, #8]
   17118:	cmp	r0, #0
   1711c:	bne	17124 <__assert_fail@plt+0x6034>
   17120:	b	17208 <__assert_fail@plt+0x6118>
   17124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17128:	cmp	r0, #0
   1712c:	bge	171b4 <__assert_fail@plt+0x60c4>
   17130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17134:	cmn	r0, #1
   17138:	bne	17174 <__assert_fail@plt+0x6084>
   1713c:	b	17140 <__assert_fail@plt+0x6050>
   17140:	ldr	r0, [fp, #8]
   17144:	mov	r1, #-2147483648	; 0x80000000
   17148:	add	r1, r1, r0, asr #31
   1714c:	rsbs	r0, r0, #0
   17150:	rscs	r1, r1, #0
   17154:	str	r0, [fp, #-128]	; 0xffffff80
   17158:	str	r1, [fp, #-132]	; 0xffffff7c
   1715c:	blt	171f4 <__assert_fail@plt+0x6104>
   17160:	b	17208 <__assert_fail@plt+0x6118>
   17164:	mov	r0, #0
   17168:	cmp	r0, #0
   1716c:	bne	171f4 <__assert_fail@plt+0x6104>
   17170:	b	17208 <__assert_fail@plt+0x6118>
   17174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17178:	asr	r3, r0, #31
   1717c:	mov	r1, #0
   17180:	mov	r2, #-2147483648	; 0x80000000
   17184:	str	r0, [fp, #-136]	; 0xffffff78
   17188:	mov	r0, r1
   1718c:	mov	r1, r2
   17190:	ldr	r2, [fp, #-136]	; 0xffffff78
   17194:	bl	1d184 <__assert_fail@plt+0xc094>
   17198:	ldr	r2, [fp, #8]
   1719c:	subs	r0, r0, r2
   171a0:	sbcs	r1, r1, r2, asr #31
   171a4:	str	r0, [fp, #-140]	; 0xffffff74
   171a8:	str	r1, [fp, #-144]	; 0xffffff70
   171ac:	blt	171f4 <__assert_fail@plt+0x6104>
   171b0:	b	17208 <__assert_fail@plt+0x6118>
   171b4:	ldr	r0, [fp, #8]
   171b8:	asr	r3, r0, #31
   171bc:	mvn	r1, #0
   171c0:	mvn	r2, #-2147483648	; 0x80000000
   171c4:	str	r0, [fp, #-148]	; 0xffffff6c
   171c8:	mov	r0, r1
   171cc:	mov	r1, r2
   171d0:	ldr	r2, [fp, #-148]	; 0xffffff6c
   171d4:	bl	1d184 <__assert_fail@plt+0xc094>
   171d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   171dc:	subs	r0, r0, r2
   171e0:	sbcs	r1, r1, r2, asr #31
   171e4:	str	r0, [fp, #-152]	; 0xffffff68
   171e8:	str	r1, [fp, #-156]	; 0xffffff64
   171ec:	bge	17208 <__assert_fail@plt+0x6118>
   171f0:	b	171f4 <__assert_fail@plt+0x6104>
   171f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f8:	ldr	r1, [fp, #8]
   171fc:	mul	r0, r0, r1
   17200:	str	r0, [fp, #-28]	; 0xffffffe4
   17204:	b	17468 <__assert_fail@plt+0x6378>
   17208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1720c:	ldr	r1, [fp, #8]
   17210:	mul	r0, r0, r1
   17214:	str	r0, [fp, #-28]	; 0xffffffe4
   17218:	b	17478 <__assert_fail@plt+0x6388>
   1721c:	ldr	r0, [fp, #8]
   17220:	cmp	r0, #0
   17224:	bge	17384 <__assert_fail@plt+0x6294>
   17228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1722c:	cmp	r0, #0
   17230:	bge	1730c <__assert_fail@plt+0x621c>
   17234:	b	1727c <__assert_fail@plt+0x618c>
   17238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1723c:	ldr	r1, [fp, #8]
   17240:	asr	r3, r1, #31
   17244:	mvn	r2, #0
   17248:	str	r0, [fp, #-160]	; 0xffffff60
   1724c:	mov	r0, r2
   17250:	str	r1, [fp, #-164]	; 0xffffff5c
   17254:	mov	r1, r2
   17258:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1725c:	bl	1d258 <__assert_fail@plt+0xc168>
   17260:	ldr	r2, [fp, #-160]	; 0xffffff60
   17264:	subs	r0, r2, r0
   17268:	rscs	r1, r1, r2, asr #31
   1726c:	str	r0, [fp, #-168]	; 0xffffff58
   17270:	str	r1, [fp, #-172]	; 0xffffff54
   17274:	bcc	17440 <__assert_fail@plt+0x6350>
   17278:	b	17454 <__assert_fail@plt+0x6364>
   1727c:	b	17280 <__assert_fail@plt+0x6190>
   17280:	ldr	r0, [pc, #-472]	; 170b0 <__assert_fail@plt+0x5fc0>
   17284:	ldr	r1, [fp, #8]
   17288:	cmp	r1, r0
   1728c:	blt	172a4 <__assert_fail@plt+0x61b4>
   17290:	b	172b8 <__assert_fail@plt+0x61c8>
   17294:	ldr	r0, [fp, #8]
   17298:	movw	r1, #0
   1729c:	cmp	r1, r0
   172a0:	bge	172b8 <__assert_fail@plt+0x61c8>
   172a4:	mov	r0, #1
   172a8:	mvn	r1, #0
   172ac:	str	r1, [fp, #-176]	; 0xffffff50
   172b0:	str	r0, [fp, #-180]	; 0xffffff4c
   172b4:	b	172e4 <__assert_fail@plt+0x61f4>
   172b8:	ldr	r0, [fp, #8]
   172bc:	rsb	r0, r0, #0
   172c0:	asr	r3, r0, #31
   172c4:	mvn	r1, #0
   172c8:	str	r0, [fp, #-184]	; 0xffffff48
   172cc:	mov	r0, r1
   172d0:	ldr	r2, [fp, #-184]	; 0xffffff48
   172d4:	bl	1d258 <__assert_fail@plt+0xc168>
   172d8:	str	r0, [fp, #-176]	; 0xffffff50
   172dc:	str	r1, [fp, #-180]	; 0xffffff4c
   172e0:	b	172e4 <__assert_fail@plt+0x61f4>
   172e4:	ldr	r0, [fp, #-180]	; 0xffffff4c
   172e8:	ldr	r1, [fp, #-176]	; 0xffffff50
   172ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172f0:	mvn	r2, r2
   172f4:	subs	r1, r2, r1
   172f8:	rscs	r0, r0, r2, asr #31
   172fc:	str	r1, [sp, #188]	; 0xbc
   17300:	str	r0, [sp, #184]	; 0xb8
   17304:	bcs	17440 <__assert_fail@plt+0x6350>
   17308:	b	17454 <__assert_fail@plt+0x6364>
   1730c:	b	17310 <__assert_fail@plt+0x6220>
   17310:	b	17368 <__assert_fail@plt+0x6278>
   17314:	b	17368 <__assert_fail@plt+0x6278>
   17318:	ldr	r0, [fp, #8]
   1731c:	cmn	r0, #1
   17320:	bne	17368 <__assert_fail@plt+0x6278>
   17324:	b	17328 <__assert_fail@plt+0x6238>
   17328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1732c:	add	r0, r0, #0
   17330:	movw	r1, #0
   17334:	cmp	r1, r0
   17338:	blt	17440 <__assert_fail@plt+0x6350>
   1733c:	b	17454 <__assert_fail@plt+0x6364>
   17340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17344:	movw	r1, #0
   17348:	cmp	r1, r0
   1734c:	bge	17454 <__assert_fail@plt+0x6364>
   17350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17354:	sub	r0, r0, #1
   17358:	mvn	r1, #0
   1735c:	cmp	r1, r0
   17360:	blt	17440 <__assert_fail@plt+0x6350>
   17364:	b	17454 <__assert_fail@plt+0x6364>
   17368:	ldr	r0, [fp, #8]
   1736c:	movw	r1, #0
   17370:	sdiv	r0, r1, r0
   17374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17378:	cmp	r0, r1
   1737c:	blt	17440 <__assert_fail@plt+0x6350>
   17380:	b	17454 <__assert_fail@plt+0x6364>
   17384:	ldr	r0, [fp, #8]
   17388:	cmp	r0, #0
   1738c:	bne	17394 <__assert_fail@plt+0x62a4>
   17390:	b	17454 <__assert_fail@plt+0x6364>
   17394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17398:	cmp	r0, #0
   1739c:	bge	17408 <__assert_fail@plt+0x6318>
   173a0:	b	173a4 <__assert_fail@plt+0x62b4>
   173a4:	b	173ec <__assert_fail@plt+0x62fc>
   173a8:	b	173ec <__assert_fail@plt+0x62fc>
   173ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173b0:	cmn	r0, #1
   173b4:	bne	173ec <__assert_fail@plt+0x62fc>
   173b8:	b	173bc <__assert_fail@plt+0x62cc>
   173bc:	ldr	r0, [fp, #8]
   173c0:	add	r0, r0, #0
   173c4:	movw	r1, #0
   173c8:	cmp	r1, r0
   173cc:	blt	17440 <__assert_fail@plt+0x6350>
   173d0:	b	17454 <__assert_fail@plt+0x6364>
   173d4:	ldr	r0, [fp, #8]
   173d8:	sub	r0, r0, #1
   173dc:	mvn	r1, #0
   173e0:	cmp	r1, r0
   173e4:	blt	17440 <__assert_fail@plt+0x6350>
   173e8:	b	17454 <__assert_fail@plt+0x6364>
   173ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173f0:	movw	r1, #0
   173f4:	sdiv	r0, r1, r0
   173f8:	ldr	r1, [fp, #8]
   173fc:	cmp	r0, r1
   17400:	blt	17440 <__assert_fail@plt+0x6350>
   17404:	b	17454 <__assert_fail@plt+0x6364>
   17408:	ldr	r0, [fp, #8]
   1740c:	asr	r3, r0, #31
   17410:	mvn	r1, #0
   17414:	str	r0, [sp, #180]	; 0xb4
   17418:	mov	r0, r1
   1741c:	ldr	r2, [sp, #180]	; 0xb4
   17420:	bl	1d258 <__assert_fail@plt+0xc168>
   17424:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17428:	subs	r0, r0, r2
   1742c:	sbcs	r1, r1, r2, asr #31
   17430:	str	r0, [sp, #176]	; 0xb0
   17434:	str	r1, [sp, #172]	; 0xac
   17438:	bcs	17454 <__assert_fail@plt+0x6364>
   1743c:	b	17440 <__assert_fail@plt+0x6350>
   17440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17444:	ldr	r1, [fp, #8]
   17448:	mul	r0, r0, r1
   1744c:	str	r0, [fp, #-28]	; 0xffffffe4
   17450:	b	17468 <__assert_fail@plt+0x6378>
   17454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17458:	ldr	r1, [fp, #8]
   1745c:	mul	r0, r0, r1
   17460:	str	r0, [fp, #-28]	; 0xffffffe4
   17464:	b	17478 <__assert_fail@plt+0x6388>
   17468:	ldr	r0, [pc, #-1108]	; 1701c <__assert_fail@plt+0x5f2c>
   1746c:	str	r0, [sp, #168]	; 0xa8
   17470:	b	17498 <__assert_fail@plt+0x63a8>
   17474:			; <UNDEFINED> instruction: 0xffff8000
   17478:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1747c:	cmp	r0, #64	; 0x40
   17480:	movw	r0, #0
   17484:	movlt	r0, #1
   17488:	tst	r0, #1
   1748c:	movw	r0, #64	; 0x40
   17490:	moveq	r0, #0
   17494:	str	r0, [sp, #168]	; 0xa8
   17498:	ldr	r0, [sp, #168]	; 0xa8
   1749c:	str	r0, [fp, #-32]	; 0xffffffe0
   174a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174a4:	cmp	r0, #0
   174a8:	beq	174d8 <__assert_fail@plt+0x63e8>
   174ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174b0:	ldr	r1, [fp, #8]
   174b4:	sdiv	r0, r0, r1
   174b8:	str	r0, [fp, #-24]	; 0xffffffe8
   174bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174c0:	mov	r1, r0
   174c4:	ldr	r2, [fp, #8]
   174c8:	sdiv	r3, r0, r2
   174cc:	mls	r0, r3, r2, r0
   174d0:	sub	r0, r1, r0
   174d4:	str	r0, [fp, #-28]	; 0xffffffe4
   174d8:	ldr	r0, [fp, #-4]
   174dc:	movw	r1, #0
   174e0:	cmp	r0, r1
   174e4:	bne	174f4 <__assert_fail@plt+0x6404>
   174e8:	ldr	r0, [fp, #-8]
   174ec:	movw	r1, #0
   174f0:	str	r1, [r0]
   174f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   174fc:	sub	r0, r0, r1
   17500:	ldr	r1, [fp, #-12]
   17504:	cmp	r0, r1
   17508:	bge	18940 <__assert_fail@plt+0x7850>
   1750c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17510:	ldr	r1, [fp, #-12]
   17514:	add	r1, r0, r1
   17518:	mov	r2, #1
   1751c:	cmp	r1, r0
   17520:	movwvc	r2, #0
   17524:	str	r1, [fp, #-24]	; 0xffffffe8
   17528:	tst	r2, #1
   1752c:	bne	1893c <__assert_fail@plt+0x784c>
   17530:	ldr	r0, [fp, #-16]
   17534:	movw	r1, #0
   17538:	cmp	r1, r0
   1753c:	bgt	17550 <__assert_fail@plt+0x6460>
   17540:	ldr	r0, [fp, #-16]
   17544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17548:	cmp	r0, r1
   1754c:	blt	1893c <__assert_fail@plt+0x784c>
   17550:	b	1792c <__assert_fail@plt+0x683c>
   17554:	b	17558 <__assert_fail@plt+0x6468>
   17558:	ldr	r0, [fp, #8]
   1755c:	cmp	r0, #0
   17560:	bge	17674 <__assert_fail@plt+0x6584>
   17564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17568:	cmp	r0, #0
   1756c:	bge	175f8 <__assert_fail@plt+0x6508>
   17570:	b	17574 <__assert_fail@plt+0x6484>
   17574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17578:	ldr	r1, [fp, #8]
   1757c:	movw	r2, #127	; 0x7f
   17580:	sdiv	r1, r2, r1
   17584:	cmp	r0, r1
   17588:	blt	17714 <__assert_fail@plt+0x6624>
   1758c:	b	1772c <__assert_fail@plt+0x663c>
   17590:	b	17594 <__assert_fail@plt+0x64a4>
   17594:	ldr	r0, [pc, #-1260]	; 170b0 <__assert_fail@plt+0x5fc0>
   17598:	ldr	r1, [fp, #8]
   1759c:	cmp	r1, r0
   175a0:	blt	175b8 <__assert_fail@plt+0x64c8>
   175a4:	b	175c4 <__assert_fail@plt+0x64d4>
   175a8:	ldr	r0, [fp, #8]
   175ac:	movw	r1, #0
   175b0:	cmp	r1, r0
   175b4:	bge	175c4 <__assert_fail@plt+0x64d4>
   175b8:	movw	r0, #0
   175bc:	str	r0, [sp, #164]	; 0xa4
   175c0:	b	175dc <__assert_fail@plt+0x64ec>
   175c4:	ldr	r0, [fp, #8]
   175c8:	movw	r1, #0
   175cc:	sub	r0, r1, r0
   175d0:	movw	r1, #127	; 0x7f
   175d4:	sdiv	r0, r1, r0
   175d8:	str	r0, [sp, #164]	; 0xa4
   175dc:	ldr	r0, [sp, #164]	; 0xa4
   175e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175e4:	mvn	r2, #0
   175e8:	sub	r1, r2, r1
   175ec:	cmp	r0, r1
   175f0:	ble	17714 <__assert_fail@plt+0x6624>
   175f4:	b	1772c <__assert_fail@plt+0x663c>
   175f8:	b	175fc <__assert_fail@plt+0x650c>
   175fc:	b	17658 <__assert_fail@plt+0x6568>
   17600:	b	17658 <__assert_fail@plt+0x6568>
   17604:	ldr	r0, [fp, #8]
   17608:	cmn	r0, #1
   1760c:	bne	17658 <__assert_fail@plt+0x6568>
   17610:	b	17614 <__assert_fail@plt+0x6524>
   17614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17618:	mvn	r1, #127	; 0x7f
   1761c:	add	r0, r0, r1
   17620:	movw	r1, #0
   17624:	cmp	r1, r0
   17628:	blt	17714 <__assert_fail@plt+0x6624>
   1762c:	b	1772c <__assert_fail@plt+0x663c>
   17630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17634:	movw	r1, #0
   17638:	cmp	r1, r0
   1763c:	bge	1772c <__assert_fail@plt+0x663c>
   17640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17644:	sub	r0, r0, #1
   17648:	movw	r1, #127	; 0x7f
   1764c:	cmp	r1, r0
   17650:	blt	17714 <__assert_fail@plt+0x6624>
   17654:	b	1772c <__assert_fail@plt+0x663c>
   17658:	ldr	r0, [fp, #8]
   1765c:	mvn	r1, #127	; 0x7f
   17660:	sdiv	r0, r1, r0
   17664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17668:	cmp	r0, r1
   1766c:	blt	17714 <__assert_fail@plt+0x6624>
   17670:	b	1772c <__assert_fail@plt+0x663c>
   17674:	ldr	r0, [fp, #8]
   17678:	cmp	r0, #0
   1767c:	bne	17684 <__assert_fail@plt+0x6594>
   17680:	b	1772c <__assert_fail@plt+0x663c>
   17684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17688:	cmp	r0, #0
   1768c:	bge	176fc <__assert_fail@plt+0x660c>
   17690:	b	17694 <__assert_fail@plt+0x65a4>
   17694:	b	176e0 <__assert_fail@plt+0x65f0>
   17698:	b	176e0 <__assert_fail@plt+0x65f0>
   1769c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176a0:	cmn	r0, #1
   176a4:	bne	176e0 <__assert_fail@plt+0x65f0>
   176a8:	b	176ac <__assert_fail@plt+0x65bc>
   176ac:	ldr	r0, [fp, #8]
   176b0:	mvn	r1, #127	; 0x7f
   176b4:	add	r0, r0, r1
   176b8:	movw	r1, #0
   176bc:	cmp	r1, r0
   176c0:	blt	17714 <__assert_fail@plt+0x6624>
   176c4:	b	1772c <__assert_fail@plt+0x663c>
   176c8:	ldr	r0, [fp, #8]
   176cc:	sub	r0, r0, #1
   176d0:	movw	r1, #127	; 0x7f
   176d4:	cmp	r1, r0
   176d8:	blt	17714 <__assert_fail@plt+0x6624>
   176dc:	b	1772c <__assert_fail@plt+0x663c>
   176e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176e4:	mvn	r1, #127	; 0x7f
   176e8:	sdiv	r0, r1, r0
   176ec:	ldr	r1, [fp, #8]
   176f0:	cmp	r0, r1
   176f4:	blt	17714 <__assert_fail@plt+0x6624>
   176f8:	b	1772c <__assert_fail@plt+0x663c>
   176fc:	ldr	r0, [fp, #8]
   17700:	movw	r1, #127	; 0x7f
   17704:	sdiv	r0, r1, r0
   17708:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1770c:	cmp	r0, r1
   17710:	bge	1772c <__assert_fail@plt+0x663c>
   17714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17718:	ldr	r1, [fp, #8]
   1771c:	mul	r0, r0, r1
   17720:	sxtb	r0, r0
   17724:	str	r0, [fp, #-28]	; 0xffffffe4
   17728:	b	1893c <__assert_fail@plt+0x784c>
   1772c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17730:	ldr	r1, [fp, #8]
   17734:	mul	r0, r0, r1
   17738:	sxtb	r0, r0
   1773c:	str	r0, [fp, #-28]	; 0xffffffe4
   17740:	b	18940 <__assert_fail@plt+0x7850>
   17744:	ldr	r0, [fp, #8]
   17748:	cmp	r0, #0
   1774c:	bge	1785c <__assert_fail@plt+0x676c>
   17750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17754:	cmp	r0, #0
   17758:	bge	177e4 <__assert_fail@plt+0x66f4>
   1775c:	b	17760 <__assert_fail@plt+0x6670>
   17760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17764:	ldr	r1, [fp, #8]
   17768:	movw	r2, #255	; 0xff
   1776c:	sdiv	r1, r2, r1
   17770:	cmp	r0, r1
   17774:	blt	178f8 <__assert_fail@plt+0x6808>
   17778:	b	17914 <__assert_fail@plt+0x6824>
   1777c:	b	17780 <__assert_fail@plt+0x6690>
   17780:	ldr	r0, [pc, #-1752]	; 170b0 <__assert_fail@plt+0x5fc0>
   17784:	ldr	r1, [fp, #8]
   17788:	cmp	r1, r0
   1778c:	blt	177a4 <__assert_fail@plt+0x66b4>
   17790:	b	177b0 <__assert_fail@plt+0x66c0>
   17794:	ldr	r0, [fp, #8]
   17798:	movw	r1, #0
   1779c:	cmp	r1, r0
   177a0:	bge	177b0 <__assert_fail@plt+0x66c0>
   177a4:	movw	r0, #0
   177a8:	str	r0, [sp, #160]	; 0xa0
   177ac:	b	177c8 <__assert_fail@plt+0x66d8>
   177b0:	ldr	r0, [fp, #8]
   177b4:	movw	r1, #0
   177b8:	sub	r0, r1, r0
   177bc:	movw	r1, #255	; 0xff
   177c0:	sdiv	r0, r1, r0
   177c4:	str	r0, [sp, #160]	; 0xa0
   177c8:	ldr	r0, [sp, #160]	; 0xa0
   177cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177d0:	mvn	r2, #0
   177d4:	sub	r1, r2, r1
   177d8:	cmp	r0, r1
   177dc:	ble	178f8 <__assert_fail@plt+0x6808>
   177e0:	b	17914 <__assert_fail@plt+0x6824>
   177e4:	b	177e8 <__assert_fail@plt+0x66f8>
   177e8:	b	17840 <__assert_fail@plt+0x6750>
   177ec:	b	17840 <__assert_fail@plt+0x6750>
   177f0:	ldr	r0, [fp, #8]
   177f4:	cmn	r0, #1
   177f8:	bne	17840 <__assert_fail@plt+0x6750>
   177fc:	b	17800 <__assert_fail@plt+0x6710>
   17800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17804:	add	r0, r0, #0
   17808:	movw	r1, #0
   1780c:	cmp	r1, r0
   17810:	blt	178f8 <__assert_fail@plt+0x6808>
   17814:	b	17914 <__assert_fail@plt+0x6824>
   17818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1781c:	movw	r1, #0
   17820:	cmp	r1, r0
   17824:	bge	17914 <__assert_fail@plt+0x6824>
   17828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1782c:	sub	r0, r0, #1
   17830:	mvn	r1, #0
   17834:	cmp	r1, r0
   17838:	blt	178f8 <__assert_fail@plt+0x6808>
   1783c:	b	17914 <__assert_fail@plt+0x6824>
   17840:	ldr	r0, [fp, #8]
   17844:	movw	r1, #0
   17848:	sdiv	r0, r1, r0
   1784c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17850:	cmp	r0, r1
   17854:	blt	178f8 <__assert_fail@plt+0x6808>
   17858:	b	17914 <__assert_fail@plt+0x6824>
   1785c:	ldr	r0, [fp, #8]
   17860:	cmp	r0, #0
   17864:	bne	1786c <__assert_fail@plt+0x677c>
   17868:	b	17914 <__assert_fail@plt+0x6824>
   1786c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17870:	cmp	r0, #0
   17874:	bge	178e0 <__assert_fail@plt+0x67f0>
   17878:	b	1787c <__assert_fail@plt+0x678c>
   1787c:	b	178c4 <__assert_fail@plt+0x67d4>
   17880:	b	178c4 <__assert_fail@plt+0x67d4>
   17884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17888:	cmn	r0, #1
   1788c:	bne	178c4 <__assert_fail@plt+0x67d4>
   17890:	b	17894 <__assert_fail@plt+0x67a4>
   17894:	ldr	r0, [fp, #8]
   17898:	add	r0, r0, #0
   1789c:	movw	r1, #0
   178a0:	cmp	r1, r0
   178a4:	blt	178f8 <__assert_fail@plt+0x6808>
   178a8:	b	17914 <__assert_fail@plt+0x6824>
   178ac:	ldr	r0, [fp, #8]
   178b0:	sub	r0, r0, #1
   178b4:	mvn	r1, #0
   178b8:	cmp	r1, r0
   178bc:	blt	178f8 <__assert_fail@plt+0x6808>
   178c0:	b	17914 <__assert_fail@plt+0x6824>
   178c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178c8:	movw	r1, #0
   178cc:	sdiv	r0, r1, r0
   178d0:	ldr	r1, [fp, #8]
   178d4:	cmp	r0, r1
   178d8:	blt	178f8 <__assert_fail@plt+0x6808>
   178dc:	b	17914 <__assert_fail@plt+0x6824>
   178e0:	ldr	r0, [fp, #8]
   178e4:	movw	r1, #255	; 0xff
   178e8:	sdiv	r0, r1, r0
   178ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178f0:	cmp	r0, r1
   178f4:	bge	17914 <__assert_fail@plt+0x6824>
   178f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178fc:	ldr	r1, [fp, #8]
   17900:	mul	r0, r0, r1
   17904:	and	r0, r0, #255	; 0xff
   17908:	str	r0, [fp, #-28]	; 0xffffffe4
   1790c:	b	1893c <__assert_fail@plt+0x784c>
   17910:	andhi	r0, r0, r0
   17914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17918:	ldr	r1, [fp, #8]
   1791c:	mul	r0, r0, r1
   17920:	and	r0, r0, #255	; 0xff
   17924:	str	r0, [fp, #-28]	; 0xffffffe4
   17928:	b	18940 <__assert_fail@plt+0x7850>
   1792c:	b	17d04 <__assert_fail@plt+0x6c14>
   17930:	b	17934 <__assert_fail@plt+0x6844>
   17934:	ldr	r0, [fp, #8]
   17938:	cmp	r0, #0
   1793c:	bge	17a50 <__assert_fail@plt+0x6960>
   17940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17944:	cmp	r0, #0
   17948:	bge	179d4 <__assert_fail@plt+0x68e4>
   1794c:	b	17950 <__assert_fail@plt+0x6860>
   17950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17954:	ldr	r1, [fp, #8]
   17958:	movw	r2, #32767	; 0x7fff
   1795c:	sdiv	r1, r2, r1
   17960:	cmp	r0, r1
   17964:	blt	17af0 <__assert_fail@plt+0x6a00>
   17968:	b	17b08 <__assert_fail@plt+0x6a18>
   1796c:	b	17970 <__assert_fail@plt+0x6880>
   17970:	ldr	r0, [pc, #4084]	; 1896c <__assert_fail@plt+0x787c>
   17974:	ldr	r1, [fp, #8]
   17978:	cmp	r1, r0
   1797c:	blt	17994 <__assert_fail@plt+0x68a4>
   17980:	b	179a0 <__assert_fail@plt+0x68b0>
   17984:	ldr	r0, [fp, #8]
   17988:	movw	r1, #0
   1798c:	cmp	r1, r0
   17990:	bge	179a0 <__assert_fail@plt+0x68b0>
   17994:	movw	r0, #0
   17998:	str	r0, [sp, #156]	; 0x9c
   1799c:	b	179b8 <__assert_fail@plt+0x68c8>
   179a0:	ldr	r0, [fp, #8]
   179a4:	movw	r1, #0
   179a8:	sub	r0, r1, r0
   179ac:	movw	r1, #32767	; 0x7fff
   179b0:	sdiv	r0, r1, r0
   179b4:	str	r0, [sp, #156]	; 0x9c
   179b8:	ldr	r0, [sp, #156]	; 0x9c
   179bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179c0:	mvn	r2, #0
   179c4:	sub	r1, r2, r1
   179c8:	cmp	r0, r1
   179cc:	ble	17af0 <__assert_fail@plt+0x6a00>
   179d0:	b	17b08 <__assert_fail@plt+0x6a18>
   179d4:	b	179d8 <__assert_fail@plt+0x68e8>
   179d8:	b	17a34 <__assert_fail@plt+0x6944>
   179dc:	b	17a34 <__assert_fail@plt+0x6944>
   179e0:	ldr	r0, [fp, #8]
   179e4:	cmn	r0, #1
   179e8:	bne	17a34 <__assert_fail@plt+0x6944>
   179ec:	b	179f0 <__assert_fail@plt+0x6900>
   179f0:	ldr	r0, [pc, #3964]	; 18974 <__assert_fail@plt+0x7884>
   179f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179f8:	add	r0, r1, r0
   179fc:	movw	r1, #0
   17a00:	cmp	r1, r0
   17a04:	blt	17af0 <__assert_fail@plt+0x6a00>
   17a08:	b	17b08 <__assert_fail@plt+0x6a18>
   17a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a10:	movw	r1, #0
   17a14:	cmp	r1, r0
   17a18:	bge	17b08 <__assert_fail@plt+0x6a18>
   17a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a20:	sub	r0, r0, #1
   17a24:	movw	r1, #32767	; 0x7fff
   17a28:	cmp	r1, r0
   17a2c:	blt	17af0 <__assert_fail@plt+0x6a00>
   17a30:	b	17b08 <__assert_fail@plt+0x6a18>
   17a34:	ldr	r0, [pc, #3896]	; 18974 <__assert_fail@plt+0x7884>
   17a38:	ldr	r1, [fp, #8]
   17a3c:	sdiv	r0, r0, r1
   17a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a44:	cmp	r0, r1
   17a48:	blt	17af0 <__assert_fail@plt+0x6a00>
   17a4c:	b	17b08 <__assert_fail@plt+0x6a18>
   17a50:	ldr	r0, [fp, #8]
   17a54:	cmp	r0, #0
   17a58:	bne	17a60 <__assert_fail@plt+0x6970>
   17a5c:	b	17b08 <__assert_fail@plt+0x6a18>
   17a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a64:	cmp	r0, #0
   17a68:	bge	17ad8 <__assert_fail@plt+0x69e8>
   17a6c:	b	17a70 <__assert_fail@plt+0x6980>
   17a70:	b	17abc <__assert_fail@plt+0x69cc>
   17a74:	b	17abc <__assert_fail@plt+0x69cc>
   17a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a7c:	cmn	r0, #1
   17a80:	bne	17abc <__assert_fail@plt+0x69cc>
   17a84:	b	17a88 <__assert_fail@plt+0x6998>
   17a88:	ldr	r0, [pc, #3812]	; 18974 <__assert_fail@plt+0x7884>
   17a8c:	ldr	r1, [fp, #8]
   17a90:	add	r0, r1, r0
   17a94:	movw	r1, #0
   17a98:	cmp	r1, r0
   17a9c:	blt	17af0 <__assert_fail@plt+0x6a00>
   17aa0:	b	17b08 <__assert_fail@plt+0x6a18>
   17aa4:	ldr	r0, [fp, #8]
   17aa8:	sub	r0, r0, #1
   17aac:	movw	r1, #32767	; 0x7fff
   17ab0:	cmp	r1, r0
   17ab4:	blt	17af0 <__assert_fail@plt+0x6a00>
   17ab8:	b	17b08 <__assert_fail@plt+0x6a18>
   17abc:	ldr	r0, [pc, #3760]	; 18974 <__assert_fail@plt+0x7884>
   17ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ac4:	sdiv	r0, r0, r1
   17ac8:	ldr	r1, [fp, #8]
   17acc:	cmp	r0, r1
   17ad0:	blt	17af0 <__assert_fail@plt+0x6a00>
   17ad4:	b	17b08 <__assert_fail@plt+0x6a18>
   17ad8:	ldr	r0, [fp, #8]
   17adc:	movw	r1, #32767	; 0x7fff
   17ae0:	sdiv	r0, r1, r0
   17ae4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ae8:	cmp	r0, r1
   17aec:	bge	17b08 <__assert_fail@plt+0x6a18>
   17af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17af4:	ldr	r1, [fp, #8]
   17af8:	mul	r0, r0, r1
   17afc:	sxth	r0, r0
   17b00:	str	r0, [fp, #-28]	; 0xffffffe4
   17b04:	b	1893c <__assert_fail@plt+0x784c>
   17b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b0c:	ldr	r1, [fp, #8]
   17b10:	mul	r0, r0, r1
   17b14:	sxth	r0, r0
   17b18:	str	r0, [fp, #-28]	; 0xffffffe4
   17b1c:	b	18940 <__assert_fail@plt+0x7850>
   17b20:	ldr	r0, [fp, #8]
   17b24:	cmp	r0, #0
   17b28:	bge	17c38 <__assert_fail@plt+0x6b48>
   17b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b30:	cmp	r0, #0
   17b34:	bge	17bc0 <__assert_fail@plt+0x6ad0>
   17b38:	b	17b3c <__assert_fail@plt+0x6a4c>
   17b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b40:	ldr	r1, [fp, #8]
   17b44:	movw	r2, #65535	; 0xffff
   17b48:	sdiv	r1, r2, r1
   17b4c:	cmp	r0, r1
   17b50:	blt	17cd4 <__assert_fail@plt+0x6be4>
   17b54:	b	17cec <__assert_fail@plt+0x6bfc>
   17b58:	b	17b5c <__assert_fail@plt+0x6a6c>
   17b5c:	ldr	r0, [pc, #3592]	; 1896c <__assert_fail@plt+0x787c>
   17b60:	ldr	r1, [fp, #8]
   17b64:	cmp	r1, r0
   17b68:	blt	17b80 <__assert_fail@plt+0x6a90>
   17b6c:	b	17b8c <__assert_fail@plt+0x6a9c>
   17b70:	ldr	r0, [fp, #8]
   17b74:	movw	r1, #0
   17b78:	cmp	r1, r0
   17b7c:	bge	17b8c <__assert_fail@plt+0x6a9c>
   17b80:	movw	r0, #0
   17b84:	str	r0, [sp, #152]	; 0x98
   17b88:	b	17ba4 <__assert_fail@plt+0x6ab4>
   17b8c:	ldr	r0, [fp, #8]
   17b90:	movw	r1, #0
   17b94:	sub	r0, r1, r0
   17b98:	movw	r1, #65535	; 0xffff
   17b9c:	sdiv	r0, r1, r0
   17ba0:	str	r0, [sp, #152]	; 0x98
   17ba4:	ldr	r0, [sp, #152]	; 0x98
   17ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bac:	mvn	r2, #0
   17bb0:	sub	r1, r2, r1
   17bb4:	cmp	r0, r1
   17bb8:	ble	17cd4 <__assert_fail@plt+0x6be4>
   17bbc:	b	17cec <__assert_fail@plt+0x6bfc>
   17bc0:	b	17bc4 <__assert_fail@plt+0x6ad4>
   17bc4:	b	17c1c <__assert_fail@plt+0x6b2c>
   17bc8:	b	17c1c <__assert_fail@plt+0x6b2c>
   17bcc:	ldr	r0, [fp, #8]
   17bd0:	cmn	r0, #1
   17bd4:	bne	17c1c <__assert_fail@plt+0x6b2c>
   17bd8:	b	17bdc <__assert_fail@plt+0x6aec>
   17bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be0:	add	r0, r0, #0
   17be4:	movw	r1, #0
   17be8:	cmp	r1, r0
   17bec:	blt	17cd4 <__assert_fail@plt+0x6be4>
   17bf0:	b	17cec <__assert_fail@plt+0x6bfc>
   17bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bf8:	movw	r1, #0
   17bfc:	cmp	r1, r0
   17c00:	bge	17cec <__assert_fail@plt+0x6bfc>
   17c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c08:	sub	r0, r0, #1
   17c0c:	mvn	r1, #0
   17c10:	cmp	r1, r0
   17c14:	blt	17cd4 <__assert_fail@plt+0x6be4>
   17c18:	b	17cec <__assert_fail@plt+0x6bfc>
   17c1c:	ldr	r0, [fp, #8]
   17c20:	movw	r1, #0
   17c24:	sdiv	r0, r1, r0
   17c28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c2c:	cmp	r0, r1
   17c30:	blt	17cd4 <__assert_fail@plt+0x6be4>
   17c34:	b	17cec <__assert_fail@plt+0x6bfc>
   17c38:	ldr	r0, [fp, #8]
   17c3c:	cmp	r0, #0
   17c40:	bne	17c48 <__assert_fail@plt+0x6b58>
   17c44:	b	17cec <__assert_fail@plt+0x6bfc>
   17c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c4c:	cmp	r0, #0
   17c50:	bge	17cbc <__assert_fail@plt+0x6bcc>
   17c54:	b	17c58 <__assert_fail@plt+0x6b68>
   17c58:	b	17ca0 <__assert_fail@plt+0x6bb0>
   17c5c:	b	17ca0 <__assert_fail@plt+0x6bb0>
   17c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c64:	cmn	r0, #1
   17c68:	bne	17ca0 <__assert_fail@plt+0x6bb0>
   17c6c:	b	17c70 <__assert_fail@plt+0x6b80>
   17c70:	ldr	r0, [fp, #8]
   17c74:	add	r0, r0, #0
   17c78:	movw	r1, #0
   17c7c:	cmp	r1, r0
   17c80:	blt	17cd4 <__assert_fail@plt+0x6be4>
   17c84:	b	17cec <__assert_fail@plt+0x6bfc>
   17c88:	ldr	r0, [fp, #8]
   17c8c:	sub	r0, r0, #1
   17c90:	mvn	r1, #0
   17c94:	cmp	r1, r0
   17c98:	blt	17cd4 <__assert_fail@plt+0x6be4>
   17c9c:	b	17cec <__assert_fail@plt+0x6bfc>
   17ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ca4:	movw	r1, #0
   17ca8:	sdiv	r0, r1, r0
   17cac:	ldr	r1, [fp, #8]
   17cb0:	cmp	r0, r1
   17cb4:	blt	17cd4 <__assert_fail@plt+0x6be4>
   17cb8:	b	17cec <__assert_fail@plt+0x6bfc>
   17cbc:	ldr	r0, [fp, #8]
   17cc0:	movw	r1, #65535	; 0xffff
   17cc4:	sdiv	r0, r1, r0
   17cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ccc:	cmp	r0, r1
   17cd0:	bge	17cec <__assert_fail@plt+0x6bfc>
   17cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cd8:	ldr	r1, [fp, #8]
   17cdc:	mul	r0, r0, r1
   17ce0:	uxth	r0, r0
   17ce4:	str	r0, [fp, #-28]	; 0xffffffe4
   17ce8:	b	1893c <__assert_fail@plt+0x784c>
   17cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf0:	ldr	r1, [fp, #8]
   17cf4:	mul	r0, r0, r1
   17cf8:	uxth	r0, r0
   17cfc:	str	r0, [fp, #-28]	; 0xffffffe4
   17d00:	b	18940 <__assert_fail@plt+0x7850>
   17d04:	b	17d08 <__assert_fail@plt+0x6c18>
   17d08:	b	17d0c <__assert_fail@plt+0x6c1c>
   17d0c:	ldr	r0, [fp, #8]
   17d10:	cmp	r0, #0
   17d14:	bge	17e18 <__assert_fail@plt+0x6d28>
   17d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d1c:	cmp	r0, #0
   17d20:	bge	17dac <__assert_fail@plt+0x6cbc>
   17d24:	b	17d28 <__assert_fail@plt+0x6c38>
   17d28:	ldr	r0, [pc, #3128]	; 18968 <__assert_fail@plt+0x7878>
   17d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d30:	ldr	r2, [fp, #8]
   17d34:	sdiv	r0, r0, r2
   17d38:	cmp	r1, r0
   17d3c:	blt	17ea8 <__assert_fail@plt+0x6db8>
   17d40:	b	17ebc <__assert_fail@plt+0x6dcc>
   17d44:	b	17d48 <__assert_fail@plt+0x6c58>
   17d48:	ldr	r0, [pc, #3100]	; 1896c <__assert_fail@plt+0x787c>
   17d4c:	ldr	r1, [fp, #8]
   17d50:	cmp	r1, r0
   17d54:	blt	17d6c <__assert_fail@plt+0x6c7c>
   17d58:	b	17d78 <__assert_fail@plt+0x6c88>
   17d5c:	ldr	r0, [fp, #8]
   17d60:	movw	r1, #0
   17d64:	cmp	r1, r0
   17d68:	bge	17d78 <__assert_fail@plt+0x6c88>
   17d6c:	movw	r0, #0
   17d70:	str	r0, [sp, #148]	; 0x94
   17d74:	b	17d90 <__assert_fail@plt+0x6ca0>
   17d78:	ldr	r0, [pc, #3048]	; 18968 <__assert_fail@plt+0x7878>
   17d7c:	ldr	r1, [fp, #8]
   17d80:	movw	r2, #0
   17d84:	sub	r1, r2, r1
   17d88:	sdiv	r0, r0, r1
   17d8c:	str	r0, [sp, #148]	; 0x94
   17d90:	ldr	r0, [sp, #148]	; 0x94
   17d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d98:	mvn	r2, #0
   17d9c:	sub	r1, r2, r1
   17da0:	cmp	r0, r1
   17da4:	ble	17ea8 <__assert_fail@plt+0x6db8>
   17da8:	b	17ebc <__assert_fail@plt+0x6dcc>
   17dac:	ldr	r0, [fp, #8]
   17db0:	cmn	r0, #1
   17db4:	bne	17dfc <__assert_fail@plt+0x6d0c>
   17db8:	b	17dbc <__assert_fail@plt+0x6ccc>
   17dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dc0:	add	r0, r0, #-2147483648	; 0x80000000
   17dc4:	movw	r1, #0
   17dc8:	cmp	r1, r0
   17dcc:	blt	17ea8 <__assert_fail@plt+0x6db8>
   17dd0:	b	17ebc <__assert_fail@plt+0x6dcc>
   17dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dd8:	movw	r1, #0
   17ddc:	cmp	r1, r0
   17de0:	bge	17ebc <__assert_fail@plt+0x6dcc>
   17de4:	ldr	r0, [pc, #2940]	; 18968 <__assert_fail@plt+0x7878>
   17de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dec:	sub	r1, r1, #1
   17df0:	cmp	r0, r1
   17df4:	blt	17ea8 <__assert_fail@plt+0x6db8>
   17df8:	b	17ebc <__assert_fail@plt+0x6dcc>
   17dfc:	ldr	r0, [pc, #2924]	; 18970 <__assert_fail@plt+0x7880>
   17e00:	ldr	r1, [fp, #8]
   17e04:	sdiv	r0, r0, r1
   17e08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e0c:	cmp	r0, r1
   17e10:	blt	17ea8 <__assert_fail@plt+0x6db8>
   17e14:	b	17ebc <__assert_fail@plt+0x6dcc>
   17e18:	ldr	r0, [fp, #8]
   17e1c:	cmp	r0, #0
   17e20:	bne	17e28 <__assert_fail@plt+0x6d38>
   17e24:	b	17ebc <__assert_fail@plt+0x6dcc>
   17e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e2c:	cmp	r0, #0
   17e30:	bge	17e90 <__assert_fail@plt+0x6da0>
   17e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e38:	cmn	r0, #1
   17e3c:	bne	17e74 <__assert_fail@plt+0x6d84>
   17e40:	b	17e44 <__assert_fail@plt+0x6d54>
   17e44:	ldr	r0, [fp, #8]
   17e48:	add	r0, r0, #-2147483648	; 0x80000000
   17e4c:	movw	r1, #0
   17e50:	cmp	r1, r0
   17e54:	blt	17ea8 <__assert_fail@plt+0x6db8>
   17e58:	b	17ebc <__assert_fail@plt+0x6dcc>
   17e5c:	ldr	r0, [pc, #2820]	; 18968 <__assert_fail@plt+0x7878>
   17e60:	ldr	r1, [fp, #8]
   17e64:	sub	r1, r1, #1
   17e68:	cmp	r0, r1
   17e6c:	blt	17ea8 <__assert_fail@plt+0x6db8>
   17e70:	b	17ebc <__assert_fail@plt+0x6dcc>
   17e74:	ldr	r0, [pc, #2804]	; 18970 <__assert_fail@plt+0x7880>
   17e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e7c:	sdiv	r0, r0, r1
   17e80:	ldr	r1, [fp, #8]
   17e84:	cmp	r0, r1
   17e88:	blt	17ea8 <__assert_fail@plt+0x6db8>
   17e8c:	b	17ebc <__assert_fail@plt+0x6dcc>
   17e90:	ldr	r0, [pc, #2768]	; 18968 <__assert_fail@plt+0x7878>
   17e94:	ldr	r1, [fp, #8]
   17e98:	sdiv	r0, r0, r1
   17e9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ea0:	cmp	r0, r1
   17ea4:	bge	17ebc <__assert_fail@plt+0x6dcc>
   17ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eac:	ldr	r1, [fp, #8]
   17eb0:	mul	r0, r0, r1
   17eb4:	str	r0, [fp, #-28]	; 0xffffffe4
   17eb8:	b	1893c <__assert_fail@plt+0x784c>
   17ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ec0:	ldr	r1, [fp, #8]
   17ec4:	mul	r0, r0, r1
   17ec8:	str	r0, [fp, #-28]	; 0xffffffe4
   17ecc:	b	18940 <__assert_fail@plt+0x7850>
   17ed0:	ldr	r0, [fp, #8]
   17ed4:	cmp	r0, #0
   17ed8:	bge	17fe8 <__assert_fail@plt+0x6ef8>
   17edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ee0:	cmp	r0, #0
   17ee4:	bge	17f70 <__assert_fail@plt+0x6e80>
   17ee8:	b	17f08 <__assert_fail@plt+0x6e18>
   17eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef0:	ldr	r1, [fp, #8]
   17ef4:	mvn	r2, #0
   17ef8:	udiv	r1, r2, r1
   17efc:	cmp	r0, r1
   17f00:	bcc	18084 <__assert_fail@plt+0x6f94>
   17f04:	b	18098 <__assert_fail@plt+0x6fa8>
   17f08:	b	17f0c <__assert_fail@plt+0x6e1c>
   17f0c:	ldr	r0, [pc, #2648]	; 1896c <__assert_fail@plt+0x787c>
   17f10:	ldr	r1, [fp, #8]
   17f14:	cmp	r1, r0
   17f18:	blt	17f30 <__assert_fail@plt+0x6e40>
   17f1c:	b	17f3c <__assert_fail@plt+0x6e4c>
   17f20:	ldr	r0, [fp, #8]
   17f24:	movw	r1, #0
   17f28:	cmp	r1, r0
   17f2c:	bge	17f3c <__assert_fail@plt+0x6e4c>
   17f30:	movw	r0, #1
   17f34:	str	r0, [sp, #144]	; 0x90
   17f38:	b	17f54 <__assert_fail@plt+0x6e64>
   17f3c:	ldr	r0, [fp, #8]
   17f40:	movw	r1, #0
   17f44:	sub	r0, r1, r0
   17f48:	mvn	r1, #0
   17f4c:	udiv	r0, r1, r0
   17f50:	str	r0, [sp, #144]	; 0x90
   17f54:	ldr	r0, [sp, #144]	; 0x90
   17f58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f5c:	mvn	r2, #0
   17f60:	sub	r1, r2, r1
   17f64:	cmp	r0, r1
   17f68:	bls	18084 <__assert_fail@plt+0x6f94>
   17f6c:	b	18098 <__assert_fail@plt+0x6fa8>
   17f70:	b	17f74 <__assert_fail@plt+0x6e84>
   17f74:	b	17fcc <__assert_fail@plt+0x6edc>
   17f78:	b	17fcc <__assert_fail@plt+0x6edc>
   17f7c:	ldr	r0, [fp, #8]
   17f80:	cmn	r0, #1
   17f84:	bne	17fcc <__assert_fail@plt+0x6edc>
   17f88:	b	17f8c <__assert_fail@plt+0x6e9c>
   17f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f90:	add	r0, r0, #0
   17f94:	movw	r1, #0
   17f98:	cmp	r1, r0
   17f9c:	blt	18084 <__assert_fail@plt+0x6f94>
   17fa0:	b	18098 <__assert_fail@plt+0x6fa8>
   17fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fa8:	movw	r1, #0
   17fac:	cmp	r1, r0
   17fb0:	bge	18098 <__assert_fail@plt+0x6fa8>
   17fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fb8:	sub	r0, r0, #1
   17fbc:	mvn	r1, #0
   17fc0:	cmp	r1, r0
   17fc4:	blt	18084 <__assert_fail@plt+0x6f94>
   17fc8:	b	18098 <__assert_fail@plt+0x6fa8>
   17fcc:	ldr	r0, [fp, #8]
   17fd0:	movw	r1, #0
   17fd4:	sdiv	r0, r1, r0
   17fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fdc:	cmp	r0, r1
   17fe0:	blt	18084 <__assert_fail@plt+0x6f94>
   17fe4:	b	18098 <__assert_fail@plt+0x6fa8>
   17fe8:	ldr	r0, [fp, #8]
   17fec:	cmp	r0, #0
   17ff0:	bne	17ff8 <__assert_fail@plt+0x6f08>
   17ff4:	b	18098 <__assert_fail@plt+0x6fa8>
   17ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ffc:	cmp	r0, #0
   18000:	bge	1806c <__assert_fail@plt+0x6f7c>
   18004:	b	18008 <__assert_fail@plt+0x6f18>
   18008:	b	18050 <__assert_fail@plt+0x6f60>
   1800c:	b	18050 <__assert_fail@plt+0x6f60>
   18010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18014:	cmn	r0, #1
   18018:	bne	18050 <__assert_fail@plt+0x6f60>
   1801c:	b	18020 <__assert_fail@plt+0x6f30>
   18020:	ldr	r0, [fp, #8]
   18024:	add	r0, r0, #0
   18028:	movw	r1, #0
   1802c:	cmp	r1, r0
   18030:	blt	18084 <__assert_fail@plt+0x6f94>
   18034:	b	18098 <__assert_fail@plt+0x6fa8>
   18038:	ldr	r0, [fp, #8]
   1803c:	sub	r0, r0, #1
   18040:	mvn	r1, #0
   18044:	cmp	r1, r0
   18048:	blt	18084 <__assert_fail@plt+0x6f94>
   1804c:	b	18098 <__assert_fail@plt+0x6fa8>
   18050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18054:	movw	r1, #0
   18058:	sdiv	r0, r1, r0
   1805c:	ldr	r1, [fp, #8]
   18060:	cmp	r0, r1
   18064:	blt	18084 <__assert_fail@plt+0x6f94>
   18068:	b	18098 <__assert_fail@plt+0x6fa8>
   1806c:	ldr	r0, [fp, #8]
   18070:	mvn	r1, #0
   18074:	udiv	r0, r1, r0
   18078:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1807c:	cmp	r0, r1
   18080:	bcs	18098 <__assert_fail@plt+0x6fa8>
   18084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18088:	ldr	r1, [fp, #8]
   1808c:	mul	r0, r0, r1
   18090:	str	r0, [fp, #-28]	; 0xffffffe4
   18094:	b	1893c <__assert_fail@plt+0x784c>
   18098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1809c:	ldr	r1, [fp, #8]
   180a0:	mul	r0, r0, r1
   180a4:	str	r0, [fp, #-28]	; 0xffffffe4
   180a8:	b	18940 <__assert_fail@plt+0x7850>
   180ac:	b	180b0 <__assert_fail@plt+0x6fc0>
   180b0:	b	180b4 <__assert_fail@plt+0x6fc4>
   180b4:	ldr	r0, [fp, #8]
   180b8:	cmp	r0, #0
   180bc:	bge	181c0 <__assert_fail@plt+0x70d0>
   180c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180c4:	cmp	r0, #0
   180c8:	bge	18154 <__assert_fail@plt+0x7064>
   180cc:	b	180d0 <__assert_fail@plt+0x6fe0>
   180d0:	ldr	r0, [pc, #2192]	; 18968 <__assert_fail@plt+0x7878>
   180d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180d8:	ldr	r2, [fp, #8]
   180dc:	sdiv	r0, r0, r2
   180e0:	cmp	r1, r0
   180e4:	blt	18250 <__assert_fail@plt+0x7160>
   180e8:	b	18264 <__assert_fail@plt+0x7174>
   180ec:	b	180f0 <__assert_fail@plt+0x7000>
   180f0:	ldr	r0, [pc, #2164]	; 1896c <__assert_fail@plt+0x787c>
   180f4:	ldr	r1, [fp, #8]
   180f8:	cmp	r1, r0
   180fc:	blt	18114 <__assert_fail@plt+0x7024>
   18100:	b	18120 <__assert_fail@plt+0x7030>
   18104:	ldr	r0, [fp, #8]
   18108:	movw	r1, #0
   1810c:	cmp	r1, r0
   18110:	bge	18120 <__assert_fail@plt+0x7030>
   18114:	movw	r0, #0
   18118:	str	r0, [sp, #140]	; 0x8c
   1811c:	b	18138 <__assert_fail@plt+0x7048>
   18120:	ldr	r0, [pc, #2112]	; 18968 <__assert_fail@plt+0x7878>
   18124:	ldr	r1, [fp, #8]
   18128:	movw	r2, #0
   1812c:	sub	r1, r2, r1
   18130:	sdiv	r0, r0, r1
   18134:	str	r0, [sp, #140]	; 0x8c
   18138:	ldr	r0, [sp, #140]	; 0x8c
   1813c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18140:	mvn	r2, #0
   18144:	sub	r1, r2, r1
   18148:	cmp	r0, r1
   1814c:	ble	18250 <__assert_fail@plt+0x7160>
   18150:	b	18264 <__assert_fail@plt+0x7174>
   18154:	ldr	r0, [fp, #8]
   18158:	cmn	r0, #1
   1815c:	bne	181a4 <__assert_fail@plt+0x70b4>
   18160:	b	18164 <__assert_fail@plt+0x7074>
   18164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18168:	add	r0, r0, #-2147483648	; 0x80000000
   1816c:	movw	r1, #0
   18170:	cmp	r1, r0
   18174:	blt	18250 <__assert_fail@plt+0x7160>
   18178:	b	18264 <__assert_fail@plt+0x7174>
   1817c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18180:	movw	r1, #0
   18184:	cmp	r1, r0
   18188:	bge	18264 <__assert_fail@plt+0x7174>
   1818c:	ldr	r0, [pc, #2004]	; 18968 <__assert_fail@plt+0x7878>
   18190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18194:	sub	r1, r1, #1
   18198:	cmp	r0, r1
   1819c:	blt	18250 <__assert_fail@plt+0x7160>
   181a0:	b	18264 <__assert_fail@plt+0x7174>
   181a4:	ldr	r0, [pc, #1988]	; 18970 <__assert_fail@plt+0x7880>
   181a8:	ldr	r1, [fp, #8]
   181ac:	sdiv	r0, r0, r1
   181b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181b4:	cmp	r0, r1
   181b8:	blt	18250 <__assert_fail@plt+0x7160>
   181bc:	b	18264 <__assert_fail@plt+0x7174>
   181c0:	ldr	r0, [fp, #8]
   181c4:	cmp	r0, #0
   181c8:	bne	181d0 <__assert_fail@plt+0x70e0>
   181cc:	b	18264 <__assert_fail@plt+0x7174>
   181d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d4:	cmp	r0, #0
   181d8:	bge	18238 <__assert_fail@plt+0x7148>
   181dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181e0:	cmn	r0, #1
   181e4:	bne	1821c <__assert_fail@plt+0x712c>
   181e8:	b	181ec <__assert_fail@plt+0x70fc>
   181ec:	ldr	r0, [fp, #8]
   181f0:	add	r0, r0, #-2147483648	; 0x80000000
   181f4:	movw	r1, #0
   181f8:	cmp	r1, r0
   181fc:	blt	18250 <__assert_fail@plt+0x7160>
   18200:	b	18264 <__assert_fail@plt+0x7174>
   18204:	ldr	r0, [pc, #1884]	; 18968 <__assert_fail@plt+0x7878>
   18208:	ldr	r1, [fp, #8]
   1820c:	sub	r1, r1, #1
   18210:	cmp	r0, r1
   18214:	blt	18250 <__assert_fail@plt+0x7160>
   18218:	b	18264 <__assert_fail@plt+0x7174>
   1821c:	ldr	r0, [pc, #1868]	; 18970 <__assert_fail@plt+0x7880>
   18220:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18224:	sdiv	r0, r0, r1
   18228:	ldr	r1, [fp, #8]
   1822c:	cmp	r0, r1
   18230:	blt	18250 <__assert_fail@plt+0x7160>
   18234:	b	18264 <__assert_fail@plt+0x7174>
   18238:	ldr	r0, [pc, #1832]	; 18968 <__assert_fail@plt+0x7878>
   1823c:	ldr	r1, [fp, #8]
   18240:	sdiv	r0, r0, r1
   18244:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18248:	cmp	r0, r1
   1824c:	bge	18264 <__assert_fail@plt+0x7174>
   18250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18254:	ldr	r1, [fp, #8]
   18258:	mul	r0, r0, r1
   1825c:	str	r0, [fp, #-28]	; 0xffffffe4
   18260:	b	1893c <__assert_fail@plt+0x784c>
   18264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18268:	ldr	r1, [fp, #8]
   1826c:	mul	r0, r0, r1
   18270:	str	r0, [fp, #-28]	; 0xffffffe4
   18274:	b	18940 <__assert_fail@plt+0x7850>
   18278:	ldr	r0, [fp, #8]
   1827c:	cmp	r0, #0
   18280:	bge	18390 <__assert_fail@plt+0x72a0>
   18284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18288:	cmp	r0, #0
   1828c:	bge	18318 <__assert_fail@plt+0x7228>
   18290:	b	182b0 <__assert_fail@plt+0x71c0>
   18294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18298:	ldr	r1, [fp, #8]
   1829c:	mvn	r2, #0
   182a0:	udiv	r1, r2, r1
   182a4:	cmp	r0, r1
   182a8:	bcc	1842c <__assert_fail@plt+0x733c>
   182ac:	b	18440 <__assert_fail@plt+0x7350>
   182b0:	b	182b4 <__assert_fail@plt+0x71c4>
   182b4:	ldr	r0, [pc, #1712]	; 1896c <__assert_fail@plt+0x787c>
   182b8:	ldr	r1, [fp, #8]
   182bc:	cmp	r1, r0
   182c0:	blt	182d8 <__assert_fail@plt+0x71e8>
   182c4:	b	182e4 <__assert_fail@plt+0x71f4>
   182c8:	ldr	r0, [fp, #8]
   182cc:	movw	r1, #0
   182d0:	cmp	r1, r0
   182d4:	bge	182e4 <__assert_fail@plt+0x71f4>
   182d8:	movw	r0, #1
   182dc:	str	r0, [sp, #136]	; 0x88
   182e0:	b	182fc <__assert_fail@plt+0x720c>
   182e4:	ldr	r0, [fp, #8]
   182e8:	movw	r1, #0
   182ec:	sub	r0, r1, r0
   182f0:	mvn	r1, #0
   182f4:	udiv	r0, r1, r0
   182f8:	str	r0, [sp, #136]	; 0x88
   182fc:	ldr	r0, [sp, #136]	; 0x88
   18300:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18304:	mvn	r2, #0
   18308:	sub	r1, r2, r1
   1830c:	cmp	r0, r1
   18310:	bls	1842c <__assert_fail@plt+0x733c>
   18314:	b	18440 <__assert_fail@plt+0x7350>
   18318:	b	1831c <__assert_fail@plt+0x722c>
   1831c:	b	18374 <__assert_fail@plt+0x7284>
   18320:	b	18374 <__assert_fail@plt+0x7284>
   18324:	ldr	r0, [fp, #8]
   18328:	cmn	r0, #1
   1832c:	bne	18374 <__assert_fail@plt+0x7284>
   18330:	b	18334 <__assert_fail@plt+0x7244>
   18334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18338:	add	r0, r0, #0
   1833c:	movw	r1, #0
   18340:	cmp	r1, r0
   18344:	blt	1842c <__assert_fail@plt+0x733c>
   18348:	b	18440 <__assert_fail@plt+0x7350>
   1834c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18350:	movw	r1, #0
   18354:	cmp	r1, r0
   18358:	bge	18440 <__assert_fail@plt+0x7350>
   1835c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18360:	sub	r0, r0, #1
   18364:	mvn	r1, #0
   18368:	cmp	r1, r0
   1836c:	blt	1842c <__assert_fail@plt+0x733c>
   18370:	b	18440 <__assert_fail@plt+0x7350>
   18374:	ldr	r0, [fp, #8]
   18378:	movw	r1, #0
   1837c:	sdiv	r0, r1, r0
   18380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18384:	cmp	r0, r1
   18388:	blt	1842c <__assert_fail@plt+0x733c>
   1838c:	b	18440 <__assert_fail@plt+0x7350>
   18390:	ldr	r0, [fp, #8]
   18394:	cmp	r0, #0
   18398:	bne	183a0 <__assert_fail@plt+0x72b0>
   1839c:	b	18440 <__assert_fail@plt+0x7350>
   183a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a4:	cmp	r0, #0
   183a8:	bge	18414 <__assert_fail@plt+0x7324>
   183ac:	b	183b0 <__assert_fail@plt+0x72c0>
   183b0:	b	183f8 <__assert_fail@plt+0x7308>
   183b4:	b	183f8 <__assert_fail@plt+0x7308>
   183b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183bc:	cmn	r0, #1
   183c0:	bne	183f8 <__assert_fail@plt+0x7308>
   183c4:	b	183c8 <__assert_fail@plt+0x72d8>
   183c8:	ldr	r0, [fp, #8]
   183cc:	add	r0, r0, #0
   183d0:	movw	r1, #0
   183d4:	cmp	r1, r0
   183d8:	blt	1842c <__assert_fail@plt+0x733c>
   183dc:	b	18440 <__assert_fail@plt+0x7350>
   183e0:	ldr	r0, [fp, #8]
   183e4:	sub	r0, r0, #1
   183e8:	mvn	r1, #0
   183ec:	cmp	r1, r0
   183f0:	blt	1842c <__assert_fail@plt+0x733c>
   183f4:	b	18440 <__assert_fail@plt+0x7350>
   183f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183fc:	movw	r1, #0
   18400:	sdiv	r0, r1, r0
   18404:	ldr	r1, [fp, #8]
   18408:	cmp	r0, r1
   1840c:	blt	1842c <__assert_fail@plt+0x733c>
   18410:	b	18440 <__assert_fail@plt+0x7350>
   18414:	ldr	r0, [fp, #8]
   18418:	mvn	r1, #0
   1841c:	udiv	r0, r1, r0
   18420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18424:	cmp	r0, r1
   18428:	bcs	18440 <__assert_fail@plt+0x7350>
   1842c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18430:	ldr	r1, [fp, #8]
   18434:	mul	r0, r0, r1
   18438:	str	r0, [fp, #-28]	; 0xffffffe4
   1843c:	b	1893c <__assert_fail@plt+0x784c>
   18440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18444:	ldr	r1, [fp, #8]
   18448:	mul	r0, r0, r1
   1844c:	str	r0, [fp, #-28]	; 0xffffffe4
   18450:	b	18940 <__assert_fail@plt+0x7850>
   18454:	b	18458 <__assert_fail@plt+0x7368>
   18458:	ldr	r0, [fp, #8]
   1845c:	cmp	r0, #0
   18460:	bge	185e8 <__assert_fail@plt+0x74f8>
   18464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18468:	cmp	r0, #0
   1846c:	bge	18554 <__assert_fail@plt+0x7464>
   18470:	b	18474 <__assert_fail@plt+0x7384>
   18474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18478:	ldr	r1, [fp, #8]
   1847c:	asr	r3, r1, #31
   18480:	mvn	r2, #0
   18484:	mvn	ip, #-2147483648	; 0x80000000
   18488:	str	r0, [sp, #132]	; 0x84
   1848c:	mov	r0, r2
   18490:	str	r1, [sp, #128]	; 0x80
   18494:	mov	r1, ip
   18498:	ldr	r2, [sp, #128]	; 0x80
   1849c:	bl	1d184 <__assert_fail@plt+0xc094>
   184a0:	ldr	r2, [sp, #132]	; 0x84
   184a4:	subs	r0, r2, r0
   184a8:	rscs	r1, r1, r2, asr #31
   184ac:	str	r0, [sp, #124]	; 0x7c
   184b0:	str	r1, [sp, #120]	; 0x78
   184b4:	blt	186c8 <__assert_fail@plt+0x75d8>
   184b8:	b	186dc <__assert_fail@plt+0x75ec>
   184bc:	b	184c0 <__assert_fail@plt+0x73d0>
   184c0:	ldr	r0, [pc, #1188]	; 1896c <__assert_fail@plt+0x787c>
   184c4:	ldr	r1, [fp, #8]
   184c8:	cmp	r1, r0
   184cc:	blt	184e4 <__assert_fail@plt+0x73f4>
   184d0:	b	184f8 <__assert_fail@plt+0x7408>
   184d4:	ldr	r0, [fp, #8]
   184d8:	movw	r1, #0
   184dc:	cmp	r1, r0
   184e0:	bge	184f8 <__assert_fail@plt+0x7408>
   184e4:	mov	r0, #0
   184e8:	mvn	r1, #0
   184ec:	str	r1, [sp, #116]	; 0x74
   184f0:	str	r0, [sp, #112]	; 0x70
   184f4:	b	1852c <__assert_fail@plt+0x743c>
   184f8:	ldr	r0, [fp, #8]
   184fc:	rsb	r0, r0, #0
   18500:	asr	r3, r0, #31
   18504:	mvn	r1, #0
   18508:	mvn	r2, #-2147483648	; 0x80000000
   1850c:	str	r0, [sp, #108]	; 0x6c
   18510:	mov	r0, r1
   18514:	mov	r1, r2
   18518:	ldr	r2, [sp, #108]	; 0x6c
   1851c:	bl	1d184 <__assert_fail@plt+0xc094>
   18520:	str	r0, [sp, #116]	; 0x74
   18524:	str	r1, [sp, #112]	; 0x70
   18528:	b	1852c <__assert_fail@plt+0x743c>
   1852c:	ldr	r0, [sp, #112]	; 0x70
   18530:	ldr	r1, [sp, #116]	; 0x74
   18534:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18538:	mvn	r2, r2
   1853c:	subs	r1, r2, r1
   18540:	rscs	r0, r0, r2, asr #31
   18544:	str	r1, [sp, #104]	; 0x68
   18548:	str	r0, [sp, #100]	; 0x64
   1854c:	bge	186c8 <__assert_fail@plt+0x75d8>
   18550:	b	186dc <__assert_fail@plt+0x75ec>
   18554:	ldr	r0, [fp, #8]
   18558:	cmn	r0, #1
   1855c:	bne	185a8 <__assert_fail@plt+0x74b8>
   18560:	b	18564 <__assert_fail@plt+0x7474>
   18564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18568:	mov	r1, #-2147483648	; 0x80000000
   1856c:	add	r1, r1, r0, asr #31
   18570:	rsbs	r0, r0, #0
   18574:	rscs	r1, r1, #0
   18578:	str	r0, [sp, #96]	; 0x60
   1857c:	str	r1, [sp, #92]	; 0x5c
   18580:	blt	186c8 <__assert_fail@plt+0x75d8>
   18584:	b	186dc <__assert_fail@plt+0x75ec>
   18588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1858c:	movw	r1, #0
   18590:	cmp	r1, r0
   18594:	bge	186dc <__assert_fail@plt+0x75ec>
   18598:	mov	r0, #0
   1859c:	cmp	r0, #0
   185a0:	bne	186c8 <__assert_fail@plt+0x75d8>
   185a4:	b	186dc <__assert_fail@plt+0x75ec>
   185a8:	ldr	r0, [fp, #8]
   185ac:	asr	r3, r0, #31
   185b0:	mov	r1, #0
   185b4:	mov	r2, #-2147483648	; 0x80000000
   185b8:	str	r0, [sp, #88]	; 0x58
   185bc:	mov	r0, r1
   185c0:	mov	r1, r2
   185c4:	ldr	r2, [sp, #88]	; 0x58
   185c8:	bl	1d184 <__assert_fail@plt+0xc094>
   185cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185d0:	subs	r0, r0, r2
   185d4:	sbcs	r1, r1, r2, asr #31
   185d8:	str	r0, [sp, #84]	; 0x54
   185dc:	str	r1, [sp, #80]	; 0x50
   185e0:	blt	186c8 <__assert_fail@plt+0x75d8>
   185e4:	b	186dc <__assert_fail@plt+0x75ec>
   185e8:	ldr	r0, [fp, #8]
   185ec:	cmp	r0, #0
   185f0:	bne	185f8 <__assert_fail@plt+0x7508>
   185f4:	b	186dc <__assert_fail@plt+0x75ec>
   185f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185fc:	cmp	r0, #0
   18600:	bge	18688 <__assert_fail@plt+0x7598>
   18604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18608:	cmn	r0, #1
   1860c:	bne	18648 <__assert_fail@plt+0x7558>
   18610:	b	18614 <__assert_fail@plt+0x7524>
   18614:	ldr	r0, [fp, #8]
   18618:	mov	r1, #-2147483648	; 0x80000000
   1861c:	add	r1, r1, r0, asr #31
   18620:	rsbs	r0, r0, #0
   18624:	rscs	r1, r1, #0
   18628:	str	r0, [sp, #76]	; 0x4c
   1862c:	str	r1, [sp, #72]	; 0x48
   18630:	blt	186c8 <__assert_fail@plt+0x75d8>
   18634:	b	186dc <__assert_fail@plt+0x75ec>
   18638:	mov	r0, #0
   1863c:	cmp	r0, #0
   18640:	bne	186c8 <__assert_fail@plt+0x75d8>
   18644:	b	186dc <__assert_fail@plt+0x75ec>
   18648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1864c:	asr	r3, r0, #31
   18650:	mov	r1, #0
   18654:	mov	r2, #-2147483648	; 0x80000000
   18658:	str	r0, [sp, #68]	; 0x44
   1865c:	mov	r0, r1
   18660:	mov	r1, r2
   18664:	ldr	r2, [sp, #68]	; 0x44
   18668:	bl	1d184 <__assert_fail@plt+0xc094>
   1866c:	ldr	r2, [fp, #8]
   18670:	subs	r0, r0, r2
   18674:	sbcs	r1, r1, r2, asr #31
   18678:	str	r0, [sp, #64]	; 0x40
   1867c:	str	r1, [sp, #60]	; 0x3c
   18680:	blt	186c8 <__assert_fail@plt+0x75d8>
   18684:	b	186dc <__assert_fail@plt+0x75ec>
   18688:	ldr	r0, [fp, #8]
   1868c:	asr	r3, r0, #31
   18690:	mvn	r1, #0
   18694:	mvn	r2, #-2147483648	; 0x80000000
   18698:	str	r0, [sp, #56]	; 0x38
   1869c:	mov	r0, r1
   186a0:	mov	r1, r2
   186a4:	ldr	r2, [sp, #56]	; 0x38
   186a8:	bl	1d184 <__assert_fail@plt+0xc094>
   186ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186b0:	subs	r0, r0, r2
   186b4:	sbcs	r1, r1, r2, asr #31
   186b8:	str	r0, [sp, #52]	; 0x34
   186bc:	str	r1, [sp, #48]	; 0x30
   186c0:	bge	186dc <__assert_fail@plt+0x75ec>
   186c4:	b	186c8 <__assert_fail@plt+0x75d8>
   186c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186cc:	ldr	r1, [fp, #8]
   186d0:	mul	r0, r0, r1
   186d4:	str	r0, [fp, #-28]	; 0xffffffe4
   186d8:	b	1893c <__assert_fail@plt+0x784c>
   186dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186e0:	ldr	r1, [fp, #8]
   186e4:	mul	r0, r0, r1
   186e8:	str	r0, [fp, #-28]	; 0xffffffe4
   186ec:	b	18940 <__assert_fail@plt+0x7850>
   186f0:	ldr	r0, [fp, #8]
   186f4:	cmp	r0, #0
   186f8:	bge	18858 <__assert_fail@plt+0x7768>
   186fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18700:	cmp	r0, #0
   18704:	bge	187e0 <__assert_fail@plt+0x76f0>
   18708:	b	18750 <__assert_fail@plt+0x7660>
   1870c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18710:	ldr	r1, [fp, #8]
   18714:	asr	r3, r1, #31
   18718:	mvn	r2, #0
   1871c:	str	r0, [sp, #44]	; 0x2c
   18720:	mov	r0, r2
   18724:	str	r1, [sp, #40]	; 0x28
   18728:	mov	r1, r2
   1872c:	ldr	r2, [sp, #40]	; 0x28
   18730:	bl	1d258 <__assert_fail@plt+0xc168>
   18734:	ldr	r2, [sp, #44]	; 0x2c
   18738:	subs	r0, r2, r0
   1873c:	rscs	r1, r1, r2, asr #31
   18740:	str	r0, [sp, #36]	; 0x24
   18744:	str	r1, [sp, #32]
   18748:	bcc	18914 <__assert_fail@plt+0x7824>
   1874c:	b	18928 <__assert_fail@plt+0x7838>
   18750:	b	18754 <__assert_fail@plt+0x7664>
   18754:	ldr	r0, [pc, #528]	; 1896c <__assert_fail@plt+0x787c>
   18758:	ldr	r1, [fp, #8]
   1875c:	cmp	r1, r0
   18760:	blt	18778 <__assert_fail@plt+0x7688>
   18764:	b	1878c <__assert_fail@plt+0x769c>
   18768:	ldr	r0, [fp, #8]
   1876c:	movw	r1, #0
   18770:	cmp	r1, r0
   18774:	bge	1878c <__assert_fail@plt+0x769c>
   18778:	mov	r0, #1
   1877c:	mvn	r1, #0
   18780:	str	r1, [sp, #28]
   18784:	str	r0, [sp, #24]
   18788:	b	187b8 <__assert_fail@plt+0x76c8>
   1878c:	ldr	r0, [fp, #8]
   18790:	rsb	r0, r0, #0
   18794:	asr	r3, r0, #31
   18798:	mvn	r1, #0
   1879c:	str	r0, [sp, #20]
   187a0:	mov	r0, r1
   187a4:	ldr	r2, [sp, #20]
   187a8:	bl	1d258 <__assert_fail@plt+0xc168>
   187ac:	str	r0, [sp, #28]
   187b0:	str	r1, [sp, #24]
   187b4:	b	187b8 <__assert_fail@plt+0x76c8>
   187b8:	ldr	r0, [sp, #24]
   187bc:	ldr	r1, [sp, #28]
   187c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187c4:	mvn	r2, r2
   187c8:	subs	r1, r2, r1
   187cc:	rscs	r0, r0, r2, asr #31
   187d0:	str	r1, [sp, #16]
   187d4:	str	r0, [sp, #12]
   187d8:	bcs	18914 <__assert_fail@plt+0x7824>
   187dc:	b	18928 <__assert_fail@plt+0x7838>
   187e0:	b	187e4 <__assert_fail@plt+0x76f4>
   187e4:	b	1883c <__assert_fail@plt+0x774c>
   187e8:	b	1883c <__assert_fail@plt+0x774c>
   187ec:	ldr	r0, [fp, #8]
   187f0:	cmn	r0, #1
   187f4:	bne	1883c <__assert_fail@plt+0x774c>
   187f8:	b	187fc <__assert_fail@plt+0x770c>
   187fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18800:	add	r0, r0, #0
   18804:	movw	r1, #0
   18808:	cmp	r1, r0
   1880c:	blt	18914 <__assert_fail@plt+0x7824>
   18810:	b	18928 <__assert_fail@plt+0x7838>
   18814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18818:	movw	r1, #0
   1881c:	cmp	r1, r0
   18820:	bge	18928 <__assert_fail@plt+0x7838>
   18824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18828:	sub	r0, r0, #1
   1882c:	mvn	r1, #0
   18830:	cmp	r1, r0
   18834:	blt	18914 <__assert_fail@plt+0x7824>
   18838:	b	18928 <__assert_fail@plt+0x7838>
   1883c:	ldr	r0, [fp, #8]
   18840:	movw	r1, #0
   18844:	sdiv	r0, r1, r0
   18848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1884c:	cmp	r0, r1
   18850:	blt	18914 <__assert_fail@plt+0x7824>
   18854:	b	18928 <__assert_fail@plt+0x7838>
   18858:	ldr	r0, [fp, #8]
   1885c:	cmp	r0, #0
   18860:	bne	18868 <__assert_fail@plt+0x7778>
   18864:	b	18928 <__assert_fail@plt+0x7838>
   18868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1886c:	cmp	r0, #0
   18870:	bge	188dc <__assert_fail@plt+0x77ec>
   18874:	b	18878 <__assert_fail@plt+0x7788>
   18878:	b	188c0 <__assert_fail@plt+0x77d0>
   1887c:	b	188c0 <__assert_fail@plt+0x77d0>
   18880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18884:	cmn	r0, #1
   18888:	bne	188c0 <__assert_fail@plt+0x77d0>
   1888c:	b	18890 <__assert_fail@plt+0x77a0>
   18890:	ldr	r0, [fp, #8]
   18894:	add	r0, r0, #0
   18898:	movw	r1, #0
   1889c:	cmp	r1, r0
   188a0:	blt	18914 <__assert_fail@plt+0x7824>
   188a4:	b	18928 <__assert_fail@plt+0x7838>
   188a8:	ldr	r0, [fp, #8]
   188ac:	sub	r0, r0, #1
   188b0:	mvn	r1, #0
   188b4:	cmp	r1, r0
   188b8:	blt	18914 <__assert_fail@plt+0x7824>
   188bc:	b	18928 <__assert_fail@plt+0x7838>
   188c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188c4:	movw	r1, #0
   188c8:	sdiv	r0, r1, r0
   188cc:	ldr	r1, [fp, #8]
   188d0:	cmp	r0, r1
   188d4:	blt	18914 <__assert_fail@plt+0x7824>
   188d8:	b	18928 <__assert_fail@plt+0x7838>
   188dc:	ldr	r0, [fp, #8]
   188e0:	asr	r3, r0, #31
   188e4:	mvn	r1, #0
   188e8:	str	r0, [sp, #8]
   188ec:	mov	r0, r1
   188f0:	ldr	r2, [sp, #8]
   188f4:	bl	1d258 <__assert_fail@plt+0xc168>
   188f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188fc:	subs	r0, r0, r2
   18900:	sbcs	r1, r1, r2, asr #31
   18904:	str	r0, [sp, #4]
   18908:	str	r1, [sp]
   1890c:	bcs	18928 <__assert_fail@plt+0x7838>
   18910:	b	18914 <__assert_fail@plt+0x7824>
   18914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18918:	ldr	r1, [fp, #8]
   1891c:	mul	r0, r0, r1
   18920:	str	r0, [fp, #-28]	; 0xffffffe4
   18924:	b	1893c <__assert_fail@plt+0x784c>
   18928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1892c:	ldr	r1, [fp, #8]
   18930:	mul	r0, r0, r1
   18934:	str	r0, [fp, #-28]	; 0xffffffe4
   18938:	b	18940 <__assert_fail@plt+0x7850>
   1893c:	bl	18b18 <__assert_fail@plt+0x7a28>
   18940:	ldr	r0, [fp, #-4]
   18944:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18948:	bl	15dd4 <__assert_fail@plt+0x4ce4>
   1894c:	str	r0, [fp, #-4]
   18950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18954:	ldr	r1, [fp, #-8]
   18958:	str	r0, [r1]
   1895c:	ldr	r0, [fp, #-4]
   18960:	mov	sp, fp
   18964:	pop	{fp, pc}
   18968:	svcvc	0x00ffffff
   1896c:	andhi	r0, r0, r1
   18970:	andhi	r0, r0, r0
   18974:			; <UNDEFINED> instruction: 0xffff8000
   18978:	push	{fp, lr}
   1897c:	mov	fp, sp
   18980:	sub	sp, sp, #8
   18984:	str	r0, [sp, #4]
   18988:	ldr	r0, [sp, #4]
   1898c:	movw	r1, #1
   18990:	bl	1899c <__assert_fail@plt+0x78ac>
   18994:	mov	sp, fp
   18998:	pop	{fp, pc}
   1899c:	push	{fp, lr}
   189a0:	mov	fp, sp
   189a4:	sub	sp, sp, #8
   189a8:	str	r0, [sp, #4]
   189ac:	str	r1, [sp]
   189b0:	ldr	r0, [sp, #4]
   189b4:	ldr	r1, [sp]
   189b8:	bl	1adb4 <__assert_fail@plt+0x9cc4>
   189bc:	bl	15d60 <__assert_fail@plt+0x4c70>
   189c0:	mov	sp, fp
   189c4:	pop	{fp, pc}
   189c8:	push	{fp, lr}
   189cc:	mov	fp, sp
   189d0:	sub	sp, sp, #8
   189d4:	str	r0, [sp, #4]
   189d8:	ldr	r0, [sp, #4]
   189dc:	movw	r1, #1
   189e0:	bl	189ec <__assert_fail@plt+0x78fc>
   189e4:	mov	sp, fp
   189e8:	pop	{fp, pc}
   189ec:	push	{fp, lr}
   189f0:	mov	fp, sp
   189f4:	sub	sp, sp, #8
   189f8:	str	r0, [sp, #4]
   189fc:	str	r1, [sp]
   18a00:	ldr	r0, [sp, #4]
   18a04:	ldr	r1, [sp]
   18a08:	bl	1b9e0 <__assert_fail@plt+0xa8f0>
   18a0c:	bl	15d60 <__assert_fail@plt+0x4c70>
   18a10:	mov	sp, fp
   18a14:	pop	{fp, pc}
   18a18:	push	{fp, lr}
   18a1c:	mov	fp, sp
   18a20:	sub	sp, sp, #16
   18a24:	str	r0, [fp, #-4]
   18a28:	str	r1, [sp, #8]
   18a2c:	ldr	r0, [sp, #8]
   18a30:	bl	15d3c <__assert_fail@plt+0x4c4c>
   18a34:	ldr	r1, [fp, #-4]
   18a38:	ldr	r2, [sp, #8]
   18a3c:	str	r0, [sp, #4]
   18a40:	bl	10ec8 <memcpy@plt>
   18a44:	ldr	r0, [sp, #4]
   18a48:	mov	sp, fp
   18a4c:	pop	{fp, pc}
   18a50:	push	{fp, lr}
   18a54:	mov	fp, sp
   18a58:	sub	sp, sp, #16
   18a5c:	str	r0, [fp, #-4]
   18a60:	str	r1, [sp, #8]
   18a64:	ldr	r0, [sp, #8]
   18a68:	bl	15d90 <__assert_fail@plt+0x4ca0>
   18a6c:	ldr	r1, [fp, #-4]
   18a70:	ldr	r2, [sp, #8]
   18a74:	str	r0, [sp, #4]
   18a78:	bl	10ec8 <memcpy@plt>
   18a7c:	ldr	r0, [sp, #4]
   18a80:	mov	sp, fp
   18a84:	pop	{fp, pc}
   18a88:	push	{fp, lr}
   18a8c:	mov	fp, sp
   18a90:	sub	sp, sp, #16
   18a94:	str	r0, [fp, #-4]
   18a98:	str	r1, [sp, #8]
   18a9c:	ldr	r0, [sp, #8]
   18aa0:	add	r0, r0, #1
   18aa4:	bl	15d90 <__assert_fail@plt+0x4ca0>
   18aa8:	str	r0, [sp, #4]
   18aac:	ldr	r0, [sp, #4]
   18ab0:	ldr	r1, [sp, #8]
   18ab4:	add	r0, r0, r1
   18ab8:	movw	r1, #0
   18abc:	strb	r1, [r0]
   18ac0:	ldr	r0, [sp, #4]
   18ac4:	ldr	r1, [fp, #-4]
   18ac8:	ldr	r2, [sp, #8]
   18acc:	str	r0, [sp]
   18ad0:	bl	10ec8 <memcpy@plt>
   18ad4:	ldr	r0, [sp]
   18ad8:	mov	sp, fp
   18adc:	pop	{fp, pc}
   18ae0:	push	{fp, lr}
   18ae4:	mov	fp, sp
   18ae8:	sub	sp, sp, #8
   18aec:	str	r0, [sp, #4]
   18af0:	ldr	r0, [sp, #4]
   18af4:	ldr	r1, [sp, #4]
   18af8:	str	r0, [sp]
   18afc:	mov	r0, r1
   18b00:	bl	10fdc <strlen@plt>
   18b04:	add	r1, r0, #1
   18b08:	ldr	r0, [sp]
   18b0c:	bl	18a18 <__assert_fail@plt+0x7928>
   18b10:	mov	sp, fp
   18b14:	pop	{fp, pc}
   18b18:	push	{fp, lr}
   18b1c:	mov	fp, sp
   18b20:	sub	sp, sp, #8
   18b24:	movw	r0, #61688	; 0xf0f8
   18b28:	movt	r0, #2
   18b2c:	ldr	r0, [r0]
   18b30:	movw	r1, #57708	; 0xe16c
   18b34:	movt	r1, #1
   18b38:	str	r0, [sp, #4]
   18b3c:	mov	r0, r1
   18b40:	bl	10fd0 <gettext@plt>
   18b44:	ldr	r1, [sp, #4]
   18b48:	str	r0, [sp]
   18b4c:	mov	r0, r1
   18b50:	movw	r1, #0
   18b54:	movw	r2, #56655	; 0xdd4f
   18b58:	movt	r2, #1
   18b5c:	ldr	r3, [sp]
   18b60:	bl	10f64 <error@plt>
   18b64:	bl	110e4 <abort@plt>
   18b68:	push	{fp, lr}
   18b6c:	mov	fp, sp
   18b70:	sub	sp, sp, #8
   18b74:	str	r0, [sp, #4]
   18b78:	ldr	r0, [sp, #4]
   18b7c:	bl	1af64 <__assert_fail@plt+0x9e74>
   18b80:	str	r0, [sp]
   18b84:	ldr	r0, [sp]
   18b88:	movw	lr, #0
   18b8c:	cmp	r0, lr
   18b90:	bne	18ba8 <__assert_fail@plt+0x7ab8>
   18b94:	bl	11000 <__errno_location@plt>
   18b98:	ldr	r0, [r0]
   18b9c:	cmp	r0, #12
   18ba0:	bne	18ba8 <__assert_fail@plt+0x7ab8>
   18ba4:	bl	18b18 <__assert_fail@plt+0x7a28>
   18ba8:	ldr	r0, [sp]
   18bac:	mov	sp, fp
   18bb0:	pop	{fp, pc}
   18bb4:	push	{fp, lr}
   18bb8:	mov	fp, sp
   18bbc:	sub	sp, sp, #88	; 0x58
   18bc0:	ldr	ip, [fp, #8]
   18bc4:	str	r0, [fp, #-8]
   18bc8:	str	r1, [fp, #-12]
   18bcc:	str	r2, [fp, #-16]
   18bd0:	str	r3, [fp, #-20]	; 0xffffffec
   18bd4:	movw	r0, #0
   18bd8:	str	r0, [sp, #44]	; 0x2c
   18bdc:	ldr	r1, [fp, #-16]
   18be0:	cmp	r0, r1
   18be4:	str	ip, [sp, #20]
   18be8:	bgt	18bfc <__assert_fail@plt+0x7b0c>
   18bec:	ldr	r0, [fp, #-16]
   18bf0:	cmp	r0, #36	; 0x24
   18bf4:	bgt	18bfc <__assert_fail@plt+0x7b0c>
   18bf8:	b	18c1c <__assert_fail@plt+0x7b2c>
   18bfc:	movw	r0, #57725	; 0xe17d
   18c00:	movt	r0, #1
   18c04:	movw	r1, #57763	; 0xe1a3
   18c08:	movt	r1, #1
   18c0c:	movw	r2, #85	; 0x55
   18c10:	movw	r3, #57779	; 0xe1b3
   18c14:	movt	r3, #1
   18c18:	bl	110f0 <__assert_fail@plt>
   18c1c:	ldr	r0, [fp, #-12]
   18c20:	movw	r1, #0
   18c24:	cmp	r0, r1
   18c28:	beq	18c38 <__assert_fail@plt+0x7b48>
   18c2c:	ldr	r0, [fp, #-12]
   18c30:	str	r0, [sp, #16]
   18c34:	b	18c44 <__assert_fail@plt+0x7b54>
   18c38:	sub	r0, fp, #24
   18c3c:	str	r0, [sp, #16]
   18c40:	b	18c44 <__assert_fail@plt+0x7b54>
   18c44:	ldr	r0, [sp, #16]
   18c48:	str	r0, [fp, #-28]	; 0xffffffe4
   18c4c:	bl	11000 <__errno_location@plt>
   18c50:	movw	lr, #0
   18c54:	str	lr, [r0]
   18c58:	ldr	r0, [fp, #-8]
   18c5c:	str	r0, [sp, #40]	; 0x28
   18c60:	ldr	r0, [sp, #40]	; 0x28
   18c64:	ldrb	r0, [r0]
   18c68:	strb	r0, [sp, #39]	; 0x27
   18c6c:	bl	10fb8 <__ctype_b_loc@plt>
   18c70:	ldr	r0, [r0]
   18c74:	ldrb	lr, [sp, #39]	; 0x27
   18c78:	mov	r1, lr
   18c7c:	add	r0, r0, lr, lsl #1
   18c80:	ldrh	r0, [r0]
   18c84:	and	r0, r0, #8192	; 0x2000
   18c88:	cmp	r0, #0
   18c8c:	str	r1, [sp, #12]
   18c90:	beq	18cac <__assert_fail@plt+0x7bbc>
   18c94:	ldr	r0, [sp, #40]	; 0x28
   18c98:	add	r1, r0, #1
   18c9c:	str	r1, [sp, #40]	; 0x28
   18ca0:	ldrb	r0, [r0, #1]
   18ca4:	strb	r0, [sp, #39]	; 0x27
   18ca8:	b	18c6c <__assert_fail@plt+0x7b7c>
   18cac:	ldrb	r0, [sp, #39]	; 0x27
   18cb0:	cmp	r0, #45	; 0x2d
   18cb4:	bne	18cc4 <__assert_fail@plt+0x7bd4>
   18cb8:	movw	r0, #4
   18cbc:	str	r0, [fp, #-4]
   18cc0:	b	19240 <__assert_fail@plt+0x8150>
   18cc4:	ldr	r0, [fp, #-8]
   18cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ccc:	ldr	r2, [fp, #-16]
   18cd0:	bl	11030 <strtoumax@plt>
   18cd4:	str	r1, [fp, #-36]	; 0xffffffdc
   18cd8:	str	r0, [fp, #-40]	; 0xffffffd8
   18cdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18ce0:	ldr	r0, [r0]
   18ce4:	ldr	r1, [fp, #-8]
   18ce8:	cmp	r0, r1
   18cec:	bne	18d58 <__assert_fail@plt+0x7c68>
   18cf0:	ldr	r0, [fp, #8]
   18cf4:	movw	r1, #0
   18cf8:	cmp	r0, r1
   18cfc:	beq	18d48 <__assert_fail@plt+0x7c58>
   18d00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d04:	ldr	r0, [r0]
   18d08:	ldrb	r0, [r0]
   18d0c:	cmp	r0, #0
   18d10:	beq	18d48 <__assert_fail@plt+0x7c58>
   18d14:	ldr	r0, [fp, #8]
   18d18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d1c:	ldr	r1, [r1]
   18d20:	ldrb	r1, [r1]
   18d24:	bl	10fe8 <strchr@plt>
   18d28:	movw	r1, #0
   18d2c:	cmp	r0, r1
   18d30:	beq	18d48 <__assert_fail@plt+0x7c58>
   18d34:	mov	r0, #0
   18d38:	str	r0, [fp, #-36]	; 0xffffffdc
   18d3c:	mov	r0, #1
   18d40:	str	r0, [fp, #-40]	; 0xffffffd8
   18d44:	b	18d54 <__assert_fail@plt+0x7c64>
   18d48:	movw	r0, #4
   18d4c:	str	r0, [fp, #-4]
   18d50:	b	19240 <__assert_fail@plt+0x8150>
   18d54:	b	18d90 <__assert_fail@plt+0x7ca0>
   18d58:	bl	11000 <__errno_location@plt>
   18d5c:	ldr	r0, [r0]
   18d60:	cmp	r0, #0
   18d64:	beq	18d8c <__assert_fail@plt+0x7c9c>
   18d68:	bl	11000 <__errno_location@plt>
   18d6c:	ldr	r0, [r0]
   18d70:	cmp	r0, #34	; 0x22
   18d74:	beq	18d84 <__assert_fail@plt+0x7c94>
   18d78:	movw	r0, #4
   18d7c:	str	r0, [fp, #-4]
   18d80:	b	19240 <__assert_fail@plt+0x8150>
   18d84:	movw	r0, #1
   18d88:	str	r0, [sp, #44]	; 0x2c
   18d8c:	b	18d90 <__assert_fail@plt+0x7ca0>
   18d90:	ldr	r0, [fp, #8]
   18d94:	movw	r1, #0
   18d98:	cmp	r0, r1
   18d9c:	bne	18dc0 <__assert_fail@plt+0x7cd0>
   18da0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18da4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18da8:	ldr	r2, [fp, #-20]	; 0xffffffec
   18dac:	str	r1, [r2, #4]
   18db0:	str	r0, [r2]
   18db4:	ldr	r0, [sp, #44]	; 0x2c
   18db8:	str	r0, [fp, #-4]
   18dbc:	b	19240 <__assert_fail@plt+0x8150>
   18dc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18dc4:	ldr	r0, [r0]
   18dc8:	ldrb	r0, [r0]
   18dcc:	cmp	r0, #0
   18dd0:	beq	19224 <__assert_fail@plt+0x8134>
   18dd4:	movw	r0, #1024	; 0x400
   18dd8:	str	r0, [sp, #32]
   18ddc:	movw	r0, #1
   18de0:	str	r0, [sp, #28]
   18de4:	ldr	r0, [fp, #8]
   18de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18dec:	ldr	r1, [r1]
   18df0:	ldrb	r1, [r1]
   18df4:	bl	10fe8 <strchr@plt>
   18df8:	movw	r1, #0
   18dfc:	cmp	r0, r1
   18e00:	bne	18e28 <__assert_fail@plt+0x7d38>
   18e04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18e0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18e10:	str	r1, [r2, #4]
   18e14:	str	r0, [r2]
   18e18:	ldr	r0, [sp, #44]	; 0x2c
   18e1c:	orr	r0, r0, #2
   18e20:	str	r0, [fp, #-4]
   18e24:	b	19240 <__assert_fail@plt+0x8150>
   18e28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e2c:	ldr	r0, [r0]
   18e30:	ldrb	r0, [r0]
   18e34:	sub	r0, r0, #69	; 0x45
   18e38:	cmp	r0, #47	; 0x2f
   18e3c:	str	r0, [sp, #8]
   18e40:	bhi	18fac <__assert_fail@plt+0x7ebc>
   18e44:	add	r0, pc, #8
   18e48:	ldr	r1, [sp, #8]
   18e4c:	ldr	r0, [r0, r1, lsl #2]
   18e50:	mov	pc, r0
   18e54:	andeq	r8, r1, r4, lsl pc
   18e58:	andeq	r8, r1, ip, lsr #31
   18e5c:	andeq	r8, r1, r4, lsl pc
   18e60:	andeq	r8, r1, ip, lsr #31
   18e64:	andeq	r8, r1, ip, lsr #31
   18e68:	andeq	r8, r1, ip, lsr #31
   18e6c:	andeq	r8, r1, r4, lsl pc
   18e70:	andeq	r8, r1, ip, lsr #31
   18e74:	andeq	r8, r1, r4, lsl pc
   18e78:	andeq	r8, r1, ip, lsr #31
   18e7c:	andeq	r8, r1, ip, lsr #31
   18e80:	andeq	r8, r1, r4, lsl pc
   18e84:	andeq	r8, r1, ip, lsr #31
   18e88:	andeq	r8, r1, ip, lsr #31
   18e8c:	andeq	r8, r1, ip, lsr #31
   18e90:	andeq	r8, r1, r4, lsl pc
   18e94:	andeq	r8, r1, ip, lsr #31
   18e98:	andeq	r8, r1, ip, lsr #31
   18e9c:	andeq	r8, r1, ip, lsr #31
   18ea0:	andeq	r8, r1, ip, lsr #31
   18ea4:	andeq	r8, r1, r4, lsl pc
   18ea8:	andeq	r8, r1, r4, lsl pc
   18eac:	andeq	r8, r1, ip, lsr #31
   18eb0:	andeq	r8, r1, ip, lsr #31
   18eb4:	andeq	r8, r1, ip, lsr #31
   18eb8:	andeq	r8, r1, ip, lsr #31
   18ebc:	andeq	r8, r1, ip, lsr #31
   18ec0:	andeq	r8, r1, ip, lsr #31
   18ec4:	andeq	r8, r1, ip, lsr #31
   18ec8:	andeq	r8, r1, ip, lsr #31
   18ecc:	andeq	r8, r1, ip, lsr #31
   18ed0:	andeq	r8, r1, ip, lsr #31
   18ed4:	andeq	r8, r1, ip, lsr #31
   18ed8:	andeq	r8, r1, ip, lsr #31
   18edc:	andeq	r8, r1, r4, lsl pc
   18ee0:	andeq	r8, r1, ip, lsr #31
   18ee4:	andeq	r8, r1, ip, lsr #31
   18ee8:	andeq	r8, r1, ip, lsr #31
   18eec:	andeq	r8, r1, r4, lsl pc
   18ef0:	andeq	r8, r1, ip, lsr #31
   18ef4:	andeq	r8, r1, r4, lsl pc
   18ef8:	andeq	r8, r1, ip, lsr #31
   18efc:	andeq	r8, r1, ip, lsr #31
   18f00:	andeq	r8, r1, ip, lsr #31
   18f04:	andeq	r8, r1, ip, lsr #31
   18f08:	andeq	r8, r1, ip, lsr #31
   18f0c:	andeq	r8, r1, ip, lsr #31
   18f10:	andeq	r8, r1, r4, lsl pc
   18f14:	ldr	r0, [fp, #8]
   18f18:	movw	r1, #48	; 0x30
   18f1c:	bl	10fe8 <strchr@plt>
   18f20:	movw	r1, #0
   18f24:	cmp	r0, r1
   18f28:	beq	18fa8 <__assert_fail@plt+0x7eb8>
   18f2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f30:	ldr	r0, [r0]
   18f34:	ldrb	r0, [r0, #1]
   18f38:	mov	r1, r0
   18f3c:	cmp	r0, #66	; 0x42
   18f40:	str	r1, [sp, #4]
   18f44:	beq	18f90 <__assert_fail@plt+0x7ea0>
   18f48:	b	18f4c <__assert_fail@plt+0x7e5c>
   18f4c:	ldr	r0, [sp, #4]
   18f50:	cmp	r0, #68	; 0x44
   18f54:	beq	18f90 <__assert_fail@plt+0x7ea0>
   18f58:	b	18f5c <__assert_fail@plt+0x7e6c>
   18f5c:	ldr	r0, [sp, #4]
   18f60:	cmp	r0, #105	; 0x69
   18f64:	bne	18fa4 <__assert_fail@plt+0x7eb4>
   18f68:	b	18f6c <__assert_fail@plt+0x7e7c>
   18f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f70:	ldr	r0, [r0]
   18f74:	ldrb	r0, [r0, #2]
   18f78:	cmp	r0, #66	; 0x42
   18f7c:	bne	18f8c <__assert_fail@plt+0x7e9c>
   18f80:	ldr	r0, [sp, #28]
   18f84:	add	r0, r0, #2
   18f88:	str	r0, [sp, #28]
   18f8c:	b	18fa4 <__assert_fail@plt+0x7eb4>
   18f90:	movw	r0, #1000	; 0x3e8
   18f94:	str	r0, [sp, #32]
   18f98:	ldr	r0, [sp, #28]
   18f9c:	add	r0, r0, #1
   18fa0:	str	r0, [sp, #28]
   18fa4:	b	18fa8 <__assert_fail@plt+0x7eb8>
   18fa8:	b	18fac <__assert_fail@plt+0x7ebc>
   18fac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18fb0:	ldr	r0, [r0]
   18fb4:	ldrb	r0, [r0]
   18fb8:	sub	r0, r0, #66	; 0x42
   18fbc:	cmp	r0, #53	; 0x35
   18fc0:	str	r0, [sp]
   18fc4:	bhi	191b8 <__assert_fail@plt+0x80c8>
   18fc8:	add	r0, pc, #8
   18fcc:	ldr	r1, [sp]
   18fd0:	ldr	r0, [r0, r1, lsl #2]
   18fd4:	mov	pc, r0
   18fd8:	andeq	r9, r1, r4, asr #1
   18fdc:			; <UNDEFINED> instruction: 0x000191b8
   18fe0:			; <UNDEFINED> instruction: 0x000191b8
   18fe4:	andeq	r9, r1, r4, ror #1
   18fe8:			; <UNDEFINED> instruction: 0x000191b8
   18fec:	strdeq	r9, [r1], -ip
   18ff0:			; <UNDEFINED> instruction: 0x000191b8
   18ff4:			; <UNDEFINED> instruction: 0x000191b8
   18ff8:			; <UNDEFINED> instruction: 0x000191b8
   18ffc:	andeq	r9, r1, r4, lsl r1
   19000:			; <UNDEFINED> instruction: 0x000191b8
   19004:	andeq	r9, r1, ip, lsr #2
   19008:			; <UNDEFINED> instruction: 0x000191b8
   1900c:			; <UNDEFINED> instruction: 0x000191b8
   19010:	andeq	r9, r1, r4, asr #2
   19014:			; <UNDEFINED> instruction: 0x000191b8
   19018:			; <UNDEFINED> instruction: 0x000191b8
   1901c:			; <UNDEFINED> instruction: 0x000191b8
   19020:	andeq	r9, r1, ip, asr r1
   19024:			; <UNDEFINED> instruction: 0x000191b8
   19028:			; <UNDEFINED> instruction: 0x000191b8
   1902c:			; <UNDEFINED> instruction: 0x000191b8
   19030:			; <UNDEFINED> instruction: 0x000191b8
   19034:	andeq	r9, r1, r8, lsl #3
   19038:	andeq	r9, r1, r0, lsr #3
   1903c:			; <UNDEFINED> instruction: 0x000191b8
   19040:			; <UNDEFINED> instruction: 0x000191b8
   19044:			; <UNDEFINED> instruction: 0x000191b8
   19048:			; <UNDEFINED> instruction: 0x000191b8
   1904c:			; <UNDEFINED> instruction: 0x000191b8
   19050:			; <UNDEFINED> instruction: 0x000191b8
   19054:			; <UNDEFINED> instruction: 0x000191b8
   19058:	strheq	r9, [r1], -r0
   1905c:	ldrdeq	r9, [r1], -r8
   19060:			; <UNDEFINED> instruction: 0x000191b8
   19064:			; <UNDEFINED> instruction: 0x000191b8
   19068:			; <UNDEFINED> instruction: 0x000191b8
   1906c:	strdeq	r9, [r1], -ip
   19070:			; <UNDEFINED> instruction: 0x000191b8
   19074:			; <UNDEFINED> instruction: 0x000191b8
   19078:			; <UNDEFINED> instruction: 0x000191b8
   1907c:	andeq	r9, r1, r4, lsl r1
   19080:			; <UNDEFINED> instruction: 0x000191b8
   19084:	andeq	r9, r1, ip, lsr #2
   19088:			; <UNDEFINED> instruction: 0x000191b8
   1908c:			; <UNDEFINED> instruction: 0x000191b8
   19090:			; <UNDEFINED> instruction: 0x000191b8
   19094:			; <UNDEFINED> instruction: 0x000191b8
   19098:			; <UNDEFINED> instruction: 0x000191b8
   1909c:			; <UNDEFINED> instruction: 0x000191b8
   190a0:	andeq	r9, r1, ip, asr r1
   190a4:			; <UNDEFINED> instruction: 0x000191b8
   190a8:			; <UNDEFINED> instruction: 0x000191b8
   190ac:	andeq	r9, r1, r4, ror r1
   190b0:	sub	r0, fp, #40	; 0x28
   190b4:	movw	r1, #512	; 0x200
   190b8:	bl	1924c <__assert_fail@plt+0x815c>
   190bc:	str	r0, [sp, #24]
   190c0:	b	191dc <__assert_fail@plt+0x80ec>
   190c4:	sub	r0, fp, #40	; 0x28
   190c8:	movw	r1, #1024	; 0x400
   190cc:	bl	1924c <__assert_fail@plt+0x815c>
   190d0:	str	r0, [sp, #24]
   190d4:	b	191dc <__assert_fail@plt+0x80ec>
   190d8:	movw	r0, #0
   190dc:	str	r0, [sp, #24]
   190e0:	b	191dc <__assert_fail@plt+0x80ec>
   190e4:	ldr	r1, [sp, #32]
   190e8:	sub	r0, fp, #40	; 0x28
   190ec:	movw	r2, #6
   190f0:	bl	1ad54 <__assert_fail@plt+0x9c64>
   190f4:	str	r0, [sp, #24]
   190f8:	b	191dc <__assert_fail@plt+0x80ec>
   190fc:	ldr	r1, [sp, #32]
   19100:	sub	r0, fp, #40	; 0x28
   19104:	movw	r2, #3
   19108:	bl	1ad54 <__assert_fail@plt+0x9c64>
   1910c:	str	r0, [sp, #24]
   19110:	b	191dc <__assert_fail@plt+0x80ec>
   19114:	ldr	r1, [sp, #32]
   19118:	sub	r0, fp, #40	; 0x28
   1911c:	movw	r2, #1
   19120:	bl	1ad54 <__assert_fail@plt+0x9c64>
   19124:	str	r0, [sp, #24]
   19128:	b	191dc <__assert_fail@plt+0x80ec>
   1912c:	ldr	r1, [sp, #32]
   19130:	sub	r0, fp, #40	; 0x28
   19134:	movw	r2, #2
   19138:	bl	1ad54 <__assert_fail@plt+0x9c64>
   1913c:	str	r0, [sp, #24]
   19140:	b	191dc <__assert_fail@plt+0x80ec>
   19144:	ldr	r1, [sp, #32]
   19148:	sub	r0, fp, #40	; 0x28
   1914c:	movw	r2, #5
   19150:	bl	1ad54 <__assert_fail@plt+0x9c64>
   19154:	str	r0, [sp, #24]
   19158:	b	191dc <__assert_fail@plt+0x80ec>
   1915c:	ldr	r1, [sp, #32]
   19160:	sub	r0, fp, #40	; 0x28
   19164:	movw	r2, #4
   19168:	bl	1ad54 <__assert_fail@plt+0x9c64>
   1916c:	str	r0, [sp, #24]
   19170:	b	191dc <__assert_fail@plt+0x80ec>
   19174:	sub	r0, fp, #40	; 0x28
   19178:	movw	r1, #2
   1917c:	bl	1924c <__assert_fail@plt+0x815c>
   19180:	str	r0, [sp, #24]
   19184:	b	191dc <__assert_fail@plt+0x80ec>
   19188:	ldr	r1, [sp, #32]
   1918c:	sub	r0, fp, #40	; 0x28
   19190:	movw	r2, #8
   19194:	bl	1ad54 <__assert_fail@plt+0x9c64>
   19198:	str	r0, [sp, #24]
   1919c:	b	191dc <__assert_fail@plt+0x80ec>
   191a0:	ldr	r1, [sp, #32]
   191a4:	sub	r0, fp, #40	; 0x28
   191a8:	movw	r2, #7
   191ac:	bl	1ad54 <__assert_fail@plt+0x9c64>
   191b0:	str	r0, [sp, #24]
   191b4:	b	191dc <__assert_fail@plt+0x80ec>
   191b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   191c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   191c4:	str	r1, [r2, #4]
   191c8:	str	r0, [r2]
   191cc:	ldr	r0, [sp, #44]	; 0x2c
   191d0:	orr	r0, r0, #2
   191d4:	str	r0, [fp, #-4]
   191d8:	b	19240 <__assert_fail@plt+0x8150>
   191dc:	ldr	r0, [sp, #24]
   191e0:	ldr	r1, [sp, #44]	; 0x2c
   191e4:	orr	r0, r1, r0
   191e8:	str	r0, [sp, #44]	; 0x2c
   191ec:	ldr	r0, [sp, #28]
   191f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   191f4:	ldr	r2, [r1]
   191f8:	add	r0, r2, r0
   191fc:	str	r0, [r1]
   19200:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19204:	ldr	r0, [r0]
   19208:	ldrsb	r0, [r0]
   1920c:	cmp	r0, #0
   19210:	beq	19220 <__assert_fail@plt+0x8130>
   19214:	ldr	r0, [sp, #44]	; 0x2c
   19218:	orr	r0, r0, #2
   1921c:	str	r0, [sp, #44]	; 0x2c
   19220:	b	19224 <__assert_fail@plt+0x8134>
   19224:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19228:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1922c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19230:	str	r1, [r2, #4]
   19234:	str	r0, [r2]
   19238:	ldr	r0, [sp, #44]	; 0x2c
   1923c:	str	r0, [fp, #-4]
   19240:	ldr	r0, [fp, #-4]
   19244:	mov	sp, fp
   19248:	pop	{fp, pc}
   1924c:	push	{fp, lr}
   19250:	mov	fp, sp
   19254:	sub	sp, sp, #568	; 0x238
   19258:	str	r0, [fp, #-8]
   1925c:	str	r1, [fp, #-12]
   19260:	b	19794 <__assert_fail@plt+0x86a4>
   19264:	b	19508 <__assert_fail@plt+0x8418>
   19268:	ldr	r0, [fp, #-12]
   1926c:	cmp	r0, #0
   19270:	bge	193e8 <__assert_fail@plt+0x82f8>
   19274:	mov	r0, #1
   19278:	cmp	r0, #0
   1927c:	bne	19334 <__assert_fail@plt+0x8244>
   19280:	b	19284 <__assert_fail@plt+0x8194>
   19284:	b	19288 <__assert_fail@plt+0x8198>
   19288:	ldr	r0, [fp, #-8]
   1928c:	ldr	r1, [r0]
   19290:	ldr	r0, [r0, #4]
   19294:	ldr	r2, [fp, #-12]
   19298:	mov	r3, #127	; 0x7f
   1929c:	sdiv	r2, r3, r2
   192a0:	subs	r1, r1, r2
   192a4:	sbcs	r0, r0, r2, asr #31
   192a8:	str	r1, [fp, #-28]	; 0xffffffe4
   192ac:	str	r0, [fp, #-32]	; 0xffffffe0
   192b0:	bcc	194c0 <__assert_fail@plt+0x83d0>
   192b4:	b	194e4 <__assert_fail@plt+0x83f4>
   192b8:	b	192bc <__assert_fail@plt+0x81cc>
   192bc:	ldr	r0, [pc, #4088]	; 1a2bc <__assert_fail@plt+0x91cc>
   192c0:	ldr	r1, [fp, #-12]
   192c4:	cmp	r1, r0
   192c8:	blt	192e0 <__assert_fail@plt+0x81f0>
   192cc:	b	192ec <__assert_fail@plt+0x81fc>
   192d0:	ldr	r0, [fp, #-12]
   192d4:	movw	r1, #0
   192d8:	cmp	r1, r0
   192dc:	bge	192ec <__assert_fail@plt+0x81fc>
   192e0:	movw	r0, #0
   192e4:	str	r0, [fp, #-36]	; 0xffffffdc
   192e8:	b	19304 <__assert_fail@plt+0x8214>
   192ec:	ldr	r0, [fp, #-12]
   192f0:	movw	r1, #0
   192f4:	sub	r0, r1, r0
   192f8:	movw	r1, #127	; 0x7f
   192fc:	sdiv	r0, r1, r0
   19300:	str	r0, [fp, #-36]	; 0xffffffdc
   19304:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19308:	ldr	r1, [fp, #-8]
   1930c:	ldr	r2, [r1]
   19310:	ldr	r1, [r1, #4]
   19314:	mvn	r1, r1
   19318:	mvn	r2, r2
   1931c:	subs	r2, r2, r0
   19320:	sbcs	r0, r1, r0, asr #31
   19324:	str	r2, [fp, #-40]	; 0xffffffd8
   19328:	str	r0, [fp, #-44]	; 0xffffffd4
   1932c:	bcs	194c0 <__assert_fail@plt+0x83d0>
   19330:	b	194e4 <__assert_fail@plt+0x83f4>
   19334:	b	19338 <__assert_fail@plt+0x8248>
   19338:	b	193b8 <__assert_fail@plt+0x82c8>
   1933c:	b	193b8 <__assert_fail@plt+0x82c8>
   19340:	ldr	r0, [fp, #-12]
   19344:	cmn	r0, #1
   19348:	bne	193b8 <__assert_fail@plt+0x82c8>
   1934c:	b	19370 <__assert_fail@plt+0x8280>
   19350:	ldr	r0, [fp, #-8]
   19354:	ldr	r1, [r0]
   19358:	ldr	r0, [r0, #4]
   1935c:	eor	r1, r1, #128	; 0x80
   19360:	orr	r0, r1, r0
   19364:	cmp	r0, #0
   19368:	bne	194c0 <__assert_fail@plt+0x83d0>
   1936c:	b	194e4 <__assert_fail@plt+0x83f4>
   19370:	ldr	r0, [fp, #-8]
   19374:	ldr	r1, [r0]
   19378:	ldr	r0, [r0, #4]
   1937c:	orr	r0, r1, r0
   19380:	cmp	r0, #0
   19384:	beq	194e4 <__assert_fail@plt+0x83f4>
   19388:	b	1938c <__assert_fail@plt+0x829c>
   1938c:	ldr	r0, [fp, #-8]
   19390:	ldr	r1, [r0]
   19394:	ldr	r0, [r0, #4]
   19398:	subs	r1, r1, #1
   1939c:	sbc	r0, r0, #0
   193a0:	rsbs	r1, r1, #127	; 0x7f
   193a4:	rscs	r0, r0, #0
   193a8:	str	r1, [fp, #-48]	; 0xffffffd0
   193ac:	str	r0, [fp, #-52]	; 0xffffffcc
   193b0:	bcc	194c0 <__assert_fail@plt+0x83d0>
   193b4:	b	194e4 <__assert_fail@plt+0x83f4>
   193b8:	ldr	r0, [fp, #-12]
   193bc:	mvn	r1, #127	; 0x7f
   193c0:	sdiv	r0, r1, r0
   193c4:	ldr	r1, [fp, #-8]
   193c8:	ldr	r2, [r1]
   193cc:	ldr	r1, [r1, #4]
   193d0:	subs	r2, r0, r2
   193d4:	rscs	r0, r1, r0, asr #31
   193d8:	str	r2, [fp, #-56]	; 0xffffffc8
   193dc:	str	r0, [fp, #-60]	; 0xffffffc4
   193e0:	bcc	194c0 <__assert_fail@plt+0x83d0>
   193e4:	b	194e4 <__assert_fail@plt+0x83f4>
   193e8:	ldr	r0, [fp, #-12]
   193ec:	cmp	r0, #0
   193f0:	bne	193f8 <__assert_fail@plt+0x8308>
   193f4:	b	194e4 <__assert_fail@plt+0x83f4>
   193f8:	mov	r0, #1
   193fc:	cmp	r0, #0
   19400:	bne	19490 <__assert_fail@plt+0x83a0>
   19404:	b	19408 <__assert_fail@plt+0x8318>
   19408:	ldr	r0, [fp, #-8]
   1940c:	ldr	r1, [r0]
   19410:	ldr	r0, [r0, #4]
   19414:	and	r0, r1, r0
   19418:	cmn	r0, #1
   1941c:	bne	1945c <__assert_fail@plt+0x836c>
   19420:	b	19424 <__assert_fail@plt+0x8334>
   19424:	b	19428 <__assert_fail@plt+0x8338>
   19428:	ldr	r0, [fp, #-12]
   1942c:	mvn	r1, #127	; 0x7f
   19430:	add	r0, r0, r1
   19434:	movw	r1, #0
   19438:	cmp	r1, r0
   1943c:	blt	194c0 <__assert_fail@plt+0x83d0>
   19440:	b	194e4 <__assert_fail@plt+0x83f4>
   19444:	ldr	r0, [fp, #-12]
   19448:	sub	r0, r0, #1
   1944c:	movw	r1, #127	; 0x7f
   19450:	cmp	r1, r0
   19454:	blt	194c0 <__assert_fail@plt+0x83d0>
   19458:	b	194e4 <__assert_fail@plt+0x83f4>
   1945c:	ldr	r0, [fp, #-8]
   19460:	ldr	r2, [r0]
   19464:	ldr	r3, [r0, #4]
   19468:	mvn	r0, #127	; 0x7f
   1946c:	mvn	r1, #0
   19470:	bl	1d258 <__assert_fail@plt+0xc168>
   19474:	ldr	r2, [fp, #-12]
   19478:	subs	r0, r0, r2
   1947c:	sbcs	r1, r1, r2, asr #31
   19480:	str	r0, [fp, #-64]	; 0xffffffc0
   19484:	str	r1, [fp, #-68]	; 0xffffffbc
   19488:	bcc	194c0 <__assert_fail@plt+0x83d0>
   1948c:	b	194e4 <__assert_fail@plt+0x83f4>
   19490:	ldr	r0, [fp, #-12]
   19494:	mov	r1, #127	; 0x7f
   19498:	sdiv	r0, r1, r0
   1949c:	ldr	r1, [fp, #-8]
   194a0:	ldr	r2, [r1]
   194a4:	ldr	r1, [r1, #4]
   194a8:	subs	r2, r0, r2
   194ac:	rscs	r0, r1, r0, asr #31
   194b0:	str	r2, [fp, #-72]	; 0xffffffb8
   194b4:	str	r0, [fp, #-76]	; 0xffffffb4
   194b8:	bcs	194e4 <__assert_fail@plt+0x83f4>
   194bc:	b	194c0 <__assert_fail@plt+0x83d0>
   194c0:	ldr	r0, [fp, #-8]
   194c4:	ldr	r0, [r0]
   194c8:	ldr	r1, [fp, #-12]
   194cc:	mul	r0, r0, r1
   194d0:	sxtb	r0, r0
   194d4:	asr	r1, r0, #31
   194d8:	str	r0, [fp, #-24]	; 0xffffffe8
   194dc:	str	r1, [fp, #-20]	; 0xffffffec
   194e0:	b	1ad08 <__assert_fail@plt+0x9c18>
   194e4:	ldr	r0, [fp, #-8]
   194e8:	ldr	r0, [r0]
   194ec:	ldr	r1, [fp, #-12]
   194f0:	mul	r0, r0, r1
   194f4:	sxtb	r0, r0
   194f8:	asr	r1, r0, #31
   194fc:	str	r0, [fp, #-24]	; 0xffffffe8
   19500:	str	r1, [fp, #-20]	; 0xffffffec
   19504:	b	1ad24 <__assert_fail@plt+0x9c34>
   19508:	ldr	r0, [fp, #-12]
   1950c:	cmp	r0, #0
   19510:	bge	19668 <__assert_fail@plt+0x8578>
   19514:	mov	r0, #1
   19518:	cmp	r0, #0
   1951c:	bne	195d4 <__assert_fail@plt+0x84e4>
   19520:	b	19524 <__assert_fail@plt+0x8434>
   19524:	b	19528 <__assert_fail@plt+0x8438>
   19528:	ldr	r0, [fp, #-8]
   1952c:	ldr	r1, [r0]
   19530:	ldr	r0, [r0, #4]
   19534:	ldr	r2, [fp, #-12]
   19538:	mov	r3, #255	; 0xff
   1953c:	sdiv	r2, r3, r2
   19540:	subs	r1, r1, r2
   19544:	sbcs	r0, r0, r2, asr #31
   19548:	str	r1, [fp, #-80]	; 0xffffffb0
   1954c:	str	r0, [fp, #-84]	; 0xffffffac
   19550:	bcc	1974c <__assert_fail@plt+0x865c>
   19554:	b	19770 <__assert_fail@plt+0x8680>
   19558:	b	1955c <__assert_fail@plt+0x846c>
   1955c:	ldr	r0, [pc, #3416]	; 1a2bc <__assert_fail@plt+0x91cc>
   19560:	ldr	r1, [fp, #-12]
   19564:	cmp	r1, r0
   19568:	blt	19580 <__assert_fail@plt+0x8490>
   1956c:	b	1958c <__assert_fail@plt+0x849c>
   19570:	ldr	r0, [fp, #-12]
   19574:	movw	r1, #0
   19578:	cmp	r1, r0
   1957c:	bge	1958c <__assert_fail@plt+0x849c>
   19580:	movw	r0, #0
   19584:	str	r0, [fp, #-88]	; 0xffffffa8
   19588:	b	195a4 <__assert_fail@plt+0x84b4>
   1958c:	ldr	r0, [fp, #-12]
   19590:	movw	r1, #0
   19594:	sub	r0, r1, r0
   19598:	movw	r1, #255	; 0xff
   1959c:	sdiv	r0, r1, r0
   195a0:	str	r0, [fp, #-88]	; 0xffffffa8
   195a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   195a8:	ldr	r1, [fp, #-8]
   195ac:	ldr	r2, [r1]
   195b0:	ldr	r1, [r1, #4]
   195b4:	mvn	r1, r1
   195b8:	mvn	r2, r2
   195bc:	subs	r2, r2, r0
   195c0:	sbcs	r0, r1, r0, asr #31
   195c4:	str	r2, [fp, #-92]	; 0xffffffa4
   195c8:	str	r0, [fp, #-96]	; 0xffffffa0
   195cc:	bcs	1974c <__assert_fail@plt+0x865c>
   195d0:	b	19770 <__assert_fail@plt+0x8680>
   195d4:	b	195d8 <__assert_fail@plt+0x84e8>
   195d8:	b	19638 <__assert_fail@plt+0x8548>
   195dc:	b	19638 <__assert_fail@plt+0x8548>
   195e0:	ldr	r0, [fp, #-12]
   195e4:	cmn	r0, #1
   195e8:	bne	19638 <__assert_fail@plt+0x8548>
   195ec:	b	1960c <__assert_fail@plt+0x851c>
   195f0:	ldr	r0, [fp, #-8]
   195f4:	ldr	r1, [r0]
   195f8:	ldr	r0, [r0, #4]
   195fc:	orr	r0, r1, r0
   19600:	cmp	r0, #0
   19604:	bne	1974c <__assert_fail@plt+0x865c>
   19608:	b	19770 <__assert_fail@plt+0x8680>
   1960c:	ldr	r0, [fp, #-8]
   19610:	ldr	r1, [r0]
   19614:	ldr	r0, [r0, #4]
   19618:	orr	r0, r1, r0
   1961c:	cmp	r0, #0
   19620:	beq	19770 <__assert_fail@plt+0x8680>
   19624:	b	19628 <__assert_fail@plt+0x8538>
   19628:	mov	r0, #0
   1962c:	cmp	r0, #0
   19630:	bne	1974c <__assert_fail@plt+0x865c>
   19634:	b	19770 <__assert_fail@plt+0x8680>
   19638:	ldr	r0, [fp, #-12]
   1963c:	mov	r1, #0
   19640:	sdiv	r0, r1, r0
   19644:	ldr	r1, [fp, #-8]
   19648:	ldr	r2, [r1]
   1964c:	ldr	r1, [r1, #4]
   19650:	subs	r2, r0, r2
   19654:	rscs	r0, r1, r0, asr #31
   19658:	str	r2, [fp, #-100]	; 0xffffff9c
   1965c:	str	r0, [fp, #-104]	; 0xffffff98
   19660:	bcc	1974c <__assert_fail@plt+0x865c>
   19664:	b	19770 <__assert_fail@plt+0x8680>
   19668:	ldr	r0, [fp, #-12]
   1966c:	cmp	r0, #0
   19670:	bne	19678 <__assert_fail@plt+0x8588>
   19674:	b	19770 <__assert_fail@plt+0x8680>
   19678:	mov	r0, #1
   1967c:	cmp	r0, #0
   19680:	bne	1971c <__assert_fail@plt+0x862c>
   19684:	b	19688 <__assert_fail@plt+0x8598>
   19688:	b	19690 <__assert_fail@plt+0x85a0>
   1968c:	b	19694 <__assert_fail@plt+0x85a4>
   19690:	b	196e4 <__assert_fail@plt+0x85f4>
   19694:	ldr	r0, [fp, #-8]
   19698:	ldr	r1, [r0]
   1969c:	ldr	r0, [r0, #4]
   196a0:	and	r0, r1, r0
   196a4:	cmn	r0, #1
   196a8:	bne	196e4 <__assert_fail@plt+0x85f4>
   196ac:	b	196b0 <__assert_fail@plt+0x85c0>
   196b0:	b	196b4 <__assert_fail@plt+0x85c4>
   196b4:	ldr	r0, [fp, #-12]
   196b8:	add	r0, r0, #0
   196bc:	movw	r1, #0
   196c0:	cmp	r1, r0
   196c4:	blt	1974c <__assert_fail@plt+0x865c>
   196c8:	b	19770 <__assert_fail@plt+0x8680>
   196cc:	ldr	r0, [fp, #-12]
   196d0:	sub	r0, r0, #1
   196d4:	mvn	r1, #0
   196d8:	cmp	r1, r0
   196dc:	blt	1974c <__assert_fail@plt+0x865c>
   196e0:	b	19770 <__assert_fail@plt+0x8680>
   196e4:	ldr	r0, [fp, #-8]
   196e8:	ldr	r2, [r0]
   196ec:	ldr	r3, [r0, #4]
   196f0:	mov	r0, #0
   196f4:	str	r0, [fp, #-108]	; 0xffffff94
   196f8:	ldr	r1, [fp, #-108]	; 0xffffff94
   196fc:	bl	1d258 <__assert_fail@plt+0xc168>
   19700:	ldr	r2, [fp, #-12]
   19704:	subs	r0, r0, r2
   19708:	sbcs	r1, r1, r2, asr #31
   1970c:	str	r0, [fp, #-112]	; 0xffffff90
   19710:	str	r1, [fp, #-116]	; 0xffffff8c
   19714:	bcc	1974c <__assert_fail@plt+0x865c>
   19718:	b	19770 <__assert_fail@plt+0x8680>
   1971c:	ldr	r0, [fp, #-12]
   19720:	mov	r1, #255	; 0xff
   19724:	sdiv	r0, r1, r0
   19728:	ldr	r1, [fp, #-8]
   1972c:	ldr	r2, [r1]
   19730:	ldr	r1, [r1, #4]
   19734:	subs	r2, r0, r2
   19738:	rscs	r0, r1, r0, asr #31
   1973c:	str	r2, [fp, #-120]	; 0xffffff88
   19740:	str	r0, [fp, #-124]	; 0xffffff84
   19744:	bcs	19770 <__assert_fail@plt+0x8680>
   19748:	b	1974c <__assert_fail@plt+0x865c>
   1974c:	ldr	r0, [fp, #-8]
   19750:	ldr	r0, [r0]
   19754:	ldr	r1, [fp, #-12]
   19758:	mul	r0, r0, r1
   1975c:	uxtb	r0, r0
   19760:	mov	r1, #0
   19764:	str	r1, [fp, #-20]	; 0xffffffec
   19768:	str	r0, [fp, #-24]	; 0xffffffe8
   1976c:	b	1ad08 <__assert_fail@plt+0x9c18>
   19770:	ldr	r0, [fp, #-8]
   19774:	ldr	r0, [r0]
   19778:	ldr	r1, [fp, #-12]
   1977c:	mul	r0, r0, r1
   19780:	uxtb	r0, r0
   19784:	mov	r1, #0
   19788:	str	r1, [fp, #-20]	; 0xffffffec
   1978c:	str	r0, [fp, #-24]	; 0xffffffe8
   19790:	b	1ad24 <__assert_fail@plt+0x9c34>
   19794:	b	19cd0 <__assert_fail@plt+0x8be0>
   19798:	b	19a44 <__assert_fail@plt+0x8954>
   1979c:	ldr	r0, [fp, #-12]
   197a0:	cmp	r0, #0
   197a4:	bge	19920 <__assert_fail@plt+0x8830>
   197a8:	mov	r0, #1
   197ac:	cmp	r0, #0
   197b0:	bne	19868 <__assert_fail@plt+0x8778>
   197b4:	b	197b8 <__assert_fail@plt+0x86c8>
   197b8:	b	197bc <__assert_fail@plt+0x86cc>
   197bc:	ldr	r0, [fp, #-8]
   197c0:	ldr	r1, [r0]
   197c4:	ldr	r0, [r0, #4]
   197c8:	ldr	r2, [fp, #-12]
   197cc:	movw	r3, #32767	; 0x7fff
   197d0:	sdiv	r2, r3, r2
   197d4:	subs	r1, r1, r2
   197d8:	sbcs	r0, r0, r2, asr #31
   197dc:	str	r1, [fp, #-128]	; 0xffffff80
   197e0:	str	r0, [fp, #-132]	; 0xffffff7c
   197e4:	bcc	199fc <__assert_fail@plt+0x890c>
   197e8:	b	19a20 <__assert_fail@plt+0x8930>
   197ec:	b	197f0 <__assert_fail@plt+0x8700>
   197f0:	ldr	r0, [pc, #2756]	; 1a2bc <__assert_fail@plt+0x91cc>
   197f4:	ldr	r1, [fp, #-12]
   197f8:	cmp	r1, r0
   197fc:	blt	19814 <__assert_fail@plt+0x8724>
   19800:	b	19820 <__assert_fail@plt+0x8730>
   19804:	ldr	r0, [fp, #-12]
   19808:	movw	r1, #0
   1980c:	cmp	r1, r0
   19810:	bge	19820 <__assert_fail@plt+0x8730>
   19814:	movw	r0, #0
   19818:	str	r0, [fp, #-136]	; 0xffffff78
   1981c:	b	19838 <__assert_fail@plt+0x8748>
   19820:	ldr	r0, [fp, #-12]
   19824:	movw	r1, #0
   19828:	sub	r0, r1, r0
   1982c:	movw	r1, #32767	; 0x7fff
   19830:	sdiv	r0, r1, r0
   19834:	str	r0, [fp, #-136]	; 0xffffff78
   19838:	ldr	r0, [fp, #-136]	; 0xffffff78
   1983c:	ldr	r1, [fp, #-8]
   19840:	ldr	r2, [r1]
   19844:	ldr	r1, [r1, #4]
   19848:	mvn	r1, r1
   1984c:	mvn	r2, r2
   19850:	subs	r2, r2, r0
   19854:	sbcs	r0, r1, r0, asr #31
   19858:	str	r2, [fp, #-140]	; 0xffffff74
   1985c:	str	r0, [fp, #-144]	; 0xffffff70
   19860:	bcs	199fc <__assert_fail@plt+0x890c>
   19864:	b	19a20 <__assert_fail@plt+0x8930>
   19868:	b	1986c <__assert_fail@plt+0x877c>
   1986c:	b	198ec <__assert_fail@plt+0x87fc>
   19870:	b	198ec <__assert_fail@plt+0x87fc>
   19874:	ldr	r0, [fp, #-12]
   19878:	cmn	r0, #1
   1987c:	bne	198ec <__assert_fail@plt+0x87fc>
   19880:	b	198a4 <__assert_fail@plt+0x87b4>
   19884:	ldr	r0, [fp, #-8]
   19888:	ldr	r1, [r0]
   1988c:	ldr	r0, [r0, #4]
   19890:	eor	r1, r1, #32768	; 0x8000
   19894:	orr	r0, r1, r0
   19898:	cmp	r0, #0
   1989c:	bne	199fc <__assert_fail@plt+0x890c>
   198a0:	b	19a20 <__assert_fail@plt+0x8930>
   198a4:	ldr	r0, [fp, #-8]
   198a8:	ldr	r1, [r0]
   198ac:	ldr	r0, [r0, #4]
   198b0:	orr	r0, r1, r0
   198b4:	cmp	r0, #0
   198b8:	beq	19a20 <__assert_fail@plt+0x8930>
   198bc:	b	198c0 <__assert_fail@plt+0x87d0>
   198c0:	ldr	r0, [fp, #-8]
   198c4:	ldr	r1, [r0]
   198c8:	ldr	r0, [r0, #4]
   198cc:	subs	r1, r1, #1
   198d0:	sbc	r0, r0, #0
   198d4:	lsr	r1, r1, #15
   198d8:	orr	r1, r1, r0, lsl #17
   198dc:	orr	r0, r1, r0, lsr #15
   198e0:	cmp	r0, #0
   198e4:	bne	199fc <__assert_fail@plt+0x890c>
   198e8:	b	19a20 <__assert_fail@plt+0x8930>
   198ec:	ldr	r0, [fp, #-12]
   198f0:	movw	r1, #32768	; 0x8000
   198f4:	movt	r1, #65535	; 0xffff
   198f8:	sdiv	r0, r1, r0
   198fc:	ldr	r1, [fp, #-8]
   19900:	ldr	r2, [r1]
   19904:	ldr	r1, [r1, #4]
   19908:	subs	r2, r0, r2
   1990c:	rscs	r0, r1, r0, asr #31
   19910:	str	r2, [fp, #-148]	; 0xffffff6c
   19914:	str	r0, [fp, #-152]	; 0xffffff68
   19918:	bcc	199fc <__assert_fail@plt+0x890c>
   1991c:	b	19a20 <__assert_fail@plt+0x8930>
   19920:	ldr	r0, [fp, #-12]
   19924:	cmp	r0, #0
   19928:	bne	19930 <__assert_fail@plt+0x8840>
   1992c:	b	19a20 <__assert_fail@plt+0x8930>
   19930:	mov	r0, #1
   19934:	cmp	r0, #0
   19938:	bne	199cc <__assert_fail@plt+0x88dc>
   1993c:	b	19940 <__assert_fail@plt+0x8850>
   19940:	ldr	r0, [fp, #-8]
   19944:	ldr	r1, [r0]
   19948:	ldr	r0, [r0, #4]
   1994c:	and	r0, r1, r0
   19950:	cmn	r0, #1
   19954:	bne	19994 <__assert_fail@plt+0x88a4>
   19958:	b	1995c <__assert_fail@plt+0x886c>
   1995c:	b	19960 <__assert_fail@plt+0x8870>
   19960:	ldr	r0, [pc, #4064]	; 1a948 <__assert_fail@plt+0x9858>
   19964:	ldr	r1, [fp, #-12]
   19968:	add	r0, r1, r0
   1996c:	movw	r1, #0
   19970:	cmp	r1, r0
   19974:	blt	199fc <__assert_fail@plt+0x890c>
   19978:	b	19a20 <__assert_fail@plt+0x8930>
   1997c:	ldr	r0, [fp, #-12]
   19980:	sub	r0, r0, #1
   19984:	movw	r1, #32767	; 0x7fff
   19988:	cmp	r1, r0
   1998c:	blt	199fc <__assert_fail@plt+0x890c>
   19990:	b	19a20 <__assert_fail@plt+0x8930>
   19994:	ldr	r0, [fp, #-8]
   19998:	ldr	r2, [r0]
   1999c:	ldr	r3, [r0, #4]
   199a0:	movw	r0, #32768	; 0x8000
   199a4:	movt	r0, #65535	; 0xffff
   199a8:	mvn	r1, #0
   199ac:	bl	1d258 <__assert_fail@plt+0xc168>
   199b0:	ldr	r2, [fp, #-12]
   199b4:	subs	r0, r0, r2
   199b8:	sbcs	r1, r1, r2, asr #31
   199bc:	str	r0, [fp, #-156]	; 0xffffff64
   199c0:	str	r1, [fp, #-160]	; 0xffffff60
   199c4:	bcc	199fc <__assert_fail@plt+0x890c>
   199c8:	b	19a20 <__assert_fail@plt+0x8930>
   199cc:	ldr	r0, [fp, #-12]
   199d0:	movw	r1, #32767	; 0x7fff
   199d4:	sdiv	r0, r1, r0
   199d8:	ldr	r1, [fp, #-8]
   199dc:	ldr	r2, [r1]
   199e0:	ldr	r1, [r1, #4]
   199e4:	subs	r2, r0, r2
   199e8:	rscs	r0, r1, r0, asr #31
   199ec:	str	r2, [fp, #-164]	; 0xffffff5c
   199f0:	str	r0, [fp, #-168]	; 0xffffff58
   199f4:	bcs	19a20 <__assert_fail@plt+0x8930>
   199f8:	b	199fc <__assert_fail@plt+0x890c>
   199fc:	ldr	r0, [fp, #-8]
   19a00:	ldr	r0, [r0]
   19a04:	ldr	r1, [fp, #-12]
   19a08:	mul	r0, r0, r1
   19a0c:	sxth	r0, r0
   19a10:	asr	r1, r0, #31
   19a14:	str	r0, [fp, #-24]	; 0xffffffe8
   19a18:	str	r1, [fp, #-20]	; 0xffffffec
   19a1c:	b	1ad08 <__assert_fail@plt+0x9c18>
   19a20:	ldr	r0, [fp, #-8]
   19a24:	ldr	r0, [r0]
   19a28:	ldr	r1, [fp, #-12]
   19a2c:	mul	r0, r0, r1
   19a30:	sxth	r0, r0
   19a34:	asr	r1, r0, #31
   19a38:	str	r0, [fp, #-24]	; 0xffffffe8
   19a3c:	str	r1, [fp, #-20]	; 0xffffffec
   19a40:	b	1ad24 <__assert_fail@plt+0x9c34>
   19a44:	ldr	r0, [fp, #-12]
   19a48:	cmp	r0, #0
   19a4c:	bge	19ba4 <__assert_fail@plt+0x8ab4>
   19a50:	mov	r0, #1
   19a54:	cmp	r0, #0
   19a58:	bne	19b10 <__assert_fail@plt+0x8a20>
   19a5c:	b	19a60 <__assert_fail@plt+0x8970>
   19a60:	b	19a64 <__assert_fail@plt+0x8974>
   19a64:	ldr	r0, [fp, #-8]
   19a68:	ldr	r1, [r0]
   19a6c:	ldr	r0, [r0, #4]
   19a70:	ldr	r2, [fp, #-12]
   19a74:	movw	r3, #65535	; 0xffff
   19a78:	sdiv	r2, r3, r2
   19a7c:	subs	r1, r1, r2
   19a80:	sbcs	r0, r0, r2, asr #31
   19a84:	str	r1, [fp, #-172]	; 0xffffff54
   19a88:	str	r0, [fp, #-176]	; 0xffffff50
   19a8c:	bcc	19c88 <__assert_fail@plt+0x8b98>
   19a90:	b	19cac <__assert_fail@plt+0x8bbc>
   19a94:	b	19a98 <__assert_fail@plt+0x89a8>
   19a98:	ldr	r0, [pc, #2076]	; 1a2bc <__assert_fail@plt+0x91cc>
   19a9c:	ldr	r1, [fp, #-12]
   19aa0:	cmp	r1, r0
   19aa4:	blt	19abc <__assert_fail@plt+0x89cc>
   19aa8:	b	19ac8 <__assert_fail@plt+0x89d8>
   19aac:	ldr	r0, [fp, #-12]
   19ab0:	movw	r1, #0
   19ab4:	cmp	r1, r0
   19ab8:	bge	19ac8 <__assert_fail@plt+0x89d8>
   19abc:	movw	r0, #0
   19ac0:	str	r0, [fp, #-180]	; 0xffffff4c
   19ac4:	b	19ae0 <__assert_fail@plt+0x89f0>
   19ac8:	ldr	r0, [fp, #-12]
   19acc:	movw	r1, #0
   19ad0:	sub	r0, r1, r0
   19ad4:	movw	r1, #65535	; 0xffff
   19ad8:	sdiv	r0, r1, r0
   19adc:	str	r0, [fp, #-180]	; 0xffffff4c
   19ae0:	ldr	r0, [fp, #-180]	; 0xffffff4c
   19ae4:	ldr	r1, [fp, #-8]
   19ae8:	ldr	r2, [r1]
   19aec:	ldr	r1, [r1, #4]
   19af0:	mvn	r1, r1
   19af4:	mvn	r2, r2
   19af8:	subs	r2, r2, r0
   19afc:	sbcs	r0, r1, r0, asr #31
   19b00:	str	r2, [fp, #-184]	; 0xffffff48
   19b04:	str	r0, [fp, #-188]	; 0xffffff44
   19b08:	bcs	19c88 <__assert_fail@plt+0x8b98>
   19b0c:	b	19cac <__assert_fail@plt+0x8bbc>
   19b10:	b	19b14 <__assert_fail@plt+0x8a24>
   19b14:	b	19b74 <__assert_fail@plt+0x8a84>
   19b18:	b	19b74 <__assert_fail@plt+0x8a84>
   19b1c:	ldr	r0, [fp, #-12]
   19b20:	cmn	r0, #1
   19b24:	bne	19b74 <__assert_fail@plt+0x8a84>
   19b28:	b	19b48 <__assert_fail@plt+0x8a58>
   19b2c:	ldr	r0, [fp, #-8]
   19b30:	ldr	r1, [r0]
   19b34:	ldr	r0, [r0, #4]
   19b38:	orr	r0, r1, r0
   19b3c:	cmp	r0, #0
   19b40:	bne	19c88 <__assert_fail@plt+0x8b98>
   19b44:	b	19cac <__assert_fail@plt+0x8bbc>
   19b48:	ldr	r0, [fp, #-8]
   19b4c:	ldr	r1, [r0]
   19b50:	ldr	r0, [r0, #4]
   19b54:	orr	r0, r1, r0
   19b58:	cmp	r0, #0
   19b5c:	beq	19cac <__assert_fail@plt+0x8bbc>
   19b60:	b	19b64 <__assert_fail@plt+0x8a74>
   19b64:	mov	r0, #0
   19b68:	cmp	r0, #0
   19b6c:	bne	19c88 <__assert_fail@plt+0x8b98>
   19b70:	b	19cac <__assert_fail@plt+0x8bbc>
   19b74:	ldr	r0, [fp, #-12]
   19b78:	mov	r1, #0
   19b7c:	sdiv	r0, r1, r0
   19b80:	ldr	r1, [fp, #-8]
   19b84:	ldr	r2, [r1]
   19b88:	ldr	r1, [r1, #4]
   19b8c:	subs	r2, r0, r2
   19b90:	rscs	r0, r1, r0, asr #31
   19b94:	str	r2, [fp, #-192]	; 0xffffff40
   19b98:	str	r0, [fp, #-196]	; 0xffffff3c
   19b9c:	bcc	19c88 <__assert_fail@plt+0x8b98>
   19ba0:	b	19cac <__assert_fail@plt+0x8bbc>
   19ba4:	ldr	r0, [fp, #-12]
   19ba8:	cmp	r0, #0
   19bac:	bne	19bb4 <__assert_fail@plt+0x8ac4>
   19bb0:	b	19cac <__assert_fail@plt+0x8bbc>
   19bb4:	mov	r0, #1
   19bb8:	cmp	r0, #0
   19bbc:	bne	19c58 <__assert_fail@plt+0x8b68>
   19bc0:	b	19bc4 <__assert_fail@plt+0x8ad4>
   19bc4:	b	19bcc <__assert_fail@plt+0x8adc>
   19bc8:	b	19bd0 <__assert_fail@plt+0x8ae0>
   19bcc:	b	19c20 <__assert_fail@plt+0x8b30>
   19bd0:	ldr	r0, [fp, #-8]
   19bd4:	ldr	r1, [r0]
   19bd8:	ldr	r0, [r0, #4]
   19bdc:	and	r0, r1, r0
   19be0:	cmn	r0, #1
   19be4:	bne	19c20 <__assert_fail@plt+0x8b30>
   19be8:	b	19bec <__assert_fail@plt+0x8afc>
   19bec:	b	19bf0 <__assert_fail@plt+0x8b00>
   19bf0:	ldr	r0, [fp, #-12]
   19bf4:	add	r0, r0, #0
   19bf8:	movw	r1, #0
   19bfc:	cmp	r1, r0
   19c00:	blt	19c88 <__assert_fail@plt+0x8b98>
   19c04:	b	19cac <__assert_fail@plt+0x8bbc>
   19c08:	ldr	r0, [fp, #-12]
   19c0c:	sub	r0, r0, #1
   19c10:	mvn	r1, #0
   19c14:	cmp	r1, r0
   19c18:	blt	19c88 <__assert_fail@plt+0x8b98>
   19c1c:	b	19cac <__assert_fail@plt+0x8bbc>
   19c20:	ldr	r0, [fp, #-8]
   19c24:	ldr	r2, [r0]
   19c28:	ldr	r3, [r0, #4]
   19c2c:	mov	r0, #0
   19c30:	str	r0, [fp, #-200]	; 0xffffff38
   19c34:	ldr	r1, [fp, #-200]	; 0xffffff38
   19c38:	bl	1d258 <__assert_fail@plt+0xc168>
   19c3c:	ldr	r2, [fp, #-12]
   19c40:	subs	r0, r0, r2
   19c44:	sbcs	r1, r1, r2, asr #31
   19c48:	str	r0, [fp, #-204]	; 0xffffff34
   19c4c:	str	r1, [fp, #-208]	; 0xffffff30
   19c50:	bcc	19c88 <__assert_fail@plt+0x8b98>
   19c54:	b	19cac <__assert_fail@plt+0x8bbc>
   19c58:	ldr	r0, [fp, #-12]
   19c5c:	movw	r1, #65535	; 0xffff
   19c60:	sdiv	r0, r1, r0
   19c64:	ldr	r1, [fp, #-8]
   19c68:	ldr	r2, [r1]
   19c6c:	ldr	r1, [r1, #4]
   19c70:	subs	r2, r0, r2
   19c74:	rscs	r0, r1, r0, asr #31
   19c78:	str	r2, [fp, #-212]	; 0xffffff2c
   19c7c:	str	r0, [fp, #-216]	; 0xffffff28
   19c80:	bcs	19cac <__assert_fail@plt+0x8bbc>
   19c84:	b	19c88 <__assert_fail@plt+0x8b98>
   19c88:	ldr	r0, [fp, #-8]
   19c8c:	ldr	r0, [r0]
   19c90:	ldr	r1, [fp, #-12]
   19c94:	mul	r0, r0, r1
   19c98:	uxth	r0, r0
   19c9c:	mov	r1, #0
   19ca0:	str	r1, [fp, #-20]	; 0xffffffec
   19ca4:	str	r0, [fp, #-24]	; 0xffffffe8
   19ca8:	b	1ad08 <__assert_fail@plt+0x9c18>
   19cac:	ldr	r0, [fp, #-8]
   19cb0:	ldr	r0, [r0]
   19cb4:	ldr	r1, [fp, #-12]
   19cb8:	mul	r0, r0, r1
   19cbc:	uxth	r0, r0
   19cc0:	mov	r1, #0
   19cc4:	str	r1, [fp, #-20]	; 0xffffffec
   19cc8:	str	r0, [fp, #-24]	; 0xffffffe8
   19ccc:	b	1ad24 <__assert_fail@plt+0x9c34>
   19cd0:	b	1a1e8 <__assert_fail@plt+0x90f8>
   19cd4:	b	19f64 <__assert_fail@plt+0x8e74>
   19cd8:	ldr	r0, [fp, #-12]
   19cdc:	cmp	r0, #0
   19ce0:	bge	19e50 <__assert_fail@plt+0x8d60>
   19ce4:	mov	r0, #1
   19ce8:	cmp	r0, #0
   19cec:	bne	19da4 <__assert_fail@plt+0x8cb4>
   19cf0:	b	19cf4 <__assert_fail@plt+0x8c04>
   19cf4:	b	19cf8 <__assert_fail@plt+0x8c08>
   19cf8:	ldr	r0, [fp, #-8]
   19cfc:	ldr	r1, [r0]
   19d00:	ldr	r0, [r0, #4]
   19d04:	ldr	r2, [fp, #-12]
   19d08:	mvn	r3, #-2147483648	; 0x80000000
   19d0c:	sdiv	r2, r3, r2
   19d10:	subs	r1, r1, r2
   19d14:	sbcs	r0, r0, r2, asr #31
   19d18:	str	r1, [fp, #-220]	; 0xffffff24
   19d1c:	str	r0, [fp, #-224]	; 0xffffff20
   19d20:	bcc	19f24 <__assert_fail@plt+0x8e34>
   19d24:	b	19f44 <__assert_fail@plt+0x8e54>
   19d28:	b	19d2c <__assert_fail@plt+0x8c3c>
   19d2c:	ldr	r0, [pc, #1416]	; 1a2bc <__assert_fail@plt+0x91cc>
   19d30:	ldr	r1, [fp, #-12]
   19d34:	cmp	r1, r0
   19d38:	blt	19d50 <__assert_fail@plt+0x8c60>
   19d3c:	b	19d5c <__assert_fail@plt+0x8c6c>
   19d40:	ldr	r0, [fp, #-12]
   19d44:	movw	r1, #0
   19d48:	cmp	r1, r0
   19d4c:	bge	19d5c <__assert_fail@plt+0x8c6c>
   19d50:	movw	r0, #0
   19d54:	str	r0, [fp, #-228]	; 0xffffff1c
   19d58:	b	19d74 <__assert_fail@plt+0x8c84>
   19d5c:	ldr	r0, [pc, #4076]	; 1ad50 <__assert_fail@plt+0x9c60>
   19d60:	ldr	r1, [fp, #-12]
   19d64:	movw	r2, #0
   19d68:	sub	r1, r2, r1
   19d6c:	sdiv	r0, r0, r1
   19d70:	str	r0, [fp, #-228]	; 0xffffff1c
   19d74:	ldr	r0, [fp, #-228]	; 0xffffff1c
   19d78:	ldr	r1, [fp, #-8]
   19d7c:	ldr	r2, [r1]
   19d80:	ldr	r1, [r1, #4]
   19d84:	mvn	r1, r1
   19d88:	mvn	r2, r2
   19d8c:	subs	r2, r2, r0
   19d90:	sbcs	r0, r1, r0, asr #31
   19d94:	str	r2, [fp, #-232]	; 0xffffff18
   19d98:	str	r0, [fp, #-236]	; 0xffffff14
   19d9c:	bcs	19f24 <__assert_fail@plt+0x8e34>
   19da0:	b	19f44 <__assert_fail@plt+0x8e54>
   19da4:	ldr	r0, [fp, #-12]
   19da8:	cmn	r0, #1
   19dac:	bne	19e20 <__assert_fail@plt+0x8d30>
   19db0:	b	19dd4 <__assert_fail@plt+0x8ce4>
   19db4:	ldr	r0, [fp, #-8]
   19db8:	ldr	r1, [r0]
   19dbc:	ldr	r0, [r0, #4]
   19dc0:	eor	r1, r1, #-2147483648	; 0x80000000
   19dc4:	orr	r0, r1, r0
   19dc8:	cmp	r0, #0
   19dcc:	bne	19f24 <__assert_fail@plt+0x8e34>
   19dd0:	b	19f44 <__assert_fail@plt+0x8e54>
   19dd4:	ldr	r0, [fp, #-8]
   19dd8:	ldr	r1, [r0]
   19ddc:	ldr	r0, [r0, #4]
   19de0:	orr	r0, r1, r0
   19de4:	cmp	r0, #0
   19de8:	beq	19f44 <__assert_fail@plt+0x8e54>
   19dec:	b	19df0 <__assert_fail@plt+0x8d00>
   19df0:	ldr	r0, [fp, #-8]
   19df4:	ldr	r1, [r0]
   19df8:	ldr	r0, [r0, #4]
   19dfc:	subs	r1, r1, #1
   19e00:	sbc	r0, r0, #0
   19e04:	mvn	r2, #-2147483648	; 0x80000000
   19e08:	subs	r1, r2, r1
   19e0c:	rscs	r0, r0, #0
   19e10:	str	r1, [fp, #-240]	; 0xffffff10
   19e14:	str	r0, [fp, #-244]	; 0xffffff0c
   19e18:	bcc	19f24 <__assert_fail@plt+0x8e34>
   19e1c:	b	19f44 <__assert_fail@plt+0x8e54>
   19e20:	ldr	r0, [fp, #-12]
   19e24:	mov	r1, #-2147483648	; 0x80000000
   19e28:	sdiv	r0, r1, r0
   19e2c:	ldr	r1, [fp, #-8]
   19e30:	ldr	r2, [r1]
   19e34:	ldr	r1, [r1, #4]
   19e38:	subs	r2, r0, r2
   19e3c:	rscs	r0, r1, r0, asr #31
   19e40:	str	r2, [fp, #-248]	; 0xffffff08
   19e44:	str	r0, [fp, #-252]	; 0xffffff04
   19e48:	bcc	19f24 <__assert_fail@plt+0x8e34>
   19e4c:	b	19f44 <__assert_fail@plt+0x8e54>
   19e50:	ldr	r0, [fp, #-12]
   19e54:	cmp	r0, #0
   19e58:	bne	19e60 <__assert_fail@plt+0x8d70>
   19e5c:	b	19f44 <__assert_fail@plt+0x8e54>
   19e60:	mov	r0, #1
   19e64:	cmp	r0, #0
   19e68:	bne	19ef4 <__assert_fail@plt+0x8e04>
   19e6c:	b	19e70 <__assert_fail@plt+0x8d80>
   19e70:	ldr	r0, [fp, #-8]
   19e74:	ldr	r1, [r0]
   19e78:	ldr	r0, [r0, #4]
   19e7c:	and	r0, r1, r0
   19e80:	cmn	r0, #1
   19e84:	bne	19ec0 <__assert_fail@plt+0x8dd0>
   19e88:	b	19e8c <__assert_fail@plt+0x8d9c>
   19e8c:	b	19e90 <__assert_fail@plt+0x8da0>
   19e90:	ldr	r0, [fp, #-12]
   19e94:	add	r0, r0, #-2147483648	; 0x80000000
   19e98:	movw	r1, #0
   19e9c:	cmp	r1, r0
   19ea0:	blt	19f24 <__assert_fail@plt+0x8e34>
   19ea4:	b	19f44 <__assert_fail@plt+0x8e54>
   19ea8:	ldr	r0, [pc, #3744]	; 1ad50 <__assert_fail@plt+0x9c60>
   19eac:	ldr	r1, [fp, #-12]
   19eb0:	sub	r1, r1, #1
   19eb4:	cmp	r0, r1
   19eb8:	blt	19f24 <__assert_fail@plt+0x8e34>
   19ebc:	b	19f44 <__assert_fail@plt+0x8e54>
   19ec0:	ldr	r0, [fp, #-8]
   19ec4:	ldr	r2, [r0]
   19ec8:	ldr	r3, [r0, #4]
   19ecc:	mov	r0, #-2147483648	; 0x80000000
   19ed0:	mvn	r1, #0
   19ed4:	bl	1d258 <__assert_fail@plt+0xc168>
   19ed8:	ldr	r2, [fp, #-12]
   19edc:	subs	r0, r0, r2
   19ee0:	sbcs	r1, r1, r2, asr #31
   19ee4:	str	r0, [fp, #-256]	; 0xffffff00
   19ee8:	str	r1, [fp, #-260]	; 0xfffffefc
   19eec:	bcc	19f24 <__assert_fail@plt+0x8e34>
   19ef0:	b	19f44 <__assert_fail@plt+0x8e54>
   19ef4:	ldr	r0, [fp, #-12]
   19ef8:	mvn	r1, #-2147483648	; 0x80000000
   19efc:	sdiv	r0, r1, r0
   19f00:	ldr	r1, [fp, #-8]
   19f04:	ldr	r2, [r1]
   19f08:	ldr	r1, [r1, #4]
   19f0c:	subs	r2, r0, r2
   19f10:	rscs	r0, r1, r0, asr #31
   19f14:	str	r2, [fp, #-264]	; 0xfffffef8
   19f18:	str	r0, [fp, #-268]	; 0xfffffef4
   19f1c:	bcs	19f44 <__assert_fail@plt+0x8e54>
   19f20:	b	19f24 <__assert_fail@plt+0x8e34>
   19f24:	ldr	r0, [fp, #-8]
   19f28:	ldr	r0, [r0]
   19f2c:	ldr	r1, [fp, #-12]
   19f30:	mul	r0, r0, r1
   19f34:	asr	r1, r0, #31
   19f38:	str	r0, [fp, #-24]	; 0xffffffe8
   19f3c:	str	r1, [fp, #-20]	; 0xffffffec
   19f40:	b	1ad08 <__assert_fail@plt+0x9c18>
   19f44:	ldr	r0, [fp, #-8]
   19f48:	ldr	r0, [r0]
   19f4c:	ldr	r1, [fp, #-12]
   19f50:	mul	r0, r0, r1
   19f54:	asr	r1, r0, #31
   19f58:	str	r0, [fp, #-24]	; 0xffffffe8
   19f5c:	str	r1, [fp, #-20]	; 0xffffffec
   19f60:	b	1ad24 <__assert_fail@plt+0x9c34>
   19f64:	ldr	r0, [fp, #-12]
   19f68:	cmp	r0, #0
   19f6c:	bge	1a0c4 <__assert_fail@plt+0x8fd4>
   19f70:	mov	r0, #1
   19f74:	cmp	r0, #0
   19f78:	bne	1a030 <__assert_fail@plt+0x8f40>
   19f7c:	b	19f80 <__assert_fail@plt+0x8e90>
   19f80:	b	19fb4 <__assert_fail@plt+0x8ec4>
   19f84:	ldr	r0, [fp, #-8]
   19f88:	ldr	r1, [r0]
   19f8c:	ldr	r0, [r0, #4]
   19f90:	ldr	r2, [fp, #-12]
   19f94:	mvn	r3, #0
   19f98:	udiv	r2, r3, r2
   19f9c:	subs	r1, r1, r2
   19fa0:	sbcs	r0, r0, #0
   19fa4:	str	r1, [fp, #-272]	; 0xfffffef0
   19fa8:	str	r0, [fp, #-276]	; 0xfffffeec
   19fac:	bcc	1a1a8 <__assert_fail@plt+0x90b8>
   19fb0:	b	1a1c8 <__assert_fail@plt+0x90d8>
   19fb4:	b	19fb8 <__assert_fail@plt+0x8ec8>
   19fb8:	ldr	r0, [pc, #3468]	; 1ad4c <__assert_fail@plt+0x9c5c>
   19fbc:	ldr	r1, [fp, #-12]
   19fc0:	cmp	r1, r0
   19fc4:	blt	19fdc <__assert_fail@plt+0x8eec>
   19fc8:	b	19fe8 <__assert_fail@plt+0x8ef8>
   19fcc:	ldr	r0, [fp, #-12]
   19fd0:	movw	r1, #0
   19fd4:	cmp	r1, r0
   19fd8:	bge	19fe8 <__assert_fail@plt+0x8ef8>
   19fdc:	movw	r0, #1
   19fe0:	str	r0, [fp, #-280]	; 0xfffffee8
   19fe4:	b	1a000 <__assert_fail@plt+0x8f10>
   19fe8:	ldr	r0, [fp, #-12]
   19fec:	movw	r1, #0
   19ff0:	sub	r0, r1, r0
   19ff4:	mvn	r1, #0
   19ff8:	udiv	r0, r1, r0
   19ffc:	str	r0, [fp, #-280]	; 0xfffffee8
   1a000:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1a004:	ldr	r1, [fp, #-8]
   1a008:	ldr	r2, [r1]
   1a00c:	ldr	r1, [r1, #4]
   1a010:	mvn	r1, r1
   1a014:	mvn	r2, r2
   1a018:	subs	r0, r2, r0
   1a01c:	sbcs	r1, r1, #0
   1a020:	str	r0, [sp, #284]	; 0x11c
   1a024:	str	r1, [sp, #280]	; 0x118
   1a028:	bcs	1a1a8 <__assert_fail@plt+0x90b8>
   1a02c:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a030:	b	1a034 <__assert_fail@plt+0x8f44>
   1a034:	b	1a094 <__assert_fail@plt+0x8fa4>
   1a038:	b	1a094 <__assert_fail@plt+0x8fa4>
   1a03c:	ldr	r0, [fp, #-12]
   1a040:	cmn	r0, #1
   1a044:	bne	1a094 <__assert_fail@plt+0x8fa4>
   1a048:	b	1a068 <__assert_fail@plt+0x8f78>
   1a04c:	ldr	r0, [fp, #-8]
   1a050:	ldr	r1, [r0]
   1a054:	ldr	r0, [r0, #4]
   1a058:	orr	r0, r1, r0
   1a05c:	cmp	r0, #0
   1a060:	bne	1a1a8 <__assert_fail@plt+0x90b8>
   1a064:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a068:	ldr	r0, [fp, #-8]
   1a06c:	ldr	r1, [r0]
   1a070:	ldr	r0, [r0, #4]
   1a074:	orr	r0, r1, r0
   1a078:	cmp	r0, #0
   1a07c:	beq	1a1c8 <__assert_fail@plt+0x90d8>
   1a080:	b	1a084 <__assert_fail@plt+0x8f94>
   1a084:	mov	r0, #0
   1a088:	cmp	r0, #0
   1a08c:	bne	1a1a8 <__assert_fail@plt+0x90b8>
   1a090:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a094:	ldr	r0, [fp, #-12]
   1a098:	mov	r1, #0
   1a09c:	sdiv	r0, r1, r0
   1a0a0:	ldr	r1, [fp, #-8]
   1a0a4:	ldr	r2, [r1]
   1a0a8:	ldr	r1, [r1, #4]
   1a0ac:	subs	r2, r0, r2
   1a0b0:	rscs	r0, r1, r0, asr #31
   1a0b4:	str	r2, [sp, #276]	; 0x114
   1a0b8:	str	r0, [sp, #272]	; 0x110
   1a0bc:	bcc	1a1a8 <__assert_fail@plt+0x90b8>
   1a0c0:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a0c4:	ldr	r0, [fp, #-12]
   1a0c8:	cmp	r0, #0
   1a0cc:	bne	1a0d4 <__assert_fail@plt+0x8fe4>
   1a0d0:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a0d4:	mov	r0, #1
   1a0d8:	cmp	r0, #0
   1a0dc:	bne	1a178 <__assert_fail@plt+0x9088>
   1a0e0:	b	1a0e4 <__assert_fail@plt+0x8ff4>
   1a0e4:	b	1a0ec <__assert_fail@plt+0x8ffc>
   1a0e8:	b	1a0f0 <__assert_fail@plt+0x9000>
   1a0ec:	b	1a140 <__assert_fail@plt+0x9050>
   1a0f0:	ldr	r0, [fp, #-8]
   1a0f4:	ldr	r1, [r0]
   1a0f8:	ldr	r0, [r0, #4]
   1a0fc:	and	r0, r1, r0
   1a100:	cmn	r0, #1
   1a104:	bne	1a140 <__assert_fail@plt+0x9050>
   1a108:	b	1a10c <__assert_fail@plt+0x901c>
   1a10c:	b	1a110 <__assert_fail@plt+0x9020>
   1a110:	ldr	r0, [fp, #-12]
   1a114:	add	r0, r0, #0
   1a118:	movw	r1, #0
   1a11c:	cmp	r1, r0
   1a120:	blt	1a1a8 <__assert_fail@plt+0x90b8>
   1a124:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a128:	ldr	r0, [fp, #-12]
   1a12c:	sub	r0, r0, #1
   1a130:	mvn	r1, #0
   1a134:	cmp	r1, r0
   1a138:	blt	1a1a8 <__assert_fail@plt+0x90b8>
   1a13c:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a140:	ldr	r0, [fp, #-8]
   1a144:	ldr	r2, [r0]
   1a148:	ldr	r3, [r0, #4]
   1a14c:	mov	r0, #0
   1a150:	str	r0, [sp, #268]	; 0x10c
   1a154:	ldr	r1, [sp, #268]	; 0x10c
   1a158:	bl	1d258 <__assert_fail@plt+0xc168>
   1a15c:	ldr	r2, [fp, #-12]
   1a160:	subs	r0, r0, r2
   1a164:	sbcs	r1, r1, r2, asr #31
   1a168:	str	r0, [sp, #264]	; 0x108
   1a16c:	str	r1, [sp, #260]	; 0x104
   1a170:	bcc	1a1a8 <__assert_fail@plt+0x90b8>
   1a174:	b	1a1c8 <__assert_fail@plt+0x90d8>
   1a178:	ldr	r0, [fp, #-12]
   1a17c:	mvn	r1, #0
   1a180:	udiv	r0, r1, r0
   1a184:	ldr	r1, [fp, #-8]
   1a188:	ldr	r2, [r1]
   1a18c:	ldr	r1, [r1, #4]
   1a190:	subs	r0, r0, r2
   1a194:	rscs	r1, r1, #0
   1a198:	str	r0, [sp, #256]	; 0x100
   1a19c:	str	r1, [sp, #252]	; 0xfc
   1a1a0:	bcs	1a1c8 <__assert_fail@plt+0x90d8>
   1a1a4:	b	1a1a8 <__assert_fail@plt+0x90b8>
   1a1a8:	ldr	r0, [fp, #-8]
   1a1ac:	ldr	r0, [r0]
   1a1b0:	ldr	r1, [fp, #-12]
   1a1b4:	mul	r0, r0, r1
   1a1b8:	mov	r1, #0
   1a1bc:	str	r1, [fp, #-20]	; 0xffffffec
   1a1c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a1c4:	b	1ad08 <__assert_fail@plt+0x9c18>
   1a1c8:	ldr	r0, [fp, #-8]
   1a1cc:	ldr	r0, [r0]
   1a1d0:	ldr	r1, [fp, #-12]
   1a1d4:	mul	r0, r0, r1
   1a1d8:	mov	r1, #0
   1a1dc:	str	r1, [fp, #-20]	; 0xffffffec
   1a1e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a1e4:	b	1ad24 <__assert_fail@plt+0x9c34>
   1a1e8:	b	1a704 <__assert_fail@plt+0x9614>
   1a1ec:	b	1a480 <__assert_fail@plt+0x9390>
   1a1f0:	ldr	r0, [fp, #-12]
   1a1f4:	cmp	r0, #0
   1a1f8:	bge	1a36c <__assert_fail@plt+0x927c>
   1a1fc:	mov	r0, #1
   1a200:	cmp	r0, #0
   1a204:	bne	1a2c0 <__assert_fail@plt+0x91d0>
   1a208:	b	1a20c <__assert_fail@plt+0x911c>
   1a20c:	b	1a210 <__assert_fail@plt+0x9120>
   1a210:	ldr	r0, [fp, #-8]
   1a214:	ldr	r1, [r0]
   1a218:	ldr	r0, [r0, #4]
   1a21c:	ldr	r2, [fp, #-12]
   1a220:	mvn	r3, #-2147483648	; 0x80000000
   1a224:	sdiv	r2, r3, r2
   1a228:	subs	r1, r1, r2
   1a22c:	sbcs	r0, r0, r2, asr #31
   1a230:	str	r1, [sp, #248]	; 0xf8
   1a234:	str	r0, [sp, #244]	; 0xf4
   1a238:	bcc	1a440 <__assert_fail@plt+0x9350>
   1a23c:	b	1a460 <__assert_fail@plt+0x9370>
   1a240:	b	1a244 <__assert_fail@plt+0x9154>
   1a244:	ldr	r0, [pc, #2816]	; 1ad4c <__assert_fail@plt+0x9c5c>
   1a248:	ldr	r1, [fp, #-12]
   1a24c:	cmp	r1, r0
   1a250:	blt	1a268 <__assert_fail@plt+0x9178>
   1a254:	b	1a274 <__assert_fail@plt+0x9184>
   1a258:	ldr	r0, [fp, #-12]
   1a25c:	movw	r1, #0
   1a260:	cmp	r1, r0
   1a264:	bge	1a274 <__assert_fail@plt+0x9184>
   1a268:	movw	r0, #0
   1a26c:	str	r0, [sp, #240]	; 0xf0
   1a270:	b	1a28c <__assert_fail@plt+0x919c>
   1a274:	ldr	r0, [pc, #2772]	; 1ad50 <__assert_fail@plt+0x9c60>
   1a278:	ldr	r1, [fp, #-12]
   1a27c:	movw	r2, #0
   1a280:	sub	r1, r2, r1
   1a284:	sdiv	r0, r0, r1
   1a288:	str	r0, [sp, #240]	; 0xf0
   1a28c:	ldr	r0, [sp, #240]	; 0xf0
   1a290:	ldr	r1, [fp, #-8]
   1a294:	ldr	r2, [r1]
   1a298:	ldr	r1, [r1, #4]
   1a29c:	mvn	r1, r1
   1a2a0:	mvn	r2, r2
   1a2a4:	subs	r2, r2, r0
   1a2a8:	sbcs	r0, r1, r0, asr #31
   1a2ac:	str	r2, [sp, #236]	; 0xec
   1a2b0:	str	r0, [sp, #232]	; 0xe8
   1a2b4:	bcs	1a440 <__assert_fail@plt+0x9350>
   1a2b8:	b	1a460 <__assert_fail@plt+0x9370>
   1a2bc:	andhi	r0, r0, r1
   1a2c0:	ldr	r0, [fp, #-12]
   1a2c4:	cmn	r0, #1
   1a2c8:	bne	1a33c <__assert_fail@plt+0x924c>
   1a2cc:	b	1a2f0 <__assert_fail@plt+0x9200>
   1a2d0:	ldr	r0, [fp, #-8]
   1a2d4:	ldr	r1, [r0]
   1a2d8:	ldr	r0, [r0, #4]
   1a2dc:	eor	r1, r1, #-2147483648	; 0x80000000
   1a2e0:	orr	r0, r1, r0
   1a2e4:	cmp	r0, #0
   1a2e8:	bne	1a440 <__assert_fail@plt+0x9350>
   1a2ec:	b	1a460 <__assert_fail@plt+0x9370>
   1a2f0:	ldr	r0, [fp, #-8]
   1a2f4:	ldr	r1, [r0]
   1a2f8:	ldr	r0, [r0, #4]
   1a2fc:	orr	r0, r1, r0
   1a300:	cmp	r0, #0
   1a304:	beq	1a460 <__assert_fail@plt+0x9370>
   1a308:	b	1a30c <__assert_fail@plt+0x921c>
   1a30c:	ldr	r0, [fp, #-8]
   1a310:	ldr	r1, [r0]
   1a314:	ldr	r0, [r0, #4]
   1a318:	subs	r1, r1, #1
   1a31c:	sbc	r0, r0, #0
   1a320:	mvn	r2, #-2147483648	; 0x80000000
   1a324:	subs	r1, r2, r1
   1a328:	rscs	r0, r0, #0
   1a32c:	str	r1, [sp, #228]	; 0xe4
   1a330:	str	r0, [sp, #224]	; 0xe0
   1a334:	bcc	1a440 <__assert_fail@plt+0x9350>
   1a338:	b	1a460 <__assert_fail@plt+0x9370>
   1a33c:	ldr	r0, [fp, #-12]
   1a340:	mov	r1, #-2147483648	; 0x80000000
   1a344:	sdiv	r0, r1, r0
   1a348:	ldr	r1, [fp, #-8]
   1a34c:	ldr	r2, [r1]
   1a350:	ldr	r1, [r1, #4]
   1a354:	subs	r2, r0, r2
   1a358:	rscs	r0, r1, r0, asr #31
   1a35c:	str	r2, [sp, #220]	; 0xdc
   1a360:	str	r0, [sp, #216]	; 0xd8
   1a364:	bcc	1a440 <__assert_fail@plt+0x9350>
   1a368:	b	1a460 <__assert_fail@plt+0x9370>
   1a36c:	ldr	r0, [fp, #-12]
   1a370:	cmp	r0, #0
   1a374:	bne	1a37c <__assert_fail@plt+0x928c>
   1a378:	b	1a460 <__assert_fail@plt+0x9370>
   1a37c:	mov	r0, #1
   1a380:	cmp	r0, #0
   1a384:	bne	1a410 <__assert_fail@plt+0x9320>
   1a388:	b	1a38c <__assert_fail@plt+0x929c>
   1a38c:	ldr	r0, [fp, #-8]
   1a390:	ldr	r1, [r0]
   1a394:	ldr	r0, [r0, #4]
   1a398:	and	r0, r1, r0
   1a39c:	cmn	r0, #1
   1a3a0:	bne	1a3dc <__assert_fail@plt+0x92ec>
   1a3a4:	b	1a3a8 <__assert_fail@plt+0x92b8>
   1a3a8:	b	1a3ac <__assert_fail@plt+0x92bc>
   1a3ac:	ldr	r0, [fp, #-12]
   1a3b0:	add	r0, r0, #-2147483648	; 0x80000000
   1a3b4:	movw	r1, #0
   1a3b8:	cmp	r1, r0
   1a3bc:	blt	1a440 <__assert_fail@plt+0x9350>
   1a3c0:	b	1a460 <__assert_fail@plt+0x9370>
   1a3c4:	ldr	r0, [pc, #2436]	; 1ad50 <__assert_fail@plt+0x9c60>
   1a3c8:	ldr	r1, [fp, #-12]
   1a3cc:	sub	r1, r1, #1
   1a3d0:	cmp	r0, r1
   1a3d4:	blt	1a440 <__assert_fail@plt+0x9350>
   1a3d8:	b	1a460 <__assert_fail@plt+0x9370>
   1a3dc:	ldr	r0, [fp, #-8]
   1a3e0:	ldr	r2, [r0]
   1a3e4:	ldr	r3, [r0, #4]
   1a3e8:	mov	r0, #-2147483648	; 0x80000000
   1a3ec:	mvn	r1, #0
   1a3f0:	bl	1d258 <__assert_fail@plt+0xc168>
   1a3f4:	ldr	r2, [fp, #-12]
   1a3f8:	subs	r0, r0, r2
   1a3fc:	sbcs	r1, r1, r2, asr #31
   1a400:	str	r0, [sp, #212]	; 0xd4
   1a404:	str	r1, [sp, #208]	; 0xd0
   1a408:	bcc	1a440 <__assert_fail@plt+0x9350>
   1a40c:	b	1a460 <__assert_fail@plt+0x9370>
   1a410:	ldr	r0, [fp, #-12]
   1a414:	mvn	r1, #-2147483648	; 0x80000000
   1a418:	sdiv	r0, r1, r0
   1a41c:	ldr	r1, [fp, #-8]
   1a420:	ldr	r2, [r1]
   1a424:	ldr	r1, [r1, #4]
   1a428:	subs	r2, r0, r2
   1a42c:	rscs	r0, r1, r0, asr #31
   1a430:	str	r2, [sp, #204]	; 0xcc
   1a434:	str	r0, [sp, #200]	; 0xc8
   1a438:	bcs	1a460 <__assert_fail@plt+0x9370>
   1a43c:	b	1a440 <__assert_fail@plt+0x9350>
   1a440:	ldr	r0, [fp, #-8]
   1a444:	ldr	r0, [r0]
   1a448:	ldr	r1, [fp, #-12]
   1a44c:	mul	r0, r0, r1
   1a450:	asr	r1, r0, #31
   1a454:	str	r0, [fp, #-24]	; 0xffffffe8
   1a458:	str	r1, [fp, #-20]	; 0xffffffec
   1a45c:	b	1ad08 <__assert_fail@plt+0x9c18>
   1a460:	ldr	r0, [fp, #-8]
   1a464:	ldr	r0, [r0]
   1a468:	ldr	r1, [fp, #-12]
   1a46c:	mul	r0, r0, r1
   1a470:	asr	r1, r0, #31
   1a474:	str	r0, [fp, #-24]	; 0xffffffe8
   1a478:	str	r1, [fp, #-20]	; 0xffffffec
   1a47c:	b	1ad24 <__assert_fail@plt+0x9c34>
   1a480:	ldr	r0, [fp, #-12]
   1a484:	cmp	r0, #0
   1a488:	bge	1a5e0 <__assert_fail@plt+0x94f0>
   1a48c:	mov	r0, #1
   1a490:	cmp	r0, #0
   1a494:	bne	1a54c <__assert_fail@plt+0x945c>
   1a498:	b	1a49c <__assert_fail@plt+0x93ac>
   1a49c:	b	1a4d0 <__assert_fail@plt+0x93e0>
   1a4a0:	ldr	r0, [fp, #-8]
   1a4a4:	ldr	r1, [r0]
   1a4a8:	ldr	r0, [r0, #4]
   1a4ac:	ldr	r2, [fp, #-12]
   1a4b0:	mvn	r3, #0
   1a4b4:	udiv	r2, r3, r2
   1a4b8:	subs	r1, r1, r2
   1a4bc:	sbcs	r0, r0, #0
   1a4c0:	str	r1, [sp, #196]	; 0xc4
   1a4c4:	str	r0, [sp, #192]	; 0xc0
   1a4c8:	bcc	1a6c4 <__assert_fail@plt+0x95d4>
   1a4cc:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a4d0:	b	1a4d4 <__assert_fail@plt+0x93e4>
   1a4d4:	ldr	r0, [pc, #2160]	; 1ad4c <__assert_fail@plt+0x9c5c>
   1a4d8:	ldr	r1, [fp, #-12]
   1a4dc:	cmp	r1, r0
   1a4e0:	blt	1a4f8 <__assert_fail@plt+0x9408>
   1a4e4:	b	1a504 <__assert_fail@plt+0x9414>
   1a4e8:	ldr	r0, [fp, #-12]
   1a4ec:	movw	r1, #0
   1a4f0:	cmp	r1, r0
   1a4f4:	bge	1a504 <__assert_fail@plt+0x9414>
   1a4f8:	movw	r0, #1
   1a4fc:	str	r0, [sp, #188]	; 0xbc
   1a500:	b	1a51c <__assert_fail@plt+0x942c>
   1a504:	ldr	r0, [fp, #-12]
   1a508:	movw	r1, #0
   1a50c:	sub	r0, r1, r0
   1a510:	mvn	r1, #0
   1a514:	udiv	r0, r1, r0
   1a518:	str	r0, [sp, #188]	; 0xbc
   1a51c:	ldr	r0, [sp, #188]	; 0xbc
   1a520:	ldr	r1, [fp, #-8]
   1a524:	ldr	r2, [r1]
   1a528:	ldr	r1, [r1, #4]
   1a52c:	mvn	r1, r1
   1a530:	mvn	r2, r2
   1a534:	subs	r0, r2, r0
   1a538:	sbcs	r1, r1, #0
   1a53c:	str	r0, [sp, #184]	; 0xb8
   1a540:	str	r1, [sp, #180]	; 0xb4
   1a544:	bcs	1a6c4 <__assert_fail@plt+0x95d4>
   1a548:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a54c:	b	1a550 <__assert_fail@plt+0x9460>
   1a550:	b	1a5b0 <__assert_fail@plt+0x94c0>
   1a554:	b	1a5b0 <__assert_fail@plt+0x94c0>
   1a558:	ldr	r0, [fp, #-12]
   1a55c:	cmn	r0, #1
   1a560:	bne	1a5b0 <__assert_fail@plt+0x94c0>
   1a564:	b	1a584 <__assert_fail@plt+0x9494>
   1a568:	ldr	r0, [fp, #-8]
   1a56c:	ldr	r1, [r0]
   1a570:	ldr	r0, [r0, #4]
   1a574:	orr	r0, r1, r0
   1a578:	cmp	r0, #0
   1a57c:	bne	1a6c4 <__assert_fail@plt+0x95d4>
   1a580:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a584:	ldr	r0, [fp, #-8]
   1a588:	ldr	r1, [r0]
   1a58c:	ldr	r0, [r0, #4]
   1a590:	orr	r0, r1, r0
   1a594:	cmp	r0, #0
   1a598:	beq	1a6e4 <__assert_fail@plt+0x95f4>
   1a59c:	b	1a5a0 <__assert_fail@plt+0x94b0>
   1a5a0:	mov	r0, #0
   1a5a4:	cmp	r0, #0
   1a5a8:	bne	1a6c4 <__assert_fail@plt+0x95d4>
   1a5ac:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a5b0:	ldr	r0, [fp, #-12]
   1a5b4:	mov	r1, #0
   1a5b8:	sdiv	r0, r1, r0
   1a5bc:	ldr	r1, [fp, #-8]
   1a5c0:	ldr	r2, [r1]
   1a5c4:	ldr	r1, [r1, #4]
   1a5c8:	subs	r2, r0, r2
   1a5cc:	rscs	r0, r1, r0, asr #31
   1a5d0:	str	r2, [sp, #176]	; 0xb0
   1a5d4:	str	r0, [sp, #172]	; 0xac
   1a5d8:	bcc	1a6c4 <__assert_fail@plt+0x95d4>
   1a5dc:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a5e0:	ldr	r0, [fp, #-12]
   1a5e4:	cmp	r0, #0
   1a5e8:	bne	1a5f0 <__assert_fail@plt+0x9500>
   1a5ec:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a5f0:	mov	r0, #1
   1a5f4:	cmp	r0, #0
   1a5f8:	bne	1a694 <__assert_fail@plt+0x95a4>
   1a5fc:	b	1a600 <__assert_fail@plt+0x9510>
   1a600:	b	1a608 <__assert_fail@plt+0x9518>
   1a604:	b	1a60c <__assert_fail@plt+0x951c>
   1a608:	b	1a65c <__assert_fail@plt+0x956c>
   1a60c:	ldr	r0, [fp, #-8]
   1a610:	ldr	r1, [r0]
   1a614:	ldr	r0, [r0, #4]
   1a618:	and	r0, r1, r0
   1a61c:	cmn	r0, #1
   1a620:	bne	1a65c <__assert_fail@plt+0x956c>
   1a624:	b	1a628 <__assert_fail@plt+0x9538>
   1a628:	b	1a62c <__assert_fail@plt+0x953c>
   1a62c:	ldr	r0, [fp, #-12]
   1a630:	add	r0, r0, #0
   1a634:	movw	r1, #0
   1a638:	cmp	r1, r0
   1a63c:	blt	1a6c4 <__assert_fail@plt+0x95d4>
   1a640:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a644:	ldr	r0, [fp, #-12]
   1a648:	sub	r0, r0, #1
   1a64c:	mvn	r1, #0
   1a650:	cmp	r1, r0
   1a654:	blt	1a6c4 <__assert_fail@plt+0x95d4>
   1a658:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a65c:	ldr	r0, [fp, #-8]
   1a660:	ldr	r2, [r0]
   1a664:	ldr	r3, [r0, #4]
   1a668:	mov	r0, #0
   1a66c:	str	r0, [sp, #168]	; 0xa8
   1a670:	ldr	r1, [sp, #168]	; 0xa8
   1a674:	bl	1d258 <__assert_fail@plt+0xc168>
   1a678:	ldr	r2, [fp, #-12]
   1a67c:	subs	r0, r0, r2
   1a680:	sbcs	r1, r1, r2, asr #31
   1a684:	str	r0, [sp, #164]	; 0xa4
   1a688:	str	r1, [sp, #160]	; 0xa0
   1a68c:	bcc	1a6c4 <__assert_fail@plt+0x95d4>
   1a690:	b	1a6e4 <__assert_fail@plt+0x95f4>
   1a694:	ldr	r0, [fp, #-12]
   1a698:	mvn	r1, #0
   1a69c:	udiv	r0, r1, r0
   1a6a0:	ldr	r1, [fp, #-8]
   1a6a4:	ldr	r2, [r1]
   1a6a8:	ldr	r1, [r1, #4]
   1a6ac:	subs	r0, r0, r2
   1a6b0:	rscs	r1, r1, #0
   1a6b4:	str	r0, [sp, #156]	; 0x9c
   1a6b8:	str	r1, [sp, #152]	; 0x98
   1a6bc:	bcs	1a6e4 <__assert_fail@plt+0x95f4>
   1a6c0:	b	1a6c4 <__assert_fail@plt+0x95d4>
   1a6c4:	ldr	r0, [fp, #-8]
   1a6c8:	ldr	r0, [r0]
   1a6cc:	ldr	r1, [fp, #-12]
   1a6d0:	mul	r0, r0, r1
   1a6d4:	mov	r1, #0
   1a6d8:	str	r1, [fp, #-20]	; 0xffffffec
   1a6dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a6e0:	b	1ad08 <__assert_fail@plt+0x9c18>
   1a6e4:	ldr	r0, [fp, #-8]
   1a6e8:	ldr	r0, [r0]
   1a6ec:	ldr	r1, [fp, #-12]
   1a6f0:	mul	r0, r0, r1
   1a6f4:	mov	r1, #0
   1a6f8:	str	r1, [fp, #-20]	; 0xffffffec
   1a6fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a700:	b	1ad24 <__assert_fail@plt+0x9c34>
   1a704:	b	1aa20 <__assert_fail@plt+0x9930>
   1a708:	ldr	r0, [fp, #-12]
   1a70c:	cmp	r0, #0
   1a710:	bge	1a8d4 <__assert_fail@plt+0x97e4>
   1a714:	mov	r0, #1
   1a718:	cmp	r0, #0
   1a71c:	bne	1a81c <__assert_fail@plt+0x972c>
   1a720:	b	1a724 <__assert_fail@plt+0x9634>
   1a724:	b	1a728 <__assert_fail@plt+0x9638>
   1a728:	ldr	r0, [fp, #-8]
   1a72c:	ldr	r1, [r0]
   1a730:	ldr	r0, [r0, #4]
   1a734:	ldr	r2, [fp, #-12]
   1a738:	asr	r3, r2, #31
   1a73c:	mvn	ip, #0
   1a740:	mvn	lr, #-2147483648	; 0x80000000
   1a744:	str	r0, [sp, #148]	; 0x94
   1a748:	mov	r0, ip
   1a74c:	str	r1, [sp, #144]	; 0x90
   1a750:	mov	r1, lr
   1a754:	bl	1d184 <__assert_fail@plt+0xc094>
   1a758:	ldr	r2, [sp, #144]	; 0x90
   1a75c:	subs	r0, r2, r0
   1a760:	ldr	r2, [sp, #148]	; 0x94
   1a764:	sbcs	r1, r2, r1
   1a768:	str	r0, [sp, #140]	; 0x8c
   1a76c:	str	r1, [sp, #136]	; 0x88
   1a770:	bcc	1a9c8 <__assert_fail@plt+0x98d8>
   1a774:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a778:	b	1a77c <__assert_fail@plt+0x968c>
   1a77c:	ldr	r0, [pc, #1480]	; 1ad4c <__assert_fail@plt+0x9c5c>
   1a780:	ldr	r1, [fp, #-12]
   1a784:	cmp	r1, r0
   1a788:	blt	1a7a0 <__assert_fail@plt+0x96b0>
   1a78c:	b	1a7b4 <__assert_fail@plt+0x96c4>
   1a790:	ldr	r0, [fp, #-12]
   1a794:	movw	r1, #0
   1a798:	cmp	r1, r0
   1a79c:	bge	1a7b4 <__assert_fail@plt+0x96c4>
   1a7a0:	mov	r0, #0
   1a7a4:	mvn	r1, #0
   1a7a8:	str	r1, [sp, #132]	; 0x84
   1a7ac:	str	r0, [sp, #128]	; 0x80
   1a7b0:	b	1a7e8 <__assert_fail@plt+0x96f8>
   1a7b4:	ldr	r0, [fp, #-12]
   1a7b8:	rsb	r0, r0, #0
   1a7bc:	asr	r3, r0, #31
   1a7c0:	mvn	r1, #0
   1a7c4:	mvn	r2, #-2147483648	; 0x80000000
   1a7c8:	str	r0, [sp, #124]	; 0x7c
   1a7cc:	mov	r0, r1
   1a7d0:	mov	r1, r2
   1a7d4:	ldr	r2, [sp, #124]	; 0x7c
   1a7d8:	bl	1d184 <__assert_fail@plt+0xc094>
   1a7dc:	str	r0, [sp, #132]	; 0x84
   1a7e0:	str	r1, [sp, #128]	; 0x80
   1a7e4:	b	1a7e8 <__assert_fail@plt+0x96f8>
   1a7e8:	ldr	r0, [sp, #128]	; 0x80
   1a7ec:	ldr	r1, [sp, #132]	; 0x84
   1a7f0:	ldr	r2, [fp, #-8]
   1a7f4:	ldr	r3, [r2]
   1a7f8:	ldr	r2, [r2, #4]
   1a7fc:	mvn	r2, r2
   1a800:	mvn	r3, r3
   1a804:	subs	r1, r3, r1
   1a808:	sbcs	r0, r2, r0
   1a80c:	str	r1, [sp, #120]	; 0x78
   1a810:	str	r0, [sp, #116]	; 0x74
   1a814:	bcs	1a9c8 <__assert_fail@plt+0x98d8>
   1a818:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a81c:	ldr	r0, [fp, #-12]
   1a820:	cmn	r0, #1
   1a824:	bne	1a88c <__assert_fail@plt+0x979c>
   1a828:	b	1a84c <__assert_fail@plt+0x975c>
   1a82c:	ldr	r0, [fp, #-8]
   1a830:	ldr	r1, [r0]
   1a834:	ldr	r0, [r0, #4]
   1a838:	eor	r0, r0, #-2147483648	; 0x80000000
   1a83c:	orr	r0, r1, r0
   1a840:	cmp	r0, #0
   1a844:	bne	1a9c8 <__assert_fail@plt+0x98d8>
   1a848:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a84c:	ldr	r0, [fp, #-8]
   1a850:	ldr	r1, [r0]
   1a854:	ldr	r0, [r0, #4]
   1a858:	orr	r0, r1, r0
   1a85c:	cmp	r0, #0
   1a860:	beq	1a9f4 <__assert_fail@plt+0x9904>
   1a864:	b	1a868 <__assert_fail@plt+0x9778>
   1a868:	ldr	r0, [fp, #-8]
   1a86c:	ldr	r1, [r0]
   1a870:	ldr	r0, [r0, #4]
   1a874:	subs	r1, r1, #1
   1a878:	sbc	r0, r0, #0
   1a87c:	cmp	r0, #0
   1a880:	str	r1, [sp, #112]	; 0x70
   1a884:	blt	1a9c8 <__assert_fail@plt+0x98d8>
   1a888:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a88c:	ldr	r0, [fp, #-12]
   1a890:	asr	r3, r0, #31
   1a894:	mov	r1, #0
   1a898:	mov	r2, #-2147483648	; 0x80000000
   1a89c:	str	r0, [sp, #108]	; 0x6c
   1a8a0:	mov	r0, r1
   1a8a4:	mov	r1, r2
   1a8a8:	ldr	r2, [sp, #108]	; 0x6c
   1a8ac:	bl	1d184 <__assert_fail@plt+0xc094>
   1a8b0:	ldr	r2, [fp, #-8]
   1a8b4:	ldr	r3, [r2]
   1a8b8:	ldr	r2, [r2, #4]
   1a8bc:	subs	r0, r0, r3
   1a8c0:	sbcs	r1, r1, r2
   1a8c4:	str	r0, [sp, #104]	; 0x68
   1a8c8:	str	r1, [sp, #100]	; 0x64
   1a8cc:	bcc	1a9c8 <__assert_fail@plt+0x98d8>
   1a8d0:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a8d4:	ldr	r0, [fp, #-12]
   1a8d8:	cmp	r0, #0
   1a8dc:	bne	1a8e4 <__assert_fail@plt+0x97f4>
   1a8e0:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a8e4:	mov	r0, #1
   1a8e8:	cmp	r0, #0
   1a8ec:	bne	1a980 <__assert_fail@plt+0x9890>
   1a8f0:	b	1a8f4 <__assert_fail@plt+0x9804>
   1a8f4:	ldr	r0, [fp, #-8]
   1a8f8:	ldr	r1, [r0]
   1a8fc:	ldr	r0, [r0, #4]
   1a900:	and	r0, r1, r0
   1a904:	cmn	r0, #1
   1a908:	bne	1a94c <__assert_fail@plt+0x985c>
   1a90c:	b	1a910 <__assert_fail@plt+0x9820>
   1a910:	b	1a914 <__assert_fail@plt+0x9824>
   1a914:	ldr	r0, [fp, #-12]
   1a918:	mov	r1, #-2147483648	; 0x80000000
   1a91c:	add	r1, r1, r0, asr #31
   1a920:	rsbs	r0, r0, #0
   1a924:	rscs	r1, r1, #0
   1a928:	str	r0, [sp, #96]	; 0x60
   1a92c:	str	r1, [sp, #92]	; 0x5c
   1a930:	blt	1a9c8 <__assert_fail@plt+0x98d8>
   1a934:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a938:	mov	r0, #0
   1a93c:	cmp	r0, #0
   1a940:	bne	1a9c8 <__assert_fail@plt+0x98d8>
   1a944:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a948:			; <UNDEFINED> instruction: 0xffff8000
   1a94c:	ldr	r0, [fp, #-8]
   1a950:	ldr	r2, [r0]
   1a954:	ldr	r3, [r0, #4]
   1a958:	mov	r0, #0
   1a95c:	mov	r1, #-2147483648	; 0x80000000
   1a960:	bl	1d258 <__assert_fail@plt+0xc168>
   1a964:	ldr	r2, [fp, #-12]
   1a968:	subs	r0, r0, r2
   1a96c:	sbcs	r1, r1, r2, asr #31
   1a970:	str	r0, [sp, #88]	; 0x58
   1a974:	str	r1, [sp, #84]	; 0x54
   1a978:	bcc	1a9c8 <__assert_fail@plt+0x98d8>
   1a97c:	b	1a9f4 <__assert_fail@plt+0x9904>
   1a980:	ldr	r0, [fp, #-12]
   1a984:	asr	r3, r0, #31
   1a988:	mvn	r1, #0
   1a98c:	mvn	r2, #-2147483648	; 0x80000000
   1a990:	str	r0, [sp, #80]	; 0x50
   1a994:	mov	r0, r1
   1a998:	mov	r1, r2
   1a99c:	ldr	r2, [sp, #80]	; 0x50
   1a9a0:	bl	1d184 <__assert_fail@plt+0xc094>
   1a9a4:	ldr	r2, [fp, #-8]
   1a9a8:	ldr	r3, [r2]
   1a9ac:	ldr	r2, [r2, #4]
   1a9b0:	subs	r0, r0, r3
   1a9b4:	sbcs	r1, r1, r2
   1a9b8:	str	r0, [sp, #76]	; 0x4c
   1a9bc:	str	r1, [sp, #72]	; 0x48
   1a9c0:	bcs	1a9f4 <__assert_fail@plt+0x9904>
   1a9c4:	b	1a9c8 <__assert_fail@plt+0x98d8>
   1a9c8:	ldr	r0, [fp, #-8]
   1a9cc:	ldr	r1, [r0]
   1a9d0:	ldr	r0, [r0, #4]
   1a9d4:	ldr	r2, [fp, #-12]
   1a9d8:	asr	r3, r2, #31
   1a9dc:	umull	ip, lr, r1, r2
   1a9e0:	mla	r1, r1, r3, lr
   1a9e4:	mla	r0, r0, r2, r1
   1a9e8:	str	ip, [fp, #-24]	; 0xffffffe8
   1a9ec:	str	r0, [fp, #-20]	; 0xffffffec
   1a9f0:	b	1ad08 <__assert_fail@plt+0x9c18>
   1a9f4:	ldr	r0, [fp, #-8]
   1a9f8:	ldr	r1, [r0]
   1a9fc:	ldr	r0, [r0, #4]
   1aa00:	ldr	r2, [fp, #-12]
   1aa04:	asr	r3, r2, #31
   1aa08:	umull	ip, lr, r1, r2
   1aa0c:	mla	r1, r1, r3, lr
   1aa10:	mla	r0, r0, r2, r1
   1aa14:	str	ip, [fp, #-24]	; 0xffffffe8
   1aa18:	str	r0, [fp, #-20]	; 0xffffffec
   1aa1c:	b	1ad24 <__assert_fail@plt+0x9c34>
   1aa20:	ldr	r0, [fp, #-12]
   1aa24:	cmp	r0, #0
   1aa28:	bge	1abbc <__assert_fail@plt+0x9acc>
   1aa2c:	mov	r0, #1
   1aa30:	cmp	r0, #0
   1aa34:	bne	1ab28 <__assert_fail@plt+0x9a38>
   1aa38:	b	1aa3c <__assert_fail@plt+0x994c>
   1aa3c:	b	1aa8c <__assert_fail@plt+0x999c>
   1aa40:	ldr	r0, [fp, #-8]
   1aa44:	ldr	r1, [r0]
   1aa48:	ldr	r0, [r0, #4]
   1aa4c:	ldr	r2, [fp, #-12]
   1aa50:	asr	r3, r2, #31
   1aa54:	mvn	ip, #0
   1aa58:	str	r0, [sp, #68]	; 0x44
   1aa5c:	mov	r0, ip
   1aa60:	str	r1, [sp, #64]	; 0x40
   1aa64:	mov	r1, ip
   1aa68:	bl	1d258 <__assert_fail@plt+0xc168>
   1aa6c:	ldr	r2, [sp, #64]	; 0x40
   1aa70:	subs	r0, r2, r0
   1aa74:	ldr	r2, [sp, #68]	; 0x44
   1aa78:	sbcs	r1, r2, r1
   1aa7c:	str	r0, [sp, #60]	; 0x3c
   1aa80:	str	r1, [sp, #56]	; 0x38
   1aa84:	bcc	1acb0 <__assert_fail@plt+0x9bc0>
   1aa88:	b	1acdc <__assert_fail@plt+0x9bec>
   1aa8c:	b	1aa90 <__assert_fail@plt+0x99a0>
   1aa90:	ldr	r0, [pc, #692]	; 1ad4c <__assert_fail@plt+0x9c5c>
   1aa94:	ldr	r1, [fp, #-12]
   1aa98:	cmp	r1, r0
   1aa9c:	blt	1aab4 <__assert_fail@plt+0x99c4>
   1aaa0:	b	1aac8 <__assert_fail@plt+0x99d8>
   1aaa4:	ldr	r0, [fp, #-12]
   1aaa8:	movw	r1, #0
   1aaac:	cmp	r1, r0
   1aab0:	bge	1aac8 <__assert_fail@plt+0x99d8>
   1aab4:	mov	r0, #1
   1aab8:	mvn	r1, #0
   1aabc:	str	r1, [sp, #52]	; 0x34
   1aac0:	str	r0, [sp, #48]	; 0x30
   1aac4:	b	1aaf4 <__assert_fail@plt+0x9a04>
   1aac8:	ldr	r0, [fp, #-12]
   1aacc:	rsb	r0, r0, #0
   1aad0:	asr	r3, r0, #31
   1aad4:	mvn	r1, #0
   1aad8:	str	r0, [sp, #44]	; 0x2c
   1aadc:	mov	r0, r1
   1aae0:	ldr	r2, [sp, #44]	; 0x2c
   1aae4:	bl	1d258 <__assert_fail@plt+0xc168>
   1aae8:	str	r0, [sp, #52]	; 0x34
   1aaec:	str	r1, [sp, #48]	; 0x30
   1aaf0:	b	1aaf4 <__assert_fail@plt+0x9a04>
   1aaf4:	ldr	r0, [sp, #48]	; 0x30
   1aaf8:	ldr	r1, [sp, #52]	; 0x34
   1aafc:	ldr	r2, [fp, #-8]
   1ab00:	ldr	r3, [r2]
   1ab04:	ldr	r2, [r2, #4]
   1ab08:	mvn	r2, r2
   1ab0c:	mvn	r3, r3
   1ab10:	subs	r1, r3, r1
   1ab14:	sbcs	r0, r2, r0
   1ab18:	str	r1, [sp, #40]	; 0x28
   1ab1c:	str	r0, [sp, #36]	; 0x24
   1ab20:	bcs	1acb0 <__assert_fail@plt+0x9bc0>
   1ab24:	b	1acdc <__assert_fail@plt+0x9bec>
   1ab28:	b	1ab2c <__assert_fail@plt+0x9a3c>
   1ab2c:	b	1ab8c <__assert_fail@plt+0x9a9c>
   1ab30:	b	1ab8c <__assert_fail@plt+0x9a9c>
   1ab34:	ldr	r0, [fp, #-12]
   1ab38:	cmn	r0, #1
   1ab3c:	bne	1ab8c <__assert_fail@plt+0x9a9c>
   1ab40:	b	1ab60 <__assert_fail@plt+0x9a70>
   1ab44:	ldr	r0, [fp, #-8]
   1ab48:	ldr	r1, [r0]
   1ab4c:	ldr	r0, [r0, #4]
   1ab50:	orr	r0, r1, r0
   1ab54:	cmp	r0, #0
   1ab58:	bne	1acb0 <__assert_fail@plt+0x9bc0>
   1ab5c:	b	1acdc <__assert_fail@plt+0x9bec>
   1ab60:	ldr	r0, [fp, #-8]
   1ab64:	ldr	r1, [r0]
   1ab68:	ldr	r0, [r0, #4]
   1ab6c:	orr	r0, r1, r0
   1ab70:	cmp	r0, #0
   1ab74:	beq	1acdc <__assert_fail@plt+0x9bec>
   1ab78:	b	1ab7c <__assert_fail@plt+0x9a8c>
   1ab7c:	mov	r0, #0
   1ab80:	cmp	r0, #0
   1ab84:	bne	1acb0 <__assert_fail@plt+0x9bc0>
   1ab88:	b	1acdc <__assert_fail@plt+0x9bec>
   1ab8c:	ldr	r0, [fp, #-12]
   1ab90:	mov	r1, #0
   1ab94:	sdiv	r0, r1, r0
   1ab98:	ldr	r1, [fp, #-8]
   1ab9c:	ldr	r2, [r1]
   1aba0:	ldr	r1, [r1, #4]
   1aba4:	subs	r2, r0, r2
   1aba8:	rscs	r0, r1, r0, asr #31
   1abac:	str	r2, [sp, #32]
   1abb0:	str	r0, [sp, #28]
   1abb4:	bcc	1acb0 <__assert_fail@plt+0x9bc0>
   1abb8:	b	1acdc <__assert_fail@plt+0x9bec>
   1abbc:	ldr	r0, [fp, #-12]
   1abc0:	cmp	r0, #0
   1abc4:	bne	1abcc <__assert_fail@plt+0x9adc>
   1abc8:	b	1acdc <__assert_fail@plt+0x9bec>
   1abcc:	mov	r0, #1
   1abd0:	cmp	r0, #0
   1abd4:	bne	1ac70 <__assert_fail@plt+0x9b80>
   1abd8:	b	1abdc <__assert_fail@plt+0x9aec>
   1abdc:	b	1abe4 <__assert_fail@plt+0x9af4>
   1abe0:	b	1abe8 <__assert_fail@plt+0x9af8>
   1abe4:	b	1ac38 <__assert_fail@plt+0x9b48>
   1abe8:	ldr	r0, [fp, #-8]
   1abec:	ldr	r1, [r0]
   1abf0:	ldr	r0, [r0, #4]
   1abf4:	and	r0, r1, r0
   1abf8:	cmn	r0, #1
   1abfc:	bne	1ac38 <__assert_fail@plt+0x9b48>
   1ac00:	b	1ac04 <__assert_fail@plt+0x9b14>
   1ac04:	b	1ac08 <__assert_fail@plt+0x9b18>
   1ac08:	ldr	r0, [fp, #-12]
   1ac0c:	add	r0, r0, #0
   1ac10:	movw	r1, #0
   1ac14:	cmp	r1, r0
   1ac18:	blt	1acb0 <__assert_fail@plt+0x9bc0>
   1ac1c:	b	1acdc <__assert_fail@plt+0x9bec>
   1ac20:	ldr	r0, [fp, #-12]
   1ac24:	sub	r0, r0, #1
   1ac28:	mvn	r1, #0
   1ac2c:	cmp	r1, r0
   1ac30:	blt	1acb0 <__assert_fail@plt+0x9bc0>
   1ac34:	b	1acdc <__assert_fail@plt+0x9bec>
   1ac38:	ldr	r0, [fp, #-8]
   1ac3c:	ldr	r2, [r0]
   1ac40:	ldr	r3, [r0, #4]
   1ac44:	mov	r0, #0
   1ac48:	str	r0, [sp, #24]
   1ac4c:	ldr	r1, [sp, #24]
   1ac50:	bl	1d258 <__assert_fail@plt+0xc168>
   1ac54:	ldr	r2, [fp, #-12]
   1ac58:	subs	r0, r0, r2
   1ac5c:	sbcs	r1, r1, r2, asr #31
   1ac60:	str	r0, [sp, #20]
   1ac64:	str	r1, [sp, #16]
   1ac68:	bcc	1acb0 <__assert_fail@plt+0x9bc0>
   1ac6c:	b	1acdc <__assert_fail@plt+0x9bec>
   1ac70:	ldr	r0, [fp, #-12]
   1ac74:	asr	r3, r0, #31
   1ac78:	mvn	r1, #0
   1ac7c:	str	r0, [sp, #12]
   1ac80:	mov	r0, r1
   1ac84:	ldr	r2, [sp, #12]
   1ac88:	bl	1d258 <__assert_fail@plt+0xc168>
   1ac8c:	ldr	r2, [fp, #-8]
   1ac90:	ldr	r3, [r2]
   1ac94:	ldr	r2, [r2, #4]
   1ac98:	subs	r0, r0, r3
   1ac9c:	sbcs	r1, r1, r2
   1aca0:	str	r0, [sp, #8]
   1aca4:	str	r1, [sp, #4]
   1aca8:	bcs	1acdc <__assert_fail@plt+0x9bec>
   1acac:	b	1acb0 <__assert_fail@plt+0x9bc0>
   1acb0:	ldr	r0, [fp, #-8]
   1acb4:	ldr	r1, [r0]
   1acb8:	ldr	r0, [r0, #4]
   1acbc:	ldr	r2, [fp, #-12]
   1acc0:	asr	r3, r2, #31
   1acc4:	umull	ip, lr, r1, r2
   1acc8:	mla	r1, r1, r3, lr
   1accc:	mla	r0, r0, r2, r1
   1acd0:	str	ip, [fp, #-24]	; 0xffffffe8
   1acd4:	str	r0, [fp, #-20]	; 0xffffffec
   1acd8:	b	1ad08 <__assert_fail@plt+0x9c18>
   1acdc:	ldr	r0, [fp, #-8]
   1ace0:	ldr	r1, [r0]
   1ace4:	ldr	r0, [r0, #4]
   1ace8:	ldr	r2, [fp, #-12]
   1acec:	asr	r3, r2, #31
   1acf0:	umull	ip, lr, r1, r2
   1acf4:	mla	r1, r1, r3, lr
   1acf8:	mla	r0, r0, r2, r1
   1acfc:	str	ip, [fp, #-24]	; 0xffffffe8
   1ad00:	str	r0, [fp, #-20]	; 0xffffffec
   1ad04:	b	1ad24 <__assert_fail@plt+0x9c34>
   1ad08:	ldr	r0, [fp, #-8]
   1ad0c:	mvn	r1, #0
   1ad10:	str	r1, [r0, #4]
   1ad14:	str	r1, [r0]
   1ad18:	movw	r0, #1
   1ad1c:	str	r0, [fp, #-4]
   1ad20:	b	1ad40 <__assert_fail@plt+0x9c50>
   1ad24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad28:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ad2c:	ldr	r2, [fp, #-8]
   1ad30:	str	r1, [r2, #4]
   1ad34:	str	r0, [r2]
   1ad38:	movw	r0, #0
   1ad3c:	str	r0, [fp, #-4]
   1ad40:	ldr	r0, [fp, #-4]
   1ad44:	mov	sp, fp
   1ad48:	pop	{fp, pc}
   1ad4c:	andhi	r0, r0, r1
   1ad50:	svcvc	0x00ffffff
   1ad54:	push	{fp, lr}
   1ad58:	mov	fp, sp
   1ad5c:	sub	sp, sp, #16
   1ad60:	str	r0, [fp, #-4]
   1ad64:	str	r1, [sp, #8]
   1ad68:	str	r2, [sp, #4]
   1ad6c:	movw	r0, #0
   1ad70:	str	r0, [sp]
   1ad74:	ldr	r0, [sp, #4]
   1ad78:	mvn	r1, #0
   1ad7c:	add	r1, r0, r1
   1ad80:	str	r1, [sp, #4]
   1ad84:	cmp	r0, #0
   1ad88:	beq	1ada8 <__assert_fail@plt+0x9cb8>
   1ad8c:	ldr	r0, [fp, #-4]
   1ad90:	ldr	r1, [sp, #8]
   1ad94:	bl	1924c <__assert_fail@plt+0x815c>
   1ad98:	ldr	r1, [sp]
   1ad9c:	orr	r0, r1, r0
   1ada0:	str	r0, [sp]
   1ada4:	b	1ad74 <__assert_fail@plt+0x9c84>
   1ada8:	ldr	r0, [sp]
   1adac:	mov	sp, fp
   1adb0:	pop	{fp, pc}
   1adb4:	push	{fp, lr}
   1adb8:	mov	fp, sp
   1adbc:	sub	sp, sp, #16
   1adc0:	str	r0, [sp, #8]
   1adc4:	str	r1, [sp, #4]
   1adc8:	ldr	r0, [sp, #8]
   1adcc:	cmp	r0, #0
   1add0:	beq	1ade0 <__assert_fail@plt+0x9cf0>
   1add4:	ldr	r0, [sp, #4]
   1add8:	cmp	r0, #0
   1addc:	bne	1adec <__assert_fail@plt+0x9cfc>
   1ade0:	movw	r0, #1
   1ade4:	str	r0, [sp, #4]
   1ade8:	str	r0, [sp, #8]
   1adec:	ldr	r0, [sp, #4]
   1adf0:	cmp	r0, #0
   1adf4:	beq	1ae28 <__assert_fail@plt+0x9d38>
   1adf8:	ldr	r0, [pc, #76]	; 1ae4c <__assert_fail@plt+0x9d5c>
   1adfc:	ldr	r1, [sp, #4]
   1ae00:	udiv	r0, r0, r1
   1ae04:	ldr	r1, [sp, #8]
   1ae08:	cmp	r0, r1
   1ae0c:	bcs	1ae28 <__assert_fail@plt+0x9d38>
   1ae10:	bl	11000 <__errno_location@plt>
   1ae14:	movw	lr, #12
   1ae18:	str	lr, [r0]
   1ae1c:	movw	r0, #0
   1ae20:	str	r0, [fp, #-4]
   1ae24:	b	1ae40 <__assert_fail@plt+0x9d50>
   1ae28:	ldr	r0, [sp, #8]
   1ae2c:	ldr	r1, [sp, #4]
   1ae30:	bl	10e68 <calloc@plt>
   1ae34:	str	r0, [sp]
   1ae38:	ldr	r0, [sp]
   1ae3c:	str	r0, [fp, #-4]
   1ae40:	ldr	r0, [fp, #-4]
   1ae44:	mov	sp, fp
   1ae48:	pop	{fp, pc}
   1ae4c:	svcvc	0x00ffffff
   1ae50:	push	{fp, lr}
   1ae54:	mov	fp, sp
   1ae58:	sub	sp, sp, #16
   1ae5c:	str	r0, [sp, #8]
   1ae60:	ldr	r0, [sp, #8]
   1ae64:	cmp	r0, #0
   1ae68:	bne	1ae74 <__assert_fail@plt+0x9d84>
   1ae6c:	movw	r0, #1
   1ae70:	str	r0, [sp, #8]
   1ae74:	ldr	r0, [pc, #64]	; 1aebc <__assert_fail@plt+0x9dcc>
   1ae78:	ldr	r1, [sp, #8]
   1ae7c:	cmp	r0, r1
   1ae80:	bcs	1ae9c <__assert_fail@plt+0x9dac>
   1ae84:	bl	11000 <__errno_location@plt>
   1ae88:	movw	lr, #12
   1ae8c:	str	lr, [r0]
   1ae90:	movw	r0, #0
   1ae94:	str	r0, [fp, #-4]
   1ae98:	b	1aeb0 <__assert_fail@plt+0x9dc0>
   1ae9c:	ldr	r0, [sp, #8]
   1aea0:	bl	10f7c <malloc@plt>
   1aea4:	str	r0, [sp, #4]
   1aea8:	ldr	r0, [sp, #4]
   1aeac:	str	r0, [fp, #-4]
   1aeb0:	ldr	r0, [fp, #-4]
   1aeb4:	mov	sp, fp
   1aeb8:	pop	{fp, pc}
   1aebc:	svcvc	0x00ffffff
   1aec0:	push	{fp, lr}
   1aec4:	mov	fp, sp
   1aec8:	sub	sp, sp, #16
   1aecc:	str	r0, [sp, #8]
   1aed0:	str	r1, [sp, #4]
   1aed4:	ldr	r0, [sp, #8]
   1aed8:	movw	r1, #0
   1aedc:	cmp	r0, r1
   1aee0:	bne	1aef4 <__assert_fail@plt+0x9e04>
   1aee4:	ldr	r0, [sp, #4]
   1aee8:	bl	1ae50 <__assert_fail@plt+0x9d60>
   1aeec:	str	r0, [fp, #-4]
   1aef0:	b	1af54 <__assert_fail@plt+0x9e64>
   1aef4:	ldr	r0, [sp, #4]
   1aef8:	cmp	r0, #0
   1aefc:	bne	1af14 <__assert_fail@plt+0x9e24>
   1af00:	ldr	r0, [sp, #8]
   1af04:	bl	12c54 <__assert_fail@plt+0x1b64>
   1af08:	movw	r0, #0
   1af0c:	str	r0, [fp, #-4]
   1af10:	b	1af54 <__assert_fail@plt+0x9e64>
   1af14:	ldr	r0, [pc, #68]	; 1af60 <__assert_fail@plt+0x9e70>
   1af18:	ldr	r1, [sp, #4]
   1af1c:	cmp	r0, r1
   1af20:	bcs	1af3c <__assert_fail@plt+0x9e4c>
   1af24:	bl	11000 <__errno_location@plt>
   1af28:	movw	lr, #12
   1af2c:	str	lr, [r0]
   1af30:	movw	r0, #0
   1af34:	str	r0, [fp, #-4]
   1af38:	b	1af54 <__assert_fail@plt+0x9e64>
   1af3c:	ldr	r0, [sp, #8]
   1af40:	ldr	r1, [sp, #4]
   1af44:	bl	10ef8 <realloc@plt>
   1af48:	str	r0, [sp]
   1af4c:	ldr	r0, [sp]
   1af50:	str	r0, [fp, #-4]
   1af54:	ldr	r0, [fp, #-4]
   1af58:	mov	sp, fp
   1af5c:	pop	{fp, pc}
   1af60:	svcvc	0x00ffffff
   1af64:	push	{fp, lr}
   1af68:	mov	fp, sp
   1af6c:	sub	sp, sp, #16
   1af70:	str	r0, [fp, #-4]
   1af74:	ldr	r1, [fp, #-4]
   1af78:	mvn	r0, #99	; 0x63
   1af7c:	movw	r2, #0
   1af80:	str	r2, [sp, #8]
   1af84:	ldr	r3, [sp, #8]
   1af88:	ldr	ip, [sp, #8]
   1af8c:	str	ip, [sp]
   1af90:	movw	lr, #44968	; 0xafa8
   1af94:	movt	lr, #1
   1af98:	str	lr, [sp, #4]
   1af9c:	bl	1b1e0 <__assert_fail@plt+0xa0f0>
   1afa0:	mov	sp, fp
   1afa4:	pop	{fp, pc}
   1afa8:	push	{fp, lr}
   1afac:	mov	fp, sp
   1afb0:	sub	sp, sp, #16
   1afb4:	str	r0, [fp, #-4]
   1afb8:	str	r1, [sp, #8]
   1afbc:	str	r2, [sp, #4]
   1afc0:	str	r3, [sp]
   1afc4:	ldr	r0, [fp, #-4]
   1afc8:	cmn	r0, #100	; 0x64
   1afcc:	beq	1afd4 <__assert_fail@plt+0x9ee4>
   1afd0:	bl	110e4 <abort@plt>
   1afd4:	ldr	r0, [sp, #8]
   1afd8:	ldr	r1, [sp, #4]
   1afdc:	ldr	r2, [sp]
   1afe0:	bl	10f1c <readlink@plt>
   1afe4:	mov	sp, fp
   1afe8:	pop	{fp, pc}
   1afec:	sub	sp, sp, #16
   1aff0:	str	r0, [sp, #12]
   1aff4:	ldr	r0, [sp, #12]
   1aff8:	str	r0, [sp, #8]
   1affc:	movw	r0, #0
   1b000:	strb	r0, [sp, #3]
   1b004:	ldr	r0, [sp, #8]
   1b008:	ldrb	r0, [r0]
   1b00c:	cmp	r0, #47	; 0x2f
   1b010:	bne	1b024 <__assert_fail@plt+0x9f34>
   1b014:	ldr	r0, [sp, #8]
   1b018:	add	r0, r0, #1
   1b01c:	str	r0, [sp, #8]
   1b020:	b	1b004 <__assert_fail@plt+0x9f14>
   1b024:	ldr	r0, [sp, #8]
   1b028:	str	r0, [sp, #4]
   1b02c:	ldr	r0, [sp, #4]
   1b030:	ldrsb	r0, [r0]
   1b034:	cmp	r0, #0
   1b038:	beq	1b08c <__assert_fail@plt+0x9f9c>
   1b03c:	ldr	r0, [sp, #4]
   1b040:	ldrb	r0, [r0]
   1b044:	cmp	r0, #47	; 0x2f
   1b048:	bne	1b058 <__assert_fail@plt+0x9f68>
   1b04c:	movw	r0, #1
   1b050:	strb	r0, [sp, #3]
   1b054:	b	1b078 <__assert_fail@plt+0x9f88>
   1b058:	ldrb	r0, [sp, #3]
   1b05c:	tst	r0, #1
   1b060:	beq	1b074 <__assert_fail@plt+0x9f84>
   1b064:	ldr	r0, [sp, #4]
   1b068:	str	r0, [sp, #8]
   1b06c:	movw	r0, #0
   1b070:	strb	r0, [sp, #3]
   1b074:	b	1b078 <__assert_fail@plt+0x9f88>
   1b078:	b	1b07c <__assert_fail@plt+0x9f8c>
   1b07c:	ldr	r0, [sp, #4]
   1b080:	add	r0, r0, #1
   1b084:	str	r0, [sp, #4]
   1b088:	b	1b02c <__assert_fail@plt+0x9f3c>
   1b08c:	ldr	r0, [sp, #8]
   1b090:	add	sp, sp, #16
   1b094:	bx	lr
   1b098:	push	{fp, lr}
   1b09c:	mov	fp, sp
   1b0a0:	sub	sp, sp, #16
   1b0a4:	str	r0, [fp, #-4]
   1b0a8:	movw	r0, #0
   1b0ac:	str	r0, [sp, #4]
   1b0b0:	ldr	r0, [fp, #-4]
   1b0b4:	bl	10fdc <strlen@plt>
   1b0b8:	str	r0, [sp, #8]
   1b0bc:	ldr	r0, [sp, #8]
   1b0c0:	movw	r1, #1
   1b0c4:	cmp	r1, r0
   1b0c8:	movw	r0, #0
   1b0cc:	str	r0, [sp]
   1b0d0:	bcs	1b0f8 <__assert_fail@plt+0xa008>
   1b0d4:	ldr	r0, [fp, #-4]
   1b0d8:	ldr	r1, [sp, #8]
   1b0dc:	sub	r1, r1, #1
   1b0e0:	add	r0, r0, r1
   1b0e4:	ldrb	r0, [r0]
   1b0e8:	cmp	r0, #47	; 0x2f
   1b0ec:	movw	r0, #0
   1b0f0:	moveq	r0, #1
   1b0f4:	str	r0, [sp]
   1b0f8:	ldr	r0, [sp]
   1b0fc:	tst	r0, #1
   1b100:	beq	1b11c <__assert_fail@plt+0xa02c>
   1b104:	b	1b108 <__assert_fail@plt+0xa018>
   1b108:	ldr	r0, [sp, #8]
   1b10c:	mvn	r1, #0
   1b110:	add	r0, r0, r1
   1b114:	str	r0, [sp, #8]
   1b118:	b	1b0bc <__assert_fail@plt+0x9fcc>
   1b11c:	ldr	r0, [sp, #8]
   1b120:	mov	sp, fp
   1b124:	pop	{fp, pc}
   1b128:	push	{fp, lr}
   1b12c:	mov	fp, sp
   1b130:	sub	sp, sp, #24
   1b134:	str	r0, [fp, #-8]
   1b138:	str	r1, [sp, #12]
   1b13c:	ldr	r0, [fp, #-8]
   1b140:	str	r0, [sp, #8]
   1b144:	ldr	r0, [sp, #12]
   1b148:	str	r0, [sp, #4]
   1b14c:	ldr	r0, [sp, #8]
   1b150:	ldr	r1, [sp, #4]
   1b154:	cmp	r0, r1
   1b158:	bne	1b168 <__assert_fail@plt+0xa078>
   1b15c:	movw	r0, #0
   1b160:	str	r0, [fp, #-4]
   1b164:	b	1b1d4 <__assert_fail@plt+0xa0e4>
   1b168:	b	1b16c <__assert_fail@plt+0xa07c>
   1b16c:	ldr	r0, [sp, #8]
   1b170:	ldrb	r0, [r0]
   1b174:	bl	12668 <__assert_fail@plt+0x1578>
   1b178:	strb	r0, [sp, #3]
   1b17c:	ldr	r0, [sp, #4]
   1b180:	ldrb	r0, [r0]
   1b184:	bl	12668 <__assert_fail@plt+0x1578>
   1b188:	strb	r0, [sp, #2]
   1b18c:	ldrb	r0, [sp, #3]
   1b190:	cmp	r0, #0
   1b194:	bne	1b19c <__assert_fail@plt+0xa0ac>
   1b198:	b	1b1c4 <__assert_fail@plt+0xa0d4>
   1b19c:	ldr	r0, [sp, #8]
   1b1a0:	add	r0, r0, #1
   1b1a4:	str	r0, [sp, #8]
   1b1a8:	ldr	r0, [sp, #4]
   1b1ac:	add	r0, r0, #1
   1b1b0:	str	r0, [sp, #4]
   1b1b4:	ldrb	r0, [sp, #3]
   1b1b8:	ldrb	r1, [sp, #2]
   1b1bc:	cmp	r0, r1
   1b1c0:	beq	1b16c <__assert_fail@plt+0xa07c>
   1b1c4:	ldrb	r0, [sp, #3]
   1b1c8:	ldrb	r1, [sp, #2]
   1b1cc:	sub	r0, r0, r1
   1b1d0:	str	r0, [fp, #-4]
   1b1d4:	ldr	r0, [fp, #-4]
   1b1d8:	mov	sp, fp
   1b1dc:	pop	{fp, pc}
   1b1e0:	push	{r4, r5, r6, sl, fp, lr}
   1b1e4:	add	fp, sp, #16
   1b1e8:	sub	sp, sp, #40	; 0x28
   1b1ec:	sub	sp, sp, #1024	; 0x400
   1b1f0:	ldr	ip, [fp, #12]
   1b1f4:	ldr	lr, [fp, #8]
   1b1f8:	add	r4, sp, #24
   1b1fc:	str	r0, [fp, #-20]	; 0xffffffec
   1b200:	str	r1, [fp, #-24]	; 0xffffffe8
   1b204:	str	r2, [fp, #-28]	; 0xffffffe4
   1b208:	str	r3, [fp, #-32]	; 0xffffffe0
   1b20c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b214:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b21c:	ldr	r5, [fp, #8]
   1b220:	ldr	r6, [fp, #12]
   1b224:	str	r5, [sp]
   1b228:	str	r6, [sp, #4]
   1b22c:	str	r4, [sp, #8]
   1b230:	str	lr, [sp, #20]
   1b234:	str	ip, [sp, #16]
   1b238:	bl	1b244 <__assert_fail@plt+0xa154>
   1b23c:	sub	sp, fp, #16
   1b240:	pop	{r4, r5, r6, sl, fp, pc}
   1b244:	push	{r4, sl, fp, lr}
   1b248:	add	fp, sp, #8
   1b24c:	sub	sp, sp, #104	; 0x68
   1b250:	ldr	ip, [fp, #16]
   1b254:	ldr	lr, [fp, #12]
   1b258:	ldr	r4, [fp, #8]
   1b25c:	str	r0, [fp, #-16]
   1b260:	str	r1, [fp, #-20]	; 0xffffffec
   1b264:	str	r2, [fp, #-24]	; 0xffffffe8
   1b268:	str	r3, [fp, #-28]	; 0xffffffe4
   1b26c:	ldr	r0, [fp, #8]
   1b270:	movw	r1, #0
   1b274:	cmp	r0, r1
   1b278:	str	r4, [sp, #48]	; 0x30
   1b27c:	str	lr, [sp, #44]	; 0x2c
   1b280:	str	ip, [sp, #40]	; 0x28
   1b284:	bne	1b294 <__assert_fail@plt+0xa1a4>
   1b288:	movw	r0, #57864	; 0xe208
   1b28c:	movt	r0, #1
   1b290:	str	r0, [fp, #8]
   1b294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b298:	movw	r1, #0
   1b29c:	cmp	r0, r1
   1b2a0:	bne	1b2b4 <__assert_fail@plt+0xa1c4>
   1b2a4:	ldr	r0, [fp, #16]
   1b2a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b2ac:	movw	r0, #1024	; 0x400
   1b2b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b2b4:	ldr	r0, [pc, #740]	; 1b5a0 <__assert_fail@plt+0xa4b0>
   1b2b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b2bc:	str	r1, [fp, #-32]	; 0xffffffe0
   1b2c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b2c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b2c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b2cc:	cmp	r0, r1
   1b2d0:	bcs	1b2e0 <__assert_fail@plt+0xa1f0>
   1b2d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b2d8:	str	r0, [sp, #36]	; 0x24
   1b2dc:	b	1b2e8 <__assert_fail@plt+0xa1f8>
   1b2e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b2e4:	str	r0, [sp, #36]	; 0x24
   1b2e8:	ldr	r0, [sp, #36]	; 0x24
   1b2ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1b2f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b2f4:	movw	r1, #0
   1b2f8:	cmp	r0, r1
   1b2fc:	beq	1b550 <__assert_fail@plt+0xa460>
   1b300:	ldr	r0, [fp, #12]
   1b304:	ldr	r1, [fp, #-16]
   1b308:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b30c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b310:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1b314:	str	r0, [sp, #32]
   1b318:	mov	r0, r1
   1b31c:	mov	r1, r2
   1b320:	mov	r2, r3
   1b324:	mov	r3, ip
   1b328:	ldr	ip, [sp, #32]
   1b32c:	blx	ip
   1b330:	str	r0, [fp, #-44]	; 0xffffffd4
   1b334:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b338:	cmp	r0, #0
   1b33c:	bge	1b398 <__assert_fail@plt+0xa2a8>
   1b340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b344:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b348:	cmp	r0, r1
   1b34c:	beq	1b38c <__assert_fail@plt+0xa29c>
   1b350:	bl	11000 <__errno_location@plt>
   1b354:	ldr	r0, [r0]
   1b358:	str	r0, [fp, #-48]	; 0xffffffd0
   1b35c:	ldr	r0, [fp, #8]
   1b360:	ldr	r0, [r0, #8]
   1b364:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1b368:	str	r0, [sp, #28]
   1b36c:	mov	r0, lr
   1b370:	ldr	lr, [sp, #28]
   1b374:	blx	lr
   1b378:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b37c:	str	r0, [sp, #24]
   1b380:	bl	11000 <__errno_location@plt>
   1b384:	ldr	lr, [sp, #24]
   1b388:	str	lr, [r0]
   1b38c:	movw	r0, #0
   1b390:	str	r0, [fp, #-12]
   1b394:	b	1b594 <__assert_fail@plt+0xa4a4>
   1b398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b39c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b3a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b3a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b3a8:	cmp	r0, r1
   1b3ac:	bge	1b4c0 <__assert_fail@plt+0xa3d0>
   1b3b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b3b8:	add	r2, r1, #1
   1b3bc:	str	r2, [fp, #-52]	; 0xffffffcc
   1b3c0:	add	r0, r0, r1
   1b3c4:	movw	r1, #0
   1b3c8:	strb	r1, [r0]
   1b3cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3d0:	ldr	r1, [fp, #16]
   1b3d4:	cmp	r0, r1
   1b3d8:	bne	1b438 <__assert_fail@plt+0xa348>
   1b3dc:	ldr	r0, [fp, #8]
   1b3e0:	ldr	r0, [r0]
   1b3e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b3e8:	str	r0, [sp, #20]
   1b3ec:	mov	r0, r1
   1b3f0:	ldr	r1, [sp, #20]
   1b3f4:	blx	r1
   1b3f8:	str	r0, [sp, #56]	; 0x38
   1b3fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b400:	str	r0, [fp, #-40]	; 0xffffffd8
   1b404:	ldr	r0, [sp, #56]	; 0x38
   1b408:	movw	r1, #0
   1b40c:	cmp	r0, r1
   1b410:	bne	1b418 <__assert_fail@plt+0xa328>
   1b414:	b	1b550 <__assert_fail@plt+0xa460>
   1b418:	ldr	r0, [sp, #56]	; 0x38
   1b41c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b420:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b424:	str	r0, [sp, #16]
   1b428:	bl	10ec8 <memcpy@plt>
   1b42c:	ldr	r0, [sp, #16]
   1b430:	str	r0, [fp, #-12]
   1b434:	b	1b594 <__assert_fail@plt+0xa4a4>
   1b438:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b43c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b440:	cmp	r0, r1
   1b444:	bge	1b4b4 <__assert_fail@plt+0xa3c4>
   1b448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b44c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b450:	cmp	r0, r1
   1b454:	beq	1b4b4 <__assert_fail@plt+0xa3c4>
   1b458:	ldr	r0, [fp, #8]
   1b45c:	ldr	r0, [r0, #4]
   1b460:	movw	r1, #0
   1b464:	cmp	r0, r1
   1b468:	beq	1b4b4 <__assert_fail@plt+0xa3c4>
   1b46c:	ldr	r0, [fp, #8]
   1b470:	ldr	r0, [r0, #4]
   1b474:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b478:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b47c:	str	r0, [sp, #12]
   1b480:	mov	r0, r1
   1b484:	mov	r1, r2
   1b488:	ldr	r2, [sp, #12]
   1b48c:	blx	r2
   1b490:	str	r0, [sp, #52]	; 0x34
   1b494:	ldr	r0, [sp, #52]	; 0x34
   1b498:	movw	r1, #0
   1b49c:	cmp	r0, r1
   1b4a0:	beq	1b4b0 <__assert_fail@plt+0xa3c0>
   1b4a4:	ldr	r0, [sp, #52]	; 0x34
   1b4a8:	str	r0, [fp, #-12]
   1b4ac:	b	1b594 <__assert_fail@plt+0xa4a4>
   1b4b0:	b	1b4b4 <__assert_fail@plt+0xa3c4>
   1b4b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b4b8:	str	r0, [fp, #-12]
   1b4bc:	b	1b594 <__assert_fail@plt+0xa4a4>
   1b4c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b4c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b4c8:	cmp	r0, r1
   1b4cc:	beq	1b4ec <__assert_fail@plt+0xa3fc>
   1b4d0:	ldr	r0, [fp, #8]
   1b4d4:	ldr	r0, [r0, #8]
   1b4d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b4dc:	str	r0, [sp, #8]
   1b4e0:	mov	r0, r1
   1b4e4:	ldr	r1, [sp, #8]
   1b4e8:	blx	r1
   1b4ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b4f0:	movw	r1, #2
   1b4f4:	sdiv	r0, r0, r1
   1b4f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b4fc:	cmp	r0, r1
   1b500:	bgt	1b51c <__assert_fail@plt+0xa42c>
   1b504:	bl	11000 <__errno_location@plt>
   1b508:	movw	lr, #36	; 0x24
   1b50c:	str	lr, [r0]
   1b510:	movw	r0, #0
   1b514:	str	r0, [fp, #-12]
   1b518:	b	1b594 <__assert_fail@plt+0xa4a4>
   1b51c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b520:	lsl	r0, r0, #1
   1b524:	add	r0, r0, #1
   1b528:	str	r0, [fp, #-40]	; 0xffffffd8
   1b52c:	ldr	r0, [fp, #8]
   1b530:	ldr	r0, [r0]
   1b534:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b538:	str	r0, [sp, #4]
   1b53c:	mov	r0, r1
   1b540:	ldr	r1, [sp, #4]
   1b544:	blx	r1
   1b548:	str	r0, [fp, #-32]	; 0xffffffe0
   1b54c:	b	1b2f0 <__assert_fail@plt+0xa200>
   1b550:	ldr	r0, [fp, #8]
   1b554:	ldr	r0, [r0, #12]
   1b558:	movw	r1, #0
   1b55c:	cmp	r0, r1
   1b560:	beq	1b580 <__assert_fail@plt+0xa490>
   1b564:	ldr	r0, [fp, #8]
   1b568:	ldr	r0, [r0, #12]
   1b56c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b570:	str	r0, [sp]
   1b574:	mov	r0, r1
   1b578:	ldr	r1, [sp]
   1b57c:	blx	r1
   1b580:	bl	11000 <__errno_location@plt>
   1b584:	movw	lr, #12
   1b588:	str	lr, [r0]
   1b58c:	movw	r0, #0
   1b590:	str	r0, [fp, #-12]
   1b594:	ldr	r0, [fp, #-12]
   1b598:	sub	sp, fp, #8
   1b59c:	pop	{r4, sl, fp, pc}
   1b5a0:	svcvc	0x00ffffff
   1b5a4:	push	{fp, lr}
   1b5a8:	mov	fp, sp
   1b5ac:	sub	sp, sp, #16
   1b5b0:	str	r0, [sp, #8]
   1b5b4:	ldr	r0, [sp, #8]
   1b5b8:	bl	10f40 <__fpending@plt>
   1b5bc:	cmp	r0, #0
   1b5c0:	movw	r0, #0
   1b5c4:	movne	r0, #1
   1b5c8:	and	r0, r0, #1
   1b5cc:	strb	r0, [sp, #7]
   1b5d0:	ldr	r0, [sp, #8]
   1b5d4:	bl	10f4c <ferror_unlocked@plt>
   1b5d8:	cmp	r0, #0
   1b5dc:	movw	r0, #0
   1b5e0:	movne	r0, #1
   1b5e4:	and	r0, r0, #1
   1b5e8:	strb	r0, [sp, #6]
   1b5ec:	ldr	r0, [sp, #8]
   1b5f0:	bl	1b674 <__assert_fail@plt+0xa584>
   1b5f4:	cmp	r0, #0
   1b5f8:	movw	r0, #0
   1b5fc:	movne	r0, #1
   1b600:	and	r0, r0, #1
   1b604:	strb	r0, [sp, #5]
   1b608:	ldrb	r0, [sp, #6]
   1b60c:	tst	r0, #1
   1b610:	bne	1b63c <__assert_fail@plt+0xa54c>
   1b614:	ldrb	r0, [sp, #5]
   1b618:	tst	r0, #1
   1b61c:	beq	1b660 <__assert_fail@plt+0xa570>
   1b620:	ldrb	r0, [sp, #7]
   1b624:	tst	r0, #1
   1b628:	bne	1b63c <__assert_fail@plt+0xa54c>
   1b62c:	bl	11000 <__errno_location@plt>
   1b630:	ldr	r0, [r0]
   1b634:	cmp	r0, #9
   1b638:	beq	1b660 <__assert_fail@plt+0xa570>
   1b63c:	ldrb	r0, [sp, #5]
   1b640:	tst	r0, #1
   1b644:	bne	1b654 <__assert_fail@plt+0xa564>
   1b648:	bl	11000 <__errno_location@plt>
   1b64c:	movw	lr, #0
   1b650:	str	lr, [r0]
   1b654:	mvn	r0, #0
   1b658:	str	r0, [fp, #-4]
   1b65c:	b	1b668 <__assert_fail@plt+0xa578>
   1b660:	movw	r0, #0
   1b664:	str	r0, [fp, #-4]
   1b668:	ldr	r0, [fp, #-4]
   1b66c:	mov	sp, fp
   1b670:	pop	{fp, pc}
   1b674:	push	{fp, lr}
   1b678:	mov	fp, sp
   1b67c:	sub	sp, sp, #32
   1b680:	str	r0, [fp, #-8]
   1b684:	movw	r0, #0
   1b688:	str	r0, [fp, #-12]
   1b68c:	str	r0, [sp, #12]
   1b690:	ldr	r0, [fp, #-8]
   1b694:	bl	11024 <fileno@plt>
   1b698:	str	r0, [sp, #16]
   1b69c:	ldr	r0, [sp, #16]
   1b6a0:	cmp	r0, #0
   1b6a4:	bge	1b6b8 <__assert_fail@plt+0xa5c8>
   1b6a8:	ldr	r0, [fp, #-8]
   1b6ac:	bl	11054 <fclose@plt>
   1b6b0:	str	r0, [fp, #-4]
   1b6b4:	b	1b754 <__assert_fail@plt+0xa664>
   1b6b8:	ldr	r0, [fp, #-8]
   1b6bc:	bl	10f94 <__freading@plt>
   1b6c0:	cmp	r0, #0
   1b6c4:	beq	1b6fc <__assert_fail@plt+0xa60c>
   1b6c8:	ldr	r0, [fp, #-8]
   1b6cc:	bl	11024 <fileno@plt>
   1b6d0:	mov	lr, sp
   1b6d4:	mov	r1, #1
   1b6d8:	str	r1, [lr]
   1b6dc:	mov	r1, #0
   1b6e0:	mov	r2, r1
   1b6e4:	mov	r3, r1
   1b6e8:	bl	10f28 <lseek64@plt>
   1b6ec:	and	r0, r0, r1
   1b6f0:	cmn	r0, #1
   1b6f4:	beq	1b718 <__assert_fail@plt+0xa628>
   1b6f8:	b	1b6fc <__assert_fail@plt+0xa60c>
   1b6fc:	ldr	r0, [fp, #-8]
   1b700:	bl	1b760 <__assert_fail@plt+0xa670>
   1b704:	cmp	r0, #0
   1b708:	beq	1b718 <__assert_fail@plt+0xa628>
   1b70c:	bl	11000 <__errno_location@plt>
   1b710:	ldr	r0, [r0]
   1b714:	str	r0, [fp, #-12]
   1b718:	ldr	r0, [fp, #-8]
   1b71c:	bl	11054 <fclose@plt>
   1b720:	str	r0, [sp, #12]
   1b724:	ldr	r0, [fp, #-12]
   1b728:	cmp	r0, #0
   1b72c:	beq	1b74c <__assert_fail@plt+0xa65c>
   1b730:	ldr	r0, [fp, #-12]
   1b734:	str	r0, [sp, #8]
   1b738:	bl	11000 <__errno_location@plt>
   1b73c:	ldr	lr, [sp, #8]
   1b740:	str	lr, [r0]
   1b744:	mvn	r0, #0
   1b748:	str	r0, [sp, #12]
   1b74c:	ldr	r0, [sp, #12]
   1b750:	str	r0, [fp, #-4]
   1b754:	ldr	r0, [fp, #-4]
   1b758:	mov	sp, fp
   1b75c:	pop	{fp, pc}
   1b760:	push	{fp, lr}
   1b764:	mov	fp, sp
   1b768:	sub	sp, sp, #8
   1b76c:	str	r0, [sp]
   1b770:	ldr	r0, [sp]
   1b774:	movw	r1, #0
   1b778:	cmp	r0, r1
   1b77c:	beq	1b790 <__assert_fail@plt+0xa6a0>
   1b780:	ldr	r0, [sp]
   1b784:	bl	10f94 <__freading@plt>
   1b788:	cmp	r0, #0
   1b78c:	bne	1b7a0 <__assert_fail@plt+0xa6b0>
   1b790:	ldr	r0, [sp]
   1b794:	bl	10ea4 <fflush@plt>
   1b798:	str	r0, [sp, #4]
   1b79c:	b	1b7b4 <__assert_fail@plt+0xa6c4>
   1b7a0:	ldr	r0, [sp]
   1b7a4:	bl	1b7c0 <__assert_fail@plt+0xa6d0>
   1b7a8:	ldr	r0, [sp]
   1b7ac:	bl	10ea4 <fflush@plt>
   1b7b0:	str	r0, [sp, #4]
   1b7b4:	ldr	r0, [sp, #4]
   1b7b8:	mov	sp, fp
   1b7bc:	pop	{fp, pc}
   1b7c0:	push	{fp, lr}
   1b7c4:	mov	fp, sp
   1b7c8:	sub	sp, sp, #16
   1b7cc:	str	r0, [fp, #-4]
   1b7d0:	ldr	r0, [fp, #-4]
   1b7d4:	ldr	r0, [r0]
   1b7d8:	and	r0, r0, #256	; 0x100
   1b7dc:	cmp	r0, #0
   1b7e0:	beq	1b808 <__assert_fail@plt+0xa718>
   1b7e4:	ldr	r0, [fp, #-4]
   1b7e8:	mov	r1, sp
   1b7ec:	mov	r2, #1
   1b7f0:	str	r2, [r1]
   1b7f4:	mov	r1, #0
   1b7f8:	mov	r2, r1
   1b7fc:	mov	r3, r1
   1b800:	bl	1b810 <__assert_fail@plt+0xa720>
   1b804:	str	r0, [sp, #8]
   1b808:	mov	sp, fp
   1b80c:	pop	{fp, pc}
   1b810:	push	{fp, lr}
   1b814:	mov	fp, sp
   1b818:	sub	sp, sp, #32
   1b81c:	ldr	r1, [fp, #8]
   1b820:	str	r0, [fp, #-8]
   1b824:	str	r3, [sp, #20]
   1b828:	str	r2, [sp, #16]
   1b82c:	ldr	r0, [fp, #-8]
   1b830:	ldr	r0, [r0, #8]
   1b834:	ldr	r2, [fp, #-8]
   1b838:	ldr	r2, [r2, #4]
   1b83c:	cmp	r0, r2
   1b840:	str	r1, [sp, #4]
   1b844:	bne	1b8f0 <__assert_fail@plt+0xa800>
   1b848:	ldr	r0, [fp, #-8]
   1b84c:	ldr	r0, [r0, #20]
   1b850:	ldr	r1, [fp, #-8]
   1b854:	ldr	r1, [r1, #16]
   1b858:	cmp	r0, r1
   1b85c:	bne	1b8f0 <__assert_fail@plt+0xa800>
   1b860:	ldr	r0, [fp, #-8]
   1b864:	ldr	r0, [r0, #36]	; 0x24
   1b868:	movw	r1, #0
   1b86c:	cmp	r0, r1
   1b870:	bne	1b8f0 <__assert_fail@plt+0xa800>
   1b874:	ldr	r0, [fp, #-8]
   1b878:	bl	11024 <fileno@plt>
   1b87c:	ldr	r2, [sp, #16]
   1b880:	ldr	r3, [sp, #20]
   1b884:	ldr	lr, [fp, #8]
   1b888:	mov	r1, sp
   1b88c:	str	lr, [r1]
   1b890:	bl	10f28 <lseek64@plt>
   1b894:	str	r1, [sp, #12]
   1b898:	str	r0, [sp, #8]
   1b89c:	ldr	r0, [sp, #8]
   1b8a0:	ldr	r1, [sp, #12]
   1b8a4:	and	r0, r0, r1
   1b8a8:	cmn	r0, #1
   1b8ac:	bne	1b8c0 <__assert_fail@plt+0xa7d0>
   1b8b0:	b	1b8b4 <__assert_fail@plt+0xa7c4>
   1b8b4:	mvn	r0, #0
   1b8b8:	str	r0, [fp, #-4]
   1b8bc:	b	1b910 <__assert_fail@plt+0xa820>
   1b8c0:	ldr	r0, [fp, #-8]
   1b8c4:	ldr	r1, [r0]
   1b8c8:	bic	r1, r1, #16
   1b8cc:	str	r1, [r0]
   1b8d0:	ldr	r0, [sp, #8]
   1b8d4:	ldr	r1, [sp, #12]
   1b8d8:	ldr	r2, [fp, #-8]
   1b8dc:	str	r1, [r2, #84]	; 0x54
   1b8e0:	str	r0, [r2, #80]	; 0x50
   1b8e4:	movw	r0, #0
   1b8e8:	str	r0, [fp, #-4]
   1b8ec:	b	1b910 <__assert_fail@plt+0xa820>
   1b8f0:	ldr	r0, [fp, #-8]
   1b8f4:	ldr	r2, [sp, #16]
   1b8f8:	ldr	r3, [sp, #20]
   1b8fc:	ldr	r1, [fp, #8]
   1b900:	mov	ip, sp
   1b904:	str	r1, [ip]
   1b908:	bl	11060 <fseeko64@plt>
   1b90c:	str	r0, [fp, #-4]
   1b910:	ldr	r0, [fp, #-4]
   1b914:	mov	sp, fp
   1b918:	pop	{fp, pc}
   1b91c:	push	{fp, lr}
   1b920:	mov	fp, sp
   1b924:	bl	11000 <__errno_location@plt>
   1b928:	movw	lr, #12
   1b92c:	str	lr, [r0]
   1b930:	movw	r0, #0
   1b934:	pop	{fp, pc}
   1b938:	push	{fp, lr}
   1b93c:	mov	fp, sp
   1b940:	sub	sp, sp, #8
   1b944:	str	r0, [sp, #4]
   1b948:	ldr	r0, [sp, #4]
   1b94c:	cmn	r0, #1
   1b950:	bhi	1b964 <__assert_fail@plt+0xa874>
   1b954:	ldr	r0, [sp, #4]
   1b958:	bl	1ae50 <__assert_fail@plt+0x9d60>
   1b95c:	str	r0, [sp]
   1b960:	b	1b96c <__assert_fail@plt+0xa87c>
   1b964:	bl	1b91c <__assert_fail@plt+0xa82c>
   1b968:	str	r0, [sp]
   1b96c:	ldr	r0, [sp]
   1b970:	mov	sp, fp
   1b974:	pop	{fp, pc}
   1b978:	push	{fp, lr}
   1b97c:	mov	fp, sp
   1b980:	sub	sp, sp, #16
   1b984:	str	r0, [fp, #-4]
   1b988:	str	r1, [sp, #8]
   1b98c:	ldr	r0, [sp, #8]
   1b990:	cmn	r0, #1
   1b994:	bhi	1b9cc <__assert_fail@plt+0xa8dc>
   1b998:	ldr	r0, [fp, #-4]
   1b99c:	ldr	r1, [sp, #8]
   1b9a0:	ldr	r2, [sp, #8]
   1b9a4:	cmp	r2, #0
   1b9a8:	movw	r2, #0
   1b9ac:	movne	r2, #1
   1b9b0:	mvn	r3, #0
   1b9b4:	eor	r2, r2, r3
   1b9b8:	and	r2, r2, #1
   1b9bc:	orr	r1, r1, r2
   1b9c0:	bl	1aec0 <__assert_fail@plt+0x9dd0>
   1b9c4:	str	r0, [sp, #4]
   1b9c8:	b	1b9d4 <__assert_fail@plt+0xa8e4>
   1b9cc:	bl	1b91c <__assert_fail@plt+0xa82c>
   1b9d0:	str	r0, [sp, #4]
   1b9d4:	ldr	r0, [sp, #4]
   1b9d8:	mov	sp, fp
   1b9dc:	pop	{fp, pc}
   1b9e0:	push	{fp, lr}
   1b9e4:	mov	fp, sp
   1b9e8:	sub	sp, sp, #16
   1b9ec:	str	r0, [sp, #8]
   1b9f0:	str	r1, [sp, #4]
   1b9f4:	ldr	r0, [sp, #8]
   1b9f8:	mvn	r1, #0
   1b9fc:	cmp	r1, r0
   1ba00:	bcs	1ba24 <__assert_fail@plt+0xa934>
   1ba04:	ldr	r0, [sp, #4]
   1ba08:	cmp	r0, #0
   1ba0c:	beq	1ba1c <__assert_fail@plt+0xa92c>
   1ba10:	bl	1b91c <__assert_fail@plt+0xa82c>
   1ba14:	str	r0, [fp, #-4]
   1ba18:	b	1ba64 <__assert_fail@plt+0xa974>
   1ba1c:	movw	r0, #0
   1ba20:	str	r0, [sp, #8]
   1ba24:	ldr	r0, [sp, #4]
   1ba28:	mvn	r1, #0
   1ba2c:	cmp	r1, r0
   1ba30:	bcs	1ba54 <__assert_fail@plt+0xa964>
   1ba34:	ldr	r0, [sp, #8]
   1ba38:	cmp	r0, #0
   1ba3c:	beq	1ba4c <__assert_fail@plt+0xa95c>
   1ba40:	bl	1b91c <__assert_fail@plt+0xa82c>
   1ba44:	str	r0, [fp, #-4]
   1ba48:	b	1ba64 <__assert_fail@plt+0xa974>
   1ba4c:	movw	r0, #0
   1ba50:	str	r0, [sp, #4]
   1ba54:	ldr	r0, [sp, #8]
   1ba58:	ldr	r1, [sp, #4]
   1ba5c:	bl	1adb4 <__assert_fail@plt+0x9cc4>
   1ba60:	str	r0, [fp, #-4]
   1ba64:	ldr	r0, [fp, #-4]
   1ba68:	mov	sp, fp
   1ba6c:	pop	{fp, pc}
   1ba70:	push	{fp, lr}
   1ba74:	mov	fp, sp
   1ba78:	sub	sp, sp, #16
   1ba7c:	str	r0, [fp, #-4]
   1ba80:	str	r1, [sp, #8]
   1ba84:	str	r2, [sp, #4]
   1ba88:	ldr	r0, [sp, #8]
   1ba8c:	cmp	r0, #0
   1ba90:	beq	1baa0 <__assert_fail@plt+0xa9b0>
   1ba94:	ldr	r0, [sp, #4]
   1ba98:	cmp	r0, #0
   1ba9c:	bne	1baac <__assert_fail@plt+0xa9bc>
   1baa0:	movw	r0, #1
   1baa4:	str	r0, [sp, #4]
   1baa8:	str	r0, [sp, #8]
   1baac:	ldr	r0, [sp, #8]
   1bab0:	cmn	r0, #1
   1bab4:	bhi	1badc <__assert_fail@plt+0xa9ec>
   1bab8:	ldr	r0, [sp, #4]
   1babc:	cmn	r0, #1
   1bac0:	bhi	1badc <__assert_fail@plt+0xa9ec>
   1bac4:	ldr	r0, [fp, #-4]
   1bac8:	ldr	r1, [sp, #8]
   1bacc:	ldr	r2, [sp, #4]
   1bad0:	bl	1bbfc <__assert_fail@plt+0xab0c>
   1bad4:	str	r0, [sp]
   1bad8:	b	1bae4 <__assert_fail@plt+0xa9f4>
   1badc:	bl	1b91c <__assert_fail@plt+0xa82c>
   1bae0:	str	r0, [sp]
   1bae4:	ldr	r0, [sp]
   1bae8:	mov	sp, fp
   1baec:	pop	{fp, pc}
   1baf0:	push	{fp, lr}
   1baf4:	mov	fp, sp
   1baf8:	sub	sp, sp, #8
   1bafc:	movw	r0, #14
   1bb00:	bl	110a8 <nl_langinfo@plt>
   1bb04:	str	r0, [sp, #4]
   1bb08:	ldr	r0, [sp, #4]
   1bb0c:	movw	lr, #0
   1bb10:	cmp	r0, lr
   1bb14:	bne	1bb24 <__assert_fail@plt+0xaa34>
   1bb18:	movw	r0, #56252	; 0xdbbc
   1bb1c:	movt	r0, #1
   1bb20:	str	r0, [sp, #4]
   1bb24:	ldr	r0, [sp, #4]
   1bb28:	ldrb	r0, [r0]
   1bb2c:	cmp	r0, #0
   1bb30:	bne	1bb40 <__assert_fail@plt+0xaa50>
   1bb34:	movw	r0, #57858	; 0xe202
   1bb38:	movt	r0, #1
   1bb3c:	str	r0, [sp, #4]
   1bb40:	ldr	r0, [sp, #4]
   1bb44:	mov	sp, fp
   1bb48:	pop	{fp, pc}
   1bb4c:	push	{fp, lr}
   1bb50:	mov	fp, sp
   1bb54:	sub	sp, sp, #32
   1bb58:	str	r0, [fp, #-8]
   1bb5c:	str	r1, [fp, #-12]
   1bb60:	str	r2, [sp, #16]
   1bb64:	str	r3, [sp, #12]
   1bb68:	ldr	r0, [fp, #-8]
   1bb6c:	movw	r1, #0
   1bb70:	cmp	r0, r1
   1bb74:	bne	1bb80 <__assert_fail@plt+0xaa90>
   1bb78:	add	r0, sp, #4
   1bb7c:	str	r0, [fp, #-8]
   1bb80:	ldr	r0, [fp, #-8]
   1bb84:	ldr	r1, [fp, #-12]
   1bb88:	ldr	r2, [sp, #16]
   1bb8c:	ldr	r3, [sp, #12]
   1bb90:	bl	10f58 <mbrtowc@plt>
   1bb94:	str	r0, [sp, #8]
   1bb98:	ldr	r0, [sp, #8]
   1bb9c:	mvn	r1, #1
   1bba0:	cmp	r1, r0
   1bba4:	bhi	1bbe8 <__assert_fail@plt+0xaaf8>
   1bba8:	ldr	r0, [sp, #16]
   1bbac:	cmp	r0, #0
   1bbb0:	beq	1bbe8 <__assert_fail@plt+0xaaf8>
   1bbb4:	movw	r0, #0
   1bbb8:	bl	1cf8c <__assert_fail@plt+0xbe9c>
   1bbbc:	tst	r0, #1
   1bbc0:	bne	1bbe8 <__assert_fail@plt+0xaaf8>
   1bbc4:	ldr	r0, [fp, #-12]
   1bbc8:	ldrb	r0, [r0]
   1bbcc:	strb	r0, [sp, #3]
   1bbd0:	ldrb	r0, [sp, #3]
   1bbd4:	ldr	r1, [fp, #-8]
   1bbd8:	str	r0, [r1]
   1bbdc:	movw	r0, #1
   1bbe0:	str	r0, [fp, #-4]
   1bbe4:	b	1bbf0 <__assert_fail@plt+0xab00>
   1bbe8:	ldr	r0, [sp, #8]
   1bbec:	str	r0, [fp, #-4]
   1bbf0:	ldr	r0, [fp, #-4]
   1bbf4:	mov	sp, fp
   1bbf8:	pop	{fp, pc}
   1bbfc:	push	{fp, lr}
   1bc00:	mov	fp, sp
   1bc04:	sub	sp, sp, #176	; 0xb0
   1bc08:	str	r0, [fp, #-8]
   1bc0c:	str	r1, [fp, #-12]
   1bc10:	str	r2, [fp, #-16]
   1bc14:	b	1bfcc <__assert_fail@plt+0xaedc>
   1bc18:	b	1bdec <__assert_fail@plt+0xacfc>
   1bc1c:	ldr	r0, [fp, #-16]
   1bc20:	cmp	r0, #0
   1bc24:	bcs	1bd28 <__assert_fail@plt+0xac38>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	cmp	r0, #0
   1bc30:	bcs	1bcb8 <__assert_fail@plt+0xabc8>
   1bc34:	b	1bc54 <__assert_fail@plt+0xab64>
   1bc38:	ldr	r0, [fp, #-12]
   1bc3c:	ldr	r1, [fp, #-16]
   1bc40:	movw	r2, #127	; 0x7f
   1bc44:	udiv	r1, r2, r1
   1bc48:	cmp	r0, r1
   1bc4c:	bcc	1bdbc <__assert_fail@plt+0xaccc>
   1bc50:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bc54:	b	1bc68 <__assert_fail@plt+0xab78>
   1bc58:	ldr	r0, [fp, #-16]
   1bc5c:	cmp	r0, #1
   1bc60:	bcc	1bc78 <__assert_fail@plt+0xab88>
   1bc64:	b	1bc84 <__assert_fail@plt+0xab94>
   1bc68:	ldr	r0, [fp, #-16]
   1bc6c:	movw	r1, #0
   1bc70:	cmp	r1, r0
   1bc74:	bcs	1bc84 <__assert_fail@plt+0xab94>
   1bc78:	movw	r0, #0
   1bc7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc80:	b	1bc9c <__assert_fail@plt+0xabac>
   1bc84:	ldr	r0, [fp, #-16]
   1bc88:	movw	r1, #0
   1bc8c:	sub	r0, r1, r0
   1bc90:	movw	r1, #127	; 0x7f
   1bc94:	udiv	r0, r1, r0
   1bc98:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bca0:	ldr	r1, [fp, #-12]
   1bca4:	mvn	r2, #0
   1bca8:	sub	r1, r2, r1
   1bcac:	cmp	r0, r1
   1bcb0:	bls	1bdbc <__assert_fail@plt+0xaccc>
   1bcb4:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bcb8:	ldr	r0, [fp, #-16]
   1bcbc:	cmn	r0, #1
   1bcc0:	bne	1bd0c <__assert_fail@plt+0xac1c>
   1bcc4:	b	1bce4 <__assert_fail@plt+0xabf4>
   1bcc8:	ldr	r0, [fp, #-12]
   1bccc:	mvn	r1, #127	; 0x7f
   1bcd0:	add	r0, r0, r1
   1bcd4:	movw	r1, #0
   1bcd8:	cmp	r1, r0
   1bcdc:	bcc	1bdbc <__assert_fail@plt+0xaccc>
   1bce0:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bce4:	ldr	r0, [fp, #-12]
   1bce8:	movw	r1, #0
   1bcec:	cmp	r1, r0
   1bcf0:	bcs	1bdd4 <__assert_fail@plt+0xace4>
   1bcf4:	ldr	r0, [fp, #-12]
   1bcf8:	sub	r0, r0, #1
   1bcfc:	movw	r1, #127	; 0x7f
   1bd00:	cmp	r1, r0
   1bd04:	bcc	1bdbc <__assert_fail@plt+0xaccc>
   1bd08:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bd0c:	ldr	r0, [fp, #-16]
   1bd10:	mvn	r1, #127	; 0x7f
   1bd14:	udiv	r0, r1, r0
   1bd18:	ldr	r1, [fp, #-12]
   1bd1c:	cmp	r0, r1
   1bd20:	bcc	1bdbc <__assert_fail@plt+0xaccc>
   1bd24:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bd28:	ldr	r0, [fp, #-16]
   1bd2c:	cmp	r0, #0
   1bd30:	bne	1bd38 <__assert_fail@plt+0xac48>
   1bd34:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bd38:	ldr	r0, [fp, #-12]
   1bd3c:	cmp	r0, #0
   1bd40:	bcs	1bda4 <__assert_fail@plt+0xacb4>
   1bd44:	ldr	r0, [fp, #-12]
   1bd48:	cmn	r0, #1
   1bd4c:	bne	1bd88 <__assert_fail@plt+0xac98>
   1bd50:	b	1bd70 <__assert_fail@plt+0xac80>
   1bd54:	ldr	r0, [fp, #-16]
   1bd58:	mvn	r1, #127	; 0x7f
   1bd5c:	add	r0, r0, r1
   1bd60:	movw	r1, #0
   1bd64:	cmp	r1, r0
   1bd68:	bcc	1bdbc <__assert_fail@plt+0xaccc>
   1bd6c:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bd70:	ldr	r0, [fp, #-16]
   1bd74:	sub	r0, r0, #1
   1bd78:	movw	r1, #127	; 0x7f
   1bd7c:	cmp	r1, r0
   1bd80:	bcc	1bdbc <__assert_fail@plt+0xaccc>
   1bd84:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bd88:	ldr	r0, [fp, #-12]
   1bd8c:	mvn	r1, #127	; 0x7f
   1bd90:	udiv	r0, r1, r0
   1bd94:	ldr	r1, [fp, #-16]
   1bd98:	cmp	r0, r1
   1bd9c:	bcc	1bdbc <__assert_fail@plt+0xaccc>
   1bda0:	b	1bdd4 <__assert_fail@plt+0xace4>
   1bda4:	ldr	r0, [fp, #-16]
   1bda8:	movw	r1, #127	; 0x7f
   1bdac:	udiv	r0, r1, r0
   1bdb0:	ldr	r1, [fp, #-12]
   1bdb4:	cmp	r0, r1
   1bdb8:	bcs	1bdd4 <__assert_fail@plt+0xace4>
   1bdbc:	ldr	r0, [fp, #-12]
   1bdc0:	ldr	r1, [fp, #-16]
   1bdc4:	mul	r0, r0, r1
   1bdc8:	sxtb	r0, r0
   1bdcc:	str	r0, [fp, #-20]	; 0xffffffec
   1bdd0:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1bdd4:	ldr	r0, [fp, #-12]
   1bdd8:	ldr	r1, [fp, #-16]
   1bddc:	mul	r0, r0, r1
   1bde0:	sxtb	r0, r0
   1bde4:	str	r0, [fp, #-20]	; 0xffffffec
   1bde8:	b	1cf64 <__assert_fail@plt+0xbe74>
   1bdec:	ldr	r0, [fp, #-16]
   1bdf0:	cmp	r0, #0
   1bdf4:	bcs	1bf00 <__assert_fail@plt+0xae10>
   1bdf8:	ldr	r0, [fp, #-12]
   1bdfc:	cmp	r0, #0
   1be00:	bcs	1be88 <__assert_fail@plt+0xad98>
   1be04:	b	1be24 <__assert_fail@plt+0xad34>
   1be08:	ldr	r0, [fp, #-12]
   1be0c:	ldr	r1, [fp, #-16]
   1be10:	movw	r2, #255	; 0xff
   1be14:	udiv	r1, r2, r1
   1be18:	cmp	r0, r1
   1be1c:	bcc	1bf9c <__assert_fail@plt+0xaeac>
   1be20:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1be24:	b	1be38 <__assert_fail@plt+0xad48>
   1be28:	ldr	r0, [fp, #-16]
   1be2c:	cmp	r0, #1
   1be30:	bcc	1be48 <__assert_fail@plt+0xad58>
   1be34:	b	1be54 <__assert_fail@plt+0xad64>
   1be38:	ldr	r0, [fp, #-16]
   1be3c:	movw	r1, #0
   1be40:	cmp	r1, r0
   1be44:	bcs	1be54 <__assert_fail@plt+0xad64>
   1be48:	movw	r0, #0
   1be4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1be50:	b	1be6c <__assert_fail@plt+0xad7c>
   1be54:	ldr	r0, [fp, #-16]
   1be58:	movw	r1, #0
   1be5c:	sub	r0, r1, r0
   1be60:	movw	r1, #255	; 0xff
   1be64:	udiv	r0, r1, r0
   1be68:	str	r0, [fp, #-28]	; 0xffffffe4
   1be6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1be70:	ldr	r1, [fp, #-12]
   1be74:	mvn	r2, #0
   1be78:	sub	r1, r2, r1
   1be7c:	cmp	r0, r1
   1be80:	bls	1bf9c <__assert_fail@plt+0xaeac>
   1be84:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1be88:	b	1be90 <__assert_fail@plt+0xada0>
   1be8c:	b	1be94 <__assert_fail@plt+0xada4>
   1be90:	b	1bee4 <__assert_fail@plt+0xadf4>
   1be94:	ldr	r0, [fp, #-16]
   1be98:	cmn	r0, #1
   1be9c:	bne	1bee4 <__assert_fail@plt+0xadf4>
   1bea0:	b	1bebc <__assert_fail@plt+0xadcc>
   1bea4:	ldr	r0, [fp, #-12]
   1bea8:	add	r0, r0, #0
   1beac:	movw	r1, #0
   1beb0:	cmp	r1, r0
   1beb4:	bcc	1bf9c <__assert_fail@plt+0xaeac>
   1beb8:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1bebc:	ldr	r0, [fp, #-12]
   1bec0:	movw	r1, #0
   1bec4:	cmp	r1, r0
   1bec8:	bcs	1bfb4 <__assert_fail@plt+0xaec4>
   1becc:	ldr	r0, [fp, #-12]
   1bed0:	sub	r0, r0, #1
   1bed4:	mvn	r1, #0
   1bed8:	cmp	r1, r0
   1bedc:	bcc	1bf9c <__assert_fail@plt+0xaeac>
   1bee0:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1bee4:	ldr	r0, [fp, #-16]
   1bee8:	movw	r1, #0
   1beec:	udiv	r0, r1, r0
   1bef0:	ldr	r1, [fp, #-12]
   1bef4:	cmp	r0, r1
   1bef8:	bcc	1bf9c <__assert_fail@plt+0xaeac>
   1befc:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1bf00:	ldr	r0, [fp, #-16]
   1bf04:	cmp	r0, #0
   1bf08:	bne	1bf10 <__assert_fail@plt+0xae20>
   1bf0c:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1bf10:	ldr	r0, [fp, #-12]
   1bf14:	cmp	r0, #0
   1bf18:	bcs	1bf84 <__assert_fail@plt+0xae94>
   1bf1c:	b	1bf24 <__assert_fail@plt+0xae34>
   1bf20:	b	1bf28 <__assert_fail@plt+0xae38>
   1bf24:	b	1bf68 <__assert_fail@plt+0xae78>
   1bf28:	ldr	r0, [fp, #-12]
   1bf2c:	cmn	r0, #1
   1bf30:	bne	1bf68 <__assert_fail@plt+0xae78>
   1bf34:	b	1bf50 <__assert_fail@plt+0xae60>
   1bf38:	ldr	r0, [fp, #-16]
   1bf3c:	add	r0, r0, #0
   1bf40:	movw	r1, #0
   1bf44:	cmp	r1, r0
   1bf48:	bcc	1bf9c <__assert_fail@plt+0xaeac>
   1bf4c:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1bf50:	ldr	r0, [fp, #-16]
   1bf54:	sub	r0, r0, #1
   1bf58:	mvn	r1, #0
   1bf5c:	cmp	r1, r0
   1bf60:	bcc	1bf9c <__assert_fail@plt+0xaeac>
   1bf64:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1bf68:	ldr	r0, [fp, #-12]
   1bf6c:	movw	r1, #0
   1bf70:	udiv	r0, r1, r0
   1bf74:	ldr	r1, [fp, #-16]
   1bf78:	cmp	r0, r1
   1bf7c:	bcc	1bf9c <__assert_fail@plt+0xaeac>
   1bf80:	b	1bfb4 <__assert_fail@plt+0xaec4>
   1bf84:	ldr	r0, [fp, #-16]
   1bf88:	movw	r1, #255	; 0xff
   1bf8c:	udiv	r0, r1, r0
   1bf90:	ldr	r1, [fp, #-12]
   1bf94:	cmp	r0, r1
   1bf98:	bcs	1bfb4 <__assert_fail@plt+0xaec4>
   1bf9c:	ldr	r0, [fp, #-12]
   1bfa0:	ldr	r1, [fp, #-16]
   1bfa4:	mul	r0, r0, r1
   1bfa8:	and	r0, r0, #255	; 0xff
   1bfac:	str	r0, [fp, #-20]	; 0xffffffec
   1bfb0:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1bfb4:	ldr	r0, [fp, #-12]
   1bfb8:	ldr	r1, [fp, #-16]
   1bfbc:	mul	r0, r0, r1
   1bfc0:	and	r0, r0, #255	; 0xff
   1bfc4:	str	r0, [fp, #-20]	; 0xffffffec
   1bfc8:	b	1cf64 <__assert_fail@plt+0xbe74>
   1bfcc:	b	1c384 <__assert_fail@plt+0xb294>
   1bfd0:	b	1c1a4 <__assert_fail@plt+0xb0b4>
   1bfd4:	ldr	r0, [fp, #-16]
   1bfd8:	cmp	r0, #0
   1bfdc:	bcs	1c0e0 <__assert_fail@plt+0xaff0>
   1bfe0:	ldr	r0, [fp, #-12]
   1bfe4:	cmp	r0, #0
   1bfe8:	bcs	1c070 <__assert_fail@plt+0xaf80>
   1bfec:	b	1c00c <__assert_fail@plt+0xaf1c>
   1bff0:	ldr	r0, [fp, #-12]
   1bff4:	ldr	r1, [fp, #-16]
   1bff8:	movw	r2, #32767	; 0x7fff
   1bffc:	udiv	r1, r2, r1
   1c000:	cmp	r0, r1
   1c004:	bcc	1c174 <__assert_fail@plt+0xb084>
   1c008:	b	1c18c <__assert_fail@plt+0xb09c>
   1c00c:	b	1c020 <__assert_fail@plt+0xaf30>
   1c010:	ldr	r0, [fp, #-16]
   1c014:	cmp	r0, #1
   1c018:	bcc	1c030 <__assert_fail@plt+0xaf40>
   1c01c:	b	1c03c <__assert_fail@plt+0xaf4c>
   1c020:	ldr	r0, [fp, #-16]
   1c024:	movw	r1, #0
   1c028:	cmp	r1, r0
   1c02c:	bcs	1c03c <__assert_fail@plt+0xaf4c>
   1c030:	movw	r0, #0
   1c034:	str	r0, [fp, #-32]	; 0xffffffe0
   1c038:	b	1c054 <__assert_fail@plt+0xaf64>
   1c03c:	ldr	r0, [fp, #-16]
   1c040:	movw	r1, #0
   1c044:	sub	r0, r1, r0
   1c048:	movw	r1, #32767	; 0x7fff
   1c04c:	udiv	r0, r1, r0
   1c050:	str	r0, [fp, #-32]	; 0xffffffe0
   1c054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c058:	ldr	r1, [fp, #-12]
   1c05c:	mvn	r2, #0
   1c060:	sub	r1, r2, r1
   1c064:	cmp	r0, r1
   1c068:	bls	1c174 <__assert_fail@plt+0xb084>
   1c06c:	b	1c18c <__assert_fail@plt+0xb09c>
   1c070:	ldr	r0, [fp, #-16]
   1c074:	cmn	r0, #1
   1c078:	bne	1c0c4 <__assert_fail@plt+0xafd4>
   1c07c:	b	1c09c <__assert_fail@plt+0xafac>
   1c080:	ldr	r0, [pc, #3840]	; 1cf88 <__assert_fail@plt+0xbe98>
   1c084:	ldr	r1, [fp, #-12]
   1c088:	add	r0, r1, r0
   1c08c:	movw	r1, #0
   1c090:	cmp	r1, r0
   1c094:	bcc	1c174 <__assert_fail@plt+0xb084>
   1c098:	b	1c18c <__assert_fail@plt+0xb09c>
   1c09c:	ldr	r0, [fp, #-12]
   1c0a0:	movw	r1, #0
   1c0a4:	cmp	r1, r0
   1c0a8:	bcs	1c18c <__assert_fail@plt+0xb09c>
   1c0ac:	ldr	r0, [fp, #-12]
   1c0b0:	sub	r0, r0, #1
   1c0b4:	movw	r1, #32767	; 0x7fff
   1c0b8:	cmp	r1, r0
   1c0bc:	bcc	1c174 <__assert_fail@plt+0xb084>
   1c0c0:	b	1c18c <__assert_fail@plt+0xb09c>
   1c0c4:	ldr	r0, [pc, #3772]	; 1cf88 <__assert_fail@plt+0xbe98>
   1c0c8:	ldr	r1, [fp, #-16]
   1c0cc:	udiv	r0, r0, r1
   1c0d0:	ldr	r1, [fp, #-12]
   1c0d4:	cmp	r0, r1
   1c0d8:	bcc	1c174 <__assert_fail@plt+0xb084>
   1c0dc:	b	1c18c <__assert_fail@plt+0xb09c>
   1c0e0:	ldr	r0, [fp, #-16]
   1c0e4:	cmp	r0, #0
   1c0e8:	bne	1c0f0 <__assert_fail@plt+0xb000>
   1c0ec:	b	1c18c <__assert_fail@plt+0xb09c>
   1c0f0:	ldr	r0, [fp, #-12]
   1c0f4:	cmp	r0, #0
   1c0f8:	bcs	1c15c <__assert_fail@plt+0xb06c>
   1c0fc:	ldr	r0, [fp, #-12]
   1c100:	cmn	r0, #1
   1c104:	bne	1c140 <__assert_fail@plt+0xb050>
   1c108:	b	1c128 <__assert_fail@plt+0xb038>
   1c10c:	ldr	r0, [pc, #3700]	; 1cf88 <__assert_fail@plt+0xbe98>
   1c110:	ldr	r1, [fp, #-16]
   1c114:	add	r0, r1, r0
   1c118:	movw	r1, #0
   1c11c:	cmp	r1, r0
   1c120:	bcc	1c174 <__assert_fail@plt+0xb084>
   1c124:	b	1c18c <__assert_fail@plt+0xb09c>
   1c128:	ldr	r0, [fp, #-16]
   1c12c:	sub	r0, r0, #1
   1c130:	movw	r1, #32767	; 0x7fff
   1c134:	cmp	r1, r0
   1c138:	bcc	1c174 <__assert_fail@plt+0xb084>
   1c13c:	b	1c18c <__assert_fail@plt+0xb09c>
   1c140:	ldr	r0, [pc, #3648]	; 1cf88 <__assert_fail@plt+0xbe98>
   1c144:	ldr	r1, [fp, #-12]
   1c148:	udiv	r0, r0, r1
   1c14c:	ldr	r1, [fp, #-16]
   1c150:	cmp	r0, r1
   1c154:	bcc	1c174 <__assert_fail@plt+0xb084>
   1c158:	b	1c18c <__assert_fail@plt+0xb09c>
   1c15c:	ldr	r0, [fp, #-16]
   1c160:	movw	r1, #32767	; 0x7fff
   1c164:	udiv	r0, r1, r0
   1c168:	ldr	r1, [fp, #-12]
   1c16c:	cmp	r0, r1
   1c170:	bcs	1c18c <__assert_fail@plt+0xb09c>
   1c174:	ldr	r0, [fp, #-12]
   1c178:	ldr	r1, [fp, #-16]
   1c17c:	mul	r0, r0, r1
   1c180:	sxth	r0, r0
   1c184:	str	r0, [fp, #-20]	; 0xffffffec
   1c188:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1c18c:	ldr	r0, [fp, #-12]
   1c190:	ldr	r1, [fp, #-16]
   1c194:	mul	r0, r0, r1
   1c198:	sxth	r0, r0
   1c19c:	str	r0, [fp, #-20]	; 0xffffffec
   1c1a0:	b	1cf64 <__assert_fail@plt+0xbe74>
   1c1a4:	ldr	r0, [fp, #-16]
   1c1a8:	cmp	r0, #0
   1c1ac:	bcs	1c2b8 <__assert_fail@plt+0xb1c8>
   1c1b0:	ldr	r0, [fp, #-12]
   1c1b4:	cmp	r0, #0
   1c1b8:	bcs	1c240 <__assert_fail@plt+0xb150>
   1c1bc:	b	1c1dc <__assert_fail@plt+0xb0ec>
   1c1c0:	ldr	r0, [fp, #-12]
   1c1c4:	ldr	r1, [fp, #-16]
   1c1c8:	movw	r2, #65535	; 0xffff
   1c1cc:	udiv	r1, r2, r1
   1c1d0:	cmp	r0, r1
   1c1d4:	bcc	1c354 <__assert_fail@plt+0xb264>
   1c1d8:	b	1c36c <__assert_fail@plt+0xb27c>
   1c1dc:	b	1c1f0 <__assert_fail@plt+0xb100>
   1c1e0:	ldr	r0, [fp, #-16]
   1c1e4:	cmp	r0, #1
   1c1e8:	bcc	1c200 <__assert_fail@plt+0xb110>
   1c1ec:	b	1c20c <__assert_fail@plt+0xb11c>
   1c1f0:	ldr	r0, [fp, #-16]
   1c1f4:	movw	r1, #0
   1c1f8:	cmp	r1, r0
   1c1fc:	bcs	1c20c <__assert_fail@plt+0xb11c>
   1c200:	movw	r0, #0
   1c204:	str	r0, [fp, #-36]	; 0xffffffdc
   1c208:	b	1c224 <__assert_fail@plt+0xb134>
   1c20c:	ldr	r0, [fp, #-16]
   1c210:	movw	r1, #0
   1c214:	sub	r0, r1, r0
   1c218:	movw	r1, #65535	; 0xffff
   1c21c:	udiv	r0, r1, r0
   1c220:	str	r0, [fp, #-36]	; 0xffffffdc
   1c224:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c228:	ldr	r1, [fp, #-12]
   1c22c:	mvn	r2, #0
   1c230:	sub	r1, r2, r1
   1c234:	cmp	r0, r1
   1c238:	bls	1c354 <__assert_fail@plt+0xb264>
   1c23c:	b	1c36c <__assert_fail@plt+0xb27c>
   1c240:	b	1c248 <__assert_fail@plt+0xb158>
   1c244:	b	1c24c <__assert_fail@plt+0xb15c>
   1c248:	b	1c29c <__assert_fail@plt+0xb1ac>
   1c24c:	ldr	r0, [fp, #-16]
   1c250:	cmn	r0, #1
   1c254:	bne	1c29c <__assert_fail@plt+0xb1ac>
   1c258:	b	1c274 <__assert_fail@plt+0xb184>
   1c25c:	ldr	r0, [fp, #-12]
   1c260:	add	r0, r0, #0
   1c264:	movw	r1, #0
   1c268:	cmp	r1, r0
   1c26c:	bcc	1c354 <__assert_fail@plt+0xb264>
   1c270:	b	1c36c <__assert_fail@plt+0xb27c>
   1c274:	ldr	r0, [fp, #-12]
   1c278:	movw	r1, #0
   1c27c:	cmp	r1, r0
   1c280:	bcs	1c36c <__assert_fail@plt+0xb27c>
   1c284:	ldr	r0, [fp, #-12]
   1c288:	sub	r0, r0, #1
   1c28c:	mvn	r1, #0
   1c290:	cmp	r1, r0
   1c294:	bcc	1c354 <__assert_fail@plt+0xb264>
   1c298:	b	1c36c <__assert_fail@plt+0xb27c>
   1c29c:	ldr	r0, [fp, #-16]
   1c2a0:	movw	r1, #0
   1c2a4:	udiv	r0, r1, r0
   1c2a8:	ldr	r1, [fp, #-12]
   1c2ac:	cmp	r0, r1
   1c2b0:	bcc	1c354 <__assert_fail@plt+0xb264>
   1c2b4:	b	1c36c <__assert_fail@plt+0xb27c>
   1c2b8:	ldr	r0, [fp, #-16]
   1c2bc:	cmp	r0, #0
   1c2c0:	bne	1c2c8 <__assert_fail@plt+0xb1d8>
   1c2c4:	b	1c36c <__assert_fail@plt+0xb27c>
   1c2c8:	ldr	r0, [fp, #-12]
   1c2cc:	cmp	r0, #0
   1c2d0:	bcs	1c33c <__assert_fail@plt+0xb24c>
   1c2d4:	b	1c2dc <__assert_fail@plt+0xb1ec>
   1c2d8:	b	1c2e0 <__assert_fail@plt+0xb1f0>
   1c2dc:	b	1c320 <__assert_fail@plt+0xb230>
   1c2e0:	ldr	r0, [fp, #-12]
   1c2e4:	cmn	r0, #1
   1c2e8:	bne	1c320 <__assert_fail@plt+0xb230>
   1c2ec:	b	1c308 <__assert_fail@plt+0xb218>
   1c2f0:	ldr	r0, [fp, #-16]
   1c2f4:	add	r0, r0, #0
   1c2f8:	movw	r1, #0
   1c2fc:	cmp	r1, r0
   1c300:	bcc	1c354 <__assert_fail@plt+0xb264>
   1c304:	b	1c36c <__assert_fail@plt+0xb27c>
   1c308:	ldr	r0, [fp, #-16]
   1c30c:	sub	r0, r0, #1
   1c310:	mvn	r1, #0
   1c314:	cmp	r1, r0
   1c318:	bcc	1c354 <__assert_fail@plt+0xb264>
   1c31c:	b	1c36c <__assert_fail@plt+0xb27c>
   1c320:	ldr	r0, [fp, #-12]
   1c324:	movw	r1, #0
   1c328:	udiv	r0, r1, r0
   1c32c:	ldr	r1, [fp, #-16]
   1c330:	cmp	r0, r1
   1c334:	bcc	1c354 <__assert_fail@plt+0xb264>
   1c338:	b	1c36c <__assert_fail@plt+0xb27c>
   1c33c:	ldr	r0, [fp, #-16]
   1c340:	movw	r1, #65535	; 0xffff
   1c344:	udiv	r0, r1, r0
   1c348:	ldr	r1, [fp, #-12]
   1c34c:	cmp	r0, r1
   1c350:	bcs	1c36c <__assert_fail@plt+0xb27c>
   1c354:	ldr	r0, [fp, #-12]
   1c358:	ldr	r1, [fp, #-16]
   1c35c:	mul	r0, r0, r1
   1c360:	uxth	r0, r0
   1c364:	str	r0, [fp, #-20]	; 0xffffffec
   1c368:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1c36c:	ldr	r0, [fp, #-12]
   1c370:	ldr	r1, [fp, #-16]
   1c374:	mul	r0, r0, r1
   1c378:	uxth	r0, r0
   1c37c:	str	r0, [fp, #-20]	; 0xffffffec
   1c380:	b	1cf64 <__assert_fail@plt+0xbe74>
   1c384:	b	1c388 <__assert_fail@plt+0xb298>
   1c388:	b	1c54c <__assert_fail@plt+0xb45c>
   1c38c:	ldr	r0, [fp, #-16]
   1c390:	cmp	r0, #0
   1c394:	bcs	1c494 <__assert_fail@plt+0xb3a4>
   1c398:	ldr	r0, [fp, #-12]
   1c39c:	cmp	r0, #0
   1c3a0:	bcs	1c428 <__assert_fail@plt+0xb338>
   1c3a4:	b	1c3c4 <__assert_fail@plt+0xb2d4>
   1c3a8:	ldr	r0, [pc, #3024]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c3ac:	ldr	r1, [fp, #-12]
   1c3b0:	ldr	r2, [fp, #-16]
   1c3b4:	udiv	r0, r0, r2
   1c3b8:	cmp	r1, r0
   1c3bc:	bcc	1c524 <__assert_fail@plt+0xb434>
   1c3c0:	b	1c538 <__assert_fail@plt+0xb448>
   1c3c4:	b	1c3d8 <__assert_fail@plt+0xb2e8>
   1c3c8:	ldr	r0, [fp, #-16]
   1c3cc:	cmp	r0, #1
   1c3d0:	bcc	1c3e8 <__assert_fail@plt+0xb2f8>
   1c3d4:	b	1c3f4 <__assert_fail@plt+0xb304>
   1c3d8:	ldr	r0, [fp, #-16]
   1c3dc:	movw	r1, #0
   1c3e0:	cmp	r1, r0
   1c3e4:	bcs	1c3f4 <__assert_fail@plt+0xb304>
   1c3e8:	movw	r0, #0
   1c3ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1c3f0:	b	1c40c <__assert_fail@plt+0xb31c>
   1c3f4:	ldr	r0, [pc, #2948]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c3f8:	ldr	r1, [fp, #-16]
   1c3fc:	movw	r2, #0
   1c400:	sub	r1, r2, r1
   1c404:	udiv	r0, r0, r1
   1c408:	str	r0, [fp, #-40]	; 0xffffffd8
   1c40c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c410:	ldr	r1, [fp, #-12]
   1c414:	mvn	r2, #0
   1c418:	sub	r1, r2, r1
   1c41c:	cmp	r0, r1
   1c420:	bls	1c524 <__assert_fail@plt+0xb434>
   1c424:	b	1c538 <__assert_fail@plt+0xb448>
   1c428:	ldr	r0, [fp, #-16]
   1c42c:	cmn	r0, #1
   1c430:	bne	1c478 <__assert_fail@plt+0xb388>
   1c434:	b	1c450 <__assert_fail@plt+0xb360>
   1c438:	ldr	r0, [fp, #-12]
   1c43c:	add	r0, r0, #-2147483648	; 0x80000000
   1c440:	movw	r1, #0
   1c444:	cmp	r1, r0
   1c448:	bcc	1c524 <__assert_fail@plt+0xb434>
   1c44c:	b	1c538 <__assert_fail@plt+0xb448>
   1c450:	ldr	r0, [fp, #-12]
   1c454:	movw	r1, #0
   1c458:	cmp	r1, r0
   1c45c:	bcs	1c538 <__assert_fail@plt+0xb448>
   1c460:	ldr	r0, [pc, #2840]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c464:	ldr	r1, [fp, #-12]
   1c468:	sub	r1, r1, #1
   1c46c:	cmp	r0, r1
   1c470:	bcc	1c524 <__assert_fail@plt+0xb434>
   1c474:	b	1c538 <__assert_fail@plt+0xb448>
   1c478:	ldr	r0, [pc, #2820]	; 1cf84 <__assert_fail@plt+0xbe94>
   1c47c:	ldr	r1, [fp, #-16]
   1c480:	udiv	r0, r0, r1
   1c484:	ldr	r1, [fp, #-12]
   1c488:	cmp	r0, r1
   1c48c:	bcc	1c524 <__assert_fail@plt+0xb434>
   1c490:	b	1c538 <__assert_fail@plt+0xb448>
   1c494:	ldr	r0, [fp, #-16]
   1c498:	cmp	r0, #0
   1c49c:	bne	1c4a4 <__assert_fail@plt+0xb3b4>
   1c4a0:	b	1c538 <__assert_fail@plt+0xb448>
   1c4a4:	ldr	r0, [fp, #-12]
   1c4a8:	cmp	r0, #0
   1c4ac:	bcs	1c50c <__assert_fail@plt+0xb41c>
   1c4b0:	ldr	r0, [fp, #-12]
   1c4b4:	cmn	r0, #1
   1c4b8:	bne	1c4f0 <__assert_fail@plt+0xb400>
   1c4bc:	b	1c4d8 <__assert_fail@plt+0xb3e8>
   1c4c0:	ldr	r0, [fp, #-16]
   1c4c4:	add	r0, r0, #-2147483648	; 0x80000000
   1c4c8:	movw	r1, #0
   1c4cc:	cmp	r1, r0
   1c4d0:	bcc	1c524 <__assert_fail@plt+0xb434>
   1c4d4:	b	1c538 <__assert_fail@plt+0xb448>
   1c4d8:	ldr	r0, [pc, #2720]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c4dc:	ldr	r1, [fp, #-16]
   1c4e0:	sub	r1, r1, #1
   1c4e4:	cmp	r0, r1
   1c4e8:	bcc	1c524 <__assert_fail@plt+0xb434>
   1c4ec:	b	1c538 <__assert_fail@plt+0xb448>
   1c4f0:	ldr	r0, [pc, #2700]	; 1cf84 <__assert_fail@plt+0xbe94>
   1c4f4:	ldr	r1, [fp, #-12]
   1c4f8:	udiv	r0, r0, r1
   1c4fc:	ldr	r1, [fp, #-16]
   1c500:	cmp	r0, r1
   1c504:	bcc	1c524 <__assert_fail@plt+0xb434>
   1c508:	b	1c538 <__assert_fail@plt+0xb448>
   1c50c:	ldr	r0, [pc, #2668]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c510:	ldr	r1, [fp, #-16]
   1c514:	udiv	r0, r0, r1
   1c518:	ldr	r1, [fp, #-12]
   1c51c:	cmp	r0, r1
   1c520:	bcs	1c538 <__assert_fail@plt+0xb448>
   1c524:	ldr	r0, [fp, #-12]
   1c528:	ldr	r1, [fp, #-16]
   1c52c:	mul	r0, r0, r1
   1c530:	str	r0, [fp, #-20]	; 0xffffffec
   1c534:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1c538:	ldr	r0, [fp, #-12]
   1c53c:	ldr	r1, [fp, #-16]
   1c540:	mul	r0, r0, r1
   1c544:	str	r0, [fp, #-20]	; 0xffffffec
   1c548:	b	1cf64 <__assert_fail@plt+0xbe74>
   1c54c:	ldr	r0, [fp, #-16]
   1c550:	cmp	r0, #0
   1c554:	bcs	1c660 <__assert_fail@plt+0xb570>
   1c558:	ldr	r0, [fp, #-12]
   1c55c:	cmp	r0, #0
   1c560:	bcs	1c5e8 <__assert_fail@plt+0xb4f8>
   1c564:	b	1c584 <__assert_fail@plt+0xb494>
   1c568:	ldr	r0, [fp, #-12]
   1c56c:	ldr	r1, [fp, #-16]
   1c570:	mvn	r2, #0
   1c574:	udiv	r1, r2, r1
   1c578:	cmp	r0, r1
   1c57c:	bcc	1c6fc <__assert_fail@plt+0xb60c>
   1c580:	b	1c710 <__assert_fail@plt+0xb620>
   1c584:	b	1c598 <__assert_fail@plt+0xb4a8>
   1c588:	ldr	r0, [fp, #-16]
   1c58c:	cmp	r0, #1
   1c590:	bcc	1c5a8 <__assert_fail@plt+0xb4b8>
   1c594:	b	1c5b4 <__assert_fail@plt+0xb4c4>
   1c598:	ldr	r0, [fp, #-16]
   1c59c:	movw	r1, #0
   1c5a0:	cmp	r1, r0
   1c5a4:	bcs	1c5b4 <__assert_fail@plt+0xb4c4>
   1c5a8:	movw	r0, #1
   1c5ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1c5b0:	b	1c5cc <__assert_fail@plt+0xb4dc>
   1c5b4:	ldr	r0, [fp, #-16]
   1c5b8:	movw	r1, #0
   1c5bc:	sub	r0, r1, r0
   1c5c0:	mvn	r1, #0
   1c5c4:	udiv	r0, r1, r0
   1c5c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1c5cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c5d0:	ldr	r1, [fp, #-12]
   1c5d4:	mvn	r2, #0
   1c5d8:	sub	r1, r2, r1
   1c5dc:	cmp	r0, r1
   1c5e0:	bls	1c6fc <__assert_fail@plt+0xb60c>
   1c5e4:	b	1c710 <__assert_fail@plt+0xb620>
   1c5e8:	b	1c5f0 <__assert_fail@plt+0xb500>
   1c5ec:	b	1c5f4 <__assert_fail@plt+0xb504>
   1c5f0:	b	1c644 <__assert_fail@plt+0xb554>
   1c5f4:	ldr	r0, [fp, #-16]
   1c5f8:	cmn	r0, #1
   1c5fc:	bne	1c644 <__assert_fail@plt+0xb554>
   1c600:	b	1c61c <__assert_fail@plt+0xb52c>
   1c604:	ldr	r0, [fp, #-12]
   1c608:	add	r0, r0, #0
   1c60c:	movw	r1, #0
   1c610:	cmp	r1, r0
   1c614:	bcc	1c6fc <__assert_fail@plt+0xb60c>
   1c618:	b	1c710 <__assert_fail@plt+0xb620>
   1c61c:	ldr	r0, [fp, #-12]
   1c620:	movw	r1, #0
   1c624:	cmp	r1, r0
   1c628:	bcs	1c710 <__assert_fail@plt+0xb620>
   1c62c:	ldr	r0, [fp, #-12]
   1c630:	sub	r0, r0, #1
   1c634:	mvn	r1, #0
   1c638:	cmp	r1, r0
   1c63c:	bcc	1c6fc <__assert_fail@plt+0xb60c>
   1c640:	b	1c710 <__assert_fail@plt+0xb620>
   1c644:	ldr	r0, [fp, #-16]
   1c648:	movw	r1, #0
   1c64c:	udiv	r0, r1, r0
   1c650:	ldr	r1, [fp, #-12]
   1c654:	cmp	r0, r1
   1c658:	bcc	1c6fc <__assert_fail@plt+0xb60c>
   1c65c:	b	1c710 <__assert_fail@plt+0xb620>
   1c660:	ldr	r0, [fp, #-16]
   1c664:	cmp	r0, #0
   1c668:	bne	1c670 <__assert_fail@plt+0xb580>
   1c66c:	b	1c710 <__assert_fail@plt+0xb620>
   1c670:	ldr	r0, [fp, #-12]
   1c674:	cmp	r0, #0
   1c678:	bcs	1c6e4 <__assert_fail@plt+0xb5f4>
   1c67c:	b	1c684 <__assert_fail@plt+0xb594>
   1c680:	b	1c688 <__assert_fail@plt+0xb598>
   1c684:	b	1c6c8 <__assert_fail@plt+0xb5d8>
   1c688:	ldr	r0, [fp, #-12]
   1c68c:	cmn	r0, #1
   1c690:	bne	1c6c8 <__assert_fail@plt+0xb5d8>
   1c694:	b	1c6b0 <__assert_fail@plt+0xb5c0>
   1c698:	ldr	r0, [fp, #-16]
   1c69c:	add	r0, r0, #0
   1c6a0:	movw	r1, #0
   1c6a4:	cmp	r1, r0
   1c6a8:	bcc	1c6fc <__assert_fail@plt+0xb60c>
   1c6ac:	b	1c710 <__assert_fail@plt+0xb620>
   1c6b0:	ldr	r0, [fp, #-16]
   1c6b4:	sub	r0, r0, #1
   1c6b8:	mvn	r1, #0
   1c6bc:	cmp	r1, r0
   1c6c0:	bcc	1c6fc <__assert_fail@plt+0xb60c>
   1c6c4:	b	1c710 <__assert_fail@plt+0xb620>
   1c6c8:	ldr	r0, [fp, #-12]
   1c6cc:	movw	r1, #0
   1c6d0:	udiv	r0, r1, r0
   1c6d4:	ldr	r1, [fp, #-16]
   1c6d8:	cmp	r0, r1
   1c6dc:	bcc	1c6fc <__assert_fail@plt+0xb60c>
   1c6e0:	b	1c710 <__assert_fail@plt+0xb620>
   1c6e4:	ldr	r0, [fp, #-16]
   1c6e8:	mvn	r1, #0
   1c6ec:	udiv	r0, r1, r0
   1c6f0:	ldr	r1, [fp, #-12]
   1c6f4:	cmp	r0, r1
   1c6f8:	bcs	1c710 <__assert_fail@plt+0xb620>
   1c6fc:	ldr	r0, [fp, #-12]
   1c700:	ldr	r1, [fp, #-16]
   1c704:	mul	r0, r0, r1
   1c708:	str	r0, [fp, #-20]	; 0xffffffec
   1c70c:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1c710:	ldr	r0, [fp, #-12]
   1c714:	ldr	r1, [fp, #-16]
   1c718:	mul	r0, r0, r1
   1c71c:	str	r0, [fp, #-20]	; 0xffffffec
   1c720:	b	1cf64 <__assert_fail@plt+0xbe74>
   1c724:	b	1c728 <__assert_fail@plt+0xb638>
   1c728:	b	1c8ec <__assert_fail@plt+0xb7fc>
   1c72c:	ldr	r0, [fp, #-16]
   1c730:	cmp	r0, #0
   1c734:	bcs	1c834 <__assert_fail@plt+0xb744>
   1c738:	ldr	r0, [fp, #-12]
   1c73c:	cmp	r0, #0
   1c740:	bcs	1c7c8 <__assert_fail@plt+0xb6d8>
   1c744:	b	1c764 <__assert_fail@plt+0xb674>
   1c748:	ldr	r0, [pc, #2096]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c74c:	ldr	r1, [fp, #-12]
   1c750:	ldr	r2, [fp, #-16]
   1c754:	udiv	r0, r0, r2
   1c758:	cmp	r1, r0
   1c75c:	bcc	1c8c4 <__assert_fail@plt+0xb7d4>
   1c760:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c764:	b	1c778 <__assert_fail@plt+0xb688>
   1c768:	ldr	r0, [fp, #-16]
   1c76c:	cmp	r0, #1
   1c770:	bcc	1c788 <__assert_fail@plt+0xb698>
   1c774:	b	1c794 <__assert_fail@plt+0xb6a4>
   1c778:	ldr	r0, [fp, #-16]
   1c77c:	movw	r1, #0
   1c780:	cmp	r1, r0
   1c784:	bcs	1c794 <__assert_fail@plt+0xb6a4>
   1c788:	movw	r0, #0
   1c78c:	str	r0, [fp, #-48]	; 0xffffffd0
   1c790:	b	1c7ac <__assert_fail@plt+0xb6bc>
   1c794:	ldr	r0, [pc, #2020]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c798:	ldr	r1, [fp, #-16]
   1c79c:	movw	r2, #0
   1c7a0:	sub	r1, r2, r1
   1c7a4:	udiv	r0, r0, r1
   1c7a8:	str	r0, [fp, #-48]	; 0xffffffd0
   1c7ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c7b0:	ldr	r1, [fp, #-12]
   1c7b4:	mvn	r2, #0
   1c7b8:	sub	r1, r2, r1
   1c7bc:	cmp	r0, r1
   1c7c0:	bls	1c8c4 <__assert_fail@plt+0xb7d4>
   1c7c4:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c7c8:	ldr	r0, [fp, #-16]
   1c7cc:	cmn	r0, #1
   1c7d0:	bne	1c818 <__assert_fail@plt+0xb728>
   1c7d4:	b	1c7f0 <__assert_fail@plt+0xb700>
   1c7d8:	ldr	r0, [fp, #-12]
   1c7dc:	add	r0, r0, #-2147483648	; 0x80000000
   1c7e0:	movw	r1, #0
   1c7e4:	cmp	r1, r0
   1c7e8:	bcc	1c8c4 <__assert_fail@plt+0xb7d4>
   1c7ec:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c7f0:	ldr	r0, [fp, #-12]
   1c7f4:	movw	r1, #0
   1c7f8:	cmp	r1, r0
   1c7fc:	bcs	1c8d8 <__assert_fail@plt+0xb7e8>
   1c800:	ldr	r0, [pc, #1912]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c804:	ldr	r1, [fp, #-12]
   1c808:	sub	r1, r1, #1
   1c80c:	cmp	r0, r1
   1c810:	bcc	1c8c4 <__assert_fail@plt+0xb7d4>
   1c814:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c818:	ldr	r0, [pc, #1892]	; 1cf84 <__assert_fail@plt+0xbe94>
   1c81c:	ldr	r1, [fp, #-16]
   1c820:	udiv	r0, r0, r1
   1c824:	ldr	r1, [fp, #-12]
   1c828:	cmp	r0, r1
   1c82c:	bcc	1c8c4 <__assert_fail@plt+0xb7d4>
   1c830:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c834:	ldr	r0, [fp, #-16]
   1c838:	cmp	r0, #0
   1c83c:	bne	1c844 <__assert_fail@plt+0xb754>
   1c840:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c844:	ldr	r0, [fp, #-12]
   1c848:	cmp	r0, #0
   1c84c:	bcs	1c8ac <__assert_fail@plt+0xb7bc>
   1c850:	ldr	r0, [fp, #-12]
   1c854:	cmn	r0, #1
   1c858:	bne	1c890 <__assert_fail@plt+0xb7a0>
   1c85c:	b	1c878 <__assert_fail@plt+0xb788>
   1c860:	ldr	r0, [fp, #-16]
   1c864:	add	r0, r0, #-2147483648	; 0x80000000
   1c868:	movw	r1, #0
   1c86c:	cmp	r1, r0
   1c870:	bcc	1c8c4 <__assert_fail@plt+0xb7d4>
   1c874:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c878:	ldr	r0, [pc, #1792]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c87c:	ldr	r1, [fp, #-16]
   1c880:	sub	r1, r1, #1
   1c884:	cmp	r0, r1
   1c888:	bcc	1c8c4 <__assert_fail@plt+0xb7d4>
   1c88c:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c890:	ldr	r0, [pc, #1772]	; 1cf84 <__assert_fail@plt+0xbe94>
   1c894:	ldr	r1, [fp, #-12]
   1c898:	udiv	r0, r0, r1
   1c89c:	ldr	r1, [fp, #-16]
   1c8a0:	cmp	r0, r1
   1c8a4:	bcc	1c8c4 <__assert_fail@plt+0xb7d4>
   1c8a8:	b	1c8d8 <__assert_fail@plt+0xb7e8>
   1c8ac:	ldr	r0, [pc, #1740]	; 1cf80 <__assert_fail@plt+0xbe90>
   1c8b0:	ldr	r1, [fp, #-16]
   1c8b4:	udiv	r0, r0, r1
   1c8b8:	ldr	r1, [fp, #-12]
   1c8bc:	cmp	r0, r1
   1c8c0:	bcs	1c8d8 <__assert_fail@plt+0xb7e8>
   1c8c4:	ldr	r0, [fp, #-12]
   1c8c8:	ldr	r1, [fp, #-16]
   1c8cc:	mul	r0, r0, r1
   1c8d0:	str	r0, [fp, #-20]	; 0xffffffec
   1c8d4:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1c8d8:	ldr	r0, [fp, #-12]
   1c8dc:	ldr	r1, [fp, #-16]
   1c8e0:	mul	r0, r0, r1
   1c8e4:	str	r0, [fp, #-20]	; 0xffffffec
   1c8e8:	b	1cf64 <__assert_fail@plt+0xbe74>
   1c8ec:	ldr	r0, [fp, #-16]
   1c8f0:	cmp	r0, #0
   1c8f4:	bcs	1ca00 <__assert_fail@plt+0xb910>
   1c8f8:	ldr	r0, [fp, #-12]
   1c8fc:	cmp	r0, #0
   1c900:	bcs	1c988 <__assert_fail@plt+0xb898>
   1c904:	b	1c924 <__assert_fail@plt+0xb834>
   1c908:	ldr	r0, [fp, #-12]
   1c90c:	ldr	r1, [fp, #-16]
   1c910:	mvn	r2, #0
   1c914:	udiv	r1, r2, r1
   1c918:	cmp	r0, r1
   1c91c:	bcc	1ca9c <__assert_fail@plt+0xb9ac>
   1c920:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1c924:	b	1c938 <__assert_fail@plt+0xb848>
   1c928:	ldr	r0, [fp, #-16]
   1c92c:	cmp	r0, #1
   1c930:	bcc	1c948 <__assert_fail@plt+0xb858>
   1c934:	b	1c954 <__assert_fail@plt+0xb864>
   1c938:	ldr	r0, [fp, #-16]
   1c93c:	movw	r1, #0
   1c940:	cmp	r1, r0
   1c944:	bcs	1c954 <__assert_fail@plt+0xb864>
   1c948:	movw	r0, #1
   1c94c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c950:	b	1c96c <__assert_fail@plt+0xb87c>
   1c954:	ldr	r0, [fp, #-16]
   1c958:	movw	r1, #0
   1c95c:	sub	r0, r1, r0
   1c960:	mvn	r1, #0
   1c964:	udiv	r0, r1, r0
   1c968:	str	r0, [fp, #-52]	; 0xffffffcc
   1c96c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c970:	ldr	r1, [fp, #-12]
   1c974:	mvn	r2, #0
   1c978:	sub	r1, r2, r1
   1c97c:	cmp	r0, r1
   1c980:	bls	1ca9c <__assert_fail@plt+0xb9ac>
   1c984:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1c988:	b	1c990 <__assert_fail@plt+0xb8a0>
   1c98c:	b	1c994 <__assert_fail@plt+0xb8a4>
   1c990:	b	1c9e4 <__assert_fail@plt+0xb8f4>
   1c994:	ldr	r0, [fp, #-16]
   1c998:	cmn	r0, #1
   1c99c:	bne	1c9e4 <__assert_fail@plt+0xb8f4>
   1c9a0:	b	1c9bc <__assert_fail@plt+0xb8cc>
   1c9a4:	ldr	r0, [fp, #-12]
   1c9a8:	add	r0, r0, #0
   1c9ac:	movw	r1, #0
   1c9b0:	cmp	r1, r0
   1c9b4:	bcc	1ca9c <__assert_fail@plt+0xb9ac>
   1c9b8:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1c9bc:	ldr	r0, [fp, #-12]
   1c9c0:	movw	r1, #0
   1c9c4:	cmp	r1, r0
   1c9c8:	bcs	1cab0 <__assert_fail@plt+0xb9c0>
   1c9cc:	ldr	r0, [fp, #-12]
   1c9d0:	sub	r0, r0, #1
   1c9d4:	mvn	r1, #0
   1c9d8:	cmp	r1, r0
   1c9dc:	bcc	1ca9c <__assert_fail@plt+0xb9ac>
   1c9e0:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1c9e4:	ldr	r0, [fp, #-16]
   1c9e8:	movw	r1, #0
   1c9ec:	udiv	r0, r1, r0
   1c9f0:	ldr	r1, [fp, #-12]
   1c9f4:	cmp	r0, r1
   1c9f8:	bcc	1ca9c <__assert_fail@plt+0xb9ac>
   1c9fc:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1ca00:	ldr	r0, [fp, #-16]
   1ca04:	cmp	r0, #0
   1ca08:	bne	1ca10 <__assert_fail@plt+0xb920>
   1ca0c:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1ca10:	ldr	r0, [fp, #-12]
   1ca14:	cmp	r0, #0
   1ca18:	bcs	1ca84 <__assert_fail@plt+0xb994>
   1ca1c:	b	1ca24 <__assert_fail@plt+0xb934>
   1ca20:	b	1ca28 <__assert_fail@plt+0xb938>
   1ca24:	b	1ca68 <__assert_fail@plt+0xb978>
   1ca28:	ldr	r0, [fp, #-12]
   1ca2c:	cmn	r0, #1
   1ca30:	bne	1ca68 <__assert_fail@plt+0xb978>
   1ca34:	b	1ca50 <__assert_fail@plt+0xb960>
   1ca38:	ldr	r0, [fp, #-16]
   1ca3c:	add	r0, r0, #0
   1ca40:	movw	r1, #0
   1ca44:	cmp	r1, r0
   1ca48:	bcc	1ca9c <__assert_fail@plt+0xb9ac>
   1ca4c:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1ca50:	ldr	r0, [fp, #-16]
   1ca54:	sub	r0, r0, #1
   1ca58:	mvn	r1, #0
   1ca5c:	cmp	r1, r0
   1ca60:	bcc	1ca9c <__assert_fail@plt+0xb9ac>
   1ca64:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1ca68:	ldr	r0, [fp, #-12]
   1ca6c:	movw	r1, #0
   1ca70:	udiv	r0, r1, r0
   1ca74:	ldr	r1, [fp, #-16]
   1ca78:	cmp	r0, r1
   1ca7c:	bcc	1ca9c <__assert_fail@plt+0xb9ac>
   1ca80:	b	1cab0 <__assert_fail@plt+0xb9c0>
   1ca84:	ldr	r0, [fp, #-16]
   1ca88:	mvn	r1, #0
   1ca8c:	udiv	r0, r1, r0
   1ca90:	ldr	r1, [fp, #-12]
   1ca94:	cmp	r0, r1
   1ca98:	bcs	1cab0 <__assert_fail@plt+0xb9c0>
   1ca9c:	ldr	r0, [fp, #-12]
   1caa0:	ldr	r1, [fp, #-16]
   1caa4:	mul	r0, r0, r1
   1caa8:	str	r0, [fp, #-20]	; 0xffffffec
   1caac:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1cab0:	ldr	r0, [fp, #-12]
   1cab4:	ldr	r1, [fp, #-16]
   1cab8:	mul	r0, r0, r1
   1cabc:	str	r0, [fp, #-20]	; 0xffffffec
   1cac0:	b	1cf64 <__assert_fail@plt+0xbe74>
   1cac4:	b	1cd18 <__assert_fail@plt+0xbc28>
   1cac8:	ldr	r0, [fp, #-16]
   1cacc:	cmp	r0, #0
   1cad0:	bcs	1cc30 <__assert_fail@plt+0xbb40>
   1cad4:	ldr	r0, [fp, #-12]
   1cad8:	cmp	r0, #0
   1cadc:	bcs	1cbac <__assert_fail@plt+0xbabc>
   1cae0:	b	1cae4 <__assert_fail@plt+0xb9f4>
   1cae4:	ldr	r0, [fp, #-12]
   1cae8:	ldr	r2, [fp, #-16]
   1caec:	mvn	r1, #0
   1caf0:	mvn	r3, #-2147483648	; 0x80000000
   1caf4:	mov	ip, #0
   1caf8:	str	r0, [fp, #-56]	; 0xffffffc8
   1cafc:	mov	r0, r1
   1cb00:	mov	r1, r3
   1cb04:	mov	r3, ip
   1cb08:	bl	1d258 <__assert_fail@plt+0xc168>
   1cb0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cb10:	subs	r0, r2, r0
   1cb14:	rscs	r1, r1, #0
   1cb18:	str	r0, [fp, #-60]	; 0xffffffc4
   1cb1c:	str	r1, [fp, #-64]	; 0xffffffc0
   1cb20:	blt	1ccf0 <__assert_fail@plt+0xbc00>
   1cb24:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cb28:	b	1cb3c <__assert_fail@plt+0xba4c>
   1cb2c:	ldr	r0, [fp, #-16]
   1cb30:	cmp	r0, #1
   1cb34:	bcc	1cb4c <__assert_fail@plt+0xba5c>
   1cb38:	b	1cb60 <__assert_fail@plt+0xba70>
   1cb3c:	ldr	r0, [fp, #-16]
   1cb40:	movw	r1, #0
   1cb44:	cmp	r1, r0
   1cb48:	bcs	1cb60 <__assert_fail@plt+0xba70>
   1cb4c:	mov	r0, #0
   1cb50:	mvn	r1, #0
   1cb54:	str	r1, [fp, #-68]	; 0xffffffbc
   1cb58:	str	r0, [fp, #-72]	; 0xffffffb8
   1cb5c:	b	1cb84 <__assert_fail@plt+0xba94>
   1cb60:	ldr	r0, [fp, #-16]
   1cb64:	rsb	r2, r0, #0
   1cb68:	mvn	r0, #0
   1cb6c:	mvn	r1, #-2147483648	; 0x80000000
   1cb70:	mov	r3, #0
   1cb74:	bl	1d258 <__assert_fail@plt+0xc168>
   1cb78:	str	r0, [fp, #-68]	; 0xffffffbc
   1cb7c:	str	r1, [fp, #-72]	; 0xffffffb8
   1cb80:	b	1cb84 <__assert_fail@plt+0xba94>
   1cb84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1cb88:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cb8c:	ldr	r2, [fp, #-12]
   1cb90:	mvn	r2, r2
   1cb94:	subs	r1, r2, r1
   1cb98:	rscs	r0, r0, #0
   1cb9c:	str	r1, [fp, #-76]	; 0xffffffb4
   1cba0:	str	r0, [fp, #-80]	; 0xffffffb0
   1cba4:	bge	1ccf0 <__assert_fail@plt+0xbc00>
   1cba8:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cbac:	ldr	r0, [fp, #-16]
   1cbb0:	cmn	r0, #1
   1cbb4:	bne	1cbfc <__assert_fail@plt+0xbb0c>
   1cbb8:	b	1cbdc <__assert_fail@plt+0xbaec>
   1cbbc:	ldr	r0, [fp, #-12]
   1cbc0:	rsbs	r0, r0, #0
   1cbc4:	mov	r1, #0
   1cbc8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1cbcc:	str	r0, [fp, #-84]	; 0xffffffac
   1cbd0:	str	r1, [sp, #88]	; 0x58
   1cbd4:	blt	1ccf0 <__assert_fail@plt+0xbc00>
   1cbd8:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cbdc:	ldr	r0, [fp, #-12]
   1cbe0:	movw	r1, #0
   1cbe4:	cmp	r1, r0
   1cbe8:	bcs	1cd04 <__assert_fail@plt+0xbc14>
   1cbec:	mov	r0, #0
   1cbf0:	cmp	r0, #0
   1cbf4:	bne	1ccf0 <__assert_fail@plt+0xbc00>
   1cbf8:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cbfc:	ldr	r2, [fp, #-16]
   1cc00:	mov	r1, #-2147483648	; 0x80000000
   1cc04:	mov	r0, #0
   1cc08:	str	r0, [sp, #84]	; 0x54
   1cc0c:	ldr	r3, [sp, #84]	; 0x54
   1cc10:	bl	1d184 <__assert_fail@plt+0xc094>
   1cc14:	ldr	r2, [fp, #-12]
   1cc18:	subs	r0, r0, r2
   1cc1c:	sbcs	r1, r1, #0
   1cc20:	str	r0, [sp, #80]	; 0x50
   1cc24:	str	r1, [sp, #76]	; 0x4c
   1cc28:	blt	1ccf0 <__assert_fail@plt+0xbc00>
   1cc2c:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cc30:	ldr	r0, [fp, #-16]
   1cc34:	cmp	r0, #0
   1cc38:	bne	1cc40 <__assert_fail@plt+0xbb50>
   1cc3c:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cc40:	ldr	r0, [fp, #-12]
   1cc44:	cmp	r0, #0
   1cc48:	bcs	1ccc0 <__assert_fail@plt+0xbbd0>
   1cc4c:	ldr	r0, [fp, #-12]
   1cc50:	cmn	r0, #1
   1cc54:	bne	1cc8c <__assert_fail@plt+0xbb9c>
   1cc58:	b	1cc7c <__assert_fail@plt+0xbb8c>
   1cc5c:	ldr	r0, [fp, #-16]
   1cc60:	rsbs	r0, r0, #0
   1cc64:	mov	r1, #0
   1cc68:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1cc6c:	str	r0, [sp, #72]	; 0x48
   1cc70:	str	r1, [sp, #68]	; 0x44
   1cc74:	blt	1ccf0 <__assert_fail@plt+0xbc00>
   1cc78:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cc7c:	mov	r0, #0
   1cc80:	cmp	r0, #0
   1cc84:	bne	1ccf0 <__assert_fail@plt+0xbc00>
   1cc88:	b	1cd04 <__assert_fail@plt+0xbc14>
   1cc8c:	ldr	r2, [fp, #-12]
   1cc90:	mov	r1, #-2147483648	; 0x80000000
   1cc94:	mov	r0, #0
   1cc98:	str	r0, [sp, #64]	; 0x40
   1cc9c:	ldr	r3, [sp, #64]	; 0x40
   1cca0:	bl	1d184 <__assert_fail@plt+0xc094>
   1cca4:	ldr	r2, [fp, #-16]
   1cca8:	subs	r0, r0, r2
   1ccac:	sbcs	r1, r1, #0
   1ccb0:	str	r0, [sp, #60]	; 0x3c
   1ccb4:	str	r1, [sp, #56]	; 0x38
   1ccb8:	blt	1ccf0 <__assert_fail@plt+0xbc00>
   1ccbc:	b	1cd04 <__assert_fail@plt+0xbc14>
   1ccc0:	ldr	r2, [fp, #-16]
   1ccc4:	mvn	r0, #0
   1ccc8:	mvn	r1, #-2147483648	; 0x80000000
   1cccc:	mov	r3, #0
   1ccd0:	bl	1d258 <__assert_fail@plt+0xc168>
   1ccd4:	ldr	r2, [fp, #-12]
   1ccd8:	subs	r0, r0, r2
   1ccdc:	sbcs	r1, r1, #0
   1cce0:	str	r0, [sp, #52]	; 0x34
   1cce4:	str	r1, [sp, #48]	; 0x30
   1cce8:	bge	1cd04 <__assert_fail@plt+0xbc14>
   1ccec:	b	1ccf0 <__assert_fail@plt+0xbc00>
   1ccf0:	ldr	r0, [fp, #-12]
   1ccf4:	ldr	r1, [fp, #-16]
   1ccf8:	mul	r0, r0, r1
   1ccfc:	str	r0, [fp, #-20]	; 0xffffffec
   1cd00:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1cd04:	ldr	r0, [fp, #-12]
   1cd08:	ldr	r1, [fp, #-16]
   1cd0c:	mul	r0, r0, r1
   1cd10:	str	r0, [fp, #-20]	; 0xffffffec
   1cd14:	b	1cf64 <__assert_fail@plt+0xbe74>
   1cd18:	ldr	r0, [fp, #-16]
   1cd1c:	cmp	r0, #0
   1cd20:	bcs	1ce6c <__assert_fail@plt+0xbd7c>
   1cd24:	ldr	r0, [fp, #-12]
   1cd28:	cmp	r0, #0
   1cd2c:	bcs	1cdf4 <__assert_fail@plt+0xbd04>
   1cd30:	b	1cd6c <__assert_fail@plt+0xbc7c>
   1cd34:	ldr	r0, [fp, #-12]
   1cd38:	ldr	r2, [fp, #-16]
   1cd3c:	mvn	r1, #0
   1cd40:	mov	r3, #0
   1cd44:	str	r0, [sp, #44]	; 0x2c
   1cd48:	mov	r0, r1
   1cd4c:	bl	1d258 <__assert_fail@plt+0xc168>
   1cd50:	ldr	r2, [sp, #44]	; 0x2c
   1cd54:	subs	r0, r2, r0
   1cd58:	rscs	r1, r1, #0
   1cd5c:	str	r0, [sp, #40]	; 0x28
   1cd60:	str	r1, [sp, #36]	; 0x24
   1cd64:	bcc	1cf24 <__assert_fail@plt+0xbe34>
   1cd68:	b	1cf38 <__assert_fail@plt+0xbe48>
   1cd6c:	b	1cd80 <__assert_fail@plt+0xbc90>
   1cd70:	ldr	r0, [fp, #-16]
   1cd74:	cmp	r0, #1
   1cd78:	bcc	1cd90 <__assert_fail@plt+0xbca0>
   1cd7c:	b	1cda4 <__assert_fail@plt+0xbcb4>
   1cd80:	ldr	r0, [fp, #-16]
   1cd84:	movw	r1, #0
   1cd88:	cmp	r1, r0
   1cd8c:	bcs	1cda4 <__assert_fail@plt+0xbcb4>
   1cd90:	mov	r0, #1
   1cd94:	mvn	r1, #0
   1cd98:	str	r1, [sp, #32]
   1cd9c:	str	r0, [sp, #28]
   1cda0:	b	1cdcc <__assert_fail@plt+0xbcdc>
   1cda4:	ldr	r0, [fp, #-16]
   1cda8:	rsb	r2, r0, #0
   1cdac:	mvn	r0, #0
   1cdb0:	mov	r3, #0
   1cdb4:	str	r0, [sp, #24]
   1cdb8:	ldr	r1, [sp, #24]
   1cdbc:	bl	1d258 <__assert_fail@plt+0xc168>
   1cdc0:	str	r0, [sp, #32]
   1cdc4:	str	r1, [sp, #28]
   1cdc8:	b	1cdcc <__assert_fail@plt+0xbcdc>
   1cdcc:	ldr	r0, [sp, #28]
   1cdd0:	ldr	r1, [sp, #32]
   1cdd4:	ldr	r2, [fp, #-12]
   1cdd8:	mvn	r2, r2
   1cddc:	subs	r1, r2, r1
   1cde0:	rscs	r0, r0, #0
   1cde4:	str	r1, [sp, #20]
   1cde8:	str	r0, [sp, #16]
   1cdec:	bcs	1cf24 <__assert_fail@plt+0xbe34>
   1cdf0:	b	1cf38 <__assert_fail@plt+0xbe48>
   1cdf4:	b	1cdfc <__assert_fail@plt+0xbd0c>
   1cdf8:	b	1ce00 <__assert_fail@plt+0xbd10>
   1cdfc:	b	1ce50 <__assert_fail@plt+0xbd60>
   1ce00:	ldr	r0, [fp, #-16]
   1ce04:	cmn	r0, #1
   1ce08:	bne	1ce50 <__assert_fail@plt+0xbd60>
   1ce0c:	b	1ce28 <__assert_fail@plt+0xbd38>
   1ce10:	ldr	r0, [fp, #-12]
   1ce14:	add	r0, r0, #0
   1ce18:	movw	r1, #0
   1ce1c:	cmp	r1, r0
   1ce20:	bcc	1cf24 <__assert_fail@plt+0xbe34>
   1ce24:	b	1cf38 <__assert_fail@plt+0xbe48>
   1ce28:	ldr	r0, [fp, #-12]
   1ce2c:	movw	r1, #0
   1ce30:	cmp	r1, r0
   1ce34:	bcs	1cf38 <__assert_fail@plt+0xbe48>
   1ce38:	ldr	r0, [fp, #-12]
   1ce3c:	sub	r0, r0, #1
   1ce40:	mvn	r1, #0
   1ce44:	cmp	r1, r0
   1ce48:	bcc	1cf24 <__assert_fail@plt+0xbe34>
   1ce4c:	b	1cf38 <__assert_fail@plt+0xbe48>
   1ce50:	ldr	r0, [fp, #-16]
   1ce54:	movw	r1, #0
   1ce58:	udiv	r0, r1, r0
   1ce5c:	ldr	r1, [fp, #-12]
   1ce60:	cmp	r0, r1
   1ce64:	bcc	1cf24 <__assert_fail@plt+0xbe34>
   1ce68:	b	1cf38 <__assert_fail@plt+0xbe48>
   1ce6c:	ldr	r0, [fp, #-16]
   1ce70:	cmp	r0, #0
   1ce74:	bne	1ce7c <__assert_fail@plt+0xbd8c>
   1ce78:	b	1cf38 <__assert_fail@plt+0xbe48>
   1ce7c:	ldr	r0, [fp, #-12]
   1ce80:	cmp	r0, #0
   1ce84:	bcs	1cef0 <__assert_fail@plt+0xbe00>
   1ce88:	b	1ce90 <__assert_fail@plt+0xbda0>
   1ce8c:	b	1ce94 <__assert_fail@plt+0xbda4>
   1ce90:	b	1ced4 <__assert_fail@plt+0xbde4>
   1ce94:	ldr	r0, [fp, #-12]
   1ce98:	cmn	r0, #1
   1ce9c:	bne	1ced4 <__assert_fail@plt+0xbde4>
   1cea0:	b	1cebc <__assert_fail@plt+0xbdcc>
   1cea4:	ldr	r0, [fp, #-16]
   1cea8:	add	r0, r0, #0
   1ceac:	movw	r1, #0
   1ceb0:	cmp	r1, r0
   1ceb4:	bcc	1cf24 <__assert_fail@plt+0xbe34>
   1ceb8:	b	1cf38 <__assert_fail@plt+0xbe48>
   1cebc:	ldr	r0, [fp, #-16]
   1cec0:	sub	r0, r0, #1
   1cec4:	mvn	r1, #0
   1cec8:	cmp	r1, r0
   1cecc:	bcc	1cf24 <__assert_fail@plt+0xbe34>
   1ced0:	b	1cf38 <__assert_fail@plt+0xbe48>
   1ced4:	ldr	r0, [fp, #-12]
   1ced8:	movw	r1, #0
   1cedc:	udiv	r0, r1, r0
   1cee0:	ldr	r1, [fp, #-16]
   1cee4:	cmp	r0, r1
   1cee8:	bcc	1cf24 <__assert_fail@plt+0xbe34>
   1ceec:	b	1cf38 <__assert_fail@plt+0xbe48>
   1cef0:	ldr	r2, [fp, #-16]
   1cef4:	mvn	r0, #0
   1cef8:	mov	r3, #0
   1cefc:	str	r0, [sp, #12]
   1cf00:	ldr	r1, [sp, #12]
   1cf04:	bl	1d258 <__assert_fail@plt+0xc168>
   1cf08:	ldr	r2, [fp, #-12]
   1cf0c:	subs	r0, r0, r2
   1cf10:	sbcs	r1, r1, #0
   1cf14:	str	r0, [sp, #8]
   1cf18:	str	r1, [sp, #4]
   1cf1c:	bcs	1cf38 <__assert_fail@plt+0xbe48>
   1cf20:	b	1cf24 <__assert_fail@plt+0xbe34>
   1cf24:	ldr	r0, [fp, #-12]
   1cf28:	ldr	r1, [fp, #-16]
   1cf2c:	mul	r0, r0, r1
   1cf30:	str	r0, [fp, #-20]	; 0xffffffec
   1cf34:	b	1cf4c <__assert_fail@plt+0xbe5c>
   1cf38:	ldr	r0, [fp, #-12]
   1cf3c:	ldr	r1, [fp, #-16]
   1cf40:	mul	r0, r0, r1
   1cf44:	str	r0, [fp, #-20]	; 0xffffffec
   1cf48:	b	1cf64 <__assert_fail@plt+0xbe74>
   1cf4c:	bl	11000 <__errno_location@plt>
   1cf50:	movw	lr, #12
   1cf54:	str	lr, [r0]
   1cf58:	movw	r0, #0
   1cf5c:	str	r0, [fp, #-4]
   1cf60:	b	1cf74 <__assert_fail@plt+0xbe84>
   1cf64:	ldr	r0, [fp, #-8]
   1cf68:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cf6c:	bl	1aec0 <__assert_fail@plt+0x9dd0>
   1cf70:	str	r0, [fp, #-4]
   1cf74:	ldr	r0, [fp, #-4]
   1cf78:	mov	sp, fp
   1cf7c:	pop	{fp, pc}
   1cf80:	svcvc	0x00ffffff
   1cf84:	andhi	r0, r0, r0
   1cf88:			; <UNDEFINED> instruction: 0xffff8000
   1cf8c:	push	{r4, r5, fp, lr}
   1cf90:	add	fp, sp, #8
   1cf94:	sub	sp, sp, #272	; 0x110
   1cf98:	add	r1, sp, #7
   1cf9c:	str	r0, [fp, #-16]
   1cfa0:	ldr	r0, [fp, #-16]
   1cfa4:	movw	r2, #257	; 0x101
   1cfa8:	bl	1d028 <__assert_fail@plt+0xbf38>
   1cfac:	cmp	r0, #0
   1cfb0:	beq	1cfc4 <__assert_fail@plt+0xbed4>
   1cfb4:	movw	r0, #0
   1cfb8:	and	r0, r0, #1
   1cfbc:	strb	r0, [fp, #-9]
   1cfc0:	b	1d018 <__assert_fail@plt+0xbf28>
   1cfc4:	add	r0, sp, #7
   1cfc8:	movw	r1, #57880	; 0xe218
   1cfcc:	movt	r1, #1
   1cfd0:	bl	10e8c <strcmp@plt>
   1cfd4:	cmp	r0, #0
   1cfd8:	movw	r0, #1
   1cfdc:	str	r0, [sp]
   1cfe0:	beq	1d004 <__assert_fail@plt+0xbf14>
   1cfe4:	add	r0, sp, #7
   1cfe8:	movw	r1, #57882	; 0xe21a
   1cfec:	movt	r1, #1
   1cff0:	bl	10e8c <strcmp@plt>
   1cff4:	cmp	r0, #0
   1cff8:	movw	r0, #0
   1cffc:	moveq	r0, #1
   1d000:	str	r0, [sp]
   1d004:	ldr	r0, [sp]
   1d008:	mvn	r1, #0
   1d00c:	eor	r0, r0, r1
   1d010:	and	r0, r0, #1
   1d014:	strb	r0, [fp, #-9]
   1d018:	ldrb	r0, [fp, #-9]
   1d01c:	and	r0, r0, #1
   1d020:	sub	sp, fp, #8
   1d024:	pop	{r4, r5, fp, pc}
   1d028:	push	{fp, lr}
   1d02c:	mov	fp, sp
   1d030:	sub	sp, sp, #16
   1d034:	str	r0, [fp, #-4]
   1d038:	str	r1, [sp, #8]
   1d03c:	str	r2, [sp, #4]
   1d040:	ldr	r0, [fp, #-4]
   1d044:	ldr	r1, [sp, #8]
   1d048:	ldr	r2, [sp, #4]
   1d04c:	bl	1d058 <__assert_fail@plt+0xbf68>
   1d050:	mov	sp, fp
   1d054:	pop	{fp, pc}
   1d058:	push	{fp, lr}
   1d05c:	mov	fp, sp
   1d060:	sub	sp, sp, #24
   1d064:	str	r0, [fp, #-8]
   1d068:	str	r1, [sp, #12]
   1d06c:	str	r2, [sp, #8]
   1d070:	ldr	r0, [fp, #-8]
   1d074:	bl	1d158 <__assert_fail@plt+0xc068>
   1d078:	str	r0, [sp, #4]
   1d07c:	ldr	r0, [sp, #4]
   1d080:	movw	r1, #0
   1d084:	cmp	r0, r1
   1d088:	bne	1d0b0 <__assert_fail@plt+0xbfc0>
   1d08c:	ldr	r0, [sp, #8]
   1d090:	cmp	r0, #0
   1d094:	bls	1d0a4 <__assert_fail@plt+0xbfb4>
   1d098:	ldr	r0, [sp, #12]
   1d09c:	movw	r1, #0
   1d0a0:	strb	r1, [r0]
   1d0a4:	movw	r0, #22
   1d0a8:	str	r0, [fp, #-4]
   1d0ac:	b	1d12c <__assert_fail@plt+0xc03c>
   1d0b0:	ldr	r0, [sp, #4]
   1d0b4:	bl	10fdc <strlen@plt>
   1d0b8:	str	r0, [sp]
   1d0bc:	ldr	r0, [sp]
   1d0c0:	ldr	lr, [sp, #8]
   1d0c4:	cmp	r0, lr
   1d0c8:	bcs	1d0ec <__assert_fail@plt+0xbffc>
   1d0cc:	ldr	r0, [sp, #12]
   1d0d0:	ldr	r1, [sp, #4]
   1d0d4:	ldr	r2, [sp]
   1d0d8:	add	r2, r2, #1
   1d0dc:	bl	10ec8 <memcpy@plt>
   1d0e0:	movw	r0, #0
   1d0e4:	str	r0, [fp, #-4]
   1d0e8:	b	1d12c <__assert_fail@plt+0xc03c>
   1d0ec:	ldr	r0, [sp, #8]
   1d0f0:	cmp	r0, #0
   1d0f4:	bls	1d124 <__assert_fail@plt+0xc034>
   1d0f8:	ldr	r0, [sp, #12]
   1d0fc:	ldr	r1, [sp, #4]
   1d100:	ldr	r2, [sp, #8]
   1d104:	sub	r2, r2, #1
   1d108:	bl	10ec8 <memcpy@plt>
   1d10c:	ldr	r0, [sp, #12]
   1d110:	ldr	r1, [sp, #8]
   1d114:	sub	r1, r1, #1
   1d118:	add	r0, r0, r1
   1d11c:	movw	r1, #0
   1d120:	strb	r1, [r0]
   1d124:	movw	r0, #34	; 0x22
   1d128:	str	r0, [fp, #-4]
   1d12c:	ldr	r0, [fp, #-4]
   1d130:	mov	sp, fp
   1d134:	pop	{fp, pc}
   1d138:	push	{fp, lr}
   1d13c:	mov	fp, sp
   1d140:	sub	sp, sp, #8
   1d144:	str	r0, [sp, #4]
   1d148:	ldr	r0, [sp, #4]
   1d14c:	bl	1d158 <__assert_fail@plt+0xc068>
   1d150:	mov	sp, fp
   1d154:	pop	{fp, pc}
   1d158:	push	{fp, lr}
   1d15c:	mov	fp, sp
   1d160:	sub	sp, sp, #8
   1d164:	str	r0, [sp, #4]
   1d168:	ldr	r0, [sp, #4]
   1d16c:	movw	r1, #0
   1d170:	bl	11078 <setlocale@plt>
   1d174:	str	r0, [sp]
   1d178:	ldr	r0, [sp]
   1d17c:	mov	sp, fp
   1d180:	pop	{fp, pc}
   1d184:	cmp	r3, #0
   1d188:	cmpeq	r2, #0
   1d18c:	bne	1d1b0 <__assert_fail@plt+0xc0c0>
   1d190:	cmp	r1, #0
   1d194:	movlt	r1, #-2147483648	; 0x80000000
   1d198:	movlt	r0, #0
   1d19c:	blt	1d1ac <__assert_fail@plt+0xc0bc>
   1d1a0:	cmpeq	r0, #0
   1d1a4:	mvnne	r1, #-2147483648	; 0x80000000
   1d1a8:	mvnne	r0, #0
   1d1ac:	b	1d294 <__assert_fail@plt+0xc1a4>
   1d1b0:	sub	sp, sp, #8
   1d1b4:	push	{sp, lr}
   1d1b8:	cmp	r1, #0
   1d1bc:	blt	1d1dc <__assert_fail@plt+0xc0ec>
   1d1c0:	cmp	r3, #0
   1d1c4:	blt	1d210 <__assert_fail@plt+0xc120>
   1d1c8:	bl	1d2a4 <__assert_fail@plt+0xc1b4>
   1d1cc:	ldr	lr, [sp, #4]
   1d1d0:	add	sp, sp, #8
   1d1d4:	pop	{r2, r3}
   1d1d8:	bx	lr
   1d1dc:	rsbs	r0, r0, #0
   1d1e0:	sbc	r1, r1, r1, lsl #1
   1d1e4:	cmp	r3, #0
   1d1e8:	blt	1d234 <__assert_fail@plt+0xc144>
   1d1ec:	bl	1d2a4 <__assert_fail@plt+0xc1b4>
   1d1f0:	ldr	lr, [sp, #4]
   1d1f4:	add	sp, sp, #8
   1d1f8:	pop	{r2, r3}
   1d1fc:	rsbs	r0, r0, #0
   1d200:	sbc	r1, r1, r1, lsl #1
   1d204:	rsbs	r2, r2, #0
   1d208:	sbc	r3, r3, r3, lsl #1
   1d20c:	bx	lr
   1d210:	rsbs	r2, r2, #0
   1d214:	sbc	r3, r3, r3, lsl #1
   1d218:	bl	1d2a4 <__assert_fail@plt+0xc1b4>
   1d21c:	ldr	lr, [sp, #4]
   1d220:	add	sp, sp, #8
   1d224:	pop	{r2, r3}
   1d228:	rsbs	r0, r0, #0
   1d22c:	sbc	r1, r1, r1, lsl #1
   1d230:	bx	lr
   1d234:	rsbs	r2, r2, #0
   1d238:	sbc	r3, r3, r3, lsl #1
   1d23c:	bl	1d2a4 <__assert_fail@plt+0xc1b4>
   1d240:	ldr	lr, [sp, #4]
   1d244:	add	sp, sp, #8
   1d248:	pop	{r2, r3}
   1d24c:	rsbs	r2, r2, #0
   1d250:	sbc	r3, r3, r3, lsl #1
   1d254:	bx	lr
   1d258:	cmp	r3, #0
   1d25c:	cmpeq	r2, #0
   1d260:	bne	1d278 <__assert_fail@plt+0xc188>
   1d264:	cmp	r1, #0
   1d268:	cmpeq	r0, #0
   1d26c:	mvnne	r1, #0
   1d270:	mvnne	r0, #0
   1d274:	b	1d294 <__assert_fail@plt+0xc1a4>
   1d278:	sub	sp, sp, #8
   1d27c:	push	{sp, lr}
   1d280:	bl	1d2a4 <__assert_fail@plt+0xc1b4>
   1d284:	ldr	lr, [sp, #4]
   1d288:	add	sp, sp, #8
   1d28c:	pop	{r2, r3}
   1d290:	bx	lr
   1d294:	push	{r1, lr}
   1d298:	mov	r0, #8
   1d29c:	bl	10e80 <raise@plt>
   1d2a0:	pop	{r1, pc}
   1d2a4:	cmp	r1, r3
   1d2a8:	cmpeq	r0, r2
   1d2ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2b0:	mov	r4, r0
   1d2b4:	movcc	r0, #0
   1d2b8:	mov	r5, r1
   1d2bc:	ldr	lr, [sp, #36]	; 0x24
   1d2c0:	movcc	r1, r0
   1d2c4:	bcc	1d3c0 <__assert_fail@plt+0xc2d0>
   1d2c8:	cmp	r3, #0
   1d2cc:	clzeq	ip, r2
   1d2d0:	clzne	ip, r3
   1d2d4:	addeq	ip, ip, #32
   1d2d8:	cmp	r5, #0
   1d2dc:	clzeq	r1, r4
   1d2e0:	addeq	r1, r1, #32
   1d2e4:	clzne	r1, r5
   1d2e8:	sub	ip, ip, r1
   1d2ec:	sub	sl, ip, #32
   1d2f0:	lsl	r9, r3, ip
   1d2f4:	rsb	fp, ip, #32
   1d2f8:	orr	r9, r9, r2, lsl sl
   1d2fc:	orr	r9, r9, r2, lsr fp
   1d300:	lsl	r8, r2, ip
   1d304:	cmp	r5, r9
   1d308:	cmpeq	r4, r8
   1d30c:	movcc	r0, #0
   1d310:	movcc	r1, r0
   1d314:	bcc	1d330 <__assert_fail@plt+0xc240>
   1d318:	mov	r0, #1
   1d31c:	subs	r4, r4, r8
   1d320:	lsl	r1, r0, sl
   1d324:	orr	r1, r1, r0, lsr fp
   1d328:	lsl	r0, r0, ip
   1d32c:	sbc	r5, r5, r9
   1d330:	cmp	ip, #0
   1d334:	beq	1d3c0 <__assert_fail@plt+0xc2d0>
   1d338:	lsr	r6, r8, #1
   1d33c:	orr	r6, r6, r9, lsl #31
   1d340:	lsr	r7, r9, #1
   1d344:	mov	r2, ip
   1d348:	b	1d36c <__assert_fail@plt+0xc27c>
   1d34c:	subs	r3, r4, r6
   1d350:	sbc	r8, r5, r7
   1d354:	adds	r3, r3, r3
   1d358:	adc	r8, r8, r8
   1d35c:	adds	r4, r3, #1
   1d360:	adc	r5, r8, #0
   1d364:	subs	r2, r2, #1
   1d368:	beq	1d388 <__assert_fail@plt+0xc298>
   1d36c:	cmp	r5, r7
   1d370:	cmpeq	r4, r6
   1d374:	bcs	1d34c <__assert_fail@plt+0xc25c>
   1d378:	adds	r4, r4, r4
   1d37c:	adc	r5, r5, r5
   1d380:	subs	r2, r2, #1
   1d384:	bne	1d36c <__assert_fail@plt+0xc27c>
   1d388:	lsr	r3, r4, ip
   1d38c:	orr	r3, r3, r5, lsl fp
   1d390:	lsr	r2, r5, ip
   1d394:	orr	r3, r3, r5, lsr sl
   1d398:	adds	r0, r0, r4
   1d39c:	mov	r4, r3
   1d3a0:	lsl	r3, r2, ip
   1d3a4:	orr	r3, r3, r4, lsl sl
   1d3a8:	lsl	ip, r4, ip
   1d3ac:	orr	r3, r3, r4, lsr fp
   1d3b0:	adc	r1, r1, r5
   1d3b4:	subs	r0, r0, ip
   1d3b8:	mov	r5, r2
   1d3bc:	sbc	r1, r1, r3
   1d3c0:	cmp	lr, #0
   1d3c4:	strdne	r4, [lr]
   1d3c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d3cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d3d0:	mov	r7, r0
   1d3d4:	ldr	r6, [pc, #72]	; 1d424 <__assert_fail@plt+0xc334>
   1d3d8:	ldr	r5, [pc, #72]	; 1d428 <__assert_fail@plt+0xc338>
   1d3dc:	add	r6, pc, r6
   1d3e0:	add	r5, pc, r5
   1d3e4:	sub	r6, r6, r5
   1d3e8:	mov	r8, r1
   1d3ec:	mov	r9, r2
   1d3f0:	bl	10e48 <calloc@plt-0x20>
   1d3f4:	asrs	r6, r6, #2
   1d3f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d3fc:	mov	r4, #0
   1d400:	add	r4, r4, #1
   1d404:	ldr	r3, [r5], #4
   1d408:	mov	r2, r9
   1d40c:	mov	r1, r8
   1d410:	mov	r0, r7
   1d414:	blx	r3
   1d418:	cmp	r6, r4
   1d41c:	bne	1d400 <__assert_fail@plt+0xc310>
   1d420:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d424:	andeq	r1, r1, r8, lsr #22
   1d428:	andeq	r1, r1, r0, lsr #22
   1d42c:	bx	lr
   1d430:	ldr	r3, [pc, #12]	; 1d444 <__assert_fail@plt+0xc354>
   1d434:	mov	r1, #0
   1d438:	add	r3, pc, r3
   1d43c:	ldr	r2, [r3]
   1d440:	b	1100c <__cxa_atexit@plt>
   1d444:			; <UNDEFINED> instruction: 0x00011cb0
   1d448:	mov	r2, r1
   1d44c:	mov	r1, r0
   1d450:	mov	r0, #3
   1d454:	b	110c0 <__xstat64@plt>

Disassembly of section .fini:

0001d458 <.fini>:
   1d458:	push	{r3, lr}
   1d45c:	pop	{r3, pc}
