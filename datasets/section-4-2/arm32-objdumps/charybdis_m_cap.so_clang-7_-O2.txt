
../repos/charybdis/modules/.libs/m_cap.so:     file format elf32-littlearm


Disassembly of section .init:

000006f4 <_init>:
 6f4:	push	{r3, lr}
 6f8:	bl	7b0 <call_weak_fn>
 6fc:	pop	{r3, pc}

Disassembly of section .plt:

00000700 <.plt>:
 700:	push	{lr}		; (str lr, [sp, #-4]!)
 704:	ldr	lr, [pc, #4]	; 710 <.plt+0x10>
 708:	add	lr, pc, lr
 70c:	ldr	pc, [lr, #8]!
 710:	.word	0x000118f0

00000714 <__cxa_finalize@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2288]!	; 0x8f0

00000720 <strtol@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2280]!	; 0x8e8

0000072c <sendto_one@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2272]!	; 0x8e0

00000738 <rb_snprintf_try_append@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2264]!	; 0x8d8

00000744 <rb_dictionary_foreach_start@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2256]!	; 0x8d0

00000750 <__gmon_start__@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2248]!	; 0x8c8

0000075c <strchr@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2240]!	; 0x8c0

00000768 <capability_find@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2232]!	; 0x8b8

00000774 <rb_dictionary_foreach_cur@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2224]!	; 0x8b0

00000780 <rb_strlcpy@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2216]!	; 0x8a8

0000078c <register_local_user@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2208]!	; 0x8a0

00000798 <rb_dictionary_foreach_next@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2200]!	; 0x898

000007a4 <irccmp@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2192]!	; 0x890

Disassembly of section .text:

000007b0 <call_weak_fn>:
     7b0:	ldr	r3, [pc, #20]	; 7cc <call_weak_fn+0x1c>
     7b4:	ldr	r2, [pc, #20]	; 7d0 <call_weak_fn+0x20>
     7b8:	add	r3, pc, r3
     7bc:	ldr	r2, [r3, r2]
     7c0:	cmp	r2, #0
     7c4:	bxeq	lr
     7c8:	b	750 <__gmon_start__@plt>
     7cc:	.word	0x00011840
     7d0:	.word	0x00000048

000007d4 <deregister_tm_clones>:
     7d4:	ldr	r0, [pc, #44]	; 808 <deregister_tm_clones+0x34>
     7d8:	ldr	r3, [pc, #44]	; 80c <deregister_tm_clones+0x38>
     7dc:	add	r0, pc, r0
     7e0:	add	r3, pc, r3
     7e4:	cmp	r3, r0
     7e8:	ldr	r3, [pc, #32]	; 810 <deregister_tm_clones+0x3c>
     7ec:	add	r3, pc, r3
     7f0:	bxeq	lr
     7f4:	ldr	r2, [pc, #24]	; 814 <deregister_tm_clones+0x40>
     7f8:	ldr	r3, [r3, r2]
     7fc:	cmp	r3, #0
     800:	bxeq	lr
     804:	bx	r3
     808:	.word	0x000118f4
     80c:	.word	0x000118f0
     810:	.word	0x0001180c
     814:	.word	0x00000044

00000818 <register_tm_clones>:
     818:	ldr	r0, [pc, #56]	; 858 <register_tm_clones+0x40>
     81c:	ldr	r3, [pc, #56]	; 85c <register_tm_clones+0x44>
     820:	add	r0, pc, r0
     824:	add	r3, pc, r3
     828:	sub	r1, r3, r0
     82c:	ldr	r3, [pc, #44]	; 860 <register_tm_clones+0x48>
     830:	asr	r1, r1, #2
     834:	add	r3, pc, r3
     838:	add	r1, r1, r1, lsr #31
     83c:	asrs	r1, r1, #1
     840:	bxeq	lr
     844:	ldr	r2, [pc, #24]	; 864 <register_tm_clones+0x4c>
     848:	ldr	r3, [r3, r2]
     84c:	cmp	r3, #0
     850:	bxeq	lr
     854:	bx	r3
     858:	.word	0x000118b0
     85c:	.word	0x000118ac
     860:	.word	0x000117c4
     864:	.word	0x00000058

00000868 <__do_global_dtors_aux>:
     868:	ldr	r3, [pc, #76]	; 8bc <__do_global_dtors_aux+0x54>
     86c:	ldr	r2, [pc, #76]	; 8c0 <__do_global_dtors_aux+0x58>
     870:	add	r3, pc, r3
     874:	add	r2, pc, r2
     878:	ldrb	r3, [r3]
     87c:	cmp	r3, #0
     880:	bxne	lr
     884:	ldr	r3, [pc, #56]	; 8c4 <__do_global_dtors_aux+0x5c>
     888:	push	{r4, lr}
     88c:	ldr	r3, [r2, r3]
     890:	cmp	r3, #0
     894:	beq	8a4 <__do_global_dtors_aux+0x3c>
     898:	ldr	r3, [pc, #40]	; 8c8 <__do_global_dtors_aux+0x60>
     89c:	ldr	r0, [pc, r3]
     8a0:	bl	714 <__cxa_finalize@plt>
     8a4:	bl	7d4 <deregister_tm_clones>
     8a8:	ldr	r3, [pc, #28]	; 8cc <__do_global_dtors_aux+0x64>
     8ac:	mov	r2, #1
     8b0:	add	r3, pc, r3
     8b4:	strb	r2, [r3]
     8b8:	pop	{r4, pc}
     8bc:	.word	0x00011860
     8c0:	.word	0x00011784
     8c4:	.word	0x00000040
     8c8:	.word	0x000117bc
     8cc:	.word	0x00011820

000008d0 <frame_dummy>:
     8d0:	b	818 <register_tm_clones>

000008d4 <m_cap>:
     8d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     8d8:	add	fp, sp, #28
     8dc:	sub	sp, sp, #12
     8e0:	str	r2, [sp, #8]
     8e4:	mov	r7, #5
     8e8:	mov	r6, #0
     8ec:	ldr	r9, [fp, #8]
     8f0:	ldr	r5, [r9, #4]
     8f4:	ldr	r8, [pc, #160]	; 99c <m_cap+0xc8>
     8f8:	add	r8, pc, r8
     8fc:	add	r0, r7, r6
     900:	mov	sl, r8
     904:	lsr	r4, r0, #1
     908:	mov	r0, r5
     90c:	ldr	r1, [sl, r4, lsl #3]!
     910:	bl	7a4 <irccmp@plt>
     914:	cmp	r0, #0
     918:	blt	928 <m_cap+0x54>
     91c:	beq	978 <m_cap+0xa4>
     920:	add	r6, r4, #1
     924:	b	92c <m_cap+0x58>
     928:	mov	r7, r4
     92c:	cmp	r6, r7
     930:	bcc	8fc <m_cap+0x28>
     934:	ldr	r0, [sp, #8]
     938:	ldr	r2, [r9, #4]
     93c:	mov	r7, r0
     940:	ldrb	r1, [r7, #88]!	; 0x58
     944:	str	r2, [sp]
     948:	ldr	r3, [pc, #80]	; 9a0 <m_cap+0xcc>
     94c:	cmp	r1, #0
     950:	ldr	r1, [pc, #76]	; 9a4 <m_cap+0xd0>
     954:	add	r3, pc, r3
     958:	movne	r3, r7
     95c:	ldr	r1, [pc, r1]
     960:	add	r2, r1, #88	; 0x58
     964:	ldr	r1, [pc, #60]	; 9a8 <m_cap+0xd4>
     968:	add	r1, pc, r1
     96c:	bl	72c <sendto_one@plt>
     970:	sub	sp, fp, #28
     974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     978:	cmp	sl, #0
     97c:	beq	934 <m_cap+0x60>
     980:	add	r0, r8, r4, lsl #3
     984:	ldr	r1, [r9, #8]
     988:	ldr	r2, [r0, #4]
     98c:	ldr	r0, [sp, #8]
     990:	sub	sp, fp, #28
     994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     998:	bx	r2
     99c:	.word	0x000115d0
     9a0:	.word	0x00000e76
     9a4:	.word	0x000116f8
     9a8:	.word	0x00000e3c

000009ac <cap_ack>:
     9ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     9b0:	add	fp, sp, #28
     9b4:	sub	sp, sp, #12
     9b8:	mov	r4, r0
     9bc:	mov	r0, #0
     9c0:	cmp	r1, #0
     9c4:	str	r0, [sp, #8]
     9c8:	ldrbne	r0, [r1]
     9cc:	cmpne	r0, #0
     9d0:	bne	9dc <cap_ack+0x30>
     9d4:	sub	sp, fp, #28
     9d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     9dc:	add	r3, sp, #4
     9e0:	mov	r0, r1
     9e4:	add	r2, sp, #8
     9e8:	mov	r1, r3
     9ec:	bl	1248 <clicap_find>
     9f0:	ldr	r2, [r4, #432]	; 0x1b0
     9f4:	cmp	r0, #0
     9f8:	ldr	r1, [r2, #296]!	; 0x128
     9fc:	beq	b6c <cap_ack+0x1c0>
     a00:	ldr	r9, [pc, #384]	; b88 <cap_ack+0x1dc>
     a04:	ldr	sl, [pc, #384]	; b8c <cap_ack+0x1e0>
     a08:	mov	r3, #1
     a0c:	mov	r7, #0
     a10:	mov	r8, #0
     a14:	ldr	sl, [pc, sl]
     a18:	add	r9, pc, r9
     a1c:	b	a34 <cap_ack+0x88>
     a20:	cmp	r6, #0
     a24:	streq	r3, [sp, #8]
     a28:	strne	r6, [r9]
     a2c:	ldr	r1, [r4, #432]	; 0x1b0
     a30:	ldr	r1, [r1, #296]	; 0x128
     a34:	ldr	r2, [r0, #4]
     a38:	tst	r1, r3, lsl r2
     a3c:	beq	a6c <cap_ack+0xc0>
     a40:	lsl	r1, r3, r2
     a44:	ldr	r2, [sp, #4]
     a48:	cmp	r2, #0
     a4c:	beq	a68 <cap_ack+0xbc>
     a50:	ldr	r0, [r0, #12]
     a54:	cmp	r0, #0
     a58:	ldrbne	r0, [r0, #8]
     a5c:	tstne	r0, #1
     a60:	orreq	r7, r1, r7
     a64:	b	a6c <cap_ack+0xc0>
     a68:	orr	r8, r1, r8
     a6c:	mov	r0, #0
     a70:	str	r0, [sp, #4]
     a74:	ldr	r0, [sp, #8]
     a78:	cmp	r0, #0
     a7c:	bne	b60 <cap_ack+0x1b4>
     a80:	ldr	r5, [pc, #264]	; b90 <cap_ack+0x1e4>
     a84:	ldr	r5, [pc, r5]
     a88:	ldrb	r0, [r5]
     a8c:	cmp	r0, #0
     a90:	beq	abc <cap_ack+0x110>
     a94:	add	r1, r5, #1
     a98:	uxtb	r2, r0
     a9c:	ldrb	r2, [sl, r2, lsl #2]
     aa0:	tst	r2, #32
     aa4:	beq	acc <cap_ack+0x120>
     aa8:	str	r1, [r9]
     aac:	ldrb	r0, [r1], #1
     ab0:	cmp	r0, #0
     ab4:	bne	a98 <cap_ack+0xec>
     ab8:	b	b58 <cap_ack+0x1ac>
     abc:	mov	r0, #0
     ac0:	cmp	r5, #0
     ac4:	bne	ad8 <cap_ack+0x12c>
     ac8:	b	b58 <cap_ack+0x1ac>
     acc:	sub	r5, r1, #1
     ad0:	cmp	r5, #0
     ad4:	beq	b58 <cap_ack+0x1ac>
     ad8:	uxtb	r0, r0
     adc:	cmp	r0, #45	; 0x2d
     ae0:	beq	af0 <cap_ack+0x144>
     ae4:	cmp	r0, #0
     ae8:	bne	b0c <cap_ack+0x160>
     aec:	b	b58 <cap_ack+0x1ac>
     af0:	add	r0, r5, #1
     af4:	str	r3, [sp, #4]
     af8:	str	r0, [r9]
     afc:	ldrb	r1, [r5, #1]
     b00:	mov	r5, r0
     b04:	cmp	r1, #0
     b08:	beq	b60 <cap_ack+0x1b4>
     b0c:	mov	r0, r5
     b10:	mov	r1, #32
     b14:	bl	75c <strchr@plt>
     b18:	cmp	r0, #0
     b1c:	beq	b30 <cap_ack+0x184>
     b20:	mov	r6, r0
     b24:	mov	r0, #0
     b28:	strb	r0, [r6], #1
     b2c:	b	b34 <cap_ack+0x188>
     b30:	mov	r6, #0
     b34:	ldr	r0, [pc, #88]	; b94 <cap_ack+0x1e8>
     b38:	mov	r1, r5
     b3c:	ldr	r0, [pc, r0]
     b40:	ldr	r0, [r0]
     b44:	bl	768 <capability_find@plt>
     b48:	cmp	r0, #0
     b4c:	mov	r3, #1
     b50:	bne	a20 <cap_ack+0x74>
     b54:	b	b60 <cap_ack+0x1b4>
     b58:	mov	r0, #1
     b5c:	str	r0, [sp, #8]
     b60:	ldr	r2, [r4, #432]	; 0x1b0
     b64:	ldr	r1, [r2, #296]!	; 0x128
     b68:	b	b74 <cap_ack+0x1c8>
     b6c:	mov	r8, #0
     b70:	mov	r7, #0
     b74:	orr	r0, r1, r8
     b78:	bic	r0, r0, r7
     b7c:	str	r0, [r2]
     b80:	sub	sp, fp, #28
     b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b88:	.word	0x000118bc
     b8c:	.word	0x00011634
     b90:	.word	0x00011850
     b94:	.word	0x00011508

00000b98 <cap_end>:
     b98:	ldrh	r1, [r0, #80]	; 0x50
     b9c:	cmp	r1, #9
     ba0:	bcc	bac <cap_end+0x14>
     ba4:	cmp	r1, #16
     ba8:	bxne	lr
     bac:	ldr	r1, [r0, #64]	; 0x40
     bb0:	bic	r2, r1, #16
     bb4:	tst	r1, #8
     bb8:	str	r2, [r0, #64]	; 0x40
     bbc:	ldrbne	r1, [r0, #88]	; 0x58
     bc0:	cmpne	r1, #0
     bc4:	bne	bcc <cap_end+0x34>
     bc8:	bx	lr
     bcc:	mov	r1, r0
     bd0:	b	78c <register_local_user@plt>

00000bd4 <cap_list>:
     bd4:	ldr	r1, [r0, #432]	; 0x1b0
     bd8:	ldr	r2, [r1, #296]	; 0x128
     bdc:	ldr	r1, [pc, #12]	; bf0 <cap_list+0x1c>
     be0:	cmp	r2, #0
     be4:	add	r1, pc, r1
     be8:	mvneq	r2, #0
     bec:	b	13e4 <clicap_generate>
     bf0:	.word	0x00000bec

00000bf4 <cap_ls>:
     bf4:	push	{r4, sl, fp, lr}
     bf8:	add	fp, sp, #8
     bfc:	mov	r4, r0
     c00:	ldrh	r0, [r0, #80]	; 0x50
     c04:	cmp	r0, #9
     c08:	bcc	c14 <cap_ls+0x20>
     c0c:	cmp	r0, #16
     c10:	bne	c20 <cap_ls+0x2c>
     c14:	ldr	r0, [r4, #64]	; 0x40
     c18:	orr	r0, r0, #16
     c1c:	str	r0, [r4, #64]	; 0x40
     c20:	cmp	r1, #0
     c24:	ldrbne	r0, [r1]
     c28:	cmpne	r0, #0
     c2c:	bne	c48 <cap_ls+0x54>
     c30:	ldr	r1, [pc, #92]	; c94 <cap_ls+0xa0>
     c34:	mov	r0, r4
     c38:	mov	r2, #0
     c3c:	add	r1, pc, r1
     c40:	pop	{r4, sl, fp, lr}
     c44:	b	13e4 <clicap_generate>
     c48:	mov	r0, r1
     c4c:	mov	r1, #0
     c50:	mov	r2, #10
     c54:	bl	720 <strtol@plt>
     c58:	movw	r1, #302	; 0x12e
     c5c:	cmp	r0, r1
     c60:	blt	c30 <cap_ls+0x3c>
     c64:	ldr	r0, [r4, #64]	; 0x40
     c68:	ldr	r1, [r4, #432]	; 0x1b0
     c6c:	orr	r0, r0, #524288	; 0x80000
     c70:	str	r0, [r4, #64]	; 0x40
     c74:	ldr	r0, [pc, #20]	; c90 <cap_ls+0x9c>
     c78:	ldr	r0, [pc, r0]
     c7c:	ldr	r2, [r1, #296]	; 0x128
     c80:	ldr	r0, [r0]
     c84:	orr	r0, r2, r0
     c88:	str	r0, [r1, #296]	; 0x128
     c8c:	b	c30 <cap_ls+0x3c>
     c90:	.word	0x000113d4
     c94:	.word	0x00000b99

00000c98 <cap_req>:
     c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c9c:	add	fp, sp, #28
     ca0:	sub	sp, sp, #52	; 0x34
     ca4:	mov	r9, r0
     ca8:	mov	r0, #0
     cac:	mov	r5, r1
     cb0:	str	r0, [fp, #-32]	; 0xffffffe0
     cb4:	ldrh	r0, [r9, #80]	; 0x50
     cb8:	cmp	r0, #9
     cbc:	bcc	cc8 <cap_req+0x30>
     cc0:	cmp	r0, #16
     cc4:	bne	cd4 <cap_req+0x3c>
     cc8:	ldr	r0, [r9, #64]	; 0x40
     ccc:	orr	r0, r0, #16
     cd0:	str	r0, [r9, #64]	; 0x40
     cd4:	cmp	r5, #0
     cd8:	ldrbne	r0, [r5]
     cdc:	cmpne	r0, #0
     ce0:	bne	cec <cap_req+0x54>
     ce4:	sub	sp, fp, #28
     ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     cec:	ldr	r0, [pc, #1236]	; 11c8 <cap_req+0x530>
     cf0:	mov	r7, #0
     cf4:	mov	r6, r9
     cf8:	add	r0, pc, r0
     cfc:	strb	r7, [r0]
     d00:	ldrb	r1, [r6, #88]!	; 0x58
     d04:	ldr	r2, [pc, #1216]	; 11cc <cap_req+0x534>
     d08:	cmp	r1, #0
     d0c:	add	r2, pc, r2
     d10:	mov	r1, r6
     d14:	moveq	r1, r2
     d18:	str	r1, [sp]
     d1c:	ldr	r1, [pc, #1196]	; 11d0 <cap_req+0x538>
     d20:	ldr	r1, [pc, r1]
     d24:	ldr	r2, [pc, #1192]	; 11d4 <cap_req+0x53c>
     d28:	add	r4, r1, #88	; 0x58
     d2c:	add	r2, pc, r2
     d30:	movw	r1, #511	; 0x1ff
     d34:	mov	r3, r4
     d38:	bl	738 <rb_snprintf_try_append@plt>
     d3c:	mov	r8, r0
     d40:	ldr	r0, [pc, #1168]	; 11d8 <cap_req+0x540>
     d44:	sub	r1, fp, #36	; 0x24
     d48:	sub	r2, fp, #32
     d4c:	add	r0, pc, r0
     d50:	strb	r7, [r0]
     d54:	strb	r7, [r0, #511]	; 0x1ff
     d58:	mov	r0, r5
     d5c:	bl	1248 <clicap_find>
     d60:	cmp	r0, #0
     d64:	str	r5, [sp, #28]
     d68:	str	r6, [sp, #24]
     d6c:	str	r4, [sp, #20]
     d70:	beq	1118 <cap_req+0x480>
     d74:	mov	sl, r0
     d78:	movw	r0, #507	; 0x1fb
     d7c:	ldr	r6, [fp, #-36]	; 0xffffffdc
     d80:	mov	r7, #1
     d84:	mov	r4, #0
     d88:	mov	r5, #0
     d8c:	sub	r0, r0, r8
     d90:	str	r0, [sp, #32]
     d94:	add	r0, r9, #64	; 0x40
     d98:	str	r0, [sp, #16]
     d9c:	mov	r0, #0
     da0:	ldr	r8, [pc, #1076]	; 11dc <cap_req+0x544>
     da4:	str	r0, [sp, #36]	; 0x24
     da8:	add	r8, pc, r8
     dac:	cmp	r6, #0
     db0:	beq	1008 <cap_req+0x370>
     db4:	ldr	r0, [sl, #12]
     db8:	cmp	r0, #0
     dbc:	ldrbne	r1, [r0, #8]
     dc0:	tstne	r1, #1
     dc4:	bne	1184 <cap_req+0x4ec>
     dc8:	ldr	r1, [sl, #4]
     dcc:	ldr	r6, [pc, #1036]	; 11e0 <cap_req+0x548>
     dd0:	orr	r4, r4, r7, lsl r1
     dd4:	add	r6, pc, r6
     dd8:	cmp	r0, #0
     ddc:	beq	df4 <cap_req+0x15c>
     de0:	ldrb	r0, [r0, #8]
     de4:	tst	r0, #2
     de8:	ldr	r0, [pc, #1012]	; 11e4 <cap_req+0x54c>
     dec:	add	r0, pc, r0
     df0:	movne	r6, r0
     df4:	ldr	r7, [pc, #1004]	; 11e8 <cap_req+0x550>
     df8:	ldr	r1, [sl]
     dfc:	rsb	r0, r5, r5, lsl #9
     e00:	str	r6, [sp]
     e04:	add	r7, pc, r7
     e08:	str	r1, [sp, #4]
     e0c:	ldrb	r0, [r7, r0]!
     e10:	ldr	r3, [pc, #980]	; 11ec <cap_req+0x554>
     e14:	ldr	r1, [sp, #32]
     e18:	ldr	r2, [pc, #976]	; 11f0 <cap_req+0x558>
     e1c:	cmp	r0, #0
     e20:	add	r3, pc, r3
     e24:	mov	r0, r7
     e28:	add	r2, pc, r2
     e2c:	moveq	r3, r8
     e30:	bl	738 <rb_snprintf_try_append@plt>
     e34:	cmn	r0, #1
     e38:	str	r4, [sp, #40]	; 0x28
     e3c:	ble	ea4 <cap_req+0x20c>
     e40:	mov	ip, r5
     e44:	mov	r0, #0
     e48:	str	r0, [fp, #-36]	; 0xffffffdc
     e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e50:	cmp	r0, #0
     e54:	bne	10b4 <cap_req+0x41c>
     e58:	ldr	r7, [pc, #924]	; 11fc <cap_req+0x564>
     e5c:	ldr	r7, [pc, r7]
     e60:	ldrb	r0, [r7]
     e64:	cmp	r0, #0
     e68:	beq	f18 <cap_req+0x280>
     e6c:	ldr	r4, [pc, #912]	; 1204 <cap_req+0x56c>
     e70:	ldr	r3, [pc, #912]	; 1208 <cap_req+0x570>
     e74:	add	r1, r7, #1
     e78:	ldr	r3, [pc, r3]
     e7c:	add	r4, pc, r4
     e80:	uxtb	r2, r0
     e84:	ldrb	r2, [r3, r2, lsl #2]
     e88:	tst	r2, #32
     e8c:	beq	f30 <cap_req+0x298>
     e90:	str	r1, [r4]
     e94:	ldrb	r0, [r1], #1
     e98:	cmp	r0, #0
     e9c:	bne	e80 <cap_req+0x1e8>
     ea0:	b	10ac <cap_req+0x414>
     ea4:	ldrb	r0, [r7]
     ea8:	cmp	r0, #0
     eac:	beq	e40 <cap_req+0x1a8>
     eb0:	cmp	r5, #1
     eb4:	bgt	e40 <cap_req+0x1a8>
     eb8:	ldr	r0, [sp, #16]
     ebc:	ldr	r0, [r0]
     ec0:	ands	r0, r0, #524288	; 0x80000
     ec4:	beq	e40 <cap_req+0x1a8>
     ec8:	add	r0, r5, #1
     ecc:	mov	r1, #0
     ed0:	mov	r3, r8
     ed4:	str	r0, [sp, #12]
     ed8:	rsb	r0, r0, r0, lsl #9
     edc:	ldr	r7, [pc, #784]	; 11f4 <cap_req+0x55c>
     ee0:	add	r7, pc, r7
     ee4:	strb	r1, [r7, r0]!
     ee8:	ldr	r0, [sl]
     eec:	str	r6, [sp]
     ef0:	ldr	r1, [sp, #32]
     ef4:	str	r0, [sp, #4]
     ef8:	mov	r0, r7
     efc:	ldr	r2, [pc, #756]	; 11f8 <cap_req+0x560>
     f00:	add	r2, pc, r2
     f04:	bl	738 <rb_snprintf_try_append@plt>
     f08:	cmp	r0, #0
     f0c:	blt	1068 <cap_req+0x3d0>
     f10:	ldr	ip, [sp, #12]
     f14:	b	e44 <cap_req+0x1ac>
     f18:	ldr	r4, [pc, #736]	; 1200 <cap_req+0x568>
     f1c:	mov	r0, #0
     f20:	add	r4, pc, r4
     f24:	cmp	r7, #0
     f28:	bne	f3c <cap_req+0x2a4>
     f2c:	b	10ac <cap_req+0x414>
     f30:	sub	r7, r1, #1
     f34:	cmp	r7, #0
     f38:	beq	10ac <cap_req+0x414>
     f3c:	uxtb	r0, r0
     f40:	cmp	r0, #45	; 0x2d
     f44:	beq	f58 <cap_req+0x2c0>
     f48:	mov	r6, #0
     f4c:	cmp	r0, #0
     f50:	bne	f78 <cap_req+0x2e0>
     f54:	b	10ac <cap_req+0x414>
     f58:	add	r0, r7, #1
     f5c:	mov	r6, #1
     f60:	str	r0, [r4]
     f64:	str	r6, [fp, #-36]	; 0xffffffdc
     f68:	ldrb	r1, [r7, #1]
     f6c:	mov	r7, r0
     f70:	cmp	r1, #0
     f74:	beq	118c <cap_req+0x4f4>
     f78:	mov	r0, r7
     f7c:	mov	r1, #32
     f80:	mov	r5, ip
     f84:	bl	75c <strchr@plt>
     f88:	cmp	r0, #0
     f8c:	beq	fa0 <cap_req+0x308>
     f90:	mov	r8, r0
     f94:	mov	r0, #0
     f98:	strb	r0, [r8], #1
     f9c:	b	fa4 <cap_req+0x30c>
     fa0:	mov	r8, #0
     fa4:	ldr	r0, [pc, #628]	; 1220 <cap_req+0x588>
     fa8:	mov	r1, r7
     fac:	ldr	r0, [pc, r0]
     fb0:	ldr	r0, [r0]
     fb4:	bl	768 <capability_find@plt>
     fb8:	cmp	r0, #0
     fbc:	beq	118c <cap_req+0x4f4>
     fc0:	mov	sl, r0
     fc4:	cmp	r8, #0
     fc8:	beq	fec <cap_req+0x354>
     fcc:	str	r8, [r4]
     fd0:	ldr	r4, [sp, #40]	; 0x28
     fd4:	mov	r7, #1
     fd8:	ldr	r8, [pc, #580]	; 1224 <cap_req+0x58c>
     fdc:	add	r8, pc, r8
     fe0:	cmp	r6, #0
     fe4:	bne	db4 <cap_req+0x11c>
     fe8:	b	1008 <cap_req+0x370>
     fec:	mov	r7, #1
     ff0:	ldr	r4, [sp, #40]	; 0x28
     ff4:	str	r7, [fp, #-32]	; 0xffffffe0
     ff8:	ldr	r8, [pc, #552]	; 1228 <cap_req+0x590>
     ffc:	add	r8, pc, r8
    1000:	cmp	r6, #0
    1004:	bne	db4 <cap_req+0x11c>
    1008:	ldrb	r0, [sl, #8]
    100c:	tst	r0, #1
    1010:	bne	1184 <cap_req+0x4ec>
    1014:	ldr	r0, [sl, #12]
    1018:	cmp	r0, #0
    101c:	beq	1044 <cap_req+0x3ac>
    1020:	ldr	r1, [r0]
    1024:	cmp	r1, #0
    1028:	beq	1048 <cap_req+0x3b0>
    102c:	mov	r0, r9
    1030:	blx	r1
    1034:	cmp	r0, #0
    1038:	beq	1184 <cap_req+0x4ec>
    103c:	ldr	r0, [sl, #12]
    1040:	b	1048 <cap_req+0x3b0>
    1044:	mov	r0, #0
    1048:	ldr	r1, [sl, #4]
    104c:	ldr	r2, [sp, #36]	; 0x24
    1050:	mov	r6, r8
    1054:	orr	r2, r2, r7, lsl r1
    1058:	str	r2, [sp, #36]	; 0x24
    105c:	cmp	r0, #0
    1060:	bne	de0 <cap_req+0x148>
    1064:	b	df4 <cap_req+0x15c>
    1068:	ldrb	r0, [r7]
    106c:	cmp	r0, #0
    1070:	beq	f10 <cap_req+0x278>
    1074:	cmp	r5, #0
    1078:	bgt	f10 <cap_req+0x278>
    107c:	ldr	r0, [sp, #16]
    1080:	ldr	ip, [sp, #12]
    1084:	ldr	r0, [r0]
    1088:	ands	r0, r0, #524288	; 0x80000
    108c:	beq	e44 <cap_req+0x1ac>
    1090:	ldr	r1, [pc, #428]	; 1244 <cap_req+0x5ac>
    1094:	add	ip, r5, #2
    1098:	mov	r2, #0
    109c:	rsb	r0, ip, ip, lsl #9
    10a0:	add	r1, pc, r1
    10a4:	strb	r2, [r1, r0]
    10a8:	b	e44 <cap_req+0x1ac>
    10ac:	mov	r0, #1
    10b0:	str	r0, [fp, #-32]	; 0xffffffe0
    10b4:	cmp	ip, #0
    10b8:	beq	1134 <cap_req+0x49c>
    10bc:	ldr	r0, [pc, #328]	; 120c <cap_req+0x574>
    10c0:	add	r0, pc, r0
    10c4:	str	r0, [sp]
    10c8:	mov	r7, r0
    10cc:	mov	r0, r9
    10d0:	ldr	r5, [pc, #312]	; 1210 <cap_req+0x578>
    10d4:	ldr	r6, [pc, #312]	; 1214 <cap_req+0x57c>
    10d8:	ldr	r3, [pc, #312]	; 1218 <cap_req+0x580>
    10dc:	add	r5, pc, r5
    10e0:	add	r6, pc, r6
    10e4:	add	r3, pc, r3
    10e8:	mov	r1, r5
    10ec:	mov	r2, r6
    10f0:	bl	72c <sendto_one@plt>
    10f4:	movw	r0, #511	; 0x1ff
    10f8:	mov	r1, r5
    10fc:	mov	r2, r6
    1100:	add	r0, r7, r0
    1104:	str	r0, [sp]
    1108:	mov	r0, r9
    110c:	ldr	r3, [pc, #264]	; 121c <cap_req+0x584>
    1110:	add	r3, pc, r3
    1114:	b	115c <cap_req+0x4c4>
    1118:	mov	r0, #0
    111c:	str	r0, [sp, #36]	; 0x24
    1120:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1124:	cmp	r0, #0
    1128:	mov	r0, #0
    112c:	str	r0, [sp, #40]	; 0x28
    1130:	beq	118c <cap_req+0x4f4>
    1134:	ldr	r0, [pc, #248]	; 1234 <cap_req+0x59c>
    1138:	add	r0, pc, r0
    113c:	str	r0, [sp]
    1140:	mov	r0, r9
    1144:	ldr	r1, [pc, #236]	; 1238 <cap_req+0x5a0>
    1148:	ldr	r2, [pc, #236]	; 123c <cap_req+0x5a4>
    114c:	ldr	r3, [pc, #236]	; 1240 <cap_req+0x5a8>
    1150:	add	r1, pc, r1
    1154:	add	r2, pc, r2
    1158:	add	r3, pc, r3
    115c:	bl	72c <sendto_one@plt>
    1160:	ldr	r0, [r9, #432]	; 0x1b0
    1164:	ldr	r2, [sp, #36]	; 0x24
    1168:	ldr	r1, [r0, #296]	; 0x128
    116c:	orr	r1, r1, r2
    1170:	ldr	r2, [sp, #40]	; 0x28
    1174:	bic	r1, r1, r2
    1178:	str	r1, [r0, #296]	; 0x128
    117c:	sub	sp, fp, #28
    1180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1184:	mov	r0, #0
    1188:	str	r0, [fp, #-32]	; 0xffffffe0
    118c:	ldr	r1, [sp, #28]
    1190:	ldrb	r0, [r9, #88]	; 0x58
    1194:	ldr	r3, [sp, #24]
    1198:	str	r1, [sp]
    119c:	cmp	r0, #0
    11a0:	ldr	r0, [pc, #132]	; 122c <cap_req+0x594>
    11a4:	ldr	r1, [pc, #132]	; 1230 <cap_req+0x598>
    11a8:	ldr	r2, [sp, #20]
    11ac:	add	r0, pc, r0
    11b0:	add	r1, pc, r1
    11b4:	moveq	r3, r0
    11b8:	mov	r0, r9
    11bc:	bl	72c <sendto_one@plt>
    11c0:	sub	sp, fp, #28
    11c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11c8:	.word	0x000119de
    11cc:	.word	0x00000abe
    11d0:	.word	0x00011334
    11d4:	.word	0x00000ad0
    11d8:	.word	0x00011b89
    11dc:	.word	0x00000a51
    11e0:	.word	0x00000a37
    11e4:	.word	0x00000a21
    11e8:	.word	0x00011ad1
    11ec:	.word	0x000009d8
    11f0:	.word	0x000009c9
    11f4:	.word	0x000119f5
    11f8:	.word	0x000008f1
    11fc:	.word	0x00011478
    1200:	.word	0x000113b4
    1204:	.word	0x00011458
    1208:	.word	0x000111d0
    120c:	.word	0x00011815
    1210:	.word	0x00000715
    1214:	.word	0x000115f6
    1218:	.word	0x000006f8
    121c:	.word	0x000006ce
    1220:	.word	0x00011098
    1224:	.word	0x0000081d
    1228:	.word	0x000007fd
    122c:	.word	0x0000061e
    1230:	.word	0x0000065f
    1234:	.word	0x0001179d
    1238:	.word	0x000006a1
    123c:	.word	0x00011582
    1240:	.word	0x00000686
    1244:	.word	0x00011835

00001248 <clicap_find>:
    1248:	push	{r4, r5, r6, r7, fp, lr}
    124c:	add	fp, sp, #16
    1250:	mov	r7, #0
    1254:	mov	r4, r2
    1258:	mov	r5, r1
    125c:	cmp	r0, #0
    1260:	str	r7, [r1]
    1264:	beq	128c <clicap_find+0x44>
    1268:	ldr	r6, [pc, #340]	; 13c4 <clicap_find+0x17c>
    126c:	mov	r1, r0
    1270:	mov	r2, #512	; 0x200
    1274:	add	r6, pc, r6
    1278:	mov	r0, r6
    127c:	bl	780 <rb_strlcpy@plt>
    1280:	ldr	r0, [pc, #320]	; 13c8 <clicap_find+0x180>
    1284:	add	r0, pc, r0
    1288:	str	r6, [r0]
    128c:	ldr	r0, [r4]
    1290:	cmp	r0, #0
    1294:	beq	12a0 <clicap_find+0x58>
    1298:	mov	r0, r7
    129c:	pop	{r4, r5, r6, r7, fp, pc}
    12a0:	ldr	r6, [pc, #292]	; 13cc <clicap_find+0x184>
    12a4:	ldr	r6, [pc, r6]
    12a8:	ldrb	r0, [r6]
    12ac:	cmp	r0, #0
    12b0:	beq	12ec <clicap_find+0xa4>
    12b4:	ldr	r2, [pc, #276]	; 13d0 <clicap_find+0x188>
    12b8:	add	r1, r6, #1
    12bc:	ldr	r2, [pc, r2]
    12c0:	ldr	r3, [pc, #268]	; 13d4 <clicap_find+0x18c>
    12c4:	add	r3, pc, r3
    12c8:	uxtb	r7, r0
    12cc:	ldrb	r7, [r2, r7, lsl #2]
    12d0:	tst	r7, #32
    12d4:	beq	12fc <clicap_find+0xb4>
    12d8:	str	r1, [r3]
    12dc:	ldrb	r0, [r1], #1
    12e0:	cmp	r0, #0
    12e4:	bne	12c8 <clicap_find+0x80>
    12e8:	b	131c <clicap_find+0xd4>
    12ec:	mov	r0, #0
    12f0:	cmp	r6, #0
    12f4:	bne	1308 <clicap_find+0xc0>
    12f8:	b	131c <clicap_find+0xd4>
    12fc:	sub	r6, r1, #1
    1300:	cmp	r6, #0
    1304:	beq	131c <clicap_find+0xd4>
    1308:	uxtb	r0, r0
    130c:	cmp	r0, #45	; 0x2d
    1310:	beq	1330 <clicap_find+0xe8>
    1314:	cmp	r0, #0
    1318:	bne	1358 <clicap_find+0x110>
    131c:	mov	r0, #1
    1320:	str	r0, [r4]
    1324:	mov	r7, #0
    1328:	mov	r0, r7
    132c:	pop	{r4, r5, r6, r7, fp, pc}
    1330:	mov	r0, #1
    1334:	str	r0, [r5]
    1338:	add	r0, r6, #1
    133c:	ldr	r1, [pc, #148]	; 13d8 <clicap_find+0x190>
    1340:	add	r1, pc, r1
    1344:	str	r0, [r1]
    1348:	ldrb	r1, [r6, #1]
    134c:	mov	r6, r0
    1350:	cmp	r1, #0
    1354:	beq	1324 <clicap_find+0xdc>
    1358:	mov	r0, r6
    135c:	mov	r1, #32
    1360:	bl	75c <strchr@plt>
    1364:	cmp	r0, #0
    1368:	mov	r5, #0
    136c:	mov	r7, #0
    1370:	movne	r1, #0
    1374:	strbne	r1, [r0], #1
    1378:	mov	r1, r6
    137c:	movne	r5, r0
    1380:	ldr	r0, [pc, #84]	; 13dc <clicap_find+0x194>
    1384:	ldr	r0, [pc, r0]
    1388:	ldr	r0, [r0]
    138c:	bl	768 <capability_find@plt>
    1390:	cmp	r0, #0
    1394:	beq	1298 <clicap_find+0x50>
    1398:	cmp	r5, #0
    139c:	beq	13b0 <clicap_find+0x168>
    13a0:	ldr	r1, [pc, #56]	; 13e0 <clicap_find+0x198>
    13a4:	add	r1, pc, r1
    13a8:	str	r5, [r1]
    13ac:	b	13b8 <clicap_find+0x170>
    13b0:	mov	r1, #1
    13b4:	str	r1, [r4]
    13b8:	mov	r7, r0
    13bc:	mov	r0, r7
    13c0:	pop	{r4, r5, r6, r7, fp, pc}
    13c4:	.word	0x00010e60
    13c8:	.word	0x00011050
    13cc:	.word	0x00011030
    13d0:	.word	0x00010d8c
    13d4:	.word	0x00011010
    13d8:	.word	0x00010f94
    13dc:	.word	0x00010cc0
    13e0:	.word	0x00010f30

000013e4 <clicap_generate>:
    13e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    13e8:	add	fp, sp, #28
    13ec:	sub	sp, sp, #28
    13f0:	mov	r4, r0
    13f4:	ldr	r0, [pc, #816]	; 172c <clicap_generate+0x348>
    13f8:	mov	sl, r2
    13fc:	mov	r2, #0
    1400:	add	r0, pc, r0
    1404:	strb	r2, [r0]
    1408:	mov	r2, r4
    140c:	ldrb	r3, [r2, #88]!	; 0x58
    1410:	ldr	r7, [pc, #792]	; 1730 <clicap_generate+0x34c>
    1414:	str	r1, [sp, #4]
    1418:	add	r7, pc, r7
    141c:	cmp	r3, #0
    1420:	movne	r7, r2
    1424:	str	r7, [sp]
    1428:	ldr	r1, [pc, #772]	; 1734 <clicap_generate+0x350>
    142c:	ldr	r1, [pc, r1]
    1430:	ldr	r2, [pc, #768]	; 1738 <clicap_generate+0x354>
    1434:	add	r3, r1, #88	; 0x58
    1438:	add	r2, pc, r2
    143c:	movw	r1, #511	; 0x1ff
    1440:	bl	738 <rb_snprintf_try_append@plt>
    1444:	cmn	sl, #1
    1448:	beq	14bc <clicap_generate+0xd8>
    144c:	mov	r7, r0
    1450:	cmn	r0, #1
    1454:	ble	14bc <clicap_generate+0xd8>
    1458:	ldr	r0, [pc, #736]	; 1740 <clicap_generate+0x35c>
    145c:	mov	r1, #0
    1460:	add	r9, sp, #20
    1464:	add	r0, pc, r0
    1468:	strb	r1, [r0]
    146c:	mov	r1, r9
    1470:	ldr	r6, [pc, #716]	; 1744 <clicap_generate+0x360>
    1474:	ldr	r6, [pc, r6]
    1478:	ldr	r0, [r6]
    147c:	ldr	r0, [r0, #4]
    1480:	bl	744 <rb_dictionary_foreach_start@plt>
    1484:	ldr	r0, [r6]
    1488:	mov	r1, r9
    148c:	ldr	r0, [r0, #4]
    1490:	bl	774 <rb_dictionary_foreach_cur@plt>
    1494:	cmp	r0, #0
    1498:	beq	16f8 <clicap_generate+0x314>
    149c:	mov	r9, r0
    14a0:	movw	r0, #507	; 0x1fb
    14a4:	add	r5, sp, #20
    14a8:	sub	r0, r0, r7
    14ac:	str	r0, [sp, #16]
    14b0:	add	r0, r4, #64	; 0x40
    14b4:	str	r0, [sp, #12]
    14b8:	b	14e8 <clicap_generate+0x104>
    14bc:	ldr	r1, [pc, #632]	; 173c <clicap_generate+0x358>
    14c0:	add	r1, pc, r1
    14c4:	b	170c <clicap_generate+0x328>
    14c8:	ldr	r1, [r7, #4]
    14cc:	cmp	r1, #0
    14d0:	beq	14e0 <clicap_generate+0xfc>
    14d4:	mov	r0, r4
    14d8:	blx	r1
    14dc:	b	1550 <clicap_generate+0x16c>
    14e0:	mov	r0, #0
    14e4:	b	1550 <clicap_generate+0x16c>
    14e8:	ldr	r7, [r9, #12]
    14ec:	cmp	sl, #0
    14f0:	beq	150c <clicap_generate+0x128>
    14f4:	ldr	r1, [r4, #432]	; 0x1b0
    14f8:	ldr	r0, [r9, #4]
    14fc:	mov	r2, #1
    1500:	ldr	r1, [r1, #296]	; 0x128
    1504:	tst	r1, r2, lsl r0
    1508:	beq	16c0 <clicap_generate+0x2dc>
    150c:	ldrb	r0, [r9, #8]
    1510:	tst	r0, #1
    1514:	bne	16c0 <clicap_generate+0x2dc>
    1518:	cmp	r7, #0
    151c:	ldrne	r1, [r7]
    1520:	cmpne	r1, #0
    1524:	bne	16b0 <clicap_generate+0x2cc>
    1528:	mov	r0, #0
    152c:	cmp	sl, #0
    1530:	mov	r1, sl
    1534:	bne	1550 <clicap_generate+0x16c>
    1538:	cmp	r7, #0
    153c:	mov	r0, #0
    1540:	ldrne	r1, [sp, #12]
    1544:	ldrne	r1, [r1]
    1548:	andsne	r1, r1, #524288	; 0x80000
    154c:	bne	14c8 <clicap_generate+0xe4>
    1550:	ldr	r5, [pc, #496]	; 1748 <clicap_generate+0x364>
    1554:	mov	r8, r4
    1558:	ldr	r4, [pc, #492]	; 174c <clicap_generate+0x368>
    155c:	cmp	r0, #0
    1560:	ldr	r2, [r9]
    1564:	add	r5, pc, r5
    1568:	add	r4, pc, r4
    156c:	mov	r7, r5
    1570:	ldrb	r1, [r4]
    1574:	mov	r6, r5
    1578:	movne	r7, r0
    157c:	cmp	r0, #0
    1580:	ldr	r0, [pc, #456]	; 1750 <clicap_generate+0x36c>
    1584:	add	r0, pc, r0
    1588:	movne	r6, r0
    158c:	cmp	r1, #0
    1590:	mov	r0, r4
    1594:	mov	r4, r8
    1598:	stm	sp, {r2, r6, r7}
    159c:	ldr	r3, [pc, #432]	; 1754 <clicap_generate+0x370>
    15a0:	ldr	r1, [sp, #16]
    15a4:	ldr	r2, [pc, #428]	; 1758 <clicap_generate+0x374>
    15a8:	add	r3, pc, r3
    15ac:	add	r2, pc, r2
    15b0:	moveq	r3, r5
    15b4:	bl	738 <rb_snprintf_try_append@plt>
    15b8:	cmn	r0, #1
    15bc:	add	r5, sp, #20
    15c0:	bgt	16c0 <clicap_generate+0x2dc>
    15c4:	ldr	r0, [pc, #400]	; 175c <clicap_generate+0x378>
    15c8:	add	r0, pc, r0
    15cc:	ldrb	r0, [r0]
    15d0:	cmp	r0, #0
    15d4:	beq	16c0 <clicap_generate+0x2dc>
    15d8:	ldr	r0, [sp, #12]
    15dc:	ldrb	r0, [r0, #2]
    15e0:	tst	r0, #8
    15e4:	beq	16c0 <clicap_generate+0x2dc>
    15e8:	ldr	r4, [pc, #368]	; 1760 <clicap_generate+0x37c>
    15ec:	mov	r0, r8
    15f0:	add	r4, pc, r4
    15f4:	str	r4, [sp]
    15f8:	ldr	r1, [pc, #356]	; 1764 <clicap_generate+0x380>
    15fc:	ldr	r2, [pc, #356]	; 1768 <clicap_generate+0x384>
    1600:	ldr	r3, [pc, #356]	; 176c <clicap_generate+0x388>
    1604:	add	r1, pc, r1
    1608:	add	r2, pc, r2
    160c:	add	r3, pc, r3
    1610:	bl	72c <sendto_one@plt>
    1614:	mov	r0, #0
    1618:	strb	r0, [r4]
    161c:	ldr	r0, [r9]
    1620:	stm	sp, {r0, r6, r7}
    1624:	mov	r0, r4
    1628:	mov	r4, r8
    162c:	ldr	r1, [sp, #16]
    1630:	ldr	r2, [pc, #312]	; 1770 <clicap_generate+0x38c>
    1634:	ldr	r3, [pc, #312]	; 1774 <clicap_generate+0x390>
    1638:	add	r2, pc, r2
    163c:	add	r3, pc, r3
    1640:	bl	738 <rb_snprintf_try_append@plt>
    1644:	cmn	r0, #1
    1648:	bgt	16c0 <clicap_generate+0x2dc>
    164c:	ldr	r0, [pc, #292]	; 1778 <clicap_generate+0x394>
    1650:	add	r0, pc, r0
    1654:	ldrb	r0, [r0]
    1658:	cmp	r0, #0
    165c:	beq	16c0 <clicap_generate+0x2dc>
    1660:	ldr	r0, [sp, #12]
    1664:	ldrb	r0, [r0, #2]
    1668:	tst	r0, #8
    166c:	beq	16c0 <clicap_generate+0x2dc>
    1670:	ldr	r0, [pc, #280]	; 1790 <clicap_generate+0x3ac>
    1674:	add	r0, pc, r0
    1678:	str	r0, [sp]
    167c:	mov	r4, r0
    1680:	mov	r0, r8
    1684:	ldr	r1, [pc, #264]	; 1794 <clicap_generate+0x3b0>
    1688:	ldr	r2, [pc, #264]	; 1798 <clicap_generate+0x3b4>
    168c:	ldr	r3, [pc, #264]	; 179c <clicap_generate+0x3b8>
    1690:	add	r1, pc, r1
    1694:	add	r2, pc, r2
    1698:	add	r3, pc, r3
    169c:	bl	72c <sendto_one@plt>
    16a0:	mov	r0, #0
    16a4:	strb	r0, [r4]
    16a8:	mov	r4, r8
    16ac:	b	16c0 <clicap_generate+0x2dc>
    16b0:	mov	r0, r4
    16b4:	blx	r1
    16b8:	cmp	r0, #0
    16bc:	bne	1528 <clicap_generate+0x144>
    16c0:	ldr	r0, [pc, #180]	; 177c <clicap_generate+0x398>
    16c4:	mov	r1, r5
    16c8:	ldr	r0, [pc, r0]
    16cc:	mov	r6, r0
    16d0:	ldr	r0, [r0]
    16d4:	ldr	r0, [r0, #4]
    16d8:	bl	798 <rb_dictionary_foreach_next@plt>
    16dc:	ldr	r0, [r6]
    16e0:	mov	r1, r5
    16e4:	ldr	r0, [r0, #4]
    16e8:	bl	774 <rb_dictionary_foreach_cur@plt>
    16ec:	mov	r9, r0
    16f0:	cmp	r0, #0
    16f4:	bne	14e8 <clicap_generate+0x104>
    16f8:	ldr	r0, [pc, #128]	; 1780 <clicap_generate+0x39c>
    16fc:	add	r0, pc, r0
    1700:	str	r0, [sp]
    1704:	ldr	r1, [pc, #120]	; 1784 <clicap_generate+0x3a0>
    1708:	add	r1, pc, r1
    170c:	ldr	r2, [pc, #116]	; 1788 <clicap_generate+0x3a4>
    1710:	ldr	r3, [pc, #116]	; 178c <clicap_generate+0x3a8>
    1714:	mov	r0, r4
    1718:	add	r2, pc, r2
    171c:	add	r3, pc, r3
    1720:	bl	72c <sendto_one@plt>
    1724:	sub	sp, fp, #28
    1728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    172c:	.word	0x00010ed8
    1730:	.word	0x000003b2
    1734:	.word	0x00010c28
    1738:	.word	0x000003a9
    173c:	.word	0x00000333
    1740:	.word	0x00011073
    1744:	.word	0x00010bd0
    1748:	.word	0x00000295
    174c:	.word	0x00010f6f
    1750:	.word	0x00000276
    1754:	.word	0x00000250
    1758:	.word	0x00000243
    175c:	.word	0x00010f0f
    1760:	.word	0x00010ee7
    1764:	.word	0x000001ed
    1768:	.word	0x00010cd0
    176c:	.word	0x000001d0
    1770:	.word	0x000001b7
    1774:	.word	0x000001bd
    1778:	.word	0x00010e87
    177c:	.word	0x0001097c
    1780:	.word	0x00010ddb
    1784:	.word	0x000000e9
    1788:	.word	0x00010bc0
    178c:	.word	0x000000c2
    1790:	.word	0x00010e63
    1794:	.word	0x00000161
    1798:	.word	0x00010c44
    179c:	.word	0x00000144

Disassembly of section .fini:

000017a0 <_fini>:
    17a0:	push	{r3, lr}
    17a4:	pop	{r3, pc}
