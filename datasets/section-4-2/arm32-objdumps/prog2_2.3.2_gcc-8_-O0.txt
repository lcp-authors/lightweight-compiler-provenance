
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010974 <.init>:
   10974:	push	{r3, lr}
   10978:	bl	10aa8 <_start@@Base+0x3c>
   1097c:	pop	{r3, pc}

Disassembly of section .plt:

00010980 <calloc@plt-0x14>:
   10980:	push	{lr}		; (str lr, [sp, #-4]!)
   10984:	ldr	lr, [pc, #4]	; 10990 <calloc@plt-0x4>
   10988:	add	lr, pc, lr
   1098c:	ldr	pc, [lr, #8]!
   10990:	andeq	r1, r1, r0, ror r6

00010994 <calloc@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1648]!	; 0x670

000109a0 <strcmp@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1640]!	; 0x668

000109ac <printf@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1632]!	; 0x660

000109b8 <free@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1624]!	; 0x658

000109c4 <fgets@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1616]!	; 0x650

000109d0 <time@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1608]!	; 0x648

000109dc <realloc@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1600]!	; 0x640

000109e8 <strcat@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1592]!	; 0x638

000109f4 <strcpy@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1584]!	; 0x630

00010a00 <puts@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1576]!	; 0x628

00010a0c <malloc@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1568]!	; 0x620

00010a18 <__libc_start_main@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1560]!	; 0x618

00010a24 <__gmon_start__@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1552]!	; 0x610

00010a30 <strlen@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1544]!	; 0x608

00010a3c <srand@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1536]!	; 0x600

00010a48 <rand@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a54 <__isoc99_scanf@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a60 <abort@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1512]!	; 0x5e8

Disassembly of section .text:

00010a6c <_start@@Base>:
   10a6c:	mov	fp, #0
   10a70:	mov	lr, #0
   10a74:	pop	{r1}		; (ldr r1, [sp], #4)
   10a78:	mov	r2, sp
   10a7c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a80:	push	{r0}		; (str r0, [sp, #-4]!)
   10a84:	ldr	ip, [pc, #16]	; 10a9c <_start@@Base+0x30>
   10a88:	push	{ip}		; (str ip, [sp, #-4]!)
   10a8c:	ldr	r0, [pc, #12]	; 10aa0 <_start@@Base+0x34>
   10a90:	ldr	r3, [pc, #12]	; 10aa4 <_start@@Base+0x38>
   10a94:	bl	10a18 <__libc_start_main@plt>
   10a98:	bl	10a60 <abort@plt>
   10a9c:	muleq	r1, r0, r8
   10aa0:	andeq	r0, r1, r4, ror #23
   10aa4:	andeq	r1, r1, r0, lsr r8
   10aa8:	ldr	r3, [pc, #20]	; 10ac4 <_start@@Base+0x58>
   10aac:	ldr	r2, [pc, #20]	; 10ac8 <_start@@Base+0x5c>
   10ab0:	add	r3, pc, r3
   10ab4:	ldr	r2, [r3, r2]
   10ab8:	cmp	r2, #0
   10abc:	bxeq	lr
   10ac0:	b	10a24 <__gmon_start__@plt>
   10ac4:	andeq	r1, r1, r8, asr #10
   10ac8:	andeq	r0, r0, r4, asr r0
   10acc:	ldr	r0, [pc, #24]	; 10aec <_start@@Base+0x80>
   10ad0:	ldr	r3, [pc, #24]	; 10af0 <_start@@Base+0x84>
   10ad4:	cmp	r3, r0
   10ad8:	bxeq	lr
   10adc:	ldr	r3, [pc, #16]	; 10af4 <_start@@Base+0x88>
   10ae0:	cmp	r3, #0
   10ae4:	bxeq	lr
   10ae8:	bx	r3
   10aec:	andeq	r2, r2, r4, rrx
   10af0:	andeq	r2, r2, r4, rrx
   10af4:	andeq	r0, r0, r0
   10af8:	ldr	r0, [pc, #36]	; 10b24 <_start@@Base+0xb8>
   10afc:	ldr	r1, [pc, #36]	; 10b28 <_start@@Base+0xbc>
   10b00:	sub	r1, r1, r0
   10b04:	asr	r1, r1, #2
   10b08:	add	r1, r1, r1, lsr #31
   10b0c:	asrs	r1, r1, #1
   10b10:	bxeq	lr
   10b14:	ldr	r3, [pc, #16]	; 10b2c <_start@@Base+0xc0>
   10b18:	cmp	r3, #0
   10b1c:	bxeq	lr
   10b20:	bx	r3
   10b24:	andeq	r2, r2, r4, rrx
   10b28:	andeq	r2, r2, r4, rrx
   10b2c:	andeq	r0, r0, r0
   10b30:	push	{r4, lr}
   10b34:	ldr	r4, [pc, #24]	; 10b54 <_start@@Base+0xe8>
   10b38:	ldrb	r3, [r4]
   10b3c:	cmp	r3, #0
   10b40:	popne	{r4, pc}
   10b44:	bl	10acc <_start@@Base+0x60>
   10b48:	mov	r3, #1
   10b4c:	strb	r3, [r4]
   10b50:	pop	{r4, pc}
   10b54:	andeq	r2, r2, r4, rrx
   10b58:	b	10af8 <_start@@Base+0x8c>

00010b5c <imprime@@Base>:
   10b5c:	str	r4, [sp, #-12]!
   10b60:	str	fp, [sp, #4]
   10b64:	str	lr, [sp, #8]
   10b68:	add	fp, sp, #8
   10b6c:	sub	sp, sp, #20
   10b70:	str	r0, [fp, #-24]	; 0xffffffe8
   10b74:	mov	r3, #0
   10b78:	str	r3, [fp, #-16]
   10b7c:	b	10bbc <imprime@@Base+0x60>
   10b80:	ldr	r3, [fp, #-16]
   10b84:	add	r4, r3, #1
   10b88:	ldr	r1, [fp, #-16]
   10b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b90:	bl	11014 <vetor_elemento@@Base>
   10b94:	mov	r3, r0
   10b98:	mov	r2, r3
   10b9c:	mov	r1, r4
   10ba0:	ldr	r3, [pc, #56]	; 10be0 <imprime@@Base+0x84>
   10ba4:	add	r3, pc, r3
   10ba8:	mov	r0, r3
   10bac:	bl	109ac <printf@plt>
   10bb0:	ldr	r3, [fp, #-16]
   10bb4:	add	r3, r3, #1
   10bb8:	str	r3, [fp, #-16]
   10bbc:	ldr	r3, [fp, #-16]
   10bc0:	cmp	r3, #4
   10bc4:	ble	10b80 <imprime@@Base+0x24>
   10bc8:	nop	{0}
   10bcc:	sub	sp, fp, #8
   10bd0:	ldr	r4, [sp]
   10bd4:	ldr	fp, [sp, #4]
   10bd8:	add	sp, sp, #8
   10bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   10be0:	strdeq	r0, [r0], -r4

00010be4 <main@@Base>:
   10be4:	str	r4, [sp, #-12]!
   10be8:	str	fp, [sp, #4]
   10bec:	str	lr, [sp, #8]
   10bf0:	add	fp, sp, #8
   10bf4:	sub	sp, sp, #116	; 0x74
   10bf8:	ldr	r4, [pc, #372]	; 10d74 <main@@Base+0x190>
   10bfc:	add	r4, pc, r4
   10c00:	bl	10d94 <vetor_novo@@Base>
   10c04:	str	r0, [fp, #-20]	; 0xffffffec
   10c08:	mov	r3, #0
   10c0c:	str	r3, [fp, #-16]
   10c10:	b	10c90 <main@@Base+0xac>
   10c14:	ldr	r3, [fp, #-16]
   10c18:	add	r3, r3, #1
   10c1c:	mov	r1, r3
   10c20:	ldr	r3, [pc, #336]	; 10d78 <main@@Base+0x194>
   10c24:	add	r3, pc, r3
   10c28:	mov	r0, r3
   10c2c:	bl	109ac <printf@plt>
   10c30:	ldr	r3, [pc, #324]	; 10d7c <main@@Base+0x198>
   10c34:	ldr	r3, [r4, r3]
   10c38:	ldr	r2, [r3]
   10c3c:	sub	r3, fp, #120	; 0x78
   10c40:	mov	r1, #100	; 0x64
   10c44:	mov	r0, r3
   10c48:	bl	109c4 <fgets@plt>
   10c4c:	sub	r3, fp, #120	; 0x78
   10c50:	mov	r0, r3
   10c54:	bl	10a30 <strlen@plt>
   10c58:	mov	r3, r0
   10c5c:	sub	r3, r3, #1
   10c60:	sub	r2, fp, #12
   10c64:	add	r3, r2, r3
   10c68:	mov	r2, #0
   10c6c:	strb	r2, [r3, #-108]	; 0xffffff94
   10c70:	sub	r3, fp, #120	; 0x78
   10c74:	ldr	r2, [fp, #-16]
   10c78:	mov	r1, r3
   10c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10c80:	bl	11084 <vetor_insere@@Base>
   10c84:	ldr	r3, [fp, #-16]
   10c88:	add	r3, r3, #1
   10c8c:	str	r3, [fp, #-16]
   10c90:	ldr	r3, [fp, #-16]
   10c94:	cmp	r3, #4
   10c98:	ble	10c14 <main@@Base+0x30>
   10c9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ca0:	bl	10b5c <imprime@@Base>
   10ca4:	ldr	r3, [pc, #212]	; 10d80 <main@@Base+0x19c>
   10ca8:	add	r3, pc, r3
   10cac:	mov	r0, r3
   10cb0:	bl	109ac <printf@plt>
   10cb4:	sub	r3, fp, #120	; 0x78
   10cb8:	mov	r1, r3
   10cbc:	ldr	r3, [pc, #192]	; 10d84 <main@@Base+0x1a0>
   10cc0:	add	r3, pc, r3
   10cc4:	mov	r0, r3
   10cc8:	bl	10a54 <__isoc99_scanf@plt>
   10ccc:	sub	r3, fp, #120	; 0x78
   10cd0:	mov	r1, r3
   10cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   10cd8:	bl	11378 <vetor_pesquisa@@Base>
   10cdc:	mov	r3, r0
   10ce0:	mov	r1, r3
   10ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ce8:	bl	1127c <vetor_remove@@Base>
   10cec:	mov	r3, r0
   10cf0:	cmp	r3, #0
   10cf4:	beq	10d0c <main@@Base+0x128>
   10cf8:	ldr	r3, [pc, #136]	; 10d88 <main@@Base+0x1a4>
   10cfc:	add	r3, pc, r3
   10d00:	mov	r0, r3
   10d04:	bl	10a00 <puts@plt>
   10d08:	b	10d14 <main@@Base+0x130>
   10d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d10:	bl	10b5c <imprime@@Base>
   10d14:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d18:	bl	11420 <vetor_ordena@@Base>
   10d1c:	mov	r3, r0
   10d20:	cmp	r3, #0
   10d24:	beq	10d38 <main@@Base+0x154>
   10d28:	ldr	r3, [pc, #92]	; 10d8c <main@@Base+0x1a8>
   10d2c:	add	r3, pc, r3
   10d30:	mov	r0, r3
   10d34:	bl	109ac <printf@plt>
   10d38:	ldr	r3, [pc, #80]	; 10d90 <main@@Base+0x1ac>
   10d3c:	add	r3, pc, r3
   10d40:	mov	r0, r3
   10d44:	bl	10a00 <puts@plt>
   10d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d4c:	bl	10b5c <imprime@@Base>
   10d50:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d54:	bl	10e04 <vetor_apaga@@Base>
   10d58:	mov	r3, #0
   10d5c:	mov	r0, r3
   10d60:	sub	sp, fp, #8
   10d64:	ldr	r4, [sp]
   10d68:	ldr	fp, [sp, #4]
   10d6c:	add	sp, sp, #8
   10d70:	pop	{pc}		; (ldr pc, [sp], #4)
   10d74:	strdeq	r1, [r1], -ip
   10d78:	muleq	r0, r4, ip
   10d7c:	andeq	r0, r0, r8, asr r0
   10d80:	andeq	r0, r0, r4, lsr #24
   10d84:	andeq	r0, r0, ip, lsr #24
   10d88:	strdeq	r0, [r0], -r4
   10d8c:	ldrdeq	r0, [r0], -ip
   10d90:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00010d94 <vetor_novo@@Base>:
   10d94:	str	fp, [sp, #-8]!
   10d98:	str	lr, [sp, #4]
   10d9c:	add	fp, sp, #4
   10da0:	sub	sp, sp, #8
   10da4:	mov	r0, #12
   10da8:	bl	10a0c <malloc@plt>
   10dac:	mov	r3, r0
   10db0:	str	r3, [fp, #-8]
   10db4:	ldr	r3, [fp, #-8]
   10db8:	cmp	r3, #0
   10dbc:	bne	10dc8 <vetor_novo@@Base+0x34>
   10dc0:	mov	r3, #0
   10dc4:	b	10df0 <vetor_novo@@Base+0x5c>
   10dc8:	ldr	r3, [fp, #-8]
   10dcc:	mov	r2, #0
   10dd0:	str	r2, [r3]
   10dd4:	ldr	r3, [fp, #-8]
   10dd8:	mov	r2, #0
   10ddc:	str	r2, [r3, #4]
   10de0:	ldr	r3, [fp, #-8]
   10de4:	mov	r2, #0
   10de8:	str	r2, [r3, #8]
   10dec:	ldr	r3, [fp, #-8]
   10df0:	mov	r0, r3
   10df4:	sub	sp, fp, #4
   10df8:	ldr	fp, [sp]
   10dfc:	add	sp, sp, #4
   10e00:	pop	{pc}		; (ldr pc, [sp], #4)

00010e04 <vetor_apaga@@Base>:
   10e04:	str	fp, [sp, #-8]!
   10e08:	str	lr, [sp, #4]
   10e0c:	add	fp, sp, #4
   10e10:	sub	sp, sp, #16
   10e14:	str	r0, [fp, #-16]
   10e18:	ldr	r3, [fp, #-16]
   10e1c:	cmp	r3, #0
   10e20:	beq	10e8c <vetor_apaga@@Base+0x88>
   10e24:	mov	r3, #0
   10e28:	str	r3, [fp, #-8]
   10e2c:	b	10e5c <vetor_apaga@@Base+0x58>
   10e30:	ldr	r3, [fp, #-16]
   10e34:	ldr	r2, [r3, #8]
   10e38:	ldr	r3, [fp, #-8]
   10e3c:	lsl	r3, r3, #2
   10e40:	add	r3, r2, r3
   10e44:	ldr	r3, [r3]
   10e48:	mov	r0, r3
   10e4c:	bl	109b8 <free@plt>
   10e50:	ldr	r3, [fp, #-8]
   10e54:	add	r3, r3, #1
   10e58:	str	r3, [fp, #-8]
   10e5c:	ldr	r3, [fp, #-16]
   10e60:	ldr	r3, [r3]
   10e64:	ldr	r2, [fp, #-8]
   10e68:	cmp	r2, r3
   10e6c:	blt	10e30 <vetor_apaga@@Base+0x2c>
   10e70:	ldr	r3, [fp, #-16]
   10e74:	ldr	r3, [r3, #8]
   10e78:	mov	r0, r3
   10e7c:	bl	109b8 <free@plt>
   10e80:	ldr	r0, [fp, #-16]
   10e84:	bl	109b8 <free@plt>
   10e88:	b	10e90 <vetor_apaga@@Base+0x8c>
   10e8c:	nop	{0}
   10e90:	sub	sp, fp, #4
   10e94:	ldr	fp, [sp]
   10e98:	add	sp, sp, #4
   10e9c:	pop	{pc}		; (ldr pc, [sp], #4)

00010ea0 <vetor_atribui@@Base>:
   10ea0:	str	r4, [sp, #-12]!
   10ea4:	str	fp, [sp, #4]
   10ea8:	str	lr, [sp, #8]
   10eac:	add	fp, sp, #8
   10eb0:	sub	sp, sp, #28
   10eb4:	str	r0, [fp, #-24]	; 0xffffffe8
   10eb8:	str	r1, [fp, #-28]	; 0xffffffe4
   10ebc:	str	r2, [fp, #-32]	; 0xffffffe0
   10ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ec4:	cmp	r3, #0
   10ec8:	beq	10eec <vetor_atribui@@Base+0x4c>
   10ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ed0:	cmp	r3, #0
   10ed4:	blt	10eec <vetor_atribui@@Base+0x4c>
   10ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10edc:	ldr	r3, [r3]
   10ee0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10ee4:	cmp	r2, r3
   10ee8:	blt	10ef4 <vetor_atribui@@Base+0x54>
   10eec:	mvn	r3, #0
   10ef0:	b	10fc0 <vetor_atribui@@Base+0x120>
   10ef4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ef8:	bl	10a30 <strlen@plt>
   10efc:	str	r0, [fp, #-16]
   10f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f04:	ldr	r2, [r3, #8]
   10f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f0c:	lsl	r3, r3, #2
   10f10:	add	r3, r2, r3
   10f14:	ldr	r3, [r3]
   10f18:	mov	r0, r3
   10f1c:	bl	10a30 <strlen@plt>
   10f20:	mov	r2, r0
   10f24:	ldr	r3, [fp, #-16]
   10f28:	cmp	r3, r2
   10f2c:	bls	10f98 <vetor_atribui@@Base+0xf8>
   10f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f34:	ldr	r2, [r3, #8]
   10f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f3c:	lsl	r3, r3, #2
   10f40:	add	r3, r2, r3
   10f44:	ldr	r0, [r3]
   10f48:	ldr	r3, [fp, #-16]
   10f4c:	add	r1, r3, #1
   10f50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f54:	ldr	r2, [r3, #8]
   10f58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f5c:	lsl	r3, r3, #2
   10f60:	add	r4, r2, r3
   10f64:	bl	109dc <realloc@plt>
   10f68:	mov	r3, r0
   10f6c:	str	r3, [r4]
   10f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f74:	ldr	r2, [r3, #8]
   10f78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f7c:	lsl	r3, r3, #2
   10f80:	add	r3, r2, r3
   10f84:	ldr	r3, [r3]
   10f88:	cmp	r3, #0
   10f8c:	bne	10f98 <vetor_atribui@@Base+0xf8>
   10f90:	mvn	r3, #0
   10f94:	b	10fc0 <vetor_atribui@@Base+0x120>
   10f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f9c:	ldr	r2, [r3, #8]
   10fa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10fa4:	lsl	r3, r3, #2
   10fa8:	add	r3, r2, r3
   10fac:	ldr	r3, [r3]
   10fb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10fb4:	mov	r0, r3
   10fb8:	bl	109f4 <strcpy@plt>
   10fbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10fc0:	mov	r0, r3
   10fc4:	sub	sp, fp, #8
   10fc8:	ldr	r4, [sp]
   10fcc:	ldr	fp, [sp, #4]
   10fd0:	add	sp, sp, #8
   10fd4:	pop	{pc}		; (ldr pc, [sp], #4)

00010fd8 <vetor_tamanho@@Base>:
   10fd8:	push	{fp}		; (str fp, [sp, #-4]!)
   10fdc:	add	fp, sp, #0
   10fe0:	sub	sp, sp, #12
   10fe4:	str	r0, [fp, #-8]
   10fe8:	ldr	r3, [fp, #-8]
   10fec:	cmp	r3, #0
   10ff0:	bne	10ffc <vetor_tamanho@@Base+0x24>
   10ff4:	mvn	r3, #0
   10ff8:	b	11004 <vetor_tamanho@@Base+0x2c>
   10ffc:	ldr	r3, [fp, #-8]
   11000:	ldr	r3, [r3]
   11004:	mov	r0, r3
   11008:	add	sp, fp, #0
   1100c:	pop	{fp}		; (ldr fp, [sp], #4)
   11010:	bx	lr

00011014 <vetor_elemento@@Base>:
   11014:	push	{fp}		; (str fp, [sp, #-4]!)
   11018:	add	fp, sp, #0
   1101c:	sub	sp, sp, #12
   11020:	str	r0, [fp, #-8]
   11024:	str	r1, [fp, #-12]
   11028:	ldr	r3, [fp, #-8]
   1102c:	cmp	r3, #0
   11030:	beq	11054 <vetor_elemento@@Base+0x40>
   11034:	ldr	r3, [fp, #-12]
   11038:	cmp	r3, #0
   1103c:	blt	11054 <vetor_elemento@@Base+0x40>
   11040:	ldr	r3, [fp, #-8]
   11044:	ldr	r3, [r3]
   11048:	ldr	r2, [fp, #-12]
   1104c:	cmp	r2, r3
   11050:	blt	1105c <vetor_elemento@@Base+0x48>
   11054:	mov	r3, #0
   11058:	b	11074 <vetor_elemento@@Base+0x60>
   1105c:	ldr	r3, [fp, #-8]
   11060:	ldr	r2, [r3, #8]
   11064:	ldr	r3, [fp, #-12]
   11068:	lsl	r3, r3, #2
   1106c:	add	r3, r2, r3
   11070:	ldr	r3, [r3]
   11074:	mov	r0, r3
   11078:	add	sp, fp, #0
   1107c:	pop	{fp}		; (ldr fp, [sp], #4)
   11080:	bx	lr

00011084 <vetor_insere@@Base>:
   11084:	str	r4, [sp, #-12]!
   11088:	str	fp, [sp, #4]
   1108c:	str	lr, [sp, #8]
   11090:	add	fp, sp, #8
   11094:	sub	sp, sp, #28
   11098:	str	r0, [fp, #-24]	; 0xffffffe8
   1109c:	str	r1, [fp, #-28]	; 0xffffffe4
   110a0:	str	r2, [fp, #-32]	; 0xffffffe0
   110a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110a8:	cmp	r3, #0
   110ac:	beq	110d0 <vetor_insere@@Base+0x4c>
   110b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   110b4:	cmp	r3, #0
   110b8:	blt	110d0 <vetor_insere@@Base+0x4c>
   110bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110c0:	ldr	r3, [r3]
   110c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   110c8:	cmp	r2, r3
   110cc:	ble	110d8 <vetor_insere@@Base+0x54>
   110d0:	mvn	r3, #0
   110d4:	b	11264 <vetor_insere@@Base+0x1e0>
   110d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110dc:	ldr	r2, [r3]
   110e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110e4:	ldr	r3, [r3, #4]
   110e8:	cmp	r2, r3
   110ec:	bne	11168 <vetor_insere@@Base+0xe4>
   110f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110f4:	ldr	r3, [r3, #4]
   110f8:	cmp	r3, #0
   110fc:	bne	11110 <vetor_insere@@Base+0x8c>
   11100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11104:	mov	r2, #1
   11108:	str	r2, [r3, #4]
   1110c:	b	11124 <vetor_insere@@Base+0xa0>
   11110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11114:	ldr	r3, [r3, #4]
   11118:	lsl	r2, r3, #1
   1111c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11120:	str	r2, [r3, #4]
   11124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11128:	ldr	r2, [r3, #8]
   1112c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11130:	ldr	r3, [r3, #4]
   11134:	lsl	r3, r3, #2
   11138:	mov	r1, r3
   1113c:	mov	r0, r2
   11140:	bl	109dc <realloc@plt>
   11144:	mov	r2, r0
   11148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1114c:	str	r2, [r3, #8]
   11150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11154:	ldr	r3, [r3, #8]
   11158:	cmp	r3, #0
   1115c:	bne	11168 <vetor_insere@@Base+0xe4>
   11160:	mvn	r3, #0
   11164:	b	11264 <vetor_insere@@Base+0x1e0>
   11168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1116c:	ldr	r3, [r3]
   11170:	sub	r3, r3, #1
   11174:	str	r3, [fp, #-16]
   11178:	b	111bc <vetor_insere@@Base+0x138>
   1117c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11180:	ldr	r2, [r3, #8]
   11184:	ldr	r3, [fp, #-16]
   11188:	lsl	r3, r3, #2
   1118c:	add	r2, r2, r3
   11190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11194:	ldr	r1, [r3, #8]
   11198:	ldr	r3, [fp, #-16]
   1119c:	add	r3, r3, #1
   111a0:	lsl	r3, r3, #2
   111a4:	add	r3, r1, r3
   111a8:	ldr	r2, [r2]
   111ac:	str	r2, [r3]
   111b0:	ldr	r3, [fp, #-16]
   111b4:	sub	r3, r3, #1
   111b8:	str	r3, [fp, #-16]
   111bc:	ldr	r2, [fp, #-16]
   111c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111c4:	cmp	r2, r3
   111c8:	bge	1117c <vetor_insere@@Base+0xf8>
   111cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   111d0:	bl	10a30 <strlen@plt>
   111d4:	mov	r3, r0
   111d8:	add	r0, r3, #1
   111dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111e0:	ldr	r2, [r3, #8]
   111e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111e8:	lsl	r3, r3, #2
   111ec:	add	r4, r2, r3
   111f0:	mov	r1, #1
   111f4:	bl	10994 <calloc@plt>
   111f8:	mov	r3, r0
   111fc:	str	r3, [r4]
   11200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11204:	ldr	r2, [r3, #8]
   11208:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1120c:	lsl	r3, r3, #2
   11210:	add	r3, r2, r3
   11214:	ldr	r3, [r3]
   11218:	cmp	r3, #0
   1121c:	bne	11228 <vetor_insere@@Base+0x1a4>
   11220:	mvn	r3, #0
   11224:	b	11264 <vetor_insere@@Base+0x1e0>
   11228:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1122c:	ldr	r2, [r3, #8]
   11230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11234:	lsl	r3, r3, #2
   11238:	add	r3, r2, r3
   1123c:	ldr	r3, [r3]
   11240:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11244:	mov	r0, r3
   11248:	bl	109f4 <strcpy@plt>
   1124c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11250:	ldr	r3, [r3]
   11254:	add	r2, r3, #1
   11258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1125c:	str	r2, [r3]
   11260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11264:	mov	r0, r3
   11268:	sub	sp, fp, #8
   1126c:	ldr	r4, [sp]
   11270:	ldr	fp, [sp, #4]
   11274:	add	sp, sp, #8
   11278:	pop	{pc}		; (ldr pc, [sp], #4)

0001127c <vetor_remove@@Base>:
   1127c:	str	fp, [sp, #-8]!
   11280:	str	lr, [sp, #4]
   11284:	add	fp, sp, #4
   11288:	sub	sp, sp, #16
   1128c:	str	r0, [fp, #-16]
   11290:	str	r1, [fp, #-20]	; 0xffffffec
   11294:	ldr	r3, [fp, #-16]
   11298:	cmp	r3, #0
   1129c:	beq	112c0 <vetor_remove@@Base+0x44>
   112a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   112a4:	cmp	r3, #0
   112a8:	blt	112c0 <vetor_remove@@Base+0x44>
   112ac:	ldr	r3, [fp, #-16]
   112b0:	ldr	r3, [r3]
   112b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   112b8:	cmp	r2, r3
   112bc:	blt	112c8 <vetor_remove@@Base+0x4c>
   112c0:	mvn	r3, #0
   112c4:	b	11364 <vetor_remove@@Base+0xe8>
   112c8:	ldr	r3, [fp, #-16]
   112cc:	ldr	r2, [r3, #8]
   112d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   112d4:	lsl	r3, r3, #2
   112d8:	add	r3, r2, r3
   112dc:	ldr	r3, [r3]
   112e0:	mov	r0, r3
   112e4:	bl	109b8 <free@plt>
   112e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   112ec:	add	r3, r3, #1
   112f0:	str	r3, [fp, #-8]
   112f4:	b	11338 <vetor_remove@@Base+0xbc>
   112f8:	ldr	r3, [fp, #-16]
   112fc:	ldr	r2, [r3, #8]
   11300:	ldr	r3, [fp, #-8]
   11304:	lsl	r3, r3, #2
   11308:	add	r2, r2, r3
   1130c:	ldr	r3, [fp, #-16]
   11310:	ldr	r1, [r3, #8]
   11314:	ldr	r3, [fp, #-8]
   11318:	sub	r3, r3, #-1073741823	; 0xc0000001
   1131c:	lsl	r3, r3, #2
   11320:	add	r3, r1, r3
   11324:	ldr	r2, [r2]
   11328:	str	r2, [r3]
   1132c:	ldr	r3, [fp, #-8]
   11330:	add	r3, r3, #1
   11334:	str	r3, [fp, #-8]
   11338:	ldr	r3, [fp, #-16]
   1133c:	ldr	r3, [r3]
   11340:	ldr	r2, [fp, #-8]
   11344:	cmp	r2, r3
   11348:	blt	112f8 <vetor_remove@@Base+0x7c>
   1134c:	ldr	r3, [fp, #-16]
   11350:	ldr	r3, [r3]
   11354:	sub	r2, r3, #1
   11358:	ldr	r3, [fp, #-16]
   1135c:	str	r2, [r3]
   11360:	mov	r3, #0
   11364:	mov	r0, r3
   11368:	sub	sp, fp, #4
   1136c:	ldr	fp, [sp]
   11370:	add	sp, sp, #4
   11374:	pop	{pc}		; (ldr pc, [sp], #4)

00011378 <vetor_pesquisa@@Base>:
   11378:	str	fp, [sp, #-8]!
   1137c:	str	lr, [sp, #4]
   11380:	add	fp, sp, #4
   11384:	sub	sp, sp, #16
   11388:	str	r0, [fp, #-16]
   1138c:	str	r1, [fp, #-20]	; 0xffffffec
   11390:	ldr	r3, [fp, #-16]
   11394:	cmp	r3, #0
   11398:	bne	113a4 <vetor_pesquisa@@Base+0x2c>
   1139c:	mvn	r3, #0
   113a0:	b	1140c <vetor_pesquisa@@Base+0x94>
   113a4:	mov	r3, #0
   113a8:	str	r3, [fp, #-8]
   113ac:	b	113f4 <vetor_pesquisa@@Base+0x7c>
   113b0:	ldr	r3, [fp, #-16]
   113b4:	ldr	r2, [r3, #8]
   113b8:	ldr	r3, [fp, #-8]
   113bc:	lsl	r3, r3, #2
   113c0:	add	r3, r2, r3
   113c4:	ldr	r3, [r3]
   113c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   113cc:	mov	r0, r3
   113d0:	bl	109a0 <strcmp@plt>
   113d4:	mov	r3, r0
   113d8:	cmp	r3, #0
   113dc:	bne	113e8 <vetor_pesquisa@@Base+0x70>
   113e0:	ldr	r3, [fp, #-8]
   113e4:	b	1140c <vetor_pesquisa@@Base+0x94>
   113e8:	ldr	r3, [fp, #-8]
   113ec:	add	r3, r3, #1
   113f0:	str	r3, [fp, #-8]
   113f4:	ldr	r3, [fp, #-16]
   113f8:	ldr	r3, [r3]
   113fc:	ldr	r2, [fp, #-8]
   11400:	cmp	r2, r3
   11404:	blt	113b0 <vetor_pesquisa@@Base+0x38>
   11408:	mvn	r3, #0
   1140c:	mov	r0, r3
   11410:	sub	sp, fp, #4
   11414:	ldr	fp, [sp]
   11418:	add	sp, sp, #4
   1141c:	pop	{pc}		; (ldr pc, [sp], #4)

00011420 <vetor_ordena@@Base>:
   11420:	str	fp, [sp, #-8]!
   11424:	str	lr, [sp, #4]
   11428:	add	fp, sp, #4
   1142c:	sub	sp, sp, #24
   11430:	str	r0, [fp, #-24]	; 0xffffffe8
   11434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11438:	cmp	r3, #0
   1143c:	bne	11448 <vetor_ordena@@Base+0x28>
   11440:	mvn	r3, #0
   11444:	b	1153c <vetor_ordena@@Base+0x11c>
   11448:	mov	r3, #1
   1144c:	str	r3, [fp, #-8]
   11450:	b	11524 <vetor_ordena@@Base+0x104>
   11454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11458:	ldr	r2, [r3, #8]
   1145c:	ldr	r3, [fp, #-8]
   11460:	lsl	r3, r3, #2
   11464:	add	r3, r2, r3
   11468:	ldr	r3, [r3]
   1146c:	str	r3, [fp, #-16]
   11470:	ldr	r3, [fp, #-8]
   11474:	str	r3, [fp, #-12]
   11478:	b	114bc <vetor_ordena@@Base+0x9c>
   1147c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11480:	ldr	r2, [r3, #8]
   11484:	ldr	r3, [fp, #-12]
   11488:	sub	r3, r3, #-1073741823	; 0xc0000001
   1148c:	lsl	r3, r3, #2
   11490:	add	r2, r2, r3
   11494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11498:	ldr	r1, [r3, #8]
   1149c:	ldr	r3, [fp, #-12]
   114a0:	lsl	r3, r3, #2
   114a4:	add	r3, r1, r3
   114a8:	ldr	r2, [r2]
   114ac:	str	r2, [r3]
   114b0:	ldr	r3, [fp, #-12]
   114b4:	sub	r3, r3, #1
   114b8:	str	r3, [fp, #-12]
   114bc:	ldr	r3, [fp, #-12]
   114c0:	cmp	r3, #0
   114c4:	ble	114fc <vetor_ordena@@Base+0xdc>
   114c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114cc:	ldr	r2, [r3, #8]
   114d0:	ldr	r3, [fp, #-12]
   114d4:	sub	r3, r3, #-1073741823	; 0xc0000001
   114d8:	lsl	r3, r3, #2
   114dc:	add	r3, r2, r3
   114e0:	ldr	r3, [r3]
   114e4:	mov	r1, r3
   114e8:	ldr	r0, [fp, #-16]
   114ec:	bl	109a0 <strcmp@plt>
   114f0:	mov	r3, r0
   114f4:	cmp	r3, #0
   114f8:	blt	1147c <vetor_ordena@@Base+0x5c>
   114fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11500:	ldr	r2, [r3, #8]
   11504:	ldr	r3, [fp, #-12]
   11508:	lsl	r3, r3, #2
   1150c:	add	r3, r2, r3
   11510:	ldr	r2, [fp, #-16]
   11514:	str	r2, [r3]
   11518:	ldr	r3, [fp, #-8]
   1151c:	add	r3, r3, #1
   11520:	str	r3, [fp, #-8]
   11524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11528:	ldr	r3, [r3]
   1152c:	ldr	r2, [fp, #-8]
   11530:	cmp	r2, r3
   11534:	blt	11454 <vetor_ordena@@Base+0x34>
   11538:	mov	r3, #0
   1153c:	mov	r0, r3
   11540:	sub	sp, fp, #4
   11544:	ldr	fp, [sp]
   11548:	add	sp, sp, #4
   1154c:	pop	{pc}		; (ldr pc, [sp], #4)

00011550 <vetor_concatena@@Base>:
   11550:	str	fp, [sp, #-8]!
   11554:	str	lr, [sp, #4]
   11558:	add	fp, sp, #4
   1155c:	sub	sp, sp, #16
   11560:	str	r0, [fp, #-16]
   11564:	str	r1, [fp, #-20]	; 0xffffffec
   11568:	ldr	r3, [fp, #-16]
   1156c:	cmp	r3, #0
   11570:	beq	11580 <vetor_concatena@@Base+0x30>
   11574:	ldr	r3, [fp, #-20]	; 0xffffffec
   11578:	cmp	r3, #0
   1157c:	bne	11588 <vetor_concatena@@Base+0x38>
   11580:	mov	r3, #0
   11584:	b	1161c <vetor_concatena@@Base+0xcc>
   11588:	bl	10d94 <vetor_novo@@Base>
   1158c:	str	r0, [fp, #-8]
   11590:	ldr	r3, [fp, #-20]	; 0xffffffec
   11594:	ldr	r3, [r3]
   11598:	lsl	r3, r3, #2
   1159c:	ldr	r2, [fp, #-16]
   115a0:	ldr	r2, [r2]
   115a4:	add	r3, r3, r2
   115a8:	mov	r2, r3
   115ac:	ldr	r3, [fp, #-8]
   115b0:	str	r2, [r3, #8]
   115b4:	ldr	r3, [fp, #-16]
   115b8:	ldr	r2, [r3, #4]
   115bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   115c0:	ldr	r3, [r3, #4]
   115c4:	add	r2, r2, r3
   115c8:	ldr	r3, [fp, #-8]
   115cc:	str	r2, [r3, #4]
   115d0:	ldr	r3, [fp, #-8]
   115d4:	ldr	r3, [r3, #8]
   115d8:	ldr	r2, [r3]
   115dc:	ldr	r3, [fp, #-16]
   115e0:	ldr	r3, [r3, #8]
   115e4:	ldr	r3, [r3]
   115e8:	mov	r1, r3
   115ec:	mov	r0, r2
   115f0:	bl	109f4 <strcpy@plt>
   115f4:	ldr	r3, [fp, #-8]
   115f8:	ldr	r3, [r3, #8]
   115fc:	ldr	r2, [r3]
   11600:	ldr	r3, [fp, #-20]	; 0xffffffec
   11604:	ldr	r3, [r3, #8]
   11608:	ldr	r3, [r3]
   1160c:	mov	r1, r3
   11610:	mov	r0, r2
   11614:	bl	109e8 <strcat@plt>
   11618:	ldr	r3, [fp, #-8]
   1161c:	mov	r0, r3
   11620:	sub	sp, fp, #4
   11624:	ldr	fp, [sp]
   11628:	add	sp, sp, #4
   1162c:	pop	{pc}		; (ldr pc, [sp], #4)

00011630 <vetor_inverte@@Base>:
   11630:	str	fp, [sp, #-8]!
   11634:	str	lr, [sp, #4]
   11638:	add	fp, sp, #4
   1163c:	sub	sp, sp, #24
   11640:	str	r0, [fp, #-24]	; 0xffffffe8
   11644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11648:	bl	10fd8 <vetor_tamanho@@Base>
   1164c:	str	r0, [fp, #-16]
   11650:	ldr	r3, [fp, #-16]
   11654:	str	r3, [fp, #-12]
   11658:	ldr	r3, [fp, #-16]
   1165c:	cmp	r3, #0
   11660:	ble	11710 <vetor_inverte@@Base+0xe0>
   11664:	mov	r3, #0
   11668:	str	r3, [fp, #-8]
   1166c:	b	116f0 <vetor_inverte@@Base+0xc0>
   11670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11674:	ldr	r2, [r3, #8]
   11678:	ldr	r3, [fp, #-8]
   1167c:	lsl	r3, r3, #2
   11680:	add	r3, r2, r3
   11684:	ldr	r3, [r3]
   11688:	str	r3, [fp, #-20]	; 0xffffffec
   1168c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11690:	ldr	r2, [r3, #8]
   11694:	ldr	r3, [fp, #-12]
   11698:	lsl	r3, r3, #2
   1169c:	add	r2, r2, r3
   116a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116a4:	ldr	r1, [r3, #8]
   116a8:	ldr	r3, [fp, #-8]
   116ac:	lsl	r3, r3, #2
   116b0:	add	r3, r1, r3
   116b4:	ldr	r2, [r2]
   116b8:	str	r2, [r3]
   116bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116c0:	ldr	r2, [r3, #8]
   116c4:	ldr	r3, [fp, #-12]
   116c8:	lsl	r3, r3, #2
   116cc:	add	r3, r2, r3
   116d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   116d4:	str	r2, [r3]
   116d8:	ldr	r3, [fp, #-12]
   116dc:	sub	r3, r3, #1
   116e0:	str	r3, [fp, #-12]
   116e4:	ldr	r3, [fp, #-8]
   116e8:	add	r3, r3, #1
   116ec:	str	r3, [fp, #-8]
   116f0:	ldr	r2, [fp, #-8]
   116f4:	ldr	r3, [fp, #-16]
   116f8:	cmp	r2, r3
   116fc:	bge	11710 <vetor_inverte@@Base+0xe0>
   11700:	ldr	r2, [fp, #-8]
   11704:	ldr	r3, [fp, #-12]
   11708:	cmp	r2, r3
   1170c:	blt	11670 <vetor_inverte@@Base+0x40>
   11710:	mov	r3, #0
   11714:	mov	r0, r3
   11718:	sub	sp, fp, #4
   1171c:	ldr	fp, [sp]
   11720:	add	sp, sp, #4
   11724:	pop	{pc}		; (ldr pc, [sp], #4)

00011728 <vetor_baralha@@Base>:
   11728:	str	fp, [sp, #-8]!
   1172c:	str	lr, [sp, #4]
   11730:	add	fp, sp, #4
   11734:	sub	sp, sp, #32
   11738:	str	r0, [fp, #-32]	; 0xffffffe0
   1173c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11740:	ldr	r3, [r3]
   11744:	str	r3, [fp, #-12]
   11748:	bl	10d94 <vetor_novo@@Base>
   1174c:	str	r0, [fp, #-16]
   11750:	sub	r3, fp, #24
   11754:	mov	r0, r3
   11758:	bl	109d0 <time@plt>
   1175c:	mov	r3, r0
   11760:	mov	r0, r3
   11764:	bl	10a3c <srand@plt>
   11768:	mov	r3, #0
   1176c:	str	r3, [fp, #-8]
   11770:	b	11808 <vetor_baralha@@Base+0xe0>
   11774:	bl	10a48 <rand@plt>
   11778:	mov	r2, r0
   1177c:	ldr	r3, [fp, #-12]
   11780:	add	r3, r3, #1
   11784:	sdiv	r1, r2, r3
   11788:	mul	r3, r3, r1
   1178c:	sub	r3, r2, r3
   11790:	str	r3, [fp, #-20]	; 0xffffffec
   11794:	ldr	r3, [fp, #-16]
   11798:	ldr	r2, [r3, #8]
   1179c:	ldr	r3, [fp, #-8]
   117a0:	lsl	r3, r3, #2
   117a4:	add	r3, r2, r3
   117a8:	ldr	r3, [r3]
   117ac:	str	r3, [fp, #-28]	; 0xffffffe4
   117b0:	ldr	r3, [fp, #-16]
   117b4:	ldr	r2, [r3, #8]
   117b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   117bc:	lsl	r3, r3, #2
   117c0:	add	r2, r2, r3
   117c4:	ldr	r3, [fp, #-16]
   117c8:	ldr	r1, [r3, #8]
   117cc:	ldr	r3, [fp, #-8]
   117d0:	lsl	r3, r3, #2
   117d4:	add	r3, r1, r3
   117d8:	ldr	r2, [r2]
   117dc:	str	r2, [r3]
   117e0:	ldr	r3, [fp, #-16]
   117e4:	ldr	r2, [r3, #8]
   117e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   117ec:	lsl	r3, r3, #2
   117f0:	add	r3, r2, r3
   117f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   117f8:	str	r2, [r3]
   117fc:	ldr	r3, [fp, #-8]
   11800:	add	r3, r3, #1
   11804:	str	r3, [fp, #-8]
   11808:	ldr	r2, [fp, #-8]
   1180c:	ldr	r3, [fp, #-12]
   11810:	cmp	r2, r3
   11814:	blt	11774 <vetor_baralha@@Base+0x4c>
   11818:	ldr	r3, [fp, #-16]
   1181c:	mov	r0, r3
   11820:	sub	sp, fp, #4
   11824:	ldr	fp, [sp]
   11828:	add	sp, sp, #4
   1182c:	pop	{pc}		; (ldr pc, [sp], #4)

00011830 <__libc_csu_init@@Base>:
   11830:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11834:	mov	r7, r0
   11838:	ldr	r6, [pc, #72]	; 11888 <__libc_csu_init@@Base+0x58>
   1183c:	ldr	r5, [pc, #72]	; 1188c <__libc_csu_init@@Base+0x5c>
   11840:	add	r6, pc, r6
   11844:	add	r5, pc, r5
   11848:	sub	r6, r6, r5
   1184c:	mov	r8, r1
   11850:	mov	r9, r2
   11854:	bl	10974 <calloc@plt-0x20>
   11858:	asrs	r6, r6, #2
   1185c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11860:	mov	r4, #0
   11864:	add	r4, r4, #1
   11868:	ldr	r3, [r5], #4
   1186c:	mov	r2, r9
   11870:	mov	r1, r8
   11874:	mov	r0, r7
   11878:	blx	r3
   1187c:	cmp	r6, r4
   11880:	bne	11864 <__libc_csu_init@@Base+0x34>
   11884:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11888:	andeq	r0, r1, ip, asr #13
   1188c:	andeq	r0, r1, r4, asr #13

00011890 <__libc_csu_fini@@Base>:
   11890:	bx	lr

Disassembly of section .fini:

00011894 <.fini>:
   11894:	push	{r3, lr}
   11898:	pop	{r3, pc}
