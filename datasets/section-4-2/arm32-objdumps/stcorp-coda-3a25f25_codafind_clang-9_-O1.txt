
../repos/stcorp-coda-3a25f25/codafind:     file format elf32-littlearm


Disassembly of section .init:

000109b8 <.init>:
   109b8:	push	{r3, lr}
   109bc:	bl	10b04 <_start@@Base+0x3c>
   109c0:	pop	{r3, pc}

Disassembly of section .plt:

000109c4 <coda_match_filefilter@plt-0x14>:
   109c4:	push	{lr}		; (str lr, [sp, #-4]!)
   109c8:	ldr	lr, [pc, #4]	; 109d4 <coda_match_filefilter@plt-0x4>
   109cc:	add	lr, pc, lr
   109d0:	ldr	pc, [lr, #8]!
   109d4:	andeq	r1, r1, ip, lsr #12

000109d8 <coda_match_filefilter@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #69632	; 0x11000
   109e0:	ldr	pc, [ip, #1580]!	; 0x62c

000109e4 <strcmp@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #69632	; 0x11000
   109ec:	ldr	pc, [ip, #1572]!	; 0x624

000109f0 <printf@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #69632	; 0x11000
   109f8:	ldr	pc, [ip, #1564]!	; 0x61c

000109fc <coda_set_definition_path_conditional@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #69632	; 0x11000
   10a04:	ldr	pc, [ip, #1556]!	; 0x614

00010a08 <coda_set_definition_path@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #69632	; 0x11000
   10a10:	ldr	pc, [ip, #1548]!	; 0x60c

00010a14 <fwrite@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #69632	; 0x11000
   10a1c:	ldr	pc, [ip, #1540]!	; 0x604

00010a20 <coda_done@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #69632	; 0x11000
   10a28:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a2c <puts@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #69632	; 0x11000
   10a34:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a38 <__libc_start_main@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #69632	; 0x11000
   10a40:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a44 <__gmon_start__@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a50 <exit@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a5c <fprintf@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a68 <coda_init@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a74 <coda_set_option_perform_conversions@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a80 <putchar@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a8c <coda_errno_to_string@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a98 <coda_get_libcoda_version@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1452]!	; 0x5ac

00010aa4 <coda_get_errno@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1444]!	; 0x5a4

00010ab0 <abort@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1436]!	; 0x59c

00010abc <__assert_fail@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1428]!	; 0x594

Disassembly of section .text:

00010ac8 <_start@@Base>:
   10ac8:	mov	fp, #0
   10acc:	mov	lr, #0
   10ad0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ad4:	mov	r2, sp
   10ad8:	push	{r2}		; (str r2, [sp, #-4]!)
   10adc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ae0:	ldr	ip, [pc, #16]	; 10af8 <_start@@Base+0x30>
   10ae4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ae8:	ldr	r0, [pc, #12]	; 10afc <_start@@Base+0x34>
   10aec:	ldr	r3, [pc, #12]	; 10b00 <_start@@Base+0x38>
   10af0:	bl	10a38 <__libc_start_main@plt>
   10af4:	bl	10ab0 <abort@plt>
   10af8:	andeq	r1, r1, ip, lsl #3
   10afc:	andeq	r0, r1, r4, ror #25
   10b00:	andeq	r1, r1, ip, lsr #2
   10b04:	ldr	r3, [pc, #20]	; 10b20 <_start@@Base+0x58>
   10b08:	ldr	r2, [pc, #20]	; 10b24 <_start@@Base+0x5c>
   10b0c:	add	r3, pc, r3
   10b10:	ldr	r2, [r3, r2]
   10b14:	cmp	r2, #0
   10b18:	bxeq	lr
   10b1c:	b	10a44 <__gmon_start__@plt>
   10b20:	andeq	r1, r1, ip, ror #9
   10b24:	andeq	r0, r0, ip, asr r0
   10b28:	ldr	r0, [pc, #24]	; 10b48 <_start@@Base+0x80>
   10b2c:	ldr	r3, [pc, #24]	; 10b4c <_start@@Base+0x84>
   10b30:	cmp	r3, r0
   10b34:	bxeq	lr
   10b38:	ldr	r3, [pc, #16]	; 10b50 <_start@@Base+0x88>
   10b3c:	cmp	r3, #0
   10b40:	bxeq	lr
   10b44:	bx	r3
   10b48:	andeq	r2, r2, r8, rrx
   10b4c:	andeq	r2, r2, r8, rrx
   10b50:	andeq	r0, r0, r0
   10b54:	ldr	r0, [pc, #36]	; 10b80 <_start@@Base+0xb8>
   10b58:	ldr	r1, [pc, #36]	; 10b84 <_start@@Base+0xbc>
   10b5c:	sub	r1, r1, r0
   10b60:	asr	r1, r1, #2
   10b64:	add	r1, r1, r1, lsr #31
   10b68:	asrs	r1, r1, #1
   10b6c:	bxeq	lr
   10b70:	ldr	r3, [pc, #16]	; 10b88 <_start@@Base+0xc0>
   10b74:	cmp	r3, #0
   10b78:	bxeq	lr
   10b7c:	bx	r3
   10b80:	andeq	r2, r2, r8, rrx
   10b84:	andeq	r2, r2, r8, rrx
   10b88:	andeq	r0, r0, r0
   10b8c:	push	{r4, lr}
   10b90:	ldr	r4, [pc, #24]	; 10bb0 <_start@@Base+0xe8>
   10b94:	ldrb	r3, [r4]
   10b98:	cmp	r3, #0
   10b9c:	popne	{r4, pc}
   10ba0:	bl	10b28 <_start@@Base+0x60>
   10ba4:	mov	r3, #1
   10ba8:	strb	r3, [r4]
   10bac:	pop	{r4, pc}
   10bb0:	andeq	r2, r2, ip, rrx
   10bb4:	b	10b54 <_start@@Base+0x8c>

00010bb8 <callback@@Base>:
   10bb8:	push	{r4, sl, fp, lr}
   10bbc:	add	fp, sp, #8
   10bc0:	mov	r3, r2
   10bc4:	mov	r2, r0
   10bc8:	cmp	r1, #2
   10bcc:	beq	10c6c <callback@@Base+0xb4>
   10bd0:	mov	r4, r1
   10bd4:	cmp	r1, #1
   10bd8:	beq	10ca4 <callback@@Base+0xec>
   10bdc:	cmp	r4, #0
   10be0:	beq	10c8c <callback@@Base+0xd4>
   10be4:	movw	r0, #8304	; 0x2070
   10be8:	movt	r0, #2
   10bec:	ldrb	r0, [r0]
   10bf0:	cmp	r0, #1
   10bf4:	bne	10c3c <callback@@Base+0x84>
   10bf8:	movw	r0, #4578	; 0x11e2
   10bfc:	movt	r0, #1
   10c00:	mov	r1, r2
   10c04:	bl	109f0 <printf@plt>
   10c08:	cmp	r4, #5
   10c0c:	bhi	10c64 <callback@@Base+0xac>
   10c10:	add	r0, pc, #0
   10c14:	ldr	pc, [r0, r4, lsl #2]
   10c18:	andeq	r0, r1, r4, asr #25
   10c1c:	andeq	r0, r1, r4, ror #24
   10c20:	andeq	r0, r1, r4, ror #24
   10c24:	andeq	r0, r1, r0, lsr ip
   10c28:	andeq	r0, r1, r8, asr ip
   10c2c:	andeq	r0, r1, ip, asr #24
   10c30:	movw	r0, #4853	; 0x12f5
   10c34:	movt	r0, #1
   10c38:	b	10c60 <callback@@Base+0xa8>
   10c3c:	cmp	r4, #4
   10c40:	bne	10c64 <callback@@Base+0xac>
   10c44:	mov	r0, r2
   10c48:	b	10c60 <callback@@Base+0xa8>
   10c4c:	movw	r0, #4844	; 0x12ec
   10c50:	movt	r0, #1
   10c54:	b	10c60 <callback@@Base+0xa8>
   10c58:	movw	r0, #4847	; 0x12ef
   10c5c:	movt	r0, #1
   10c60:	bl	10a2c <puts@plt>
   10c64:	mov	r0, #0
   10c68:	pop	{r4, sl, fp, pc}
   10c6c:	movw	r0, #8296	; 0x2068
   10c70:	movt	r0, #2
   10c74:	ldr	r0, [r0]
   10c78:	movw	r1, #4516	; 0x11a4
   10c7c:	movt	r1, #1
   10c80:	bl	10a5c <fprintf@plt>
   10c84:	mov	r0, #0
   10c88:	pop	{r4, sl, fp, pc}
   10c8c:	movw	r0, #8296	; 0x2068
   10c90:	movt	r0, #2
   10c94:	ldr	r0, [r0]
   10c98:	movw	r1, #4508	; 0x119c
   10c9c:	movt	r1, #1
   10ca0:	b	10cb8 <callback@@Base+0x100>
   10ca4:	movw	r0, #8296	; 0x2068
   10ca8:	movt	r0, #2
   10cac:	ldr	r0, [r0]
   10cb0:	movw	r1, #4548	; 0x11c4
   10cb4:	movt	r1, #1
   10cb8:	bl	10a5c <fprintf@plt>
   10cbc:	mov	r0, #0
   10cc0:	pop	{r4, sl, fp, pc}
   10cc4:	movw	r0, #4585	; 0x11e9
   10cc8:	movt	r0, #1
   10ccc:	movw	r1, #4587	; 0x11eb
   10cd0:	movt	r1, #1
   10cd4:	movw	r3, #4656	; 0x1230
   10cd8:	movt	r3, #1
   10cdc:	mov	r2, #110	; 0x6e
   10ce0:	bl	10abc <__assert_fail@plt>

00010ce4 <main@@Base>:
   10ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce8:	add	fp, sp, #28
   10cec:	sub	sp, sp, #12
   10cf0:	mov	r4, r1
   10cf4:	mov	r5, r0
   10cf8:	movw	r1, #8304	; 0x2070
   10cfc:	movt	r1, #2
   10d00:	mov	r0, #0
   10d04:	strb	r0, [r1]
   10d08:	cmp	r5, #1
   10d0c:	beq	10f58 <main@@Base+0x274>
   10d10:	ldr	r6, [r4, #4]
   10d14:	movw	r1, #4729	; 0x1279
   10d18:	movt	r1, #1
   10d1c:	mov	r0, r6
   10d20:	bl	109e4 <strcmp@plt>
   10d24:	cmp	r0, #0
   10d28:	beq	10f58 <main@@Base+0x274>
   10d2c:	movw	r1, #5501	; 0x157d
   10d30:	movt	r1, #1
   10d34:	mov	r0, r6
   10d38:	bl	109e4 <strcmp@plt>
   10d3c:	cmp	r0, #0
   10d40:	beq	10f58 <main@@Base+0x274>
   10d44:	movw	r1, #4732	; 0x127c
   10d48:	movt	r1, #1
   10d4c:	mov	r0, r6
   10d50:	bl	109e4 <strcmp@plt>
   10d54:	cmp	r0, #0
   10d58:	beq	10f98 <main@@Base+0x2b4>
   10d5c:	movw	r1, #5555	; 0x15b3
   10d60:	movt	r1, #1
   10d64:	mov	r0, r6
   10d68:	bl	109e4 <strcmp@plt>
   10d6c:	cmp	r0, #0
   10d70:	beq	10f98 <main@@Base+0x2b4>
   10d74:	cmp	r5, #3
   10d78:	blt	10d94 <main@@Base+0xb0>
   10d7c:	movw	r1, #4735	; 0x127f
   10d80:	movt	r1, #1
   10d84:	mov	r0, r6
   10d88:	bl	109e4 <strcmp@plt>
   10d8c:	cmp	r0, #0
   10d90:	beq	10f10 <main@@Base+0x22c>
   10d94:	ldr	r0, [r4]
   10d98:	movw	r2, #4738	; 0x1282
   10d9c:	movt	r2, #1
   10da0:	mov	r1, #0
   10da4:	bl	109fc <coda_set_definition_path_conditional@plt>
   10da8:	mov	sl, #1
   10dac:	cmp	r0, #0
   10db0:	bne	10f64 <main@@Base+0x280>
   10db4:	mov	r0, #0
   10db8:	cmp	sl, r5
   10dbc:	bge	10eb4 <main@@Base+0x1d0>
   10dc0:	str	r0, [sp, #8]
   10dc4:	movw	r6, #4775	; 0x12a7
   10dc8:	movt	r6, #1
   10dcc:	movw	r9, #5080	; 0x13d8
   10dd0:	movt	r9, #1
   10dd4:	mov	r7, #1
   10dd8:	b	10dec <main@@Base+0x108>
   10ddc:	mov	r7, #0
   10de0:	add	sl, sl, #1
   10de4:	cmp	sl, r5
   10de8:	bge	10ebc <main@@Base+0x1d8>
   10dec:	ldr	r8, [r4, sl, lsl #2]
   10df0:	mov	r0, r8
   10df4:	mov	r1, r6
   10df8:	bl	109e4 <strcmp@plt>
   10dfc:	cmp	r0, #0
   10e00:	beq	10ddc <main@@Base+0xf8>
   10e04:	mov	r0, r8
   10e08:	mov	r1, r9
   10e0c:	bl	109e4 <strcmp@plt>
   10e10:	cmp	r0, #0
   10e14:	beq	10ddc <main@@Base+0xf8>
   10e18:	mov	r0, r8
   10e1c:	movw	r1, #4778	; 0x12aa
   10e20:	movt	r1, #1
   10e24:	bl	109e4 <strcmp@plt>
   10e28:	cmp	r0, #0
   10e2c:	beq	10e48 <main@@Base+0x164>
   10e30:	mov	r0, r8
   10e34:	movw	r1, #4781	; 0x12ad
   10e38:	movt	r1, #1
   10e3c:	bl	109e4 <strcmp@plt>
   10e40:	cmp	r0, #0
   10e44:	bne	10e64 <main@@Base+0x180>
   10e48:	add	r0, sl, #1
   10e4c:	cmp	r0, r5
   10e50:	bge	10e64 <main@@Base+0x180>
   10e54:	ldr	r1, [r4, r0, lsl #2]
   10e58:	ldrb	r2, [r1]
   10e5c:	cmp	r2, #45	; 0x2d
   10e60:	bne	10ea8 <main@@Base+0x1c4>
   10e64:	mov	r0, r8
   10e68:	movw	r1, #4790	; 0x12b6
   10e6c:	movt	r1, #1
   10e70:	bl	109e4 <strcmp@plt>
   10e74:	cmp	r0, #0
   10e78:	beq	10e94 <main@@Base+0x1b0>
   10e7c:	mov	r0, r8
   10e80:	movw	r1, #4793	; 0x12b9
   10e84:	movt	r1, #1
   10e88:	bl	109e4 <strcmp@plt>
   10e8c:	cmp	r0, #0
   10e90:	bne	10f20 <main@@Base+0x23c>
   10e94:	movw	r0, #8304	; 0x2070
   10e98:	movt	r0, #2
   10e9c:	mov	r1, #1
   10ea0:	strb	r1, [r0]
   10ea4:	b	10de0 <main@@Base+0xfc>
   10ea8:	mov	sl, r0
   10eac:	str	r1, [sp, #8]
   10eb0:	b	10de0 <main@@Base+0xfc>
   10eb4:	str	r0, [sp, #8]
   10eb8:	mov	r7, #1
   10ebc:	cmp	sl, r5
   10ec0:	beq	10f2c <main@@Base+0x248>
   10ec4:	bl	10a68 <coda_init@plt>
   10ec8:	cmp	r0, #0
   10ecc:	bne	10f64 <main@@Base+0x280>
   10ed0:	mov	r0, r7
   10ed4:	bl	10a74 <coda_set_option_perform_conversions@plt>
   10ed8:	mov	r0, #0
   10edc:	str	r0, [sp]
   10ee0:	sub	r1, r5, sl
   10ee4:	add	r2, r4, sl, lsl #2
   10ee8:	movw	r3, #3000	; 0xbb8
   10eec:	movt	r3, #1
   10ef0:	ldr	r0, [sp, #8]
   10ef4:	bl	109d8 <coda_match_filefilter@plt>
   10ef8:	cmp	r0, #0
   10efc:	bne	10f64 <main@@Base+0x280>
   10f00:	bl	10a20 <coda_done@plt>
   10f04:	mov	r0, #0
   10f08:	sub	sp, fp, #28
   10f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f10:	ldr	r0, [r4, #8]
   10f14:	bl	10a08 <coda_set_definition_path@plt>
   10f18:	mov	sl, #3
   10f1c:	b	10db4 <main@@Base+0xd0>
   10f20:	ldrb	r0, [r8]
   10f24:	cmp	r0, #45	; 0x2d
   10f28:	bne	10ebc <main@@Base+0x1d8>
   10f2c:	movw	r0, #8296	; 0x2068
   10f30:	movt	r0, #2
   10f34:	ldr	r3, [r0]
   10f38:	movw	r0, #4805	; 0x12c5
   10f3c:	movt	r0, #1
   10f40:	mov	r1, #25
   10f44:	mov	r2, #1
   10f48:	bl	10a14 <fwrite@plt>
   10f4c:	bl	10fa4 <main@@Base+0x2c0>
   10f50:	mov	r0, #1
   10f54:	bl	10a50 <exit@plt>
   10f58:	bl	10fa4 <main@@Base+0x2c0>
   10f5c:	mov	r0, #0
   10f60:	bl	10a50 <exit@plt>
   10f64:	movw	r0, #8296	; 0x2068
   10f68:	movt	r0, #2
   10f6c:	ldr	r4, [r0]
   10f70:	bl	10aa4 <coda_get_errno@plt>
   10f74:	ldr	r0, [r0]
   10f78:	bl	10a8c <coda_errno_to_string@plt>
   10f7c:	mov	r2, r0
   10f80:	movw	r1, #4764	; 0x129c
   10f84:	movt	r1, #1
   10f88:	mov	r0, r4
   10f8c:	bl	10a5c <fprintf@plt>
   10f90:	mov	r0, #1
   10f94:	bl	10a50 <exit@plt>
   10f98:	bl	110f8 <main@@Base+0x414>
   10f9c:	mov	r0, #0
   10fa0:	bl	10a50 <exit@plt>
   10fa4:	push	{fp, lr}
   10fa8:	mov	fp, sp
   10fac:	movw	r0, #4873	; 0x1309
   10fb0:	movt	r0, #1
   10fb4:	bl	10a2c <puts@plt>
   10fb8:	movw	r0, #4880	; 0x1310
   10fbc:	movt	r0, #1
   10fc0:	bl	10a2c <puts@plt>
   10fc4:	movw	r0, #4945	; 0x1351
   10fc8:	movt	r0, #1
   10fcc:	bl	10a2c <puts@plt>
   10fd0:	movw	r0, #5024	; 0x13a0
   10fd4:	movt	r0, #1
   10fd8:	bl	10a2c <puts@plt>
   10fdc:	mov	r0, #10
   10fe0:	bl	10a80 <putchar@plt>
   10fe4:	movw	r0, #5047	; 0x13b7
   10fe8:	movt	r0, #1
   10fec:	bl	10a2c <puts@plt>
   10ff0:	movw	r0, #5064	; 0x13c8
   10ff4:	movt	r0, #1
   10ff8:	bl	10a2c <puts@plt>
   10ffc:	movw	r0, #5102	; 0x13ee
   11000:	movt	r0, #1
   11004:	bl	10a2c <puts@plt>
   11008:	movw	r0, #5160	; 0x1428
   1100c:	movt	r0, #1
   11010:	bl	10a2c <puts@plt>
   11014:	movw	r0, #5207	; 0x1457
   11018:	movt	r0, #1
   1101c:	bl	10a2c <puts@plt>
   11020:	movw	r0, #5279	; 0x149f
   11024:	movt	r0, #1
   11028:	bl	10a2c <puts@plt>
   1102c:	movw	r0, #5358	; 0x14ee
   11030:	movt	r0, #1
   11034:	bl	10a2c <puts@plt>
   11038:	movw	r0, #5402	; 0x151a
   1103c:	movt	r0, #1
   11040:	bl	10a2c <puts@plt>
   11044:	movw	r0, #5428	; 0x1534
   11048:	movt	r0, #1
   1104c:	bl	10a2c <puts@plt>
   11050:	mov	r0, #10
   11054:	bl	10a80 <putchar@plt>
   11058:	movw	r0, #5484	; 0x156c
   1105c:	movt	r0, #1
   11060:	bl	10a2c <puts@plt>
   11064:	movw	r0, #5508	; 0x1584
   11068:	movt	r0, #1
   1106c:	bl	10a2c <puts@plt>
   11070:	mov	r0, #10
   11074:	bl	10a80 <putchar@plt>
   11078:	movw	r0, #5538	; 0x15a2
   1107c:	movt	r0, #1
   11080:	bl	10a2c <puts@plt>
   11084:	movw	r0, #5565	; 0x15bd
   11088:	movt	r0, #1
   1108c:	bl	10a2c <puts@plt>
   11090:	mov	r0, #10
   11094:	bl	10a80 <putchar@plt>
   11098:	movw	r0, #5615	; 0x15ef
   1109c:	movt	r0, #1
   110a0:	bl	10a2c <puts@plt>
   110a4:	movw	r0, #5693	; 0x163d
   110a8:	movt	r0, #1
   110ac:	bl	10a2c <puts@plt>
   110b0:	movw	r0, #5766	; 0x1686
   110b4:	movt	r0, #1
   110b8:	bl	10a2c <puts@plt>
   110bc:	movw	r0, #5809	; 0x16b1
   110c0:	movt	r0, #1
   110c4:	bl	10a2c <puts@plt>
   110c8:	movw	r0, #5885	; 0x16fd
   110cc:	movt	r0, #1
   110d0:	bl	10a2c <puts@plt>
   110d4:	movw	r0, #5955	; 0x1743
   110d8:	movt	r0, #1
   110dc:	bl	10a2c <puts@plt>
   110e0:	movw	r0, #6018	; 0x1782
   110e4:	movt	r0, #1
   110e8:	bl	10a2c <puts@plt>
   110ec:	mov	r0, #10
   110f0:	pop	{fp, lr}
   110f4:	b	10a80 <putchar@plt>
   110f8:	push	{fp, lr}
   110fc:	mov	fp, sp
   11100:	bl	10a98 <coda_get_libcoda_version@plt>
   11104:	mov	r1, r0
   11108:	movw	r0, #4831	; 0x12df
   1110c:	movt	r0, #1
   11110:	bl	109f0 <printf@plt>
   11114:	movw	r0, #6082	; 0x17c2
   11118:	movt	r0, #1
   1111c:	bl	10a2c <puts@plt>
   11120:	mov	r0, #10
   11124:	pop	{fp, lr}
   11128:	b	10a80 <putchar@plt>

0001112c <__libc_csu_init@@Base>:
   1112c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11130:	mov	r7, r0
   11134:	ldr	r6, [pc, #72]	; 11184 <__libc_csu_init@@Base+0x58>
   11138:	ldr	r5, [pc, #72]	; 11188 <__libc_csu_init@@Base+0x5c>
   1113c:	add	r6, pc, r6
   11140:	add	r5, pc, r5
   11144:	sub	r6, r6, r5
   11148:	mov	r8, r1
   1114c:	mov	r9, r2
   11150:	bl	109b8 <coda_match_filefilter@plt-0x20>
   11154:	asrs	r6, r6, #2
   11158:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1115c:	mov	r4, #0
   11160:	add	r4, r4, #1
   11164:	ldr	r3, [r5], #4
   11168:	mov	r2, r9
   1116c:	mov	r1, r8
   11170:	mov	r0, r7
   11174:	blx	r3
   11178:	cmp	r6, r4
   1117c:	bne	11160 <__libc_csu_init@@Base+0x34>
   11180:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11184:			; <UNDEFINED> instruction: 0x00010db0
   11188:	andeq	r0, r1, r8, lsr #27

0001118c <__libc_csu_fini@@Base>:
   1118c:	bx	lr

Disassembly of section .fini:

00011190 <.fini>:
   11190:	push	{r3, lr}
   11194:	pop	{r3, pc}
